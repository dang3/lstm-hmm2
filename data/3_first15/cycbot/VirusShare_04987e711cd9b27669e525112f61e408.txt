sbb
loop
fiadds
fistpll
and
mov
and
sar
add
add
xlat
pop
fldenv
add
add
ds
add
mov
add
add
push
shll
int3
and
mov
or
inc
add
or
int3
sbb
sbb
rolb
pusha
add
pop
ds
nop
add
mov
sbb
xor
insb
sti
dec
int
rolb
dec
dec
add
gs
add
sub
stc
jne
rolb
ds
mov
sbb
and
add
hlt
add
add
add
add
inc
or
movsb
add
imul
sbb
jmp
add
sarl
leave
daa
sbb
add
loope
cmp
loop
les
jecxz
addb
into
test
jecxz
cmp
add
enter
lds
add
xor
addb
cmpsl
cltd
les
jnp
add
push
add
add
inc
ja
add
add
pop
mov
adc
out
aad
add
xor
repz
dec
lret
and
mov
fisubrs
cli
cmp
sbb
adc
add
mov
add
xor
add
test
adc
sbb
add
add
adc
jo
lret
add
sub
xor
jnp
adc
add
pop
ljmp
jno
mov
dec
enter
mov
cs
and
mov
xchg
sub
out
cs
sbb
push
add
add
add
mov
add
sub
addr16
mov
rcll
or
pop
stos
cmp
sbb
push
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
adc
sbb
mov
adc
sub
adc
insb
add
cmp
jns
xchg
iret
pop
rolb
dec
jae
std
ja
add
fsubrs
pushf
ret
hlt
add
lock
xor
fnstenv
jbe
hlt
add
xor
fisubrl
jbe
es
sub
out
or
add
push
out
fnsave
add
lea
add
add
stc
mov
call
popf
pop
ret
call
aaa
popf
pop
ret
dec
shll
add
in
ret
add
mov
enter
xor
out
ja
add
inc
add
mov
aaa
add
mov
or
add
mov
mov
add
cmp
add
mov
mov
add
mov
inc
push
push
add
aaa
add
mov
in
rolb
in
aaa
mov
add
mov
jecxz
sub
push
jecxz
das
mov
add
inc
add
mov
incb
add
add
adc
popa
sahf
inc
add
mov
add
add
cmp
add
add
mov
add
clc
jno
iret
stc
add
mov
sbb
fdivr
imul
sbb
in
rolb
clc
pop
mov
mov
mov
add
fadd
add
mov
cmp
cld
cltd
cmp
pop
lret
mov
cmp
insl
mov
cs
rolb
mov
add
or
divl
cmpsl
daa
cmovo
mov
repz
push
add
add
xchg
push
add
or
jge
add
call
add
push
add
mov
jge
add
cmp
add
cmp
add
add
mov
out
sbb
add
mov
mov
fwait
pop
call
cmp
push
call
add
xchg
add
and
sub
adc
mov
add
add
enter
add
xchg
xchg
xchg
add
les
jno
push
xchg
or
sub
add
add
dec
testb
add
add
push
clc
pop
and
add
add
out
arpl
pop
sub
add
addb
add
add
in
in
jecxz
add
mov
out
je
mov
push
cs
cs
out
fisubrs
cli
xor
add
add
inc
add
add
sub
mov
or
mov
testb
sub
repnz
push
add
or
hlt
add
fsubrp
push
add
and
dec
scas
rolb
call
mov
add
xor
sub
in
fsubrp
xchg
add
or
mov
lock
jg
push
add
add
ljmp
lock
add
fsubl
cmp
add
add
add
leave
pop
dec
data16
mov
ret
lock
test
jno
in
xor
add
jmp
addb
add
bound
mov
xor
stc
enter
nop
add
movb
cmp
lock
cmp
add
add
add
popa
addb
push
mov
sub
add
add
add
pop
call
fs
mov
mov
mov
add
inc
xchg
add
xor
pop
inc
add
and
adc
data16
sub
and
mov
add
mov
ficomps
popa
dec
mov
lock
mov
arpl
add
fbld
add
sbb
cmp
add
add
pop
lret
cs
mov
call
mov
lret
xchg
add
add
repnz
cmp
cs
in
pop
and
xchg
add
addb
js
add
adc
and
mov
and
pop
repz
xchg
out
xor
inc
cmp
add
mov
sbb
leave
sub
iret
pop
lea
and
fsub
add
add
push
add
outsl
push
push
mov
test
fwait
mov
and
in
addb
add
mov
or
pop
xchg
add
shll
mov
adc
xor
pop
cmp
push
add
add
dec
mov
cmpsl
dec
mov
stos
mov
sbb
add
dec
lea
jno
addr16
outsb
arpl
xchg
add
imul
insl
inc
add
test
in
loope
sbb
inc
adc
jns
adc
mov
sahf
pop
test
push
add
jnp
psrlw
add
les
gs
add
popf
addr16
add
dec
test
inc
add
adc
out
roll
push
add
add
popf
xchg
add
mov
inc
add
mov
pop
and
mov
add
pop
aam
jmp
lahf
xchg
pop
cwtl
fwait
mov
add
icebp
lahf
push
add
add
sub
cmp
mov
add
inc
loope
jp
add
add
add
add
add
mov
into
cmp
and
or
je
movb
and
add
add
add
add
add
mov
ds
dec
xchg
add
add
loop
adc
inc
in
cld
dec
lods
jmp
xchg
add
dec
adc
xor
sub
add
testb
sub
mov
jg
mov
inc
in
mov
add
add
add
ds
data16
jne
add
add
mov
add
xlat
hlt
add
xor
sbb
stc
mov
pop
xchg
or
add
cmp
les
sbb
add
mov
fmull
fs
add
mov
or
add
fwait
pusha
add
movsl
inc
add
fimuls
add
add
stos
and
mov
mov
fstl
test
add
jb
and
cmp
add
jb
xchg
or
add
cmp
sbb
mov
add
cltd
imul
lcall
lret
pushf
repnz
add
dec
mov
lds
add
xor
lods
jl
and
mov
dec
loope
cmpsl
adc
enter
js
lret
adc
add
hlt
add
sbb
iret
and
mov
mov
ljmp
jle
add
aad
add
mov
sti
roll
add
in
inc
add
add
ret
test
mov
insb
push
testl
inc
add
mov
add
add
jae
add
fadd
jbe
xchg
addr16
push
add
popf
dec
mov
xlat
sub
aaa
jg
pushf
dec
push
cmpsl
insb
and
out
shll
testb
add
add
add
xchg
sub
add
add
mov
inc
mov
arpl
test
rolb
adc
testb
stos
cwtl
cmp
jg
add
mov
insl
mov
aas
cmc
adc
lods
ror
pop
jnp
testb
mov
add
loope
add
mov
std
leave
ret
mov
mov
cmpsl
add
add
sar
movsl
sbb
fnstsw
adc
mov
jae
mov
or
repz
stos
inc
push
mov
inc
add
and
pop
pop
out
dec
or
or
ret
mov
lods
add
pop
out
cld
bound
mov
loopne
jmp
decl
add
add
sbb
int3
xchg
inc
xor
sub
mov
pop
sub
xchg
push
pop
mov
rolb
or
addb
xchg
add
and
mov
add
add
pop
xchg
lret
fwait
dec
adc
add
add
daa
sti
aam
lods
daa
mov
stos
repz
je
push
stos
pop
gs
add
popa
jmp
and
mov
mov
rorl
add
xchg
add
mov
pop
test
add
add
jg
imul
lds
add
add
cmpsl
gs
fldcw
scas
ret
jo
cmpsb
add
bound
mov
ds
adc
fsubrl
popa
or
dec
mov
jbe
inc
add
xor
jmp
clc
mov
imul
addb
cmpsb
add
add
sbb
mov
cmpsl
mov
repz
add
out
das
pusha
add
aam
lods
lock
add
rcll
and
add
jno
out
add
add
add
add
add
add
add
add
mov
cmp
addb
mov
in
add
mov
push
jno
cld
pop
icebp
cmp
add
aad
lea
push
add
mov
je
xchg
mov
add
xchg
jns
add
add
fidivs
arpl
add
jne
add
add
out
in
dec
sbb
xchg
add
add
xchg
add
add
add
xor
add
jno
jbe
cmc
dec
test
and
idivl
mov
cmp
pushf
aaa
cmpsb
add
aas
push
push
xchg
add
add
stos
add
add
and
mov
add
jae
movsl
and
mov
cmpsb
add
scas
pushf
add
mov
cmp
enter
pusha
add
sbb
ret
fdivr
mov
lods
add
bound
mov
add
and
mov
add
cmp
add
cmpsb
add
add
out
xchg
add
push
add
mov
add
add
and
mov
sub
mov
repnz
lea
add
pop
add
jbe
iret
jne
mov
movb
add
popf
lea
add
test
add
mov
sub
jge
mov
shrl
add
stos
cmc
and
push
push
add
loop
pop
in
in
cld
sbb
xchg
add
add
mov
mov
push
into
dec
test
pop
lcall
orl
pop
hlt
add
ds
aaa
push
ja
add
test
and
gs
mov
mov
or
add
xlat
lods
notl
mov
cltd
daa
sarl
jp
cmpl
arpl
add
cltd
adc
daa
cli
rorl
aad
lods
stc
rolb
sbb
add
push
mov
les
movsb
add
add
jbe
mov
scas
lahf
xorl
hlt
add
and
lret
xor
aaa
push
nop
add
xchg
adc
cmp
mov
mov
add
int
sbb
je
xor
and
push
add
adc
neg
rorl
lds
pop
lret
pop
xor
and
js,pt
pop
xlat
or
sbb
dec
inc
pop
ret
cmc
cli
pop
or
inc
sub
fcoml
sbb
cld
test
add
mov
mov
lods
add
mov
inc
imul
add
sub
fstps
pusha
add
leave
xchg
add
repz
stos
jno
dec
fwait
jbe
cmpsb
add
add
insl
inc
outsb
push
add
test
xor
inc
add
add
add
hlt
add
add
out
lods
xchg
add
testb
jle
adc
insb
test
add
add
xchg
mov
rolb
cmpl
jae
fnsave
add
add
add
jbe
cmp
scas
mov
add
fs
arpl
loopne
addr16
das
aaa
mov
jns
imul
push
add
jne
cmpl
aad
pop
addb
mov
or
add
xchg
imul
add
add
sbb
enter
jp
add
add
push
add
add
add
push
add
sbb
push
fninit
add
sbb
cld
sbb
leave
xchg
les
or
push
jne
add
mov
xchg
stos
add
mov
add
add
jbe
cld
dec
pop
or
add
add
push
add
in
lcall
fisubrs
xchg
dec
add
jne
outsb
inc
xor
xor
mov
pushf
bound
mov
je
movsl
inc
push
add
inc
push
xor
xor
daa
lcall
jae
add
dec
mov
jnp
cmpsl
ror
add
mov
xchg
push
rolb
sbb
insb
add
leave
add
mov
ret
hlt
add
sbb
add
fdivrl
jecxz
sbb
jle
push
add
jo
movb
int3
inc
mov
xchg
add
pop
repnz
inc
jge
add
add
out
cmpsb
add
inc
xchg
pop
inc
add
push
add
pop
jno
push
add
add
jecxz
sahf
pop
mov
repnz
push
ljmp
add
add
stos
cmp
cmp
insl
lds
ficoms
add
add
pop
clc
outsl
cmpsb
add
inc
dec
shll
mov
add
push
add
mov
fwait
popa
mov
int3
js
jae
xor
xchg
add
mov
inc
je
add
rolb
and
jno
add
dec
in
insb
popf
jmp
movb
adc
mov
loope
dec
dec
rolb
add
add
add
push
add
fnstsw
cli
in
mov
mov
jne
jmp
add
mov
add
adc
jbe
jge
mov
pop
lcall
add
mov
mov
add
add
add
pop
ja
das
and
fsub
jns
add
push
cmpsl
inc
add
mov
mov
sbb
ret
add
addb
xor
pop
xchg
repnz
mov
ret
sbb
cmpsl
dec
insb
arpl
in
andl
jecxz
maxps
iret
daa
in
inc
add
sti
aam
sub
sub
mov
scas
lods
jge
sbb
add
jno
add
repz
roll
js
and
sub
sbb
stc
jne
add
testb
cld
push
add
add
add
xchg
push
add
add
lea
mov
fwait
rcr
call
dec
inc
xorl
repnz
add
jmp
sub
sti
addr16
insl
movlps
stos
or
bound
mov
add
adc
xorl
add
pop
pop
jl
mov
in
xor
mov
dec
jg
add
xchg
add
xchg
add
das
lret
icebp
adc
mov
inc
add
test
mov
push
addb
out
push
pop
adc
add
dec
cld
adc
in
lock
cmp
cld
inc
cld
rcll
add
push
add
test
add
iret
movaps
cld
sub
add
mov
sbb
sub
je
std
push
inc
add
add
add
mov
dec
aaa
mov
add
mov
sub
push
mov
or
leave
add
mov
add
movb
add
out
and
mov
xchg
add
add
add
test
add
jns
add
aaa
dec
movsb
add
xchg
sbb
add
add
mov
add
movsl
ret
out
inc
add
dec
add
inc
add
daa
adc
push
jbe
adcl
xchg
add
repnz
in
hlt
add
neg
dec
push
add
mov
mov
jecxz
add
lret
jge
pop
movsl
addb
xor
mov
repnz
mov
jae
push
pop
repz
xlat
xor
daa
jg
jl
cld
shll
hlt
add
and
es
add
inc
add
imul
add
ds
add
jmp
nop
add
jo
imul
aaa
inc
add
mov
sub
in
add
lea
jne
pushf
aaa
inc
add
push
call
add
inc
fimull
mov
add
jne
add
add
mov
mov
add
testb
add
insb
hlt
add
push
outsl
ds
xchg
add
add
add
scas
push
add
aas
imul
test
mov
les
inc
add
dec
sti
mov
call
in
stc
sti
addb
mov
ljmp
xor
cwtl
mov
test
push
add
or
push
push
or
arpl
adc
dec
stos
add
mov
add
subl
xchg
mov
add
inc
jns
mov
aas
hlt
add
push
mov
push
add
add
jl
jb
cmp
test
repnz
stos
fldenv
outsl
outsl
cmpsb
add
ret
add
add
in
mov
push
xchg
cli
inc
test
push
add
mov
jae
push
add
add
mov
js
cmpsl
xlat
sbb
ja
add
aas
inc
lock
out
fwait
lods
jg
pop
movb
inc
lcall
jp
mov
movsb
add
out
adc
stos
out
and
add
mov
out
jge
jg
add
add
xchg
add
mov
xchg
xor
iret
stos
pop
push
mov
sbb
inc
add
inc
add
xchg
mov
dec
xchg
add
mov
add
add
mov
pusha
add
xor
mov
movsb
add
out
mov
add
push
add
jne
cmp
sbb
add
add
add
inc
add
mov
cld
and
stos
mov
mov
sbb
add
add
add
rolb
add
add
add
add
mov
jl
fimuls
popf
adc
add
into
sub
mov
xchg
mov
push
into
xchg
not
jne
pop
stos
bound
mov
fstl
popa
or
lahf
dec
sbb
push
and
mov
xchg
fsubrl
out
dec
sub
jb
std
test
mov
lock
cli
dec
aas
xchg
ja
fidivs
addb
pop
adc
xchg
je
mov
dec
xchg
add
aad
sar
jb
adc
xor
dec
into
sarl
add
add
mov
add
mov
cltd
lret
pop
js
ret
pop
or
add
and
add
jo
out
push
ljmp
mov
sar
pop
jae
xor
pcmpgtw
adc
scas
jge
add
stos
or
dec
push
sbb
std
push
add
outsb
mov
add
add
std
sarl
data16
lods
mov
bound
mov
add
aam
or
adc
adc
test
movsl
lea
addb
add
pop
cmpsb
add
jl
scas
fimull
mov
or
add
dec
sub
shll
mov
add
mov
addb
add
or
fisttpll
add
aam
add
mov
pop
lret
xlat
les
mov
rolb
loop
push
add
push
add
daa
xor
and
and
add
testb
int3
jae
add
mov
lock
scas
mov
add
jno
stos
loope
sbb
movb
mov
add
add
add
movb
andl
outsl
xor
cmc
add
popf
rolb
mull
lahf
popa
lahf
aad
cltd
inc
rolb
adc
in
xor
add
inc
adc
add
mov
cli
sub
pushf
ffreep
add
lea
xchg
scas
out
adc
add
mov
cmpsb
add
lods
pop
push
add
cmp
add
lahf
ret
loope
pop
dec
jle
icebp
lcall
add
ja
add
sbb
add
cld
and
mov
adc
add
ror
outsb
sbb
add
adc
test
dec
add
push
xor
std
test
add
std
xchg
out
repz
mov
addb
addb
push
push
adc
mov
in
jmp
mov
sbb
add
adc
test
add
fmuls
add
jnp
add
mov
sahf
fldl
test
inc
pop
xchg
test
pushf
data16
xchg
jp
mov
add
xchg
push
add
push
add
push
xchg
add
add
or
pop
xlat
pusha
add
add
sarl
rcl
rolb
out
arpl
ljmp
fiaddl
addb
xor
cmp
add
test
push
loope
roll
add
add
pop
add
test
pusha
add
xor
add
mov
ljmp
dec
mov
jns
add
dec
fstpl
cld
mov
jo
jg
add
xor
push
add
sbb
js
aaa
in
adc
jbe
enter
pop
xchg
aam
mov
push
repnz
push
add
add
add
add
add
add
loope
sti
js
sti
and
mov
test
or
mov
add
jp
xor
mov
add
imul
add
add
jg
cmp
add
addr16
add
scas
in
js
out
mov
cmp
movb
insl
xchg
add
add
add
and
mov
xor
jmp
mov
push
add
fbstp
xor
adc
jle
add
mov
add
add
add
lods
in
and
mov
sub
jne
jbe
sahf
mov
jb
scas
add
clc
rolb
adc
adc
add
push
adc
rolb
add
add
or
xor
add
add
testb
add
arpl
add
test
push
push
add
add
cld
clc
testl
pop
arpl
push
andl
or
add
ret
cmp
dec
test
add
add
stc
push
mov
add
cmc
rcll
out
add
add
xor
cmp
inc
rolb
mov
mov
cltd
enter
or
dec
sbb
add
int
xchg
push
cli
push
xor
or
pop
pop
cli
add
add
mov
xor
mov
or
or
add
add
inc
add
xchg
ret
jg
push
add
or
add
add
pop
insb
and
or
add
add
or
cmp
roll
add
cli
mov
rep
mov
fnstenv
add
jmp
push
add
enter
rolb
jecxz
sub
sbb
cmp
add
outsl
les
add
mov
shrd
add
add
xchg
cmc
push
lret
cltd
call
int3
dec
xchg
mov
add
add
mov
push
jle
xor
and
pushf
pusha
add
insb
mov
adc
mov
xlat
test
or
add
add
pushf
jp
fsub
fdivrl
jecxz
fdivrs
and
das
xlat
dec
std
inc
add
outsb
addb
add
add
addb
test
add
and
mov
sbb
shr
xchg
add
xor
cmc
xor
in
xchg
gs
cltd
cmpsl
push
jl
mov
sub
mov
push
add
cmpsl
xchg
push
call
mov
add
dec
cmp
pop
test
sub
adc
jmp
lret
lahf
push
inc
add
sbb
jb
out
jae
aas
arpl
add
push
add
shl
add
add
mov
add
add
repz
or
fcompl
cwtl
push
movsb
add
stos
push
iret
clc
in
pop
movb
mov
add
decb
push
and
dec
das
arpl
call
mov
add
jmp
addr16
add
push
mov
adc
and
data16
add
jg
add
xchg
xor
shll
add
add
dec
aas
xchg
and
mov
jmp
add
popf
adc
mov
add
cmc
pop
insb
aas
push
mov
sub
or
testb
add
cmp
mov
jp
ds
pop
add
and
mov
pusha
add
orl
test
add
sbb
add
hlt
add
inc
and
pushf
cwtl
mov
cmp
aaa
das
pop
sbb
add
add
mov
aas
cld
fidivs
mov
add
mov
add
hlt
add
movsb
add
inc
rolb
mov
into
adc
std
sub
sbb
mov
mov
sub
jp
fiadds
add
cmp
dec
mov
inc
add
outsl
out
test
push
push
add
mov
int
jmp
movsb
add
add
insl
mov
cmp
add
add
add
push
add
push
sbb
out
pop
or
cmpsb
add
add
mov
xor
adc
mov
add
add
bound
mov
xor
repnz
adcl
sbb
stos
data16
into
mov
mov
int3
sbb
add
divl
pop
scas
mov
scas
and
mov
pushf
xchg
add
enter
int3
test
add
mov
cmp
mov
inc
add
mov
cmp
add
sub
xchg
cmp
add
cli
cmp
add
add
scas
addb
add
cmpsl
ljmp
fwait
aad
cmp
adc
hlt
add
add
add
mov
adc
add
add
bound
mov
imul
mov
push
add
pop
pop
xor
es
test
das
lock
xor
ds
out
addb
add
adcl
sbb
add
jg
add
mov
sbb
lahf
jb
fisttpl
inc
add
add
leave
mov
sbb
add
fwait
data16
add
xor
into
sub
lret
inc
dec
sub
mov
adc
cmp
mov
add
dec
push
mov
push
inc
add
ret
pushf
lea
inc
add
add
xor
frstor
add
cwtl
addb
fldl
mov
jo
test
jecxz
add
add
jo
push
jae
add
repnz
call
xor
mov
add
add
add
mov
pop
shll
in
lods
rolb
aaa
mov
movsl
xchg
xchg
adc
pop
push
add
xor
addb
in
xor
jmp
lods
jo
push
and
mov
lret
addb
pop
push
pop
mov
lods
xor
add
add
mov
fisttpll
add
add
fdivs
xchg
add
into
cmc
push
addb
add
lds
xchg
add
add
inc
shll
mov
xlat
pop
rolb
or
add
add
add
add
push
add
xlat
stc
popa
fcomi
add
or
in
jmp
add
lea
xchg
sti
fisubs
mov
sub
add
or
test
add
scas
test
push
add
push
add
xchg
add
add
mov
adc
mov
add
add
inc
aas
pop
mov
push
jle
testl
cmp
xchg
add
adc
insl
ss
add
add
jmp
ja
sbb
add
mov
add
scas
roll
mov
cld
mov
push
add
add
mov
rolb
mov
sub
xor
jg
cmp
out
cmp
enter
add
addb
sbb
push
daa
pop
push
int
fwait
stos
insl
les
mov
add
imul
fwait
push
mov
mov
add
cmp
add
in
sarl
lcall
xchg
xchg
imul
inc
xor
xchg
add
adc
add
int
add
add
mov
data16
add
pop
pop
pop
testb
mov
add
mov
jns
push
cmp
inc
cmp
push
jo
xor
xor
xlat
jge
stos
out
inc
adc
mov
add
add
add
add
inc
jnp
fstp
in
divl
test
cmpsb
add
popa
xchg
add
mov
sub
add
add
leave
out
jmp
jbe
insb
pop
push
jp
add
add
mov
lea
fimuls
push
add
xchg
mov
add
pop
push
jg
push
pop
xchg
add
inc
outsl
scas
rolb
in
or
mov
js
ja
fsubs
or
pop
add
push
add
cwtl
fisttpl
shll
mov
sub
mov
inc
add
jg
add
add
cmpsl
in
fwait
mov
add
rep
push
sub
add
pop
in
arpl
mov
dec
sub
add
lcall
testb
and
dec
inc
push
add
jns
cmp
or
inc
adc
add
xor
add
add
ja
gs
push
or
add
or
adc
imul
add
jns
xchg
pop
mov
add
add
std
iret
filds
mov
add
add
add
xchg
add
add
add
clc
sahf
mov
pop
sbb
add
jge
mov
xchg
movsl
sbb
add
data16
and
in
aam
mov
fidivrs
testb
testb
insl
addb
scas
rolb
cmp
mov
mov
out
cwtl
or
sbb
mov
mov
add
jmp
dec
adc
fstenv
add
sub
loope
fbstp
add
in
add
jo
fs
add
mov
data16
outsl
cmpsl
cmp
and
mov
add
xchg
mov
sub
xor
and
stc
and
mov
mov
jne
add
jmp
add
fs
add
enter
add
xchg
add
add
add
add
add
push
add
fnstcw
add
xchg
decb
add
roll
dec
jge
mov
or
mov
mov
arpl
add
popa
jg
dec
or
add
mov
add
push
fcompl
lea
xchg
fwait
and
mov
loopne
icebp
xlat
push
push
add
jno
mov
enter
pop
addr16
fprem
jns
xor
add
aam
aad
inc
ret
add
mov
add
mov
jg
sbb
add
add
cmp
addb
movsb
add
jp
mov
aaa
jg
add
add
add
in
data16
outsb
lods
push
js
bound
mov
add
int3
addb
add
push
out
pop
add
or
cmp
push
xchg
aad
cmp
test
inc
jb
pop
addb
stos
jno
adc
sbb
xor
gs
push
add
sbb
add
shll
cmpsb
add
jo
push
push
dec
js
push
add
mov
inc
add
cmp
add
add
add
mov
jns
add
adc
add
push
daa
pop
mov
std
imul
ljmp
add
add
test
add
add
add
jp
push
loopne
sub
push
cmpsb
add
mov
add
and
sbb
add
mov
add
dec
add
add
int
mov
add
push
sbb
add
mov
mov
mov
add
add
push
and
xor
cli
fxtract
add
or
int
js
add
insb
test
sub
jnp
sub
mov
dec
out
gs
mov
movsb
add
cmp
dec
and
mov
mov
add
loop
lcall
dec
movsl
cmpsb
add
add
add
mov
cmp
das
add
add
add
gs
add
cmp
push
add
add
jmp
add
add
inc
ljmp
stc
pushf
xor
jg
add
jns
insl
mov
adc
jp
inc
add
inc
add
lret
add
add
add
add
jne
add
mov
xor
sub
inc
add
add
outsb
push
int
adc
xchg
add
adc
in
rolb
jg
stc
push
add
fdivrl
add
mov
jbe
mov
add
cmp
xchg
add
fcmovne
imul
mov
clc
movsb
add
xchg
add
add
ljmp
pop
lods
data16
mov
pop
push
add
add
outsb
pop
mov
add
faddl
or
nop
add
nop
inc
ret
cs
add
xlat
push
mov
cmpsb
add
jb
fs
mov
cmp
repnz
pop
inc
push
xchg
add
sub
xlat
jmp
add
data16
add
or
setb
mov
mov
in
add
mov
add
push
sbb
mov
mov
dec
testb
bound
mov
mov
jle
ds
out
add
rolb
fimull
adc
dec
test
add
add
fcmovb
jecxz
add
out
andl
cs
mov
dec
sub
add
pop
nop
add
add
js
ret
les
mov
add
jg
add
add
cmc
add
icebp
inc
add
add
repnz
jg
cmpsb
add
sti
fdivs
cmpsb
add
nop
add
add
aad
mov
add
add
rolb
or
sbb
mov
mov
imul
mov
lock
jp
cmp
add
add
fadds
outsb
mov
and
add
push
add
stc
push
add
mov
fidivrs
lods
jb
mov
mov
jecxz
add
mov
add
out
pop
fucomi
lods
jl
addl
enter
jg
add
or
jp
and
mov
pop
loope
test
mov
outsl
mov
leave
mov
push
cmp
sbb
dec
dec
push
cltd
out
ret
mov
pop
add
xor
repnz
add
adc
add
out
loope
add
iret
in
mov
mov
or
push
jg
push
add
pop
popf
add
and
mov
push
add
loope
fdivl
add
add
fsubl
clc
imul
add
pop
adc
call
add
ret
add
pop
cmp
add
add
push
ja
add
add
movsl
sub
dec
add
add
add
mov
add
xor
mov
add
dec
aaa
inc
repnz
neg
mov
push
test
sbb
sbb
mov
lods
ret
adc
xchg
xor
mov
cmc
inc
sti
mov
gs
aaa
xchg
add
outsl
std
cmp
add
rolb
pusha
add
popf
dec
movsl
fmull
pusha
add
das
call
mov
add
pop
das
jae
dec
nop
add
test
addb
push
fisubrs
xor
push
call
addb
add
jl
out
rolb
mov
stos
hlt
add
xorl
add
mov
insb
loopne
lcall
jno
jg
xlat
loope
mov
mov
enter
leave
in
and
rolb
push
push
pop
inc
add
out
fldt
pop
cmp
add
mov
add
add
shll
pop
test
add
add
add
pop
inc
lret
mov
add
xor
mov
add
push
add
lds
inc
add
outsb
std
xchg
test
add
mov
data16
pop
lods
xor
pop
pop
arpl
pushf
dec
add
outsl
add
add
outsb
xchg
int
cmc
jecxz
ret
jle
scas
out
dec
je
out
in
testb
rol
pop
in
dec
stos
ja
add
jae
push
add
pop
cmpsb
add
decb
sti
jno
add
add
repnz
std
aam
cmpsl
sub
mov
mov
rcrl
in
dec
pop
sub
mov
dec
push
add
dec
je
sub
jmp
add
gs
fcompl
add
mov
loopne
mov
mov
sub
add
mov
add
popa
sub
mov
add
popa
fcompl
daa
popa
testl
arpl
mov
push
mov
pop
sub
sbb
add
and
adc
adc
add
test
fisttps
inc
add
fscale
rep
xchg
jne
stos
mov
add
jg
aam
dec
roll
push
xor
mov
add
jb
pop
cmp
ljmp
ja
mov
jp
loope
je
mov
push
add
add
fdivrl
pop
and
mov
add
rcl
add
call
add
addb
sbb
and
jno
mov
rolb
push
jb
push
add
add
scas
in
les
add
push
movsl
jbe
xor
xchg
ja
cmp
ret
das
testl
pusha
add
add
pop
out
testb
aad
xlat
mov
add
dec
lcall
cmp
cmc
popf
ja
dec
add
pop
xor
add
add
xor
ret
dec
mov
push
add
mov
add
sub
daa
in
sub
inc
add
push
mov
cmpsl
pop
push
add
push
jp
fwait
xchg
push
add
add
pop
mov
or
inc
sub
add
add
add
repnz
pop
clc
dec
cmc
push
dec
shl
sub
ds
mov
xchg
cmp
and
mov
mov
add
out
ljmp
lods
cli
cmpsl
out
adc
mov
add
dec
adc
add
xor
adc
adc
popa
mov
sbb
xchg
pop
addb
mov
sub
add
bound
mov
inc
aaa
push
add
add
addr16
add
add
fmul
xchg
add
fistl
push
leave
addb
add
nop
add
outsb
hlt
add
add
add
popa
rolb
jl
rolb
js
movb
add
ljmp
add
fcmovnb
add
add
add
in
adc
clc
add
inc
add
data16
pop
jl
xchg
addb
jo
adc
fdivl
das
fsubr
xor
dec
add
add
cmp
loopne
lods
ficoms
add
xor
ljmp
subl
add
add
mov
out
stc
cli
pop
cmp
ja
xchg
add
add
add
mov
sahf
mov
ljmp
sub
add
test
sbb
add
fimuls
adc
xor
mov
add
add
out
inc
testb
add
or
sbb
add
add
mov
mov
ljmp
lcall
int3
in
dec
xchg
cmc
insb
js
add
scas
scas
add
add
jns
dec
std
jge
in
mov
lahf
jno
lret
add
loope
cmpl
inc
add
add
jns
add
push
add
add
dec
loop
pusha
add
cmp
push
gs
add
pop
fisubrl
add
jb
push
add
inc
push
add
aam
repnz
fwait
mov
add
add
inc
add
lock
lcall
rolb
xchg
pop
fwait
repz
pop
sbb
movsl
addb
push
sbb
das
ret
jne
lahf
daa
push
addb
add
lcall
jl
cmpsl
lock
sbb
add
push
sbb
lcall
jns
and
test
mov
add
add
mov
in
add
lea
cmp
xchg
add
mov
clc
out
rolb
popa
add
mov
add
mov
mov
repz
add
sbb
add
mov
inc
push
out
mov
sub
js
push
test
add
and
in
stc
xchg
cmp
xor
add
add
pop
inc
shll
add
mov
lds
add
xchg
mov
mov
push
out
hlt
add
ss
add
rolb
jl
add
push
adc
scas
jmp
pop
dec
xchg
sub
add
jle
mov
jp
cli
pusha
add
mov
inc
aad
fiaddl
fadd
add
dec
test
mov
add
hlt
add
js
add
lahf
cmp
add
add
inc
add
mov
push
sub
les
and
outsb
pusha
add
mov
xor
lods
cmpsb
add
pop
mov
mov
inc
fnsave
mov
add
add
rolb
into
mov
pop
push
hlt
add
add
rolb
insl
mov
add
lock
mov
enter
dec
in
ja
push
add
insb
dec
jo
pop
fwait
js
pop
fimuls
and
mov
popl
outsb
dec
pusha
add
mov
sub
sub
aam
fwait
xor
mov
inc
add
test
add
xchg
add
hlt
add
insl
push
xchg
add
cmp
adc
pop
or
jl
mov
xchg
add
roll
add
fs
mov
movsb
add
xchg
leave
inc
sub
add
arpl
lock
pop
adc
add
add
add
int
mov
out
icebp
sub
mov
add
inc
lea
sub
dec
das
add
enter
mov
add
mov
repnz
add
add
add
xchg
mov
xor
pop
bound
mov
add
xor
and
and
mov
add
mov
repnz
jp
das
std
roll
lret
pushf
add
stos
pop
adc
cmpsl
scas
pop
popf
scas
sub
in
mov
add
and
popa
push
fsub
sub
add
jbe
jns
add
add
lcall
sub
add
aas
sub
add
cmpsb
add
fistl
xor
add
jnp
add
jbe
bsr
icebp
into
mov
jno
sub
stc
mov
and
sbbl
add
jp
dec
cmpsl
lds
addb
mov
test
adc
adc
and
mov
or
add
add
dec
outsb
fimull
sub
clc
rolb
sub
push
fisubs
adc
pop
cmp
or
out
imull
iret
jl
sbb
bound
mov
out
push
add
pop
add
out
outsb
into
inc
add
mov
ret
sbb
add
adc
add
and
or
addb
add
loop
lock
leave
loopne
push
faddl
mov
dec
push
add
xchg
out
lea
dec
sahf
into
sbb
add
fimuls
pop
addb
add
ffree
add
xor
pusha
add
lcall
add
jns
add
add
add
scas
xchg
and
cmpsl
push
insb
jb
lock
ds
add
add
hlt
add
outsl
int3
pop
rolb
xlat
pop
lds
flds
xor
inc
sub
lea
xchg
sub
imul
into
popf
jae
mov
add
add
popf
repnz
add
lret
jecxz
xchg
dec
insl
dec
shrl
dec
fcoms
in
fchs
add
add
push
add
xchg
add
out
inc
add
loopne
add
add
add
add
add
add
mov
sbb
stc
xchg
add
lcall
add
rorl
and
mov
add
or
add
mov
movsb
add
push
add
add
mov
add
jg
add
add
in
addr16
xchg
push
in
mov
sti
dec
daa
adc
jmp
inc
out
add
xor
insl
cmpsb
add
pop
push
push
lock
decb
sub
add
aam
inc
add
sbb
inc
mov
adc
add
pusha
add
lock
rolb
aad
add
lret
in
sub
add
fdivrp
xchg
test
sbb
add
push
add
add
insb
out
loopne
aad
adc
into
dec
aad
mov
mov
add
adc
xchg
sub
add
push
cwtl
sub
mov
add
add
add
dec
add
loop
inc
or
add
jp
or
dec
sbb
and
xchg
aam
in
xchg
mov
add
filds
adc
inc
iret
enter
movb
add
mov
and
lods
mov
adc
jle
fs
add
lcall
xchg
stos
inc
movsb
add
add
xor
nop
add
mov
add
add
add
add
cmp
add
jl
pop
nop
add
jle
cmp
add
jg
pop
out
adc
dec
push
mov
pop
jge
inc
mov
aad
inc
gs
loop
push
sbb
cmp
pop
mov
pop
in
mov
loopne
or
popf
xchg
nop
add
add
xor
je
mov
push
cwtl
mov
inc
rolb
mov
int3
stos
add
mov
loope
mov
mov
rolb
pop
cmp
les
xchg
add
add
pusha
add
sbb
add
pop
push
add
or
ljmp
insb
add
aam
pusha
add
loop
ljmp
add
mov
add
jle
xchg
xor
xor
add
add
sub
add
sub
movsb
add
jb
test
or
jnp
insl
add
add
js
add
pop
adc
jae
dec
push
add
iret
andnps
xchg
push
cld
ljmp
mov
jg
cld
cmpsb
add
les
pop
or
lret
inc
add
loopne
or
add
and
push
add
fdivl
mov
dec
fisttpll
mov
jbe
rcr
andl
mov
jg
loope
mov
add
movb
add
lret
pop
cltd
push
pop
and
mov
fdivl
pop
sbb
jbe
mov
mov
adc
sbb
jmp
xchg
mov
push
stc
fstl
or
add
imul
push
cld
les
das
sahf
testb
add
lock
inc
dec
cld
mov
outsb
inc
cmp
shr
addr16
lds
loopne
scas
and
add
ljmp
movb
add
push
test
push
add
cli
mov
add
add
in
push
add
add
pop
xchg
add
add
push
add
js
stos
daa
dec
dec
popa
testb
mov
mov
lret
mov
mov
insl
and
mov
add
mov
mov
inc
add
sbb
add
addb
cmpsb
add
and
add
sub
jge
pop
sub
ret
add
push
add
test
xchg
push
adc
out
lds
sbb
mov
inc
hlt
add
pop
xchg
add
and
testb
xchg
xlat
and
clc
rolb
mov
jae
jno
mov
lret
inc
test
inc
add
loopne
pushf
pusha
add
push
jle
add
scas
xchg
ficompl
and
mov
int3
mov
add
cmc
jb
jg
lods
aam
cmp
addb
cli
push
add
add
mov
add
inc
pusha
add
arpl
lcall
addb
pop
test
mov
xor
cmp
xor
add
mov
adc
add
mov
jle
add
add
add
enter
pop
or
sub
jae
push
xchg
insl
enter
xchg
add
add
add
add
add
and
inc
iret
cmp
add
xor
dec
xchg
jns
xchg
sbb
add
adc
outsb
rolb
mov
or
icebp
add
in
sub
add
mov
movsb
add
push
sbb
stos
cmpl
scas
decl
sbb
add
jno
add
add
add
je
or
add
aas
pop
sbb
xchg
lret
jne
add
addb
add
pop
xchg
addl
and
ds
mov
add
add
add
add
xchg
add
inc
jmp
outsl
mov
add
lahf
stos
push
add
adc
mov
js
dec
fistpll
adc
mov
jmp
jne
jo
xchg
add
add
xlat
cwtl
or
addr16
test
loope
add
sub
adc
std
sbb
movsl
pop
scas
dec
out
xchg
add
jae
out
sub
add
inc
add
int3
fidivl
test
xchg
adc
mov
cld
xchg
and
inc
add
push
add
testb
mov
add
iret
xchg
and
mov
jecxz
xchg
add
jns
scas
outsl
lods
aas
dec
cmpsl
mov
add
mov
dec
scas
adc
add
mov
sbb
add
add
add
add
dec
mov
pop
sub
mov
mov
test
sahf
adc
sub
xcrypt-ofb
cmpsl
lods
cmp
rol
lcall
cmp
cli
push
sti
xor
add
mov
data16
daa
inc
add
add
mov
add
add
addb
pop
aad
sbb
add
fists
cltd
xor
or
mov
mov
inc
aas
pop
adc
gs
scas
lods
sbb
add
add
add
testb
mov
cmpsl
cmc
les
inc
add
int3
add
add
inc
add
add
cmpsl
inc
add
loop
push
add
sbb
dec
sub
mov
push
cs
js
cmp
mov
cmp
test
xor
scas
mov
mov
pusha
add
int
add
jle
and
mov
rorl
arpl
add
add
mov
adc
jle
add
add
sub
out
cmp
addb
call
add
add
add
jl
add
in
add
xchg
jl
ret
inc
ja
add
mov
add
mov
jmp
add
repz
jbe
ret
repnz
cmpsl
fwait
jae
mov
stos
lahf
test
loop
lods
mov
add
imul
add
fwait
xchg
add
out
outsb
sahf
testb
in
pusha
add
mov
cmpl
add
add
scas
push
add
jp
in
inc
rolb
pop
enter
add
pushf
data16
js
add
dec
jae
add
jl
add
ljmp
add
push
add
in
xchg
add
sti
xor
mov
adc
add
fdiv
xchg
add
cmc
rolb
ja
cmpsl
clc
call
add
xchg
mov
stos
test
jle
add
lods
aam
sahf
jne
ljmp
add
add
add
and
jae
pop
dec
pusha
add
icebp
mov
enter
add
add
imul
add
push
scas
cli
repnz
outsb
out
inc
add
jp
cli
clc
xchg
add
lea
add
mov
lahf
clts
add
add
mov
add
mov
add
add
xor
test
xchg
jae
or
add
add
and
in
out
addr16
jns
add
add
cmp
outsb
data16
mov
cmp
dec
mov
and
add
cld
dec
xchg
add
add
or
popa
mov
imul
aad
lock
xor
roll
fldt
xor
cmp
testl
mov
add
rolb
addb
add
add
add
dec
jg
pop
ret
pop
dec
jo
sub
ret
add
add
mov
push
mull
jge
stos
cwtl
lret
mov
test
lret
pop
imul
out
call
nop
add
imull
lods
scas
adc
lahf
cmpsb
add
add
add
cli
aas
dec
enter
lahf
xchg
das
xchg
enter
sbb
xor
stos
push
lods
mov
add
inc
add
add
push
fmuls
and
daa
dec
lds
enter
hlt
add
add
add
mov
andl
mov
rolb
out
jae
add
add
mov
inc
add
pop
or
mov
or
add
mov
pop
cmp
dec
testb
mov
jecxz
jae
pop
add
mov
repz
daa
filds
les
nop
add
data16
sub
lret
jne
cmp
add
lret
add
aam
jno
int3
ja
add
mov
popf
iret
in
sbb
nop
add
jecxz
inc
add
sbb
mov
xor
loop
and
lock
testb
add
add
sub
add
adc
push
add
add
mov
add
add
inc
add
add
mov
push
add
cmp
addr16
add
jae
cli
arpl
add
jbe
das
adc
int3
daa
jo
push
add
xor
lods
rcl
xor
pop
add
adc
add
or
mov
bound
mov
cmp
and
dec
dec
adc
into
xor
sub
and
mov
lods
out
push
sbb
arpl
add
add
add
cs
inc
out
adc
mov
outsl
pop
hlt
add
push
add
jecxz
pop
js
pop
mov
add
sub
add
xor
and
add
fdivl
movb
and
cmp
and
add
sub
arpl
daa
mov
jne
xor
dec
or
les
inc
mov
stos
lea
mov
add
mov
dec
lods
push
add
dec
hlt
add
or
add
cmpsb
add
mov
inc
mov
push
lea
lock
mov
xlat
cmp
es
add
add
inc
cmp
imul
add
cmp
add
add
add
test
add
add
xor
addb
bound
mov
into
mov
cmp
add
add
add
jle
inc
add
lret
rorl
fisttpll
add
mov
xchg
push
sbbl
sbb
in
add
mov
add
xor
cmp
leave
sub
add
aam
dec
xchg
add
popa
in
push
add
mov
out
add
mov
popa
les
movsb
add
and
add
mov
add
ja
shrl
fnstsw
add
test
add
or
add
icebp
adc
outsb
out
mov
rolb
sub
repz
add
repz
mov
mov
mov
mov
mov
add
jbe
sbb
mov
lods
or
add
add
mov
sub
jno
push
mov
mov
add
enter
repnz
add
and
out
adc
inc
add
xchg
hlt
add
imul
mov
je
mov
in
and
jecxz
cs
daa
mov
roll
in
lds
sbb
add
or
cmp
inc
in
adc
push
mov
push
dec
ss
add
add
mov
push
or
xchg
sahf
cwtl
add
loopne
rolb
add
mov
jns
add
add
cmp
inc
add
inc
insb
inc
dec
dec
fbld
pop
inc
adc
jl
and
mov
add
mov
loop
int3
or
mov
and
and
mov
add
mov
data16
sti
add
mov
xor
popa
lcall
jp
add
daa
mov
jb
or
insl
bswap
mov
cmp
cltd
mov
inc
add
mov
add
add
pop
add
mov
or
add
clc
mov
sbb
mov
ret
add
add
add
test
push
sbb
dec
jl
insl
dec
sahf
jge
add
add
xchg
push
lahf
iret
addb
push
andl
cmp
jnp
add
mov
add
add
add
pop
scas
lahf
ja
addr16
jmp
js
xchg
sub
aaa
jb
push
add
xchg
add
add
dec
mov
add
push
push
add
xlat
pop
xor
pop
jo
and
add
cmp
add
mov
add
add
push
std
mov
push
sub
aas
sub
loope
add
add
add
pop
in
addb
add
add
icebp
or
mov
add
adc
popa
push
add
rorl
nop
add
out
enter
ljmp
add
mov
loopne
pusha
add
scas
sub
pop
adc
add
add
add
mov
and
add
add
popf
mov
jns
add
stos
push
aaa
testb
jae
add
add
je
paddd
push
mov
adc
sub
addb
sti
ja
data16
pop
push
add
jne
add
imul
push
addr16
test
xor
gs
adc
ds
and
mov
arpl
add
stos
rep
and
add
cmpsb
add
mov
call
rolb
add
lds
nop
add
add
or
clc
rolb
sub
add
add
faddl
add
inc
add
add
popf
lea
add
sbb
ljmp
test
ret
push
add
add
sub
outsl
shrl
adc
sub
add
add
mov
int3
pusha
add
sub
add
pusha
add
xorl
in
xor
jns
add
push
mov
subl
add
xor
in
dec
test
ss
je
jnp
addb
stos
int3
add
in
imul
adc
pop
mov
add
add
add
dec
insb
jg
add
push
add
adc
mov
nop
add
data16
add
and
add
scas
add
imul
push
mov
jp
outsl
outsb
punpckhdq
rolb
push
push
add
dec
lahf
sbbl
push
add
add
aas
outsl
dec
inc
add
jnp
aas
ss
mov
iret
sbb
add
sti
mov
xor
add
inc
enter
pusha
add
add
push
inc
es
mov
cli
ljmp
mov
add
mov
lock
mov
add
add
lret
dec
aas
ss
xor
test
sti
mov
out
add
mov
add
cmp
add
je
imul
add
add
add
cmc
xchg
add
icebp
test
lea
fbld
lret
ljmp
rolb
sti
inc
inc
rolb
inc
add
add
stos
enter
push
add
jmp
mov
pop
sbb
test
add
push
add
call
mov
dec
leave
and
add
adc
and
jge
add
jl
add
add
add
push
xchg
and
inc
add
jnp
fildll
jne
add
add
add
push
mov
addb
push
add
cli
push
or
pop
int3
sbb
push
mov
mov
pop
lods
insb
mov
lcall
jbe
sub
mov
add
add
jo
lcall
clc
mov
add
mov
push
mov
loopne
or
or
add
add
fchs
add
add
sub
add
add
lret
add
into
dec
cld
addb
add
cmc
sbb
add
sub
sub
lret
data16
mov
inc
add
ret
xor
push
and
push
dec
pop
into
insl
sbb
add
das
jae
push
add
pop
aaa
inc
mov
lds
leave
mov
and
mov
dec
xor
add
add
xchg
add
enter
push
add
rcll
xchg
add
popa
jb
lods
out
xchg
add
ret
cmpsl
ret
mov
pop
lock
add
add
add
push
pop
aas
xchg
stos
and
mov
out
loopne
mov
add
mov
repz
mov
pop
in
adc
mov
add
add
in
aaa
dec
data16
das
les
xchg
mov
jne
add
movsl
and
mov
mov
add
inc
add
add
in
push
cmp
pop
mov
add
movsl
mov
cmpsb
add
push
ret
dec
dec
push
jne
sti
repnz
cli
and
cmp
or
insb
mov
mov
jns
aad
rolb
jae
mov
js
jae
nop
add
xorl
sbb
out
jecxz
add
add
aam
sbb
add
dec
insb
push
daa
pop
push
inc
adc
movl
mov
testb
ljmp
mov
addb
ficoms
aas
loop
loope
cmp
mov
and
pop
dec
and
mov
add
rcrl
cmp
addb
fisttpll
jbe
data16
imul
inc
cmpsl
icebp
xor
add
mov
xor
mov
xor
cmp
add
push
dec
cltd
fidivl
aaa
test
adc
jne
xchg
add
das
and
sti
inc
repnz
insl
inc
jmp
push
add
add
add
dec
rcll
jmp
or
add
movsb
add
sbb
add
int3
xchg
add
fsubrs
xor
push
add
out
add
shll
cwtl
push
add
or
and
faddl
in
inc
add
add
adc
add
add
pop
dec
mov
add
divl
add
add
adc
add
add
mov
inc
les
sti
dec
add
add
mov
mov
inc
add
push
mov
or
out
aaa
add
add
mov
add
pop
movsb
add
adc
xor
xchg
jmp
push
add
aaa
inc
rolb
jo
repnz
jecxz
sub
add
add
mov
iret
mov
ljmp
in
pop
adc
add
and
imul
add
mov
cmp
add
hlt
add
add
xchg
adc
mov
addb
push
add
add
fwait
push
add
add
insl
lds
cmp
jg
add
into
or
add
push
aaa
jge
into
rolb
sub
movsl
loope
pushf
lret
xchg
sbb
adc
sub
test
xchg
add
insb
ds
int
lcall
mov
add
pop
push
add
push
les
movb
xor
aas
mov
pop
pop
dec
xchg
clc
jecxz
inc
add
xor
sbb
add
add
xchg
or
mov
cmp
mov
add
xchg
cmc
add
cmp
add
cs
xchg
pop
fmull
mov
inc
hlt
add
mov
xchg
iret
mov
mov
sbbl
icebp
jo
mov
xchg
add
mov
add
jnp
inc
add
mov
jae
add
pop
test
add
testb
cmc
out
jo
hlt
add
add
ljmp
mov
outsl
mov
int3
lods
dec
addb
xorl
inc
add
in
or
movsb
add
movsb
add
add
sub
sbb
dec
lock
cmp
add
scas
insb
gs
lcall
mov
jnp
fs
sub
add
sarl
fisubrs
and
icebp
jle
roll
mov
repnz
int3
mov
lret
and
add
fdivl
adcl
push
jno
mov
cmp
add
sub
add
and
add
inc
cmpsb
add
add
add
adc
jae
inc
add
in
out
jb
loopne
xchg
cmp
dec
packssdw
ljmp
add
repz
std
movb
movsb
add
mov
mov
repnz
add
ja
std
jp
add
jbe
sub
push
add
add
add
add
or
dec
movb
mov
inc
add
add
scas
ret
add
icebp
jb
bound
mov
inc
mov
add
add
movb
lock
int3
or
adc
and
cmp
sti
std
notl
add
loope
testl
push
add
outsl
or
add
add
lods
dec
dec
mov
and
add
add
aas
aad
pop
sahf
int
or
and
pop
dec
sub
scas
mov
jecxz
lods
mov
and
mov
add
pop
das
out
hlt
add
add
inc
add
pop
adc
ret
xor
and
mov
dec
sbb
and
mov
or
add
pop
ds
test
add
add
std
nop
add
movsl
repz
xchg
add
add
add
add
cs
addr16
arpl
adc
push
add
add
add
pop
mov
shll
add
pop
add
lahf
bound
mov
pop
or
push
mov
lods
inc
add
repz
cs
into
cmp
xor
xchg
add
inc
jmp
jl
mov
out
mov
add
loop
andl
pop
lret
mov
mov
jne
push
add
rolb
test
sub
add
fistps
pop
mov
addb
add
pop
loope
add
test
add
add
add
add
xchg
fisttpll
mov
add
mov
lret
jns
rolb
in
jg
mov
fs
and
scas
xchg
add
sbb
add
arpl
lea
cwtl
aas
insb
xchg
add
cmp
push
add
daa
fcoml
mov
ljmp
jmp
mov
sub
scas
rolb
or
pop
lods
fwait
dec
jl
jb
outsb
sbb
arpl
add
in
jb
jns
mov
lret
and
out
mov
cmp
pop
pop
add
out
fimull
and
add
je
and
mov
pop
leave
dec
insl
loope
ljmp
jg
mov
or
add
adc
lods
das
das
out
jno
stos
movsb
add
aas
movsb
add
movb
lods
push
test
add
jge
add
rolb
xchg
test
add
scas
pop
movsb
add
adc
dec
cmpsb
add
or
add
movb
pop
cs
call
add
add
add
add
push
add
sub
inc
mov
in
push
add
xor
add
aam
movsb
add
add
hlt
add
addb
ret
and
wrmsr
add
add
mov
add
mov
sub
and
push
add
add
add
sbb
je
pop
loop
call
testl
jle
lea
xorl
sub
dec
movsl
movsl
mov
add
adc
mov
add
mov
mov
pop
jbe
xchg
mov
and
mov
jns
out
jp
add
xchg
xchg
test
add
add
ret
rolb
call
add
mov
jl
movsb
add
add
add
int
insb
lds
into
mov
das
les
stos
lea
inc
arpl
mov
add
pop
addb
inc
add
popf
js,pt
add
mov
mov
xor
jbe
lcall
add
test
add
pop
popa
aad
add
push
ljmp
add
lds
add
lcall
add
push
dec
push
cmove
jl
adc
add
outsl
add
add
cmp
int
test
add
mov
add
in
adc
out
jno
add
mov
inc
add
add
or
sub
aam
into
ljmp
imul
add
sub
add
mov
gs
add
mov
and
jo
mov
mov
int
aam
add
jmp
add
mov
aas
sub
loope
jae
add
mov
adc
add
out
pop
aad
add
xchg
add
add
mov
cld
xlat
divl
push
mov
jge
sub
lret
out
aas
xor
dec
add
mov
std
addb
aas
popf
sub
shll
xchg
into
popa
mov
push
add
add
push
jecxz
icebp
mov
add
mov
jnp
movsl
sub
add
in
movb
into
xor
popl
insl
dec
and
mov
adc
add
test
add
cmp
add
add
and
inc
add
add
push
cmpsl
mov
sub
out
mov
shll
add
shll
or
add
add
repnz
mov
stos
jmp
inc
imul
add
add
cmp
std
adc
mov
mov
adc
xchg
sbb
sbb
js
push
add
add
add
in
sub
fisttps
add
dec
test
add
add
add
mov
add
stc
sub
outsl
push
add
out
cwtl
push
add
sbb
sbb
pop
xchg
add
sahf
gs
xchg
mov
data16
repnz
fildll
stos
inc
add
adc
push
mov
loop
sub
cwtl
ficoml
popf
out
insl
lods
mov
inc
add
stos
add
add
mov
add
mov
xor
data16
xchg
add
jne
loope
lcall
add
push
add
or
push
add
test
pop
out
imull
loope
add
push
cltd
and
sub
add
out
xor
lock
push
add
pop
dec
adc
jmp
push
add
add
bound
mov
rcll
add
mov
cmp
pusha
add
leave
loopne
popf
cli
inc
mov
xchg
add
pop
stos
dec
and
mov
pop
lods
add
or
out
cmp
add
pop
jle
lret
or
mov
psrad
testb
add
test
rolb
add
add
inc
add
std
mov
and
js
mov
push
addb
sub
leave
sub
stos
or
add
data16
jp
sti
cmp
xchg
add
add
loopne
push
loop
xor
mov
add
outsl
jne
push
add
das
or
hlt
add
mov
ss
add
add
iret
xchg
jle
pushf
sbb
sbb
add
cmpsb
add
insb
pop
inc
add
add
adc
jle
xchg
push
cld
jl
push
inc
add
andl
and
xor
add
scas
or
mov
fadds
lods
push
add
sub
push
push
add
add
add
dec
sahf
inc
add
out
iret
cltd
stos
push
and
adc
pusha
add
bound
mov
and
jo
add
mov
pusha
add
mov
add
pop
jg
add
aam
inc
add
add
and
clc
lods
pop
push
mov
add
out
xchg
addb
jecxz
add
sbb
push
enter
cwtl
sahf
xchg
add
daa
inc
ret
mov
ret
icebp
xchg
add
add
add
add
mov
lcall
add
inc
add
outsl
push
inc
cmp
jns
stos
gs
addb
or
and
aad
add
dec
sahf
lods
lcall
add
add
add
add
add
sbb
add
mov
insb
mov
test
outsb
cli
daa
mov
nop
add
clc
out
scas
daa
pushf
lods
mov
pushf
mov
adc
hlt
add
and
inc
add
sahf
bound
mov
clc
addb
xchg
int
or
sub
push
add
movsl
xchg
add
push
mov
add
add
adcl
dec
aas
jp
repz
mov
lock
add
addb
add
pop
add
mov
push
sbb
add
int3
outsb
dec
outsb
ljmp
add
pop
dec
pushf
in
lea
add
in
jmp
add
mov
pop
push
pop
sbb
jns
lret
jge
scas
dec
addb
jo
pushf
fistpll
cmp
loop
mov
pop
sbb
add
pop
repnz
hlt
add
inc
add
add
add
pop
cmp
out
or
sub
push
and
cld
pushf
or
add
popf
push
add
add
push
add
ja
mov
lock
add
bound
mov
testl
mov
dec
cltd
les
xlat
shll
mov
add
and
int3
je
xchg
mov
add
loope
lret
jns
rorl
add
mov
test
xor
pop
mov
jge
aad
fmuls
push
pusha
add
add
add
push
mov
add
cs
dec
test
cltd
or
rolb
sub
addb
add
lods
pop
sbb
repz
add
sbb
test
jge
inc
xchg
xor
ljmp
imul
add
roll
pop
jg
ds
sbb
cmp
add
pop
in
leave
stc
ja
lret
aaa
aaa
add
mov
add
je
data16
xor
jnp
cld
icebp
int3
aas
mov
xchg
add
add
jne
mov
in
jecxz
cmp
fwait
sub
and
add
jo
inc
add
sar
mov
add
push
push
push
or
xchg
add
add
mov
add
add
stos
or
add
test
cld
xchg
dec
jp
jo
mov
add
add
pushf
xor
push
jae
push
in
cld
jo
popf
mov
cmp
mov
pop
sbb
leave
aas
pop
cmpsb
add
add
sahf
rorl
jbe
mov
fisubrl
cli
xor
push
into
mov
add
add
jno
mov
inc
std
inc
add
sbb
sub
mov
les
mov
addl
das
icebp
addb
dec
imul
jo
aam
jp
imul
cmp
addb
mov
dec
rolb
leave
repnz
add
adc
fisubs
jns
ret
and
inc
add
jae
cmc
xlat
sti
js
add
add
mov
add
dec
jbe
popa
jno
adc
add
mov
out
insb
and
xchg
pushf
cmp
add
add
mov
mov
pop
dec
sbb
add
aad
add
sub
fimuls
sub
mov
sar
jle
mov
fsubl
add
inc
mov
cs
dec
and
inc
add
xrelease
add
add
jp
add
xchg
jno
add
aam
ds
inc
dec
les
add
mov
dec
jo
js
add
addb
int
cmp
adc
fs
and
add
xchg
add
aam
das
sbb
add
pop
xchg
add
add
inc
push
add
xor
xchg
push
add
mov
dec
in
sub
add
add
and
mov
jg
add
popa
jbe
mov
in
sbb
jb
cmp
xchg
add
cmp
sbb
lods
gs
sar
push
test
add
add
add
cli
sahf
int3
addr16
mov
mov
add
xchg
in
sub
mov
or
sub
lea
add
add
and
adc
or
sbb
out
rolb
sub
and
mov
cwtl
sbb
mov
jo
inc
dec
cld
sub
add
dec
ljmp
jo
dec
stos
jg
mov
aad
loope
js
ret
mov
push
cmp
add
pop
cmp
add
mov
pop
cmpsl
ljmp
dec
insb
add
mov
lock
mov
mov
lret
add
jns
iret
or
ret
push
stos
sbb
into
jg
addr16
cltd
insl
insl
xlat
std
fcomp
notl
adc
leave
cltd
fidivl
pop
pop
mov
ds
push
outsl
inc
xlat
add
in
clc
xor
rolb
scas
push
add
cmp
pop
sbb
or
adc
add
push
add
imul
or
mov
add
add
add
jmp
add
jne
adc
inc
pop
lahf
pop
push
aaa
sbb
dec
in
cmp
add
mov
repz
sub
test
mov
sbb
aaa
fiadds
and
mov
add
add
iret
clc
pop
sbb
es
mov
outsl
dec
test
push
add
dec
enter
add
inc
add
add
mov
mov
dec
xchg
xchg
add
add
mov
add
push
add
add
mov
shrl
add
add
sahf
mov
add
dec
mov
xchg
add
stos
movb
xor
add
ss
dec
clc
adc
mov
xor
mov
add
push
add
call
std
adc
dec
repnz
sub
mov
testl
inc
add
xor
add
and
mov
call
add
add
je
xchg
insl
pushf
pop
add
daa
pop
inc
sub
add
xor
xchg
dec
mov
dec
ja
add
sub
adc
and
push
mov
add
leave
call
add
add
sarl
repz
jne
lock
mov
push
add
fildll
lods
into
dec
clc
sub
mov
lret
enter
test
pop
mov
imul
icebp
test
icebp
mov
repz
add
push
jne
xor
int3
into
lods
mov
mov
pop
stos
std
movsb
add
add
add
int3
ret
add
mov
jecxz
int
mov
pop
mov
shl
add
loop
push
add
push
add
inc
ja
jae
add
pop
adc
jbe
jae
add
mov
add
int3
mov
mov
cld
in
xchg
add
mov
jns
arpl
sub
sbb
and
outsb
jnp
add
add
xchg
add
imul
mov
pop
mov
and
arpl
add
imul
fninit
mov
push
add
add
add
add
add
lods
popf
test
int3
mov
or
add
movb
in
add
add
insb
testb
mov
ret
mov
or
pop
or
or
and
mov
dec
push
ja
sbb
das
mov
xchg
cli
stos
jno
fucomi
push
addr16
or
repz
int3
jecxz
and
dec
mov
add
int3
inc
add
movsl
add
mov
add
add
sub
addb
pop
add
testl
add
into
fisttpll
mov
xchg
mov
adc
xchg
add
add
dec
push
lret
mov
add
int3
icebp
lahf
pcmpgtd
add
add
add
sbb
add
mov
inc
add
loopne
push
pop
gs
sbb
add
or
adc
mov
add
popa
aas
movb
into
and
mov
and
mov
popa
pop
jb
jns
pop
movsb
add
add
mov
clc
repnz
jae
add
add
scas
mov
clc
repnz
jae
add
mov
mov
enter
cmp
ret
add
mulb
adc
or
add
clc
repnz
jae
loop
add
jae
jg
into
add
add
push
clc
repnz
jae
mov
add
sarb
jmp
add
add
add
add
testl
fwait
cld
nop
jmp
inc
das
das
add
les
clc
repnz
jae
add
add
lcall
or
mov
inc
add
add
dec
add
je
repnz
jae
xor
out
into
push
dec
or
repnz
jae
jecxz
jg
mov
fcomps
add
clc
repnz
jae
add
jecxz
add
add
or
clc
repnz
jae
sti
add
xor
std
pop
clc
repnz
jae
and
push
add
push
clc
repnz
jae
xor
add
xchg
call
fwait
cld
nop
jmp
mov
and
push
clc
repnz
jae
imul
clc
repnz
jae
adc
dec
add
add
ret
clc
repnz
jae
icebp
jle
nop
notb
add
clc
clc
repnz
jae
xor
pop
add
add
iret
call
push
mov
xchg
ret
pop
add
and
mov
add
mov
xchg
ret
test
mov
repnz
jae
addb
mov
add
mov
push
mov
xchg
ret
add
add
xor
adc
and
dec
inc
jle
and
pusha
clc
repnz
jae
jle
add
add
shrb
add
int
insl
mov
add
adc
add
icebp
add
mov
fwait
cld
nop
jmp
add
add
fmull
test
repnz
jae
add
mov
xor
add
clc
repnz
jae
add
push
popa
xor
jns
lret
clc
repnz
jae
rolb
add
addb
aas
xor
fwait
cld
nop
jmp
in
add
faddp
mov
add
incl
fwait
cld
nop
jmp
add
add
cmpsb
add
mov
clc
repnz
jae
add
add
test
add
add
add
add
clc
repnz
jae
cmp
add
cmp
sbb
add
add
fiadds
xchg
add
mov
nop
jae
cmpsb
add
sub
test
add
nop
jae
sub
xor
and
leave
rolb
xchg
ret
icebp
pop
add
ror
clc
repnz
jae
pop
add
test
jmp
dec
mov
fiadds
mov
sub
clc
repnz
jae
sti
mov
sub
repnz
jae
loop
test
rcrb
add
sbbb
add
mov
and
add
fwait
cld
nop
jmp
add
jle
add
nop
push
mov
xchg
ret
mov
add
out
add
clc
repnz
jae
add
imul
inc
adc
repnz
jae
out
add
loop
decb
test
add
add
repnz
jae
mov
inc
and
repnz
jae
cmp
add
xor
jb
ficoms
cld
nop
jmp
add
xor
add
xor
xchg
add
popa
out
stos
clc
repnz
jae
dec
jecxz
test
add
fisttps
daa
out
inc
add
add
add
mov
repnz
jae
add
jle
xchg
icebp
nop
add
add
add
repnz
jae
mov
je
fwait
cld
nop
jmp
add
dec
add
repnz
jae
add
sbb
nop
jae
fildl
add
jo
push
add
repnz
jae
add
add
testb
leave
push
fwait
cld
nop
jmp
sub
add
clc
repnz
jae
jle
add
add
xor
mov
test
ret
add
add
add
add
add
add
adc
add
repnz
jae
jge
add
clc
repnz
jae
addb
out
les
fwait
cld
nop
jmp
dec
add
add
fidivrs
cld
push
mov
xchg
ret
dec
add
mov
add
pop
dec
push
mov
xchg
ret
dec
xor
add
lcall
ret
jmp
add
dec
add
xor
xchg
pop
dec
call
clc
repnz
jae
orb
jecxz
and
fwait
cld
nop
jmp
or
dec
shrb
sar
repnz
jae
add
dec
add
add
clc
repnz
jae
add
add
and
add
cmpl
fwait
cld
nop
jmp
add
add
add
xor
add
and
fwait
cld
nop
jmp
add
sub
mov
add
or
add
loop
sub
xor
add
clc
repnz
jae
jg
loop
xor
cwtl
mov
fwait
cld
nop
jmp
mov
test
add
test
cld
nop
jmp
mov
lods
fwait
cld
nop
jmp
add
or
mov
xor
and
add
add
add
clc
repnz
jae
add
notb
xor
dec
add
clc
repnz
jae
mov
add
mov
xchg
ret
add
add
add
repnz
jae
add
sldt
dec
pop
jne
fwait
cld
nop
jmp
add
add
stos
add
clc
repnz
jae
add
mov
add
outsl
popa
clc
repnz
jae
fidivrs
nop
add
nop
jae
pop
jle
imul
mov
clc
repnz
jae
jge
pop
add
clc
repnz
jae
mov
sti
clc
repnz
jae
add
xchg
add
add
ret
add
nop
jae
movl
jle
pop
sub
clc
repnz
jae
add
sub
add
jae
lar
mov
pushf
push
clc
repnz
jae
add
cmp
test
fwait
cld
nop
jmp
dec
loop
rcr
inc
jle
add
clc
repnz
jae
add
aas
dec
push
mov
xchg
ret
mov
add
mov
sbb
repnz
jae
dec
dec
inc
add
loop
cmp
cld
nop
jmp
add
fildl
add
add
add
cmp
loopne
add
add
add
jne
jne
add
sub
jmp
incl
cmpsb
das
add
gs
add
add
push
fwait
cld
nop
jmp
addb
add
rolb
jnp
sti
add
add
pop
add
rolb
jg
or
jno
inc
add
add
mov
ret
or
or
imul
push
mov
xchg
ret
add
add
test
mov
sub
repz
repnz
jae
add
add
cs
clc
repnz
jae
rdtsc
add
add
add
push
mov
xchg
ret
add
dec
add
testb
mov
clc
repnz
jae
add
dec
test
add
mov
add
sub
nop
jae
add
add
xchg
sldt
loop
cmp
add
repnz
jae
into
inc
xchg
mov
gs
in
ret
clc
repnz
jae
add
xchg
add
popa
xor
addb
add
fwait
cld
nop
jmp
add
psrlw
addb
popa
clc
repnz
jae
add
add
imul
inc
cmp
fwait
cld
nop
jmp
in
add
add
cmc
ret
dec
subl
push
mov
xchg
ret
inc
add
cmp
nop
jae
add
jle
testl
call
clc
repnz
jae
xchg
add
add
add
add
add
repnz
jae
add
cld
div
fwait
cld
nop
jmp
add
mov
fld
clc
repnz
jae
mov
add
pop
and
clc
repnz
jae
add
jmp
je
add
clc
repnz
jae
add
add
push
mov
xchg
ret
gs
inc
xor
cli
pusha
clc
repnz
jae
fiadds
test
mov
clc
repnz
jae
add
add
add
insl
push
clc
repnz
jae
rolb
imul
jmp
push
or
add
repnz
jae
and
mov
add
cmp
loop
out
add
add
ret
pop
cmpsl
aaa
sti
jne
clc
repnz
jae
push
xchg
sub
repnz
jae
into
sti
add
add
add
test
xchg
add
add
xor
add
mov
add
and
add
cmp
add
mov
xchg
ret
add
call
fwait
cld
nop
jmp
loop
sbb
fwait
mov
clc
repnz
jae
add
xchg
add
push
mov
xchg
ret
add
into
add
call
clc
repnz
jae
add
mov
clc
repnz
jae
dec
add
add
push
mov
shll
pushf
loope
add
xor
add
nop
add
mov
push
cmp
ret
es
into
dec
icebp
icebp
adc
push
add
add
repnz
jae
add
sti
add
fildl
add
repnz
mov
clc
repnz
jae
mov
add
sub
nop
jae
idivl
add
add
inc
sub
repnz
jae
add
add
push
mov
xchg
ret
add
es
add
mov
rep
clc
repnz
jae
add
nop
xchg
add
mov
cmp
repnz
jae
shl
add
scas
je
clc
repnz
jae
add
cmpsb
sbb
mov
xchg
ret
add
nop
addb
push
mov
add
sub
add
ds
xchg
add
jne
clc
repnz
jae
add
add
mov
clc
repnz
jae
mov
add
mov
repnz
jae
pop
pop
nop
add
add
mov
xchg
ret
pop
add
inc
add
push
mov
xchg
ret
add
add
out
sub
mov
xchg
ret
add
add
test
mov
sbb
inc
add
mov
jmp
xchg
or
add
icebp
test
cmpl
fwait
cld
nop
jmp
sti
testl
nop
jae
nop
add
add
add
mov
cmp
ret
mov
and
add
add
clc
repnz
jae
add
jno
movb
push
fwait
cld
nop
jmp
add
movzbl
add
pop
das
sahf
pop
clc
repnz
jae
add
jo
add
add
mov
rclb
lret
xchg
ret
add
add
insb
inc
clc
repnz
jae
icebp
shlb
add
add
mov
jmp
add
mov
add
mov
push
mov
xchg
ret
add
xor
repz
repnz
jae
add
add
jecxz
into
movsb
add
push
mov
xchg
ret
sub
add
add
mov
xchg
ret
and
add
add
add
inc
and
clc
repnz
jae
xor
xchg
cmp
and
mov
push
ja
lds
dec
int3
add
test
fstl
repnz
jae
add
icebp
fsubp
sbb
add
add
test
lcall
gs
leave
push
mov
xchg
ret
mov
sti
add
adc
repnz
jae
add
add
mov
xchg
ret
xor
test
push
cld
add
fwait
cld
nop
jmp
xchg
dec
mov
mov
mov
clc
repnz
jae
test
into
mov
clc
repnz
jae
mov
add
cld
nop
jmp
pop
cmpsb
pop
dec
add
inc
repnz
repnz
jae
dec
mov
gs
aad
hlt
add
mov
lock
mov
adc
add
add
movl
pop
xchg
add
pop
sub
clc
repnz
jae
add
add
loop
add
clc
repnz
jae
rolb
mov
fs
add
sbb
addl
idivb
add
pop
push
mov
xchg
ret
imul
jge
add
clc
repnz
jae
add
xchg
pop
add
add
jge
clc
repnz
jae
add
fidivs
mov
and
mov
mov
xor
add
mov
lea
clc
repnz
jae
xchg
add
dec
add
clc
inc
add
jge
in
add
add
mov
xchg
ret
add
loop
cmp
popa
add
mov
xchg
ret
jo
add
add
xlat
loope
add
xchg
shl
xchg
add
clc
repnz
jae
add
mov
add
repnz
jae
sub
add
repnz
jae
out
add
idivl
inc
push
mov
xchg
ret
add
add
ret
clc
repnz
jae
jg
add
fiadds
popf
popa
push
mov
xchg
ret
add
add
add
sbb
mov
xchg
ret
xor
or
clc
repnz
jae
das
add
add
nop
cmp
add
push
mov
xchg
ret
add
fstpt
add
xor
data16
add
repnz
jae
add
testb
clc
repnz
jae
mov
mov
icebp
out
je
clc
repnz
jae
and
imul
add
add
repnz
jae
add
xor
push
fwait
cld
nop
jmp
add
mov
cmpw
fwait
cld
nop
jmp
test
or
jle
clc
repnz
jae
add
inc
jecxz
add
pop
mov
clc
repnz
jae
jg
mov
mov
clc
repnz
jae
in
xchg
jg
lock
mov
clc
repnz
jae
add
repnz
jae
loop
test
add
add
jae
dec
add
cmpsb
dec
add
or
cmc
cltd
push
push
mov
xchg
ret
into
add
add
test
mov
add
sbb
add
add
cmp
syscall
ret
sbb
xorl
add
dec
xor
icebp
sar
xchg
clc
repnz
jae
xchg
loop
add
fsubrp
enter
clc
repnz
jae
mov
add
mov
add
je
fwait
cld
nop
jmp
add
add
dec
dec
fwait
cld
nop
jmp
sti
add
fildl
xchg
test
lods
imul
clc
repnz
jae
dec
add
add
fbstp
add
push
mov
xchg
ret
add
add
add
pop
cmp
fwait
cld
nop
jmp
add
inc
add
nop
jae
out
jle
xchg
imul
adc
repnz
jae
add
or
push
mov
xchg
ret
cmpsb
add
test
inc
sbb
jae
add
inc
add
clc
repnz
jae
add
nop
add
nop
jae
add
cmpsb
add
call
clc
repnz
jae
rolb
add
jmp
sub
add
jecxz
push
add
add
nop
fildl
loop
add
testl
mov
cmp
rolb
xchg
ret
testl
xor
jge
add
sub
inc
add
addb
test
and
cmp
test
nop
jae
out
add
fiadds
nop
jae
xor
mov
out
xchg
arpl
sbbb
add
sbb
add
lcall
dec
push
fwait
cld
nop
jmp
fildl
test
push
aas
mov
push
mov
xchg
ret
adc
or
jae
add
add
dec
push
clc
repnz
jae
add
add
icebp
add
jnp
clc
repnz
jae
nop
test
jge
mov
adc
cli
ljmp
test
add
enter
push
mov
xchg
ret
add
xchg
adc
mov
xchg
ret
mov
dec
add
push
push
mov
xchg
ret
jg
add
mov
add
repnz
jae
dec
add
dec
add
add
call
cld
nop
jmp
add
add
shlb
or
repnz
jae
mov
gs
cmpsb
les
push
add
add
repnz
jae
add
dec
adc
test
inc
add
seto
xor
or
inc
add
xchg
jo
dec
dec
call
clc
repnz
jae
cmpsb
fiadds
imul
je
clc
repnz
jae
add
mov
mov
clc
repnz
jae
es
daa
loop
mov
nop
jae
loop
fsubp
add
repnz
jae
xor
add
and
mov
clc
repnz
jae
add
pop
sbb
nop
jae
add
pop
mov
jle
add
fwait
cld
nop
jmp
mov
add
nop
jae
inc
lcall
addr16
sbb
mov
add
repnz
jae
sub
add
loop
mov
clc
repnz
jae
xor
in
mov
clc
repnz
jae
xor
add
adc
mov
clc
repnz
jae
shl
mov
mov
push
mov
xchg
ret
inc
add
xor
filds
xchg
ret
sti
rorb
add
inc
add
adc
fwait
cld
nop
jmp
inc
dec
add
add
add
inc
fwait
cld
nop
jmp
add
jo
add
add
aaa
or
jmp
jae
add
add
add
mov
clc
repnz
jae
add
add
loope
add
push
mov
mov
sahf
iret
dec
pop
xchg
add
imul
clc
repnz
jae
cmpsb
cmpsb
and
add
nop
jae
pop
add
add
cmp
rep
clc
repnz
jae
add
mov
add
add
mov
clc
repnz
jae
fisubs
add
add
clc
repnz
jae
add
das
fisubs
cmpl
jae
sub
jecxz
add
icebp
push
aaa
mov
jae
xor
xchg
inc
add
add
mov
push
mov
xchg
ret
add
fadds
nop
jae
into
jge
jecxz
add
push
push
mov
xchg
ret
add
addb
xor
inc
add
clc
repnz
jae
add
into
add
add
add
add
fwait
cld
nop
jmp
out
imul
movl
add
pop
add
mov
and
cld
nop
jmp
dec
add
add
fdivs
add
clc
repnz
jae
add
dec
push
push
mov
xchg
ret
das
jecxz
dec
fiadds
add
sub
mov
xchg
ret
sti
add
dec
addb
dec
jmp
mov
jo
or
add
add
add
test
repnz
jae
add
add
cmc
loop
pop
pushl
push
mov
xchg
ret
add
gs
jne
clc
repnz
jae
rolb
cmp
ret
push
mov
xchg
ret
nop
and
mov
rcrl
test
fwait
cld
nop
jmp
mov
add
popa
inc
add
cmp
mov
xchg
ret
add
orb
incl
add
imul
xor
add
add
mov
push
mov
xchg
ret
xor
mov
add
mov
mov
jne
fwait
cld
nop
jmp
nop
nop
cmp
daa
aam
call
add
clc
repnz
jae
add
fisubrs
arpl
clc
repnz
jae
mov
add
sbb
dec
cmp
repnz
jae
loop
jg
add
pop
je
clc
repnz
jae
add
into
xchg
addb
push
mov
sub
push
xor
test
mov
add
inc
add
push
mov
xchg
ret
into
add
add
jbe
clc
repnz
jae
dec
rolb
add
jmp
add
dec
add
xor
mov
dec
dec
mov
clc
repnz
jae
and
sarb
add
mov
clc
repnz
jae
xor
add
outsl
movswl
clc
repnz
jae
in
psadbw
add
add
clc
repnz
jae
out
adc
lret
repnz
jae
add
add
cs
push
mov
xchg
ret
xor
sti
dec
loop
stos
push
push
mov
xchg
ret
add
jle
add
and
push
mov
xchg
ret
add
mov
add
jmp
adcl
add
add
add
add
mov
xchg
ret
icebp
add
add
add
mov
jp
fwait
cld
nop
jmp
into
add
add
push
nop
add
jg
dec
outsl
popa
fs
cld
nop
jmp
das
add
ror
cmpl
adc
add
xchg
add
ret
add
push
mov
xchg
ret
add
xchg
add
add
add
push
movsb
add
add
mov
stos
mov
clc
repnz
jae
jecxz
jo
add
or
mov
repnz
jae
add
add
push
push
mov
xchg
ret
add
add
push
fwait
cld
nop
jmp
test
imulb
add
adc
push
add
jo
add
xor
fwait
cld
nop
jmp
xchg
add
add
add
mov
clc
repnz
jae
orb
jg
cmp
add
mov
fwait
cld
nop
jmp
add
loop
add
push
push
mov
xchg
ret
xor
notb
mov
mov
data16
or
repnz
jae
add
mov
add
cmp
ficomps
call
fildl
add
add
push
mov
xchg
ret
test
cmc
lds
movb
mov
xchg
ret
jle
shlb
je
mov
repnz
jae
and
dec
add
add
adcb
orl
ljmp
mov
clc
repnz
jae
add
xor
add
rorl
mov
test
xor
mov
mov
xor
add
clc
repnz
jae
add
scas
enter
jae
add
inc
xchg
cmp
jmp
fstpt
into
dec
add
mov
clc
repnz
jae
nop
mov
fistl
jmp
idiv
repnz
jae
mov
add
add
add
jae
mov
mov
pop
and
repnz
jae
pop
mov
cld
mov
clc
repnz
jae
jle
sub
jns
mov
nop
jmp
sub
imul
xchg
leave
inc
add
add
mov
add
dec
push
push
mov
xchg
ret
and
add
add
add
xor
clc
repnz
jae
xor
dec
xor
jg
movsl
push
movzwl
clc
repnz
jae
add
in
xor
mov
mov
popf
clc
repnz
jae
imul
add
xor
push
clc
repnz
jae
add
push
jge
mov
inc
inc
add
repnz
jae
add
jle
add
addr16
mov
nop
jae
mov
add
mov
xor
add
out
add
push
add
add
popf
mov
push
mov
xchg
ret
sub
movl
out
mov
fwait
cld
nop
jmp
adc
aad
pop
push
mov
xchg
ret
xor
add
or
fwait
cld
nop
jmp
test
lcall
fwait
cld
nop
jmp
add
xchg
add
das
add
clc
repnz
jae
add
out
loop
add
mov
fisttpl
cmp
inc
add
add
push
mov
xchg
ret
xchg
add
pop
sub
jo
inc
add
add
add
test
mov
push
clc
repnz
jae
add
add
mov
clc
repnz
jae
xchg
jo
ja
dec
jne
clc
repnz
jae
mov
xabort
nop
jae
cmpsb
sbb
sub
mov
adc
repnz
jae
imul
add
inc
push
mov
xchg
ret
add
add
add
xor
add
clc
repnz
jae
add
leave
add
clc
repnz
jae
testb
add
jne
clc
repnz
jae
add
push
add
lds
xchg
ret
add
add
add
nop
jae
add
add
push
mov
add
pop
add
ret
add
add
scas
lea
clc
repnz
jae
and
sub
mov
clc
repnz
jae
add
add
add
jne
call
fwait
cld
nop
jmp
add
add
add
nop
jae
add
mov
add
jae
cld
nop
jmp
testb
add
lea
clc
repnz
jae
mov
cmpsl
xchg
out
mov
clc
repnz
jae
into
add
mov
adc
nop
jmp
lcall
mov
cmp
stos
negl
add
add
add
jmp
jge
fwait
cld
nop
jmp
mov
xor
sub
push
mov
xchg
ret
jo
add
mov
push
mov
xchg
ret
pop
rcr
nop
jge
lea
clc
repnz
jae
add
add
jmp
clc
repnz
jae
cmpsb
mov
mov
xchg
ret
imul
add
scas
call
clc
repnz
jae
xchg
add
in
add
clc
repnz
jae
sarb
inc
add
xchg
fwait
cld
nop
jmp
add
add
clc
push
push
mov
xchg
ret
pop
xchg
fiadds
mov
ret
shl
clc
repnz
jae
cmp
nop
add
sbb
repnz
jae
rolb
mov
imul
fwait
cld
nop
jmp
rcrb
mov
mov
xchg
ret
add
in
mov
push
clc
repnz
jae
mov
mov
add
push
clc
repnz
jae
dec
sub
add
or
test
add
add
repnz
jae
or
fwait
cld
nop
jmp
pop
lcall
loop
push
push
mov
xchg
ret
xchg
into
sti
xchg
testl
add
repnz
jae
in
imulb
jecxz
push
inc
and
clc
repnz
jae
lcall
add
clc
repnz
jae
add
das
xor
push
mov
xchg
ret
add
shrb
add
fisttpl
movsb
in
inc
add
nop
add
add
cmp
push
mov
xchg
ret
fildl
add
add
cld
nop
jmp
add
rolb
sub
push
mov
xchg
ret
and
jecxz
sub
clc
repnz
jae
div
add
mov
add
clc
repnz
jae
mov
sub
add
add
repnz
jae
nop
add
or
fwait
cld
nop
jmp
sti
add
sub
add
loop
push
adc
push
clc
repnz
jae
add
imul
add
call
fwait
cld
nop
jmp
add
add
add
push
mov
xchg
ret
add
and
insb
insb
fwait
cld
nop
jmp
add
add
mov
add
push
mov
add
add
mov
jne
nop
add
mov
push
mov
xchg
ret
add
shl
add
nop
jae
or
xchg
test
decl
push
mov
xchg
ret
bt
dec
mov
out
aam
add
das
jle
add
add
pop
clc
repnz
jae
add
and
add
jg
dec
mov
clc
repnz
jae
add
add
add
jae
cmpsb
in
shlb
and
gs
mov
fwait
cld
nop
jmp
nop
out
xchg
mov
ja
inc
clc
repnz
jae
mov
sub
add
jmp
jg
add
add
add
adc
sub
repnz
jae
add
add
jmp
mov
xchg
ret
lcall
add
pop
push
mov
xchg
ret
mov
mov
or
mov
xchg
ret
mov
into
add
test
in
clc
repnz
jae
jle
decb
nop
jmp
mull
add
test
repnz
jae
add
add
jmp
nop
xor
jge
add
add
mov
add
cld
nop
jmp
add
prefetch
add
pop
push
mov
xchg
ret
lcall
sub
jae
sub
add
add
pop
dec
add
fwait
cld
nop
jmp
cmp
add
add
pop
push
fwait
cld
nop
jmp
add
jecxz
es
in
into
add
push
push
mov
xchg
ret
add
imul
sti
mov
push
mov
xchg
ret
add
add
push
clc
repnz
jae
add
add
popf
mov
clc
repnz
jae
xchg
dec
xor
adc
add
inc
clc
repnz
jae
mov
nop
add
inc
add
mov
clc
repnz
jae
add
add
push
clc
repnz
jae
rorb
add
in
movb
add
clc
repnz
jae
out
add
add
lcall
nop
jae
add
push
out
into
add
repz
repnz
jae
mov
sti
adc
push
clc
repnz
jae
nop
add
add
cmp
sbb
add
push
mov
xchg
ret
pop
sti
push
add
mov
mov
adc
repnz
jae
mov
add
popa
add
repnz
jae
rolb
add
sbb
nop
jmp
add
mov
in
or
add
and
fwait
cld
nop
jmp
jecxz
dec
test
add
test
lea
nop
jae
mov
add
repnz
jae
gs
add
sti
or
fwait
cld
nop
jmp
add
add
add
lods
and
imul
nop
jae
add
and
mov
push
mov
xchg
ret
mov
into
add
mov
xchg
ret
rorb
scas
mov
clc
repnz
jae
add
sti
nop
or
movzwl
clc
repnz
jae
add
dec
add
sub
jmp
add
add
and
mov
and
ss
clc
repnz
jae
fildl
std
add
clc
repnz
jae
cmpsb
fstpt
add
jp
pop
push
mov
xchg
ret
add
out
add
and
push
adc
clc
repnz
jae
pop
xchg
verr
add
add
inc
push
mov
xchg
ret
push
add
add
cld
nop
jmp
add
add
and
or
mov
add
mov
testb
dec
sti
std
pop
clc
repnz
jae
testl
mov
fisttps
cmp
inc
add
rolb
sbb
test
clc
repnz
jae
add
xor
ss
repnz
jae
add
mov
or
adc
sbb
insb
inc
jb
clc
repnz
jae
add
inc
icebp
jl
fwait
cld
nop
jmp
add
add
push
scas
mov
clc
repnz
jae
add
leave
pop
clc
repnz
jae
add
fiadds
add
add
pop
clc
repnz
jae
fisubs
testl
popa
add
repnz
jae
add
adc
popl
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
or
add
dec
fwait
cld
nop
jmp
jecxz
inc
add
xchg
shl
lods
mov
clc
repnz
jae
add
xor
in
xchg
add
add
fwait
cld
nop
jmp
movl
add
jne
clc
repnz
jae
add
adc
clc
repnz
jae
add
outsb
and
repnz
jae
xchg
add
pop
add
jae
clc
repnz
jae
mov
add
mov
jo
xor
or
clc
repnz
jae
dec
loop
add
mov
xchg
ret
jge
add
add
repnz
jae
gs
jge
add
mov
fwait
cld
nop
jmp
rolb
xchg
jo
pop
into
pop
inc
fwait
cld
nop
jmp
sub
mov
pushl
clc
repnz
jae
xchg
pop
add
mov
call
clc
repnz
jae
add
dec
or
clc
repnz
jae
add
push
add
jne
clc
repnz
jae
add
add
clc
repnz
jae
dec
push
add
repz
mov
xchg
ret
in
testb
xor
pop
pop
ret
clc
repnz
jae
cmpsb
add
add
jne
fwait
cld
nop
jmp
add
add
movl
lea
clc
repnz
jae
dec
add
loop
das
mov
clc
repnz
jae
jo
lcall
in
add
clc
repnz
jae
add
push
push
mov
xchg
ret
add
out
add
jle
ja
shl
fwait
cld
nop
jmp
add
add
and
clc
repnz
jae
mov
add
dec
adc
repnz
jae
add
add
fisttpl
pusha
push
mov
xchg
ret
add
add
ficomps
cltd
and
clc
repnz
jae
rolb
jg
loopne
dec
pop
clc
repnz
jae
add
das
loop
loop
mov
dec
add
repnz
jae
test
inc
add
jle
rep
fwait
cld
nop
jmp
add
test
popa
pop
mov
fwait
cld
nop
jmp
add
or
repnz
jae
add
in
test
add
clc
repnz
jae
add
add
push
mov
xchg
ret
fcmovnu
add
pusha
clc
repnz
jae
xor
add
outsb
pop
push
mov
xchg
ret
mov
in
and
add
lret
clc
repnz
jae
mov
mov
dec
test
fwait
cld
nop
jmp
add
add
add
add
inc
add
incl
dec
add
sldt
dec
aas
add
clc
repnz
jae
mov
add
add
and
js
repnz
jae
push
add
add
add
test
clc
repnz
jae
sub
jo
jecxz
mov
clc
repnz
jae
fcomi
add
cld
nop
jmp
add
sti
imul
rep
clc
repnz
jae
add
adc
dec
mov
clc
repnz
jae
add
roll
add
clc
repnz
jae
add
testb
out
mov
clc
repnz
jae
cmpsb
icebp
sub
sar
repnz
jae
fiadds
rolb
add
movsb
add
or
fwait
cld
nop
jmp
test
or
add
loopne
incl
rclb
fwait
cld
nop
jmp
inc
and
add
add
clc
repnz
jae
add
jle
add
dec
pop
clc
repnz
jae
fisubs
jle
add
lea
fwait
cld
nop
jmp
mov
jg
repnz
jae
add
rorb
popa
add
repnz
jae
add
dec
add
or
fwait
cld
nop
jmp
add
add
add
jnp
je
js
cld
nop
jmp
imul
clc
repnz
jae
add
fisttpl
mov
add
cmp
jae
add
cmpsb
mov
inc
add
cld
nop
jmp
add
dec
xor
xor
push
push
mov
xchg
ret
jecxz
test
fiadds
in
pop
div
clc
repnz
jae
mov
add
pop
push
push
mov
xchg
ret
add
add
fiadds
dec
mov
clc
repnz
jae
sti
add
push
mov
xchg
ret
and
loop
jle
adc
cmp
clc
repnz
jae
dec
add
mov
adc
pop
in
clc
repnz
jae
add
jns
popa
add
repnz
jae
mov
sub
jae
add
add
xchg
dec
add
or
xchg
add
mov
test
addb
add
lcall
loop
jle
jle
into
arpl
mov
cld
nop
jmp
add
add
add
add
push
clc
repnz
jae
xchg
add
add
clc
repnz
jae
add
add
pop
mov
fwait
cld
nop
jmp
add
add
add
inc
add
jge
test
movsb
clc
repnz
jae
icebp
dec
adc
pop
ja
fwait
cld
nop
jmp
add
mov
clc
repnz
jae
imul
mov
mov
push
mov
xchg
ret
jge
dec
rcl
cmpsl
lea
xchg
aam
incl
add
add
jecxz
daa
xor
enter
nop
jae
mov
setne
mov
lea
clc
repnz
jae
xchg
test
loope
add
outsb
push
clc
repnz
jae
mov
testb
leave
fwait
cld
nop
jmp
add
dec
add
fisttpl
stc
ret
push
mov
xchg
ret
test
jg
sub
rcrb
decl
add
lcall
stos
fwait
cld
nop
jmp
add
add
add
add
adc
adc
clc
repnz
jae
jecxz
add
add
inc
add
add
clc
repnz
jae
icebp
add
mov
fdivr
jle
add
dec
sub
pop
dec
add
or
cmc
and
add
push
clc
repnz
jae
das
testl
xchg
inc
add
add
into
mov
clc
repnz
jae
sub
add
imul
add
add
mov
push
push
mov
xchg
ret
jo
xchg
jo
adcb
int3
add
clc
repnz
jae
mov
inc
insl
mov
clc
repnz
jae
imul
les
mov
xchg
ret
add
add
fists
in
fcmovbe
sbb
add
mov
add
cli
add
mov
add
ret
add
movsb
add
repnz
or
sbb
fcomp
imul
inc
push
mov
sbb
adc
popa
or
aad
clc
push
push
cmp
add
jno
add
in
jle
in
addr16
sbb
add
fldl
pop
xchg
add
add
repnz
and
add
add
mov
jge
cld
xlat
jl
cmp
adc
shll
xor
movb
add
add
cmp
add
out
push
gs
pop
sbb
sbb
add
mov
rorl
add
adc
dec
lods
movsl
and
mov
jbe
dec
push
add
push
std
jecxz
lret
mov
sbb
insb
adc
lea
add
mov
adc
les
icebp
mov
loop,pt
sub
add
into
lea
sub
dec
dec
mov
add
lahf
cmp
loope
push
int3
pop
rcll
add
test
pusha
add
inc
fistl
dec
dec
lods
sbb
add
or
sti
fxch
dec
mov
out
out
movsl
test
cltd
jno
pop
mov
mov
iret
adc
adc
cltd
sbbl
fs
cltd
popa
fldt
mov
push
xchg
cmp
dec
pop
cmp
dec
cmpsl
sbb
icebp
lret
add
testb
add
mov
adc
hlt
add
orl
add
mov
push
add
push
add
xor
add
push
sub
loopne
cmp
hlt
add
add
add
call
add
pop
fsubrl
scas
or
push
add
add
add
jp
std
in
lock
in
mov
or
js
dec
mov
es
cs
jge
cli
and
add
dec
cmp
lods
jae
add
cmp
lock
fwait
out
add
std
in
rolb
jnp
mov
stc
cmp
pop
inc
mov
nop
add
cmc
nop
add
mov
pop
pop
inc
rolb
daa
push
add
add
stos
push
scas
data16
add
cli
mov
cld
jb
fcmove
xchg
push
cmp
js
sbb
jae
add
add
enter
sub
stos
sub
adc
jmp
pop
or
add
cs
add
add
and
sbb
adc
mov
add
fwait
mov
sbb
add
sub
pop
loope
mov
dec
or
rcrl
cwtl
pop
jno
push
add
add
cmc
add
add
pop
cmp
add
pop
cmp
or
add
xchg
add
xor
add
push
dec
inc
pop
cmp
repz
loop
xor
outsb
xchg
cli
hlt
add
add
arpl
mov
push
add
mov
popf
outsb
cld
aaa
mov
loopne
jbe
jmp
add
out
xchg
adc
push
lods
loope
repnz
sbb
or
fisttps
sarl
mov
add
add
sub
jbe
leave
jb
inc
add
std
xlat
fsub
mov
cmp
add
add
cmp
add
nop
add
addb
or
mov
cmp
xchg
add
sub
popa
into
sub
cmp
mov
dec
or
sbb
add
popf
push
mov
clc
inc
add
add
loopne
mov
add
mov
add
mov
icebp
arpl
repz
cmpsl
in
mov
or
add
or
inc
add
lods
xchg
or
or
add
mov
sub
lret
or
or
pop
mov
lea
mov
dec
pop
push
push
gs
repnz
loope
rolb
js
lahf
fiaddl
mov
sbb
scas
clc
push
add
sbb
movsb
add
popf
xor
inc
pushf
js
jbe
fisttpll
push
rolb
add
add
adc
popf
dec
add
jg
jb
decl
repz
mov
sub
mov
adc
out
mov
incl
add
push
add
stos
decb
enter
test
aas
dec
aam
insl
add
mov
pop
fwait
and
mov
inc
add
sub
scas
jo
aaa
ret
lret
daa
pop
sbb
jp
add
sub
add
push
jbe
inc
testl
ss
add
add
and
push
add
iret
inc
sahf
adc
pop
in
mov
fcmovne
loopne
test
xchg
push
mov
out
push
pusha
add
dec
cmp
movsl
enter
aaa
mov
pop
sbb
mov
add
pop
mov
mov
daa
lcall
xchg
add
push
add
loopne
ljmp
ret
into
ret
mov
lahf
inc
js
lcall
in
xchg
cwtl
inc
add
das
stos
xchg
add
and
movsb
add
fldl
add
add
add
cmpsb
add
add
add
pusha
add
add
sub
xor
roll
popa
add
out
jl
jmp
stc
test
pushf
ficompl
bound
mov
sbb
add
out
ret
add
addb
inc
jg
xchg
int3
or
add
cmp
xor
xchg
or
mov
add
adc
sub
add
das
dec
imul
pop
mov
cld
cs
cmp
add
sub
add
movsb
add
out
into
mov
aad
add
mov
xchg
add
inc
add
outsb
adc
pop
inc
jl
add
jl
add
add
lea
or
cmp
scas
inc
add
push
add
add
aad
xchg
les
mov
sub
add
sub
test
sub
testb
lret
scas
in
mov
sbb
mov
incb
mov
ret
lock
mov
repz
jbe
add
inc
add
add
out
iret
adc
dec
das
sahf
fmuls
add
add
adc
add
add
mov
add
add
out
jl
add
loopne
fidivrl
lret
add
and
test
test
imul
add
lea
test
add
dec
je
add
lret
sub
and
jp
add
dec
jle
ret
addr16
stos
sti
test
loope
add
add
add
sbb
add
mov
jbe
loop
ljmp
mov
and
mov
adc
cmp
add
add
push
clc
lcall
and
add
je
push
movb
jmp
mov
in
and
jge
mov
add
inc
add
mov
adc
lahf
fwait
ja
mov
push
xchg
cmp
jns
loopne
aaa
test
xchg
xchg
add
mov
add
adc
fisubrl
nop
add
insl
pop
addb
add
add
xor
add
or
in
push
xchg
mov
clc
mov
int
jmp
add
mov
add
dec
add
sbb
sbb
outsl
arpl
mov
daa
gs
lret
lea
aam
ret
addb
repnz
outsl
pop
int3
push
add
dec
push
and
rolb
jle
lret
jge
jns
add
mov
std
lret
cwtl
les
mov
outsl
cld
xor
lcall
mov
mov
mov
mov
arpl
push
add
ljmp
fimull
add
add
enter
cltd
push
add
add
add
out
popf
xchg
lock
rcrl
add
lods
cmpsb
add
dec
jecxz
fidivrs
movsb
add
nop
add
push
nop
add
pop
loop
sahf
sub
add
aam
pop
ret
out
pop
mov
cmp
loop
repz
add
pop
out
jb
push
daa
adc
push
xchg
add
inc
add
add
add
mov
stos
xor
add
mov
clc
mov
jp
add
inc
popa
sbb
xor
xchg
add
push
add
pop
out
les
sbb
push
pop
adc
dec
push
xor
addb
outsb
clc
adc
pop
xchg
mov
dec
lret
add
ds
push
lahf
dec
jg
cmp
lds
add
add
cmp
pop
sbb
ds
fldl
xor
add
add
mov
push
test
adc
push
add
arpl
add
dec
mov
mov
movb
dec
out
lcall
dec
daa
out
mov
push
add
cmp
adc
lret
rolb
add
add
mov
jecxz
inc
add
add
add
jg
repnz
push
inc
inc
nop
add
pop
xchg
arpl
stos
mov
addr16
xor
mov
add
cmp
jb
les
xchg
add
orl
pop
cmp
push
add
insb
inc
hlt
add
add
mov
jo
cmpsl
cltd
sbb
loop
dec
pop
sub
dec
mov
dec
adc
mov
push
add
xor
loopne
add
add
cmp
mov
xchg
add
add
in
mov
pushf
add
insl
dec
or
movsb
add
adc
pop
std
cmpsb
add
stos
sbb
add
push
add
add
lock
inc
mov
int
or
loope
add
cmc
pop
fwait
xchg
aas
fdivs
and
scas
mov
in
jg
aad
inc
add
popa
pop
fisttpll
mov
ret
clc
sarl
add
mov
add
push
mov
add
add
push
and
add
or
in
movsl
outsl
std
out
xor
je
mov
add
push
adc
imul
add
add
mov
add
hlt
add
add
sbb
push
sbb
stc
adc
in
pop
movb
xor
xchg
inc
add
add
lret
sbb
scas
sub
inc
add
adc
add
scas
popf
ret
test
add
andl
fidivrl
shll
movsl
add
mov
add
outsb
mov
add
mov
add
xchg
lcall
add
dec
inc
add
enter
add
sti
addr16
add
sub
add
push
dec
insl
std
call
int3
movsb
add
add
add
add
mov
loopne
pop
or
add
add
add
and
push
add
add
fdivs
jns
rolb
add
pop
daa
inc
add
add
adcl
mov
mov
push
add
mov
mov
jne
dec
icebp
jne
push
add
ds
add
add
add
out
or
push
leave
aas
push
push
pop
fbstp
add
sub
daa
add
add
xor
xchg
sbb
add
add
cmp
rolb
pop
xchg
sbb
fwait
mov
cwtl
sub
add
add
mov
sub
xchg
ja
mov
sahf
cmp
add
add
enter
fcoms
rolb
in
mov
push
add
add
fisttpl
add
lods
fadds
in
outsb
iret
mov
lcall
aaa
jne
lret
cmp
mov
imul
gs
test
sti
push
or
sub
jg
lods
pushf
push
add
inc
les
xchg
add
add
add
mov
add
test
xchg
add
add
add
xchg
rolb
add
add
icebp
add
adc
add
test
lret
ds
jne
add
cmc
adc
add
lcall
jbe
push
add
add
add
loope
add
into
dec
cld
into
mov
or
add
dec
add
loopne
hlt
add
fbstp
ret
sub
dec
outsb
stos
dec
mov
add
add
sti
sub
loope
dec
das
scas
lret
and
adc
std
inc
add
xor
sub
add
xchg
add
add
lcall
add
lds
pop
stc
jle
add
add
mov
icebp
shll
rolb
hlt
add
or
xchg
add
inc
add
jno
stc
jg
in
data16
xor
cs
mov
sub
mov
jno
xbegin
add
jecxz
movb
lods
popf
in
cwtl
pop
add
into
inc
add
mov
add
add
add
inc
movsl
xchg
dec
outsb
out
xlat
and
mov
pop
outsl
repnz
enter
test
add
bound
mov
pop
or
add
mov
mov
movsl
jg
xchg
push
add
add
jmp
fbld
aam
pusha
add
add
mov
ret
or
add
ljmp
push
arpl
mov
add
add
in
data16
nop
add
aam
pop
mov
mov
mov
sub
mov
call
inc
add
push
push
add
mov
xlat
add
mov
xchg
enter
hlt
add
add
dec
xchg
add
out
bound
mov
pop
push
xor
roll
mov
movb
mov
mov
into
test
out
pop
xchg
mov
sub
adc
push
add
test
dec
pop
mov
mov
push
arpl
and
mov
cmp
xchg
add
jg
jl
add
add
add
mov
jo
pop
int3
push
sbb
add
add
scas
repnz
sbb
adc
ljmp
mov
rolb
mov
sbb
add
mov
mov
and
testb
add
and
xor
add
add
mov
std
push
es
push
add
inc
add
and
mov
add
popa
leave
fstpl
das
movsb
add
sbb
add
push
inc
fiadds
lds
in
cmpsl
jmp
jecxz
adc
stos
xchg
add
in
add
inc
daa
sahf
pushf
xor
adc
ret
inc
cmp
add
add
add
cmp
add
xor
movsb
add
into
xor
fstl
outsl
cs
setl
mov
add
add
ficomps
jbe
pop
popf
sbb
add
fadd
and
repz
mov
mov
xor
fiaddl
imul
add
push
add
mov
add
in
xchg
aaa
imul
add
add
dec
movb
add
insb
mov
push
add
pop
push
add
adcl
lea
pop
mov
sub
add
dec
repnz
inc
add
fimuls
test
push
add
jne
add
mov
dec
jno
bound
mov
decb
out
pop
aad
mov
mov
dec
lret
pop
xchg
add
jnp
mov
mov
add
les
inc
repz
add
push
shll
xor
mov
jno
aad
add
loop
adc
pop
pop
add
in
adc
leave
icebp
insl
pop
fisubrl
mov
movb
pop
outsl
xchg
ljmp
add
add
mov
sbb
add
mov
mov
mov
add
mov
ret
dec
aam
into
icebp
add
aad
add
add
add
pop
pushf
jno
mov
dec
adc
mov
mov
mov
test
movsb
add
jae
sbb
jns
add
xchg
movb
aam
mov
loopne
data16
stos
xchg
inc
add
and
mov
addr16
ret
mov
aam
mov
add
pop
or
add
add
ds
add
dec
jp
add
daa
cmpsb
add
add
aad
mov
aam
mov
in
pop
jg
push
add
cmpsb
add
into
push
push
add
mov
add
or
add
mov
add
stos
in
mov
adc
mov
add
adc
add
test
ja
add
xor
sub
ret
xor
inc
add
add
xor
ret
fisubrs
stc
sbb
cs
lahf
add
push
xor
jbe
mov
mov
mov
push
jnp
imul
xlat
es
add
lea
add
imul
scas
and
or
dec
add
mov
xor
js
insb
push
imul
inc
add
add
add
hlt
add
add
pop
cwtl
adc
xchg
test
fstl
aam
mov
sub
xlat
jbe
stc
testb
dec
in
int3
inc
add
add
mov
adc
add
xlat
inc
add
jnp
outsb
add
mov
add
sub
add
add
movsb
add
jl
mov
lahf
sub
call
pop
mov
push
add
je
jecxz
add
add
push
xor
add
add
insl
jo
cmp
stc
ret
or
cmp
add
add
xchg
pop
mov
nop
add
add
dec
call
add
add
add
nop
add
add
push
inc
sub
insl
cmp
mov
push
mov
mov
test
xchg
jmp
add
xchg
adc
xchg
xchg
add
scas
sbbl
lock
push
add
add
add
add
lods
mov
ret
adc
add
sti
pop
xor
add
jno
add
fisubrs
aas
mov
xor
sub
test
push
push
xchg
or
add
add
jmp
pop
icebp
roll
mov
add
or
mov
add
adc
jg
add
sub
mov
push
jb
xlat
jmp
add
or
jbe
inc
add
imul
mov
add
push
xchg
pop
adc
mov
stc
xor
inc
add
data16
pop
sbb
outsb
cld
mov
add
add
rolb
push
cltd
xchg
addb
add
dec
mov
mov
popa
stos
sbb
lods
and
pop
fsubl
xchg
mov
sbb
add
inc
add
or
add
or
xchg
pop
mov
fisubl
mov
test
add
movsb
add
mov
inc
xchg
or
xchg
add
add
cwtl
aad
jnp
loop
sbb
mov
add
add
adc
mov
add
sahf
sahf
dec
sbb
push
add
xchg
psubb
add
stos
les
lock
mov
add
mov
out
out
pop
and
or
std
push
add
daa
cmp
and
mov
pop
push
pop
dec
jecxz
pop
adc
scas
push
pop
movsb
add
inc
sub
stc
outsl
in
add
add
movb
data16
adc
sub
xor
mov
xor
enter
cmpsl
pop
push
pop
fldenv
repnz
add
or
pop
pop
and
cmp
jb
push
add
sub
sub
rcrl
call
ljmp
push
add
add
jno
inc
dec
inc
xchg
dec
pop
sbb
add
add
arpl
push
xchg
add
add
mov
add
icebp
sub
dec
mov
push
add
adcl
stos
mov
and
xorl
add
sub
leave
xor
add
shrl
add
cmp
sbbl
jg
add
lods
push
pop
jle
add
es
xchg
add
jae
add
pop
jnp
add
rolb
sub
push
xchg
add
add
sbbl
mov
inc
jo
cmp
popl
mov
add
pop
xchg
add
lods
push
add
imul
das
cld
jp
add
xor
xor
test
add
add
or
mov
dec
xor
loop
jp
jp
mov
xor
push
add
xchg
push
dec
jle
sub
and
mov
iret
mov
rolb
aam
ja
lods
test
cmp
add
add
addb
adc
pop
test
mov
add
dec
aam
pop
test
add
add
jg
rolb
add
test
daa
and
mov
pop
sub
add
push
add
icebp
sahf
clc
test
pop
cmp
lret
add
ret
add
faddl
mov
pop
xor
mov
ja
or
pop
leave
in
and
mov
add
push
push
add
add
push
add
add
add
add
xor
add
mov
and
arpl
mov
add
adc
jo
shll
cmp
cwtl
xchg
sti
lcall
and
mov
xchg
add
push
add
inc
add
leave
push
pop
jns
add
fdivrp
or
in
push
lock
sbb
mov
adc
sub
add
add
negl
sub
add
pop
mov
add
xor
add
incb
jns
repnz
add
jmp
add
dec
mov
add
leave
jge
bound
mov
add
xchg
aas
testl
test
add
add
adcl
add
enter
mov
inc
out
orl
into
xor
lea
sti
jp
outsl
mov
add
rcll
lock
outsb
mov
add
add
sbb
repnz
cmp
mov
bound
mov
test
push
add
shl
jo
mov
leave
rolb
stos
dec
mov
or
add
add
mov
add
add
stc
mov
mov
add
add
jl
hlt
add
mov
fwait
repnz
add
sbb
divl
sub
lahf
sti
repz
arpl
loop
aad
add
pop
sub
add
cld
push
add
out
inc
add
cmpsl
add
or
in
and
mov
add
adc
push
fs
pop
inc
add
jp
adc
inc
test
in
nop
add
loopne
jp
les
sub
add
mov
jnp
scas
push
and
rolb
pop
dec
and
imul
stos
xchg
add
lods
or
add
mov
out
push
add
mov
add
ja
add
fists
cmpsb
add
pop
add
sbb
adc
add
add
add
test
add
mov
pop
fstpl
mov
xchg
and
jecxz
out
lcall
lea
sti
dec
std
mov
xchg
add
pop
movsb
add
shrl
ljmp
add
mov
add
mov
xchg
add
adc
add
and
movsb
add
dec
and
inc
add
sbb
and
add
pcmpeqw
xor
insb
lock
addb
add
add
add
add
sbb
icebp
pusha
add
data16
sbb
loop
pop
mov
sbb
cli
adc
hlt
add
inc
add
cld
add
sahf
inc
add
xchg
sbb
int3
adc
cmp
add
rolb
add
pop
rolb
add
shll
add
arpl
jp
bound
mov
ret
add
rolb
cwtl
xchg
add
xchg
mov
sahf
cwtl
outsl
in
iret
xor
jno
lods
and
xlat
addr16
arpl
dec
and
mov
add
das
mov
mov
cmp
aaa
adc
jg
xchg
add
lret
xchg
inc
add
jb
data16
cmp
add
rolb
push
aas
lcall
add
add
add
fbstp
pop
js
add
subl
add
mov
push
roll
movsl
inc
int
mov
add
add
inc
add
int3
jno
add
mov
outsb
addb
aad
add
push
mov
inc
add
lret
add
sbb
cmovne
add
bound
mov
mov
mov
add
push
jnp
mov
test
scas
jmp
add
add
jns
add
mov
test
mov
int3
fimull
loope
lock
add
add
add
mov
sbb
insl
mov
addb
push
add
add
jecxz
or
rolb
inc
mov
in
add
add
and
pop
test
mov
add
add
add
add
mov
add
add
cmp
fmuls
rolb
popf
push
add
jle
add
sub
add
add
add
add
add
mov
stos
inc
sub
xchg
out
xlat
cmc
dec
popa
mov
int
add
add
into
xor
pop
iret
and
and
dec
pop
push
add
test
adc
cltd
mov
and
mov
add
add
adc
ret
or
stos
jo
sbb
add
ja
add
sbb
in
cmp
push
add
add
add
or
add
in
jecxz
imull
inc
orl
outsb
add
mov
add
add
add
sub
add
int
pop
call
add
mov
popa
cs
rolb
jg
out
cmp
std
leave
cmp
mov
push
out
xor
hlt
add
mov
sub
jle
int
mov
add
rolb
inc
add
mov
add
into
xor
xor
fcoms
add
add
add
jecxz
cli
fwait
sbb
or
jle
add
lock
test
add
nop
add
loope
dec
leave
dec
sti
fwait
hlt
add
add
push
add
add
or
sbb
mov
add
arpl
add
push
add
rcrl
mov
leave
cmp
mov
dec
sub
push
pop
lahf
incb
add
add
std
add
lds
add
outsl
jg
test
jo
push
add
add
push
mov
ljmp
push
add
xchg
add
add
add
add
add
mov
jle
add
add
xchg
fnstsw
ljmp
add
xchg
add
cs
int
add
mov
mov
add
add
add
js
jae
add
mov
push
aaa
lcall
lods
push
xchg
mov
mov
or
fucom
add
add
cwtl
into
test
pop
les
xor
loope
mov
icebp
in
clc
gs
add
dec
iret
repz
mov
pop
xchg
add
add
xor
rolb
adc
inc
add
and
mov
add
xor
lret
add
rorl
mov
fildll
repnz
enter
mov
inc
add
add
add
add
sub
xchg
add
add
add
std
int3
lea
mov
add
mov
add
stc
lods
sbb
add
sub
repz
add
and
fidivrs
mov
dec
dec
xchg
in
mov
add
imul
push
sbb
add
add
xchg
mov
repz
mov
testl
pusha
add
mov
sbb
add
popf
lods
jb
pop
push
add
fiaddl
fdivrl
pop
adc
fwait
enter
inc
movb
add
adc
cs
and
divl
add
add
cltd
sahf
pusha
add
or
xor
inc
add
in
mov
push
add
push
lret
rolb
add
icebp
daa
or
mov
faddl
loope
sbb
mov
int3
leave
les
addb
in
lods
inc
daa
das
lea
add
add
xor
push
and
mov
popa
stc
sbb
mov
pop
lods
das
add
mov
jo
inc
add
add
dec
add
mov
cli
pop
jg
mov
add
cltd
sub
aad
imul
add
loop
xchg
mov
rolb
add
fnstcw
xor
add
xchg
dec
xchg
mov
mov
add
add
add
xor
push
add
lods
adc
test
pop
rolb
stos
ret
cmp
sbb
adcl
add
add
xchg
adc
add
insl
mov
xchg
and
mov
mov
repnz
add
stc
stc
push
pop
pusha
add
dec
jno
jbe
mov
add
adc
xor
add
ret
jl
add
ret
loopne
xchg
add
add
fdivrl
mov
sub
add
test
loopne
mov
xchg
test
mov
jb
inc
add
add
add
lcall
jne
or
add
stos
out
dec
add
jp
imull
mov
xchg
mov
add
aaa
add
imul
jne
add
add
rcll
add
dec
rolb
pop
add
in
addr16
movsl
mov
add
rolb
rolb
dec
ret
add
aas
sub
cmp
jg
mov
add
repnz
xchg
push
add
mov
jge
cmp
fmul
cli
out
and
mov
xchg
sbb
add
jecxz
xchg
cmp
add
fwait
mov
pop
jecxz
iret
cmp
add
add
add
cmp
and
mov
sub
or
push
fidivrs
add
adc
fstps
test
mov
push
add
ret
jns
sub
add
cld
clc
cmp
xchg
enter
je
sbb
add
mov
inc
incb
ret
cmp
dec
repnz
test
add
dec
fwait
aas
cmp
mov
sbb
ret
push
add
testb
add
fadds
std
in
pop
cmp
push
add
pmaxsw
add
inc
or
rolb
pushl
add
sbb
add
addb
add
loop
sub
and
xor
rolb
pop
cli
mov
pop
cwtl
xchg
xchg
add
add
add
addb
add
add
jecxz
mov
add
insb
ret
cwtl
push
cld
push
add
outsl
mov
or
push
jnp
xchg
add
call
test
rolb
xor
xchg
inc
add
scas
daa
adc
sbb
sbb
movsl
jnp
cltd
or
add
shll
or
sub
jno
fstpt
frstor
mov
xlat
and
sbb
and
movsb
add
add
xor
xchg
add
mov
dec
push
loop
adc
movb
insb
lea
pop
cmpl
test
sti
mov
add
fwait
mov
pop
in
int3
and
scas
xor
data16
jno
xchg
ja
xor
mov
add
add
add
outsl
adc
imul
add
cltd
dec
ljmp
sub
add
pop
shll
lea
nop
add
stc
scas
mov
mov
add
jbe
rolb
ljmp
dec
popa
popf
mov
pop
mov
add
cmp
mov
gs
pop
mov
shll
or
ss
cmpsl
out
adc
loope
add
add
rolb
sub
mov
pop
jle
mov
repz
faddp
add
mov
out
lahf
nop
add
mov
or
adc
jmp
je
cld
add
add
mov
lds
inc
add
push
add
sti
das
sahf
xchg
xlat
mov
add
aas
sub
xchg
add
subl
mov
mov
add
mov
add
pop
repnz
add
cmp
add
lds
inc
push
adc
int3
and
mov
push
das
push
push
xchg
add
dec
aas
pop
loop
mov
aaa
xor
push
add
addl
lcall
pop
mov
add
xor
leave
and
mov
adc
xchg
jo
mov
jno
xchg
and
mov
sarl
rolb
js
cmpsb
add
outsb
jns
xchg
add
mov
lods
or
add
add
add
scas
cltd
push
lret
mov
push
add
outsl
aas
outsb
xor
dec
xor
add
add
cmp
dec
xstore-rng
cmpsl
add
mov
jp
sub
fstp
xchg
adc
lods
xor
lods
adc
outsl
lods
xchg
std
pusha
add
inc
rolb
add
enter
fs
sbb
mov
mov
scas
addl
mov
sub
add
add
mov
push
add
jmp
out
popa
and
fucomp
jns
push
add
dec
push
cmp
xchg
add
mov
bound
mov
sbb
add
mov
add
add
add
movsl
repnz
add
mov
dec
xchg
add
sub
add
dec
dec
pop
test
push
add
push
add
loop
xor
loop
pusha
add
adcl
lahf
cmp
add
and
mov
add
rolb
daa
xchg
add
cwtl
add
mov
add
inc
add
in
mov
add
fwait
cmp
add
add
mov
lock
add
jecxz
sbb
mov
mov
mov
int
pop
sbb
push
add
les
scas
daa
add
mov
or
add
add
fwait
lret
je
xchg
add
cs
pop
scas
leave
jp
in
pop
sbb
mov
inc
add
clc
add
rolb
not
mov
aas
imull
aas
xchg
add
aam
in
add
xchg
add
add
cmpsl
scas
aas
xchg
mov
xor
lret
mov
jns
rolb
lahf
inc
hlt
add
mov
add
push
add
scas
mov
jo
mov
movsl
pop
jno
lcall
jmp
xchg
add
add
iret
pop
xchg
aad
add
out
mov
add
add
xor
or
add
push
fstl
fstp
in
jle
add
add
js
mov
add
push
data16
add
lret
dec
add
iret
ljmp
ret
repnz
mov
lret
mov
add
mov
cli
and
arpl
mov
popl
lods
jne
jo
pusha
add
add
dec
movsl
push
add
cmp
inc
in
add
add
add
jl
fwait
push
add
mov
nop
add
sub
jg
shll
add
outsb
xor
add
adc
fwait
xchg
add
fdivrs
add
loop
inc
add
pop
jl
add
push
add
xchg
leave
xor
shl
push
add
push
add
pop
loope
add
mov
add
call
sub
dec
inc
movsl
sub
mov
stos
roll
mov
add
add
add
cmp
add
add
and
fists
add
scas
lea
add
sbb
add
add
mov
and
mov
mov
push
jns
sti
xor
popf
mov
xchg
add
mov
lcall
add
push
pusha
add
ret
add
sbb
add
rolb
cmpsl
gs
add
jle
loop
inc
testb
add
add
sub
insl
pop
push
jns
aaa
imul
mov
rolb
ret
xlat
lret
addb
add
cmpl
lret
daa
and
mov
cmc
add
cmpsb
add
fcmove
push
jnp
mov
mov
add
add
sbb
jle
add
mov
add
cmc
arpl
and
mov
xchg
add
stos
inc
add
dec
jb
and
mov
add
jl
add
add
push
push
jns
add
add
mov
mov
in
add
mov
add
add
lret
lea
mov
add
test
pop
or
cmpsb
add
pop
mov
outsb
push
add
push
add
in
xor
push
add
or
out
mov
jge
lea
call
outsb
mov
mov
mov
add
in
push
push
add
addb
icebp
shrl
test
pop
sahf
enter
add
das
xchg
insl
inc
adc
in
lods
loop
rolb
aaa
aam
imul
cs
and
mov
add
mov
mov
jp
outsb
add
add
add
loop
cmp
cmp
add
push
leave
roll
call
and
mov
fisubs
sub
xchg
xchg
push
mov
sub
add
and
pop
mov
add
cltd
adc
inc
std
lods
adc
test
dec
addb
jns
and
out
lahf
xchg
inc
add
push
add
frstor
cli
out
xlat
decb
jp
add
inc
add
add
sub
cmpsl
add
mov
lds
lods
mov
hlt
add
add
pop
bound
mov
and
push
xor
adc
decl
sub
add
pop
gs
add
mov
inc
add
arpl
pop
mov
push
add
mov
xor
cmc
das
cld
testb
add
sahf
fldcw
lret
add
out
sbb
neg
mov
addb
fyl2x
xor
popf
push
add
add
push
jns
out
jp
push
push
pop
sub
das
adc
in
and
lods
int
add
std
imul
add
fmul
test
clc
add
jl
add
out
frstpm(287
cwtl
jne
rolb
dec
movsl
dec
lock
test
mov
sbb
movsl
icebp
int3
les
inc
data16
add
lahf
jbe
sub
fnstenv
mull
add
add
test
add
rcll
pop
mov
add
xlat
mov
push
dec
test
add
add
int3
loopne
cmc
xchg
sub
jb
dec
mov
rcl
clc
push
and
add
push
lods
jl
add
insl
xor
rolb
xlat
icebp
sbb
or
push
add
cmpsb
add
add
adc
movb
mov
mov
add
jo
push
add
add
add
iret
xor
mov
or
out
xchg
cli
js
in
xchg
add
xchg
xlat
hlt
add
pop
jle
fwait
dec
testb
leave
or
adc
mov
insl
aaa
push
add
mov
mov
mov
add
add
in
mov
push
fpatan
pop
cmp
pushf
jbe
push
add
in
and
add
cs
add
adc
add
add
mov
jae
add
lock
out
adc
dec
je
mov
add
mov
mov
mov
pushf
add
out
inc
add
mov
add
pop
xchg
or
add
inc
add
add
jnp
pop
fidivrl
add
lcall
jo
cmpsl
call
add
cld
dec
adc
movsb
add
adcl
cmp
cmp
add
pop
add
cmp
add
add
int3
xchg
shrl
mov
cld
or
add
loop
sub
pop
sub
add
scas
xchg
add
dec
inc
sbb
jno
in
push
add
mov
add
xor
movb
mov
jge
inc
adc
imull
ret
adc
pusha
add
mov
jae
shll
ficoml
add
iret
out
jle
pusha
add
add
mov
add
lods
add
mov
gs
into
mov
add
add
adc
das
xchg
xchg
inc
add
sub
mov
ret
push
add
cmp
mov
dec
mov
icebp
add
nop
aas
inc
add
std
test
loopne
add
or
add
pop
xlat
dec
xchg
dec
mov
cmp
xlat
iret
xchg
mov
fcomp
inc
add
hlt
add
or
mov
adc
imull
jns
add
scas
cs
int
cmp
adc
loop
sub
inc
jge
add
movsb
add
jle
outsb
inc
rolb
xor
shrl
lock
xor
inc
add
add
add
add
addb
jae
stos
shrl
add
add
add
mov
xchg
hlt
add
pushf
xchg
push
add
add
add
pushf
or
sbb
sub
add
and
mov
add
push
add
data16
addb
lret
and
sub
and
pop
aad
int3
mov
sub
out
loope
adc
shrl
add
neg
cmpsl
addb
xor
mov
cld
lods
fcompl
add
mov
mull
add
out
stos
sub
add
lock
add
mov
push
rolb
repnz
mov
bound
mov
and
mov
iret
pop
push
cli
sub
fldt
cmp
lahf
sbb
roll
pop
sbb
clc
mov
sbb
and
mov
out
push
mov
push
add
add
and
add
jno
fidivl
xchg
add
add
test
mov
mov
add
ffree
mov
out
jb
xor
push
add
push
add
sbb
add
add
mov
add
add
add
mov
add
leave
xchg
add
lret
jle
add
shrl
sbb
xor
add
movsb
add
add
xlat
mov
push
mov
cli
push
dec
popf
jno
sbb
cld
add
addb
add
and
mov
sub
inc
psllw
jne
xchg
insl
in
jl
icebp
pop
and
jmp
add
add
add
insl
test
sbb
mov
mov
cmp
sbb
add
mov
push
inc
add
stos
call
cmpsl
sbb
add
mov
mov
aas
sub
sbb
add
leave
push
add
add
lock
addr16
scas
lea
pusha
add
sbb
add
add
loop
mov
pop
and
jne
leave
nop
add
in
leave
pusha
add
aas
mov
add
mov
add
pop
fsts
sbb
add
pop
jge
fsubrl
sbb
jb
pop
xor
adc
je
and
mov
push
add
sbb
clc
fs
add
data16
add
mov
xchg
add
int
aaa
dec
repnz
daa
loopne
int3
negl
adc
fimuls
popf
sub
rcrl
add
testb
inc
imul
stos
jmp
add
icebp
fisubrl
fbstp
fcom
cmpsb
add
cld
in
cmc
rcrl
dec
jb
aam
mov
push
lods
xchg
add
add
daa
shl
add
ficoms
add
les
int
xchg
xchg
sbb
xor
sahf
push
xor
hlt
add
or
add
add
xorl
inc
je
add
add
testb
add
sbb
insb
jecxz
add
mov
aas
xor
fmuls
and
jecxz
sbb
push
insb
cwtl
outsb
dec
add
mov
jo
dec
mov
aad
ds
push
add
xchg
push
add
lds
cmp
mov
add
das
mov
cld
sub
ja
mov
out
dec
push
add
into
insl
cld
mov
and
xchg
add
mov
jp
add
dec
add
test
jge
test
push
movb
aad
lret
sub
dec
xchg
mov
and
mov
jle
add
add
mov
pop
pop
fstps
jns
shrl
add
inc
xchg
cmp
xchg
cmp
add
add
mov
add
xchg
add
and
mov
pop
jno
add
add
addr16
push
add
shl
add
stc
sbb
lret
jmp
addb
rolb
xor
fimull
dec
and
mov
jns
stos
pop
xchg
add
pop
push
add
in
jne
add
push
sbb
add
add
mov
mov
add
rolb
add
pop
movsb
add
add
dec
inc
add
add
ror
add
add
addr16
aas
mov
add
mov
add
or
iret
in
imul
cmp
sub
add
add
jmp
daa
popa
sub
add
jmp
jmp
mov
inc
add
inc
jmp
aad
add
fcmovnu
pop
sub
aad
je
and
dec
rolb
xchg
les
inc
add
out
xchg
inc
add
nop
add
clc
out
filds
into
lods
aam
pop
enter
jno
add
add
mov
dec
out
add
mov
mov
call
add
je
mov
add
cmpsl
icebp
mov
stos
int3
mov
add
hlt
add
movsb
add
add
stos
addb
add
jp
imul
cwtl
dec
mov
rorl
popf
mov
dec
in
or
jecxz
add
xchg
add
sub
add
jb
loope
add
add
ret
jo
cmpsb
add
lahf
push
les
cli
rcrl
loop
mov
testb
add
fmuls
push
popf
or
sbbl
add
add
insb
or
add
add
push
add
dec
fsubl
cmp
out
dec
das
jp
sub
add
jle
jge
add
add
clc
aam
inc
rsqrtps
mov
push
sar
rcrl
loope
stos
adc
jle
add
loopne
cltd
std
mov
add
xlat
dec
call
push
in
fisttpll
pop
movsl
movl
add
leave
daa
mov
mov
push
add
mov
mov
xor
jno
add
movb
enter
sbb
add
add
mov
inc
mov
xor
popa
sti
rolb
rolb
ss
add
pop
xchg
loopne
push
repnz
xchg
cmp
add
inc
or
mov
addb
add
add
test
add
mov
dec
scas
sbb
cmp
add
pushf
sub
cmp
leave
sti
adc
mov
jge
dec
push
fdivr
ficoml
mov
push
add
jae
add
or
add
jge
add
add
add
sub
mov
jnp
fmul
outsl
sahf
cmp
add
add
add
and
and
mov
push
add
pop
and
mov
cmp
add
add
add
or
out
leave
push
push
push
mov
lret
pop
insb
out
icebp
mov
out
ffree
add
xor
test
mov
pusha
add
fimull
int3
fbld
add
add
dec
cmc
fs
and
fisttpl
and
add
mov
int3
loopne
ljmp
lret
or
add
add
and
out
ja
les
aad
add
or
inc
add
imul
out
xor
add
int3
xlat
jbe
enter
mov
lret
sti
ljmp
add
bound
mov
shrl
and
add
les
mov
add
pop
test
lcall
add
cmpsb
add
and
cs
cltd
sbb
mov
out
sbb
add
add
add
mov
push
imul
add
add
mov
add
dec
push
add
dec
or
pushf
inc
push
inc
ss
mov
add
jmp
add
dec
insl
insl
xor
xlat
shrl
add
add
mov
and
cmpsb
add
scas
jg
in
lea
add
add
sub
add
aam
insb
inc
cli
pop
add
mov
fisubrs
sub
scas
stos
xor
hlt
add
add
inc
add
sub
cmp
add
dec
xchg
add
jg
ret
aas
push
cmp
add
add
dec
mov
mov
pop
jo
pop
push
add
pop
insb
and
mov
mov
inc
add
adc
add
xor
jmp
mov
jle
mov
sbb
out
rolb
add
push
add
es
add
mov
add
lret
dec
push
add
sub
add
mov
mov
lods
notl
inc
jmp
lods
inc
add
mov
daa
cmp
push
cmp
lock
lret
xchg
add
in
lods
adc
sub
xlat
and
xor
js
cmp
inc
add
add
mov
xchg
add
loope
add
in
xor
insb
test
push
rolb
lret
inc
mov
xor
mov
je
js
add
mov
add
repnz
js
inc
popf
xchg
dec
and
xor
clc
and
mov
add
add
add
add
or
out
fildl
xchg
nop
add
add
pop
push
xchg
in
mov
add
push
add
jmp
add
loop
pop
adc
fistps
jmp
les
mov
adc
mov
addb
loop
mov
inc
add
xchg
lahf
addl
mov
add
mov
push
jg
mov
add
roll
add
add
in
aaa
dec
push
test
cmp
mov
xor
mov
dec
cmp
sbb
xor
mov
add
mov
cmp
adc
push
add
add
add
add
add
testb
aad
int3
adc
or
dec
cmp
hlt
add
mov
or
out
jecxz
jns
add
mov
sbb
add
xor
add
out
je
xchg
popa
sbb
jle
add
imul
add
cmc
pop
pop
aas
pusha
add
mov
add
mov
lret
rolb
movsb
add
add
jmp
push
das
out
or
leave
sub
mov
jne
lahf
fwait
dec
adc
imul
add
mov
xchg
add
cmp
jecxz
add
add
enter
add
pop
cmp
aaa
imul
mov
rorl
xchg
pop
push
add
sub
int
xor
pop
jmp
add
int
add
adc
fidivs
aam
add
add
int3
xchg
add
lods
jl
add
push
and
scas
gs
adc
xor
add
cmp
add
pop
pop
stc
mov
ja
sub
add
add
push
data16
add
add
jmp
pop
xor
in
lods
in
lret
vmptrld
sbb
jns
mov
cmp
add
or
mov
mov
jg
cs
call
in
imul
scas
sbb
add
sub
ja
xor
outsb
xchg
add
imul
ficoms
iret
jp
in
push
add
mov
test
add
push
add
add
nop
add
jl
arpl
notl
pop
popf
jmp
inc
add
lcall
icebp
loope
test
mov
add
add
inc
lret
rolb
inc
enter
sbb
add
mov
add
mov
add
in
xchg
jecxz
add
mov
aad
add
daa
xchg
and
sarl
ja
in
push
ljmp
xor
sti
ds
mov
in
cmp
add
aaa
mov
push
adc
faddl
add
dec
shll
cmp
inc
jne
imul
inc
in
sub
jecxz
add
popf
push
add
mov
jne
sti
pop
addb
jb
push
add
inc
add
mov
add
jbe
insb
sub
xor
ljmp
seta
dec
push
inc
add
addb
push
add
add
sub
and
add
cmp
xchg
and
in
pop
push
add
add
sbb
add
test
dec
stc
push
add
mov
xlat
jp
add
imul
mov
inc
cmp
add
mov
test
mov
jecxz
pusha
add
lock
ja
sti
hlt
add
lods
aad
repnz
add
inc
add
js
pop
mov
xor
mov
add
add
scas
stos
xchg
or
push
add
add
in
shrl
jmp
fs
dec
icebp
jg
lret
cmp
movsb
add
mov
xchg
xlat
pop
add
push
scas
loopne
repz
or
add
movsb
add
inc
add
and
call
in
or
jp
test
mov
aas
lea
add
mov
sub
and
flds
dec
add
add
stos
outsl
cmp
gs
or
iret
xor
cmp
sbb
adc
movsb
add
add
cltd
pop
lcall
gs
add
jae
or
and
add
pop
xchg
ret
mov
aaa
jmp
mov
add
mov
add
push
add
jnp
xor
mov
lods
call
mov
jbe
jecxz
popl
add
mov
adc
cmpsb
add
sti
and
xchg
fisttpl
xor
cmp
pop
and
mov
add
add
sub
lcall
mov
sub
orl
add
mov
jmp
ja
aad
xor
pop
xchg
lock
adc
add
movsl
jle
bound
mov
push
mov
or
xchg
add
pop
repnz
mov
mov
jge
xor
jnp
into
and
loop
mov
adc
into
dec
ds
jbe
lea
fcoml
rcl
add
mov
fucom
and
je
mov
add
fcmovu
loop
add
dec
and
mov
sub
push
stos
xchg
add
add
add
push
add
add
dec
xchg
sahf
xor
add
mov
mov
outsl
aaa
sbb
data16
mov
jbe
dec
ds
dec
cltd
xchg
add
testl
add
add
sbb
add
rolb
and
add
adc
add
mov
inc
lret
xor
xchg
add
add
mov
add
add
int
clc
jns
cmpsl
xor
stc
sub
add
add
add
add
mov
rcll
sbb
addr16
xchg
pop
insl
push
insl
rolb
popf
mov
repz
in
mov
add
int3
out
xor
add
cs
enter
rolb
push
test
jae
add
sub
jge
pop
inc
add
jecxz
cmp
roll
stos
in
inc
cmp
pop
pushf
mov
inc
enter
sub
js
daa
push
add
mov
lods
icebp
push
int
or
addr16
add
add
iret
or
add
imul
jne
adc
push
add
and
jne
stos
in
add
mov
add
dec
mov
add
sbb
add
cs
addr16
addb
enter
jns
dec
pop
add
aaa
shll
and
mov
add
xchg
add
push
in
jae
pop
in
rolb
clc
fimull
add
push
add
push
add
pop
jo
cli
cwtl
inc
movsl
mov
fadds
inc
in
add
add
add
add
test
xchg
mov
add
sub
lods
repz
movsb
add
idivl
daa
cmovnp
fwait
jge
push
add
jecxz
add
jae
cmp
adc
cwtl
scas
fiaddl
push
addr16
add
add
mov
dec
jp
inc
add
data16
add
sub
add
ja
xlat
inc
add
add
mov
xchg
leave
mov
daa
cld
mov
faddl
mov
mov
movb
add
nop
add
mov
push
add
jmp
sbb
jp
add
mov
add
add
inc
ljmp
clc
fstps
sbb
xchg
add
add
rolb
pop
push
cltd
pop
leave
fs
mov
add
jb
in
das
cwtl
push
ret
lods
lret
push
adc
push
lods
sbb
roll
push
jp
les
out
mov
inc
mov
jge
inc
push
addr16
sbb
lods
nop
add
cmp
addb
dec
frstor
test
add
loop
cmp
popf
cmc
mov
xor
out
insl
and
loopne
adc
add
add
inc
add
das
add
rcl
add
add
insb
cmc
jns
movsl
xor
outsl
movsb
add
lcall
push
add
pop
cmpsb
add
popa
out
xor
xor
pusha
add
add
add
inc
inc
add
add
add
add
jne
scas
vpmacssdd
pop
pop
dec
mov
popa
fadds
cmpsb
add
ret
cmpsb
add
mov
sbb
pop
push
add
add
mov
add
out
add
jp
psrlw
add
mov
mov
daa
inc
add
outsb
jmp
mov
mov
inc
add
add
jae
rcrl
add
mov
test
xchg
out
stos
lret
cmp
imul
add
add
inc
adc
sahf
nop
add
ret
mov
das
cmp
jecxz
push
aas
dec
pop
cld
mov
wbinvd
push
add
add
js
enter
insl
dec
pop
movsb
add
add
iret
rolb
aad
add
jnp
int
fcoms
add
add
add
mov
sub
and
cmp
insl
add
cmp
roll
mov
jae
adc
addb
dec
addb
mov
add
xor
addb
inc
push
add
xchg
add
stos
and
mov
ljmp
popf
popf
and
pop
push
cltd
dec
push
add
and
mov
add
ja
clc
sbb
inc
add
pop
add
pop
popf
in
add
add
push
add
mov
add
add
addr16
jge
push
jns
cld
push
ljmp
jnp
xor
add
jg
add
add
lret
jae
add
xlat
fstpl
cmp
js
dec
inc
jp
xorl
decb
add
cld
push
add
add
dec
mov
mov
mov
pop
cmp
add
in
jno
lret
add
dec
mov
mov
cmp
mov
jle
arpl
into
pop
js
xor
add
lret
fsubrl
mov
add
and
mov
repz
pusha
add
add
test
jo
xor
dec
in
inc
aaa
add
ret
inc
add
sbb
jbe
mov
pushf
mov
mov
jno
movsb
add
xlat
outsb
pop
or
add
enter
call
sbb
xchg
pop
add
cmpsb
add
add
add
pusha
add
xchg
add
jae
hlt
add
add
add
cmp
pop
out
dec
inc
js
inc
add
pop
sbb
inc
jno
mov
js
dec
sbb
data16
xor
repnz
xchg
int3
fsubrl
repz
insb
fsubrs
loop
dec
cmpsb
add
add
in
add
mov
add
rolb
or
jns
bound
mov
add
int3
jo
arpl
add
jmp
and
mov
add
add
adc
mov
push
add
mov
mov
leave
xlat
cmpsb
add
mov
insl
and
cld
mov
into
lcall
jp
cli
stos
inc
add
add
mov
cmp
add
je
ljmp
mov
add
mov
test
cltd
loopne
aam
lcall
insl
push
mov
push
add
rolb
int
jne
add
jno
pop
cmp
xor
sbb
outsb
dec
mov
pop
and
dec
hlt
add
add
push
add
jecxz
ffree
pop
cmc
int3
stos
icebp
addb
add
call
jp
add
shll
cmc
pushl
lret
mov
fbld
int3
loope
cmp
add
add
in
add
jne
cmp
mov
bndstx
lret
repnz
pusha
add
popa
add
mov
icebp
jmp
clc
testb
mov
add
jnp
add
pop
fldenv
adc
cmpsl
dec
pop
popa
cmp
add
adc
mov
jp
add
cmpsb
add
add
xchg
add
das
scas
ror
mov
add
add
enter
loop
out
jp
add
mov
pusha
add
imul
sbb
jbe
sub
sub
add
cwtl
inc
add
jle
adc
push
add
dec
fisubl
add
add
dec
clc
in
push
add
jp
les
dec
and
jae
fs
setnp
imul
dec
or
pop
leave
aaa
jg
add
add
push
js
xadd
cmpl
add
and
cmp
jno
adc
cli
sub
mov
cld
sub
add
and
repnz
sub
jae
sub
add
imul
push
add
mov
addb
aam
mov
mov
xchg
inc
add
mov
xchg
add
imul
outsl
fdivrp
add
add
repnz
arpl
loopne
push
data16
pop
cmp
dec
and
mov
fbstp
cmp
add
or
add
add
sub
add
sar
add
arpl
jb
and
mov
add
cmpsb
add
inc
add
sub
insb
mov
add
or
push
lods
push
cmp
add
add
cmp
add
stos
inc
add
add
xor
loopne
testl
jns
fwait
or
push
push
add
aad
mov
out
jmp
adc
andl
mov
outsb
hlt
add
xchg
add
add
aas
or
add
aad
cld
mov
inc
pop
and
loope
add
add
add
mov
add
mov
js
add
js
pop
ss
enter
xor
or
mov
mov
in
mov
ds
cld
or
xchg
add
xor
add
push
add
mov
mov
and
mov
data16
sub
or
test
popa
ret
cmp
push
add
push
mov
add
lret
shrl
mov
add
addr16
testb
jb
in
iret
sti
mov
adc
add
ja
std
ret
and
stos
or
mov
cltd
push
add
pop
roll
mov
sub
push
add
add
add
add
repnz
sub
dec
jmp
mov
add
add
or
add
add
fdivs
xchg
add
mov
add
xchg
add
addb
inc
clc
xchg
add
mov
in
add
out
xchg
add
lds
mov
xor
adc
xor
add
mov
adc
inc
add
push
add
stc
or
addb
subl
clc
push
imul
jl
data16
dec
out
dec
fcomp
insb
pop
leave
lret
add
pop
loop
movsl
push
add
cmpsl
clc
pop
fwait
das
and
mov
jmp
mov
jl
idivl
add
dec
dec
sub
add
cld
out
int3
adc
loopne
icebp
dec
push
adc
fisubl
call
add
add
add
scas
mov
cwtl
mov
jae
adc
cmp
enter
stos
cmp
add
push
add
add
inc
in
mov
xchg
adc
add
pop
je
xchg
test
rolb
add
nop
add
in
push
dec
xchg
loop
and
mov
xchg
add
add
mov
testb
add
insb
lea
jge
sbb
cmp
add
rcll
enter
mov
dec
cwtl
ss
add
mov
gs
sub
push
cmp
add
add
jecxz
mov
movsl
adc
mov
enter
gs
adc
xchg
push
add
sub
outsb
xlat
bound
mov
add
sub
xor
insb
std
cli
add
mov
push
jecxz
cmpsb
add
add
mov
jnp
mov
test
decb
xchg
add
insl
inc
add
add
loopne
add
inc
add
sub
hlt
add
jmp
ja
fdivrl
mov
jp
sub
out
rolb
outsb
xor
pop
insl
lods
std
adc
add
add
add
jge
aaa
pop
mov
push
sub
jne
insl
jl
into
cmpsb
add
add
stos
call
movsb
add
sub
mov
nop
add
mov
add
icebp
and
mov
jmp
add
sbbl
sti
aam
out
arpl
add
or
cmp
add
add
dec
repnz
jmp
add
adc
xchg
jne
pop
enter
ds
xor
adc
pop
add
dec
repz
addb
jae
add
jmp
cmp
dec
cmp
out
dec
adc
rolb
outsb
fwait
popf
mov
pop
mov
lods
add
adc
cld
add
ret
mov
or
mov
or
sahf
test
popa
add
xchg
add
data16
add
pop
push
mov
lods
fsubrp
or
icebp
mov
add
pop
notl
add
jae
xchg
add
fbld
js
add
add
add
xchg
dec
dec
fistpl
or
add
cmc
cmp
add
out
mov
sbb
repz
mov
adc
xor
push
xor
shll
imul
and
insb
xchg
ret
mov
jmp
sub
loop
sbb
add
xchg
cmc
fs
lret
mov
ja
addl
repz
test
shrl
xchg
std
sub
mov
lds
testb
out
fwait
push
add
jno
add
add
add
in
jno
dec
iret
pusha
add
sarl
orl
iret
insl
dec
out
add
add
jns
add
add
sub
sbb
add
aas
das
nop
add
add
lcall
and
mov
jmp
push
add
push
add
rolb
lds
add
fisubs
add
sti
int
jle
rolb
sbb
add
and
jmp
imul
add
rorl
or
and
mov
inc
add
testl
jl
hlt
add
mov
cmp
lcall
add
in
mov
add
push
add
leave
int
data16
add
add
add
mov
add
adc
pop
sub
aaa
lea
add
add
add
add
popf
mov
mov
cli
lahf
pop
mov
xor
std
xchg
add
dec
lcall
insl
int3
mov
push
xor
adc
add
sbb
sbb
add
add
jmp
aaa
add
add
mov
pop
mov
add
mov
add
push
pushf
call
rolb
int3
fwait
mov
pushf
mov
inc
xchg
add
std
push
push
mov
mov
or
sarl
add
add
mov
add
movb
sarl
in
mov
add
pop
push
add
push
add
cld
mov
add
loop
cld
dec
stc
repz
add
mov
mov
clc
push
push
jle
dec
cmp
add
add
xchg
xchg
sti
lods
or
or
adc
pop
jns
jae
mov
clc
sub
add
inc
insb
jg
add
add
add
test
mov
sub
mov
push
add
out
xchg
add
add
lret
mov
pop
int
xchg
xchg
add
insb
imul
addb
add
lahf
add
daa
ret
fwait
push
add
in
cltd
mov
call
add
add
dec
jmp
add
adc
arpl
or
pusha
add
mov
fmul
test
add
inc
in
add
sub
mov
xchg
mov
testl
mov
and
mov
lods
mov
lret
mov
add
add
lret
add
add
xchg
cmp
inc
add
movl
add
mov
mov
popf
mov
fiaddl
xchg
mov
lods
sbb
les
cmp
ret
push
popa
inc
add
jmp
or
popl
mov
dec
or
add
js
out
xor
add
add
popf
pop
movl
add
mov
add
add
add
jbe
adc
or
add
cltd
mov
add
fldt
adc
into
jns
sbb
sub
add
add
push
add
or
add
cmpsl
or
jmp
add
in
subl
sub
jmp
add
mov
out
jns
rolb
imul
je
add
mov
pop
cmp
gs
xchg
cs
addb
add
add
jbe
ret
jecxz
adc
add
mov
mov
add
fildl
imul
mov
lcall
std
jle
add
scas
xor
sub
mov
fucom
add
imul
cwtl
ja
adc
cli
jnp
xchg
icebp
popf
notl
mov
testl
fistpll
cld
lods
push
add
add
and
mov
mov
scas
jno
mov
inc
out
cmp
popa
cmp
jl
add
lahf
stos
popl
mov
test
pop
mov
or
mov
add
loope
sub
sub
mov
jge
add
push
and
add
sub
add
mov
mov
jmp
in
das
add
mov
cmp
add
add
add
mov
add
mov
cmp
and
mov
cmpsl
insl
xchg
cli
dec
aas
dec
sub
sub
add
add
jmp
inc
xor
adc
popf
hlt
add
dec
int
popa
sahf
cs
popa
cmp
lret
xchg
add
add
jp
es
add
loope
add
pop
xchg
or
cwtl
mov
cmpsb
add
bound
mov
add
add
add
adc
gs
mov
xchg
add
add
add
fisttps
jae
dec
dec
lods
mov
mov
xchg
cmp
xor
push
mov
mov
xor
imul
mov
xor
loope
push
ja
in
pop
push
jg
cmp
ljmp
add
sbb
push
mov
bound
mov
jmp
add
insb
arpl
hlt
add
add
pop
adc
sbb
loope
add
loop
or
loope
out
out
cmp
push
add
cltd
push
ret
adc
xchg
movsl
sti
jg
mov
add
insb
add
push
add
add
add
dec
test
std
lock
xor
mov
stos
int3
adc
nop
add
cli
inc
adc
lods
or
add
jle
add
add
test
jle
push
add
jne
add
add
xchg
out
inc
push
and
mov
testb
shrl
fidivl
sub
jnp
add
std
clc
sub
add
cmp
push
add
add
fiadds
pusha
add
imul
add
addb
adc
sbb
or
push
add
mov
add
add
add
mov
jp
xchg
mov
push
add
jecxz
jp
mull
pushf
jmp
testb
push
incb
add
sbb
add
add
jbe
add
cmp
scas
rolb
aaa
dec
jb
jg
insl
cmpsl
or
das
cmpsl
movsl
stos
jl
sub
lds
xchg
or
mov
add
add
add
add
or
vpsrld
push
mov
inc
add
ja
decl
imul
jg
xchg
in
xor
std
in
fisubs
adcl
je
std
notl
jo
nop
add
mov
add
dec
sub
sbb
js
xor
mov
into
mov
add
nop
add
std
add
nop
add
add
xor
out
int3
ss
ficompl
in
jns
pop
icebp
jbe
pop
sbb
dec
jge
addb
jne
imul
add
data16
and
mov
sub
mov
add
and
mov
add
mov
add
jp
icebp
orl
inc
push
out
mov
adc
add
and
pop
pop
or
add
dec
xorps
add
xor
inc
add
mov
pop
jmp
dec
add
testb
add
add
push
fstpt
add
mov
je
movb
inc
pop
lret
add
stos
jno
inc
add
add
ja
add
rolb
enter
mov
add
fsubl
aad
cli
mov
dec
mov
cmpsb
add
popa
outsb
movsl
pop
jecxz
xlat
push
add
mov
add
mov
push
mov
iret
pop
lods
clc
clc
shrl
jl
testb
ljmp
and
xor
outsb
pop
adc
xlat
incl
add
scas
and
mov
es
jl
ffreep
add
add
add
jae
aad
add
add
mov
push
sub
scas
cltd
adc
ficoms
fdivr
shrl
add
jae
aas
sub
out
and
pop
stc
mov
test
add
add
in
rolb
xor
adc
xor
lds
cmc
pop
mov
and
aam
inc
xchg
add
add
pushf
push
add
add
in
xchg
add
add
adc
ljmp
add
xchg
add
test
jmp
pop
repnz
add
add
fisttpl
fdivrl
out
aaa
fidivs
in
mov
add
add
add
dec
mov
outsb
pop
sub
add
adc
stos
enter
add
aaa
aaa
add
add
ret
pop
data16
jmp
pop
jecxz
mov
lods
addl
addb
fldenv
add
jecxz
pop
sub
cld
stos
sbbl
add
mov
std
setl
cld
mov
dec
data16
sub
add
xchg
loopne
jl
add
mov
data16
add
pop
add
in
add
push
pop
cmp
std
sbb
xchg
and
addb
das
imul
xchg
add
mov
add
inc
add
push
add
add
ss
inc
add
sbb
jg
loop
xor
mov
xchg
inc
aad
add
inc
add
test
add
xchg
hlt
add
dec
sti
test
add
inc
add
mov
movsb
add
add
xchg
js
add
add
add
sbb
inc
cli
adc
in
or
and
add
mov
jae
pop
imul
insl
or
hlt
add
sbb
pop
dec
add
add
imul
adc
mov
pop
xchg
int
add
inc
add
popa
push
add
pop
movb
jb
mov
add
and
add
add
dec
stos
mov
jl
add
pop
xchg
add
mov
sahf
cmpsl
adc
test
mov
pop
or
mov
loopne
push
add
jecxz
add
stos
add
push
dec
imul
inc
lock
inc
add
movb
cmpl
lea
add
imul
imul
dec
mov
pushf
pop
cmp
scas
rolb
cli
data16
pop
add
int3
mov
pop
test
stos
mov
jne
or
daa
sub
push
mov
add
sub
mov
add
add
add
ret
xor
mov
inc
insb
pop
mov
adc
or
dec
and
pop
cs
mov
add
mov
jo
lds
sar
xchg
pusha
add
jg
data16
jno
add
jmp
jl
aad
add
shrl
sahf
aas
dec
xchg
add
ror
adc
scas
jecxz
adc
xor
push
adc
inc
add
add
lcall
add
inc
add
add
dec
dec
or
push
add
jmp
add
pushf
sbb
add
pop
jl
sub
popf
add
daa
call
jo
les
mov
jmp
xor
outsl
out
les
aad
pop
dec
push
sub
cmpsl
adc
outsl
jmp
add
add
gs
mov
add
add
cmp
jecxz
add
addb
fadd
add
mov
mov
fs
or
add
sbb
or
xor
xor
inc
aam
fcmovu
jmp
sub
mov
stos
scas
pushf
sub
nop
add
push
add
lds
int3
int3
and
add
xchg
les
lea
ja
add
mov
add
mov
xchg
add
addb
cmp
add
pop
mov
add
imul
popf
int3
inc
pop
xor
aas
xchg
inc
popf
xchg
add
cmp
add
jmp
push
mov
add
inc
mov
sbb
jg
add
add
and
repz
add
pushf
loop
cmp
push
add
xchg
add
add
imul
in
cs
xor
inc
pop
inc
in
mov
push
add
jg
push
add
sbb
aas
rolb
add
pop
mov
rolb
add
mov
dec
sub
mov
inc
add
gs
and
mov
add
cmc
mov
scas
sahf
call
dec
jl
add
push
data16
mov
lea
ja
add
add
adc
push
inc
add
lret
xchg
stc
outsb
popa
or
add
sub
add
cmp
push
add
lret
mov
mov
push
add
in
addb
aaa
jno
xor
xor
jp
in
xchg
imul
lret
frstor
inc
rolb
inc
inc
push
scas
jne
add
out
aad
sbb
pop
cltd
cmpsb
add
add
inc
test
add
repnz
adc
xchg
cmp
repnz
sti
mov
std
add
add
and
mov
add
add
loop
pop
xchg
add
xchg
xchg
add
pop
vmovntpd
imul
adc
mov
mov
insl
scas
test
int3
add
mov
add
lcall
cli
loope
repz
add
jae
sub
pop
mov
pop
je
push
add
add
add
push
jle
test
stos
pop
out
mov
in
sub
or
add
js
push
add
adc
jmp
mov
pop
aam
dec
insl
lea
mov
dec
or
push
jg
mov
incl
add
ljmp
add
push
stc
mov
fsubrs
mov
cmpl
cli
xchg
pop
cmp
lret
mov
push
add
add
in
xor
jo
outsl
jl
dec
stos
dec
jp
mov
jo
movb
jge
inc
pop
int3
or
loop,pn
mov
add
xor
stos
movsb
add
dec
inc
add
add
sub
add
inc
add
imul
add
pop
addb
repz
add
xchg
add
pop
add
mov
leave
bound
mov
add
cli
or
mov
mov
jmp
add
add
fld
add
sub
ret
and
sbb
add
jmp
rolb
rolb
test
dec
call
add
roll
add
dec
jb
loop
dec
and
mov
cmpsb
add
aaa
mov
add
jnp
and
popf
insl
in
imul
push
add
mov
inc
dec
xlat
addb
lds
jmp
pop
js
and
test
add
mov
rorl
test
lea
xchg
cmp
test
inc
add
in
dec
sbb
mov
add
add
adc
add
add
adc
dec
ds
or
mov
add
and
std
sub
add
pop
mov
add
in
push
adc
and
mov
dec
js
mov
adc
movl
lahf
loopne
aad
sub
inc
lahf
cmpsb
add
dec
jno
sbb
scas
out
sbb
les
push
jl
add
mov
sbb
cltd
addb
add
jne
mov
lock
or
add
add
lds
sbb
lret
add
das
xchg
add
xor
add
sahf
gs
add
adc
in
lea
add
imul
cwtl
adc
jp
add
add
add
add
rcr
jo
or
add
sbb
xchg
dec
adc
mov
aad
or
or
add
adcl
add
inc
sub
xchg
add
inc
and
mov
adc
mov
add
rolb
add
cmp
add
dec
das
or
and
mov
addb
pop
xchg
jp
cmp
add
fnstenv
add
add
add
inc
add
pop
pop
lcall
testb
sbb
xchg
fldt
mov
and
stc
pushf
jmp
add
mov
adc
sti
call
testb
and
daa
dec
dec
jmp
repz
jbe
popf
repz
pusha
add
icebp
jnp
add
mov
add
sbb
jnp
cmp
pop
mov
addb
stos
out
xor
insl
jb
out
inc
add
jns
mov
add
test
std
shr
dec
jecxz
clc
pop
mov
in
mov
add
outsb
xchg
fdivl
add
testb
add
add
enter
add
movsb
add
add
mov
iret
rorl
testl
ret
sub
dec
lahf
jl
add
sahf
clc
inc
add
mov
add
stc
loop
rolb
add
add
aad
add
jp
add
add
testb
add
fidivs
rolb
mov
add
inc
add
add
mov
insl
jle
adc
dec
les
jge
add
mov
pop
pop
aaa
fiaddl
add
lods
push
add
jne
add
testl
pop
pop
movsb
add
mov
xor
push
hlt
add
testb
js,pn
or
add
leave
imul
test
or
imul
dec
cmp
clc
or
add
insb
add
add
testb
addb
mov
sub
cmp
imul
adc
cmpsl
cmpsb
add
add
mov
cmp
fcomip
add
or
add
add
xchg
adc
cwtl
and
mov
mov
lahf
jg
mov
add
and
add
pushf
pop
ret
adc
cmpsl
mov
nop
add
xor
rol
fwait
addb
cld
and
add
pop
insl
std
mov
xchg
add
xor
add
mov
jne
mov
sub
rolb
fsubr
in
orl
mov
add
add
cmpsl
lret
lahf
orl
or
lods
mov
add
push
push
aaa
push
add
add
aam
rolb
enter
adc
mov
push
add
sub
add
add
mov
into
hlt
add
pushf
push
inc
popa
add
pop
push
das
out
cmp
loope
aam
imul
movsl
add
mov
or
or
xor
add
std
pop
xchg
add
stc
fs
mov
ret
adc
add
add
add
inc
and
mov
scas
xchg
add
int
dec
mov
inc
add
inc
add
cmpsl
sbb
add
pop
cmp
popf
pop
jp
decl
add
add
gs
add
imul
add
add
std
out
lods
push
int3
or
sahf
bound
mov
mov
in
mov
add
stc
xor
add
xor
sbb
rolb
pop
pop
cltd
push
add
mov
cmp
jns
aas
jbe
jnp
add
lock
jno
cmpxchg
pop
mov
sub
and
mov
mov
add
add
mov
xchg
sub
add
cmp
inc
js
adc
call
adc
add
lock
add
xchg
sub
rolb
adc
loope
add
insb
sbb
mov
int3
lods
pinsrw
add
rolb
add
mov
cmc
mov
add
add
ja
xchg
aam
test
cmp
cmp
test
out
jp
add
jmp
out
xchg
xor
data16
lret
adc
fistl
ja
daa
loope
jb
and
add
mov
mov
jae
add
repnz
cmpsl
inc
add
pop
lret
jge
add
mov
xchg
imul
fldt
popf
faddl
add
mov
sbb
add
mov
dec
add
sbb
mov
xchg
add
fucomi
push
hlt
add
rolb
cs
sbb
addb
adc
dec
outsl
lock
push
inc
add
js
add
mov
xor
repnz
gs
add
add
stc
hlt
add
add
jmp
inc
jo
mov
push
mov
out
pop
jg
mov
adc
insl
xchg
add
cmp
lret
ja
add
mov
sbb
int3
rolb
lock
aam
lods
out
fmul
addb
notl
xchg
mov
aaa
and
adc
pop
repnz
dec
addb
or
add
sti
out
ret
into
xchg
std
adc
rolb
or
mov
push
addb
sub
repz
mov
ret
scas
loope
inc
add
add
mov
push
add
les
data16
add
out
leave
xchg
add
sub
sbb
xchg
rolb
jbe
push
addb
rcr
push
pop
push
add
enter
out
data16
inc
xchg
cmp
add
in
mov
pusha
add
add
add
add
ss
add
jle
jnp
add
xchg
sub
add
jbe
xchg
pop
cltd
push
dec
jge
dec
pop
jle
rolb
xchg
mov
jge
add
add
add
movsl
loopne
insb
xor
out
add
push
add
repnz
push
add
xor
cld
jns
dec
mov
je
pop
mov
push
add
cmp
inc
ret
add
and
mov
push
add
add
xchg
xchg
hlt
add
lret
push
add
pop
sbb
add
adc
leave
jb
pushf
dec
or
test
fwait
mov
mov
fisttpll
addr16
rolb
or
dec
andl
xor
sub
sub
test
mov
cmp
cld
adc
in
add
dec
jbe
incl
test
add
cmpsb
add
insl
sbb
push
add
fcomip
add
into
sub
mov
and
push
push
add
mov
addr16
add
add
lret
lock
add
push
add
xchg
dec
popa
mov
dec
dec
out
add
mov
jae
sbb
add
add
add
testl
mov
lock
add
pop
sbb
cmpsl
adc
pusha
add
adc
in
loopne
or
add
add
sub
xor
stc
sub
push
add
add
push
add
mov
jmp
xor
loopne
adc
cs
sti
mov
pop
in
push
sbb
add
add
add
add
outsb
dec
jne
ficoms
enter
movsb
add
pop
aad
add
mov
scas
inc
add
hlt
add
or
lret
fldenv
add
pushf
mov
into
and
fistpll
icebp
xchg
and
mov
add
sbb
test
add
into
add
addb
pop
mov
iret
hlt
add
add
test
sub
add
lods
add
add
out
push
add
test
mov
add
add
fdivrp
outsl
out
or
add
das
mov
fcmovnb
add
outsb
ficoms
mov
negl
insl
imul
loop
or
xchg
sbb
cmc
lds
add
xlat
push
add
inc
add
dec
sbb
mov
add
popf
out
or
das
push
add
fidivrs
fcomps
xchg
adc
add
arpl
test
xor
mov
add
sbb
orl
add
add
mov
add
movsl
in
push
add
mov
test
and
dec
mov
xchg
pusha
add
add
add
add
inc
jae
and
xor
repnz
testb
out
lds
mov
inc
add
sahf
fwait
loope
lcall
orl
and
mov
dec
xchg
add
add
push
add
loope
add
add
add
iret
loope
add
ret
xchg
dec
sub
in
bound
mov
ret
loop
enter
movb
add
add
enter
stc
fidivrl
movl
push
in
in
inc
add
testb
fwait
dec
jecxz
imul
add
mov
out
mov
dec
stos
mov
out
jne
xchg
cmp
add
jo
sub
lea
arpl
leave
movsl
pop
in
adc
repz
sahf
lods
adc
popf
cmc
ss
ficoms
sub
stos
pop
cli
sbb
lcall
push
add
add
inc
add
inc
inc
add
icebp
iret
xor
inc
add
sub
add
jns
sbb
dec
das
test
mov
pop
add
add
pop
rolb
stc
xchg
add
mov
add
ljmp
adc
add
add
stos
insb
jnp
jmp
mov
add
sub
dec
and
jne
push
fisttpl
push
add
add
mov
mov
add
sub
int3
imul
jnp
add
loope
cltd
fadd
or
pop
pop
stos
and
mov
xor
adc
jnp
add
sub
mov
sbb
lea
pushf
xor
leave
lret
movsl
xor
sub
loope
scas
and
mov
sahf
mov
pop
rolb
or
leave
xrelease
test
cmp
add
or
xchg
or
scas
std
jae
arpl
jo
cwtl
inc
add
inc
inc
add
xor
rcr
loopne
repz
dec
add
repz
add
xor
push
add
push
add
jne
mov
add
sbb
pop
push
add
add
ljmp
add
repnz
add
add
add
add
add
lret
test
ljmp
js
add
mov
arpl
mov
movsl
adc
add
std
loope
xchg
add
cmp
xchg
add
sub
push
ds
outsb
pop
adc
test
scas
lahf
push
add
mov
insb
sti
lods
xchg
fisttpl
or
xchg
or
add
nop
add
iret
sub
mov
mov
push
jg
rolb
add
ljmp
jge
add
fwait
xchg
sbb
fadds
add
mov
in
add
ja
push
add
mov
cltd
jmp
mov
cli
sbb
aas
movsb
add
add
enter
inc
add
xchg
stos
mov
jmp
add
ljmp
xor
je
cltd
cmpsl
xor
mov
add
mov
mov
into
adc
mov
xlat
xchg
add
add
pop
lods
mov
push
add
dec
roll
mov
add
add
lods
adc
push
add
insb
push
inc
nop
add
enter
xor
mov
js
add
xchg
add
add
scas
fs
mov
adc
in
ljmp
push
jecxz
loopne
xlat
lock
add
mov
add
add
les
in
dec
out
and
push
add
jl
mov
mov
out
addb
fldenv
stos
stc
fwait
or
test
push
add
in
xor
mov
les
data16
shrl
jne
jecxz
hlt
add
add
pop
jecxz
test
in
push
mov
lock
inc
xor
or
cs
fildll
pop
pxor
add
mov
hlt
add
add
sbb
add
mov
add
add
add
inc
sbb
add
icebp
cmp
mov
xor
mov
pop
fs
aas
dec
ds
add
add
cmpsl
sbb
fiadds
dec
fcoms
sub
mov
std
mov
mov
add
sbb
fstpt
aad
aam
cltd
iret
mov
add
jne
add
enter
add
add
add
mov
gs
add
mov
xlat
test
mov
xchg
add
cmc
lcall
lcall
mov
data16
inc
add
add
add
add
xor
add
insl
xchg
sbbl
add
jg
add
pop
in
mov
in
pop
adc
add
aas
cwtl
test
mov
adc
roll
data16
or
fisubrs
xchg
mov
sbb
add
add
add
add
into
lahf
jmp
push
rolb
popf
push
xchg
add
jo
xchg
add
xchg
add
add
int
push
add
aaa
repnz
testb
add
cmc
das
adc
or
test
mov
sbb
das
xchg
enter
mov
loop
inc
add
subl
add
jno
add
mov
insl
je
sbb
repnz
inc
xchg
add
add
push
sub
cmpsb
add
test
out
int3
je
out
add
add
add
int3
xchg
xchg
add
ja
pop
addb
fidivrs
repz
add
ds
xchg
gs
in
cs
pop
fcompl
add
mov
add
mov
hlt
add
imul
push
add
movsb
add
add
add
pop
int3
aad
add
pop
sahf
lods
repz
add
add
testb
jecxz
add
out
cmpsb
add
jge
pop
loop
lret
mov
mov
inc
add
add
mov
add
adc
mov
ror
and
pop
inc
mov
xor
inc
add
fisubs
mov
ja
sbb
js
rcll
cmp
mov
das
mov
add
mov
rcrl
sub
cmp
add
mov
addr16
scas
rolb
mov
sbb
add
dec
xchg
add
aas
xor
imul
sbb
je
push
addb
jnp
sti
out
dec
popa
xchg
add
push
hlt
add
mov
std
xchg
add
es
add
out
fucom
add
cmp
pop
lcall
xor
mov
add
pushf
les
arpl
mov
out
and
add
add
adc
jo
push
add
pop
and
add
mov
inc
add
mov
aaa
cmp
sbb
add
add
push
jge
inc
add
data16
out
dec
pop
sbb
add
add
push
pop
or
popa
add
mov
addb
imul
lods
adc
add
xor
sub
sbb
add
leave
push
jmp
xor
icebp
bound
mov
add
testb
rcll
cli
mov
stos
jmp
add
test
add
mov
mov
inc
add
add
addl
add
or
cltd
or
push
add
add
cmpl
movsl
jo
jmp
mov
hlt
add
sbb
mov
add
mov
push
into
add
xchg
add
push
sbb
xchg
xor
add
mov
hlt
add
outsl
inc
rolb
ret
dec
push
xchg
push
add
push
add
add
mov
add
jno
std
ljmp
negl
test
loope
xor
iret
ds
mov
inc
add
inc
insb
aam
or
xchg
in
xor
adc
add
add
push
in
ljmp
xchg
mov
add
or
add
clc
dec
aad
ret
dec
stos
ret
add
add
pusha
add
add
add
add
add
mov
iret
sahf
enter
and
adc
xchg
jae
add
pop
fbstp
lahf
outsb
inc
pop
or
lds
add
and
popa
xchg
dec
call
add
add
repz
call
dec
xchg
sub
movsb
add
push
dec
push
add
mov
js
push
movb
adc
jae
push
add
add
pushf
daa
rolb
out
jmp
icebp
cld
xchg
rolb
fwait
dec
jmp
daa
sbb
aas
sub
add
add
clc
fbld
lret
and
mov
std
test
add
cmp
addb
cmc
repnz
add
movb
loop
ret
out
add
test
cli
mov
out
mov
add
mov
sub
shll
inc
add
add
add
push
pushf
sti
push
add
add
add
add
ret
inc
add
jge
mov
adc
push
mov
add
add
nop
add
add
push
add
adc
clc
add
mov
cld
adc
add
jo
sbb
xchg
add
lods
mov
data16
add
jecxz
pop
clc
cmp
add
iret
dec
mov
repnz
dec
imul
add
mov
add
sub
pop
lock
aaa
dec
xor
xor
cmpsb
add
std
daa
cmpsl
xor
add
lret
push
add
mov
add
add
or
dec
dec
fdivrs
add
jmp
mov
add
mov
mov
rolb
add
enter
add
add
mov
add
jo
mov
addb
mov
add
stos
xor
or
add
add
inc
add
adc
add
mov
add
icebp
add
mov
mov
and
add
inc
add
xchg
shll
or
decl
outsb
test
add
add
mov
push
add
adc
cltd
clc
test
mov
add
add
ljmp
add
dec
arpl
aad
nop
add
out
loop
mov
mov
sbb
fmuls
adc
push
add
add
mov
add
sbb
fnsave
lods
enter
std
call
sub
ja
mov
add
push
add
cld
dec
pushf
mov
add
add
movsl
xchg
cmp
mov
sbb
mov
sub
in
jp
pop
repnz
enter
add
addb
cmpsb
add
add
push
inc
add
mov
testb
push
sub
mov
add
mov
add
cmpsb
add
mov
add
fisubrl
ljmp
add
add
add
add
mov
or
sti
std
mov
add
mov
cmpsl
push
add
adc
mov
push
add
in
movb
add
ljmp
nop
add
inc
imul
add
add
addb
add
fistpll
stos
ljmp
or
ret
sahf
lds
lods
call
add
inc
inc
pop
xchg
repz
dec
iret
std
push
add
add
add
or
pop
out
mov
push
aad
add
ss
add
add
add
add
rolb
and
mov
add
add
scas
dec
pusha
add
add
pop
pop
jle
pop
ljmp
stc
cs
add
popf
adc
mov
aaa
add
movsl
sub
add
and
mov
add
and
add
xchg
add
daa
jecxz
mov
add
sub
addb
add
mov
mov
addb
int
add
add
testb
push
add
xor
loop
loope
daa
sbbl
cmpsl
in
add
adc
sti
call
add
mov
dec
push
add
cmp
mov
add
add
sbb
fnstcw
jl
add
xchg
sbb
jnp
add
xchg
add
xor
jge
add
add
dec
xchg
and
xchg
loope
add
jno
dec
add
mov
addb
jns
cmp
xor
mov
add
add
inc
add
ljmp
das
mov
int
add
mov
xor
add
add
add
mov
and
add
lock
jne
push
add
push
add
xor
nop
add
jl
adc
addb
mov
sbb
mov
push
add
pop
movsl
cmp
add
and
add
add
add
adc
or
pop
push
shl
add
push
xchg
inc
pop
jp
add
and
mov
stos
lret
add
fcom
pop
pop
jns
cmpsl
lret
dec
sti
dec
or
imul
sub
imul
fistps
mov
xchg
mov
add
cli
ficomps
dec
sbb
rolb
xor
mov
sbb
insl
leave
lods
pusha
add
inc
add
aad
ja
add
ficompl
add
popa
cld
icebp
inc
cmp
addr16
add
and
cmc
xchg
add
mov
or
add
add
add
bound
mov
sbb
ret
jno
add
cmp
push
add
loope
add
xchg
std
lcall
cli
das
cmp
clc
clc
insb
in
pop
cwtl
sti
mov
add
push
add
add
add
sub
xor
or
add
pop
into
test
in
les
or
add
push
imul
add
add
leave
sbb
and
mov
rorl
mov
stos
enter
lret
daa
lock
rolb
movsl
imul
push
sub
add
pusha
add
enter
loope
or
add
aam
push
add
mov
cmp
jg
jge
inc
add
add
call
in
icebp
lret
ds
gs
mov
cmc
sub
add
dec
xchg
xor
test
add
dec
jle
jns
lret
stos
aad
add
push
repnz
mov
lret
xor
push
add
daa
dec
test
mov
add
cli
cli
xlat
jg
add
pop
popf
pop
xlat
jmp
mov
jg
or
jo
ja
dec
outsb
in
js
xor
icebp
lcall
add
inc
add
subl
leave
fidivl
add
cmp
adc
push
add
add
or
loop
fcompl
mov
idiv
mov
add
add
ja
loopne
cmp
cmpl
cs
add
add
add
inc
shll
add
fimull
add
add
test
sub
pop
adc
jge
add
add
dec
sub
add
add
add
sbb
test
mov
fisubrs
scas
test
cmp
add
cmc
inc
add
std
sahf
aad
rorl
cmp
add
inc
add
or
add
add
add
inc
add
test
cmp
data16
outsl
and
mov
add
test
sub
jb
nop
add
add
add
add
ds
mov
push
push
add
int
or
add
icebp
push
add
jns
addb
mov
mov
add
pop
jne
cmp
aad
jnp
repnz
add
fcoms
push
pop
add
mov
add
inc
xor
push
add
in
movsl
inc
std
ds
add
iret
ret
mov
popf
mov
stos
mov
add
add
out
in
add
loop
roll
insl
rolb
inc
add
add
lret
fnstcw
cmp
unpckhps
std
xchg
add
bound
mov
stos
jnp
fsub
pop
xor
or
add
les
mov
dec
fdivrl
pop
jle
adc
into
aam
jne
add
mov
inc
add
movsl
fnstenv
call
insl
jg
add
add
add
mov
movb
add
mov
sbb
jg
add
add
jecxz
inc
add
add
daa
ret
jns
add
add
add
add
push
stc
daa
push
popa
sub
aam
idivl
bound
mov
add
dec
jmp
add
add
add
aam
sbb
xor
add
mov
test
add
mov
addb
decl
add
xor
mov
add
add
mov
dec
lahf
push
fists
ja
or
add
repnz
outsl
lock
cmpsb
add
xorl
sub
add
jge
rolb
cld
mov
add
cmp
rolb
scas
pop
cltd
adc
xor
ds
xchg
cli
icebp
lcall
lock
xor
add
inc
add
pop
addb
add
addb
cwtl
adc
clc
movsl
cmp
rolb
sti
imul
add
push
add
mov
sub
aas
xor
cmpsl
xor
cli
mov
sbb
xor
cs
push
daa
scas
xchg
add
out
adc
incb
mov
pop
fwait
leave
mov
orl
mov
ret
add
stos
xchg
add
mov
mov
aam
jl
daa
push
pop
dec
mov
add
fwait
inc
add
dec
push
sub
add
push
enter
aaa
mov
add
insb
cwtl
dec
addr16
out
bound
mov
addb
dec
add
inc
idivl
mov
mov
add
int
or
add
add
out
cmpsl
mov
addr16
divl
add
mov
sti
ficomps
popf
dec
push
lods
ljmp
add
sub
lock
lret
add
fsubs
int
popa
daa
mov
int3
insb
or
add
cmp
enter
xor
stos
add
sbb
mov
mov
lcall
xor
out
xlat
dec
sahf
frstor
xchg
add
pop
push
add
negl
loop
mov
dec
inc
add
add
mov
rolb
cmp
add
add
pop
mov
xor
push
jno
inc
in
pop
addb
mov
mov
scas
mov
mov
dec
inc
mov
inc
lret
aam
fists
pop
loopne
outsl
int3
inc
paddd
loop
addb
fxch
je
movsl
xchg
adc
out
addb
lds
negl
iret
lods
loop
lcall
push
add
add
xchg
add
fcoml
jle,pt
add
mov
mov
jo
rcl
jo
in
jl
add
add
imul
push
sbb
pushf
loope
add
sub
dec
stc
stos
push
add
pushf
mov
or
add
add
adc
inc
add
or
orl
pop
fidivrl
add
cmpl
xor
jmp
add
pop
addb
negl
push
add
dec
and
cwtl
fdivrp
cld
dec
movsb
add
imul
add
add
cltd
lds
add
dec
sub
add
int
add
cmp
sub
add
push
add
mov
cmpsl
mov
and
vmovlpd
add
scas
cwtl
insb
out
cmp
add
popf
pusha
add
sbb
mov
add
test
pop
repnz
cs
adc
dec
roll
add
inc
arpl
add
sub
rcll
and
mov
les
adc
pop
fnsave
and
addb
push
add
or
and
mov
add
adc
jmp
add
addr16
jne
add
add
add
out
push
jb
insl
repnz
ficomps
dec
push
add
xor
roll
into
xchg
dec
xchg
or
mov
add
inc
pop
test
pop
fisubrs
sub
mov
add
add
adc
xchg
add
xchg
adc
add
sub
mov
add
jl
add
imul
mov
sbb
icebp
xor
loope
or
push
add
addb
data16
mov
pop
mov
mov
xor
loop
inc
pop
in
and
scas
add
add
adc
movsl
sar
cmp
or
pop
dec
mov
pop
insl
andl
test
add
add
xor
adcl
jmp
and
sub
xchg
add
les
jp
das
clc
jl
add
ds
rolb
jmp
adc
sbb
add
aaa
cmp
add
jnp
add
mov
jg
mov
mov
xor
jb
jp
or
adc
xchg
in
add
mov
add
int3
movb
add
inc
ret
clc
in
stc
or
add
test
jbe
shll
jg
add
sbb
push
and
mov
adc
cmp
push
cltd
inc
jmp
insl
outsl
sbb
mov
add
call
sarl
dec
std
fldt
lahf
mov
enter
imul
xchg
dec
hlt
add
pop
gs
data16
sti
xchg
int
add
test
push
add
add
cmpsb
add
add
inc
jnp
pop
sbb
call
add
add
call
out
sahf
cwtl
call
add
mov
lods
xchg
nop
add
out
mov
add
add
add
insb
inc
cmp
add
in
add
add
add
add
cmp
sbb
add
add
std
xor
pop
push
int
cmp
repnz
sti
jo
mov
imul
inc
add
fidivrl
pop
add
sarl
push
add
add
fdivrl
sbb
mov
inc
testb
call
mov
xchg
jmp
dec
test
push
test
mov
jne
mov
mov
stos
movsl
xchg
add
sbb
sbb
pop
pop
js
daa
sub
add
testb
lock
add
inc
add
jg
push
out
cmc
cld
add
int
add
cmpsl
xchg
pop
jl
add
dec
movsb
add
lea
add
add
fld
pop
add
sti
jbe
inc
add
add
fwait
dec
adc
mov
add
add
mov
lods
imul
xchg
or
pop
cmp
mov
add
addl
push
fbstp
add
add
mov
in
mov
call
xchg
aad
fimuls
mov
mov
in
loop
outsl
mov
ret
das
lea
pop
ds
push
mov
hlt
add
clc
out
out
into
lea
add
add
mov
add
add
mov
jno
add
aaa
rolb
and
add
aas
fnstenv
dec
ret
add
repnz
add
daa
out
std
add
sub
inc
jo
mov
das
fucomip
cmp
xlat
mov
inc
add
testb
nop
add
lods
inc
add
xchg
in
adc
aaa
imul
sbb
push
add
mov
add
mov
xchg
xchg
add
pop
add
mov
add
add
loope
ficoms
adc
adc
add
cs
in
add
jbe
add
add
popa
pop
jp
add
push
add
and
add
out
dec
movsl
addr16
add
xor
sbb
add
mov
or
xchg
testl
lret
test
inc
add
jne
push
add
rolb
sbb
test
imul
sub
add
push
add
xchg
sub
pop
xlat
dec
xchg
or
add
xchg
add
add
add
adc
sbb
add
mov
loopne
jg
loop
scas
cmp
add
scas
push
add
mov
pop
icebp
push
mov
add
lea
fdivrl
xchg
add
ljmp
test
push
dec
cwtl
mov
push
jo
adcl
add
add
outsb
mov
cmp
push
rcll
add
inc
add
pop
dec
and
sbb
push
add
jbe
jmp
mov
loope
add
insl
popa
push
add
add
sub
push
mov
addr16
add
and
add
mov
add
daa
sub
add
mov
push
aas
rcrl
mov
lahf
mov
shll
aam
js
ljmp
cld
push
add
inc
sbb
sub
fists
icebp
pop
sbb
loope
das
mov
and
jae
pop
dec
dec
insb
inc
pop
shll
or
cwtl
xor
dec
je
inc
pop
popa
and
jecxz
ljmp
jns
rolb
mov
lcall
cmp
add
mov
adc
js
fldenv
mov
fucomip
sbb
jb
sbb
aam
add
ret
fwait
inc
inc
in
out
out
push
jl
dec
jmp
lret
adc
mov
shll
rcll
rolb
lcall
insb
jns
add
pop
push
aam
jnp
and
add
add
adc
dec
dec
popl
mov
add
inc
sbb
mov
test
adc
add
push
add
shll
out
je
add
shrl
xor
or
mov
jp
inc
add
enter
and
mov
add
ds
add
dec
mov
jl
loope
jl
add
dec
or
dec
and
mov
xor
outsl
mov
jmp
xchg
add
add
jno
add
faddp
jg
jb
xor
add
mov
pop
push
mov
adc
or
add
ja
add
add
xchg
add
inc
cmp
insb
mov
lea
test
add
mov
cmc
addb
add
push
add
shll
ja
add
add
in
push
add
gs
loope
add
test
sub
add
mov
nop
add
mov
add
pop
ja
lahf
stc
test
add
mov
lods
mov
pop
xchg
add
jmp
add
out
dec
cmc
ret
lods
pop
jb
and
mov
add
add
inc
add
add
in
jecxz
inc
add
mov
aam
clc
push
sub
rorl
add
gs
add
dec
inc
add
inc
add
js
add
sub
mov
testb
add
jnp
pop
mov
or
push
add
sbb
cmp
cmp
dec
mov
add
mov
repz
add
fcoml
xchg
or
and
subl
xchg
adc
sub
inc
add
hlt
add
out
ret
arpl
mov
out
dec
cmp
inc
add
out
or
insb
test
push
outsl
push
pop
sub
jge
add
xchg
add
pop
out
out
jnp
popf
leave
jg
add
dec
data16
add
jmp
in
test
into
xchg
add
inc
add
add
sbb
jmp
add
add
ja
add
pusha
add
add
add
sbb
cli
fdivrl
adc
mov
mov
add
sbb
mov
sbb
add
outsl
pop
testb
add
add
xchg
adc
lds
adc
jne
cmc
sbb
jno
add
mov
mov
fsub
es
xchg
movsb
add
loop
xchg
cmp
add
sub
push
add
sbb
push
or
mov
cmp
sbb
shll
mov
xchg
add
add
sti
push
jne
add
mov
add
fsubl
testb
sub
in
test
push
add
outsb
loope
add
mov
pop
mov
push
add
mov
test
movb
dec
push
add
movb
stos
mov
push
inc
jecxz
add
or
xchg
add
icebp
rcll
add
out
iret
and
add
add
jb
fldl
add
mov
add
add
push
add
outsl
mov
jae
add
mov
mov
cmp
fnstcw
add
mov
imul
jmp
ret
add
inc
adc
outsl
add
push
add
add
pusha
add
add
jle
mov
mov
lds
jmp
add
dec
imul
out
out
push
add
push
or
fwait
loope
popa
or
dec
addb
mov
in
add
mov
add
pop
add
pusha
add
out
addr16
add
mov
inc
add
add
out
cli
imul
mov
jmp
dec
in
pop
mov
testb
test
lahf
ret
pop
stc
inc
ret
repnz
iret
pusha
add
add
adc
aam
or
pop
jae
pop
js
mov
and
mov
sub
sbb
add
hlt
add
sbb
add
idivl
mov
push
sub
ret
xchg
add
and
xor
add
xlat
addb
inc
add
push
push
add
rolb
and
mov
lret
js
pop
inc
add
push
inc
add
add
adc
les
inc
add
jnp
xchg
pushf
or
aaa
push
add
dec
jmp
stos
sub
add
push
add
fnstsw
add
xchg
add
pusha
add
add
mov
cmpsb
add
add
orl
mov
cmpsb
add
testl
add
mov
mov
imul
add
inc
xor
loopne
add
loope
rorl
cmp
add
test
add
outsl
dec
fwait
sbb
add
or
or
hlt
add
jl
add
mov
add
add
dec
mov
add
mov
xor
cwtl
faddl
aaa
pop
popl
repnz
add
add
scas
jns
loope
es
and
ret
dec
jb
loop
xor
xchg
adc
sahf
push
add
mov
mov
add
imul
xor
add
iret
addr16
incl
mov
mov
fstpt
add
jmp
adc
lret
cmp
add
imul
cmp
stos
and
aad
add
add
add
sub
and
loopne
mov
and
sahf
rcl
setle
add
es
add
addb
add
push
add
pop
pop
addb
and
int
add
add
add
jb
xor
ret
mov
fucomi
rolb
add
mov
pop
fwait
xchg
add
pop
scas
arpl
out
jle
add
add
loope
jno
out
mov
push
xchg
add
repz
popa
aaa
or
add
dec
and
add
mov
or
test
out
movb
cmp
sub
mov
les
push
add
out
xchg
add
add
add
and
add
add
mov
add
rolb
pop
adc
push
add
mov
dec
add
movsl
inc
add
mov
popa
or
add
mov
pop
jle
sbb
mov
add
inc
mov
rolb
cwtl
pop
rolb
add
mov
add
xlat
lcall
frstor
lahf
push
add
add
add
popf
mov
add
add
jb
mov
add
sbb
out
add
mov
push
add
out
js
push
add
cmp
data16
push
push
ret
adc
nop
add
and
sbb
add
inc
add
repnz
stos
int
add
mov
enter
outsb
addb
add
ja
add
add
or
add
fisttpll
add
nop
add
add
dec
roll
sbb
xchg
add
cmp
cld
push
add
add
mov
add
fcoms
add
iret
aad
mov
add
add
add
dec
testb
add
add
add
add
add
push
add
xchg
movb
cmp
mov
cmp
add
bound
mov
add
mov
jecxz
mov
ds
bound
mov
scas
or
fldl
stos
sub
movb
add
arpl
add
pop
jne
les
pop
mov
test
and
push
les
mov
xor
mov
loop
adc
mov
insb
loop
leave
cmp
xchg
add
push
add
movl
int
jo
add
dec
dec
ret
or
test
add
aam
icebp
addr16
xchg
cmp
add
fcomi
pop
ds
mov
or
jg
push
cmc
pop
testb
mov
inc
add
test
inc
mov
add
shll
mov
mov
dec
int
add
jns
aam
pop
add
cli
jnp
testb
add
add
test
bound
mov
cwtl
rolb
js
jo
jl
cmp
jns
arpl
add
popa
sub
push
add
add
mov
fimull
outsb
es
add
add
mov
add
call
add
pop
loopne
test
pop
in
lcall
les
mov
cmp
in
add
push
add
addb
add
add
not
cld
sub
add
add
dec
addl
jle
push
jp
loopne
and
mov
in
adc
mov
out
dec
or
icebp
cmpsb
add
inc
add
lcall
out
ret
xchg
clc
testb
cmp
fldenv
lahf
sub
rolb
psubusw
add
mov
loopne
mov
adc
add
ja
dec
into
subl
enter
enter
add
rolb
aaa
sbb
ret
mov
push
leave
mov
cmp
push
inc
mov
inc
xchg
add
js
inc
add
sbb
adc
rolb
xchg
add
mov
add
fists
add
les
dec
push
add
mov
add
dec
or
add
mov
jge
adc
pushf
out
or
add
xchg
add
in
fmul
lcall
and
xchg
add
cld
xor
cwtl
test
lret
or
stos
add
jno
add
adc
rolb
xchg
add
jo
into
test
stos
push
add
clc
and
add
adc
add
xchg
xor
mov
rolb
add
mov
repnz
mov
sarl
mov
lret
add
cmpsb
add
mov
jne
ds
push
add
add
mov
int3
test
push
mov
xchg
or
jno
cmp
xchg
xchg
pop
jo
push
or
lock
push
add
xor
outsb
pushf
mov
jbe
lods
cwtl
jle
dec
or
in
or
add
mov
mov
fildl
stos
mov
cli
mov
loop
nop
add
clc
inc
add
leave
stos
push
test
sbb
add
cwtl
addb
add
fbstp
push
and
jmp
lcall
xor
out
cli
ja
mov
add
int
add
fimuls
dec
pop
add
mov
pop
movsb
add
add
sbb
ret
add
inc
add
push
jp
ljmp
scas
add
rorl
add
mov
lock
xor
in
ud1
adc
add
and
mov
pop
xor
add
jge
mov
add
pop
out
and
add
add
xor
dec
or
mov
or
sub
mov
fwait
lods
push
add
add
imul
add
js
add
mov
ja
add
mov
lea
add
ja
add
mov
dec
xor
movsb
add
jl
xor
mov
jmp
add
add
add
cli
call
add
fnstenv
xor
incl
pop
push
pop
dec
mov
rolb
fnstenv
je
je
pushf
cltd
ja
popf
stos
xchg
pop
sub
add
popa
sbb
pop
xchg
inc
add
stc
inc
add
in
cmpsl
or
mov
addb
add
mov
xchg
sahf
stc
sbb
add
dec
pop
stos
xor
add
cs
fsubs
jae
ss
or
xor
push
pavgw
cwtl
repz
outsl
add
aaa
movsl
push
aad
aaa
out
pop
fwait
addb
xchg
jmp
pop
xchg
mov
mov
sbb
pop
mov
lret
insb
and
mov
sbb
add
add
sub
and
mov
loopne
sti
mov
xor
cmp
in
cmp
mov
add
add
dec
push
xchg
add
pop
and
cmp
add
add
mov
add
and
mov
mov
mov
add
ljmp
mov
push
add
sub
testl
add
add
sbb
jmp
inc
cmpsb
add
dec
mov
push
push
add
add
push
push
add
loopne
xchg
pop
int
fistps
mov
lods
adc
lds
dec
pop
jge
rolb
push
add
mov
lea
and
dec
add
add
sub
sbb
jecxz
ja
add
mov
cmpsl
popa
cltd
fimull
sbb
mov
imul
mov
and
stc
pop
sbb
xchg
add
add
mov
and
push
or
testb
cmpsb
add
imul
add
mov
dec
stc
xchg
mov
add
scas
cltd
mov
clc
addl
add
outsb
stos
pop
ja
add
jge
mov
mov
inc
mov
ret
lock
rolb
mov
popf
adc
push
mov
test
icebp
orl
add
mov
add
jge
dec
bound
mov
aaa
adc
xor
inc
add
add
sahf
mov
out
test
add
add
mov
int3
push
mov
xchg
add
mov
add
fnstsw
lods
imul
add
enter
rolb
add
xchg
add
or
add
add
lds
jns
sbb
flds
mov
jl
add
leave
in
addb
rolb
stc
test
insb
mov
add
adc
add
sub
mov
imul
xchg
orl
add
mov
add
jl
mov
sub
cmpl
out
dec
daa
lock
rolb
add
iret
jle
add
push
roll
jno
add
loope
add
iret
push
add
add
insb
xor
xchg
add
add
daa
inc
push
add
mov
add
add
ds
movsb
add
push
add
cmp
stos
call
mov
adc
out
add
cmpsb
add
xchg
ret
add
shr
mov
lret
cs
icebp
fidivl
xlat
jmp
add
leave
repz
and
rolb
lcall
lahf
inc
jp
mov
inc
add
fbstp
sub
xchg
mov
pop
je
mov
xchg
mov
testl
ficompl
xchg
lret
pushf
adc
pop
sbb
add
int
imul
in
lret
cmc
sti
inc
add
sti
adc
add
lret
loop
cs
add
mov
stc
push
frstor
add
mov
cmp
inc
jge
add
add
add
and
mov
sub
add
jge
sub
mov
pop
mov
hlt
add
pop
mov
add
std
out
mov
jp
add
enter
dec
cmp
ret
popa
or
add
pop
pushf
jg
jo
dec
add
pop
mov
cmp
add
xchg
add
jle
lret
das
and
add
add
cmc
ret
add
test
out
jnp
add
push
add
add
das
push
add
out
adcl
rcrl
xor
or
movsl
out
cmp
pop
imul
jle
lea
add
jl
mov
out
lahf
sahf
push
add
add
insl
sub
mov
pop
je
dec
sahf
inc
sbb
or
in
jge
gs
xor
xor
push
add
or
mov
in
jmp
add
xchg
add
add
xor
xchg
xchg
leave
movsl
pop
stos
cltd
repnz
mov
lock
jecxz
int3
daa
cmp
add
and
cmp
pushf
mov
fnstsw
xchg
add
adc
mov
add
cmp
add
das
notl
add
push
inc
add
add
clc
pop
inc
add
add
xor
cli
bound
mov
xor
testb
inc
add
pop
mov
add
inc
jge
xor
rolb
push
ret
mov
add
add
mov
insb
cmp
add
add
jp
add
lods
int3
imul
sbb
in
add
mov
and
mov
add
mov
sbb
out
push
call
sbb
push
add
cltd
sub
xchg
lock
mov
adc
iret
and
and
adc
aam
daa
or
in
pop
movsl
and
add
jbe
inc
add
sbb
add
add
int
fcompl
pusha
add
add
pop
add
ljmp
mov
sub
or
dec
add
pop
mov
dec
adc
pop
or
inc
add
add
add
sub
pop
dec
mov
ficompl
ret
out
fwait
cmpsb
add
add
loopne
pop
add
dec
mov
jbe
xchg
mov
addl
divl
mov
push
mov
mov
add
data16
ss
xchg
rolb
cli
add
pop
pop
aad
stc
rolb
cmpsl
aaa
or
lods
xor
dec
je
xchg
addr16
fistpl
add
jns
addb
repz
sti
pushf
scas
fwait
sub
lods
testl
push
add
add
ja
add
lret
jecxz
xchg
add
adc
dec
fdivrs
es
ret
addr16
jle
fnstenv
add
add
sbb
jbe
lock
and
mov
call
sub
add
stos
je
add
add
add
sub
sbb
dec
fcmovne
outsl
add
add
cmp
cmpsb
add
add
add
imul
cmp
mov
add
arpl
add
pop
xchg
jns
add
dec
dec
inc
add
push
roll
push
add
mov
je
push
add
xchg
popa
jno
pop
push
cwtl
sub
add
lods
pop
test
push
pop
cld
mov
jmp
push
pop
inc
add
add
add
add
add
add
pop
pop
cli
sbb
add
jbe
pop
daa
mov
add
cmpl
popa
js
sub
les
nop
add
jmp
popf
adc
das
jbe
add
mov
add
add
in
outsl
adc
and
add
cmc
in
loop
and
mov
jb
adc
cmp
and
or
hlt
add
sub
add
add
rcll
pop
pop
scas
iret
or
add
lcall
jb
pop
stos
dec
lahf
out
popl
fildll
mov
add
add
add
outsb
cwtl
fistpll
add
inc
add
movsb
add
sbb
add
add
sahf
mov
pushf
cmp
sbb
add
lds
sbb
mov
dec
or
fnstenv
add
add
fcmove
sbb
add
sub
mov
movsl
stos
in
xor
pop
bt
add
daa
js
pop
xchg
add
add
into
jge
ja
lret
fadds
add
add
movsb
add
add
add
xorl
add
mov
add
repz
jns
add
jns
add
add
add
and
xor
je
cmpsl
lret
lret
aas
lret
mov
dec
push
mov
add
pop
lahf
xchg
add
add
xor
add
mov
test
inc
push
add
add
fisubrs
add
mov
push
add
add
sbb
mov
sbb
dec
pop
and
mov
add
add
mov
scas
mov
sbb
mov
add
xchg
add
jbe
dec
js
in
test
roll
sub
cmpl
add
daa
loopne
xchg
inc
add
add
pop
xlat
xchg
jo
push
add
lret
mov
pop
pusha
add
add
mov
popf
in
cmp
ljmp
jno
stos
aad
cmp
jbe
data16
sub
bound
mov
cmp
add
add
dec
paddb
add
mov
cmp
add
add
and
add
lcall
xor
mov
nop
add
inc
mov
jl
data16
mov
stos
stos
add
mov
and
mov
mov
add
xchg
add
aam
nop
add
cli
push
xorl
mov
lret
leave
add
rolb
test
out
arpl
push
lea
jge
inc
inc
add
xor
sub
mov
mov
les
jne
and
mov
sub
scas
xchg
inc
mov
adc
xor
sbbl
add
add
mov
jae
add
cmc
addb
les
add
xchg
add
mov
call
xchg
xchg
add
cltd
popa
mov
sbb
mov
add
add
cmp
add
cwtl
and
stos
push
xor
and
cmp
push
bound
mov
sbb
insb
mov
cwtl
jae
das
and
add
out
add
add
inc
jg
inc
cs
add
fisubl
gs
sub
and
in
add
mov
add
add
xor
scas
pusha
add
jl
add
add
cmp
add
jl
sbb
pop
and
jbe
popa
sbb
into
fwait
mov
int3
xor
add
add
test
fnstsw
sbb
jo
addb
cmpsb
add
add
in
inc
add
notl
add
add
sbb
test
sub
adc
inc
add
and
mov
xor
insl
jecxz
mov
aaa
jle
in
add
mov
sub
add
pop
loope
pop
enter
repnz
int3
or
mov
add
sti
jae
sbb
xlat
testb
cmp
sbb
fsubrp
inc
lds
mov
nop
add
ljmp
sbb
push
add
data16
inc
adcl
or
sbb
mov
pop
xor
test
decb
stos
push
add
mov
xor
outsl
or
add
add
jle
int
or
lcall
inc
sar
test
and
push
add
scas
cltd
fsubrl
fdivp
add
lcall
mov
mov
repnz
add
rcll
jmp
clc
cld
lock
clc
mov
mov
xchg
add
add
add
mov
hlt
add
mov
popf
das
dec
dec
push
add
sub
scas
mov
rolb
xlat
push
mov
enter
in
aaa
adc
dec
movsl
fisubrs
stc
stos
or
xor
cmp
sub
cmp
data16
ds
jle
rolb
xchg
movsb
add
add
lret
push
add
inc
add
ffreep
dec
adc
add
add
add
add
add
outsl
movsl
or
jo
lret
add
pop
in
inc
dec
movl
daa
add
add
push
call
add
mov
inc
add
sahf
push
sub
aaa
int
add
sbb
subl
sub
loop
rolb
into
movb
clc
adc
xchg
add
add
pop
xor
add
mov
pop
or
mov
inc
add
push
mov
add
dec
addb
jne
add
das
inc
add
add
pop
fwait
push
add
out
adc
xchg
add
lahf
pusha
add
mov
nop
add
adc
scas
bswap
hlt
add
bound
mov
jp
xchg
add
dec
dec
cld
loope
add
into
iret
mov
mov
sub
aas
lcall
int
add
dec
pop
sbb
mov
xor
adc
add
das
mov
add
aam
cmpl
rolb
add
add
andl
leave
mov
push
add
add
lods
repnz
add
mov
test
add
jbe
mov
stos
mov
sub
push
add
imul
imul
add
add
mov
add
out
mov
addb
add
mov
testl
sbb
add
add
add
cmp
pop
rolb
sbb
cmc
xchg
add
add
stos
mov
adc
dec
xor
mov
add
push
add
cld
or
push
popf
scas
mov
xor
rolb
mov
add
push
xchg
push
add
xchg
iret
addb
insb
aas
and
shrl
mov
dec
pop
sub
mov
out
adc
add
les
mov
add
jo
dec
popa
outsb
sbb
aad
push
add
add
out
inc
add
out
mov
mov
add
mov
cmp
rolb
cmpsb
add
jne
lock
scas
subl
jp
scas
mov
testb
dec
stc
ljmp
sbb
push
inc
add
pop
push
jp
mov
popa
jne
je
popa
scas
test
push
add
add
jb
push
add
dec
out
mov
add
add
add
cmp
add
imul
add
or
push
add
add
add
aas
cmpsb
add
cwtl
xor
movsl
adc
pop
jg
mov
mov
add
insl
xchg
add
add
fidivs
lds
stos
ljmp
jmp
add
add
dec
push
mov
sbb
aad
ljmp
jb
push
cmp
xor
and
test
enter
add
cmp
test
add
mov
add
sbb
mov
or
sub
pop
jno
jns
add
add
iret
xchg
mov
or
add
mov
add
add
popf
mov
xor
data16
add
sbb
add
fsubp
add
add
mov
xlat
lock
stos
jmp
push
pop
pop
pop
mov
hlt
add
xlat
pop
inc
add
add
xor
mov
add
and
femms
xor
mov
dec
gs
jecxz
sbb
aaa
and
mov
add
repnz
mov
testb
push
push
add
add
test
mov
xor
xor
adc
scas
pop
addb
add
adc
add
and
mov
add
mov
sub
mov
pop
xchg
add
mov
cmc
xchg
add
xor
xor
ds
js
cwtl
lret
jb
stos
inc
add
stos
jl
adc
jae
aaa
sbb
xchg
cld
adc
sti
and
mov
or
aaa
fbld
mov
ja
add
lret
nop
add
dec
aaa
out
dec
insl
push
add
adc
mov
add
mov
call
jmp
int3
mov
inc
in
add
loop
pop
dec
dec
outsl
ror
mov
loope
add
mov
add
mov
les
lahf
imul
push
xchg
add
add
mov
cmp
call
pop
jge
sbb
mov
mov
mov
inc
cmpsl
dec
push
mov
mov
pop
pop
decb
pop
std
imull
xor
int
add
popa
jg
cmc
sub
add
lds
add
addb
pushf
sbb
imul
call
push
jnp
call
add
stc
in
add
enter
in
cmp
into
aam
cld
lahf
push
add
rolb
and
pop
push
and
out
push
add
outsb
push
inc
clc
push
and
ja
iret
repnz
sub
in
add
pop
mov
sub
add
add
out
icebp
fmull
add
cmp
add
mov
sar
pusha
add
jg
add
pop
mov
lea
and
mov
dec
rolb
xchg
or
inc
add
test
cmpsb
add
jb
call
push
add
jbe
dec
les
xchg
add
add
push
add
add
add
xor
sbb
cmpsl
lret
xchg
js
fldcw
add
add
jae
mov
mov
jns
add
inc
sbb
cld
aas
dec
out
jge
cld
pop
daa
pop
mov
xchg
sub
add
sti
rolb
rolb
mov
ret
sti
xor
dec
dec
pop
mov
push
add
xchg
add
jecxz
in
xchg
pop
mov
pushf
cmp
add
clc
imul
or
addb
push
js
shll
xchg
aad
pop
clc
sub
xchg
add
sub
add
adc
idivl
out
in
outsb
mov
mov
add
fistps
data16
xlat
add
aaa
insl
pop
imull
dec
mov
xlat
jo
out
ljmp
mov
add
cmp
fcmovnu
imul
add
add
add
clc
ljmp
add
jp
inc
add
arpl
int3
mov
addb
add
into
test
lahf
rolb
pop
cmp
mov
dec
jb
add
jmp
add
dec
ja
lock
aaa
xor
adc
mov
pop
xchg
out
int3
nop
add
add
add
iret
xchg
add
cmp
aas
and
add
add
add
test
ret
adc
insb
inc
add
add
or
add
add
mov
add
insb
jne
enter
sub
lcall
pop
jns
xchg
out
mov
add
pop
pop
dec
push
mov
mov
into
cmp
add
sub
fisubs
and
xlat
ja
mov
test
or
shll
fwait
xchg
lret
js
push
mov
mov
pop
ja
inc
add
addb
jae
mov
inc
add
mov
add
add
cmp
mov
mov
lods
out
daa
mov
xorl
add
mov
rcrl
add
iret
test
add
inc
add
cmp
add
sub
dec
cld
push
add
mov
add
add
xchg
and
cmc
addb
mov
test
add
cmc
flds
adc
ss
gs
jmp
dec
cmpsl
add
mov
push
add
scas
sbb
sub
pop
push
inc
add
rolb
sarl
add
repnz
stc
inc
add
mov
sbb
rolb
add
mov
mov
and
mov
add
dec
outsl
rolb
mov
add
popf
iret
sbb
aas
push
pop
push
add
ficompl
add
enter
popa
std
mov
cmpsb
add
ljmp
mov
add
repnz
mov
sub
add
and
mov
pop
les
mov
dec
fsubs
mov
enter
add
push
add
cld
addr16
fldt
push
mov
add
jno
add
das
dec
xor
pop
pop
arpl
movsl
sti
xor
jl
sbb
add
add
aaa
outsl
lahf
arpl
add
and
push
add
add
add
dec
addb
lea
pop
shll
ret
cmp
pop
out
mov
xchg
push
add
adc
xchg
add
icebp
pop
sbb
add
mov
fisttpl
add
