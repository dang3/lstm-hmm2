add
andl
addl
and
ret
add
loopne
add
addb
shlb
addl
add
add
rol
add
ret
add
mov
arpl
loope
and
inc
inc
andl
rolb
mov
jecxz
mov
loopne
and
pusha
roll
and
and
roll
andb
rolb
ret
add
add
add
mov
mov
pusha
ret
mov
and
pusha
inc
arpl
loopne
add
andb
inc
mov
loopne
inc
mov
and
inc
ret
rolb
mov
and
add
mov
mov
mov
add
rolb
arpl
addb
add
ret
add
mov
mov
pusha
jecxz
add
andb
and
pusha
add
mov
and
add
inc
mov
and
add
add
arpl
inc
add
mov
arpl
pusha
mov
add
inc
rolb
loop
and
loopne
add
pusha
addb
loopne
inc
mov
inc
addb
and
mov
shlb
inc
rolb
shlb
mov
addl
and
and
inc
add
and
pusha
addl
inc
pusha
and
inc
and
add
addb
inc
mov
and
and
add
andb
add
and
addl
rol
jecxz
addb
add
arpl
and
popa
loopne
shlb
add
ret
inc
inc
shlb
andb
loopne
add
loopne
addb
andb
inc
loope
andb
inc
loopne
and
bound
and
add
andb
and
ret
and
pusha
inc
and
add
mov
mov
inc
inc
and
mov
andb
mov
shl
addb
add
rol
and
mov
loopne
add
pusha
mov
add
inc
add
mov
addb
and
inc
and
mov
pusha
loopne
shlb
loope
mov
andb
pusha
mov
loopne
add
shlb
rol
inc
mov
popa
rolb
ret
add
add
andb
shl
inc
add
and
add
inc
inc
inc
roll
ret
add
add
roll
add
inc
andb
addb
loope
and
inc
loopne
add
inc
inc
andb
jecxz
arpl
loopne
mov
and
add
addb
pusha
and
loopne
roll
add
shlb
and
ret
inc
jecxz
inc
and
add
loopne
popa
loopne
add
rolb
loopne
add
add
rolb
pusha
add
loop
loopne
rol
add
add
loop
inc
mov
loopne
inc
loopne
shlb
loope
inc
inc
addb
loopne
addb
shlb
and
shlb
mov
loopne
rolb
andb
jecxz
add
add
pusha
mov
mov
mov
pusha
jecxz
loop
loopne
and
and
and
inc
add
pusha
loopne
and
rolb
andb
bound
inc
inc
popa
inc
popa
loopne
andb
mov
add
and
ret
addb
inc
mov
add
shl
loopne
loop
and
jecxz
ret
inc
jecxz
mov
mov
mov
add
shlb
and
and
inc
inc
and
inc
inc
add
mov
mov
add
inc
andl
pusha
and
inc
and
shlb
addb
andb
loop
popa
rolb
inc
andb
rol
pusha
addb
pusha
add
pusha
add
rolb
pusha
add
add
add
andb
add
mov
inc
inc
addl
inc
add
and
shlb
loop
ret
and
rol
and
loop
inc
pusha
mov
rolb
addl
mov
and
mov
addl
andb
loope
ret
mov
addb
and
rolb
popa
pusha
andb
addb
add
inc
shlb
add
pusha
mov
loopne
and
inc
mov
jecxz
and
add
jecxz
rol
mov
rolb
rolb
ret
inc
ret
mov
shl
loopne
inc
inc
loopne
mov
mov
shlb
and
ret
andb
jecxz
loope
mov
add
mov
mov
shlb
addl
ret
add
inc
loope
and
add
addl
and
add
add
mov
inc
mov
ret
and
add
ret
add
loop
inc
andb
pusha
bound
pusha
arpl
inc
pusha
and
and
and
jecxz
mov
rol
ret
loopne
and
add
add
mov
popa
mov
addb
shlb
bound
bound
mov
pusha
loop
loope
add
and
inc
shlb
mov
add
loope
arpl
addb
add
mov
jecxz
mov
addb
loopne
rolb
and
inc
andb
add
bound
and
add
loopne
shlb
and
loop
rolb
add
and
mov
mov
mov
popa
loopne
rol
add
pusha
add
add
add
rolb
mov
add
inc
add
and
loopne
add
inc
add
shlb
mov
shl
popa
inc
shll
bound
inc
mov
add
inc
shll
loopne
addl
andb
rolb
addb
shlb
add
popa
pusha
mov
rolb
add
pusha
add
pusha
and
add
shlb
rolb
and
add
and
popa
addb
addb
mov
add
mov
arpl
inc
mov
addb
inc
pusha
and
arpl
ret
pusha
pusha
and
add
jecxz
inc
mov
add
and
add
popa
addb
and
and
add
mov
ret
loopne
loopne
and
add
inc
loopne
loope
mov
rolb
loopne
add
add
inc
shlb
mov
inc
mov
andb
arpl
inc
and
loopne
and
inc
bound
ret
add
shlb
rolb
popa
add
add
and
andb
inc
popa
pusha
addl
shll
addb
loopne
and
mov
shlb
loop
and
shl
and
jecxz
add
andb
add
add
jecxz
and
arpl
and
pusha
loopne
inc
inc
add
and
loopne
andb
rolb
loopne
add
mov
ret
inc
rolb
inc
add
loopne
and
inc
shl
pusha
mov
shlb
add
pusha
addb
inc
and
addb
and
inc
loopne
pusha
inc
add
andl
and
mov
loop
add
inc
pusha
and
mov
pusha
inc
add
add
inc
add
inc
add
inc
pusha
and
pusha
loopne
addl
inc
loopne
loop
ret
and
mov
and
mov
pusha
mov
addb
add
add
pusha
mov
mov
addb
addb
add
rolb
pusha
rolb
loop
shll
addb
inc
mov
addb
addl
inc
mov
inc
and
inc
add
mov
rolb
and
mov
and
add
mov
inc
add
shlb
mov
add
bound
inc
rolb
rolb
add
mov
add
pusha
jecxz
addl
loopne
loopne
inc
add
inc
add
inc
mov
inc
and
pusha
addb
loope
loopne
and
add
add
mov
and
shll
rolb
add
shl
add
and
pusha
inc
loopne
inc
addl
ret
add
add
add
inc
add
add
andb
pusha
add
add
add
inc
inc
popa
and
andb
addl
addl
loopne
roll
and
andb
popa
inc
jecxz
loop
ret
loopne
inc
add
add
ret
and
loopne
add
mov
and
and
mov
add
rolb
add
inc
mov
rolb
pusha
inc
rolb
shlb
loopne
loopne
add
pusha
roll
loope
add
mov
add
add
add
mov
add
add
and
mov
pusha
loopne
rol
roll
add
inc
add
inc
popa
and
inc
add
and
mov
mov
mov
add
add
add
inc
and
and
add
and
popa
pusha
roll
andb
add
inc
and
rolb
addl
andb
ret
add
shl
roll
inc
inc
inc
mov
mov
add
inc
pusha
and
and
rolb
and
loopne
pusha
rolb
inc
popa
loopne
mov
arpl
add
mov
add
add
pusha
roll
pusha
and
add
and
and
mov
add
pusha
loope
andb
rolb
and
and
add
jecxz
mov
add
loope
ret
shlb
addb
inc
add
loopne
and
pusha
arpl
add
loop
inc
pusha
mov
mov
mov
inc
loop
add
add
inc
and
add
inc
roll
and
and
jecxz
and
inc
add
pusha
add
pusha
addb
inc
loopne
mov
loope
add
loop
add
inc
add
shl
inc
add
bound
add
add
add
loope
ret
add
add
rolb
ret
and
mov
loopne
inc
add
loop
mov
add
add
shlb
pusha
loopne
and
mov
inc
andb
bound
and
add
and
shlb
and
add
add
loopne
rol
addb
mov
inc
mov
addl
mov
loopne
pusha
add
add
inc
popa
andb
rolb
rolb
mov
pusha
addb
pusha
loope
mov
inc
inc
rolb
popa
pusha
mov
pusha
jecxz
arpl
loope
shll
and
rolb
jecxz
addl
inc
add
add
andb
loope
pusha
and
and
inc
add
and
arpl
and
inc
rolb
inc
mov
and
add
add
popa
add
andb
roll
addb
and
and
pusha
add
inc
mov
loope
mov
addb
and
ret
rolb
add
jecxz
and
mov
and
bound
and
add
inc
addl
and
add
shlb
inc
inc
loope
loop
inc
andb
roll
mov
rolb
addb
and
mov
add
and
add
loopne
shlb
jecxz
and
add
and
add
jecxz
add
add
add
loope
add
rolb
addb
add
mov
and
mov
loopne
and
add
addl
bound
add
add
addb
inc
loopne
rolb
inc
add
inc
rolb
jecxz
add
add
mov
add
popa
inc
mov
inc
arpl
arpl
loopne
add
pusha
and
jecxz
and
inc
loop
shl
add
mov
rolb
addb
add
inc
roll
addl
mov
add
loopne
addb
inc
ret
add
rolb
popa
and
shll
loopne
popa
add
loopne
and
inc
mov
add
mov
arpl
mov
loop
ret
inc
ret
inc
ret
addb
add
rolb
inc
pusha
and
mov
add
rol
and
roll
rol
andl
inc
mov
addb
inc
inc
popa
inc
ret
mov
addl
add
inc
and
and
addl
add
andb
add
add
shlb
rolb
add
mov
shl
jecxz
pusha
add
add
mov
add
pusha
andb
and
inc
andb
add
ret
add
shll
and
add
pusha
pusha
add
inc
loopne
mov
loopne
add
inc
jecxz
arpl
arpl
inc
pusha
add
shll
addl
bound
pusha
mov
addl
inc
loopne
add
and
add
mov
addb
addb
andl
and
addb
popa
addb
add
add
loopne
inc
ret
and
addb
add
mov
add
and
mov
and
mov
add
loopne
inc
ret
and
mov
add
addl
rolb
add
addb
add
mov
addb
loopne
add
add
arpl
popa
and
add
pusha
bound
add
bound
add
mov
shlb
and
add
inc
add
add
pusha
mov
pusha
mov
andb
andb
ret
rolb
addl
and
add
inc
add
rolb
add
add
and
ret
andb
inc
shlb
and
inc
and
loopne
and
add
inc
pusha
addb
rolb
add
addb
mov
mov
add
jecxz
inc
loopne
inc
addb
jecxz
rolb
pusha
add
mov
mov
add
addb
add
add
pusha
addb
pusha
pusha
pusha
inc
and
andb
popa
loopne
andb
mov
inc
add
ret
mov
add
inc
rol
inc
pusha
rol
pusha
bound
loope
jecxz
addl
and
and
inc
shlb
inc
mov
ret
mov
add
addl
mov
inc
inc
mov
mov
pusha
addb
mov
pusha
add
popa
mov
mov
mov
and
mov
ret
mov
popa
loopne
loopne
pusha
inc
andb
loopne
addb
inc
andb
pusha
add
inc
mov
add
pusha
and
and
add
mov
mov
shl
add
add
add
inc
and
jecxz
jecxz
and
shl
bound
mov
shlb
loopne
inc
shlb
inc
add
and
loopne
add
add
andb
inc
addb
and
loopne
inc
ret
addb
add
add
rolb
andb
shlb
andb
loopne
andb
ret
and
pusha
add
and
and
and
inc
mov
mov
shlb
and
pusha
ret
and
rolb
and
addl
loopne
loopne
add
add
pusha
add
bound
and
add
add
add
add
pusha
and
inc
loopne
add
arpl
mov
loopne
inc
and
addl
and
mov
add
shlb
mov
and
mov
addb
andb
add
rolb
bound
andb
inc
inc
addb
and
add
loopne
and
addb
mov
addb
add
add
add
shlb
add
mov
popa
pusha
addl
add
addb
pusha
addb
mov
add
and
add
pusha
shlb
mov
and
add
add
pusha
add
and
and
loope
popa
shlb
shl
and
bound
mov
andb
and
ret
add
shlb
and
loopne
loopne
add
inc
inc
rolb
add
rolb
mov
inc
addb
add
loope
mov
add
inc
add
pusha
add
and
inc
pusha
mov
add
pusha
jecxz
roll
loopne
mov
add
arpl
ret
mov
add
add
and
shlb
rol
addl
and
ret
and
add
inc
popa
mov
loope
popa
mov
and
pusha
pusha
inc
and
loop
andl
bound
add
shlb
rolb
inc
inc
mov
shlb
inc
popa
addb
mov
add
inc
mov
and
add
shll
addb
add
arpl
loope
inc
add
loopne
inc
pusha
and
inc
inc
mov
mov
inc
shll
add
shlb
addb
add
loopne
add
andl
ret
addb
mov
addb
mov
and
inc
jecxz
and
inc
mov
popa
addb
and
loop
and
shlb
pusha
loopne
bound
mov
and
and
roll
inc
and
add
addb
roll
add
inc
and
add
inc
rolb
rolb
rolb
and
mov
andb
pusha
addb
inc
add
loopne
pusha
ret
and
ret
and
add
add
loopne
shl
popa
and
loope
mov
inc
mov
add
add
loope
roll
pusha
bound
mov
loopne
add
and
pusha
add
and
loopne
loopne
add
bound
add
popa
add
pusha
ret
addb
inc
inc
mov
add
addb
add
loopne
ret
and
addb
add
mov
add
add
bound
rol
add
inc
add
bound
arpl
add
mov
rolb
pusha
mov
and
loopne
pusha
inc
addb
loopne
shlb
loopne
mov
loope
inc
loopne
rol
addb
pusha
inc
inc
shll
addb
ret
add
and
add
andl
and
pusha
and
add
loopne
inc
add
mov
add
mov
loopne
inc
jecxz
addb
add
mov
inc
loop
add
mov
andb
jecxz
mov
add
inc
and
pusha
add
and
add
inc
add
mov
andb
shll
inc
mov
add
mov
inc
addb
and
and
mov
add
add
mov
add
inc
shl
ret
pusha
mov
addb
and
and
mov
inc
bound
inc
ret
add
bound
shlb
add
inc
mov
add
mov
ret
and
mov
andb
bound
and
andb
inc
loopne
rolb
addb
loopne
pusha
roll
inc
inc
and
add
add
inc
pusha
inc
shlb
loopne
inc
inc
inc
and
arpl
andb
andb
add
mov
rolb
popa
inc
and
inc
mov
add
inc
and
andb
and
add
rolb
and
mov
pusha
addb
add
mov
pusha
add
loopne
mov
rolb
add
pusha
and
add
inc
and
loop
rolb
pusha
add
addl
mov
pusha
add
and
jecxz
and
andb
inc
jecxz
inc
inc
ret
add
arpl
ret
andb
add
inc
loope
mov
rolb
addb
roll
bound
addl
loopne
add
add
and
andb
mov
add
pusha
mov
popa
add
loopne
mov
loopne
inc
add
add
andb
jecxz
and
mov
andb
mov
addb
add
mov
loopne
rol
loop
and
addb
pusha
shll
mov
and
pusha
addb
andb
and
and
and
and
and
addb
rol
andb
arpl
rolb
inc
inc
inc
arpl
and
mov
rolb
loopne
and
jecxz
mov
and
and
mov
shl
rolb
shlb
inc
rolb
loopne
and
loop
mov
rolb
andb
and
rol
inc
and
mov
loope
mov
addb
and
pusha
roll
andb
ret
inc
mov
rolb
inc
loopne
add
add
addb
shll
pusha
add
loopne
inc
andl
and
add
add
and
rolb
add
and
andb
shlb
and
mov
inc
and
add
add
add
sar
cmc
and
add
add
call
cs
imul
push
adc
add
add
jg
jb
pop
clc
out
pop
xchg
adc
iret
push
or
fcomps
and
clc
jmp
add
add
add
fwait
xchg
and
or
add
add
pushf
daa
mov
ret
adc
pushl
xchg
cli
out
or
lcall
sarb
sbb
add
add
shlb
add
add
mov
out
adc
loopne
add
add
pop
pop
inc
mov
or
shll
and
push
xor
cmp
cmp
add
add
add
lock
stos
mov
xchg
adc
out
popa
insl
fisttpll
inc
cli
mov
insl
mov
jo
int3
adc
enter
mov
add
add
outsb
mov
lea
fs
dec
mov
xchg
pop
not
adc
mov
or
jno
loope
in
fldcw
leave
xchg
std
push
movsb
outsb
adc
mov
or
in
in
fsubl
mov
rcrb
pop
dec
add
add
add
add
add
aaa
lcall
in
xchg
lcall
push
mov
iret
out
cmpl
add
xor
xor
xorb
rclb
mov
lock
mov
mov
rorl
push
push
xor
add
add
fcom
push
cmp
sub
nop
ljmp
push
lods
lods
stos
roll
je
subl
xchg
mov
add
out
jbe
fidivrs
cmp
mov
jg
push
lret
cmpsl
and
add
add
add
pop
cld
mov
add
lcall
hlt
cld
push
stc
or
jns
mov
mov
mov
push
xor
clc
inc
mov
notb
std
jo
mov
push
pop
add
mov
sub
inc
dec
aad
frstor
cwtl
push
ret
insl
repz
je
push
add
scas
roll
add
mov
and
xchg
inc
ljmp
mov
mov
jmp
shll
ret
cmp
cmp
je
jg
push
xor
inc
mov
std
icebp
aam
push
loopne
xchg
stos
adc
int3
aas
ret
test
int
ret
dec
push
jmp
hlt
pop
mov
add
mov
je,pn
inc
xchg
xchg
icebp
inc
mov
add
add
into
sbb
xchg
sahf
imul
orl
int3
int
nop
outsl
inc
mov
sbb
das
or
add
add
into
dec
movsl
xor
sti
call
addl
shlb
mov
sub
add
add
add
fsubl
and
nop
lea
sub
add
add
bound
mov
xchg
scas
ss
add
add
stos
and
add
add
pop
mov
xchg
mov
mov
adc
inc
add
add
movsl
jge
cmp
sahf
mov
mov
push
lods
outsl
add
add
add
js
pop
movsl
lock
sub
add
add
rcrb
imul
loope
push
jmp
addr16
jae
inc
orb
add
add
add
jno
push
mov
jne
das
push
push
aam
pop
movsb
movhps
sub
add
add
inc
lods
fcomp
cmp
pop
bound
mov
mov
mov
imul
adc
or
rclb
rclb
push
fildll
lret
sahf
pop
rcll
mov
je
sti
lcall
rorl
xchg
stos
inc
mov
mov
pop
leave
loope
ja
pop
lods
lret
pop
mov
test
xchg
out
mov
adc
add
add
mov
add
scas
dec
loope
or
push
fcmovnbe
pop
sub
shl
rol
into
xchg
cmp
pusha
mov
sar
or
sbb
add
add
shr
mov
add
add
in
mov
icebp
fdivl
cmp
ja
aaa
scas
mov
enter
jb
mov
pop
mov
add
rclb
test
add
daa
arpl
and
das
inc
aam
and
mov
jb
pushf
enter
and
add
add
mov
ret
cmp
aaa
pop
mov
movsl
inc
pop
and
fcmove
test
sbb
jo
scas
add
filds
fsub
in
insb
add
add
and
stos
loop
jl
mov
add
add
dec
fwait
movsb
push
mov
push
das
test
pop
sbb
pop
inc
xor
lcall
xor
cmp
cwtl
mov
add
add
add
add
add
add
pop
hlt
mov
ficoml
add
add
sbb
in
mov
pushf
cmpsb
repz
mov
loope
cli
jno
mov
add
jmp
and
and
mov
arpl
outsl
cmp
fnstcw
mov
loopne
mov
in
fists
outsl
sbb
cmpsb
add
add
sub
add
add
sub
push
jno
and
enter
stc
cmp
mov
xorl
rep
int3
sub
es
mov
add
add
cs
jno
pop
in
mov
sub
add
xchg
xlat
jge
aam
outsb
cmc
sbb
arpl
dec
mov
cmpsb
jo
xchg
mov
cmp
mov
cmpsb
addr16
scas
jns
daa
xor
jae
mov
sbb
add
pop
dec
push
cwtl
mov
insl
lock
cmp
mov
clc
iret
sar
push
pop
loope
push
sbb
mov
test
xchg
pop
rcrb
fmuls
je
add
add
fwait
cltd
out
mov
lods
and
test
sbb
mov
jmp
inc
and
dec
mov
xchg
xor
addr16
daa
xchg
lock
mov
jmp
add
repnz
or
mov
jmp
pop
xchg
dec
mov
or
insb
add
add
cld
pop
adc
shr
jb
and
add
add
add
add
mov
ljmp
xor
cmp
mov
mov
popa
insl
pop
stos
pop
mov
int3
stos
or
and
sbb
sbb
xor
add
add
int3
mov
inc
cmpsl
fs
lods
jbe
mov
add
add
jae
add
add
in
inc
sub
add
add
xor
repnz
lret
xchg
push
jae
enter
and
cmp
in
psrlq
mov
mov
jne
pop
inc
into
add
add
add
aaa
sbb
pop
push
mov
pop
inc
add
add
lds
mov
hlt
mov
xor
jp
aam
addr16
pop
aaa
sbb
rcrb
add
jo
push
adc
add
add
inc
mov
xchg
push
mov
jbe
mov
sbb
xor
scas
das
adc
add
ljmp
sbb
jl
iret
loopne
cwtl
add
rep
ja
arpl
pushf
xorl
mov
cmp
adc
push
faddl
add
add
dec
push
pop
popa
shll
xchg
lds
add
imul
or
ds
test
icebp
test
loope
or
test
push
and
test
add
add
les
mov
dec
mov
xchg
icebp
andb
jp
imul
add
add
xchg
cmp
gs
sti
xor
jge
fsubr
jge
cs
mov
pushf
js
in
lcall
mov
add
add
add
test
inc
loope
cs
dec
in
in
xchg
dec
mov
scas
adcb
jl
cmpsl
xor
cmpsl
adc
cli
and
add
add
sub
xchg
mov
lods
js
shlb
add
xor
cmp
mov
add
out
sbb
out
add
push
jae
inc
push
xchg
js
add
add
mov
pop
push
out
xchg
cmp
add
add
cli
cli
fnstcw
add
pushf
sbb
mov
sub
add
add
jnp
add
add
stos
outsl
std
xchg
add
mov
mov
mov
xchg
jns
in
jbe
mov
dec
mov
add
add
add
push
cwtl
imul
mov
rcrl
fisttpl
inc
cmp
pop
test
mov
add
cmc
xchg
mov
add
add
jecxz
mov
add
add
add
fcoms
add
movsb
loopne
pusha
add
add
fs
push
ds
push
cs
mov
mov
and
add
add
jno
dec
add
add
add
push
lcall
add
mov
push
inc
dec
nop
popa
xlat
std
pop
xor
pop
pop
and
scas
cmc
push
add
add
cmp
add
add
std
sub
and
call
mov
ss
push
rolb
lea
sbb
jmp
push
out
add
fcoms
loop
aam
xchg
lea
add
mov
inc
add
add
out
addb
sub
add
add
add
lcall
add
add
call
jg
jne
out
imul
adc
insb
add
add
hlt
xlat
and
imulb
cltd
in
jp
sub
mov
add
mov
add
add
iret
xchg
dec
push
sub
xchg
shlb
out
mov
test
add
add
mul
movb
cmp
stos
jmp
pop
inc
cltd
xchg
stos
imul
fwait
mov
insb
add
add
xor
les
dec
or
into
mov
and
push
jb
inc
dec
mov
bound
add
ds
pop
int
mull
add
add
add
add
add
fwait
mov
mov
hlt
stos
or
dec
jne
xor
add
add
inc
mov
inc
je
sbb
loop
lahf
cs
mov
push
cmc
mov
push
popf
test
enter
add
sahf
scas
fcom
push
mov
hlt
jns
sbb
lea
aad
das
pop
clc
les
jnp
into
and
add
add
mov
and
lea
add
add
add
add
add
pop
mov
add
add
xchg
popa
pop
ficoml
cmpsb
leave
cmp
mov
sahf
mov
cmpb
mov
cmp
ljmp
fimuls
cwtl
push
and
add
add
xchg
dec
or
add
add
xchg
orb
add
mov
ror
sub
add
add
add
add
add
add
or
xchg
jno
cs
xor
xchg
rcr
es
lods
ss
out
xchg
adc
adc
out
xchg
cmpsb
jnp
inc
lea
mov
lds
aas
lcall
mov
push
jle
push
mov
jns
inc
int
push
dec
or
es
sbb
push
pop
das
inc
jge
mov
mov
mov
and
sub
push
mov
adc
mov
push
outsb
and
dec
push
adc
pcmpeqd
aas
xor
xor
data16
stos
insb
mov
push
fldt
insl
cld
out
jp
inc
add
add
sbbb
cmp
inc
add
add
add
sbb
xor
pop
inc
pushf
sbb
mov
cmpl
pushf
mov
add
pushf
mov
adc
fadd
cmc
mov
mov
repz
icebp
lock
or
mov
lds
add
pop
push
out
lock
test
bnd
or
add
add
dec
mov
jns
int
pop
push
push
lret
int3
jp
mov
popf
cmp
mov
add
cltd
enter
ja
fldln2
inc
out
sub
xchg
mov
and
xor
aas
xchg
enter
inc
mov
sub
cmp
mov
add
add
sbb
push
out
lcall
cmp
stos
push
loop
fcompl
ljmp
add
xchg
cmpsl
xchg
notl
inc
imul
aad
js,pt
loope,pn
jae
outsb
imul
adc
mov
daa
insb
add
add
sti
and
pop
idivl
add
add
push
add
add
lock
pop
lea
mov
push
aad
or
inc
mov
mov
add
add
cmp
pop
sub
insb
mov
in
cmp
cmc
repnz
add
add
xor
jle
gs
cmp
sub
add
add
outsl
mov
add
mov
push
je
mov
loop
fidivrl
cmp
add
add
mov
repnz
xor
iret
mov
ret
xor
adc
xchg
js
repnz
std
addr16
in
mov
jno
aas
adc
lahf
or
cmp
bound
or
scas
xchg
enter
cmp
pop
or
data16
dec
push
shrl
cmp
sub
mov
push
add
andb
aas
sub
jo
insb
add
add
popa
loop
arpl
fcomps
jmp
mov
add
add
dec
push
das
pop
test
push
andl
aas
pop
lcall
adc
add
call
adc
jle
xor
out
xchg
data16
mov
pop
push
mov
xchg
repnz
lods
rclb
sbb
jl
sub
jbe
xchg
add
frstor
pop
xchg
adc
mov
cmc
adc
aad
dec
add
add
dec
pop
aad
enter
inc
adc
stc
sub
stos
fwait
add
add
and
add
add
add
dec
daa
cmp
xlat
jns
jo
push
push
and
push
out
sar
sbb
pop
sahf
pushf
inc
mov
les
mov
mov
das
dec
test
mov
and
shrl
outsb
fldl
add
add
pop
mov
les
and
add
add
sub
mov
lea
add
shll
xchg
imul
and
add
add
lods
lock
fists
xchg
mov
push
idiv
aad
mov
std
aad
or
mov
inc
ja
lods
mov
dec
mov
add
mov
pop
rcrl
sbb
mov
orb
add
add
ljmp
insb
mov
push
fcomi
cld
ds
add
nop
cmp
xlat
push
xor
mov
mov
add
shll
add
icebp
notb
jecxz
mov
push
adc
cmc
lock
xor
rol
pop
lds
nop
push
orb
adc
add
add
add
daa
mov
mov
dec
mov
int3
daa
cmp
std
or
ret
imull
fmul
sbb
pop
push
pop
pop
mov
movsb
insl
imul
add
out
jle
aad
ret
sbb
add
add
add
loop
scas
nop
aas
inc
add
add
xor
inc
les
mov
data16
mov
add
test
inc
xor
cltd
ficomps
dec
mov
add
in
inc
sbb
cmp
jge
mov
or
out
leave
sti
mov
add
add
out
cmp
insl
or
sbb
jae
and
add
add
pop
popa
stos
enter
sbb
in
jne
mov
inc
pop
pop
sarb
add
mov
add
out
cmc
aad
das
int3
insb
add
add
dec
ret
ss
push
out
push
roll
jmp
inc
cmp
sub
inc
fldl
jmp
sbb
pop
imul
dec
adc
movsb
xchg
loope
cmpsl
sub
add
add
xchg
notl
xor
inc
mov
addb
add
add
push
xor
mov
lcall
xchg
cmc
into
test
add
fcomps
sbb
outsb
inc
pop
dec
test
fsubrs
add
xchg
cld
mov
mov
sbb
adc
mov
adc
dec
imul
push
leave
sti
mov
add
add
push
jo
adc
leave
adc
lock
aaa
jnp
arpl
xor
add
add
adc
popa
cmp
ja
or
add
add
pop
js
leave
mov
pop
rcrb
sub
rcrl
push
sbb
fdivs
mov
les
or
add
or
clc
in
add
add
add
cmp
xchg
push
inc
into
adc
xor
aam
cwtl
call
mov
add
push
outsb
jg
daa
sbb
aaa
ret
sbb
add
add
add
jmp
aad
pusha
mov
pop
xor
vpmaxub
add
add
les
adc
cwtl
or
sbb
add
add
mov
nop
mov
sub
dec
ds
jge
popf
ret
push
dec
jmp
lods
push
jp
mov
popa
daa
mov
lds
or
add
add
cmp
bound
mov
lea
and
sbb
mov
add
push
shl
and
add
add
cwtl
push
and
inc
add
add
lcall
test
push
loopne
xor
outsb
cmp
sub
add
mov
add
inc
repnz
out
xor
aaa
xor
add
add
in
enter
add
add
dec
pop
out
data16
add
add
data16
cmpsb
scas
add
add
add
xor
mov
fsub
xchg
jns
push
mov
loope
shl
adc
add
mov
sti
shll
cltd
push
lcall
rorl
cmp
jle
jno
fisubl
lods
scas
pop
loopne
movsb
sbbl
mov
loopne
andl
les
inc
clc
jno
int
sbb
aas
addr16
cmp
inc
rolb
add
dec
and
push
cwtl
sbb
push
mov
pushw
sbbb
inc
or
call
pop
xchg
mov
add
les
icebp
jmp
pop
outsl
dec
cmpsb
fnstcw
xlat
test
enter
jp
mov
sbb
xchg
dec
push
cmp
lret
imul
popa
jno
popa
cmp
mov
jb
outsb
xlat
mov
add
add
sub
dec
mov
enter
add
mov
aad
addr16
adc
or
nop
jl
imul
mov
xor
adc
outsl
dec
mov
lret
adc
add
add
and
xor
inc
inc
mov
inc
out
into
mov
push
push
nop
xor
lods
popa
js
pop
gs
or
outsb
int
jecxz
adc
ds
mov
or
jb
mov
add
add
imul
test
add
add
js
pop
shl
adcb
flds
add
add
shr
arpl
adc
add
leave
cmp
xchg
mov
add
repnz
vmovntps
lcall
add
arpl
ret
pushf
pop
in
pop
lock
jecxz
in
xchg
jp
scas
pop
popf
imul
jae
mov
mov
mov
xchg
pusha
add
add
xchg
rcll
pop
inc
mov
push
push
mov
imul
scas
dec
lret
pop
ret
jo
cmpsb
pop
pusha
mov
jl
bt
sbb
mov
xor
and
add
add
inc
add
add
out
and
add
add
inc
jmp
inc
xchg
add
add
addr16
jb
les
fwait
out
pop
pop
push
shrl
mov
xchg
jg
mov
mov
sub
add
add
push
xor
rclb
pushf
jl
dec
mov
push
sbb
aaa
xor
ror
in
jae
mov
adc
mov
subl
add
add
int
mov
add
add
loop
or
jae
push
addr16
loopne
pop
shlb
das
lret
paddsw
push
mov
cmp
pop
fs
addr16
sub
mov
lret
sub
daa
mov
stos
outsb
jmp
andb
and
cmp
testb
mov
add
add
add
push
iret
rclb
or
data16
jne
cli
mov
repz
dec
outsl
xor
add
push
sub
ja
js
sub
add
add
push
mov
pop
mov
sbbb
popf
adc
loop
aam
mov
adc
mov
test
xchg
cwtl
jle
hlt
jp
mov
ss
sbb
inc
mov
mov
adc
add
add
ja
lcall
leave
fs
sti
fdiv
movl
and
dec
mov
fs
sbb
cmp
imul
pop
fdivs
lcall
mov
dec
fst
mov
sbb
test
add
add
inc
mov
add
out
and
or
add
add
add
inc
or
xchg
jl
mov
fdivrs
aam
dec
push
fs
repz
or
add
add
movsl
call
add
inc
movsl
mov
mov
fisttpl
ja
mov
xor
scas
rcll
stos
jmp
cmp
jecxz
jbe
add
mov
sbb
ja
mov
jl
dec
sbb
add
add
add
add
lods
sbb
mov
lcall
stos
jne
sub
add
add
je
and
add
add
inc
adc
mov
add
add
shl
mov
sbb
stos
clc
loop
add
fisubs
loope
mov
inc
push
xlat
push
fwait
cmp
inc
jb
xchg
fstpl
test
mov
iret
mov
es
mov
jle
dec
mov
xchg
xchg
add
add
add
jbe
mov
mov
call
loopne
pop
jp
mov
sub
nop
pop
xchg
js,pt
lcall
lods
stc
lret
sub
pop
add
add
xchg
inc
addr16
lock
xor
pop
cmp
xchg
dec
jae
rclb
mov
cmpsl
insl
int
out
sub
add
add
out
dec
mull
add
dec
stc
pop
push
pushf
or
rcl
cwtl
fisubl
mov
sbb
xchg
fwait
cmp
arpl
rorb
scas
jp
jb
pusha
add
add
pop
jge
mov
aaa
mov
outsl
inc
jb
scas
ljmp
adc
cmpsb
dec
sbb
in
adc
pop
cwtl
loop
es
dec
mov
pop
loopne
lcall
ja
sub
add
add
mov
xchg
fndisi(8087
stos
std
sbbb
mov
jb
or
mov
out
fcmovnbe
ret
and
add
add
fildl
test
mov
lods
mov
aad
aaa
in
cli
inc
inc
loope
data16
xor
add
mov
out
cs
cmpsl
ret
cltd
mov
xchg
lret
jnp
lret
sti
adc
push
jb
mov
jp
test
pop
sbb
lret
mov
mov
add
sub
add
add
aad
jnp
or
sarl
push
clc
icebp
push
mov
or
add
add
add
add
add
hlt
loopne
jns
xchg
xchg
negb
jo
push
fucomi
pop
adc
add
sbb
test
push
push
mov
or
mov
mov
mov
popf
into
and
pop
cld
cmp
xchg
dec
mov
insl
add
add
add
iret
movl
je
scas
aaa
inc
jecxz
daa
cmpb
and
add
add
out
mov
dec
fcoml
mov
xchg
cmp
out
ljmp
pushf
stc
pop
push
or
add
add
adc
jns
sub
push
mov
mov
jae
fwait
cmp
sahf
xchg
stos
mov
lahf
mov
mov
adc
add
add
and
add
add
enter
adc
cmp
pushf
lock
jmp
jnp
rol
mov
ret
mov
cmp
mov
inc
in
inc
add
add
rcrb
adc
inc
movsb
mov
aaa
cwtl
push
das
stos
inc
add
dec
fdivrs
mov
push
mov
sub
call
cmp
jne
lea
push
push
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
lea
lea
sub
shr
lock
mov
je
mov
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
cld
call
test
jne
push
call
jmp
ret
or
add
add
add
add
add
mov
pop
icebp
add
andb
mov
stc
xlat
xor
add
jbe
lds
notl
add
add
nop
mov
lret
push
out
into
lods
fs
fidivs
stc
push
sbb
add
add
cli
out
add
add
inc
out
jge
fsub
dec
add
add
mov
or
push
in
add
add
add
cmpsl
je
popa
jle
fildll
xchg
add
mov
add
add
push
and
and
dec
adc
sbb
add
sbb
lea
jns
shll
clc
inc
push
push
sub
add
add
dec
add
add
scas
pop
mov
pop
adc
push
es
es
ret
lret
sbb
mov
or
pushf
imul
enter
mov
lahf
sub
outsb
rorb
xor
xorb
addl
mov
fistpll
inc
add
add
filds
sub
add
add
add
add
jb
mov
add
add
adc
pusha
mov
test
jo
test
or
arpl
test
daa
popf
jecxz
mov
cli
aas
dec
dec
mov
adc
leave
xabort
push
jae
add
add
mov
aad
pop
pop
ret
gs
add
add
add
add
es
addr16
rolb
cmp
into
xchg
add
add
adc
dec
or
or
int
in
dec
out
sbb
jmp
repz
shr
les
cs
dec
mov
adc
sub
add
add
cmp
stc
sarb
dec
popf
and
add
add
add
mov
and
add
add
push
jecxz
adc
clc
mov
sbb
xor
sbb
xchg
outsb
or
and
ficoms
lds
pop
fisubrl
adc
sbb
sbb
adc
in
xlat
inc
xchg
xchg
add
fildl
jecxz
xchg
dec
add
clc
pop
fsubrs
add
add
add
mov
out
or
add
add
sub
fcomp
mov
lret
pop
ret
jmp
xchg
xor
or
cmp
pusha
add
add
ret
cltd
iret
xor
aaa
pushf
fbstp
sub
in
inc
mov
bound
sbb
xor
movsl
lea
xchg
data16
add
insl
pushf
mov
loopne
jg
push
dec
or
and
dec
icebp
js
sbb
aam
mov
sbb
inc
mov
mov
and
sub
mov
orl
add
add
sti
lods
sbb
test
add
inc
mov
sar
inc
add
add
xor
jns
mov
pop
ret
sub
add
add
push
sbb
xor
and
lock
ja
mov
inc
out
or
iret
fcmovnbe
or
es
xchg
lea
add
jb
add
add
je
mov
add
shrb
fbld
in
mov
add
aas
and
dec
fdivl
ficoms
aad
ljmp
add
lret
test
push
xlat
adc
icebp
mov
jge
sbbb
insb
add
add
xlat
xchg
loopne
or
add
add
push
fdivrl
mov
fwait
sbb
aad
outsl
adc
sub
or
push
loop
add
cwtl
dec
repz
sbbb
add
fisubrs
sub
add
add
scas
mov
add
add
out
movsb
pop
arpl
mov
inc
add
add
lock
lods
insl
inc
add
add
fldenv
repnz
sti
xor
inc
jo
adc
cmpsl
cwtl
mov
add
add
stos
shlb
imulb
pushl
add
add
add
push
adc
addr16
hlt
ret
lcall
xchg
or
lds
sar
dec
add
add
and
xadd
pusha
mov
fwait
push
shlb
add
push
ficoml
sub
push
gs
or
add
add
mov
andb
push
dec
xor
adc
adc
imul
cmp
add
add
add
add
in
test
mov
push
xor
mov
add
add
test
popl
icebp
push
pop
into
mov
add
int3
enter
xor
xlat
arpl
fcomps
mov
decl
and
push
int3
fldt
add
add
roll
inc
xor
mov
mov
push
dec
popf
xchg
jns
and
shrl
push
mov
cmpsb
dec
add
add
mov
adc
xor
in
roll
adc
push
mov
loopne
pop
lcall
jl
add
add
fimull
push
setns
hlt
push
pop
push
cmp
dec
data16
repnz
pop
push
mov
cmp
fmull
add
mov
cmp
lcall
jp
mov
fcoml
add
add
cmp
push
dec
add
add
repnz
addr16
jg
sub
add
add
test
mov
push
mov
xchg
mov
mov
push
inc
popa
xor
add
hlt
add
lret
les
fimull
pop
jo
push
push
cmp
dec
mov
test
cmp
mov
add
fsubl
sub
in
push
mov
je
xchg
xor
add
push
mov
add
call
sbbl
stc
pop
push
outsb
int
scas
in
out
call
add
add
adc
add
add
inc
in
out
aaa
jp
add
add
gs
fsubs
push
pop
mov
daa
aas
push
cs
fsubp
cmp
mov
fisubrl
add
aaa
fnstenv
push
mov
xchg
dec
stc
adc
loopne
fwait
jnp
sub
add
add
add
add
movb
inc
add
add
ret
jo
mov
mov
cmp
add
clc
sbb
push
jns
jmp
dec
add
add
adc
loope
lock
ds
jl
icebp
fstl
gs
mov
in
xchg
in
cmp
cmpb
jae
or
push
cmp
push
push
fst
pushf
loop
push
adc
sbb
loope
ret
jno
or
add
add
cmp
jecxz
push
jae
pop
ljmp
mov
push
notl
add
aad
add
cmp
mov
pop
dec
fstpt
pop
mov
add
jl
arpl
in
ret
cmp
jbe
enter
xchg
sub
add
add
popf
dec
stos
pop
or
shll
es
pop
pop
mov
mov
sub
push
repz
sbb
and
jge
push
xchg
xchg
ja
mov
out
in
pop
add
andl
les
popa
loopne
add
add
nop
lods
lods
dec
mov
cmp
jae
jo
popfw
and
mov
rolb
gs
add
add
dec
xlat
rcrb
add
add
pop
dec
xchg
sbb
push
push
or
xchg
add
add
add
and
add
add
rorb
mov
xchg
imul
add
das
dec
test
imul
add
out
cmpsb
sbb
aaa
aas
scas
mov
sbb
mov
ffree
mov
mov
imul
add
add
add
pop
int
cmp
add
add
fwait
dec
xchg
int
test
sbb
add
add
cmpsb
and
add
add
jge
sbb
add
add
pop
shlb
js
arpl
xor
cmc
adc
popa
xor
test
mov
jmp
pop
xchg
inc
add
add
mov
sbb
fists
loope
pop
or
sarl
xor
xchg
daa
insb
add
add
push
mov
and
lahf
fprem1
add
inc
add
add
out
push
xor
mov
in
or
add
add
inc
mov
pop
sub
add
add
outsl
sbb
add
push
repnz
or
push
test
jp
pop
inc
loope
push
pop
out
jmp
sbb
insl
xor
hlt
popaw
outsl
xchg
addr16
add
add
fstp
pop
jmp
mov
lret
add
add
mov
or
out
repz
lock
insb
mov
xor
mov
mov
in
mov
jne
cltd
into
xor
jno
sbb
add
add
sti
inc
mov
push
rolb
cld
sub
add
add
fidivl
stos
popf
xchg
push
sub
add
add
cmp
loopne
sub
add
add
jp
mov
jecxz
jne
add
stos
jle
cwtl
pop
pusha
add
add
push
fdivrs
add
push
test
jl
int
cmp
shrl
or
push
mov
icebp
jecxz
stos
push
out
cmp
inc
inc
add
add
adcb
xchg
push
ja
gs
int3
rcrb
add
rol
mov
or
mov
mov
roll
repz
daa
or
clc
in
test
outsl
hlt
lds
add
add
add
add
add
add
add
add
xlat
getsec
popf
jle
push
mov
adcb
xor
jecxz
fcompl
cli
add
into
filds
stos
xchg
mov
movsl
push
adc
jecxz
pop
data16
out
mov
ret
in
mov
insb
mov
adc
add
add
add
hlt
push
inc
and
mov
shrb
add
addr16
cli
stos
or
add
add
mov
add
xchg
sub
xchg
add
add
add
add
add
popf
popa
push
push
pop
mov
adc
dec
mov
andb
loop
mov
cmp
stos
add
add
and
add
add
mov
les
mov
loop
mov
xchg
fcomps
cmp
iret
scas
and
add
add
adc
sub
add
add
xor
adc
pop
xchg
enter
add
add
mov
mov
scas
push
int3
inc
addr16
sub
movsl
pop
sub
mov
pop
fiadds
xor
sub
leave
iret
in
push
int3
jnp
push
in
lret
in
mov
xchg
sub
add
outsb
adc
repnz
xchg
push
xchg
jno
add
add
dec
jo
outsb
xor
add
add
jg
dec
adc
dec
jne
cmp
stc
shll
insb
add
add
cwtl
scas
xchg
jle
leave
mov
mov
add
adc
mov
sahf
cmp
add
or
ds
mov
loop
push
push
psrlw
dec
push
mov
push
cld
jge
xorb
and
setne
jp
push
push
jp
sbb
push
in
sbb
sbb
adc
into
mov
jmp
adc
daa
clc
imul
dec
inc
and
ficompl
add
out
jecxz
jge
dec
nop
sub
scas
into
mov
pop
loopne
xchg
add
sti
adc
loop
cmp
adc
adc
sbb
jb
ss
add
add
das
je
mov
xchg
fidivrs
mov
ret
cwtl
mov
or
add
je
setne
pop
lods
mov
notb
shrl
mov
sub
repnz
je
lcall
aas
sub
add
add
mov
pop
adc
ret
xlat
and
add
add
pop
call
add
add
mov
add
outsb
es
leave
bound
shll
pop
loopne
int
test
test
call
dec
cld
pop
mov
mov
mov
fyl2x
es
loope
cli
adc
lea
add
add
shll
in
fbstp
aad
out
fsubs
add
jbe
add
add
jbe
imulb
add
icebp
pusha
mov
sub
add
add
jp
ds
pop
lods
and
int3
adc
pop
inc
cld
or
add
jno
xadd
add
add
cld
push
scas
jp
pusha
add
add
add
add
add
add
fmull
jne
mov
push
jle
sub
pop
dec
loope
scas
bt
cmp
xchg
cs
add
add
xchg
push
ds
sub
add
add
call
add
add
mov
xchg
push
aad
sub
add
add
out
cltd
mov
lock
add
add
aad
push
pusha
add
add
inc
inc
cmpb
inc
add
add
cs
fmuls
add
xchg
or
std
cmp
mov
add
xchg
xchg
push
mov
xchg
mov
out
mov
add
add
dec
xchg
add
adc
ljmp
or
add
add
cmpsl
repz
cmp
lds
mov
mov
push
sub
add
add
add
add
add
insl
repnz
jmp
in
and
add
add
add
add
add
add
add
arpl
mov
fstl
jg
xchg
lds
sarl
cli
fcoms
inc
mov
push
stos
repnz
scas
jbe
stos
insl
push
leave
sub
dec
push
ret
imul
sbb
data16
fsubs
jg
mov
cli
xchg
adc
in
mov
gs
add
add
add
gs
pop
dec
push
out
divl
aam
stos
out
clc
aam
test
les
inc
ret
out
adc
push
loop
mov
adc
adc
out
fdivrl
push
clc
repnz
nop
nop
jae
add
adc
xchg
add
mov
pop
push
mov
xchg
ret
clc
cmp
add
mov
add
push
mov
xchg
ret
inc
xchg
xchg
mov
sbb
sahf
xchg
je
clc
repnz
nop
nop
jae
add
add
jne
clc
repnz
nop
nop
jae
mov
add
mov
test
repnz
nop
nop
jae
pop
add
add
cwtl
stos
std
inc
push
mov
xchg
ret
sbbl
scas
ret
and
add
and
js
push
mov
leave
nop
jmp
add
pop
add
jb
nop
push
mov
leave
nop
jmp
add
sub
push
test
nop
jae
and
sbb
mov
jmp
xor
add
clc
repnz
nop
nop
jae
jge
add
add
add
adc
clc
repnz
nop
nop
jae
add
add
add
shlb
cld
nop
nop
jae
add
add
push
das
dec
clc
add
add
xchg
add
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
xchg
adc
add
add
add
xchg
and
nop
push
mov
leave
nop
jmp
int3
add
mov
push
add
inc
sbb
cld
nop
nop
jae
add
stos
sub
add
add
mov
clc
repnz
nop
nop
jae
clc
add
add
add
fistpl
nop
nop
jae
add
scas
add
das
add
out
lods
push
mov
add
pop
add
jne
push
add
xchg
add
xchg
add
call
repnz
nop
nop
jae
enter
cwtl
mov
add
aad
cld
push
inc
sbb
repnz
nop
nop
jae
add
add
mov
xchg
ret
add
add
orb
add
stc
cmp
nop
push
mov
leave
nop
jmp
add
cltd
pop
mov
add
pop
clc
repnz
nop
nop
jae
add
add
xlat
add
cltd
andl
fld1
push
mov
xchg
ret
xchg
add
int3
loope
arpl
and
lock
nop
push
mov
leave
nop
jmp
mov
add
add
add
rolb
ret
pusha
nop
push
mov
leave
nop
jmp
add
add
mov
loope
outsl
xchg
repnz
nop
nop
jae
add
add
add
xlat
inc
add
je
test
nop
push
mov
leave
nop
jmp
add
mov
add
add
add
add
fistpl
push
mov
xchg
ret
jge
add
and
ret
add
push
mov
shll
pop
loop
sbb
stos
add
inc
add
add
popf
or
add
repnz
nop
nop
jae
scas
add
enter
pusha
mov
leave
cld
push
mov
xchg
ret
add
adc
mov
add
add
push
je
pop
clc
repnz
nop
nop
jae
add
add
clc
add
scas
xchg
add
rcr
sbb
clc
repnz
nop
nop
jae
clc
fcmovnb
clc
stos
orl
clc
repnz
nop
nop
jae
add
sbb
push
clc
repnz
nop
nop
jae
add
addl
xchg
add
add
add
pop
push
mov
xchg
ret
xchg
fistpl
add
xchg
add
add
sub
mov
xchg
ret
add
add
add
add
add
add
jno
test
push
add
clc
repnz
nop
nop
jae
data16
mov
clc
add
mov
clc
repnz
nop
nop
jae
add
add
repnz
pop
inc
push
mov
push
mov
xchg
ret
sub
pop
repnz
pop
mov
sub
sbb
repnz
nop
nop
jae
add
xor
enter
clc
repnz
nop
nop
jae
mov
add
add
add
sldt
clc
repnz
nop
nop
jae
add
add
mov
pusha
clc
repnz
nop
nop
jae
sub
add
pop
mov
push
clc
repnz
nop
nop
jae
enter
add
add
fstps
mov
xchg
ret
adc
outsl
inc
iret
outsl
mov
add
dec
sbb
addr16
add
or
add
add
movb
dec
mov
xchg
ret
add
add
add
stos
outsl
fld1
clc
repnz
nop
nop
jae
add
add
add
add
adc
add
add
sti
push
mov
bound
cmpsb
fiaddl
cmp
add
insl
cltd
and
loopne
loop
cmp
cld
nop
nop
jae
add
add
add
mov
mov
bnd
add
clc
repnz
nop
nop
jae
add
add
ret
sub
jne
clc
repnz
nop
nop
jae
add
add
call
clc
repnz
nop
nop
jae
mov
outsl
add
add
pop
aas
pop
clc
repnz
nop
nop
jae
add
cwtl
add
out
arpl
jae
mov
sbb
push
or
clc
repnz
nop
nop
jae
xchg
mov
cli
jge
inc
daa
add
add
and
mov
sbb
mov
inc
clc
repnz
nop
nop
jae
add
add
je
add
repnz
nop
nop
jae
mov
add
mov
mov
xchg
ret
adc
add
add
xlat
add
call
clc
repnz
nop
nop
jae
and
je
sbb
cwtl
and
add
add
shl
push
mov
xchg
ret
add
mov
mov
cld
cs
add
clc
repnz
nop
nop
jae
flds
push
and
add
add
rcr
and
mov
xchg
ret
add
add
add
add
add
add
ret
popl
xchg
ret
add
pop
add
add
cltd
mov
bound
add
add
add
push
mov
das
add
add
cmp
clc
repnz
nop
nop
jae
flds
cwtl
cmp
sub
cmp
pop
add
repnz
nop
nop
jae
add
outsl
add
pop
add
shrb
add
add
jge
dec
add
shll
sar
repnz
nop
nop
jae
sub
mov
repnz
add
shr
clc
repnz
nop
nop
jae
add
adc
add
movb
add
inc
cwtl
add
sbb
add
add
repz
add
add
add
popa
push
mov
xchg
ret
pop
push
add
iret
inc
sub
sub
mov
or
repnz
nop
nop
jae
adc
add
test
nop
push
mov
leave
nop
jmp
ret
add
enter
add
das
xorb
nop
jae
add
pop
add
add
mov
ret
add
repnz
nop
nop
jae
and
cwtl
add
adc
jae
clc
repnz
nop
nop
jae
arpl
add
cltd
add
adc
add
repnz
nop
nop
jae
add
fnstenv
add
add
and
nop
nop
jae
adc
xor
mov
repnz
nop
nop
jae
adc
data16
iret
pop
insl
add
clc
repnz
nop
nop
jae
pop
iret
add
add
inc
or
jne
clc
repnz
nop
nop
jae
mov
add
mov
mov
xchg
ret
arpl
adc
add
add
add
add
cwtl
or
add
clc
repnz
nop
nop
jae
arpl
add
sub
adc
repnz
nop
nop
jae
mov
add
je
or
or
push
mov
leave
nop
jmp
add
add
stos
pop
pop
add
addr16
clc
repnz
nop
nop
jae
repnz
ret
mov
mov
pop
outsl
scas
in
movsl
pushl
clc
repnz
nop
nop
jae
or
mov
mov
xor
push
mov
xchg
ret
mov
add
add
xor
adcl
repnz
nop
nop
jae
clc
add
iret
push
mov
add
repz
xor
add
or
sbb
add
mov
repnz
nop
nop
jae
add
mov
and
ret
sbb
or
mov
xchg
ret
add
mov
add
add
pop
nop
push
mov
leave
nop
jmp
add
mov
push
scas
add
add
pushl
clc
repnz
nop
nop
jae
add
add
jne
clc
repnz
nop
nop
jae
or
add
call
xorps
xchg
ret
add
clc
add
add
je
add
and
repnz
nop
nop
jae
xor
mov
mov
mov
adc
nop
jae
pop
add
add
inc
mov
and
cld
nop
nop
jae
sbb
loope
add
add
xlat
adc
adc
add
repnz
nop
nop
jae
dec
mov
stos
sub
clc
repnz
nop
nop
jae
je
add
mov
add
add
sub
or
repnz
nop
nop
jae
add
xor
pop
mov
imulb
or
add
add
mov
clc
repnz
nop
nop
jae
sub
ret
stos
add
roll
mov
mov
clc
push
mov
xchg
ret
add
add
sarl
call
repnz
nop
nop
jae
add
add
add
clc
add
loope
clc
repnz
nop
nop
jae
add
add
add
add
add
nop
push
mov
leave
nop
jmp
add
add
add
add
add
add
add
or
cld
nop
nop
jae
cwtl
add
das
add
pop
adc
mov
nop
push
mov
leave
nop
jmp
pop
add
add
push
add
add
push
clc
repnz
nop
nop
jae
add
add
xchg
and
repnz
sub
cld
nop
nop
jae
sbb
ret
fisttpll
je
push
add
cltd
arpl
cld
nop
nop
jae
mov
jge
add
add
mov
repnz
nop
nop
jae
add
int3
add
add
or
and
add
add
inc
mov
repnz
nop
nop
jae
add
add
push
orb
lea
push
mov
xchg
ret
sbb
and
das
add
testl
nop
nop
jae
add
and
push
push
mov
xchg
ret
add
stos
mov
add
clc
repnz
nop
nop
jae
add
add
add
mov
add
mov
add
nop
push
mov
leave
nop
jmp
add
ret
cmp
scas
cli
decl
inc
add
add
fildl
add
add
xlat
add
xorb
add
repnz
nop
nop
jae
adc
push
jge
mov
add
int3
jmp
nop
nop
jae
add
mov
repnz
nop
nop
jae
or
or
push
iret
jne
clc
repnz
nop
nop
jae
add
add
xlat
lea
push
mov
xchg
ret
sub
add
adcb
inc
add
add
xor
clc
repnz
nop
nop
jae
add
add
mov
push
mov
pop
sub
add
mov
bound
push
pop
dec
xor
int3
xor
or
cltd
inc
add
outsl
mov
mov
fucom
pop
call
clc
repnz
nop
nop
jae
inc
jge
add
add
push
mov
xchg
ret
add
pop
repnz
outsl
repnz
je
nop
push
mov
leave
nop
jmp
add
add
add
add
add
add
pop
push
mov
xchg
ret
pop
add
add
outsl
je
clc
rorl
inc
add
and
scas
add
mov
inc
adc
add
insb
mov
mov
test
nop
push
mov
leave
nop
jmp
pop
pop
add
xlat
add
cwtl
mov
clc
repnz
nop
nop
jae
pop
jge
pop
sbb
sub
mov
clc
repnz
nop
nop
jae
pop
add
mov
and
mov
sub
sub
mov
xchg
ret
add
fildl
mov
add
pop
pop
push
mov
xchg
ret
cmp
add
addb
xor
add
cmp
add
add
out
add
add
add
out
rorb
cmp
repnz
nop
nop
jae
add
inc
pop
sub
add
xor
inc
mov
clc
repnz
nop
nop
jae
arpl
add
add
and
add
cmp
xchg
inc
xor
push
mov
xchg
ret
and
add
sbb
jo
add
add
cwtl
add
addl
add
add
andb
movsb
pop
call
clc
repnz
nop
nop
jae
and
mov
adc
cmp
nop
push
mov
leave
nop
jmp
jge
add
xlat
pop
pop
jne
push
mov
xchg
ret
subl
add
clc
add
sub
add
mov
xchg
ret
ret
cltd
cwtl
push
add
push
pop
clc
repnz
nop
nop
jae
cmp
roll
add
jne
clc
repnz
nop
nop
jae
pop
add
test
cld
nop
nop
jae
mov
pop
clc
mov
mov
leave
push
push
mov
xchg
ret
and
add
mov
je
inc
dec
roll
mov
adc
add
clc
repnz
nop
nop
jae
adc
push
xchg
add
nop
push
mov
leave
nop
jmp
mov
je
call
clc
repnz
nop
nop
jae
xchg
add
add
mov
clc
repnz
nop
nop
jae
mov
pop
clc
add
aas
mov
push
mov
xchg
ret
fisttpll
adc
adc
pop
clc
repnz
nop
nop
jae
add
xlat
add
add
add
add
cld
nop
nop
jae
sub
adc
iret
add
clc
repnz
nop
nop
jae
add
ret
mov
add
clc
repnz
nop
nop
jae
add
add
add
add
add
in
leave
nop
jmp
add
data16
add
mov
add
sub
jg
clc
repnz
nop
nop
jae
pop
addl
add
nop
nop
jae
add
add
and
add
subl
and
nop
push
mov
leave
nop
jmp
add
add
ret
add
add
mov
push
mov
leave
nop
jmp
je
cmp
sub
push
push
mov
xchg
ret
add
add
enter
mov
cli
add
call
inc
add
add
fsts
scas
push
clc
repnz
nop
nop
jae
mov
mov
fstl
pop
sub
repnz
nop
nop
jae
add
mov
sbb
adc
call
nop
jmp
add
add
clc
dec
add
add
add
xlat
fnsave
add
add
adc
das
pop
mov
mov
repnz
nop
nop
jae
push
pop
sub
or
and
add
add
in
leave
nop
jmp
add
push
add
add
mov
add
fisubs
add
add
mov
add
lret
push
cmp
add
dec
ret
add
add
repnz
nop
nop
jae
add
cmp
dec
mov
pop
push
mov
xchg
ret
adc
push
mov
pop
add
add
stos
push
clc
repnz
nop
nop
jae
data16
add
add
clc
repnz
nop
nop
jae
pop
add
repnz
add
mov
clc
repnz
nop
nop
jae
mov
add
mov
add
rorl
and
add
add
add
enter
add
clc
repnz
nop
nop
jae
enter
das
enter
enter
rep
clc
repnz
nop
nop
jae
mov
data16
loope
or
inc
add
mov
das
add
add
pop
jb
shr
clc
repnz
nop
nop
jae
sub
add
sbb
jge
xor
repnz
nop
nop
jae
xchg
sbb
ret
add
mov
loop
jb
push
clc
repnz
nop
nop
jae
data16
inc
cmp
add
scas
fistps
repnz
nop
nop
jae
add
outsl
push
sub
add
add
roll
mov
xchg
ret
xlat
add
pop
add
add
ret
mov
add
cmp
cld
nop
nop
jae
add
add
jmp
clc
repnz
nop
nop
jae
mov
add
mov
add
lea
push
mov
xchg
ret
mov
dec
add
add
mov
lahf
mov
clc
repnz
nop
nop
jae
stos
add
add
add
add
dec
and
cld
nop
nop
jae
add
sub
mov
clc
repnz
nop
nop
jae
add
add
cltd
add
ret
mov
nop
push
mov
leave
nop
jmp
add
ret
add
mov
mov
and
repnz
nop
nop
jae
add
add
int3
add
adc
xchg
rclb
jb
add
enter
add
arpl
mov
clc
repnz
nop
nop
jae
add
sub
dec
loopne
fidivl
cld
nop
nop
jae
enter
add
fildl
add
add
xor
mov
xchg
ret
add
arpl
add
int3
adc
add
rcll
mov
xchg
ret
ss
adc
add
add
xchg
repnz
nop
nop
jae
inc
add
test
and
add
add
ret
sbb
nop
jae
add
sub
add
add
jmp
mov
add
add
add
add
repnz
repnz
nop
nop
jae
add
add
ret
add
pop
fwait
clc
repnz
nop
nop
jae
je
push
add
pop
repnz
out
or
add
add
add
add
leave
rep
clc
repnz
nop
nop
jae
add
add
xlat
adc
fstpt
ja
rorl
mov
xchg
ret
iret
and
add
add
push
mov
xchg
ret
pop
das
ss
data16
add
or
pop
clc
repnz
nop
nop
jae
cwtl
sub
add
xchg
adc
push
mov
xchg
ret
add
add
cwtl
mov
push
testl
nop
push
mov
leave
nop
jmp
add
pop
cmp
inc
mov
clc
repnz
nop
nop
jae
add
mov
add
nop
push
mov
leave
nop
jmp
xchg
add
add
and
addb
add
jge
push
mov
xchg
ret
dec
iret
inc
enter
inc
add
sbb
adc
pushl
clc
repnz
nop
nop
jae
enter
ss
add
shl
clc
repnz
nop
nop
jae
or
ret
add
add
add
clc
repnz
nop
nop
jae
add
add
add
testb
nop
nop
jae
add
add
add
ret
mov
sub
clc
repnz
nop
nop
jae
enter
mov
mov
add
popf
and
clc
repnz
nop
nop
jae
add
add
add
mov
clc
repnz
nop
nop
jae
sub
mov
mov
add
add
add
and
add
add
jae
push
mov
xchg
ret
add
add
add
xchg
icebp
mov
nop
push
mov
leave
nop
jmp
ret
iret
add
add
add
add
jmp
or
mov
add
outsl
adc
add
push
mov
xchg
ret
movb
add
mov
push
clc
bnd
add
add
clc
repnz
nop
nop
jae
add
add
scas
pop
js
cwtl
xchg
insl
add
clc
repnz
nop
nop
jae
add
fstl
mov
repnz
nop
nop
jae
add
int3
outsl
and
pop
and
clc
repnz
nop
nop
jae
xor
add
out
mov
push
mov
xchg
ret
add
scas
add
add
aad
roll
repnz
nop
nop
jae
mov
je
flds
je
xchg
mov
clc
repnz
nop
nop
jae
add
add
add
add
sbb
nop
nop
jae
adc
push
add
pop
clc
repnz
nop
nop
jae
inc
add
add
add
jge
add
testl
add
repnz
nop
nop
jae
outsl
mov
sub
cmc
add
push
mov
xchg
ret
or
add
add
mov
rorl
repnz
nop
nop
jae
add
add
and
pop
flds
add
lods
loopne
je
clc
repnz
nop
nop
jae
ret
add
mov
push
mov
ja
test
add
add
and
add
mov
call
incl
nop
push
mov
leave
nop
jmp
add
add
mov
xchg
ret
add
pop
add
mov
data16
mov
xchg
push
mov
xchg
ret
add
add
pushf
jg
rclb
cltd
inc
add
and
stos
add
mov
push
push
mov
xchg
ret
add
repnz
push
cmp
jp
inc
add
fstl
data16
xchg
stos
mov
clc
repnz
nop
nop
jae
add
push
add
add
push
mov
clc
repnz
nop
nop
jae
add
cltd
repnz
add
lret
add
adc
arpl
add
cmp
cld
nop
nop
jae
inc
cltd
add
outsl
add
add
stos
pop
pop
lea
clc
repnz
nop
nop
jae
pop
add
push
ret
adc
clc
repnz
nop
nop
jae
adc
add
add
jg
clc
repnz
nop
nop
jae
xchg
push
mov
js
orl
inc
add
mov
je
scas
add
sar
cld
nop
nop
jae
add
add
add
dec
add
push
popl
xchg
ret
pop
mov
xlat
mov
add
sub
push
push
mov
xchg
ret
add
fldt
clc
jge
add
popa
clc
repnz
nop
nop
jae
sub
add
xchg
add
clc
repnz
nop
nop
jae
and
enterw
scas
pushf
scas
push
push
mov
xchg
ret
scas
mov
add
add
cmp
inc
adc
repnz
nop
nop
jae
add
and
arpl
mov
test
push
mov
xchg
ret
add
add
add
add
mov
add
xchg
stc
add
push
mov
xchg
ret
add
add
add
mov
push
mov
xchg
ret
add
das
add
clc
enter
add
add
mov
ficoml
mov
xchg
ret
addb
add
jge
add
fstp
mov
adc
add
clc
repnz
nop
nop
jae
pop
ret
movb
add
add
add
add
add
add
xchg
add
repz
nop
push
mov
leave
nop
jmp
adc
add
mov
cmp
add
push
nop
push
mov
leave
nop
jmp
sub
sarl
mov
or
add
add
add
add
add
add
add
add
pop
addb
incl
jne
inc
add
add
data16
jne
clc
repnz
nop
nop
jae
add
pop
or
cld
nop
nop
jae
add
mov
outsl
sub
mov
mov
clc
repnz
nop
nop
jae
add
and
mov
ret
adc
push
mov
leave
nop
jmp
cmp
add
mov
xchg
add
push
clc
repnz
nop
nop
jae
add
add
iret
add
add
add
add
test
add
clc
repnz
nop
nop
jae
pop
stos
xlat
add
add
clc
repnz
nop
nop
jae
mov
loope
add
decl
cld
nop
nop
jae
mov
das
add
add
adc
mov
clc
repnz
nop
nop
jae
int3
pop
push
add
mov
push
add
fildl
in
leave
nop
jmp
mov
add
push
mov
clc
jp
mov
clc
repnz
nop
nop
jae
loope
mov
outsl
add
repnz
nop
nop
jae
mov
add
repnz
adc
clc
repnz
nop
nop
jae
inc
add
xlat
add
ss
adc
repnz
nop
nop
jae
sub
add
cld
sub
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
enter
pop
dec
outsl
sub
pop
fs
add
pop
add
enter
mov
mov
push
mov
xchg
ret
add
mov
add
dec
inc
add
rol
loop
clc
repnz
nop
nop
jae
scas
add
mov
push
clc
repnz
nop
nop
jae
fildl
add
push
add
add
inc
push
nop
push
mov
leave
nop
jmp
addb
add
xor
je
nop
push
mov
leave
nop
jmp
fldl
add
add
mov
push
clc
repnz
nop
nop
jae
and
scas
mov
add
data16
mov
fwait
clc
repnz
nop
nop
jae
xor
add
add
jge
imul
and
repnz
nop
nop
jae
add
pop
mov
add
enter
movsl
push
push
mov
xchg
ret
dec
mov
adc
add
stos
mov
clc
repnz
nop
nop
jae
sub
flds
add
add
andl
pop
mov
clc
repnz
nop
nop
jae
adc
add
mov
arpl
repnz
nop
nop
jae
cltd
fildl
sub
jno
inc
and
repnz
nop
nop
jae
add
pop
loope
stos
inc
push
add
nop
nop
jae
add
rol
dec
add
repnz
outsl
jb
fisubs
add
add
add
repnz
nop
nop
jae
add
add
xchg
imul
add
add
add
add
pop
add
outsl
scas
adc
out
ljmp
cmp
addl
and
mov
mov
leave
nop
jmp
add
push
add
clc
add
add
mov
repnz
nop
nop
jae
push
int3
adc
pop
add
addb
sub
clc
repnz
nop
nop
jae
mov
mov
dec
cmp
repnz
nop
nop
jae
add
fldl
pop
data16
jmp
jp
nop
push
mov
leave
nop
jmp
adc
add
dec
add
add
mov
nop
push
mov
leave
nop
jmp
fldt
xlat
jge
mov
add
test
push
nop
push
mov
leave
nop
jmp
add
push
mov
add
stos
and
lods
push
mov
xchg
ret
mov
add
add
xlat
xor
clc
repnz
nop
nop
jae
add
add
add
jg
clc
repnz
nop
nop
jae
push
sbb
push
add
adc
mov
push
mov
xchg
ret
add
cmp
add
add
add
pop
push
mov
cltd
or
adc
jg
fnsave
in
xor
out
clc
clc
repnz
nop
nop
jae
add
ret
int3
mov
add
sbb
jnp
inc
sub
repnz
nop
nop
jae
sub
add
fxch
pop
adc
es
repnz
nop
nop
jae
adc
je
pop
sub
clc
repnz
nop
nop
jae
add
cltd
adc
add
add
add
subl
clc
repnz
nop
nop
jae
add
add
shll
leave
clc
repnz
nop
nop
jae
movb
add
add
and
add
repnz
int
clc
repnz
nop
nop
jae
cwtl
scas
roll
and
mov
fldl
flds
gs
nop
push
mov
leave
nop
jmp
add
add
add
dec
scas
loop
cld
nop
rcr
push
add
add
add
pop
push
mov
xchg
ret
loope
mov
add
pop
add
mov
push
negb
fadds
repnz
nop
nop
jae
add
mov
push
mov
clc
repnz
nop
nop
jae
repnz
int3
mov
add
addl
add
add
add
add
add
add
cld
nop
nop
jae
and
rorl
fsubr
mov
add
add
call
clc
repnz
nop
nop
jae
add
add
xor
dec
loope
rclb
jmp
pop
mov
movb
out
mov
jmp
add
add
add
add
mov
lds
mov
nop
push
mov
leave
nop
jmp
iret
dec
add
adc
rcrb
fwait
push
mov
xchg
ret
add
stos
add
add
xor
das
mov
clc
repnz
nop
nop
jae
add
mov
xlat
add
dec
addl
stos
jbe
add
clc
repnz
nop
nop
jae
add
add
adc
cwtl
push
pop
pop
clc
repnz
nop
nop
jae
outsl
mov
mov
je
nop
push
mov
leave
nop
jmp
or
xor
jle
add
clc
repnz
nop
nop
jae
sub
and
xchg
add
out
dec
nop
push
mov
leave
nop
jmp
sub
mov
xor
add
push
popl
xchg
ret
data16
add
add
cmp
pop
jnp
pop
cmp
mov
xchg
ret
fldl
dec
add
mov
loop
push
push
mov
xchg
ret
add
add
add
mov
add
add
addl
insb
inc
add
clc
add
add
add
ss
jne
clc
repnz
nop
nop
jae
sub
inc
pop
add
pop
fdivl
mov
xchg
ret
add
push
fldl
add
pop
pop
leave
call
push
mov
xchg
ret
add
xlat
add
mov
mov
push
clc
repnz
nop
nop
jae
scas
add
adc
data16
stos
mov
add
clc
repnz
nop
nop
jae
add
and
ret
add
std
fwait
clc
repnz
nop
nop
jae
jge
add
scas
dec
pop
add
je
add
push
clc
repnz
nop
nop
jae
jge
outsl
int3
clc
fstpl
add
xor
mov
xchg
ret
mov
add
pop
add
mov
nop
push
mov
leave
nop
jmp
add
das
mov
add
and
clc
repnz
nop
nop
jae
adc
enter
rolb
repnz
nop
nop
jae
add
andb
mov
add
add
subb
add
test
clc
repnz
nop
nop
jae
outsl
xchg
add
add
stos
add
add
add
push
push
mov
xchg
ret
enter
add
add
add
mov
add
add
xorb
add
clc
repnz
nop
nop
jae
add
scas
iret
add
repnz
nop
nop
jae
add
add
inc
jae
clc
repnz
nop
nop
jae
add
addb
add
add
pushl
clc
repnz
nop
nop
jae
add
clc
add
add
and
clc
repnz
nop
nop
jae
iret
add
pop
mov
test
incl
and
popw
add
add
mov
add
call
nop
jae
addl
scas
add
arpl
pop
push
add
or
nop
jae
outsl
andb
add
add
add
cmp
repnz
nop
nop
jae
loope
dec
add
add
or
dec
clc
dec
inc
clc
repnz
nop
nop
jae
add
sub
fildl
sub
pushf
addr16
clc
repnz
nop
nop
jae
add
add
mov
xor
sbb
in
leave
nop
jmp
add
subl
add
add
add
push
mov
nop
push
mov
leave
nop
jmp
add
add
sub
push
mov
xchg
ret
add
mov
mov
dec
jmp
add
add
pop
push
add
adc
adcl
add
push
mov
xchg
ret
add
ss
clc
mov
insb
mov
fld1
clc
repnz
nop
nop
jae
add
adc
add
add
sub
and
cld
nop
nop
jae
add
add
je
add
clc
xchg
xor
clc
repnz
nop
nop
jae
add
and
push
mov
xchg
ret
cwtl
add
pop
add
add
sbb
sbb
xchg
rclb
or
addl
xchg
mov
add
add
add
push
dec
mov
incl
add
add
clc
add
roll
or
add
arpl
and
pop
and
push
mov
leave
nop
jmp
int3
repnz
xor
xlat
subl
add
add
add
push
push
mov
xchg
ret
add
pop
add
cwtl
mov
add
add
mov
xchg
ret
iret
je
cmpb
pop
add
adc
dec
mov
push
nop
push
mov
leave
nop
jmp
add
mov
outsl
and
mov
clc
repnz
nop
nop
jae
and
add
add
pop
push
lea
clc
repnz
nop
nop
jae
pop
fnsave
add
sub
je
add
add
clc
repnz
nop
nop
jae
mov
mov
add
mov
clc
repnz
nop
nop
jae
add
push
add
add
inc
sub
nop
jmp
pop
ret
fisttpll
xor
pop
add
add
push
adc
add
add
movb
loope
mov
add
add
add
std
sub
add
nop
jmp
xchg
add
scas
flds
clc
sub
add
add
cld
nop
nop
jae
jge
cltd
pop
add
dec
add
adc
xor
push
push
mov
xchg
ret
mov
enter
add
adc
outsl
popl
xchg
ret
add
add
add
sub
and
mov
push
mov
xchg
ret
das
add
and
mov
jno
add
add
add
or
add
arpl
sub
clc
repnz
nop
nop
jae
xchg
xor
add
add
add
sbb
add
xlat
push
add
and
mov
clc
repnz
nop
nop
jae
add
adc
add
add
outsl
xchg
jno
cli
clc
repnz
nop
nop
jae
arpl
mov
mov
add
add
add
mov
mov
inc
add
add
mov
mov
push
clc
repnz
nop
nop
jae
outsl
add
add
add
repnz
nop
nop
jae
push
xor
add
mov
dec
add
add
and
fld1
clc
repnz
nop
nop
jae
xlat
fldt
and
mov
mov
xchg
ret
sbb
mov
add
mov
xchg
ret
add
xor
xchg
sub
sub
jb
jne
clc
repnz
nop
nop
jae
add
add
add
stos
xchg
push
mov
leave
nop
jmp
add
adc
inc
jmp
repnz
nop
nop
jae
add
add
add
add
pop
icebp
mov
clc
repnz
nop
nop
jae
mov
pop
sub
inc
add
repnz
nop
nop
jae
repnz
mov
add
in
ds
mov
nop
push
mov
leave
nop
jmp
addl
orb
dec
push
clc
repnz
nop
nop
jae
add
add
adc
push
ret
adc
adc
nop
push
mov
leave
nop
jmp
int3
mov
ret
cmp
and
mov
xchg
ret
add
xor
add
sub
sbb
fistpl
nop
push
mov
leave
nop
jmp
add
add
fldl
pop
mov
xchg
inc
add
add
add
repnz
mov
nop
nop
jae
mov
add
loope
cwtl
add
out
stos
clc
repnz
nop
nop
jae
xchg
repnz
add
pop
dec
add
repz
clc
repnz
nop
nop
jae
sub
add
mov
mov
jecxz
les
push
mov
xchg
ret
add
add
add
add
mov
jg
inc
add
pop
mov
mov
or
jmp
nop
nop
jae
add
add
add
add
adc
mov
clc
repnz
nop
nop
jae
mov
outsl
add
add
pop
jl
add
clc
repnz
nop
nop
jae
add
xor
adc
mov
movzwl
clc
repnz
nop
nop
jae
add
add
loope
and
pop
and
nop
nop
jae
xor
add
add
pop
add
mov
xchg
ret
repnz
add
add
add
ret
push
mov
daa
inc
add
add
add
xchg
add
add
jne
clc
repnz
nop
nop
jae
adc
and
push
mov
into
popf
call
clc
repnz
nop
nop
jae
add
inc
add
push
add
iretw
push
clc
repnz
nop
nop
jae
add
add
iret
mov
add
add
sub
push
mov
leave
nop
jmp
add
inc
adc
je
icebp
mov
clc
repnz
nop
nop
jae
push
xor
add
add
add
loope
sbb
add
clc
repnz
nop
nop
jae
mov
xor
add
sub
mov
xchg
ret
mov
arpl
add
add
insl
mov
push
mov
xchg
ret
adc
add
add
add
add
adc
add
repnz
nop
nop
jae
frstor
add
pop
add
jne
mov
add
add
pop
add
add
add
fstpt
daa
daa
movl
pop
nop
push
mov
leave
nop
jmp
pop
cltd
add
add
add
add
repnz
nop
nop
jae
adc
add
add
and
div
nop
push
mov
leave
nop
jmp
ret
mov
sub
stos
pop
sub
clc
repnz
nop
nop
jae
fldl
movb
add
mov
jne
clc
repnz
nop
nop
jae
add
data16
add
inc
push
mov
xchg
ret
and
add
and
mov
mov
xchg
ret
cmp
cltd
pop
mov
jge
add
add
jmp
repnz
nop
nop
jae
add
das
clc
ret
add
repnz
nop
nop
jae
add
sbb
loope
in
cmp
clc
repnz
nop
nop
jae
add
add
xor
add
push
cmpsl
mov
clc
repnz
nop
nop
jae
pop
dec
adc
sub
xchg
clc
repnz
nop
nop
jae
add
add
add
dec
xlat
stos
clc
repnz
nop
nop
jae
fst
shl
cltd
rorl
es
add
add
leave
mov
clc
repnz
nop
nop
jae
mov
add
xchg
add
add
nop
push
mov
leave
nop
jmp
add
push
fildl
add
out
rcrb
inc
add
add
pop
add
add
fisttpl
ret
add
data16
add
movb
add
mov
add
idiv
imull
leave
nop
jmp
add
add
cwtl
ss
pop
add
je
call
clc
repnz
nop
nop
jae
sub
add
jge
mov
push
pop
push
mov
xchg
ret
add
iretw
add
sub
add
nop
push
mov
leave
nop
jmp
pop
add
iret
add
push
add
add
popa
push
mov
xchg
ret
cmp
push
flds
add
push
mov
push
mov
xchg
ret
add
cmp
or
add
addl
enter
add
add
mov
mov
add
add
pop
push
push
mov
xchg
ret
pop
add
das
add
sub
sub
add
scas
push
fmul
push
push
mov
xchg
ret
add
adc
and
xor
push
mov
leave
nop
jmp
inc
add
sub
fstp
add
add
clc
repnz
nop
nop
jae
sub
iret
adc
and
jo
add
nop
push
mov
leave
nop
jmp
xor
add
add
add
jg
xor
repnz
nop
nop
jae
pop
add
add
sub
nop
push
mov
leave
nop
jmp
jge
sub
add
insl
cmpl
nop
push
mov
leave
nop
jmp
add
push
fldl
add
scas
add
lret
xor
nop
push
mov
leave
nop
jmp
add
add
enter
movsl
push
clc
repnz
nop
nop
jae
mov
repnz
mov
test
nop
push
mov
leave
nop
jmp
add
movb
add
add
sub
repnz
nop
nop
jae
data16
add
add
out
arpl
jb,pt
nop
push
mov
leave
nop
jmp
add
add
add
pop
cwtl
mov
or
add
clc
repnz
nop
nop
jae
int3
add
sub
and
or
cld
nop
nop
jae
mov
add
add
das
fldl
nop
push
mov
leave
nop
jmp
add
je
mov
add
fdivrp
mov
clc
repnz
nop
nop
jae
add
sarl
out
rorl
mov
xchg
ret
add
and
mov
add
add
add
inc
sbb
movsl
xchg
inc
add
das
add
adc
dec
fld1
push
mov
xchg
ret
add
add
outsl
fcmovnb
adc
je
add
sub
push
mov
xchg
ret
sub
add
add
add
call
nop
jmp
add
pop
add
ret
cmp
nop
push
mov
leave
nop
jmp
add
add
add
mov
outsl
call
clc
repnz
nop
nop
jae
add
adc
add
clc
repnz
nop
nop
jae
add
mov
addl
mov
mov
xchg
ret
repnz
mov
add
add
call
nop
push
mov
leave
nop
jmp
mov
fxch
add
push
mov
xchg
ret
add
add
mov
add
cmp
ret
add
addw
add
sub
enter
push
mov
clc
repnz
nop
nop
jae
add
add
sub
mov
nop
nop
jae
add
add
pop
add
add
mov
pop
cmpsb
sub
clc
repnz
nop
nop
jae
add
inc
add
mov
rclb
jmp
and
or
adcb
decl
repnz
nop
nop
jae
loope
add
add
add
add
clc
repnz
nop
nop
jae
cltd
mov
sbbb
add
clc
repnz
nop
nop
jae
mov
add
jge
nop
push
mov
leave
nop
jmp
add
clc
or
add
pause
push
mov
leave
nop
jmp
mov
adc
sub
push
nop
push
mov
leave
nop
jmp
add
das
xor
pop
add
and
jne
clc
repnz
nop
nop
jae
add
outsl
sub
push
clc
repnz
nop
nop
jae
sub
fldl
inc
mov
cld
nop
nop
jae
add
stos
add
add
fld1
clc
repnz
nop
nop
jae
stos
inc
add
add
add
clc
nop
push
mov
leave
nop
jmp
mov
add
add
add
add
mov
leave
nop
jmp
add
or
add
add
pop
lcall
cld
nop
nop
jae
pop
add
mov
and
dec
imul
nop
jae
sbb
loope
add
add
mov
xor
cld
nop
nop
jae
int3
int3
add
das
sub
rol
push
mov
xchg
ret
loope
add
and
or
nop
push
mov
leave
nop
jmp
add
add
flds
add
cmp
repnz
nop
nop
jae
add
das
add
icebp
push
push
mov
xchg
ret
add
mov
cmp
push
outsl
ret
nop
push
mov
leave
nop
jmp
enter
or
add
incl
in
leave
nop
jmp
add
add
mov
iret
in
loopne
or
clc
repnz
nop
nop
jae
cwtl
add
add
fptan
add
repnz
nop
nop
jae
add
add
stos
add
nop
push
mov
leave
nop
jmp
add
int3
add
add
loopne
mov
xchg
lea
nop
push
mov
leave
nop
jmp
cltd
scas
repnz
pop
ret
add
iret
ret
shr
nop
push
mov
leave
nop
jmp
je
mov
add
add
ret
mov
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
add
mov
add
add
add
jmp
xchg
inc
add
mov
fldl
add
int3
add
repnz
nop
nop
jae
ss
ss
fnstsw
xor
push
mov
xchg
ret
jge
ret
add
sub
xchg
push
mov
xchg
ret
sub
add
add
cltd
mov
inc
add
clc
repnz
nop
nop
jae
stos
pop
add
mov
add
dec
clc
repnz
nop
nop
jae
add
adc
pop
add
add
push
mov
nop
push
mov
leave
nop
jmp
loope
outsl
add
in
xor
clc
repnz
nop
nop
jae
push
repnz
add
pop
xchg
pop
push
clc
repnz
nop
nop
jae
add
mov
mov
ret
add
fstl
repnz
nop
nop
jae
add
mov
enter
add
mov
clc
repnz
nop
nop
jae
add
ret
push
fstp
add
mov
and
repnz
nop
nop
jae
add
mov
arpl
push
mov
xchg
ret
addb
mov
xchg
xlat
ret
mov
push
clc
repnz
nop
nop
jae
pop
add
add
add
clc
fldl
add
clc
repnz
nop
nop
jae
and
enter
retw
mov
add
mov
movzwl
clc
repnz
nop
nop
jae
mov
add
add
mov
push
push
aad
add
add
repnz
nop
nop
jae
int3
mov
inc
push
mov
icebp
xor
push
mov
xchg
ret
and
add
fstps
lock
rep
push
mov
xchg
ret
outsl
outsl
pop
ret
add
add
sub
fld1
clc
repnz
nop
nop
jae
mov
or
add
mov
inc
add
add
or
mov
xchg
ret
mov
mov
repnz
mov
cmp
dec
push
inc
add
add
add
add
stos
xchg
insl
inc
add
adc
add
loope
rcrl
mov
nop
push
mov
leave
nop
jmp
add
and
pop
cmp
and
add
add
jg
inc
add
add
fildl
add
add
mov
mov
pop
push
mov
xchg
ret
cltd
add
mov
sub
jb
lsl
clc
repnz
nop
nop
jae
int3
add
xlat
mov
add
mov
mov
clc
repnz
nop
nop
jae
mov
clc
mov
push
sub
pop
test
xchg
ret
stos
dec
add
add
add
outsl
add
lea
clc
repnz
nop
nop
jae
add
add
xlat
int3
pop
cltd
dec
repnz
dec
mov
xchg
ret
add
mov
and
add
and
cld
nop
nop
jae
sub
cltd
add
inc
arpl
clc
repnz
nop
nop
jae
mov
add
addl
repnz
add
jmp
cld
nop
nop
jae
add
sbb
roll
add
les
repnz
nop
nop
jae
fisttpl
cmp
pop
dec
nop
push
mov
leave
nop
jmp
add
int3
cltd
das
and
push
add
mov
test
iret
clc
repnz
nop
nop
jae
add
add
add
xchg
scas
jl
clc
repnz
nop
nop
jae
add
sbb
cmp
fdivrl
jmp
mov
xchg
ret
add
add
sub
bound
fwait
clc
repnz
nop
nop
jae
add
add
add
sar
push
mov
leave
nop
jmp
mov
orb
xchg
adc
repnz
nop
nop
jae
pop
add
ret
and
sbb
pop
sub
cld
clc
repnz
nop
nop
jae
pop
add
cwtl
sub
shr
clc
repnz
nop
nop
jae
and
pop
add
xor
add
add
add
add
shr
push
mov
xchg
ret
add
add
mov
add
add
jne
clc
repnz
nop
nop
jae
add
fstl
mov
xchg
ret
add
add
mov
clc
repnz
nop
nop
jae
mov
clc
mov
add
add
iret
add
fwait
push
mov
xchg
ret
and
stos
add
add
xor
clc
repnz
nop
nop
jae
add
xor
cmp
clc
repnz
nop
nop
jae
pop
add
add
pop
scas
je
int
aas
fdivr
call
nop
jmp
push
mov
add
add
add
mov
clc
repnz
nop
nop
jae
scas
and
loope
fxam
lss
clc
repnz
nop
nop
jae
cltd
add
and
mov
jnp
inc
add
adc
add
mov
ljmp
add
mov
leave
nop
jmp
sub
add
xchg
add
mov
and
repnz
nop
nop
jae
mov
add
mov
nop
push
mov
leave
nop
jmp
add
subl
adcl
ret
nop
push
mov
leave
nop
jmp
mov
mov
fldcw
mov
xchg
ret
mov
adc
add
cmpsb
daa
push
clc
repnz
nop
nop
jae
pop
add
add
flds
cwtl
add
add
mov
push
mov
xchg
ret
scas
das
add
add
add
xor
nop
nop
jae
sbbl
add
mov
add
or
add
nop
jmp
addl
cs
dec
push
mov
xchg
ret
ret
and
adc
and
mov
and
sbb
push
mov
xchg
ret
add
add
add
sbb
add
les
add
add
mov
dec
hlt
insb
mov
fistpl
push
mov
xchg
ret
add
sub
add
add
call
inc
add
and
addb
fst
test
cs
push
push
mov
xchg
ret
add
add
cmp
nop
nop
jae
mov
add
das
jne
clc
repnz
nop
nop
jae
fxch
pop
add
mov
mov
xchg
ret
add
das
add
arpl
add
adc
insl
cmpl
nop
push
mov
leave
nop
jmp
add
inc
add
clc
repnz
nop
nop
jae
add
ss
add
nop
push
mov
leave
nop
jmp
and
enter
add
cwtl
test
xor
das
add
add
mov
nop
add
ljmp
nop
push
mov
leave
nop
jmp
int3
add
jge
sub
add
pop
xor
push
mov
xchg
ret
pop
push
add
add
rcrb
repnz
nop
nop
jae
add
fstp
add
add
ds
clc
repnz
nop
nop
jae
add
push
add
mov
mov
dec
mov
xor
nop
pop
sub
repnz
nop
nop
jae
cltd
add
testl
xchg
ret
add
int3
add
add
leave
add
nop
push
mov
leave
nop
jmp
mov
mov
and
pushl
nop
push
mov
leave
nop
jmp
scas
dec
add
add
orl
mov
xchg
ret
push
dec
outsl
add
add
pop
mov
aaa
mov
push
mov
xchg
ret
add
clc
sbb
scas
and
jmp
leave
nop
jmp
add
pop
and
add
xchg
mov
leave
nop
jmp
add
enter
scas
add
xor
xor
clc
repnz
nop
nop
jae
mov
mov
mov
repnz
nop
nop
jae
add
int3
xchg
mov
add
iret
nop
jge
clc
repnz
nop
nop
jae
mov
arpl
sub
sbb
add
push
push
mov
xchg
ret
add
add
ret
add
mov
pop
mov
clc
repnz
nop
nop
jae
add
push
add
mov
mov
clc
repnz
nop
nop
jae
add
clc
sbb
add
jbe
add
loope
lods
and
imul
cld
nop
nop
jae
clc
pop
mov
cmp
mov
cmpsl
push
clc
repnz
nop
nop
jae
add
add
add
add
mov
mov
push
sub
call
nop
jmp
pop
add
int3
sub
add
push
mov
dec
nop
push
mov
leave
nop
jmp
stos
mov
sbbl
add
add
je
clc
repnz
nop
nop
jae
je
mov
cmp
imul
incl
data16
adc
mov
clc
repnz
nop
nop
jae
add
scas
add
and
and
mov
repnz
nop
nop
jae
add
add
cmp
mov
cld
nop
nop
jae
add
add
add
sar
call
nop
jmp
xor
mov
mov
call
clc
repnz
nop
nop
jae
cltd
add
jge
add
not
clc
repnz
nop
nop
jae
add
pop
loope
add
cmp
mov
adc
repnz
nop
nop
jae
add
add
add
pop
outsl
pop
dec
add
add
ljmp
pop
push
push
mov
xchg
ret
add
add
inc
add
pop
pop
or
add
add
nop
nop
jae
scas
jge
push
add
adc
add
xchg
or
clc
repnz
nop
nop
jae
add
add
add
cwtl
mov
mov
repnz
nop
nop
jae
add
add
ss
add
clc
repnz
nop
nop
jae
adc
add
mov
mov
xchg
ret
add
inc
add
xor
add
add
scas
fwait
push
mov
xchg
ret
and
add
push
add
pop
mov
jne
clc
repnz
nop
nop
jae
mov
or
sub
negl
push
mov
leave
nop
jmp
add
mov
cwtl
or
push
ret
jb
add
nop
push
mov
leave
nop
jmp
sbb
je
add
add
push
mov
xchg
ret
enter
add
add
add
scas
pop
add
clc
repnz
nop
nop
jae
add
add
cltd
fisttpl
lock
sbb
repnz
nop
nop
jae
pop
adc
add
add
add
clc
repnz
nop
nop
jae
add
mov
ret
add
mov
xchg
ret
push
je
das
adc
jge
dec
lahf
mov
nop
push
mov
leave
nop
jmp
scas
and
and
jae
inc
and
push
mov
xchg
ret
mov
mov
push
clc
repnz
nop
nop
jae
or
subl
add
and
mov
clc
repnz
nop
nop
jae
add
add
mov
mov
xchg
ret
and
xlat
mov
add
adc
add
add
xchg
push
dec
add
add
loopne
out
add
push
mov
xchg
ret
sub
add
adc
cmp
lret
jo
add
add
int3
add
dec
outsb
mov
clc
repnz
nop
nop
jae
add
add
add
fldcw
andb
leave
nop
jmp
pop
add
add
addl
add
add
inc
push
push
mov
xchg
ret
cmpl
repnz
nop
nop
jae
add
arpl
add
add
nop
mov
je
clc
repnz
nop
nop
jae
add
add
mov
add
add
push
mov
clc
repnz
nop
nop
jae
and
scas
and
cwtl
xor
jmp
add
sub
clc
pop
add
mov
sub
mov
xchg
ret
pop
add
mov
das
int3
add
jno
sbb
clc
repnz
nop
nop
jae
and
add
repnz
je
or
pop
clc
repnz
nop
nop
jae
add
add
sub
sub
add
add
add
add
push
mov
add
arpl
add
add
les
add
pop
sub
xchg
pop
xchg
test
dec
std
out
fldl
cltd
adc
ja
mov
mov
ds
and
add
add
sub
fmull
xor
decl
pop
aam
add
add
add
add
add
lret
inc
shl
icebp
or
iret
data16
adc
add
int
ret
sbb
movsl
loope
mov
add
add
stos
shll
lds
hlt
loopne
mov
mov
add
add
test
out
lret
dec
ss
add
add
out
add
add
addr16
and
add
add
push
mov
loope
int3
mov
loope
dec
rolb
add
imul
in
roll
add
add
cltd
testb
int3
fistpll
mov
rorl
and
add
pop
dec
fcmovu
cmp
cmp
into
jecxz
inc
addl
mov
in
xlat
mov
scas
psubd
addr16
mov
mov
xor
int
orb
mov
insl
add
add
push
inc
mov
sub
mov
adc
xchg
lret
or
in
add
add
add
pushf
clc
lds
mov
sbb
cmp
ds
push
pop
jno
cs
insl
test
mov
inc
jl
sub
mov
dec
ret
sub
jb
xchg
and
add
inc
loopne
mov
mov
push
lret
add
xor
mov
add
add
js
jmp
enter
add
adc
mov
aaa
popa
test
enter
and
pop
adc
mov
sub
add
add
lock
aas
sbb
add
fwait
push
lock
xchg
pop
jmp
xchg
fwait
mov
and
lds
int3
repnz
fsts
jb
leave
ror
into
sbb
dec
ret
ds
mov
add
pop
outsl
mov
jle
sub
add
add
jge
pop
xchg
pop
jo
adc
lods
cmp
inc
mov
jns
mov
data16
mov
sahf
pop
jbe
or
sti
sbb
mov
add
pusha
mov
int
or
outsl
xor
or
xchg
daa
lea
mov
mov
adc
repnz
mov
test
add
add
add
add
mov
aam
push
cmpsb
xchg
and
push
pop
stos
cmp
fld
es
inc
jnp
push
add
mov
popf
push
jle
das
nop
pop
pusha
mov
les
lock
std
adc
popa
es
or
dec
ficompl
lret
sbb
out
push
inc
mov
inc
test
lfs
add
xorl
adc
mov
sbbl
add
add
lcall
cmp
jns
mov
cmp
add
add
add
add
lds
add
add
stos
push
andl
add
pushf
mov
or
sub
add
add
adc
xor
sahf
dec
addr16
or
je
sub
or
cmp
fdivr
pop
lods
lret
jmp
fistpll
add
push
divl
dec
add
out
ret
cmp
pop
stos
daa
out
cmc
inc
popa
mov
xchg
push
out
sbb
mov
push
fiadds
dec
stc
je
pop
pop
mov
sub
stc
enter
in
add
mov
imul
fnstsw
push
fadds
adc
xchg
movsb
fdivp
pop
inc
mov
adcl
adc
ljmp
or
add
jl
imul
mov
ljmp
lea
sbb
xchg
jle
scas
jge
push
xchg
scas
jl
mov
push
aad
and
add
mov
add
add
add
add
push
imul
rorl
add
dec
add
add
aad
xor
mov
inc
jbe
pop
push
cmpsl
xchg
divb
inc
mov
dec
sub
pop
movb
add
jnp
pop
or
ljmp
adc
ds
inc
xchg
sbbl
jle
sbb
loop
insl
sub
ljmp
fs
call
cmp
adc
clc
call
dec
jmp
mov
movsb
xor
jge
int
push
fidivl
add
add
das
mov
in
shlb
sbb
or
add
add
lret
mov
mov
sub
add
add
add
add
and
add
enter
jle
mov
je
rcl
pop
mov
xlat
xchg
add
daa
xor
mov
mov
mov
mov
add
add
add
dec
and
xchg
mov
add
add
sarb
xorl
popf
xchg
or
rol
xor
add
lds
dec
add
add
xor
push
in
xor
inc
scas
scas
sbb
mov
mov
add
mov
push
leave
pop
sbb
arpl
movsl
push
or
in
xchg
adc
pop
dec
add
add
mov
lock
mov
cltd
pop
mov
dec
xchg
and
add
add
hlt
mov
mov
lahf
fidivl
andb
add
add
movsl
xor
loopne
jnp
out
cld
ja
fcmovbe
cmp
push
xchg
mov
add
adc
mov
stos
daa
mov
add
add
test
push
push
inc
call
inc
add
add
mov
xlat
js
popf
mov
scas
or
add
sbb
add
add
jae
jmp
xlat
icebp
add
or
lods
je
dec
add
add
fcmovnu
and
add
add
and
add
add
loop
outsl
fstl
dec
pusha
add
add
fs
or
scas
push
push
mov
cmp
mov
mov
and
sbb
add
sub
bound
lret
add
add
cmpsb
push
movsbl
cs
lret
icebp
dec
call
dec
inc
ror
mov
in
nop
pop
inc
pushf
and
ljmp
add
popf
nop
out
sub
add
add
fadds
cwtl
inc
mov
cwtl
jg
push
loope
insb
add
add
xchg
or
add
add
add
push
cmp
add
shll
sbb
leave
add
add
dec
daa
sub
add
add
sbb
add
lcall
loopne
loopne
adc
add
add
add
add
add
leave
add
add
popa
or
cmp
add
sbb
mov
mov
int3
arpl
pop
sub
add
add
fsubrp
lods
bound
add
add
push
in
in
xchg
out
dec
add
add
aaa
pop
pop
sub
add
add
inc
push
mov
add
inc
cmc
sbb
sbb
daa
cld
xor
push
push
xchg
les
add
add
pop
mov
lcall
in
xlat
xchg
into
mov
out
xchg
xchg
add
fistpl
int3
imul
mov
add
es
xchg
out
je
push
push
and
add
add
scas
faddl
insl
je
loopne
inc
pop
xor
add
add
lea
mov
scas
add
nop
and
add
add
push
andb
add
cmpsb
pop
mov
ja
in
sbb
or
sub
cmpsb
insb
mov
ror
mov
or
add
add
testb
add
mov
stos
cmpsl
test
pop
loopne
mov
pop
aam
mov
add
add
inc
sub
add
add
adc
addr16
sub
add
add
movl
mov
adc
mov
xor
pop
or
add
add
add
add
inc
test
inc
push
push
loop
ficoml
ret
adc
scas
push
xorb
jl
and
cmp
lea
mov
sar
xor
ret
cmp
push
or
mov
sub
mov
add
add
aaa
sbb
insl
call
add
add
test
add
add
mov
add
add
add
add
add
add
in
dec
les
mov
pop
insb
add
add
mov
dec
add
add
out
gs
add
add
and
mov
sti
ret
xlat
or
add
add
dec
add
add
ss
jle
add
imul
int3
dec
aad
inc
jb
jmp
xchg
adc
shrl
adc
lret
cmp
mov
clc
cmp
mov
stos
gs
add
xchg
jmp
popf
pushf
or
add
add
sti
pop
inc
enter
mov
xor
cmpsl
lahf
push
flds
mov
enter
mov
mov
out
cmp
mov
add
and
cmp
icebp
add
adc
sarl
sbb
xchg
subb
pop
jne
fstl
cmpsb
leave
pusha
add
add
inc
pop
jo
orb
push
ja
in
ret
ds
and
loopne
xor
and
out
cltd
mov
cmp
xchg
and
imul
add
add
dec
lods
aaa
sbb
mov
cmp
pop
sub
lret
pop
outsl
push
or
add
add
add
add
nop
inc
pop
push
andl
or
xor
add
add
add
inc
cmp
add
pushf
mov
add
add
pop
push
in
mov
in
xchg
sub
add
add
sbb
cmc
daa
push
rcll
shll
add
cmovbe
adc
add
inc
mov
sub
sub
add
add
cmpb
mov
adc
pop
add
add
lcall
xchg
clc
rorl
dec
popa
mov
sbb
insb
mov
add
add
xlat
fcoml
inc
leave
enter
add
mov
flds
pop
cltd
push
sbb
pop
mov
stc
jo
data16
ds
sub
xchg
or
fwait
pop
sub
add
add
mov
cmp
jmp
add
add
jnp
lret
iret
repnz
add
lods
jo
out
mov
cmpsb
lods
insb
add
add
int
or
push
call
add
es
maxps
loope
pushl
and
icebp
dec
mov
into
fsubrs
mov
or
xchg
out
dec
add
add
test
push
das
nop
sbb
xchg
cmpsb
jg
pop
popa
fwait
orl
pushf
add
dec
mov
add
aad
popf
cmp
pop
test
lret
or
add
add
jb
push
pusha
mov
cld
or
dec
pop
xchg
arpl
sbbb
mov
js
pop
aad
rorl
jl
or
repnz
fisubs
add
push
mov
ja
mov
inc
add
add
imul
ja
mov
cmp
iret
sbb
add
lds
mov
pop
bound
mov
jns
pop
sahf
jbe
test
ljmp
add
inc
mov
lds
outsb
xchg
xor
add
mov
cld
iret
not
aad
jb
fsubrs
push
jne
xor
js
ds
mov
add
sbb
in
xchg
add
add
add
popf
sbb
jl
mov
mov
scas
jge
xchg
inc
mov
arpl
in
add
add
mov
adc
inc
pop
cmp
add
xchg
push
or
push
sbb
and
mov
stc
hlt
push
out
xchg
mov
add
loopne
jg
push
out
dec
pop
jnp
jle
rcll
mov
jg
insl
add
add
xlat
adc
cmpsl
fs
xchg
popf
xchg
mov
nop
xchg
test
add
add
add
fcmovbe
adc
clc
aas
lods
add
xchg
es
and
bound
inc
inc
cmp
add
add
add
out
icebp
fisttpl
stc
aas
das
insl
call
in
xchg
mov
jmp
clc
dec
mov
hlt
bound
lods
adc
aam
cmp
inc
ss
mov
xor
xlat
add
add
add
pop
inc
pop
and
subl
add
add
push
mov
pop
xchg
add
mov
adc
loopne
mov
xchg
jmp
mov
out
test
sub
add
add
int3
stos
enter
push
pop
je
aad
das
js
xor
dec
mov
sahf
sbb
pop
jmp
outsl
xorb
add
jge
xor
fwait
loopne
xor
add
inc
xchg
sbbb
jmp
push
cmp
shlb
xor
cmc
mov
clc
adc
out
mov
mov
lods
sub
add
add
js
call
fidivrs
dec
jp
add
add
add
dec
and
jp
push
out
fsubrl
dec
js
pop
sti
mov
jecxz
or
add
push
pop
rorb
fucomp
aas
add
add
xchg
lret
xchg
add
xchg
pop
sub
pop
add
orl
add
dec
inc
loop
xchg
inc
inc
aaa
cmp
fs
fcoml
or
add
add
and
popa
cmp
add
fdivr
lods
mov
mov
cmc
stos
xchg
repz
add
add
mov
rcll
dec
das
mov
xchg
add
lods
sbb
xor
hlt
inc
add
add
cmc
stos
test
aam
adc
dec
add
add
ljmp
sub
push
aam
add
add
dec
les
mov
and
pushf
jo
leave
ja
ret
insl
dec
mov
cs
add
aas
clc
imul
xor
shlb
mov
imul
mov
ficoml
jno
mov
add
lods
pusha
add
add
mov
loope
sbb
jmp
icebp
xor
add
mov
dec
fbld
push
out
fldenv
call
movsb
and
add
add
testl
add
add
test
lret
mov
jl
push
cmp
fsubr
aaa
les
mov
inc
push
pop
mov
mov
add
fadds
cli
jl
mov
movsb
sti
mov
inc
jmp
pop
dec
add
add
xchg
sub
sub
dec
pop
mov
add
dec
mov
testl
add
cs
add
add
subb
repz
dec
xchg
add
addr16
jl
scas
in
call
jo
popa
xor
cld
insb
mov
int3
lds
push
aas
movl
call
mov
mov
sub
or
add
add
icebp
repnz
xor
lret
adcb
icebp
dec
mov
test
push
mov
push
iret
mov
lock
and
add
add
cltd
call
jg
loop
arpl
inc
mov
test
cld
adc
shl
inc
push
mov
cmp
sub
add
add
and
xor
cs
add
add
hlt
pop
jns
push
dec
into
add
xchg
cmpsb
jle
cwtl
or
insl
loopne
das
js
mov
xor
jp
jl
test
test
and
mov
test
mov
aad
push
pop
das
ror
push
ret
popa
out
sub
outsb
inc
mov
xchg
out
mov
pop
clc
push
mov
test
adc
lret
test
out
out
adc
add
add
push
mov
je
loope
in
sbb
repnz
pop
lahf
mov
fs
ret
sbb
adc
loopne
mov
mov
scas
in
xchg
xchg
mov
sub
mov
add
add
test
pushf
xor
loop
mov
mov
mov
jp
fisttps
push
das
pop
fimull
sbb
sub
fbld
add
add
mov
xor
pop
cmp
cmpsb
jge
aaa
cmpsl
push
mov
das
mov
dec
mov
add
add
lods
cmpsl
pop
mov
adc
jbe
out
adc
mov
push
push
bound
stos
adc
xchg
fimull
add
add
and
mov
mov
les
icebp
cltd
add
add
add
mov
fistps
ljmp
shrb
add
sbb
imul
mov
aaa
lock
adc
mov
clc
xchg
add
add
add
add
add
mov
mov
mov
and
mov
push
mov
pop
lea
add
jns
mov
ss
scas
fistl
xor
aad
push
addr16
popf
push
pop
scas
pop
pop
and
daa
xlat
dec
addb
add
jne
sar
and
sub
fstpl
add
add
dec
fisttps
test
xlat
mov
sbb
lahf
mov
fisubrl
adc
sbb
scas
pushf
maskmovq
testl
mov
inc
add
add
test
test
mov
mov
cli
jns
adc
jg
lcall
sti
xchg
movsl
imul
cmp
sub
add
add
push
fbstp
hlt
or
xchg
add
xchg
ljmp
or
mov
pop
movsl
mov
push
movsl
sbb
xchg
mov
or
add
pushf
add
cmp
jae
add
push
sub
std
adc
push
jg
sbb
mov
fistpll
icebp
cmp
movsl
pop
cwtl
push
ljmp
add
sub
add
add
and
outsl
nopl
add
mov
add
add
mov
cmp
sbb
int
add
add
add
inc
and
add
add
mov
pop
int
mov
mov
ret
mov
lds
imul
repnz
jns
subb
and
add
add
adc
push
cmp
mov
mov
cmp
push
or
mov
add
add
mov
jb
sbb
adc
pushf
push
inc
mov
inc
mov
pop
push
mov
fdiv
inc
mov
daa
jbe
insb
add
add
adc
jp
lds
in
cmp
rol
pop
inc
jnp
add
add
add
lcall
push
jno
pusha
add
add
into
lcall
add
or
add
ljmp
cmp
push
je
aad
push
orl
add
int3
push
repnz
mov
mov
add
add
add
add
add
add
add
add
or
add
add
add
add
insb
add
add
mov
mov
sbb
cmp
sub
add
xchg
mov
cs
mov
lret
test
dec
add
lcall
jno
inc
mov
shlb
mov
inc
call
lds
add
push
and
and
xchg
push
mov
movsl
pop
pusha
mov
cmp
add
add
pop
out
mov
push
out
push
or
add
add
ret
sti
xor
pop
jno
mov
scas
in
xchg
xor
lcall
aas
jg
mov
ja
into
addr16
mov
mov
add
add
ljmp
rclb
jne
lea
add
int3
or
repz
addr16
data16
add
add
ss
add
add
push
cli
pop
xlat
cmp
dec
mov
inc
add
add
loopne
add
nop
dec
jae
cltd
dec
mov
mov
pop
xchg
inc
xchg
ja
cmpsb
fs
push
shlb
repz
add
add
out
jg
fisttpll
cmp
add
loop
xchg
inc
mov
add
add
clc
testl
insb
mov
add
cwtl
lahf
push
or
insl
mov
pop
mov
sbb
push
jne
xlat
inc
jp
mov
pop
mov
lock
mov
add
pop
div
jno
push
sub
lahf
push
les
or
add
add
dec
mov
nop
add
in
add
add
mov
sub
sub
add
jle
out
pop
mov
pushf
lcall
add
add
ja
mov
or
xlat
or
or
sbb
xchg
hlt
fsubs
jecxz
ret
out
jmp
rol
xchg
mov
add
add
out
mov
cmpsl
adc
mov
fimull
mov
jl
scas
iret
push
rol
out
outsl
jmp
jg
stc
xchg
add
add
mov
push
shl
loop
test
lahf
or
pop
cmp
jl
loop
adc
add
pop
cmpsl
cmpsb
loop
insb
add
add
pop
xchg
jae
and
push
sub
dec
xchg
sahf
sar
in
mov
add
adc
add
add
out
js
add
fldenv
fsubr
cltd
mov
arpl
add
pop
test
imul
push
sub
add
add
into
mov
aaa
sbb
pusha
add
add
mov
stc
mov
lcall
mov
lcall
std
pusha
add
add
add
loope
or
add
sbb
lahf
or
jne
cmp
add
sub
inc
faddl
jo
das
insl
mov
ss
icebp
dec
bound
loop
add
add
jae
loop
xchg
xor
popl
lea
push
lcall
cmpsb
movsl
lcall
mov
add
mov
stos
xor
leave
adc
andb
mov
mov
push
pop
jecxz
pop
jo
call
and
xlat
fnsave
add
add
imulb
push
ljmp
push
push
nop
fidivl
jne
or
test
pusha
add
add
push
sbb
push
sbb
lea
add
sub
addl
repnz
mov
add
add
andb
add
in
cmpsb
cwtl
in
jge
push
jne
dec
xor
push
jp
rorb
sbb
movsl
fcoml
stos
cs
sti
outsb
faddl
add
add
mov
jo
add
add
data16
dec
mov
je
ret
mov
mov
scas
inc
xchg
xchg
movsl
shrl
pop
sbb
lods
mov
daa
adc
add
mull
cmpsl
fstpt
add
stos
leave
popa
sbb
xchg
outsl
ffree
xlat
test
add
add
fldl
repnz
test
add
push
xchg
jne
in
stos
adc
pop
dec
pushf
cmpsb
mov
hlt
fistpl
lcall
pop
movsb
sbb
pushf
or
add
sti
push
add
add
add
mov
dec
add
add
jle
sbb
inc
fnop
shl
lcall
pop
outsl
stc
mov
xor
add
popf
dec
fcoms
aam
out
jmp
mov
inc
test
xchg
xor
addr16
xchg
ja
daa
adc
xchg
leave
fldcw
jp
sbb
add
jle
dec
mov
lods
mov
mov
test
fisubs
lods
int
das
leave
adc
fsubs
cli
push
sub
sub
add
add
lea
enter
add
add
add
jle
mov
aaa
add
add
add
pusha
add
add
sbb
xchg
sub
jl
popw
mov
add
add
add
ds
outsb
mov
je
push
outsb
shrl
test
pop
popf
xchg
fnsave
add
add
xchg
lods
int
and
add
add
inc
pusha
add
add
or
adc
xchg
hlt
idivl
orl
sub
cmp
daa
inc
je
sub
inc
mov
dec
cmc
push
cmpl
xchg
or
inc
mov
fsubs
movsb
loop
lods
push
dec
jnp
shlb
adc
fxch
mov
mov
leave
jge
push
andl
mov
mov
ds
push
shlb
pop
and
push
fisubrs
add
add
insl
xor
xchg
call
add
add
fisttps
push
inc
jns
rcll
hlt
jo
xor
mov
out
mov
xchg
sbb
imul
add
ss
jnp
mov
and
xor
mov
bound
sbb
dec
push
nop
stos
dec
mov
pop
sub
add
add
xor
scas
in
mov
add
add
mov
sub
adc
pop
pop
enter
add
add
and
mov
jno
ds
xchg
inc
mov
outsl
push
cmpsl
adcb
inc
mov
adc
inc
ss
inc
add
add
xchg
shrl
add
add
inc
xor
adc
add
add
mov
mov
mov
dec
and
and
add
add
adc
sbb
fs
mov
jns
cmp
pop
test
pop
adc
cmp
add
and
call
bound
ss
mov
mov
mov
push
cmp
add
pop
mov
add
add
add
cmp
xor
out
aaa
dec
mov
push
ljmp
mov
icebp
leave
jb
dec
rorb
out
mov
out
or
jl
dec
adc
leave
bswap
scas
mov
mov
mov
add
and
push
inc
fiadds
mov
mov
push
pop
mov
mov
mov
mov
add
sahf
out
xchg
ja
lahf
mov
orl
ret
lret
mov
mov
push
mov
push
mov
out
int3
aad
xor
stos
push
and
sub
outsl
jo
lds
add
add
pop
inc
jnp
xchg
add
pop
xchg
cmpsl
xor
mov
jns
jb
clc
cmp
add
testb
daa
pushf
jne
testl
mov
imul
jp
and
mov
pop
mov
addb
add
sbb
test
add
add
add
mov
loop
mov
je
mov
mov
xchg
dec
adc
in
loopne
cwtl
inc
add
add
shrl
mov
mov
lock
jne
add
stc
push
adc
loop
sahf
mov
mov
fwait
mov
repz
add
add
into
movsb
fbstp
add
enter
int3
lods
push
outsb
or
mov
stos
mov
pop
rcrl
ja
push
std
pusha
add
add
jo
ret
add
add
sti
xor
add
inc
add
add
pop
ret
push
jne
in
add
add
insb
add
add
xor
jge
pop
cld
pushf
cmp
xchg
or
add
add
insl
push
sbb
add
add
aas
aaa
pop
jl
jp
repz
fs
jmp
dec
cmc
dec
mov
aas
mov
jnp
add
add
pushf
cmp
dec
aam
dec
add
add
adc
test
lret
loope
ljmp
xchg
rol
add
mov
or
push
dec
sbb
sbb
mov
inc
cmp
inc
sbb
dec
pushl
push
int
stos
das
dec
insb
add
add
in
jp
imul
scas
cmc
add
pusha
add
add
iret
jae
xor
push
mov
idivb
jp
iret
add
pop
js
xchg
mov
int3
xchg
fs
cli
dec
cmp
nop
sub
jg
mov
dec
mov
bswap
jecxz
sub
add
add
inc
movsb
mov
add
add
or
arpl
addb
or
add
add
cmp
test
lcall
add
bound
sub
into
sbb
fidivl
in
imul
mov
mov
mov
and
add
pop
and
add
add
cmp
pop
xchg
mov
fld
inc
cld
push
push
or
add
add
loop
mov
adc
dec
loop
daa
dec
pushf
push
stos
jmp
pop
and
gs
add
and
add
add
xchg
ror
xchg
outsb
push
push
pop
gs
adc
inc
pop
and
imul
out
out
iret
jno
or
add
add
jnp
insb
mov
test
sub
add
add
xchg
cmp
mov
add
stos
adc
cmp
add
add
sbb
mov
cwtl
mov
lods
mov
add
add
jnp
push
sbb
lret
gs
mov
inc
push
fldcw
addr16
sub
loope
das
mov
mov
add
add
mov
in
fisubrl
sarb
gs
dec
mov
mov
add
adc
add
add
cld
jae
clc
pop
pop
push
cmpsb
xchg
cli
push
push
out
or
jbe
pop
cwtl
mov
add
add
loope
flds
enter
mov
lea
mov
movsl
push
int3
dec
add
add
dec
push
in
xor
cmp
inc
imulb
sub
inc
lea
das
cmp
cmp
inc
inc
dec
ss
mov
xor
test
nop
push
scas
adc
lret
or
add
add
inc
insl
mov
mov
mov
sub
xchg
pop
in
ret
push
mov
int3
add
and
adc
add
add
inc
and
add
add
test
mov
movsl
or
add
add
fdivp
nop
aad
pop
jge
cmp
subb
add
fistpll
and
add
add
jge
mov
shll
jae
jmp
out
rolb
dec
and
mov
inc
mov
leave
sub
mov
mov
imul
add
add
js
ss
nop
xor
lods
mov
call
stos
adc
add
add
xorl
imul
xchg
or
add
add
push
je
and
ss
fs
push
fwait
adc
hlt
push
out
jecxz
sarl
mov
add
add
ror
lahf
scas
jno
clc
ret
pushf
lods
push
or
add
add
mov
add
add
test
loope
add
add
pop
inc
or
jne
lcall
mov
jg
or
stc
adc
mov
sub
add
add
je
xchg
movsb
mov
mov
jno
negb
jl
add
add
push
mov
add
add
iret
insb
add
add
or
cmpsb
cmp
ljmp
ljmp
inc
push
mov
xchg
dec
add
add
mov
xor
mov
xlat
dec
add
add
xor
popa
push
cmp
mov
mov
in
add
add
add
cmp
jns
decl
xor
in
imul
and
or
add
add
mov
push
std
cmp
add
lock
cmp
add
add
jmp
dec
or
in
mov
jmp
mov
mov
push
pop
cwtl
scas
jns
aaa
and
push
imul
push
xor
and
rcrl
add
cmp
sbb
iret
jg
push
cmpsl
push
mov
cmpsb
add
cld
sbb
dec
mov
ficoml
rol
cmp
and
sub
out
add
add
mov
sub
add
add
and
rorb
add
add
add
inc
stos
inc
sub
sbb
push
sub
jle
add
add
dec
andb
add
mov
addb
jmp
jmp
sub
stos
xor
add
add
push
aas
lea
rcrl
push
cli
ret
mov
pop
outsl
mov
sbb
push
and
and
bswap
prefetch
xchg
testl
xchg
mov
sub
imul
stc
ret
sbb
fsub
enter
add
mov
xchg
jle
add
lret
and
add
sbb
mov
fnstsw
pusha
add
add
out
insb
mov
hlt
push
sbb
mov
lods
xchg
mov
push
dec
gs
mov
xchg
mov
mov
cmp
outsl
clc
jns
mov
pusha
add
add
xchg
fcoml
add
test
lods
mov
xchg
inc
lock
jns
xor
add
add
add
sub
sbb
inc
loop
data16
in
js
es
xchg
aaa
jecxz
dec
mov
pop
insb
add
add
inc
mov
xchg
loop
daa
call
add
pushl
inc
add
add
rorl
out
ret
fdivr
mov
aad
sbb
divl
push
cmp
leave
sub
add
add
stos
addr16
xchg
adc
xor
jp
cmp
mov
mov
sbb
sti
addl
add
dec
loope
and
sub
add
add
sub
add
add
adc
push
fwait
stos
inc
in
int
cmp
add
cmp
cmp
cli
imull
dec
add
add
xchg
fnsave
add
subl
popa
stc
leave
inc
xchg
mov
jo
xchg
cmp
jnp
repnz
cwtl
mov
call
add
xchg
lock
adc
sub
cmpsb
xor
add
add
add
cmp
sbb
test
add
add
mov
push
aas
notb
or
idivl
outsb
and
add
add
jns
pop
daa
mov
mov
jl
ret
pop
xchg
out
inc
rolb
aaa
sub
pop
jb
orb
mov
cmp
mov
stos
mov
inc
jns
xor
add
mov
ret
ss
aam
shl
add
add
pop
daa
popl
test
insb
mov
inc
xchg
mov
add
add
mov
push
nop
push
mov
mov
jbe
outsb
test
lcall
pop
nop
mov
add
cmp
add
xchg
shrl
call
cmp
jne
cmp
in
in
push
shrd
dec
shlb
mov
push
mov
ljmp
add
fbld
mov
loope
inc
mov
mov
scas
push
dec
inc
add
add
xor
jae
aas
es
sub
and
add
push
fnstcw
idiv
xchg
mov
out
adcl
xlat
sub
rclb
mov
insl
ret
mov
je
les
push
jmp
add
add
add
add
add
jno
adc
add
cli
inc
ret
bound
repz
into
jmp
lahf
add
test
push
xchg
pop
add
add
add
arpl
mov
and
add
add
pushf
dec
inc
sbb
jge
push
mov
sbb
push
cmp
bound
xchg
inc
popa
popf
and
add
add
add
add
gs
cmpsl
inc
mov
ljmp
mov
jb
es
mov
and
sbb
fyl2xp1
xchg
jp
ror
lret
push
cmpsl
outsl
fwait
push
adc
lret
cld
fbld
add
inc
pop
rcll
mov
sbb
aaa
or
add
add
test
add
jno
add
fnstenv
les
add
fisubs
push
pop
xor
xor
arpl
dec
cs
popf
js
roll
inc
add
add
mov
jno
sbb
std
jae
iret
int
or
dec
in
stos
dec
ja
jp,pt
shl
jle
bound
add
movsl
cli
push
sub
push
sbb
pop
pop
mov
mov
cmc
scas
xchg
das
adc
fsubs
inc
xchg
stos
mov
mov
add
add
sbb
imul
mov
jp
ficompl
fwait
in
sbb
jecxz
outsb
cmp
jne
sti
push
aas
mov
adc
movsl
xchg
mov
cld
dec
cli
pop
ret
fsubrl
cmc
cld
sbb
add
pushl
bound
add
mov
add
add
add
cli
adc
sbb
divb
gs
sub
dec
mov
dec
jbe
ljmp
lret
jae
shr
mov
pop
mov
outsb
out
rorl
aam
leave
sbb
loope
in
push
add
popa
aas
fsubrs
cmp
jb
add
add
popa
or
add
add
push
out
xor
fldl
adc
add
xchg
mov
inc
add
add
in
dec
scas
pop
shll
sub
add
add
cltd
test
ds
lret
sbb
aas
cli
cmp
inc
pusha
add
add
add
add
pop
cmp
loope
add
hlt
mov
aad
mov
add
add
into
pop
cli
sbb
add
pop
jne
mov
insl
jmp
loope
test
das
movsb
ljmp
push
add
imul
pop
repnz
mov
test
add
xor
pop
loopne
mov
xchg
aaa
stos
xor
pushf
sub
mov
jo
push
stos
loopne
incb
mov
xor
das
inc
repnz
mov
push
pop
add
sti
inc
add
add
xor
inc
test
sti
and
pusha
add
add
inc
sub
shl
add
add
out
and
add
and
cmpsb
push
inc
pushf
loopne
clc
out
adc
imul
sub
mov
bound
outsl
mov
add
add
jno
imul
push
sbb
pusha
mov
sbb
add
dec
add
add
pop
jecxz
mov
xor
out
dec
es
xlat
adc
ds
rorb
mov
dec
cwtl
sub
cmp
frstor
add
cli
ljmp
mov
xorb
mov
pusha
mov
jg
adc
xchg
xchg
push
jne
iret
test
xchg
cli
fstpt
das
inc
xchg
pop
jmp
aaa
sub
nop
stos
jnp
stos
mov
add
mov
add
sbb
mov
bound
jl
and
inc
add
add
in
sarl
mov
xchg
out
rorb
add
fcoml
andl
mov
ret
adc
add
add
aad
in
and
mov
add
add
mov
popf
xchg
xor
pop
inc
clc
mov
mov
aaa
inc
sti
cmp
jmp
out
shrl
adc
out
sahf
lods
mov
xorb
mov
add
add
jmp
enter
sti
in
ret
icebp
jae
or
add
add
sub
add
add
mov
sbb
push
hlt
loope
je
lcall
mov
xchg
xor
sarl
mov
add
les
dec
mov
push
addr16
insb
mov
jecxz
mov
push
mov
into
cs
js
rol
loop
leave
sub
fldenv
fadd
stos
mov
fidivrs
dec
ret
and
movl
jmp
lods
xchg
ret
frstor
sub
adc
mov
add
sub
mov
repnz
xchg
jbe
popa
push
hlt
sub
shlb
pop
mov
mov
jle
popf
sbb
js
xor
loope
test
in
mov
add
add
mov
in
pop
cwtl
and
add
add
dec
jo
mov
stos
push
or
and
jnp
mov
arpl
xlat
popf
push
nop
pushf
rorb
add
add
sbb
mov
xchg
int
dec
into
in
or
incb
push
cmpsl
jnp
dec
int
sarl
push
adc
lret
inc
out
mov
pushf
cs
test
testb
jecxz
and
jg
mov
movsl
and
cmc
push
dec
add
add
stc
vaddsd
or
sahf
in
clc
ret
jg
xchg
pusha
add
add
and
pop
pop
dec
add
add
lock
test
inc
jb
push
lahf
vmread
adc
out
dec
mov
add
loopne
inc
pop
into
lea
std
js
lahf
loopne
dec
fcoms
pop
js
out
jo
dec
or
call
fldt
loope
sub
add
add
into
jmp
sbb
jns
inc
xchg
into
dec
jp
mov
cld
xlat
lods
sub
rcll
test
add
add
fisubrs
push
lcall
add
pop
mov
stos
in
mov
mov
add
test
cwtl
ds
pop
sub
add
add
sub
pop
and
add
jns
or
addr16
mov
imul
add
add
push
scas
mov
add
fsubr
mov
bound
push
pop
sti
cmp
fildll
add
leave
rorl
sub
js
popa
and
add
add
icebp
inc
outsl
cmp
or
add
add
add
mov
mov
inc
add
add
xchg
insb
add
add
shll
lahf
cld
mov
mov
lock
or
add
add
int
imul
out
int3
pushf
push
cs
pop
pop
outsl
adc
jno
daa
outsb
je
push
dec
mov
mov
fs
rcrb
adc
popa
inc
add
add
xlat
sbb
in
daa
jns
clc
pop
dec
and
or
and
lahf
popa
xor
sub
mov
jb
mov
pusha
add
add
gs
cmp
and
sub
add
add
dec
loopne
push
int
pop
adc
push
aas
popf
jbe
shl
inc
ret
jns
jo
sti
sbb
shlb
ficomps
fxch
add
movsl
xor
call
dec
cmpsb
lahf
das
test
ja
mov
arpl
inc
mov
push
in
shrb
add
out
stos
sbb
add
add
loopne
add
add
add
mov
adc
pop
inc
mov
fsubl
mov
loope
push
jnp
ds
lahf
jns
mov
add
sbb
decb
gs
cmp
add
add
out
jle
jae
sti
mov
and
loopne
jbe
xor
mov
imul
add
outsl
push
mov
cmp
xor
nop
je
inc
jbe
xchg
loop
sub
mov
push
mov
clc
int
sar
pop
stos
cltd
insb
mov
jge
pop
out
or
lds
add
add
mov
lds
xchg
xchg
int3
mov
adc
jl,pn
or
jnp
sarl
iret
ljmp
and
ficoml
push
sahf
outsb
jo
fstps
jae
pop
adc
cmp
cmpsb
jns
xchg
add
add
mov
and
cmp
sub
mov
lahf
out
mov
icebp
push
add
dec
arpl
push
mov
dec
add
add
clc
bound
push
xchg
ret
pop
rcll
xcrypt-cbc
cmpsl
xchg
cmc
ror
in
pusha
mov
add
add
jmp
into
jle
and
cmpsl
leave
sub
pop
adc
lret
push
das
imull
les
or
add
add
add
and
shlb
add
add
daa
xchg
pop
lds
ss
mov
push
into
clc
shrb
jp
sarb
int3
jmp
mov
addr16
xor
add
cmpsb
mov
or
add
add
xor
test
cmc
push
sub
sbb
mov
stos
cmp
mov
scas
xchg
push
inc
dec
in
sbb
pop
fdivs
cmpsb
push
mov
add
add
outsl
mov
adc
add
add
add
inc
bnd
mov
add
add
add
or
sub
pop
sub
ss
sub
add
add
add
add
rorb
mov
ljmp
add
pop
in
add
add
imul
add
xchg
jg
add
add
mov
mov
mov
arpl
mov
jo
cmpsb
mov
mov
mov
lcall
and
scas
gs
cmp
inc
jg
pusha
add
add
or
add
add
in
fstps
push
cmpsl
sbb
mov
cltd
icebp
sti
mov
inc
jo
inc
cmp
xchg
mov
ja
mov
pop
in
mov
std
cmpsl
adc
pop
xor
outsl
leave
push
cmp
mov
dec
mov
xor
mov
and
add
add
mov
adc
add
jl
adc
in
xor
push
push
cmp
ljmp
rol
jbe
adc
test
mov
mov
add
insl
repz
mov
add
jne
cmc
dec
add
rcrb
aad
lahf
mov
das
lret
mov
mov
inc
pop
dec
fadd
mov
xchg
cld
mov
jmp
sti
mov
mov
and
push
arpl
xor
decb
jmp
add
add
rolb
push
inc
add
add
and
add
push
sub
push
xchg
add
add
add
add
sbb
cli
dec
lods
mov
mov
ret
fisubs
mov
add
sub
add
add
popa
mov
add
add
adc
popa
mov
int
stos
aas
cltd
nop
xor
inc
cmp
stc
iret
jns
fs
adc
mov
cmp
push
or
add
add
fisubrs
gs
lcall
cmp
add
sarb
and
add
add
andb
lret
add
add
add
add
int3
lret
cmpsl
dec
add
push
mov
add
add
add
idiv
jmp
add
sarb
push
xlat
xchg
and
push
xchg
aad
addr16
ljmp
push
fnstenv
daa
or
jb
push
fstpl
sbb
sub
mov
ja
fistpll
push
movsb
mov
cld
fwait
cmpl
sub
cld
xchg
mov
lcall
xor
add
add
sub
adc
or
in
pusha
mov
loope
pop
mov
test
mov
xchg
xchg
loopne
cwtl
xchg
subl
add
stos
jmp
inc
xor
sub
add
add
lahf
sarb
jo
jecxz
cmp
inc
dec
lahf
push
das
xor
sub
sbb
add
insb
add
add
pop
inc
add
add
adc
sub
add
add
add
adc
fisubl
mov
sbb
insb
mov
jno
xchg
ret
and
jno
dec
pop
in
rclb
mov
imul
add
add
add
mov
sbb
or
add
add
fs
fisubs
xchg
jge
ja
in
xlat
mov
add
push
push
inc
nop
push
xor
xor
add
add
cli
das
adc
mov
jl
lcall
lea
movsl
out
push
add
adc
add
mov
sbb
in
xor
in
inc
add
add
lods
test
xchg
shll
aad
imul
lcall
mov
xlat
test
in
mov
mov
jo
xor
test
sub
add
add
mov
jle
and
add
add
adc
repz
xor
lods
inc
xor
jmp
jle
inc
add
add
adc
lds
push
icebp
ds
pop
aad
mov
dec
mov
lods
add
add
add
add
add
rol
pop
test
clc
mov
push
loope
nop
ss
push
push
mov
pop
jle
sub
add
add
je
sbb
add
add
stos
lds
inc
dec
mov
add
jecxz
icebp
out
sahf
xor
jo
mov
jnp
mov
or
add
add
sbb
xchg
das
arpl
add
add
xor
mov
stos
lcall
xor
xchg
pop
es
aas
sub
sbb
push
ret
ja
loopne
lahf
jge
repz
push
cmpl
sub
add
add
int3
pop
fcomp
aas
insl
sbb
add
add
in
xchg
add
add
add
add
movb
add
aaa
push
popf
cmp
movsl
imul
cmp
mov
inc
add
add
add
fistl
pop
imull
mov
sahf
icebp
mov
jnp
lret
sbb
add
rcll
clc
xor
add
cmp
jmp
jge
mov
popf
add
add
add
pop
outsl
xchg
outsb
push
xchg
sbb
cmp
js
jg
roll
and
stos
call
cmp
and
add
add
enter
xlat
mov
nop
loop
daa
xchg
cld
adc
add
movsl
or
jp
outsb
mov
jecxz
mov
adc
mov
mov
repz
xor
add
stos
daa
xchg
andb
mov
fisubrs
add
das
pop
mov
jp
xchg
lea
mov
push
cmp
sub
add
add
jb
or
add
icebp
in
sti
idiv
mov
add
add
loopne
leave
pop
adc
xchg
daa
sbb
add
add
add
add
adc
add
dec
mov
loope
jb
push
imull
fs
push
ljmp
ds
mov
dec
add
add
ds
xchg
inc
xchg
js
mov
add
add
push
sbb
mov
mov
mov
mov
push
jne
mov
jo
add
add
adc
sbb
and
test
pop
xchg
fstpt
mov
inc
add
add
arpl
aaa
popa
xlat
mov
push
cmp
les
sub
add
add
lret
icebp
mov
xchg
mov
fimuls
sahf
ficoml
lret
scas
add
add
add
ljmp
aam
mov
fstpl
cmc
jne
jecxz
rcr
inc
mov
repnz
fmul
xchg
stos
push
imulb
ljmp
mov
dec
sti
fnstcw
xchg
jge
xchg
rorb
add
mov
lds
rolb
mov
mov
add
add
xchg
add
lds
xchg
outsl
int3
aas
xor
shr
movsb
int
or
cmp
hlt
adc
adc
xchg
stos
test
push
add
add
stos
enter
add
add
addl
add
add
xlat
push
outsb
leave
aas
dec
push
and
pop
in
jns
push
dec
add
add
sbb
adc
arpl
add
add
lcall
lds
sub
add
add
or
out
int
lahf
inc
push
out
test
mov
dec
scas
sahf
daa
jb
mov
and
stc
mov
mov
cmpsb
and
pusha
add
add
jle
mov
leave
jmp
sbb
outsb
test
xorb
xchg
jne
xor
add
add
stc
inc
test
jp
add
data16
inc
rcll
xchg
out
lock
jnp
or
int3
mov
or
mov
cmpsl
mov
mov
call
repnz
lods
out
pushf
xor
sbb
add
add
out
xchg
js
out
popa
push
mov
mov
inc
xchg
xchg
lret
sbb
inc
leave
add
cmc
jo
push
test
add
cmc
mov
ljmp
pop
or
add
aad
fldcw
push
dec
mov
pop
sub
add
add
sbb
in
pop
add
mov
xor
inc
clc
xchg
repz
push
sti
jecxz
xchg
add
add
add
mov
pop
rcr
dec
movsl
out
mov
outsl
imul
xchg
add
add
push
dec
add
add
add
jl
fidivrs
mov
xchg
and
add
add
or
mov
cmpsb
add
add
add
ja
cmc
into
lret
cmpsb
jle
dec
add
add
cli
xchg
lahf
mov
inc
mov
xlat
dec
test
cmpsl
jge
popa
xor
jp
sbb
pop
mov
xor
jns
lods
mov
in
test
mov
xchg
add
mov
sub
add
add
add
add
dec
dec
stos
ret
int3
xchg
mov
mov
iret
add
jbe
dec
and
cli
frstor
out
mov
popf
pop
push
cltd
sete
shlb
mov
xchg
inc
jnp
lcall
sub
clc
mov
add
inc
pop
inc
popf
in
mov
pusha
mov
pop
repz
scas
repnz
in
add
add
adc
repz
adc
fstpl
in
std
pusha
mov
sub
in
aam
scas
movsl
orl
stos
xor
inc
add
add
insl
mov
lcall
cli
hlt
ficoml
in
jne
mov
add
cmp
mov
repnz
push
out
test
inc
scas
push
mov
ljmp
clc
sub
cmpsl
push
pop
int3
mov
cmp
inc
add
add
add
mov
mov
pop
fidivrs
mov
add
add
fisttps
and
add
add
mov
jecxz
sub
add
add
cmp
imul
mov
out
jge
call
or
movsb
ret
stos
fwait
push
or
aad
and
add
add
call
add
ret
gs
jp
xor
out
or
scas
dec
dec
call
sub
mov
cmp
xlat
cmp
in
xor
add
add
push
adc
fsubs
jb
mov
mov
into
mov
and
test
sub
add
fnstenv
mov
add
add
adc
test
jmp
xor
add
add
pop
dec
dec
mov
pop
ljmp
add
lcall
adc
inc
popf
mov
add
add
pop
xor
out
pop
test
loope
lods
in
js
popa
cltd
cmp
lcall
gs
gs
xchg
dec
mov
popa
sarl
xchg
dec
xchg
dec
jge
nop
add
xor
or
add
add
ret
sbb
push
mov
and
cmp
add
sub
add
push
in
outsb
mov
adcb
fimull
gs
add
in
test
add
add
jecxz
sub
mov
ret
cmc
adc
negb
push
mov
add
cwtl
in
js
mov
pop
jb
xchg
test
hlt
mov
add
insb
mov
imul
in
and
faddp
lret
push
xor
mov
add
add
sub
add
add
pushf
addr16
and
add
add
cs
cld
xchg
lods
mov
in
cs
inc
sbb
mov
inc
cmp
xlat
arpl
mov
sbbl
es
and
push
mov
add
inc
add
add
jno
push
or
add
add
inc
mov
add
add
push
scas
pop
dec
das
mov
adc
pop
loopne
fdivl
and
add
add
stos
aaa
adc
rcrb
sub
dec
roll
mov
pop
xor
testl
add
push
jg
sbb
cmp
add
das
mov
xor
pop
jo
push
fldl
add
fsts
out
lock
adc
xchg
jns
sbb
aaa
jmp
sub
mov
pop
insl
add
pop
mov
jae
sub
add
add
pop
add
cli
xchg
xchg
test
out
xor
mov
out
pusha
mov
add
add
add
scas
and
cmp
add
inc
cmc
cmc
mov
mov
call
movsb
cli
xchg
lods
xchg
xchg
xchg
out
das
xor
sbb
mov
add
add
mov
add
add
push
fld
xchg
push
pop
adc
inc
fsub
jb
add
add
sbb
push
int3
sbb
outsl
jl
push
cltd
sub
xchg
push
das
jmp
aaa
fwait
push
mov
push
mov
add
mov
push
cli
inc
mov
call
insl
pop
xchg
dec
add
add
lds
ret
lds
dec
add
add
das
mov
jno
mov
jno
js
arpl
insl
mov
sub
add
add
add
pop
bound
rolb
add
add
push
pop
xchg
scas
outsb
mov
sub
xor
jl
int3
and
jbe
cmpsl
sbb
inc
inc
mov
cmp
out
mov
loope
sub
outsb
scas
cltd
push
inc
mov
cmpsl
add
xchg
adc
fcomps
and
add
add
add
add
out
hlt
adc
je
inc
xchg
add
add
add
push
push
es
push
inc
adc
xchg
stos
cltd
stos
out
rclb
add
sub
add
add
pushf
inc
decb
dec
add
add
xor
add
out
cmpsb
mov
outsl
adc
add
add
push
mov
int3
rolb
movsb
imul
insb
mov
cmp
mov
sbb
test
jg
pusha
mov
scas
jne
cmpsb
mov
mov
push
jl
xchg
jae
mov
add
add
lods
ljmp
dec
mov
aas
dec
mov
in
outsl
or
cmp
mov
inc
outsb
rcr
loopne
cs
mov
jmp
cmp
add
add
cwtl
int3
les
cmc
adc
inc
lds
add
add
xchg
push
test
adc
insb
add
add
scas
sbb
dec
add
add
push
test
nopl
add
add
xor
dec
mov
or
add
add
mov
mov
cs
push
loop
cmpsb
cmp
mov
ds
add
add
mov
pushf
insl
jp
clc
jne
mov
dec
cmp
and
add
add
push
pushl
adc
xchg
add
leave
roll
scas
movb
push
insb
add
add
int3
cs
test
insl
jecxz
bound
cwtl
xor
adc
dec
sub
pop
shr
notb
push
nop
fsub
stos
pop
or
add
add
aaa
jno
mov
out
sti
out
out
sub
add
add
sbb
shll
dec
mov
xor
dec
dec
mov
or
add
jo
dec
bound
pop
inc
mov
sub
out
sarb
add
add
fwait
sub
cmp
mov
push
add
add
sub
repnz
das
in
lea
ja
dec
jnp
imul
add
add
scas
xchg
and
inc
rcl
push
lahf
jnp
add
add
std
sub
lret
add
add
cmp
int3
aaa
incb
jo
stos
push
das
out
sbb
mov
aam
mov
add
add
cwtl
pop
push
stc
das
mov
inc
inc
repz
xchg
fucomip
jo
js
lahf
mov
add
add
lahf
mov
cmc
mov
inc
xor
push
xchg
repnz
insl
xchg
sbb
xchg
popa
gs
rcll
icebp
adc
add
aad
mov
adc
add
add
das
dec
add
add
jbe
jbe
repnz
pushf
hlt
fs
imul
scas
cmpsl
xor
mov
insl
jne
sub
fwait
xor
jl
add
add
xor
inc
xor
stos
loope
add
add
dec
or
jnp
adc
aam
cmc
pop
push
jl
test
push
pop
pushf
or
mov
cli
mov
and
and
mov
lret
incl
add
add
sbb
xchg
push
pop
cmpb
xchg
adc
add
add
or
add
add
sub
or
sbb
out
sti
dec
add
add
insl
lret
or
add
daa
leave
pop
test
mov
sbb
pop
pop
inc
movsl
or
mov
jle
add
add
test
xchg
mov
jle
rclb
in
clc
fists
pop
bound
in
and
repnz
orb
add
add
ljmp
mov
xchg
and
cmp
add
add
data16
insb
mov
imul
or
push
dec
movsb
ret
mov
or
add
add
aas
lret
or
add
add
add
fistpll
xor
mov
add
add
mov
push
hlt
mov
in
add
add
and
mov
daa
enter
test
aas
es
lds
bound
dec
add
add
fidivrl
push
xor
fwait
popf
sub
mov
popl
pop
sar
xchg
mov
or
ljmp
rcll
xor
aam
mov
pop
mov
cmp
stc
dec
idiv
push
and
add
add
pop
inc
fs
in
cmp
add
mov
xchg
lret
les
add
repnz
push
mov
add
add
adc
test
inc
dec
lahf
and
mov
adc
add
popf
movsl
jl
mov
leave
push
xlat
inc
push
push
nop
jne
xchg
add
divb
jnp
test
addr16
and
repz
stos
jl
lea
mov
mov
arpl
add
add
cld
cwtl
daa
pop
dec
mov
add
cli
add
add
add
inc
jge
adc
push
jae
jmp
push
push
or
mov
mov
lcall
mov
sbb
jae
movsb
mov
add
add
adc
add
add
add
mov
add
stos
mov
add
add
add
leave
movsb
or
add
add
js
jg
sub
dec
insl
add
add
sti
mov
add
add
push
scas
sarl
imul
jne
orb
add
add
add
dec
rolb
add
jae
inc
mov
xor
popf
xchg
push
dec
sbb
int3
lods
mov
cmp
fadds
aas
scas
in
xchg
out
jp
ja
adc
add
in
push
push
fisttpll
mov
sbbb
add
subb
or
add
add
and
jo
pop
repnz
inc
jns
loope
shrb
and
rdmsr
cmp
add
bnd
push
push
gs
pop
lods
cmpsb
mov
add
add
cmc
jb
bound
jo
fisubrs
mov
push
adc
fcomi
lods
rcrl
ljmp
insl
mov
cld
dec
adcl
cmp
es
cmpsl
imul
lds
xchg
xchg
and
dec
sub
mov
out
fwait
ja
dec
mov
out
aaa
mov
and
push
push
pop
sbb
insl
jnp
pop
dec
and
add
add
lds
pop
fstl
fisttpl
xchg
imull
add
add
pop
adc
add
bound
movsl
fmul
in
jp
xchg
into
xor
add
add
xor
loop
jne
jle,pn
ret
inc
dec
add
add
sbb
jns
xor
test
mov
iret
notb
xor
pop
mov
mov
shr
adc
jp
mov
xchg
xor
jg
cmc
out
loop
shrb
add
out
and
add
add
pop
or
lds
cmpsl
popf
push
notb
inc
dec
or
or
cltd
bound
xor
out
int3
xchg
sti
ja
add
outsb
dec
push
sti
daa
rcrl
pusha
mov
fsubrl
sub
add
add
xchg
sbb
or
add
add
dec
add
add
sbb
xlat
mov
push
jle
ljmp
dec
push
sarb
xlat
enter
push
lock
add
add
bound
loope
sub
mov
fisubrl
out
push
fdivrl
scas
cmpsl
mov
orb
jmp
cmp
notb
inc
adc
in
adc
xlat
stos
scas
jo
add
add
add
js
mov
xorb
mov
jbe
mov
data16
ljmp
xor
and
fs
add
add
cmc
js
adc
ss
and
lea
push
cli
insb
mov
cmp
mov
add
add
inc
or
sub
mov
test
mov
sbb
push
clc
fs
jg
xchg
xlat
int3
icebp
cmp
aaa
fcoml
fwait
cmpsl
pop
loope
scas
mov
jle
xchg
pop
icebp
push
loop
insl
ljmp
mov
add
add
sbb
outsb
cmp
mov
sub
iret
push
fiaddl
sub
pop
insl
pop
in
pusha
add
add
jmp
inc
add
add
pop
ficomps
inc
movsl
outsb
mov
xchg
push
adc
or
idiv
fwait
scas
xor
rcll
jl
insb
mov
ret
sbb
lods
pusha
add
add
and
mov
std
push
addl
cwtl
push
roll
add
pop
call
add
scas
es
lcall
adc
pop
pop
bound
rcl
lahf
ret
add
add
dec
mov
mov
rcl
hlt
sbb
mov
ret
hlt
aam
add
add
incb
add
add
xchg
push
cmp
int3
subl
xor
or
in
jb
mov
add
add
mov
das
repz
pop
cmc
mov
xor
ficoms
add
add
and
mov
adc
orb
add
add
dec
mov
pop
jp
lret
fisubrs
call
jbe
mov
dec
leave
in
stos
cmp
add
xchg
push
stos
mov
add
mov
mov
mov
or
add
add
and
add
add
ret
in
jo
mov
dec
daa
imulb
add
arpl
les
fdivr
fists
adc
popf
movsb
popf
mov
mov
in
mov
mov
mov
jmp
nop
lods
aaa
outsl
sbbb
cmc
iret
xchg
jg
xor
push
add
add
fstpl
add
add
sarl
mov
push
adc
mov
mov
clc
test
lock
xchg
pop
mov
into
leave
mov
sub
lock
cmp
sub
add
add
cld
mov
bound
push
sti
mov
inc
add
add
add
in
mov
add
add
js
movsb
into
push
jle
mov
loopne
jmp
dec
sub
mov
add
push
andb
add
add
sub
fs
mov
dec
imul
cmpsl
insl
push
out
jae
in
xor
dec
sbb
ss
sub
int3
pop
out
xchg
testb
icebp
out
sbb
es
jnp
adc
int
ja
aam
call
push
sub
add
add
imul
in
add
call
add
add
es
cs
int
nop
aas
aad
stos
call
pop
fadd
cwtl
das
mov
mov
mov
mov
add
adc
pop
mov
xor
cmp
xchg
cmpsb
sub
jae
sti
repz
shrb
lcall
add
repz
adc
pop
imul
mov
addr16
adc
mov
push
loop
sbb
cmpb
pop
movsl
cli
out
inc
jg
cmp
mov
sbb
loopne
mov
xchg
daa
cli
popf
out
aaa
cmp
push
jg
dec
push
xchg
xchg
push
movsl
scas
xchg
les
lds
ss
or
add
add
arpl
enter
add
add
insl
push
sahf
rcrl
cmpsl
lds
add
add
int
rolb
mov
mov
add
cmpsb
bound
add
sbb
or
fisubs
add
add
pop
repnz
sub
jg
push
pop
cmpsb
add
add
add
push
sti
pop
add
sbb
sub
add
add
xor
clc
adc
das
ret
lahf
cmpsb
jbe
fldenv
stc
leave
loope
sub
add
add
inc
pushf
lahf
test
adc
movsl
add
add
add
mov
outsb
mov
add
add
loop
mov
sbb
add
mov
pop
jae
jb
aas
inc
mov
cwtl
fbstp
add
add
pop
dec
or
add
add
mov
cmc
rorb
dec
sbb
xor
mov
test
add
add
xor
add
add
add
mov
jmp
add
sub
jnp
jle
in
push
outsl
inc
jne
xchg
mov
xchg
ss
call
adc
out
fs
lcall
push
mov
popa
mov
add
add
add
or
jb
test
loope
loop
out
mov
inc
aam
push
jno
dec
add
add
test
adc
fwait
pop
jmp
nop
pop
sbb
ljmp
fsubs
iret
mov
iret
ficomps
add
hlt
cmc
jl
adc
mov
jle
es
push
dec
mov
xor
add
test
push
mov
stc
mov
add
add
std
mov
in
sbb
fstp
pop
xor
inc
add
xor
pop
push
push
out
testb
add
ja
cmpsl
aaa
or
add
add
dec
inc
fcoml
mov
add
add
add
into
test
xchg
xlat
dec
cs
cli
enter
adc
insl
cmp
into
push
scas
pop
jmp
sti
fisubrs
mov
adcb
mov
divl
mov
adc
cmp
add
xchg
int
imul
test
dec
add
inc
daa
in
push
rorb
sub
add
add
push
cmpsl
cli
adc
popf
jg
cli
mov
out
bound
jmp
iret
daa
das
push
cmp
jnp
push
imul
add
and
add
add
pop
test
sbb
inc
push
loopne
pop
xor
shrl
pop
push
mov
add
int
movl
leave
push
les
dec
push
pop
and
dec
shl
in
xchg
ret
dec
mov
leave
je
jno
inc
mov
dec
mov
mov
lret
pop
xchg
inc
jbe
mov
mov
add
add
fs
inc
push
push
sub
xchg
sbb
xchg
notb
inc
shrl
call
cs
jg
add
add
in
aas
jns
icebp
mov
mov
ja
mov
pop
dec
and
add
add
xorl
xor
inc
xchg
dec
leave
xchg
cld
sarb
inc
add
lds
add
add
add
add
clc
push
cwtl
popa
dec
jge
mov
lcall
outsb
fcompl
int3
pop
add
add
pop
in
mov
fstps
aaa
stos
test
out
loopne
int3
fs
data16
repz
and
mov
mov
dec
mov
adc
lea
push
std
bound
jmp
jp
xor
pop
rorb
sbb
adc
add
add
dec
out
pop
or
add
pop
and
jp
fnsave
add
add
sub
add
add
mov
inc
add
add
add
or
movsb
xor
fwait
aas
sbbl
fisttpll
loope
mov
pop
shrl
ds
or
cmp
scas
pop
scas
cli
insb
mov
sub
add
add
and
nop
jle
push
jg
jle
std
push
iret
repz
mov
jne
shll
in
dec
cmc
arpl
cmp
movsl
aas
adc
outsl
movsl
mov
shll
add
cmpsb
inc
jae
idivl
xchg
orb
add
shl
pop
repnz
ficoml
sbb
dec
sbb
add
xor
mov
mov
aaa
xor
mov
xor
inc
out
out
push
or
outsl
push
push
xor
add
add
aas
cmp
xchg
cmp
mov
fisubrs
add
add
add
cmp
sti
or
dec
xlat
loopne
mulb
jg
xchg
cwtl
stos
stc
sbbb
and
add
add
add
add
int3
mov
adc
shll
jb
sbb
ret
fdivrs
lods
ja
ret
lea
fs
and
add
add
leave
mov
add
dec
test
and
out
iret
xchg
stc
loop
xchg
es
mov
xor
jle
push
jecxz
sbb
sbb
mov
jne
dec
sar
and
jle
inc
sub
out
inc
fsubp
adc
add
fidivl
addb
jmp
fwait
push
out
mov
add
rdtsc
xchg
ds
into
lock
mov
shll
call
imul
mov
test
mov
stos
out
aas
cmp
pop
pusha
mov
cmp
mov
add
or
and
add
add
roll
call
add
jg
sub
add
add
cltd
push
xchg
jecxz
notb
sbb
jmp
push
addr16
aaa
sar
es
sbb
js
pop
fsubrs
lods
inc
cmp
or
pop
jns
xlat
pop
sbb
add
add
fdiv
cmp
add
add
inc
or
cmp
mov
jecxz
lods
movsb
cmp
dec
idiv
pop
mov
add
add
mov
xor
test
add
decb
addr16
cmp
iret
mov
hlt
rcrb
mov
cmp
add
mov
or
mov
add
add
add
adc
push
sbb
fldt
add
les
jge
gs
out
fadds
push
inc
add
add
mov
mov
hlt
scas
in
movsb
sub
add
add
xchg
sub
mov
add
add
add
add
add
sub
add
add
test
dec
add
add
insl
fstpt
hlt
xor
add
flds
xchg
in
add
int3
and
add
add
mov
mov
loope
inc
in
lret
adc
inc
mov
addr16
push
jmp
scas
nop
ficomps
mov
int
adc
dec
inc
push
xchg
leave
ss
xor
cmp
into
cmp
or
add
add
ljmp
iret
sub
fnstsw
insb
mov
into
scas
or
add
add
push
dec
lea
sbb
pop
inc
mov
scas
or
push
leave
push
mov
xor
fimull
add
add
cmp
shlb
lahf
dec
lock
jle
xchg
fimuls
fisubl
iret
jae
inc
mov
or
add
add
mov
or
add
add
shrl
mov
cmp
stos
mov
std
dec
call
repnz
add
add
addr16
adc
das
stos
pusha
mov
loop
sbb
hlt
pop
cmp
adc
mov
iret
mov
dec
mov
test
add
add
out
insb
add
add
sahf
nop
sbb
inc
or
add
add
cs
mov
jno
push
lods
add
add
add
test
adc
add
push
popa
push
cwtl
or
dec
add
add
cmp
add
add
movsl
lcall
aaa
cltd
popa
fildll
jne
mov
jge
mov
push
cwtl
mov
leave
adc
fcmovnb
bound
dec
sbb
push
test
fstl
mov
add
shrl
jg
add
add
incb
add
add
insb
add
add
push
mov
push
sub
imul
mov
sbb
iret
in
sbb
push
fcmovbe
cmp
stc
imul
pop
iret
push
cmp
mov
add
movsb
mov
pushf
insl
ljmp
mov
iret
pop
movb
adc
ds
add
cmp
jne
xor
cli
adc
add
add
iret
dec
xor
mov
stc
xchg
cmp
jg
adc
aad
clc
out
mov
add
daa
addr16
add
inc
mov
lahf
jge
icebp
or
fisubrs
addr16
add
cwtl
fcoms
xor
xchg
xor
sbb
sub
add
add
pop
and
add
add
sbb
leave
jmp
push
mov
scas
mov
jg
add
add
xchg
or
xor
add
add
jle
mov
imul
inc
int
test
mov
ja
subb
sarl
aas
idivb
mov
fs
aas
push
mov
push
sbb
arpl
push
adc
lock
cmc
lahf
ljmp
mov
push
add
add
add
jns
jg
push
or
or
into
fisttps
out
mov
add
mov
push
es
add
add
je
call
int3
orl
add
xchg
dec
push
sbb
add
add
adc
inc
aam
test
jl
sbb
clc
dec
add
add
add
adc
aaa
xchg
fmull
lahf
leave
out
xchg
mov
mov
or
mov
xor
jbe
leave
testl
add
cmc
aad
cmp
add
cmp
das
aas
out
ds
inc
mov
cmp
jmp
xor
cmp
lds
loop
pushl
mov
pusha
mov
add
add
aas
or
fmulp
arpl
popa
mov
in
sbb
int3
cmp
xchg
mov
nop
mov
dec
lret
aas
in
cmp
mov
aaa
dec
or
add
add
jecxz
mov
sub
add
add
ljmp
clc
mov
js
ficoms
dec
jno
cmp
xchg
cs
mov
add
add
add
loop
shlb
adc
add
dec
xchg
jmp
imul
add
add
add
add
add
dec
pop
lcall
sbb
std
mov
jg
loopne
jle
outsl
mov
and
add
add
xchg
adc
rcl
adc
jno
adc
add
add
pop
sbb
les
jmp
bound
movsl
pop
cmp
movsb
cli
mov
add
add
jnp
inc
mov
fcmovbe
popf
shll
in
lcall
push
int3
lock
test
sbb
sbb
iret
inc
fsts
aad
in
pop
leave
test
sbb
mov
and
sbbl
scas
pop
daa
ret
or
pushf
arpl
adc
push
aad
je
dec
clc
fcom
sbb
push
icebp
int3
pop
inc
popa
movsb
int3
mov
add
add
xchg
lret
dec
add
add
insb
add
add
into
lea
aas
dec
mov
pop
add
xchg
or
lcall
inc
mov
lods
cld
sar
cmp
push
in
leave
dec
repnz
and
jne
dec
add
add
dec
mov
pop
pop
mov
mov
mov
and
add
add
xchg
xchg
xchg
inc
mov
int3
inc
movsb
sbb
add
add
add
add
int
and
push
cwtl
jnp
mov
push
rorb
lock
fucom
and
or
dec
add
add
sbbb
sbb
popf
mov
divl
cmp
xor
xorb
jbe
outsl
xchg
sahf
popf
ljmp
cmp
add
inc
adc
cltd
test
imul
mov
add
add
jo
mov
add
call
add
add
mov
pop
and
out
mov
add
add
and
jle
xchg
loope
dec
aad
clc
pop
scas
dec
mov
das
sbb
cmc
repnz
push
mov
pop
loop
inc
loop
lret
mov
mov
add
stos
cmp
xor
andl
add
and
adc
xchg
jns
xchg
jmp
sbb
aad
add
jge
xchg
adc
mov
jp
leave
outsb
dec
mov
stos
sbb
mov
mov
mov
mov
adc
jnp
xchg
mov
adc
iret
pop
ret
adc
adc
xchg
dec
add
add
push
push
into
nop
ret
scas
outsl
cmp
add
add
subb
xorl
mov
push
outsl
icebp
shlb
dec
mov
sub
add
add
in
cmc
adc
mov
nop
fwait
cwtl
outsb
push
jp
shl
mov
loop
xchg
add
pusha
add
add
push
pop
repnz
add
add
add
add
jae
sub
xor
jmp
cmp
loopne
dec
stos
mov
fsubrl
stc
sub
inc
xchg
sbb
test
and
add
add
jle
xchg
inc
mov
add
add
cmp
xor
add
mov
popa
movsl
lock
or
add
add
lods
mov
add
add
cmpl
insb
add
add
push
sub
pop
add
jg
add
add
add
outsb
or
add
add
jp
mov
add
add
addl
sti
inc
mov
imul
loope
jmp
pop
dec
mov
sahf
imul
add
and
or
add
add
and
mov
mov
and
lock
cmpsb
fbld
pusha
add
add
inc
mov
pop
pop
outsl
mov
dec
mov
adc
hlt
add
sbb
fldt
lods
ss
push
icebp
rol
scas
lds
dec
in
mov
jno
orl
add
jbe
cs
leave
call
add
add
add
add
add
or
add
add
lea
fnstcw
xchg
push
hlt
insb
mov
adc
add
add
jl
cwtl
or
add
add
inc
movsl
cmp
mov
inc
pop
xor
cmpsb
test
mov
in
or
xor
stos
pop
pusha
mov
movsl
add
add
mov
mov
mov
stos
pusha
add
add
jecxz
cmp
stos
xor
dec
dec
js
fidivrl
mov
cld
and
mov
mov
xor
push
out
stos
scas
mov
les
dec
xchg
mov
cmp
add
add
loop
add
add
jg
push
or
pop
add
xchg
mov
mov
sub
add
add
add
icebp
or
stc
dec
sbb
push
xor
test
aad
xchg
sbb
cmp
mov
lods
cmpsb
fwait
shr
subl
sbb
pop
add
imul
mov
jo
sahf
mov
pop
or
add
add
sti
cmpsb
sbb
in
lret
lcall
aad
pop
cmp
cmp
cltd
xor
dec
mov
dec
add
add
push
pop
xor
pop
and
fstl
loope
mov
dec
repz
mov
rolb
pop
popa
nop
out
jmp
mov
add
mov
add
push
xchg
jne
decb
jmp
or
sahf
hlt
div
test
aas
andl
xchg
out
dec
aad
xchg
cmp
dec
loopne
cmc
les
js
xor
add
add
sub
loopne,pt
aam
fidivs
mov
mov
mov
pop
repnz
cld
out
lock
add
or
add
add
scas
pop
je
addr16
scas
addr16
pop
loope
push
jl
inc
add
and
cltd
adcb
and
add
add
enter
cmp
mov
or
xchg
in
sub
jbe
xchg
out
cld
push
or
cli
roll
in
jns
in
jle
outsl
mov
enter
mov
out
andb
cmp
xchg
jbe
pop
mov
inc
adc
add
insl
pop
push
dec
mov
pop
jns
xor
lea
add
add
aad
mov
ss
cmpsb
data16
imul
lahf
pop
fwait
sahf
addb
and
inc
cmp
das
inc
mov
repnz
add
add
insb
mov
or
sub
add
add
xchg
arpl
in
cwtl
call
lret
add
add
push
adc
mov
add
lret
mov
mov
sub
add
add
inc
and
bnd
addr16
push
cli
xor
es
add
add
jae
mov
mov
sti
push
xchg
mov
pop
inc
adc
add
inc
mov
es
rcrl
mov
jp
dec
and
movsl
shlb
dec
dec
test
push
lret
add
add
pop
mov
or
mov
leave
xchg
popf
jbe
ss
jnp
sahf
sbb
sbb
jo
dec
inc
adc
jb
cmpsl
push
lahf
je
sbb
add
add
or
add
test
cmp
inc
add
add
dec
fnsave
mov
stc
mov
cld
imul
or
test
inc
ljmp
add
add
mov
jb
add
add
add
push
xor
imul
inc
cs
push
lret
xor
push
xchg
lret
xchg
adc
mov
in
arpl
outsl
sbb
jmp
add
add
fdiv
or
add
out
in
pop
js
hlt
push
popf
nop
shrb
sbb
popf
test
add
addr16
xchg
sbb
push
mov
lock
popl
cld
out
sbb
add
add
add
inc
sbb
rol
pop
sub
push
insl
lcall
lods
cmpb
sahf
je
aad
and
sti
les
shrb
jno
xor
imulb
add
ret
nop
sbbl
mov
xchg
push
pusha
add
add
inc
jb
lods
and
push
push
push
inc
inc
xor
mov
iret
shr
sahf
mov
dec
add
add
or
inc
pusha
add
add
sub
add
add
leave
std
jg
lock
cli
test
sbb
hlt
and
cltd
mov
lds
jge
ret
inc
add
add
test
add
add
push
insl
dec
add
add
jns
add
jmp
jo
dec
movsl
jnp
call
cmp
add
cmp
mov
push
mov
push
les
push
dec
jmp
out
cmp
fsts
fistpll
inc
loope
jg
repnz
pop
cmp
add
add
daa
mov
imul
inc
mov
lods
jecxz
sbb
jmp
mov
adc
pop
pop
ds
scas
lock
rclb
add
mov
popa
imul
mov
fistl
test
pop
iret
mov
inc
mov
xor
push
mov
mov
sub
add
add
add
add
stos
inc
add
add
dec
mov
add
add
add
fldenv
add
add
push
dec
xor
cmp
mov
adc
repnz
sub
lds
enter
xor
inc
push
rcl
fiadds
mov
adc
cld
mov
mov
mov
scas
adc
mov
std
adc
lcall
addb
add
add
push
lods
movsl
mov
cmp
test
dec
mov
repnz
adc
iret
es
loop
push
ficomps
add
add
subl
into
dec
je
lahf
lret
push
ss
jb
dec
jb
sahf
or
cmpl
mov
cmp
pop
pop
fisttpll
add
into
dec
mov
dec
lcall
in
dec
imul
es
sahf
or
add
add
add
jae
out
repnz
into
or
add
add
mov
dec
jae
sbb
mov
or
add
add
movsl
pop
mov
movsb
mov
and
test
add
das
dec
rorb
daa
mov
cmp
jl
inc
out
mov
mov
pop
cld
xor
add
iret
in
movsb
adc
mov
mov
imul
or
mov
or
pusha
mov
ljmp
add
xchg
or
add
add
les
or
and
push
xor
add
je
xchg
pop
mov
dec
jo
pop
out
push
sbbl
dec
mov
mov
jbe
add
add
add
jecxz
dec
jl
out
jg
push
pop
out
mov
sti
adc
sub
sbb
dec
cmp
out
mov
xchg
cmpsb
incl
ss
add
add
cld
cmpsb
xchg
sbb
sbb
jge
xchg
xchg
ljmp
sbb
xor
aam
mov
repz
and
arpl
les
xor
stos
pop
adc
sbb
pop
jge
mov
mov
in
xor
mov
outsb
ds
add
add
lds
inc
mov
mov
add
add
loopne
and
add
add
jg
inc
call
dec
out
into
push
mov
cmpsb
dec
out
sbb
xlat
ror
sbb
push
scas
xor
subl
xchg
ljmp
sub
add
add
fistpl
add
jge
lock
cltd
sbb
mov
lds
popa
outsl
pop
push
mov
sub
add
add
aaa
sbb
add
setne
mov
faddl
mov
xchg
or
pop
aas
dec
dec
aam
mov
xor
enter
jae
pop
xor
cmpsb
sbb
loopne
daa
scas
in
inc
test
incl
add
add
add
lock
cmpsb
or
scas
bnd
scas
out
cmp
clc
jp
ret
add
add
test
pop
sub
add
add
mov
sub
add
add
outsb
pop
vmovsldup
addr16
aaa
das
lea
add
add
jns
mov
lods
xor
in
push
xlat
stos
xchg
lahf
mov
ret
add
add
adc
andb
add
dec
icebp
in
or
add
add
out
adc
mov
jno
dec
ret
or
inc
push
jbe
lock
push
out
push
jo
or
fiaddl
add
add
addr16
mov
mov
mov
mov
inc
je
idivb
mov
pop
inc
mov
inc
mov
leave
dec
notl
nop
pop
xchg
bnd
dec
mov
pushf
lock
movsb
jle
inc
jmp
icebp
lret
add
add
xchg
mov
bound
add
aam
daa
pop
mov
add
add
fwait
out
jmp
mov
stos
and
and
fwait
mov
rcl
cmp
stos
sbb
sahf
sti
movsb
ljmp
movsb
lea
push
mov
mov
mov
dec
jcxz
pop
inc
loopne
or
sub
add
add
lret
xor
xchg
bound
xchg
inc
jns
insl
cmp
adc
add
adc
hlt
mov
pusha
mov
ss
insl
imul
pop
jg
inc
inc
out
dec
mov
cmpsl
push
loop
xchg
cltd
loope
or
mov
sbbb
xchg
inc
call
mov
repz
dec
mov
mov
sub
xchg
ds
xor
add
add
loope
pushf
fcompl
dec
add
add
cmp
xchg
movsl
fmuls
xchg
pusha
mov
test
into
mov
cmp
addr16
lcall
mov
add
fisttpll
mov
xlat
mov
test
mov
add
pusha
mov
in
rcrb
push
xchg
jae
inc
rol
and
out
pusha
mov
sbb
mov
sahf
fadds
jmp
and
fstpl
loopne
jo
mov
stos
in
notb
or
xor
adc
add
inc
sub
and
add
add
push
rcr
cld
sub
int3
xlat
aad
into
das
push
fdivl
cmp
and
add
add
add
and
cwtl
jle
mov
jno
sub
rorl
orb
add
add
add
sti
aas
in
mov
add
mov
ficoml
cwtl
push
insb
mov
pop
scas
or
mov
shrb
stc
movsb
andl
or
add
add
jbe
mov
and
add
add
subps
xchg
add
add
sbbb
lds
add
in
sub
mov
fistl
jne
push
icebp
loope
mov
add
add
add
add
jmp
hlt
xchg
orl
into
mov
and
pop
lret
sbb
adc
stos
in
into
xchg
dec
scas
notb
outsl
jle
push
mov
dec
mov
outsb
roll
cmc
adc
mov
movsl
or
mov
arpl
add
cli
sub
in
xor
pop
decl
mov
add
add
pop
mov
xor
add
lahf
add
cmpsl
jge
pop
jb
push
pop
inc
sub
repz
add
add
add
add
add
push
xor
push
int3
sub
cwtl
in
and
xor
das
out
jnp
sbb
subl
hlt
int
addr16
dec
add
add
adc
cmp
gs
lds
add
add
pop
or
and
aam
jnp
jb
mov
pop
insb
add
add
cmpsb
ss
dec
ficomps
lds
sbb
and
jge
sbb
dec
mov
sub
or
xchg
gs
push
data16
jne
mov
add
add
add
add
pop
inc
lds
mov
sub
clc
repnz
pop
add
add
add
pop
imulb
add
add
sahf
jb
sahf
inc
cmc
cltd
aam
push
pop
data16
das
sbb
add
or
jbe
add
add
es
lods
adc
mov
add
sub
add
add
into
or
sbbl
add
add
add
and
add
enter
subl
xchg
xchg
daa
mov
adc
sbb
lret
inc
push
clc
mov
add
add
lcall
mov
out
or
adc
push
int3
inc
add
add
inc
xchg
subl
or
and
and
mov
lea
xchg
inc
pushf
imul
mov
mov
add
add
mov
xchg
pop
dec
loop
inc
push
data16
adc
mov
pop
outsl
dec
jp
mov
negb
mov
pushl
jo
sbb
adc
or
loop
sbb
aam
xor
fiaddl
add
add
add
add
inc
mov
sbb
movsl
or
ja
add
add
pop
out
inc
mov
mov
jno
int3
ficompl
pop
bound
cmp
inc
mov
push
call
pushf
push
int3
inc
mov
in
leave
scas
add
add
xorl
add
add
out
hlt
leave
test
push
dec
dec
or
add
add
mov
add
add
cmp
aam
add
jecxz
pop
lods
add
xor
add
add
pop
sub
sbb
add
scas
xchg
dec
xchg
mov
mov
pop
ja
cld
fisubl
movl
jg
cmpsl
in
pushf
inc
sbb
mov
add
add
push
imulb
mov
mov
add
jae
imull
inc
add
add
movsl
cmc
ja
xor
xchg
pop
xor
add
add
stos
ljmp
sub
mov
scas
or
push
xchg
add
add
xor
pop
hlt
and
add
add
push
scas
jg
xchg
sbb
lcall
add
inc
xor
or
add
add
mov
mov
add
add
pop
rcl
in
pusha
mov
lods
push
pop
and
add
add
cmp
cmc
xor
aad
xchg
jecxz
add
cmp
in
cli
addr16
jae
xchg
lret
add
add
add
lret
push
lcall
idivb
add
add
add
fsubrl
outsl
adc
add
mov
jge
add
add
scas
cltd
jl
xchg
das
insb
add
add
cs
pop
in
sbb
and
add
and
add
add
mov
lcall
mov
jmp
loopne
gs
mov
add
add
dec
jmp
adc
mov
cmp
cld
dec
lea
gs
insl
aas
scas
dec
add
add
dec
sbbb
adc
loop
popa
es
testl
mov
add
add
sbb
fisubl
inc
jmp
sub
mov
int
jnp
js
mov
cmp
push
mov
add
add
movsb
es
das
lods
dec
aaa
outsb
mov
orl
fisubrs
negb
std
out
js
or
mov
jl
pusha
mov
cmp
aad
nop
xchg
mov
push
out
dec
or
add
add
dec
mov
or
mov
enter
stos
xorb
pusha
add
add
imul
sub
lahf
lahf
mov
or
mov
add
xor
scas
in
sub
dec
push
test
hlt
flds
mov
popf
xor
mov
jno
inc
jg
out
or
xor
push
jl
movlps
add
add
aaa
cwtl
sahf
xchg
add
add
es
lods
push
outsl
or
and
add
add
adc
adc
add
add
add
add
and
and
stc
negl
pop
mov
sbb
xchg
pop
mov
test
ss
fs
fiaddl
stos
or
add
add
xor
push
cltd
fdivrs
xchg
sbb
jmp
or
and
add
add
int3
cld
insl
rcl
push
cmc
sbb
ljmp
into
lds
inc
mov
orps
add
add
jmp
add
push
test
push
and
add
add
cmp
mov
push
pop
sbb
shl
addr16
dec
mov
jp
hlt
push
aam
mov
push
in
cmp
lods
std
jns
fcmovne
mov
jp
mov
mov
movsl
outsl
xchg
jo
in
nop
pop
pop
jg
test
add
add
fs
mov
cltd
pop
jne
add
add
pop
adc
add
sarl
mov
ds
jb
out
out
data16
lods
cmc
lret
cmp
xor
sub
les
adc
inc
xchg
dec
push
ret
inc
cli
je
jl
ret
scas
mov
mov
add
add
popa
jno
popf
adc
push
test
add
add
cmp
pop
adc
shlb
add
add
pusha
add
add
stc
sbb
add
add
pop
lahf
adcb
cmc
xchg
inc
rorl
mov
jmp
inc
mov
pop
clc
cld
xchg
pop
out
loop
sub
add
add
jno
in
ret
ror
js
jge
mov
push
inc
mov
aad
and
pop
dec
push
sbb
mov
push
loope
cwtl
int3
fs
push
push
and
add
add
data16
jg
cmp
cmp
add
pop
sub
add
add
push
sub
add
dec
fsubs
mov
jno
add
add
les
mov
jge
jno
ret
adc
in
mov
fadd
hlt
leave
gs
rorb
add
add
jle
daa
mov
push
jle
jg
pop
cmc
and
add
add
mov
push
mov
in
pop
out
pop
sub
xor
add
add
stc
mov
add
jmp
add
jbe
rcrb
push
mov
mov
lcall
ss
dec
cmc
dec
sbb
and
cltd
xor
insl
mov
push
cmc
cltd
stos
inc
arpl
aas
das
and
sbb
lea
pop
push
pop
rcrl
loopne
das
cmp
outsl
fcoms
or
cmp
or
add
add
ds
jg
and
add
add
jecxz
ds
fisubrs
add
add
cmp
cli
jo
dec
jp
push
test
add
push
sbb
push
repz
cs
mov
ds
pop
sbb
fdecstp
mov
add
add
xor
jo
addl
add
loopne
add
cmp
mulb
pushf
rorb
fiaddl
repnz
jne
mov
add
add
add
push
cmp
add
mov
fsubrs
aad
add
add
test
cli
sbb
mov
dec
mov
adc
add
pop
mov
xchg
div
shrb
add
add
repz
xchg
sub
add
add
push
pushl
loopne
mov
inc
mov
ja
dec
fsubl
add
adc
mov
pop
sarl
js
dec
xchg
inc
inc
pop
leave
jecxz
es
insl
cwtl
in
sub
aaa
sub
add
add
cmp
inc
mov
mov
pop
bound
sbb
scas
jnp
jae
add
add
test
scas
dec
cmp
les
mov
push
push
jae
push
mov
aas
out
pop
mov
xchg
pop
add
xchg
or
add
add
mov
xchg
mov
mov
jns
or
add
add
add
add
lret
push
mov
subb
repz
stos
mov
adc
lcall
aad
mov
pop
dec
testb
lahf
lcall
add
add
xchg
leave
jmp
lret
add
add
cli
jae
adcl
inc
dec
sub
add
add
mov
movsb
cmpsb
js
mov
aaa
bound
int3
push
cmpsb
sbb
pop
scas
bound
arpl
jns
adc
add
add
cmp
jae
mov
popa
mov
xor
movsb
in
add
add
lods
inc
dec
xor
adc
xor
repz
repnz
push
cmpsb
scas
mov
inc
into
pusha
mov
clc
jne
icebp
nop
test
add
insl
leave
dec
jno
pop
adc
sub
jnp
push
mov
pop
test
sbb
cmp
ds
pushf
mov
ret
adc
aam
add
and
add
add
sti
inc
cld
sub
rclb
mov
aam
subb
add
add
int3
jo
sub
mov
add
add
sbb
mov
lret
jnp
scas
jp
pop
mov
loop
data16
pusha
add
add
xor
mov
xor
inc
paddusw
push
jge
mov
mov
inc
push
adc
sbb
inc
add
add
jno
mov
or
andps
add
add
xchg
lcall
mov
pop
in
push
fnsave
inc
jmp
cmp
add
in
add
cmp
movsb
mov
fs
mov
mov
ret
mov
mov
leave
fbstp
pop
adc
pusha
add
add
out
jo
divl
popf
gs
and
decb
lock
add
shl
ret
out
mov
jle
dec
xor
push
dec
mov
out
cwtl
test
shll
add
addb
ljmp
add
cmp
leave
sti
mov
mov
cwtl
sbb
xor
aaa
scas
mov
or
jmp
or
add
add
pop
mov
sti
enter
movd
imul
fisttpl
lcall
mov
add
add
sub
add
add
xchg
lds
push
repnz
shll
jp
mov
add
add
jp
add
add
add
dec
mov
pop
insl
pusha
mov
jo
test
adc
mov
testb
add
add
inc
or
pop
test
aaa
in
jnp
sarl
fucomp
dec
ret
pop
test
mov
add
dec
cmp
jne
imul
sbb
add
add
cmp
cmp
jle
xor
mov
jb
lods
arpl
xor
cmpsb
or
iret
scas
inc
xlat
xor
cmc
mov
cmp
mov
adc
adc
ds
outsl
or
mov
add
cmpsb
nop
pop
adc
enter
dec
mov
add
add
add
sub
sahf
pop
insb
mov
or
add
add
adc
push
add
add
add
xor
adc
xchg
sbb
adc
cmp
add
add
je
popa
inc
arpl
dec
sbb
xchg
add
push
mov
aas
scas
and
add
add
lahf
pop
and
sbb
add
loopne
ficoml
gs
sub
add
add
hlt
lret
add
add
jle
test
gs
imul
add
add
pop
mov
and
dec
aaa
sbb
cmp
mov
jns
xchg
inc
mov
mov
cmpsl
add
add
scas
xorb
add
mulb
cli
outsb
adc
andl
insl
out
or
cmp
add
out
push
sbb
imul
dec
mov
adc
mov
bts
mov
inc
je
cwtl
stos
lds
add
add
add
add
incb
add
aad
add
add
add
add
jmp
inc
mov
leave
imul
in
add
aad
add
add
push
xchg
in
mov
ss
xchg
imul
bnd
adc
adc
and
mov
pop
push
bound
mov
lcall
push
mov
mov
pop
xlat
ds
out
out
sub
add
add
push
movsb
inc
pop
sbb
and
add
add
adc
add
sub
add
add
rolb
mov
rol
or
test
pop
cmp
and
ret
add
add
ljmp
add
add
jne
rclb
pop
sub
notl
jns
sbb
je
out
dec
jno
add
add
mov
xor
add
add
pop
jb
jge
mov
mov
lock
jge
mov
fsubrl
sub
add
cmpsb
mov
push
sub
add
add
popf
dec
lea
shl
hlt
inc
lahf
rolb
in
sahf
cmp
pop
inc
mov
mov
lods
push
inc
push
bound
jmp
adc
and
add
in
xchg
test
xchg
adc
cli
outsb
adc
mov
add
add
cmp
icebp
add
int3
aad
clc
shl
sub
ljmp
mov
scas
inc
sub
add
add
aaa
inc
mov
adc
adc
add
mov
adc
pop
fbld
cmp
pop
sub
add
add
fdivs
inc
or
test
sub
add
add
add
add
pop
and
mov
cmp
imul
movsl
into
mov
std
jns
shl
sbb
in
lret
or
add
scas
dec
mov
mov
add
jnp
mov
loop
pop
inc
jle
scas
rcrl
call
add
add
add
add
rorb
clc
mov
jecxz
enter
arpl
dec
stos
fld
pop
sbb
enter
mov
ja
mov
push
push
mov
test
ret
xchg
insl
mov
fstpl
mov
bnd
mov
add
fs
cmpsb
sbb
mov
or
les
dec
cmp
mov
test
adc
lret
sub
in
or
cmpsb
mov
add
lahf
ficomps
add
add
leave
xor
lcall
xchg
insl
bnd
cmp
lret
and
lahf
pop
outsb
je
add
cmc
das
adc
push
es
xchg
fcomps
adc
lock
scas
dec
ret
push
xchg
and
test
stos
push
and
pushf
lcall
rcr
movsb
mov
adc
add
add
add
pop
lret
sbb
pop
cmp
adc
push
das
scas
idivl
ficoml
in
out
jl
repz
fisttpl
stc
xchg
jmp
or
cs
mov
mov
subl
data16
sarl
xchg
xor
jmp
sub
testb
add
js
xchg
lds
lahf
dec
mov
mov
push
pusha
add
add
repnz
scas
fistpl
and
add
add
lea
mov
adc
mov
in
aas
or
sbb
or
add
add
pop
je
es
and
mov
mov
ljmp
inc
movsl
scas
mov
jecxz
lea
icebp
pop
test
mov
sahf
popf
xchg
mov
xchg
jle
pop
int3
push
shlb
add
inc
call
pop
dec
stc
cmp
inc
lods
or
mov
dec
rclb
add
add
add
repz
stc
pop
cltd
pop
sbb
cmp
mov
sbb
pop
sets
add
shll
xchg
pop
test
sub
mov
push
mov
add
add
ficomps
mov
and
add
add
int3
xchg
sub
add
add
cmp
sbb
movsb
mov
add
add
dec
mov
pushl
cmp
sbb
mov
xchg
push
mov
dec
stc
push
sbb
lret
mov
pop
pop
add
add
add
int
mov
neg
and
inc
sub
test
or
iret
sti
or
add
add
mov
add
cwtl
mov
idivl
sub
add
add
adc
ds
jne
jmp
stos
mov
mov
and
add
add
mov
lcall
stos
movsb
jo
jo
fisttpll
cmpsl
sub
add
add
test
pop
inc
dec
mov
add
out
hlt
jnp
outsb
std
cmp
sahf
fdivr
xlat
xlat
lea
push
fwait
mov
daa
scas
xchg
cmc
xor
inc
xchg
data16
add
sti
out
pop
sub
rorb
add
add
push
dec
pop
out
pop
pop
outsl
in
repz
add
add
add
push
frstor
jo
pop
xchg
mov
les
push
mov
add
mov
out
imul
loope
ljmp
cmp
adcb
add
add
cltd
outsw
aas
ja
test
xor
add
add
icebp
in
lret
mov
push
jg
add
pop
test
push
mov
mov
jns
add
add
mov
sub
add
add
add
mov
jnp
cltd
sub
pop
mov
lcall
push
popf
or
add
insb
add
add
mov
add
sti
cld
push
jecxz
sbb
add
add
aaa
cmpsl
ret
loop
mov
in
sbb
xor
or
out
mov
sbb
and
cmp
mov
xchg
daa
test
xorb
test
loopne
push
scas
lods
mov
orb
add
cmp
cmp
mov
add
and
and
outsl
inc
mov
fwait
loopne
data16
mov
xor
jnp
xlat
or
ret
mov
and
ret
leave
js
jmp
pop
xor
adc
sub
lcall
pop
add
add
arpl
mov
fidivrl
shrl
jl
call
add
add
or
out
icebp
in
push
pop
jp
inc
xchg
pushf
sub
add
add
fwait
mov
test
jl
pop
pop
sbb
or
and
add
add
ficomps
notb
pop
add
es
sub
cmpsl
ss
ja
mov
popl
addr16
clc
out
and
push
pushf
mov
mov
add
cmc
add
cmp
rcll
sub
add
add
outsb
ljmp
add
outsb
jb
call
mov
push
sub
mov
sub
add
int
mov
xchg
aad
or
add
add
cs
ss
mov
dec
mov
rcl
mov
add
add
in
pushf
pop
push
lahf
ja
leave
das
cmp
call
ds
push
aad
push
add
add
add
mov
repz
jnp
fdivs
rorl
add
add
add
add
fdivrs
adc
jecxz
cmp
push
dec
mov
add
add
add
inc
and
add
add
jl
sub
mov
add
inc
cli
movsb
imul
out
orl
xchg
lret
arpl
pop
shlb
imul
cmp
xor
pop
or
pop
xchg
data16
sbb
pop
je
mov
push
sub
add
add
jnp
or
add
add
filds
je
push
clc
cltd
add
add
add
jmp
pop
or
loope
dec
ja
fdecstp
or
mov
and
add
add
pop
sahf
lret
cmp
subl
fwait
out
hlt
out
scas
cwtl
std
fwait
or
cwtl
in
into
mov
pop
and
jle
add
add
jge
xlat
xchg
push
xchg
and
sbb
iret
push
pop
ret
or
add
add
test
dec
subl
jmp
add
add
xchg
movsb
adc
add
ja
jno
or
cmp
add
add
pop
mov
xchg
push
pusha
mov
mov
pusha
mov
movsb
jge
repz
add
add
es
fists
fnsetpm(287
loopne
jbe
arpl
cmpsl
aam
add
add
pop
out
mov
jmp
out
stos
jo
lds
in
push
js
fsts
fcompl
add
add
pusha
mov
inc
xor
insl
flds
pop
mov
in
adc
nop
popf
repz
cmp
out
pop
mov
das
jo
inc
xchg
stos
push
outsb
scas
mov
and
push
sbb
adc
inc
addr16
or
mov
repz
cmc
push
dec
add
add
push
jb
add
add
stos
mov
adc
sbb
mov
add
add
inc
rolb
add
inc
jmp
add
add
sbb
xor
fs
jae
shr
or
fcmovne
jne
xchg
inc
outsb
fildl
fdiv
ret
fwait
xchg
mov
inc
mov
sbb
xor
je
cmpsl
mov
lahf
push
wbinvd
jae
inc
hlt
xchg
mov
ret
int
out
pop
pushf
cltd
pusha
mov
cmpsl
cmp
add
add
dec
push
pop
loopne
jo
adc
cmp
add
jl
adc
gs
pushf
pop
loop
icebp
adc
mov
pop
add
in
mov
pop
sti
into
aaa
xchg
push
dec
jp
inc
xchg
orb
add
add
add
add
add
cwtl
lret
pusha
mov
pop
cwtl
out
nop
imul
popf
mov
imul
add
add
pop
mov
add
add
lea
add
add
idiv
push
js
fisubrs
lock
sbb
mov
jo
es
mov
cmp
repnz
insl
cmc
out
sub
repnz
je
push
mov
and
lea
stc
cmp
popf
xchg
ds
bound
add
add
add
add
add
add
clc
dec
jl
add
call
add
add
add
sub
xor
xor
add
jbe
xchg
test
iret
icebp
pop
sahf
insl
scas
inc
mov
test
mov
decl
test
cmp
sbb
mov
add
add
adc
add
jmp
pop
cmpsl
sub
add
add
fldt
sbb
pop
shl
xlat
adc
loopne
push
adc
scas
or
add
add
push
sbb
je
inc
add
add
int
divl
das
out
add
add
add
add
add
add
push
pop
and
mov
adc
xchg
inc
xchg
test
push
xchg
and
push
mov
add
add
cmp
add
xlat
lahf
icebp
push
sahf
xchg
add
add
aaa
jp
cli
and
shll
scas
in
out
decb
cs
imul
add
add
add
add
fwait
scas
int
sbb
sub
add
add
fisubrl
add
add
add
out
mov
cwtl
jg
xlat
sbb
xor
add
add
mov
pop
mov
cs
inc
add
add
into
out
cmp
jl
imulb
lds
mov
loope
jb
pusha
mov
mov
lea
fst
jle
jbe
inc
outsb
pushf
mov
stc
shrl
add
add
and
nop
or
pop
shll
rclb
call
repz
adc
mov
mov
push
jl
ret
mov
add
add
add
stos
fxch
ds
push
bound
add
add
add
cmp
rcrl
aad
js
mov
add
cmc
ss
lcall
sbb
add
add
hlt
call
clc
adc
test
iret
lock
adc
add
std
dec
js
xor
add
add
cli
push
pop
dec
fcomp
aas
or
add
add
scas
jle
mov
mov
add
add
in
rcrb
and
rcr
ds
addr16
pop
push
enter
subb
cmp
push
movsl
scas
pusha
add
add
mov
nop
adc
out
movsl
outsb
push
inc
cli
dec
jbe
push
xchg
mov
popa
or
dec
jle
aad
sbb
xchg
sbb
add
add
cmp
in
add
add
inc
inc
and
repz
movsb
mov
aam
cmp
lahf
loop
jnp
fldpi
mov
adc
fwait
mov
push
int
movsb
and
push
js
sub
pop
aas
jmp
bswap
mov
cmpsb
mov
push
cmpsl
daa
jge
jns
insb
add
add
arpl
lea
scas
sahf
mov
add
add
mov
mov
pop
lea
cmp
in
and
add
add
xchg
mov
mov
popa
ss
adc
out
test
lret
test
in
cmp
mov
jb
add
add
add
add
add
flds
pop
call
add
add
dec
fwait
cld
mov
addl
add
add
fwait
mov
xor
sahf
sbb
enter
lea
adc
adc
inc
mov
out
lock
mov
mov
cltd
mov
mov
pop
cwtl
test
sub
dec
idivb
pushf
dec
add
add
inc
ror
lods
dec
mov
in
mov
push
insl
mov
fdivrl
mov
sub
add
add
add
insb
mov
insl
push
jg
pop
mov
dec
add
add
dec
orl
mov
push
mov
add
add
xor
mov
inc
out
sarl
xchg
add
add
add
add
adc
jecxz
sti
imul
push
jge
add
add
jbe
add
add
add
popf
jle
jge
lahf
popa
mov
sub
and
add
add
xor
add
or
add
add
sub
add
add
mov
pop
mov
std
jmp
into
int3
out
popf
sar
jb
jnp
mov
cmp
xor
jb
and
add
add
sub
dec
icebp
mov
add
add
pop
cmp
cwtl
xor
jle
stos
out
data16
push
mov
add
add
in
mov
idiv
test
outsb
xlat
add
or
pop
xor
and
add
add
mov
lcall
mov
imul
nop
icebp
and
mov
mov
mov
push
scas
cmc
sub
insl
mov
xor
test
flds
xor
xor
add
add
loopne
mov
xor
pop
push
sub
add
add
push
adc
add
inc
xchg
jb
jmp
dec
dec
rcll
and
mov
add
mov
xchg
movsb
and
add
add
dec
mov
mov
dec
mov
and
dec
cmp
cli
mov
loop
jle
and
add
add
pushf
add
add
jae
jmp
jb
les
xlat
inc
popl
test
jnp
and
insl
andl
add
add
mov
and
cmpsb
inc
out
cmp
and
test
pop
jmp
loope
mov
lret
cli
pushf
mov
mov
das
pop
mov
sub
js
cmp
fcoml
or
add
add
add
or
enter
std
lock
clc
push
mul
lods
aam
insl
xchg
mov
add
add
daa
lea
fsubrs
jle
mov
add
sbb
mov
pop
sbb
inc
jno
mov
fisttpll
push
mov
mov
add
add
adc
and
insl
dec
add
add
test
cmpl
mov
sub
pop
push
test
imul
mov
pop
xchg
dec
mov
int
mov
mov
popf
cmp
in
roll
mov
sbb
inc
jae
neg
add
cli
lods
and
dec
mov
fldenv
push
mov
add
mov
add
add
add
add
add
xor
jne
mov
add
add
mov
inc
or
dec
outsl
mov
lods
or
mov
popf
outsl
adc
add
mov
xor
lret
fwait
mov
test
add
add
pop
in
mov
cmc
push
mov
mov
mov
mov
outsl
add
out
jb
mov
mov
out
mov
mov
inc
add
add
mov
inc
cmp
pop
into
lret
fdivs
jle
pop
roll
add
add
add
int
cmp
inc
enter
test
imul
mov
inc
push
push
loope
inc
jecxz
outsb
and
stc
in
cmp
cmp
add
add
mov
pop
mov
out
dec
lds
daa
into
pushf
xor
add
add
inc
test
sub
add
add
jle
test
mov
das
xor
test
dec
testb
out
decl
add
lret
ret
insb
mov
add
add
fisubrl
push
push
jp
sbb
add
add
mov
push
test
hlt
fsub
cmp
or
add
add
mov
lret
add
add
or
mov
sub
cmp
sti
mov
ficoms
add
add
out
mov
add
add
add
or
adc
or
dec
mov
adc
push
mov
mov
add
add
testb
or
xchg
testb
mov
lds
ret
add
add
mul
or
add
add
std
or
js
add
add
sub
dec
and
add
add
lcall
and
outsb
jle
add
add
sub
mov
dec
mov
cmpsl
push
imul
aaa
sub
add
add
add
add
inc
adc
je
pop
std
cld
xchg
sar
sbb
cli
stos
pop
test
xchg
pushf
addl
int3
xor
shr
or
nop
xlat
adc
fstpt
adc
lods
sbb
aam
add
add
cmp
test
popa
cmpsl
fcompl
sub
add
add
cli
bound
xor
pop
inc
cli
cmp
rcrl
cld
sbb
pop
pop
arpl
dec
cmp
inc
fiadds
xchg
push
mov
add
add
pusha
mov
jl
mov
add
add
roll
xchg
inc
mov
push
lea
cltd
jnp
insb
add
add
test
add
add
add
add
sbb
jbe
stc
sbb
pop
call
outsl
pusha
add
add
stos
scas
adc
montmul
xor
add
push
jo
movsl
mov
into
jns
mov
sbb
mov
xor
and
jo
das
cwtl
sbb
sbb
fsub
add
mov
fisttps
add
add
mulb
shll
jno
jbe
test
adc
aas
cmp
out
mov
dec
add
add
xchg
es
pop
in
insb
mov
xchg
ljmp
cwtl
xchg
fnstcw
lea
sti
cld
aaa
adc
cmp
mov
nop
xchg
xchg
cmpsb
out
adc
xor
xchg
and
inc
sub
add
add
and
out
mov
fbstp
dec
out
addr16
inc
jecxz
repz
mov
xchg
sbb
inc
mov
sbb
inc
mov
aas
jno
out
je
pop
rdpmc
sub
add
jno
lds
add
test
ret
in
mov
push
jo
cld
test
push
test
mov
inc
fxch
xlat
inc
into
mov
lods
repz
sahf
ret
mov
repnz
inc
mov
push
out
push
fbld
add
add
gs
add
into
push
jle
mov
int3
int3
jb
mov
mov
sbb
add
add
inc
sub
jp
and
add
jmp
jge
add
mov
mov
lcall
and
sub
add
add
cmc
movsb
dec
add
add
sarl
cmp
sub
add
or
mov
mov
cmpl
mov
mov
ja
or
pop
cmpsb
mov
dec
fs
loop
inc
dec
jae
insl
cmpsb
in
aas
cwtl
ja
mov
xorb
in
pushf
dec
xor
popf
ss
xchg
ficoml
aad
add
add
int
or
add
add
add
add
cmp
loopne
out
or
add
pop
dec
add
or
lods
cmpsl
and
push
sub
add
add
sarb
add
dec
std
mov
sbb
call
add
outsb
popf
test
add
add
or
test
inc
mov
sti
and
popf
xor
into
and
and
lcall
lock
bnd
add
add
add
xor
or
and
add
add
mov
ss
xlat
lret
inc
test
aaa
sub
add
popa
sub
add
add
xchg
add
add
add
push
out
mov
xchg
aaa
ror
xor
dec
sbb
push
lret
orl
scas
fisubs
jmp
add
add
mov
add
sub
add
inc
rol
movntq
iret
and
add
add
mov
add
rcl
mov
lret
mov
push
ud0
push
inc
sub
xor
aad
ficoml
int
adc
mov
nop
nop
jl
pop
jno
lret
fsubl
xor
cmp
xor
adc
sti
mov
clc
cmp
jecxz
xchg
js
in
ja
bsr
xorb
or
add
add
push
mov
add
add
mov
xor
ficomps
cmp
ja
lods
xchg
rol
fwait
and
add
add
mov
mov
pusha
mov
ret
setne
or
xor
dec
mov
pushf
clc
pop
and
xor
fisubs
test
push
sbb
mov
imull
mov
mov
jl
or
pop
xor
icebp
jbe
and
leave
mov
loopne
sahf
andl
std
aas
lcall
jno
add
cmp
add
add
out
cld
dec
insb
add
add
std
xchg
mov
loop
xor
pop
push
pop
add
adc
enter
push
out
mov
aaa
lea
in
jnp
es
cmp
push
push
inc
mov
out
mov
mov
or
push
outsl
mov
out
fsubrl
inc
mov
push
fcomi
in
and
add
add
fidivs
inc
and
xor
mov
sahf
mov
dec
aam
add
add
add
dec
add
add
test
pop
shrl
add
and
and
jnp
xor
dec
movl
add
mov
jns
inc
std
int3
arpl
add
add
add
pop
test
js
pop
xor
stos
push
mov
mov
add
add
jmp
lret
ret
add
add
iret
loopne
mov
cli
cmp
subl
jno
daa
pop
dec
add
lods
insl
fisubs
add
add
das
fs
divb
mov
add
add
add
add
sub
dec
into
sub
add
add
sbb
outsl
mov
pop
xchg
add
add
clc
and
xchg
out
mov
mov
add
fdivl
negb
jg
add
add
add
mov
and
mov
adc
and
pop
pop
aad
cwtl
movsl
iret
pushf
ret
add
add
loope
rcrb
clc
xchg
or
add
add
sub
idivb
out
mov
push
cmp
adc
pushf
shl
cwtl
or
add
add
repnz
popa
fstl
mov
add
out
lcall
push
outsl
or
add
add
nop
ja
inc
cmpsl
hlt
call
add
add
add
arpl
add
add
add
popf
nop
test
lcall
call
test
pop
pop
jne
mov
add
test
xchg
cmpsb
fwait
cmp
push
out
mov
add
imul
popf
jb
mov
cwtl
dec
add
add
push
adc
inc
add
add
adc
ret
lods
shrl
shlb
loop
jecxz
loop
addr16
cmpsb
and
add
add
add
add
pop
xor
and
mov
jb
call
add
les
push
and
add
add
xor
jge
std
out
xchg
push
dec
aas
mov
push
pusha
mov
jne
mov
jge
or
xchg
lret
ds
in
movsb
adc
adc
dec
dec
xchg
pop
cmpsb
ret
add
add
add
mov
in
rcrl
jns
dec
mov
add
add
dec
lcall
mov
dec
fists
mov
clc
imul
sub
and
cmp
sti
roll
outsb
fidivrs
xchg
add
add
and
inc
aas
das
pop
orl
movsl
dec
push
mov
in
sub
add
add
inc
mov
mov
pop
add
adc
xchg
add
fdiv
rorb
add
add
aam
xlat
xchg
mov
data16
add
fldl
movsl
inc
add
add
in
cwtl
mov
add
popf
cmp
lea
add
add
fstl
add
test
fimull
add
inc
add
add
dec
cmpsb
aad
sbb
xchg
aaa
ret
pmaxub
push
xchg
jno
data16
pop
jo
rol
or
iret
imul
pop
mov
xchg
adc
sub
add
add
cld
sub
add
add
stos
rclb
xor
fbld
add
mov
pop
icebp
mov
push
sub
test
filds
add
add
add
xlat
mov
push
data16
xchg
inc
inc
dec
mov
push
das
xor
out
xbegin
xorl
push
jb
jmp
jmp
mov
xchg
adc
jmp
push
cmp
movsl
inc
or
pop
lock
lahf
addr16
ss
add
or
add
add
add
add
push
or
add
add
rorb
add
add
add
add
mov
add
add
test
sbb
test
xorb
js
scas
cmpsl
scas
mov
notb
out
into
jg
sub
dec
dec
pop
dec
xor
jge
ss
and
add
mov
test
jle
getsec
sub
jge
add
add
pushf
les
add
andb
sahf
int3
adc
loope
sub
ret
cmp
or
add
add
sbb
xchg
mov
hlt
scas
stos
pop
enter
mov
aad
loope
xor
jge
repz
mulb
mov
loop
cmpsb
insb
add
add
xchg
add
add
add
add
add
add
loop
push
and
mov
loope
inc
stc
add
add
add
mov
jne
push
fidivrs
add
cmc
stos
sub
add
add
movsb
xor
or
add
add
sub
add
add
inc
mov
mov
addr16
adc
dec
imul
cli
cmpsl
stc
mov
cmp
push
xchg
mov
sub
mul
mov
out
popl
or
add
add
out
sub
sub
add
add
sub
test
fcmovnb
dec
scas
xor
mov
inc
les
mov
mov
mov
add
incl
inc
dec
movsb
addr16
add
add
ds
and
add
add
mov
cbtw
jnp
sbbb
cmpl
sub
sar
lret
cmp
je
sbb
in
stc
cmp
add
add
add
pop
sub
add
add
dec
repnz
lret
jae
or
jg
pop
pop
mov
fcmovnu
adcl
mov
and
test
jle
mov
iret
dec
loope
nop
adc
fstpt
add
add
push
mov
jbe
or
add
add
mov
jg
inc
addr16
ss
test
xor
mov
std
jecxz
xchg
add
add
jecxz
add
add
jbe
cld
and
in
andb
sub
add
and
pop
mov
sti
test
scas
push
push
std
sbb
pop
ret
imul
push
bound
movsb
adc
and
inc
mov
pop
test
pop
cmp
inc
add
add
mov
jecxz
cli
es
clc
popf
fwait
out
dec
add
add
das
orl
aaa
push
divb
fstpl
pop
jmp
aam
hlt
jno
add
add
daa
mov
adc
adc
loopne
mov
add
add
scas
adc
add
mov
inc
add
add
add
lcall
add
add
add
add
roll
add
inc
das
push
pusha
mov
pop
jae
or
add
insb
mov
enter
mov
push
dec
add
add
sub
push
mov
pop
test
add
add
xor
push
out
mov
adc
js
aas
mov
pop
jmp
adc
outsb
imul
in
lret
lcall
les
rorl
loopne
push
popa
adc
sub
shr
xor
add
add
in
imul
aas
lret
test
loope
mov
rorl
inc
xor
mov
fisttpll
int3
hlt
lret
rcrb
mov
xchg
cmp
mov
push
fcoms
ljmp
sbb
jo
pop
cmp
mov
shl
mov
xchg
stos
inc
aam
divl
lret
xor
add
add
pop
mov
in
mov
sbb
mov
add
add
add
add
add
jl
sahf
sbb
sub
add
add
repnz
pop
mov
push
mov
pop
pushl
pop
pop
xor
pop
push
outsb
cwtl
jg
sbb
subb
jb
movsl
add
pop
in
pop
repz
push
lcall
shrb
add
cwtl
cltd
xorb
cli
pop
mov
mov
sub
repz
add
add
and
add
add
pop
cs
lds
add
add
add
or
add
add
test
testl
or
dec
dec
mov
xor
out
push
testl
mov
sahf
gs
pop
inc
mov
xor
add
subl
and
fistps
sub
add
add
lods
mov
pop
mov
or
add
add
lds
in
lock
jp
mov
xchg
fidivrl
sbbb
out
aas
sbb
sbb
les
add
movsl
stc
imul
pop
lds
sbb
es
dec
add
add
adc
add
add
into
push
or
add
add
repz
mov
scas
and
lea
add
add
or
add
add
inc
cmp
jl
adc
ret
mov
cmp
dec
loop
mov
cltd
test
jmp
push
jg
pop
dec
outsb
sbb
addr16
or
add
add
add
add
push
popa
pop
mov
add
popa
fldl
call
add
cmpsb
sub
pop
cwtl
stc
fistl
rclb
or
mov
mov
daa
push
repnz
loop
sar
aaa
scas
or
inc
fldl
fcomip
or
mov
jmp
cmp
pop
repz
xchg
sahf
lret
das
addr16
enter
inc
push
test
jae
add
push
sub
sti
cmp
test
imul
fbstp
js
lret
mov
add
mov
sub
add
add
leave
and
add
add
imul
xchg
xchg
xor
int3
inc
xchg
add
add
xchg
test
add
add
jge
test
test
add
add
pop
dec
shrb
pop
cld
jle
test
ljmp
add
add
and
add
add
testl
add
ret
dec
mov
jno
pop
hlt
rcrl
add
add
in
scas
sub
inc
add
add
lret
xchg
in
xlat
std
lret
pop
xor
repnz
dec
rorb
inc
mov
test
in
rcll
shlb
sbb
add
add
and
mov
sub
loopne
pop
or
add
add
not
clc
adc
mov
incb
dec
mov
jmp
outsl
jl
out
aas
stos
xor
xor
outsl
xchg
mov
adc
lret
in
jnp
das
ss
repz
add
mov
das
and
add
add
adc
cmp
sbb
adc
mov
fists
sub
xchg
mov
mov
sub
add
add
nop
in
xor
cwtl
fwait
sub
add
add
aaa
fistpll
or
fmull
add
add
xchg
jbe
aam
dec
call
rcrb
fnstsw
inc
mov
test
lock
and
xor
add
add
int
push
sbb
sbb
fneni(8087
adc
dec
in
lea
fisttps
lds
jne
movsb
addr16
cmpsl
dec
xor
and
add
add
rcrl
add
dec
cmpsb
or
pop
xchg
mov
pop
je
and
add
add
cmc
inc
add
add
add
add
add
push
sub
add
add
test
pusha
add
add
inc
out
xchg
in
xor
into
jns
dec
add
add
add
test
add
ds
cmpsb
pop
xor
or
std
pop
mov
in
jmp
push
lcall
je
pop
xchg
pop
and
mov
mov
call
mov
jo
xchg
add
repz
mov
add
dec
rcll
adc
add
mov
add
sbb
push
push
or
mov
add
lret
nop
icebp
lds
mov
pushf
jns
pop
pushf
fildl
add
add
pop
pop
cmp
pop
sub
add
add
add
add
add
inc
hlt
das
sbbb
jne
xrelease
inc
add
add
push
mov
decl
clc
jo
adc
xlat
jo
jg
sbb
clc
mov
enter
clc
cmp
cmp
push
pop
in
mov
add
lcall
or
pusha
mov
aas
sub
add
add
shlb
aas
dec
mov
adc
aaa
insl
mov
jo
sub
push
xlat
push
movsl
sub
xor
cmp
mov
stc
push
aas
into
adcl
shlb
jne
out
fmuls
add
add
mov
add
cli
ret
lcall
sbb
mov
push
push
push
in
sbb
repnz
add
add
mov
shll
xchg
sbb
aam
jmp
fwait
popf
mov
mov
fnstsw
push
out
or
outsb
aaa
add
add
add
jle
outsb
push
lcall
cmp
and
add
add
add
adc
cmc
push
adc
fwait
cmp
movsl
sbb
icebp
mov
pop
stos
adcl
jbe
mov
imulb
cld
inc
daa
pop
xchg
push
adc
mov
adc
push
sub
add
add
mov
push
das
into
or
shll
frstor
rcl
add
sti
adc
mov
add
imul
add
ljmp
mov
dec
andl
add
movsb
add
add
add
cmpsb
aam
insl
adc
fistpll
out
pop
data16
test
xchg
in
rcl
pop
xchg
repz
loop
jge
shl
ljmp
arpl
add
add
notl
add
addr16
xchg
rcll
and
add
add
mov
add
add
fldl2e
adc
sub
sti
or
sti
push
cmovae
pop
sbb
sbb
add
xchg
xchg
mov
add
in
mov
add
repnz
mov
add
or
add
add
out
inc
cmp
ret
adc
sti
cmp
movsl
aam
push
dec
inc
or
loop
inc
add
add
push
stos
shrb
add
add
add
lods
repnz
or
imulb
out
add
add
mov
test
into
ljmp
add
fwait
inc
rorb
push
pmaxub
into
adc
imul
arpl
add
mov
es
jnp
dec
jmp
cltd
loope
cmc
ficoms
add
sbb
mov
sub
fs
push
lods
add
add
rsm
lret
out
pop
orb
add
sahf
push
mov
mov
and
shlb
lods
mov
xor
mov
ja
fildl
jle
dec
add
add
insl
cli
inc
jge
daa
std
gs
mov
lods
sahf
mov
mov
mov
add
into
mov
add
nop
lock
cltd
insb
mov
mov
mov
data16
push
jbe
mov
cs
jnp
mov
or
fildl
add
add
pop
ds
in
push
subps
repz
aaa
jge
loop
repnz
adc
cmp
fstp
pop
adc
fidivrl
add
xor
out
insl
push
aam
inc
add
add
int
mov
aad
mov
adc
push
sbb
jge
adc
frstor
xor
pop
lret
pop
mov
bound
lcall
mov
mov
cmp
mov
jae
add
or
add
add
jg
lret
leave
xchg
push
lret
push
pop
sbb
inc
add
add
sub
add
add
add
jnp
repz
or
pop
pop
xor
out
jbe
shrb
adc
outsb
mov
dec
push
lods
sbb
test
push
dec
push
add
xor
nop
dec
xchg
pop
mov
push
in
insl
imul
ds
cli
sahf
xor
loopne
iret
orb
add
movsb
jae
sbb
or
push
cmp
fimuls
aad
cli
movsl
dec
mov
mov
jle
mov
xor
repnz
aaa
and
adc
xchg
push
mov
pop
rcl
or
rcrl
mov
adc
add
add
mov
aas
insb
mov
pop
fistps
fdivl
add
fdivs
addr16
aam
in
mov
pop
test
int3
mov
sbb
lods
inc
mov
insb
mov
mov
mov
stos
scas
shlb
jno
js
loopne
sbb
xchg
jle
and
cmp
imull
push
push
push
bound
mov
fistps
xor
stos
and
imul
sar
gs
mov
mov
orb
stc
pop
outsl
aam
mov
jnp
loopne
mov
xor
sub
add
add
mov
sti
lcall
aas
xor
pop
xlat
add
add
les
jl
dec
mov
dec
xchg
std
add
add
add
js
sub
add
add
jb
mov
pop
insb
mov
sub
nop
std
dec
and
mov
jo
ss
fnstenv
inc
push
aas
lea
add
add
jecxz
in
jnp
sahf
mov
xchg
mov
stos
cmpsl
mov
sbb
insl
js
mov
dec
mov
cmp
pop
movsb
mov
mov
mov
xor
jg
cld
test
in
mov
jno
into
repnz
test
add
add
loop
dec
sbb
cmpsl
mov
mov
pushf
lret
mov
pop
in
std
jbe
sub
leave
xchg
xor
dec
cmpsl
fimull
aaa
cli
lcall
add
add
mov
repz
xchg
out
mov
add
leave
inc
fsubr
in
dec
xor
mov
add
inc
inc
dec
mov
ret
mov
test
lds
sbb
mov
es
bound
insb
add
add
mov
mov
mov
pop
pop
dec
mov
add
out
cmp
push
sbbl
mov
add
das
rcl
test
push
test
xchg
out
popl
mov
out
and
add
add
add
adc
ret
jg
inc
cmpsb
in
cld
mov
mov
fsub
or
add
add
adc
or
add
add
jnp
add
add
add
sbb
mov
push
test
ret
add
add
mov
add
mov
addr16
xorb
imull
dec
jb
nop
xor
test
mov
loop
cwtl
adc
xchg
add
cmp
cmp
mov
and
add
add
dec
lahf
mov
add
add
cs
add
add
add
dec
cmp
add
enter
mov
and
add
add
push
mov
mov
stos
lock
xchg
mov
aas
adc
cmc
pop
inc
add
add
sub
add
add
push
sub
add
add
popa
ss
xchg
rorb
add
add
pop
sub
add
add
ljmp
gs
dec
mov
or
inc
sbb
add
insl
cmp
and
add
add
adc
in
jnp
sbb
pop
mov
add
add
mov
jle
mov
cmp
pop
dec
or
add
add
add
mov
mov
pop
test
out
jmp
add
test
aaa
movsl
mov
add
add
loope
gs
xlat
in
into
mov
test
movsb
and
sub
nop
ret
pop
pop
mov
shl
cmp
shlb
or
add
insb
mov
repz
add
add
inc
sbb
sbb
cmovle
push
sub
dec
fmull
les
pop
hlt
std
and
add
add
sub
add
add
inc
xchg
mov
xor
mov
add
push
mov
xor
out
mov
int3
xchg
add
add
add
ficoms
add
mov
popf
mov
or
cwtl
sub
aas
outsl
push
push
ret
pop
mov
inc
movsl
in
pusha
add
add
pop
pop
jnp
inc
mov
add
add
jg
stc
or
add
add
push
cmp
add
lds
push
xor
add
add
sti
dec
cmp
dec
mov
sbb
xchg
scas
cmpb
mov
imul
sub
add
add
dec
xchg
add
add
and
add
add
iret
mov
cmp
pop
test
add
rolb
aam
test
and
mov
movsb
jno
push
cld
fnstsw
push
xchg
adc
cltd
jecxz
xlat
mov
into
imul
jno
scas
push
fsubs
pop
sub
add
add
fistpll
add
add
iret
and
push
lret
mov
push
movb
add
aaa
cmp
imul
cmp
mov
push
xchg
ret
daa
inc
ret
dec
add
sysret
add
fucomi
or
add
add
xchg
stos
cmp
add
mov
jle
mov
and
pop
aaa
lock
jbe
fisubrs
mov
or
add
sub
jecxz
push
lcall
xchg
subb
lahf
mov
lea
scas
mov
lds
add
mov
push
ljmp
pop
shl
fldl
adc
push
pop
mov
xor
pop
jl
xor
add
add
jne
cmp
mov
cmp
add
add
loop
incl
lods
fsub
mov
add
xchg
pop
mov
lds
inc
jbe
mov
fidivrl
gs
mov
gs
das
push
adc
push
sub
ja
jg
mov
clc
sbb
mov
add
lret
lcall
imul
je
mov
add
add
add
add
push
mov
pushf
mov
adc
inc
imul
shr
jno
mov
sti
or
lahf
stc
sub
stos
mov
add
or
adc
mov
xchg
pop
loope
xor
mov
mov
iret
sbb
mov
or
adc
add
add
ret
cmp
sub
add
add
popa
call
stc
xchg
fwait
loop
mov
nop
mov
add
add
xchg
repz
jb
shrb
ret
cmp
lds
mov
stos
sbb
mov
dec
mov
shl
cltd
ret
mov
add
cmc
pop
shr
mov
sub
arpl
cmpsb
or
into
sarl
mov
xchg
shlb
xchg
cmp
add
pop
pop
cli
xchg
sub
add
add
out
fcoml
add
add
scas
push
sahf
add
add
popa
jecxz
mov
inc
int3
ja
xor
insl
enter
add
rorb
add
int
mov
mov
mov
sbb
stc
jbe
iret
sbb
rolb
dec
or
dec
mov
sbb
pop
mov
sub
add
add
pop
jne
fxch
daa
and
add
add
xor
adc
adcl
gs
mov
loope
aad
jb
pop
lock
enter
push
loop
sbb
sbb
lds
adc
insb
add
add
cmp
xchg
pusha
add
add
jle
shr
or
xchg
leave
sub
pop
inc
push
and
add
add
outsb
xchg
jns
decl
add
add
add
push
les
mov
mov
jbe
inc
mov
mov
mov
mov
add
add
mov
test
jge
je
data16
test
mov
or
add
add
cs
adc
test
inc
mov
xchg
xor
out
cmp
mov
cltd
loope
jecxz
aaa
sub
add
add
lds
je
cmc
lods
enter
xor
add
add
push
add
std
sub
sti
cmp
mov
dec
lods
lock
adc
pop
mov
mov
mov
lcall
pop
push
xor
push
jmp
mov
xchg
mov
mul
fisubrl
xchg
cmpsb
or
lret
or
inc
shrl
or
repz
push
fadds
push
clc
xchg
adc
fadd
std
mov
ljmp
out
add
add
add
dec
push
fildl
outsl
subb
addb
dec
add
add
cmc
push
dec
cltd
pop
mov
call
cltd
stos
ret
pop
imulb
out
jecxz
inc
mov
dec
jne
cmp
cmp
imul
add
xor
add
add
filds
clc
bound
add
jge
sub
add
add
pop
xchg
xchg
xor
leave
push
sbb
fidivs
mov
mov
mov
insl
es
lods
dec
fwait
xchg
fxtract
add
nop
mov
vfrczss
mov
cs
add
add
add
aad
lea
push
fsubl
cmp
adc
add
add
outsb
jb
ficompl
xor
mov
out
fcom
jp
sbb
xchg
or
xchg
out
mov
repnz
push
pop
pop
mov
sbb
or
cmp
aaa
cmp
mov
pop
xchg
mov
add
sub
add
add
decb
add
add
loopne
xor
sub
push
add
sbb
mov
aaa
push
push
aaa
aad
push
jno
mov
lods
test
adc
je
mov
js
or
add
add
test
cmp
jae
sbb
mov
ljmp
fs
pusha
mov
fsubrp
push
or
test
sub
scas
iret
jns
aas
fsubrl
icebp
inc
xor
sbb
mov
cmpsb
stc
mov
mov
sbb
cmp
dec
sti
repnz
mov
jle
add
add
pushf
pop
aam
add
addr16
aad
sbbb
in
clc
dec
mov
mov
fmull
cmc
add
dec
lods
xchg
mov
lahf
test
adc
sub
dec
push
stos
repnz
lcall
flds
mov
daa
pop
je
rorl
mov
outsb
jno
sbb
inc
mov
dec
add
add
js
subl
push
mov
pop
mov
lcall
sbb
mov
mov
outsl
arpl
mov
pop
fidivl
aam
clc
mov
sbb
add
add
in
pop
or
add
mov
inc
pop
pop
pop
insb
mov
mov
mov
add
add
outsl
mov
cmpsb
sarl
xor
in
mov
out
ret
in
stos
jae
mov
adc
mov
adc
orb
add
inc
mov
ret
inc
cld
push
and
loop
clc
xor
and
mov
into
ljmp
adc
movsl
push
jb
mov
add
cli
push
inc
add
add
sahf
mov
sub
es
or
repz
add
add
addr16
mov
testl
lret
xchg
das
push
push
mov
pop
shl
leave
fwait
outsb
stc
adc
mov
aaa
and
add
add
lods
mov
mov
jle
cmpl
test
addr16
xchg
lret
add
add
push
add
add
jnp
sbb
pop
mov
mov
lods
int3
mov
lods
icebp
mov
int
xor
add
sub
mov
mov
push
test
inc
mov
jo
scas
add
add
add
cli
mov
jg
cs
dec
dec
inc
mov
sbb
dec
insb
mov
inc
addl
out
adc
and
fstpl
mov
fisubrl
pushf
and
gs
pusha
mov
push
scas
dec
jle
test
jle
dec
pushf
jge
push
das
ja
cmc
pop
fiadds
das
adc
inc
jnp
outsl
ret
mov
mov
dec
push
dec
add
add
xchg
jno
xchg
mov
fwait
push
fisttpll
add
add
or
add
add
loopne
sti
xchg
stc
aas
in
or
add
add
add
add
jb
dec
inc
mov
mov
aaa
scas
jno
lret
scas
lds
sub
mov
sub
test
jno
xchg
roll
add
mov
insl
or
add
add
add
add
cmp
call
and
push
mov
xchg
lret
arpl
add
stc
fcmovb
pop
cmp
mov
or
test
sbb
lock
ficoml
push
lods
dec
pop
std
movd
or
xor
ss
sbb
mov
pushf
divb
mov
xor
mov
mov
dec
ret
xchg
das
cmp
add
arpl
lcall
xor
cs
jle
add
add
sub
loope
xor
sti
daa
and
out
fldl
inc
xor
jb
pop
or
add
add
gs
cmp
jle
out
stos
cmp
add
add
add
cmp
xchg
jo
mov
arpl
daa
call
xlat
push
dec
add
add
sbbb
outsb
push
sti
push
fnstsw
add
inc
and
icebp
arpl
rcrb
mov
inc
jl
testb
push
cwtl
cmpsl
push
call
mov
push
inc
cli
js
xor
leave
and
add
lds
aaa
push
inc
add
add
mov
fisubl
enter
inc
outsb
in
cmpsb
lods
dec
jmp
les
push
add
add
add
mov
add
mov
in
inc
add
add
icebp
mov
fnsave
mov
movsl
jle
push
sub
add
add
jnp
outsl
fiaddl
add
add
add
popf
and
or
pop
add
add
add
push
push
add
out
cmp
add
xchg
cltd
popf
pop
jo
or
loopne
and
pusha
add
add
pop
mov
dec
add
add
xor
pop
and
add
add
sub
clc
jg
aad
mov
add
ljmp
jp
addl
push
idivl
add
add
ficoml
sbbl
xchg
mov
fcmovnb
cmpsl
push
mov
cwtl
icebp
mov
add
add
add
filds
add
inc
cmc
test
in
mov
jno
lret
xchg
or
add
add
das
jge
sarb
add
shrl
xchg
lods
loop
xchg
jmp
mov
push
sbb
leave
cmp
add
add
shlb
sub
jns
adc
and
add
add
push
adc
sbb
ljmp
add
mov
and
negl
call
xchg
xor
insl
xchg
xorb
mov
addb
sbb
push
cmpsl
in
xor
jb
push
pop
sub
push
cmp
or
fcomip
add
push
xor
pushf
clc
dec
hlt
mov
mov
jno
stc
lahf
lea
add
add
bound
jne
incb
clc
outsl
mov
mov
outsl
sbb
bswap
fmull
jl
das
mov
sbb
xlat
jb
cltd
lods
pop
inc
mov
test
or
dec
add
add
sub
dec
das
mov
pushf
cmp
mov
mov
ljmp
add
cmp
repz
lahf
pop
dec
jp
jl
movsl
push
and
lods
std
add
add
add
sub
cmp
arpl
pusha
mov
mov
add
imull
aam
add
add
add
mov
test
ja
shrl
add
add
add
cli
loope
mov
xchg
add
add
push
leave
in
and
mov
jmp
std
shrl
cmp
pushf
les
pusha
add
add
mov
sbb
fsts
add
add
mov
lret
out
jecxz
mov
add
add
sbb
sbb
cld
lock
aad
lcall
out
and
jmp
into
sti
xor
bound
or
call
add
add
sub
loop
rcll
sbb
push
lods
mov
add
add
cmpsb
mov
out
push
push
inc
fwait
cmp
pusha
mov
jns
std
adc
push
pop
jle
loop
iret
dec
ud2
adc
add
repnz
mov
and
pop
inc
rcl
shll
xor
lahf
add
add
add
push
push
and
sti
in
in
and
add
add
addr16
xchg
mov
in
pop
add
mov
xor
popa
sbb
inc
shr
aad
cmp
in
xor
add
adc
aas
cmp
add
jns
cmp
pop
or
add
add
push
cmp
ja
in
xlat
pop
jnp
xchg
push
adc
add
add
mov
push
cli
xor
mov
xor
into
mov
push
push
in
sbb
dec
jecxz
xor
add
add
add
fwait
inc
mov
ficoms
and
add
add
push
xchg
dec
shl
add
add
stc
movsb
sub
rcl
int
mov
jmp
push
sub
test
add
add
mov
add
add
sahf
das
sub
mov
and
jae
xor
neg
push
imul
mov
mov
jae
pop
scas
in
push
iret
ret
mov
fnsave
mov
inc
mov
or
add
add
adc
lea
adc
cmp
ljmp
out
xor
mov
repnz
inc
add
add
icebp
mov
sbb
pusha
mov
xor
ljmp
adc
out
in
mov
lods
stc
cmpsl
add
add
add
shll
add
add
jne
jb
jb
ret
mov
enter
add
jge
mov
push
xchg
rcl
mov
add
add
xlat
fwait
pop
jmp
add
add
add
mov
add
add
push
call
lods
test
fs
dec
mov
jmp
cld
push
lret
cmp
lds
shll
into
leave
ret
mov
mov
mov
imul
mov
xchg
xchg
dec
xchg
aaa
mov
mov
out
fldcw
sbb
and
add
jo
push
dec
data16
in
pop
pop
scas
ljmp
fildl
test
mov
daa
xor
cmp
outsb
insb
add
add
xchg
add
rorb
lret
mov
add
add
cmp
mov
arpl
testb
mov
jecxz
and
loope
scas
int3
cmp
or
test
cmp
addr16
push
movsb
outsb
sbb
mov
dec
loop
xchg
sub
sbb
add
add
loop
fcompl
xlat
js
sbb
aad
mov
xchg
jo
imul
mov
inc
dec
or
add
add
and
nop
mov
out
inc
add
inc
lahf
loope
movsl
or
add
add
mov
shll
add
xchg
add
paddsw
mov
hlt
push
jns
aam
cmp
scas
cmp
lods
nop
inc
inc
mov
mov
push
cmp
leave
dec
ret
ja
mov
lea
pusha
mov
adc
test
jno
repz
test
addr16
adc
dec
mov
fidivrs
imul
call
mov
add
add
incl
movsl
mov
add
add
pop
rolb
mov
ja
inc
loopne
lea
cltd
call
loope
cli
hlt
cmp
push
dec
cwtl
daa
or
mov
add
add
aas
lods
sub
add
add
sub
add
adc
add
loop
int3
push
in
mov
pop
stos
xor
mov
add
add
jb
pop
iret
das
cwtl
sbb
mov
rolb
add
add
add
jno
out
pop
ret
dec
shl
add
add
popf
andl
aam
stos
icebp
dec
mov
ja
mov
and
push
movsb
fmul
xor
push
adc
add
pop
pusha
add
add
sbb
stc
mov
jp
dec
add
add
or
add
adc
mov
add
add
add
push
xchg
lods
cmpb
test
addr16
das
xor
add
add
lahf
ljmp
not
cli
lcall
add
push
mov
pop
dec
xchg
stos
add
inc
ljmp
arpl
lahf
scas
subb
add
xor
andb
add
cmp
jg
addr16
xchg
testl
add
fiadds
push
sbb
insb
mov
xchg
adc
add
add
test
jbe
mov
lret
iret
cmpsl
and
add
add
cmp
outsb
idivb
in
mov
leave
sahf
sbb
add
jns
adc
scas
jno
test
les
stc
cwtl
inc
mov
add
add
icebp
sub
ret
mov
xor
jb
push
lock
mov
push
inc
scas
inc
aaa
push
imul
add
add
aas
in
nop
and
xchg
and
add
add
mov
data16
push
cmc
cmp
adc
push
loopne
push
hlt
fwait
out
dec
jo
add
add
sub
inc
fcmovnb
sbb
cld
imul
out
jp
inc
jbe
sbb
mov
repnz
push
add
add
add
fs
mov
test
cmp
cmc
push
inc
cmpb
add
add
cld
push
in
mov
addl
jecxz
pushl
dec
enter
push
mov
imul
add
add
lds
add
add
icebp
jnp
sub
loopne
mov
pop
cvtpi2ps
fiaddl
sbb
arpl
add
add
dec
pusha
add
add
dec
fldcw
ret
addr16
xor
add
adc
test
cmp
cmp
shl
xchg
push
fdivr
ret
mov
add
add
jo
add
add
add
xor
xchg
ret
add
add
ja
adc
xor
mov
mov
loop
out
pop
xor
push
pop
fsubrs
sbb
push
orb
add
adc
sbb
add
add
add
add
fs
add
add
mov
imul
sbb
dec
mov
mov
int3
mov
pop
xchg
pop
mulb
jp
cmp
jl
add
push
push
loope
es
add
add
rorl
dec
imul
aad
push
in
push
inc
pop
xchg
and
mov
and
in
ret
loopne
outsb
dec
add
add
pop
popf
into
pop
mov
push
test
data16
add
add
add
aaa
imul
fiaddl
jns
je
mov
mov
add
add
js
pop
out
sahf
xorl
add
push
orb
stc
jle
pop
std
mov
fwait
data16
push
fwait
and
pop
inc
pop
iret
add
jl
inc
mov
add
add
mov
jge
jbe
push
in
inc
jb
cmpsl
sub
mov
gs
mov
sbb
lcall
add
arpl
xor
mov
or
mov
testb
or
add
add
add
add
fcompl
daa
ret
cld
stc
mov
xor
xchg
ret
mov
cmp
nop
lret
stos
sbb
iret
lea
mov
add
add
repnz
gs
cmpsb
push
inc
mov
mov
push
mov
cmpsb
cs
push
test
fdivrp
test
jl
lods
adc
data16
add
add
sarl
pop
data16
jne
mov
jno
and
pop
pop
shll
sub
add
add
pop
mov
sar
or
add
add
fnstenv
test
mov
add
add
icebp
les
inc
addr16
xchg
xchg
mov
addr16
pop
sbbl
lcall
aaa
mov
mov
mov
aas
push
mov
loopne
leave
fidivl
mov
pop
jae
dec
fistpll
mov
or
add
add
mov
popa
xor
sub
xor
push
inc
ljmp
add
insl
push
mov
adc
add
jge
inc
fidivrs
push
sub
dec
jno
clc
mov
sub
test
inc
sub
add
add
inc
pop
and
add
jb
adc
mov
add
add
cmpsl
xchg
jp
negb
push
mov
jne
out
dec
test
push
mov
cld
lods
gs
add
add
add
loop
jmp
bound
inc
sub
add
add
add
add
xchg
mov
in
jb
mov
xchg
lods
mov
arpl
sub
lock
jne
inc
jge
insb
mov
mov
jmp
add
add
fdivs
popa
in
cmp
sbb
pop
insb
add
add
adc
adc
push
jne
jae
jb
in
int
subl
jle
int3
sarb
addr16
sub
and
add
add
test
pop
mov
call
add
add
movsb
mov
hlt
rcr
cltd
inc
movsl
sbb
loope
adc
xchg
xchg
adc
inc
add
add
andl
inc
add
add
sbb
add
mov
loope
addr16
iret
sub
mov
les
mov
xor
pop
cmc
adc
adcl
mov
inc
aad
loopne
push
xor
push
call
insl
pop
sbb
and
add
add
cmp
sarb
add
add
mov
jle
and
xchg
sbbb
add
add
addl
add
add
cld
scas
sbb
rcll
cmpsb
inc
mov
mov
shlb
cmpsb
adc
test
call
add
out
cmp
cmp
xchg
test
mov
cmp
push
sbb
mov
repz
iret
inc
mov
and
mov
std
imul
cli
cmpsl
incb
repnz
imul
xorl
add
add
mov
mov
outsb
sbb
popa
sbb
stos
xchg
cld
imul
or
sub
fcompl
add
cli
mov
pop
addr16
xchg
inc
movsb
ret
das
sti
mov
inc
je
inc
add
add
xchg
icebp
adc
int
adc
jno
aad
mov
cmp
out
sahf
sbb
cmp
ret
repz
push
push
add
sbb
stc
xor
push
lcall
add
inc
sbb
cltd
push
leave
add
or
add
add
add
add
add
insb
add
add
or
lock
and
sbb
sbb
in
adc
in
out
stos
sub
mov
add
add
ds
mov
add
add
add
add
into
lods
shrl
test
ret
or
and
add
add
mov
mov
pushf
adc
add
loope
leave
xchg
dec
mov
jno
data16
xchg
jb
add
add
add
jmp
add
add
or
cld
shrb
pop
insb
add
add
mov
mov
mov
sbb
dec
add
add
loope
jb
add
add
add
movb
add
dec
adc
add
add
ss
pop
insl
lock
add
loopne
cld
fdivrl
popf
mov
mov
sahf
bnd
out
mov
pop
mov
add
cmpsb
iret
mov
cmp
or
aam
push
add
add
jne
dec
fistpll
push
cmpsb
and
addb
xor
dec
negl
notl
call
inc
pop
mov
xorb
dec
call
adc
add
push
xchg
enter
dec
bound
dec
push
int3
int3
sub
scas
and
or
jbe
cwtl
leave
loope
cmp
pop
dec
xchg
stos
mov
sbb
jl
push
addr16
icebp
and
adc
cmp
adc
push
mov
inc
sbb
push
notl
mov
or
add
in
std
fiaddl
add
imul
dec
dec
andl
ds
add
xor
or
add
add
decb
sti
loopne
mov
mulb
data16
repnz
arpl
sub
add
add
repnz
lret
cli
fidivrl
cld
adc
mov
repz
add
add
fists
clc
mov
mov
or
jle
iret
cmp
adc
mov
scas
push
xor
in
pop
mov
scas
inc
mov
out
dec
xor
aas
std
pop
sub
add
sub
add
add
cmp
add
stos
sahf
popa
pop
icebp
std
test
mov
push
mov
pop
je
mov
movups
stos
or
add
add
pop
mov
add
jp
push
add
add
jo
xor
add
call
mov
mov
fsubp
fdivrl
add
add
jns
jle
repz
arpl
or
add
add
fdivr
jecxz,pn
bound
call
add
add
add
jmp
push
movsl
sbb
mov
test
cmp
add
test
xor
dec
xlat
insl
and
int3
andb
fcmovbe
loop
add
mov
enter
call
adc
inc
add
add
add
jecxz
sbb
fidivl
mov
jnp
subl
mov
cs
pushf
and
shll
popf
sub
add
add
add
inc
add
add
leave
nop
pop
popa
xchg
xchg
xor
imulb
add
cld
inc
mov
mov
cmp
stos
test
add
add
add
sub
add
add
fisubl
sub
adc
or
popa
mull
add
mov
mov
out
xchg
mov
jb
fisubl
push
ja
pop
mov
mov
stos
sbb
mov
mov
sbb
mov
mov
add
add
sub
orl
adc
pop
mov
add
add
xchg
pop
mov
in
pop
push
sub
dec
mov
je
add
add
mov
add
push
push
mov
ljmp
aam
push
or
mov
fistpl
and
add
add
int
cmp
push
cli
rorb
outsb
int3
je
jge
fs
jl
fnstcw
or
jbe
dec
add
add
jb
sbb
test
std
enter
je
pop
popa
icebp
sub
add
pop
dec
sbb
mov
scas
lret
inc
fldenv
jg
cmp
pop
lahf
adc
and
cmc
jge
add
add
jmp
int3
xchg
cld
and
add
jo
xor
std
add
scas
cmp
push
lret
cmpsl
ficomps
jae
cmp
add
adc
mov
mov
in
mov
test
fisttpll
mov
jge
jae
xchg
add
add
add
fwait
bound
jno
iret
fnsave
pop
hlt
in
idivl
add
add
mov
sub
and
add
lret
add
add
daa
jl,pt
fbld
jge
add
add
adc
add
sbb
add
add
pop
sbb
cld
mov
jo
push
subl
cmp
jae
push
or
add
add
adc
pop
out
mov
dec
push
sbb
repnz
mov
xchg
hlt
aad
ret
mov
xor
jno
arpl
jae
cmpsl
sbb
aas
mov
int3
cltd
mov
repnz
mov
xchg
push
jle
out
test
cwtl
mov
dec
mov
cs
xor
xor
add
repz
push
insb
add
add
jle
iret
int
lock
jl
movsl
jb
push
jp
aaa
mov
out
mov
data16
cmp
dec
or
pop
push
fldz
mov
inc
mov
add
add
movsl
sahf
out
popa
movsb
push
mov
mov
or
add
add
add
xor
sub
add
add
add
add
mov
test
rclb
jg
fincstp
sbb
fidivs
addr16
icebp
and
add
add
sar
adc
dec
mov
add
dec
movsl
pop
cs
inc
add
add
sub
lahf
ret
lods
adc
das
dec
add
add
sbbl
mov
push
iret
sub
add
add
xchg
pusha
add
add
in
dec
add
enter
ljmp
sbb
dec
add
push
mov
scas
mov
out
jno
inc
repz
add
add
sub
dec
imul
imul
adc
add
dec
sbb
cmpb
xor
scas
add
add
add
add
jnp
adc
xor
fisubrs
jl
sbb
add
add
je
outsl
lret
mov
call
push
jle
notl
add
je
cmp
add
add
push
jb
ret
push
lret
mov
icebp
dec
add
add
sahf
push
inc
jp
icebp
jnp
iret
xchg
fwait
adc
cmc
shll
add
mov
adc
push
push
push
jnp
outsl
inc
jle
push
inc
mov
cld
lret
adc
adc
mov
mov
push
sub
add
add
or
add
mov
inc
fnstsw
xchg
pop
rcrb
jle
xor
add
add
push
inc
jne
nop
mov
lea
xor
mov
inc
sbb
rol
ja
inc
or
jo
or
mov
test
adc
fcomip
icebp
imul
sbb
fs
dec
inc
pop
xchg
lahf
pop
adc
iret
repz
scas
pop
sub
mov
dec
adc
jge
dec
sub
test
sbb
push
add
add
push
call
scas
popf
data16
cs
push
cmp
push
rolb
inc
pop
push
testl
mov
outsl
pop
push
dec
addr16
xchg
push
outsl
xor
scas
add
lds
out
or
or
push
xor
dec
shl
les
rorl
mov
fimuls
add
add
add
cld
repz
enter
ret
add
add
add
add
add
cmp
cmp
pop
subb
pop
dec
add
add
movntq
push
push
loop
xchg
add
or
add
add
jbe
adc
add
cmp
ds
jo
mov
dec
sbb
movsb
pop
and
mov
cmp
push
dec
ljmp
cmp
imul
pop
push
pusha
add
add
jo
shrb
add
add
inc
jnp
inc
mov
flds
xchg
cli
sub
add
add
pop
mov
add
sub
add
add
sub
cmpsl
add
aad
or
in
fidivrs
loope
mov
in
mov
and
popa
dec
xor
add
aam
sbb
cmpb
outsl
xlat
dec
push
cld
popf
insl
cld
andl
xor
jnp
ljmp
xor
mov
push
ret
inc
mov
pop
insb
add
add
jnp
pushf
ss
scas
movsb
test
cmp
push
sbb
mov
dec
push
pop
pop
push
sbb
xor
add
add
scas
faddp
push
and
test
movb
mov
add
add
lock
sbb
mov
cld
fwait
or
add
add
in
sbbl
outsb
jno
xchg
sub
add
add
mov
add
add
punpcklwd
or
add
add
push
jecxz
add
add
pop
lods
arpl
out
enter
add
add
add
xchg
jae
out
shlb
push
lret
scas
cli
std
cmp
and
add
add
add
add
sbb
fdivrl
mov
ret
inc
pop
imul
adc
mov
fsubp
mov
loop
jecxz
in
std
sahf
jl
mov
pop
sub
lock
out
cld
das
cld
aaa
push
and
add
add
and
das
xor
push
xor
add
inc
mov
xchg
sbb
mov
xor
data16
add
addr16
xchg
jnp
and
add
add
stc
inc
add
add
popa
lret
adc
add
add
or
outsl
sub
add
add
out
pop
stos
add
add
add
xchg
lods
xchg
in
sahf
aas
daa
sbb
xchg
js
or
add
add
and
sub
add
add
jb
mov
mov
iret
fistpl
cwtl
shrl
shrl
ljmp
in
adc
xchg
in
lahf
or
mov
lret
les
jae
fsubrp
sub
add
add
push
cmp
add
add
xor
into
rcr
push
sub
add
add
xchg
outsl
sahf
ja
inc
and
inc
pop
ret
xorl
mov
negb
shrl
xor
adc
mov
sub
sbb
add
mov
mov
aas
push
std
jb
roll
aaa
pop
sbb
or
add
mov
es
movsb
cmp
add
add
or
add
add
cmpsl
pop
daa
mov
int
loopne
rorb
cmpsl
push
mov
sbb
adc
lcall
sbb
dec
mov
std
sub
add
add
add
add
adc
or
add
add
jecxz
addl
mov
cmp
cmp
add
add
mov
scas
js
inc
jecxz
fldt
push
sbb
clc
lcall
mov
fwait
in
xor
add
stos
mov
dec
lcall
mov
add
add
add
fs
cmp
filds
or
iret
lock
add
add
or
movsb
mov
sbbb
mov
push
test
cwtl
imul
adc
add
add
pop
mov
addr16
lds
fsubs
adc
lds
sahf
repz
cmp
into
adc
jge
add
lahf
add
lret
iret
dec
pop
jp
mov
pop
cld
and
add
add
fdivrs
or
add
add
add
add
add
inc
dec
mov
cltd
push
add
jbe,pt
inc
mov
or
adc
mov
cmp
jae
gs
jb
and
mov
pushf
ljmp
dec
lods
std
shl
dec
mov
popa
lea
call
add
jl
ljmp
add
add
xchg
mov
push
int
inc
addr16
jno
inc
fldcw
mov
dec
inc
dec
xor
or
in
cmpsb
or
xor
push
push
sub
popf
rclb
mov
rorl
add
add
mov
out
ror
dec
in
add
add
popa
pop
cmp
test
add
mov
mov
inc
mov
std
lds
imul
cmc
add
add
push
jae
dec
lds
jbe
jnp
add
add
cmc
iret
or
stos
adc
mov
add
test
pop
or
add
add
push
ret
ret
out
mov
mov
or
add
add
pop
inc
adc
fcom
or
add
add
cmp
jb
jle
pop
clc
out
mov
std
xchg
lahf
xor
mov
leave
aaa
xchg
fildll
inc
addl
add
add
shll
stos
imul
sub
add
add
xchg
je
test
mov
clc
jge
lahf
cmpsb
sbb
or
add
ret
pushf
sahf
pop
popf
jg
push
xor
sub
aas
lcall
andl
inc
jle
sbb
mov
stc
out
jge
mov
or
add
add
jge
add
imul
sub
add
add
add
pop
inc
insb
mov
test
in
rcrb
jecxz
stc
insl
sbb
add
mov
add
add
repz
mov
in
mov
jo
aaa
jmp
add
xlat
xchg
cmp
xor
and
dec
fwait
xchg
and
add
add
add
mov
int3
cmp
arpl
add
icebp
add
in
aas
dec
and
pop
pop
jnp
push
push
cwtl
leave
cmpsb
repz
cmpsl
mov
jecxz
mov
mov
ljmp
add
add
ret
call
insb
add
add
mov
dec
test
inc
cmp
push
jl
or
add
add
mov
into
and
add
add
add
xlat
lcall
add
test
icebp
ds
and
dec
lcall
sarl
into
dec
mov
outsl
jae
xchg
mov
mov
cwtl
pop
popa
outsl
leave
adc
add
add
or
out
add
add
add
jnp
arpl
jge
daa
mov
popa
lahf
jecxz
mov
ljmp
xchg
and
add
add
add
clc
bound
cwtl
popa
mov
mov
les
add
add
add
add
pop
jne
jo
pop
inc
mov
out
mov
inc
add
add
out
xchg
add
cmp
push
jg,pt
repz
pop
xchg
xor
add
add
add
or
int
pop
stos
lret
shl
ljmp
add
cmp
jbe
and
add
add
mov
sbb
dec
and
add
add
jno
jl
adc
sub
add
add
adc
and
mov
loope
lea
dec
mov
frstor
add
add
cmp
aas
and
xchg
dec
xchg
int
sub
add
add
sbb
dec
mov
jo
repz
mov
adc
cmp
mov
popf
jle
out
ret
sub
jecxz
pop
sbb
out
repz
xor
push
sahf
cltd
call
add
add
xchg
jmp
mov
dec
dec
push
mov
popa
push
into
adc
add
fdivr
xchg
cmp
leave
adc
sub
add
add
cs
mov
push
out
shrb
add
add
lds
add
in
int
pop
fldenv
ret
mov
add
sbb
popf
out
mov
add
movsb
addr16
lret
gs
inc
pop
dec
ja
or
add
add
fwait
loopne
cmpsb
fcoml
shl
xor
xchg
add
xchg
sub
and
add
add
add
add
fxch
rcrl
cmc
xlat
xor
aas
push
mov
or
mov
mov
imul
pop
pop
cmp
cwtl
cli
sti
imul
flds
repz
lods
adc
dec
and
add
add
dec
and
add
jo
ja
pusha
mov
dec
xchg
mov
cli
out
jbe
push
js
pop
das
bound
add
add
mov
or
xor
add
dec
mov
rolb
xor
out
je
lret
jg
dec
bound
out
or
into
and
dec
mov
cld
pop
sub
add
add
add
add
dec
pop
mov
sti
adc
neg
push
cmpsl
lea
scas
sbb
lock
loope
xchg
in
test
add
add
sbb
push
inc
add
add
cwtl
std
push
in
fidivrs
je
xlat
lods
lock
inc
push
mov
add
add
in
and
add
add
clc
aad
xchg
addb
jno
test
gs
sub
dec
stc
sub
cmp
mov
mov
jp
add
add
pop
and
add
add
fs
cmp
xchg
jg
int
adc
inc
mov
pop
test
dec
mov
out
or
and
add
push
fs
sbb
add
add
mov
or
shrl
fwait
mov
mov
add
stos
or
add
add
add
add
add
roll
out
jbe
aad
sahf
mov
rorl
push
cmp
icebp
pop
insb
mov
imull
push
jle
mov
sub
push
repz
or
arpl
mov
mov
subb
inc
cld
out
lock
mov
xor
pushl
outsl
sub
add
add
push
mov
jbe
loopne
inc
mov
mull
add
add
outsl
daa
jo
dec
add
add
std
adc
scas
gs
jg
insb
add
add
test
in
aaa
je
bswap
repz
push
sbb
pushf
jg
mov
add
lds
stos
mov
mov
or
jl
loopne
inc
aaa
fldt
or
mov
add
add
ljmp
pop
je
pop
mov
xor
add
add
mov
sbb
jb
mov
mov
push
stos
cmp
xor
push
jecxz
mov
cmp
push
nop
dec
mov
dec
jp
add
add
cmpsl
dec
rclb
pop
dec
ret
push
cs
sbb
xchg
ja
in
cltd
fisttpl
ss
mov
add
add
add
pushf
outsb
adcb
hlt
fiaddl
add
aas
cs
push
pop
dec
adc
add
add
repnz
mov
inc
hlt
outsb
xchg
pusha
add
add
outsl
jle
sbb
xrelease
in
xor
mov
mov
mov
inc
lret
dec
mov
inc
sub
add
add
jbe
testb
std
ffreep
mov
ret
pop
xor
inc
fistl
inc
mov
pop
mov
inc
and
push
je
inc
ret
scas
repz
out
add
add
add
cli
fwait
xlat
aam
mov
outsb
loopne
repnz
add
add
popa
test
mov
xor
adc
add
add
stos
jae
cmc
ror
mov
repnz
icebp
lret
push
push
add
add
add
dec
mov
aad
cmpsb
xchg
and
add
dec
popf
arpl
js
shrb
add
add
loopne
arpl
and
add
add
imulb
mov
cli
imul
mov
aad
add
add
cmpsl
gs
cmp
jae
mov
fstpl
fmull
xchg
add
add
add
or
cltd
in
and
sahf
jmp
js
mov
add
xorb
mov
je
jns
push
call
ds
or
outsl
std
mov
add
add
and
mov
repz
leave
pusha
add
add
dec
fnstenv
test
mov
add
add
mov
mov
lods
inc
and
push
jle
pop
mov
jo
mov
loop
loope
icebp
and
push
xor
jae
inc
add
add
inc
jb
add
pop
mov
push
mov
push
sub
adc
add
or
add
add
add
test
add
add
sub
add
add
mov
cltd
shrl
pop
enter
pop
pop
aaa
fdivrs
jne
sbb
push
movsl
lret
xor
stc
stos
lods
das
lods
lahf
jns
mov
scas
push
fisubrl
sub
add
add
adc
add
add
pop
dec
add
add
xor
push
and
mov
pop
mov
sbb
jmp
inc
mov
nop
rorl
add
add
mov
stos
push
sbb
push
sbb
dec
add
add
adc
jecxz
data16
das
mov
mov
jnp
xchg
test
rclb
jmp
add
cmp
add
xchg
sub
mov
adc
mov
and
add
add
into
pusha
mov
pop
jne
nop
jae
jno
adc
popa
gs
jae
aam
fcoml
jge
push
add
popa
jb
stos
aad
mov
or
gs
adc
ss
inc
in
cmp
add
shlb
mov
int
push
movsl
dec
add
add
inc
mov
mov
mov
pop
push
dec
add
add
jl
mov
inc
cmc
inc
popa
sub
xor
test
cmpsl
xchg
das
cmp
push
or
add
add
inc
jecxz
pop
mov
add
aas
and
add
add
mov
add
add
mov
add
add
pusha
mov
sarl
mov
cmp
mov
jo
mov
outsl
shrl
mov
xor
scas
mov
jl
gs
jecxz
adc
fbstp
xor
jnp
sti
shrb
xchg
mul
mov
mov
mov
add
add
add
add
add
add
ja
push
cmp
mov
out
loopne
sbb
faddl
push
dec
cmp
dec
mov
std
jle
jno
bound
adc
push
inc
out
xchg
add
add
add
xchg
push
test
out
sbb
jg
stc
jbe
sarl
loop
and
loopne
pop
push
clc
inc
mov
jl
ja
out
mov
mov
push
std
jb
sub
mov
lcall
push
call
in
xor
inc
mov
xchg
adc
adc
add
mov
mov
dec
xchg
das
js
mov
add
mov
adc
stos
push
pusha
mov
fisttpll
ljmp
repz
ret
outsb
cmp
mov
lea
sub
xchg
pop
adc
addl
adc
mov
popf
stos
sbb
xor
xor
push
loopne
pop
pop
cmc
nop
sub
inc
popa
mov
fildl
pop
sub
add
add
insb
add
add
inc
mov
imul
and
ss
lock
andl
mov
push
jae
imul
jmp
sub
add
add
test
sbb
dec
mov
mov
push
movsb
jp
pushf
fisttpll
add
stos
xor
lods
test
jl
popf
jne
or
add
add
push
pop
test
mov
add
fistpll
pop
push
sub
push
rcr
mov
push
mov
mov
add
add
add
test
xchg
es
sbb
hlt
jmp
add
add
inc
lds
out
call
adc
cwtl
or
add
add
mov
mov
mov
lea
add
add
jnp
cmp
mov
sub
pop
push
js
pop
xchg
sti
jbe
adc
mov
add
imul
jno
outsb
mov
repnz
inc
add
mov
mov
shrl
sbb
dec
popf
xor
add
add
fwait
lods
inc
ja
or
mov
lret
ficompl
add
add
add
add
fdivrl
iret
fbld
add
rorb
xor
xchg
int
rorb
add
cmp
test
or
fstl
inc
mov
xchg
push
push
mov
gs
cmp
mov
out
in
mov
pop
testl
add
enter
mov
inc
cwtl
insb
mov
and
stos
addb
jne
lds
or
add
add
xchg
mov
out
add
add
mov
into
lds
cmpsb
lods
mov
cld
leave
aaa
and
mov
outsb
repz
pop
inc
adc
mov
pushf
jne
mov
cmc
js
xor
xor
inc
inc
add
add
add
mov
in
shl
or
lock
daa
add
lock
packuswb
ret
add
add
jb
jg
iret
test
mov
mov
pop
mov
pop
and
cli
mov
leave
xor
xchg
mov
add
sbb
pop
lret
bound
je
stos
movsb
mov
mov
cmp
fistl
fwait
jbe
rclb
add
add
jbe
sub
andb
aaa
gs
cmpsb
outsb
pop
push
xchg
jmp
pop
outsl
data16
xchg
cmpb
lret
idivl
inc
cwtl
aam
scas
lock
cmp
jp
xor
add
or
icebp
jp
and
add
add
push
add
into
push
call
pop
dec
test
sub
cmp
movsb
push
mov
and
paddusb
js
sar
mov
pop
je
add
add
dec
sti
repz
mov
or
push
rclb
sub
add
imul
movsb
push
xchg
pop
out
cltd
cli
jecxz
loopne
cs
inc
add
add
mov
and
add
add
dec
push
xor
inc
mov
add
add
loopew
sarb
movsl
inc
int
das
add
and
add
add
out
mov
imul
clc
insb
add
add
sub
add
add
rorb
ret
stos
xchg
mov
shl
aaa
push
cli
data16
clc
and
push
add
add
add
stc
ret
add
adc
add
add
lock
mov
sub
lahf
push
push
insb
mov
scas
js
lret
ljmp
daa
xor
mov
add
add
repz
add
add
and
add
add
mov
cltd
mov
and
pop
fidivs
add
add
lods
std
cmpl
sar
push
pop
insb
add
add
dec
mov
pop
dec
push
push
lahf
pushf
test
jne
mov
inc
push
jmp
gs
dec
or
add
add
mov
xchg
movq
add
add
fnstenv
add
add
daa
int3
testb
mov
scas
cld
add
and
inc
int3
mov
pusha
mov
jge
icebp
inc
mov
push
test
mov
fmull
add
add
gs
add
add
fistpl
add
add
xchg
imul
inc
adc
popf
cmpb
es
mov
cmpsb
addr16
and
push
mov
lahf
jae
mov
xchg
add
mov
pop
sarb
mov
dec
in
xchg
push
or
sub
add
add
cmc
cltd
jmp
mov
sbb
repnz
insl
cmpsb
sbbb
fbstp
jno
inc
add
add
fmull
fs
pop
inc
ss
mov
inc
xchg
inc
xor
xor
aas
movsb
insb
add
add
movsl
inc
add
add
outsl
pop
rcrl
loopne
test
cmpsl
push
sub
popf
adcb
pop
mov
outsb
mov
adc
add
add
jns
inc
in
add
add
popf
sbb
cmp
push
adc
mov
adc
int3
pop
xor
daa
pop
mov
daa
repnz
xchg
enter
jno
or
lods
fucomp
cmc
and
xchg
xor
add
into
aas
sub
punpcklbw
insb
add
add
cld
fadd
jg
cld
imull
mov
pop
hlt
pop
xor
adc
in
movsb
loopne
nop
jb
insb
add
add
mov
in
out
inc
imul
add
add
xor
push
jne
pop
outsb
imul
add
pusha
add
add
movsl
sbb
add
add
xchg
sbb
into
xchg
add
aad
mov
xor
lods
pop
dec
cli
ret
pushf
int
inc
pop
ficoml
push
push
gs
cltd
lds
cli
loope
shll
jns
out
sub
fldcw
cmp
push
jmp
mov
inc
xchg
pop
jbe
loopne
pop
xchg
push
insl
add
jg
adc
jne
andl
out
pop
insb
add
add
cli
mov
or
inc
mov
lcall
cs
sbb
test
adc
js
jl
test
add
arpl
stos
shrl
add
add
jnp
rcll
or
add
add
sbbl
adc
pushf
or
cmc
test
add
push
or
addl
push
loopne
mov
mov
jmp
add
add
add
test
pop
pusha
mov
shl
sbb
inc
cmp
add
adc
shrb
and
add
add
add
dec
loop
ss
push
ret
test
push
lret
cld
lock
mov
dec
or
add
add
pop
stc
movsl
pushf
adc
cmc
imul
add
sub
mov
adcl
hlt
sbb
dec
dec
add
add
xchg
lds
dec
je
add
add
hlt
dec
xor
sbb
fs
push
lahf
rcr
movsl
jae
mov
sti
push
push
add
add
add
dec
push
sbb
inc
or
add
add
add
sub
add
add
xchg
mov
popa
lcall
scas
and
aas
and
add
add
xor
fildl
scas
inc
in
lea
push
jge
sbb
jnp
pop
dec
in
mov
jb
cwtl
daa
mov
and
cmp
test
test
in
hlt
mov
ljmp
push
movsl
shl
or
in
inc
and
push
stos
popa
inc
lds
inc
push
mov
aas
dec
xchg
inc
sub
add
add
cli
test
add
add
push
xchg
fldl
add
sar
cmp
add
outsl
enter
add
add
adc
int3
push
dec
jg
aaa
adc
xor
aad
stos
rcr
pushf
sub
lds
mov
or
add
add
dec
sub
sub
add
add
mov
loope
lahf
negb
jp
mov
outsb
pop
mov
add
xchg
mov
mov
fmuls
add
add
inc
call
add
mov
mov
dec
mull
cmp
adc
sti
or
jmp
dec
add
add
js
dec
mov
dec
add
add
push
in
mov
jb
ss
pop
cmpsl
add
pop
inc
mov
cltd
sbb
add
add
push
mov
add
add
sub
add
add
mov
movsb
push
out
push
cmp
add
add
fwait
sub
icebp
mov
sub
fsubs
adc
inc
mov
mov
dec
jmp
add
add
aas
pop
adc
sbb
dec
lcall
add
int3
mov
adc
sub
movsb
adc
xor
or
aad
movb
add
cltd
mov
add
add
xorl
hlt
inc
add
add
das
sbb
or
mov
pop
push
inc
cwtl
or
add
add
mov
pushf
mov
jns
inc
cltd
mov
add
jg
cmp
inc
sar
test
mov
inc
outsl
cmp
add
stos
lods
pop
outsl
xchg
clc
cmp
add
add
loop
or
add
add
jae
pusha
mov
add
add
add
sub
jae
mov
outsl
adc
lods
lret
je
jno
jle
xchg
ds
add
mov
pop
push
das
adc
push
cmpb
xor
add
pop
push
mov
lds
push
ret
push
mov
add
cmp
xchg
fsubrp
xchg
dec
push
in
je
add
cld
mov
add
add
cli
dec
mov
bound
pop
pop
cli
xchg
pushf
mov
cwtl
or
add
add
add
lds
or
testl
push
xchg
in
inc
add
add
imul
add
fisubs
jge
push
fwait
ret
cli
jmp
pop
repz
stos
int3
or
add
add
add
add
cltd
pop
ss
mov
add
add
add
iret
push
leave
sub
add
add
add
mov
outsb
and
add
add
push
mov
mov
fdivrl
push
test
shll
sub
sub
push
push
xor
mov
push
pop
rcll
pop
mov
add
sbb
add
add
pop
xchg
sub
or
push
ja
in
xchg
mov
jl
jbe
movsb
cmp
cli
inc
filds
add
add
cli
push
and
add
add
lret
cmovne
fstps
add
cmpsl
out
cmpsl
stos
inc
mov
test
inc
add
add
mov
pop
sbb
add
aam
enter
mov
mov
test
jle
mov
ss
add
add
cmpsl
xlat
xchg
test
les
xchg
sbb
addl
mov
lock
add
add
jle
sbb
add
add
mov
xor
cmc
or
add
add
add
dec
mov
add
cmpsl
aaa
push
cmpsl
repz
jmp
add
add
insb
add
add
push
sbb
cwtl
repz
inc
and
cwtl
adc
scas
in
data16
clc
mov
mov
pop
xor
xchg
insb
add
add
and
xchg
iret
adc
add
repnz
add
add
cld
mov
add
add
push
push
adc
push
mov
cwtl
and
xor
mov
shrl
movsl
push
out
test
mov
loope
shr
jl
ret
mov
fwait
mov
add
add
add
fcomp
jno
mov
pop
ja
mov
add
add
xchg
into
adc
mov
shrb
loop
mov
paddsb
push
cs
dec
mov
xor
add
add
push
pop
cld
mov
clc
push
mov
fidivrs
jne
daa
sbb
push
mov
add
jg
xchg
imul
icebp
adc
push
in
ds
inc
inc
add
add
or
add
add
shrb
xchg
add
push
adc
scas
fwait
addr16
add
add
shll
loope
cld
fdivrl
dec
loopne
mov
in
jae
int3
stc
push
add
jae
mov
rcrb
mov
dec
mov
mov
enter
add
mov
popa
dec
dec
mov
cmp
insl
stc
dec
mov
shlb
sahf
fs
imul
jge
add
sub
aam
mov
rcr
or
mov
xchg
dec
fdiv
mov
in
pop
or
cmpb
lea
mov
dec
rcll
mov
sub
add
add
int3
lcall
std
inc
push
rclb
inc
add
add
hlt
mov
repz
stos
add
stos
cmpsl
outsl
mov
sub
roll
adc
dec
sarb
into
fnstenv
xchg
add
stos
aad
xor
lock
xchg
mov
sub
add
aam
and
aaa
push
xchg
mov
mov
xchg
cmpsb
imul
cs
aaa
mov
adc
out
int
mov
pop
dec
add
add
test
lret
push
addr16
lods
pushf
call
aam
lcall
neg
repz
add
jge
add
add
sub
add
filds
in
es
fsubp
xchg
mov
ds
xor
add
das
xor
add
pop
aad
mov
add
add
add
and
add
add
add
adc
clc
cmp
push
adc
mov
nop
arpl
ljmp
dec
add
xchg
pop
jne
test
push
jnp
pop
inc
out
int
aaa
inc
mov
fsubrl
movsb
test
pop
sbb
icebp
mov
ret
test
test
sub
or
mov
add
mulb
jge
mov
add
add
gs
rcrb
mov
add
inc
push
cmpsb
xchg
das
sbb
inc
lea
add
add
add
adc
fbstp
push
add
mov
add
sbb
inc
roll
mov
lcall
push
cmpsb
mov
pop
push
cmp
shrl
mov
pop
call
xor
inc
mov
rcll
ss
jo
mov
arpl
dec
add
add
iret
cmp
xchg
jb
pop
gs
mov
or
add
add
push
push
sti
and
add
dec
xor
mov
fcomi
je
imul
pop
add
add
lret
dec
fisttpll
add
add
cli
test
std
mov
inc
pop
pop
lret
aad
sti
testb
jle
mov
or
add
add
in
jno
add
add
test
add
add
push
xchg
cmp
in
cmp
aas
nop
in
xor
push
pusha
mov
mov
data16
setae
pop
and
xor
leave
test
push
movb
jne
mov
enter
cmp
cmp
in
pushf
ss
jne
fwait
jl
cmpsl
lcall
xchg
jl
jmp
and
add
dec
jbe
push
pop
lock
and
xor
enter
cmp
cld
repz
add
add
lods
stos
inc
scas
scas
sbb
push
addb
outsl
idivb
cmp
sahf
or
sbb
shrb
aas
xchg
stos
in
fdivl
jp
outsb
adc
pop
adc
mov
insb
mov
push
pop
push
addr16
add
add
fisubs
cwtl
lcall
fs
pop
test
add
add
or
pop
divl
repz
add
add
lea
mov
push
sub
mov
adc
es
pop
sahf
mov
add
add
jecxz
mov
movsl
shrl
inc
pop
icebp
aaa
fwait
nop
aas
pop
xchg
insb
add
add
mov
inc
icebp
or
and
add
add
jmp
dec
mov
mov
movsb
adc
imul
add
add
push
jae
test
sbb
xchg
std
jge
aaa
addr16
fcomip
hlt
mov
mov
aam
xlat
and
jle
rorb
xor
mov
fistpll
popa
repz
mov
add
add
cli
imul
pop
ds
daa
ljmp
movsl
adc
in
int
jle
mov
jp
fcomps
adc
sub
fldt
mov
cli
aam
fmuls
add
add
add
add
xchg
pusha
mov
ss
and
mov
movsb
and
mov
aad
sbbb
into
stc
and
nop
adc
add
push
leave
xchg
cmp
pop
xor
cmpsl
pop
and
roll
ficoml
repnz
jae
inc
cmp
call
imul
add
add
or
lcall
gs
fs
loop
in
sbbl
mov
testb
jae
xchg
mov
ljmp
je
fs
mov
and
add
add
or
jb
repnz
insl
dec
mov
sbb
jbe
mov
xor
xchg
add
add
add
push
fdivl
jne
dec
fidivrl
mov
adc
pop
and
add
add
push
aad
cmp
call
add
out
sub
and
jae
ret
xor
shl
push
xchg
aam
cmp
mov
in
mov
mov
mov
add
add
and
add
add
add
add
xor
push
xchg
sub
imul
add
add
fwait
pushf
and
xor
and
add
add
add
add
repnz
aaa
cmp
shrl
test
popa
jmp
mov
sbb
mov
push
pop
sti
addr16
stos
fdivrl
das
sti
xlat
jp
and
push
movsb
dec
xor
and
add
add
test
std
mov
add
std
or
add
add
hlt
test
mov
ljmp
add
add
jae
into
cmp
sbb
mov
jecxz
cmp
fists
test
add
adc
push
call
push
daa
mov
outsb
ja
mov
rorl
sbb
je
bound
jge
rolb
add
add
cmp
adc
mov
add
add
cs
mov
jl
out
xor
lea
add
push
pop
push
jg
int
pushf
mov
xor
es
enter
add
add
in
lret
jle
push
xchg
mov
add
pop
or
add
add
addb
add
add
lcall
add
add
mov
cmpsl
test
mov
add
sub
ret
mov
fcmovnb
fnstsw
adc
sahf
mov
rcl
add
jge
ljmp
shll
mov
pushf
add
add
xchg
into
aam
sar
sbb
in
fnop
cmp
cmp
cwtl
cli
je
insl
jbe
and
add
add
mov
dec
test
in
adc
inc
add
add
cmpsl
aas
push
xchg
cmpsl
jns
sbb
sub
sbbl
loop
mov
xchg
push
and
aas
lock
add
pushf
pop
test
xchg
jmp
adc
nop
adc
cmpsl
loope
leave
out
mov
xchg
stos
fwait
mov
adc
jo
or
add
add
ffree
decl
push
ja
pop
mov
test
push
xchg
aas
enter
push
je
jno
les
movsl
mov
std
and
add
add
mov
and
add
add
xor
xor
aad
out
movsb
stos
add
add
ficoms
jae
sarl
add
add
add
add
add
push
mov
mov
mov
shrl
add
add
mov
dec
js
daa
test
add
cmp
mov
cmc
xlat
das
jno
jo
xchg
mov
es
cltd
leave
dec
das
pop
xchg
mov
es
test
sub
add
add
pop
xchg
mov
fcoms
push
mov
movsl
sub
shr
into
or
xchg
or
mov
inc
add
add
js
cmp
mov
xor
add
add
mov
inc
jbe
add
fisubrs
jae
movsl
test
add
lahf
sbb
add
cmpsl
push
jne
inc
pop
jae
ss
dec
jmp
fxch
push
inc
dec
push
fidivl
sbb
scas
jo
pop
mov
mov
push
fildll
adc
and
fimull
mov
add
add
inc
or
xchg
xchg
lret
sbb
out
dec
mov
mov
addr16
pop
push
mov
push
add
add
enter
add
add
add
xlat
sbb
push
mov
out
pop
inc
adc
clc
push
and
add
add
mov
and
add
add
mov
sbb
sahf
clc
jno
mov
sbb
movsb
mov
mov
lahf
stos
push
js
pop
sub
sbb
cmp
add
add
cmpsl
sbb
pop
mov
mov
jne
fidivl
add
xlat
xchg
xchg
in
add
push
adc
lods
mov
int3
pop
and
add
xor
dec
add
add
mov
in
cltd
aas
scas
xor
nop
int3
in
aad
mov
adc
add
sub
lods
xchg
xor
cmp
add
add
push
mov
ljmp
aam
cmc
ja
and
add
add
sahf
xchg
jae
jb
orl
add
add
dec
and
repz
shl
sbb
add
negb
add
add
add
add
xchg
add
add
add
push
lock
jbe
aaa
and
out
add
add
push
or
add
add
mov
pop
pop
or
add
add
push
push
dec
movups
add
add
mov
into
sbb
imul
add
sahf
leave
in
xchg
push
xor
xchg
sbb
shlb
pop
ja
push
lcall
imul
push
or
shll
and
add
add
dec
outsl
mov
mov
xchg
adc
add
fsubl
cwtl
test
xorb
jle
ret
add
mov
adc
add
add
xor
pop
out
enter
add
add
call
add
add
movsb
orb
xchg
lcall
call
gs
rorb
sbb
in
rcrb
add
leave
lock
fmuls
ljmp
pop
push
negl
sbb
icebp
sbb
cmc
and
stos
fnsave
mov
xchg
push
mov
cmp
or
add
add
imul
add
pop
notb
incl
xchg
jo
xor
add
add
sbb
std
mov
jo
ss
ljmp
pop
fucomi
cmpsl
hlt
test
das
sbb
iret
fidivrs
lea
xchg
add
sub
and
icebp
pop
clc
and
add
lods
in
and
add
add
jno
mov
add
add
flds
dec
rcrb
add
insb
add
add
xchg
inc
xchg
xchg
repnz
int
std
mov
xor
push
repnz
add
add
add
loopne
int
leave
fdivr
ljmp
and
add
add
rclb
ret
leave
fwait
rcrl
sahf
movsl
and
or
inc
arpl
aaa
ss
mov
enter
arpl
je
mov
decl
mov
and
fsubl
cmp
sub
cmp
mov
add
add
add
xchg
add
add
add
lea
inc
inc
lea
xchg
jae
mov
inc
and
add
add
mov
std
int3
hlt
mov
repnz
cmp
add
and
xor
test
cld
in
jae
mov
mov
push
push
inc
mov
mov
dec
cmp
xlat
sbb
xchg
popa
mov
add
daa
fidivrs
lcall
add
add
push
pop
fcomps
mov
mov
cmpsl
push
mov
jno
dec
mov
nop
or
inc
subb
cli
mov
pushf
sarb
dec
insl
cld
push
insl
pushf
test
add
add
add
outsl
and
rolb
inc
cmpsl
test
add
add
adc
push
aad
test
outsl
mov
add
jbe
adc
jle
mov
into
daa
dec
mov
test
inc
xlat
test
jecxz
xlat
loop
jl
and
add
add
or
insl
adc
push
fwait
xchg
mov
push
sti
sub
je
xor
ljmp
mov
add
add
or
mov
lock
xorl
add
mov
flds
mov
outsb
and
add
add
add
stos
mov
sbb
pop
jb
mov
jmp
inc
add
add
sub
int
dec
aaa
and
jae
mov
jg
popa
shrl
push
pop
in
add
add
das
mov
iret
jo
int
nopl
add
fstpt
add
cwtl
fisttpll
sub
mov
ror
inc
mov
pushf
jl
into
and
add
add
mov
cmp
add
add
insb
mov
mov
test
data16
inc
dec
test
add
add
jmp
aad
add
add
jmp
jb
daa
in
push
pop
jg
dec
sub
push
popf
stos
dec
jo
sbb
add
in
test
pop
fadds
add
add
add
add
fucomip
les
mov
aaa
push
decb
mov
mov
pop
sub
push
xchg
fstps
xor
ret
cwtl
xchg
aam
mov
mov
dec
enter
jo
cld
sub
add
add
mov
cmp
add
add
jo
push
xchg
cmp
mov
add
test
push
int
adc
adc
add
add
xor
int
rclb
dec
loop
aas
and
jg
mov
dec
add
add
pop
adc
add
mov
and
add
add
or
add
add
shll
add
add
aaa
push
cmpsb
xor
pop
pop
mov
sub
add
add
or
xchg
or
mov
add
add
push
jmp
fstpt
test
iret
xchg
test
mov
jp
outsb
loope
call
dec
sub
test
cwtl
nop
pop
movl
mov
push
mov
push
mov
cltd
imul
sbb
andb
add
vmwrite
hlt
cmpsb
lea
mov
add
add
hlt
mov
shlb
add
add
fstps
ss
and
mov
popa
cmp
out
imul
jo
loop
inc
mov
test
xchg
pushf
lea
inc
add
cmpsb
xor
and
add
call
push
xchg
lds
test
mov
fld
inc
inc
cltd
mov
incb
ret
cmp
js
xchg
dec
xchg
rcrb
setp
sub
add
add
push
xchg
xsaves
andb
add
js
cmp
fisttpll
and
xor
popa
aaa
incl
add
mov
mov
and
add
add
sbb
add
insl
cli
mov
mov
addl
call
and
sub
add
add
or
add
add
mov
push
push
push
ja
cld
js
fcoml
data16
mov
add
add
add
in
push
in
cmp
dec
xor
xor
jp
out
mov
arpl
subb
jb
in
push
jle
into
add
dec
mov
fcomps
add
sub
dec
ja
insb
mov
aaa
scas
sub
add
add
scas
popa
fildl
lods
xor
clc
or
call
sub
sbb
add
add
pop
fdivrs
sarl
xchg
lods
xchg
jnp,pt
mov
and
inc
pushf
and
push
pop
mov
sub
jecxz
cmp
out
dec
xchg
push
int
pop
rcrb
add
test
xorl
add
add
add
add
pusha
mov
jae
lea
fsubl
add
add
jb
stc
enter
add
pop
shll
push
push
xchg
test
add
xchg
inc
add
add
jmp
add
add
nop
call
insb
mov
test
aam
or
add
mov
cmp
xchg
sti
pop
pop
movsl
mov
pop
popa
xor
add
add
test
adcb
test
test
sbb
xchg
inc
push
cmp
add
aaa
enter
add
push
xor
sub
test
push
xor
xchg
lock
add
add
add
add
out
pop
inc
mov
popf
imul
mov
nop
sub
add
add
imul
push
pop
loop
mov
dec
pop
ljmp
xchg
sbb
fs
les
xchg
cld
xchg
jns
sbb
int3
push
pop
push
pushf
sub
std
fsubrp
fsubl
daa
mov
push
movsl
and
cs
fstpt
out
pop
fnsaves
sarb
ds
xchg
sbbl
mov
add
lock
aas
cmp
xchg
mov
add
mov
xchg
mov
inc
add
add
inc
cmp
add
add
cltd
arpl
bt
pop
push
inc
into
add
push
test
mov
cmp
add
mov
pop
call
add
add
add
sbb
out
int3
jnp
mov
sbb
push
sbb
out
rol
loope
add
add
add
add
add
and
pusha
mov
add
add
in
clc
insl
mov
inc
push
mul
jp
jp
xor
ja
mov
test
add
add
xor
add
test
add
mov
inc
clc
sbb
mov
add
add
or
mov
or
push
loopne
lret
mov
test
xchg
fmul
inc
imul
je
jb
mov
and
cmp
add
add
sti
mov
pop
lcall
ds
add
add
push
cmpsl
mov
add
add
ror
popf
imul
push
scas
jge
adc
push
sub
add
in
xchg
test
add
add
push
imul
jg
and
add
addb
lret
dec
mov
jnp
lahf
or
add
add
add
pop
sar
mov
sbb
mov
mov
xor
add
add
add
add
ljmp
jne
loope
and
add
add
add
add
sbb
dec
mov
cwtl
sbb
lods
and
cmpsl
loopne
add
add
add
jge
lods
sbb
incb
pop
push
add
add
add
add
cmp
add
lods
enter
jecxz
inc
add
add
and
add
cli
in
cmc
test
loop
mov
inc
ss
scas
xchg
test
jmp
add
add
fs
cld
cmpl
adc
aam
push
push
or
test
mov
mov
in
lock
xchg
xchg
scas
push
push
adc
mov
mov
add
add
fisubl
in
adc
xchg
out
xor
add
add
adc
dec
test
mov
dec
jns
out
out
inc
ss
rolb
mov
jg
xchg
imul
lcall
and
add
add
xor
xor
cmpsl
push
je
mov
jns
jno
jmp
loopne
enter
in
jmp
push
in
pop
bound
add
pop
idiv
filds
pusha
add
add
out
push
xchg
negl
inc
pop
incl
xor
pop
mov
xchg
aas
jle
pop
hlt
aam
push
test
out
es
xchg
jne
mov
or
sbb
fwait
inc
add
add
repnz
jns
mov
es
hlt
mov
and
add
fldt
push
call
add
dec
into
andb
mov
or
add
add
add
push
in
add
add
dec
jp
gs
xchg
ljmp
add
add
jge
pop
ljmp
pop
out
outsl
dec
lahf
or
add
add
addr16
add
adc
add
out
arpl
lods
xor
ret
add
add
cmp
in
jb
adc
xor
lods
test
push
adc
adc
add
add
or
xlat
outsb
shll
loop
orb
sub
insb
add
add
push
mov
xlat
clc
jecxz
sub
add
add
add
mov
add
add
aad
lcall
add
and
add
add
inc
test
and
add
add
lods
cs
mov
mov
mov
addr16
ljmp
add
ficoms
add
jmp
dec
insl
subl
iret
inc
pop
mov
lods
gs
ficomps
cmp
hlt
jecxz
add
add
shl
aaa
stos
jne
fcompl
jge
icebp
subl
add
add
adc
pop
cmp
xor
add
add
int3
cmpsl
mov
pop
xlat
lcall
outsl
les
mov
mov
cs
inc
mov
add
add
ret
xchg
pusha
mov
aam
lock
jb
jns
mov
add
cmp
add
add
in
aas
pop
jae
push
cli
and
add
sbb
xor
inc
push
or
add
add
dec
sbb
call
out
and
add
add
lds
mov
and
bound
mov
iret
and
adcl
add
push
inc
add
add
scas
inc
xchg
jg
add
add
xchg
sbb
pop
aas
or
lret
jns
pusha
mov
sysret
insl
addb
adc
sbb
mov
stc
jne
pop
shrb
jae
sbb
fs
jns
and
push
xchg
lret
fwait
sarb
xchg
addl
add
sub
insb
mov
ljmp
orl
mov
add
add
add
mov
dec
push
dec
add
add
cltd
push
pop
mov
rcl
xchg
fmuls
mov
xor
jg
test
mov
mov
inc
lcall
mov
test
mov
mov
push
sbb
aaa
cmpsl
das
andl
add
ret
fdivrl
add
jns
inc
imul
push
sbb
test
or
stc
pop
out
mov
dec
or
add
add
icebp
jge
jns
or
inc
mov
iret
push
xchg
hlt
inc
mov
push
xlat
in
ffree
das
jns
mov
or
rcl
pop
pushf
and
mov
aad
adc
mov
in
fcmovne
inc
add
add
fwait
out
cwtl
jo
jne
cltd
addr16
mov
clc
jno
mov
aas
mov
add
add
add
lods
pushf
loope
popa
add
xchg
xchg
inc
mov
add
add
dec
dec
dec
std
jno
push
xor
cmp
loope
imul
pop
inc
add
add
xchg
mov
test
xchg
loope
mov
inc
mov
push
adc
aad
sti
lods
outsl
mov
mov
mov
mov
pop
and
add
add
xor
push
xchg
andl
mov
mov
aaa
dec
push
scas
pop
or
add
add
xor
hlt
and
fisubs
add
add
add
add
xor
pop
ret
xor
imul
mov
or
add
add
mov
dec
repz
push
sahf
ljmp
repz
jbe
clc
pop
or
add
add
pop
std
stos
pop
jae
aaa
xchg
lret
or
push
pusha
mov
cmc
sbb
hlt
movsl
mov
inc
mov
add
add
fistpll
xchg
lahf
movsb
xchg
pop
scas
mov
dec
loopne
cmpsl
mov
std
xor
fsubrp
pop
jge
jno
push
iret
xchg
jecxz
mov
sti
pop
sub
and
xor
and
add
add
mov
sbb
xchg
and
cmp
and
add
add
add
test
flds
mov
add
add
jmp
add
add
add
fs
xor
enter
xchg
loope
xchg
mov
add
add
call
mov
insb
mov
and
add
add
dec
stos
cli
xchg
lock
pop
mov
jecxz
pushl
cmpsl
scas
movsl
dec
aas
inc
jns
cs
push
dec
add
add
add
add
shlb
push
sahf
lods
jne
mov
shr
stc
test
icebp
leave
stos
cmpsb
mov
mov
mov
add
add
mov
push
jns
icebp
mov
add
mov
push
sbb
out
cmc
or
add
add
mov
push
jbe
add
ds
sbb
add
add
das
or
mov
cld
ljmp
int
add
add
imul
add
ffree
test
repnz
cmpb
ljmp
ds
inc
inc
jmp
cmp
dec
inc
out
imul
imul
sub
add
add
adc
push
mov
mov
pushf
and
test
outsb
xor
aas
or
add
add
call
push
ret
mov
scas
mov
or
in
aas
push
cmp
jnp
mov
push
cwtl
mov
or
add
add
lahf
jge
and
add
ss
cld
ret
add
add
fwait
mov
cmp
adc
cld
mov
out
and
or
jl
sahf
push
push
add
fstpt
or
add
add
xchg
idiv
xlat
mov
sbb
cmp
add
add
add
bound
jge
jbe
insl
cmp
add
lret
iret
pop
into
mov
ljmp
add
add
inc
add
stc
mov
leave
sub
or
add
add
cli
fsubrl
arpl
mov
push
xchg
les
in
jge
add
add
add
add
add
cmp
xor
push
and
add
add
movsb
ljmp
mov
add
xor
lret
pop
xor
jmp
mov
sbb
push
mov
mov
aaa
in
daa
in
es
pushf
stc
cmp
pop
xor
mov
arpl
aad
lret
xlat
addl
test
insb
mov
sub
mov
add
adc
inc
shl
push
loope
push
mov
add
add
scas
repz
jae
incb
mov
jno
imul
adc
xor
sbb
lods
cmp
jp
js
add
movsb
cmpsb
fbstp
addb
xchg
inc
add
add
shll
lock
pushf
jmp
icebp
xor
jl
push
mov
and
add
add
jl
je
rorl
mov
sti
adc
js
mov
add
hlt
mov
mov
add
add
cmp
mov
mov
sub
stos
add
cmovne
add
add
xorb
test
paddb
outsl
mov
jmp
mov
pop
in
sbb
push
icebp
das
and
push
stc
mov
inc
fadds
mov
movsl
dec
es
dec
add
add
inc
repz
mov
add
fcmovne
in
ret
pop
mov
push
and
xor
mov
repz
imul
jl
movnti
stc
cmp
push
sub
es
add
add
sbb
call
xchg
int3
xor
inc
mov
add
shrb
add
add
sahf
test
add
dec
add
add
sahf
sbb
xor
in
mov
sub
test
add
dec
jno
mov
insb
mov
sub
lcall
pushf
int
popa
sub
add
add
or
lahf
and
stos
lret
loop
mov
add
popa
pushf
inc
jo
jmp
mov
add
nop
rorb
mov
jmp
add
adc
sar
mov
shrl
push
bnd
jecxz
xchg
push
lods
and
lea
lahf
push
adc
xchg
jmp
mov
mov
rol
insl
ret
popa
mov
and
sub
mov
shrl
add
push
frstor
lcall
popa
sti
xchg
arpl
add
add
jo
sbb
jmp
add
push
mov
jmp
loop
mov
nop
adc
inc
push
mov
nop
popa
dec
rcrb
fildll
add
aaa
addr16
jg
arpl
int3
pusha
add
add
mov
repnz
pop
cmp
sbbb
in
in
push
push
mov
cmp
insb
add
add
fs
jl
pop
sub
ret
sahf
jne
cmp
movsb
mov
mov
incl
add
add
pop
and
add
add
bound
jg
lret
adc
mov
push
out
or
lods
jo
push
push
mov
xor
mov
dec
fdivl
push
mov
xor
mov
dec
sub
add
add
sub
pop
or
insb
add
add
fsts
ds
ja
pop
or
add
add
fwait
pop
mov
sahf
cltd
adc
test
lret
cmc
call
add
add
add
into
loop
repz
add
add
cwtl
insb
add
add
dec
sub
add
add
jns
sbb
dec
hlt
es
xor
loop
xlat
mov
xchg
and
or
sarb
push
scas
repnz
sbb
jns
lock
ret
repnz
popf
imul
pop
lret
test
rcrl
ja
sti
mov
adc
xor
mov
stos
icebp
dec
add
add
xor
adc
jle
mov
mov
andl
mov
jl
cld
clc
popf
scas
arpl
repnz
adc
popf
in
push
fidivs
add
rdpmc
mov
in
ret
cltd
icebp
cli
dec
jle
and
aaa
ljmp
mov
das
push
jb
out
call
jmp
mov
or
iret
dec
pushf
jl
test
lods
dec
add
flds
xor
add
add
jae
arpl
add
outsb
ljmp
mov
add
jp
mov
mov
lret
pop
mov
int3
shlb
int3
pop
sub
add
add
add
push
mov
loope
dec
ret
outsb
xor
mov
rclb
fisttpl
add
add
lds
xchg
mov
push
and
xchg
das
sti
xchg
scas
rolb
fnstsw
and
add
add
aas
xchg
lds
stos
insb
add
add
push
test
insl
xchg
mov
mov
add
mov
jmp
add
inc
jne
repnz
add
add
pop
fsubl
add
add
add
lods
mov
sub
push
inc
aam
inc
in
repnz
adc
aam
cmp
adc
add
add
cmp
inc
mov
mov
sahf
xchg
cmp
jge
xor
stos
cli
div
scas
lcall
addb
adc
stos
or
dec
cmp
insb
add
add
outsb
cs
jo
jbe
push
jae
imul
lods
inc
mov
outsb
mov
add
and
mov
test
mov
cltd
and
adc
shlb
add
add
add
add
cmpsl
inc
cmc
fadd
mov
ja
add
jne
pushf
sub
cwtl
lcall
xchg
scas
ret
jp
adc
add
add
add
add
add
adc
add
add
add
cltd
cmp
cmpl
out
adc
out
adc
xchg
test
xchg
xlat
lds
mov
sub
adc
pop
mov
dec
add
add
stc
jmp
fmul
push
lods
mov
imul
add
add
add
add
jmp
aas
push
rcl
in
add
add
add
sub
or
stos
mov
test
sub
jne
jno
dec
inc
lret
ss
mov
lds
dec
daa
sahf
lds
add
add
mov
fwait
mov
adc
and
push
xor
cs
mov
mov
mov
stos
pop
jle
xor
adc
or
add
add
mov
mov
mov
cmpsl
mov
xor
aas
mov
mov
mov
xchg
rclb
aaa
aad
leave
mov
mov
sbb
add
add
leave
sti
clc
and
pop
dec
jecxz
inc
jg
xor
add
ss
addr16
imul
nop
cmp
rorl
add
add
adc
mov
mov
push
out
cs
out
push
cmc
insb
mov
scas
sub
mov
jecxz
out
std
mov
mov
and
add
andb
add
jb
mov
cmp
addl
xchg
cmc
inc
mov
mov
aaa
lods
addr16
movsl
sub
add
add
mov
shrb
data16
lea
xchg
add
divl
add
mov
mov
sbb
xor
mov
fmul
cltd
sub
or
add
add
jbe
ja
dec
jp
insl
or
cmpsb
call
cmpsl
and
add
xor
shr
push
mov
add
add
call
add
or
inc
clc
add
sti
adc
pop
and
xor
cmpsl
dec
mov
iret
aam
jmp
cmp
and
ljmp
push
or
sbb
clc
leave
test
rclb
into
loop
shrl
mov
pop
jl
or
fiaddl
mov
addr16
les
push
cli
les
enter
sbb
dec
hlt
mov
mov
mov
mov
icebp
mov
inc
add
add
ds
clc
mov
jno
mov
mov
xor
add
add
fwait
mulb
pushf
xor
movsl
xchg
push
fwait
or
add
add
pop
mov
lahf
mul
and
adc
mov
jecxz
sub
dec
testb
mov
fmull
sahf
jne
aaa
sbbl
mov
pushl
pop
sti
adc
pop
xor
add
dec
add
add
sbb
movsl
mov
add
test
test
pop
xchg
dec
les
xorl
pop
mov
add
jp
ret
lret
out
sbb
sar
subb
cmp
lea
jecxz
mov
push
divl
xchg
jge
inc
add
add
shrb
add
add
push
cmp
in
aaa
mov
cli
pusha
mov
pop
jl
inc
stos
cli
stc
push
xchg
xlat
sub
add
add
mov
mov
dec
sub
pusha
mov
test
pusha
add
add
daa
insb
mov
jno
xor
mov
mov
add
add
add
add
shl
scas
imul
int3
push
fmul
addr16
ds
add
add
sti
mov
jecxz
mov
jb
sahf
outsl
add
add
add
dec
sub
mov
mov
add
xor
mov
add
add
push
clc
sahf
dec
mov
movhps
add
add
jb
and
mov
xor
sub
jns
inc
sub
add
or
dec
push
pop
jo
add
add
add
jo
scas
ficomps
scas
cmp
add
add
cs
or
rol
ljmp
add
push
repnz
sub
jg
out
or
add
add
push
mov
aaa
inc
add
add
aam
pop
in
sub
adc
push
xchg
je
addr16
and
fnsave
add
rorl
add
add
jbe
rolb
jns
dec
mov
aas
and
ljmp
negb
push
imul
mov
cld
mov
add
add
adc
out
lahf
faddp
aaa
mov
shl
sbb
mov
add
add
mov
mov
or
add
add
jnp
mov
lock
addl
dec
mov
sahf
xor
adc
out
popf
sbb
ss
test
add
mov
and
mov
hlt
scas
out
sbb
xor
rcr
push
ret
mov
or
add
mov
adc
mov
push
xchg
add
inc
add
add
mov
adc
add
add
xchg
add
add
add
push
push
mov
add
scas
dec
test
sbb
xor
lcall
cmp
test
outsl
xchg
add
jae
jno
push
push
xchg
adc
dec
xchg
adc
imull
add
inc
pop
lea
inc
mov
xor
add
in
xchg
adc
es
sar
or
add
add
cmc
outsl
mov
add
std
sbb
mov
and
inc
jge
pushf
push
fsts
movsb
insl
add
sub
add
add
or
bound
cmc
and
add
add
lea
jo
mov
test
cmp
and
pop
jne
cmc
inc
add
add
cmc
jmp
fwait
lods
les
loope
jno
and
xor
mov
add
icebp
inc
dec
mov
popa
stos
test
inc
mov
jne
cwtl
bound
lret
loope
loopne
hlt
mov
aas
push
xchg
or
jmp
lret
jo
fcmove
add
adc
xor
out
dec
pushw
and
dec
mov
or
add
add
add
jno
push
ja
insl
ret
scas
and
arpl
dec
cmp
mov
popl
lret
pop
or
mov
xchg
adc
push
cltd
je
fs
jecxz
jmp
xchg
mov
cmpsb
fwait
xor
icebp
fisubrs
add
push
cmp
add
add
add
popl
and
fwait
ja
lret
xchg
mov
stos
lods
int3
xor
push
adc
rclb
popf
imul
imul
ret
nop
push
add
loopne
sub
pushf
mov
aas
mov
or
push
inc
cmp
add
add
and
fs
fstpl
lds
mov
add
scas
lret
icebp
pop
cltd
fsubl
into
jns
loopne
push
pop
xor
gs
lret
dec
mov
mov
pop
mov
cmpsl
int
mov
xchg
mov
add
add
add
js
int3
jecxz
xchg
mov
mov
sahf
jmp
and
leave
xchg
inc
cmpsb
out
dec
gs
jmp
daa
cmc
and
add
add
mov
scas
pop
mov
fcomi
pusha
add
add
cmpsl
mov
arpl
repz
int
scas
jo
fcom
adc
add
add
push
jp
jl
decb
sub
add
add
ja
mov
sbb
xor
mov
shl
xor
mov
mov
add
add
push
push
sbb
add
add
sub
add
add
idivb
mov
aas
aam
cltd
or
aad
xchg
mov
test
xlat
mov
mov
xchg
mov
movsb
cltd
fildl
pusha
add
add
add
pushf
mov
into
mov
sub
add
add
mov
int3
lret
cmp
add
add
bound
pusha
add
add
cmp
xchg
subb
pop
lret
or
subb
dec
mov
loop
sub
mov
add
add
pusha
add
add
ds
imul
add
fwait
cmpl
test
rorl
jbe
jle
cmp
loopne
scas
inc
jbe
aas
sbb
add
add
scas
pop
rorb
pop
mov
cmp
add
jmp
mov
cmpsb
hlt
and
push
mov
jecxz
adc
test
adc
fcoml
int
adc
sbb
jle
xor
adc
je
cltd
cs
pop
or
add
add
mov
add
or
add
add
xchg
sbbl
mulb
jns
inc
mov
add
add
or
fmulp
pop
lahf
shlb
mov
adc
and
cltd
lock
fistps
in
push
sarb
inc
add
add
jg
ja
jae
cmpsb
dec
jmp
sbb
xchg
shl
cli
push
add
xor
outsl
inc
mov
lcall
sbb
mov
dec
clc
mov
es
shrl
xchg
push
mov
int3
jbe
test
cmp
and
mov
repz
jl
adc
dec
mov
jo
cmpb
cmp
pushl
sub
add
add
or
dec
xchg
add
add
add
in
sti
lcall
and
leave
sub
leave
inc
mov
mov
mov
inc
imul
test
cmc
mov
call
push
lcall
jno
mov
or
jg
jno
fcomps
add
add
add
adcl
outsl
stos
stos
push
push
xlat
mov
hlt
fadds
fcomip
pop
daa
mov
mov
in
ss
cwtl
push
aaa
arpl
sbb
pop
insb
mov
call
stc
push
push
cmp
stc
inc
not
jge
jge
or
add
add
inc
hlt
push
das
jnp
add
test
mov
mov
pop
xor
cmpl
rcr
je
or
mov
jno
in
ljmp
mov
adc
jb
mov
cmp
int3
lret
pextrw
mov
pop
imul
mov
push
cli
movsb
in
add
add
add
in
addr16
add
leave
fwait
ret
xor
test
mov
add
add
aam
jbe
daa
and
add
add
pushf
xchg
sti
out
sbb
repz
lret
pop
xchg
add
sahf
into
inc
setbe
scas
out
or
fisubl
inc
sbb
cmc
mov
sub
and
nop
dec
add
add
mov
idivb
pop
pop
xor
pop
in
sub
insb
mov
mov
or
movsb
jmp
out
jl
inc
add
add
mov
fistpll
mov
xchg
cmpsb
add
xchg
test
xor
mov
or
xor
aaa
ret
aaa
xchg
loopne
mov
gs
xchg
pop
or
mov
decl
add
mov
mov
push
pop
icebp
jns
xchg
or
add
add
popf
scas
sarb
xor
in
arpl
mov
cs
xchg
add
add
and
add
add
add
add
dec
mov
leave
es
cmpsl
pop
ret
int
sub
add
add
add
add
insb
mov
mov
das
stos
or
add
das
jmp
push
sub
js
sbb
aaa
dec
mov
popa
iret
dec
add
add
daa
xor
jnp
aaa
scas
cmp
xchg
pop
sub
or
push
jb
inc
sbb
lea
scas
out
fidivl
iret
mov
lods
xchg
inc
lock
jge
pop
push
cld
inc
data16
cmpsb
notl
xor
jo
add
test
xchg
push
push
xchg
pop
in
mov
add
add
add
and
lret
mov
pop
mov
mov
xor
leave
clc
adc
lret
jg
sbb
ja
daa
roll
adc
cmc
dec
mov
mov
jp
call
sbb
mov
es
mov
andl
jb
lods
filds
ret
dec
movsl
sbb
inc
ret
jne
xor
mov
xchg
jo,pn
pusha
mov
adcl
or
add
add
push
mov
push
cmp
cmp
dec
jae
cmp
imul
push
int
cmpsl
inc
sbb
jl
mov
orl
add
add
add
add
jmp
mov
pop
jp
jbe
mov
fnsave
aad
jns
push
sub
insl
jbe
cmp
jae
add
mov
cmp
mov
out
push
mov
mov
add
add
enter
sarb
xchg
mov
aaa
ds
loop
test
shrl
movsb
and
jnp
orl
add
add
pop
fcomps
add
imul
pop
push
pop
mov
out
aam
sub
xor
xorl
add
mov
nop
js
fildl
add
add
dec
mov
dec
xor
jbe,pt
cmp
aam
xlat
popa
and
lcall
sbb
lcall
dec
mov
or
mov
or
add
add
and
add
add
dec
lahf
cmp
mov
loopne
or
rcl
cld
sub
inc
mov
mov
dec
fisttps
in
out
loope
inc
in
dec
and
add
in
sub
add
add
add
out
mov
fst
jge
add
add
add
scas
imulb
jle
repz
jno
dec
sub
sub
add
test
fwait
push
pop
mov
add
sub
add
add
cmp
add
push
adc
and
das
shrl
adc
pop
lahf
aaa
cmp
jmp
xlat
sbb
mov
add
add
push
jmp
xchg
jae
subl
add
add
sub
and
xlat
int
pop
cs
add
dec
mov
jnp
push
mov
sub
mov
call
stos
add
mov
aaa
push
mov
add
add
dec
xor
push
or
scas
inc
in
xlat
xchg
xchg
push
js
pushf
mov
xchg
jp
jmp
int
jecxz
and
add
add
jns
scas
pop
fistpll
add
add
adc
xchg
mov
pop
pop
push
cld
sbb
test
sub
les
mov
fimull
xchg
push
movsl
mov
lret
mov
sbb
add
in
add
sub
add
cmp
enter
insb
add
add
out
and
mov
adc
mov
add
add
repnz
cld
ret
push
negb
in
xlat
add
dec
stos
dec
clc
push
push
lahf
pop
cmp
inc
add
add
jle
add
mov
lahf
fldt
inc
dec
dec
add
add
repnz
je
in
sti
mov
imul
adc
call
add
add
add
std
dec
xchg
add
add
sbb
mov
jno
xor
mov
jbe
xchg
int3
mov
ret
sti
mov
lods
inc
inc
out
mov
push
xor
add
arpl
repz
mov
xor
mov
add
jbe
jbe
sub
scas
subb
pop
sbb
pop
or
or
add
add
aad
or
add
add
sbb
push
or
js
xchg
enter
les
add
adc
push
jns
iret
loope
into
mov
add
add
mov
data16
jl
out
mov
ljmp
dec
add
add
add
add
add
call
and
cltd
cmc
lods
xor
dec
mov
add
add
pop
or
sbb
mov
mov
and
cwtl
add
js
fs
add
mov
daa
pop
lret
loopne
sbb
mov
fisubs
test
mov
rcr
cmpsb
fdivrl
inc
cli
add
add
mov
mov
nop
rclb
out
dec
pop
xchg
pop
dec
cmc
out
fabs
mov
and
mov
repnz
sahf
push
dec
arpl
xor
add
stc
popf
and
add
add
scas
and
push
insl
mov
xor
add
jmp
sbb
push
in
insb
mov
scas
cld
test
sbb
ret
lods
fiadds
imul
movsb
sub
sub
jo
dec
shlb
add
add
out
jmp
inc
mov
subl
pop
loop
cltd
fdivl
rcll
inc
hlt
dec
sbb
add
add
dec
xchg
icebp
in
arpl
dec
mov
sub
or
sbb
add
out
test
xor
psubb
add
cwtl
lea
add
add
xchg
push
pop
push
shll
rcrl
fsubp
pop
rorl
fstps
mulb
mov
add
add
xchg
sub
add
add
bound
loope
hlt
jne
add
add
jecxz
adc
pop
mov
mov
mov
icebp
add
add
add
out
cmp
inc
mov
add
add
lahf
test
jl
ret
divl
add
xor
gs
or
add
add
test
scas
out
pop
mov
or
mov
mov
mov
pop
int
lods
xchg
bound
sub
and
add
add
mov
add
add
inc
jns
jns
mov
or
add
add
pop
pop
int3
mov
mov
add
add
cmpsl
push
jge
out
mov
bound
xchg
or
add
es
dec
fwait
sbb
pop
ja
mov
add
add
add
cli
cmp
insl
bound
cmp
dec
add
add
aas
adc
add
fsubs
in
mov
test
push
ds
or
add
add
aam
out
pusha
mov
add
mov
sub
add
add
lea
out
cmp
add
ja
cmc
scas
jb
or
add
add
add
add
mov
ds
push
stos
idivl
setg
lods
daa
shll
sahf
cmpsl
inc
jle
pop
xor
pop
mov
and
add
add
int3
jae
and
mov
mov
cmc
sub
pop
faddp
add
add
mov
add
add
xor
cmpsl
fsubrs
rcll
incl
add
jmp
dec
mov
mov
fwait
add
pop
mov
dec
ror
leave
dec
fadds
addr16
lcall
sub
mov
ja
adc
mov
shrl
add
add
mov
test
aaa
mov
mov
ficoms
int3
push
dec
jns
sub
add
sub
pushf
add
add
add
xchg
les
add
add
add
xchg
pmaddwd
add
add
sub
add
add
xor
push
das
add
and
adc
mov
mov
inc
mov
cmp
push
ret
add
add
pop
hlt
je
mov
ss
push
iret
push
cltd
add
push
push
xchg
insl
repnz
ficomps
jg
insl
and
xor
popf
mov
add
jge
and
add
add
fnsave
lcall
test
sub
add
add
sti
arpl
add
add
sbb
pop
or
add
add
push
bound
add
iret
pop
sub
add
add
xor
xchg
es
or
or
cmp
call
add
push
inc
lods
xchg
stc
push
cmpsl
jg
jge
cmp
shll
cmp
fsubs
add
add
add
add
mov
jmp
mov
pop
lds
add
add
dec
push
cwtl
jb
arpl
fstpl
add
jp
sub
add
add
add
add
add
lret
shlb
rolb
in
ret
adc
push
or
sbb
lahf
or
add
cmpsb
test
adc
mov
add
xorl
inc
sarl
movsb
cmpsb
mov
add
add
xchg
xchg
sbb
in
xor
lds
add
add
dec
repz
cwtl
push
cmc
mov
add
popa
mov
inc
inc
movsl
push
aad
jle
pop
mov
add
add
ja
xchg
sbb
add
add
mov
jbe
cmp
cmp
jno
lds
push
sbb
or
add
add
add
add
and
add
add
mov
daa
push
arpl
repnz
jno
adc
xor
jb
xchg
add
add
sbbb
add
sarb
data16
mov
xchg
les
add
add
loop
pop
iret
lock
les
movsl
inc
mov
push
in
jmp
add
dec
cmpsb
scas
push
sub
mov
or
add
add
lods
and
jne
jno
jns
push
out
popf
out
dec
rorl
enter
or
and
add
add
adc
loope
xchg
xor
push
sbb
cmpsb
lods
into
xchg
pusha
add
add
jns
dec
adc
icebp
mov
add
lea
add
jmp
test
mov
add
pop
push
lods
xlat
xor
jns
mov
mov
fisttps
inc
dec
loopne
mov
add
add
ret
jne
mov
add
jno
cmp
ret
jle
xchg
or
rcrb
jns
call
add
call
ds
push
add
add
add
in
addr16
pop
xor
add
add
mov
mov
mov
and
mov
add
add
jecxz
dec
es
stos
test
ret
pop
jle
mov
ret
sbb
mov
shrl
mov
test
fucomip
push
cmp
pop
aaa
pop
stos
das
nop
popa
inc
add
add
pop
add
add
outsb
mov
mov
sbb
sbb
cmp
les
pop
out
into
xor
add
add
add
add
pusha
add
add
inc
inc
add
add
add
test
dec
xchg
and
push
leave
mov
mov
xchg
dec
xchg
xlat
sub
add
add
mov
sub
inc
and
repnz
insb
mov
cs
sbb
daa
add
jnp
or
inc
xor
and
or
add
add
add
add
add
rcrb
push
aaa
rcr
dec
mov
adcb
mov
sub
add
add
rcll
cmp
add
das
push
stc
jg
es
nop
push
lahf
mov
shll
adcl
add
mov
add
nop
das
adcb
loopne
popf
and
pop
adc
jb
sahf
stos
je
lret
sub
add
add
hlt
jp
xchg
and
mov
sbb
add
pop
les
jns
mov
data16
mov
sbb
mov
dec
imul
les
mov
jae
xchg
mov
jp
gs
es
adcb
jle
pop
cmpsb
popl
mov
xor
mov
mov
outsb
out
movsb
sub
jb
fistpl
push
mov
std
sbb
inc
add
add
add
out
lcall
outsl
sbb
jae
pop
xlat
mov
jle
add
pop
inc
lcall
mov
sub
add
add
add
add
push
push
sub
add
add
push
push
push
adc
es
call
sbb
mov
outsb
pop
jno
addr16
and
dec
inc
add
add
xchg
mov
add
add
add
xor
in
jle
xor
pusha
add
add
and
insl
int3
add
add
add
xor
mov
scas
shl
mov
ss
call
enter
enter
cmp
add
add
mov
adc
stos
xor
imull
and
out
out
inc
pusha
mov
sbbb
pop
pop
lds
or
mov
inc
adc
dec
cld
xchg
cltd
stos
negb
out
lock
call
add
add
add
xor
jle
jl
es
push
push
fisubs
or
scas
inc
mov
daa
add
add
add
sub
add
add
add
add
push
faddl
add
and
adc
mov
pushf
out
sub
add
add
adc
dec
xor
jae
jae
imul
add
lods
xor
add
add
fcompl
add
sbb
lret
test
mov
in
test
and
inc
clc
movsl
dec
add
add
cli
and
add
add
xchg
mov
mov
add
add
add
push
or
push
xor
lahf
cmp
scas
adc
add
add
lcall
push
mov
mov
stc
out
cmpsl
or
push
xor
jmp
mov
lret
xchg
cwtl
push
lahf
mov
add
add
add
aad
jp
add
add
xchg
dec
adc
push
lret
or
add
add
push
xchg
popf
test
mov
movups
out
das
sub
lods
jne
popf
add
fiadds
int3
addb
push
mov
cs
inc
lock
adc
decb
add
xchg
or
in
fcmove
jl
mov
add
mov
mov
cmp
or
add
add
mov
incl
add
add
rorb
clc
lahf
faddl
adc
lret
mov
jecxz
mov
xchg
andb
cs
das
sub
add
out
rcl
jnp
lock
mov
fnsave
jmp
sbb
rclb
sbb
mov
add
mov
xchg
xchg
add
aaa
pop
and
cmp
xchg
test
mov
shrb
jns
push
mov
add
add
add
daa
pop
bound
add
add
mov
nop
in
arpl
add
add
mov
add
add
jg
bound
int
inc
and
stos
mov
mov
pushf
dec
jns
pop
and
add
add
movsl
jl
or
mov
fistps
gs
sbb
lret
mov
mov
jbe
int3
mov
pop
ja
add
es
push
mov
scas
jmp
mov
icebp
jmp
loop
ljmp
rcrb
push
or
ret
ljmp
enter
aas
repz
outsl
int
xor
cmp
lret
insb
add
add
mov
adcl
lahf
leave
fsubs
std
xor
ror
and
in
fnstcw
xorb
add
add
adc
jmp
sahf
shlb
test
sahf
sahf
pop
mov
xchg
or
add
je
fstpt
imull
jno
sbb
inc
mov
or
cmp
inc
into
or
add
add
in
loop
js
daa
jecxz
or
cmp
jle
data16
cmp
add
and
jmp
pushf
inc
fistpll
inc
call
add
add
sbb
int3
mov
movsl
fsubrl
add
add
rorb
push
sbb
aam
in
mov
negb
inc
fwait
xchg
and
xchg
mov
sub
add
add
xor
sbb
jecxz
shrl
inc
add
add
hlt
outsl
rcll
rolb
add
negl
in
imul
xchg
push
and
add
mov
pop
daa
mov
stc
jo
pop
inc
mov
pusha
add
add
ja
xor
pop
jo
cmp
and
fwait
add
pop
jge
dec
int
out
xlat
ja
sbb
inc
mov
add
add
mov
mov
stos
cmp
cmpsl
push
divl
fcomps
ret
xchg
gs
mov
dec
jno
and
dec
mov
and
add
add
repz
push
adc
sub
add
add
xchg
repz
pop
xchg
sub
add
add
test
add
out
cmp
sbb
inc
ret
outsb
adc
add
add
sub
add
add
movsb
dec
imul
aaa
add
test
cmc
test
aaa
xor
cmpsb
fwait
sti
jle
cmpsl
jge
dec
add
add
outsl
fadd
fsubrs
add
mov
fldenv
loope
adc
movsl
cmc
sub
add
add
add
add
enter
movaps
adc
mov
les
ffree
mov
data16
mov
mov
out
and
mov
sub
push
cmp
add
add
sub
push
repz
inc
cmp
mov
lea
jp
repnz
outsb
xchg
pop
ret
xchg
jbe
adc
push
leave
enter
iret
pop
sbb
add
rcrl
jae
pop
sbb
cmpsl
ljmp
sahf
xor
mov
mov
or
add
add
xchg
adc
leave
inc
outsl
and
and
mov
ss
std
popa
or
mov
cmpsb
stos
popf
imul
mov
scas
or
add
add
fsubl
std
dec
enter
sub
mov
cwtl
mov
xchg
sbb
add
mov
add
inc
nop
imul
jbe
mov
jbe
sahf
daa
leave
add
add
sub
insl
push
xor
pop
cmpsb
sbb
cmpsb
adc
jmp
movsl
test
pop
lcall
mov
vcvtsi2ssl
hlt
dec
push
xor
test
mov
scas
and
add
add
xor
add
add
sbb
pop
test
in
popf
or
lods
mov
ret
fidivl
add
and
jp
and
loope
mov
ret
sahf
mov
adc
jecxz
mov
call
lret
cmp
or
sub
pop
addl
or
add
jge
leave
cmp
das
aas
sbb
xchg
lret
fistps
test
mov
xor
fwait
dec
mov
and
mov
movsl
add
add
add
push
lret
cli
cmp
xlat
jl
mov
pushf
jle
movsl
pop
mov
mov
out
int
sub
and
add
add
xor
idivb
push
insl
ret
sti
and
xor
add
add
add
add
sbb
jmp
xchg
cmpsb
loope
mov
aaa
sahf
int
push
lods
data16
add
xchg
int
sbb
dec
and
push
popf
leave
movsl
mov
es
sbb
add
add
add
or
add
add
test
jge
and
pop
das
jg
sub
add
add
test
aad
add
add
inc
in
push
cmp
test
push
or
add
jp
pop
sub
add
add
or
adc
cltd
push
mov
pop
insb
mov
jnp
jge
fdivs
pop
pop
lahf
lret
adc
or
add
add
cltd
icebp
mov
in
mov
sbb
imul
cld
dec
add
add
cwtl
repz
lcall
adc
mov
pop
jns
jnp
pop
pop
sbb
rcll
aam
mov
test
leave
mov
pop
sti
dec
or
add
add
fcomp
cld
fld
pop
ss
mov
cmp
and
xchg
in
mov
aad
repnz
and
inc
repz
mov
mov
dec
lret
lods
data16
dec
push
and
int
fcoms
add
add
mov
popa
movsl
jne
mov
sbb
add
in
mov
cmpb
sbb
push
mov
push
addr16
test
sti
mov
mov
add
mov
add
add
inc
std
sub
add
out
lds
jnp
je
and
mov
jmp
arpl
rorb
das
int
clc
addr16
jne
sub
xchg
out
mov
add
out
movsl
aam
cmp
or
dec
loopne
scas
jge
add
add
add
out
and
mov
xorb
cmp
fildll
ljmp
add
add
mov
movsl
push
xor
and
cmc
sarb
or
fcoms
mov
inc
cmp
jle
rorl
dec
repz
add
cld
fistpl
inc
pop
stos
sbb
fisubrl
shrb
cmp
pop
sbb
add
gs
mov
add
add
jecxz
jmp
loope
add
add
add
les
mov
jno
inc
decl
add
add
or
leave
cmc
sub
daa
or
add
add
inc
push
inc
testl
mov
rorb
mov
movsl
inc
addl
add
add
enter
adc
inc
movsb
in
xchg
add
add
xchg
int3
aaa
into
lcall
add
cmp
sti
lcall
jge
cmp
jle
xlat
fwait
add
add
lods
cwtl
add
in
ret
inc
xchg
pop
scas
pop
insb
mov
int3
pop
sbb
negl
add
add
mov
mov
add
add
lods
sub
pop
xchg
pop
mov
sbb
push
mov
or
add
inc
sub
add
cmp
jb
sub
mov
xchg
lahf
imul
cmp
sahf
test
pusha
mov
or
sahf
xchg
je
enter
jno
ror
cmp
dec
adc
aaa
sub
add
add
add
add
arpl
rclb
push
jp
sub
add
add
repz
scas
push
inc
arpl
sub
imul
or
mov
add
add
dec
xor
into
cltd
jp
mov
sbbb
add
inc
mov
or
push
mov
out
mov
add
arpl
mov
cmp
popf
pop
lcall
test
outsl
movsb
xor
add
and
add
add
icebp
push
push
imul
shl
inc
popa
add
add
add
popa
pop
pop
push
mov
sbb
or
add
add
sub
jmp
and
iret
mov
outsb
lahf
jg
dec
xorb
add
ret
xchg
push
ljmp
add
add
jp
and
add
add
jecxz
loop
movsl
xchg
addr16
test
pop
push
push
mov
enter
xchg
in
mov
out
adc
mov
add
add
addb
cmp
push
addr16
cmc
mov
andb
or
lret
addr16
aad
mov
and
jbe
and
pop
cld
cmp
cwtl
arpl
js
lahf
inc
outsb
mov
inc
or
shl
in
or
jge
out
ficompl
or
add
add
loop
dec
rcr
in
fstpl
fisubrl
adc
xchg
and
mov
jp
cmp
sbb
dec
mov
sbb
adc
add
add
mov
dec
sbb
mov
add
add
add
or
add
add
movsb
out
push
mov
pop
rcl
mov
jno
jp
push
hlt
add
push
add
sub
mov
add
push
xlat
and
movsb
sbb
or
add
add
cmpsb
push
sahf
fistpl
int3
fistps
add
add
ja
jo
lods
lea
fstps
dec
mov
popf
or
loope
fisttpl
pop
push
out
test
xchg
in
leave
shl
or
pop
pop
pop
xor
add
add
icebp
cmp
adc
dec
in
movsb
pop
sahf
test
pop
aas
mov
jae
lods
cmp
shrb
and
nop
jecxz
and
int
cmpsb
pushf
add
mov
mov
subl
cmpsl
sbb
hlt
int
imul
aam
lods
call
mov
sub
add
movb
mov
xor
inc
mov
call
insl
bound
add
add
mov
int3
mov
lock
xchg
stos
pop
stos
shll
dec
jnp
xor
sbb
lret
test
or
add
add
add
je
aad
add
add
aas
jle
add
mov
mov
dec
loop
mov
adc
insl
pop
stos
imul
fbld
insb
mov
mov
cmp
fstl
or
add
add
cmp
test
jno
out
out
add
push
lods
lret
inc
mov
pop
lret
fwait
pop
and
add
sbb
push
cmp
movsb
push
sbbb
paddsb
add
cmp
xchg
into
test
mov
jp
bound
inc
inc
add
add
orl
xchg
add
add
cltd
fcoms
out
stos
addr16
mov
pop
adc
add
and
mov
mov
jle
mov
mov
mov
add
add
imul
add
in
int3
in
add
mov
mov
movsl
aaa
lcall
movsb
gs
test
leave
shrb
cmpsb
push
incl
xchg
in
std
cmp
mov
add
rcl
mov
outsb
jmp
adc
add
sbb
and
add
add
jns
cmc
daa
inc
sbb
sar
fldz
mov
arpl
xor
xchg
inc
adc
mov
push
mov
jge
aaa
outsl
aaa
fldl
add
add
mov
sbb
mov
add
add
movsl
adc
test
pop
mov
add
add
dec
mov
cmp
in
nop
sbb
xor
js
add
add
add
add
xor
jno
adc
and
jnp
add
add
xchg
mov
adc
sub
add
add
lock
dec
mov
add
dec
mov
add
fdivr
pushf
mov
cmpsb
jmp
jmp
aas
xchg
int
push
aad
cmp
mov
xor
jmp
lock
fisubs
inc
add
add
mov
lods
stos
loopne
dec
int3
inc
arpl
sti
or
add
add
cmp
fsubp
pusha
add
add
roll
or
lock
xchg
add
add
add
add
lret
pop
push
dec
stos
xchg
cwtl
sbb
mov
fdivl
out
pusha
mov
add
add
scas
or
mov
mov
add
add
aam
and
add
add
push
xchg
add
add
cwtl
push
std
push
mov
jno
cmp
add
add
adc
in
dec
ja
iret
push
cmp
rorl
add
int
push
jp
sub
dec
mov
rcl
fwait
adcb
leave
orb
sub
data16
gs
jle
das
mov
pavgw
push
lret
add
add
add
add
ljmp
enter
add
fdivrs
add
add
mov
mov
sbb
shrl
rorb
add
add
nop
fwait
add
add
inc
shlb
push
xlat
jmp
les
aas
xchg
add
add
mov
add
pop
xor
add
add
xchg
aas
sbb
notb
out
xchg
mov
cmp
insl
test
and
call
add
add
inc
xchg
aad
pop
mov
jae
dec
lods
ret
mov
inc
xlat
fstpl
add
mov
fwait
xchg
out
sub
repz
pusha
add
add
fbld
sbb
stos
pmaxub
add
add
sub
and
lret
and
pop
andb
mov
dec
push
jno
call
pop
rcll
sahf
pop
push
popa
lret
push
iret
push
out
adc
dec
add
add
test
enter
adc
and
cmpsb
dec
mov
mov
xchg
sbb
mov
out
sub
add
add
sub
rorb
add
add
enter
xchg
mov
dec
mov
inc
test
mov
add
add
loop
pusha
add
add
fdivl
sub
add
add
ret
bound
sub
xchg
ja
adc
and
cltd
push
loope
outsb
aad
push
xorb
add
add
aad
clc
cmc
inc
lods
push
out
mov
out
adc
mov
cwtl
cmp
pop
xor
dec
add
add
mov
cmp
add
add
push
aam
fisubl
pop
movsl
das
aas
call
xchg
data16
shrb
push
jno
dec
mov
fildll
push
jae
add
add
xchg
xchg
sbb
add
add
mov
cmp
clc
cmp
push
mov
stc
jns
push
sti
out
mov
adc
xchg
adc
adc
rorb
gs
add
add
push
cwtl
imul
jge
mov
mov
add
add
dec
add
add
cmpsl
data16
lcall
daa
cmpsb
mov
mov
mov
into
movsb
insl
nop
jmp
push
jp
outsl
out
nop
repnz
lahf
fisubrl
and
add
add
add
add
pop
mov
cmp
add
add
pop
mov
dec
ror
and
xchg
enter
cmpsl
mov
mov
in
outsl
mov
sbb
fbld
mov
test
outsb
push
xor
add
pop
call
sbb
cmp
jns
jp
add
orl
dec
add
add
addr16
mov
mov
sbb
mov
out
mov
jg
fistpl
or
fcoms
mov
out
imul
sbbb
xor
ljmp
aas
jl
in
inc
data16
icebp
mov
mov
pop
xchg
dec
mov
xor
stc
xor
or
jle
pop
mov
add
add
add
jl
xchg
inc
push
loopne
test
mov
add
sbbb
push
call
jbe
push
bound
add
mov
sbb
or
call
or
cmp
ret
pushl
sahf
inc
add
add
ss
jne
repnz
and
test
dec
xchg
negb
mov
or
adc
lock
add
add
inc
adc
add
sahf
mov
fmul
jbe
or
mov
shlb
add
or
cmp
inc
or
add
add
mov
or
add
add
sbb
addl
add
mov
sbb
cmp
mov
mov
add
add
jp
fidivl
stc
sahf
mov
lea
add
add
mov
or
xor
sbb
stc
cmp
out
clc
lock
rclb
add
add
cmp
xor
add
jns
add
add
lods
lods
xchg
pop
lret
inc
mov
push
test
repnz
jp
xor
pop
pop
ja
ffree
dec
rorl
dec
cmp
xor
cmp
xchg
cmp
mov
mov
aad
xchg
mov
sub
pushl
movsb
xor
popa
push
mov
add
add
xchg
add
lcall
int3
ljmp
add
mov
jb
loop
dec
mov
jl
add
add
in
or
pop
jmp
add
add
cli
repnz
mov
popa
shrb
mov
ljmp
mov
in
add
add
xor
add
add
ja
mov
shlb
inc
jbe
jns
into
xlat
movsl
es
xchg
out
dec
mov
and
ja
mov
jb
push
paddw
cmpsb
and
sub
mov
mov
cmp
inc
xchg
lods
pop
testb
jmp
mov
loop
cmpsl
or
cmp
push
mov
out
mov
aaa
adcb
and
bound
nop
xchg
mov
aad
mov
fsub
fisubrs
jb
mov
xor
in
out
fwait
xchg
mov
test
scas
xchg
in
loope
lods
jge
lahf
sub
mov
loopne
mov
out
cmovno
and
sarl
add
adc
loop
flds
mov
cmp
iret
in
and
add
add
add
add
in
dec
imul
mov
add
add
cmp
xchg
pusha
mov
add
push
daa
sbb
add
add
dec
pop
add
and
add
add
int
xchg
out
stos
cmp
aam
fmuls
inc
mov
ss
in
cld
and
pop
popf
arpl
add
add
add
add
ljmp
pop
pop
push
xchg
jg
int
aas
in
push
mov
add
ret
or
mov
mov
ljmp
mov
add
out
mov
xchg
aad
loopne
add
bound
mov
stos
test
test
mov
add
jb
add
add
pushaw
mov
jecxz
pop
aaa
and
add
add
push
test
jbe
jge
add
add
lea
adc
cli
dec
sbbl
inc
mov
or
enter
add
add
inc
add
add
jbe
lods
loop
fdivrl
adc
fidivl
mov
jp
push
add
add
add
rcll
stos
sarl
repnz
leave
ss
mov
xor
sub
add
add
jle
addr16
test
add
add
pusha
add
add
push
dec
pop
dec
mov
sbb
cld
fldl
dec
add
add
pop
inc
sub
fiaddl
shll
out
nop
inc
mov
and
adc
sub
inc
and
pop
cmp
mov
jns
scas
outsb
pop
xchg
inc
xchg
push
stc
cmc
cmp
and
lahf
js,pt
shrb
mov
add
test
jb
jecxz
mov
cmp
xchg
lods
popa
stc
aad
mov
add
add
push
dec
cmp
ja
gs
lret
or
ljmp
add
shlb
add
adc
fdivl
outsb
sbb
and
call
add
faddp
xchg
dec
mov
and
scas
dec
es
add
les
pusha
add
add
push
aaa
ljmp
mov
add
arpl
mov
jp
add
add
add
into
scas
rcr
or
add
add
add
add
mov
xchg
add
add
jno
sbb
add
testl
adc
iret
mov
les
dec
mov
mov
out
sahf
lcall
add
add
data16
clc
mov
push
xor
and
add
add
pop
mov
xor
add
cmc
cmp
jbe
dec
add
add
movsl
outsb
or
fisubrs
add
add
pop
les
rep
add
add
pop
es
or
add
add
mov
cmpsl
inc
xchg
jns
mov
fcmovne
ror
loop
sbb
sub
add
add
add
adc
xchg
lods
pop
mov
add
pop
jo
nop
lods
mov
out
pop
inc
jmp
pusha
add
add
xchg
or
pop
leave
mov
stc
inc
jae
fcompl
add
add
pop
fmull
je
imul
add
mov
shrl
or
add
mov
loop
cmpl
daa
sub
in
aas
aas
ficomps
cli
push
rorl
and
out
mul
loop
adc
sbbl
lret
cmc
jo
mov
push
ret
in
adc
sbb
cmp
push
adc
xchg
push
and
xor
dec
or
dec
ret
inc
and
pusha
add
add
mov
ret
add
add
test
pop
sti
pushf
fisubs
push
mov
ret
mov
in
xchg
lcall
stos
ret
in
out
sub
cmpsb
sub
adc
xchg
and
push
movhps
insb
add
add
mov
sub
add
add
data16
sub
add
mov
or
cmc
lahf
inc
cmp
fstps
insb
add
add
push
stos
and
sbb
lock
xchg
jne
jg
add
scas
arpl
mov
add
xor
hlt
sub
add
std
or
pop
aas
insb
mov
dec
pusha
mov
fadds
mov
outsb
adc
and
xchg
inc
jmp
jb
fwait
js
aam
pusha
add
add
xchg
ret
insb
mov
mov
fisubrs
add
jmp
mov
add
inc
add
add
stos
mov
mov
sahf
mov
iret
sbb
je
rcl
sub
adc
test
inc
add
add
and
pusha
add
add
loope
lds
add
add
add
add
iret
sbb
push
cmp
push
insl
clc
popl
jnp
jne
or
push
sub
xor
add
push
add
rcr
stc
cmp
pop
popf
pushf
xchg
mov
int3
ss
cmc
lret
jno
imul
xor
add
add
add
add
add
add
add
sbb
mov
jns
loopne
mov
push
jb
into
std
jns
aad
lahf
pop
arpl
imul
inc
mov
inc
fdivrp
mov
add
add
pop
add
sub
dec
repz
add
mov
imull
mov
inc
lds
xchg
in
jnp
mov
flds
ja
in
cmp
pop
mov
sub
mov
jb
dec
add
add
inc
mov
add
xchg
jb
xchg
or
push
lods
ret
jns
mov
jo
ja
popf
push
popf
testl
push
xchg
scas
and
cmpsl
push
or
popa
cmp
mov
cltd
jb
add
iret
pop
fwait
lods
xchg
pop
das
popa
jae
push
push
lahf
shll
add
add
fldcw
mov
push
push
jl
ffreep
pushf
or
dec
hlt
mov
bound
icebp
pushf
out
outsl
sbb
jmp
lahf
or
inc
add
sub
mov
and
test
inc
add
add
out
les
dec
add
add
sbb
or
sahf
xchg
or
ss
cmpsl
aaa
lcall
mov
arpl
and
pop
push
and
add
xlat
pop
inc
add
add
and
mov
cmp
add
add
adc
dec
orl
add
mov
insb
add
add
outsl
mov
out
outsl
enter
pop
xor
add
pop
pop
jns
mov
and
sbb
dec
icebp
or
sbb
cmp
add
add
mov
ljmp
pop
test
add
scas
out
popa
scas
imul
add
outsl
stos
icebp
sahf
pop
inc
xchg
jbe
jae
pusha
mov
gs
mov
std
lret
out
fstpl
daa
es
imul
sbb
inc
push
lods
dec
mov
hlt
xchg
out
adc
xor
cmp
add
cmp
insl
mov
fmuls
push
aam
pop
dec
mov
add
or
xor
add
add
popa
pop
rorl
sub
add
add
in
ss
js
aad
or
add
add
add
add
int
mov
inc
mov
test
jp
add
add
popf
negl
mov
es
rclb
in
pop
daa
dec
mov
xor
xchg
imull
or
mov
jle
mov
dec
inc
mov
gs
push
push
data16
mov
aad
cmp
mov
jmp
mov
push
bound
data16
pop
sarb
push
mov
add
add
jmp
aam
and
leave
push
push
xchg
not
lea
and
pop
aas
sub
add
add
add
push
testl
subl
jbe
mov
add
int
mov
xchg
push
jmp
in
mov
mov
mov
add
pop
adc
inc
cmpsl
rorb
pop
flds
add
loop
std
mov
cmpsb
outsl
pop
pushf
xlat
mov
xchg
js
push
out
sahf
sub
push
insl
ret
add
add
cmpsb
xlat
sarb
jbe
scas
stc
lcall
jp
lds
je
outsb
mov
add
mov
inc
sbb
loope
mov
ljmp
dec
add
add
sbb
adc
jb
addr16
jge
pop
jae
jp
mov
cmp
ja
or
jb
sbb
je
mov
ffree
cwtl
lret
ss
das
push
rcll
ret
mov
jo
shlb
add
add
iret
dec
pop
popf
icebp
arpl
into
dec
mov
cmp
cwtl
xchg
or
insl
fnsave
xor
bnd
mov
add
xor
or
daa
rclb
mov
dec
mov
stos
js
lcall
add
add
repnz
pushf
inc
and
adc
push
xor
add
mov
xor
add
xchg
data16
std
jle
fmulp
push
inc
inc
mov
lret
ret
sbb
in
sub
pop
mov
and
mov
repnz
cmc
sahf
jg
movsl
jl
dec
cs
mov
or
mov
testl
add
xchg
add
jns
and
cwtl
mov
jg
inc
jge
cmpsb
add
out
je
sub
or
jl
push
hlt
pop
push
jle
bound
add
add
inc
std
fwait
inc
add
add
nop
mov
add
add
xor
or
push
xchg
stos
pop
mov
jecxz
out
mov
movb
add
inc
sbb
js
jns
ret
ljmp
stc
push
ret
out
shlb
mov
mov
arpl
cmp
into
fcmovb
mov
adc
add
add
add
lds
adc
sbb
mov
mov
xor
leave
mov
call
out
cmpsb
and
add
add
ret
clc
subb
push
xchg
jmp
cs
ds
jb
or
add
add
aad
sub
add
inc
xchg
adc
cmc
jbe
outsl
push
loop
aaa
jb
insl
mov
ja
add
or
lods
mov
pop
xchg
movsb
mov
je
dec
int
out
ret
fildll
dec
sti
outsb
or
insb
add
add
pop
mov
fstl
mov
or
push
mov
inc
adc
xor
add
add
sbb
add
add
mov
les
pushf
arpl
jo
inc
pusha
add
add
and
add
lea
std
inc
in
or
pop
sar
xor
mov
add
aaa
test
pusha
add
add
and
add
add
movsb
cmp
fdivrs
nop
and
xor
or
out
adc
data16
sbb
add
cmp
push
insl
jo
jmp
roll
arpl
sub
add
add
sbb
jb
outsb
outsl
into
dec
jp
inc
sbb
mov
add
or
xor
mov
lock
mov
pop
jb
pop
xchg
pop
scas
insb
mov
adc
dec
adc
outsl
inc
add
add
popf
jmp
mov
cmpsb
adc
inc
adc
add
add
cmp
add
inc
adc
push
stc
inc
push
mov
lret
dec
mov
sub
add
add
add
add
lret
popf
scas
or
add
add
add
add
add
or
hlt
inc
or
add
adc
jle
fbstp
mov
sbbl
sub
add
add
roll
ficomps
ljmp
add
gs
dec
sub
dec
into
push
daa
in
mov
pop
xor
mov
fsubrs
add
movsb
dec
outsl
xor
out
and
add
add
add
xor
lods
subl
mov
inc
add
add
inc
add
add
jl
andb
adc
add
adc
add
jp
pop
jl
adc
outsl
xchg
addl
lds
rorb
scas
push
jmp
inc
mov
enter
add
adc
add
lret
xor
cltd
cmp
lods
mov
imul
popf
dec
movsb
or
sbb
add
add
leave
outsl
push
ljmp
add
add
roll
add
add
pusha
add
add
sub
ds
and
inc
push
mov
mov
mov
push
add
add
add
pop
in
jecxz
push
ljmp
add
fsubrs
mov
jecxz
mov
add
add
inc
divl
mov
mov
xor
add
pop
jo
inc
xchg
call
xchg
add
add
sarl
mov
imul
add
add
vcmpps
loop
in
shl
mov
mov
inc
cmc
pop
shrb
jbe
push
aaa
enter
cmc
arpl
sbbb
add
hlt
repnz
or
enter
loopne
adc
inc
mov
push
adc
stc
lods
addr16
fcomp
adc
cs
das
or
add
add
adc
cmpsl
push
pop
mov
addr16
xor
add
add
jo
adc
add
scas
jo
jne
out
int
mov
pop
pusha
mov
mov
stc
inc
push
adc
inc
int3
xchg
icebp
inc
popa
jmp
stos
pop
loop
xor
mov
movsl
mov
ss
xor
dec
xchg
or
fxch
jl
pop
push
adc
jne
pop
mov
adcl
inc
out
jl
lods
sub
mov
lods
push
rolb
add
add
add
add
outsl
mov
inc
add
add
ret
jnp
mov
add
out
aaa
push
jb
mov
sbb
mov
call
addr16
cltd
dec
enter
rorl
mov
loope
or
xchg
mov
mov
xchg
sahf
add
sbb
adc
dec
add
add
fstpt
mov
mov
add
add
sbb
add
add
adc
icebp
add
mov
mov
andb
add
lret
imul
movsl
lahf
sti
add
int3
test
xchg
ret
pop
and
add
add
xchg
stos
cmovo
add
add
pop
stc
cmp
add
add
push
scas
cld
iret
sub
lcall
arpl
mov
add
add
test
mov
lods
cwtl
repz
cld
cmp
popa
pop
xchg
mov
shl
jae
mov
jbe
fsubrs
mov
dec
stc
inc
lret
sarb
or
add
add
xor
bound
xlat
rcll
pop
jle
xchg
loope
daa
push
loope
leave
cmc
cmpsl
xchg
pop
push
enter
add
gs
add
add
in
mov
imul
out
ja
mov
pop
outsb
imul
pop
push
outsb
sub
pop
test
enter
in
jg
push
cld
pop
cmp
add
add
xchg
or
sbb
outsl
push
inc
add
add
mov
out
mov
mov
mov
add
add
add
add
test
add
add
add
add
rcrl
out
jmp
add
add
fldl
in
nop
mov
lahf
push
loope
divb
pop
cmp
push
fsubrl
ss
add
add
es
fisubl
fcompl
jo
jne
push
add
add
add
into
add
push
pushw
push
adc
ja
jb
ret
pop
mov
inc
xor
push
push
lds
cmc
push
loopne
or
push
or
stc
icebp
imul
dec
mov
lcall
out
sub
cmp
pop
cmp
pop
mov
pop
xlat
push
adc
xchg
lods
shrl
add
add
sub
add
cmp
push
mov
scas
xchg
lret
sbb
andl
and
xor
pop
lods
xor
push
inc
mov
push
push
xorb
add
add
scas
lds
aad
xchg
rolb
addb
sahf
and
test
or
inc
push
dec
cmpsl
mov
pop
jbe
add
add
sarl
popf
inc
mov
dec
add
add
pusha
mov
sbb
add
push
les
mov
outsb
pop
xchg
xor
add
add
loopne
fnsave
xor
cmp
mov
cmp
jge
or
aas
add
jp
push
dec
iret
mov
add
add
sbb
jb,pt
pop
movsl
and
add
add
add
or
out
inc
aam
test
lret
add
add
mov
cmpsl
sub
or
pop
mov
mov
mov
loop
cmp
mov
sbb
inc
mov
or
add
add
xchg
pushf
push
ret
dec
or
push
cmpsl
call
rcrl
addr16
jb
fcompl
adc
cmpsl
xchg
fiadds
lea
dec
loope
scas
cltd
jnp
pusha
mov
push
inc
sti
and
cmpsw
xchg
push
leave
adc
jns
cmp
out
in
pushf
adc
stc
nop
std
loope
repz
stc
or
pop
mov
in
mov
sbb
jmp
mov
imul
jp
dec
mov
add
sub
inc
mov
fisubs
push
ficoml
add
in
push
mov
mov
xor
xor
in
jns
xor
lahf
js
mov
pop
jl
adc
xor
add
in
push
sti
jbe
sub
mov
xorb
add
add
popa
and
pushf
jg
inc
lods
push
and
lcall
in
mov
mov
ds
mov
das
aas
dec
adc
lret
mov
enter
add
mov
add
push
pop
arpl
ja
mov
ljmp
ret
or
add
add
xor
xchg
xchg
inc
adc
or
add
shrb
dec
test
jle
add
add
repnz
and
inc
mov
mov
inc
xor
sahf
adc
add
add
in
pop
pushf
out
xchg
rcll
add
add
movsl
enter
adc
out
and
stos
sbb
add
pop
or
add
add
movsb
mov
push
mov
movl
sbb
inc
roll
dec
xchg
jg
dec
add
add
push
pop
fdivp
pop
push
cs
jne
fbld
inc
inc
add
add
addb
add
add
add
inc
outsl
pop
idivb
push
or
mov
cmp
push
adc
ss
fiaddl
mov
enter
mov
loop
sbb
add
xchg
mov
pop
stos
adc
jnp
mov
xchg
add
cs
add
add
push
jl
adc
mov
ret
cmp
loope
add
add
jne
dec
mov
jge
jg
mov
add
add
pusha
add
add
and
add
add
icebp
sbb
and
test
push
das
popa
test
add
add
add
add
es
add
add
add
mov
push
sbb
xchg
imul
in
fmuls
imulb
jp
or
cmp
pop
cld
or
pop
cmp
cwtl
add
out
stos
loop
mov
sbb
push
and
cmpsb
sub
enter
mov
sub
add
add
push
idivb
add
add
aaa
andb
add
add
test
dec
and
rcl
stos
sbb
jg
push
push
in
lret
arpl
xlat
in
adc
dec
mov
mov
and
add
add
pop
lds
cmp
jecxz
sub
cli
pop
test
mov
loop
clc
xor
mov
add
add
inc
fsubrl
pop
fldt
mov
jl
mov
add
jp
inc
shlb
xor
fdivrl
xorb
test
add
add
add
fildl
add
add
sti
mov
inc
sbb
push
xchg
sbb
push
addr16
xchg
dec
mov
add
add
add
add
movsb
or
xchg
fdivp
mov
inc
loope
inc
adc
cmp
aam
push
inc
add
add
pop
inc
mov
out
sbb
movsb
mov
add
add
sub
add
add
in
sub
push
in
xchg
sub
pop
pop
or
add
ret
in
pop
mov
inc
inc
add
add
push
das
mov
cmpb
mov
xor
add
add
data16
xor
or
pop
ror
sti
xor
push
cmp
jae
call
jb
and
sub
add
or
add
add
lret
lcall
add
add
sub
dec
mov
and
outsl
in
in
movsl
jecxz
call
add
pop
dec
outsl
cmpsb
or
add
add
into
sbb
jge
push
cs
add
add
les
lret
mov
xor
xor
pop
jne
leave
mov
push
xchg
dec
shr
scas
ret
lods
jl
lahf
pop
cmp
and
jns
adc
push
push
sub
add
shrb
add
add
xchg
adc
lahf
frstor
mov
sub
push
addb
add
lea
pusha
mov
add
add
and
loop
mov
ret
sbb
call
ljmp
pop
xor
imul
add
nop
movsb
xchg
add
in
push
xor
or
add
add
add
xchg
in
xlat
xchg
mov
fwait
iret
hlt
push
mov
lea
mov
sub
out
lock
cs
mov
test
add
icebp
inc
or
jle
ja
inc
add
add
fildl
mov
test
lea
aam
cmp
xchg
mov
dec
lahf
daa
push
imul
popa
scas
clc
rcll
cmc
jno
sub
add
xchg
push
xor
push
pop
jae
add
add
pushl
sti
movsb
cld
jno
daa
sub
pop
mov
mov
lods
out
cvtps2pi
adc
xlat
sub
sbb
pushf
rcrl
cwtl
mov
adc
dec
out
fistl
adc
add
add
inc
int
add
add
mov
repnz
mov
jmp
int3
daa
push
xchg
jnp
shl
inc
repnz
fbstp
shlb
stos
loop
hlt
loopne
xor
xor
lds
nop
xchg
and
add
add
test
add
and
add
add
adc
insb
mov
cmp
add
add
jge
mov
fdivs
mov
shll
sbb
mov
jbe
sbb
jl
jecxz
and
add
add
add
add
add
xchg
or
add
add
add
sub
add
add
add
add
arpl
xchg
out
int
push
inc
dec
add
add
dec
pop
xchg
nop
or
mov
lock
pop
rcrb
loop
popf
jbe
test
inc
mov
mov
xor
inc
inc
imul
push
pop
fwait
inc
mov
jb
dec
int3
xor
cmp
cmp
test
and
add
add
je
sub
add
add
push
bsr
cmp
pop
push
pusha
mov
pop
add
insl
inc
jb
ror
mov
xor
shlb
aas
in
out
mov
jmp
mov
mov
mov
add
add
pop
faddl
mov
fldcw
pop
jecxz
or
rcll
and
push
lds
mov
das
push
lods
sbb
aam
pop
or
add
add
add
add
add
cmp
mov
and
add
add
imul
mov
jae
push
rcrb
in
pop
xchg
mov
cmpsb
std
mov
adc
add
ret
aas
jnp
jo
mov
out
out
adc
lret
or
add
add
mov
mov
jnp
sti
or
clc
ret
pop
sar
jo
mov
xor
jge
lahf
push
enter
mov
out
stos
aaa
pop
iret
cmp
aas
es
movsb
int3
test
pop
mov
mov
mov
mov
stos
xlat
ficoms
cltd
mov
push
xchg
fbld
sbb
xlat
arpl
push
mov
test
les
add
pusha
add
add
rorl
in
sub
add
add
add
jp,pt
xchg
std
shll
jge
inc
sbbl
sub
or
pop
push
jae,pt
aam
shlb
pop
test
cwtl
and
out
aad
mov
out
lcall
add
add
add
push
hlt
mov
bound
mov
push
mov
pop
test
inc
sti
je,pt
aad
daa
fidivs
dec
mov
lret
scas
mov
sbb
add
shl
xor
mov
jae
mov
pop
mov
add
pop
leave
outsl
cmp
into
std
adc
mov
mov
sahf
or
scas
stos
repnz
jne
xchg
cmp
jno
add
add
ficomps
test
add
add
cmp
in
imul
sbb
addr16
std
and
in
add
add
jp
add
and
add
add
mov
insb
mov
arpl
ja
outsb
mov
cli
daa
in
push
ljmp
sbb
jae
sbb
js
in
imull
aad
mov
add
add
add
or
add
add
mov
inc
add
add
jle
jmp
mov
cwtl
pop
or
add
mov
inc
add
add
cmp
std
mov
cmpsl
clc
roll
add
ds
je
mov
leave
mov
cmpsb
scas
jnp
xlat
pop
mov
mov
arpl
jl
sti
sti
jl
xchg
loope
repnz
or
call
pop
adc
pop
outsb
sti
jp
pop
int3
and
xchg
xchg
pop
add
ljmp
mov
outsb
shlb
and
add
add
jno
pop
lcall
mov
add
notl
and
xor
mull
popa
lds
jae
sbb
adc
add
xor
add
add
sub
add
add
pushf
int3
cmc
sub
mov
subb
mov
cmp
push
into
mov
cmp
mov
test
cmp
jg
dec
lahf
popa
out
mov
es
into
int
out
mov
and
popf
xchg
adc
loope
mov
xchg
cmp
pop
insl
mov
xor
xchg
mov
jo
lods
mov
test
in
pop
jb
cmp
push
add
lret
fiaddl
mov
daa
std
lods
mul
jb
xchg
lds
jb
fdivrp
outsb
add
and
ds
adc
xor
sbbl
and
cli
pop
hlt
xor
jns
cmp
insl
mov
cltd
aaa
or
dec
add
add
xchg
pop
mov
ret
cmp
add
add
mov
decb
add
add
add
dec
mov
aas
or
add
add
scas
xchg
lcall
mov
stos
or
add
add
add
add
jns
fisttpl
add
add
add
dec
add
add
out
hlt
cmc
out
cmpl
mov
xlat
enter
aas
mov
xor
pop
pop
cmc
out
imul
pop
pushf
ljmp
jae
xor
scas
pop
je
mov
push
fucomip
les
mov
adc
lds
sub
jle
pop
test
sbb
mov
in
outsl
mov
inc
lds
stos
mov
mov
std
in
lcall
fisttps
loop
and
mov
sbb
add
add
and
add
add
pop
lret
xlat
movsl
dec
repnz
push
jno
sti
cmp
test
pop
pop
add
add
add
enter
mov
imul
out
stc
pop
mov
add
add
stos
mov
add
cwtl
dec
sub
add
add
xchg
cwtl
inc
and
add
add
insb
add
add
in
or
add
add
mov
add
add
push
das
or
jb
jae
mov
dec
in
imull
add
mov
push
add
or
cmp
lret
add
add
xor
pop
pusha
mov
insl
sbb
mov
call
add
popf
sbb
dec
adc
cltd
sbb
inc
mov
in
pop
mov
popa
mov
adc
adc
rclb
jle
aaa
mov
add
add
cmc
gs
or
jg
cmp
fsubrl
add
add
add
add
lahf
jge
add
add
push
push
mov
add
add
sub
add
add
and
mov
cltd
out
dec
cmpsl
sbb
mov
mov
adc
and
mov
mov
inc
adc
fbld
add
add
sbb
mov
xchg
or
mov
mov
xchg
ljmp
lds
mulb
add
add
jnp
and
lahf
xchg
mov
fnsave
mov
sub
imulb
les
icebp
sti
dec
movl
cwtl
sbb
cmpsl
loop
push
dec
and
jne
pusha
mov
mov
les
das
cltd
out
fdivl
add
jg
stos
mov
outsl
pop
mov
xor
cwtl
jns
xlat
xor
xchg
cmc
dec
mov
fwait
sub
cmpsl
sbb
int3
loop
dec
xlat
enter
clc
cmpsb
int3
enter
rclb
xchg
jne
mov
inc
add
add
cmpsl
jle
filds
ja
sub
fldl
call
inc
lds
je
das
testl
jo
sub
sahf
xlat
aaa
out
mov
les
add
stc
loopne
mov
adc
add
add
dec
mov
add
add
nop
adc
insb
add
add
xchg
enter
loopne
pop
mov
xor
xchg
aaa
lret
and
loopne
add
outsl
in
mov
add
add
add
incl
dec
mov
mov
repnz
out
popf
pop
pop
jmp
xorb
xchg
lods
inc
imul
ret
xor
hlt
add
sbb
add
push
mov
loop
scas
sbb
xor
lret
inc
scas
repz
filds
fstpt
jne
dec
gs
bound
pop
jle
out
mov
leave
test
dec
lret
loop
stc
mov
add
add
int
daa
pop
test
xchg
and
push
cmp
scas
mov
out
fnstcw
jp
cmp
push
jmp
mov
pop
gs
dec
fidivrs
out
or
sbb
add
mov
add
pop
mov
enter
sbb
and
das
push
aas
mov
jb
dec
lods
push
dec
nop
arpl
xor
mov
call
jae
jns
mov
or
add
add
sbb
test
cmp
iret
mov
add
sbb
mov
jne
out
or
jmp
add
add
mov
dec
mov
push
adc
nop
cmp
outsl
sbb
ret
mov
xor
dec
notl
cmp
pop
adc
dec
cmc
daa
mov
addb
popf
loope
mov
pop
mov
add
jae
jmp
xor
jns
daa
orb
mov
dec
movsl
xor
xor
and
pop
out
jno
and
cwtl
rclb
add
add
mov
cmc
pop
xchg
pop
int
jmp
and
push
mov
in
repnz
call
add
mov
movsl
adc
ror
and
add
add
outsl
imul
pop
ljmp
add
add
add
dec
data16
or
add
add
into
scas
dec
inc
xchg
mov
bound
xchg
xchg
andb
xchg
mov
jae
repz
push
mov
ja
fimull
sub
add
add
mov
add
cmp
popa
jae
outsb
test
sub
addr16
inc
adc
cld
pop
repz
into
pop
out
inc
adc
add
mov
mov
mov
xchg
jno
scas
les
jp
add
add
push
xchg
stos
add
aam
jge
sbb
add
add
jns
insl
loope
lds
cmp
add
xchg
mov
xchg
push
jnp
sbb
leave
pop
mov
add
ljmp
add
adc
pop
mov
xchg
xor
add
add
lret
add
add
add
add
and
push
push
push
lds
add
add
pop
shlb
mov
mov
xchg
pushf
sub
fbstp
add
frstor
lods
mov
jo
xchg
arpl
pop
ret
pop
lods
flds
add
add
add
add
mov
or
push
xchg
test
inc
jmp
shll
mov
add
mov
xor
add
add
jle
and
add
add
xor
cmp
adc
sub
mov
add
add
or
push
and
fimuls
jnp
loop
ror
mov
add
add
scas
xchg
jmp
inc
xchg
xor
xor
stos
mov
add
cltd
test
pop
leave
inc
daa
inc
mov
pop
add
cmp
in
and
add
fcoms
pushf
push
mov
inc
pop
push
testl
imul
jbe
test
cmc
mov
push
and
adc
popf
jns
je
imul
xchg
test
add
add
add
inc
aaa
sbb
rcrl
cmpsb
aam
out
or
push
mov
inc
jge
add
orb
jle
push
jo
add
add
push
or
in
addr16
mov
or
add
add
int3
cmc
mov
sbb
sbb
sbb
fcomip
push
fdiv
loopne
add
add
pop
sub
add
add
cmp
ljmp
add
cmpl
and
add
add
add
cmc
mov
jnp
scas
flds
fsubs
test
sarb
mov
mov
mov
out
and
add
add
push
dec
mov
sbb
pushf
mov
fsubrl
mov
scas
das
cmp
mov
xor
imul
add
add
adc
es
and
sbb
je
js
lret
pop
lds
rcrl
sub
in
or
xor
test
mov
mov
in
incl
add
lcall
addr16
mov
dec
and
das
and
mov
pop
mov
mov
dec
dec
loopne
push
xchg
popf
lods
outsl
mov
mulb
add
add
mov
xor
adc
frstor
popa
sub
stos
ss
cwtl
pop
mov
out
lds
cmp
sbbl
add
push
insb
mov
test
loopne
arpl
ja
mov
mov
je
add
ret
jb
and
or
sti
adc
test
cs
fdivs
and
mov
int
dec
jbe
fwait
test
daa
push
add
add
add
mov
push
jp
test
add
add
sbbl
mov
cmp
int
add
add
push
mov
pop
incl
pop
push
shlb
add
imul
cmp
add
add
imul
sbb
imul
sar
mov
cs
add
add
dec
mov
mov
push
in
mov
add
add
shlb
enter
call
dec
add
add
mov
sbb
add
add
add
add
testl
mov
out
idivb
push
inc
mov
popa
nop
push
dec
xor
cmc
mov
lds
leave
cmp
fmul
or
ret
inc
mov
test
arpl
dec
jge
push
scas
push
push
pop
nop
insl
ret
imul
xchg
add
add
shrb
test
cli
dec
ret
or
add
add
mov
jbe
mov
push
cmpsl
ret
xchg
imul
xorb
ja
jo
jne
fadds
or
add
add
xlat
scas
push
lods
cmpsl
pop
pop
push
adcl
add
add
add
add
add
add
adc
add
add
outsl
rol
pop
mov
addb
add
add
sbb
insl
rorb
add
pop
leave
mov
jl
lahf
push
cwtl
and
add
add
addr16
bound
pop
xor
add
add
pop
mov
pop
imulb
frstor
add
add
add
add
add
cmp
cltd
lret
imul
imulb
xchg
dec
mov
aad
stos
es
xlat
pop
fcmovbe
test
loop
or
aaa
fpatan
push
in
jmp
dec
push
cmp
ret
in
jb
cli
daa
test
add
add
mov
stos
clc
mov
jnp
shll
bnd
loope
add
add
add
dec
mov
push
push
arpl
cmc
inc
mov
pop
out
cmpsl
dec
fistpl
mov
dec
in
sbb
mov
add
xlat
and
add
add
stos
imul
enter
mov
pusha
add
add
xchg
cld
lock
fcompl
aaa
cmp
mov
ss
fcmovbe
dec
cmp
add
add
add
inc
es
icebp
cmpsl
mov
xor
push
sahf
jae
push
inc
mov
lock
cld
pop
sbb
gs
imul
or
add
jl
std
daa
and
add
add
add
add
add
jno
inc
adc
lods
in
imul
sbb
ds
xor
mov
nop
xor
cmp
sbb
mov
pushf
push
outsl
das
into
addr16
pop
in
fimull
in
or
mov
outsl
mov
imul
pop
mov
add
sbb
aaa
mov
mov
rcrl
mov
ds
lret
test
scas
ja
sub
fmull
test
push
and
add
add
push
fadd
cmp
leave
pop
jmp
sub
add
cmc
inc
dec
push
lods
mov
adc
adc
cmpsb
adc
negb
in
fs
outsl
push
ja
stc
aas
mov
in
mov
mov
stos
pop
or
mov
ds
lds
mov
add
lds
lret
jp
loop
pop
sahf
mov
add
inc
add
add
sbb
mov
loop
popl
mov
lret
inc
mov
push
daa
jno
subl
xchg
arpl
in
xchg
mov
mov
mov
mov
ficoml
add
test
pop
pop
add
daa
movsl
xorl
add
add
mov
orb
bound
xchg
pusha
add
add
push
mov
mov
lret
mov
add
xchg
pop
mov
mov
jnp
lret
stc
adc
add
add
stos
ds
mov
mov
fwait
loop
cltd
jge
xchg
ds
mov
cmp
or
dec
addl
pop
icebp
aas
pop
mov
mov
add
loop
jl
in
lds
mov
adc
pop
xchg
dec
push
js
repz
add
add
sti
iret
push
ficomps
xchg
xor
push
inc
mov
cmpsl
and
enter
cmp
pop
nop
mov
out
jecxz
add
add
jns
sahf
subb
lods
mov
aaa
pop
dec
pop
dec
imul
test
shlb
add
add
js
jne
ljmp
lcall
push
xor
sbb
adc
mov
sahf
jae
sbb
sub
ret
lea
add
nop
lahf
iret
mov
call
push
cmp
sub
clc
xchg
rorb
inc
mov
cmp
fcomp
inc
add
add
xor
xor
ljmp
add
add
ret
in
or
repz
fs
aam
test
add
add
fbstp
shr
imul
je
rcr
movsb
xchg
fucom
ret
mov
or
loop
test
jecxz
add
add
xchg
mov
sbb
add
jp
sbbb
or
add
add
pop
jae
mov
lock
cmp
cwtl
je
mov
xchg
dec
inc
daa
jo
les
mov
xlat
sub
adc
jb
jmp
add
add
add
add
add
pop
pop
dec
mov
add
add
mov
jmp
addr16
xchg
pop
push
cmpsb
mov
ret
pop
jo
or
sahf
add
mov
jns
stc
mov
jbe
jbe
ljmp
imul
movsl
mov
mov
mov
int
int
cmp
cmpsl
shl
cmp
dec
fstl
xor
jecxz
xor
jecxz
aaa
push
imul
movsl
pop
adc
add
cwtl
popf
pshufw
cmp
popa
imul
add
add
add
fnsave
add
xchg
mov
add
add
pop
mov
sbb
lret
mov
xor
int3
cmp
hlt
add
xor
xchg
xor
lock
pop
inc
cmp
add
add
mov
iret
fisubl
jmp
and
inc
in
icebp
jnp
scas
sub
add
add
adc
notb
or
add
add
pop
jmp
mov
enter
add
shrl
add
test
push
cmp
add
add
mov
sub
add
add
and
add
add
pop
sub
add
add
mov
push
pusha
mov
sarb
adc
push
push
pop
sbb
push
push
pop
sub
mov
jg
mov
or
add
add
dec
add
add
gs
and
add
add
iret
and
and
call
push
push
in
sbb
add
mov
add
add
out
adc
xchg
das
in
sbb
sbb
push
sbb
cmc
imul
and
add
add
add
add
add
out
lahf
cli
jg
jp
sub
add
add
push
jo
mov
enter
sub
lret
or
mov
outsl
and
add
arpl
inc
sub
mov
cmpsl
mov
mov
insb
add
add
add
add
add
pop
mov
add
add
cmpsl
mov
xlat
mov
cmpsb
xchg
jmp
int3
es
add
add
mov
fcomp
js
or
clc
rorl
add
add
mov
pop
jo
jbe
adc
cmc
pop
cltd
or
addr16
loope
jo
add
add
stos
loopne
mov
in
add
add
add
add
inc
dec
aad
add
add
pop
dec
imul
dec
xchg
mov
stos
xchg
sbb
add
cltd
xor
cld
fisttpl
jp
push
jecxz
jo
stos
hlt
test
leave
loope
into
xchg
add
push
xchg
sub
xorl
add
pop
hlt
iret
sti
pause
inc
insl
leave
mov
jge
jg
cmp
add
add
push
push
jb
in
loopne
mov
add
dec
mov
pop
push
push
xor
ret
jnp
push
xchg
sub
mov
cmp
push
insl
lods
mov
mov
add
mov
pop
xchg
add
add
add
loopne
and
mov
sub
xchg
add
add
dec
add
lcall
dec
add
add
fisubrl
sbb
add
add
add
js
fs
lods
jl
insl
das
push
ja
int
ret
pop
dec
scas
fisttpll
mov
add
fdivs
add
add
and
add
add
mov
jmp
add
rcr
push
xchg
dec
mov
pop
mov
mov
orb
push
test
sbb
pop
cli
sbb
push
fcoml
and
add
add
mov
push
inc
add
add
cmp
dec
pop
pushf
repnz
mov
rol
mov
mov
jmp
ficoms
shl
mov
mov
aaa
push
out
aad
adc
int3
jns
xor
pop
xor
and
push
test
pushf
shrl
add
add
daa
loope
mov
enter
js
xchg
fdivrl
dec
je
loopne
mov
add
mov
or
push
aaa
push
inc
add
mov
or
add
add
cmpsl
fsubrs
cli
mov
arpl
or
insl
inc
add
add
sub
hlt
pop
jle
movsb
xchg
mov
mov
stc
leave
jne
jns
mov
push
jge
int
sub
add
add
push
dec
mov
add
pop
jle
push
sbb
push
sub
add
add
and
jecxz
push
dec
imul
pop
jbe
decb
enter
cmpsl
imul
mov
cs
lds
xchg
add
sbb
cmpsl
inc
mov
or
add
add
pop
fisubrl
add
add
mov
fdivs
jnp
lret
mov
jge
pushf
arpl
das
push
arpl
orl
inc
pushf
pop
sbb
enter
mov
add
add
add
dec
mov
arpl
divb
add
add
jae
jmp
xor
dec
mov
inc
add
add
add
dec
mov
mov
mov
mov
repnz
call
pop
enter
mov
jo
or
jae
mov
jp
mov
cmp
call
push
gs
lcall
add
mov
pushl
jb
push
jne
dec
loopne
and
add
add
shlb
lea
add
add
add
add
pavgb
mov
sub
sbb
xlat
xor
add
add
xor
add
add
imulb
mov
cmp
nop
in
clc
mov
adc
mov
arpl
lahf
negl
fidivrl
js
je
aad
xlat
jl
inc
push
sbb
es
or
call
movsb
xchg
loope
sub
add
add
mov
loop
cwtl
sbb
stos
jecxz
add
add
loopne
pop
adcb
mov
sbb
pop
dec
mov
xchg
mov
push
adc
pop
adc
add
add
lods
aas
inc
cltd
ret
loopne
cmp
add
jmp
hlt
lods
or
jnp
int
gs
cli
jo
add
add
jbe
xchg
or
or
dec
and
daa
mov
jmp
jge
scas
xchg
or
jmp
popa
jbe
sub
scas
ds
test
gs
add
add
in
enter
mov
aam
xchg
push
cmc
mov
add
add
mov
add
sbb
sub
adc
mov
add
aam
xor
mov
add
add
lods
lahf
mov
adc
push
xor
aaa
add
mov
sbbl
add
add
into
scas
clc
xchg
imul
mov
or
add
add
cltd
push
addb
divl
or
push
dec
mov
push
mov
jb
add
add
add
add
into
push
and
lea
flds
popf
clc
mov
sbb
dec
mov
rcr
sub
and
add
add
arpl
mov
add
xchg
mov
cmp
dec
lahf
je
xlat
cmp
lret
rcr
jp
imul
add
fcomip
mov
aam
insb
add
add
pop
xchg
cmp
cltd
sbb
mov
dec
ret
jle
ret
cmpsb
mov
add
adc
add
popa
aad
ljmp
ljmp
xchg
add
scas
lret
inc
cmpsb
mov
repz
mov
add
inc
jp
shll
outsl
add
add
add
sbb
or
mov
or
lock
test
stc
adc
add
mov
scas
pmuludq
xchg
add
add
add
in
dec
data16
jno
xor
cwtl
xchg
xchg
push
jae
insb
add
add
in
push
push
push
popf
aas
ficoml
out
flds
add
add
mov
fdivrs
mov
mov
lret
stos
jge
cmp
movsb
repnz
pop
jecxz
sbb
jmp
add
popf
insb
mov
fnstcw
fwait
xlat
dec
add
add
xchg
cltd
stos
mov
aaa
cmp
add
dec
mov
add
add
adc
add
add
movsb
outsb
push
inc
mov
and
inc
add
add
in
stos
in
cmp
xor
add
aas
mov
add
add
shll
add
add
push
test
xchg
shlb
xor
in
jge
xchg
mov
pop
leave
mov
push
jne
add
shl
push
lret
pop
fwait
lods
imul
add
fmul
clc
xchg
sub
add
add
insb
mov
cmp
bound
popa
sub
pop
icebp
sub
loope
mov
mov
push
fwait
movsb
push
push
mov
xor
test
push
int
pop
movsb
sbb
testl
add
add
adc
sbb
lds
dec
rcll
aas
cltd
push
inc
push
insb
add
add
cli
sub
mov
and
add
add
mov
dec
mov
sub
outsl
ss
ficompl
or
dec
xor
push
rorl
cld
xchg
xor
push
adc
icebp
in
and
jno
push
adc
jbe
cmp
xor
xchg
mov
add
add
add
add
or
inc
hlt
movsl
jmp
add
cld
and
sub
stos
dec
xorb
inc
std
push
xor
inc
in
dec
xchg
not
mov
inc
mov
mov
jo
je
daa
mov
dec
pop
pop
fpatan
stos
fstps
adc
test
or
jb
gs
mov
aam
lret
push
inc
pop
rol
pushf
dec
add
add
or
add
add
mov
inc
inc
mov
push
int3
mov
jno
out
es
add
mov
std
std
mov
add
add
repz
loop
xor
repnz
dec
push
arpl
add
push
aas
mov
stos
mov
sub
sar
sub
rcr
outsl
jo
mov
mov
cmc
fldenv
mov
add
dec
or
rolb
inc
test
add
add
push
ss
cmp
sub
dec
aaa
and
add
add
jne
and
out
sub
cmp
xor
mov
add
add
jg
stc
bnd
cmpsb
xor
add
add
jns
mov
sub
pusha
add
add
lret
xchg
imul
mov
mov
hlt
pop
orb
jne
sahf
test
jo
push
xor
add
add
dec
shll
scas
cld
jo
test
in
or
add
add
add
add
xchg
add
add
dec
mov
scas
mov
mov
mov
aad
jge
dec
push
sub
add
xchg
push
xchg
mov
mov
push
push
outsl
sar
jge
xor
add
add
xlat
notl
outsb
movsl
jno
sahf
mov
je
std
mov
stc
jp
pop
arpl
mov
mov
xchg
add
add
add
jb
cmp
mov
xchg
add
fsubl
jb
mov
add
sbb
add
repz
inc
mov
outsl
je
add
add
add
add
xchg
cmp
and
add
add
daa
fs
push
das
int3
mov
push
cli
jge
xchg
pop
xchg
stc
xchg
add
add
add
sbb
call
dec
add
add
sub
dec
sahf
imul
aas
jp
pop
sub
ljmp
pop
cmp
and
lcall
mov
lods
out
ficoml
adc
xchg
add
mov
jg
rorl
add
add
sub
cli
push
test
inc
mov
inc
rcl
repnz
mov
movl
add
add
ret
stos
xor
orb
cmp
or
add
inc
ret
mov
mov
sahf
into
into
xor
add
add
lds
test
lahf
daa
repnz
dec
pusha
add
add
jmp
jg
add
add
stc
dec
xchg
ret
lds
mov
daa
mov
mov
add
pop
mov
cltd
in
scas
shl
icebp
add
insl
sub
add
add
adc
lods
outsb
sbb
push
scas
psllq
xor
sub
add
add
adc
add
mov
or
or
sti
pop
xchg
and
mov
mov
loop
mov
mov
or
add
add
das
pushl
inc
add
add
lret
mov
aaa
sub
aad
sbb
push
andb
test
lcall
add
mov
mov
add
add
and
push
xchg
fistpl
pop
jge
daa
call
or
add
add
shlb
cmp
sbb
outsl
xor
jns
int3
push
cmp
inc
sbb
add
add
mov
test
mov
add
add
shll
inc
mov
fwait
adc
mov
pop
lds
loop
add
pop
xor
inc
mov
add
or
and
add
add
add
add
fisttpll
push
xchg
xchg
push
xor
sti
or
jp
cmp
ljmp
add
add
cld
adc
ja
sub
loope
cld
sti
mov
add
add
scas
in
push
notl
add
add
fsts
fisttpl
sub
mov
add
add
dec
outsl
mov
jne
add
fimuls
add
stos
test
ret
nop
sahf
dec
aam
jbe
ja
xchg
xchg
call
xor
int
inc
or
in
ret
add
add
add
add
add
pop
loope
mov
inc
add
add
cmc
sbb
cld
aaa
fidivs
inc
add
add
lea
add
sub
stos
pop
mov
push
pop
pop
add
xor
add
and
pop
inc
cltd
xchg
shrl
jl
es
fsub
filds
cmp
mov
inc
xor
je
aad
cmp
xchg
and
outsb
loope
jb
mov
inc
push
mov
icebp
lods
out
xor
push
mov
pop
xor
mov
stc
rcl
ret
mov
add
add
cmp
shlb
add
les
test
add
add
add
sbb
add
add
inc
inc
nop
loopne
negb
sbb
dec
clc
ljmp
add
add
add
pop
lret
lock
mov
std
inc
rorb
add
add
dec
adc
rcrl
add
cmc
and
rorb
testb
mov
mov
and
pop
insb
mov
pusha
add
add
imul
out
bswap
fsubrp
hlt
jmp
pushf
lods
xlat
enter
xor
insb
mov
push
ficoml
rcll
push
hlt
scas
pop
aad
sahf
lds
sbb
ret
mov
add
add
cwtl
dec
jb
mov
sarb
mov
mov
gs
dec
xor
pop
mov
lea
push
push
stc
cmp
sarl
mov
leave
cmp
add
add
icebp
jecxz
lock
push
mov
add
mov
xlat
sub
cmp
xor
xchg
sahf
cmp
add
insb
mov
dec
sar
lea
sbb
jecxz
mov
mov
std
stos
add
add
add
mov
ss
ds
aam
cmc
dec
add
add
pop
mov
pop
int
dec
jle
pop
adc
dec
add
add
lahf
and
mov
pop
cmp
push
adc
push
shrl
mov
inc
ljmp
fstps
lret
movsl
shll
aam
dec
mov
add
add
jg
stos
pushf
inc
add
add
vpaddsw
aaa
fs
push
ficoml
aad
lods
pop
pop
loope
test
inc
add
add
sub
add
add
cmp
pop
jns
jge
fisttps
repz
enter
mov
pusha
add
add
testb
jb
out
xor
mov
dec
mov
push
pop
mov
add
add
mov
icebp
pop
pop
scas
lea
add
add
lahf
mov
add
add
sahf
jmp
sub
push
add
sub
add
add
and
add
add
sahf
jns
and
add
add
or
mov
cwtl
mov
out
cwtl
imul
dec
xor
popf
sbb
jp
repz
and
add
fadds
cmp
add
add
pop
jge
stos
aaa
les
fwait
ret
push
mov
jmp
adc
lods
stc
addr16
add
add
jl
repz
add
add
enter
xchg
mov
cwtl
imul
add
add
divl
ret
inc
sub
enter
cmp
scas
rolb
ja
iret
aam
cs
or
add
add
mov
mov
inc
outsb
mov
ror
pop
push
dec
stc
clc
mov
or
add
add
shll
and
add
add
pop
or
ret
mov
cli
fs
jmp
adc
test
in
push
jcxz
in
xchg
push
push
mov
pop
push
sub
add
jecxz
inc
xor
adc
sbb
adc
lods
inc
aam
cmc
adc
inc
add
add
mov
pop
ret
decb
mov
aaa
fnstsw
and
push
cltd
mov
xchg
inc
adc
inc
arpl
cld
scas
jnp
add
add
out
mov
std
pushf
pop
popf
add
add
and
mov
sahf
int
jle
pop
or
add
rcrl
mov
add
add
popa
icebp
jns
and
add
in
add
shll
icebp
lret
hlt
imul
mov
adc
pop
jp,pt
mov
xchg
cltd
daa
cmp
mov
dec
add
add
popa
inc
add
add
cmp
adc
add
fistpl
jne
sbbl
jno
cmp
mov
add
add
cmpsb
add
adc
adc
add
rol
mov
xchg
ljmp
push
cli
jp
repz
sbb
scas
rcll
inc
cmp
pop
loop
cmp
cmp
inc
pop
lock
ljmp
jae
push
dec
imul
lods
addb
cwtl
sbb
pushf
push
push
xchg
add
mov
add
pop
stos
mov
mov
ret
mov
mov
xchg
add
add
add
das
jmp
mov
mov
imul
stos
sub
cmpl
adcb
icebp
out
push
mov
xchg
fstpl
dec
mov
and
cltd
xorl
cmp
add
out
nop
push
and
add
add
mov
mov
out
sbb
add
push
repz
push
and
or
add
add
pop
scas
andb
mov
aas
scas
pop
subb
add
je
mov
mov
mov
xchg
cmp
dec
add
add
mov
mov
mov
sub
mov
outsl
xor
mov
pop
xchg
mov
out
scas
leave
lcall
xchg
mov
add
push
jae
icebp
fs
loope
add
aad
jl
aad
xor
les
push
push
xor
add
add
add
adc
add
add
add
add
add
add
or
pop
inc
xchg
imul
add
and
inc
test
sti
inc
dec
imul
int
xchg
lcall
jl
mov
push
imul
add
add
and
dec
outsl
sbb
inc
xchg
dec
xor
je
or
add
leave
or
fdivrl
inc
inc
or
add
add
das
cmp
mov
dec
test
inc
movsl
arpl
mov
movsl
adcb
imul
lret
loop
es
jbe
into
fs
push
push
push
push
adcl
in
das
mov
push
add
dec
mov
jge
fisubs
das
or
add
add
adc
xchg
movsl
sub
add
add
mov
imull
in
ljmp
std
sahf
flds
push
jno
imul
inc
cmp
and
add
add
dec
adc
fs
fs
pop
scas
sub
add
lods
dec
lcall
shlb
add
push
outsb
daa
or
loopne
mov
sub
and
shlb
cltd
scas
fwait
lcall
jg
pop
mov
add
sbb
and
mov
stc
lock
lahf
and
cmp
je
add
mov
fiadds
mov
pop
push
insl
and
add
jp
or
add
add
popa
and
repz
maskmovq
notl
pop
in
fs
dec
dec
or
sub
add
add
ss
adc
cltd
andb
add
clc
cmp
stos
or
pushf
or
mull
add
add
mov
insb
add
add
fisubl
shlb
add
imul
sti
clc
insb
add
add
push
in
ret
pop
cmp
inc
loop
fwait
dec
mov
daa
lds
xorb
sti
std
stos
xchg
adc
push
loope
out
outsl
jns
add
fldl
fldlg2
and
add
add
xchg
stos
mov
or
pop
lahf
pop
ss
cmp
or
sbb
push
push
dec
mov
int3
and
add
or
push
or
add
add
push
lahf
jmp
in
lods
pop
xor
or
mov
push
bound
push
add
ret
push
or
add
add
loope
or
dec
sub
fisttps
add
add
pop
mov
in
or
dec
das
jne
loope
mov
add
data16
push
les
xor
imul
sbb
add
add
aaa
pushf
sub
add
add
adc
jne
jge
mov
cmp
mov
idivl
jp
cmp
ds
jl
or
jl
sbb
int3
mov
add
jae
mov
cmpsl
inc
popa
inc
mov
mov
icebp
cmpps
xchg
mov
jo
sti
out
adc
ds
mov
push
pop
mov
in
sbb
aaa
xchg
pop
pop
fildll
lret
jno
adc
add
add
sbb
inc
iret
xor
outsb
xor
dec
mov
jbe
data16
push
adcl
outsb
negb
gs
add
or
add
add
mov
add
push
mov
sbb
repnz
pop
or
sbbl
add
mov
and
out
jle
mov
dec
gs
test
pop
sub
add
add
xlat
lret
jmp
add
add
jg
xor
sahf
popf
repz
out
and
mov
sbb
es
dec
add
add
xorl
ds
addb
add
mov
jno
enter
jb
xchg
fisubs
mov
dec
aaa
adc
jae
aad
and
pop
jno
add
in
outsl
xor
and
and
add
add
cmpsl
adc
mov
in
mov
mov
andl
sbb
cmp
seta
or
mov
cld
adc
mov
xor
mov
vpsubsb
sub
add
add
je
push
xchg
in
mov
add
add
pop
fdivl
xor
sbb
mov
mov
dec
sbb
lds
mov
and
xchg
push
and
add
add
lret
dec
mov
fidivl
jnp
push
loop
add
add
cmp
sub
push
cmp
add
pop
cmp
addl
add
add
fidivl
xchg
dec
mov
pushf
cmp
pop
xchg
add
add
add
and
add
add
aas
fwait
jp
mov
inc
fimuls
les
or
adc
daa
push
sbb
icebp
fnstcw
mov
or
add
add
cwtl
xor
cltd
dec
daa
fidivrl
cmpl
dec
cmp
cltd
ret
popf
lock
jae
jle
sub
add
add
jecxz
jne
xchg
es
pop
std
int
pusha
mov
push
ds
lock
add
mov
in
sbb
jge
out
sub
add
push
enter
movsb
test
sub
mov
rclb
movsb
mov
mov
xchg
jp
in
pop
sarb
mov
les
lahf
mov
xchg
dec
mov
fnstcw
sbb
jnp
mov
push
adc
pop
jle
ja
inc
negb
fdiv
frstor
add
add
popf
cmp
inc
mov
and
or
add
add
add
mov
pushf
xor
inc
aam
add
add
call
mov
paddsb
add
add
iret
and
add
add
push
movsb
clc
ds
leave
call
jns
inc
xchg
xchg
cmpsb
sub
add
xor
add
add
pop
pop
std
mov
jns
jle
cmp
ja
inc
dec
jge
rclb
jno
push
mov
adc
push
cmp
jp
jno
enter
sbb
call
add
add
pop
mov
mov
fcomi
scas
insl
ss
jp
xorb
add
add
add
xor
sub
mov
mov
popf
sub
pop
cltd
pushl
pop
jl
fdivrs
add
jg
test
adc
inc
sbb
out
dec
mov
xor
xor
xchg
ret
repnz
shlb
sub
add
add
mov
add
lahf
cmp
mov
push
mov
out
push
aas
xchg
jae
inc
add
add
in
ljmp
es
lock
hlt
cltd
xchg
test
xchg
xor
out
pop
jle
mov
xorl
cmc
pushf
dec
fisubl
notl
add
xchg
pop
sbb
stos
mov
sbb
fstpt
cmc
mov
add
testb
dec
repnz
and
mov
divb
stos
fildl
imul
xchg
ficoms
lahf
sbb
int3
and
add
add
mov
in
fucom
inc
add
add
imul
lret
mov
mov
fstps
fsubrl
bnd
in
out
out
mov
mov
mov
inc
jns
push
push
cltd
mov
jns
sub
add
add
mov
cli
sub
add
add
fwait
cmp
scas
mov
dec
lods
pushf
jae
pop
lods
pop
mov
add
sar
out
mov
add
push
outsb
popa
mov
mov
add
add
adc
mov
jno
icebp
and
jp
mov
xor
sub
popf
dec
mov
imul
or
bound
mov
jp
mov
mov
aaa
inc
dec
and
xchg
mov
add
add
and
add
add
insb
mov
and
add
add
inc
mov
sti
jns
push
pop
cmp
cmp
add
into
or
add
add
test
or
and
clc
jae
pop
nop
hlt
jle
mov
push
cmp
cmp
mov
aam
sbb
mov
outsl
aaa
push
add
add
add
add
sub
or
dec
jp
nopl
jne
push
dec
add
add
loopne
mov
imul
pop
xchg
push
add
add
sbb
out
adc
sar
fwait
jne
add
pusha
add
add
or
add
add
loope
js
insb
mov
push
cli
cmp
or
xor
jg
mov
ret
inc
je
or
pop
mov
dec
push
shlb
add
add
mov
test
pop
adc
outsb
adc
test
mov
mov
add
mov
dec
mov
cli
insb
mov
lods
pop
push
inc
loop
add
cmp
add
stc
inc
pushf
sbb
test
cli
mov
inc
xchg
inc
mov
mov
add
dec
es
adc
cld
int3
xchg
cmp
sbb
lcall
mov
add
mov
xchg
mov
call
push
fistl
pop
add
mov
mov
add
push
xor
fsub
data16
mov
push
cmp
pop
xchg
and
mov
mov
mov
insb
add
add
mov
add
or
out
xchg
js
cmpsl
imul
add
add
sbb
add
add
cmp
pushf
es
inc
add
add
notb
cmp
lock
adc
movsb
xor
nop
inc
jno
xchg
pop
js
mov
in
pop
enter
fwait
push
cmp
add
add
inc
mov
imul
fwait
sub
jp
xlat
repnz
inc
mov
push
fldl
sbb
add
add
in
loope
dec
add
leave
ja
popf
ficoml
jae
mov
and
or
out
repnz
sbbb
add
add
lahf
imul
pushf
cs
pop
inc
xchg
pushf
mov
add
add
mov
add
add
gs
shrl
je
mov
and
sti
pop
xchg
mov
jle
insb
add
add
ficoml
loop
sub
add
add
add
add
mov
cmp
in
test
sahf
sahf
jle
mov
and
mov
out
push
ljmp
push
add
add
add
xchg
sbb
mov
and
movsb
lcall
add
sahf
insl
mov
add
add
jp
aaa
cmp
jecxz
cltd
mov
add
add
inc
sub
add
add
add
add
add
add
sarb
addb
add
cmp
and
stos
mov
pop
data16
mov
jbe
inc
mov
inc
lds
ret
sbb
dec
pop
aas
movsb
adc
push
xchg
stos
fidivrs
imul
adc
cli
movsb
and
xchg
add
push
mov
fisttpl
fwait
test
int
js
jno
and
adc
adc
add
cld
cmp
sbb
mov
pop
popa
stc
push
cmc
sbb
jle
mov
ret
pop
lret
push
jne
jno
dec
rorb
into
fsubp
leave
xchg
xchg
out
dec
add
add
cmp
int
imul
add
cmpsl
xchg
add
add
add
xchg
in
and
mov
add
add
enter
into
inc
push
pop
out
push
repz
add
add
in
xor
push
sub
mov
mov
ja
fidivl
cmp
dec
jmp
ffree
lods
fcompl
insl
scas
mov
test
lcall
loopne
push
leave
xor
xlat
cmp
sahf
mov
adcl
cmc
mov
or
add
add
mov
inc
insb
add
add
jecxz
jnp
sbb
xchg
jo
leave
or
add
add
add
inc
xor
sub
add
add
hlt
es
and
xor
add
lret
fadd
pop
push
pop
sub
add
add
add
fnstsw
arpl
les
add
add
mov
sbb
dec
fwait
sub
add
add
mov
mov
pop
xor
add
in
iret
outsb
sarb
jo
nop
xor
adc
add
jne
add
add
add
mov
add
add
push
add
add
add
bound
and
mov
add
pop
mov
mov
insb
mov
scas
aam
inc
add
add
jmp
inc
push
popa
aad
mov
adc
or
add
lds
mov
push
fisttpll
add
add
insb
mov
push
add
add
in
add
add
int3
fistpl
add
and
pop
ret
mov
push
cmpsl
repz
add
fwait
out
inc
stos
xor
popa
pop
cmp
jmp
std
jge
dec
add
add
jp
insl
inc
dec
cmpsl
xor
loopne
or
push
jb
dec
xor
fcoml
sbb
lock
add
add
data16
rcr
das
cmp
xorb
add
ja
inc
es
adc
insl
jae
add
add
pop
iret
rcrl
or
or
jle
jle
jg
or
ss
pop
das
sbb
inc
pop
push
sbb
roll
add
aam
or
add
add
jle
cmp
mov
out
repnz
mov
xor
ja
cwtl
repnz
add
add
adc
ret
dec
mov
ror
dec
mov
addr16
das
shl
movsb
out
adcl
mov
into
out
repz
fwait
xchg
mov
push
mov
pop
xchg
mov
sub
je
shr
sbb
cmp
scas
fisttpl
ret
add
add
pushf
fdivr
and
das
inc
shr
push
addr16
xor
scas
xchg
arpl
adc
std
mov
arpl
fcmovnu
mov
add
xor
add
add
sbb
pinsrw
fcoms
std
dec
push
push
outsb
lahf
inc
cmp
mov
in
push
dec
movsb
sub
jno
inc
shl
push
jo
clc
leave
test
sub
inc
inc
dec
js
repz
iret
roll
add
add
pop
sbb
les
fs
int3
aam
insl
xor
imul
cli
movsb
push
int3
mov
pop
inc
sub
add
add
lds
mov
cmp
add
add
add
add
add
add
enter
sub
daa
or
lahf
std
loope
dec
mov
inc
or
add
add
add
pop
lea
xor
fnstsw
cvtdq2ps
cmc
mov
mov
xor
outsb
shl
inc
add
add
xor
add
add
sbb
inc
adc
xlat
pusha
mov
mov
and
mov
jl
push
stos
lret
lods
lds
ret
cmp
sbb
ret
cmp
xor
add
add
pop
lret
cmp
fildll
add
add
mov
xchg
pop
xchg
mov
aas
xchg
push
dec
pop
dec
mov
jecxz
dec
mov
jne
repnz
fcmovbe
lret
fadds
jno
lock
add
add
add
xorl
mov
mov
add
add
lds
pop
in
insl
push
inc
mov
add
add
icebp
enter
les
add
add
push
fldcw
inc
mov
mov
cs
loop
adcl
mov
adc
inc
dec
mov
inc
iret
imul
imul
inc
sub
or
add
sub
sub
inc
mov
mov
imulb
or
inc
pusha
add
add
mov
push
mov
rcrb
xchg
cld
pop
int
das
xchg
pop
imul
jne
hlt
pop
int
lock
mov
sti
adc
mulb
rcl
js
mov
movsl
ret
add
add
add
nop
cltd
jns
mov
add
add
lahf
mov
add
add
out
ss
add
add
add
stos
cmp
popa
decb
lea
jle
iret
xchg
jmp
gs
popa
xchg
xor
push
xor
std
ds
in
mov
andb
out
dec
mov
push
sbb
xchg
mov
jp
mov
add
dec
ljmp
clc
cmpsb
mov
add
add
test
ret
lods
pushf
and
mov
les
adc
addr16
add
add
jle
dec
mov
add
add
dec
or
push
jns
je
icebp
inc
leave
jmp
push
inc
pop
adc
lods
sub
sub
outsl
icebp
jnp
das
sti
loopne
xchg
mov
inc
ret
and
cmp
out
shl
mov
add
add
rcll
xor
or
das
xchg
mov
xchg
and
jnp
inc
add
add
jnp
hlt
push
stos
icebp
inc
ja
ljmp
xchg
daa
cltd
inc
add
add
stos
mov
add
fstpt
cmpsb
xchg
out
mov
ss
xchg
ret
xchg
enter
xor
test
ljmp
xchg
iret
dec
xchg
dec
aad
or
jecxz
outsl
or
add
add
pop
aas
fsubrl
xchg
inc
insl
scas
push
cmp
push
notl
cmpsl
lods
test
dec
movsl
sub
inc
push
imul
mov
mov
dec
xlat
jmp
add
add
cmp
sub
ficompl
ja
out
push
xor
test
mov
push
cli
sub
push
mov
sbb
insb
add
add
pop
popa
pop
push
sbb
push
pop
movsb
inc
xchg
movsl
adcl
repz
add
add
sub
roll
out
dec
fidivrl
add
add
mov
mov
dec
jge
imul
xor
ja
add
add
push
dec
cs
aam
inc
scas
or
mov
inc
add
add
sbb
cmp
insl
iret
mov
fildll
xchg
or
add
add
andl
dec
test
add
fldl
add
add
dec
add
add
push
enter
and
add
add
add
add
iret
jg
js
stos
sub
pop
ret
xchg
jmp
jns
into
gs
sub
add
add
fmuls
sub
lock
out
add
cmpsl
dec
mov
stos
repnz
sub
add
add
or
add
add
fwait
movsb
xlat
mov
add
add
add
xor
into
sbb
mov
sub
ficoms
push
sti
nop
sub
mov
sub
lea
dec
shl
std
lods
insl
xchg
jne
lods
rolb
xor
sub
ja
jg
push
sahf
aad
add
movsl
sti
jg
mov
ja
sahf
sub
xor
cmc
xor
lret
sbb
inc
mov
mov
mov
rolb
mov
and
add
add
xchg
popa
mov
pop
xlat
mov
lcall
cmpsb
dec
or
push
add
add
add
out
or
inc
or
sub
jo
sub
cltd
pop
lret
mov
mov
popf
xchg
insl
sbb
add
push
adc
fadd
and
add
add
icebp
mov
std
mov
xchg
pop
mov
enter
push
xchg
mov
xor
xor
imul
add
fnsave
lds
in
cli
xor
sbb
jnp
call
shrb
imul
adc
loopne
push
rcrb
loope
or
mov
jle
imul
jge
test
cmp
mov
imul
nop
fs
shlb
add
push
adc
test
pop
add
add
add
repnz
fistpl
shlb
add
add
inc
mov
jge
add
add
add
push
cmp
pop
xor
jle
jno
jmp
add
add
dec
xrelease
leave
xchg
cli
inc
add
add
and
add
add
cmp
add
xlat
mov
stos
cmp
and
add
add
dec
mov
jb
scas
mov
xchg
add
ja
mov
mov
add
add
pushf
sahf
jo
push
sub
add
add
pusha
mov
notb
pop
or
sub
add
add
idivl
je
xchg
dec
sub
add
add
dec
mov
adc
mov
lods
iret
xor
cmp
mov
jo
inc
mov
xchg
inc
mov
cmp
or
enter
add
add
repz
lcall
mov
mov
repz
add
add
je
aam
mulb
shrl
inc
adc
add
xorb
inc
add
add
sub
jl
xor
add
add
xor
mov
ror
outsl
add
imul
add
add
add
xchg
adc
and
add
add
xor
mov
fadds
add
add
jg
sbb
and
clc
cwtl
daa
mov
add
add
add
cmp
ret
popa
sahf
or
xlat
popa
dec
mov
popa
push
adc
adc
push
in
outsb
dec
sbb
jge
xchg
aas
movsl
stos
nop
pushf
fsubr
mov
pop
jl
inc
sub
es
dec
cmp
popf
jae
mov
dec
es
add
add
inc
add
add
insb
mov
repnz
movsb
rcrl
out
push
inc
mov
out
inc
add
add
pop
ljmp
push
aaa
cltd
mov
sub
mov
or
add
add
mov
out
out
adc
in
xchg
add
add
add
adc
add
add
int
jg
pop
xchg
cmp
mov
mull
dec
pop
scas
or
test
push
mov
pop
aaa
in
dec
mov
add
add
jp
pop
popa
mov
daa
sub
out
sub
add
add
aas
fnstenv
push
or
mov
adc
xlat
push
jne
scas
sub
jl
xor
mov
mov
in
fwait
pop
jnp
notb
sbb
notb
test
jae
mov
push
fcomps
xor
cmp
mov
in
jbe
add
add
xchg
or
pushl
inc
fildll
shrl
into
xor
jnp
and
add
jae
sbb
add
add
add
lock
mov
in
pop
mov
gs
lea
add
add
pop
adc
mov
outsl
mov
mov
inc
add
add
mov
cmp
inc
dec
out
add
shrl
hlt
mov
sbb
fstl
and
and
jl
lret
cmp
into
mov
add
add
jbe
das
leave
jns
es
into
shl
divl
mov
add
add
repnz
push
fdivrs
scas
std
mov
add
repz
cwtl
stc
jns
mov
and
cmp
hlt
in
cld
pop
and
add
add
stos
fwait
repz
adc
mov
aaa
out
leave
insb
mov
cs
scas
shll
sub
adc
xor
rclb
loope
or
add
add
push
cmp
add
and
push
mov
xchg
adc
in
add
add
lahf
xorl
ds
repz
add
add
jae
or
add
add
mov
gs
movsb
scas
lret
hlt
ffreep
call
add
add
mov
add
add
add
imul
jo
sbb
jno
icebp
dec
mov
sarl
cmp
sub
sbb
fsub
xchg
cmpsb
enter
add
arpl
out
into
inc
sbb
lock
aas
push
aas
xor
adc
xchg
std
dec
add
add
adcb
ss
clc
xchg
jne
push
mov
lret
push
mov
lcall
stc
into
pop
clc
sub
push
mov
xchg
mov
jne
mov
cmpsl
inc
pop
jb
jg
mov
lods
js
insl
lods
fs
push
dec
jecxz
js
ss
out
insb
mov
pop
mov
test
cmp
addr16
mov
push
idiv
loop
mov
dec
popf
pusha
add
add
rcr
test
je
mov
ljmp
xchg
add
pop
lea
jne
xor
jae
mov
mov
add
add
and
add
add
lcall
addr16
dec
add
add
cld
cli
jecxz
fldt
add
push
and
add
add
or
enter
push
setbe
mov
hlt
daa
scas
dec
add
add
out
out
je
sarl
xchg
imul
add
pop
mov
sbb
add
add
pusha
mov
lock
jmp
sbb
test
sar
les
out
xor
add
add
mov
inc
mov
push
and
mov
xchg
int
mov
xor
mov
sub
aad
push
xchg
popf
and
inc
test
add
add
fdivs
add
add
sub
mov
sbb
dec
xchg
mov
mov
icebp
ljmp
shrl
xchg
lods
dec
adc
lcall
push
into
lods
rclb
pushf
jns
push
ja
popa
xor
add
add
movsl
mov
and
dec
mov
repnz
js
pop
js
ret
cmp
add
and
jmp
in
icebp
adc
add
test
addr16
mov
jl
cmpsb
pop
inc
mov
or
add
lea
or
cmp
push
nop
bound
mov
mov
sbb
push
sbb
movsb
push
sti
imul
add
lret
dec
add
add
mov
test
fsubl
aas
fwait
mov
out
lret
mov
xor
add
movsb
sub
sub
jmp
push
dec
sti
std
sub
add
add
mov
aas
fcmove
dec
dec
cltd
xchg
xchg
mov
mov
into
push
cmpsb
lock
pusha
add
add
xor
push
scas
fs
pusha
add
add
add
add
ret
or
lcall
jle
adc
cli
repnz
xchg
arpl
pop
fs
xchg
popl
scas
sbb
add
add
mov
push
xchg
bound
push
mov
sub
lret
ljmp
add
cmp
mov
add
xchg
xor
add
add
dec
pop
adc
add
ss
rcrb
pop
insb
add
add
jecxz
add
add
push
stos
push
outsb
jmp
cmp
xchg
xchg
mov
pop
cld
push
aam
js
mov
cmp
xor
inc
xor
add
sbb
sahf
pop
sbb
sub
push
fstpl
ss
add
ret
push
fildl
add
add
out
sbb
mov
dec
xor
xlat
mov
add
or
and
data16
mov
xor
jne
push
fcoms
pop
cmp
dec
add
add
fcoml
pop
add
add
outsl
xchg
call
sub
movsl
repnz
push
xor
insl
jns
or
add
add
xor
dec
push
in
push
cli
jle
arpl
testl
mov
negl
in
inc
xchg
loope
xor
jo
int
iret
lods
outsl
loopne
sub
or
xchg
push
shrl
sbb
lds
cmpsl
mov
stos
hlt
jecxz
fildll
add
add
cmpsl
lcall
pop
or
data16
mov
jle
or
add
add
lds
jo
or
out
cmc
add
sbb
ljmp
xor
stos
mov
mov
pop
push
dec
add
add
add
add
add
call
xchg
mov
in
movsl
loop
lahf
xor
das
test
cmp
pop
out
ret
test
gs
shl
mov
inc
stos
sahf
push
roll
mov
dec
sub
dec
mov
aam
sbb
repz
add
add
rorl
add
mov
xchg
mov
repz
dec
mov
pop
inc
jg
shll
cmp
xchg
movl
mov
cltd
mov
sub
push
cwtl
out
popf
test
mov
leave
subb
fbstp
pop
lds
jnp
add
add
dec
mov
pushf
sbb
add
add
adc
setp
or
rorl
das
xchg
xchg
lcall
sbb
adc
jb
add
add
mov
mov
dec
add
add
stos
pop
dec
add
add
ljmp
jbe
mov
in
jmp
sub
cld
pusha
mov
test
add
add
out
cmp
movsb
add
add
add
add
add
pop
xchg
into
scas
fstpl
adc
rorb
adc
daa
push
cmp
adc
jbe
sti
cmp
leave
les
add
jge
add
iret
pop
sbb
ficoml
aaa
rorb
mov
mov
daa
inc
add
add
aas
push
imulb
jl
mov
push
lods
in
add
add
add
pop
cmp
ret
inc
dec
mov
mov
fisttpll
add
add
pop
js
enter
and
int3
fs
jbe
test
sahf
add
insl
mov
add
add
stos
roll
add
mov
je
cmpsb
mov
cmp
xlat
imul
pop
sub
add
push
jae
pop
cs
mov
add
add
add
add
pushf
outsb
jns
push
mov
adc
inc
add
add
mov
pop
xchg
push
gs
add
add
orl
lret
ret
add
add
outsb
outsl
mov
fwait
insb
mov
jmp
shr
inc
add
add
and
add
add
add
add
add
sub
neg
xchg
les
pop
int3
test
testb
repnz
adc
inc
push
dec
cli
mov
mov
cmp
mov
cmp
outsl
popa
lcall
sub
add
add
jle
mov
sbb
enter
divl
inc
fdivl
add
add
xchg
sbb
and
mov
fsubs
add
add
inc
push
fbld
mov
adc
vcvttps2dq
add
add
xchg
or
add
add
sub
cmpsb
jns
mov
push
out
inc
dec
and
mov
xor
mov
add
mov
jne
das
cmp
push
xchg
pop
push
inc
cltd
cmp
leave
mov
sarl
xchg
jns
adc
pop
inc
and
sbb
xchg
lahf
push
test
loope
sbb
imul
xor
es
iret
insb
add
add
insl
ficoml
sub
fwait
aaa
sbb
sbb
push
cld
jp
jecxz
and
lcall
sbb
int3
mov
cmp
ficoms
sub
add
add
or
add
or
imul
pop
cld
sbbl
popf
mov
sub
add
add
arpl
int
or
add
add
lock
add
add
or
mov
add
test
out
mov
add
add
mov
adc
push
jne
pushf
mov
mov
adc
sahf
sbb
add
add
mov
push
outsl
pop
push
sbbb
insl
sbb
lahf
pop
popfw
dec
add
add
and
cmpsb
out
out
sub
pop
push
test
cwtl
push
mov
inc
pop
xchg
insl
mov
movsl
mov
add
pop
repz
hlt
test
imul
add
jns
mov
inc
decb
xor
mov
mov
aam
pop
aam
jmp
and
sbb
sbb
pop
jmp
into
adc
lods
xor
add
fistps
arpl
mov
mov
test
jne
lret
rcr
stos
mov
movsl
cmpsl
sbb
shll
add
add
popf
popa
inc
add
add
lds
fldt
adc
imul
or
in
mov
incb
add
sbb
in
sbb
rcrb
mov
mov
dec
mov
jge
sub
jae
int3
pop
or
add
add
pop
insb
add
add
into
shlb
sub
add
add
rorb
dec
js
in
negb
add
lret
aas
pop
sbb
pop
pop
movsbl
add
add
mov
adc
leave
fidivl
push
pop
shr
dec
mov
sbb
add
add
add
add
xlat
nop
mov
or
add
add
fwait
inc
or
mov
cltd
inc
mov
push
mov
or
cmp
fadds
add
add
pop
and
dec
add
add
add
es
fisttpll
add
add
stos
aam
scas
cmp
cmpb
push
clc
pop
jbe
adc
or
cmp
sbb
xor
xlat
or
mov
inc
sub
insb
mov
ss
cmp
ret
jo
repz
add
xor
mov
fdivrs
cmp
add
roll
repnz
push
mov
mov
sbbl
add
add
add
push
mov
fwait
stos
pop
inc
add
add
out
push
pop
pop
adc
add
jecxz
mov
lret
pop
push
daa
inc
mov
cmp
enter
repz
in
je
mov
add
sub
pusha
mov
add
add
pop
cmpsb
xor
cmpsl
xchg
xchg
pushl
lods
je
fstps
in
xor
adc
or
add
add
xchg
insb
add
add
mov
pop
mov
add
pop
aad
testl
add
cmc
fmulp
decl
xchg
movsl
xor
imul
pusha
add
add
or
add
add
mov
or
mov
mov
into
mov
test
mov
push
sbb
inc
pop
ret
in
test
push
movsb
arpl
dec
add
add
cmp
or
add
add
outsl
dec
dec
loopne
out
fldl
add
add
cmp
add
dec
xchg
fcomip
and
ret
jnp
fsts
add
add
test
sti
call
das
xor
add
ficoml
mov
cmp
push
js
mov
mov
lahf
in
sti
cmp
add
add
addr16
imul
add
add
mov
add
int3
jge
outsl
hlt
sub
mov
loopne
push
push
sub
mov
xchg
push
and
bound
adc
cmp
or
out
fistpll
xchg
inc
fcom
or
es
jno
test
sub
lods
dec
fisttps
sub
sub
add
add
test
aam
repnz
sub
add
add
xorb
pop
push
jb
fists
dec
add
add
inc
mov
cmp
add
jl
imul
push
in
mov
cmp
movsb
popf
pushf
push
push
add
out
fidivl
mov
add
pop
sbb
cli
dec
or
imul
inc
add
add
and
aas
mov
ret
sub
call
jns
jl
pop
or
jmp
push
ficomps
pop
rclb
movsl
rcll
push
dec
xchg
add
std
inc
je
jne
sbb
aaa
and
add
add
mov
add
add
add
add
inc
jl
fnstcw
push
pop
in
pop
repnz
loope
xor
shrb
xchg
sbb
and
cmc
lret
or
and
add
add
sub
add
add
inc
cmpsb
movsb
push
xor
dec
pusha
mov
popf
outsl
cltd
dec
shrl
rorl
jecxz
xrelease
jae
add
add
es
add
add
add
inc
hlt
pusha
mov
cmp
out
push
aaa
inc
pop
adc
mov
call
in
fcmove
lds
loop
mov
mov
pushf
call
add
xchg
cmovne
push
ds
stos
in
push
mov
mov
pop
popa
movsl
pop
sub
addl
xor
xchg
inc
stc
dec
fcomps
sub
inc
adc
push
hlt
cmpsb
jb
add
add
jbe
insl
jp
mov
add
out
cmp
mov
std
clc
mov
push
and
leave
mov
add
add
push
fsubrs
js
iret
ja
add
add
pop
popf
mov
cmpsb
mov
add
add
add
mov
xchg
add
negb
xor
add
dec
cmp
jbe
mov
dec
push
add
xchg
jo
pop
sub
mov
fadd
mov
dec
leave
insb
mov
jmp
fwait
jp
inc
mov
sub
add
add
jnp
sbb
orb
add
add
lcall
mov
jnp
out
xor
pop
jmp
mov
sbb
leave
push
push
jmp
mov
mov
aam
outsl
outsb
lock
popf
fwait
mov
add
add
add
cmpsl
dec
dec
mov
iret
enter
sbb
cld
fsts
adc
out
push
inc
push
cli
cli
fs
outsl
and
add
or
mov
mov
add
jb
into
popa
adc
and
pop
cli
test
or
outsb
inc
loope
cli
icebp
clc
outsl
loope
jle
mov
xchg
jp
data16
sub
adc
xor
and
add
add
fstpt
add
cmpsl
mov
mov
xlat
and
lret
cli
jle
insb
mov
mov
pop
ss
jbe
cmp
out
daa
jge
dec
movsl
or
imul
sbb
sub
add
add
pushf
stos
pop
andl
lcall
add
sub
push
push
popl
arpl
jmp
push
adc
xchg
out
cmp
add
lock
and
sbb
add
add
dec
int3
repz
punpcklbw
sub
mov
ljmp
outsb
pop
shll
and
add
add
jge
jbe
dec
and
cld
mov
inc
and
add
add
add
add
add
mov
xchg
hlt
out
repnz
add
call
add
xchg
in
and
adc
mov
push
pusha
add
add
sbb
adc
stos
mov
jecxz
inc
pop
or
mov
fwait
or
aaa
pusha
mov
add
add
add
add
scas
push
mov
lcall
lcall
ret
xor
fmuls
dec
in
inc
add
add
jae
das
out
mov
mov
xchg
mov
shl
xor
jno
fmuls
repz
mov
test
add
add
adc
sub
add
add
inc
cmpsb
js
jne
lcall
negb
inc
mov
scas
cmp
mov
adcb
popa
inc
add
add
mov
adc
mov
sbb
loope
icebp
mov
mov
insb
add
add
push
pop
ss
sub
add
add
loope
repz
mov
or
or
add
cmp
sub
add
add
add
add
out
and
add
add
fdivrs
stos
in
sbb
inc
std
aaa
test
add
add
mov
sub
inc
ljmp
mov
arpl
push
test
xchg
jo
xor
mov
in
add
add
xor
pop
aas
xor
imul
push
cmp
dec
mov
cmp
mov
mov
scas
xchg
or
iret
pop
pop
push
rolb
add
pop
lods
fistpll
cwtl
and
add
add
les
add
add
fcoms
adc
mov
add
mov
or
push
xchg
lea
in
sub
dec
mov
sahf
adc
pop
repnz
xchg
dec
scas
mov
adc
cs
jl
pop
fcmovu
xchg
cmp
andps
and
add
add
pusha
add
add
sbbb
cwtl
sub
add
add
push
or
push
in
scas
out
in
lahf
jmp
dec
inc
hlt
jge
or
inc
jne
mov
xor
inc
lods
shl
test
jns
add
add
dec
add
add
addb
pop
pop
xchg
or
xor
addb
int3
cmp
insl
dec
stos
ret
sti
les
add
nop
add
jecxz
mov
add
push
loopne
jp
mov
mov
add
add
push
pop
sub
add
xchg
shlb
adc
movsl
sub
mov
mov
je
js
shlb
aad
mov
and
add
add
add
dec
and
inc
mov
push
loop
mov
out
aam
lods
ficomps
lods
in
sbb
mov
dec
add
add
sti
push
xchg
pop
orb
aam
cwtl
repnz
fsubr
add
add
lock
xchg
xor
mov
iret
imul
jmp
cmp
inc
sub
lret
push
mov
cmp
add
sub
add
mov
or
add
sbb
pop
mov
sbb
cmp
add
add
int3
and
test
adc
pop
mov
xchg
inc
mov
rcrl
scas
jmp
inc
mov
jo
push
js
cmp
je
and
adc
add
add
or
add
add
dec
mov
jecxz
mull
mov
jne
add
pushf
xor
jg
push
fcmovbe
test
cmpl
icebp
iret
mov
dec
subb
add
add
loope
popf
or
mov
gs
xor
jb
cmp
aas
adc
xchg
jmp
inc
push
adc
push
mov
or
inc
les
iret
xchg
es
mov
xchg
adc
repnz
jg,pn
fstpt
pop
xlat
shll
add
xor
cmp
add
fisttps
sahf
mov
pop
dec
movups
xchg
mov
ss
fcoml
cmp
inc
ret
mov
ret
pusha
mov
pop
push
les
aam
cs
mov
add
std
out
dec
sub
add
add
addr16
arpl
loop
and
addr16
mov
add
and
lea
int3
hlt
aad
push
dec
add
add
xchg
sahf
subb
add
pop
xlat
enter
sahf
sub
add
add
addr16
in
nop
add
add
add
cmp
test
clc
jne
mov
fdivrl
cli
in
sbb
add
add
or
add
add
sbb
add
add
add
add
ljmp
adc
aam
iret
imul
mov
push
daa
mull
add
add
shl
xor
mov
add
push
insb
mov
andl
insl
cmp
ficomps
dec
mov
xchg
mov
test
inc
cli
pop
push
cld
push
fisubrl
inc
xchg
test
ds
dec
cmp
subl
xor
aaa
test
mov
jg
sbb
or
data16
xchg
pop
inc
xor
and
lods
add
add
outsb
mov
mov
jge
inc
add
push
mov
filds
movsb
lock
add
add
cmpsb
mov
in
pop
add
add
dec
dec
add
add
mov
sar
add
add
cmpsl
jp
cmpsb
jmp
aad
popf
sbb
cmp
out
rcrl
xchg
fisubl
add
add
popa
add
add
add
add
mov
adc
fwait
adc
sub
mov
add
add
lea
hlt
adc
fidivrl
mov
add
xor
sub
pop
stos
loop
jns
dec
xchg
add
add
xchg
cmpsl
leave
mov
outsl
inc
add
add
pusha
add
add
loop
ret
leave
fldcw
add
das
iret
data16
add
add
ror
mov
push
mov
ret
xor
mov
scas
push
pop
les
add
pushf
aad
add
add
add
lds
xor
push
mov
stos
xchg
push
loop
arpl
pop
or
xor
jno
mov
test
loop
movsl
mov
add
daa
stos
jb
test
mov
out
push
mov
imul
jbe
ss
add
add
sarl
dec
fwait
pop
pop
imul
setle
gs
das
daa
push
pop
mov
add
jmp
rclb
mov
mov
jno
pop
push
sahf
add
xlat
mov
add
add
fbld
inc
add
add
add
xchg
sti
cltd
daa
out
inc
jae
lcall
mov
mov
mov
int3
in
xlat
test
add
add
sub
inc
and
add
inc
sti
icebp
lret
pop
roll
insb
mov
jo
xorl
call
add
movsl
push
std
movsl
aaa
jl
sub
or
add
cpuid
repnz
xchg
pop
or
out
pop
dec
xor
sub
or
filds
cmp
rolb
push
jge
mov
mov
mov
mov
movsb
fsubrl
add
add
pop
cmp
dec
mov
adc
fistps
add
mov
cmpsl
cmp
cmpsl
roll
es
negl
mov
mov
aaa
xchg
pushf
in
out
mov
xchg
sbb
xchg
stc
sbb
call
jne
add
add
adc
popa
das
dec
dec
pop
bound
imul
add
add
test
test
gs
lock
xor
mov
mov
jle
inc
movsl
push
and
das
jl
pop
ret
add
add
call
adc
add
scas
inc
mov
outsl
mov
sub
mov
mov
outsb
xchg
pop
mov
mov
cmp
outsb
cmpsl
lods
mov
or
add
add
hlt
inc
add
add
push
dec
mov
cld
xchg
mov
ds
sbb
stos
repnz
mov
addr16
sbb
dec
mov
mov
sub
lahf
sub
xor
addl
add
adcl
add
and
push
xor
jmp
cmp
outsl
jle
mov
mov
sahf
mov
je
ljmp
outsb
push
mov
jo
pop
mov
add
dec
inc
adc
add
nop
inc
add
add
xor
jno
roll
push
mov
dec
lods
mov
lods
scas
jo
mov
ret
sbb
add
fistl
fsubrs
add
add
js
fcmove
jo
and
add
ds
out
sub
mov
loopne
out
rsm
sahf
cmp
jo
add
imulb
mov
call
adc
jecxz
and
xchg
jmp
jno
rcr
cmp
push
adc
imul
test
push
jle
jo
sbb
rol
add
xchg
sbb
cmp
adc
mov
ret
aad
add
add
add
add
add
dec
leave
in
mov
pop
daa
fxch
pop
pop
sub
sub
sbb
mov
mov
push
sbb
xchg
jno
push
imul
sub
pop
xor
ret
inc
and
add
xchg
push
bound
jnp
xchg
jmp
jle
push
inc
test
leave
fwait
cmpsl
xlat
sbb
in
dec
xchg
repnz
jmp
mov
adc
out
fsts
std
out
xchg
add
add
add
js
mov
or
hlt
test
sub
in
cwtl
sub
add
add
add
add
inc
adc
int3
sarl
in
mov
adc
xor
mov
call
nop
lahf
or
add
add
mov
movsb
fsubl
fnstcw
lret
mov
add
add
aam
dec
loopne
shll
add
add
fstl
add
add
add
push
jle
sbb
add
add
mov
mov
sub
add
add
jecxz
xor
add
push
out
mov
pop
xor
xorl
cwtl
cli
rorb
push
push
cli
inc
add
add
lock
sub
idivb
jp
ret
scas
test
xor
decb
add
add
lea
aam
sub
add
add
lret
rcl
pop
jle
in
mov
add
add
adc
lock
xchg
add
add
add
add
es
mov
mov
add
lcall
in
imul
pop
ja
add
inc
add
add
loop
sub
add
add
jae
out
test
mov
bound
and
add
add
xchg
rolb
add
mov
mov
push
ja
and
loop
aaa
inc
mov
jmp
orb
mov
xchg
xor
xor
shlb
cmp
dec
pop
mov
std
jnp
sub
sti
add
or
add
add
mov
add
add
fimull
je,pt
adc
adc
or
mov
mov
mov
sti
lret
inc
add
add
into
add
add
add
js
test
cmp
lret
loope
jbe
pop
sbb
call
adc
cli
pop
xor
aad
jp
push
adc
push
sahf
sub
add
add
add
add
cmc
mov
cmpl
jle
mov
dec
add
add
dec
push
jl
scas
dec
into
xor
mov
add
add
pushf
test
jmp
insl
pop
sahf
loope
hlt
stos
mov
sub
jnp
insb
add
add
jp
insl
addl
inc
or
add
add
sbb
cwtl
repnz
cmp
lret
outsb
pusha
add
add
mov
add
dec
and
insl
test
inc
iret
adc
cmp
pop
ret
aas
call
add
aaa
fidivl
sti
jae
sbb
dec
lret
push
sub
xor
call
add
jecxz
dec
decl
add
add
or
add
add
jo
mov
insb
mov
push
out
divb
ret
xchg
push
mul
jge
add
add
roll
aad
jp
pop
xchg
cmpb
jb
scas
nop
add
push
ds
dec
andl
pop
cmp
mov
adc
jl
aas
fs
call
and
sbb
mov
adc
jp
adc
ja
int3
inc
inc
add
add
mov
outsb
jle
jecxz
add
add
aas
aaa
sbbb
jo
inc
xlat
sub
push
or
mov
pop
push
mov
inc
add
add
add
jle
and
add
add
xor
loopne
loopne
in
clc
inc
mov
pop
pop
sbb
rcrl
stos
jg
cwtl
sbb
ret
loope
jmp
add
add
mov
jecxz
cmpsb
mov
aad
orl
or
push
bound
clc
movsl
popf
cmp
xchg
add
add
or
sub
sub
scas
popf
in
scas
sbb
in
out
mov
ds
mov
fcmovne
and
add
add
dec
add
add
std
inc
dec
mov
xor
dec
jbe
cmp
and
add
add
fisttpl
pop
pop
bound
add
add
dec
sarb
inc
pop
mov
inc
ljmp
in
pop
outsb
dec
mov
push
cmp
mov
add
add
mov
out
cmp
repnz
leave
cmp
mov
add
add
popa
cmp
push
movsl
push
mov
dec
push
leave
addb
iret
nop
xchg
and
cmp
pop
or
xchg
add
add
jle
lret
sbbl
fdiv
xor
mov
push
fxch
sbb
shrb
add
ret
ljmp
pushf
adc
and
add
add
sbbl
lea
push
sub
add
add
jp
ficoms
roll
fwait
cmpl
in
add
add
rcrl
outsl
pop
xchg
sbb
sbb
jmp
jbe
jbe
push
lods
jecxz
out
cld
xchg
lahf
and
outsb
mov
das
lea
mov
adc
mov
call
outsl
test
movsl
fwait
inc
daa
int
enter
pusha
mov
push
xor
lods
lret
aad
ret
and
int3
add
mov
add
add
add
dec
dec
inc
in
das
fmuls
add
sub
add
add
adc
sbb
ds
ljmp
mov
add
or
aad
pop
cltd
aad
xchg
stos
mov
jne
add
add
enter
add
lods
imul
pop
test
sbbb
pop
lret
lock
daa
out
jbe
cmpl
add
add
shl
out
iret
enter
or
push
push
inc
mov
adc
cmp
add
add
into
and
fucomp
push
dec
mov
call
or
add
add
dec
popa
jmp
cwtl
pusha
mov
sarb
inc
fwait
xchg
mov
cmp
add
in
push
out
inc
sub
push
repz
dec
lret
out
push
rolb
ja
repnz
push
popa
out
in
pop
aaa
add
jmp
mov
sbb
inc
add
add
scas
imul
mov
xchg
nop
pop
outsl
aas
insl
movsb
roll
outsb
xchg
aas
inc
add
add
movsl
adc
and
and
adc
mov
js
mov
addb
std
loope
jb
sbb
xchg
nopl
call
neg
stos
popl
cs
push
mov
and
dec
add
add
test
add
jecxz
out
mov
mov
pop
lahf
repz
ds
xchg
mov
push
movsb
push
dec
mov
sub
add
add
add
add
jmp
cltd
cmp
sarl
into
pop
neg
mov
adc
test
add
add
or
pop
sti
rorb
add
add
dec
std
insb
mov
dec
mov
sub
repnz
jbe
hlt
xchg
xor
mov
mov
pop
add
test
movsb
pushf
sub
add
add
addl
cmp
dec
loop
push
add
test
xchg
adc
mov
add
or
add
add
out
jnp
sbb
pushf
inc
pop
ds
sub
fs
test
dec
mov
inc
icebp
shrb
pop
movsb
fndisi(8087
sub
add
add
xor
fmull
xchg
adc
jbe
dec
daa
xlat
add
add
pop
test
add
push
std
xor
add
add
or
xchg
cwtl
mov
cmp
pop
sahf
imul
int
inc
les
sub
add
add
aad
pusha
mov
mov
gs
xchg
add
add
jno
ss
jg
cmc
ffree
or
pop
pusha
mov
test
cmpb
add
add
mov
add
add
mov
int
mov
xchg
push
inc
lret
lahf
insl
movl
cmc
dec
inc
add
add
pop
fisubl
add
add
lds
mov
int3
mov
jnp
sbb
clc
add
cmpsb
loop
cltd
mov
movsl
inc
add
add
and
test
dec
and
add
lods
sbb
push
jo
xchg
popa
add
add
add
movsl
les
cmp
xchg
movsb
fwait
sbb
dec
or
outsb
mov
call
add
add
add
jo
add
add
std
ds
jo
jmp
cmc
movsl
mov
aam
xor
adc
mov
ficompl
test
mov
push
sti
jp
cwtl
dec
sbb
test
mov
add
sbb
daa
in
pushf
jne
jae
stos
dec
roll
cld
addr16
inc
and
ss
mov
mov
jno
je
std
or
sti
in
out
popf
cli
add
add
add
inc
xchg
xlat
lods
int
pop
sub
pop
nop
jle
test
xor
dec
cwtl
dec
jecxz
xchg
aaa
xchg
cwtl
test
mov
mov
dec
ret
addr16
clc
addb
imul
pushf
mov
add
add
lods
adc
shll
sub
add
add
mov
add
lock
inc
gs
xchg
in
push
adc
pop
sti
bound
add
xchg
xchg
movsl
fcomps
add
xchg
movsb
xchg
nop
jne
pushf
mov
loop
mov
pusha
mov
jecxz
push
int
sahf
mov
iret
cmp
es
add
xchg
mov
stos
cmp
cmp
add
add
pop
fisubl
xor
xchg
pop
test
into
cmpsl
lea
add
mov
aad
pop
mov
inc
cmp
cltd
inc
mov
add
add
jecxz
mov
sbb
mov
fstl
and
add
add
cmp
shr
test
repnz
mov
sbb
fwait
scas
sbb
pop
inc
pop
outsl
jbe
out
out
loopne
data16
adc
cmp
xlat
xor
out
pop
jg
pop
sub
add
add
jno
mov
out
in
stos
leave
ljmp
mov
scas
jnp
xor
xor
out
xchg
into
out
outsb
int3
sbb
ss
inc
jecxz
or
inc
add
add
mov
cltd
fwait
dec
sbb
cmp
daa
xchg
push
out
insl
outsb
mov
sbb
addr16
xchg
xchg
push
inc
push
popf
repz
or
add
mov
lock
test
mov
shlb
jg
popa
leave
cmp
xchg
outsb
xchg
dec
push
popf
mov
inc
and
lret
mov
in
xor
and
add
add
rclb
add
add
sub
adc
in
scas
dec
push
xchg
bnd
adc
add
inc
mov
xchg
js
mov
cmp
pop
add
sbb
and
test
sub
mov
clc
loop
mov
dec
roll
push
push
aad
xchg
xchg
dec
inc
cmpl
jle
xor
lcall
sbb
add
push
adcb
das
inc
add
call
dec
add
add
sbb
xor
jl
push
dec
mov
push
ljmp
jmp
loope
test
cmp
xor
leave
lcall
add
add
xchg
outsb
les
lods
int3
sahf
fstl
xor
add
add
pushf
popf
cmc
movsb
fcoml
lret
clc
and
lcall
push
fidivl
jp
pop
jbe
rolb
add
add
jmp
mov
xor
mov
push
fcmovu
adc
lret
pop
add
add
add
sub
loopne
adc
mov
add
or
mov
mov
mov
add
add
or
fsub
push
int3
nop
dec
mov
mov
les
push
movsb
cmp
xchg
push
xchg
movsl
pusha
add
add
mov
and
push
jno
repz
add
add
loope
mov
mov
ss
test
dec
mov
adcl
jno
ja
push
ljmp
add
add
mov
mov
loope
out
mov
pop
rcrb
aad
mov
cmp
add
add
pop
lods
lea
jb
ret
gs
or
add
add
popa
inc
cmp
add
jg
add
add
or
add
add
push
sets
add
add
add
pop
mov
or
or
add
add
and
add
add
mov
add
sub
and
fcomi
nop
cltd
add
lea
mov
add
add
inc
sarl
add
add
add
ret
push
add
and
add
add
sbb
dec
cltd
inc
push
mov
ljmp
xor
filds
push
sbb
mov
mov
lmsw
add
test
pop
imulb
push
orb
sahf
push
fstl
shl
jecxz
sbb
mov
pop
mov
or
pop
repz
shlb
or
lahf
cmc
or
sub
xlat
push
out
leave
pop
cmp
add
dec
push
aad
repnz
sub
icebp
enter
push
cmp
add
lods
jmp
push
mov
jb
xchg
push
and
push
in
xor
add
add
push
mov
dec
add
add
sbb
test
int
push
bound
cmp
fldenv
fdivrl
inc
xchg
mov
mov
pop
cmp
add
sub
jge
je
add
add
add
into
pop
push
rcrb
push
movsb
adc
pop
inc
sahf
mov
enter
bts
push
repz
rorb
and
aad
sbb
jg
popf
fisubl
add
add
add
sbb
ret
cmpsb
jle
enter
add
jle
popf
adc
into
cli
lahf
xorb
sub
mov
lcall
xchg
push
int
add
add
add
xor
imul
movmskps
and
xchg
cs
loopne
or
mul
mov
ret
test
std
sub
lret
push
sub
add
xchg
push
rcrb
xchg
test
stc
sub
and
cmpsl
add
add
pop
subb
js
addl
add
jo
popa
stc
mov
jno
sbb
push
int3
ret
fdivp
dec
push
loop
int
imul
add
or
pop
push
xor
in
cmp
jae
stos
es
add
add
pop
add
adc
cmc
bswap
test
mov
mov
fmuls
popa
push
jp
xor
std
inc
and
nop
and
pop
mov
sbb
sub
xchg
pop
dec
and
add
add
fldcw
jnp
pop
rolb
ret
jo
pop
outsb
add
jne
cmpsb
mov
add
push
push
push
daa
in
mov
data16
sub
imul
dec
mov
inc
hlt
inc
mov
mov
cld
or
scas
pushf
mov
push
lock
add
add
dec
in
xchg
into
sbb
adcl
jg
test
add
add
add
fxch
sub
hlt
push
test
add
add
inc
cmp
inc
mov
pop
xor
arpl
cld
sbb
popa
repz
xor
push
adc
push
push
lods
add
add
add
mov
add
lcall
mov
add
xchg
jae
das
or
frstors
add
add
into
xor
sub
add
add
pop
into
mov
aam
adc
iretw
dec
add
add
add
sub
loopne
in
insl
xchg
mov
sti
xchg
mov
sub
mov
add
movsl
adc
push
js
arpl
jne
ljmp
push
mov
outsb
sub
mov
xchg
mov
lret
jne
lret
add
add
jle
jl
cld
and
inc
add
add
or
dec
repnz
fs
aaa
add
in
push
cmpsb
xchg
xchg
das
ljmp
push
sahf
outsl
syscall
or
add
add
xor
mov
mov
jmp
test
cmp
mov
lcall
cs
sbb
add
sti
ljmp
pop
adc
roll
jle
lods
pop
inc
imul
dec
ljmp
mov
add
add
stos
hlt
push
sbb
push
rclb
and
shl
out
bound
scas
xor
sbb
notb
add
stc
jmp
aaa
sub
lahf
adc
fildl
mov
push
pop
jnp
stc
mov
pslld
roll
out
xchg
cmp
add
rorl
js
mov
adc
adc
mov
in
insl
add
sub
jmp
add
shlb
aaa
add
lods
cmp
add
mov
imul
add
add
add
add
cwtl
stos
mov
outsl
mulb
or
add
mov
jae
iret
leave
mov
lock
aad
mov
frstor
add
add
cmp
cmpb
sbb
adc
dec
xchg
jno
lret
mov
add
cmp
or
adc
adc
insl
addr16
ret
or
add
add
movsl
pop
and
