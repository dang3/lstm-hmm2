pushf
fimull
add
imul
add
add
add
pop
xor
cld
jmp
jmp
add
or
clc
fwait
inc
pop
or
jne
int3
and
lods
pop
pop
loop
sbb
add
mov
in
add
fildl
ja
add
inc
cmp
imul
cwtl
adc
int3
loope,pn
in
jecxz
mov
pusha
add
sbb
aas
push
add
mov
data16
add
outsb
sar
dec
in
adc
inc
jmp
pop
push
aad
add
scas
inc
cmp
rolb
push
sub
cli
inc
add
add
push
add
mov
add
add
test
push
add
add
ret
and
mov
cmp
and
dec
jge
mov
jle
add
add
mov
insl
sbb
jb
ficompl
xchg
add
xchg
add
cmp
and
mov
jge
into
fadds
xchg
add
add
add
jbe
jb
mov
lret
inc
add
add
roll
or
loopne
xchg
add
add
add
add
les
cmp
add
or
add
add
pop
or
cs
mov
jl
xor
fildll
add
fnstenv
xchg
mov
pop
push
cli
sbb
into
rolb
pop
add
cmpsb
add
cmp
add
and
mov
mov
add
adc
mov
and
mov
jecxz
jg
inc
stos
mov
pop
mov
pop
pop
push
add
sti
cmc
mov
add
mov
add
add
add
add
add
fmul
mov
jmp
cmp
or
bound
mov
push
add
notl
in
movb
lcall
lods
cwtl
stos
xor
leave
stos
nop
add
add
add
bound
mov
add
xchg
inc
lret
rcrl
rolb
popf
out
sub
add
mov
rolb
add
mov
add
add
in
add
add
xor
sbb
dec
std
rolb
adc
lea
or
mov
pop
aaa
icebp
cmc
lret
ficomps
insb
fiaddl
add
add
jmp
add
sub
rol
sub
xchg
jl
ret
xor
mov
or
add
add
add
out
add
add
icebp
loope
mov
fwait
in
sbb
add
add
mov
xchg
movsb
add
add
ret
inc
add
add
adc
call
mov
fcomip
sbb
xlat
pop
xor
mov
add
mov
je
mov
or
sti
loop
rolb
add
push
add
insl
and
add
ja
or
add
add
loop
scas
xchg
lock
jno
mov
add
popf
pop
pop
cmpsb
add
jle
lea
add
jnp
add
add
xor
push
lahf
cmp
mov
dec
and
cmp
jl
add
loope
stc
movntps
test
pop
incb
mov
add
mov
dec
jmp
add
add
add
out
push
xor
add
add
add
dec
push
nop
add
mov
mov
mov
dec
push
add
push
pusha
add
mov
pusha
add
sbb
add
ret
sbb
ljmp
jle
rolb
add
ja
mov
cmc
dec
lcall
add
addr16
mov
lods
xchg
adc
mov
add
pop
push
xchg
add
repz
nop
add
lods
cmp
adc
daa
outsl
and
mov
in
push
lods
cmpsb
add
or
dec
out
or
mov
outsl
ljmp
mov
add
push
mov
mov
movsl
enter
insb
sub
sub
jo
add
imul
out
add
mov
mov
cld
cwtl
dec
cmpsl
push
add
mov
inc
add
mov
and
mov
out
mov
add
push
add
mov
add
out
cli
in
add
add
xor
xchg
add
and
push
add
testb
sub
add
mov
out
addb
jne
add
dec
mov
imul
aad
ret
add
std
dec
flds
mov
add
in
insl
lcall
int
repz
add
pop
cmp
xchg
add
or
bound
mov
add
into
jle
xchg
mov
fldcw
cmc
ljmp
aam
lcall
rolb
add
mov
lods
push
xchg
stos
xchg
jns
pop
in
stos
jp
pop
addb
add
sbb
loopne
or
mov
add
rolb
mov
dec
cmp
add
out
stos
jecxz
add
jns
sbb
in
mov
pop
addb
call
insl
ds
add
je
ret
cltd
cmc
aad
in
lea
push
add
mov
jb
sub
cwtl
adc
addb
loopne
push
in
jne
packssdw
aas
adc
push
lock
cmc
push
add
ja
add
mov
push
add
add
cmc
in
add
pop
mov
adc
add
je
jmp
add
and
ds
int
add
mov
inc
add
add
xlat
mov
xchg
add
add
push
add
pusha
add
add
add
popa
inc
add
test
mov
pop
in
mov
add
add
push
add
sbb
jge
add
ret
mov
stos
ficomps
ja
fildll
add
xor
test
add
pop
push
int3
jecxz
add
add
jo
lcall
cwtl
mov
insb
ret
es
add
jge
sub
add
pop
push
mov
add
add
add
add
or
fisubrs
mov
sbb
ret
add
fimuls
repnz
jg
add
add
add
je
push
add
dec
sti
je
pop
push
add
xchg
dec
aaa
aam
in
addb
movsb
add
adc
mov
push
mov
inc
shll
jo
push
pop
out
push
outsl
testb
cmp
add
test
xchg
ret
push
xor
jne
add
lea
push
add
rcll
mov
std
mov
in
das
loop
mov
out
dec
mov
testb
sub
sub
add
int3
sbbl
jns
add
add
mov
or
divl
rolb
add
jae
add
add
std
out
imul
bound
mov
add
mov
xchg
add
inc
bound
mov
mov
add
or
xchg
fwait
jl
lahf
push
fistps
and
out
dec
cli
out
add
xchg
add
mov
imul
repnz
add
xchg
add
enter
movsb
add
mov
add
add
add
mov
add
sbb
mov
push
mov
fnstcw
add
and
add
int3
pop
pop
imul
inc
add
ret
loop
mov
dec
cmp
scas
shl
dec
mov
add
dec
bound
mov
add
cmp
xchg
add
roll
outsb
cwtl
inc
pop
mov
add
addb
loop
test
aaa
jne
adc
xchg
sbb
es
rolb
jmp
sub
mov
jb
push
test
add
stc
sbb
fwait
dec
cmp
lock
xchg
add
push
add
sub
jmp
mov
scas
jnp
rcll
in
sub
stc
jle
add
mov
push
add
add
ret
loop
jg
add
mov
add
pop
add
js
add
cmpsb
add
lods
mov
popf
cmp
lea
add
mov
hlt
add
add
or
std
pop
pusha
add
add
psrad
pop
xchg
add
sahf
aas
mov
add
push
add
cmp
add
bound
mov
add
test
ret
sub
int
jnp
dec
lret
mov
xchg
add
mov
xchg
add
mov
fistl
add
adc
mull
rolb
imul
std
pop
insb
add
add
add
dec
lret
inc
add
or
aad
mov
add
das
ljmp
cmp
xchg
and
fsubl
xor
imul
add
jno
xchg
add
mov
loopne
test
jnp
add
add
push
cmpl
push
add
mov
sbb
and
sahf
dec
inc
data16
jnp
xchg
add
add
sub
cmp
int3
std
enter
prefetch
test
add
cmp
out
mov
aad
daa
lret
lods
mov
mov
lcall
and
orl
lret
dec
cs
add
add
add
adc
push
jg
popf
fdivr
push
add
mov
iret
iret
and
shrl
pop
mov
ljmp
out
scas
xchg
xchg
dec
sti
test
mov
add
imul
xchg
add
sti
movb
mov
add
add
add
mov
add
lds
add
jnp
insl
add
mov
mov
cltd
movb
sub
pop
pop
inc
add
pushf
aas
sahf
jnp
data16
inc
add
pushf
lock
shll
add
mov
pop
xchg
add
sub
push
add
ret
and
push
incb
mov
lds
add
sub
fdivl
add
mov
sbb
mov
pop
das
push
add
rolb
je
fildll
jp
add
mov
adc
xchg
add
xchg
movsb
add
ret
daa
dec
data16
add
dec
in
lcall
pop
outsl
jp
add
repnz
jbe
cld
fimuls
les
test
add
dec
inc
add
and
add
pop
add
add
testb
addr16
js
rolb
inc
add
xchg
add
add
mov
inc
add
add
add
ja
js
adc
sahf
pop
add
movsb
add
aam
test
add
push
jecxz
lea
bound
sti
cmp
xor
es
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
cmp
push
add
or
add
repnz
testb
gs
add
loope
je
inc
cli
aaa
nop
add
mov
in
jb
cltd
aad
adc
mov
imull
es
popa
inc
dec
lret
add
add
mov
and
mov
pop
mov
fistl
sbb
pushf
add
add
push
mov
pop
rolb
test
add
add
add
ret
inc
add
pop
or
jge
add
add
push
add
cld
pop
xor
push
push
inc
push
add
dec
xchg
add
mov
add
cwtl
cld
mov
loop,pn
push
add
mov
cmpsl
xor
out
roll
push
add
mov
rcrl
xchg
lds
add
notl
addr16
pop
daa
add
mov
add
movsb
add
inc
out
add
sub
arpl
rolb
insl
cmp
pop
icebp
push
add
mov
xchg
add
out
cltd
pusha
add
lock
add
movsl
jl
adc
add
loopne
push
dec
mov
xchg
add
mov
dec
mov
xchg
add
add
cli
adc
push
and
ret
add
add
add
inc
add
dec
mov
mov
add
add
add
and
ljmp
cmp
mov
lret
addb
repz
fnstenv
cwtl
or
mov
push
ret
outsb
je
sbbl
rolb
pop
in
jno
pop
add
rcll
lods
sahf
xchg
mov
add
add
and
icebp
add
sub
popf
pop
or
mov
mov
icebp
dec
sahf
xchg
jae
jne
add
in
pop
lahf
pop
test
test
xchg
add
js
mov
mov
out
sbb
lret
mov
mov
out
mov
cmp
cltd
cmc
mov
add
mov
out
inc
mov
iret
arpl
sti
mov
stos
fistps
fnsave
push
add
data16
adc
sub
add
add
sbb
add
add
inc
add
or
xchg
hlt
add
cmp
in
aam
jns
or
or
jle
add
in
sub
comiss
cmpsl
pusha
add
jge
outsb
insb
adc
negl
adc
repz
repnz
dec
xchg
add
add
add
inc
rolb
inc
pop
addb
cwtl
gs
out
mov
and
mov
je
lds
into
and
add
stc
inc
mov
loope
rcrl
add
push
mov
add
sub
addb
xlat
cli
adc
jb
sti
pop
xchg
add
or
add
add
pop
mov
inc
add
push
add
or
les
punpckldq
mov
sbbl
add
pop
xor
or
ret
ds
outsl
out
iret
mov
add
fwait
adc
pop
add
mov
pushf
iret
cmpsl
sub
ficomps
movsl
adc
out
fmull
add
mov
sub
shl
icebp
cmp
out
add
mov
add
add
mov
cmpsb
add
xchg
add
add
cmp
in
ffree
loop
scas
in
push
ds
add
loop
ret
or
push
insb
dec
sbb
add
ret
mov
add
add
jp
add
add
arpl
xlat
jo
mov
add
xor
sub
add
sbb
jecxz
lahf
je
mov
aas
das
cwtl
ds
subl
addb
and
cvtps2pi
mov
push
add
add
push
add
mov
test
add
xchg
add
in
adc
and
mov
add
pop
cmpsb
add
clc
xchg
stc
rcrl
dec
ja
mov
cmc
popf
popa
repz
es
out
cltd
nop
add
add
dec
and
aaa
jno
rolb
jmp
add
adc
inc
push
add
shrl
dec
jb
adc
sub
add
movsb
add
add
add
mov
in
ljmp
or
loopne
mov
add
stos
add
push
or
push
add
popf
and
mov
jge
xchg
stos
leave
add
sahf
cmpsb
add
mov
push
add
icebp
dec
adc
add
jo
push
jo
mov
shrl
fdiv
add
faddl
and
call
pop
or
scas
push
add
add
rolb
add
push
add
add
data16
xchg
sbb
test
pop
inc
and
add
repnz
add
ds
hlt
add
add
fcmovne
outsl
push
cmp
mov
add
xlat
pop
and
cmp
and
push
add
sbb
add
adc
imull
movb
popf
js
add
inc
add
cs
pop
out
pusha
add
add
add
inc
add
inc
pop
in
fmul
cmp
push
cmp
add
add
test
fidivrl
add
mov
push
add
cmc
add
jecxz
nop
add
add
loop
fadds
add
push
inc
add
dec
sbb
add
add
into
shll
testb
mov
add
mov
add
lahf
sub
sbb
into
movb
or
add
pop
xchg
add
add
sbb
add
push
shr
gs
add
sbb
add
add
bound
mov
lahf
jne
mov
pushf
cmp
add
in
inc
add
repz
mov
mov
in
jo
add
out
sbb
ds
add
xor
in
add
xchg
add
cmpsl
addb
add
clc
dec
pop
push
add
addb
add
out
fldenv
add
pop
int
test
aam
outsb
cmpsb
add
add
xchg
add
add
jle
add
ret
xchg
add
jo
mov
sbb
lret
movb
je
jbe
jae
dec
mov
jnp
or
mov
add
addb
add
add
add
inc
jns
lcall
repz
adc
andl
in
push
adc
sub
out
mov
pusha
add
das
inc
outsb
add
add
int
mov
pop
daa
repz
add
cli
sahf
xlat
mov
fwait
lahf
div
into
gs
imul
add
push
sarl
addr16
out
sti
add
jl
mov
lret
push
xchg
pop
dec
fwait
cltd
call
adc
mov
cmp
fwait
insb
gs
inc
jae
xor
loopne
push
add
int
add
or
sbb
out
cmp
ljmp
std
icebp
cltd
add
mov
jl
idiv
pop
mov
add
dec
in
mov
xchg
push
movsl
test
int
add
inc
add
arpl
aas
repnz
iret
daa
lea
sbb
add
adc
out
lods
cmp
add
add
mov
test
lods
into
sbb
add
add
jne
sub
jne
add
rolb
das
popa
jl
rolb
mov
sub
movsb
add
aad
loope
mov
movsb
add
or
mov
test
sahf
addl
les
xchg
add
imul
push
sub
outsb
rolb
dec
pop
nop
or
pop
sub
clc
rolb
and
dec
and
xchg
fcom
jnp
jecxz
push
pop
push
pusha
add
xor
pop
cwtl
sbb
aad
mul
add
add
jno,pn
add
scas
dec
adc
add
add
mov
add
pop
push
inc
sub
test
inc
and
add
pop
xor
cmp
xchg
pop
push
mov
add
add
sbb
add
addb
add
add
jo
sub
xchg
je,pn
dec
in
mov
les
xchg
add
test
pop
enter
jo
xor
mov
aaa
push
add
jb
in
into
xor
mov
mov
add
popa
shll
add
cld
movhps
mov
add
mov
pop
or
testl
push
in
lock
mov
add
push
add
pop
mov
mov
pop
out
gs
imul
mov
mov
and
mov
repz
and
mov
push
add
pop
fwait
mov
xchg
cmc
dec
hlt
add
std
dec
ss
add
add
add
fwait
addb
mov
pop
xchg
add
add
xchg
push
add
push
add
sub
add
clc
and
ret
add
mov
lea
les
xor
jge
adc
mov
lret
add
iret
add
pop
bound
mov
jns
xor
add
xorl
decb
add
add
add
add
dec
aad
add
push
mov
add
push
xor
mov
mov
scas
sbb
inc
cltd
test
cltd
mov
popa
cltd
test
inc
and
data16
add
jnp
imul
call
stc
add
insb
mov
cmpsl
les
inc
das
xor
fwait
jg
add
lock
inc
push
add
add
loopne
jb
aaa
popf
xor
mov
out
xor
or
add
in
pop
lock
adc
add
xchg
cli
sub
mov
cmp
testl
and
es
add
cmpsl
mov
mov
punpcklwd
xor
fcoml
add
rcrl
repz
mov
add
add
popf
jne
movb
adc
add
add
les
loopne
jl
jne
nop
add
in
add
add
add
addb
push
xchg
add
add
enter
iret
and
enter
jae
xchg
mov
add
push
xlat
inc
lcall
add
push
mov
mov
mov
out
sarl
outsb
lods
inc
nop
add
add
int3
test
mov
js
and
mov
enter
add
add
imul
add
add
add
add
add
add
inc
ret
repnz
add
insl
pop
add
mov
aam
pop
je
ja
and
mov
pop
test
cmp
dec
stc
xor
mov
add
push
mov
inc
adc
add
add
mov
push
add
mov
cs
adc
pop
xor
push
cmpl
xchg
mov
inc
in
ud2
dec
data16
sbb
adc
popf
mov
dec
adc
sub
iret
adc
xorl
addr16
add
add
add
lret
lcall
rolb
ret
jp
pop
in
jp
rolb
push
pusha
add
add
aas
lahf
xchg
leave
bound
mov
cmp
dec
cmp
and
add
imul
mov
xchg
or
jge,pn
testl
aad
pop
push
add
add
add
mov
shl
add
add
mov
dec
mov
sub
fidivl
scas
push
out
pushf
or
repz
pusha
add
add
inc
add
add
xor
adc
dec
jne
add
lock
test
aaa
js
cmp
jae
xchg
daa
popf
test
add
add
rolb
loopne
dec
and
mov
xlat
cmp
mov
cltd
or
add
sbb
fidivrl
add
pushf
or
int
sbb
pusha
add
js
inc
add
sub
ja
pop
arpl
rolb
mov
add
pop
pop
rolb
xchg
lods
and
adc
xor
push
add
sbb
jp
popf
iret
mov
dec
mov
inc
add
add
add
es
add
xchg
add
cmp
ja
inc
add
sahf
mov
js
cmove
js
add
fdivrl
loope
mov
ljmp
xlat
push
cld
ds
dec
jecxz
popf
cmp
jns
xor
add
mov
add
ja
icebp
notl
add
xchg
ljmp
pop
icebp
cwtl
mov
pop
ja
pop
xchg
gs
jo
fnstcw
nop
add
adc
add
and
mov
add
mov
add
sbb
push
add
and
add
filds
add
iret
addb
add
rolb
dec
insl
jp
push
pop
pushf
mov
add
mov
pusha
add
addb
or
insl
loopne
cmpsl
xchg
add
add
xor
add
lahf
lret
pop
mov
xor
fidivrl
add
dec
mov
add
addl
add
push
add
dec
daa
dec
lods
push
addb
mov
xor
in
loope
arpl
fs
add
sub
arpl
out
push
in
mov
lds
insl
cwtl
cmpsb
add
sbb
shrl
in
sbb
mov
ret
mov
aad
add
hlt
add
push
add
add
add
add
cmp
add
mov
add
mov
add
and
xchg
hlt
add
cmp
in
dec
lds
jo
cmp
add
add
test
xor
les
dec
push
js
add
push
fsts
add
mov
add
out
into
jmp
or
add
in
sbb
add
and
mov
mov
jo
pop
xchg
add
jge
add
xchg
adc
xchg
add
ret
jb
cmp
push
and
xor
cmp
out
or
rolb
xchg
push
add
test
push
add
mov
je
add
add
mov
add
leave
divl
sarl
and
add
rolb
add
fcomps
fimuls
push
add
dec
scas
mov
add
arpl
dec
and
mov
sahf
gs
add
jae
cld
and
xchg
sub
mov
cmpsb
add
jne
insl
ret
jno
add
mov
loope
incb
mov
js
int
add
xchg
loopne
adc
xchg
xor
and
inc
mov
add
add
dec
push
push
fnstsw
lret
add
out
int3
xorl
sub
add
add
xchg
gs
add
cltd
sbb
mov
mov
jp
test
ljmp
push
cmp
sbb
add
mov
inc
add
xor
add
xor
cmp
scas
cmp
pushf
test
and
xchg
add
pusha
add
fcoms
scas
mov
jno
fidivrs
pop
mov
loope
repz
outsb
out
pop
sub
add
mov
lea
les
mov
add
in
push
add
add
rolb
push
add
add
or
cmp
rolb
xchg
add
add
int
add
push
test
add
or
mov
cmp
shll
lahf
nop
add
jne
add
repnz
add
xchg
add
and
out
bound
mov
popf
mov
rolb
cmp
pop
call
mov
mov
push
add
data16
arpl
add
cmp
imul
in
bound
mov
xor
sbb
rolb
aam
pop
shl
mov
ret
adc
scas
push
jne
imul
addr16
mov
repz
aaa
mov
imul
cmp
and
mov
cld
js
add
sbb
lods
nop
add
add
mov
xlat
and
out
mov
xor
cwtl
enter
test
loopne
addr16
rolb
out
mov
hlt
add
popf
in
add
add
and
mov
jp
sub
mov
push
add
fwait
dec
rolb
xor
add
push
add
adc
cmpsb
add
js
lret
jne
jno
add
aad
mov
jae
add
ret
add
ficomps
fimuls
andl
add
add
repz
in
mov
add
add
call
add
and
mov
sub
add
mov
rcll
and
mov
mov
add
jg
add
nop
add
jl
xchg
add
push
add
add
sbb
xchg
inc
test
push
pop
and
mov
add
add
add
dec
call
cs
mov
add
add
mov
movl
arpl
add
clc
pop
roll
jg
add
add
add
sahf
add
add
in
je
jge
rol
jg
add
loopne
test
xchg
add
int
add
out
rolb
cwtl
iret
cld
push
mov
lds
add
inc
in
ret
add
scas
xor
lea
cs
add
add
aaa
adc
pop
addb
add
imul
add
aaa
and
out
movsb
add
add
pop
pop
fildl
fldt
xchg
jp
add
nop
add
repz
add
sarl
add
out
xchg
add
addr16
int
les
loop
inc
mov
push
je
mov
mov
dec
repz
add
out
insl
add
mov
jbe
test
sarl
lahf
cltd
std
outsl
xchg
jl
add
rolb
test
fisttpll
add
add
imul
mov
add
test
add
sarl
in
icebp
push
add
add
add
mov
add
lea
or
incl
add
jne
bound
mov
xor
mov
addl
mov
das
or
mov
add
add
xor
push
pop
or
add
xchg
lods
push
add
cltd
pusha
add
jb
sbbl
sub
stc
xchg
daa
xchg
mov
sbbl
mov
add
inc
add
add
add
into
sbb
add
iret
mov
or
rolb
push
add
push
add
add
mov
add
add
adc
aas
xchg
rolb
cltd
negl
cmc
lret
jecxz
pusha
add
jle
rol
add
push
out
dec
shrl
sub
jg
add
hlt
add
dec
pusha
add
loop
in
cmc
nop
add
xlat
fwait
mov
inc
sbb
adc
push
loop
xor
movb
add
add
inc
pop
outsl
pusha
add
add
repnz
inc
fldl
add
call
add
add
dec
repz
push
add
outsb
call
test
lcall
dec
insb
lock
ss
mov
or
add
dec
add
add
into
push
adc
addb
push
add
sbb
jle
cld
sahf
adc
push
xchg
sahf
xor
repz
and
mov
xor
xor
int
lahf
inc
pop
xchg
add
or
add
js
popf
shll
stos
mov
loopne
mov
sub
loope
bound
mov
add
adc
movsl
scas
mov
aam
pop
aaa
pop
or
add
les
add
push
cli
mov
sbb
adc
in
add
mov
add
scas
push
add
bound
mov
add
push
add
mov
rolb
or
and
mov
add
xchg
jne
stc
ja
and
mov
inc
mov
or
add
insl
addl
xchg
add
add
fimull
rcll
add
add
add
sub
xchg
sub
pop
aam
subl
clc
movb
movsb
add
cmovne
aad
add
negl
xchg
lret
mov
add
add
dec
jnp
dec
clc
testb
int3
test
add
test
add
add
jb
rolb
movsb
add
pop
das
mov
les
add
add
add
add
nop
add
sbb
dec
lods
mov
and
mov
aas
pop
cmp
add
hlt
add
mov
add
pop
lock
add
cmp
dec
dec
add
and
mov
mov
inc
add
out
insb
jno
add
repnz
hlt
add
add
xor
jmp
jno,pn
sbb
lret
adc
incl
add
add
jmp
mov
insl
rcrl
or
xchg
add
addr16
add
push
adc
mov
mov
pmaddwd
neg
jp
cmp
sbb
sub
add
sub
push
add
add
add
or
lock
out
xchg
mov
adc
mov
xchg
movsl
add
mov
enter
icebp
pop
jb
test
add
cmp
inc
add
jle
cmp
push
sub
fnstenv
push
or
adc
or
fwait
or
pop
mov
add
or
fildll
nop
add
add
xchg
mov
adc
sub
jae
add
mov
cwtl
pop
mov
jno
add
add
pop
fmuls
push
add
and
xchg
jb
int
fiaddl
sbb
add
in
jecxz
cwtl
add
add
add
test
add
popa
fwait
add
and
pushf
addb
add
cmc
jo
mov
cmp
scas
sbb
or
cltd
xor
mov
mov
not
add
stos
test
iret
push
mov
sub
test
dec
mov
mov
push
add
push
add
xorl
imul
jbe
jb
ret
push
mov
or
dec
push
rolb
mov
insb
test
cmp
add
add
mov
dec
sbb
jbe
mov
or
std
aad
xlat
daa
pop
sti
sbb
add
addb
ret
add
fwait
sub
add
add
lods
cli
adc
repnz
insl
push
pop
jecxz
xrstors
jmp
xor
push
cs
push
add
adc
mov
add
mov
add
jno
jns
add
push
add
add
inc
inc
inc
add
cmp
adc
add
or
mov
out
jbe
pop
jns
jmp
or
pop
lret
sub
shl
and
inc
out
mov
mov
pop
or
mov
add
pop
adc
dec
rolb
add
add
and
xchg
add
mov
add
xchg
jmp
shll
inc
add
test
push
rcrl
arpl
outsl
push
or
add
sbb
pop
sub
add
jo
push
add
push
add
adc
pop
cltd
mov
add
add
insb
mov
sub
add
lea
push
mov
loopne
cld
xlat
mov
add
add
add
enter
mov
sub
sbb
pop
cli
sub
icebp
jp
add
mov
call
or
jl
outsb
mov
movsl
xchg
add
add
imul
cmp
mov
jae
ljmp
add
add
xchg
lahf
out
mov
ficoml
xor
pushf
insl
mov
mov
mov
lds
add
aad
pop
inc
add
mov
jle
addb
mov
jecxz
arpl
scas
rolb
sub
xlat
sbb
cmpsb
add
lret
dec
sbb
pop
jne
xchg
jl
mov
insl
aad
push
add
cmp
inc
add
add
xchg
add
add
adc
shrl
mov
cli
and
inc
add
add
mov
pop
dec
inc
ja
add
ret
out
cmp
in
loope
in
mov
xchg
lcall
aam
lea
rcll
fwait
xchg
jno
add
out
xor
push
add
add
add
mov
add
mov
imul
in
xchg
add
shll
inc
push
add
xor
ds
cwtl
daa
je
int
pop
pop
in
jl
add
mov
mov
fcompl
mov
adc
inc
add
add
dec
sub
das
jno
bound
mov
jle
jecxz
add
push
fsts
add
aaa
das
pop
pop
arpl
pop
mov
call
pop
dec
js
bound
mov
add
xchg
rolb
push
fldt
add
data16
popl
add
pop
cmpsb
add
aad
in
sbb
test
inc
pop
insl
repnz
xchg
xor
inc
fsubp
add
ficoms
add
and
mov
stos
push
test
jg
add
repnz
add
add
add
repnz
fadds
fwait
enter
rolb
in
int3
or
sub
and
in
outsb
or
aad
add
add
cmpsl
imul
add
inc
add
push
add
aas
xchg
add
mov
mov
add
pop
adc
pushf
xchg
add
pop
dec
push
add
add
fisttpll
pop
mov
xor
jmp
add
addb
les
leave
mov
rorl
addb
add
add
xchg
add
das
xor
pop
popf
roll
mov
add
lods
addb
aas
nop
add
add
add
insl
mov
stos
xor
shll
mov
outsb
jns
add
imul
mov
add
add
fidivs
loope
rorl
add
testl
add
lods
jg
fcoml
mov
jo
xchg
mov
mov
sub
sub
fbstp
ljmp
sub
mov
xchg
add
arpl
cmp
fcmovu
push
rolb
pop
add
mov
add
add
sub
jae
and
jmp
push
jecxz
pop
movl
add
mov
add
ret
lahf
dec
xchg
mov
test
test
pop
lahf
addb
push
outsl
fwait
inc
add
data16
add
and
sbb
add
push
add
cmc
mov
add
or
add
add
adc
xor
xchg
add
add
mov
testb
add
xor
imul
mov
movl
daa
add
test
lcall
add
mov
mov
add
cmp
push
add
jnp
add
pop
and
bound
mov
push
add
inc
test
outsb
fidivrs
add
shr
rolb
into
enter
add
mov
adc
popa
dec
sbb
fcom
js
mov
movsb
add
or
bound
mov
add
inc
xor
xchg
loope
add
add
add
add
add
ret
fisubrs
add
mov
add
add
xchg
add
pop
mov
add
push
sub
mov
cmp
jl
add
add
out
add
sub
aas
rolb
into
daa
cwtl
mov
push
mov
mov
jo
outsb
xchg
cmp
xchg
mov
imul
or
pop
dec
mov
add
in
dec
xor
rolb
rolb
jmp
jl
mov
and
mov
ret
pop
les
pop
jge
roll
lahf
xchg
add
add
sbb
or
mov
mov
out
push
out
lss
rol
mov
frstor
add
imul
daa
movb
add
adc
lret
int
jg
loopne
loop
cs
mov
aas
cmp
ret
cmp
rcll
sub
add
push
add
add
mov
add
add
dec
cmpsb
add
add
pop
cmp
mov
test
sbb
pop
mov
repnz
add
push
add
add
icebp
lods
fdivl
scas
inc
fcoms
pop
jl
out
jg
add
sub
cmp
add
pop
mov
cmp
leave
dec
xchg
add
add
in
add
mov
stos
mov
pop
addb
xor
bound
mov
cs
pop
mov
jl
add
add
sahf
cltd
mov
addb
pop
imul
ljmp
in
aad
arpl
stos
jno
loope
inc
ja
mov
dec
sub
jl
xor
mov
pop
cs
addb
add
xchg
iret
xchg
sub
enter
adc
in
mov
sub
cld
adc
ds
sahf
xor
add
outsb
xor
jno
loopne
mov
es
add
sbb
add
mov
js
add
inc
rorl
mov
nop
add
hlt
add
out
test
adc
add
xchg
add
aad
pop
sbb
add
movsb
add
add
add
inc
dec
xchg
add
dec
sti
push
add
fimuls
add
test
add
testb
cmp
gs
mov
cmp
int
jne
add
add
mov
das
push
add
lods
sahf
outsl
and
add
add
fiaddl
add
cwtl
ljmp
xchg
imul
sub
or
add
mov
xchg
fildl
outsl
ja
cmpsl
push
add
sti
mov
xor
fcoms
lds
jge
mov
into
jge
insl
in
les
mov
test
or
add
sti
fistpl
test
mov
int
xchg
add
add
ficoml
add
in
mov
fildl
insl
sbb
dec
out
mov
add
pop
xor
add
add
mov
sbb
lods
or
mov
test
add
xchg
vpunpckhqdq
movsl
xor
mov
dec
cmpsl
pushf
mov
xor
add
add
add
mov
aad
rcrl
push
add
jle
loopne
adc
enter
and
ret
call
jo
call
jl
gs
add
xor
pop
xlat
and
mov
add
shrl
popf
les
les
add
mov
aad
xor
cmp
add
push
add
lods
mov
xchg
sti
jbe
xchg
mov
cmp
cmc
push
add
mov
je
cmpsl
mov
add
adc
mov
and
mov
pop
popa
cmc
cmc
inc
sbb
inc
add
push
jbe
jle
add
sub
add
cld
stos
inc
and
mov
add
dec
scas
lds
dec
pop
repnz
adc
ret
mov
loopne
or
out
leave
sti
roll
mov
pop
repz
aam
aas
mov
cmp
jp
add
add
add
add
add
lcall
std
and
test
shr
cwtl
jae
add
xlat
rcr
stos
or
dec
scas
setae
fsubl
imul
aaa
push
pusha
add
push
add
mov
add
add
sbb
and
and
add
push
addb
mov
aas
cmc
mov
in
cli
fidivl
add
xchg
dec
into
lds
js
pop
mov
adc
add
aaa
adc
add
and
mov
add
push
add
add
movb
clc
mov
mov
loope
inc
add
inc
push
mov
add
nop
add
lods
inc
add
xchg
add
add
add
pop
push
add
arpl
add
add
out
add
movl
arpl
fisubl
add
add
addl
jmp
movsb
add
sbb
add
inc
add
mov
mov
cmp
add
add
sub
lock
xchg
inc
incb
add
lret
gs
mov
jnp
inc
add
sbb
add
pop
addb
xlat
in
hlt
add
jg
loopne
mov
xor
mov
xchg
add
xchg
add
mov
add
aaa
stos
idivl
scas
imul
xchg
and
pusha
add
incb
push
loopne
dec
sti
mov
loop
loop
add
jae
lahf
cmp
fwait
jno
data16
add
fwait
test
mov
pop
sub
or
or
loopne
data16
scas
mov
adc
fmuls
and
mov
pop
or
xor
inc
add
add
add
add
adc
movsl
push
add
or
movsb
add
add
mov
call
push
mov
add
cli
add
add
adc
jmp
repz
lods
cld
clc
fcmovnbe
or
ss
add
dec
cmp
and
add
and
and
int3
movb
add
push
push
add
mov
pop
dec
mov
dec
mov
jnp
fsubrs
scas
loopne
or
call
push
add
add
add
pop
jg
sbb
mov
imul
cmp
inc
add
cmp
add
add
lds
add
add
mov
fdivs
pcmpeqd
out
add
mov
add
imul
aad
add
jne
bound
mov
addr16
pop
jno
add
jnp
inc
xchg
add
mov
add
pop
xor
icebp
adc
cmp
push
add
mov
imul
imul
add
cmp
pop
and
mov
repnz
xor
push
and
xchg
into
xlat
pushf
fwait
and
add
mov
dec
sub
icebp
data16
add
add
or
add
pusha
add
mov
xor
dec
movb
add
nop
add
dec
rolb
rolb
cmpl
cmpsb
add
mov
push
push
add
ret
imul
inc
add
popa
clc
pop
lahf
out
or
mov
inc
jle
add
iret
mov
mov
fsubrs
adc
mov
pop
iret
mov
add
add
add
stos
shrl
fsts
stos
or
cmp
in
inc
push
add
xchg
xchg
xor
test
jnp
sub
into
pop
pop
cmpsl
jns
lods
dec
xchg
add
sub
pop
add
lods
add
lds
fptan
add
pop
mov
ljmp
jo
std
hlt
add
add
jp
or
insb
jbe
popf
lret
adc
push
xor
jmp
add
idivl
aam
and
xor
jl
iret
fistpll
mov
add
add
mov
add
inc
add
insb
jno
sbb
add
xchg
add
xchg
add
fidivrs
iret
xor
aad
add
add
jae
mov
xor
je
loopne
mov
cmp
sbb
pop
or
sahf
mov
add
add
add
fisubrs
dec
mov
cmc
mov
add
fnstenv
icebp
test
inc
or
add
add
aaa
jae
and
je
push
lcall
add
mov
add
je
testl
cli
aaa
sub
das
std
lods
pop
inc
add
sarl
add
mov
xchg
add
add
adc
mov
mov
iret
loopne
jl
icebp
ret
adc
mov
xor
and
mov
add
add
add
popa
or
pushf
mov
add
dec
or
addb
pop
add
add
cmp
add
test
cmpsl
out
add
fdivrp
lods
mov
xchg
or
add
jge
add
add
repz
xor
rolb
outsl
lret
out
repz
mov
push
lock
add
add
mov
add
add
sub
pop
inc
cld
push
xlat
mov
or
cld
mov
sahf
aad
sbb
mov
jne
push
aam
adc
dec
sbb
jecxz
and
mov
jle
fldenv
fcomip
add
add
icebp
clc
push
inc
add
enter
xchg
outsl
push
add
cmp
add
cltd
les
int
add
addb
cld
adc
inc
add
pop
jg
add
mov
xchg
and
addb
mov
or
jae
icebp
popa
and
add
cmp
sub
fnstcw
add
aas
test
add
test
fs
mov
sub
ret
mov
add
adc
flds
jbe
rolb
xor
jnp
lds
int
add
inc
add
jge
pop
sub
fidivl
mov
dec
add
jge
arpl
lcall
cli
adc
mov
add
add
les
lcall
shll
or
in
test
adc
imul
popf
clc
dec
inc
mov
inc
add
fimull
xor
and
mov
add
jo
xchg
sub
sahf
mov
popf
stc
popa
js
and
iret
mov
jp
add
mov
add
mov
arpl
enter
add
mov
add
mov
add
mov
out
inc
add
add
imul
js
add
add
inc
add
add
data16
add
in
dec
test
jb
out
add
mov
add
mov
add
add
add
jle
outsl
sub
pop
icebp
daa
repnz
xchg
mov
jmp
testl
lea
popa
test
mov
mov
leave
ds
inc
add
clc
mov
add
sbb
add
lods
and
mov
cld
popf
data16
fisubl
sub
lret
lods
iret
addb
call
add
bound
mov
jo
xchg
add
add
lock
xchg
xchg
mov
out
ret
push
mov
and
mov
lods
scas
rolb
sub
sub
aad
jecxz
dec
push
push
je
inc
into
int
jno
add
stc
dec
and
mov
or
icebp
lcall
out
lock
add
addr16
lret
das
push
les
sbbl
clc
icebp
mov
jle
fnstcw
add
mov
daa
mov
add
pop
in
add
push
imul
add
xor
mov
add
sbb
cld
aam
and
mov
add
mov
add
jno
aad
sbb
pop
fistpll
ret
or
jbe
pusha
add
and
add
adc
add
push
add
add
add
mov
mov
dec
out
pop
add
icebp
fwait
negl
mov
xchg
add
je
add
aam
mov
and
js
add
add
and
nop
add
fsub
adc
cmp
add
xchg
add
xor
dec
mov
mov
xlat
mov
cld
add
jne
add
sti
popf
jae
rolb
dec
fmull
adc
and
mov
cmpsl
push
rolb
cmpsb
add
test
and
movsl
add
inc
add
sti
aad
add
add
mov
add
add
add
fisttpl
add
add
fmull
jl
add
add
popf
insb
sbb
fmull
and
mov
push
fldt
dec
add
mov
sub
mov
in
push
add
jnp
pushf
cmpsb
add
xchg
add
add
adc
lds
add
mov
add
add
dec
loope
test
and
loope
mov
add
push
mov
add
add
push
add
cltd
cld
mov
add
mov
add
add
mov
add
addr16
sarl
mov
mov
jno
lea
add
or
in
add
mov
jecxz
inc
add
sub
pop
cld
push
fsubrp
loope
rol
add
add
loopne
sti
ja
fldcw
xor
scas
jg
add
cmpsl
es
pushf
stos
hlt
add
sub
jecxz
add
add
frndint
inc
cmp
les
jp
out
pusha
add
shrl
push
and
scas
mov
leave
cmp
dec
in
mov
add
fistps
mov
sub
push
jecxz,pn
jmp
hlt
add
add
or
add
mov
mov
aaa
adc
push
add
add
dec
dec
bound
mov
sbb
push
add
mov
add
addb
cld
mov
xchg
mov
movsb
add
mov
add
inc
sub
das
and
mov
mov
sub
add
inc
add
stc
enter
pop
jmp
bound
mov
add
imul
push
xor
pop
xor
jmp
pop
sbb
cmp
cmc
push
repnz
mov
lea
mov
add
mov
add
std
aad
xchg
aam
daa
sbb
jo
test
cmp
test
add
cmp
mov
mov
mov
xchg
addl
add
xchg
add
jns
movb
add
mov
jo
push
sbb
pop
mov
mov
adc
pop
xor
pusha
add
jecxz
adc
add
mov
rcrl
cmp
add
add
add
add
mov
cmp
add
add
jmp
sbb
and
xchg
roll
add
fists
scas
xor
daa
sarl
add
cmpsb
add
add
add
lods
js
js
add
fcomi
pop
out
repnz
cmp
add
add
mov
movb
mov
cwtl
rcll
xlat
push
add
flds
jb
addb
add
pusha
add
in
sbb
daa
dec
pop
movb
data16
xchg
in
mov
add
lea
add
xor
cmpsl
xchg
in
pop
ds
sbb
addb
jbe
sbb
test
jnp
fninit
call
fildll
push
push
add
xchg
ret
data16
mov
out
add
fstl
or
fwait
int3
mov
in
mov
mov
add
lods
sub
adcl
pop
pop
nop
add
stos
cmp
iret
mov
add
sub
in
jno
xchg
cmp
add
lret
mov
xor
fcmovnbe
add
std
add
and
mov
add
xor
aas
notl
lods
dec
scas
pop
and
mov
cmp
mov
add
dec
cmp
add
cmp
add
add
out
add
hlt
add
fnstenv
adc
lret
ja
js
inc
jnp
pop
xchg
add
data16
lahf
lds
loopne
std
rolb
movsl
out
sub
scas
andl
add
testb
dec
and
mov
add
out
add
loop
adc
pop
daa
mov
push
add
cli
dec
cwtl
cld
fildl
repnz
inc
push
add
jge
add
add
ja
jb
push
xchg
add
and
out
or
test
mov
and
mov
inc
lret
int3
cmc
dec
cmp
push
add
sub
cwtl
leave
pushl
pusha
add
xchg
jns
rorl
int3
clc
out
sbb
std
add
sbb
mov
das
sub
pop
testb
out
inc
cmc
lret
jge
sub
addl
fimuls
aam
add
mov
inc
add
test
inc
add
daa
aad
pop
jl
mov
dec
mov
push
add
dec
xor
movsb
add
add
and
cmpsl
hlt
add
or
sub
add
add
jmp
add
add
imul
fsubs
mov
cmp
jbe
lock
pop
cli
cltd
push
add
push
add
stos
dec
loop
lock
push
xchg
mov
hlt
add
add
fdivrs
mov
jno
lfs
and
add
stc
mov
pushf
add
cwtl
sbb
insl
adc
insl
mov
mov
mov
pusha
add
push
add
mov
mov
ret
push
call
jbe
xchg
pop
outsl
mov
ja
jle
jno
out
add
jle
pop
and
and
jmp
xor
mov
mov
lret
jmp
add
stos
adc
mov
add
cmpsb
add
les
and
mov
add
add
mov
mov
clc
sahf
lock
push
add
add
add
jge
xor
mov
jl
test
add
out
lods
xchg
cs
pop
sub
mov
xor
add
pushf
call
or
cmp
add
add
ds
stc
clc
or
add
add
mov
add
sahf
pushf
insl
pushf
addb
sbb
adc
testb
jge
add
add
loop
dec
mov
adc
cmpsb
add
gs
inc
add
sahf
sub
std
push
mov
push
add
add
mov
mov
aam
cmpsb
add
mov
pop
xchg
and
xchg
add
jle
das
nop
add
into
cmp
outsb
jmp
push
push
add
inc
add
add
lds
lcall
aas
andl
add
mov
add
inc
add
xchg
rolb
imul
add
mov
add
stos
mov
les
cltd
lods
cs
add
mov
pop
nop
add
add
add
cmpl
mov
lret
adc
xor
add
jl
das
adc
rcrl
ret
insl
cmp
testb
add
mov
add
and
add
test
xor
add
inc
and
add
add
mov
aad
add
add
mov
rolb
rolb
and
mov
xchg
cld
mov
sbb
add
mov
cmp
mov
jmp
jns
add
add
xchg
je
sub
push
add
xchg
or
dec
pushf
test
adc
insb
lods
test
in
ja
jae
or
lret
dec
push
add
add
lea
add
hlt
add
add
push
add
xchg
xchg
cld
js
mov
inc
add
sti
cmp
adc
icebp
sbb
cmp
add
loope
loop
bound
mov
add
dec
mov
add
add
jle
push
dec
std
jl
sub
and
or
push
add
add
add
sti
addl
mov
or
testb
add
ss
outsb
les
mov
mov
addb
pop
add
push
add
add
xchg
mov
add
loopne
sbb
mov
sbb
pushf
jg
jnp
testl
add
add
add
cmp
jl
cmpl
add
je
sbb
push
add
push
mov
out
test
push
out
mov
inc
add
jmp
add
jns
pop
mov
mov
xchg
or
inc
add
addb
std
and
mov
inc
add
add
aad
xchg
sub
repz
mov
add
stc
mov
scas
push
add
addr16
cmp
pop
pop
mov
add
das
add
jl
add
inc
movb
xor
cmp
push
add
add
xchg
gs
inc
add
cmp
add
aad
and
add
fadd
enter
add
xchg
adc
ficompl
inc
add
ds
mov
pop
xchg
add
xor
mov
pop
loop
jge
push
add
add
adc
movsb
add
jae
sti
in
outsl
loopw
dec
dec
adc
mov
add
inc
add
add
and
inc
add
stc
push
add
xchg
adc
repnz
lods
pop
sarl
test
lret
mov
into
pop
push
add
or
scas
insb
jmp
cli
inc
mov
mov
sbbl
add
add
add
aam
stos
iret
lret
mov
pop
adc
or
int
xchg
jg
das
test
mov
or
mov
cli
sti
test
sbb
xor
sbb
rcrl
rolb
fwait
movsb
add
fucomip
scas
sbb
sub
add
add
cmpsl
enter
cmp
test
iret
fucompp
jo
xor
sub
in
jl
xchg
insl
jg
stos
stc
push
add
or
inc
addb
or
adc
mov
fwait
xor
mov
add
mov
add
mov
mov
stc
xchg
adc
icebp
pop
xchg
mov
mov
mov
sahf
fsubrs
xchg
insl
cld
xlat
dec
int3
in
or
mov
adc
imul
cltd
or
rorl
xor
data16
add
cmp
pop
sti
lds
jg
dec
adc
add
ficoms
sbb
dec
adc
xchg
sti
movb
in
inc
daa
sbb
add
ficomps
or
add
rolb
iret
test
jge
add
add
xchg
jbe
jecxz
fwait
inc
add
imul
cwtl
pop
popf
shll
leave
dec
mov
sbb
mov
or
push
add
mov
out
mov
mov
adc
sahf
dec
enter
rolb
mov
xchg
add
and
lods
push
dec
dec
pop
sub
add
data16
jno
jb
push
insl
ds
testl
add
add
add
add
iret
add
add
cmp
fld1
pusha
add
add
pop
mov
mov
add
mov
add
aas
test
add
xchg
fcomp
insl
addb
out
and
sub
jae
enter
xor
inc
add
cmp
testb
inc
add
and
mov
add
aas
sti
push
je
nop
add
add
add
js
add
add
push
add
fwait
xchg
out
aas
mov
jae
lahf
cltd
xchg
add
mov
mov
mov
addb
andl
testl
add
and
or
xor
cmp
xchg
mull
dec
addb
pop
je
fwait
adc
nop
add
sbb
jecxz
xchg
add
add
add
mov
xchg
test
or
int
and
mov
cld
fdivr
shll
add
mov
add
mov
add
add
or
xchg
jne
add
sbbl
xchg
sbb
add
mov
cmpsl
pop
je
cmpsb
add
rolb
mov
add
test
inc
icebp
xchg
add
pop
aam
and
mov
add
scas
cld
xchg
add
sbb
sbb
xor
add
xor
add
bound
mov
cmp
add
les
fsubr
adc
in
adc
pop
dec
jl
add
loop
add
push
js
mov
mov
aaa
out
jmp
add
jp
add
inc
add
and
cmp
dec
cmp
fidivrl
inc
add
add
mov
sub
js
in
decl
add
add
mov
fcmove
and
dec
pop
lods
ficomps
movsb
add
and
push
mov
stos
or
pop
aam
mov
call
pop
sti
in
loop
ljmp
add
add
enter
sub
or
cmpsb
add
adc
mov
mov
add
jl
pusha
add
add
jecxz
out
bsf
sahf
pop
jl
add
mov
sub
lret
add
mov
mov
insb
mov
sbb
pop
aas
adc
jge
add
in
addb
pop
jb
rcr
sub
ficompl
in
aaa
popf
mov
add
sub
xlat
jb
add
inc
add
add
add
pop
inc
xchg
lods
mov
push
add
add
add
add
adc
pop
jno
mov
add
mov
add
cli
out
cltd
sub
xchg
cmp
imul
adc
add
in
cmp
rolb
add
add
mov
sbb
add
add
mov
shll
sbb
push
mov
cmp
aam
xor
mov
push
add
add
icebp
pusha
add
add
add
add
adc
xchg
std
cmp
inc
add
mov
bound
mov
cmp
loope
mov
pop
jge
rolb
or
dec
dec
xor
or
add
add
mov
add
add
mov
cmp
xchg
add
lods
lcall
add
jle
xor
inc
add
cmova
cwtl
mov
stc
xchg
addb
dec
in
push
sahf
xchg
rolb
push
add
cmpl
mov
inc
add
add
jo
xor
je
xchg
insb
mov
add
cli
mov
adc
jae
jl
dec
inc
add
push
add
add
int
fwait
into
sahf
jge
add
jb
fwait
xor
push
aaa
outsl
sub
add
dec
jmp
mov
add
cmp
repz
push
add
adc
fxtract
add
sbb
ret
imul
fdiv
add
enter
ljmp
inc
push
jns
add
iret
test
jo
jmp
mov
sbb
outsl
mov
lock
divl
rolb
push
add
jne
nop
add
pop
loop
cli
dec
cmp
jg
inc
ljmp
add
add
add
sahf
xor
add
jbe
adc
add
mov
add
hlt
add
pop
pushf
or
add
add
mov
and
mov
inc
add
fwait
and
das
jmp
mov
mov
ret
aad
push
addr16
xchg
mov
mov
sbb
addb
mov
add
imul
dec
daa
cmc
fcomps
sub
add
add
pop
mov
sbb
add
mov
adc
dec
xlat
add
scas
into
leave
mov
cmc
and
mov
cmp
mov
pop
add
mov
hlt
add
addr16
jns
add
enter
add
ds
mov
xor
sahf
enter
pop
mov
dec
or
add
and
ds
cld
sbb
add
add
cmp
add
push
lock
inc
add
loopne
jae
repnz
fdiv
mov
mov
outsb
negl
call
add
pop
icebp
push
or
dec
mov
or
test
xlat
cmp
add
push
sub
xchg
add
pop
jne
add
inc
add
add
mov
add
cld
sub
enter
loopne
adc
outsb
rolb
mov
add
es
icebp
jge
addb
add
jle
mov
mov
outsl
stos
lret
icebp
and
addb
jae
add
cmp
ret
mov
shl
add
add
lcall
jecxz
addb
aas
adc
imul
imul
add
inc
add
and
popf
inc
movsb
add
cmp
mov
iret
mov
aad
xor
mov
arpl
insl
dec
jge
stos
sti
or
mov
xor
clc
aad
imull
xchg
mov
jo
cli
loope
nop
add
and
std
ljmp
mov
add
add
xchg
lods
rorl
enter
add
std
cmpl
repnz
pop
mov
dec
jnp
test
xchg
add
mov
adc
push
xor
sub
add
mov
jne
add
mov
addb
pop
jne
mov
jmp
mov
stos
push
cmp
in
les
aaa
je
out
dec
js
jge
pop
gs
add
add
pop
mov
add
add
mov
add
push
pop
push
cltd
negl
adc
adc
inc
push
outsl
xor
sub
mov
add
inc
add
das
testb
and
mov
add
cs
mov
mov
dec
mov
scas
js
inc
popf
xchg
add
add
add
jnp
lcall
add
or
ret
das
jle
add
pop
les
or
add
jp
adc
or
out
pop
out
add
mov
into
ss
out
fsubr
push
add
aad
inc
jge
mov
test
add
cs
add
test
adc
fisttps
add
jns
xor
mov
mov
pop
outsb
stc
loopne
icebp
inc
mov
outsb
pop
sub
add
push
or
pop
fmull
add
sti
test
add
andl
test
popf
pop
cmc
jb
loope
xor
jb
lea
cwtl
addb
fisubs
testb
lods
lods
repnz
inc
ljmp
mov
and
add
add
jns
test
int
add
add
add
or
aam
mov
xchg
jne
dec
loopne
jle
sbb
aam
adc
mov
xchg
in
adc
lea
jmp
xor
movsl
pop
and
mov
xchg
inc
cmp
sbb
gs
adc
jle
sub
addb
cltd
sbb
xor
and
add
add
add
movsl
icebp
pusha
add
add
in
sbb
pop
pop
xchg
jb
arpl
add
add
add
add
add
jecxz
add
repnz
xor
mov
testb
popl
add
and
mov
inc
push
jmp
xchg
sbb
xchg
pop
inc
add
jbe
test
add
aad
sbb
stos
sbb
test
loope
add
push
add
add
add
xchg
add
add
adc
pop
scas
pushf
pop
jg
call
push
add
les
and
mov
sbb
cmpsl
test
cmpsb
add
testl
icebp
cmp
lcall
add
mov
or
lods
fiadds
insl
in
add
and
repz
cli
hlt
add
sbb
add
add
add
les
mov
xchg
fmull
add
fisttpll
gs
mov
mov
movb
mov
cvtps2pi
xor
add
xor
sub
fmull
push
adc
pop
imul
loopne
mov
add
mov
add
add
add
pop
cmp
cmp
int
out
and
mov
jle
adc
in
mov
mov
dec
cmpsl
mov
ficompl
nop
add
add
in
jmp
mov
ret
pop
ret
xchg
mov
imul
test
into
mov
add
loop
and
push
jno
jne
xchg
add
xlat
sub
xor
jl
aaa
cmp
sti
stos
loop
pop
cmp
enter
and
mov
mov
cli
add
ljmp
add
and
push
subl
add
mov
repnz
out
rolb
in
lea
movsb
add
add
repz
add
imul
add
add
mov
pop
mov
sbb
inc
add
push
add
push
dec
or
outsl
push
add
and
xor
lret
sub
and
inc
add
mov
add
xchg
jp
jmp
fsubl
out
pushf
out
sbb
ja
sbb
add
fdivrs
addb
sub
pop
mov
fsubrs
data16
aam
je
int
in
xchg
sahf
sbb
mov
pop
sub
inc
push
add
jb
in
bound
mov
push
inc
add
shll
add
sbb
cmc
lea
insl
fiaddl
add
lods
or
add
jne
loopne
add
jg
xor
add
xor
add
negl
sbb
jle
sti
xorl
add
sub
and
push
add
bound
mov
je
fs
add
xor
add
xor
add
add
pop
adc
movb
add
add
mov
add
mov
fisubs
push
add
lahf
pop
cmc
lcall
jp
rcll
jge
jg
mov
add
inc
fwait
mov
cmpsl
xchg
push
add
add
rolb
mov
shll
adcl
cmp
lahf
inc
mov
add
mov
addb
testb
sbb
rolb
mov
mov
stos
arpl
add
add
add
in
je
out
mov
push
les
pop
popa
sub
into
dec
das
mov
cwtl
add
jle
in
inc
add
and
mov
mov
leave
jbe
push
add
int3
xor
push
js
cld
xchg
add
pop
mov
jo
test
xlat
pop
rolb
and
in
sub
cmp
xchg
addr16
pop
adc
lea
mov
add
fwait
lods
and
add
out
mov
lock
xor
add
push
jge
fwait
mov
lock
cmp
jno
add
ret
mov
and
mov
sbb
add
jge
mov
repnz
add
push
add
add
dec
jmp
stos
pushl
add
aas
xstore-rng
cmpsl
add
xor
add
add
dec
ret
mov
push
add
push
add
add
and
mov
add
or
jns
movsb
add
incb
js
push
loopne
cwtl
int3
mov
add
jnp
scas
mov
push
rolb
inc
add
pop
mov
xchg
mov
add
js
jbe
cmp
add
add
cmp
leave
outsb
adc
or
push
add
add
mov
test
mov
adc
pop
lea
add
stc
mov
cmp
add
pop
cwtl
sbb
add
lret
sub
adc
or
add
mov
jl
sub
add
add
add
mov
add
add
ret
arpl
jne
add
test
mov
mov
add
out
fisubs
pusha
add
in
push
xchg
aad
add
inc
sub
shrl
cltd
xchg
cs
bound
mov
aas
ss
jno
add
mov
push
mov
push
push
cld
push
add
loopne
pushf
add
cli
push
or
dec
inc
jle,pt
cs
add
jnp
add
add
add
xchg
sub
add
add
add
je
jecxz
inc
mov
push
add
cmp
push
pop
nop
add
sbb
jae
xchg
add
loop
mov
adc
add
sub
leave
xor
mov
jecxz
jo
movb
add
mov
aaa
pop
fptan
add
xchg
mov
add
in
movsl
jae
repz
mov
fmuls
add
sbb
jmp
jo
jecxz
inc
add
lcall
dec
fadd
add
add
add
add
jbe
cmp
add
pushf
sub
xor
aam
ja
add
or
sub
cmp
stos
and
ljmp
push
jle
fcoms
push
add
pop
xor
mov
adc
je
je
push
add
fwait
push
add
add
bound
mov
hlt
add
test
cld
lock
xchg
add
add
jne
int3
fnsave
out
in
dec
push
add
pop
pop
xor
cwtl
into
push
add
cmp
add
xor
xchg
add
jb
jecxz
mov
or
dec
jle
pop
mov
cmpsl
js
fnstsw
add
xlat
in
das
fcoml
lods
lods
push
mov
clc
testb
sub
adc
cmpsb
add
mov
mov
icebp
sti
mov
out
pop
lret
mov
popf
xchg
mov
out
lock
out
data16
mov
cmc
mov
loope
bound
mov
push
inc
inc
add
iret
pop
sub
lock
add
jb
jmp
and
outsb
sub
add
mov
jo
nop
add
je
mov
cmp
mov
mov
testb
xor
xor
add
mov
and
pushf
pop
std
clc
insl
xchg
add
xchg
add
add
icebp
sbb
fstl
jno
or
mov
add
sub
dec
and
fldenv
ja
sbb
cmp
or
bound
mov
push
add
or
add
test
loope
add
dec
pop
hlt
add
add
je
fldenv
test
add
cs
hlt
add
add
mov
jge
add
mov
mov
sub
fcoms
inc
add
icebp
pop
jmp
pushf
add
add
out
xlat
fdivr
sub
repnz
out
sahf
loop
push
dec
pushf
jg
mov
jp
push
add
fwait
stos
fdivs
inc
add
repz
sub
lods
lock
sub
aad
pop
mov
lods
push
xchg
pop
aaa
scas
clc
mov
add
loop
icebp
aam
data16
out
add
add
add
jp
add
iret
push
in
add
push
add
iret
sub
sti
out
xchg
add
add
cld
push
add
cs
cmpsl
jbe
in
mov
inc
add
add
mov
cmpsl
push
sub
add
xchg
xchg
stos
out
push
imul
fninit
stc
pop
inc
add
add
add
pop
mov
add
aam
loope
add
adc
push
jnp
jbe
scas
imul
inc
add
addb
mov
cmpsl
mov
mov
jb
dec
xor
ds
add
dec
mov
cmc
scas
dec
icebp
lods
sub
add
add
insb
and
mov
add
mov
lahf
mov
ficompl
pop
into
mov
add
outsb
les
in
dec
jecxz
mov
fwait
or
push
add
add
loop
jb
sahf
sbb
mov
or
sti
push
add
in
pop
fucomi
mov
in
sub
add
xorl
arpl
sbb
jo
outsb
jnp
add
add
lret
add
jle
push
add
add
mov
insl
push
cmp
add
add
loop
mov
inc
push
cmp
pushf
push
sbb
ret
dec
imul
add
mov
xor
out
inc
jmp
jb
xchg
add
add
mov
add
popf
in
xor
add
sub
add
mov
cmp
dec
cwtl
jno
bound
mov
add
fwait
addb
lret
add
add
add
std
push
add
add
nop
add
adc
les
mov
add
ret
pop
mov
push
or
adc
inc
add
popa
push
add
add
mov
mov
insb
int
add
jg
dec
out
cmp
repnz
jl
sub
adc
mov
lret
out
mov
add
add
add
add
loopne
push
sbb
or
sbb
add
aas
adc
adc
imull
add
push
add
push
add
loope
stos
fmull
dec
nop
add
rolb
pop
js
sbb
jge
jg
bound
mov
add
add
add
push
add
add
jmp
pop
sub
or
inc
and
sbb
add
mov
lock
add
push
add
mov
jle
jne
js
inc
add
add
mov
sbb
data16
mov
data16
mov
fbld
adc
les
xchg
add
fcomps
jp
xchg
loopne
in
add
add
add
mov
enter
cmp
mov
cld
jo
and
mov
xor
cmp
cld
mov
sub
sub
push
jne
add
sti
outsl
inc
add
pop
addb
add
xor
hlt
add
mov
or
mov
add
int
cmp
dec
mov
add
add
inc
jae
jae
add
addb
scas
dec
sub
lcall
add
push
test
add
mov
addb
add
ljmp
add
add
xlat
lods
cmpsl
lahf
mov
add
add
push
add
xor
mov
add
addb
divl
xlat
test
mov
sti
adc
mov
movsb
add
mov
push
call
pop
in
in
rorl
cmp
sbb
loope
sub
mov
and
iret
jp
lahf
push
dec
ljmp
repnz
add
add
cwtl
scas
sahf
mov
mov
mov
push
add
cld
shll
add
xchg
pop
pop
mov
xchg
add
sbb
push
add
fwait
or
mov
add
cmp
das
fbstp
add
mov
add
add
arpl
jb
push
add
add
mov
bswap
scas
aad
mov
rolb
or
std
push
adc
jle
mov
push
add
imul
dec
push
lea
add
loopne
mov
pop
int3
pop
lods
sti
jns
fldcw
jo
or
add
add
pop
movb
add
jge
sbb
add
add
jne
mov
jno
push
leave
leave
adc
fidivs
cmp
data16
loopne
mov
lret
push
out
xchg
das
loop
adc
cmp
jo
jne
mov
cmc
mov
add
xchg
jmp
fdiv
adc
dec
dec
xor
sbb
movb
add
add
add
xchg
xchg
add
add
jne
add
add
add
cwtl
adc
dec
mov
movsl
ret
outsb
mov
cmp
pop
ret
jmp
js
jl
add
jmp
mov
adc
mov
data16
add
enter
in
sbb
sbb
add
js
add
add
add
jge
pop
fiadds
pushf
addb
hlt
add
add
jnp
xor
mov
sti
jmp
add
xor
lods
cld
mov
mov
mov
enter
add
add
mov
leave
popf
push
add
arpl
add
repnz
popa
or
aad
add
and
mov
out
dec
sti
pop
cwtl
lds
pop
movsl
mov
or
adc
dec
dec
jle
mov
add
popa
sbb
adc
sahf
sbb
popa
mov
push
add
mov
push
add
cmp
dec
sub
pop
cmpsl
sti
lea
hlt
add
add
into
jge
add
cwtl
push
movb
add
bound
mov
jge
imul
add
jmp
add
mov
add
aaa
mov
add
sahf
push
xchg
push
aam
inc
add
add
ja
mov
out
cmp
mov
push
mov
push
lods
push
cltd
lahf
arpl
outsb
add
add
add
cwtl
cltd
and
add
inc
mov
ds
jp
les
mov
out
andl
into
test
pusha
add
add
pop
stc
out
mov
xchg
add
and
mov
movb
cmp
loopne
test
out
aad
adc
rcrl
add
add
add
cmp
cmp
cmp
mov
xor
test
add
add
add
cmp
js
test
outsb
daa
xor
and
mov
int3
jecxz
test
and
mov
xchg
add
add
mov
sbb
pop
sbb
cmp
dec
xor
or
or
mov
add
call
aaa
xchg
inc
clc
data16
add
mov
test
popf
push
cld
movsl
mov
xlat
cmpsl
leave
std
add
iret
outsb
xchg
adc
out
mov
push
add
add
pop
jmp
add
lods
pop
repz
mov
adc
jnp
add
add
jge
mov
add
pop
dec
sahf
daa
lods
rcll
dec
movsl
arpl
ds
xor
hlt
add
clc
xor
sbb
pop
mov
add
cmovg
jb
int
add
ret
and
add
lods
cmp
mov
push
test
jecxz
inc
sbb
enter
add
cmp
sbb
xchg
pop
je,pn
cmp
xchg
mov
fsubrs
inc
add
sbb
mov
add
mov
add
enter
add
mov
add
sti
or
or
xor
out
add
xchg
mov
add
add
add
and
mov
add
or
push
incl
add
add
jae
lret
out
loopne
mov
cmp
add
add
addb
dec
add
in
dec
cmpsb
add
ss
add
and
mov
mov
and
mov
add
add
xchg
fisubs
ret
inc
decl
addb
jecxz
lret
out
scas
call
add
add
adc
xchg
mov
mov
test
pop
repz
fcmovnb
cmp
jb
cli
pop
fwait
data16
mov
inc
add
out
aam
lret
mov
add
add
fwait
lock
or
arpl
addb
add
call
adc
add
mov
inc
add
push
add
add
pop
test
das
sub
clc
lcall
repz
sbb
mov
insl
out
aas
int3
add
enter
lcall
lock
call
add
add
add
pop
mov
mov
bound
mov
xchg
dec
outsl
inc
and
mov
sbb
mov
add
xchg
add
in
push
out
lods
ljmp
push
ret
dec
and
mov
mov
arpl
pop
or
add
push
add
add
push
add
add
cmp
add
adc
stos
mov
add
add
pop
jmp
call
dec
loope
dec
ds
xor
and
into
nop
add
sub
dec
insb
adc
sbb
add
add
sahf
xrelease
add
jmp
stc
pop
mull
fimull
enter
cmp
add
add
push
mov
movsl
testb
add
add
cmp
movsb
add
mov
rolb
and
mov
popa
movb
push
add
add
das
sbb
push
add
push
adc
ja
pop
mov
xor
jb
testb
sub
xor
mov
scas
pop
data16
add
mov
sub
shl
add
add
xchg
add
cmp
mov
xchg
add
mov
fldenv
add
mov
cmpl
adc
xor
stc
and
mov
cwtl
iret
sarl
data16
add
jns
add
mov
mov
jb
pop
je
sbb
add
add
cmpsb
add
pop
adc
mov
mov
mov
das
test
rolb
daa
iret
xchg
add
jnp
add
add
imul
mov
pop
test
xchg
push
pop
pop
rolb
cmp
add
popa
pusha
add
add
mov
mov
out
lea
jnp
adc
mov
jmp
add
add
stos
mov
jno
add
mov
add
add
mov
pusha
add
fstps
stc
push
mov
dec
ret
lods
sub
pop
and
loope
lea
add
sbb
fnsave
add
add
add
fistpll
lcall
data16
add
xor
mov
in
in
movsl
sbb
dec
and
testb
xchg
xchg
cmp
add
gs
xlat
or
js
adc
mov
xchg
add
stc
xor
repz
mov
cmp
add
xlat
inc
lds
mov
add
add
add
ja
or
inc
push
xor
cmp
mov
add
and
dec
mov
and
repz
add
add
addb
sahf
leave
fsubrp
xorl
adc
mov
add
mov
out
mov
mov
mov
inc
add
add
sbb
testb
clc
mov
addb
loope
js
out
imul
xchg
mov
mov
insb
xor
lock
out
imul
push
icebp
shrl
add
and
mov
adc
add
pop
movb
dec
xor
add
addb
insb
jp
add
add
add
mov
popf
mov
cld
repnz
add
and
mov
add
add
push
cld
in
or
add
hlt
add
std
pushf
adc
aad
add
mov
scas
add
pop
jp
pop
sti
daa
jb
add
sbb
addb
scas
xlat
dec
arpl
or
stos
cmpsb
add
arpl
xor
test
out
ficomps
mov
shl
pop
scas
jbe
mov
or
xor
mov
pop
add
and
mov
in
mov
pushf
ds
xlat
xchg
xor
testb
add
add
popa
cwtl
jge
addb
or
xor
push
sub
jno
add
jae
movb
pop
or
xchg
add
inc
add
mov
loope
add
add
add
addb
add
sub
mov
add
inc
inc
add
add
roll
add
jecxz
imul
add
adc
add
std
mov
add
mov
xor
xor
mov
lods
stos
cmp
popa
ds
jns
out
imul
call
jp
mov
or
add
out
movsb
add
js
and
add
jg
pop
repnz
insb
push
lds
add
add
xlat
leave
cli
add
add
add
adc
add
ljmp
mov
add
rolb
jne
and
jo
outsb
xchg
pop
rolb
nop
add
adc
movsl
movsl
rolb
push
add
add
inc
test
jmp
sub
push
out
outsb
and
ljmp
cmpsl
xchg
mov
add
add
movb
add
mov
sar
loop
cs
mov
add
je
cld
push
add
add
out
dec
mov
jg
int3
push
test
push
add
inc
add
mov
rolb
in
and
sub
add
inc
mov
gs
add
add
or
loopne
xor
in
mov
add
add
dec
mov
outsl
in
rolb
lcall
inc
add
push
mov
das
cmc
xlat
push
sbb
aad
add
js
jp
mov
stc
adc
push
add
mov
xor
and
mov
lock
cld
out
add
add
bound
mov
or
xor
jp
mov
rolb
xchg
add
add
insl
xor
rolb
aad
fisubrl
fistl
bound
mov
fnstsw
das
pop
mov
iret
orl
add
mov
add
pop
fbld
xchg
add
add
dec
fistpll
iret
in
mov
inc
add
add
xchg
add
push
mov
add
in
mov
pop
pop
addb
cmp
push
add
add
movsb
add
xor
loop
jae
mov
push
add
cmpsl
dec
add
mov
add
aaa
sub
add
mov
adc
jns
push
mov
jle
add
add
adc
aad
add
stos
xor
or
and
add
add
test
mov
or
add
jle
xor
fwait
jne
mov
lret
rorl
mov
rolb
lea
repnz
fcomp
push
inc
in
add
fidivs
mov
sbb
xor
pop
inc
mov
ds
cmp
push
xchg
adc
add
mov
add
add
mov
testb
cwtl
jl
dec
xchg
add
jge
pop
or
add
add
sub
add
std
pusha
add
mov
adc
popa
push
add
arpl
stos
jge
push
add
lret
arpl
leave
cmp
out
xlat
push
add
add
add
sbb
cmp
test
mov
add
mov
scas
xchg
xor
es
add
add
push
pushf
icebp
addb
sahf
jl
add
push
add
jbe
out
loope
and
add
add
mov
clc
repnz
jae
add
dec
cmp
repnz
jae
add
out
add
add
jmp
xor
add
add
stos
dec
push
mov
xchg
ret
movsb
add
jbe
fsubs
cmc
sub
mov
xchg
ret
add
jge
call
add
cmp
nop
jae
cmp
add
clc
repnz
jae
xor
add
dec
add
cmc
pop
jne
clc
repnz
jae
test
add
jge
clc
repnz
jae
movsb
add
and
das
jne
clc
repnz
jae
add
scas
mov
push
mov
xchg
ret
adc
add
xchg
hlt
inc
add
add
test
nop
jae
add
lahf
xchg
popa
cs
fwait
cld
nop
jmp
add
add
jge
push
add
mov
fwait
cld
nop
jmp
xor
call
fwait
cld
nop
jmp
jbe
call
pushf
pop
clc
repnz
jae
add
add
add
in
add
mov
xlat
pop
add
fwait
cld
nop
jmp
add
and
fiaddl
add
add
inc
push
mov
xchg
ret
jne
add
fiaddl
lahf
pop
push
clc
repnz
jae
add
add
xchg
mov
add
fwait
cld
nop
jmp
add
cmp
add
and
clc
repnz
jae
repnz
fs
ja
add
clc
repnz
jae
xor
add
loop
add
add
add
add
xor
fwait
cld
nop
jmp
dec
inc
mov
mov
fwait
cld
nop
jmp
add
mov
add
push
mov
fldt
mov
add
enter
mov
clc
repnz
jae
mov
add
dec
cmpw
fwait
cld
nop
jmp
test
add
add
inc
push
mov
xchg
ret
pop
and
xor
add
stc
pop
push
mov
xchg
ret
add
add
xor
add
fldcw
movb
clc
repnz
jae
fadds
add
aas
add
add
repnz
jae
test
jge
mov
clc
repnz
jae
adc
jge
in
xor
clc
repnz
jae
lahf
add
add
cmp
clc
repnz
jae
clc
add
add
jmp
and
add
add
and
add
mov
or
jae
add
add
xchg
and
shr
clc
repnz
jae
add
add
ret
clc
repnz
jae
test
test
arpl
fisttpl
nop
jae
fcoms
push
add
add
clc
repnz
jae
test
push
add
les
clc
repnz
jae
test
add
add
clc
repnz
jae
es
fiadds
repnz
lret
add
fwait
cld
nop
jmp
in
movsb
add
test
movsl
pushf
and
fwait
cld
nop
jmp
add
pop
xor
pushf
je
push
repnz
jae
add
add
add
add
rcrb
or
add
in
arpl
xor
push
mov
xchg
ret
add
mov
add
xchg
add
test
adc
nop
jae
test
call
mov
clc
repnz
jae
add
add
add
das
xor
fwait
cld
nop
jmp
jbe
test
xor
jg
clc
repnz
jae
mov
mov
repnz
jae
add
es
clc
cmp
inc
xor
clc
repnz
jae
test
push
and
out
add
fwait
cld
nop
jmp
xor
and
push
mov
xchg
ret
ss
add
xchg
insb
mov
push
mov
xchg
ret
add
pop
clc
repnz
jae
pop
add
add
out
stc
add
clc
repnz
jae
jns
add
scas
add
push
mov
xchg
ret
leave
xchg
jecxz
mov
and
clc
repnz
jae
out
add
xor
les
in
add
test
nop
jmp
call
push
clc
repnz
jae
add
fiaddl
add
add
clc
repnz
jae
repnz
faddp
mov
add
clc
repnz
jae
bnd
jne
pop
mov
ret
add
out
add
leave
push
clc
repnz
jae
xor
test
jbe
add
lcall
jae
add
push
test
add
adcb
mov
add
mov
mov
mov
xchg
ret
add
add
add
add
sub
add
add
pop
push
mov
xchg
ret
add
add
aad
add
add
repnz
jae
add
add
jne
mov
push
mov
xchg
ret
add
add
and
cld
nop
jmp
push
mov
add
mov
cld
nop
jmp
test
lret
and
push
mov
xchg
ret
aad
add
or
icebp
clc
repnz
jae
test
add
mov
xor
sahf
push
clc
repnz
jae
add
add
add
pop
fwait
cld
nop
jmp
push
arpl
add
and
addb
push
clc
repnz
jae
out
add
add
jne
push
imul
add
jge
xor
mov
inc
sti
inc
add
add
and
inc
add
nop
jae
xor
movsb
add
lods
shr
push
mov
xchg
ret
test
add
adc
repnz
jae
repnz
out
pop
test
add
addr16
add
repnz
jae
add
add
enter
movsl
rolb
xchg
ret
add
repnz
add
sbb
mov
xchg
ret
add
out
movsb
adc
nop
jae
cld
add
mov
add
mov
clc
repnz
jae
leave
cld
out
add
insb
mov
clc
repnz
jae
pop
add
add
mov
je
clc
repnz
jae
add
lahf
jae
add
cmp
repz
add
repnz
jae
add
add
repnz
jae
jbe
dec
adc
and
jge
mov
clc
repnz
jae
cmp
mov
mov
adc
repnz
jae
add
and
mov
jecxz
add
repnz
xor
add
je
cld
nop
jmp
add
push
fwait
cld
nop
jmp
add
repnz
add
add
clc
repnz
jae
test
aad
pushf
add
add
xor
push
leave
fwait
cld
nop
jmp
aad
xchg
add
xor
inc
add
add
repnz
add
and
mov
inc
add
add
add
add
jp
test
repnz
jae
jmp
test
cmpl
fwait
cld
nop
jmp
add
cltd
mov
pop
push
mov
add
add
add
add
cli
xchg
divl
sar
repnz
jae
movsb
add
movsb
add
mov
fwait
cld
nop
jmp
mov
mov
clc
repnz
jae
addb
add
cld
nop
jmp
xchg
xchg
add
fwait
cld
nop
jmp
repnz
movsb
add
and
xor
cmp
ret
es
xchg
add
cld
rolb
xchg
ret
fadds
movsb
fs
push
push
mov
xchg
ret
pop
add
jne
add
insl
je
clc
repnz
jae
test
lahf
lock
cmc
or
cld
nop
jmp
add
add
push
ss
out
mov
clc
repnz
jae
mov
cltd
cltd
inc
add
clc
repnz
jae
xor
out
add
test
lods
push
mov
xchg
ret
clc
movsb
jbe
add
pop
sbb
clc
repnz
jae
and
pop
jge
jbe
out
add
add
add
clc
repnz
jae
mov
add
nop
jae
add
subb
mov
fwait
cld
nop
jmp
add
movsb
call
jno
add
dec
fwait
cld
nop
jmp
add
mov
add
and
add
repnz
jae
add
andl
jae
test
add
mov
add
insb
clc
repnz
jae
add
mov
fwait
cld
nop
jmp
add
lahf
add
les
hlt
add
push
mov
xchg
ret
movsb
call
jmp
xor
push
mov
xchg
ret
add
mov
and
push
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
pushf
pop
add
add
es
jmp
add
add
les
cwtl
shr
clc
repnz
jae
add
add
fisubl
mov
clc
repnz
jae
add
add
cmp
arpl
fwait
cld
nop
jmp
add
fdivrs
dec
in
in
inc
add
clc
repnz
jae
add
pushf
movb
add
sbb
add
clc
repnz
jae
add
lock
int3
mov
fwait
cld
nop
jmp
repnz
add
bound
mov
push
mov
inc
lahf
add
jmp
add
add
bound
add
sub
nop
jae
add
in
add
scas
popl
clc
repnz
jae
add
add
fimuls
jae
out
add
add
add
outsl
xchg
push
mov
xchg
ret
lahf
add
add
xor
clc
repnz
jae
add
mov
adc
repnz
jae
aad
add
in
testb
insb
mov
clc
repnz
jae
add
add
clc
repnz
jae
leave
pushf
inc
add
add
ss
jne
jmp
arpl
movb
jbe
add
sub
jge
clc
repnz
jae
add
and
pusha
push
mov
xchg
ret
jbe
add
add
xchg
mov
cld
nop
jmp
add
pushf
push
add
push
clc
repnz
jae
add
movb
add
push
clc
repnz
jae
ss
out
movsb
dec
jae
push
mov
adc
add
lock
add
cmpsb
pop
push
add
add
mov
cmpl
fwait
cld
nop
jmp
add
and
pusha
clc
repnz
jae
add
fiaddl
aad
add
jb
in
push
mov
add
incb
add
sbb
and
push
mov
xchg
ret
jne
xchg
jecxz
mov
push
mov
xchg
ret
add
out
jmp
push
fwait
cld
nop
jmp
add
add
addb
add
nop
jae
aad
adc
add
jmp
mov
fwait
cld
nop
jmp
add
push
push
pushl
clc
repnz
jae
add
and
aad
sub
mov
add
repnz
jae
add
add
push
add
push
mov
xchg
ret
test
movsb
repnz
aad
add
add
add
idiv
call
clc
or
add
clc
repnz
jae
jne
add
add
clc
repnz
jae
add
mov
aad
add
add
addb
fucomip
ficomps
add
cli
jmp
and
mov
mov
clc
repnz
jae
add
add
fiaddl
jge
pop
clc
repnz
jae
test
fs
add
add
add
in
aad
lahf
and
movsl
add
clc
repnz
jae
jne
cmp
mov
jae
lahf
jns
add
movb
jno
add
clc
repnz
jae
add
addb
add
add
sub
mov
xchg
ret
movl
ss
add
push
mov
xchg
ret
push
and
test
leave
push
clc
repnz
jae
xor
add
and
xchg
clc
repnz
jae
mov
add
jge
mov
clc
repnz
jae
add
clc
cld
in
mov
pusha
clc
repnz
jae
add
pop
add
dec
adc
mov
push
mov
xchg
ret
add
mov
cmp
clc
repnz
jae
add
add
mov
push
mov
xchg
ret
mov
or
repnz
jae
jge
add
push
addb
add
add
repnz
jae
mov
movsb
xchg
add
mov
clc
repnz
jae
push
add
sub
nop
jae
mov
jge
clc
push
add
mov
test
push
mov
xchg
ret
lahf
add
mov
add
push
mov
xchg
ret
add
fiaddl
fwait
cld
nop
jmp
pop
cmp
add
clc
test
add
add
add
clc
repnz
jae
add
add
jle
sti
clc
repnz
jae
cltd
add
add
and
push
mov
xchg
ret
add
add
rep
clc
repnz
jae
ficoms
mov
add
add
add
add
add
add
es
add
add
add
test
fwait
cld
nop
jmp
jmp
add
test
add
add
clc
repnz
jae
xor
push
clc
repnz
jae
adc
add
add
push
mov
xchg
ret
add
add
xorl
fwait
cld
nop
jmp
add
test
push
clc
repnz
jae
fiaddl
arpl
jns
adc
repnz
jae
out
dec
add
pop
add
mov
jmp
add
add
add
add
push
push
mov
xchg
ret
mov
add
lahf
cmp
fwait
cld
nop
jmp
jmp
jne
jb
add
mov
inc
and
repnz
jae
add
data16
jae
add
add
or
cld
nop
jmp
add
add
add
pop
mov
outsl
popa
clc
repnz
jae
adc
add
add
clc
repnz
jae
add
out
and
decl
push
mov
xchg
ret
adc
xchg
lahf
insl
add
fwait
cld
nop
jmp
dec
add
adc
ja
add
and
or
repnz
jae
add
add
ror
pop
push
mov
xchg
ret
add
add
or
sar
repnz
jae
fadds
xor
cld
mov
clc
repnz
jae
add
mov
push
mov
xchg
ret
cld
add
test
add
addb
mov
fwait
cld
nop
jmp
jne
mov
popf
push
push
mov
xchg
ret
aad
add
add
add
mov
add
add
repnz
jae
cltd
jmp
out
add
add
repnz
jae
add
add
fisubrs
push
mov
xchg
ret
add
fadds
add
mov
jae
cld
nop
jmp
add
add
fwait
cld
nop
jmp
push
mov
mov
in
mov
clc
repnz
jae
fidivrs
pop
add
push
mov
xchg
ret
jns
dec
jns
pushf
cld
push
add
add
inc
jns
rcrb
push
add
pop
pop
add
adc
add
clc
repnz
jae
pop
cltd
mov
into
mov
clc
repnz
jae
arpl
add
push
mov
xchg
ret
jge
add
aad
call
fdivr
repnz
jae
add
jbe
add
xchg
adc
repnz
jae
add
fiaddl
xchg
mov
jmp
xor
inc
add
clc
add
add
or
mov
add
in
inc
push
sub
cmp
cltd
inc
ret
add
mov
xchg
ret
add
arpl
add
lea
fwait
cld
nop
jmp
push
add
cmp
jae
fadds
ss
jge
movb
add
push
clc
repnz
jae
repnz
add
add
add
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
push
aad
mov
test
mov
mov
xchg
ret
add
mov
jp
jne
clc
repnz
jae
mov
xor
repnz
jae
and
add
cld
mov
clc
repnz
jae
add
pop
adc
mov
clc
repnz
jae
add
mov
pop
ljmp
add
jge
add
add
les
xchg
bound
mov
push
or
cld
nop
jmp
repnz
add
add
nop
jmp
fiaddl
movsb
test
mov
roll
add
fwait
cld
nop
jmp
add
jns
push
mov
cs
clc
repnz
jae
out
add
test
mov
clc
repnz
jae
out
test
add
push
mov
xchg
ret
add
add
add
clc
repnz
jae
add
test
add
jne
push
mov
xchg
ret
test
xor
repnz
enter
jmp
add
add
inc
aad
inc
add
lret
fwait
cld
nop
jmp
add
add
add
add
stos
mov
clc
repnz
jae
aad
push
inc
faddl
dec
cmp
repnz
jae
add
mov
add
cld
nop
jmp
add
push
add
push
jge
fmuls
test
repnz
jae
fiaddl
pop
mov
clc
repnz
jae
add
aad
cmp
fs
push
fwait
cld
nop
jmp
and
ss
clc
add
add
shll
stos
clc
repnz
jae
arpl
add
add
add
les
and
add
loope
je
clc
repnz
jae
and
add
add
add
add
sub
add
leave
cmp
add
mov
clc
repnz
jae
inc
add
add
fcomps
clc
repnz
jae
test
add
cld
add
std
mov
clc
repnz
jae
add
pop
add
add
out
add
mov
add
add
loopne
cld
nop
jmp
add
xor
mov
clc
repnz
jae
pop
add
inc
call
adc
add
add
add
push
mov
xchg
ret
add
add
dec
insl
push
push
mov
xchg
ret
add
mov
pop
adc
clc
repnz
jae
jge
add
add
push
clc
repnz
jae
pop
test
mov
add
popa
add
cld
nop
jmp
add
jge
add
sub
test
adc
add
repnz
jae
add
jge
xor
clc
repnz
jae
out
push
dec
mov
add
clc
repnz
jae
xchg
add
sti
sub
clc
repnz
jae
add
add
aad
out
add
clc
repnz
jae
add
mov
mov
push
mov
xchg
ret
xchg
mov
push
popa
fwait
cld
nop
jmp
xor
add
jge
ret
pop
mov
clc
repnz
jae
push
add
outsl
push
clc
repnz
jae
add
add
cmp
dec
sub
mov
inc
add
adc
add
add
and
add
repnz
jae
push
add
push
add
repnz
jae
addb
add
repnz
jae
and
add
add
jg
mov
nop
jae
xor
add
dec
mov
push
mov
xchg
ret
mov
inc
sub
test
clc
repnz
jae
add
pop
cwtl
imul
clc
repnz
jae
push
pop
mov
and
adc
repnz
jae
out
pop
add
or
clc
repnz
jae
test
add
add
add
sub
add
repnz
jae
add
xor
add
clc
repnz
jae
add
mov
clc
repnz
jae
add
add
popa
add
repnz
jae
xor
add
repnz
jae
mov
add
ss
test
mov
repnz
jae
add
add
add
cwtl
add
push
mov
xchg
ret
add
xor
sub
add
fwait
cld
nop
jmp
add
add
jae
add
add
add
test
mov
clc
repnz
jae
add
scas
mov
push
mov
xchg
ret
and
add
mov
clc
repnz
jae
repnz
cld
add
out
add
repnz
jae
add
add
add
std
mov
clc
repnz
jae
add
add
icebp
fwait
cld
nop
jmp
aad
lahf
aad
jge
add
mov
add
fwait
cld
nop
jmp
mov
xchg
add
mov
test
lea
fwait
cld
nop
jmp
add
push
lahf
add
mov
pushl
clc
repnz
jae
jmp
add
add
mov
fwait
cld
nop
jmp
add
add
pop
pushl
clc
repnz
jae
add
add
clc
sbb
movsb
clc
repnz
jae
jmp
mov
lea
fwait
cld
nop
jmp
add
add
add
test
add
push
mov
xchg
ret
ss
andb
jno
add
test
and
push
mov
xchg
ret
mov
add
add
repnz
jae
call
loope
add
add
mov
xchg
ret
add
add
add
fwait
cld
nop
jmp
mov
movsb
arpl
add
dec
mov
clc
repnz
jae
add
jne
subl
clc
repnz
jae
pop
add
call
and
add
clc
repnz
jae
xor
add
clc
repnz
jae
push
add
ret
clc
repnz
jae
and
dec
add
add
dec
add
repnz
jae
add
and
pop
int3
and
clc
repnz
jae
xor
test
aad
adc
push
fwait
mov
clc
repnz
jae
and
add
fcomp
xchg
or
repnz
jae
out
add
add
xor
pop
sub
clc
repnz
jae
add
aad
add
lods
insl
clc
repnz
jae
add
out
into
shl
clc
repnz
jae
lahf
clc
out
add
rolb
enter
repnz
jae
add
mov
add
subl
pop
pop
add
add
and
push
clc
repnz
jae
add
and
push
movsb
and
in
add
clc
repnz
jae
xor
pop
add
movzwl
clc
repnz
jae
add
mov
clc
repnz
jae
jge
add
push
mov
xchg
ret
out
and
add
bound
mov
pusha
clc
repnz
jae
arpl
xor
out
in
scas
rep
push
mov
xchg
ret
add
jge
inc
mov
add
je
fwait
cld
nop
jmp
clc
add
clc
repnz
jae
dec
add
cmp
rcrl
hlt
jge
add
and
add
nop
jae
and
mov
das
add
add
cld
test
add
add
fiaddl
add
repnz
fisttpll
nop
jae
add
add
adc
add
repnz
jae
bnd
fiaddl
xor
jae
jne
jns
fs
add
push
mov
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
mov
sub
fs
incl
add
test
add
fs
mov
push
mov
xchg
ret
pop
test
call
sub
clc
repnz
jae
add
add
cmp
repnz
jae
movsb
add
add
test
push
into
cmpl
fwait
cld
nop
jmp
movsb
add
jge
adc
jbe
clc
repnz
jae
test
ficoms
aad
add
add
clc
repnz
jae
add
pop
inc
test
ljmp
add
repnz
jae
add
out
addb
add
inc
lea
roll
xchg
ret
add
add
add
nop
jae
add
movb
add
jo
add
clc
repnz
jae
add
sti
ret
push
mov
xchg
ret
in
add
fcoms
es
sub
clc
repnz
jae
add
and
ss
popa
fisttpll
nop
jae
add
icebp
mov
or
add
icebp
incl
jmp
movb
add
add
add
repnz
jae
movl
mov
mov
push
mov
xchg
ret
add
test
adc
add
add
jae
push
inc
aad
test
es
cmpw
fwait
cld
nop
jmp
clc
add
test
fldcw
add
inc
ss
test
jge
mov
clc
repnz
jae
add
add
clc
repnz
jae
add
add
or
clc
repnz
jae
dec
dec
push
fwait
cld
nop
jmp
fmuls
add
jge
push
bnd
add
popa
clc
repnz
jae
mov
add
leave
pop
test
clc
lea
push
mov
xchg
ret
add
add
xor
or
add
repnz
jae
out
jmp
pop
clc
repnz
jae
pushf
fs
leave
and
in
mov
push
mov
xchg
ret
jbe
pushf
movsb
add
add
mov
push
mov
xchg
ret
aad
add
repnz
jae
test
xor
fiadds
clc
push
push
out
mov
clc
repnz
jae
xor
add
push
clc
repnz
jae
jmp
repnz
mov
clc
repnz
jae
clc
add
pusha
add
adc
fwait
cld
nop
jmp
arpl
and
add
movsb
add
mov
push
mov
xchg
ret
movsb
add
pop
push
mov
xchg
ret
add
add
outsl
sub
clc
repnz
jae
add
and
xor
add
add
push
mov
xchg
ret
add
test
mov
push
mov
xchg
ret
add
add
fimuls
nop
jae
and
add
movl
lock
add
add
add
lahf
sbb
repnz
jae
jge
add
add
test
pop
mov
fwait
cld
nop
jmp
add
cld
xchg
les
mov
xchg
clc
repnz
jae
jmp
add
add
fcomps
in
add
jne
dec
roll
sbb
sbb
add
repnz
jae
add
in
add
mov
fwait
cld
nop
jmp
mov
jl
sbb
cld
nop
jmp
aad
repnz
call
sub
repnz
jae
repnz
add
fadds
nop
jae
mov
mov
add
pop
rep
push
mov
xchg
ret
repnz
jmp
add
lods
mov
clc
repnz
jae
add
arpl
test
or
inc
push
mov
xchg
ret
cmp
xor
add
push
add
les
clc
repnz
jae
xor
call
out
and
push
mov
xchg
ret
add
add
or
add
repnz
jae
add
cmp
repnz
jae
cltd
push
add
add
test
stc
clc
repnz
jae
test
pushf
fwait
add
push
mov
xchg
ret
add
add
and
cmp
fwait
cld
nop
jmp
movsb
add
add
xor
clc
repnz
jae
adc
addb
xchg
add
rep
clc
repnz
jae
add
add
add
clc
repnz
jae
and
add
add
xor
push
mov
xchg
ret
pop
adc
push
push
mov
xchg
ret
add
add
fadds
add
pop
add
clc
repnz
jae
add
clc
repnz
jae
add
xor
add
cld
nop
jmp
add
mov
insl
push
push
mov
xchg
ret
ss
test
clc
repnz
jae
push
aad
jge
add
add
nop
jae
add
movsb
repnz
add
push
mov
xchg
ret
dec
xor
pop
push
mov
xchg
ret
jbe
mov
fisttps
jae
add
es
leave
add
repnz
jae
add
arpl
xor
clc
repnz
jae
add
add
jne
dec
mov
clc
repnz
jae
pop
test
add
sub
repnz
jae
add
push
add
pop
push
mov
xchg
ret
add
add
pushf
add
fstps
cld
nop
jmp
out
add
pop
add
cli
pop
fwait
cld
nop
jmp
add
test
sbb
jnp
clc
repnz
jae
cltd
push
add
aam
push
add
xlat
ljmp
fisubs
sbb
out
clc
repnz
jae
fiaddl
add
push
add
cmp
mov
xchg
ret
add
jmp
add
ficompl
repnz
jae
call
add
pop
hlt
add
addb
push
clc
repnz
jae
movsb
add
aad
leave
add
dec
popa
clc
repnz
jae
jbe
fiaddl
xor
add
addr16
fwait
cld
nop
jmp
pushf
test
fcomp
test
inc
fsubrp
sub
clc
jmp
xor
cmp
xchg
add
push
mov
xorb
add
xchg
add
add
clc
repnz
jae
add
in
inc
add
add
dec
push
push
mov
xchg
ret
movsb
arpl
pop
cltd
pop
pop
das
mov
push
mov
xchg
ret
add
fs
xabort
nop
jae
cltd
add
pop
pop
add
jg
call
xchg
cli
inc
add
add
adc
add
clc
repnz
jae
add
jge
arpl
add
clc
repnz
jae
add
add
push
out
add
clc
repnz
jae
repnz
add
lahf
inc
test
mov
push
mov
xchg
ret
adc
mov
add
mov
nop
jmp
aad
adc
jns
add
add
fwait
cld
nop
jmp
test
and
xor
add
jae
and
test
jge
fs
sti
lea
fwait
cld
nop
jmp
test
test
xor
add
sub
nop
jae
leave
push
add
aad
xor
pusha
add
jmp
jae
mov
es
clc
repnz
jae
arpl
jge
add
push
mov
xchg
ret
out
jns
add
adc
repnz
jae
addb
add
adc
inc
add
inc
adc
mov
xchg
ret
movl
push
clc
repnz
jae
leave
add
add
push
fisubl
mov
clc
repnz
jae
cld
push
add
add
mov
cmp
fwait
cld
nop
jmp
dec
out
fiaddl
lahf
add
adc
test
add
mov
iret
je
clc
repnz
jae
inc
call
push
push
mov
xchg
ret
lahf
aad
mov
add
lods
cli
inc
add
repnz
add
xor
add
fwait
cld
nop
jmp
add
jge
push
add
mov
fwait
cld
nop
jmp
out
add
jbe
add
add
add
cld
nop
jmp
add
add
mov
push
fwait
cld
nop
jmp
addb
add
xor
adc
sbb
add
repnz
jae
jmp
add
xor
jmp
aad
clc
pop
add
add
clc
faddl
add
repnz
jae
jge
movsb
pop
call
clc
repnz
jae
pop
add
add
into
test
fwait
cld
nop
jmp
add
add
and
adc
call
fwait
cld
nop
jmp
cmp
add
and
push
mov
xchg
ret
add
xor
lods
mov
clc
repnz
jae
cmp
add
xor
mov
enter
fwait
cld
nop
jmp
pop
add
je
clc
repnz
jae
add
add
clc
repnz
jae
add
pushf
xor
push
lods
and
imul
incl
out
dec
add
fwait
add
push
mov
xchg
ret
movsb
aad
add
rorl
rolb
cld
nop
jmp
add
aad
cmp
clc
repnz
jae
xor
pop
xchg
push
mov
xchg
ret
movb
jmp
add
cld
nop
jmp
add
fs
push
add
nop
jae
pushf
call
mov
xor
add
clc
repnz
jae
jbe
aam
add
jne
clc
repnz
jae
xor
mov
push
mov
xchg
ret
add
mov
in
mov
clc
repnz
jae
add
add
lcall
fdivr
incl
pop
and
loop
or
cld
nop
jmp
adc
add
test
and
fcmovbe
cmp
repnz
jae
test
add
add
pop
adc
mov
xchg
ret
add
add
pushl
clc
repnz
jae
add
add
fimull
repnz
jae
fiaddl
add
push
test
ret
clc
repnz
jae
bnd
add
add
clc
repnz
jae
fiadds
xchg
xor
push
and
cmp
dec
jne
test
out
fisubs
add
popa
std
lcall
add
add
xor
test
add
pop
call
clc
repnz
jae
mov
mov
clc
repnz
jae
out
add
jge
pop
iret
add
clc
repnz
jae
xor
es
lret
dec
fwait
cld
nop
jmp
pop
jge
pop
test
add
aaa
lea
clc
repnz
jae
add
add
add
test
fwait
cld
nop
jmp
and
add
out
pushf
mov
repnz
jae
cltd
add
imul
clc
repnz
jae
xchg
pop
add
adc
dec
fwait
cld
nop
jmp
add
add
add
add
add
clc
repnz
jae
push
add
xor
inc
movsl
pop
mov
clc
repnz
jae
jge
add
inc
clc
repnz
jae
add
add
add
incb
add
fcos
jmp
add
inc
add
mov
clc
repnz
jae
add
add
adc
add
mov
mov
out
int3
push
clc
repnz
jae
adc
leave
add
sahf
mov
clc
repnz
jae
add
add
out
ror
clc
repnz
jae
repnz
cmp
cltd
pop
fwait
cld
nop
jmp
add
movb
add
add
pop
push
mov
xchg
ret
add
add
repnz
bound
mov
je
clc
repnz
jae
jns
subb
loope
repnz
jae
arpl
cmp
test
repnz
jae
ficoml
add
clc
repnz
jae
out
xchg
add
push
add
repnz
add
add
pop
mov
clc
repnz
jae
mov
add
mov
clc
repnz
jae
add
add
add
cmp
and
clc
repnz
jae
repnz
jne
fnstenv
sar
repnz
jae
movl
add
and
clc
repnz
jae
add
push
clc
repnz
jae
out
aad
fisttpll
repnz
jae
add
clc
dec
adc
mov
fwait
cld
nop
jmp
cld
test
jns
mov
mov
xchg
ret
add
mov
push
mov
clc
repnz
jae
add
lods
add
clc
repnz
jae
jge
xor
rep
clc
repnz
jae
out
add
add
push
mov
xchg
ret
call
add
mov
xchg
ret
test
inc
dec
and
adc
orl
jge
pop
add
adc
repnz
jae
cmp
leave
add
add
cmp
fwait
cld
nop
jmp
fsubs
je
add
aad
pushl
aad
add
adc
xor
lods
pusha
clc
repnz
jae
movsb
xchg
pop
add
add
repnz
jae
fs
add
movb
mov
clc
repnz
jae
add
add
fwait
and
clc
repnz
jae
xor
add
leave
add
add
add
add
add
mov
nop
jae
add
add
mov
push
mov
xchg
ret
add
mov
mov
mov
lahf
filds
cmp
pop
scas
add
arpl
imul
fdivr
incl
add
aad
mov
add
add
movb
mov
clc
repnz
jae
add
clc
aad
push
adc
and
push
mov
xchg
ret
mov
jg
add
add
gs
pushl
pop
mov
out
rep
fwait
cld
nop
jmp
out
and
test
jmp
mov
stc
clc
repnz
jae
add
inc
fs
add
jae
mov
add
add
arpl
add
out
clc
repnz
jae
add
js
out
out
clc
clc
repnz
jae
add
add
dec
push
clc
repnz
jae
cld
xor
les
data16
test
rclb
inc
add
add
or
aam
clc
repnz
jae
xchg
subb
clc
repnz
jae
add
add
jne
clc
repnz
jae
fs
jge
add
push
mov
xchg
ret
add
add
inc
adc
repnz
jae
add
add
movsb
add
add
clc
repnz
jae
add
dec
pusha
clc
repnz
jae
cmp
xor
adc
add
push
mov
xchg
ret
add
jbe
jne
stos
jne
clc
repnz
jae
pop
add
je
clc
repnz
jae
jmp
test
add
nop
jae
cltd
add
mov
loop
pusha
add
ljmp
adc
lcall
mov
jae
add
clc
add
es
mov
clc
repnz
jae
test
repnz
jmp
and
add
add
mov
icebp
clc
repnz
jae
cltd
jne
add
out
inc
iret
mov
clc
repnz
jae
add
add
add
rolb
sub
clc
repnz
jae
add
xchg
sub
in
add
xchg
mov
xchg
clc
repnz
jae
add
add
fimull
mov
clc
repnz
jae
and
cld
adc
add
mov
xchg
ret
push
push
bnd
pop
add
ss
add
xchg
cmp
repnz
inc
add
push
xchg
cltd
out
jmp
jbe
mov
and
jns
sub
push
mov
xchg
ret
arpl
inc
adc
loop
push
mov
xchg
ret
mov
add
clc
repnz
jae
add
pop
jge
scas
jne
clc
repnz
jae
call
mov
jae
add
jmp
add
add
clc
repnz
jae
out
jge
add
cmp
sub
mov
add
xchg
dec
leave
add
pop
xor
dec
add
add
pop
jb
mov
dec
cwtl
add
add
jns
cwtl
pop
fcmovnu
testb
aaa
stc
jno
clc
xchg
add
xchg
shll
mov
data16
movsb
add
rolb
push
add
mov
outsb
xchg
add
cmp
pop
mov
add
leave
mov
cltd
jmp
add
push
add
lahf
addb
add
int
add
outsl
je
fisttpll
xlat
test
scas
enter
das
je
js
cli
mov
and
test
push
imul
test
push
add
add
sbb
loope
xor
or
add
stc
add
fsubrs
sub
inc
add
or
add
xor
scas
inc
add
cmp
add
mov
in
and
mov
mov
aad
sbb
add
lret
xchg
add
add
or
sbb
jle
movsl
pop
lcall
mov
jb
adc
gs
add
adc
adc
sarl
mov
pop
push
mov
icebp
cmp
sahf
and
mov
testb
rolb
lock
mov
add
mov
lds
sbb
adc
add
add
rolb
inc
add
add
add
add
dec
pop
negl
sub
addb
add
ds
add
mov
dec
rcr
xor
inc
popa
pop
repnz
ret
es
add
insl
push
add
sbb
and
bound
mov
jne
sub
push
mov
add
push
popf
mov
and
daa
mov
inc
add
repnz
in
mov
cmp
jle
and
mov
add
jbe
adc
nop
add
push
add
add
ja
dec
insl
hlt
add
mov
cld
fiaddl
add
jo
add
mov
add
addb
xor
mov
cwtl
mov
add
add
movb
sbb
cltd
mov
mov
mov
add
pop
sub
add
add
fwait
lods
cli
mov
test
xchg
add
add
or
push
add
pop
or
add
out
jmp
scas
js
fnop
add
mov
popa
jge
ficoms
add
pop
adc
xor
jl
sub
add
add
imul
ja
mov
add
mov
jecxz
jge
pop
lea
add
imul
pop
cli
nop
add
sub
adc
add
mov
lods
rolb
subl
dec
mov
jle
pop
jb
push
and
cwtl
mov
push
cmp
and
or
sub
adc
sbb
imul
inc
push
add
negl
add
stos
ret
out
fsts
add
pop
out
pop
jno
pop
aas
stos
les
mov
jg
xchg
int3
popf
loopne
fsts
lods
mov
xchg
add
mov
pop
js
pop
jmp
sahf
xchg
add
mov
xchg
pop
cmpsl
rolb
push
lea
cmp
stos
jge
adc
mov
mov
add
adc
xor
mov
repnz
add
mov
mov
mull
mov
sub
into
and
mov
clc
lcall
push
add
mov
test
int3
mov
gs
xor
xlat
insb
pop
test
add
mov
or
add
add
lcall
add
push
add
arpl
add
add
testl
xchg
add
push
add
out
pop
add
inc
divl
add
arpl
push
add
mov
dec
xchg
in
pop
loopne
cwtl
daa
pusha
add
sbb
mov
out
mov
jnp
movsl
out
and
sbb
add
sarl
xchg
add
add
movsb
add
imul
add
mov
xchg
push
jbe
movsb
add
or
cmp
loopne
stos
pop
das
gs
loop
leave
addl
mov
cld
imul
repnz
add
xchg
dec
stos
jo
cmpsb
add
mov
aad
add
loope
add
xchg
je
aas
lods
add
cli
int
xlat
repnz
rolb
scas
jg
mov
in
repz
mov
add
cmp
je
pop
jno
push
mov
add
into
js
addb
add
add
test
fcomp
bound
mov
push
add
add
adc
cmc
pop
xchg
add
movb
adc
add
or
add
leave
ret
pop
xor
mov
jge
fcoms
daa
outsb
sbb
mov
add
in
int
jno
or
jmp
mov
cmpsl
xor
jmp
adc
mov
jo
jecxz
add
jo
dec
es
mov
mov
add
stos
jle
and
lock
dec
lock
jmp
insl
rolb
add
adc
rolb
rolb
addr16
xor
xchg
fisttps
adc
xor
jmp
jecxz
mov
ret
dec
cltd
add
stc
sbb
mov
movb
add
stos
add
ficomps
add
add
add
add
jge
sub
adc
and
out
test
jno
dec
jecxz
inc
add
test
sbb
sbb
add
mov
push
in
pop
and
add
mov
add
add
mov
fnstcw
sahf
dec
mov
cmpsl
out
out
out
mov
or
add
add
aad
into
mov
jb
inc
insl
xor
add
ds
mov
jo
lock
mov
in
pop
rcr
pop
sbb
sbb
rolb
testl
xchg
inc
add
cwtl
popf
sti
bound
mov
cmc
and
out
pop
mov
or
mov
add
nop
pop
negl
add
add
add
cmpsb
add
clc
and
mov
mov
pop
push
cld
jecxz
or
les
rorl
fstpl
pop
mov
stos
xlat
addr16
add
nop
add
dec
decb
add
add
and
add
lods
aad
add
xor
movb
add
lock
mov
fcmovb
pop
mov
dec
xlat
and
cmp
test
jbe
mov
mov
sub
repz
pop
jae
mov
sub
add
add
stc
adc
je
aas
testb
mov
xor
insl
mov
jecxz
addb
add
add
fiaddl
test
mov
add
jg
popa
pop
pop
dec
pop
add
pushf
testb
out
push
add
into
jne
xchg
add
into
daa
inc
add
sub
repnz
addb
add
enter
mov
push
add
add
mov
xor
mov
call
add
sub
fstl
lods
jl
rolb
fisubrs
add
mov
add
inc
scas
fnstsw
add
add
movsb
add
add
add
ret
add
out
daa
sub
cmp
fisttps
cmc
lods
or
cmpsl
jecxz
add
pop
lods
inc
add
adc
mov
addb
popa
hlt
add
filds
in
cli
in
imul
add
mov
bound
mov
ret
addr16
add
add
jmp
movsl
inc
je
sbbl
add
pop
cwtl
sbb
lahf
fnsave
add
xor
add
xchg
add
repnz
push
add
xchg
add
rcl
inc
aaa
xchg
fwait
add
mov
das
sar
movsl
add
mov
mov
test
add
add
divl
sub
insl
setle
pop
dec
dec
rolb
mov
clc
cltd
loope
push
add
test
mov
and
mov
adc
bound
mov
int3
ret
jb
jp
cmpsb
add
add
mov
xchg
add
sub
xchg
popf
test
sahf
jae
lahf
and
mov
dec
rolb
lods
dec
xor
add
inc
add
and
adc
movsl
sbb
mov
xlat
js
ljmp
cmc
jmp
mov
movsl
cli
add
fsubs
add
fcoms
lock
pop
outsl
lahf
nop
add
mov
imul
lock
add
pop
aaa
mov
cltd
test
fsubrs
push
xor
sbb
loope
add
jno
add
leave
xchg
add
add
add
or
add
mov
add
sub
stos
cwtl
aas
adc
sub
jb
icebp
xlat
ja
add
pop
rolb
rcrl
aas
jnp
add
and
mov
es
add
add
add
sti
stos
fistl
iret
sub
add
mov
cld
je
add
mov
dec
lret
push
xor
add
add
add
jge
push
into
stos
adc
dec
xor
loopne
sub
inc
push
and
and
dec
adc
mov
add
mov
lea
in
mov
cwtl
lcall
jne
sub
pop
cmp
xchg
std
addr16
inc
sbb
inc
jecxz
add
movsb
add
push
ljmp
push
add
les
mov
add
mov
rolb
arpl
xchg
add
add
test
fsubrl
aad
fiadds
jmp
ja
lods
cmovg
mov
inc
xchg
add
dec
fiaddl
ss
add
jge
add
add
add
add
repz
idivl
and
mov
ret
rolb
jno
add
ret
test
clc
nop
add
mov
lock
int
nop
add
movsl
xchg
add
jecxz
xchg
push
add
add
and
xchg
add
or
add
add
adc
cli
repnz
insb
push
xchg
dec
inc
add
add
jne
add
testb
mov
push
inc
and
add
aaa
mov
pop
add
pop
cmp
repnz
cli
mov
add
outsb
adc
add
out
shll
xor
mov
mov
jno
movups
adc
sub
xchg
movsl
mov
lock
push
add
push
hlt
add
mov
test
add
fcomps
inc
add
add
mov
jns
dec
nop
add
push
insb
cli
daa
pop
negl
jne
add
insb
adc
push
add
fisttpl
rolb
add
mov
sub
call
cmp
xor
loop
lahf
inc
rolb
bound
mov
sbb
fdivl
call
cmc
dec
cli
daa
je
xchg
fcomps
in
lods
stos
mov
add
push
adc
sub
lahf
aas
jne
loopne
xor
adc
adc
stc
mov
jne
ret
push
add
add
pop
mov
add
gs
jl
je
add
or
mov
daa
testb
fcomip
je
in
pop
jle,pt
psubw
add
popf
fidivrl
sub
add
mov
mov
add
xchg
in
outsb
aam
movl
ret
sahf
mov
add
dec
jp
add
repnz
mov
jecxz
cmp
xlat
cmpsb
add
add
ja
inc
pop
std
stos
adc
mov
and
mov
add
fwait
and
push
shrl
or
pop
fsubrp
push
and
mov
sbb
data16
or
add
adc
mov
popa
mov
mov
add
aam
adc
push
add
add
int
cmp
add
testl
inc
je
adc
add
add
add
hlt
add
pop
rcll
lcall
add
nop
add
xchg
pop
mov
push
add
mov
mov
dec
dec
scas
pop
ja
mov
sub
adc
test
lods
les
push
lods
stc
cmp
stc
add
addr16
xor
nop
add
mov
dec
ja
add
int3
cs
sbb
jno
sub
xor
in
iret
movsl
cwtl
mov
aad
push
push
add
adc
mov
jnp
jge
mov
dec
xchg
pop
les
lds
cmc
sub
aas
mov
xor
push
mov
add
stos
jl
pop
dec
lcall
xor
rolb
sbb
jo
rolb
add
lods
push
add
lods
loop
inc
sbb
lods
cmp
xchg
add
add
add
mov
xchg
mov
testb
add
dec
push
sbb
add
add
fwait
jmp
add
add
cmc
add
mov
pop
pop
sahf
data16
mov
dec
int
ret
add
dec
pop
sbb
xchg
add
in
add
arpl
push
daa
hlt
add
aam
add
mov
push
add
pop
notl
cmp
mov
mov
std
add
mov
pop
sub
ja
inc
add
repnz
out
push
add
add
das
push
add
arpl
add
mov
testb
cltd
mov
shll
add
and
mov
fsub
add
push
jmp
mov
sbb
add
add
add
lods
cli
aaa
in
lahf
repz
add
adc
test
rolb
adc
push
add
add
ret
add
mov
cmp
mov
fsts
int3
push
add
add
mov
add
pop
mov
add
jmp
add
inc
add
add
pop
das
data16
cltd
pop
testb
inc
add
xchg
lock
add
out
cmc
xchg
sub
cmpsb
add
add
sbb
xchg
cmpsl
jg
lcall
pop
sbb
rolb
test
mov
add
xor
test
mov
pop
xor
sbb
mov
or
add
popa
mov
call
push
add
xor
mov
cmpsb
add
xor
jmp
aaa
jle
add
loopne
dec
testb
cmp
add
in
xchg
add
mov
cmp
jg
cmpsl
loope
add
jbe
push
add
mov
mov
lcall
push
add
sti
mov
sub
lods
jge
mov
add
fisttpll
adc
cld
data16
data16
add
cli
sahf
popa
ret
lods
popf
orps
pushf
ret
aaa
cmpsb
add
dec
dec
imul
out
cltd
adc
ds
add
cmp
jns
daa
dec
andnps
sbb
add
add
add
add
or
lret
add
add
insb
cmp
add
incb
call
add
in
jmp
add
add
aas
add
mov
mov
popf
mov
rolb
add
scas
jl
testb
mov
push
add
inc
add
xlat
inc
pusha
add
sti
sbb
jns
add
sub
popa
cmp
sub
add
mov
xor
inc
add
popa
xchg
add
mov
add
and
jnp
add
sbb
add
lea
dec
fwait
pop
sub
add
add
mov
adc
jnp
push
loope
fldl
cmpsb
add
sub
test
add
dec
repnz
addr16
mull
pop
addb
incb
push
mov
xchg
inc
add
js
shll
mov
sbb
xor
add
push
push
pop
xor
push
lcall
add
and
neg
jmp
pop
inc
add
into
out
ret
add
in
in
rcrl
lahf
ret
insb
scas
mov
dec
rorl
data16
xchg
scas
sub
out
inc
sarl
push
add
inc
add
out
add
inc
add
dec
sub
stos
orl
pop
push
xor
add
aas
fldenv
ret
ljmp
add
add
add
rolb
push
push
sub
int
repnz
add
add
add
insb
iret
into
cld
push
add
mov
xchg
add
mov
lret
pop
std
data16
inc
lock
es
add
cmp
add
add
lods
cmc
cmp
inc
adc
jns
push
pop
ret
or
and
leave
xor
cwtl
ss
cmp
add
rolb
outsl
movsb
add
sub
pop
std
out
jle
push
pop
sub
push
add
add
mov
push
add
add
add
push
add
add
or
add
les
jp
and
mov
sub
xchg
add
mov
push
add
xor
fbstp
sti
loopne
arpl
fdivs
add
out
pop
add
inc
add
mov
add
add
add
mov
fadds
lock
fcom
add
aad
scas
push
add
add
mov
push
push
popf
mov
mov
sub
and
xchg
loope
jns
dec
pop
jbe
in
sti
jmp
inc
or
bound
mov
inc
pop
jnp
and
mov
or
movb
cmp
mov
mov
add
and
mov
add
add
or
add
cmp
in
add
in
xchg
add
add
movsl
les
mov
data16
add
jmp
mov
jg
add
fidivs
cmpsb
add
mov
cmp
add
add
std
ret
xor
data16
jb
shll
cmp
and
das
aaa
lods
dec
jg
add
add
sbb
movsb
add
add
stc
push
add
add
add
stos
pop
add
add
imul
outsl
ja
repz
repz
aam
insl
push
test
in
or
out
call
sbb
pop
push
add
cmpsb
add
add
adc
xlat
mov
dec
mov
mov
add
cmp
add
xor
testb
arpl
mov
insl
adc
mov
dec
add
add
ret
xorl
lret
pop
les
cmpsl
sbb
nop
add
inc
add
mov
add
addb
add
push
pop
inc
arpl
test
and
jno
add
add
in
add
sahf
sidtl
push
mov
sub
mov
dec
icebp
out
aad
clc
xchg
rolb
or
stos
pop
dec
mov
daa
sub
xchg
adc
pop
mov
jbe
cmp
push
or
adc
mov
or
pop
popa
xor
add
jnp
jg
imul
xchg
add
sahf
xchg
add
cli
or
gs
cwtl
aam
movsl
fistpll
xchg
add
loop
fistpll
inc
das
sti
mov
jg
add
sbb
add
lret
add
push
add
insl
out
dec
and
mov
dec
data16
clc
mov
leave
jl
adc
add
test
add
jle
mov
add
dec
add
mov
mov
loop
aad
daa
les
xchg
mov
add
loopne
mov
push
cmp
dec
insb
inc
add
sub
filds
add
mov
add
jne
or
insl
loopne
insl
pop
push
add
pop
xchg
sbb
dec
jge
add
cmp
add
outsb
jnp
xchg
adc
and
fsubp
add
pop
outsl
inc
add
add
push
add
popf
stc
add
jecxz
mov
sbb
add
pop
rolb
je
jg
sub
test
iret
jbe
xchg
loopne
dec
icebp
les
outsb
xor
jns
add
xor
add
mov
ret
stc
in
enter
add
xchg
ja
jno
dec
daa
scas
fisubrl
push
add
add
mov
int3
mov
movb
loopne
bound
mov
jl
or
sbb
xchg
std
test
xor
cmp
fsubrs
mov
add
push
add
pop
cmpsl
or
cmpsl
add
mov
aam
mov
cmp
sbb
outsb
add
into
es
xor
fdivs
rolb
pushf
jg
add
jno
jmp
je
add
add
loopne
sub
in
pop
repnz
sbb
in
jb
xchg
pushf
jg
add
sub
add
outsl
divl
ljmp
cmc
or
add
xchg
add
add
ds
push
add
aaa
jg
xor
push
add
add
jb
sahf
rolb
sbb
adc
jge
dec
subl
insb
jo
les
or
add
daa
and
jo
or
dec
mov
mov
xor
sbb
vpcmov
scas
inc
inc
add
movsb
add
jnp
aam
mov
add
mov
fcompl
ret
pop
add
mov
mov
jl
add
add
mov
shr
xchg
in
xchg
add
enter
add
add
add
mov
add
add
dec
ljmp
add
out
scas
xchg
add
aad
mov
jbe
iret
outsb
int
sub
iret
jns
mov
and
addb
ficoms
ret
xchg
add
leave
scas
mov
repnz
jmp
mov
pop
push
addl
add
adcl
sub
add
shll
outsb
and
mov
test
sub
lods
addl
and
push
add
add
leave
insb
or
les
insb
push
add
pop
cmpsl
scas
rolb
cmpl
dec
sbb
leave
fwait
or
mov
lea
loopne
push
out
and
cmp
lods
mov
add
sub
stos
andl
add
add
add
mov
adc
or
add
cmp
jp
pop
cmp
inc
or
add
add
mov
je
shrl
addb
or
loopne
mov
add
inc
testb
in
jno
or
fnsave
popa
hlt
add
add
add
add
inc
std
or
add
test
stos
jge
adc
add
popa
or
add
and
mov
mov
cmpsb
add
sbb
add
scas
push
test
js
add
into
or
ja
pushl
inc
test
mov
cmp
mov
clc
xchg
adc
add
mov
xor
mov
rolb
sub
add
notl
and
in
sbb
xchg
add
add
mov
add
add
add
push
add
add
imul
jno
lds
add
arpl
add
add
rolb
sub
pushf
sub
sub
cwtl
outsb
xchg
add
inc
popf
mov
leave
xchg
sbb
pop
add
mov
sbb
jg
int3
or
mov
or
cmp
pop
xchg
add
add
inc
aad
xchg
mov
add
jmp
adc
cld
pop
cs
js
push
add
mov
and
add
inc
or
add
mov
push
mov
repnz
jmp
add
in
cmp
jns
pop
test
sahf
outsl
mov
out
inc
add
add
push
add
test
and
add
add
add
test
and
mov
cmp
push
add
rol
pop
movsb
add
lea
xchg
mov
std
or
mov
add
ja
imul
dec
cmp
sub
dec
dec
gs
sbb
and
mov
shll
and
add
push
mov
add
mov
add
add
orl
loop
add
mov
inc
leave
mov
xchg
add
in
faddl
add
mov
dec
mov
aam
cwtl
int3
testb
hlt
add
movb
add
popa
sbb
inc
jg
popa
orl
dec
stc
inc
shll
mov
pop
pop
cmp
xchg
add
movsb
add
popa
cmpsb
add
add
mov
fdivl
enter
add
lods
pop
lret
and
mov
push
add
add
sub
mov
jne
add
jnp
add
pusha
add
mov
loopne
adc
cli
jae
loop
daa
jne
cmp
insl
cmp
push
inc
add
movl
fmuls
add
test
push
adc
das
sbb
push
mov
nop
add
mov
mov
repz
xchg
jno
add
pop
mov
mov
movsl
shll
add
sub
push
pop
cmp
pop
sub
popa
xor
add
mov
sub
add
mov
orl
mov
fcoms
imul
pusha
add
add
add
lea
push
iret
pop
inc
add
add
mov
xchg
loop
jp
jno
repz
and
add
cmp
lds
scas
mov
add
add
jge
sbb
loopne
xor
xchg
lret
inc
add
cs
insb
sub
addr16
je
jb
mov
mov
add
mov
inc
or
add
movsl
jnp
add
stos
pusha
add
dec
sbb
inc
ljmp
mov
xor
test
add
hlt
add
insb
outsb
ss
fsts
mov
inc
add
add
and
mov
add
xchg
or
mov
push
fnstsw
addb
testb
add
repnz
dec
scas
jo
lcall
js
out
add
lea
add
inc
push
add
add
add
dec
lcall
lcall
sbbl
mov
add
rolb
incb
mov
mov
orl
add
imul
add
jb
out
dec
push
add
add
loop
jmp
add
dec
out
stos
aad
scas
sbb
xchg
inc
add
add
or
xlat
jecxz
add
imul
into
inc
add
mov
iret
push
aas
ret
shll
or
in
dec
adc
adc
xchg
pop
lcall
sbb
sub
cs
lock
mov
paddw
push
add
add
add
lret
insb
adc
push
jecxz
cmp
add
xor
in
fwait
dec
sbb
add
out
sub
out
rolb
aam
js
fimull
mov
into
lods
pop
sbb
add
mov
mov
xor
mov
add
add
add
add
mov
push
cmp
add
add
jno
add
add
daa
and
mov
add
fnsave
lahf
add
push
add
out
call
ljmp
jp
add
sub
add
fbstp
out
pop
push
add
rolb
add
mov
lcall
add
add
push
pop
out
test
cmp
ds
imul
jns
mov
add
add
add
mov
add
out
xchg
lock
nop
add
addb
add
ffree
repnz
sbb
sub
add
mov
rdmsr
add
add
loop
add
xchg
and
cmp
and
jp
add
into
jnp
jae
add
arpl
xorl
clc
lock
inc
add
sub
out
and
mov
dec
in
and
xchg
movsl
js
addb
add
testb
or
popa
add
or
in
clc
popa
test
lahf
cmp
add
jecxz
pop
fsubp
insl
js
lcall
sbbl
xchg
add
add
rolb
ret
les
fnsave
add
aad
data16
and
add
inc
lods
gs
mov
add
mov
inc
add
cwtl
and
mov
scas
test
jp
xor
ljmp
adc
cmp
sbb
add
pop
cmp
in
xchg
add
aas
cltd
pop
push
add
popf
or
add
int
enter
sbb
add
mov
mov
sbb
add
cs
add
add
test
adc
push
movhps
add
add
xchg
mull
outsb
cmpsb
add
jl
add
add
sbbl
rolb
pop
push
xchg
and
outsb
xchg
jo
cwtl
sub
cwtl
jb
rolb
inc
add
lods
lahf
add
add
add
pusha
add
add
lods
lds
add
add
test
push
shll
mov
cltd
pop
enter
mov
leave
out
add
inc
mov
and
mov
cmp
pop
pop
mov
mov
add
add
mov
into
xor
mov
mov
dec
cmp
mov
jl
sbb
add
xchg
add
mov
add
mov
dec
cs
add
add
leave
mov
add
les
xor
add
mov
or
mov
xchg
add
inc
inc
add
and
add
mov
xchg
call
xchg
push
insb
clc
add
add
mov
add
stc
rolb
leave
add
inc
add
push
add
jnp
pusha
add
add
daa
jae
cmp
add
push
add
rolb
add
popa
pop
xchg
fcmovne
xor
imul
dec
lea
mov
add
add
add
add
test
rolb
leave
cmp
add
pop
stos
dec
hlt
add
add
sbb
mov
addb
add
sti
imul
add
cmp
add
mov
sub
jl
mov
insl
dec
dec
mov
scas
dec
pop
in
mov
aam
push
add
add
sub
pop
add
cltd
scas
pop
jmp
popf
and
popa
in
mov
pop
fcomi
add
add
stos
push
mov
push
arpl
mov
insl
lahf
xor
rolb
aad
add
mov
jp
divl
add
stos
mov
add
faddl
mov
movsl
testb
xor
mov
rcll
clc
outsl
testb
pop
jo
fwait
add
mov
ret
addb
add
sub
jmp
jl
pop
in
lock
addr16
xchg
jecxz
ljmp
mov
cmpsb
add
std
iret
lea
scas
adc
pop
pop
mov
add
mov
or
jmp
je
inc
add
mov
test
dec
addr16
add
add
pop
xor
lea
adc
movsl
fisubrl
mov
jbe
testb
test
int3
iret
cmpsl
inc
add
into
inc
add
add
push
fdivs
mov
cmp
and
mov
je
pop
mov
inc
dec
pop
mov
mov
jo
or
add
mov
rolb
addb
xchg
inc
and
xchg
add
add
add
cwtl
jle
jne
scas
add
lret
out
mov
pop
add
mov
mov
mov
xchg
add
add
mov
shll
sbb
stos
imul
lret
dec
xchg
add
add
add
jp
sbb
add
jmp
add
addb
sti
lahf
or
sahf
sub
add
dec
pop
jno
cmc
int
imul
add
mov
add
lahf
lds
lret
and
in
add
sub
dec
nop
add
pop
lock
shll
std
testb
pop
dec
loop
mov
or
adc
add
pop
outsb
icebp
inc
add
imul
hlt
add
xchg
or
sbb
insl
out
addb
sub
mov
xchg
jge
rolb
mov
in
xchg
mov
nop
add
add
xchg
push
add
out
aam
into
adc
cwtl
arpl
fs
and
mov
add
clc
push
add
add
add
rolb
inc
add
int3
push
add
ret
push
add
repnz
mov
fs
sbb
or
stos
dec
loopne
je
lods
sbb
adc
sahf
lds
add
in
xchg
add
lret
in
push
add
addb
lret
push
add
loopne
inc
lahf
bound
mov
or
inc
lods
into
fadd
add
jnp
iret
jnp
sub
fisubl
xchg
add
into
mov
sbb
dec
testb
add
mov
data16
aam
mov
insb
aas
mov
pusha
add
inc
add
mov
mov
faddl
pop
inc
push
push
add
add
push
lahf
jnp
and
mov
xor
or
arpl
sbb
cmp
add
add
add
in
jg
xchg
add
add
mov
add
dec
cmp
sbb
lret
or
lcall
push
popl
call
and
rolb
xchg
loope
mov
outsl
sarl
mov
outsb
mov
inc
push
add
fidivl
int3
push
push
rolb
addl
xor
fcoml
mov
add
in
mov
aad
test
mov
add
fidivrl
pop
push
add
add
add
mov
filds
loope
xor
pop
jmp
push
add
add
lret
insl
jns
testb
mov
pushf
push
add
inc
add
in
sub
jg
add
lock
shrl
sbb
sbb
sbb
jl
dec
sahf
test
out
outsb
dec
loope
add
add
sub
fisubs
clc
and
into
pop
in
daa
xor
add
add
add
mov
sub
pop
sub
dec
outsl
loope
jle
push
add
add
add
cmc
inc
add
lock
cmp
add
mov
inc
push
add
mov
test
add
das
in
lahf
push
icebp
mov
add
iret
sar
jb
fnstcw
mov
lock
jb
rolb
rolb
das
xor
fcmovbe
in
testb
imul
cli
insl
push
add
mov
add
mov
xlat
xchg
ficompl
sbb
insl
xchg
add
add
and
and
mov
and
sbb
daa
add
push
add
add
sti
pushf
test
pop
dec
cltd
mov
inc
pop
aam
sbb
ds
bound
mov
push
add
movsl
movb
mov
mov
jns
mov
adc
and
push
test
clc
xchg
add
test
fdivrs
rolb
xchg
add
adc
lea
pop
iret
int3
fisubrl
nop
add
add
add
sbb
andl
inc
adc
aad
lods
data16
add
cmp
adcl
jecxz
add
add
in
mov
fstpl
ficoml
add
cld
outsb
dec
dec
stc
push
mov
rolb
rcl
in
mov
daa
data16
movb
xor
xor
push
add
add
add
lret
mov
add
pop
ds
sahf
xchg
add
clc
and
add
jp
or
test
les
push
add
push
add
add
mov
ret
sub
inc
fdivr
pop
movsl
mov
mov
int3
sub
mov
push
add
fmull
dec
jne
push
in
jp
or
add
add
push
sbb
outsl
push
add
add
add
add
xor
sahf
push
mov
in
sbb
add
pop
incl
rolb
pop
popf
pusha
add
stos
push
add
add
add
cmpl
ja,pt
add
add
add
xor
cmpsb
add
add
outsb
fcomp
mov
out
sbb
add
inc
cld
add
std
mov
jle
pusha
add
aam
aaa
push
scas
add
adc
mov
fwait
gs
add
jb
push
flds
add
add
dec
ja
mov
or
inc
add
movsl
cmp
fsubrp
outsb
mov
add
sbb
pop
or
push
add
outsl
arpl
xchg
data16
pop
gs
add
add
pop
push
cli
rolb
add
rolb
add
mov
out
add
repz
or
add
add
addb
iret
pop
add
mov
pop
add
add
add
add
stc
push
sub
pushf
loope
adc
subl
repnz
xlat
adc
pop
push
add
ds
xor
stos
dec
addb
dec
mov
mov
daa
lret
xchg
add
add
jp
pushf
pop
cmp
or
add
rolb
dec
cmp
dec
cmp
icebp
rcrl
pushf
mov
add
add
jecxz
inc
add
rcll
cmc
cld
out
add
add
std
pop
int3
dec
sbb
sub
add
sar
rolb
xlat
lret
mov
dec
push
cld
lcall
add
inc
add
repnz
xchg
aas
mov
mov
push
mov
ret
aam
test
add
lcall
imul
adc
fwait
jecxz
jae
loopne
shll
add
mov
add
jae
les
jo
out
push
add
add
add
sbb
pop
xor
push
add
add
pop
jecxz
pusha
add
movsl
add
add
xchg
dec
fildl
add
cmpsb
add
sbb
mov
repz
add
data16
inc
add
xor
lods
mov
mov
cmpl
cmpsl
cmp
ret
fcoms
pop
sub
add
push
add
jle
out
movb
repz
out
je
mov
ds
add
sbb
add
mov
sub
add
in
sbb
add
popf
dec
outsb
xchg
imul
mov
add
or
and
ljmp
xchg
sub
out
mov
clc
dec
and
add
add
pop
pop
les
or
push
add
test
sub
in
dec
pop
jg
or
push
add
js
mov
cld
mov
xchg
ja
mov
add
add
mov
add
and
mov
xor
out
xor
lahf
in
add
test
pop
lret
rolb
insl
xor
cmc
loopne
mov
cld
or
movsl
inc
dec
jp
xor
push
push
add
addl
add
out
cld
mov
scas
movsb
add
pop
shll
adc
sub
jmp
icebp
inc
add
int3
std
fisttps
inc
lock
mov
aam
cmp
aam
stos
mov
adc
or
pop
xchg
cwtl
stc
sbb
ret
add
lahf
xchg
add
mov
mov
add
push
add
add
fcoms
rcl
add
movsl
and
cmpsl
pop
mov
mov
std
lret
add
mov
rorl
add
xor
xchg
sbb
pop
push
add
aas
and
push
add
andl
addb
add
add
add
jl
xchg
mov
and
add
pop
sbb
add
push
dec
pushf
inc
add
dec
dec
sub
add
mov
lcall
add
add
movsl
push
loope
rolb
into
jp,pt
add
add
or
jno
add
rolb
test
jl
fstpl
out
mov
iret
jae
inc
add
cmc
popl
ret
cltd
pop
hlt
add
mov
add
add
pop
inc
cltd
or
mov
add
add
or
add
arpl
mov
jmp
dec
cmp
cmpl
add
jae
add
add
cmp
pusha
add
add
loope
sbb
push
mov
cli
call
add
je
add
push
fsubl
xchg
jmp
in
lahf
add
cmp
mov
add
in
and
mov
add
in
lahf
scas
lret
pop
fwait
into
sbb
sub
add
add
mov
enter
data16
mov
mov
bound
mov
xor
push
add
xor
cmp
add
dec
loop
mov
ror
sub
add
xor
and
rolb
sti
jg
add
out
in
scas
js
mov
push
or
cmp
add
add
add
add
mov
imul
mov
sub
add
fucom
add
xor
in
loopne
mov
mov
fisttpl
add
pusha
add
rolb
aam
pushf
out
mov
add
loope
add
add
dec
xlat
mov
jmp
add
add
or
arpl
jge
mov
ljmp
fwait
std
inc
pop
ja
lret
cmp
test
push
add
mov
add
inc
mov
mov
sub
add
add
push
int3
xchg
popf
cld
mov
add
add
movl
mov
or
sbb
dec
adc
adc
mov
xlat
pcmpgtd
xor
mov
stos
fistl
add
push
stos
jae
add
cmpsl
out
mov
xchg
fdivrl
pop
imul
jge
add
mov
add
mov
jo
mov
add
movsl
jo
dec
sub
je
adc
outsl
pop
jae
imul
add
mov
scas
leave
push
hlt
add
add
xlat
or
add
scas
test
adc
insl
inc
add
mov
cli
test
dec
dec
cmp
cmp
outsl
sahf
test
pop
cmp
int
dec
sahf
lcall
leave
std
ret
xchg
add
test
insb
mov
lret
pop
mov
pop
cltd
clc
mov
leave
out
adc
jp
dec
fdivr
add
int
add
jnp
mov
mov
add
mov
sbb
mov
adc
add
ret
in
repnz
lods
push
add
daa
addb
mov
je
adc
rolb
add
add
mov
fldcw
sbb
push
add
cmp
add
out
sub
add
ficomps
or
rolb
iret
push
cmp
pop
lods
xor
pop
rolb
fdivs
int
or
push
xchg
jne
add
add
mov
dec
mov
aas
out
add
push
inc
add
add
ljmp
dec
xchg
popf
rcrl
scas
push
rorl
lcall
add
add
mov
add
out
outsl
inc
add
adc
je
ja
sbb
cmp
xor
xor
or
mov
dec
popf
pop
ja
push
xorl
push
add
add
add
jns
sahf
addb
add
add
popa
rolb
pop
sub
add
jmp
jne
fyl2xp1
jle
cmp
add
clc
cmpsl
lahf
dec
aaa
cmpsb
add
add
jecxz
aam
pop
inc
add
add
mov
mov
movsl
jnp
add
pop
add
cmc
sbb
sbb
stc
in
add
mov
gs
add
ss
add
cmp
decb
add
mov
pop
scas
sbb
enter
mov
in
addb
and
mov
in
jns
add
lcall
outsl
icebp
jle
inc
add
call
sbb
aam
test
add
out
add
cltd
inc
add
rolb
or
xchg
shll
mov
add
sub
jg
sar
nop
add
cmp
add
lcall
xlat
rolb
in
inc
out
add
add
mov
addb
into
rolb
add
fstps
nop
add
cmpsb
add
xchg
add
add
add
fists
sub
std
scas
adc
sub
add
and
jle
add
or
add
adc
lds
in
sbbl
int
adc
push
jno
iret
aad
add
mov
in
stos
negl
add
add
add
add
dec
cmpsl
stc
pop
and
mov
pop
pushf
adc
or
jmp
shl
add
test
in
sub
xchg
adc
imul
add
and
or
dec
nop
add
pushf
dec
sahf
pop
pop
sbb
in
arpl
loopne
jmp
aam
fisttps
xchg
add
in
js
xor
add
jnp
les
pop
sub
push
in
adc
mov
add
mov
mov
adc
pop
or
add
add
jo
rcll
lods
out
cmp
fwait
lods
jmp
rorl
sub
js
sbb
add
mov
ja
icebp
hlt
add
daa
inc
add
mov
add
mov
xchg
push
add
push
push
add
pmuludq
xor
aas
xor
dec
gs
add
adc
fnstenv
add
out
push
cmpsl
movsb
add
inc
or
or
add
bound
mov
arpl
add
add
add
jns
push
add
jmp
or
adc
xchg
icebp
enter
cmp
and
mov
mov
adc
cmpl
add
push
add
addr16
sbb
inc
mov
aam
out
mov
mov
cltd
or
cli
sti
adc
cmp
cli
outsl
cmp
jbe
xor
roll
cmp
imul
icebp
mov
sbb
mov
xchg
shrl
add
nop
add
mov
mov
pop
and
std
dec
push
add
pop
sbb
notl
rolb
iret
mov
add
mov
xlat
movsl
mov
add
add
out
dec
or
add
std
jp
insb
and
mov
int
add
sbb
cmpsl
inc
add
add
mov
insb
mov
pop
add
enter
xchg
lret
data16
loop
lcall
pop
jge
jp
loopne
mov
push
add
add
add
dec
and
mov
sarl
xchg
add
add
das
add
add
insl
sbb
lret
dec
sbb
sub
dec
daa
sbb
std
push
sti
imul
int3
out
imul
cmc
addb
add
rolb
mov
xor
or
add
mov
add
mov
addb
jmp
or
add
xlat
mov
out
xchg
daa
xchg
lods
movsb
add
add
lret
add
mov
add
push
les
adc
jae
aas
fisubrs
loope
and
or
add
and
sbb
mov
sub
add
hlt
add
jae
add
fldenv
add
add
mov
sub
mov
pop
pusha
add
addb
pop
xchg
out
jb
adc
pusha
add
jnp
jmp
out
aas
xchg
push
pop
imul
popf
xchg
add
add
jp
add
repnz
xor
pop
dec
dec
fidivs
jg
cmp
xchg
fnstenv
add
jne
ljmp
jbe
mov
arpl
icebp
add
mov
dec
les
or
scas
cmpsl
rol
add
add
add
mov
daa
jns
cmp
add
mov
xor
xor
xchg
xchg
add
aad
add
mov
shr
in
flds
mov
mov
andl
adc
add
mov
push
add
add
add
lods
sbb
jge
cmp
push
mov
mov
and
add
cmp
pop
adc
add
mov
push
inc
add
add
scas
mov
add
iret
xchg
add
add
sub
dec
jne
add
int
push
add
mov
outsb
cmp
and
add
dec
neg
loop
sub
prefetch
or
sbb
add
movb
and
fmuls
pop
mov
sahf
icebp
jl
std
fldt
push
add
xor
fadd
add
pop
adcl
mov
dec
inc
add
or
pop
xchg
addr16
and
and
mov
addr16
cmp
ljmp
push
dec
outsb
cmp
pop
or
hlt
add
or
pop
lods
popf
inc
cmp
je
add
adc
sbb
pop
es
push
add
movb
push
add
aad
dec
jmp
mov
out
divl
sbb
push
add
add
sbb
mov
sahf
push
add
add
jge
dec
add
add
adc
mov
add
in
jns
pop
mov
mov
pop
orl
mov
loope
add
xor
add
mov
addb
mov
add
sti
ffreep
add
decb
add
mov
mov
add
add
xor
push
jl
add
repnz
add
pop
jb
push
add
mov
mov
add
mov
js
push
les
minps
add
addl
add
add
testb
add
add
xor
repnz
mov
jp
pop
inc
add
add
add
add
inc
mov
add
bound
mov
sub
testl
add
inc
rolb
faddl
stos
out
add
test
jns
loopne,pn
or
into
jmp
jns
add
outsb
sbb
dec
xchg
add
mov
cs
add
add
test
add
xor
xor
aas
test
aam
lcall
fildll
scas
mov
repnz
add
shll
dec
insb
xlat
test
dec
push
mov
movsb
add
fidivrs
add
add
data16
pushf
cmp
push
add
add
xchg
xor
int3
sti
push
add
mov
jle
xchg
add
xchg
add
mov
jl
add
daa
cmc
outsb
mov
into
jnp
add
and
mov
int
add
add
int
add
add
add
cld
cmp
cli
mov
cmc
add
mov
lahf
cmc
sub
add
mov
in
jle
jno
add
add
add
add
mov
add
add
mov
mov
sub
sbb
add
int
addr16
xor
mov
loopne
and
xorl
addl
stos
nop
add
jns
cltd
add
lods
cmp
add
jno
inc
pop
xor
add
dec
mov
add
pop
mov
jae
sub
ja
jo
sbb
les
out
add
add
jno
jle
or
inc
push
add
add
jae
pop
dec
inc
add
pop
xor
clc
mov
add
push
mov
add
add
mov
dec
add
repz
or
outsb
int3
dec
sti
mov
inc
jl
add
add
add
and
mov
add
add
mov
mov
test
stos
cmpsb
add
sub
add
add
xor
cmc
leave
inc
mov
xchg
add
add
xor
lods
pop
jmp
add
test
xchg
add
nop
add
lock
aas
add
in
inc
cmp
nop
add
add
sbb
cltd
mov
out
ss
add
adc
inc
stos
out
cmp
add
sbb
test
std
xlat
or
add
test
cmp
addb
test
cmpsl
mov
mov
lret
mov
add
fnstenv
add
add
xchg
add
mov
jo
lock
pop
in
in
lret
test
into
sbb
add
xchg
mov
or
pop
push
add
add
dec
pop
rolb
add
add
mov
ljmp
sub
add
mov
outsl
in
jno
repnz
stos
sbb
adc
in
add
mov
fsubl
mov
hlt
add
add
push
add
add
add
iret
sub
add
xlat
pop
stc
or
add
testb
pop
jg
leave
add
mov
lret
mov
test
orl
cld
adc
and
int3
out
jmp
and
adc
push
add
int
imul
add
jmp
cmp
jmp
add
mov
int
add
jmp
jge
dec
pop
imul
pop
arpl
cld
adc
mov
loopne
dec
inc
xchg
jne
pop
dec
adc
xchg
nop
add
push
outsl
insl
loopne
imull
pop
stc
aam
inc
add
sahf
lcall
cli
push
fsts
jmp
xor
add
sbb
mov
cld
mov
mov
clc
adc
outsb
add
mov
and
add
sbb
or
and
mov
mov
rcr
popa
adc
add
push
pop
adc
addb
jl
add
ss
sub
fldt
les
mov
popa
adc
add
add
mov
mov
mov
outsb
cmp
lret
add
mov
add
xchg
enter
sub
push
add
rolb
loope
mov
jmp
add
repz
add
mov
jl
add
and
jo
and
ljmp
add
add
add
imul
add
fwait
cmp
fcmovu
cs
and
mov
add
add
add
inc
ja
outsl
mov
inc
add
mov
in
mov
and
sub
add
stos
add
lea
fcomps
enter
insb
stc
add
add
lret
jno
divps
add
inc
add
mov
add
mov
stos
jbe
mov
movsb
add
fimuls
add
push
in
imul
add
in
cmp
add
mov
lret
add
add
adc
cmpsb
add
add
add
push
inc
xor
pop
push
sbbl
inc
add
add
add
add
mov
mov
std
lods
icebp
mov
jecxz
rolb
push
add
sbb
add
adc
and
fwait
dec
or
cmp
push
add
add
add
add
add
mov
jmp
inc
add
mov
pop
mov
in
int3
inc
outsl
js
nop
add
mov
add
jmp
cli
dec
aas
mov
add
push
int
dec
pop
mov
add
add
mov
add
shl
pop
mov
in
out
pop
dec
cmpsl
scas
and
mov
loopne
push
add
jns
mov
mov
test
push
arpl
les
cld
mov
push
iret
fnstenv
dec
int3
add
sub
add
ds
xor
add
sub
add
fidivs
cmp
mov
mov
ret
jae
movb
add
sub
mov
imul
xchg
mov
xchg
jle
inc
out
lock
in
adc
movsb
add
cmp
outsb
jae
test
mov
add
scas
sub
and
mov
add
jmp
cmpsb
add
cli
mov
mov
add
and
mov
rolb
xadd
insb
mov
mov
xchg
add
xchg
mov
push
add
stos
cmc
repnz
mov
iret
pushf
dec
test
or
imul
dec
add
add
jmp
add
call
cmp
push
add
add
insb
jg
xor
fstpt
addb
push
add
outsl
add
orl
sbb
adc
js
add
andl
clc
jb
mov
jbe
test
ja
or
js
fs
sub
add
cmc
mov
leave
aas
mov
loopne
testl
fstps
lods
mov
outsl
dec
pop
xchg
aaa
sub
pop
mov
test
dec
imul
inc
add
add
fnstcw
rolb
pop
aaa
inc
add
mov
push
adc
lock
mov
int
fucom
insl
int
mov
add
cmpsb
add
jg
jle
adc
add
bswap
cmp
add
pop
mov
xchg
add
or
test
jno
add
add
add
mov
lcall
and
mov
and
cmpsl
rorl
add
cltd
xchg
add
pushf
mov
hlt
add
mov
sub
pop
aaa
shl
dec
mov
dec
pop
mov
xchg
add
inc
add
jg
add
test
sub
cmp
add
cld
imul
out
stc
cs
pushf
inc
test
sub
add
add
mov
into
int3
or
push
insl
pop
std
xor
adc
cli
orl
loope
add
das
icebp
jns
add
add
shl
mov
repnz
jge
add
add
pop
jnp
add
mov
xchg
add
mov
je
pop
and
rorl
push
inc
add
std
sub
add
rcr
iret
les
outsl
call
cltd
addb
cmp
in
lcall
add
add
mov
push
add
dec
cmpsb
add
and
mov
add
mov
push
add
fwait
ret
leave
jecxz
add
aas
cmp
call
rolb
push
iret
mov
in
add
mov
addb
adc
dec
and
mov
jae
add
lods
nop
add
roll
lahf
int3
dec
push
mov
cwtl
xor
lret
jge
sahf
adc
fsubs
adc
gs
mov
cmp
push
xchg
add
lret
sbb
stc
xor
ficoms
lret
data16
mov
add
mov
add
xchg
add
dec
xchg
mov
sahf
jns
dec
or
mov
mov
jb
add
jno
add
mov
movsb
add
fdiv
aad
sbb
ljmp
mov
pop
mov
ss
sahf
pop
add
add
xor
sti
sub
pop
test
pop
inc
xor
add
cmpsb
add
add
hlt
add
lret
add
test
jnp
pop
sbb
cltd
mov
pushf
fwait
jno
mov
push
push
xor
into
repz
xlat
sub
pop
push
add
add
add
aas
adc
out
pop
out
add
int3
data16
pushl
push
add
aad
int3
adc
xchg
adc
mov
pushf
cmp
add
out
push
xor
add
or
rolb
notl
add
add
fdivr
jecxz
gs
mov
loop
adc
add
add
test
xchg
cs
add
add
add
iret
clc
mov
rolb
or
push
jmp
mov
push
and
mov
adc
imul
idivl
add
add
mov
add
mov
add
cwtl
and
mov
rolb
test
aas
fbld
jl
add
add
xor
add
dec
addb
or
push
add
mov
lret
mov
push
add
add
jo
push
dec
sti
arpl
dec
push
mov
fcmove
pop
add
mov
mov
xchg
add
outsb
cmpsl
mov
add
add
popf
jl
and
mov
xchg
add
iret
mov
jp
add
xchg
add
in
pop
stc
je
mov
push
ret
cwtl
push
add
out
sbb
jg
mov
add
cmp
mov
mov
pop
jb
and
lahf
lahf
sbb
lods
mov
inc
add
add
push
adcl
push
add
icebp
cmp
inc
add
push
add
out
add
mov
mov
pop
mov
and
out
inc
dec
sbb
mov
int3
stc
sbb
add
addl
xchg
pop
gs
add
add
fsubs
lods
add
pop
sbb
add
cmp
add
sbb
add
aaa
jecxz
pop
pusha
add
add
adc
sbb
out
mov
ljmp
pop
fistl
pop
aad
add
add
jle
sbb
pushf
sahf
adc
pop
ljmp
sub
adc
sub
or
pop
mov
add
add
ret
fwait
out
hlt
add
sti
and
cmp
add
xor
rolb
jae
add
dec
testb
out
and
mov
or
and
xor
popf
out
addb
sub
int
mov
int
cmp
rolb
aaa
lds
add
mov
add
mov
outsb
sub
outsl
not
add
sub
mov
cmpsb
add
push
add
popf
cmp
sub
xchg
add
xor
sahf
outsb
jne
add
add
lods
adc
add
call
stc
lea
add
add
insb
imul
jns
adc
mov
add
inc
add
add
add
jmp
int
addb
sbb
lcall
add
add
cmp
add
xlat
xor
and
add
popf
aaa
cmc
lds
lahf
add
add
mov
loope
call
pop
hlt
add
js
add
add
in
popa
mov
test
testb
testb
add
add
lcall
cmp
gs
mov
sub
push
data16
outsb
int
sub
mov
inc
inc
add
xchg
fmull
xlat
push
add
call
out
add
imul
mov
out
or
cmpsl
mov
addb
inc
lret
cmpsb
add
xchg
add
loope
jmp
ret
fdivrs
adc
dec
add
outsb
add
adc
pop
subl
mov
iret
das
sub
fwait
rolb
in
shll
push
fstps
add
add
add
xor
push
add
imul
xchg
pop
addb
add
add
test
movsb
add
inc
call
rcrl
inc
ljmp
rolb
inc
add
sti
xchg
insl
push
add
sub
fmuls
xchg
add
pop
add
mov
sub
fidivl
cli
dec
addb
adc
call
fstl
aad
xchg
stc
or
loope
gs
addr16
int
add
add
add
test
addb
ret
xchg
insl
cmp
call
mov
call
xor
stc
out
enter
test
pop
cli
aam
stos
fstl
inc
add
add
mov
add
dec
sahf
mov
add
pop
jp
jle
add
add
add
bound
mov
mov
rolb
add
mov
imul
repnz
mov
mov
add
mov
add
outsb
aas
popf
in
test
test
testb
add
in
call
add
xchg
test
mov
out
cmpsb
add
adc
test
insl
fidivl
out
ret
in
or
push
add
mov
xchg
sar
sbb
add
addr16
movsl
adc
leave
add
mov
int
rolb
push
addb
lret
add
and
mov
movl
in
ret
cmpsl
inc
lods
ja
jo
sbb
por
xchg
push
add
or
add
mov
scas
inc
add
add
push
add
add
xor
add
mov
and
mov
xor
add
or
add
sti
add
aaa
arpl
arpl
test
adc
fnsave
dec
aaa
dec
and
inc
pop
dec
popf
loop
pushf
repz
dec
add
std
aam
cmpsb
add
inc
scas
testb
ds
push
frstor
add
pop
adc
popa
dec
and
and
add
add
add
cld
fwait
aad
add
add
mov
add
add
xchg
das
loopne
sbb
decb
mov
xchg
aam
out
mov
pop
adc
dec
inc
aad
pop
movsb
add
pop
and
mov
aaa
jg
jne
nop
add
stos
aas
aas
mov
mov
add
and
movzwl
add
add
add
fdivr
cmpsl
jnp
add
jnp
or
add
mov
add
out
add
insb
and
bound
mov
add
jb
adc
mov
stos
inc
add
in
and
movsl
pop
imul
add
add
in
dec
orl
testb
push
pop
test
add
loop
pop
cmp
mov
fsubrl
aam
inc
add
cmp
add
inc
dec
lock
xor
outsl
mov
out
fptan
add
add
popl
or
xchg
shrl
mov
add
pop
adc
xchg
lods
jg
fmull
add
sti
mov
mov
sub
add
add
test
add
xor
add
mov
mov
movb
add
stc
adc
push
add
xchg
inc
add
testb
add
pop
mov
repz
insl
mov
into
cmpsl
fstl
jecxz
add
loopne
arpl
add
rolb
lock
rol
lret
pop
roll
add
out
lahf
jno
add
adc
pusha
add
in
add
push
leave
cmp
stc
sbb
lret
and
pop
outsl
addb
add
jmp
xchg
dec
mov
ja
add
js
insl
fdivrs
add
add
pusha
add
pop
fs
xchg
jbe
test
testb
stos
xor
sar
lods
dec
add
cmp
add
lahf
test
add
add
mov
mov
cld
sbb
mov
add
testb
add
dec
xchg
inc
add
data16
mov
push
in
testb
fcmovnbe
cmp
jne
add
addb
popf
mov
pop
subl
mov
mov
std
add
mov
movl
in
call
aad
add
stc
mov
add
cli
add
addb
js
and
mov
and
mov
add
mov
adc
cmp
add
adc
add
add
sub
jne
pop
rolb
add
daa
lods
lcall
sbb
mov
add
mov
adc
cli
into
and
cli
popf
sub
das
icebp
push
xchg
add
add
add
add
stos
arpl
icebp
popa
leave
and
ficoms
add
ret
sahf
push
jmp
mov
or
dec
pop
pop
push
add
add
nop
add
pop
jno
mov
add
add
mov
into
add
pop
lcall
adc
je
test
and
les
outsb
pop
jg
push
mov
or
push
add
xchg
sub
adc
out
je
pop
stc
push
add
add
int3
mov
pop
mov
out
jb
xchg
add
cs
das
jmp
add
mov
add
xlat
gs
sub
fnsave
loope
sbb
add
add
pop
dec
ljmp
mov
add
add
add
jns
pushf
sub
add
xchg
add
aad
daa
outsb
xor
cli
push
add
xor
rolb
add
add
and
mov
pop
push
add
in
insl
and
mov
loopne
repnz
int3
bound
mov
daa
sub
push
inc
add
cmp
lock
sahf
ds
dec
orl
xor
pop
dec
test
add
fdivs
test
leave
into
arpl
pop
clc
data16
push
add
into
add
popf
fsubl
add
repz
sub
frstor
mov
add
add
cmp
add
gs
cli
mov
mov
out
add
adc
jne
add
jb
mov
jno
sahf
jg
add
mov
and
fiaddl
add
js
insb
dec
inc
add
pop
fsubl
mov
xchg
imul
rolb
data16
mov
dec
mov
cmp
clc
sbb
push
add
sahf
mov
cs
add
add
and
scas
xor
decb
movsb
add
add
mov
add
mov
pop
mull
add
add
add
jne
dec
xchg
add
aas
xchg
add
add
pop
jbe
lcall
sub
add
jae
mov
in
bound
mov
jbe
mov
dec
outsb
jg
add
mov
pushf
push
or
andl
xchg
add
stos
cmp
dec
push
add
aas
loop
add
jle
cmp
sub
and
cmp
out
int3
jg
mov
inc
add
inc
add
add
add
nop
add
add
mov
pusha
add
pop
jmp
aaa
mov
aad
mov
add
add
popf
pop
insl
push
sbb
test
add
movb
sbb
sub
daa
and
testb
adc
fbld
mov
mov
out
adcl
test
add
fwait
aam
fcmovnbe
lds
add
int
out
inc
add
push
add
in
icebp
jg
jmp
add
mov
movsl
cmpsl
lahf
mov
in
das
stos
dec
lock
jg
mov
call
les
mov
mov
push
add
mov
shll
add
aam
test
mov
cmp
loope
aam
push
ret
mov
pop
xchg
pop
jl
mov
sub
pop
hlt
add
add
xchg
pop
push
inc
clc
mov
pop
or
popa
stos
jecxz
add
lahf
cwtl
fbstp
add
loopne
jnp
incl
cli
xor
pop
jns
addb
lcall
push
add
sbb
pusha
add
add
testb
inc
cmp
popf
mov
in
add
out
add
lock
ret
je
pop
xor
nop
add
loopne
insl
data16
imul
outsl
push
pop
sbb
sbb
add
pop
or
push
jnp
xor
add
xor
xor
pop
stos
add
mov
in
insl
into
inc
add
add
add
rolb
push
add
add
add
pop
mov
inc
add
das
dec
mov
add
jns
lret
add
mov
scas
mov
add
jno
decl
sbb
add
push
fdivs
inc
add
sbbl
insl
inc
mov
mov
imul
add
fcomip
add
add
addb
add
mov
mov
mov
lds
add
les
int
mov
dec
mov
or
add
pop
push
in
pop
xor
jp
or
mov
xor
lahf
daa
mov
stc
pushf
mov
mov
or
xor
setl
add
mov
adc
aas
pop
hlt
add
in
xlat
stc
mov
leave
movsl
test
xor
sahf
pop
leave
das
in
sbb
out
stos
xchg
fs
scas
xor
daa
popa
mov
fiadds
loope
add
loopne
inc
sarl
add
mov
orl
or
mov
icebp
xlat
loope
out
enter
xchg
add
mov
movb
mulps
add
mov
adc
leave
mov
mov
add
loope
popa
imul
add
cmp
mov
adc
add
add
push
add
std
mov
xchg
mull
pop
sbb
add
aam
sbb
push
mov
sbb
add
jno
sahf
sbb
add
mov
icebp
jmp
movb
jge
lods
add
repnz
add
sub
ljmp
rolb
add
inc
add
stc
sbb
jbe
mov
cmp
add
add
add
jbe
dec
movb
push
add
xor
sbb
xlat
movsl
fiadds
mov
out
add
add
cltd
sarl
xor
xchg
add
imul
daa
cmpxchg
push
sbb
fwait
sub
fcoml
hlt
add
add
ret
les
dec
pop
dec
push
add
mov
xor
jns
push
add
add
mov
addb
add
test
add
add
popa
sarl
cmpsl
push
add
add
mov
jnp
add
xor
mov
and
mov
addb
add
sahf
insl
out
adc
mov
xchg
add
loopne
mov
shll
add
in
xor
cmpsl
jmp
add
push
add
cld
mov
add
outsb
jae
add
dec
inc
pop
ljmp
int
das
dec
pop
pop
pop
mov
mov
stc
pushl
add
sbb
jmp
add
adc
loop
jnp
add
add
add
stc
in
stos
push
fnstenv
sbb
fwait
jl
lds
mov
or
aad
add
cwtl
and
add
cli
dec
xchg
in
cmp
call
scas
push
add
add
push
pop
and
add
aad
in
adc
add
and
mov
enter
sub
add
mov
clc
insb
cmp
add
push
sub
inc
rolb
lock
out
add
js
add
push
mov
hlt
add
pop
jmp
int3
inc
adc
mov
addb
cltd
js
add
mov
add
add
sbb
ljmp
add
mov
call
adc
mov
inc
add
add
mov
add
push
mov
sub
js
add
adc
inc
add
adcl
inc
mov
mov
test
sbb
out
subl
or
pop
faddl
sarl
add
sub
inc
inc
add
add
inc
lds
cmp
add
add
add
push
lock
add
ds
add
xor
das
push
mov
fmuls
movsb
add
add
add
ret
dec
sbb
cmpsb
add
add
dec
pop
mov
push
cmp
add
add
add
lock
add
fsubs
mov
jae
lahf
or
add
add
add
add
push
add
add
jge
cltd
movl
push
out
sbb
add
add
testb
fbstp
add
cmp
add
cli
mov
add
sbb
leave
test
arpl
in
test
dec
push
add
add
mov
movsl
inc
push
add
mov
mov
scas
aas
xor
or
or
mov
fwait
jo
adc
xchg
cli
or
add
and
add
push
add
mov
jo
mov
add
mov
add
decb
rolb
add
mov
sub
mov
or
mov
inc
add
imul
rcrl
aad
add
add
add
sbb
mov
lcall
add
add
and
cmp
dec
inc
add
adc
lock
dec
sub
add
inc
add
jecxz
add
jmp
add
mov
mov
add
lret
jl
mov
jl
add
xor
adc
andl
add
mov
add
mov
jmp
and
mov
add
add
add
add
sbb
adc
push
inc
scas
movb
jmp
add
test
icebp
adc
jbe
mov
shrl
or
fildll
iret
insl
clc
cmpl
add
rolb
testb
xchg
add
add
sbb
or
add
lret
xchg
inc
add
sbb
je
out
mov
aaa
xor
clc
inc
add
out
std
pusha
add
add
add
mov
add
and
shrl
movb
add
addb
mov
fimull
inc
add
xchg
add
imul
imul
shrl
cmp
movsl
pop
jns
imul
movsl
loope
add
arpl
mov
add
or
enter
add
aam
jl
lahf
xor
repnz
mov
dec
jae
pop
sub
ljmp
loopne
jle
jecxz
clc
add
add
push
clc
xor
mov
mov
outsb
pop
stc
jecxz
push
ret
dec
pop
ret
add
in
sub
mov
jge
and
mov
jns
enter
mov
mov
fiadds
mov
push
add
mov
add
mov
sbb
add
add
mov
pop
dec
pop
arpl
add
pop
xchg
add
fistpll
or
xchg
add
leave
jb
add
mov
lret
jge
imul
sub
xchg
jo
aam
xorl
push
add
cwtl
fistps
fcomps
in
in
cmpsb
add
pop
cmp
das
xor
dec
addb
push
cmp
and
mov
shll
add
push
add
inc
das
jb
jge
adc
bound
mov
addb
pop
or
add
lock
add
dec
push
ret
cli
mov
inc
add
xor
xor
cmc
and
add
mov
sarl
add
sbb
mov
fistps
push
mov
adc
arpl
and
mov
lret
xchg
call
jne
repz
int
push
and
mov
fdivrs
cmp
pusha
add
add
mov
dec
or
add
push
jne
imul
lahf
lahf
jge
xor
pushf
loop
cmp
add
add
add
add
sub
cmp
fwait
sub
add
or
out
add
add
add
add
or
outsb
jmp
or
sub
mov
mov
sub
and
mov
mov
sbb
addb
add
pop
lahf
call
sbb
mov
add
mov
add
addl
adc
add
add
mov
cmp
dec
stos
popf
mov
mov
out
xchg
mov
testb
test
outsb
jle
iret
jge
inc
add
xchg
add
inc
add
insb
out
jecxz
add
add
sub
add
push
and
jnp
add
or
cmp
add
cmpsl
sti
sub
add
sahf
or
add
shll
aas
xchg
add
xor
sbb
push
add
adc
jecxz
movsl
gs
testb
mov
xchg
push
add
jp
push
out
mov
lret
add
dec
mov
addr16
mov
pop
pop
xor
out
shll
add
sbb
and
jbe
fwait
je
sub
addl
xchg
orl
fucomip
rolb
jno
push
or
adc
adc
add
inc
xlat
sahf
mov
fdivrp
jl
add
cld
dec
pop
add
add
bound
mov
out
popf
addb
movb
int
outsl
sbb
sub
loope
call
add
add
popa
sti
testb
jge
jnp
add
add
mov
enter
xor
add
and
mov
pop
lea
enter
mov
pop
movsl
fidivs
dec
fisttpll
inc
add
add
cwtl
test
ret
fwait
add
add
jb
and
mov
add
dec
jb
repnz
add
cmp
add
paddusw
dec
mov
les
pop
push
inc
pusha
add
lds
inc
add
ret
mov
add
xchg
add
add
pop
mov
add
or
push
add
mov
out
outsb
sub
xor
cmp
cs
lods
push
repz
add
das
into
jle
sbbl
dec
scas
push
push
push
add
nop
add
movsl
cmp
aad
jp
lods
sahf
insb
in
clc
add
ret
add
xchg
sbb
push
dec
jecxz
sbb
sub
mov
hlt
add
mov
mov
cmp
inc
add
add
cmc
sahf
out
xchg
mov
push
jg
mov
sub
xchg
mov
dec
gs
cmp
loop
rolb
pop
xchg
sub
add
in
cli
or
add
daa
movsb
add
lret
int
jb
cmp
pop
xchg
enter
loopne
in
gs
add
sub
fstl
add
add
add
adcl
ret
xor
repnz
mov
cld
jnp
fcoms
mov
popf
sub
jae
add
xchg
mov
addb
andl
xchg
jle
rcr
adc
cmpsl
mov
mov
add
sbb
add
or
loopne
jbe
inc
add
add
or
add
mov
sub
int
push
out
pop
pusha
add
add
in
sbb
cmpl
insb
push
add
pop
stc
push
inc
add
inc
cmp
int3
mov
stos
ljmp
andl
add
mov
insl
cmp
push
lfs
cmp
hlt
add
imul
pusha
add
ja
rolb
jae
xchg
adc
sub
cmc
mov
jl
int3
sbb
hlt
add
add
or
roll
mov
loop
faddl
cmp
add
add
stos
push
lock
add
rolb
jmp
int3
ljmp
add
add
sbb
push
jo
xchg
ret
cwtl
ret
rolb
add
push
or
add
test
mov
add
add
dec
xchg
shr
xchg
add
hlt
add
push
add
sbb
add
add
pusha
add
js
add
mov
add
inc
add
loope
xchg
add
in
enter
dec
jl
lcall
mov
add
sbb
mov
lcall
lds
pop
push
fcmovnu
mov
add
incl
mov
add
pop
and
leave
push
add
addb
jle
cltd
data16
jo
aas
or
add
ljmp
add
out
cmc
jl
inc
in
fdivrp
bound
mov
push
mov
mov
dec
pop
lock
out
add
mov
out
aas
jae
push
ret
add
add
mov
cmpsl
fcomp
cmc
mov
pop
jecxz
jae
rolb
sbb
add
loope
cmp
jl
sarl
inc
add
aam
setl
sbb
sub
add
pop
xor
stos
data16
jmp
scas
and
pop
daa
icebp
not
add
es
mov
add
pop
dec
mov
jnp
add
xchg
inc
add
jg
add
xchg
add
xor
jo
or
add
sbb
cmp
and
adc
stos
test
jne
add
mov
lds
xchg
or
fldenv
add
out
das
ss
xor
inc
int3
mov
add
jge
lods
pop
fidivrl
sbb
xchg
mov
push
add
push
fmull
add
repz
addb
mov
sbb
jne
inc
mov
sahf
push
cltd
sbb
fs
add
mov
xchg
add
add
push
add
adc
lret
add
daa
mov
in
or
cmp
sub
scas
ret
or
add
and
mov
sub
cmpsb
add
lods
jmp
add
mov
repz
mov
xor
add
push
add
or
add
or
mov
add
add
add
icebp
add
add
rcll
jl
or
add
shrl
jecxz
and
push
push
add
dec
xchg
pushl
adc
lock
ja
fiaddl
sbb
jmp
mov
add
outsb
cmp
dec
inc
add
pop
add
in
hlt
add
add
jnp
pop
int3
sbb
or
mov
ss
add
leave
clc
arpl
cmp
dec
test
xchg
add
repz
cwtl
push
add
and
add
lahf
test
add
mov
xor
mov
pusha
add
daa
add
xor
cmpsl
imul
inc
add
cmp
dec
loopne
dec
xchg
fs
out
nop
add
insl
icebp
insl
adc
cld
pop
jbe
push
xor
xchg
fcomps
jg
jne
sub
push
add
add
or
push
mov
push
mov
mov
jg
jmp
add
add
cmp
add
xchg
mov
mov
jo
sub
xchg
xor
add
fwait
mov
mov
add
adc
add
add
inc
add
adc
inc
add
add
add
add
sbb
or
add
push
movsl
inc
add
mov
jnp
testb
dec
and
movsb
add
push
add
hlt
add
les
add
mov
xchg
push
add
in
add
cmc
adc
fistps
mov
xchg
add
jns
rolb
daa
fcmovb
add
jl
jne
ret
add
adc
mov
fsub
add
add
mov
pop
aaa
nop
add
sbb
add
add
add
mov
pop
rolb
sti
add
int
mov
add
mov
add
add
shll
inc
ljmp
or
add
jno
mov
sarl
add
mov
jl
in
adc
or
add
inc
add
adc
add
stc
adc
add
mov
mov
data16
roll
into
aas
es
or
les
das
lcall
nop
add
add
xchg
lock
and
mov
sbb
add
ret
add
add
repnz
shrl
fsubs
add
dec
ja
loope
add
ljmp
repz
sub
test
lock
mov
mov
test
fadd
lods
gs
out
mov
das
add
mov
sbb
lods
cmpsb
add
add
mov
nop
add
add
mov
add
add
lcall
rolb
aaa
or
fwait
sbb
add
add
add
or
add
das
icebp
test
cmp
mov
sbb
adc
movsb
add
add
jmp
add
adc
cmp
lock
or
mov
add
xor
add
add
mov
insb
xor
jecxz
push
add
add
mov
sbb
add
add
std
stos
daa
inc
mov
pop
cmp
sub
mov
fucom
add
cli
pop
in
fwait
adc
or
jg
out
and
movsb
add
add
xchg
add
loopne
adc
cmp
mov
cltd
aam
dec
cmp
sbb
add
add
add
xchg
add
mov
lods
fneni(8087
add
jp
addb
enter
pusha
add
rolb
push
mov
jge
repnz
xor
jne
push
leave
roll
cmpsl
mov
add
daa
out
xchg
add
add
pop
out
add
mov
xchg
dec
arpl
aaa
push
cmpsb
add
pusha
add
mov
sarl
add
push
add
fisttpll
adc
jo
insb
addb
mov
push
adc
mov
add
mov
addb
add
daa
add
loopne
cs
je
gs
add
sbb
mov
xor
add
jne
mov
mov
sub
inc
mov
dec
pop
pop
test
mov
cmpl
pop
push
add
sbb
testb
cmpsb
add
sub
fsubl
cli
or
inc
add
pop
fldcw
mov
call
xchg
jno
or
lods
xchg
mov
mov
push
fs
xor
jbe
jmp
jle
pop
mov
or
jnp
add
bound
mov
add
jg
add
les
sbb
and
mov
pop
jo
push
or
add
add
add
dec
fildl
xor
or
dec
and
add
add
imul
add
inc
add
lds
add
push
add
rolb
add
push
test
adc
jo
cltd
xrelease
jg
fsin
dec
pop
xlat
addb
add
push
add
push
in
jo
and
mov
ret
mov
add
jbe
xor
scas
imul
jge
xchg
fimuls
mov
ficomps
addr16
jle
add
inc
add
pop
js
aaa
out
pop
arpl
std
hlt
add
cmc
adc
sbb
or
dec
push
add
out
or
add
rolb
fprem
mov
mov
cltd
add
fcmovbe
jp
iret
and
int
xchg
add
cmp
rolb
shrl
ljmp
inc
add
int3
adc
andl
add
push
cs
push
mov
inc
add
add
add
add
mov
mov
inc
add
imul
add
je
addb
add
add
mov
add
mov
call
add
je
mov
push
stos
mov
mov
mov
add
add
add
int
lea
lret
pop
cltd
icebp
add
mov
sub
mov
sbb
sub
add
adc
push
add
add
add
sub
aaa
sbb
cmp
add
ficoml
add
xchg
add
in
jge
cmpsl
mov
add
fwait
add
mov
add
add
push
test
push
adc
mov
mov
xlat
push
add
jne
rorl
xor
mov
jns
mov
mov
adc
ds
dec
aaa
in
out
add
pop
xchg
repz
insl
fucomi
hlt
add
add
add
ss
add
dec
loope
add
lock
addr16
add
sub
xor
dec
stc
pushf
nop
add
into
pop
mov
sar
mov
push
es
push
add
add
icebp
imul
xor
add
mov
jbe
cld
jae
add
xchg
add
lods
test
inc
add
in
add
add
add
leave
push
push
les
loope
int3
lods
arpl
les
dec
movsl
stos
cld
pop
xchg
mov
cmc
pop
sbb
push
and
call
out
mov
add
push
jle
jle
enter
sbb
add
rcl
add
mov
or
int
gs
xor
add
xor
mov
cmp
jno
add
add
js
push
add
data16
add
add
pop
addb
add
lea
sahf
push
jb
lret
jle
addb
dec
lods
mov
mov
adc
xor
or
add
add
add
add
sub
inc
adc
cwtl
movb
add
add
mov
sbbl
mov
ret
xor
jb
adc
lret
cltd
inc
movsb
add
inc
add
stos
lods
outsb
mov
jmp
sbb
add
push
add
add
lods
push
add
inc
add
dec
cmp
cs
jno
add
sub
iret
lods
lods
outsl
mov
dec
dec
aaa
pushf
dec
mov
hlt
add
faddl
sbb
mov
add
add
mov
insl
xchg
add
jge
repz
popa
bound
mov
push
add
add
add
aam
jge
xchg
add
lods
inc
add
pop
call
mov
movsl
push
add
xor
test
add
dec
pop
inc
add
je
cmpsl
and
mov
jmp
mov
add
add
adc
mov
add
add
add
add
add
mov
add
pop
rolb
pop
cmpsl
cmpsb
add
dec
dec
repz
sbb
sub
cld
cs
add
pop
imul
rolb
in
add
add
add
fisubrl
cmpsl
outsl
add
dec
mov
je
and
add
pushf
test
dec
stos
mov
add
repnz
lcall
and
sub
clc
pop
rolb
add
add
in
pusha
add
mov
add
add
fidivl
addr16
pop
jae
faddl
jbe
inc
add
and
mov
or
cmpsb
add
mov
sbb
mov
add
push
add
adc
fisttps
fwait
insl
stc
cmp
xchg
cmp
add
or
test
pop
xchg
mov
jns
or
aad
add
xor
ret
mov
add
subl
imul
faddl
add
add
add
movsb
add
pop
jbe
xor
mov
mov
inc
add
rolb
in
ds
mov
cmpsl
adcl
call
in
in
inc
sub
in
inc
cld
sbb
add
jle
sbb
add
jb
jecxz
jle
add
mov
ja
pop
addr16
call
scas
pop
pop
dec
insb
mov
dec
out
stos
pop
cs
and
gs
insl
int3
push
pusha
add
scas
outsl
cmp
outsl
add
jno
les
xchg
out
repnz
push
orl
dec
add
add
inc
add
addb
sub
add
ret
jg
mov
imul
mov
mov
add
xchg
pop
pop
inc
push
add
add
pop
fwait
xor
sub
mov
int3
es
and
fidivl
add
add
insl
lcall
sub
add
movb
addb
int3
test
mov
data16
jo
cwtl
in
push
add
push
inc
add
add
add
pusha
add
dec
or
cli
popa
call
fwait
or
mov
cmp
add
push
fdivp
add
pop
mov
mov
inc
or
mov
mov
testb
add
add
mov
mov
add
outsb
jle
addb
cmpsb
add
push
data16
add
add
add
sbb
add
and
mov
fmulp
xor
jge
sub
jp
sbb
icebp
add
mov
icebp
mov
dec
scas
les
push
push
sti
stos
stos
leave
movswl
cmpsb
add
sarl
cmpsb
add
mov
rorl
lcall
mov
mov
ds
je
adc
mov
std
sub
pop
movsl
stos
jge
sbb
nop
add
int3
pop
stos
sbb
add
fiadds
add
mov
cwtl
pop
jge
mov
adc
shll
add
push
sbb
mov
and
mov
inc
jp
cmp
or
cmc
sub
xchg
add
lret
popa
cmp
push
push
add
inc
test
add
dec
add
mov
jmp
add
jmp
sahf
dec
cmc
das
or
pop
lods
scas
mov
sbbl
aaa
pop
fistl
add
out
in
adc
and
clc
xor
pop
xchg
pop
mov
add
add
fistps
lret
dec
jle
icebp
ljmp
add
xor
mov
push
add
push
arpl
add
add
add
jmp
mov
add
add
cld
bound
mov
mov
jmp
sbb
outsb
add
mov
jmp
negl
xchg
add
test
mov
cs
testb
inc
mov
leave
xor
in
sub
stos
inc
add
sbb
outsl
lret
cli
sub
fisttpll
and
mov
shrl
cmpsb
add
mov
mov
mov
dec
cmp
sbb
testb
mov
addb
addr16
enter
push
add
aas
adc
sub
add
add
add
in
out
lods
rolb
add
jno
mov
test
xchg
into
mov
bound
mov
xlat
daa
rolb
or
pop
lods
pop
mov
dec
jecxz
add
add
xlat
loope
add
push
ds
inc
add
dec
sbb
in
sub
push
inc
add
push
add
or
add
inc
add
popl
sub
add
stos
and
add
xchg
add
push
or
push
add
pop
aad
mov
adc
rcll
das
or
xchg
add
xchg
cwtl
add
test
add
mov
icebp
mov
mov
xchg
movb
add
call
icebp
stos
mov
add
xchg
lea
xor
addr16
mov
xor
lret
or
add
test
pusha
add
pushf
sti
daa
pushf
and
ret
aas
pop
fs
rorl
add
cmp
xlat
inc
add
add
add
mov
out
popa
xchg
add
mov
andl
clc
push
add
decl
push
add
add
add
jne
mov
aas
cs
les
mov
sarl
add
icebp
add
dec
jp
add
mov
inc
add
inc
add
iret
mov
lods
jno
add
ja
sub
pop
jle
outsb
inc
nop
add
inc
add
and
add
and
mov
add
test
mov
mov
or
push
add
add
mov
add
mov
dec
jp
cmp
push
fildll
add
ret
add
add
jno
adc
sub
jecxz
add
adc
mov
sti
mov
add
add
out
sbb
and
mov
into
jmp
add
add
and
mov
insb
cmc
enter
or
loop
add
cltd
adc
jo
addb
repz
adc
in
test
aam
data16
add
sbb
mov
or
add
mov
add
mov
mov
mov
sbb
xchg
sub
pop
js
es
pop
bound
mov
mov
add
add
add
adc
mov
imul
ret
push
and
mov
push
enter
add
movb
add
sub
loope
add
fisttpll
mov
enter
jb
jae
inc
movsl
jo
jbe
mov
aad
add
add
test
inc
addl
add
add
add
push
add
sbb
add
out
jecxz
fxch
imul
mov
lahf
arpl
add
sbb
enter
fidivrl
inc
sbb
add
ret
jb
dec
jle
pop
push
add
add
xchg
add
clc
movsb
add
pop
xchg
sbb
add
je
sahf
pop
nop
add
or
lods
arpl
add
stos
test
shll
xchg
push
and
add
xor
cli
or
add
add
mov
das
xor
adc
add
mov
aas
push
xor
sub
add
add
insl
fwait
jns
out
movsl
pop
dec
push
mov
sub
add
fisubrl
fbstp
sbb
stc
push
add
add
mov
addl
out
jg
xor
das
add
out
fstps
jno
daa
repz
pushl
add
jno
inc
add
add
out
outsb
fdivrl
sbb
mov
or
sbb
movb
and
inc
mov
inc
pop
push
rorl
or
add
mov
stos
xchg
sub
and
out
pop
or
mov
add
jmp
add
inc
add
out
add
add
les
leave
add
add
mov
push
dec
pop
adc
or
int
pop
xor
cmp
mov
add
push
add
roll
loopne
push
andl
int
or
xlat
mov
out
rol
sub
sub
add
mov
mov
scas
je
movsb
add
mov
add
iret
push
rolb
in
inc
inc
jo
mov
push
add
mov
and
mov
add
mov
xchg
add
call
sbb
pop
sti
shrl
cmp
add
add
add
mov
push
add
add
add
hlt
add
add
out
cmp
add
lock
push
pop
cli
enter
add
add
test
or
mov
adc
mov
in
sub
mov
mov
ja
add
mov
mov
mov
jg
cld
xor
adc
or
xchg
add
push
xchg
jno
into
xchg
lret
lods
add
mov
sahf
movb
xchg
add
inc
cs
adc
push
aas
push
add
sub
and
mov
add
ljmp
into
lods
scas
or
icebp
ds
add
jae
mov
ret
mov
das
adc
add
testl
jne
add
xchg
add
add
add
add
add
fcmove
add
in
mov
add
add
pop
add
out
add
push
xlat
jnp
add
mov
push
push
fstl
pop
leave
dec
mov
mov
add
add
adc
fdivl
add
push
sub
cmp
mov
scas
inc
add
out
cmp
popa
jmp
mov
add
stos
test
in
add
mov
cmc
repnz
add
jo
addb
add
push
add
repnz
add
outsl
mov
inc
addb
add
jge
add
add
and
adcl
addr16
add
lds
sbb
pusha
add
xlat
dec
sub
int3
dec
mov
and
mov
dec
std
jae
inc
mov
bound
mov
push
add
mov
mov
in
mov
dec
pop
repnz
xchg
add
add
jmp
dec
or
jp
scas
inc
add
add
lock
test
jno
push
sbb
js
add
repz
push
xor
or
int3
push
outsb
mov
roll
add
xchg
add
insb
sub
loop
lods
mov
sub
xchg
add
mov
sbb
mov
push
add
cltd
rcll
in
adc
add
add
add
insb
pop
add
rcrl
pop
in
stos
xchg
add
add
add
jle
add
cwtl
push
andl
ret
add
js
mov
shll
push
add
add
mov
stos
and
jecxz
dec
out
mov
add
clc
rolb
mov
stos
insl
jbe
pop
inc
lods
push
mov
lcall
dec
xchg
add
jno
icebp
and
pop
mov
cmp
mov
add
ljmp
cmp
imul
dec
ror
xchg
xor
test
bound
mov
add
dec
cmp
lret
pop
mov
lock
add
xchg
xor
add
daa
clc
addb
repz
clc
sub
rcrl
adc
add
pop
lcall
adc
jle
and
mov
dec
adcl
add
mov
mov
testb
dec
and
mov
lret
mov
add
icebp
or
in
call
mov
stos
cmp
sbb
adc
cmc
pop
pop
bound
mov
add
addb
add
sbb
add
mov
js
add
popf
inc
clc
leave
test
mov
mov
pop
mov
imul
ret
add
imul
jecxz
cltd
dec
in
add
pop
pop
pop
push
addb
xchg
push
add
dec
jmp
lret
add
xchg
addb
add
int
cmp
fldcw
dec
xor
pop
and
mov
cmpsl
mov
ficomps
xchg
add
movb
add
mov
and
mov
sub
adc
cmp
cmp
rolb
jmp
sub
sbb
cmpsb
add
dec
mov
mov
mov
addb
add
add
add
notl
add
out
xchg
add
add
mov
sub
lock
jge
ss
add
popf
push
rolb
pop
xlat
fs
js
dec
nop
add
test
sub
setp
add
icebp
pop
push
add
add
inc
add
add
int
add
and
push
cmp
sub
or
xchg
add
cvtps2pd
arpl
add
add
fmuls
jnp
sbb
les
test
sbb
pop
fwait
in
imul
jmp
test
add
ds
jnp
rolb
mov
scas
inc
or
mov
je
nop
add
push
add
imul
mov
add
pop
add
addb
cmp
add
in
jg
mov
mov
dec
xchg
add
fldl
repnz
and
mov
fdivl
movb
add
mov
bound
mov
pop
or
xlat
fistpl
add
pop
je
dec
addb
xchg
add
lret
repnz
add
pop
int3
and
mov
add
bound
mov
int3
push
add
add
ffreep
mov
xor
fisubl
xchg
ljmp
sub
in
js
xlat
dec
scas
pop
dec
mov
jo
dec
icebp
push
xchg
add
push
inc
mov
add
sub
sbb
add
lahf
insl
lods
cmp
add
dec
sub
cli
dec
jnp
aad
push
add
cmpsb
add
sahf
dec
inc
mov
movsb
add
add
add
jne
push
add
xchg
cmp
pop
mov
repnz
jbe
rolb
push
inc
add
pop
pusha
add
mov
ja
mov
out
insb
jo
cmp
add
add
mov
insl
mov
insl
and
insb
lahf
pop
mov
mov
mov
icebp
dec
cltd
sub
xchg
test
and
fdivrs
or
jne
ret
clc
addb
xor
sub
lods
std
inc
add
add
inc
xchg
mov
gs
iret
adc
add
mov
push
add
cld
push
mov
mov
ret
data16
shll
xor
sub
sbb
out
testb
out
cmp
cmp
add
jo
mov
add
jb
add
lods
sbb
sbb
dec
xlat
push
sub
add
mov
rolb
mov
add
pop
mov
mov
mov
add
mov
push
add
push
call
jno
cmp
inc
xchg
push
push
inc
xchg
in
orl
jb
ret
into
add
sbb
clc
jecxz
mov
add
sbb
int3
push
add
fld
add
fcmovb
inc
add
add
sbb
andl
lcall
stos
testb
add
add
mov
add
mov
fnstenv
and
jl
add
sbb
cmpsb
add
add
sub
add
mov
add
mov
cwtl
lahf
rolb
aad
or
pop
movb
in
cli
lock
xchg
add
add
push
add
rcll
in
mov
cmpsl
sub
decb
jge
repz
add
stos
cs
ret
xchg
add
pushf
stos
xchg
fadds
mov
jnp
in
mov
hlt
add
dec
pop
stos
addl
mov
lcall
add
add
inc
cmp
leave
mov
rcrl
jne
jle
push
add
add
out
add
mov
add
sbb
loope
add
jecxz
clc
pop
add
in
or
lahf
jns
pop
add
leave
xor
xchg
in
mov
add
inc
lret
add
mov
pop
ret
movsb
add
aad
and
bound
mov
xchg
add
insl
pop
loop
add
or
mov
add
loopne
add
lcall
and
mov
incb
add
add
mov
and
mov
out
out
pop
ljmp
mov
les
sti
xor
jnp
pop
ljmp
dec
mov
adc
stos
loopne
out
test
pop
fnstsw
xchg
add
imul
mov
mov
jle
push
in
mov
cmp
dec
addb
add
lods
xchg
cmp
mov
add
inc
add
add
add
popf
hlt
add
add
push
add
sti
addb
mov
sbb
fwait
ja
lods
or
push
add
xor
add
lahf
movsl
jne
fcmovnb
mov
jg
mov
push
add
pop
mov
add
push
je
pushf
rolb
xchg
rolb
xor
mov
push
xor
push
unpckhps
add
mov
add
xchg
data16
xchg
add
sbb
aas
mov
fdiv
addb
or
add
inc
add
pop
sub
mov
and
mov
mov
push
testl
add
xchg
add
and
call
nop
add
and
add
nop
add
inc
add
add
push
add
mov
adc
adc
add
dec
sbb
add
add
sbb
xchg
pop
sbb
loope
dec
vhsubps
icebp
lcall
popf
fsubrs
lahf
movsl
and
mov
and
stos
dec
sbb
int
add
pop
out
adc
add
pusha
add
mov
cmc
int3
pop
popf
jg
inc
xchg
or
add
out
xor
dec
in
jg
mov
add
mov
mov
add
pop
xchg
add
add
and
mov
add
push
add
add
in
notl
loope
add
add
aad
mov
cmp
add
mov
add
mov
xchg
adc
fidivl
sbb
add
insb
data16
jo
and
sub
pop
int3
je
xlat
adc
add
cmp
movsb
add
add
mov
mov
add
test
cwtl
add
or
xchg
fadd
cmp
mov
add
xchg
add
push
add
pop
mov
fwait
xlat
and
jne
fsubs
lds
pop
push
add
scas
enter
push
sbb
enter
insl
aaa
inc
add
add
sarl
add
cmp
sbb
add
add
add
imul
push
add
mov
sbb
nop
add
test
mov
xor
dec
in
push
add
les
sub
add
xchg
add
das
dec
aaa
arpl
jmp
cmpsb
add
sbb
jge
cmp
add
lock
xor
add
mov
iret
stos
call
jno
push
push
pause
add
addb
ret
add
mov
sbb
add
js
in
mov
mov
xchg
add
add
lods
adc
dec
push
mov
push
add
mov
loope
fcomp
xchg
add
push
mov
add
add
inc
sbb
into
push
pop
test
xlat
pop
sub
in
mov
int3
push
add
add
sbb
gs
mov
addr16
push
fsubr
cmp
dec
and
mov
arpl
add
xor
subl
add
dec
push
pop
sbb
fstpt
dec
jmp
loop
dec
mov
mov
sbb
add
adc
xor
std
mov
icebp
pop
pop
sub
add
and
ret
mov
enter
js
pop
xchg
add
fcomps
add
faddl
add
fadds
add
add
add
add
inc
add
add
cmpsb
add
rolb
stos
sahf
rolb
add
jle
add
negl
rolb
sub
mov
rolb
xchg
pop
push
add
sub
jne
sub
repnz
setl
push
cmpsb
add
lods
cmpsb
add
hlt
add
rolb
in
add
push
jl
add
rolb
in
test
add
and
cmc
inc
add
in
popa
pop
sbb
adc
adc
pop
fcoms
cli
inc
lock
push
and
push
add
out
add
add
dec
lcall
mov
add
mov
lret
rol
adc
jl
sbb
hlt
add
add
xchg
add
jo
pusha
add
cli
pop
test
jg
add
pop
pop
loop
in
mov
adc
movb
inc
add
sub
mov
pop
iret
and
popa
out
shrl
push
call
sbb
add
pop
xchg
add
cmp
loope
add
movb
enter
add
testb
pop
add
sbb
pop
pop
std
lahf
push
sub
movb
push
add
add
mov
dec
fdivrs
push
add
adc
add
outsl
je
adc
popa
test
or
add
sbb
lret
fisubrl
add
lds
jbe
jle
mov
add
loope
add
add
imul
mov
add
cmp
xchg
add
and
mov
add
push
or
mov
cmp
mov
adcl
mov
jp
adc
insl
mov
mov
addr16
push
xchg
push
je
inc
add
sub
add
inc
add
add
add
rolb
and
mov
fcmovnbe
add
sbb
sbb
add
add
add
sbb
shll
add
out
fstps
or
movsb
add
add
pop
adc
sahf
jp
add
ret
movb
jbe
cmp
fsubs
add
cmpsb
add
add
add
jecxz
add
movb
push
add
add
inc
add
lcall
mov
add
mov
add
inc
add
add
data16
data16
add
cmpl
jle
add
scas
lahf
lods
out
rolb
inc
add
add
pushf
mov
xor
jge
dec
jecxz
fwait
aaa
mov
add
popf
dec
mov
cld
or
das
mov
add
push
add
push
pop
mov
sbb
or
jmp
adc
xchg
int3
mov
add
mov
sti
loop
push
add
icebp
fisubrl
add
idivl
lret
sub
movb
push
add
out
scas
cmp
stos
and
mov
enter
sub
cs
add
leave
inc
movsl
imul
testb
jp
add
add
or
cmp
jle
scas
fwait
sub
mov
mov
xor
aam
pop
call
or
ja
add
add
add
xchg
add
jg
add
or
inc
xchg
add
sub
add
add
or
jmp
out
rcrl
add
xchg
add
add
jb
jp
add
enter
add
test
xor
pop
daa
adc
lahf
push
movb
add
lret
add
add
add
outsb
lea
jl
pop
xor
cvtdq2ps
scas
insl
lcall
pop
call
fildl
in
jno
test
rcll
test
add
add
dec
ds
lods
add
mov
add
sub
or
add
add
jbe
testb
js
movsl
xor
or
daa
jge
popf
out
cmpsb
add
mov
std
adc
mov
mov
dec
rolb
call
pop
add
ja
pop
xor
rol
add
add
mov
fbld
cmpsb
add
add
aad
add
mov
add
add
add
jno
add
lcall
cmp
pushf
stos
jae
push
xor
loop
push
add
gs
out
add
add
inc
add
or
fistpll
mov
xchg
xor
push
mov
add
jl
add
ljmp
repnz
sti
and
mov
add
cmp
add
cmp
ficomps
inc
add
add
xchg
fisttps
pop
popa
daa
addr16
cmp
jo
fstpt
das
sahf
inc
add
fdivrs
inc
add
mov
xchg
add
mov
inc
add
mov
leave
leave
and
xor
in
stos
inc
add
xorl
mov
add
pop
hlt
add
add
push
add
pop
mov
cld
sbb
jo
sbb
sbb
mov
jo
rolb
icebp
jo
and
mov
add
fwait
ret
pushf
leave
cmp
add
jbe
mov
addb
mov
jns
add
add
mov
jmp
mov
push
out
mov
in
xchg
cmp
ljmp
lret
out
test
xor
adc
add
test
leave
negl
aam
or
mov
adc
add
mov
add
add
rorl
cmp
add
mov
xchg
addr16
push
add
add
add
mov
mov
lods
cs
rcll
out
add
out
lock
test
add
mov
jbe
add
add
outsb
cmc
andnps
push
push
add
aas
pop
mov
dec
ljmp
mov
xchg
jp
ret
repnz
add
repz
loope
push
add
add
mov
add
cwtl
jg
mov
push
adc
and
cwtl
push
add
pop
popf
nop
add
fcoml
dec
mov
add
es
add
add
add
outsl
lock
add
jne
jecxz
xlat
sahf
scas
pop
and
add
jle
inc
mov
or
mov
pusha
add
pop
or
cmpl
add
xchg
add
xor
xchg
fidivrs
cmp
add
add
add
sbb
add
or
sarl
dec
sti
jl
add
stc
fistl
xor
dec
fbstp
movsl
sub
add
add
cmp
add
mov
cmc
icebp
push
inc
movsb
add
in
mov
inc
add
xchg
or
popf
xchg
or
sub
sub
xchg
jg
add
sbb
dec
testb
cmpl
mov
adc
jnp
push
add
add
mov
mov
enter
add
add
rolb
push
inc
add
add
insl
cmpsl
lds
pusha
add
outsl
cs
add
stos
or
add
add
pop
and
push
add
test
test
add
inc
add
fistpll
lods
inc
rcll
add
out
lret
add
adc
movsl
jecxz
fstpl
cmp
cmp
add
dec
adc
push
mov
lcall
inc
add
mov
cltd
in
lods
pop
mov
and
mov
add
add
lahf
movsb
add
hlt
add
sub
fneni(8087
add
add
ficomps
jnp
mov
outsb
mov
popf
jg
mov
dec
int3
push
add
or
ret
add
xor
xchg
jp
pop
fidivrs
cli
rcrl
add
pushf
xor
fcmovu
outsl
movsb
add
add
addb
add
scas
pop
xchg
pop
in
mov
push
dec
adc
iret
ljmp
xlat
movnti
add
std
sub
cmp
mov
pop
push
xor
xchg
add
imul
std
mov
int
ret
or
lds
add
inc
sub
ja
mov
xchg
leave
push
add
add
add
in
mov
and
add
leave
pop
ljmp
and
into
jecxz
add
pop
adc
jae
add
mov
inc
add
enter
add
xlat
movb
push
jno
add
sub
mov
hlt
add
inc
cs
add
mov
test
ficoms
add
in
or
mov
sub
add
inc
mov
testl
add
add
shrl
add
inc
pop
add
or
dec
cli
addb
and
jg
repz
rolb
stos
jg
data16
push
add
movsl
movsl
adc
pop
loope
fildll
add
add
add
insl
dec
xchg
cmp
add
add
jne
loop
mov
insb
or
cltd
add
mov
add
add
jne
pop
mov
rolb
add
jecxz
fadds
add
or
pop
lods
and
mov
out
pusha
add
mov
add
movsl
cwtl
repnz
addb
imul
lock
loop
push
add
mov
pop
push
add
sub
add
lcall
inc
add
mov
add
and
mov
add
xchg
adcl
xchg
mov
jne
add
jbe
stos
push
mov
mov
xchg
add
add
dec
pop
jo
inc
add
or
lods
mov
jns
or
xor
xor
sub
mov
add
add
mov
add
mov
add
lahf
pusha
add
test
mov
push
add
mov
outsl
out
in
fcos
sbb
std
in
add
add
push
loope
pop
xor
add
push
add
xchg
mov
insl
push
add
repnz
add
push
add
pop
mov
add
add
add
fdivl
add
add
xchg
xor
and
mov
cld
js
add
add
jno
sub
int3
push
inc
in
pop
adc
sub
inc
xor
aaa
pop
lock
imul
pop
xlat
mov
mov
add
and
add
add
add
add
push
add
mov
lods
add
jp
js
add
addb
ljmp
jecxz
fwait
sub
mov
xchg
xchg
loope
push
add
add
imul
push
add
push
or
push
add
add
test
add
aad
sub
pop
nop
add
mov
lock
test
inc
add
cmp
add
addb
les
imul
jg
clc
xchg
xor
lahf
or
cmp
dec
mov
or
push
and
jae,pn
sub
test
mov
inc
add
add
out
movsb
add
add
and
and
xchg
add
add
add
mov
add
loop
sbb
add
push
add
add
sub
add
xchg
adc
mov
js
add
jg
push
cmp
pop
inc
push
add
jno
mov
ret
cmpsl
mov
shrl
mov
cmp
lret
lret
mov
push
add
add
ljmp
jb
mov
mov
add
add
inc
add
das
push
jb
cmp
add
add
mov
sahf
push
ljmp
add
and
mov
lods
mov
pop
xchg
rcll
add
add
add
add
xor
jl
pop
fisubs
sub
test
cmpsb
add
pusha
add
jecxz
add
adc
pop
sub
cmc
sbb
add
add
add
add
je
pop
ljmp
xor
bound
mov
cmp
add
add
testb
sahf
icebp
mov
mov
cmp
inc
add
xchg
add
pusha
add
jecxz
fmull
cmp
cmp
add
in
idiv
mov
cmp
pusha
add
add
pop
test
add
add
add
cmc
xchg
add
arpl
add
add
mov
jecxz
inc
add
stos
jns
mov
xchg
inc
add
pop
add
dec
sub
in
push
cld
daa
pop
dec
out
sub
add
nop
add
outsl
inc
add
push
jno
movsl
push
mov
and
jmp
add
movsl
push
add
add
cmc
and
add
out
fistpl
shrl
add
jge
mov
lds
mov
add
pop
add
add
add
mov
fisubrl
and
mov
lods
sub
outsl
mov
mov
jb
lret
xor
sbb
aam
adc
rcl
and
push
nop
add
arpl
sbb
sub
aam
movsl
sbb
rolb
and
add
lods
js
jp
addb
add
cmpsl
adc
add
jmp
sub
jmp
iret
xor
add
push
adc
ret
fdivrl
fidivs
add
out
in
push
add
push
push
pop
fcmovne
jns
mov
pop
add
mov
mov
add
add
int
fisubrl
adc
push
add
mov
add
bound
mov
repnz
add
add
ljmp
lods
push
add
add
fadds
das
pop
mov
dec
aaa
dec
jae
fistl
fnsave
push
xor
cmp
mov
add
xchg
out
outsb
roll
dec
arpl
sub
add
add
testb
mov
add
iret
push
test
dec
in
adc
hlt
add
and
nop
add
fucomip
fiaddl
pop
pushf
aam
in
fdivs
sub
popa
adc
xor
loopne
adc
sbb
inc
add
or
dec
dec
cltd
popf
inc
in
jle
add
mov
aam
cld
sbb
nop
add
add
ds
cmp
out
adc
dec
or
and
sbb
pop
fisttps
daa
imul
mov
addb
mov
shll
add
scas
call
add
sbbl
cmp
adc
dec
loop
and
dec
leave
xchg
add
in
mov
push
add
add
inc
or
sub
movb
and
mov
out
push
add
stos
repz
in
mov
into
mov
add
cs
add
mov
xchg
add
add
add
add
add
repz
mov
add
je
rep
out
js
and
add
mov
push
lods
mov
jl
out
movsl
lods
jp
gs
pop
push
add
add
add
ror
mov
gs
mov
add
add
mov
add
test
sub
xor
or
rcrl
add
pusha
add
mov
cmpsb
add
fistps
push
out
in
call
add
fildll
je
jge
add
add
outsl
mov
and
movb
shll
mov
jmp
shll
les
push
in
rcll
add
xchg
add
add
lods
cmp
add
adc
out
inc
rcr
or
add
pop
mov
leave
adc
mov
sbb
scas
imul
cwtl
xchg
add
and
sbb
jle
add
cmp
dec
lcall
je
in
jmp
setnp
imul
sbb
pop
dec
add
mov
pushf
std
cs
add
out
sub
mov
jmp
popf
ret
loop
xor
add
add
add
push
add
add
scas
sahf
bound
mov
aaa
out
stc
ret
adc
push
fsubr
dec
push
add
mov
pop
pop
jmp
mov
arpl
mov
cmpsl
in
adc
cltd
and
mov
add
repnz
icebp
cmp
sbb
xchg
arpl
xchg
imul
ds
fildl
add
mov
in
inc
add
xor
jmp
lea
mov
mov
inc
add
adc
mov
xchg
out
and
mov
mov
dec
cwtl
lcall
add
mov
pop
sbb
inc
sub
mov
repnz
add
aas
inc
add
fwait
and
cmp
add
add
mov
loop
lret
add
dec
stos
sahf
mov
movsl
stos
mov
add
icebp
lret
xor
pop
popa
into
adc
ljmp
out
add
sub
pop
sbb
movsl
jno
add
leave
jne
in
adc
daa
iret
call
testb
add
js
and
shrl
std
jl
add
in
sbbl
inc
pop
stos
inc
xor
in
lcall
repnz
fmuls
jge
add
mov
add
add
mov
jle
mov
lcall
add
mov
mov
dec
pop
loope
add
mov
leave
stos
enter
add
or
add
xchg
inc
pushf
add
mov
and
add
and
sub
sub
xchg
add
add
add
stos
inc
mov
dec
or
ret
lods
add
mov
adc
add
cltd
bound
mov
add
push
iret
int
mov
jne
mov
add
add
cltd
cmp
add
lods
mov
lea
jno
mov
repz
push
add
icebp
jb
enter
je
mov
scas
jno
add
mov
lds
jmp
jns
add
add
mov
jp
cmpl
jge
add
jbe
int
mov
push
push
add
adc
add
movsl
repnz
mov
popl
inc
add
inc
add
add
dec
std
ja
add
hlt
add
int
lret
jo
mov
add
imull
aaa
sub
mov
add
ficoml
push
add
or
dec
xchg
add
add
mov
inc
add
sti
ret
loop
push
pop
sbb
sub
jbe
or
pop
loope
out
je
inc
dec
mov
fistpl
addb
insl
rolb
add
stos
inc
add
jmp
add
push
push
add
rolb
mov
rolb
add
mov
jno
mov
add
clc
inc
loop
push
adc
pop
popf
xor
cmpsb
add
sahf
jp
add
inc
xchg
loopne
nop
add
popl
fwait
inc
add
add
pop
imul
add
mov
pop
mov
fwait
or
add
cltd
data16
dec
sbb
add
sbb
push
add
dec
mov
sub
xor
in
addr16
insl
sbb
add
mov
adc
add
fnstenv
add
mov
pop
mov
cmpsl
adc
jl
out
add
mov
xchg
or
das
adc
outsl
mov
adc
add
add
iret
mov
add
add
push
int
out
inc
add
je
xor
mov
ja
mov
ret
int3
rolb
scas
pop
sahf
add
mov
fnsave
pusha
add
int3
cwtl
pop
icebp
or
push
jecxz
add
add
addb
cmpsb
add
pop
mov
add
sbb
xor
add
cwtl
outsl
push
add
add
cwtl
mov
xor
rep
pop
push
add
sbb
add
add
xchg
pop
loope
leave
jmp
push
add
mov
cmp
mov
pop
out
testb
or
sbb
push
add
add
add
xchg
xor
xchg
lods
or
pop
sbb
xchg
mov
aad
xor
push
add
sub
divl
rcrl
aam
jbe
cwtl
jno
pcmpeqb
mov
add
dec
adc
add
cmovnp
add
add
add
std
pop
fwait
ja
add
or
imul
add
sub
cmpsl
in
mov
icebp
xchg
in
add
in
sbb
addr16
dec
pop
add
mov
inc
add
add
mov
data16
xor
cmpsl
ds
orl
add
add
sbb
add
rolb
dec
nop
add
xchg
jo
inc
add
clc
sub
addb
add
dec
lds
test
sbb
mov
push
add
adc
push
shll
add
add
aaa
mov
xchg
add
out
jbe
rorl
cli
sub
mov
lret
add
pop
sbb
mov
add
add
cmp
add
add
and
add
mov
in
xchg
cwtl
push
push
add
dec
sbb
jp
adc
sbb
in
mov
add
and
addb
add
push
jmp
movsl
xor
js
add
lret
fstpl
add
in
mov
leave
bound
mov
add
loope
add
insb
mov
mov
cmp
fsubrs
xor
jb
leave
pop
and
mov
sahf
addb
add
add
and
add
add
lods
push
add
add
fdiv
test
add
add
mov
jle
aad
mov
pop
jp
rolb
inc
add
mov
stos
sub
add
imul
xlat
je
pushf
jo
std
movb
das
call
rolb
xchg
lea
rolb
fwait
aaa
insl
xor
pop
add
mov
dec
add
add
js
lods
mov
add
sbb
loop
or
add
xchg
add
add
das
negl
dec
cmp
pop
arpl
push
fidivrl
add
rorl
imul
add
cmpsb
add
cmp
and
add
gs
js
add
imul
add
pop
xchg
mov
xor
xchg
lret
rolb
add
dec
adc
inc
add
sbb
add
add
fnstsw
movsb
add
xchg
add
add
pop
or
xchg
sbb
call
aam
xchg
add
fcomps
ss
inc
xor
mov
into
cmp
aas
test
in
cmp
add
push
adc
lea
jmp
xor
pop
pusha
add
outsb
call
push
add
cli
daa
mov
and
add
outsb
mov
add
add
inc
add
add
sub
add
sbb
pop
int
pop
and
mov
mov
add
push
add
adc
das
xchg
lcall
test
mov
pop
mov
mov
inc
jbe
adc
repz
push
add
add
sbb
ljmp
xchg
add
add
add
insb
xchg
testb
add
xor
pop
or
lods
lret
lcall
fidivrs
dec
fadds
loopne
scas
lret
sti
lcall
and
cld
sub
mov
sub
mov
inc
add
push
add
inc
hlt
add
ret
mov
add
decb
add
mov
cli
sub
add
adc
aas
mov
fcmovne
mov
jns
xchg
sbb
pop
or
xlat
add
xor
or
pop
add
xchg
add
add
add
and
mov
push
push
push
daa
jae
dec
or
add
das
in
shll
mov
loopne
dec
lcall
outsl
pop
push
mov
mov
add
adc
add
andl
add
xor
cmp
fidivrl
inc
add
push
mov
mov
mov
jne
add
add
inc
add
cli
rorl
mov
mov
xchg
or
mov
pop
xorl
in
inc
stos
sub
xor
add
and
iret
mov
add
add
jmp
add
xchg
add
jnp
add
add
add
aad
fwait
and
add
add
add
add
arpl
mov
add
cli
aaa
lret
pop
push
add
add
arpl
rolb
add
add
lcall
es
mov
lahf
in
pusha
add
mov
ficoms
xchg
add
push
add
lea
add
sub
add
add
add
add
and
hlt
add
lret
add
sub
jmp
scas
aad
add
ret
shll
add
xchg
imul
jmp
xchg
add
fbld
lea
ret
aas
add
add
mov
inc
add
cmpsl
push
leave
xchg
lea
fnstenv
add
mov
push
sub
add
add
xchg
mov
mov
mov
shr
fcmove
xchg
push
add
scas
sub
mov
jle
aaa
outsl
pop
inc
dec
or
jnp
add
dec
xlat
mov
add
mov
add
add
lock
push
addb
mov
add
jns
push
popa
out
lods
jb
fistl
fsubr
rolb
inc
sub
or
nop
add
add
push
xlat
repz
outsl
sub
inc
sbb
movb
xchg
mov
loopew
paddsb
mov
cmp
add
inc
xchg
arpl
add
inc
movb
out
inc
jnp
cwtl
push
add
aas
cwtl
and
fldl
add
frstor
stos
mov
cmp
or
bound
mov
cmp
sahf
push
add
add
imul
loope
pop
test
cld
cmp
add
sub
jle
add
xchg
xor
in
stos
aam
push
add
les
rolb
mov
cld
pushf
popf
cld
xchg
icebp
movl
add
fwait
ret
jns,pn
add
xlat
fisubrs
ret
test
jmp
add
add
pop
cmp
add
cld
icebp
out
rolb
loopne
mov
cmp
cmp
imul
add
mov
fisubrl
loopne
fcmovu
ret
or
add
add
xchg
add
lret
orl
add
je
aam
mov
adc
add
add
add
rolb
sub
and
mov
ljmp
add
pop
mov
pop
cmpl
jnp
add
and
mov
add
dec
iret
mov
add
adc
add
mov
push
jg
lcall
std
rcll
add
adc
and
insl
dec
jg
and
add
mov
push
jne
mov
adc
fidivrs
and
mov
loop
std
in
scas
add
mov
ljmp
mov
push
add
add
jecxz
mov
adc
jge
cmp
icebp
cmc
aam
sbb
add
paddusw
rol
add
add
cmpsb
add
in
cwtl
dec
cmp
add
xchg
mov
push
mov
add
add
and
mov
ljmp
adc
sarl
xchg
outsl
push
mov
add
rorl
add
add
ljmp
push
add
adc
add
pop
outsb
addb
test
dec
sti
dec
je
outsb
pop
outsb
imul
add
mov
add
mov
and
dec
incb
add
add
out
or
shl
dec
pop
enter
insb
stos
dec
xor
xchg
inc
dec
aad
xchg
add
push
jp
jp
add
add
and
push
add
imul
add
mov
add
pop
sbb
add
mov
testb
inc
add
mov
add
add
jmp
incl
and
mov
ret
clc
cmp
inc
fisubrs
pop
dec
mov
fld
sbb
mov
add
and
mov
clc
push
and
mov
inc
add
pop
adc
or
push
add
add
inc
add
imul
cli
mov
lods
push
add
mov
xlat
push
je
or
mov
mov
incb
cltd
jecxz
add
roll
ret
aad
xor
sbb
insb
in
out
loop
mov
jmp
mov
fiaddl
add
dec
enter
movsb
add
inc
add
pop
push
aas
insb
aam
dec
fisttpll
add
add
pusha
add
outsl
movsl
mov
push
add
and
mov
add
dec
lahf
mov
ljmp
hlt
add
mov
mov
addb
pop
cmpsb
add
cwtl
jo
rol
cmp
lcall
fwait
aas
adc
sbb
test
rolb
dec
lds
sti
popf
sbb
fstpt
mov
ja
les
js
inc
mov
data16
add
push
add
cmp
mov
in
inc
add
add
out
xchg
add
add
dec
lds
outsb
out
add
imul
and
add
add
std
enter
xchg
add
dec
xchg
add
add
xchg
lret
add
add
jnp
add
add
add
add
add
ja
xor
pop
push
movb
sub
rolb
push
dec
sub
xchg
arpl
cmp
add
mov
call
add
add
cli
adc
fld
jo
insl
daa
add
mov
add
dec
leave
xor
sub
fiaddl
and
test
cmp
inc
add
or
add
and
in
in
ret
popf
adc
movb
mov
std
outsl
sub
mov
imul
xchg
push
add
mov
add
scas
inc
add
add
cltd
rorl
pushf
dec
rolb
mov
push
add
pop
mov
jno
pop
iret
xor
inc
sub
pop
mov
jae
add
jnp
add
and
add
add
cmp
loope
testb
and
mov
popa
push
jo
lret
rcrl
mov
inc
add
addb
cmp
pop
mov
outsl
or
sub
sub
add
sbb
pop
inc
add
push
mov
icebp
add
sbb
pop
rcll
add
loop
pusha
add
ljmp
add
add
push
add
fildll
mov
add
add
data16
pop
scas
jl
jne
or
add
mov
cli
fnstenv
add
jle
push
add
add
rolb
add
addb
add
add
mov
mov
add
or
pop
ja
inc
fistps
push
test
mov
je,pn
cmp
add
xor
dec
xor
push
sahf
sbb
inc
fildl
fwait
push
fsubrl
mov
add
add
das
mov
push
add
repz
mov
push
cs
in
loop
arpl
add
mov
add
add
sub
addb
add
lahf
das
push
or
add
pop
xor
mov
add
lds
add
nop
add
sub
pop
cmp
add
inc
xchg
test
dec
loop
push
push
add
dec
lods
das
add
std
std
test
and
addb
sub
add
insl
jp
lahf
jno
fstl
mov
cwtl
sti
inc
add
dec
adc
dec
mov
or
cmc
fdivr
cltd
repz
fadd
add
mov
jle
call
xor
lahf
insl
mov
add
mov
jnp
add
pop
shll
cli
stos
adc
mov
mov
repnz
pop
fwait
push
loopne
add
mov
in
popf
xchg
add
add
arpl
in
jmp
add
add
testl
add
lods
jmp
mov
and
mov
add
jp
bound
mov
jae
add
add
mov
pop
xchg
add
shll
add
push
add
xor
addl
jl
and
mov
add
adc
jg
stos
pop
adc
data16
lret
rcll
add
inc
daa
in
add
add
faddl
jo
fwait
testb
add
popa
ljmp
add
lret
sbb
dec
fisttpl
iret
jmp
stos
add
mov
sub
xor
push
add
jecxz
pop
xor
mov
push
add
add
and
mov
pop
rolb
pop
cmc
pop
inc
add
push
add
add
add
and
add
rolb
fucomip
jp
xlat
mov
jo
add
jbe
cwtl
and
fistpll
call
aam
sub
lret
add
or
add
gs
imul
sbb
add
adc
add
add
add
in
or
add
fwait
add
fistpll
add
fildl
add
mov
inc
add
mov
sub
inc
ds
add
dec
clc
mov
add
cli
push
cli
mov
test
xchg
sub
xlat
mov
mov
mov
add
xor
mov
jnp
xchg
fisttps
add
out
cmc
sarl
add
add
cmp
ret
decl
imul
jmp
stos
xlat
cmpsb
add
mov
mov
add
aad
lods
popf
insb
jmp
popf
aaa
cmp
jp
push
add
add
mov
pushf
xor
push
pop
adc
adc
pop
and
sarl
rolb
mov
pop
into
or
pushf
imul
aam
cmpsb
add
push
mov
js
mov
add
mov
sbb
dec
push
out
stos
jecxz
ja
add
add
cmp
sbb
add
mov
stos
in
sbb
xlat
sub
and
cmp
add
add
mov
cli
nop
add
and
add
addb
or
outsb
jg
imul
xchg
add
add
mov
add
add
pop
pusha
add
inc
inc
add
add
add
mov
and
mov
adcl
std
jnp
add
adc
mov
xchg
add
insb
dec
int
loopne
inc
add
pop
cs
and
mov
and
jg
mov
add
ljmp
push
jle
outsl
push
add
lods
fwait
mov
sbb
push
add
data16
or
add
dec
mov
or
cmp
in
jo
add
add
add
and
outsl
iret
shrl
inc
add
loopne
mov
xchg
aam
cmpsb
add
xor
mov
add
pop
xor
or
add
cs
add
loopne
or
pop
mov
xchg
jmp
or
add
add
adc
mov
dec
cwtl
push
add
or
add
add
dec
cltd
rolb
scas
cmc
insb
js
out
movsb
add
mov
add
xchg
hlt
add
sub
lods
add
jecxz
aam
repnz
and
and
mov
mov
mov
add
mov
add
dec
rolb
cmp
inc
jne
add
mov
sahf
inc
add
add
add
lea
or
iret
fwait
dec
jecxz
push
add
in
gs
mov
add
enter
fsubrs
add
out
or
add
test
inc
add
pop
out
insb
jbe
xor
inc
movb
rolb
test
cmp
mov
jno
pslld
fucomip
out
mov
sub
push
pop
or
add
inc
cmp
jno
les
fistl
mov
sub
data16
jl
add
mov
filds
add
in
mov
cmp
add
xor
mov
mov
cmpsb
add
add
inc
in
add
add
add
or
sub
add
add
add
movb
sbb
add
call
pop
imul
dec
ja
cmp
cltd
repnz
add
add
mov
in
mov
add
sti
sbb
test
mov
test
add
or
add
mov
into
adc
pop
xor
add
sub
xchg
add
mov
add
sbb
mov
jge
decb
add
addb
mov
xlat
pop
xchg
and
add
mov
lcall
add
mov
ds
or
pop
dec
enter
add
add
