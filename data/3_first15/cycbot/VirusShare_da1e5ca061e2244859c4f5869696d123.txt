dec
test
mov
mov
loopne
pop
mov
loopne
push
loopne
aam
loopne
mov
loopne
pop
movsb
loopne
imul
mov
cmpsb
loopne
mov
mov
loopne
xor
loopne
xchg
mov
mov
loopne
andb
mov
cmpsb
loopne
inc
test
loopne
repz
mov
movsl
loopne
lcall
mov
cmpsb
loopne
loope
loopne
out
loopne
mov
mov
loopne
shrb
mov
mov
loopne
mov
movsb
loopne
dec
cmpsl
loopne
cmpsl
cmpsl
loopne
stos
cmpsl
loopne
out
movsb
loopne
and
loopne
adc
test
mov
movsl
loopne
jns
loopne
adc
mov
movsl
loopne
ja
loopne
xor
mov
mov
loopne
frstor
loopne
mov
cmpsl
loopne
adc
loopne
jecxz
loopne
mov
loopne
sbb
loopne
push
cmpsl
loopne
andb
xchg
loopne
mov
loopne
stos
test
mov
movsl
loopne
jnp
loopne
out
loopne
inc
cmpsb
loopne
jb
loopne
jnp
loopne
cmpsl
loopne
xchg
loopne
leave
mov
loopne
andl
loopne
push
cmpsb
loopne
mov
loopne
repnz
loopne
shlb
mov
cmpsb
loopne
jp
loopne
pop
mov
loopne
fldcw
loopne
dec
mov
loopne
cld
cmpsb
loopne
jbe
loopne
and
mov
movsb
loopne
das
mov
loopne
movsl
test
mov
test
mov
test
mov
movsl
loopne
shll
mov
test
mov
movsl
loopne
ds
mov
mov
loopne
push
loopne
scas
cmpsb
loopne
dec
movsb
loopne
jb
loopne
mov
loopne
scas
cmpsb
loopne
movsb
mov
loopne
shrb
loopne
popa
cmpsl
loopne
xchg
movsl
loopne
pushf
movsb
loopne
xchg
movsl
loopne
les
loopne
andl
loopne
cmp
loopne
xchg
mov
loopne
and
loopne
and
loopne
push
test
loopne
push
test
loopne
mov
loopne
xor
loopne
cmpsb
loopne
add
loopne
dec
mov
loopne
and
loopne
movsl
movsl
loopne
xlat
test
mov
mov
loopne
clc
mov
loopne
out
mov
loopne
mov
mov
loopne
push
test
loopne
lahf
mov
loopne
dec
test
mov
test
mov
test
mov
test
mov
mov
loopne
dec
test
loopne
int3
cmpsl
loopne
lock
loopne
push
test
loopne
mov
loopne
xchg
movsl
loopne
fbld
mov
test
mov
movsb
loopne
sbb
cmpsl
loopne
lds
loopne
push
mov
loopne
lret
mov
loopne
or
mov
loopne
dec
test
mov
mov
loopne
jmp
loopne
sub
loopne
push
mov
loopne
hlt
cmpsl
loopne
pop
movsb
loopne
jmp
mov
mov
loopne
dec
movsb
loopne
dec
movsb
loopne
movsl
loopne
andl
loopne
mov
cmpsl
loopne
imul
mov
cmpsl
loopne
mov
loopne
push
test
mov
test
mov
movsl
loopne
mov
mov
loopne
fwait
movsl
loopne
test
mov
mov
loopne
lea
mov
mov
loopne
xchg
cmpsb
loopne
adc
loopne
push
cmpsb
loopne
outsb
mov
loopne
aad
loopne
cmpsw
loopne
imul
mov
movsb
loopne
loopne
loopne
dec
movsb
loopne
cmpsl
loopne
dec
movsl
loopne
je
loopne
mov
loopne
andl
mov
cmpsb
loopne
stos
movsb
loopne
aad
loopne
cltd
cmpsb
loopne
aaa
test
loopne
and
loopne
add
loopne
mov
loopne
jb
loopne
sbb
test
loopne
call
cmpsl
loopne
mov
loopne
fldenv
loopne
int
loopne
stos
movsb
loopne
cmp
loopne
pop
cmpsl
loopne
xchg
cmpsl
loopne
or
loopne
cmp
loopne
dec
cmpsl
loopne
lods
cmpsb
loopne
pop
cmpsl
loopne
lods
mov
loopne
xlat
cmpsl
loopne
cmp
loopne
jnp
loopne
sbb
loopne
shlb
loopne
daa
cmpsl
loopne
or
loopne
loop
loopne
add
mov
test
mov
mov
loopne
lret
mov
mov
loopne
xchg
cmpsl
loopne
ja
loopne
outsl
mov
loopne
add
loopne
leave
movsl
loopne
dec
mov
loopne
mov
loopne
lock
mov
movsl
loopne
in
loopne
or
loopne
cltd
test
mov
mov
loopne
xchg
test
mov
movsb
loopne
scas
cmpsl
loopne
mov
cmpsl
loopne
movsl
movsl
loopne
stos
mov
loopne
mov
loopne
dec
cmpsb
loopne
lret
mov
movsl
loopne
mov
movsl
loopne
mov
loopne
jmp
movsl
loopne
mov
loopne
cmp
loopne
fwait
cmpsl
loopne
mov
test
mov
test
mov
cmpsb
loopne
sbb
loopne
adc
loopne
dec
mov
loopne
xchg
movsl
loopne
cmpsb
movsb
loopne
mov
cmpsb
loopne
in
loopne
add
mov
loopne
jae
loopne
xor
cmpsl
loopne
in
loopne
add
loopne
ja
loopne
push
test
loopne
fs
mov
cmpsl
loopne
mov
loopne
mov
movsb
loopne
pop
cmpsl
loopne
pop
movsb
loopne
xchg
mov
loopne
lods
mov
loopne
cmpsb
loopne
pusha
cmpsb
loopne
dec
cmpsl
loopne
test
loopne
and
mov
loopne
mov
movsl
loopne
sbb
loopne
mov
cmpsb
loopne
loope
loopne
adc
cmpsb
loopne
movsl
loopne
xor
mov
cmpsl
loopne
xlat
mov
loopne
pop
mov
loopne
mov
movsl
loopne
in
movsb
loopne
inc
movsb
loopne
push
loopne
push
loopne
xor
loopne
aaa
movsb
loopne
xlat
movsl
loopne
lods
test
mov
cmpsl
loopne
cmpsb
mov
loopne
out
loopne
xor
loopne
fwait
mov
loopne
mov
loopne
in
test
mov
movsb
loopne
fldcw
loopne
stos
cmpsb
loopne
pop
cmpsb
loopne
out
movsl
loopne
cmpsb
loopne
jmp
loopne
ljmp
mov
mov
loopne
aam
loopne
loop
loopne
xchg
loopne
jmp
loopne
xor
loopne
cwtl
cmpsb
loopne
movsl
test
mov
cmpsl
loopne
movsl
loopne
jg
loopne
push
test
loopne
mov
test
loopne
or
loopne
fldenv
loopne
scas
cmpsb
loopne
subl
mov
movsl
loopne
inc
mov
loopne
sti
cmpsb
loopne
xor
loopne
mulb
loopne
cli
cmpsl
loopne
jl
loopne
mov
loopne
out
test
mov
cmpsb
loopne
mov
loopne
jb
loopne
inc
test
loopne
mov
mov
loopne
jle
loopne
ja
loopne
icebp
cmpsl
loopne
lds
loopne
sub
loopne
hlt
test
mov
movsl
loopne
cmpsb
mov
loopne
mov
movsb
loopne
mov
loopne
cmp
loopne
mov
loopne
xchg
mov
loopne
mov
loopne
ja
loopne
outsl
mov
loopne
cmp
loopne
pop
mov
loopne
aas
mov
loopne
out
loopne
mov
test
mov
movsl
loopne
mov
loopne
lret
mov
mov
loopne
cmpsl
cmpsl
loopne
and
loopne
xchg
cmpsb
loopne
dec
movsl
loopne
movsb
loopne
inc
test
loopne
sbb
loopne
popf
cmpsb
loopne
mov
cmpsl
loopne
mov
loopne
arpl
loopne
adc
mov
cmpsb
loopne
add
cmpsl
loopne
xchg
test
mov
cmpsl
loopne
adc
loopne
outsl
movsb
loopne
test
test
mov
movsb
loopne
inc
mov
loopne
int
loopne
jmp
loopne
dec
test
loopne
das
cmpsb
loopne
shll
loopne
fisubs
loopne
add
cmpsb
loopne
pushf
movsb
loopne
arpl
loopne
std
mov
loopne
ret
cmpsb
loopne
lods
movsl
loopne
xchg
mov
loopne
aas
test
loopne
aam
loopne
repz
loopne
inc
mov
loopne
pop
mov
loopne
clc
test
mov
test
mov
test
loopne
aam
loopne
pop
test
mov
movsb
loopne
out
loopne
pushf
mov
loopne
xchg
movsl
loopne
sbb
loopne
sbb
mov
loopne
lods
cmpsl
loopne
cmpsb
loopne
and
loopne
or
mov
movsb
loopne
push
movsl
loopne
xor
loopne
adc
loopne
andl
loopne
sub
loopne
je
loopne
frstor
loopne
pop
mov
loopne
dec
test
loopne
imul
loopne
cli
mov
loopne
cmpsl
mov
loopne
frstor
loopne
cltd
mov
loopne
push
test
mov
test
mov
cmpsb
loopne
or
loopne
shlb
loopne
add
loopne
imul
loopne
stc
mov
loopne
test
loopne
jmp
mov
loopne
jns
loopne
mov
loopne
insb
test
mov
movsl
loopne
cmc
cmpsl
loopne
pop
mov
loopne
adc
loopne
jle
loopne
bound
loopne
xor
loopne
popf
mov
loopne
or
loopne
push
cmpsl
loopne
sub
loopne
mov
loopne
lods
cmpsl
loopne
xchg
cmpsb
loopne
inc
mov
loopne
lods
movsb
loopne
stc
cmpsl
loopne
adc
movsl
loopne
bound
loopne
sub
loopne
jns
loopne
jae
loopne
xchg
cmpsl
loopne
mulb
loopne
pop
mov
loopne
xchg
test
mov
movsl
loopne
add
mov
loopne
mov
mov
mov
loopne
mov
loopne
mov
loopne
in
loopne
mov
loopne
popa
test
mov
mov
loopne
out
loopne
jmp
loopne
push
mov
loopne
ret
mov
movsb
loopne
cltd
mov
loopne
cmc
movsb
loopne
jge
loopne
stc
test
mov
cmpsb
loopne
nop
mov
loopne
inc
cmpsb
loopne
push
test
loopne
iret
mov
loopne
insb
mov
loopne
and
loopne
scas
movsb
loopne
push
loopne
out
movsb
loopne
sub
movsb
loopne
or
test
mov
movsl
loopne
fisubrs
loopne
adc
loopne
mov
loopne
cmp
loopne
jecxz
loopne
xchg
movsl
loopne
pop
cmpsb
loopne
pop
test
mov
mov
loopne
pushf
mov
loopne
sub
loopne
ljmp
mov
test
loopne
lahf
movsl
loopne
in
movsl
loopne
adc
loopne
ja
loopne
sub
loopne
jno
loopne
frstor
loopne
sbb
loopne
jle
loopne
imul
loopne
fildll
loopne
mov
loopne
add
loopne
in
test
mov
movsb
loopne
movsb
loopne
andb
mov
movsb
loopne
mov
loopne
pop
cmpsl
loopne
movsl
movsb
loopne
add
mov
mov
loopne
ret
movsl
loopne
cmpsb
loopne
out
loopne
andl
mov
cmpsl
loopne
ja
loopne
loope
loopne
ds
mov
test
mov
movsb
loopne
mov
loopne
jae
loopne
and
loopne
mov
loopne
mov
mov
loopne
pop
movsb
loopne
repz
loopne
in
mov
loopne
shlb
loopne
loopne
test
loopne
cmc
mov
loopne
movsl
loopne
push
movsb
loopne
mov
cmpsb
loopne
mov
loopne
mov
loopne
lds
loopne
xchg
test
mov
test
mov
mov
loopne
das
mov
loopne
or
mov
loopne
and
loopne
das
movsb
loopne
jl
loopne
aas
movsl
loopne
in
loopne
push
mov
loopne
and
loopne
and
loopne
pop
cmpsl
loopne
in
loopne
int
loopne
pop
test
mov
test
mov
test
loopne
sub
loopne
js
loopne
jns
loopne
inc
cmpsl
loopne
cmpsb
loopne
test
loopne
pop
cmpsl
loopne
inc
mov
loopne
xchg
cmpsb
loopne
shlb
mov
cmpsb
loopne
in
loopne
mov
cmpsl
loopne
cmp
loopne
in
movsl
loopne
cmpsl
loopne
dec
cmpsb
loopne
in
loopne
lods
cmpsl
loopne
xor
movsl
loopne
sub
loopne
leave
mov
loopne
ret
test
mov
test
mov
mov
loopne
and
loopne
or
cmpsb
loopne
mov
loopne
sub
loopne
add
loopne
push
test
loopne
cltd
test
mov
mov
loopne
jp
loopne
push
test
mov
cmpsl
loopne
mov
loopne
sbb
loopne
xchg
mov
loopne
lret
mov
test
loopne
dec
cmpsb
loopne
fsubs
loopne
ret
mov
movsb
loopne
icebp
mov
loopne
mov
loopne
add
loopne
and
mov
loopne
std
mov
loopne
andb
mov
movsl
loopne
in
movsl
loopne
xor
loopne
ss
loopne
mov
loopne
push
movsl
loopne
jmp
loopne
push
test
mov
mov
loopne
push
mov
loopne
fwait
test
mov
movsb
loopne
dec
movsl
loopne
out
movsb
loopne
jge
loopne
jno
loopne
jecxz
loopne
adc
loopne
fwait
cmpsl
loopne
cmpsb
cmpsb
loopne
shlb
loopne
in
movsl
loopne
das
cmpsl
loopne
mulb
mov
mov
loopne
mov
loopne
mov
loopne
jnp
loopne
fwait
mov
loopne
stc
mov
loopne
loop
loopne
mov
loopne
cmpsb
loopne
cmp
mov
test
mov
movsb
loopne
outsb
movsl
loopne
mov
loopne
cmpsb
loopne
pusha
mov
loopne
cwtl
movsl
loopne
adc
cmpsl
loopne
push
movsl
loopne
push
mov
loopne
sbb
loopne
inc
test
loopne
push
test
mov
mov
loopne
shlb
mov
test
mov
movsl
loopne
cld
mov
loopne
out
cmpsb
loopne
arpl
mov
mov
loopne
stc
movsl
loopne
cmpsb
mov
loopne
dec
mov
loopne
jnp
loopne
out
loopne
dec
mov
loopne
xlat
movsl
loopne
jno
loopne
adc
mov
movsl
loopne
loope
loopne
mov
test
mov
cmpsb
loopne
inc
test
loopne
cmp
loopne
insb
mov
loopne
fisubl
loopne
movsl
mov
loopne
mov
mov
mov
loopne
andb
mov
movsb
loopne
xor
loopne
jb
loopne
mov
loopne
fisubs
loopne
inc
test
mov
mov
loopne
nop
cmpsb
loopne
aad
loopne
int
loopne
cmp
loopne
dec
movsb
loopne
dec
cmpsl
loopne
dec
cmpsl
loopne
pop
mov
loopne
cmp
loopne
test
movsl
loopne
fwait
movsb
loopne
xchg
movsb
loopne
inc
cmpsl
loopne
xchg
mov
loopne
sbb
loopne
icebp
movsb
loopne
sbb
loopne
mov
movsl
loopne
mov
mov
loopne
adc
loopne
aas
test
mov
mov
loopne
dec
movsl
loopne
call
mov
loopne
xchg
loopne
es
mov
mov
loopne
pop
cmpsl
loopne
lods
test
mov
cmpsl
loopne
test
loopne
test
loopne
push
movsb
loopne
jbe
loopne
add
loopne
xor
loopne
movsl
loopne
add
loopne
cld
cmpsl
loopne
xor
loopne
or
mov
movsb
loopne
mulb
loopne
cmpsb
loopne
aaa
mov
loopne
loop
loopne
loope
loopne
fbld
loopne
add
loopne
shlb
loopne
insl
cmpsl
loopne
cmp
test
loopne
cmpsl
loopne
xor
loopne
mov
movsl
loopne
outsb
mov
loopne
mov
mov
loopne
mulb
loopne
mov
cmpsb
loopne
jge
loopne
frstor
loopne
in
test
mov
test
mov
movsl
loopne
mov
movsl
loopne
jg
loopne
xor
loopne
stos
cmpsb
loopne
movsl
mov
loopne
repnz
loopne
cmpsl
mov
loopne
push
movsl
loopne
mov
loopne
insb
mov
loopne
pop
mov
loopne
and
loopne
mov
cmpsl
loopne
jmp
loopne
push
mov
loopne
mov
loopne
sti
mov
loopne
loopne
loopne
data16
loopne
xchg
cmpsb
loopne
jae
loopne
andl
loopne
xor
loopne
or
mov
mov
loopne
cwtl
cmpsb
loopne
in
mov
loopne
mov
mov
loopne
push
mov
loopne
lea
loopne
lock
loopne
fldcw
loopne
sub
loopne
cmpsb
loopne
push
cmpsb
loopne
test
loopne
push
movsb
loopne
cmp
loopne
mov
loopne
lcall
mov
movsl
loopne
adc
loopne
test
loopne
push
cmpsl
loopne
lea
loopne
test
loopne
xor
loopne
jne
loopne
mov
loopne
aad
loopne
add
loopne
pop
mov
loopne
inc
test
loopne
or
movsb
loopne
loop
loopne
mov
cmpsb
loopne
xlat
movsl
loopne
sbb
cmpsl
loopne
pop
mov
loopne
repz
loopne
add
mov
movsb
loopne
adc
cmpsl
loopne
mov
loopne
mov
loopne
mov
loopne
movsb
loopne
push
loopne
cmpsb
cmpsl
loopne
cmc
movsb
loopne
mov
loopne
addr16
test
cmpsl
loopne
sbb
loopne
popf
mov
loopne
cwtl
movsb
loopne
cmp
loopne
fsubrl
loopne
mulb
mov
movsb
loopne
dec
mov
loopne
push
test
mov
test
loopne
mov
loopne
add
mov
test
mov
mov
loopne
push
cmpsl
loopne
sti
mov
loopne
imul
mov
mov
loopne
jb
loopne
add
loopne
mov
mov
loopne
leave
cmpsb
loopne
mov
loopne
aas
test
loopne
mov
mov
loopne
cmp
loopne
scas
cmpsb
loopne
xor
loopne
pushf
mov
loopne
xor
mov
loopne
in
loopne
jge
loopne
adc
loopne
stos
cmpsb
loopne
push
movsb
loopne
dec
mov
loopne
add
loopne
push
mov
loopne
xchg
test
mov
movsl
loopne
and
loopne
xor
loopne
pop
mov
loopne
std
mov
loopne
sbb
loopne
and
loopne
fsubrs
loopne
dec
mov
loopne
arpl
loopne
pop
test
loopne
mov
loopne
stos
movsb
loopne
mov
loopne
mov
loopne
jg
loopne
add
loopne
popf
movsl
loopne
adc
mov
cmpsl
loopne
test
test
loopne
rep
loopne
addr16
add
loopne
xchg
mov
loopne
movsl
movsl
loopne
fldenv
loopne
cmp
loopne
add
loopne
cwtl
movsb
loopne
sti
movsl
loopne
stos
movsb
loopne
xchg
loopne
add
test
mov
movsl
loopne
shlb
mov
mov
loopne
cmp
loopne
pop
mov
loopne
lret
cmpsb
loopne
cmp
loopne
mov
loopne
fisubs
loopne
pusha
test
mov
movsb
loopne
mov
loopne
cld
test
mov
mov
loopne
into
movsb
loopne
mov
loopne
cs
mov
test
mov
movsb
loopne
jbe
loopne
cmpsl
loopne
js
loopne
fsubs
loopne
shll
loopne
repnz
mov
mov
loopne
mov
loopne
pushf
mov
loopne
stos
movsb
loopne
mov
loopne
stos
test
mov
movsl
loopne
cmpsb
loopne
out
loopne
in
loopne
enter
mov
loopne
movsl
mov
loopne
xor
loopne
shlb
mov
cmpsl
loopne
adc
loopne
push
test
mov
movsb
loopne
dec
mov
loopne
jns
loopne
push
test
loopne
xor
loopne
adc
loopne
xchg
test
mov
mov
loopne
and
loopne
and
loopne
jnp
loopne
loopne
loop
loopne
clc
cmpsb
loopne
mov
test
mov
cmpsl
loopne
adc
loopne
lcall
mov
test
loopne
push
cmpsb
loopne
xor
loopne
int3
mov
loopne
sbb
loopne
push
movsl
loopne
jg
loopne
shrl
loopne
pop
test
mov
mov
loopne
mov
loopne
cli
mov
add
mov
cli
lret
and
add
loop
inc
clc
inc
add
leave
cmp
inc
clc
lods
sbb
jmp
add
lret
inc
clc
nop
cmpsb
clc
adc
add
clc
mov
add
pop
cs
clc
add
add
std
cmpsb
clc
das
loopne
sub
jg
add
push
mov
clc
dec
push
lods
sbb
stos
jnp
incl
clc
mov
pusha
add
pop
insb
xchg
xlat
into
mov
stos
cmp
ret
clc
mov
clc
icebp
je
out
js
cmp
out
mov
mov
add
mov
clc
popa
add
mov
xbegin
clc
ss
push
add
push
scas
pop
idiv
jo
add
push
add
mov
adc
sub
jle
stos
je
ficoml
pop
mov
add
add
inc
clc
mov
inc
clc
add
add
clc
cmp
sbb
or
dec
rcrb
xbegin
clc
sahf
mov
pop
mov
outsb
ret
clc
mov
rol
clc
movsl
clc
mov
clc
mov
mov
clc
lods
rcl
scas
enter
add
pminub
inc
add
ljmp
mov
clc
push
add
ja
pop
cmp
cltd
ss
in
lahf
push
cltd
cmc
cmp
lahf
or
mov
fdivs
add
dec
fldl
sbb
mov
loope
aad
ret
clc
nop
pop
clc
sub
clc
add
add
mov
ss
outsb
lret
add
dec
aaa
fidivs
sbb
push
add
add
push
add
xchg
cmp
add
jg
cmpsl
clc
in
jl
mov
adc
add
gs
notl
clc
bound
add
iret
pop
jecxz
pop
test
jne
pop
mov
sub
clc
decb
cmp
movsl
clc
sbb
mov
clc
out
xor
mov
fcomps
cmpsl
clc
sub
clc
loop,pt
push
out
push
add
push
add
es
mov
mov
add
stc
add
sub
sarb
cmp
in
push
sub
push
push
push
push
push
push
call
and
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
pop
jmp
andl
mov
lea
push
push
push
mov
push
lret
call
adc
add
clc
scas
outsb
push
jns
jo
add
and
add
sbb
lods
inc
clc
xchg
xbegin
je
add
pop
push
clc
push
clc
inc
add
mov
mov
xbegin
data16
shrl
inc
clc
dec
popa
add
sarb
loop
cmp
sub
add
cmp
popf
dec
jne
inc
clc
sub
sar
roll
add
cmpsb
clc
lods
inc
add
mov
sti
push
clc
inc
add
pusha
add
insl
icebp
inc
clc
push
add
shll
add
pop
adc
add
and
add
add
out
mov
clc
sub
clc
scas
push
add
pop
ret
lock
inc
clc
lret
jns
cmp
add
loop
rcrb
sbb
clc
xchg
stc
xor
add
and
sub
movsl
clc
jne
add
pusha
add
push
or
add
add
push
add
xabort
cmp
jp
mov
add
mov
dec
jp
mov
dec
jmp
mov
jmp
clc
dec
xchg
xchg
iret
hlt
adc
add
add
pop
jecxz
mov
movsl
clc
sar
xor
clc
pop
lahf
jnp
clc
stos
hlt
jmp
mov
clc
mov
inc
clc
fisubl
add
xchg
jns
add
inc
add
ror
xor
add
test
add
add
mov
hlt
aam
clc
in
movsb
clc
in
dec
xchg
jo
add
add
mov
push
add
sbb
and
add
add
clc
mov
adc
add
add
sub
add
cltd
inc
clc
cwtl
out
or
rcr
call
add
clc
out
mov
ret
clc
push
add
jne
bswap
inc
clc
scas
mov
lock
adc
add
add
hlt
aam
xchg
fwait
and
xor
cwtl
idivl
jmp
negb
add
add
outsb
movsb
clc
fdiv
sub
add
iret
scas
sbb
jns
clc
mov
cmp
test
clc
scas
loope
pusha
add
push
add
jbe
int
inc
clc
dec
pushf
xchg
insl
pushf
in
dec
xor
add
add
cmpsb
clc
xchg
sbb
add
jmp
mov
clc
dec
lret
add
cwtl
cli
xbegin
add
jmp
clc
or
movsl
clc
mov
clc
or
mov
clc
test
in
xor
add
cmp
adc
push
add
fildl
add
scas
mov
clc
push
sbb
add
jae
add
data16
xor
add
add
jae
add
clc
lods
xor
inc
add
paddd
add
fildll
clc
stos
xchg
jb
add
scas
in
adc
popf
clc
mov
clc
and
add
clc
or
sbb
push
cltd
or
fisttpl
add
mov
clc
inc
clc
cmp
pop
push
repz
and
add
sbb
in
lea
clc
inc
add
cmp
clc
cmp
out
xchg
pop
and
add
add
nop
and
add
clc
fisubrl
jbe
xchg
movsb
clc
mov
clc
adc
add
xchg
and
add
sbb
mov
insb
sbb
add
or
add
push
lock
nop
cmp
mov
aaa
inc
clc
and
add
sarl
sbb
lods
mov
test
insl
sub
cmp
add
lcall
aad
add
mov
clc
mov
mov
clc
mov
add
or
clc
mov
insb
repnz
and
add
add
add
cmp
and
add
jnp
popa
add
ljmp
ret
clc
mov
xor
add
clc
pop
push
mov
lods
mov
dec
fsubs
add
clc
xor
add
add
cmp
pop
mov
mov
sbb
mov
fwait
pusha
add
aad
cmc
lea
adc
xor
add
in
ja
add
pop
sarb
add
xchg
jge
xor
add
add
inc
add
mov
addr16
mov
clc
xlat
loopne
je
sub
add
scas
out
in
pop
inc
add
mov
dec
outsl
aas
push
add
fistps
clc
inc
clc
xchg
and
add
clc
lret
inc
add
fcomip
and
add
mov
mov
mov
mov
add
and
movsl
clc
pop
clc
aas
lock
mov
push
add
clc
repnz
int3
pop
push
add
inc
clc
sar
cwtl
cmpsl
clc
pop
je
pop
out
xbegin
pop
or
add
clc
xor
add
push
add
pop
mov
add
xor
add
add
inc
add
xor
add
sbb
xchg
and
add
clc
insl
xchg
mov
inc
clc
popa
add
mov
xchg
xor
add
clc
push
add
clc
mov
xchg
and
add
pop
clc
mov
sbb
int3
or
sbb
clc
dec
test
sub
push
push
xabort
and
add
mov
fs
xor
add
sub
clc
aas
cmp
clc
adc
add
inc
add
jl
xchg
or
mov
clc
sub
add
addr16
dec
sub
jbe
mov
clc
adc
add
add
sub
clc
add
add
imul
lods
popa
add
jne
add
add
test
clc
aam
rcr
fcomps
pop
dec
test
ss
add
mov
add
cmp
dec
push
fadd
clc
mov
lret
jle
xor
pop
clc
xbegin
repz
mov
sbb
mov
add
lahf
cmc
adc
popf
xchg
pop
dec
aad
xlat
in
mov
add
adc
fildl
sub
add
sbb
mov
pop
icebp
sub
pop
pop
xchg
lahf
rorl
clc
sub
add
cmp
add
mov
nop
mov
pavgb
ljmp
pop
je
and
add
sar
adc
cmpsb
clc
gs
pop
loop
inc
add
shll
add
outsb
daa
clc
pop
mov
add
addr16
lahf
ja
stc
loope
lret
into
nop
bound
add
add
push
into
xchg
fstps
jbe
aam
cmpsl
clc
push
dec
sti
sar
pop
es
in
ja
or
shlb
outsb
jl
add
adc
add
enter
clc
dec
inc
clc
xbegin
push
aaa
vmulps
add
clc
mov
popa
add
pop
cmp
cmc
adc
add
scas
jp
mov
add
insb
cwtl
outsb
cmp
push
bound
add
cld
cwtl
sub
add
ret
clc
sbb
add
inc
add
rcr
data16
adc
clc
dec
push
data16
and
dec
sub
pop
cmp
in
cmp
jle
fisubrl
fs
cmp
inc
add
xor
add
add
inc
add
push
dec
popf
sti
adc
xor
add
clc
fs
dec
jp
xor
je
jg
clc
and
add
clc
dec
sahf
cmp
in
mov
xbegin
mov
add
add
clc
fistps
xlat
mov
clc
sar
mov
mov
add
clc
or
cld
xor
add
popa
add
and
add
aam
clc
pop
test
add
out
pop
clc
test
mov
xchg
popf
arpl
add
cmpsb
clc
push
fisubl
sti
and
add
cld
push
iret
pop
mov
push
ljmp
sbb
or
clc
nop
lahf
fnstenv
add
xor
popf
lahf
stos
xchg
fsubrs
inc
clc
jbe
inc
add
push
and
add
add
add
scas
cmp
jae
add
xchg
pop
mov
and
add
add
sbb
cltd
push
scas
push
jmp
aad
clc
mov
add
push
insb
cmp
add
push
add
out
jbe
add
out
es
and
push
jp
adc
add
mov
xchg
cmp
cmp
icebp
pop
inc
add
jecxz
push
or
stos
rclb
cmp
std
adc
add
clc
pushf
pop
sti
mov
add
add
clc
and
add
and
add
xor
add
xchg
mov
inc
add
loopne
xchg
sub
jg
add
mov
clc
mov
inc
clc
cmp
clc
rorb
cltd
jb
add
lods
add
stc
jge
push
add
add
add
clc
mov
add
mov
pop
clc
out
mov
ret
sub
jmp
sub
add
clc
or
inc
add
mov
stos
clc
cmp
jmp
add
mov
scas
or
clc
jp
aam
xchg
in
fdiv
sbb
clc
loop
in
sar
push
add
jmp
shr
sbb
add
jae
add
sar
aad
or
dec
xchg
inc
add
jmp
clc
push
add
fcoml
add
mov
jo
add
jnp
ljmp
mov
gs
stc
sub
xchg
lock
add
add
aaa
clc
jle
cli
lcall
clc
rolb
add
jne
addr16
or
cmp
push
pop
push
clc
jno
add
stc
inc
clc
repnz
and
add
add
add
cld
pop
sti
cmp
clc
xchg
dec
aam
shrl
add
fisttpl
movsl
clc
lea
add
es
inc
add
int
mov
jle
add
mov
add
dec
jge
dec
adc
push
add
sub
add
mov
adc
aad
imul
jns
aad
and
add
adc
add
inc
add
cmp
fisttps
add
hlt
sar
out
jae
add
mov
jge
lods
stos
mov
adc
mov
in
in
xor
inc
clc
inc
add
ret
adc
add
xabort
add
fs
std
repz
sarb
clc
je
cwtl
loop
enter
ret
clc
pop
pop
pop
adc
add
add
xchg
mov
clc
mov
mov
add
cmp
add
movsl
clc
fstpt
add
add
outsb
clc
mov
xor
add
clc
jb
add
jo
add
outsl
mov
add
sbb
fmull
aad
add
inc
clc
cs
clc
mov
lret
xchg
clc
mov
ds
push
add
iret
mov
adc
add
clc
mov
shlb
daa
clc
mov
clc
mov
add
add
clc
insb
lods
fadds
add
test
jo
add
xor
mov
clc
insl
shr
icebp
int
fstpl
add
imul
maxps
outsl
ja
or
out
xor
add
jle
jl
sbb
adc
add
mov
psrad
aas
fildll
clc
and
sub
clc
nop
xor
add
push
add
enter
loopne
lcall
clc
int
push
out
clc
cltd
adc
add
ret
in
test
dec
out
scas
nop
and
add
sahf
mov
clc
cmp
clc
or
sbb
or
movsbl
aad
loop
xbegin
xor
add
add
stc
mov
jno,pt
add
clc
fbstp
clc
imulb
shlb
add
pop
rorb
cmp
lret
xor
add
imul
sub
xchg
mov
test
add
add
fs
pop
popa
add
mov
stos
in
data16
xchg
filds
mov
jecxz
clc
jno
add
es
stos
nop
jnp
testb
clc
cmp
add
adc
add
add
push
add
push
add
loopne
outsb
pop
cmp
sahf
sub
sbb
clc
femms
mov
and
add
hlt
int
clc
inc
clc
in
push
or
mov
clc
stc
in
pop
mov
int
xor
add
xor
add
rorb
adc
add
xor
add
nop
in
fdivrs
clc
cli
bound
add
clc
sbb
sub
pop
jge
add
imul
cmp
clc
cli
and
add
mov
clc
and
popa
add
pop
insb
pop
adc
add
add
clc
ja
clc
jmp
add
mov
add
addr16
xchg
fisttpll
cltd
pop
in
push
xor
add
add
jle
mov
cwtl
add
add
add
xchg
jne
add
cmp
add
out
push
fwait
sub
jne
clc
lock
adc
add
or
clc
xor
lcall
add
jecxz
sar
jae
add
repnz
aaa
push
push
fs
xchg
xor
add
clc
pop
jb
add
loop
loope
pop
push
fwait
aaa
mov
add
add
test
add
stos
gs
repnz
cmp
clc
dec
pusha
add
adc
add
add
jb
add
movsl
clc
dec
mov
mov
lret
cmpsl
clc
cmp
clc
decb
out
out
nop
jp
pop
lret
mulb
sub
lods
popa
add
or
mov
gs
sub
add
xchg
ja
mov
add
test
clc
fs
test
pop
lock
hlt
fdiv
jmp
clc
jns
clc
push
lods
push
lret
fnsave
xchg
cmp
in
sbb
sub
clc
hlt
cmp
cmp
xor
add
js
outsb
jne
clc
lods
ja
sbb
sar
add
add
fidivrl
mov
aad
or
cli
and
add
into
sbb
pop
popf
popa
add
cmp
add
lret
hlt
xor
pop
mov
add
cmp
faddl
add
stc
cmp
jbe
cmp
adc
add
add
add
or
add
ss
add
ror
inc
clc
into
mov
clc
jge
clc
pop
cltd
jb
add
sub
clc
xabort
mov
icebp
cmp
xchg
fimull
cli
ss
in
sbb
sbb
clc
xchg
sbb
add
jb
add
add
iret
in
stos
mov
aas
lcall
shl
clc
clc
push
add
fadds
stos
ret
jne
or
mov
add
or
ror
push
sbb
add
clc
pop
pop
clc
jae
add
testb
aas
loopne
test
inc
add
xor
add
mov
jle
call
push
int
das
dec
jbe
leave
inc
add
pop
dec
imul
sahf
mov
add
cmp
add
lods
mov
add
add
cmp
xabort
loopne
mov
gs
mov
xor
add
add
mov
add
clc
xor
clc
cmp
add
cmp
add
push
add
fnstenv
iret
pusha
add
mov
mov
xor
mov
cmp
add
push
out
inc
add
xabort
cltd
loopne
adc
add
call
ret
jne
add
test
cmp
and
xchg
mov
lock
add
jo
add
clc
pop
stc
lcall
pop
add
add
add
adc
fnstcw
imul
mov
add
inc
add
mov
add
add
sub
call
inc
add
sti
sub
clc
jae
add
clc
push
and
mov
mov
pusha
add
xor
add
push
clc
cwtl
add
pop
push
clc
scas
into
mov
xchg
jmp
clc
xbegin
and
add
add
sub
pop
jecxz
dec
inc
add
gs
cmc
loopne
jb
add
sti
loope
push
cltd
push
in
xchg
mov
movsb
clc
in
pop
xor
gs
hlt
mov
gs
and
add
clc
cli
outsl
cmp
inc
add
push
add
f2xm1
into
inc
clc
fdivr
shl
pushf
test
or
popf
lret
das
and
add
repz
pop
jo
add
aaa
mov
inc
clc
addr16
push
flds
xchg
add
add
clc
imul
stc
xchg
loope
out
insl
ret
clc
add
add
pop
pop
lods
inc
add
jmp
jne
mov
clc
outsl
lret
rcr
jmp
clc
pop
in
fwait
push
add
inc
add
sar
clc
icebp
adc
add
cmpsb
clc
decl
mov
xchg
mov
ja
loop
mov
inc
clc
dec
pop
and
add
mov
clc
test
test
add
and
add
push
add
out
mov
add
push
add
jbe
add
mov
clc
scas
dec
fisubrs
add
xor
add
mov
add
in
cld
and
mov
adc
es
call
add
xabort
clc
sti
jge
js
add
push
add
mov
mov
mov
push
add
push
rcrl
pop
gs
imul
mov
add
sahf
data16
neg
xbegin
sbb
clc
hlt
sbb
dec
in
or
add
popa
add
cltd
cmp
std
fwait
push
popl
cmp
add
clc
add
add
add
fstps
add
pop
mov
clc
and
add
add
adc
add
clc
fdivrs
ljmp
sub
jae
add
clc
repz
movsb
clc
scas
loope
dec
hlt
ds
cmp
add
mov
cli
pop
clc
sar
mov
jg
clc
push
push
jl
repnz
mov
pop
clc
mov
insl
ljmp
stc
cmp
add
es
inc
add
scas
cltd
and
add
add
arpl
add
mov
clc
sar
loope
outsb
inc
add
mov
pop
in
jg
mov
lock
das
test
icebp
push
add
jae
add
clc
mov
call
lock
add
clc
jge
add
dec
in
lea
clc
sub
pop
clc
scas
je,pt
jne
mov
or
shrb
mov
pop
xchg
insl
clc
mov
add
inc
clc
cmp
add
mov
mov
clc
test
dec
addr16
repnz
xor
clc
movsl
clc
flds
add
fs
loope
xor
add
add
cmp
push
add
mov
arpl
add
cmp
sbb
push
mov
and
add
fnstcw
pusha
add
push
add
enter
clc
add
add
and
add
repnz
aam
add
sub
add
add
clc
clc
loopne
loope
test
add
sbb
mov
jge
add
inc
add
xchg
ret
and
stos
push
add
fisubrl
aam
test
loop
loopne
test
outsb
rcr
jne
clc
jl
repz
add
clc
gs
mov
insb
iret
xor
add
sar
insb
bound
add
in
clc
jnp
in
sbb
clc
jge
clc
jno
add
sahf
cmp
clc
or
mov
jmp
inc
add
add
add
dec
clc
pop
cmp
fwait
xabort
mov
clc
fwait
jbe
pop
sarb
sub
ds
fwait
jae
add
clc
sub
add
add
sub
add
fcompl
in
stos
sti
fstpl
xabort
icebp
fsubl
addr16
cmp
fildl
add
dec
sbb
add
cmp
addr16
sarb
int3
xbegin
sar
shlb
add
fs
cmp
mov
fadds
mov
add
mov
inc
clc
int
int3
data16
xchg
int3
cmc
bound
add
clc
xor
add
add
jle
push
add
jbe
push
push
inc
clc
pushf
mov
and
xchg
addr16
js
xchg
mov
filds
add
clc
mov
nop
xor
clc
xor
add
daa
clc
fs
aaa
xor
add
mov
adc
mov
std
dec
in
and
add
loopne
into
outsl
cmpsl
clc
xabort
pop
call
repz
cmpsb
clc
xor
add
fcomps
adc
add
add
lret
or
clc
xchg
loope
mov
clc
cmp
leave
das
addr16
cmp
ja
sbb
mulb
add
mov
add
std
push
or
jge
lret
insl
mov
push
in
imul
roll
clc
dec
pop
cmp
clc
out
lods
push
daa
clc
adc
add
add
pop
push
lock
add
cmp
in
stos
imul
dec
ret
rorb
bound
add
or
jecxz
cli
out
jmp
push
mov
clc
addr16
aaa
mov
aad
mov
clc
mov
out
jb
add
test
and
bound
add
jecxz
cmp
add
cmp
mov
push
mov
add
lods
dec
repnz
add
test
clc
arpl
add
add
add
adc
add
cmp
int3
sar
mov
clc
sub
in
iret
aad
add
scas
cmp
mov
fisttpll
clc
cmpsl
clc
fstl
add
add
push
xchg
xchg
int3
cmp
cmp
xchg
sub
dec
mov
clc
and
sub
and
add
dec
imul
add
add
ret
clc
inc
clc
outsb
cmpsb
clc
lods
cs
jle
addr16
pusha
add
ret
clc
dec
pop
fistl
clc
cmp
adc
add
fwait
in
cmpsl
clc
xor
jmp
dec
fstps
xchg
sarb
jge
xor
in
sbb
outsl
xchg
sbb
sub
das
mov
aam
add
mov
int
xchg
dec
clc
mov
xrelease
add
add
clc
inc
add
icebp
or
add
clc
dec
out
mov
add
adc
add
xlat
sub
and
mov
lea
and
add
clc
movsb
clc
xchg
pop
or
hlt
data16
iret
movsb
clc
jle
pop
jecxz
xor
clc
cmp
add
or
add
mov
bound
add
cmp
scas
lods
xchg
aam
clc
cmc
or
cmpsl
clc
sub
stc
sub
mov
clc
pushl
add
fbstp
insb
adc
add
sub
cmp
clc
aad
cmp
dec
fnstcw
push
add
mov
dec
jbe
mov
sbb
clc
cltd
test
ffree
clc
xabort
clc
add
add
push
pop
cmc
pop
std
aam
add
mov
test
ret
clc
xchg
cmp
add
adc
add
js
clc
es
dec
mov
sar
ret
clc
mov
into
nop
mov
xbegin
ljmp
dec
mov
add
inc
clc
inc
add
scas
pop
clc
jl
mov
clc
jecxz
loope
into
insb
mov
add
push
add
add
add
xchg
scas
add
add
add
cmp
jb
add
jle
stc
mov
sbb
enter
clc
pop
int
inc
clc
dec
shl
loopne
stos
push
sar
clc
fs
or
sub
clc
add
add
add
cmc
mov
add
add
mov
xlat
pop
xchg
ret
clc
sbb
add
fcmovb
clc
add
in
mov
cmp
shlb
cmp
inc
clc
stc
fwait
xchg
lret
clc
scas
fs
xchg
fcmove
sub
xlat
mov
insl
std
adc
add
add
in
cli
adc
add
push
add
xor
add
add
popf
in
lods
inc
clc
jae
add
clc
inc
clc
ret
add
pop
xchg
cmp
outsb
incl
jns
clc
cmp
adc
add
shrb
jle
jne
jnp
xor
clc
lahf
xchg
jnp
add
add
and
add
icebp
test
add
sgdtl
add
add
pop
clc
vmwrite
fucomp
clc
adc
cmp
clc
mov
jg
das
out
push
xchg
xchg
lods
mov
add
add
xlat
scas
out
addr16
mov
clc
stos
ret
scas
xchg
xchg
push
div
pop
setns
push
clc
xchg
or
clc
push
loop
mov
xor
add
add
insl
sub
clc
imul
test
jb
add
clc
or
and
and
add
add
mov
xchg
ljmp
clc
scas
adc
add
cmp
mov
in
xor
add
aaa
sub
or
jnp
out
mov
lods
push
and
xchg
jae
add
clc
lods
ljmp
outsl
rorb
dec
fsubrp
mov
mov
sub
clc
adc
test
clc
bound
add
cwtl
ret
clc
movsb
clc
xor
add
clc
pop
iret
lret
insl
mov
jbe
cmp
clc
add
add
inc
clc
dec
and
add
aaa
adc
in
jne
clc
sbb
add
adc
add
movsl
clc
mov
pop
js
shrb
add
add
insb
gs
fisubrs
jno
add
insb
xchg
pop
lret
pusha
add
pop
arpl
add
clc
lahf
into
xor
add
pushf
out
sbb
mov
pop
pop
mov
cmp
xbegin
clc
cmp
mov
fstps
xchg
cld
ds
and
jmp
xchg
mov
xbegin
add
clc
into
pushf
xchg
in
fcoms
add
clc
xchg
aas
pop
mov
fldcw
adc
add
sub
cmpsb
clc
xor
add
add
fdivl
add
je
clc
and
mov
add
mov
clc
jp
pop
jns
dec
sub
fnstcw
cmp
add
fsubs
add
add
and
add
mov
clc
lods
push
movsb
clc
dec
sub
gs
and
add
push
jmp
lods
iret
std
xor
add
add
daa
clc
jns
clc
mov
stos
cmp
dec
adc
add
cmp
mov
clc
or
cmp
add
jmp
add
cltd
mov
sar
clc
push
jp
sti
sbb
clc
lods
cmp
cmp
clc
xlat
inc
clc
movsl
clc
cmovae
add
and
clc
daa
clc
mov
lcall
clc
pop
clc
adc
add
sub
js
mov
add
clc
and
pop
mov
clc
rcr
mov
fsubp
clc
pop
cld
pop
inc
add
adc
add
xor
iret
imul
clc
fadd
clc
add
cmpsb
clc
xchg
inc
add
clc
xchg
imul
rclb
dec
cli
sbb
clc
push
add
add
adc
clc
mov
xor
add
clc
loopne
inc
add
xchg
loop
jg
xor
add
xor
aaa
push
adc
add
dec
fistl
add
xchg
je
movsb
clc
stos
aaa
xlat
xchg
js
aad
sar
clc
add
add
lcall
jno
add
add
xchg
sbb
int
jb
add
clc
pop
lock
pop
int3
addr16
mov
clc
mov
notb
add
lods
inc
add
adc
add
sub
clc
icebp
mov
scas
add
add
clc
mov
clc
push
negb
clc
xor
clc
lret
or
and
add
add
movsl
clc
add
add
mov
seto
mov
xchg
lret
xchg
inc
add
pushf
lods
loopne
sub
ror
add
setnp
adc
add
cmpsl
clc
push
add
into
iret
cmp
add
popf
in
icebp
pop
pop
push
clc
fisubrl
pusha
add
pushl
in
pop
adc
add
jo
add
inc
add
mov
clc
int3
mov
add
sbb
add
clc
pop
jmp
add
icebp
shl
clc
addr16
xor
add
add
pop
clc
jg
push
popa
add
add
add
jno
add
repnz
push
add
cmp
clc
cmp
jg
sub
mov
adc
mov
sbb
jle
fadd
clc
push
add
cmp
and
add
clc
inc
clc
xor
shr
mov
add
pop
clc
push
clc
ja
pop
mov
add
add
sbb
xchg
inc
add
inc
clc
outsl
ffreep
clc
scas
adc
add
mov
clc
loop
inc
add
xchg
ss
adc
add
clc
sub
sub
jecxz
out
aaa
fisubrl
loop
popf
pop
clc
rcrb
jnp
add
or
xor
add
pop
filds
add
cmp
sbb
add
mov
ret
clc
es
into
inc
add
cmp
clc
jno
add
push
or
mov
test
pop
das
cltd
mov
cmpsb
clc
mov
sahf
pusha
add
cmp
clc
lcall
stos
dec
add
add
sbb
nop
inc
clc
jmp
clc
lret
pushf
test
and
add
clc
sub
dec
mov
clc
stos
xchg
sets
ja
clc
loopne
adc
std
inc
add
mov
stos
mov
js
clc
mov
clc
fs
rcrl
add
mov
cmp
clc
aaa
push
pop
stos
data16
lods
stos
mov
das
dec
push
add
cmp
add
adc
add
add
int3
xor
xor
add
mov
jne
sub
add
rcrl
dec
int
add
ds
pop
das
fs
mov
add
and
add
cmp
fcomps
jns
add
sbb
add
push
clc
insl
clc
leave
ds
add
das
movsb
clc
in
pop
mov
aaa
jne
clc
hlt
push
movsl
clc
repnz
ja
add
fwait
jle
cmp
pushf
jge
xor
add
scas
insb
push
and
add
add
add
cmc
data16
rcr
insl
lret
pop
loop
fbld
add
push
loope
movsl
clc
cmp
add
cmp
pop
jle
imul
add
pop
into
addr16
cmp
cmp
ja
clc
aam
lcall
push
jge
mov
popa
add
xchg
push
arpl
add
out
in
shll
fmull
jmp
sbb
jmp
clc
mov
mov
add
jle
fldenv
jle
lret
mov
dec
mov
dec
xchg
rol
clc
in
aam
clc
fbld
add
jnp
hlt
fstps
cs
mov
xchg
scas
push
add
pop
clc
mov
sahf
mov
in
popa
add
out
mov
ja
dec
imul
clc
es
addr16
nop
pusha
add
rcrb
clc
lods
call
pusha
add
cmp
clc
iret
cwtl
sub
repz
cmp
clc
arpl
add
add
sub
mov
add
push
add
std
push
add
adc
add
add
clc
and
and
add
jl
decl
clc
cmpsl
clc
inc
add
cmp
add
add
insb
or
sbb
xchg
mov
inc
clc
stos
test
clc
fnstcw
xchg
or
xchg
rcr
loop
adc
add
clc
jl
popf
pop
in
imul
mov
adc
add
add
mov
clc
outsb
mov
cwtl
and
add
add
cmp
clc
jge
add
xchg
cld
pop
daa
clc
repz
clc
gs
ds
push
loop
sub
clc
sub
mov
push
add
xor
add
push
add
aas
sar
std
cmp
lock
insl
mov
and
add
clc
mov
out
shrb
mov
lret
add
movsl
clc
dec
jecxz
insl
lret
mov
mov
sbb
ljmp
add
daa
clc
sar
out
test
dec
enter
mov
clc
jbe
inc
add
call
clc
mov
clc
or
lods
xchg
sbb
clc
ror
clc
outsb
xchg
push
out
sbb
jl
mov
add
push
pop
jg
outsl
out
es
pusha
add
pop
loopne
push
pop
addr16
outsb
fisubrs
dec
pop
clc
cmp
cltd
mov
add
pop
loope
ljmp
ljmp
xor
add
imulb
cmp
mov
ficompl
repnz
add
xchg
cmpsb
clc
xor
add
jge
enter
add
add
add
clc
inc
add
pop
push
add
sub
lahf
mov
add
dec
pop
jecxz
pop
mov
xor
add
jb
add
add
cmp
clc
dec
xor
add
push
outsb
mov
clc
xchg
into
into
dec
fs
add
pop
push
clc
test
ss
add
add
add
add
sub
mov
sbb
das
dec
aaa
mov
mov
mov
sbb
loopne
scas
and
add
and
add
popf
shll
clc
push
movsl
clc
ret
clc
cmp
add
clc
scas
leave
lods
mov
clc
aam
add
xbegin
mov
clc
sbb
sti
cld
js
push
cltd
cmp
das
mov
popf
pop
clc
fs
adc
add
mov
add
mov
add
mov
xor
clc
stc
pop
xor
fwait
ss
jne
cmpsb
clc
in
jne
cwtl
xbegin
clc
push
jmp
mov
add
mov
push
mov
jne
in
mov
and
add
push
cmp
inc
clc
in
sbb
add
mov
push
sbb
clc
das
pop
jns
add
jnp
aas
adc
add
insb
and
add
add
mov
clc
or
inc
clc
inc
add
sbb
push
add
dec
mov
xor
cmp
push
add
xor
aam
jp
sub
mov
mov
and
add
jb
add
lret
sub
xchg
sbb
xchg
adc
clc
in
mov
clc
out
jno
add
add
xor
add
stos
sub
dec
loop
sahf
test
aad
add
adc
add
sar
fistpll
inc
add
test
jmp
pop
sub
add
sar
ret
add
push
or
sub
clc
arpl
add
aas
fcmovne
xor
add
add
and
add
cli
nop
mov
jg
pop
adc
add
push
loope
test
test
scas
fsubrs
clc
scas
xchg
fnstsw
cs
push
add
outsl
mov
add
call
or
test
add
out
xchg
sub
xor
add
jb
add
repnz
enter
pop
mov
cmp
dec
add
add
or
pop
ds
clc
popa
add
in
sbb
push
int
aaa
mov
inc
add
in
push
lret
adc
add
clc
ret
adc
add
dec
pop
mov
clc
fldl
shlb
aaa
jg
dec
jl
aas
popa
add
outsb
xbegin
mov
mov
or
in
jns
add
mov
imul
jecxz
ljmp
clc
lods
scas
dec
jmp
in
sbb
clc
nop
notl
add
mov
mov
xor
add
add
mov
dec
mov
fisttps
clc
int
nop
ds
mov
icebp
mov
mov
push
idivl
inc
clc
and
data16
sar
jns
into
aaa
into
push
xbegin
adc
add
test
add
daa
clc
mov
add
or
push
das
test
mov
mov
stc
movsb
clc
xchg
or
clc
push
psubusw
lahf
and
add
xor
add
add
mov
mov
dec
out
repz
repz
repnz
movsb
clc
sar
fldcw
adc
add
clc
and
inc
clc
and
add
add
mov
add
mov
add
add
mov
add
jnp
add
clc
nop
aam
inc
clc
fwait
inc
add
sbb
loop
call
sti
sbb
add
add
add
sti
scas
cmp
in
out
dec
stc
mov
clc
push
add
out
push
jb
add
xchg
loope
stc
test
jne
loop
test
in
or
mov
mov
clc
dec
xabort
mov
clc
in
rcll
add
and
add
mov
jo
add
add
jg
jmp
clc
jmp
jae
add
pop
mov
das
and
add
js
add
mov
clc
movsl
clc
fwait
shrl
adc
add
lret
arpl
add
cltd
outsl
lock
iret
sahf
repnz
test
add
in
pop
ds
clc
mov
dec
xor
add
dec
gs
dec
imul
sti
jo
add
clc
jno
add
add
dec
insb
in
bound
add
aam
inc
clc
cwtl
pop
sar
clc
ret
mov
clc
push
pop
jbe
fmuls
int
xchg
push
mov
test
pop
out
popl
add
cmp
das
mov
sub
sar
icebp
bound
add
cmp
add
stos
inc
clc
mov
add
ret
cmc
mov
arpl
add
add
lcall
pop
int
mov
add
sar
add
dec
iret
stos
pop
dec
jp
add
sbb
sar
nop
cs
add
mov
jno
add
jg
push
add
sbb
cmpsb
clc
push
add
cmp
clc
push
inc
clc
ljmp
add
in
dec
je
add
mov
add
jns
add
cmpsl
clc
mov
rcrb
pop
push
aaa
ja
clc
xchg
ljmp
fdivrs
mov
add
mov
sar
clc
cmp
add
iret
mov
out
cmp
push
add
test
inc
clc
out
hlt
fidivl
lods
push
add
gs
movsb
clc
sbb
fdivrs
xabort
sbb
clc
pop
das
adc
xchg
dec
ljmp
pushf
pushf
lcall
icebp
mov
aaa
loopne
cltd
idivl
sbb
mov
add
arpl
add
and
add
mov
clc
cmp
push
mov
inc
add
es
jne
cmp
add
outsb
push
add
out
fadds
add
pop
and
xor
add
add
add
je
add
add
add
sub
sbb
clc
ds
sti
cmp
add
xabort
clc
imul
clc
test
sub
add
aad
add
hlt
dec
cltd
jmp
dec
push
movsl
clc
xchg
cld
das
bound
add
jo
add
adc
add
clc
mov
jecxz
out
gs
jmp
add
adc
add
mov
clc
pushf
insl
xchg
jle
clc
add
add
clc
adc
add
clc
pop
clc
jg
outsl
sbb
inc
clc
sbb
mov
cmp
jb
add
call
mov
clc
cmp
adc
add
mov
cmpsl
clc
loope
hlt
aam
mov
fs
pop
pop
push
insl
xor
popf
push
pushf
adc
add
sub
int3
mov
fildl
add
push
add
icebp
pop
or
leave
xchg
jecxz
and
ss
cmpsl
clc
outsb
gs
call
cmpsl
clc
dec
and
add
clc
mov
add
add
add
fwait
imul
pushf
pop
clc
push
out
test
mov
clc
mov
inc
add
xchg
dec
or
add
adc
add
cs
clc
xor
iret
insl
pop
fistpl
add
test
sbb
cmp
clc
mov
cmp
jnp
lret
pushf
push
aaa
stc
out
fldenv
mov
dec
mov
add
or
pop
mov
clc
nop
mov
add
movsb
clc
movsb
clc
test
add
add
push
add
and
xor
ss
insl
or
clc
or
pop
cmp
add
test
add
cld
inc
clc
scas
insl
das
lods
dec
fs
sbb
test
or
pop
add
add
cmp
outsl
dec
pop
int
imul
jmp
push
add
popf
mov
push
add
out
sub
jge
call
clc
push
lea
pusha
add
xchg
lret
cmp
cmp
clc
insb
dec
dec
dec
push
sti
test
cmpsl
clc
jae
add
inc
add
push
add
addr16
loope
add
add
sub
cmp
pop
outsb
add
add
xor
add
and
add
add
gs
inc
clc
inc
clc
addr16
js
add
push
and
add
mov
add
add
xchg
out
jns
gs
mov
clc
ror
jo
add
add
add
sbb
in
sub
int
stos
lret
inc
clc
in
mov
xchg
pop
inc
clc
jle
cmp
clc
sbb
sbb
push
data16
jmp
and
xor
add
scas
push
add
mov
add
add
clc
loopne
push
sbb
mov
jno
add
pop
push
or
add
out
xor
add
xor
add
pop
cltd
xchg
imul
sub
or
inc
clc
xchg
push
add
jae
add
mov
clc
add
add
test
pop
and
daa
clc
repnz
out
ljmp
cmp
test
add
add
add
fs
sbb
mov
push
arpl
add
mov
idivb
adc
mov
das
jne
clc
rcll
add
push
sub
clc
into
adc
add
jg
add
aaa
push
add
ja
xchg
mov
hlt
push
lods
jecxz
or
push
cld
shll
add
and
mov
inc
clc
lods
pushf
inc
clc
add
jo
add
xchg
fsts
xchg
int3
bound
add
jb
add
adc
add
and
add
ret
push
jne
add
sub
pop
or
mov
clc
inc
clc
jno
add
adc
add
fs
jle
jae
add
xlat
clc
fmull
clc
jl
xchg
push
inc
add
mov
add
inc
clc
cmp
clc
sar
mov
fimull
jae
add
icebp
shll
add
add
and
add
bnd
add
add
and
add
pop
jp
ds
nop
or
add
insl
adc
pop
je
pop
or
cli
outsl
jbe
pop
fistpll
in
enter
js
add
cmp
clc
je
fwait
push
cmp
cmpsl
clc
repz
jge
lock
add
sub
add
lcall
pop
inc
clc
or
push
add
jb
add
add
jge
clc
adc
sahf
xchg
movsl
clc
or
into
pop
iret
fiadds
add
fucom
clc
lcall
rolb
sahf
lahf
data16
and
pop
jo
add
clc
adc
add
inc
clc
mov
xchg
xlat
es
cmpsb
clc
mov
add
jns
addr16
lea
das
cmpsl
clc
lock
add
cmc
test
xchg
mov
clc
iret
stos
rorl
mov
and
add
adc
add
sbb
add
xchg
mov
in
movsl
clc
inc
clc
xor
lret
ljmp
add
clc
mov
fnsave
add
xchg
adc
add
clc
loope
pop
xor
add
add
imul
jmp
jge
pop
in
stc
sub
fcomi
daa
clc
jb
add
add
sbb
pushf
inc
add
jbe
mov
clc
mov
mov
icebp
inc
add
into
push
mov
mov
add
cmp
clc
imul
clc
xchg
aas
insl
inc
add
push
add
mov
enter
adc
add
mov
call
add
mov
icebp
mov
dec
add
add
sti
inc
add
mov
ljmp
pushf
outsb
addr16
fdivl
setne
add
aam
clc
and
jmp
add
jns
repz
clc
sbb
aas
adc
add
or
push
imul
clc
sbb
xchg
add
add
clc
jmp
add
ljmp
jns
mov
add
cmpsl
clc
cwtl
pop
clc
sarb
mov
add
stos
xor
add
int
call
lahf
cmpsl
clc
sahf
mov
sub
push
add
test
in
push
sub
imul
outsl
gs
pop
int3
jns
filds
int
push
icebp
js
sahf
aas
push
add
std
xchg
pop
dec
aad
mov
es
popa
add
push
jno
add
clc
add
add
pop
out
stos
sahf
mov
sarl
fwait
mov
pop
jno
add
add
out
mov
or
clc
arpl
add
add
mov
clc
fs
pop
push
xor
add
add
dec
and
add
pop
ret
clc
rorb
aam
cmc
jne
inc
add
rcrb
adc
aam
sbb
out
lcall
sbb
xchg
rcrl
pop
sar
and
add
js
js
xor
add
add
sbb
pop
sti
and
cwtl
fiaddl
clc
push
mov
add
push
inc
clc
leave
mov
sub
mov
clc
test
loop
cmp
std
aad
lret
ss
push
add
mov
fildl
cmp
clc
push
add
push
xor
clc
pop
adc
add
data16
pop
outsl
and
add
cmp
clc
inc
add
inc
add
sub
xabort
jmp
cltd
in
jne
mov
pop
cltd
test
in
xchg
mov
xchg
mov
add
push
add
or
add
mov
add
aas
loope
cmp
cmpsb
clc
insb
adc
add
clc
sbb
aas
ss
or
fisttpll
clc
mov
clc
mov
mov
mov
stos
test
repnz
add
ficomps
clc
xor
add
clc
xchg
mov
imul
push
clc
cli
gs
pop
or
cli
insb
es
mov
sub
adc
add
mov
xor
push
add
clc
fs
es
and
add
clc
push
add
in
out
xor
add
add
adc
add
pop
sbb
mov
clc
dec
notb
push
pop
loop
cmp
mov
clc
sbb
enter
add
xchg
xlat
popl
clc
lret
repz
pop
in
jg
add
call
stos
cmp
add
jne
scas
idivl
jb
add
adc
add
jge
clc
sub
clc
adc
add
imul
mov
aad
sbb
clc
add
add
dec
jbe
data16
out
add
and
loop
cmpsb
clc
pusha
add
mov
cmp
add
rcr
cmc
xchg
xor
add
mov
clc
int
dec
stc
leave
test
add
sti
dec
insb
dec
inc
clc
adc
clc
xor
add
in
mov
push
add
push
dec
aad
add
mov
push
add
dec
loopne
xchg
jbe
ds
add
clc
cld
loopne
incl
add
push
clc
mov
dec
ret
clc
fwait
daa
clc
into
sbb
not
pop
cmpxchg
or
repz
fsubrs
xor
add
dec
das
or
clc
fnsave
jp
xor
add
mov
cli
daa
clc
or
rcrl
jae
add
inc
add
sub
add
mov
add
inc
clc
and
mov
add
add
sub
sub
add
scas
in
push
clc
and
add
push
add
loopne
lock
call
cmpsl
clc
xchg
test
push
or
clc
pop
clc
mov
xchg
sar
or
cli
gs
mov
gs
js
clc
xchg
stos
mov
clc
sub
dec
jbe
clc
icebp
dec
push
add
movsl
clc
adc
add
jo
add
inc
clc
mov
cmp
mov
add
add
jge
loop
jno
add
leave
out
lcall
dec
aad
add
out
dec
dec
sar
dec
enter
cltd
out
sar
pop
jmp
pushf
repnz
imul
add
test
jge
clc
push
xchg
ds
outsl
pushf
xchg
aad
lods
adc
add
xor
add
xchg
fimuls
add
xor
add
xchg
ds
aad
rep
clc
ja
clc
pop
mov
add
clc
in
lock
adc
add
nop
sub
mov
sub
inc
clc
xlat
push
clc
or
clc
rcll
add
flds
leave
or
test
imul
pop
es
sarl
nop
mov
add
cli
push
add
inc
clc
adc
add
inc
add
adc
cmpsl
clc
cmp
adc
mov
and
add
jne
jo
add
in
outsl
pop
scas
xlat
enter
or
cmp
scas
scas
adc
add
mov
clc
xchg
sbb
add
push
add
lock
clc
xchg
inc
add
dec
psubb
jnp
jno
add
add
xor
scas
cmp
sub
lret
add
add
mov
jno
add
clc
arpl
add
outsb
jbe
push
add
and
clc
hlt
mov
clc
scas
push
add
sar
mov
mov
inc
clc
jae
add
ror
xchg
iret
adc
add
hlt
inc
clc
dec
pop
push
sbb
add
test
pop
clc
popa
add
loop
clc
mov
loop
loopne
stos
jg
outsb
loopne
mov
add
cwtl
test
add
dec
rcl
mov
clc
and
push
movsl
clc
dec
mov
outsb
mov
clc
data16
push
add
add
add
bound
add
and
add
in
data16
lods
push
clc
ja
add
pop
into
loope
movsb
clc
pop
sar
mov
cmp
cmp
clc
jns
add
cmp
add
cmp
insl
js
dec
adc
add
cmp
stos
and
add
lods
psubb
mov
dec
add
add
out
je
clc
cltd
movsl
clc
mov
fcoms
add
imul
js
pop
fsubrs
jne
movsb
clc
loopne
adc
add
clc
and
add
jae
add
xchg
sarb
repnz
fimuls
dec
sbb
in
cwtl
scas
sar
push
inc
add
fincstp
cmp
add
cmc
mov
in
cmp
clc
out
loopne
push
cmp
fcom
icebp
and
add
clc
dec
mov
inc
clc
xchg
add
add
dec
fstps
push
xchg
insb
ja
clc
and
add
add
add
clc
push
add
fisubl
add
jp
xchg
adc
add
xchg
mov
push
inc
clc
fisttpl
inc
add
xor
dec
clc
in
iret
je
add
add
add
mov
push
test
fs
loopne
push
xor
add
clc
scas
push
add
shll
ret
clc
xchg
inc
clc
jns
clc
inc
clc
cli
dec
fs
int
clc
and
add
jmp
push
add
inc
add
fisubl
clc
ret
clc
mov
jne
add
dec
inc
add
push
add
pop
ljmp
test
negl
xbegin
out
xlat
imul
clc
adc
add
cmp
popa
add
jle
stos
std
sbb
aad
js
push
movsl
clc
shlb
add
outsb
cmp
add
mov
ret
clc
jp
aaa
pop
clc
inc
clc
cmp
add
insb
inc
add
push
lods
movsl
clc
pop
and
add
ret
clc
scas
cmp
clc
xchg
push
add
shll
add
or
mov
dec
push
dec
es
mov
mov
fidivl
clc
jl
fldt
sar
sbb
clc
push
rcll
add
aad
clc
lret
adc
fwait
xchg
enter
imul
xchg
mov
repnz
repnz
jo
add
sbb
mov
insl
cwtl
add
add
or
fwait
mov
clc
xor
add
inc
add
cs
and
xor
add
add
and
add
add
mov
jl
add
sbb
clc
cmp
add
repz
xchg
lods
fwait
sahf
cmp
add
add
lods
cmpsl
clc
jle
mov
add
add
or
hlt
movsb
clc
pop
lret
clc
jl
clc
loopne
rcr
push
cmp
clc
xor
add
mov
cmc
xchg
cmp
popa
add
mov
ss
in
xor
cli
mov
testb
jo
add
add
clc
leave
xor
add
mov
stc
clc
cmp
add
xlat
xchg
loope
cmp
dec
mov
add
xchg
mov
cmc
test
fimuls
stos
xchg
add
add
cld
es
push
test
addr16
pop
and
pop
xor
add
movsl
clc
arpl
add
add
sbb
mov
add
stc
cmp
movsl
clc
loope
xbegin
repz
fnstenv
add
pop
adc
add
lods
cmc
cwtl
arpl
add
xor
outsl
mov
inc
clc
stos
repnz
test
or
or
cmp
clc
mov
cmc
gs
ret
clc
lret
pop
mov
clc
cs
in
push
iret
in
loop
sbb
clc
arpl
add
add
add
out
insb
xchg
fwait
lods
or
add
and
add
clc
popa
add
test
inc
clc
lret
xchg
sbb
mov
dec
sbb
clc
enter
or
inc
add
iret
clc
pop
gs
std
mov
cmc
popf
jae
add
push
cs
fidivs
out
mov
clc
loop
jp
cmp
call
xchg
mov
inc
clc
cmp
clc
inc
clc
in
sub
daa
clc
inc
clc
dec
call
pop
jl
add
out
scas
and
add
dec
bound
add
cmpsb
clc
mov
mov
lods
push
fisubl
push
mov
and
add
push
and
add
inc
clc
jo
add
add
es
jnp
in
push
add
xchg
aad
dec
push
adc
add
int
sub
mov
pop
cmp
cmp
xlat
hlt
lock
sahf
rorl
pop
mov
cmp
add
xor
cmpsl
clc
add
cmc
push
pop
sbb
mull
clc
push
fdivl
add
lods
loop
mov
in
lahf
cld
mov
fimull
sbb
repz
pop
loopne
lahf
shll
add
js
cwtl
in
dec
mov
std
ret
int
add
fisubl
clc
fsubr
cmp
clc
xor
add
insb
mov
pop
clc
adc
fldt
add
push
add
push
into
adc
clc
into
xchg
mov
cmp
add
xor
in
xchg
scas
test
mov
cmp
xlat
or
push
imul
mov
pop
inc
clc
arpl
add
mov
clc
jae
add
xchg
inc
clc
aad
cwtl
inc
clc
aad
push
add
adc
pop
das
stc
sbb
clc
cmp
dec
mov
clc
nop
pop
xchg
sahf
pushf
lahf
mov
clc
push
clc
and
add
dec
jmp
mov
clc
mov
clc
sbb
mov
clc
jecxz
sbb
add
cmp
test
pop
pop
dec
mov
das
cmp
add
add
push
add
mov
inc
add
cmp
jne
inc
clc
es
sbb
add
sar
push
pop
lock
mov
cmpsb
clc
jo
add
add
stos
call
divl
add
scas
jg
xchg
mov
add
push
cmpsb
clc
xor
add
sbb
cmp
aas
lret
hlt
push
add
xor
add
add
jne
lods
filds
add
clc
pushf
push
add
adc
add
mov
xbegin
gs
or
adc
add
push
add
push
jae
add
push
add
bound
add
mov
popf
mov
jl
inc
add
stc
jo
add
loope
outsl
shlb
clc
aas
scas
jns
xchg
xor
add
jp
clc
xlat
std
mov
in
xor
add
add
mov
clc
and
add
gs
cmpsb
clc
notb
fildll
clc
ss
clc
mov
add
aaa
ja
add
cmpsb
clc
ss
push
push
adc
add
movups
add
add
frstor
add
faddl
movsb
clc
and
add
mov
cld
push
add
cmc
rcrl
pop
clc
adc
add
push
add
and
add
test
gs
out
cmp
stc
test
sub
add
das
int
nop
test
inc
add
add
sar
popa
add
or
clc
outsl
ja,pt
add
fs
mov
clc
ljmp
lret
push
add
cmp
xchg
xchg
lret
xor
add
clc
sar
clc
sbb
clc
stos
sahf
outsb
pop
jmp
push
add
incb
iret
pop
mov
add
inc
add
lcall
xor
cmp
xchg
sbb
mov
imul
mov
pop
pop
mov
add
add
cmc
mov
add
es
leave
leave
jp
fldcw
inc
clc
ret
clc
dec
add
clc
fidivl
ss
add
movsl
clc
nop
pop
jl
clc
repz
add
clc
jb
add
clc
fs
dec
sar
in
mov
in
inc
clc
sub
mov
xlat
mov
data16
pop
add
add
shll
add
js
mov
sub
xlat
jo
add
cmp
xchg
jge
fs
inc
clc
clc
mov
add
idivb
enter
push
popa
add
push
cmp
xchg
pop
imul
cmc
sub
add
jg
pop
sar
out
rorl
jmp
add
pop
iret
imul
add
add
sarl
aam
clc
mov
mov
clc
out
sub
add
nop
pusha
add
inc
clc
cwtl
jno
add
clc
out
stos
rcr
cmp
cmp
add
cltd
cli
push
add
xchg
pop
loope
fstps
add
add
add
pop
sti
jecxz
push
and
add
adc
add
pop
call
clc
xchg
lret
clc
fiaddl
jge
clc
jbe
fnstenv
add
push
into
mov
mov
iret
test
fs
pop
cltd
loope
xchg
inc
add
lcall
jecxz
push
outsl
std
and
add
add
add
bound
add
add
cmpsl
clc
adc
add
ss
xchg
dec
push
movsl
clc
imul
add
sarl
clc
xbegin
add
mov
add
das
or
bswap
xchg
cld
int3
in
lods
or
clc
pop
adc
add
outsl
cld
xor
clc
fisttpll
or
pop
adc
add
cmp
fidivrl
out
pop
clc
mov
add
clc
xchg
push
cmp
pop
clc
push
add
imul
mov
js
int3
add
add
push
clc
jge
clc
js
add
add
clc
and
add
add
push
and
clc
xchg
sub
xor
clc
in
cmp
add
arpl
add
add
add
add
clc
sub
push
addr16
cmpsl
clc
mov
or
sub
aam
push
clc
push
cmp
mov
clc
xchg
test
jae
add
repz
push
movsl
clc
aad
add
mov
add
mov
add
icebp
sbb
outsl
cmpsb
clc
iret
aam
pop
cmp
clc
jb
add
aas
in
jno
add
es
cwtl
inc
clc
out
push
dec
enter
jno
add
add
mov
outsb
lods
push
clc
cli
out
mov
das
test
add
add
add
mov
daa
clc
sub
pop
es
cmp
sub
clc
addr16
hlt
mov
sar
add
dec
std
cmp
repz
cmp
data16
push
add
mov
cmp
cltd
jle
lea
inc
clc
lret
jnp
xchg
pop
push
add
push
add
push
insl
mov
sub
inc
clc
or
sbb
clc
pusha
add
push
add
cmp
and
add
movsl
clc
and
add
fs
clc
sub
add
ficompl
add
test
cmp
push
sub
pushf
scas
mov
clc
sti
pusha
add
inc
clc
out
mov
inc
clc
cmp
add
aad
dec
xor
adc
add
sbb
add
dec
aad
add
mov
cmp
add
fwait
cmp
add
sbb
push
insb
push
xchg
nop
scas
sub
and
add
clc
dec
enter
daa
clc
adc
add
cmp
clc
jl
jne
and
add
add
xchg
dec
inc
add
nop
inc
add
push
inc
add
sub
add
push
add
hlt
imulb
clc
push
pop
nop
xor
add
cmp
sarb
mov
iret
dec
pop
xchg
jnp
add
push
add
or
add
xor
add
clc
ret
clc
clc
mov
clc
jb
add
clc
in
inc
clc
mov
jnp
clc
adc
add
sub
jno
add
add
mov
ja
clc
dec
outsb
or
add
mov
jne
adc
add
fs
mov
mov
movsl
clc
adc
add
add
in
pop
cmp
push
scas
daa
clc
inc
add
fists
sub
add
sbb
xabort
clc
cmp
jns
aam
and
add
clc
xchg
mov
xchg
push
jb
add
pop
add
add
clc
jno
add
mov
popa
add
push
add
ja
cltd
lahf
and
add
clc
cmp
es
fwait
outsb
and
xchg
repz
fisttps
push
mov
call
push
std
xor
add
cmp
icebp
stc
sbb
and
add
add
add
cmp
test
fwait
imul
add
adc
add
inc
add
cmpsl
clc
repz
add
add
cmp
clc
mov
add
jnp
jmp
js
vcomiss
sub
call
clc
xbegin
push
adc
add
mov
xor
add
and
add
add
add
jbe
mov
add
push
add
in
or
add
mov
fwait
sub
push
add
ss
add
lock
clc
sub
add
ret
clc
out
dec
and
add
add
clc
test
mov
pop
cmpsl
clc
cmp
clc
mov
dec
jo
add
mov
pushf
insb
mov
sbb
add
sbb
jb
add
nop
push
dec
stc
adc
add
repz
clc
jno
add
add
dec
xchg
push
clc
mov
add
nop
movsb
clc
in
nop
ljmp
and
add
xor
add
push
add
leave
add
sub
mov
clc
rclb
add
daa
clc
dec
bound
add
add
xchg
sub
gs
iret
or
mov
out
jnp
and
add
out
push
jmp
cmpsl
clc
pop
insb
sar
adc
add
add
aam
add
clc
movsb
clc
xor
clc
lahf
fstpl
cmpsb
clc
sub
jge
clc
out
ljmp
jns
add
aas
jecxz
shll
add
adc
add
lock
testl
fcmovbe
mov
cs
clc
in
and
push
add
into
imul
push
add
xor
add
clc
clc
sahf
pop
push
clc
inc
clc
or
mov
cmp
outsl
cmpsb
clc
ja
push
add
imul
push
add
leave
mov
clc
mov
das
pushf
mov
fisubrl
and
add
out
std
push
add
or
clc
in
sar
clc
ja
add
cmp
add
push
add
cmp
shl
clc
into
cmc
mov
jge
push
add
fs
fadds
imul
add
clc
ret
clc
or
add
add
std
inc
clc
enter
lock
aaa
ja
dec
aam
clc
add
xchg
xor
add
and
lock
clc
sbb
dec
cmp
loope
fidivrl
loope
dec
jnp
clc
push
add
push
add
cmp
add
scas
add
inc
add
loop
icebp
jle
das
in
mov
int3
fistps
add
enter
lret
clc
aaa
xchg
stos
nop
ds
imul
pop
fwait
jmp
dec
call
xlat
dec
push
add
cmc
inc
add
addr16
ss
sar
inc
clc
and
cmpsb
clc
push
cmc
movsb
clc
cmp
clc
jge
clc
out
cmp
push
clc
push
lahf
pop
mov
add
in
iret
jbe
into
data16
out
mov
sub
fnstcw
cmp
fmul
outsb
dec
cmp
aas
mov
add
icebp
cmp
es
jmp
cmp
test
cmp
fidivrl
add
inc
add
nop
or
add
out
xor
adc
add
clc
call
test
adc
add
mov
cmpsl
clc
and
rcpps
add
add
dec
jmp
or
mov
aad
vcomiss
xor
add
xchg
inc
add
xchg
sub
xchg
repz
mov
into
adc
cmp
jns
lret
sub
clc
jo
add
add
add
adc
add
add
clc
insl
push
add
mov
add
mov
outsb
push
push
jbe
mov
movsl
clc
adc
add
icebp
or
and
stos
xchg
daa
clc
cmp
pop
push
add
push
add
fdivrp
inc
clc
imul
inc
add
push
add
insl
dec
jg
dec
icebp
add
push
adc
add
dec
pop
or
clc
test
xchg
mov
jp
lods
xchg
dec
clc
pop
sbb
out
jmp
divb
cmp
and
add
push
add
xbegin
adc
add
jl
add
mov
clc
xchg
jg
add
mov
jmp
ret
add
add
imul
add
cwtl
sbb
mov
je
outsl
cmpsb
clc
inc
clc
add
test
cmp
test
sti
or
add
or
js
mov
add
pop
xchg
xbegin
mov
dec
ret
clc
ljmp
add
in
dec
pop
adc
add
pop
cmp
cmp
dec
or
ja
add
pop
sarl
or
add
sbb
inc
add
adc
add
mov
jb
add
clc
call
jb
add
mov
add
inc
add
or
das
xchg
shl
or
add
popf
xor
add
add
aaa
lret
clc
or
clc
jbe
xchg
and
add
clc
xchg
ljmp
xabort
aaa
mov
xor
add
mov
clc
in
push
clc
jge
add
cwtl
add
add
clc
jno
add
ljmp
inc
add
jg
clc
pop
negl
ret
clc
call
int
add
xchg
mov
add
out
outsb
mov
rcll
add
insb
daa
clc
hlt
lods
inc
clc
push
add
sub
push
icebp
movsb
clc
mov
clc
sbb
pushf
shrl
adc
add
std
xchg
testb
clc
push
push
add
aas
dec
push
sar
add
icebp
adc
add
clc
lahf
push
or
xbegin
cmp
add
and
add
clc
inc
clc
decb
mulb
add
jno
add
imul
clc
jl
cmpsb
clc
pop
cmp
lea
add
mov
mov
cmc
mov
pop
out
inc
clc
lods
lods
jecxz
mov
add
mov
inc
clc
mov
add
ljmp
add
insl
push
clc
movsl
clc
and
add
pop
fldt
add
lret
push
clc
jge
clc
fsubs
cmp
lcall
and
add
clc
dec
xlat
popf
mov
clc
stos
dec
push
stos
popa
add
push
add
inc
add
xor
add
add
addr16
sbb
clc
mov
xchg
inc
clc
ja
or
add
mov
xor
push
xor
lret
rdmsr
add
jnp
fiaddl
add
clc
sbb
xor
add
or
clc
ss
mov
xchg
mov
add
int
mov
lods
push
cltd
sub
mov
add
notl
lret
xor
add
clc
ja
add
adc
add
cmp
pop
icebp
aas
xchg
je
mov
lock
pusha
add
sub
push
add
push
add
aam
pop
cmpsb
clc
adc
sbb
push
sbb
fidivs
add
inc
add
push
clc
or
cmp
or
clc
inc
add
and
add
ret
add
gs
mov
mov
add
adc
add
cmp
adc
testb
add
xchg
icebp
dec
adc
add
dec
and
out
xor
add
clc
adc
add
clc
aaa
call
clc
repnz
clc
cld
sti
cld
xabort
add
lcall
push
adc
out
cmp
clc
pop
fs
mov
clc
sub
clc
gs
jle
push
cld
cmp
sub
cld
icebp
cli
cmp
ljmp
jnp
add
fsubl
cld
stos
icebp
outsb
xchg
clc
mov
and
inc
add
xor
add
xchg
mov
or
push
clc
jno
add
clc
mov
cmp
mov
cmc
and
scas
sub
out
or
lahf
sar
in
push
clc
cmp
out
xor
add
hlt
cmpsl
clc
jmp
push
ffree
clc
imul
cmp
mov
and
xor
add
sbb
add
std
clc
popf
fucom
clc
lahf
sub
leave
in
fwait
push
add
xor
add
ja
clc
popf
mov
clc
mov
push
add
adc
add
sbb
jns
xchg
add
and
add
std
mov
jo
add
add
mov
clc
insb
jo
add
clc
adc
clc
enter
mov
clc
jns
push
mov
clc
add
or
out
repz
add
rcrb
into
das
cli
inc
add
out
xor
add
adc
add
clc
push
pop
std
cmp
jo
add
cmp
adc
add
ret
mov
std
add
add
clc
hlt
mov
add
scas
xor
fs
add
xchg
repz
mov
inc
clc
xchg
jmp
clc
adc
add
inc
clc
imul
clc
popa
add
dec
ficoms
add
sahf
xor
add
sub
add
fimuls
fcmovu
sti
lea
pop
ljmp
add
push
clc
dec
call
add
xabort
clc
mov
or
clc
mov
test
movsl
clc
cmp
bnd
hlt
pushf
loop
ds
push
add
mov
lock
inc
add
lahf
inc
clc
faddl
add
clc
sahf
sbb
add
push
add
fcoml
add
dec
inc
clc
adc
add
nop
cmp
mov
add
pusha
add
pop
test
add
xor
add
add
add
sbb
add
leave
mov
out
mov
cli
cmp
outsb
inc
clc
cmpsb
clc
jno
add
add
dec
dec
ret
clc
scas
mov
xor
stc
outsb
or
lret
test
es
push
add
clc
jecxz
movsb
clc
xor
add
stos
push
clc
inc
clc
lret
in
mov
clc
xchg
pop
lods
add
add
cmp
push
mov
add
mov
xchg
adc
push
mov
and
add
clc
nop
roll
add
add
sub
add
xchg
fisttps
sub
aad
adc
clc
jp
add
clc
jge
clc
icebp
cli
xchg
pop
repnz
and
mov
xlat
sub
push
dec
sub
add
cmp
push
clc
or
ds
cmpsb
clc
cmc
imul
clc
mov
cmp
clc
inc
add
mov
pop
pop
imul
mov
int3
stc
loope
sar
clc
fdivrs
sub
clc
xchg
in
mov
add
mov
lret
adc
add
add
imul
test
pusha
add
daa
clc
pushf
fnstenv
or
clc
jno
add
clc
scas
mov
bnd
xchg
and
sbb
mov
add
add
movsb
clc
dec
outsl
xchg
adc
add
clc
mov
movsl
clc
xchg
test
add
xchg
aas
ret
clc
scas
jp
clc
cmpsl
clc
fildl
xlat
mov
push
add
add
add
scas
icebp
xchg
or
mov
cs
sub
ljmp
hlt
push
xchg
cltd
adc
add
add
lret
inc
add
hlt
repz
push
decl
clc
cmp
clc
sub
loop
inc
add
mov
shrb
clc
int3
lret
jae
add
inc
clc
sbb
add
ja
or
add
out
iret
rclb
add
add
mov
sub
jmp
pop
clc
cmpsb
clc
ret
sar
cli
int3
and
add
jns
shl
clc
inc
clc
dec
sti
add
add
inc
clc
sbb
fcmovu
test
add
sbb
clc
inc
clc
add
mov
clc
and
add
adc
add
add
jb
add
cmp
add
addr16
into
std
call
or
clc
nop
cmp
lcall
clc
fst
xor
cmc
xchg
pop
lahf
mov
add
jge
and
add
add
out
push
xor
add
add
xor
add
jnp
or
sahf
inc
clc
push
add
ljmp
out
cwtl
ret
ja
negb
mov
repz
clc
pop
int3
jbe
add
inc
add
mov
aaa
fcmove
aad
push
cmpsl
clc
push
add
xchg
adc
add
clc
movsb
clc
mov
add
add
mov
fcomp
fwait
notl
movsb
clc
mov
outsb
cli
lret
pop
mov
popf
sbb
mov
inc
add
testb
add
test
out
mov
push
clc
fadds
add
jbe
clc
dec
cmp
mov
add
fsubrp
mov
xchg
movsb
clc
xchg
cmp
sub
int
xor
add
lsl
add
cs
clc
pop
sbb
clc
dec
xchg
and
add
adc
add
add
cmpsb
clc
insl
inc
add
lock
add
xchg
sbb
dec
sti
lret
call
mov
cmp
mov
sbb
bound
add
inc
clc
or
jmp
cmp
jmp
or
arpl
add
push
add
pop
xor
add
loop
sub
clc
xchg
mov
clc
xchg
jmp
xor
add
ret
clc
repz
jne
dec
pushf
xchg
ret
clc
sahf
cmp
clc
es
imul
inc
add
xor
add
add
fadd
clc
cltd
jae
add
adc
add
sar
add
pslld
add
mov
insb
inc
jb
fwait
jmp
sub
aam
clc
mov
push
add
sar
ja
add
add
clc
repnz
inc
add
sbb
insl
movsb
clc
mov
cmp
in
xor
add
add
and
add
clc
cmc
push
add
dec
mov
add
dec
in
sbb
add
ret
lret
adc
cld
add
js
popf
xchg
dec
shl
sbb
mov
add
pop
add
push
lret
add
aas
pop
clc
dec
mov
clc
sar
jne
test
push
test
and
cmp
jp
clc
mov
jmp
jge
sahf
in
mov
into
ljmp
ss
data16
mov
mov
movsb
fwait
jmp
sub
clc
pop
mov
ret
clc
pushf
mov
fwait
jmp
dec
and
mov
clc
jl
add
mov
xor
add
xchg
mov
push
add
cs
out
pop
pop
clc
xor
add
dec
fcomip
add
add
inc
clc
xchg
dec
mov
roll
clc
insl
cld
push
jmp
fwait
jmp
lods
icebp
aad
xor
fwait
jmp
xor
dec
sub
mov
fwait
jmp
push
stos
stos
sbb
fdivs
xchg
rorl
je
movsb
clc
and
add
mov
fimull
add
mov
xchg
popf
jp
js
mov
jle
clc
inc
clc
dec
sub
push
fwait
jmp
jp
aaa
sub
xabort
jno
add
sub
popf
int
jmp
add
add
add
lret
lock
lcall
out
mov
dec
lret
arpl
add
lods
fwait
jmp
sbb
outsl
aas
das
jmp
mov
add
push
fwait
jmp
sub
adc
push
add
dec
daa
clc
xabort
aaa
dec
out
add
add
add
cmp
lret
cld
push
add
inc
clc
mov
add
cmp
clc
loop
clc
mov
add
add
out
push
and
cld
push
ret
cmp
mov
mov
fwait
jmp
push
add
mov
add
inc
add
pop
cmc
fucomi
inc
clc
jno
add
hlt
int3
cmp
adc
add
add
outsb
cmp
clc
sahf
movsl
clc
in
adc
or
sub
cmp
stos
repnz
sbb
movsl
clc
rcl
inc
add
inc
add
cmp
clc
sti
test
pop
popf
inc
add
pop
cli
inc
add
fwait
mov
clc
add
fcomps
add
sahf
mov
arpl
add
push
add
jb
add
pop
insl
add
add
and
add
sub
dec
cltd
jb
add
sub
dec
rorb
test
out
xabort
xchg
pop
mov
add
clc
inc
add
flds
test
sbb
pop
mov
stc
add
repz
clc
push
push
ret
pushw
jno
add
xchg
dec
add
add
ja,pn
in
dec
into
lock
shrb
in
popf
cmp
clc
add
add
inc
add
sbb
xbegin
sbb
add
in
xchg
sbb
clc
push
add
sbb
clc
inc
add
and
add
inc
clc
cmp
xor
add
cmp
inc
clc
xchg
push
add
fwait
jmp
push
pop
sbb
mov
dec
push
fwait
jmp
or
mov
add
mov
inc
clc
sar
xchg
xchg
roll
add
mov
mov
fcoml
add
cmp
pop
sub
ret
clc
cmpsb
clc
and
add
stos
jge
jae
add
ja
clc
je
push
add
iret
add
add
imul
pop
repnz
cli
sbb
clc
push
in
sub
leave
pop
stos
insl
cmpsb
clc
call
clc
xchg
dec
notb
out
popf
cmp
add
pusha
add
int3
loopne
sbb
clc
inc
add
mov
sub
pusha
add
cmp
push
decl
aad
inc
add
jge
loopne
xchg
stc
enter
lods
jo
add
loop
xlat
jecxz
pop
clc
jecxz
xchg
jg
data16
jge
add
out
insl
faddl
add
cli
add
add
in
sbb
ljmp
add
ds
clc
dec
test
movsb
clc
adc
clc
pop
and
add
clc
test
mov
clc
stc
push
add
jecxz
cmp
mov
ljmp
inc
add
mov
movsb
cmp
pop
pop
add
fdivs
and
mov
add
clc
cmp
mov
fldt
cmp
jb
add
push
add
push
add
mov
clc
mov
test
fcmovnu
pop
push
cld
ljmp
adc
add
sub
pop
arpl
add
shld
sahf
mov
adc
add
pop
push
add
jo
add
add
cmp
lret
add
sub
add
fwait
jmp
nop
stos
push
add
inc
clc
dec
mov
add
add
das
fyl2x
adc
add
das
jmp
dec
fldcw
dec
adc
add
sbb
mov
add
push
inc
adc
mov
cmpsb
clc
and
add
xabort
fcoms
add
mov
add
clc
std
fcom
xor
add
push
add
add
add
sar
clc
pop
jmp
stos
pop
in
cmp
push
mov
clc
mov
test
jae
add
cli
inc
clc
jne
mov
clc
pop
nop
hlt
dec
add
push
movsl
clc
mov
insb
fwait
jmp
push
lret
xchg
scas
inc
add
sub
shlb
add
dec
pop
call
clc
jne
push
add
xchg
mov
add
mov
fdivr
nopl
inc
clc
rclb
add
aam
and
add
cli
sbb
mov
fwait
jmp
ja
add
adc
add
fsubs
clc
imul
jmp
or
dec
cmp
mov
clc
popf
fdivs
mov
push
or
clc
add
add
xabort
clc
mov
clc
sub
mov
add
sbb
add
add
scas
mov
insl
push
cwtl
xbegin
testl
stos
push
ret
add
or
clc
xchg
mov
sub
inc
clc
add
add
dec
mov
add
stos
clc
imul
add
lcall
add
add
push
bound
add
push
clc
sahf
ja
add
add
clc
add
add
pop
and
mov
xchg
inc
clc
and
add
add
add
inc
clc
test
clc
lods
sbb
pop
sbb
mov
dec
sar
loop
cmp
add
inc
clc
cmp
lret
clc
test
jns
add
enter
clc
add
add
clc
cs
add
cmp
dec
nop
stc
pusha
add
mov
clc
inc
clc
dec
sti
imul
or
add
adc
add
cmc
inc
add
jne
clc
mov
add
add
mov
in
mov
out
sbb
add
fstl
clc
ret
sub
clc
ja
clc
sub
push
jne
fwait
jmp
das
add
sbb
mov
clc
xchg
pushf
ja
loope
mov
cmp
mov
rcrb
cmp
mov
clc
into
out
jle
adc
rolb
mov
add
add
fwait
jmp
test
xor
or
adc
xchg
das
roll
push
insl
xbegin
add
test
mov
clc
nop
push
out
insl
mov
clc
xchg
add
add
jecxz
mov
add
fwait
jmp
movsb
clc
mov
arpl
add
clc
out
push
clc
lods
cmpsb
clc
add
mov
clc
adc
add
pop
sbb
gs
ljmp
hlt
pop
iret
sub
add
add
clc
push
inc
add
data16
cmc
sub
jns
jg
push
add
pop
clc
cmp
fstl
daa
clc
out
popf
cmp
int3
mov
mov
movsb
clc
cvtps2pd
add
lods
icebp
stc
pop
adc
add
clc
push
leave
decl
adc
add
mov
adc
add
push
mov
popf
mov
clc
test
in
and
add
fcoml
add
je
icebp
xchg
cld
das
stos
pop
jl
clc
xchg
sub
jae
add
adc
add
jb
add
lods
aam
push
jns
add
cmp
mov
add
add
popa
add
mov
add
add
sar
aam
clc
fistpl
inc
clc
mov
scas
adc
add
jmp
clc
push
dec
sar
aad
clc
test
add
add
inc
clc
jne
mov
mov
fwait
jmp
mov
push
xchg
mov
test
pop
test
clc
cmc
xchg
sub
jge
clc
mov
clc
fidivrl
je
clc
int3
mov
push
and
add
clc
pop
movsl
clc
sub
push
cmp
cltd
data16
fbld
add
add
add
clc
xor
enter
clc
aad
sub
sar
or
add
add
pop
fcmovnb
clc
xchg
dec
ret
clc
fildll
gs
sbb
test
add
add
std
faddl
jmp
add
add
lret
addr16
cmp
add
add
fwait
inc
add
mov
data16
add
add
add
loope
cmp
xchg
ret
clc
inc
clc
fst
mov
mov
or
jmp
sub
add
xchg
jle
push
test
xchg
push
rol
clc
scas
and
ss
mov
mov
push
pop
jnp
clc
adc
add
cmp
adc
cmp
clc
bound
add
clc
enter
inc
clc
in
notl
sar
cmp
pop
ret
clc
test
mov
push
add
fsubrl
aad
clc
and
out
push
xor
clc
sar
lock
push
cmp
fwait
jmp
data16
int3
mov
fidivrs
pop
adc
sbb
jmp
add
cld
push
ret
test
and
add
inc
clc
arpl
add
clc
dec
sub
jo
add
das
ss
jb
add
add
add
mov
gs
dec
es
cwtl
imul
mov
clc
cmp
push
sar
sub
mov
movsl
clc
cmp
clc
jge
rcrb
jmp
pop
cmp
stos
shrl
push
arpl
add
movswl
fwait
jmp
jp
inc
clc
fiaddl
add
push
add
scas
mov
inc
add
aam
cmp
loopne
mov
clc
out
dec
int3
loop
std
xchg
sub
xor
add
sub
ret
clc
sarl
add
imull
decl
imul
add
jns
ret
add
sbb
add
rcll
add
mov
jnp
repnz
clc
mov
test
mov
xchg
shl
adc
add
fdivl
cmp
cltd
push
clc
mov
sub
setl
add
decl
add
add
add
sbb
add
cmpsl
clc
cmp
ja
lret
fwait
jmp
adc
adc
lret
clc
mov
add
clc
push
clc
stos
inc
add
lods
int
sbb
add
mov
add
add
push
pusha
add
int3
clc
js
xchg
ljmp
mov
add
xor
add
jo
add
fs
inc
clc
sub
jmp
pop
adc
add
mulps
fsubl
sar
dec
mov
xor
add
add
jb
add
loop
mov
push
sbb
loop
fwait
jmp
sub
and
clc
bound
add
mov
push
sahf
and
add
std
imul
mov
mov
jp
clc
push
push
dec
arpl
add
add
clc
push
clc
xchg
loopne
adc
cwtl
out
dec
pop
xor
add
fwait
jmp
ja
cwtl
sbb
popa
add
mov
add
dec
mov
add
fisubs
push
clc
ss
clc
jo
add
clc
xor
add
das
fimull
xchg
or
clc
ficomps
sti
rcrb
mov
lahf
mov
or
add
dec
fldenv
add
clc
mov
cmp
ror
pop
clc
cmp
rol
clc
fnsave
add
cmp
mov
lret
xor
aaa
xchg
push
scas
mov
pop
and
add
pop
clc
xor
or
add
sub
dec
mov
push
add
fwait
jmp
mov
clc
cmp
mov
clc
gs
fs
adc
add
xchg
outsl
mov
push
ret
das
xor
add
cmp
or
clc
fdiv
popa
add
mov
mov
jecxz
push
add
push
sbb
icebp
lahf
data16
fs
xabort
xchg
ds
add
add
add
adc
add
add
dec
std
bound
add
add
cmpsb
clc
pop
insl
cmpsb
clc
adc
sbb
add
add
add
ret
dec
sarb
sub
add
push
add
out
sub
add
add
aas
sar
add
xlat
lret
shl
clc
decl
mov
adc
jmp
inc
sub
add
js
cld
inc
add
movsb
clc
jg
add
and
add
sub
push
add
jl
cltd
decl
jge
add
pop
sub
popf
sub
add
neg
xchg
test
cmpsb
clc
scas
jb
add
imul
insl
jg
clc
mov
mov
iret
and
imul
adc
add
add
add
aad
or
add
es
xchg
outsb
bt
xchg
int
leave
fisttpll
add
clc
jg
hlt
mov
lahf
add
xchg
add
add
add
mov
push
clc
loope
movsb
clc
push
ljmp
xor
add
dec
xchg
cmp
push
cld
push
ret
mov
push
inc
add
into
ds
cmp
push
sub
add
jmp
pusha
add
mov
sub
add
stos
jle
push
push
fisttpll
in
addr16
cmp
clc
pop
loope
add
xabort
dec
adc
add
cmp
pop
or
add
call
sub
jmp
sub
push
sub
test
pop
shrb
cltd
outsb
jmp
ret
clc
and
add
xchg
xchg
cmp
jp
lcall
add
jo
add
add
add
clc
lock
lret
fucomp
jne
dec
fildl
mov
xor
add
pusha
add
push
add
sbb
push
mov
inc
add
jp
mov
add
pop
clc
pop
cwtl
xchg
xbegin
dec
int3
enter
and
add
inc
add
aam
push
push
ret
and
push
clc
bound
add
inc
add
stos
daa
clc
xchg
or
jae
add
clc
pop
test
add
mov
clc
push
pusha
add
in
test
clc
movsb
clc
push
ss
sbb
push
adc
jmp
add
dec
dec
sahf
and
add
add
mov
xor
and
add
mov
xlat
sbb
out
xchg
sahf
jg
clc
call
push
ret
add
sub
mov
in
pop
mov
add
popf
sub
in
data16
sbb
in
into
lea
add
int3
hlt
hlt
imul
add
inc
clc
cmc
out
mov
pop
clc
pop
fdivs
dec
pop
push
add
imul
adc
add
int
add
inc
clc
out
scas
or
lahf
inc
add
cld
or
inc
add
cmp
scas
loopne
dec
mov
add
stc
lods
push
mov
clc
shrb
jle
add
add
gs
adc
add
imul
clc
dec
cwtl
adc
add
and
fcmovbe
clc
mov
test
lret
or
dec
aad
cmp
out
mov
bndldx
and
add
into
push
sbb
ret
nop
jg
jno
pop
imul
inc
clc
out
adc
mov
clc
fists
add
add
add
cmp
add
jnp
sbb
xlat
add
bound
add
pop
or
rcrb
fdivl
or
fimuls
clc
xchg
out
inc
clc
fdivrs
pop
clc
cmpsb
clc
push
mov
decl
fwait
jmp
jp
dec
int3
lret
clc
mov
sar
fistpl
inc
add
fists
pop
data16
into
lret
add
push
add
outsb
or
cmp
std
arpl
add
mov
add
cltd
xchg
imul
mov
add
cmp
dec
inc
add
rol
clc
lods
push
mov
cmc
notb
xor
add
push
mov
add
add
sar
sub
sahf
or
xchg
scas
adc
add
sbb
and
add
dec
test
lods
scas
mov
repz
loopne
out
xor
jge
add
xlat
inc
add
push
clc
shl
fstpt
inc
add
pop
mov
insl
je
add
and
add
scas
push
notb
add
insl
add
add
clc
ja
add
shll
clc
cmpsb
clc
aam
clc
int3
cmp
add
in
es
jge
add
cltd
clc
jp
mov
pop
stos
popf
xor
add
cmp
clc
push
jmp
es
das
jecxz
mov
jmp
add
cltd
sbb
add
fs
and
add
mov
add
or
sarb
clc
cwtl
pop
clc
sti
mov
adc
in
inc
clc
in
pop
shrd
ss
gs
sbb
lret
or
fwait
jmp
sub
jmp
cmovp
clc
imul
mov
jno
add
test
jp
add
fmul
xchg
jo
add
popa
add
mov
pop
or
cmp
aad
push
int3
dec
cmpsb
clc
xabort
add
add
mov
add
iret
arpl
add
aad
push
iret
sbb
clc
js
cmp
mov
add
dec
sbb
clc
sahf
push
and
add
clc
icebp
clc
dec
add
xchg
mov
cmp
clc
pusha
add
xor
cmpsb
clc
sub
add
fs
es
push
jg
add
dec
dec
push
imul
jge
out
mov
add
adc
add
xor
add
push
ljmp
sub
add
in
add
add
add
xor
add
clc
mov
rcl
pop
add
cmp
in
mov
xchg
loopne
aad
in
xor
clc
pop
sub
ss
stos
out
ret
lret
mov
cld
push
ret
je
es
clc
add
add
mov
cmp
testl
stos
xor
add
insl
call
clc
cmpsl
clc
and
add
add
clc
ficomps
test
mov
fwait
jmp
add
add
inc
add
fcoml
xchg
lahf
pop
ret
xchg
inc
add
mov
dec
and
add
enter
mov
or
jmp
and
add
xchg
add
add
mov
popf
test
dec
mov
rolb
xor
xchg
jbe
cmp
fsubl
sub
clc
lahf
add
add
xchg
sub
add
add
add
cmp
fwait
jmp
or
push
or
add
adc
add
clc
pop
inc
add
sub
sub
lods
push
add
mov
aas
mov
aaa
adc
add
add
add
lea
sbb
clc
cmp
mov
jo
add
mov
pop
cmpsl
clc
adc
add
mov
jae
jmp
insb
stc
mov
add
add
das
ffreep
clc
jb
add
or
dec
mov
pushf
jle
clc
arpl
add
sarl
sub
add
dec
sti
sub
popa
fwait
jmp
sub
fwait
test
cmp
xchg
ret
clc
cmp
add
clc
cmp
add
jne
xor
add
and
add
add
add
cmpsl
clc
mov
add
mov
clc
and
add
add
xchg
mov
clc
addr16
jne
push
add
fsubrs
js
xchg
mov
outsl
sub
add
add
add
test
outsl
mov
clc
popf
nop
sbb
dec
das
add
jno
adc
clc
inc
add
jnp
sar
stos
cmpsl
clc
dec
jge
add
shlb
decl
jmp
push
mov
add
add
clc
pusha
add
sub
mov
clc
mov
je
test
clc
push
leave
dec
add
sub
sub
inc
add
bound
add
add
clc
out
mov
add
and
add
add
mov
push
add
cs
dec
inc
add
cmp
push
and
add
fwait
jmp
xchg
push
mov
inc
add
add
push
add
push
mov
jnp
outsl
xchg
divl
aas
fnstenv
push
add
scas
xor
add
iret
out
filds
cmp
jns
notb
mov
add
push
jno
add
dec
movsb
clc
pop
pop
cmp
clc
sub
inc
add
xchg
popa
add
clc
imul
xor
fwait
jmp
dec
push
push
aad
push
mov
lahf
out
mov
xchg
mov
clc
mov
icebp
fistpl
cmp
pop
or
fadds
add
psrlw
int
ffree
clc
popf
sarl
je
add
das
add
mov
add
pushf
pop
pop
jae
add
fistpll
jnp
pop
and
add
add
push
add
out
add
add
clc
xchg
cmp
data16
mov
mov
or
or
add
add
icebp
out
outsb
cmp
add
or
je
fwait
jmp
xor
mov
push
ret
mov
mov
in
dec
add
das
or
lret
mov
shrl
les
fwait
jmp
and
cmpsb
clc
push
add
test
add
int3
dec
mov
lock
add
mov
cmpsl
clc
mov
and
add
adc
add
loop
sub
mov
push
xor
cld
push
ret
sub
or
push
clc
jle
movsl
clc
ja
add
add
loop
pop
jns
fdivr
xor
add
in
test
inc
add
lock
sbb
add
mov
sahf
ret
je
or
add
add
dec
pushl
add
fwait
jmp
inc
or
add
and
add
je
int
mov
fwait
jmp
popa
xchg
leave
xor
add
test
lret
lock
add
inc
add
daa
clc
repnz
leave
mov
mov
pop
ficomps
clc
adc
clc
mov
xchg
jle
lock
clc
cmp
pop
data16
cmc
popf
test
add
add
cli
clc
jno
add
cmp
add
xor
cmp
addr16
jbe
pop
cld
add
push
fwait
jmp
jg
aaa
sub
scas
pop
roll
add
mov
out
cs
repnz
cmp
cmp
mov
rorb
xor
out
sub
clc
lea
push
add
jg
clc
pushf
add
add
clc
cmp
shl
add
lret
clc
add
add
add
clc
lods
dec
xchg
push
clc
xchg
mov
mov
cld
push
ret
sub
xor
jns
inc
add
mov
dec
inc
clc
cmp
mov
add
add
sbb
xabort
or
add
ds
mov
clc
stos
mov
add
lahf
scas
fldenv
add
cmp
mov
popf
xor
lods
in
mov
clc
sbb
add
fldcw
mov
shl
clc
mov
clc
rcr
push
add
loopne
popf
fmuls
jbe
clc
out
inc
add
repz
add
cmp
lret
sbb
loop
xchg
or
int
clc
clc
pop
and
bound
add
clc
nop
sub
mov
outsb
push
add
decb
add
aas
add
add
or
sbb
xor
repz
xbegin
movsl
clc
jns
mov
sub
add
dec
cmp
add
sbb
xor
cld
push
ret
lods
fwait
das
in
out
sub
jp
mov
lea
add
and
add
and
add
xchg
xlat
sub
add
add
pop
and
mov
ret
sub
sar
test
in
cmp
inc
clc
ret
jb
add
clc
cmpsl
clc
lods
pop
lret
stos
ss
fistps
scas
scas
loopne
mov
push
add
or
clc
loopne
test
push
out
pop
inc
add
fbstp
add
clc
scas
cli
rorl
into
add
add
test
dec
cld
ret
clc
xor
push
add
es
xchg
mov
sti
jns
clc
mov
mov
aam
clc
push
lock
and
clc
mov
or
int3
repz
add
clc
fs
inc
add
shrl
rcl
jp
push
xbegin
sbb
test
out
lcall
add
add
clc
loopne
dec
xlat
jnp
add
out
xchg
xor
or
mov
xor
push
fsts
add
xabort
clc
sar
add
cmp
push
add
sti
je,pn
mov
clc
inc
clc
push
push
add
xchg
mov
clc
cmp
add
hlt
int3
cmp
add
test
out
mov
adc
add
mull
jo
add
clc
imul
mov
add
outsb
sub
xchg
push
mov
xor
add
shlb
enter
arpl
add
add
sbb
clc
cmp
sbb
clc
fwait
jo
add
lods
cmp
add
jmp
adc
fs
add
loope
jo
add
outsl
or
mov
xabort
sbb
pop
loop
loopne
adc
cmp
add
add
add
loop
in
repz
sbb
std
inc
add
pop
pop
sbb
inc
clc
pop
clc
loope
je
sbb
sub
cmp
adc
add
clc
inc
clc
add
add
clc
push
adc
mov
and
imulb
pop
clc
xlat
or
add
leave
and
sbb
test
in
lcall
add
cmp
movsb
clc
hlt
dec
addr16
dec
sub
test
jae
add
mov
clc
add
gs
push
add
fwait
mov
add
mov
pop
sarb
add
stos
mov
ds
and
add
sbb
add
mov
sub
jb
add
clc
daa
clc
add
push
add
fwait
jmp
sub
pop
jmp
cmp
clc
inc
add
or
scas
push
and
pop
dec
test
int3
jmp
and
rcll
cs
fchs
clc
repnz
idivb
clc
movsb
clc
fwait
adc
add
sub
add
iret
cmp
clc
and
add
stos
sub
clc
cltd
lea
add
aas
ljmp
cmp
je
add
sti
movsb
clc
rep
xchg
pop
movsb
clc
fsts
aas
mov
aas
fdiv
in
negl
add
pop
jnp
insl
mov
add
sbb
sti
and
add
mov
sub
pushf
sti
add
add
add
fwait
cmpsl
clc
into
aas
repz
add
add
jne
sub
push
jmp
movsb
sbb
loopne
fwait
mov
cld
push
ret
push
inc
sahf
cmp
add
out
mov
pop
inc
add
es
or
cmpsl
clc
jns
add
mov
add
mov
scas
ljmp
bound
add
add
mov
mov
add
pop
cmpsb
clc
dec
xchg
cs
xchg
bound
add
mov
insl
or
dec
dec
jns
add
je
clc
cld
dec
mov
clc
xbegin
clc
popa
add
out
inc
clc
fdivs
clc
sbb
mov
add
add
add
xchg
adc
add
cld
jb
add
fildll
add
fwait
jmp
inc
mov
and
add
fs
stc
mov
add
clc
mov
jmp
xor
add
cmp
fildll
cmp
add
mov
mov
clc
aam
repz
aad
mov
clc
roll
call
and
repz
xabort
fmuls
clc
js
clc
dec
adc
add
add
shrb
clc
scas
xchg
inc
clc
xchg
and
add
xor
add
clc
icebp
inc
clc
decl
sub
lea
ljmp
sbb
jg
fwait
jmp
sub
mov
adc
pop
test
imul
icebp
scas
iret
ljmp
push
add
ds
jmp
sub
mov
add
gs
cs
and
add
add
sub
not
sar
insb
pop
or
shll
dec
fwait
jmp
add
and
movsb
clc
faddp
clc
call
add
daa
clc
cmovae
add
popl
add
mov
add
inc
add
push
xchg
add
dec
sub
push
fisubrs
loope
scas
push
push
pop
xchg
mov
cmp
sub
inc
clc
xor
clc
aam
int3
loop
xbegin
pop
dec
add
sub
test
mov
jmp
or
js
add
scas
pop
xchg
pop
inc
add
pop
push
repz
lock
dec
pushf
xchg
sub
cmp
push
mov
sbb
jmp
dec
push
sub
fwait
jmp
cwtl
nop
das
push
mov
fwait
jmp
popa
push
add
int3
stos
aas
dec
rol
clc
call
lret
rolb
add
mov
clc
dec
mov
push
cld
push
ret
dec
cmpsb
dec
jge
inc
clc
je
clc
cmp
clc
into
adc
add
clc
dec
std
xchg
cmp
adc
add
push
fwait
jmp
jno
cmp
add
mov
add
or
add
sub
mov
add
jne
clc
fldt
clc
pop
ret
clc
mov
lahf
cli
mov
clc
xchg
inc
add
xchg
push
fdivs
add
das
cmp
pop
adc
add
push
repnz
test
mov
add
pop
sub
popa
add
xor
add
sbb
add
rorb
jnp
push
clc
scas
sar
mov
fwait
jmp
sub
mov
clc
movsl
clc
mov
clc
std
out
fcoml
in
mov
add
mov
insl
or
mov
jne
clc
xchg
hlt
xchg
ja
clc
xchg
stc
dec
and
xlat
cmp
add
mov
push
add
imul
mov
or
add
or
or
dec
imul
mov
lea
sub
add
test
add
lods
popf
mov
sti
mov
out
sub
clc
push
fmuls
test
add
jp
fistpl
mov
fwait
jmp
or
mov
add
iret
sub
add
cwtl
push
xchg
arpl
add
clc
outsb
mull
fs
xbegin
clc
bound
add
add
clc
xchg
es
jge
scas
mov
mov
test
in
bound
add
and
xabort
ds
clc
and
inc
clc
adc
cwtl
mov
add
inc
add
cmpsb
clc
and
add
add
mov
pop
fcmovnb
clc
dec
xbegin
lock
bound
add
leave
dec
sti
not
push
xchg
fwait
jmp
outsw
data16
fs
int
or
clc
adc
clc
fs
stc
repnz
ja
popa
add
fildll
arpl
add
push
dec
xabort
dec
jae
add
and
add
add
test
dec
jo
add
dec
mov
inc
clc
push
add
fwait
jmp
lcall
add
push
xchg
ljmp
sarb
add
in
jmp
clc
test
or
imul
ret
sar
inc
clc
mov
filds
push
je
mov
rep
fwait
jmp
mov
cmpsl
clc
push
push
clc
jae
add
imul
cmp
clc
sbb
add
clc
pop
push
add
xor
add
fimuls
ja
pop
clc
aad
dec
incb
clc
das
int
and
scas
mov
clc
sahf
mov
sbb
dec
call
scas
add
sbb
ret
add
jno
push
clc
call
clc
pop
in
sub
data16
fldl
shlb
add
loopne
cs
and
add
push
cs
clc
out
fnsave
mov
mov
add
fwait
jmp
repz
add
rolb
rcrb
push
adc
add
add
clc
or
sub
imul
jl
clc
xor
add
ss
add
cs
lret
or
add
insb
dec
arpl
add
test
test
ds
mov
clc
jmp
clc
int
add
aam
bound
add
add
add
sar
fcmovb
clc
pop
insb
pushf
mov
test
das
mov
clc
jle
mov
loopne
pop
lcall
clc
scas
mov
dec
adc
or
cmc
es
adc
add
int3
sar
mov
fwait
jmp
and
push
mov
clc
pop
fisttpll
imull
pop
mov
jp
stc
push
jmp
push
subb
push
addr16
cmpsl
clc
dec
add
add
jmp
sub
add
stos
insl
sbb
repnz
ljmp
sub
outsb
xabort
clc
ret
clc
clc
jne
cmp
mov
sub
out
in
mov
jle
xchg
lret
clc
mov
cmp
add
xchg
imul
lcall
dec
cmpsb
clc
cld
dec
outsl
mov
stos
lret
xchg
cmp
clc
mov
test
insb
jne
add
add
daa
clc
xchg
fsubl
clc
ficoml
add
call
ret
clc
add
add
jmp
test
aam
and
add
dec
add
push
ret
fwait
sub
clc
sbb
mov
mov
and
add
sub
cld
push
ret
xor
and
add
clc
inc
add
mov
push
add
fstpt
clc
ljmp
add
add
push
xor
fwait
jmp
or
aas
mov
loopne
or
pop
dec
dec
or
out
outsl
inc
clc
vpmacsdql
xchg
imul
fnsave
pusha
add
cmp
add
iret
popa
add
clc
int
add
ret
clc
sub
lcall
push
clc
aaa
add
aam
int
and
add
clc
push
out
fdiv
xchg
popa
add
rclb
add
mov
scas
add
ljmp
clc
ret
cmp
clc
daa
clc
int
mov
cld
push
ret
adc
mov
push
out
ficomps
fmul
add
add
mov
add
out
and
insb
dec
loope
mov
clc
mov
fwait
jmp
test
clc
or
aam
add
int
cltd
mov
test
dec
xchg
gs
insl
push
add
jge
loopne
adc
pop
aas
xchg
out
inc
add
enter
scas
fstl
repz
sahf
outsb
sub
jnp
add
data16
mov
arpl
add
sti
lahf
pop
dec
add
pop
jns
clc
clc
mov
call
push
inc
add
repnz
lahf
mov
mov
clc
xor
add
enter
rorl
add
and
add
clc
jmp
add
xchg
inc
clc
icebp
jnp
clc
and
add
lock
pop
call
fwait
jmp
mov
sub
cli
mov
test
pop
clc
cmp
js
shll
dec
movsl
clc
dec
or
adc
add
push
xor
add
lea
and
sbb
add
leave
and
add
clc
jl
adc
add
imul
clc
movsb
clc
mov
fwait
jmp
or
sub
cmp
clc
dec
and
add
fcmovb
clc
test
sub
clc
jne
cmp
add
nop
cmp
add
lock
add
sar
pop
repnz
clc
sbb
inc
clc
repz
sub
sub
daa
clc
sar
jbe
mov
mov
cmp
loop
cmp
mul
clc
mov
arpl
add
add
rcrb
and
add
add
inc
add
out
out
jl
jbe,pn
arpl
add
dec
mov
scas
fwait
mov
jp
clc
imul
fs
into
push
jmp
xchg
imul
clc
cmp
adc
add
clc
pop
fsubs
std
sbb
jp
add
fwait
jmp
outsb
adc
add
clc
dec
mov
stc
or
jbe
fwait
jmp
cmp
push
imul
add
add
xor
mov
and
add
clc
std
outsb
mov
jb
add
mov
ret
clc
es
sub
clc
aad
push
clc
inc
add
pushf
rclb
negl
and
sbb
test
mov
clc
int3
adc
add
fistpl
add
call
add
int
add
jl
jecxz
jp
inc
clc
clc
lcall
add
adc
add
clc
lock
fwait
arpl
add
add
add
push
or
push
ret
pop
push
xabort
cmpsl
clc
xchg
out
fwait
pop
cld
pop
cmp
popf
out
int
add
std
cmpsb
clc
sar
int3
add
cmp
rcrl
sahf
aaa
and
add
ss
and
clc
cs
clc
in
mov
mov
adc
popa
fwait
jmp
data16
fwait
adc
add
lcall
clc
dec
xor
add
xor
add
mov
rorl
add
sti
fwait
mov
clc
pop
sbb
clc
fisubrl
clc
jb
add
dec
cmp
or
pop
mov
add
movsl
clc
jecxz
sub
cmp
xlat
mov
push
add
roll
add
cmp
add
fstl
add
lock
test
aas
cwtl
jb
add
repnz
fstpt
clc
sub
add
xchg
dec
mov
inc
add
int3
ja
clc
sub
add
cld
mov
add
dec
sti
arpl
add
add
clc
das
dec
iret
lcall
sbb
clc
dec
test
xchg
mov
imul
dec
mov
jnp
test
roll
add
int
and
add
pop
arpl
add
aam
add
push
add
cmp
add
sbb
mov
mov
add
lret
cmc
push
add
mov
stc
fs
add
push
fwait
jmp
sub
add
adc
add
clc
out
xlat
repnz
and
add
add
iret
push
jne
fwait
jmp
insl
in
insb
cmp
clc
fisubrl
mov
clc
jnp
insl
dec
pop
xchg
and
add
pop
loope
sub
push
test
add
mov
clc
xlat
inc
add
jne
clc
xchg
xlat
push
add
sahf
jmp
mov
xor
add
clc
ficompl
xchg
adc
addr16
xor
add
xor
add
repnz
add
adc
add
add
xabort
divl
xor
add
out
adc
add
xor
mov
push
add
mov
sub
sbb
and
add
jmp
clc
push
clc
push
xchg
fwait
jmp
dec
cmpsb
aas
inc
add
sar
clc
enter
add
pusha
add
xchg
test
pop
jo
add
aad
clc
pop
inc
clc
mov
out
leave
mov
add
add
cmp
clc
adc
add
xor
cmp
pop
pop
gs
adc
dec
out
shrb
inc
clc
jbe
push
add
push
add
xchg
popf
gs
jnp
lret
mov
add
in
pop
clc
cmp
jnp
fisttpl
adc
clc
sbb
clc
cmpsb
clc
mov
inc
clc
and
add
clc
dec
jg
add
lock
add
add
xchg
cmp
es
sar
mov
mov
add
dec
arpl
add
inc
clc
int3
xchg
mov
add
add
je
movsb
clc
fiaddl
roll
add
int3
mov
xchg
jns
mov
push
std
ss
or
syscall
clc
cs
add
test
mov
clc
mov
add
ss
and
add
adc
sbb
clc
decl
xchg
cli
inc
add
lea
push
xchg
push
pop
fwait
jmp
das
or
push
insb
xchg
dec
jp
icebp
inc
clc
cmp
lods
cmp
iret
nop
or
mov
fwait
push
add
ret
clc
shll
add
cld
mov
mov
fwait
jmp
cmpsb
sbb
clc
or
jp
inc
clc
push
out
outsb
sub
hlt
dec
sub
push
dec
dec
dec
jp
push
lods
push
clc
cmpsb
clc
hlt
jnp
clc
mov
clc
cmp
aaa
cmp
lods
aad
add
cmpsb
clc
fsubs
repnz
inc
add
aad
clc
fmull
aas
dec
js
mov
pop
clc
mov
testl
clc
add
add
add
insl
bound
add
add
test
cmp
add
inc
clc
add
mov
stos
cmp
mov
das
mov
add
pop
inc
clc
rcll
add
pushf
mov
aam
addr16
xchg
lret
fwait
inc
add
cmc
jle
clc
sbb
add
mov
clc
sbb
mov
add
add
add
mov
clc
fcomps
addr16
sub
xor
add
clc
mov
add
jmp
push
push
add
cmp
clc
cmc
repnz
ss
out
out
adc
add
sbb
insl
or
imul
xchg
sub
clc
cmp
fldl
or
mov
ja
cmp
add
ror
mov
sub
sbb
mov
xor
add
xchg
enter
and
add
clc
mov
add
clc
int
fs
jecxz
into
mov
add
sbb
dec
negb
inc
add
mull
add
cmc
ss
mov
fwait
jmp
imul
add
sbb
add
add
add
insb
or
sub
arpl
add
add
push
sbb
lret
push
clc
fsts
add
shrb
and
clc
insb
jo
add
dec
fcomps
push
sub
lock
add
inc
add
pop
repz
and
add
call
in
scas
push
jne
add
shl
add
outsb
mov
test
pop
xor
add
adc
clc
lods
clc
aam
xchg
aad
add
add
mov
cs
mov
fwait
jmp
jge
add
mov
mov
or
clc
sar
and
mov
movsb
clc
adc
add
ss
xchg
dec
movsl
clc
mov
cmpsl
clc
test
out
stc
xchg
je
and
stos
enter
or
out
out
and
mov
cmp
clc
xlat
sar
mov
add
shlb
mov
test
adc
add
mov
fwait
jmp
add
sub
sub
enter
cmp
add
mov
jmp
add
cmpsb
inc
sub
insb
jp
add
xchg
jge
adc
clc
adc
add
add
addr16
jae
add
fwait
jmp
sub
aaa
or
clc
inc
clc
push
ja
add
and
push
add
es
push
jns
clc
fbld
mov
add
scas
sahf
sbb
push
or
add
sub
clc
sub
xchg
mov
add
dec
mov
xor
add
clc
fs
sbb
mov
add
push
pop
xchg
cmp
sub
clc
std
insl
pop
cmp
mov
add
and
clc
scas
dec
aam
add
aas
add
add
xor
add
clc
scas
cmp
clc
nop
dec
in
loopne
shl
clc
pop
push
add
scas
insb
mov
dec
or
add
push
inc
clc
sub
xchg
xchg
push
imulb
jne
push
sub
stc
loopne
mov
add
push
add
xchg
js
clc
sub
add
mov
sbb
mov
clc
loope
and
jae
add
add
cmp
pop
jae
jmp
sub
scas
adc
add
jo
add
add
push
push
xchg
insl
rol
clc
pop
scas
mov
add
add
mov
fcmovne
mov
add
loop
inc
clc
icebp
mov
ret
movzwl
cld
push
ret
pop
jae
add
clc
jecxz
lock
inc
add
or
fs
ja
arpl
add
add
add
dec
mov
and
clc
leave
cmp
pop
cld
push
ret
das
pushw
pop
pop
ss
inc
clc
inc
add
mov
dec
sub
push
ret
mov
jnp
mov
cmp
mov
add
icebp
sbb
add
mov
cld
push
ret
mov
cmp
aas
in
or
xchg
push
cmp
ds
hlt
mov
add
stos
mov
mov
and
add
add
add
out
jnp
clc
cmp
cmp
jno
add
add
pop
dec
enter
clc
ficoms
aaa
call
pop
fwait
lcall
add
add
leave
lods
jno
add
hlt
mov
in
shr
xchg
add
add
clc
leave
mov
add
sti
cmp
xor
add
clc
sbb
clc
popf
mov
and
add
clc
out
push
add
int
clc
lret
mov
push
cmp
hlt
push
add
xbegin
call
add
clc
into
cmpsb
clc
mov
add
pop
dec
adc
add
add
cmp
inc
clc
lret
icebp
and
add
testl
clc
pop
mov
cmp
notb
jp
mov
rorl
imull
cmp
inc
add
jnp
clc
call
clc
lea
and
cmp
in
inc
add
add
pop
in
loopne
mov
sub
insl
xchg
mov
pop
fucomp
ds
cmp
clc
mov
add
leave
popa
add
hlt
add
add
lea
fwait
jmp
aaa
or
clc
aaa
jge
push
dec
popf
xor
add
add
add
push
adc
shl
clc
and
add
add
add
dec
cmp
sub
sub
loopne
loope
ds
mov
add
pop
insb
nop
sahf
lock
jnp
add
xchg
loopne
cmp
clc
stc
jecxz
xchg
js
clc
xchg
cld
sbb
push
add
shll
clc
or
loop
cmp
sub
in
call
fsubp
clc
fdivr
dec
mov
add
add
jns
mov
clc
adc
add
mov
add
inc
clc
cmp
cmpsb
clc
cmc
pop
add
add
arpl
add
clc
ret
clc
movsl
clc
or
add
add
add
insb
mov
add
jo
add
test
jmp
mov
xchg
mov
xchg
jnp
in
pop
ss
cmp
fwait
jmp
outsl
imul
clc
adc
add
aam
clc
fstps
add
and
add
clc
mov
clc
and
add
lahf
daa
clc
into
repnz
pop
clc
sar
add
cmp
outsl
push
mov
fwait
jmp
push
mov
pop
clc
out
movsb
clc
cmp
clc
push
cmp
add
sar
ljmp
mov
aas
xor
add
add
loopne
and
add
aas
mov
stc
sbb
or
add
mov
add
ds
dec
test
lret
add
sub
mov
clc
sub
add
clc
mov
fwait
jmp
je
push
add
add
push
fwait
jmp
lods
sub
dec
push
fwait
or
clc
add
add
add
mov
add
lock
mov
mov
sahf
imul
clc
addr16
xchg
sar
clc
lahf
incb
clc
mov
add
sub
clc
xor
add
scas
mov
xchg
imul
clc
rcrl
xor
add
add
lods
test
sub
clc
mov
add
int
fcoms
add
mov
add
jl
push
add
jl
or
add
mov
dec
xor
add
push
mov
mov
in
lret
xchg
mov
dec
jl
mov
clc
pop
stos
lret
sbb
push
daa
clc
push
jecxz
xchg
aas
cmpsl
clc
fwait
iret
aam
lret
fisubs
mov
add
add
lahf
jns
clc
dec
push
add
sbb
mov
cli
mov
negb
dec
cld
push
ret
popa
or
out
movsb
clc
sub
es
mov
clc
inc
add
push
mov
cmp
fwait
jmp
nop
in
cmp
xchg
addr16
pop
pop
clc
add
sub
or
add
cmp
clc
daa
clc
jnp
lahf
and
add
jbe
data16
cmp
outsb
pop
cs
sarb
dec
clc
fistl
rcrl
push
loopne
xor
add
cmpsl
clc
mov
shlb
add
clc
loop
aad
lods
aad
add
jb
add
ficompl
cmp
dec
dec
stos
scas
mov
dec
cmpsb
clc
stc
fdivl
add
cmpsb
clc
mov
push
ret
aas
sub
frstor
add
repz
add
push
lret
add
add
pop
clc
mov
clc
dec
lcall
into
cld
xchg
sar
push
add
lcall
push
clc
in
loopne
ss
roll
clc
cmpsl
clc
es
gs
vminps
and
xchg
pop
jo
add
add
cs
add
push
clc
sbb
clc
cmp
jl
clc
nop
sub
clc
mov
movl
dec
push
and
add
repnz
add
loop
or
jle
add
fadd
clc
int3
xbegin
clc
std
mov
clc
cmpsl
clc
inc
add
sbb
xor
add
add
clc
jns
ret
clc
add
movsb
clc
cwtl
rolb
add
xor
roll
add
mov
jge
xor
add
stos
outsl
push
add
sub
add
dec
cmp
dec
sbb
ret
clc
pop
sbb
pop
sbb
sub
add
cmp
nop
or
add
add
data16
arpl
add
scas
dec
lret
fdivrs
lret
test
clc
inc
clc
outsb
jl
scas
shl
clc
jg
add
push
cmp
cld
push
ret
cmp
dec
inc
add
addr16
sbb
int
sub
add
add
mov
lods
pop
clc
xchg
jbe
mov
clc
adc
xchg
movsl
clc
inc
clc
xchg
ja
push
out
test
adc
add
add
mov
sub
jle
inc
clc
cmp
push
add
dec
pop
lea
ja
lsl
add
pop
je
clc
xlat
dec
jbe
clc
rorb
clc
xchg
loop
jl
add
test
inc
clc
aad
adc
enter
mov
xchg
xchg
inc
add
pushf
cmp
mulb
inc
add
scas
push
add
xlat
loop
dec
sar
push
jae
add
dec
mov
jne
xor
add
clc
movsl
clc
leave
mov
xchg
push
popf
pushf
bound
add
jnp
add
sbb
fwait
jmp
cmp
outsl
mov
pop
cmpsb
imul
or
aad
pop
clc
ror
cmp
addr16
and
add
push
xchg
xchg
cmp
aas
scas
call
push
ret
sub
push
sub
clc
lock
loope
cmp
push
clc
or
cmp
add
sar
adc
add
add
clc
dec
call
clc
and
add
dec
addl
add
push
add
mov
je
fwait
jmp
movsb
clc
inc
add
in
pop
loope
jae
add
mov
clc
and
jbe
shl
cld
push
ret
cwtl
sbb
popf
out
lods
fisttps
xchg
mov
clc
scas
ja
or
add
inc
add
pop
push
movsl
clc
bound
add
clc
cmp
add
in
cli
push
fdivrs
cmp
mov
mov
and
add
add
adc
add
inc
clc
ficomps
and
add
mov
movsl
clc
dec
data16
sbb
add
je
lret
push
iret
ret
xchg
cmp
add
xor
add
add
inc
clc
dec
add
add
clc
xchg
cmp
popa
fwait
jmp
sub
inc
add
inc
clc
shll
add
fiadds
lods
sbb
sar
push
add
gs
add
sar
clc
lcall
adc
add
aad
ds
push
dec
sub
clc
data16
rcll
add
mov
insb
mov
test
add
xor
add
jbe
clc
cwtl
and
out
push
add
pop
iret
aad
cmp
push
cld
push
ret
sub
leave
iret
push
inc
clc
adc
mov
filds
and
add
loopne
lock
aas
mov
addr16
ja
fmuls
mov
add
add
shl
in
std
sti
adc
add
test
movsl
clc
int3
pop
cmp
daa
clc
cmp
jno
add
and
mov
dec
mov
clc
rolb
clc
sahf
sbb
fwait
stos
das
xchg
lret
add
clc
xlat
test
pop
sub
add
movsl
clc
ret
add
testl
pusha
add
in
jle
add
inc
clc
lods
mov
clc
jb
add
push
repz
clc
sbb
sar
cmp
xor
add
xchg
mov
loopne
into
mov
movsb
clc
std
addr16
push
jecxz
xchg
sarb
jns
cmp
inc
clc
cmp
pusha
add
pop
clc
in
enter
xabort
add
push
add
adc
hlt
cmc
bound
add
clc
addr16
xchg
push
sbb
add
inc
add
push
jo
add
add
cmpsb
clc
int3
bound
add
incl
jbe
fwait
jmp
nop
sub
and
sub
push
mov
inc
add
xchg
lahf
popa
add
movsb
clc
cs
data16
loope
xchg
mov
jmp
mov
add
stos
js
lock
add
fwait
jmp
inc
add
clc
xabort
clc
lret
std
and
add
aaa
sub
xchg
xor
add
aas
lret
xor
push
add
cmp
mov
sub
dec
aam
mov
out
popa
add
adc
add
pop
add
sub
inc
and
push
clc
pop
sub
add
add
xlat
sbb
add
sti
pop
fs
mov
clc
stos
and
add
xchg
mov
data16
sbb
add
int3
mov
out
addr16
and
lret
fiadds
add
lock
push
ret
cmpb
sub
xchg
and
push
mov
fwait
jmp
popa
movsb
inc
xchg
in
out
clc
mov
clc
lcall
clc
and
test
sar
clc
gs
push
clc
sbb
xlat
pop
add
lods
cmp
clc
xor
nop
xor
lret
pop
mov
jg
clc
mov
stc
jns
add
push
add
shl
push
add
imul
loop
pop
jb
add
mov
dec
ret
clc
bound
add
clc
mov
clc
cmp
pop
scas
out
in
mov
sbb
add
cmp
mov
sub
mov
mulb
push
mov
adc
sar
add
lods
push
clc
imul
xor
add
add
sub
aad
add
call
fnstsw
xchg
sar
or
add
add
add
in
jl
arpl
add
ret
clc
sbb
test
jnp
add
push
mov
arpl
add
jmp
fimull
movsb
clc
pop
pop
mov
clc
mov
cmp
cld
cmp
lcall
add
and
xlat
int3
jecxz
xchg
lods
mov
inc
add
clc
and
add
dec
fisubl
xbegin
popf
daa
clc
pop
mov
fdivrs
movups
add
push
clc
cmp
clc
jl
add
push
clc
xor
add
cmp
dec
xchg
test
mov
adc
push
ret
inc
mov
mov
je
fwait
jmp
ljmp
add
add
add
jne
clc
pusha
add
mov
lret
add
add
cmp
add
clc
pop
sub
add
add
add
clc
mov
dec
and
add
add
out
stos
mov
ficoml
add
clc
inc
add
stos
ds
mov
jmp
pop
and
jno
add
clc
xchg
push
add
fwait
jmp
push
pop
sub
xabort
push
add
pop
mov
shrb
enter
pushf
inc
clc
jae
add
add
and
add
clc
hlt
fsubs
add
imul
add
push
add
mov
add
and
jp
add
and
add
in
std
int3
dec
mov
popa
add
push
add
add
add
in
xabort
and
test
jg
pop
lahf
xchg
jg
clc
mov
clc
mov
divb
add
mov
xchg
jmp
clc
xor
sub
add
add
add
decl
push
add
cmp
or
add
gs
ljmp
add
jo
add
add
mov
xor
mov
add
mov
js
clc
pop
xor
add
arpl
add
push
fwait
jmp
pop
and
scas
sbb
clc
mov
clc
fildll
mov
add
cmp
add
push
add
stos
fisttpll
clc
mov
out
idiv
pop
iret
outsb
and
add
and
add
fists
xchg
mov
clc
das
ficoms
cmc
repnz
jno
add
mov
mov
and
add
push
mov
fwait
jmp
inc
aaa
jp
loope
jo
add
add
push
aas
imul
mov
clc
test
inc
clc
movsl
clc
dec
pop
clc
jno
add
push
ret
xchg
xchg
sub
addr16
adc
add
movsl
clc
xor
add
add
stos
cmp
fwait
xor
add
xchg
push
aad
inc
cld
push
ret
dec
sbb
clc
mov
xchg
mov
xlat
push
loopne
fwait
jmp
leave
fldl
and
add
dec
jne
add
jmp
clc
loope
neg
push
clc
push
data16
xchg
cmp
clc
mov
popl
jmp
jnp
clc
test
inc
add
icebp
push
push
jns
aas
mov
pop
cmp
and
je
js
push
ret
sub
adc
pop
pop
fstps
clc
xchg
dec
sbb
clc
or
adc
add
movsl
clc
out
mov
add
xor
add
push
clc
add
add
add
iret
xchg
push
jmp
inc
jg
fdivp
sbb
add
inc
clc
test
ss
pop
mov
clc
cmp
pop
aad
add
hlt
repnz
add
arpl
add
icebp
fistpl
xor
add
fwait
jmp
es
data16
mov
and
add
aam
jmp
jmp
lahf
pop
mov
xlat
xor
add
pusha
add
or
add
imul
push
clc
jmp
add
addb
jmp
jae
add
add
mov
icebp
mov
add
in
xchg
sahf
xchg
ret
clc
fadds
add
fnstenv
outsl
mov
clc
pop
popa
add
dec
inc
clc
ja
mov
add
mov
xchg
clc
ja
cmp
mov
out
ficoms
sub
inc
clc
xchg
ja
test
push
pop
xchg
inc
add
mov
add
dec
push
movzwl
fwait
jmp
lea
pushf
icebp
faddl
jl
push
pusha
add
pop
clc
scas
ror
aas
sahf
ror
mov
push
cld
push
ret
jp
nop
lea
xchg
push
inc
clc
stos
jl
clc
popf
sbb
cld
out
decl
sbb
inc
clc
in
mov
insb
inc
add
imul
push
into
or
or
clc
push
push
ret
sub
add
clc
pop
xlat
movsb
clc
inc
add
cmc
insl
in
shrl
add
inc
clc
adc
add
clc
clc
xor
mov
aam
clc
sub
push
fwait
jmp
jg
movsb
cmpsb
movsb
int3
cmp
add
xlat
decl
test
stc
lcall
sti
and
add
clc
imul
pop
cmpsl
xor
add
xor
add
add
push
clc
inc
clc
movsl
clc
sbb
clc
mov
add
leave
es
hlt
xlat
mov
shlb
add
add
mov
mov
shrl
mov
movswl
add
add
fists
xor
add
outsl
sar
ficoml
add
notb
push
vaddps
lea
add
add
dec
insl
and
add
int
add
pop
clc
push
add
cmp
mov
fwait
jmp
sub
jp
clc
pop
pop
clc
fmul
int3
mov
add
lock
or
in
jecxz
pushf
popf
cs
clc
imul
xor
add
cli
jp
jns
sbb
fwait
jmp
insb
ret
clc
sbb
test
lcall
lcall
nop
xchg
es
std
pop
mov
clc
wrmsr
add
test
pop
clc
movsb
clc
aad
clc
sbb
inc
add
dec
lret
pusha
add
rcr
cs
outsl
jno
add
mov
xbegin
pop
pop
jb
add
or
out
out
test
clc
inc
clc
fsubrs
xchg
dec
jbe
clc
sub
add
add
xor
add
clc
mov
pop
or
xbegin
clc
mov
cmp
xbegin
pop
imul
cs
sbb
leave
loope
leave
xchg
not
das
add
add
fdivl
clc
test
gs
push
add
stos
xor
clc
jmp
arpl
add
mov
add
dec
shl
clc
cld
dec
adc
ficoml
jge
pusha
add
pop
xor
fistl
mov
add
clc
clc
ja
sar
ret
popf
fwait
jmp
xor
sub
add
fwait
loope
bound
add
bound
add
clc
jbe
clc
cmp
clc
jp
sub
roll
add
and
add
add
into
dec
cmp
repz
add
push
clc
lock
ja
aad
add
stos
xlat
adc
add
clc
push
fs
mov
dec
in
inc
clc
faddl
or
or
add
add
and
add
sbb
push
ret
mov
cltd
mov
add
cmp
bnd
push
push
ret
imul
or
ficomps
leave
fwait
jmp
ja
xor
xchg
out
jns
clc
or
hlt
fwait
add
add
add
add
insb
cmp
xchg
imul
clc
lods
call
and
add
ss
xor
add
iret
andnps
or
push
pop
popa
add
in
popa
add
enter
fwait
jmp
scas
pop
adc
and
add
mov
sbb
xchg
daa
clc
pop
xchg
arpl
add
jno
add
add
xabort
clc
test
sbb
cld
push
ret
lods
mov
mov
cmp
loope
add
add
or
sub
push
add
pushf
call
add
fistps
jmp
add
dec
push
add
cltd
int
add
add
add
add
or
cli
addr16
dec
mov
jbe
out
xchg
cmp
add
xor
add
cmp
scas
adc
add
clc
sbb
mov
xor
add
stos
jmp
pop
and
add
insl
pusha
add
mov
add
or
outsl
add
inc
add
mov
fwait
jmp
sub
add
fs
divl
add
aad
clc
mov
clc
inc
add
and
add
adc
add
xchg
jl
out
mov
jmp
mov
cltd
mov
repz
add
sub
aad
clc
or
outsb
stos
xor
add
ret
cltd
cltd
leave
push
add
cld
sub
clc
or
clc
cs
lods
adc
add
mov
add
sub
dec
es
jb
add
clc
aas
js
add
cwtl
jo
add
into
cltd
mov
mul
clc
xchg
mov
clc
stos
mov
xchg
push
clc
incb
clc
mov
fimull
lcall
add
ds
add
out
ss
clc
scas
xchg
fidivrl
push
push
cld
push
ret
dec
add
cwtl
mov
mov
clc
ja
mov
add
int
inc
add
or
add
mov
cmp
add
add
add
add
add
test
lods
cmp
xor
add
ret
add
dec
mov
add
xlat
fstpl
add
lods
xchg
sbb
mov
ljmp
clc
vcmpps
inc
add
add
add
add
lock
in
jg
add
loopne
cmp
clc
add
sahf
xor
add
adc
fcompl
clc
loopne
cmp
test
clc
mov
pop
dec
mov
xor
clc
cmp
cmp
add
mov
notb
add
sub
fs
outsb
inc
clc
cmp
lahf
sbb
push
ret
subb
movsb
data16
out
fwait
icebp
mov
jecxz
jmp
sbb
fwait
or
loope
hlt
push
or
movsb
clc
mov
mov
clc
jg
add
sbb
stos
fwait
jmp
sub
insb
sbb
mov
aad
add
sub
add
pop
clc
push
add
loop
pusha
add
fdivrp
bound
add
lock
add
clc
dec
movsl
clc
aam
clc
jo
add
add
fmuls
mov
cmp
clc
rcll
pop
out
inc
add
xchg
xlat
jns
lahf
adc
add
pop
out
mov
xchg
sbb
add
and
add
add
sub
sub
mov
add
clc
bound
add
add
addr16
sub
imul
scas
loop
test
push
add
adc
dec
fldcw
add
jmp
repnz
cmp
add
jmp
mov
js
loop
clc
aas
add
add
cmp
fwait
jmp
jg
mov
push
clc
xlat
dec
mov
clc
sbb
fwait
jmp
cwtl
sar
rcrl
test
clc
or
mov
es
ljmp
arpl
add
add
fwait
jmp
dec
cmp
and
mov
clc
bound
add
cmp
push
add
aaa
jge
cld
lret
push
lods
inc
add
pop
jg
lea
addr16
nop
cli
mov
js
add
repnz
jmp
sub
clc
cmp
add
add
clc
ds
sar
out
lcall
pushf
jae
add
add
xchg
jae
add
xchg
mov
add
pushf
xchg
pushf
pusha
add
and
add
add
sti
hlt
cmp
jns
cmpsl
clc
cmpsl
clc
xor
add
cs
lret
cltd
scas
xchg
sub
add
lret
push
xbegin
or
cmp
jge
std
add
add
clc
mov
ja
je
xchg
in
or
add
jmp
sahf
cmp
xchg
bound
add
sar
adc
add
int
ret
add
pop
rcl
movsl
clc
jge
clc
dec
jbe
clc
test
in
repnz
lea
loop
sub
clc
adc
add
add
stc
cli
enter
cmp
lods
mov
add
clc
std
cmp
clc
jg
clc
jne
lods
gs
jle
add
aam
loop
divl
clc
popa
add
ret
clc
xbegin
add
out
add
add
add
jge
cmpsb
clc
das
pop
add
add
stos
sub
xchg
add
mov
clc
ret
cwtl
addr16
push
clc
icebp
push
mov
in
scas
inc
add
aaa
xor
lock
cmpsb
clc
data16
cmp
mov
cld
push
ret
push
sub
cmp
add
stc
dec
std
std
lea
jg
add
push
fs
mov
clc
imul
clc
lods
aaa
push
mov
clc
jbe
and
add
mov
loope
loope
sahf
clc
ret
xor
add
decb
xchg
loopne
ljmp
sahf
or
adc
add
xor
aaa
fidivrs
mulb
add
pop
test
dec
pop
ret
and
add
or
jmp
popa
xor
in
stc
xchg
xchg
es
mov
xor
add
sub
cmp
add
sub
push
fwait
jmp
xor
clc
pushf
sar
ret
clc
cmp
add
add
cli
out
push
inc
clc
cmp
inc
clc
mov
fistpll
adc
cld
sahf
lods
sbb
clc
adc
add
lcall
sub
clc
fidivrl
dec
jge
dec
and
add
fiaddl
add
sub
pusha
add
pop
push
add
adc
add
clc
push
test
sar
xlat
pop
mov
clc
stos
in
xchg
and
nop
dec
cmp
lret
dec
fwait
jmp
lods
sub
xor
out
and
cmp
incl
push
addb
pop
fs
adc
add
in
xor
add
add
adc
add
mov
fwait
jmp
sbb
add
clc
dec
lret
scas
loope
add
mov
and
add
add
fsub
clc
lahf
pop
loop
stos
outsl
xor
add
xor
add
nop
fstpl
test
into
out
sub
mov
or
das
add
fisubrs
clc
jle
fisubs
cmc
mov
clc
clc
xor
add
clc
xchg
nop
jo
add
nop
sub
clc
loopne
clc
xor
add
jecxz
sbb
lea
cmp
inc
add
add
xchg
and
add
clc
pop
fisttpl
sbb
push
and
add
add
adc
add
clc
jns
clc
in
in
int
cmp
gs
adc
dec
mov
loope
xor
clc
js
push
sar
clc
aam
clc
aam
sbb
add
cmp
pop
fwait
jmp
push
sub
push
mov
mov
stc
mov
rorb
mov
push
insl
pmullw
pop
adc
popa
add
xchg
imul
clc
jge
fdivrs
pop
clc
cmp
push
jmp
xor
push
push
rcl
mov
clc
or
imul
add
call
clc
add
add
clc
aas
jbe
jp
clc
add
add
clc
nop
xor
add
push
pop
sub
call
clc
xor
add
clc
lret
inc
add
hlt
mov
add
cmp
mov
add
mov
clc
int3
inc
add
adc
xchg
sbb
add
pop
ret
or
sbb
mov
xchg
push
aas
sub
dec
test
clc
sub
clc
in
cld
or
xabort
lret
addr16
mov
push
inc
add
cwtl
mov
cmp
sar
faddl
clc
mov
gs
push
jmp
adc
imul
add
cli
ljmp
adc
add
pop
clc
or
add
xchg
cmp
add
mov
jp
mov
push
add
pusha
add
sbb
mov
clc
xchg
insl
push
add
xchg
xchg
fcoms
add
iret
loope
push
cltd
mov
inc
clc
ret
lret
add
mov
clc
or
ret
clc
imul
push
add
fisttps
add
cld
push
ret
cmp
pop
add
add
add
add
adc
add
clc
ljmp
mov
fwait
jmp
sub
std
rcrl
stos
mov
inc
add
or
clc
pop
sub
add
xchg
testl
decl
xchg
pop
jecxz
movsl
clc
add
jl
clc
mov
sub
fadd
clc
dec
push
clc
add
add
clc
xchg
dec
xchg
sub
add
pop
dec
in
adc
dec
dec
add
add
adc
add
add
mov
add
jge
clc
adc
add
add
fnsave
jmp
std
arpl
add
insl
rcrl
js
cmp
add
inc
add
xor
add
es
loope
aam
cli
in
into
pop
clc
dec
jnp
add
cld
push
ret
add
lahf
xchg
jle
shll
movsb
clc
dec
jmp
movsb
clc
fs
fsub
clc
jno
add
cmp
add
jae
add
add
incl
fwait
jmp
dec
movsb
clc
ljmp
stos
inc
clc
repz
cmc
jbe
xbegin
sti
push
clc
mov
cmp
clc
ret
clc
call
clc
ficomps
cmp
pop
clc
push
in
pop
cli
xchg
and
add
inc
clc
jb
add
addr16
pop
push
cmp
clc
gs
enter
dec
stos
ret
clc
cs
clc
mov
add
or
add
sbb
clc
mulps
clc
xor
in
inc
add
sarb
gs
outsl
mov
clc
cmp
movsb
clc
mov
pusha
add
dec
add
rorb
pop
clc
xlat
lcall
clc
and
push
push
jne
and
add
add
fbstp
clc
arpl
add
add
mov
clc
xor
add
clc
mov
in
add
add
lcall
add
addr16
std
pop
divl
movsb
clc
inc
clc
jle
mov
sbb
and
add
push
outsl
or
add
lahf
xlat
fistl
sbb
clc
in
mov
clc
xbegin
sbb
clc
fstps
loopne
jo
add
push
add
xbegin
xchg
stc
cli
cmp
dec
push
add
sbb
xchg
cmp
add
push
test
xor
add
cmp
add
add
xlat
jl
fbld
iret
lea
clc
sahf
testl
add
lock
add
jo
add
jae
add
std
jne
clc
sub
lock
sahf
jo
add
lods
ret
add
adc
add
clc
xor
ljmp
add
add
inc
clc
cltd
cli
pop
lret
cli
push
add
xchg
or
xchg
mov
add
add
clc
push
mov
inc
clc
xchg
repz
push
add
loope
out
mov
xchg
or
jge
cmpsb
clc
ret
clc
xchg
ss
int3
sbb
stos
cmp
cld
arpl
add
jo
add
add
xlat
cmp
nop
into
dec
jle
pusha
add
mov
add
add
lods
push
cmp
cltd
das
push
not
mov
jecxz
cmp
and
add
clc
sti
jnp
ficoms
adc
jmp
aaa
push
push
mov
clc
mov
sub
jno
add
ss
rcr
cmp
stc
call
sar
clc
dec
mov
clc
mov
call
adc
push
ret
aas
sbb
inc
add
cmp
mov
cs
cmpsb
clc
enter
mov
mov
add
popf
add
add
clc
cmp
test
scas
push
mov
fwait
jmp
pop
add
mov
jno
add
or
add
fwait
jmp
push
xchg
jg
clc
push
stos
repnz
test
ja
std
push
add
into
gs
lcall
pop
dec
popl
add
and
add
sub
fwait
jmp
pop
out
popa
add
sar
pop
lods
fs
or
add
or
add
adc
add
push
shll
add
and
shrl
dec
lock
lea
add
lea
clc
jmp
cmp
inc
clc
mov
sub
push
sub
clc
adc
add
ret
clc
aas
sub
push
ror
sub
add
out
js
push
mov
pop
mov
dec
push
add
cmp
add
rcrb
add
scas
adc
clc
push
clc
in
cmpsb
clc
das
sbb
add
add
jmp
sbb
out
lea
mov
and
add
cmp
xor
add
pop
cwtl
xlat
arpl
add
clc
sbb
add
lods
dec
je
imul
pop
jecxz
lods
dec
push
add
icebp
lods
cwtl
jecxz
xchg
sub
clc
leave
pop
clc
out
inc
clc
xchg
pop
out
jmp
std
jo
add
cmp
xchg
xchg
xor
add
clc
and
and
add
xor
and
add
and
add
add
fimull
add
ret
mov
js
add
jp
repnz
add
add
dec
push
es
sbb
add
gs
xchg
stc
add
int3
xchg
cmc
aas
push
add
outsb
and
add
mov
clc
dec
or
sar
add
add
add
push
stc
push
aad
xor
add
adc
add
clc
mov
sub
pop
xor
add
or
jge
aad
add
push
push
jmp
outsl
cmp
adc
add
cmp
outsb
mov
pop
clc
xchg
xabort
jne
jp
add
cwtl
js
mov
add
or
fstl
add
sbbb
sub
call
pop
inc
clc
int
add
pop
lods
and
add
or
fwait
jmp
pop
xor
add
icebp
daa
clc
cltd
xchg
nop
lea
add
fsubrl
scas
pop
iret
dec
xor
add
or
mov
mov
in
es
ret
enter
mov
clc
negl
or
stos
pop
cmp
in
add
add
sbb
xor
add
clc
pop
popf
out
xchg
jnp
jecxz
out
mov
cmp
fidivs
clc
cmc
clc
inc
add
and
jmp
clc
jo
add
fs
and
add
inc
clc
cmp
add
loope
mov
add
incl
loopne
lcall
mov
insl
shlb
mov
es
addr16
and
add
sbb
clc
ficompl
add
fwait
jmp
je
adc
add
add
push
sub
fwait
jmp
or
push
fwait
jmp
test
xor
pop
scas
and
add
leave
lret
xor
cld
push
ret
sub
cld
mov
clc
test
sarb
xlat
imul
add
add
cmp
loopne
xor
clc
push
ss
call
cmp
add
jo
cld
push
ret
test
add
mov
clc
mov
add
cmp
je
add
aas
clc
int3
or
clc
jge
clc
mov
cmp
sbb
jns
xchg
std
pop
pop
aad
clc
in
mov
sub
call
push
fwait
jmp
nop
outsl
enter
loopne
sub
adc
add
clc
adc
add
dec
pop
ljmp
xor
add
add
add
clc
add
add
push
cmp
out
cwtl
jmp
fwait
jmp
fs
clc
jmp
add
add
nop
xor
add
lret
jmp
js
clc
mov
fwait
and
add
sbb
mov
xor
add
dec
and
add
xlat
jbe
push
add
and
add
clc
test
sbb
cld
push
ret
sub
add
clc
xor
add
sti
push
add
pop
mov
test
jp
or
push
clc
pusha
add
loope
aam
faddp
clc
push
mov
jecxz
fs
shlb
cmp
add
out
inc
clc
jp
or
aam
add
push
add
in
lret
add
lock
mov
clc
mov
lret
lret
dec
insl
sbb
xor
add
in
dec
sub
lret
add
fwait
jmp
sub
xor
cmp
adc
add
add
mov
insl
xchg
jo
add
clc
pop
and
add
nop
xchg
stos
push
mov
fwait
jmp
ja
sbb
clc
inc
add
jne
and
add
fwait
jmp
sub
mov
negb
add
clc
outsl
mov
fisubl
pop
out
scas
scas
ss
jge
and
add
sahf
sub
mov
jge
in
mov
inc
clc
scas
pop
ljmp
daa
clc
pop
xlat
jns
add
fmuls
clc
mov
mov
add
test
sbb
pop
jmp
pushf
xchg
or
sar
mov
fisubl
or
add
and
add
mov
clc
mov
dec
jecxz
ret
clc
aas
jmp
add
add
mov
add
sbb
arpl
add
fdivrl
clc
in
jbe
popf
fnstcw
xor
add
inc
add
adc
add
out
adc
add
add
icebp
fimuls
nop
movsb
clc
mov
dec
mulb
clc
mov
jbe
adc
popa
add
popa
add
jmp
cmp
mov
jb
add
jg
mov
ss
cltd
clc
cmp
clc
lock
add
jmp
add
add
xchg
cmp
push
add
xchg
jns
sub
add
add
add
push
add
push
pop
and
add
add
cmp
cwtl
daa
clc
pop
push
pop
sbb
mov
jmp
sub
add
jb
add
add
ret
cmpsl
clc
sub
clc
dec
sbb
add
pop
nop
fsubs
add
inc
clc
lret
aaa
adc
add
add
repnz
xor
add
add
testb
clc
push
clc
cwtl
cmp
scas
xchg
mov
jl
add
lea
fidivrl
jb
add
clc
xabort
in
sub
pusha
add
add
add
xor
add
divl
add
clc
push
xchg
xchg
adc
clc
js
stc
loopne
in
outsl
jae
add
imul
add
pop
adc
jp
add
mov
stos
ljmp
out
arpl
add
mov
clc
aaa
fildl
add
pop
inc
clc
lods
shr
movsl
clc
cmp
pushf
neg
lahf
cmc
test
or
in
or
mov
add
adc
add
or
fstl
fwait
jmp
pop
outsl
push
mov
ret
clc
repnz
xchg
jne
lods
test
clc
in
sub
add
push
jmp
cmpsb
test
add
pop
and
add
jmp
jmp
add
in
mov
clc
into
stos
dec
sar
add
mov
es
mov
add
and
add
add
mov
clc
cmp
mov
add
mov
jmp
movsb
lea
mov
call
leave
add
clc
pop
fistpll
ret
add
add
mov
clc
pusha
add
negb
ja
das
fildll
cmp
mov
add
jp
add
push
push
add
ja
aaa
sub
iret
pusha
add
push
mov
fwait
jmp
je
add
fwait
aaa
fwait
or
jg
pop
je
es
adc
add
add
mov
inc
clc
dec
fnsave
fwait
cmp
sbb
push
imul
xchg
xchg
addr16
inc
clc
sbb
ror
jbe
jmp
fwait
jmp
sbb
out
int3
adc
stos
movsb
clc
mov
enter
imul
bound
add
pusha
add
icebp
sub
out
mov
stos
mov
add
sub
add
clc
cmp
mov
sub
mov
lea
push
movsl
clc
out
adc
xchg
inc
add
je
mov
clc
cmp
clc
mov
and
push
cmpl
fwait
jmp
movsb
cmpsb
sub
add
adc
ret
clc
xor
mov
clc
adc
add
or
push
cmp
push
cld
push
ret
cmpsb
or
dec
loopne
dec
cmp
outsb
addr16
inc
clc
scas
mov
jecxz
or
add
or
sub
add
sbb
add
add
ret
clc
dec
adc
add
sub
mov
clc
cmpsb
clc
leave
mov
dec
or
jnp
xor
push
add
shlb
jecxz
mov
jmp
imul
jmp
sub
add
inc
add
rorl
or
jl
clc
pop
cmp
shrl
add
mov
add
add
clc
cld
ret
clc
sar
mov
jmp
or
xor
imul
add
inc
add
out
out
ret
test
clc
stos
inc
clc
aas
inc
add
pop
addr16
mov
or
add
dec
or
add
jmp
adc
add
clc
sub
mov
stos
adc
add
add
bound
add
idivb
mov
clc
pop
clc
mov
clc
cmp
push
ljmp
jno
add
sbb
push
popa
add
inc
add
fdivl
xchg
inc
add
pop
sbb
jnp
jge
clc
xor
add
clc
push
add
fstpt
add
data16
imul
clc
mov
clc
scas
pop
shll
clc
xchg
dec
cmp
sbb
xchg
jbe
add
dec
movsl
clc
icebp
pop
out
mov
test
add
add
add
jno
add
ja
popa
add
pushf
aas
xchg
jge
jns
add
pop
es
and
add
js
repnz
clc
pushf
shr
test
pop
mov
dec
clc
push
clc
repnz
lock
aad
aam
clc
loop
mov
ss
addr16
jecxz
pop
xchg
test
add
lcall
cmp
xor
clc
enter
pop
jg
clc
fstps
fs
rolb
add
add
add
add
clc
sub
data16
out
xor
add
and
add
inc
clc
jae
add
push
add
fs
mov
je
cmp
clc
mov
daa
clc
into
bound
add
add
add
add
pop
ja
cmp
clc
or
clc
cmp
mov
clc
mov
clc
pop
add
add
push
jmp
mov
add
lcall
clc
sar
clc
mov
repnz
clc
pop
mov
mov
add
add
cmpsl
clc
std
shl
clc
cmc
out
jecxz
and
add
add
ret
clc
cmp
clc
inc
clc
inc
clc
adc
add
cmp
add
add
add
test
ret
clc
movsb
clc
scas
aam
cmp
pop
clc
add
add
aas
loopne
inc
clc
bound
add
scas
mov
add
fwait
jmp
xor
adc
clc
into
cmp
add
and
add
clc
mov
insb
xchg
add
add
test
cmp
add
cmp
aaa
fnstenv
add
jns
shrb
clc
mov
add
jae
add
add
add
movsb
clc
mov
adc
cmc
push
out
jmp
clc
sbb
arpl
add
sbb
jmp
sub
or
xbegin
push
clc
mov
out
je
add
lods
stc
mov
test
lea
push
add
dec
call
add
scas
push
xchg
push
mov
fwait
jmp
or
add
jecxz
or
jns
push
add
or
jg
fwait
jmp
xor
cmc
scas
scas
mov
push
ret
popa
or
out
sub
mov
pop
mov
pushl
xchg
scas
test
push
add
mov
push
xbegin
cmc
adc
add
sar
clc
int3
lea
fs
in
mov
lods
cmp
add
add
add
cmpsl
clc
aaa
jo
add
add
jns
mov
gs
mov
add
add
add
clc
inc
add
movsl
clc
cli
jl
call
add
test
mov
sub
add
out
mov
pop
clc
mov
clc
pop
xor
add
jecxz
push
lea
fwait
jmp
andb
je
add
push
pop
hlt
je
add
push
adc
into
loopne
xor
add
add
jmp
sub
shlb
sub
fs
push
lods
jo
add
clc
fwait
xor
add
clc
cmp
add
cmp
xchg
rcll
add
popf
dec
out
out
cld
lret
leave
stos
push
clc
mov
stos
cmp
add
sbb
nop
pusha
add
ret
clc
push
mov
and
add
jl
clc
jp
add
or
clc
fs
jmp
xchg
shll
add
out
mov
clc
rcr
movsb
clc
cmp
mov
add
jne
popf
aam
clc
scas
cmp
cmp
inc
clc
lret
outsb
sub
mov
xchg
mov
test
es
mov
jmp
add
add
add
sub
add
sahf
test
add
push
add
popf
lret
test
inc
clc
inc
clc
fiadds
clc
pop
cld
clc
popa
add
cmp
call
ret
clc
ret
out
inc
clc
fildl
add
decb
add
and
add
lret
popf
cwtl
je
dec
clc
stos
cmpsl
clc
cmp
rolb
add
mov
aaa
jge
iret
popa
add
pop
idivb
add
add
lods
iret
inc
clc
sbb
movsb
clc
sub
adc
add
jnp
add
ret
clc
clc
push
and
add
clc
cmp
adc
clc
dec
in
sar
add
add
lea
add
adc
add
add
inc
clc
int3
jle
dec
pop
cmp
cltd
push
add
test
add
pop
lcall
add
add
inc
clc
inc
add
gs
int3
lret
cli
fwait
inc
clc
sbb
add
scas
or
clc
push
jl
jmp
xlat
xbegin
mov
xor
add
icebp
daa
clc
lcall
mov
ljmp
lea
xchg
xchg
ds
clc
or
add
add
fisubs
cmp
add
jb
add
insl
adc
add
pop
in
call
mov
pop
lcall
add
sbb
rorl
xor
add
bound
add
push
add
xchg
dec
add
test
cmc
add
add
es
xor
add
add
pop
mov
inc
clc
push
add
or
mov
mov
xor
inc
add
add
add
iret
sar
cli
aam
iret
xor
imul
fwait
jmp
cmp
sbb
clc
faddl
add
iret
in
and
int
add
pop
sbb
pop
cmp
add
or
dec
jge
cmpsl
clc
frstor
clc
mov
inc
clc
or
mov
fwait
jmp
or
add
data16
sbb
sbb
enter
add
clc
into
xchg
xor
add
cltd
sar
jmp
add
xor
add
clc
cmp
clc
ss
fldl
add
add
ljmp
mov
fwait
and
add
add
push
ret
pop
test
add
add
clc
push
inc
add
or
sub
pop
cmp
popa
add
aam
xabort
nop
lea
dec
fisubl
add
dec
mov
push
add
inc
clc
sbb
clc
lods
fwait
stos
and
add
cs
sahf
pop
mov
add
clc
pop
cmpsb
clc
dec
jo
add
clc
outsb
pusha
add
mov
cmp
out
or
clc
sub
sbb
add
and
add
bound
add
int
sar
clc
mov
add
fwait
jmp
sub
ja
add
mov
dec
push
push
mov
dec
cmp
add
fs
mov
add
inc
add
jae
add
xchg
jecxz
and
add
mov
das
inc
clc
sbb
clc
es
sbb
jmp
pop
push
or
add
imul
clc
pop
mov
sub
mov
fwait
jmp
sub
insl
jmp
aam
push
sbb
jmp
jp
fs
test
add
fcoms
outsl
and
add
icebp
inc
add
mov
xor
clc
imul
adc
add
mov
clc
add
in
pop
fcmovb
clc
add
add
clc
mov
mov
inc
add
mov
cmp
push
add
inc
clc
cmp
insb
ja
add
das
mov
sbb
mov
jb
add
gs
or
cld
jnp
sub
jg
fstps
sub
fwait
jmp
nop
data16
add
mov
fisttpl
jns
clc
outsb
xchg
sbb
popl
add
movsb
clc
or
mov
sub
repz
sar
add
jmp
jbe
clc
mov
pop
mov
mov
fwait
jmp
scas
andb
add
movsb
clc
cmp
add
add
clc
or
cmp
clc
outsb
xor
add
pop
dec
xor
add
ss
add
test
cmp
adc
add
push
add
add
bound
add
mov
add
and
add
add
pop
cli
rcr
push
clc
clc
fdiv
inc
clc
rcll
adc
add
out
sub
push
add
iret
sahf
jp
push
add
insb
xor
add
jae
add
pop
or
add
or
sbb
clc
sbb
clc
adc
add
lret
shrb
clc
or
clc
xor
add
shll
out
and
add
stos
xabort
pop
int
call
out
imul
cmp
add
xchg
xchg
cltd
rcll
add
mov
clc
adc
add
add
inc
add
stc
aaa
cmp
jo
add
clc
or
add
push
add
mov
clc
imul
or
add
add
add
popl
add
or
and
add
sub
cmp
fnstcw
clc
testb
add
xor
add
add
rclb
mov
add
clc
pushf
sarl
sub
jns
clc
adc
add
and
lods
adc
add
add
enter
sbb
jmp
push
cmp
clc
add
add
inc
clc
push
clc
or
out
pusha
add
clc
mov
cmpsl
clc
js
clc
cmp
cmc
insb
cmp
jmp
fwait
jmp
add
pop
stos
jbe
loop
fdivl
add
mov
xchg
stos
int
clc
or
daa
clc
leave
mov
scas
std
add
add
jb
add
sub
jg
lods
sbb
add
and
add
jmp
addr16
push
cmp
cltd
mov
pop
inc
add
fs
hlt
mov
aaa
add
add
adc
or
xor
or
popa
add
ffree
clc
pop
inc
clc
rcrb
add
dec
xor
add
clc
out
mov
imull
clc
mov
xor
add
sub
sub
clc
cmp
sub
clc
mov
add
lods
jmp
add
push
add
dec
lret
xor
inc
fwait
jmp
adc
and
mov
jbe
clc
cmpsb
clc
push
add
outsb
mov
add
in
add
add
add
data16
iret
in
inc
add
or
inc
clc
inc
add
add
add
jp
clc
and
add
sarb
out
pop
pusha
add
inc
add
inc
clc
pop
or
inc
add
dec
pop
ret
clc
lods
addr16
lcall
clc
cmp
jle
pusha
add
insl
jno
add
bnd
pmullw
add
cmp
and
add
aad
pop
lcall
sbb
adc
iret
sbb
clc
das
sbb
jmp
add
sub
clc
das
cli
push
add
add
dec
cmpsl
clc
out
call
rep
fwait
jmp
sub
lods
pop
pop
test
shrb
cmc
mov
clc
push
cmp
clc
mov
inc
clc
fbstp
add
scas
sub
mov
cli
psubusb
clc
fwait
rcll
clc
lahf
cltd
sbb
test
jmp
push
stos
sbb
add
adc
add
add
add
mov
add
fwait
jmp
dec
stc
rcrl
sar
xchg
fwait
jmp
or
jecxz
leave
cwtl
fdivr
push
add
pop
clc
push
xabort
ss
adc
xbegin
jmp
xabort
enter
or
in
jbe
lahf
cmp
inc
add
mov
pop
inc
clc
mov
clc
xchg
and
add
clc
push
add
ss
imul
clc
mov
cmp
fwait
jmp
pop
cmpsb
jno
imul
add
pop
sbb
clc
iret
lea
add
pop
or
clc
and
add
clc
sub
add
clc
scas
dec
shrl
add
push
add
jecxz
jmp
std
mov
jl
mov
add
out
cmpsl
clc
xchg
and
add
cs
out
bound
add
loop
inc
clc
jno
add
sarl
xlat
inc
clc
xor
add
push
pop
incb
add
loop
pop
cmp
call
jmp
jg
xor
insb
jne
clc
xchg
push
add
dec
fs
push
out
scas
lret
cmp
cmp
clc
or
clc
vminps
add
add
add
out
xchg
pop
test
mov
stos
jnp
dec
movsl
clc
adc
add
jae
add
clc
xor
add
add
add
add
clc
xor
sahf
clc
js
xor
add
lea
sahf
in
mov
add
push
ret
adc
addr16
aad
scas
jns
dec
fsubs
add
inc
fwait
jmp
sub
push
testb
add
shll
add
add
add
or
into
loope
add
add
clc
sar
sub
fldenv
add
enter
clc
test
mov
dec
bound
add
stc
mov
sub
lret
add
add
cld
push
ret
jg
fs
clc
lods
inc
clc
add
add
clc
inc
add
lcall
clc
sti
sub
add
aam
add
sub
add
cmp
add
dec
das
mov
add
adc
add
add
mov
add
lret
add
test
fistpll
mov
add
ret
clc
fsts
and
add
push
add
jg
cmc
adc
add
or
push
clc
jne
clc
fadds
clc
push
adc
imul
fwait
jmp
push
cmp
clc
fld
clc
mov
repnz
test
pop
in
jns
int3
sbb
mov
add
inc
clc
pop
jns
lret
clc
incl
push
ret
sub
xor
mov
nop
xchg
clc
adc
add
push
data16
cltd
leave
xor
add
inc
clc
std
mov
xlat
xor
add
push
fwait
jmp
dec
sahf
push
cmp
or
fwait
xchg
pop
aam
lret
xchg
icebp
and
add
mov
cli
sbb
add
add
clc
mov
push
fwait
jmp
fs
sbb
shlb
and
dec
inc
clc
mov
mov
jge
dec
pop
pop
test
clc
push
rcll
or
dec
jne
insb
inc
clc
movsb
clc
push
test
enter
sub
sbb
jno
add
clc
call
add
and
das
rcrb
in
aam
add
mov
jnp
clc
cmp
mov
test
fwait
jmp
or
aas
xchg
pop
clc
adc
add
push
fs
sub
and
test
test
dec
lea
jg
clc
aad
test
aam
clc
into
xchg
push
add
fwait
jmp
mov
ficomps
clc
pushf
lods
and
add
outsb
xchg
fwait
mov
xchg
push
mov
add
add
leave
adc
add
add
outsb
sahf
in
and
add
xlat
push
jecxz
and
add
add
sbb
add
and
add
movsl
clc
sub
clc
or
add
add
pop
add
cmp
and
add
add
inc
add
dec
ret
mov
dec
jmp
ret
push
dec
pop
mov
adc
add
add
adc
add
clc
jo
add
clc
inc
add
add
add
repz
jg
clc
push
add
jl
ss
add
clc
push
add
frstor
int
fadds
add
pop
mov
and
add
call
fcoml
add
hlt
jb
add
add
add
add
inc
add
fchs
clc
popf
inc
clc
sahf
push
xor
add
push
fs
push
adc
add
fbstp
add
inc
clc
or
repnz
add
push
add
clc
sar
clc
xor
add
push
or
add
cmp
clc
xor
mov
lcall
call
add
mov
mov
xor
add
add
add
jae
add
add
cmpsl
clc
mov
cwtl
je
and
add
jmp
sbb
sub
lods
repnz
add
dec
cmp
aas
sub
push
add
cltd
clc
cmp
dec
aas
sar
icebp
cmp
push
cld
push
ret
sub
sub
clc
lods
push
outsl
fstps
cld
rcl
mov
mov
jbe
clc
je
add
dec
sbb
jmp
or
sub
mov
clc
dec
test
mov
clc
inc
clc
lret
add
add
add
xchg
or
sahf
add
add
or
fs
outsl
xbegin
aas
ljmp
notl
add
inc
add
std
sbb
jmp
or
clc
xor
add
mov
add
movsl
clc
lret
mov
jmp
sahf
sub
cltd
leave
rorb
adc
add
pop
inc
add
inc
clc
add
add
push
cmpsb
clc
test
push
add
pop
sub
div
fwait
jmp
jp
sub
test
cmp
enter
pop
pop
cwtl
ljmp
fdivrs
jne
clc
gs
mov
clc
mov
pop
and
add
add
cmp
outsl
or
add
sub
add
push
push
add
push
clc
sahf
lahf
and
add
aas
mov
clc
aam
mov
clc
out
test
test
clc
shll
xchg
nop
out
push
test
bound
add
mov
fcmovnbe
dec
push
add
test
int
add
fwait
jmp
sbb
cmp
clc
adc
add
add
sbb
clc
adc
ja
clc
adc
add
mov
clc
cwtl
imul
hlt
jne
pop
dec
mov
clc
clc
and
add
add
and
add
popa
add
xchg
xor
add
add
sar
mov
fwait
jmp
sub
push
test
stos
xlat
and
mov
sahf
inc
add
sub
and
clc
in
imul
clc
divl
add
popf
cmp
hlt
pop
fstl
add
cli
addr16
adc
add
movsl
clc
dec
and
jmp
push
loopne
cmpsb
clc
fwait
sub
add
clc
cmpsb
clc
test
cwtl
repz
clc
incl
es
add
sub
sub
loop
cmpsb
clc
ljmp
clc
sar
add
imul
ret
jle
jno
add
cmp
mov
push
outsl
fs
mov
add
cmp
hlt
xchg
mov
xor
add
in
adc
ror
addr16
sbb
or
ret
sub
or
add
into
test
push
jle
xchg
in
in
pop
sbb
add
add
cli
dec
cmp
mov
add
lea
xor
add
mov
add
sar
mov
pop
clc
or
clc
scas
and
add
lods
mov
xor
add
mov
lods
sub
add
mov
clc
fs
xchg
filds
add
xor
jg
mov
fwait
jmp
sub
adc
add
add
push
scas
call
clc
add
push
xor
add
add
bound
add
clc
lea
lahf
cmp
daa
clc
cmp
fwait
fwait
aam
add
iret
cwtl
into
jo
add
xabort
mov
add
hlt
adc
add
add
pushf
mov
push
add
stos
jns
pop
fwait
bound
add
mulb
xbegin
clc
xlat
cmpsb
clc
addr16
in
push
cmpsl
clc
cwtl
in
test
lods
movsb
clc
xchg
or
lods
out
jbe
clc
imul
jle
cmp
mov
or
cmp
sbb
add
adc
xchg
jp
aas
mov
lahf
mov
jne
jnp
sub
add
mov
add
add
sub
jmp
lods
sub
clc
addr16
cmp
dec
scas
aas
lret
add
mov
and
add
cmp
nop
fistpl
fcmovbe
jne
clc
cmp
push
clc
movsl
clc
imul
add
shlb
scas
cmp
fcmovnb
clc
dec
push
mov
fwait
jmp
dec
mov
repz
stos
das
cli
and
sbb
add
scas
sub
mov
clc
pop
sub
insl
lret
sahf
testb
sub
clc
mov
xchg
fadds
add
clc
test
add
aas
inc
add
into
xchg
outsb
push
outsl
fwait
jmp
jg
sarb
gs
lock
clc
adc
add
clc
jmp
setge
clc
pop
xabort
clc
loop
cmp
cld
push
ret
mov
xor
add
adc
add
fwait
lods
test
add
cld
xbegin
mov
fwait
jmp
or
cmp
clc
popa
add
push
clc
push
add
add
add
clc
mov
clc
gs
lret
or
sahf
dec
mov
lea
idivb
add
jmp
clc
dec
popa
add
mov
push
add
test
test
clc
cmpsl
clc
sub
clc
xchg
bound
add
clc
mov
fdivl
clc
adc
add
clc
nop
and
add
fdivl
add
clc
dec
lret
fwait
mov
add
test
clc
dec
push
add
mov
jbe
mov
push
enter
and
add
inc
add
or
clc
and
add
scas
add
enter
clc
sub
clc
pop
divb
je
xchg
dec
jno
add
cmp
clc
or
push
fwait
jmp
mov
or
add
xchg
rorl
cmpsb
clc
sbb
fwait
jmp
popa
add
lods
sarl
pop
clc
jns
clc
pop
push
repnz
add
repz
clc
faddl
clc
pop
cltd
test
popa
add
pop
fs
mov
clc
aaa
mov
add
insl
cmp
clc
outsb
lret
int3
push
add
xchg
adc
add
ja
clc
movsb
clc
out
or
cmpsl
clc
cwtl
in
cmc
lahf
sbb
and
add
add
add
add
or
push
add
mov
stos
pop
bound
add
scas
and
add
adc
add
clc
adc
add
lock
sub
fwait
jmp
popa
push
sbb
or
add
add
repz
pop
cmp
lcall
pop
clc
scas
stc
imul
add
inc
add
xchg
push
add
jle
stos
pop
adc
sub
jns
mov
clc
sub
add
and
add
pop
fwait
jmp
sub
outsl
fs
adc
mov
decb
inc
add
popf
xchg
repz
lea
int3
cmp
movsb
fwait
jmp
sahf
sub
xchg
mov
dec
push
fwait
jmp
cmpsb
sub
nop
cmp
jl
inc
clc
jb
add
loope
js
add
cmc
loopne
pop
clc
mov
add
scas
add
add
call
cld
push
ret
adc
xor
add
into
rcll
shlb
clc
dec
mov
xor
lret
add
fwait
cwtl
cmp
add
int3
jns
aas
lcall
add
cmc
test
ret
clc
push
add
repnz
repz
test
or
clc
adc
add
faddl
add
xor
add
inc
add
pop
inc
add
xabort
out
out
push
add
pop
mov
push
add
push
add
cwtl
int
in
data16
cmpsb
clc
sbb
pop
lcall
decl
push
push
cld
push
ret
es
scas
outsl
loop
inc
add
xor
add
add
dec
lcall
sub
clc
data16
inc
add
cwtl
sar
jns
cmp
clc
test
fldcw
inc
clc
cmp
xchg
add
cmpsb
clc
ja
sbb
lea
ret
clc
xor
dec
mov
clc
cli
dec
test
add
add
std
pop
clc
jg
add
imul
push
add
sar
add
cltd
addr16
cmc
clc
sub
clc
add
add
add
in
xchg
arpl
add
add
test
fmull
inc
clc
cwtl
xchg
movsl
clc
pop
mov
pushf
cmp
add
clc
scas
loop
sbb
xor
add
add
jecxz
addr16
cmpsl
clc
pop
cmpsb
clc
mov
stos
pop
ljmp
lcall
add
xor
add
lcall
imul
clc
pop
inc
add
lock
xchg
push
in
not
data16
push
add
sub
mov
mov
movsl
clc
lock
add
cmp
mov
div
add
add
add
fmull
clc
sub
add
inc
add
into
gs
or
enter
clc
pop
jb
add
clc
lods
sub
clc
packuswb
cld
push
clc
xor
add
and
add
add
ret
add
adc
add
clc
xor
add
fwait
in
cmp
jne
add
xchg
cmp
dec
ljmp
fs
dec
dec
stc
dec
insl
sbb
add
inc
add
dec
int3
mov
clc
ret
clc
add
sahf
loopne
jge
sarl
xchg
insl
inc
add
xor
add
add
xor
add
clc
testb
add
add
xor
add
push
adc
add
and
add
clc
adc
add
aam
jp
clc
pop
ds
sahf
jp
mov
mov
push
or
add
aad
clc
adc
add
clc
and
add
or
or
cld
mov
test
hlt
pop
scas
cmp
jp
pop
cld
push
ret
inc
cmp
clc
or
mov
add
mov
push
fisttpl
mov
clc
dec
fldenv
and
add
mov
add
add
add
clc
xor
add
pop
testl
dec
push
cmp
dec
mov
daa
clc
dec
sbb
cmp
clc
pop
sbb
clc
xlat
sar
sti
mov
add
mov
add
mov
clc
jmp
sub
clc
mov
xor
add
clc
mov
sub
clc
loope
out
mov
clc
sub
or
cmp
cmp
clc
sub
mov
add
inc
add
push
add
push
lret
int3
in
mov
add
outsb
or
cmp
clc
dec
jl
and
add
clc
ljmp
jns
and
add
jmp
push
sbb
inc
add
mov
mov
or
sti
decl
sahf
decl
clc
scas
fbstp
popa
add
xbegin
clc
cmpsb
clc
cmc
adc
add
fistpll
loop
cmp
aaa
dec
aas
das
cmp
add
in
into
imul
add
insl
xor
add
clc
lods
mov
add
add
add
js
lea
clc
leave
mov
cmp
add
push
add
sti
xchg
pusha
add
cmp
clc
insl
aas
ja
shlb
add
js
push
lahf
add
add
mov
loope
sahf
sarl
ficompl
imul
ds
ret
clc
dec
sbb
inc
clc
mov
clc
aas
cmpsl
clc
jae
add
jecxz
loop
cmp
clc
jae
add
clc
xchg
ljmp
add
scas
xchg
and
add
mov
mov
push
xor
add
add
push
popa
add
jne
add
out
outsl
decl
inc
ljmp
mov
stos
mov
add
add
mov
add
add
in
and
add
add
add
in
aad
add
into
ret
clc
mov
add
adc
add
cmp
aad
push
clc
repnz
adc
add
pop
mov
jmp
push
jp
xbegin
add
inc
clc
mov
clc
out
push
adc
add
add
add
add
in
mov
clc
jb
add
ds
jg
add
add
clc
add
add
add
add
add
add
push
add
int3
fsubl
clc
mov
add
fs
aaa
jns
sbb
add
sub
lea
loop
jne
std
pop
push
add
jne
ds
lcall
add
xor
add
add
lods
icebp
popf
sub
xchg
sar
xchg
xbegin
push
fwait
jmp
pop
xchg
insl
je
sbb
and
add
xlat
imul
icebp
and
sar
clc
dec
sahf
cmp
mov
fwait
jmp
adc
ret
clc
data16
iret
sbb
popf
mov
aaa
js
clc
mov
in
outsl
sbb
xor
xor
add
pop
shlb
add
clc
sub
add
mov
lahf
pop
or
sub
clc
out
stos
pop
lcall
jmp
test
push
adc
mov
clc
cmovo
add
mov
adc
jmp
or
clc
sub
clc
add
adc
mov
fmull
push
add
sbb
xchg
in
pop
clc
mov
int
divb
add
fisttps
add
das
push
pushf
aaa
test
clc
inc
add
xsave
add
add
clc
call
nop
xchg
sub
add
add
or
stos
bound
add
loopne
pop
clc
and
fwait
ret
clc
daa
clc
jnp
inc
add
in
or
add
out
xor
add
clc
cmp
add
mov
decl
scas
sub
add
dec
push
lcall
add
mov
jae
add
and
cmovge
mov
add
add
pop
cltd
and
add
or
add
add
add
add
add
cmp
add
cmp
add
stos
jb
add
clc
dec
mov
jg
in
and
lods
cli
loope
sbb
in
xor
add
pop
fsts
test
repz
popa
add
mov
clc
fisubrl
addr16
mov
mov
test
ror
inc
add
enter
test
sub
add
jno
add
jp
das
sbb
lods
fnstsw
and
add
add
nop
push
sub
xor
clc
inc
add
ja
add
icebp
nop
xchg
push
test
xchg
scas
or
clc
cli
adc
add
jp
add
repnz
ret
push
jmp
je
insb
lret
dec
call
fisttpll
add
adc
add
rcll
add
mov
das
xor
add
xor
xchg
lods
pushf
aam
or
clc
popf
pusha
add
mov
insl
jmp
mov
add
lcall
popf
out
mov
testb
and
cmp
add
insb
notb
aad
out
inc
add
call
push
ret
push
ja
push
jb
add
jp
inc
clc
arpl
add
push
ret
aaa
ja
or
pop
push
mov
jb
add
outsl
xchg
cmp
fwait
ja
jne
in
shl
cmp
lcall
incl
and
add
xchg
movsl
clc
mov
sbb
clc
ss
push
cld
push
ret
sub
movsl
clc
out
jl
add
jo
add
add
mov
arpl
add
clc
ret
clc
idivb
add
sbb
test
test
lcall
call
inc
add
mov
inc
fwait
jmp
adc
gs
inc
clc
mov
push
je
fwait
jmp
cmp
push
clc
sar
sbb
and
sub
js
or
cmp
imul
into
adc
insl
inc
add
mov
clc
dec
jnp
and
add
movsb
clc
mov
rcr
cmp
sub
pop
scas
inc
clc
in
mov
into
sbb
add
add
or
xbegin
add
fstl
add
loope
jp
fsubrl
jne
fwait
jmp
sahf
mov
mov
cmp
add
xor
pop
jo
add
xor
add
xor
add
xchg
xchg
out
pop
jnp
mov
clc
popf
lock
mov
clc
jle
add
push
or
add
lahf
arpl
add
xor
add
cmp
add
push
fs
sahf
push
add
test
fdivp
push
add
hlt
jl
jl
or
add
add
add
jmp
or
add
add
add
clc
or
jbe
sub
add
sub
test
clc
aad
adc
cld
stos
mov
data16
inc
add
jmp
push
ret
cwtl
es
lahf
and
pop
ljmp
cltd
and
fwait
jmp
sub
pop
mov
aad
sub
seto
add
icebp
scas
inc
clc
setno
add
pop
mov
clc
cmpsb
clc
pop
fdivl
mov
pop
clc
scas
mov
add
add
xchg
je
sbb
push
ret
add
out
inc
add
xchg
sar
add
xchg
daa
clc
ds
aaa
mov
pop
jbe
loopne
jbe
in
pop
scas
cmp
pop
mov
test
clc
fwait
cmp
jg
and
add
aaa
xchg
push
add
ret
in
repnz
dec
sbb
sti
or
in
inc
add
cmp
clc
loopne
or
mov
mov
add
js
clc
movsb
clc
jb
add
add
sar
add
gs
adc
add
mov
clc
test
fiadds
add
add
cmpsb
clc
test
lret
xlat
xchg
and
add
add
jne
add
add
add
add
insb
fwait
popf
cmpsb
clc
pop
movsl
clc
push
jmp
sbb
and
add
xor
add
clc
out
testb
clc
cmpsb
clc
int3
and
add
add
clc
mov
clc
data16
mov
cmp
enter
sub
fwait
jmp
inc
clc
fwait
add
add
lock
loope
dec
cwtl
xchg
pop
jbe
sub
add
cmp
add
xchg
and
add
push
fwait
jmp
xchg
es
imul
dec
cmp
mov
sub
xchg
mov
or
mov
sbb
movsb
clc
cltd
or
add
in
jle
add
out
sbb
scas
xor
add
add
cmp
mov
adc
add
pop
push
add
mov
sar
jb
add
dec
stc
flds
add
cmp
clc
or
add
and
add
insb
push
clc
xchg
inc
clc
cmpsb
clc
lahf
cvtps2pd
fildll
jmp
clc
lret
push
adc
add
das
sbb
js
clc
mov
xchg
divl
add
push
cmp
add
mov
sahf
xor
add
mov
clc
cmp
sub
pop
in
js
mov
clc
bound
add
pop
scas
sub
clc
rol
clc
leave
int
mov
fstpt
pop
ret
clc
add
add
inc
clc
dec
ja
clc
mov
add
dec
xor
call
or
data16
or
test
clc
sub
clc
push
insl
and
add
add
inc
clc
cmp
mov
fnstenv
add
add
clc
xor
add
test
loop
cmp
pop
inc
clc
add
call
sbb
out
loopne
mov
lcall
jmp
mov
clc
jmp
dec
adc
dec
test
clc
pop
xchg
insl
fldt
stc
sbb
shll
ds
cmp
push
push
fwait
jmp
pop
push
movsb
test
clc
pop
cmpsb
clc
fsubrp
jmp
rolb
add
jo
add
cmp
and
add
lea
stc
sub
ret
aaa
add
xor
and
fwait
jmp
je
sar
fcomp
pop
sahf
mov
clc
and
add
fdivrl
inc
clc
ljmp
add
xchg
insl
sub
sub
out
ljmp
repz
clc
bound
add
mov
inc
clc
iret
lret
and
add
jl
adc
clc
sti
mov
clc
xor
add
fwait
movsl
clc
or
clc
js
xchg
inc
add
or
clc
data16
xchg
xchg
push
add
fwait
jmp
mov
clc
int
js
add
add
add
pop
pusha
add
cmp
add
xlat
adc
add
clc
sar
push
pop
mov
mov
clc
xchg
inc
clc
insl
sbb
clc
insl
xabort
add
add
add
pop
jno
add
cmp
xabort
dec
fwait
rdpmc
add
jp
int
dec
lods
cmp
fldl
clc
adc
add
sub
or
pusha
add
hlt
xor
add
mov
loop
and
xor
add
xlat
jbe
push
clc
mov
dec
sub
jae
add
pop
mov
clc
dec
cmpsl
clc
outsl
pushf
int
clc
mov
dec
jmp
fidivl
sbb
push
and
add
add
adc
add
das
xchg
pop
leave
shr
xchg
mov
clc
out
sub
push
out
popf
clc
push
add
fildl
add
pusha
add
ret
add
aad
adc
add
push
clc
sub
adc
add
add
out
scas
jecxz
pop
daa
clc
cmpsb
clc
ja
dec
das
mov
das
jno
add
rorb
sbb
and
sub
int3
cmp
add
jl
leave
std
pop
sbb
push
ret
push
sub
and
cmp
add
xor
add
inc
clc
mov
add
sbb
cmp
sarl
ret
cli
push
add
adc
add
jg
clc
xbegin
push
je
fwait
jmp
ret
clc
cmpsb
clc
mov
decl
cmpsb
inc
add
or
jnp
clc
cld
sahf
repz
clc
outsl
mov
mov
clc
test
int
add
mov
add
inc
clc
arpl
add
add
inc
add
mov
idiv
loop
push
add
push
add
pushf
aam
stos
imul
jne
clc
and
add
sti
xchg
xor
push
cld
ret
dec
sub
lods
push
fcmovnbe
add
add
in
fcoms
jmp
fists
add
add
push
scas
xchg
test
sti
test
pop
fistl
xor
add
out
mov
add
adc
add
clc
iret
lahf
and
in
dec
aam
ss
push
add
jno
add
add
sbb
pop
insl
stos
fcomps
cli
jae
add
clc
mov
clc
in
sbb
dec
std
out
add
dec
lret
inc
add
int3
cld
push
add
or
movsl
clc
xchg
mov
es
dec
xlat
push
add
inc
add
and
add
inc
add
push
and
insb
adc
add
xchg
dec
aam
jmp
push
push
fwait
jmp
sahf
xchg
ja
lahf
cld
inc
add
jl
fiadds
add
dec
mov
pop
sub
pop
or
clc
cmp
test
cmp
add
or
add
xor
gs
popa
add
mov
cmp
out
addr16
insb
ss
std
inc
clc
jg
clc
pop
jecxz
or
cmp
add
test
std
xchg
ja
clc
add
add
inc
clc
cmp
clc
xor
add
sub
cs
clc
outsb
pop
or
cmp
mov
and
add
pop
pop
xor
mov
clc
add
or
aam
clc
lock
push
jb
add
xbegin
clc
inc
fwait
jmp
test
fwait
mov
lods
fwait
adc
add
lahf
pop
popa
add
sahf
adc
ret
and
add
pop
dec
xor
add
sarb
fwait
jmp
push
popa
mov
test
fwait
aas
mov
xor
add
call
add
add
sbb
clc
mov
xchg
adc
add
mov
fwait
jmp
sbb
pop
ret
clc
and
add
clc
imul
cltd
mov
call
cld
nop
scas
or
add
pop
popf
out
xor
add
mov
add
stos
dec
or
loopne
sarb
jb
add
stos
xchg
aaa
in
dec
push
das
push
fldcw
clc
imul
add
add
add
scas
push
push
mov
clc
cmpsb
clc
lock
xchg
mov
push
sar
adc
fistps
add
test
sbb
push
add
sbb
sub
add
clc
in
fistpl
test
clc
cmp
lods
xor
pop
gs
xchg
jnp
clc
mov
das
xlat
mov
sub
or
clc
in
insl
cmp
add
add
add
add
sub
gs
pop
or
lock
stc
mov
sahf
mov
loopne
xchg
out
aad
add
sti
pop
clc
in
int3
inc
clc
incl
sti
fwait
jmp
lods
cmpsb
es
ds
mov
adc
add
add
fs
mov
out
xor
add
cmpsl
clc
aam
hlt
inc
clc
jecxz
xchg
test
notl
clc
mov
sbb
add
cmpsb
clc
das
mov
imul
lods
imul
adc
add
pop
jg
cli
incl
imul
lcall
dec
cmpsl
clc
mov
jae
add
add
testb
and
add
clc
aad
mov
sbb
ret
xor
je
stos
jns
cltd
lahf
push
mov
imul
or
jmp
xor
cmp
push
pop
fwait
jmp
cmp
add
pop
dec
xchg
dec
ljmp
icebp
enter
jg
inc
clc
cmp
out
sbb
call
cmp
clc
push
add
data16
xchg
popf
in
aas
cmp
push
mov
fwait
jmp
or
fs
out
data16
in
aad
add
add
add
add
shl
clc
imul
add
mov
loopne
xor
add
lods
inc
add
cmpsb
clc
cs
mov
fwait
jmp
sub
loopne
sbb
or
outsb
arpl
add
add
add
add
xchg
fs
push
lcall
decl
clc
imul
jne
mov
mov
aas
jg
add
out
cli
pop
jmp
pop
clc
mov
add
mov
add
add
clc
adc
add
movq
add
fnstsw
in
and
add
clc
adc
add
mov
clc
popa
add
adc
add
or
cmp
es
ljmp
add
mov
mov
out
repz
and
add
push
add
jge
out
mov
add
mov
popf
test
add
sbb
push
add
xabort
add
pop
sub
aad
sub
pop
mov
cmp
add
je
xchg
dec
dec
jecxz
movsb
clc
jae
add
pop
add
add
int
mov
roll
add
lods
test
push
popa
add
dec
lahf
fbld
add
jbe
dec
popa
add
dec
jecxz
out
fsubrl
or
rep
fwait
jmp
insb
dec
mov
imull
adc
add
imul
add
add
add
jno
add
clc
leave
xlat
xchg
pusha
add
xchg
cld
push
incl
mov
in
jp
inc
nop
jno
mov
fwait
jmp
mov
add
loope
cld
clc
int3
xbegin
clc
stos
loop
and
add
mov
mov
ljmp
push
dec
sbb
in
stc
hlt
jns
add
leave
sbb
aas
mov
add
pop
aam
clc
adc
add
into
mov
lods
ljmp
and
add
mov
jmp
filds
add
clc
add
dec
dec
cli
repnz
ds
into
pop
xchg
es
insb
sbb
sub
test
scas
lcall
decl
mov
lahf
or
lea
add
mov
add
sti
add
add
nop
or
clc
outsb
cs
cli
or
cwtl
xor
add
in
divb
sbb
adc
stc
int3
pop
clc
sbb
clc
into
pop
cmp
push
jo
add
sbb
add
cmp
cld
push
ret
sub
pusha
add
ss
clc
dec
xchg
out
fildll
jbe
add
dec
sub
mov
adc
xchg
or
add
push
and
add
clc
cmpsb
clc
inc
clc
jmp
clc
pop
bnd
mov
sbb
cmp
mov
clc
test
or
loopne
pop
push
pop
test
out
in
arpl
add
clc
cmp
clc
daa
clc
aas
mov
and
add
popa
add
or
clc
push
push
ret
add
push
inc
clc
out
outsb
push
add
jg
and
add
clc
sarb
inc
clc
cmp
mov
mov
mov
clc
jg
out
negb
dec
mov
jne
add
mov
cwtl
sbb
add
sbb
push
in
push
ret
add
clc
jbe
clc
mov
add
inc
clc
pop
jno
add
add
scas
fmuls
or
test
or
add
es
hlt
mov
clc
inc
add
arpl
add
add
add
inc
add
testb
jecxz
das
mov
pop
mov
clc
jbe
daa
clc
add
add
jmp
das
insb
sbb
lcall
incl
fwait
jmp
or
pop
adc
add
xchg
inc
add
and
add
add
lret
fcoml
add
pop
clc
push
push
sar
das
out
xabort
clc
sarl
scas
daa
clc
in
cmp
out
lret
mov
xchg
add
add
aad
clc
adc
add
add
inc
add
jge
mov
sub
clc
scas
repz
clc
mov
or
lods
cmp
ret
clc
jmp
mov
mov
movsb
testl
arpl
add
add
or
mov
add
xchg
es
pushf
lock
aaa
fs
seta
and
cli
add
and
add
movsl
clc
sub
add
mov
imul
add
clc
dec
ret
cmp
xchg
mov
sbb
xabort
xchg
sahf
mov
adc
add
fisttps
add
add
arpl
add
add
xchg
jae
add
arpl
add
jle
add
or
loope
xor
jl
push
mov
jmp
je
popa
and
add
fwait
pop
test
push
lret
add
xor
add
add
xor
clc
xchg
data16
ja
clc
sub
add
sbb
clc
insl
cmp
insl
and
add
sar
lcall
mov
ficompl
fcmovne
enter
mov
clc
pop
xabort
clc
outsb
and
add
in
jno
add
icebp
cmp
sbb
clc
push
add
adc
add
add
pop
xchg
xor
add
clc
inc
add
ja
clc
or
add
dec
arpl
add
leave
enter
adc
test
push
add
or
add
clc
dec
je
add
add
add
jbe
mov
leave
scas
fstpt
sub
add
fimull
lods
test
add
sbb
push
ret
pop
push
pop
inc
xchg
xor
add
aam
stos
hlt
mov
call
add
clc
pop
or
clc
ljmp
add
add
add
mov
clc
clc
repz
xchg
rdtsc
add
sub
lods
jb
add
push
mov
movsb
clc
or
hlt
xchg
test
add
lret
xchg
sbb
mov
jmp
clc
shr
mov
jne
xor
add
loop
rorb
sub
clc
sub
add
add
sub
adc
add
stos
jo
add
add
inc
add
aas
mov
in
std
ret
test
clc
std
sbb
fwait
popf
push
clc
or
clc
clc
or
fcomi
jl
add
xor
add
pushf
adc
mov
xchg
jle
negb
lcall
add
clc
cmc
jmp
and
add
cmp
add
add
test
ss
xor
clc
vshufps
mov
test
daa
clc
clc
mov
add
clc
adc
add
pushf
fidivrs
sti
ret
clc
out
xor
add
jmp
jno
add
pop
push
clc
add
add
dec
popa
add
jl
into
mov
add
xlat
aaa
movsl
clc
adc
add
stc
arpl
add
ja
clc
mov
popf
jle
lock
clc
inc
add
mov
lods
sahf
movsb
clc
xchg
xbegin
out
push
js
stc
aaa
pop
clc
pop
cmp
inc
add
enter
adc
add
clc
out
test
or
sub
clc
or
clc
mov
clc
pop
mov
pop
sahf
in
cmp
clc
dec
mov
cmp
filds
clc
push
mov
fisubs
popf
fldcw
xchg
jbe
push
adc
add
push
add
decl
jmp
push
subb
or
xchg
cmp
inc
clc
cld
jbe
clc
xchg
ret
clc
mov
test
test
add
add
idiv
lods
xchg
outsl
jns
sbb
fwait
jmp
mov
dec
stc
nop
adc
add
push
push
ret
add
cmpsl
clc
inc
clc
and
add
hlt
fldenv
add
mov
add
aaa
adc
add
pop
and
add
xchg
xchg
xor
add
add
add
push
add
pop
clc
js
clc
mov
clc
stos
cmpsb
clc
je
pop
xchg
fwait
outsl
sahf
sbb
mov
dec
jge
mov
xor
add
in
das
out
fisubrs
leave
cld
push
ret
sub
push
in
ficoml
mov
cmp
ljmp
test
jnp
or
lahf
int3
sar
add
inc
add
sub
cltd
xbegin
call
sbb
or
add
test
add
cmp
mov
cmp
es
negl
mov
mov
hlt
call
mov
mov
mov
pop
mov
xchg
daa
clc
mov
out
daa
clc
cmpsb
clc
je
ja
clc
mov
add
cmp
push
add
inc
clc
mov
push
clc
push
mov
add
push
jecxz
shrl
mov
add
xchg
push
arpl
add
clc
loop
or
inc
add
shr
insb
and
add
add
iret
ficompl
icebp
popf
add
add
clc
mov
in
and
add
insb
pusha
add
sbb
in
cmp
and
add
mov
jbe
add
or
add
loopne
mov
sahf
sub
call
mov
inc
add
pushf
pop
cltd
cli
sub
sbb
add
lock
add
bound
add
add
addr16
pop
cmp
and
pop
not
out
add
add
cmp
and
mov
inc
add
imul
mov
add
rclb
add
sbb
mov
lcall
jmp
call
fwait
jmp
cmp
sti
icebp
pop
shrb
add
cmp
add
clc
adc
add
lcall
jo
add
mov
add
mov
sub
add
mov
lods
arpl
add
xor
add
clc
or
add
adc
add
das
popa
add
mov
cmp
pusha
add
stc
pop
mov
pop
sub
jmp
push
cmp
mov
push
add
xor
and
add
cmp
jno
add
add
mov
clc
xchg
ja
or
clc
stc
imul
bnd
clc
sti
cmp
call
leave
mov
add
nop
out
mov
add
mov
test
add
sub
aas
add
lahf
inc
add
fadd
clc
jl
push
add
mov
stos
sbb
add
inc
add
out
outsb
hlt
sub
add
das
fnop
fstpt
sub
add
clc
aas
jns
clc
inc
clc
pushf
stos
mov
cmp
mov
clc
loopne
test
add
add
insl
mov
add
sub
clc
push
xchg
cmp
lahf
xabort
jmp
clc
aam
gs
lahf
mov
sbb
add
pushl
add
mov
inc
clc
pop
cmp
xchg
dec
sbb
clc
xchg
pop
lea
ss
add
add
out
cmpsl
clc
int
fildl
clc
lret
add
scas
cld
pop
sub
outsb
adc
add
xchg
sbb
clc
mov
clc
pop
inc
clc
loope
dec
sbb
add
push
xor
add
push
xor
add
add
clc
pusha
add
ret
out
inc
add
cmp
out
jge
mov
push
pop
fwait
jmp
dec
test
addr16
and
add
add
add
dec
xor
add
xchg
mov
clc
fadds
add
or
pop
cmpsb
clc
jmp
ja
add
sub
add
add
add
inc
add
lock
fwait
jmp
je
popa
sar
add
xchg
and
add
mov
ror
push
clc
enter
clc
inc
add
clc
in
mov
xchg
pop
sar
and
add
clc
add
add
pop
dec
test
mulb
add
mov
xbegin
add
jns
xchg
inc
clc
mov
addr16
mov
lret
mov
pop
adc
add
in
lcall
clc
adc
aaa
add
add
stos
mov
mov
clc
push
clc
call
inc
clc
popa
add
xchg
fs
mov
mov
leave
push
push
aam
incl
dec
outsl
and
rcll
add
clc
cmp
push
clc
jmp
aaa
dec
mov
clc
mov
push
add
dec
mov
inc
clc
jge
inc
clc
dec
pop
jle
pop
cmp
clc
xor
add
jle
mov
cld
push
ret
and
add
clc
nop
cmp
add
nop
sub
clc
pop
fdivrs
popa
add
js
xchg
adc
clc
mov
jne
clc
sub
add
test
cmp
mov
jmp
push
add
ficoml
insb
xchg
inc
add
out
lahf
adc
add
add
add
cli
jo
add
push
push
add
xor
add
pop
cmp
fbstp
outsb
sub
in
int
std
test
and
add
pop
loope
lea
adc
aam
mov
fs
xchg
dec
mov
mov
xchg
aam
fwait
push
add
data16
in
jnp
insl
cmpsl
clc
mov
gs
add
mov
add
add
gs
jae
add
pop
clc
xbegin
push
add
and
add
push
adc
add
clc
xchg
mov
add
clc
rolb
mov
add
push
mov
fwait
jmp
popa
lods
xchg
jp
sub
loopne
addr16
inc
clc
loopne
es
popa
add
stc
cs
add
mov
add
rorb
xchg
sahf
xor
lret
fisttpll
test
lret
add
add
sub
and
add
adc
add
dec
mov
add
iret
cmp
pop
clc
icebp
cmp
clc
fs
mov
add
inc
add
sti
leave
clc
push
scas
insb
aam
xchg
inc
clc
inc
add
shlb
clc
lret
add
lods
arpl
add
and
add
clc
add
mov
add
lea
add
or
ljmp
ljmp
popa
subb
add
add
add
je
mov
imul
call
dec
int3
dec
cmp
dec
xor
push
add
mov
imul
xchg
std
pop
es
sub
clc
repz
add
mov
xlat
mov
call
fwait
jmp
popa
or
icebp
out
pop
out
inc
add
nop
cmp
pop
jns
mov
xor
add
jle
es
inc
add
cmpsl
clc
jb
add
popf
xor
add
test
out
cmpsb
clc
pop
xbegin
clc
fadds
add
inc
clc
fsubrl
or
fwait
jmp
mov
xchg
aas
mov
clc
sbb
aaa
in
mov
clc
mov
fidivrs
ret
clc
xor
clc
outsb
xor
add
add
push
add
outsb
in
fldenv
jle
add
stos
mov
sbb
mov
fildll
xrelease
shlb
fiaddl
or
bound
add
add
sbb
add
cmp
clc
sbb
in
pop
cld
dec
jbe
clc
bound
add
out
xor
add
clc
cmp
icebp
pop
cmp
ds
xabort
clc
lret
xor
add
add
add
pop
and
mov
clc
fdivl
and
add
cli
or
add
imul
push
jmp
sub
add
add
cmp
clc
inc
add
in
jno
add
and
add
push
ret
popa
scas
xor
aas
adc
add
cmpsl
clc
inc
clc
and
add
sahf
push
clc
add
add
clc
cltd
xabort
mov
add
mov
clc
dec
in
fisttpll
imul
shll
lcall
jmp
mov
push
test
clc
or
cmp
add
dec
loop
insb
pop
clc
mov
and
fwait
jmp
add
add
and
pop
mov
add
ret
clc
mov
add
pusha
add
cld
or
adc
add
insl
fldl
clc
jp
add
das
aaa
ss
cld
fdivp
cmp
test
clc
pop
ret
inc
clc
jo
add
and
mov
inc
add
xor
add
jae
add
lcall
stos
push
pushl
cld
push
ret
outsl
mov
jmp
adc
clc
cmpsb
clc
lock
or
mov
data16
out
or
inc
add
or
push
cmp
add
and
add
adc
clc
add
add
mov
int3
xbegin
aaa
push
add
sbb
xor
sub
adc
add
sbb
jmp
push
xor
clc
je
add
mov
dec
push
add
sub
dec
inc
add
xchg
lret
add
mov
push
fstl
das
or
fdivl
add
inc
add
fucomp
out
jecxz
in
movsl
clc
iret
or
sbb
add
shr
pop
clc
in
jmp
jo
add
cmp
clc
sbb
jb
add
clc
add
clc
clc
iret
push
add
fdivr
mov
push
mov
lock
clc
sub
pusha
add
adc
add
daa
clc
add
insl
loop
jp
data16
cmp
mov
dec
dec
xor
add
clc
cmp
outsw
jmp
orb
clc
enter
push
clc
push
jno
add
clc
adc
add
hlt
or
fwait
jmp
jno
adc
hlt
pop
mov
ret
clc
sbb
pop
je
testb
add
add
cmp
in
sub
scas
sub
addr16
xbegin
inc
add
mov
xchg
or
mov
int3
fstl
sub
fwait
jecxz
in
pop
clc
addr16
cmp
xor
add
outsl
lret
push
je
mov
clc
pop
clc
jmp
clc
mov
hlt
inc
clc
out
std
bound
add
imul
ret
clc
shll
cmp
pop
jbe
clc
add
xchg
xchg
push
add
xchg
stos
cmp
scas
leave
jge
fs
add
add
flds
add
xchg
xlat
push
movsl
clc
jno
add
add
add
add
clc
insb
addr16
sbb
jne
clc
mov
clc
mov
std
fstpl
mov
clc
cmp
inc
add
or
js
hlt
stc
mov
popa
add
icebp
aas
xlat
jmp
adc
add
ss
insb
scas
ja
out
test
sar
insb
ret
clc
clc
cmp
add
xchg
cmp
add
add
add
clc
ret
cmp
cmp
xor
add
add
add
clc
bound
add
clc
call
lret
cmp
add
and
push
fcoms
dec
inc
add
or
mov
fwait
jmp
imul
add
cmp
add
test
mov
mov
add
sub
loopne
xbegin
add
add
clc
inc
clc
daa
clc
jp
inc
clc
mov
jno
add
push
add
cmc
leave
outsb
imul
clc
imul
in
popf
out
ja
add
cmp
clc
sbb
into
mov
mov
mov
add
add
clc
cwtl
in
in
and
add
adc
add
push
add
stos
inc
clc
dec
mov
push
clc
xchg
pop
inc
clc
adc
add
add
test
sbb
add
addr16
scas
hlt
bound
add
clc
and
inc
clc
gs
cmpsl
clc
dec
gs
or
repnz
lcall
add
mov
clc
or
sub
fsubrl
dec
jge
cmp
leave
mov
jecxz
mov
movsb
clc
mov
sti
mov
fisttpll
jbe
decl
cld
push
ret
aas
cmpsb
cld
xlat
getsec
pop
ficomps
jae
add
dec
inc
fwait
jmp
jge
jge,pt
mov
add
xchg
sub
add
fwait
jmp
xchg
sbb
add
xor
and
add
sbb
clc
sahf
faddl
add
adc
add
out
outsl
int3
xchg
lock
cmpsl
clc
gs
clc
cld
ds
mull
imull
clc
jne
push
adc
add
jp
clc
sub
cli
adc
add
clc
loope
sub
jmp
jge
sub
cmp
mov
fwait
jmp
jp
insb
das
js
clc
mov
mov
mov
cmp
sbb
mov
fisubrl
cmp
push
jo
add
xchg
xchg
dec
inc
clc
xchg
pusha
add
add
add
clc
repnz
xor
inc
clc
push
adc
add
popf
pop
ja,pn
clc
cwtl
int
leave
mov
mov
cmp
dec
xchg
aad
movsb
clc
mov
sbb
add
or
clc
xchg
jb
add
adc
add
int3
xor
add
add
addr16
ds
pop
clc
push
add
fwait
jmp
subb
sub
clc
imul
clc
push
out
fmuls
clc
mov
ljmp
test
add
add
jl
sar
clc
sub
clc
pop
insb
leave
push
add
adc
add
add
adc
data16
ds
clc
push
xor
add
lock
clc
pop
push
cmpsb
clc
mov
xchg
popa
add
stc
test
add
cmp
outsl
mov
out
clts
clc
pushf
and
add
clc
and
call
adc
add
add
xchg
dec
cmpsb
clc
mov
push
insb
ljmp
sub
or
loop
jle
clc
jp
fwait
idiv
sbb
add
mov
clc
mov
clc
bound
add
or
clc
rdtsc
add
imul
add
sar
lahf
das
inc
add
mov
loop
movd
clc
pop
clc
pop
into
movsb
clc
or
fwait
jmp
sbb
dec
push
sub
adc
add
push
add
cmpsb
clc
into
or
push
add
jo
add
xor
add
inc
clc
mov
add
add
ss
mov
aaa
mov
inc
clc
add
add
add
std
or
push
je
clc
fcomps
clc
jl
clc
aad
loope
xchg
ljmp
fsubl
add
add
and
add
add
stc
out
push
dec
and
add
sub
sti
pushf
push
clc
add
add
xor
pop
ret
clc
xchg
add
add
mov
add
or
fwait
jmp
es
test
loop
popf
mov
xchg
and
add
add
mov
clc
xchg
or
fcoml
add
pop
add
add
lods
and
add
fwait
mov
add
loop
decl
test
jmp
scas
ljmp
xchg
adc
add
push
add
fbld
gs
sbb
lcall
inc
clc
stos
popa
add
push
push
cs
add
jp
adc
add
inc
add
test
add
add
call
cmp
icebp
xchg
xchg
scas
add
das
mov
xchg
jg
jg
clc
in
push
fcoml
mov
push
push
inc
clc
sub
lods
and
add
sar
mov
test
jne
xor
add
pop
clc
shll
cmc
jns
ljmp
sahf
inc
add
insb
xor
sbb
jno
add
pop
push
jmp
sub
sti
xor
add
ja
sbb
push
js
push
add
pop
popf
dec
fld
clc
jl
mov
clc
lock
push
clc
sub
cmp
mov
pop
push
inc
clc
in
cmp
sbb
add
enter
clc
test
or
sar
scas
enter
add
mov
push
add
mov
hlt
enter
jp
imul
clc
fdivr
xchg
ret
mov
add
lret
dec
and
cmp
adc
int
add
fsubrp
mov
xor
add
clc
insl
in
sub
test
xor
add
adc
add
add
pop
dec
out
cmp
js
sub
add
add
clc
adc
add
add
fisttps
add
ret
xchg
shlb
incl
rclb
in
testb
jmp
jnp
rep
jle
clc
mov
clc
clc
and
stc
fwait
jmp
aaa
popa
sub
fsubrs
mov
pop
fwait
jmp
push
xor
je
xor
add
cmp
xchg
lcall
loop
cmp
add
inc
add
add
add
clc
mov
es
and
add
clc
pop
add
inc
add
cmpsb
clc
mov
jo
add
add
lahf
sbb
add
clc
or
clc
jp
loopne
pop
movsb
clc
push
add
repnz
clc
jl
add
add
add
clc
pop
jo
add
sub
lret
mov
clc
jns
clc
int3
int3
push
ret
fwait
jmp
scas
sub
sbb
add
daa
clc
xor
add
sub
clc
pusha
add
add
sub
mov
clc
cmc
lods
das
shrl
aas
and
add
clc
loope
adc
cmp
xor
clc
icebp
fwait
mov
mov
add
xbegin
add
jl
or
push
shr
cld
push
ret
sub
pop
pop
test
cmp
mov
add
aam
pusha
add
loopne
das
sbb
test
sar
fsubrl
push
add
sbb
or
cld
push
ret
xor
clc
fsts
ja
call
clc
in
cmp
daa
clc
je
clc
ja
std
cmp
add
jo
add
mov
sbb
inc
add
jno
and
xor
add
add
clc
xchg
push
sub
int3
pop
jno
add
add
or
clc
mov
clc
repnz
cmp
xchg
call
or
add
popa
add
mov
out
fidivrs
clc
cmp
push
ret
adc
outsl
jl
sar
clc
in
filds
loopne
pop
sar
clc
enter
adc
add
lods
cltd
xchg
insb
jb
add
and
add
insl
into
and
clc
fdivl
pop
pop
push
clc
push
mov
inc
add
jmp
clc
arpl
add
clc
psubb
mov
inc
clc
sahf
popa
add
and
mov
dec
jmp
es
jge
xor
add
in
xchg
loop
shr
iret
outsb
lock
fadds
add
add
sar
pop
pop
pop
imul
clc
out
icebp
jns
mov
add
out
movsl
clc
mov
jmp
or
sub
add
adc
add
or
imul
lods
cmc
mov
xchg
dec
jnp
add
add
or
leave
and
add
repz
add
push
clc
mov
add
pop
jmp
fidivrl
mov
clc
adc
add
jl
and
call
mov
dec
lea
clc
mov
mov
sub
dec
mov
je
or
mov
jnp
hlt
mov
clc
push
add
bound
add
clc
arpl
add
cmp
stos
fstpl
xchg
sub
je
cwtl
pushf
mov
ret
clc
jp
clc
pushf
mov
clc
mov
push
add
inc
add
iret
inc
add
fdiv
inc
clc
cltd
push
dec
dec
outsb
mov
pop
pop
gs
mov
enter
fisttpll
repz
hlt
mov
clc
clc
lods
fs
lea
fwait
xor
add
clc
adc
add
pusha
add
insl
loop
jne
hlt
nop
gs
push
js
cmpsl
clc
xchg
daa
clc
fdivrs
jmp
jge
popa
icebp
fists
sbb
outsl
mov
adc
add
add
mov
push
rorl
aaa
aad
xchg
jecxz
add
cltd
cmp
imul
lret
or
cld
push
ret
push
das
xchg
jecxz
inc
clc
mov
add
cmp
sub
clc
xor
add
sub
movsl
clc
in
inc
add
dec
ret
clc
xabort
cmp
leave
jle
clc
adc
add
cmp
push
and
cld
push
ret
push
sub
outsb
mov
clc
or
data16
and
add
lret
in
jecxz
sar
inc
clc
jbe
adc
add
sahf
test
mov
cmp
adc
add
in
gs
jge
cmpsl
clc
cmp
push
mov
jne
pop
mov
movsb
clc
sbb
add
clc
and
add
add
jmp
or
jecxz
fwait
jae
add
clc
push
sar
jmp
fs
and
add
bound
add
mov
xchg
in
in
das
inc
clc
pop
fsubrs
cmp
cmp
pop
clc
aad
out
or
sub
shlb
add
jo
add
clc
jnp
int3
and
mov
addr16
add
outsl
repnz
pop
jo,pt
add
push
add
jne
sub
add
clc
mov
fs
sub
mov
jmp
add
clc
and
add
add
clc
stos
mov
inc
clc
dec
sub
scas
pop
clc
cmc
add
aas
in
scas
inc
clc
mov
sarl
xor
add
cmp
mov
clc
xchg
je
int3
inc
add
imulb
adc
add
das
mov
add
int
repz
jl
clc
fcompl
sbb
repz
adc
add
jne
push
clc
out
lahf
add
pop
xor
add
add
and
and
add
push
mov
pop
ficoms
shlb
add
push
ret
clc
push
push
fwait
jmp
sbb
and
ret
jge
fldcw
xbegin
in
negl
xchg
fwait
jmp
sbb
or
xchg
xchg
repz
jg
out
push
mov
cld
push
ret
imul
lret
clc
adc
add
repz
push
out
stc
fs
outsb
pop
insl
gs
arpl
add
add
lods
jge
js
in
dec
cwtl
cmp
add
int3
pop
sub
ljmp
clc
dec
sbb
add
call
sbb
clc
adc
add
sub
pushf
jns
clc
adc
add
dec
hlt
inc
add
leave
mov
add
add
int
push
add
popf
sbb
add
in
xchg
sub
inc
add
cmpsl
clc
adc
add
ja
clc
clc
movsb
clc
inc
add
rorl
clc
push
xlat
push
std
inc
add
sub
cmp
cmp
fs
or
cmpsl
clc
dec
pushf
aad
add
test
xor
add
fdivrl
sbb
adc
xchg
ret
clc
dec
mul
clc
dec
cmp
adc
xor
add
data16
add
add
sar
ret
or
lods
sbb
push
ret
sub
cmpsb
cmp
jle
fcomip
xchg
aas
ljmp
xlat
add
add
push
add
insl
je
stos
jp
xlat
hlt
cmpsl
clc
ljmp
idivl
call
clc
push
enter
inc
clc
ljmp
or
nop
add
add
cld
push
ret
jp
data16
clc
cmp
clc
inc
add
cmpsb
clc
add
add
push
mov
lcall
incl
clc
int3
fcmovnb
clc
fistpll
add
add
push
mov
movsl
clc
mov
stos
xchg
pop
pop
fnstsw
insb
loop
mov
add
add
fmull
clc
sbb
push
jb
add
sub
dec
mov
cmp
in
rcrl
add
add
xlat
push
clc
mov
add
or
clc
mov
clc
int3
inc
add
cmpsb
clc
lods
inc
add
out
shrb
inc
clc
aaa
sbb
dec
cmp
jmp
scas
sbb
rolb
inc
clc
in
push
clc
in
cwtl
lret
mov
lea
cld
push
ret
sub
ret
clc
rcrb
arpl
add
add
clc
jo
add
cmp
push
inc
add
mov
mov
repz
xchg
js
add
jb
add
dec
hlt
mov
sub
push
add
out
dec
cmp
push
clc
xor
add
add
ret
inc
add
es
pop
clc
inc
clc
cld
inc
clc
and
mov
sub
inc
fwait
jmp
movsb
sub
xor
add
clc
pop
addr16
std
mov
aas
cli
in
cmp
cmp
dec
cmp
clc
push
mov
add
clc
add
add
add
adc
add
clc
pop
mov
fdivr
stc
cmpsl
clc
stc
push
add
mov
add
add
cmp
add
cmp
inc
clc
cmp
mov
clc
cmpsb
clc
js
pop
clc
movsb
clc
nop
inc
clc
ss
add
xchg
xchg
addr16
leave
enter
clc
int
add
adc
add
cld
and
add
or
add
test
push
add
inc
clc
bound
add
mov
out
es
lock
aas
xlat
arpl
add
int
mov
clc
sar
clc
mov
data16
cmp
ljmp
add
add
clc
iret
scas
pop
in
rorl
xchg
xchg
enter
clc
fiadds
mov
in
dec
push
add
enter
mov
roll
ret
sub
jg
test
push
repz
add
sbb
add
ss
cs
pop
clc
xor
clc
mov
testb
cmp
je
mov
or
cmp
add
pop
dec
shlb
add
ja
inc
clc
push
add
xchg
decl
mov
ljmp
sahf
popa
push
cld
jae
add
mov
cmp
rorb
cmp
clc
dec
and
xchg
loope
add
add
clc
cmp
fsts
add
clc
js
jnp
jo
add
inc
add
lret
add
inc
clc
jg
clc
dec
fmull
add
add
sbb
sbb
inc
add
xchg
cwtl
fcomip
sbb
jmp
push
push
jp
cld
xor
add
int
out
jne
push
clc
pop
cld
pop
xchg
scas
xchg
cs
cmp
roll
add
pop
xor
add
leave
pusha
add
push
push
icebp
add
jne
in
movsb
clc
xchg
push
ss
add
adc
add
mov
clc
xchg
mov
cmp
enter
add
and
test
dec
xchg
bound
add
test
out
add
add
fucomi
cmp
clc
fdivrl
clc
xor
add
clc
jmp
add
sti
icebp
dec
out
cmp
movsb
clc
add
add
jp
in
jl
xabort
add
ss
push
mov
aas
mov
add
add
xchg
and
repz
add
add
in
out
movsb
clc
xchg
xchg
out
mov
add
mov
inc
add
sbb
or
call
scas
push
and
mov
cwtl
icebp
xchg
shr
out
loope,pn
aaa
sub
add
inc
clc
andps
fwait
jmp
inc
push
add
fwait
repnz
mov
xchg
mov
mov
inc
clc
push
fildll
fcoms
add
xchg
dec
ljmp
add
push
int3
icebp
test
dec
cmc
xor
add
pop
dec
adc
add
sti
sub
iret
jg
cmp
cmp
xchg
jp
add
cmp
add
dec
sbb
cld
push
ret
scas
outsl
and
scas
scas
test
test
clc
xor
add
add
jb
add
lods
sar
fsubrs
xlat
xchg
inc
add
pop
and
add
add
clc
mov
clc
cmp
mov
cmp
cltd
jmp
add
mov
clc
pop
sarl
lods
add
dec
jnp
jg
in
cmp
loope
jle
jb
add
push
inc
clc
mov
lods
clc
inc
clc
xchg
xor
repz
lea
push
jne
clc
sbb
ljmp
push
aas
sub
push
add
jp
mov
fwait
jmp
fs
adc
je
clc
lods
sar
jnp
xchg
fwait
jmp
outsw
imul
xchg
sbb
pop
add
add
jbe
xlat
or
clc
clc
movsb
clc
mov
or
das
ret
clc
sbb
repnz
jno
fwait
jmp
aaa
fwait
test
clc
inc
clc
test
sbb
in
pop
ja
clc
dec
mov
push
fwait
jmp
fwait
pop
push
add
repz
clc
sti
jnp
clc
add
mov
add
scas
sar
ss
add
and
add
clc
es
inc
clc
add
inc
add
push
stos
negl
inc
clc
pop
lret
lahf
adc
das
icebp
jmp
add
add
add
cmp
add
inc
clc
nop
cmp
xchg
or
mov
mov
push
and
sub
mov
in
or
clc
in
or
mov
outsl
and
add
cwtl
bound
add
push
fwait
jmp
das
sub
add
imul
mov
popf
and
add
add
add
in
and
add
add
add
xbegin
clc
xchg
adc
add
icebp
jo
add
test
mov
pop
xor
add
aaa
scas
inc
clc
adc
add
cmp
clc
mov
clc
jmp
clc
call
clc
aam
clc
and
add
sbb
clc
xbegin
add
add
xchg
and
fdivs
add
clc
pop
push
mov
jle
notl
add
add
mov
clc
fcomip
xbegin
add
jmp
clc
lock
xor
sbb
in
fimuls
cmp
sub
aad
add
das
and
add
clc
and
add
and
add
int3
or
clc
or
aam
pcmpgtd
dec
scas
cmp
cld
push
ret
adc
jno
add
loopne
dec
inc
clc
ret
jmp
dec
aas
jle
aas
cmp
dec
aas
xbegin
fildll
xlat
sahf
xor
xchg
xlat
pop
xchg
xlat
test
enter
decl
add
in
or
inc
add
sub
xabort
cmp
clc
xor
add
inc
add
js
das
out
popf
inc
add
cmp
push
add
ja
sti
int3
lret
loop
mov
imul
mov
add
xor
add
cs
inc
add
arpl
add
add
mov
pop
cmp
clc
push
add
adc
add
clc
jno
add
clc
jp
fs
cmp
mov
push
ret
sub
lea
pusha
add
lods
add
add
clc
mov
or
pop
daa
clc
mov
add
add
push
push
fwait
jmp
lea
sub
mov
push
add
lret
clc
mov
jne
fwait
jmp
sbb
mov
fwait
jmp
outsw
push
out
jnp
in
arpl
add
jle
xor
add
add
sub
and
xor
mov
inc
clc
xchg
cmp
clc
cmc
ja
dec
cwtl
xchg
sub
add
pop
outsl
or
add
fwait
jmp
jg
or
pusha
add
cmp
iret
sub
clc
addr16
lret
pop
add
add
add
add
jo
add
add
add
add
dec
mov
mov
add
jge
add
loopne
cld
in
mov
ljmp
add
adc
add
aad
jecxz
xchg
jmp
add
mov
and
add
and
add
sub
clc
loop
push
movsb
clc
mull
add
call
fwait
jmp
jge
div
call
mov
insl
pop
adc
add
add
add
mov
ljmp
jb
add
jmp
sub
pop
leave
ljmp
clc
insb
in
fdiv
dec
jl
push
pusha
fwait
jmp
add
xor
add
rcrl
clc
pop
sub
ret
clc
mov
clc
sahf
mov
add
add
clc
jo
add
clc
outsb
dec
sbb
add
mov
sar
es
xchg
sar
push
cs
jmp
clc
cwtl
fimuls
iret
add
add
add
dec
sar
mov
add
sub
clc
loop
je
dec
or
out
aas
addr16
ss
add
aas
mov
rol
clc
cltd
push
sarb
ja
in
rcl
lods
mov
mov
clc
loopne
cmp
xor
add
xchg
jbe
pop
ja
cld
test
cmp
enter
adc
add
clc
dec
arpl
add
mov
daa
clc
nop
xchg
or
fstl
out
jo
add
clc
sub
sbb
iret
into
sub
sar
clc
dec
push
add
jb
add
mov
clc
sub
jae
add
dec
push
add
adc
out
cmp
insl
loop
addr16
lea
cmp
fwait
jmp
pop
sahf
xor
sub
aas
pusha
add
mov
clc
mov
cs
push
lcall
lcall
loope
jnp
jns
dec
nopl
add
cmp
mov
sbb
aam
lcall
jmp
add
ljmp
add
sahf
lock
scas
mov
clc
ljmp
jmp
pop
or
xchg
lret
fstpl
xlat
outsl
xabort
jmp
in
cmpsb
clc
dec
cmp
clc
mov
lret
add
add
lcall
aad
pop
inc
clc
sub
cs
jae
add
call
clc
xabort
pop
sbb
jmp
imul
lcall
fistpll
pushf
mov
add
mov
sysexit
push
inc
clc
push
clc
out
jmp
sbb
jmp
movsb
jno
jg
jno
add
daa
clc
bound
add
clc
xor
add
add
sti
jae
add
clc
mov
pop
clc
xchg
data16
out
jp
add
mov
dec
jmp
add
xchg
lcall
das
inc
clc
add
add
clc
dec
cli
repz
scas
lret
mov
jae
add
add
cmp
push
out
jle
in
mov
jge
fstpt
pop
push
mov
inc
clc
jge
insl
xlat
fs
es
sbb
mov
outsb
imul
ficoml
clc
fdiv
mov
add
add
sub
push
aad
clc
pop
cwtl
xchg
pop
clc
lock
mov
push
fwait
jmp
jg
test
cwtl
push
add
dec
sub
cmp
popf
cmp
pop
inc
add
xabort
out
cmp
clc
sahf
mov
pop
cmpsl
clc
pushf
pusha
add
ja
add
popa
add
bound
add
add
adc
add
and
mov
aam
add
cs
add
test
mov
clc
call
pop
fimull
mov
pop
cld
push
ret
inc
adc
cmc
dec
repz
or
add
cmc
dec
in
movsb
clc
add
add
clc
nop
test
clc
out
add
mov
mov
dec
daa
clc
cmpsl
clc
jae
add
cmp
clc
into
or
add
iret
cmp
lods
test
loop
mov
inc
cwtl
jmp
mov
cld
int
mov
pop
fidivs
add
inc
clc
sbb
inc
add
adc
add
clc
add
add
clc
into
idivb
add
ss
stos
dec
leave
sar
clc
sbb
xor
add
clc
ja
mov
cld
push
ret
cwtl
sub
out
inc
clc
lea
clc
add
pop
cmp
clc
adc
add
stc
clc
dec
nop
xor
scas
cmp
adc
add
add
push
dec
leave
sbb
jmp
xor
fwait
adc
add
push
aam
cmp
push
clc
xchg
cwtl
test
cmpsl
clc
sar
mov
imul
stc
lods
insb
enter
outsl
outsl
adc
pop
lcall
in
jmp
clc
mov
xor
add
add
sbb
arpl
add
in
sub
xchg
jnp
out
arpl
add
push
mov
das
pop
lret
pusha
add
pop
xor
add
shlb
popf
fsubrl
mov
add
mov
clc
jge
pop
mov
mov
sub
add
mov
add
aad
decl
fwait
jmp
push
adc
cwtl
cmp
add
push
clc
in
jbe
or
clc
stc
and
add
clc
push
push
pop
sbb
adc
clc
cmp
clc
and
sbb
in
add
ret
stos
add
enter
add
add
cmp
shl
mov
lods
clc
pop
xor
add
mov
clc
cmp
cmp
pop
push
add
jecxz
ds
add
xbegin
clc
outsb
lock
jno
add
lea
int3
jns
js
xor
mov
clc
xor
add
add
add
add
add
xor
fs
sub
fwait
or
dec
lcall
push
ret
add
cmp
out
jne
in
mov
clc
push
add
rcrb
jne
lcall
cli
sub
int
push
clc
or
lock
cltd
cmp
add
sahf
jg
clc
out
mov
es
mov
jne
inc
add
imull
add
test
cmp
loop
xbegin
add
ss
jl
xor
clc
xchg
mov
adc
add
out
cmp
clc
ljmp
in
pop
cmp
daa
clc
sub
add
mov
ret
clc
xchg
sub
mov
fnstcw
push
clc
std
lods
das
bound
add
add
inc
clc
jno
add
add
xor
add
pop
sub
add
call
mov
xchg
loopne
sub
icebp
clc
cmp
mov
lret
fwait
jmp
movsb
data16
inc
pop
test
jle
mov
test
inc
clc
inc
clc
nop
mov
sub
cld
push
ret
mov
add
clc
pop
inc
clc
mov
xchg
mov
cmp
std
addr16
and
add
ljmp
clc
fstps
inc
clc
mov
jge
cmpsl
clc
cmpsb
clc
cmp
data16
adc
add
pop
data16
sbb
sti
aam
popl
add
inc
add
jmp
ret
clc
sti
lods
notb
add
push
dec
mov
jle
jmp
mov
mov
dec
rcrb
sbb
mov
rcr
mov
repz
lods
dec
scas
pop
or
mov
add
cld
sbb
jne
add
dec
pushf
pop
fcompl
clc
xbegin
out
inc
add
test
mov
push
and
add
aaa
inc
clc
mov
clc
imul
or
sub
mov
jb
add
shlb
push
add
push
adc
add
lcall
call
clc
cli
and
add
clc
inc
add
out
sub
das
adc
add
add
sbb
push
ret
test
push
add
mov
xchg
ror
sub
fnsave
call
aad
xchg
xchg
iret
mov
clc
rcrb
dec
push
inc
clc
add
loop
xchg
int3
popa
add
imul
add
sarb
inc
clc
push
push
add
aam
jae
add
clc
fnsave
sahf
dec
inc
clc
inc
clc
xabort
xchg
lret
in
dec
aas
das
add
lods
stc
into
xbegin
clc
out
enter
cli
aam
add
add
ss
clc
in
push
clc
outsb
sahf
xchg
or
mov
clc
push
add
std
popf
lock
clc
lahf
in
cmp
js
int
lcall
add
sub
add
pop
call
clc
popa
add
jmp
add
push
add
cmpsl
clc
imulb
push
jmp
adc
insb
sti
inc
clc
lret
adc
add
mov
push
lcall
and
push
fistpll
sub
gs
and
mov
cld
xor
cmp
out
insl
clc
mov
insb
jecxz
imul
clc
addr16
mov
add
add
fs
mov
nop
aad
mov
push
insl
dec
jne
clc
icebp
sub
loopne
and
add
inc
add
cltd
adc
add
adc
add
add
hlt
aaa
mov
lea
fisubl
add
xchg
lcall
arpl
add
mov
loope
adc
add
mov
mov
ret
sbb
push
ret
mov
push
aam
clc
push
add
xchg
xor
add
ret
clc
addr16
push
fwait
jmp
push
sub
push
out
jnp
mov
dec
int3
dec
cli
mov
fadd
clc
cmp
call
cmp
clc
sarb
sti
loope
filds
inc
add
andnps
clc
dec
mov
push
add
arpl
add
mov
sar
and
imul
xchg
pop
or
pop
and
add
xchg
insb
clc
add
add
add
clc
push
or
add
inc
clc
sti
sub
icebp
imul
cmp
out
icebp
ss
push
mov
fwait
jmp
push
fs
lret
clc
or
movsl
clc
and
add
fidivrs
nop
cs
dec
push
add
add
add
dec
push
dec
pushf
dec
cli
cmp
add
mov
add
in
gs
mov
popa
add
push
sbb
inc
add
add
push
movsb
clc
popa
add
mov
add
cli
mov
xchg
mov
add
add
out
std
adc
loope
adc
add
sbb
add
pop
lret
sar
xbegin
jno
add
add
adc
add
push
add
pop
jae
add
clc
incl
dec
cmp
jmp
mov
test
jmp
shr
loop
or
add
ret
clc
mov
leave
pop
add
add
add
popf
push
out
sahf
pop
clc
cmp
lcall
clc
adc
clc
adc
add
add
insb
cli
or
cli
and
add
incl
test
jmp
add
aad
clc
push
clc
sahf
ja
jo
add
int
stos
cmp
add
fists
push
clc
outsb
mov
add
mov
aad
add
push
jp
push
clc
scas
push
lahf
stc
or
add
std
imul
popa
add
xor
add
mov
mov
fwait
jmp
dec
sub
add
mull
add
mov
add
dec
out
inc
clc
jb
add
jnp
xor
add
add
adc
add
clc
jge
jbe
xchg
and
jb
add
je
dec
ljmp
das
repnz
stc
xor
clc
jge
clc
cmpsb
clc
pop
jle
clc
lret
add
add
mov
mov
pusha
add
inc
clc
mov
clc
cmp
mov
sbb
clc
pop
clc
int3
add
add
fnstsw
cmp
outsl
daa
clc
ja
jno
add
and
add
mov
add
dec
jno
add
mov
mov
clc
mov
mov
clc
lods
mov
clc
inc
clc
cmp
clc
sub
dec
push
cmp
add
clc
stc
sub
push
clc
jp
clc
out
cmp
mov
lds
mov
jns
jns
mov
in
shrb
std
sti
jno
add
jecxz
rol
clc
pushl
cmp
add
mov
stos
repz
add
mov
jbe
clc
inc
add
outsl
push
ss
mov
dec
cld
jno
add
add
sbb
mov
and
cmp
add
add
add
out
into
movsb
clc
push
out
hlt
push
ret
clc
mov
add
arpl
add
nop
xchg
mov
xchg
cmp
fs
cwtl
jns
add
adc
push
clc
dec
cmp
data16
pop
sahf
cmc
stc
or
outsl
sub
out
mov
add
adc
pushf
fisubrl
add
mov
mov
pop
mov
add
and
add
xbegin
js
cli
std
divb
add
fsub
clc
inc
clc
jmp
push
or
mov
cwtl
sub
add
scas
cmp
frstor
add
mov
or
add
ret
clc
xor
add
add
mov
clc
xchg
repz
add
xchg
pop
imul
dec
jecxz
nop
ds
clc
mov
dec
popf
cmp
call
sub
clc
pop
fwait
mov
add
hlt
mov
out
lods
sub
add
xor
add
js
xlat
xor
add
adc
add
add
int3
add
add
mov
out
push
add
jo
add
loopne
adc
add
fisttpll
scas
xor
add
add
stos
das
mov
clc
mov
jg
sub
clc
mov
mov
mov
sar
test
sahf
int3
jmp
inc
add
dec
pop
sub
faddl
and
add
lods
or
clc
inc
clc
mov
loope
lea
das
jae
add
add
jecxz,pn
lret
clc
xchg
repz
cmp
icebp
popf
pop
jecxz
cmp
call
js
out
ret
cmpsl
clc
add
add
add
mov
fldt
clc
mov
clc
test
sbb
clc
out
into
mov
mov
hlt
mov
sar
clc
xchg
daa
clc
mov
clc
inc
add
mov
jnp
cmp
outsb
and
sub
cpuid
clc
dec
sar
mov
clc
mov
clc
clc
pop
cli
ret
clc
nop
outsl
cld
movsb
clc
pop
clc
sti
rcll
dec
sub
add
dec
popa
add
pop
lret
into
inc
add
dec
push
sbb
out
sub
cld
sahf
fnstenv
xor
dec
cwtl
or
lret
pop
xor
sarb
clc
add
add
fidivrl
clc
fs
mov
clc
cmp
clc
sub
mov
outsb
inc
add
scas
and
mov
lcall
push
jnp
add
mov
clc
mov
in
mov
dec
push
add
or
add
cmp
push
leave
push
and
out
out
dec
test
aas
xor
add
sub
clc
movsb
clc
cmp
jle
xchg
pusha
add
pop
lods
cld
sbb
clc
dec
sbb
add
pop
adc
add
add
clc
sbb
imul
mov
clc
dec
dec
fwait
xor
clc
stos
adc
add
jp
data16
clc
mov
sub
mov
add
es
sub
jb
add
sub
add
clc
mov
clc
icebp
in
ljmp
pop
adc
add
xbegin
push
add
cmpsb
clc
clc
int
clc
dec
mov
out
jb
add
clc
stc
lods
outsb
mov
add
add
mov
add
add
clc
fs
dec
lods
cmp
popf
sbb
movsl
clc
sub
insl
dec
test
mov
aas
push
sar
clc
push
jnp
add
leave
sar
clc
pop
fwait
aas
pop
xbegin
clc
pop
cmp
jo
add
clc
xor
add
clc
ljmp
push
rorl
add
push
add
test
ljmp
imulb
add
dec
inc
clc
into
jae
add
fs
aas
cwtl
push
add
adc
popa
add
push
add
fs
cli
test
fcomi
aam
clc
iret
xchg
outsb
push
sbb
nop
xabort
clc
dec
fstl
add
mov
xchg
cmp
mov
out
loope
mov
add
sbb
data16
lods
xor
je
add
or
clc
inc
add
push
clc
loopne
mov
dec
inc
clc
xor
add
add
imul
clc
inc
clc
mov
fs
mov
pop
scas
push
xor
add
clc
in
into
and
add
xabort
clc
imul
cmp
mov
sbb
clc
lods
je
push
mov
mov
pop
in
inc
add
pminub
pop
rclb
scas
and
jmp
repnz
clc
or
add
cwtl
push
stc
test
clc
mov
clc
in
xlat
sub
pop
ljmp
clc
add
lahf
icebp
in
pop
mov
clc
cmp
sub
add
dec
aaa
clc
adc
jae
add
call
clc
adc
add
jbe
out
jge
clc
int3
bound
add
ret
clc
lods
xor
add
add
add
mov
out
push
add
inc
clc
popf
sar
mov
in
jle
jmp
clc
loop
jp
lret
mov
lahf
imulb
inc
add
scas
dec
sub
data16
and
add
add
decl
lods
inc
clc
shrb
out
pop
lahf
ret
clc
xchg
arpl
add
sbb
or
jno
add
pusha
add
adc
xor
add
inc
add
mov
es
fwait
lcall
aam
add
dec
test
int3
pop
cmp
shll
add
add
aam
add
inc
clc
cmp
inc
add
adc
dec
xchg
xor
add
rclb
clc
loopne
jne
xchg
add
add
push
cmp
add
cmp
push
add
sub
add
mov
add
add
clc
lods
sahf
sbb
add
or
add
loope
enter
inc
clc
cli
fistps
sub
add
xabort
xchg
fsubrl
in
mov
clc
inc
add
jle
clc
addr16
pop
sar
movsb
clc
sar
adc
sbb
cmp
push
addr16
sbb
cmp
add
push
sbb
add
push
jne
imul
adc
add
push
add
stos
movsl
clc
mov
add
xlat
jns
js
clc
inc
clc
xchg
sbb
clc
dec
ret
clc
or
push
fxch
mov
fwait
sahf
aaa
jno
add
add
inc
add
cld
imul
popf
cli
bound
add
add
fwait
dec
mov
add
xor
adc
add
push
jp
add
xchg
in
mov
aam
add
push
rcll
add
add
add
add
out
push
push
clc
xchg
out
dec
and
add
inc
add
enter
push
add
movsb
clc
cmp
add
mov
insl
jge
clc
nop
icebp
xor
clc
ret
dec
mov
add
or
inc
add
xbegin
aaa
xchg
and
add
shr
div
mov
add
sbb
add
sub
nop
lods
jo
add
add
jl
cltd
sbb
push
dec
xchg
ja
test
add
xchg
add
add
add
clc
jo
add
dec
inc
add
xbegin
clc
xchg
nop
loope
jno
add
clc
xlat
mov
push
clc
sahf
outsl
sbb
pop
push
sub
jl
clc
xchg
and
cmpsl
clc
popa
add
jmp
cmp
and
add
pop
adc
add
cmp
stos
pushf
out
pop
clc
cmp
je
xchg
pop
xchg
cmp
add
xor
add
repnz
mov
push
add
nop
push
imul
cmp
cmp
add
mov
clc
enter
adc
add
lock
or
clc
sub
add
add
push
add
clc
testb
movsl
clc
sbb
and
add
cwtl
outsb
cmpsl
clc
pushf
or
cltd
push
add
cmp
dec
inc
add
dec
ret
clc
mov
dec
test
dec
or
add
and
add
faddl
cmp
push
add
add
add
clc
test
stc
pop
imul
loopne
mov
add
sub
mov
clc
adc
dec
cmp
mov
add
clc
clc
inc
add
cs
xchg
and
add
jne
fcoml
add
inc
add
fstpl
and
add
gs
sub
clc
mov
push
clc
cmp
cmp
icebp
pop
cmp
push
pop
clc
stc
rcr
push
add
xchg
outsl
test
inc
clc
and
mov
jge
clc
push
stos
nop
bound
add
dec
cmc
in
and
add
jne
push
or
add
add
add
add
add
clc
dec
push
mov
add
sbb
clc
insb
xchg
clc
mov
mov
clc
in
cmp
pop
mov
clc
jmp
data16
int
add
push
icebp
scas
sub
add
push
aam
clc
test
xor
ret
clc
mov
add
clc
insl
cld
rclb
add
mov
xchg
sub
mov
jo
add
clc
dec
add
clc
xchg
mov
mov
lahf
aad
clc
sub
clc
add
cmp
aad
in
fs
int3
xchg
dec
or
xchg
fs
dec
data16
push
add
sbb
inc
add
push
movsb
clc
cmp
clc
mov
xor
add
sar
add
scas
in
xchg
cmp
jae
add
shrb
pop
ss
in
jle
add
popa
add
or
clc
mov
leave
jl
dec
aaa
and
cmc
cmp
popa
add
pop
inc
clc
push
add
pop
mov
pusha
add
repnz
add
hlt
push
icebp
call
mov
inc
add
inc
add
fsubl
add
mov
mov
add
mov
mov
mov
dec
xchg
add
cwtl
cmp
xor
add
data16
out
loope
sar
add
push
mov
add
popa
add
fisttpl
add
xabort
stc
repnz
add
mov
in
inc
clc
add
mov
jecxz
insl
jns
pop
add
sbb
or
clc
jo
add
dec
xchg
adc
popa
add
popa
add
and
add
testb
clc
test
pop
jl
or
xchg
in
sbb
clc
mov
add
in
or
add
add
mov
scas
lea
add
jo
add
insl
push
test
mov
sar
inc
add
lret
adc
add
add
test
movsl
clc
push
clc
xabort
clc
aas
test
ret
add
mov
clc
xchg
xchg
xabort
mov
clc
popf
pop
cmp
clc
fisubrl
xchg
fisubrs
addr16
fwait
call
int3
enter
ficompl
add
pushf
or
movsl
clc
and
add
fwait
mov
add
add
xor
and
add
add
add
cmpsl
clc
mov
add
cmp
clc
add
pusha
add
movsl
clc
push
out
cmp
dec
jo
add
js
add
and
rcll
add
mov
add
add
inc
clc
rorb
cmpsb
clc
jnp
shll
add
xor
add
mov
rcrb
add
cmp
clc
mov
clc
cmp
lock
add
mov
cwtl
cmpsb
clc
pop
outsl
lock
or
add
xchg
in
nop
hlt
inc
clc
insl
cmp
push
in
frstor
add
pop
push
and
aam
dec
ret
clc
test
jge
clc
adc
repz
add
xlat
bound
add
jnp
pop
push
add
mov
add
scas
leave
cmp
clc
jno
add
clc
sub
add
clc
cmp
add
cmc
sbb
negb
cmpsb
clc
cmpsl
clc
pop
push
add
sldt
add
push
out
pop
jo
add
inc
add
adc
clc
movsb
clc
insl
out
push
clc
xor
add
popa
add
push
mov
or
sbb
aas
xchg
fbstp
mov
add
std
sar
add
jge
lock
cltd
pop
push
xlat
adc
xor
add
clc
movsl
clc
cmc
jp
and
add
sbb
jae
add
add
ljmp
push
add
cmp
clc
mov
add
add
mov
sbb
and
add
idivl
sbb
add
dec
dec
stos
ds
add
add
add
cmc
pop
xchg
and
outsb
ds
lret
dec
xchg
pop
push
hlt
sub
sar
clc
or
clc
inc
clc
inc
clc
sub
lods
pop
push
clc
xchg
repz
mov
ja
add
arpl
add
fsubrp
add
add
add
jnp
add
hlt
adc
cli
sar
cltd
sub
add
mov
clc
sti
inc
add
xor
add
add
sbb
stos
jns
add
sub
dec
test
idivl
mov
aam
lods
out
popf
push
mov
clc
push
out
sub
add
sbb
clc
out
mov
popa
add
mov
adc
insb
cmp
test
sub
mov
mov
add
pop
insl
xchg
cmc
ja
int
clc
sbb
jne
mov
jg
clc
test
xor
add
pop
xor
nop
mov
xchg
pop
sbb
test
pop
cmp
loopne
add
add
imul
cmp
push
jno
add
cmp
clc
addr16
popf
ja
clc
push
add
imul
clc
inc
add
cli
xor
add
clc
insb
sub
xbegin
dec
cmpsb
clc
mov
pop
cmp
pop
in
push
add
cmp
mov
enter
or
xlat
add
add
clc
fcoml
and
add
fnstenv
add
or
xor
cmp
add
cmpsb
clc
xchg
enter
dec
inc
clc
mov
cld
aaa
xor
add
add
and
add
movsb
clc
rclb
sar
je
clc
fwait
movsl
clc
nop
sub
add
arpl
add
sar
clc
push
add
daa
clc
sub
cmp
aam
jno
add
imul
clc
jnp
clc
stos
inc
add
cmp
shll
stos
enter
mov
fsub
clc
sub
test
cmp
dec
clc
lret
pop
je
add
inc
clc
xchg
into
sub
sub
jl
cmp
inc
add
or
jge
call
pop
clc
sub
push
add
aas
add
add
clc
sbb
bound
add
xchg
pop
mov
add
daa
clc
out
daa
clc
xor
add
cmp
cmp
test
xchg
mov
clc
nop
fst
inc
add
add
add
sti
jg
push
sbb
push
push
add
pop
std
mov
or
add
lea
shlb
jge
and
add
clc
pop
lods
pop
push
repz
add
add
ret
clc
stos
sub
call
cltd
push
das
fbld
add
adc
add
shrl
cs
pusha
add
push
add
push
add
mov
clc
dec
aam
clc
xabort
add
out
xchg
movsl
clc
jb
add
clc
loopne
loopne
js
clc
push
jge
loopne
sbb
and
add
ss
cmp
or
cmc
aaa
ret
clc
pop
mov
dec
xchg
das
adc
add
adc
add
movsb
clc
pushf
shl
cmp
add
ss
scas
cmp
add
dec
jns
stc
and
mov
lea
enter
sub
mov
add
rsm
cmp
in
cwtl
sar
leave
push
scas
jmp
clc
cwtl
mov
add
loop
aad
inc
clc
cmp
clc
out
inc
clc
dec
fwait
inc
clc
jp
clc
xchg
imul
xchg
lcall
and
adc
cmp
xchg
cmp
clc
adc
add
out
push
add
cmp
clc
es
leave
mov
add
fs
push
cmpsl
clc
mov
dec
repnz
aad
std
add
add
ss
add
mov
sub
out
js
sti
shl
clc
xor
add
add
fs
sbb
stc
jno
add
add
fs
and
inc
clc
dec
inc
clc
sbb
mov
cmp
cmp
cvttps2pi
outsb
arpl
add
clc
pop
push
repz
and
mov
clc
fs
adc
add
xchg
push
clc
cmp
clc
cwtl
cmpsl
clc
scas
and
add
clc
cmp
pop
aas
xchg
inc
add
push
add
mov
sbb
bound
add
add
sahf
fwait
jno
add
mov
clc
push
add
or
xchg
mov
clc
cmpsl
clc
ja
sub
push
add
push
add
cmp
outsb
mov
clc
imul
add
dec
push
mov
clc
aaa
add
add
add
adc
add
mov
dec
jb
add
clc
cmp
loopne
and
add
imul
inc
clc
push
add
pop
jae
add
add
clc
cmp
add
and
sbb
clc
pop
cltd
dec
sti
cltd
pop
clc
sub
lret
clc
clc
xabort
pop
cmp
lcall
add
add
add
js
add
mov
clc
dec
mov
mov
fistps
adc
clc
mov
ja
clc
mov
xchg
adc
pop
jp
imull
cmp
clc
cli
pop
fcmovb
clc
cmp
stos
js
add
cmp
ret
clc
cmp
int3
repz
add
xchg
sub
clc
data16
jmp
pop
jg
clc
dec
idivl
out
stc
imul
add
push
sti
lret
clc
sbb
add
jno
add
cmp
ret
clc
stos
xchg
loope
sub
cmc
adc
add
cmpsb
clc
lret
jmp
clc
sar
add
loop
stos
adc
add
add
sub
clc
push
mov
add
clc
pop
mov
add
add
mov
lahf
jnp
mov
push
add
xor
fwait
mov
sbb
adc
fcom
shl
dec
dec
add
add
or
stos
jns
jmp
mov
mov
xchg
aam
clc
stos
lahf
ja
adc
cmp
data16
jo
add
loope
ja
dec
xchg
push
jo
add
ljmp
clc
rep
clc
mov
dec
stc
xchg
clc
and
popf
lods
data16
cmp
jge
clc
or
bound
add
fldt
pop
xchg
push
add
adc
add
call
jp
stos
sub
aaa
out
aas
jecxz
pop
ror
fdivp
mov
pop
cmp
add
ret
clc
push
add
xchg
xchg
jge
data16
lods
pop
and
add
outsb
cmp
clc
dec
mov
in
mov
clc
jp
push
add
shl
fmulp
pop
aad
push
add
add
clc
fistpl
push
xchg
jne
jbe
add
mov
clc
push
add
scas
or
push
add
sub
in
pop
pop
ljmp
test
pop
mov
jp
aad
out
clc
fldenv
add
addr16
ficompl
add
add
clc
cmpsb
clc
pop
mov
cmp
enter
add
mov
add
mov
xor
add
push
call
jmp
add
movsl
clc
loop
and
add
pop
decb
and
add
out
daa
clc
and
add
jb,pt
add
xor
add
add
insb
popf
jge
mov
add
aam
cmc
into
lock
add
add
and
add
add
mov
aaa
mov
inc
clc
adc
add
jb
add
inc
clc
push
in
into
push
sbb
out
cmp
clc
das
jno
add
add
jbe
mov
ds
fdivs
add
xchg
dec
cld
cmpsb
clc
cmp
sahf
and
in
fisttpll
mov
clc
pusha
add
xor
add
mov
popf
inc
clc
and
add
clc
ja
mov
pop
pushf
dec
addr16
icebp
inc
clc
and
add
in
cmp
fs
pop
clc
test
loope
cmc
jecxz
out
add
pop
add
add
add
jnp
jle
clc
mov
add
add
add
clc
test
test
add
cmp
add
sbb
clc
mov
dec
mov
pop
mov
add
data16
faddl
xabort
pop
jp
inc
clc
ficomps
popf
cld
mov
add
fnstcw
adc
add
dec
cs
test
add
add
rclb
add
cmp
clc
or
pop
lock
add
out
adc
xchg
add
add
add
clc
cwtl
mov
push
add
sub
add
adc
mov
add
scas
fstpl
cmp
add
add
lret
repnz
add
jmp
imul
mov
iret
fisubrl
scas
push
add
jp
add
jle
dec
stos
test
ljmp
inc
clc
cwtl
loop
out
dec
xbegin
clc
pop
mov
cmc
cmp
add
cmp
fstp
hlt
cmp
jae
add
add
clc
mov
add
xchg
fmuls
psadbw
adc
add
pusha
add
mov
cli
cmp
mov
add
loopne
xchg
mov
hlt
mov
xchg
cmp
in
mov
clc
fisubrl
clc
mov
add
clc
sub
sbb
clc
sbb
clc
icebp
fldcw
hlt
movsl
clc
movsb
clc
mov
pop
dec
sub
xchg
xchg
outsl
cmp
pop
jl
clc
lock
push
add
push
aam
dec
test
cmp
add
or
jo
add
add
add
sub
add
add
pop
rcrb
vzeroupper
loope
mov
sub
sub
loopne
lods
mov
inc
clc
repnz
mov
addr16
dec
je
add
je
sahf
adc
loopne
and
add
fnstsw
mov
push
clc
add
add
xlat
rcll
lret
sbb
lcall
inc
clc
rorb
or
add
add
adc
add
data16
adc
add
into
fstps
cmp
jp
push
add
mov
clc
insl
xlat
iret
cmp
add
add
pusha
add
dec
push
lock
xbegin
cmp
inc
add
jg
xchg
pop
fmul
mov
add
cmpsl
clc
jbe
push
loop
cmp
clc
xchg
push
int3
cwtl
cwtl
mov
int3
out
adc
add
jge
clc
mov
add
iret
or
cmp
test
out
sahf
mov
clc
push
dec
adc
lret
cmp
clc
mov
ja
xor
add
add
clc
leave
out
ds
and
jle
clc
xchg
xbegin
bound
add
add
dec
jnp
fidivl
dec
out
fiaddl
add
test
cmp
add
push
add
pop
clc
or
mov
jbe
add
aad
clc
push
negl
jbe
mov
clc
cmp
jp
xchg
xlat
sbb
test
imul
xor
clc
sub
jnp
jle
hlt
or
add
add
xabort
clc
lea
dec
lods
ret
jb
add
add
pop
pop
clc
pop
clc
mov
clc
cwtl
pop
aaa
sub
and
ss
mov
add
add
add
std
test
loop
lock
add
repnz
add
xchg
outsl
push
add
inc
add
pusha
add
daa
clc
push
add
jae
add
xchg
mov
clc
xchg
cs
hlt
out
nop
cli
add
add
add
adc
add
clc
mov
and
add
add
clc
xchg
dec
jo
add
incb
add
push
xor
stos
rcl
into
cmpsl
clc
push
dec
adc
add
inc
clc
loop
das
xchg
mov
add
into
insb
and
add
fdivrl
clc
push
clc
int3
cmpsb
clc
or
clc
xor
add
add
pop
push
jg
push
jmp
and
add
std
jns
clc
lods
cmp
clc
jbe
clc
pop
inc
clc
mov
ja
cmp
es
test
fildl
add
add
jno
add
clc
movsb
clc
out
mov
mov
adc
cmp
clc
add
add
clc
dec
ljmp
mov
icebp
inc
clc
pusha
add
xchg
and
add
add
out
and
sahf
mov
clc
jmp
daa
clc
data16
ds
push
out
mov
sub
fcmove
stos
lret
cmp
repz
add
mov
push
jmp
or
adc
add
sbb
clc
outsl
outsb
arpl
add
jmp
gs
repz
jmp
add
push
mov
adc
rorb
add
add
clc
stos
scas
mov
add
xchg
xor
add
fnstsw
fstpl
cmp
mov
add
add
mov
adc
add
rcll
add
add
add
clc
mov
clc
mov
jl
jle
xchg
jmp
mov
aam
inc
add
jnp
add
aam
lret
mov
mov
loopne
popa
add
push
xchg
movsb
clc
push
ljmp
nop
sub
xor
add
add
add
icebp
sbb
dec
xor
add
jl
outsb
xchg
lods
mov
push
ffreep
clc
lea
add
mov
inc
clc
mov
aas
imul
xbegin
sbb
aaa
test
clc
cmp
mov
call
sbb
call
xor
add
clc
mov
in
cmp
test
adc
add
in
xchg
pop
psrld
iret
icebp
inc
add
push
add
test
pop
fisubl
add
cvttps2pi
clc
dec
push
jne
cmp
pop
dec
fildll
clc
lods
mov
cs
add
cwtl
cmpsb
clc
js
pop
cld
mov
lea
add
push
sub
mov
add
inc
clc
icebp
mov
out
test
adc
add
add
das
mov
add
add
add
ss
clc
loope
cmp
clc
icebp
mov
cmp
clc
scas
and
mov
add
test
push
pop
inc
add
add
add
add
dec
test
mov
pusha
add
into
add
and
add
add
aam
popa
add
xor
add
clc
gs
rcrl
inc
add
scas
fs
push
clc
ljmp
pop
mov
leave
inc
add
and
add
iret
xchg
xor
add
add
sarb
pop
clc
adc
add
sub
push
add
mov
scas
xor
add
ficompl
mov
inc
add
test
and
pop
fisubl
int3
sbb
cmp
jp
cmp
lcall
jecxz
pop
mov
push
clc
sahf
bound
add
cmp
jmp
testb
xchg
mov
fdivrl
clc
mov
add
mov
clc
mov
clc
in
mov
mov
imul
add
push
clc
bound
add
loop
cmc
iret
cmp
clc
or
pop
iret
nop
ror
xchg
es
adc
clc
cmc
jge
xchg
shrb
call
test
pop
ret
mov
outsb
xchg
imul
data16
inc
add
gs
push
data16
pop
js
push
cmc
add
out
lcall
cmp
jns
clc
mov
clc
add
pop
inc
add
incb
clc
movsl
clc
and
add
xor
add
add
lea
mov
test
outsb
loope
fcomps
clc
loopne
pop
shlb
add
gs
jg
clc
dec
or
sarb
xor
add
dec
inc
add
sub
clc
lods
pcmpgtb
mov
mov
mov
loope
clc
loope
clc
out
jge
inc
add
jle
jbe
mov
push
add
mov
add
push
pop
inc
clc
lret
pop
add
add
xor
add
lahf
fidivrs
fnsave
add
push
lods
xchg
push
movsb
clc
adc
add
cmp
call
out
cmp
pop
sub
jl
clc
add
add
clc
pop
clc
aas
mov
add
pushf
xor
add
pop
or
add
push
add
sbb
add
xchg
fs
pop
pop
ret
mov
xchg
mov
int3
jecxz
rcl
fstpl
test
jb
add
sarb
clc
je
xor
add
loopne
jecxz
je
cmp
ss
adc
push
add
mov
jecxz
enter
enter
clc
push
jmp
adc
add
and
xor
add
xchg
insl
dec
push
clc
sahf
xchg
cmp
mov
sub
mov
clc
pop
xchg
cs
xor
mov
pop
xor
add
mov
add
clc
outsb
pop
or
fmulp
jp
cmp
xchg
scas
adc
add
add
inc
clc
xchg
ja
add
pop
mov
clc
jp
add
jb
add
dec
mov
jno
add
dec
sbb
add
sub
add
mov
lods
cmp
mov
add
stos
inc
add
ss
adc
push
jb
add
clc
fcomps
and
add
outsb
cmp
lret
movsl
clc
cmpsb
clc
xor
add
clc
jge
clc
jne
dec
cs
lods
imul
ret
clc
idiv
or
xchg
test
jg
add
add
clc
jno
add
mov
xchg
cmp
dec
push
push
adc
add
push
lahf
or
es
cld
xor
inc
clc
mov
popa
add
aas
cmp
add
pop
shrb
clc
push
mov
push
add
test
clc
cmp
cs
rclb
sahf
mov
fistpl
jl
clc
adc
add
mov
clc
push
add
mov
and
add
add
push
add
enter
add
lods
xchg
add
add
cmp
test
sub
sub
adc
add
add
cwtl
xor
add
lahf
add
add
push
adc
add
cmpsb
clc
int
dec
movsl
clc
or
add
popf
or
add
inc
clc
sbb
test
mov
es
aam
push
add
lods
fdivr
mov
jg
test
in
cs
xor
sbb
add
push
cmp
clc
push
icebp
adc
add
fbstp
add
cmc
daa
clc
imul
sti
std
mov
out
sub
test
add
cmc
sbb
push
add
ss
clc
add
cmp
push
add
mov
sub
add
clc
or
dec
adc
add
add
sub
push
or
sub
add
jns
movd
cmp
jecxz
push
add
cs
in
pop
pushl
add
add
test
add
pop
pop
clc
sbb
add
clc
gs
xchg
xchg
or
sbb
clc
fcompl
pusha
add
xlat
xchg
mov
lret
clc
aaa
paddq
clc
in
adc
add
xchg
std
cmc
pop
mov
mov
clc
mov
fimuls
add
fsubrp
call
addr16
adc
add
mov
pop
cwtl
movq
clc
enter
cmp
add
mov
call
sub
ja
pop
cmc
and
scas
and
add
clc
cmp
add
pop
push
sbb
sub
dec
xchg
je
mov
push
fimuls
clc
fwait
xchg
imul
clc
icebp
test
xchg
pop
pusha
add
js
add
outsb
add
imul
add
in
pop
xor
add
cmp
and
add
jg
fldl
cld
mov
pslld
test
dec
shll
add
xabort
add
mov
pop
push
dec
rcrl
cmp
clc
test
add
std
fs
insl
lock
fisubs
push
add
shll
jne
sub
pusha
add
xabort
mov
lcall
cmc
inc
add
incl
jg
sbb
clc
sub
out
push
add
inc
clc
enter
ja
cmc
pop
and
add
sub
clc
xor
clc
flds
add
cmp
cmp
and
add
fs
mov
add
out
testl
adc
add
clc
mov
fcmovb
clc
push
cmp
fistl
push
cmp
add
mov
add
pop
clc
aad
mov
mov
add
and
add
and
add
mov
add
or
in
cmpsb
clc
and
add
cmp
xor
add
sbb
std
inc
clc
mov
xor
add
clc
mov
inc
clc
xor
or
neg
add
add
clc
into
xbegin
insb
cmpsl
clc
add
add
add
add
add
xchg
dec
push
pop
pop
cmp
and
add
gs
dec
push
cmpsb
clc
jae
add
inc
add
dec
jnp
xchg
jg
mov
or
dec
sub
jne
jno
add
add
mov
inc
clc
push
stc
sub
adc
clc
pop
push
arpl
add
add
fisubrl
add
sbb
clc
push
add
cmp
add
add
cltd
adc
add
add
mov
gs
dec
insl
leave
je
cltd
lret
jge
sub
loop
xor
add
fstps
test
and
add
add
add
clc
xor
add
push
pop
out
add
movsb
clc
pop
in
call
xchg
test
insb
adc
dec
sub
mov
scas
dec
xor
clc
xchg
hlt
add
add
add
and
add
fsubrs
dec
pop
inc
clc
lret
add
leave
cltd
nop
loop
xor
add
test
arpl
add
or
clc
stc
popa
add
mov
mov
lods
das
jns
clc
je
sub
sbb
clc
and
add
inc
add
xchg
movsb
clc
fidivrl
pop
mov
xor
cmpsb
clc
test
xchg
inc
add
jg
clc
xchg
lret
cmp
add
mov
and
add
sbb
add
xchg
xchg
inc
add
xchg
stos
mov
clc
mov
icebp
in
push
clc
inc
add
sar
rorl
cmp
ret
clc
xlat
and
bound
add
clc
repz
clc
xchg
cltd
add
out
outsl
sbb
sub
loopne
sub
xchg
jl
clc
xchg
arpl
add
test
mov
out
test
pop
clc
xor
daa
clc
fs
xchg
mov
clc
or
add
or
or
mov
add
pop
je
stos
push
pop
aaa
gs
out
lods
mov
sbb
mov
clc
data16
mov
int3
fs
xor
add
aaa
inc
add
vcvtps2pd
clc
int3
cltd
shrl
movlps
add
inc
add
adc
add
gs
mov
mov
ret
clc
scas
xor
add
dec
inc
add
out
bound
add
pusha
add
cmp
mov
clc
fdivs
add
jno
add
shld
ljmp
inc
clc
or
jl
sbb
add
add
test
sub
mov
add
clc
in
sbb
arpl
add
cld
movsb
clc
pusha
add
add
clc
lcall
add
loope
inc
add
or
stc
inc
add
xor
lret
sbb
mov
jmp
pop
clc
push
add
push
push
add
daa
clc
jecxz
es
xbegin
rorl
add
aas
sub
aad
mov
hlt
iret
not
repnz
inc
clc
into
jge
clc
and
add
loopne
push
add
addr16
rcrl
or
clc
inc
clc
xor
fstps
scas
or
sub
clc
mov
add
cs
frstor
cmp
inc
clc
mov
inc
clc
cmpsl
clc
test
add
xchg
test
mov
imul
clc
mov
xchg
lret
cld
aam
xchg
sub
adc
add
clc
imul
pop
add
inc
add
xor
clc
lret
push
cmp
lret
add
sarb
xor
add
clc
imul
clc
or
cltd
jmp
mov
add
jmp
cmp
dec
test
es
inc
add
imul
add
ja
jp
clc
push
or
xchg
mov
add
pusha
add
lods
data16
insb
mov
add
add
and
add
mov
testl
sbb
or
sar
add
add
push
aas
add
add
sbb
shrb
loopne
push
add
push
jne
jge
push
lock
cmp
clc
jg
cmp
add
add
aas
fistpll
sar
fs
pop
fisttpll
add
cmp
add
fmulp
sar
cmp
xchg
cwtl
and
add
cmp
dec
ss
adc
add
add
clc
insl
out
lock
add
clc
in
bound
add
clc
into
stos
mov
aam
mov
and
add
cmp
xor
add
or
push
add
loopne
adc
add
add
cmpsl
clc
mov
clc
out
inc
add
xchg
mov
clc
aam
clc
outsl
xor
and
add
mov
add
xchg
jecxz
jne
insl
das
push
add
cli
pusha
add
sbb
add
lods
dec
daa
clc
dec
lahf
out
or
fdivr
or
cmp
insb
jmp
clc
add
add
rcrb
mov
add
pop
sar
lahf
fdivl
clc
pop
popa
add
jnp
clc
dec
jge
jl
add
mov
clc
stos
inc
add
sub
fs
sbb
add
mov
add
jl
std
test
repnz
clc
inc
add
mov
shlb
add
out
das
add
add
dec
push
sar
inc
add
xor
inc
clc
repnz
clc
repnz
mov
sbb
add
clc
adc
lods
clc
or
gs
dec
clc
sbb
movsb
clc
ret
clc
xor
add
add
lods
xor
jl
clc
mov
clc
shll
add
inc
add
fwait
cmp
and
add
stos
or
clc
mov
add
fidivrs
add
test
or
aam
lcall
es
sbb
sbb
add
add
pop
lods
clc
or
adc
add
sub
jmp
mov
scas
jp
inc
clc
mulb
add
out
sbb
xchg
cwtl
add
sub
xchg
pop
jge
adc
dec
mov
rol
clc
rol
clc
cmp
jl
clc
adc
add
and
add
fs
adc
add
sahf
ds
jg
sbb
add
add
inc
clc
mov
clc
ror
fsub
clc
jae
add
inc
add
imul
add
add
imul
clc
mov
add
pop
clc
std
xchg
pop
xchg
xchg
add
mov
pop
jecxz
fcmovnbe
jb
add
inc
clc
xchg
das
sub
mov
rorb
clc
in
sti
adc
add
clc
cmpsb
clc
dec
in
out
lahf
jecxz
test
fs
mov
xchg
pop
out
dec
add
in
cmp
movsb
clc
pop
clc
jae
add
add
int3
jle
clc
dec
int
stc
fsubl
add
push
xchg
jb
add
sbb
add
test
or
add
int3
mov
dec
sbb
add
int
pop
sub
ss
adc
add
ja
clc
test
mov
lea
pop
mov
inc
add
pop
test
out
aad
clc
jbe
pop
jo
add
test
sbb
out
sub
add
dec
repz
push
clc
inc
clc
push
add
push
sbb
mov
and
add
clc
imul
inc
clc
inc
clc
jb
add
clc
dec
lea
add
add
clc
mov
sbb
in
mov
jbe
stc
inc
add
mov
or
aas
test
imull
xchg
xchg
xor
clc
xchg
or
jno
add
add
cmp
clc
pop
test
add
inc
add
addr16
jp
add
shll
add
pop
cmpsl
clc
add
mov
push
add
mov
clc
aam
clc
leave
cli
pop
push
add
stc
and
cs
outsl
lock
or
clc
xor
add
testl
jmp
pop
in
in
in
ja
dec
imul
outsl
or
pop
xchg
pop
push
xchg
fsubl
add
stc
pushf
sub
mov
add
dec
and
pop
fisttpll
pop
in
ljmp
jg
cmp
pop
sti
lea
mov
clc
rcrb
clc
cs
lods
jge
jo
add
cli
nop
inc
add
out
cmpsl
clc
inc
clc
aas
or
add
clc
call
push
adc
mov
clc
xchg
fsubs
add
push
jge
add
in
xbegin
sahf
faddl
add
mulb
add
sbb
add
inc
clc
repnz
adc
add
mov
add
clc
xbegin
popf
push
add
rcrb
add
add
out
cs
sub
sar
add
mov
add
jle
clc
jns
enter
fmull
push
add
jb
add
scas
outsb
fucomip
pop
jnp
clc
push
call
stos
sbb
int
mov
in
inc
clc
aaa
gs
pop
jns
adc
add
clc
cs
es
dec
pop
clc
mov
fnstenv
add
popl
fcmovu
xchg
fisubrl
sbb
add
sar
clc
push
add
cmp
sar
mov
testl
inc
clc
inc
add
imul
daa
clc
mov
repz
inc
clc
call
repnz
insl
dec
cmp
fsts
or
lahf
inc
add
out
pop
cmc
ja
pop
stos
adc
add
add
and
add
jmp
sbb
lea
clc
and
mov
fwait
sbb
add
xabort
clc
dec
aas
add
add
cmp
into
lcall
add
add
testb
pop
mov
push
lods
sahf
jmp
cmp
jecxz
lods
ficompl
push
pop
clc
insl
stos
cwtl
xor
insl
popf
out
xchg
jecxz
movsl
clc
jnp
enter
clc
cmp
add
clc
pop
sbb
mov
ja
add
sti
and
add
sbb
add
ss
int3
push
add
add
add
sti
sar
xchg
push
icebp
mov
lock
clc
push
add
push
and
cmp
pop
clc
cmp
add
add
shl
mov
rol
clc
out
stos
imul
pushf
mov
test
out
outsb
stos
jg
pop
iret
mov
roll
jns
pushf
cmp
clc
add
and
add
mov
jp
clc
pop
lret
clc
mov
clc
es
or
add
clc
jnp
and
add
xor
add
cmp
add
call
add
clc
sub
add
or
add
xchg
cmp
add
addr16
mov
xchg
notl
add
xchg
push
add
push
add
mov
daa
clc
lods
cli
adc
add
jmp
clc
xchg
sbb
add
inc
add
xlat
mov
clc
dec
sbb
clc
dec
dec
cmp
out
cli
mov
vsubps
add
mov
cs
ret
clc
add
cltd
data16
in
stos
gs
enter
mov
add
add
cmp
clc
in
pushf
jae
add
fwait
mov
push
add
dec
jae
add
into
test
cmpsb
clc
and
add
out
jge
cmp
clc
push
xbegin
fstps
jnp
or
or
cmp
clc
jge
clc
dec
push
and
add
or
cmp
dec
pop
xchg
mov
add
add
mov
arpl
add
popf
push
sbb
add
or
add
insl
mov
cmp
popf
lea
mov
clc
inc
clc
xchg
inc
add
xchg
cmp
mov
xchg
push
add
add
add
gs
sbb
mov
clc
push
pop
dec
cmp
clc
sub
cld
adc
xor
add
sub
clc
dec
mov
add
cmp
add
inc
add
xchg
jp
cld
outsb
inc
clc
push
js
mov
cmp
clc
xor
add
add
xor
in
mov
clc
mov
add
add
test
push
add
jnp
clc
arpl
add
xchg
repnz
add
xchg
cmc
sar
clc
xchg
adc
add
xbegin
aas
fdivs
mov
push
add
js
or
sbb
jecxz
in
sub
clc
sub
pusha
add
jg
scas
mov
clc
mov
add
repz
hlt
ja
lahf
cld
mov
add
loopne
jbe
sbb
addr16
fadds
clc
push
clc
and
xchg
jbe
repnz
add
add
mov
add
sub
add
jmp
xchg
in
push
add
dec
jae
add
adc
add
add
pop
jb
add
add
add
cwtl
ret
fcompp
xor
jnp
add
sbb
sub
add
testb
mov
add
add
mov
inc
add
add
add
inc
add
mov
clc
and
add
clc
pop
int
clc
movsb
clc
xbegin
fdivs
add
xor
add
xchg
ret
clc
xbegin
pop
ret
push
and
add
cmp
clc
add
in
push
js
fdivl
clc
jo
add
decl
ds
clc
mov
sbb
movsb
clc
stos
rolb
add
add
ret
clc
mov
clc
repz
clc
fwait
xlat
push
add
cli
pushf
dec
and
add
add
jns
addr16
mov
add
sub
add
mov
clc
or
and
add
clc
inc
clc
pop
add
add
dec
pushf
test
fsubrl
mov
clc
mov
lock
stos
xchg
jge
add
ret
pop
pop
clc
fcompl
test
adc
add
imul
clc
push
add
sub
sbb
push
or
add
pop
xchg
or
clc
int
outsb
push
pop
pop
lods
pop
aam
cmp
add
jle
xchg
data16
rcrl
add
clc
jle
mov
loope
mov
add
clc
icebp
outsb
sbb
or
cmp
sti
cmc
clc
pop
pop
cmp
xor
add
clc
cmp
inc
add
add
add
add
xabort
mov
add
cwtl
out
ljmp
lods
dec
loope
shrl
inc
add
clc
mov
out
out
aad
popf
jne
aam
jbe
clc
sar
push
add
adc
mov
add
cmp
sbb
clc
dec
jecxz
inc
clc
lods
or
mov
sbb
and
ss
jmp
mov
xor
add
icebp
insb
cmpsb
clc
inc
clc
push
jle
jae
add
mov
enter
push
add
inc
add
sti
xor
add
add
clc
xor
add
cmpsb
clc
cmc
xchg
pop
xchg
push
rcrb
test
push
add
dec
ret
clc
popa
add
popa
add
or
cmpsl
clc
pop
or
add
clc
vmovlps
add
add
pusha
add
cmpsb
clc
ljmp
cmp
ret
clc
cltd
lods
repnz
bound
add
mov
clc
push
cmp
mov
loope
jbe
ss
add
sbb
mov
add
scas
sti
fidivl
clc
pop
clc
loope
sub
clc
aad
mov
cli
inc
clc
xabort
jne
mov
clc
mov
clc
and
add
add
fiaddl
lcall
mov
jp
add
and
add
clc
inc
add
pop
pop
inc
clc
sub
push
jmp
add
clc
scas
xor
clc
push
add
data16
xchg
out
xor
add
pop
mov
cs
cmpsl
clc
rcrl
lock
hlt
jp
push
xchg
std
pop
in
cmp
clc
xor
and
add
and
add
ror
push
out
inc
clc
lahf
ret
clc
dec
mov
add
jb
add
popf
mov
mov
aad
add
adc
xchg
pop
xlat
sbb
int3
inc
clc
scas
loop
jp
sti
fdivrp
mov
clc
mov
clc
cld
or
dec
data16
adc
add
dec
mov
rcr
xor
push
insb
inc
clc
cmpsl
clc
cli
out
xchg
sbb
pop
sub
xchg
and
add
clc
mov
es
pushf
adc
add
mov
clc
es
lret
shrb
in
cmpsl
clc
mulb
sti
jno
add
add
mov
jge
add
or
add
clc
cmp
jg
add
testl
clc
or
hlt
int3
mov
add
mov
add
cmp
and
mov
add
mov
clc
inc
clc
push
add
and
push
dec
lcall
xor
add
mov
xchg
aad
cmp
mov
pop
pop
cmp
int3
sub
div
test
insl
xchg
pop
push
add
sub
jecxz
in
sbb
clc
and
clc
daa
clc
repz
push
add
pop
clc
sbb
inc
add
cmc
lret
adc
add
jb
add
pop
cmp
clc
adc
add
pop
jecxz
xlat
shr
pop
jge
push
push
outsl
mov
test
add
xchg
enter
add
inc
add
mov
xor
add
xchg
imull
add
and
add
jns
clc
or
cmp
mov
push
add
sbb
rcll
add
lea
add
mov
add
jnp
lcall
xchg
fs
cmp
clc
jl
sar
lahf
pop
cmp
add
lods
scas
adc
in
cltd
push
mov
pop
cli
pop
js
add
xor
add
and
add
cmp
cmp
cmp
into
ret
clc
ds
and
xchg
xchg
adc
add
add
fsubr
mov
fwait
inc
add
movsl
clc
in
movsb
clc
jb
add
in
adc
cmp
nop
dec
fwait
jmp
dec
cmp
push
add
xchg
or
inc
add
pop
scas
jno
add
add
cmp
jnp
das
aam
inc
add
push
add
push
mov
fwait
push
clc
dec
and
add
data16
mov
mov
sub
fmuls
aad
jle
clc
nop
cwtl
cs
dec
xlat
repz
clc
xlat
int
nop
sbb
add
enter
xor
or
clc
sar
clc
test
cmp
push
or
test
in
add
add
or
add
dec
idiv
cmp
cmp
xabort
add
rolb
clc
xabort
clc
mov
or
out
into
jno
add
addr16
lods
ret
into
mov
rcl
push
xchg
push
ss
add
in
lcall
and
cli
inc
clc
lock
lret
sub
imul
lods
in
jns
inc
clc
nop
mov
clc
pop
lcall
mov
add
jae
add
gs
int
idivb
clc
sub
sbb
clc
mov
out
jno
add
scas
adc
add
add
mov
add
add
test
push
int
pusha
add
cmp
movsb
clc
mov
data16
xchg
ljmp
add
push
add
sub
clc
roll
clc
scas
je
mov
aaa
mov
clc
mov
jl
icebp
cmp
nop
lods
inc
add
mov
clc
pop
inc
add
xor
add
add
sub
scas
inc
add
xor
add
add
add
dec
xchg
adc
clc
jp
add
jb
add
jmp
jae
add
cltd
scas
push
clc
inc
add
add
add
push
add
dec
jo
add
ret
clc
xchg
cmpsl
clc
mov
fmuls
movsb
clc
push
sub
lods
rcrb
insb
mov
divl
or
js
push
add
pop
in
sti
mov
xchg
xor
add
roll
add
loopne
inc
clc
fs
es
or
clc
repnz
clc
clc
push
add
popa
add
pop
jo
add
es
loopne
out
adc
add
jmp
xor
add
sar
clc
jo
add
dec
dec
pop
leave
jmp
and
add
mov
cld
bound
add
insb
xor
add
or
js
mov
cmp
jnp
pop
loop
inc
clc
mov
add
mov
loopne
clc
mov
xchg
in
cmp
lret
lret
mov
ss
cmp
add
fcomps
cmp
add
xor
add
dec
nop
js
cmp
dec
ljmp
adc
add
sti
pop
jge
jno
add
add
out
sar
clc
gs
mov
clc
inc
clc
call
add
sar
sbb
clc
lahf
jnp
mov
iret
cmp
clc
adc
add
add
sub
add
sahf
shrl
clc
fistpll
xchg
fists
xchg
adc
add
sub
stc
cmc
stos
add
cmp
cmpsl
clc
lret
or
add
add
push
add
scas
popf
cmp
dec
inc
clc
xbegin
cmp
dec
clc
cmp
bound
add
add
or
add
jae
add
fnstenv
add
frstor
addr16
dec
mov
jp
sbb
clc
hlt
push
xchg
inc
clc
cld
lcall
stos
add
clc
arpl
add
ret
pop
imull
and
add
mov
jno
add
pop
arpl
add
add
mov
cmp
cltd
lahf
pop
hlt
jae
add
lret
das
or
add
cmpsl
clc
cmp
stos
testl
sub
dec
mov
dec
cmp
add
enter
fisttps
dec
int
push
sar
lret
mov
hlt
sahf
xor
add
add
push
popa
add
xchg
pop
or
add
das
data16
cmp
fidivl
or
pusha
add
test
fistps
or
clc
jae
add
xchg
xlat
testl
sbb
jae
add
aam
lcall
clc
xor
add
and
add
push
add
sahf
push
adc
xabort
clc
jne
mov
add
sub
test
es
xchg
leave
imul
add
jo
add
xabort
clc
xor
mov
clc
push
or
clc
or
ja
fs
mov
mov
aad
jp
clc
sar
clc
mov
dec
mov
mov
push
add
add
add
ret
jno
add
adc
add
push
pop
sbb
clc
pop
into
sbb
mov
add
cmc
leave
je
movsl
clc
loopne
inc
add
enter
cltd
enter
dec
mov
add
add
test
loope
dec
stos
mov
clc
sub
clc
std
mov
pusha
add
aas
lcall
popa
add
rcll
cli
sti
mov
mov
xor
add
add
sbb
lret
add
daa
clc
ret
push
ret
clc
or
xor
add
mov
loope
jns
clc
es
popl
add
enter
fldt
sbb
xor
add
lea
mov
dec
in
rol
clc
lahf
jnp
cmp
mov
add
jnp
clc
cmp
dec
in
push
addr16
inc
add
and
adc
add
add
stc
pop
and
add
push
push
inc
clc
dec
sbb
clc
jbe
clc
call
jnp
cmp
xor
not
push
clc
sub
or
js
jo
add
cmpsl
clc
push
jecxz
cmpsb
clc
in
or
ss
clc
mov
fwait
pushf
push
add
in
pop
mov
xlat
ror
lret
sti
hlt
xchg
out
lahf
and
add
add
mov
sbb
clc
mov
add
adc
jbe
lret
jg
add
or
ret
clc
cmp
add
add
fistl
jb
add
clc
xor
xor
add
cmp
pop
sbb
add
cmp
clc
push
xchg
adc
add
add
or
bound
add
aas
aam
mov
mov
mov
sub
jg
add
add
add
add
fxch
cli
mov
add
add
jne
pop
lret
xchg
cltd
push
lock
dec
or
add
pusha
add
hlt
add
add
clc
fnstcw
adc
add
clc
cmp
xchg
sub
clc
lock
clc
xabort
add
lret
add
push
call
in
xor
add
add
ja
add
lret
push
cmp
add
movsl
clc
lahf
sarl
xchg
cld
add
add
movsb
clc
stos
cmp
fwait
scas
adc
add
dec
fdivl
mov
adc
add
add
ret
add
cmc
xchg
cmp
sbb
inc
clc
insb
jb
add
add
js
clc
xchg
pushf
xor
add
add
add
rorl
clc
clc
sbb
add
jae
add
clc
jae
add
jmp
push
in
loope
xor
add
add
mov
clc
leave
inc
clc
and
add
jge
ret
clc
lret
clc
mov
pop
clc
cs
add
stc
aam
push
mov
clc
xlat
pop
xchg
or
pop
pop
xchg
movsl
clc
mov
clc
xor
add
imul
in
sbb
ljmp
cmp
mov
imull
xor
jae
add
std
sub
lret
and
popa
add
push
xchg
repnz
clc
test
int
or
imul
clc
lock
imul
sbb
add
pop
pusha
add
xchg
lock
inc
clc
lahf
outsl
pop
mov
clc
sub
insl
sub
in
dec
push
add
cld
xbegin
rclb
add
dec
popa
add
push
jo
add
add
mov
je
or
clc
cmp
lods
sub
clc
aam
mov
movsl
clc
sbb
cmp
xlat
into
pop
imulb
outsb
repnz
cmc
xabort
jle
ficompl
pop
cmp
pop
js
inc
clc
sbb
xor
add
inc
add
jecxz
adc
add
pop
aaa
mov
add
fistpl
push
add
pop
pop
insb
fwait
sti
cmp
int3
and
add
add
dec
add
mov
add
add
outsb
imul
add
push
push
sub
or
fldenv
add
cmp
clc
xchg
cmp
mov
clc
mov
push
clc
and
add
xbegin
or
mov
sub
add
je
add
fwait
loopne
jl,pt
clc
push
cmp
adc
add
clc
or
mov
hlt
in
cmc
sbb
clc
push
clc
xchg
jb
add
je
clc
icebp
in
leave
dec
insb
or
add
add
add
int
dec
out
es
mov
clc
push
add
sahf
xchg
jb
add
aam
cwtl
test
clc
sub
jmp
mov
jnp
inc
add
jl
push
out
lock
add
int
add
xor
add
mov
add
add
add
and
add
push
add
cld
int3
imul
xor
mov
repz
clc
fidivs
clc
push
jns
add
cmp
adc
cmp
cwtl
mov
add
mov
sub
mov
sti
sub
add
das
lcall
inc
clc
int
mov
in
dec
sbb
sar
clc
jecxz
and
add
add
aad
mov
push
add
add
add
push
pop
xchg
sbb
mov
clc
mull
add
jmp
xor
add
sbb
mov
es
xor
or
add
and
add
clc
add
add
jp
or
mov
add
add
out
and
in
loope
mov
add
cmp
and
add
sbb
sti
push
adc
add
fs
cmp
aad
inc
clc
xlat
fisttpl
loope
mov
clc
dec
pusha
add
add
add
test
or
push
clc
mov
fbstp
add
es
inc
add
sbb
push
add
lea
out
jne
clc
mov
arpl
add
test
clc
mov
scas
push
add
push
sub
clc
fs
cmp
clc
pusha
add
cmp
bound
add
mov
clc
mov
lea
mov
add
jno
add
clc
imul
cmp
lcall
rcll
inc
add
jle
add
sub
add
js
jp
daa
clc
cmp
add
mov
call
or
jns
cltd
mov
pop
repz
clc
xchg
xchg
mov
add
pop
clc
push
sbb
or
pop
clc
cltd
xchg
repnz
jbe
jns
clc
movsl
clc
call
enter
push
add
hlt
pop
ja
and
js
xchg
sar
mov
decl
out
movsl
clc
pop
mov
adc
add
clc
pop
add
add
cmp
push
fadds
add
call
add
add
adc
add
add
add
sub
clc
adc
add
leave
mov
dec
pop
and
add
xchg
lods
xchg
cmp
clc
xor
add
in
push
gs
cmp
push
mov
clc
cmp
clc
dec
fisubrs
add
add
add
add
mov
sbb
sbb
sub
clc
dec
pop
adc
add
mov
lret
and
add
clc
and
add
leave
movsb
clc
stc
fisubrl
shll
test
add
scas
cwtl
lods
popf
inc
add
shrl
pop
loopne
fiadds
add
outsl
in
pop
mov
add
sub
ja
clc
sub
clc
loopne
mov
clc
sahf
inc
add
nop
or
jbe
gs
cs
aam
add
add
sbb
add
clc
pop
leave
dec
jo
add
mov
enter
in
and
add
aad
jbe
sti
lea
dec
movups
add
sbb
aaa
out
jl
aaa
xor
add
inc
clc
lret
mov
pushf
xchg
xchg
das
dec
jb
add
add
fs
mov
lods
dec
fcomps
dec
mov
clc
jmp
add
clc
cmp
and
add
cmp
je
sbb
add
int3
lea
shl
add
add
cmpsl
clc
hlt
jo
add
clc
jae
add
or
iret
neg
das
sarb
jo
add
jno
add
fistl
add
dec
cld
mov
cmp
clc
in
test
daa
clc
adc
add
rclb
add
push
add
or
adc
out
sub
lods
mov
outsb
icebp
sbb
fs
popf
call
add
clc
cmpsb
clc
cmp
mov
mov
clc
adc
add
add
cltd
cmpsl
clc
sub
clc
inc
add
icebp
cmp
add
mov
fbld
add
jno
add
clc
jnp
clc
sub
data16
aas
jl
stc
lret
clc
fmul
cmp
fcmovu
mov
xor
add
clc
into
sub
loope
hlt
dec
gs
mov
add
scas
fidivl
add
push
clc
pop
mov
jmp
pusha
add
stc
dec
shlb
cltd
in
in
rolb
inc
add
mov
scas
aas
lea
add
mov
add
es
cmp
clc
push
cmp
clc
or
clc
in
loop
and
sar
bound
add
xor
addr16
sbb
mov
xchg
mov
jne
add
or
call
add
mov
push
data16
xchg
mov
add
clc
iret
xor
fdivr
sbb
add
clc
popa
add
adc
aam
mov
clc
jle
adc
add
mov
lods
push
std
pop
sub
clc
pop
mov
add
sbb
add
mov
aas
shll
sti
in
mov
popf
out
xor
cli
pop
clc
call
mov
clc
xor
add
add
rcrb
gs
push
shlb
clc
iret
arpl
add
clc
push
and
add
add
jbe
clc
decb
mov
clc
lods
xchg
outsl
lods
ret
inc
clc
cmp
add
add
pop
out
push
addr16
adc
add
cmp
ja
fimull
or
and
pop
jmp
stos
xchg
stos
sub
add
add
dec
decb
xor
add
xchg
or
push
add
xchg
fsubl
xchg
add
add
push
add
mov
stc
pop
mov
add
insl
pop
inc
add
push
add
sub
cmp
add
ret
out
xor
add
push
addr16
in
aas
mov
clc
leave
std
outsb
fbstp
insb
jno
add
add
and
add
pop
lods
or
clc
aad
clc
and
add
sar
clc
cmp
add
add
cmp
add
add
clc
test
add
lock
xor
clc
cmp
clc
xor
add
jns
clc
dec
sub
cmpsl
clc
jge
add
in
aaa
outsb
fdivrl
push
add
daa
clc
shrl
mov
add
add
add
add
int3
jle
lods
pop
xabort
clc
out
sbb
push
in
cmp
or
add
add
je
clc
cmc
adc
add
clc
adc
add
clc
rcr
cld
sbb
push
or
jle
add
add
push
inc
clc
inc
clc
add
mov
pop
mov
loope
jge
add
dec
inc
add
mov
and
add
add
bound
add
xabort
lock
stos
test
add
mov
push
push
fnstenv
add
fcoml
fimuls
test
shl
clc
pop
inc
add
mov
int
jg
add
dec
jmp
add
mov
cwtl
add
add
das
jge
sub
jo
add
xor
hlt
sahf
xlat
jg
pop
xor
add
xabort
add
dec
adc
movsl
clc
cmp
icebp
cmp
or
clc
jno
add
cmpsb
clc
leave
dec
cmp
xchg
add
clc
mov
adc
add
clc
inc
clc
mov
aaa
pop
pop
clc
inc
add
mov
clc
test
cmp
inc
clc
loope
vmovaps
fistps
jne
add
cmp
clc
rorl
sahf
inc
clc
adc
add
mov
add
add
xchg
xchg
fdivr
xchg
out
sub
add
add
clc
lea
cmp
add
xabort
out
xchg
mov
clc
out
push
clc
insb
pop
sbb
pop
add
clc
addr16
xchg
xbegin
mov
clc
fwait
lea
mov
clc
inc
add
rcrb
clc
movsb
clc
test
gs
jbe
clc
push
xor
sahf
mov
add
clc
jg
and
jle
add
mul
clc
in
sbb
clc
repnz
clc
popa
add
outsl
mov
sahf
cltd
inc
add
fstpt
add
add
data16
ljmp
mov
pop
push
mov
mov
sbb
add
arpl
add
hlt
scas
insb
stos
jns
add
sbb
clc
jg
push
push
mov
insl
outsb
mov
clc
fldcw
add
add
adc
add
push
inc
clc
in
cmc
adc
hlt
int
add
cmp
je
hlt
push
add
lods
stos
cwtl
dec
push
add
pop
mov
add
cmp
inc
add
cmp
lret
sbb
add
add
add
dec
in
in
enter
clc
divl
and
add
clc
stos
pop
adc
xchg
mov
shrb
clc
and
add
sbb
pop
sahf
dec
test
clc
sti
in
lret
push
push
add
cltd
jg
clc
loop,pn
sahf
mov
movsb
clc
iret
mov
add
push
add
lock
inc
add
mov
push
test
sbb
and
xor
adc
add
cld
lret
mov
xlat
icebp
pop
mov
add
jp
mov
clc
in
jns
jb
add
clc
pop
sub
cmp
add
lret
mov
xchg
cwtl
outsb
or
lret
jmp
add
sub
nop
test
call
add
add
ja
mov
xchg
pop
aam
add
pop
cmpsl
clc
inc
add
xchg
lcall
jnp
aas
fstl
clc
pop
xbegin
fstl
add
imul
xchg
jg
mov
gs
cmp
clc
mov
ja
das
inc
add
adc
add
fisubs
add
mov
clc
aad
stc
sti
or
add
add
call
loop
lock
clc
push
jno
add
xbegin
lret
adc
clc
add
add
mov
clc
jg
cmp
add
add
outsl
push
add
or
pop
fisttps
scas
dec
and
add
push
mov
add
push
dec
pop
outsb
and
add
clc
or
cs
clc
imulb
notl
add
add
add
xor
add
daa
clc
in
cmpsl
clc
jp
mov
add
inc
clc
into
add
rcr
movsl
clc
dec
bound
add
clc
mov
and
add
mov
addr16
out
cmp
add
loop
aad
cmp
ret
clc
movsl
clc
aad
ktestw
dec
jb
add
imul
jo
add
mov
jecxz
or
dec
dec
inc
clc
jns
cwtl
jno
add
dec
sub
add
outsl
cmp
data16
lret
push
add
inc
add
mov
clc
fwait
push
dec
dec
sub
xor
add
leave
hlt
fcmovb
clc
or
clc
test
jle
mov
mov
jg
adc
add
clc
mov
jecxz
iret
and
add
in
mov
add
out
mov
out
and
add
push
sarb
add
pop
sub
clc
shr
cltd
not
test
and
mov
aas
cld
daa
clc
sar
inc
clc
cmp
mov
add
popa
add
pop
cmp
dec
call
push
insl
aas
inc
clc
int
xor
add
or
add
cltd
push
adc
add
punpckhdq
in
cmp
in
popa
add
xchg
fucomi
imul
pop
cltd
add
push
sbb
aam
lret
xchg
iret
push
push
add
cmpsb
clc
icebp
faddl
cmp
mov
pop
std
push
xor
add
add
add
add
xchg
sbb
add
push
mov
clc
add
add
mov
cmp
cmp
out
adc
add
clc
inc
clc
mov
mov
ret
clc
inc
clc
roll
test
jle
xlat
enter
dec
addr16
cmp
adc
add
add
sbb
pop
lret
push
push
add
ja
xchg
ret
clc
add
add
mov
add
cmp
add
or
fdivl
and
cmp
xor
add
xchg
adc
mov
clc
mov
xchg
inc
clc
xchg
mov
mov
sbb
das
push
adc
mov
cmp
clc
in
bound
add
clc
fmuls
fisubl
push
lahf
jb
add
sbb
add
sub
clc
mov
add
xabort
sar
add
sub
std
cmp
lret
mov
sarb
mov
add
mov
mov
aaa
cmp
push
add
hlt
repz
add
aad
or
fsubs
adc
add
fldcw
lcall
add
push
clc
mov
icebp
in
xchg
dec
cmovg
push
xchg
jl
add
xchg
and
add
pop
sub
clc
loopne
lret
mov
add
flds
add
cmp
adc
add
into
xor
add
sbb
add
out
aad
add
xchg
adc
add
mov
mov
dec
mov
cmpsl
clc
dec
ljmp
lret
outsb
dec
adc
add
fcoml
cwtl
aas
push
add
mov
add
sbb
add
or
add
scas
adc
add
dec
std
addr16
mov
add
cmp
or
clc
pushf
xchg
fucom
clc
adc
add
clc
mov
cld
cmp
rcrl
inc
clc
jp
clc
aas
inc
add
mov
cmp
clc
outsl
xabort
lock
clc
pop
clc
in
pop
lret
and
add
loop
cmp
xchg
add
add
clc
test
xchg
or
clc
stos
mov
iret
cld
mov
aam
pop
aad
mov
clc
enter
inc
clc
sbb
dec
add
add
mov
add
clc
and
lcall
clc
jmp
scas
arpl
add
popf
imul
out
pop
fldcw
popl
int
add
imul
addr16
push
enter
iret
jo
add
clc
dec
inc
add
sar
add
add
mov
lods
clc
out
nop
clc
mov
add
or
add
pop
mov
clc
mov
clc
enter
outsb
push
add
xchg
jecxz
mov
cld
sub
insl
repz
push
fcmove
inc
clc
mov
xchg
inc
add
out
jg
jnp
call
add
push
add
mov
clc
sbb
xchg
clc
dec
pop
add
add
int3
and
add
cmp
cmp
into
push
dec
mov
out
mov
add
jae
add
mov
fsubl
cmc
push
clc
es
jl
clc
or
add
movsl
clc
adc
add
add
dec
jl
add
adc
add
cmp
jnp
inc
clc
loopne
cmp
mov
lret
out
into
repnz
inc
clc
insl
test
lahf
mov
pushf
das
jg
fstpl
add
xor
add
sbb
add
push
gs
daa
clc
bnd
add
lods
cmp
lods
adc
or
clc
mov
jo
add
jecxz
and
add
ffreep
clc
nop
adc
add
push
push
add
xchg
xabort
clc
lret
clc
jae
add
inc
add
xbegin
daa
clc
cmp
clc
int3
push
adc
add
cmp
insb
xchg
out
and
add
add
mov
pop
scas
dec
fs
daa
clc
pop
aad
add
jb
add
add
push
call
sub
mov
add
pop
scas
lret
cmpsb
clc
loope
sar
loop
sub
outsb
into
adc
push
jae
add
add
xor
add
loope
das
xchg
insl
jle
and
add
clc
and
add
mov
in
in
mov
fdivl
add
add
adc
add
add
add
mov
xchg
movsb
clc
or
aad
ljmp
leave
dec
sahf
inc
clc
mov
sub
stos
test
ljmp
jb
add
clc
xbegin
fdivrs
clc
jne
clc
insb
xchg
dec
jb
add
clc
jg
sub
mov
add
in
cmp
imull
add
cmp
aad
add
cmp
sar
jl
lock
pop
add
add
add
movsb
clc
mov
jb
add
sub
pop
dec
jo
add
clc
sahf
test
mov
aas
add
add
add
add
pop
ret
add
sbb
sub
clc
sar
inc
add
ret
mov
leave
push
mov
add
xbegin
aaa
mov
clc
outsb
mov
clc
stos
dec
push
das
shlb
add
cmp
or
add
sahf
das
nop
stc
jae
add
clc
imul
fwait
sti
xor
add
add
sub
pop
cmp
push
inc
add
sbb
clc
mov
int3
rcrb
add
movsb
clc
cmpsb
clc
lahf
inc
add
mov
mov
enter
clc
insb
int
cld
xchg
pop
test
clc
lcall
cmp
add
push
add
icebp
mov
lahf
and
add
mov
fmuls
inc
add
xlat
and
add
add
mov
clc
loope
jp
mov
clc
jbe
clc
inc
clc
jl
mov
je
clc
and
add
addr16
mov
add
xchg
sub
adc
add
repnz
add
fbld
add
loopne
add
add
clc
sub
clc
out
mov
mov
add
jo
add
call
clc
jp
clc
dec
cli
dec
aad
fcmovnb
clc
icebp
mov
push
jo
add
clc
jecxz
out
sti
push
xlat
and
adc
add
stos
xchg
dec
mov
cld
dec
add
add
dec
stos
and
xchg
or
or
clc
lahf
addr16
push
clc
popa
add
push
in
dec
std
loope
fiadds
add
jp
add
mov
add
clc
jecxz
and
and
clc
je
clc
xor
add
add
cmp
paddb
mov
hlt
push
add
dec
mov
add
rorl
xbegin
clc
push
negb
jg
mov
cmpsb
clc
add
add
clc
insl
enter
fdivrs
mov
pop
xchg
negl
cs
inc
clc
sbb
add
mov
clc
daa
clc
dec
inc
add
mov
clc
adc
jmp
sub
pop
lock
pop
lahf
lret
mov
fwait
xor
add
add
clc
or
fldt
test
jge
aaa
and
add
imul
add
add
clc
getsec
test
adc
add
xlat
sbb
or
add
xchg
insb
add
add
cmp
clc
fnstcw
mov
inc
add
xor
add
adc
clc
mov
add
lock
clc
jns
and
add
clc
lods
jne
add
sbb
out
push
dec
mov
fs
and
add
xor
add
add
add
add
cmp
add
xor
jge
ret
clc
aad
jno
add
add
add
add
clc
cmpsl
clc
loop
popf
inc
clc
lret
insl
jne
xlat
or
add
jae
add
clc
js
add
cmpsl
clc
pushf
lea
mov
clc
pushf
sub
add
inc
clc
xchg
dec
sbb
push
clc
pop
mov
clc
dec
add
mov
mov
stos
test
dec
outsb
fidivs
lcall
nop
mov
clc
clc
sar
clc
cltd
lcall
add
and
add
clc
int
clc
cld
inc
add
jbe
push
add
decb
sbb
test
in
xabort
add
mov
add
fsubl
pop
in
inc
add
jne
add
cmp
add
mov
xor
add
mov
int3
aam
out
mov
clc
addr16
jmp
add
add
inc
add
mov
xor
clc
int3
adc
add
cmp
sub
icebp
dec
in
mov
mov
aam
scas
mov
sbb
pusha
add
xor
add
add
clc
pop
rcrl
ss
fildll
lahf
sub
pop
int
mov
clc
cwtl
xchg
data16
pop
addr16
and
lods
dec
dec
arpl
add
movsl
clc
mov
cmp
add
mov
arpl
add
lret
clc
jle
out
clc
add
add
add
lock
cmp
add
mov
repz
mov
push
clc
pop
mov
add
pusha
add
push
add
mov
aad
stos
fcoml
add
mov
pop
lods
test
clc
fsubs
call
jle
sar
std
sub
scas
ss
add
sub
dec
push
add
cmp
clc
xor
add
add
xor
clc
jl
mov
clc
loope
push
cwtl
lea
loopne
xchg
push
add
add
add
add
mov
push
add
xlat
insl
int
sar
jbe
sub
iret
ret
ljmp
jmp
jge
mov
cmp
fmull
mov
jne
add
mov
clc
in
stos
mov
dec
jns
sub
clc
enter
jno
add
rclb
bound
add
adc
add
add
addr16
adc
clc
dec
cmp
clc
fcom
push
mov
dec
fmuls
clc
pop
push
xchg
sar
in
xchg
sub
xchg
jo
add
xchg
mov
frstor
add
add
stc
sub
sub
in
mov
clc
cli
jl
hlt
jecxz
ret
clc
or
mov
clc
cmp
test
clc
and
add
or
clc
cwtl
add
add
pusha
add
fwait
lret
cmp
clc
cmp
and
lcall
jne
push
pop
clc
add
clc
mov
test
das
into
jns
fisubs
dec
fisubl
add
xchg
and
add
add
inc
clc
sbb
add
push
add
popa
add
dec
xchg
jle
daa
clc
lret
push
aaa
sbb
and
add
mov
clc
loope
iret
sti
cmp
mov
inc
add
inc
add
fcmovnb
clc
out
mov
clc
insl
cmp
xlat
cwtl
xchg
cmp
daa
clc
cmp
push
sub
in
add
add
xor
add
add
clc
add
jb
add
enter
adc
insl
cs
pushf
pop
sar
vmulps
sbb
and
add
add
outsl
lret
mov
in
movsl
clc
popa
add
fwait
or
mov
add
lea
adc
add
fsubrs
mov
add
cmp
xchg
aad
sti
fwait
inc
clc
rol
clc
enter
adc
add
insb
addr16
ljmp
cmp
stos
mov
lods
cltd
out
cmc
fidivs
jbe
push
and
xlat
sbb
xchg
fstpl
cli
and
add
clc
inc
clc
pop
es
cs
cmpsb
clc
xor
add
je
inc
clc
mov
add
mov
add
mov
test
loope
fadds
add
mov
add
xchg
pop
lock
clc
xor
add
add
add
mov
jns
clc
or
add
xor
sub
cld
rcll
arpl
add
cmp
loop
cmp
clc
push
mov
outsb
sbb
clc
ljmp
add
scas
mov
mov
xor
jl
cltd
ret
jmp
out
mov
add
add
inc
add
cli
push
mov
push
pop
xchg
xchg
in
and
arpl
add
add
insb
mov
fimuls
add
ja
decb
sbb
int
cmp
rorb
pop
pop
lods
in
cmp
mov
sbb
or
add
add
clc
mov
stc
insb
out
imul
clc
adc
add
icebp
icebp
cltd
jle,pt
add
cmp
add
mov
jb
add
in
cs
add
mov
clc
mov
pop
out
lock
add
add
add
hlt
mov
jl
pop
scas
loop
in
ret
divb
ljmp
xor
add
outsb
out
out
xchg
movsl
clc
popf
fmull
add
xor
add
add
jo
add
add
push
pop
es
mov
dec
fs
int
testl
adc
clc
xabort
clc
ljmp
add
sub
add
outsl
or
clc
movsl
clc
gs
sbb
repnz
cmp
push
inc
clc
gs
enter
or
lret
das
jne
test
or
xor
add
clc
out
mov
clc
sub
inc
add
cmp
mov
outsb
dec
mov
jmp
je,pt
and
add
clc
xlat
push
add
pop
scas
js
clc
lods
data16
lret
pop
cltd
cmp
clc
lea
add
cmp
mov
add
loopne
pop
pop
fs
fwait
js
mov
add
adc
add
add
clc
xchg
push
add
mov
push
dec
xor
add
loop
jle
add
enter
add
adc
and
pop
mov
add
mov
insb
add
add
add
add
add
mov
adc
add
mov
or
clc
xabort
clc
xchg
adc
outsb
pop
sahf
clc
je
add
add
mov
add
cltd
icebp
jmp
pop
cli
push
add
jg
ret
clc
jns
jle
stos
pop
cmp
clc
nop
mov
sub
clc
bound
add
xor
add
add
adc
add
push
ljmp
add
clc
pop
mov
movsb
clc
lret
out
je
clc
xchg
and
data16
add
add
adc
add
add
add
into
lahf
cmp
in
icebp
fiaddl
add
clc
ljmp
scas
aad
clc
pushl
add
jl
mov
jae
add
pop
jno
add
gs
mov
xor
add
cmc
mov
xchg
xor
add
pop
pop
inc
add
mov
fldcw
fwait
push
out
out
or
inc
clc
stc
xor
add
aaa
out
xor
add
add
test
loop
and
add
pop
lods
push
mov
clc
mov
xchg
xchg
lret
push
add
jl
cs
jae
add
aaa
xchg
jo
add
clc
outsl
aaa
in
gs
cmp
clc
outsl
into
jno
add
cli
in
loopne
or
clc
add
add
add
cld
xchg
mov
adc
add
push
add
xchg
push
add
scas
mov
add
mov
add
pop
aas
adc
stc
push
cmp
jnp
xchg
aaa
pop
dec
ficomps
clc
mov
jnp
cmp
clc
adc
add
clc
jns
add
stos
test
cmpsl
clc
xchg
jp
clc
xabort
push
jl
call
mov
sar
inc
clc
fcomi
jne
sbb
in
dec
push
sbb
add
pop
jmp
bound
add
jo
add
add
dec
mov
add
push
int
jno
add
add
call
clc
mov
fcmovnu
cmp
sbb
int
add
out
xor
add
loop
js
mov
in
lret
pusha
add
insl
cmp
pop
test
in
insl
iret
xchg
das
xlat
sub
stos
xor
add
sbb
add
xchg
insl
mov
add
into
pop
jno
add
xabort
adc
mull
add
aam
in
xchg
push
mov
add
jbe
xor
add
enter
xchg
push
add
gs
fwait
inc
add
and
add
add
mov
sar
sarl
pusha
add
out
sub
out
xchg
mov
and
add
push
aas
inc
clc
enter
push
push
clc
and
mov
arpl
add
jbe
cmpsb
clc
or
clc
and
add
addr16
bound
add
inc
clc
xor
add
cs
call
mov
clc
push
add
test
popf
xabort
cmpsl
clc
pop
xchg
adc
add
add
clc
xchg
push
add
addr16
and
je
add
stc
int3
mov
rcrb
iret
mov
add
add
data16
imul
clc
dec
jp
insl
js
test
push
add
or
add
add
add
fs
inc
add
xchg
outsb
imul
lea
clc
add
add
mov
inc
add
and
add
dec
jns
clc
push
add
sar
out
jmp
clc
rdmsr
add
cmp
add
adc
add
add
add
ljmp
ffree
clc
popf
dec
add
add
and
add
add
cmp
arpl
add
add
out
xor
add
add
adc
add
add
mov
clc
test
sub
cmp
mov
add
aam
int3
cmp
add
push
mov
cmp
mov
clc
mov
loopne
xor
add
cmp
add
in
push
and
add
movsb
clc
cli
in
js
add
into
std
mov
pop
in
repnz
jne
add
int3
push
inc
add
sbb
pushf
fdivs
add
clc
fnsave
out
das
adc
add
cmp
push
inc
clc
clc
ljmp
clc
fs
clc
mov
iret
das
in
dec
xchg
sub
clc
inc
add
push
jae
add
loopne
repz
insl
inc
clc
test
xchg
add
lods
incl
clc
leave
adc
add
mov
sbb
sub
pop
cli
out
popf
clc
outsl
mov
add
dec
xchg
stc
in
cmpsb
clc
in
xchg
mov
clc
pop
aaa
sti
jnp
sbb
pop
jmp
xlat
fldenv
add
add
imul
test
and
add
sub
or
and
add
clc
xchg
jbe
clc
add
add
ret
clc
sbb
rcll
cmp
test
addr16
push
inc
add
adc
hlt
or
push
add
push
jg
clc
xchg
ffreep
clc
pop
mov
clc
pusha
add
arpl
add
clc
test
xor
loope
and
add
inc
add
pop
stos
and
mov
cld
stos
adc
add
es
pmulhw
out
inc
clc
bound
add
add
add
sbb
ss
clc
xor
movsl
clc
and
clc
sbb
pop
mov
add
add
icebp
add
mov
sarl
or
add
push
lock
aad
pushf
cmp
loope
jns
int
xabort
nop
ss
xchg
lcall
or
jecxz
xor
cmpsb
clc
push
add
jbe
add
in
cli
in
test
cmp
mov
rcrb
clc
xor
add
pop
fs
or
add
add
mov
stos
add
add
mov
aaa
adc
add
ja
clc
insb
daa
clc
inc
clc
add
add
cli
lcall
mov
mov
clc
jne
mov
clc
lock
call
pop
or
daa
clc
push
repnz
and
add
mov
aad
add
or
jecxz
mov
fldenv
add
test
hlt
mov
clc
xor
add
adc
add
xchg
arpl
add
add
jo
add
clc
pop
es
sub
add
xor
add
clc
sar
ljmp
aaa
pop
clc
hlt
outsl
push
clc
test
xchg
inc
clc
aad
clc
lahf
cmpsl
clc
mov
xadd
movsl
clc
and
lahf
xor
je
jg
and
add
sbb
add
arpl
add
add
add
imul
dec
fists
out
mov
clc
xchg
pusha
add
mov
mov
add
mov
clc
mov
clc
dec
movsl
clc
xchg
mov
clc
cmc
dec
cwtl
and
add
clc
gs
mov
daa
clc
xor
add
mov
add
add
add
mov
push
clc
push
adc
add
lcall
cmc
and
add
rclb
add
jne
cmp
adc
clc
in
jae
add
sub
add
dec
xchg
dec
inc
clc
cmp
fld
clc
xlat
xchg
out
mov
pop
clc
mov
aam
test
dec
xchg
push
jns
jb
add
clc
dec
xor
push
add
shrb
sub
jns
stos
pop
sub
lret
shlb
add
xabort
clc
stos
mov
add
ja
mov
bound
add
lea
outsb
in
popa
add
inc
clc
cld
mov
mov
pusha
add
mov
cld
ret
clc
outsl
adc
add
pop
add
add
ds
cmpsl
clc
and
add
clc
ss
popa
add
test
jns
pop
divl
add
adc
sub
adc
add
clc
nop
mov
adc
push
fwait
sbb
inc
add
je
popf
ret
clc
dec
xchg
mov
push
stc
inc
add
aas
add
add
mov
mov
int
clc
mov
lcall
mov
xabort
fldt
xchg
dec
adc
add
push
es
xchg
push
add
es
shrb
add
add
test
clc
fldenv
add
in
mov
js
ja
or
add
insb
mov
add
ljmp
and
clc
sub
adc
add
inc
clc
xor
add
in
pop
test
jecxz
loop
fs
adc
add
pop
jbe
in
clc
jbe
mov
xor
add
pop
ljmp
sbb
clc
xchg
xor
jg
clc
fs
das
cmp
rcr
sarl
add
scas
inc
clc
and
fs
in
mov
sub
test
add
add
mov
add
mov
inc
clc
mov
clc
inc
add
add
add
cmpsb
clc
rep
in
jecxz
add
xchg
xor
add
jp
daa
clc
shl
clc
adc
clc
mov
add
clc
dec
inc
add
fwait
and
mov
leave
fldl
clc
adc
add
repz
gs
jo
add
adc
add
and
add
clc
pop
adc
loope
push
push
faddl
add
aam
dec
adc
add
clc
cltd
inc
clc
pop
xchg
sar
inc
clc
fildll
pop
clc
negb
jb
add
add
xor
clc
lcall
xor
add
clc
or
mov
enter
jmp
clc
aad
adc
add
call
add
mov
or
and
add
clc
icebp
rcrb
add
pusha
add
xor
add
jecxz
aaa
or
cmp
clc
push
add
loopne
xor
add
ds
es
sti
and
mov
cmp
jmp
pusha
add
movsl
clc
scas
lea
insl
xor
add
add
add
add
lahf
aaa
cld
inc
clc
loope
inc
add
xbegin
add
clc
pushf
test
test
or
clc
adc
add
add
cmc
push
jnp
clc
push
pop
ret
clc
in
mov
sbb
and
add
add
nop
ficompl
aaa
fwait
cmp
add
adc
add
ss
int3
enter
add
xchg
adc
add
out
sub
add
xabort
mov
jno
add
add
add
add
add
in
dec
mov
pop
pop
add
xor
add
clc
cmp
stos
shlb
clc
mov
push
add
mov
add
into
push
add
out
mov
clc
lods
lret
xor
add
jb
add
xchg
iret
or
add
xlat
pop
inc
add
gs
push
pop
jge
or
push
stos
call
mov
clc
outsb
lret
mov
xabort
clc
ror
and
add
enter
ss
cmp
jmp
push
xor
add
add
clc
xlat
pushf
jp
dec
stc
testb
xor
add
clc
mov
enter
add
cmp
test
lods
cmpsb
clc
shll
add
sbb
sub
clc
clc
clc
xchg
adc
push
add
cmp
push
cmc
in
xchg
stc
testl
clc
mov
mov
add
mov
clc
jl
clc
fst
inc
clc
cmp
xlat
jl
clc
push
dec
xor
aam
cmp
in
push
clc
add
add
lret
add
clc
or
cmp
js
clc
das
es
xchg
int3
sub
in
scas
pop
int3
insb
xchg
sahf
and
add
add
mov
cmp
jle
clc
test
pcmpeqw
mov
dec
clc
sub
clc
cld
test
sbb
clc
or
sbb
jge
sbb
enter
fs
jae
add
cmp
cmp
cmp
adc
add
clc
adc
add
cmp
ret
pop
clc
mov
mov
clc
or
pop
pusha
add
mov
xchg
call
clc
fnstcw
clc
xor
add
jno
add
xchg
sbb
add
sbb
add
xchg
sbb
dec
add
aas
stc
pop
clc
adc
add
lods
data16
xor
xchg
push
add
mov
xor
add
mov
clc
mov
mov
int
jbe
push
clc
adc
add
cli
addr16
xchg
arpl
add
jge
add
sub
clc
in
inc
add
cmp
pop
dec
xbegin
clc
mov
sbb
add
clc
adc
add
sub
add
loop
dec
shlb
lret
test
add
xor
add
add
arpl
add
adc
add
lret
fwait
ljmp
fsts
cmp
scas
out
pop
xchg
or
clc
icebp
jno
add
aas
inc
clc
hlt
and
cmp
add
pop
inc
add
and
add
cmc
add
clc
xlat
sti
add
add
addr16
js
cmp
lock
clc
call
or
add
lods
push
clc
or
add
add
mov
push
into
into
fsub
clc
jne
xor
add
push
xbegin
icebp
insl
mov
clc
inc
add
rorb
adc
add
fcomps
loope
cltd
into
pop
add
add
leave
leave
jmp
stos
pop
shrb
jmp
scas
or
cmp
inc
add
test
std
test
inc
clc
mov
clc
and
add
sbb
add
jbe
sub
sbb
xor
add
pop
lcall
cmp
push
mov
xchg
ljmp
pop
mov
clc
mov
add
and
rclb
fmull
clc
insl
roll
adc
insl
adc
clc
cmc
xbegin
add
jae
add
mov
add
shll
clc
or
movsl
clc
in
lcall
dec
inc
clc
cmp
add
pop
push
add
imul
add
xbegin
adc
add
xchg
std
mov
das
xchg
pop
cmp
jle
cld
test
adc
add
clc
sbb
add
popa
add
sbb
clc
cmp
clc
dec
xchg
pushf
jae
add
cld
cld
scas
dec
repnz
jne
sahf
mov
dec
inc
add
daa
clc
add
hlt
cmpsl
clc
sbb
push
add
cmovs
sar
clc
cmp
xor
add
clc
outsl
div
xchg
sbb
test
mov
in
jmp
add
mov
frstor
add
icebp
out
sub
add
add
add
test
lret
add
mov
xbegin
out
in
mov
clc
bound
add
fcmovnbe
aaa
lock
add
clc
adc
add
jo
add
jne
clc
xchg
rolb
add
inc
clc
aad
and
psubusb
add
clc
and
push
mov
aam
clc
pushf
cwtl
xchg
fisttpl
xabort
bsf
sub
add
jne
or
sbb
clc
and
add
cmp
loope
cmp
data16
xor
add
scas
cmp
clc
paddd
ret
clc
in
cmpsb
clc
xor
add
cmp
add
out
pop
sar
inc
clc
pop
repnz
jge
sbb
clc
sub
add
dec
inc
clc
shl
fsubrs
push
and
add
out
cmp
add
add
add
clc
call
lcall
repz
jmp
add
mov
packssdw
xchg
sub
and
cmp
push
add
push
addr16
mov
insl
in
mov
xor
add
add
leave
dec
mov
clc
dec
push
add
xor
add
add
add
clc
mov
add
add
add
stos
jmp
add
xor
loope
gs
adc
add
in
fwait
std
mov
cmp
jb
add
clc
js
mov
es
jno
add
mov
add
daa
clc
ja
add
push
clc
push
xchg
xor
mov
in
mov
xlat
jns
int3
sub
jge
mov
add
xabort
cmp
gs
cwtl
add
add
add
mov
cmp
aam
xchg
loope
fstl
nop
pushl
pop
lods
cmpsb
clc
fsubl
xchg
cmpsb
clc
mov
clc
ret
clc
movsb
clc
rcr
jge
clc
insl
xchg
cmp
jnp
test
clc
lret
jecxz
xor
add
clc
or
data16
pop
negl
pop
out
aas
addr16
pop
fwait
mov
add
inc
clc
fnstenv
add
add
add
xchg
cmp
call
pop
stos
jbe
mov
clc
mov
in
or
add
cltd
lock
add
xchg
mov
add
add
add
lock
pop
fisttps
clc
xchg
das
stos
jne
dec
lret
and
add
cwtl
jmp
xor
add
add
mov
test
mov
sub
jbe
loopne
mov
or
clc
mov
add
pop
clc
mov
fdivs
add
pop
dec
pop
clc
adc
add
js
pop
xchg
sahf
sbb
adc
add
rorb
aaa
in
cli
lods
nop
xchg
and
add
xchg
fldcw
dec
sahf
add
add
stos
jns
ljmp
hlt
jnp
sarb
xchg
cmp
inc
add
xchg
insl
pop
out
ds
jmp
sar
xchg
push
add
scas
das
add
add
cld
xchg
out
inc
add
mov
add
add
add
clc
xor
xor
mov
add
test
inc
clc
pop
es
pop
adc
mov
add
clc
ja
clc
dec
push
jg
fsub
clc
test
push
lahf
sbb
add
mov
add
add
mov
clc
bound
add
mov
xchg
testb
add
out
scas
aam
aam
icebp
push
add
jno
add
add
mov
imul
jge
mov
add
fiadds
je
stc
cli
dec
sub
clc
icebp
jp
into
or
jbe
push
fwait
bound
add
lods
or
clc
sbb
add
push
push
sbb
fwait
out
add
add
add
jl
add
add
xor
add
clc
stc
lret
pusha
add
mov
testb
add
push
mov
out
lods
jbe
inc
add
adc
pusha
add
inc
add
in
jo
add
clc
fmuls
cmp
push
clc
mov
sub
cmc
and
add
int
clc
pand
hlt
inc
clc
cmp
ljmp
clc
es
addr16
and
sbb
add
cmp
add
sbb
cmp
ss
aad
add
add
clc
inc
add
dec
testb
insb
outsb
sti
out
roll
clc
popa
add
mov
pop
or
mov
jmp
sbb
arpl
add
add
aad
in
ds
add
inc
add
jnp
clc
xchg
or
dec
pop
in
xor
add
jge
clc
hlt
into
add
iret
lods
inc
add
cmp
clc
fs
sbb
jecxz
lahf
mov
clc
mov
cmp
add
and
add
add
add
clc
cmp
pop
mov
adc
add
mov
ret
in
dec
mov
or
lcall
sar
add
js
mov
add
sbb
dec
pop
clc
test
mov
clc
mov
add
jo
add
add
loop
inc
add
pop
movsl
clc
stos
inc
add
cmp
add
ret
xchg
daa
clc
xor
add
sub
sar
push
push
jne
sti
jp
clc
stc
inc
clc
outsb
cmp
clc
xchg
rorb
sub
mov
mov
add
sar
clc
cs
add
add
add
imul
testl
add
and
add
inc
clc
jmp
clc
and
add
inc
clc
cmpsb
clc
mov
sbb
add
scas
mov
aam
mov
add
xlat
add
add
cmp
lods
cmp
clc
lods
lea
add
or
mov
imul
inc
add
xor
adc
notb
xchg
pop
pop
loop
xor
mov
add
mov
add
add
jns
add
add
add
mov
je
jae
add
scas
sbb
dec
ds
clc
fcomip
sahf
ja
add
inc
add
lahf
add
add
dec
pop
dec
dec
hlt
lods
sub
movsb
clc
mov
add
and
add
enter
xor
add
add
into
cmp
add
int
bound
add
mov
add
and
add
out
mov
add
in
fiaddl
jle
clc
jge
popa
add
shrl
cmp
mov
nop
popa
add
js
clc
mov
add
je
add
pop
out
enter
clc
fsubr
enter
loop
xchg
sub
add
xor
add
dec
fdivp
clc
cwtl
repz
clc
mov
cmp
add
fs
xor
rcrl
shlb
inc
clc
test
clc
pop
or
sbb
mov
sub
loope
test
bound
add
pop
aaa
fidivs
inc
add
in
fsubrs
aas
rolb
add
sub
jo
add
adc
add
add
ja
pusha
add
push
add
sub
jmp
dec
lret
push
cmpsl
clc
leave
es
mov
clc
mov
pop
push
clc
jge
add
pop
sbb
pushf
loop
in
ds
cmp
clc
cmpsl
clc
xor
add
cmpsb
clc
push
clc
cmp
add
icebp
inc
add
arpl
add
add
jmp
clc
sbb
add
insb
fstpt
mov
jmp
mov
add
jge
add
add
add
push
mov
add
clc
mov
clc
or
clc
ss
mov
mov
ret
and
add
add
dec
xchg
sbb
push
mov
mov
xor
add
dec
sarb
jno
add
sbb
add
das
mov
add
clc
ds
popa
add
sbb
xchg
pusha
add
mov
add
int3
fidivrs
clc
inc
add
add
mov
movsb
clc
and
add
data16
out
scas
adc
add
int
sar
cmpsl
clc
je
clc
fstps
add
aad
push
es
insl
and
add
add
push
xor
add
add
mov
and
test
add
xchg
adc
add
clc
dec
scas
sbb
add
arpl
add
and
add
das
cmp
add
loopne
cmc
pop
clc
lea
pop
mov
cs
add
jecxz
jp
aam
cli
inc
add
vcvtps2pd
clc
clc
or
mov
clc
loope
cmp
imul
clc
mov
clc
inc
clc
mov
dec
stos
mov
add
add
add
pop
jae
add
clc
fs
adc
add
add
fidivrl
clc
loopne
stos
push
push
add
cmp
imul
add
add
lahf
aaa
mov
jp,pn
clc
aad
aad
mov
jmp
xor
add
fisttpll
and
add
mov
xor
add
push
jmp
jo
add
clc
test
ds
sar
jmp
clc
push
add
addr16
call
jb
add
arpl
add
and
add
add
cmp
clc
leave
aas
lret
add
add
push
add
inc
add
nop
pop
jle
fs
stc
ljmp
fs
enter
jmp
pusha
add
or
clc
jp
xchg
push
iret
cmp
add
add
mov
jge
add
sbb
xchg
mov
adc
add
lock
cli
insl
jmp
and
add
mov
movsb
clc
popa
add
push
sahf
jo
add
xchg
ja
clc
fcomps
add
add
jns
leave
aas
adc
clc
out
and
add
inc
clc
jg
add
mov
ss
lahf
inc
clc
mull
add
sbb
ret
add
dec
movsb
clc
mov
jge
jmp
mov
adc
add
add
cmpsl
clc
int3
mov
clc
insb
es
test
out
mov
in
or
lea
clc
aam
scas
ds
fidivrs
clc
jb
add
outsl
hlt
mov
pop
push
add
sbb
ja
loope
cmp
mov
std
addr16
mov
dec
std
ja
sbb
jg
sub
add
add
fcmovnu
imul
mov
fs
jg
int
clc
or
clc
xor
add
inc
add
popf
pop
clc
loope
cmp
add
jp
add
fdivs
add
pusha
add
sub
cmpsl
clc
aam
push
das
nop
xchg
mov
clc
pushf
adc
lcall
push
jle
push
clc
sub
clc
dec
and
add
add
imul
add
add
add
add
add
dec
push
add
test
add
xor
cmp
in
rsqrtps
add
mov
dec
jmp
nop
mov
cwtl
and
add
movsl
clc
fstpl
add
mov
in
mov
lea
mov
xor
add
clc
nop
out
dec
hlt
jg
jbe
ljmp
mov
clc
fistpl
adc
xor
add
dec
mov
add
or
mov
add
cmp
push
cmc
jle
sar
inc
add
mov
dec
sub
clc
clc
add
sar
repnz
push
add
fbld
mov
cld
enter
dec
popf
pop
xchg
clc
cmp
sbb
add
dec
adc
add
clc
aas
fstps
add
inc
add
clc
inc
clc
add
add
mov
sbb
fwait
cltd
sbb
add
mov
and
add
add
xor
jg
test
mov
xchg
cmp
sbb
clc
sahf
mov
loope
adc
add
clc
in
stos
imull
sub
jge,pt
xor
add
dec
loop
pop
insb
lcall
xbegin
cmp
push
clc
imull
clc
xchg
inc
add
imull
mov
add
clc
lret
push
add
idivb
je
mov
sbb
in
jl
cmp
dec
or
aas
ljmp
add
daa
clc
pop
and
pop
mov
cs
sar
mov
aam
clc
ljmp
jmp
push
add
mov
into
jno
add
push
clc
or
adc
add
clc
or
sar
sub
clc
push
add
iret
xabort
clc
mov
clc
push
cmc
pop
mov
xor
add
xor
add
aas
cmc
cli
xchg
mov
mov
dec
jg
clc
mov
pop
cld
stos
fstpt
mov
cmp
xchg
aas
mov
fdivr
xchg
aaa
and
add
jecxz
and
add
stc
jmp
add
push
mov
imul
clc
cmc
aad
daa
clc
enter
cmp
and
add
in
jle
vrcpps
add
add
sar
sub
add
imul
push
add
jne
cmp
inc
clc
lret
push
jp
pop
clc
mov
jp
add
cmp
inc
add
inc
add
leave
cld
lret
ret
cwtl
mov
data16
pop
clc
rclb
add
test
sbb
clc
xchg
filds
add
adc
add
iret
mov
clc
test
clc
ljmp
aad
imul
mov
add
sub
pushf
push
xchg
cmp
push
clc
mov
std
add
add
clc
clc
cmp
clc
xor
add
fistpl
ret
add
push
in
aaa
pop
clc
cmpsl
clc
fs
dec
push
mov
clc
mov
xchg
mov
or
sarl
decb
jae
add
xor
clc
or
call
add
add
push
inc
clc
mov
clc
fstpl
inc
clc
std
popa
add
mov
clc
mov
cmp
add
push
lods
adc
add
add
push
add
pop
jne
clc
mov
cmp
push
cld
cmc
pop
add
add
ss
add
mov
jg
test
lods
jl
lcall
lock
add
sbb
dec
add
add
jecxz
jg
clc
cmp
movsl
clc
add
add
pop
movsl
clc
lods
movsl
clc
cld
xbegin
xabort
cmp
cmp
and
add
cmovle
add
insb
into
dec
mov
mov
aaa
mov
add
arpl
add
clc
xbegin
sbb
arpl
add
add
push
add
push
add
push
add
test
iret
push
data16
mov
clc
sbb
add
ret
add
in
xchg
bound
add
sub
popa
add
std
adc
add
add
test
sub
stc
pop
test
int3
mov
clc
cmp
and
add
add
push
out
popa
add
jmp
clc
sbb
out
mov
add
clc
xor
add
push
add
mov
loop
cmp
clc
push
ret
clc
lods
jle
insb
in
sbb
movsl
clc
pop
lea
fwait
shrl
mov
inc
add
jge
cmp
clc
enter
sbb
inc
add
test
cmp
cmp
or
jg
std
xabort
pushf
cmp
leave
jg
jnp
clc
mov
push
es
sbb
clc
add
add
cmp
cmp
cld
xabort
stos
xchg
mov
push
clc
mov
push
sub
aad
add
cltd
cmc
sarb
shlb
clc
jge
clc
or
cmp
add
aas
aam
add
dec
xor
add
add
ja
inc
add
scas
das
inc
clc
jb
add
add
add
fnstcw
pushf
mov
inc
clc
int3
inc
clc
or
add
data16
rcl
xabort
clc
in
icebp
pop
jnp
add
aam
ljmp
leave
push
add
jl
add
jnp
clc
pushf
inc
clc
dec
fistl
shrl
adc
add
iret
leave
imul
add
lock
movsl
clc
negl
call
xbegin
mov
outsl
lods
in
lods
push
cmp
clc
xchg
cmp
add
clc
clc
jp
in
mov
mov
imul
push
lret
inc
clc
insb
mov
clc
inc
clc
fbld
sar
clc
push
loopne
outsl
pop
clc
fbld
clc
fiaddl
add
sub
fisttpll
mov
inc
add
push
flds
lea
add
add
xor
add
xchg
add
aad
jp
pop
cltd
fnsave
je
clc
sar
clc
out
push
aam
sub
jle
data16
cs
lea
sahf
adc
add
xor
add
jecxz
pop
jo
add
add
nop
dec
imul
gs
xchg
lock
out
loop
pusha
add
ret
add
mull
add
adc
add
push
movsb
clc
cmp
clc
sub
imul
gs
inc
clc
fs
pop
lea
mov
and
fildll
sbb
jo
add
leave
int3
xchg
test
insb
fucom
clc
stc
or
clc
lahf
jns
add
pop
sub
loopne
enter
clc
xchg
mov
push
add
sar
clc
xchg
fisttps
insb
fmull
jae
add
add
dec
hlt
mov
add
push
add
add
add
pop
sub
cmpsb
clc
imul
mov
imul
pop
repnz
add
jmp
aas
inc
clc
sbb
testb
clc
rclb
add
fscale
push
loopne
mov
push
inc
add
cltd
cmp
clc
cmc
or
clc
call
mov
lcall
clc
pop
mov
clc
adc
add
add
add
mov
clc
pop
inc
clc
out
pusha
add
mov
clc
repz
or
jmp
es
dec
cmc
mov
add
add
add
add
add
fldl
add
stos
mov
add
sub
aam
clc
mov
clc
mov
clc
lods
jae
add
add
cmp
add
add
add
add
add
imul
add
outsb
mulb
je
and
add
repnz
add
clc
js
clc
lods
pcmpgtd
aaa
imul
popa
add
lods
inc
clc
ljmp
dec
das
sti
mov
xabort
clc
pop
mov
mov
jl
push
add
faddl
xor
add
add
clc
lret
ljmp
sub
dec
xchg
and
add
add
cld
jnp
sar
clc
inc
add
and
add
inc
add
popf
lods
pusha
add
cmp
clc
out
jmp
je
test
clc
cmpsl
clc
popf
sbb
clc
jb
add
and
lods
cs
add
push
enter
sub
pop
cld
xor
add
clc
xchg
xchg
sub
cmp
add
jp
ds
add
jge
pop
aad
rcrb
clc
or
fcmovb
clc
inc
add
daa
clc
jae
add
add
and
add
add
outsb
addr16
outsl
int
inc
clc
mov
sbb
jne
aaa
arpl
add
loope
daa
clc
outsb
pop
scas
gs
ret
clc
adc
jmp
add
clc
lock
xbegin
clc
cmc
push
jnp
or
xor
clc
outsb
repnz
add
shl
clc
fxch
mov
mov
add
push
clc
in
std
fnstenv
das
add
sub
inc
add
test
adc
add
mov
scas
fimuls
add
mov
test
mov
jl
xchg
xchg
sahf
clc
jle
test
add
ds
fdivs
clc
xor
add
lret
mov
add
mov
clc
sbb
jg
clc
loopne
jnp
push
int
popa
add
xor
in
pop
lock
add
mov
mov
xchg
push
xchg
xchg
dec
ss
mov
add
stos
xchg
pop
cmpsb
clc
decb
add
jle
add
outsb
dec
push
out
dec
dec
in
pop
mov
add
aaa
negl
push
dec
call
aas
dec
cmp
cwtl
xchg
sub
loope
cmp
push
clc
or
add
add
clc
lock
pop
xchg
jle
mov
add
push
clc
xchg
adc
add
mov
negl
fwait
add
pop
sub
xchg
sti
hlt
xbegin
fstpt
add
or
clc
push
add
lcall
out
clc
jle
inc
clc
lock
add
sar
insl
push
clc
fnsave
add
mov
push
cmp
add
push
sub
cmp
sbb
xor
add
inc
add
inc
clc
pop
popf
cmp
jle
add
cmp
in
inc
clc
sub
int
add
sub
add
xabort
sub
repnz
adc
add
mov
clc
nop
push
clc
je
add
xchg
sub
clc
sub
xabort
inc
clc
sar
cmp
pop
push
add
mov
add
test
loop
xchg
stos
aas
fs
adc
add
fists
ret
aaa
repz
add
add
add
xor
add
adc
add
mov
adc
add
ja
cltd
push
add
add
add
add
add
popf
mov
sub
clc
adc
add
add
lods
in
sbb
clc
popa
add
mov
add
ljmp
leave
pop
clc
sti
sti
out
cmp
pop
push
insl
jo
add
cmp
add
repnz
or
fistl
sbb
clc
pop
push
add
bound
add
pop
xchg
push
sbb
js
dec
adc
add
jns
clc
xor
add
add
add
push
add
into
push
gs
jae
add
lea
add
sbb
add
jne
add
stc
into
aas
xor
add
dec
push
jmp
popf
mov
add
xbegin
mov
add
add
leave
xor
clc
sbb
clc
clc
adc
add
push
or
test
test
addr16
xchg
mov
inc
clc
cmp
clc
std
jge
cmc
in
sub
fidivrl
test
cmp
icebp
arpl
add
add
leave
sbb
fidivs
add
push
ss
scas
in
out
bound
add
adc
add
paddq
repnz
clc
mov
add
mov
xlat
push
mov
add
or
xchg
inc
add
xlat
push
clc
mov
test
bound
add
add
xor
add
clc
sbb
clc
push
add
jno
add
loopne
psrlq
inc
add
pushf
je
clc
jg
xchg
aaa
in
push
data16
sar
clc
lcall
mov
add
add
clc
pusha
add
adc
add
jmp
inc
add
stos
push
std
or
lahf
rcl
aad
clc
stc
inc
add
cli
add
add
clc
jno
add
clc
sub
repz
call
imul
add
stc
jae
add
cmp
push
loope
push
add
negb
or
add
jmp
xchg
push
popa
add
xlat
mov
sub
imul
bound
add
mov
add
or
clc
sbb
add
cmp
fst
jb
add
jbe
fidivl
cmpsb
clc
js
clc
fdivl
add
fisttpll
dec
shrb
add
clc
int3
call
add
sub
add
outsl
or
in
addr16
ret
clc
cmp
add
clc
adc
fldcw
stos
mov
push
sar
adc
add
add
adc
add
add
mov
xor
add
pop
int3
pop
enter
clc
push
add
cmp
add
clc
shrl
repnz
mov
clc
push
jle
cmp
mov
fabs
clc
mov
add
mov
add
mov
ja
clc
outsb
pop
xor
mov
and
add
clc
aad
clc
data16
jecxz
inc
add
out
aad
lock
int3
in
xchg
sarb
icebp
cmpsl
clc
ret
add
rolb
add
jp
pop
xlat
jmp
mov
lea
ffree
clc
movsb
clc
bound
add
test
sbb
aad
ja
cwtl
aaa
pop
clc
lock
cmp
add
rcrl
hlt
add
lret
mov
clc
mull
add
shl
clc
pop
mov
clc
and
fnstcw
mov
add
pop
cmpsb
clc
loope
call
push
add
jg
mov
push
clc
stos
adc
add
xchg
loop
adc
add
add
aaa
xor
add
add
jne
mov
add
cmp
add
mov
loop
pop
clc
test
clc
xbegin
sub
sar
and
add
add
add
adc
add
inc
add
inc
add
pusha
add
adc
mov
fnstcw
xchg
cs
clc
add
outsl
mov
clc
jle
cmp
add
add
insb
and
add
sub
aam
clc
cmp
clc
add
add
sub
xabort
fisttpll
clc
mov
ret
clc
pop
jl
dec
inc
add
push
test
pop
clc
into
jg
icebp
push
add
frstor
clc
jnp
ret
clc
sti
adc
add
mov
jae
add
cmp
dec
aad
clc
int3
pop
jl
mov
sahf
mov
aam
clc
xabort
inc
clc
xchg
xor
add
aas
jnp
loope
gs
enter
inc
clc
lret
aad
add
aam
clc
pop
push
add
stos
inc
add
cli
mov
clc
in
push
ds
mov
cmp
clc
daa
clc
hlt
pop
cmp
rolb
in
inc
add
pop
clc
cmp
jns
add
pop
mov
cmp
push
jo
add
clc
pop
jmp
repnz
jl
push
mov
adc
mov
add
rcr
xor
add
pop
in
aas
lret
push
jmp
mov
stos
xor
add
pop
sub
add
mov
add
ror
cmc
xchg
je
es
lahf
jmp
cmpsl
clc
testb
add
test
out
fstl
enter
add
add
aas
repz
movsb
clc
xor
add
jae
add
pushf
test
add
or
scas
test
mov
call
mov
clc
xchg
pushf
pop
clc
out
cmp
pop
clc
mov
clc
push
es
cwtl
test
add
cmp
fldenv
or
add
add
add
add
movsl
clc
dec
mov
dec
xchg
mov
push
add
add
sbb
dec
es
scas
lods
fdivrl
adc
add
in
sti
pop
mov
jge
xor
add
add
mov
push
xchg
data16
lahf
xor
loope
cld
call
add
push
add
push
add
jmp
clc
dec
or
add
int3
mov
add
aas
sbb
pop
sbb
clc
jno
add
dec
stc
cld
push
push
sub
adc
add
mov
in
imul
arpl
add
clc
test
je
sub
clc
jno
add
mov
xlat
test
xchg
cs
clc
insl
in
clc
cmp
inc
clc
xchg
xchg
sub
jbe
clc
push
ffree
clc
push
stc
xor
and
add
clc
mov
pop
stos
fistl
clc
pop
sub
pop
push
jbe
add
mov
int3
mov
gs
jne
test
jns
insl
jecxz
lods
in
cmp
loope
dec
pusha
add
sub
inc
clc
nop
bound
add
in
aaa
sub
clc
dec
sar
add
sub
add
push
add
lock
cmp
ds
adc
add
mov
add
add
xchg
mov
clc
clc
fstpt
call
add
add
push
inc
clc
test
cs
arpl
add
pop
in
mov
jne
cmc
pop
clc
mov
cmc
scas
pop
mov
clc
and
add
cwtl
and
add
dec
dec
add
add
add
ret
clc
push
cmpsb
clc
fiadds
clc
xchg
cmp
ljmp
push
out
mov
sbb
add
push
clc
decl
jne
xabort
clc
sbb
clc
sub
incl
add
xor
add
add
jle
adc
add
int
dec
lret
mov
add
add
add
rclb
clc
clc
pop
ret
clc
aaa
mov
pop
int3
push
shll
mov
sbb
add
lcall
clc
je
clc
imul
add
clc
popf
test
stos
icebp
outsl
adc
add
clc
inc
clc
or
clc
aam
clc
xor
incb
cwtl
adc
add
push
adc
pop
addr16
fstpl
and
or
cmp
sub
add
clc
jp
cmpsb
clc
repz
mov
add
sar
jecxz
lahf
xor
data16
jno
add
add
add
gs
call
clc
jnp
clc
push
adc
add
scas
add
add
add
mov
scas
mov
adc
add
and
add
arpl
add
clc
gs
or
clc
iret
scas
fiaddl
cmp
add
hlt
ljmp
clc
cmpsb
clc
cmpsl
clc
iret
cli
xlat
stos
lods
mov
clc
pop
xchg
movsb
clc
hlt
mov
clc
cmpsb
clc
mov
clc
pop
xchg
fistpll
push
add
xchg
or
xor
add
add
sbb
clc
out
jl
sub
sti
xchg
shl
mov
decb
add
imul
and
pop
int3
pop
gs
push
div
xchg
xchg
rorb
add
enter
sub
xchg
mov
mov
add
sub
mov
shlb
clc
lea
popa
add
scas
adc
add
add
pop
es
inc
clc
cltd
mov
add
ljmp
dec
out
repnz
in
clc
fldcw
push
add
mov
add
push
cltd
lcall
jns
or
clc
cmc
daa
clc
stos
dec
mov
sbb
clc
filds
sbb
sub
addr16
pause
insb
dec
aad
clc
sub
add
outsb
mov
dec
cmp
clc
cmp
in
pop
dec
aaa
mov
clc
push
clc
call
fstpt
clc
or
cmpsl
clc
cmp
dec
mov
sar
repnz
add
add
or
in
jmp
clc
inc
add
sbb
and
int3
jmp
adc
add
pop
pop
mov
add
jge
clc
sub
clc
test
aas
pop
xor
ljmp
clc
push
data16
out
sbb
pop
clc
mov
add
sub
jb
add
jbe
cld
jne
mov
add
or
inc
clc
or
clc
xbegin
add
add
mov
mov
dec
jmp
cld
inc
add
mov
paddd
clc
mov
xchg
mov
imul
lret
cmc
faddp
clc
outsl
lret
xbegin
clc
and
add
add
movsl
clc
cld
mov
clc
jno
add
xor
add
clc
sbb
insb
aam
divb
clc
lahf
test
imul
out
mov
clc
sbb
pop
add
add
mov
adc
push
add
pop
ljmp
add
mov
add
add
aas
idivb
pop
clc
outsl
sub
sar
clc
in
push
stos
inc
clc
and
add
add
lret
flds
out
fucom
clc
jae
add
clc
inc
clc
out
ljmp
leave
xchg
cmp
push
add
lret
clc
jmp
add
out
in
pop
je
stc
outsl
test
push
or
arpl
add
xchg
mov
sub
out
sub
clc
dec
test
ret
clc
idivl
data16
ljmp
cmp
cltd
lods
test
push
mov
or
out
aas
cwtl
jle
clc
cmp
add
add
fcmovnbe
cwtl
stos
mov
shrl
shrl
inc
clc
loopne
push
scas
jmp
sbb
add
clc
adc
add
clc
cmp
test
cli
sar
int
sub
stos
sbb
add
lret
xchg
sbb
clc
jne
gs
jl
clc
xchg
filds
shl
sub
add
scas
inc
add
ret
clc
pushl
add
add
add
add
push
clc
or
push
add
clc
jne
add
add
clc
cli
bound
add
mov
add
iret
xchg
xchg
aaa
cmp
clc
fisttpll
add
add
lods
cmp
sub
mov
pop
push
add
mov
push
add
and
add
add
movsb
clc
sbb
mov
clc
adc
pop
leave
xor
icebp
push
mov
lahf
sbb
data16
cld
and
add
push
mov
add
outsb
fucomp
jbe
negb
fwait
imul
clc
xor
add
mov
mov
xchg
pop
mov
icebp
fimuls
mov
jmp
xbegin
xor
cmpsb
clc
gs
lret
leave
mov
push
dec
jae
add
mov
add
bnd
pusha
add
out
sub
clc
in
add
add
adc
outsl
addr16
gs
push
mov
out
std
mov
pop
mov
add
cmp
shlb
push
clc
cmp
clc
flds
add
ljmp
ja
add
lret
or
xchg
aaa
push
pop
jl
push
add
repnz
mov
clc
xchg
fxam
clc
lock
xchg
mov
add
clc
je
loop
sti
mul
clc
sarl
inc
clc
cwtl
and
add
add
mov
loop
mov
push
add
add
push
mulb
in
lods
push
lock
add
add
out
fucomip
adc
add
jg
add
push
add
icebp
sub
add
xor
add
add
jo
add
pop
xor
add
clc
xchg
ds
aas
scas
xchg
fucom
clc
sar
add
clc
xchg
imul
or
and
add
leave
fidivs
and
xchg
mov
xchg
loopne
jbe
clc
mov
adc
ror
dec
je
push
clc
mov
push
clc
leave
sbb
add
and
add
nop
clc
mov
add
and
add
mov
cltd
icebp
push
mov
ficomps
jns
push
add
sbb
or
add
cmp
scas
into
movsb
clc
outsb
jecxz
push
movsl
clc
popf
adc
add
or
cmp
add
dec
mov
clc
add
cwtl
inc
clc
dec
test
call
outsl
icebp
fmull
clc
mov
clc
jns
add
xbegin
or
and
add
shlb
ja
clc
pushf
sbb
clc
out
push
testb
pop
mov
adc
add
add
add
in
xchg
xor
je
iret
pop
je
clc
add
lods
or
insb
fistpll
stc
mov
clc
inc
add
loopne
mov
decb
add
mov
push
sub
push
mov
clc
pop
sti
jg
and
add
add
out
rol
clc
scas
push
add
pop
mov
add
movsl
clc
daa
clc
mov
clc
bound
add
add
aas
divl
or
add
xor
clc
mov
pop
mov
lods
lods
dec
add
divb
add
clc
shrb
and
clc
fldl
add
test
xor
add
and
add
add
scas
sub
jno
add
fwait
and
add
clc
xchg
sti
push
add
shll
clc
xbegin
add
jge
inc
clc
pop
cmp
add
fwait
sti
mov
cmp
add
test
jl
pop
and
nop
mov
fwait
scas
int3
ljmp
mov
add
xbegin
adc
add
cmp
add
popf
add
data16
stos
test
or
and
add
fisttps
push
imul
add
repz
clc
push
add
push
add
cmp
clc
xchg
es
imul
in
pop
call
add
ljmp
mov
fstl
jae
add
aas
push
mov
sbb
add
push
mov
clc
cmpsb
clc
lret
pop
popa
add
pop
xchg
jl
cmpsl
clc
xor
ret
clc
mov
inc
add
mov
add
and
fdiv
jnp
and
add
add
and
add
scas
cltd
inc
add
mov
stos
aad
clc
jnp
scas
mov
add
add
add
and
add
mov
add
mov
fimuls
pushf
mov
fistl
push
lods
popf
test
clc
outsl
add
add
mov
in
mov
jecxz
ljmp
in
inc
clc
sbb
cmp
mov
jge
add
xbegin
xchg
cld
add
add
pop
clc
enter
dec
repnz
fsubs
add
sar
in
inc
clc
ja
add
fistpll
clc
and
add
add
nop
stos
add
add
clc
jle
clc
in
mov
call
add
fs
in
lods
loop
mov
cli
rcrb
sbb
clc
push
add
jmp
fiaddl
mov
sbb
inc
add
mov
mov
add
xchg
aad
cmc
popf
mov
clc
lea
add
movsl
clc
add
add
clc
jno,pt
add
clc
cli
call
add
xchg
stos
xchg
xchg
ret
lock
xchg
inc
add
mov
sub
clc
inc
add
ffreep
clc
aad
mov
inc
clc
xor
add
clc
adc
add
clc
leave
xchg
cli
lret
mov
mov
aas
insl
jp
or
clc
xor
add
xchg
xchg
cli
movsl
clc
mov
jecxz
mov
mov
or
add
or
clc
loope
adc
add
add
mov
xor
add
sar
clc
jp
and
pop
loope
filds
add
cmp
std
mov
pop
mov
add
std
int
dec
xabort
jo
add
clc
clc
jmp
add
pop
jmp
add
clc
adc
push
dec
iret
das
dec
in
push
xchg
std
pop
stc
fisubrl
or
add
decb
xabort
xchg
push
add
mov
jp
clc
dec
or
dec
add
add
jbe
add
adc
add
sbb
clc
mov
pop
or
xor
add
add
jmp
clc
sub
icebp
nop
xabort
or
clc
insb
iret
mov
aaa
mov
sub
add
int
add
inc
add
cmp
clc
sbb
add
add
add
jns
xchg
or
sub
sti
or
int
push
scas
lcall
clc
test
cmp
test
clc
xor
add
jge
clc
and
add
xor
add
cmp
or
push
add
faddl
add
push
scas
xor
add
in
mov
add
jo
add
and
add
add
xchg
ret
clc
inc
clc
cwtl
fimuls
cmp
xchg
or
clc
gs
repz
inc
add
test
sahf
aam
lcall
clc
or
mov
and
add
rolb
fwait
cld
mov
mov
mov
sub
xchg
push
add
fdivl
test
mov
sub
clc
inc
clc
std
sbb
test
dec
mov
push
add
and
shrl
imul
xor
add
and
add
add
fisubl
cmp
push
dec
push
add
mov
add
imul
clc
cmp
add
jle
push
fldcw
push
int3
pop
lret
and
xor
add
clc
shrl
adc
clc
adc
add
clc
cmp
imul
push
jl
clc
pop
outsl
ret
aas
or
or
clc
adc
nop
dec
fbld
add
divl
add
mov
jnp
cmp
imulb
xchg
jmp
add
pusha
add
jmp
popf
data16
outsl
mov
leave
int3
mov
add
dec
shlb
shll
clc
sti
es
pop
clc
call
dec
pop
stc
cltd
int
add
and
dec
push
add
xchg
in
fbld
add
push
popf
cmp
mov
jo
add
loop
std
aad
add
or
xbegin
in
idivb
jo
add
int3
add
push
clc
adc
add
clc
jg
or
add
scas
adc
add
stc
lahf
test
daa
clc
sub
add
xor
add
sbb
clc
arpl
add
jecxz
mov
add
add
mov
add
clc
je
pop
cli
repnz
js
or
pop
mov
pop
sar
clc
mov
aam
clc
rcrb
pop
mov
clc
jno
add
add
fdivrs
dec
ss
pop
jne
shr
addr16
insb
cmp
and
add
sub
filds
clc
mov
outsb
xchg
add
add
mov
clc
popf
loopne
xor
add
sub
add
cmp
mov
stc
scas
call
xor
add
push
xlat
pushf
lock
cmp
into
bnd
dec
pusha
add
xlat
mov
clc
push
mov
adc
add
clc
add
add
clc
adc
add
movsl
clc
push
add
or
sahf
aam
add
sahf
outsl
dec
sbb
pop
lods
sar
dec
bound
add
push
pop
pop
pop
sbb
xchg
xor
add
mov
sarl
push
add
loop
addr16
lcall
add
sar
add
push
inc
clc
cmp
add
sti
add
add
jns
add
lret
mov
add
cmpsl
clc
cld
in
std
sub
mov
clc
and
std
js
sbb
mov
mov
add
dec
cmp
ret
clc
pop
cmpsl
clc
sub
and
imul
add
add
cwtl
out
sub
jl
mov
mov
push
add
out
mov
lahf
adc
add
xchg
stc
ss
add
cmp
clc
or
jne
mov
add
add
add
cmp
add
lret
and
insb
popa
add
mov
add
adc
add
out
ss
jne
ret
clc
jae
add
pop
cmpsb
clc
xchg
cld
mov
out
in
push
mov
add
popa
add
jnp
clc
test
add
push
add
push
clc
test
add
mov
add
and
add
clc
pop
pop
mov
out
sbb
add
mov
add
mov
or
add
ds
xlat
cs
jle
mov
clc
mov
pusha
add
movsl
clc
adc
add
sbb
push
lahf
ss
inc
clc
jl
and
add
sub
sbb
add
sbb
add
add
jmp
sub
mov
clc
push
mov
dec
mov
add
lock
std
cmp
add
add
inc
add
and
add
std
cmp
je
clc
cmp
dec
sub
clc
inc
clc
addr16
mov
pop
mov
clc
inc
add
or
lahf
stos
repnz
add
clc
pop
insl
sbb
clc
popf
xor
lahf
out
out
lods
dec
xor
add
clc
sahf
ds
clc
sbb
add
sub
gs
cmp
dec
cmpsb
clc
lods
or
clc
jne
add
bound
add
clc
jecxz
cmpsl
clc
inc
clc
sub
add
add
cmp
leave
ja
add
xchg
scas
pop
clc
arpl
add
add
xchg
push
add
xbegin
rolb
add
test
lea
add
enter
push
add
cmp
and
add
add
hlt
inc
clc
mov
fisttps
adc
add
jmp
add
or
clc
sub
xor
add
lcall
add
mov
add
add
add
clc
cmp
call
add
imul
jmp
jmp
dec
xbegin
pushf
mov
shl
in
cmp
sub
or
clc
call
add
xchg
add
test
repz
imul
add
dec
or
clc
popf
arpl
add
add
clc
je
leave
ds
push
add
cmp
out
mov
clc
mov
push
and
add
add
ja
outsb
sbb
jb
add
mov
push
add
mov
clc
add
add
clc
stos
sbb
dec
inc
clc
stc
lcall
add
and
fdivrl
push
add
fcoms
sbb
add
push
jnp
mov
mov
idivb
clc
fidivrs
repnz
daa
clc
and
dec
bound
add
adc
loopne
je
clc
pop
stos
cmpsl
clc
xchg
cmp
aam
push
add
mov
add
imul
lahf
add
add
ret
clc
adc
add
pop
pop
lret
push
add
pop
in
sti
ret
add
cltd
fsubl
outsb
push
ret
clc
sub
add
imul
ds
addr16
arpl
add
sahf
ret
clc
in
sbb
test
add
outsl
add
add
mov
add
xor
add
clc
insl
xor
add
jmp
je
clc
add
add
clc
mov
insb
sub
mov
clc
out
out
or
add
add
xor
pop
shl
cmp
clc
jns
add
add
add
or
insb
vmovups
add
jno
add
add
clc
adc
clc
mov
imul
das
fidivrl
scas
xabort
gs
call
pop
repnz
add
jne
cltd
daa
clc
sbb
xchg
mov
add
cmp
sub
decb
movsb
clc
dec
push
xchg
xchg
or
fldcw
xchg
sti
jge
test
dec
and
add
clc
pushf
cmp
mov
aad
add
sahf
lods
es
scas
lcall
mov
das
sub
popa
add
je
in
and
add
clc
push
ljmp
repz
xchg
clc
pushf
cld
adc
add
cli
inc
clc
das
faddl
add
add
jae
add
lods
inc
clc
adc
add
clc
sahf
lret
jbe
clc
sub
mov
and
add
xor
add
clc
std
cmp
or
pusha
add
add
add
mov
jmp
jns
cmp
clc
call
push
dec
jae
add
and
push
add
add
or
arpl
add
mov
fmuls
add
add
add
jg
clc
push
enter
or
clc
icebp
push
in
mov
push
add
dec
scas
add
add
clc
adc
add
clc
mov
clc
jecxz
int3
scas
and
mov
adc
add
add
in
jno
add
clc
jne
pushf
std
mov
xchg
push
clc
fnstenv
loope
jg
setle
add
loope
add
cmovb
add
mov
add
add
clc
insl
imul
inc
clc
push
jb
add
inc
clc
push
jnp
pop
clc
or
mov
push
mov
and
add
jne
mov
ficompl
jne
add
add
clc
mov
add
adc
xchg
nop
xlat
jo
add
in
push
mov
js
clc
mov
add
fisttps
add
clc
jge
clc
dec
frstor
add
or
lock
jb
add
test
es
mov
cmp
xchg
pop
push
xabort
jae
add
adc
add
sub
loopne
cmp
xlat
pop
ljmp
popf
push
mov
sbb
mov
aam
cltd
movsb
clc
dec
imul
mov
clc
mov
add
loopne
faddp
clc
push
jb
add
add
aas
adc
add
fcmove
dec
movsl
clc
icebp
into
cmp
sub
mov
or
shrb
add
and
add
movsb
clc
cmpsb
clc
inc
add
and
add
add
and
clc
das
dec
add
add
movsb
clc
fisubl
add
pop
sahf
hlt
out
in
cmp
add
clc
loope
pop
push
in
sub
mov
xor
mov
clc
jge
mov
popf
adc
add
js
lock
or
add
clc
out
sar
clc
adc
add
std
clc
xchg
adc
es
daa
clc
bound
add
add
add
and
add
mov
clc
push
in
scas
xor
ds
pop
pop
or
das
addr16
pop
pop
sbb
add
mov
das
and
add
add
arpl
add
clc
mov
xor
je
add
sub
clc
adc
add
and
add
add
add
pop
add
add
xor
add
clc
jg
cmp
mov
jp
inc
add
pop
shlb
add
loope
hlt
sub
das
adc
add
jge
mov
es
clc
and
add
in
cmp
add
pop
sahf
push
add
jmp
inc
add
in
adc
clc
cmp
je
loop
mov
outsl
mov
in
gs
sarl
mov
bound
add
cmc
pop
jno
add
icebp
ss
clc
mov
clc
ss
clc
jb,pn
add
pop
cli
je
clc
in
cmc
cmpsl
clc
push
clc
jecxz
dec
push
sbb
clc
decb
add
jle
cmp
mov
mov
pop
iret
sub
add
add
or
dec
cli
dec
sbb
dec
addr16
mov
add
hlt
fmul
xor
add
jle
push
clc
hlt
cmp
or
scas
jbe
mov
clc
jecxz
or
add
add
jo
add
rcrb
data16
mov
add
clc
and
fs
clc
xor
add
lods
xor
add
jg
push
mov
scas
xbegin
clc
notl
add
mov
loope
xor
add
fimuls
adc
add
inc
clc
xor
icebp
mov
shrd
add
add
test
add
popa
add
mov
cmp
add
push
add
cmp
sub
jno
add
mov
scas
mov
xchg
jbe
inc
clc
lea
push
add
popa
add
or
add
adc
add
lahf
aam
movsl
clc
mov
add
icebp
ds
dec
adc
add
xchg
jbe
xchg
or
bound
add
loopne
ret
push
add
stos
xchg
push
add
xchg
sbb
add
dec
loop
imul
push
leave
cli
hlt
dec
fs
pop
cmc
in
inc
clc
cmp
clc
adc
add
in
jo
add
add
add
xchg
mov
sar
push
cmp
mov
mov
clc
hlt
inc
add
add
add
sarl
fisubrl
data16
test
xchg
jecxz
pop
jmp
xchg
aaa
cmpsl
clc
cmpsl
clc
insb
adc
add
negb
jp
lock
add
and
cld
xabort
clc
inc
clc
mov
jnp
es
js
push
sub
add
jge
clc
mov
pop
sub
clc
test
jl
clc
xor
add
setle
add
inc
add
pop
dec
and
add
dec
je
add
xor
cmp
sahf
stc
iret
scas
or
adc
add
pushf
mov
add
push
add
push
xbegin
stc
or
add
inc
add
pop
inc
add
movsb
clc
push
add
sbb
rcrl
add
mov
lock
add
clc
dec
push
add
std
jecxz
icebp
cmpsl
clc
filds
xor
add
clc
jmp
pop
test
clc
mov
add
fcompl
add
jb
add
mov
clc
inc
add
cs
mov
fiadds
sbb
jnp
pop
aaa
xchg
gs
adc
or
insl
mov
mov
and
add
clc
aaa
mov
arpl
add
sar
clc
dec
popf
and
add
cwtl
or
out
and
add
enter
and
dec
in
xor
add
addr16
xor
add
int3
push
add
arpl
add
clc
ret
clc
pop
cwtl
test
xchg
mov
clc
push
push
mov
jo
add
inc
add
inc
add
push
add
adc
add
pop
clc
cli
pop
fsubl
add
clc
test
add
mov
add
lea
cld
test
vcvtps2pd
imul
add
add
add
clc
clc
je
mov
lods
test
sbb
jae
add
out
idiv
aaa
jb
add
sahf
xlat
js
or
push
cmp
mov
xchg
pop
clc
sar
push
add
xbegin
cmp
sub
insl
mov
lcall
jnp
js
add
loop
cmp
clc
cmp
inc
add
data16
ljmp
inc
add
pop
data16
cld
lret
pusha
add
sub
add
pop
jno
add
int3
test
iret
cmpsb
clc
and
add
fwait
dec
or
test
clc
add
lret
outsl
or
clc
pop
clc
or
sar
clc
jb
add
add
roll
add
lock
sahf
dec
hlt
out
mov
sahf
push
cmp
xor
add
aaa
dec
test
icebp
pop
cmp
fldpi
sbb
mov
add
and
add
mov
mov
xchg
and
add
fnsave
add
clc
jne
sub
jmp
shl
clc
xlat
ss
in
mov
mov
and
add
daa
clc
test
add
mov
add
or
cmp
mov
in
lock
cmpsl
clc
mul
clc
sub
clc
or
fmull
lret
push
cmp
lahf
pop
push
clc
mov
push
add
push
sbb
inc
clc
stc
lods
std
add
add
sub
nop
cltd
pushl
add
jecxz
lea
imul
xor
add
clc
push
add
lcall
clc
mov
insb
into
movsb
clc
sbb
and
add
clc
stos
imul
or
clc
out
add
add
clc
repz
clc
stos
mov
push
add
push
add
lret
push
add
sahf
mov
add
push
clc
or
popa
add
xor
add
clc
xchg
loop
sub
add
dec
xor
add
add
jmp
lods
fiadds
clc
stos
fcmovnbe
xlat
stos
pop
mov
add
jmp
clc
mulb
clc
add
add
out
filds
cmp
repz
dec
push
add
sar
clc
xor
add
sti
idiv
and
add
clc
test
insl
adc
pop
sub
incl
add
add
cli
loope
call
ret
clc
clc
jp
add
add
sub
lret
xor
add
cmp
add
in
ja
icebp
mov
dec
fisubrl
push
into
ret
clc
jmp
and
add
gs
dec
mov
or
in
inc
clc
test
cmp
add
movsl
clc
mov
clc
out
xor
add
mov
popa
add
daa
clc
fcmove
add
add
jge
xchg
iret
mov
in
pusha
add
jmp
bound
add
mov
cmpsb
clc
inc
add
fldcw
or
in
jb
add
mov
add
cmp
es
push
pop
clc
cmp
clc
lods
cmpsl
clc
adc
add
jmp
ljmp
add
imul
scas
mov
add
sbb
and
add
int
pop
inc
add
xchg
xor
and
add
cmp
clc
cmp
add
mov
xabort
sbb
sti
ficoml
repz
jecxz
imul
clc
movsb
clc
jnp
mov
cmp
dec
push
test
cmpsl
clc
fxam
clc
add
stos
inc
clc
mov
into
pop
clc
aam
cmp
push
mov
shll
adc
add
js
shlb
add
clc
test
push
xchg
mov
add
insb
lcall
add
icebp
cmp
push
pop
clc
ret
test
stos
mov
sti
push
cmp
rclb
das
lods
xchg
sbb
cmp
or
and
add
lods
js
adc
push
clc
vldmxcsr
shr
enter
jl
clc
into
incb
clc
push
add
inc
add
mov
jne
mov
xor
add
add
add
mov
bound
add
mov
inc
add
push
out
adc
xchg
test
add
add
movsb
clc
pop
inc
clc
jp
sub
inc
clc
movsb
clc
sbb
fs
lret
sub
mov
inc
clc
lods
rorl
divl
clc
add
pop
clc
dec
je
dec
cmc
ficoms
add
clc
movsl
clc
loope
cmp
push
xchg
sbb
clc
sbb
push
insl
adc
clc
xor
add
enter
mov
add
fists
add
mov
outsb
mov
pop
inc
add
in
out
ds
imul
dec
test
adc
add
add
cmp
js
pop
and
test
clc
xchg
fbld
add
cli
inc
add
insl
arpl
add
jnp
imul
jl
in
imul
clc
lahf
std
daa
clc
lea
clc
mov
je
clc
push
push
add
jbe
leave
pusha
add
std
out
dec
mov
in
sarl
clc
mov
clc
jnp
clc
jp
xabort
sbb
cld
sbb
inc
clc
dec
scas
dec
mov
jnp
clc
std
mov
clc
js
sahf
insl
xchg
popf
mov
stos
cmp
add
hlt
scas
imul
add
and
sbb
stos
mov
sti
ljmp
pop
rcrl
shlb
clc
mov
clc
xchg
enter
fstl
add
or
scas
cmp
lods
pop
adc
test
cmp
ds
add
int
mov
clc
test
aaa
mov
add
in
fcomps
test
rolb
mov
pop
out
daa
clc
add
add
adc
xlat
sub
inc
clc
mov
adc
add
dec
pop
mov
ss
loop
inc
add
jb
add
inc
add
mov
test
fcompl
add
fs
ficompl
loopne
xor
add
add
add
xor
jae
add
jnp,pt
clc
aam
cmpsl
clc
popf
divl
xchg
add
ret
cmp
sbb
jno
add
clc
das
cwtl
cmp
clc
rclb
in
test
push
clc
cmp
insb
or
push
shr
test
mov
add
and
add
clc
mov
popf
xor
add
add
mov
data16
cvtdq2ps
in
sbb
clc
cmp
stos
xor
add
dec
ret
clc
mov
pop
clc
cltd
push
test
mov
sar
clc
mov
push
dec
stos
leave
aam
adc
add
add
ja
adc
add
add
add
or
add
fwait
and
add
jae
add
add
out
push
push
add
xabort
aad
clc
xchg
sti
mov
jmp
clc
mov
push
repz
jae
add
lret
cwtl
xchg
xchg
lods
test
xchg
and
add
and
add
leave
or
push
inc
clc
cmpsb
clc
nop
cmpsb
clc
mov
xor
leave
jg
cld
pop
inc
clc
cmp
mov
push
add
cmp
xchg
sbb
icebp
das
ljmp
int
stos
flds
clc
adc
add
scas
dec
xchg
outsl
mov
clc
push
clc
cmp
cmp
int
aad
jns
mov
stos
pop
clc
pop
mov
add
xbegin
add
pop
add
add
sbb
sahf
sub
daa
clc
inc
clc
jg
clc
sub
add
add
iret
adc
fistpll
clc
cmp
sbb
imul
clc
xchg
clc
pop
push
pop
jge
add
push
jmp
out
mov
frstor
lods
cmp
add
add
loop
pop
fisubl
inc
clc
das
loop
jle
clc
bound
add
mov
add
rcr
lret
jbe
sub
and
outsb
clc
stc
ret
mov
xchg
ja
pop
inc
add
stos
mov
test
lock
add
add
ja
aas
xchg
cmp
iret
push
or
pop
lret
nop
jg
cld
clc
push
add
stos
jg
repnz
jmp
es
mov
clc
mov
clc
ficomps
lcall
addr16
adc
adc
xor
add
adc
add
clc
xchg
addr16
xchg
mov
add
ljmp
add
mov
pop
and
add
bound
add
cmc
cltd
loopne
cmp
clc
test
mov
repnz
add
mov
clc
repnz
and
add
push
inc
clc
fldt
test
add
clc
mov
test
insl
xchg
cmp
add
xchg
inc
add
xchg
clc
test
lcall
iret
ret
clc
lcall
clc
test
add
aaa
inc
clc
pop
hlt
sar
clc
sub
dec
aaa
dec
inc
add
je
cmp
inc
clc
std
testl
add
js
add
or
clc
loop
dec
fistps
clc
out
xchg
jno
add
fsts
sbb
scas
pop
add
add
push
clc
xor
hlt
scas
pop
loope
cmp
pop
add
add
dec
adc
add
out
xlat
and
add
pop
pushf
adc
arpl
add
sbb
dec
idiv
aaa
cmp
xabort
push
add
mov
punpcklbw
add
fwait
cmp
clc
sahf
out
and
add
add
add
add
punpckhwd
shr
sbb
jo
add
clc
push
shlb
clc
mov
add
xor
add
add
clc
test
pushf
rorb
mov
mov
ud2
and
add
clc
dec
push
add
mov
clc
or
clc
fisttpll
int3
arpl
add
fsubr
stos
hlt
or
sahf
jbe
add
nop
mov
data16
dec
mov
cmpsl
clc
in
jae
add
clc
aam
add
mov
cmp
clc
xlat
mov
push
add
cltd
sub
dec
jbe
jb
add
pop
addr16
push
es
ljmp
inc
add
adc
add
add
cmp
pop
clc
mov
push
add
stos
sbb
jne
clc
mov
int3
out
aaa
cli
shr
popa
add
daa
clc
push
add
or
mov
clc
popf
lret
clc
scas
fs
popf
out
movups
add
and
add
bound
add
clc
in
cld
outsl
cwtl
mov
inc
clc
pop
xbegin
add
ret
clc
cmp
sti
fs
pop
xchg
push
add
mov
lods
lret
xor
add
clc
jge
inc
add
in
push
add
ret
adc
add
add
pop
arpl
add
add
xchg
push
nop
lock
out
push
fdivl
add
add
clc
xchg
add
adc
and
add
out
movsl
clc
xchg
mov
out
push
add
outsb
xchg
int
adc
add
mov
mov
aam
add
stos
fistpll
clc
xor
add
cmp
mov
clc
shlb
push
pop
and
add
add
in
dec
fiadds
add
pop
sub
rolb
add
pushf
lret
inc
add
mov
test
or
push
sti
mov
add
loop
std
xor
clc
in
das
xor
add
clc
cmp
pop
inc
clc
es
sarl
xchg
adc
add
jae
add
add
xabort
mov
clc
rolb
clc
cmp
add
lea
dec
cmc
cmc
out
cmp
clc
and
add
pop
aam
push
clc
scas
clc
addr16
loopne
cmp
mov
dec
xchg
lret
insl
mov
mov
push
sub
push
jecxz
add
add
mov
stc
aam
add
stc
jno
add
sbb
mov
dec
add
sarb
sub
test
xbegin
loop
mov
mov
xor
add
stos
pop
scas
pop
push
sbb
jnp
cmpsl
clc
fisttpl
clc
push
sub
bound
add
xlat
cmp
clc
or
clc
aaa
push
fmulp
sahf
fs
clc
push
add
repnz
add
add
lahf
add
add
test
mov
mov
dec
and
add
clc
xor
add
adc
add
add
adc
add
cmp
pop
inc
clc
push
nop
clc
lret
inc
add
iret
jg
clc
repnz
clc
jnp
or
std
ret
clc
fimuls
ja,pn
push
leave
rcrl
mov
jnp
clc
fdivrl
fcoms
aaa
in
test
clc
je
pop
ret
cld
cli
faddp
clc
nop
push
add
in
xchg
mov
add
inc
clc
test
or
jl
clc
imul
xor
pop
and
add
and
add
inc
add
pop
mov
call
cmc
icebp
and
test
cmc
sti
aaa
js
push
add
xchg
adc
mov
into
push
add
sar
mov
lahf
divl
add
add
add
add
push
addr16
xabort
add
and
cmp
clc
mov
xchg
jg
jmp
pop
inc
add
leave
std
je
xor
addr16
xchg
fdivrs
push
data16
gs
adc
fnstcw
clc
popa
add
clc
out
push
loop
lahf
add
in
jl
cmpsl
clc
add
add
negb
add
mov
scas
fwait
xchg
iret
std
cmpsl
clc
fs
sub
sub
data16
mov
pop
clc
mov
adc
clc
call
clc
inc
clc
inc
clc
xchg
adc
add
out
jmp
push
out
mov
add
pushf
push
fwait
hlt
lea
xchg
out
and
add
mov
adc
add
add
pushf
aam
and
add
clc
pop
cmp
pop
clc
jnp
push
clc
jbe
jae
add
data16
pop
push
mov
clc
add
lods
and
lods
sbb
clc
fistps
loope
mov
adc
add
inc
clc
mov
bound
add
add
and
add
add
cmc
aaa
clc
lods
pop
clc
nop
mov
mov
cli
and
add
add
jmp
sbb
pop
xchg
sub
add
add
add
clc
ljmp
loopne
cli
sbb
push
mov
and
fwait
lahf
jb
add
mov
xchg
pusha
add
fs
inc
add
iret
out
into
sbb
mov
pop
clc
cmp
ljmp
xlat
fs
lock
popf
inc
add
jmp
add
pushf
sub
lods
mov
fnstcw
mov
clc
bnd
add
jmp
dec
loopne
cwtl
sbb
clc
dec
repz
clc
pop
out
or
clc
jo
add
clc
inc
clc
dec
add
add
scas
inc
add
push
add
sti
iret
sar
jecxz
rorl
add
pop
clc
jl
clc
mov
push
add
xchg
sar
movsl
clc
outsb
paddw
repz
inc
clc
cmp
add
add
lods
jmp
push
clc
leave
idivb
xchg
cmp
xchg
cmp
jle
add
xchg
dec
fdivr
xchg
jg
add
cmp
loopne
popa
add
out
xchg
ficomps
jg
mov
cmp
add
std
mov
pop
pop
shr
ja
in
cmp
clc
out
mov
clc
xor
add
add
pop
mov
ja
cltd
es
xor
add
clc
ds
cmp
inc
add
imul
add
clc
clc
mov
loope
jmp
out
inc
add
loope
ljmp
add
ficompl
into
cmp
xor
add
add
mov
add
test
xlat
int
and
out
and
in
fdivr
push
ja
xor
add
add
inc
add
jmp
clc
xchg
mov
repz
pop
mov
mov
hlt
push
sub
clc
cltd
test
dec
jns
mov
add
std
pop
cmp
sti
push
add
inc
clc
jo
add
inc
add
or
stos
into
and
add
clc
jne
or
push
mov
pop
sbb
das
dec
movq
add
push
add
stos
add
add
mov
clc
dec
das
pop
ja
sbb
stos
mov
add
inc
clc
out
or
clc
call
add
pop
mov
clc
movsb
clc
and
add
cmp
clc
xor
add
push
clc
lods
imul
and
add
mov
add
cmp
inc
clc
fisttpl
out
sub
add
shll
xchg
xor
clc
int
add
add
adc
add
add
ret
push
int
xor
pop
pushf
mov
xor
add
lock
sbb
add
add
cld
std
bnd
add
or
and
add
daa
clc
lock
sub
sbb
stc
aas
and
jnp
clc
pop
rolb
add
xbegin
sub
push
lahf
cmpsl
clc
add
add
bound
add
xchg
fildl
clc
je
clc
xchg
jnp
clc
add
add
add
sbb
clc
sub
dec
enter
or
insl
mov
adc
xchg
sbb
clc
add
add
add
cltd
xchg
pop
jl
fs
jl
lods
outsl
mov
xchg
inc
clc
popf
test
cmp
leave
ds
mov
dec
mov
std
push
dec
out
mov
fldenv
clc
pushf
fs
jle
loope
clc
xor
add
push
add
ret
clc
cmp
add
pop
sub
clc
inc
clc
nop
js
adc
add
cmp
sbb
nop
es
stc
push
clc
inc
clc
es
jo
add
xor
add
jmp
ret
adc
add
push
add
mov
dec
arpl
add
sar
int
push
jp
in
out
enter
jge
clc
xchg
pop
aas
jno
add
lret
sbb
pop
adc
add
inc
add
jmp
fwait
sub
add
add
data16
in
sahf
mov
popf
adc
and
add
add
gs
adc
add
add
dec
adc
add
add
clc
or
cmp
clc
cmp
sahf
fistpl
push
mov
add
faddl
and
add
int
aaa
fildl
add
add
cwtl
xchg
dec
cmp
fdivl
jbe
jp
xchg
xchg
inc
clc
adc
add
add
std
push
sahf
mov
push
add
mull
clc
mov
clc
sahf
xor
clc
sub
test
popa
add
jnp
ret
clc
xabort
push
clc
cs
clc
mov
clc
xor
add
pop
cmp
clc
xor
aad
add
lods
mov
add
shl
sub
mov
add
lea
clc
hlt
daa
clc
jge
fcomps
gs
cwtl
imul
loope
test
out
sar
add
and
add
adc
add
xor
cwtl
xor
add
sahf
clc
sbb
mov
aam
fldl
clc
jae
add
push
clc
int
clc
stos
lret
xchg
push
add
add
add
clc
sti
stos
push
adc
add
inc
clc
mov
int
add
mov
int3
ret
int3
addr16
mov
es
cmp
out
popa
add
jge
sbb
call
pop
cmp
sbb
sub
clc
nop
imul
add
add
mov
hlt
ret
cmp
in
xchg
xchg
push
add
cmpsl
clc
pop
pop
cs
ds
imul
add
xor
mov
clc
icebp
nop
mov
sub
cltd
mov
test
aam
shll
clc
aas
test
daa
clc
fwait
jmp
xchg
in
lock
push
add
mov
add
cmp
jl
dec
adc
add
add
push
outsb
clc
xbegin
clc
dec
pop
sbb
clc
pushf
push
out
xor
push
daa
clc
ss
int3
mov
fidivs
and
enter
out
xlat
fwait
popa
add
gs
mov
clc
out
data16
mov
pusha
add
push
xor
lods
jne
xchg
ja
cmp
inc
clc
ret
push
add
and
cmp
jle
inc
clc
imul
pushf
push
mov
stc
xor
clc
sti
sub
insl
hlt
movsb
clc
push
pop
dec
mov
xchg
xbegin
notb
add
pop
inc
add
jbe
jmp
add
shll
sahf
icebp
fcomps
mov
add
pop
sbb
add
movsl
clc
rclb
clc
lods
jecxz
call
jge
xchg
and
and
cmp
and
add
int
add
ja
push
clc
lret
clc
inc
clc
out
popa
add
add
ja
clc
mov
cmp
clc
shrl
fisttpll
pushf
or
jo
add
add
aad
push
hlt
cli
jbe
mov
clc
cmp
pushf
lret
sub
clc
sbb
sti
jg
add
clc
cmp
icebp
pop
movsl
clc
cmp
clc
adc
add
add
push
and
add
sbb
add
cltd
xor
add
clc
outsl
jg
jbe
clc
inc
clc
jg
mov
clc
movsl
clc
cmp
clc
push
add
cwtl
bound
add
cmc
pop
jno
add
clc
fs
jo
add
jl
test
popa
add
pop
jne
add
sti
test
mov
clc
mov
add
push
add
stos
fmuls
sarb
sub
clc
inc
add
lret
mov
add
add
push
pop
adc
add
dec
xor
adc
popa
add
or
add
clc
add
add
cmp
fiadds
add
stos
inc
clc
into
push
or
pop
rclb
add
sti
rcr
ss
add
add
movsl
clc
das
push
jne
into
sub
lea
clc
out
sbb
cmpsl
clc
adc
add
add
jae
add
mov
cmp
add
mov
clc
sub
clc
adc
jle
clc
add
xor
add
mov
jge
clc
dec
jp
fsubrl
add
fstpt
ret
gs
lock
pushf
gs
out
je
inc
clc
xor
add
add
dec
cmp
sbb
popf
xchg
in
or
cmp
stos
aas
pop
popa
add
scas
sahf
jnp
add
or
inc
add
dec
jg
cmpsl
clc
jg
rcl
pop
enter
inc
add
pop
dec
mov
mov
push
sub
outsl
loopne
jecxz
or
clc
invd
cmp
xchg
xor
add
ja
clc
dec
outsb
nop
pusha
add
sub
xchg
sar
dec
int
jp
pop
clc
mov
lods
fdivl
inc
clc
dec
mov
cmp
dec
loopne
iret
adc
add
jb
add
clc
daa
clc
call
clc
data16
or
and
add
pop
adc
add
add
jmp
add
or
sbb
clc
js
mov
stc
jmp
clc
ffree
clc
enter
sbb
clc
add
inc
clc
dec
das
clc
pop
insb
cmp
clc
ljmp
dec
xor
add
add
mov
mov
add
mov
xor
add
movsl
clc
add
add
add
add
or
in
out
xchg
icebp
sbb
and
add
lret
cwtl
cld
xor
and
add
add
push
clc
scas
pop
lods
negl
aaa
mov
sub
das
sub
mov
sbb
test
add
fsubl
or
sahf
cwtl
es
xor
add
mov
mov
pop
pop
mov
pop
sub
add
loop
outsl
cmp
in
xabort
clc
dec
adc
add
add
cltd
xor
add
add
pushf
clc
mov
add
xchg
mov
add
test
int
mov
pop
das
mov
test
sub
cmp
pop
xchg
dec
jns
call
clc
push
pop
clc
push
jno
add
movsb
clc
sar
add
std
scas
inc
add
xchg
sar
cmp
dec
push
add
xbegin
push
pusha
add
cwtl
ret
clc
cs
xbegin
add
in
and
add
cmp
sarb
push
mov
inc
add
adc
add
scas
mov
add
cmpsb
clc
sbb
clc
sbb
add
aaa
jne
inc
add
test
es
cwtl
add
add
jmp
clc
mov
inc
clc
mov
fwait
adc
add
outsb
enter
ss
push
add
mov
cld
pop
cmpsl
clc
loop
xchg
mov
inc
add
gs
out
xor
add
add
mov
add
cmp
popa
add
push
add
mov
clc
and
push
fists
clc
lods
sbb
dec
mov
mov
bound
add
jb
add
add
dec
push
xlat
push
fs
lock
push
add
xchg
sub
push
add
pop
in
push
jecxz
daa
clc
cmpsb
clc
ljmp
ds
lret
scas
jp
adc
add
inc
add
ljmp
fstps
pop
clc
insl
ljmp
clc
rcll
add
iret
test
inc
clc
mov
add
jg
clc
je
clc
jnp
add
or
aas
jmp
push
add
scas
xor
add
add
add
imull
add
add
mov
add
aad
or
mov
clc
mov
push
add
pop
lret
js
fwait
push
jg
add
ss
fsts
push
mov
clc
or
mov
push
add
jle
test
and
add
pop
fildll
clc
icebp
movsb
clc
xchg
cmpsl
clc
lret
fnstcw
xlat
sbb
clc
cmp
into
negl
clc
jecxz
xchg
mov
hlt
popf
adc
add
insl
shlb
mov
add
add
icebp
adc
add
call
clc
pop
pop
fcoms
add
popf
sbb
leave
jmp
mov
mov
cmpsb
clc
lods
push
mov
cld
pop
cli
sbb
mov
add
out
mov
cld
hlt
pop
clc
int
fdivs
mov
cmpsl
clc
outsl
inc
add
inc
add
xor
add
cmp
gs
inc
clc
xchg
stos
cmp
out
mov
and
add
sti
xchg
scas
pop
inc
add
mov
repnz
add
and
add
mov
cmp
clc
aad
sbb
push
ljmp
dec
jae
add
push
ret
clc
jecxz
mov
sub
cmp
sbb
pop
mov
add
sub
mov
jp
popa
add
scas
movsl
clc
mov
xor
xor
add
add
add
add
sar
or
clc
out
push
add
jg
or
push
add
jg
cmpsl
clc
or
adc
add
clc
inc
clc
divb
add
xchg
sarb
mov
clc
jl
clc
into
push
clc
insl
xor
add
sub
clc
jp
mov
xor
add
inc
add
out
add
add
adc
add
add
add
aad
insb
xchg
jbe
clc
sub
fsubrl
jno
add
add
das
loopne
jecxz,pn
sar
lock
adc
add
mov
jge
push
add
pushf
icebp
ficoml
add
cmp
outsl
in
cmp
clc
xchg
daa
clc
clc
or
xabort
mov
clc
imul
cmp
cld
cld
inc
add
cmp
aaa
and
and
add
add
jmp
imul
clc
idiv
lods
arpl
add
scas
negb
shlb
xchg
daa
clc
push
add
es
dec
lea
adc
add
add
in
jmp
inc
add
rclb
clc
xor
add
jecxz
xchg
cmp
add
sub
add
cmp
add
out
aas
lret
mov
add
pop
in
lock
sar
loopne
ficoml
xlat
aad
in
adc
add
or
clc
mov
insl
pop
clc
mov
mov
and
add
xor
add
add
out
xabort
clc
mov
clc
sbb
xor
clc
mov
clc
fs
push
add
xor
add
clc
inc
clc
lcall
inc
clc
pushf
adc
clc
insb
mov
in
je
xchg
pop
or
es
data16
fdivl
add
clc
add
add
icebp
jae
add
fwait
gs
sti
lods
push
aas
push
mov
cmp
add
loopne
mov
add
fwait
add
add
cmpsb
clc
hlt
mov
clc
in
test
movsb
clc
rcrl
add
cmc
sti
hlt
jg
xbegin
cmp
clc
sub
push
add
gs
addr16
dec
add
add
aas
int3
cmp
jne
add
add
aam
lcall
cmp
sbb
lock
scas
cmp
cmp
add
mov
or
in
and
jo
add
pop
push
add
sarl
add
add
mov
cmp
push
add
mov
arpl
add
lods
leave
out
cld
fs
dec
and
add
push
add
xchg
sub
cmp
or
clc
pop
dec
imul
pop
clc
test
dec
xchg
cmpsb
clc
sbb
mov
xchg
mov
pop
test
lea
clc
bound
add
cltd
cmp
clc
cmc
lahf
out
mov
cmc
movsl
clc
imul
inc
clc
js
lea
add
cmp
cmp
gs
jl
clc
xor
add
add
clc
xchg
test
stc
movsl
clc
inc
add
enter
clc
cmp
mov
aam
jnp
clc
push
add
std
icebp
adc
add
inc
add
xchg
pop
clc
xor
add
add
fcomps
fstps
jle
clc
fildl
xlat
and
add
clc
inc
clc
je
sub
sub
clc
cli
cmp
push
add
iret
lret
mov
xchg
xor
add
push
add
cs
clc
ficomps
cmp
aad
lods
cmp
clc
iret
xchg
es
out
hlt
mov
xchg
scas
adc
add
inc
clc
sub
sar
clc
and
add
int3
jle
pop
clc
addr16
icebp
loopne
xabort
ror
mov
imul
clc
add
add
in
mov
push
add
push
xchg
ljmp
out
and
add
add
add
add
icebp
ja
ret
clc
push
xchg
dec
cmp
mov
in
dec
mov
clc
xchg
sbb
clc
adc
pop
daa
clc
cmp
clc
sarl
jmp
add
test
scas
repnz
add
decb
mov
fisttpl
jne
jmp
cmp
ja
clc
pop
int
push
and
add
add
add
comiss
clc
mov
clc
cli
cmp
add
clc
jne
inc
add
push
xor
add
clc
inc
clc
and
add
cmp
cmp
clc
in
xchg
push
clc
dec
jnp
sbb
add
fiaddl
or
add
add
push
add
lret
add
fbstp
adc
add
add
mov
adc
add
cltd
mov
clc
gs
pop
ss
sub
cmp
pop
clc
int3
xchg
cmp
sbb
sar
adc
add
loop
mov
mov
je
inc
clc
mov
adc
add
inc
clc
mov
sbb
dec
cmp
mov
lret
add
enter
inc
add
fisubrs
clc
jecxz
movsb
clc
call
add
repz
add
js
mov
clc
add
add
push
xchg
movsb
clc
xchg
mov
shr
cmp
std
test
in
notl
add
clc
mov
pop
xchg
add
add
dec
data16
adc
add
clc
data16
sub
cli
dec
cwtl
xchg
loope
mov
clc
mov
clc
fsubl
add
cmp
lods
iret
cld
jnp
add
add
add
daa
clc
mov
dec
xlat
shll
add
cmp
add
add
add
scas
out
imul
add
imul
jb
add
add
add
push
push
add
jae
pop
adc
add
cmpsl
clc
icebp
adc
add
clc
data16
fdivrs
mov
insb
rcrl
bound
add
clc
pop
jne
add
sbb
push
add
mov
jp
push
add
add
cmp
jbe
clc
or
clc
dec
fistl
and
add
clc
mov
sub
add
add
mov
add
dec
lea
clc
ljmp
add
add
adc
pop
lahf
aaa
ret
sahf
stos
pop
clc
cmp
aad
clc
cmpsl
clc
je
clc
or
or
mov
mov
aam
add
xchg
test
add
add
sbb
clc
in
clc
mov
add
cld
jecxz
popf
out
push
push
add
out
stos
xchg
or
add
inc
add
subps
clc
mov
aad
outsl
jne
into
xchg
sarb
mov
dec
aas
inc
add
out
xchg
push
push
add
dec
mov
mov
clc
sbb
out
cmp
push
add
mov
add
imul
shll
xchg
sbb
xor
add
add
add
sbb
push
movsb
clc
movsl
clc
lret
xchg
lcall
inc
clc
lret
pop
mulb
clc
jae
add
push
add
mov
scas
cmovge
clc
pop
xor
add
add
xchg
xor
clc
pop
loop
imul
int
mov
push
add
aas
mov
clc
mov
fsub
clc
xor
add
xchg
xor
fmull
fs
lcall
and
add
add
mov
add
inc
clc
popf
in
mov
mov
or
cmp
jp
clc
mov
clc
gs
cwtl
and
xchg
fimull
push
ret
arpl
add
add
mov
jae
add
clc
and
add
clc
cmc
push
dec
addr16
push
add
ret
clc
ret
clc
cmpsb
clc
imul
or
repz
push
aad
mov
adc
add
add
aam
outsl
enter
je
fdiv
aaa
fucomi
xchg
cmpsb
clc
daa
clc
xor
add
clc
inc
clc
push
dec
ljmp
mov
nop
fwait
adc
add
add
mov
mov
mov
data16
lret
jg
add
mov
xor
add
add
adc
add
ret
xchg
int3
out
xor
add
xchg
dec
xchg
test
add
sbb
add
into
xor
add
fwait
stos
cmp
clc
int3
fwait
xor
add
dec
push
mov
sub
add
mov
lret
adc
aam
push
shrl
sbb
insb
cmp
imul
add
sub
clc
xor
add
inc
add
test
xor
add
xor
add
add
push
add
clc
mov
clc
mov
or
mov
cli
sahf
loopne
dec
xabort
clc
ficomps
ja
idivb
clc
leave
test
jmp
mov
es
mov
mov
repz
xchg
ds
mov
xor
ja
lcall
push
fidivrl
mov
clc
imul
std
pop
sbb
push
add
dec
mov
add
clc
or
pop
leave
xchg
xor
add
leave
dec
and
lret
data16
aaa
cmpsb
clc
enter
sbb
cmp
dec
push
add
iret
add
and
add
add
mov
fcmovu
dec
mov
clc
jnp
and
add
add
into
in
fistps
dec
sub
add
mov
add
outsl
popa
add
or
add
dec
sub
add
add
cmc
mov
add
mull
clc
pop
sti
mov
cmp
clc
push
cmp
cmp
or
out
push
adc
or
xchg
adc
add
add
aas
int3
int
mov
add
outsl
mov
lods
push
xor
add
clc
mov
xchg
je
add
adc
add
ror
imul
add
js
hlt
or
clc
pop
rcl
std
stos
or
cmp
dec
ror
scas
mov
add
ficompl
ret
clc
mov
dec
fmul
insl
dec
loop
pop
adc
inc
clc
gs
mov
jg
nop
and
add
push
popf
fstl
add
and
add
xchg
shlb
mov
jp
repnz
lock
test
out
es
out
ja
adc
add
clc
aam
push
add
jbe
ds
cmp
clc
jns
add
add
ljmp
add
add
and
dec
sub
sub
add
stos
push
inc
add
div
sbb
mov
mov
daa
clc
add
add
mov
inc
add
loopne
xor
add
dec
outsl
aaa
dec
pop
flds
add
mov
xbegin
stos
mov
rep
clc
loop
mov
inc
add
fcoms
add
mov
mov
cmp
clc
fisttps
clc
jmp
call
in
mov
push
add
rcll
out
mov
jb
add
loope
sub
clc
push
pop
cs
mov
popa
add
hlt
mov
cmp
add
mov
add
adc
xlat
xor
add
clc
inc
add
ljmp
imul
sub
add
addr16
pop
mov
popa
add
dec
ss
aad
add
adc
add
notl
add
addr16
push
add
xabort
or
aam
push
add
stos
test
add
dec
sbb
clc
decb
arpl
add
xchg
or
clc
cli
movsb
clc
mov
mov
clc
sar
cwtl
cmp
fwait
inc
add
das
push
add
mov
dec
in
mov
pop
scas
dec
and
ljmp
fsubrl
movsb
clc
jnp
add
xchg
fwait
sub
jns
add
arpl
add
adc
mov
clc
sbb
fisttps
jne
ljmp
add
lcall
add
mov
jns
clc
aam
xchg
inc
clc
xabort
out
std
pop
insl
test
fs
xabort
mov
add
add
shrl
cmp
adc
pop
clc
push
leave
loopne
sbb
add
jb
add
std
mov
repnz
fldl
xor
in
jns
add
das
jns
sbb
cmpsb
clc
xchg
or
aam
mov
add
add
scas
hlt
out
adc
add
jns
cmp
clc
jbe
clc
aam
mov
jg
cmpsb
clc
xchg
and
add
add
mov
jecxz
push
add
add
add
add
clc
jmp
add
mov
pop
je
clc
lret
jne
cmc
mov
push
clc
cmp
clc
xor
add
sbb
pusha
add
inc
clc
push
add
cmp
inc
add
pop
lods
loope
icebp
loop
and
add
adc
add
cmc
sahf
mov
push
xchg
jno
add
sub
aam
fisttps
repnz
cli
push
sub
clc
mov
xbegin
cmp
add
scas
aad
or
arpl
add
adc
add
addr16
push
add
push
icebp
mov
add
mov
std
clc
cld
jno
add
add
xchg
aas
pop
add
add
add
cmp
loope
movsl
clc
jnp
clc
aaa
mov
add
mov
cmpsb
clc
cs
add
xchg
mov
bound
add
loopne
dec
xor
add
scas
mov
add
mov
es
jae
add
insb
incb
add
add
add
out
jnp
stc
dec
ret
clc
jbe
cwtl
int
add
sub
mov
jle
clc
jl
mov
add
out
mov
jnp
add
jge
add
dec
mov
mov
jg
clc
pop
push
add
pop
push
add
sub
rolb
add
push
xchg
and
cltd
mov
mov
or
xchg
lock
add
add
shrb
xchg
jnp
xlat
pusha
add
loop
mov
sar
mov
adc
add
add
dec
mov
clc
js
cmp
add
pushf
cmp
add
add
movups
add
inc
add
in
push
std
or
out
mov
test
into
and
add
test
sbb
clc
aaa
stos
or
clc
mov
add
add
xchg
rcrb
std
in
adc
add
outsl
push
aas
or
out
data16
xor
add
add
xor
add
cltd
daa
clc
sub
mov
clc
cmp
fprem1
popa
add
sti
mov
ds
shll
add
cmp
fsubl
add
push
add
stc
addr16
adc
add
add
mov
inc
clc
or
clc
xor
add
std
cmpsl
clc
addr16
std
or
xchg
aam
clc
sbb
add
or
sub
add
jae
add
clc
add
add
clc
mov
cmp
jge
add
or
add
aam
ss
outsl
inc
add
data16
push
insb
cli
push
add
call
test
add
or
sar
and
add
jp
pop
popa
add
cmp
add
jmp
loope
sbb
ljmp
sysenter
mov
ds
cmp
sbb
ja
gs
into
jns
add
adc
add
xchg
or
clc
fst
mov
enter
scas
inc
clc
mov
outsl
je
arpl
add
into
or
add
add
add
popa
add
insb
mov
clc
pusha
add
adc
add
loop
mov
lret
mov
hlt
fcoms
adc
inc
clc
dec
cmp
jle
fldcw
jae
add
outsl
mov
push
add
inc
add
and
add
clc
sbb
jl
xbegin
cmc
ljmp
add
fwait
addr16
mov
clc
mov
inc
add
je
add
shl
clc
inc
add
push
clc
xbegin
xchg
dec
or
add
jns
inc
clc
test
fsts
clc
gs
mov
test
add
dec
mov
add
inc
add
pusha
add
push
mov
clc
insb
leave
movsl
clc
sbb
add
jecxz
and
add
cmp
add
imul
outsl
js
cmp
cwtl
icebp
or
sub
mov
testl
and
add
add
add
dec
mov
clc
sti
fisttpll
mov
lcall
out
mov
clc
das
cli
jo
add
ret
jge
mov
sub
loope
push
add
pop
sub
push
lret
hlt
fld
clc
arpl
add
clc
mov
add
loopne
cmp
clc
mov
clc
xor
add
add
jno
add
sar
notb
test
aad
clc
outsl
in
das
bound
add
add
bound
add
push
sbb
add
pop
push
pop
cmp
xor
lret
rorb
mov
es
cmp
clc
vcvtdq2ps
clc
sub
movsb
clc
cli
inc
add
jae
add
xchg
insb
dec
push
add
aam
xor
add
add
and
out
pop
clc
cmp
clc
xchg
adc
add
add
and
ljmp
add
add
add
dec
inc
clc
cmp
clc
or
adc
add
int3
imulb
mov
int3
push
push
mov
add
add
inc
clc
or
add
inc
add
ja
loope
fstpt
clc
jnp
add
push
sub
js
clc
sysret
clc
xchg
push
or
clc
rclb
sbb
imul
stos
push
mov
popa
add
and
add
add
mov
jnp
clc
sar
pop
gs
add
add
in
inc
clc
bound
add
or
xchg
adc
adc
add
and
sar
clc
or
sti
xchg
mov
xchg
inc
add
add
add
dec
sub
mov
mov
mov
sub
inc
add
and
push
adc
pop
inc
add
inc
clc
cmp
div
dec
lods
fwait
movsb
clc
repz
jecxz
mov
xor
add
cmp
add
fistpl
in
inc
clc
test
cld
fucomp
sub
add
cli
inc
add
mov
lcall
clc
inc
clc
lock
pop
or
add
mov
cltd
inc
add
xor
add
xchg
mov
clc
push
add
icebp
xabort
add
mov
add
addr16
fidivrs
cmc
cmp
cmpsb
clc
mov
mov
int3
add
add
dec
lret
add
add
jge
inc
clc
xabort
clc
jbe
add
stos
pop
clc
fmull
cld
imul
add
lock
add
push
mov
xchg
jae
add
pop
xor
xor
lahf
je
aaa
imul
jmp
clc
jnp
clc
clc
rcr
push
clc
sub
test
imul
in
lahf
scas
mov
add
bound
add
jg
clc
lods
lret
clc
xlat
mov
mov
jo
add
clc
clc
cmp
clc
or
cmp
aam
or
mov
clc
dec
popf
cs
xchg
and
add
mov
mov
and
add
clc
scas
ja
scas
and
or
cmp
out
sbb
add
or
adc
pop
out
inc
clc
mov
push
or
sbb
adc
add
clc
pop
inc
add
cmp
mov
sbb
clc
push
push
add
idivl
inc
clc
scas
stos
inc
add
add
add
jmp
clc
in
std
movsl
clc
jl
add
add
add
clc
xor
add
rdseed
icebp
push
add
sarl
xor
add
xabort
das
lods
gs
pop
data16
das
imul
add
scas
fstp
testl
in
fwait
incb
or
jmp
lods
imul
sub
clc
cltd
mov
jo
add
add
aaa
jmp
sub
cmp
clc
int3
pop
clc
lea
add
scas
in
jge
je
add
cmp
popf
mov
clc
and
add
clc
cmpsb
clc
aas
push
and
add
lret
scas
dec
mov
repnz
push
inc
add
int
out
xabort
add
pop
or
imul
push
add
xchg
call
pop
mov
push
dec
or
cmp
add
clc
insl
iret
popf
das
inc
clc
mov
nop
add
add
add
mov
fmul
sti
pusha
add
push
add
mov
clc
adc
add
stc
test
sub
mov
hlt
movsb
clc
pop
push
push
and
add
hlt
xor
add
loope
mov
add
add
in
pop
xchg
mov
scas
ss
int3
js
hlt
ss
add
add
icebp
push
add
mov
add
bound
add
add
clc
and
add
clc
xor
add
mov
lcall
adc
ret
gs
xor
add
xchg
jp
inc
add
jbe
xchg
xor
add
scas
imul
xbegin
cmp
clc
mov
mov
clc
sbb
pop
clc
imul
xor
sti
int
or
notb
add
clc
cmpsb
clc
into
imul
clc
add
inc
add
dec
push
outsb
out
jmp
add
jle
and
add
add
inc
add
insl
out
jae
add
fiaddl
dec
dec
cmp
fiadds
add
add
inc
clc
mov
fwait
addr16
adc
add
push
frstor
add
mov
xor
add
lret
in
push
push
and
add
clc
sti
es
sbb
add
add
inc
add
sub
add
not
clc
push
xchg
pop
cmp
add
mov
lret
cwtl
imulb
out
add
add
xor
add
ljmp
pop
clc
imul
test
add
jns
int3
sub
clc
xbegin
clc
mov
clc
sub
push
clc
dec
in
adc
add
clc
xchg
sahf
fptan
data16
pop
mov
cli
stos
mov
xchg
mov
fs
pop
test
popf
in
add
daa
clc
mov
jle
clc
xchg
sub
add
negb
add
dec
decb
pop
into
jg
clc
adc
add
clc
lods
jp
jns
clc
test
clc
ret
clc
pop
adc
add
es
xchg
gs
fdiv
sbb
dec
push
clc
in
cli
lods
mov
add
xbegin
adc
add
add
lret
mov
nop
daa
clc
and
add
add
add
in
mov
repnz
clc
sar
xbegin
push
jmp
clc
test
add
cmpsb
clc
push
add
xchg
jge
xlat
and
add
add
xchg
into
dec
adc
add
mov
mov
jae
add
jle
mov
and
inc
add
ficoms
stc
pusha
add
fs
mov
fmul
sbb
in
mov
add
xlat
xchg
pop
mov
sbb
sub
aad
outsl
jbe
jbe
fcompl
push
sub
in
sub
xchg
sub
clc
or
add
dec
scas
mov
xchg
adc
add
add
sbb
xbegin
add
add
in
inc
add
adc
add
add
add
decl
add
je
movsb
clc
sbb
clc
jp
cmp
add
lods
inc
add
mov
add
xchg
in
adc
add
into
mov
clc
ss
add
cmp
xchg
adc
add
mov
add
xchg
pushf
xchg
pop
jnp
add
xchg
popf
inc
clc
idiv
mov
testl
add
dec
mov
add
mov
adc
xchg
mov
sub
cmp
stos
xchg
insl
and
sub
jns
rorl
add
xor
add
es
fisubrl
add
clc
cmc
adc
pop
pop
clc
inc
clc
movsl
clc
mov
sti
add
add
clc
repz
clc
add
add
mov
clc
lea
jecxz
ljmp
clc
test
repz
cmp
cmpsb
clc
jns
add
add
add
add
add
inc
clc
clc
lock
rolb
gs
jns
fsubl
clc
cmp
pop
outsb
mov
daa
clc
mov
sarb
jl
data16
adc
add
push
cwtl
mov
and
add
clc
rcl
stos
mov
add
fwait
jmp
clc
mov
clc
cltd
and
add
inc
clc
inc
clc
mov
jl
mov
repnz
add
push
add
loopne
mov
push
add
mov
clc
cmp
add
pop
cmp
add
cmp
clc
iret
pop
insl
loope
clc
mov
scas
sbb
add
add
jmp
add
add
add
cmp
add
sbb
shr
jecxz
outsb
cmp
negb
add
dec
add
add
mov
movsb
clc
cmp
add
repnz
add
mov
clc
stc
dec
daa
clc
and
add
clc
sar
cs
ljmp
mov
test
pusha
add
and
add
adc
add
add
add
clc
sar
clc
jo
add
dec
pushf
in
outsb
rcrb
clc
mov
sbb
clc
cmc
fs
mov
xchg
in
lods
cld
insb
xchg
adc
add
lcall
adc
add
call
clc
imul
cmp
mov
out
sar
mov
add
mov
add
loopne
faddl
or
mov
clc
outsb
faddl
clc
cmp
bound
add
inc
clc
bound
add
psubusw
add
clc
lret
and
add
cmp
out
scas
push
mov
testl
add
sub
mov
add
cmp
repz
cmp
add
jnp
xbegin
add
in
insl
shlb
pushf
fs
shlb
cmpsb
clc
into
cmp
std
movsl
clc
inc
add
imul
std
sub
sub
add
add
pop
cmp
clc
in
add
out
inc
add
push
add
cli
xor
add
xchg
dec
addr16
inc
add
mov
add
add
clc
lret
add
ret
adc
fsubrp
lods
mov
add
adc
add
clc
inc
add
mov
mov
sub
inc
clc
mov
enter
popf
cmpsb
clc
mov
jmp
cmp
shl
clc
xchg
mov
test
imul
mov
push
test
pop
fs
sub
cs
add
mov
and
add
add
stc
jmp
adc
dec
and
add
xchg
clc
or
jecxz
arpl
add
mov
pushf
lahf
pusha
add
sar
loop
xor
mov
addr16
push
or
add
xlat
cwtl
stc
mov
xchg
adc
add
aad
clc
xchg
mov
clc
outsb
xor
cmp
enter
pop
or
adc
add
add
clc
inc
clc
inc
clc
mov
add
stos
scas
fsub
clc
movsl
clc
sbb
add
loopne
aad
fwait
leave
repz
sub
movsb
clc
add
aas
popa
add
xbegin
clc
fdivl
add
and
add
jle
clc
mov
and
add
add
mov
mov
clc
xor
add
cltd
sar
clc
add
hlt
mov
repnz
cmp
clc
adc
add
mov
sub
xabort
data16
push
clc
mov
clc
fsts
add
pop
jmp
add
lods
add
add
xor
add
addr16
popf
xor
add
call
xchg
popa
add
sbb
jp
call
clc
iret
lcall
add
cmp
clc
cmp
clc
push
add
add
jg
pop
imull
mov
push
mov
clc
pusha
add
enter
movsl
clc
push
add
imul
out
lea
sub
clc
out
push
leave
or
imul
clc
imul
mov
pushf
inc
clc
cmp
clc
enter
out
sti
daa
clc
cmp
push
or
cltd
and
add
add
ret
aad
shlb
clc
cmp
add
and
add
cmp
clc
push
pusha
add
addr16
dec
je
stos
fdivs
adc
add
ss
xor
clc
cmp
sub
jmp
add
cmp
clc
scas
aad
dec
int
add
std
or
add
cmp
sahf
xchg
and
add
sbb
clc
test
clc
es
xchg
jle
jg
sarl
fidivrl
add
clc
arpl
add
jae
add
inc
clc
imul
add
test
pop
fsts
stos
inc
clc
test
sub
fs
mov
arpl
add
add
push
add
movsb
clc
or
sbb
clc
xchg
jl
and
add
addr16
push
outsb
incb
call
sar
add
add
add
lret
inc
add
sub
push
lock
clc
fmul
sbb
rorb
testb
inc
add
in
mov
xlat
pop
push
clc
fs
or
add
mov
xor
add
mov
add
cmp
std
cmp
jno
add
add
jbe
fsubrs
clc
fnstcw
popl
jno
add
pushf
adc
add
clc
or
es
icebp
in
push
scas
xor
clc
xchg
repz
push
add
add
add
add
je
dec
pusha
add
add
enter
daa
clc
push
inc
clc
cmp
pusha
add
or
clc
xabort
mov
cmp
dec
into
repnz
jb
add
jnp
pop
jno
add
add
add
fwait
clc
mov
clc
addr16
dec
repnz
dec
pop
out
popf
or
add
icebp
dec
in
imul
jecxz
fnstcw
in
and
add
sub
fidivs
add
test
jp
fcomps
notl
cs
and
add
add
add
cmp
jns
clc
jmp
adc
add
clc
movsl
clc
arpl
add
pop
clc
leave
push
mov
jae
add
add
fs
cmp
ljmp
dec
push
bnd
dec
pushf
xchg
pop
xor
add
clc
dec
bound
add
stos
push
add
clc
into
jmp
sahf
cli
cmc
scas
xchg
cs
xchg
aad
add
popa
add
xchg
dec
cs
add
add
add
xor
add
add
dec
sub
lods
pop
clc
jmp
add
mov
mov
add
mul
clc
es
imul
push
ljmp
pop
sub
mov
clc
repnz
add
test
and
add
sahf
outsl
jecxz
sub
clc
xor
add
leave
movsb
clc
cmp
jo
add
and
std
and
leave
push
clc
adc
add
mov
sar
add
outsb
xchg
test
mov
clc
sub
clc
roll
add
sar
add
add
jecxz
add
add
sbb
sub
out
sub
clc
mov
add
fsub
clc
jecxz
fstpl
imul
add
xbegin
decb
pushf
data16
pop
cmp
mov
add
dec
or
dec
add
add
add
clc
std
mov
clc
jo
add
add
add
sar
pop
jb
add
add
add
insl
notb
mov
pop
cmp
xabort
xchg
xor
add
clc
ja
pusha
add
stos
push
sbb
ljmp
cmp
clc
push
clc
push
test
into
jo
add
xchg
push
iret
and
add
dec
inc
clc
scas
jae
add
add
shll
add
push
add
mov
aaa
clc
mov
pop
daa
clc
mov
pushf
mov
je
sbb
lods
std
data16
fwait
das
pop
sahf
fistps
add
add
add
mov
stos
cmp
or
xchg
xchg
push
pop
mov
xor
ss
loope
aas
lock
add
dec
lea
popf
mov
test
jae
add
add
jg
add
mov
push
xor
icebp
add
clc
shr
inc
add
push
clc
mov
xchg
mov
fsubs
add
fstpt
pushf
mov
mov
ja
clc
mov
add
icebp
popf
and
add
clc
jmp
clc
popf
movsb
clc
test
add
clc
pop
clc
ja
cli
adc
push
mov
push
add
push
clc
repz
add
clc
fsubl
push
nop
cli
aam
or
clc
jnp
add
sbb
mov
aad
insb
add
add
mov
clc
in
cwtl
stos
mov
add
cmp
jmp
mov
add
mov
xchg
cltd
push
mov
mov
jae
add
hlt
dec
jno
add
aaa
push
add
cmc
ljmp
pop
in
daa
clc
mov
stos
xor
clc
cmp
clc
arpl
add
pop
loope
dec
sar
add
pop
clc
and
add
add
add
add
add
mov
clc
clc
pop
push
cmp
clc
dec
js
sub
clc
dec
loope
cmp
in
test
jecxz
sbb
add
xchg
lret
add
sub
or
jns
ficomps
enter
scas
shrl
or
add
in
enter
fisttpll
cmp
mov
ljmp
xor
add
mov
add
or
insb
mov
inc
clc
es
and
add
add
xchg
mov
jno
add
or
clc
mov
adc
add
or
repnz
clc
fstpl
push
iret
sbb
loope
inc
add
jnp
push
add
dec
pmaxsw
add
add
outsb
mov
or
clc
or
xor
add
into
dec
pusha
add
scas
loope
out
hlt
adc
add
adc
add
add
fcmovne
pop
ds
dec
fs
sbb
mov
testl
cmp
and
add
clc
and
add
add
or
mov
int3
clc
xchg
sbb
xor
add
lret
lock
xchg
sbb
js
clc
inc
clc
and
add
cmp
faddl
inc
clc
adc
add
imul
adc
add
pop
repz
fsubl
add
jl
add
clc
sahf
negl
add
clc
xor
add
lret
sub
jnp
clc
xlat
outsl
sar
outsl
sbb
and
add
add
mov
fsubrs
xchg
in
or
aas
cli
jbe
clc
lods
adc
add
clc
jmp
add
add
lcall
clc
pop
popa
add
sbb
push
inc
add
inc
clc
jp
xchg
cmpsb
clc
or
leave
sub
clc
cld
fsubs
add
mov
adc
add
jb
add
cmp
insl
mov
popf
std
cmp
clc
and
add
fnstcw
rorl
clc
fimull
scas
sti
outsl
dec
jbe
cld
mov
sarb
clc
sbb
js
pushl
add
je,pt
jo
add
add
sub
clc
fiaddl
add
jns
bound
add
clc
mov
ja
xchg
mov
jmp
cmp
fwait
movsl
clc
cmpsl
clc
add
add
sub
add
add
add
add
add
in
cmp
clc
in
popa
add
mov
clc
rorl
add
fldlg2
sbb
clc
mov
mov
clc
lock
sub
clc
int3
ss
and
add
mov
add
and
sub
add
clc
movsb
clc
sbb
clc
cli
cmp
cmp
cmp
scas
mov
xor
add
push
outsb
stos
cmp
add
sbb
add
lret
jae
add
dec
cmc
call
js
loopne
fdivrs
xchg
rolb
cmc
sar
add
add
add
out
cwtl
cmp
out
out
and
add
pop
sub
push
mov
lods
ficomps
add
notb
popf
xchg
in
push
add
add
aad
dec
pop
mov
clc
imul
call
clc
mov
and
add
add
in
enter
clc
sub
add
inc
add
fbld
aam
sahf
scas
clc
jmp
and
add
clc
imul
jbe
add
pop
gs
ret
clc
je
mov
jae
add
add
call
clc
data16
xlat
movsb
clc
pop
adc
add
ret
clc
sahf
hlt
mov
mov
fst
popa
add
sub
es
mov
clc
out
pop
pop
push
add
sub
xor
add
ja
sahf
xchg
ja
add
inc
clc
jno
add
clc
clc
fldcw
clc
and
add
aas
cmp
clc
push
decl
add
dec
cmpsb
clc
outsl
mov
addr16
cmp
mov
add
sbb
mov
jb
add
mov
ds
add
insl
xchg
mov
jns
clc
push
in
mov
loopne
decl
in
cmp
clc
inc
add
imul
clc
inc
clc
inc
add
lock
ret
clc
adc
add
add
clc
loop
adc
and
xor
add
jno
add
cmp
add
sbb
clc
xchg
jns
mov
sbb
clc
notb
add
add
add
fdivrp
aas
cmp
mov
fnstenv
add
push
add
or
inc
clc
aaa
jecxz
cmpsb
clc
and
add
sti
stos
jbe
clc
jg
popa
add
and
bound
add
inc
add
aam
clc
repz
cmpsl
clc
xlat
dec
pushf
loope
xchg
loopne
sbb
mov
clc
aam
cwtl
mov
clc
data16
or
add
xchg
xabort
clc
imul
mov
ret
clc
test
es
xor
add
add
ja
arpl
add
add
pop
jne
ds
mov
jle
dec
test
adc
add
add
mov
mov
es
out
mov
xlat
add
add
dec
mov
pop
add
clc
lea
clc
hlt
stos
xchg
jle
mov
clc
cli
add
add
clc
adc
add
clc
scas
loopne
cmp
xor
add
inc
add
pop
div
popf
sub
pop
and
add
clc
mov
add
push
fadds
clc
lods
test
pop
clc
push
aas
xchg
and
add
push
pop
xchg
mov
sbb
and
add
es
enter
add
and
add
add
push
test
add
nop
ucomiss
movsb
clc
pop
xchg
xbegin
loop
jne
clc
int3
hlt
lea
insl
fldl
aaa
fwait
wbinvd
lea
in
push
clc
and
add
loope
aad
xor
lods
pop
aam
add
lcall
std
dec
je
and
add
jae
add
push
add
je
scas
imulb
pop
clc
push
mov
clc
xchg
movsl
clc
lahf
pop
gs
mov
xchg
insl
std
mov
add
es
gs
sbb
pop
push
sahf
add
add
and
add
stc
cmovae
add
mov
clc
lods
test
add
jg
sti
nop
enter
clc
cmp
loopne
mov
mov
mov
clc
dec
adc
add
cmp
add
dec
cwtl
dec
mov
mov
aaa
adc
add
xchg
jl
frstor
scas
pop
mov
cli
xbegin
ss
ret
clc
mov
repnz
inc
clc
dec
push
clc
cmp
or
cmp
add
jno
add
add
std
adc
add
ficompl
clc
enter
add
add
ja
and
add
mov
pop
clc
imul
mov
add
add
add
sbb
aad
out
dec
pop
fadds
xchg
pop
mov
mov
fbld
aad
clc
adc
add
xchg
movsb
clc
insb
scas
mov
add
cld
cmp
add
xor
add
sub
rcr
jl
xchg
loopne
sub
clc
inc
add
mov
cli
sbb
mov
xchg
lret
push
mov
cmp
add
test
xchg
lcall
clc
adc
add
nop
bound
add
or
jge
and
add
lock
jg
inc
clc
sbb
add
push
add
xchg
inc
add
adc
add
mov
in
pop
or
push
mov
sub
pop
stos
cmpsl
clc
jge
lock
adc
add
xlat
mov
mov
pop
fs
in
cmp
xchg
leave
jg
jae
add
push
xchg
sbb
lods
mov
test
jno
add
clc
inc
add
cmpsb
clc
enter
arpl
add
sahf
sbb
xchg
jbe
xor
add
or
stos
push
adc
add
add
xbegin
mov
iret
inc
clc
add
add
mov
movsl
clc
sti
pop
out
ja
inc
clc
inc
add
push
cmp
leave
fldl
in
sub
clc
clc
scas
add
xchg
cmp
clc
decl
or
xchg
ror
mov
test
inc
add
push
clc
jbe
sbb
xor
ds
addr16
lahf
mov
hlt
enter
add
mov
mov
clc
adc
add
bound
add
add
sar
stos
outsb
and
add
bound
add
in
xor
dec
xchg
mov
add
imul
push
add
or
dec
push
add
mov
clc
pop
inc
clc
js
test
mov
cltd
adc
add
sbb
outsb
int
push
inc
clc
jo
add
cs
xchg
cltd
xchg
mov
sar
cli
add
add
add
bound
add
push
pop
clc
push
cmpsl
clc
jbe
aaa
push
cmp
clc
sub
xchg
out
das
fs
jns
sub
clc
pop
sar
push
dec
inc
clc
mov
pop
xor
add
push
or
xchg
sbb
add
add
pop
arpl
add
mov
mov
add
add
test
mov
sahf
mov
lahf
or
add
lcall
cmp
adc
add
dec
mov
add
cmp
sub
push
clc
ja
add
sbb
popa
add
mov
lods
repz
icebp
adc
add
fs
pop
jge
pop
push
add
sahf
adc
add
aad
clc
call
nop
mov
mov
and
add
add
push
add
inc
clc
enter
outsl
mov
addr16
mov
dec
nop
hlt
push
lods
fidivrl
insb
pop
push
sub
sar
mov
movsl
clc
or
pop
pusha
add
lods
in
shlb
cmc
data16
push
pop
lock
add
dec
xchg
imul
shlb
clc
pop
mov
ret
mov
lahf
imul
push
fs
outsl
out
aam
cmpsl
clc
add
add
loope
cmp
add
jg
mov
scas
pushf
pop
jae
add
adc
add
push
add
enter
out
into
movsb
clc
jmp
jno
add
jge
clc
das
faddl
inc
clc
int
mov
add
cmp
add
xor
jecxz
mov
arpl
add
das
xchg
fcompl
scas
mov
clc
mov
add
push
sti
aam
clc
fs
movsb
clc
jnp
mov
or
and
add
clc
cmpsb
clc
fwait
lret
inc
add
push
addr16
adc
add
mov
pop
iret
jno
add
clc
addr16
mov
xchg
adc
add
bnd
pop
mov
loope
shrb
mov
sar
pop
movsb
clc
sbb
test
lods
jecxz
sub
sti
mov
mov
pushf
push
push
add
es
aad
aas
bound
add
inc
clc
mov
inc
clc
push
add
jmp
scas
das
cld
arpl
add
lcall
lods
mov
clc
dec
sar
clc
push
ja
or
clc
dec
sub
lea
add
mov
and
mov
addr16
adc
add
inc
clc
add
add
add
and
add
clc
js
add
sbb
fs
je
into
sbb
adc
add
jno
add
cmp
clc
mov
mov
inc
add
sbb
sar
add
ret
clc
imul
inc
add
in
and
add
add
dec
cmc
fcomp
repz
inc
add
scas
inc
add
jb
add
clc
pop
loop
xchg
xor
add
add
sub
clc
hlt
in
repz
clc
push
cltd
jbe
xor
add
inc
clc
dec
mov
xchg
testb
clc
sahf
mov
enter
loop
or
pusha
add
repz
clc
int
fisubrs
in
clc
daa
clc
insb
loopne
cmp
and
add
icebp
inc
clc
out
jnp
std
fimull
loope
mov
cli
and
add
jo
add
add
pop
clc
and
mov
add
fidivl
add
cld
outsb
test
add
sub
mov
jo
add
mov
add
add
add
or
mov
dec
das
mov
xabort
shll
outsl
aas
out
test
lahf
sbb
add
addr16
add
icebp
cmpsb
clc
fdivrl
xor
add
push
add
data16
jge
sub
add
int3
ss
clc
aas
aam
add
xchg
jne
cmp
clc
adc
clc
dec
jnp
icebp
in
bound
add
clc
jnp
clc
lret
add
jmp
clc
std
xchg
ja
push
add
pop
mov
das
jge
push
pusha
add
into
and
mov
lods
and
sbb
push
outsl
xchg
or
lods
jb
add
inc
add
repz
add
in
nop
xor
add
adc
add
movsl
clc
jl
push
push
add
cmp
sub
add
clc
inc
clc
cmpsl
clc
scas
mov
mov
adc
add
xchg
dec
stos
and
dec
in
jl
add
inc
clc
add
add
pop
int
jg
cltd
xchg
mov
cmp
ret
clc
jg
jmp
adc
outsl
sbb
clc
xchg
dec
filds
add
pop
sbb
xabort
cmp
aaa
mov
cmp
repz
fwait
push
add
fstpl
inc
add
xchg
xbegin
pushf
mov
out
mov
mov
cli
or
clc
push
add
clc
xchg
ds
clc
imul
add
int3
xchg
mov
insl
mov
lock
mov
pop
clc
mov
pop
arpl
add
xbegin
add
addr16
xchg
aam
out
and
add
clc
lret
add
add
clc
pop
icebp
xchg
and
add
mov
push
add
pop
push
add
xor
add
add
loop
add
add
clc
scas
pop
mov
jl
jo
add
add
jge
add
es
inc
clc
cmp
add
ficoml
clc
mov
add
fsub
clc
xchg
test
sbb
push
add
mov
in
stos
or
into
mov
add
add
and
imul
das
mov
add
dec
dec
xchg
pop
sbb
add
loope
inc
clc
icebp
cmp
lock
jp
mov
add
clc
ficoms
insl
xchg
jle
clc
ss
pusha
add
test
adc
sbb
aaa
es
in
outsb
dec
test
fcomp
pop
mov
pop
cmp
add
add
clc
in
data16
aad
and
add
out
lret
jmp
movsb
clc
sahf
outsb
jle
lock
mov
clc
lock
cmp
add
xor
jecxz
mov
mov
add
ret
inc
add
xchg
mov
sub
jp
add
cli
mov
pop
xchg
incl
pop
xchg
adc
add
iret
mov
xbegin
cltd
jb
add
clc
push
add
mov
daa
clc
loopne
adc
add
add
test
scas
fs
dec
sar
clc
mov
sbb
std
ret
clc
xor
add
add
loopne
clc
jmp
clc
dec
mov
add
add
into
xchg
stc
add
xchg
lahf
pop
aaa
or
int3
or
dec
push
add
push
clc
pop
sbb
fidivs
add
clc
int
aam
inc
add
mov
xor
add
push
int3
jne
add
lahf
mov
fmuls
dec
je
popa
add
iret
lods
dec
xchg
cmp
push
test
clc
dec
fstl
jmp
clc
mov
outsl
loope
or
stos
ret
clc
popa
add
gs
pusha
add
ret
ficompl
add
ffree
clc
cli
mov
mov
sahf
mov
clc
xchg
movsb
clc
jno
add
shlb
aas
xor
add
mov
add
pusha
add
xbegin
add
mov
arpl
add
clc
inc
clc
imul
lret
lret
or
clc
jne
and
add
movsb
clc
jp
test
sbb
cltd
mov
fcoms
add
add
cmp
inc
add
add
add
add
xchg
sub
xor
add
add
or
ret
clc
loop
inc
clc
mov
add
jg
add
pop
sub
jecxz
xchg
ds
add
in
mov
aaa
push
mov
add
add
sbb
add
add
sbb
outsb
out
xchg
and
add
sahf
insl
push
or
clc
adc
add
add
add
cmpsb
clc
push
arpl
add
bound
add
int3
popf
lock
clc
sahf
loope
xchg
lret
sahf
or
and
add
mov
add
sub
add
xchg
mov
mov
xchg
std
fiaddl
add
xlat
int3
lods
pop
mov
or
add
mov
add
nop
sub
push
mov
clc
xchg
mov
xchg
sbb
add
in
outsb
mov
rolb
clc
pop
xlat
cmp
call
clc
adc
add
jl
clc
enter
add
repz
add
add
and
add
shll
clc
sbb
aad
rcll
clc
push
and
xor
add
imul
add
add
inc
add
clc
sar
mov
push
clc
push
clc
popa
add
push
add
mov
pop
arpl
add
jne
push
jmp
add
jge
xor
add
add
test
clc
daa
clc
mov
add
hlt
mov
jae
add
push
mov
add
mov
mov
add
and
clc
sub
clc
scas
inc
add
jb
add
add
cmp
shrl
cmpsb
clc
stc
add
add
clc
pop
int3
sar
clc
js
std
push
clc
outsl
xchg
fbld
add
fs
pop
cmc
add
adc
add
clc
out
sbb
pop
clc
push
stos
mov
testl
cld
lods
ja
add
ror
lods
and
pop
jnp
clc
out
daa
clc
nop
stos
mov
dec
pop
mov
push
add
lret
test
cmp
clc
je
add
in
add
add
add
push
call
add
sarl
es
lods
cmp
add
mov
lahf
dec
push
clc
loopne
loop
and
add
pusha
add
pop
adc
add
es
aaa
sar
cmp
int
das
adc
add
clc
enter
xchg
dec
dec
mov
and
add
cwtl
add
sti
out
sbb
int3
or
mov
nop
push
lahf
lret
xchg
push
add
xchg
sahf
jb
add
clc
cwtl
ljmp
pusha
add
xchg
and
add
clc
test
pop
inc
add
daa
clc
fmuls
jmp
outsb
sub
jbe
or
insb
cltd
inc
clc
jbe
int
add
fiadds
add
iret
lock
jg
push
push
add
int
sbb
arpl
add
fstps
clc
fbstp
add
mov
push
sub
jno
add
inc
clc
pop
mov
xabort
sbb
in
push
add
add
dec
repz
add
sti
js
clc
xor
add
mov
pop
clc
outsl
clc
dec
cmp
add
test
cmpsl
clc
insb
js
add
add
cmp
fwait
mov
jbe
dec
popa
add
mov
es
mov
dec
jno
add
add
enter
clc
insl
xbegin
outsl
mov
mov
clc
jne
xchg
or
outsl
gs
test
inc
add
jmp
add
imul
add
mov
push
jecxz
xbegin
data16
fimuls
add
sub
jl
clc
mov
add
bound
add
pop
and
add
add
or
inc
add
pop
clc
push
add
loope
popf
test
clc
mov
cmpsl
clc
fs
fidivl
xchg
stc
mov
clc
fwait
pop
ret
clc
cmp
ret
pop
push
int3
jle
add
push
add
daa
clc
in
lods
or
out
fisttps
out
int
shrd
add
imul
xchg
adc
add
add
cmp
mov
dec
add
out
add
xchg
loope
jo
add
mov
clc
mov
imul
and
add
mov
push
add
push
clc
push
adc
add
addr16
xchg
roll
add
aam
clc
jns
clc
das
add
add
add
jb
add
iret
stos
cmpsl
clc
sbb
add
rcll
add
add
xbegin
clc
jg
clc
ljmp
add
cld
or
add
xbegin
add
add
mov
adc
add
scas
stos
push
fbld
cwtl
imull
insb
and
in
ds
rcl
jnp
clc
cs
out
stc
jg
jl
push
push
notl
add
or
add
out
and
add
mov
inc
add
fcomps
cmp
add
pop
pop
pop
pusha
add
dec
outsb
cli
xchg
push
scas
fimull
mov
mov
xchg
dec
ss
fucomp
ds
fstpt
push
push
mull
add
and
add
jno
add
int
mov
xchg
jae
add
sub
clc
dec
cmp
xor
add
int
pop
mov
dec
dec
mov
clc
pop
mov
js
add
jo
add
popf
lret
add
clc
and
add
xlat
mov
cmp
in
mov
cmpsl
clc
pushf
xadd
into
ja
arpl
add
mov
data16
xor
or
add
add
cmp
xor
add
add
add
push
test
js
add
cmp
mov
mov
mov
mov
mov
add
loopne
cmpsb
clc
sarl
out
mov
inc
add
xchg
jne
fwait
cmp
sysexit
lock
je
add
adc
add
clc
add
add
cmp
xor
add
jb
add
and
add
sbb
call
test
sbb
ret
clc
mov
add
inc
clc
pop
add
add
xbegin
pop
mov
jle
test
fcomps
imull
mov
dec
or
add
loope
filds
xchg
jl
pop
pushf
pop
mov
lcall
dec
jno
add
clc
and
add
loope
rcll
add
mov
cmpsl
clc
cmp
clc
cmpsb
clc
int
mov
mov
add
add
add
mov
add
mov
clc
mov
add
add
clc
xchg
imul
inc
clc
imul
add
and
add
add
movsl
clc
scas
in
fdivs
cmpsl
clc
sti
sbb
clc
xchg
out
das
stos
ja
cwtl
pop
clc
sub
jno
add
icebp
lods
sahf
aad
adc
add
or
lcall
pop
out
sar
sub
call
in
movsl
clc
pop
int
add
jb
add
test
or
jne
and
add
push
push
push
cmp
add
test
addr16
negb
add
pop
bnd
add
sbb
add
ret
clc
xor
add
pop
clc
out
xchg
pop
stos
in
popf
jle
clc
cmp
clc
fwait
pop
mov
add
das
pushf
pop
xchg
jle
jae
add
ret
clc
dec
popa
add
mov
dec
cmp
fwait
mul
clc
fwait
jmp
movsb
clc
stos
lcall
daa
clc
cmpsb
clc
addr16
movsb
clc
aas
push
push
add
aas
pop
cmp
test
clc
sub
adc
add
push
inc
add
and
add
scas
into
dec
push
add
int
and
xor
add
mov
clc
inc
add
jbe
add
stos
add
add
xchg
xbegin
movsl
clc
sti
aam
and
add
clc
jmp
add
lahf
add
add
clc
mov
jle
clc
sar
in
stos
cmp
add
fnstcw
or
cmp
jb
add
clc
in
test
xchg
std
cmp
lods
enter
lods
jp
clc
stc
hlt
adc
add
sar
mov
lods
push
add
iret
dec
jo
add
dec
vmovlhps
fmulp
mov
jne
sbb
ja
clc
call
add
add
push
xor
clc
sub
mov
inc
clc
nop
lahf
repnz
rcl
lods
sbb
add
mov
mov
xor
add
fstps
lcall
clc
mov
xlat
inc
add
data16
dec
or
add
cmp
mov
clc
mov
push
jno
add
fmulp
add
jno
add
out
repz
add
push
add
sub
cmpsb
clc
or
fsts
add
jl
xchg
mov
out
cmp
jno
add
clc
enter
rcll
add
movsl
clc
stos
mov
lods
ja
stos
loope
jle
dec
and
cmp
add
push
addr16
movsb
clc
in
sbb
clc
pop
mov
data16
out
lock
loope
ljmp
test
push
adc
add
sahf
pop
scas
or
iret
add
push
mov
imul
add
test
loop
push
inc
clc
dec
in
sbb
xchg
mov
sub
fcmovnbe
jecxz
or
fdivs
add
movsl
clc
adc
clc
out
lret
pop
bound
add
stc
insb
lock
add
loop
pop
stc
mov
clc
jae
add
clc
out
add
add
inc
add
adc
add
dec
insl
add
add
jb
add
bsf
loopne
je
sbb
es
mov
cmp
add
add
xor
add
clc
mov
push
sub
clc
mov
dec
ret
clc
scas
pop
sahf
sbb
lock
add
xchg
ja
clc
dec
int
add
cli
jne
jno
add
add
add
mov
sbb
daa
clc
cmp
dec
in
punpckhbw
out
pop
or
je
cmp
add
cmp
push
add
ja
inc
add
pop
pop
in
jns
inc
add
cmc
pop
sbb
mov
cmp
js
jb
add
xchg
sub
clc
pop
data16
ficompl
leave
rorb
cmp
clc
stc
cmp
or
and
add
xchg
push
push
out
in
xor
add
mov
xor
add
loop,pn
not
sbb
add
add
xor
add
add
xor
add
ret
clc
adc
jmp
iret
mov
jp
clc
cld
es
lahf
mov
pop
insb
fmulp
call
add
int
scas
fimuls
add
fwait
jo
add
jae
add
add
clc
jmp
in
adc
add
cmp
jl
xchg
push
pusha
add
iret
adc
add
clc
sub
or
and
add
clc
push
mov
push
scas
sub
clc
xor
add
clc
xchg
enter
dec
pop
fabs
clc
clc
mov
cmpsl
clc
cmp
push
inc
clc
sub
push
adc
imulb
mov
clc
cmpsl
clc
pop
jmp
xor
add
sbb
add
cli
sbb
jae
add
clc
dec
je
lret
push
add
cmpsb
clc
add
add
jo,pt
add
push
add
xchg
mov
add
adc
push
add
ja
xor
add
mov
clc
inc
add
mov
xbegin
sbb
mov
std
ljmp
add
xlat
mov
add
rol
clc
jge,pt
add
lcall
clc
mov
mov
mov
and
dec
xor
cld
jno
add
mov
and
add
mov
stos
push
clc
mov
cs
clc
or
xchg
push
mov
jne
clc
out
test
bnd
add
clc
sub
add
dec
mov
cmp
inc
add
sbb
xchg
push
aad
cmp
and
add
sbb
lret
fcmovnb
clc
sbb
clc
ljmp
clc
and
jecxz
and
add
add
mov
lock
lock
add
leave
pandn
clc
or
jb
add
jo
add
inc
add
xlat
push
add
mov
aad
add
aas
lock
lcall
scas
fs
test
lods
inc
clc
pushf
pop
ret
push
ljmp
add
inc
clc
into
push
clc
mov
add
xor
xchg
sbb
xbegin
jge
jb
add
add
ss
add
xchg
call
cmp
rcr
pop
sub
ficompl
clc
jns
push
clc
mov
add
add
xor
add
es
inc
add
push
sbb
xor
add
clc
test
xchg
mov
mov
add
mov
clc
push
add
scas
test
add
cmc
dec
dec
fnstenv
add
add
jp
clc
cmp
add
ja
clc
push
cmp
add
stos
sti
setle
fcmovnbe
adc
add
clc
or
add
pop
out
xor
add
inc
add
call
pop
cmpsl
clc
push
add
cmpsb
clc
out
or
add
jno
add
add
clc
rorl
xabort
imul
bound
add
and
xor
add
in
xchg
scas
jmp
ja
ret
fmull
clc
mov
fsubr
out
jnp
add
push
dec
add
add
add
pop
clc
jl
clc
insb
cmp
add
pop
cmp
or
add
add
pushf
xchg
and
add
xor
xor
sar
sahf
cmp
cmc
jecxz
ret
push
out
data16
pop
sub
clc
ret
clc
pop
push
add
addr16
mov
insl
bound
add
inc
add
mov
clc
popa
add
xchg
outsl
loop
add
outsb
aam
jecxz
clc
pop
xchg
cld
push
clc
sub
xbegin
clc
inc
clc
repz
idiv
bswap
mov
add
jmp
clc
enter
push
shlb
add
inc
add
mov
pusha
add
inc
add
jmp
add
out
mov
or
test
clc
lods
movsl
clc
test
clc
jno
add
add
jnp
fistps
rcrb
push
cmp
mov
outsl
repnz
adc
add
add
adc
add
add
sbb
xlat
cmp
clc
imul
add
push
add
mov
clc
or
mov
inc
clc
mov
clc
outsl
jge
add
push
xlat
mov
add
clc
in
cli
xbegin
iret
add
add
add
clc
enter
clc
addr16
cmpsb
clc
mov
jecxz
jmp
inc
clc
sub
loop
out
xor
add
outsl
daa
clc
scas
out
sar
test
clc
add
add
stos
push
clc
pushf
mov
push
mov
add
stos
sti
fstpl
rolb
add
sub
clc
lods
stos
out
iret
vorps
pop
jno
add
inc
clc
stos
mov
cmp
out
add
and
dec
sub
in
movsl
clc
idivl
push
mov
lcall
clc
inc
add
cld
daa
clc
xchg
or
clc
rclb
clc
jb
add
or
dec
jo
add
out
inc
clc
mov
adc
add
inc
clc
in
cmpsl
clc
js
test
imul
stos
cmp
pop
and
adc
inc
add
fldenv
negb
sbb
add
add
fstps
in
push
sti
cmp
jecxz
cmp
add
js
adc
out
fstps
pop
xchg
adc
add
adc
add
insb
push
mov
add
cltd
and
outsb
xor
add
imul
mov
jbe
push
push
add
sbb
adc
add
add
add
sbb
imul
clc
sub
je
add
cmp
or
es
bound
add
jae
add
xor
add
add
popl
cmp
imulb
out
jae
add
add
xchg
sub
clc
rclb
jge
clc
inc
clc
lcall
test
xlat
dec
aaa
loopne
fnstcw
push
add
sar
pop
mov
clc
sbb
push
add
lods
adc
add
mov
cmpsl
clc
addr16
outsl
shll
add
mov
jmp
mov
push
or
icebp
cmp
add
add
pop
cltd
pop
int
push
add
and
add
add
aaa
inc
clc
outsl
xor
add
clc
pop
cli
popa
add
lahf
add
add
cmc
push
mov
clc
cmp
clc
or
cmp
clc
mov
add
add
jecxz
xchg
aas
dec
add
add
clc
inc
clc
push
add
push
clc
mov
add
sahf
pop
xchg
cld
sbb
add
jmp
add
add
jge
add
mov
add
inc
clc
mov
jne
clc
dec
push
xor
add
stc
and
insl
jno
add
add
pusha
add
clc
addr16
mov
iret
stc
push
fisubrs
mov
add
stos
call
add
gs
repz
lock
clc
arpl
add
data16
pop
sub
sub
clc
cwtl
rcll
add
xchg
clc
clc
shll
add
loopne
ss
rorl
inc
clc
jnp
add
ljmp
add
cmp
lret
inc
add
xchg
push
lahf
pop
clc
ja
cwtl
das
dec
push
sub
dec
clc
lret
add
lcall
add
add
fistpl
cmp
pop
pop
cmp
pop
stos
adc
add
mov
int
xor
add
jb
add
jg
adc
add
add
xor
push
add
test
clc
pop
das
or
push
stos
ret
sbb
xchg
jno
add
add
inc
add
aaa
sub
xor
add
addr16
mov
push
clc
out
dec
ret
clc
sahf
mov
clc
xchg
faddl
neg
int
xchg
sub
int
clc
lret
jg
in
jge
clc
xor
add
jb
add
clc
mov
outsl
loope
insl
mov
jns
cmp
clc
inc
clc
sar
jne
adc
add
add
sar
jae
add
fldt
pop
lahf
aad
in
pusha
add
xor
add
sahf
nop
repnz
dec
and
clc
and
add
dec
cli
jae
add
add
sbb
inc
add
nop
xor
add
cltd
int
jg
add
pop
clc
imul
push
test
jnp
add
add
clc
movsb
clc
and
add
add
mov
hlt
int
push
add
mov
sub
bound
add
clc
stos
mov
add
sub
pop
clc
adc
add
test
fwait
mov
mov
in
cld
dec
aad
cmp
pop
jnp,pt
mov
adc
add
addr16
loope
out
test
add
lahf
insl
inc
clc
cld
pop
push
add
leave
sarb
mov
dec
inc
clc
pop
clc
adc
add
popf
int
pop
mov
ret
clc
jle
and
add
clc
nop
jns
add
mov
xchg
mov
aas
jg
sar
daa
clc
sbb
clc
and
insl
aam
popa
add
sbb
add
push
and
add
rorb
add
xor
add
movsl
clc
pushf
mov
clc
clc
cmp
cmpsl
clc
push
fnsave
add
add
add
fwait
mov
sbb
clc
imul
clc
pop
clc
fildl
bound
add
add
clc
clc
lods
jno
add
dec
xchg
fstp
jge
rcrl
pop
add
dec
rclb
mov
lea
loop
dec
sbb
clc
aam
out
xchg
push
pushf
add
incl
clc
arpl
add
clc
and
data16
clc
notb
shrl
push
ja
add
mov
sbb
pop
add
xor
add
imul
lahf
mov
jo
add
xor
scas
and
add
xchg
in
jle
sub
enter
add
inc
add
icebp
xchg
add
add
xor
cmp
and
add
mov
pop
cmp
clc
lods
mov
leave
repnz
clc
ret
clc
or
inc
clc
dec
das
rorb
mov
and
add
inc
clc
ret
pop
je
mov
lahf
cmpsb
clc
mov
lret
add
pushf
shlb
mov
push
outsb
mov
add
xchg
jmp
mov
add
lods
xchg
idivl
cmpsl
clc
add
xchg
aam
mov
push
add
jae
add
jl
jle
mov
repz
lods
cmp
mov
add
add
add
xchg
test
and
add
clc
std
xor
add
dec
cmp
pop
pop
ds
add
test
cmp
and
add
lret
shrl
sub
sub
clc
jmp
mov
add
push
mov
pop
aaa
or
out
mov
add
xor
add
bound
add
cwtl
jbe
clc
das
sbb
clc
fildll
dec
rcrl
mov
clc
insb
mov
ret
add
xchg
add
mov
add
out
sbb
clc
popf
lods
jle
clc
jg
mov
pop
rclb
jmp
nop
pop
clc
sbb
add
adc
add
fldl2e
inc
clc
dec
mov
lcall
sub
int
pop
inc
clc
aam
add
mov
rcl
pusha
add
xchg
shll
clc
ffree
clc
stos
fs
dec
mov
stos
gs
stc
or
dec
add
xlat
fwait
inc
clc
clc
sbb
aaa
movsl
clc
jbe
mov
popa
add
loopne
in
pop
cmp
add
mov
clc
xchg
mov
add
pop
or
clc
xor
add
test
add
mov
inc
clc
dec
nop
mov
add
mov
cmpsb
clc
dec
and
add
push
add
mov
pop
enter
add
xchg
js
mov
add
dec
repnz
add
add
push
clc
push
mov
pop
imul
cmpsl
clc
aas
jl
add
add
jns
adc
inc
add
or
test
clc
arpl
add
cmp
inc
add
idiv
jmp
cmc
or
add
lods
inc
clc
rorb
lret
add
popf
pop
mulb
clc
test
clc
xor
add
add
clc
insb
pushf
inc
add
fs
mov
add
or
cmp
add
pop
loope
mov
clc
push
inc
clc
movsb
clc
repz
add
cmp
sub
add
sbb
xchg
pop
insb
dec
stos
cwtl
addr16
fs
ljmp
or
clc
add
add
mov
add
cmp
clc
ds
iret
loope
pop
stos
scas
cmc
sbb
pop
aaa
dec
dec
sub
add
add
cmp
add
fmul
inc
clc
insb
jg
ficoms
repnz
scas
add
add
xlat
pop
je
clc
or
dec
pop
xchg
mov
data16
xor
add
push
add
rcll
add
sahf
mov
clc
jmp
clc
jl
add
jecxz
jmp
clc
push
add
mov
clc
sar
fs
pop
imul
add
mov
cmp
add
sahf
jo
add
add
inc
add
mov
outsb
ss
add
sar
lea
fidivrs
psubb
mov
push
lcall
and
add
out
clc
das
ret
clc
vmovups
add
test
lods
fistl
add
sahf
xchg
cli
mov
clc
insb
cmp
clc
add
add
lret
pushf
lea
clc
shlb
add
add
add
sub
insl
xor
add
mov
add
in
jg
clc
dec
cmp
clc
inc
add
push
or
add
insb
jo
add
add
call
push
xchg
pop
fidivs
lcall
test
cmp
imul
push
inc
add
fcompl
dec
pushf
stos
dec
cmpsl
clc
xor
add
ss
inc
clc
fidivs
add
clc
jns
sbb
push
clc
adc
add
add
loope
sbb
add
fs
mov
daa
clc
sar
ds
sbb
stos
nop
push
add
and
shl
jp
int3
fisttpll
decl
sbb
addr16
push
lods
mov
push
clc
add
add
ss
ret
add
ror
xor
cmp
mov
add
inc
add
loope
icebp
adc
mov
dec
pusha
add
jo
add
add
add
add
add
add
add
clc
dec
out
xchg
test
clc
jmp
add
jl
fs
xlat
push
cmp
clc
gs
fbld
in
sar
clc
mov
add
clc
aam
ss
pop
enter
stc
pop
jg
add
lock
pop
cmp
clc
or
nop
outsl
std
pop
clc
push
add
pop
clc
mov
sbb
add
push
pop
mov
clc
sbb
adc
add
sub
add
sbb
clc
adc
add
inc
add
sub
pop
xchg
mov
add
add
out
mul
clc
fcomps
lret
call
fistpll
sti
aam
clc
pushf
fs
push
add
lret
cmp
add
pushf
push
lret
nopl
pop
mov
dec
inc
clc
xchg
notl
pop
lahf
jnp
xchg
and
add
ds
pop
mov
add
jae
add
clc
loopne
test
clc
sub
push
out
test
xchg
outsl
ret
clc
insb
insb
test
add
add
xabort
int
adc
add
clc
xchg
int
clc
pop
adc
add
mov
add
jmp
icebp
std
jo
add
cmc
test
jb
add
push
add
sar
clc
aad
clc
out
xchg
test
mov
enter
out
mov
pop
dec
das
push
add
fs
in
mov
jo
add
cld
push
repnz
mov
lret
sbb
add
clc
sbb
loope
cmp
pop
es
mov
xchg
xbegin
cmp
mov
imul
jecxz
pop
clc
pop
pushf
popa
add
jmp
addr16
cmp
mov
push
stos
repz
jnp
ret
clc
hlt
scas
push
ljmp
mov
sar
scas
ret
pop
adc
add
pop
shlb
add
jmp
icebp
sbb
add
outsb
inc
clc
incb
ds
sar
and
add
add
jb
add
clc
pushf
das
pop
sub
adc
add
add
xabort
cmp
lahf
and
jmp
clc
jbe
add
mov
and
add
fs
int3
psubq
lods
out
fistps
sysret
clc
dec
lcall
add
mov
xchg
jp
clc
ss
adc
clc
cmp
ds
jmp
out
add
add
clc
into
rclb
add
test
inc
clc
popf
mov
aas
test
jo
add
add
adc
add
cmp
add
mov
stc
add
das
stos
sub
xchg
and
add
jno
add
in
scas
sub
mov
icebp
fnstcw
jmp
stc
repnz
clc
sub
cli
inc
clc
out
mov
enter
add
add
popf
fs
mov
add
clc
jo
add
clc
sgdtl
add
outsl
cmp
clc
or
sbb
mov
insl
icebp
arpl
add
push
add
jmp
add
clc
call
cli
push
idivb
clc
sub
add
js
push
enter
and
add
pop
and
jbe
xchg
in
dec
jbe
clc
mov
pop
sahf
push
jge
mov
add
stos
adc
add
clc
or
mov
rcrl
jb
add
mov
clc
lock
inc
clc
insl
and
add
inc
add
and
add
daa
clc
inc
clc
js
ret
xchg
out
sub
push
clc
test
xchg
das
adc
add
arpl
add
sbb
data16
mov
add
gs
dec
testb
cmp
rol
clc
rcr
fwait
jmp
inc
add
push
add
or
add
loopne
in
scas
sbb
inc
add
test
ucomiss
fs
or
mov
and
add
bound
add
sub
clc
aas
jge
clc
inc
add
sar
not
jns
cmp
add
add
loope
mov
add
inc
clc
lcall
cwtl
xchg
push
fdivrs
add
push
add
mov
add
add
xchg
xor
clc
call
fstl
sbb
clc
sub
pop
int
add
jecxz
xchg
test
add
mov
mov
or
pop
xor
clc
add
add
xor
add
clc
sub
sbb
lods
ss
clc
jne
add
and
mov
add
clc
or
test
cli
mov
in
fs
out
fildl
add
fbld
clc
jge
cmp
clc
pop
cmp
cltd
fists
add
pop
inc
add
sbb
aaa
inc
clc
test
scas
imul
cmp
pop
fnstsw
add
pop
xor
add
mov
cmp
add
repnz
dec
mov
xor
add
inc
add
push
add
and
add
inc
clc
mov
add
dec
loop
mov
add
jmp
clc
push
add
sub
clc
jge
iret
icebp
insb
push
add
add
das
enter
push
enter
push
aas
mov
inc
add
cmp
clc
jmp
add
lahf
jge
daa
clc
inc
add
shll
sar
int
clc
lret
test
clc
xchg
loopne
xor
add
sub
add
jno
add
clc
rcr
pusha
add
sbb
clc
mov
je
mov
test
add
xchg
or
push
je
cmp
push
add
fwait
jo
add
add
push
add
cmp
jnp
int3
adc
add
push
rolb
clc
dec
mov
dec
es
sub
pop
scas
inc
clc
scas
enter
push
push
add
fsubr
aam
push
mov
clc
cmp
clc
adc
clc
je
clc
cwtl
mov
inc
add
add
add
sub
lea
jno
add
mov
clc
sbb
jl
ja
add
pop
jo
add
add
iret
xchg
cmp
clc
stos
push
in
fnsave
jne
jge
jl
add
pop
mov
jecxz
pop
pop
clc
dec
add
add
add
pop
jle
jnp
loopne
ljmp
clc
stos
sbb
add
clc
dec
cmpsl
clc
lahf
xor
enter
add
cmc
nop
xchg
xchg
clc
sahf
lock
or
jbe
es
loopne
bound
add
add
jl
clc
shll
pushf
pop
mov
add
lea
clc
and
add
repnz
iret
sbb
and
add
jmp
clc
add
add
sbb
clc
jg
add
hlt
push
add
push
add
cmp
add
mov
add
jg
mov
xchg
dec
vmulps
call
clc
ret
clc
lods
dec
lods
cmp
jge
dec
in
sahf
cmp
jp
clc
mov
clc
notl
add
insl
cltd
xchg
and
add
cmp
clc
cmp
add
inc
add
inc
clc
push
add
cmp
clc
dec
out
ror
sub
es
mov
clc
fdiv
mov
mov
clc
data16
pop
pop
rcrb
mov
jo
add
add
rorl
pop
inc
add
ret
add
pop
mov
clc
and
add
clc
fwait
xor
add
clc
inc
add
sub
cmp
in
enter
clc
xor
mov
das
fdivl
outsb
js
mov
hlt
pop
aam
inc
clc
in
cmp
faddl
add
mov
lock
sbb
in
dec
data16
aam
mov
inc
add
xbegin
pop
jnp
clc
ret
mov
cmp
clc
pop
jno
add
clc
sahf
or
clc
and
add
add
leave
and
add
add
mov
add
xchg
rcll
leave
test
jo
add
add
push
add
add
add
sbb
dec
adc
add
and
add
add
repz
repz
add
adc
add
clc
and
add
add
insl
cmpxchg
mov
add
sbb
cwtl
mov
aad
add
inc
clc
cmp
clc
pop
aam
ret
cmp
or
in
cmp
add
mov
in
sub
iret
in
sbb
add
jne
scas
push
clc
mov
add
dec
xchg
sar
clc
int
add
inc
clc
out
int3
xabort
sar
clc
mov
add
bound
add
mov
test
scas
mov
daa
clc
xchg
hlt
add
mov
mov
clc
outsb
lret
xchg
clc
gs
mov
and
pop
iret
lret
xor
add
add
out
cmp
clc
add
add
sahf
pop
jnp
clc
ffree
clc
xchg
mov
cmpsb
clc
hlt
pop
and
add
cmp
xchg
push
add
add
add
clc
sub
adc
clc
and
jbe
into
ret
clc
pop
mov
add
pop
icebp
sar
push
add
dec
lock
iret
sub
pop
or
add
jo
add
and
add
add
out
arpl
add
jns
clc
xchg
cmp
clc
int
clc
mov
sub
pop
mov
add
outsb
leave
push
cmp
add
clc
repz
decb
pop
ss
clc
inc
clc
or
xchg
jle
cmp
sbb
clc
cmp
lcall
clc
pop
mov
cmc
push
inc
clc
mov
mov
stos
dec
out
es
cmpsl
clc
cmp
pusha
add
inc
clc
cmp
clc
xor
add
push
inc
clc
sar
test
pop
sarb
add
add
insb
jne
xabort
clc
aaa
cmp
clc
adc
add
and
add
stos
jle
clc
movsb
clc
sub
ret
clc
faddl
add
mov
hlt
lret
bound
add
xchg
ret
pop
xchg
scas
inc
add
add
gs
bound
add
dec
xchg
scas
icebp
outsl
jp
stos
mov
clc
shrb
push
loope
jnp
mov
lea
in
clc
push
add
or
dec
je
add
mov
add
cmp
cmp
clc
add
add
add
adc
add
xor
add
mov
mov
add
stc
push
scas
and
add
clc
in
jne
xchg
pop
clc
sahf
and
add
dec
jmp
shll
das
cwtl
jle
push
add
cmc
repz
stos
push
add
popf
cmpsb
clc
ss
add
add
inc
add
out
jle
ret
clc
call
add
lods
mov
mov
clc
mov
clc
jge
jns
jbe
dec
cmp
add
add
cmp
scas
inc
clc
dec
test
rolb
idiv
out
popa
add
lea
add
xchg
lods
je
sbb
clc
jns
pop
ret
clc
aaa
leave
out
fildl
cmp
xlat
mov
cmp
xchg
in
jecxz
lea
xor
dec
into
xchg
nop
mov
pushf
repnz
loop
mov
pushf
and
fisubrs
sub
xabort
xor
add
divl
add
clc
mov
iret
adc
add
or
repz
fwait
jb
add
clc
lret
or
clc
lahf
inc
add
xor
add
dec
addr16
mov
lret
xchg
adc
adc
add
ret
clc
sbb
clc
pop
fsubrs
add
mov
adc
fldl
mov
test
clc
repz
pop
clc
cmpsb
clc
insb
js
iret
mov
arpl
add
stc
dec
lock
xor
add
clc
mov
and
add
jge
mov
mov
push
inc
clc
pop
mov
clc
in
dec
gs
push
and
inc
clc
sti
mov
clc
sbb
inc
add
mov
xor
add
jl
testl
sub
mov
push
test
clc
cli
enter
add
cmp
mov
scas
pushf
mov
add
fstpl
cmp
add
rcll
stc
js
sub
rorl
ja
clc
sub
clc
pop
push
jno
add
clc
arpl
add
push
mov
int3
cmc
xlat
int3
jecxz
out
cmp
dec
hlt
leave
push
pusha
add
cmp
cltd
and
add
or
pop
mov
add
sbb
dec
aam
pop
inc
add
sbb
pop
clc
inc
add
lahf
mov
mov
add
add
lcall
and
add
into
mov
jmp
fs
mov
mov
push
add
sub
sub
add
sbb
xbegin
and
add
push
xor
add
clc
mov
dec
mov
mov
clc
mov
data16
cwtl
jg
clc
xchg
jae
add
out
xor
add
xor
add
mov
clc
stos
int
fildll
mov
lock
dec
sahf
bound
add
repz
xchg
cmp
add
ljmp
clc
jo
add
push
add
or
clc
xlat
sub
add
jmp
add
and
add
add
mov
adc
add
clc
out
adc
add
clc
inc
add
push
add
jecxz
add
add
add
xchg
xabort
clc
pusha
add
icebp
cltd
pop
xlat
pop
addr16
scas
bound
add
add
in
cmp
add
jge
clc
adc
add
in
imul
clc
xor
add
add
xchg
xlat
inc
clc
dec
push
add
jge
fwait
sar
dec
cmp
clc
cmp
sbb
pop
push
js
ljmp
mov
add
clc
dec
test
sbb
xchg
sub
add
pushf
mov
and
sbb
add
test
cmp
and
add
adc
add
aas
aas
sti
cmp
and
pop
sbb
add
inc
add
jg
cli
xchg
push
jnp
clc
dec
lcall
xor
add
add
mov
out
and
add
add
xchg
cmp
fcmovbe
test
loope
outsb
push
add
sbb
add
lock
test
sti
ss
cltd
dec
lahf
sub
add
ss
repnz
add
mov
push
lock
sub
clc
jle
fldcw
add
and
add
add
or
add
insl
or
add
pop
xabort
ja
xbegin
jmp
add
movsb
clc
pop
jmp
clc
xbegin
popf
leave
mov
push
clc
sub
data16
fucomip
mov
insl
hlt
jns
add
clc
loope
xabort
clc
test
gs
xchg
repz
arpl
add
pop
cli
sub
add
xchg
and
mov
out
das
test
daa
clc
adc
add
add
and
add
cmc
jae
add
iret
ljmp
mov
clc
rcrl
jge
clc
cld
sub
add
add
inc
clc
xlat
mov
sbb
xlat
insb
xabort
aad
clc
mov
xor
add
pop
nopl
clc
mulb
jnp
mov
jo
add
cwtl
fwait
or
push
add
add
adc
or
imul
push
xor
add
or
clc
data16
mov
cmp
pop
inc
clc
mov
cmovo
add
cmp
cmpsl
clc
pop
xchg
lcall
out
jns
js
add
jl
data16
sbb
stos
adc
add
clc
xchg
cmp
add
add
jle
add
or
add
add
adc
fisubrl
sti
pop
pop
mov
mov
cmp
stos
or
add
dec
out
mov
jae
add
push
xlat
data16
and
add
add
clc
cld
sti
cmp
clc
push
and
clc
or
mov
clc
xchg
movsl
clc
dec
inc
clc
aaa
mov
add
add
mov
add
jbe
add
test
pop
repnz
clc
push
stos
jbe
shrl
lods
movsl
clc
mov
rcrl
icebp
xor
add
jo
add
and
add
add
cmp
clc
mov
scas
stos
mov
pop
push
add
jmp
add
add
jbe
clc
fwait
bndstx
dec
out
mov
cmpsl
clc
jg
mov
into
inc
add
jl
mov
mov
xchg
jnp
add
cmp
aaa
pusha
add
adc
clc
enter
add
push
adc
add
cmp
add
repz
clc
dec
dec
xor
clc
iret
pop
clc
icebp
fsts
mov
xchg
popa
add
sbb
adc
add
clc
icebp
sub
gs
into
or
test
mov
xchg
mov
clc
or
clc
sub
sub
clc
pop
sti
js
clc
adc
add
add
das
sbb
mov
dec
mov
popf
jne
add
jp
sub
imul
lcall
lods
cmp
jge
clc
cwtl
fiadds
add
add
clc
loop
fistpll
add
jne
clc
pop
clc
adc
add
clc
scas
lock
into
sub
add
bound
add
push
clc
cmp
loop
push
add
aas
loop
adc
add
inc
add
aad
inc
clc
adc
add
xchg
imul
add
xor
add
mov
xchg
outsb
pop
and
add
clc
testl
mov
fs
cmp
push
add
sbb
clc
xchg
push
or
pushf
mov
add
scas
mov
add
clc
iret
stos
in
xchg
iret
fmul
jmp
add
insl
movsl
clc
mov
mov
add
stos
test
fildll
lock
add
add
xor
add
pop
aaa
mov
clc
pop
clc
repnz
jecxz
fcomip
mov
stc
mov
inc
clc
outsl
xabort
lret
popa
add
xchg
iret
int
lahf
sbb
inc
clc
add
in
imul
divb
adc
add
in
sbb
push
add
in
mov
repz
in
aad
clc
ret
into
push
pusha
add
jnp
es
xor
add
jnp
mov
icebp
imul
rcl
ljmp
pop
sbb
clc
and
add
clc
pop
je
stc
out
test
fsubl
clc
clc
mov
clc
cmp
lea
stc
pop
mov
add
stc
mov
xor
ret
popf
das
loop
cmp
sarb
dec
negl
mov
clc
mov
clc
je
jns
scas
and
add
cmp
or
dec
cwtl
adc
add
mov
jecxz
add
shl
pop
clc
pusha
add
push
add
sbb
int
pop
in
jle
mov
add
mov
imul
and
add
cmpsl
clc
push
clc
mov
dec
push
add
into
ret
clc
jge
into
mov
clc
xchg
sub
clc
inc
add
stos
jge
add
push
fsubrs
mov
je
add
imul
popa
add
xchg
in
xchg
je
push
clc
scas
out
mov
dec
sub
mov
add
add
clc
and
add
or
add
xchg
cmp
clc
jb
add
mov
sete
add
add
clc
adc
add
push
mov
sub
dec
push
jmp
clc
pusha
add
mov
repz
ss
aas
jmp
sar
clc
fcompl
push
add
js
clc
lods
rolb
nop
inc
add
jne
repz
clc
cmc
push
mov
das
mov
inc
clc
push
and
add
xchg
or
push
adc
add
imul
add
stos
add
add
add
imull
fstpt
outsb
aad
dec
outsb
fwait
xor
add
mul
clc
jno
adc
or
imul
clc
xchg
mov
jns
or
inc
add
dec
mov
cmpsb
clc
add
add
imul
add
lret
inc
clc
loop
push
gs
sub
xor
add
iret
pop
inc
clc
dec
xabort
lret
mov
xchg
iret
jg
lret
jns
lock
out
cli
xchg
aaa
xor
add
add
cmp
stos
arpl
add
dec
inc
clc
xor
add
clc
and
add
add
ljmp
loopne
xor
sub
add
shlb
add
add
clc
and
add
add
add
add
lahf
fstl
add
out
out
push
mov
add
clc
out
dec
cli
ficoms
clc
mov
daa
clc
dec
or
clc
xchg
jnp
hlt
sbb
aaa
dec
jg
fwait
loopne
mov
mov
xor
add
cld
cmp
clc
cwtl
sar
inc
clc
div
or
ret
dec
add
add
xchg
imul
add
pop
rclb
clc
stc
repnz
jge
clc
jno
add
adc
add
add
clc
cmovb
add
test
cmpsb
clc
sub
in
and
add
pop
stc
inc
add
and
mov
adc
add
in
and
add
add
sbb
add
mov
xchg
mov
push
inc
add
sar
icebp
pop
sbb
inc
add
add
adc
mov
add
mov
mov
cmpsl
clc
movsb
clc
inc
clc
sbb
mov
add
inc
add
sbb
test
jo
add
add
cli
std
inc
add
pop
mov
pop
push
div
fistps
insl
and
je
aad
cmp
lcall
cmpsl
clc
xabort
lret
stc
cmp
scas
ss
dec
sar
or
cmp
mov
or
sub
add
imul
flds
add
fiaddl
clc
ret
clc
xchg
mov
add
stos
clc
xchg
xor
int3
icebp
sub
clc
dec
jb
add
add
add
aaa
int
das
test
xchg
mov
outsb
sub
pop
push
fisubl
add
clc
rolb
iret
lret
add
addr16
lods
flds
shlb
clc
cld
or
pop
mov
data16
dec
or
cs
clc
jl
int
pop
push
add
ret
call
add
add
mov
cmp
mov
clc
mov
mov
and
add
dec
push
lods
fs
xchg
mov
clc
ret
clc
sbb
lods
jns
inc
add
lahf
xchg
or
add
bound
add
clc
popf
jg
add
inc
clc
sahf
dec
fcoml
mov
dec
sub
lcall
inc
clc
cmc
push
imul
clc
push
inc
add
sbb
add
insb
es
jecxz
popa
add
or
add
fs
enter
clc
enter
leave
lret
cmp
mov
or
add
mov
cwtl
notl
add
jl
clc
xor
add
clc
int
call
call
add
lahf
add
add
stos
cmp
jg
xchg
lcall
inc
add
jbe
add
das
out
movsb
clc
add
clc
clc
mov
xchg
fcoml
add
push
sti
inc
add
xchg
adc
add
xchg
xchg
dec
fimull
cmp
clc
push
icebp
aad
add
cmp
xchg
cmp
sarl
jmp
ljmp
pushf
pop
out
inc
clc
adc
movsl
clc
inc
clc
sbb
pop
mov
js
sbb
cmp
fistpll
or
mov
xchg
or
push
add
mov
sub
clc
cmp
adc
add
mov
add
not
or
arpl
add
movsb
clc
add
add
add
test
add
fidivs
ret
clc
imul
cs
mov
jecxz
sbb
lods
push
add
cltd
jnp
and
add
or
inc
add
xchg
pusha
add
mov
xor
clc
mov
mov
mov
add
lock
cmc
jne
hlt
lret
mov
mov
insl
fs
lods
jecxz
repnz
or
add
rorl
add
add
add
jmp
lods
mov
or
roll
clc
xbegin
add
dec
xor
add
clc
imul
add
inc
clc
decb
pusha
add
dec
test
add
pop
pop
or
mov
scas
xchg
xchg
sbb
push
test
aas
cmpsb
clc
scas
pop
sub
clc
sub
xor
add
notb
add
add
sub
pop
inc
clc
mov
add
aaa
sub
mov
test
clc
jno
add
add
repnz
add
xor
add
test
mov
mov
adc
add
add
lcall
clc
xor
add
xchg
xchg
push
add
inc
clc
jg
add
push
clc
pop
in
sar
sbb
nop
push
add
lret
push
or
loopne
dec
pop
lods
cmpsb
clc
sbb
clc
mov
cmp
add
lret
add
add
push
clc
and
add
pusha
add
push
add
add
add
clc
mov
clc
adc
aam
dec
jge
into
roll
aas
jb
add
xchg
dec
mov
js
addr16
xor
add
xchg
gs
jns
add
dec
movsl
clc
fdivp
pop
xchg
dec
dec
mov
enter
or
dec
js
pop
jecxz
push
xor
add
sbb
ds
clc
xchg
outsl
faddl
add
int
add
sti
add
aam
std
pop
clc
mov
in
in
stos
adc
notl
add
xchg
mov
clc
inc
add
dec
cwtl
popl
sbb
clc
stos
pop
je
clc
add
push
leave
sbb
clc
cmp
cmp
push
clc
repz
add
clc
cmp
xor
clc
xor
add
clc
add
add
mov
jns
sub
push
add
in
sbb
add
pop
clc
rcl
cmp
add
add
clc
jns
clc
repnz
sbb
lea
sub
sub
inc
add
cs
mov
xchg
outsl
adc
add
xor
add
mov
mov
add
sar
inc
add
repz
cltd
push
mov
clc
cmp
add
out
mov
mov
add
js
lods
push
jns
lret
push
fldenv
mov
data16
imul
clc
rcrb
add
inc
clc
xor
add
inc
clc
mov
xlat
leave
pop
repz
sub
cmp
data16
and
add
add
ss
push
imul
dec
inc
clc
cmpsl
clc
popf
pushf
add
add
xchg
iret
rcll
add
add
cs
imul
add
xbegin
iret
inc
clc
adc
add
add
adc
add
testl
clc
mov
add
add
cmpsb
clc
div
sub
mov
add
push
clc
and
add
push
clc
xchg
jnp
sar
pop
bound
add
clc
stos
xchg
ljmp
mov
inc
add
loop
aad
adc
add
cmp
add
clc
movsl
clc
ljmp
xor
add
lods
sub
aad
add
loop
pop
loope
daa
clc
jo
add
add
add
sar
clc
jnp
clc
sub
loop
cmp
clc
aas
jbe
mov
cmp
or
clc
cmpsb
clc
std
jne
imul
adc
add
xabort
cld
cwtl
push
add
or
clc
popf
das
sbb
movsl
clc
mov
jecxz
fnsave
hlt
add
xchg
jmp
in
xchg
mov
cli
enter
push
add
outsl
mov
sub
add
stos
dec
out
mov
add
push
clc
data16
adc
add
sbb
cmp
push
test
add
mov
loope
lods
adc
add
add
stos
jb
add
clc
jle
add
add
jns
int
sub
fstl
pusha
add
test
add
cmp
mov
scas
add
add
popa
add
pop
cltd
sbb
clc
inc
add
mov
push
mov
add
scas
jns
clc
arpl
add
clc
mov
jnp
jp
clc
inc
add
xchg
cmp
gs
iret
jl
clc
cmp
clc
mov
add
add
add
xor
add
call
pusha
add
je
imul
clc
sti
mov
fisttps
jns
lret
jo
add
dec
pop
mov
clc
iret
in
xor
add
sar
ss
enter
push
pusha
add
shl
std
aas
leave
push
add
push
add
add
add
cmc
pop
arpl
add
add
test
out
inc
clc
test
stos
loopne
jmp
add
add
add
xor
add
add
hlt
sar
inc
add
adc
add
call
add
dec
xchg
push
ljmp
xchg
sti
add
cmp
inc
clc
xchg
cmpsb
clc
push
mov
sahf
popf
lock
clc
adc
movsl
clc
jp
repz
add
pop
clc
rorb
lcall
clc
shll
add
mov
clc
add
add
mov
mov
clc
bnd
push
add
clc
cmp
push
mov
push
push
cmp
clc
or
pop
add
clc
mov
add
mov
sbb
cs
mov
mov
add
pop
clc
inc
clc
icebp
in
daa
clc
or
mov
mov
add
in
or
jecxz
bound
add
lea
sti
cmp
and
add
add
or
cmp
add
pop
int
cs
cmp
scas
sub
sar
jle
clc
nop
lock
mov
inc
add
mov
push
add
cwtl
sub
pusha
add
inc
add
pop
cmp
clc
pushf
sar
lock
add
sub
test
inc
add
in
cmp
xor
push
add
jnp
clc
push
add
jbe
clc
test
clc
jg
clc
xchg
jp
mov
xlat
outsb
add
add
add
clc
xchg
incl
enter
and
mov
xchg
rolb
clc
xchg
sub
call
daa
clc
mov
add
push
add
jnp
dec
jmp
mov
xchg
lahf
jno
add
clc
cmpsb
clc
add
add
mov
add
and
add
enter
add
cmp
add
push
push
add
mov
clc
inc
clc
sbb
mov
cmp
mov
imul
rorb
xchg
push
ja
add
sub
add
push
push
xor
add
repz
push
add
xor
add
repz
add
add
out
mov
clc
pop
frstor
nop
mov
clc
mov
add
cltd
mov
jge
add
xlat
mov
clc
and
add
aaa
addr16
ret
clc
mov
cwtl
clc
or
pop
sar
in
mov
add
sar
sar
int
clc
ret
mov
icebp
or
insl
cmp
clc
jnp
imul
mov
mov
xchg
inc
clc
sbb
sti
ror
cmovle
repz
rcr
fwait
mov
mov
clc
dec
pop
icebp
dec
pop
cld
and
add
dec
jns
add
sub
push
add
into
inc
add
bnd
sub
sbb
or
sub
rclb
add
ljmp
and
in
mov
jnp
add
pop
lock
add
cmp
or
cmp
arpl
add
add
add
in
cmp
clc
filds
sub
mov
test
add
add
and
add
jp
add
or
and
add
add
ss
mov
ret
clc
cmpsl
clc
jb
add
int
in
out
dec
pop
sub
or
add
repz
int3
lret
push
clc
adc
add
decl
clc
push
or
mov
ljmp
cld
movsb
clc
jne
add
fldt
rcll
lret
mov
incl
add
mov
push
clc
mov
push
add
popf
inc
add
addr16
bound
add
popf
add
add
shll
clc
cmp
clc
out
mov
clc
xchg
push
dec
inc
clc
or
clc
rcll
add
cmp
add
test
sub
sbb
add
lahf
push
xor
add
bound
add
add
add
clc
xchg
repz
scas
cmpsb
clc
addr16
lahf
mov
xor
add
sub
add
add
mov
dec
out
test
add
xor
clc
adc
add
rcrl
inc
add
nop
ffreep
clc
cld
cmpsb
clc
aad
add
lods
jo
add
add
int
cmpsl
clc
in
xabort
es
and
add
and
add
fstpt
add
xchg
aas
dec
inc
clc
vcomiss
dec
adc
add
clc
jmp
clc
push
popf
push
idivl
lods
in
xchg
inc
add
in
imul
inc
add
shlb
add
add
clc
push
loop
repz
add
push
cli
pop
movsl
clc
mov
test
pop
jno
add
pop
fmul
xor
test
dec
sbb
add
flds
clc
or
enter
add
fs
in
cmp
jb
add
jle
mov
add
test
out
push
pop
aaa
mov
clc
popf
std
ja
cmp
cs
clc
sar
gs
pop
push
clc
in
push
add
bnd
clc
xchg
icebp
add
add
jle
icebp
jg
das
into
int
popa
add
add
add
dec
clc
je
mov
inc
clc
ja
or
clc
cs
add
or
aam
clc
cltd
jl
loopne
sti
cmp
and
mov
pop
test
enter
inc
clc
adc
add
stc
std
xchg
cli
and
inc
add
and
add
add
pop
leave
mov
nop
sbb
cmp
sbb
add
je
clc
imul
adc
add
add
add
leave
push
lret
push
addr16
lock
add
int3
jg
clc
cmp
fistl
loope
lret
add
sar
clc
aaa
xor
add
repz
clc
adc
add
add
iret
popf
aas
push
dec
ret
clc
xlat
clc
mov
push
sar
sub
clc
cmpsl
clc
jo
add
xchg
xor
aaa
aam
and
add
add
dec
xor
add
into
in
cmp
add
mov
cmp
pop
sbb
clc
sub
clc
into
fistpll
cli
push
add
stos
sahf
or
add
add
cmpsb
clc
xor
add
test
test
js
sbb
mov
mov
clc
pop
sahf
cmp
clc
or
jge
int
xbegin
clc
pusha
add
and
cmp
jno
add
clc
addr16
adc
add
sub
clc
mov
add
sbb
clc
jo
add
gs
cmp
sub
popa
add
xchg
xchg
adc
add
inc
clc
ss
push
clc
test
jns
add
scas
ret
clc
push
add
xchg
mov
xor
add
icebp
nop
leave
mov
xlat
mov
pop
mov
clc
pop
jecxz
lret
daa
clc
xor
clc
loope
cmp
jb
add
add
mov
clc
sar
add
arpl
add
out
outsb
xchg
mov
inc
clc
mov
aam
mov
add
add
sub
xor
cmp
cmp
xor
add
out
out
lcall
add
test
cmpsl
clc
in
pushf
cld
push
enter
adc
fldenv
add
dec
or
clc
dec
mov
pop
sbb
push
clc
cmp
clc
in
mov
add
movsb
clc
ficomps
mov
clc
aaa
add
lret
mov
clc
icebp
outsb
cmp
in
sbb
pop
popa
add
rcl
push
lea
clc
ljmp
pop
clc
je
fimull
rcrl
inc
clc
loope
and
add
cld
dec
std
shll
clc
dec
ds
clc
xchg
nop
in
nop
xlat
pop
jae
add
or
sub
gs
or
add
add
push
es
mov
clc
mov
jne
pop
ds
clc
loopne
clc
xchg
in
mov
clc
loop
or
clc
std
scas
add
add
clc
mov
ja
pop
repnz
clc
and
add
sar
dec
xor
test
pop
and
and
add
fs
jns
addr16
movsb
clc
cmp
test
push
clc
cmc
sarl
push
add
inc
add
int3
mov
test
pusha
add
or
mov
adc
clc
std
mov
rorl
add
xchg
mov
add
push
xor
insb
bswap
rol
clc
mov
clc
aam
clc
and
add
add
add
mov
ja
mov
cmp
adc
add
pop
movsl
clc
aaa
sbb
add
xbegin
clc
xchg
xor
add
add
clc
in
cmp
idivb
loopne
es
jle
cmc
aas
jo
add
add
dec
js
jb
add
add
mov
cmp
add
stos
int
xor
mov
clc
cld
lods
xor
add
add
out
jnp
clc
sahf
adc
add
jo
add
clc
fdivrp
mov
imul
jl
mov
add
mov
ret
pop
jmp
lods
add
add
add
mov
inc
add
push
add
adc
add
sti
sbb
add
adc
add
pop
push
add
out
outsb
fiadds
add
and
add
loope
repnz
and
add
adc
add
or
adc
add
out
inc
add
push
add
daa
clc
cs
sbb
mov
mov
pop
clc
xor
add
clc
xchg
cmp
mov
add
pop
sub
sub
dec
mov
int3
and
add
ja
cmpsb
clc
imul
clc
hlt
xor
add
clc
and
add
clc
jmp
fstpl
lcall
mov
shlb
add
dec
jnp
add
jns
decl
inc
clc
mov
repnz
push
add
lock
clc
xbegin
xor
add
xchg
dec
loope
or
icebp
push
gs
lods
imul
clc
test
add
add
clc
outsl
dec
cwtl
xchg
pop
stos
cs
clc
das
repnz
clc
mov
outsl
outsl
sub
clc
xchg
cwtl
and
add
add
jae
add
clc
or
into
sbb
scas
sub
clc
fcomp
pop
sub
clc
imul
adc
add
aas
sub
mov
clc
or
dec
jp
clc
sbb
xor
add
lcall
push
outsb
clc
leave
pop
add
