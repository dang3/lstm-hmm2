adc
adc
adc
rol
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rcl
rcl
shr
out
out
out
out
out
out
js
js
js
js
js
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fidivs
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
xor
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jge
jge
jge
jge
jge
jge
and
and
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lods
lods
lods
lods
lods
lods
lods
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
nop
nop
nop
jmp
jmp
jmp
jmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rcl
rcl
rcl
rcl
shlb
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
test
test
test
test
test
test
test
test
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
lret
lret
lret
lret
lret
lret
lret
lret
lret
inc
inc
jge
jge
jge
jge
jge
jge
jge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
pop
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addr16
addr16
imul
imul
imul
imul
imul
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repnz
repnz
repnz
repnz
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shrb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
adc
int
int
int
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
adc
adc
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcll
nop
nop
nop
nop
lea
lea
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
mov
stos
lock
lock
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
decl
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
mov
mov
fcomp
fcomp
fcomp
fcomp
fcom
es
nop
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
jge
jge
jge
jge
jge
jge
jge
jge
jge
lea
lea
lea
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
jmp
addb
addb
nop
mov
mov
mov
aam
aam
bound
bound
bound
bound
bound
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aam
aam
aam
aam
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
ficoml
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
insb
insb
insb
insb
insb
insb
adc
adc
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addr16
nop
nop
nop
nop
nop
nop
mov
adc
adc
adc
adc
adc
adc
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lock
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
xchg
xchg
xchg
xchg
jle
jle
jle
jle
jle
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
bound
bound
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
aaa
cmp
cmp
imul
imul
imul
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lcall
lcall
lcall
lcall
lcall
lcall
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
je
je
je
je
je
je
je
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jno
jno
jno
xchg
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
addb
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sahf
sahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
leave
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
bound
bound
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
sbb
rol
rol
rol
rcll
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
ljmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
push
push
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
ret
ret
ret
ret
mov
mov
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
aas
aas
aas
aas
aas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
sub
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
jae
jae
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
rol
rol
rclb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addr16
addr16
lret
lret
lret
lret
lret
lret
lret
lret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
and
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
enter
enter
sub
sub
sub
sub
sub
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jns
loope
loope
loope
loope
loope
loope
loope
loope
loope
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jns
jns
jns
rcl
enter
enter
enter
enter
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xor
xor
add
add
add
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
and
push
push
push
push
push
push
ret
jnp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jge
jge
addb
addb
addb
addb
addb
addb
addb
and
and
and
and
and
and
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
je
cs
cs
cs
cs
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
adc
adc
adc
adc
adc
adc
adc
adc
adc
jg
jg
jg
jg
jg
jg
jg
jg
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
nop
nop
nop
nop
nop
nop
les
cwtl
cwtl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
data16
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
je
je
je
je
je
je
je
je
rcl
rcl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz
repz
imul
imul
imul
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pushf
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
sahf
sahf
sahf
sahf
sahf
sahf
sahf
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
nop
div
div
div
into
into
into
imul
add
add
add
add
add
fiadds
addb
adcb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repnz
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pusha
pusha
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
addl
addl
lods
lods
lods
lods
lods
pop
dec
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
nop
nop
nop
nop
nop
nop
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lret
lret
lret
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz
repz
repz
repz
repz
repz
repz
repz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
aaa
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
ret
ret
ret
jbe
jbe
jbe
jbe
jbe
jecxz
jecxz
jecxz
mov
call
call
call
call
call
call
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
call
call
call
call
call
call
call
call
call
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
fstp
fstp
fstp
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
leave
leave
leave
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
adc
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
data16
data16
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
out
out
out
out
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
jle
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
lret
lret
lret
lret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jno
xor
xor
xor
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
enter
enter
fstp
addl
addl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rorl
popf
popf
popf
popf
popf
popf
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
mov
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
fs
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
gs
gs
gs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
lds
dec
dec
dec
dec
dec
dec
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fistl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addb
sub
sub
sub
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
icebp
icebp
icebp
icebp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
stos
stos
stos
stos
stos
sbb
jbe
dec
add
jno
add
mov
mov
mov
cmc
xchg
fidivl
xchg
cmc
inc
aam
movsl
or
dec
add
repnz
add
inc
add
fists
add
add
add
add
push
movsb
inc
add
jb
mov
mov
cmp
orl
mov
push
mov
add
adc
in
or
pusha
add
fstpl
add
add
inc
add
aas
rcll
add
and
pushf
sbb
out
adc
popf
arpl
faddl
add
add
jl
push
add
add
xchg
in
add
xorl
mov
pop
mov
xor
sub
mov
pushf
push
add
add
inc
add
mov
add
cwtl
add
aad
add
cltd
jne
mov
fs
dec
ret
ljmp
dec
add
movsb
cmpsb
inc
in
add
add
add
cmc
dec
add
sub
push
add
inc
xlat
test
push
add
stc
sti
fcmovu
pop
mov
xchg
add
add
add
pop
add
add
sahf
and
pop
in
clc
cwtl
add
xor
sbb
push
fsubrl
inc
add
movsl
cmp
cwtl
jp
fwait
lret
add
fcomi
add
pop
add
add
scas
inc
add
roll
mov
mov
movsl
xchg
loop
lahf
in
es
test
mov
inc
add
pop
add
inc
add
pop
add
add
sbb
dec
imul
fistpl
mov
and
xor
mov
sarb
movsl
and
pop
jmp
pushf
cmp
jnp
ficomps
adc
add
and
iret
or
xchg
iret
cmp
incb
and
arpl
add
add
mulb
inc
negl
lock
addl
add
add
push
add
add
add
jp
adc
mov
out
sahf
repz
xchg
in
pop
xlat
pop
sub
add
leave
xchg
cmp
addr16
or
jbe
nop
aad
xchg
out
adc
jle
scas
pop
add
mov
out
cld
push
add
push
add
add
adc
mov
add
int
ret
mov
rorb
inc
add
add
add
dec
ja
add
inc
add
xchg
add
cmp
fidivs
add
add
fldlg2
push
add
dec
mov
imul
add
or
cmpsb
call
jbe
xor
les
add
int
add
hlt
add
add
cmp
add
stos
pop
cld
or
fucomip
jle
addr16
xchg
inc
add
test
add
stos
pop
popf
push
add
add
add
xchg
and
xchg
sarl
add
movsl
cmp
sbb
add
out
add
sti
daa
out
mov
add
dec
outsl
adc
cmp
add
hlt
xchg
into
loop
add
add
fstpl
lret
pop
or
sub
add
scas
mov
xlat
fdivrs
xor
in
jmp
add
sbb
add
sub
add
xchg
cltd
jb
mov
add
lods
mov
mov
mov
add
add
test
cmp
add
add
jmp
xor
add
cltd
cltd
js
pop
add
test
jbe
fsubrs
add
adc
push
add
xchg
or
in
add
ret
out
bound
add
stos
xchg
and
pop
sbbb
add
popf
imul
mov
mov
add
hlt
mov
add
mov
popa
mov
ljmp
push
xlat
enter
test
les
fs
adc
stos
xor
inc
iret
in
push
add
add
add
shll
push
add
lods
cmpsl
stos
pop
popf
lcall
orl
mov
jle
test
push
add
ret
sbb
fcompl
push
add
ret
sahf
jle
gs
sub
and
push
add
add
add
mov
mov
pushf
sub
scas
mov
sub
scas
daa
outsl
jae
xorb
mov
pop
subl
add
pop
and
daa
inc
cmp
add
das
imul
outsb
add
add
add
dec
cmp
adc
xor
inc
add
inc
add
inc
add
jne
xchg
into
dec
add
add
lcall
pop
int3
fldcw
outsb
add
add
push
add
jne
clc
in
mov
add
add
cmp
sub
mov
js
inc
add
int3
mov
enter
in
dec
add
dec
cmc
lret
shll
shr
add
inc
push
jg
lea
lcall
adc
out
jg
add
sarb
int
or
rorl
js
les
pop
add
cmp
mov
subb
mov
lea
add
aas
movsb
lret
inc
subl
add
push
sub
sahf
std
aam
push
add
add
call
inc
jo
mov
xchg
fldenv
add
push
add
add
mov
imul
dec
add
add
test
jg
add
add
pop
add
mov
add
or
push
push
add
negl
cmp
stc
or
sbb
outsb
add
xchg
inc
add
fsubrs
sub
cwtl
stos
mov
imul
stc
push
add
notb
dec
outsb
add
in
xchg
add
out
cmp
fwait
xlat
bound
adc
pop
movsb
lret
push
sti
inc
mov
or
jae
mov
fiaddl
add
imul
pop
bound
pop
int
cld
stc
into
push
add
add
adc
in
push
add
inc
add
pop
fucom
sbb
push
add
lret
add
jecxz
in
push
test
sub
popa
and
mov
lret
add
mov
gs
add
pop
pop
add
add
xchg
add
xchg
mov
aaa
test
add
data16
data16
add
mov
add
and
ret
test
rolb
add
jo
test
fadds
add
add
dec
in
mov
or
jno
add
add
jo
mov
add
add
push
add
gs
in
ja
repz
arpl
scas
loop
popf
call
sahf
aaa
or
jge
scas
in
popa
in
add
in
add
mov
lret
inc
add
pop
ljmp
movsl
cmc
xor
cmpb
push
add
push
add
xor
shld
add
add
add
jo
dec
add
or
in
push
add
js
jns
arpl
lcall
clc
fidivl
add
add
dec
sbb
aam
add
mov
mov
inc
add
cmc
push
inc
add
add
movsb
shl
jns
push
add
add
add
add
push
adc
out
lock
xor
enter
or
cmpsl
push
add
sbb
mov
jno
or
int
ljmp
int
add
or
rorl
movsl
jp
ret
loope
or
xchg
sub
insb
add
add
cli
cmp
leave
div
pop
scas
ja
movsb
or
push
add
add
cmp
dec
jns
imul
add
sbb
sub
pop
add
xor
mov
add
scas
scas
not
dec
in
fwait
adc
xor
fildl
fisttps
xchg
in
push
and
add
cltd
pop
add
rcl
pop
and
add
or
aad
pop
fnsave
mov
idivb
aas
les
add
pop
add
loop
add
xchg
stos
xchg
xor
fcoms
add
add
orl
add
add
popf
popa
jb
pop
insb
add
add
lret
leave
mov
rorb
pop
add
loopne
jb
into
dec
sbb
add
add
add
xorl
hlt
jmp
add
rorb
mov
add
insb
add
add
test
mov
inc
add
jl
jae
add
mov
sbb
xor
push
add
fwait
mov
stos
mov
outsl
sub
xor
push
lret
nop
decb
aad
cmpsl
push
add
and
sub
jecxz
out
add
push
addr16
xchg
add
xchg
test
inc
add
test
add
data16
cwtl
sub
jl
jne
push
add
add
das
addr16
inc
addl
repz
loopne
jnp
add
adc
stos
rorb
jg
add
test
sbb
int3
pop
xchg
movsl
out
mov
add
jp
arpl
shrb
imul
add
add
add
add
xor
in
push
add
xchg
arpl
add
fs
push
add
jno
cmp
push
std
jp
out
and
call
lea
shlb
xor
daa
stos
leave
cli
inc
add
outsl
fdivr
add
pop
lcall
repnz
add
add
jae
daa
inc
add
pop
adc
jecxz
mov
add
std
rorl
add
push
add
jl
and
stos
test
add
ret
jge
dec
add
out
cmp
mov
or
sbb
jg
dec
iret
outsl
mov
add
sub
xchg
and
or
mov
loope
mov
int
add
push
icebp
mov
aam
push
add
test
and
das
xor
mov
arpl
dec
add
bound
mov
jecxz
add
adc
pop
jns
mov
jp
mov
add
je
jne
add
mov
fbld
arpl
int
push
add
sti
sub
sbb
cmp
outsl
sbb
cwtl
sbb
push
add
add
dec
add
sbb
inc
add
repnz
sahf
adc
add
icebp
and
pushf
sub
les
sbb
pop
add
xchg
xor
pop
stos
or
aas
loope
add
add
add
cmp
loopne
push
xor
sbb
sub
lea
mov
lods
enter
add
mov
add
add
outsl
mov
xor
push
enter
jge
jl
fstpl
fcmovu
aaa
push
add
sub
sti
out
xchg
lret
jmp
repnz
aaa
mov
jne
jbe
jne
add
stc
mov
imul
rcrl
add
aaa
jmp
dec
add
inc
inc
add
push
add
pushf
fwait
inc
add
daa
out
add
adcb
outsb
add
imul
push
add
add
mov
mov
int3
in
out
add
xor
jg
in
inc
add
sub
inc
push
mov
test
pop
add
lock
mov
add
sbb
inc
add
adc
jnp
paddb
out
mov
xlat
jp
hlt
push
in
add
adc
add
xlat
dec
bound
add
cmp
cwtl
cmpsb
fbld
mov
mov
mov
push
add
out
jecxz
add
add
cmp
sbb
inc
add
jge
add
pop
inc
add
inc
add
mov
lods
and
lahf
in
rorb
jmp
scas
movsb
sub
lret
xchg
cmpsl
push
outsl
insb
add
rcl
popa
adc
and
ja
fnsave
add
out
data16
add
mov
jge
xchg
push
add
mov
add
jmp
inc
xchg
lret
jnp
clc
pop
jle
mov
add
lea
inc
inc
add
lods
xor
pop
inc
add
xchg
pop
add
add
mull
jbe
sub
mov
cmp
pusha
add
sub
adc
cmc
xchg
add
test
add
dec
xor
mov
loope
add
jno
and
lret
or
mov
add
mov
pop
cmc
sub
divb
sbb
sbb
ret
ds
mov
cmp
xchg
xor
add
les
cmp
in
aas
sub
aad
or
cltd
xchg
lods
loope
fadds
cmp
fiadds
lret
xchg
cmp
or
in
pop
mov
xor
int
xor
sub
das
xchg
mov
leave
out
adc
add
inc
cmp
push
add
dec
add
add
add
cwtl
xchg
aam
add
add
inc
cmp
lods
fnstsw
cmp
fbld
rorl
add
pop
mov
add
pop
mov
sub
add
add
addr16
add
shr
xchg
int3
loope
mov
lods
in
std
imul
lds
test
jecxz
add
gs
notb
mov
gs
jb
mov
push
cltd
push
inc
add
push
add
mov
scas
sub
inc
or
pop
add
add
bound
addb
or
cmp
add
mov
add
fwait
sti
outsl
leave
adc
add
or
fildll
add
cmp
mov
inc
add
aas
mov
push
add
jge
out
lock
add
add
push
add
gs
mov
sub
js
addr16
add
add
call
inc
add
add
add
pop
adc
xor
xor
jno
pop
dec
dec
add
add
mov
loop
gs
push
or
lret
add
shll
dec
add
jnp
loopne
cmp
jne
test
add
xor
add
cmp
into
lret
aam
add
fdivrp
mov
add
mov
push
add
add
jb
push
pop
add
arpl
add
insl
cmc
movsb
decl
and
add
or
adc
insl
cmp
inc
add
in
cmp
out
insb
add
push
cwtl
nop
fildl
mov
dec
add
dec
sub
mov
sbb
cmp
add
sub
addl
mov
test
add
mov
add
jne
mov
add
cmpsl
testl
addr16
leave
cmp
es
mov
mov
add
adc
scas
std
movsb
lods
addb
ret
pop
add
add
add
mov
in
hlt
sub
movsl
mov
push
lret
add
add
js
popa
cmp
fmuls
xor
add
call
xor
xor
call
add
add
sub
fadds
add
or
dec
add
add
sbb
and
add
fidivrl
sub
push
add
leave
inc
data16
lret
add
pop
push
add
and
jae
rorb
das
xor
outsb
add
out
sub
add
dec
add
stc
loope
add
sbb
data16
inc
leave
pop
add
xor
add
push
sbb
sbb
je
shll
lods
clc
icebp
roll
inc
add
add
int3
ljmp
cmc
jne
sbb
popf
sbb
adc
pop
xchg
loop
add
inc
inc
add
testb
add
cmp
jae
scas
popl
push
add
mov
ret
dec
add
mov
or
xchg
push
add
inc
bound
imul
adc
scas
add
add
cmp
jp
addl
cmp
mov
cmpsb
sar
jo
sahf
and
add
fwait
imul
add
adc
xchg
push
cmova
sbb
test
adc
arpl
pop
loope
loop
jl
xchg
jle
in
and
sbb
adc
cmp
xchg
nop
mov
cltd
aad
jg
add
xchg
adc
loop
jmp
aad
bound
lea
add
add
loopne
push
sbb
mov
fildl
cmp
sbb
sub
popa
push
cli
xor
mov
sub
xor
or
test
ss
push
xor
cmpsb
scas
bound
inc
add
fistl
mov
add
inc
add
sub
adc
or
adc
stos
xlat
imul
ret
ret
fnsave
add
std
inc
add
xor
inc
lods
hlt
inc
add
inc
add
add
jp
or
sbb
imul
add
push
mov
add
push
xchg
out
test
mov
xchg
jne
movb
adc
hlt
dec
inc
add
inc
add
add
push
mov
dec
add
sahf
negl
add
lods
add
test
movsb
xchg
dec
test
or
pop
add
ret
dec
mov
pop
sub
jo
inc
add
movsl
iret
lahf
mov
add
loope
enter
push
add
pop
test
add
lock
add
dec
add
xchg
leave
aam
bswap
xor
pop
mov
and
rcl
loopne
mov
pushf
push
add
cs
pop
adc
stc
xchg
dec
add
mov
daa
mov
add
dec
add
add
les
test
test
sbb
jb
divl
enter
add
pop
adc
out
mov
loope
push
pop
rcr
das
fiaddl
add
aad
push
add
sbb
pop
inc
mov
lret
cmp
pop
add
add
push
add
cltd
xchg
dec
add
mov
jbe
movsl
fwait
in
data16
sub
mov
inc
lret
push
mov
add
outsl
xor
mov
add
pop
sub
aam
add
jle
xor
pop
mov
pop
or
mov
ret
movsl
cmp
pop
and
sbb
push
add
add
frstor
jno
add
aad
and
add
in
mov
add
add
in
loop
shlb
inc
add
add
cld
pop
add
jbe
push
add
mov
rcrl
outsl
pop
leave
dec
add
sub
push
xchg
outsb
add
test
xchg
enter
jecxz
push
add
add
dec
add
jno
out
pop
and
xor
fiaddl
xor
lock
jmp
add
mov
sub
shrb
rorl
add
pusha
add
in
and
pop
or
mov
scas
inc
jns
insl
jno
pop
gs
out
sbb
fistpl
addb
add
insl
add
lret
rorb
xor
jbe
push
or
mov
ja
cld
fcomp
jb
push
movsl
dec
add
push
add
add
add
push
add
adc
loope
add
outsb
add
sub
dec
lods
add
jne
add
stc
cmc
lcall
add
dec
dec
frstor
add
jbe
add
push
add
mov
fwait
movsl
dec
xchg
xchg
add
add
sbb
mov
add
add
add
push
add
add
xor
data16
data16
push
add
in
iret
rorl
add
pop
add
and
add
and
add
mov
and
add
mov
add
add
das
or
fld
push
add
popf
add
inc
loop
add
mov
cmc
and
dec
add
movsl
pop
lds
add
cmp
shrb
dec
add
adc
add
sbb
xchg
jno
add
adc
mov
sti
xchg
jge
add
push
add
je
stos
mov
fsubrs
push
add
adcb
sub
repz
aad
popf
xchg
inc
pop
movsb
mov
xchg
and
cmpb
mov
js
push
mov
cmp
inc
add
nop
inc
push
add
and
and
mov
jp
and
pop
xchg
ret
xchg
inc
add
mov
stos
outsb
add
xchg
jl
xor
mov
add
pusha
add
and
or
outsl
xchg
jne
test
leave
imul
jnp
or
mov
out
out
lcall
mov
fisubrl
out
add
lds
dec
jns
add
frstor
add
sbbb
loope
add
btr
xor
fucomip
xchg
sub
mov
add
in
fdivl
and
roll
mov
fildll
cwtl
ss
xchg
ljmp
add
divb
add
mov
add
leave
inc
test
push
push
add
add
cmp
cwtl
dec
add
sbbl
cmp
data16
sub
jae
mov
add
dec
insb
add
mov
ja
pop
add
xlat
xchg
int3
movsl
je
clc
stos
mov
mov
jnp
push
test
cs
or
movl
add
mov
add
inc
icebp
filds
and
leave
lds
stos
dec
add
add
cmp
dec
add
mov
inc
add
mov
pop
sahf
or
lods
pop
add
mov
flds
popa
or
pop
lret
add
mov
dec
std
scas
and
mov
add
lahf
aad
lret
jg
mov
push
jo
add
aad
jecxz
add
cmp
hlt
mov
add
movsb
xchg
inc
aam
ds
xor
xchg
std
idivb
out
mov
mov
add
sub
enter
xor
popf
dec
add
imul
add
add
add
sti
aaa
inc
add
push
sbb
cmpsl
push
sarl
add
add
pop
mov
add
cmpsb
mov
pop
pop
fidivrs
mov
inc
jmp
add
and
add
mov
add
into
fwait
push
add
icebp
or
adc
mov
adc
mov
testl
xor
test
add
push
add
inc
add
lcall
lret
sub
add
add
sbb
adc
sub
push
add
je
xchg
jp
mov
movsl
jo
aaa
lcall
add
mov
jo
inc
add
mov
add
nopl
scas
pop
push
add
mov
fdivrl
mov
xor
add
stos
xor
test
rcrb
cmovbe
sar
add
pop
fwait
and
xor
sbb
add
nop
push
add
add
lds
lods
mov
add
xor
add
add
add
dec
add
sub
mov
jl
cmp
pushf
lahf
adc
dec
push
add
loopne
add
dec
add
outsl
bound
lods
cwtl
dec
add
rolb
add
into
sub
stos
xor
xchg
sbb
xor
push
add
mov
nopl
ja
hlt
dec
out
adc
xor
jg
sahf
jb
iret
xor
jbe
lea
or
inc
add
sbb
add
aad
sub
sbb
xchg
out
cmp
lods
mov
add
add
add
rol
mov
add
add
sarb
aas
out
mov
mov
insb
add
scas
adc
scas
mov
clc
cmp
outsl
pop
sbb
mov
movsl
into
mov
jmp
lret
out
movsl
pusha
add
inc
mov
xorb
add
cwtl
sub
shlb
ja
sarb
and
and
push
add
ss
jae
shl
loopne
xor
mov
sub
movl
lea
push
clc
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jne
cmpsb
lcall
add
xlat
pop
in
in
lret
inc
add
add
ja
add
add
add
mov
cmp
out
cmp
push
add
insl
pop
add
dec
add
gs
add
mov
adc
in
clc
add
add
add
add
add
mov
add
fsubs
mov
add
inc
mov
mov
es
or
test
add
sub
movsb
pop
add
out
std
repnz
insl
out
lods
aaa
xchg
mov
out
pop
add
lods
sbb
cmp
lods
aad
add
insb
add
add
stc
insb
add
pop
add
loopne
add
imul
rcll
adc
mov
pop
add
and
xchg
adcl
add
add
sub
add
add
push
add
test
pop
add
add
iret
push
add
in
mov
or
fmul
jmp
push
and
or
xchg
add
fstpl
xchg
xor
jns
add
repnz
mov
mov
pop
inc
insl
lret
loop
repnz
sbb
add
jg
add
xlat
or
add
sbb
imul
jo
repz
xorl
pop
arpl
into
test
insl
push
add
lods
pop
add
add
cli
and
jp
add
std
lods
pusha
add
aas
rcll
push
add
and
jnp
lcall
inc
add
cld
lods
add
dec
add
add
add
mov
mov
fimuls
xorb
and
sub
cmc
movsb
add
add
push
in
inc
add
leave
sub
add
add
stos
pop
mov
stos
je
jbe
add
xchg
xor
add
daa
roll
xor
pop
xchg
icebp
mov
add
xchg
inc
add
gs
push
int
insl
pop
add
jns
add
jne
pop
je
mov
sti
enter
xchg
jmp
add
add
add
subb
enter
add
lods
out
arpl
out
add
xchg
cli
xlat
pop
add
fisttps
add
add
push
add
sub
dec
add
fistps
repz
xor
imul
fnsave
leave
cmp
push
outsb
add
aas
or
adc
push
scas
jp
ror
popf
dec
add
out
add
ss
mov
inc
mov
cmpsl
add
cmp
jg
add
sub
jno
push
add
test
lret
add
pop
add
add
add
lss
mov
push
add
add
jp
jecxz
pop
loope
mov
add
add
add
stos
mov
outsb
add
sbb
mov
inc
dec
jp
pop
add
xor
mov
or
cli
sub
inc
add
and
add
xor
jmp
mov
push
add
add
xchg
dec
rcl
mov
subb
es
testb
or
aam
rorl
stos
push
jnp
dec
add
xchg
mov
add
in
sub
outsl
icebp
xchg
and
fidivs
rcr
pop
add
push
xchg
adc
jecxz
test
mov
add
cmpsb
nop
loopne
add
jnp
xchg
push
cld
inc
add
jbe
cmp
xchg
in
mov
add
sti
mov
sbb
xor
sub
iret
or
xchg
sub
icebp
push
add
sbb
add
insl
push
xor
sbb
dec
loopne
inc
fdivrl
repz
fisttps
loop
xchg
adc
pop
xor
mov
add
mov
add
in
push
fstpl
sbb
fidivrl
add
fstp
pop
ljmp
add
int
add
jmp
sbb
cmp
adc
add
int3
push
test
pop
pop
add
outsb
add
gs
mov
add
push
add
stos
or
mov
arpl
fiadds
xchg
lcall
dec
stc
call
jle
mov
cmpsl
jge
add
add
add
inc
add
fldt
cltd
push
mov
daa
sti
adc
inc
jle
xor
sbb
ret
pop
std
dec
add
xchg
inc
add
loop
stos
push
out
mov
add
jo
xchg
add
mov
hlt
and
outsb
add
or
mov
sub
lds
jp
push
pop
add
cmp
add
popa
fisttpll
add
mov
push
add
add
add
sbb
and
jl
jnp
add
std
mov
mov
xorb
test
dec
add
mov
add
inc
mov
fdivs
cmpsl
scas
bound
sub
or
xchg
loope
jle
add
or
pop
cld
test
or
shrl
adc
fistl
adc
les
add
and
xchg
pusha
add
test
mov
mov
cmpsl
lahf
xchg
push
add
sbb
cld
sub
add
in
add
test
mov
scas
adc
push
add
dec
data16
add
rorl
inc
push
pop
mov
add
ret
movsb
jge
je
cmpsb
fnsave
push
add
add
dec
add
test
add
add
add
sub
mov
dec
movsl
xor
and
mov
shlb
nop
movsb
lds
mov
pop
add
jp
jae
add
add
mov
cltd
xlat
add
aas
push
add
insb
add
stc
cmp
imul
push
add
push
add
xchg
cmp
mov
out
orl
fsubrl
add
add
mov
imul
add
ljmp
add
add
mov
jne
add
add
or
mov
add
sub
shrl
icebp
outsb
add
add
fsubl
and
push
add
add
jns
xor
out
sbb
and
mov
xchg
dec
add
mov
add
add
sbb
add
cmp
xchg
add
jno
add
movsb
mul
iret
iret
inc
add
sbb
cmp
pop
add
lock
ljmp
sbb
cmp
sub
add
push
add
js
cmp
add
add
js
movsb
insl
or
mov
adc
or
add
call
add
jnp
add
sub
test
xor
mov
inc
add
test
jle
pop
add
add
xchg
pop
add
lahf
nop
sbb
push
add
and
inc
add
fld
stos
mov
rdtsc
repnz
add
lds
add
and
push
add
add
jmp
insb
add
cmpb
mov
add
xlat
push
add
push
add
inc
add
loopne
add
or
add
je
sarb
mov
add
mov
sahf
repnz
popa
ret
add
out
add
movsb
and
add
rcrl
adcl
sub
mov
adc
add
xor
pop
add
or
aad
add
mov
iret
jl
daa
frstor
lds
mov
mov
dec
add
dec
add
cli
je
adc
ljmp
pusha
add
add
inc
xchg
mov
in
cmpsb
pushf
cmc
out
bound
pop
mov
add
jb
sbb
push
add
add
stos
xor
mov
cmpsb
enter
in
push
ret
divb
push
add
dec
add
dec
add
pusha
add
add
inc
add
fstpt
cmc
cltd
cmpsb
test
add
dec
sub
adc
das
pop
add
sub
lcall
add
frstor
fisttpll
inc
out
pop
jb
mov
jns
mov
add
aas
jb
push
adc
mov
and
add
cltd
ror
outsl
push
add
leave
and
dec
add
push
adc
jo
dec
add
fldenv
xor
out
jnp
sti
cmp
movsb
push
mov
add
and
adc
fwait
loop
movsl
ret
dec
add
add
jb
xor
enter
jo
int3
push
add
add
add
fidivs
add
inc
inc
add
dec
add
push
jmp
push
add
and
add
int3
inc
add
jl
jle
lock
sub
add
lret
fcomps
add
jge
add
ret
repz
repz
in
sub
cmpsl
mov
add
flds
add
popf
outsl
addr16
dec
add
add
vmread
movsl
dec
mov
sarb
jp
xor
clc
lea
mov
mov
add
in
mov
jle
pop
jnp
mov
idiv
imul
cli
into
xor
sub
call
inc
add
shrb
mov
jno
add
add
sar
adc
xchg
xor
mov
dec
add
or
jg
divb
shll
add
in
mov
and
fmull
add
fdivrs
daa
call
adc
xchg
push
add
out
fdivl
add
das
sti
adc
lcall
gs
jae
add
cmp
mov
add
mov
push
out
cmp
add
movsb
push
add
add
paddusb
cmp
xor
push
add
add
fcmovu
js
insl
pop
cmp
pop
addl
xchg
aaa
xchg
add
subl
insb
add
adc
sbb
cmpb
add
add
cwtl
jg
jmp
fimull
lret
jle
imul
ljmp
mov
and
data16
jmp
je
mov
mov
push
jge
add
adc
dec
push
arpl
inc
mov
pop
sbb
xchg
divl
pusha
add
fdivl
pop
mov
rcrb
add
add
xchg
xor
add
popa
or
or
lock
jo
dec
add
or
nop
push
add
stc
mov
add
add
bound
mov
add
sub
add
push
add
push
jp
add
popf
stc
mov
add
dec
add
sbb
outsb
add
aad
ficompl
mov
fiaddl
xchg
add
add
mov
and
adcl
shlb
das
cmp
aaa
bsf
jae
cmp
xor
jp
je
push
add
ret
inc
add
inc
add
push
add
add
popa
pop
pop
jg
add
sub
or
sbb
je
pop
jo
mov
outsb
add
jp
push
add
addr16
xor
xchg
and
sub
out
cld
xchg
add
roll
mov
sub
cmp
stos
add
cmp
xchg
mov
add
mov
fmulp
rcrl
mov
jnp
add
hlt
cwtl
sbb
sub
movsl
loope
scas
ja
arpl
mov
js
call
rorl
adc
or
jp
repnz
cmp
shll
add
daa
jno
add
inc
add
push
add
mov
jg
pop
push
add
das
int3
push
add
xchg
dec
cli
pushf
sbb
cld
xchg
push
add
sahf
jle
icebp
jmp
pop
jg
iret
leave
pop
mov
ret
orb
lahf
fisubrl
fcoms
mov
jge
sub
dec
add
lock
aas
rcl
lock
mov
mov
mov
push
pushf
fdivl
jo
jle
xchg
fdivl
add
add
add
add
mov
incb
adc
add
add
xchg
out
pop
push
add
rol
cmpsb
jbe
mov
xor
push
add
clc
push
add
les
add
mov
das
inc
imul
sbb
mov
xor
js
or
xchg
popf
clc
jecxz
inc
add
data16
ljmp
mov
sbb
sub
inc
or
mov
jae
add
dec
add
in
hlt
stc
jb
ret
jno
inc
mov
pop
and
in
es
cltd
mov
add
add
jle
repnz
xor
add
loop
and
mov
ljmp
add
jge
icebp
adc
add
add
ljmp
xchg
mov
add
enter
xchg
ret
or
fsubrl
sbb
ja
mov
aas
mov
push
xor
add
icebp
mov
out
and
mov
mov
pop
mov
push
add
clc
loopne
add
add
add
ret
clc
push
stc
jnp
std
jno
sbb
ja
add
add
test
test
data16
dec
add
add
add
mov
imul
enter
popl
sbb
shlb
shlb
fwait
pop
shlb
test
fwait
pop
cld
push
and
jecxz
add
or
add
sti
dec
add
push
add
mov
fiadds
push
add
filds
adc
add
add
jmp
add
sbb
add
dec
pushf
test
xchg
pusha
add
dec
add
mov
inc
add
add
push
loopne
movhps
icebp
gs
add
rcll
inc
add
xor
push
add
gs
mov
add
add
je
xor
xor
aam
jb
int3
pop
add
orl
mov
add
out
mov
add
popa
and
add
sti
pop
pusha
add
push
add
bound
or
add
jne
movsl
fidivs
jecxz
adc
push
fbstp
xor
daa
mov
mov
add
out
clc
repnz
nop
nop
jae
add
add
pop
dec
nop
push
mov
leave
nop
jmp
add
cltd
inc
fsubs
xchg
push
push
mov
xchg
ret
add
add
cmp
add
clc
repnz
nop
nop
jae
dec
add
add
add
sbb
clc
repnz
nop
nop
jae
imul
arpl
inc
xor
clc
repnz
nop
nop
jae
test
cmpsl
cmpsl
out
mov
push
mov
xchg
ret
add
outsb
push
add
nop
push
mov
leave
nop
jmp
cltd
add
mov
clc
repnz
nop
nop
jae
loopne
fldl
mov
push
cld
push
mov
xchg
ret
xor
arpl
dec
orl
pop
mov
nop
push
mov
leave
nop
jmp
leave
cmp
loopne
add
clc
repnz
nop
nop
jae
jno
add
or
add
clc
repnz
nop
nop
jae
sub
out
lss
clc
repnz
nop
nop
jae
rclb
clc
repnz
nop
nop
jae
add
push
pop
clc
repnz
nop
nop
jae
cld
add
add
outsb
cmpsl
adc
js
add
add
add
lret
jge
rclb
nop
jmp
xor
adc
push
mov
leave
nop
jmp
fildl
add
clc
repnz
nop
nop
jae
jnp
add
and
int
push
mov
xchg
ret
cmpsl
loopne
stos
cmp
ret
push
clc
repnz
nop
nop
jae
add
dec
cld
idivb
and
push
mov
xchg
ret
cmp
test
cmpsl
or
nop
nop
jae
sbb
and
outsb
jnp
push
xor
clc
repnz
nop
nop
jae
testb
add
push
clc
repnz
nop
nop
jae
inc
js
add
repnz
nop
nop
jae
dec
loopne
add
add
mov
clc
repnz
nop
nop
jae
add
mov
mov
dec
push
mov
add
add
mov
xorb
inc
and
clc
repnz
nop
nop
jae
lods
add
fwait
push
push
mov
xchg
ret
adc
add
movsl
inc
clc
repnz
nop
nop
jae
jg
test
fdivs
mov
push
mov
xchg
ret
add
add
xor
jno
arpl
push
mov
leave
nop
jmp
js
les
push
popa
nop
push
mov
leave
nop
jmp
inc
add
add
add
clc
repnz
nop
nop
jae
add
xor
enter
push
clc
repnz
nop
nop
jae
add
nop
push
mov
leave
nop
jmp
push
add
mov
add
or
repnz
nop
nop
jae
cmp
push
add
out
push
add
nop
push
mov
leave
nop
jmp
leave
add
xor
add
add
add
mov
xchg
ret
add
add
add
testb
je
mov
rclb
nop
jmp
add
xor
fwait
clc
repnz
nop
nop
jae
add
add
add
add
je
clc
repnz
nop
nop
jae
xor
mov
mov
xchg
ret
les
add
testb
add
add
add
shll
lahf
and
xchg
sub
nop
push
mov
leave
nop
jmp
fst
add
mov
repnz
nop
nop
jae
sub
add
repnz
nop
nop
jae
add
xor
add
cmp
add
add
add
cs
sub
cld
jp
dec
add
dec
add
push
mov
leave
nop
jmp
mov
mov
push
push
mov
xchg
ret
js
add
das
add
jmp
push
add
fildl
add
add
test
repnz
nop
nop
jae
das
xor
add
loopne
add
pop
clc
repnz
nop
nop
jae
add
add
xchg
mov
clc
repnz
nop
nop
jae
adc
dec
xor
add
pusha
add
inc
and
clc
repnz
nop
nop
jae
xchg
outsb
and
nop
push
mov
leave
nop
jmp
add
add
fstpt
sub
cmpb
add
clc
repnz
nop
nop
jae
add
add
dec
push
clc
repnz
nop
nop
jae
cmp
cltd
add
xchg
xchg
add
clc
repnz
nop
nop
jae
das
add
not
push
mov
xchg
ret
jns
jg
add
add
add
jmp
test
add
xor
jg
add
add
repz
clc
repnz
nop
nop
jae
add
add
sarb
mov
clc
repnz
nop
nop
jae
add
jns
add
sarl
stos
fmuls
and
cld
nop
nop
jae
add
mov
push
mov
xchg
ret
sbb
add
loop
mov
clc
repnz
nop
nop
jae
lods
add
in
cmp
add
add
insb
int
add
mov
inc
sub
jne
push
mov
xchg
ret
add
fisttpll
adc
nop
nop
jae
leave
add
add
add
pop
push
clc
repnz
nop
nop
jae
xor
add
add
add
mov
clc
repnz
nop
nop
jae
xor
push
nop
push
mov
leave
nop
jmp
add
push
add
add
cld
loop
add
fld1
clc
repnz
nop
nop
jae
add
add
popf
dec
sub
add
inc
testl
nop
push
mov
leave
nop
jmp
add
not
push
mov
xchg
ret
fildl
add
popf
mov
clc
repnz
nop
nop
jae
add
cmpsl
dec
mov
jmp
jne
push
mov
xchg
ret
les
mov
add
fwait
add
clc
repnz
nop
nop
jae
add
les
add
cmpsl
cwtl
popa
mov
clc
repnz
nop
nop
jae
push
add
and
cmp
push
mov
xchg
ret
sub
add
xchg
pop
addr16
push
mov
xchg
ret
lahf
js
leave
js
cmpsb
jo
mov
mov
clc
repnz
nop
nop
jae
pop
add
arpl
and
nop
nop
jae
push
add
add
jne
push
clc
repnz
nop
nop
jae
add
jne
add
cmp
mov
push
clc
repnz
nop
nop
jae
add
les
xor
push
mov
xchg
ret
add
loopne
cmpsl
add
xor
add
repnz
nop
nop
jae
add
mov
sub
nop
push
mov
leave
nop
jmp
add
mov
fadds
add
mov
clc
repnz
nop
nop
jae
jg
inc
js
cmp
add
fld1
clc
repnz
nop
nop
jae
mov
push
fadd
xchg
inc
push
mov
xchg
ret
add
add
xor
inc
lahf
cmp
repnz
nop
nop
jae
fldl
push
add
cmpsl
out
test
mov
inc
add
sbb
add
xor
sar
cld
nop
nop
jae
add
add
leave
mov
add
add
nop
push
mov
leave
nop
jmp
imul
mov
les
repnz
nop
nop
jae
jg
js
fldl
push
push
nop
push
mov
leave
nop
jmp
add
add
xor
add
lret
add
cld
nop
nop
jae
add
stc
add
add
push
nop
push
mov
leave
nop
jmp
add
imul
cld
nop
nop
jae
stc
add
lret
andl
mov
xchg
ret
sub
testb
and
add
cmp
nop
push
mov
leave
nop
jmp
add
sub
mov
leave
nop
jmp
fildl
add
add
cmp
mov
out
popa
inc
add
add
lods
push
adc
lret
clc
repnz
nop
nop
jae
add
and
add
lret
inc
clc
repnz
nop
nop
jae
add
lret
mov
mov
leave
nop
jmp
shrl
add
fcmovnu
mov
cmp
repnz
nop
nop
jae
fildl
popf
add
add
mov
clc
repnz
nop
nop
jae
add
cs
xor
andb
push
push
mov
xchg
ret
add
add
popf
push
lret
mov
dec
push
clc
repnz
nop
nop
jae
add
ret
clc
repnz
nop
nop
jae
cmpsl
popf
testb
js
mov
clc
repnz
nop
nop
jae
add
add
add
push
clc
repnz
nop
nop
jae
cs
popf
cs
les
repnz
nop
nop
jae
add
push
add
push
push
mov
xchg
ret
add
add
jnp
add
add
add
dec
nop
push
mov
leave
nop
jmp
sub
fsubs
add
fildl
stos
div
nop
push
mov
leave
nop
jmp
add
add
jo
add
repnz
add
inc
mov
push
mov
xchg
ret
and
add
jne
clc
repnz
nop
nop
jae
cmpl
add
adc
repnz
nop
nop
jae
jg
lret
into
push
repnz
nop
nop
jae
sub
inc
lahf
add
popf
and
sub
adc
add
add
add
add
add
clc
repnz
nop
nop
jae
dec
repnz
jl
jge
dec
cmp
push
mov
leave
nop
jmp
inc
add
add
jno
add
nop
push
mov
leave
nop
jmp
cmp
add
jns
leave
je
nop
push
mov
leave
nop
jmp
lahf
sub
add
cld
nop
nop
jae
leave
xor
roll
add
xadd
add
repnz
nop
nop
jae
filds
add
cmp
add
inc
add
cmp
cs
arpl
sbb
out
push
clc
repnz
nop
nop
jae
add
add
and
pop
add
cli
lcall
cld
nop
nop
jae
cs
add
add
jmp
clc
repnz
nop
nop
jae
sub
cmpsl
mov
or
and
les
add
mov
adc
repnz
nop
nop
jae
add
add
testb
clc
repnz
nop
nop
jae
add
in
mov
add
lea
clc
repnz
nop
nop
jae
int3
add
add
push
test
nop
push
mov
leave
nop
jmp
add
add
add
pop
add
push
clc
repnz
nop
nop
jae
arpl
imulb
fwait
clc
repnz
nop
nop
jae
repnz
cld
add
cmp
lahf
add
clc
repnz
nop
nop
jae
push
mov
add
subl
jae
fldl
push
and
repnz
nop
nop
jae
das
cmpsl
and
xor
cmc
cmp
add
nop
jmp
add
cmp
ficoms
or
mov
nop
nop
jae
add
js
push
cmpsl
cld
add
fstpt
add
leave
pop
add
push
mov
xchg
ret
popf
add
add
lahf
xor
imul
cld
nop
nop
jae
xor
mov
dec
cmp
rolb
push
clc
repnz
nop
nop
jae
arpl
add
add
add
add
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
stos
subl
cs
add
pop
add
clc
repnz
nop
nop
jae
lret
int3
add
jne
clc
repnz
nop
nop
jae
leave
add
mov
jmp
nop
nop
jae
add
je
mov
xor
push
mov
xchg
ret
sub
add
sti
add
clc
repnz
nop
nop
jae
cmp
add
push
mov
xchg
ret
add
cmpsl
jne
cmp
cmpsl
dec
pop
clc
repnz
nop
nop
jae
lret
inc
add
jno
call
add
mov
cmpsl
cmp
mov
sub
xor
leave
nop
jmp
add
repnz
shll
roll
push
mov
leave
nop
jmp
jg
jno
add
clc
repnz
nop
nop
jae
outsb
add
outsb
add
add
jge
push
mov
xchg
ret
add
sbb
aad
loop
push
mov
xchg
ret
add
int3
add
add
jns
clc
repnz
nop
nop
jae
push
add
add
add
add
repnz
nop
nop
jae
add
loopne
add
lret
sub
mov
add
push
clc
repnz
nop
nop
jae
add
sub
add
lods
adc
cmpw
clc
repnz
nop
nop
jae
gs
jnp
dec
push
mov
xchg
ret
jg
xor
add
jmp
add
repnz
add
add
sbb
add
fildl
aaa
push
clc
repnz
nop
nop
jae
add
xor
into
sar
add
repnz
nop
nop
jae
xor
cmp
test
in
cld
push
mov
xchg
ret
adc
add
add
lds
mov
leave
nop
jmp
loopne
add
clc
repnz
nop
nop
jae
add
add
xchg
cmp
jge
jae
add
clc
repnz
nop
nop
jae
add
leave
fwait
push
mov
xchg
ret
add
and
call
push
mov
xchg
ret
add
add
repnz
push
add
add
mov
clc
repnz
nop
nop
jae
add
out
roll
repnz
nop
nop
jae
inc
xchg
gs
rcrl
mov
leave
nop
jmp
lods
sub
add
fstps
repnz
nop
nop
jae
jg
add
add
arpl
pop
add
clc
repnz
nop
nop
jae
add
add
push
xchg
ds
push
mov
xchg
ret
cmp
push
add
repnz
nop
nop
jae
xchg
add
add
arpl
sbb
repz
push
mov
xchg
ret
add
pop
pop
add
add
notl
repnz
nop
nop
jae
add
add
add
add
repnz
nop
nop
jae
fildl
leave
xor
add
pop
push
mov
xchg
ret
push
loopne
add
jg
dec
imul
mov
clc
repnz
nop
nop
jae
add
add
add
repnz
push
nop
push
mov
leave
nop
jmp
popf
lahf
loopne
push
fiadds
xchg
xchg
ret
cltd
sub
and
lods
stc
add
nop
nop
jae
jno
repnz
adc
loopne
add
clc
repnz
nop
nop
jae
and
add
fldt
pop
clc
repnz
nop
nop
jae
dec
cmpsl
pop
add
add
cmp
nop
nop
jae
js
loopne
add
lret
add
cmp
nop
jmp
add
add
cmp
mov
mov
cld
nop
nop
jae
add
ror
add
cltd
inc
add
add
lods
jg
add
xor
add
xabort
cld
nop
nop
jae
add
cmpsl
and
mov
cmpsb
popa
add
nop
push
mov
leave
nop
jmp
add
mulb
mov
push
mov
xchg
ret
sarl
pop
sbb
cld
nop
nop
jae
lret
outsb
stos
add
pop
add
fwait
nop
push
mov
leave
nop
jmp
xor
jg
adc
cld
nop
nop
jae
cmp
add
push
add
or
mov
xchg
ret
js
cltd
jg
add
push
mov
leave
nop
jmp
stc
add
test
repnz
nop
nop
jae
add
add
rcrl
repnz
nop
nop
jae
cld
add
adc
xor
leave
movzwl
clc
repnz
nop
nop
jae
add
add
mov
repnz
nop
nop
jae
fadd
das
add
add
xchg
mov
nop
push
mov
leave
nop
jmp
lret
add
push
mov
leave
nop
jmp
js
add
add
inc
gs
sbb
push
add
int3
or
mov
jmp
nop
nop
jae
fmul
add
js
rorl
sub
add
clc
repnz
nop
nop
jae
add
in
push
nop
push
mov
leave
nop
jmp
mulb
jne
push
mov
xchg
ret
mov
mov
add
nop
nop
jae
add
adc
xor
cmp
mov
add
mov
leave
nop
jmp
add
add
test
push
mov
xchg
ret
test
popf
add
negb
jle
add
nop
jmp
jno
cmpsl
das
xor
sbb
ljmp
fwait
add
nop
push
mov
leave
nop
jmp
add
jb
add
repnz
nop
nop
jae
dec
test
nop
push
mov
leave
nop
jmp
lods
int3
inc
add
inc
add
cmp
cld
nop
nop
jae
fcmovne
xor
jne
nop
push
mov
leave
nop
jmp
xor
cltd
test
add
push
mov
leave
nop
jmp
loopne
add
add
test
adc
dec
jp
add
fildl
add
add
clc
repnz
nop
nop
jae
add
cmpsl
add
add
add
jb
repnz
nop
nop
jae
add
inc
fadd
mov
clc
repnz
nop
nop
jae
lret
add
movsb
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
nop
jae
les
int3
jg
xor
fwait
clc
repnz
nop
nop
jae
xchg
scas
push
clc
repnz
nop
nop
jae
sub
loopne
add
mov
push
mov
xchg
ret
filds
mov
sub
push
push
push
mov
xchg
ret
add
add
loopne
add
xchg
inc
add
cld
add
add
fildl
xor
mov
clc
repnz
nop
nop
jae
add
das
push
clc
repnz
nop
nop
jae
subl
imul
repnz
nop
nop
jae
add
jl
sub
repnz
nop
nop
jae
and
lahf
lahf
sub
repnz
nop
nop
jae
outsb
testb
add
das
fisttpl
mov
xchg
ret
add
gs
nop
push
mov
leave
nop
jmp
cltd
cmp
and
add
out
scas
inc
je
clc
repnz
nop
nop
jae
add
divb
mov
leave
nop
jmp
and
sub
cmpsl
add
jno
test
cld
nop
nop
jae
fdivrs
dec
add
add
clc
repnz
nop
nop
jae
mov
test
nop
nop
jae
inc
sub
dec
add
movsl
dec
nop
push
mov
leave
nop
jmp
add
add
cmp
mov
leave
nop
jmp
xor
lret
inc
mov
test
repnz
nop
nop
jae
add
cs
cld
nop
nop
jae
add
cld
dec
inc
and
add
nop
nop
jae
add
add
add
lcall
add
repnz
nop
nop
jae
lahf
add
push
add
mov
clc
repnz
nop
nop
jae
inc
add
mov
push
mov
xchg
ret
add
xor
mov
add
add
cwtl
jb
movsl
and
clc
repnz
nop
nop
jae
and
xchg
stos
pop
add
clc
repnz
nop
nop
jae
add
add
dec
add
in
leave
nop
jmp
add
xor
add
add
imul
jae
int3
add
add
enter
clc
repnz
nop
nop
jae
add
stc
js
cmp
repnz
push
mov
leave
nop
jmp
add
xor
fistps
data16
pop
clc
repnz
nop
nop
jae
add
add
je
clc
repnz
nop
nop
jae
fildl
push
inc
jmp
add
cmpsl
ror
add
dec
add
push
add
add
xor
nop
push
mov
leave
nop
jmp
add
das
sbb
stc
addl
adc
fistpl
arpl
cld
nop
nop
jae
add
fildll
xor
repnz
nop
nop
jae
add
add
movb
mov
xchg
ret
add
stos
testb
mov
inc
adc
repnz
nop
nop
jae
xor
add
popf
add
bound
and
push
mov
leave
nop
jmp
add
adc
add
cld
nop
nop
jae
add
add
and
pop
push
mov
xchg
ret
jne
add
mov
rorl
repnz
nop
nop
jae
stc
gs
and
inc
loopne
repnz
nop
nop
jae
cltd
add
mov
push
push
mov
xchg
ret
add
sbb
and
add
data16
add
dec
cwtl
inc
add
lret
inc
add
add
jb
nop
push
mov
leave
nop
jmp
add
push
mov
add
add
add
mov
add
mov
nop
push
mov
leave
nop
jmp
add
fildll
clc
repnz
nop
nop
jae
add
cmp
add
add
push
push
mov
xchg
ret
and
cmp
add
add
fld1
push
mov
xchg
ret
and
cmp
add
clc
repnz
nop
nop
jae
cld
cmpsl
add
orl
mov
lcall
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
add
push
repnz
jg
fdivrp
xchg
mov
clc
repnz
nop
nop
jae
jns
outsb
add
add
sbb
and
sub
fildl
add
sub
nop
jmp
int3
add
sub
jg
clc
repnz
nop
nop
jae
les
add
jne
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
stc
adc
add
add
sbb
pushf
push
add
ret
clc
repnz
nop
nop
jae
add
les
add
cmp
mov
xchg
ret
add
testb
sub
loopne
adc
stos
test
in
je
clc
repnz
nop
nop
jae
repnz
sbb
xchg
out
gs
push
mov
xchg
ret
jne
add
xor
lahf
sub
mov
pop
add
clc
repnz
nop
nop
jae
jns
pop
ret
xor
push
mov
xchg
ret
fistpl
add
mov
push
mov
leave
nop
jmp
xor
push
sbb
cmpsl
dec
add
push
mov
js
inc
add
js
add
add
add
sti
fistpl
clc
repnz
nop
nop
jae
les
cltd
sub
jnp
add
imul
clc
repnz
nop
nop
jae
xchg
int3
orl
clc
repnz
nop
nop
jae
dec
add
add
filds
xor
rcr
and
mov
xchg
ret
add
xor
inc
mov
push
mov
xchg
ret
cs
inc
xor
cmpsl
stc
scas
mov
nop
push
mov
leave
nop
jmp
xor
add
dec
pop
push
mov
xchg
ret
add
add
add
pusha
clc
repnz
nop
nop
jae
add
add
push
stos
add
cld
nop
nop
jae
add
add
add
bound
scas
mov
clc
repnz
nop
nop
jae
add
add
cmp
mov
add
jge
nop
push
mov
leave
nop
jmp
add
add
fisttpll
sub
mov
test
add
clc
repnz
nop
nop
jae
xor
popl
clc
repnz
nop
nop
jae
arpl
add
cmp
repnz
nop
nop
jae
sbb
add
cltd
or
jns
call
nop
jae
outsb
add
lahf
loopne
cmp
lcall
inc
add
adc
add
nop
icebp
xchg
push
mov
xchg
ret
xor
add
outsb
add
call
nop
jmp
fldl
testb
mov
xchg
ret
int3
cmp
mov
add
cmpsb
stos
rep
clc
repnz
nop
nop
jae
add
xor
add
adc
in
leave
nop
jmp
push
add
js
imul
ljmp
test
addl
fildl
stos
add
adc
repnz
nop
nop
jae
outsb
add
shll
add
add
mov
clc
repnz
nop
nop
jae
fstpl
sbb
jae
rcll
mov
xchg
ret
cmp
test
sbb
cmp
nop
jae
add
add
add
push
mov
xchg
ret
adc
xor
add
xchg
mov
push
mov
xchg
ret
add
js
repnz
xorl
clc
repnz
nop
nop
jae
cs
push
mov
xchg
ret
imul
add
xor
nop
pop
sub
repnz
nop
nop
jae
push
lods
in
jbe
mov
jmp
repnz
nop
nop
jae
jns
add
add
clc
repnz
nop
nop
jae
inc
and
pop
add
push
mov
leave
nop
jmp
cmp
fsubrs
add
nop
push
mov
leave
nop
jmp
inc
add
cmp
xor
call
mov
xchg
ret
and
sbb
arpl
add
nop
push
mov
leave
nop
jmp
cltd
lods
sbb
cmpsl
mov
clc
repnz
nop
nop
jae
add
add
aas
movzwl
clc
repnz
nop
nop
jae
push
add
test
push
add
add
inc
cltd
add
xor
cmp
xor
pop
nop
push
mov
leave
nop
jmp
add
and
filds
add
pop
clc
repnz
nop
nop
jae
add
add
lahf
add
fisttpl
push
pop
nop
push
mov
leave
nop
jmp
add
cmpsl
add
popf
shll
nop
push
mov
leave
nop
jmp
add
jns
add
loopne
adc
insb
add
mov
push
mov
xchg
ret
inc
add
andl
rol
rorb
repnz
nop
nop
jae
lods
add
add
jno
push
loopne
mov
xchg
ret
orl
and
repnz
nop
nop
jae
cmpsl
add
les
mov
leave
nop
jmp
add
test
mov
repnz
nop
nop
jae
les
add
fcomip
dec
das
add
dec
cmp
repnz
nop
nop
jae
add
adc
clc
repnz
nop
nop
jae
add
cmp
add
mov
clc
repnz
nop
nop
jae
fldl
popf
add
and
add
fisttpll
mov
adc
repnz
nop
nop
jae
add
jns
add
add
pushl
clc
repnz
nop
nop
jae
add
repnz
add
push
add
cmp
decl
clc
repnz
nop
nop
jae
add
add
mov
je
nop
push
mov
leave
nop
jmp
les
add
pop
jmp
add
jns
roll
add
add
add
cld
fistpl
add
nop
push
mov
leave
nop
jmp
pop
loopne
add
clc
repnz
nop
nop
jae
and
add
jg
popf
pop
clc
repnz
nop
nop
jae
les
lahf
cltd
xacquire
add
or
nop
jmp
fldt
xor
clc
repnz
nop
nop
jae
arpl
inc
lahf
mov
add
clc
repnz
nop
nop
jae
js
add
mov
add
add
mov
clc
repnz
nop
nop
jae
add
int3
pop
add
cmp
push
mov
xchg
ret
add
add
adc
ret
xchg
inc
add
add
gs
cmp
push
clc
repnz
nop
nop
jae
add
add
mov
push
mov
leave
nop
jmp
int3
add
add
jns
push
clc
repnz
nop
nop
jae
cmp
imul
test
push
mov
leave
nop
jmp
add
mov
jg
rcll
bound
xchg
ret
sbb
repnz
add
add
clc
repnz
nop
nop
jae
repnz
inc
add
repnz
nop
nop
jae
add
js
add
add
clc
repnz
nop
nop
jae
cltd
add
and
add
in
add
movl
jae
fdivs
sub
add
or
stos
rep
push
mov
xchg
ret
add
pop
stos
pop
lea
clc
repnz
nop
nop
jae
xchg
dec
jg
sub
mov
xchg
ret
sbb
add
leave
add
fcmovnu
call
nop
jae
add
and
outsb
add
cld
nop
nop
jae
and
xor
lods
xor
mov
inc
clc
repnz
nop
nop
jae
jns
add
add
stos
cmc
add
clc
repnz
nop
nop
jae
testb
add
jg
lea
push
mov
xchg
ret
imul
flds
xchg
inc
add
xchg
inc
arpl
repz
clc
repnz
nop
nop
jae
rcrl
cld
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
add
lea
js
nop
push
mov
leave
nop
jmp
add
popf
les
cmp
push
mov
xchg
ret
add
testb
add
mov
add
aad
sti
clc
repnz
nop
nop
jae
xor
add
pop
push
mov
xchg
ret
add
add
cmp
add
dec
pop
push
mov
xchg
ret
add
add
add
add
add
fistpl
clc
repnz
nop
nop
jae
and
sbb
cmp
add
add
push
mov
leave
nop
jmp
fsubrs
add
lds
xchg
jl
add
add
and
add
addr16
clc
repnz
nop
nop
jae
cmp
and
clc
repnz
nop
nop
jae
lahf
addl
orl
out
clc
clc
repnz
nop
nop
jae
add
das
inc
iret
lea
clc
repnz
nop
nop
jae
add
xor
rorl
mov
xchg
ret
lods
add
test
cmp
nop
push
mov
leave
nop
jmp
mov
add
nop
nop
jae
jnp
add
cltd
popf
mov
jmp
nop
jae
shll
dec
push
add
push
mov
xchg
ret
jnp
lret
add
rep
clc
repnz
nop
nop
jae
cmp
add
cmp
daa
fwait
clc
repnz
nop
nop
jae
popf
inc
add
add
xor
push
clc
repnz
nop
nop
jae
add
dec
add
lods
and
lea
add
popf
add
pop
add
add
js
popl
cld
nop
nop
jae
add
cmp
add
add
clc
repnz
nop
nop
jae
add
add
int
pusha
or
add
repnz
nop
nop
jae
int3
add
sub
leave
nop
jmp
add
fildl
push
add
pop
add
add
nop
push
mov
leave
nop
jmp
js
add
inc
add
clc
lret
jns
clc
repnz
nop
nop
jae
fildl
add
jnp
add
add
adcl
mov
leave
nop
jmp
xor
add
pop
push
clc
repnz
nop
nop
jae
add
js
inc
xchg
das
mov
clc
repnz
nop
nop
jae
add
add
push
and
movl
cld
nop
nop
jae
lahf
lret
jnp
lods
rorl
test
clc
call
nop
jmp
rcll
jno
add
shl
clc
repnz
nop
nop
jae
add
xor
mov
push
mov
xchg
ret
les
add
xchg
lret
add
nop
push
mov
leave
nop
jmp
les
add
push
clc
repnz
nop
nop
jae
lahf
arpl
outsb
add
add
push
mov
pop
add
ffree
add
arpl
pop
add
add
sub
shlb
mov
xchg
ret
add
int3
add
add
mov
nop
push
mov
leave
nop
jmp
cmpsl
add
add
pop
add
adc
lock
es
clc
repnz
nop
nop
jae
xor
fildl
cltd
xor
mov
xchg
ret
xor
add
mov
les
add
add
nop
jmp
dec
add
in
push
mov
mov
push
add
and
add
jmp
mov
push
mov
leave
nop
jmp
cmp
nop
sbb
xor
adc
add
add
add
add
add
sbb
clc
repnz
nop
nop
jae
add
add
add
mov
inc
add
shll
add
and
fdivrl
mov
leave
nop
jmp
pop
add
add
in
xor
push
mov
xchg
ret
loopne
sbb
into
jne
clc
repnz
nop
nop
jae
xor
add
xor
add
clc
repnz
nop
nop
jae
les
sub
call
nop
jae
add
add
add
and
mov
push
mov
xchg
ret
cmp
add
mov
loope
incl
add
repnz
nop
nop
jae
js
in
leave
nop
jmp
and
add
inc
add
push
mov
xchg
ret
add
add
sbb
test
add
lret
clc
repnz
nop
nop
jae
add
adc
add
ljmp
push
mov
xchg
ret
popf
add
add
mov
fdivrl
cld
nop
nop
jae
add
loopne
and
nop
push
mov
leave
nop
jmp
and
test
add
push
push
mov
xchg
ret
sub
add
add
fdivs
sarl
clc
repnz
nop
nop
jae
add
add
icebp
xor
clc
repnz
nop
nop
jae
mov
add
movsl
lods
push
mov
xchg
ret
loopne
xor
add
jns
ror
add
clc
repnz
nop
nop
jae
das
and
add
add
fbld
push
mov
leave
nop
jmp
add
add
in
popa
clc
repnz
nop
nop
jae
fildl
add
cld
sbb
add
addr16
nop
push
mov
leave
nop
jmp
add
outsb
add
mov
dec
cmp
repnz
nop
nop
jae
sub
add
mov
imul
jae
loopne
add
xor
nop
jae
lret
testb
and
dec
call
clc
repnz
nop
nop
jae
xor
add
adc
lcall
cld
nop
nop
jae
imul
dec
add
pop
mov
clc
repnz
nop
nop
jae
imul
clc
in
pop
clc
repnz
nop
nop
jae
add
fildl
and
jno
add
nop
push
mov
leave
nop
jmp
push
cs
cmpl
add
push
xchg
push
mov
xchg
ret
das
add
leave
push
mov
sbb
adc
clc
repnz
nop
nop
jae
add
push
mov
xchg
ret
fdivs
cmp
add
rep
nop
push
mov
leave
nop
jmp
add
add
nop
nop
jae
add
jne
add
xchg
add
in
leave
nop
jmp
add
fildl
fldl
popf
add
add
clc
repnz
nop
nop
jae
add
add
fbld
jmp
fbld
add
jno
fsubrs
fneni(8087
add
and
mov
xchg
ret
add
add
sub
test
fcos
call
nop
jmp
mov
rclb
das
imul
lahf
add
add
push
add
push
mov
xchg
ret
stc
lods
fildl
int3
add
push
mov
xchg
ret
fdivr
test
mov
cmp
nop
push
mov
leave
nop
jmp
xor
pop
fsubs
dec
add
xor
add
repnz
nop
nop
jae
subl
aad
clc
repnz
nop
nop
jae
dec
leave
fildl
add
les
mov
xchg
ret
stc
mov
add
enter
push
mov
xchg
ret
add
jg
in
clc
repnz
nop
nop
jae
jne
cs
cmpsl
add
add
dec
add
add
add
repnz
nop
nop
jae
add
js
mov
push
mov
xchg
ret
outsb
imul
add
repnz
nop
nop
jae
pop
popf
stos
add
testb
add
add
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
lahf
leave
xor
fistpl
push
mov
xchg
ret
les
add
add
pop
clc
repnz
nop
nop
jae
loopne
fadds
add
add
lret
test
in
clc
repnz
nop
nop
jae
push
cltd
add
nop
nop
jae
fcmovnu
add
sbb
stos
add
mov
clc
repnz
nop
nop
jae
xor
jmp
mov
add
add
repnz
nop
nop
jae
fdivr
add
subl
clc
repnz
nop
nop
jae
add
fisttpll
add
clc
repnz
nop
nop
jae
add
pop
loopne
add
je
jmp
add
lahf
add
jg
sub
add
add
call
clc
repnz
nop
nop
jae
xor
add
inc
ret
clc
repnz
nop
nop
jae
xor
loopne
stc
jnp
add
repnz
nop
nop
jae
add
in
fdivrp
repnz
nop
nop
jae
add
add
cmpsl
mov
or
mov
add
repnz
nop
nop
jae
add
sar
repnz
nop
nop
jae
sub
add
jns
mov
rclb
nop
jmp
roll
add
add
clc
in
sbb
push
mov
xchg
ret
add
add
xor
add
push
mov
xchg
ret
add
cmp
cmp
sbb
nop
jmp
add
add
add
repnz
nop
nop
jae
sub
add
imul
inc
add
cmpl
xor
cld
sbb
mov
xorb
cld
nop
nop
jae
push
fcomps
aaa
add
clc
repnz
nop
nop
jae
add
add
jnp
add
clc
repnz
nop
nop
jae
and
lahf
idivl
clc
repnz
nop
nop
jae
add
popf
lcall
popf
clc
repnz
nop
nop
jae
add
in
add
add
add
add
add
add
add
test
push
clc
repnz
nop
nop
jae
loopne
xchg
and
mov
mov
xchg
ret
lods
add
js
add
add
mov
je
js
mov
xchg
ret
adc
adc
test
add
add
repnz
nop
nop
jae
add
pop
push
clc
repnz
nop
nop
jae
jns
sub
add
add
add
push
mov
xchg
ret
add
xor
add
lods
fld1
push
mov
xchg
ret
loopne
add
test
add
clc
repnz
nop
nop
jae
arpl
stos
stc
add
stos
and
adc
dec
add
idivl
nop
push
mov
leave
nop
jmp
sub
into
mov
mov
leave
nop
jmp
sarl
adc
in
add
clc
repnz
nop
nop
jae
add
add
add
mov
add
faddp
push
push
mov
xchg
ret
gs
pop
add
add
mov
cld
nop
nop
jae
les
popf
add
add
cwtl
pand
push
mov
xchg
ret
cmp
addl
xchg
mov
and
nop
push
mov
leave
nop
jmp
add
xchg
xor
repnz
nop
nop
jae
add
add
inc
testb
repnz
nop
nop
jae
jnp
add
add
arpl
outsb
add
push
nop
push
mov
leave
nop
jmp
add
popf
cmpsl
mov
daa
add
nop
push
mov
leave
nop
jmp
add
outsb
jns
add
mov
in
push
mov
xchg
ret
das
js
add
add
push
xchg
mov
clc
repnz
nop
nop
jae
lahf
add
add
xor
xchg
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
fildl
add
gs
repnz
nop
nop
jae
add
add
add
cmp
xchg
inc
mov
nop
push
mov
leave
nop
jmp
add
add
test
mov
xchg
ret
add
add
stc
outsb
add
repnz
nop
nop
jae
push
sar
add
add
mov
clc
repnz
nop
nop
jae
cmpsl
add
add
add
add
nop
push
mov
leave
nop
jmp
js
add
cmp
rclb
insb
inc
add
add
fldt
add
push
mov
leave
nop
jmp
add
xor
in
add
clc
repnz
nop
nop
jae
xor
fdivrs
in
jg
add
add
leave
nop
jmp
add
add
xor
clc
repnz
nop
nop
jae
xor
dec
add
loopne
adc
or
push
mov
leave
nop
jmp
cmp
add
jmp
in
leave
nop
jmp
and
outsb
pop
add
lret
add
push
mov
xchg
ret
test
leave
add
add
push
mov
xchg
ret
cmpsl
sbb
loopne
and
call
clc
repnz
nop
nop
jae
and
add
add
in
leave
nop
jmp
imul
imul
cld
nop
nop
jae
add
add
test
cmp
cld
nop
nop
jae
js
add
lea
repnz
nop
nop
jae
jg
add
cmp
int3
and
jns
iret
or
inc
add
jg
inc
jns
add
push
clc
repnz
nop
nop
jae
add
inc
outsb
add
cld
add
movsb
nop
push
mov
leave
nop
jmp
xor
dec
jno
fnsave
aas
mov
clc
repnz
nop
nop
jae
leave
add
mov
push
add
nop
push
mov
leave
nop
jmp
popf
fstpt
clc
orl
nop
nop
jae
fildl
add
cmp
subl
push
mov
xchg
ret
add
and
pop
clc
repnz
nop
nop
jae
add
testb
les
movsl
je
clc
repnz
nop
nop
jae
dec
fdivr
ret
push
clc
repnz
nop
nop
jae
das
add
int3
add
les
clc
repnz
nop
nop
jae
les
sbb
jle
mov
incl
add
xor
push
cs
lahf
cmp
jno
add
daa
fistpl
clc
repnz
nop
nop
jae
xchg
jno
mov
clc
repnz
nop
nop
jae
add
xor
cs
xor
clc
repnz
nop
nop
jae
arpl
add
fists
jne
clc
repnz
nop
nop
jae
add
add
add
rorl
mov
cld
nop
nop
jae
cmpsl
add
dec
jo
popf
push
push
mov
xchg
ret
add
js
outsb
add
mov
rorl
repnz
nop
nop
jae
lret
cmp
leave
sub
repnz
nop
nop
jae
and
add
xchg
lea
in
leave
nop
jmp
cmp
jnp
add
mov
mov
xchg
ret
add
imul
pushl
clc
repnz
nop
nop
jae
add
gs
pop
add
cs
clc
repnz
nop
nop
jae
fstpt
add
dec
sub
repz
add
les
push
icebp
add
push
mov
xchg
ret
loopne
xor
jne
sub
clc
repnz
nop
nop
jae
add
sub
add
nop
nop
jae
xor
add
jne
nop
push
mov
leave
nop
jmp
sub
arpl
clc
repnz
nop
nop
jae
add
add
mov
clc
push
mov
xchg
ret
loopne
add
add
ja
clc
repnz
nop
nop
jae
fistps
pop
clc
repnz
nop
nop
jae
pop
add
push
add
lret
mov
cmp
repnz
nop
nop
jae
add
add
testb
jg
push
clc
repnz
nop
nop
jae
and
add
popf
cmp
rorb
test
repz
call
nop
jmp
add
add
stc
clc
repnz
nop
nop
jae
add
leave
add
inc
add
and
repnz
nop
nop
jae
add
push
imul
mov
xchg
ret
add
add
sbb
mov
push
mov
leave
nop
jmp
add
incb
add
clc
repnz
nop
nop
jae
shrl
add
sar
repnz
nop
nop
jae
add
mov
fistpll
shr
push
mov
xchg
ret
mov
stos
add
adc
repnz
nop
nop
jae
add
leave
add
stc
add
clc
repnz
nop
nop
jae
add
cmp
add
insl
cmpl
nop
push
mov
leave
nop
jmp
add
add
add
cld
nop
nop
jae
add
add
xor
inc
jnp
xor
clc
repnz
nop
nop
jae
and
jl
sbb
repnz
nop
nop
jae
add
add
and
inc
mov
clc
repnz
nop
nop
jae
adc
add
xor
rsm
push
mov
xchg
ret
stc
cmp
add
add
repnz
pop
push
mov
xchg
ret
stc
rcll
fadds
arpl
mov
xchg
ret
outsb
jne
add
call
clc
repnz
nop
nop
jae
mov
adc
mov
call
clc
repnz
nop
nop
jae
add
stos
fmuls
mov
leave
nop
jmp
add
add
add
push
mov
mov
bound
add
adc
or
push
mov
xchg
ret
cmpsl
arpl
testb
jnp
pop
clc
repnz
nop
nop
jae
mov
int3
add
ret
mov
clc
repnz
nop
nop
jae
add
stos
add
insl
je
clc
repnz
nop
nop
jae
jns
rorl
sbb
clc
repnz
nop
nop
jae
add
add
add
push
mov
add
mov
add
out
add
add
pop
push
mov
xchg
ret
lret
push
add
cmpsl
add
mov
nop
push
mov
leave
nop
jmp
and
add
push
cmp
nop
je
add
add
adc
mov
sbb
nop
push
mov
leave
nop
jmp
add
inc
sub
idiv
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
test
add
inc
adc
nop
nop
jae
test
cltd
sub
nop
add
clc
repnz
nop
nop
jae
inc
add
clc
repnz
nop
nop
jae
dec
cltd
pop
fildl
xchg
or
call
nop
jae
add
add
loopne
push
add
clc
repnz
nop
nop
jae
stos
add
js
add
jge
clc
repnz
nop
nop
jae
stc
fcmovnu
addl
add
jae
repnz
nop
nop
jae
jne
add
add
nop
push
mov
leave
nop
jmp
add
test
pop
push
push
mov
xchg
ret
jno
add
add
fsub
mov
clc
repnz
nop
nop
jae
dec
add
add
clc
repnz
nop
nop
jae
adc
jg
add
pusha
push
mov
xchg
ret
add
add
jnp
add
cltd
push
add
nop
nop
jae
add
add
mov
pop
nop
push
mov
leave
nop
jmp
roll
add
push
leave
shll
mov
nop
nop
jae
add
add
cmp
push
push
mov
xchg
ret
cmp
popf
add
adc
in
or
in
add
add
inc
lods
add
sbb
add
dec
test
add
jmp
or
or
push
add
test
in
mov
lahf
jg
nop
addr16
mov
add
add
shrb
ljmp
cwtl
add
xchg
mov
sahf
inc
ja
gs
push
sarl
push
xchg
dec
dec
add
add
aam
add
notl
add
adc
add
gs
cmp
insl
test
jmp
dec
fistpl
xchg
pop
dec
popl
adc
push
add
push
mov
add
add
pop
repz
add
sahf
jmp
out
add
stos
sub
in
pop
add
add
cmc
or
cwtl
loopne
add
das
repnz
fstpl
add
cs
stos
out
xor
pushf
aam
cli
ja
loopne
subl
dec
xorb
aaa
ffree
push
add
out
add
outsb
add
xchg
add
repnz
sarb
add
add
xchg
popf
ja
add
jmp
ljmp
lret
mov
add
fldt
mov
mov
dec
mov
inc
rol
cmp
popf
test
xchg
out
mov
mov
add
add
pop
mov
pop
cmp
add
add
fistps
repz
cmp
shlb
das
movsl
xor
jge
push
add
dec
insb
add
push
sub
add
mov
mov
mov
add
add
jnp
add
add
push
cmp
inc
fstpt
pusha
add
cwtl
lret
add
add
add
push
add
sti
out
xor
add
dec
add
pop
jg
jge
xchg
push
add
add
lret
pop
add
outsl
inc
add
jns
pop
mov
jbe
mov
add
test
ret
mov
add
add
add
add
insb
add
or
call
rclb
ljmp
add
les
add
int3
push
add
mov
mov
add
add
add
loopne
xchg
mov
jae
nop
and
cmc
mov
add
add
movsl
push
mov
mov
pop
adc
add
leave
jne
ja
cmp
inc
add
movsl
cld
popa
js
lods
data16
fwait
sub
xchg
iret
sub
test
add
and
dec
add
add
ja
loopne
fildl
shrl
add
repz
jge
ret
add
jns
add
xchg
adcb
add
jne
add
add
lret
jb
mov
mov
fcompl
add
aaa
stos
mov
inc
add
add
add
adc
jo
ja
fcomps
int
add
jecxz
add
xchg
pop
add
loopne
add
or
das
jp
mov
fcmovu
lahf
call
bound
xchg
cmc
sbb
add
xchg
xchg
inc
mov
add
aam
cwtl
out
int3
into
rol
ljmp
xchg
add
incb
push
add
lods
cmp
xor
xor
sub
xor
outsl
clc
shll
mov
das
fimull
add
add
lods
jge
add
sbb
mov
cmp
cmpl
add
xorl
cmp
test
roll
add
pop
and
sahf
enter
push
stos
xchg
jno
pop
mov
clc
popa
jns
add
add
inc
add
xchg
cld
cwtl
sti
sti
test
aam
aad
add
enter
icebp
push
sti
int3
fbld
add
pop
add
js
stos
push
add
shl
lahf
jae
adc
adc
pop
add
pop
add
pop
xor
pop
dec
add
lds
fdivs
add
test
add
add
xchg
addr16
adcb
add
inc
add
add
or
add
cmp
push
add
add
sub
out
je
stos
lcall
jns
add
add
mov
add
jbe
inc
pop
jg
mov
lock
sbb
daa
cmp
cmp
repz
add
cli
xchg
mov
mov
aas
loope
lds
mov
iret
scas
negl
fwait
shrb
jb
xchg
mov
in
add
mov
push
add
scas
pop
cwtl
dec
add
inc
dec
add
in
imul
ljmp
fs
sarb
add
sbb
ja
nop
bnd
jbe
lods
cs
cmp
enter
xchg
push
add
mov
movsb
push
in
xor
or
iret
xor
mov
cmp
cld
andl
add
stc
push
add
jle
in
adc
pop
insb
add
add
xor
xor
aas
jo
in
das
js
dec
das
xor
pop
movsl
in
push
add
orl
xchg
pushf
enter
add
add
add
sbb
leave
outsl
mov
add
sub
sbb
cmpsl
mov
push
add
add
push
add
add
cltd
xor
push
add
enter
or
dec
in
push
add
add
mov
xchg
or
test
insb
add
mov
jmp
jp
sub
jmp
and
sbb
xor
add
add
fisubrl
jbe
cld
fsubr
aad
repz
aam
add
add
mov
add
mov
cmp
add
fiaddl
rcr
xor
bound
mov
xor
cmpl
mov
push
add
lcall
add
cld
push
les
nopl
and
inc
cmp
xor
xchg
mov
mov
lret
mov
stos
add
add
xchg
imull
in
sub
inc
add
xchg
push
add
mov
outsl
mov
in
sub
jg
add
adc
xor
mov
sbbl
sysret
lock
add
add
out
inc
and
lock
jl
pop
add
add
add
lret
ljmp
xchg
jns
inc
add
sub
and
xchg
stos
test
sbb
in
imul
add
imul
add
add
push
add
lahf
xchg
push
jge
xchg
sub
inc
add
mov
and
les
xor
add
hlt
pop
add
bound
xchg
xor
add
add
xor
push
add
rcrl
add
jno
add
add
add
aam
inc
add
mov
fdivl
adc
aaa
push
mov
push
das
repz
add
pop
dec
mov
insb
add
add
cwtl
xchg
imul
stc
ret
mov
add
cmc
sbb
mov
jne
sub
add
push
add
push
add
sbb
inc
scas
dec
sbb
inc
add
xchg
mov
push
mov
add
cmp
add
add
adc
cwtl
dec
add
add
add
add
arpl
add
add
imulb
lret
imul
in
scas
xchg
fwait
imul
add
inc
xchg
mov
mov
out
mov
push
add
and
mov
xor
fld
stos
popa
xor
push
add
out
xchg
pop
jge
fbld
push
add
mov
add
outsl
shll
repnz
inc
pop
xchg
in
stc
dec
lret
push
shl
dec
into
or
jnp
imul
xor
push
add
or
jecxz
cmp
mov
mov
jecxz
out
jns
sbb
mov
cli
call
add
add
add
aam
js
mov
xchg
push
add
sbb
mov
pop
fwait
pop
add
enter
into
xchg
shr
stc
cmp
lea
xor
and
lret
mov
xchg
mov
ret
pop
add
stc
bound
std
test
and
lods
pop
les
mov
stos
aad
pop
add
pop
outsb
add
add
cmp
imul
dec
je
add
or
dec
add
out
push
add
add
cmp
fcomps
xor
sti
test
fistpll
add
push
add
add
test
mov
or
or
loopne
xchg
add
scas
lret
lods
pop
push
add
fistpll
inc
lds
fdivrl
add
mov
add
dec
mov
mov
dec
inc
in
sub
mov
xchg
pop
add
add
add
sub
push
add
add
add
add
imul
leave
lock
add
dec
add
add
cmp
pop
xchg
and
xchg
xchg
inc
xor
xchg
or
add
jns
add
sub
idivl
xchg
pop
rcrl
add
push
add
test
sbb
sbb
add
fistps
mov
add
aad
jno
test
rcr
lret
mov
int
push
add
add
dec
add
adc
xchg
mov
fsts
add
xlat
adc
mov
add
inc
stc
cmpsb
movsl
stos
adc
pop
add
popf
into
jecxz
add
add
call
stos
iret
lret
add
cmc
repz
loope
jge
mov
add
add
lret
add
add
xchg
add
ja
and
pop
cmp
inc
pop
outsl
cmc
test
mov
push
add
and
add
scas
sbb
lds
add
jl
popa
sbbb
pop
arpl
scas
aaa
mov
out
add
push
add
lds
or
dec
xor
sub
in
cltd
mov
add
inc
mov
scas
repnz
ja
out
ret
inc
cmp
arpl
mov
pusha
add
insb
add
push
out
or
lret
xchg
add
into
push
mov
mov
xchg
adc
daa
cltd
mov
add
sub
sub
push
add
add
dec
mov
xchg
into
inc
mov
mov
or
jb
mov
das
out
cmp
add
loope
lods
mov
add
rolb
add
add
shrb
movsb
repnz
mov
aam
add
movsl
adc
call
cmc
and
fwait
js
or
push
add
xchg
mov
add
add
lods
xlat
xchg
mov
jecxz
add
add
arpl
add
dec
jnp
add
std
jno
out
push
add
cmp
jge
inc
add
add
add
fildl
add
leave
pushf
in
mov
orl
add
dec
mov
aam
cmp
add
add
shl
add
add
push
add
add
inc
add
jmp
sub
push
aaa
mov
sti
mov
add
aaa
xchg
aam
cmp
and
cwtl
lds
jmp
add
add
jmp
jmp
xor
in
add
fcmove
sub
mov
aam
inc
icebp
cli
int3
dec
mov
push
enter
add
and
mov
std
mov
add
sbb
dec
sub
fcmovbe
jne
add
pop
add
js
and
add
mov
add
push
enter
pop
jl
sbb
pusha
add
mov
mov
add
je
addr16
sbb
pop
push
cwtl
xchg
addr16
mov
jg
rcrb
add
popf
sbb
and
fwait
jae
and
jo
jecxz
cmp
cmpsb
jl
xor
add
xchg
inc
add
adc
cmp
inc
loope
pushf
loope
add
test
ds
loop
or
jo
and
sub
inc
stos
icebp
std
test
int3
jno
les
hlt
xchg
jmp
idivb
xchg
outsl
xchg
ja
adc
dec
push
fsubrl
inc
add
dec
add
adc
push
add
gs
xchg
ss
push
mov
cltd
test
add
or
dec
out
add
adc
ret
enter
push
add
inc
add
jb
lea
sbb
mov
lods
mov
sbb
dec
inc
push
push
les
sbb
cmp
jle
jno
cmpsb
fstcw
mov
add
gs
push
cltd
or
xchg
xor
mov
push
add
aam
rorb
inc
add
xchg
je
xor
insl
xchg
dec
add
dec
sbb
dec
xchg
push
add
mov
mov
add
xor
push
add
cmp
sub
inc
mov
push
add
add
add
add
add
pop
dec
mov
add
cs
test
pusha
add
in
inc
add
insl
pop
dec
add
pop
add
jmp
int3
jbe
dec
jp
repz
jae
xor
pop
add
push
add
or
dec
cmp
loope
cmp
inc
mov
nop
push
add
arpl
sub
push
dec
cmp
adc
add
cmp
add
pop
fwait
adc
and
pusha
add
jns
pop
hlt
aad
test
jg
or
add
cmp
add
imul
or
push
ret
rcl
inc
inc
add
xlat
fisttpl
add
add
in
add
imul
fnstenv
cmp
cmp
rol
mov
mov
cmp
mov
add
push
mov
data16
ds
lcall
mov
mov
adc
fs
cmpsl
test
xlat
jae
cltd
mov
pusha
add
ja
add
imul
dec
add
or
mov
add
jae
sbb
stos
lock
and
and
add
xchg
xor
mov
mov
xorl
adcb
add
cmc
in
cwtl
add
add
out
mov
push
rorl
add
mov
xor
insl
ret
inc
pop
js
mov
mov
pop
sti
jns
xchg
pop
add
add
mov
sub
sub
les
popf
js
cltd
cwtl
pop
loopne
icebp
insl
xor
aas
das
outsl
or
idivl
add
mov
mov
cwtl
popa
xorl
leave
cmpsl
insb
add
movsb
pop
int
dec
in
add
mov
sbbl
jmp
fcomp
lret
xchg
je
mov
add
or
aaa
loop
outsb
add
jl
xor
icebp
pop
das
movsb
mov
sub
or
push
stc
fsubl
dec
add
lock
arpl
mov
sarl
cltd
fwait
jge
cltd
out
and
add
mov
lds
cmp
or
enter
hlt
pop
xlat
push
mov
in
cmp
scas
cli
outsb
add
incb
jnp
out
or
mov
lds
movb
add
xor
scas
test
add
mov
sub
push
add
cld
xlat
add
pushf
mov
into
js
sbb
mov
dec
add
add
into
sub
xor
add
mov
add
insb
add
add
add
dec
add
mov
add
add
add
loop
add
int
xor
add
cwtl
sahf
xchg
or
and
ljmp
jg
adc
add
out
add
add
test
pop
add
dec
add
xchg
mov
add
loope
sub
aad
add
add
sbb
add
mov
push
pop
push
add
add
add
shr
data16
sti
lods
lret
in
or
mov
add
mov
mov
repnz
cli
mov
add
dec
aas
jbe
outsb
add
leave
pop
sbb
pop
iret
out
mov
xchg
js
outsb
add
add
movsb
imul
dec
cmp
or
add
movsb
push
add
jmp
mov
sub
or
xlat
fwait
nop
adc
test
add
mov
daa
repnz
add
add
push
inc
std
outsb
add
repz
add
xor
lods
stc
mov
cwtl
pop
add
dec
mov
and
add
or
push
push
add
leave
adc
mov
mov
in
ret
jl
sub
fisttps
adc
test
add
add
push
add
call
add
test
xor
push
add
sbb
movsb
jmp
loopne
add
pop
add
mov
test
lods
dec
out
mov
rcrl
add
mov
cs
or
jo
jmp
loope
pop
leave
and
fisubrl
test
scas
lret
add
jge
inc
rorb
mov
add
xchg
mov
testb
add
sub
lret
mov
add
data16
inc
add
ret
cwtl
fwait
out
add
mov
push
add
fdivrs
pop
xchg
ror
out
and
jbe
sub
add
add
xor
mov
add
decl
repnz
add
sub
jle
add
dec
lcall
call
and
xchg
push
add
sbb
add
jg
add
mov
add
add
add
dec
mov
jne
add
add
and
sub
add
mov
aaa
nop
xor
shlb
outsb
add
sub
mov
add
bound
cmp
or
jl
mov
adcl
add
arpl
js
int3
or
arpl
mov
add
mov
add
daa
mov
dec
pusha
add
shl
jbe
repnz
fscale
daa
in
in
dec
add
add
mov
jae
add
fmull
add
imul
sbb
add
mov
and
fistpl
add
ret
daa
cmp
pop
add
add
add
add
jnp
pop
add
add
ror
mov
add
insb
add
repnz
sub
add
add
lods
lods
lret
call
fisubs
add
add
stos
jle
test
pop
add
add
add
fs
jecxz
add
ret
add
push
aas
pop
add
inc
add
iret
mov
add
adc
push
iret
jb
sarl
add
fucomip
js
cltd
add
add
or
jnp
mov
rcrl
pop
add
pop
test
sahf
cli
add
xlat
por
icebp
out
inc
add
cmp
xchg
push
adc
pop
xor
lea
push
add
push
sbb
inc
call
add
dec
add
fisttpl
add
outsb
add
mov
add
lcall
inc
cmp
les
repnz
add
add
add
add
add
pop
ret
mov
dec
add
adc
inc
add
aam
jg
dec
jmp
fdivs
xchg
hlt
shl
bound
add
xchg
adc
js
pop
add
push
lea
fwait
lds
add
or
lods
add
add
sti
inc
add
add
add
add
inc
pop
add
add
add
push
add
add
mov
add
pop
jb
in
stos
xchg
test
fcomp
sti
xor
jo
mov
add
out
push
add
inc
add
and
inc
add
add
jecxz
cmpsl
mov
js
cmpsl
stos
jle
imul
add
add
adc
out
inc
add
add
jl
mov
add
mov
scas
mov
nop
out
add
add
jno
add
sub
inc
add
pusha
add
scas
cld
fistps
add
lahf
rcrb
xchg
js
push
push
add
add
add
mov
and
mov
outsl
push
mov
lret
and
cmp
adc
sbb
cmp
outsb
add
imul
jae
or
add
insb
add
into
push
dec
in
mov
xchg
sub
lods
cltd
mov
mov
into
cmp
out
sub
insl
notl
pop
add
add
add
push
add
add
daa
mov
lahf
sub
sub
int3
mov
std
push
add
and
add
xor
add
push
scas
fstp
add
rcrb
fwait
in
fdiv
push
add
add
mov
fimull
ja
mov
add
or
fimuls
aaa
hlt
out
mov
add
lcall
mov
mov
mov
add
shll
dec
add
jl
fildll
stos
fwait
cmpsl
sub
bound
or
xchg
dec
add
push
mov
add
pop
mov
add
mov
daa
push
add
pusha
add
mov
add
insl
push
mov
mov
add
daa
or
or
add
mov
cmp
adc
cmp
push
js
leave
fidivl
push
add
inc
add
or
sbb
xor
mov
insl
out
pushf
mov
addr16
push
add
add
mov
mov
rcl
adcl
stos
push
add
cmpl
sub
mov
add
mov
pushf
adc
xor
jne
add
shl
gs
jmp
add
xchg
imul
repnz
add
inc
sti
add
out
orb
xor
mov
lods
andl
sbb
movsb
mov
jo
neg
testl
sub
or
sbbb
dec
add
daa
mov
movsb
xchg
movsb
mov
lret
loopne
or
add
std
sbb
rcrl
add
das
leave
repz
add
push
add
out
add
xbegin
cmp
out
aad
rolb
jnp
mov
jge
out
push
add
inc
ret
loope
add
jb
sti
icebp
cli
adc
add
dec
add
rcll
fdivr
mov
jg
inc
and
fst
test
add
add
dec
add
jo
out
add
add
jne
std
cmpl
cmpsl
int
iret
push
fwait
mov
mov
sahf
cmpsb
rcrl
pop
sub
add
add
loopne
add
aaa
mov
inc
cmpb
push
mov
ss
decb
mov
dec
add
outsb
add
push
and
mov
movsb
dec
add
test
arpl
test
add
add
mov
add
inc
add
sub
pop
orl
xchg
add
outsb
add
cmp
iret
das
pop
add
stos
xchg
cmc
cmp
inc
mov
push
add
and
stc
sbb
mov
add
movsb
mov
push
lea
add
pop
sub
mov
xchg
mov
add
add
add
add
scas
or
mov
aaa
pop
add
add
add
and
repz
xor
cmpsb
add
or
hlt
std
pop
dec
rcrb
add
add
or
push
add
add
push
icebp
jmp
add
or
pop
add
xchg
mov
add
push
add
daa
bound
mov
add
and
add
test
add
mov
add
sti
arpl
andb
jp
mov
add
add
jae
mov
int
add
std
insb
add
ret
xor
add
add
icebp
push
dec
mov
jle
cmp
cmp
mov
push
mov
fstpt
cwtl
lock
add
in
rorb
or
aaa
outsl
mov
jb
pop
and
leave
test
fidivrs
or
in
call
push
add
adc
aas
out
inc
and
inc
out
sbb
push
fs
mov
add
je
push
add
push
add
out
add
jl
xor
pop
add
sbb
xor
out
andl
jge
add
mov
add
lods
movsl
outsl
movsb
jl
outsl
lods
xchg
cmc
jle
int
mov
mov
add
imul
ljmp
arpl
add
enter
add
mov
add
xchg
dec
push
add
data16
jg
out
shrl
jg
jnp
mov
add
xor
add
pop
jns
add
xor
jb
xor
sub
add
stos
mov
aaa
scas
dec
stos
dec
add
adcl
add
sbb
xchg
addl
loopne
cmp
or
cmp
adc
mov
dec
dec
inc
add
add
stos
stc
mov
mov
or
cmp
sbb
adc
lret
leave
arpl
bound
ret
add
xchg
insb
add
invd
add
push
add
mov
sbb
pop
add
xchg
adc
dec
add
add
pop
add
sub
mov
xchg
arpl
shl
lock
push
add
add
mov
mov
add
stc
rorb
and
cmp
sub
pop
add
cmp
movsl
jb
push
or
sub
out
add
jo
fsub
repz
add
jnp
stos
clc
rclb
movsb
icebp
shll
mov
mov
add
movsb
or
add
clc
inc
add
push
add
adc
aas
lahf
sub
cmpsb
push
add
aaa
add
fisubl
stc
sbb
sub
add
adc
add
mov
jbe
cmp
stos
sbbl
add
adc
out
pusha
add
add
add
pop
clc
xchg
sti
filds
pop
fnstenv
dec
mov
xchg
mov
add
imul
inc
ds
jp
fcmove
sbb
sbb
and
mov
cld
lret
mov
pop
sbb
mov
lock
push
movsl
jns
adc
imul
xlat
mov
push
sbb
enter
and
sarl
dec
imul
add
pop
jle
jb
mov
mov
jmp
add
add
add
add
cs
push
add
in
stos
rcll
das
out
ja
out
jne
std
sti
les
std
adc
insb
add
mov
or
les
or
sbb
aas
rolb
add
xchg
pop
add
mov
add
outsl
loopne
or
sub
pop
add
fisubl
cmc
xchg
xor
aas
sahf
add
add
add
or
add
mov
add
xorb
jb
hlt
inc
add
add
pop
mov
sbb
add
adc
les
mov
ja
scas
xor
arpl
mov
xchg
jno
icebp
push
add
push
push
pop
xlat
pop
add
add
jb
sbb
and
pop
movsl
ret
inc
xchg
mov
insl
mov
out
inc
call
mov
add
into
mov
add
add
cli
dec
lret
enter
add
adc
mov
jmp
pop
sahf
and
jne
add
sub
add
add
add
gs
rcrl
xor
cli
lret
push
push
into
add
add
mov
xchg
flds
add
pushf
outsb
add
arpl
add
add
cmp
and
jne
add
add
inc
pop
mov
cld
outsb
add
inc
add
or
jne
add
add
jnp
add
add
ret
push
push
or
cmp
xchg
addr16
pop
add
jae
das
adc
jmp
mov
int3
push
mov
popl
pop
rorb
add
add
fsubrs
les
cmp
loope
lahf
adc
movsb
cmp
add
xor
add
mov
add
cmpl
pop
add
inc
add
cmp
mov
lods
out
adc
mov
lret
or
in
adc
jg
inc
add
addr16
inc
add
add
xchg
push
add
add
add
leave
xor
pop
pop
adc
jne
scas
hlt
xor
xchg
pop
out
nop
sub
rcll
add
popf
sbb
mov
imul
add
add
xchg
or
pushf
pop
out
stos
sbb
movsl
push
add
sub
cli
stc
clc
movsb
cmp
pop
add
mov
lods
andl
jno
outsb
add
push
add
jb
in
add
mov
mov
and
add
push
add
add
add
pop
add
popa
pop
add
mov
cmpsl
movsl
cmc
sbb
add
dec
or
cld
bound
jbe
lds
data16
mov
into
rcrb
add
cmpsl
push
add
aaa
clc
jnp
add
mov
stc
incl
push
add
add
cmc
mov
repnz
sub
sub
mov
pop
add
orl
inc
dec
add
sbb
lret
sub
data16
ja
xchg
repnz
sub
push
add
hlt
mov
mov
inc
add
mov
xor
add
add
test
push
add
cmp
add
cmpsl
jbe
sub
add
call
add
add
add
adc
repnz
arpl
cmp
dec
nop
mov
icebp
and
push
cmp
das
and
mov
push
add
add
push
add
lock
aas
pop
jb
stc
insb
add
add
lods
loop
mov
lods
pop
add
mov
add
pusha
add
roll
jge
fptan
jnp
bound
cmpsl
nop
icebp
xchg
mov
fsubrs
jnp
add
ljmp
out
data16
cli
adc
xchg
rcll
jne
add
add
loopne
add
add
add
out
inc
jle
arpl
clc
lret
jmp
add
jl
jno
mov
add
sbb
xor
aaa
xor
cltd
xchg
lcall
add
sbb
or
je
fnsave
xchg
fwait
jae
cmp
push
add
add
icebp
inc
pop
add
mov
rclb
ljmp
add
sub
std
adcb
and
jns
mov
pop
lcall
adc
loop
add
add
push
add
mov
mov
aas
imul
outsl
fwait
subb
xlat
and
ss
xchg
call
mov
pop
int
add
add
add
bound
xlat
out
mov
or
jbe
int3
pop
add
xor
outsl
out
mov
add
add
jo
stc
pop
rol
stos
popa
mov
add
add
inc
pop
sbbb
stc
or
xor
fwait
cli
jno
insl
lcall
cmp
inc
imul
add
pusha
add
lock
fdivl
sbb
cltd
push
push
xor
movsl
les
nop
cmp
push
mov
add
imul
lock
mov
loope
mov
adc
add
aas
push
add
dec
add
inc
add
add
mov
sbb
dec
mov
cli
sub
or
lahf
push
add
jae
jp
adc
imul
add
mov
stos
add
sbb
cmpl
lret
sahf
mov
adc
divb
push
popa
cmp
out
mov
aam
add
fistpll
add
imul
lahf
imul
and
sbb
mov
mov
add
push
add
add
repnz
lcall
aam
xlat
cli
cmpsb
and
outsl
les
mov
add
and
fwait
popf
out
outsl
jb
nop
and
je
pop
or
in
shll
add
inc
add
add
adc
lret
add
ja
mov
mov
add
add
cmp
mov
add
ljmp
in
loopne
cmpsb
mov
push
add
push
add
cmp
fsubrs
add
mov
jmp
in
xor
decl
add
xorl
add
sub
loopne
xchg
mov
sbb
mov
add
into
pop
cli
cmpsb
sbb
cmp
ror
and
fcoml
icebp
aaa
and
addr16
xor
jne
jno
or
jg
and
arpl
outsl
leave
inc
add
daa
pop
add
xorl
add
outsl
xchg
inc
add
or
xor
pop
add
xchg
sub
pushf
test
jns
adc
jo
rcr
rcl
fcmovnbe
lret
add
aaa
push
add
lret
pop
mov
call
sti
std
lret
adc
add
cmpsb
add
push
inc
cmp
sar
or
clc
mov
cmp
jmp
add
push
or
pop
mov
out
add
mov
add
clc
rep
push
add
lret
mov
inc
mov
add
jl
jecxz
add
mov
mov
jb
push
sub
xchg
scas
push
jle
xchg
sub
and
cmp
das
or
and
popf
add
and
imulb
mov
push
add
add
int
add
xchg
fldt
xchg
bound
in
jbe
xchg
and
push
add
add
xchg
or
jg
paddsw
leave
cmpsl
data16
fisubl
fsubrl
push
add
inc
add
loope
dec
adc
shll
scas
cmp
ja
mov
dec
add
add
or
cmp
test
test
mov
add
mov
cmp
pop
dec
add
add
cwtl
nop
sbb
dec
pop
pusha
add
sti
cltd
xchg
add
inc
add
imul
imul
cmp
sbb
inc
add
addr16
or
push
jne
movsb
repz
mov
cmp
and
aam
mov
lods
cmp
shlb
and
nop
pop
xor
mov
out
mov
aas
popf
mov
push
add
fcmovnb
sub
add
add
xchg
inc
add
int3
inc
jmp
adc
jl
xchg
lods
lods
inc
add
dec
add
cmpsb
jne
fdivrs
inc
test
add
out
mov
xor
fdivs
popf
mov
popa
sbb
add
add
add
push
xchg
in
pop
test
add
pop
xor
sub
jmp
test
add
mov
add
add
pop
dec
xchg
push
add
add
inc
adc
jge
sbb
jo
shrl
xchg
fwait
sti
pop
add
fcomps
fst
fs
scas
jle
int3
rol
inc
add
pushf
ljmp
mov
mov
sbb
add
add
jmp
add
addr16
jnp
push
add
add
add
add
out
insl
out
fistl
add
jns
adc
push
pop
add
adc
or
hlt
aaa
xor
push
add
cld
addl
movaps
rol
les
add
add
dec
stos
cmpsb
das
mov
add
aam
jmp
inc
add
xchg
cmc
mov
pop
xorl
cmp
lret
xchg
std
aad
add
xchg
jg
in
cmpsl
test
add
out
popa
call
add
ret
add
add
xor
mov
insb
add
ljmp
movsl
mov
jo
sahf
jecxz
cmpsb
or
bound
push
add
xor
xchg
xchg
orb
and
out
lret
addb
add
repnz
add
add
shlb
adc
cmp
inc
add
mov
sub
adc
add
inc
inc
add
cmp
scas
mov
add
pop
lret
cmpsb
aaa
push
add
and
add
lret
add
and
or
mov
cmp
cmpsl
lea
jae
and
mov
in
or
mov
lahf
pusha
add
add
test
jmp
arpl
sbb
sbb
ja
add
adc
sbb
inc
add
ljmp
mov
and
add
loop
nop
cpuid
inc
add
outsl
fisttps
jmp
lods
cltd
fisttpll
dec
mov
add
fidivs
mov
and
adc
daa
push
lods
push
add
add
mov
pusha
add
xchg
mov
sbb
neg
mov
seto
sbb
aaa
data16
test
cmp
or
inc
add
push
add
push
in
add
add
outsb
add
add
and
in
movsb
push
add
add
movsl
ret
int3
cmc
gs
add
jb
pop
add
push
insl
mov
mov
test
fwait
dec
add
jae
das
push
add
pop
mov
mov
pop
add
add
add
add
push
add
add
add
ja
jnp
int3
xchg
mov
add
mull
icebp
mov
mov
mov
cmp
mov
jle
ja
data16
adc
test
add
out
dec
mov
adc
jae
inc
add
sbb
add
sbb
add
add
inc
add
xlat
mov
add
ret
cmp
notb
sbb
mov
pop
into
push
add
jne
aad
add
add
or
pop
push
add
inc
or
sub
sbb
aas
mov
jnp
and
insl
inc
or
js
add
push
aas
or
add
cltd
pop
cmp
xor
xor
sbb
iret
pop
mulb
add
mov
loopne
xchg
sub
fmull
shlb
adc
rcr
xor
and
mov
sbbl
adc
in
mov
pop
add
mov
mov
push
add
loope
add
in
in
ljmp
jecxz
negl
cld
sarl
xchg
cmp
fisubrs
inc
add
mov
push
sarb
flds
out
push
clc
sbb
mov
or
add
add
sti
sbb
inc
add
add
sub
push
add
repz
add
cmp
cmp
out
xor
mov
sbb
imul
mov
add
ja
add
jge
add
xor
push
add
aas
scas
das
mov
mov
add
mov
iret
cmp
pushf
shlb
shlb
push
jge
add
out
add
loope
pop
xor
and
add
cli
mov
out
add
sub
insb
add
sbb
mov
clc
nop
pop
add
mov
add
inc
add
xor
rcrl
pop
add
add
xchg
movsb
mov
and
jns
add
arpl
xchg
jge
cmp
add
add
test
imul
or
std
inc
add
out
pop
out
stos
call
mov
pop
add
add
push
add
scas
fwait
int
add
add
in
aaa
rcll
and
add
sarl
jno
inc
push
and
xchg
pop
pop
add
add
sbb
std
aad
push
ficoms
rcll
add
aad
test
lcall
adc
aad
add
ret
lahf
in
dec
add
add
dec
add
add
mov
sbb
fnstsw
fmuls
add
add
lret
jmp
sbb
or
and
repz
fldcw
add
add
add
jle
sti
lcall
bound
test
dec
adc
cwtl
jnp
add
mov
or
jmp
add
loop
add
jns
aad
imul
add
les
pop
fnstsw
sbb
cmp
icebp
add
cli
loop
add
adc
cmpsl
in
mov
mov
int
add
out
icebp
mov
adc
inc
add
lcall
add
add
inc
add
push
add
pop
add
dec
lahf
mov
insb
add
int3
test
mov
loope
outsl
fbstp
add
popa
pop
push
add
sbb
ljmp
adc
and
std
mov
sbb
xor
push
movsl
inc
daa
and
jg
cmp
xorl
imul
jns
add
xor
mov
insb
add
fwait
nop
lahf
push
add
mov
mov
inc
ljmp
outsb
add
add
lds
add
sbb
lret
test
and
jp
adc
rcrb
add
je
xor
xchg
cmp
add
add
andb
add
add
add
pop
push
add
in
inc
leave
mov
add
add
pop
add
rorl
add
sub
notb
add
mov
ljmp
adc
roll
add
ret
add
fiadds
stos
pandn
sbb
fdiv
add
inc
add
fisubrl
add
lock
add
add
push
lock
in
add
rolb
add
sti
add
add
add
lret
lcall
ja
lea
push
out
imul
fcom
and
orb
stos
fidivrs
xor
fwait
cmp
je
fsubrs
out
loop
outsl
add
js
cmp
add
add
add
add
and
jo
bound
cmpsb
mov
add
lret
xor
mov
fmull
icebp
xor
es
mov
jp
test
stos
or
inc
add
scas
movsb
loopne
rcrl
jecxz
add
mov
call
dec
add
sub
loopne
add
shl
add
rorl
mov
jg
inc
add
pop
add
repnz
imul
insl
push
add
add
mov
add
data16
add
xor
int3
fcmovbe
pop
add
add
add
ret
repz
xchg
push
add
sbb
test
xor
mov
add
jbe
add
add
add
or
rol
xchg
enter
or
rorl
add
add
mov
pop
add
jge
mov
icebp
cld
mov
outsl
sti
mov
fwait
inc
add
dec
add
add
add
lock
add
or
add
add
dec
add
and
cmp
rcl
xchg
nop
pop
add
data16
cltd
add
add
scas
xchg
push
sub
cmpsl
mov
add
add
mov
pop
or
iret
lahf
and
mov
test
dec
add
repnz
or
pop
jmp
pop
xor
cwtl
push
lcall
fiaddl
push
rorl
jb
or
js
mov
lods
stc
or
mov
shll
popl
xor
lret
ja
add
inc
add
das
xchg
cld
notb
add
mov
inc
lret
imul
push
add
loopne
add
or
das
leave
sbb
insb
add
cmpsl
adc
shl
orl
out
mov
add
pop
add
add
inc
add
in
mov
mov
mov
add
gs
int3
mov
add
sub
and
add
fdivr
das
flds
ss
cmp
icebp
sbb
pop
add
xchg
mov
pop
add
add
dec
cmp
mov
add
add
ret
dec
add
int
add
vpmuludq
push
add
outsl
sub
add
sub
fwait
data16
add
push
fsubrp
fs
stos
hlt
sub
inc
add
and
add
cmpsl
or
jo
cli
outsl
xor
rclb
mov
add
mov
jbe
xor
add
push
add
ret
lds
lahf
mov
add
cmp
movsb
icebp
out
add
add
rcll
fildl
add
or
jae
add
jns
out
add
scas
arpl
shl
scas
in
inc
jmp
cwtl
cmp
sbb
dec
add
out
and
nop
mov
lods
in
add
and
jbe
mov
sub
gs
add
xchg
cmp
cmc
push
add
add
push
add
fpatan
pop
add
test
add
add
subl
xlat
jo
xchg
call
jno
mov
ja
fidivrl
add
add
stos
loope
lods
icebp
insl
jno
add
fwait
lcall
subb
inc
in
push
shll
add
xor
cli
mov
je
mov
jne
int3
lcall
adcb
add
daa
inc
ljmp
mov
mov
inc
jns
dec
add
push
xchg
cld
sbb
push
add
add
and
stos
xor
pop
add
add
add
arpl
insl
lods
pop
sub
cmp
dec
mov
add
xor
movsl
xchg
add
sti
mov
add
add
ret
mov
mov
out
lahf
shl
hlt
add
mov
dec
add
jp
leave
gs
add
xchg
add
add
pop
inc
jnp
inc
mov
imul
mov
add
mov
adc
data16
mov
mov
add
push
add
add
repz
call
add
pop
cmpsb
push
add
add
fistps
add
add
mov
add
xlat
mov
mov
ficompl
ja
jo
mov
add
jne
pop
add
pop
pop
push
add
jp
call
add
xchg
outsb
add
test
test
js
das
push
add
jmp
mov
dec
add
pop
notl
add
iret
jl
mov
std
or
add
cmc
sahf
xchg
add
pop
add
jmp
or
in
not
rcll
in
xor
xchg
xlat
nop
push
add
add
sub
or
xchg
and
add
jmp
imul
push
add
add
test
in
xor
push
jbe
dec
add
and
out
outsl
xor
ljmp
add
xorb
lahf
xor
loopne
inc
aad
out
aam
bound
and
cmp
or
push
add
bound
push
add
mov
add
add
add
pop
imul
pushf
sbbl
lcall
dec
pop
add
push
push
cwtl
inc
add
fildll
sub
dec
add
rclb
fdivrp
shl
ret
mov
ljmp
mov
mov
add
fdivr
fstl
add
mov
outsb
add
mov
jl
jae
add
outsb
add
jne
add
lea
mov
push
add
ja
sar
add
jg
push
add
xchg
jle
lret
lea
pop
mov
test
push
mov
or
inc
add
and
loopne
push
jae
imul
sbb
jb
aaa
pop
add
stos
cltd
ret
jbe
pop
inc
sub
add
out
add
xchg
sar
xchg
pop
aad
repz
or
out
sbb
les
mov
sahf
sbb
rcl
dec
add
jne
jg
add
sub
out
xor
shlb
icebp
sti
je
xchg
add
sbb
frstor
xchg
cmpsl
pop
xchg
add
or
mov
fisubrs
xor
inc
pop
ret
inc
adc
jp
stos
in
add
add
push
dec
push
mov
lods
shlb
addl
fld
xchg
sbb
push
pop
lds
push
fcomi
mov
add
adc
nop
movsl
xchg
data16
add
xchg
jnp
shrb
or
shrl
sbb
mov
rclb
js
dec
add
add
sahf
rorl
add
out
jo
adcl
lret
add
hlt
call
add
add
ljmp
aas
and
xor
dec
add
mov
jmp
add
add
add
sahf
sbb
inc
add
add
fsubrl
fnstcw
lret
xchg
mov
lcall
mov
add
xor
xor
sub
cwtl
push
add
push
add
push
add
and
add
lcall
push
add
lret
das
inc
roll
add
ret
adc
push
lret
aaa
xlat
and
add
mov
jae
xchg
mov
pop
mov
pop
push
add
lcall
dec
pusha
add
andl
pop
add
aam
add
inc
divl
add
adc
imul
jne
add
ss
mov
mov
add
outsb
add
test
add
cltd
fadds
add
mov
add
add
sahf
fstp
add
es
sbb
cmp
out
enter
add
mov
sub
or
inc
loope
ljmp
mov
adc
jl
jmp
loop
fstp
js
add
xor
addl
xchg
sub
test
je
jne
add
hlt
xchg
sti
out
and
cmp
lcall
in
or
out
adc
pop
add
sbb
popa
shlb
add
cmp
cltd
mov
xor
insl
mov
add
add
daa
add
stos
outsb
add
cli
int3
cli
ja
mov
mov
mov
add
imul
add
mov
sarl
add
add
outsl
test
mov
add
add
pop
flds
add
out
or
mov
add
xor
data16
lods
inc
enter
jb
xchg
scas
xchg
mov
repz
mov
xchg
movsb
mov
add
pop
mov
add
jns
iret
push
loope
add
andl
xor
enter
mov
stc
dec
enter
fiadds
add
pop
jp
dec
add
add
jno
push
xor
jns
add
ret
add
outsl
cltd
jnp
jle
addr16
aas
pop
add
xchg
sub
cmp
jno
repz
add
adcl
xchg
nop
pop
jmp
pop
add
fstl
es
jp
cmp
add
sub
loope
add
sub
jae
jno
add
pop
add
pop
out
push
jnp
push
add
les
xlat
aam
std
mov
add
dec
add
mulb
push
add
push
adcb
mov
jg
movsl
call
adc
add
scas
rolb
test
ja
add
ret
lahf
jle
in
mov
js
xchg
push
in
mov
inc
add
push
add
sbb
add
xor
adc
dec
xchg
cwtl
hlt
popf
sub
push
add
add
add
fistl
add
out
fsubrl
sbb
add
arpl
sub
notl
or
sub
push
insb
add
add
mov
loope
add
add
push
add
mov
sarb
adcl
push
add
fsubl
add
out
add
xor
imul
sub
sbb
sub
add
inc
xorb
add
add
pop
add
sub
addr16
sub
mov
add
outsl
pushf
hlt
mov
mov
aad
add
add
jno
or
add
lcall
add
out
add
aas
aas
in
xor
jl
jno
add
inc
add
aam
inc
sub
pop
push
add
mov
repnz
imul
lds
in
movb
hlt
dec
add
jb
xchg
jo
mov
notb
add
xchg
mov
add
out
mov
xor
in
popf
inc
push
mov
jo
sub
pusha
add
sbb
add
cltd
and
xchg
mov
loop
add
and
dec
popa
pop
push
add
add
push
aaa
and
stc
pop
mov
je
mov
lock
jg
arpl
pop
add
add
in
pop
add
sub
lret
or
add
add
adc
adc
push
add
shl
addr16
sbb
mov
xchg
dec
mov
cmpb
push
add
cmp
cmpsl
pop
add
jo
mov
add
add
cmp
addr16
add
add
adc
mov
push
add
cmp
stos
es
in
ljmp
dec
adc
dec
add
jo
or
inc
add
mov
test
inc
shrl
test
jle
in
jne
lds
movb
xchg
xchg
mov
cmp
add
or
nop
nop
add
ret
inc
scas
lea
add
add
jns
jmp
add
test
shll
out
data16
or
test
adc
sub
pop
aaa
xlat
test
mov
jb
dec
add
stos
mov
stos
push
add
dec
add
push
add
add
cmp
and
ficoml
and
nop
loopne
add
add
mov
dec
add
push
add
ja
xchg
dec
rolb
in
add
ret
in
inc
add
add
push
add
fdivs
push
add
jmp
add
loop
add
add
cwtl
dec
hlt
daa
pusha
add
add
push
ds
or
imul
cli
or
in
in
mov
cmp
add
jo
cmp
stos
pop
add
aad
iret
pop
dec
mov
gs
mov
into
pop
inc
lcall
add
add
scas
aad
cmc
out
call
add
sbb
and
jle
fs
mov
jno
cmp
pop
jo
stc
cmp
pushf
jno
aas
out
out
add
sar
mov
mov
dec
add
add
daa
fdiv
repnz
mov
add
arpl
mov
mov
add
xor
scas
call
or
movb
clc
scas
and
sub
in
ret
sbb
sahf
and
and
mov
or
sub
jb
aas
inc
mov
xor
dec
add
imull
les
add
add
cmpsl
pop
add
mov
mov
ficoml
sbb
xchg
xchg
sub
into
in
sbb
jne
out
aas
mov
push
add
lret
or
mov
add
add
mov
mov
jle
sub
mov
clc
and
mov
mov
add
add
inc
push
add
push
add
fistps
add
test
icebp
jmp
mov
add
add
bnd
add
mov
add
popf
sbbl
cld
push
mov
xchg
xchg
add
enter
adc
add
and
out
cli
mov
sub
out
add
add
stos
xchg
icebp
stos
int
inc
add
loopne
xchg
movsl
pop
add
int3
cld
rorl
add
add
push
add
cmpsb
fildll
sbb
arpl
or
fisubrl
or
fnstsw
lcall
add
mov
add
sub
mov
pop
movsl
cmp
bound
push
add
out
sbb
loope
add
add
fiadds
xchg
insl
roll
jno
add
imull
ret
sub
fldt
xor
xchg
out
cmpsl
imul
add
mov
add
daa
push
add
pop
add
sti
je
scas
jb
ret
mov
xor
int
pop
cwtl
pop
add
int3
js
mov
add
or
pop
sbb
xchg
pop
add
pop
add
mov
push
add
add
leave
lods
push
or
inc
mov
add
leave
or
or
ret
jp
and
cmp
mov
mov
pop
cmc
imul
dec
test
xchg
lock
sub
das
adc
or
int
add
xchg
sbb
mov
movsl
mov
dec
jmp
sub
push
sbb
fcomip
pop
stos
push
add
push
add
add
sub
out
jnp
add
insl
sub
outsb
add
add
cmp
add
or
add
inc
mov
dec
adc
push
dec
xor
popa
aaa
int3
add
popf
out
and
lock
cmc
popa
sub
lcall
jecxz
adc
fcomp
jge
jo
clc
mov
push
add
fiaddl
cmpl
sbb
pop
add
add
sub
cmpsl
dec
leave
shll
xchg
mov
cmp
jne
push
add
popf
out
jbe
sbb
fisubrs
mov
push
mov
pusha
add
sub
mov
add
adc
icebp
test
pop
lret
add
pop
mov
mov
fcoml
cmpsl
dec
add
add
loopne
mov
add
jbe
lods
inc
add
add
jae
push
adc
stos
inc
add
add
xchg
push
add
xor
push
add
in
add
dec
lods
mov
test
mov
jl
aas
je
mov
add
add
xchg
xorb
mov
cmpsb
push
add
push
pop
add
cmp
pop
gs
mov
pop
add
add
mov
push
stc
sbb
repnz
add
bound
push
mov
add
cmpsl
aas
pop
push
add
xlat
xchg
shlb
inc
icebp
and
add
in
mov
add
xor
imul
jmp
add
add
add
jp
outsb
add
pop
clc
data16
jb
pushf
jge
xor
pop
add
popa
jne
lret
sub
mov
sbb
xor
ds
push
xor
push
add
mov
testl
pop
add
mov
add
add
jno
jnp
ret
inc
aad
add
pop
add
add
add
add
jmp
scas
cmp
sbb
xor
inc
add
add
jno
in
lock
dec
jg
lods
add
mov
mov
rcrl
lcall
addr16
mov
cmp
lds
jmp
add
adcb
xchg
jne
pop
mov
xor
mov
insl
lods
mov
fadd
mov
jne
add
push
and
pop
add
cmp
add
add
xchg
incl
clc
mov
bound
pusha
add
sub
js
andl
test
sbb
cli
xor
or
test
add
data16
push
add
jae
add
out
lea
and
cld
pop
add
dec
hlt
aad
lea
push
add
cmp
clc
sbb
xor
in
in
popf
cmp
cmp
jmp
add
cmc
movsl
test
add
jnp
shll
popf
mov
inc
add
jns
div
shlb
add
add
add
dec
add
or
lods
ljmp
ret
add
push
add
pop
and
enter
push
sbb
aam
and
js
add
lret
add
and
and
sbb
ljmp
lahf
adc
sub
test
sbb
pop
in
jae
add
add
add
dec
add
add
sbb
repnz
add
add
adcl
xchg
dec
add
inc
add
das
cli
mov
in
cmp
xor
adcb
cli
loop
add
out
adc
jb
cmc
cmpb
xchg
add
scas
add
subl
xchg
or
outsl
ficomps
mov
int3
mov
imul
outsl
les
es
inc
add
out
gs
sti
push
add
add
lods
xchg
adc
pop
add
stos
xchg
pop
add
jle
test
shll
add
aad
cwtl
bound
lock
out
cli
stos
std
pusha
add
scas
ret
int
jno
dec
add
sbb
prefetch
or
in
or
push
adc
add
xlat
lahf
bound
xchg
repz
xchg
jae
add
xor
push
add
mov
add
fstpt
add
add
bnd
add
jge
add
sti
mov
add
hlt
pop
daa
push
call
jbe
test
enter
mov
jb
lahf
sahf
lret
mov
jnp
push
add
les
adc
cmc
leave
xor
xor
push
sbb
aaa
test
adcl
jmp
imul
cmp
into
cmpsb
lds
add
add
xlat
xlat
lock
add
in
sbb
addr16
add
add
add
call
adc
push
mov
cwtl
ss
push
add
add
hlt
push
add
cld
jbe
inc
add
cltd
inc
add
inc
add
add
cmpsb
or
bound
push
add
iret
mov
fisubrs
pop
cmp
clc
iret
xchg
xor
out
jecxz
add
or
ficompl
push
add
jae
xor
jecxz
add
xchg
lret
dec
add
cmpsb
in
mov
add
add
add
add
add
aam
outsl
out
add
pop
add
mov
lock
lods
dec
sbbl
pop
test
lahf
out
sahf
push
xchg
fcoml
not
jbe
xchg
outsl
mov
or
inc
add
inc
adcb
cmc
gs
out
push
add
jle
fucomi
add
or
mov
adc
mov
add
clc
push
add
lock
inc
add
adc
mov
lret
ret
add
jp
mov
loop
add
add
add
adc
xchg
sbb
mov
push
into
mov
add
xor
add
xchg
or
xchg
pcmpgtw
fisubrs
nop
mov
add
mov
mov
subl
add
pop
add
add
pop
add
add
in
add
sub
js
sub
add
lcall
sbb
scas
shll
sahf
dec
mov
add
outsl
pop
xor
add
add
cmp
rcrb
add
add
gs
add
call
add
out
adc
jle
lcall
repz
xchg
out
nop
jno
add
xchg
sbbb
stos
dec
add
out
and
add
push
je
es
gs
les
fiadds
add
jae
mov
cmpsl
icebp
and
add
push
add
add
cwtl
jge
add
add
and
pop
add
ret
sbb
xlat
cmp
fidivl
mov
add
lea
adc
cmp
clc
call
loop
xchg
push
jbe
inc
insb
add
add
lahf
lods
lret
aas
pop
mov
pushf
clc
and
add
jp
dec
add
fdivs
imul
out
jne
add
test
add
mov
icebp
cmp
add
add
cld
cli
inc
add
ret
or
sub
jno
add
f2xm1
loopne
out
adc
mov
mov
dec
add
dec
sbb
sbb
mov
jo
fwait
cmpsb
xlat
pop
add
add
sti
data16
push
outsb
add
add
add
jp
arpl
fdivrl
sbb
roll
dec
popf
shll
add
add
insb
add
jp
insb
add
inc
ss
movsl
push
add
adc
js
lahf
and
pop
add
and
inc
cmp
mov
cmpsl
test
pop
push
add
adc
adc
fbld
and
inc
add
sub
stos
bound
mov
sbb
jle
lret
loopne
cmpsb
mov
dec
add
mov
aam
add
inc
mov
add
mov
sub
add
add
sub
xchg
dec
add
test
outsb
add
add
mov
add
call
in
push
add
lock
pop
inc
sub
or
add
ret
jb
inc
add
jnp
add
jge
add
push
add
leave
jl
test
add
inc
jle
cmp
inc
add
hlt
mov
data16
push
add
xchg
iret
inc
mov
pop
arpl
into
imul
icebp
xor
mov
add
fs
xchg
loope
add
or
mov
dec
sbb
inc
add
or
add
insb
add
add
jnp
inc
inc
pop
jne
mov
dec
es
lret
mov
out
jmp
sub
pop
add
ret
addb
add
loopne
add
faddl
pop
lret
add
jl
testb
add
or
jl
imul
push
sub
add
dec
mov
add
sbb
xor
sbb
mov
add
add
stos
cs
into
xlat
push
movsb
sbb
jl
jne
icebp
rcrl
mov
inc
pop
outsl
cli
adc
jmp
jl
sub
add
xchg
stc
pop
in
clc
jnp
ljmp
sahf
insb
add
arpl
xor
mov
add
sarb
out
add
int
and
add
jp
imul
pusha
add
rorb
int3
daa
out
add
pop
iret
cltd
adc
and
js
mov
add
adc
push
add
add
pop
push
add
cmpl
push
add
mov
ja
add
cli
and
idiv
pop
add
cld
js
popf
testl
jbe
mov
add
add
and
loopne
add
imul
movsl
arpl
add
pop
push
add
ret
test
mov
add
orl
aaa
movsb
lcall
pop
add
rclb
add
mov
add
dec
add
dec
add
sarb
mov
add
jl
sahf
inc
add
xchg
bound
cmp
add
add
xchg
add
xor
gs
xlat
pop
dec
xor
or
mov
mov
testl
add
dec
jle
ljmp
inc
add
add
das
lret
mov
add
push
add
jmp
add
fcmovnu
popf
int3
sbb
rcl
add
or
sahf
out
inc
add
fsubrs
add
sub
dec
xchg
fcomps
fldl
shll
cmp
leave
xchg
in
xor
cs
pop
cmpsb
pop
jecxz
nop
scas
and
fisttps
add
add
and
adc
test
fwait
inc
push
add
cmp
pushf
shrb
add
add
sub
add
inc
pop
add
gs
mov
aaa
divl
loopne
mov
ret
mov
add
fstpl
imul
cmp
sbb
fwait
pop
icebp
cmp
jbe
mov
repz
jmp
xor
add
in
jae
pand
inc
add
xchg
dec
or
sbb
add
cmpsb
and
fwait
add
dec
dec
add
cmp
pop
add
push
push
add
ds
sub
xor
xchg
lret
std
jnp
cmp
dec
test
fmuls
sti
jg
aam
add
mov
add
push
add
push
add
add
in
scas
cmp
in
xchg
push
add
pop
add
add
add
pusha
add
mov
out
xorl
add
sahf
pusha
add
stos
pop
add
or
add
imul
add
add
add
add
jbe
pop
or
lods
scas
sbb
add
or
sbb
outsl
orl
shrb
add
arpl
dec
stc
scas
xor
jbe
cmp
jne
mov
add
jns
xchg
mov
mov
and
add
fmuls
cmp
movsl
fistl
jns
inc
andl
aas
adc
loope
pop
imul
add
stos
pop
dec
xor
cmpsl
push
add
sbb
add
js
jae
xor
add
sbb
add
imul
or
addr16
or
jno
lods
pop
aas
mov
pop
movsb
test
add
sub
add
add
add
movsb
adc
rclb
lds
xchg
pop
add
lcall
aaa
or
or
sbb
outsb
add
xor
add
sub
push
add
pop
pop
add
lea
addr16
shrb
add
and
fldt
xchg
pop
add
add
adc
xor
adc
int3
add
cltd
push
add
and
outsb
add
roll
loop
add
jnp
add
sub
dec
add
add
add
add
ret
leave
dec
inc
add
mov
cmp
jge
scas
mov
mov
add
es
rcr
outsb
add
in
xchg
jmp
pop
add
in
push
add
lret
orb
int
add
add
add
dec
xchg
lds
adc
xor
mov
clc
adc
dec
and
add
mov
lcall
xchg
add
stos
cmc
aaa
xor
sbb
add
int3
add
cmp
and
std
jp
in
aam
xlat
mov
push
add
mov
mov
add
xchg
shl
sti
das
pop
add
mov
add
xchg
jge
add
mov
lods
popa
in
in
vxorpd
stos
xchg
js
sub
sub
data16
sbb
nop
ret
mov
cwtl
icebp
fsubs
outsb
add
pop
mov
add
and
cli
xchg
xor
add
lret
sbb
subl
inc
add
add
out
cmp
enter
call
aaa
sti
dec
xlat
lds
push
mov
inc
pushl
ja
push
add
add
push
add
lods
pop
dec
add
lcall
add
fsubrl
insl
stos
inc
add
jle
cmp
sbbl
pop
add
in
sub
mov
icebp
inc
dec
add
xor
insl
add
xor
lcall
xchg
adc
mov
sub
mull
sbb
sbb
mov
add
inc
sbb
inc
mov
ja
outsl
push
add
add
add
add
pop
add
das
jp
jmp
rorb
add
mov
mov
or
jo
out
add
nop
jle
dec
add
jge
add
xor
or
pop
add
add
shll
jmp
add
call
add
scas
or
add
mov
add
iret
movsl
sub
pop
fwait
sbb
mov
mov
add
add
add
mov
dec
add
add
adc
inc
or
loopne
jle
into
pop
add
adc
add
cld
arpl
js
data16
jl
and
rorl
add
inc
jg
mov
lahf
dec
inc
add
add
pop
add
jns
or
ret
les
cwtl
push
add
int
stos
jbe
and
cmc
and
cmpsb
aam
add
add
and
int
add
and
add
sti
xchg
sub
push
add
add
cmc
andb
add
add
mov
add
cmp
jp
mov
stc
push
add
or
add
nop
cwtl
cmp
pusha
add
cmp
sarl
add
xor
xchg
add
jne
add
push
add
add
xlat
push
add
xlat
addr16
sbb
flds
add
cmc
pop
push
add
add
inc
ret
jge
push
call
cmp
ja
xor
mov
add
add
cmp
iret
push
das
dec
adc
mov
bnd
add
add
add
add
je
aad
sub
push
aaa
mov
push
add
add
lea
add
sub
add
mov
and
mov
add
call
les
pop
and
jne
xchg
fcoms
jmp
imul
cld
pop
add
in
sbb
mov
add
aad
add
add
imul
pop
add
sub
dec
add
add
ja
popa
movsl
push
addb
enter
add
cmc
cmp
int3
sbb
jbe
dec
add
inc
add
add
jecxz
xlat
popa
inc
add
add
pop
inc
mov
cmp
cmpsl
mov
or
pop
das
mov
fwait
xchg
mov
cmpsl
jno
stc
leave
or
outsl
xchg
rcrl
inc
jp
scas
xor
bound
pop
gs
loope
pop
and
push
stos
je
inc
add
stc
jns
scas
sbb
sub
add
push
add
mov
mov
cmp
dec
add
add
stc
aad
in
jo
jp
jo
push
popa
test
sbb
add
shrb
popa
clc
dec
add
fdivr
jae
mov
loopne
cwtl
sbb
orb
in
sahf
cmp
push
scas
jbe
fstl
add
sbb
sub
mov
jbe
arpl
xchg
loop
loopne
add
add
add
add
add
or
fmuls
add
int3
stc
mov
add
dec
add
mul
data16
xchg
add
mov
data16
and
jecxz
add
inc
add
inc
xchg
roll
mov
inc
add
repnz
add
lds
hlt
insl
mov
mov
add
test
mov
add
stos
push
add
mov
stc
mov
sbb
push
shr
dec
pop
dec
add
insb
add
orl
add
or
or
rol
mov
add
cmp
stos
xlat
mov
aam
adc
dec
scas
insl
das
push
push
add
add
addr16
add
add
and
add
add
rcll
mull
mov
mov
rolb
add
gs
adc
add
sub
push
add
frndint
dec
test
sub
dec
sbbl
or
flds
shl
int
add
add
sbb
out
outsb
add
add
add
pop
lock
jge
xchg
insl
cmp
dec
insb
add
adc
add
je
xlat
adc
add
cwtl
dec
adc
xchg
loope
cmpsb
mov
add
adc
cs
stc
aaa
in
fwait
rcrb
add
fnclex
call
add
pop
cmpsb
mov
and
mov
push
xor
rcll
xor
dec
in
mov
outsl
dec
sahf
mov
adc
xchg
and
mov
dec
imull
add
cmp
pop
ds
mov
pusha
add
cmp
or
cmc
inc
add
pop
add
add
repz
aaa
xchg
repnz
sbb
mov
pop
xchg
stc
mov
jp
sbbl
in
add
stc
add
clc
je
cmpsl
sbb
add
dec
in
sub
mov
push
add
and
test
jl
jns
push
add
add
sub
loopne
daa
ja
loopne
push
mov
mov
sub
or
icebp
mov
data16
sbb
jl
roll
lret
and
pop
add
add
add
lock
mov
mov
add
add
lcall
scas
xor
fists
add
sti
int
add
cmp
cld
fbld
add
stos
mov
xlat
ficomps
fistpl
sbbl
insl
pop
add
xor
xor
stos
arpl
inc
popl
out
pop
out
repz
pop
jmp
add
jnp
mov
add
sbb
push
aad
outsl
inc
ljmp
cmc
xchg
in
add
lods
out
add
sbb
add
mov
push
add
add
add
sbb
fsubs
cmp
add
stos
ret
inc
add
sub
push
add
add
mov
call
aaa
mov
aad
dec
add
add
inc
mov
out
ljmp
stos
pop
add
adc
add
sti
sbbb
add
pop
cwtl
and
xchg
xchg
fdivs
dec
add
sbb
ja
add
cmp
add
mulb
or
mov
add
dec
sbb
ret
sbb
outsl
push
xchg
jecxz
int
jno
mov
and
gs
mov
add
add
jae
shrb
out
lret
mov
dec
add
push
add
and
je
lods
imulb
add
out
push
in
add
xorb
pop
ljmp
inc
imul
mov
xor
cmp
add
add
daa
mov
add
add
add
xchg
outsb
add
push
shll
add
inc
add
std
mov
mov
insl
mov
mov
sbb
add
add
dec
add
mov
adcl
add
xor
sub
sar
push
cmc
ja
push
add
add
add
pop
add
andl
add
pusha
add
and
movsl
jle
sub
xchg
outsl
xchg
stos
xchg
mov
add
add
fcompl
add
fdivrp
mov
inc
dec
dec
add
add
push
add
xlat
shl
pop
bound
sub
or
sub
aas
mov
cwtl
loop
gs
mov
mov
stos
cmp
loop
mov
lock
dec
add
sbb
sub
jne
add
cmp
repnz
add
inc
pushf
nop
jmp
fdivl
add
dec
das
mov
jle
jle
and
add
mov
loope
enter
add
repnz
xor
ds
jae
cmp
pop
push
add
mov
add
push
add
add
mov
mov
jp
xor
mov
add
mov
add
pusha
add
or
sub
hlt
mov
add
mov
mov
sbb
mov
xor
add
add
add
movsl
sbb
mov
sub
cli
cwtl
sub
stos
cli
add
adc
sbb
and
and
add
mov
add
lds
xchg
mov
lods
xchg
jge
int
add
inc
mov
cmp
lcall
bound
mov
add
add
sub
add
dec
out
mov
arpl
add
sbb
add
jecxz
rolb
jbe
push
hlt
lcall
cmpsl
subb
sub
or
cmp
jnp
stc
fistps
jecxz
add
add
les
add
bound
inc
add
add
add
cmc
fsts
pop
mov
pushf
pop
add
add
jle
mov
add
jo
mov
add
outsb
add
cli
cmp
in
rclb
xlat
and
add
mov
mov
loopne
cmp
repz
or
iret
pushf
mov
mov
in
add
repz
jnp
lahf
cltd
mov
add
mov
ret
out
inc
add
add
push
inc
divb
adc
mov
add
add
movsl
mov
inc
add
jae
add
add
add
fs
add
aas
out
bswap
sbb
outsb
add
out
cmp
jl
push
add
add
aaa
ficompl
and
dec
add
dec
jecxz
push
add
dec
mov
cmp
push
add
mov
jo
inc
lea
and
stos
out
add
sahf
lahf
das
jge
add
add
idivl
add
sbb
add
xor
call
add
xchg
cmp
jns
xchg
fsubrs
hlt
push
in
mov
add
add
sbb
out
add
add
outsl
adc
dec
and
inc
mov
push
add
int3
lock
movsb
test
adc
push
cs
cmp
stos
inc
pop
lods
fsts
mov
pop
hlt
mov
add
push
add
add
mov
loop
inc
add
xchg
and
repz
rorl
add
pop
pop
rcrl
mov
inc
add
push
mov
pop
mov
xlat
jge
in
add
mov
push
xchg
divb
test
add
xchg
pop
popa
jmp
inc
add
xchg
lds
jle
rcl
add
pushf
dec
push
add
sahf
xchg
push
add
add
push
sub
dec
sub
rcrb
addl
push
rolb
push
adc
out
mov
add
jne
dec
add
add
addr16
test
lea
add
add
mov
add
pop
add
and
add
cld
imul
push
add
and
add
xchg
fwait
insb
add
jne
xor
push
add
lods
adc
inc
add
pushf
loop
add
incl
xchg
xchg
add
inc
or
or
mov
bound
cwtl
add
pop
xor
lods
dec
add
add
out
inc
mov
add
cmp
cmp
imul
pop
add
bnd
addr16
pop
test
scas
or
mov
mov
sbb
imul
push
je
fidivrs
mov
ljmp
movsb
movb
add
adc
jmp
gs
add
aad
add
adc
outsl
add
sub
test
add
jnp
adc
pop
push
add
imul
out
pop
mov
add
add
das
mov
or
cmp
or
fidivl
add
nop
pusha
add
add
test
fdivp
addr16
fildll
pop
add
add
sub
pop
jbe
fiadds
add
add
dec
dec
add
cmp
cmp
jge
lds
out
mov
jle
fiaddl
sbb
sbb
push
add
add
add
jmp
imul
in
popa
and
push
add
out
add
add
jge
cmpb
mov
add
nop
daa
out
leave
imul
sbb
add
sub
xchg
and
pop
add
adc
add
aas
icebp
push
add
add
sub
mov
xchg
sti
pop
add
negl
insb
add
add
lock
shr
cmp
sbb
mov
xchg
xchg
adc
gs
insl
or
shll
add
dec
add
sbb
shl
ja
sub
mov
shrl
dec
mov
pop
add
popf
js
pop
add
push
add
xchg
call
test
or
add
nop
mov
adc
pop
aam
loope
cmp
jle
jl
mov
test
add
test
add
mov
dec
add
scas
lods
mov
add
add
or
fisttpl
not
orl
ja
addb
xchg
fidivl
jbe
jg
xor
scas
cli
daa
repz
cmpsb
xlat
xchg
add
jbe
adc
cmp
pop
iret
pushf
push
or
idiv
jns
add
or
or
push
add
xchg
jp
or
and
js
fidivrl
cmpsb
push
add
insl
stos
jle
or
test
xchg
add
stos
or
popf
cli
cmovs
lret
pop
add
aad
ljmp
add
add
and
fimuls
lock
mov
out
lret
mov
pop
pop
cmp
inc
add
adc
dec
add
xor
sbbb
xor
gs
cmp
test
outsl
sub
dec
add
add
add
ret
fldl2e
int3
lods
xchg
ljmp
cwtl
fdivl
mov
lahf
pop
add
xchg
mov
xor
cmpsl
jno
inc
add
out
dec
arpl
mov
push
mov
add
lret
insb
add
imul
or
or
or
aas
sub
sahf
imul
or
test
sub
rorl
cmpsl
das
dec
rcll
cwtl
scas
addb
hlt
jle
loop
lea
dec
xchg
mov
inc
add
adc
pop
test
jl
cwtl
xchg
inc
add
add
clc
test
repnz
cld
cmp
mov
loope
loop
aas
ret
mov
mov
loopne
add
outsl
loopne
add
lods
out
pop
aaa
add
idivl
mov
mov
add
jno
jbe
aam
lock
pop
add
cmc
cwtl
scas
cmp
sbb
pop
jo
adc
cmp
mov
sarb
add
lret
xor
insb
add
fadd
out
enter
add
ljmp
stos
into
loopne
mov
add
les
sub
add
insb
add
jae
scas
or
pushf
mov
add
adc
mov
mov
jg
mov
sub
repz
dec
stos
sbb
xlat
push
add
andl
add
std
scas
mov
add
inc
ljmp
jbe
mov
lret
inc
sub
push
or
lret
push
fmuls
push
add
add
cwtl
pop
add
out
push
sbb
jmp
repnz
mov
lea
and
add
add
inc
xlat
aas
add
add
push
add
add
sub
xor
cmpsl
xchg
add
mov
add
add
adcb
cmp
aaa
outsl
lock
sub
cmpsl
pop
add
add
inc
sbb
fdiv
mov
add
test
pop
cltd
and
jle
subb
aaa
xchg
jp
insb
add
bound
jge
add
pop
cld
loop
add
add
loopne
push
testl
lcall
iret
fcoms
add
add
jp
add
add
push
mov
add
divl
add
insb
add
in
adc
aaa
mov
pop
add
fisttps
mov
add
pushf
or
aaa
push
add
fstp
loop
dec
push
add
sub
mov
mov
add
stos
cmp
mov
adc
ja
and
pushf
sbb
lods
pop
add
in
gs
sarb
clc
in
outsb
add
add
les
add
stos
cs
xchg
js
and
cmp
mov
std
das
pop
add
rcl
leave
in
xchg
push
inc
add
xchg
dec
add
pop
add
lret
push
add
add
inc
sti
xchg
clc
aas
subl
enter
sub
imul
mov
add
add
sub
push
enter
int
add
add
xchg
test
hlt
cmp
outsl
push
add
add
in
pop
push
add
inc
add
rcr
push
push
add
cmp
sub
fyl2xp1
lods
jbe
fmuls
out
inc
cmp
cmpl
dec
inc
sbb
add
add
and
add
sub
call
imul
in
inc
add
add
add
lds
mov
sbb
loope
mov
ret
xor
push
add
jae
movsl
adc
fmuls
mov
ret
aas
fstpt
add
inc
add
bound
pop
add
jbe
fstl
idiv
add
jmp
popa
dec
add
inc
add
xor
iret
aam
add
sub
aas
and
loope
mov
push
add
add
pusha
add
test
add
add
jo
jecxz
pop
fstpt
add
addb
in
add
push
add
mov
jae
out
mov
push
jmp
and
lret
shl
das
loopne
add
xor
push
test
add
add
inc
add
daa
aad
lret
mov
dec
add
loope
xchg
push
push
add
test
stos
loop
add
add
add
mov
sub
pop
mov
repz
fidivl
stos
or
lock
into
ljmp
sbb
jns
or
xchg
mov
add
data16
add
ficoms
outsb
add
inc
add
add
inc
add
or
push
add
and
and
test
sbb
jmp
mov
mov
add
mov
insl
imul
add
mov
jmp
add
ja
add
leave
test
add
add
lea
shl
add
loop
adc
sahf
or
pop
jecxz
lcall
add
pop
jecxz
add
add
mov
jns
pop
pushf
and
jno
ja
lret
scas
fcomp
lods
das
push
add
add
mov
test
scas
scas
leave
pusha
add
adc
mov
les
iret
pop
jae
lods
sbb
and
sub
rep
cmp
pop
jo
ja
in
popf
and
jle
mov
lods
outsl
add
add
add
mov
lock
add
add
push
cmc
dec
add
push
add
and
inc
add
mov
fcoms
jp
cmpb
div
nop
and
add
sbb
adcl
adcl
out
fadds
fistps
and
add
push
or
mov
je
insl
and
xchg
sub
jno
lds
add
mulb
ljmp
sbb
jae
test
jmp
add
enter
add
cmp
pop
sbb
push
add
and
lds
cmp
sub
sahf
inc
push
xchg
xchg
cld
jmp
mov
add
add
sbb
lret
fisubrl
or
dec
aaa
ja
and
push
add
int
add
cltd
das
dec
in
dec
inc
add
daa
das
cld
arpl
inc
add
add
mov
in
dec
add
jl
out
test
mov
dec
jo
and
add
jbe
dec
add
sub
push
pop
sarl
loopne
and
add
inc
and
lea
add
push
add
mov
sti
mov
loope
cmpsb
fcoml
or
mov
add
rcrl
add
int
and
insl
mov
mov
add
add
dec
add
add
or
and
cltd
xor
add
cmp
ljmp
jle
jp
adc
cmp
lods
add
add
add
fidivs
in
scas
int3
dec
test
addr16
shrl
mov
sub
and
add
test
push
sbb
fwait
loop
add
add
lock
das
xor
jg
push
add
stos
pop
add
add
add
mov
imul
add
xchg
call
xor
pop
add
add
popa
cmp
adc
data16
push
add
roll
sub
mov
sub
add
pop
add
stc
xor
pop
add
leave
into
mov
jge
xchg
inc
push
outsl
mov
stos
cltd
xlat
xchg
adc
add
mov
push
add
les
add
pop
and
adc
pushf
outsb
add
aas
pushf
or
add
xchg
std
sub
jnp
loop
sub
push
add
sti
dec
and
ss
add
mov
cltd
inc
test
jne
sub
in
mov
call
add
pop
add
push
add
sar
adc
add
dec
mov
das
xor
xchg
sti
or
test
pop
icebp
jg
inc
push
add
or
and
add
mov
mov
ror
out
add
pop
jbe
pop
add
popa
hlt
ret
inc
add
inc
add
push
add
add
out
insb
add
adc
scas
inc
cmp
pusha
add
rorl
add
outsb
add
add
scas
mov
add
sub
add
add
add
mov
mov
add
jle
adc
push
add
ficomps
scas
daa
or
fwait
lock
jle
cli
push
fldenv
data16
ja
popf
or
dec
loop
add
mov
add
mov
mov
mov
add
cli
dec
add
jo
xchg
pop
dec
add
add
bound
jmp
inc
inc
jnp
test
add
add
enter
movsb
imul
and
add
mul
cli
sbb
sbbl
stos
or
add
pop
inc
push
mov
das
fbstp
xchg
jg
add
rorb
cmp
popf
outsl
pop
xchg
outsb
add
gs
scas
inc
add
inc
cmp
xor
out
add
leave
push
add
add
mov
in
cmpsl
lea
add
mov
add
bound
add
mov
lret
add
divl
ret
add
je
popa
mov
add
add
add
xorb
test
fucomip
jge
in
or
imul
xchg
cmp
out
movups
pop
add
add
jg
pop
out
mov
adc
icebp
arpl
xchg
fidivs
pop
push
mov
shll
rorl
xchg
movsb
shll
jae
shl
xor
add
ficoml
add
sbb
enter
mov
add
add
mov
pop
inc
mov
dec
out
adc
dec
add
inc
cltd
dec
jp
arpl
imul
in
out
xchg
xchg
cld
pop
add
add
fcmovnu
mov
mov
add
or
add
adcl
sub
aad
mov
add
call
add
in
xorb
xchg
in
add
add
jo
sub
xchg
mov
add
fildl
push
add
add
add
jmp
stc
or
mov
pushf
add
data16
xchg
data16
bound
xlat
jne
mov
adc
sti
push
add
in
lret
and
add
or
xchg
jge
imul
adc
insb
add
sub
and
jl
inc
add
add
sub
add
mov
mov
add
jne
ffree
fdivl
pop
movsb
in
pop
add
mov
add
add
idivb
pop
out
and
jnp
cmp
sub
and
divb
xchg
add
xchg
inc
add
add
sbb
add
jecxz
enter
imul
rol
adc
sbb
xchg
dec
push
and
pop
add
or
push
xor
pop
pop
add
mov
xchg
lea
jle
jp
xchg
ja
add
add
cli
movl
pop
ja
add
add
test
xchg
sub
test
cli
push
xor
incl
mov
add
add
mov
push
mov
add
ja
in
lret
pop
or
pop
loop
and
sub
push
add
imul
jle
add
fildll
add
mov
add
jmp
add
jnp
test
lcall
push
add
add
add
movsb
dec
dec
add
pop
add
repnz
pop
add
pop
add
mov
or
ret
pop
add
iret
add
sbb
add
jecxz
add
frstor
add
ja
pop
ret
insl
lret
add
dec
adc
or
jmp
jecxz
add
faddl
popa
in
fxch
data16
sarl
add
add
cmp
push
std
or
add
dec
add
lahf
jg
add
jnp
dec
add
mov
add
and
add
push
add
dec
add
mov
in
jnp
push
add
mov
add
cs
sbb
imul
add
clc
loop
push
add
lods
xchg
xor
dec
add
hlt
pushf
repnz
xchg
cmp
iret
adc
fwait
pop
add
aas
stc
jne
aaa
mov
stos
adc
pop
and
inc
push
add
mov
add
add
sbb
addl
lcall
push
pop
pop
inc
add
bound
fmuls
scas
imul
adc
sub
stos
sub
sbb
vmovdqu
fisttpll
xchg
in
cmp
cmpsl
aaa
sub
popl
into
jmp
add
add
or
push
add
aam
add
ret
add
add
push
fiaddl
add
adc
cmp
sbb
or
mov
add
mov
enter
lcall
fnstenv
jp
xor
movsl
daa
jne
in
jg
xchg
fistpll
test
add
std
lds
add
sbb
test
add
repz
add
add
rolb
sub
fwait
test
filds
xchg
mov
popf
mov
ret
scas
xor
scas
movsl
sub
inc
add
aad
xor
sahf
xlat
lcall
add
lea
out
jg
outsb
add
mov
sub
pop
test
sar
int3
cmc
lea
xchg
aad
push
add
int
out
mov
cmp
push
add
add
pop
int3
and
jl
icebp
add
xchg
xchg
mov
out
cmp
fdivl
add
mov
add
push
add
pop
mov
jns
add
iret
js
flds
add
aad
sub
sbb
popa
hlt
out
stos
sbb
arpl
sub
xchg
sub
add
inc
outsb
add
gs
add
add
add
pop
jo
lcall
or
and
insb
add
add
aad
and
out
popa
mov
insl
in
nop
jne
jecxz
popa
std
mov
add
dec
add
add
xor
mov
xor
sbb
mov
mov
fdivr
ret
int
add
sbb
pop
add
fistps
cmp
popf
adc
daa
adc
dec
scas
bound
loop
subb
out
lds
fisubs
enter
add
inc
push
add
repz
and
shlb
mov
sbb
sub
cmp
call
xchg
push
add
pop
add
or
dec
add
or
dec
add
add
lds
loop
cmp
dec
add
and
jnp
sbb
jnp
dec
fcmovu
cmp
test
add
xor
push
add
add
clc
loopne
add
add
add
add
add
aas
xor
dec
add
add
xchg
mov
enter
fmul
mov
add
xchg
test
or
add
fucomp
sub
add
out
imul
add
add
ja
pop
add
add
add
sub
inc
add
add
xchg
mov
mov
dec
add
fdivs
cmpsl
lahf
pop
add
dec
les
loopne
add
jnp
add
into
sti
mov
loopne
cmp
xor
dec
push
add
pop
popf
lcall
pop
mov
and
cmp
push
jg
bound
movsb
ss
lock
sti
das
out
loope
or
add
and
sahf
scas
insb
add
add
add
mov
cltd
pop
add
add
adc
mov
add
adcl
and
data16
pop
aaa
scas
xlat
jbe
add
add
add
jge
mov
push
add
lcall
add
cwtl
xchg
addb
add
in
int3
jb
loope
push
add
add
ret
sbb
cmp
stc
out
aad
add
cmp
jbe
mov
add
scas
daa
shll
mov
add
lods
or
ret
in
jnp
mov
cmp
jg
lods
mov
push
add
pusha
add
add
add
cmp
push
std
mov
xchg
std
movsb
pop
jge
or
mov
out
jbe
push
add
mov
xchg
pusha
add
push
add
subb
dec
popa
cmc
xor
push
add
stos
cmpsl
data16
popa
jge
movsb
xchg
adc
mov
rcrb
mov
fcos
into
push
add
add
leave
int
test
sub
add
lret
or
es
xchg
inc
dec
sbb
jne
rclb
into
fisttps
hlt
les
sbb
icebp
push
ds
dec
push
and
ja
add
add
adc
dec
add
mov
add
cmpb
movsb
aam
push
mov
or
cmp
inc
rcr
add
add
sub
push
add
pop
add
add
jne
add
mov
add
je
bnd
or
mull
mov
lahf
outsb
add
call
mov
and
addr16
cmpb
add
push
add
add
repz
jns
push
add
cwtl
test
add
enter
xchg
add
add
add
and
fisubl
dec
inc
mov
add
mov
jbe
xchg
in
stos
push
add
lahf
pop
jmp
inc
add
cmc
ret
shll
add
dec
mov
dec
xchg
aam
add
test
push
sub
inc
add
or
std
dec
loope
sub
pop
jecxz
rclb
push
leave
pop
and
xchg
flds
add
cli
mov
mov
xchg
rorb
xchg
scas
mov
add
ljmp
dec
add
inc
push
add
add
in
into
push
mov
add
jmp
dec
in
gs
jecxz
ja
and
stos
mov
or
mov
dec
sbb
bound
cwtl
rcl
aaa
mov
or
or
ljmp
add
add
inc
add
mov
stos
loopne
add
jno
cmc
sbb
sub
test
add
sbb
ljmp
push
add
jnp
add
mov
mov
in
push
add
jg
mov
add
jle
cmp
scas
pop
in
repnz
add
dec
int3
xor
add
add
mov
pop
add
sub
mov
add
dec
add
inc
add
cmp
push
add
xor
sub
std
imulb
add
outsl
in
insl
clc
cmp
out
or
ljmp
add
inc
and
push
add
add
jns
or
aas
cmp
adc
lea
addl
push
add
pop
adc
aaa
ljmp
add
mov
add
inc
and
sbb
cmc
cmpsl
and
xchg
add
and
test
lea
pop
lahf
push
add
loopne
push
bound
into
lock
add
add
add
int
and
fwait
repnz
add
xchg
and
push
add
jbe
popa
xchg
mov
or
pop
test
jmp
push
pop
mov
add
push
add
push
repnz
aas
cmpsl
xchg
pop
add
mov
sub
push
add
stc
fstpt
ds
shlb
sub
mov
cmc
scas
mov
ficompl
add
out
inc
push
add
adc
movsl
sbb
lcall
add
xor
loope
add
outsb
add
add
add
dec
stos
inc
add
imul
pop
add
sub
dec
add
inc
add
sti
loop
mov
xor
mov
std
daa
out
jp
mov
add
add
sbbl
add
stos
dec
add
test
lahf
das
fisubrl
sbb
inc
stc
xlat
or
in
xor
add
mov
std
pusha
add
add
jmp
fucomi
push
add
cmp
and
sbb
add
pop
test
inc
jae
sub
and
out
jbe
and
ficompl
cltd
cmp
add
setae
pop
call
push
add
add
cwtl
jmp
les
add
insb
add
sbb
dec
add
inc
add
mulb
shll
out
and
imul
add
in
jecxz
mov
je
mov
nop
scas
repnz
cwtl
sbb
mov
decb
add
shr
xchg
and
mov
add
add
add
xor
in
shlb
add
inc
push
add
and
cmpsl
scas
imul
call
loope
dec
add
mov
ljmp
fisttpl
mov
add
shll
adc
pusha
add
bound
ret
cmp
dec
sbb
add
sarl
lods
mov
add
mov
in
add
out
mov
lea
mov
dec
add
stc
adc
add
jnp
add
inc
cli
loope
jns
and
lock
add
mov
scas
push
add
shll
shll
push
call
jge
add
mov
cmpsb
int
cmpsb
mov
add
add
adc
rclb
clc
aam
scas
lods
push
inc
add
push
jmp
ss
les
ret
in
push
xchg
lods
pop
add
add
mov
add
cmc
fsubl
push
add
add
xor
das
inc
add
mov
and
test
stos
lahf
push
loope
xchg
mov
jp
imul
add
add
mov
add
ret
mov
fadd
push
add
inc
cmpsb
fsubrl
and
out
or
popf
dec
add
and
jnp
inc
add
add
mov
std
rcr
add
add
push
pop
rcll
add
jae
add
int3
mov
inc
add
add
add
and
cmpsb
mov
xor
jle
sbbb
outsb
add
jnp
lea
lahf
sar
imul
dec
add
leave
es
lcall
dec
add
add
lods
cmc
push
mov
cwtl
mov
add
jbe
inc
mov
dec
add
ds
mov
inc
add
pop
enter
pop
test
out
sahf
or
add
ficomps
dec
adc
sarl
int
add
add
mov
fstps
faddl
fdivrl
add
sarl
add
cmp
xchg
sti
add
nop
aaa
add
lret
stos
pop
inc
fisttpl
add
sbb
dec
add
pop
add
push
add
add
dec
add
lds
pop
add
cltd
sbb
add
popa
inc
in
mov
pop
icebp
in
xchg
into
mov
sbb
arpl
fsubp
push
jmp
out
out
add
adc
sub
jae
lcall
fdivrl
mov
add
xlat
sbb
scas
insl
call
mov
loop
cmpsb
adc
arpl
or
xor
jbe
aad
mov
sub
in
mov
add
mov
cli
data16
push
add
aad
add
jnp
in
add
add
mov
pop
add
sbb
push
add
or
lret
mov
adc
inc
pop
add
add
shrl
jo
xor
xor
add
add
add
adc
add
out
push
imul
adc
add
cmp
sbb
inc
bound
mov
or
or
add
scas
mov
add
add
push
add
out
add
cmc
out
jo
sbb
call
inc
std
inc
mov
add
cli
xchg
dec
fildll
xor
js
iret
sub
jae
add
pop
rolb
jno
add
lds
fdivs
add
jl
jbe
and
cmpsl
mov
lahf
or
xchg
add
arpl
or
insl
outsl
std
lock
jns
jmp
sub
pop
loope
sub
ja
mov
push
mov
jg
add
mov
lret
frstor
cmp
mov
dec
add
add
clc
jle
xchg
ss
cmp
xchg
loop
add
push
add
or
sub
pop
add
or
push
add
mov
ret
add
cmpsl
bound
push
add
cmpsb
incb
mov
sbb
and
pop
add
data16
addr16
cltd
lds
add
cmp
loopne
mov
cmp
fistpl
cs
popa
loope
popf
sbbb
cmp
xchg
clflush
add
push
add
cmp
add
ja
sub
jp
ficompl
add
sub
push
add
cld
push
add
inc
jbe
pop
add
add
cmpl
cmpsb
push
stos
jo
pop
add
js
fstp
stc
pop
sbb
push
mov
mov
add
add
fistpll
in
add
sub
orl
mov
fsub
mov
add
xchg
jae
add
test
mov
aad
add
push
push
cmp
rcll
add
sbbb
add
add
ds
ja
mov
fstpt
inc
add
jl
cmp
mov
lcall
and
inc
add
mov
cwtl
cmp
add
add
add
aam
and
add
or
add
in
ret
push
add
cmpsb
add
add
add
lods
inc
add
add
xlat
sub
adc
add
add
add
add
cltd
movsl
movsb
cmp
inc
cmp
movsb
psubw
jp
stos
nop
das
mov
stc
les
jmp
add
ja
loope
loope
add
daa
dec
aad
jecxz
add
scas
push
das
dec
mov
fldt
push
cwtl
hlt
mov
addl
jl
xchg
setnp
aad
in
sub
and
mov
shr
jnp
daa
aam
les
add
stos
inc
jge
mov
sbb
add
aas
mov
cmp
mov
test
push
add
add
jecxz
jbe
cmp
xchg
lea
sub
mov
xor
clc
mov
dec
mov
mov
imul
push
xchg
push
in
outsl
inc
or
imul
mov
call
add
clc
cmp
add
add
nop
ja
inc
test
mov
rorb
mov
shll
add
sbb
in
xor
imul
add
mov
aam
push
add
xchg
xchg
add
popa
lods
rorl
jno
fisttpl
cmpsl
mov
add
mov
dec
pop
add
insl
push
inc
add
mov
lret
lahf
lret
and
add
pop
scas
mov
outsl
cmp
repnz
sub
mov
add
add
add
lret
imul
fstp
sbb
cmpsb
and
dec
xor
add
dec
scas
das
cmpsb
fsts
cmpsl
sahf
leave
ljmp
mov
add
add
pusha
add
adc
add
pop
add
or
mov
std
xor
movlps
fmulp
outsl
nop
mov
xor
test
add
jne
arpl
mov
add
and
lods
scas
jp
jge
add
push
xor
rcll
dec
add
or
dec
insb
add
fdivs
add
mov
dec
shr
int
les
inc
xor
bound
push
add
fs
sub
aas
jbe
xor
popf
in
adc
call
inc
repz
mov
cmpsl
and
cmp
push
lods
add
aam
add
sub
test
rorl
push
add
mov
fimuls
mov
and
enter
add
call
jecxz
mov
add
add
add
movsl
xor
mov
jge
add
pop
pushf
fwait
push
add
add
push
std
out
outsb
add
add
adc
push
add
add
sub
add
add
lret
std
call
adc
cmp
inc
add
dec
inc
nop
sbb
enter
sub
xchg
mov
sub
loopne
xor
gs
mov
idivb
shrl
and
cs
sub
add
mov
pop
add
add
ret
push
and
dec
jae
orb
add
lea
and
add
unpckhps
arpl
pop
add
je
push
add
imull
clc
sbb
sub
or
jecxz
add
push
jg
les
add
push
lds
mov
mov
mov
add
dec
add
and
add
jb
div
jl
and
add
add
add
add
add
xchg
dec
jb
jle
lods
pop
sbb
add
popf
mov
nop
mov
addr16
or
test
popa
xchg
fsubl
pop
int
outsl
shrb
sti
pop
xchg
jg
add
dec
clc
or
push
jle
pop
add
rcrb
nop
insb
add
pop
add
mov
leave
add
sub
mov
movsl
aad
add
sbb
scas
loop
xchg
enter
lods
adc
jbe
pop
add
add
clc
mov
pop
add
outsb
add
pop
jbe
mov
add
sub
dec
add
scas
popf
and
xor
nop
mov
xchg
je
push
add
mov
dec
fbstp
rcl
gs
adc
add
add
add
fidivrs
in
sbb
incl
add
and
push
and
lds
add
add
add
adc
clc
neg
jae
xor
xor
int
aaa
push
add
add
jg
arpl
fs
into
pusha
add
test
add
out
repnz
arpl
fdivrl
add
add
scas
push
add
loop
repz
add
mov
cmp
inc
add
fildll
cmpb
add
addb
add
sbbl
lret
loopne
mov
test
outsb
add
mov
dec
add
cmp
inc
add
xchg
jge
lods
out
std
testl
addr16
add
in
outsb
add
sbb
cmp
fildll
pop
int
add
pushf
add
add
push
push
add
xchg
sub
add
call
adc
add
mov
add
sahf
faddl
data16
cmc
scas
ret
mov
sbb
jmp
and
lret
in
outsb
add
add
add
outsl
sbb
add
add
rcrl
add
ficomps
add
and
test
add
cli
pop
jmp
ja
mull
out
add
add
mov
mov
add
dec
add
arpl
push
add
add
repnz
cmp
stos
lds
push
add
popf
loopne
xor
pop
mov
movsl
push
add
push
push
add
and
into
jg
mov
mov
mov
mov
add
outsb
add
ficompl
out
adc
data16
sbb
popf
test
inc
scas
aad
in
test
shr
ss
lods
lea
pop
jge
sbb
inc
inc
add
pop
pop
dec
add
jo
mov
add
divb
add
add
push
add
cli
sub
test
cmpsl
xchg
gs
add
push
imul
inc
insl
push
add
cmp
sbb
sub
in
adc
inc
mov
add
jle
test
dec
add
inc
leave
call
mov
popl
sub
subl
loop
daa
pop
lods
addr16
dec
pop
arpl
dec
mov
add
aam
add
add
lcall
add
add
jae
push
add
add
pop
cmpsb
loop
adc
add
sarb
add
xor
dec
mov
add
dec
add
add
or
cmc
ficompl
jb
stc
hlt
and
xchg
in
subl
xchg
mov
gs
scas
aaa
add
mov
pop
add
add
dec
add
pop
add
dec
jle
pop
add
jl
add
sub
mov
dec
add
repz
add
addb
jae
mov
add
add
sbb
xor
push
repz
jno
xchg
add
fiadds
pop
sarb
out
push
add
jne
popf
mov
add
add
add
popa
sub
lret
mov
adc
inc
fsubp
in
push
add
add
into
sbb
shrb
data16
push
adc
dec
add
jmp
test
cmp
mov
add
xchg
lret
insl
mov
add
add
in
or
mov
sbbl
push
shrl
xor
sub
inc
add
stos
sbb
xchg
jge
js
or
pop
int3
mov
add
add
add
movsl
pop
add
add
shlb
pop
jno
jmp
add
int3
dec
lods
push
and
fiadds
jl
mov
cmp
jp
jae
add
add
xchg
js
jo
cld
or
add
push
add
add
sbb
pop
adc
push
leave
cmpsl
mov
add
hlt
fmull
in
je
jle
sarl
xchg
bnd
add
je
jl
fndisi(8087
push
add
xchg
lea
out
jmp
sarl
mov
scas
in
mov
add
ficompl
jnp
push
bound
mov
pop
mov
add
mov
add
add
les
icebp
mov
mov
inc
out
add
das
rorl
add
push
add
add
dec
add
je
je
loop
cmp
cmp
add
sub
sbb
adc
call
sub
lret
mov
add
jb
pusha
add
mov
add
loope
add
add
push
lods
dec
add
xchg
add
mov
add
jmp
add
and
shlb
add
cmpsb
lret
jns
sbb
add
add
cmp
outsb
add
int3
mov
sub
mov
add
adc
jnp
jbe
dec
add
mov
xchg
or
das
cmp
rcr
cmp
add
scas
clc
dec
add
loop
add
add
mov
push
add
cmp
pop
sti
movl
xor
cmp
test
mov
shll
in
add
imul
stc
sbb
add
shr
sti
xchg
fldl
add
popf
sub
add
xor
jmp
pop
sub
test
sbb
arpl
add
add
or
insl
xlat
sbb
jo
test
arpl
add
add
movsl
and
xchg
sub
xor
add
test
pushf
and
fcompl
int
add
loope
add
add
xor
add
push
add
add
jnp
sub
lret
xlat
add
xor
add
sub
pop
adc
dec
xor
cld
icebp
lds
into
push
dec
add
push
jo
push
add
loopne
iret
fnsave
cmpb
test
xchg
mov
mov
sbb
add
cvtps2pd
xchg
xor
out
pop
add
add
fstpt
pop
jae
add
dec
add
inc
mov
testb
shlb
push
add
or
and
ret
add
jmp
push
add
add
xor
sub
add
gs
jg
cmp
ficompl
sbb
outsb
add
mov
nop
outsl
or
add
pop
aaa
stos
repz
add
push
sub
dec
xorl
add
fwait
imul
lods
icebp
lods
rcrl
in
add
sahf
xchg
bound
cltd
test
out
add
pop
enter
outsl
xor
dec
mov
or
rcll
adc
insl
lea
lods
xor
mov
dec
add
add
and
cmpl
mov
jecxz
add
mov
add
xor
rorl
js
outsl
push
mov
add
in
mov
jl
loope
add
cmp
push
add
imul
testb
xchg
push
add
stc
insb
add
bound
add
pop
add
out
xchg
cmp
nop
pop
nop
sub
add
add
out
fnstsw
shl
das
and
add
mov
add
movsl
xor
add
mov
push
add
add
add
ret
mov
nopl
gs
add
outsb
add
add
add
pop
stos
lods
fcoms
into
and
push
add
push
dec
add
cmp
adc
out
cmp
push
add
sub
sti
cltd
jns
mov
pop
addl
out
imul
dec
jae
xorl
sti
call
lret
xor
shrb
es
mov
or
bound
fisubrs
add
in
dec
add
dec
add
add
push
mov
dec
add
add
xchg
dec
inc
add
test
pop
lds
test
or
aas
call
loopne
clc
dec
add
add
nop
or
leave
xor
jge
ds
scas
fldln2
popf
into
stos
fsubrs
fisubrs
jmp
add
add
sub
add
subb
add
add
add
ret
lret
sti
push
add
push
add
insb
add
insb
add
add
fdivrp
push
jmp
jmp
add
push
add
mov
push
jae
test
aam
pop
add
shl
cltd
aam
add
ficomps
or
xor
gs
orb
add
repnz
negl
rcrb
adc
insl
and
xor
fdivrs
mov
jmp
mov
mov
mov
and
fnsave
xchg
add
js
push
add
jne
add
fwait
shll
scas
fstps
add
sub
add
pop
aaa
adc
gs
imul
cmpsl
sub
jp
ljmp
pop
add
xor
add
js
in
mov
and
xor
add
cmp
xchg
mov
add
add
stos
aaa
sbb
xchg
add
mov
adc
nop
iret
pushf
and
jb
xchg
add
ja
cmp
inc
add
mov
stc
inc
add
mov
add
adc
cwtl
xlat
fldl
add
dec
mov
add
pop
inc
les
add
push
std
xchg
sbb
into
add
pushf
inc
jp
inc
add
adc
mov
push
cmp
cld
call
add
add
imul
test
xchg
mov
cltd
jecxz
add
mov
add
pop
add
add
lret
mov
push
add
cs
sbb
or
ficoms
cs
push
lahf
into
data16
sub
add
cmp
or
xchg
lea
test
addr16
xor
test
add
loopne
add
mov
fdivrp
pop
shlb
or
jg
xchg
aas
test
push
add
daa
push
add
jns
inc
xchg
or
add
push
icebp
out
outsl
lods
cmp
cmp
jne
lock
mov
xchg
scas
test
sbb
mov
add
incb
fdivs
push
add
mov
sahf
lahf
loope
pop
add
dec
add
add
add
adcb
jb
jmp
mov
sbb
nop
pop
pop
sbb
enter
add
andl
dec
sbb
loop
outsl
adc
or
mov
cmp
inc
add
add
lock
aam
add
sub
or
mov
leave
xor
repnz
mov
mov
cmpsl
inc
add
add
fs
dec
ljmp
loope
dec
dec
add
roll
data16
mov
inc
add
xchg
test
lcall
jne
adc
insl
in
bound
xchg
mov
and
push
or
jno
add
cwtl
fidivrl
popf
js
add
test
stos
and
setnp
mov
imul
add
xor
xor
inc
stos
add
push
mov
addr16
cmpsb
dec
dec
add
scas
scas
stc
xchg
sbb
mov
scas
js
add
lods
sub
xor
pop
scas
pop
or
jb
add
add
mov
add
std
push
add
gs
add
ffreep
subb
mov
in
mov
sub
repnz
dec
add
pop
sub
sub
pop
mov
popa
adc
push
add
fidivs
adc
pop
add
cmc
cmpsl
sbb
add
ret
add
add
mov
mov
fcompl
and
inc
lret
loope
mov
add
enter
add
popf
push
dec
add
in
add
stos
push
test
add
mov
jge
add
add
add
jg
inc
enter
adc
aas
std
push
add
xchg
cmp
in
add
add
jo
loope
jnp
push
add
mov
push
add
dec
repnz
cli
stos
cmp
dec
loope
add
sub
add
out
ja
add
or
leave
in
xor
cmpsl
cmp
jl
push
subb
test
inc
add
add
orb
mov
fst
pop
add
add
xor
jb
gs
mov
sbb
fisttps
add
add
call
rcrb
push
cmp
mov
mov
testl
addb
cmpsl
jmp
je
fdivl
sbb
test
xor
scas
jmp
clc
lea
mov
fidivrs
mov
popf
lock
add
cmpsb
jp
movsb
lahf
test
inc
add
and
cmp
das
data16
pushf
or
add
nop
adc
inc
cltd
enter
jmp
sub
add
cmp
inc
and
xorb
add
cli
leave
pop
mov
sbb
mov
push
test
xchg
cmp
add
daa
movsb
dec
into
arpl
jo
and
mov
and
data16
repnz
sub
cmpsl
cmp
adc
push
loop
ja
add
sbb
sarb
add
add
mov
cmpsb
in
fs
popf
mov
dec
add
add
sbb
add
icebp
mov
ljmp
in
add
mov
xchg
aas
pop
sbb
jmp
sub
lea
divl
xchg
adc
add
adc
add
dec
arpl
lock
add
inc
add
add
cmp
jne
popf
inc
add
outsl
inc
add
push
add
inc
jae
insl
dec
scas
pop
add
fnstcw
push
add
xor
in
movsb
mov
jp
sub
add
stc
inc
add
adc
adc
sar
in
jecxz
pop
add
xor
jmp
pusha
add
int
add
add
cltd
adc
fadd
pop
and
lahf
aam
adc
fisubl
add
add
aad
sbb
push
add
loopne
sbb
mov
nop
adcl
ljmp
add
add
in
lret
jae
or
add
xchg
fdivp
xorl
add
jl
fwait
xor
stc
push
jg
xchg
shll
jae
pop
pop
add
xchg
sub
incb
add
fdivr
jo
mov
call
add
add
add
add
push
add
add
add
pop
add
add
add
add
add
rolb
adc
test
or
lcall
dec
dec
repnz
imul
add
pop
add
cmc
jmp
or
add
add
xor
push
dec
add
lock
sbbl
add
add
and
mov
xor
add
jmp
xor
xchg
insl
in
mov
xchg
mov
add
xchg
shlb
in
pop
dec
scas
pushf
repnz
xor
lret
rcrb
and
clc
xor
js
cmp
dec
push
test
aaa
jno
add
sub
leave
cltd
mov
add
es
mov
jg
push
add
push
add
inc
add
xchg
inc
add
out
inc
add
or
add
flds
add
push
add
fstpl
add
adc
test
inc
add
sub
xor
or
add
fisubrs
jmp
jg
pop
add
jae
add
add
jl
xor
jge
add
or
inc
add
scas
pop
pop
cli
mov
bound
inc
add
outsl
insb
add
divl
add
ret
add
xchg
leave
rclb
add
sbb
mov
dec
add
sar
push
add
andl
jno
sarl
ja
aaa
jne
mov
xor
jmp
sbb
jne
jne
add
sarb
add
lcall
pop
add
ret
dec
call
inc
jmp
add
mov
loop
rcrb
mov
subb
adc
testb
movsb
dec
pusha
add
lahf
add
add
inc
add
call
in
psubq
cmp
lcall
add
add
xor
sti
ja
pop
into
xor
push
sar
shlb
inc
mov
cmp
clc
inc
add
mov
mov
popf
rol
add
leave
xor
filds
arpl
enter
add
aas
insb
add
mov
idivl
sub
fildl
popf
cltd
jg
xchg
or
punpckhdq
pushf
jmp
mov
roll
mov
mov
jle
shlb
imul
add
in
adc
ds
push
add
add
shrb
outsl
fldt
add
adc
in
add
xchg
or
add
add
call
nop
out
add
inc
cwtl
fldenv
add
inc
push
lods
andb
xchg
jg
mov
data16
mov
add
hlt
mov
pop
and
and
jl
sbb
jecxz
inc
add
add
xchg
adc
cmp
cmp
inc
xor
in
push
cli
add
das
das
add
bound
xchg
inc
sub
add
rorb
adc
inc
sti
add
insb
add
ja
and
or
inc
add
add
add
add
sbb
out
pop
sbb
sti
je
add
mov
aaa
call
js
xor
mov
add
add
jecxz
fsubrs
push
add
pop
lods
push
add
add
arpl
sub
gs
inc
adc
pop
mov
inc
add
add
push
out
iret
scas
xchg
xor
into
xor
jbe
aam
add
adcb
add
cli
add
imul
add
add
test
add
decb
adc
inc
add
push
add
add
add
add
jecxz
add
lahf
pop
dec
add
add
into
push
cmc
jge
add
xor
sbb
inc
add
sbb
out
in
lea
clc
fistl
add
add
aaa
test
add
cmp
or
sub
out
mov
bound
jp
inc
cmp
es
jno
dec
mov
scas
call
leave
daa
mov
add
fstpt
pop
add
pop
adc
sbb
out
sti
jns
dec
add
pop
add
add
add
shll
add
add
lahf
pop
jne
scas
dec
add
jecxz
out
pop
popf
lea
add
std
arpl
cwtl
inc
sbb
push
add
push
add
int
mov
outsl
add
data16
sbbb
add
and
icebp
in
mov
nop
addl
out
add
lods
lods
sbb
push
add
add
sbb
adc
or
xor
mov
sub
mov
add
cmpsb
jb
dec
pop
lcall
mov
arpl
add
add
add
in
add
mov
add
sub
and
jbe
int
icebp
pop
add
adc
add
mov
add
add
imul
sub
out
xchg
arpl
mov
cmp
das
cs
lds
add
fcoml
or
aaa
repz
out
mov
notb
pop
mov
xor
daa
jle
add
jo
mov
add
add
int
rclb
mov
cmp
xchg
sub
adc
out
leave
out
add
stc
jno
sub
add
in
fdivrl
sub
jg
adc
test
lcall
mov
pop
jno
jbe
sbb
inc
add
push
add
cld
aaa
mov
add
sahf
aaa
push
add
aas
les
add
inc
add
add
add
in
push
sbb
push
pop
add
cmp
ja
fcomps
add
and
add
mov
add
add
lock
adc
cmpb
out
cmp
movb
mov
add
mov
add
add
mov
test
add
push
add
sbb
icebp
outsb
add
into
sub
add
xlat
mov
std
bound
aam
das
mov
lret
mov
jne
add
scas
sti
dec
scas
in
mov
shll
add
or
cmpsl
jecxz
add
fstpt
dec
add
add
stos
and
mov
add
imull
fsubrs
add
xchg
add
loopne
mov
sub
outsb
add
lret
enter
add
jmp
add
mov
push
clc
dec
add
mov
sahf
push
add
add
add
inc
popf
adc
push
sub
gs
or
or
std
pop
add
xchg
aam
stc
jns
cmp
int
add
popf
cld
sbb
mov
imul
mov
test
or
sbb
jge
fimuls
adc
fdecstp
inc
xor
test
jb
or
jecxz
add
xchg
fnsetpm(287
mov
xor
add
push
add
cmp
idivb
mov
dec
add
xchg
in
aam
add
jmp
add
test
mov
add
add
loopne
add
cmp
fistpl
add
push
pop
ficomps
add
add
jae
clc
jb
lea
add
add
and
lock
dec
add
out
test
pusha
add
add
add
push
add
leave
xchg
les
mov
inc
pop
lahf
ss
das
jmp
and
mov
push
push
add
out
imul
adc
popa
push
mov
test
add
cli
cmp
adc
dec
add
mov
add
ljmp
add
icebp
ret
pop
xchg
pop
add
lods
out
mov
jl
mov
mov
xlat
cmp
push
add
xor
push
add
fisubrl
add
notb
addr16
cmc
mov
inc
outsb
add
add
cmp
sub
cli
repnz
add
xchg
push
add
add
iret
js
inc
xor
mov
in
add
add
dec
add
dec
add
sub
add
int
icebp
mov
hlt
int
add
mov
add
add
xor
and
mov
add
fwait
jno
add
adc
inc
add
lret
push
add
jbe
mov
mov
rcrb
imul
ljmp
test
sub
add
popa
cmc
in
cmpsb
nop
sbb
push
add
adc
inc
add
sahf
push
add
rorl
add
fs
test
pop
jo
pushf
mov
xchg
adc
inc
mov
add
imul
out
sub
push
add
add
pop
add
mov
test
mov
ret
push
add
scas
ficomps
mov
mov
add
lds
jb
jne
add
aam
mov
add
mov
mov
inc
add
mov
call
add
add
outsb
add
mov
or
sbb
add
lahf
hlt
sbb
cmp
mov
dec
clc
lret
lock
leave
data16
ljmp
fsub
push
add
adc
push
add
outsb
add
iret
jne
stos
test
mov
daa
and
pop
fwait
pop
pop
sbb
adc
jbe
mov
cmp
and
xchg
mov
add
cmp
repz
dec
cmp
int3
ds
sbb
arpl
lock
repnz
sahf
cltd
xchg
sahf
in
insb
add
add
add
jne
add
stc
adc
add
jo
adc
in
out
or
jge
add
mov
mov
cmp
jne
adcl
add
notl
lock
mov
sub
aad
pop
add
nop
outsb
add
jp
xor
or
push
add
add
popa
outsl
int3
cwtl
icebp
loope
xchg
mov
add
jno
add
loopne
add
push
pop
add
cmp
push
add
sub
insb
add
flds
cmp
out
add
daa
cmc
mov
add
add
dec
add
loopne
dec
test
add
jmp
add
popf
push
add
xchg
add
nop
daa
mov
sub
xchg
add
lcall
jbe
mov
iret
je
xor
xchg
addr16
arpl
mov
repnz
lret
or
daa
jp
adcl
mov
les
sub
out
stos
inc
add
fstpt
add
inc
add
subl
subl
scas
cmp
sub
lret
clc
dec
add
sarb
jbe
adc
stc
out
ja
cmc
sbb
test
inc
add
mov
fwait
sahf
sub
call
add
rcll
jmp
inc
cmp
and
mov
sbb
mov
inc
ret
adc
out
ret
mov
lcall
push
outsb
add
add
sbb
lret
add
add
into
inc
in
add
add
ljmp
arpl
out
sbb
out
xor
jnp
or
andb
dec
jge
push
fsts
leave
jp
scas
cmpsb
pop
add
add
ljmp
dec
add
mov
mov
mov
xchg
mov
dec
add
add
add
hlt
bound
daa
lcall
mov
js
test
add
add
test
sti
or
pop
add
add
dec
mov
out
lret
jl
xlat
fninit
int3
add
add
and
or
sbb
push
add
pop
add
add
add
xor
jns
pop
sahf
subl
pushf
ds
negl
add
popa
add
fdivs
negl
pop
icebp
jne
inc
fsubrl
add
addr16
add
xchg
cmp
lods
mov
add
xchg
xor
cmp
xchg
idivl
arpl
sub
repz
adc
adc
js
sbb
add
lahf
test
insl
fsubrl
testl
sub
das
or
adc
mov
add
add
bound
inc
add
sub
jno
xlat
imulb
test
dec
leave
mov
scas
adc
or
rorb
das
arpl
mov
jns
add
outsl
inc
add
add
stos
xor
add
jmp
add
dec
add
adc
push
add
pop
jp
or
lds
add
outsl
test
lcall
add
add
and
add
lds
add
push
add
and
mov
xchg
inc
jae
xor
mov
adc
cld
sbb
or
push
add
cmp
xchg
ret
mov
fldcw
add
in
fdivr
lods
push
int
add
and
add
rol
mov
add
inc
add
pop
add
das
test
lea
xchg
inc
add
pop
adc
cmp
sbb
and
insl
stc
sbb
jecxz
mov
add
mov
adc
add
jmp
add
add
add
add
add
je
repnz
mov
lahf
loope
lods
sbb
rorl
add
hlt
cli
mov
cmp
add
add
xchg
xchg
fcmove
jp
rorb
mov
jle
adc
jg
add
mov
add
and
mov
sub
mov
xor
add
push
add
pop
rcll
cmp
push
add
lahf
adc
add
adc
in
dec
mov
dec
cmpb
add
icebp
std
stos
add
add
pop
xchg
xchg
cmp
jno
add
add
add
jno
xchg
pop
repnz
add
test
or
inc
add
add
push
add
push
jmp
add
mov
dec
aam
jg
mov
xor
test
add
stc
outsl
imul
sbb
and
sub
push
add
sets
popa
cmp
cmp
cmp
fs
xor
or
sahf
test
add
mov
add
jns
add
add
addr16
imul
into
mov
pop
pop
push
add
mov
clc
je
cmpsl
mov
cmp
xchg
into
je
mov
add
cmp
jmp
mov
add
xchg
jbe
jle
dec
jle
push
add
fbld
notl
add
add
add
push
add
dec
add
xor
push
sbb
aas
clc
popa
fwait
insb
add
mov
dec
xchg
and
add
cmp
addr16
pop
fmull
add
xlat
xchg
xor
push
add
popf
dec
add
add
sahf
push
call
pusha
add
pop
adc
adc
add
fdivl
add
add
imul
inc
push
add
xchg
scas
xchg
mov
lcall
rcll
jno
mov
sahf
dec
add
mov
or
pop
add
leave
out
inc
xchg
mov
cmp
or
movsl
pop
test
fildll
fmull
add
jnp
add
fdivs
add
mov
fldl
add
xor
add
inc
sbb
add
sub
mov
add
jo
lret
push
imul
cli
mov
xchg
jecxz
push
add
stos
fcmovnu
je
scas
inc
push
add
sub
mov
and
insb
add
mov
rep
popf
mov
aam
iret
pop
sbb
out
add
add
mov
add
dec
ljmp
add
add
aas
push
jp
xchg
imul
add
and
and
add
lds
add
sub
outsb
add
popa
xchg
inc
add
fistpll
add
push
jno
add
add
jl
inc
add
lret
sub
icebp
scas
mov
in
daa
cli
jns
mov
add
loope
mov
scas
mov
add
pop
adc
ret
mov
pop
add
add
push
add
lods
sbb
xchg
test
into
lcall
outsb
add
ss
add
pop
add
incl
adc
cmovg
je
addr16
dec
inc
sub
mov
jl
sahf
out
dec
add
add
mov
adc
and
mov
add
dec
add
inc
add
add
adc
shrl
mov
lcall
dec
add
adc
js
inc
add
cltd
inc
add
inc
jno
add
data16
test
add
ret
les
add
push
add
cmpl
aam
sahf
aad
adc
lret
add
arpl
addr16
mov
add
add
mov
stc
fldcw
idiv
jge
push
add
je
bound
cmp
je
xchg
ss
ret
rorl
xor
jge
sub
pop
in
movsb
dec
jmp
xor
add
icebp
scas
or
or
inc
add
or
and
xchg
mov
add
into
pop
jbe
xchg
leave
pop
sti
aad
add
ljmp
mov
add
add
test
mov
dec
insl
xchg
fs
mov
add
iret
movsb
push
xor
loopne
jae
sub
jp
popf
mov
stos
loopne
or
out
or
add
in
bound
inc
add
enter
jl
notb
mov
enter
dec
pop
add
dec
adc
pushf
add
out
xchg
in
insl
lret
cmp
mov
rclb
rorl
hlt
xchg
mov
mov
sub
xor
mov
add
and
xchg
add
sbb
add
lock
outsb
add
jecxz
bound
add
dec
aaa
inc
xchg
cmp
adc
mov
outsl
test
add
cld
arpl
add
dec
add
ret
mov
loope
add
pop
xchg
xor
jl
out
add
add
and
nop
cli
push
add
faddl
adc
aam
enter
mov
push
add
add
jnp
adc
popf
xchg
scas
fisttps
out
and
push
mov
and
icebp
dec
add
mov
test
add
add
sbb
inc
pop
jns
add
dec
mov
sahf
xor
jl
div
dec
add
add
aad
outsb
add
andb
xchg
jl
aaa
adc
into
sbb
fisubs
out
shl
icebp
push
add
call
adc
test
add
and
iret
cld
mov
movsbl
jo
mov
pushf
mov
inc
add
sub
cltd
pop
orl
push
add
xlat
cmp
daa
xor
inc
add
lret
fadds
jns
mov
pusha
add
mov
sub
notl
push
add
mov
add
pop
add
push
imul
testl
add
pop
fiadds
adc
push
add
imul
add
mov
icebp
inc
add
adc
cmp
dec
add
cmp
mov
add
subl
data16
int3
pop
aaa
sbb
mov
fildl
dec
push
add
xchg
dec
add
stos
cmp
push
add
addr16
push
add
fsubrl
add
or
imul
add
pop
scas
insl
inc
stos
mov
and
mov
rclb
andb
popf
cwtl
ret
fisttpl
xchg
mov
aam
xor
cmpsl
or
add
mov
add
mov
ficompl
xor
dec
add
sub
inc
rclb
add
push
add
jecxz
mov
imul
mov
mov
and
sub
jbe
aas
push
fidivrs
add
cmp
cmpl
add
pop
add
add
add
movb
xchg
fwait
bnd
movsb
addl
orl
or
popa
lods
mov
std
stos
mov
cs
repnz
xor
insl
test
in
add
and
add
add
dec
data16
pop
add
adc
lret
fisubl
add
mov
mov
jle
mulb
lods
in
add
aaa
cmpsl
cmp
and
cmp
jp
or
lret
fcomi
addr16
mov
add
xor
mov
sbb
xchg
stos
in
test
int3
cmp
push
pusha
add
xchg
mov
push
add
jbe
pop
pop
add
mov
das
orb
mov
mov
out
cli
push
add
jle
out
pusha
add
and
xchg
add
mov
cld
clc
lods
lods
inc
add
mov
add
neg
push
in
dec
mov
push
out
push
add
pop
add
fwait
jmp
addr16
lods
repnz
dec
xchg
jno
add
xchg
cld
lods
dec
add
add
mov
jmp
pop
push
add
push
push
add
cmp
in
leave
scas
orl
pop
add
loopne
lret
popa
cltd
push
add
add
add
out
fcmove
mov
add
add
xchg
mov
stos
pop
outsb
add
jg
and
lahf
iret
ret
push
add
jge
repz
rorb
add
mov
outsb
add
jl
inc
dec
mov
cmp
and
push
add
loope
or
dec
xchg
inc
add
push
int3
mov
add
enter
repnz
mov
cmp
cltd
mov
add
lahf
cmpsb
outsl
icebp
xchg
add
add
clc
dec
ret
adc
pop
movsb
sbb
add
sbb
add
add
pop
cli
xchg
add
mov
or
jb
jmp
sbbb
lea
roll
add
xor
jns
add
mov
clc
pop
adc
cmp
adc
push
add
mov
cmpsb
xchg
daa
lods
ljmp
mov
pop
add
inc
outsl
leave
lcall
cmpsl
mov
add
mov
loopne
xchg
mov
add
or
mov
mov
xor
xor
arpl
pushf
cmpsl
or
pop
movsb
dec
mov
and
pop
int3
fisubrs
movsb
enter
mov
inc
pop
push
add
insb
add
push
add
add
out
popf
sbb
mov
hlt
data16
leave
xchg
xchg
jge
push
add
pop
iret
aam
pusha
add
sub
mov
add
pop
rorl
pop
add
jne
dec
add
jmp
cmp
leave
cld
out
mov
jne
add
ror
data16
adc
add
add
inc
add
or
jns
add
push
dec
sbb
mov
sub
inc
add
lret
add
cmp
mov
test
test
add
inc
add
add
pop
add
pop
add
add
add
rclb
jle
lods
mov
add
xchg
mov
add
rorl
std
xlat
adc
xchg
add
cld
pushf
dec
iret
std
push
mov
add
sub
cmp
xchg
lcall
xor
sar
adc
and
ret
sub
lea
add
xchg
movsl
add
clc
lret
xor
gs
clc
outsb
add
cwtl
push
dec
dec
add
clc
xchg
xor
xchg
sbb
cmc
out
insl
mov
or
add
add
add
repnz
jb
lods
jns
ja
add
data16
mov
out
repnz
into
arpl
addr16
add
ljmp
in
aad
add
ret
cmp
push
sarb
jmp
and
xor
pushf
icebp
loop
add
pop
add
inc
add
sbb
mov
add
xor
inc
add
adc
or
hlt
cmp
test
jecxz
pop
loope
add
insb
add
add
hlt
mov
xchg
or
add
bound
jge
jmp
stc
inc
add
data16
movsl
mov
adc
mov
fwait
aas
vmread
popa
lahf
push
ficomps
push
pop
adc
sub
int
add
mov
xchg
ficoms
arpl
test
pop
adc
mov
repnz
cld
stos
sarb
add
mov
jno
push
add
add
xor
sbb
aas
into
push
fmul
adc
outsl
cltd
add
fisttps
dec
add
aas
hlt
dec
or
jmp
sbb
add
int
dec
mov
add
fsubrs
pop
jle
push
mov
cmp
sub
in
sub
outsl
add
rol
call
hlt
xchg
jbe
fwait
lret
dec
arpl
fistps
pop
roll
add
fistpll
imul
push
add
add
imulb
mov
jbe
cmpsl
xchg
leave
and
add
popa
xchg
sub
orb
lods
imul
ret
imul
push
sbb
jae
out
jns
add
dec
add
jbe
or
pop
or
add
add
mov
add
or
xor
dec
add
add
inc
add
mov
out
cmpsb
add
mov
rclb
fsubr
add
lock
nop
push
pop
push
add
add
add
aas
bound
push
loop
mov
mov
xor
fucomi
inc
add
jp
cli
repnz
add
aaa
mov
add
add
xchg
jno
pop
add
inc
xchg
add
xchg
stos
loopne
push
subb
or
sbb
xor
xchg
dec
add
repz
adc
add
imul
sub
out
add
add
add
pop
cmp
dec
add
popa
lods
jbe
push
fisubs
pop
cmpsl
and
mov
add
sub
jl
daa
sahf
fs
inc
pop
add
add
jmp
mov
push
add
mov
and
add
add
dec
int
jg
cmp
and
add
fdivs
jl
push
lock
pop
js
shl
fstpl
ret
jnp
jo
or
in
push
test
add
add
mov
push
ret
cmp
sbb
pop
add
fnstenv
sbb
pop
pop
adc
adc
arpl
jo
int
data16
adcl
movsl
xor
cli
cmp
add
test
dec
add
in
add
mov
insb
add
jo
mov
popa
sbb
xlat
mov
push
cmp
jmp
add
mov
cmpsl
mov
push
add
add
dec
dec
add
xchg
mov
add
mov
add
popa
mov
add
jne
leave
inc
add
iret
mov
add
add
mov
add
dec
pop
dec
add
sub
lods
in
fisubl
cmp
int3
outsb
add
add
sub
cwtl
call
mov
add
add
pop
add
cmp
sbb
inc
add
iret
mov
add
push
add
rcl
repz
or
ret
lcall
fbstp
sub
and
pushf
mov
dec
add
cmpsb
xor
xchg
xchg
mov
lahf
push
add
inc
add
jp
mov
add
sub
or
pop
push
pop
add
sub
jno
mov
xchg
sarb
add
popa
cmp
cmpsl
mov
cld
add
xor
cmp
adc
pop
add
icebp
rcr
lods
or
pop
sub
mov
sub
out
enter
pop
aad
ljmp
adc
add
add
and
push
add
add
mov
xchg
cld
xlat
lds
nop
out
int
inc
mov
stc
jne
add
pop
add
popf
in
into
xchg
repz
popa
jle
leave
insb
add
mov
and
mov
popf
movsl
fiaddl
mov
inc
add
jge
andl
add
mov
add
mov
and
pop
add
adc
enter
inc
add
jne
dec
add
add
add
xchg
xor
in
add
aad
insl
in
repnz
add
add
xor
xchg
jge
loope
dec
add
add
aas
pushf
sbbl
add
add
pushf
dec
int3
cmp
aaa
pop
sarl
xchg
mov
add
mov
and
testl
xchg
roll
push
add
add
add
data16
add
test
add
out
xchg
mov
adc
lret
fwait
mov
add
xor
rclb
bound
lret
mov
mov
aam
mov
push
adc
rcrl
sub
lret
cmp
xor
loope
loopne
mov
mov
add
xchg
imul
add
aas
arpl
add
lcall
ficoms
mov
sarb
add
popf
sbb
pop
and
mov
in
add
dec
add
add
popa
test
add
lcall
mov
pop
call
add
push
add
add
mov
jnp
fdivrs
fadds
add
inc
add
push
add
add
add
add
ljmp
bound
cmpsb
jb
enter
pop
inc
xchg
add
jmp
mov
rcr
or
mov
fildll
loope
add
add
scas
int
add
jbe
fisttpll
add
xchg
mov
add
and
test
jmp
and
or
xor
ret
push
add
ffree
or
ret
ret
inc
pop
add
mov
add
adc
movsl
cmpsl
mov
hlt
aam
hlt
dec
xchg
pop
add
cmpsb
fcompl
mov
xchg
popf
loope
add
ret
add
push
add
and
add
iret
testl
pop
xor
inc
pop
xorl
cmp
sbb
ss
add
jecxz
out
jl
sahf
fdivrl
mov
xor
repnz
popa
fsubs
dec
shlb
mov
xor
xchg
push
pop
cwtl
lea
mov
adc
pop
inc
and
rcr
sbb
inc
add
and
outsl
in
add
lret
mov
or
cmpsb
xor
cwtl
xchg
inc
adc
sahf
insb
add
push
pop
stos
sub
add
ud1
sarb
add
xor
lcall
inc
nop
int
add
adc
rcrb
push
add
ljmp
mov
icebp
lret
add
call
outsb
add
add
cmp
in
sub
scas
lcall
pop
add
cmp
adc
cmpsl
and
push
les
add
add
mov
add
add
add
sub
and
test
jge
sahf
ret
mov
jge
pop
add
or
sub
inc
push
add
mov
add
adc
ds
mov
xchg
xchg
mov
mov
push
add
pop
repz
cmp
add
pop
push
add
in
xchg
add
mov
call
inc
add
scas
insb
add
jbe
lock
inc
add
push
add
add
adc
adc
pop
loope
sub
scas
mov
mov
cmpsb
mov
inc
cmpsb
cmpsl
insb
add
cmp
mov
rolb
lahf
iret
mov
pushf
enter
add
inc
sbb
add
push
add
add
mov
cmpsl
mov
add
inc
add
xchg
gs
add
cli
popf
jbe
jp
dec
add
rcrb
or
icebp
fsubrl
mov
loopne
jge
add
xor
popa
es
jmp
xchg
cmpl
loop
add
add
push
add
add
insb
add
add
lahf
loope
dec
add
sti
test
inc
and
psubsw
aas
test
lret
imul
les
jge
mov
cmp
sarb
add
add
or
sub
inc
pop
add
hlt
pop
in
add
adc
in
lods
inc
jo
xchg
add
insl
loope
sub
dec
adc
jecxz
paddb
fisttps
jmp
ret
add
add
cmp
cmpsl
imul
add
and
stos
push
add
push
add
cwtl
in
outsb
add
xchg
mov
cmp
push
adc
cmp
incl
add
je
repz
adc
xchg
dec
add
sub
data16
add
sub
lock
repz
pop
daa
hlt
pushf
in
push
mov
ja
sbb
pushf
inc
add
outsl
out
outsb
add
pop
and
push
cmp
jge
xor
and
dec
add
add
add
mov
mov
mov
movb
pop
cmpsl
mov
es
imul
and
clc
sub
add
test
add
jecxz
add
add
jbe
cmp
add
leave
jbe
lahf
out
sbb
stc
and
insl
sub
mov
xchg
ljmp
out
add
push
add
add
add
sub
gs
ja
int3
add
call
movsb
add
add
insl
fbstp
add
pop
add
sti
pmaddwd
rcl
out
mov
mov
add
rorb
mov
jno
inc
add
insl
jge
orl
add
lret
lahf
lcall
mov
sbb
in
outsb
add
inc
sarl
sub
push
sub
dec
add
add
stos
xchg
sti
out
add
add
or
sub
gs
sbb
fcmovbe
pop
into
inc
dec
add
lret
push
pop
add
inc
lret
xchg
push
push
add
add
jp
pop
add
aas
xchg
sbb
cmc
insb
add
inc
mov
fstl
std
cmp
rcrl
sarl
pop
add
lret
xchg
xchg
stos
popa
loop
add
add
mov
add
popf
sub
pop
add
daa
jb
xor
outsl
rcrl
xchg
std
mov
sub
cmc
jge
cmp
enter
ds
ljmp
add
and
clc
loop
jbe
lahf
shll
add
loope
xchg
cmp
mov
add
int
jecxz
in
daa
int3
mov
add
pop
add
lods
inc
add
add
fidivs
add
xchg
add
pop
lret
decl
cld
inc
pop
lcall
jmp
dec
xchg
add
pop
add
jns
add
imul
ret
jb
cmpsl
push
add
sbb
add
add
pop
push
add
data16
jl
int
idivl
add
inc
add
add
add
jmp
std
lahf
data16
push
add
add
mov
or
sub
mov
sub
and
or
sahf
in
pop
aad
jns
add
aam
push
add
push
add
pop
add
loop
loope
add
add
jecxz
add
xchg
sbb
add
adc
mov
add
mov
xor
add
cwtl
jb
ficoml
mov
push
add
lock
out
push
and
shrl
add
aad
pop
jno
add
das
mov
pop
data16
pop
add
add
add
add
add
out
add
movsl
xchg
sub
sbb
sub
movsl
mov
mov
adc
xchg
mov
add
add
mov
add
lods
mov
mov
add
ret
add
jns
add
lret
add
outsb
add
add
push
test
stos
mov
bound
and
lret
shrl
js
dec
jl
vpmacsdql
add
or
pop
xchg
popa
mov
call
xchg
add
mov
mov
cld
out
xor
mov
mov
pop
mov
adc
int3
call
inc
add
add
into
add
test
pusha
add
iret
stos
into
mov
add
add
cltd
stos
lret
mov
aam
sub
loop
push
add
add
das
cmpl
jge
jl
mov
add
in
loopne
sub
pop
add
add
add
inc
cmp
sbb
lea
inc
imul
test
pop
add
add
cld
ret
lret
pop
add
add
in
xchg
lock
ret
sub
and
add
add
sub
in
fscale
clc
pop
add
out
fs
imul
leave
inc
add
add
int
add
cmp
addb
mov
mov
add
test
movsb
test
scas
add
pop
add
lret
das
inc
xor
aam
cmp
sub
cmp
xchg
scas
mov
mov
mov
flds
repnz
add
pop
xchg
out
add
lea
out
bound
lcall
bound
imul
add
orl
aas
cmp
add
add
add
push
add
add
ficoml
add
arpl
daa
xchg
pop
lea
add
adc
out
rcll
lea
adcl
jnp
mov
add
add
cmp
inc
add
sti
sbb
adc
inc
add
sbb
lahf
roll
add
dec
imulb
push
add
add
add
mov
push
fwait
imul
sti
xor
xchg
cmp
add
sbb
cmpsb
call
cmpsl
jbe
lcall
push
repz
mov
inc
outsb
add
cli
imul
fidivl
add
js
xchg
int3
inc
jle
add
aad
leave
add
fdivrp
dec
add
jmp
add
add
xchg
loopne
add
cmc
dec
lods
sbb
xchg
jnp
lret
sbb
das
jne
stos
mov
add
mov
popf
adc
add
add
sub
addr16
fdivrp
lea
cmp
add
test
add
add
or
add
mov
in
stc
scas
push
insb
add
dec
mov
shrl
add
in
hlt
xchg
mov
outsb
add
and
inc
bound
jg
adc
pop
iret
jne
fsub
mov
pop
add
add
mov
test
aad
add
jns
add
add
add
test
xor
adc
mov
add
xchg
pop
add
cli
jmp
add
mov
add
add
jecxz
inc
push
add
xchg
loopne
add
lea
add
jge
int3
and
xorl
mov
add
outsb
add
cmp
aas
adc
mov
aaa
cmc
xor
andb
mov
mov
add
pushf
pop
xor
cld
shrb
add
inc
mov
aam
iret
and
aas
cltd
dec
add
cmp
pop
add
rclb
cwtl
leave
dec
sbb
and
pusha
add
add
adc
push
add
lahf
fwait
sbb
add
sbb
mov
and
mov
ljmp
add
add
push
dec
add
in
pop
add
add
call
icebp
mov
jge
mov
sbb
add
cmovno
jo
mov
jl
mov
in
test
cltd
sub
jmp
mov
mov
inc
jp
mov
inc
jp
aam
add
adc
ficoms
mov
jle
push
mov
call
jl
fldenv
loop
lahf
push
mov
stos
inc
add
lds
jp
push
add
mov
xor
add
sub
nop
scas
pop
add
movb
jmp
dec
add
ss
mov
popf
pop
add
sbb
imul
xchg
test
ljmp
add
mov
das
inc
add
ficompl
add
and
add
add
into
int
nop
mov
inc
add
add
cli
mov
repnz
add
push
add
adc
add
sar
lods
mov
pop
add
add
mov
mov
lock
add
andb
cmp
ret
sub
imul
add
cmc
mov
imul
rorb
and
scas
push
mov
jb
add
add
add
cmp
mov
movsb
or
mov
jo
scas
xor
xor
or
add
test
ret
arpl
std
jns
enter
stos
add
daa
fchs
call
mov
lcall
dec
pop
jmp
add
adc
add
add
lea
lcall
hlt
mov
mov
xorl
jo
in
add
call
add
jecxz
mov
test
mov
add
shrl
add
sbb
pop
pushf
mov
mov
jbe
pop
mov
cwtl
repz
push
add
jmp
pushl
add
popf
cld
inc
add
xor
add
and
mov
xor
push
add
add
inc
data16
fnstenv
push
cmp
out
add
outsl
mov
add
lahf
push
movsb
cmc
sahf
fucomi
mov
add
dec
mov
add
push
cmp
in
int3
dec
enter
jae
cmp
add
int3
test
add
mov
aad
cs
fbld
in
add
add
pop
add
add
xor
dec
loope
add
loop
gs
cmp
jne
and
fstl
sbb
loope
mov
jb
adc
repz
sbb
xchg
pop
mov
test
daa
lret
add
sub
add
add
pop
xlat
imul
hlt
fimull
cmpb
inc
add
rcr
cmp
pushf
mov
sbb
or
inc
add
lods
add
add
rcrl
mov
aaa
sub
nop
xor
sub
stc
dec
add
push
pop
dec
mov
cmc
aas
mov
insb
add
sar
inc
mov
add
add
test
xchg
pushf
movsl
fmul
fbstp
add
adc
pop
jge
js
popa
mov
fisttpl
add
push
add
add
lods
ljmp
push
add
movsl
pop
adc
push
add
pop
mov
fsts
inc
cld
add
sarl
add
shrb
cmp
cmp
out
cmp
cmc
inc
add
fsubs
and
cmp
adc
add
add
fwait
inc
fistps
stc
jge
xchg
jmp
mov
add
push
add
aaa
pop
std
in
cwtl
in
cmp
pop
inc
cltd
pop
or
out
scas
and
mov
add
sbb
and
mov
insb
add
xchg
add
jle
fcmovne
cmp
pop
add
add
imul
add
jne
add
lock
xchg
lret
nop
mov
movsl
das
jl
mov
cmp
jmp
pop
test
and
sub
sub
mov
dec
cmp
xchg
lods
and
adc
add
add
call
xorb
add
jo
jg
pop
add
sbbl
add
lret
in
int
cli
cmpsb
cmp
adc
jp
pop
sar
adc
decb
add
jle
or
or
and
or
push
add
add
adc
xor
pop
add
les
mov
push
test
add
mov
mov
fisubs
xor
add
stc
je
enter
cmp
insl
pop
xor
xchg
inc
add
or
cwtl
lea
mov
add
sub
inc
add
add
jle
lods
add
mov
pushf
xor
xchg
mov
xchg
add
loop
add
add
inc
add
add
add
mov
stos
and
je
inc
or
icebp
cmp
adc
in
jecxz
add
aas
xor
test
add
mov
loopne
jbe
jmp
add
mov
add
cmp
add
pushf
jle
mov
add
add
push
add
add
pushf
inc
add
lods
test
add
cld
cmpsl
insl
sub
push
mov
lret
popa
clc
and
add
xor
test
sub
add
sub
xor
gs
xchg
pop
aaa
rclb
frstor
fnstsw
in
and
add
scas
add
in
sub
mov
mov
je
inc
leave
scas
fdivrl
repnz
loopne
daa
in
inc
sbb
add
call
jae
fmull
pop
add
pop
add
push
add
xor
sub
adc
sub
scas
iret
fwait
bound
int
loope
add
push
add
add
push
add
sub
mov
lcall
add
les
mov
int
cld
test
fimuls
adc
nop
mov
decb
jns
add
stc
mov
sub
dec
add
sbb
arpl
bound
nop
jge
std
mov
cmp
mov
add
jnp
push
jmp
xor
add
dec
add
addr16
xchg
or
add
fcoml
and
dec
in
and
popa
jbe
mov
push
add
and
push
add
lds
xlat
and
jl
ret
add
or
lods
add
into
push
xchg
repz
add
add
shrl
jb
mov
add
inc
add
pushf
mov
push
add
or
and
icebp
pop
add
mov
add
out
rcr
cmp
inc
push
cmc
push
add
das
icebp
or
daa
out
out
add
nop
clc
sbb
mov
lahf
enter
add
fists
out
cmp
xor
mov
jg
add
push
out
sbbl
addb
add
jge
adc
sub
shl
jb
dec
add
and
mov
and
mov
ret
or
add
in
mov
jne
add
or
jne
xorl
fistpll
add
outsb
add
mov
add
mov
add
add
xor
loopne
add
loopne
fldt
sbb
add
repz
out
add
add
mov
inc
sahf
arpl
inc
add
nop
jne
dec
add
and
dec
fldt
add
adc
xor
add
mov
adc
lock
dec
add
or
test
or
add
js
or
sub
xchg
jbe
mov
hlt
add
jns
add
fadds
xor
push
add
in
insl
push
pop
outsb
add
add
or
add
addb
add
xor
test
adc
xchg
xor
sarl
add
mov
movsb
fsts
or
xchg
mov
fucomp
fidivl
pushl
add
adc
mov
add
mov
lcall
mov
add
daa
daa
jne
add
add
add
mov
jns
jb
dec
add
mov
add
add
cmc
in
push
dec
add
bound
adc
mov
cli
das
int3
mov
sub
cmp
push
add
aam
aas
stos
fimull
lahf
shlb
add
add
add
jo
lods
ret
xor
mov
mov
jno
popf
xor
pop
add
add
push
add
add
jl
loop
add
add
add
mov
add
data16
cmp
mov
add
mov
jbe
inc
add
add
ret
pop
sbb
add
outsb
add
add
psrld
add
mov
add
pop
test
pop
sbb
add
jecxz
pop
daa
ja
inc
add
daa
leave
in
jmp
add
or
jno
add
add
add
add
into
adc
fmull
cmpb
xchg
xchg
mull
add
pusha
add
and
pop
lea
add
incl
or
mov
arpl
jo
icebp
lods
xchg
xor
mov
mov
add
add
cli
pop
mov
dec
add
rcrb
les
add
add
out
data16
dec
add
ret
int3
and
add
add
in
mov
fldt
dec
add
out
out
push
add
cmp
sbb
inc
outsl
out
pop
add
fwait
dec
pop
add
jns
inc
add
in
cmp
xlat
popf
and
add
xchg
call
lcall
or
push
add
rolb
scas
or
in
mov
rorb
add
sub
add
mov
add
fisubrs
mov
or
push
fidivrs
sar
xchg
jmp
add
and
push
jle
gs
add
jns
inc
add
add
jne
pop
add
insb
add
jo
bnd
add
xchg
mov
push
jle
test
add
jb
pop
add
rclb
xchg
adc
jae
std
mov
pop
bound
out
popa
test
mov
add
ja
leave
mov
and
iret
leave
es
pop
add
ljmp
add
add
enter
lods
mov
jne
nop
jle
dec
lahf
dec
and
xchg
add
mov
daa
dec
xchg
xor
std
mov
cmpsb
mov
in
push
dec
jb
add
lret
add
add
cwtl
sar
push
add
sbb
lea
adc
dec
add
add
jmp
add
fstpt
fisttpll
icebp
dec
jns
ret
sbb
cmp
push
add
icebp
inc
loopne
popf
out
mov
add
add
jns
mov
cltd
imul
lea
das
adc
mov
stos
push
mov
push
add
insl
mov
or
test
add
add
outsb
add
sbb
aaa
dec
push
add
xlat
xor
and
add
mov
push
sbb
add
arpl
add
push
add
sub
adc
pop
add
mov
cmpsl
mov
add
pop
add
lods
mov
dec
add
push
add
add
pop
add
add
ljmp
inc
sarl
add
add
xchg
jge
pop
shlb
pop
add
mov
inc
add
add
push
ja
add
add
add
xchg
push
mov
outsl
stos
add
arpl
sarb
dec
add
add
add
out
lret
cmp
mov
fadds
aad
dec
add
insb
add
pop
add
add
add
cmp
sub
popa
arpl
sub
push
add
pop
mov
mov
gs
andl
add
add
lods
mov
add
dec
and
repnz
aam
add
push
add
subb
scas
jmp
clc
push
mov
movsb
add
jl
jne
in
ret
adc
or
jmp
subl
rcr
push
add
dec
rorl
xor
add
add
jmp
sub
pop
jns
xchg
test
inc
and
xchg
add
pop
sbb
add
sub
addr16
mov
cmp
mov
inc
hlt
iret
sbb
sbb
cs
xchg
mov
in
jg
or
pop
xchg
fldcw
mov
fbld
sub
pusha
add
fcomp
and
push
add
sub
stc
gs
les
sbb
xchg
add
add
add
add
lock
add
add
add
inc
rolb
add
sub
dec
add
dec
into
add
jmp
lods
gs
inc
cwtl
jle
mov
div
lret
pop
sbb
outsl
mov
add
pop
insl
int3
dec
xor
add
mov
ss
add
pop
and
add
jle
cmp
pop
add
add
add
scas
jns
subl
dec
fisubrs
sbb
lea
dec
add
or
mov
add
add
add
add
add
push
add
pop
add
outsl
inc
stc
jo
inc
xchg
add
loopne
mov
sub
add
cmp
in
sub
add
mov
add
add
adc
add
mov
pop
das
cmp
mov
add
mov
jmp
mov
ljmp
pop
popf
aaa
js
rcrb
add
int
add
fsts
mov
stc
xor
xor
add
imul
fists
add
sbb
inc
add
fcmovnbe
ficoml
pushf
jo
inc
add
pop
outsb
add
add
add
pop
add
xorl
sbb
add
add
xchg
movsl
or
lahf
mov
sub
mov
or
add
aad
add
add
mov
add
adc
ret
lahf
push
add
add
jg
or
int3
mov
add
cltd
and
mov
inc
dec
add
add
push
add
stc
int3
push
add
add
add
add
pop
pop
mov
add
outsb
add
add
inc
add
mov
add
add
sbb
add
cld
push
add
dec
out
push
add
ja
mov
add
loopne
add
xor
rcl
mov
add
mov
add
cltd
pop
data16
dec
scas
xor
rorl
add
mov
add
rcll
or
test
mov
sbb
add
push
pop
pop
inc
add
add
add
mov
add
movsb
sahf
pop
jae
add
outsl
bound
lret
lods
js
jne
add
xor
mov
lcall
xchg
js
ret
add
call
add
ret
mov
shrl
addr16
cwtl
shld
rorl
cmpsb
sahf
enter
rorb
or
into
pop
jge
addr16
test
mov
xor
add
je
imul
loope
sbb
add
jbe
mov
jmp
cmc
add
mov
xchg
mov
add
lcall
roll
add
int3
add
fcomip
pushf
xchg
jecxz
add
pop
adc
push
add
cmp
add
add
add
cmpsl
jge
lcall
push
add
add
add
xchg
mov
xor
xlat
dec
les
push
add
in
dec
add
ja
push
add
clc
sub
push
popa
mov
jl
and
jns
shrb
inc
sarl
add
add
ret
cmp
xchg
pop
sub
mov
inc
add
add
xor
jl
fdivr
les
popf
cli
sub
notb
add
add
rorb
mov
add
inc
lds
pop
dec
add
jnp
cli
or
insb
add
push
dec
add
cmp
out
xchg
jle
sahf
xchg
sbb
add
add
scas
add
loope
enter
add
stos
jge
add
inc
lret
imul
sbb
add
pop
add
dec
fwait
pop
outsl
mov
enter
call
clc
repnz
repz
ret
mov
add
add
add
ret
iret
jae
push
add
gs
add
lds
mov
mov
out
scas
push
add
aam
add
cld
daa
push
rcrl
cmp
mov
push
xchg
adc
push
push
addr16
lret
test
or
mov
sub
imul
add
xor
sahf
sbb
lods
idivb
add
adc
dec
cmpsl
xor
and
adc
add
xor
fldt
add
inc
add
lea
test
lret
dec
add
add
repnz
add
in
sti
xlat
sub
jae
loopne
inc
add
xor
sbb
aam
add
add
xor
add
add
add
in
scas
add
test
add
lea
add
pop
mov
stc
jecxz
dec
add
add
sub
mov
push
cmp
sbb
lods
pop
add
sbb
inc
add
add
add
cli
mov
xchg
scas
xchg
jo
scas
dec
fadds
out
outsl
rcl
sar
cli
mov
add
popf
dec
sub
mov
scas
jmp
xchg
xchg
iret
or
in
jl
pop
add
add
add
aam
cmp
scas
fistpll
xchg
cli
add
fbld
add
inc
add
or
add
pop
add
lcall
leave
and
and
popf
cmpsb
adc
sub
out
jmp
cmp
add
add
test
movsl
add
xor
mov
xor
iret
lret
pusha
add
dec
add
mov
dec
add
mov
adc
mov
lcall
mov
pop
jg
or
popf
mov
aas
pop
mov
ret
pop
add
add
push
shlb
xchg
jo
cs
add
dec
add
imul
add
push
or
test
add
ljmp
add
cmp
movsb
mov
dec
add
add
inc
aad
ret
jo
ret
add
in
adc
and
add
add
add
or
sub
pop
cmp
xor
call
inc
add
outsb
add
jo
iret
xor
or
stos
pop
mov
dec
in
ja
addr16
stc
fs
fsubr
repnz
in
sbb
add
add
pop
in
add
repz
cs
xchg
push
pop
add
loope
js
stos
inc
add
sar
inc
sbb
daa
test
sbb
insb
add
mov
cmp
aaa
rorl
add
or
add
xor
inc
add
je
lcall
mov
jmp
divps
insl
jnp
add
call
in
push
cwtl
mov
shrl
mov
daa
cmc
fbld
add
scas
adc
popa
or
inc
repnz
cld
stos
adc
mov
sub
arpl
jl
rcrb
add
adc
mov
rorb
clc
ror
aaa
inc
add
add
or
dec
add
jle
insb
add
xchg
pop
adc
popf
and
add
subl
popa
jns
adcl
outsb
add
pushf
nop
dec
add
dec
mov
std
in
int3
push
add
paddd
lock
or
test
jb
xor
pop
stos
mov
jl
push
jp
push
or
gs
add
add
cmc
insl
paddw
aad
daa
aad
cmp
cmpl
imul
adc
fsubrs
or
add
mov
add
add
cltd
add
add
sbb
mov
jp
hlt
into
int3
and
dec
add
push
add
negl
push
and
lock
and
jb
push
add
xor
je
xchg
xchg
cmpsl
shlb
aad
add
sti
sbbb
add
mov
add
mov
mov
add
dec
add
pop
jne
xchg
test
or
jle
loope
pop
add
inc
add
mov
add
jno
push
add
add
push
fistl
and
lds
add
sub
imul
aas
push
add
sub
sub
sub
test
add
rcrb
cwtl
dec
aad
dec
jecxz
add
or
or
add
lock
add
sbb
cmp
dec
test
cmc
cwtl
lahf
push
repnz
sbb
aad
add
dec
add
inc
add
mov
test
leave
add
jo
adc
xchg
dec
add
pop
in
rcrl
jmp
inc
xchg
leave
push
xchg
mov
push
shll
out
pop
xchg
jl
adc
fdivs
push
add
push
mov
adcb
lcall
icebp
neg
imul
scas
stos
sbbl
push
add
lods
cmp
or
scas
jae
dec
aas
mov
push
pop
fisttpll
inc
add
jne
jmp
fsub
in
dec
add
inc
add
aam
jb
mov
add
js
icebp
push
add
mov
add
xor
and
and
insb
add
adc
mov
mov
or
mov
out
enter
inc
jmp
push
stc
cwtl
sub
sub
push
xchg
repnz
mov
add
add
dec
and
xchg
dec
add
insl
daa
aas
lea
aaa
sbb
jns
add
test
add
add
leave
subb
add
mov
add
insb
add
mov
jb
lods
loop
pop
das
cli
xor
icebp
lods
sub
daa
sbb
inc
add
xchg
cmp
add
push
fdivrs
add
adc
add
inc
add
push
dec
or
fiadds
inc
add
xchg
pop
pop
faddl
enter
add
add
ja
add
pop
add
xor
je
dec
add
add
imull
in
mov
xchg
add
push
addl
cmc
cmp
ja
add
mov
jp
dec
add
movsb
mov
add
out
push
add
xchg
test
add
mov
cmp
mov
lds
push
push
repnz
add
iret
xor
aas
bound
outsl
insb
add
sarl
add
mov
fsubrl
jnp
test
aas
mov
cwtl
xor
dec
les
stc
jnp
insb
add
add
push
xchg
xchg
add
push
add
mov
dec
push
mov
add
add
cmp
leave
or
iret
mov
lcall
loopne
pop
push
add
add
xchg
mov
stc
filds
add
mull
add
push
add
pop
hlt
test
dec
jbe
pop
add
daa
aam
add
std
pusha
add
add
inc
push
add
xor
cs
out
int
vorpd
inc
add
add
xlat
sub
sbb
mov
addps
dec
add
push
add
add
dec
pop
add
mov
out
push
add
sub
addr16
dec
add
add
stc
mov
inc
add
inc
sbb
mov
or
ret
push
add
jae
or
add
cmp
leave
adcl
sbb
add
add
scas
dec
add
add
mov
out
testl
popf
andl
lret
hlt
sbbl
cmp
xchg
sub
mov
cli
nop
dec
mov
dec
add
inc
add
or
std
nop
xchg
cltd
cmp
add
es
cmp
imul
out
mov
repnz
sbb
js
aad
add
scas
inc
sub
add
mov
add
mov
stos
iret
mov
add
