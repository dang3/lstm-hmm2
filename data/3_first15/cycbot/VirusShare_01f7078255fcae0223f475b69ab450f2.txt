sub
and
sub
leave
add
test
mov
add
sub
imul
imul
mov
loopne
inc
test
int3
fs
int
add
movsb
int
ror
or
add
and
dec
subb
or
mov
andb
add
sub
sub
add
imul
and
leave
movsl
mov
in
in
imul
loope
push
dec
add
add
sub
or
inc
add
add
test
popa
or
dec
leave
add
in
or
mov
add
popa
add
pusha
sub
or
mov
test
test
imul
and
loopne
and
addb
test
insl
or
and
inc
insb
mov
les
roll
dec
insl
and
shr
imul
lea
mov
add
insb
orl
add
loopne
add
call
loope
dec
int
add
enter
in
and
subl
add
loopne
lea
add
fs
add
add
or
and
loopne
sub
lods
add
add
fs
dec
add
add
les
mov
movsl
test
test
add
dec
leave
and
in
jmp
add
sub
popa
in
rolb
test
in
dec
dec
enter
shl
movsl
test
and
sub
fs
sub
add
add
and
imul
push
movsl
mov
and
and
and
test
test
add
roll
insb
lods
in
int3
add
shll
int
in
insb
orb
mov
inc
or
call
inc
sub
int3
add
or
shrl
dec
and
mov
or
insl
movsb
leave
sub
lods
leave
add
add
mov
inc
sub
inc
mov
mov
mov
insl
call
test
dec
sub
add
add
enter
fs
int
or
add
in
popa
test
and
mov
enter
in
movsb
dec
add
mov
mov
and
sub
add
sub
inc
addl
in
andb
leave
addl
test
enter
int
in
mov
inc
or
sub
sub
loope
rolb
insb
loopne
lods
in
inc
call
shll
lods
sub
or
movsl
inc
and
movsb
or
add
movsb
mov
inc
or
or
call
push
add
dec
insb
leave
add
and
mov
insb
enter
loopne
add
jmp
inc
sub
test
mov
and
lods
in
call
dec
pusha
lea
dec
int3
addb
mov
popa
inc
in
test
mov
in
loopne
fs
sub
in
mov
add
movsb
dec
inc
add
loope
in
inc
test
insb
sub
movsl
lds
dec
add
or
add
sub
add
and
rorl
sub
loopne
inc
and
lds
loope
add
sub
gs
lods
inc
enter
int3
and
insl
test
or
test
sub
les
loopne
inc
imul
fs
in
add
add
add
lods
inc
test
and
and
sub
in
add
mov
mov
les
test
add
in
add
in
lea
fs
add
and
inc
dec
in
sub
add
loope
or
add
sub
dec
mov
add
add
sub
gs
and
leave
andb
dec
popa
sub
loopne
dec
enter
test
insl
push
and
sub
add
in
mov
insb
inc
mov
and
insb
andl
insb
dec
loopne
jmp
in
or
rorb
in
or
mov
dec
subb
imul
or
add
test
imul
sub
and
mov
imul
sub
roll
and
imul
push
les
fs
int
mov
inc
add
in
int
add
lods
mov
addl
or
in
test
dec
sub
andl
rolb
rolb
add
imul
and
add
add
rolb
add
test
movsl
mov
dec
add
in
or
movsl
or
inc
test
test
addb
orb
enter
or
mov
int3
lods
loope
in
pusha
test
or
or
lods
add
or
lea
test
add
imul
add
lea
mov
add
inc
les
add
dec
loopne
sub
or
sub
movsl
sub
popa
lods
in
add
add
lods
inc
loope
test
add
insl
in
sub
inc
mov
fs
lods
add
movsl
lods
dec
in
inc
test
enter
lods
shl
add
mov
movsl
int3
in
lods
leave
sub
and
and
dec
dec
int
loopne
pusha
test
dec
movsb
ror
add
imul
or
loope
in
in
add
test
movsb
lods
or
les
ror
in
in
loopne
subb
dec
andl
pusha
inc
loope
and
dec
and
dec
shlb
insb
gs
in
or
in
mov
loope
int
int3
inc
in
orl
sub
add
andl
loope
leave
movsb
call
inc
int
add
jmp
inc
in
dec
andl
sub
inc
subb
or
shr
dec
test
lea
mov
in
add
dec
jmp
imul
shrl
enter
subb
inc
add
popa
or
leave
dec
add
add
dec
add
movsl
enter
push
add
test
loope
test
inc
dec
int
jmp
dec
add
pusha
enter
or
mov
movsb
mov
mov
les
andb
popa
inc
call
add
jmp
add
add
rolb
insb
add
sub
dec
sub
dec
pusha
jmp
int
inc
test
lods
and
fs
dec
leave
dec
in
shl
or
loope
gs
add
dec
add
dec
les
and
movsb
or
dec
addl
gs
dec
lea
test
popa
mov
sub
subl
fs
add
push
int3
int
mov
subl
sub
shrb
in
lods
rol
sub
jmp
test
add
rolb
push
movsl
inc
add
or
mov
inc
add
or
or
test
or
mov
sub
popa
in
inc
or
sub
mov
dec
add
movsl
in
leave
sub
or
or
insl
inc
les
or
mov
fs
mov
dec
test
lods
add
test
inc
add
add
in
movsl
mov
insb
dec
or
add
inc
dec
rol
leave
test
add
or
shrl
mov
movsl
sub
inc
movsl
lods
add
inc
test
dec
andb
mov
call
in
sub
shll
lea
and
add
imul
add
and
sub
push
gs
push
or
enter
inc
rol
in
orb
popa
add
add
or
sub
in
les
mov
movsb
add
mov
in
test
inc
insl
and
enter
les
loopne
test
enter
dec
fs
or
add
add
in
fs
imul
sub
or
or
sub
insl
dec
in
insb
test
add
mov
add
dec
mov
inc
insl
lds
rorb
test
in
loope
add
lea
imul
imul
and
mov
and
add
in
or
dec
sub
push
mov
add
mov
call
sub
dec
lods
add
add
add
insb
insb
and
or
fs
or
movsl
sub
or
int
test
add
sub
popa
mov
addb
imul
add
pusha
shr
inc
add
add
call
add
leave
sub
les
movsb
test
movsl
sub
leave
mov
sub
add
dec
sub
dec
inc
dec
in
add
add
mov
loope
and
roll
test
jmp
and
lods
inc
in
call
enter
lods
loopne
movsl
rorl
loope
movsb
shlb
sub
sub
fs
mov
in
mov
insb
enter
test
inc
int3
add
sub
inc
or
jmp
and
test
mov
add
and
call
add
gs
sub
test
orb
insb
vmovaps
lods
andb
add
inc
sub
movsb
and
in
sub
lea
add
insl
in
test
mov
inc
les
in
and
pusha
andl
inc
popa
or
or
mov
dec
or
les
and
add
or
push
sub
and
test
imul
orl
shr
add
loopne
pusha
in
or
inc
test
push
in
mov
test
test
dec
movsb
in
add
inc
sub
add
mov
movsb
lods
inc
lea
add
or
in
jmp
add
inc
mov
add
or
dec
fs
and
inc
mov
rolb
add
loopne
shll
popa
int3
sub
in
and
sub
loopne
mov
insl
sub
mov
add
int3
test
or
and
inc
test
movsl
add
jmp
mov
dec
insl
mov
sub
or
test
push
gs
or
add
or
inc
mov
mov
jmp
shll
add
and
inc
lds
or
add
test
add
sub
sub
test
and
add
dec
call
sub
dec
movsl
in
in
insb
test
test
shll
in
or
or
inc
test
mov
orl
dec
add
sub
mov
add
dec
gs
and
loope
test
shlb
inc
and
add
in
mov
test
add
test
push
mov
add
mov
popf
clc
mov
dec
mov
les
fwait
movsl
push
cmpsl
xchg
adc
mov
rcl
inc
add
ficoml
leave
imul
add
jns
incb
imul
mov
mov
lods
mov
test
cs
and
push
je
incb
popa
inc
add
inc
ficomps
push
mov
inc
add
cli
out
fidivs
or
jb
add
dec
xlat
dec
aas
mov
inc
add
fs
pusha
and
sti
add
add
nop
sbb
xor
push
cmp
push
sbb
or
cmp
xchg
or
jnp
mov
in
cmp
test
cmc
dec
push
push
test
add
mov
out
xchg
mov
cmp
xchg
or
push
ret
loope
arpl
jno
push
in
xchg
popf
test
sbbb
xor
push
push
incb
rcll
cltd
es
incb
xchg
xor
jo
movsl
stos
neg
jbe
fdivp
loop
add
addr16
fcoms
dec
gs
add
mov
sbb
in
clc
add
add
jmp
mov
decb
jle
fstpt
jne
mov
not
das
mov
add
jecxz
imul
adc
movsl
push
mov
mov
imul
repz
mov
and
je
fcoms
mov
xchg
testb
cltd
sub
add
inc
add
xor
add
mov
jmp
jno
addb
jo
sbb
push
xor
mov
jle
adc
adc
out
add
xchg
pop
sbb
stos
cmpsl
jno
push
insb
add
popa
in
cmp
pop
mov
lods
pop
out
or
decb
popf
mov
mov
sub
xor
adc
xor
mov
incb
ds
adc
lods
mov
in
or
mov
sbb
inc
iret
movsb
arpl
add
inc
std
sbb
popa
push
or
inc
das
imul
mov
mov
pop
adc
jne
jb
decb
mov
cli
xchg
jo
out
lcall
incb
push
sti
adc
jecxz
xor
push
pop
and
sub
cmp
push
test
test
mov
mulb
add
pop
pushf
popf
cmp
and
fstps
stc
hlt
dec
inc
lods
dec
xchg
jp
mov
aad
imul
imull
mov
fldcw
test
add
pop
mov
add
and
in
and
hlt
popa
mov
mov
lock
or
stos
daa
xor
add
rcrb
mov
mov
lds
mov
data16
mov
inc
test
into
ljmp
xor
cld
xchg
fsts
sbb
pop
sbb
ds
stc
add
ss
xchg
jo
xchg
scas
lcall
sbb
xorb
mov
cmp
rcrb
and
fcomps
push
js
decb
mov
mov
cmp
fldcw
push
add
or
stc
cmpsl
jl
cli
insl
jge
mov
and
lret
ds
push
sub
sub
dec
xchg
adc
mov
sbb
jbe
test
fstpl
nop
loope
movsl
repz
xor
mov
sub
ljmp
popa
xchg
std
lcall
xor
dec
mov
ret
pop
xor
lret
orl
add
lret
sub
sbbl
jno
loop
pop
enter
lods
inc
movsl
pop
cmpsb
divb
fisttpl
sbb
movsb
adc
cmp
dec
pop
inc
add
mov
lds
add
lret
scas
clc
mov
inc
add
punpcklbw
and
rol
pusha
mov
pusha
add
jnp
add
incb
xor
xor
aas
aas
sti
aam
fidivrs
ret
xor
and
cmp
inc
inc
fisttpl
inc
lock
inc
inc
and
in
aam
add
mov
cmp
pusha
icebp
in
xor
test
rolb
xchg
js
shlb
add
roll
jno
leave
xchg
nop
pop
jl
sub
xchg
fisubrl
xor
mov
xor
mov
xor
ja
inc
nop
xchg
add
iret
sub
or
cmp
add
push
adc
mov
icebp
in
out
out
mov
cli
pop
test
and
xchg
pop
jle
ret
cmc
mov
fs
repz
fcmove
shrb
int
addl
clc
repnz
add
sub
adc
int
enter
xor
add
mov
mov
fwait
inc
hlt
jp
jp
aaa
xor
mov
sub
popf
fbld
xchg
test
push
shll
inc
add
sub
sub
incb
add
xchg
outsb
incb
add
dec
add
mov
add
dec
pop
sub
out
popa
sarl
pop
jmp
imul
fcompl
jne
dec
add
insb
add
sub
imul
mov
push
mov
je
je
xchg
mov
les
adc
btr
jg
pop
jmp
call
cmpsl
addb
mov
and
incb
mov
pop
add
in
xchg
lods
test
decb
fcmove
stc
test
mov
popf
pop
cmpsl
xor
add
pop
mov
pushf
sub
cmp
ficomps
xor
scas
sub
push
fcoms
mov
imul
data16
stos
dec
lcall
scas
dec
ja
mov
sub
xor
mov
inc
add
ljmp
add
mov
into
push
mov
incb
stos
dec
lea
incb
test
pop
out
movsb
aas
sub
lcall
mov
mov
incb
and
ljmp
scas
mov
pop
out
mov
jno
int3
jae
mov
add
adc
adc
mov
faddl
add
rorl
push
leave
add
js
cld
push
pop
adc
mov
push
pop
dec
incb
daa
int3
mul
mov
dec
adc
test
incb
xchg
dec
xchg
lret
xor
out
mov
mov
pop
ds
push
addr16
jnp
add
jmp
xchg
push
iret
jne
mov
push
or
aaa
fdivr
mov
sbb
test
fdivrs
lcall
in
xchg
xor
inc
and
xchg
addl
add
mov
dec
pop
cli
lahf
push
push
pop
into
sbb
outsb
in
enter
or
pop
adc
incb
mov
mov
pop
out
dec
dec
insb
add
imul
test
insl
fisttpl
add
jno
imul
xor
pop
and
pop
mov
pusha
lods
mov
outsl
scas
adc
inc
adc
pop
lcall
je
jne
xchg
pop
mov
jo
test
add
inc
repz
push
fmulp
adc
jnp
cmp
jae
shlb
dec
push
ds
fcoms
popl
cmp
lret
sub
cmp
mov
jmp
call
or
dec
add
jb
add
subl
decb
inc
arpl
add
mov
out
add
sbbb
mov
imul
pop
je
and
sub
mov
cmc
jns
daa
insl
stos
lock
dec
dec
jle
add
jp
mov
jne
pop
dec
xor
out
sub
test
es
lock
sbbb
push
sbb
movb
mov
in
xchg
lea
push
sbb
movsb
cs
clc
add
push
fbstp
pop
frstor
add
shr
divl
mov
or
push
int3
cmpsb
sbb
jnp
jp
ror
xchg
fcoms
add
add
lret
xchg
in
push
jno
xchg
jecxz
in
in
mov
lods
fldcw
xlat
fisttps
cmp
iret
jg
incb
mul
cli
xchg
pusha
add
loopne
jp
inc
cli
mov
mov
push
test
data16
fistl
add
js
imul
cmp
jae
sub
pop
lret
and
out
lcall
gs
push
test
sub
fwait
ret
ffree
ja
mov
pop
mov
mov
arpl
xchg
scas
cmc
cli
mov
iret
cs
cmpsb
loop
jno
scas
inc
scas
rorl
es
sub
incb
cwtl
arpl
cmp
add
shrb
lea
cli
out
adc
adc
pushf
jge
push
jmp
in
dec
add
mov
faddl
in
stc
in
lret
mov
cmc
pop
add
incb
add
fstpt
data16
and
lea
in
and
adc
cmp
sub
fdivr
lahf
jmp
lret
add
inc
mov
cmp
data16
dec
aas
cltd
lret
add
dec
roll
xchg
jns
pushf
adcb
xor
mov
push
rcrb
mov
xor
dec
lcall
jmp
add
mov
push
decb
add
add
dec
lahf
push
jp
shrl
mov
notl
popa
pop
xor
adc
inc
add
jnp
jecxz
pop
imul
add
and
pop
outsl
pop
cmpsb
mov
add
insb
divb
sbb
dec
repnz
js
mov
add
repz
jbe
adc
sub
lods
into
loop
pop
mov
in
cltd
sti
cmp
mov
outsb
add
or
fcomip
mov
call
mov
or
out
test
pop
dec
decb
and
xchg
mov
push
push
mov
aaa
lret
lret
idivb
mov
mov
data16
lahf
sbb
fstps
daa
jmp
lcall
add
mov
mov
or
sbb
jo
push
xlat
data16
daa
lahf
add
imull
imul
pop
lret
cmpsl
dec
cmp
icebp
repz
rcll
dec
add
inc
add
jge
icebp
std
dec
outsl
mov
lahf
xor
movsl
fst
cli
mov
std
push
incb
adc
das
jb
push
jle
add
push
sbb
imul
mov
pop
je
pop
mov
scas
lret
dec
sub
out
jg
add
repz
jo
mov
xchg
add
push
cltd
adc
or
loopne
cmpsl
lret
add
decb
adc
es
hlt
ja
xor
xchg
cmp
add
outsb
add
add
mov
push
pop
pop
lods
push
shrl
les
lock
ret
jne
mov
inc
cmp
out
cmpsl
cmp
insl
adc
adc
stc
sbb
mov
je
dec
ss
repnz
inc
add
and
sub
xchg
data16
movsb
movsb
dec
add
ja
pop
cmc
test
lahf
lcall
add
repnz
add
and
pop
sti
lea
xor
add
mov
push
push
mov
xchg
fidivs
mov
idiv
push
cmp
xor
push
and
decb
adc
jecxz
in
push
dec
adc
lods
scas
sahf
ljmp
mov
ja
outsl
cli
scas
push
inc
add
out
inc
in
insb
add
and
mov
push
add
cmp
in
xchg
dec
loop
or
out
ljmp
sti
xor
fstl
add
adc
adc
cmp
incb
add
push
repnz
sub
push
xchg
cwtl
sub
outsl
outsb
sti
jmp
mov
xor
enter
movsb
xor
shrb
rolb
add
pop
and
and
push
stos
mov
lret
push
imul
xchg
int3
popf
jecxz
arpl
imul
movsb
outsb
mov
adc
jae
imul
out
out
nop
repz
xchg
cld
shll
pop
cmp
jp
dec
inc
aas
add
adc
xor
mov
into
push
inc
add
fnstenv
popl
in
sti
insl
sbb
dec
aam
add
jp
mov
mov
inc
push
pop
mov
incb
push
stos
add
pop
lcall
mov
xlat
mov
fstps
mov
cli
je
mov
std
add
mov
add
inc
inc
movsl
xor
inc
add
lods
xchg
push
arpl
scas
fisubrs
notl
test
adc
addl
aas
jmp
inc
adc
in
rcrb
sbb
xor
add
sub
in
and
test
mov
inc
pop
icebp
push
push
mov
or
add
hlt
les
jne
and
jle
sarl
je
push
movsb
jge,pt
jns
add
sarl
lods
aad
dec
add
ljmp
push
jle
add
mov
mov
fmulp
cltd
sbb
incl
mov
or
es
jae
and
jbe
mov
loopne
sbb
cwtl
in
stos
rcrl
decb
sbbb
add
xchg
inc
add
mov
add
jp
loopne
add
nop
push
jl
mov
cld
scas
jns
sub
js
int3
andb
sbb
and
push
dec
mov
bound
sbb
adc
add
aaa
cmp
lods
inc
sbb
xor
push
xchg
jnp
incb
test
fdivrp
shl
insb
out
scas
cmp
pop
adc
mov
mov
aam
inc
xor
decb
fimull
mov
leave
out
loope
mov
jecxz
mov
cwtl
lods
rol
mov
aam
sub
sub
arpl
stc
clc
xor
ljmp
fs
jne
scas
in
shll
dec
mov
out
out
mov
sub
adc
cmp
xor
pop
or
fbstp
add
xorb
out
pop
outsb
add
scas
les
daa
fwait
add
jl
jae
sbb
add
lock
daa
test
dec
sbb
sub
testb
xorb
xlat
mov
add
fsts
out
push
addr16
jecxz
jle
inc
daa
call
push
mov
cmp
mov
xor
pushf
dec
xchg
mov
xchg
incb
sub
push
mov
push
decb
mov
popa
enter
add
mov
aas
lcall
sbb
add
push
insb
add
push
adc
movsl
or
popa
aas
xor
xlat
pop
test
sbb
frstor
push
xchg
pop
or
xor
arpl
and
mov
decb
decb
sbb
inc
add
pop
in
push
adc
push
lret
arpl
add
lret
sub
mov
dec
fwait
dec
lods
dec
outsl
or
pop
cld
and
in
std
lret
aam
je
sbb
bound
mov
and
gs
mov
mov
sti
dec
mov
clc
jbe
jl
mov
sub
adc
lgs
mov
sbb
les
lods
test
add
jge
sbb
cmp
add
aas
add
decb
sbb
stos
pushf
xchg
add
imul
mov
fs
cwtl
loop
je
insb
add
add
incb
adc
push
pop
out
incl
pop
cs
insb
add
addr16
add
cmp
dec
xor
cmpsl
shl
push
dec
pop
cmp
in
sub
incb
lods
data16
movsl
cmc
xor
daa
mov
es
mov
lock
int3
inc
inc
ljmp
or
cmp
xchg
add
jle
in
mov
movsb
sub
add
cmp
add
pop
sub
incb
pushf
loop
mov
sub
xor
rolb
les
fnstcw
mov
lahf
mov
cmp
xchg
push
jb
add
rorl
add
xlat
pop
insb
add
mov
imul
push
pushf
xchg
ds
and
sbb
xchg
push
xor
inc
lds
push
in
xor
mov
add
add
mov
and
aam
loope
test
ficoml
jns
ss
out
pop
aad
and
push
incb
popa
xchg
fs
pop
jae
jo
xchg
in
jno
add
mov
add
cs
lock
incb
add
movsl
clc
mov
or
xchg
hlt
cmp
inc
add
xchg
sub
push
adc
test
testl
cmp
sbb
call
inc
decb
add
cltd
push
pop
adc
lret
sar
mov
loopne
out
fwait
insb
cltd
xchg
add
inc
sbb
add
in
iret
cmpl
push
pop
inc
fs
shlb
mov
add
imul
mov
scas
mov
fwait
inc
cmp
lods
movsl
mov
mov
or
incb
sahf
loop
lock
lods
out
ret
dec
add
pavgb
xor
rol
sahf
andl
in
popa
ret
repz
sub
out
repnz
jle
mov
cld
sbb
data16
outsl
pop
and
in
cld
shrb
cmp
xchg
movsb
gs
cmpsl
xchg
push
adc
pop
mov
out
mov
cwtl
cmp
cwtl
out
lea
mov
cmpb
push
mov
push
je
add
testl
dec
fs
inc
add
mov
sbb
jl
mov
mov
cmpsl
insb
add
repnz
inc
or
dec
lods
or
dec
test
add
push
jg
adc
or
and
incb
push
adc
cld
inc
add
int3
sbb
mov
test
sub
pop
aam
les
lcall
jg
push
outsl
adc
xor
cmpb
popa
adc
jecxz
add
and
add
push
out
add
and
xor
rol
cmp
jne
sub
and
mov
pop
ljmp
lods
arpl
push
cmp
jb
popf
loopne
fisubs
sti
xor
dec
sub
fnstenv
es
cs
pushf
cwtl
inc
dec
lods
push
mov
decb
push
jno
mov
lods
popf
sub
sub
xor
add
in
add
lea
push
push
push
push
push
xchg
push
clc
test
je
jmp
push
lea
or
mov
shr
shr
add
push
push
push
call
leave
ret
ret
xchg
mov
or
xchg
shl
add
lea
sub
shr
dec
not
sub
mov
clc
jne
push
pop
add
lea
clc
jmp
jmp
push
mov
sub
lea
orl
andl
cld
push
call
inc
test
je
in
dec
and
push
push
push
call
mov
lea
test
jne,pn
add
decb
and
push
pop
mov
inc
clc
arpl
pop
adc
pop
pop
adc
aaa
int
sti
xorb
inc
mov
mov
lret
imul
cmp
test
push
scas
jmp
and
pop
jmp
add
int
jo
sbb
push
xchg
xor
gs
pop
xor
push
decb
cli
addr16
dec
cli
mov
inc
lahf
jnp
decb
mov
popa
add
adc
stos
sbb
decb
in
bound
test
mov
movsb
xchg
aam
mov
out
daa
pop
scas
out
mov
call
lods
fimuls
lcall
jno
xchg
outsb
sub
decb
incb
call
rep
cwtl
rcl
jns
or
lea
add
imul
scas
sbb
lea
test
xchg
stos
repnz
jb
clc
sub
push
mov
stc
lea
dec
pop
cmp
pmaxub
ljmp
xchg
push
repnz
add
lods
lret
mov
inc
test
and
decb
arpl
push
xor
in
jo
lcall
push
decb
cmp
add
jno,pt
clc
lea
sub
mov
mov
jne
pusha
xchg
push
inc
add
sbb
mull
negl
inc
lahf
mov
jge
add
incb
icebp
out
lods
cmp
fxch
pop
or
decb
adc
out
das
jne
and
incb
add
movsb
mov
lret
cmpsl
push
inc
ja
test
inc
lods
pop
add
enter
push
add
lret
out
dec
add
faddl
xchg
into
pop
ret
shr
sub
sahf
test
add
add
cmp
add
or
add
addr16
out
mov
push
and
incb
lods
es
cwtl
test
js
add
fdivl
stos
loopne
lods
push
enter
dec
add
cs
bnd
mull
call
testl
rorl
inc
fsubs
inc
push
vpabsb
add
in
push
pop
adc
adc
add
pop
into
push
adc
decb
and
sbb
in
add
pop
jmp
xor
sbb
js
in
out
pop
les
cmp
mov
icebp
fmull
nop
scas
inc
or
sub
decb
ljmp
xchg
testb
cmp
xor
pop
or
decb
add
jno
fwait
sub
js
aas
enter
jp
xlat
mov
decb
and
cmp
adc
daa
push
in
js
add
sub
lods
xchg
scas
sub
mov
es
test
inc
inc
inc
adc
movsb
dec
incb
pop
shrb
xor
sbb
test
lret
add
xchg
mov
pop
pushf
push
jo
shrl
out
notl
add
int3
push
xor
jns
iret
jo
xor
push
push
jp
push
test
mov
icebp
aad
int
pop
fmull
pop
stos
mov
add
inc
add
cmc
popa
cmp
lods
popa
dec
add
push
mov
push
pop
and
movsl
test
pop
xchg
ss
cmp
sbb
shrl
inc
movsl
and
decb
loop
mov
mov
dec
pop
cmp
push
push
aas
add
hlt
test
mov
add
movsl
pop
out
and
inc
lods
pop
sub
add
add
push
stos
add
push
dec
add
mov
mov
insb
xchg
stc
js
push
lret
fisttps
xchg
or
jb
stos
sahf
notb
ret
loopne
incb
add
fwait
cmpsb
dec
ja
test
mov
scas
lcall
inc
pop
mov
aaa
leave
dec
bound
sub
fidivrl
inc
movsl
pop
mov
mov
xor
clc
mov
mov
pop
pop
mov
lock
xchg
lods
add
imul
jle
jb
jmp
add
jge
cmp
hlt
aad
pop
lret
repnz
loope
pop
cld
out
mov
arpl
add
xchg
push
dec
les
decb
sub
mov
inc
mov
inc
cmp
mov
cmp
jbe
incb
cmc
iret
mov
fidivl
out
jge
adc
pop
es
xchg
add
and
decb
fnstsw
js
push
repnz
mov
clc
out
mov
mov
jl
incb
call
mov
sub
cltd
add
decb
pushf
push
pop
jmp
sub
test
jle
sub
cmpsb
push
adc
sbbl
insb
out
lds
outsb
notl
pop
ret
repz
cmp
movsb
mov
inc
jp
test
pop
clc
popa
out
fnstcw
sahf
inc
add
cwtl
sti
test
pushf
subl
test
pop
xchg
test
es
add
aaa
add
inc
cld
loope
add
scas
inc
add
in
lret
aas
push
test
inc
add
mov
inc
mov
or
dec
push
subb
outsb
add
mov
add
repnz
dec
repz
inc
ljmp
enter
pop
mov
rorl
pop
out
mulb
add
leave
pop
and
je
cmpsb
add
add
mov
mulb
cmp
mov
test
xchg
inc
les
pop
adc
out
add
decb
pop
int3
pop
push
cmc
sbb
ljmp
out
lea
lods
aam
jns
subl
xchg
out
cmp
dec
add
lcall
xchg
outsl
iret
mov
mov
decb
pusha
add
xchg
adc
sub
incb
pop
pop
pop
cwtl
popa
add
incb
and
stos
adc
cwtl
iret
minps
dec
add
arpl
dec
repz
loope
add
test
cmp
mov
lods
in
inc
sub
pop
insl
dec
lcall
lcall
jno
or
xor
mov
jg
add
push
leave
push
mov
sub
decb
xor
cmp
jmp
std
lock
stc
imul
push
add
sbb
insb
add
dec
add
mov
pop
jo
dec
add
push
inc
adc
sahf
out
insb
es
jmp
mov
mull
imul
lret
and
adc
mov
cmp
push
inc
add
mov
mov
hlt
sbb
dec
aas
jge
sbb
scas
cwtl
cmpsb
lcall
fbld
ret
mov
dec
add
push
incb
daa
cmp
dec
or
dec
vmwrite
cmp
pop
mov
add
mov
leave
addb
jecxz
jle
add
sbb
xchg
testb
add
mov
add
mov
aam
incb
mov
movsb
or
in
loopne
pop
cld
fcomps
xchg
stos
cli
icebp
xor
sbb
dec
lahf
adc
dec
or
add
lahf
cmc
aad
and
decb
icebp
push
mov
jmp
mov
testl
pop
cmp
inc
jecxz
arpl
or
repz
xlat
add
jns
cmc
mov
out
cmpl
dec
xor
rorl
cmp
icebp
ljmp
lret
xchg
mov
es
mov
add
mov
js
decb
mov
xor
jp
insb
add
pop
push
cmpsb
push
jno
mov
sbb
pushf
fcmovb
loopne
sbb
ljmp
add
in
out
jmp
cmp
into
sarb
loopne
fisubs
dec
and
mov
mov
fdivr
xchg
dec
add
inc
add
xchg
xor
mov
ljmp
mov
add
push
out
shll
incb
add
sub
cmp
fstl
push
fimull
popa
dec
mov
cs
jne
add
in
or
incb
add
leave
or
xchg
jle
push
data16
jnp
out
cmp
cmp
add
sbb
test
adc
decb
shll
add
insb
add
mov
pop
push
scas
or
mov
add
loop
fldcw
push
sub
mov
out
movsb
addb
aas
sub
incb
or
xchg
iret
adc
cmpsl
and
mov
hlt
in
jge
jl
inc
xchg
mov
jmp
push
decb
dec
add
pusha
add
xchg
jg
mov
cmp
xchg
cmpsb
scas
lret
mov
jmp
imul
dec
xchg
or
ja,pt
inc
call
mov
ss
push
mov
xchg
adc
outsb
push
xchg
xor
xchg
test
or
and
rcl
popf
jle
jg
decb
dec
add
add
sbb
sbb
pop
in
sub
jnp
push
out
sub
out
adc
lea
sbb
mov
xor
cmpsl
add
and
incb
add
loope
add
out
jo
in
push
mov
sbb
aaa
sub
mov
add
dec
decb
mov
push
in
cltd
js
pusha
decb
mov
fxch
mov
sbb
xorl
leave
push
xchg
mov
xchg
fimuls
xor
push
jne
or
incb
adc
adc
jns
cltd
bound
fisttpl
mov
divl
insl
call
xlat
mov
add
xchg
pusha
add
in
mov
mov
xchg
push
imul
jmp
lahf
and
xor
in
out
fdivl
pop
es
decb
out
mov
add
push
roll
add
xchg
pop
dec
loope
xor
add
in
mov
xorl
test
xchg
mov
testb
lods
int3
adc
in
ss
testl
fisttps
cmp
test
popf
lock
or
arpl
mov
lods
dec
cmp
inc
add
jle
add
in
add
repz
xor
mov
add
stos
xchg
test
jae
mov
cmp
cmc
pushf
lea
ja
insl
mov
push
out
dec
cmpsl
int3
fsub
xor
scas
xor
mov
and
add
jp
sbb
je
cmp
loope
cmpsb
cli
dec
add
out
inc
mov
incb
imul
leave
adc
xchg
jno
rcl
fcmovb
fcoms
cmc
sti
rcr
out
or
std
lods
mov
out
aaa
lods
dec
loopew
add
int
loop
add
decb
lds
xchg
sub
pop
pop
insb
add
mov
stc
sbb
test
adc
test
mov
test
lcall
cs
add
push
repz
nop
xor
add
shlb
inc
ja
mov
add
adc
pop
mov
jmp
test
scas
sub
std
mov
push
mov
xor
jbe
add
cld
sahf
inc
pop
cmp
mov
add
cmp
bound
out
add
jecxz
int
xor
mov
add
push
leave
xchg
push
daa
adc
in
mov
out
mov
push
fists
and
and
or
incb
adcb
es
and
fnstsw
add
js
fwait
adc
push
inc
and
pop
xchg
clc
inc
and
xor
fs
cmc
mov
ficoms
fsubr
jmp
add
dec
ja
jmp
in
or
jmp
addr16
push
jb
jne
or
xor
pusha
mov
xchg
inc
rcrb
std
push
mov
insl
xchg
push
add
lahf
pop
sbb
fcoml
mov
mov
sbb
add
and
repnz
sub
pusha
add
repnz
lcall
mov
inc
add
fildll
dec
pop
push
iret
psubusb
enter
shll
rol
ss
cmp
incb
pop
and
cmpsl
mov
inc
lea
fimuls
out
mov
inc
pop
das
test
add
cmp
xchg
jns
lret
push
inc
mov
dec
sahf
test
cli
imul
jnp
sbb
xorl
out
fldt
and
repnz
testl
lret
mov
xchg
addr16
dec
jne
add
les
loope
cmpsl
xor
sub
xchg
add
mov
add
jo
int
scas
cmc
xor
pop
and
add
cmc
inc
sub
stos
or
incb
cmpsb
sub
clc
fs
imul
fdivrs
jmp
out
add
ror
lret
xchg
and
pop
add
popa
mov
sbb
outsl
aas
lock
xor
push
sahf
std
mov
jg
sub
fs
nop
pop
pop
mov
inc
cmpsb
dec
incb
outsl
test
add
xchg
add
dec
cli
in
push
addr16
call
fwait
dec
add
dec
jle
popf
dec
incb
mov
sbb
imul
cmp
call
xchg
data16
decb
pop
sbb
adc
ret
ljmp
xlat
mov
xchg
int3
inc
add
inc
add
sbb
pop
sbb
inc
add
sub
push
pop
jmp
inc
decb
ret
add
decb
mov
adc
add
push
add
jne
jl
lret
fnstsw
stos
loopne
addr16
test
mov
lcall
std
lods
aaa
pop
fwait
in
xchg
fldenv
add
push
rolb
xor
mov
sbb
enter
sub
rcl
inc
add
jp
pushf
jnp
incb
imul
nop
nop
nop
nop
jae
add
int
rolb
add
add
jecxz
nop
nop
nop
nop
jae
sub
add
rclb
add
push
shr
push
mov
xchg
ret
add
add
add
pop
int3
mov
inc
and
nop
nop
nop
nop
jae
popf
xchg
add
xor
xabort
nop
nop
nop
jae
xor
lcall
xchg
add
push
mov
xchg
ret
push
add
add
mov
add
xor
add
clc
nop
nop
nop
nop
jae
mov
add
add
mov
daa
xor
add
nop
nop
nop
nop
jae
addb
xchg
add
cld
add
rclb
nop
jmp
add
dec
add
jo
push
clc
nop
nop
nop
nop
jae
into
cmp
push
cwtl
push
add
xchg
add
add
sti
xor
push
mov
xchg
ret
xchg
add
add
dec
imul
add
mov
jae
push
mov
xchg
ret
rcr
jne
add
add
ds
mov
push
mov
xchg
ret
add
add
mov
add
add
sti
push
clc
nop
nop
nop
nop
jae
sbb
add
popf
add
movsl
lss
mov
aad
add
add
movsl
add
in
add
mov
call
loop
xlat
mov
mov
add
push
mov
leave
nop
jmp
jne
cmp
or
mov
mov
clc
nop
nop
nop
nop
jae
xor
cmp
add
add
xchg
lods
push
clc
nop
nop
nop
nop
jae
add
add
xchg
add
repnz
jo
inc
and
nop
push
mov
leave
nop
jmp
dec
add
add
xchg
add
add
mov
xchg
call
leave
nop
jmp
add
fs
fidivl
push
add
and
nop
nop
nop
nop
jae
xchg
add
xchg
jb
add
into
xchg
lods
xor
clc
nop
nop
nop
nop
jae
jo
xor
add
add
add
mov
inc
sbb
nop
nop
nop
nop
jae
push
sub
add
add
push
int3
fidivl
or
push
mov
leave
nop
jmp
jo
cwtl
pop
add
sti
add
add
fwait
xchg
nop
push
mov
leave
nop
jmp
cwtl
xchg
sub
add
add
add
sub
add
cltd
fld1
clc
nop
nop
nop
nop
jae
add
add
rolb
dec
pop
xor
outsl
mov
clc
nop
nop
nop
nop
jae
add
add
pop
popf
add
push
mov
jae
add
xchg
pop
jnp
add
or
in
imul
add
add
cli
mov
cld
clc
nop
nop
nop
nop
jae
add
add
mov
popf
add
push
mov
xchg
ret
scas
add
add
add
add
mov
xchg
ret
add
add
pop
xor
jo
xor
fimuls
or
nop
nop
nop
nop
jae
or
xchg
sti
add
add
nop
popf
clc
nop
nop
nop
nop
jae
mov
add
pop
imul
or
sti
jl
sub
clc
nop
nop
nop
nop
jae
add
mov
xchg
xchg
ret
icebp
lea
clc
nop
nop
nop
nop
jae
add
add
add
jb
add
mov
add
clc
nop
nop
nop
nop
jae
cli
xor
lods
lods
add
imul
add
jo
je
clc
nop
nop
nop
nop
jae
cwtl
dec
add
add
add
push
mov
leave
nop
jmp
scas
cwtl
add
add
nop
xchg
add
nop
nop
nop
jae
add
scas
xor
es
int
pusha
clc
nop
nop
nop
nop
jae
add
int
add
cld
add
cmp
nop
push
mov
leave
nop
jmp
mov
lods
pop
movsl
pop
add
adc
nop
nop
nop
nop
jae
add
add
lahf
inc
inc
push
nop
mov
nop
nop
jae
add
add
popf
add
cwtl
xor
mov
clc
nop
nop
nop
nop
jae
sub
add
enter
or
nop
nop
nop
nop
jae
xchg
into
sti
pop
sti
testb
push
mov
xchg
ret
pop
add
mov
ret
add
roll
jne
nop
push
mov
leave
nop
jmp
scas
nop
add
int
add
js
push
repnz
clc
nop
nop
nop
nop
jae
fiadds
add
fidivs
mov
dec
pop
ret
fistpl
push
mov
xchg
ret
add
scas
cld
add
add
push
push
mov
xchg
ret
fidivs
pop
add
mov
loop
call
push
mov
xchg
ret
pop
dec
push
popf
pop
pop
jb
add
add
jmp
mov
xchg
ret
add
lahf
add
xchg
cmpl
nop
jae
add
fildl
add
pushf
mov
nop
nop
nop
nop
jae
imul
scas
scas
in
xchg
clc
nop
nop
nop
nop
jae
add
mov
add
rolb
add
clc
nop
nop
nop
nop
jae
pop
add
xchg
add
lods
ror
pop
mov
push
mov
xchg
ret
add
add
xchg
dec
movsl
popa
push
push
mov
xchg
ret
add
add
pop
add
imul
add
clc
nop
nop
nop
nop
jae
xchg
cwtl
dec
add
add
add
stos
clc
nop
nop
nop
nop
jae
add
pop
add
clc
nop
nop
nop
nop
jae
add
test
dec
xchg
add
cmp
nop
nop
nop
jae
lahf
add
dec
pop
add
push
cli
add
fstl
nop
nop
nop
nop
jae
xor
cld
imul
cli
add
xabort
nop
nop
nop
jae
add
add
add
mov
push
mov
leave
nop
jmp
add
pop
cmp
add
add
mov
nop
nop
nop
jae
fisubl
cld
add
add
lret
movsb
nop
push
mov
leave
nop
jmp
add
mov
sub
xchg
add
mov
nop
nop
jae
fs
lahf
popf
lahf
dec
lahf
enter
nop
nop
nop
nop
jae
add
add
pop
add
mov
inc
pop
clc
nop
nop
nop
nop
jae
sti
add
mov
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
adc
push
mov
xchg
ret
add
add
cld
add
jbe
push
mov
xchg
ret
add
xchg
xchg
add
add
add
pop
cli
ret
rorl
nop
nop
nop
nop
jae
jo
pop
add
add
xor
mov
clc
nop
nop
nop
nop
jae
add
xor
out
clc
add
sub
inc
add
fildl
cwtl
add
mov
jo
xchg
jmp
add
add
sbb
add
add
pop
shrl
test
adc
add
nop
nop
nop
nop
jae
scas
add
add
cmp
adc
add
nop
jmp
add
mov
add
add
push
or
mov
xchg
ret
add
pop
add
rolb
add
push
nop
push
mov
leave
nop
jmp
add
xchg
add
int
rolb
cld
add
test
nop
nop
nop
jae
cli
dec
add
scas
add
lods
aad
mov
nop
nop
nop
nop
jae
repnz
pop
pop
add
jp
add
popf
fld1
push
mov
xchg
ret
rolb
int
xor
add
inc
clc
nop
nop
nop
nop
jae
add
into
jne
popf
sub
mov
clc
nop
nop
nop
nop
jae
xchg
add
sti
xchg
jle
mov
nop
nop
nop
jae
dec
add
add
scas
jne
add
add
push
push
mov
xchg
ret
dec
add
add
xchg
add
add
xchg
add
je
clc
nop
nop
nop
nop
jae
pop
sti
dec
add
clc
nop
nop
nop
nop
jae
xor
cwtl
add
mov
pop
cwtl
xchg
pop
add
je
clc
nop
nop
nop
nop
jae
jb
add
sti
int
mov
nop
nop
nop
jae
add
add
dec
xchg
xchg
add
adcb
nop
nop
nop
nop
jae
add
jne
xchg
xor
xor
add
xchg
pop
add
add
aad
xchg
add
test
add
jae
pop
cmp
push
mov
leave
nop
jmp
add
add
add
add
adc
add
pop
add
add
mov
cmp
push
nop
push
mov
leave
nop
jmp
add
aad
add
pop
add
decb
rorl
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
or
nop
popf
cwtl
mov
fildl
insl
fistpl
nop
push
mov
leave
nop
jmp
add
mov
rorb
dec
es
nop
nop
nop
nop
jae
xchg
add
nop
add
aad
add
insl
fwait
push
mov
xchg
ret
cli
add
es
xchg
pop
repnz
xchg
addl
inc
add
mov
add
cmp
add
push
imul
nop
nop
nop
jae
add
cld
add
nop
push
mov
leave
nop
jmp
es
xchg
cwtl
pop
or
xchg
add
add
nop
nop
jae
add
add
popf
add
mov
inc
add
clc
nop
nop
nop
nop
jae
push
add
add
add
add
mov
xchg
ret
jne
add
add
add
push
dec
inc
add
add
cwtl
add
mov
add
mov
dec
xor
clc
nop
nop
nop
nop
jae
dec
xchg
pop
dec
cli
add
xor
push
clc
nop
nop
nop
nop
jae
add
add
fildl
add
outsb
add
sub
in
lret
pusha
add
roll
or
fwait
testb
add
loop
cmp
sub
clc
nop
nop
nop
nop
jae
add
add
jb
nop
push
mov
leave
nop
jmp
add
cwtl
push
add
addl
cmp
add
add
push
pop
add
mov
mov
xchg
ret
add
sti
add
dec
add
xor
test
clc
nop
nop
nop
nop
jae
fiadds
sbbb
cwtl
popf
imul
nop
nop
jae
jne
add
xor
mov
mov
sti
out
jb
add
scas
ret
or
add
iret
add
clc
nop
nop
nop
nop
jae
mov
movsl
add
jb
add
orl
nop
nop
jae
add
add
repnz
scas
mov
clc
nop
nop
nop
nop
jae
add
add
cld
sub
in
leave
nop
jmp
fimuls
xor
add
push
xor
clc
nop
nop
nop
nop
jae
add
push
add
mov
add
es
cwtl
mov
jne
nop
push
mov
leave
nop
jmp
mov
add
stos
pop
push
mov
xchg
ret
fistpl
popf
sub
add
ret
pusha
clc
nop
nop
nop
nop
jae
xchg
add
jne
movsl
pop
lcall
ds
mov
sbb
push
mov
xchg
ret
pop
add
add
shrb
add
dec
add
mov
jbe
clc
nop
nop
nop
nop
jae
add
add
ror
add
add
mov
xor
nop
nop
nop
jae
push
es
add
xchg
lahf
add
nop
push
mov
leave
nop
jmp
pop
sti
xchg
add
addb
sbb
sbb
clc
nop
nop
nop
nop
jae
lcall
add
mov
xchg
ret
add
cwtl
lahf
add
ret
ficoml
sbb
in
leave
nop
jmp
add
add
push
clc
nop
nop
nop
nop
jae
sti
repnz
add
add
lea
nop
nop
nop
jae
pop
dec
add
cld
push
rcrb
pop
and
nop
push
mov
leave
nop
jmp
xor
es
dec
fiadds
test
add
nop
nop
nop
nop
jae
sub
scas
ficoms
sahf
add
add
nop
jmp
push
lahf
popf
es
add
push
mov
xchg
ret
test
add
add
push
fisubl
sbb
in
leave
nop
jmp
add
add
pop
cli
add
clc
nop
nop
nop
nop
jae
mov
add
add
add
scas
mov
repnz
mov
nop
nop
jae
pop
fidivrs
ficoms
add
add
nop
nop
nop
jae
add
fiaddl
lcall
adc
ja
add
add
xchg
int
add
add
add
add
fistpl
nop
push
mov
leave
nop
jmp
fidivs
test
push
add
xchg
pop
push
jmp
subb
add
rolb
pop
rolb
add
lea
nop
nop
nop
nop
jae
add
pop
repnz
add
test
cmpsl
push
push
mov
xchg
ret
add
add
add
add
dec
add
add
xorl
roll
and
add
dec
cld
xchg
pop
mov
into
pop
sub
cmpsl
push
clc
nop
nop
nop
nop
jae
xchg
dec
cli
add
xor
add
nop
nop
nop
jae
add
fiaddl
add
jb
fld1
nop
push
mov
leave
nop
jmp
xor
mov
pop
add
push
mov
xchg
ret
movsl
rolb
into
add
test
xchg
mov
push
mov
xchg
ret
lods
add
mov
add
mov
add
clc
nop
nop
nop
nop
jae
add
add
xor
add
xor
add
clc
nop
nop
nop
nop
jae
mov
mov
incb
pushl
nop
push
mov
leave
nop
jmp
add
add
add
lcall
leave
add
add
add
and
add
add
sub
pop
mov
clc
nop
nop
nop
nop
jae
cwtl
rolb
sub
aaa
shr
clc
nop
nop
nop
nop
jae
dec
jne
xchg
add
xchg
jb
jge
fld1
clc
nop
nop
nop
nop
jae
sub
fildl
add
add
push
jle
lds
clc
nop
nop
nop
nop
jae
add
rolb
xchg
fidivl
nop
nop
jae
mov
lcall
mov
add
push
clc
nop
nop
nop
nop
jae
sti
xchg
add
add
add
add
add
dec
cmp
nop
nop
nop
nop
jae
add
xchg
mov
add
add
test
nop
push
mov
leave
nop
jmp
add
add
jb
cli
ret
add
mov
mov
xchg
ret
xor
sti
add
cld
scas
sub
and
repz
mov
xchg
ret
add
sti
add
imul
push
push
mov
xchg
ret
add
pop
add
add
test
in
xchg
nop
nop
nop
nop
jae
xchg
add
add
pop
xchg
add
push
mov
leave
nop
jmp
jo
aad
cwtl
pop
add
cli
add
lea
push
mov
xchg
ret
xchg
add
movsl
sti
or
call
clc
nop
nop
nop
nop
jae
sub
movsl
xchg
scas
xchg
add
adcl
ljmp
ret
add
add
add
add
jb
add
sbb
add
nop
nop
nop
nop
jae
add
xor
dec
add
sub
mov
sub
decb
add
nop
nop
nop
nop
jae
add
xor
add
pop
pusha
cwtl
push
add
nop
push
mov
leave
nop
jmp
xchg
add
add
xchg
xlat
call
clc
nop
nop
nop
nop
jae
xchg
add
xchg
sbb
add
nop
push
mov
leave
nop
jmp
add
mov
add
popf
pop
inc
cwtl
call
mov
xchg
ret
jb
sti
add
sub
xchg
add
test
nop
nop
nop
nop
jae
add
add
movswl
clc
nop
nop
nop
nop
jae
add
fistl
push
mov
xchg
ret
pop
mov
xor
cwtl
add
clc
nop
nop
nop
nop
jae
scas
add
add
rep
nop
push
mov
leave
nop
jmp
mov
cld
lahf
xorb
ficoms
add
nop
nop
nop
nop
jae
add
add
add
test
clc
nop
nop
nop
nop
jae
add
add
mov
clc
nop
nop
nop
nop
jae
rcrb
fiaddl
pop
movsl
add
clc
nop
nop
nop
nop
jae
mov
add
popf
or
push
jne
ret
fld1
clc
nop
nop
nop
nop
jae
cld
add
rolb
xchg
add
cmp
push
mov
xchg
ret
add
cli
add
add
movsl
pop
loopne
push
clc
nop
nop
nop
nop
jae
mov
pop
cld
xchg
dec
nop
cmp
jle
add
in
inc
clc
nop
nop
nop
nop
jae
add
add
add
pop
fwait
push
nop
push
mov
leave
nop
jmp
int
push
popf
xchg
cli
add
inc
jne
clc
nop
nop
nop
nop
jae
cwtl
pop
mov
push
hlt
cmpsl
mov
push
mov
xchg
ret
movsl
push
add
add
dec
xchg
xchg
jle
mov
clc
nop
nop
nop
nop
jae
add
ret
add
cmp
mov
cwtl
call
nop
push
mov
leave
nop
jmp
add
add
mov
clc
dec
inc
nop
push
mov
leave
nop
jmp
add
add
addr16
clc
nop
nop
nop
nop
jae
add
add
add
nop
dec
add
push
add
lahf
mov
push
mov
xchg
ret
cwtl
lods
add
xchg
movsl
dec
jne
or
ja
test
add
clc
nop
nop
nop
nop
jae
jne
jo
add
mov
gs
nop
nop
nop
nop
jae
pop
xchg
fiaddl
fs
cld
add
xor
push
mov
mov
mov
je
dec
add
add
xchg
add
std
pop
push
mov
xchg
ret
fiaddl
xchg
add
pop
dec
add
push
add
add
es
stos
pop
mov
clc
nop
nop
nop
nop
jae
add
push
jb
lahf
add
add
xchg
xor
push
push
mov
xchg
ret
cwtl
add
add
mov
or
jmp
pop
cli
incl
fistpl
fistl
or
add
add
xor
mov
mov
adc
add
fildl
pop
cmp
push
dec
add
mov
add
xor
push
clc
nop
nop
nop
nop
jae
add
add
sarb
sub
add
popf
je
add
movsl
cli
xchg
add
mov
fiadds
jmp
outsl
loopne
nop
nop
nop
nop
jae
xor
pop
cwtl
add
nop
test
pop
dec
add
mov
popf
add
nop
push
mov
leave
nop
jmp
sti
xor
jne
testl
nop
nop
jae
add
cwtl
add
shrb
jne
clc
nop
nop
nop
nop
jae
add
sub
out
inc
fistpl
clc
nop
nop
nop
nop
jae
pop
add
cwtl
imul
add
insl
fwait
push
mov
xchg
ret
lahf
test
pop
add
imul
add
jne
xchg
je
nop
push
mov
leave
nop
jmp
xor
xchg
cmp
adc
incl
add
add
popf
mov
cwtl
repnz
pop
push
mov
xchg
ret
add
fs
test
add
cmpsl
fwait
nop
push
mov
leave
nop
jmp
add
into
jo
cwtl
add
add
add
clc
nop
nop
nop
nop
jae
add
add
jb
mov
clc
nop
nop
nop
nop
jae
add
lods
add
push
mov
xchg
ret
add
lcall
test
ljmp
es
add
cld
add
add
add
add
int
add
jge
mov
add
clc
nop
nop
nop
nop
jae
add
or
mov
xor
in
ljmp
nop
nop
nop
jae
pop
aad
add
add
add
aaa
pop
nop
push
mov
leave
nop
jmp
add
add
add
add
cmp
clc
nop
nop
nop
nop
jae
xor
add
lahf
fidivrs
jne
add
cld
add
jne
add
add
add
push
xchg
scas
dec
pop
add
pop
nop
push
mov
leave
nop
jmp
add
sub
add
add
testl
jmp
rcrb
movsl
popf
fcmovnu
cmpsb
dec
mov
clc
nop
nop
nop
nop
jae
scas
add
dec
mov
dec
push
clc
nop
nop
nop
nop
jae
add
add
imul
and
clc
nop
nop
nop
nop
jae
push
pop
cwtl
pop
mov
lods
add
push
jne
clc
nop
nop
nop
nop
jae
aad
xchg
add
add
fcos
dec
sub
nop
nop
nop
nop
jae
add
add
jb
add
pop
shl
push
mov
xchg
ret
xchg
add
xchg
add
adcb
clc
nop
nop
nop
nop
jae
add
add
mov
test
add
imul
push
inc
add
add
aad
add
add
pop
popf
pop
mov
lods
mov
mov
add
test
bound
stos
add
add
add
add
mov
or
decb
adc
push
mov
xchg
ret
add
add
dec
add
cld
xor
xlat
je
clc
nop
nop
nop
nop
jae
cli
xor
add
sti
lahf
mov
mov
add
mov
insb
add
add
inc
add
cmpl
cmpsl
stos
cmpsl
lods
clc
nop
nop
nop
nop
jae
xor
add
flds
sub
nop
nop
nop
nop
jae
add
fidivs
push
mov
repz
lods
add
add
xchg
add
les
jb
add
add
clc
nop
nop
nop
nop
jae
into
xchg
mov
sti
add
add
push
and
add
add
add
add
test
fisubrl
pop
inc
add
cld
rolb
add
add
or
pop
clc
nop
nop
nop
nop
jae
add
mov
xor
cli
add
gs
inc
add
add
mov
add
add
add
pushf
pop
mov
clc
nop
nop
nop
nop
jae
mov
imul
fld1
push
mov
xchg
ret
add
add
add
add
add
es
and
nop
push
mov
leave
nop
jmp
pop
ret
xchg
add
aad
mov
nop
iret
xor
clc
nop
nop
nop
nop
jae
add
lcall
cmp
cld
jno
nop
push
mov
leave
nop
jmp
add
fs
add
mov
sti
pop
push
mov
xchg
ret
add
popf
or
xchg
add
dec
roll
jne
clc
nop
nop
nop
nop
jae
pop
lahf
pop
add
inc
ja
clc
nop
nop
nop
nop
jae
add
add
add
es
inc
ret
clc
nop
nop
nop
nop
jae
add
add
add
mov
jle
je
nop
push
mov
leave
nop
jmp
xchg
add
jne
add
push
mov
leave
nop
jmp
add
add
movsl
add
clc
nop
nop
nop
nop
jae
cmp
add
loope
nop
push
mov
leave
nop
jmp
add
movsl
pop
repnz
pop
movzwl
nop
push
mov
leave
nop
jmp
cwtl
add
popf
add
test
lahf
add
clc
nop
nop
nop
nop
jae
cld
add
add
dec
scas
xchg
clc
nop
nop
nop
nop
jae
pop
pop
add
add
lahf
mov
nop
nop
nop
nop
jae
add
add
test
les
stc
push
clc
nop
nop
nop
nop
jae
mov
add
rep
clc
nop
nop
nop
nop
jae
add
cwtl
xor
add
add
xor
xor
clc
nop
nop
nop
nop
jae
add
lcall
clc
nop
nop
nop
nop
jae
xchg
lcall
add
scas
fildl
sar
nop
nop
nop
jae
xchg
push
scas
add
add
add
cmp
je
sub
nop
nop
nop
nop
jae
add
add
fimull
cmpsl
jp
jg
add
add
loope
add
and
push
nop
push
mov
leave
nop
jmp
imul
add
mov
cwtl
cwtl
add
into
dec
call
clc
nop
nop
nop
nop
jae
add
jne
add
dec
add
nop
nop
nop
nop
jae
pop
popf
add
add
scas
addb
add
nop
nop
nop
nop
jae
add
add
int
or
push
decb
nop
nop
jae
add
scas
dec
dec
fiaddl
xchg
add
nop
nop
nop
nop
jae
fiadds
cmp
cmp
push
mov
xchg
ret
mov
scas
add
addb
add
testl
nop
push
mov
leave
nop
jmp
pop
add
add
aad
add
inc
xchg
add
clc
nop
nop
nop
nop
jae
fs
add
popf
add
xor
clc
nop
nop
nop
nop
jae
cld
add
cmpb
in
inc
mov
pop
pop
add
ljmp
mov
aam
sbb
push
clc
nop
nop
nop
nop
jae
nop
add
scas
add
xchg
add
cli
mov
shr
push
push
mov
xchg
ret
add
add
add
sub
in
test
jge
add
xchg
decb
add
sbb
adc
add
fs
nop
jmp
add
push
mov
leave
nop
jmp
aad
movsl
lahf
xorb
mov
leave
nop
jmp
add
addb
cli
add
push
add
jo
pop
clc
nop
nop
nop
nop
jae
add
add
add
cwtl
add
nop
nop
jae
add
push
sti
pop
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
mov
xor
pusha
clc
nop
nop
nop
nop
jae
add
add
add
dec
add
fs
nop
nop
nop
nop
jae
dec
add
add
pop
push
add
add
nop
nop
nop
nop
jae
cmp
lcall
sub
incb
fld1
clc
nop
nop
nop
nop
jae
xchg
add
jb
popf
add
add
mov
aaa
push
mov
xchg
ret
scas
aad
add
mov
add
popf
add
clc
nop
nop
nop
nop
jae
dec
nop
sbbb
add
jne
clc
nop
nop
nop
nop
jae
aad
dec
movsl
add
test
pusha
clc
nop
nop
nop
nop
jae
add
cwtl
add
imul
xor
pfcmpge
push
mov
leave
nop
jmp
repnz
sbb
nop
push
mov
leave
nop
jmp
add
add
pop
add
icebp
nop
push
mov
leave
nop
jmp
add
add
test
cld
fildl
sar
nop
nop
nop
nop
jae
add
jb
add
dec
sub
push
rol
clc
nop
nop
nop
nop
jae
xchg
fimull
jne
lcall
nop
push
mov
leave
nop
jmp
mov
mov
or
dec
jb
fildl
jns
clc
nop
nop
nop
nop
jae
add
sti
add
add
sti
jb
clc
nop
nop
nop
nop
jae
add
add
lahf
jne
lcall
add
nop
nop
nop
nop
jae
add
dec
cmp
cwtl
lret
push
push
mov
xchg
ret
ret
add
cld
jo
add
add
roll
nop
nop
nop
nop
jae
add
xchg
add
mov
sub
pop
push
mov
xchg
ret
lods
add
add
xor
add
sub
cli
nop
push
mov
leave
nop
jmp
aad
fs
xor
add
add
lahf
fistpl
clc
nop
nop
nop
nop
jae
sti
or
adcb
addr16
push
mov
xchg
ret
mov
aad
add
add
fiaddl
std
mov
clc
nop
nop
nop
nop
jae
jb
add
into
es
pop
mov
clc
nop
nop
nop
nop
jae
add
mov
cwtl
mov
mov
xchg
ret
into
nop
add
add
add
jo
jle
or
pop
and
nop
nop
nop
nop
jae
add
add
add
sub
into
add
push
test
dec
jne
rcrb
nop
nop
nop
nop
jae
add
add
scas
cwtl
push
add
lahf
rcr
sbb
push
mov
xchg
ret
cmp
lcall
push
xchg
or
nop
nop
nop
jae
add
nop
aad
add
arpl
icebp
nop
push
mov
leave
nop
jmp
add
add
xchg
mov
xor
clc
nop
nop
nop
nop
jae
xchg
add
add
or
add
sub
nop
nop
nop
nop
jae
fistpl
add
popf
add
pop
or
stos
lea
nop
push
mov
leave
nop
jmp
scas
pop
movsl
add
into
dec
add
into
jno
nop
push
mov
leave
nop
jmp
fiaddl
scas
add
push
add
stc
mov
clc
nop
nop
nop
nop
jae
xchg
add
add
nop
fiaddl
xchg
fidivrs
ss
xor
clc
nop
nop
nop
nop
jae
add
pop
scas
add
andl
in
leave
nop
jmp
add
mov
dec
fwait
push
mov
xchg
ret
cmp
mov
jb
add
cld
add
fistpl
nop
push
mov
leave
nop
jmp
mov
xor
add
mov
jno
inc
add
dec
add
add
imul
mov
incb
nop
nop
jae
add
add
add
lcall
xor
clc
nop
nop
nop
nop
jae
add
add
mov
mov
pop
push
inc
add
popf
xor
add
int
mov
rolb
mov
clc
nop
nop
nop
nop
jae
es
add
mov
nop
add
fimuls
mov
dec
push
clc
nop
nop
nop
nop
jae
add
test
add
pop
mov
nop
push
mov
leave
nop
jmp
add
xor
add
push
xchg
and
clc
nop
nop
nop
nop
jae
mov
add
jo
mov
push
push
mov
xchg
ret
add
int
fildl
popf
add
sbb
nop
nop
nop
nop
jae
rolb
addb
add
push
clc
nop
nop
nop
nop
jae
add
xor
add
sti
xor
add
pop
pop
push
mov
xchg
ret
xchg
sub
cwtl
add
movsl
add
add
lahf
sub
cmpsb
and
repnz
nop
nop
nop
nop
jae
sub
add
clc
lret
pop
nop
push
mov
leave
nop
jmp
addb
add
add
call
clc
nop
nop
nop
nop
jae
shrb
lcall
lods
and
mov
xchg
ret
jne
mov
scas
add
sub
pop
lahf
pop
nop
push
mov
leave
nop
jmp
mov
add
movsl
push
cld
ret
push
clc
nop
nop
nop
nop
jae
popf
cwtl
add
lods
addb
add
add
dec
test
nop
push
mov
leave
nop
jmp
xchg
cwtl
add
add
mov
add
nop
movsl
add
outsl
stc
push
add
add
push
mov
xchg
ret
xchg
or
add
dec
add
mov
mov
xchg
ret
add
xchg
int
xchg
add
clc
std
lods
clc
nop
nop
nop
nop
jae
lcall
dec
dec
add
add
clc
nop
nop
nop
nop
jae
pop
lcall
push
scas
sti
xchg
ss
push
nop
push
mov
leave
nop
jmp
mov
add
add
xchg
add
jne
add
out
push
mov
xchg
ret
scas
rclb
jo
add
cld
add
clc
nop
nop
nop
nop
jae
add
addb
add
xchg
sti
clc
nop
nop
nop
nop
jae
lahf
add
xchg
lcall
fmull
scas
enter
nop
nop
jae
add
xor
add
mov
loop,pt
and
mov
leave
nop
jmp
dec
cwtl
scas
add
xchg
add
cwtl
test
sub
in
leave
nop
jmp
add
add
add
add
add
push
clc
nop
nop
nop
nop
jae
add
dec
push
add
jb
fistpl
clc
nop
nop
nop
nop
jae
add
add
sti
sub
in
add
cld
out
mov
out
add
jae
add
cld
xchg
mov
clc
nop
nop
nop
nop
jae
add
aad
popf
xor
jo
add
sbb
xor
clc
nop
nop
nop
nop
jae
add
add
add
add
rclb
xor
sub
inc
add
repnz
xchg
mov
jmp
mov
xchg
ret
xchg
add
jb
add
es
rcll
nop
nop
nop
nop
jae
add
test
add
mov
mov
fwait
clc
nop
nop
nop
nop
jae
dec
add
add
add
add
add
mov
xchg
ret
addb
xchg
dec
add
cwtl
add
mov
push
mov
xchg
ret
sbb
pop
ret
add
add
pop
movsl
push
clc
nop
nop
nop
nop
jae
add
mov
add
add
push
push
mov
xchg
ret
cld
add
jb
cmp
jo
nop
add
nop
nop
nop
jae
add
xor
add
adcb
rolb
fisttpll
test
nop
nop
nop
jae
jb
add
ret
cwtl
pop
fisubrl
mov
in
leave
nop
jmp
mov
nop
xchg
es
xor
pop
clc
nop
nop
nop
nop
jae
sub
pop
cli
fistl
add
push
mov
mov
add
add
adc
xor
push
movsb
je
add
imul
clc
nop
nop
nop
nop
jae
dec
add
add
jne
add
cmc
mov
clc
nop
nop
nop
nop
jae
add
add
add
pop
push
mov
xchg
ret
add
cmp
add
push
mov
xchg
ret
add
add
pop
xchg
pop
add
add
mov
clc
nop
nop
nop
nop
jae
pop
add
add
add
add
nop
jae
add
mov
mov
clc
nop
nop
nop
nop
jae
mov
mov
rclb
nop
jmp
add
add
mov
add
mov
stos
iret
mov
push
mov
xchg
ret
into
popf
xchg
or
movsl
add
in
clc
nop
nop
nop
nop
jae
push
add
pop
pop
pop
clc
nop
nop
nop
nop
jae
lods
add
add
movsl
sti
lcall
nop
nop
nop
jae
ficoml
aad
xchg
add
ss
push
call
clc
nop
nop
nop
nop
jae
nop
add
imul
add
nop
nop
nop
jae
xchg
add
add
add
push
xor
aad
ret
shl
nop
push
mov
leave
nop
jmp
add
add
add
add
add
loopne
inc
add
popf
add
add
add
pop
inc
push
clc
nop
nop
nop
nop
jae
lcall
ret
push
shrb
sbb
nop
jmp
xchg
add
cld
mov
int
icebp
loop
clc
nop
nop
nop
nop
jae
pop
xor
add
add
mov
nop
push
mov
leave
nop
jmp
add
mov
xchg
add
adc
push
mov
xchg
ret
jb
aad
add
add
mov
push
push
mov
xchg
ret
add
xor
cmp
add
clc
nop
nop
nop
nop
jae
add
add
jo
lahf
test
movsl
xchg
mov
nop
nop
nop
nop
jae
pop
lcall
add
lods
jmp
push
mov
xchg
ret
add
lcall
sub
cmp
mov
xchg
ret
add
add
dec
add
es
jmp
outsl
inc
add
add
add
add
fcomps
clc
nop
nop
nop
nop
jae
jne
add
add
add
xor
nop
push
mov
leave
nop
jmp
jo
add
fiaddl
es
cmp
add
nop
nop
jae
jo
add
add
popf
xchg
push
mov
xchg
out
call
add
dec
add
add
add
jnp
enter
nop
nop
nop
jae
test
popf
add
test
mov
nop
nop
nop
jae
add
nop
cld
push
add
xchg
lcall
push
adc
mov
leave
nop
jmp
add
pop
add
nop
nop
nop
jae
pop
mov
dec
add
imul
fistpl
push
mov
xchg
ret
fildl
add
add
shlb
lods
push
mov
xchg
ret
dec
xor
add
lods
add
add
int
fsts
mov
xchg
ret
xchg
add
add
pop
sti
add
dec
add
add
sbb
inc
add
add
mov
rorb
add
sahf
test
jne
push
mov
xchg
ret
xor
add
stos
push
mov
mov
jns
mov
adc
xchg
es
mov
call
clc
nop
nop
nop
nop
jae
ret
add
add
add
and
clc
nop
nop
nop
nop
jae
add
jb
add
add
out
aas
mov
push
mov
xchg
ret
mov
add
ficompl
sub
in
jle
lea
cmp
xchg
lahf
rolb
add
pop
arpl
push
ret
add
add
movsb
lea
dec
inc
add
sbbb
ficompl
add
or
ds
add
push
mov
xchg
ret
add
add
add
dec
add
add
clc
nop
nop
nop
nop
jae
jb
push
add
or
sti
sti
lods
add
dec
movzwl
clc
nop
nop
nop
nop
jae
xchg
cwtl
pop
xor
popf
pop
add
push
jmp
add
xchg
pop
or
mov
pop
xchg
sub
mov
leave
nop
jmp
add
add
dec
add
faddp
fld1
clc
nop
nop
nop
nop
jae
addb
cli
add
jne
mov
es
fld1
clc
nop
nop
nop
nop
jae
add
lcall
xchg
test
add
or
decb
fdivr
nop
nop
nop
nop
jae
add
int
nop
into
shlb
push
imul
jp
cmp
lea
nop
push
mov
leave
nop
jmp
fs
add
ficomps
clc
nop
nop
nop
nop
jae
nop
add
add
clc
nop
nop
nop
nop
jae
xchg
add
push
pop
add
add
add
mov
clc
nop
nop
nop
nop
jae
lcall
cld
add
in
js
push
mov
add
push
das
popf
cltd
nopl
add
jo
inc
rorb
ret
stos
nop
push
mov
leave
nop
jmp
add
popf
add
mov
jge
clc
nop
nop
nop
nop
jae
mov
or
cwtl
into
add
pop
nop
push
mov
leave
nop
jmp
pop
add
add
cli
add
sub
adc
add
jnp
add
add
leave
pop
add
add
add
nop
nop
nop
nop
jae
ret
cwtl
mov
lahf
add
rolb
imul
xor
add
sarb
add
mov
clc
nop
nop
nop
nop
jae
cmp
add
sbb
add
xchg
mov
add
lahf
add
popf
add
aaa
push
push
mov
xchg
ret
xor
repnz
pop
mov
fs
push
iret
push
push
mov
xchg
ret
rolb
pop
sub
add
cmp
loope
xchg
jmp
call
nop
jmp
add
push
cmp
ret
mov
add
clc
nop
nop
nop
nop
jae
add
add
lods
add
lahf
push
nop
push
mov
leave
nop
jmp
add
cmp
imul
lahf
add
nop
dec
call
clc
nop
nop
nop
nop
jae
add
sti
add
aad
jp
push
clc
nop
nop
nop
nop
jae
add
push
rolb
add
mov
add
lret
je
nop
push
mov
leave
nop
jmp
mov
pop
or
mov
cmp
push
mov
leave
nop
jmp
addb
int
mov
es
pop
nop
push
mov
leave
nop
jmp
add
cld
add
add
add
lods
mov
nop
nop
jae
add
add
dec
mov
shl
call
add
lcall
xchg
dec
add
add
addb
mov
clc
nop
nop
nop
nop
jae
add
pop
add
add
cmp
stc
add
add
nop
nop
nop
nop
jae
repnz
add
xchg
add
clc
push
mov
mov
add
mov
add
jb
sub
add
addl
in
add
cld
clc
nop
nop
nop
nop
jae
add
add
xor
xchg
pop
jno
les
clc
nop
nop
nop
nop
jae
lcall
add
fisubs
add
cmpsb
nop
hlt
adc
decl
add
add
into
cwtl
add
push
add
xchg
push
mov
xchg
ret
lcall
nop
shlb
addr16
push
mov
xchg
ret
add
pop
jne
jne
imul
sti
add
js
je
clc
nop
nop
nop
nop
jae
add
mov
js
aaa
lea
clc
nop
nop
nop
nop
jae
mov
pop
add
add
add
mov
clc
nop
nop
nop
nop
jae
jne
add
pop
xor
repnz
dec
insl
push
mov
ret
add
add
clc
add
sbb
inc
je
pop
add
shr
inc
out
clc
nop
nop
nop
nop
jae
cmp
or
lahf
add
repnz
ss
nop
nop
nop
jae
add
sti
add
fiadds
lcall
push
push
mov
xchg
ret
ret
add
ficompl
mov
jns
push
or
nop
nop
nop
nop
jae
add
scas
aad
add
add
push
mov
xchg
ret
sub
pop
lcall
push
mov
xchg
ret
movsl
es
xchg
imul
xor
fmuls
xchg
jae
add
cwtl
add
add
mov
add
dec
addr16
nop
push
mov
leave
nop
jmp
or
imul
add
push
push
mov
xchg
ret
add
ret
add
jb
es
cmp
nop
nop
nop
nop
jae
es
mov
cmc
pop
clc
nop
nop
nop
nop
jae
lcall
pop
pop
push
into
orb
sbb
nop
nop
nop
nop
jae
add
andb
dec
add
sbb
incb
pushf
and
nop
nop
nop
nop
jae
pop
push
xchg
add
add
clc
nop
nop
nop
nop
jae
scas
popf
add
rolb
mov
dec
add
nop
push
mov
leave
nop
jmp
add
add
clc
nop
push
mov
leave
nop
jmp
pop
xor
fmulp
xchg
int
xchg
rol
cwtl
mov
push
mov
leave
nop
jmp
add
add
into
add
mov
leave
nop
jmp
add
add
xchg
xchg
aad
xorl
clc
nop
nop
nop
nop
jae
movsl
fisubs
mov
clc
nop
nop
nop
nop
jae
add
sti
add
add
push
add
inc
xor
jbe
add
push
mov
xchg
ret
imul
scas
lahf
add
add
push
add
pop
push
mov
xchg
ret
cli
add
xchg
jo
add
add
add
scas
cmpsl
push
push
mov
xchg
ret
push
add
add
add
jb
push
mov
xchg
ret
imul
add
int
add
into
add
test
xchg
ret
pop
cmp
jo
popf
mov
add
xor
rcll
mov
xchg
ret
add
nop
add
add
add
mov
inc
sub
nop
nop
nop
nop
jae
add
mov
pop
imul
inc
jp
nop
push
mov
leave
nop
jmp
ficoml
imul
int
add
mov
mov
leave
nop
jmp
add
repnz
scas
add
cli
add
add
add
pusha
add
inc
decb
add
push
mov
xchg
ret
xchg
pop
dec
pop
add
add
add
mov
mov
xchg
ret
xor
xor
popf
pop
xchg
add
and
jbe
or
nop
nop
nop
jae
cwtl
add
add
add
repnz
fs
push
clc
nop
nop
nop
nop
jae
dec
add
add
mov
cmp
lds
nop
nop
jae
pop
add
scas
mov
push
push
mov
xchg
ret
mov
add
xor
add
fidivs
movzwl
clc
nop
nop
nop
nop
jae
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
nop
push
mov
leave
nop
jmp
ficompl
xchg
add
add
popf
xchg
cwtl
data16
stc
push
mov
cwtl
inc
mov
add
add
aas
add
gs
xchg
dec
push
inc
push
mov
sub
add
add
repz
mov
mov
movsb
arpl
nop
nop
jae
test
mov
popf
lods
shrb
out
test
in
leave
nop
jmp
add
add
cwtl
imul
add
add
push
mov
leave
nop
jmp
dec
es
int
add
dec
inc
add
subb
incb
push
mov
daa
pop
add
jecxz
add
add
add
mov
xchg
clc
nop
nop
nop
nop
jae
xchg
add
cwtl
scas
scas
add
nop
push
mov
leave
nop
jmp
add
add
add
mov
nop
nop
nop
jae
add
add
xchg
mov
add
push
decb
nop
nop
nop
nop
jae
add
add
add
xchg
jecxz
les
push
mov
leave
nop
jmp
add
popf
mov
mov
and
push
mov
leave
nop
jmp
fcmovu
push
add
add
xor
and
xlat
add
nop
push
mov
leave
nop
jmp
movsl
add
add
addr16
clc
nop
nop
nop
nop
jae
shlb
pop
popf
fiaddl
add
add
dec
add
push
test
idiv
clc
nop
nop
nop
nop
jae
add
xor
add
push
mov
leave
nop
jmp
movsl
add
add
mov
sti
push
fisttpl
test
clc
nop
nop
nop
nop
jae
rclb
push
mov
jle
push
mov
xchg
ret
add
add
add
xor
adc
in
and
test
nop
nop
nop
nop
jae
cwtl
add
xchg
push
fiadds
inc
incb
mov
addb
or
ret
fiadds
mov
repnz
add
dec
cld
mov
push
push
mov
xchg
ret
pop
add
rolb
add
popf
add
hlt
or
les
add
add
add
add
les
push
mov
leave
nop
jmp
jne
lods
push
add
outsb
mov
fwait
mov
push
mov
xchg
ret
mov
add
int
repnz
nop
push
mov
leave
nop
jmp
fiaddl
into
add
jo
add
pop
nop
dec
adc
cmpw
nop
push
mov
leave
nop
jmp
xor
dec
add
add
adc
cmp
add
xor
add
add
test
xchg
inc
fwait
push
mov
xchg
ret
add
xchg
xchg
dec
pop
jb
jo
mov
push
clc
nop
nop
nop
nop
jae
nop
lahf
add
fildl
pop
mov
xlat
lea
push
mov
xchg
ret
xchg
cmp
aad
repnz
pop
sti
add
popa
clc
nop
nop
nop
nop
jae
add
fiaddl
add
add
mov
xchg
ret
add
add
repnz
cmpsb
add
adc
nop
nop
nop
jae
nop
add
mov
mov
adc
jne
nop
push
mov
leave
nop
jmp
add
add
add
decb
push
mov
leave
nop
jmp
add
sti
add
add
nop
nop
nop
nop
jae
xchg
add
add
add
add
clc
fisubl
add
clc
nop
nop
nop
nop
jae
mov
add
sub
fistpl
push
mov
leave
nop
jmp
cld
xchg
aad
add
ficoms
rolb
or
in
leave
nop
jmp
add
pop
add
and
imul
stc
pop
out
cmp
stos
jbe
cltd
add
adc
fldl
movsb
add
sub
nop
nop
nop
nop
jae
add
add
add
xchg
rcl
jne
clc
nop
nop
nop
nop
jae
add
add
sti
aad
mov
push
mov
xchg
ret
dec
add
xor
fcmovnu
fistpl
push
mov
xchg
ret
xor
fildl
lods
scas
add
lcall
loopne
clc
nop
nop
nop
nop
jae
rorb
add
ljmp
clc
nop
nop
nop
nop
jae
add
sbbb
xor
jge
nop
push
mov
leave
nop
jmp
fiaddl
xchg
xor
add
push
push
mov
xchg
ret
or
add
add
add
push
jne
jmp
nop
nop
jae
mov
repnz
and
jbe
add
mov
nop
nop
nop
jae
pop
sti
add
add
pop
add
mov
or
mov
jae
add
sti
add
dec
add
pop
dec
add
add
rep
clc
nop
nop
nop
nop
jae
fiaddl
add
add
add
and
mov
fwait
stos
push
mov
xchg
ret
jb
lcall
add
pop
rcr
mov
clc
nop
nop
nop
nop
jae
add
jb
add
fidivs
jo
push
clc
nop
nop
nop
nop
jae
add
add
add
jne
add
xor
call
clc
nop
nop
nop
nop
jae
cwtl
mov
lahf
cwtl
stos
inc
mov
nop
push
mov
leave
nop
jmp
cld
xor
fiaddl
fidivs
mov
add
nop
push
mov
leave
nop
jmp
add
es
imul
ficompl
dec
push
nop
push
mov
leave
nop
jmp
add
add
add
nop
or
lret
clc
nop
nop
nop
nop
jae
popf
add
add
lods
add
in
add
add
stos
jl
and
xor
movb
add
mov
pop
clc
nop
nop
nop
nop
jae
add
xchg
popf
ret
int3
mov
imul
in
leave
nop
jmp
add
add
xor
nop
nop
nop
jae
add
dec
sub
add
lods
cld
add
setnp
nop
nop
nop
nop
jae
lahf
add
sub
add
xor
popf
dec
pop
and
push
into
mov
in
add
push
clc
cmpb
xchg
sarl
add
fucomi
add
lret
clc
nop
nop
nop
nop
jae
or
push
mov
add
add
decb
fistpl
nop
push
mov
leave
nop
jmp
dec
add
add
movsl
xor
add
rcrb
mov
clc
nop
nop
nop
nop
jae
fcmovne
add
mov
rcr
push
push
push
mov
xchg
ret
add
add
pop
lods
dec
cmp
xchg
add
aad
add
push
mov
xchg
ret
int
push
fiaddl
xchg
xor
es
add
fcomp
pop
fistpl
clc
nop
nop
nop
nop
jae
add
xor
mov
sub
add
push
mov
add
bound
outsl
out
mov
arpl
mov
adc
mov
xchg
ret
add
push
add
xchg
sti
add
test
push
mov
xchg
ret
add
xor
add
mov
add
add
dec
mov
jmp
incl
add
add
rcrb
movsl
add
adcb
add
nop
nop
nop
nop
jae
rolb
lahf
pop
add
add
iret
push
push
mov
xchg
ret
fiadds
add
sub
into
jne
add
mov
mov
xchg
ret
dec
add
xchg
add
push
test
add
add
data16
xchg
ret
es
sub
push
push
mov
xchg
ret
test
cwtl
addb
pop
jb
hlt
fistps
mov
xchg
ret
add
popf
dec
test
add
add
jne
std
subl
clc
nop
nop
nop
nop
jae
cli
es
nop
dec
fistl
mov
sahf
ljmp
clc
nop
nop
nop
nop
jae
add
cwtl
lahf
xor
sti
shl
jmp
nop
jae
pop
add
cld
into
movsl
add
jne
add
stos
jmp
add
add
xchg
add
add
push
mov
nop
nop
jae
add
dec
add
aad
add
and
decb
pop
fdivr
clc
nop
nop
nop
nop
jae
scas
jb
push
add
add
mov
in
add
xchg
add
mov
stos
addb
repnz
inc
dec
xor
clc
nop
nop
nop
nop
jae
scas
xchg
rolb
xchg
pop
movsl
jne
add
nop
push
mov
leave
nop
jmp
add
xor
mov
inc
push
mov
xchg
ret
add
push
xchg
pop
cld
popf
add
push
sahf
scas
jae
clc
nop
nop
nop
nop
jae
fildl
pop
movsl
rolb
xchg
rclb
dec
add
push
mov
leave
nop
jmp
jo
sub
test
sti
stos
clc
nop
nop
nop
nop
jae
add
jne
add
repnz
or
pop
inc
add
cld
xchg
or
cwtl
add
jne
add
xorb
mov
cmp
imul
push
add
pop
add
scas
cmp
clc
nop
nop
nop
nop
jae
mov
mov
xchg
pop
jg
ret
add
nop
nop
nop
nop
jae
fisubl
scas
mov
popa
clc
nop
nop
nop
nop
jae
add
fidivs
fildl
cwtl
and
mov
xchg
ret
scas
lcall
popf
add
add
mov
clc
nop
nop
nop
nop
jae
fisubs
dec
add
add
xchg
mov
nop
push
mov
leave
nop
jmp
repnz
addb
add
jb
cltd
mov
clc
nop
nop
nop
nop
jae
pop
add
cwtl
add
orb
adc
add
nop
jmp
orb
cld
add
push
mov
xchg
ret
rclb
add
pop
stc
add
nop
push
mov
leave
nop
jmp
jo
add
add
xchg
dec
push
mov
add
add
sahf
jecxz
jmp
add
ffree
add
inc
clc
nop
nop
nop
nop
jae
pop
popf
add
add
pop
cwtl
add
rclb
nop
jmp
add
add
testl
nop
nop
nop
nop
jae
int
add
add
test
and
arpl
sbb
clc
nop
nop
nop
nop
jae
dec
fiadds
pop
add
add
add
add
clc
nop
nop
nop
nop
jae
add
add
mov
add
mov
call
nop
jae
add
repnz
add
addb
add
cltd
add
clc
nop
nop
nop
nop
jae
pop
scas
nop
xchg
add
xchg
pop
add
fcoms
xor
clc
nop
nop
nop
nop
jae
ficompl
sbb
add
nop
nop
nop
nop
jae
scas
pop
sti
add
add
pop
pop
sti
jl
or
push
push
jl
push
push
mov
xchg
ret
jne
mov
add
add
pop
popf
mov
stos
clc
nop
nop
nop
nop
jae
mov
add
xor
add
or
nop
nop
nop
nop
jae
into
pop
add
dec
add
add
adc
clc
nop
nop
nop
nop
jae
dec
mov
xchg
push
rcrl
mov
xchg
ret
sti
xor
add
pop
mov
ret
scas
add
add
outsb
cli
sub
nop
nop
nop
nop
jae
mov
add
lahf
add
test
out
clc
nop
nop
nop
nop
jae
add
mov
add
decb
nop
nop
nop
nop
jae
xchg
pop
dec
cmp
lahf
mov
dec
push
mov
xchg
ret
mov
fiadds
add
sar
mov
clc
nop
nop
nop
nop
jae
add
aad
add
fs
add
sub
clc
nop
nop
nop
nop
jae
add
add
push
repnz
add
xchg
lea
push
mov
xchg
ret
add
cmp
popf
imul
xlat
clc
nop
nop
nop
nop
jae
xor
xchg
nop
scas
scas
add
add
add
outsl
rclb
inc
andl
sbb
loopne
pusha
push
mov
xchg
ret
add
add
int
add
mov
push
mov
leave
nop
jmp
pop
dec
xchg
add
add
add
add
mov
push
mov
xchg
ret
add
xor
add
add
add
sub
arpl
nop
nop
nop
nop
jae
adcb
add
sar
nop
nop
nop
nop
jae
scas
xchg
add
add
add
xor
add
aad
push
mov
xchg
ret
add
add
xor
mov
movsl
xchg
xchg
rolb
add
add
in
leave
nop
jmp
or
imul
add
inc
add
daa
mov
clc
nop
nop
nop
nop
jae
xchg
add
dec
lahf
sarb
xchg
jo
add
adc
cld
clc
nop
nop
nop
nop
jae
add
lcall
xor
mov
push
clc
nop
nop
nop
nop
jae
add
add
addb
xchg
dec
fistl
push
mov
leave
nop
jmp
add
add
rcr
add
mov
adc
nop
nop
nop
nop
jae
pop
add
mov
cmp
clc
nop
nop
nop
nop
jae
add
add
dec
test
nop
push
mov
leave
nop
jmp
add
nop
push
lcall
push
mov
xchg
ret
add
ret
add
add
cwtl
add
dec
lcall
clc
nop
nop
nop
nop
jae
add
add
jo
fidivs
inc
push
mov
sbb
pop
add
cmp
call
in
add
orl
nop
nop
jae
xchg
lcall
ja
rclb
nop
jmp
into
pop
add
xor
xor
add
and
call
nop
jmp
add
add
jo
add
add
clc
nop
nop
nop
nop
jae
mov
add
xor
fistpl
push
mov
xchg
ret
xor
pop
jne
add
mov
jno
call
nop
nop
jae
pop
dec
xchg
jo
sub
add
in
add
int
xchg
or
add
add
push
add
and
pop
push
icebp
movsb
xor
rcrl
jl
xchg
push
int3
pop
in
add
movsl
repz
js
and
inc
jp
jmp
iret
mov
sbbl
mov
into
loop,pt
fnstsw
shll
in
inc
scas
mov
out
into
ds
or
mov
sti
les
adc
mov
test
jno
je
xchg
add
fidivl
fadd
mov
aaa
insb
testl
and
scas
sti
xchg
aad
sti
out
es
adc
ss
sbbl
pushf
out
adc
jb
fisttps
mov
pop
icebp
xchg
arpl
jb
jns
or
fs
fistps
mov
rclb
push
xor
adc
add
mov
fisttpll
cs
xchg
lea
sbb
clc
pop
lret
or
popf
cmp
ficompl
lret
and
cmp
add
inc
add
test
ds
je
mov
jo
int
jo
lret
sarl
lock
add
jp
inc
add
loop
jl
adc
dec
jno
insb
sbb
push
mov
or
cwtl
mov
pop
lock
dec
jne
push
jge
adc
sub
push
inc
stos
pushf
push
inc
push
mov
hlt
mov
mov
jp
adc
icebp
sub
xor
dec
movsl
jge
incb
adc
push
decb
ret
pop
add
mov
test
add
loope
pushf
fs
xchg
jnp
ret
mov
repz
cs
cmp
clc
incb
call
xor
add
sub
inc
add
xor
out
test
mov
into
cmpb
xchg
push
xchg
or
fmuls
mov
cltd
jmp
imul
out
fs
roll
loopne
in
iret
jp
cmp
push
neg
gs
imul
or
dec
mov
xchg
inc
xchg
decb
incb
cltd
inc
mov
add
jmp
lahf
or
movb
incb
mov
xor
addr16
shll
mov
push
jl
sar
xchg
mov
test
cmpsl
push
xor
jbe
pop
lret
pop
inc
xchg
nop
dec
aam
aam
mov
mov
mov
xchg
pushf
test
hlt
shr
cmp
and
incb
pop
mov
int
stc
outsl
add
decb
rol
in
xor
adc
es
adc
lcall
push
arpl
scas
push
fsubs
jns
xchg
jns
sbb
adc
push
loopne
push
out
push
xchg
pop
out
call
jnp
xchg
popa
mov
mov
cs
mov
in
pusha
dec
insb
add
mov
push
repz
push
mov
mov
xor
decb
push
jmp
add
in
testl
jne
scas
out
test
pop
shl
icebp
sub
lods
push
mov
jg
mov
out
sub
popa
popa
mov
stc
bsf
sub
mov
aad
sbb
add
int
adc
std
xchg
mov
aas
test
in
cmp
gs
or
filds
sbb
xor
repz
repnz
dec
inc
mov
dec
xor
dec
mov
das
out
or
push
mov
in
add
popa
xor
jne
sub
push
push
or
lods
je
pusha
cmpsb
dec
push
loopne
and
cmp
stos
fxch
fld
inc
adc
cmp
loopne
and
incb
das
mov
adc
icebp
dec
xchg
push
or
aas
add
push
dec
push
mov
fcmovu
cmp
fistpll
cli
movsl
outsl
mov
xchg
sub
out
fwait
hlt
pop
roll
pop
pop
iret
mov
outsl
jns
mov
mov
xor
scas
inc
add
scas
mov
adc
xchg
rcll
ds
mov
add
inc
add
cmc
stc
mov
sahf
dec
add
ret
decb
scas
in
push
xchg
iret
xchg
fs
jae
sub
inc
mov
popf
or
jmp
sub
test
jp
lds
push
jg
ret
rcrb
cmp
sbb
sarb
jno
add
in
ljmp
add
jnp
mov
cmp
xchg
mov
cld
xchg
popa
dec
ss
dec
cli
subl
jo
jae
adc
adc
xor
jle
dec
add
std
push
ds
aas
rorl
pop
push
subl
es
mov
cld
mov
out
push
das
in
xlat
or
ret
push
imul
push
incb
add
pop
push
out
add
pop
pop
xchg
daa
cmpsl
cld
movsl
call
sub
push
inc
incb
jge
enter
and
decb
inc
sti
mov
jo
scas
push
pop
loopne
add
xchg
jmp
jle
xchg
test
jl
mov
push
push
mov
jo
mov
es
mov
add
inc
add
inc
add
or
inc
xor
aam
sarl
sub
decb
ja
fcomi
les
add
mov
xchg
ja
pop
and
incb
scas
mov
nop
cld
or
incb
inc
test
pop
stc
adc
das
jp
push
in
add
cmpl
sti
in
or
add
sarl
push
loope
out
pop
sub
imul
jg
pop
repz
mov
mov
ss
fcmovb
jnp
scas
fs
cmp
movsb
xlat
sbb
or
sub
add
imul
test
dec
popa
xchg
push
add
enter
ja
aam
mov
sti
dec
and
sub
dec
shr
stos
inc
add
mov
incl
incb
lcall
jns
data16
js
int
push
pop
fiadds
insb
add
cmpsb
je
mov
sarb
and
pop
dec
inc
gs
data16
add
subl
andb
or
push
ss
jnp
mov
incb
repnz
jbe
push
push
or
add
stc
pop
aaa
in
stc
pusha
stc
mov
aas
or
mov
decb
push
scas
aam
mov
mov
inc
sti
mov
das
and
add
mov
pop
push
dec
fdivl
cmpsb
jp
jne
jmp
es
pop
dec
add
sahf
subl
dec
add
mov
push
push
jbe
into
cmpsb
dec
xchg
and
decb
and
add
cmp
fcmovnu
pusha
add
sbb
es
cmpsl
xchg
adc
movl
inc
fcoms
cmp
push
popa
xchg
jnp
sbb
int
aam
popf
lds
or
loopne
leave
cmp
stc
inc
jmp
mov
mov
loopne
cltd
xor
fnsave
jl
fisubs
cmc
fldl
decb
incb
mov
mov
pop
test
add
pop
test
aas
mov
nop
jmp
xlat
mov
dec
mov
mov
add
repz
push
sbb
fwait
cmp
lahf
std
push
ljmp
cltd
mov
das
rcr
adc
push
inc
dec
jle
inc
add
daa
sarl
sti
int3
cmp
data16
jmp
add
dec
add
dec
fsubl
pop
lea
and
fldenv
mov
pop
add
xchg
push
in
lcall
xchg
mov
cmpl
test
out
mov
testb
sbb
inc
mov
xlat
out
mov
lods
or
cmpsl
pop
push
inc
add
mov
add
aad
in
jp
adc
jp
sub
frstor
xchg
mov
leave
data16
xchg
data16
fisubrs
add
dec
mov
fwait
xchg
je
fsubl
jnp
cmp
es
pusha
out
mov
incb
pusha
add
faddl
jl
fmuls
repnz
repnz
in
hlt
in
paddw
jmp
rcr
or
pop
jmp
and
sbbl
int
push
aaa
idivl
jmp
fs
das
in
lods
and
push
decb
out
jns
jb
orl
out
xor
add
pop
adc
sbb
cli
mov
lret
incb
adc
cli
fwait
mov
movsb
mov
popa
es
xor
or
xor
ficoml
jmp
jg
add
insb
jns
shl
push
cmp
mov
dec
add
mov
dec
cwtl
dec
push
incb
cmpsl
cmp
and
push
pop
inc
pop
rclb
push
es
mov
fs
cmpsb
out
xor
into
fisubrl
add
movsl
or
in
jecxz
stos
ljmp
xor
incb
jo
push
repz
cmp
scas
jb
mov
inc
jb
aad
pop
clc
and
imul
fdivs
jle
pop
or
dec
add
pop
js
xchg
cmp
decb
decb
out
jno
lahf
or
inc
add
push
sbb
xlat
je
clc
rcl
add
in
incb
adc
adc
mov
decb
rolb
pop
add
lahf
repz
sbb
std
fcoml
pop
xchg
arpl
pop
sub
clc
push
nop
lret
pop
xchg
push
sahf
inc
add
lods
xchg
ds
fisttps
or
xchg
jbe
pop
cli
data16
out
movsl
dec
and
lods
loope
fildll
stos
ja
jmp
inc
add
aaa
push
add
add
incb
sbb
sbb
aam
mov
shlb
insl
dec
cltd
jbe
inc
decb
aas
sub
xor
stos
adc
mov
cmc
xchg
ja
enter
arpl
out
mov
rclb
add
hlt
cmpsl
jnp
add
jecxz
test
test
xchg
or
incb
shll
add
ja
fwait
and
inc
stc
mov
and
mov
mov
sbb
xchg
nop
add
ss
or
faddl
xor
fldl
sbbl
negb
es
arpl
jno
add
pop
mov
xchg
cli
das
dec
xchg
es
inc
xor
mov
xchg
pop
mov
jge
mov
push
push
inc
cli
paddsb
add
into
inc
push
jbe
mov
pusha
aam
add
in
inc
fwait
xchg
rcll
int3
jg
test
mov
and
push
xchg
shlb
pop
adc
pop
lahf
jle
push
cld
ss
stc
xchg
lea
dec
dec
sahf
pmulhuw
sbbl
add
fadd
out
mov
sub
mov
mov
or
inc
filds
movsl
enter
scas
jne
xlat
in
je
add
lret
push
loopne
sbb
fwait
xor
pop
hlt
jmp
fdivs
roll
rcrb
and
mov
pop
daa
jo
add
fidivl
mov
or
decb
out
mov
rolb
pop
sti
mov
test
add
gs
and
sbb
stos
enter
mov
pop
mov
adc
xlat
mov
pop
iret
mov
decb
scas
aad
rclb
decb
jecxz
jns
add
nop
push
rorl
decb
repnz
mov
sub
pop
lods
cwtl
fidivs
push
xor
adc
push
adc
xor
subb
xchg
add
call
test
jb
mov
call
icebp
mov
mov
adc
add
push
into
jne
decb
add
test
mov
push
fcmovnu
push
enter
in
std
jb
pushf
jbe
dec
add
push
add
inc
adc
andl
add
cld
sbb
test
add
sbb
and
mov
call
xor
mov
add
testb
push
shlb
jno
adc
test
pop
jbe
mov
in
push
or
popf
jg
sbb
sub
jmp
jae
fnstsw
sbb
ret
adc
loope
or
decb
das
pop
lahf
lcall
ret
sahf
jnp
lods
adc
add
push
dec
or
xor
add
in
push
leave
sbb
negl
mov
jp
rcl
movsb
add
xor
jmp
and
add
shr
jns
push
mov
sub
es
jno
xchg
in
sarl
pop
loopne
out
pop
shlb
fwait
push
pop
repz
xchg
cmp
lcall
jle
jl
jno
add
and
incb
pop
inc
mov
sahf
jl
and
and
pslld
add
aam
addr16
inc
into
aad
ljmp
outsl
insb
decb
add
outsl
lret
mov
das
inc
mov
inc
add
sti
xchg
rorb
push
call
and
cmp
xchg
mov
xlat
dec
dec
je
inc
jmp
stc
and
decb
inc
incb
cmc
sbb
sti
mov
stos
inc
and
pop
pop
lods
bt
mov
test
shlb
or
decb
data16
jmp
pop
out
or
mov
fcmove
xchg
inc
ret
ja
decb
add
cli
sbb
jo
scas
sbb
cld
mov
pushf
dec
cwtl
xlat
or
sbb
and
mov
loop
add
mov
mov
shr
fwait
xchg
inc
cwtl
lahf
push
stos
sub
add
rcr
jecxz
push
nop
pop
je
pop
mov
pop
nop
jo
in
cli
test
ja
xchg
rorb
xchg
mov
add
pop
icebp
stc
mov
insl
xchg
test
xchg
adc
jl
cmpsb
cmp
jp
add
in
xchg
push
into
mov
add
cmpsl
test
and
fcmovu
jg
stos
rol
and
inc
sub
push
mov
fs
xchg
popf
or
push
xor
test
push
cltd
loopne
add
and
jg
das
int
rcll
pop
adc
add
xlat
scas
push
es
push
adc
xchg
or
rorl
xor
ret
test
incl
mov
add
lahf
cmpb
mov
jmp
dec
push
rcl
fcom
or
dec
cmp
aad
movsb
rcrb
add
inc
fmull
scas
and
gs
je
xchg
or
pop
test
pop
add
sbb
pop
xor
mov
in
out
jne
inc
sbb
fdivs
andl
sbb
xor
es
data16
dec
xor
repz
jp
push
decl
mov
lds
mov
dec
incb
add
rcl
mov
mov
or
ja
ss
cmc
cmp
push
imul
adc
jne
jnp
xchg
fldl
push
xor
cmp
test
outsl
mov
xlat
loopne
sub
push
js
test
mov
mov
pop
bound
incb
dec
add
xchg
xchg
leave
orl
push
sbb
movb
xchg
and
xor
xor
push
aas
ret
leave
pop
daa
or
xchg
xor
decb
sbb
mov
inc
add
cmp
dec
xor
inc
cltd
dec
pusha
add
in
inc
and
decb
std
fwait
mov
in
ds
sbb
and
dec
adc
cmc
fwait
popa
dec
add
sub
pop
ret
mov
cmp
lret
and
cmp
sbb
sub
sbb
mov
push
mov
pop
fnstsw
push
mov
and
mov
rorl
and
mov
jg
mov
lahf
xchg
mov
sub
and
sbb
cmc
jo
mov
cmp
aas
jp
scas
scas
fisttpll
outsl
in
jecxz
or
rcr
loopne
mov
or
jne
push
and
enter
add
inc
add
js
mov
cld
notl
add
adc
mov
pop
lds
pop
popf
inc
add
movsl
pop
sub
xchg
push
scas
inc
sarl
mov
data16
mov
leave
pop
pop
push
dec
xlat
int3
hlt
daa
scas
xchg
lahf
or
call
pop
lahf
mov
fwait
add
xchg
test
cwtl
leave
data16
imul
lret
outsl
jg
pop
insb
rol
int3
clc
je
jl
leave
fldenv
add
jle
jmp
jb
aaa
cmp
xor
jge
std
adc
cs
incb
add
aas
shlb
add
call
repnz
pushf
daa
mov
call
je
pop
mov
cltd
ret
call
hlt
je
ret
or
pop
or
incb
decb
pusha
decb
and
sbb
mov
out
fimull
mov
cld
cwtl
dec
xor
mov
xor
pop
aad
cmp
movb
das
inc
add
and
test
popf
push
cmp
notl
repnz
hlt
and
out
pusha
add
sbb
pop
pusha
add
mov
rcrb
cli
out
popf
cmc
pop
and
call
jge
jmp
jle
rcr
scas
pusha
push
cli
es
add
incb
cwtl
clc
push
daa
sub
sub
das
mov
dec
loope
in
mov
or
popa
hlt
mov
pop
fisubrl
mov
test
scas
pusha
ss
std
mov
in
cld
adc
das
pslld
leave
mov
lods
xor
add
adc
in
dec
in
lret
jle
push
js
cli
scas
adc
out
push
ret
out
lds
or
push
popa
test
add
in
inc
fs
xchg
pop
stc
mov
outsl
mov
nop
push
mov
jmp
cmc
jno
mov
cmp
sub
fidivrs
sub
jae
dec
or
xor
add
test
adc
je
repnz
cmp
ss
addr16
mov
mov
shlb
mov
push
int3
out
test
daa
dec
pushf
jbe
push
fdivl
push
cld
cmc
cmp
popf
jg
insl
cmp
call
mov
sti
jae
jg
add
test
xchg
jo
fwait
mov
xchg
into
adc
aam
dec
jae
jnp
cmp
push
xchg
sbbl
cmp
add
adc
mov
pop
out
fucomip
pop
sub
cmp
cld
mov
mov
adcb
loope
cmpsb
lahf
stc
fisttpll
xchg
fs
incb
fisubrs
decb
adc
push
cmp
data16
rcl
add
mov
inc
sti
push
imul
ficomps
mov
jmp
sbb
ret
or
inc
or
sub
push
mov
stos
or
and
and
ss
inc
out
mov
out
xchg
orl
arpl
mov
loope
cmp
sbb
add
ret
mov
mov
mov
rcll
push
fsubs
decb
sbb
push
mov
or
dec
xchg
mov
or
mov
movl
xor
fcoms
rclb
lret
in
or
sub
dec
cltd
jo
add
movsl
push
frstor
in
inc
sbbl
addr16
and
jg
lea
add
adc
jp
filds
popa
dec
loopne
pop
hlt
mov
sarl
or
in
sbb
add
dec
add
sub
scas
and
xor
xchg
iret
mov
lcall
stos
insb
decb
sbb
call
incb
add
fldt
dec
add
stos
push
jo
loop
pop
pop
jne
jbe
scas
roll
jb
pop
icebp
loop
cmc
xor
adcl
out
or
or
fnstcw
xchg
mov
dec
nop
mov
jb
aaa
es
inc
mov
push
icebp
sahf
fldenv
outsl
clc
sub
outsb
add
js
aaa
fcmovnu
dec
add
loopne
out
adc
fildl
mov
pop
jns
loopne
jl
sarb
inc
dec
decb
sbb
and
sub
mov
incb
out
test
aad
sahf
cmpsl
pop
and
arpl
jns
out
xor
pop
aad
jbe
out
xor
dec
cmp
mov
repnz
out
push
jge
frstor
dec
popa
loopne
mov
in
mov
dec
imul
movsl
xor
fs
incb
inc
add
mov
fs
pop
or
incl
inc
add
xchg
pop
xchg
jge
cs
mov
jb
fistl
cmc
ljmp
bnd
data16
test
add
jb
push
pop
push
mov
mov
add
add
dec
into
cld
jnp
vmovhps
js
sar
inc
jmp
sahf
mov
fcomps
and
mov
lods
call
iret
popa
cmp
fs
fs
push
mov
add
cli
dec
add
icebp
pushf
decl
cwtl
popa
test
jae
add
and
decb
decb
loop
xchg
add
decb
pushf
pop
jb
mov
add
pop
fadds
add
hlt
or
xchg
aaa
int3
mov
lret
inc
push
sbb
mov
adc
cltd
xchg
out
int3
in
stos
adc
add
movsb
add
fs
in
lret
pop
add
adc
and
xchg
mov
pop
dec
add
insl
test
incb
insb
add
dec
stos
scas
mov
xor
sahf
xor
dec
add
int
in
in
lret
dec
add
xor
into
xor
jbe
inc
sbb
cli
pop
lret
enter
mov
adc
pop
call
in
cmpsl
xchg
lock
add
mov
jge
insl
xchg
insl
adc
fs
incb
dec
mov
pop
push
fs
jae
icebp
clc
test
sbb
add
in
fstps
cmpsb
test
cmp
scas
aad
xchg
pop
cmp
mov
or
test
or
out
in
sbb
mov
jle
inc
mull
arpl
xchg
dec
scas
in
aam
fildl
cmpsb
cwtl
xchg
push
cmpsb
cmp
daa
stos
sub
jmp
ret
pop
rcr
lods
aad
dec
cmp
lret
add
sti
lea
movsl
jg
ret
in
iret
test
xchg
sub
lret
out
or
lods
and
sub
test
lods
xchg
sub
add
out
lret
push
shll
jle
cmp
adc
push
ret
dec
push
cmpb
inc
add
pop
jle
imul
dec
add
jno
pop
cs
adc
mov
fsub
inc
pop
aas
das
or
lahf
xor
incb
out
adc
icebp
push
incb
mov
adc
cmpsl
scas
dec
clc
mov
inc
add
xor
mov
cmp
int3
cmpsb
in
adc
dec
incb
cmc
cmp
mov
xchg
cmp
mov
stos
and
mov
mov
aaa
mov
loope
add
repnz
jo
aad
in
jno
pop
mov
xchg
and
in
in
stos
insb
add
push
rolb
lock
cmp
cmp
out
ds
gs
mov
cwtl
sbb
lds
pop
mov
gs
sub
fbstp
cltd
outsl
sti
data16
ss
out
add
decb
mull
jno
into
sti
mov
and
push
xchg
xchg
in
adc
incb
mov
test
xchg
fwait
pop
ret
dec
add
jle
fndisi(8087
aas
pusha
add
aam
dec
das
push
mov
add
vpacksswb
int3
mov
sti
stos
sarl
mov
jne
rcrb
fnstsw
repz
and
push
cmp
sbb
lret
xchg
iret
sub
orb
out
ret
lods
adc
push
or
popf
mov
fiaddl
icebp
cmp
popf
testb
push
xchg
ret
push
mov
xor
push
cltd
stc
push
pop
icebp
dec
ret
add
inc
ss
adc
js
cli
inc
hlt
lret
in
test
sbb
cmp
adc
ljmp
xor
out
xchg
enter
add
pusha
add
adc
cmp
in
mov
cmp
and
decb
insl
icebp
adc
pop
inc
cld
mov
jmp
add
sub
mov
fisubrs
or
pop
dec
out
std
xchg
mov
hlt
mov
pop
out
dec
mov
sbb
and
decb
frstor
pop
cmp
insb
dec
dec
fisubl
out
fs
inc
ret
test
lea
ret
jne
mov
les
pop
or
mov
mov
clc
xchg
push
jb
and
test
fidivrs
mov
int3
sbb
push
xchg
ret
leave
cmc
lcall
cltd
add
mov
test
in
ss
in
stos
popa
pop
push
cmpsl
inc
adc
sub
incb
jle
sub
out
jns
cltd
repnz
loope
inc
bound
sub
jl
sbb
mov
add
insl
sti
and
xchg
mov
xchg
and
sahf
nop
push
aad
mov
push
mov
data16
decb
incb
and
sbb
and
je
jb
scas
mov
xchg
xchg
push
add
test
xor
dec
add
and
aaa
imul
mov
inc
jp
xchg
lret
mov
inc
add
insb
mov
movsb
and
inc
mov
addr16
pop
test
incb
cmp
sbb
fsubrl
cmp
push
inc
add
repnz
dec
incb
dec
sbb
mov
sarb
repz
cmc
es
and
add
adc
outsl
test
xor
daa
ficoms
cmp
in
bound
fwait
or
ds
lcall
add
rcll
push
mov
adc
decb
add
inc
mov
mov
negb
call
das
fs
cmp
fwait
mov
mov
lods
imul
jmp
test
push
inc
incb
xor
inc
lods
loopne
inc
add
ljmp
sub
xchg
out
xchg
es
jmp
in
sbb
or
dec
add
incb
sti
std
loopne
jae
add
call
push
stc
adc
push
pop
dec
popa
fisttpll
push
xor
add
mov
into
cmpsl
pop
lods
dec
cmpsb
push
mov
xor
jnp
dec
cmpsb
imul
mov
pop
inc
add
mov
pusha
cmp
sarl
xchg
fsubr
and
xor
sbb
in
inc
fcoms
ss
push
movsb
sub
cmp
jb
sbb
loopne
xor
add
pushf
in
add
inc
hlt
jecxz
add
aas
cmc
movsb
lods
ret
stos
mov
les
xchg
rcrb
mov
das
test
call
outsb
adc
push
xchg
iret
mov
lahf
test
ret
nop
inc
adc
hlt
xorb
imul
mov
jns
and
imul
cmp
push
push
push
icebp
push
xor
adc
mov
add
decb
decb
add
cld
dec
imul
and
call
sub
imul
scas
dec
or
cmp
outsl
dec
add
inc
add
cmp
lds
ret
mov
or
call
add
fs
outsb
add
aam
add
or
clc
xchg
cmpxchg
mov
outsb
decb
les
jbe
mov
in
push
dec
mov
dec
sub
push
subl
jo
inc
adc
aam
dec
test
mov
dec
inc
add
data16
in
cmc
mov
pop
xchg
xor
lea
dec
add
lds
inc
inc
jecxz
mov
push
mov
or
add
cmp
repz
push
cmpl
jl
add
enter
fadd
into
mov
pop
push
mov
push
int
xchg
scas
cmp
add
loopne
ret
push
fstl
and
mov
push
ret
add
pop
dec
decb
jg
dec
add
mull
shlb
ret
cmp
xchg
outsb
add
ss
add
imul
into
mov
push
push
jbe
cli
pop
xor
jns
adc
jae
xor
ficoms
lret
bound
lahf
stos
repnz
dec
or
xchg
jne
loopne
sub
adc
xchg
dec
adc
fxtract
inc
scas
sbb
int3
jg
out
xchg
rcr
mov
bts
test
xor
les
icebp
mov
add
test
jle
imul
fstps
data16
cmp
decb
pop
jecxz
mov
fwait
pop
movsl
jne
mov
xchg
dec
out
in
movsl
repz
xchg
mov
jne
jl
jbe
into
sbb
xchg
in
lahf
inc
add
pop
iret
cvtps2pd
add
push
incb
in
loope
dec
dec
into
sub
inc
add
loop
lods
aad
inc
addr16
sbb
dec
add
int3
or
xor
pop
push
ds
mov
jecxz
sub
es
xor
imul
stc
stos
or
jns
pop
out
pop
mov
aam
and
fcoms
cmpsb
icebp
les
cltd
push
mov
ss
das
push
out
mov
mov
push
incb
cmp
inc
add
and
sub
adc
lret
jmp
mov
cli
add
sbb
test
movzwl
add
sbb
mov
cwtl
pop
test
pop
pop
lcall
data16
xor
arpl
incb
aam
inc
add
insb
outsl
cmp
jnp
mov
mov
adc
and
scas
xchg
pop
lahf
ret
inc
lcall
movsb
pop
neg
adc
aam
fistps
mov
cmp
es
jne
add
add
popf
push
test
adc
dec
outsl
add
pop
pop
xchg
mov
nop
adc
add
in
lods
aad
cmp
std
mov
mov
pop
movsl
out
mov
mov
add
or
and
icebp
sub
pop
add
decb
and
mov
jb
xchg
xchg
or
adc
and
test
mov
leave
mov
sbb
aaa
iret
push
shll
add
movsl
cld
popf
les
add
fistpl
sbb
cltd
scas
push
mov
xor
mov
mov
mov
decb
setns
mov
lret
xchg
gs
test
out
sbb
sbb
jns
js
loope
mov
nop
inc
dec
loopne
add
stos
cmc
or
pushf
xchg
lcall
sbb
mov
cmp
movsb
pop
add
cmp
pop
lock
cmpsl
adc
mov
jp
dec
push
mov
decb
mov
dec
add
jno
rorb
xchg
sbb
push
sbb
arpl
rcr
test
mov
std
arpl
in
lds
adc
adc
xchg
mov
add
sub
sahf
pop
stos
jne
rcrb
scas
cmovge
add
sub
in
jp
arpl
decb
xor
lds
pop
clc
movsl
xchg
fnstsw
push
cli
jbe
xor
xor
xchg
data16
scas
mov
test
idivb
xlat
in
push
add
insl
inc
incb
dec
icebp
cwtl
fisttps
and
mov
fcmovne
and
inc
jb
data16
push
xor
gs
ljmp
inc
mov
incl
add
sbb
sub
lds
xchg
add
mov
repz
sahf
rorl
adc
dec
jecxz
rcll
xchg
and
lea
idiv
mov
cmp
sbb
adc
mov
adc
scas
push
push
dec
add
mov
stos
das
or
xchg
mov
mov
cmp
data16
fdivl
sahf
adc
jae
dec
test
add
fstpl
cmc
icebp
fwait
ds
mov
jo
sbb
adc
add
les
clc
or
cmp
cmc
adc
xlat
in
push
adc
push
sbb
subl
push
imul
cmc
or
mov
imul
mov
xor
out
add
icebp
push
repz
pushf
pop
cmp
inc
data16
cs
pop
sbb
lahf
ss
sbbb
push
daa
jmp
mov
ret
arpl
mov
mov
adc
mov
sbb
je
add
xchg
xor
incb
xor
in
push
sbb
stos
xor
lods
ja
add
cld
enter
jle
stc
pusha
add
faddl
mov
jne
pop
stos
popa
mov
and
cmp
push
push
lods
cmc
push
xor
clc
ret
movsb
loopne
add
or
shl
pop
push
xor
cld
cmpsb
and
decb
sub
sbb
and
sbb
add
jnp
cmp
sub
mov
cmp
jns
negb
inc
ljmp
nop
adc
xchg
mov
testb
xchg
push
repnz
sbb
dec
sbb
rcr
sbb
adc
and
js
mov
clc
shll
pop
push
out
test
inc
inc
fcmovu
mov
es
in
xchg
imul
xor
inc
add
jecxz
mov
insl
shlb
incb
ja
dec
std
lahf
mov
fisubs
in
ljmp
add
and
pop
outsl
mov
decb
mov
xor
fistps
push
jns
into
add
add
sub
insb
incb
incb
add
and
inc
or
fmull
add
ss
lock
loope
adc
add
ds
stos
sbb
inc
imul
xchg
cmpsb
lods
in
scas
inc
add
add
sbb
cmpsb
inc
imul
mov
es
decb
das
lret
ret
lahf
ja
add
push
ret
cs
sahf
sub
jnp
lock
xchg
sbb
stos
and
push
pop
inc
cs
test
insl
jae
ret
inc
pop
testl
add
mov
add
ja
and
pusha
pop
sbb
fdivrs
or
ss
ljmp
or
hlt
js
ja
sub
jmp
add
add
lods
rorb
xchg
pop
cmp
inc
call
shrl
incb
xchg
popl
test
inc
push
jecxz
ja
pop
lods
lahf
sarb
push
push
shrb
pop
push
push
dec
add
cmpsb
fldcw
xlat
push
imul
orb
push
add
test
jbe
mov
sti
push
sub
pop
jle
mov
cmpsb
mov
dec
cmpb
fstpt
movsb
fildl
push
rclb
jo
mov
adc
dec
and
lahf
in
cmp
std
fwait
jge
jb
mov
ffree
mov
mov
cmpsl
jns
mov
lds
imul
push
daa
das
mov
decl
addr16
cld
mov
and
jnp
pop
insb
add
ror
pop
jle
and
pop
dec
xor
jbe
dec
mov
dec
es
aad
cltd
vmread
add
adc
sbb
sahf
lock
mov
cmp
mov
in
add
and
sti
mov
nop
dec
or
mov
fwait
and
jne
stos
das
out
push
cmpsb
fnstenv
rclb
addr16
and
dec
fists
pop
popa
jb
pop
imul
push
add
jmp
inc
add
push
push
xchg
pushf
imul
rol
inc
ror
inc
pop
sub
imul
nop
jmp
adc
bound
jge
adc
push
pop
mov
adc
cmp
test
out
push
add
andb
add
push
lods
ljmp
cmp
cmp
outsl
gs
xchg
xor
das
les
arpl
and
decb
add
sbb
rcll
int3
mov
mov
andb
sbb
add
hlt
and
mov
mov
cmpsb
sbb
add
jp
fdivs
std
stos
addb
sbb
sahf
aas
mov
pop
push
sbb
jecxz
mov
xchg
add
push
xchg
and
pop
cmp
add
lock
cmpsl
jp
add
sub
jmp
add
mov
incb
cwtl
sub
jecxz
stc
js
es
xchg
inc
incb
jnp
lahf
lock
int3
pop
push
mov
cmp
jg
and
outsb
incb
cmp
add
imul
push
push
daa
insb
inc
jmp
and
test
inc
incb
stc
popl
repnz
mov
lods
outsb
add
imul
mul
sub
clc
lcall
sbb
sub
ja
cmp
add
mov
aad
dec
adc
jp
test
mov
push
mov
movsb
arpl
adc
je
add
and
cmpl
loop
mov
subl
jl
nop
cmp
pop
push
test
ss
ss
outsl
shll
dec
inc
cmp
xor
clc
lahf
popa
and
jns
mov
push
add
insb
mov
inc
add
inc
add
je
xchg
outsb
add
repnz
jns
xchg
push
test
stos
adc
ret
incb
push
jmp
repz
je
call
xchg
fnstsw
hlt
insb
add
inc
add
pop
shrb
dec
xlat
loop
xchg
mov
decb
jmp
loop
incb
hlt
test
stos
clc
mov
mov
pop
pop
mov
xchg
mov
add
std
pop
cwtl
sub
xchg
les
mov
lock
push
hlt
mov
and
pop
lock
js
ret
or
mov
add
enter
lret
lahf
mov
adc
incb
add
popf
std
testb
xchg
mov
scas
dec
sub
cmp
incb
lock
mov
inc
sub
lock
mov
mov
sub
inc
decb
mov
shll
inc
icebp
mov
add
mov
add
mov
push
mov
inc
stc
das
mov
out
xor
mov
pushl
es
xchg
mov
lahf
imul
rcrl
enter
jne
or
xor
add
pop
adc
sbb
incb
xchg
jns
sbb
popa
mov
loopne
insb
incb
scas
movsb
sub
add
inc
add
and
clc
dec
ret
or
sub
movsl
in
sbb
scas
adcl
cmpl
add
add
out
dec
incb
cmp
push
cmp
add
packsswb
shrl
incb
lea
add
or
pop
lods
xor
cvtps2pi
mov
jmp
outsb
in
ficoml
push
add
xchg
insb
push
stos
mov
cmpsb
cmc
lahf
cmovae
fmull
add
shll
adc
test
xchg
pushf
push
inc
sbb
les
cmc
in
jbe
and
push
add
jge
loopne
frstor
add
jnp
mov
mov
dec
sarb
mov
incb
decb
out
loope
dec
push
push
fs
jbe
cltd
push
pusha
add
iret
das
sub
add
sbb
push
dec
out
add
xlat
xchg
inc
decb
incb
lds
push
push
cmp
dec
test
andl
add
sti
inc
ds
data16
dec
lods
and
ljmp
mov
sbb
out
jbe
xchg
aam
out
cs
call
push
xor
js
adc
ja
jmp
dec
incb
jae
es
sub
mov
arpl
popa
lock
test
push
sub
jae
jl
mov
add
xor
adc
pop
sub
incb
add
sbbb
outsb
add
aad
add
add
les
sub
push
jnp
pop
dec
mov
jb
int
mov
shll
cmp
mov
add
aam
or
pop
jmp
pop
mov
cmp
lcall
push
cmp
mov
lods
insl
imul
push
xchg
int3
enter
dec
add
repz
cs
mov
jnp
movl
lds
inc
inc
mov
cmc
inc
add
sbb
out
xchg
inc
std
fidivrl
xchg
dec
add
stos
xor
aas
xlat
into
test
ja
sub
push
aas
cmp
mov
fsub
jg
mov
add
jae
xor
cli
ds
add
xchg
adc
cmpsl
push
fidivrs
mov
popf
and
aam
jno
nop
out
loop
or
pushf
pmulhw
xor
es
cmpsl
mov
imul
and
cs
jnp
aam
movsl
aad
xchg
xlat
or
sti
pop
aaa
movb
cs
adc
mov
addl
shr
notl
or
jb
sbb
inc
repz
add
push
mov
fwait
iret
jmp
enter
out
pop
movlps
imul
les
adc
jge
data16
inc
pop
arpl
imul
mov
movsl
push
aam
add
mov
popa
loop
inc
sub
inc
xor
test
mov
addl
fcoms
lods
sbb
add
push
incb
in
iret
lret
dec
sub
out
push
mov
cmp
lods
push
and
fwait
pop
sbb
repnz
fstpt
cltd
mov
sbb
mov
aaa
mov
push
fiaddl
add
fs
or
push
inc
add
push
add
fs
and
mov
jns
sbb
push
decb
and
pushf
push
out
mov
stos
std
out
fnsave
insb
idivb
fs
dec
testb
lret
jle
jl
mov
decb
in
cmc
data16
repnz
or
decb
add
fs
xchg
aam
cmp
add
or
inc
lcall
xchg
ss
repz
sbb
int3
dec
mov
pusha
add
lds
nop
and
or
pusha
add
fimuls
lock
scas
js
add
jmp
pop
or
xchg
dec
add
cmc
adc
add
pop
das
test
add
mov
mov
mov
push
js
cwtl
stc
push
sti
popf
mov
sub
incb
dec
add
xor
imul
xchg
mov
pusha
add
faddl
pop
push
or
testb
aaa
hlt
fs
lods
dec
add
sarb
xor
mov
rcr
test
into
test
insb
inc
mov
xor
mov
or
cs
inc
sbb
data16
lret
mov
scas
dec
jl
adc
and
shrb
incb
and
jnp
sbb
cmc
jmp
loope
test
fmulp
dec
fimull
cmp
push
pop
in
add
gs
shrl
dec
jg
xchg
pushf
cmpsb
pop
and
push
cmp
popa
nop
mov
add
outsl
test
imul
outsb
add
sbb
push
pop
aam
je
or
decb
xchg
sbbl
push
push
popl
ja
icebp
aaa
stos
mov
mov
and
sahf
add
dec
add
cmpsl
jne
push
push
add
mov
test
test
repz
jmp
adc
cmp
jecxz
cld
in
add
dec
xor
pop
daa
pusha
add
out
cmp
inc
cmp
ds
add
js,pt
sbb
insb
add
add
clc
lret
fisubs
mov
mov
shll
add
sub
and
cmp
ja
fwait
push
into
int
and
orl
incb
xor
outsb
add
ja
add
call
pop
inc
fcomp
xchg
js
or
pop
popa
lahf
pop
xor
dec
pop
cmp
out
add
jl
xchg
dec
add
xchg
lahf
mov
mov
addr16
dec
add
and
mov
mov
outsb
add
adc
mov
test
jns
jp
add
cmp
scas
movsl
xor
push
add
jg
sub
fnstcw
and
xchg
lcall
shrb
mov
add
xchg
mov
clc
xor
pop
out
mov
jmp
data16
lods
jnp
push
mov
outsl
fcoml
pop
cmp
cltd
add
iret
sub
incb
aaa
imul
mov
mov
mov
add
xchg
xlat
push
xlat
cld
inc
push
inc
xchg
fwait
lret
or
leave
add
in
bound
and
pop
es
xor
mov
repz
jbe
add
je
and
fbld
scas
movsl
mov
dec
jp
pusha
adc
sub
lcall
enter
loopne
arpl
leave
idiv
decb
add
je
and
mov
aam
mov
fucomi
es
mov
jecxz
imul
jge
jg
add
mov
xchg
out
imul
dec
pop
fwait
pushf
adc
jle
jno
mov
dec
inc
add
adc
jp
inc
add
jae
test
inc
arpl
and
mov
dec
cmp
lods
adc
scas
repnz
xor
sbb
cld
dec
mov
aad
and
jne
inc
cmp
push
xchg
cmc
insl
dec
pop
in
jl
lret
divps
sub
push
imul
sub
stc
mov
push
pop
mov
sub
push
lea
incb
or
mov
cld
jmp
jno
inc
add
cvtps2pd
lods
iret
bound
das
mov
inc
in
aad
adc
inc
add
xchg
inc
sbb
dec
push
mov
cwtl
test
mov
jno
aam
add
insb
add
sub
adc
je
add
fdivrs
and
incb
mov
and
push
iret
dec
test
pop
orb
mov
in
rcrl
mov
outsl
pusha
incb
popa
ja
pop
and
pop
xchg
loopne
add
mov
xchg
les
cwtl
add
decb
faddl
pop
rclb
xor
call
xchg
nop
mov
inc
sbb
pop
push
cs
mov
hlt
je
aam
fldcw
pop
andl
jmp
add
push
xor
xor
jne
sahf
cli
ja
dec
leave
int
lea
pop
rol
dec
add
push
add
xor
adc
sbb
jl
mov
outsb
add
add
mov
xor
arpl
push
out
or
fnstenv
sub
jno
mov
lock
jae
push
js
fldl
cld
pusha
incb
incb
sub
inc
fdivl
decb
sbb
cmc
push
add
ljmp
add
lahf
outsb
add
jno
sahf
std
scas
dec
icebp
mov
or
fsubrs
pop
pop
daa
sarb
adc
incb
pop
enter
das
jecxz
and
leave
sbb
xchg
outsb
add
lods
fisttpll
lret
add
sub
lret
clc
sbbb
incb
mov
mov
ret
push
xchg
pop
jge
pop
jb
pop
repnz
mov
inc
pop
pushf
addr16
jo
pop
imul
or
in
adcb
lock
sub
fwait
jmp
filds
sub
sbb
pusha
mov
out
add
sbb
mov
cmp
xchg
push
jno
mov
cmp
add
sub
out
lret
add
jb
shll
aam
lahf
or
sahf
push
inc
pop
push
xchg
cmp
aad
jo
int3
dec
adc
sbb
aad
xchg
fldcw
fistpl
cmp
ja
cmpsb
xchg
clc
jp
mov
mov
mov
mov
icebp
mov
jge
jmp
mov
clc
jp
and
dec
sbb
xor
test
gs
xor
fld
cmp
or
call
jp
sub
inc
insl
notb
pop
mov
ffreep
ljmp
add
int3
jle
add
inc
push
aam
mov
mov
loopne
gs
test
test
mov
into
aas
lahf
cld
ret
sbb
fsubs
lods
scas
jns
mov
cmc
movsb
xchg
insl
mov
add
outsb
clc
in
bswap
das
push
xlat
idivl
decb
mov
lret
inc
add
inc
add
dec
jnp
icebp
aad
add
pop
xor
sub
into
inc
and
repnz
mov
push
lods
out
data16
sub
pop
lcall
push
push
cmc
dec
add
ja
sub
mov
xchg
ds
test
pop
sub
test
in
xlat
shl
mov
xchg
xchg
sub
push
fwait
les
dec
push
lods
or
clc
pushf
mov
push
insl
mov
arpl
cmp
xchg
ljmp
shrl
stos
mov
movsl
dec
and
fucomi
sbbb
inc
add
in
mov
and
sub
decb
icebp
mov
dec
loopne
out
sub
add
aad
sub
and
pusha
cmp
and
lock
jmp
add
int3
idivl
cmp
adc
sub
mov
out
and
xor
inc
or
sti
ss
and
jb
js
scas
jns
mov
shlb
pop
inc
jbe
repnz
dec
mov
iret
aaa
cmp
cmp
mov
jno
add
add
xchg
xlat
cwtl
jmp
or
push
jns
push
jb
lods
add
ja
xor
and
test
subb
orb
pop
pop
cmp
push
xor
push
sti
xor
scas
push
data16
dec
ja
std
ret
sbb
mov
sahf
shll
inc
dec
lds
inc
sub
dec
add
inc
adc
cld
outsb
jns
cs
ljmp
cli
enter
inc
or
mov
dec
imul
pop
jl
add
xor
jne
pop
sub
mov
frstor
and
and
lahf
jae
dec
jno
mov
add
mov
fstl
repz
aaa
in
add
insl
cmc
addr16
ljmp
sub
mov
push
rcll
add
xchg
hlt
push
fcompl
mov
sar
jle
ja
iret
jb
outsl
push
ja
dec
decb
test
aad
add
sbbb
ljmp
frstor
push
add
cltd
dec
mov
mov
jge
and
jp
add
and
fdivrl
incb
sub
fcoms
fnstsw
nop
dec
add
in
inc
out
jge
lods
xlat
jnp
adc
imul
outsb
add
adc
hlt
cmp
add
out
sub
adc
imul
jge
popa
push
movsl
loop
test
jmp
ss
xchg
repz
nop
movsb
add
pop
insb
inc
lock
xor
add
faddl
lcall
inc
test
jl
push
jne
pushl
mov
push
mov
add
inc
decb
ror
cmpsb
sbb
sub
incb
push
call
ss
mov
lods
call
movsl
lret
leave
inc
add
iret
ds
cmp
or
decb
fwait
sbb
lock
inc
pop
cmpsb
out
mov
movsl
lods
shll
push
cmpsl
jp
stos
loope
sub
xor
cltd
push
mov
cli
ret
jb
sub
data16
stos
sub
fcoms
add
xorb
pop
loopne
cmc
ja
stc
rcrb
xchg
jns
scas
mov
cmp
sbb
cmp
sti
mov
add
decb
add
std
sbb
push
stos
mov
inc
mov
adc
mov
sub
add
sbb
cmp
xchg
sahf
cmp
sbb
inc
decb
pop
repz
test
dec
mov
int
rorl
shlb
pop
adc
cmp
xchg
stos
sbb
jmp
dec
sbb
movsl
rorb
cmp
sub
decb
or
xor
incb
inc
sbb
movsb
jl
inc
pop
xchg
inc
add
test
lcall
sub
data16
and
sbb
lcall
cmp
insb
pop
push
sub
inc
xchg
push
incb
pop
scas
data16
incb
loope
les
add
scas
or
xchg
mov
lds
push
and
popa
pop
popa
pop
xlat
or
cmpsb
in
stos
cmpsl
add
cmp
jge
ffree
add
mov
adc
mov
cwtl
push
data16
cmpb
repnz
iret
adc
sbb
aaa
push
sbb
mov
jl
mov
mov
stc
mov
sub
cmpsl
jmp
dec
inc
add
jmp
mov
mov
insl
pop
stos
pop
jg
add
jg
dec
jae
out
lret
les
cmpsl
adc
mov
sub
ja
std
dec
in
jl
loopne
int
push
xchg
jno
aam
insl
xchg
mov
xchg
mov
mov
sbb
out
mov
sbb
inc
add
mov
adc
cltd
mov
pop
enter
mov
test
pop
sbb
adc
ss
xlat
fsubl
outsl
push
pop
das
repz
adc
dec
popa
adc
jmp
push
mov
cmc
adc
jno
add
cmpsb
int
jne
xchg
rclb
fidivrl
stos
jle
lret
andb
mov
add
incb
dec
int
add
mov
jne
pop
mov
cmc
sbb
int
dec
imul
test
imul
dec
rolb
lcall
adc
rcr
clc
jmp
int3
neg
shl
sbb
or
incb
insb
fwait
push
in
inc
rcl
fdivl
mov
iret
inc
fldl
cld
jno
fmuls
add
data16
gs
ljmp
fcomi
inc
add
imul
arpl
xor
xchg
hlt
sub
inc
cmpsl
jb
add
add
pop
mov
aam
xchg
in
xor
pop
addr16
clc
inc
movsl
add
insb
add
lods
inc
inc
movsb
push
insl
movsb
xchg
dec
js
scas
mov
cmp
add
add
jo
xor
add
mov
in
dec
loopne
jnp
pop
mov
sbb
ja
adc
sarb
leave
popa
pop
xchg
cmp
repnz
adc
xlat
imul
fcoml
add
aad
dec
jnp
sti
mov
cmp
inc
jae
pop
mov
sbb
pop
cltd
outsl
xor
insl
addr16
aaa
xchg
out
mov
jg
sbb
inc
das
pushf
push
es
fldenv
cmp
jo
adc
cmp
push
arpl
sub
mov
xchg
add
ljmp
xor
push
xchg
lock
add
mov
and
mov
aad
out
add
mov
rcr
fwait
mov
dec
add
ljmp
into
loopne
sbb
add
ss
dec
xchg
in
movsb
dec
pushf
pop
out
cld
push
inc
decb
aam
and
xor
mov
xor
call
scas
sub
aam
pop
jnp
fsub
mov
add
sbb
or
nop
dec
add
jmp
xchg
jne
add
mov
outsb
add
loope
faddl
mov
mov
sub
decb
jl
incl
jl
jno
call
icebp
jns
dec
mov
inc
sub
incb
add
imul
xchg
in
call
or
xchg
cli
push
fwait
xchg
inc
add
aad
cli
xchg
aaa
ret
movsb
sub
in
mov
stos
sbb
decb
pushf
sub
popa
pop
inc
add
cmp
jno
sarl
jb
movsb
pop
inc
add
jl
xchg
rep
cmp
frstor
pop
shl
add
sub
fisttps
or
in
xchg
dec
stc
dec
add
fimull
jecxz
mov
cltd
in
mov
inc
pusha
add
loop
add
ret
and
rclb
test
dec
insl
push
push
xlat
jmp
rcrb
inc
icebp
addb
mov
and
icebp
lret
repz
gs
dec
add
mov
sub
incb
decb
rolb
sbb
in
or
add
cwtl
test
fsubl
out
scas
jnp
js
add
fsubrl
incb
aad
jnp
pop
hlt
xchg
sbb
les
pop
stos
popf
xchg
lcall
and
sbb
pop
lcall
int3
fists
clc
mov
add
push
xchg
inc
add
add
sbb
popf
or
ljmp
dec
fbstp
adc
cmp
fcos
stc
loope
repnz
cwtl
jnp
push
add
insb
incb
push
scas
mov
mov
mov
or
xchg
jo
out
ja
or
incb
lods
gs
gs
out
cmpsl
fstpt
jns
pop
push
sub
inc
pushf
pop
sub
push
pop
test
or
cmp
cmp
imul
push
and
incb
xchg
jle
icebp
out
mov
jp
outsb
decb
incb
incb
jmp
lods
pop
insb
inc
cmpsl
ljmp
int
add
incb
jb
xor
out
inc
les
push
mov
rcrl
ss
mov
pop
xor
lock
aam
pop
mov
popf
push
repz
fs
decb
mov
ret
imul
mov
dec
pop
cld
mov
fcmove
sub
bnd
ret
lods
in
cs
mov
push
sub
aam
inc
add
fisttpl
shr
loop
inc
fdivrs
push
push
pushf
sbb
notb
mov
xor
push
jp
jge
gs
insl
movb
lahf
inc
decb
repz
decb
aaa
push
subb
or
shl
out
stos
xchg
cmpsl
jnp
dec
inc
stos
leave
loopne
adc
sub
test
cmp
and
loop
mov
in
int
and
mov
rcll
add
dec
ret
dec
add
popa
jge
xchg
fdivrl
jmp
push
add
dec
jg
add
sbb
lock
incb
int
scas
inc
add
or
and
pop
or
ja
mov
mov
add
sbb
adc
add
inc
add
sub
dec
inc
add
sub
les
je
xchg
mov
decb
clc
mov
sti
cmp
add
aam
jne
mov
shlb
sti
cmove
pop
pop
leave
cltd
ret
data16
push
adc
push
mov
outsb
mov
addr16
js
jge
add
push
xchg
in
nop
xor
push
jae
and
dec
jne
popf
lds
adc
dec
mov
pop
or
mov
fidivl
dec
inc
dec
sbb
adc
jecxz
popf
add
decb
mov
xor
data16
mov
clc
lahf
pop
in
leave
fldenv
and
push
mov
out
aad
movsl
in
jns
call
lcall
jle
mov
aam
inc
incb
sbb
cs
push
inc
mov
or
decb
and
jnp
cld
test
jl
mov
pop
test
dec
mov
mov
xchg
test
mov
mov
popf
ret
xor
add
sarl
cmp
jne
ficoml
test
iret
int3
mov
sbb
jle
mov
rcll
dec
dec
jno
icebp
js
dec
push
movsb
xchg
lds
sahf
aas
js
xchg
xchg
fstpl
and
add
inc
subl
lds
push
filds
add
push
add
out
and
jae
adc
add
sti
rclb
sbb
add
inc
add
test
incb
pop
and
push
dec
aaa
and
dec
xchg
mov
loop
add
rcll
sbb
mov
incb
or
sbb
add
ret
out
inc
in
fcomps
lods
imul
out
pop
stos
lock
lea
incb
sbb
inc
jg
mov
out
dec
pushf
out
imul
add
out
out
xor
dec
pusha
add
and
xor
pop
pop
filds
fsubrl
cmp
mov
mov
mov
push
jae
in
decb
xor
ss
incl
mov
jnp
adc
out
and
lcall
aas
pushf
stc
dec
bound
incb
add
les
mov
sarb
pushf
sbb
push
cltd
pop
into
pop
aaa
repnz
ficoml
pop
xor
add
ds
es
loope
das
push
adc
dec
add
fs
xchg
mov
jnp
pushf
sub
decb
xchg
sbb
jno
rorb
decb
pop
shrd
or
lods
lret
sarl
cmp
inc
mov
sub
shll
scas
sub
shll
and
jge
mov
sbb
sarl
mov
stos
lahf
and
decb
stc
or
fmuls
popf
xchg
out
cmp
add
mov
pop
arpl
push
mov
data16
lods
add
mov
outsb
incb
lret
movsb
sub
int
aas
push
in
or
push
and
sbb
push
pop
fcompl
cmp
add
incb
xchg
mov
add
or
dec
push
lret
je
mov
jbe
sub
aas
xchg
lret
dec
decb
test
push
repnz
incb
lcall
push
push
clc
cld
jnp
adc
call
addr16
add
incb
jmp
cmp
add
js
sbbl
mov
sub
clc
xor
scas
pop
pusha
ficoms
sbb
jle
mov
cmp
je
popf
inc
pushf
adc
and
and
pop
pop
jne
push
clc
adc
and
decb
fstps
push
nop
xorb
daa
mov
mov
inc
pop
mov
xor
xor
xor
add
sub
dec
psubusw
cmp
jmp
sbb
push
jbe
inc
subl
incb
add
loope
imul
adc
and
dec
add
mov
lock
xchg
xchg
js
pop
or
incb
cmp
sub
cmpl
outsb
add
lret
sbb
mov
adc
aaa
xchg
pop
pop
push
jp
movsl
nop
mov
cmpsl
les
and
scas
rcrl
incb
test
add
ss
cmp
dec
add
jecxz
popa
addr16
in
sub
dec
test
out
adc
cmpsb
dec
hlt
jge
xchg
push
dec
ror
cmc
mov
xorb
add
lods
and
in
movsl
jg
mov
das
aam
data16
and
pop
out
cld
inc
add
arpl
fidivrl
mov
xor
std
jge
lea
fs
mov
es
adc
outsb
jo
cmpsb
jmp
call
jns
jg
xchg
lods
cmp
xchg
movsb
adc
add
add
cld
fwait
mull
and
cmp
int
addl
data16
jge
out
cmp
mov
add
push
dec
push
sbb
repz
daa
aaa
scas
inc
add
fs
xor
insl
hlt
adc
push
enter
decb
movsl
xchg
jnp
dec
add
test
movsl
sarl
stos
int3
inc
movsb
inc
popa
push
scas
movsb
test
jnp
sbb
jno
mov
sub
cmc
shlb
test
js
fbstp
push
dec
add
mov
jns
sub
and
bound
rorb
add
in
xchg
jge
jmp
xchg
cltd
cs
ds
std
mov
mov
inc
add
mov
or
decb
add
ret
cmp
lahf
jecxz
push
add
push
xchg
and
add
ret
mov
add
pop
arpl
sti
sub
aaa
jo
lret
pop
fsubrs
fsubr
insl
and
mov
push
imul
cld
and
iret
sbbb
mov
mov
sbb
loopne
or
and
iret
xchg
pop
adcb
ret
incb
decb
decb
lods
adc
sbb
stos
out
add
int3
adc
mov
out
aas
stos
repnz
cmp
negl
aas
aaa
leave
mov
jo
cld
adc
cmc
ljmp
call
lcall
fisttpll
mov
pop
mov
add
adc
movsb
shll
in
in
and
xor
mov
mov
or
decb
fmuls
inc
pop
addb
ljmp
add
ljmp
inc
outsb
add
jle
das
adc
mov
add
jle
jns
outsl
add
sti
sbb
xlat
sub
jo
add
sbb
imul
fmul
test
outsl
cmc
inc
add
cmp
inc
pop
inc
pushf
scas
adc
mov
or
dec
out
out
push
inc
arpl
or
xchg
cmc
mov
adc
mov
fdivs
dec
add
cmc
data16
in
push
mov
adc
dec
imul
divb
add
mov
mov
add
or
incb
add
push
dec
out
xchg
stos
adc
incb
mov
icebp
cmpsl
cld
xchg
inc
jb
add
decb
outsb
adc
mov
adc
repnz
pop
dec
add
sub
loope
pop
fnstenv
sub
pop
add
dec
add
pop
push
outsl
and
addr16
lret
outsl
mov
les
sbb
jp
addr16
pushl
xor
jecxz
dec
and
addb
das
xchg
or
jo
add
pop
mov
mov
notb
fidivrl
add
mov
add
mov
imul
lret
adc
addr16
dec
add
lods
dec
mov
fcmovnb
movsb
in
jmp
mov
mov
mov
imul
js
aad
add
xchg
lods
jmp
mov
sbb
ret
sub
push
sbb
add
mov
inc
arpl
add
push
xchg
mov
popf
roll
in
out
push
cld
or
incb
sbb
aad
add
sbb
sub
dec
cmp
mov
decb
jo
mov
lcall
loope
mov
pop
push
scas
and
xchg
xchg
loop
fildl
js
push
add
incb
test
sub
incb
aaa
fnstcw
fsub
iret
dec
icebp
push
push
loop
cmc
sbb
fwait
push
add
mov
divb
aas
and
imul
fisttpl
sub
inc
notl
data16
movsb
dec
xlat
jae
daa
loopne
inc
add
fcmovnb
adc
dec
fimuls
sbbl
add
xor
pop
fiadds
mov
lcall
jae
fisttpll
incb
mov
mov
fistpl
cmp
mov
iret
data16
inc
fisubrl
loope
sbb
adc
jge
in
inc
add
add
mov
outsl
mov
imull
into
sbb
cmp
sbb
popa
enter
inc
and
popf
xor
lock
add
mov
lcall
aam
and
jmp
push
or
xchg
xor
cmp
dec
or
inc
inc
cmp
mov
cltd
loopne
push
jae
lcall
cs
sub
enter
push
mov
mov
dec
rolb
jmp
ljmp
mov
gs
mov
or
hlt
push
enter
popa
sti
jne
in
and
and
movsl
or
decb
sbb
inc
add
js
cwtl
inc
jl
test
pop
push
add
not
movsl
es
incb
imul
jecxz
dec
pop
loop
inc
mov
fstl
sti
adc
pop
jp
out
pop
mov
add
decb
decb
sub
incb
pop
mov
stos
sub
dec
dec
pop
mov
imul
int3
pop
ret
cld
loopne
push
adc
lret
ret
push
xor
dec
xchg
push
hlt
je
xchg
inc
add
push
add
stos
push
xor
test
push
shrl
add
lcall
ds
ja
scas
sbb
xchg
ja
jo
push
pop
in
add
data16
cmp
aaa
sbb
das
ficompl
inc
incb
mov
imul
dec
loope
out
je
adc
xchg
data16
incb
mov
cmp
and
dec
jbe
jle
inc
add
out
ljmp
jo
outsb
add
rolb
out
and
int3
leave
adc
data16
or
insb
add
sub
incb
add
or
shlb
push
stc
adc
add
mov
ficomps
in
add
hlt
jne
cmpsb
lock
fldcw
and
pushf
xchg
inc
jl
add
pop
dec
loopne
adcl
mov
lods
insb
push
out
loopne
lahf
or
mov
add
cmp
jns
mov
xchg
jnp
add
jae
pop
jne
dec
add
sub
fwait
mov
cmpsb
and
sar
out
popa
add
dec
out
and
shll
std
dec
adc
mov
cmpsb
xchg
iret
mov
xchg
cmpsb
xchg
ja
add
es
xor
push
mov
dec
push
and
pushf
dec
add
imul
stos
pop
shrb
cmp
jl
sub
pop
cwtl
testb
pushf
out
sbb
icebp
push
or
incb
add
fadds
jae
ret
dec
hlt
pop
pop
mov
jecxz
cmpsl
ss
mov
pop
movl
push
sbb
popf
cwtl
sbb
rolb
push
dec
add
lahf
aaa
ret
dec
pop
xchg
scas
push
add
mov
inc
shr
inc
push
xor
movsb
inc
lds
decb
push
aaa
arpl
add
push
dec
cli
cmp
out
push
nop
jp
loope
adc
dec
sbb
ss
icebp
and
and
leave
mov
lods
cs
add
dec
scas
lcall
pusha
add
sbb
mov
pop
adc
cmpsl
aad
or
call
push
add
mov
das
leave
pop
and
addr16
xor
leave
push
idivb
add
push
loope
fwait
ret
mov
repz
push
add
push
stos
jbe
mov
movsb
popa
popa
ficompl
data16
out
subl
sbbl
and
jns
add
adc
and
popa
dec
add
ss
gs
sbb
incb
stos
mov
pop
sub
cmp
mov
cltd
outsb
cmp
and
ret
cmp
dec
jns
xor
lret
leave
xchg
push
add
leave
lcall
mov
cmpsl
mov
sbb
into
push
sar
aaa
stc
fcom
imul
fs
scas
push
xchg
out
stos
movsl
lods
mov
adc
pusha
add
incb
xor
and
decb
fs
lds
adc
cmp
dec
mov
dec
mov
das
scas
mov
mov
cmp
cmp
dec
fs
hlt
fbstp
xor
mov
xchg
push
arpl
pusha
mov
incb
cmp
jl
mov
and
add
sbb
and
movsb
or
int3
lret
mov
out
mov
adcb
or
xchg
stos
cmp
cmp
test
adc
addr16
or
test
push
out
inc
add
lds
lahf
and
stos
dec
fwait
repnz
adc
int3
jno
fs
pop
mov
les
lods
int
jno
and
scas
add
xor
fsubrs
push
mov
adc
push
fstpl
xchg
push
ja
dec
dec
pop
push
cmove
xor
add
adc
in
sub
mov
mov
lds
fimull
arpl
stos
popf
pop
lods
jge
jo
ret
mov
add
incb
sbb
pop
shll
std
mov
imul
jmp
ret
inc
add
pop
into
xor
inc
add
inc
add
idivl
sub
xor
stos
nop
dec
pop
iret
das
jge
adc
int
outsb
add
pop
cltd
clc
divl
cs
mov
xchg
mov
add
mull
fisttpl
incb
dec
outsb
add
ror
push
xor
popa
popa
mov
adcl
and
stc
test
pop
jge
push
loop
add
jecxz
add
aad
adc
cmp
and
mov
adc
incb
data16
loopne
shll
mov
add
aas
lret
and
stos
fcmovnu
jge
jecxz
sbb
punpckhbw
incb
dec
out
pusha
ljmp
ficomps
inc
cwtl
outsb
jae
jle
ljmp
push
push
and
mov
in
nop
repnz
mov
cwtl
les
dec
jno
adc
mov
add
cmp
adc
xor
dec
mov
mov
lcall
jp
stos
lods
pushf
enter
xchg
fwait
push
test
push
fs
sahf
data16
and
add
push
add
in
jp
or
inc
or
push
push
push
xlat
xor
pop
pop
pop
mov
jns
je
push
inc
mov
rcll
xchg
in
xchg
ret
rcr
push
add
imul
fsubl
add
mov
sbb
cmpsl
mov
call
jb
mov
pop
sahf
scas
cmpb
mov
lods
jne
lret
nop
mov
jge
inc
jb
fldt
push
inc
pop
ljmp
sub
incb
xchg
enter
pop
icebp
leave
mov
xor
xchg
lods
lods
cmp
rol
repnz
sbb
add
push
outsb
add
xor
insl
fidivrs
nop
cld
stc
ss
add
push
push
cwtl
xchg
xchg
std
lods
std
movsb
mov
pop
jnp
add
pushf
xchg
xchg
cmp
jne
cli
out
in
push
sub
mov
ss
xor
push
lea
incb
jnp
push
and
aad
int3
fxam
lock
dec
add
push
jbe
push
jecxz
mov
xchg
out
dec
cli
arpl
xchg
scas
push
loop
cmpsl
rorb
add
lods
ja
shrb
incb
in
dec
iret
add
push
mov
jo
repz
lahf
clc
ljmp
jecxz
stc
fs
clc
dec
in
inc
xor
data16
loope
mov
inc
push
adc
mov
test
jmp
andl
mov
mov
inc
xor
cmpsl
mov
push
add
lret
hlt
lret
xchg
gs
lock
test
xchg
repnz
dec
icebp
dec
push
add
shl
loop
push
dec
add
outsl
stos
mov
out
and
pop
pop
mov
add
lods
bound
lahf
pop
and
push
add
decb
int
loop
mov
test
push
mov
incb
fisubrs
rep
add
je
add
lods
hlt
push
push
incb
adc
das
inc
cld
push
dec
std
je
or
incb
call
nop
push
scas
pop
ss
add
test
add
lds
xchg
jmp
jecxz
test
adcb
xor
add
xchg
push
adc
out
pop
xchg
imul
stos
or
decb
jle
test
or
fs
decb
xchg
mov
mov
cmc
out
mov
sub
inc
xchg
add
fbld
es
sub
jne
fiaddl
incb
les
jl
sub
or
incb
js
mov
push
je
jmp
sbb
rorb
data16
decb
inc
rcl
jle
and
in
incb
xchg
xlat
xchg
fdivrp
adcl
mov
pop
mov
mull
mulb
pop
insb
incb
fidivrl
icebp
ficompl
xchg
in
popf
repz
mul
icebp
cmp
jmp
bound
aam
and
mov
jl
leave
jo
rolb
test
imul
scas
xchg
or
jns
iret
data16
or
bound
data16
decb
aad
push
pop
xchg
push
jne
or
push
enter
bnd
repz
jmp
mov
mov
decb
fisttpll
hlt
rorl
jg
cs
jno
push
sbb
push
fwait
cltd
leave
xchg
adc
xor
gs
jb
inc
scas
or
lods
mov
loope
mov
data16
cwtl
or
add
push
sub
xchg
or
mov
pusha
jmp
inc
push
loopne
ret
out
mov
xor
xor
and
sub
loopne
jo
lret
xchg
test
mov
repnz
and
jo
push
add
jns
and
push
cmp
push
fsubrl
inc
dec
mov
jo
mov
jecxz
and
std
pop
divb
incb
fwait
scas
sbb
js
aad
addr16
adcb
jmp
inc
and
pop
bound
lahf
scas
fwait
xchg
jl
sarb
ret
fwait
jno
lret
mov
xchg
mov
add
adc
loopne
pop
outsb
add
imul
daa
mov
gs
mov
movsl
je
incb
pushf
cmc
mov
pop
sti
ss
shrb
pushl
inc
lods
mov
rolb
idivb
loope
jbe
mov
sbb
add
in
into
jns
push
pop
rolb
jge
or
shrb
mov
add
xor
xor
call
and
add
mov
push
cmp
push
lcall
sub
repnz
fsubr
mov
pop
nop
pop
mov
mov
push
stc
mov
add
sbb
cli
cld
pop
xchg
xor
out
aam
add
pop
xor
cmp
add
jle
pushl
cmpb
pusha
mov
incb
stc
lahf
mov
xor
xor
push
aad
fisttpll
fs
mov
les
lock
push
addb
xchg
mov
je
jbe
sub
decb
push
int3
xchg
aam
mov
gs
mov
dec
sarl
arpl
shll
dec
mov
int3
adc
sbb
ljmp
pop
fnstsw
mov
aas
xlat
pop
stos
out
sti
in
addl
jb
jne
xchg
pop
int3
push
mov
sbb
out
fwait
dec
jo
sahf
popa
repnz
rclb
jno
jmp
xchg
push
sbb
ficompl
push
mov
fldcw
mov
or
stc
adc
inc
ja
pop
mov
lret
pusha
add
movsl
mov
sub
incb
sahf
aas
mov
mov
inc
mov
pop
pop
jl
pop
jmp
mov
mov
mov
add
xor
cmp
adc
mov
out
inc
inc
jno
and
xchg
pop
outsl
std
jae
icebp
jno
adcb
out
cs
rcrl
aad
sub
incb
add
adc
insb
lahf
dec
jae
into
aaa
xor
add
lods
pop
dec
add
jmp
and
je
xor
add
decl
iret
pop
shll
and
mov
sahf
dec
pushf
and
xchg
in
lods
push
xchg
fmul
push
push
push
cmp
out
and
pop
and
add
xor
stos
or
dec
out
sub
movb
mov
hlt
push
outsb
incb
sub
clc
or
pushf
push
movsl
test
add
mov
mov
popa
xor
out
shll
jno
inc
insl
push
jp
sar
pop
daa
test
ret
scas
push
pop
shlb
sbb
jno
ret
cmp
rclb
lds
xchg
cmpsb
xor
ss
sub
dec
adcl
and
iret
addr16
cmpsl
xchg
flds
pushf
mov
cltd
or
fwait
push
sub
add
and
imul
cmp
xchg
data16
rcrb
es
cld
add
inc
sub
icebp
cmp
lcall
adc
fwait
test
add
pop
hlt
insb
adc
loop
xchg
es
inc
jp
sub
adc
decb
adc
jns
push
and
jbe
xlat
sarl
add
mov
xlat
out
ss
sbb
je
add
bswap
pusha
fsubl
cld
sbb
sub
push
mov
add
mov
in
push
xor
mov
xlat
mov
flds
loope
push
push
add
jno
cltd
testl
outsb
inc
sub
sub
sbb
xchg
repnz
inc
add
xchg
cmpsl
adc
rcll
shlb
lahf
jne
hlt
enter
or
jl
ficoms
aaa
pusha
nop
jmp
mov
push
fs
sti
sbb
mov
xor
in
dec
notl
cmpsb
and
push
mov
mov
rorb
push
int3
adcb
in
decl
push
sbb
lods
or
and
pop
mov
mov
add
sar
pushf
dec
ljmp
cmp
repnz
add
and
pop
mov
sub
or
jp
pushf
shll
cmp
push
jge
add
cmp
or
pcmpeqw
icebp
enter
daa
pop
or
sub
cmp
and
mov
add
lock
inc
lea
push
cwtl
push
push
loope
fwait
sbb
fidivl
stc
add
decb
mov
data16
decb
mov
stc
xchg
jbe
stos
fs
decb
stc
shlb
jle
and
jg
push
imul
mov
lods
inc
sbb
push
add
div
mov
std
mov
dec
cmp
lods
mov
push
es
rolb
out
in
add
fsubs
dec
sub
decb
out
add
and
mov
fiadds
mov
data16
push
xchg
call
inc
add
int3
out
es
or
xchg
sub
shll
dec
sub
push
push
sbb
push
jg
arpl
add
and
xor
xchg
scas
aas
dec
ja
pop
push
in
aad
and
fadd
adcl
or
fidivrs
lods
jl
pop
xchg
adc
sub
sti
mov
mov
popa
push
decb
xchg
xchg
sub
add
call
unpcklps
cs
jae
jo
addr16
sti
pop
mov
or
sbb
mov
mov
cmpsb
decl
mov
xor
pop
pop
ss
sti
ja
fs
pop
mov
loop
add
inc
add
push
sub
decb
call
mov
add
fiaddl
fiaddl
lods
lret
daa
jo
lds
imul
xchg
sub
das
popf
push
cli
int3
xchg
mov
add
call
pop
sbb
pop
test
xchg
add
into
add
incb
rcrl
push
jns
pushf
mov
std
xchg
and
das
xchg
mov
cli
mov
cmp
lcall
xchg
mov
add
notb
cmp
and
lret
fdivs
mov
cmc
mov
pop
cmp
jno
imul
push
cmp
in
test
sbb
mov
movb
jmp
loop
sbb
inc
notl
sti
adc
popa
dec
hlt
jge
mov
inc
gs
sbb
shr
loope
fwait
sub
pop
push
dec
jno
add
data16
push
int
dec
add
repz
add
cmp
push
mov
adc
aad
xor
and
adc
xchg
push
push
scas
in
jbe
decb
pop
sbb
aam
ljmp
aas
xor
dec
jne
push
out
jns
js
mov
jmp
in
stc
xchg
add
cmp
call
add
ss
fwait
xchg
scas
cs
das
es
adc
ja
jo
ret
mov
popf
mov
or
jecxz
dec
fwait
or
xlat
movsl
sub
mov
mov
lret
bnd
xor
mov
lcall
roll
xchg
sbb
fnstcw
xchg
cmc
pop
dec
add
pop
insl
add
incb
mov
out
aas
ss
decb
cmp
mov
jns
mov
ja
xchg
xor
dec
add
mov
xor
cmp
addr16
inc
add
icebp
notl
push
js
stos
lock
sbb
mov
add
out
cmpsl
mov
in
call
insb
add
push
pop
loop
loope
fistps
fstpl
mov
jne
je
sub
mov
lret
aaa
leave
xchg
push
ficompl
test
dec
xchg
add
jge
pop
stos
push
leave
test
xchg
pop
jb
cmp
add
mov
pop
sahf
xor
outsb
pop
sub
mov
lret
lock
decb
add
sub
jns
fimuls
xchg
filds
fistpl
aas
push
jg
sub
jp
sbb
add
push
add
sub
cmc
loop
or
daa
push
cmpsb
sti
fistpl
or
xor
push
and
decb
jbe
aad
xor
inc
decb
add
lods
lods
jnp
jg
adc
fldt
add
test
add
xor
and
js
mov
popf
mov
jge
add
orl
movsb
inc
mov
fucom
sbb
push
add
xor
pusha
adc
sub
dec
fidivrs
fucom
cli
jmp
fsubl
ss
pop
cmpsb
es
jecxz
scas
shrb
pushf
popa
jb
in
add
leave
ret
roll
fmull
push
aam
pop
push
incb
add
dec
out
ret
sub
rcll
rcrl
jo
add
pop
data16
pop
and
cmp
mov
or
mov
in
mov
addr16
cltd
loopne
push
push
and
mov
mov
push
mov
sbb
inc
sbb
pop
les
pop
jmp
mov
sbb
in
sbb
add
mov
add
data16
jle
add
movsb
jbe
xorl
fld
mov
sub
sahf
sti
jl
mov
das
jmp
pop
xor
icebp
mov
xor
add
xchg
lret
fdivl
sub
adc
ficoms
add
scas
xchg
mov
adc
xchg
dec
add
outsl
jmp
pusha
add
int3
and
insb
xor
lods
mov
cmc
jmp
mov
sti
pop
cs
jne
shlb
mov
jmp
mov
xchg
inc
incb
add
mov
cmp
cmp
imul
jo
push
je
push
xchg
testl
sbb
or
inc
ss
sub
mov
add
pop
das
mov
dec
add
inc
xchg
jnp
xor
aaa
stc
push
mov
or
sbb
pop
das
pop
shll
pop
inc
and
inc
sbb
xchg
mov
sbb
adc
xor
and
pop
jo
orb
loopne
hlt
xchg
test
jl
mov
fwait
imul
or
sub
cmc
cmpsl
ds
cs
push
and
and
enter
cli
sbbb
pop
jno
loope
ret
or
jge
decb
mov
push
fwait
fs
cmp
push
in
and
incb
inc
scas
decl
push
add
xchg
lock
movsl
mov
scas
clc
mov
xchg
cwtl
aad
pushf
xchg
pop
push
cmp
pushf
xchg
adc
add
dec
jle
sub
imul
dec
pop
into
test
cmp
add
xor
mov
cmp
cwtl
nop
dec
mov
out
cmp
ljmp
inc
jmp
xchg
mull
mov
add
inc
add
mov
int
xchg
add
dec
outsb
add
fcoms
in
push
call
and
sti
jp
or
testb
add
out
sub
inc
pop
das
sbb
insl
out
ljmp
std
jae
add
bound
decb
xchg
call
dec
adc
jae
xchg
xor
sbbl
in
decl
sahf
pop
je
lods
adc
mov
jmp
inc
and
cmc
adc
add
jg
sub
and
xchg
outsl
mov
rcrl
lds
cs
xor
push
mov
xor
lcall
clc
testl
xchg
aaa
out
push
arpl
and
cmpsl
nop
pop
pop
ljmp
insb
mov
imulb
adc
push
push
xor
sbb
adc
and
mov
and
decb
pop
stc
add
push
push
mov
pop
stos
jne
mov
icebp
andb
cmp
ljmp
sbb
test
cmp
mov
inc
cltd
jmp
sbb
mov
push
test
cmc
add
cwtl
les
lods
fs
pop
sub
add
adc
in
dec
cmpsl
inc
add
imul
movb
mov
add
mov
mov
sbb
dec
add
sbb
mov
sti
sbb
dec
xchg
insl
xchg
mov
push
jmp
dec
sbb
stc
sub
insb
add
mov
arpl
in
icebp
jae
inc
fcoms
and
inc
push
lret
add
jne
cld
inc
test
add
int
jg
xor
ljmp
fcompl
int
into
push
dec
add
jae
xor
lahf
pop
fcmovnb
pusha
in
lret
sbbb
mov
incb
int
leave
lock
cmpsl
fmuls
mov
dec
xor
scas
adc
pop
and
lods
rcr
std
cmp
pop
push
xchg
adc
and
push
pop
and
mov
mov
add
lcall
inc
movsb
jge
or
cmpsl
sbb
add
in
xchg
xchg
sarb
into
sub
add
insl
loope
outsb
decb
cmp
fsubl
mov
stc
pop
xchg
jle
pop
pop
cld
aam
add
lods
mov
push
xor
xor
out
dec
and
or
pop
mov
aaa
xchg
cwtl
popf
mov
aaa
fistps
mov
jecxz
out
and
mov
dec
sub
xor
push
fwait
into
inc
jae
add
inc
movsl
pop
mov
loopne
das
aaa
sti
xchg
cld
out
aas
pop
clc
add
xchg
jmp
das
sub
cmp
in
inc
test
cmc
shrl
icebp
dec
movsl
loopne
stos
inc
cltd
in
pop
iret
adc
mov
cmpsl
add
mov
pop
test
cmc
xor
cs
pop
adc
dec
jmp
lods
repz
mov
mov
add
lret
add
mov
xor
lock
inc
and
cmp
mov
outsl
insb
pop
sbb
add
incb
leave
pushf
push
shll
xchg
mov
sarb
add
outsb
add
mov
popf
popf
popa
pushf
mov
scas
and
cmp
mov
mov
add
mov
cmc
sub
mov
sbb
clc
scas
test
mov
and
jp
inc
popa
xchg
dec
mov
in
mov
inc
std
cmp
push
popa
sbb
int3
icebp
mov
test
shll
mov
xor
mov
xchg
outsl
adc
pop
mov
orb
cmp
repnz
lock
cmp
stc
scas
mov
rorb
inc
jge
pop
les
data16
decb
rclb
mov
test
repz
in
fwait
insb
add
push
fwait
mov
imul
sahf
dec
sbb
mov
pop
imul
jnp
dec
decb
cmp
adc
sub
jmp
mov
lcall
incb
sar
shl
dec
add
sub
out
cmc
mov
pusha
add
addb
addr16
pusha
decb
pop
rcr
add
sub
cltd
sbb
add
xchg
popl
cmpsl
andb
lock
aad
mov
xor
out
loop
add
mov
cmp
adc
add
scas
jnp
aaa
testb
mov
pop
mov
rcl
mov
hlt
cltd
jnp
rcll
xchg
inc
test
pop
popf
or
jns
cmpb
sbb
sub
cmp
sbb
pop
inc
pop
xchg
wrmsr
outsl
sahf
fidivrl
jle
push
mov
push
fisubrs
pop
enter
mov
xchg
sub
push
std
xchg
push
cs
shrb
jne
call
xchg
jae
cmp
xlat
test
add
cmp
xor
cld
mov
xor
cmp
add
mov
cmp
add
sarb
sub
scas
in
adc
in
and
call
testb
data16
push
gs
mov
sbb
cmp
in
jg
data16
adc
daa
cmp
incb
pusha
xchg
adc
into
lods
out
lds
in
pop
dec
cwtl
xchg
ja
out
push
add
scas
sub
xchg
shr
push
push
jge
xchg
mov
addb
shll
stos
and
xchg
push
add
les
and
cld
movsb
lret
mov
incb
imul
inc
adc
out
orl
lret
repnz
add
pop
lret
sub
sbb
pop
add
repz
mov
loopne
daa
cmpsb
pop
negb
sbb
mov
andb
int3
and
cmpsl
or
add
out
dec
daa
inc
add
inc
scas
push
cmp
mov
lds
fidivrs
rolb
decb
incb
mov
jle
add
movsb
push
xchg
inc
push
add
call
add
shr
jbe
les
jge
inc
arpl
jae
add
adc
adc
loope
dec
xor
jmp
rorl
out
enter
add
test
pop
adcb
insb
add
sbb
jbe
out
fcompl
fwait
inc
push
push
out
clc
push
test
push
add
inc
add
cmp
loopew
aas
insl
popf
push
cmp
add
popf
push
shrb
mov
sbb
push
es
sub
add
add
cld
sbb
cmp
stos
jnp
or
add
idivb
push
mov
ljmp
sub
jle
stos
aaa
popf
mov
sub
mov
nop
test
jns
dec
xchg
dec
sub
decb
add
mov
fidivl
dec
and
insb
inc
mov
xor
cs
decb
cli
jno
push
aad
test
in
movsl
xor
out
fwait
pushl
pop
push
pop
fsubs
cld
xor
les
jbe
push
add
cs
decb
inc
fdivs
or
dec
hlt
jnp
xchg
inc
lea
dec
leave
es
push
es
ljmp
jne
or
inc
add
cs
cltd
int3
jb
mov
imul
dec
adc
js
out
rolb
sbb
pusha
add
stos
jae
pop
cwtl
mov
lock
popf
add
mov
mov
into
pop
cmp
inc
add
cwtl
into
jmp
add
loop
shr
pop
cmpsb
push
mov
sub
popa
mov
dec
add
stos
pop
dec
pop
sahf
fldl
movsb
lahf
pop
fnstsw
sub
loope
mov
data16
incb
sub
hlt
mov
inc
sbb
ljmp
and
lods
sbb
add
inc
in
pusha
incb
je
sub
sbb
insb
add
sub
xchg
shll
gs
cmp
inc
leave
lret
dec
sbb
xchg
xorb
pop
jge
cmp
in
add
dec
cmp
jecxz
fimull
add
cmp
adc
in
outsb
repnz
mov
aad
divl
inc
es
out
pop
and
jo
pop
mov
push
fldt
add
and
divl
fdiv
sub
push
aas
xor
sub
mov
aad
test
insb
push
ficompl
xchg
bound
decb
xor
movsb
dec
add
aas
cltd
into
xlat
sbb
into
pushf
sub
decb
add
fdivrs
ds
cmp
push
cwtl
outsl
cmpsl
sbb
push
loopne
into
daa
jge
fmulp
jmp
cs
jnp
xor
mov
xchg
xlat
fisubrl
mov
inc
add
in
dec
add
push
ret
js
aad
sub
popa
mov
jmp
add
mov
adc
add
lods
or
jp
stos
jb
cmp
dec
add
rolb
jo
xchg
sbb
incb
mov
inc
add
cmpsl
testb
add
and
or
inc
or
sbb
out
dec
push
shll
jle
arpl
stc
arpl
jns
pushf
fwait
push
sub
cmpsb
push
push
mov
cmp
dec
in
imul
jge
add
test
pop
lods
dec
jnp
add
scas
aas
push
dec
cli
push
jnp
adc
lret
jmp
inc
outsl
cmc
in
pop
push
ds
add
add
and
xor
mov
adc
decb
sbb
dec
incb
sbb
data16
mov
je
pusha
push
cmc
std
into
lahf
fisttpl
add
aam
cmp
adc
cmp
sbb
add
in
push
push
push
push
lock
mov
js
bound
rclb
jmp
cmpsb
nop
pop
mov
mov
incb
out
fs
movsl
xor
imul
cmp
fdivrl
mov
lock
xchg
popf
insl
push
sub
jnp
leave
cmp
icebp
loop
repz
lfs
or
xor
add
cli
sub
pusha
add
cmp
shlb
dec
xchg
ljmp
orb
sahf
mov
aas
pop
xor
imul
push
stos
add
decb
stc
pop
mov
mov
ffreep
das
and
decb
in
stos
sbb
or
jmp
test
lods
xor
rcrb
shlb
pushf
into
adc
jb
out
in
sub
cltd
and
rcrb
push
add
push
fbstp
adc
xor
mov
hlt
push
cmc
or
mov
cmp
mov
jno
shrl
pop
cli
mov
nop
cld
out
add
decb
lret
cmp
xchg
and
fstps
jmp
cmp
jae
mov
out
orb
jnp
enter
pop
out
adc
jl
stc
xlat
add
sub
decb
cmpsl
push
mov
loope
jecxz
icebp
imulb
sbb
dec
mul
loop
sub
and
and
dec
adc
add
mov
fwait
sti
xchg
xchg
in
iret
loop
cmpsb
lock
jo
sbb
jb
lds
fs
mov
ds
and
pop
inc
repnz
test
sub
sbb
jle
xchg
or
mov
nop
movsb
mov
sub
scas
icebp
xchg
lret
in
or
scas
push
data16
sub
jecxz
outsb
add
push
pop
mov
and
push
jl
lods
mov
fldl
fisubrs
push
fidivrs
aad
pop
cmpsb
out
addl
sub
imul
gs
xchg
jno
and
dec
mov
addr16
fucomip
ljmp
add
lods
lcall
call
test
add
xor
inc
add
jge
jns
arpl
das
leave
jp
inc
decb
sahf
repnz
div
nop
ret
insl
mov
negb
ds
push
decb
scas
sahf
lock
es
imull
addl
adc
mov
adcb
add
fstl
inc
add
pop
shlb
mov
sub
cmpsb
test
cmp
cmpsb
dec
mov
les
add
lret
repz
inc
xor
xchg
aaa
sbb
cmpsl
xchg
cltd
hlt
or
sub
xchg
adc
pop
imul
daa
pop
adc
push
out
out
scas
stos
cmp
mov
adc
add
mov
gs
in
xchg
cmpsl
xchg
in
sub
popa
mov
enter
into
loope
out
add
incb
push
add
sub
incb
lret
test
push
pop
ja
bound
out
gs
rclb
add
mov
decb
push
in
pop
cli
jecxz
lcall
arpl
dec
dec
decb
sarl
dec
hlt
push
xor
lea
xchg
insb
add
imul
inc
mov
cmp
and
push
xor
loop
inc
xor
mov
lods
out
jp
add
popa
sub
jg
ljmp
out
lock
outsb
add
push
decb
ds
mov
pop
popf
addr16
jbe
dec
scas
mov
cmpb
repz
mov
push
sbb
es
sbb
push
and
mov
sub
sti
iret
inc
ja
add
mov
roll
aaa
out
xchg
jge
add
inc
lods
out
add
sbb
cltd
dec
dec
cmpsl
add
jo
mov
lods
movsl
int
add
pusha
ss
cmp
add
insl
or
bnd
iret
cmp
in
mov
mov
pop
sbb
outsl
pop
and
stos
shl
mov
add
cltd
cmp
pop
xor
mov
fisubs
rep
pop
arpl
push
pop
je
ja
roll
push
dec
inc
in
mov
popf
push
clc
add
flds
add
incb
push
xor
hlt
ljmp
leave
lea
leave
sti
cmc
pop
push
and
cmp
xor
outsl
leave
mov
lods
cmp
push
jge
mov
in
mov
jecxz
into
dec
pop
insl
addl
mov
mov
xchg
int
and
dec
add
mov
or
push
jne
into
fiadds
add
sbb
sbb
push
jmp
add
cmp
mov
rolb
fs
or
jne
sbb
add
or
push
stc
cmc
mov
cmp
adc
cmp
pop
pop
in
jle
add
jecxz
mov
pop
or
adc
xor
decb
mov
inc
add
push
mov
pop
cmpsl
nop
dec
mov
jns
cmpsb
repnz
add
jae
mov
add
or
xchg
push
fidivrs
lcall
ja
add
aad
cli
sbb
lret
incb
mov
jo
cmpps
int3
cli
pop
add
call
xor
xor
add
sbb
in
and
subb
lea
mov
imul
imul
or
mov
xchg
hlt
test
ret
lods
adcb
sbb
push
rorb
xor
jp
pop
inc
add
lcall
jg
and
les
sub
jle
cmpsb
sub
dec
mov
push
jmp
rclb
and
lahf
inc
mov
push
cmc
cmpsb
jp
push
dec
stc
testb
inc
add
js
push
jae
sbb
mov
dec
and
incb
incb
outsl
cmp
mov
notl
push
lods
adc
sub
or
sbbb
dec
sti
inc
int
dec
outsl
jl
xchg
fucomp
add
inc
add
decb
adc
ja
push
movsb
pop
iret
mov
test
adc
or
fs
scas
cld
xor
imul
orb
xor
push
mov
xchg
sti
mov
mov
sub
repnz
dec
sbb
add
pusha
insb
add
js
cmp
loope
scas
lahf
pusha
add
imul
inc
ret
pop
sub
jg
sarl
sbb
dec
decb
incb
incb
clc
sahf
jnp
jno
add
stc
aaa
incb
dec
add
into
sub
xchg
jae
xchg
pop
dec
scas
jl
xchg
and
rcl
mov
adc
adc
mov
jmp
push
jmp
sbb
and
xor
mov
xor
js
out
pop
mov
xor
adc
pop
and
incb
lahf
cld
hlt
jecxz
cltd
rcrb
push
cwtl
dec
jno
mov
sahf
aad
jne
incb
cmp
inc
jg
jecxz
icebp
clc
jne
je
stos
pop
lods
push
decb
cmp
dec
add
stos
xlat
cmpsl
sbb
aaa
cmpl
int
mov
scas
mov
repnz
pop
and
clc
out
push
mov
outsb
test
sbbb
fldt
xor
sti
push
aad
inc
add
js
arpl
inc
out
std
pop
popf
inc
cmc
ljmp
jbe
insl
push
data16
jbe
jl
repz
popf
xchg
pop
xchg
cmp
add
clc
mov
sbb
das
leave
stc
mov
add
iret
inc
mov
cmpb
iret
inc
insb
add
pop
xchg
js
js
fdivs
add
rclb
sub
cli
cld
test
jb
addl
in
shlb
cmc
mov
inc
xor
mov
inc
xchg
scas
inc
add
loopne
cs
incb
pop
dec
add
cmc
sti
adc
sbb
add
and
inc
movsl
gs
pop
cmpsl
pop
fdivs
push
test
pop
and
add
loope
mov
and
xchg
dec
pop
sbb
xor
or
imul
inc
addb
xor
cli
cmp
pushf
movsl
sti
cs
in
out
sbb
adc
mov
lahf
sbb
push
sar
jno
push
or
push
outsb
add
enter
and
loop
push
inc
jnp
xchg
aad
adc
sub
cmp
out
xchg
daa
out
fmuls
cli
dec
imul
add
stos
aam
xchg
or
in
jl
sbb
sub
sbb
aas
mov
sbb
data16
mov
adc
sub
jnp
mov
jb
inc
xor
scas
das
imul
add
incb
mov
push
nop
std
imul
mov
insb
rolb
pushf
cmp
add
movsb
sbb
ss
jmp
push
mov
les
mov
xchg
sbb
adc
jge
enter
fsts
mov
js
add
pop
mov
imul
pop
sbb
mov
mov
cld
dec
add
pop
notb
jmp
push
shl
dec
add
lock
lds
xlat
mov
mov
xchg
mov
out
xchg
insl
push
outsl
lods
inc
xchg
xchg
mov
pop
mov
loope
and
lods
inc
and
rorl
adc
xor
push
repz
sbb
sbb
ffreep
gs
sbb
je
sub
push
repz
into
shrl
int3
push
incb
insb
sub
aaa
lcall
in
test
xchg
add
es
sahf
stos
sub
cmp
mov
das
push
jbe
out
adc
xchg
or
mov
and
jl
add
jmp
and
mov
add
popa
push
inc
pop
xchg
test
jnp
aad
scas
mov
push
in
cmp
add
divb
data16
lods
mov
mov
jmp
cli
orb
stos
push
add
and
dec
insb
xor
sub
incb
adc
inc
lret
pusha
add
sbb
mov
mov
cmp
dec
add
stos
inc
insl
das
mov
jg
push
aad
inc
ret
fldl
mov
stos
pop
fidivs
test
movsb
xchg
jbe
add
cmpsb
xlat
jns
sahf
mov
mov
lea
fcmovbe
fs
cmp
or
fildll
fstl
loope
lods
add
jge
loop
fsts
dec
jl
test
push
in
iret
das
inc
imulb
cmp
imul
jbe
jmp
pushf
out
fidivrs
movsb
mov
cli
and
mov
and
clc
scas
aam
add
and
adc
sub
lods
repz
aas
mov
jg
daa
mov
or
lret
inc
fs
insb
jae
dec
nop
js
lahf
pusha
add
push
das
mov
mov
mov
incb
inc
ja
repz
cmp
add
add
jp
imul
in
test
movsb
inc
scas
in
incb
add
or
test
xor
dec
jbe
xor
add
mov
call
clc
clc
push
aad
imul
jg
and
sarl
mov
stc
or
loopne
sbb
fidivrs
aaa
je
add
mov
mov
xchg
jmp
pop
arpl
fldl
push
fstpt
mov
jbe
dec
add
mov
add
adc
je
jecxz
fsubl
jae
data16
arpl
decb
dec
push
sub
incb
xchg
xor
repz
icebp
les
repnz
decb
icebp
mov
je
fs
inc
cmpsl
mov
lds
pop
sbb
jb
add
decb
adc
sbb
fildll
incb
incb
jo
xor
pop
mov
xchg
add
repz
push
aad
mov
stos
test
jecxz
pop
aad
xchg
aam
adc
xchg
loopne
icebp
jbe
or
push
in
sbb
mov
mov
mov
lcall
dec
mov
fists
ret
in
fs
push
add
and
test
sub
push
or
imull
nop
or
xchg
dec
shl
add
fcmovu
gs
and
add
sti
rcr
stos
xchg
fisubrl
add
xor
aaa
and
mov
mov
in
fwait
insb
out
push
and
call
sti
inc
xchg
popf
mov
decb
mov
int
add
out
pop
sub
inc
inc
xchg
cmp
mov
jmp
dec
outsl
data16
decb
pop
pop
ss
xor
and
adc
and
shlb
cwtl
rcr
divb
inc
mov
fwait
xor
add
xchg
mov
mov
push
iret
sti
pop
jecxz
jae
add
movl
iret
add
popf
dec
pop
push
jmp
add
scas
imul
adc
dec
mov
or
dec
je
add
pop
std
inc
shlb
xchg
sub
adc
aam
ror
xchg
call
mov
test
loopne
inc
sub
xchg
cmp
int3
scas
add
cmp
in
fadd
cltd
sar
in
mov
jecxz
push
inc
add
sahf
arpl
dec
fcoml
out
out
sbb
int3
das
push
loope
jb
adc
outsl
mov
jae
or
shll
fwait
push
in
push
icebp
push
jae
push
adc
xchg
in
arpl
or
push
or
mov
mov
adc
loop
lahf
push
or
cmpsl
cs
xchg
sldt
cs
incl
sbb
jecxz
sub
xchg
adc
inc
in
shrb
xor
or
cmp
add
negl
scas
lahf
cld
push
cmp
inc
rcr
fsubrs
sub
pop
int3
adc
cmp
call
nop
sahf
dec
sub
push
cwtl
mov
add
pop
xor
out
xchg
pop
jbe
hlt
xlat
data16
decb
data16
js
test
add
sub
adc
insb
fmuls
mov
mov
incb
jg
inc
mov
ret
loopne
xor
pop
cmpsb
inc
add
sbb
sub
decb
scas
shl
scas
scas
mov
jae
mov
push
push
sti
fcomp
stc
movsb
dec
or
mull
lods
test
jle
and
push
decb
lods
movsl
mov
in
add
repz
out
faddp
fs
adc
fyl2xp1
sbb
fistpl
xor
adc
movsb
mov
mulb
sub
incb
ss
gs
push
imul
pop
sub
test
js
pop
icebp
inc
decb
sbb
push
add
xchg
dec
xor
push
ja
mov
loope
mov
pop
fst
dec
sub
add
dec
loopne
sub
cli
test
inc
decb
mull
pop
mov
loope
fdivp
and
rorb
decb
call
mov
sub
incb
cwtl
jle
xor
add
frstor
jecxz
jae
mov
jmp
add
stos
add
es
in
stos
pop
cli
xchg
scas
or
decb
mov
xchg
xchg
mov
add
jmp
add
push
sub
es
decb
pusha
decb
cltd
stos
xchg
cmp
push
xor
scas
flds
lahf
call
das
add
incb
jmp
mov
mov
inc
pop
xor
nop
jp
jmp
mov
push
and
sub
incb
in
sti
pushf
sarl
sbb
out
mov
jmp
sar
idivl
pop
cmpsl
movsb
push
dec
add
sti
orb
push
jl
iret
negb
mov
out
in
pop
inc
add
test
and
mov
inc
mov
rclb
and
add
xor
in
lea
dec
add
jns
mov
in
xchg
stc
or
mov
jae
test
sahf
pop
arpl
inc
push
les
stos
ss
loop
addr16
scas
test
cs
test
std
cmpsb
sarl
decb
sbb
add
sbb
pop
test
pop
pusha
pop
cmpsb
inc
add
jno
mov
mov
or
rcrl
gs
add
popf
loopne
lahf
pop
xor
adc
pop
testb
and
jb
dec
loope
out
xor
cmpsb
test
push
imul
and
jb
or
pop
in
add
fsubs
out
add
mov
dec
sub
dec
jle
scas
stos
repnz
cs
nop
pushf
xor
xor
ja
outsb
pop
popa
jo
xlat
insl
movsb
sub
pop
xchg
push
aaa
ret
adc
push
sub
decb
xchg
nop
pop
cmc
dec
push
push
add
iret
push
dec
add
imul
scas
mov
dec
mov
imul
cmp
sarl
es
lock
add
jbe
mov
lods
insb
add
pop
fstpt
test
shll
sub
sub
lcall
loope
lcall
ljmp
push
call
cltd
sbbl
ret
daa
xchg
cmp
or
dec
dec
add
cmpsb
lahf
adc
xchg
sbb
pop
imulb
push
inc
pusha
add
jae
fdivl
or
xor
mov
pusha
sbb
outsb
add
bound
sbb
add
mov
push
cmpsl
dec
mov
mov
fcoml
add
inc
add
jno
movsl
loope
test
adc
dec
jmp
and
decb
pop
fs
push
xor
mov
mov
decb
add
cmp
repnz
add
test
push
cmpsb
fimuls
pushf
das
shlb
xchg
pop
jno
push
jg
pop
sahf
cmp
out
jnp
sub
xor
jbe
inc
aam
push
and
mov
pop
cmp
and
cmp
inc
add
jae
cmp
xchg
leave
ja
add
std
gs
xchg
mov
cmp
dec
movsl
lcall
sahf
push
fbstp
out
inc
cs
xor
push
xchg
dec
and
iret
dec
add
cmc
mov
dec
push
and
insb
test
adc
add
xlat
mov
sbb
jo
decb
cmp
lahf
in
mov
mov
out
xchg
inc
add
fdivr
movsb
and
jnp
xchg
into
pushf
jb
cltd
fists
scas
sub
push
jge
test
insb
add
sbb
or
or
mov
jle
push
inc
loop
mov
dec
pop
fidivrs
dec
iret
popf
push
hlt
push
add
test
insl
test
les
inc
add
pusha
sub
decb
sub
sarb
push
and
decb
decb
adc
mov
xchg
cmpsl
in
lea
adc
dec
or
mov
dec
add
rcll
cwtl
push
sub
inc
mov
es
fnstcw
dec
mov
sbb
out
add
add
and
push
lahf
push
cmp
xor
decb
xchg
stos
rclb
addl
push
add
and
loope
rol
mov
add
push
shrl
out
xor
inc
add
dec
pusha
add
fdivrl
push
add
or
sub
dec
lods
mov
icebp
sub
add
mov
or
sub
cmpsb
sub
and
inc
add
data16
pop
sbb
jmp
jecxz
push
popf
jbe
add
add
decb
loop
pop
xor
add
nop
test
movsl
xchg
fwait
mov
sbb
aad
jl
mov
loopne
pop
xchg
shll
xchg
mov
push
ret
push
sbb
dec
repnz
xlat
xchg
mov
add
inc
add
cltd
push
mov
jge
or
clc
pusha
add
imul
add
lock
inc
scas
addl
mov
cmp
out
jbe
incb
adc
mov
mov
add
arpl
mov
sbb
push
movsb
xor
xlat
in
lea
pop
dec
shlb
lods
loope
sarb
cmc
fstl
jmp
cld
dec
stos
scas
push
scas
rorl
and
aad
ret
bound
dec
sarb
test
dec
and
rcrb
rolb
add
mov
xor
dec
xor
out
adc
leave
loopne
adc
and
es
icebp
hlt
movsb
mov
adc
arpl
pushf
dec
add
dec
add
fnstcw
add
mov
dec
mov
sbb
fdivrp
lret
pop
sbb
mov
cli
dec
push
imul
pop
cli
sbb
addr16
popf
mov
or
jb
aam
mov
sub
mov
loope
inc
sbb
stos
xchg
andl
popa
mov
insl
jno
inc
xchg
jge
push
xchg
xchg
into
sbb
popa
leave
movsl
stos
xchg
into
xchg
jns
loop
add
xor
add
dec
add
jg
cmp
push
mov
pop
pop
nop
loopne
shll
test
mov
fs
add
nop
push
cltd
popa
push
or
jne
repz
int3
jp
pop
xor
mov
pop
inc
inc
add
mov
xchg
pop
fcoml
cmp
jmp
jne
sbb
decb
add
mov
cmc
cs
mov
add
add
xchg
bound
sub
mov
and
repnz
roll
adc
cld
aaa
jno
jo
imul
sub
fprem1
xlat
xchg
add
inc
add
cmp
adc
call
out
adcb
inc
add
xchg
and
cmc
adc
and
stc
outsb
add
inc
dec
mov
addr16
scas
xor
pop
cmp
in
jmp
dec
out
pop
and
decb
jb
mov
hlt
pop
dec
aas
mov
shrb
mov
adcl
dec
sub
push
jnp
jnp
movhps
call
xchg
outsl
xchg
xchg
mov
sub
mov
dec
add
out
inc
add
adc
icebp
jb
mov
pop
mov
adc
pop
sbb
scas
jp
inc
addr16
outsl
xchg
jns
jmp
add
mull
lret
lret
sub
stos
cmpsl
or
ss
xchg
shlb
add
data16
xchg
fisubrl
outsb
mov
add
adcb
add
mov
imul
aaa
negl
xor
pop
push
outsb
add
loopne
add
push
out
mov
and
out
push
clc
mov
jle
add
fs
nop
mov
pop
push
mov
dec
movsb
ds
jmp
jecxz
add
or
ja
cltd
mov
adc
ficoms
arpl
jp
imul
aad
or
decb
add
out
add
adc
daa
sub
nop
inc
cmpsl
mov
out
les
xor
cmp
out
add
decb
loop
sbb
inc
adc
sbb
dec
cmp
lods
push
sub
xor
jge
testl
cmpb
pop
push
mov
or
incb
sbb
lret
rorb
mov
ljmp
dec
add
cmpsb
repz
or
mulb
mov
xchg
out
int
cmp
sub
push
push
decb
stos
adc
jg
popf
add
iret
mov
dec
test
jge
filds
outsb
add
cmp
popa
xor
loop,pt
xlat
add
xchg
dec
add
daa
jmp
add
push
and
push
js
roll
test
loope
scas
sbb
cmp
mov
mov
out
xor
out
iret
iret
int
add
xchg
add
dec
add
fisttpll
shll
jo
xchg
mov
fwait
lds
jp
xchg
push
int3
sbb
das
push
inc
add
aas
pop
repnz
cmp
mov
int3
dec
decb
push
pop
push
or
add
hlt
mov
push
cmp
ret
clc
scas
sbb
outsb
add
pop
fdivs
cld
repz
jge
nop
add
test
test
jmp
ljmp
sub
or
dec
add
lret
sbb
shlb
js
add
test
mov
lcall
fisubrs
push
subb
sbbb
jmp
mov
fbstp
adc
dec
mov
bound
mov
add
js
xlat
cmp
add
mov
push
xchg
hlt
pop
mov
jns
sub
mov
pop
fisubrs
add
sbb
add
push
inc
test
fs
imul
gs
cltd
push
les
into
cmpsb
pop
les
xchg
xor
sub
jae
xor
js
pop
xchg
or
incb
xor
xchg
lahf
xchg
fcomps
dec
and
inc
jp
mov
sahf
jns
dec
adc
insl
push
sub
fsub
lods
or
fmuls
sbb
sbb
mov
push
sbb
jp
pop
and
stc
lret
lahf
lods
adcb
adc
dec
jbe
pop
sub
incb
add
push
rcl
lret
cmp
daa
in
jae
dec
fadd
sub
dec
fiadds
jmp
lds
push
scas
push
aas
repnz
mov
cmp
data16
incb
xor
sbb
jl
cmc
sbb
mov
insl
enter
js
fldl
pusha
nop
arpl
addr16
mov
add
cmp
sub
out
mov
aam
int
and
mov
cmc
or
sbb
out
sbb
or
lds
test
rol
fidivl
aas
faddl
das
dec
cmp
jae
sbb
imul
cmc
xor
mov
rol
mov
in
nop
fcoms
add
mov
jle
dec
add
pusha
add
mov
rcl
mov
xor
lahf
iret
clc
iret
andl
and
outsl
ja
adc
mov
aad
sti
xlat
add
dec
shrb
pop
pushf
push
icebp
sti
ljmp
cmc
sahf
sahf
stc
fisttpl
mov
pop
pusha
pop
repz
sbb
mov
in
pcmpeqd
loopne
movsb
mov
sarl
addl
sub
repz
repnz
mov
add
mov
mov
mov
fwait
das
or
daa
out
cs
mov
add
mov
insl
xchg
push
test
cwtl
sti
sub
pop
aam
xor
das
jg
add
pop
sub
mov
ss
insb
add
or
and
movsb
mov
leave
sbb
popf
cmp
sar
push
adc
enter
mov
xchg
movsl
cmp
xchg
inc
xlat
negb
sub
and
pop
testl
lret
fs
xchg
and
push
loope
pop
sti
sarb
lods
jmp
lea
leave
jno
andl
xor
or
cmp
mov
cli
sarl
out
je
mov
add
and
jl
bound
popf
lds
add
lret
out
adc
dec
sbb
lods
sbb
fldt
decb
pop
into
cs
out
cld
jns
hlt
leave
aad
testl
pop
push
mov
push
arpl
pop
out
add
cli
iret
mov
dec
add
shrl
cmp
dec
lock
xchg
inc
inc
fcmovnbe
int
lret
scas
notb
movsb
fcomps
and
xor
or
adc
cs
pop
icebp
jmp
js
jb
add
stos
pop
popl
add
out
out
fstps
sti
or
scas
aam
fld
pusha
mov
cwtl
incb
fldpi
das
fsts
dec
and
scas
adc
outsl
clc
pop
xchg
in
jle
sbb
add
push
fldenv
incb
push
adc
jle
decl
push
and
push
gs
dec
ret
pushf
jne
stos
pushf
mov
add
jle
addr16
call
loopne
aas
jnp
xor
repz
xor
inc
xchg
cmp
leave
inc
scas
mov
cmp
es
test
incb
fcompl
mov
movsl
or
test
add
insb
add
imul
stc
sub
push
pop
jge
add
xor
dec
arpl
repnz
imul
std
jno
mov
dec
popf
add
incb
mov
stc
ljmp
lds
call
inc
add
and
mov
adc
add
push
or
push
or
pop
loopne
adc
popa
add
and
add
incb
aam
jno
add
xlat
loope
cmpsl
insb
xchg
and
adc
sahf
stos
fisttps
and
xor
cwtl
es
cmpsl
ss
in
in
xor
loope
add
mov
add
and
add
add
hlt
sbb
shlb
adc
add
shlb
cmp
sahf
push
or
fldenv
mov
push
insb
add
jbe
incb
adc
test
mov
sbb
push
decb
rcl
mov
lea
xor
ss
and
jp
and
xchg
stc
mov
clc
or
fwait
add
add
xor
add
xor
xlat
hlt
inc
testb
xor
jae
xchg
add
mov
xchg
xchg
icebp
dec
decb
add
mov
mov
test
jae
cld
xlat
jg
xchg
lahf
enter
sbb
lods
lea
xlat
and
dec
pop
cmpsb
jns
jo
and
es
sub
incb
iret
or
jl
xchg
and
loope
sub
sbb
or
orb
push
mov
xchg
push
mov
cs
movsl
mov
popf
cs
subl
push
jb
cmpsb
sbb
adc
movsb
lds
loopne
pop
mov
jecxz
add
sub
mov
xor
pop
dec
dec
out
add
dec
rorb
int3
test
dec
jp
cmpsl
sti
std
mov
push
mull
mov
das
fdivr
sbb
sub
cmpsl
pop
dec
add
push
gs
adc
and
call
ds
test
add
cmp
push
int3
je
sub
in
aaa
push
add
push
loopne
add
push
inc
jmp
mov
arpl
clc
aas
stc
imul
and
mov
lcall
sbb
add
sbb
xchg
sub
cmp
xor
xlat
jae
lods
inc
add
mov
ret
push
mov
inc
xchg
fcomps
fstpl
add
push
les
sub
add
or
add
dec
js
fidivl
lret
push
sub
jae
jne
pop
scas
sbb
call
jne
out
sti
mov
lods
mov
out
test
xor
sbb
mov
int3
and
dec
xchg
xor
mov
inc
push
mov
inc
push
imul
out
fists
stos
iret
mov
incb
sbb
aad
mov
push
cld
push
inc
shlb
push
mov
shrb
out
lds
xor
mov
incb
add
adc
xchg
inc
in
push
xchg
fsubl
sahf
mov
and
pop
sahf
adc
mov
sbb
jne
je
add
sub
mov
testb
data16
mov
add
inc
int3
sbb
gs
fcoms
sub
imul
incb
push
popa
nop
fildl
sbb
popf
dec
fldl
sbb
test
std
push
aas
mov
fldenv
mov
push
rol
test
jl
test
push
incb
mov
icebp
jne
mov
shlb
stc
ljmp
aas
or
movsb
jp
add
loope
aas
xor
pop
lret
jmp
out
in
cmp
aas
cmp
mov
ds
mov
aam
daa
imulb
outsb
sbb
out
incb
decb
dec
mov
adc
sbb
cmp
jno
mov
incb
and
and
rcrl
add
ficompl
xchg
push
add
fidivs
cmpb
dec
add
fadds
insb
lods
scas
jb
ret
ljmp
leave
inc
dec
incl
push
pop
out
loopne
mov
or
mov
rcll
cmpb
push
data16
dec
add
es
movsl
lds
add
sbb
inc
fdiv
rcll
mov
inc
jb
sarb
cmpb
hlt
and
xor
push
in
push
inc
add
ja
and
incb
pop
imul
sub
add
decb
pop
jne
leave
pop
dec
add
data16
inc
scas
push
ror
dec
into
imul
pop
push
int
leave
mov
or
out
clc
xor
ds
mov
pop
shlb
mov
add
add
sbb
sarl
in
mov
add
xchg
and
push
int3
test
into
jmp
data16
inc
mov
call
lahf
push
hlt
insb
add
push
push
add
nop
mov
xor
add
daa
sbb
decb
mov
add
adc
out
mov
outsl
call
cmpsl
or
cmp
mov
mov
add
fs
mov
aas
mov
sub
mov
push
iret
insl
push
jle
adc
popl
mov
lahf
adc
inc
cs
fnstenv
test
fdivrs
incb
stos
and
decb
incb
lods
jne
xor
and
cmpsb
sbb
rorl
add
lcall
movsb
adc
adc
lret
outsl
repz
pop
cld
jbe
mov
nop
test
movsl
test
leave
sbb
add
push
pop
std
int
mov
sub
hlt
lods
out
ret
pop
jno
clc
mov
xor
cmp
shll
xor
movsl
inc
add
shrb
add
inc
add
sub
decb
push
imul
adc
mov
sbb
sub
std
add
push
pusha
add
lahf
pop
adc
rcrl
pop
insl
fdivrl
ljmp
mov
cmp
cmp
popf
mov
loop
add
inc
add
push
inc
std
jbe
mov
decb
arpl
dec
xor
xor
shrb
adcl
push
movsl
stc
addb
cmp
add
das
sub
call
roll
jno
pop
mov
mov
stos
jo
std
into
cmpsb
jmp
std
mov
ljmp
add
outsb
add
xchg
in
sbb
sub
ss
into
mov
or
inc
cmpsb
dec
pop
repz
pop
or
pop
lods
pop
adc
jg
test
inc
xchg
fbstp
mov
and
inc
nop
arpl
jno
push
decb
cmp
clc
out
arpl
push
jl
add
mov
add
sahf
push
ficompl
cmpsl
xlat
xchg
cmp
jbe
cmpsb
push
lret
pop
mov
loope
pop
test
arpl
push
jne
sbb
xor
sub
lret
aas
xlat
fildll
out
les
cs
lock
add
jmp
insb
decb
decb
add
push
xchg
fstl
push
add
loop
stos
cltd
add
add
pop
xchg
fiadds
int3
fsubr
ret
pop
mov
and
sub
and
stc
orl
gs
pop
and
aaa
jo
sub
sbb
in
mov
loopne
inc
je
test
push
xor
sub
xor
jmp
cmp
loop
jno
rorb
das
movsb
outsl
test
adc
sub
cwtl
push
data16
incb
sbb
test
add
add
in
fs
incb
das
aas
jbe
push
add
movb
jle
mov
sbbb
leave
testl
daa
xor
xor
sub
decb
dec
or
inc
lret
and
decb
pop
sub
mov
pop
insb
add
cli
xlat
sub
mov
dec
inc
push
or
xchg
dec
js
inc
push
mov
fcom
test
or
ljmp
hlt
mov
lock
cmc
mov
int3
dec
add
outsb
incb
lcall
cmp
pop
xlat
call
xchg
push
add
and
mov
lock
sbb
insl
lds
sti
cwtl
dec
enter
leave
jae
xchg
imul
loop
shld
xor
pop
jg
outsb
add
mov
int3
shl
jae
or
dec
movsl
fadd
sub
icebp
and
add
ljmp
sahf
xor
je
ret
jecxz
add
xchg
shlb
daa
mov
decb
push
cmp
adc
repz
xchg
addr16
aam
mov
scas
sbb
xchg
sbb
fmul
insl
dec
adc
xor
mov
loop
sarb
inc
rcll
mov
dec
sub
sbb
sarl
pop
xchg
nop
int
sti
arpl
xchg
shll
in
cs
bnd
adc
popa
rclb
or
imul
outsl
xor
xchg
sub
dec
repnz
sub
popa
rol
sbb
sub
sahf
dec
jnp
repz
dec
gs
mov
jge
push
cmc
lahf
mov
pop
fimuls
data16
fcoml
je
add
jns
push
addb
rcrb
fcom
adc
cwtl
pause
pushf
ja
and
dec
in
push
icebp
sbb
xchg
in
repnz
out
cli
pop
je
pop
pop
in
lds
jae
cmp
xor
loop
pop
movsl
sarb
cmp
pop
push
repz
daa
pop
mov
decb
mov
xchg
imul
ds
cld
pop
stc
outsb
add
cmp
mov
xchg
lods
sbb
shll
cwtl
xor
nop
into
pop
sahf
aaa
mov
stc
or
das
popf
imul
aam
dec
jge
xchg
jne
dec
add
sti
out
mov
orl
inc
mov
add
jae
push
cmc
stc
imul
mov
sub
xchg
cmpsb
push
add
adc
adc
fs
xor
incb
jns
dec
outsb
add
adc
enter
in
inc
add
jmp
add
ja
add
jo
jle
xchg
xor
push
call
dec
pop
clc
xor
add
xchg
sahf
enter
sarl
add
add
dec
lahf
xchg
dec
add
mov
scas
in
xor
pop
cmpsb
in
or
rolb
mov
es
adc
push
jae
fbld
add
mov
push
add
xlat
or
rep
cltd
mov
or
lcall
xor
cmp
rol
decb
xor
call
sbbl
fistps
jnp
lods
inc
push
out
xchg
xor
mov
fistpll
mov
cmp
aas
call
repz
dec
decb
loopne
mov
xchg
adc
sbb
push
mov
add
add
and
xchg
cmp
mov
xor
pusha
add
push
sub
es
jle
inc
or
fidivrs
sub
incb
xchg
xchg
int3
popa
jnp
and
outsb
lock
incb
fidivrs
or
cmpsb
or
pop
fcompl
xor
mov
mov
sub
adc
cmpsb
enter
pop
fmull
inc
out
push
test
cmp
leave
andb
or
add
ret
mov
mov
xlat
or
xchg
cmp
sub
and
incb
mov
mov
movl
add
shrb
ficomps
xor
or
xchg
into
jb
mov
lock
cmp
leave
mov
mov
sbb
sub
cmp
sub
sbb
test
fsubl
mov
jb
sbb
icebp
push
loope
stos
aad
sub
jecxz
lret
incb
mov
xor
lods
ljmp
loopne
fstl
cli
imul
jecxz
scas
push
inc
mov
push
pop
test
jns
xchg
mov
ja
mov
dec
repnz
add
mov
mov
xor
movsl
xchg
lret
ljmp
sahf
inc
add
lret
jns
inc
jne
ja
enter
rcrb
addr16
push
and
sbb
addl
mov
xor
mov
push
insb
add
jae
dec
jne
or
scas
xchg
cmc
fmull
std
sbb
or
pop
inc
add
in
xor
movsb
sbb
push
and
orb
mov
scas
xor
fidivl
add
jg
cli
into
stc
loopne
in
cmp
loope
adc
test
jecxz
jns
add
lock
or
idiv
and
imul
js
inc
aas
mov
mov
sub
push
dec
ds
out
pop
dec
pop
les
jl
movsb
loopne
cmp
and
add
inc
pop
mov
leave
sub
sbb
loop
push
ficoml
mov
subl
imul
pusha
add
xor
jbe
ret
fwait
add
int
inc
xchg
add
data16
incb
xor
jae
push
ficoml
repnz
mov
add
lock
jmp
sub
dec
add
pushf
data16
push
fwait
xchg
sbb
jge
add
add
inc
pop
repnz
cli
pop
cmpsb
stos
xor
fndisi(8087
mov
pop
or
push
push
loopne
scas
cli
rclb
iret
mov
add
fdivl
add
mov
in
xchg
shrl
sahf
shlb
adc
cmp
jne
js
pop
shlb
xor
icebp
sbb
add
bnd
insl
in
scas
sub
pop
or
movsl
or
mov
fdivs
fisubl
arpl
loope
pop
adc
and
push
sub
imul
inc
mov
call
xchg
inc
jge
sbbb
clc
or
paddb
mov
add
lahf
jg
mov
inc
add
and
out
mov
sahf
cmp
mov
lcall
inc
jnp
out
fstps
outsl
ficoms
in
gs
jle
rolb
sbb
add
adc
incb
ret
lahf
movsl
mov
jle
cmc
ret
mov
or
add
out
inc
sti
jns
xor
incb
cpuid
xchg
dec
lock
cmpsb
or
inc
add
es
and
dec
jmp
paddsw
incb
outsb
bnd
dec
cmp
push
incb
or
cmp
cmp
stos
ret
mov
mov
inc
push
mov
enter
popf
fmul
out
in
das
imul
adc
cmpl
mov
insl
xor
iret
mov
test
inc
incb
mov
inc
add
jg
xor
repz
ds
incb
lcall
dec
add
out
inc
jnp
sub
sub
cmp
xor
daa
and
or
fdivr
dec
add
and
sub
decb
data16
xorb
decb
add
das
out
push
xor
decb
decb
out
aaa
es
scas
pop
sbb
cmp
call
lds
ds
cmpsb
scas
inc
add
mov
dec
cs
incb
dec
add
and
fisttpl
rcrb
je
enter
je
cmp
decb
jp
icebp
in
aaa
dec
lret
sbb
notb
fcompl
add
mov
pop
fcomps
mov
and
cmpsb
mov
dec
dec
decb
add
cli
mov
fsubrp
jo
xchg
pop
mov
push
pop
xchg
add
pop
dec
xchg
iret
add
cmpsb
les
and
xlat
pusha
add
pop
aad
add
rcrl
add
fidivrs
jecxz
xor
mov
enter
ss
dec
add
dec
jno
mov
pop
je
push
mov
lahf
pop
dec
arpl
cltd
push
cmp
orb
mov
jecxz
mov
sarb
negb
ljmp
inc
int3
out
mov
push
cmp
fcmovbe
push
out
out
cmp
repnz
test
decb
fwait
icebp
mov
test
incl
or
stos
mov
push
or
lods
pusha
decb
add
or
incb
add
dec
fimull
jge
in
mov
add
es
outsb
add
and
cmp
or
inc
xchg
push
jno
ret
lea
xlat
test
dec
imull
test
adc
cld
iret
fcomi
insb
incb
incb
sbb
add
inc
lods
iret
xor
fidivl
aas
xor
movsb
jp
sub
sub
fs
dec
push
xchg
and
scas
mov
push
sti
sub
dec
lods
mov
jns
and
sbb
enter
xlat
scas
fadds
add
xchg
arpl
sbb
add
push
lock
rcll
jmp
pop
cmpsb
iret
test
xor
inc
add
mov
jb
les
push
push
jnp
push
daa
dec
or
mov
mov
insb
add
pop
jg
add
incb
out
push
cli
std
pop
sahf
or
ss
scas
add
add
dec
adc
gs
lods
into
sbbb
enter
sahf
fstps
sub
dec
sbb
cmpl
inc
inc
out
jnp
jns
lahf
mov
lcall
ljmp
incb
incb
ficoms
sahf
loop
lret
add
test
mov
movsl
push
std
adc
incb
push
mov
jmp
addr16
sbb
popa
push
add
stos
xchg
mov
jge
add
pusha
decb
loope
test
loop
jecxz
ds
jnp,pt
adc
rorb
inc
sub
decb
incb
push
add
push
push
sarl
dec
add
jge
incb
or
shl
icebp
cmpsl
or
cmc
or
add
mov
dec
xor
lret
aam
dec
and
and
stos
lret
aas
push
add
jp
jg
pop
pushf
pop
sarb
mov
or
mov
test
fistl
jg
mov
mov
loopne
add
mov
cmpsb
fwait
cmp
xor
insl
cltd
push
gs
add
inc
cmp
mov
jno
or
pop
stos
popa
sub
aad
xor
lods
gs
test
sti
mov
incb
push
cli
fiaddl
cmp
pusha
add
cmc
mov
lods
jge
jge
test
inc
add
lret
add
lods
popa
inc
add
out
push
add
aaa
test
and
jo
aad
in
cmp
pop
enter
mov
xor
add
testl
cmp
aam
jno
or
sarb
lcall
pop
jecxz
pop
lahf
out
mov
pop
pop
cld
repnz
xorb
inc
push
add
in
movb
jae
jbe
daa
xchg
popa
imul
incb
clc
push
clc
xchg
into
adcb
sbb
mov
xor
dec
mov
xor
dec
mov
ja
xchg
push
sbb
mov
mov
je
sbb
fidivrs
pop
or
ds
fidivrl
push
xchg
push
mov
sbb
aas
test
bound
lods
add
dec
jne
out
fisttpll
pop
mov
in
jp
in
dec
xor
cltd
jg
inc
adc
push
jmp
jge
loope
ret
or
decb
xor
mov
pop
mov
xchg
xchg
and
stos
pop
loop
js
stos
xchg
int3
cld
in
push
mov
mov
negl
es
decb
cmp
xorb
jmp
inc
mov
jecxz
push
and
cltd
push
scas
cli
rcrl
push
add
stos
out
or
in
mov
loopne
push
shrb
loop
cmpsl
sbb
and
mov
cmp
add
jecxz
cmp
fimuls
rcll
aas
sub
mov
push
pop
cld
ja
mov
out
inc
cmp
jae
sbb
ljmp
cmp
data16
cmp
hlt
cmp
sbb
insl
mov
pushf
adc
cwtl
test
pop
mov
dec
pop
mov
pop
sbb
xchg
int3
cmp
jge
jl
xchg
inc
add
fisttps
xchg
mov
sarb
insb
add
dec
add
scas
jmp
add
inc
inc
add
in
loop
dec
decb
xor
jo
hlt
sub
shlb
adc
shrl
push
je
add
leave
fcompl
sbb
je
jp
push
add
sbb
mov
fucompp
push
jb
add
push
jle
fldenv
add
outsl
sub
pop
inc
stos
aam
sbb
insl
push
out
dec
push
push
lret
sbb
push
jle
push
scas
enter
outsb
add
or
inc
mov
xchg
inc
add
mov
rcll
lock
pop
jmp
cmpsb
jnp
fs
push
pop
push
arpl
xor
loope
sbb
dec
out
jbe
push
fwait
int3
or
xchg
and
rcrl
xchg
in
jmp
jle
dec
mov
leave
outsb
add
pop
mov
add
insl
xor
repnz
adcl
pop
adc
imul
adc
call
or
dec
cmp
test
fdivr
adc
jl
nop
dec
inc
add
jge
and
fsubrl
xor
and
test
sub
mov
mov
movsl
jg
jmp
add
mov
adc
not
push
push
insl
addr16
jg
push
xchg
mov
lret
sbb
mov
decb
lea
add
mov
imul
mov
adcb
divl
pop
xchg
in
negb
add
jmp
add
push
cmp
lods
add
xchg
inc
decb
inc
add
dec
and
fcompl
fstpl
outsb
add
cs
incb
xchg
xlat
mov
rolb
or
popa
jle
stc
aam
xchg
add
push
pop
leave
std
rol
pop
push
jecxz
pop
lahf
mov
adc
add
jmp
mov
push
mov
mov
pushf
dec
add
in
fsub
gs
cmp
out
cmc
push
leave
cmp
cld
scas
nop
xlat
cli
or
gs
mov
add
fxch
stos
repnz
mov
push
sahf
loopne
dec
sbb
fs
cs
xchg
int
push
jp
pop
cltd
cmp
loopne
add
test
dec
inc
incb
sub
aam
push
mov
pop
cwtl
aaa
sbb
movsl
clc
sub
faddp
jb
add
aad
arpl
roll
test
inc
cs
sbb
fdivs
xor
mov
mov
fisubrs
addb
ljmp
add
sbb
push
or
mov
and
dec
pop
shr
std
jg
fdivp
mov
add
pop
inc
xchg
jne
packssdw
and
decb
xor
push
outsb
decb
decb
jl
adc
add
sbb
out
push
inc
loopne
and
push
push
mov
add
sub
popa
fisubrs
push
jo
push
or
decb
rcr
in
ss
xchg
and
stos
and
mov
sbb
xchg
scas
inc
xor
stos
inc
add
pop
and
incb
testl
push
and
out
add
xchg
pop
jae
xchg
add
idivl
test
add
stos
push
out
out
std
call
push
jnp
and
lret
outsb
mov
mov
ss
xchg
dec
in
lcall
xchg
dec
lods
xlat
xor
enter
sbb
pop
rorb
outsb
add
clc
or
mov
incb
mov
pop
and
add
sbb
mov
mov
aas
xor
jecxz
ficomps
mov
jno
fisubrl
outsb
out
inc
ds
xchg
sub
cld
sub
scas
sahf
fdivr
inc
xlat
adc
lods
je
repnz
xor
or
mov
mov
mov
je
mov
out
in
insl
and
sub
jno
cmp
loop
xchg
or
push
add
inc
inc
add
mov
pop
push
shrb
jns
jnp
in
cmp
fwait
xchg
fisubrs
js
shrb
cmp
lahf
push
pop
repnz
out
and
dec
mov
dec
sbb
mov
ss
popf
mov
sbb
inc
out
mov
shlb
mov
pop
cmc
mov
pop
xchg
adc
mov
das
movsl
sub
dec
dec
lret
subb
bound
arpl
dec
push
jg
lods
pushf
mov
jo
in
in
rolb
mov
add
jg
fwait
repnz
les
test
mov
cmc
data16
shlb
mov
stos
mov
cltd
adc
int3
dec
add
call
incb
xchg
mov
lret
out
or
sar
push
imul
lret
ds
in
lods
or
jmp
lods
cmp
mov
dec
add
ficomps
fldcw
fdivrs
jne
and
popa
jne
imul
jle
incb
cld
repz
mov
xor
jno
xchg
mov
test
cmc
insb
add
in
inc
add
and
decb
push
cmc
sub
sbb
add
inc
add
dec
and
mov
iret
dec
add
cmc
into
movsb
ss
cmp
add
sub
push
add
sahf
mov
mov
cmp
subl
inc
add
call
add
movsb
call
push
stc
cmp
loope
mov
cmc
xor
das
push
insl
mov
pop
cmpsb
in
mov
cld
cmpsb
jl
pop
mov
shlb
xor
test
jo
andl
ror
jnp
lods
add
loop
mov
je
and
incb
or
shl
pop
jge
rcr
ds
inc
fsts
xchg
shll
lret
aam
and
sti
loopne
clc
das
sbb
iret
inc
int
orb
imul
pop
push
movsl
adc
popa
cmp
fwait
push
popf
lea
xchg
cmc
xchg
sbb
aam
inc
iret
int3
cmp
add
mov
xchg
pusha
add
pusha
push
insl
jns
mov
lret
jecxz
cmpsb
mov
jecxz
add
jnp
xchg
pushf
orl
iret
ljmp
adc
push
push
pusha
div
fs
dec
add
loop
scas
push
incb
mov
jl
imul
incb
and
pop
leave
inc
incb
push
jl
movsl
mov
mov
shrb
out
dec
add
aaa
test
add
dec
add
decb
cmp
or
gs
movsl
and
cmp
mov
cmpsl
or
cltd
mov
in
pop
and
mov
gs
incb
jp
push
inc
add
sarl
add
mov
mov
fbstp
out
call
dec
push
add
sub
mov
cmp
pop
jno
popf
shl
repz
mov
into
fxch
xor
push
ja
jle
add
leave
inc
pop
pop
movsl
insl
repz
mov
enter
testl
call
les
xchg
stc
call
push
add
hlt
sar
inc
jge
cmpb
clc
shrl
pop
xchg
inc
je
jae
data16
scas
clc
mov
xchg
dec
aad
aam
je
and
sbb
insl
jb
lds
addr16
add
int3
adc
imul
or
dec
mov
jecxz
jne
push
fistpl
jp
push
push
add
and
inc
add
je
sub
nop
pop
sub
stos
lods
push
pushf
sub
lods
dec
xor
inc
loop
xchg
test
test
cld
push
inc
xchg
mov
pop
add
mov
sub
incb
mov
out
add
popa
ret
jns
shll
push
incb
sbb
cli
sbb
loop
jle
dec
rdmsr
lret
xchg
stc
or
lea
out
jo
inc
xchg
jmp
cmp
aaa
test
mov
or
jnp
xor
int3
jl
xchg
jecxz
mov
push
sbb
mov
mov
shlb
cs
sub
adc
xlat
out
in
loop
and
xchg
fnsave
mov
mov
mov
pop
fbld
add
sarb
mov
push
enter
std
mov
or
loop
addb
mov
dec
mov
sbb
aaa
sbb
test
sarl
pop
aas
or
incb
fs
incb
add
aas
sbb
pop
andl
in
ds
loop
push
mov
sub
decb
cmp
xchg
dec
add
jne
cs
push
lahf
insb
add
sbb
in
fwait
adc
cmp
aas
mov
push
fs
aam
popf
jo
clc
cmp
lcall
cmp
fistpl
add
mov
sarb
cmpb
insb
add
xor
pop
xchg
cmp
xor
inc
lahf
inc
sub
pop
xor
adc
test
pop
leave
into
cld
mov
inc
cmp
mov
movsb
jp
test
pop
out
stos
ret
pop
or
add
xchg
adc
daa
xchg
adc
mov
pushf
sub
add
xchg
cmp
jl
sbbb
pop
add
inc
stc
sbb
add
mov
incb
mov
jnp
jne
lds
cmpl
xlat
imul
test
mov
andb
cmp
inc
aaa
and
decb
dec
and
inc
add
rorb
dec
push
stc
es
and
incb
add
dec
lret
stc
lods
mov
add
xor
gs
arpl
add
in
cmp
pop
pop
lods
mov
inc
incb
sub
mov
inc
add
push
imul
sbb
xchg
adc
shrl
add
sub
incb
add
in
fisttps
cmp
pop
fisubrl
das
xchg
mov
xchg
shl
sbb
loop
ja
jns
sti
lcall
sbb
incb
push
out
data16
pop
cmovp
dec
jmp
mov
es
negl
jge
scas
idiv
mov
add
inc
xchg
test
and
inc
cli
sbb
cmp
mov
mov
push
orb
add
in
in
xchg
inc
add
cmc
gs
lea
add
lock
aad
xor
lcall
xor
mov
add
mov
popa
add
jo
arpl
fwait
les
popa
pushf
int
cmpsb
mov
xchg
inc
incb
add
xchg
fstl
rcll
mov
adc
leave
cltd
mov
stos
pop
test
inc
cmp
ficomps
daa
or
imul
and
incb
add
addr16
xor
mov
mov
fstp
aas
cltd
push
mov
push
movsl
cmpsb
sub
imul
xchg
inc
insl
cmp
xor
lea
or
incb
adc
or
add
or
jecxz
repz
out
adc
dec
add
pop
push
fyl2xp1
sbb
mov
stos
xchg
lret
aad
push
leave
incb
add
push
xchg
les
add
int3
push
decb
inc
test
dec
dec
jle
dec
mov
add
cld
mulb
rcl
les
and
add
or
sahf
mov
push
in
mov
ss
inc
sbb
das
xchg
adc
mov
mov
pop
jle
jno
mov
aam
jne
leave
xchg
sub
nop
push
incb
out
lods
clc
ror
inc
add
clc
mov
std
fidivs
test
mov
add
loope
jno
mov
xchg
icebp
xchg
sbb
out
mov
icebp
xor
and
lret
test
sbb
decb
ljmp
repnz
sbbl
aas
cltd
pop
add
test
pop
mov
cwtl
movsl
jb
ror
lds
test
imul
mov
ds
mov
jo
add
mov
xchg
mov
stos
pusha
add
mov
add
add
repnz
pushf
fucom
int
mov
sbb
jle
mov
or
add
test
mov
or
gs
cmp
test
data16
outsb
add
sub
decb
mov
les
pop
push
add
push
bound
movsl
stos
and
outsb
js
adc
loope
add
in
aad
dec
mov
imulb
rol
mov
ret
adc
fs
stos
in
and
scas
jno
ret
mulb
dec
mov
dec
sti
adc
jp
nop
xor
int3
ss
xor
stos
push
fistl
push
mov
mov
imul
lret
cld
adc
jle
add
ret
add
mov
ljmp
xchg
sbb
sub
xchg
and
shll
xchg
ret
lea
shlb
jno
add
mov
andb
dec
adc
push
movsb
call
cmp
inc
inc
and
sar
fbld
loop
fs
jb
popf
add
outsb
fsubrp
mul
xchg
lods
sub
ficoml
aad
nop
lds
popf
les
xchg
push
and
inc
mov
test
sarb
sub
mov
data16
addr16
mov
out
out
gs
call
ss
and
icebp
lret
popf
pushf
jo
loop
sbb
add
mov
ficoms
es
inc
lds
or
decb
pop
js
or
in
mov
les
sbb
push
dec
jp
into
pop
aam
imul
jecxz
or
fistpll
mov
nop
push
push
jbe
dec
nop
jg
stos
ret
nop
inc
adc
incb
jg
fsincos
fcoms
popa
aas
cli
jb
jo
lahf
imul
inc
inc
jecxz
loopne
movsl
cwtl
js
stos
pop
xor
cltd
sub
mov
and
out
add
addr16
xchg
jns
mov
movb
cmp
push
daa
adc
int
arpl
xor
aad
pop
pop
icebp
inc
add
insb
gs
scas
pop
dec
aas
std
add
adc
gs
push
incb
cld
mov
in
daa
test
dec
and
sub
test
pop
mov
repnz
sub
mov
repnz
adc
mov
sbb
mov
aam
insl
aad
sarl
cmc
sub
inc
incb
incb
clc
int
mov
pop
push
cmp
push
sub
iret
add
pusha
mov
mov
out
ds
xchg
jne
add
inc
fadds
inc
mov
pop
jge
les
pusha
add
xchg
mov
call
and
decb
xor
lock
out
sub
ret
inc
fwait
mov
lods
cli
jg
or
sbb
stos
mov
or
dec
and
loopne
add
xchg
and
incb
arpl
push
sub
push
aad
sti
mov
push
js
popf
cmpl
das
xchg
mull
xor
aas
rcrb
pushf
in
outsl
push
inc
add
push
sbb
ss
arpl
mov
inc
sub
pop
mov
pop
lret
scas
sub
incb
xchg
cmp
cld
xchg
shr
or
in
cwtl
and
push
add
dec
aad
adc
sub
dec
and
and
hlt
dec
add
test
or
in
ror
cmp
sbb
mov
insl
jecxz
xchg
pop
imul
jbe
mov
sti
cmpsb
call
add
xchg
dec
add
mov
lcall
adc
movsl
inc
push
pop
push
add
mov
adc
xor
xor
fsubrs
decb
jo
cld
pop
test
add
cmp
pop
mov
mull
pop
lret
jl
arpl
adc
mov
or
mov
inc
movsl
inc
les
fbstp
dec
addl
negb
pusha
movsl
repnz
inc
add
push
repz
mov
pop
lcall
cmp
fnstsw
mov
mov
push
add
rolb
mov
dec
incb
scas
dec
mov
or
mov
add
mov
ja
fldenv
repnz
lods
dec
outsb
add
jns
add
scas
cmpsb
aas
mov
sub
incb
pushf
pushf
imul
mov
ficoms
pusha
decb
in
add
mov
shlb
inc
fsub
hlt
sub
leave
aam
inc
dec
sub
imul
roll
jmp
adc
pop
mov
dec
add
mov
incb
decb
sub
inc
mov
movsb
mov
insb
add
add
fmull
test
jno
iret
int
shll
cmp
out
mov
add
dec
pop
jp
jbe
pop
jb
xor
dec
xor
rorl
cwtl
cmp
add
or
add
push
xchg
scas
mov
mov
xlat
push
decb
outsl
scas
xor
add
pop
fwait
insb
mov
sub
dec
sbb
incb
xchg
imul
fcom
inc
add
dec
aad
xchg
lahf
outsl
push
test
pop
xor
sub
adc
aas
jno
add
ljmp
pop
jno
pop
jne
cld
ss
and
push
negl
mov
add
incb
inc
cmp
in
cltd
jb
and
jg
push
repnz
outsb
cmpsb
pop
movsl
je
sub
inc
jl
insb
addr16
inc
add
mov
push
test
arpl
rolb
lea
add
pop
jg
mov
pop
cmpsl
dec
mov
add
incb
scas
mov
sbbb
sub
lss
mov
or
push
fs
mov
inc
lahf
add
jecxz
xchg
jae
push
add
testl
lods
arpl
imul
inc
iret
ds
push
out
push
cmp
rcll
outsl
int3
adc
test
pop
dec
mov
or
add
fwait
pop
inc
add
xor
xor
jae
cs
ss
jmp
cmp
insb
jb
flds
add
cmpb
pop
mov
or
incb
fstpt
xchg
pop
aaa
stos
cltd
xor
pop
int
ss
inc
push
rorb
pop
scas
fs
or
clc
push
test
mov
xchg
mov
mov
enter
orl
add
incb
and
shr
pop
ljmp
enter
sub
lods
popf
repz
adc
add
mov
dec
dec
add
cmp
mov
popf
mov
or
inc
data16
jecxz
adc
lret
mov
lcall
xlat
imul
lods
cs
jb
outsl
push
add
in
and
out
gs
ljmp
push
enter
adc
xchg
int3
ret
test
aam
cs
popa
push
lret
mov
lock
inc
mov
ret
js
in
ret
data16
sub
incb
arpl
sub
cmp
and
jg
imul
into
dec
decb
jg
pushf
and
push
fs
jecxz
cmp
test
pop
cmc
cld
mov
jae
xchg
add
ss
add
test
adc
js
incb
add
push
lods
ljmp
jp
xor
push
test
push
js
add
shlb
insl
stc
daa
xchg
pop
std
or
lods
or
xchg
in
xchg
xor
ds
push
add
rclb
stos
movsl
dec
mov
pop
add
cmp
or
std
repnz
xchg
pop
hlt
mov
fwait
movsl
iret
or
decb
cmp
leave
ret
cltd
xor
push
aaa
mov
push
mov
cld
xlat
out
inc
add
push
inc
in
dec
sub
lods
and
push
adcb
sub
sbb
rcrl
outsl
cmp
dec
scas
mov
xchg
cmpl
lahf
scas
fwait
mov
ss
push
enter
cld
cli
js
in
dec
shll
movsb
jbe
lahf
inc
add
and
decb
shr
sub
loop
jns
add
lock
jg
hlt
mov
add
or
push
sub
push
jns
fisubl
sbb
pop
js
popa
je
push
les
adc
in
addr16
pop
and
out
and
aam
mov
test
mov
jecxz
or
cltd
movsl
sti
push
cmpsl
pop
mov
jnp
and
jg
lock
enter
jl
inc
dec
fldt
pushf
pusha
jnp
ret
cs
jb
push
push
shl
adc
or
jo
add
lds
aad
pop
int3
sbb
sahf
add
cmp
sbb
imull
ljmp
cmpsl
shrb
xlat
aad
pop
adc
insb
add
mov
stc
xchg
xchg
std
jle
lret
in
add
in
dec
push
add
hlt
test
cmp
imulb
cld
xchg
xchg
adc
lods
adc
sub
fs
adc
dec
mov
mov
mov
fldt
cmp
pop
pushf
inc
ja
imul
in
xor
fldcw
xchg
adcb
jnp
std
push
repz
pop
rorb
mov
lret
xchg
add
sti
sub
test
incb
mull
add
mov
bound
fs
push
aaa
push
scas
xchg
push
subb
xchg
iret
aam
mov
and
jmp
and
scas
int3
lea
lret
pop
sahf
mov
cmp
movsb
fadd
shr
aas
jmp
adc
decb
adc
arpl
loope
cmc
jne
jne
cs
sbb
jle
add
jns
mov
cmpsb
addb
pop
movsb
and
loopne
pop
aaa
pushf
cwtl
mov
insl
cmpsl
or
rcl
loop
jecxz
add
pop
inc
sbb
xor
and
and
add
sub
push
rclb
fiaddl
pop
fiaddl
push
xor
test
jmp
and
jecxz
lcall
add
add
inc
add
mov
cmp
mov
sbb
or
mov
jns
jno
pop
stc
cmp
xchg
sti
loopne
mov
test
mov
call
ss
xchg
inc
add
cmpl
xchg
aaa
adc
and
mov
mov
add
push
lret
or
add
insl
jnp
stc
xchg
gs
cli
in
adc
xchg
push
xor
xchg
mov
out
push
adc
xor
stos
adc
xchg
adc
mov
dec
add
lock
aad
test
incb
or
decb
push
ffreep
mov
adc
into
jp
out
adc
test
inc
aam
ljmp
aad
aaa
push
fmulp
push
pop
in
popf
inc
add
mov
dec
add
jg
inc
into
ret
orb
mov
jmp
test
rclb
pop
xor
aam
cmp
stos
add
add
cmp
jne
stos
outsb
dec
scas
xchg
orl
dec
add
cli
pop
sbb
out
add
cld
sub
incb
push
lods
ljmp
xchg
jbe
mov
jp
cld
sub
push
adc
xlat
jg
hlt
pop
mov
outsl
jne
jp
rcr
add
adc
jno
push
push
ljmp
jp
pushf
insb
arpl
mov
enter
in
es
popa
pop
data16
outsb
add
jno
mov
add
dec
add
or
out
mov
inc
pop
push
stos
fisubl
in
push
popa
jle
lcall
xchg
in
xor
xchg
sub
sbb
push
incb
insl
add
pop
dec
mov
xlat
or
fstpl
sbb
cmp
jns
add
adc
jge
push
imul
add
daa
int
rorl
push
push
stos
rcll
std
out
xchg
jle
movsb
dec
pop
scas
in
cwtl
jne
ret
xchg
and
decb
jne
clc
rorb
add
cli
test
jp
xor
mov
lock
aaa
andb
cmp
insb
add
call
sahf
mov
mov
dec
xor
cli
xchg
adc
cmp
xchg
ficoml
or
and
pop
sbb
fsub
lea
xlat
and
nop
dec
add
imul
add
mov
add
dec
pop
outsb
add
or
mov
decb
add
cmpsl
cmp
test
add
xchg
push
fdivl
inc
mov
add
jg
jno
cmpsl
dec
add
mov
jge
mov
pop
sahf
mov
data16
ret
ds
add
jo
add
inc
decb
dec
mov
dec
data16
jno
icebp
and
mov
dec
movsb
adc
dec
shl
sti
leave
xor
insb
add
lock
scas
sub
adc
inc
fcomp
lahf
push
inc
sbb
insb
add
adcl
subb
aaa
fstps
das
mov
xor
inc
addr16
jecxz,pt
add
mov
jg
fildll
mov
push
add
gs
repz
add
enter
movsb
adc
lahf
ljmp
sahf
imul
into
mov
xchg
std
ds
test
adc
jnp
xlat
add
cld
and
adcb
mov
xor
idivl
push
add
push
lods
rcr
movsb
sub
add
dec
add
loope
shrb
dec
sbb
mov
stos
xchg
filds
jno
mov
dec
add
incb
jmp
movsl
mov
add
popf
popa
xchg
dec
add
imul
stos
push
sub
daa
idivb
out
imul
push
mov
dec
movb
or
nop
dec
nop
dec
dec
mov
jge
ljmp
add
test
lret
jne
push
outsb
add
sub
mov
or
roll
popf
jp
mov
incb
in
mov
cmp
jmp
repnz
out
incb
add
bound
pop
mov
pushf
mov
je
incb
incb
add
dec
cmp
adc
and
push
add
lock
cmp
rorl
add
push
dec
add
mov
test
add
hlt
cli
inc
add
mov
push
out
orb
cltd
cs
cmpsl
fsubs
inc
add
push
fadds
add
jg
test
cmp
push
ljmp
decb
mov
xlat
push
movsl
mov
and
push
fidivrs
and
push
xor
sub
adc
mov
arpl
xchg
mov
cmp
xchg
push
lea
sbb
mov
mov
popa
insb
push
sbbb
fiadds
fnstenv
out
jns
imul
xorl
mov
mov
nop
xchg
mov
push
in
pop
in
xor
xorb
rcll
mov
mov
xchg
aad
in
scas
push
adc
dec
adc
inc
gs
incb
dec
jnp
add
cmp
faddl
add
gs
sbb
sarb
sub
call
stc
inc
jmp
std
add
jg
xchg
inc
xor
add
and
xor
insl
jp
xor
add
enter
popf
push
pop
enter
shl
aad
xchg
add
nop
inc
add
push
mov
xor
cmp
neg
aam
fnstcw
roll
xchg
pop
stos
outsl
mov
inc
sbb
in
insl
adc
inc
adc
xor
stos
pop
and
cli
leave
jno
mov
jnp
imul
jl
scas
fdivrs
imul
jb
test
cmp
push
push
orl
jge
adc
fdivp
jnp
lahf
lcall
mov
mov
data16
aad
test
add
jb
xlat
sub
lret
movmskps
iret
sub
mov
ja
imul
add
jp
enter
dec
cltd
mov
and
lahf
lcall
and
aad
xchg
push
stos
data16
pop
lahf
xor
pop
pop
jo
jbe
xchg
outsl
arpl
add
clc
jne
xchg
cltd
inc
xor
pop
add
sub
cmp
nop
push
insb
decb
add
mov
out
dec
mov
jb
roll
or
arpl
shll
nop
inc
inc
add
lds
scas
and
xchg
inc
call
lods
push
cmp
incb
jb
sbb
stos
xor
add
fcmovb
cld
cs
or
aad
add
loope
dec
das
sti
cld
xchg
sub
fwait
pop
jne
lods
pushf
add
std
pop
adc
push
incb
fadds
add
pcmpgtd
mov
scas
out
inc
rep
loopne
or
dec
push
out
pop
dec
in
test
insb
test
movsb
xorb
xchg
aad
sbb
scas
add
clc
fisttpl
rsm
dec
add
xor
stos
icebp
sub
imul
mov
push
incb
mov
incb
incb
add
mov
inc
fwait
std
or
decb
sahf
push
cmpsl
sbb
incl
add
sbb
ficomps
aaa
in
xor
into
inc
add
pop
jno
push
xchg
xchg
lea
addl
push
lcall
add
cld
add
fsts
xlat
or
decb
pop
push
mov
inc
jne
jl
adc
incb
pop
jmp
dec
out
aaa
ret
ljmp
loopne
fmulp
pop
pop
adc
mov
dec
daa
or
xor
mov
pop
aad
add
inc
aam
in
icebp
cmp
sub
decb
mov
dec
and
incb
decb
adc
in
sub
push
aaa
roll
add
cltd
fxch
aad
or
cmp
fisttps
decb
out
scas
jl
jb
mov
jbe
inc
add
lods
lods
adc
cmp
mov
adc
clc
es
sub
decb
inc
push
sub
xor
insb
add
pop
aaa
mov
xchg
shlb
fdivl
dec
sbb
jbe
dec
add
repz
xlat
outsb
add
dec
incb
jne
add
lods
mov
repnz
inc
add
in
hlt
test
stc
imul
sbb
popf
ficompl
stos
mov
pop
dec
std
idivb
or
incb
test
adc
and
adc
shlb
mov
sbb
pop
xor
imull
in
jne
mov
mov
ljmp
incb
decb
decb
push
add
rorb
sub
incb
dec
fcmovb
inc
pop
sbb
add
cmpsb
shlb
stos
movsb
jge
flds
fimull
popf
xchg
nop
push
add
sbb
decb
gs
jae
cmp
sub
inc
incb
push
inc
dec
add
push
test
inc
push
iret
add
loope
add
clc
movb
lods
or
xor
sti
mov
add
dec
jmp
push
data16
incb
ds
add
enter
mov
clc
and
rcll
push
or
cwtl
adc
or
fisubrl
pop
sbb
inc
add
out
xor
shrb
incb
xchg
sbb
fstl
fwait
mov
incb
or
decb
mov
inc
incb
add
ds
mov
sub
and
push
lahf
inc
mov
outsb
add
mov
lahf
cmp
jl
test
arpl
insl
inc
add
mov
movsb
bnd
push
sub
movsl
lcall
incb
inc
add
xor
inc
loop
js
hlt
mov
into
inc
out
add
sbb
or
stos
dec
cmp
jle
aaa
cmpsb
insl
in
imul
fildl
pushl
push
mov
cmc
mov
mov
stc
cli
xor
lods
mov
addr16
inc
fistpl
into
dec
add
dec
mov
jns
push
sahf
dec
add
or
add
js
push
jbe
jecxz
lods
pop
mov
cmp
mov
decb
in
xchg
out
sbb
aas
fs
loope
data16
lcall
leave
lahf
adc
add
stc
call
pop
fdiv
cwtl
sbb
add
data16
decb
xchg
cmpsb
mov
rorb
pop
inc
decb
add
sbb
cwtl
dec
inc
and
xor
xchg
imul
add
sub
lcall
add
pop
jnp
push
xor
xchg
mov
decb
out
data16
repnz
xor
arpl
and
or
push
inc
ljmp
decb
lods
call
fs
inc
mov
outsl
stos
stc
test
decb
sub
rolb
sbb
leave
mov
jp
cmc
push
dec
fld
inc
add
sbb
decb
sub
sub
sbb
jo
mov
mov
popa
pushf
ss
xbegin
xor
mov
decb
imull
imul
adc
stos
std
push
mov
dec
decb
sub
jnp
out
mov
loop
mov
stc
clc
inc
outsl
inc
je
test
inc
pop
mov
sti
jle
pop
lahf
dec
imul
inc
jbe
addb
fs
ja
mov
lret
jnp
mov
in
das
mov
jnp
ja
pop
rorb
incb
jbe
mov
jbe
stos
or
outsb
decb
nop
jge
sub
add
jp
addl
push
xchg
sbb
xchg
dec
pop
ret
cld
sbb
push
jmp
mov
repz
jg
sbb
data16
incb
and
incb
or
div
mov
xlat
negl
dec
mov
inc
lret
mov
aam
jge
out
mov
aad
insb
in
adc
jmp
pop
dec
idiv
mov
add
outsb
dec
outsb
mov
call
filds
add
imul
addb
popa
jbe
sbb
into
clc
ljmp
add
xor
pop
js
repnz
and
mov
jle
cltd
das
scas
mov
daa
mov
das
movsb
or
out
mov
scas
pop
scas
cmp
mov
add
push
in
mov
xchg
dec
pop
sbb
push
mov
sub
sbb
gs
sti
fdivrs
mull
sbb
stos
lret
mov
repz
lret
fistpll
aas
cmp
inc
call
jecxz
mov
lock
adc
ja
in
adc
outsb
add
repnz
cmpb
gs
aaa
and
mov
adc
add
call
ret
adc
add
jg
pushf
fisttpl
idivb
out
loopne
push
decb
mov
popf
es
movsl
in
and
mov
inc
into
pop
orl
push
shrl
pop
sarb
xor
xchg
shll
incl
jo
out
sub
incb
mov
mov
add
push
sub
cmp
sub
in
mov
decb
pop
in
incb
push
add
out
xchg
xchg
mov
out
add
pop
fimull
add
mov
repnz
push
pop
out
jp
xchg
push
mov
sub
movsb
imul
and
dec
sahf
es
ss
xor
xchg
xor
in
lds
dec
andnps
enter
cmp
inc
push
push
mov
fs
jg
sar
mov
es
incb
pop
pop
negl
push
and
jmp
fldl
xchg
sub
push
xor
test
xchg
fwait
adc
mov
xor
xchg
push
in
loopne
decb
sbb
outsl
xchg
mov
jne
push
sbb
xchg
mov
jg
jae
cwtl
pop
ret
int3
xor
insb
addr16
je
stc
lret
ret
mov
out
add
pop
jl
push
lods
movsb
mov
push
and
ljmp
mov
push
subb
insl
pushf
sbb
data16
inc
mov
pop
loop
dec
push
jge
jl
cmp
adc
cmp
sbb
loop
aad
xchg
or
decb
add
test
dec
add
jo
add
mov
fdivl
mov
adc
cwtl
gs
inc
in
cmp
rorb
sti
fstpt
inc
dec
cmp
sub
nop
mov
xchg
pop
out
ds
add
mov
add
cld
and
push
stc
out
jmp
mov
dec
dec
imul
ficoml
add
fs
pushf
push
xor
jmp
xor
cmc
test
mov
movsl
in
popa
out
rcrl
pop
dec
out
jbe
mov
push
shll
pop
mov
jb
xchg
std
stos
sbb
iret
cmp
cltd
out
mov
or
adc
ret
inc
add
stos
cmc
cli
jno
jge
add
in
and
sub
data16
sub
in
fsubrs
int
decb
add
dec
xor
xor
xchg
loopne
loope
add
lahf
or
loopne
fcomps
test
inc
push
jno
clc
inc
mov
add
aaa
push
sbb
jmp
cmp
adc
movsb
cmp
adc
stc
and
movsl
push
inc
add
arpl
dec
jp
icebp
mov
out
in
mov
ficompl
add
dec
popa
in
sub
xor
sbb
jb
push
add
xchg
scas
mov
push
and
loope
add
push
mov
test
leave
add
decb
xor
jge
and
decb
movsb
add
in
add
pop
mov
sub
loope
adcl
ja
aad
xchg
sbb
sbb
fsts
add
fcomps
repnz
cmp
pop
lods
pusha
add
add
incb
decb
pop
mov
or
aam
mov
pop
jp
lret
nop
push
fnsave
fwait
pop
fldcw
insl
popf
sarl
sub
out
pop
std
mov
inc
decb
push
es
pop
aad
jns
inc
dec
sbb
cmp
les
jbe
inc
add
adc
inc
and
jge
sahf
xchg
dec
add
cmp
jl
test
inc
inc
or
testb
fwait
xlat
adc
sub
iret
sbb
xlat
lods
mov
xlat
push
and
sahf
punpckldq
decb
fcom
push
dec
aas
push
sub
xchg
dec
add
mov
or
mov
push
aaa
test
sbb
add
or
inc
cli
cltd
lret
loop
insb
add
jns
xchg
xchg
decb
add
lea
or
pop
pusha
gs
jle
out
sbb
in
jns
sub
cmpsl
push
and
and
aas
xchg
cmp
add
mov
les
ljmp
xchg
sar
push
mov
pusha
ficoms
pop
fs
mov
std
xor
imull
clc
cs
cmpsl
inc
add
xchg
sbb
xchg
jl
and
add
mov
and
fs
lds
pushf
push
adc
mov
insb
add
cmp
cli
add
sti
stc
addr16
mov
nop
sbb
mov
add
jno
xor
sti
mov
jo
lods
insl
and
pop
jbe
or
pop
pop
jb
push
dec
push
aaa
lret
adc
stc
orl
mov
aam
setno
add
in
popa
andl
xchg
pop
dec
add
pop
enter
add
sub
std
mov
icebp
or
or
mov
shlb
cld
pop
arpl
fdivs
popa
pop
pop
jbe
mov
cwtl
jecxz
and
inc
add
mov
push
std
mulb
add
dec
jg
rol
je
add
out
mov
cs
decb
inc
mov
cmp
out
pop
in
mov
sti
jbe
pop
dec
pop
iret
add
push
or
ja
stos
xchg
or
xlat
fxch
sbb
addl
fisttpl
jg
dec
pop
push
addl
les
aaa
pop
sbbl
cmp
xchg
dec
xchg
sbb
push
imul
or
pop
xor
incb
pushf
testl
push
fisttps
push
pop
mov
pop
jmp
decb
sbb
rorl
add
std
xor
mov
fidivrl
insl
outsb
jg
pop
ret
enter
inc
es
test
jo
js
decb
gs
cmp
add
cmp
jl
xchg
cli
mov
int3
lock
push
add
push
lods
pushf
jle
movl
cmp
dec
cmpsb
sar
mov
incb
pcmpeqb
repz
pop
ds
out
or
dec
scas
pop
ret
add
pop
jnp
lock
cs
mov
add
jecxz
cmp
mov
mov
mov
in
sub
js
push
cmc
negb
ret
xchg
mov
or
fs
ss
dec
xchg
sbb
dec
je
push
adc
or
popf
pop
aas
loope
mov
adc
incb
dec
cmp
hlt
outsl
es
sbb
incb
inc
push
and
sbb
leave
mov
popf
mov
sbb
sbb
jnp
pop
cmp
add
test
sbb
shrl
add
push
out
push
add
test
loopne
add
sbb
pop
mov
sbb
incb
add
adc
add
insl
fs
arpl
xchg
adc
push
add
jno
inc
add
and
jo
add
fstpt
add
iret
push
in
aaa
js
cmp
add
pop
sbb
out
ret
jne
xchg
sub
xchg
mov
adc
and
cmp
outsb
out
insl
mov
fs
or
jmp
bound
decb
clc
pop
loopne
mov
cmc
lods
mov
pusha
incb
mov
imul
pop
push
adc
push
sbb
xchg
mov
mov
stos
mov
incb
ss
out
test
stc
sub
mov
xchg
dec
add
xchg
push
inc
sbb
add
xchg
jno
addr16
mov
sbb
cs
xchg
leave
adc
imul
pop
or
incb
decb
jae
nop
inc
ja
dec
add
adc
movsl
fisttpl
sub
dec
push
xchg
jl
add
out
sub
dec
inc
push
loop
mov
inc
pop
pop
mov
xor
pop
sti
dec
mov
fistl
xchg
fwait
sbb
addl
mov
out
pop
xor
test
cs
sub
inc
jno
ja
add
lods
add
fs
aad
adc
xchg
hlt
inc
add
sub
ficoms
les
lods
or
sub
repz
adc
or
push
stc
mov
xor
arpl
push
xor
movsl
inc
lock
std
call
sbb
or
xchg
mov
mov
jle
mov
icebp
cmp
jl
out
testl
xlat
or
mov
pop
adc
or
jle
mov
pop
xorl
mov
pop
pop
inc
mov
test
enter
mov
push
xchg
add
dec
or
mov
jg
pushf
mov
lock
rorb
add
jg
add
adc
pop
sarb
or
mov
push
add
xchg
add
sbb
adc
xchg
jle
fdecstp
aas
pop
jo
rolb
jb
mov
mov
and
test
lret
nop
test
cmovo
incb
jae
fs
dec
aad
xor
mov
nop
out
dec
add
mov
sbb
repnz
push
pop
jmp
jo
loope
sub
adc
rclb
cmp
icebp
pop
add
cmp
loope
movsb
scas
or
leave
out
mov
jmp
cmpsl
mov
push
push
lods
nop
pop
into
stos
out
fstps
sbb
pop
pop
sarb
add
bound
test
jmp
cmpsb
iret
cmpl
cli
jbe
xor
push
adc
cmovg
jmp
or
push
add
bnd
or
adc
sub
inc
add
mulb
cmp
scas
decl
mov
xchg
add
cmpsb
mov
adc
cli
pop
xor
pop
nop
jns
push
push
pop
sti
loopne
add
negb
inc
add
mov
adc
push
cmp
add
and
in
fldt
sbb
dec
inc
xchg
hlt
mov
bound
decb
push
and
hlt
int
xchg
pop
test
inc
xor
stc
mov
je
sub
pandn
add
adc
xchg
sub
push
push
stc
fwait
and
fildl
pop
je
lret
mov
xchg
lds
mov
aam
dec
pushf
xor
mov
ret
and
cli
std
dec
outsb
stos
shrb
mov
inc
and
pop
xchg
pop
push
in
push
fistl
lcall
pop
push
test
stos
inc
add
out
pmulhuw
dec
mov
adc
mov
cmpsb
shrb
jb
add
out
push
lea
add
dec
incb
insl
shlb
testl
mov
pop
fldl
cltd
mov
adc
cld
xor
ljmp
cs
popa
mov
fcmovnbe
dec
ja
xchg
aaa
fs
decb
and
mov
cwtl
jl
xchg
mov
push
mov
aad
jae
add
cmp
lahf
add
lods
lcall
xchg
inc
mov
inc
ds
add
hlt
ljmp
outsb
cmpsb
outsb
add
leave
lret
in
mov
ss
pusha
data16
aam
xor
mov
jmp
xorl
cs
repz
or
scas
nop
jnp
roll
clc
add
lods
out
cmpsb
insl
nop
cmc
arpl
ficompl
dec
lea
and
mull
jmp
mov
ds
add
lret
int3
jle
pop
jnp
cwtl
imul
in
sbb
sarl
jg
test
movsl
mov
dec
mov
and
add
xchg
out
adc
ret
addl
sbb
lea
decb
jb
xor
test
add
cmpsb
icebp
nop
and
dec
sbbb
aaa
negl
lret
jo
imul
push
popf
shlb
adc
decb
je
imul
cmp
outsb
incb
ss
push
out
pop
xlat
ret
jecxz
pop
inc
cmp
push
mov
mov
hlt
out
and
mov
add
xchg
scas
mov
add
sahf
sbb
sbb
xlat
in
stos
jmp
add
jnp
cmpsb
ret
pop
sub
cli
add
ljmp
add
daa
jmp
aad
movsb
rcll
jecxz
mov
cmp
sub
push
test
in
mov
adc
push
cmpsl
add
and
decb
push
sar
daa
fdivl
lods
pop
pop
lods
aam
jl
and
ss
fbld
lock
test
pop
int3
incl
adc
mov
dec
add
sbb
sub
pop
dec
add
pop
test
aad
fcoms
scas
into
clc
lret
jge
add
inc
add
out
cmp
jecxz
add
movsb
mov
sbb
imul
aas
lret
push
ds
rclb
mov
js
mov
adc
add
jne
add
test
adc
add
mov
icebp
sbb
xlat
out
pop
add
iret
jecxz
ret
lock
sbb
sbb
incb
inc
xchg
dec
test
pushf
add
pusha
add
mov
push
movsb
lods
gs
pop
imul
adc
cwtl
or
decb
mov
jl
mov
insl
xchg
mov
or
pop
xor
arpl
decb
les
cmp
call
dec
and
dec
add
xchg
sub
jns
data16
stos
imul
movsl
fwait
xchg
cmc
xchg
cwtl
ss
mov
pop
push
mov
aam
jmp
lret
xchg
jb
adc
call
jl
xchg
int
les
out
mov
sub
test
sti
xor
cmp
or
incb
mov
inc
out
enter
xchg
outsb
decb
outsb
push
movsb
outsl
push
out
rep
push
mov
out
lea
icebp
arpl
movsb
ja
pop
sbbl
fdivl
in
fsubs
xchg
xchg
scas
xchg
nop
mov
and
decb
dec
jmp
sbb
pop
pushf
inc
add
mov
add
dec
mov
xchg
leave
pop
mov
decb
bound
pop
push
adc
in
mov
jl
bound
decb
sub
inc
push
cmp
ja
mov
fisubrl
jecxz
add
ljmp
decb
enter
jge
dec
enter
in
add
dec
sbbb
cltd
jbe
sbb
xchg
lods
xchg
mov
xor
push
and
add
push
adc
test
mov
and
jb
lds
lock
xchg
enter
cmp
fistpll
ja
push
sbb
lds
push
push
lcall
adcb
inc
add
add
ret
mov
mov
xor
jno
inc
loop
lods
insb
add
dec
adc
sub
mov
pop
mov
arpl
mov
je
fsub
xchg
jnp
mov
fisubrs
stos
out
scas
movsl
lds
push
or
jmp
add
filds
lds
jge
jnp
push
pop
cmp
cwtl
enter
ja
jmp
scas
imul
test
fstl
lret
addr16
scas
and
sub
gs
enter
stos
in
jmp
jbe
add
sahf
lock
mov
add
pop
jecxz
push
in
incb
ja
jg
cmpsl
cmp
xchg
mov
xchg
or
jg
lret
or
ljmp
sbb
clc
push
hlt
inc
add
cmc
inc
push
mov
add
clc
pop
cmp
mov
shrl
push
jge
shl
ja
adc
fwait
ret
or
decb
pop
mov
in
pop
push
mov
addr16
push
es
lods
lea
in
cmc
ret
push
sahf
cli
lock
lea
es
call
dec
ljmp
mov
pop
data16
out
jne
inc
sbb
mov
or
mov
and
pop
cmp
add
jb
clc
es
adc
and
pop
sahf
mov
iret
test
xlat
out
mov
out
out
daa
jg
cmp
xchg
popa
push
cmc
xor
xor
test
call
xor
add
jb
or
loop
fdivl
jge
aaa
inc
add
sbb
movsl
dec
add
leave
sub
incb
add
dec
insb
add
or
mov
bound
jg
sbb
mov
outsb
add
xchg
jne
cltd
sub
jmp
push
cmpsb
sub
movsl
xor
jnp
je
and
dec
push
add
mov
pop
or
filds
add
pop
dec
add
shr
insb
add
mov
test
sub
popa
sbb
mov
repnz
add
cs
cmpl
xor
push
mov
icebp
clc
add
jb
push
xchg
cmpsl
cmpsl
adc
iret
and
add
mov
shll
add
mov
jbe
add
jg
add
insl
xchg
and
aaa
in
jae
push
mov
cwtl
cld
aam
jo
imul
add
jns
pop
out
add
decb
mov
in
ret
add
mov
dec
mov
in
addl
frstor
insl
lock
add
sbb
lds
sbb
jp
add
mov
cltd
fcom
pop
cmp
mov
test
jg
addr16
ds
jecxz
add
inc
add
mov
cmp
jbe
xor
loope
sub
out
push
shr
clc
push
vshufps
push
cmpb
mov
jnp
lock
mov
mov
sti
int
push
cs
sti
inc
push
decb
push
xlat
loop
or
dec
ds
sbb
cld
aad
mov
cmova
lret
and
lds
insl
jmp
notb
xchg
stos
xchg
add
decb
arpl
mov
inc
push
sbb
ficoms
cli
add
fcmovb
lret
and
lock
inc
mov
mov
addr16
pushf
xor
add
cmpsl
in
or
rolb
.byte
fildl
