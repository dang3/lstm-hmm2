push
cwtl
into
dec
add
dec
cwtl
test
adc
mov
push
push
rorl
loope
add
xchg
add
dec
dec
xchg
in
mov
addl
in
jmp
mov
mov
xchg
inc
add
int3
xor
insl
negb
in
add
arpl
js
mov
add
call
and
adc
add
sbb
add
ja
and
xchg
push
mov
jno
push
add
jb
jbe
out
jae
xchg
call
aas
lock
add
rol
add
test
push
jmp
jmp
out
add
push
add
sbb
xor
shr
add
add
loop
add
or
inc
jnp
enter
rcrl
jne
arpl
jmp
loop
add
int
jbe
mov
mov
lcall
xchg
shr
adc
xchg
mov
cmp
imul
insb
pop
sbb
or
push
movsb
lods
imul
pop
loopne
stos
jb
jmp
divb
icebp
bnd
imul
add
xorl
add
jge
add
outsl
imul
cmp
jbe
inc
or
add
add
push
enterw
in
push
or
repnz
push
add
rolb
push
popf
mov
cmpps
pop
mov
arpl
rolb
sbb
mov
enter
dec
jmp
pushf
out
cli
pop
imul
fisubrl
int
sti
cs
das
or
dec
jo
outsb
push
and
bound
pusha
add
jns
mov
lock
jmp
xor
add
dec
sbb
sbb
mov
insb
cmp
pop
outsl
add
fisubrs
ret
movsb
lock
mov
stc
loopne
out
addb
lods
rcll
add
lcall
arpl
cmp
and
les
in
add
mul
sub
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
sbb
xor
test
sahf
mov
rcll
sbb
mov
sbb
xchg
adc
sbb
push
orl
mov
stos
pusha
add
mov
cli
daa
adc
sub
stos
mov
pop
xor
xorl
push
add
sub
push
jge
inc
add
fcmove
jns
cwtl
pop
daa
cmc
dec
add
or
add
jle
stc
mov
sbb
and
out
push
mov
cmp
sbb
sbb
xchg
mov
cmpsl
daa
hlt
inc
add
xchg
mov
pop
aas
lods
icebp
mov
outsb
rorb
cld
sub
mov
lock
mov
adc
test
sbb
push
test
mov
sub
or
sahf
les
mov
es
pop
mov
cltd
jmp
dec
mov
inc
push
popf
stos
mov
mov
je
ret
mov
sub
movb
cli
insb
cmp
xchg
jb
in
movsl
out
pusha
add
xor
adc
addb
insl
pop
scas
stc
sub
pop
jb
push
jns
or
dec
test
jne
xchg
mov
arpl
xchg
push
int3
int
mov
pusha
add
cmp
and
inc
add
pop
cmp
add
fisubrs
mov
aam
ljmp
jne
call
out
adc
mov
popa
jns
mov
add
and
push
add
lock
dec
das
cmp
inc
add
pop
sub
push
fldcw
loope
enter
mov
adc
add
outsl
adc
mov
push
daa
clc
mov
fstps
sbb
cld
or
xchg
mov
pushl
data16
inc
add
dec
dec
shl
xchg
jmp
aaa
icebp
je
scas
insb
int3
mov
repnz
nop
cmp
mov
dec
jb
pop
and
xchg
out
mov
sub
or
or
test
popa
es
jo
aad
and
sub
sub
push
inc
add
shll
push
add
sbb
sub
push
sub
sub
and
loop
mov
cli
add
adc
xchg
movsl
int
and
repz
mov
xchg
stos
lds
mov
hlt
and
rolb
jbe
inc
xchg
and
push
std
inc
pop
jns
add
or
dec
cmpsb
xchg
fwait
push
lcall
mov
stc
and
xor
pop
lahf
das
bound
jmp
adc
mov
ljmp
push
aad
sbb
add
lcall
sub
mov
mov
or
pop
out
ret
pop
jno
mov
and
push
ja
xor
cmp
rcrl
push
stos
mov
add
sub
imul
mov
stos
ret
inc
add
add
dec
pop
addb
mov
inc
mov
sbb
std
addb
push
sahf
sub
std
xchg
mov
mov
mov
daa
in
push
add
dec
xor
movsb
ficompl
push
imul
add
mov
jecxz
outsb
xchg
stc
pop
sbb
ds
jno
rorb
lods
sbb
sti
pop
adc
adc
dec
popa
ds
mov
divl
add
in
add
pop
lcall
iret
mov
add
in
sub
mov
add
add
int
les
sub
dec
xor
cmp
add
sub
add
fbstp
mov
add
outsl
clc
dec
push
cmp
push
ret
rorl
pop
pop
in
insb
loopne
loope
xor
or
mov
and
stos
in
pop
cli
xor
ret
das
cs
icebp
xchg
xchg
shrl
mov
add
fnstenv
fmull
inc
add
rcll
add
ljmp
outsl
inc
dec
cmp
arpl
xor
sub
mov
add
sub
add
test
push
pop
enter
sahf
insb
out
sub
mov
popf
es
aam
xchg
mov
pop
ss
pop
lock
add
fs
mov
mov
pop
xchg
sahf
cmp
es
add
xchg
pop
xchg
xchg
mov
push
sub
mov
call
mov
mov
cs
in
xchg
sub
sub
shl
stos
imul
add
rolb
jle
add
cmp
or
mov
inc
int
int
jl
add
push
repnz
movsl
add
das
fldenv
dec
add
out
push
push
cld
loope
lret
mov
add
mov
pusha
add
test
mov
dec
fs
mov
and
orl
or
stos
loop
cmp
test
aam
mov
aaa
in
outsl
pusha
add
js
lahf
add
mov
xor
test
mov
add
mov
sbb
or
sbb
add
iret
ror
stc
pop
pop
fcoml
xchg
xorl
add
sti
popl
add
jmp
mov
clc
ja
push
inc
add
push
cmp
jmp
out
jne
pop
sub
add
shll
out
xchg
adc
cs
add
add
ljmp
mov
sub
adc
pushf
inc
and
cwtl
arpl
mov
push
les
inc
add
es
xor
dec
loopne
shll
mov
sub
sub
popf
bound
xor
fisubl
in
xor
dec
in
push
push
ljmp
push
pop
fcoms
add
cli
incb
pop
pusha
add
cmp
mov
push
cs
ds
ja
push
jbe
hlt
and
sbb
sub
xor
xor
or
inc
fistps
cmp
mov
and
adc
mov
jmp
jp
sub
ss
leave
xor
xchg
orl
sub
add
rorb
jnp
std
outsb
fs
lcall
push
fildll
sbb
sti
inc
notl
mov
ror
je
xorl
fadd
adc
sbb
dec
push
sbb
cmp
enter
arpl
cwtl
xchg
icebp
adc
aad
in
mov
push
add
rcll
adc
and
rcll
popf
jl
addl
add
jmp
push
cmp
add
add
ficompl
mov
js
mov
repz
add
add
pop
mov
out
or
lret
dec
out
pop
adc
dec
int
jnp
sbb
sbb
xor
fiaddl
adc
shrl
dec
nop
jmp
shll
add
mov
mov
sub
ds
aas
sub
arpl
in
std
xchg
cmp
ret
hlt
dec
add
rcl
inc
add
add
add
jne
add
sarl
adc
imul
cld
sub
sbb
mov
cmpsb
or
jle
push
jle
jmp
or
bnd
sub
fsubrl
loopne
add
test
sbb
add
ret
jge
or
data16
stos
add
mov
std
fs
add
iret
mov
jmp
cmp
in
add
mov
data16
xchg
inc
add
add
and
flds
pop
cli
icebp
sub
pop
in
cli
and
xor
add
data16
pushl
aas
loope
xchg
pushf
aam
aam
push
push
and
add
fwait
pop
mov
call
xchg
fwait
cmp
xchg
sub
leave
in
mov
insl
pop
flds
loop
xchg
lds
stc
add
dec
cs
add
out
in
clc
out
daa
rcrb
and
or
outsb
test
xchg
mov
mov
stos
or
jl
notb
mov
movb
inc
cli
add
mov
call
addb
dec
add
rolb
bsf
sub
lcall
loope
push
pusha
add
js
sbb
ffree
push
shrb
test
cmp
enter
fcompl
in
sub
xor
jnp
xor
jle
sbb
cmp
and
mov
in
outsb
ds
cli
inc
add
shrl
leave
pop
loopne
sub
ja
loopne
cmp
mov
movl
push
cli
les
addb
pop
leave
adc
out
hlt
push
imul
jg
push
push
add
imul
ret
arpl
inc
add
inc
xchg
pop
rcrb
cs
outsb
push
inc
cmp
shlw
jecxz
pop
jge
into
repnz
jns
or
mov
sbb
pop
and
add
insl
cmpsl
ror
lcall
mov
xor
jbe
add
movsb
mov
jnp
inc
sbb
test
and
mov
mov
sub
mov
cli
fsub
fs
cmp
jne
and
pop
pushf
sarl
mov
add
mov
jp
and
and
dec
out
das
xor
add
mov
lret
or
or
jmp
popa
sub
shll
xchg
stos
je
jb
and
sub
sbb
lock
pop
cmpsb
movsb
sbb
bound
fcomi
aas
xlat
mov
test
icebp
iret
push
stc
imull
sub
pop
sub
sahf
pop
push
dec
push
pop
lcall
test
add
xchg
outsl
jg
les
sti
pop
push
stc
and
scas
mov
in
xchg
outsb
add
sbb
test
mov
pop
inc
add
pop
int3
ret
ficoms
popa
mov
das
ret
repnz
dec
mov
jg
cwtl
insl
fdivp
xor
mov
mov
jle
fcomps
jl
jp
cmpsb
inc
add
lret
and
mov
lds
js
in
movb
jecxz
xchg
fists
adc
cmp
aaa
bound
xchg
rolb
mov
xchg
scas
cs
fdivl
add
outsb
rorb
mov
xor
add
add
xor
add
mov
in
and
loop
pop
adc
jnp
jmp
sbb
les
ss
and
popa
mov
jb
dec
fisubl
cwtl
ret
sbb
push
xchg
test
add
das
arpl
xor
test
jo
cmc
in
xchg
dec
fadds
add
cmpsl
mov
std
stos
dec
in
or
inc
add
add
out
xchg
mov
lahf
cwtl
xchg
ret
adc
clc
pop
mov
add
out
aaa
sbb
test
cs
loope
daa
stos
xchg
scas
icebp
rcrb
sub
clc
aad
addr16
sar
pop
sub
mov
or
cmp
inc
xorl
sbb
dec
gs
xchg
push
add
add
outsl
pop
dec
cmp
xor
mov
scas
lcall
movsl
fdivrl
ja
in
mov
jmp
jg
cwtl
ss
xchg
jne
adc
mov
add
cmp
and
push
out
js
push
divl
sar
push
push
jnp
lahf
and
mov
push
rolb
addb
jne
js
jae
leave
loopne
sub
scas
jb
dec
xchg
mov
inc
add
mov
mov
ljmp
lret
push
pop
dec
divb
outsl
adc
jl
mov
or
pop
stc
out
sbb
pop
loope
movb
sbb
out
add
cmpl
or
jno
push
push
or
xchg
call
or
push
fstl
jb
test
push
mov
inc
add
mov
mov
addb
in
push
mov
mov
sub
cwtl
or
lock
push
test
int3
cmpsb
mov
jnp
cmpsb
adc
inc
out
sbb
mov
add
xor
mov
inc
add
into
jb
mov
loope
or
popa
dec
loop
push
mov
out
outsb
xlat
xlat
adc
divb
shlb
add
mov
inc
add
xor
push
loope
repz
jne
push
adc
addb
dec
add
movsl
mov
imul
pop
add
sub
les
and
aam
push
mov
sbb
arpl
das
std
test
xor
push
lcall
ret
cmp
or
js
scas
mov
sub
adc
mov
jno
movl
mov
xchg
addb
repz
pop
lret
jle
rclb
mov
add
mov
add
jg
lods
inc
and
add
out
enter
das
imul
rorb
aaa
mov
pop
mov
add
cmpsb
inc
mov
mov
push
and
icebp
xor
xor
mov
sbb
add
mov
push
inc
add
pop
pop
pop
push
fcmovne
imul
jecxz
test
movb
addr16
jg
adc
inc
cld
push
add
popa
fnstcw
jl
or
adc
add
pop
aad
adc
enter
mov
cmpsl
gs
sub
pop
stc
cmp
xor
repnz
xlat
adc
aas
addb
lahf
inc
movsb
bound
repnz
mov
push
xor
cmp
cmp
xchg
mov
repz
addb
mov
or
jle
xor
pop
pushf
cwtl
ffree
add
cmp
js
insl
incb
xlat
pop
addb
add
test
add
mov
mov
push
sbb
jle
pop
mov
add
in
addb
push
pop
negl
sub
les
push
add
mov
lods
stc
mov
sbb
adc
call
movsb
push
mov
push
mov
incl
dec
mov
push
fsubs
ds
stos
dec
in
icebp
imul
pop
out
sub
arpl
fwait
insb
sbb
dec
push
lcall
adc
inc
pop
outsb
dec
out
mov
in
lods
fistpl
test
mov
pop
popa
fstl
push
mov
outsb
fsubs
in
mov
hlt
or
jae
push
mov
test
adc
add
pop
mov
imul
cs
push
pushw
dec
ljmp
ljmp
add
gs
xchg
xchg
int3
incb
negb
sti
bound
aam
out
and
dec
into
mov
lahf
sub
and
sub
mov
sahf
gs
xor
loope
sub
push
mov
inc
mov
pop
push
jge
add
mov
add
pop
aaa
cwtl
cltd
mov
fwait
data16
or
jbe
out
fmul
cwtl
fs
sar
pop
or
scas
add
sub
and
enter
bound
mov
aad
fdivrs
lahf
popa
int
inc
add
xchg
and
push
xchg
jbe
movsb
repnz
push
fimull
cltd
push
push
les
dec
icebp
std
or
loopne
push
and
inc
add
stos
cli
ret
bound
scas
mov
pushf
data16
test
add
pop
outsb
and
push
call
add
stos
cld
repz
ror
pusha
add
cli
cltd
lcall
rolb
sbb
imul
jne
out
inc
add
cmp
repz
mov
dec
mov
repnz
jmp
loopne
fisttpl
lea
out
and
fldcw
push
mov
add
xchg
inc
add
jmp
add
xchg
movsl
cli
dec
sub
addr16
sbb
xchg
xorl
pop
push
lods
int3
sub
mov
add
sub
push
xchg
pop
cli
adc
out
aad
bound
sub
andl
insb
repz
sbb
add
inc
add
aas
inc
add
and
dec
sarb
add
dec
out
scas
cli
inc
jmp
xchg
add
jmp
xor
pop
js
gs
add
xchg
or
jnp
imul
bound
cmp
lahf
rolb
nop
inc
add
popl
add
aad
jnp
adc
inc
add
add
insb
mov
aam
add
add
bound
mov
xchg
cmp
add
lock
sbb
xchg
jbe
fwait
mov
movb
add
cmp
inc
inc
add
outsl
and
int
inc
test
add
push
test
les
lods
inc
add
imul
add
rclb
cwtl
out
inc
dec
pop
xor
add
inc
mov
mov
and
int
mov
sub
add
push
push
jl
cmpsl
push
jb
in
inc
add
rcr
shrb
lods
pop
push
and
scas
je
xchg
subl
xor
xchg
out
cld
and
test
jnp
ja
hlt
add
cmp
and
mov
insl
addb
mov
clc
jmp
call
push
fdivrl
mov
ljmp
stos
cmp
roll
testl
add
xor
sub
push
addr16
sahf
or
add
sbb
mov
rcll
add
sub
sbb
stc
or
subl
cmpsl
or
sbb
data16
aam
dec
fimuls
add
bound
xchg
xor
subl
adcl
fsub
inc
add
jmp
outsl
aaa
jl
addl
aas
push
cmc
cmpsb
sti
ss
dec
out
pushf
lea
lds
inc
add
adc
add
es
pop
and
cmpsl
xchg
jo
add
repnz
bound
ds
sub
add
sbb
fs
push
ljmp
jno
sahf
cmc
enter
jl
imul
xor
add
mov
shll
xchg
pop
lret
es
pop
call
popf
sbb
lret
sti
pop
cs
aad
or
popa
js
inc
add
mov
xchg
xorl
push
add
inc
mov
imul
pop
loop
xor
jbe
xchg
push
fsubl
xchg
aam
mov
mov
repnz
adc
sub
mov
xor
inc
add
ljmp
dec
xchg
ficomps
push
sub
sub
add
xchg
into
rol
add
pop
js
jp
push
sbb
imul
add
push
fwait
mov
std
xlat
mov
inc
sbb
lcall
push
add
sub
imul
adc
in
mov
dec
and
clc
rorb
add
enter
push
hlt
mov
stos
imul
xchg
cmp
pushf
fldcw
mov
sbb
inc
mov
jae
stos
cli
and
mov
sbb
int3
call
cli
inc
add
out
inc
add
mov
cmp
movsb
outsl
aad
mov
add
scas
cmp
fstpt
cmp
cli
pop
sub
inc
test
test
xchg
scas
xchg
fldt
aad
add
pop
imull
add
push
xor
shrb
shlb
add
push
fcmovbe
pop
fidivs
fdivr
loopne
xchg
xchg
pop
stos
pop
testl
add
add
push
jb
jb
add
insb
inc
repnz
xor
aaa
insb
dec
sahf
inc
add
and
aam
pop
sahf
jb
rcl
decl
stos
fstl
filds
xor
je
add
rolb
movsl
gs
pop
xchg
mov
fcoms
xor
xor
push
dec
ss
stos
leave
push
pop
cmpsb
inc
nop
stc
mov
ja,pt
mov
cld
int3
ds
lods
call
xchg
imul
and
enter
adc
lods
es
jb
les
imul
lock
add
lods
out
pop
je
mov
call
in
in
inc
imull
scas
xchg
inc
add
or
sbb
repnz
dec
sub
xchg
int
xor
popf
ret
sub
cltd
fnstsw
scas
jmp
add
jecxz
sbb
stos
rep
push
in
jp
dec
bound
sub
mov
dec
stc
les
sbb
add
push
mov
mov
daa
sbb
and
ret
jb
mov
in
sbb
or
inc
dec
repnz
jge
push
push
fcmovnb
add
cmp
add
mov
fsubrl
mov
ret
bound
adc
cmp
imul
fs
inc
add
ret
outsl
dec
ret
icebp
push
dec
pop
aaa
cmp
cmp
cmp
sahf
loope
pop
addb
insb
push
outsl
movb
xor
aas
jo
popf
lahf
inc
add
in
jl
jb
cmp
bound
cmp
xor
mov
add
mov
mov
push
cld
mov
notl
xor
sub
mov
fldt
inc
add
arpl
sub
je
adc
cs
shll
pushf
scas
adc
add
cmp
push
in
daa
ret
fnstcw
sbb
pop
lea
sub
movsl
add
cmp
cmpsb
mov
bound
xchg
xor
rcrb
push
std
mull
loopne
lods
xor
shrl
push
roll
add
les
aad
pop
call
lods
mov
add
pop
xchg
dec
mov
cmc
push
jl
loope
or
sub
pop
out
movb
cld
dec
fdivs
jecxz
push
mov
lock
std
test
cwtl
mov
mov
nop
mov
pop
popf
pushf
mov
dec
jle
dec
xor
out
into
dec
addr16
dec
cwtl
ja
jle
xlat
mov
add
jns
sbb
sbb
add
jbe
and
ret
push
iret
jne
stc
and
movb
pop
cmp
push
addb
leave
mov
push
inc
add
movsl
addb
sbb
out
inc
cs
mov
addb
inc
add
add
xchg
mov
add
pop
and
add
dec
dec
lret
roll
add
add
ds
mov
sbb
inc
add
mov
jge
push
movsb
lahf
jae
movsl
jne
pop
mov
jg
add
or
loopne
outsb
or
inc
jns
mov
punpckhdq
dec
pop
movb
rolb
or
xchg
mov
out
shlb
cs
mov
aam
cmovp
cmp
lcall
scas
inc
cmpsl
pushf
rcr
cltd
push
in
mov
add
movsb
mov
push
mov
aas
pop
pop
insl
sub
add
adc
add
cs
repnz
xchg
and
push
jecxz
or
rolb
sahf
lret
lea
xlat
jp
lea
jb
xor
sbb
sahf
clc
inc
add
repz
mov
mov
insl
sbb
inc
add
jge
inc
hlt
and
add
jecxz
inc
aas
pushf
push
push
xchg
inc
add
push
clc
pop
pop
dec
mov
mov
push
add
bsf
sbb
add
sbb
dec
out
fstl
add
loop
dec
aam
arpl
popf
mov
and
cmc
test
push
cmp
jle
ljmp
repz
mov
cmp
pop
inc
add
and
inc
add
mov
push
mov
dec
inc
xor
call
mov
add
addb
inc
add
decb
xchg
gs
lret
ja
mov
insb
scas
mov
inc
mov
jmp
outsl
lds
dec
sub
add
xchg
test
test
adc
mov
add
les
inc
sbb
mov
pop
jnp
mov
repnz
or
pop
fcmovnb
push
xchg
pop
pusha
add
lret
into
mov
add
pop
xor
sub
lock
pushl
std
scas
in
xchg
cmp
mov
shrl
repnz
add
push
mov
dec
and
or
xor
int3
mov
add
in
leave
dec
jle
xchg
sub
jns
pop
xchg
push
cmp
fwait
addb
movsl
pop
sub
cmp
rclb
xchg
sbb
sub
add
dec
push
add
shlb
cmc
mov
sub
inc
cwtl
sub
int3
sub
mov
dec
and
rcrl
aad
cltd
orl
fcmovnu
push
push
cld
jmp
stos
mov
cmc
cmp
and
pop
dec
cmpsb
loop
pop
lea
enter
add
rorl
call
leave
out
xor
stos
scas
int3
cld
xor
lret
cmp
shll
iret
jecxz
adc
stos
jmp
cmp
stos
mov
push
fstpl
cmp
test
add
sbb
push
rolb
add
aas
pop
aas
sub
cmp
add
lock
jns
cmp
jb
movsl
addr16
add
shlb
jno
push
add
loopne
pop
pop
in
in
out
lds
shll
es
xchg
mov
inc
or
add
and
aas
lcall
mov
and
clc
aaa
push
fwait
clc
inc
mov
ret
inc
sub
push
cs
add
mov
fwait
addb
pop
pop
jl
sbb
fwait
je
inc
add
mov
jl
leave
mov
add
movsb
pop
pop
xchg
out
mov
add
jecxz
xor
cmpsl
xchg
imulb
pmuludq
mov
or
add
jge
into
xlat
jb
add
add
idivb
cli
movb
cwtl
repnz
repz
inc
and
pop
pop
cltd
hlt
pop
test
add
jle
call
movsl
popf
push
xlat
ja
dec
mov
daa
xor
in
loope
sahf
jbe
je
mov
jmp
inc
add
add
xchg
jb
out
fistps
push
jl
add
and
add
add
popa
adc
mov
or
xor
xchg
dec
les
xlat
ss
or
dec
jb
add
shrb
xor
xchg
into
or
rolb
mov
mul
sbb
cmc
sbb
insl
or
lret
dec
mov
and
out
dec
inc
adc
dec
inc
jb
or
bound
nop
hlt
iret
daa
or
inc
add
cmp
mov
adc
jp
sub
xlat
sub
xchg
xchg
iret
repnz
xchg
add
push
jo
dec
push
add
push
pop
outsl
lahf
mov
adc
icebp
jne
pop
pop
and
sbb
add
repz
dec
inc
add
sub
dec
push
sbb
aam
shlb
adc
dec
clc
loopne
test
mov
or
and
jmp
es
jg
jecxz
push
and
jnp
jle
and
js
lds
movsl
das
cs
leave
xor
fistl
imul
shll
addb
jb
and
call
push
rolb
jnp
xor
sarl
add
xchg
sbb
jge
jns
stc
and
cli
je
clc
and
and
test
cs
stos
mov
dec
shll
lods
cmp
jns
or
jmp
add
rolb
xchg
cld
js
pop
jns
add
add
mov
cmpsb
lret
cli
pop
push
push
std
pop
neg
cmp
addb
rcrb
push
push
mov
sbb
and
mulb
push
sbb
add
rcrb
popa
in
fdivp
lods
andl
cmp
ds
push
inc
inc
add
add
push
mov
aaa
and
mov
stos
and
outsl
or
hlt
fadd
cmp
jle
gs
stos
dec
mov
add
push
add
cmpsl
movsb
aad
addb
ret
daa
std
mov
scas
inc
add
fcomps
divl
out
divl
add
movsl
add
aad
xor
fsincos
jge
imul
scas
mull
mov
mov
xchg
sti
xchg
adc
inc
mov
adc
jns
jecxz
dec
jbe
pushf
icebp
adc
xchg
stos
xor
pop
jp
repnz
pop
cld
cmp
inc
jge
enter
or
mov
xlat
xor
popf
sub
addr16
mov
pop
movsb
inc
add
add
movsb
mov
add
clc
cmp
jge
cwtl
lock
jle
push
mov
std
add
add
test
test
jmp
sbb
add
call
cmp
cmc
lcallw
imul
popa
rorl
pop
jae
add
mov
inc
add
push
mov
add
popf
or
bound
push
or
test
or
mov
push
jo
gs
jns
aad
filds
sub
push
xlat
jmp
push
dec
es
inc
add
add
add
jb
pop
mov
enter
loope
std
inc
mov
das
cmc
add
stos
outsb
add
mov
add
fistl
lret
xchg
divl
lret
jg
out
mov
xor
test
pop
add
loop
mov
xlat
mov
repnz
les
pop
pop
decl
push
mov
mov
inc
aad
add
iret
cmp
mov
fsubrs
lock
gs
ss
shl
neg
ja
stos
sbb
jbe
fiadds
in
rol
loope
ret
les
push
in
add
push
mov
adc
xor
dec
xor
mov
es
mov
and
leave
rol
fsubrl
pop
outsb
inc
and
push
fimull
fsts
push
pop
bound
mov
jbe
adc
sub
xchg
loop
cmpsl
xchg
jg
nop
jae
fisubl
ljmp
adc
adc
fs
bound
xor
inc
int3
imulb
mov
xor
cmpsl
rcrb
xchg
mov
adc
testb
jcxz
cmpsb
enter
rcll
inc
jns
jno
xchg
insb
jb
rolb
mov
cmova
leave
pop
jmp
out
inc
pop
dec
mov
mov
push
dec
cmp
adc
lea
mov
outsl
stos
imul
shl
or
jb
cmp
fcoml
test
bound
lods
mov
js
add
xor
or
add
movb
sahf
pushf
adcl
mov
movsb
pop
and
repz
out
out
flds
add
mov
hlt
and
sub
add
test
inc
jo
add
mov
insl
and
add
jmp
es
aas
mov
inc
add
jne
mov
scas
xor
in
movsb
pop
cmp
jbe
scas
adc
mov
lahf
shlb
pusha
add
rolb
dec
into
dec
jae
sub
imul
xchg
cmp
filds
add
repz
dec
push
adc
add
cmpsb
xor
and
mov
sahf
sbb
sbb
fsubrl
jp
lock
insl
gs
push
jl
movb
mov
add
out
lock
xor
in
das
fists
mov
inc
imul
mov
nop
add
sub
imul
cli
mov
adc
add
mov
nop
adc
rolb
call
mulb
repz
call
and
add
repnz
and
pusha
add
xor
sub
stc
mov
mov
leave
inc
add
jl
pop
mov
les
cmp
andl
add
jg
mov
add
cmp
add
jge
add
xor
testb
and
add
mov
emms
aas
mov
js
ret
cmp
pop
stos
push
std
clc
xor
push
xor
rorl
mov
jns
lahf
xchg
or
aaa
push
mov
imul
clc
imul
and
dec
mov
fwait
pop
or
push
data16
sub
and
divl
add
call
out
popf
hlt
das
jl
insb
addb
mov
add
xchg
mov
in
sub
iret
add
xor
dec
addb
dec
push
pushf
loop
and
call
jg
lcall
jb
inc
add
repnz
ds
data16
rolb
mov
mov
std
in
insb
mov
gs
mov
add
add
mov
stos
push
in
test
pop
movsb
rolb
pop
add
outsb
out
inc
add
in
out
jb
notl
xor
add
ljmp
movsb
jle
mov
nop
divb
jne
add
sbb
aaa
or
sbb
cmp
es
add
das
mov
pop
fdivs
dec
scas
mov
nop
lods
scas
mov
das
pop
jge
cmpsl
add
popf
mov
imul
sub
mov
rolb
cmp
mov
push
or
dec
or
ret
sbb
ficoms
ljmp
aas
movsb
add
or
shlb
mov
mov
out
insl
add
and
lock
add
scas
mov
sbb
jb
inc
add
push
lcall
push
and
add
add
popa
pop
jp
testb
fstpl
mov
lods
lcall
dec
mov
xor
and
repz
mov
and
inc
add
in
add
xor
or
lods
dec
cmpsb
js
mov
jo
and
mov
ss
add
lods
ss
add
addr16
or
aad
cmpsb
pop
jmp
test
sahf
adc
loop
jle
clc
xchg
sarb
popa
push
mov
negl
xchg
push
loop
mov
cmp
jmp
xor
dec
push
xlat
push
leave
jg
mov
xor
fsts
cs
lods
int3
cmc
or
in
add
mov
pusha
add
les
mov
jmp
rolb
mov
bound
mov
adc
add
sbb
add
pop
xchg
les
imul
add
outsb
jae
das
pop
stos
cmc
ljmp
push
mov
ret
dec
push
fstpt
cltd
push
pop
arpl
sbb
fisttps
xor
mov
cmp
cmp
test
cli
jp
sub
mov
sahf
push
in
sahf
insb
aaa
xor
in
jo
ret
cli
and
mov
sub
add
jecxz
add
popf
movsl
cmc
push
fldcw
dec
sbb
in
add
stos
sbb
fistl
mov
in
lret
push
pop
mov
mov
mov
mov
jno
add
inc
push
addps
fisubl
popf
iret
adc
int
jo
sub
lcall
fcomp
sahf
adc
xchg
and
ja
lea
add
or
cmp
cmp
cmovle
test
xchg
cmp
out
pop
pop
movsl
cmc
xor
push
or
insb
ret
adc
sub
inc
mov
mov
mov
inc
add
mov
xor
xor
stos
inc
add
lret
add
jge
sbb
add
lock
push
dec
add
scas
dec
xor
jbe
nop
lods
inc
add
add
pop
out
push
imul
sbb
cwtl
push
jb
or
insl
call
sarl
or
pop
pop
pusha
add
add
call
js
jbe
dec
push
adc
int
and
dec
pushf
add
ret
mov
imul
int
les
or
push
sbb
jae
xchg
in
je
imul
pop
push
insb
pop
cltd
cmp
test
jb
sub
in
add
inc
push
cmpsl
xchg
shrb
mov
xchg
pop
sbb
sbb
mov
dec
call
loope
jbe
add
cmpsb
insl
xor
xor
std
roll
jnp
xchg
xchg
push
xchg
jne
add
sbb
dec
sub
outsl
jg
aaa
in
jo
add
repnz
push
daa
pop
lcall
cmpsl
adc
adc
adc
push
imul
sbb
adc
pusha
add
jmp
cmp
enter
hlt
imulb
int3
mov
stos
sar
stos
mov
dec
mov
sbbl
pop
data16
cmp
jmp
add
test
dec
fldenv
loop
jmp
lock
cmp
jne
int3
jp
cld
ret
lea
xor
bound
sbb
sub
add
adc
dec
scas
cld
push
movsl
adc
outsl
cmp
add
or
mov
test
in
xor
add
mov
rolb
xchg
or
test
add
dec
sarl
jg
xor
xchg
jecxz
push
adc
movsb
jge
jno
testb
dec
je
repz
adc
je
das
push
jbe
rolb
inc
outsl
and
sub
lods
mov
add
add
std
or
add
cmp
ret
push
cmc
into
stos
adc
cmp
sarl
add
bound
rcrl
sub
sbb
int
pop
xlat
dec
mov
xchg
inc
push
mov
add
mov
jbe
dec
xchg
push
into
push
sti
push
pushf
popa
pminsw
icebp
addr16
lds
into
push
push
add
jp
fistps
push
dec
sbb
add
mov
xchg
int
or
aam
add
es
pop
in
adc
push
xchg
xchg
sbb
mov
add
and
fildl
das
and
shrd
cmp
push
mov
xchg
xchg
rcrb
out
fwait
shll
push
sbb
push
mov
mov
add
icebp
lds
cmp
and
jp
mov
imul
jne
lahf
daa
push
push
cmp
sub
les
adc
jne
push
mov
mov
and
outsl
cltd
pop
out
sub
in
push
addb
lcall
cmp
mov
das
mov
cvtps2pd
cmpsb
shl
dec
addb
and
add
and
mov
pop
xchg
mov
and
inc
cltd
xchg
or
lret
lea
push
or
std
lds
gs
sbb
xor
sbb
add
shlb
loop
lods
or
inc
add
fisubs
mov
cmpl
sub
jle
cmp
add
out
adc
rolb
add
dec
loope
mov
js
insl
lret
in
inc
mov
or
inc
add
cmp
fwait
in
mov
mov
or
jo
enter
inc
add
xor
in
push
std
push
je
aam
jae
push
sub
jb
imul
js
cmp
pop
rcl
into
sahf
das
cs
lret
cli
sti
add
lret
arpl
mov
fidivs
cmp
inc
add
popa
and
mov
lock
and
movb
in
ja
leave
mov
and
insl
popf
loope
mov
jbe
add
pusha
add
add
movb
add
insb
insb
in
add
hlt
mov
xlat
sub
pop
test
arpl
fs
pop
mov
out
xchg
jecxz
xor
cmc
mov
rcll
xor
and
mov
add
insb
jecxz
mov
in
and
lds
insb
lock
movsl
mov
jmp
jp
adc
sub
jmp
rcrl
rorb
add
mov
iret
mov
sub
fistl
xchg
mov
xchg
pushf
xor
cmp
jns
mov
sti
cmp
into
fildll
sub
aaa
mov
lock
test
cmp
inc
add
sub
aam
nop
jb
dec
jb
jo
add
push
xchg
or
dec
xor
loope
cmp
aas
stos
xor
push
mov
xchg
in
lret
addb
ret
xchg
inc
add
dec
ljmp
add
pop
imul
mov
repz
and
dec
sbb
adc
add
sub
daa
jge
xor
ret
adc
pop
xor
or
dec
mov
cmp
out
xchg
aaa
sub
test
mov
add
in
mov
add
add
int3
add
ss
fidivrl
lcall
iret
sub
pop
repnz
sub
aam
lahf
mov
sbb
xor
adc
loope
add
jle
cltd
test
add
jne
mov
loopne
pop
xlat
clc
adcl
add
dec
incb
mov
es
or
inc
dec
sub
sbb
out
mov
call
inc
mov
sub
cmp
les
jle
push
ficomps
ret
cwtl
fisttpll
sbb
pop
mov
sbb
cwtl
mov
add
lcall
sub
pusha
add
dec
out
mov
mov
pushf
ret
add
into
ds
pop
cmp
dec
es
test
or
add
sahf
xchg
sub
push
lock
cwtl
push
mov
repnz
add
inc
clc
sbb
add
std
fwait
scas
push
jmp
adc
fs
pop
fs
in
addb
repz
xor
add
mov
push
ret
mov
pushf
cmp
ja
push
in
adc
or
sahf
jnp
xchg
fs
fadds
es
xchg
addr16
inc
inc
rol
pop
popa
mov
push
rorl
insl
js
add
push
cli
mov
imul
in
das
mov
data16
sti
lods
jmp
int
dec
push
or
inc
add
iret
cwtl
ljmp
scas
out
mov
cmpl
movb
jle
add
xor
loope
push
push
cmc
xor
dec
cld
out
ja
jo
xor
and
outsl
aaa
dec
and
inc
add
imul
sub
mov
sti
stos
jmp
ret
adc
sub
add
pop
bound
int
add
cld
pushf
add
les
call
mov
stos
jl
jns
and
push
jbe
movsl
pop
xchg
test
add
stos
daa
pop
jge
inc
add
inc
into
out
jbe
add
popf
sahf
movsl
iret
movsb
pushf
or
shrl
addb
aas
ljmp
sti
aad
cmpsb
xchg
fstl
inc
arpl
jp
xor
data16
add
fwait
sbb
addb
or
adc
js
push
pop
mov
js
pop
test
addb
test
push
sub
addr16
push
outsl
addb
dec
mov
pop
mov
dec
jne
jp
jle
sub
sahf
iret
add
gs
mov
add
ret
or
xchg
mov
push
cmp
jecxz
loop
sti
or
jle
jl
add
mov
gs
inc
add
add
mov
pop
out
mov
or
lret
scas
mov
mov
in
dec
push
pop
movb
in
or
lods
jae
imul
mov
stc
ljmp
mov
ss
stos
mov
outsl
movl
mov
cmp
pop
pop
mov
dec
out
ficoml
push
add
adc
int
xchg
lret
rorl
xchg
mov
jmp
lock
div
or
pop
jp
mov
cmp
xchg
nop
stos
mov
int3
sti
mov
cmpsb
cmp
rorb
xchg
push
ljmp
insl
ret
or
cmp
jge
aas
hlt
shrb
cmpsb
fxtract
and
add
and
add
pop
notl
orl
xchg
cmpsl
enter
add
loopne
movb
or
mov
dec
scas
push
por
and
fldcw
pop
push
insb
pop
bound
sbb
data16
pop
in
push
adc
pop
movb
adc
jns
movsl
sahf
dec
in
inc
ljmp
std
mov
push
sar
jmp
imul
mov
pop
or
pop
pushf
pop
scas
lock
mov
leave
xlat
adc
fdivrp
or
ja
lret
cmp
and
push
cmp
lea
xchg
insb
dec
xchg
push
test
test
or
dec
movsb
stos
cltd
stc
fs
int
shll
push
cmp
shrb
mov
add
inc
add
or
ret
push
pop
xor
xor
jge
add
faddl
rcrb
pop
fcmove
mov
mov
jge
xchg
clc
les
push
aaa
dec
jmp
dec
pop
icebp
mov
lcall
enter
add
xchg
mov
mov
inc
imul
imul
xor
sbb
insb
movsl
jno
jnp
aaa
cmp
inc
add
jge
inc
add
jo
popa
psllq
mov
mov
ficomps
jae
xor
lret
cmc
divl
sbb
sbb
call
fcmove
pusha
add
icebp
mov
fbstp
dec
fbstp
and
xlat
into
ja
pop
push
or
sbb
pop
pop
loope
movsb
cmp
cmp
test
mov
out
jno
mov
pop
adc
cltd
jl
add
push
cli
or
rorb
leave
stos
insl
clc
addr16
pop
mov
mov
ret
sti
arpl
aaa
mov
sub
int3
inc
add
dec
addb
add
jle
add
stc
pushl
xchg
fisttps
and
les
adc
push
add
ja
loopne
dec
mov
xchg
and
mov
call
in
loopne
cmp
xchg
jo
mov
js
add
test
cmp
cmp
push
add
ss
inc
add
decb
push
xchg
insb
fsub
xchg
cmp
ret
les
ljmp
out
push
cltd
xchg
imul
aam
adc
loope
rcrl
push
leave
clc
push
and
mov
xor
aaa
and
add
shll
xchg
xor
pop
pop
sbb
loope
bound
or
pop
aam
fwait
jnp
stos
push
out
inc
add
fstps
dec
add
lock
outsl
pop
outsl
lea
fucomi
inc
repnz
sahf
fldcw
add
cmp
mov
dec
sbb
or
and
mov
fwait
clc
inc
add
ds
stos
iret
lds
and
sub
and
push
jp
add
pop
lcall
stc
rolb
push
mov
add
xor
mov
bnd
test
push
nop
adc
mov
loop
movsl
or
insb
insb
xor
mov
sbb
icebp
shrl
scas
adc
imul
xchg
dec
xchg
ret
or
mov
cmp
out
pop
push
mov
cmp
bound
je
test
xlat
and
lret
test
test
mov
fcoms
xor
pop
cmp
dec
and
push
hlt
rcrl
add
push
jl
cmp
push
addb
add
xlat
pop
push
in
stc
outsl
sub
xchg
mov
pop
jnp
ja
mov
mov
repz
mov
mov
fldl
dec
xor
out
cwtl
pop
adc
jns
add
lret
dec
icebp
fimull
add
add
inc
add
add
mov
faddl
mov
and
sbb
add
pop
adc
lods
data16
data16
cli
sub
mov
adc
mov
test
ret
lea
stos
hlt
stc
add
cli
lcall
lret
test
inc
add
mov
js
sbb
push
adc
jae
and
mulb
mov
and
inc
add
in
adc
jno
loopne
rolb
call
pusha
add
shlb
xchg
push
subl
mov
test
pop
into
sti
cs
jle
mov
and
pop
pop
pop
test
xlat
push
insb
rol
cmp
add
add
repnz
aam
mov
jmp
dec
sahf
xchg
add
aam
addb
je
hlt
or
cmp
pop
mov
les
arpl
and
hlt
test
adc
xlat
xchg
or
cmp
add
rolb
add
mov
fstl
sbb
jbe
mov
jno
dec
mov
xor
or
mov
inc
push
pop
cltd
std
push
jl
shl
test
sti
add
pop
test
dec
lea
test
cmpsb
sub
xchg
adc
hlt
jne
cmc
jbe
mov
dec
movsb
movb
add
lods
fcompl
mov
orl
stos
mov
in
sahf
xlat
cmpsl
xlat
or
iret
test
cmp
add
cmp
cltd
test
mov
dec
movsb
xchg
mov
pop
sub
xor
sbb
mov
repz
les
mov
dec
pop
cmp
jae
pop
ss
movsb
xor
pop
cli
mov
movl
test
xchg
inc
add
pop
dec
addr16
and
fsub
paddb
insb
fucom
cmp
push
leave
clc
sbb
xacquire
mov
in
out
jnp
out
out
daa
aaa
fdiv
or
sbb
xchg
adc
scas
je
push
mov
int3
cmp
adcl
pop
xor
inc
scas
adc
pop
movb
xor
jecxz
add
repz
cmpsb
mov
movb
bound
and
xchg
loop
out
das
xchg
insl
mov
jae
imul
imul
js
add
les
lcall
xor
jecxz
ret
xlat
mov
mov
mov
dec
mov
or
je
sub
stos
shll
add
sbb
add
int3
xchg
push
mov
jns
movswl
xor
adc
adc
adc
xor
or
push
aam
iret
jp
stos
repz
dec
stos
int
mov
or
pop
shll
ret
ret
pop
pop
jb
jle
das
xor
dec
adc
or
xchg
sbb
xchg
xchg
je
and
adc
jno
push
sub
sub
cmp
ss
add
pop
xor
jecxz
loope
add
add
aas
dec
push
push
mov
pop
push
and
xor
push
pushl
addb
pop
mov
inc
sub
test
inc
cmp
push
dec
movsl
adc
push
ds
pop
mov
nop
int3
sub
jno
mov
mov
cmp
mov
movsl
das
cmp
lock
lods
mov
je
shl
push
add
aaa
and
pushf
xor
scas
std
aas
repz
addb
mov
scas
stos
gs
dec
jle
mov
add
iret
sbb
fwait
pop
ror
push
add
add
aas
shll
insb
push
ret
mov
mov
cltd
loop
add
sbb
lea
xchg
xor
lock
mul
pop
inc
add
lcall
mov
popa
or
sbb
ret
sub
nop
push
push
push
dec
inc
jecxz
stc
into
incb
pusha
add
negb
jmp
mov
popf
add
test
cs
addb
mov
jg
divl
call
fwait
cmp
xchg
mov
lcall
xor
xchg
jl
test
inc
sbb
stos
lock
hlt
fwait
cmp
push
rcll
aas
stos
subl
mov
out
dec
mov
adc
or
xchg
daa
adc
cltd
in
or
xchg
loopne
or
pushf
pop
sub
outsl
xor
test
mov
sub
xor
dec
sbb
mov
or
aas
push
test
jns
addr16
jnp
fldcw
add
add
adc
xchg
dec
das
ljmp
or
jp
aaa
sahf
jp
jmp
add
sbb
ss
insl
pop
sahf
xchg
cli
ffree
add
into
int
and
mov
add
jp
aaa
pushf
addr16
pop
sbb
jmp
push
add
jo
cmpsb
jo
shr
jecxz
mov
loop
xor
std
cwtl
rolb
addb
cld
movsb
jge
dec
aam
adc
rcrl
mov
add
add
xor
in
std
mov
push
mov
push
push
js,pt
push
add
mov
cs
daa
imul
pop
pop
nop
loope
add
movsb
adc
sbb
stc
std
je
pop
mov
add
adc
add
add
jmp
pusha
add
or
into
pop
pop
cmp
add
add
dec
aaa
cmc
jo
add
pop
nop
or
scas
sbb
stos
and
divb
mov
sbb
in
nop
or
bound
lcall
outsl
sbb
outsb
sahf
jmp
sarl
popa
sub
sahf
cmpsb
mov
add
add
cmp
push
sub
jp
repz
test
mov
add
int3
xor
clc
clc
push
mov
jns
add
jmp
insb
fistl
test
adc
and
jecxz
cmp
lods
loopne
pop
sbb
mov
mov
add
iret
mov
es
lock
loopne
inc
add
arpl
idiv
dec
fstl
psubw
cmpsl
push
add
loopne
inc
add
das
mov
push
add
addr16
cmp
jecxz
mov
ret
cld
cwtl
push
out
lahf
incb
into
push
imull
loopne
adc
leave
or
push
sbb
add
add
stc
sub
aam
lods
jmp
les
or
add
mov
push
out
shl
in
pop
mov
addb
imulb
xor
stos
mov
add
rcll
push
push
add
sub
in
mov
lret
sbbl
mov
dec
sub
adc
insl
out
pop
stos
sub
das
scas
nop
push
adc
add
mov
ss
mov
movsl
and
int
sbb
sbb
push
addr16
in
test
push
xor
xor
sbb
dec
rorl
add
add
inc
dec
fnstcw
cmpsb
lea
add
in
jg
stc
adc
sarl
sub
mov
std
xor
jg
push
or
ds
jnp
mov
arpl
mov
mov
mov
or
mov
and
add
push
dec
sti
ja
cmp
cmc
test
add
aas
movb
cli
dec
loop
dec
sbb
mov
inc
stos
pop
lea
pop
jl
ret
pop
popa
addb
jge
xchg
scas
xchg
mov
ja
add
leave
inc
add
mov
dec
xor
negb
mov
jecxz
add
add
mov
add
in
and
xchg
add
test
jne
push
in
enter
jo
mov
popf
xchg
cmpsb
mov
xorl
jg
inc
add
pop
pushf
xchg
fistpll
jl
adc
add
push
gs
pop
mov
push
sub
mov
cld
jnp
xchg
aad
fsub
xor
dec
push
dec
scas
lods
pop
dec
pop
int3
div
pop
loop
pop
inc
ficoml
movsb
arpl
pop
bound
jbe
mov
addb
cld
sub
hlt
sub
pop
inc
add
mov
and
cli
xchg
jecxz
out
into
fsubl
or
sub
sub
fdiv
fists
xchg
cmp
and
sbbl
mov
dec
dec
mov
xchg
push
mov
push
add
mov
lahf
mov
pop
pop
inc
ret
lret
lret
inc
xchg
aaa
pop
xor
push
add
add
push
sbb
push
add
add
sbb
fcmovbe
fwait
ja
cmp
xchg
stos
mov
add
sub
add
lret
add
icebp
pusha
add
les
jl
inc
add
sahf
xchg
push
sbb
shrb
mov
lods
js
ret
hlt
mov
sbb
outsb
nop
xchg
inc
add
push
ds
mov
sbb
stc
mov
mov
movsl
mov
push
roll
mov
lahf
sub
aas
mov
pop
mov
js
sub
adc
jnp
in
movsb
lods
pop
sub
repnz
add
mov
mov
adc
ljmp
inc
imulb
add
dec
push
in
arpl
jle
and
clc
pushf
jae
rclb
add
add
inc
sbb
or
mov
cmc
dec
fwait
out
fisttpl
loope
mov
or
adc
outsb
mov
lock
stc
mov
sub
inc
cmpsb
fimuls
inc
xchg
std
out
jbe
rolb
add
push
sahf
or
mov
rolb
mov
sbb
add
divb
leave
loopne
inc
add
add
shrb
mov
out
jmp
xchg
jns
jae
cltd
jmp
adc
mov
sub
enter
jb
add
add
enter
pop
xor
dec
repnz
sti
sbb
sub
jo
xor
stos
fs
fnstsw
int3
mov
in
in
push
add
int3
addb
or
inc
add
mov
jbe
cmp
fsubl
fisttpl
mov
inc
add
push
xchg
xchg
adc
add
jne
push
insl
xor
sub
cmpsl
sub
sahf
jle
adc
add
inc
xchg
ret
inc
insb
xlat
or
js
pusha
add
sbb
lcall
xor
sbb
sub
cmp
xor
add
xor
imul
xchg
inc
cmp
movb
out
jno
add
jo
out
lock
bound
mov
add
push
std
icebp
aas
or
add
jmp
shl
cmc
enter
je
daa
jo
inc
add
cld
jg
or
xor
push
loop
cwtl
sbb
sub
in
jmp
pop
ss
add
adc
add
ret
pop
mov
adc
cwtl
xor
js
add
add
leave
sub
sbb
add
cwtl
push
cmc
imul
jne
lahf
leave
ljmp
mov
mov
loopne
pop
cmp
ljmp
lods
daa
lods
cmp
jecxz
xchg
xor
sbb
sbb
dec
sbb
jbe
or
sti
insl
push
add
roll
clc
mulb
sub
add
mov
mov
xlat
push
fs
in
mov
sub
add
sbb
inc
lahf
add
out
add
jmp
dec
inc
add
imul
mov
pop
pop
inc
add
push
dec
sbb
add
add
movq
lret
dec
sti
rclb
mov
jecxz
dec
push
stc
cs
fidivs
lret
stos
jmp
pop
adc
test
or
lahf
lods
dec
mov
xchg
push
lods
out
dec
pop
dec
xchg
mov
loope
sbb
dec
out
mov
and
xchg
jge
pushf
fnsave
outsl
stos
xchg
ja
xor
inc
int3
aam
stos
fcmovb
add
or
inc
outsb
rcll
arpl
mov
imul
shrb
repz
fs
cmp
dec
jmp
xor
and
add
pop
jmp
lock
mov
or
popa
lret
les
gs
xorl
push
dec
imul
mov
mov
sub
test
sbb
aas
xlat
and
pop
pushf
cmpsl
jp
jge
pop
pop
int3
mov
mov
push
xor
sbb
loopne
or
scas
dec
mov
adc
pop
dec
mov
mov
shrb
jp
popa
sub
and
mov
lock
repz
enter
nop
push
add
std
fisubrs
mov
or
mov
pop
pop
addb
jbe
sbbl
mov
add
push
lcall
loope
add
cmc
pop
std
in
or
in
ss
sbb
push
add
imul
arpl
nop
jbe
into
leave
push
add
dec
frstor
add
mov
in
dec
push
popf
test
sub
daa
cld
or
xor
cmpsb
cltd
lods
dec
loopne
movb
sbb
sub
je
pop
leave
cmp
and
mov
xor
cmp
pop
addr16
fiadds
ret
mov
clc
mov
cmp
insl
out
jg
cmpsl
mov
pop
add
jns
shll
add
sbb
mov
xlat
addb
mov
add
xchg
cld
cmpl
mov
addb
add
add
mov
fiadds
cmp
fldl
js
add
jne
lcallw
rolb
in
repnz
jge
scas
ja
jmp
cmpsl
jp
insl
pop
mulb
push
dec
jge
cli
dec
mul
mov
add
stc
and
jns
scas
daa
stos
push
test
or
lods
stc
sub
out
and
inc
insl
mov
xchg
ja
adc
pop
insl
mov
testl
ja
bound
test
hlt
hlt
sar
movsb
cld
xor
add
push
test
dec
out
mov
sbb
add
insb
daa
mov
out
cld
sbb
add
cmc
xchg
pop
cld
insb
sbb
sarb
jp
out
arpl
mov
leave
lret
ret
jae
int3
aas
aam
add
mov
xor
adc
lods
adc
icebp
cmc
push
add
pop
pop
mov
xchg
popa
scas
xchg
pop
push
testb
push
stc
and
scas
addb
rolb
cmc
inc
add
fwait
push
xor
mov
sarl
ret
inc
rcll
mov
jbe
shll
movsb
cs
add
inc
and
stos
sahf
inc
xchg
pop
imul
mov
push
out
sahf
js
and
dec
js
shl
or
dec
jmp
repz
cmpsl
jecxz
jl
addb
das
shll
fbld
fsubrl
xchg
test
pop
aas
cmp
stos
and
lret
test
mov
add
pop
xchg
lret
lods
sub
jb
mov
in
enter
les
xchg
fmul
xlat
and
pop
xchg
inc
add
popf
out
and
into
bound
fldenv
sbb
movsl
gs
ljmp
lds
and
movsl
adc
pop
es
leave
pop
cli
fyl2xp1
mov
mov
jle
aas
aam
clc
int
jle
icebp
jb
cmp
inc
add
mov
pusha
add
ss
sub
sahf
repnz
lea
dec
jmp
insb
pop
mov
das
clc
sahf
loop
dec
push
mov
add
in
sti
xchg
dec
out
ja
add
mov
cmp
mov
and
mov
pop
adc
gs
in
mov
dec
sbb
jns
add
pop
aam
dec
adc
loop
loop
or
push
jbe
add
mov
fistl
mov
lods
xchg
scas
mov
sbb
xor
xchg
out
jmp
jo
sahf
xor
jge
add
mov
pop
int
xchg
sub
les
popa
mov
adc
xchg
xor
inc
add
fbstp
push
fdivl
cmp
pop
leave
push
pop
fcmove
outsb
jns
fwait
xchg
lea
and
loop
cld
lea
jne
jl
mov
ret
int3
ds
addr16
insb
leave
mov
adc
add
gs
int
mov
dec
adc
pop
and
in
hlt
dec
mov
mov
in
pop
or
mov
pushf
inc
outsb
lret
inc
add
add
int3
das
int
and
lret
hlt
pop
cli
push
inc
add
xchg
mov
add
mov
add
adc
outsl
inc
int3
cmpsb
pop
loope
add
pop
push
int
xchg
pop
gs
sbb
dec
xor
add
mov
pop
mov
ljmp
je
sub
mov
add
add
mov
lret
gs
cmp
fcomi
xchg
into
aaa
push
movsb
pusha
add
xchg
aaa
mov
add
call
jnp
push
pop
pop
inc
mull
add
divl
jbe
aas
fsubp
jge
scas
out
pop
loop
sub
cmpsl
ds
add
test
sub
out
xchg
fdivs
xchg
ficomps
cmp
xor
imul
fistps
jl
insb
lock
add
adc
pop
sbb
and
jnp
push
cmp
frstor
ds
or
cmpsl
mov
add
fstpl
pushf
insl
ss
cld
push
mov
fs
bound
ret
dec
imul
mov
xchg
lahf
hlt
repnz
xor
cmp
ret
sub
sbb
add
push
mov
addr16
xor
loop
js
fistl
in
adc
and
cmp
mov
sbb
mov
ret
push
add
sub
xchg
mov
movb
mov
stos
mov
pushf
push
sub
add
test
jecxz
mov
push
push
bound
push
add
in
je
pop
push
iret
and
out
scas
in
sub
mov
mov
mov
fisubrs
hlt
stc
add
out
pop
nop
jmp
xor
aaa
add
xchg
fcoml
add
testb
lahf
xor
mov
mov
lods
popf
xor
and
orl
jno
push
cmpsb
and
std
inc
arpl
icebp
push
mov
inc
add
ljmp
fwait
xor
ss
cli
inc
add
xchg
loopne
mov
add
sti
ficomps
mov
iret
out
in
lds
add
xchg
dec
push
dec
pop
mov
pop
imul
sbb
and
das
jl
add
in
and
mov
subl
add
bound
cmp
adc
mov
imul
int3
jno
jnp
push
sub
mov
mov
sbb
data16
out
mov
and
add
lret
inc
add
or
movsl
mov
add
rol
ds
les
repz
jge
jmp
repnz
fcmovnu
imul
lods
insl
mov
stos
cwtl
fcmovne
adc
out
push
mov
rorl
mov
pop
dec
es
shr
mov
lods
fdivrs
addr16
push
or
xor
or
and
iret
inc
add
or
and
aad
add
mov
in
cmc
mov
mov
lock
pop
or
push
cmp
inc
jmp
mov
data16
in
fmull
xor
mov
es
push
add
cld
mov
cmp
fsubrl
or
leave
sbb
xchg
jmp
push
cmp
jl
scas
push
add
jecxz
push
xchg
inc
adc
sub
adc
ret
jo
mov
das
inc
call
cmpsb
ret
popf
ds
cmp
xchg
in
jg
add
mov
aaa
sub
jl
lret
mov
in
test
jae
pop
imul
fcoms
arpl
mov
sbb
or
lock
xchg
sbb
add
scas
js
jle
pop
lcall
jmp
add
cmpsl
xchg
adc
mov
hlt
dec
push
dec
inc
outsb
mov
or
cmp
push
int
xor
sbb
add
or
test
dec
mov
xchg
mov
ss
and
movb
mov
std
scas
add
adc
movb
sub
add
add
das
mov
and
les
ja
outsb
addb
mov
mov
add
push
outsl
or
cmc
mov
add
jmp
cltd
mov
cwtl
popl
cltd
leave
aas
dec
mov
add
lcall
fdivr
push
lock
fildll
adc
mov
ss
cmp
scas
sub
loopne
ds
notl
aaa
xor
add
jno
daa
pop
sub
pop
push
mov
push
shll
mov
bswap
int
add
scas
ss
or
popf
lcall
addb
add
sbb
ja
push
jg
add
movsb
popf
std
loope
in
aaa
clc
sub
sbb
hlt
mov
add
dec
mov
inc
pushf
faddl
mov
iret
mov
aam
push
jmp
stc
cmc
push
fldcw
cmc
out
inc
pop
inc
cmpl
loop
push
cmpsb
pop
fucomip
mov
imul
cmp
jle
ss
mov
ja
shl
cmp
sahf
or
sarb
shll
add
rcrl
cmp
add
ret
int
out
or
mov
out
jmp
fs
cmpsl
scas
es
mov
nop
popa
rclb
jl
add
jp
jle
lret
and
cmpsb
mov
in
jne
pop
sub
xor
mov
addb
inc
icebp
mov
mov
lahf
fbld
sahf
adc
mov
aad
hlt
cli
push
add
mov
push
jb,pn
adc
mov
or
rcrl
aaa
push
add
mov
jns
ds
xchg
testl
mov
pusha
add
pop
pop
push
and
mov
cmp
or
aaa
push
nop
push
add
add
mov
into
test
idivb
xchg
jg
pop
outsl
jl
stc
adc
int3
cmc
xchg
mov
cmp
or
addr16
xchg
stc
sbb
cmp
clc
push
adc
in
or
ss
aas
test
mov
out
adc
mov
imul
add
addr16
pop
cmp
push
inc
outsb
aas
adc
jae
jg
popa
xchg
sbb
add
jmp
sub
stos
je
rep
fiaddl
and
inc
xrelease
addb
addb
test
ja
cld
stc
lods
xchg
push
mov
lea
add
sub
out
stos
in
xchg
cmpsb
cmp
imul
out
add
adc
push
add
addb
lcall
add
and
add
and
xor
xchg
imul
fmull
jg
int3
in
lcall
pusha
add
ja
mov
dec
addb
mov
add
add
mov
fisttpll
das
sbb
cmp
movb
jge
push
add
add
add
inc
dec
iret
xor
add
mov
cmpsl
leave
ret
mov
ret
sbb
cwtl
fcompl
fcoms
push
inc
add
or
xor
or
jmp
fwait
in
dec
xchg
fstpl
aaa
test
add
pushf
push
fisubrl
jb
clc
inc
jecxz
fnstsw
add
jns
add
pop
fsts
add
sbb
xchg
and
mov
dec
jae
mov
add
jl
xor
and
push
add
add
mov
pop
ss
aaa
jle
mov
add
xchg
mov
addr16
add
mov
add
lods
test
cmp
ss
mov
add
xor
scas
xor
or
add
cmpsb
in
cmp
lcall
push
xor
fwait
scas
mov
adc
lods
in
pop
jns
jbe
xor
jb
lcall
add
dec
inc
push
xlat
jp
inc
add
fsubrl
fidivrl
and
pop
adc
or
movsl
dec
aam
fabs
inc
add
add
dec
sbb
in
jae
movsb
mov
jb
mov
xor
int3
test
nop
xor
test
add
lods
imul
sub
arpl
cmp
jmp
or
cwtl
mov
fld
add
push
xchg
mov
in
sbb
xchg
mov
mov
and
mov
pop
imul
test
push
jg
mov
test
nop
mov
sub
je
or
xchg
gs
lds
lret
lret
test
addb
mov
scas
mov
std
or
addb
stos
lods
mov
lret
cmc
mov
lods
sbb
add
mov
xchg
adc
sbb
je
fsts
or
into
xchg
adc
dec
mov
push
popa
lds
addb
add
sub
add
jmp
add
mov
test
test
xlat
mov
inc
add
fidivl
pop
push
sub
loopne
add
call
sbb
loope
dec
mov
mov
mov
lods
gs
lods
mov
dec
jbe
add
sub
inc
add
push
add
pop
inc
add
sti
pop
lahf
iret
clc
aad
mov
cmpsl
addl
or
mov
mov
add
clc
iret
popa
or
xorl
mov
mov
cmc
cmp
sub
jmp
lea
push
mov
mov
stos
sub
jl
dec
pop
or
pop
pop
add
inc
add
les
fdivrs
in
iret
pop
hlt
pop
sbb
mov
push
arpl
daa
repnz
cmp
addb
push
leave
inc
pop
out
mov
and
mov
sub
scas
pop
xor
loope
mov
xchg
xchg
test
dec
cmp
xchg
jns
mov
jge
hlt
pop
sarl
ljmp
and
sbb
pop
addb
lods
out
fistps
fidivl
jp
jle
cltd
icebp
pop
cld
xor
add
jns
popa
popa
mov
pusha
add
and
mov
in
test
aad
mov
ficompl
sar
adc
lahf
jle
sub
xchg
cli
ret
loopne
push
lret
jp
pop
fisttps
add
xor
push
mov
imul
mov
cmp
cmp
faddl
add
xchg
repnz
add
pop
mov
inc
jecxz
add
and
pop
test
outsb
mov
scas
enter
fwait
jno
sbb
jnp
dec
aas
dec
loope
add
mov
add
addb
ficoms
sbb
aad
mov
fs
and
mov
addl
add
clc
lahf
gs
jmp
xchg
pushf
in
mov
lods
jmp
fdivp
mov
mov
test
push
adc
xchg
inc
add
fstl
inc
lds
mov
sbb
xlat
pop
lods
sbb
inc
add
and
xor
inc
into
jecxz
add
in
dec
in
data16
mov
out
icebp
jmp
mul
jl
bound
or
aad
dec
icebp
mov
imul
jns
sbb
popa
fistps
incl
call
mov
loopne
add
xor
mov
jp
push
jb
dec
nop
push
and
mov
pop
mov
push
jle
rolb
aaa
xchg
fcmovne
sbbl
jns
push
dec
fdiv
xor
out
enter
add
xor
jmp
inc
add
cmp
shl
sub
fdivl
add
mov
xchg
repz
fists
push
add
push
add
or
mov
mov
add
mov
and
cmp
loope
ljmp
daa
jne
out
pop
pop
mov
lods
rol
xor
pop
mov
adc
sub
in
xchg
rcll
or
push
sbb
addb
mov
dec
xlat
lcall
orl
dec
xchg
imul
ds
push
das
sub
add
mov
push
add
push
xchg
rcrl
cwtl
fsts
in
icebp
ret
xor
jne
and
lcall
jns
inc
sbb
adc
lods
stos
push
or
mov
lea
dec
jbe
imul
sbb
xchg
movb
pop
mov
je
cmp
add
int3
sub
sbbl
push
sti
xchg
enter
sarl
fwait
imul
punpcklbw
scas
push
xchg
lods
mov
inc
mov
sbb
jg
fnstsw
adc
jecxz
lea
cmp
add
add
popf
leave
arpl
enter
add
sahf
enter
sarl
dec
mov
xor
push
pop
sarb
xchg
pop
dec
lods
cmp
mov
mov
cmp
mov
cmp
add
mov
adc
rolb
xchg
repnz
pop
and
jbe
and
notb
out
pop
xor
outsl
adcl
push
jne
clc
out
sub
push
jns
push
mov
and
or
add
jae
fsubl
in
gs
lret
push
popl
push
into
int3
cwtl
push
movsb
test
cli
jo
je
imul
and
add
add
jno
sub
xor
mov
iret
or
inc
lods
push
popa
push
hlt
inc
add
stos
jg
sti
shrl
cmp
lret
push
pop
mov
je
out
inc
add
pop
mov
daa
cwtl
sub
dec
dec
lods
outsb
sti
pop
lahf
mov
mov
mov
cmpsl
arpl
in
dec
jl
cld
cmp
jno
addb
xor
add
push
add
cmpsl
xchg
sahf
rclb
gs
addr16
test
out
out
push
mov
lret
pop
mov
adc
aam
mov
mov
xor
popf
arpl
or
sub
mov
push
add
mov
push
add
cmpsl
repnz
mov
stc
test
psrld
sub
mov
ficomps
mov
pop
fildll
mov
push
inc
mov
enter
xchg
inc
addb
push
jmp
mov
test
sbb
repnz
add
or
dec
lods
sbb
imul
push
jmp
add
mov
test
fdivr
mov
mov
jb
mov
or
mov
aam
leave
add
adc
fimuls
inc
add
insl
adc
lods
add
push
pop
ss
inc
cmpsl
adc
or
movsb
popa
ljmp
pop
mov
daa
jp
mov
in
lods
imul
jecxz
mov
stc
jbe
dec
hlt
outsb
imull
jns,pt
push
add
sub
leave
sbb
incl
add
xchg
inc
outsl
jnp
in
imul
sub
repnz
and
lea
inc
dec
pop
and
push
or
jecxz
les
pop
mov
add
dec
adc
jno
mov
daa
cltd
xor
jl
sahf
mov
xor
sahf
sub
lcall
inc
add
notl
sbb
xchg
imul
pop
push
mov
mov
pop
xor
jnp
lods
sbb
inc
aas
roll
movsb
mov
loope
fnclex
sbb
pop
pop
mov
xor
push
adc
add
test
repz
xor
cmp
xor
add
cwtl
inc
add
cwtl
inc
add
xor
push
loopne
insl
xor
pop
push
add
add
inc
subl
ret
fldcw
push
xchg
jp
arpl
ds
cltd
or
sbb
fists
jns
rcrl
cmc
inc
add
or
mov
add
cmpsb
leave
loope
imul
xor
add
xor
add
sub
add
dec
sub
outsl
or
cmc
push
add
jno
idivl
dec
out
sahf
mov
icebp
dec
inc
add
jae
add
cli
and
jno
mov
inc
add
jge
bound
add
cwtl
outsb
jp
jle
mov
sti
scas
pushf
push
int
jl
and
pop
jge
mov
push
cmp
add
push
sbb
add
push
lea
ud2
stos
mov
cmp
aaa
bnd
mov
mov
outsb
jnp
mov
test
sti
sti
stc
sub
rcl
movsl
sub
data16
cmpsb
mov
mov
cmp
jne
cmp
add
push
imul
add
in
into
movsl
cmp
add
add
cmp
push
mov
fisttps
lahf
fmull
lret
xchg
cmp
add
cmp
jmp
in
dec
dec
hlt
xchg
add
add
xor
out
xor
xor
sub
inc
or
add
test
out
dec
xor
cmpsb
fwait
sbb
adc
jae
jp
adc
add
sub
into
adc
es
add
std
push
jno
jmp
pop
cmp
or
mov
mov
jae
push
mov
cmp
popa
lods
ror
stos
pop
outsl
in
and
dec
push
icebp
or
mov
mov
cmc
iret
jnp
dec
ficomps
mov
adc
sub
inc
add
add
pop
sarl
ja
xor
out
aaa
lret
sub
add
addr16
mov
or
inc
mov
sahf
aas
sub
inc
mov
or
insl
add
and
xchg
outsl
push
add
pushf
lret
out
sub
add
adc
shrl
insl
jp
pop
push
add
daa
adc
mov
add
or
fstpl
add
cwtl
mov
sbb
addr16
jp
icebp
mov
andl
cltd
mov
or
out
and
mov
lods
add
mov
add
stc
test
or
jl
mov
aas
xor
or
fcomip
mov
push
call
xchg
loope
or
mov
std
cltd
jbe
scas
mov
inc
sbb
cmpsb
or
pop
push
pop
cmp
test
mov
fstl
dec
pop
stc
cmp
or
add
ss
les
inc
add
addb
push
xor
cld
imul
xchg
ret
and
stc
movsb
or
cmpsl
sbb
mov
add
adc
loopne
dec
lret
add
fcompl
jb
dec
sub
mov
lds
lds
call
mov
push
pop
inc
dec
pop
adcl
aad
test
inc
xchg
and
pop
xorl
mov
inc
ja
repz
lds
jno
std
and
add
lods
xchg
jmp
ficompl
cltd
gs
pop
push
loop
push
pusha
add
cli
in
mov
push
rcll
test
pushl
and
mov
add
lods
ja
addb
inc
add
testb
inc
add
cltd
test
imul
cmp
data16
xor
addb
pop
ret
inc
add
sub
into
fdivrl
inc
mov
push
cli
mov
push
fcmovne
mov
pushf
jp
movsl
testl
push
mov
cmc
jp
daa
movb
mov
push
cmpsl
jb
leave
pop
shrd
les
mov
dec
mov
and
adc
sub
mov
mov
hlt
in
fidivs
xlat
loope
add
scas
dec
inc
add
xchg
sub
rclb
jecxz
push
add
adc
loop
or
imul
outsl
push
fwait
xchg
call
pop
sbb
or
xor
add
addr16
mull
adc
and
mov
xchg
je
out
in
inc
xchg
xor
add
sub
add
inc
add
add
adc
scas
aad
mov
sahf
cltd
adc
xchg
jae
arpl
jecxz
mov
in
cld
jle
aas
jne
cmp
jno
mov
add
add
addb
cmp
and
xchg
xchg
fdivl
adc
jns
push
lret
out
and
sub
adc
xor
roll
sahf
shrb
or
xchg
xor
mov
lret
insl
imull
dec
mov
adc
inc
fsts
pushf
addb
in
add
pop
lods
adc
add
lcall
dec
cmpsb
sbb
lret
adc
dec
pop
test
stos
pop
dec
dec
mov
gs
sbb
sub
nop
inc
add
adc
ret
sub
or
add
push
xor
lahf
cmpsb
push
roll
jle
add
iret
movb
icebp
inc
add
dec
test
shll
xlat
pop
mov
addl
bound
daa
das
mov
adc
or
and
out
lock
sub
mov
jle
cltd
push
lahf
jl
ficoml
inc
add
pop
leave
ret
arpl
lret
rolb
pop
es
cmpsb
ficoms
sarb
cmp
gs
push
pop
adc
loope
add
add
inc
add
imul
mov
addr16
sahf
leave
outsb
lods
mov
cld
adcl
mov
arpl
add
nop
cld
nop
jmp
stc
add
xchg
mov
pop
and
nop
es
mov
scas
jnp
nop
cld
nop
jmp
add
add
and
dec
add
sbb
mov
xchg
ret
inc
and
popa
sbb
in
push
add
stc
nop
es
add
fistl
leave
loope
add
nop
pop
push
roll
lret
mov
xchg
ret
add
add
dec
add
sti
mov
stc
nop
es
mov
or
mov
add
push
sub
and
add
faddl
add
mov
stc
nop
es
push
mov
popf
xor
stc
nop
es
pop
adc
nop
es
lea
push
dec
cmpsl
add
inc
add
stc
nop
es
add
cli
add
push
xchg
fadd
out
stc
nop
es
adc
xor
xor
nop
cld
nop
jmp
lods
xor
add
ficoms
push
mov
xchg
ret
add
push
stc
nop
es
add
scas
dec
add
imull
jne
stc
nop
es
add
imul
add
nop
es
add
mov
push
es
mov
cli
add
stc
nop
es
mov
inc
push
add
xor
add
push
mov
xchg
ret
add
cmpsl
lea
es
add
dec
jb
or
jp
les
push
mov
xchg
ret
add
cmp
pop
sbb
jne
push
mov
xchg
ret
add
add
add
jb
add
inc
add
lods
add
mov
xchg
ret
add
add
jmp
in
add
add
stc
nop
es
popl
add
addb
add
fsubl
add
add
mov
stc
nop
es
add
sub
add
add
sub
add
lahf
add
mov
cmp
ret
roll
add
xor
sbb
inc
sub
nop
es
add
push
sbb
cmpb
add
add
mov
xor
or
es
add
add
add
add
nop
cld
nop
jmp
add
popa
sub
add
add
mov
movzwl
stc
nop
es
mov
insb
xor
stc
nop
es
add
add
add
into
mov
nop
cld
nop
jmp
add
popa
push
fmull
add
add
pushl
stc
nop
es
add
fimull
mov
push
stc
nop
es
add
mov
pop
push
mov
add
add
add
add
dec
sbb
mov
movsb
push
mov
xchg
ret
lahf
add
imul
jo
xlat
push
cld
or
jmp
add
das
add
push
pop
mov
stc
nop
es
xor
arpl
nop
cld
nop
jmp
lret
xor
jae
nop
jmp
lods
add
inc
stc
nop
es
popa
cli
adc
add
dec
xor
stc
nop
es
add
dec
ret
xchg
lods
call
push
mov
xchg
ret
add
or
push
arpl
push
mov
xchg
ret
xchg
add
add
jmp
les
nop
es
add
sub
fs
add
stc
nop
es
add
adc
dec
cmp
push
mov
xchg
ret
inc
mov
sbb
nop
es
push
lret
add
add
mov
xchg
ret
add
and
sub
add
nop
cld
nop
jmp
add
pusha
add
mov
cld
nop
jmp
push
inc
imul
mov
repz
add
nop
cld
nop
jmp
add
mov
push
mov
xchg
ret
cmpsl
imul
stc
lea
nop
cld
nop
jmp
add
add
nop
mov
subl
stc
nop
es
inc
push
add
push
cmp
inc
loop
add
popa
add
mov
xchg
ret
mov
add
jmp
and
add
pusha
add
add
nop
es
add
faddl
mov
popa
add
cld
nop
jmp
xchg
mov
add
xor
stc
nop
es
mov
add
or
add
inc
push
mov
xchg
ret
adc
add
jns
nop
cld
nop
jmp
mov
add
movsb
fimull
fstp
inc
add
adc
ljmp
nop
es
cmp
mov
decl
stc
nop
es
add
xor
cli
hlt
cld
mov
stc
nop
es
xor
cmp
add
outsb
loopne
add
adc
add
sbb
stc
nop
es
add
adc
push
mov
xchg
ret
add
hlt
sbb
add
xchg
ret
add
add
add
mov
xchg
ret
add
add
push
add
mov
stc
nop
es
push
pop
add
add
and
add
pop
call
stc
nop
es
popa
add
add
mov
aad
fadds
movsb
add
add
stc
add
nop
cld
nop
jmp
mov
sub
inc
add
pop
nop
cld
nop
jmp
adc
popa
mov
mov
pop
jne
stc
nop
es
mov
add
es
cmp
lods
add
imul
push
add
stc
nop
es
mov
cmp
nop
cld
nop
jmp
and
xor
push
mov
add
add
push
push
mov
xchg
ret
add
lahf
cmpsl
fiadds
test
push
stc
nop
es
add
add
xchg
and
enter
es
jb
cli
add
add
add
add
nop
es
movsb
cli
add
adc
sub
nop
cld
nop
jmp
hlt
pop
add
push
nop
cld
nop
jmp
add
lret
sahf
add
add
mov
push
mov
xchg
ret
pop
add
roll
jg
stc
nop
es
add
add
roll
add
bound
rolb
push
nop
cld
nop
jmp
fs
add
add
pop
add
add
nop
cld
nop
jmp
add
popl
test
jb
mov
add
aas
xor
stc
nop
es
add
hlt
mov
arpl
add
nop
es
nop
mov
add
stc
nop
es
push
add
add
lea
push
mov
xchg
ret
mov
popl
stc
nop
es
add
imul
ret
lock
pop
push
mov
xchg
ret
mov
xor
pop
push
mov
xchg
ret
add
push
mov
lea
aaa
out
mov
nop
cld
nop
jmp
add
pusha
pop
mov
adc
pop
nop
cld
nop
jmp
mov
add
nop
stos
and
adc
es
add
stos
cmpsl
cmp
add
faddl
mov
xchg
ret
fidivs
add
inc
mov
es
and
lods
add
pop
pop
stc
nop
es
fimuls
mov
ja
mov
stc
nop
es
add
das
push
mov
inc
xor
incb
add
fsub
add
push
inc
rcrl
stc
nop
es
add
fiadds
cld
call
nop
cld
nop
jmp
add
add
xor
nop
cld
nop
jmp
dec
lods
add
call
in
inc
add
cli
pop
lods
stc
add
pop
mov
stc
nop
es
faddl
add
mov
mov
clc
rolb
lea
add
pop
push
daa
pop
out
sub
nop
cld
nop
jmp
adc
mov
mov
stc
nop
es
xchg
hlt
add
stc
nop
es
and
add
add
es
adc
mov
fsubs
nop
es
add
add
add
lea
dec
mov
stc
nop
es
popa
add
xor
cmp
add
nop
cld
nop
jmp
stos
add
adc
jb
or
pusha
pop
ficoms
stc
nop
es
mov
mov
and
add
stc
nop
es
add
add
add
nop
es
push
scas
cli
lret
inc
stos
jmp
nop
cld
nop
jmp
mov
out
shr
stc
nop
es
shll
lods
add
add
nop
cld
nop
jmp
mov
add
add
add
add
sbb
add
dec
mov
stc
nop
es
adc
add
or
push
xchg
jge
scas
add
es
pop
stos
add
jae
vmaxpd
nop
es
add
adc
push
lahf
xchg
fsts
mov
xchg
ret
add
add
call
stc
nop
es
ret
add
nop
jmp
add
add
xor
add
shlb
jae
popa
stc
nop
es
mov
mov
jge
stc
nop
es
fcoml
add
jne
stc
nop
es
mov
push
mov
xchg
ret
sahf
adc
out
jne
stc
nop
es
pop
add
arpl
nop
es
add
push
or
je
stc
nop
es
mov
nop
cld
nop
jmp
add
adc
add
nop
es
and
inc
add
mov
stc
nop
es
add
xchg
fadds
jmp
xor
push
add
call
stc
nop
es
dec
add
lea
nop
es
lods
mov
mov
rep
stc
nop
es
imul
jb
cmp
stc
nop
es
dec
lret
faddl
mov
and
push
mov
xchg
ret
ret
inc
xor
movb
push
mov
add
nop
es
inc
jb
add
xchg
sbb
nop
jmp
or
add
xchg
jle
or
nop
es
jb
add
stc
dec
fimuls
mov
xchg
ret
add
nop
scas
sub
stc
nop
es
add
mov
adc
add
add
mov
cmpsl
mov
faddl
sbb
xchg
add
add
nop
es
mov
subl
stc
nop
es
add
lea
xor
stc
nop
es
pop
mov
mov
stc
nop
es
pusha
pop
jnp
popa
add
nop
es
dec
xor
add
pop
cmpl
mov
xchg
ret
hlt
add
xlat
pop
add
stc
nop
es
add
popa
inc
mov
sub
nop
es
add
pop
add
fmull
mov
push
mov
xchg
ret
add
xor
add
mov
mov
stc
nop
es
push
pusha
cmpsl
add
adc
push
push
mov
xchg
ret
hlt
fdivl
filds
nop
jmp
faddl
dec
hlt
das
cmp
gs
ror
stc
nop
es
add
add
mov
add
add
nop
es
cli
add
jg
clc
stc
nop
es
add
cmpsl
add
pop
sub
inc
inc
add
nop
es
add
push
insl
lea
stc
nop
es
add
xchg
lahf
dec
lahf
stc
jne
stc
nop
es
add
push
jo
shr
push
mov
xchg
ret
inc
cmpsl
pop
cmpsl
add
mov
dec
cmp
nop
es
add
add
xor
add
push
jae
push
mov
xchg
ret
add
add
subl
jmp
lods
add
pop
xor
inc
stc
nop
es
mov
cmp
add
nop
cld
nop
jmp
add
add
add
add
sub
add
mov
mov
push
stc
nop
es
xor
add
add
add
mov
push
mov
add
nop
es
add
mov
es
add
add
das
inc
add
push
stc
nop
es
inc
sub
mov
sub
jne
nop
cld
nop
jmp
cli
cli
mov
nop
pusha
shll
mov
xchg
ret
popa
hlt
add
lahf
insl
inc
push
mov
xchg
ret
cmp
pusha
mov
add
es
cmpsl
add
and
loop
xor
jno
push
mov
push
mov
xchg
ret
add
add
add
nop
cld
nop
jmp
sahf
add
add
mov
stc
nop
es
add
xchg
add
mov
push
stc
nop
es
fdivrl
add
std
xor
stc
nop
es
add
add
add
mov
xchg
ret
xor
fmull
add
mov
stc
nop
es
adc
add
push
popa
fisttpll
es
add
cmp
add
xchg
add
pushf
pop
nop
cld
nop
jmp
nop
inc
lods
adc
movsb
shr
push
stc
nop
es
fisubs
add
add
cld
mov
nop
cld
nop
jmp
mov
add
add
stc
nop
es
lods
add
das
fs
dec
jmp
stc
nop
es
mov
add
ret
mov
mov
stc
nop
es
add
sti
add
add
pop
add
add
fs
stc
nop
es
add
add
stc
nop
es
or
add
mov
xchg
ret
adc
mov
popa
mov
dec
push
push
mov
xchg
ret
cli
lea
add
add
mov
stc
nop
es
lea
pop
mov
or
fadds
nop
cld
nop
jmp
add
imul
push
mov
mov
xchg
ret
xor
popa
hlt
push
pop
stc
nop
es
inc
and
dec
imul
nop
es
add
lds
add
out
addb
cli
add
nop
cld
nop
jmp
add
dec
fmull
or
add
nop
cld
nop
jmp
cmpsl
add
add
nop
es
pop
add
stos
add
aas
add
nop
cld
nop
jmp
xor
jb
mov
mov
jmp
add
push
push
cli
cmp
xchg
lahf
rolb
xchg
push
pop
push
mov
xchg
ret
popl
mov
mov
es
add
dec
mov
stc
nop
es
add
add
popa
dec
sbb
icebp
stc
nop
es
lods
pusha
movsb
add
add
nop
es
add
das
add
xor
adc
nop
es
stos
cmp
lret
sub
mov
push
mov
xchg
ret
and
add
and
and
mov
stc
nop
es
xor
or
mov
stc
nop
es
add
cmp
test
or
add
nop
es
add
sub
push
mov
xchg
ret
add
add
mov
add
stc
nop
es
push
add
add
push
nop
cld
nop
jmp
xor
mov
add
xor
add
stc
nop
es
jb
clc
mov
nop
cld
nop
jmp
add
xor
lock
test
stc
nop
es
add
add
adc
pop
push
stc
nop
es
xor
mov
sbb
add
or
add
add
add
dec
cmp
nop
es
add
add
add
lcall
jmp
mov
mov
pop
xchg
fldl
sti
stc
nop
es
and
stos
scas
fmull
push
mov
xchg
ret
popa
lahf
faddl
push
cmp
push
add
inc
nop
cld
nop
jmp
add
mov
add
add
stc
nop
es
push
add
add
adc
ret
lea
mov
adc
add
scas
xor
add
lahf
xor
nop
cld
nop
jmp
add
and
jbe
nop
cld
nop
jmp
fiadds
and
scas
xor
nop
cld
nop
jmp
mov
fs
add
cmp
push
fs
push
push
mov
xchg
ret
movsb
mov
movsb
xor
push
adc
mov
mov
stc
nop
es
ret
add
mov
add
mov
xchg
ret
add
push
cli
dec
push
mov
xchg
ret
nop
lahf
mov
nop
add
push
pop
pusha
stc
nop
es
add
mov
pop
mov
stc
nop
es
nop
mov
mov
js
cld
nop
jmp
add
mov
add
add
stc
nop
es
roll
inc
add
inc
inc
mov
stc
nop
es
cmp
mov
inc
push
mov
xchg
ret
xchg
add
add
pop
jmp
stc
nop
es
add
movsb
mov
es
push
add
scas
add
push
push
stc
nop
es
pusha
add
add
add
stos
push
add
nop
cld
nop
jmp
add
adc
nop
es
add
adc
dec
nop
cld
nop
jmp
adc
add
add
or
nop
es
push
lods
add
sahf
mov
popf
push
mov
add
les
pop
pop
popf
xor
add
add
mov
push
mov
xchg
ret
add
add
add
stc
nop
es
mov
add
xor
pop
mov
mov
stc
nop
es
and
add
push
stc
nop
es
fdivl
fdivrl
iret
add
stc
nop
es
pop
push
add
sahf
add
test
jecxz
jno
and
push
mov
xchg
ret
ret
add
jl
push
mov
xchg
ret
add
fimuls
add
push
stc
nop
es
dec
add
adc
stc
nop
es
add
mov
stc
nop
es
push
cmp
push
fmull
fdivl
or
add
add
idiv
incl
add
mov
adcb
add
adc
add
shl
add
stc
nop
es
add
add
sub
xor
add
nop
cld
nop
jmp
push
lods
fsubrl
ret
sbb
addb
mov
inc
cld
stc
nop
es
mov
stc
nop
es
add
add
jns
stc
nop
es
cmpsl
sahf
xor
lahf
mov
sub
repnz
add
adc
stc
mov
enter
es
popa
lret
add
jb
add
rep
nop
cld
nop
jmp
mov
xor
inc
or
lahf
jecxz
add
mov
add
jge
rclb
clc
pushl
mov
in
mov
stc
nop
es
pusha
add
mov
dec
shll
mov
xchg
ret
xchg
add
add
push
lods
jl
mov
sub
pop
loop
add
scas
add
sbb
add
nop
es
xor
lods
add
sub
xor
add
stc
nop
es
push
stc
jbe
add
stc
nop
es
add
add
lea
inc
and
cld
nop
jmp
fcoml
add
dec
cmp
cld
nop
jmp
pop
pop
mov
add
popa
mov
mov
stc
nop
es
adc
nop
es
add
add
dec
mov
push
mov
xchg
ret
mov
fs
sub
stc
nop
es
xor
dec
xor
lahf
and
bound
push
mov
nop
cld
nop
jmp
add
cmp
xchg
add
push
push
shll
jb
nop
cld
nop
jmp
add
add
movzwl
stc
nop
es
cmpsl
add
stc
mov
mov
xchg
ret
mov
enter
xor
add
nop
cld
nop
jmp
add
add
out
stc
nop
es
xor
nop
into
mov
nop
cld
nop
jmp
scas
pusha
hlt
add
add
add
push
mov
xchg
ret
mov
add
pop
mov
stc
nop
es
xor
push
or
xor
pop
mov
nop
es
xor
dec
mov
mov
add
nop
cld
nop
jmp
add
mov
and
push
mov
xchg
ret
fdivrl
mov
cld
nop
jmp
add
hlt
add
dec
or
push
mov
xchg
ret
pop
xor
add
add
mov
cld
nop
jmp
add
add
sbb
mov
xchg
ret
add
add
stc
nop
es
add
mov
nop
cld
nop
jmp
add
add
stos
push
mov
xchg
ret
add
add
add
dec
shll
addb
add
push
push
mov
xchg
ret
inc
add
xor
add
push
jne
mov
arpl
jae
pop
stc
nop
es
adc
xor
add
add
fldcw
cli
stc
nop
es
mov
add
sbb
add
nop
es
and
adc
push
stc
nop
es
add
add
push
outsb
add
stc
nop
es
faddl
add
add
adc
nop
es
fdivr
add
push
stc
nop
es
dec
mov
mov
movb
sbb
es
ret
cmp
add
mov
xchg
ret
mov
pop
add
stc
nop
es
add
or
mov
add
add
adc
nop
es
add
add
xchg
push
mov
xchg
ret
lods
add
inc
in
push
mov
xchg
ret
scas
add
jge
stc
nop
es
xor
mov
roll
fiadds
es
mov
add
data16
xor
add
stc
nop
es
lahf
add
push
mov
xchg
ret
cmp
popa
add
nop
cld
nop
jmp
inc
add
pusha
nop
mov
cltd
xor
nop
cld
nop
jmp
add
mov
push
mov
xchg
ret
lahf
popa
add
push
and
test
push
mov
xchg
ret
mov
add
mov
add
stc
nop
es
add
add
add
mov
cmc
inc
add
add
inc
mov
xor
stc
nop
es
add
add
add
cmc
dec
dec
pop
mov
mov
nop
es
add
add
add
mov
push
push
mov
xchg
ret
add
and
pop
push
push
mov
xchg
ret
mov
add
push
cwtl
call
stc
nop
es
add
inc
add
es
add
hlt
mov
add
stc
nop
es
push
imul
nop
es
add
sahf
lea
pop
push
mov
xchg
ret
stc
cli
add
add
add
jae
lea
push
mov
xchg
ret
xor
mov
cltd
add
stc
nop
es
add
mov
jl
add
stc
nop
es
fcoml
mov
test
push
mov
xchg
ret
faddl
push
add
mov
stc
nop
es
add
cmpsl
inc
xor
add
stc
nop
es
add
fmull
cltd
push
nop
cld
nop
jmp
mov
push
add
add
popa
add
mov
xchg
ret
cmp
and
dec
mov
stc
nop
es
dec
faddl
adc
mov
nop
es
nop
mov
mov
mov
test
nop
cld
nop
jmp
sub
add
add
add
mulb
add
nop
es
adc
mov
add
mov
stc
nop
es
add
xor
jne
stc
nop
es
faddl
add
sub
nop
es
add
out
push
push
mov
xchg
ret
adc
lret
lock
nop
es
scas
dec
mov
imul
stc
nop
es
hlt
dec
hlt
lahf
scas
add
lret
xchg
xchg
es
jmp
nop
cld
nop
jmp
add
add
clc
push
stc
nop
es
lods
add
add
and
test
stc
nop
es
add
fsubl
pop
int3
mov
stc
nop
es
cmp
add
dec
add
mov
stc
nop
es
movsb
add
sbb
sbb
inc
add
push
mov
add
jmp
jb
add
mov
jmp
add
add
add
add
mov
nop
es
add
push
xor
ret
fwait
mov
stc
nop
es
mov
mov
popa
nop
cld
nop
jmp
sahf
jb
add
add
add
mov
stc
nop
es
popa
add
add
mov
mov
push
pusha
incl
add
push
dec
add
mov
add
add
popf
add
stc
nop
es
mov
hlt
lods
add
aaa
sbb
popa
add
nop
es
add
add
pop
and
nop
cld
nop
jmp
add
mov
mov
xchg
ret
add
add
mov
stc
nop
es
add
lea
mov
push
mov
xchg
ret
add
xor
and
nop
cld
nop
jmp
add
lea
add
fdivl
mov
stc
nop
es
add
pusha
add
add
std
mov
stc
nop
es
add
lret
add
mov
nop
cld
nop
jmp
lea
add
push
push
mov
xchg
ret
xor
fdivrl
add
xchg
ret
stc
xor
add
mov
and
add
push
mov
xchg
ret
mov
lea
lock
stc
nop
es
add
add
leave
push
stc
nop
es
add
stc
nop
es
movsb
add
popl
popl
xor
mov
add
nop
cld
nop
jmp
add
dec
add
nop
es
push
lahf
imul
stc
nop
es
add
fidivrs
and
xchg
cwtl
pop
push
mov
xchg
ret
add
xor
push
mov
jmp
mov
xchg
add
xor
push
stc
nop
es
add
mov
mov
stc
nop
es
popl
add
add
inc
stos
push
mov
add
add
xor
or
sub
sub
nop
es
scas
mov
add
mov
jmp
add
add
xchg
pop
mov
jb
nop
es
push
add
fwait
movswl
stc
nop
es
add
rep
stc
nop
es
push
and
mov
add
pop
and
push
mov
xchg
ret
adc
pop
stc
nop
es
mov
add
add
sub
es
add
mov
push
mov
xchg
ret
add
add
add
add
pop
push
mov
xchg
ret
nop
add
xor
add
jb
add
lea
add
xor
jge
inc
add
cmp
add
faddl
dec
and
stc
nop
es
xor
add
mov
mov
jmp
and
das
mov
sub
sti
add
xchg
ret
add
scas
scas
shll
add
push
nop
cld
nop
jmp
dec
push
sahf
add
mov
jb
add
add
mov
dec
testl
add
faddl
add
inc
add
mov
add
add
nop
es
lods
add
sub
int
pop
jae
nop
es
xor
mov
je
stc
nop
es
xchg
lahf
add
add
test
cmp
nop
cld
nop
jmp
add
pop
or
push
mov
xchg
ret
ret
add
pusha
std
and
nop
cld
nop
jmp
add
and
adc
or
nop
cld
nop
jmp
add
push
stc
nop
es
push
add
pusha
inc
mov
es
shrl
mov
stc
pop
out
add
nop
cld
nop
jmp
xor
add
mov
push
mov
xchg
ret
push
add
dec
fdivrl
add
stc
nop
es
add
mov
push
mov
lock
add
mov
adc
out
and
push
push
add
stc
nop
es
add
add
lahf
add
push
mov
xchg
ret
mov
xchg
lahf
add
sub
mov
xchg
ret
adc
or
mov
xchg
ret
dec
adc
add
add
sarl
imul
stc
nop
es
jb
push
push
push
movsb
scas
out
add
stc
nop
es
add
push
cmpsl
jne
shll
es
sahf
cmp
inc
pop
mov
stc
nop
es
add
movsb
dec
cli
inc
out
add
stc
nop
es
xor
dec
add
add
stos
push
mov
xchg
ret
add
add
xor
sbb
cmp
nop
jmp
popa
add
add
rcl
pop
nop
cld
nop
jmp
lods
dec
lret
add
add
mov
in
push
stc
nop
es
mov
add
repz
push
or
cld
nop
jmp
inc
add
add
mov
push
mov
xchg
ret
add
sahf
imul
es
add
add
mov
add
jb
inc
add
dec
dec
add
mov
nop
cld
nop
jmp
lea
dec
add
mov
mov
push
mov
xchg
ret
mov
add
xor
stc
nop
es
fsubl
mov
nop
es
add
xor
mov
add
stc
nop
es
add
add
xchg
stc
nop
es
mov
stc
lahf
add
cmpsl
out
mov
out
inc
add
lret
add
add
xchg
pop
add
stc
nop
es
cmp
cmp
lret
lea
cld
nop
jmp
add
cmp
cmpsl
add
cmpsl
or
es
add
adc
add
cld
push
nop
cld
nop
jmp
add
pop
dec
add
fsubs
xor
add
stc
nop
es
and
es
adc
nop
cld
nop
jmp
fs
mov
stc
and
stc
nop
es
fsubl
popa
add
mov
stc
nop
es
add
xor
cld
nop
jmp
add
add
add
add
pop
pop
stc
nop
es
inc
add
add
mov
icebp
stc
nop
es
add
add
push
nop
cld
nop
jmp
add
or
ret
cli
icebp
test
and
mov
stc
nop
es
add
out
std
add
nop
cld
nop
jmp
add
push
mov
or
or
stc
nop
es
dec
das
mov
push
repnz
lods
stc
nop
es
add
lods
add
cmp
pop
call
out
decl
xchg
push
mov
xchg
ret
add
add
out
add
nop
cld
nop
jmp
add
test
nop
es
ficoms
stos
lahf
add
dec
add
mov
xchg
ret
add
add
stc
nop
es
cli
add
lahf
das
add
push
mov
add
push
xor
add
mov
add
push
push
mov
xchg
ret
push
add
xor
add
sub
clc
stc
nop
es
mov
add
stos
mov
lcall
nop
es
nop
add
cmpsl
lahf
xor
stc
nop
es
fcoml
ret
stc
nop
es
add
adc
pushl
push
mov
xchg
ret
add
mov
stc
nop
es
add
ret
movsb
cmp
jmp
stc
nop
es
add
ret
add
stc
nop
es
nop
add
adcl
cmc
call
mov
mov
je
add
stc
nop
es
dec
add
cmpsb
fsts
mov
xchg
ret
xor
pusha
rcrb
add
add
nop
es
adc
mov
adc
mov
stc
nop
es
fisubs
add
push
mov
xchg
ret
push
pusha
stos
scas
fdivl
stc
nop
es
xor
notb
xchg
sbb
cld
nop
jmp
scas
add
inc
fiadds
adc
nop
cld
nop
jmp
mov
stos
mov
adc
clc
and
nop
cld
nop
jmp
push
add
sbb
nop
es
add
add
add
mov
nop
cld
nop
jmp
add
lahf
add
rcll
nop
cld
nop
jmp
lods
add
and
icebp
jnp
inc
adc
cld
nop
jmp
xor
add
sahf
add
xchg
xor
xor
add
stc
nop
es
imul
stc
nop
es
ret
mov
nop
lret
push
push
mov
xchg
ret
add
lods
cli
add
das
add
push
mov
xchg
ret
add
jb
or
xor
add
stc
nop
es
mov
js
dec
or
mov
xchg
ret
adc
mov
stc
nop
es
add
add
cmp
inc
xor
stc
nop
es
popl
fs
lods
je
stc
nop
es
add
sbb
jmp
nop
es
add
cmp
mov
movsb
push
mov
xchg
ret
mov
add
add
xor
sarl
cmc
inc
add
lods
xor
add
adc
nop
es
dec
cli
ret
xor
stc
nop
es
lea
add
mov
nop
cld
nop
jmp
add
mov
fisttpll
add
nop
es
add
stc
nop
es
das
add
or
jb
add
popa
push
loop
cld
nop
jmp
xor
add
je
fadds
jne
stc
nop
es
add
fsubrl
add
mov
stc
nop
es
add
inc
mov
mov
nop
cld
nop
jmp
movsb
mov
scas
sarl
stc
inc
add
lret
add
fmull
repz
stc
nop
es
mov
jne
stc
nop
es
and
add
stc
nop
es
add
mov
xchg
ret
add
add
add
mov
add
stc
nop
es
mov
add
es
mov
stc
nop
es
add
add
add
stc
nop
es
faddl
add
sbb
fiaddl
xchg
ret
xor
add
add
dec
mov
nop
cld
nop
jmp
shll
add
pusha
push
mov
xchg
ret
sub
add
mov
je
stc
nop
es
add
adc
call
stc
nop
es
hlt
adc
xor
stc
nop
es
push
add
movsb
nop
xor
loope
mov
stc
nop
es
add
pop
lods
jne
stc
nop
es
and
adc
nop
cld
nop
jmp
das
push
popa
mov
stc
nop
es
dec
pop
popa
add
add
and
push
push
mov
xchg
ret
add
add
xor
push
and
cmc
jl
les
mov
xchg
ret
dec
nop
add
push
mov
stc
nop
es
fsubrl
add
inc
loopne
cld
nop
jmp
add
mov
pushf
push
push
mov
xchg
ret
nop
add
ret
inc
add
das
repz
add
add
add
add
jb
and
add
pop
mov
test
xlat
stc
nop
es
add
push
imul
jb
push
add
add
add
cld
nop
jmp
xchg
add
scas
jb
mov
scas
out
stc
nop
es
add
add
mov
push
mov
xchg
ret
movsb
add
nop
mov
inc
add
pusha
add
lea
stc
nop
es
mov
mov
add
stc
nop
es
add
adc
sti
stc
nop
es
dec
and
cmpsl
sub
nop
es
add
add
mov
xlat
xor
stc
nop
es
mov
arpl
add
add
push
call
and
lret
add
add
add
or
es
stc
stc
push
stc
sub
xchg
aaa
aas
lods
stc
nop
es
add
fcoml
cmp
cld
nop
jmp
add
push
add
add
nop
cld
nop
jmp
add
adc
movswl
stc
nop
es
nop
dec
stos
dec
push
int3
jmp
stc
nop
es
add
mov
dec
mov
stc
nop
es
lods
lods
or
inc
lret
call
adc
add
add
mov
add
pop
jmp
nop
cld
nop
jmp
add
add
add
cld
nop
jmp
lods
add
add
add
mov
stc
nop
es
cmp
xor
leave
mov
stc
nop
es
ret
add
test
call
jmp
cmpsl
mov
mov
push
mov
xchg
ret
add
add
dec
call
stc
nop
es
add
cmpsl
add
cwtl
add
stc
nop
es
fiadds
add
sbb
es
roll
mov
add
adc
push
mov
loop
add
cs
call
jbe
xor
sub
es
add
adc
ret
xchg
push
pop
push
nop
cld
nop
jmp
mov
add
add
scas
push
stc
nop
es
and
das
add
add
nop
cld
nop
jmp
pusha
inc
add
jle
sbb
cmp
nop
es
adc
lods
add
shrb
pop
cld
inc
add
push
shll
in
push
mov
lds
adc
movsb
add
int
hlt
sub
inc
add
add
arpl
mov
pop
inc
add
es
rcrb
xor
pop
stc
sbb
xchg
jle
call
divl
push
xchg
adc
aaa
adc
and
arpl
jb
aad
add
add
sub
xor
and
outsl
mov
adc
jns
jo
inc
repz
inc
lret
push
mov
xchg
or
into
clc
push
icebp
pusha
add
inc
push
lret
call
push
cmp
add
loopne
sub
add
add
repnz
push
mov
mov
rolb
dec
les
scas
add
addb
movb
int
push
add
loope
pop
xchg
adc
dec
test
or
or
add
xchg
fistps
inc
add
push
das
cwtl
cli
sbb
imul
bswap
aas
mov
xlat
rclb
ret
jge
test
jmp
dec
aam
mull
rcll
das
push
push
andl
or
js
lret
rolb
push
cwtl
daa
arpl
not
pop
addb
pop
pop
pusha
add
jp
nop
mov
fcoms
stos
or
shl
adc
cmp
test
add
pusha
add
sbb
movb
movsbl
aam
lret
push
add
push
add
arpl
gs
repnz
inc
add
lret
sarl
out
outsl
addb
jp
push
insb
repnz
dec
jle
mov
sub
add
mov
push
mov
mov
stos
fsubs
outsb
xor
in
fdivl
add
loopne
lcall
sti
addb
jo
and
js
jne
dec
inc
add
inc
cld
dec
add
sbb
mov
int3
mov
cmpsl
push
dec
test
push
ret
imul
add
loopne
cmp
add
sti
adc
leave
cmp
cmp
lea
cmpsb
test
dec
cmp
rcrl
shl
xchg
daa
psrlw
cmp
lahf
cld
jne
int
mov
add
push
sub
clc
xchg
cmc
fisubl
add
fistps
inc
add
popf
lods
jnp
shlb
arpl
mov
in
ret
aad
add
rcll
cmp
addb
mov
push
jp
cmp
pop
or
dec
aas
notl
mov
mov
mov
imulb
std
push
jo
mov
fisubl
sub
push
cmp
add
push
call
sarb
imul
xchg
and
xlat
jbe
add
fdivrl
arpl
ret
rorl
mov
add
inc
cmp
sbb
or
jmp
mov
fsubrs
mov
ror
mov
push
xchg
ret
xor
lods
mov
popf
inc
add
jbe
xchg
inc
mov
push
push
scas
or
xchg
movsl
fbld
jge
scas
xlat
les
pop
xchg
cmpsb
pusha
add
add
mov
std
sbb
mov
add
cmp
addb
rolb
xchg
loope
push
xor
int
mov
jne
mov
enter
sti
and
fistpl
popa
jns
js
jne
fistpll
inc
add
fcmovne
sbb
stos
adc
or
dec
pop
int
pop
pop
mov
addb
sub
mov
cli
addr16
rolb
movsb
int
subl
adc
push
add
movl
xor
icebp
enter
dec
mov
aam
fidivl
bound
addb
mov
mov
out
mov
or
pop
jns
movb
stos
mov
test
pop
das
lock
add
mov
shrb
add
xchg
stos
xchg
xchg
sbb
cmp
stos
loopne
pop
mov
dec
lcall
push
jp
pop
xor
fisttpll
add
loopne
insl
cmc
jno
inc
add
mov
lret
or
loop
inc
outsb
loop
add
repnz
jo
out
in
test
nop
mov
xchg
nop
sbb
mov
mov
push
cmp
cltd
iret
xor
add
into
push
xor
int3
cltd
fisubs
movsb
mov
mov
xlat
sbb
adc
push
add
and
add
hlt
adc
js
mov
jns
jl
inc
add
xor
lods
pop
adc
jbe
lret
cmp
in
jns
je
pop
mov
add
pop
mov
notb
js
mov
sbb
fsubl
add
jecxz
stos
xchg
dec
jmp
mov
push
add
call
iret
ds
add
jecxz
add
fcmovnu
inc
addb
mov
mov
add
add
out
ret
lea
lcall
mov
mov
or
xchg
cwtl
mov
rcr
adc
ljmp
jnp
out
cmp
int3
mov
fbld
into
hlt
jne
add
push
clc
xchg
inc
add
add
xor
mov
loopne
xchg
adc
popf
ds
cmp
js
movq
mov
dec
or
cltd
popa
inc
add
add
sbb
push
rolb
in
ja
push
pop
inc
dec
cld
and
lods
mov
pop
add
jnp
pop
enter
je
and
mov
cltd
mov
imul
or
fldenv
cmp
inc
loope
jle
outsb
push
stos
out
mov
in
sbb
adc
add
nop
in
pop
dec
inc
add
comiss
add
xor
jmp
mov
mov
jle
sbb
pop
std
ss
fcmovnb
add
inc
xlat
sbb
stc
xchg
add
jns
dec
xchg
xchg
cli
mov
mov
repnz
pop
and
push
sbb
cs
aad
aad
rolb
push
dec
outsb
sbb
cmp
add
popf
sbb
out
iret
pop
ret
pop
hlt
insb
mov
jbe
inc
add
leave
sbb
mov
lcall
jecxz
mov
xchg
dec
int
inc
push
jbe
outsl
int
inc
add
loop
push
pop
les
mov
lds
add
daa
shrb
ror
rorb
jge
jne
mov
ror
je
and
add
dec
stos
or
add
mov
shl
or
scas
cmc
push
mov
adc
mov
add
inc
xor
jne
jg
fucomip
addb
dec
gs
pushf
mov
das
out
and
add
add
sub
ret
imul
xchg
jmp
fistpl
loopne
pop
inc
mov
ret
loope
shrb
push
add
dec
imulb
xchg
test
pop
pushf
mov
mov
in
xchg
fistl
inc
jge
add
sbb
push
mov
mov
jb
add
ret
lods
push
gs
add
xor
cwtl
mov
mov
mov
adc
js
xchg
pop
and
xchg
dec
and
js
sbb
xor
movb
icebp
lret
add
push
idivl
roll
rolb
mov
loopne
sbb
adc
sub
xchg
pushl
cmp
sub
cmp
pop
mov
movsl
mov
jo
lods
mov
fisubl
xchg
push
lret
loop,pt
jge
push
mov
add
movb
addb
sub
push
fmull
stos
inc
xchg
and
daa
inc
dec
out
shlb
in
sbb
jno
hlt
fsubrs
inc
add
xchg
fadds
jne
dec
pop
xchg
add
mov
inc
push
addb
in
jnp
add
sar
fadd
lret
adc
mov
in
xchg
xchg
in
dec
mov
add
push
cli
mov
cltd
or
movsb
les
mov
dec
addb
add
dec
push
xchg
ja
cmp
pop
xchg
idivl
sub
push
pop
es
pushf
shll
fxch
sbb
mov
add
clc
iret
adc
lods
cmp
cmp
sti
mov
add
rolb
xor
leave
daa
test
and
sub
dec
inc
mov
jle
sbb
divl
rcrl
lahf
leave
fists
int
xor
ljmp
push
iret
scas
adc
out
push
jae
xchg
pusha
add
es
pop
out
lcall
in
shrb
imul
mov
push
xor
fs
add
cmpsl
inc
and
push
fwait
test
mulb
cmp
dec
ss
mov
outsb
dec
push
jb
pop
jecxz
sub
add
mov
outsl
cmp
lods
arpl
xchg
int
cmpsl
jge
gs
addb
icebp
xchg
loopne
lods
mov
cmp
xchg
or
cmp
add
adc
jnp
xchg
arpl
lock
ret
add
add
and
mov
dec
inc
add
add
mov
mov
adc
push
inc
add
xor
jecxz
add
loopne
pop
pop
imul
mov
adc
mov
jnp
mul
jb
push
pop
and
ret
xchg
sbb
paddusb
adc
add
sbb
pop
hlt
sbb
sbb
sub
add
jle
pop
mov
add
mov
jb
xchg
lock
hlt
dec
sbb
add
aaa
sbb
decl
push
sub
cmp
in
loope
jg
clc
addb
cltd
jae
popa
pop
add
aam
les
or
in
inc
add
ja
test
mov
dec
push
outsb
fnsave
dec
ja
mov
movsl
xchg
bound
add
repz
lret
jmp
loopne
sbb
mov
push
mov
nop
inc
add
mov
lods
jno
movsl
push
push
push
fwait
ja
mov
cs
add
push
nop
pop
inc
cmpsl
sbb
ljmp
jne
mov
jns
rcl
mov
fistl
push
or
or
shll
mov
add
cltd
add
addr16
iret
lock
mov
sbb
cmp
mov
bound
sub
das
cmp
orl
ljmp
es
cmc
rcll
pause
sbb
sbb
push
adc
outsb
lea
ret
inc
pop
les
push
or
scas
jg
cmp
dec
repz
mov
fs
pop
cmpl
sti
push
fldcw
vmovdqa
inc
jg
out
adc
outsb
mov
out
ret
fildll
fwait
in
and
adc
sub
mov
lcall
jae
rolb
xchg
mov
pop
mov
mov
das
idivb
jne
jb
loop
jno
cmpsb
stos
loopne
xor
out
outsl
arpl
push
xchg
sub
mov
loopne
roll
cmpl
icebp
add
icebp
cmp
mov
add
repz
bound
push
xchg
aam
les
shr
pop
ds
sub
leave
and
xor
sub
or
mov
loop
add
dec
js
dec
xchg
lret
pop
rorl
imul
inc
lods
icebp
dec
jecxz
add
jae
aaa
push
pop
cmp
push
pop
cmp
cmp
fisttpl
fsubl
lcall
add
adc
add
jl
stc
xchg
hlt
stos
push
push
out
data16
repnz
xchg
pop
sbb
pop
push
shll
mov
pop
mov
xchg
loope
add
pop
sub
loope
and
dec
jnp
fidivrl
cmp
inc
add
mov
mov
adc
int3
jae
sbb
push
lods
ror
imul
fnstcw
push
push
cli
mov
lret
dec
arpl
adc
add
pop
lods
dec
and
mov
les
jg
fistl
popa
sbb
xchg
pop
jmp
test
jle,pt
std
ss
sahf
push
push
xor
pop
loopne
mov
sbb
gs
pop
mov
insb
cmp
jae
add
sub
iret
sbb
xchg
ret
mov
adc
test
add
ljmp
or
or
jno
push
cwtl
xor
ja
es
stos
xchg
and
loopne
jnp
cmpsl
push
rcll
cld
fmull
jno
adc
fs
push
xchg
mov
jo
add
fcmove
xchg
xchg
adc
sbb
lsl
xor
mov
mov
lea
js
pushf
mov
mov
add
pushl
or
popf
test
dec
push
adc
push
std
cmc
fists
mov
outsb
and
stos
fcomip
jmp
jae
mov
jecxz
inc
aaa
push
xchg
out
fwait
adc
add
dec
rcrb
scas
outsl
addb
or
lahf
cmpsb
loopne
jno
mov
add
mov
fsts
sub
js
push
push
pop
mov
inc
add
leave
mov
or
rol
add
data16
mov
jne
insb
imul
jp
fsub
pop
pop
shr
arpl
out
inc
xchg
mov
add
lcall
xor
fistpll
xor
add
cwtl
add
inc
add
jnp
loop
jmp
scas
xchg
or
or
or
ljmp
lods
loope
pop
mov
addb
push
push
fstpt
rcl
sahf
sbb
data16
pop
int3
sbb
mov
cmp
movsb
popf
lods
insl
jl
push
out
sub
fs
ljmp
sbb
cmp
repnz
jno
mov
insb
sbb
inc
add
adc
popf
bound
push
movsl
inc
add
sub
add
jge
fs
adc
pushf
stc
ja
xchg
sbb
push
cmp
add
pop
ljmp
mov
add
cld
in
lea
ja
or
mov
mov
cltd
mov
pop
dec
mov
xchg
scas
scas
dec
hlt
pushf
lds
mov
adc
jb
or
mov
sub
pop
addb
fnstsw
jg
add
xchg
daa
les
mov
pop
push
pop
xchg
mov
xchg
cmp
inc
ret
mov
or
jmp
bound
test
adc
add
push
stc
idivl
add
addb
add
push
mov
idiv
xor
sbb
adc
pop
add
dec
pop
mov
push
add
int
dec
cmp
cwtl
call
add
dec
cmp
sub
add
mov
sti
dec
loope
jno
pop
hlt
pop
iret
das
xor
cld
imulb
sbb
pop
popa
xchg
pop
push
xor
std
bound
loopne
int3
mov
lea
scas
mov
and
out
jl
das
push
jne
cmp
data16
add
jae
dec
call
inc
add
das
xor
sub
xchg
les
xchg
pusha
add
adc
loope
outsb
int3
rolb
add
xor
test
jle
sub
mov
daa
xchg
xchg
clc
lea
inc
add
fbld
jmp
add
rolb
fs
lds
mov
fwait
lods
cs
push
inc
dec
subl
jo
cld
mov
clc
inc
jmp
mov
pslld
jns
les
push
sahf
fsubs
cmp
stos
bound
sbb
popa
jg
negl
sbb
aas
inc
and
out
push
pop
mov
pop
leave
push
xchg
mov
div
dec
push
mov
mov
jbe
mov
pop
arpl
jae
call
and
mov
push
cmc
pop
in
aad
lcall
rolb
mov
out
and
sbb
pop
and
in
sti
cmpsl
pop
in
jae
sahf
push
xor
jg
and
mov
stos
sub
dec
dec
sub
dec
add
add
lret
rolb
movb
aam
xor
ljmp
add
enter
jge
pop
in
inc
subl
arpl
pop
stos
mov
addb
and
cmpsl
fidivl
les
stos
mov
pop
mov
cmpsl
sub
addb
mov
stc
or
es
mov
test
ljmp
pusha
add
int3
das
and
and
jns
scas
pop
fwait
or
test
roll
jo
int
or
ret
into
bnd
int
mov
icebp
lods
lret
sub
push
clc
int
xlat
jo
or
add
xlat
jo
xor
cld
cmp
lea
rolb
jb
and
cli
jmp
mov
enter
add
addb
fcmovnb
add
ret
mov
movb
js
add
daa
lret
sti
scas
dec
cmpsl
cli
push
daa
mov
cmpsb
iret
in
add
push
or
test
mov
add
push
push
inc
add
mov
adc
rolb
add
fwait
xchg
fisttpl
cli
ja
test
push
adc
add
sbb
std
inc
jne
bound
jo
or
mov
das
or
mov
mov
sahf
js
add
jecxz
add
and
mov
mov
sbb
add
dec
in
push
jo
and
push
aas
stos
mov
push
push
movsb
into
jbe
pop
xchg
and
nop
mov
les
mov
dec
inc
scas
xor
aad
rolb
test
or
or
adc
repz
icebp
xor
ficoml
pop
mov
rolb
pop
inc
add
popf
in
sbb
dec
fistpl
mov
or
movsl
xor
das
push
in
jnp
cli
paddusw
movsl
mov
sbb
and
out
clc
ret
lret
incl
mov
pop
and
mov
add
lock
outsb
adc
and
jl
jnp
jb
decl
sbb
add
popf
leave
sbb
dec
insl
out
ja
lcall
or
add
loope
xor
jle
test
repz
mov
fstl
push
lds
adc
xor
xchg
jecxz
aam
xchg
lcall
rolb
aam
fcomps
out
cltd
jle
nop
dec
lods
cmc
pop
cmc
dec
mov
hlt
mov
inc
dec
jo
addb
sub
int3
pop
sbb
lock
xorl
or
cmp
test
xchg
add
or
dec
add
andl
mov
add
loope
in
xor
mov
cmpsl
add
or
mov
sbb
adcl
add
jp
test
pop
mov
loopne
push
adc
fdivl
int3
insl
mov
mov
inc
sahf
mov
jl
cld
out
addb
in
jbe
sub
inc
add
pop
inc
jns
adc
lods
jmp
jmp
imul
jae
mov
ss
cmp
mov
inc
add
mov
lret
dec
mov
lock
xchg
push
dec
rolb
lock
add
pop
pop
loop
icebp
aad
add
pushf
mov
gs
push
addr16
add
mov
add
or
jnp
add
sbb
idiv
popf
scas
mov
and
adc
in
hlt
lock
xchg
sub
addb
mov
cmp
es
jl
add
xor
adc
and
cmpsl
and
imul
sub
rcrb
mov
jns
mov
xchg
int3
daa
outsl
jge
push
add
pop
stos
dec
aaa
flds
mov
add
insb
cmc
mov
add
fs
cmp
push
add
push
add
mov
mov
mov
out
scas
enter
iret
mov
add
inc
add
add
fucompp
mov
add
add
les
sbb
orl
sbb
jno
jno
mov
es
addb
add
mov
inc
add
push
add
iret
les
sbb
test
jl
jecxz
adc
or
push
mov
pop
fisubrl
out
mov
test
sbb
mov
add
mov
mov
jns
mov
inc
inc
outsb
flds
into
sbb
adc
pop
push
shrl
push
popf
add
and
pop
inc
add
roll
das
adc
aad
pop
and
iret
mov
insb
xor
xor
enter
dec
xchg
cwtl
stos
out
inc
test
shlb
int3
sbb
loope
mov
imul
jmp
adc
lret
insb
add
cmpl
out
cmc
push
and
sub
sub
dec
fcomps
ss
mov
decb
in
mov
js
int3
div
les
lods
jno
adc
adc
add
int
call
xchg
shl
mov
inc
add
xchg
mov
aam
adc
push
pop
push
adc
das
pop
xor
or
iret
imul
dec
mov
push
icebp
sub
decl
scas
popf
cmc
fisttpl
xor
add
sbb
mov
add
push
xor
rcrl
mov
das
xchg
push
ret
movsb
jmp
cld
mov
icebp
leave
dec
lods
mov
repz
push
push
stc
push
fldcw
inc
add
inc
aaa
dec
xchg
rol
add
sbb
mov
sbb
mov
into
sub
xor
dec
mov
cwtl
push
addb
test
push
mov
lods
push
or
pop
cmc
stc
xor
mov
sbb
sbb
dec
sub
pop
out
ja
std
xor
je
add
add
xor
lock
test
xchg
addr16
addr16
in
push
rolb
popa
jbe
jns
imul
sbb
or
pop
sbb
xchg
mov
jno
popa
cmpsl
lret
add
movb
stc
xlat
inc
add
jae
fwait
lahf
das
sbb
cwtl
mov
pop
push
push
add
mov
lods
cmp
sbb
stc
addb
call
adc
push
or
mov
jge
icebp
and
addb
adc
repnz
mov
mov
sbb
enter
add
add
mov
cld
cmp
lahf
dec
push
mov
jle
or
scas
xor
push
rclb
add
ficompl
les
lret
cmpsb
inc
dec
mov
add
or
adc
clc
and
addb
mov
pop
addb
pop
repnz
or
sub
shlb
add
test
add
push
add
out
add
xchg
mov
cmp
adc
pop
fbstp
fwait
je
pusha
add
sub
jbe
sbbl
dec
xchg
cltd
inc
and
add
insl
int
clc
lcall
inc
xlat
outsl
adc
cmp
add
mov
mov
and
call
adc
push
mov
sub
cli
repz
cmp
jb
jl
mov
leave
and
idivb
inc
inc
shll
add
lods
and
sahf
mov
add
cmc
cmova
mov
dec
outsl
xchg
inc
add
add
add
fiaddl
xchg
das
repz
cld
push
add
ror
movb
add
cmp
add
jmp
mov
add
jno
push
inc
sub
sbb
xor
mov
fs
mov
push
adc
fstpt
mov
in
push
cmp
test
lock
rolb
inc
and
mov
jl
movb
jb
mov
mov
out
test
rol
or
fcmovu
aas
das
jns
mov
stos
pop
out
lret
dec
inc
movb
icebp
repz
xor
lds
add
inc
add
xor
mov
push
out
repnz
pop
popa
jnp
dec
pmulhw
sarl
loop
cld
jmp
je
fs
je
pop
cmc
test
into
rorb
mov
jle
sub
nop
or
mov
lds
push
jnp
and
out
xor
dec
pop
addr16
xchg
rol
dec
fcmovnu
outsl
mov
mov
int3
inc
add
in
enter
pop
jbe
mov
jg
addb
mov
subl
dec
push
mov
inc
add
xor
add
and
js
or
cld
cld
inc
sbb
sbb
cs
lret
or
adc
sub
and
fiadds
scas
sti
dec
mov
and
mov
push
ss
test
pop
stos
stc
cwtl
addb
add
jp
push
cmp
push
or
lcall
shrb
add
mov
cs
popa
fidivrl
arpl
ret
jnp
sub
jnp
adc
jno
enter
mov
inc
add
xchg
mov
ret
int3
xchg
mov
push
cld
bound
sub
jmp
lea
in
js
mov
sbb
fldenv
jb
jae
mov
movb
lds
pusha
add
mov
movsl
les
les
mov
jecxz
add
push
adc
popf
and
mov
cs
xor
sarl
pop
es
add
add
xchg
scas
mov
jle
sub
push
int
xchg
test
push
jecxz
mov
mov
enter
xchg
xchg
lahf
fucom
cwtl
cmp
out
mov
loop
dec
lock
jbe
add
adc
cltd
jge
jle
jne
or
aad
hlt
push
repz
sub
arpl
les
and
jle
cmp
cli
insb
outsb
arpl
push
dec
and
xor
insl
enter
sub
cmp
in
push
fadd
add
int3
xor
jmp
jp
mov
fstps
les
cwtl
ds
sub
std
sbb
inc
add
push
add
idivb
add
incl
in
lods
sbb
add
mov
add
loop
add
push
cli
sub
adc
add
test
dec
clc
lcall
sbb
push
sub
popa
xchg
shl
cmpsl
lcall
add
push
inc
add
mov
sbb
jne
loop
je
add
jnp
dec
inc
add
fs
xchg
dec
push
notl
call
mov
ret
dec
sub
xchg
jno
sub
scas
or
xchg
fimull
add
add
push
ja
and
outsl
test
sub
fwait
sub
cmp
shrl
std
mov
inc
xchg
mov
xor
mov
pop
sub
cmp
add
add
loope
or
xchg
out
adc
push
sub
fbstp
popa
insb
and
inc
add
xchg
ds
in
ret
xor
xchg
lcall
adc
add
aad
mov
in
and
mov
inc
pop
sbb
sbb
gs
shlb
repnz
icebp
in
xchg
test
rolb
and
mov
push
push
mov
xchg
ja
shll
add
push
inc
add
iret
out
adc
add
test
nop
sbb
add
jb
mov
jmp
add
ds
movsl
imulb
insb
addr16
or
jb
jnp
mov
add
mov
adc
movsb
xor
cmp
xor
sub
in
sbb
add
mov
add
pop
jmp
xchg
adc
lcall
mov
add
pop
add
or
cmp
add
es
cli
lret
daa
push
cmp
mov
and
cmpsb
idivl
jb
mov
mov
fs
or
push
js
cmpsl
fldcw
std
jecxz
std
pop
mov
rcl
rcll
icebp
data16
arpl
loope
lods
or
add
les
and
cmp
xor
push
in
data16
cmp
lret
push
loope
fidivrs
add
pop
push
pusha
add
mov
inc
add
addr16
add
rolb
push
dec
into
jne
iret
std
mov
pop
sbb
es
lods
fsubrl
sbb
mov
mov
inc
xchg
cmpl
leave
test
xor
gs
lahf
dec
or
out
aas
push
and
sub
or
shl
xchg
rolb
shl
dec
mov
add
addb
add
cmc
popa
scas
cwtl
sbb
add
add
enter
jbe
in
into
lods
xor
push
cmpsb
ss
jae
and
sbb
shll
and
xchg
enter
sbb
or
pop
jae
lcall
lret
push
mov
mov
movsl
aas
jle
popa
setle
pop
jne
imul
add
dec
les
sbb
dec
sbb
add
add
mov
nop
inc
add
les
push
pop
add
push
push
sbb
add
ja
dec
xor
addb
inc
add
filds
stos
addr16
test
xorl
push
xor
adc
repz
add
ret
pop
xchg
in
or
sbb
xchg
sbb
jecxz
out
and
lcall
xchg
and
mov
sahf
je
in
bound
inc
leave
bound
adc
lahf
dec
sub
or
pop
stos
sbb
jle
add
mov
mov
add
xchg
shll
lret
das
sti
push
push
mov
jb
xor
or
add
inc
add
ss
loop
fldcw
fsubr
cmc
int3
sbb
xor
cmp
aam
stos
mov
ficoml
bnd
xchg
xor
and
addb
in
imul
add
inc
add
add
dec
xor
data16
cld
cmp
adc
das
push
mov
outsb
jmp
ret
dec
push
popa
movl
pop
mov
int3
rcll
or
fiadds
sahf
mov
jg
add
nop
out
add
dec
loopne
push
outsl
subl
cmc
dec
push
or
aaa
xor
mov
sar
hlt
mov
iret
jg
cmp
mov
lds
add
aam
rcrl
pushf
lret
dec
popa
xor
jbe
js
imul
rclb
add
adc
or
mov
into
push
shr
bound
sub
or
icebp
inc
add
add
xlat
xor
add
aam
add
movb
insb
scas
mov
mov
sub
ljmp
xchg
ret
push
sti
dec
cmp
mov
add
cli
mov
stos
cmp
jge
fmull
es
xchg
push
insb
out
rcrl
mov
into
push
lea
mov
xor
and
sub
pusha
add
mov
dec
mov
dec
mov
jle
frstor
and
cmp
daa
sub
mov
or
aam
test
adc
popa
lods
aaa
push
jb
adc
push
cmpsb
xchg
into
test
add
xchg
stc
push
mov
add
add
in
dec
js
cli
add
add
mov
call
sbb
xchg
cmp
cmpsl
pop
mov
leave
push
or
loopne
sbb
push
insb
shrl
cwtl
or
inc
add
iret
push
sub
add
mov
xchg
insb
dec
xchg
les
mov
ds
add
movl
sbb
paddq
outsl
sub
mov
and
ds
aaa
lods
cmpsb
jecxz
adc
add
popf
mov
add
sub
fdivp
push
xchg
sti
cmpsl
lods
rorl
cmc
ja
sbb
sti
sub
mov
jmp
in
ret
xchg
or
mov
sbb
mov
push
cmc
lods
jae
fisubrl
inc
test
insb
push
xchg
lods
mov
sub
add
pop
call
push
mov
xchg
and
fstpt
mov
movsb
sbb
movb
lods
pushf
mov
lea
or
je
imul
push
scas
fists
movsb
les
std
into
xchg
push
movb
xor
stc
fildll
jl
add
inc
add
add
sbb
push
or
xor
push
wrmsr
xchg
cmpsb
mov
mov
jbe
int3
movb
add
add
push
or
pop
mov
adc
movsl
pop
jge
xchg
or
inc
pop
mov
inc
add
and
add
in
adc
mov
or
ss
jge
mov
add
push
sub
sbb
out
cs
push
movsl
jnp
mov
sub
xchg
mov
xchg
add
fisubrl
ret
inc
add
les
adc
inc
jge
iret
add
addb
jp
add
es
lret
rclb
cli
sbb
nop
jne
test
sbb
inc
stc
fdivl
or
les
mov
loope
repnz
lods
mov
testl
xchg
imul
sbb
xchg
push
push
jbe
lea
loope
add
xor
out
sbb
add
nop
sbb
xchg
sub
or
repz
lret
out
dec
mov
sub
push
sti
ret
push
idivb
lret
inc
dec
add
and
dec
adc
mov
pushf
gs
aad
inc
push
add
outsl
shlb
popw
icebp
imul
loope
mov
dec
push
add
rolb
push
int
stos
push
les
pop
pop
sub
and
push
mov
mov
push
add
push
int
into
xor
mov
cmpsl
jae
cli
call
xor
inc
aam
pop
sub
fs
das
ret
mov
lea
adc
js
add
pop
adc
jg
jae
negb
jno
push
add
icebp
xchg
sub
fnstcw
pushf
addr16
aaa
imul
dec
adc
daa
imul
rcl
aas
mov
stc
push
mov
add
xchg
ljmp
arpl
pop
in
mov
xor
sbb
jb
add
enter
rcr
sub
movsb
and
mov
pop
inc
add
push
sahf
or
mov
test
mulb
mov
cld
jge
jle
lahf
cmp
out
push
lcall
and
scas
xor
sbb
adc
xlat
mov
daa
call
shll
fs
jo
add
mov
xor
add
movsl
jg
imul
int
movsl
imul
sub
add
or
ret
inc
add
aaa
out
pop
pop
movsl
push
hlt
sub
dec
shr
xor
inc
add
and
and
daa
or
rolb
dec
push
test
das
xor
es
sbb
ret
fldenv
div
cld
inc
add
lock
loopne
sub
and
push
push
scas
and
mov
mov
mov
add
jo
xor
out
cmp
add
pop
pop
popa
mov
lret
adc
pop
aad
inc
pop
pop
ja
enter
into
aam
ficoml
cltd
adc
pop
loopne
jmp
push
add
dec
jl
mov
test
add
push
ja
sub
xchg
mov
cmp
jno
add
mov
ret
stos
dec
insb
dec
lds
mov
mov
mov
fcoms
icebp
cmp
pop
pop
fisubrs
jge
ret
fucom
add
xchg
loopne
mov
fsubs
push
aad
jno
int
push
lahf
loope
push
scas
cmp
cwtl
dec
insl
xor
or
add
push
dec
add
cmp
jns
jns
cmp
adc
cmp
lods
adc
out
cmp
or
addb
int3
ljmp
into
fists
loop
jae
sbb
add
push
inc
add
add
pop
xchg
or
rolb
fidivrs
mov
fldenv
push
xchg
pop
jns
addb
or
mov
mov
cmp
xor
std
jo
cmpsb
pop
xchg
push
fsts
mov
jecxz
lock
pop
mov
leave
mov
xor
cmp
mov
xor
sub
add
cmp
xchg
es
or
sbb
mov
mov
cmp
or
out
xlat
ja
xchg
ja
mov
out
cmpl
cli
pop
ds
popf
addb
mov
jae
hlt
or
in
out
sbb
sbb
je
pop
loop
jmp
popa
ljmp
mov
sbb
jbe
es
aam
add
fistl
jge
and
push
adc
add
sbb
bound
sbb
xchg
cmpl
shrl
shufps
add
nop
lea
incb
pop
int3
add
pusha
add
sahf
inc
cmp
dec
hlt
cli
mov
out
mov
mov
subl
add
xor
insl
shll
pop
in
int3
repz
jmp
push
mov
add
xchg
mov
or
psrad
in
out
jbe
arpl
mov
ret
rcr
inc
xlat
in
cmpsb
test
enter
pop
cmp
add
imull
out
and
pop
lods
push
mov
dec
mov
divl
sub
add
xchg
ds
stos
add
rcr
sub
int3
push
pop
mov
test
icebp
xchg
cmp
pop
mov
sub
push
icebp
outsb
insb
sbb
cmp
loop
xchg
xlat
or
push
pusha
add
aaa
aaa
ret
stc
cmp
scas
fsubp
xchg
movsb
vcmpss
imul
mulb
in
add
mov
iret
lea
sub
cltd
fwait
mov
mov
int3
fcoms
std
orl
add
fcomip
cmpsb
inc
and
cmp
push
add
push
addb
fnsave
mov
push
pop
and
pop
scas
jbe
jno
add
add
int
jno
and
push
pop
push
lahf
xor
add
ss
pop
jb
pop
daa
jns
add
cmpsl
lret
push
add
int
outsb
sbb
xchg
cmp
call
test
mov
inc
cmp
xchg
cli
je
add
mov
dec
jmp
push
shrb
addb
mov
add
sbb
rcll
popf
pop
cmpsl
jmp
and
ja
popa
out
xor
addb
xor
jb
and
add
sub
jge
daa
enter
add
push
mov
add
cmp
pop
adc
jecxz
lcall
add
jl
add
adc
scas
mov
xor
inc
add
call
ds
addr16
enter
lods
shrb
js
adc
pop
lcall
push
in
xor
xlat
lock
sub
mov
pop
das
push
call
push
cwtl
adc
sti
ret
sbb
cmp
add
scas
ss
and
or
and
shrl
dec
clc
and
bound
mov
push
mov
loope
mov
dec
testl
jo
sub
push
ja
mov
popf
jae,pt
and
and
dec
pop
rolb
call
gs
clc
sub
or
add
lods
stc
pop
rclb
dec
nop
ljmp
sti
sub
xlat
jo
mov
into
pop
ret
mov
mov
mov
add
cltd
cmp
call
sub
jno
std
stos
sub
pushl
mov
test
and
add
dec
nop
jge
jg
jge
and
mov
add
lods
mov
test
add
scas
filds
sti
mov
in
and
pop
outsb
add
movsb
in
frstor
add
add
fdivl
ljmp
pop
popf
pop
mov
jbe
insl
dec
mov
addb
add
inc
lock
test
ficomps
es
jge
inc
sub
add
pushl
xlat
adc
rep
sarl
inc
fdivrs
outsl
push
pop
and
push
add
stos
pop
xchg
sti
addl
cmp
xchg
pop
pop
lods
inc
mov
push
cmp
mov
iret
lds
scas
pop
fdiv
cwtl
fistl
sbbl
mov
add
aaa
sbb
cltd
inc
add
sub
movsl
ficomps
andps
mov
bswap
pop
mov
add
mov
test
lret
dec
mov
mov
sub
cmp
add
fwait
aad
ret
inc
add
je
mov
add
pop
mov
shl
adc
int3
mov
cltd
mov
add
cwtl
xor
fstl
out
into
xor
sub
and
and
jle
aaa
xchg
dec
les
testl
cwtl
test
xchg
cmp
test
mov
cmp
push
ret
insl
scas
cmp
pop
xchg
sbb
popf
lea
aas
scas
das
mov
add
rcrb
xor
js
pushf
sti
push
add
popf
repnz
test
repz
add
inc
pusha
add
jbe
inc
jno
xchg
cmp
addr16
xchg
lcall
or
dec
jmp
mov
push
pusha
add
ret
cmp
clc
push
scas
fisubl
jle
mov
push
aad
repnz
dec
stc
mov
sahf
outsb
flds
rcll
into
addb
lock
dec
popa
add
push
ror
shrl
mov
jns
jecxz
fwait
ja
sbb
mov
jbe
xchg
cmp
xchg
dec
adc
pop
xor
rcll
repz
mov
stos
rolb
out
dec
push
repz
add
cld
fs
jo
fisttpll
popl
cmp
das
add
hlt
subl
adcl
cmpsl
jecxz
sub
add
sbb
leave
push
adc
jae
cmp
enter
in
dec
xchg
test
shll
add
sbb
movsbl
repz
sbb
add
add
jmp
sbb
jl
inc
sbb
inc
scas
sbb
scas
stos
cmp
lods
sahf
cmp
or
dec
iret
fistpl
mov
mov
cmp
cwtl
sbb
dec
ss
lahf
fcmovnu
pop
adc
adc
lcall
stos
mov
adc
mov
add
cmp
jl
mov
mov
sub
in
push
mov
in
cwtl
lea
mov
add
movsl
nop
loop
mov
repz
mov
iret
imul
popf
add
popa
pop
pop
shll
cli
and
jae
aad
test
push
mov
xchg
xchg
es
pop
sub
outsb
xchg
imul
movb
add
test
add
pop
or
popf
pop
mov
mov
das
in
mov
xchg
icebp
sbb
push
add
mov
cmp
xchg
out
pop
test
lea
add
ljmp
into
test
imul
jb
ret
cmp
dec
cmpsl
dec
out
int
pop
inc
add
sub
jbe
data16
imul
loopne
test
jbe
sbb
mov
outsb
scas
shll
movb
pusha
add
inc
add
repz
or
inc
cmc
lahf
mov
and
push
out
dec
inc
add
imul
ficompl
call
stos
add
mov
push
push
lcall
jle
out
mov
xchg
adc
cmpsb
pop
pop
cld
jo
sub
rcrl
push
xchg
add
add
jle
mov
and
sbb
inc
fs
imul
mov
add
movsb
dec
jg
lds
aad
lds
cwtl
dec
fsubrl
jmp
mov
test
and
insb
lret
aad
add
in
ret
cwtl
cmpsl
mov
pop
aad
frstor
ljmp
xor
dec
aad
jmp
add
pusha
add
cmp
add
jo
jp
mov
aad
xchg
push
pusha
add
dec
sbb
and
in
add
cmp
jnp
add
dec
fsubs
lods
leave
fcomps
in
pop
inc
pop
adc
push
test
cmp
mov
fistpll
out
inc
shrl
bound
push
sub
lock
sarl
pop
xor
add
cmp
inc
lcall
xchg
cmp
daa
stc
stos
mov
mov
scas
mov
movsb
push
adc
jo
negb
mov
test
int
add
lds
repz
add
pop
in
push
pop
mov
movb
pusha
add
cld
movsl
subl
mov
loope
add
fiadds
hlt
std
ret
dec
xchg
inc
fisubrl
push
scas
adc
popa
out
push
sbb
xlat
add
repz
and
lea
jp
outsl
xor
or
and
clc
sbb
mov
loop
lret
dec
imul
pop
out
les
inc
add
fidivrs
sbb
jp
loop
sbb
dec
fmuls
into
mov
hlt
cltd
test
mov
add
jl,pn
jl
jns
out
in
mov
adc
nop
iret
pop
popf
gs
jbe
aaa
sbb
enter
gs
cmp
add
sti
adc
cmc
dec
mov
fs
xor
ljmp
mov
push
add
cmpsl
inc
add
mov
pop
or
xchg
adc
das
dec
js
mov
add
xchg
movsl
add
dec
cltd
std
push
enter
test
stos
inc
sbb
sar
mov
xchg
rcrb
je
andl
addb
dec
bound
sti
jle
add
sub
lock
out
xor
adc
movb
pop
test
je
xchg
sub
stos
test
cltd
movb
push
jl
shll
inc
mov
add
mov
inc
add
stos
cmp
push
mov
add
add
jge
outsb
push
insb
and
push
jmp
add
ss
aam
mov
icebp
hlt
jae,pt
push
add
cmpsb
add
call
and
loope
push
aas
mov
in
lods
das
cmp
testl
push
xchg
ss
pop
add
sbb
inc
add
add
dec
add
mov
and
mov
bound
les
into
popa
add
adc
test
dec
dec
es
mov
lea
pusha
add
aam
jbe
movb
sbb
dec
or
dec
sub
into
and
in
inc
inc
add
jmp
in
dec
and
sti
mov
out
jbe
sbb
jnp,pt
lret
jp
or
push
xor
add
ljmp
aad
das
xchg
aaa
xor
add
jno
stos
or
inc
add
cmp
idiv
movb
mov
mov
lods
and
inc
add
push
add
cld
push
push
pushf
xchg
ja
sbb
pop
mov
add
mov
dec
mov
push
pushf
nop
outsl
dec
mov
ficoms
aaa
cmp
xchg
pop
arpl
cmc
or
stc
out
popf
push
add
aam
les
lea
cmpsb
popa
icebp
pmaddwd
push
pop
jecxz
jmp
call
fisttpl
push
inc
jg
add
lods
adc
mov
rolb
mov
cmp
add
cs
adc
add
add
pop
addb
add
jbe
mov
pop
cmp
dec
in
sbb
clc
cld
push
pop
pop
sub
popf
xor
movsl
les
or
pop
stos
cmc
add
mov
dec
mov
mov
push
jle
cmp
adc
es
jmp
cmc
mov
add
insw
jb
inc
add
in
stos
loopne
or
das
stos
data16
ficompl
xchg
mov
mov
push
mov
rorl
inc
add
fs
ss
call
dec
cmp
faddl
fnstsw
sub
pop
mov
push
repnz
shll
sub
test
dec
aam
jmp
inc
add
insb
lea
lret
and
mov
lcall
test
icebp
dec
jl
dec
add
lahf
mov
cmp
xchg
jne
fsubrs
aas
rolb
negb
ret
add
mov
cld
pop
fisubrl
mov
lock
pop
adc
stos
adc
add
fidivrs
notb
xchg
pop
mulb
pop
in
or
imul
push
movsl
ljmp
add
lods
popf
fdivr
mov
test
mov
sub
inc
sarl
inc
loope
outsb
mov
jnp
gs
dec
inc
add
mov
adc
mov
add
repnz
fldt
mov
sbb
jl
add
fadds
pop
cmp
jp
sub
je
or
pop
inc
add
add
sub
and
push
popa
call
out
out
and
jnp
inc
cmp
pop
out
sub
mov
rolb
lock
jl
leave
aaa
rcrl
mov
mov
out
pop
repnz
cmpsl
jns
les
imul
add
sbb
pushf
or
jo
sub
xor
daa
jp
pop
pop
mov
sbb
add
cmpsl
pop
ficompl
out
and
lea
ret
adc
hlt
jle
sub
fxtract
mov
jecxz
sbb
lahf
cli
xchg
gs
int
push
mov
int
in
dec
add
xchg
mov
fwait
ds
push
cwtl
mov
inc
repnz
push
dec
push
inc
add
movsb
and
and
inc
add
les
addr16
and
pop
std
xchg
rcl
sbb
je
into
mov
and
xchg
sbb
jp
adc
and
popa
xchg
pop
adc
movb
cmp
arpl
std
fs
jns
add
int
add
rorl
pop
test
lcall
cmp
les
test
out
imul
frstor
push
ds
sbb
ret
add
adc
into
xchg
movsl
insl
inc
sub
or
sub
sub
add
push
or
push
adc
mov
addb
mov
mov
fbstp
mov
ljmp
and
loopne
addb
cld
sub
hlt
popf
jb
cmpsb
ja
mov
dec
add
or
dec
dec
mov
inc
lret
les
loope
jle
das
iret
xchg
loop
dec
out
notl
insl
imul
sub
add
xor
mov
fsts
adc
mov
add
arpl
add
cmpsb
dec
mov
mov
push
mov
cwtl
je
lret
gs
mov
mov
hlt
push
inc
das
jb
mov
hlt
and
mov
add
stos
mov
xchg
mov
jb
add
loope
mov
rorl
jl
divl
mov
lock
fwait
sti
inc
xchg
fistpl
xchg
sbb
iret
push
movb
pmaxub
lds
and
xlat
fldl
imul
add
int3
mov
xchg
out
out
mov
es
mov
icebp
sub
fimull
pop
iret
lea
add
jno
lods
pop
add
cmp
jecxz
stc
frstor
cmpsb
test
add
jle
stos
fs
cmp
movb
shlb
xor
mov
ret
imul
adc
push
iret
test
ret
scas
cmp
mov
add
jecxz
push
loope
xor
cmpl
das
xchg
jmp
or
xchg
insl
mov
sbb
ss
rolb
sub
adc
aaa
std
xchg
roll
add
add
add
xchg
xor
shlb
jnp
iret
test
push
mov
rolb
add
add
xor
xchg
rcrl
stc
dec
sbb
sub
jo
mov
push
mov
add
cli
xchg
mov
ljmp
inc
add
sub
push
repnz
dec
mov
mov
add
cwtl
popf
push
push
dec
sbb
fisubs
pop
lods
xor
inc
add
xor
mov
add
std
push
shrl
fidivrl
stc
aaa
lret
xchg
outsl
and
sbb
aad
leave
sbb
fcomps
jno
xchg
adc
jge
adc
rorb
flds
or
add
call
mov
jg
mov
add
out
insl
adc
addb
pop
lcall
popa
push
xor
pop
xor
add
clc
outsl
xchg
test
adc
cmp
sbb
add
js
mov
add
fdivl
dec
call
leave
stc
add
push
cli
test
cs
jns
add
dec
mov
fdivr
xchg
adc
imul
add
seto
out
cs
std
xchg
mov
mov
std
push
pop
outsl
pushf
add
dec
push
les
fisubs
cs
mov
push
add
scas
sbb
in
ret
push
jne
sbb
outsl
retw
xor
add
xchg
push
jnp
push
inc
fcomp
mov
xor
mov
mov
ds
pop
xchg
mull
dec
adc
stc
loopne
push
add
aaa
jne
pop
mov
pop
and
movsb
and
cmp
jge
nop
push
add
cmp
fwait
jo
lret
sbb
jge
sti
ja
sub
outsl
add
push
add
jp
push
and
dec
sbb
loope
mov
cmpsb
cmp
movsl
lcall
nop
ljmp
add
out
dec
mov
cld
sub
xchg
and
stc
int
xchg
movsl
jecxz
push
inc
inc
add
jg
popf
xor
in
add
movb
adc
mov
rorb
inc
add
adc
push
into
ret
mov
push
jl
add
push
add
mov
scas
jo
fcomps
insl
pop
je
adc
leave
lock
shll
test
ret
push
imul
push
mov
jne
pushf
xchg
adc
mov
or
popf
add
inc
sub
xor
js
out
pushf
aas
dec
idivl
pop
xchg
daa
add
dec
dec
or
repnz
or
cltd
int3
in
repnz
rcrb
std
fs
mov
and
or
dec
add
lret
sbb
and
push
jno
inc
cmc
cld
aaa
imul
insb
arpl
jl
fdivrl
push
sbb
popf
out
push
gs
or
mov
aam
add
js
xchg
push
push
imul
jge
add
cmpsb
pop
mov
push
push
add
or
js
adc
push
popa
adc
adc
movsb
push
iret
mov
in
pop
nop
mov
or
mov
mov
xchg
and
xor
mov
pop
lcall
ds
fdivs
mov
fcompl
jae
dec
test
jle
mov
popa
xor
ficoms
out
xchg
and
jb
cld
test
cwtl
leave
lret
and
cmp
and
ficomps
inc
cmp
and
add
xor
mov
lret
cmpsl
xchg
xchg
lods
movsb
loopne
mov
jno
gs
mov
adc
mov
jp
mov
sbb
push
shll
aad
imull
lcall
or
or
and
test
dec
out
add
cmp
rcrl
dec
sub
mov
sbb
jge
inc
pop
mov
jne
jecxz
js
xor
les
daa
fdivrs
fistpll
jp
mov
cmp
leave
rolb
fs
dec
test
add
mov
cmp
mov
in
mov
jae
mov
repz
popa
inc
icebp
jns
iret
add
cld
jb
jecxz
add
cmp
adc
cmp
add
add
xor
and
mov
xor
add
cmpsb
pop
push
and
xchg
xchg
jno
in
into
loope
aas
jb
ja
dec
xor
lods
mov
sbb
add
jl
pop
mov
mov
in
sbb
mov
mov
repnz
out
pop
jecxz
or
cmc
push
lock
pop
sbb
add
mov
inc
add
add
push
cs
add
pop
or
out
scas
xchg
orl
inc
lcall
mov
mov
xlat
out
into
pop
ds
or
lret
loopne
mov
movsb
cmp
pop
rolb
add
out
fistps
add
out
hlt
jne
add
lea
sub
stos
cli
lods
dec
test
aas
jne
and
test
out
inc
imul
sbb
sub
insb
xorl
stos
movsb
in
out
add
out
cld
mov
loope
stos
xchg
stos
and
in
push
xchg
inc
std
cld
test
sbb
push
jns
pop
arpl
sbb
fadds
push
mov
cmpsl
lea
inc
add
push
movsb
push
add
aas
mov
sbb
pop
imul
gs
cmp
js
stos
xor
xor
outsb
xor
pop
je
insb
cmpsl
sub
xchg
mov
lods
fidivrs
add
into
insb
dec
insl
mov
bnd
loopne
and
add
add
mov
mov
push
loopne
mov
fdivrl
outsl
aaa
movsb
xchg
in
imul
push
push
dec
push
dec
mov
dec
in
cmp
roll
add
jb
lds
pop
push
and
loopne
add
jmp
fldenv
out
xchg
jbe
addr16
stc
xchg
js
cmp
pop
push
add
out
xor
adc
sbb
lock
or
cld
pandn
test
push
sub
xchg
or
jecxz
out
fidivrl
cmp
add
jmp
iret
mov
ficoml
sbb
or
lock
loope
xchg
outsl
aam
mov
inc
mov
or
adc
dec
pop
jae
and
push
push
or
sarb
fnstcw
int
xchg
xchg
jns
jge
mov
adc
cmc
fwait
aam
add
xor
xor
add
or
lods
nop
mov
inc
add
rolb
imul
sbb
rolb
ror
movb
insb
and
aas
or
xchg
insb
push
stc
outsl
aad
sub
daa
test
scas
test
loopne
jae
ret
inc
lods
push
dec
mov
mov
mov
ds
aam
je
fucomp
divps
and
cmp
sbb
sbb
or
clc
scas
fisttpll
mov
pop
call
jne
test
rcrl
jo
adc
add
push
push
push
sub
movb
insl
outsb
push
filds
xchg
pop
adc
xchg
and
push
out
cltd
int3
cli
ret
stc
mov
test
jne
pop
data16
add
rolb
ss
adc
mov
jns
add
repnz
mov
sbb
testl
mov
dec
loopne
mov
cmp
and
jns
cmpsb
cmp
jg
and
jbe
jecxz
cmp
pushf
mov
adc
test
sbb
leave
inc
lock
out
mov
pop
and
mov
pop
ds
pop
das
mov
sbb
les
out
into
inc
add
ja
pop
jb
jmp
cli
mov
mov
or
movmskps
jmp
loop
cmp
add
sbb
nop
push
add
aam
and
push
lea
add
xchg
leave
lods
push
stos
or
add
cmp
addb
das
mov
add
clc
mov
mov
cmpsl
mov
sbb
xor
add
ret
out
aad
addl
loope
add
add
or
push
int
enter
pop
jl
lcall
mov
mov
dec
shll
jns
xchg
fwait
pop
jae
stc
add
ret
adc
pop
stos
arpl
vsqrtps
pop
or
or
jg
jecxz
cmc
ficoms
je
cmp
add
dec
push
jg
cld
push
or
xchg
test
jle
call
mov
inc
add
push
movsl
dec
and
faddl
pop
sbb
cmp
pop
mov
inc
add
mov
adc
mov
pop
icebp
sbb
add
sbb
add
add
or
or
pop
and
mov
or
pop
cmp
mov
popf
fcoml
jnp
mov
hlt
jnp
arpl
ret
dec
je
jmp
ret
add
cmp
js
push
or
shrl
adc
fists
cltd
mov
das
scas
ficoms
das
inc
add
movb
add
mov
and
gs
dec
and
stc
je
movsl
xchg
dec
sub
arpl
cli
cmp
xchg
outsb
or
int3
enter
pushf
rorl
or
cli
pop
xchg
cmp
add
xchg
in
pop
fstpt
inc
cmp
inc
sbb
jbe
roll
adc
adc
lea
xlat
negl
add
testb
in
subl
sar
les
mov
in
lds
dec
jno
lret
pop
mov
pop
jnp
dec
lock
add
out
roll
add
test
cld
jmp
mov
add
daa
int3
add
ds
mov
aaa
mov
addb
movb
ss
adc
xchg
jg
add
inc
stos
mov
sbb
jp
les
jb
mov
jns
push
mov
xor
sbb
in
ja
out
in
hlt
fcmove
xchg
shrl
push
movsl
test
or
leave
push
mov
add
scas
sub
aad
or
push
sbb
data16
mov
pop
ljmp
add
adc
add
faddp
add
call
and
mov
xlat
into
fbstp
popf
sti
mulb
mov
mov
test
cmp
adc
add
insb
push
push
jns
pop
addr16
and
or
add
mov
adc
cld
fdivrs
or
ja
xor
int3
int3
mov
mov
and
jne
mov
lret
es
addr16
cld
add
adc
lods
adc
gs
fs
adc
aad
sub
lret
jp
jle
vpcmpgtw
jnp
popl
test
popa
and
scas
aas
xor
dec
sbb
int3
rcr
lret
and
lret
pop
cmpsl
je
dec
cmp
add
dec
js
loopne,pn
pop
rolb
movb
test
xchg
add
xlat
sub
ljmp
ror
into
mov
daa
scas
je
jae
insb
sti
add
add
jno
mov
pop
lea
or
pop
nop
jns
int
sbb
or
jecxz
mov
pop
and
test
insl
or
or
add
rcr
popf
mov
add
cmp
sar
sbb
add
push
jl
mov
loop
cmp
sti
addb
add
lods
stos
ret
repz
leave
mov
outsl
lods
cmpsl
jp
push
mov
gs
mov
add
andl
cld
inc
xor
test
mov
sti
adc
mov
and
xchg
or
mov
mov
loopne
test
or
lcall
pop
cmpsb
jae
outsb
test
xor
adc
sub
int
pop
pop
and
jo
stos
sub
fadd
and
jae
arpl
lret
push
or
sub
xchg
and
push
mov
test
test
push
fnsave
movsb
xor
ja
jne
repnz
dec
mov
into
loope
mov
sahf
sub
cmpsl
add
add
xor
stc
imul
inc
add
add
dec
and
sbb
xchg
add
lods
movb
or
add
and
mov
xchg
xor
inc
add
das
ljmp
sub
sbb
std
add
adc
sbb
repz
shll
lods
mov
sub
and
mov
and
jp
and
push
ret
cli
adc
or
in
xchg
cmp
add
sub
lahf
and
into
ficomps
ss
fwait
push
iret
add
xchg
imul
and
mov
lock
test
push
add
cmp
lds
jmp
pusha
add
adc
imul
or
leave
bound
jge
addr16
imul
mov
jmp
insl
in
jp
mov
add
dec
add
xor
loope
push
or
or
xchg
xchg
adc
add
dec
divl
aaa
stc
inc
scas
loop
dec
repz
imul
mov
dec
mov
test
idivl
dec
inc
pop
inc
add
push
mov
in
pusha
add
ret
sti
addr16
dec
sbb
pop
xlat
dec
cmp
push
pop
ja
lret
into
xchg
and
and
or
test
sbb
int
cld
mov
adc
mov
xchg
pushf
adc
add
cmc
cmc
repz
fisttpll
mov
pushf
jp
xchg
and
mov
sub
aaa
leave
repnz
pop
or
and
mov
cmpsl
cmp
mov
andl
and
popa
inc
mov
xor
xchg
xchg
xchg
and
pop
pop
testl
cmp
push
mov
rcrl
stc
adc
push
mov
lods
xor
das
xor
xchg
mov
leave
pop
test
xor
add
dec
movsb
out
cld
jae
adc
mov
jo
or
aaa
push
add
add
daa
mov
xchg
in
add
jno
lea
cmp
ss
inc
inc
add
pusha
add
xchg
rolb
addb
pop
outsb
sub
shl
push
xchg
adc
push
xor
sbb
repnz
insb
das
inc
mov
fisubl
and
xchg
lret
jae
xchg
push
ja
add
xor
mov
stos
cmp
sbb
push
add
int3
or
adc
xchg
push
jl
add
adc
notl
xor
js
and
add
cmp
jo
aad
xchg
cmc
aad
sub
push
out
push
jmp
mov
adc
jo
add
jl
mov
add
rolb
add
ficoml
inc
sub
cmp
bound
sar
pusha
add
push
shrl
sti
inc
add
sub
fs
add
cmpsb
xor
aad
cmpsb
out
call
xchg
add
mov
mov
stos
stc
mov
scas
push
ret
xchg
mov
les
cmp
mov
sbb
adc
stc
scas
ds
adc
shll
add
loope
std
sub
and
jbe
and
push
leave
rorb
aam
int3
cmp
rclb
dec
pop
lock
or
mov
mov
movb
jbe
scas
movsw
push
xchg
xor
pop
pop
lods
adc
inc
push
lock
push
mov
xlat
cwtl
and
add
adc
bound
daa
stc
incl
mov
movsb
sub
mov
jge
sbb
clc
adc
in
jecxz
shlb
fldt
leave
xor
push
sbb
loop
xorl
int3
loopne
sti
loop
movsl
cmp
hlt
push
add
add
and
add
add
lods
outsl
pop
popf
inc
add
mov
xchg
ds
add
lcall
xchg
stos
dec
push
into
insl
nop
dec
out
and
jns
les
call
adc
mov
cli
ret
lret
ja
dec
stos
mov
ret
loope
addb
loopne
add
in
xor
test
push
and
roll
scas
data16
daa
lret
sbb
dec
push
dec
add
jno
jne
data16
je
dec
movsb
pop
or
sub
add
ljmp
cmp
cmp
push
cmp
aam
lret
addb
add
idivb
jp
and
xchg
cmp
clc
scas
dec
mov
test
dec
mov
es
movsb
pop
sub
into
imul
mov
fcomps
mov
loop
mov
mov
add
sbb
inc
sar
in
pop
mov
push
loop
rcr
lods
sub
jnp
pusha
add
inc
add
pop
ljmp
add
fadd
add
ret
pop
imul
adc
dec
push
adc
sbb
leave
cwtl
mov
jnp
jno
sti
lea
pop
int
pushf
cmpsb
pop
xor
scas
pop
imul
add
pop
movb
add
out
outsb
out
es
add
and
pop
lret
mov
sbb
xchg
mov
push
sbb
add
or
dec
jne
fs
push
push
pop
inc
add
lock
jne
mov
add
movb
xor
insl
pop
xor
push
cmpsb
test
test
add
js
sub
vcvttpd2dqx
outsl
dec
pop
dec
inc
popf
cmp
test
xor
fwait
push
into
push
jecxz
push
shll
insl
xchg
enter
arpl
sbb
pop
sub
outsb
dec
mov
dec
dec
arpl
jmp
dec
mov
cmp
jnp
jno
adc
lret
xor
mov
scas
push
xchg
pop
jae
add
repz
jecxz
xor
iret
push
push
jmp
add
push
sub
cmc
out
mov
popf
mov
pop
mov
mov
mov
or
push
std
aam
mov
sbb
out
inc
fsubl
in
pop
cmp
cmp
add
in
add
or
repz
add
push
stc
mov
xor
dec
fwait
mov
fs
in
cmovb
hlt
repnz
pop
pusha
add
mov
cmp
add
movsl
jg
and
mov
xor
stos
dec
lahf
addr16
mov
and
xchg
out
std
xlat
pusha
add
mov
lock
movsl
jo
ljmp
push
loopne
jne
addb
push
fsubs
int
mov
inc
shlb
cmpsb
fbld
jmp
xchg
push
xchg
lock
addb
int
sarb
call
fwait
mov
inc
aad
sub
add
loop
cmpsb
addb
or
mov
call
int3
outsb
icebp
pop
hlt
ds
xchg
mov
xor
cltd
ss
popl
inc
add
gs
nop
pushf
cli
addr16
or
add
or
add
mov
dec
shll
fsub
inc
add
mov
xchg
js
or
push
jbe
divb
int3
jle
jae
repz
cmp
or
std
in
in
inc
add
mull
cmp
pusha
add
push
and
pop
adc
or
lret
addr16
sbb
add
mov
out
sbb
mov
inc
mov
ja
std
jmp
fmul
jb
mov
adc
mov
inc
add
sub
inc
add
inc
add
ss
cmp
cmp
jns
jmp
mov
jecxz
jne
add
movsl
in
jno
pop
outsl
jle
adc
jl
ds
adc
push
in
icebp
shr
movsl
or
push
test
popa
rorl
jne
add
push
sahf
sub
ja
loopne
sahf
or
push
add
xchg
xchg
hlt
sbb
and
cmc
lret
sub
xor
sahf
scas
sar
test
sbb
loop
test
jle
pushf
addl
stc
push
push
or
add
cmp
out
add
push
mov
stc
pop
cmp
add
rorb
dec
add
jecxz
push
xchg
adc
cmp
add
lret
and
jb
cld
pop
xor
mov
shrb
pop
in
cwtl
mov
mov
mov
scas
nop
jmp
cltd
sub
mov
add
add
bound
push
cmp
add
movsl
jecxz
test
mov
inc
adc
adc
je
mov
rolb
addb
and
dec
push
jg
push
shlb
shlb
scas
in
pop
mov
and
cwtl
lret
bound
mov
sub
or
push
sub
mov
ja
les
push
fnstsw
jo
xor
jo
cmp
add
test
add
pop
insl
js
mov
cs
cmp
roll
push
push
cmp
dec
mov
or
aad
mov
pop
sub
popf
in
test
xor
dec
push
in
adc
xor
stos
stos
jl
sub
imul
das
inc
add
test
rcll
repz
insl
popa
cli
add
push
add
fnstsw
mov
push
jge
stos
mov
lcall
mov
lods
pop
xlat
bnd
add
push
lret
aaa
std
pusha
add
sbb
shl
out
cmp
std
cmp
add
dec
lahf
xor
mov
scas
mov
stos
in
push
xchg
add
pop
clc
imul
push
push
mov
inc
add
cmp
aaa
inc
xchg
xor
ret
cwtl
push
sahf
xor
add
sub
mov
cmpsl
testb
loopne
loop
xor
sbb
daa
mov
pushf
fwait
ret
shll
fidivl
jno
add
push
push
testb
hlt
movb
inc
mov
es
pop
gs
xchg
jg
repnz
outsl
xor
push
inc
add
add
add
xrelease
and
orl
inc
mov
shr
das
push
call
repnz
jp
push
fbstp
lahf
lret
jl
xchg
add
push
in
inc
add
test
lcall
ljmp
and
add
or
daa
and
sbb
lcall
repz
add
pop
lea
ficoms
or
mov
lahf
aas
out
adc
popa
jp
mov
mov
jnp
cmp
cmc
mov
cmp
out
or
repz
push
pop
lods
lock
add
sub
xchg
xchg
bound
or
mov
dec
dec
mov
cmp
in
stc
movsl
or
aad
ret
mov
fimuls
dec
js
rolb
xchg
sbb
ret
in
add
stos
jg
call
mov
ret
fadd
mov
mov
jg
fidivrs
outsb
push
lcall
xchg
sub
dec
testl
mov
das
test
jp
or
push
fwait
xchg
fsubrs
dec
xor
cmp
clc
in
add
mov
push
fisttpl
popa
cmc
xchg
mov
add
jo
pop
lcall
mov
add
add
add
ret
jmp
cmc
outsb
sti
ret
imul
test
mov
mov
add
stos
jne
loope
subl
add
jp
mov
add
mov
add
jo
jae
mov
cmpsb
addr16
popa
out
cmpsb
inc
add
cmp
or
divb
sbb
add
xchg
sbb
adc
insb
sub
bound
in
pop
ljmp
insl
sub
add
cmp
lahf
les
push
xor
hlt
inc
inc
add
cmp
out
fs
add
sbb
daa
and
pminub
pop
movsb
aaa
fimull
jo
int3
xchg
sbb
stos
mov
sbb
mov
negl
cld
in
test
and
xchg
sub
mov
add
add
inc
add
bound
pop
js
add
jmp
das
xchg
aam
push
pop
jle
push
mov
xchg
ds
sbb
sahf
rcl
cmpsb
loope
sub
and
lahf
pop
mov
mov
sub
jmp
lret
addb
adc
cmp
add
xchg
jno
jae
arpl
repnz
add
and
test
loopne
push
add
mov
dec
mov
and
mov
add
lds
mov
test
sbb
add
adc
call
dec
and
mov
stos
push
jnp
add
and
out
add
mov
add
add
push
test
sub
cmp
addb
add
lods
push
adc
int3
notl
mov
xchg
pusha
add
fdivp
fldcw
in
jmp
dec
mov
clc
pop
mov
push
add
mov
mov
repnz
movb
fmulp
movb
add
mov
scas
cmc
insl
imul
lock
add
add
stos
repz
int3
mov
pop
dec
xor
out
pop
push
sahf
sbb
inc
dec
sahf
test
icebp
aad
ss
add
mov
imul
xor
add
dec
mov
add
add
xchg
sbb
rolb
mov
imul
pop
jno
test
daa
inc
inc
and
inc
ficompl
jnp
cli
push
nop
jge
arpl
add
add
loopne
xchg
daa
iret
ret
test
ljmp
mov
xor
data16
flds
cwtl
jbe
leave
cmp
fs
xor
lcall
sbb
jp
mov
xchg
mov
aaa
jmp
hlt
push
mov
ljmp
cld
dec
clc
inc
fldl
sbb
or
xor
jecxz
sub
test
jge
mov
out
movsb
sbb
dec
xor
sbb
or
leave
outsb
lahf
ljmp
mov
in
cs
fsubr
mov
jo
inc
pusha
add
in
out
and
pop
ror
xchg
pop
mov
loope
inc
loop
rolb
loope
test
push
jbe
jae
sub
mov
or
mov
add
add
xchg
mov
add
insl
daa
addr16
add
add
rorl
inc
add
mov
cmpsl
pop
mov
add
push
mov
adc
in
inc
add
xchg
ja
stos
mov
lods
addb
test
adc
test
mov
adc
add
pop
pop
stc
xchg
in
mov
xor
or
sbb
sub
add
pop
jae
pusha
add
jne
mov
rolb
mov
or
test
arpl
cmp
aam
cltd
popf
mov
daa
ret
adc
mov
or
cmp
nop
cld
add
out
xchg
iret
push
cmp
xor
mov
int3
and
pop
sahf
jle
inc
push
repz
mov
add
repz
dec
mov
add
and
cmpsb
sub
xchg
and
lods
sbb
inc
add
dec
hlt
and
roll
xor
and
jo
inc
add
add
mov
insb
mov
add
ja
test
lea
add
cmp
fstl
imul
cmp
pop
js
cltd
out
inc
add
out
xchg
stos
cmp
int
stos
arpl
inc
dec
and
enter
sbb
add
cmp
jnp
or
adcl
mov
aad
mov
sub
out
test
adc
push
xchg
dec
mov
daa
and
xchg
mov
sar
xor
jg
and
jb
sarl
in
inc
mov
add
popa
rolb
jg
dec
jae
mov
pushf
iret
add
mov
push
fldl2e
cmp
mull
or
pop
push
fwait
ljmp
mov
add
xor
movsb
push
adc
and
das
adc
add
inc
pusha
add
and
and
icebp
sub
pop
mov
imul
push
cmp
cmp
jns
lods
jne
cmpsl
shrb
imul
mov
push
iret
lret
dec
mov
cld
scas
xor
roll
cmp
fs
movsl
cmp
in
mov
call
pop
jle
jmp
add
imul
je
cwtl
jo
pop
push
dec
mov
mov
xchg
call
add
pushf
or
mov
inc
add
add
and
xchg
inc
add
divb
cmc
mov
stos
test
pop
inc
xor
std
cmp
nop
push
mov
bound
movsb
incl
add
mov
or
sahf
mov
int3
mov
js
mov
add
xor
push
iret
mov
repz
mov
mov
add
pop
ds
xor
cwtl
adc
dec
sub
mov
sub
out
pop
jb
fcoml
test
int3
xchg
fisubrl
jne
xchg
push
cltd
cs
into
mov
lea
int3
popa
mov
aad
loopne
inc
add
pop
test
mov
pop
mov
xor
popl
push
clc
or
add
inc
cmp
jmp
push
lods
pop
jg
stos
xchg
adc
addr16
adc
in
push
stc
into
and
add
and
add
jl
or
adc
push
mov
pop
ret
cmp
mov
add
mov
addl
fcmovne
loop
mov
cmp
xor
add
inc
mov
push
inc
add
sbb
mov
mov
xor
stos
push
xchg
jnp
repnz
sub
test
add
mull
add
pop
and
add
add
nop
push
in
mov
adc
jl
mov
stos
pop
outsb
aam
or
imul
ficompl
add
shld
mov
repz
sbbl
dec
icebp
adc
push
inc
pusha
add
popa
jle
aad
out
cmp
dec
lock
jge
mov
fcomps
inc
sub
idiv
addb
call
aas
fcompl
dec
jge
outsl
aad
aam
pop
ljmp
add
scas
cs
jb
push
popa
in
mov
fs
lds
lahf
rcl
sbb
cmc
xlat
adc
cld
or
dec
fidivs
add
mov
sub
cmc
hlt
xchg
adc
sub
shll
dec
xor
je
ret
cmc
push
xchg
movb
ret
jg
add
sbb
push
xor
mov
cmpsb
lds
mov
jbe
sbb
es
and
cmp
xchg
jae
lock
adc
sahf
sbb
fldcw
dec
repz
cltd
push
xchg
loope
cmp
add
into
loope
mulb
add
jae
lock
enter
cmpsl
cmp
push
add
add
sub
imulb
add
out
out
lret
jnp
in
push
into
js
test
jl
dec
mov
sbb
pop
xchg
sbb
lods
adc
in
inc
add
xchg
xchg
or
es
push
gs
pusha
add
rcll
jne
rorb
shlb
movsl
mov
or
mov
and
cmpsb
jae
out
sub
sbb
xchg
pop
cld
dec
test
icebp
dec
lret
pop
pop
addb
je
pop
leave
sets
and
adc
jne
lods
pop
rcrb
add
dec
fisttpll
out
jmp
dec
jge
lods
push
add
addr16
pop
xchg
mov
dec
cmp
lock
add
jp
jns
mov
hlt
adc
jbe
fisttpl
mov
out
and
pop
std
and
xlat
into
sub
add
insl
insb
jae
aad
lods
js
test
cmc
cmc
jb
aas
pop
ret
xchg
das
xor
lods
mov
xor
repz
or
and
add
and
sbb
pop
dec
push
jb
aas
xor
jl
out
add
jne
or
sub
ret
fmull
cmp
jb
sahf
xchg
cmp
das
clc
xchg
mov
add
nop
lods
nop
int3
movsl
sti
loope
out
and
push
movsb
cmc
test
sbbl
dec
cltd
mov
movsl
sahf
dec
shlb
add
ss
and
cmpsb
ja
and
mov
mull
lds
push
fcmovne
inc
add
lods
dec
cwtl
push
stos
fdivs
addr16
and
cmp
mov
lea
ljmp
call
cmc
or
mov
mov
adcl
into
jnp
and
inc
lock
aas
mov
jns
sti
pop
in
cmp
cmp
cmc
testl
movb
jmp
dec
into
jae
xchg
cs
jmp
add
add
cmpl
aam
jns
imul
sub
jg
dec
aas
mov
sub
sbb
in
es
push
xchg
test
div
xor
outsb
push
sub
or
leave
sbb
addl
lcall
test
sub
out
lcall
test
cmp
mov
sysexit
std
arpl
and
sub
add
loop
and
push
enter
xor
inc
add
insb
movb
bound
std
inc
add
add
mov
inc
repnz
jg
adcl
inc
add
sarb
inc
add
and
add
or
push
outsl
xor
cld
dec
cmp
in
cwtl
mov
adc
fucom
std
sub
fidivs
xor
add
mov
out
push
fmul
jo
jae
dec
jge
add
sub
dec
mov
iret
lcall
dec
or
mov
add
mov
inc
and
push
enter
sti
lods
iret
xchg
pop
sub
cmc
shl
and
sub
lock
push
add
shr
shlb
dec
cs
sub
xchg
add
shl
icebp
clc
arpl
or
hlt
pop
clc
test
cli
mov
or
cmp
lret
stc
jne
sti
sbb
mov
js
add
gs
add
aaa
icebp
fldcw
nop
or
xchg
and
int3
dec
fcmovbe
hlt
mov
inc
test
mov
ljmp
sub
mov
ret
adc
adc
add
mov
jbe
cmp
dec
lahf
les
in
pushf
roll
leave
aaa
mov
mul
inc
push
fs
mov
inc
jp
out
pop
mov
icebp
sub
and
outsl
adc
and
rorl
or
rclb
sbb
xchg
sbb
arpl
in
in
push
add
sub
or
or
outsl
push
inc
add
icebp
imul
xor
add
xor
out
scas
outsl
pop
div
neg
mov
add
adc
sbb
pop
in
lds
sti
dec
sahf
shl
jnp
add
add
jp
xchg
rolb
stc
and
sub
addb
pop
out
adc
dec
add
add
jecxz
lahf
imul
mov
dec
movsl
mov
inc
mov
loopne
add
or
inc
add
lret
fists
and
into
mov
imul
movsb
sahf
push
and
rcrb
xchg
aaa
aam
gs
add
add
xchg
daa
mov
jg
cmpsl
ret
out
add
mov
jecxz
mov
lds
in
cmp
mov
cmpsb
and
mov
xchg
lret
add
add
mov
jnp
and
rcrb
sbb
mov
jno
aas
arpl
imul
jns
add
mov
sbb
pop
in
popl
xchg
loop
sub
inc
cmp
stos
lret
outsl
mov
inc
add
jae
xor
push
mov
mov
adc
push
scas
cmc
cmpsb
sub
cmp
or
lcall
sub
dec
jmp
lock
pop
and
rclb
lcall
and
ret
std
xchg
add
rol
adc
aas
scas
mov
add
add
add
jg
fnstsw
adc
test
xlat
jo
mov
popf
push
dec
add
ds
dec
cltd
fiaddl
jbe
loope
psllw
push
fwait
push
loopne
xor
xor
add
xor
mov
out
add
sbb
mov
cmp
push
pop
push
fbld
ret
aas
cmp
ljmp
dec
pop
repnz
inc
adc
pop
inc
push
xchg
imul
pushf
lods
iret
mov
roll
push
test
rcrl
add
add
test
sti
iret
sub
cld
cmp
shr
add
dec
push
cmp
add
lods
out
jg
pop
roll
add
add
scas
xor
pop
and
mov
mov
sub
daa
sub
push
mov
icebp
rcll
mov
movsb
mov
push
dec
push
aad
dec
stos
hlt
fistpll
fimull
out
testb
mov
outsb
inc
add
ret
mov
lret
fwait
or
bound
in
pushf
ljmp
mov
mov
xor
ficomps
pop
pop
imul
mov
out
push
pop
call
ljmp
and
fs
int3
test
js
dec
ljmp
cmp
mov
inc
add
xor
or
add
lea
scas
dec
fwait
sbb
sbbl
push
in
xchg
js
fs
xor
test
add
adc
add
dec
dec
popf
lock
jg
adc
lret
add
mov
pop
pusha
add
and
and
push
out
shll
sarl
insb
popf
jno
push
and
or
dec
sarb
mov
add
add
xor
fstpl
rolb
add
or
pop
cmp
addr16
ja
xchg
mov
jge
jno
push
add
or
and
out
les
jo
push
add
test
xor
push
mov
pop
jg
lea
imul
add
mov
dec
ret
push
dec
lret
add
add
ss
lret
mov
mov
xor
cmp
and
and
xor
pop
cmp
and
jne
fldl
cmp
sub
xchg
adc
add
add
out
sub
fsub
iret
mov
lods
out
add
xchg
shlb
fsts
daa
xchg
scas
mov
cmp
xchg
and
inc
jge
mov
rolb
cmpsl
cld
outsl
inc
add
and
lea
test
mov
mov
xor
sub
xchg
cmpsb
stos
jmp
cmp
and
movhps
jge
shlw
xor
dec
xorl
leave
test
sbb
imul
xchg
shl
jmp
add
and
imul
fcomps
cmp
ss
fs
mov
push
mov
inc
add
dec
leave
or
inc
lds
push
dec
lret
std
mov
and
mov
js
mov
inc
mov
outsl
xor
int
adcl
mov
xor
jo
xor
cmp
sub
dec
cmp
out
lret
add
sbb
mov
roll
imul
mov
adc
sbb
dec
inc
pmaxsw
jg
add
cli
js
sub
jne
ret
leave
out
xchg
sahf
pop
loopne
mov
faddl
add
or
testl
push
and
add
mov
cmp
mov
mov
mov
mov
aas
inc
add
sub
cmp
lds
and
imul
in
push
add
cmc
mov
cld
mov
rcll
adc
fistpll
cmp
addb
dec
push
aad
mov
fdivrl
and
dec
hlt
xchg
adc
adc
inc
add
mov
push
mov
mov
add
add
sub
add
cld
daa
and
mov
xor
sub
andl
xor
xor
je
pop
mov
xchg
cmp
sub
dec
loope
xchg
push
push
xorl
aam
fcmovbe
mov
jns
imul
cs
push
jle
pushf
mov
dec
cmp
in
mov
mov
sub
out
test
jns
jns
bound
jae
rcrb
subl
jl
fxam
mov
add
xchg
hlt
adc
lds
frstor
clc
call
pop
dec
xor
outsb
test
out
pop
mov
pop
pusha
add
sub
add
mov
lcall
push
movsb
cmp
pop
loope
mov
call
stos
jmp
or
mov
add
movb
ret
movsb
ret
adc
jns
out
jg
pop
pop
or
add
popf
outsb
jns
js
mov
xor
dec
pop
or
addb
jnp
test
sbb
mov
incl
xchg
jp
mov
in
lods
test
shll
add
xchg
mov
xchg
loop
mov
adc
aam
popf
xor
or
pop
rolb
add
mov
in
aam
and
sbb
das
xchg
jbe
int
jg
pop
daa
daa
aam
lahf
inc
add
xchg
push
sbb
pop
jl
mov
inc
add
cmp
inc
add
pop
in
aad
ret
popf
mov
stos
sbb
sub
mov
mov
xor
sbb
and
sbb
es
je
stc
fmul
roll
data16
jg
iret
xlat
pop
dec
nop
leave
je
in
movsb
mov
jg
mov
add
add
mov
les
push
add
lods
and
xchg
movb
scas
iret
mul
daa
test
lret
andl
mov
scas
loop
fldcw
dec
mov
lcall
and
adc
adc
add
shlb
mov
pop
fsubl
xor
bound
repnz
jnp
pop
shll
in
data16
xor
xchg
insb
jbe
bound
pop
lods
cmpsl
insl
mov
rorl
sub
pusha
add
addb
je
icebp
cld
sub
cmp
pusha
add
mov
mov
int3
in
js
fwait
mov
sbb
mov
jmp
shll
gs
jnp
stos
sub
mov
add
sub
mov
xor
frstor
mov
add
aad
xor
sbbl
xchg
out
pop
cmp
out
mov
mov
cmpsb
push
sub
mov
lock
movsl
xchg
movb
jp
add
xor
push
iret
movzbl
lret
movb
into
fisubrs
jmp
fldenv
jecxz
sbb
cmp
scas
adc
mov
in
int3
push
fcmovne
sbb
xchg
popf
data16
mov
addb
add
pop
or
outsl
and
dec
sahf
lds
jnp
push
jecxz
adc
pop
movsl
cmp
movsb
mov
test
mov
xor
and
pop
mov
xchg
fimull
mov
popf
add
imul
mov
in
pop
mov
decl
add
xchg
fwait
rolb
outsb
iret
mov
add
and
or
xor
divb
cmpsl
sarb
cmc
jecxz
pusha
add
mov
jne
mov
lds
or
adc
push
mov
mov
xchg
mov
pop
cmpsl
mov
insb
xor
mov
sbb
xchg
aad
xor
ret
mov
fcomps
test
xor
add
iret
or
jecxz
adc
mov
jnp
jbe
inc
imul
push
adc
sub
add
add
cwtl
sub
fcompl
lock
pop
je
mov
sbb
aas
lds
shl
mov
adc
mov
push
dec
adc
cwtl
fcoms
in
mov
pop
pushf
outsb
sahf
test
xchg
loop
add
mov
xor
dec
icebp
fidivl
mov
push
add
cmpsb
loopne
xchg
test
test
aas
mov
dec
and
jmp
inc
addb
lods
xor
adc
jnp
adc
add
pop
mov
inc
add
sub
movsl
adc
fnsave
cmovle
inc
cmp
jecxz
in
jbe
or
or
mov
leave
sbb
inc
push
repnz
loope
stos
sub
jo
mov
dec
dec
jg
jl
dec
mov
js
cmp
dec
movsb
adc
or
mov
jmp
pusha
add
cmp
sbb
xchg
cmp
fldcw
leave
in
lods
shl
shrb
aaa
jnp
sub
ljmp
add
pop
adc
sti
pop
sbb
sub
daa
mov
xlat
into
movb
loop
cmp
ds
or
add
mov
sahf
pop
add
pop
popa
inc
repnz
scas
xchg
mov
add
scas
xor
xor
fcomi
cli
ret
push
mov
aad
jo
mov
pop
mov
orl
add
dec
mov
mov
into
and
fnsave
push
xchg
ret
call
xor
mov
cmp
adc
in
mov
leave
adc
push
cwtl
adc
jl
shll
pop
hlt
aad
sbb
or
xchg
addb
call
mov
or
lods
jnp
push
insb
movb
in
jge
add
aaa
test
jecxz
inc
xchg
sar
fstps
addb
clc
fisubrs
fwait
lods
movsl
or
adc
outsb
outsl
cmp
push
je
cs
fcmovne
shl
push
movsb
stos
add
aaa
add
fwait
jne
xlat
leave
sbb
sub
push
test
xchg
cs
or
in
mov
or
add
cli
xor
push
jb
js
add
je
addb
pushf
lret
ja
add
incb
push
adc
push
xchg
push
fcmove
sub
mov
push
stos
adc
add
fs
cwtl
jmp
stos
jae
cltd
outsl
xchg
mov
dec
mov
cli
shll
es
js
push
mov
scas
mov
mov
add
inc
mov
cltd
adc
dec
inc
mov
das
jno
lock
mov
adc
enter
add
push
push
cmp
cmc
pop
rcrb
inc
aaa
push
ret
jnp
pop
scas
addb
lahf
call
push
in
add
or
jb
bnd
dec
pop
mov
xchg
hlt
pop
dec
adc
xor
push
movsb
mov
sbb
pop
out
cmp
jp
xchg
mov
adc
std
sbb
int3
dec
jo
shl
push
pusha
add
push
and
lret
aas
fdiv
out
mov
dec
push
lds
cmc
inc
add
cmp
lea
add
add
add
cli
cmp
push
aam
add
adc
push
xchg
or
adc
cs
aam
or
xlat
aam
push
mov
insb
les
xor
jbe
xchg
pop
jle
xor
lea
inc
lcall
mov
mov
cmp
cmp
mov
adc
stos
push
push
out
xor
dec
mov
cmp
out
decb
inc
icebp
mov
insl
adc
add
cmpsb
cmp
mov
test
data16
add
addb
cmp
dec
insl
imul
dec
vpsubb
add
push
mov
inc
xor
data16
dec
mov
sub
dec
out
xor
scas
call
add
jno
mov
js
push
pop
stos
and
add
push
pop
lahf
jne
mov
sub
pop
mov
int
sub
in
mov
test
pop
pushf
popf
shll
add
push
enter
xor
jns
jns
add
dec
inc
mov
sbb
add
add
sub
xor
cmp
cltd
les
pop
loop
adc
xchg
or
into
cld
sub
xchg
pop
or
mov
push
movsl
and
add
or
je
gs
icebp
push
add
movb
out
lock
es
add
outsl
imul
cwtl
outsl
adc
mov
adc
cmp
dec
sbb
xor
jp
iret
in
push
and
jb
enter
pop
movl
shll
add
inc
add
mov
out
xchg
test
xchg
xor
dec
pop
out
int
mov
out
stos
or
adc
rcl
ss
or
pop
or
push
add
movsl
movb
lods
pop
test
sbb
mov
add
imulb
xchg
sbb
sar
jle
inc
add
rolb
and
inc
add
cmp
jecxz
add
xchg
and
imul
xor
add
sahf
ja
in
add
push
aam
ljmp
mov
mov
xchg
insb
xchg
repnz
cmp
sbb
xchg
aaa
cwtl
stc
pop
adc
mov
pop
add
inc
add
lcall
mov
out
jnp
adc
and
ficoml
int3
push
and
and
clc
jb
and
sub
pushf
sub
imul
xor
add
arpl
movl
xor
add
jge
add
adc
xchg
addb
cmpsl
inc
addr16
or
and
add
cltd
xor
jl
ret
sar
nop
test
repz
jle
lock
lret
mov
add
add
jmp
and
push
enter
add
imul
lods
adc
out
xor
xor
testl
out
mov
pop
ja
icebp
sti
rorl
inc
add
add
xchg
ja
add
test
call
dec
cli
js
inc
push
shll
mov
or
xchg
mov
add
or
in
add
dec
sub
pop
ret
adc
call
or
dec
test
push
loope
jbe
mov
xor
fwait
imul
push
hlt
cmp
xlat
add
fucomp
scas
clc
fwait
xchg
ljmp
push
push
inc
sub
mov
add
leave
jo
add
lock
lret
cmp
mov
pusha
add
out
jo
cmp
sub
or
cmpsb
imul
mov
shlb
or
or
mov
neg
sub
push
add
xor
jae
ds
pop
mov
inc
pop
xchg
lret
lds
loope
sbb
adc
inc
into
jae
jecxz
add
loope
dec
sbb
xchg
aad
lret
xor
adc
addb
pushf
fstpl
mov
rorl
cmp
push
inc
add
dec
mov
or
xchg
shrl
js
push
aad
add
stc
lds
mov
add
ds
mov
lds
add
nop
mov
add
aaa
sbb
dec
fmuls
ficoms
repnz
les
ds
dec
pusha
add
das
int3
js
and
add
jl
inc
add
mov
out
pop
or
jge
add
jp
cmp
repz
pop
add
cld
jg
dec
movsb
adc
cmp
dec
add
mov
adc
xchg
mov
push
pop
push
add
xchg
je
add
cmp
add
out
xchg
call
fsubrp
js
xchg
in
ja
or
or
movsl
adc
inc
add
cmp
in
pop
add
js
scas
xor
inc
add
xorl
mov
add
data16
mov
arpl
cmp
push
push
jle
mov
add
xchg
adc
add
repnz
iret
dec
sbb
adc
or
jno
add
push
adc
sahf
out
add
xor
dec
icebp
push
xchg
xchg
cwtl
pop
adc
xor
sbb
add
add
loopne
loopne
imul
cwtl
stos
aaa
shlb
push
movsl
mov
add
mov
mov
mov
adc
popa
jae
pop
shll
mov
das
maskmovq
testl
addr16
popf
cltd
roll
clc
pop
rol
add
add
int
mov
inc
lock
ds
sbb
ja
adc
in
sar
out
fstpt
inc
mov
xchg
cmpsl
popf
cmp
push
xlat
push
stc
lods
jp
dec
cmpl
and
movsl
cmp
lcall
sub
fs
or
push
cmp
push
add
jecxz
sub
leave
movb
imull
jne
lcall
jmp
and
or
mov
sbb
jb
cmc
push
les
mov
push
int
imul
or
and
lahf
sub
mov
cmp
lods
out
mov
xchg
jmp
inc
add
add
jmp
movb
sub
add
mov
mov
add
add
ror
popf
mov
js
fbld
pop
adc
popf
inc
repnz
fcmovnbe
jge
jo
gs
xor
xchg
or
daa
test
xchg
push
inc
pushf
inc
mov
test
loop
mov
in
loop
push
orl
adc
insb
les
and
fiadds
addb
bound
es
lock
fdivrs
bswap
inc
add
and
cmp
push
xor
cmp
sub
or
pop
or
cmp
stc
xchg
scas
dec
cmp
dec
or
jge
addb
jmp
movb
or
call
inc
add
pop
mov
stos
xchg
fmuls
push
lds
stc
in
int3
inc
add
sub
ret
lds
ret
imul
add
or
lds
in
add
repnz
test
dec
jo
cmp
add
iret
mov
add
cmp
push
mov
add
mov
push
fnsave
add
scas
negb
and
out
sti
xlat
imul
sbbl
sbb
dec
rorl
jae
xor
or
nop
mov
jmp
add
or
les
push
xchg
mov
pop
mov
xchg
adc
sahf
mov
mov
daa
add
gs
push
jnp
xor
sub
es
and
xor
sti
out
mov
sub
or
xlat
add
xlat
hlt
adc
dec
shll
mov
or
inc
add
lahf
out
add
ja
xor
dec
jae
in
mov
scas
pop
mov
rolb
adc
rcr
or
ret
push
sub
movb
loop
push
inc
add
or
inc
jge
mov
arpl
ficoml
cmp
insb
or
sahf
in
insb
jge
bound
and
mov
pop
pop
insl
fsts
loop
cmpl
lret
pusha
add
std
xor
mov
and
adc
sti
mov
sbb
dec
and
dec
lock
pop
adc
pop
rorl
lahf
cmp
mov
jl
push
lods
sbb
or
pop
mov
xor
xor
jnp
imul
mov
add
gs
add
aam
loopne
pop
sbb
jae
std
sbb
movsl
push
push
bound
dec
jecxz
aad
cmp
push
fcomip
pop
es
add
dec
divl
mov
scas
mov
das
dec
scas
mov
sti
cli
and
jecxz
sbb
sub
mov
aas
dec
xchg
add
stc
mov
mov
imul
mov
xchg
clc
ret
mov
clc
sub
addb
dec
adc
add
test
push
fdivrs
pop
ret
add
pop
stos
adc
and
inc
cs
fcoms
arpl
ss
sbb
xor
pop
cmp
pop
adc
mov
sbb
divb
test
aam
add
ja
add
fs
sar
or
enter
roll
mov
push
dec
jo
xchg
inc
or
hlt
in
divl
ljmp
xlat
inc
xchg
xor
inc
and
fsts
outsl
fcompl
add
pop
or
fs
mov
cmp
add
jb
std
lock
jp
sub
xchg
arpl
or
add
mov
mov
xchg
jo
push
idivb
stos
aas
bound
add
push
das
clc
jge
mov
push
popa
mov
jmp
pop
scas
jmp
add
int3
push
into
cli
out
mov
add
or
stc
aaa
lds
pop
or
lret
mov
inc
insb
cs
mov
divb
mov
jmp
xor
mov
or
cs
sub
dec
popl
push
jno
mov
adc
cmp
sub
test
jbe
mov
stc
int3
out
fsubp
inc
add
and
or
xchg
mov
push
loope
mov
pop
or
lret
xlat
les
mov
popf
testb
mov
push
add
xor
sub
pushf
mov
mov
push
pop
xchg
data16
insl
fiaddl
mov
lods
and
or
sub
pop
rolb
mov
jb
push
pop
lret
push
add
pop
mov
jbe
mov
xor
sub
enter
jnp
lret
shrl
rcr
push
movb
scas
inc
add
xchg
ficoml
sbb
jg
push
out
mov
xchg
xchg
push
pop
inc
add
cs
mov
out
mov
hlt
nop
dec
xorl
dec
ret
dec
bnd
cmpl
loopne
out
xchg
mov
aad
add
cmpsb
test
cmp
pop
add
jnp
in
repz
popf
popa
daa
sub
xchg
sbb
inc
popf
jo
xchg
jg
inc
inc
add
mov
adc
add
popf
sahf
jo
test
fst
dec
sti
dec
popa
pop
mov
add
les
ljmp
mov
jae
sbb
les
mov
cli
shr
rorl
imul
pop
call
insl
push
add
les
mov
add
push
adc
jg
mov
daa
adcl
inc
add
ds
xchg
dec
mov
bound
push
add
jne
add
in
mov
add
push
add
jbe
loope
push
andl
pop
rcll
inc
add
fwait
iret
jbe
jns
repnz
test
dec
sub
inc
add
mov
movsl
fiadds
add
sbb
inc
add
arpl
inc
add
xchg
test
out
insl
mov
stos
push
add
aaa
cmp
rcrl
addb
ljmp
push
xor
sub
adc
int
push
in
lret
fcoml
add
sub
mov
ljmp
out
cmc
in
mov
iret
fisttps
xor
cmp
hlt
mov
add
fadds
add
dec
mov
pop
dec
jno
lds
test
dec
inc
mov
rclb
inc
add
enter
pop
mov
outsl
scas
push
mov
jnp
push
sbb
fisubs
jmp
outsb
mov
mov
aam
xchg
pop
rcrb
std
xchg
cmp
ds
cltd
pop
dec
addr16
mov
push
cmc
and
mov
push
aad
xchg
int3
mov
mov
lcall
mov
jge
jmp
decb
cmp
jl
add
addb
cs
mov
add
jae
push
ja
mov
inc
add
fnstsw
popa
mov
add
insb
std
cmpsl
addb
dec
imul
fistps
ror
scas
cmp
mov
xor
js
push
add
and
jae
repnz
stc
jecxz
add
add
xchg
inc
add
andl
imul
iret
pop
jns
arpl
mov
fldcw
xor
and
call
dec
lcall
shll
out
stos
pop
add
in
pop
leave
stc
outsb
loop
mov
addl
inc
and
addb
sbb
sbb
fwait
add
sub
jmp
jmp
cmpsb
xor
add
and
mov
pop
test
inc
test
mov
repnz
mov
stos
outsl
ss
sub
push
mov
insb
clc
jb
iret
jmp
mov
and
mov
add
mov
cs
jmp
xorl
divl
roll
xchg
add
pop
data16
sub
int
addb
imul
add
sti
adc
xor
fisttpll
scas
sub
enter
pop
outsb
lods
push
movb
add
test
enter
push
mov
js
js
jl
addb
jae
and
hlt
ficoml
add
repz
add
dec
aaa
or
jnp
add
stc
ja
inc
enter
or
mov
cmc
push
jge
cmc
data16
mov
xchg
cli
inc
aaa
imull
mov
pop
cmpsl
mov
addr16
jae
mov
add
les
jns
call
leave
aad
add
sbb
les
addb
and
popf
pop
clts
add
add
mov
push
mov
add
xor
xchg
push
sbb
bound
arpl
mov
inc
in
push
mov
push
cltd
pop
loop
push
mov
lret
in
repz
pop
pop
mov
pop
std
xor
addb
pushf
test
imul
and
nop
cmc
imul
jns
add
or
pop
mov
or
and
insl
mov
xchg
jl
mov
jno
lahf
fdivs
jb
cwtl
ja
gs
test
outsl
imul
add
inc
add
rorl
sbb
mov
add
stc
loop
das
cld
mov
dec
insl
dec
or
sbb
jno
jecxz
inc
ret
push
aaa
adc
mov
pop
mov
mov
mov
in
dec
jnp
add
add
clc
lret
mov
loop
jo
pop
mov
push
repz
rdpmc
test
in
and
xchg
push
xor
mov
dec
mov
pop
xchg
push
add
test
cmc
adc
insl
pop
lahf
loop
pop
enter
scas
in
popa
mov
pop
pop
sahf
in
add
dec
lret
push
inc
insl
addb
and
dec
in
loop
int
pop
cmpsl
ret
xor
cld
in
ljmp
inc
add
int3
fisttpl
mov
add
push
adc
push
xchg
dec
push
cli
repz
outsb
mov
aad
add
sub
gs
hlt
inc
add
in
jno
adc
pop
xchg
inc
add
sahf
jo
iret
cmp
out
xchg
push
and
pop
popa
les
xchg
inc
add
adc
cmp
mov
add
jo
lods
mov
scas
leave
jmp
rolb
sub
aam
mov
sub
push
ror
insl
je
pushf
jmp
sub
mov
dec
push
xchg
or
ja
jb
push
idivl
jo
add
jecxz
inc
mov
jne
push
sti
pop
mov
xor
pop
stc
lock
and
sbb
and
hlt
arpl
push
imul
add
decb
scas
imul
test
or
cmpl
out
je
in
nop
aas
addl
mov
and
xchg
loop
sbb
and
sahf
pop
xorl
fcom
rolb
stos
imul
add
xchg
stc
xchg
cmpsl
jmp
push
jecxz
push
push
and
push
das
mov
fsubrl
xor
cmc
push
add
xor
xchg
pop
insl
xchg
fsubs
and
ficomps
mov
les
jbe
adc
cmp
mov
roll
cmp
fadd
add
jle
push
lahf
test
lahf
jnp
sti
cmp
mov
test
push
push
in
jg
and
fnsave
jno
pop
push
pop
loop
xor
pop
xchg
or
repz
pop
pop
jmp
mov
adc
das
arpl
mov
push
inc
add
out
mov
sub
sub
aas
sbb
arpl
leave
ret
ja
add
dec
push
pop
dec
clc
inc
push
and
and
add
adc
daa
mov
mov
fistpll
and
push
adc
cmp
loope
enter
je
sub
repnz
or
jae,pn
push
add
sti
mov
add
sbb
mov
add
lods
mov
cmp
push
mov
insb
push
or
test
add
sbb
popl
add
call
push
dec
sub
stos
mov
jne
pop
xchg
cmp
mov
leave
arpl
sahf
jbe
test
je
jno
add
xor
push
sbb
hlt
adc
xchg
daa
adc
lods
push
arpl
add
jle
adc
int
inc
add
dec
loopne
imul
clc
pushf
xor
addb
jnp
sti
dec
movsb
int3
adc
add
sarl
xchg
add
add
imul
push
ret
in
and
cmpsl
addr16
jl
sub
dec
xor
add
out
das
bound
xchg
and
or
and
add
dec
mov
inc
add
popa
cmpsb
dec
decl
out
inc
add
ja
incl
inc
add
popa
push
jnp
mov
or
stos
jp
inc
inc
xchg
movb
lds
jmp
js
or
ffreep
or
cmpsb
lcall
outsl
cmp
mov
jg
leave
sub
adc
mov
daa
cld
int
inc
push
movsl
data16
mov
repnz
test
lahf
icebp
jge
out
addr16
or
lahf
dec
xchg
andl
jbe
loop
add
rorl
mov
dec
mov
stos
outsb
and
flds
and
mov
stc
addl
decl
and
lock
aad
sub
add
lods
xchg
mov
jg
jmp
repnz
mov
add
mov
sbb
in
int3
mov
cmc
mov
sbb
xchg
scas
pop
jb
popa
sti
dec
mov
pusha
add
cmp
mov
cli
or
in
jecxz
xor
out
pop
leave
insb
bound
jae
add
or
imulb
push
mov
adc
add
inc
adc
adc
test
jle
cmp
add
add
push
or
xchg
cltd
lods
sbb
add
jbe
scas
jbe
add
pop
jp
pop
inc
js
jne
mov
mov
add
add
iret
adc
jle
stc
pop
aad
std
ss
xlat
xor
or
shlb
stos
test
xor
ljmp
decl
or
ja
pop
lea
xor
in
fldl
add
xor
shll
js
inc
push
sub
insl
lahf
in
sbb
jl
xlat
or
mov
das
push
popl
add
push
clc
rcrb
mov
mov
scas
movsl
pop
adc
mov
xor
inc
mov
add
jae
aaa
filds
mov
cmpsw
addb
call
int
fs
cltd
push
cmp
jecxz
or
xor
dec
mov
shrl
add
cmp
push
fistpl
mov
add
pop
bound
std
movb
sub
mov
stos
xorl
sbb
jb
dec
mov
dec
out
push
daa
lock
xchg
es
aaa
mov
pop
arpl
test
cmp
test
mov
jno
pushf
dec
pop
push
ds
add
clc
cmp
mov
add
add
js
int
add
dec
fwait
loopne
and
inc
test
popa
iret
mov
add
mov
mov
and
in
xor
mov
mov
mov
or
push
cmp
xor
push
fwait
or
xchg
not
jb
jp
add
add
push
repnz
insb
pop
fld
mov
movb
jp
xor
pusha
add
loopne
add
and
add
movsl
mov
in
mov
or
jg
add
add
ja
mov
xor
mov
fcompl
mov
adc
and
push
test
sahf
mov
xchg
jb
in
mov
jnp
cmp
sub
pop
jge
and
cli
mull
cli
pop
pusha
add
insb
cmpsb
sbb
push
add
xlat
pop
pop
add
int3
stc
or
or
es
ja
push
es
lds
add
jmp
leave
adc
mov
or
cmp
fdivl
addr16
loop
outsb
jbe
sarl
iret
jae
add
add
pop
lods
sbb
test
lret
das
pop
cld
sub
and
cld
dec
push
shll
jbe
mov
xchg
lcall
dec
dec
cli
std
or
dec
outsl
in
cmp
add
fsubrp
ljmp
in
dec
addb
fsubrl
dec
test
out
pop
sbb
fsubrl
push
dec
stc
jmp
push
add
xchg
mov
push
sub
mov
and
add
test
aam
pop
xor
add
jle
cwtl
push
cmp
ss
add
or
cmpsl
movsb
sub
cli
sub
mov
arpl
loope
xchg
cmpsb
jb
dec
addb
in
nop
je
test
push
dec
cs
mov
pushf
mov
fstp
test
enter
inc
bound
mov
adc
push
push
enter
aaa
mov
jbe
jmp
pop
repz
sub
addb
test
call
xlat
in
sarb
add
cmp
addr16
sbb
sub
lret
or
xor
lret
out
pusha
add
xchg
int
dec
mov
divb
push
outsb
push
dec
aam
out
mov
mov
cmp
ret
lods
dec
lahf
test
ds
js
xor
xorl
add
stos
cltd
outsl
push
xor
aad
cli
or
mov
fdivr
cmp
xor
lds
or
mov
push
ja
or
xorl
ja
add
in
jecxz
sahf
jle
jmp
test
xor
mov
int
out
pop
push
dec
sub
and
push
pop
in
setle
mov
push
adc
icebp
mov
inc
add
fstps
sbb
adc
dec
movsb
ror
and
cmp
and
cli
aam
imul
rcr
insl
add
lods
les
push
or
jl
call
push
pop
out
sbb
xorl
inc
push
xor
les
stc
xchg
test
jne
push
fcmove
sbb
xchg
mov
dec
lcall
stos
jbe
add
fbstp
test
and
push
int
add
jae
outsb
outsl
rol
add
mov
xor
es
les
push
or
push
dec
push
sbb
xchg
xor
ret
inc
add
mov
or
jle
xor
js
jns
cmp
jle
sub
dec
jb
add
lods
in
cmp
add
and
cltd
inc
addb
add
dec
mov
stos
ret
dec
jle
dec
sbb
test
mov
pop
test
adc
loopne
add
xchg
and
add
add
add
sub
les
pushf
jmp
dec
sub
in
or
fidivl
sti
jmp
mov
add
leave
fmull
daa
cmpsb
cmpsb
jge
loopne
aam
movsl
pop
test
les
jae
xchg
mov
and
sub
pop
jno
or
jmp
movsl
push
in
fiaddl
insb
iret
fdivrs
test
es
test
dec
iret
test
test
jp
xchg
jbe
pop
mov
pop
addl
lock
sub
fld
and
lea
dec
pop
jns
sets
dec
xchg
lret
fwait
loope
sbb
inc
int3
sbb
inc
add
mov
xchg
lahf
aam
gs
loope
sti
sbb
inc
dec
sub
pop
xchg
mov
fdivrl
outsl
mov
mov
mov
hlt
lods
cwtl
movsb
or
push
dec
mov
aaa
push
icebp
je
decb
testl
inc
int3
ret
mov
and
push
mov
sbb
add
aas
add
dec
inc
add
add
pop
mov
mov
testb
ss
cli
popa
mov
and
cwtl
inc
mov
fidivrl
int
add
and
add
in
sub
jo
enter
inc
adc
add
pop
scas
mov
sahf
jecxz
in
jo
sub
insb
sti
rolb
loope
xchg
inc
add
add
filds
add
idivl
adc
outsl
cli
pop
mov
inc
add
jae
das
mov
pop
ficoms
lock
jmp
xlat
dec
outsl
lcall
pop
jle
dec
adc
js
fcoml
push
loope
mov
insb
and
add
loope
rclb
inc
add
pop
les
popl
ja
shrb
jo
lods
fnsave
clc
sub
leave
sub
push
lret
mov
dec
into
sarl
pop
jns
mov
std
push
inc
imul
cmpsb
mov
je
jl
leave
stos
les
movsb
push
cmp
dec
jnp
add
std
cwtl
repnz
popf
cmpsl
divb
adc
dec
jns
and
push
inc
es
insl
mov
js
or
add
sub
std
pop
mov
mov
addb
add
insl
out
inc
pop
mov
add
arpl
push
shll
mov
cmpsb
adc
mov
push
xchg
cmpsl
push
adc
xchg
repnz
add
dec
jb
fstpl
data16
movsb
inc
adc
mov
jb
std
add
xchg
ja
push
pop
mov
add
incb
ret
cmp
add
dec
mov
mov
add
das
mov
and
ljmp
adc
daa
mov
add
dec
adc
pop
out
out
push
sbb
shll
repnz
movsl
dec
mov
jl
dec
jl
jmp
jb
pop
notl
mov
test
cmp
add
add
mov
push
in
sti
mov
jb
pusha
add
dec
outsl
xchg
popf
movb
out
in
movsl
testb
or
jp
and
test
sbb
les
incl
jg
lahf
lcall
mov
pop
test
das
jo
add
fisttpl
fsubl
pop
aas
jnp
cmpsb
pop
rolb
pop
jmp
mov
lahf
sub
icebp
push
cmp
add
rcrb
xchg
fisubrs
jns
dec
or
sub
call
push
enter
add
int3
inc
push
add
jne
xchg
mov
lods
in
mov
idivl
fs
or
shrb
stc
mov
icebp
jb
dec
xchg
mov
jp
add
or
sti
jo
nop
xchg
mov
add
idiv
das
fcmovne
pop
pushl
loopne
push
xchg
aas
sub
jb
mov
pop
scas
popa
dec
xchg
stc
fs
ljmp
fstl
jae
xchg
sbb
mov
je
add
xor
popf
xchg
mov
aas
jne
add
je
adc
sub
iret
hlt
dec
popf
push
clc
sbb
mov
jl
aaa
xor
lret
es
lods
mov
inc
add
pop
push
pop
jle
je
fcompl
or
out
js
dec
jmp
icebp
les
xchg
mov
mov
sbb
mov
inc
iret
les
rorb
xor
and
cli
stos
dec
fwait
aam
xchg
stc
popf
jo
xor
add
xor
mov
push
mov
lahf
jmp
xor
fsubs
add
mov
add
and
sub
jmp
or
pop
push
gs
pop
insl
ret
inc
imul
cmp
add
mov
aaa
gs
mov
or
add
nop
ret
add
dec
mov
popf
mov
aas
insb
test
pop
fstp
repnz
add
lods
xchg
add
inc
adc
adc
cmp
sbb
je
mov
add
xor
test
jmp
rol
add
mov
loope
div
mov
outsl
cmp
add
sub
mov
adc
jmp
mov
jg
adc
mov
in
mov
jae
mov
es
clc
inc
lods
insl
adc
sbb
testl
sbb
sbb
das
mov
mov
movsl
daa
or
je
rolb
mov
fistps
ljmp
fs
test
add
aas
or
add
stos
shll
lret
add
aad
adc
jmp
mov
add
dec
subl
xchg
mov
aas
pop
ja
push
xor
aad
dec
test
pop
and
adc
fnstsw
imul
pop
xor
lret
mov
push
xor
push
cld
ss
sbb
std
mov
jle
ljmp
sbb
mov
inc
add
jae
sbb
xor
and
cmp
xor
jae
clc
lret
pop
xchg
stc
rol
ficompl
loop
divb
inc
inc
mov
mov
sbbl
xchg
mov
xchg
or
std
dec
in
push
add
adc
inc
add
dec
nop
lock
cmp
movsl
xlat
std
xchg
frstor
outsl
adc
or
cmp
pushf
imul
xor
js
xor
std
cmp
movsl
jg
xor
out
clc
sub
insb
add
je
jg
or
push
mov
scas
mov
sbb
test
add
add
bound
add
pop
popa
addb
js
in
lahf
bound
int3
pop
mov
xchg
rorl
push
imul
bound
sub
jbe
xchg
outsb
ja
gs
mov
mov
pop
inc
and
ficomps
dec
xchg
sbb
add
in
fs
add
pop
test
cmpsb
icebp
outsb
jp
cltd
fcompl
mov
add
xchg
sub
jae
pop
jb
jae
add
or
aam
xchg
dec
add
jbe
outsb
sahf
cld
sub
sti
jp
pop
jg
pop
in
xchg
jnp
lret
and
jl
add
mov
outsl
pop
cli
or
adc
add
add
push
add
cmp
ljmp
mov
jge
sbb
stos
loopne
add
je
rcll
push
popa
scas
arpl
xor
mov
loop
gs
fcoms
js
movsb
jno
or
and
cltd
imul
popf
cli
xor
dec
fs
adc
fmul
jo
enter
mov
gs
hlt
push
mov
add
add
mov
aas
cs
movb
in
movb
dec
aas
insl
ret
mov
data16
mov
inc
mov
adc
add
nop
addb
add
mov
scas
xchg
mov
xor
sbb
jnp
insb
fsts
movb
enter
out
sub
addb
xchg
jae
pop
xchg
cmpl
dec
es
sub
add
popf
sbb
scas
inc
add
add
jg
and
add
repz
cs
jnp
xor
add
insb
push
xor
addb
add
fildl
lock
int3
xor
fiaddl
sbb
jmp
xchg
clc
testb
mov
mov
dec
cmp
sub
push
sub
add
stos
adc
lahf
push
add
pusha
add
int
push
cmp
push
stos
mov
stos
sub
cmpsb
notb
out
sub
sbb
sti
mov
out
cmp
repnz
out
sbb
in
sbb
jae
add
or
jmp
mov
sub
push
xor
rcrl
std
ljmp
add
faddp
add
xor
pop
push
add
stc
or
sbb
add
cmp
xor
shl
dec
call
push
pop
mov
or
sbb
xlat
push
adc
mov
imul
lods
add
sub
addr16
in
add
adc
nop
dec
pusha
add
add
cs
mov
pop
and
dec
bnd
pop
mov
insl
lods
pop
mov
add
push
add
mov
cmp
mov
out
cltd
xlat
mov
ljmp
cs
push
add
fsubr
xor
jmp
jae
roll
push
jl
test
or
mov
add
rolb
and
add
lcall
add
push
movb
mov
callw
mov
and
cmp
add
sbb
xchg
enter
idivl
cmp
adc
cwtl
shrb
cmpsl
xchg
mov
repz
dec
hlt
imul
inc
add
addb
push
shr
aaa
adc
fistl
addb
clc
and
jno
hlt
xchg
jge
inc
add
std
js
popa
inc
push
add
bound
test
pop
repnz
cmp
leave
fisubrs
aad
add
inc
add
addr16
insb
nop
fbstp
sbb
jp
jae
add
and
lea
add
mov
add
pop
scas
sbb
sahf
push
add
stos
mov
dec
add
adc
movsl
dec
adc
sub
insl
bound
inc
add
cmp
add
lret
popl
add
add
or
jl
add
sbb
adc
scas
ffreep
add
repz
int3
jbe
roll
mov
mov
call
ret
add
imul
cltd
scas
mov
cmpsb
jle
xchg
scas
push
orl
std
jl
xchg
add
sar
in
mov
mov
dec
xor
sub
shlb
jp
int3
lret
add
sar
test
cs
add
adc
roll
mov
outsb
cmp
hlt
push
adc
push
popf
cmp
ss
in
ja
add
gs
jne
test
sti
adc
mov
jae
cwtl
repnz
inc
add
aad
fldenv
add
stos
nop
pushw
movsl
imulb
adc
push
and
arpl
in
push
popa
sub
ljmp
clc
aam
inc
xchg
subl
addb
int
xor
in
or
testb
addb
rorw
jg
aas
pop
cli
adc
add
add
push
cs
inc
jae
mov
into
xchg
int3
in
sbb
mov
xchg
shlb
cmp
mov
cltd
push
lret
in
scas
or
js
addb
leave
js
movw
addl
daa
lock
mov
adc
test
dec
ds
mov
js
or
adc
and
mov
repz
sbb
rolb
testl
fs
add
ret
cwtl
inc
add
call
repnz
addb
adcl
pop
push
lcall
jl
sub
cmp
lretw
iret
xor
pop
mov
dec
sub
int3
lcall
call
mov
add
stos
js
in
out
add
pop
das
dec
mov
aam
add
stos
aad
xchg
push
js
ja
movb
cmc
and
subl
push
sub
push
in
xchg
mov
ljmp
shlb
mov
or
divb
mov
sub
in
sahf
push
pop
cmp
add
ljmp
add
test
sbb
sarl
xchg
mov
cs
mov
or
lret
std
cmpl
mov
jmp
lods
decb
pusha
add
push
add
add
inc
add
mov
imul
outsb
pop
stos
out
push
in
aas
mov
jnp
add
mov
add
jle
push
mov
mov
pop
hlt
adc
add
aad
cld
imul
add
pusha
add
pusha
add
popa
repnz
fdivrs
out
lock
jo
into
pop
int
fldt
add
fnsave
outsb
pop
imul
loopne
or
jge
or
rorl
outsl
rcl
hlt
sbb
add
mov
mov
sub
xlat
ss
xor
cmp
adc
pushf
nop
or
and
jb
adc
sub
fcompl
cwtl
inc
sti
sbb
mov
mov
jae
push
ret
add
lock
mov
stc
push
mov
push
add
clc
call
mov
xor
dec
mov
sub
add
loopne
jno
bound
xchg
sarb
mov
mov
add
imul
pop
or
push
test
lcall
std
rcrb
lods
cmpsb
iret
mov
xchg
aad
mov
insl
das
sub
sbb
adc
inc
shll
data16
mov
jnp
mov
jmp
test
add
aam
cwtl
jno
daa
gs
inc
cld
and
add
stos
pop
outsl
dec
imul
mov
adc
mov
fistpll
inc
add
add
in
mov
mov
jg
lds
add
test
add
ret
jecxz
stc
sub
leave
aas
insb
add
mov
mov
inc
add
ficoms
fucomp
mov
sbb
mov
push
mov
mov
mov
jmp
clc
lods
js
add
icebp
xchg
repnz
and
xlat
add
sub
jno
xchg
enter
