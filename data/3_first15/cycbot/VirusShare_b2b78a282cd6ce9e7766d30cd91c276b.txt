mov
sti
inc
add
orl
push
ja
jmp
add
cmp
and
add
rcl
mov
mov
aam
pushf
rcr
pusha
add
ret
lea
inc
sti
and
mov
rol
lods
add
mov
add
fistl
xchg
pop
mov
insb
dec
push
test
add
lahf
jbe
sub
mov
mov
fs
push
xchg
ficompl
pop
test
pop
lcall
lret
and
jnp
push
addb
mov
sub
sub
add
ret
rolb
mov
movsl
filds
mov
add
add
std
xor
mov
add
call
call
jg
add
add
aad
addb
mov
jle
xor
xchg
mov
cmp
sbb
add
inc
push
and
mov
test
or
lock
add
mov
xchg
mov
mov
add
rolb
mov
or
and
stos
or
inc
add
mov
mov
xchg
cmovl
cmp
aad
add
leave
mov
pop
fidivrs
push
pop
pop
in
mov
lds
xor
or
add
mov
sti
leave
sti
cmp
mov
aad
add
inc
orl
clc
iret
inc
jp
xchg
lock
sub
test
jnp
jl
fwait
aas
jno
push
addb
icebp
mov
aaa
add
ds
sbb
push
lcall
jmp
pop
mov
mov
mov
rolb
insl
rolb
scas
add
arpl
mov
clc
std
push
test
ds
add
add
cmc
std
int
fs
xchg
add
add
mov
add
add
stos
ror
jo
mov
jo
mov
mov
lahf
add
add
add
mov
ss
add
add
mov
add
add
mov
add
mov
add
add
adc
and
add
scas
jmp
add
mov
mov
add
add
add
std
test
pop
jmp
add
adc
sub
sub
add
add
add
outsl
pop
jl
std
mov
jae
addl
mov
jbe
add
std
sarl
fnstsw
enter
add
jl
or
xor
cld
aaa
add
stc
inc
jg
cld
sbb
xchg
cli
push
add
mov
add
push
jle
cli
test
mov
jl
add
jle
or
add
add
or
push
ret
add
xor
mov
adc
lahf
jp
mov
pop
not
add
add
mov
add
mov
pop
pop
pxor
xchg
add
mov
dec
or
inc
incb
add
add
sarl
divb
jp
add
add
add
jp
std
popf
jg
add
add
add
mov
or
xchg
add
add
add
add
daa
jle
or
adc
mov
adc
or
inc
push
pop
add
mov
add
xchg
jp
add
add
std
js
push
imul
loop
mov
xchg
add
decl
ds
add
mov
ret
add
mov
iret
cmc
and
mov
pop
lahf
add
pop
je
pop
cmpsb
push
repz
cmp
add
mov
mov
std
or
or
sbb
add
jo
mov
and
mov
mov
mov
scas
cmc
repz
fimuls
and
add
mov
ja
add
add
push
add
mov
jae
xchg
adc
sti
in
add
sbb
je
adc
add
jp
pop
push
adc
fsts
iret
stc
cmp
and
aas
jo
mov
repnz
and
aad
aad
cld
js
xor
add
sbb
rolb
mov
cs
mov
add
jmp
ds
push
add
pop
in
xchg
sbb
add
dec
aaa
adc
mov
xchg
int
lcall
inc
stos
mov
sub
sti
and
mov
inc
lock
or
sbb
fwait
inc
add
mov
mov
pop
hlt
std
dec
mov
add
xor
mov
ficompl
inc
aad
pop
sub
int3
push
add
mov
mov
and
mov
in
mov
add
adc
mov
mov
or
mov
mov
add
mov
loop
mov
add
test
scas
jo
mov
add
inc
add
mov
addl
mov
inc
test
lret
pop
ror
xor
mov
in
rolb
daa
jg
push
add
xor
dec
cmpl
mov
mov
mov
ret
imul
dec
mov
popa
and
arpl
test
add
int
add
pop
xchg
jno
xchg
mov
pop
cld
stos
push
je
mov
fnsave
enter
rol
add
leave
jno
cmova
in
dec
cmpsl
cmp
outsl
inc
add
push
add
mov
das
adc
sbb
mov
xchg
add
and
mov
add
stc
mov
mov
mov
add
add
mov
in
adc
mov
mov
outsb
insl
sahf
xchg
add
push
pushf
push
add
pushf
out
mov
js
ljmp
sub
adc
sbb
cmc
xor
popf
add
mov
repz
cmpsb
daa
sub
dec
imul
adc
out
push
add
imul
fdivrl
inc
add
out
shll
lods
xchg
add
mov
jo
mov
or
adc
pop
jno
add
std
ds
add
loop
sti
in
insl
push
push
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
aam
sub
sub
mov
add
loope
icebp
inc
repz
push
add
jbe
imul
sub
adc
mov
push
push
push
add
mov
adc
cltd
dec
js
jmp
addr16
fadds
pushf
insb
push
add
xor
sbb
iret
aaa
xchg
das
faddl
mov
dec
mov
aaa
push
add
pop
gs
mov
jnp
mov
push
imul
mov
mov
sbb
push
loope
lock
and
mov
push
sub
sbbl
jae
sub
aaa
test
add
dec
fdivl
xor
aaa
xor
xchg
dec
out
pop
cmp
scas
sti
sarl
and
scas
push
mov
test
stc
lahf
xchg
jo
mov
jb
mov
movsl
sti
adc
mov
pushf
sub
and
jl
mov
insl
push
add
mov
xchg
xchg
ficomps
loop
mov
push
cmp
sti
add
xchg
jne
decb
cmp
push
jb
mov
mov
or
mov
andl
jge
stos
jecxz
in
jae
mov
rcrl
add
add
jp
fadd
add
mov
fsubs
pop
test
add
push
mov
mov
out
addb
orl
ljmp
pop
nop
add
inc
mov
repnz
nop
add
mov
mov
add
mov
lret
outsb
ds
xchg
adc
or
mov
lods
sbb
imul
push
add
mov
ret
std
jo
mov
scas
into
into
cltd
push
sub
and
mov
mov
iret
aad
movsb
pop
bound
mov
and
mov
pop
mov
push
aad
negb
add
lock
cltd
in
fcomps
and
and
mov
pop
call
lods
mov
mov
xchg
mov
sub
int
sub
sub
jp
mov
sbb
add
add
or
mov
test
lods
pop
rol
sbb
add
clc
call
cs
dec
push
jle
cltd
adcl
mov
dec
call
add
add
xor
dec
xor
mov
fwait
xor
ret
dec
subl
pop
inc
mov
xchg
add
rolb
mov
clc
cmc
gs
mov
jbe
add
mov
les
sar
lahf
shrl
mov
push
mov
mov
ucomiss
pop
in
inc
loope
sahf
inc
movsl
js
add
dec
inc
sbb
dec
mov
jl
mov
add
add
mov
nop
add
xchg
pop
mov
inc
pop
or
fs
push
xchg
ss
mov
mov
sbb
test
push
jge
pushf
fistpll
fwait
xor
mov
sub
push
rcr
shll
add
add
mov
mov
scas
fidivl
out
in
lcall
sbb
les
pop
pop
sbb
xchg
adc
mov
mov
jns
pushf
pushf
ja
fwait
dec
stos
or
mov
add
stos
out
lcall
loop
mov
add
fs
mov
pop
push
add
add
sbb
add
xchg
rcll
mov
mov
and
mov
mov
push
repz
mov
pop
pop
movsl
addb
cmp
mov
add
push
aas
and
mov
std
lcall
adc
pop
mov
mov
cltd
test
add
insl
pop
mov
jns
add
and
stos
inc
lods
inc
lret
mov
mov
gs
mov
pop
fldl
and
add
jb
mov
inc
rolb
mov
mov
test
add
call
fwait
lock
jmp
cmc
xor
xchg
imul
daa
jbe
fwait
mov
hlt
jo
mov
cmpsl
sbb
xlat
ss
repnz
mov
fimull
daa
das
hlt
mov
xor
cwtl
outsb
lea
jle
ds
or
add
add
mov
dec
nop
add
aam
fcomps
sbb
add
mov
add
xor
mov
mov
rcl
add
mov
mov
jmp
mov
add
and
repz
add
jp
push
sub
jns
in
test
jg
in
cmpsl
pop
cmp
rolb
mov
ret
push
add
mov
dec
adc
popa
loopnew
mov
add
lods
bound
mov
and
cmc
and
mov
xor
mov
mov
ret
fists
mov
add
mov
jmp
bound
mov
rolb
mov
rolb
mov
mov
push
movsl
addb
in
push
pop
dec
mov
mov
addb
in
test
daa
addr16
bound
mov
xchg
xchg
add
mov
mov
cli
mov
notb
mov
popf
call
push
addr16
add
add
add
gs
add
data16
mov
add
call
mov
mov
add
jb
mov
xor
mov
push
or
add
fwait
cltd
adc
mov
insl
push
mov
mov
out
mov
or
inc
xchg
and
mov
lahf
or
sahf
jecxz
iret
popf
lods
stos
pop
mov
jae
cwtl
mov
xchg
pop
mov
inc
mov
dec
sbb
mov
sahf
out
push
xchg
xor
add
jne
or
das
or
mov
xchg
shll
inc
inc
pop
xor
mov
scas
cmp
cmp
jnp
add
repz
add
xchg
mov
jo
mov
add
lods
jg
and
mov
add
mov
imul
mov
adc
mov
inc
mov
add
pop
rolb
adc
lret
push
repnz
stos
pop
pop
add
push
mov
sub
sub
pop
addb
add
sahf
jno
test
movsl
sbb
xor
mov
pop
cmp
mov
add
repz
xor
mov
imul
jns
test
add
sub
lds
pop
ljmp
mov
sbb
add
jl
lcall
mov
imul
scas
cld
popa
rcrl
mov
mov
xchg
xlat
inc
jmp
cmp
mov
add
add
sbb
add
xor
pop
pop
mov
add
mov
adc
mov
push
xchg
cmp
scas
push
js
add
xchg
aaa
fucomp
or
push
movsl
mov
jnp
fbld
mov
fcmovb
add
dec
addr16
hlt
les
dec
icebp
mov
add
adc
or
jns
add
in
sub
mov
dec
movb
inc
xor
sbb
lea
xor
add
filds
bound
mov
xor
repnz
mov
mov
mov
sbbl
std
and
push
add
add
andl
lret
lcall
sub
jecxz
add
clc
add
aas
adc
mov
mov
lahf
xchg
rorl
icebp
and
add
mov
push
adc
js
pop
loop
mov
sbbl
sub
lret
add
xchg
adc
or
gs
aam
insl
pop
rolb
mov
and
mov
mov
in
test
push
pop
mov
add
sub
jae
push
addr16
call
cmp
add
stos
popa
cltd
and
mov
imulb
fdivrs
out
decl
ljmp
aas
scas
popf
sbb
bound
mov
lret
xor
push
mov
xor
addr16
sbb
es
movsb
xor
cli
fistl
mov
add
inc
pop
push
fmuls
cwtl
fcmovb
fildll
adc
mov
mov
je
cmp
loope
aas
xlat
mov
mov
popa
scas
push
dec
xchg
and
dec
add
mov
popf
fisubrl
jne
test
mov
fdivl
add
inc
add
pop
repnz
aad
aad
jmpw
push
adc
sbb
add
add
add
xor
pop
ret
lret
data16
inc
dec
fldt
fstpl
insb
pop
cmp
add
jecxz
sub
pop
xchg
add
int3
mov
ficomps
mov
sub
add
loopne
mov
stc
clc
aam
push
add
pop
pop
cmp
jmp
adc
rolb
ja
mov
add
int
sbb
jmp
jp
pop
dec
std
je
pop
cwtl
fwait
ja
add
addb
mov
lods
jl
mov
push
popf
test
add
sahf
cmp
add
les
add
sub
mov
sbb
mov
stos
int3
cs
jae
mov
mov
rorl
sbb
scas
shll
inc
cmc
cmp
mov
test
mov
arpl
aad
fwait
pushf
jno
push
mov
add
mov
mov
xchg
add
or
mov
mov
ficoml
xchg
and
add
call
cltd
enter
add
das
movsl
cmp
pop
movsb
adc
jl
add
imul
pop
pop
xor
mov
jg
adc
cmpsb
stos
mov
add
mov
sti
jg
sub
imul
push
add
or
sbb
add
jne
mov
dec
inc
testl
xchg
add
repz
xchg
addr16
mov
sbb
movsb
xor
push
add
jae
dec
int
mov
and
mov
mov
or
adc
mov
cmpsl
imul
cmp
add
push
add
sub
add
or
imul
and
xlat
add
mov
movsl
jle
cmp
out
hlt
fidivrl
inc
dec
outsb
pop
xor
mov
daa
addb
xor
push
icebp
push
add
scas
dec
dec
lcall
das
push
fisubrs
imul
jg
loopne
mov
mov
pop
adc
mov
mov
out
mov
push
jge
xor
ficoml
cli
dec
mov
mov
fcmovb
add
add
mov
iret
fsubs
mov
pop
bound
mov
add
repnz
fldcw
aaa
pop
cwtl
adc
mov
jo
mov
mov
rolb
jo
mov
sub
nop
add
jle
fstpt
jle
mov
jo
mov
into
test
negl
mov
mov
or
inc
add
pop
xlat
mov
movb
inc
subl
stos
and
and
insb
or
add
pop
mov
sub
std
jns
rorl
rcll
mov
out
stc
mov
add
mov
or
add
inc
in
adc
jmp
cmp
cld
stc
dec
push
mov
cld
andps
popa
cli
mov
mov
adc
mov
repnz
lea
push
add
in
push
jecxz
and
xchg
add
into
sbb
adc
add
lcall
inc
hlt
popa
aam
add
mov
lock
neg
jnp
sbb
add
movsl
add
iret
stos
fidivl
mov
lock
inc
sbb
lods
dec
cltd
dec
mov
sub
mov
lcall
push
jo
mov
pop
pusha
add
add
scas
inc
push
clc
xchg
rolb
mov
mov
mov
jbe
add
psllq
jae
add
jbe
or
sub
pop
mov
mov
ficomps
fldl
sbb
int
pop
sub
add
test
scas
fnstenv
js
aas
mov
adc
sub
inc
movsb
adc
mov
add
push
add
addr16
add
scas
das
insb
pop
lds
add
cmp
mov
xchg
mov
imulb
add
mov
add
mov
decl
incl
repz
pop
pop
adc
xor
push
negb
sbb
adc
sbb
xchg
or
pop
movsb
jns
mov
cmpxchg
push
jno
pusha
add
mov
sub
dec
jae
or
add
mov
add
jp
push
sbb
add
xchg
inc
cmp
jns
int3
and
cmpsb
inc
mov
arpl
cmp
xor
add
mov
mov
into
and
or
filds
inc
fisttps
pop
lahf
pop
lods
movl
add
jae
int
lock
mov
add
jl
rolb
mov
in
lcall
loopne
mov
xchg
push
dec
int3
dec
dec
fadds
fs
push
icebp
jg
testl
lods
bound
mov
cmp
aad
pop
pop
ja
inc
add
cmpsb
fidivrl
clc
adc
add
out
ds
das
cmpsb
cmp
ret
pop
pop
adc
mov
lret
sub
sar
gs
cli
mov
pop
mov
insl
xor
mov
add
add
xchg
outsb
addr16
mov
xor
and
insl
stos
lods
inc
add
rolb
mov
popa
std
mov
popf
fucomi
stc
sub
push
rolb
mov
or
stc
hlt
adc
add
mov
jnp
adc
mov
mov
jl
inc
lea
shrl
jbe
dec
sti
cmc
add
mov
add
rolb
mov
iret
inc
sbb
out
mov
mov
ds
imul
fimull
nop
add
ljmp
xchg
js
cmpsb
shrl
push
or
test
add
outsb
xor
mov
or
dec
fcomp
jge
lret
in
or
in
xchg
add
xchg
inc
add
dec
loope
call
in
jbe
dec
push
add
mov
dec
sub
lock
fmul
stos
addb
out
add
in
add
mov
inc
and
out
enter
ds
dec
lea
out
lds
filds
add
inc
int
push
insb
lds
mov
or
mov
loopne
mov
addb
jecxz
std
in
frstor
add
arpl
rolb
mov
mov
cmp
mov
leave
jo
mov
pusha
add
adc
mov
pop
les
jecxz
add
add
mov
cmpl
movsl
xchg
add
inc
add
jg
add
mov
ret
pop
in
add
lds
mov
dec
inc
inc
mov
or
pushf
push
mov
addb
jns
out
lea
add
pop
inc
out
cmp
push
fs
cltd
out
jno
xchg
dec
fldl
fs
outsl
mov
mov
jno
mov
cli
xchg
pop
mov
adc
mov
xchg
pop
dec
scas
fwait
or
mov
push
add
sub
add
test
add
cmp
sahf
mov
pop
outsl
mov
mov
sbb
retw
push
add
js
das
sub
mov
add
mov
addr16
ja
aas
adc
cmpsb
push
sbb
sbb
mov
test
lret
loopne
mov
add
mov
in
out
add
and
mov
test
mov
fwait
into
jno
test
loopne
mov
sbb
inc
cmp
mov
push
mov
cmp
push
negl
xchg
cmp
test
outsb
fdivs
shll
mov
jle
insb
cmpsl
fcompl
xor
lods
repnz
push
cmp
pop
mov
test
cs
cmpsl
jg
add
add
or
xchg
cwtl
fs
jmp
dec
xchg
adc
mov
int
xor
lods
fldl
ljmp
add
push
push
xchg
xchg
mov
aas
jo
mov
and
loopne
mov
sub
push
jno
sbb
mov
sub
roll
xchg
sti
mov
add
rcrl
xchg
ret
mov
dec
inc
leave
adc
adc
add
sub
xchg
push
jne
rolb
mov
add
jb
mov
mov
imul
loopne
mov
add
stos
cld
jmp
add
mov
jns
cld
les
aad
xchg
jmp
dec
push
adc
mov
adc
mov
or
das
js
adc
mov
mov
mov
int3
xlat
dec
xchg
lcall
dec
fisttpll
cmp
dec
adc
orl
imul
cmp
out
mov
inc
loope
clc
sbb
xchg
add
mov
rolb
mov
mov
dec
scas
inc
add
or
test
in
add
add
jbe
push
arpl
lret
fstpl
add
add
sbb
les
add
lcall
call
imul
xchg
cld
or
repnz
hlt
jae
loop
mov
cmp
sbb
dec
push
ds
sti
sbb
mov
fisubl
add
mov
mov
mov
shr
xor
jo
mov
out
frstor
jb
mov
addb
mov
mov
nop
add
add
xchg
daa
jno
movsl
out
addb
rolb
mov
xor
je
aad
add
adc
mov
add
push
push
int
mov
jp
xchg
push
test
sbb
push
sbb
mov
arpl
pop
ficomps
insb
adc
mov
add
add
push
push
add
cmp
jle
xchg
sub
pop
jecxz
dec
dec
push
stos
add
mov
xchg
pushf
data16
mov
ds
add
jo
mov
add
outsl
es
fdivr
xlat
testb
stos
stos
jp
sub
push
imul
add
stc
popa
jp
mov
cltd
xchg
stos
sbb
dec
mov
add
jae
push
cmp
pushf
jg
sbb
add
xchg
outsb
and
mov
add
sbb
xchg
dec
inc
stos
hlt
addr16
enter
jg
add
push
xor
xor
jns
icebp
mov
cli
mov
add
cmpsl
cmp
adc
aad
and
mov
mov
jle
inc
sub
xorl
xchg
push
add
das
adc
sub
add
add
jb
mov
sbb
test
mov
add
loop
mov
jp
mov
test
ret
sbbl
into
adc
and
push
xchg
das
fidivrs
insl
jle
xor
mov
jle
add
add
in
ljmp
insb
cwtl
fbstp
add
add
lahf
jl
daa
test
add
ds
cmpsl
rcrl
jecxz
or
aas
jns
add
add
fs
popf
mov
xchg
mov
mov
lea
or
xchg
add
sbb
or
mov
cmpl
ljmp
mov
mov
jecxz
les
push
stc
out
sbb
sbb
adc
mov
lret
jmp
ret
sub
lret
aaa
inc
add
and
mov
mov
roll
push
popa
xchg
add
cld
in
and
repz
or
xchg
add
adc
add
adc
mov
stc
jno
pop
xor
bound
mov
adc
mov
mov
xchg
push
pushf
popa
lcall
pusha
add
test
stos
push
add
add
or
adc
mov
mov
xchg
add
cmc
fst
push
stos
jecxz
in
jo
mov
or
icebp
fwait
lret
movl
push
and
mov
xchg
rolb
mov
push
hlt
dec
call
add
pop
cmpsl
sub
add
cltd
repz
cli
or
xchg
add
jge
add
cs
fnstsw
repnz
cli
addb
jnp
inc
mov
add
add
scas
mov
add
mov
cmp
add
or
ss
add
lret
mov
repnz
sahf
aaa
inc
sbb
add
ljmp
cmp
mov
adc
lcall
call
fcmovnu
add
sbb
add
movsl
lcall
jo
mov
sub
jno
add
cmp
out
add
or
pop
pusha
add
iret
addb
lahf
js
loope
jo
mov
add
push
add
jnp
fisubs
add
mov
into
pop
add
add
shll
insb
dec
xchg
xchg
sub
push
push
imul
mov
sahf
fbstp
cwtl
mov
insl
mov
cmp
out
lods
repnz
rcll
sbb
jb
mov
mov
adc
push
and
mov
ja
cld
mov
lods
add
adc
mov
imul
add
dec
jnp
mov
in
in
add
rolb
mov
push
rcrl
mov
mov
and
cmp
stos
popa
add
jne
ds
repnz
add
lcall
mov
lods
fsubrs
sbb
jg
test
aas
or
add
mov
push
add
loop
mov
in
or
sub
add
mov
je
dec
test
add
ja
inc
add
xchg
popa
push
inc
xchg
and
mov
xchg
xchg
add
sub
fistpl
mov
add
lods
mov
idivl
insb
lds
add
and
mov
andl
push
fildll
inc
sub
mov
add
add
and
sbb
movsl
stc
arpl
ret
mov
pusha
add
sub
jmp
add
add
add
pop
mov
sbb
inc
enter
pop
or
pushf
fs
leave
cltd
out
lahf
aaa
xor
mov
mov
add
mov
sbb
das
das
pop
popf
jl
jnp
add
xor
add
or
add
mov
add
mov
add
sbb
mov
or
fisttpll
sbb
bound
mov
scas
dec
xor
pop
popf
cmp
int3
mov
sub
fdivs
push
pop
push
loop
mov
dec
pop
xor
jp
add
add
bound
mov
ja
adc
or
add
cld
fsincos
sub
iret
dec
sub
dec
lea
in
jecxz
xlat
mov
sbb
sbb
pop
cmp
jge
jnp
jno
push
cmp
movsb
sub
push
std
jl
aad
add
mov
mov
jo
mov
pop
xor
jnp
lret
push
or
sub
mov
mov
pop
mov
adc
and
push
es
lock
add
mov
cmp
and
icebp
ret
inc
push
add
dec
iret
pop
jmp
stc
push
push
add
mov
repnz
xor
cmp
sbb
mov
xor
inc
pop
cld
mov
stc
jns
mov
push
imul
fidivl
inc
add
movsl
int3
repnz
xchg
out
cmp
sub
bound
mov
lock
cld
gs
mov
add
iret
jp
test
int3
jno
test
jnp
mov
mov
movsb
out
push
jmp
mov
mov
lods
or
sub
mov
aad
xor
lods
int
add
add
mov
out
jmp
sbb
fiadds
call
orl
fcmovnb
push
xlat
es
fdivrp
cwtl
mov
es
xor
ljmp
ficoms
filds
add
mov
fwait
add
mov
push
out
mov
add
mov
inc
add
adc
sbb
mov
lahf
push
fldt
mov
mov
add
add
lods
inc
cmc
addb
rolb
mov
mov
sbb
pusha
add
push
sti
lahf
inc
adc
mov
inc
lds
jecxz
push
pop
inc
cld
ret
cmp
adc
add
mov
repnz
stos
adc
into
mov
daa
cwtl
push
push
inc
mov
jge
mov
cmc
scas
addb
xor
xchg
xor
in
add
shrl
div
add
mov
push
clc
mov
pop
or
pop
cwtl
fprem
and
add
lcall
fwait
pushf
dec
jmp
add
mov
mov
add
fildll
add
lret
add
add
sub
popf
icebp
adc
sub
pop
adc
add
fwait
mov
popa
jl
add
mov
fcmovne
or
jecxz
jle
icebp
add
bound
mov
add
mov
fs
add
aam
popf
inc
xchg
and
pop
mov
push
cwtl
fildll
sub
int3
mov
fsubr
lcall
sub
mov
add
mov
add
call
xor
pop
sub
pusha
add
enter
nop
add
mov
sti
dec
lods
adcl
pushf
pop
sub
add
out
add
data16
addr16
push
mov
add
in
mov
pop
cmc
mov
add
std
dec
mov
cltd
cmp
fildll
mov
inc
mov
xchg
pop
push
add
add
mov
or
test
mov
in
int
mov
sbb
pop
jecxz
or
outsl
xchg
sbb
addb
mov
xor
xchg
rolb
mov
add
cmpsb
xor
mov
repnz
lods
jne
clc
xchg
aas
imul
jo
mov
jmp
std
push
ds
mov
cmp
lea
lock
lret
out
es
mov
insl
dec
bound
mov
pop
pop
hlt
test
sbb
lret
fnstenv
ds
pop
lds
dec
push
add
mov
ja
and
mov
dec
std
data16
ljmp
push
add
ss
ljmp
xor
mov
jle
add
mov
imul
sbb
mov
sbb
pushf
in
inc
test
add
add
fists
testl
add
das
push
xlat
rolb
mov
pop
ret
xor
cmp
push
leave
lea
mov
jae
addr16
pop
push
scas
jnp
std
add
mov
mov
mov
mov
add
pop
mov
mov
add
add
sbb
rolb
mov
add
and
mov
arpl
add
or
shrl
in
decl
ljmp
add
mov
pop
add
repz
and
pop
xchg
or
or
sbb
mov
jns
jge
ret
mov
mov
dec
cmpsb
mov
mov
xchg
xor
add
push
andl
scas
mov
mov
gs
ja
add
add
mov
dec
or
mov
scas
jge
out
nop
add
add
mov
dec
jle
clc
cmc
jns
sbb
fnstcw
mov
add
add
xchg
mov
mov
cld
in
mov
cmp
pop
sbb
sarl
lahf
and
mov
mov
adc
cs
mov
adcl
dec
fdivl
jne
hlt
das
bound
mov
add
add
cmp
pop
call
jb
mov
push
add
add
mov
test
icebp
pushf
aad
xchg
iret
xchg
cmp
imul
and
mov
pop
std
inc
add
in
int
cmp
push
mov
loope
xor
add
adc
jmp
stc
mov
loop
mov
icebp
lea
mov
push
mull
xor
dec
dec
push
xchg
aas
repnz
iret
insb
leave
adc
mov
add
jecxz
test
push
leave
cmp
dec
push
sub
mov
or
addr16
push
stos
mov
xchg
test
dec
lahf
and
add
mov
sbb
cmp
mov
pop
push
fwait
movsl
mov
push
add
jns
adc
jns
movsl
dec
sub
cmp
jns
pushf
int
add
imul
push
insl
cmp
mov
add
add
push
or
jno
mov
sbb
cmp
add
adc
mov
inc
add
mov
leave
sub
rolb
call
mov
sahf
mov
mov
and
jne
test
dec
cmp
jl
inc
mov
mov
enter
std
imul
mov
mov
mov
add
dec
pop
adc
jno
ret
jns
mov
mov
adc
mov
add
sbb
add
pop
add
gs
adc
scas
or
dec
xor
sub
add
cltd
mov
mov
and
add
lock
add
int
testl
loop,pn
mov
std
and
int
add
sbb
sahf
or
add
mov
lret
dec
fwait
mov
add
mov
add
cmpsl
popf
test
jle
aas
subl
sbbl
mov
jmp
mov
in
sbb
dec
nop
add
mov
sbb
mov
mov
pop
shll
add
xchg
add
mov
ret
dec
jl
mov
mov
pop
mov
jns
insl
nop
add
repz
add
repz
pop
mov
inc
sti
push
add
sub
mov
test
gs
mov
mov
scas
or
cmp
add
jecxz
sub
inc
add
ja
mov
adc
mov
mov
push
adc
adc
cltd
cs
arpl
sar
mov
enter
mov
push
mov
lret
scas
mov
sbb
adc
mov
add
out
addl
pop
aas
and
in
cmp
add
arpl
mov
test
push
add
sti
rolb
mov
loope
test
xchg
mov
sbb
jo
mov
es
cmc
push
add
mov
idivb
add
orl
in
int
add
sub
movsl
jb
mov
cmp
imul
pop
push
addb
lret
push
or
arpl
add
les
mov
das
sub
arpl
add
cmc
and
cmpl
sub
xchg
xchg
enter
mov
add
hlt
hlt
out
dec
mov
clc
les
jne
mov
popa
or
mov
cmc
inc
jno
std
roll
pop
das
mov
testb
add
sbb
stos
cld
lcall
add
push
xor
jns
je
pop
mov
test
lock
push
sbb
inc
adc
add
popf
mov
stos
jae
cltd
jbe
add
rolb
mov
call
mov
scas
mov
mov
enter
dec
aaa
cmp
push
and
mov
popa
mov
mov
adc
add
pop
cmp
sub
ret
mov
or
insl
jge
mov
add
mov
mov
jle
pop
cltd
push
mull
xchg
aas
jp
add
lret
cmp
inc
add
mov
pop
insb
cmovge
add
adc
pop
cwtl
ret
int3
xorl
xlat
pop
pop
mov
mov
cli
test
lods
cmp
mov
test
add
or
jns
xchg
lret
push
add
in
add
mov
push
out
rolb
sub
sbb
ss
sti
sbb
aam
addr16
jnp
ret
inc
add
das
mov
outsl
add
mov
out
sub
addr16
adc
mov
repz
mov
mov
cmpsl
arpl
mov
stc
clc
cltd
pop
dec
and
add
adc
in
inc
lds
cmp
xor
mov
jg
mov
xor
repz
adc
ret
mov
add
ljmp
sbb
add
mov
jl
loope
add
adc
pop
push
insl
xor
mov
and
daa
bound
mov
cmpsl
and
dec
sbb
lret
inc
add
add
adc
outsb
mov
testl
pusha
add
in
daa
or
xlat
dec
imul
mov
or
mov
nop
add
add
imul
test
jae
rorl
or
cmp
dec
js
pop
jne
movsb
fsubrs
fcoml
mov
cs
add
xor
mov
mov
in
sub
mov
add
repz
and
mov
fidivrs
mov
cmp
jp
rcll
jle
rolb
mov
out
es
pop
fwait
jl
add
add
pusha
add
rcl
jge
stos
testb
mov
mov
shrl
push
add
aam
cli
mov
mov
add
add
dec
mov
add
gs
dec
sub
push
in
push
inc
add
dec
jmp
mov
scas
push
push
popa
mov
cmp
sbb
add
imul
add
mov
jnp
push
sbb
add
mov
frstor
jo
mov
add
gs
add
mov
mov
mov
push
add
and
adc
mov
or
add
mov
and
ret
mov
xor
lea
sub
lret
or
addr16
out
lds
mov
mov
push
jp
scas
subl
adc
mov
pop
inc
aam
mov
add
leave
sub
mov
adc
lahf
xchg
fwait
je
and
mov
das
and
mov
pop
stc
push
inc
mov
xor
add
add
mov
dec
sub
pop
mov
xor
or
lret
std
cmp
lcall
aaa
jmp
inc
add
cmp
mov
fdivs
mov
mov
dec
repnz
add
lcall
addl
push
mov
sbb
mov
fcmovnb
mov
loopne
mov
add
insb
in
cmp
add
aad
cli
outsl
pushl
pop
lcall
cmp
ret
fwait
arpl
and
add
adc
mov
lret
mov
out
and
mov
stos
int3
and
mov
mov
xlat
jbe
pop
ljmp
add
icebp
fidivl
mov
xor
test
add
jmp
jmp
or
sub
icebp
inc
scas
push
add
das
inc
xchg
jo
mov
sbb
cmp
adc
fs
push
mov
sarl
and
mov
cmpsl
dec
out
movsl
or
add
icebp
cmp
mov
pop
sbb
adc
out
pop
out
xchg
nop
add
imul
adc
mov
cmp
push
jl
pushf
jbe
xchg
jns
fstps
mov
add
inc
fisttpl
mov
xchg
in
xor
sub
mov
add
pop
lds
push
movsl
or
jb
mov
test
scas
lea
mov
xchg
fildll
mov
mov
dec
les
and
mov
pushf
mov
dec
cltd
movsl
mov
mov
xor
add
add
dec
addb
fistps
xor
push
daa
pop
cltd
mov
repnz
lret
add
push
mov
rolb
jle
xor
and
mov
add
out
loope
xchg
insb
test
jno
insb
je
jg
lret
push
pop
mov
adc
mov
mov
orl
xor
call
fcmovnb
add
dec
insl
pop
mov
mov
lods
les
mov
or
jae
add
mov
out
dec
cmp
stos
frstor
rolb
mov
jb
mov
popa
inc
add
pushf
or
add
popa
sub
push
or
mov
add
cmp
ss
add
add
pop
out
mov
adc
add
jl
jne
sub
pop
and
mov
push
add
xchg
add
cltd
mov
sbb
jl
pushf
imul
test
pop
movsl
bound
mov
or
sub
add
or
jg
or
test
jmp
sbb
and
fs
add
jbe
into
mov
mov
jl
in
push
fwait
dec
mov
mov
or
test
scas
das
test
add
add
mov
add
sub
xor
add
data16
loopne
mov
add
push
cmp
pop
mov
adc
mov
add
es
js
inc
add
sbb
ss
pop
scas
pushf
test
add
mov
xchg
pop
pop
cmpsl
icebp
and
xchg
push
fnstsw
inc
add
out
mov
xchg
add
lods
mov
or
cmp
add
and
xchg
add
cli
insl
push
xor
push
lods
inc
int3
movsl
add
pop
and
or
jnp
pop
xchg
inc
es
out
xchg
pop
add
mov
jo
mov
dec
aas
out
sbb
adc
xchg
mov
int3
dec
jno
outsl
xchg
mov
pusha
add
cwtl
addr16
xor
mov
addb
mov
lret
rolb
dec
inc
in
popf
or
add
pop
jp
jb
mov
add
fs
lods
dec
mov
add
add
mov
add
lea
add
xor
mov
add
add
pop
push
inc
or
add
cmp
lret
and
mov
and
mov
mov
fwait
xor
mov
push
or
fists
pop
into
pushf
loop
mov
add
lcall
stos
imul
add
and
xor
mov
dec
cltd
and
mov
xor
mov
jle
pushf
cmpsb
jbe
inc
add
add
add
sbb
cltd
mov
loopne
mov
push
in
out
fistl
lea
aam
enter
test
loopne
mov
add
pushf
inc
and
mov
push
jne
iret
rolb
mov
cltd
mov
add
pop
xor
mov
cmp
and
add
sub
add
mov
fs
cmp
clc
add
mov
cmp
push
pop
divb
add
add
inc
and
les
ds
adc
fisubrl
add
or
mov
gs
and
push
add
or
add
and
ffree
add
ds
femms
testb
dec
xchg
enter
mov
push
add
cmp
sbb
fidivrl
and
add
jl
adc
mov
scas
or
clc
mov
bts
cmc
rdpmc
push
jns
pop
cltd
jb
mov
add
pop
adc
mov
xchg
push
add
mov
in
rolb
mov
push
pop
mov
mov
xchg
add
out
pop
add
mov
or
fnstenv
cmp
adc
adc
mov
add
out
das
xchg
sbb
cmp
pop
push
out
jno
scas
scas
add
add
pop
or
testl
out
jl
add
mov
fstpt
add
add
jp
fwait
xlat
add
and
mov
add
push
cmc
ja
daa
cmp
mov
loop
mov
pop
jmp
imul
mov
int
in
and
mov
fisubrl
loopne
mov
add
mov
add
push
inc
push
jmp
clc
pop
add
or
lcall
out
ja
in
and
add
mov
mov
pop
adc
mov
cmpsb
in
sub
mov
mov
jnp
shll
add
or
pop
je
mov
xor
add
cmp
add
adc
sub
sbb
sti
sub
mov
pop
jmp
rcll
mov
jns
cmp
push
jp
repnz
jb
mov
mov
push
or
imulb
jle
cmpl
pusha
add
jnp
push
add
xchg
sub
add
popa
mov
shl
hlt
or
jo
mov
pushf
inc
add
jb
mov
pop
stos
pop
fcompl
inc
jae
xchg
aas
push
add
sbbl
push
xchg
ljmp
mov
inc
add
addb
clc
addr16
jl
daa
mov
les
pop
xchg
push
popa
in
test
clc
mov
ss
sub
inc
rcll
sub
cmc
dec
xor
imul
ljmp
sbb
pusha
add
add
imul
pop
push
pop
push
aas
jae
leave
ds
add
addl
push
xorl
or
add
xchg
pop
mov
movl
xchg
in
add
mov
sub
in
mov
cmp
add
nop
add
loope
or
shr
or
add
xor
sti
fists
xchg
jbe
add
mov
mov
mov
stos
or
jmp
add
mov
sbb
push
add
fsubp
add
jmp
sbb
mov
movl
jmp
dec
stos
push
mov
enter
add
sbb
daa
clc
cli
and
mov
stc
jle
and
mov
ds
pusha
add
sbb
and
pushf
sar
push
or
add
add
jecxz
pop
pop
xchg
add
shrl
or
sub
pusha
add
mov
add
cmp
shll
xor
scas
ljmp
push
xor
fadds
adc
mov
mov
inc
add
dec
lcall
adc
mov
decb
jno
xchg
dec
or
movsl
inc
add
js
mov
sbb
repz
add
mov
jl
add
into
adc
cmp
or
add
sub
add
inc
add
outsb
fdivrl
stc
mov
inc
repz
add
jecxz
xchg
jne
push
add
dec
dec
into
in
add
jmp
mov
xor
popf
mov
mov
popf
sub
outsl
pushf
addb
mov
icebp
mov
mov
dec
push
add
or
add
mov
je
out
jns
sbb
outsb
mov
mov
cmp
mov
cmpl
imul
pop
arpl
aam
dec
icebp
adc
je
add
add
fisubrl
add
mov
mov
int
add
mov
out
push
cmp
out
ret
in
jg
cmp
xor
mov
mov
or
ficoml
add
mov
mov
scas
sub
loope
or
cmpl
sbb
push
call
std
push
and
mov
sbb
out
add
add
add
fs
jbe
icebp
int
test
arpl
cmp
add
add
mov
mov
add
jecxz
pop
dec
jns
and
mov
scas
gs
mov
push
idivl
test
movsl
insb
mov
mov
shll
mov
push
add
das
and
mov
add
cmp
pop
stos
jo
mov
outsl
push
cltd
mov
add
arpl
mov
inc
sub
mov
add
add
push
outsl
and
jbe
and
pop
xor
and
div
jns
mov
mov
mov
pop
lcall
mov
add
jbe
iret
dec
xor
ret
push
add
lock
add
add
rolb
mov
add
lods
out
add
add
stos
mov
jbe
jle
add
xor
mov
mov
mov
mov
ljmp
stos
mov
pop
xor
sub
test
pushf
addl
and
fimull
mov
add
mov
push
pop
jg
faddl
xorl
inc
pop
mov
mov
add
mov
sbb
pop
dec
test
push
lds
mov
rolb
sbb
gs
add
test
cmpsb
test
out
cmp
add
popa
sbb
int
jno
add
sbb
gs
sub
rolb
mov
adc
mov
jl
cmp
mov
clc
cmp
data16
push
sarl
add
add
scas
and
sbb
cwtl
jo
mov
push
add
mov
mov
int3
lret
dec
pushf
out
mov
mov
add
xor
and
or
js
add
add
adc
add
push
loop
mov
adc
push
pop
jge
jb
mov
fadds
test
jno
jl
aas
sbb
lahf
push
dec
xchg
add
mov
mov
add
je
ss
inc
int3
sbb
sbb
dec
daa
xchg
jne
jmp
add
ret
xor
mov
add
out
sub
add
sub
loope
pop
sahf
pop
out
jbe
add
orl
pop
inc
fs
faddl
jne
outsl
gs
ficomps
xlat
bound
mov
add
in
sub
inc
inc
pop
dec
xlat
addr16
into
lods
and
in
addb
jge
pop
cld
mov
jo
mov
mov
in
fs
mov
add
pop
ss
fildll
gs
int
xor
dec
lcall
jg
add
add
mov
and
jbe
jecxz
lea
xchg
icebp
xchg
sub
test
add
fimull
aam
lea
pop
ret
xor
add
decb
arpl
idiv
sbb
and
test
mov
adc
adc
mov
insb
loopne
mov
add
clc
jle
out
jne
add
dec
loope
inc
add
add
mov
sbb
dec
mov
add
add
rolb
fbld
insb
xor
mov
cmp
ja
sub
add
dec
fs
sti
push
adc
loope
add
add
add
add
or
dec
enter
and
andl
xor
mov
mov
lock
jns
sub
jle
adc
mov
add
gs
pop
inc
adc
daa
or
test
xor
inc
adc
mov
addb
lods
cli
js
jl
out
add
add
shll
dec
cld
jne
add
loopne
mov
sub
jmp
xchg
rolb
mov
xor
mov
fs
inc
aam
inc
addr16
cld
sbb
int3
ret
push
fwait
add
out
stc
mov
add
les
in
add
add
rolb
movlps
scas
imul
scas
jg
jg
popf
pop
negb
es
aaa
call
mov
add
rolb
mov
ret
push
cmpsb
test
add
inc
xchg
add
jge
add
jp
fnsave
rolb
cmp
fs
xchg
scas
sub
cmp
add
pop
es
fwait
pop
addr16
das
aam
sbb
mov
loopne
mov
xchg
add
mov
les
mov
aad
jmp
popf
mov
cmp
add
int3
push
and
movsl
bound
mov
cmp
and
fs
pop
jl
lea
icebp
push
addb
out
push
dec
mov
mov
mov
in
sbb
aad
popf
fistpl
add
mov
sub
lea
rolb
mov
fwait
mov
xchg
ror
mov
xchg
jb
mov
rolb
pushf
aad
rep
fistpl
or
mov
mov
ja
sub
lock
test
jmp
inc
add
sbb
stos
out
in
outsl
pusha
add
aas
dec
test
insl
cmp
mov
adc
nop
add
lods
sbb
sti
add
mov
scas
gs
fadds
jae
add
popa
dec
lcall
mov
mov
dec
sbb
fwait
sub
mov
jnp
test
dec
pop
imul
xchg
add
pop
lds
inc
xchg
incl
out
dec
das
adc
mov
add
insb
in
repz
sbb
mov
addr16
mov
or
mov
out
sub
dec
les
jle
push
cmpsl
nop
add
mov
cmp
push
xor
gs
push
push
add
add
mov
pop
pop
and
sbb
push
add
push
lret
addr16
and
stos
jge
sti
stc
sub
mov
outsb
mov
add
and
aad
roll
sbb
or
lea
and
mov
popa
out
jnp
dec
lret
mov
out
cmp
adc
mov
lds
add
and
mov
mov
test
sbb
inc
lods
push
popf
out
add
mov
inc
xchg
jne
jge
cmp
jae
lods
cs
mov
pop
int3
cmpsb
or
mov
mov
inc
out
add
imul
mov
xlat
sbb
mov
sub
inc
add
mov
int
rcrl
dec
push
mov
daa
lcall
cmp
jp
xchg
pop
mov
mov
int
and
inc
or
hlt
or
add
lds
test
mov
xor
mov
jg
inc
add
pop
nop
add
lods
aaa
and
imul
ret
rcll
and
decl
je
or
icebp
cmc
or
repnz
add
imul
mov
add
push
test
sti
clc
fcoms
sahf
sbb
mov
jb
mov
sbb
add
mov
mov
add
clc
cmc
fcmove
sbb
add
sbb
lds
bound
mov
push
aaa
iret
pop
pop
add
inc
cltd
cld
adc
add
add
pop
fbstp
stc
pop
ds
ds
dec
and
or
or
dec
movsb
rcl
adc
xchg
mov
push
mov
jle
repnz
jge
call
jb
mov
mov
loope
mov
mov
lea
mov
and
out
jnp
push
add
and
mov
push
std
mov
imul
add
int
push
push
add
or
mov
mov
sub
inc
in
jge
sub
add
mov
add
add
mov
add
dec
inc
sub
addb
jns
adc
mov
and
lds
into
mov
mov
fnstcw
mov
enter
pop
sbb
mov
dec
adc
in
add
sbb
dec
lahf
fisubrs
cmpsb
jmp
shrl
push
sbb
mov
fwait
cmp
add
dec
dec
stos
insb
push
add
add
add
outsl
cltd
sub
mov
mov
add
add
xchg
inc
pop
fistpll
mov
dec
xchg
daa
cmp
push
mov
in
add
mov
push
jecxz
sbb
lret
enter
jo
mov
cs
test
add
mov
subl
lret
out
repz
push
mov
pusha
add
mov
add
loopne
mov
ret
int3
add
mov
mov
xchg
mov
mov
sub
mov
sub
add
cmp
add
fadds
dec
mov
rolb
mov
test
sahf
out
push
cwtl
mov
subl
pop
mov
lods
xchg
lock
jb
mov
stos
or
lods
cmp
int
add
ficoml
outsl
std
repz
repnz
repz
add
loope
cld
pushf
pop
rolb
adc
xchg
xor
cmp
fists
fimull
andl
jp
dec
orl
mov
dec
dec
negb
or
pop
std
insl
or
insl
xor
data16
mov
xchg
jb
mov
lret
fcomps
out
roll
xor
jle
or
add
mov
std
or
loope
pop
lds
gs
jmp
cmp
mov
add
mov
xchg
inc
add
enter
add
sbb
add
dec
aam
add
add
mov
push
pop
and
stos
jl
add
jb
mov
jb
mov
add
and
shll
jnp
fsts
stos
icebp
rolb
mov
cmp
out
jge
sbb
mov
adc
push
popa
repz
mov
sbb
add
push
fs
pop
iret
imul
mov
dec
int3
aad
fwait
repz
mov
rolb
mov
clc
mov
xchg
ds
sbb
inc
loope
xchg
jmp
add
sub
mov
into
ds
js
rorl
mov
ss
pop
cmc
cmp
pop
mov
push
xchg
cmp
inc
lahf
dec
scas
fiaddl
into
push
xchg
add
push
aad
push
std
hlt
mov
roll
add
inc
fisttpl
mov
sub
mov
add
aaa
pop
pushf
push
out
inc
add
test
xchg
out
add
or
add
aaa
push
or
addr16
mov
xor
xor
mov
jl
sub
adc
filds
push
imul
jnp
sahf
loope
dec
xchg
and
mov
test
popa
sarl
je
pushf
mov
jl
movsb
jl
add
in
enter
mov
cli
mov
mov
add
push
cmp
pop
xchg
imul
mov
jbe
push
test
mov
test
mov
cli
and
fsts
dec
pop
sbb
mov
rolb
inc
addb
jmp
add
inc
push
hlt
cmp
cmc
dec
movsb
lret
inc
icebp
mov
push
or
add
je
dec
sub
sbb
inc
add
rolb
mov
mov
or
mov
mov
out
dec
outsb
stc
and
addb
xor
add
mov
mov
pop
pop
scas
ret
push
stos
jb
mov
daa
gs
popa
bound
mov
pop
enter
int
adc
mov
add
mov
popf
lret
sbb
mov
scas
lock
repz
mov
sbb
addb
decb
shrl
mov
add
mov
sub
outsb
push
inc
add
mov
out
inc
fstl
add
xlat
mov
stos
gs
push
ds
mov
add
push
jge
js
aam
add
xor
inc
jle
cmpsl
fdivs
mov
mov
sbb
pop
xchg
mov
sub
addb
pop
or
fisttps
add
mov
mov
mov
enter
scas
loopne
mov
dec
ret
rolb
add
add
push
repz
shll
mov
mov
mov
lds
or
push
jns
add
bound
mov
add
ret
xchg
add
add
aad
inc
add
mov
popf
sbb
add
mov
out
dec
jmp
mov
enter
mov
jo
mov
filds
mov
mov
adc
out
xor
mov
outsb
sbb
outsb
bound
mov
push
push
sbb
inc
nop
add
mov
sbb
or
mov
inc
add
test
push
add
aam
hlt
dec
and
mov
or
addr16
mul
add
es
add
in
nop
add
ljmp
inc
or
fwait
gs
pop
sahf
jmp
mov
add
mov
dec
add
lret
or
xlat
rorl
add
loop
mov
add
mov
lret
pop
inc
add
pushl
or
or
add
cmp
sbb
jg
in
imul
add
and
add
mov
flds
loopne,pn
mov
les
mov
fstl
pop
mov
stc
dec
push
jb
mov
lret
lods
lgs
ja
loope
push
movsb
decb
xor
fwait
and
xlat
and
mov
ljmp
sbb
aaa
pop
xchg
pop
xchg
fstpl
sub
cmp
movsl
jl
call
jne
int3
cwtl
adc
fsts
xchg
ss
mov
xor
mov
fs
imul
repz
add
xor
mov
arpl
xchg
sub
in
mov
mov
pop
mov
dec
adc
js
add
pop
aad
cli
push
add
mov
mov
mov
bound
mov
add
xlat
push
jg
pop
or
aad
adc
mov
cltd
test
add
int
add
add
lea
popa
mov
cmc
outsl
addr16
or
and
mov
clc
test
mov
test
dec
jae
xor
pop
out
repz
mov
mov
cmp
add
idivb
cmpsb
or
push
add
or
or
push
inc
add
add
dec
fucom
add
test
mov
cmp
mov
sbb
in
addb
mov
xor
mov
add
mov
arpl
jp
xchg
scas
mov
sub
cld
cmpsl
sub
add
dec
outsb
fcmovbe
xchg
add
ja
add
xlat
and
ds
mov
in
jmp
add
mov
mov
cwtl
inc
je
in
aas
sbb
test
push
add
popf
dec
test
scas
fs
into
mov
les
add
fdivl
mov
xchg
mov
loope
ja
dec
rcll
ret
imul
add
test
add
cmpsl
pushf
out
jmp
gs
notl
mov
add
mov
movsb
inc
cld
nop
add
add
dec
mov
mov
add
dec
pop
popa
clc
lret
mov
xchg
push
ret
mov
sub
add
sub
jl
inc
adcl
mov
mov
jmp
test
push
add
bound
mov
sahf
pop
fisubl
mov
pushf
sbb
push
int
and
mov
push
pop
or
add
ret
jnp
es
mov
mov
xchg
mov
out
jecxz
pusha
add
outsb
adc
mov
les
dec
mov
mov
and
gs
dec
fcoml
mov
add
sub
add
imul
mov
mov
repz
or
or
cld
loopne
mov
out
mov
addb
sbb
sbb
sub
add
sbb
push
adc
or
pop
lret
roll
sbb
dec
mov
add
add
idivl
mov
rolb
mov
cmp
add
les
add
je
dec
lods
xor
mov
add
es
out
add
mov
loope
lock
cmp
pop
test
sub
mov
cmp
loopne
mov
int3
outsl
mov
sbb
addr16
cmpsb
mov
imul
jmp
jge
rolb
iret
adcl
add
or
sub
cwtl
decl
out
sti
cmp
nop
add
stos
ss
jbe
add
lds
mov
xor
out
aaa
push
push
fidivrl
add
add
mov
add
je
fidivs
sahf
cli
test
inc
xchg
loope
adc
mov
mov
ret
es
sub
jo
mov
mov
sbb
cwtl
cwtl
fiaddl
add
add
xor
mov
lea
mov
stos
mov
mov
xor
mov
ja
push
cltd
inc
cmp
sbb
mov
mov
pop
pop
cld
xlat
sbb
inc
add
push
jne
jecxz
and
les
xor
cmp
mov
cld
push
gs
inc
add
add
sub
fst
mov
xor
mov
jbe
add
mov
in
lea
es
add
mov
add
mov
cmp
xchg
ja
jle,pt
lock
mov
ret
mov
add
daa
icebp
stos
mov
xchg
add
push
pop
cld
pusha
add
jbe
push
inc
add
in
lcall
mov
test
pusha
add
popf
fnstsw
add
dec
sub
lret
rcll
fldt
das
fdivl
cli
mov
dec
das
mov
mov
push
add
inc
dec
test
mov
add
imul
xchg
sub
add
add
inc
mov
jecxz
xchg
ss
push
xchg
or
popf
pop
fistpl
or
sbb
push
pushf
mov
outsl
mov
mov
and
mov
add
int3
cmp
fisubrl
cmp
out
jle
add
rorl
cmp
rolb
jns
jne
xchg
pop
and
mov
sbb
mov
pusha
add
mov
adc
xor
jae
test
add
add
jnp
xchg
jp
add
jnp
cltd
lods
rolb
add
pop
aam
push
mov
mov
imul
add
ljmp
mov
mov
mov
push
in
movsl
dec
mov
repnz
dec
mov
lods
test
cmp
sbb
dec
mov
sbb
icebp
push
movsl
mov
mov
ss
add
xchg
mov
sub
mov
fisubrl
push
dec
adc
mov
push
pop
out
arpl
aad
addb
lods
ret
mov
mov
jg
add
xchg
push
test
dec
xchg
divl
adc
sahf
add
cltd
lock
jp
test
lods
cmp
fnstcw
data16
enter
add
mov
mov
xchg
jne
lahf
in
stos
les
lods
inc
cli
jecxz
call
push
std
fcomi
add
imul
dec
pop
push
fwait
add
add
addb
mov
mov
add
das
stos
flds
push
dec
push
add
adc
xchg
add
sub
adc
pushf
pop
pop
cltd
rolb
mov
js
jge
push
fsubl
aad
cmpsb
add
pop
inc
push
add
fadd
add
int
sub
sbb
fcomp
lahf
aam
aas
jle
mov
and
mov
jmp
dec
jmp
andl
loop,pn
mov
loop
mov
mov
push
ds
or
mov
mov
add
daa
insb
jo
mov
pop
in
out
inc
bound
mov
das
fidivl
push
add
insl
jnp
add
push
add
mov
and
add
and
mov
jmp
inc
das
xchg
jmp
xchg
in
inc
push
add
add
or
and
mov
jno
add
sub
jmp
cld
cmc
xchg
mov
dec
inc
dec
mov
mov
mov
shr
jmp
sub
test
add
sbb
dec
lock
stos
mov
xchg
insb
ja
inc
xor
mov
mov
lods
push
out
sbb
test
mov
and
aas
fdivl
fisubl
in
xor
cmp
push
out
gs
dec
mov
ja
out
add
outsb
fisttpll
add
mov
mov
in
dec
aad
sub
add
test
add
mov
mov
mov
sti
sbbl
outsl
aas
add
mov
push
add
adc
lahf
xor
adc
jp
push
lock
adc
push
scas
jp
mov
mov
push
cmp
or
xor
inc
add
sbb
add
je
fdivl
mov
add
in
ljmp
cwtl
mov
xor
inc
adc
mov
rolb
mov
and
mov
pop
adc
mov
adc
mov
pusha
add
add
lods
stc
jp
or
mov
sub
inc
add
push
imul
enter
xor
jg
es
negl
iret
test
xor
add
or
xchg
cli
add
mov
add
or
stos
cmp
out
sub
into
sub
add
ljmp
xlat
dec
js
ljmp
add
enter
sbb
loop
mov
mov
loope
dec
inc
aaa
dec
xor
mov
xor
mov
lods
stos
mov
pop
push
jecxz
sbb
mov
rolb
mov
sbb
add
mov
sub
lret
mov
mov
add
add
lret
push
add
pop
outsb
rolb
mov
xor
dec
dec
and
inc
fwait
push
out
add
dec
jns
pop
testb
add
mov
imul
mov
in
js
stc
adc
mov
sarl
mov
out
add
pop
pop
stc
xchg
data16
repnz
add
jno
mov
imul
inc
mov
les
pop
or
lock
aas
push
add
pop
and
add
adc
mov
out
jp
mov
jne
add
mov
icebp
mov
mov
frstor
iret
inc
add
mov
mov
mov
popa
scas
xor
jbe
aaa
in
add
add
mov
ret
lret
rolb
mov
push
pusha
add
jns
dec
lds
sti
cli
test
xor
mov
cld
imul
push
sbb
add
mov
jne
lcall
push
push
pop
lea
in
add
or
add
add
pop
cmc
xlat
lods
jecxz
sub
mov
cmp
adc
ficompl
sti
xchg
mov
xchg
fs
mov
test
fnstsw
inc
add
dec
imul
mov
add
out
pop
add
cmc
dec
ret
or
lock
js
dec
aaa
and
dec
push
sub
pop
sub
sbb
mov
adc
mov
rcrl
mov
mov
adc
mov
and
mov
and
int
lods
xor
mov
add
pop
mov
mov
xor
mov
xorl
jmp
push
add
add
out
cmc
push
cmovne
pop
push
mov
cmpsl
lock
popa
jae
addb
orl
mov
adc
add
orl
pop
xor
and
mov
dec
iret
pop
push
test
insl
out
mov
add
jmp
ljmp
add
jb
mov
gs
ret
fdivr
pop
add
ret
xor
mov
bound
mov
mov
dec
andl
jb
mov
or
add
push
mov
cmc
repz
scas
call
les
mov
mov
push
jle
clc
mov
addr16
lock
mov
out
dec
pop
sub
jge
inc
adc
mov
jp
xor
add
mov
add
mov
add
xchg
pop
xchg
imul
xchg
sahf
cmp
push
mov
add
les
addb
lods
sub
sub
imul
or
sub
mov
mov
mov
and
fstpl
sbb
in
call
std
fwait
jmp
test
add
jb
mov
dec
mov
mov
add
inc
or
ds
add
repnz
xor
jmp
mov
leave
ret
notb
mov
sbb
mov
test
sbb
adc
mov
push
add
add
add
mov
or
rcl
xchg
xlat
and
mov
icebp
rolb
mov
add
fistps
cli
cmpsl
mov
jge
mov
mov
mov
xlat
pop
ss
test
pop
insb
jle
test
daa
add
pop
fld
and
pop
dec
pop
test
jb
mov
fmulp
push
add
lods
or
xchg
mov
lods
push
xchg
push
aad
pusha
add
jmp
xchg
movsl
rolb
inc
pushf
mov
cmp
arpl
or
sub
adc
mov
inc
rolb
cmp
shll
mov
cli
push
or
push
add
data16
xlat
scas
xchg
sbb
mov
inc
and
or
jmp
sub
add
sbb
lods
xor
xchg
xchg
add
insb
xor
mov
add
lds
mov
pusha
add
and
add
repnz
cmp
cli
mov
mov
dec
dec
xchg
scas
inc
add
addb
pushf
std
rcll
add
push
aas
or
testl
add
inc
cs
mov
sbb
outsb
sub
add
dec
adc
popa
hlt
inc
add
xor
ja
mov
jecxz
addr16
jl
in
adc
rolb
mov
jp
push
mov
and
das
loop
mov
addl
cmp
add
out
mov
add
jg
into
in
mov
dec
inc
cs
inc
add
mov
cmc
gs
push
sbb
push
add
mov
fsts
loop
mov
mov
mov
add
push
add
mov
testl
jns
stos
mul
inc
data16
repz
add
mov
aas
or
repz
fists
call
cmp
cmp
scas
mov
mov
mov
clc
xor
mov
repz
xchg
add
test
cld
ss
and
mov
cs
push
pop
jb
mov
sub
mov
movsl
push
add
add
dec
push
imul
cld
mov
cmp
out
dec
faddl
add
int3
pop
and
add
shl
add
mov
jp
repnz
lock
sub
mov
imul
addr16
rcll
mov
test
push
test
jbe
mov
jo
mov
mov
mov
out
add
roll
xor
mov
jp
add
and
mov
inc
fst
pop
dec
mov
lret
into
inc
add
add
adc
mov
jae
jae
add
enter
mov
mov
out
push
xchg
ret
add
add
add
rolb
mov
lcall
scas
bound
mov
sub
xchg
and
insl
sub
outsl
mov
mov
scas
xchg
mov
inc
add
rolb
mov
test
frstor
mov
add
mov
negl
ret
pop
jns
add
pop
imul
daa
and
xor
add
and
mov
outsl
xor
mov
adc
lods
bswap
dec
dec
out
por
ss
out
pop
xchg
ss
mov
mov
mov
stos
push
mov
iret
sub
add
pop
xor
lods
xlat
mov
dec
push
or
test
pop
jo
mov
mov
leave
mov
pushfw
dec
dec
mov
mov
add
rolb
mov
mov
or
inc
daa
fwait
nop
add
fimull
jb
mov
ret
inc
add
add
add
arpl
add
mov
mov
rolb
cmc
dec
or
push
es
test
rorl
add
add
fldl
xchg
shrl
xchg
add
sbb
icebp
insl
test
push
mov
mov
pop
in
jnp
rolb
mov
add
sysret
inc
ljmp
add
add
xchg
cmpsb
cmp
lcall
sub
out
push
xchg
insl
jg
mov
insl
das
fadd
inc
flds
or
enter
mov
nop
add
lahf
cmp
and
xchg
xchg
mov
test
or
inc
add
mov
xor
pop
mov
rcl
push
js
and
or
pop
mov
mov
cmp
xor
ja
add
lcall
in
inc
cmp
adc
mov
fwait
sti
rolb
mov
fnsave
loopne
mov
iret
and
addb
repnz
ljmp
cltd
les
daa
mov
scas
xlat
loopne
mov
repnz
push
jne
fnstenv
fucompp
jecxz
add
inc
mov
mov
gs
add
ja
mov
cltd
mov
mov
add
mov
add
lret
nop
add
mov
fwait
aam
xor
imul
sub
lods
sub
add
and
mov
shrl
aas
or
jo
mov
outsb
sarl
push
add
xor
mov
mov
lds
aad
fistpll
std
js
add
mov
add
lock
mov
mov
mov
mov
add
repz
inc
scas
mul
pop
xor
mov
mov
mov
mov
mov
add
add
rolb
mov
push
inc
add
mov
into
add
pop
lods
jae
cmp
fldt
fwait
sub
pop
xchg
sbb
lods
movsl
test
stos
adc
cmp
mov
cld
adc
stc
mov
add
int
jae
jecxz
add
cli
push
add
test
in
shll
sbb
ds
sarl
mov
int3
jno
add
jle
mov
cmpl
fdivs
pop
shr
pop
adc
pop
dec
cld
push
rolb
mov
jno
mov
jle
dec
iret
in
int
loop
mov
push
jae
inc
pop
xor
cmpsl
sub
mov
lods
stos
jecxz
test
add
add
mov
repnz
xchg
add
xor
mov
xchg
pushf
jg
add
mov
into
rcrl
sub
cmp
mov
cmp
add
mov
add
cmp
inc
push
dec
aad
testb
mov
pop
mov
into
sbb
enter
mov
add
dec
dec
lret
rolb
mov
leave
ss
cmc
sahf
adc
mov
fbld
insl
push
mov
pushf
sbb
loope
pop
data16
lcall
add
cwtl
sbb
add
add
dec
popa
out
inc
add
test
sub
test
add
xlat
xchg
push
les
inc
add
lods
test
sbb
sti
adc
into
jmp
rolb
mov
pop
xchg
add
out
mov
les
xchg
adc
mov
add
add
mov
push
cmp
xor
fucomi
add
bound
mov
pop
lcall
push
push
ret
addb
add
xchg
xor
mov
adc
sub
add
adc
fcoml
add
push
cmpsb
sbb
stos
aam
cmp
cld
xchg
or
mov
add
and
mov
add
mov
gs
add
sti
rolb
mov
and
mov
mov
add
jl
loop
mov
aad
cmc
or
std
pushf
jp
or
pop
dec
sub
mov
movsl
imul
push
add
in
test
addb
inc
scas
sbb
lods
mov
test
outsl
mov
enter
mov
mov
mov
add
or
test
add
inc
add
add
mov
test
rcrl
add
inc
add
in
nop
leave
nop
jmp
cmp
add
dec
pop
push
mov
xchg
ret
add
add
add
add
jle
add
in
nop
leave
nop
jmp
add
mov
cs
fmuls
nop
nop
cld
jae
lds
or
push
add
pop
push
mov
xchg
ret
add
mov
and
inc
xor
add
loope
lods
add
push
add
add
dec
mov
mov
clc
repnz
nop
cld
jae
mov
add
xor
push
mov
nop
leave
nop
jmp
movsb
fadds
or
dec
pop
clc
repnz
nop
cld
jae
add
xchg
lea
mov
sub
sar
nop
nop
cld
jae
add
add
imul
shrb
mov
xchg
ret
jle
mov
add
add
dec
pop
clc
repnz
nop
cld
jae
bound
add
lahf
and
cmp
inc
add
and
repnz
nop
cld
jae
add
aad
cmc
xor
add
clc
repnz
nop
cld
jae
add
imul
push
mov
xchg
ret
xor
xchg
add
dec
std
add
and
push
mov
xchg
ret
add
add
jbe
xor
clc
repnz
nop
cld
jae
std
lea
add
lea
dec
adc
repnz
nop
cld
jae
add
cmpsl
pop
mov
jmp
add
add
movsb
iret
push
lea
push
xchg
add
pshufw
mov
pop
pop
clc
repnz
nop
cld
jae
movsb
lahf
lret
push
add
add
add
push
mov
nop
leave
nop
jmp
add
addr16
mov
and
clc
repnz
nop
cld
jae
xchg
add
mov
nop
cld
jae
add
call
add
movsb
clc
repnz
nop
cld
jae
add
add
out
cmp
xor
inc
add
xor
add
inc
clc
repnz
nop
cld
jae
lds
stos
test
nop
cld
jae
add
xor
leave
add
jecxz
ret
clc
repnz
nop
cld
jae
add
add
add
push
nop
leave
nop
jmp
add
push
xchg
mov
mov
mov
nop
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
add
add
scas
xchg
clc
repnz
nop
cld
jae
mov
iret
cmp
push
add
pop
fwait
push
push
mov
xchg
ret
stos
add
leave
jle
add
pop
adc
mov
add
imul
leave
nop
jmp
cmp
add
icebp
jecxz
xlat
xor
mov
mov
clc
repnz
nop
cld
jae
add
xchg
test
repnz
nop
cld
jae
iret
out
and
lret
add
clc
repnz
nop
cld
jae
aad
add
add
xchg
jae
add
add
repnz
nop
cld
jae
add
jle
xor
or
clc
repnz
nop
cld
jae
or
mov
mov
xor
repnz
nop
cld
jae
xor
dec
add
add
xor
inc
add
add
add
add
xchg
adc
rep
clc
repnz
nop
cld
jae
add
imul
mov
lea
nop
nop
cld
jae
add
add
popa
push
mov
nop
leave
nop
jmp
add
imul
add
push
scas
mov
clc
repnz
nop
cld
jae
xchg
shll
movsb
decl
push
mov
xchg
ret
add
add
mov
mov
clc
repnz
nop
cld
jae
add
add
add
rolb
pop
push
push
mov
nop
leave
nop
jmp
fimull
lods
add
pop
and
repnz
nop
cld
jae
imul
mov
add
push
mov
nop
leave
nop
jmp
aad
add
pop
add
clc
repnz
nop
cld
jae
mov
add
repnz
nop
cld
jae
bound
addr16
add
jbe
shl
clc
repnz
nop
cld
jae
aad
mov
mov
dec
es
clc
repnz
nop
cld
jae
and
dec
ret
nop
nop
cld
jae
add
pop
insl
push
clc
repnz
nop
cld
jae
jle
xchg
and
add
add
push
loopne
repnz
nop
cld
jae
mov
add
add
push
mov
nop
leave
nop
jmp
mov
fisubl
movsb
add
repnz
nop
cld
jae
mov
add
les
cmc
ret
mov
push
mov
xchg
ret
push
add
add
add
popa
push
nop
cld
jae
cmp
add
add
add
imul
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
lret
dec
push
jo
rolb
mov
nop
leave
nop
jmp
and
add
jle
add
sbb
leave
nop
jmp
add
add
add
add
clc
repnz
nop
cld
jae
add
add
add
add
cmp
nop
nop
cld
jae
add
lret
add
nop
cld
jae
add
sbb
iret
add
or
shr
clc
repnz
nop
cld
jae
push
pop
cmp
add
xchg
addb
sub
lret
push
mov
nop
leave
nop
jmp
lods
add
inc
loopne
mov
nop
leave
nop
jmp
add
sub
add
nop
nop
cld
jae
cmp
cmp
add
sub
add
clc
repnz
nop
cld
jae
rcll
outsb
and
mov
xchg
ret
cmp
les
inc
push
adc
clc
repnz
nop
cld
jae
add
add
push
push
mov
nop
leave
nop
jmp
add
add
lahf
mov
push
mov
nop
leave
nop
jmp
mov
or
add
inc
sahf
ret
push
mov
nop
leave
nop
jmp
push
add
add
add
pop
mul
outsb
call
clc
repnz
nop
cld
jae
sbb
add
sub
jbe
push
mov
nop
leave
nop
jmp
add
add
add
int
mov
add
loope
call
js
jge
add
inc
divb
clc
repnz
nop
cld
jae
add
lods
add
push
cmp
mov
xchg
ret
add
add
roll
inc
jge
push
mov
xchg
ret
add
add
add
cmp
lods
lea
clc
repnz
nop
cld
jae
lods
add
mov
bound
mov
push
push
clc
repnz
nop
cld
jae
mov
add
add
test
mov
clc
repnz
nop
cld
jae
pop
add
add
punpcklwd
add
repnz
nop
cld
jae
mov
add
pop
clc
repnz
nop
cld
jae
add
sub
add
icebp
cmp
add
add
push
mov
nop
leave
nop
jmp
add
push
mov
nop
leave
nop
jmp
add
push
or
xchg
mov
mov
push
mov
nop
leave
nop
jmp
add
std
mov
mov
xchg
ret
add
or
add
add
pop
je
clc
repnz
nop
cld
jae
add
push
pop
xor
clc
repnz
nop
cld
jae
fadds
imul
mov
nop
leave
nop
jmp
movsb
add
xor
and
lock
mov
xchg
ret
add
add
sbb
push
add
add
clc
repnz
nop
cld
jae
add
add
mov
lahf
je
clc
repnz
nop
cld
jae
dec
push
push
aam
pushl
push
mov
xchg
ret
sub
mov
push
mov
add
scas
stos
test
add
mov
pop
jae
repnz
nop
cld
jae
xor
add
movsl
adc
add
clc
repnz
nop
cld
jae
mov
xchg
dec
mov
clc
repnz
nop
cld
jae
add
add
cs
nop
cld
jae
xor
movsb
add
or
jb
clc
repnz
nop
cld
jae
lods
add
add
mov
xchg
ret
add
add
mov
cs
xor
clc
repnz
nop
cld
jae
inc
push
mov
push
roll
pop
push
inc
clc
repnz
nop
cld
jae
mov
add
test
add
push
mov
nop
leave
nop
jmp
lea
cmp
nop
nop
cld
jae
sub
add
cmp
and
mov
add
add
add
out
sbb
and
push
mov
nop
leave
nop
jmp
movsb
cs
add
add
test
push
mov
nop
leave
nop
jmp
pop
mov
test
add
clc
repnz
nop
cld
jae
dec
add
xor
clc
repnz
nop
cld
jae
out
dec
cmp
add
xor
nop
cld
jae
push
add
mov
cmc
lret
dec
push
mov
nop
leave
nop
jmp
cmp
add
xor
dec
outsl
popa
fs
repnz
nop
cld
jae
and
and
aad
mov
daa
insl
mov
clc
repnz
nop
cld
jae
add
add
jle
lea
clc
repnz
nop
cld
jae
push
add
push
push
mov
xchg
ret
add
dec
aad
add
jb
clc
repnz
nop
cld
jae
add
push
cltd
add
clc
repnz
nop
cld
jae
mov
stos
jle
jae
or
nop
nop
cld
jae
add
cmpsl
dec
jmp
clc
repnz
nop
cld
jae
add
mov
mov
inc
push
mov
clc
repnz
nop
cld
jae
add
fmuls
xchg
clc
repnz
nop
cld
jae
add
add
iret
xchg
and
and
mov
clc
repnz
nop
cld
jae
addr16
movsb
add
cwtl
jmp
or
pop
cmpsl
xchg
add
mov
add
xor
mov
nop
leave
nop
jmp
lret
add
add
add
fsubrs
fildl
xchg
ret
jo
add
add
add
clc
repnz
nop
cld
jae
bound
jbe
add
mov
mov
andl
mov
clc
repnz
nop
cld
jae
lea
call
mov
clc
repnz
nop
cld
jae
add
jo
sbb
movsb
clc
repnz
nop
cld
jae
xchg
add
add
sar
nop
nop
cld
jae
add
cmp
push
stos
mov
mov
push
mov
nop
leave
nop
jmp
add
mov
sub
cli
xor
clc
repnz
nop
cld
jae
mov
add
add
inc
sub
test
inc
add
add
dec
jle
mov
xor
add
push
mov
nop
leave
nop
jmp
add
push
xor
je
clc
repnz
nop
cld
jae
iret
and
add
clc
repnz
nop
cld
jae
add
jno
add
nop
nop
cld
jae
mov
push
add
mov
clc
repnz
nop
cld
jae
add
mov
xor
int
mov
clc
repnz
nop
cld
jae
add
pusha
add
push
mov
nop
leave
nop
jmp
add
movb
add
lahf
mov
mov
repnz
nop
cld
jae
verw
lds
add
idivb
clc
repnz
nop
cld
jae
add
je
clc
repnz
nop
cld
jae
add
into
add
clc
repnz
nop
cld
jae
add
fdivr
mov
clc
repnz
nop
cld
jae
and
jo
add
je
clc
repnz
nop
cld
jae
push
cmp
add
popa
add
repnz
nop
cld
jae
and
push
add
add
mov
or
repnz
nop
cld
jae
add
add
cmp
repnz
nop
cld
jae
movsb
add
loop
mov
popl
push
mov
nop
leave
nop
jmp
mov
mov
lea
sbb
nop
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
xor
add
push
push
loop
mov
push
mov
xchg
ret
add
sbb
push
clc
repnz
nop
cld
jae
add
add
jmp
mov
lds
add
add
add
in
nop
leave
nop
jmp
xchg
add
push
add
push
mov
xchg
ret
std
leave
add
lret
mov
icebp
clc
repnz
nop
cld
jae
add
cmp
add
add
pop
push
push
mov
nop
leave
nop
jmp
xchg
xor
movsb
addb
and
das
xchg
push
mov
nop
leave
nop
jmp
mov
cmp
or
add
leave
jmp
add
cmp
jle
add
add
push
add
mov
dec
cmc
sbbl
cld
jae
add
add
mov
add
or
clc
repnz
nop
cld
jae
imul
fcoms
in
nop
leave
nop
jmp
or
add
add
incb
shl
inc
add
mov
add
sar
repnz
nop
cld
jae
jle
dec
add
aad
inc
mov
call
mov
nop
leave
nop
jmp
mov
add
add
mov
nop
leave
nop
jmp
bound
add
add
push
sbb
clc
repnz
nop
cld
jae
cmpsl
sldt
and
add
sub
push
mov
xchg
ret
xchg
add
mov
xchg
add
in
nop
leave
nop
jmp
add
add
sub
jg
clc
repnz
nop
cld
jae
add
add
push
out
andl
add
repnz
nop
cld
jae
add
push
add
push
mov
push
mov
nop
leave
nop
jmp
iret
bound
mov
jne
push
mov
nop
leave
nop
jmp
add
dec
push
clc
repnz
nop
cld
jae
add
movsb
dec
add
mov
ret
clc
repnz
nop
cld
jae
add
mov
fstl
in
test
inc
sub
adc
add
sbb
nop
leave
nop
jmp
add
xor
add
cmp
cld
push
mov
pop
inc
add
add
add
push
add
in
dec
movzwl
push
mov
nop
leave
nop
jmp
lahf
add
mov
dec
push
jmp
add
add
add
add
add
add
movswl
clc
repnz
nop
cld
jae
add
bound
add
and
mov
push
clc
repnz
nop
cld
jae
fiaddl
addr16
add
and
cmp
in
nop
leave
nop
jmp
add
mov
add
lret
mov
push
mov
xchg
ret
add
bound
mov
add
clc
repnz
nop
cld
jae
roll
cs
add
add
clc
repnz
nop
cld
jae
add
out
add
push
mov
nop
leave
nop
jmp
jle
xchg
mov
add
clc
repnz
nop
cld
jae
add
add
and
clc
repnz
nop
cld
jae
add
aas
add
clc
repnz
nop
cld
jae
mov
xchg
cs
ret
jl
les
repnz
nop
cld
jae
add
add
mov
push
add
repnz
nop
cld
jae
add
add
dec
cmpsl
mov
ljmp
out
fiaddl
or
add
imul
cld
jae
add
push
jo
push
push
mov
xchg
ret
sub
mov
add
add
cmp
push
mov
xchg
ret
add
add
and
adc
mov
nop
cld
jae
add
fdivs
dec
dec
add
sub
clc
repnz
nop
cld
jae
mov
mov
addb
pop
mov
clc
repnz
nop
cld
jae
btl
mov
xchg
ret
or
add
outsl
add
push
mov
xchg
ret
add
fadds
mov
push
inc
nop
add
mov
xchg
ret
std
add
add
add
fiaddl
inc
rolb
mov
add
push
mov
nop
leave
nop
jmp
lahf
pop
add
add
push
pop
mov
push
mov
nop
leave
nop
jmp
inc
add
add
push
mov
nop
cld
jae
fadds
xchg
xchg
add
inc
xchg
pop
shr
push
mov
xchg
ret
lds
aad
add
mov
mov
add
and
inc
add
add
add
nop
nop
cld
jae
add
jle
mov
mov
xor
push
mov
xchg
ret
add
movsb
call
sub
repnz
nop
cld
jae
cs
add
xor
nop
nop
cld
jae
or
add
add
push
sub
nop
cld
jae
jle
add
sub
add
int
sub
ljmp
lahf
add
lods
and
bound
add
add
std
pop
mov
clc
repnz
nop
cld
jae
addr16
mov
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
xchg
push
or
repnz
nop
cld
jae
push
add
add
ljmp
add
str
sub
add
stc
xor
push
mov
xchg
ret
mov
cmp
and
add
push
mov
nop
leave
nop
jmp
add
mov
adc
mov
xchg
clc
repnz
nop
cld
jae
add
cmp
and
push
fsubl
popa
add
mov
xchg
ret
add
add
and
add
clc
repnz
nop
cld
jae
mov
add
call
repnz
nop
cld
jae
movb
add
add
lds
push
jl
test
repnz
nop
cld
jae
out
or
mov
push
mov
nop
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
xor
xor
dec
or
mov
nop
leave
nop
jmp
lods
and
lret
movb
cmp
clc
repnz
nop
cld
jae
add
xchg
movb
sub
pop
xor
mov
jo
mov
repz
mov
nop
leave
nop
jmp
mov
rcpps
mov
repnz
add
add
lahf
xchg
add
mov
dec
xor
push
mov
nop
leave
nop
jmp
or
add
test
pop
add
add
repnz
nop
cld
jae
add
dec
add
mov
nop
leave
nop
jmp
xor
stos
lahf
add
mov
add
add
add
add
mov
and
fiaddl
add
icebp
push
mov
nop
leave
nop
jmp
add
mov
incb
enter
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
bound
mov
repnz
nop
cld
jae
xchg
add
add
cmp
xchg
sahf
cmp
push
mov
nop
leave
nop
jmp
dec
mov
add
add
and
clc
repnz
nop
cld
jae
add
add
pop
fadds
push
fadds
xchg
ret
fsubs
add
or
mov
jne
clc
repnz
nop
cld
jae
lea
bound
dec
cmp
repnz
nop
cld
jae
add
mov
or
sub
mov
xchg
ret
add
push
movsb
add
xor
out
scas
jne
clc
repnz
nop
cld
jae
add
pop
jnp
rclb
in
nop
leave
nop
jmp
and
add
add
nop
nop
cld
jae
bound
add
call
mov
clc
repnz
nop
cld
jae
movb
sbb
add
push
jmp
add
lods
mov
cmp
iret
add
bound
mov
add
mov
add
repnz
nop
cld
jae
add
bsr
clc
repnz
nop
cld
jae
lds
call
out
add
add
in
nop
leave
nop
jmp
verr
mov
clc
repnz
nop
cld
jae
add
add
add
add
mov
nop
leave
nop
jmp
add
leave
and
xchg
add
adc
repnz
nop
cld
jae
xchg
add
xchg
daa
push
stos
push
push
mov
nop
leave
nop
jmp
mov
mov
repz
mov
add
jo
mov
add
stos
aad
scas
push
mov
mov
add
add
incb
adc
mov
push
clc
repnz
nop
cld
jae
add
movsb
mov
add
push
mov
xchg
ret
lret
add
add
call
repnz
nop
cld
jae
lea
or
add
outsl
lea
push
mov
nop
leave
nop
jmp
push
bound
fmuls
repnz
nop
cld
jae
add
add
add
inc
ret
rolb
lcall
clc
repnz
nop
cld
jae
add
movsb
or
mov
nop
leave
nop
jmp
out
push
out
add
add
dec
jl
clc
repnz
nop
cld
jae
add
addb
add
repnz
nop
cld
jae
lods
add
popa
clc
repnz
nop
cld
jae
lds
add
add
or
clc
repnz
nop
cld
jae
bound
aaa
fdiv
stos
jmp
incl
add
inc
cmp
add
add
add
nop
nop
cld
jae
jo
add
add
add
dec
or
repnz
nop
cld
jae
cmp
add
add
and
jmp
jmp
iret
shrl
push
add
add
add
repnz
nop
cld
jae
add
addr16
add
mov
mov
push
mov
nop
leave
nop
jmp
add
test
repnz
nop
cld
jae
add
push
sbb
repnz
nop
cld
jae
lods
cmp
add
add
mov
nop
nop
cld
jae
add
rcr
add
fidivl
xchg
fwait
je
clc
repnz
nop
cld
jae
add
call
xchg
adc
push
push
mov
xchg
ret
mov
call
add
mov
xchg
ret
jo
fadds
add
add
es
and
ret
or
mov
xchg
ret
roll
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
add
mov
push
mov
xchg
ret
add
cmp
cmp
add
test
nop
leave
nop
jmp
mov
add
mov
xchg
push
repz
nop
nop
cld
jae
add
aad
sbb
adc
mov
add
je
inc
clc
repnz
nop
cld
jae
iret
cmpsl
lahf
lldt
add
jne
clc
repnz
nop
cld
jae
mov
add
inc
pop
add
shlb
nop
nop
cld
jae
cmp
addr16
add
call
in
nop
leave
nop
jmp
jle
push
mov
in
nop
leave
nop
jmp
std
push
add
cmpsl
or
repnz
nop
cld
jae
add
in
mov
clc
repnz
nop
cld
jae
add
or
sti
clc
repnz
nop
cld
jae
mov
add
mov
push
mov
xchg
ret
verr
add
add
pop
push
mov
xchg
ret
add
xchg
mov
add
push
insb
add
clc
repnz
nop
cld
jae
cmpsl
lds
add
and
mov
mov
add
repnz
nop
cld
jae
lahf
add
add
repnz
nop
cld
jae
add
cmpsl
mov
inc
in
repnz
nop
cld
jae
add
add
lods
aas
xor
clc
repnz
nop
cld
jae
add
lea
inc
add
add
mov
clc
repnz
nop
cld
jae
add
add
mov
add
repnz
nop
cld
jae
lahf
leave
add
push
push
mov
xchg
ret
add
add
mov
mov
clc
repnz
nop
cld
jae
add
lret
push
xchg
add
add
mov
rclb
fldl
xchg
ret
xchg
jo
push
bound
imul
mov
xchg
ret
add
lahf
cmp
add
add
adc
mov
push
mov
xchg
ret
add
add
cmp
nop
cld
jae
cmp
and
add
add
fadds
ret
push
mov
xchg
ret
fiaddl
cmpsl
sub
cmp
mov
nop
nop
cld
jae
fsubs
add
xchg
je
push
clc
repnz
nop
cld
jae
add
sub
or
mov
xchg
ret
iret
add
add
call
nop
cld
jae
mov
lahf
add
out
add
inc
in
push
mov
xchg
ret
mov
add
out
jle
add
clc
repnz
nop
cld
jae
stos
vpmullw
leave
mov
mov
xchg
ret
add
bound
add
nop
nop
cld
jae
leave
lds
out
mov
imul
add
lahf
add
cmp
int
add
add
test
add
push
mov
nop
leave
nop
jmp
bound
sbb
repnz
nop
cld
jae
add
add
test
clc
repnz
nop
cld
jae
add
add
ss
out
popa
push
mov
nop
leave
nop
jmp
aad
call
shll
add
add
clc
repnz
nop
cld
jae
push
add
xorl
clc
repnz
nop
cld
jae
inc
flds
clc
repnz
nop
cld
jae
or
mov
lea
clc
repnz
nop
cld
jae
add
add
dec
add
clc
repnz
nop
cld
jae
pop
push
movsb
movsb
add
or
inc
add
add
add
adc
mov
clc
repnz
nop
cld
jae
xchg
add
lods
push
mov
enter
jbe
ficoml
add
add
fs
add
push
mov
nop
leave
nop
jmp
bound
mov
mov
out
pop
push
mov
xchg
ret
add
mov
add
xor
mov
clc
repnz
nop
cld
jae
add
add
or
nop
nop
cld
jae
lods
add
add
sbb
mov
nop
leave
nop
jmp
add
mov
and
dec
testl
push
mov
nop
leave
nop
jmp
xor
call
add
jo
mov
add
mov
clc
repnz
nop
cld
jae
add
xchg
movsb
and
inc
jp
jl
sbb
repnz
nop
cld
jae
packuswb
add
add
clc
repnz
nop
cld
jae
add
mov
jns
push
mov
nop
leave
nop
jmp
add
add
add
repnz
nop
cld
jae
add
lret
add
mov
adc
mov
fcompl
mov
xchg
ret
std
add
add
fsubs
add
leave
push
mov
xchg
ret
sub
out
add
adc
xor
clc
repnz
nop
cld
jae
push
add
inc
add
arpl
mov
nop
leave
nop
jmp
add
xchg
stos
aaa
xlat
inc
test
add
clc
repnz
nop
cld
jae
pop
add
push
add
mov
cmp
push
mov
xchg
ret
dec
add
xchg
lds
dec
call
clc
repnz
nop
cld
jae
push
bound
mov
jmp
nop
cld
jae
push
iret
add
add
add
sub
repnz
nop
cld
jae
xor
add
and
xor
mov
add
jmp
add
dec
add
jle
add
add
fidivrl
push
add
jne
clc
repnz
nop
cld
jae
mov
mov
jne
clc
repnz
nop
cld
jae
add
add
add
pop
call
clc
repnz
nop
cld
jae
mov
mov
push
mov
xchg
ret
add
add
add
or
clc
repnz
nop
cld
jae
inc
add
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
rorl
inc
mov
cmp
mov
nop
leave
nop
jmp
and
add
pop
sub
nop
leave
nop
jmp
call
add
mov
clc
repnz
nop
cld
jae
add
add
xchg
add
mov
clc
repnz
nop
cld
jae
add
lret
add
add
push
mov
xchg
ret
cmovle
cwtl
movzwl
clc
repnz
nop
cld
jae
push
mov
mov
mov
xchg
ret
add
add
add
mov
nop
leave
nop
jmp
add
add
push
add
mov
nop
nop
cld
jae
addr16
aad
add
add
clc
repnz
nop
cld
jae
movsb
add
repnz
nop
cld
jae
add
add
bound
mov
nop
leave
nop
jmp
mov
add
push
xchg
sti
and
push
mov
nop
leave
nop
jmp
dec
add
push
dec
add
inc
add
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
fisubl
std
add
push
mov
xchg
ret
add
or
sldt
stos
push
push
mov
xchg
ret
lods
add
add
pop
push
add
lods
test
push
mov
nop
leave
nop
jmp
add
add
mov
movsb
incl
sbb
add
xchg
add
stos
and
mov
xchg
mov
mov
nop
leave
nop
jmp
push
add
and
add
jmp
add
add
movsb
add
cs
cmp
not
push
mov
nop
leave
nop
jmp
call
rcll
xor
add
clc
repnz
nop
cld
jae
xchg
add
stos
pop
push
mov
xchg
ret
push
inc
aad
add
mov
clc
repnz
nop
cld
jae
or
call
mov
clc
repnz
nop
cld
jae
add
add
out
xor
mov
stc
push
clc
repnz
nop
cld
jae
add
add
iret
dec
pop
xor
mov
lret
xchg
ret
mov
add
add
push
repnz
nop
cld
jae
push
add
push
dec
add
mov
push
mov
nop
leave
nop
jmp
and
das
pop
clc
repnz
nop
cld
jae
add
dec
hlt
add
pushf
movzwl
clc
repnz
nop
cld
jae
and
jo
movntps
jmp
repnz
nop
cld
jae
add
or
add
clc
repnz
nop
cld
jae
mov
add
call
clc
repnz
nop
cld
jae
lods
mov
xchg
adc
nop
nop
cld
jae
xor
add
push
add
sub
clc
repnz
nop
cld
jae
sub
add
mov
mov
push
mov
nop
leave
nop
jmp
and
fmuls
roll
xchg
ret
xchg
add
mov
or
sti
push
mov
nop
leave
nop
jmp
lret
add
pop
or
lahf
mov
clc
repnz
nop
cld
jae
add
add
sti
add
clc
repnz
nop
cld
jae
add
add
iret
jbe
add
nop
nop
cld
jae
out
dec
add
mov
jmp
add
add
add
sahf
je
clc
repnz
nop
cld
jae
add
jae
push
push
mov
xchg
ret
add
sub
push
scas
mov
clc
repnz
nop
cld
jae
add
mov
add
lods
imul
push
mov
nop
leave
nop
jmp
add
cs
mov
hlt
adc
mov
add
clc
repnz
nop
cld
jae
jo
push
add
add
dec
push
push
mov
xchg
ret
cmpsl
add
add
cwtl
and
push
mov
xchg
ret
roll
add
call
stos
clc
repnz
nop
cld
jae
mov
add
mov
mov
nop
leave
nop
jmp
cmp
mov
bound
add
repnz
nop
cld
jae
add
xchg
pop
jo
rolb
aam
add
insb
ja
repnz
nop
cld
jae
add
loop
clc
repnz
nop
cld
jae
mov
mov
hlt
lds
mov
nop
nop
cld
jae
imul
add
push
mov
xchg
ret
mov
mov
pop
push
push
mov
xchg
ret
push
lds
add
jle
adc
mov
xchg
ret
push
add
leave
xchg
mov
add
jmp
push
cmp
add
mov
add
pop
adc
jl
je
add
clc
repnz
nop
cld
jae
add
call
clc
repnz
nop
cld
jae
add
cmpl
in
nop
leave
nop
jmp
mov
add
clc
repnz
nop
cld
jae
add
push
add
jmp
add
bt
add
add
mov
lds
push
mov
nop
leave
nop
jmp
mov
add
push
clc
repnz
nop
cld
jae
add
mov
dec
mov
push
mov
xchg
ret
add
xchg
inc
fiaddl
mov
loopne
mov
xchg
ret
leave
lods
add
fsubs
xchg
add
add
mov
nop
leave
nop
jmp
cmp
add
add
test
push
mov
nop
leave
nop
jmp
add
add
jge
clc
repnz
nop
cld
jae
add
mov
cmp
push
mov
nop
leave
nop
jmp
add
jo
mov
clc
repnz
nop
cld
jae
add
add
mov
mov
clc
repnz
nop
cld
jae
mov
fiaddl
cmp
gs
xbegin
jae
mov
add
and
sbb
mov
xchg
ret
xchg
push
mov
aam
add
push
call
in
nop
leave
nop
jmp
add
adc
repnz
nop
cld
jae
bound
add
sbb
push
lret
loope
jmp
cs
mov
stos
push
add
dec
push
mov
xchg
ret
cmp
mov
xchg
add
mov
clc
repnz
nop
cld
jae
add
dec
iret
inc
add
add
inc
dec
aad
fcos
dec
sub
push
ljmp
or
add
add
push
mov
xchg
ret
add
mov
sbb
push
pop
stc
mov
clc
repnz
nop
cld
jae
add
or
movb
add
add
mov
cmp
ret
iret
add
cmpsl
dec
add
mov
push
mov
xchg
ret
mov
add
push
xor
add
repnz
nop
cld
jae
add
and
add
add
cmp
push
mov
nop
leave
nop
jmp
addr16
cmp
or
popf
imul
clc
repnz
nop
cld
jae
add
add
fadds
mov
mov
out
add
add
dec
add
mov
mov
outsl
mov
push
mov
nop
leave
nop
jmp
cmpsl
mov
add
pusha
clc
repnz
nop
cld
jae
lods
and
add
mov
cmp
lcall
inc
add
or
add
add
and
add
clc
repnz
nop
cld
jae
add
cmp
add
repnz
nop
cld
jae
add
iret
stos
cmp
and
clc
repnz
nop
cld
jae
std
push
std
mov
add
and
pop
clc
repnz
nop
cld
jae
lret
add
add
xchg
bound
imul
nop
nop
cld
jae
add
add
add
add
sbb
in
nop
leave
nop
jmp
add
mov
push
push
mov
xchg
ret
mov
mov
add
push
pop
mov
clc
repnz
nop
cld
jae
and
add
daa
std
mov
clc
repnz
nop
cld
jae
push
add
add
jmp
add
aad
xchg
mov
jo
add
mov
inc
xor
clc
repnz
nop
cld
jae
push
add
and
das
mov
push
mov
nop
leave
nop
jmp
add
add
add
jmp
lahf
fadds
xor
add
add
lldt
movb
jne
push
mov
nop
leave
nop
jmp
mov
out
pop
clc
repnz
nop
cld
jae
add
push
add
add
clc
repnz
nop
cld
jae
add
movsb
add
add
inc
mov
sarl
mov
clc
repnz
nop
cld
jae
aad
add
mov
loope
adc
mov
add
call
clc
repnz
nop
cld
jae
push
add
addr16
divl
pop
mov
clc
repnz
nop
cld
jae
add
lea
push
mov
nop
leave
nop
jmp
add
add
add
loopne
mov
mov
push
mov
nop
leave
nop
jmp
and
mov
and
clc
repnz
nop
cld
jae
add
add
call
sar
repnz
nop
cld
jae
xchg
push
add
add
dec
pop
dec
clc
repnz
nop
cld
jae
call
add
std
mov
lds
test
repnz
nop
cld
jae
rol
add
clc
repnz
nop
cld
jae
add
lds
add
add
lcall
nop
leave
nop
jmp
add
cmp
cmp
push
mov
xchg
ret
mov
fadds
aad
add
call
add
clc
push
jb
add
add
add
lock
in
nop
leave
nop
jmp
add
imul
shl
add
cmp
out
pop
clc
repnz
nop
cld
jae
imul
push
stos
fmull
mov
cmp
ret
mov
lret
bound
push
dec
mov
push
mov
nop
leave
nop
jmp
push
add
bound
in
xor
clc
repnz
nop
cld
jae
movb
and
pusha
push
mov
xchg
ret
add
add
add
loop
clc
repnz
nop
cld
jae
dec
inc
push
movsb
mov
incl
imul
add
movb
cmp
push
mov
nop
leave
nop
jmp
pop
leave
lds
add
repnz
nop
cld
jae
mov
mov
pop
jne
clc
repnz
nop
cld
jae
call
clc
repnz
nop
cld
jae
add
mov
add
call
nop
nop
cld
jae
push
add
add
dec
add
mov
mov
nop
leave
nop
jmp
add
xor
and
hlt
insl
and
push
mov
xchg
ret
add
dec
add
call
clc
repnz
nop
cld
jae
movsb
lea
adc
lea
clc
repnz
nop
cld
jae
add
jno
jne
clc
repnz
nop
cld
jae
push
add
lds
push
mov
imul
add
add
test
add
rorb
fwait
outsl
lea
push
mov
xchg
ret
mov
and
nop
leave
nop
jmp
add
mov
add
dec
dec
cmp
clc
repnz
nop
cld
jae
add
add
dec
push
mov
nop
leave
nop
jmp
add
inc
push
add
stos
push
push
pop
call
clc
repnz
nop
cld
jae
cmp
out
mov
push
mov
xchg
ret
cmp
mov
inc
jne
mov
ja
fs
repnz
nop
cld
jae
mov
call
adc
repnz
nop
cld
jae
push
addr16
add
pop
push
mov
cmpb
add
inc
add
add
add
clc
repnz
nop
cld
jae
add
and
mov
clc
repnz
nop
cld
jae
add
and
add
push
sub
repnz
nop
cld
jae
add
xchg
and
xchg
add
addb
push
mov
clc
repnz
nop
cld
jae
roll
add
add
dec
and
clc
repnz
nop
cld
jae
add
enter
push
mov
xchg
ret
push
mov
jo
add
sar
mov
clc
repnz
nop
cld
jae
add
mov
sub
push
mov
nop
leave
nop
jmp
add
jle
add
jbe
clc
repnz
nop
cld
jae
lds
add
mov
clc
repnz
nop
cld
jae
mov
call
divl
pop
clc
repnz
nop
cld
jae
add
cmp
add
mov
adc
mov
nop
leave
nop
jmp
sbb
aad
dec
mov
clc
repnz
nop
cld
jae
push
add
add
call
push
mov
nop
leave
nop
jmp
mov
and
or
clc
repnz
nop
cld
jae
add
mov
xchg
ret
mov
add
add
stos
lahf
arpl
push
add
add
mov
nop
leave
nop
jmp
add
add
mov
mov
add
cld
jae
add
add
fimull
nop
nop
cld
jae
lods
add
add
xchg
scas
push
mov
sub
add
mov
xor
adc
xchg
mov
clc
repnz
nop
cld
jae
and
iret
lds
rep
push
mov
xchg
ret
add
add
stos
add
add
pusha
add
push
mov
xchg
ret
cmp
cmovle
cmp
xchg
mov
test
push
mov
nop
leave
nop
jmp
and
add
imul
jb
incl
add
add
cmp
mov
clc
repnz
nop
cld
jae
add
scas
lods
clc
repnz
nop
cld
jae
fimull
addr16
pushl
push
mov
xchg
ret
movsb
add
add
add
add
clc
repnz
nop
cld
jae
lahf
iret
jle
roll
mov
xchg
mov
nop
leave
nop
jmp
add
lea
in
nop
leave
nop
jmp
add
addr16
lret
out
ret
clc
repnz
nop
cld
jae
out
add
add
jae
adc
mov
push
push
mov
xchg
ret
add
add
bound
nop
cld
jae
inc
movsb
mov
push
mov
mov
call
push
mov
nop
leave
nop
jmp
and
add
mov
push
mov
nop
leave
nop
jmp
and
add
ficoml
repnz
nop
cld
jae
add
add
lds
or
push
mov
nop
leave
nop
jmp
jno
imul
clc
repnz
nop
cld
jae
add
add
imul
add
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
cs
mov
call
adc
repnz
nop
cld
jae
add
mov
lods
fimuls
mov
nop
leave
nop
jmp
mov
sbb
push
mov
nop
leave
nop
jmp
add
repz
repnz
nop
cld
jae
add
add
aad
mov
xor
mov
add
clc
repnz
nop
cld
jae
mov
aad
jmp
jle
lret
bound
add
push
add
leave
mov
out
div
clc
repnz
nop
cld
jae
mov
add
push
mov
xchg
ret
push
mov
inc
jae
mov
clc
repnz
nop
cld
jae
or
jle
mov
call
mov
nop
leave
nop
jmp
add
aad
add
inc
inc
add
nop
nop
cld
jae
add
add
cmp
add
imul
jae
add
sldt
fs
rep
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
jle
addr16
dec
push
mov
popa
add
push
dec
mov
add
xchg
std
add
iret
push
rcr
add
add
clc
repnz
nop
cld
jae
and
push
mov
mov
clc
repnz
nop
cld
jae
push
add
cmp
repnz
nop
cld
jae
or
fcmovbe
add
xchg
into
pushl
clc
repnz
nop
cld
jae
add
sbb
les
clc
repnz
nop
cld
jae
leave
push
add
std
add
movzwl
clc
repnz
nop
cld
jae
add
xchg
jle
lret
push
push
mov
xchg
ret
lea
add
add
add
xor
into
add
clc
repnz
nop
cld
jae
call
and
clc
repnz
nop
cld
jae
and
add
push
popa
mov
push
mov
nop
leave
nop
jmp
add
inc
and
clc
repnz
nop
cld
jae
add
inc
mov
or
clc
repnz
nop
cld
jae
add
in
push
push
mov
nop
leave
nop
jmp
mov
add
add
add
dec
aam
add
add
sub
adc
repnz
nop
cld
jae
and
pop
pusha
clc
repnz
nop
cld
jae
movsb
add
sahf
push
push
mov
nop
leave
nop
jmp
imul
add
mov
add
add
mov
add
mov
push
cs
add
cmpsl
jb
mov
cmp
movsb
ss
push
add
fisttpl
adc
jne
or
add
push
add
mov
add
mov
add
lcall
push
add
add
add
mov
xlat
add
mov
xor
sub
in
add
add
das
jne
fmuls
push
ss
sbb
aaa
mov
inc
sti
nop
add
jns
out
imul
mov
add
leave
dec
and
bound
mov
add
and
mov
mov
add
popf
cmp
adc
addl
add
add
stc
sbb
mov
cmpsl
fnsave
mov
aaa
rolb
mov
xor
add
add
mov
add
xrelease
fsubrs
push
pop
or
mov
push
insl
lea
push
add
cmc
imul
nop
add
ja
add
xor
mov
jmp
push
add
mov
lcall
rolb
mov
adc
mov
push
add
or
add
add
jle
inc
mov
fcmovu
fsubrs
jne
scas
or
mov
ret
push
or
sub
dec
sbb
mov
add
fists
mov
loope
dec
pop
insl
imul
xlat
xor
add
mov
aas
icebp
insb
lret
jg
jl
aaa
pop
or
xchg
xor
out
ss
aas
xor
addb
add
lret
ret
sldt
mov
mov
imul
lret
pop
lret
and
jo
mov
out
sbb
addr16
push
arpl
repnz
das
push
jle
jno
dec
mov
es
stos
dec
out
inc
add
cs
ljmp
mov
or
mov
add
xor
mov
notl
add
jle
add
dec
shrl
add
add
pop
aam
call
push
scas
addb
add
mov
pop
dec
int3
das
inc
rolb
mov
stos
aam
int3
lods
clc
dec
sub
mov
arpl
mov
stc
inc
dec
sub
pop
xchg
test
push
leave
xorl
mov
rolb
mov
shrl
stos
pop
mulb
loop
mov
dec
movsb
add
hlt
push
ret
insb
and
mov
cmp
add
mov
add
add
lea
pop
or
add
cmp
mov
add
xor
mov
icebp
mov
pop
sbb
push
xor
jmp
imul
fs
sbb
push
lea
xor
add
cs
mov
mov
int
sub
add
mov
adc
mov
popa
jmp
stos
mov
dec
leave
std
movsb
sbb
jbe
fildll
mov
inc
movsb
lods
lods
aas
jmp
lock
mov
mov
cmp
jmp
mov
fisttpl
bound
mov
add
pop
sbb
add
add
add
addb
xchg
rorl
mov
jl
push
mov
mov
psrlq
mov
mov
add
std
dec
fidivl
add
lret
shrl
scas
xor
add
jne
sti
and
imul
mov
les
ljmp
mov
adc
jecxz
into
dec
pusha
add
ss
loope
inc
fwait
icebp
jmp
jo
mov
lret
rolb
mov
hlt
xchg
and
imul
es
aam
push
and
mov
ss
cmp
jl
cmc
mov
call
sarl
in
in
jno
add
mov
cmp
inc
or
icebp
dec
dec
in
bound
mov
sbb
out
jecxz
xchg
add
mov
mov
les
add
add
add
enter
add
sbb
sti
cwtl
push
and
mov
mov
out
inc
in
lock
cmpl
or
lret
or
lods
mov
mov
std
mov
add
mov
add
out
enter
mov
imul
lahf
rolb
mov
dec
xchg
into
add
xor
mov
sbb
push
outsb
hlt
outsl
xchg
mov
fdivl
cmp
loope
push
pop
std
aam
testb
stos
adc
leave
or
test
xlat
adc
bound
mov
mov
xor
inc
add
sub
rolb
mov
ds
dec
call
pushf
ret
lahf
push
ret
push
add
add
cmp
nop
add
dec
lods
sbb
or
push
xor
mov
ret
push
mov
dec
add
mov
xor
jmp
xor
mov
outsl
sti
or
and
mov
and
dec
jle
jnp
push
in
xchg
inc
cmp
jno
xlat
fbstp
das
mov
jno
xchg
mov
repz
loop
mov
mov
sub
jge
loop
mov
testl
adc
mov
je
add
testb
push
add
ds
or
sbb
inc
adc
fdivrl
xchg
mov
pop
adc
and
mov
aaa
insl
lret
jne
iret
lret
add
sahf
pop
ret
add
mov
add
add
in
sbb
jbe
mov
jle
add
jb,pn
mov
call
call
add
int3
out
inc
rolb
mov
mov
loope
add
add
xor
mov
add
mov
leave
pop
out
or
add
imul
gs
stc
int
test
addb
outsb
sub
repnz
test
jge
add
push
fisttpl
clc
adc
mov
adc
mov
imul
mov
mov
sahf
daa
fs
in
mov
outsb
addr16
pop
xchg
add
insl
movsb
push
or
cmp
stos
xchg
mov
pusha
add
or
in
leave
filds
cmp
add
aad
ficompl
inc
mov
adc
mov
dec
xor
mov
test
add
jb
mov
fsubrl
and
mov
cmp
mov
pusha
add
add
add
dec
cmp
ss
add
and
cmp
add
mov
mov
add
mov
mov
fimull
or
mov
enter
xchg
pop
scas
stos
out
pushf
dec
xor
std
jno
add
fnsave
sbb
fs
jns
jns
lods
xor
mov
ja
in
xchg
adc
pop
into
addb
sbb
test
sub
add
add
add
mov
repz
inc
lahf
gs
mov
cmp
clc
xchg
lock
fnstcw
addb
loop
mov
sbb
sbb
and
mov
jecxz
mov
cmpsb
in
outsb
pop
sub
scas
xchg
add
out
movsb
cmp
push
mov
add
add
hlt
scas
dec
ljmp
mov
mov
sbb
add
push
fnstsw
and
push
dec
gs
add
adc
add
fbld
mov
inc
outsb
adc
mov
add
xor
hlt
mov
shll
mov
mov
cmc
mov
add
mov
mov
mov
pusha
add
jno
es
adc
lahf
daa
filds
out
repnz
add
dec
sbb
lcall
test
popl
add
mov
add
mov
add
xchg
jne
test
out
mov
cmp
pop
cmpsl
in
add
mov
sub
decb
lcall
ret
sbb
pop
mul
add
mov
add
add
mov
mov
pop
jo
mov
or
or
js
xchg
cmp
test
xchg
jne
mov
adc
test
outsl
and
stc
jl
enter
and
mov
gs
mov
in
ficompl
je
mov
xchg
adc
mov
add
pop
jbe
push
mov
arpl
xchg
in
negb
jle
add
roll
jo
mov
mov
les
or
loop
mov
in
movsb
rolb
inc
add
xor
xor
jecxz
push
repz
jae
in
push
rolb
mov
dec
dec
push
or
std
xchg
testb
mov
out
xchg
mov
add
xlat
inc
add
imulb
pslld
mov
out
push
add
push
scas
stos
or
xchg
jmp
mov
add
mov
and
add
jns
pop
mov
mov
xchg
scas
pushf
pop
pop
insl
jns
add
add
add
imul
jecxz
push
add
cmp
stos
add
dec
push
adc
mov
push
adc
mov
mov
mov
ret
fldcw
push
add
rolb
aaa
mov
mov
jns
pushf
into
out
cwtl
mov
pop
outsb
arpl
dec
inc
cmp
test
mov
or
adc
add
xchg
or
mov
mov
push
and
mov
inc
popf
mov
mov
add
xchg
xchg
add
lds
das
push
ja
mov
mov
lret
adc
inc
out
dec
das
mov
in
loopne
mov
lods
lods
cmp
insb
pop
lods
rolb
outsb
jnp
test
and
mov
add
pop
popf
xchg
xorl
mov
bound
mov
add
mov
jp
sbb
mov
loop
mov
out
sub
lods
push
add
jl
aam
outsl
adc
mov
xor
mov
lea
in
push
add
jo
mov
dec
rolb
mov
lock
jne
adc
mov
mov
ds
or
cld
outsb
jnp
push
add
mov
pop
pop
sahf
inc
jne
ds
push
pop
sbb
scas
aad
xchg
xchg
mov
dec
cmp
sbb
add
mov
in
call
movsl
int
imul
leave
outsl
lds
pop
mov
mov
mov
cmp
jg
lea
add
xchg
push
add
pop
enter
fists
add
sbb
mov
mov
hlt
jne
mov
add
adc
imul
sahf
dec
add
mov
sub
mov
push
sbb
cmp
add
jg
mov
xchg
add
xchg
stc
xchg
add
mov
inc
into
lahf
xchg
cmp
push
adc
mov
dec
mov
repz
rolb
addr16
fiadds
mov
jnp
jo
mov
adc
scas
sbb
push
add
or
mov
mov
sbb
mov
dec
sahf
fsubrp
out
adc
xchg
add
sti
fcmovnu
push
push
repnz
mov
sub
adc
jbe
ret
data16
inc
call
add
push
push
jle
adc
add
add
fstl
mov
insl
xchg
dec
inc
inc
in
pop
fnsave
or
sbb
ljmp
jae
adc
mov
rcll
pop
inc
xor
mov
jnp
push
into
ss
or
add
test
add
jbe
aas
add
push
cwtl
adc
test
out
cmp
push
push
add
insb
inc
xor
mov
inc
mov
mov
mov
add
mov
add
mov
in
xchg
xor
mov
adc
add
jo,pn
mov
inc
xchg
xchg
sub
cltd
sahf
xchg
das
in
lea
pushf
fnsave
push
add
jb
mov
add
add
mov
cmpsl
leave
push
xchg
gs
stc
jge
mov
push
stc
prefetch
and
mov
sbb
or
test
sbb
pop
or
jmp
cmp
ss
adc
mov
leave
popf
pop
jbe
jmp
add
out
je
pushf
push
stc
cs
adc
ret
xlat
fcoml
inc
jle
outsl
push
inc
add
js
adc
movsb
les
sbb
lock
jp
mov
mov
add
add
loope
mov
add
add
mov
inc
add
sub
fsubs
adc
add
stos
hlt
test
icebp
fstpl
xchg
add
jl
int
rcll
popf
xor
mov
jb
mov
push
cld
ret
ds
sbb
mov
mov
add
jecxz
bound
mov
add
pop
adc
add
mov
getsec
adc
mov
adc
mov
aad
lcall
int
add
js
bound
mov
adc
mov
add
ret
sti
mov
mov
out
sti
ficomps
jae
mov
add
and
mov
std
xchg
aad
cmc
in
mov
negl
mov
fnstsw
call
iret
jl
add
mov
aas
dec
sub
add
mov
lods
pop
or
add
outsb
jle
add
orl
mov
add
inc
jnp
stos
xor
out
dec
call
xor
mov
addl
mov
pop
cwtl
insb
lret
mov
imul
cmp
subl
pop
sbb
es
add
lret
das
repnz
mov
ss
push
addr16
repnz
rolb
mov
fimuls
inc
repz
dec
inc
fildl
add
inc
add
push
ja
add
xchg
mov
faddl
mov
mov
add
in
inc
rolb
mov
test
add
jns
cmc
dec
movsb
stos
fucomi
sub
insl
fldt
inc
add
add
jecxz
inc
add
add
sbb
add
mov
lahf
pop
dec
pop
jmp
add
add
imul
es
lods
mov
ss
mov
pop
and
xor
mov
loope
or
jns
or
lea
sbb
es
add
add
mov
mov
sbb
add
inc
jne
pop
xor
adc
dec
pop
push
and
fwait
push
addb
arpl
pop
ss
iret
fisttps
dec
jns
test
rolb
mov
fldl
movsl
jmp
push
adc
push
daa
sub
mov
adc
in
das
adc
mov
add
mov
outsb
adc
mov
inc
jns
add
cmpsl
push
rep
enter
cltd
hlt
jmp
imul
sbb
addb
loop
mov
movsl
add
ret
mov
inc
xrelease
in
cs
fs
gs
out
or
add
or
cmp
pop
jmp
inc
or
sbb
ret
dec
and
push
add
push
add
ds
pop
mov
add
mov
adc
add
mov
ss
loopne
mov
pop
pop
in
sub
adc
mov
adc
dec
and
std
xor
mov
add
mov
jge
add
cltd
xchg
add
adc
cmp
sar
push
xlat
into
mov
mov
mov
and
mov
scas
inc
fadds
jno
xchg
scas
push
inc
arpl
add
add
xchg
add
add
inc
mov
mov
xchg
mov
call
xchg
push
jl
cld
add
outsb
mov
add
pop
pop
push
mov
mov
ficoml
in
push
aad
aas
repz
fwait
jno
mov
mov
xor
mov
mov
add
fwait
push
test
insb
cmp
add
pushf
add
ret
addb
push
inc
rolb
inc
add
dec
pop
pop
dec
addb
dec
xchg
cmp
mov
mov
and
push
add
stos
mov
mov
mov
iret
xor
jb
mov
cmp
mov
dec
push
pusha
add
cli
outsl
mov
iret
in
call
and
cltd
mov
inc
add
adc
mov
pop
icebp
and
clts
sti
sti
cltd
sub
xchg
mov
fistpll
scas
mov
cmp
add
jns
rolb
mov
sub
push
pop
mov
xor
sub
add
add
ds
ret
sub
mov
lds
jle
adc
mov
arpl
je
cmp
test
inc
les
push
xor
pusha
add
sub
out
push
add
mov
mov
push
stc
lock
add
mov
mov
aad
pop
lret
sarl
xchg
add
test
outsl
adc
scas
or
popf
jne
cltd
pusha
add
mov
and
loope
cwtl
pushf
fidivrl
movsb
rolb
mov
mov
mov
add
stos
in
xchg
pop
dec
test
nop
add
pop
push
jb
mov
addb
mov
cmp
mov
lret
xchg
inc
xchg
push
nop
add
ss
sbb
pop
mov
add
mov
and
xchg
xchg
scas
addb
rolb
mov
add
mov
dec
sub
pushf
jecxz
jl
xchg
cmp
add
add
add
dec
mov
lods
imul
adc
add
loopne
mov
inc
xchg
push
adc
js
in
mov
xor
mov
or
or
add
fimull
xchg
sbb
xor
stos
lods
scas
lods
push
xchg
jmp
push
cmp
push
scas
adc
sub
stos
pop
cmp
sti
xchg
out
cmp
mov
add
mulb
mov
cmpsb
cmp
add
cmc
or
inc
aaa
and
xor
lods
xchg
lds
inc
add
jg
cmp
pop
lock
push
and
mov
pop
push
insl
andl
lods
xchg
fwait
sti
sbb
sbb
xchg
ret
data16
adc
sbb
mov
mov
add
adc
inc
xchg
add
and
mov
sub
aad
add
mov
jae
adc
fwait
mov
xchg
mov
dec
fnstcw
jb
mov
add
ja
add
mov
sbb
cwtl
or
ljmp
js
repz
enter
and
mov
mov
mov
arpl
inc
add
addr16
stc
out
call
cmp
push
addr16
loop
mov
popl
rolb
cmp
add
or
mov
std
sub
inc
add
leave
and
jp
xlat
pop
movsb
sbb
stc
pop
xor
push
xor
aad
sub
add
sub
add
je
cmpsb
add
mov
mov
mov
in
jb
mov
outsb
jp
out
mov
or
add
add
pop
sqrtps
jle
fldl
inc
in
mov
mov
push
fwait
int
push
add
adc
mov
scas
push
sub
add
lods
fdivrp
push
dec
mov
and
mov
add
add
outsb
or
cmp
mov
repnz
aad
pop
add
mov
push
daa
dec
movsl
addb
in
notl
in
ja
out
add
mov
in
add
inc
adc
cmp
xchg
out
int
stc
adc
out
add
add
add
repz
cmp
adc
mov
dec
jbe
lds
add
cwtl
cli
call
sub
in
or
aam
inc
add
add
mov
push
add
and
sbb
out
popa
pop
aaa
aad
je
add
mov
std
pop
mov
scas
repz
mov
popl
push
xor
add
cwtl
or
add
jmp
fs
cmc
imul
mov
jne
daa
push
xchg
or
ds
xor
mov
pop
mov
jns
or
add
mov
inc
imul
add
add
add
mov
mov
mov
inc
add
push
add
add
idivl
add
jmp
cmp
daa
push
sub
add
fwait
dec
mov
mov
dec
xor
out
jecxz
aad
add
add
add
lahf
adc
add
xchg
sub
sbb
jo
mov
in
or
icebp
das
decl
pop
jne
jae
or
jmp
and
in
push
push
orl
pop
imul
fs
addb
jno
mov
dec
cmp
xor
nop
add
pop
cmp
add
add
pop
les
sbb
add
or
add
push
dec
cld
popa
push
inc
sbb
mov
add
sub
dec
repz
push
add
mov
rolb
lods
lock
add
add
movsb
outsl
add
inc
sbbl
or
add
fxch
repz
test
loop
mov
outsl
loop
mov
out
mov
push
adc
mov
mov
add
fs
ret
js
jmp
ds
xchg
les
pop
adc
aam
add
sbb
nop
add
mov
cmovne
bound
mov
sbb
add
out
push
std
mov
dec
mov
addb
gs
or
cmpsl
sti
outsl
cmpsb
push
dec
pop
and
mov
adc
mov
xor
add
mov
push
je
mov
mov
test
sbb
int
mov
mov
aaa
sub
lcall
ss
add
add
sub
negl
add
ret
cli
and
mov
pop
push
fstpt
add
mov
and
pop
loop
mov
stos
jge
inc
add
mov
mov
pop
mov
mov
lret
jno
cwtl
mov
addb
mov
add
por
mov
jae
repnz
dec
cmp
xor
mov
test
notb
out
loope
or
mov
in
lcall
fmul
mov
mov
jbe
fisttps
testb
mov
add
mov
mov
mov
fldl
bound
mov
sahf
sub
mov
add
dec
push
and
cld
jle
pop
cmpsb
pop
pop
adc
add
pop
adc
fs
and
mov
cmc
mov
ret
out
add
or
mov
nop
add
lods
cmp
add
add
es
loopne
mov
ja
add
pop
xchg
adc
ja
clc
scas
sahf
ja
addb
jnp
and
xchg
add
add
popf
xor
sub
add
pop
sub
cmc
fcomi
adc
mov
and
mov
jmp
data16
jns
add
add
mov
in
dec
repnz
cmp
add
add
xlat
mov
stos
xchg
mov
mov
inc
inc
cmpsl
sbb
rolb
cmp
cmpl
push
insb
cs
inc
loop
mov
imul
fistps
dec
cwtl
dec
cmc
jmp
push
sbb
lods
pop
fwait
pop
test
and
mov
imul
leave
jnp
nop
add
and
mov
add
mov
add
stos
imul
test
int3
stos
lahf
sbb
xchg
add
mov
add
jp
mov
add
jg
mov
stos
sbb
es
out
add
mov
add
out
lea
dec
cmp
xor
mov
add
ljmp
pop
or
adc
jl
pop
push
pop
enter
jp
ss
pop
sti
add
mov
pop
mov
push
and
add
push
lods
push
add
fisubs
addb
lods
pop
lret
lret
test
je
jle
das
lods
or
lahf
inc
add
add
mov
pushf
push
sub
stos
leave
pop
and
stc
push
adc
dec
mov
sub
add
addb
xor
and
mov
stc
add
scas
fistps
and
mov
outsl
xor
sbb
stos
and
mov
add
cmp
rol
add
mov
add
mov
mov
and
add
adc
xlat
dec
in
sub
rolb
mov
scas
or
addr16
add
add
adc
mov
clc
push
jle
stos
scas
xor
inc
addb
push
test
mov
mov
sbb
adc
add
xchg
or
add
cmp
or
push
or
fwait
push
add
mov
add
mov
xor
dec
gs
shl
decb
and
cmc
inc
ljmp
ljmp
add
push
jecxz
pop
shll
popf
push
add
mov
cmpsl
imul
imul
sbb
pop
je
inc
in
test
shll
add
iret
stos
repnz
add
mov
ret
sub
insb
cli
dec
push
xlat
aaa
out
fwait
xor
fnstcw
loop
mov
inc
addb
ljmp
jno
fadd
add
fwait
aas
decb
arpl
insb
jmp
mov
add
add
ds
das
inc
mov
loope
mov
adc
add
add
sbb
add
jmp
adc
mov
dec
mov
mov
mov
and
dec
test
or
sub
pop
pop
in
adc
pop
js
xchg
add
arpl
mov
mov
out
dec
sar
cwtl
pop
imulb
aam
data16
rolb
mov
pop
or
add
mov
imul
xor
add
or
add
sub
sahf
arpl
test
push
in
lret
fstps
in
ds
int3
cmp
mov
arpl
xchg
mov
movsb
mov
rolb
mov
imul
pop
jmp
stos
dec
mov
mov
popf
addr16
jge
into
xor
mov
add
outsl
and
add
mov
add
hlt
mov
mov
lods
and
addb
movsb
sub
out
rolb
mov
hlt
fldl
enter
add
and
mov
test
in
sbb
mov
loope
outsl
shll
scas
out
pop
pop
stc
movsl
mov
mov
dec
mov
leave
test
mov
dec
pushf
dec
movsl
pop
test
dec
lods
aas
push
add
sub
add
cmp
and
and
mov
sub
push
icebp
leave
inc
inc
rolb
lock
cmpsl
sbb
fwait
smsw
mov
imul
xor
mov
jle
push
mov
popa
dec
sub
sbb
xchg
cmp
lea
bound
mov
dec
xchg
rolb
mov
lahf
repz
mov
aad
mov
ss
lods
dec
cmp
mov
xor
mov
fbld
mov
mov
inc
jnp
into
pop
cmpsl
lret
add
mov
in
int3
rolb
mov
push
mov
add
push
repnz
jno
and
push
mov
fiaddl
filds
bound
mov
add
sbb
xchg
push
lods
push
push
push
les
lea
add
push
add
add
push
sbb
add
rcl
add
xor
scas
inc
add
rolb
or
lds
std
cmp
mov
add
add
and
or
add
ss
pop
adc
mov
add
pop
push
ret
sub
push
pusha
add
addb
adc
mov
pop
sub
popl
add
ds
test
int
fdivs
add
rcll
mov
pop
push
int
pushf
cmp
dec
sbb
scas
repz
mov
inc
movsb
lret
mov
sar
jae
sub
movsb
outsl
xchg
rcr
mov
inc
xor
fdivl
mov
adc
add
ficoml
mov
arpl
addb
and
jno
pop
negb
jns
jne
sbb
inc
aad
add
or
add
mov
divl
add
xchg
push
push
and
shll
mov
test
jbe
push
cmp
addb
loop
mov
lea
mov
adc
mov
add
andl
mov
scas
je
push
push
cmp
jmp
mov
xchg
adc
mov
mov
mov
out
inc
fstl
sbb
add
mov
adc
add
mov
xlat
adcl
in
jp
rolb
les
sbb
mov
imul
add
xor
addr16
add
push
push
test
arpl
adc
mov
or
cmovo
mov
jl
scas
adc
insl
jbe
mov
rolb
cmp
or
or
cs
rolb
icebp
out
and
imul
mov
hlt
scas
push
add
mov
add
and
jg
sub
in
cmp
sub
push
jge
rcll
imul
cmpsb
mov
cltd
xchg
xchg
add
dec
pop
pop
or
gs
ret
add
mov
xor
mov
add
mov
mov
mov
xor
mov
pop
add
adc
dec
adc
mov
mov
cmc
mov
pushw
mov
lret
pop
mull
shrl
popf
add
mov
push
pop
pop
out
mov
inc
xchg
lds
call
xchg
add
cmp
rolb
mov
ljmp
loopne
mov
and
mov
mov
cmp
ret
push
loop
mov
add
add
fists
pop
out
inc
sbb
mov
popf
xor
rcrl
rolb
mov
mov
mov
lret
js
push
clc
mov
mov
add
repz
mov
lods
mov
add
add
add
jle
ss
adc
xor
mov
rolb
cli
leave
fs
mov
movl
jbe
xchg
iret
je
or
add
add
mov
add
mov
sub
test
add
dec
scas
dec
sbb
dec
ret
ss
lds
add
inc
add
aaa
push
ret
and
in
dec
stos
inc
cmp
add
add
not
test
dec
mov
mov
in
dec
add
sub
sbb
loopne
mov
inc
xor
mov
mov
sahf
sub
xchg
jne
int3
dec
xchg
or
adc
mov
test
add
cmp
outsl
push
push
add
pop
out
xor
mov
es
pop
mov
lds
or
sub
vmaxss
movhps
inc
dec
push
aam
add
mov
rolb
mov
push
cmc
flds
xor
mov
and
loopne
mov
out
jbe
das
in
ljmp
sbb
mov
icebp
cltd
dec
nop
add
mov
js
xor
mov
sbb
out
testb
outsl
xor
inc
add
sub
enter
pop
mov
push
pop
mov
adc
repz
add
or
roll
scas
sub
mov
and
mov
inc
setae
adc
mov
pop
and
mov
add
inc
stc
ss
pop
mov
mov
arpl
stos
add
add
arpl
mov
mov
std
clc
push
mov
pop
jle
and
mov
mov
or
or
push
inc
sub
mov
out
mov
add
pop
and
pop
cmp
mov
cltd
repnz
aam
mulps
or
cmc
jb
mov
pop
xor
addb
lds
loope
mov
aaa
mov
add
add
mov
and
in
popa
xor
iret
stc
insb
mov
inc
add
sub
inc
or
inc
dec
mov
or
call
fildl
inc
add
test
jge
scas
add
aas
test
dec
and
jmp
push
in
mov
cmovne
xchg
add
jl
popa
push
imul
dec
pop
pop
push
jmp
test
xor
mov
inc
lahf
mov
mov
mov
inc
add
jae
sbb
fsubrs
add
fimuls
es
push
aam
imul
bound
mov
sub
rcrl
cmp
dec
clc
mov
mov
mov
loopne
mov
out
add
imul
repnz
jo
mov
js
popa
scas
pop
and
popf
lret
cld
aam
add
sbb
testl
les
mov
mov
mov
call
xor
mov
inc
fcoml
lcall
cmp
cmpsl
inc
stos
nop
add
dec
fwait
lahf
adc
jl
push
jge
jns
fsubl
add
or
xor
popa
sub
stos
jae
add
sub
dec
data16
xchg
movsl
pop
pop
das
adc
mov
loop
mov
ljmp
lods
shrl
or
add
and
mov
arpl
mov
ret
xor
add
add
push
aaa
mov
jl
ds
inc
addr16
mov
add
xchg
shrl
dec
fbstp
nop
add
mov
rolb
rcrl
movsb
push
test
mov
out
jns
add
cltd
data16
jnp
add
cwtl
sub
mov
add
push
add
jp
imul
leave
xor
imul
add
mov
gs
in
sub
xchg
add
lock
mov
sub
in
pop
jle
sbb
test
in
sti
xchg
mov
popa
out
cmp
xchg
hlt
gs
mov
add
pop
fwait
imul
repz
cmp
pushf
rolb
mov
adc
call
xor
mov
cli
sbb
enter
sub
jg
add
scas
loop
mov
xchg
aam
add
mov
cmpsb
insl
push
stos
mov
add
pop
mov
mov
xor
add
in
fld
es
xchg
sub
stos
mov
mov
add
sub
lock
js
lds
xor
clc
push
mov
mov
pop
mov
cld
test
aam
stos
cmpsb
cmp
stos
push
sti
push
add
add
je
add
mov
sbb
push
jg
xchg
inc
scas
adc
mov
jbe
mov
cwtl
jp
sti
xor
dec
popa
add
mov
shll
inc
add
jmp
xchg
aad
mov
fmull
mov
arpl
xchg
loope
adc
jne
or
xchg
lods
scas
sub
push
in
dec
imul
ret
insb
pop
jl
jle
lcall
mov
mov
pushf
lods
test
mov
jns
lret
mov
add
mov
test
pop
lahf
push
cmc
aam
dec
cmp
sub
scas
inc
add
out
outsb
mov
fisubs
xchg
cli
idivb
addr16
dec
lea
fstpl
mov
xor
je
hlt
lret
add
jge
pusha
add
fcoml
loopne
mov
xor
add
bound
mov
and
add
or
mov
add
popa
mov
add
add
cmp
bound
mov
add
out
add
mov
jnp
fsub
add
and
cmp
mov
xchg
xor
int
mov
aad
std
jae
iret
rolb
mov
mov
jp
and
das
push
sub
sti
jp
test
add
pop
xchg
dec
outsl
cmp
rolb
mov
xor
dec
sub
cs
or
add
movsl
add
pop
push
mov
testb
or
xchg
out
push
mov
add
sub
outsb
cmp
js
pop
mov
add
out
mov
test
jle
add
add
mov
movsb
addl
mov
mov
adc
xchg
test
fadds
add
mov
ret
inc
cs
cli
xor
cs
sbb
mov
mov
xchg
inc
inc
out
xchg
in
aas
negl
add
mov
addb
cmp
popa
stc
add
mov
movl
cmp
and
mov
xchg
pop
xchg
in
and
or
mov
mov
cmp
add
sti
mov
fldenv
xchg
rolb
mov
and
mov
mov
xchg
add
pop
movsl
insb
leave
xor
mov
outsl
xor
pop
ret
clc
jnp
mov
mov
aad
lcall
and
xchg
mov
cmp
lods
out
or
add
ljmp
and
out
faddl
add
mov
add
jne
fxtract
dec
ret
mov
push
mov
imul
xchg
cmp
ret
aaa
inc
jge
movsb
or
cmp
pushf
jge
push
in
js
mov
test
xchg
nop
add
mov
mov
jecxz
ds
lret
mov
imul
adc
sbb
addb
mulb
adc
or
rolb
mov
std
hlt
or
add
mov
add
cmp
test
push
add
add
xor
addb
sbb
data16
dec
out
gs
fdivrl
and
mov
ljmp
scas
add
mov
movsl
loop
mov
add
mov
imul
cmc
sbb
xor
add
mov
mov
lock
add
xchg
push
mov
mov
jo
mov
pop
popf
shl
mov
add
mov
mov
mov
cmp
mov
loop
mov
and
mov
inc
add
xchg
bound
mov
sbb
dec
repz
cmp
xchg
clc
pop
movsb
push
lret
push
enter
sub
fldcw
dec
jecxz
jne
add
mov
mov
into
jle
pushf
push
add
in
in
cli
and
mov
sub
js
or
inc
loope
fadds
xor
mov
add
or
jge
jo
mov
push
add
andl
mov
cmp
pushf
mov
clc
stos
push
inc
add
mov
adc
mov
dec
loopne
mov
mov
add
mov
fadds
mov
iret
push
push
push
icebp
les
repnz
xor
fbld
mov
adc
mov
add
fildl
add
loope
call
inc
mov
clc
stos
xor
mov
outsb
mov
mov
inc
movsl
add
lods
mov
xchg
add
push
test
data16
sti
and
pop
adc
jg
jg
mov
mov
jmp
mov
subl
add
mov
add
out
xchg
mov
add
add
mov
dec
pop
je
nop
add
add
xchg
xchg
jae
push
out
test
imul
mov
push
or
mov
scas
dec
imul
xchg
pop
mov
popf
fidivrs
add
xchg
xor
jbe
dec
in
jmp
and
push
fstpl
pusha
add
repnz
aas
and
adc
pop
in
mov
jb
mov
push
or
mov
push
call
dec
fsubp
pop
jae
pop
popa
cmp
inc
loope
or
test
mov
aas
cmp
inc
add
push
xchg
sbb
mov
sub
incl
add
mov
cltd
inc
add
psllw
add
aam
mov
or
pop
rolb
xor
mov
stos
lea
xchg
test
lret
mov
mov
add
outsb
clc
add
pop
clc
mov
sub
js
pop
sbb
pop
dec
mov
aas
js
mov
add
add
xorl
int
les
mov
adc
add
aas
cmp
jnp
pop
les
mov
mov
mov
mov
jmp
or
xchg
ret
call
cmp
inc
add
cli
insl
rolb
mov
aam
and
add
pop
mov
mov
pop
ret
fs
mov
test
mov
add
add
adc
add
mov
mov
jge
add
out
rcrl
add
insb
pop
jecxz
jl
addr16
sahf
pop
or
push
fidivrs
add
cmp
push
add
jp
add
mov
sahf
mov
add
mov
lea
push
test
jb
mov
shr
mov
sbb
mov
lea
adc
mov
cmp
add
mov
mov
popa
lds
mov
rolb
mov
out
or
add
repz
pop
jge
jnp
lahf
xor
jl
push
mov
loopne
mov
jmp
daa
imul
jo
mov
push
add
sub
mov
xlat
insl
sti
scas
and
jmp
push
fs
into
addb
jae
nop
add
jno
add
mov
cs
test
pop
sub
stc
lret
xchg
lea
lret
inc
jo
mov
adcl
jns
fcoms
scas
jg
ljmp
add
add
mov
mov
and
daa
call
cmp
popa
sub
xchg
add
push
cmp
jne
xor
mov
adc
add
add
int
add
lock
mov
jge
cwtl
lcall
xchg
ret
fiaddl
inc
ret
sbb
add
pop
push
jg
mov
push
imul
test
daa
or
adc
inc
sub
jno
push
add
add
test
xchg
or
sub
add
in
sub
dec
movsb
cs
add
push
jo
mov
add
and
jge
xor
push
in
gs
push
add
cmp
pop
dec
nop
add
cmp
adc
mov
push
aaa
cmc
cwtl
fimull
push
jno
and
jle
or
add
add
pop
movsb
xchg
mov
popl
cmp
stos
in
and
add
cmp
addb
scas
mov
add
xchg
sbb
in
sbb
pop
and
test
mov
je
int
nopl
cmpsb
push
icebp
sahf
repnz
int3
push
ficoml
sub
cmp
dec
pop
inc
push
pop
push
pop
mov
fadd
dec
cltd
sub
add
sahf
push
pop
pop
imul
test
outsb
lods
inc
adc
out
cmc
fs
mov
or
jle
stos
out
lea
outsl
or
nop
add
add
adc
add
shrl
js
mov
mov
mov
pop
jns
movsb
fldenv
sbb
data16
clc
repz
inc
and
mov
adc
mov
add
into
addb
inc
aad
mov
lods
out
das
dec
daa
pusha
add
addr16
add
add
fs
dec
mov
arpl
mov
add
stos
cmp
call
mov
mov
push
add
mov
test
cli
xor
xor
ljmp
dec
and
xchg
mov
or
inc
jmp
jae
add
add
mov
add
fmull
aaa
cmp
lods
xor
negl
jae
pop
push
jp
cmpsb
pop
xor
cmpsb
jns
mov
cwtl
xor
jmp
add
imul
ret
clc
jb
mov
test
xor
mov
lahf
es
add
mov
sbb
rcr
insb
mov
xor
adc
mov
cmp
add
imul
rolb
mov
sub
inc
scas
mov
lock
add
add
inc
push
push
loop
mov
push
xchg
cmp
fidivrs
mov
xor
dec
adc
mov
xchg
addr16
or
inc
in
or
sbb
aaa
or
add
add
or
mov
mov
push
inc
add
push
std
dec
addb
mov
jns
sarl
imulb
push
jl
add
xor
inc
add
jns
ret
punpcklbw
mov
bound
mov
add
dec
pop
mov
dec
sbb
dec
jle
test
mov
mov
add
cli
aas
jae
add
or
lahf
or
cmp
add
outsl
mov
ja
adc
lds
mov
add
dec
push
cld
bound
mov
jnp
rolb
jbe
add
ret
repnz
mov
mov
rolb
mov
add
lea
rolb
and
mov
add
cmp
add
add
into
or
sub
clc
lcall
mul
mov
mov
sarl
xor
mov
int3
jo
mov
add
cmc
xlat
daa
sar
aad
add
mov
popf
lahf
pop
hlt
add
mov
inc
add
cmpsl
das
lret
loopne
mov
dec
imul
jge
mov
add
daa
mov
lods
dec
jne
and
mov
jae
shrl
xchg
jns
les
dec
cwtl
cmp
sbb
lods
xchg
rolb
mov
add
mov
jl
inc
fwait
add
add
mov
outsl
push
in
push
sub
and
hlt
sbb
jae
cmp
jbe
add
sub
sbb
xor
mov
add
and
ret
movl
push
pusha
add
jnp
filds
add
add
mov
ret
dec
in
add
push
pop
add
mov
mov
sub
icebp
dec
sub
or
idivb
add
cltd
jmp
sub
jno
push
and
loope
fists
popa
scas
cmp
jg
cmp
and
or
add
popa
pushf
push
mov
pusha
add
lds
mov
out
cld
inc
mov
iret
fwait
lahf
inc
shll
add
add
sub
jl
cmp
inc
filds
pop
jle
add
xchg
sbb
lcall
cmpsb
test
jg
repnz
mov
gs
loop
mov
lds
imul
xchg
jmp
lret
jo
mov
dec
adc
stos
push
or
inc
cmpsl
ret
scas
ljmp
punpckldq
mov
gs
loopne
mov
push
cmc
lods
pop
pop
xor
xchg
sbb
sbb
cmp
out
xor
cmpsl
and
add
add
fucomip
stos
lods
pusha
add
call
mov
add
mov
sti
ds
xchg
fistps
inc
jo
mov
or
sbb
inc
fidivs
mov
cmp
mov
stos
clc
and
lds
and
push
popa
jmp
dec
gs
fildl
hlt
das
and
je
bsf
cmp
add
pop
and
adc
mov
or
lret
rolb
mov
mov
add
inc
mov
lret
cmp
mov
push
and
das
roll
cmc
inc
add
lds
cmp
add
xor
mov
shr
push
loop
mov
add
fiaddl
int3
dec
clc
stos
rolb
mov
loopne
mov
adc
ds
push
sbb
jp
add
and
push
std
addb
mov
notb
gs
and
jae
mov
popa
test
insb
mov
xor
add
stos
sti
jg
mov
mov
lcall
add
jecxz
add
sbb
mov
jnp
push
pop
add
jne
push
add
mov
rolb
mov
sbb
add
cli
push
xor
je
add
push
addl
jb
mov
filds
movsl
xchg
scas
xchg
inc
cmc
fisttpll
pusha
add
add
mov
sbb
add
mov
pusha
add
cld
ja
push
or
cmp
add
les
dec
testl
call
cmpsb
mov
pop
push
pop
push
loope
inc
sbb
popa
imul
add
in
push
scas
ret
mov
aad
xchg
push
cmp
sub
fs
add
add
mov
dec
fbld
xchg
adc
mov
or
fnsave
mov
outsb
xor
jnp
add
gs
add
shll
aaa
dec
fwait
or
xchg
dec
add
add
cmc
add
mov
adc
push
mov
movsl
test
test
test
add
mov
sbb
imul
fisubl
shr
fwait
addr16
mov
addb
lahf
mov
inc
insl
inc
add
inc
add
xor
add
add
rolb
mov
mov
mov
es
scas
dec
mov
in
mov
mov
xor
outsl
in
add
icebp
push
add
mov
outsl
cwtl
movsl
xchg
sub
int3
mov
push
add
stc
xchg
int
mov
add
mov
repnz
add
mov
pop
and
addb
jb
mov
add
add
mov
mov
and
mov
arpl
std
in
mov
jg
mov
adc
add
push
movsb
into
shll
add
fists
jns
and
mov
inc
jno
cmp
dec
mov
xchg
mov
xchg
cmc
or
or
pop
adc
add
add
mov
adc
mov
cmp
fwait
dec
lret
add
mov
adc
mov
adc
adc
adc
mov
cmp
mov
mov
xchg
add
mov
dec
rolb
stc
push
cli
out
xor
mov
add
iret
cmpsl
or
add
bswap
inc
mov
rolb
mov
sti
arpl
mov
mov
addb
out
cmp
insl
sbb
in
inc
adc
mov
cltd
cmp
test
loop
mov
mov
lret
inc
arpl
pop
sbb
outsb
add
adc
or
add
test
add
mov
leave
mov
out
inc
inc
pop
sub
movsl
cmp
shr
in
stos
stc
sub
add
jg
add
cmp
xchg
or
out
in
cmp
add
imul
push
xchg
fcoms
mov
pop
xorl
add
ljmp
into
daa
rcll
add
dec
cmp
add
add
mov
nop
add
std
xor
add
pop
push
fwait
pop
mov
inc
add
pop
sbb
cmp
xor
mov
cs
add
mov
cmpsb
fistl
mov
test
enter
outsl
xchg
in
fidivrs
test
movsl
mov
mov
sbb
add
sub
xchg
and
push
add
nop
add
or
xor
mov
mov
rolb
xchg
mov
xor
mov
outsl
xchg
mov
aaa
sti
test
xor
mov
loop
mov
sbb
inc
add
or
ret
inc
pop
arpl
pop
xchg
mov
nop
add
add
mov
or
ret
sub
add
mov
adc
sarl
xor
mov
mov
aas
mov
or
ja
aaa
adc
mov
mov
adc
add
repnz
or
add
mov
mov
inc
int3
jns
int3
pop
sub
or
xlat
push
mov
add
mov
add
mov
mov
mov
js
scas
mov
mov
and
mov
cld
addb
adc
mov
stos
out
add
das
aad
inc
rolb
dec
jge
push
xchg
rolb
js
gs
push
mov
shl
mov
mov
and
int3
add
mov
mov
mov
mov
add
mov
not
add
pop
sub
xor
popf
adc
subl
in
xchg
add
jns
arpl
mov
and
fists
sbb
add
imull
cmc
sub
mov
jp
rolb
and
mov
add
jle
push
cwtl
pop
mov
xchg
das
pop
notl
add
adc
jg
inc
add
stc
sbb
push
std
cld
in
and
mov
pop
jge
cmovge
insl
popw
popf
pusha
add
lods
rolb
fsubrs
add
pop
add
fs
cmpsb
sub
out
inc
xlat
xchg
rolb
mov
je
int3
xchg
movb
clc
jo
mov
add
dec
and
mov
and
sub
test
ret
mov
add
insl
loopne
mov
cmp
jmp
jo
mov
in
call
mov
cmp
add
fwait
sbb
ret
add
mov
jae
cmpsb
jmp
and
das
outsl
fidivrs
lea
add
rorl
mov
add
add
adc
xchg
cmp
add
in
adc
mov
dec
sbb
testb
cmp
mov
hlt
lock
mov
aam
lock
pop
lock
cmpsl
mov
xchg
aam
in
mov
imul
push
jns
adc
xor
mov
ja
popa
push
sub
mov
or
ret
shrl
adc
or
mov
sbb
mov
jmp
sub
rolb
movsb
out
cmp
dec
scas
push
leave
jns
cmp
xchg
xor
mov
xchg
mov
add
mov
insl
xchg
pop
jmp
xor
mov
push
inc
lcall
push
add
xchg
cld
mov
push
jg
call
add
mov
stos
dec
in
out
xor
mov
les
ss
andps
cmp
addb
jns
lods
sub
mov
adc
addl
mov
adc
add
arpl
leave
mov
mov
ret
pop
movl
lea
pop
pop
and
mov
push
mov
notb
mov
fdivrl
add
addb
xchg
add
add
mov
add
push
add
mov
add
xchg
mov
test
sbb
stos
pop
in
dec
and
mov
mov
adc
mov
add
js
push
xor
mov
les
ret
add
inc
mov
dec
mov
lds
jge
add
stc
adcl
add
roll
cmp
push
add
test
ljmp
mov
xchg
pop
adc
mov
call
mov
addb
loop
mov
xor
aam
pusha
add
mov
cmp
mov
enter
scas
lret
aas
dec
mov
mov
fldl
loopne
mov
cmc
mov
mov
add
rolb
mov
pop
cmc
lcall
and
mov
jg
or
add
sbb
mov
adc
mov
add
mov
lret
in
add
scas
jge
lret
movsl
into
mov
jl
mov
shr
jp
push
mov
add
jnp
add
repnz
dec
sbb
cmp
mov
fisttpl
mov
push
stc
sbb
shll
bound
mov
mov
lahf
js
ret
jno
inc
add
mov
inc
pop
adc
mov
jb
mov
pop
pop
and
jne
mov
out
pop
loope
add
xchg
adc
mov
or
inc
add
or
mov
mov
inc
movsl
das
test
push
add
sbb
add
mov
add
cli
scas
cs
leave
lret
add
mov
mov
dec
rolb
jnp
test
and
mov
fldenv
imul
jle
roll
sub
cmpsb
imul
fmul
mov
xlat
sbb
addb
xchg
lret
jecxz
lahf
outsb
and
mov
cmp
aad
pop
adc
mov
addb
rolb
mov
ja
mov
cmpsl
ds
mov
inc
stos
scas
dec
leave
stos
xchg
add
add
mov
mov
jge
ret
xchg
and
mov
fdivs
push
jae
sub
add
mov
cmp
or
and
lret
mov
sub
jecxz
add
jecxz
scas
aas
or
mov
mov
mov
mov
testb
mov
add
imul
push
push
addb
jl
xor
lea
add
or
push
jmp
addb
insb
dec
dec
addb
mov
sbb
mov
scas
xchg
or
dec
dec
and
stos
pop
addb
bound
mov
sbb
lahf
push
add
imul
mov
ss
mov
insb
pop
int3
xor
mov
addb
push
fwait
mov
mov
cmp
mov
inc
insl
xchg
adc
dec
sahf
sub
jl
mov
or
out
rolb
test
jae
cs
maskmovq
testl
sbb
arpl
shl
cld
xor
or
mov
push
pop
sahf
add
push
popa
add
decl
sbb
test
add
into
mov
inc
add
mov
mov
push
jmp
aas
xchg
mov
xchg
cmpsb
ficoms
adc
add
add
popf
push
movsl
aas
inc
add
fldcw
add
add
daa
ljmp
push
add
pop
push
and
mov
mov
iret
xchg
imul
dec
int
in
pop
mov
mov
stos
adc
mov
xor
add
add
inc
push
mov
mov
pop
pop
popa
inc
add
mov
add
fisubrs
sti
dec
sub
adc
in
dec
pop
mov
out
xor
adc
aad
push
vphsubwd
mov
in
js
add
mov
add
mov
mov
outsb
scas
pop
das
xchg
dec
cli
mov
xchg
cmp
in
pop
mov
shll
mov
scas
fistl
int
out
push
test
mov
jle
adc
push
out
or
add
negb
push
push
aam
jmp
psraw
lds
cmp
xor
mov
mov
cmp
sbb
push
addb
add
mov
push
pushf
xor
dec
int
mov
mov
push
sbb
lods
inc
add
pop
or
jno
nop
add
mov
sub
push
add
orl
enter
mov
pop
out
adc
and
add
mov
jnp
pop
jns
rorl
lahf
dec
sbb
mov
je
mov
aad
int
outsb
sbb
stos
out
scas
aaa
and
mov
shl
add
pop
mov
xchg
sbb
adc
add
mov
leave
cmp
inc
inc
xchg
add
jno
adc
mov
add
jl
add
jge
jnp
jno
add
leave
inc
sbb
or
add
add
pop
add
mov
sti
mov
mov
lock
mov
lahf
mov
add
or
add
jecxz
movl
and
jno
lock
call
mov
add
sub
scas
adc
sahf
loope
inc
je
cmp
jbe
roll
cmp
mov
mov
cmpl
unpcklps
adc
add
add
lock
sbb
scas
fidivrs
or
add
adc
add
sub
xor
adc
jo
mov
jb
mov
stos
inc
pop
or
pop
pop
mov
add
add
mov
stc
out
fs
das
in
enter
js
les
xchg
cmc
push
insl
movsb
sti
frstor
cs
enter
add
rcll
loop
mov
add
sub
mov
lret
add
popf
hlt
or
xor
shll
int3
iret
jnp
cmp
push
or
add
xchg
cmp
ja
add
cmc
add
imul
cmpsb
shll
add
iret
cmp
cli
lret
sub
mov
mov
lods
lods
jbe
outsb
pop
fwait
mov
pop
adc
das
inc
xrelease
and
mov
mov
dec
fsub
pop
mov
mov
ficomps
scas
push
sbb
dec
movsb
and
add
iret
aam
cmp
inc
add
in
add
add
add
pushf
mov
stc
lock
mov
dec
xor
mov
das
stc
inc
xchg
sti
mov
mov
in
mov
movsb
lock
add
imul
push
into
sub
mov
pushf
int3
push
sub
sub
mov
inc
mov
les
mov
dec
outsl
jle
fstps
in
dec
mov
mov
sbb
add
pop
test
lods
inc
pop
mov
mov
mov
xlat
insb
dec
outsl
push
addb
ljmp
add
mov
sahf
fwait
movsb
out
les
jle
test
sbb
popa
xchg
push
pop
mov
mov
test
mov
pushf
push
sti
xchg
sub
add
cmpsl
popa
dec
mov
sbb
loop
mov
pushf
or
add
or
push
add
test
cmp
insl
pop
mov
inc
xlat
sbb
sub
add
ljmp
das
mov
sbb
jp
add
ja
and
mov
neg
bound
mov
mov
test
ja
add
mov
divl
add
popa
xlat
dec
fcomps
push
aam
addb
js
adc
mov
add
aam
add
loope
add
jbe
clc
nop
add
lcall
popa
imul
xor
cmp
jl
cld
ja
stos
push
pop
insl
lret
mov
mov
sbb
cmp
add
stc
xchg
cmpsb
out
insl
push
aam
out
add
leave
or
or
cmp
cld
addl
mov
add
daa
sbb
add
mov
pop
mov
mov
es
stos
ljmp
jno
in
push
push
decb
out
and
mov
jmp
xchg
shrl
xor
mov
push
outsl
test
add
fiadds
mov
lahf
mov
data16
mov
imul
add
rolb
mov
ret
imul
cli
and
xchg
into
std
in
roll
add
add
dec
aad
jp
sbb
add
push
in
adc
cmc
mov
dec
scas
mov
cwtl
rolb
mov
add
push
pop
jl
add
add
add
pop
dec
aad
sbb
add
cltd
push
add
inc
add
push
jne
inc
xor
ret
jmp
and
mov
jns
mov
mov
lahf
adc
insb
mov
or
fisubrl
fstpl
cmpsb
mov
fisubrs
cmpsl
xchg
stc
jg
add
cmp
inc
add
lods
decb
ja
xchg
inc
cmp
inc
add
dec
aas
push
imul
mov
in
add
mov
cmp
add
lods
cmp
xor
scas
andl
mov
dec
mov
iret
add
xchg
add
rcl
add
mov
cmp
add
dec
addb
test
add
mov
cmp
mov
rolb
mov
mov
repz
ja
mov
sbb
pop
testl
xchg
nop
add
dec
dec
mov
rolb
jle
push
add
push
mov
add
aaa
cwtl
and
dec
iret
shll
fisubrl
mull
add
dec
enter
mov
add
cmpl
test
add
mov
xlat
lret
mov
add
sbb
pop
push
into
pop
cs
xor
mov
cmp
cmp
popa
pop
movsl
fucomp
outsl
mov
pop
push
out
insb
outsb
aaa
sub
cmpsb
jmp
mov
xor
lds
rolb
cmp
push
inc
test
dec
inc
jmp
mov
sti
dec
lds
xor
mov
mov
sub
xlat
xor
or
ret
xchg
inc
mov
add
lds
push
sub
fldcw
in
sub
sahf
in
and
add
addb
movsl
in
sub
ljmp
push
push
and
into
or
mov
mov
in
lret
inc
aam
jae
jne
push
imul
hlt
clc
rol
add
pop
sbb
push
gs
cmc
enter
in
or
test
sbb
add
push
fsubl
and
mov
stos
jp
add
int3
lods
xchg
sbb
fs
vpunpckhwd
pop
rcr
cmp
rolb
xchg
jnp
xchg
test
mov
les
mov
stos
or
pop
lea
addb
push
lds
push
cmp
jno
jecxz
jg
test
mov
bound
mov
push
dec
in
movsb
fadd
add
jbe
test
add
sarl
adc
mov
lea
mov
mov
mov
add
dec
pop
add
mov
movsb
daa
mov
popa
stos
clc
in
and
mov
pop
mov
fiaddl
add
xchg
imul
sbb
add
add
xchg
xor
nop
add
or
pop
pop
notb
mov
mov
add
mov
mov
mov
mov
add
dec
fwait
mov
fstl
add
cld
addb
in
outsl
pop
cli
sub
imul
xchg
xor
mov
add
dec
or
jb
mov
cmp
cmp
daa
into
adc
mov
add
les
jae
mov
jl
in
fs
scas
jg
add
add
loopne
mov
add
add
and
lcall
and
test
mov
jo
mov
pop
lods
lods
add
push
mov
cmp
rol
addr16
push
aaa
cmpsl
push
jmp
stc
add
mov
test
insl
dec
sar
out
dec
daa
ror
and
cmp
lahf
cli
xor
test
mov
mov
icebp
cli
mov
mov
mov
js
clc
sti
adc
andl
inc
push
leave
inc
adc
mov
fnstsw
sbb
cmp
lds
sub
adc
add
ret
push
sbb
out
sbb
xchg
jp
je
or
jmp
push
or
cmp
add
xor
add
jbe
clc
mov
dec
rolb
mov
dec
add
testb
mov
push
addb
pop
jle
mov
dec
les
mov
mov
mov
add
lret
xchg
pop
in
dec
inc
cmpsb
cmp
scas
ss
jno
sub
stc
mov
mov
or
rorl
dec
ds
sub
inc
xchg
bound
mov
add
push
js
lahf
pop
dec
aas
xchg
mov
add
pop
lret
xchg
adc
mov
rol
outsl
shll
or
ja
add
out
inc
add
mov
mov
mov
bound
mov
dec
iret
fstl
ret
andl
cld
and
mov
pop
add
in
add
lcall
add
je
xorl
mov
dec
cmp
jns
jnp
ret
into
lret
mov
jge
add
mov
ficompl
cmp
mov
mov
jbe
adc
sub
add
cmp
les
jbe
add
mov
and
add
jge
add
test
outsl
mov
in
iret
int
jb
mov
daa
hlt
lret
mov
test
gs
enter
mov
fs
jp
sbb
aad
sub
fisubl
mov
and
js
adc
mov
popf
sub
pop
lods
jnp
icebp
mull
add
jno
test
enter
in
dec
and
mov
sub
add
xchg
addb
adc
mov
jl
insb
cmp
xlat
add
mov
or
mov
arpl
repz
add
cltd
or
xor
or
mov
dec
or
out
jne
xchg
sahf
pop
test
pushw
cmp
jno
lahf
cmp
add
in
les
pop
push
add
fdiv
add
add
add
mov
mov
mov
mov
jae
rep
ja
mov
data16
repnz
cltd
popf
cmp
repnz
mov
scas
cli
out
insl
mov
xchg
sbb
add
add
add
hlt
xchg
mov
mov
mov
and
mov
xor
mov
mov
add
and
mov
pusha
add
add
jp
add
xor
mov
add
leave
mov
rolb
mov
dec
shr
ds
and
jne
xor
add
mov
fsubrl
xor
mov
pop
pop
pop
jge
hlt
xor
add
mov
fwait
pop
repnz
add
outsl
ss
loope
push
mov
je
jg
fdivrs
aad
sbb
xor
dec
xor
mov
jp
jne
xchg
jp
push
fsubr
out
divl
fnstsw
out
fwait
pop
mov
inc
rolb
mov
inc
add
cmp
xor
add
cld
dec
sbb
add
pop
mov
test
repz
push
imul
loopne
mov
out
adc
mov
imul
loop
mov
pop
jge
adc
add
dec
adc
push
add
and
imul
jns
mov
mov
sub
pop
cli
fs
sbb
ret
incl
push
push
fisttpll
psadbw
add
gs
call
add
add
push
jecxz
cmp
add
dec
dec
adc
les
mov
fiaddl
pop
icebp
jge
add
cmpsb
mov
ret
and
mov
pop
imul
les
mov
mov
sbb
jl
rolb
mov
inc
ret
add
mov
add
fstps
mov
push
jle
push
inc
ret
es
jne
cmp
xor
add
mov
pop
xlat
cmp
sbb
or
out
sub
enter
push
clc
sub
push
push
imul
jne
cmp
outsl
jg
scas
adc
adc
cmpl
mov
add
and
mov
aas
mov
add
mov
add
mov
mov
fldl2e
xor
mov
pushf
mov
stos
das
jge
add
xor
mov
xchg
ja
and
mov
push
lds
fidivrs
xchg
lahf
filds
jae
pop
loop
mov
call
xchg
jbe
inc
push
dec
jl
add
or
inc
adc
mov
mov
dec
in
xor
mov
dec
mov
enter
inc
add
xchg
add
inc
pop
jecxz
imul
xchg
dec
lods
popl
mov
sub
shrl
or
xchg
lahf
mov
mov
rol
add
add
xchg
add
jmp
add
add
ficoml
jl
xor
push
in
cmp
jno
adc
mov
cltd
dec
dec
addb
xor
add
mov
outsb
leave
and
mov
stos
ret
or
mov
fisubl
arpl
pop
sbb
adc
and
or
add
cs
adc
mov
add
push
add
add
cmp
cmp
out
jl
xor
int3
loop
mov
mov
jne
add
fldenv
test
add
push
add
es
xchg
imul
add
or
add
inc
add
les
clc
decb
ss
clc
inc
push
add
lods
cwtl
mov
add
leave
mov
add
xchg
pop
mov
add
sbb
rolb
adc
out
std
push
ret
adc
mov
pop
scas
ljmp
arpl
lods
mov
mov
arpl
daa
fcmovnu
das
sbbl
addb
push
mov
or
push
push
add
jb
mov
clc
mov
mov
mov
cmp
arpl
aas
jmp
test
or
or
ret
add
mov
cmpsb
cld
sub
std
sbb
pop
inc
add
add
pusha
add
add
daa
dec
lahf
loope
jns
insb
dec
jecxz
stos
sbb
add
mov
sub
mov
push
add
add
mov
cmp
push
xchg
addl
jno
pop
inc
pop
outsl
cs
push
lds
adc
mov
add
inc
stos
mov
xor
adc
ja
cmp
mov
cltd
lret
sub
mov
mov
add
data16
mov
imul
imul
dec
cmc
pusha
add
mov
repz
pop
ret
fbld
mov
add
mov
add
test
push
adc
loopne
mov
add
inc
sbb
inc
add
inc
test
xor
mov
add
xor
mov
add
inc
flds
enter
add
mov
add
mov
dec
daa
jle
in
stos
cli
inc
inc
in
inc
add
and
mov
ljmp
push
add
add
orl
push
xor
mov
cmp
jmp
sbb
mov
lret
mov
and
mov
mov
insl
xor
xchg
add
fdivrs
out
fwait
cmp
gs
add
sbb
loope
rolb
mov
cmp
movb
fnstcw
hlt
mov
arpl
lret
in
jecxz
push
jge
add
aas
and
sbb
jo
mov
fsubrl
adc
mov
add
add
mov
dec
adc
sbb
xchg
test
add
psrlq
les
enter
mov
fildl
fstp
jae
stc
mov
and
fdivrl
add
and
repnz
adc
in
les
mov
ja
pusha
add
add
mov
dec
jae
and
mov
add
mov
adc
mov
cwtl
adcl
add
outsb
push
rolb
mov
jo
mov
nop
add
and
push
cmp
testb
mov
es
dec
mov
adc
add
add
add
or
pop
es
add
pop
movb
xor
mov
add
pop
das
jne
test
sub
lret
xchg
lock
or
dec
cs
jl
mov
lret
test
sbb
or
adc
xchg
push
mov
push
sahf
popa
mov
aam
cmp
add
popf
xchg
add
add
mov
xlat
add
jno
les
push
push
add
addr16
data16
add
icebp
xchg
pop
lret
dec
clc
inc
mov
pop
jo
mov
cli
loope
lods
mov
sti
adc
mov
adc
imul
push
add
mov
push
mov
test
lock
mov
lods
push
cmpsl
stos
repnz
mov
pop
ficomps
inc
repnz
add
int3
daa
sbb
add
dec
jb
mov
sbb
bound
mov
aad
jp
rcll
and
ljmp
dec
cmpsl
jp
rolb
mov
cmp
test
add
jg
jg
jbe
add
mov
cli
mov
pusha
add
lcall
xor
int
imul
add
dec
call
lret
add
sbb
mov
add
cli
xchg
adc
adcl
ja
add
testl
and
mov
add
mov
inc
fdivrl
outsb
pop
aas
sub
sbb
stos
push
lea
mov
stos
das
into
cld
dec
xor
mov
and
mov
sbb
lods
adc
rcrl
xchg
and
lahf
rcll
or
mov
sahf
jg
add
xor
mov
test
cmp
mov
mov
lret
jecxz
add
enter
mov
jl
aad
jae
add
xor
mov
sub
in
add
add
mov
dec
pushw
push
inc
cli
mov
rolb
mov
mov
push
mov
push
push
shrl
add
add
sbb
jne
add
mov
add
inc
add
mov
scas
hlt
gs
cmp
rolb
xchg
sbb
outsl
test
es
push
add
in
les
fstl
xchg
sub
ljmp
cli
popa
jp
or
bound
mov
fsubrp
fsubrs
push
cmp
mov
pop
add
pop
pop
cmp
mov
outsb
jle
out
fwait
jl
mov
ja
bound
mov
aam
out
in
xor
add
mov
mov
insl
aas
in
iret
push
adc
mov
pop
push
add
clc
push
jp
nop
add
add
mov
bound
mov
add
arpl
mov
xchg
sub
movsl
push
add
mov
add
cmp
nop
add
jmp
xchg
sbb
add
je
lret
cmpsl
fsubl
jno
add
fwait
mov
add
xor
mov
addb
mov
in
or
fsubl
mov
fwait
mov
out
stos
inc
add
lds
push
push
xchg
inc
das
fstl
jecxz
add
xchg
pop
dec
cmpsl
adc
gs
xorl
arpl
add
and
movsl
fsubs
mov
ss
add
insb
repnz
push
cmp
adc
bound
mov
cmp
add
add
add
pop
inc
icebp
into
sub
into
sbb
sbb
add
cmp
sub
mov
lock
mov
incb
dec
cmpsb
adc
add
push
mov
jne
pop
mov
mov
and
mov
and
adc
mov
push
jb,pn
mov
mov
pop
movsl
out
fisubl
test
add
sbb
das
fs
dec
je
add
aad
lcall
clc
jl
loopne
mov
jmp
sbb
add
test
lods
mov
add
popa
dec
dec
sbb
add
fldcw
rcrl
sahf
lods
sbb
jmp
add
or
mov
addr16
sbb
inc
and
movsl
add
mov
outsl
jmp
sbbl
pop
test
xchg
mov
add
leave
insb
fldt
cmpsl
mov
ret
notb
inc
pop
pop
mov
addr16
push
add
add
push
mov
pop
cmp
sub
pop
ret
xchg
daa
lds
divb
push
mov
pop
lods
mov
mov
and
popf
cld
decb
testl
adc
add
adc
mov
jmp
xchg
xchg
add
sub
iret
addr16
das
lcall
sub
add
mov
or
add
add
fcmovnu
stos
shll
mov
hlt
in
cmp
dec
mov
add
add
jg
pushl
adc
mov
iret
cmp
push
jp
push
add
lret
sahf
sti
in
addb
addb
xor
mov
add
outsl
arpl
aas
fldl
pusha
add
add
jne
add
jb
mov
cs
cmp
gs
aad
mov
mov
test
push
int
mov
in
inc
add
sbb
add
xchg
or
add
add
idiv
sarl
pop
pop
insl
int
nop
add
mov
dec
adc
xchg
mov
add
sti
jo
mov
mov
and
or
mov
add
pop
sub
push
pushf
xorl
or
push
add
xchg
mov
insl
sub
pusha
add
sub
std
lret
xchg
aad
jp
add
xor
mov
adc
xchg
xchg
dec
adc
popf
scas
sub
add
insl
std
cmp
add
and
mov
jp
adc
xlat
movsb
leave
aad
aas
xor
mov
add
fldcw
rolb
push
jae
insb
into
mov
push
ljmp
shl
add
out
add
xchg
leave
add
mov
scas
or
sub
pushf
dec
arpl
dec
cmpsl
adc
mov
call
fs
cmp
adc
mov
dec
jbe
jle
or
cmc
jmp
rolb
mov
addb
lret
mov
push
bound
mov
push
add
and
clc
cld
jbe
pop
dec
jmp
and
mov
mov
lret
mov
sub
xchg
pop
adc
rolb
pop
adc
pop
mov
aaa
loopne
mov
cmp
testb
mov
cld
iret
shrl
pop
out
xor
aam
sub
pusha
add
add
mov
add
les
lcall
pop
ss
sbb
add
mov
pop
mov
rolb
mov
add
xchg
mov
jge
and
pushf
dec
lcall
das
leave
addb
scas
imul
mov
mov
add
mov
mov
and
add
outsb
decl
stos
addb
adc
dec
cmpsb
mov
xchg
add
dec
pop
pop
pushf
ret
mov
and
data16
mov
sbb
scas
dec
aas
cmp
mov
add
add
dec
iret
rolb
insb
mov
mov
add
icebp
cmp
mov
mov
in
out
lods
pop
sub
add
pop
aas
mov
sbb
pusha
add
pop
and
cld
cmp
dec
repnz
adc
mov
notb
fbld
adc
imul
pop
popa
sbb
mov
mov
rol
cmc
push
pop
push
les
push
add
pop
movsb
pop
popl
add
mov
xchg
pop
sbb
cmp
add
xor
mov
cmc
imul
mov
add
mov
cmp
pop
jle
pop
pop
sbb
mov
or
jo,pt
mov
fnsave
add
cmp
mov
mov
mov
rolb
mov
or
in
sbb
adc
mov
cltd
ss
mov
add
push
add
cli
leave
mov
add
add
cmp
mov
enter
cmc
jg
lret
popf
xor
mov
mov
xor
mov
lock
sub
push
int
xor
mov
mov
pushf
repz
add
sub
add
hlt
sbb
mov
cmp
add
cmp
mov
cmp
fldl
pop
xchg
and
lahf
mov
sub
lahf
add
mov
xchg
out
rolb
sub
cmp
mov
mov
add
add
mov
leave
push
enter
mov
add
add
add
mov
adc
lret
add
ret
fwait
pop
cmp
data16
loope
dec
aas
out
mov
mov
addb
fisubs
add
add
sbb
jb
mov
leave
jge
inc
cmp
jbe
mov
mov
add
in
addb
xchg
rolb
dec
push
xchg
mov
mov
and
cli
cmp
inc
lods
fdivr
cmp
rolb
mov
push
rolb
pop
sbb
enter
ret
adc
jbe
addb
pop
push
sbb
or
jbe
dec
sbb
xor
sbb
sbb
add
add
mov
mov
jb
mov
xchg
add
xchg
data16
and
inc
xor
mov
dec
repz
jp
add
push
xchg
sbb
xor
push
aas
cmp
dec
cs
jl
add
mov
jbe
sub
shll
cwtl
mov
mov
mov
jmp
ret
nop
add
add
inc
add
addr16
mov
or
mov
cmpsl
cmp
adc
add
add
mov
mov
jae
pop
shll
mov
mov
adc
mov
test
jmp
mov
mov
mov
add
mov
pop
popa
and
add
dec
or
jg
add
lds
ret
inc
ja
icebp
in
pop
imul
inc
add
addb
outsb
sub
out
sub
xor
loop
mov
pop
cld
mov
imul
xchg
mov
adc
sub
add
mov
outsl
ret
or
fistps
icebp
mov
in
hlt
sub
out
int3
adc
add
nop
add
and
add
pop
out
push
jo
mov
add
add
xchg
mov
mov
mov
sbb
or
add
loop
mov
or
push
adc
mov
add
rol
xorl
sbb
mov
ds
pusha
add
add
in
xor
mov
sub
mov
push
add
push
jbe
add
inc
addb
scas
xchg
addb
enter
mov
add
add
xchg
pop
mov
addb
stos
sahf
stos
bound
mov
in
cmp
pop
nop
add
mov
add
mov
xchg
nop
add
xchg
int
jg
add
hlt
and
roll
and
mov
dec
cmp
pusha
add
clc
int
xchg
jnp
jle
insb
stos
outsb
fldcw
add
inc
lds
add
mov
mov
mov
mov
mov
add
push
lret
pop
les
xchg
std
sub
popf
int3
repnz
or
cltd
movl
jae
add
mov
aam
dec
push
ja
scas
push
add
inc
enter
test
ljmp
loopne
mov
dec
arpl
outsl
cs
xchg
jb
mov
mov
sbb
mov
lea
dec
divb
data16
mov
and
add
xchg
popa
pop
in
out
sbb
mov
ret
sbb
addb
jecxz
mov
or
add
mov
leave
inc
movsl
rolb
addb
fwait
out
and
mov
inc
add
mov
iret
fsubrs
add
sub
adc
mov
jnp
fdivs
mov
adc
and
mov
mov
popa
cmp
sub
add
push
push
jg
mov
out
repnz
insl
pop
das
xor
call
mov
inc
jns
fcomp
xlat
movb
cmpsl
mov
adc
mov
bound
mov
xor
jecxz
adc
mov
push
inc
pop
mov
mov
adc
ds
lahf
sti
js
sbb
xchg
jo,pt
mov
xchg
jb
mov
out
push
jnp
fnstsw
frndint
sub
xor
mov
addr16
faddp
dec
insb
and
pop
mov
dec
lods
imul
rolb
mov
mov
add
clc
pop
and
stc
jns
ja
dec
popf
aad
ds
outsl
push
add
pop
in
cmp
loope
lcall
lcall
lds
les
fwait
andl
add
mov
mov
jg
xchg
sub
adc
mov
or
fsubrl
add
mov
in
sub
call
movsb
adc
mov
js
test
lds
loope
inc
test
stos
stos
ret
pop
pop
out
add
nop
add
adc
add
mov
and
mov
add
xor
lods
xchg
add
es
xor
mov
sub
in
addb
mov
xchg
pop
mov
pop
cmpsb
arpl
lea
add
mov
icebp
sbb
jb
mov
mov
mov
outsl
and
push
and
lods
fldenv
mov
add
or
scas
or
in
add
subl
cmp
xchg
mov
push
lcall
sbb
mov
dec
adc
pop
fdivrs
add
adc
int
shll
mov
out
das
mov
mov
add
mov
iret
inc
pop
push
push
xchg
mov
test
jmp
add
sub
decl
adc
push
add
add
add
sbb
out
imul
adc
mov
adc
or
add
mov
add
adc
lret
mov
add
pop
call
add
mov
nop
add
mov
call
add
incl
cmpsl
fsubrl
mov
mov
mov
arpl
mov
push
out
or
xorl
mov
add
dec
dec
jne
dec
loope
mov
mov
sub
lods
movsl
testl
or
jns
stc
orl
sub
mov
mov
jle
sarl
dec
in
mov
aas
daa
xor
mov
fstl
insb
mull
int3
or
insl
lcall
ja
add
icebp
xor
xlat
sbb
mov
mov
mov
fnsave
sbb
jp
outsb
cmpsb
lock
enter
cmp
jp
xor
fdivrs
or
add
pop
mov
add
mov
add
mov
gs
test
inc
add
xor
push
cmp
mov
mov
inc
add
les
rolb
mov
add
pop
loope
faddl
add
mov
out
inc
idivb
add
out
lds
add
mov
lea
sub
out
cli
shrl
push
sbb
or
addl
mov
repnz
sub
dec
fcoms
add
pop
mov
or
sahf
mov
or
out
cmp
or
add
xchg
in
mov
and
sbb
imul
xchg
mov
lock
mov
fisubs
dec
jae
imul
add
mov
pop
or
aas
mov
pop
and
mov
xchg
lods
push
add
mov
shll
add
mov
mov
gs
add
out
fistl
leave
idivb
and
pop
or
mov
loop
mov
add
stos
and
inc
dec
jl
test
mov
mov
out
sub
add
inc
cld
cld
pop
scas
mov
mov
xor
mov
insl
ss
xchg
hlt
jl
in
add
push
add
mov
or
pop
filds
mull
cmp
stos
popf
xlat
lret
cmpsb
lahf
repnz
addr16
lcall
dec
inc
scas
rcl
add
add
inc
or
test
push
cli
fs
xchg
rolb
mov
lret
sbb
mov
push
add
add
mov
lods
mov
mov
arpl
add
ds
pop
inc
jmp
add
xlat
insb
sbb
jno
cmc
mov
inc
add
push
adc
loop
mov
or
jbe
test
jg
add
push
dec
dec
rolb
mov
add
mov
add
mov
xor
push
xlat
negb
xchg
out
mov
pop
jno
in
dec
jbe
xchg
imul
insl
das
call
dec
or
lds
add
std
inc
and
mov
hlt
aas
xchg
inc
mov
jo
mov
sbb
and
push
sub
sub
ficoml
or
ja
or
scas
lcall
es
cs
in
ret
xchg
jecxz
pop
ror
inc
add
mov
rolb
mov
add
mov
mov
sbb
out
mov
pop
jo
mov
add
outsl
xchg
add
int3
loop
mov
inc
add
inc
loopne
mov
mov
pop
in
fnstsw
xor
mov
and
pop
js
xchg
vfrczss
mov
sbb
loope
xchg
cmpsl
cld
pushf
add
cmc
addb
or
mov
xchg
popf
test
add
or
addr16
xor
ret
or
repnz
sub
jp
fucomp
ficompl
addb
dec
test
sbb
mov
mov
sub
orl
mov
push
add
jp
es
add
mov
repnz
cld
or
add
repnz
mov
arpl
or
add
mov
lods
cs
mov
fildl
lods
int
xor
mov
xchg
jg
add
add
add
adc
or
addb
sbb
add
mov
xor
add
xor
cmp
ret
rolb
xchg
jo
mov
add
inc
add
jg
dec
sub
xchg
addr16
push
xlat
cmp
add
mov
or
repnz
adcl
mov
cmp
mov
jae
imul
stc
or
sub
int
pop
mov
mov
pop
push
js
sub
xchg
sbb
jbe
dec
dec
lea
ja
std
push
add
into
mov
sub
gs
and
add
add
pop
xor
adc
mov
clc
inc
push
cmp
adc
add
mov
adc
mov
out
cmp
fists
mov
pop
addb
pop
aaa
outsb
movsb
ja
sbb
rolb
mov
pop
das
mov
mov
repnz
add
fldenv
and
das
cmpsl
pop
and
or
xor
mov
push
xchg
add
mov
notl
mov
leave
and
mov
adc
mov
push
icebp
adcl
mov
mov
mov
fs
add
add
int3
xor
mov
test
add
mov
mov
ret
aas
ficompl
lods
mov
adc
and
mov
pop
loop
mov
mov
aam
cwtl
into
pop
jg
hlt
xor
add
cmp
fnsave
add
ret
loop
mov
push
andl
mov
inc
xchg
mov
jnp
pop
dec
rolb
lcallw
js
add
jns
add
mov
inc
add
add
add
add
sbb
lods
xchg
fstps
xchg
add
mov
mov
fisubs
test
push
out
sub
add
ss
and
mov
dec
les
mov
xor
mov
jb
mov
add
jp
dec
xchg
in
jmp
lahf
ret
mull
add
dec
pop
nop
add
push
lea
pop
test
add
mov
mov
testb
push
mov
mov
pop
and
push
mov
fwait
mov
inc
aaa
mov
mov
jge
jnp
xchg
decl
pop
mov
cmpsl
outsb
and
mov
imul
mov
lods
mov
and
mov
xlat
push
enter
mov
loope
fcmovnu
insb
push
push
ficoml
fisubs
pop
addb
xchg
xchg
jp
sbb
add
imul
mov
rolb
mov
clc
roll
add
dec
rolb
mov
bound
mov
cli
mov
les
sbb
pop
out
xor
cmpsb
fsubs
mov
inc
add
gs
and
add
inc
push
add
lret
add
stos
das
fnstsw
adc
mov
add
add
or
xchg
call
sbb
scas
jmp
js
add
dec
fcompl
mov
inc
jge
push
add
xor
cli
lea
add
jbe
mov
lcall
add
pop
inc
ja
mov
cmp
mov
in
cmp
repnz
pusha
add
xor
addl
mov
in
pushf
das
aaa
jp
pop
adc
add
push
cld
and
mov
mov
dec
mov
mov
add
testl
sub
xchg
mov
jae
pop
lds
sbb
pop
insb
movsb
or
xchg
mov
cmp
add
mov
pop
jp
add
and
mov
idiv
mov
inc
xor
add
mov
inc
add
outsl
mov
aam
adc
mov
adc
test
add
mov
int
aad
xlat
or
mov
add
add
mov
mov
add
addb
sub
add
mov
out
int
and
jg
out
xchg
inc
lahf
xchg
addb
rolb
mov
mov
sub
rcrl
int
add
mov
jb
mov
dec
xchg
fimull
jnp
std
jnp
cmpps
pop
rolb
mov
xlat
mov
mov
sbb
push
repz
sbb
mov
xchg
sbb
push
push
add
test
push
int3
and
mov
adc
cmpsl
call
imul
fisubrs
dec
jns
loope
adc
mov
mov
into
hlt
mov
xor
mov
add
imul
add
xor
pop
jmp
fidivrl
daa
or
adc
inc
add
js
addb
jp
mov
aas
push
psubw
mov
aad
push
push
mov
mov
or
loopne,pn
mov
shl
fldcw
adc
mov
pop
sbb
pop
rolb
mov
mov
mov
lock
adc
mov
inc
or
add
xor
xchg
add
pop
rolb
mov
pop
and
testb
aaa
popf
jns
dec
push
add
les
stos
cmpsl
mov
das
fadds
add
pop
mov
mov
cltd
gs
mov
sbb
imul
insl
mov
insl
dec
cmp
sub
fsubrs
mov
cli
or
cmpsl
push
jle
repnz
dec
aad
fisttps
add
scas
sti
pop
sub
pop
iret
mov
stos
mov
mov
add
adc
lods
pop
xor
sub
sbb
in
test
add
sti
outsl
push
jnp
or
add
fidivrs
pop
mov
add
lods
jl
mov
or
xchg
int3
push
and
mov
movsl
dec
mov
push
leave
pop
mov
or
add
add
iret
mov
xor
mov
add
mov
add
push
push
mov
mov
add
repnz
sbb
imul
fcmovnb
pop
mov
jmp
iret
repz
mov
pop
aad
scas
dec
or
add
negb
cmpsb
pop
inc
mov
adc
inc
mov
push
mov
into
inc
add
push
xchg
push
and
pop
lcall
mov
push
inc
mov
in
dec
leave
inc
add
cmpl
mov
lret
mov
sarl
and
add
sbb
add
adcl
mov
mov
int
in
mov
add
sbb
mov
push
mov
bound
mov
add
and
testb
filds
cmp
sub
mov
dec
dec
pop
fwait
ja
mov
push
add
out
test
xor
fistpll
and
mov
std
cs
add
xchg
add
add
add
out
pop
lods
cltd
mov
scas
jl
pop
sahf
stos
mov
add
sub
sti
dec
jmp
jno,pn
add
add
jle
mov
push
add
sti
addr16
sub
cld
cmc
mov
mov
arpl
rolb
mov
or
mov
imul
mov
mov
jnp
jno
addr16
out
call
stos
push
loope
scas
add
mov
negl
mov
cmp
add
xor
mov
adcl
addb
fs
add
add
outsb
bound
mov
test
into
sahf
or
and
enter
lret
pop
push
lds
mov
inc
sbb
add
push
jle
cmpsl
adc
jns
add
add
mov
push
push
dec
adc
mov
aaa
clc
fidivs
add
cmp
add
jl
mov
add
nop
add
or
shrl
dec
call
push
add
sub
inc
repz
pop
stc
cmc
cld
add
mov
ror
sub
or
add
mov
add
divl
sub
add
mov
mov
adc
xor
xlat
outsl
aad
pop
adc
mov
inc
add
mov
jge
jno
jo
mov
cld
imul
and
mov
dec
cmp
dec
sbb
pop
ret
inc
adcl
sti
addr16
imul
add
or
and
push
adc
add
lret
inc
lods
add
mov
dec
mov
mov
add
mov
pop
or
loopne
mov
mov
lea
add
add
addb
stos
jo
mov
sbb
push
sbb
add
xchg
jp
sti
push
jmp
lret
in
rolb
mov
mov
add
mov
mov
add
add
in
push
repz
mov
mov
xchg
or
add
add
or
mov
ja
sbb
mov
mov
jne
dec
ljmp
pop
leave
aad
out
mov
add
mov
sub
mov
stos
div
lret
cmp
popf
cmp
or
sub
mov
rolb
mov
aam
xor
jae
std
sub
and
xor
mov
adc
xchg
add
mov
push
sahf
pop
mov
mov
lcall
pop
add
mov
pusha
add
iret
xor
jecxz
inc
add
mov
lds
rolb
mov
mov
mov
pop
pop
lods
cmp
jge
ja
adc
and
mov
andl
sub
iret
mov
roll
adc
dec
mov
and
repnz
sahf
sbb
and
sahf
jbe
arpl
fs
aaa
ja
push
add
cmp
pop
repz
test
mov
lcall
mov
mov
push
add
adc
scas
dec
adc
addb
sub
imul
push
movl
dec
cmp
popf
mov
dec
jo
mov
add
mov
mov
mov
outsl
addb
int3
push
add
xor
add
mov
stc
pop
and
mov
arpl
mov
mov
xchg
sbb
jno
dec
and
mov
or
mov
addr16
cmp
xchg
add
out
add
add
mov
add
mov
addr16
loopne
mov
loope
dec
test
xchg
add
rorl
mov
in
aaa
or
jns
cmp
sbb
leave
lods
cltd
popa
inc
mov
daa
shrl
jo
mov
add
sub
pop
fmuls
and
mov
add
mov
dec
clc
adc
mov
imul
aas
mov
mov
mov
mov
push
lcall
xchg
int3
pop
pop
or
mov
imul
adc
mov
xor
mov
inc
jecxz
bound
mov
insl
rolb
mov
add
inc
jle
or
add
add
add
xchg
pushf
inc
add
mov
mov
mov
loope
out
pop
dec
mov
imul
sub
out
sbb
add
add
cmpsl
out
add
gs
loopne
mov
push
loope
js
push
xchg
out
push
inc
add
out
add
mov
dec
push
xor
mov
out
push
add
frstor
mulb
cld
xchg
mov
lret
aad
scas
lods
mov
push
xchg
add
pop
inc
cmpsl
dec
push
add
add
add
xchg
add
mov
add
xchg
pop
cmp
jnp
jl
outsl
push
mov
or
add
mov
xchg
das
add
mov
add
mov
sahf
xchg
cmp
sbb
add
mov
add
aas
xchg
test
and
mov
xor
mov
add
out
pushf
add
push
push
xor
cmc
dec
mov
fdivl
xor
insb
stc
mov
sub
mov
int
sbb
flds
mov
outsb
sbb
mov
mov
js
dec
adc
cltd
pop
sub
mov
mov
mov
sahf
enter
jnp
mov
movsb
mov
aas
mov
push
sub
cmp
inc
lea
cmc
cmp
movsb
lcall
dec
ret
fs
inc
pop
mov
cmp
out
mov
pusha
add
jo
mov
mov
jo
mov
ss
add
mov
mov
ja
or
cmp
pop
add
mov
rolb
and
fwait
pop
cmp
mov
mov
mov
jb
mov
lock
mov
mov
aam
adc
fcom
std
add
add
int3
pop
leave
lods
inc
add
mov
mov
push
push
adc
mov
xor
mov
push
pop
loope
push
test
add
push
add
pop
or
mov
add
lret
add
clc
and
or
enter
add
add
add
stc
loopne
mov
sub
cmp
loope
or
mov
pop
jmp
clc
cli
and
mov
pop
daa
jae
addb
pop
decb
add
frstor
and
inc
xor
jmp
add
ror
xchg
sub
insb
out
sbb
add
xor
cltd
jno
outsb
add
lahf
in
int
xchg
negb
cmp
push
icebp
pop
fs
rcl
or
add
pop
out
popf
sbb
mov
adc
mov
mov
jmp
loopne
mov
add
loop
mov
jo
mov
add
or
adc
mov
xchg
lods
jg
or
push
repz
inc
scas
xor
mov
pop
lret
cld
fprem1
xor
mov
jg
mov
xchg
outsl
xlat
rcll
mov
ret
push
fidivrs
ss
arpl
add
mov
pop
or
clc
test
scas
fsubrl
ret
imul
and
mov
and
into
adc
ficomps
dec
xlat
jle
add
adc
mov
movsl
dec
adc
xchg
mov
push
scas
jg
sbb
outsb
ja
into
dec
adc
mov
mov
mov
or
in
add
jne
add
add
add
mov
pop
mov
mov
mov
dec
nop
add
inc
inc
push
daa
inc
mov
sti
popl
das
add
jns
add
mov
add
enter
sub
adc
hlt
fisubrl
push
lock
fisttps
sub
and
jno
or
mov
mov
ret
cmp
lea
mov
push
add
test
mov
in
jecxz
js
int3
xchg
jge
add
mov
jne
sub
xor
mov
rolb
pop
je
mov
add
insb
cmpsl
repz
jecxz
add
mov
enter
push
lcall
mov
dec
lcall
loope
fwait
jle
pop
addl
pushf
dec
mov
mov
fcmovne
jns
rcll
int3
scas
scas
mov
push
mov
or
pop
in
sbb
sbb
mov
lcall
fstps
test
or
add
cmpsb
push
or
xchg
xchg
fsubrs
sbb
xor
lahf
addb
inc
lds
add
mov
sbb
add
add
jge
fildll
xchg
add
pop
xchg
adc
stos
lret
pop
and
jle
add
mov
pusha
add
fs
jl
add
sub
sahf
xor
mov
aad
mov
jl
add
repnz
mov
out
cli
scas
cld
pop
mov
add
fmuls
pop
mov
inc
add
push
ficomps
in
test
arpl
xchg
and
inc
in
sub
dec
sahf
js
sub
mov
mov
add
in
fs
sbb
jg
inc
sbb
es
popw
adc
loope
add
mov
lock
ret
push
add
add
mov
mov
sbb
in
jg
jl
xchg
inc
ret
fmul
xchg
add
mov
add
add
cmp
and
mov
movsl
pop
and
enter
push
jp
out
add
mov
xor
push
cmc
stc
cmp
cs
imul
aaa
inc
adc
add
add
cmpsl
jge
test
add
and
sub
dec
jecxz
xchg
fmull
ret
pop
cmp
add
mov
dec
xchg
aaa
adc
mov
lea
nop
add
rolb
mov
popf
jne
add
xor
aad
or
mov
cmc
fsubrs
add
lea
mov
repnz
mov
sbb
push
mov
dec
xor
add
push
addb
mov
sub
cmp
into
mov
ffree
add
cld
bound
mov
or
push
sbb
std
ret
mov
cmp
add
or
add
pushl
add
leave
aaa
mov
push
aam
leave
or
inc
and
mov
enter
cmpsl
pop
and
fnsave
add
push
test
pop
lahf
data16
daa
and
mov
stc
out
dec
or
add
lods
dec
sbb
sbb
sub
add
jle
pop
dec
addr16
addb
cmp
xor
cmpl
dec
out
loopne
mov
lock
or
out
jle
xchg
mov
test
pusha
add
iret
jns
outsl
sbb
or
cmc
out
and
jl
and
adc
mov
les
push
loopne
mov
add
sub
mov
xor
mov
mov
pop
outsb
js
mov
and
add
pushf
jge
es
mov
or
sbb
mov
iret
icebp
sub
push
add
ffree
and
pop
xchg
add
mov
in
jnp
push
iret
aad
jbe
xchg
sbb
mov
cmpsl
testb
add
inc
aad
add
pop
cli
add
mov
jbe
out
jne
add
add
outsl
in
cwtl
cmpsb
fdivrs
jge
jle
addr16
cwtl
fdiv
xor
add
daa
fs
mov
sbb
rolb
jb
mov
cmp
loopne
mov
add
sahf
dec
fisubrs
pop
addb
xchg
mov
inc
psllw
ljmp
add
mov
mov
add
fnstenv
fdivrl
int
pop
and
addb
mov
add
add
call
jnp
jae
jmp
mov
mov
mov
mov
jne
shll
sti
fs
insl
jl
js
out
addb
repz
mov
out
fs
enter
cmp
inc
stos
scas
cltd
addr16
rolb
mov
add
out
lret
pop
and
mov
add
jmp
loop
mov
or
sti
fidivrs
ret
adc
adc
pop
mov
xchg
into
lods
imul
stos
addb
lock
sub
mov
push
add
jmp
sbb
add
xchg
sub
add
jne
mov
add
add
and
sbb
push
neg
jp
cmp
rolb
mov
adc
mov
fmuls
mov
jl
add
pushf
jb
mov
mov
push
addb
xchg
int
arpl
fsts
int
testb
mov
push
add
test
or
rol
adc
mov
pop
or
pop
inc
adc
sti
cmp
jne
xchg
sbb
or
scas
cmpsb
jge
mov
xor
out
xchg
xlat
jbe
repnz
dec
xchg
outsb
test
push
xlat
mov
test
daa
rolb
adc
mov
inc
iret
cmpsl
popf
addb
mov
push
add
clc
inc
add
cmpsb
mov
jns
out
js
call
mov
imull
push
jne
repz
sti
hlt
aad
add
add
mov
fcoms
hlt
jge
dec
in
in
inc
sbb
jne
repz
inc
icebp
xchg
or
push
or
mov
or
ja
mov
ss
stos
roll
cwtl
test
add
xchg
imul
arpl
add
cld
fisttpl
in
xor
js
add
mov
pop
xor
in
inc
add
mov
add
mov
push
negb
pop
loopne
mov
dec
mov
in
cld
sti
or
jl
addb
dec
mov
mov
xchg
mov
push
lret
pop
mov
fcoml
cld
cltd
cmpsb
or
push
addr16
mov
xor
mov
mov
subl
add
rolb
mov
mov
mov
cmpsl
inc
mov
mov
rolb
mov
push
enter
add
mov
adc
cmc
lods
push
sbb
addb
xchg
mov
dec
inc
add
fcompl
xor
mov
mov
fwait
inc
call
leave
ljmp
ficoms
test
adc
mov
daa
jbe
testb
cld
pop
xor
into
je
add
mov
loop
mov
dec
or
mov
dec
xchg
cld
jecxz
inc
add
lret
lods
iret
test
xor
mov
pop
rolb
pop
ss
fisttps
inc
test
add
lcall
data16
jnp
or
and
mov
cld
loope
add
mov
lahf
mov
ds
popa
adc
rolb
mov
gs
add
rolb
mov
fadd
push
add
outsb
stos
std
test
mov
out
push
add
mov
add
cmp
stos
lret
mov
mov
xor
add
aaa
loopne
mov
rcrl
sti
or
sub
cmp
jmp
xor
push
fldcw
add
dec
push
addr16
add
mov
je
jmp
mov
mov
or
push
adc
mov
movsb
cs
jle
outsb
mov
push
inc
lcall
rolb
mov
bts
daa
xchg
add
mov
int3
hlt
mov
mov
and
lahf
xchg
cmpl
fsubl
add
cmp
mov
pusha
add
jecxz
sub
ja
add
sub
roll
sbb
sub
imul
dec
emms
jno
rolb
mov
out
add
aam
add
mov
mov
in
rcr
insl
mov
mov
add
add
fimuls
mov
test
int
test
dec
dec
mov
jne
daa
enter
jmp
popa
sub
mov
add
mov
sbb
test
mov
mov
mov
ficomps
push
jne
pop
cmpsl
dec
sbb
fimull
ds
sbb
mov
inc
sbb
lret
mov
and
shll
mov
in
inc
lret
lods
mov
dec
sbb
mov
mov
insb
pushf
push
mov
mov
aam
fwait
std
mov
mov
push
rolb
push
add
sbb
in
cmpsl
bound
mov
inc
inc
imul
mov
mov
mov
icebp
and
add
aad
xor
mov
aad
or
add
pop
in
std
js
sub
int3
cmpsb
pop
sub
gs
addb
mov
mov
add
or
sub
add
insl
cmpsl
jmp
inc
add
push
push
add
cmpsb
push
jg
arpl
sub
repnz
enter
in
jb
mov
jb
mov
mov
mov
or
mov
flds
je
xlat
int
push
add
mov
add
fidivrs
add
mov
ret
sbb
fs
dec
or
mov
and
xchg
bound
mov
inc
push
add
aas
ds
cmc
loop
mov
mov
cmpsl
test
pop
fwait
cltd
adc
mov
leave
mov
and
mov
js
xchg
mov
mov
dec
rolb
jl
push
add
icebp
outsb
dec
jns
cmp
push
cmp
enter
add
icebp
mov
fiadds
add
add
daa
addb
mov
xchg
pushf
add
mov
adc
roll
jle
xchg
cmc
nop
add
sub
pop
xchg
imul
mov
call
int
mov
xchg
cmp
aaa
pop
cmp
mov
mov
add
sbb
and
mov
lock
inc
sbb
dec
mov
fisubs
xchg
jae
mov
add
pop
inc
ds
push
add
adc
add
mov
push
add
xchg
ficoml
psrad
mov
sub
sub
dec
aam
lret
fiadds
outsl
pop
push
out
ljmp
mov
xor
add
mov
mov
rolb
mov
add
dec
dec
pop
lods
jecxz
inc
add
xchg
std
aad
jmp
inc
lret
pop
out
jp
pop
sub
pop
clc
sbb
in
lahf
outsb
sbb
add
fs
data16
mov
sbb
scas
push
fdivrs
mov
mov
rep
add
fldt
mov
mov
insb
imul
in
push
cld
jns
jo
mov
add
iret
in
rcl
dec
pop
movsl
ljmp
addb
cmp
pop
std
cmp
sbb
xor
lods
repnz
push
mov
jmp
mov
fstps
mov
add
faddl
push
mov
mov
push
mov
mov
or
movsl
outsb
mov
sub
sub
xor
mov
dec
or
add
add
mov
data16
sub
int3
add
mov
pop
ret
add
xchg
inc
jecxz
sbb
xchg
pop
mov
bound
mov
adc
movsl
jne
add
mov
mov
cltd
pop
mov
loopne
mov
jns
rolb
mov
rolb
mov
add
mov
fdivs
mov
push
bound
mov
or
mov
adcl
inc
out
or
ljmp
mov
mov
lret
lea
call
add
aad
or
push
xchg
and
mov
or
xchg
lea
add
mov
mov
ret
mov
jmp
mov
out
add
mov
add
aad
add
loope
cli
lock
add
add
icebp
push
or
cmpsb
nop
add
adc
es
xchg
jle
test
mov
mov
dec
or
scas
mov
mov
push
dec
ror
pusha
add
ljmp
sbb
daa
sti
mov
mov
dec
hlt
outsl
xor
add
addl
cmp
scas
cmp
xor
mov
xchg
cmp
push
and
add
mov
push
test
xor
mov
js
inc
add
jae
nop
add
cmp
sub
mov
fld
in
jo
mov
add
mov
cwtl
push
mov
mov
mov
mov
cmp
or
mov
dec
ret
call
bound
mov
xchg
jmp
jge
repnz
test
je
cmp
mov
mov
jle
jmp
mov
add
test
mov
add
add
mov
jl
inc
iret
dec
stos
dec
loop
mov
sub
push
in
dec
mov
cmpsl
pop
movsb
in
pop
int3
je
add
int
test
cltd
test
add
aaa
cmc
xchg
add
mov
mov
pushf
mov
mov
sbb
hlt
jmp
or
push
out
test
mov
add
mov
dec
adc
jecxz
mov
pop
jge
inc
mov
ljmp
mov
mov
fcoms
dec
pop
sbb
rolb
push
ud2
lds
and
add
mov
das
sbb
jge
push
es
les
mov
test
add
and
sbb
sub
cmp
dec
mov
inc
dec
shll
fcomps
push
mov
js
add
cmp
mov
push
add
and
mov
cmp
les
mov
xor
insb
outsl
pop
insl
enter
sub
xchg
mov
ret
rolb
mov
jne
sbb
je
arpl
lret
js
in
push
mov
dec
xchg
mov
movsl
repz
mov
movsb
mov
mov
std
mov
mov
add
fsubs
mov
jno
xor
dec
out
test
add
out
ds
sti
les
mov
pop
sub
add
add
sub
sahf
insb
pop
rolb
mov
jb
mov
xor
push
stos
in
aas
aas
push
sbb
mov
add
inc
push
add
mov
pusha
add
sbb
and
mov
movsb
pop
push
add
gs
negb
sbb
or
push
loop
mov
loopne
mov
dec
mov
hlt
xchg
test
ljmp
popa
push
jp
jl
mov
outsl
jae
xor
mov
cld
pop
daa
xchg
mov
mov
test
or
in
lret
add
rcl
mov
fbstp
add
push
dec
add
scas
in
cmpsl
xchg
add
push
add
mov
repnz
xchg
cmc
mov
fcomps
add
mov
adc
add
sbb
add
loope
pop
ljmp
cmp
lods
mov
mov
add
adc
mov
mov
inc
adc
mov
cld
push
add
add
adc
add
xchg
cmpsb
push
aam
pop
arpl
mov
add
lcall
cmp
sarl
bound
mov
dec
das
push
outsl
jge
jge
xor
cltd
or
xor
add
mov
mov
ficomps
adc
cmp
add
dec
test
adc
mov
inc
je
ds
sub
push
pusha
add
ret
out
xlat
pop
lds
add
add
jge
add
sarl
sub
jge
mov
pop
dec
push
stos
pop
jae
pop
adc
mov
add
imul
mov
add
xchg
xor
flds
les
add
mov
add
jmp
subl
lahf
inc
jno
ds
or
arpl
mov
dec
xor
cmp
mov
mov
sub
mov
sbb
iret
dec
mov
add
fptan
add
pop
xor
dec
inc
and
mov
daa
andl
roll
or
jp
push
repnz
shl
add
push
cmp
sahf
sub
and
mov
decb
push
popf
mov
test
or
iret
in
out
out
mov
adc
mov
cmp
in
in
aad
aad
add
add
aaa
test
push
inc
movl
mov
mov
daa
add
bound
mov
adc
mov
out
push
xchg
leave
xchg
insl
or
dec
scas
dec
adc
ret
mov
adc
mov
inc
mov
divb
add
jns
clc
cmp
add
xchg
add
data16
cwtl
mov
mov
bound
mov
aad
call
stos
and
je
in
or
jns
add
mov
pop
and
vdivsd
add
add
add
insb
push
xchg
test
aaa
cmp
add
inc
add
fidivrl
nop
add
mov
out
push
adc
mov
sub
test
mov
adc
push
adc
stos
out
xchg
jle
nop
add
stos
shll
sbb
or
int
add
mov
add
inc
cli
jo
mov
ror
pop
jb
mov
mov
out
clc
mov
bound
mov
test
mov
mov
add
call
inc
add
dec
or
popa
sub
xor
mov
sarl
arpl
pop
pusha
add
add
mov
add
inc
stos
ret
jns
push
ds
adc
push
add
xor
xorl
call
add
sti
fisubrs
mov
push
sub
ret
lcall
faddp
add
mov
aas
and
jmp
add
add
in
cmp
movsl
push
mov
mov
daa
push
cli
pop
mov
add
rcrl
push
das
push
xor
dec
mov
inc
addb
or
lea
fisttpll
addb
jns
mov
dec
addr16
sahf
sub
jae
sahf
add
mov
icebp
lock
inc
int
sub
xchg
movsb
rolb
mov
test
xor
js
add
jno
pop
xlat
data16
mov
test
addb
xchg
add
in
sub
test
add
or
cs
jb
mov
push
add
nop
add
out
push
push
repz
mov
pop
ss
jno
add
add
mov
aaa
pop
lea
and
mov
cmp
xor
mov
add
mov
mov
out
sub
add
add
jne
inc
sub
fdivrl
jae
push
or
jle
push
push
add
mov
add
mov
add
mov
pop
mov
mov
je
add
add
mov
out
push
xor
mov
add
add
add
inc
test
in
inc
mov
test
adc
mov
sbb
mov
sti
xor
mov
add
cmp
mov
mov
add
jns
or
dec
push
stc
nop
add
mov
mov
mov
mov
cli
stos
mov
mov
add
insw
mov
jp
add
repnz
jne
xor
subl
cmp
mov
push
add
inc
add
add
xor
test
add
mov
fistl
add
add
xor
insl
mov
mov
mov
mov
insb
dec
jae
add
add
mov
imul
mov
add
add
mov
test
rorl
sahf
mov
xchg
dec
xchg
in
sahf
sub
jno
add
test
pop
cli
gs
push
and
push
add
add
mov
mov
xchg
add
in
popa
out
push
adc
mov
add
mov
push
push
dec
xor
mov
enter
je
push
aad
lods
pop
mov
jge
add
into
push
shl
clc
in
push
cmpsb
push
add
loopne
mov
cltd
fwait
xor
mov
cld
xchg
in
cmp
mov
add
rolb
push
addb
dec
lret
mov
push
arpl
das
test
xchg
loopne
mov
dec
call
movb
mov
inc
pop
cmc
fstps
mov
jecxz
mov
bound
mov
cmp
mov
test
add
stc
test
push
push
decl
sbb
cmp
lods
lods
stos
mov
xor
jnp
mov
add
xchg
jb
mov
ficompl
inc
addr16
cmpsb
ljmp
add
pop
dec
cltd
leave
or
mov
mov
add
add
iret
rolb
mov
mov
add
mov
push
and
mov
lahf
adc
mov
out
sub
mov
cmp
int
add
lods
outsl
sbb
mov
cmc
sbb
cmp
mov
movsb
push
nop
add
mov
fnsave
mov
jae
cmp
add
lds
out
lods
mov
mov
pop
pop
jmp
daa
or
filds
mov
mov
iret
pop
dec
dec
cmc
add
fstps
lods
xchg
data16
in
sbb
inc
add
mov
enter
int
inc
add
xor
mov
arpl
mov
enter
mov
sbb
push
add
cs
mov
popf
adc
mov
in
enter
and
mov
lcall
repnz
ficoml
mov
mov
jns
sti
mov
xor
add
iret
and
test
pop
mov
mov
iret
adc
bound
mov
mov
sbb
add
mov
add
add
mov
inc
add
add
cld
push
fwait
imul
mov
add
jns
mov
add
insb
mov
xchg
std
addb
xor
sub
add
adc
add
insl
sbb
or
lret
add
inc
push
lahf
aam
push
test
imul
cmp
outsl
fs
or
loop
mov
add
jne
xchg
fisubrs
sti
in
sub
mov
sbb
scas
push
and
pop
adc
mov
les
push
gs
bswap
add
mov
add
mov
leave
mov
addb
sbb
add
mov
mov
stos
cmpsb
inc
ret
pop
scas
xor
mov
push
or
mov
gs
fdiv
push
add
add
sub
int3
push
xchg
or
pushf
inc
push
add
out
pusha
add
lahf
scas
scas
cmp
add
add
sbb
sbb
gs
in
movsl
ljmp
mov
add
mov
fsubs
add
xor
mov
pop
dec
cmp
clc
nop
add
mov
inc
xchg
mull
fidivrs
dec
test
test
add
pop
sub
ds
filds
add
dec
idivb
aam
pop
int
in
incb
outsb
pop
jmp
add
add
lock
xor
mov
and
add
sldt
mov
and
add
and
add
pop
test
lock
add
adc
in
aad
hlt
add
mov
int3
mov
mov
call
add
mov
ljmp
lock
add
sub
push
xor
cmp
mul
in
pop
push
test
pop
pop
imul
mov
jne
jle
push
add
add
daa
sbb
idivl
in
cltd
filds
test
lret
push
in
sbb
fwait
mov
jbe
add
mov
inc
pop
fs
cmpl
shll
add
mov
mov
sub
jg
nop
add
xchg
jmp
xchg
mov
sub
cwtl
enter
invd
mov
mov
jae
sahf
ret
jne
mov
mov
add
jbe
mov
xorl
stos
mov
mull
data16
add
pop
xor
mov
test
lahf
adc
mov
jb
mov
faddp
inc
add
stos
push
nop
add
ficoms
dec
and
inc
cmp
mov
jo
mov
pusha
add
mov
scas
push
aam
add
or
daa
or
ret
sub
inc
cmp
push
and
aas
sub
add
jne
jne
xor
mov
mov
add
or
dec
ret
testl
cltd
movsb
repz
ret
sub
add
cld
cmc
mov
fsubl
mov
add
cmovbe
in
div
add
pop
add
mov
jno
add
xor
mov
stos
pop
gs
out
test
popa
rolb
pop
ret
out
in
ljmp
xor
mov
add
add
cs
jge
add
std
add
sub
adc
add
mov
mov
jmp
add
inc
xor
icebp
lods
and
testb
inc
add
add
xor
add
xchg
jb
mov
xlat
xor
minps
add
inc
inc
clc
push
frstor
add
xchg
add
mov
add
mov
cmpsb
pop
into
in
ret
jg
mov
push
mov
rolb
mov
sbb
push
mov
pop
addb
and
scas
xor
testb
mov
mov
inc
test
mov
mov
inc
add
mov
add
adc
pop
add
outsl
mov
lods
fstpl
sbb
repnz
mov
data16
nop
add
pusha
add
jb
mov
sub
jmp
insb
lea
rolb
mov
leave
mov
adc
jns
mov
xor
scas
loope
mov
add
lds
test
mov
cmp
or
add
mov
in
scas
enter
cmp
adc
mov
mov
cwtl
add
mov
rolb
mov
adc
mov
cltd
js
aam
add
aam
test
jl
xchg
je
lret
xchg
scas
test
push
in
outsb
gs
bound
mov
xor
test
adc
mov
pushf
loope
lea
add
cld
popa
add
jno
inc
rolb
mov
mov
fsts
add
fidivl
mov
add
mov
fwait
mov
fistps
cli
xchg
sub
dec
adc
add
pop
add
mov
stc
xchg
mov
pop
mov
add
lret
imul
sbb
push
xlat
es
mov
loop
mov
mov
cld
addr16
mov
test
push
jb
mov
add
or
add
aad
pop
or
pusha
add
add
add
fs
adc
mov
pop
outsl
fidivrs
push
add
jge
jno
in
cmpsl
stos
add
testb
jbe
add
mov
imul
cmp
sub
jge
leave
xor
add
xchg
ret
cld
call
leave
mov
add
cmp
inc
out
bound
mov
movsl
dec
xorl
movb
push
add
stc
xchg
out
sub
mov
push
jo
mov
add
mov
cld
mov
add
repz
and
rolb
mov
dec
aas
jno
jecxz
ljmp
mov
or
mov
movsb
pop
xor
add
add
stos
fcoml
mov
mov
rolb
mov
mov
mov
xor
shll
sbb
mov
mov
mov
mov
call
mov
add
xor
mov
add
dec
or
cmp
inc
cmp
clc
fldl
mov
inc
ret
fstpt
mov
and
sub
add
add
aad
lock
push
dec
les
adc
scas
push
mov
jl
rolb
add
arpl
add
cmpsb
lahf
lods
jnp
sbb
inc
add
sub
sahf
adc
outsl
mov
mov
mov
sbb
add
adc
aaa
mov
mov
add
pop
sti
push
add
lret
js
adc
push
push
fldt
les
sbb
mov
sub
mov
js
loop
mov
rolb
int
jp
xlat
xor
rolb
mov
add
cmp
das
mov
add
mov
jl
xor
jno
inc
add
das
adc
add
mov
push
sub
xchg
sbb
mov
inc
add
les
or
addb
add
xchg
or
add
push
stos
xchg
xchg
loope
enter
fisttpll
lds
add
mov
pop
xor
data16
add
inc
add
movsl
dec
addb
enter
dec
inc
inc
daa
add
fwait
dec
lret
add
sbbl
cmp
ljmp
push
jb
mov
inc
mov
xchg
cld
cmp
xchg
push
add
mov
mov
call
sar
sub
cmp
sub
cmp
repz
add
cs
or
add
xlat
aas
pop
mov
pushf
push
jae
cmp
mov
stos
push
adc
mov
mov
test
xor
add
jns
cs
int
dec
mov
test
and
cltd
dec
push
push
or
mov
add
aas
xchg
jle
push
xor
jo
mov
pop
add
cmp
cmp
sahf
add
test
loope
lea
ret
xchg
or
test
push
pushf
faddl
add
mov
xchg
rolb
mov
cwtl
and
lods
xor
insl
xor
pop
arpl
mov
xchg
xor
add
les
xorl
add
lcall
inc
cmc
idivb
dec
lock
jmp
add
add
loop
mov
movl
das
out
sbb
xchg
in
imul
add
mov
add
and
add
inc
in
and
call
add
imul
dec
push
jl
add
mov
jo
mov
sbb
and
mov
adc
in
inc
adc
add
neg
jmp
lcall
add
stos
add
mov
das
xorl
sbb
les
mov
jmp
add
das
lds
inc
and
mov
mov
or
pop
outsl
jo
mov
into
or
cmp
xchg
adc
pop
sbb
addb
xor
popf
or
xor
fucomi
xlat
lahf
xlat
xor
mov
fs
dec
sbb
orl
pusha
add
daa
aas
mov
dec
add
leave
sti
push
xor
fwait
mov
sbb
add
repz
call
add
mov
out
inc
loopne
mov
insl
in
pop
inc
mov
and
popf
add
test
add
jnp
rcll
mov
mov
mov
dec
mov
xor
mov
jno
fildll
pop
test
xchg
loop
mov
mov
sbb
add
fists
add
mov
mov
repz
adc
mov
adc
mov
loopne
mov
adc
stos
int
adc
lods
push
add
outsb
iret
mov
test
dec
sub
add
mov
pop
movsl
jae
add
add
icebp
loopne
mov
mov
add
data16
mov
adc
sub
and
xor
mov
add
pop
xor
mov
mov
leave
dec
es
nop
add
test
out
xchg
add
xlat
xchg
fistpl
add
xchg
mov
cltd
out
nop
add
adc
mov
add
adc
mov
mov
add
cmpsl
sti
xchg
lret
cmp
js
mov
add
jl
data16
mov
mov
add
inc
lahf
int3
out
add
je
inc
cmp
test
fidivl
mov
mov
add
inc
cmc
adc
mov
adc
mov
push
mov
data16
mov
add
mov
fnstsw
sbb
repnz
mov
inc
add
jo
mov
jecxz
sbb
add
mov
mov
jge
jecxz
pcmpgtb
add
mov
jne
add
jg
jecxz
mov
add
add
adc
inc
or
lock
insl
out
add
or
das
mov
or
push
sub
fcoml
xchg
inc
sbb
inc
cmc
jae
addb
out
loopne
mov
sub
sub
jo
mov
data16
inc
popf
and
mov
xchg
pop
arpl
movntps
add
aam
dec
jmp
in
add
mov
mov
add
cmpsl
pop
in
imul
rolb
add
mov
add
or
xchg
push
fildll
dec
mov
push
push
jno
cmc
or
fisttpll
pop
mov
or
xlat
cmc
cmp
mov
add
dec
and
cs
in
repz
cs
add
mov
sbb
xchg
xchg
repnz
pop
pop
xchg
negb
loop
mov
aas
inc
add
mov
mov
repz
mov
addb
jp
sub
add
add
mov
dec
pop
xchg
cmp
inc
hlt
dec
and
jae
out
adc
mov
pop
add
rcrl
sbb
add
pop
fistpll
xor
sub
scas
mov
mov
pop
popl
mov
jbe
jae
pushf
xchg
std
ret
xchg
xchg
fidivs
mov
mov
and
mov
xor
add
mov
add
loop
mov
add
push
rol
add
mov
movups
mov
popa
fisttpl
imul
mov
daa
sti
mov
mov
jnp
cmp
and
leave
sbb
inc
scas
ljmp
into
cmp
call
mov
imul
add
dec
sbb
push
jnp
int
imul
add
jecxz
mov
fisubl
add
mov
sub
aad
mov
and
mov
fcom
inc
add
mov
add
mov
mov
test
sarl
push
clc
imul
mov
stc
neg
xchg
mov
push
push
loopne
mov
fcoml
ljmp
xchg
push
arpl
xchg
jb
mov
inc
mov
mov
inc
lcall
and
mov
test
add
popa
mov
sub
pushf
ret
pop
stos
xchg
dec
jg
insb
cltd
loop
mov
je
ljmp
shrl
enter
add
es
add
mov
mov
gs
mov
and
movsl
mov
mov
push
repz
dec
push
dec
leave
aad
lcall
add
insb
repz
addb
out
add
jno
mov
mov
lock
pop
jno
cld
xchg
loope
das
test
call
mov
lods
test
hlt
loope
lods
inc
mov
and
hlt
push
add
fsts
mov
mov
xchg
and
sbb
add
add
sbb
test
mov
add
std
or
ret
xchg
add
nop
add
sub
push
jo
mov
mov
jo
mov
outsb
sbb
add
lret
mov
adc
mov
sbb
adc
subl
inc
xchg
add
es
add
push
enter
test
cmp
pop
adc
xor
xchg
add
cli
and
mov
int3
in
mov
pushf
movsl
sub
test
dec
dec
push
arpl
add
add
mov
lods
ja
push
jl
leave
rolb
pop
mov
push
pushl
mov
rolb
mov
rorl
xor
rcll
add
mov
jae
xchg
lods
pop
enter
add
fnsave
xchg
sub
test
movsb
data16
jecxz
pop
test
cld
sbb
pop
sbb
xor
aas
aas
sub
negb
pop
sub
sub
mov
mov
add
out
push
inc
mov
or
es
cmp
or
fyl2x
loop
mov
cmp
mov
loopne
mov
in
jmp
aas
repnz
in
cmp
xor
push
fcoml
sub
add
add
xchg
add
push
add
add
mov
xchg
sub
adc
and
push
xchg
adc
cmp
les
add
add
add
mov
pop
insl
out
jmp
add
daa
in
das
cld
cmpsl
incl
rolb
mov
add
add
cmpl
addb
cld
cld
inc
rolb
mov
leave
adc
rolb
mov
ret
popf
push
add
out
test
rorl
add
pop
xchg
mov
cmp
add
lds
mov
mov
lret
add
mov
add
mov
pop
xor
mov
sbbl
and
stos
leave
aas
add
js
filds
jno
out
loope
push
mov
lock
sbb
add
mov
add
add
sahf
addb
imul
movsb
jb
mov
es
inc
cmc
mov
sbb
addb
cwtl
call
rolb
mov
jle
lea
and
jmp
clc
call
cs
mov
sbb
add
mov
mov
add
add
movsb
cmc
rorl
push
les
or
and
aam
add
jnp
xor
mov
jp
fmuls
or
roll
loope
add
bound
mov
insl
jge
push
cmp
shll
or
xor
adc
or
gs
and
dec
pop
jp
pop
push
sbb
inc
add
sbb
add
mov
faddl
adc
add
ret
mov
ret
mov
pop
aam
and
cmp
mov
dec
clc
addb
lods
mov
roll
add
es
ss
mov
mov
cmpsl
inc
add
mov
dec
cld
push
jne
mov
cmp
push
add
mov
