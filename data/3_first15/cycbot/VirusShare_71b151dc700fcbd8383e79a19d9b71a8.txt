outsb
fucomi
dec
push
out
xorl
incl
sub
dec
mov
mov
xchg
div
int3
jecxz
jnp
add
add
divb
lret
sbb
pusha
add
movsb
push
call
mov
add
cmp
push
mov
add
mov
lcall
add
mov
les
add
xchg
add
inc
mov
or
lret
xchg
out
dec
pop
xor
jl
sbb
mov
add
mov
scas
sti
and
sub
and
mov
mov
adc
mov
fsubs
push
dec
mov
add
popa
icebp
push
mov
mov
in
fwait
rolb
mov
cltd
nop
add
cmc
mov
jbe
ficomps
push
test
sbb
call
push
cli
add
mov
inc
add
aas
stos
cli
adc
das
out
in
push
add
stc
les
xchg
sbb
and
cmp
addl
add
out
es
push
push
mov
mov
cwtl
sub
call
lahf
aas
loopne
mov
add
addb
cwtl
ljmp
and
mov
jecxz
cmc
and
mov
scas
and
ret
xor
cmc
mov
sbb
push
cmc
or
add
add
or
lahf
imul
fsubrl
push
add
adc
mov
lcall
repnz
rolb
mov
fwait
js
or
out
in
icebp
push
add
sbb
and
xchg
lds
sbb
movzbl
mov
cmp
add
xchg
mov
not
lret
pop
mov
and
fs
call
mov
mov
in
add
and
gs
or
or
dec
sbb
jne
add
jb
mov
cmp
jl
add
aaa
add
push
mov
sbb
mov
inc
add
add
fs
je
cli
jno
dec
fstl
mov
add
in
pop
sbb
cs
add
pop
loop
mov
add
lods
movsb
mov
mov
mov
mov
xor
addr16
cmp
lahf
mov
add
test
mov
imul
rolb
add
push
add
ja
ja
inc
cmpl
add
mov
das
test
sbb
out
bound
mov
add
rep
int
das
mov
int3
sub
pop
mov
push
cmpsb
out
or
add
mov
push
add
cmpsb
push
rolb
mov
mov
pop
dec
or
aas
std
dec
in
mov
add
insl
pop
test
lds
out
push
aas
mov
xor
mov
mov
jmp
sub
adc
stos
jbe
sbb
add
add
mov
scas
lahf
cmp
pop
cmp
add
adc
mov
push
rcll
cwtl
mov
rolb
mov
aaa
cmp
mov
movsl
mov
mov
add
sub
mov
sti
add
mov
push
dec
lods
stos
xchg
lahf
add
mov
mov
addb
fldl
scas
lret
pop
and
mov
dec
adc
jae
call
fldl
add
rolb
loopne
mov
dec
pop
ret
and
mov
dec
sbb
adc
dec
inc
pop
xor
mov
imull
mov
jmp
push
push
outsb
aaa
sbb
lret
add
addb
fiadds
mov
add
das
mov
addr16
jp
jbe
out
add
hlt
adc
imul
add
mov
add
mov
jne
mov
and
mov
mov
mov
add
push
add
mov
or
xchg
inc
add
das
push
inc
outsl
add
mov
fcomip
add
jnp
push
add
mov
jnp
lds
xchg
shrl
les
dec
or
add
leave
xor
mov
cmp
mov
add
mov
add
xor
mov
mov
lods
pop
mov
pop
push
rcr
mov
loopne
mov
cmpsl
pop
stos
fcoml
insl
rolb
push
add
or
mov
and
mov
aad
sub
add
fldl
mov
adc
mov
mov
mov
lods
pop
rolb
mov
push
xchg
lret
loope
add
xchg
in
cmp
jb
mov
mov
pop
or
add
push
pop
fs
jecxz
arpl
xchg
add
jge
jg
leave
in
sti
mov
in
jno
add
or
inc
add
adc
add
mov
cmp
mov
fldcw
xlat
mov
jl
xchg
cmp
ret
scas
cmp
push
and
mov
pop
pushf
sub
mov
add
dec
mov
sub
jp
out
ljmp
jae
xchg
add
sti
stos
mov
xlat
adc
add
rolb
nop
add
fisttps
pop
and
stc
mov
out
inc
lods
push
add
inc
dec
rolb
mov
jnp
inc
roll
add
test
push
add
lcall
negl
insl
lret
add
mov
add
push
add
ja
mov
stos
test
add
mov
dec
aad
adc
mov
jp
add
dec
push
addb
mov
fisubrs
or
xor
mov
inc
addb
inc
mov
mov
add
lods
out
cmp
and
cli
lea
call
ret
xchg
pop
cmpsl
rcll
in
neg
dec
loop
mov
add
sub
sbb
or
mov
mov
mov
push
add
mov
ljmp
fists
adc
mov
ret
cli
testb
add
dec
daa
sub
je
jge
mov
mov
add
xor
adc
mov
push
add
dec
add
cli
inc
xchg
add
inc
lods
mov
jmp
sti
mov
jle
jl
pop
mov
int3
out
add
add
add
mov
mov
adc
mov
push
mov
mov
jne
imul
dec
cmp
lds
push
mov
xchg
inc
jecxz
cmp
adc
xchg
fsubrs
cmpsb
scas
jo
mov
repnz
ljmp
lahf
cltd
push
imull
add
lahf
pop
or
push
adc
mov
adc
mov
test
add
pop
movsl
sbb
in
or
fsubr
nop
add
and
jmp
lret
xlat
dec
xchg
gs
in
inc
adc
mov
leave
mov
push
mov
fcompl
add
xchg
lods
xchg
adc
mov
mov
cmp
xchg
xor
scas
inc
add
inc
add
add
jecxz
cmp
mov
add
clc
movsb
sbb
cmpsl
cmp
add
dec
test
in
or
pop
fld
add
dec
dec
lea
pop
daa
sub
int
jg
add
mov
add
and
pop
add
mov
add
add
add
imul
mov
pmaddwd
dec
push
add
mov
cmc
rolb
xlat
incl
mov
sbb
out
lock
roll
jnp
pop
rolb
mov
jle
sub
pop
sbbl
icebp
jb
mov
inc
adc
mov
inc
decb
jno
add
xlat
inc
es
sbb
leave
mov
iret
pop
dec
cmc
mulb
pushf
inc
pop
cmpsb
mov
sbb
xchg
roll
add
in
fidivrs
mov
mov
jne
rolb
mov
add
sub
leavew
push
int3
mov
adc
loopne
mov
xchg
lods
je
and
int3
cwtl
or
add
pop
jb
mov
add
mov
add
and
mov
in
fcoml
lock
and
cwtl
loope
xchg
mov
xchg
roll
test
cmp
aad
fs
in
jmp
lods
mov
push
mov
dec
imul
imul
mov
add
xchg
fmulp
jle
out
sub
xor
mov
inc
push
add
stos
in
pushf
hlt
xor
loop
mov
mov
pop
idivw
sbb
mov
mov
and
mov
filds
mov
mov
add
xchg
repz
inc
dec
xor
add
add
lret
mov
add
add
shrl
adc
mov
popa
imul
and
xor
cmp
add
jmp
push
push
ljmp
jge
add
mov
lods
call
dec
movsb
pop
sahf
lods
sbb
add
aad
xchg
cmpsb
add
mov
mov
jle
repnz
ret
addb
addb
je
add
dec
pop
enter
inc
ficoms
adc
cmc
movsb
bound
mov
notb
push
add
in
loopne
mov
rolb
mov
std
stos
adc
add
mov
rcrl
cmc
lods
push
in
fwait
cmpsl
daa
int
cmpsl
aad
dec
dec
sbb
loope
push
adc
push
test
add
mov
adcl
add
mov
jnp
cmp
mov
jg
data16
bound
mov
mov
js
mov
inc
stos
xor
mov
add
mov
sar
mov
mov
mov
inc
sub
dec
out
add
add
mov
jle
mov
cmpsb
rolb
cmp
push
repnz
popf
push
sbb
mov
movsl
fnstenv
add
pop
jne
jg
add
loope
or
mov
add
mov
add
out
mov
pop
sbb
mov
xchg
rolb
lcall
mov
lret
mov
push
xor
mov
jge
and
sub
les
mov
add
nop
add
sbb
add
mov
sub
add
je
fisttpll
push
fld
add
jno
cmp
mov
out
jmp
loope
dec
mov
add
push
add
add
cwtl
ljmp
or
mov
outsb
cvtpi2ps
xchg
pop
mov
insl
lret
or
das
repnz
or
sub
cmp
push
mov
mov
jecxz
jmp
push
test
mov
adc
add
xor
mov
add
into
inc
fildll
mov
insl
repnz
push
add
mov
jmp
mov
xchg
leave
pushf
adc
mov
add
mov
pusha
add
outsl
adc
les
mov
push
sbb
scas
jne
loope
pop
je
push
add
mov
mov
mov
dec
pusha
add
add
in
mov
mov
les
dec
insb
adc
mov
icebp
mov
mov
daa
js
xchg
add
xchg
xchg
xchg
jl
mov
push
addb
mov
jbe
addb
in
lret
sti
inc
add
fadds
nop
add
sarl
xchg
add
pop
fists
loope
mov
jecxz
sbb
lcall
xor
es
xor
cmp
imul
push
jecxz
rolb
shr
xor
mov
je
rolb
or
sbb
insb
out
les
mov
jl
add
xor
and
scas
or
xor
jge
adc
mov
enter
dec
out
test
out
js
addb
add
adc
or
pop
flds
mov
fwait
lret
mov
xchg
negl
cli
dec
xlat
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
in
jmp
mov
inc
push
mov
adc
mov
repnz
ss
aad
push
call
popa
hlt
xor
mov
into
flds
imul
mov
fwait
sub
push
add
mov
scas
inc
scas
cmp
fistps
arpl
pushf
sbb
and
mov
add
fidivrs
and
mov
add
add
in
add
test
int
xlat
fmuls
mov
push
dec
xchg
jp
pushf
cmp
sbb
mov
adc
mov
mov
xchg
xor
mov
ljmp
sti
and
xor
mov
mov
add
cmp
cmp
xor
add
std
sub
subl
lret
mov
loope
fsts
out
dec
jmp
ret
arpl
mov
add
or
jmp
or
jle
jge
mov
mov
pop
mov
aad
pop
popf
loopne
mov
adc
popf
inc
mov
dec
cld
cli
out
mov
add
hlt
test
cmpsl
xchg
or
sub
adcl
ja
rolb
mov
rcll
mov
stos
scas
test
xor
mov
dec
mov
cmp
add
sub
ja
adc
mov
outsl
push
add
clc
outsl
jecxz
cmp
inc
add
inc
add
push
add
dec
cmp
lods
mov
fidivs
add
lock
mov
sub
mov
add
add
mov
push
lret
and
mov
adc
mov
add
rolb
mov
dec
xchg
ljmp
mov
mov
mov
add
in
es
or
mov
repnz
push
xor
mov
int3
icebp
test
jns
add
loopne
mov
push
add
mov
inc
lret
arpl
dec
push
std
out
pop
add
out
dec
mov
and
mov
push
push
daa
mov
jb
mov
fdivl
bound
mov
mov
mov
add
xorl
mov
inc
push
sbb
xor
daa
pop
jns
js
call
mov
or
mov
add
mov
or
add
add
scas
je
push
aas
mov
pop
roll
mov
inc
sub
lds
loopne
mov
repnz
mov
add
mov
xchg
add
pop
test
cmpsl
ds
ror
cs
sub
add
mov
in
mov
and
mov
aad
scas
xchg
sub
jns
add
mov
cmp
pop
pop
lcall
pop
sub
mov
repnz
mov
daa
out
rolb
mov
mov
clc
fwait
mov
aaa
push
fcoms
es
fisttps
not
mov
add
mov
adc
repz
push
jns
fdivr
or
into
icebp
mov
lahf
cwtl
cli
xor
aad
test
out
fidivrl
lret
call
dec
mov
iret
mov
add
es
pop
mull
push
cmpsb
lar
mov
inc
push
pop
mov
lods
adc
mov
dec
jle
repnz
add
mov
pop
sbb
pusha
add
xchg
jo
mov
repz
mov
cmp
add
cmpsb
testl
packssdw
mov
mov
mov
pop
pop
jae,pt
aad
mov
out
inc
add
add
rolb
sub
mov
adc
mov
mov
add
jmp
add
inc
mov
mov
add
hlt
in
dec
inc
xor
mov
int
add
loope
xor
mov
out
sub
pushf
mov
xchg
cmp
orl
mov
mov
rolb
mov
push
add
rolb
inc
push
clc
xor
loop
mov
mov
xchg
scas
test
push
mov
mov
inc
add
xchg
les
xchg
popa
dec
add
testb
xor
add
ficompl
push
inc
sub
pop
add
mov
dec
xor
mov
loop
mov
and
cmc
gs
pop
xor
ret
mov
dec
je
add
addb
add
lcall
mov
jp
rolb
mov
or
lret
sbb
aad
mov
pop
aad
nop
add
fisttps
or
mov
dec
xchg
out
fdivs
mov
daa
in
and
add
mov
jecxz
adc
loop
mov
out
rep
dec
mov
rolb
and
jno
or
pop
loope
adc
mov
jb
mov
mov
jge
add
add
adc
mov
xchg
and
adc
mov
jbe
lods
imul
lcall
in
in
cld
out
mov
xchg
xor
mov
nop
add
lahf
out
xchg
and
mov
les
add
mov
mov
lea
push
ret
js
add
inc
dec
jae
xor
add
jg
add
push
rorl
lret
cmpsl
pop
inc
ss
add
mov
push
mov
cmp
cmpsl
pop
filds
mov
mov
jne
inc
add
test
dec
mov
incl
ljmp
xchg
cmp
ficoms
xchg
push
sbb
jge
or
das
or
sub
cmc
xchg
das
enter
push
xor
mov
mov
std
es
hlt
addb
out
cltd
inc
add
imul
xchg
mov
mov
add
arpl
or
xlat
or
inc
arpl
jne
daa
sub
mov
pop
xchg
add
mov
mov
add
jge
repz
popf
add
fbld
xchg
dec
adc
mov
fwait
popa
jnp
add
mov
cmp
fcompl
imul
mov
daa
fidivl
dec
rolb
mov
negl
cmpsb
mov
mov
rolb
xchg
les
scas
arpl
jp
fmull
out
inc
xor
je
adc
mov
add
enter
lods
lret
sbb
mov
adc
xchg
add
js
push
out
sub
add
mov
sub
mov
pop
addb
mov
sub
mov
adc
aad
sbb
enter
push
iret
into
push
add
add
test
sbb
gs
in
test
push
fcomip
aam
add
jl
pop
fwait
scas
push
sub
daa
sub
adc
or
add
sti
inc
fsubs
cmp
inc
fstl
add
mov
add
push
popf
popl
add
pop
xor
mov
sbb
faddl
sti
addb
inc
loopne
mov
add
add
add
ret
ja
mov
in
pop
jno
cmpsl
lret
mov
std
stos
cld
sbb
mov
mov
int3
insl
int
inc
and
mov
xor
mov
sub
nop
add
pop
sbb
dec
sub
adc
xchg
fsubs
mov
sub
out
es
sub
mov
and
ljmp
push
jno
mov
mov
inc
inc
add
xchg
stc
sbb
dec
or
aaa
mov
test
pusha
add
cmp
mov
adc
inc
mov
add
hlt
pop
cmpsl
insb
adc
and
and
mov
out
inc
cltd
inc
mov
mov
xchg
add
mov
push
push
into
test
jne
mov
scas
mov
lea
rolb
vpunpcklbw
mov
add
add
dec
aam
aaa
pop
addb
xor
jmp
cmp
mov
fwait
mov
cmp
add
addb
fsubrs
enter
mov
xchg
pop
ret
adc
mov
or
and
push
add
jmp
push
jo
mov
lods
cmp
adc
mov
jmp
mov
add
mov
scas
xchg
fmulp
or
sbb
sub
add
add
xor
adc
mov
sub
xor
ja
add
cmpsl
and
mov
mov
das
icebp
out
cld
ja
addb
mov
mov
mov
popa
or
pop
mov
in
notb
rcll
inc
sbbl
insb
pop
jae
nop
add
clc
dec
mov
add
mov
test
add
mov
fcompl
ds
mov
pop
cmpsl
call
lock
add
inc
add
dec
insb
outsl
or
push
insb
js
bound
mov
add
mov
add
pop
sti
ret
adc
mov
jae
fidivl
pop
and
mov
and
mov
xchg
mov
mov
xchg
pop
sbb
mov
out
fsub
scas
and
negb
mov
mov
incb
mov
add
push
dec
push
cmp
add
mov
xor
mov
mov
and
mov
scas
je
mov
or
add
sbb
out
into
js
outsl
lret
mov
pop
mov
add
and
jmp
stc
mov
inc
dec
jne
stc
pop
cmp
mov
int
xlat
lods
mov
pusha
add
iret
and
mov
stos
aam
mov
fdivl
pop
xchg
inc
mov
jmp
test
shr
cmp
push
mov
and
mov
retw
or
jnp
add
mov
rolb
scas
sbb
or
add
inc
mov
add
mov
pop
and
mov
lods
jle
in
xchg
pop
or
jbe
push
cmp
add
mov
xchg
adc
fstpl
push
dec
clc
or
arpl
inc
fdivs
add
inc
mov
mov
inc
pop
loop
mov
sarl
test
in
call
pop
gs
mov
cs
addb
adc
lret
add
add
fisubrl
xchg
rep
imul
std
sti
inc
push
or
mov
int3
add
mov
dec
jmp
mov
mov
add
adc
or
add
data16
imul
push
mov
mov
sahf
inc
loopne
mov
incl
add
dec
add
cmp
call
mov
in
repnz
dec
add
mov
dec
push
sub
es
xchg
movsl
aam
mov
and
sbb
cmp
xlat
adc
test
mov
push
das
cli
cmc
xchg
add
jnp
rolb
cmp
out
sbb
sahf
mov
and
mov
fsub
test
push
add
mov
push
jecxz
fdivrs
push
clc
adc
mov
repnz
js
mov
mov
mov
xor
loopne
mov
dec
sti
xor
mov
jnp
imul
iret
stc
pop
leave
sete
add
add
mov
hlt
out
xor
ret
ret
daa
push
daa
mov
imul
inc
jp
lret
lods
xlat
mov
stc
mov
aad
add
push
ja
add
push
jbe
fiaddl
mov
outsl
jecxz
mov
lods
aam
sbb
add
in
fadds
mov
inc
mov
mov
rolb
mov
add
rolb
pop
dec
sbb
add
or
mov
and
mov
or
xchg
add
cwtl
jnp
sub
lock
bound
mov
mov
fildll
aad
pop
cmpsl
xchg
xor
mov
add
loopne
mov
sub
and
cmp
add
mov
adc
add
xchg
push
add
mov
add
mov
push
aas
imul
inc
mov
and
data16
std
sub
sti
pop
nop
add
or
jnp
adc
outsl
aas
aad
pop
mov
mov
je
xchg
daa
jge
and
and
mov
sbb
test
cmc
mov
mov
bound
mov
test
mov
push
mov
jecxz,pt
addb
lahf
inc
add
xchg
and
adc
loope
rolb
mov
add
inc
cs
or
add
push
dec
cmp
adc
mov
dec
dec
mov
cmc
mov
add
hlt
mov
or
add
nop
add
sbbl
mov
test
cmp
sub
mov
lcall
stos
nop
add
fnstsw
add
lcall
add
rolb
mov
aam
or
jnp
adc
mov
add
cmp
sub
repnz
lds
xchg
je
setae
lret
mov
jge
lods
repz
jae
jne
rcll
lret
ss
add
loop
mov
add
add
sub
addb
or
loope
insl
sub
daa
push
inc
incl
or
add
jge
xchg
jno
fdivl
cltd
jmp
sbb
push
fcmovne
fwait
jb
mov
mov
out
xchg
add
sub
js
push
push
or
fcompl
add
bound
mov
mov
das
dec
icebp
inc
bound
mov
mov
das
fistl
mov
cmp
outsb
inc
add
jg
ret
ret
push
addb
jns
inc
xchg
pop
jecxz
xchg
sub
jle
inc
sub
add
daa
gs
mov
stc
fsubrs
add
cmc
jb
mov
add
sbb
mov
push
jns
cmpsb
jmp
and
mov
and
loope
dec
pop
popf
fisttpl
adc
add
dec
pop
pushf
mov
lret
jl
out
inc
and
jmp
gs
add
notl
add
jle
add
fimuls
mov
mov
hlt
push
call
inc
jbe
mov
cmc
out
push
loopne
mov
dec
and
mov
or
std
lcall
dec
mov
add
and
ds
fcmove
addl
aaa
pushf
xchg
loopne
mov
js
cmp
jl
in
movb
mov
iret
inc
jae
push
xchg
add
cmc
mov
ss
addl
mov
inc
push
bound
mov
mov
pop
mov
add
outsl
addr16
leave
mov
fisttps
inc
cli
repnz
jge
int3
jl
xor
mov
add
inc
imul
push
leave
mov
mov
add
add
out
ja
dec
in
adc
add
push
push
jecxz
pop
test
jo
mov
or
pop
sahf
into
inc
cmp
add
or
test
xor
fs
mov
cmp
jle
cli
ds
jns
add
das
shll
pop
or
mov
and
sbb
enter
repnz
pop
push
inc
cmp
push
and
out
rolb
mov
cmp
lods
add
ret
insl
mov
mov
jne
adc
adc
sbb
or
fsave
add
add
adc
mov
cltd
adc
mov
mov
mov
mov
dec
neg
inc
pop
or
pop
les
mov
pop
jg
aaa
cmc
xor
mov
mov
mov
add
and
mov
mov
fldcw
sub
iret
push
scas
pop
lcall
sub
sbb
sub
push
adc
add
inc
add
add
add
mov
inc
cmp
xchg
filds
fstps
rcr
add
mov
push
mov
mov
lret
nop
add
add
mov
mov
mov
add
add
add
xor
sub
add
mov
sbb
add
jle
hlt
pop
mov
sub
add
jl
cmp
add
test
fnstenv
sahf
and
sbb
add
or
mov
or
jne
pop
dec
icebp
pop
sub
cltd
ret
ja
jge
xchg
or
or
scas
dec
imul
add
mov
mov
sbb
aam
add
or
mov
or
mov
sbb
out
mov
test
jns
aaa
cmp
mov
test
add
or
add
add
es
add
mov
pop
cmp
cltd
mov
cmp
jmp
cmc
mov
xchg
repz
add
inc
cmpsl
jl
rolb
mov
mov
cli
movsb
cltd
ret
add
imul
mov
test
addb
dec
xlat
jb
mov
mov
add
pop
lea
add
loop
mov
loope
jno
faddl
pop
cmp
arpl
dec
stos
mov
pop
mov
add
mov
cld
or
mov
or
sbb
fwait
xchg
and
add
push
mov
mov
mov
sahf
push
dec
imul
add
inc
add
xchg
cmc
bound
mov
std
and
sbb
sbb
clc
inc
cmp
fnstenv
lret
ds
or
push
out
sbb
mov
push
decl
fidivrs
or
sbb
stc
fucomp
xlat
dec
leave
les
ret
repz
mov
add
add
cmp
add
mov
shrl
jg
int
test
xchg
add
xor
rolb
iret
test
add
repnz
add
cmpsb
into
leave
iret
jb
mov
js
add
in
in
sbb
sbb
add
call
add
fs
scas
mov
fwait
andl
inc
cmp
jge
dec
lods
sub
loopne
mov
test
xchg
add
or
arpl
add
scas
mov
mov
pop
add
mov
jecxz
adc
add
int3
inc
loop
mov
call
imul
xor
cmp
add
mov
pop
push
cmp
pop
add
negl
cmp
ret
stos
js
or
dec
mov
enter
loopne
mov
push
dec
popa
cltd
cwtl
rorl
arpl
add
add
pop
adc
imul
aam
add
xlat
lret
and
add
pop
xchg
in
sub
bound
mov
and
mov
les
pop
pusha
add
mov
dec
movsl
xor
mov
insl
cmp
pop
ret
pusha
add
enter
mov
nop
add
or
mov
add
mov
jp
jnp
shll
jnp
add
add
mov
pop
lea
sti
jmp
inc
adc
add
mov
lods
mov
cli
in
add
mov
cmpsl
adc
mov
mov
or
add
addb
add
lahf
push
add
mov
add
cmpsb
xchg
xchg
add
inc
add
stos
cli
fdivrp
adc
mov
mov
out
jb
mov
daa
rolb
loop
mov
add
loop
mov
notb
pop
xchg
add
ljmp
sti
jg
fdivr
sbb
pop
mov
mov
inc
lret
jne
cmc
mov
dec
in
add
mov
popa
add
push
mov
mov
jle
pusha
add
mov
mov
repnz
push
add
std
push
call
adc
fwait
add
mov
or
lock
call
add
xchg
add
jae
or
add
add
cmpsl
add
jmp
mov
fistl
add
mov
push
jmp
add
mov
push
mov
or
mov
adc
and
push
rcll
add
data16
mov
insl
cmp
or
cmp
mov
mov
dec
sbb
iret
sub
xchg
xorl
out
dec
push
stos
aaa
jl
inc
dec
push
inc
add
dec
cmp
add
ja
loope
jge
mov
add
push
call
xchg
lods
pop
test
mov
out
mov
jle
xchg
pop
scas
mov
mov
adc
pop
es
pop
outsb
hlt
add
pop
add
test
xchg
clc
adc
test
push
pop
fucomp
popa
cmp
xor
mov
mov
mov
aad
pop
pop
mov
negb
fadds
xchg
xchg
jge
lcall
lcall
push
adc
mov
add
push
jb
mov
out
and
mov
add
dec
sub
outsb
push
sub
gs
mov
add
jl
in
push
add
mov
jae
call
mov
or
cmc
pop
sub
mov
push
das
inc
lea
xor
mov
pop
and
mov
scas
fucomp
pop
cmp
pop
out
fs
data16
jl
add
mov
add
mov
data16
sbb
in
sbb
popl
add
mov
addr16
jle
or
mov
mov
mov
and
inc
push
add
dec
addb
dec
ljmp
add
dec
les
dec
or
push
mov
sbb
pop
cli
psrlw
stos
addr16
push
add
outsl
add
out
add
mov
add
cld
cltd
mov
add
add
dec
ret
shl
adc
mov
jp
push
addb
rolb
mov
add
icebp
sbb
insl
sbb
pop
pop
mov
loope
add
pop
fsubl
mov
xchg
add
push
or
loopne
mov
jp
xchg
outsb
mov
add
pop
lret
imul
mov
add
mov
sarl
scas
mov
mov
mov
mov
add
pusha
add
mov
xor
mov
insl
jl
mov
cmc
xor
mov
mov
mov
mov
add
pop
and
mov
dec
fstpl
adc
pop
lock
repnz
and
jp
or
out
push
lds
add
and
or
cld
pop
push
pop
push
add
add
and
xlat
repnz
xor
xchg
cmc
aas
fldcw
cli
je
push
inc
loope
pop
sti
nop
add
add
adc
gs
add
dec
in
cmp
mov
push
mov
jbe
add
dec
sub
cmpsl
dec
mov
mov
jae
ss
sbb
add
sub
mov
addb
pop
jbe
xorl
inc
push
sahf
and
mov
ret
sub
mov
insb
sbb
xor
mov
fidivl
dec
cmpsb
cwtl
rorl
jbe
les
add
mov
das
jmp
mov
test
push
std
xlat
mov
mov
outsb
mov
add
cmp
in
sub
add
add
inc
jmp
pop
rolb
mov
mov
pushf
xor
bound
mov
pop
cmp
sbb
bound
mov
nop
add
popf
repnz
sub
add
xchg
int3
bswap
sub
sbb
in
rolb
mov
mov
or
test
hlt
sub
fidivrs
rcrl
add
mov
in
jg
xor
mov
aas
inc
mov
mov
dec
mov
mov
add
cmp
lret
in
imul
decb
mov
les
insl
shrl
pusha
add
pop
scas
adc
add
mov
mov
add
arpl
ret
sti
dec
loope
sbbl
xchg
test
lds
das
std
jno
test
adc
mov
cld
fisttpl
cmpsb
pop
mov
or
sarl
scas
sub
add
add
outsb
fildl
inc
cmp
mov
cli
push
scas
and
rolb
loop
mov
ss
js
rolb
mov
xchg
add
add
jge
adc
mov
add
add
fldcw
lds
mov
pusha
add
xchg
ret
xchg
aam
shll
lret
fldt
mov
repnz
push
es
and
pushl
mov
das
inc
iret
hlt
mov
test
movsb
jbe
cmp
je
mov
das
jne
add
enter
addb
mov
es
lods
cmp
cmpsb
orl
hlt
mov
mov
in
or
mov
in
pop
mov
add
xchg
lret
test
mov
int
and
mov
mov
mov
cmp
cmp
mov
idiv
insb
ss
mov
cmp
testb
addb
jmp
jnp
ss
push
pusha
add
dec
mov
addb
push
mov
mov
mov
add
mov
mov
addb
push
add
add
std
pop
rolb
mov
pop
mov
add
das
into
push
jecxz
fcoms
add
adc
cmp
jae
add
gs
sbb
and
xchg
scas
or
add
filds
daa
push
jle
cld
cmp
add
push
insb
cli
dec
sbb
add
mov
push
inc
mov
mov
dec
mov
sbb
bound
mov
lock
imull
push
push
mov
stos
scas
cs
push
ret
and
mov
mov
aaa
xchg
scas
stc
fists
mov
mov
mov
mov
nop
add
sub
mov
pusha
add
fimuls
jecxz
adc
add
scas
int
stos
cmp
mov
add
xchg
or
add
add
es
mov
mov
cmpsb
sub
rolb
mov
hlt
mov
mov
push
add
dec
into
xor
sub
mov
lea
sub
in
cmp
xor
xlat
dec
mov
dec
inc
cmc
cld
mov
mov
pop
aad
std
mov
push
push
push
lods
dec
out
rolb
mov
dec
xor
mov
push
xor
mov
cltd
push
add
or
stos
jmp
into
movsl
jmp
popf
out
mov
and
mov
mov
add
jp
testb
jns
cltd
lods
cmpsl
ret
pop
rolb
mov
fwait
mov
mov
mov
add
xor
mov
fisubs
cmpsb
jg
addb
jne
jecxz
cmpl
lods
ss
push
mov
inc
xchg
jmp
add
cltd
dec
mov
inc
std
out
push
jno
enter
aaa
loopne
mov
addb
loopne
mov
mov
jno
repnz
sub
mov
repnz
mov
addr16
sbbl
jg
add
or
dec
das
popf
jae
add
je
add
dec
dec
mov
outsl
pop
add
subl
adc
dec
xlat
inc
add
mov
fwait
mov
mov
leave
dec
ret
inc
add
imul
lret
and
mov
xor
ds
sar
mov
adc
adc
cmpsb
xchg
jo
mov
insl
mov
imul
add
in
inc
pop
pop
in
add
push
shl
add
add
push
outsl
das
dec
lea
add
aas
xchg
cmp
mov
lods
xor
add
sub
push
cmp
mov
fs
fnsave
mov
mov
ljmp
mov
mov
popf
je
dec
jae
arpl
sarl
xchg
mov
mov
mov
add
clc
jne
xor
and
add
adc
mov
stc
pushf
jecxz
lret
xor
add
mov
cmc
mov
push
or
fstl
add
lret
fistps
ds
rolb
mov
jno
xchg
outsl
cmpsb
pop
xchg
sub
pop
pop
sti
jl
pop
addb
orl
add
jbe
and
mov
cltd
mov
xorl
mov
int3
pop
dec
gs
ja
push
and
stos
scas
and
mov
cmpsb
or
xor
mov
push
sahf
test
scas
movsb
jp
punpckhdq
mov
in
xor
add
add
jo
mov
push
lods
adc
push
xor
mov
sub
lcall
dec
ljmp
push
or
add
mov
push
ret
jno
outsb
lds
mov
mov
add
push
sahf
pop
ss
aad
add
push
ret
push
repnz
sbb
add
jmp
mov
dec
dec
aam
stos
jmp
push
push
test
xor
cs
mov
push
pop
mov
loopne
mov
out
fisubrs
mov
jns
shll
add
adc
mov
jbe
mov
paddq
in
dec
bound
mov
repnz
add
mov
cmp
mov
mov
ljmp
add
out
mov
mov
mov
mov
adc
or
cwtl
addr16
add
es
out
jmp
or
cmp
das
or
lcall
push
sbb
or
lret
dec
push
xchg
add
inc
mov
sbb
aam
cmp
cmp
fs
and
xchg
test
mov
rep
mov
sub
iret
pavgb
mov
jg
jns
testl
nop
add
add
mov
rolb
mov
xchg
pop
adc
pop
cmc
test
pop
mov
add
mov
or
movsb
xchg
je
xchg
xchg
addl
mov
test
mov
mov
pop
pop
cmpsb
test
add
mov
add
mov
enter
mov
mov
xor
mov
lods
jle
add
dec
sub
cmp
pop
pop
lret
dec
cmp
inc
mov
test
add
out
push
push
in
ja
adc
mov
lds
push
inc
add
mov
gs
aad
aaa
bound
mov
xor
sbb
xor
addr16
js
sub
dec
sbb
out
add
leave
xchg
int3
fdivp
aad
pop
push
xor
mov
pusha
add
add
mov
mov
inc
add
addb
or
add
mov
push
sbb
cli
xchg
inc
add
movsb
ret
insl
push
xchg
loope
data16
clc
mov
inc
out
in
push
je
je
or
ret
adc
mov
mov
stos
jl
pop
test
mov
add
test
add
push
add
pop
and
mov
rcrl
adc
add
rolb
mov
inc
rolb
mov
inc
in
idivl
adc
mov
cli
push
xchg
jno
inc
add
repnz
mov
test
mov
add
and
mov
mov
dec
pop
mov
mov
cli
xor
mov
push
lahf
imul
add
out
outsb
add
mov
test
test
gs
repnz
inc
imul
shll
insl
jne
jl
fistpll
jns
loope
add
add
mov
insb
jmp
add
aaa
jmp
sbb
sub
push
subl
push
add
loop
mov
outsb
push
cmp
nop
add
out
or
test
add
cmp
adc
addl
mov
jo
mov
mov
push
dec
or
scas
and
jae
pop
push
lcall
call
push
mov
insb
inc
add
and
mov
mov
sbb
orl
add
xor
mov
mov
xor
add
mov
xchg
and
mov
scas
inc
mov
mov
add
add
imul
mov
insb
mov
loop
mov
jns
mov
jecxz
test
mov
icebp
cld
fdivs
mov
and
mov
add
popf
stos
in
add
movsl
unpckhps
or
mov
mov
aas
ljmp
dec
out
loope
and
mov
loope
out
and
mov
add
xor
mov
call
add
mov
cmp
insb
out
mov
mov
out
xchg
leave
ret
jg
in
mov
push
movsl
stos
push
test
xorl
add
sub
fstps
add
dec
sbb
lea
mov
rcr
and
fimull
or
fabs
push
add
or
xchg
ss
sub
add
jns
add
inc
cs
add
add
in
daa
pop
adc
js
pushf
lods
into
out
xor
xlat
dec
jp
aam
adc
mov
inc
add
ds
inc
adc
sti
adc
mov
cmp
xor
mov
and
negb
sub
pop
or
punpcklwd
inc
add
jns
mov
add
addr16
xor
sahf
mov
je
sub
daa
les
xor
cmp
or
adc
xlat
mov
add
mov
xchg
sub
mov
mov
pushf
leave
dec
cmp
repz
mov
add
add
mov
add
ret
arpl
add
add
mov
push
sahf
fdivl
jp
ljmp
mov
or
cld
xor
mov
ja
fsubr
fldenv
imul
mov
jmp
insl
pop
pop
loope
push
inc
bound
mov
outsl
or
sub
js
cmp
mov
ja
xchg
stos
mov
addb
cwtl
cltd
push
push
sbb
add
fstl
insl
insb
dec
xchg
lds
mov
sub
jnp
add
mov
cmpsb
movsb
mov
push
pop
ret
and
adc
lahf
test
cs
lahf
mov
xor
pop
jb
mov
es
je
mov
push
mov
mov
out
inc
add
add
add
idivb
or
xchg
push
jmp
stc
add
test
mov
mov
enter
push
add
sbb
jnp
add
jecxz
popf
jae
es
mov
mov
mov
std
xchg
jnp
add
setle
idivb
das
cmp
addb
ficoms
pop
push
add
in
jno
imul
icebp
mov
mov
mov
push
cmp
sub
xchg
xchg
gs
add
outsl
int3
es
xchg
dec
mov
punpcklwd
cmp
add
add
adc
mov
roll
mov
insl
imul
adc
pop
bound
mov
cmp
dec
lock
ret
scas
mov
cld
push
fiaddl
mov
xchg
mov
or
stos
cmp
outsb
add
mov
dec
je
mov
int3
fisubrl
int
sub
inc
add
jmp
add
and
mov
lods
icebp
cmp
jl
add
cmp
mov
xlat
mov
imul
ds
add
add
cmpsl
jge
rolb
mov
fistl
cmp
outsb
out
nop
add
sbb
cld
and
mov
arpl
cmc
pop
repnz
sahf
ja
add
aas
push
filds
lret
imul
fcompl
loopne
mov
add
add
mov
lret
hlt
mov
add
outsl
xchg
xor
scas
and
lds
add
add
in
pop
dec
lods
xor
mov
repnz
mov
mov
mov
movsb
aam
add
or
cmpsb
jbe
sbb
add
add
inc
push
cmp
sub
add
rolb
cmc
jecxz
pusha
add
add
mov
mov
ss
aaa
lock
add
in
cmpsb
out
sub
mov
pop
push
add
add
out
mov
fwait
mov
in
ljmp
add
add
mov
pop
cli
divb
mov
loope
rcrl
movsb
mov
add
mull
dec
sub
add
and
pop
pop
adc
inc
inc
add
mov
nop
add
gs
out
inc
add
mov
ljmp
fcmovnu
jbe
sbb
dec
pop
jmp
inc
push
sbb
or
addb
loopne
mov
adc
ds
cmp
inc
dec
add
testl
mov
add
cmp
jne
xlat
pop
mov
cmpsb
int3
xor
push
add
scas
xor
out
pusha
add
mov
test
sbb
push
pop
cmp
sbb
fldl
jecxz
and
xorw
mov
sub
mov
mov
daa
xlat
jmp
arpl
lcall
add
mov
adc
mov
std
adc
xlat
pop
stc
lock
icebp
pusha
add
and
sbb
xor
mov
dec
ljmp
out
movsl
lock
sub
add
mov
dec
subl
stc
enter
mov
add
iret
xor
jmp
es
adc
mov
mov
xchg
mov
xchg
jp
lds
int3
push
addb
xor
mov
mov
mov
out
push
pop
mov
and
mov
mov
sbb
add
shll
add
push
xchg
xchg
hlt
imull
add
jns
fxch
fiadds
in
or
adc
add
gs
add
pop
fldl
add
and
mov
clc
add
mov
std
lds
xchg
sbb
push
add
ret
add
push
dec
inc
cmp
hlt
data16
out
add
fbstp
add
mov
cmp
add
add
jae
add
out
lcall
dec
push
add
addr16
add
and
mov
add
imul
add
add
popf
rolb
mov
fxch
lods
dec
test
in
dec
jge
jne
cmp
cmp
xchg
add
jbe
add
stos
mov
sbb
xchg
mov
lret
mov
mov
xor
dec
pop
or
add
scas
cwtl
sbb
lahf
dec
pop
insl
int3
in
cli
inc
mov
xchg
mov
mov
xchg
into
mov
mov
mov
dec
jnp
mov
lret
jp
insl
pop
icebp
jae
into
fildll
psubusw
xchg
pop
push
inc
loopne
mov
fldenv
mov
xchg
rolb
mov
push
mov
sub
fcomps
cmp
mov
mov
fstps
test
and
mov
inc
lcall
sbb
call
mov
xchg
jbe
push
cltd
out
mov
sbb
imul
call
add
xlat
dec
jg
add
add
or
inc
xchg
add
add
das
and
mov
lock
insb
add
stos
mov
addr16
pop
push
imul
add
stos
enter
mov
ds
outsl
nop
add
push
jmp
cmc
fdivrl
and
mov
xchg
repz
or
xor
mov
std
mov
dec
ss
icebp
filds
lods
pop
repz
push
sarl
add
mov
sbb
lret
cmpsb
mul
cmp
push
add
std
mov
mov
aaa
cmp
dec
inc
in
movl
adc
aaa
add
mov
decl
add
aam
movsl
cmpsl
jne
testb
je
test
shll
test
and
mov
xchg
mov
movsb
mov
je
andl
jg
int
movsl
mov
pop
stc
xor
mov
cmp
jg
addr16
out
lahf
movb
loop
mov
sbb
cmp
pushf
xor
add
scas
stc
sub
dec
cmp
sub
fsubrl
sub
roll
push
shll
mov
push
add
xor
repnz
xchg
cmpsl
rcr
das
fcoml
leave
inc
enter
add
mov
xchg
lock
jmp
add
push
rolb
mov
lret
pop
out
sbb
or
pop
sub
add
nop
add
jae
fsubr
inc
int
mov
cmp
cmpsl
mov
cmp
shll
aaa
insl
lret
pop
lea
mov
mov
pushf
push
mov
iret
rorl
jbe
mov
sbb
push
nop
add
add
add
mov
mov
add
test
lret
scas
mov
mov
divb
add
xchg
nop
add
loope
sti
mov
pop
je
sti
jg
pop
out
mov
jle
and
add
mov
int3
fiadds
add
pop
pop
repnz
movsl
les
xchg
repnz
cmovne
push
xchg
sbb
add
lahf
movsl
and
insl
adc
fwait
cmpsl
outsl
sub
icebp
inc
add
js
add
xor
mov
adc
mov
add
add
xchg
mov
and
js
add
sbb
ffree
pop
xor
arpl
lea
add
cli
sti
in
out
xor
inc
cmpsb
jae
mov
mov
inc
add
mov
sahf
and
sbb
cli
sub
sub
add
aad
lock
sub
in
jg
loop
mov
icebp
push
mov
add
pop
mov
push
mov
cmp
sbb
js
jle
sub
add
lds
add
imull
stos
enter
add
jge
inc
jmp
daa
inc
jmp
stc
jns
lcall
je
add
orl
in
scas
es
pop
ret
xor
mov
insb
or
or
sbb
and
mov
int3
mov
push
mov
ret
sub
cmp
push
add
mov
add
push
loopne
mov
adc
add
xor
popa
addr16
push
aas
addb
in
or
add
repnz
xchg
add
cs
add
sahf
test
ljmp
or
repnz
lock
test
mov
cmp
ljmp
push
imul
sbb
enter
dec
push
push
sub
add
sub
movb
xor
into
mov
sbb
lahf
pop
mov
adc
jg
imulb
decb
add
lds
js
add
scas
out
stc
or
mov
dec
repz
add
sub
fimuls
xor
mov
adc
lods
bound
mov
or
lds
mov
sbb
mov
sub
cwtl
popa
cmp
mov
es
lods
inc
add
push
pop
or
add
pop
mov
pushf
pushf
push
ret
aad
push
add
fst
sbb
in
sub
and
xchg
sahf
cmpsb
clc
adc
mov
mov
add
adc
mov
test
lods
sbbl
push
xchg
sarl
std
adc
mov
mov
jae
dec
jecxz
ret
icebp
std
sbb
inc
pop
inc
movsb
das
sbb
rolb
mov
inc
dec
std
pop
stc
lcall
fbstp
or
xchg
es
loop
mov
sbb
mov
mov
adc
cltd
lahf
enter
dec
xchg
add
mov
add
xchg
mov
add
mov
and
jecxz
fcoml
lret
mov
mov
mov
cmpsl
rorl
sbb
add
mov
addr16
pop
cmp
shll
js
pop
rolb
mov
dec
popf
xor
mov
xchg
cltd
push
lods
dec
adc
and
mov
push
mov
addb
lods
jnp
add
jecxz
fdivs
gs
xchg
movsb
dec
pop
adc
mov
add
xor
mov
ljmp
add
inc
call
addb
pop
push
add
add
xor
add
mov
jecxz
add
adc
mov
xchg
adc
fistpl
cmc
pop
loop
mov
bound
mov
lea
push
add
enter
test
fcompl
gs
sub
inc
adc
mov
add
add
jp
add
and
mov
mov
mov
leave
and
mov
pop
lock
push
stc
sti
sub
cmp
mov
inc
xlat
dec
lcall
jmp
into
lods
out
sub
lock
mov
and
sar
test
insb
jmp
cli
sub
jo
mov
mov
loopne
mov
fidivrl
sbb
mov
and
loope
add
mov
int
out
add
mov
and
repz
xchg
sbb
pop
out
mov
mov
push
or
xor
add
mov
decb
je
or
fcomps
xor
int
mov
or
cmp
pop
pop
ret
xchg
and
mov
add
mov
bound
mov
add
add
aad
fucompp
xchg
add
jb
mov
add
pop
pop
mov
std
push
add
xor
add
ja
jecxz
add
mov
mov
repnz
lcall
push
cmp
xor
mov
pop
xlat
ret
adc
sbb
mov
push
test
and
mov
and
int
sub
add
adc
mov
int3
pop
stos
pop
scas
cltd
lret
cwtl
in
lods
rolb
or
shll
mov
mov
mov
and
mov
int3
clc
fistpl
lcall
jnp
adc
add
push
add
popf
inc
jns
mov
adc
mov
pop
fsts
dec
or
nop
add
mov
into
cmp
ljmp
sti
cmp
call
dec
xchg
bound
mov
stos
std
addb
sbb
add
cli
cli
pop
adc
add
cmp
xchg
out
cli
pop
dec
add
add
mov
jge
and
call
mov
addb
fmull
das
xor
mov
xlat
jnp
add
xlat
lret
mov
inc
jnp
add
dec
sub
aad
xor
mov
or
stos
push
mov
popf
add
mov
mov
les
cmp
addb
push
pop
mov
mov
mov
add
loope
pusha
add
hlt
ret
stc
push
add
imul
mov
mov
fcmovbe
or
ljmp
add
in
push
add
out
nop
add
inc
cmovle
mov
sbb
dec
xchg
stc
movsb
addb
stos
and
mov
cmp
pop
sbb
add
jp
add
cli
into
aad
shrl
push
dec
lcall
movd
jne
inc
lret
lcall
addb
lret
std
stos
cmp
dec
mov
mov
test
lea
fs
and
sub
xor
add
test
add
mov
mov
add
insl
ficompl
xlat
test
mov
test
cmp
mov
inc
or
xor
jp
xchg
xchg
lret
popf
mov
aad
pop
imul
int3
out
mov
add
jb
mov
mov
mov
jb
mov
add
repnz
into
cli
incl
sub
jno
dec
sbb
add
push
cmp
add
adc
mov
and
pop
lock
insl
lods
les
inc
mov
scas
xchg
rolb
cli
lcall
lea
xlat
movsb
daa
mov
mov
push
mov
cs
mov
dec
push
xchg
repnz
rolb
mov
fidivl
mov
out
lds
push
stc
lods
sbb
or
and
mov
add
sbb
addb
and
mov
nop
add
dec
out
adc
mov
mov
push
add
pop
sar
mov
nop
add
xchg
outsb
popf
and
adc
aas
mov
test
stos
pop
push
subl
inc
repnz
int
stos
pop
scas
or
lret
inc
testl
inc
mov
pop
pop
inc
add
outsl
mov
lcall
add
mov
xor
mov
inc
imul
in
pop
and
adc
cli
pop
scas
sbb
add
addr16
scas
adc
mov
insb
and
mov
test
mov
jns
gs
rolb
mov
mov
add
sbb
addb
ret
data16
pop
add
mov
jno
or
and
mov
lds
push
add
add
xor
mov
jb
mov
mov
inc
loop
mov
jo
mov
push
sub
pushf
imul
sub
add
mov
outsb
lea
lods
jb
mov
das
cli
dec
clc
dec
fs
xor
mov
shll
and
mov
lea
aaa
lcall
mov
mov
lds
stos
ds
push
nop
add
jo
mov
out
enter
minps
or
out
inc
rolb
stc
loop
mov
mov
push
add
mov
mov
repnz
jno
fists
mov
xor
mov
aaa
in
mov
imul
aas
lcall
pusha
add
sub
outsb
mov
fisubrl
add
mov
mov
adc
jb
mov
add
add
outsl
pop
int
bound
mov
xor
mov
push
add
and
mov
xchg
stos
imul
and
fldl
fs
add
in
popa
jbe
add
xchg
pop
adc
pop
jp
mov
mov
adc
imul
insb
or
ret
xor
mov
add
add
add
clc
das
jecxz
mov
add
mov
sahf
scas
mov
mov
cld
jbe
cli
leave
cltd
xor
xor
mov
adc
push
push
int3
xor
sbb
add
push
add
jg
push
add
add
mov
push
pusha
add
xchg
add
mov
ret
jae
cmp
add
add
pop
dec
mov
add
jecxz
inc
xchg
inc
add
sub
jp
fstl
xor
add
mov
cmp
push
test
add
packssdw
xor
dec
rolb
mov
cld
fstl
or
movsb
lcall
jecxz
xchg
add
cltd
mov
xchg
orl
popf
pusha
add
loopne
mov
cmp
mov
mov
outsl
xchg
cmp
mov
movsb
cmp
jge
leave
inc
jge
aam
jno
addb
addb
lods
andl
mov
out
rolb
mov
lds
mov
ja
xor
add
mov
rolb
mov
mov
outsb
in
bound
mov
shrl
pop
rolb
mov
or
mov
scas
data16
jno
addb
call
ja
add
add
mov
sbb
add
add
mov
mov
in
sbbl
jo
mov
loope
scas
in
arpl
add
add
leave
outsl
stos
into
hlt
cmpsl
mov
inc
mov
add
inc
nop
add
push
mov
lcall
mov
xlat
fwait
xorl
std
xchg
mov
adc
test
and
mov
adc
dec
adc
jb
mov
sub
das
cmpsl
lret
mov
push
push
add
fsubr
jecxz
es
pop
lods
fdivrl
add
inc
test
dec
inc
add
push
or
push
ss
mov
push
std
add
pop
lds
add
inc
test
dec
je
rolb
mov
sub
push
aas
jb
mov
fmulp
mov
add
arpl
lods
enter
jmp
add
xor
inc
add
or
add
add
repnz
mov
add
add
inc
mov
xchg
sbb
ret
jmp
sub
or
add
mov
cs
add
lcall
shll
aaa
jmp
data16
jp
enter
push
mov
mov
icebp
repnz
mov
aaa
test
inc
movaps
adc
mov
orl
and
mov
add
add
cmp
jle
mov
cli
sub
dec
xlat
leave
fcoms
adc
mov
push
pop
jg
push
add
das
lds
mov
jmp
cmp
outsl
mov
push
add
es
lods
aad
popf
outsl
rolb
inc
add
pop
jmp
pop
or
add
mov
popa
mov
nop
add
cs
addb
aaa
or
cmpsl
loop
mov
fwait
adc
mov
outsb
pop
dec
jge
rol
sub
jnp
mov
mov
add
ja
fcompl
ficompl
outsb
into
popf
push
pop
cld
mov
mov
cmp
xor
cmpsb
add
pop
jb
mov
mov
dec
or
dec
or
negb
adc
mov
outsb
xchg
xchg
cmp
stc
xchg
test
push
add
mov
lds
mov
repz
pop
pop
jecxz
or
lods
addb
std
dec
sub
inc
outsb
mov
mov
add
mov
sub
jbe
push
pop
push
add
add
in
stos
addr16
sti
add
mov
sbb
add
mov
add
arpl
lret
push
in
out
add
fsubrl
fldenv
lcall
sbb
mov
add
add
mov
mov
loope
add
pop
xchg
shl
outsb
jne
add
mov
sub
std
daa
mov
cld
mov
jne
vmwrite
or
addb
out
arpl
ss
aaa
clc
out
lret
add
mov
cld
std
mov
jo
mov
adc
sub
sub
add
add
movb
loop
mov
mov
jge
lret
fucomp
lret
cmp
call
jne
addb
out
lcall
or
lods
fcmovnbe
add
xchg
or
enter
jbe
inc
add
mov
add
pop
cltd
dec
scas
inc
sbb
adc
mov
xchg
add
or
imul
stos
js
out
fs
and
movl
std
xor
pop
mov
cmc
push
movsl
dec
enter
loopne
mov
add
mov
and
mov
pop
mov
fs
imul
pop
jae
xchg
xchg
repz
xor
xchg
inc
pop
stos
sbb
jecxz
rolb
mov
add
outsb
push
sub
add
sbb
adc
into
cmpl
jb
mov
pop
nop
add
scas
insl
icebp
incl
lahf
mov
ss
lahf
in
inc
add
mov
mov
bound
mov
xchg
int
dec
xor
jl
add
xor
mov
and
pop
jbe
mov
add
cltd
cltd
inc
pop
outsb
scas
pop
leave
adc
add
add
sbb
pop
bound
mov
js
rcrl
pop
mov
mov
mov
and
pop
std
daa
xlat
or
cmp
add
add
movsb
aas
nop
add
movsl
pop
mov
add
inc
add
mov
inc
sbb
movsb
roll
out
ljmp
xchg
mov
in
add
stc
outsl
cltd
mov
icebp
cmp
xor
mov
push
leave
aaa
xchg
or
cmp
stos
movsl
push
pop
rolb
mov
pop
adc
mov
ret
jmp
imul
inc
out
xor
ss
lods
incl
mov
add
add
dec
xchg
add
cli
divl
hlt
dec
movsl
pop
mov
clc
lea
inc
add
sub
add
mov
mov
mov
mov
mov
mov
dec
mov
mov
insb
dec
fbld
adc
imul
dec
loop
mov
push
push
sahf
pushf
pop
movlps
mov
lret
mov
mov
popa
adc
add
pop
or
lea
fidivs
testl
inc
jmp
add
mov
dec
sub
adc
add
dec
aad
inc
add
mov
mov
dec
ss
rolb
mov
stos
or
sbb
insb
xchg
lds
pop
int
xor
mov
call
or
sti
repz
mov
inc
add
inc
sbb
loop
mov
push
iret
jg
sahf
out
push
call
ficoms
mov
add
loop
mov
in
notb
jl
test
popf
dec
ljmp
mov
add
mov
mov
jmp
fs
clc
stos
out
adc
int
add
xchg
js
cmp
int3
lds
jb
mov
dec
cli
inc
mull
add
scas
sub
aas
xchg
ds
xchg
ljmp
pop
or
mov
add
je
add
add
outsl
mov
lds
sub
add
add
add
movsl
aas
or
std
inc
add
or
adc
jmp
cli
sub
xchg
ja
jbe
push
xchg
push
push
pop
inc
data16
lds
add
sbb
pop
fdivl
sbb
add
jmp
jns
add
add
cmp
jge
lret
push
add
adc
add
jg
ret
bound
mov
add
add
and
sbb
sbb
push
xchg
jg
cli
addr16
push
in
add
movsb
repnz
add
sub
mov
mov
lds
or
mov
lods
movsl
pop
test
xlat
mov
enter
aas
jecxz
cmp
in
mov
or
cmpsb
inc
mov
arpl
out
add
cld
bound
mov
pop
cmp
jl
push
xchg
push
or
in
sbb
add
add
cmpsl
lcall
dec
sbb
leave
mov
or
mov
popa
ret
mov
add
imul
jmp
adcl
dec
sub
fldt
jg
pushf
sahf
fwait
pop
inc
add
int
aad
push
add
popf
add
mov
mov
jge
addb
cwtl
and
add
inc
cmp
inc
and
addb
out
mov
add
mov
mov
mov
add
mov
mov
es
or
data16
mov
or
out
ljmp
lret
mov
insb
hlt
ret
jg
repnz
mov
test
insl
movsl
jp
in
out
pop
push
add
add
add
or
pusha
add
xchg
fsubrl
divb
mov
mov
mov
add
ljmp
jmp
insb
mov
aaa
xor
xchg
jae
dec
call
ss
fisubl
mov
xchg
sbb
mov
iret
xor
mov
cmp
mov
or
fwait
repnz
mov
and
jecxz
add
rorl
in
bound
mov
adc
jae
stos
insl
rcl
out
mov
cli
nop
add
mov
repnz
data16
mov
xor
mov
dec
cmp
pop
jns
mov
cmp
rolb
mov
add
mov
mov
inc
and
mov
cli
rolb
mov
add
add
enter
ja
add
mov
and
add
ficompl
xchg
xor
mov
repz
sub
movsb
mov
stos
jbe
cltd
cmpl
pop
aaa
cmp
xchg
das
or
jl
arpl
mov
sbb
pop
xor
xor
mov
fbld
add
add
push
stos
mov
add
and
mov
mov
add
frstor
lahf
jmp
mov
lcall
inc
add
pushf
add
push
adc
hlt
xchg
int3
push
mov
sbb
jle
add
and
idiv
jg
pop
dec
adc
mov
pusha
add
icebp
leave
push
gs
iret
lea
add
arpl
aaa
daa
or
mov
inc
push
mov
stos
xchg
add
add
mov
add
test
jno
xlat
cmp
inc
sbb
hlt
pusha
add
mov
bound
mov
mov
cld
xor
mov
add
mov
cld
daa
les
mov
cmpsl
je
das
cmp
leave
jb
mov
ja
test
ret
out
sub
addr16
je
add
cmpsl
popf
sub
add
mov
dec
xor
mov
add
add
mov
fiadds
aas
sbb
and
mov
pop
dec
sbb
outsl
jb
mov
push
jecxz
clc
aad
stos
aad
jo
mov
bound
mov
xchg
mov
or
add
add
add
aaa
and
lea
pop
lock
add
push
add
enter
mov
mov
aam
xchg
in
dec
pop
or
add
or
cld
jge
inc
push
cmc
mov
add
rolb
mov
pop
out
inc
pusha
add
xor
mov
inc
leave
je
lods
sub
add
or
push
adc
mov
xor
mov
add
xchg
scas
add
mov
mov
dec
test
in
pop
repz
cmp
andl
jns
xchg
sbb
adc
cs
add
mov
negl
pop
fists
add
dec
insl
stos
xor
mov
dec
mov
mov
lods
sbb
mov
popa
fwait
rolb
and
add
or
mov
push
add
push
cmp
mov
jp
push
es
sub
mov
add
mov
faddp
shl
xchg
xor
mov
jns
push
lods
out
cld
loop
mov
in
pop
lods
mov
jg
cld
or
mov
stos
cmp
aaa
decb
xchg
or
jno
inc
lret
cmp
insb
leave
addb
jge
add
mov
jmp
addb
sub
or
ja
and
sbb
rolb
mov
xor
mov
out
or
sahf
in
in
jge
shr
add
sub
xlat
js
add
jb
mov
pop
cmpsb
daa
shll
mov
mov
lods
ja
jp
call
add
add
sub
icebp
dec
pop
cmpsl
in
jmp
adc
adc
or
pop
cmp
add
mov
add
xchg
loopne
mov
jns
frstor
lret
pop
cli
movsb
fcom
add
hlt
inc
int
rcll
adc
jb
mov
rcrl
jge
add
fistl
pop
mov
ret
out
add
add
hlt
bound
mov
mov
xchg
mov
inc
rep
xchg
ret
mov
inc
out
and
or
outsl
jnp
mov
mov
mov
add
add
mov
and
add
and
mov
sbb
out
sub
sarl
pop
sarl
movsb
clc
ficompl
push
dec
out
fdivr
inc
dec
andl
add
or
sub
xchg
outsb
sahf
fmul
mov
repz
pop
pop
sub
mov
in
jne
adc
mov
js
add
jmp
in
aas
mov
scas
xchg
ds
dec
fwait
xchg
pop
jno
sbb
add
xor
add
lret
pop
xchg
xor
shrl
out
jns
push
push
add
lret
add
popa
adc
ljmp
rep
xchg
mov
mov
push
xchg
add
lods
rcrl
and
xchg
add
mov
mov
add
mov
cwtl
nop
add
or
push
push
sbb
add
pop
and
mov
or
mov
sbb
xor
mov
xchg
pop
cmp
cmpsb
hlt
jmp
jae
add
arpl
jp
rolb
mov
aad
add
add
fwait
mov
inc
jg
add
add
mov
push
cmpsl
lea
mov
fldenv
mov
add
add
add
add
jle
sub
fadd
mov
les
out
mov
xchg
add
add
xlat
mov
pop
add
mov
xchg
jp
dec
aas
mov
push
xor
mov
push
and
xlat
lock
jecxz
aad
adc
mov
pop
popa
cmp
test
repz
and
sbb
enter
xorl
insl
repnz
mov
movsb
outsl
popa
jmp
mov
jo
mov
xor
add
mov
mov
xchg
jns
add
sub
pop
sbb
lods
rolb
mov
dec
jle
xchg
add
push
mov
mov
addb
ljmp
add
adc
pop
push
cltd
add
mov
mov
test
push
adc
adc
xor
hlt
sub
add
mov
dec
inc
lds
jo
mov
repnz
mov
mov
cmp
outsb
repz
add
jae
leave
or
scas
std
rolb
mov
in
test
add
mov
out
mov
mov
mov
mov
loope
mov
inc
leave
cwtl
cmp
cmp
or
icebp
xchg
bound
mov
adc
mov
cmp
add
push
jg
shrl
mov
add
pop
cmp
fstps
test
xor
add
mov
add
mov
dec
and
mov
lahf
mov
add
loop
mov
mov
icebp
enter
pushf
int
into
ret
popa
gs
dec
sbb
push
sahf
add
mov
or
loop
mov
xor
xchg
scas
jb
mov
mov
notl
enter
lds
xor
mov
add
inc
stos
or
add
aam
pop
push
xor
stos
adc
rcll
mov
pusha
add
xor
mov
xchg
add
std
in
mov
dec
ljmp
iret
decl
vfrczsd
sub
shll
enter
jp
pop
mov
adc
mov
sahf
jmp
push
mov
test
mov
add
mov
sahf
inc
jo
mov
jg
lcall
fmuls
je
pop
fwait
add
mov
and
mov
lahf
or
mov
or
cld
hlt
inc
and
mov
imul
fbld
movsb
jns
test
pushf
test
mov
les
mov
call
test
mov
popf
dec
and
mov
mov
inc
add
dec
and
loop
mov
add
repnz
mov
sub
sbb
xor
mov
fcompl
rolb
mov
rolb
ljmp
push
push
add
sub
js
push
mov
mov
mov
out
insl
jbe
mov
addr16
and
mov
insl
stos
mov
push
adc
xchg
in
ffreep
sti
push
addb
outsb
popa
xor
mov
add
es
mov
cmp
repnz
mov
xchg
xor
add
out
movb
sbb
mov
mov
mov
adc
iret
push
add
add
add
jno
repz
scas
std
lahf
movsl
loop
mov
add
stc
loope
nop
add
lahf
pop
or
xor
mov
adc
mov
cmc
dec
lret
mov
mov
dec
jnp
push
xor
movsl
mov
mov
insl
mov
fldl
aaa
les
inc
cmp
add
pop
or
cmp
jbe
outsb
jns
mov
fstpl
xchg
lcall
mov
pop
movsl
cmc
mov
loop
mov
pop
test
lods
imul
mov
mov
sub
xchg
ljmp
cmp
mov
push
filds
lods
aam
sbb
cmc
mov
xor
stos
mov
add
ss
mov
inc
stos
cwtl
out
shll
cwtl
adc
push
aam
icebp
jbe
pop
pusha
add
add
sti
in
mov
add
or
mov
pop
xor
mov
test
add
scas
mov
xchg
les
int3
cmpsb
rorl
adc
add
int3
leave
xor
movsb
cli
pop
aad
loop
mov
inc
add
outsb
jb
mov
rorl
mov
and
add
dec
out
iret
into
inc
fstl
lret
es
adc
ljmp
push
add
shl
sbb
mov
pop
lcall
lret
sub
adc
xchg
sbb
mov
xor
mov
adc
mov
sub
sbb
xchg
call
hlt
lods
popf
rorl
add
hlt
shrl
adc
lcall
push
insb
bound
mov
add
mov
adc
add
push
inc
add
rolb
mov
xchg
lock
add
push
sub
scas
mov
xor
or
addb
jne
icebp
dec
inc
sub
add
mov
xchg
mov
dec
push
xor
adc
loope
jnp
ret
clc
pop
jle
add
test
and
mov
mov
push
xor
xor
add
rolb
mov
movsl
inc
add
icebp
jae
xchg
sbb
xchg
test
mov
push
add
mov
xor
hlt
pop
dec
cmp
ret
addr16
and
mov
add
ret
mov
sbb
add
int3
imul
sbb
sub
xchg
inc
or
das
pop
in
lods
add
dec
cmpsb
pop
mov
in
das
jge
mov
push
add
xchg
adcl
cli
or
and
ds
add
mov
outsl
cli
inc
call
mov
ret
xor
mov
mov
mov
cwtl
lods
push
test
add
xchg
adc
mov
mov
add
sbb
sbb
dec
lock
out
xchg
mov
jmp
xor
mov
add
mov
jp
les
push
fs
in
mov
mov
shrl
add
pop
cmp
call
popa
cmpsl
ret
mov
mov
xor
bound
mov
outsl
or
movsb
mov
adc
mov
bound
mov
scas
mov
imul
cmp
add
inc
int
std
cmp
xor
mov
xchg
mov
sti
mov
cmp
inc
add
cmp
in
adc
mov
add
orl
pop
pusha
add
inc
add
cwtl
and
mov
xor
cmp
xchg
xor
cmp
mov
jae
xor
aam
or
ljmp
xchg
xchg
xchg
add
mov
xchg
xor
jmp
fistl
add
je
rolb
mov
das
fstl
adc
pop
xchg
repnz
aam
xor
mov
mov
jmp
mov
push
gs
add
mov
addr16
in
xchg
inc
sahf
daa
push
fstpl
sub
xor
add
fisubrs
sub
add
in
cmpsb
pop
or
mov
es
xor
mov
mov
aas
std
outsl
test
add
lods
sub
ss
pop
enter
push
jo
mov
addr16
sub
mov
mov
add
je
mov
lds
mov
mov
outsb
add
loope
add
add
sub
mov
fidivl
ljmp
add
xchg
add
mov
mov
cmp
dec
xor
mov
inc
in
test
sub
clc
iret
inc
clc
xchg
jmp
fnstsw
mov
in
xlat
pop
jecxz
add
mov
add
add
ds
pop
dec
dec
stos
sarl
js
in
pop
xor
jmp
ss
into
inc
jmp
das
sti
sbb
add
mov
mov
gs
nop
add
add
mov
add
jo
mov
add
mov
jns
mov
and
mov
sub
mov
or
adc
fistpl
xor
aaa
xor
mov
sbb
imul
das
insb
gs
pop
testl
mov
cmp
xor
mov
xor
mov
outsb
pusha
add
dec
cli
push
pop
rolb
aam
push
mov
inc
add
loop
mov
nop
add
push
fsubr
mov
fs
add
test
pop
pop
bound
mov
push
adc
xchg
push
inc
pop
push
popa
into
mov
push
add
cwtl
or
lcall
cmp
push
repz
bound
mov
imul
out
pushl
sub
addr16
sub
pop
loop
mov
jp
mov
ret
or
push
loopne
mov
testb
mov
decb
add
in
cmpl
popa
lret
pop
test
sbb
add
inc
sbb
pop
std
lret
popa
xchg
push
push
enter
jp
ss
addb
dec
cwtl
xor
ss
mov
fistpl
lods
and
add
push
cmp
push
ret
fdivrs
test
inc
add
repz
jecxz
mov
add
pop
mov
ret
cmp
adc
mov
and
add
iret
pop
pop
inc
push
loopne
mov
fistpl
add
or
jo
mov
repnz
fcom
add
add
mov
imul
testl
leave
mov
mov
ror
push
adc
dec
aam
aam
in
dec
adc
add
lcall
sub
add
pop
stc
mov
cmp
out
xchg
jnp
xor
jae
fwait
push
rolb
xor
mov
aaa
imul
lds
push
mul
push
pop
call
sbb
ss
out
mov
inc
sbb
jno
cwtl
loope
cmp
add
xchg
mov
lret
imulb
mov
pop
pop
aaa
xchg
out
xchg
add
aas
cmc
cld
pop
les
test
xor
push
and
inc
push
repnz
and
popf
sbb
in
in
xor
mov
jmp
fmulp
jnp
sbb
lcall
jmp
add
imul
or
add
add
jo
mov
dec
fcmovnu
ret
popa
rolb
mov
fisubrs
cmp
ds
std
dec
xchg
push
mov
scas
test
or
addb
in
xor
sub
leave
in
or
cmp
jno
bound
mov
cmp
mov
mov
out
pusha
add
mov
addb
data16
jle
xor
mov
imul
movsl
movsb
sub
push
xor
cmp
mov
mulb
mov
out
divb
jmp
add
add
sbb
test
and
jg
jbe
in
pop
lcall
test
xchg
inc
add
idivb
idivl
inc
push
add
dec
sbb
pop
dec
into
pop
pop
fcoml
inc
ret
out
dec
stos
pop
lods
xchg
pop
push
push
add
lret
lds
lret
mov
cmpl
and
mov
add
inc
jbe
pop
add
add
mov
add
xchg
add
push
mov
mov
cmc
stos
or
mov
jecxz
jno
pop
inc
add
push
rcrl
shll
add
inc
push
jmp
mov
mov
add
addr16
xor
mov
mov
lcall
or
push
add
mov
ljmp
dec
pop
clc
fbld
or
lods
div
mov
mov
inc
jbe
lahf
cld
jno
and
mov
test
pop
incb
sub
scas
mov
inc
xor
xor
mull
jbe
xchg
ja
loope
add
adc
icebp
into
int
add
lret
push
test
jno
mov
push
mov
nop
leave
jmp
dec
jae
add
fmuls
nop
nop
cld
jae
add
add
roll
test
mov
push
mov
nop
leave
jmp
add
mov
mov
xchg
ret
add
faddl
add
out
ret
sub
repz
out
cli
add
or
aad
push
mov
push
mov
xchg
ret
mull
lods
decb
push
nop
cld
jae
or
xor
add
aad
pusha
add
in
nop
leave
jmp
add
add
add
mov
add
clc
repnz
nop
cld
jae
incl
add
xor
jno
mov
clc
repnz
nop
cld
jae
jno
add
nop
nop
cld
jae
or
pop
add
jne
push
mov
nop
leave
jmp
cli
aaa
add
add
add
add
repnz
nop
cld
jae
aaa
pop
add
ljmp
bound
mov
mov
clc
repnz
nop
cld
jae
add
dec
decl
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
aad
add
mov
add
push
mov
nop
leave
jmp
jno
addr16
aam
push
pop
mov
clc
repnz
nop
cld
jae
xchg
add
add
add
repnz
nop
cld
jae
sub
add
pop
int
movb
nop
nop
cld
jae
outsb
sub
scas
add
je
jmp
add
add
add
add
add
add
mov
clc
repnz
nop
cld
jae
xor
dec
pop
jno
lods
fisttpl
mov
add
repnz
nop
cld
jae
add
jno
lea
pop
clc
repnz
nop
cld
jae
add
mov
out
add
clc
repnz
nop
cld
jae
jno
add
adc
add
into
mov
clc
repnz
nop
cld
jae
aas
add
outsb
add
nop
leave
jmp
outsb
sbb
or
dec
mov
clc
repnz
nop
cld
jae
dec
jae
sub
jae
jmp
clc
push
mov
xchg
ret
add
aad
fdiv
add
or
clc
repnz
nop
cld
jae
add
xchg
add
pop
jno
lea
repnz
nop
cld
jae
add
add
add
jl
test
adc
add
repnz
nop
cld
jae
push
dec
jo
mov
fcoms
repnz
nop
cld
jae
add
lea
sub
pop
movl
push
mov
xchg
ret
add
aas
scas
sub
add
clc
repnz
nop
cld
jae
add
add
add
mov
add
or
add
inc
test
out
icebp
lret
movzwl
push
mov
nop
leave
jmp
aas
add
dec
add
dec
push
mov
xchg
ret
pop
jae
add
lods
add
outsb
mov
clc
repnz
nop
cld
jae
lods
add
mov
mov
nop
leave
jmp
aad
add
or
push
sub
inc
add
add
add
inc
sub
add
add
in
mov
clc
repnz
nop
cld
jae
jno
add
mov
push
mov
nop
leave
jmp
add
in
add
add
mov
push
mov
nop
leave
jmp
aas
add
add
add
clc
repnz
nop
cld
jae
sub
aad
add
test
push
mov
nop
leave
jmp
cmp
push
add
ret
in
add
pop
clc
repnz
nop
cld
jae
or
add
add
add
add
mov
inc
add
add
add
lods
aas
roll
xchg
pop
je
push
mov
nop
leave
jmp
lods
add
daa
outsb
mov
push
mov
xchg
ret
push
add
cmp
sar
nop
nop
cld
jae
cs
add
jae
add
sub
add
push
mov
nop
leave
jmp
add
add
lahf
xor
push
mov
xchg
ret
aaa
dec
xchg
repz
mov
push
mov
nop
leave
jmp
add
add
add
add
clc
repnz
nop
cld
jae
add
clc
clc
repnz
nop
cld
jae
add
jno
roll
add
push
push
mov
xchg
ret
sbb
add
xor
scas
cmp
xchg
flds
xchg
ret
lods
add
add
push
push
mov
nop
leave
jmp
add
add
movl
dec
mov
push
mov
xchg
ret
add
lea
xchg
or
add
clc
repnz
nop
cld
jae
incl
movl
dec
push
mov
mov
push
incl
sbb
or
cli
xor
clc
repnz
nop
cld
jae
add
add
add
cmp
push
mov
nop
leave
jmp
scas
out
or
dec
push
clc
repnz
nop
cld
jae
add
push
add
out
popa
clc
repnz
nop
cld
jae
out
add
pop
roll
add
push
clc
repnz
nop
cld
jae
push
cs
push
call
dec
mov
clc
repnz
nop
cld
jae
ljmp
add
add
add
add
repnz
nop
cld
jae
push
mov
nop
leave
jmp
add
jno
addr16
mov
mov
push
mov
nop
leave
jmp
xchg
xchg
add
ss
add
nop
nop
cld
jae
dec
dec
add
call
clc
repnz
nop
cld
jae
dec
add
add
shll
mov
jmp
add
add
sbb
out
or
add
mov
leave
clc
repnz
nop
cld
jae
lods
add
test
mov
clc
repnz
nop
cld
jae
push
dec
add
pop
mov
clc
repnz
nop
cld
jae
in
xchg
pop
mov
mov
clc
repnz
nop
cld
jae
add
fimuls
test
sub
add
repnz
nop
cld
jae
add
add
test
push
mov
nop
leave
jmp
sub
add
out
imul
jmp
add
add
movl
push
push
mov
xchg
ret
add
repz
xchg
stos
mov
clc
repnz
nop
cld
jae
aas
pop
inc
add
aas
orl
out
add
in
add
add
mov
push
mov
xchg
ret
out
add
add
adc
repnz
nop
cld
jae
add
outsb
call
jb,pt
push
mov
nop
leave
jmp
dec
add
adc
pushl
clc
repnz
nop
cld
jae
add
add
aas
add
nop
nop
cld
jae
add
add
out
pop
mov
push
mov
nop
leave
jmp
notl
add
add
nop
leave
jmp
addr16
add
out
add
repnz
nop
cld
jae
scas
add
add
scas
les
add
jmp
add
add
add
add
or
add
push
clc
repnz
nop
cld
jae
gs
lea
push
add
clc
repnz
nop
cld
jae
fcompl
sbb
pop
add
mov
add
clc
repnz
nop
cld
jae
jno
add
stos
add
dec
push
push
mov
xchg
ret
add
add
or
xor
mov
nop
cld
jae
xor
add
xchg
or
repnz
nop
cld
jae
or
sbb
pop
add
add
repnz
nop
cld
jae
stos
out
leave
push
push
mov
xchg
ret
add
add
xor
add
xor
xchg
push
add
in
push
add
mov
scas
ret
add
add
hlt
and
lahf
add
push
mov
nop
leave
jmp
lea
cmp
push
roll
jp
out
clc
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
dec
add
outsb
xchg
std
add
add
dec
adc
repnz
nop
cld
jae
add
add
sub
dec
push
clc
repnz
nop
cld
jae
std
cmp
aad
push
pop
pop
xchg
movsl
adc
add
repnz
nop
cld
jae
add
jno
cs
add
add
pop
repz
or
add
xor
add
clc
repnz
nop
cld
jae
sub
inc
in
add
clc
repnz
nop
cld
jae
inc
rcll
nop
nop
cld
jae
mov
or
add
push
add
add
push
mov
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
gs
roll
add
ja
add
add
push
mov
nop
leave
jmp
std
add
lea
add
lcall
nop
nop
cld
jae
pop
sbb
push
orl
nop
cld
jae
xchg
add
or
add
ss
shr
push
mov
xchg
ret
push
add
lods
aad
mov
nop
cld
jae
add
add
faddl
std
cmc
push
fiadds
repnz
nop
cld
jae
pop
jno
sub
scas
add
aam
push
push
mov
xchg
ret
add
pop
jae
add
and
push
mov
xchg
ret
add
or
mov
push
mov
xchg
ret
mov
outsb
scas
mov
clc
repnz
nop
cld
jae
aas
call
mov
dec
sub
repnz
nop
cld
jae
pop
jae
xchg
lods
aam
incl
nop
cld
jae
repz
xchg
sbb
mov
clc
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
add
add
jb
mov
popa
add
repnz
nop
cld
jae
pop
add
lea
add
mov
xchg
ret
add
add
pop
out
add
xchg
push
xor
pop
clc
repnz
nop
cld
jae
add
add
xchg
push
mov
add
add
xchg
add
add
sar
add
add
push
jmp
add
pop
aaa
add
add
add
out
add
add
lret
fs
insb
clc
repnz
nop
cld
jae
lods
add
push
popf
jb
clc
repnz
nop
cld
jae
dec
pop
mov
popa
fs
repnz
nop
cld
jae
add
add
mov
dec
xor
clc
repnz
nop
cld
jae
out
add
pop
push
mov
xchg
ret
or
out
in
movl
add
add
repnz
nop
cld
jae
add
int3
push
clc
repnz
nop
cld
jae
outsb
pop
add
or
dec
jmp
add
add
add
inc
add
add
add
add
ret
push
mov
nop
leave
jmp
sbb
pop
add
add
or
clc
repnz
nop
cld
jae
add
add
pop
xchg
add
clc
repnz
nop
cld
jae
ss
jno
add
push
mov
xchg
ret
add
sbb
pop
clc
repnz
nop
cld
jae
add
add
lods
add
pop
or
repnz
nop
cld
jae
call
outsb
inc
clc
repnz
nop
cld
jae
add
inc
pushl
pop
add
sub
in
nop
leave
jmp
rcrl
add
outsb
aad
xchg
and
mov
add
imul
push
mov
nop
leave
jmp
testl
push
or
add
repnz
nop
cld
jae
shll
add
aaa
iret
sub
clc
repnz
nop
cld
jae
aas
jae
pop
repz
arpl
push
mov
xchg
ret
pop
push
add
std
xchg
add
jno
xorl
push
mov
nop
leave
jmp
add
add
add
mov
nop
leave
jmp
add
stos
pop
add
add
inc
outsb
push
push
mov
nop
leave
jmp
add
xchg
jno
jno
cmp
out
add
add
rep
movl
mov
hlt
xor
sbb
add
add
add
add
movsb
push
stos
jmp
add
add
add
roll
push
clc
repnz
nop
cld
jae
xchg
xchg
add
add
repnz
nop
cld
jae
add
xchg
aas
or
addb
inc
adc
xchg
inc
sti
and
clc
repnz
nop
cld
jae
gs
or
fmull
add
xchg
ret
incl
out
add
out
imul
repnz
nop
cld
jae
add
sub
push
sbb
test
add
clc
repnz
nop
cld
jae
addr16
pop
mov
clc
repnz
nop
cld
jae
add
sub
outsb
cs
popl
clc
repnz
nop
cld
jae
movl
lret
call
clc
repnz
nop
cld
jae
pop
add
fildll
clc
repnz
nop
cld
jae
add
add
pop
push
mov
xchg
ret
cli
add
scas
std
add
fsubrl
lods
push
mov
xchg
ret
repz
add
or
in
nop
leave
jmp
add
pop
push
clc
repnz
nop
cld
jae
add
aas
sub
dec
add
jmp
dec
push
clc
repnz
nop
cld
jae
xchg
aas
jae
aaa
add
nop
cld
jae
mov
shll
call
fs
repnz
nop
cld
jae
std
add
add
pushl
push
mov
nop
leave
jmp
add
push
movsb
pop
push
push
mov
xchg
ret
or
add
push
call
add
add
repnz
nop
cld
jae
out
or
test
clc
repnz
nop
cld
jae
xor
xchg
fistpll
lret
in
nop
leave
jmp
pop
add
dec
mov
add
incl
push
mov
nop
leave
jmp
add
add
clc
repnz
nop
cld
jae
sub
add
add
inc
or
repnz
nop
cld
jae
mov
add
rep
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
pop
add
testl
test
clc
repnz
nop
cld
jae
in
add
inc
cmc
adc
mov
mov
popa
inc
cmp
clc
repnz
nop
cld
jae
addr16
add
jle
iret
or
leave
jmp
add
or
inc
ljmp
push
mov
xchg
ret
add
ss
add
idivl
and
clc
repnz
nop
cld
jae
add
addr16
add
sub
add
add
ljmp
add
xchg
repz
add
push
mov
xchg
ret
add
add
pop
or
push
clc
repnz
nop
cld
jae
add
xchg
add
add
cmp
repnz
nop
cld
jae
jno
add
jae
rcrl
and
repnz
nop
cld
jae
outsb
add
add
add
pusha
clc
repnz
nop
cld
jae
push
pop
pop
scas
aas
aad
cmp
cmp
push
mov
nop
leave
jmp
add
add
testl
nop
nop
cld
jae
add
outsb
jno
add
add
repnz
nop
cld
jae
add
xor
push
add
jbe
sub
add
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
gs
outsb
pop
fistl
mov
nop
leave
jmp
aaa
out
aas
aad
add
add
mov
clc
repnz
nop
cld
jae
outsb
add
repz
push
mov
xchg
ret
testl
add
or
nop
nop
cld
jae
sub
add
add
nop
nop
cld
jae
repz
add
add
cmp
test
repnz
nop
cld
jae
call
and
mov
push
and
and
clc
dec
inc
jmp
add
roll
sub
fcoml
gs
adc
cld
jae
add
add
ret
fsts
in
data16
outsb
sub
rclb
add
inc
and
push
mov
xchg
ret
add
call
repnz
nop
cld
jae
mov
add
jmp
add
add
std
add
add
xchg
add
add
fadds
dec
cmp
mov
nop
leave
jmp
add
ljmp
add
clc
repnz
nop
cld
jae
add
shrl
push
ljmp
cld
jae
add
aaa
ja
push
add
mov
xchg
ret
cli
add
testl
add
clc
repnz
nop
cld
jae
add
sub
rep
clc
repnz
nop
cld
jae
add
add
adc
mov
nop
leave
jmp
add
testl
mov
clc
repnz
nop
cld
jae
mov
add
jp
inc
add
out
sub
or
lods
repz
leave
and
clc
repnz
nop
cld
jae
out
push
jae
add
nop
nop
cld
jae
cli
mov
add
lret
clc
repnz
nop
cld
jae
or
in
add
inc
and
clc
repnz
nop
cld
jae
movl
pop
sub
repnz
nop
cld
jae
aas
aad
add
add
mov
cmpw
push
mov
nop
leave
jmp
inc
aas
add
add
push
push
mov
xchg
ret
lods
add
add
pop
aaa
jno
mov
push
mov
nop
leave
jmp
push
add
add
pop
xchg
or
nop
nop
cld
jae
add
or
mov
mov
adc
xor
add
add
add
aas
add
das
mov
clc
repnz
nop
cld
jae
aad
pop
xchg
add
pop
push
clc
repnz
nop
cld
jae
add
sub
dec
movzwl
push
mov
nop
leave
jmp
mov
add
aaa
icebp
or
repnz
nop
cld
jae
or
add
sbb
add
enter
in
nop
leave
jmp
or
add
lods
push
xchg
xchg
std
punpcklbw
shl
inc
add
divl
lods
pop
add
jae
clc
repnz
nop
cld
jae
aas
lods
lods
xor
push
clc
repnz
nop
cld
jae
pop
add
add
call
stc
in
add
add
add
mov
add
repnz
nop
cld
jae
add
aas
add
roll
je
clc
repnz
nop
cld
jae
outsb
incl
jnp
jp
jbe
clc
repnz
nop
cld
jae
xchg
outsb
add
cmp
roll
xchg
ret
ss
out
sarl
pushf
imul
clc
repnz
nop
cld
jae
outsb
jno
add
xor
clc
repnz
nop
cld
jae
sbb
add
std
scas
add
lods
mov
clc
repnz
nop
cld
jae
roll
add
add
xor
push
mov
xchg
ret
add
cli
add
out
add
push
mov
xchg
ret
add
addr16
add
xor
imul
cld
jae
incl
xchg
mov
add
clc
repnz
nop
cld
jae
lods
add
mov
push
mov
nop
leave
jmp
pop
add
add
lods
incl
xchg
add
push
mov
xchg
ret
add
cli
xor
sub
rolb
jo
mov
xor
clc
repnz
nop
cld
jae
add
aaa
test
add
push
mov
nop
leave
jmp
std
aas
add
sti
sub
push
mov
xchg
ret
add
xor
call
inc
adc
repnz
nop
cld
jae
push
sbb
lret
je
clc
repnz
nop
cld
jae
add
out
movswl
clc
repnz
nop
cld
jae
add
add
je
dec
clc
repnz
nop
cld
jae
aaa
add
push
sub
mov
xchg
ret
add
add
pop
out
repz
repnz
nop
cld
jae
pop
mull
inc
inc
jmp
jge
clc
repnz
nop
cld
jae
add
add
scas
mov
clc
repnz
nop
cld
jae
lods
add
out
sbb
mov
xchg
ret
aaa
lods
sub
add
add
mov
push
mov
xchg
ret
cmp
outsb
add
add
mov
rep
push
mov
nop
leave
jmp
movl
add
cmp
push
mov
xchg
ret
inc
sub
in
aaa
cmp
inc
sbb
nop
cld
jae
jae
sub
lea
cmp
nop
leave
jmp
shrl
lods
ds
clc
repnz
nop
cld
jae
lods
add
mov
clc
repnz
nop
cld
jae
movl
in
push
push
mov
xchg
ret
rcrl
add
add
ljmp
cltd
loope
add
add
add
repz
xchg
outsb
add
clc
repnz
nop
cld
jae
lods
lods
or
mov
clc
repnz
nop
cld
jae
add
testl
loopne
mov
nop
cld
jae
out
add
add
xchg
add
clc
push
mov
xchg
ret
or
scas
or
add
or
mov
nop
leave
jmp
outsb
add
add
dec
mov
clc
repnz
nop
cld
jae
aas
push
fucomi
clc
repnz
nop
cld
jae
add
add
push
add
push
mov
nop
leave
jmp
add
jno
pop
add
dec
out
add
or
clc
repnz
nop
cld
jae
add
daa
jp
test
call
in
nop
leave
jmp
outsb
xchg
add
adc
clc
repnz
nop
cld
jae
xor
mul
sbb
clc
push
push
mov
xchg
ret
add
or
mov
inc
rolb
xchg
ret
dec
sbb
add
dec
out
lods
and
and
push
mov
xchg
ret
or
stos
add
lods
sbb
push
clc
repnz
nop
cld
jae
or
lods
add
add
sub
push
je
clc
repnz
nop
cld
jae
repz
dec
push
sbb
rclb
xor
inc
add
lea
sbb
enter
nop
leave
jmp
testl
cmp
ror
add
push
mov
xchg
ret
sar
aad
add
push
add
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
xchg
lods
add
add
nop
nop
cld
jae
xchg
dec
add
in
jmp
clc
repnz
nop
cld
jae
call
add
dec
xor
aaa
popa
test
add
clc
repnz
nop
cld
jae
out
add
jbe
clc
repnz
nop
cld
jae
call
lods
pop
mov
push
mov
xchg
ret
add
scas
add
xchg
mov
push
push
mov
xchg
ret
add
mov
add
clc
repnz
nop
cld
jae
push
add
add
dec
clc
repnz
nop
cld
jae
lods
add
xchg
cli
push
add
flds
repz
repnz
nop
cld
jae
add
lods
in
or
pop
mov
mov
lret
mov
xchg
ret
add
add
outsb
dec
outsb
cli
rolb
mov
in
mov
clc
repnz
nop
cld
jae
dec
aad
std
mov
clc
repnz
nop
cld
jae
add
add
mov
xor
add
clc
repnz
nop
cld
jae
std
scas
lods
add
clc
repnz
nop
cld
jae
rcr
repz
add
add
nop
nop
cld
jae
in
add
aas
add
push
mov
xchg
ret
fdivl
add
add
ljmp
add
push
mov
xchg
ret
add
imull
add
lods
inc
repnz
pop
push
mov
xchg
ret
rcll
cmp
loope
add
add
clc
repnz
nop
cld
jae
add
add
and
mov
inc
add
mov
xchg
ret
add
call
add
mov
add
clc
repnz
nop
cld
jae
add
push
testb
add
clc
repnz
nop
cld
jae
pop
mov
mov
push
mov
xchg
ret
push
add
add
movsb
add
mov
add
in
nop
leave
jmp
add
add
add
inc
loopne
mov
xchg
ret
add
rol
add
push
push
push
mov
xchg
ret
pop
sbb
aas
add
add
outsl
push
push
mov
nop
leave
jmp
call
add
shll
movb
mov
xchg
ret
add
mov
add
call
jmp
decl
pop
add
aad
outsb
std
in
mov
clc
repnz
nop
cld
jae
add
xchg
mov
arpl
mov
clc
repnz
nop
cld
jae
add
add
xchg
add
push
mov
add
out
add
cmpsl
add
mov
mov
addb
int3
and
clc
repnz
nop
cld
jae
std
add
add
push
jmp
clc
repnz
nop
cld
jae
add
add
add
add
int
clc
repnz
nop
cld
jae
xchg
add
add
add
push
mov
xchg
ret
add
lods
sub
cli
or
int
fldl
test
add
add
or
imul
clc
repnz
nop
cld
jae
out
add
add
xor
add
clc
repnz
nop
cld
jae
sub
std
add
mov
add
clc
repnz
nop
cld
jae
add
add
or
arpl
nop
nop
cld
jae
add
add
add
daa
jmp
add
xchg
add
out
add
add
add
mov
mov
add
mov
xor
clc
repnz
nop
cld
jae
add
add
jg
and
repnz
nop
cld
jae
repz
addr16
add
add
push
mov
nop
leave
jmp
dec
scas
lods
faddl
xchg
pop
fbld
xor
add
clc
repnz
nop
cld
jae
lods
add
and
clc
repnz
nop
cld
jae
add
add
ss
push
into
les
push
mov
nop
leave
jmp
fdivl
add
and
clc
repnz
nop
cld
jae
push
add
push
orl
add
repnz
nop
cld
jae
xor
or
add
cmp
nop
nop
cld
jae
xor
addr16
add
xor
clc
repnz
nop
cld
jae
std
add
decb
push
mov
xchg
ret
aaa
inc
lods
out
pop
dec
add
nop
nop
cld
jae
add
add
xchg
lods
cli
or
mov
add
sbb
add
add
lods
jae
dec
outsl
push
clc
repnz
nop
cld
jae
jno
ljmp
sbb
test
cmp
ret
add
lods
lods
pop
add
xchg
mov
xchg
ret
add
add
add
and
mov
div
clc
repnz
nop
cld
jae
add
add
xchg
in
add
push
mov
nop
leave
jmp
in
jno
aad
add
clc
repnz
nop
cld
jae
or
outsb
outsb
xor
cwtl
add
clc
repnz
nop
cld
jae
dec
aas
outsb
xchg
or
push
push
mov
xchg
ret
add
add
push
pop
out
lock
aad
mov
push
mov
xchg
ret
call
add
ror
add
clc
repnz
nop
cld
jae
add
or
jno
sub
and
mov
in
pusha
clc
repnz
nop
cld
jae
add
add
rorl
add
add
push
mov
nop
leave
jmp
xchg
lods
add
xchg
or
clc
repnz
nop
cld
jae
xchg
lds
lea
inc
cmp
mov
xchg
ret
out
lods
add
aaa
add
out
mov
clc
repnz
nop
cld
jae
add
add
incb
repnz
nop
cld
jae
xchg
xchg
inc
add
add
add
loopew
add
adc
mov
nop
leave
jmp
xchg
lods
lods
add
dec
clc
dec
push
mov
xchg
ret
add
aad
add
add
inc
add
lods
scas
add
add
cmp
mov
pop
push
mov
xchg
ret
add
add
add
add
jmp
add
addr16
cmp
add
add
lods
repz
rolb
loope
add
roll
daa
and
clc
repnz
nop
cld
jae
addr16
addr16
sbb
test
repz
clc
repnz
nop
cld
jae
add
cli
adc
addb
in
ljmp
leave
jmp
add
add
add
mov
test
xor
clc
repnz
nop
cld
jae
roll
lods
add
clc
repnz
nop
cld
jae
lea
incl
push
clc
repnz
nop
cld
jae
sub
xchg
ljmp
sbb
in
nop
leave
jmp
lea
add
add
mov
push
mov
nop
leave
jmp
xor
push
add
cmp
or
mov
nop
leave
jmp
add
xor
add
sbb
nop
nop
cld
jae
add
aaa
testl
cld
clc
repnz
nop
cld
jae
xchg
add
les
repnz
nop
cld
jae
out
add
or
add
push
mov
xchg
ret
add
add
add
imul
cld
jae
call
fwait
pusha
clc
repnz
nop
cld
jae
testl
add
out
add
clc
repnz
nop
cld
jae
add
sub
xchg
add
clc
repnz
nop
cld
jae
add
add
mov
push
mov
nop
leave
jmp
add
xchg
movl
push
clc
repnz
nop
cld
jae
xchg
cli
add
add
add
push
mov
xchg
ret
xchg
dec
add
add
mov
add
clc
repnz
nop
cld
jae
add
add
sub
mov
xchg
ret
xor
add
jne
push
mov
nop
leave
jmp
pop
mov
repz
repnz
nop
cld
jae
add
jno
add
push
push
mov
xchg
ret
add
or
and
push
push
mov
xchg
ret
aaa
pop
add
add
sub
add
xchg
sbb
mov
nop
leave
jmp
add
add
add
jl
and
cmpsb
call
and
add
lods
add
add
repnz
nop
cld
jae
xchg
lea
movzwl
clc
repnz
nop
cld
jae
add
cli
add
clc
repnz
nop
cld
jae
scas
incb
or
clc
repnz
nop
cld
jae
scas
incb
out
mov
repnz
mov
nop
leave
jmp
pop
add
sbb
mov
in
nop
leave
jmp
add
add
xor
sub
call
nop
cld
jae
or
add
add
popa
lods
xor
push
mov
xchg
ret
jno
lods
shrl
add
inc
subl
nop
cld
jae
stos
add
add
mov
outsb
je
clc
repnz
nop
cld
jae
add
lcall
nop
cld
jae
jno
outsb
stos
add
mov
in
nop
leave
jmp
add
dec
add
roll
add
pop
push
mov
xchg
ret
out
add
ljmp
mov
pop
jg
or
add
cmpl
pop
add
mov
mov
clc
repnz
nop
cld
jae
push
jno
push
push
mov
xchg
ret
add
dec
add
in
lcall
lret
jmp
push
sub
cmp
or
add
out
pop
xchg
addr16
call
add
clc
repnz
nop
cld
jae
add
ja
outsb
je
repnz
nop
cld
jae
outsb
pop
lods
pop
cs
push
mov
nop
leave
jmp
aas
pop
call
enter
nop
leave
jmp
cmp
add
addr16
add
push
mov
nop
leave
jmp
add
add
add
jmp
add
xchg
ret
aaa
shrl
xchg
leave
je
clc
repnz
nop
cld
jae
gs
mov
mov
nop
leave
jmp
xor
add
add
pop
rolb
xchg
ret
idivl
out
add
add
aad
xchg
push
mov
xchg
ret
add
add
fimuls
test
loopne
call
in
nop
leave
jmp
sub
jno
mov
add
push
mov
nop
leave
jmp
lods
add
lret
mov
clc
repnz
nop
cld
jae
outsb
add
xchg
nop
cld
jae
stos
add
lods
add
add
mov
mov
adc
repnz
nop
cld
jae
sbb
add
sbb
add
clc
repnz
nop
cld
jae
dec
xor
or
repnz
nop
cld
jae
push
add
add
and
clc
repnz
nop
cld
jae
add
add
cs
nop
cld
jae
dec
mov
add
add
add
add
add
clc
repnz
nop
cld
jae
aas
cli
add
aas
add
xchg
rorl
clc
repnz
nop
cld
jae
outsb
dec
sbb
cmp
cli
cs
clc
repnz
nop
cld
jae
add
add
cs
imul
repnz
add
fmull
inc
add
add
inc
call
add
sbb
add
add
add
add
stos
inc
jp
movsb
clc
repnz
nop
cld
jae
add
add
add
mov
nop
leave
jmp
call
sbb
add
nop
nop
cld
jae
lods
add
add
cs
shr
push
mov
nop
leave
jmp
roll
add
add
xchg
adc
popf
inc
push
mov
xchg
ret
xor
gs
jae
add
add
adc
out
clc
repnz
nop
cld
jae
xchg
in
loop
mov
add
repnz
nop
cld
jae
out
add
push
add
mov
repnz
nop
cld
jae
or
push
push
push
mov
xchg
ret
repz
ljmp
call
clc
repnz
nop
cld
jae
or
dec
out
add
nop
nop
cld
jae
dec
addr16
addr16
testl
cld
jae
push
xchg
aas
xchg
lods
cli
push
push
mov
nop
leave
jmp
or
pop
push
add
add
cmp
repnz
nop
cld
jae
pop
cli
add
add
lret
clc
repnz
nop
cld
jae
add
mov
in
or
xor
push
mov
nop
leave
jmp
add
out
xchg
add
xchg
lods
add
clc
repnz
nop
cld
jae
xor
incb
add
inc
cmp
icebp
clc
repnz
nop
cld
jae
lods
inc
lods
stos
sbb
sub
push
clc
repnz
nop
cld
jae
add
add
std
sub
addb
cmc
mov
mov
xchg
ret
stos
call
mov
sub
in
nop
leave
jmp
faddl
add
or
fdivr
repnz
nop
cld
jae
add
dec
add
add
mov
mov
xchg
ret
add
xchg
add
fsubrl
subl
push
mov
xchg
ret
sbb
add
push
mov
xchg
ret
add
add
out
pop
add
es
push
mov
nop
leave
jmp
sub
or
mov
nop
leave
jmp
faddl
call
pop
push
mov
xchg
ret
add
or
jae
push
add
sub
in
nop
leave
jmp
add
sbb
add
sub
clc
repnz
nop
cld
jae
add
add
or
gs
push
clc
repnz
nop
cld
jae
out
xchg
cmp
push
push
mov
nop
leave
jmp
add
add
in
push
add
loopne
mov
add
mov
xchg
ret
sub
stos
pop
pop
aaa
aas
in
movzwl
clc
repnz
nop
cld
jae
pop
faddl
pop
fcompl
inc
add
add
aas
fsubrl
or
repnz
nop
cld
jae
sbb
pop
add
ss
add
adc
repnz
nop
cld
jae
out
add
add
mov
clc
repnz
nop
cld
jae
add
add
in
pop
and
in
nop
leave
jmp
add
add
push
mov
fadds
add
sub
push
cmc
outsl
into
add
add
and
push
mov
xchg
ret
scas
repz
lods
add
icebp
push
jb
mov
xlat
fisttpl
xchg
aad
add
add
add
add
mov
push
mov
nop
leave
jmp
mov
cmpsl
jg
dec
and
clc
repnz
nop
cld
jae
xchg
mov
pop
jmp
pop
sub
lea
add
sub
add
aaa
xchg
repz
push
or
mov
nop
leave
jmp
pop
add
outsb
add
div
add
nop
nop
cld
jae
sbb
push
add
mov
jmp
jp
push
mov
nop
leave
jmp
add
add
add
pop
push
mov
xchg
ret
add
add
or
mov
nop
nop
cld
jae
add
lods
add
add
repnz
nop
cld
jae
sbb
incb
push
repnz
nop
cld
jae
pop
xchg
push
dec
lea
mov
in
add
add
add
add
stos
add
subl
clc
repnz
nop
cld
jae
ljmp
add
jge
aaa
out
clc
repnz
nop
cld
jae
add
add
fimull
nop
nop
cld
jae
sub
repz
ss
and
inc
add
push
add
lods
add
in
nop
leave
jmp
add
aaa
fdivl
jmp
add
call
add
in
dec
aas
xchg
cld
push
push
mov
xchg
ret
add
or
aas
add
add
lea
push
mov
nop
leave
jmp
add
mov
out
or
repnz
nop
cld
jae
stos
rep
add
popa
add
repnz
nop
cld
jae
add
or
repz
in
cli
add
pop
test
lods
jbe
xchg
pop
jno
add
mov
sbb
mov
xchg
ret
add
add
decb
add
xchg
ret
push
add
out
add
xchg
ret
bound
mov
add
push
mov
nop
leave
jmp
add
scas
fmull
test
clc
repnz
nop
cld
jae
add
ljmp
push
mov
nop
leave
jmp
add
jno
jne
clc
repnz
nop
cld
jae
dec
xchg
popa
add
mov
xchg
ret
lods
add
cli
aaa
add
popa
add
repnz
nop
cld
jae
add
add
xor
test
add
ret
push
mov
xchg
ret
aas
xchg
lods
push
clc
repnz
nop
cld
jae
add
add
sub
in
add
pop
xor
add
cmp
mov
adc
iret
add
movzwl
clc
repnz
nop
cld
jae
add
add
fsubrp
inc
in
clc
repnz
nop
cld
jae
add
outsb
add
xor
mov
mov
push
mov
nop
leave
jmp
add
add
mov
add
ficompl
repnz
nop
cld
jae
add
add
add
jns
push
mov
nop
leave
jmp
xchg
ljmp
xor
clc
repnz
nop
cld
jae
add
add
add
adc
test
repnz
nop
cld
jae
or
add
jbe
push
mov
xchg
ret
add
scas
or
lea
mov
push
mov
xchg
ret
out
add
faddl
add
sub
inc
add
add
outsb
lea
roll
lods
xor
in
and
push
mov
nop
leave
jmp
add
add
inc
pop
add
clc
repnz
nop
cld
jae
pop
add
dec
add
add
add
mov
xchg
ret
add
call
add
adc
repnz
nop
cld
jae
add
add
push
or
nop
nop
cld
jae
outsb
add
roll
add
add
fs
aas
adc
in
nop
leave
jmp
dec
add
add
xor
xchg
jbe
call
push
mov
nop
leave
jmp
add
cmp
rclb
roll
xchg
ret
dec
add
add
lea
xor
inc
add
out
push
xchg
cmpsb
decl
in
nop
leave
jmp
lods
jae
outsb
dec
pop
incl
add
nop
nop
cld
jae
add
add
pop
and
mov
nop
leave
jmp
sbb
cmp
add
inc
mov
add
lea
or
add
and
clc
repnz
nop
cld
jae
sbb
aas
add
sub
jge
inc
add
add
add
rcr
movswl
clc
repnz
nop
cld
jae
sub
add
add
nop
nop
cld
jae
add
roll
pop
in
pop
adc
xchg
cltd
sub
push
mov
nop
leave
jmp
add
add
add
idiv
adc
mov
cmp
push
mov
nop
leave
jmp
add
or
ss
arpl
add
repnz
nop
cld
jae
jno
add
dec
jl
clc
repnz
nop
cld
jae
sub
dec
xor
clc
repnz
nop
cld
jae
gs
xor
xchg
xor
add
mov
clc
repnz
nop
cld
jae
add
mov
xchg
ret
outsb
add
rep
aas
addr16
push
rclb
rolb
xchg
ret
aaa
sbb
std
add
add
mov
push
mov
xchg
ret
xchg
in
add
ret
clc
repnz
nop
cld
jae
xchg
add
add
add
add
movsb
push
mov
xchg
ret
xchg
xor
movl
push
mov
xchg
ret
aas
jno
lods
add
lea
loop
mov
mov
push
mov
xchg
ret
add
incb
cs
out
in
mov
inc
clc
repnz
nop
cld
jae
add
add
outsb
add
push
outsb
push
clc
repnz
nop
cld
jae
add
dec
xchg
add
ljmp
lock
clc
repnz
nop
cld
jae
add
add
push
sar
call
in
nop
leave
jmp
add
add
pop
push
mov
xchg
ret
repz
add
repz
mov
inc
clc
repnz
nop
cld
jae
add
add
xor
sub
sbb
inc
add
incb
aas
pop
add
rolb
cltd
pushl
push
mov
xchg
ret
add
outsb
add
add
loope
lds
add
push
mov
nop
leave
jmp
add
push
call
dec
add
repnz
nop
cld
jae
stos
add
jae
sar
insb
inc
jb
push
mov
nop
leave
jmp
sub
add
aaa
outsb
push
mov
add
inc
add
je
ret
add
add
in
nop
leave
jmp
add
xchg
add
roll
adc
add
repnz
nop
cld
jae
add
add
pop
add
push
mov
xchg
ret
add
inc
jno
add
mov
clc
repnz
nop
cld
jae
call
or
sub
jne
push
mov
nop
leave
jmp
add
out
incb
pop
les
xchg
add
clc
repnz
nop
cld
jae
dec
add
mov
push
mov
xchg
ret
add
roll
add
add
mov
clc
repnz
nop
cld
jae
scas
jno
add
add
push
mov
xchg
lcall
adc
add
add
inc
add
and
imul
nop
nop
cld
jae
scas
add
jb
mov
nop
cld
jae
lea
lods
xchg
idivl
aas
arpl
nop
cld
jae
cs
out
add
add
nop
nop
cld
jae
add
push
mov
dec
movzwl
clc
repnz
nop
cld
jae
aaa
xchg
stos
movl
push
mov
xchg
ret
pop
aas
dec
sub
lea
mov
xchg
ret
add
push
add
add
add
pusha
push
mov
xchg
ret
push
outsb
incl
pop
add
dec
xchg
rolb
xchg
sub
clc
repnz
nop
cld
jae
add
add
cmp
nop
cld
jae
sbb
lods
pop
add
cs
mov
clc
repnz
nop
cld
jae
rcrl
add
negl
add
xor
push
mov
nop
leave
jmp
add
add
fdivl
jno
pusha
clc
repnz
nop
cld
jae
pop
add
out
add
repnz
nop
cld
jae
aaa
add
add
add
mov
push
mov
xchg
ret
jmp
xchg
xor
clc
repnz
nop
cld
jae
add
add
shr
ret
bound
mov
or
clc
repnz
nop
cld
jae
incb
loopne
mov
add
push
mov
xchg
ret
add
xchg
lods
mov
clc
repnz
nop
cld
jae
add
add
or
add
repnz
nop
cld
jae
out
add
mov
pop
cmpsl
incb
add
sub
and
add
add
fbstp
mov
push
and
dec
push
gs
sahf
add
sbb
int3
push
pop
jmp
sub
daa
xor
mov
cmp
add
sub
add
stos
movsl
jbe
add
lcall
mov
sub
push
int3
jg
daa
jmp
cmp
popa
repz
shrl
inc
add
aas
out
add
lods
ret
dec
sbb
popf
adc
xchg
cli
dec
cmp
hlt
and
mov
jmp
lds
lahf
gs
loopne
mov
cmp
stos
add
mov
mov
in
js
fnsetpm(287
lahf
mov
mov
jle
push
les
test
idivl
add
inc
addb
xchg
dec
jae
lds
xchg
std
mov
cmpsb
ret
mov
pushf
scas
or
jo
mov
push
sub
in
lret
ficompl
aaa
fwait
loopne
mov
cmp
add
outsl
pop
add
inc
cmpsb
lock
repz
mov
mov
dec
pop
xchg
std
xchg
add
pusha
add
add
add
shll
imul
add
add
pop
jge
movsl
jns
xchg
push
add
mov
notl
cltd
stc
jle
ror
stos
cmpl
jae
and
out
js
inc
int3
cs
sbb
fwait
sub
add
lods
lods
sbb
nop
add
fistpll
leave
daa
mov
outsb
sub
inc
xor
inc
jnp
add
mov
cmp
mov
repnz
adc
mov
push
mov
test
loope
pushl
aaa
loope
bound
mov
mov
mov
pop
ljmp
or
out
imulb
movsb
enter
add
adc
mov
int
iret
stos
adc
mov
add
sahf
scas
sbb
test
dec
mov
call
cli
sbb
xchg
out
out
push
in
icebp
cwtl
es
mov
adc
ds
arpl
fadd
inc
mov
aam
xchg
xchg
adc
jmp
ret
cmp
cmp
xchg
ja
lods
mov
mov
cmc
sub
and
xchg
sub
cmpsl
jb
mov
xchg
into
jb
mov
add
ret
sbb
sbb
popf
cld
mov
adc
add
rcrl
adc
mov
insl
outsb
jmp
xor
mov
add
add
mov
jo
mov
sahf
push
xlat
push
addr16
int3
ljmp
mov
mov
add
jl
popf
or
std
mov
rolb
js
ss
bound
mov
adc
mov
cmp
addb
mov
add
add
or
enter
jbe
aad
push
add
mov
sbb
adc
mov
add
mov
insl
jmp
fiaddl
mov
xchg
pop
jecxz
jle
scas
mov
mov
adc
mov
ljmp
iret
sbb
addb
movsb
repnz
ss
inc
mov
add
int
fdivrs
inc
inc
addb
daa
cmp
imul
sbb
adc
insl
idivl
xchg
add
imulb
nop
add
dec
sub
rorl
add
sbb
out
std
pop
out
stos
rcl
pusha
add
xchg
pop
js
out
or
and
mov
xor
mov
adc
mov
aad
hlt
pop
clc
xor
adc
fildl
adc
out
dec
gs
nop
add
and
out
jmp
lock
ds
mov
ss
mov
mov
push
rolb
repz
xor
mov
fisubl
in
cmp
lods
mov
add
rolb
mov
ds
push
in
dec
data16
add
sbb
jb
mov
movsl
xor
add
push
stos
sahf
test
add
in
sub
jge
add
mov
xchg
and
add
or
rolb
mov
xor
mov
mov
add
xor
xor
jnp
jnp
inc
lahf
loop
mov
xchg
jp
outsl
and
mov
jmp
add
pop
xchg
cli
loopne
mov
addb
scas
mov
adc
mov
mov
cmp
add
mov
rorl
clc
sub
inc
add
loope
jnp
xchg
or
pop
addb
mov
notb
mov
cld
adc
mov
mov
out
cltd
inc
mov
mov
add
pop
jnp
mov
add
outsl
stos
ret
add
out
adc
xor
mov
in
add
cmp
jl
test
xor
and
mov
js
xchg
jmp
pushf
and
xchg
idivl
test
push
add
std
aam
pop
arpl
iret
jl
push
add
faddl
lock
outsl
inc
aas
push
mov
add
jae
mov
pop
adc
mov
sbb
xor
mov
bound
mov
leave
and
in
mov
add
jno
mov
dec
rolb
mov
add
imul
jl
daa
pop
xchg
outsl
adc
gs
rolb
mov
add
das
mov
adc
jle
jo
mov
fidivrs
stc
push
inc
and
mov
imul
mov
lahf
jno
add
add
mov
adc
test
cs
dec
orl
sbb
inc
sbb
jne
cld
stos
popa
xorl
nop
add
mov
or
sahf
mov
jg
add
cli
fimull
mov
add
or
xchg
hlt
rolb
outsl
cmp
mov
xchg
add
mov
sub
xor
cmp
xor
mov
dec
sahf
ja
add
push
faddl
and
sbb
lods
mov
mov
mov
add
iret
lods
add
mov
out
movb
cmp
imul
stos
adc
cwtl
add
cwtl
mov
es
add
and
mov
or
out
add
add
imul
pop
xor
add
dec
pop
aad
es
aaa
cmpsl
out
popa
cmp
xor
adc
or
ss
cmp
mov
add
scas
cmp
adc
mov
pop
in
add
addb
or
mov
cmc
mov
add
lods
mov
push
add
gs
sti
out
push
jl
sbb
fsubrl
mov
mov
mov
enter
ja
lret
mov
dec
pop
push
lcall
inc
call
mov
mov
inc
mov
mov
mov
aas
jbe
lods
push
xchg
mov
daa
daa
les
add
adc
out
fcoml
cld
rolb
mov
lods
insb
or
rolb
mov
in
fwait
cltd
inc
setl
cmpsb
clc
mov
int
shll
pop
inc
loop
mov
and
mov
addb
or
xor
mov
mov
addr16
jmp
mov
lahf
pop
jo
mov
andl
add
mov
loopne
mov
add
jae
or
add
bound
mov
pushf
pop
cmpsl
fs
fwait
iret
js
add
cltd
mov
mov
imul
repnz
or
arpl
add
mov
gs
lcall
lods
xchg
in
inc
mov
jge
mov
add
mov
add
int3
adc
jl
dec
addb
add
add
and
mov
mov
and
lods
push
bts
add
dec
aam
add
cmp
adc
mov
pop
xchg
mov
mov
mov
mov
lds
incl
dec
fidivs
cld
cmp
add
ret
jbe
mov
in
loopne
mov
add
rolb
mov
mov
iret
xchg
mov
xchg
add
sbb
mov
add
xor
and
add
mov
stc
mov
lret
lods
inc
and
mov
add
push
mov
mov
and
std
mov
and
mov
dec
xchg
pop
mov
add
pop
leave
popa
push
or
pop
jne
rolb
mov
add
aad
add
lret
push
rolb
push
inc
add
ljmp
inc
add
ljmp
icebp
jbe
add
xor
insl
scas
rcll
push
pop
mov
je
and
mov
sub
jmp
sbb
mov
add
mov
movsb
xchg
jg
ja
sar
insb
mov
mov
or
add
mulb
pop
out
inc
dec
or
insb
xchg
add
cmc
jp
mov
movsb
xlat
aad
xor
mov
sub
lea
fs
data16
dec
adc
mov
shll
add
cmp
add
mov
push
add
mov
es
add
mov
mov
add
bound
mov
movsb
dec
adc
fiadds
lahf
cmp
push
sbb
pop
mov
mov
inc
fildl
lea
addb
mov
std
and
mov
arpl
mov
icebp
lods
jmp
rolb
mov
mov
add
fcmovnb
and
mov
jle
mov
add
cltd
pusha
add
add
add
movsl
mov
push
xor
add
mov
add
lock
mov
mov
add
loopne
mov
cli
fcmovnb
scas
lahf
and
add
mov
notb
bound
mov
testb
add
sbb
mov
jmp
in
and
mov
out
mov
lods
pop
and
int3
insb
je
adc
mov
addr16
outsl
cmpsb
add
mov
dec
ror
and
xor
cmp
mov
mov
mov
cmp
adc
pop
xchg
jns
mov
mov
int3
jp
popa
cmpl
jg
mov
or
mov
add
mov
rep
mov
inc
sbb
add
test
add
sbb
mov
jnp
sub
pop
inc
add
movsl
pop
mov
mov
mov
add
adc
out
cmc
jns
add
add
out
xor
mov
add
out
int3
and
mov
dec
pop
loope
dec
roll
popl
jmp
add
aad
ja
mov
movl
in
mov
jne
push
add
jne
sub
ret
dec
mov
cmpsb
add
mov
mov
dec
outsl
xor
mov
rolb
mov
or
aad
adc
cmp
dec
xorl
cld
test
dec
mov
cmp
mov
add
test
les
in
ret
inc
xchg
or
fs
in
mov
mov
add
add
or
bound
mov
cwtl
mov
mov
aad
test
ss
add
out
test
les
lods
mov
add
mov
and
dec
popa
lea
lods
jmp
jle
in
push
ja
xlat
and
add
rorl
adcl
jns
scas
hlt
xlat
or
shll
addb
jp
inc
add
xchg
loopne
mov
adc
sub
add
mov
into
fsubl
jle
dec
out
rolb
fnstenv
xchg
imul
add
add
adc
movd
pop
xor
addl
mov
lea
test
mov
mov
test
mov
sarl
push
xor
addl
mov
out
repz
mov
jnp
push
xchg
fimuls
imul
mov
lgs
cmpsl
int3
push
xchg
jbe
xor
push
jg
and
mov
mov
xchg
ja
out
into
mov
jno
in
dec
pusha
add
ljmp
add
jae
aas
push
popa
adc
mov
enter
mov
stc
lahf
xchg
add
and
addr16
and
add
jbe
enter
dec
or
add
jno
xlat
push
sbb
sub
shl
add
push
sub
rolb
mov
rolb
adc
add
ja
add
push
jge
sar
enter
idivl
out
inc
xor
add
xor
mov
sti
lahf
inc
dec
cmc
cltd
ficomps
loope
adc
mov
in
leave
mov
ljmp
inc
add
dec
push
mov
sahf
mov
mov
test
hlt
xor
ja
mov
sti
jns
xchg
cltd
nop
add
xchg
or
mov
int3
adc
mov
jo
mov
add
mov
push
out
stos
stos
cmpsb
ss
add
ds
mov
popa
arpl
inc
mov
popf
push
sbb
push
add
mov
lock
mov
mov
sti
jecxz
push
add
add
and
mov
bound
mov
xchg
aad
stc
jae
add
cli
jp
fisubrl
push
pop
call
mov
add
sbb
mov
mov
xchg
adc
mov
add
mov
xor
mov
mov
add
sarl
cli
and
mov
or
push
mov
add
mov
jecxz
push
scas
jns
addb
js
cld
outsb
and
scas
call
mov
add
mov
das
ss
call
inc
mov
cmpsl
sub
fcomps
cmpsl
mov
lock
add
aas
push
add
aas
mov
add
add
cwtl
call
xor
mov
and
jmp
outsl
mov
pushf
lcall
leave
dec
push
fnsave
dec
imul
and
mov
add
movsl
lea
ja
push
inc
mov
aaa
int3
mov
or
push
mov
sub
mov
mov
mov
jne
add
xchg
aaa
mov
adc
jp
add
mov
pop
mov
mov
add
popa
jp
fsubl
jne
add
add
pop
fldenv
mov
mov
mov
cmp
jnp
sti
aad
push
add
push
mov
xor
pop
cmc
cwtl
lods
dec
mov
add
push
fwait
movsb
nop
add
sbb
and
mov
into
sbb
lock
test
sbb
test
arpl
xlat
popa
inc
push
div
or
or
test
add
inc
add
mov
dec
pushf
pop
jmp
jnp
sti
arpl
imulb
push
add
fwait
dec
mov
dec
inc
insl
sub
pop
out
into
cmp
jns
add
lods
adc
mov
outsb
adc
sbb
mov
repnz
in
lea
adc
xlat
scas
xchg
push
mov
jno
add
dec
int
add
call
mov
add
fstl
add
or
repz
add
lcall
push
cli
xor
rolb
mov
mov
lret
dec
xor
repnz
mov
inc
fcomp
lahf
lret
sbb
xchg
sbb
loop
mov
mov
je
in
icebp
test
movsl
sub
pop
fimuls
or
add
mov
xor
adc
dec
inc
out
xchg
cmp
mov
inc
sub
ret
dec
and
aam
call
clc
adc
dec
cmp
ja
cmp
jne
push
mov
mov
and
jb
mov
add
add
lret
rolb
arpl
rolb
mov
mov
add
add
mov
xchg
icebp
popf
cmp
pop
jecxz
add
pop
movsb
sbb
out
mov
test
mov
add
mov
test
xchg
add
mov
mov
add
outsl
mov
adc
mov
dec
cmp
or
add
inc
add
ljmp
push
add
mov
mov
add
mov
loop
mov
int3
test
popf
fmuls
adc
jmp
stos
xor
mov
xor
mov
sbb
xchg
das
cs
sbb
gs
clc
inc
add
inc
add
add
int
hlt
das
fcoml
inc
add
inc
das
sbb
mov
pop
popaw
jo
mov
nop
add
addb
ja
or
xchg
sbb
lret
outsl
dec
cmp
popf
clc
xchg
add
jecxz
add
addb
ja
mov
leave
dec
lahf
in
jl
flds
mov
pop
jns
outsb
ja
and
mov
mov
mov
daa
add
mov
inc
out
fisubrs
dec
lret
cmp
gs
jae
addb
push
add
lret
mov
add
mov
aad
add
mov
add
sub
ss
cwtl
das
adc
gs
dec
mov
aam
lcall
add
sbb
jmp
outsl
mov
xor
mov
jbe
xchg
or
xchg
push
std
push
add
enter
mov
cmp
imul
je
mov
je
add
push
aam
sbbl
inc
push
or
push
add
or
adc
test
insb
and
cmpsl
add
cmp
mov
cltd
fwait
addb
fs
dec
out
rolb
mov
movsl
addb
mov
add
fimuls
test
cs
cltd
addb
fisttpl
dec
xor
leave
scas
nop
add
filds
dec
fsubs
rolb
mov
mov
add
push
add
popf
fldenv
mov
jae
or
not
popa
jno
add
das
jle
xor
mov
cmp
add
leave
repnz
lea
push
movsl
xor
add
xchg
lock
xlat
out
call
int
lret
jno
lahf
jo
mov
dec
mov
or
adc
xor
mov
xor
loop
mov
add
cmp
fcmovnb
add
test
add
xor
mov
dec
ficomps
pop
dec
call
sub
push
add
dec
add
add
mov
add
mov
aaa
mov
inc
dec
and
ja
xchg
mov
dec
mov
lahf
imul
jne
rolb
mov
repnz
cmp
jge
push
jnp
test
insb
aam
pop
jg
xor
xchg
fistpll
dec
inc
imul
add
scas
dec
jmp
and
mov
mov
out
stc
xchg
out
stc
call
xchg
aaa
cwtl
pop
les
adc
or
add
imul
xlat
mov
cli
xchg
xchg
add
or
popa
sub
lea
aam
bound
mov
mov
mov
mov
lret
outsl
jno
pop
jns
daa
xchg
add
inc
dec
jns
negl
mov
mov
add
mov
andl
mov
das
or
sub
out
out
mov
xor
bound
mov
leave
cmp
add
lret
add
inc
lret
mov
mov
add
jns
icebp
push
cmp
add
fisttpl
add
dec
in
cmp
or
mov
fwait
jg
je
mov
cli
jl
addr16
loop
mov
fcos
rep
rolb
lahf
xchg
jbe
inc
mov
xchg
aam
dec
fsts
out
outsb
push
test
and
add
mov
std
lret
fiadds
add
in
cmp
iret
and
push
pop
ds
mov
mov
add
mov
ret
out
pop
and
mov
add
mov
add
mov
fisttpl
sub
add
insb
popf
mov
mov
inc
add
mov
mov
cmp
inc
and
mov
repnz
jge
mov
mov
pop
and
mov
sbb
mov
jl
test
add
add
out
outsl
and
mov
test
cmp
data16
cs
test
pop
rolb
mov
pop
stos
mov
cs
xchg
mov
push
jbe
mov
mov
icebp
sub
enter
mov
cmpsl
test
outsb
lret
lock
fwait
cli
int
rorl
add
xchg
mov
or
pop
xchg
hlt
dec
add
mov
mov
jecxz
hlt
sub
lahf
xchg
jecxz
outsb
pop
mov
mov
mov
mov
mov
add
das
divb
mov
mov
pop
pop
daa
xchg
add
xchg
sbb
mov
jmp
pop
out
hlt
adc
mov
sub
inc
xchg
add
mov
test
addr16
ret
adc
int3
repnz
push
mov
xchg
or
add
mov
sub
inc
cld
push
inc
sbb
xchg
mov
leave
jne
add
test
mov
add
dec
cmp
or
cmp
iret
lcall
or
xchg
jnp
push
cs
and
mov
push
in
aad
inc
jae
add
adc
mov
add
push
in
fisttpll
sub
rolb
mov
ss
mov
add
addb
pop
dec
cmpsl
aas
test
fistpl
divb
scas
inc
in
cmc
dec
lods
mov
xor
add
add
or
dec
in
jp
idivl
rolb
mov
iret
and
mov
nop
add
stos
xchg
pushf
cmc
push
add
inc
xchg
xor
push
mov
mov
rolb
mov
xor
pop
jne
hlt
mov
lahf
push
mov
add
add
jno
sbb
add
add
and
mov
add
stos
icebp
fnsave
enter
fdivrs
imul
lds
mov
add
movsl
loop
mov
mov
pop
xchg
scas
sub
in
repnz
cli
lods
mov
adc
jbe
hlt
out
mov
or
test
pop
stos
sub
bound
mov
adc
mov
dec
jb
mov
lret
and
jo
mov
add
ret
xchg
xchg
iret
push
add
mov
mov
pop
mov
xchg
mov
pop
in
mov
cmp
fs
add
fsubs
add
stc
jns
push
lret
imul
jl
data16
add
into
cmc
addb
xor
add
xchg
jnp
cltd
scas
arpl
in
sub
stc
xchg
mov
xchg
add
mov
or
ja
and
add
fcmovu
xor
mov
fldenv
ja
add
sub
popa
jb
mov
cs
lods
dec
test
push
aad
mov
mov
add
mov
mov
cmp
jge
pop
aad
fwait
and
pop
in
jg
addr16
mull
ret
mov
inc
fs
mov
add
ret
dec
ljmp
and
out
mov
mov
insb
cmp
push
dec
jno
out
mov
lret
cmp
aam
outsl
lds
cmp
sub
push
mov
enter
lret
xchg
xchg
pop
add
mov
add
xlat
mov
cmp
popf
mov
push
flds
mov
mov
and
mov
add
add
xor
mov
loop
mov
imul
lods
adc
mov
mov
and
mov
mov
cwtl
lret
outsb
push
cmpsb
leave
ljmp
hlt
push
notb
adc
mov
pushf
lcall
mov
jae
icebp
lods
popa
or
mov
ret
pop
and
into
ret
pop
push
xchg
mov
imul
or
sarl
mov
mov
scas
jp
inc
mov
out
add
mov
mov
mov
add
and
add
fsubs
or
sub
sbb
mov
add
and
dec
inc
jmp
loopne
mov
add
xor
mov
add
mov
mov
int3
xchg
aas
pop
add
cmp
daa
and
mov
pop
dec
out
insb
aas
jg
dec
push
push
add
xor
mov
mov
jae
fwait
xchg
dec
mov
mov
mov
jecxz
test
push
add
adc
inc
add
mov
jbe
rolb
mov
cmp
add
andl
push
add
fidivl
sub
mov
and
and
mov
cmp
enter
leave
dec
pop
arpl
loop
mov
sbb
bound
mov
inc
js
sarl
loopne
mov
xchg
jecxz
testb
mov
mov
leave
pop
mov
add
mov
add
outsb
cmc
mov
add
dec
outsl
xor
inc
es
inc
add
sahf
pop
mov
pop
add
rolb
mov
add
lds
sub
xchg
push
xchg
scas
and
sbb
call
jg
add
mov
gs
jecxz
add
mov
andl
test
scas
insl
fstps
call
loope
add
mov
mov
sub
and
daa
icebp
into
addb
push
add
add
adc
adc
mov
mov
xchg
cmpsl
pop
sub
dec
lods
add
add
sub
add
icebp
insl
mov
and
test
lock
jl
adc
addb
push
cmp
jae
add
ja
inc
sbb
jp
out
add
mov
push
add
add
mov
jp
imul
push
add
movsb
testl
add
fld
add
mov
add
jns
ja
pop
bound
mov
sub
iret
testb
addl
sub
popa
jmp
mov
mov
inc
and
mov
fisubrs
sahf
inc
cmp
int3
fmuls
mov
repnz
sahf
dec
lods
outsb
lock
loope
inc
je
xlat
jb
mov
mov
shll
pop
cmpsl
sbb
and
into
push
add
fsubrl
add
ja
push
mov
dec
subl
sbb
scas
push
cmpsb
sahf
or
jle
in
jp
lcall
mov
int
push
add
jecxz
sbb
and
mov
sub
in
mov
add
mov
jo
mov
movsl
insb
mov
xchg
inc
mov
add
add
fistps
add
mov
add
mov
dec
je
and
rcll
mov
add
fs
bound
mov
bound
mov
inc
mov
fldl
insb
pop
mov
mov
push
pop
out
insb
dec
adc
mov
rolb
mov
lret
mov
add
jo
mov
lds
mov
pushf
push
sub
repz
mov
pop
cmp
cmc
daa
ret
imul
jg
arpl
test
pop
nop
add
mov
add
add
mov
or
inc
in
add
lret
add
stc
filds
add
inc
add
das
rolb
mov
pop
mov
add
scas
sbb
mov
add
mov
mov
into
hlt
mov
add
push
rorl
lods
outsb
pop
xchg
ss
popf
push
cmp
enter
xchg
ds
rolb
push
cmp
ret
leave
inc
add
mov
sti
out
and
add
mov
add
add
pusha
add
push
add
mov
lret
sahf
or
add
or
add
js
jns
addr16
fstpl
cwtl
ss
add
mov
pop
ds
sbb
add
leave
pop
dec
dec
addb
mov
add
pushf
sbb
rolb
data16
fstpt
sub
adc
mov
out
add
ret
out
mov
mov
test
addb
adc
xchg
mov
jo
mov
and
mov
and
pop
mov
add
mov
mov
push
xchg
add
mov
cltd
in
test
addb
or
jmp
or
mov
add
divb
mov
lahf
call
sub
dec
mov
data16
cld
fmuls
and
mov
mov
add
decl
xor
mov
jnp
sbb
add
or
pop
inc
loop
mov
es
popf
xorl
mov
add
pop
dec
lret
into
sub
sbb
in
xlat
dec
stc
out
and
cs
hlt
sbb
out
dec
pop
mov
aam
lret
jmp
add
out
sbb
stos
or
pop
mov
mov
and
rolb
mov
mov
add
xor
int
adc
push
mov
pop
push
mov
sti
iret
repz
sbb
mov
mov
dec
sub
adc
jmp
test
mov
lcall
add
cmpsb
cmp
cmpl
and
push
sbb
or
movsb
je
mov
cwtl
add
mov
xchg
xor
mov
or
push
add
mov
add
jae
sub
leave
xchg
xchg
add
fcompl
add
mov
repz
mov
call
ja
mov
test
mov
outsl
popa
pop
jae
idivl
mov
xchg
mov
cld
lea
mov
add
xor
mov
mov
add
dec
sahf
mov
cmp
push
mov
dec
pop
jae
jmp
insl
rolb
mov
mov
rcrl
pop
into
iret
inc
nop
add
add
idivl
fiadds
add
xchg
push
repz
iret
rolb
jne
mov
ficoml
mov
addr16
cmp
add
push
push
sub
mov
jg
stos
pop
add
cmp
insb
loopne
mov
add
inc
adc
rolb
data16
jo
mov
mov
lds
fiaddl
mov
out
pusha
add
lock
mov
push
push
leave
stc
addl
pop
call
fs
lock
mov
add
mov
fwait
mov
sahf
mov
sti
mov
dec
notl
xor
test
jne
ja
dec
popa
cmp
repz
andl
mov
lret
imul
add
mov
add
fisttpll
mov
cltd
mov
jbe
or
cmpsb
or
push
add
xchg
add
mov
sub
in
jmp
sbb
add
jp
adc
out
jp
xchg
fdivr
xlat
aaa
in
lcall
in
mov
ficoms
add
movsb
addr16
pop
sbb
and
add
sub
popa
gs
dec
addr16
je
cmp
push
jnp
aaa
or
mov
mov
idivl
out
decl
cwtl
mov
and
or
add
int3
add
mov
ds
ffree
test
mov
int
in
pusha
add
inc
mov
xchg
aaa
sbb
fildll
jecxz
push
and
mov
add
shll
sbb
mov
jbe
xchg
add
nop
add
pop
mov
add
popa
insl
push
sub
add
and
mov
orl
iret
dec
or
mov
insb
jo
mov
pop
add
stos
lea
out
adc
add
mov
add
xor
mov
sbb
adc
mov
sbb
dec
jb
mov
add
in
add
cmp
inc
add
and
xchg
dec
dec
scas
fyl2xp1
aas
adc
and
cs
enter
mov
cmpsb
xchg
push
inc
add
mov
cmc
xchg
test
rolb
mov
sahf
pop
sub
test
add
leave
xchg
or
add
add
mov
add
mov
sub
inc
add
push
aam
pop
stos
fisubrs
xchg
sub
add
xlat
mov
iret
dec
andl
jnp
mov
adc
cs
mov
sbb
scas
fs
rolb
mov
loope
add
sub
cs
lods
mov
ss
out
mov
cmp
cmp
add
ficomps
nop
add
rorl
cmp
mov
or
idivl
mov
mov
push
clc
dec
cmp
aam
out
orl
mov
mov
mov
add
in
xchg
add
leave
daa
outsl
pop
sub
dec
jns
add
int
ja
xlat
sub
pop
stos
xchg
outsb
mov
xchg
loop
mov
add
in
cs
jl
or
test
imul
xor
pop
das
std
dec
je
lock
mov
mov
sbb
add
dec
sub
add
jne
sbb
mov
add
add
add
scas
lds
in
mov
test
add
mov
mov
or
jmp
lock
add
shrl
push
arpl
add
adc
inc
dec
mov
sbb
mov
inc
pop
rolb
mov
call
add
mov
outsb
sbb
sub
stos
jae
dec
pop
mov
mov
in
pop
cmp
sbb
jecxz
add
mov
pop
int
xchg
jmp
into
or
mov
fbstp
sub
outsl
insl
mov
lcall
pop
mov
cmpsb
add
mov
jl
movsl
rolb
mov
lahf
push
add
mov
push
add
dec
mov
mov
mov
mov
mov
add
lods
popa
cmp
call
xchg
add
stos
ffree
jp
lds
add
xorl
push
xchg
addr16
adc
mov
add
out
inc
rolb
mov
rol
mov
add
repnz
lock
mov
outsl
xchg
loop
mov
mov
sbb
movsl
imul
or
add
in
sbb
add
std
jge
inc
pop
dec
pop
cltd
push
mov
lds
add
add
cmp
add
push
xchg
addb
push
dec
adc
je
jl
push
add
ljmp
cs
push
add
pop
bound
mov
addr16
push
add
pop
dec
mov
mov
add
add
mov
in
add
fiadds
mov
add
pop
pushf
jo
mov
cs
add
pushf
sbb
pop
dec
int
pop
imul
cmp
or
stos
xchg
add
cmpsl
loop
mov
fildl
mov
fxch
xchg
mov
outsl
in
mov
jg
add
mov
xchg
lcall
xor
mov
in
cmp
dec
dec
call
movsb
fstpt
add
cmp
mov
js
xchg
add
cmp
pop
aam
gs
mov
mov
sti
add
mov
mov
add
je
cmp
mov
in
push
stos
icebp
jo
mov
movsl
shr
mov
xor
into
adc
dec
xchg
sti
sub
addb
xor
xor
mov
mov
push
std
mov
mov
iret
dec
lahf
push
xor
mov
xchg
or
aam
dec
pop
jecxz
mov
mov
test
shll
mov
sahf
mov
xchg
lahf
sti
dec
and
mov
jmp
mov
add
xchg
addb
outsb
int3
lret
and
cmpsl
xchg
jns
std
sub
mov
or
add
out
jp
std
mov
mov
push
mov
add
mov
lret
jae
sbb
repnz
add
sub
add
sub
mov
cltd
push
out
iret
dec
jns
sbb
outsb
insl
mov
lret
xchg
in
fsubr
std
jp
push
and
mov
add
jmp
jbe
cmp
add
dec
jbe
mov
cmp
leave
dec
aas
call
cmp
mov
subl
movsl
aaa
icebp
fsubs
mov
mov
inc
ret
decl
jp
add
pop
das
mov
stc
xor
movsl
fstpl
add
int
cmpsl
fisubl
fldenv
mov
cmp
fs
clc
out
jmp
dec
or
bound
mov
js
movsb
fabs
nop
add
cmc
jo
mov
xor
arpl
mov
xor
aad
dec
inc
add
stos
fsave
sbb
fcmovnbe
xor
mov
mov
sahf
inc
rolb
mov
xlat
fwait
sbbl
test
mov
or
cmp
test
add
lods
mov
pusha
add
add
and
mov
dec
mov
mov
cmp
cmc
scas
sub
lods
dec
int3
mov
call
mov
mov
add
decl
dec
ja
xor
push
sbb
pop
aad
xor
mov
mov
mov
add
mov
mov
js
add
enter
xor
aad
push
movsl
sub
xor
cld
mov
aam
sub
sub
jg
add
mov
fld
shrl
rcrl
add
mov
add
mov
mov
loop
mov
xor
dec
loopne
mov
and
adc
xor
mov
inc
rolb
mov
aaa
das
mov
or
aad
js
jge
jmp
addr16
add
imul
jno
js
data16
icebp
cmpsl
sub
xchg
xlat
std
cmp
rolb
add
mov
jecxz
adc
pop
loop
mov
std
mov
mov
cmp
movsl
out
xor
jbe
icebp
dec
ss
xchg
or
cmp
mov
mov
cwtl
inc
mov
and
mov
add
adc
ret
jae
push
mov
scas
xchg
sarl
bound
mov
add
mov
movsb
or
mov
add
and
insb
in
inc
add
jne
xchg
add
data16
mov
cmp
dec
stos
adc
xor
mov
mov
shl
jmp
jmp
add
mov
pop
cmp
test
lahf
hlt
dec
mov
sbb
adc
xor
add
add
xchg
pop
or
testl
arpl
stc
xor
mov
add
xchg
sahf
popf
xor
rolb
mov
pushf
je
add
mov
mov
roll
xor
mov
dec
push
jg
sub
scas
mov
sbb
add
sti
xor
mov
mov
ss
lds
dec
fdivrs
mov
xchg
leave
cmc
out
sbb
dec
fs
ficoml
mov
adc
mov
xchg
add
cld
inc
xor
or
xlat
nopl
add
movsb
inc
add
xchg
xlat
xchg
sub
sbb
add
mov
xchg
rolb
mov
mov
and
mov
clc
fdivrs
push
repnz
jne
loope
add
jmp
sub
lds
mov
push
cmpsb
mov
filds
insl
sub
xor
or
dec
dec
mov
pusha
add
mov
jge
imul
out
adc
mov
mov
mov
es
xchg
mov
imulb
xor
add
mov
mov
addr16
pop
jp
sbb
inc
or
das
test
test
lods
stos
pop
scas
daa
pop
out
pop
fcmovu
sbb
dec
push
repz
sbb
rolb
xchg
push
add
sub
jbe
add
outsb
xchg
fmul
stc
cmc
lods
imul
xlat
loop
mov
mov
sub
movsb
mov
bound
mov
inc
inc
pop
movsl
adc
add
add
cwtl
mov
stos
pop
inc
sbb
add
out
dec
pop
pop
push
mov
add
mov
push
add
mov
addb
cmp
add
add
jo
mov
stos
insb
gs
roll
add
fs
scas
or
std
xor
int3
in
xor
push
adc
mov
jp
jp
mov
add
pop
jae
xchg
add
mov
cmp
idiv
pop
imul
mov
addl
adc
addb
je
and
dec
out
scas
fnstcw
add
cmpsb
fsub
add
mov
pusha
add
jbe
fmul
push
loop,pt
mov
jg
inc
add
mov
mov
aad
or
pop
movl
sahf
mov
fwait
test
dec
into
pop
popf
inc
insb
xchg
sahf
pop
sub
scas
mov
mov
cmpsl
mov
or
add
mov
mov
mov
xor
mov
sub
add
stc
repnz
ds
mov
push
add
mov
add
add
push
lret
in
add
inc
and
mov
sbb
lds
mov
add
pop
out
dec
xchg
or
pop
mov
loopne
mov
dec
push
xchg
or
add
rorl
ljmp
inc
pop
fcoms
mov
and
mov
and
cmpsb
ret
imul
xlat
ja
add
xchg
pop
jbe
push
add
mov
nop
add
mov
lea
mov
incl
xchg
inc
add
mov
add
addb
lahf
or
movsl
into
movzbl
cmp
or
adc
mov
fistl
sbb
jbe
popf
mov
sub
jnp
xor
add
mov
addb
mov
repz
dec
push
add
repz
sub
addb
stos
clc
fs
cmc
dec
movb
and
push
lret
adc
inc
add
mov
add
jge
push
xchg
stos
sbb
popa
push
addr16
pop
addr16
rcll
xor
dec
push
divl
fsubr
add
out
jbe
jge
add
in
insb
sub
int3
scas
xchg
add
test
add
addb
mov
cmp
dec
imul
add
sbb
dec
arpl
add
in
popa
fisubl
add
inc
mov
mov
mov
add
mov
scas
movsl
into
and
in
subl
mov
adc
mov
movsl
hlt
cmp
ljmp
mov
jle
add
mov
es
in
cmpsb
mov
popf
cmp
test
repz
fwait
lea
sti
add
xchg
push
xchg
add
sub
dec
lds
cmp
mov
popf
add
add
mov
sbb
add
insl
cmc
cli
out
stos
ja
je
fildl
out
mov
aad
add
fidivrs
lahf
incl
js
popf
inc
adc
mov
sub
mov
and
out
mov
je
mov
ja
movsl
jp
data16
in
outsb
mov
add
xchg
or
push
add
enter
add
add
add
sti
inc
xor
addr16
pop
mov
inc
stc
cltd
sub
imull
push
and
insl
cli
cmp
clc
inc
add
xchg
pop
outsb
pop
adc
test
add
negl
ja
filds
add
sub
add
or
and
jmp
jnp
inc
icebp
lods
in
mov
mov
fwait
cmp
mov
in
aas
adc
mov
mov
lods
mov
xor
stc
add
mov
mov
mov
xchg
sbb
and
adc
push
or
mov
mov
rorl
fs
xor
add
sub
pop
and
insb
cmc
mov
das
pushf
jp
arpl
loopne
mov
xchg
adc
mov
cmp
inc
outsl
push
push
xchg
sub
fcoml
mov
add
popl
pushf
push
sti
int3
dec
mov
mov
mov
add
mov
push
add
push
xchg
pusha
add
fwait
pop
mov
xor
sub
pop
int
mov
rolb
mov
xchg
add
in
xchg
add
mov
xchg
movq
cmp
xchg
call
aad
mov
mov
mov
mov
xchg
dec
movsl
sub
aam
xor
mov
and
add
das
xor
mov
sbb
fists
add
adc
sbb
jbe
es
pop
pop
cld
push
mov
mov
sub
insb
test
inc
fwait
stc
scas
mov
lds
add
and
mov
add
add
daa
mov
sbb
ss
std
js
dec
lcall
test
mov
mov
sbb
and
aad
and
mov
movsb
lret
out
push
dec
jo
mov
add
xchg
out
scas
out
xchg
add
sub
in
insb
pop
sbb
inc
fcomps
into
cmp
sbb
call
sub
enter
mov
mov
mov
mov
addb
or
stos
cld
addb
cmp
mov
add
jae
inc
bts
data16
sbb
fucomip
loope
rolb
mov
add
add
inc
lods
push
add
cld
jmp
test
xchg
cmp
xlat
loope
mov
imul
les
lahf
mov
sbb
sbbl
stc
mov
add
mov
cltd
xchg
add
cli
xchg
add
ljmp
lds
mov
add
add
mov
mov
add
fnstsw
add
out
mov
adc
das
aad
mov
jmp
out
add
xchg
out
arpl
add
add
lods
fcoms
dec
inc
push
add
inc
push
sub
xlat
lods
inc
add
pushf
int3
mov
xor
in
imul
in
rolb
mov
imul
mov
stc
lahf
mov
pop
pop
ret
dec
or
push
jmp
filds
inc
add
mov
add
inc
mov
add
es
int3
lea
mov
out
add
xor
pop
pop
pop
in
cs
add
rolb
xchg
pop
and
push
dec
dec
or
int3
push
mov
fmuls
nop
add
test
int
subl
add
xor
shll
jno
mov
push
add
add
mov
pop
adc
inc
push
cmp
lahf
cwtl
fdivl
roll
insb
out
jns
pop
or
cmp
outsb
rolb
cmpsb
adc
mov
jae
into
shl
lcall
jle
addl
inc
add
mov
push
add
mov
jb
mov
add
mov
pop
cmc
pop
cmp
xor
sbb
ja
adc
sub
aaa
mov
xchg
rolb
push
es
add
dec
dec
cld
pop
imul
mov
xor
mov
sbb
lret
jp
test
add
pushf
inc
jecxz
add
xchg
xchg
jae
add
mov
sti
and
mov
and
xchg
cmp
stos
lea
mov
into
xlat
pop
cmp
sub
sbb
or
mov
add
lcall
aas
dec
xchg
sarl
sub
adc
ficomps
inc
call
loope
jle
add
add
aaa
leave
mov
fwait
outsl
aad
add
ret
into
or
fs
xchg
cmp
and
push
ss
xor
pop
je
into
incl
stos
mov
inc
dec
and
mov
and
std
and
add
push
addb
cwtl
sub
mov
add
sbb
mov
add
icebp
inc
xchg
push
adc
mov
addb
mov
rolb
mov
mov
mov
in
add
stc
and
imul
dec
xor
mov
mov
pop
call
mov
xor
and
sub
dec
dec
or
xchg
push
inc
mov
mov
aam
fldcw
insb
in
jl
push
pause
add
push
insb
ret
addb
int3
xor
adcl
mov
repz
mov
mov
jge
mov
cmp
sbb
xchg
and
and
sub
add
mov
fisubrs
fs
lea
mov
jecxz
rolb
push
stc
sarl
add
mov
bound
mov
das
xor
mov
and
mov
add
cmpsl
repz
xor
sub
mov
out
cld
push
push
sub
in
repnz
adc
adc
mov
add
imul
add
sub
add
sub
mov
out
sub
push
add
fistpll
push
mov
repnz
push
add
mov
ljmp
call
cli
popf
cwtl
clc
lea
rorl
push
add
das
and
mov
cmc
dec
sbb
add
stos
sbb
add
add
cli
out
push
add
add
mov
sub
into
mov
and
inc
out
jnp
push
test
add
in
jb
mov
aas
pop
ret
lods
dec
dec
fwait
xchg
mov
add
mov
add
pop
pop
pop
cli
pop
and
sub
addb
hlt
cmp
pshufw
dec
inc
sub
inc
add
sbb
leave
mov
xchg
add
pop
jmp
les
bound
mov
add
dec
mov
jb
mov
push
add
scas
lods
xor
mov
inc
add
xor
sub
add
xlat
fildll
in
sahf
dec
lock
sub
mov
pop
lcall
mov
sbb
lods
dec
pop
cmp
insl
call
add
add
sub
add
lahf
lret
jnp
insb
lods
mov
fdivrl
test
inc
test
hlt
rcl
setns
xor
mov
icebp
fildll
int3
in
add
stos
fistl
popf
push
add
inc
pop
pushf
repz
iret
mull
push
dec
mov
inc
add
fs
and
mov
cmpl
aaa
test
int3
adcl
cmpsl
and
mov
cmpsb
ja
cltd
outsb
lods
test
mov
inc
add
sub
addr16
mov
in
in
pop
lahf
addr16
lods
repnz
add
push
add
mov
sbb
das
jno
push
mov
mov
mov
cltd
enter
push
cmp
pop
xchg
fsubl
repz
inc
add
mov
xchg
fistl
mov
rolb
mov
cmp
xor
cmp
sbb
add
ja
sub
cmp
add
imul
jmp
add
cs
jg
loop
mov
sahf
fisubs
in
cwtl
in
test
cli
incl
mov
sub
inc
mov
push
mov
pop
adc
mov
mov
sub
subl
out
add
add
insl
icebp
jp
pop
out
stos
leave
mov
sarl
add
adc
mov
add
and
test
pop
jno
add
pop
mov
mov
push
je
mov
jge
popf
xchg
xchg
add
ja
xchg
int
stc
xchg
outsl
xchg
mov
arpl
add
repnz
mov
add
aaa
push
cmp
loope
sahf
jg
test
sbb
lea
sbb
sbb
adc
mov
mov
mov
mov
push
in
inc
push
add
pop
push
xor
mov
sub
or
mov
mov
pop
mov
push
sbb
ret
jnp
pusha
add
cmp
int
push
addl
jne
cmp
mov
iret
sub
sbb
jle
xchg
ret
jbe
inc
add
xlat
repz
mov
add
inc
add
jle
testb
mov
mov
clc
adc
and
lea
jg
mov
and
rcrl
sbb
leave
int3
and
or
mov
aad
push
dec
or
mov
mov
xchg
mov
loope
push
imul
les
add
xchg
xchg
jge
mov
lcall
bound
mov
pop
ret
add
mov
jae
test
cmp
scas
cmp
fdivr
rolb
mov
xchg
aad
dec
js
add
push
popa
fld
pop
dec
and
mov
mov
lcall
faddl
mov
or
sub
jnp
add
sub
mov
jg
mov
mov
decl
out
loope
and
mov
ret
inc
pop
xlat
sar
loope
lahf
mov
in
jp
cmp
inc
add
add
add
pop
inc
in
imul
adc
jl
add
mov
mov
mov
sub
cmp
out
popa
clc
stc
pop
outsb
dec
dec
sbb
add
cs
adc
add
pusha
add
add
lods
xchg
push
jbe
mov
cmp
or
dec
stos
rolb
mov
inc
add
pusha
add
mov
imul
add
imul
jmp
mov
sbb
jmp
or
pop
mov
mov
cld
push
sti
insb
rolb
mov
negl
clc
inc
xchg
push
add
jp
lahf
pop
scas
movsb
aam
in
imul
jae
cmpsb
pop
mov
in
gs
jl
push
cld
cmpsb
lds
int3
sub
add
stos
lret
push
jbe
ficoml
mov
cs
mov
jp
es
mov
loop
mov
int
add
je
lcall
add
add
mov
inc
add
stos
bound
mov
fsubrl
movl
loope
add
add
loopne
mov
stos
pop
dec
pop
scas
movl
addr16
mov
xchg
add
xchg
lods
xchg
stc
inc
add
in
or
push
loope
xchg
adc
push
adc
mov
imul
xchg
out
jg
inc
pop
fs
fst
pop
cmp
jb
mov
sub
add
add
jnp
stos
inc
jnp
fiaddl
mov
mov
mov
ja
ret
fwait
pop
xchg
mov
cli
data16
mov
dec
or
and
or
add
push
cmpsb
mov
jne
in
enter
sub
lea
cmp
inc
add
popf
les
add
mov
mov
add
outsb
test
push
sub
push
mov
daa
mov
push
xor
ret
cmp
decb
inc
lcall
repnz
push
add
add
sub
test
fisttpl
pop
or
arpl
inc
add
xor
mov
add
jg
outsb
sbb
fldcw
mull
mov
hlt
jb
mov
pop
mov
or
add
mov
or
mov
icebp
outsl
adc
jmp
jo
mov
fs
and
add
pop
push
xor
loop
mov
add
cmp
inc
outsb
ja
pop
dec
out
insb
shr
pop
popa
or
lret
or
lea
add
leave
and
and
add
inc
push
jle
jnp
and
add
repnz
fldcw
test
es
out
xchg
or
cmc
shrl
push
cmc
inc
add
fldcw
mov
mov
add
add
mov
cltd
dec
inc
add
add
popl
xor
arpl
inc
fldenv
add
inc
jns
fwait
mov
jle,pn
in
test
mov
ret
mov
jae
pop
stos
adc
pop
and
sub
dec
inc
mov
mov
fisubrl
add
sti
stos
scas
push
into
dec
into
pop
les
hlt
out
push
fsts
mov
mov
mov
or
adc
mov
add
add
mov
mov
add
sbb
add
mul
pop
je
or
inc
push
push
lret
push
repnz
add
cli
mov
insl
pop
mov
rolb
mov
inc
jecxz
scas
loop
mov
mov
mov
aam
jecxz
insl
cmp
mov
je
mov
jno
add
je
mov
add
or
jg
imul
scas
std
inc
add
dec
cmp
add
jo
mov
xchg
fnstsw
mov
sbb
mov
daa
addb
mov
xchg
mov
repz
int
jo
mov
cmp
mov
push
mov
mov
lock
les
add
les
jb
mov
inc
mov
and
mov
mov
add
add
ficomps
adc
mov
mov
push
xor
cld
sub
add
mov
ja
add
ljmp
insl
xlat
cmp
add
mov
mov
cli
mov
sbb
mov
cmp
iret
repz
pusha
add
or
popa
or
mov
push
push
sbb
les
fwait
cmp
add
cmp
ds
fs
lods
outsb
xchg
int3
pop
and
mov
pop
mov
cmp
mov
repnz
aaa
mov
and
fnstsw
icebp
cld
mov
jbe
sahf
arpl
mov
add
mov
mov
push
add
add
xor
mov
es
mov
pop
xchg
cmp
cmpsl
call
addl
jg
popa
cwtl
pop
fsub
jae
jl
adc
mov
ds
sub
mov
mov
stos
insb
test
addb
inc
mov
add
push
stos
nop
add
out
pop
mov
mov
addb
dec
sub
mov
or
add
xor
push
stos
out
add
sub
add
add
fmulp
enter
fildl
in
lret
sub
in
out
add
mov
scas
and
mov
mov
add
stos
xchg
cld
sbb
mov
insl
and
sub
or
mov
mov
jno
add
jp
cmp
add
in
jae
cmp
mov
or
cmpsb
adc
mov
call
add
mov
jb
mov
repnz
int3
jp
sti
popa
sbb
sbb
inc
arpl
rolb
add
mov
test
lods
popa
stos
scas
out
push
jle
add
negl
mov
inc
add
mov
daa
roll
stc
scas
pop
push
rolb
mov
inc
cmp
cli
jg
jge
add
add
add
loopne
mov
adc
and
mov
jnp
arpl
cmp
add
mov
add
and
adc
mov
rolb
mov
add
mov
pop
pop
jge
scas
outsl
mov
push
mov
add
xor
add
xor
mov
mov
cmp
push
dec
in
mov
add
add
mov
add
shl
jl
jp
xlat
xabort
arpl
add
add
imul
jle
inc
add
pop
adc
mov
add
loop,pn
mov
stos
push
xchg
cmc
outsb
pop
adc
mov
or
or
add
mov
inc
out
pushf
xchg
movsb
sbb
mov
fdivrl
imul
addb
cld
push
add
add
mov
adc
add
add
or
cmc
add
mull
xorl
test
jp
push
rcr
outsb
mov
sbb
mov
dec
xchg
xor
pop
xchg
js
imul
cmp
sbb
loop
mov
jbe
popa
xchg
xor
push
inc
add
add
out
pop
sub
xchg
clc
sub
adc
add
sahf
movsl
rcr
ficoms
mov
add
out
in
push
outsb
sub
pop
or
sub
js
mov
inc
pop
stc
adc
pop
mov
cmp
adc
mov
add
and
repnz
fldenv
add
add
mov
dec
mov
add
mov
push
movsl
sub
add
add
xor
or
mov
cmp
add
dec
pop
mov
add
stos
hlt
pop
scas
sub
nopl
adc
jmp
rolb
mov
fwait
pop
or
imul
dec
call
mov
jne
xchg
xchg
rolb
mov
add
cltd
inc
pop
jno
scas
lahf
stos
sub
imul
pop
js
adc
mov
mov
cld
push
daa
imul
or
add
sub
push
jae
cmpsb
addb
mov
dec
clc
jg
icebp
clc
icebp
pop
xchg
incb
sub
sti
repnz
inc
mov
cmp
jp
mov
and
and
jg
push
ret
shll
icebp
xchg
mov
and
mov
mov
jno
pusha
add
rcrl
popf
rorl
pop
or
mov
mov
mov
add
mov
push
loopne
mov
add
packssdw
sub
sbb
dec
mov
enter
pop
pusha
add
loop
mov
xchg
fcmovnu
xor
mov
scas
pop
mov
mov
mov
pop
stos
mov
and
add
mov
push
add
cmp
sbb
inc
stos
cltd
dec
sub
mov
pushf
stos
adc
pop
dec
lock
ljmp
and
mov
in
xor
mov
aad
arpl
add
jns
adc
inc
cmpsb
outsl
sbb
push
or
mov
mov
mov
mov
mov
dec
loop
mov
or
stc
ficompl
xchg
sahf
push
dec
xor
aad
add
cmp
xchg
repz
push
cmp
xchg
add
add
mov
add
jno
mov
adc
add
aas
or
sbb
add
pop
pop
out
fdivs
xor
and
mov
jp
mov
or
lret
std
sti
xchg
jae
imulb
and
pop
cld
add
movsb
dec
fmuls
add
lock
hlt
insb
mov
sbb
mov
ljmp
xor
fcomp
push
mov
sub
mov
dec
gs
add
mov
aas
sub
mov
add
mov
add
add
mov
adc
mov
add
jp
call
push
dec
push
push
bound
mov
ljmp
cli
mov
mov
inc
add
push
and
mov
fimuls
cmp
inc
mov
clc
rolb
mov
hlt
out
push
add
fwait
cwtl
data16
addb
mov
add
pop
cmpsl
and
pop
ljmp
add
jae
sbb
jo
mov
add
notb
cmp
mov
test
add
add
dec
repnz
mov
xor
adc
mov
fmuls
xor
mov
add
insb
dec
or
sbbl
pop
imul
mov
add
mov
ss
sahf
incb
loopne
mov
lea
jne
adc
mov
mov
xchg
out
xchg
inc
jne
test
mov
jb
mov
stc
push
mov
add
push
rorl
stc
jnp
pop
pop
dec
xchg
shrl
mov
add
mov
and
pop
jecxz
push
roll
mov
pop
clc
in
fld
enter
push
mov
lcall
lret
cmpsb
dec
dec
or
mov
ljmp
lock
je
inc
out
add
xchg
mov
imul
scas
jp
in
inc
jnp
push
rcl
outsb
push
mov
xchg
jp
inc
add
xor
aam
sub
sahf
mov
push
add
stos
adc
ljmp
dec
negl
adc
pop
push
mov
test
jle
xor
add
add
mov
aad
add
mov
dec
pop
adc
mov
nop
add
add
mov
mov
add
mov
roll
jge
mov
adc
dec
push
in
test
mov
or
pop
jmp
add
push
int3
ja
xchg
fdivl
pop
and
mov
mov
cli
cmp
arpl
fcmovu
pop
push
loopne
mov
and
sbb
ffreep
add
aaa
inc
popa
in
sub
adc
int3
mov
jp
add
lods
pushf
jne
push
add
pop
mov
push
and
add
scas
pop
imulb
jbe
cltd
jne
xchg
or
add
cmp
xor
add
pop
pop
fbld
loop
mov
fs
add
add
push
jle
add
test
lahf
push
cld
jno
lahf
loop
mov
add
jns
pop
mov
jmp
add
mov
jp
add
mov
xchg
mov
add
mov
or
fucom
call
mov
mov
mov
sub
pop
gs
add
xchg
xchg
pop
test
mov
pop
test
das
mov
rolb
test
push
xchg
insb
jae
insl
pop
mov
pop
jno
fidivrl
call
or
add
popl
add
jle
lods
and
add
push
push
lret
xlat
cwtl
test
addb
lcall
mov
push
push
lods
xchg
sub
das
jl
mov
stc
jb
mov
adc
loope
mov
mov
lcall
movb
ja
fimuls
pushf
pop
and
mov
jl
clc
nop
add
xchg
fsubs
and
add
adc
mov
xor
lahf
pop
movsb
xchg
sti
movsl
out
shll
xchg
mov
insl
sub
push
mov
add
mov
mov
dec
dec
inc
dec
mov
mov
xadd
jl
and
repz
xchg
dec
arpl
mov
mov
sbb
mov
mov
outsb
lock
mov
nop
add
sbb
add
mov
sub
and
insl
ret
lret
nop
add
and
adc
mov
push
out
sub
sub
cmp
add
call
cltd
xor
insl
fwait
lods
inc
add
add
scas
push
add
lahf
adc
xchg
mov
add
ficompl
popl
jle
addb
adc
mov
mov
into
clc
lods
sbb
das
mov
dec
push
dec
in
push
push
inc
pop
adc
mov
jge
dec
mov
and
mov
and
mov
sbb
add
add
sub
adc
inc
out
mov
jne
add
push
add
add
lds
mov
add
xor
xor
mov
in
outsl
cmp
pop
iret
fistpl
jg
or
or
push
xor
mov
inc
fidivrs
incl
mov
sub
add
pop
negl
into
cmp
mov
cmp
popa
sbb
xchg
add
mov
sahf
lock
lods
xor
mov
mov
stc
jmp
insb
out
ja
and
add
mov
idiv
pop
loope
idiv
xchg
repz
or
rolb
mov
repnz
jns
rcrl
add
movsb
sub
scas
in
mov
mov
movsl
xchg
rcl
bound
mov
add
ja
cmpsl
ficoms
sahf
and
mov
mov
mov
imul
add
jg
sti
push
mov
outsb
mov
mov
mov
or
sbb
int
inc
add
inc
popf
sub
loop
mov
add
jl
xchg
pop
pop
shll
mov
pop
push
es
cmp
or
dec
mov
add
mov
mov
add
dec
repnz
into
adc
arpl
mov
bswap
xchg
or
xor
lahf
mov
in
lds
inc
sar
enter
popw
jns
into
pop
push
rolb
add
sbb
pop
add
mov
stc
adc
aad
adc
push
lahf
jecxz
and
mov
jmp
out
push
add
je
inc
sbb
cmp
and
xor
jns
and
inc
add
repz
cmpsl
addl
rolb
mov
and
dec
jecxz
fistpl
xor
sbb
mov
movsl
jbe
add
lods
sub
aam
aad
addr16
sbb
into
cmp
adc
mov
gs
aad
dec
xor
mov
mov
mov
fs
or
daa
cmp
pop
loope
stc
inc
std
and
adc
mov
adc
clc
mov
stos
fwait
es
mov
cli
and
mov
xchg
rolb
mov
add
mov
lcall
add
jae
fidivrl
xchg
sahf
divl
push
test
fnstenv
xor
mov
lcall
push
shll
repz
or
loopne
mov
mov
cmc
ja
dec
icebp
rolb
sub
ret
push
push
adc
in
jne
ljmp
mov
add
sbb
pop
push
insl
js
cmp
cmpsl
imul
push
add
mov
test
leave
shl
cmp
pop
mov
cmp
adc
rolb
rolb
mov
and
out
cmc
fwait
icebp
arpl
adc
pop
dec
xchg
imul
mov
das
pop
xchg
popw
in
mov
mov
push
mov
mov
dec
sub
xchg
jae
lock
out
mov
js,pt
add
fdiv
fdivrs
dec
cmp
aaa
mov
out
pop
dec
scas
xlat
adc
mov
add
mov
ficoml
pop
mov
mov
push
or
cmp
xlat
in
in
call
mov
mov
and
mov
mov
adc
inc
mov
mov
call
out
push
insl
stc
ret
out
push
insb
sti
nop
add
add
or
addb
push
inc
add
bound
mov
enter
data16
shr
fwait
xlat
lods
outsb
jbe
mov
cli
jle
adc
mov
add
in
test
xor
jg
pop
fistps
popa
ljmp
xor
adc
loopne
mov
mov
add
jg
add
call
add
mov
pop
aas
out
sub
flds
rolb
xor
mov
jno
je
inc
add
mov
imul
lcall
fimull
inc
jle
into
jno
push
mov
mov
jle
or
fmul
or
in
inc
or
mov
add
xor
add
mov
inc
add
test
jp
repnz
pop
push
out
push
cmp
dec
cmp
mov
call
in
cmp
inc
add
push
icebp
adc
mov
adc
sub
add
add
mov
rolb
mov
jnp
add
in
xlat
stc
sahf
js
ss
loopne
mov
xchg
push
inc
subl
movsl
and
mov
mov
inc
pop
inc
roll
mov
movsb
addb
xlat
adc
lcall
add
mov
xor
imul
mov
sahf
imul
add
insb
mov
mov
jae
inc
cmp
into
xor
mov
popa
cmp
add
repnz
in
repz
adc
sbb
mov
cmp
mov
jae
mov
mov
cmpsl
rolb
mov
in
sar
shl
and
add
or
push
inc
mov
stos
mov
sub
push
pop
sbb
cli
inc
pusha
add
shll
into
fstps
xor
push
adc
mov
sub
in
add
std
push
add
xchg
add
jne
mov
jmp
test
push
mov
lret
add
mov
and
test
pop
dec
sub
add
pop
inc
popf
and
nop
add
add
mov
movsb
fwait
aam
pop
adc
popa
mov
add
in
mov
cli
les
call
fcoms
mov
add
mov
je
add
loope
mov
fadds
mov
mov
push
out
add
mov
aas
cmp
aad
mov
sahf
or
mov
mov
sub
pop
roll
mov
add
jl
xor
movaps
ret
clc
xchg
mov
mov
sub
test
rcrl
add
rorl
fldl
add
dec
pushf
repnz
mov
fisubrl
add
xchg
outsb
mov
cmp
sbb
fisubs
add
push
bound
mov
mov
addb
insb
aad
mov
sub
add
int3
rolb
outsl
jne
add
popf
sbb
xor
mov
adc
cmp
mov
adc
mov
mov
jne
push
mov
adc
add
or
jge
add
fdivrl
repz
jl
or
repnz
add
mov
je
sub
add
xorl
pop
ljmp
aaa
les
push
xor
mov
call
ljmp
fimuls
add
pop
cmp
rorl
cmc
inc
add
add
in
popa
cmp
gs
ret
pushf
jle
adc
mov
mov
and
mov
roll
mov
mov
sbb
in
ljmp
sbb
cmp
xor
cmp
jbe
int3
jb
mov
mov
fistl
test
add
add
sub
ss
add
push
rolb
mov
xchg
fs
add
add
scas
mov
sub
lods
jecxz
sbb
gs
sbb
cmp
push
push
hlt
stos
repz
ja
cmp
mov
mov
add
mov
mov
add
pop
test
mov
sub
add
mov
add
rcrl
ds
ss
in
and
mov
mov
xor
popa
popa
lds
daa
inc
cli
imul
addb
pushf
push
sub
cmp
js
mov
add
sub
push
add
add
dec
loop
mov
push
jg
je
mov
add
mov
add
cmp
xor
mov
push
pop
lods
inc
test
and
mov
inc
arpl
add
cld
insl
jle
add
dec
mov
out
adc
sar
xor
adc
pop
jecxz
xchg
add
cli
in
hlt
cmp
push
rolb
cbtw
adc
add
int3
lret
add
negl
or
psrld
mov
xor
fmull
push
push
jae
dec
lret
call
add
lock
outsl
gs
sub
add
rolb
mov
imul
js
jge
push
add
sbb
div
mov
pop
xlat
add
sbb
jp
fwait
rolb
mov
add
lea
mov
daa
in
fdivrl
add
jbe
xor
stos
scas
push
lahf
jle
pop
js
cbtw
lcall
mov
add
pop
or
in
ja
add
imul
inc
add
into
cmpl
rolb
mov
or
out
daa
addb
test
inc
rolb
mov
lods
mov
xor
in
lods
clc
popf
lods
leave
in
mov
enter
das
mov
add
pop
dec
jae
mov
fwait
mov
or
in
int3
rolb
mov
daa
cli
ret
outsl
sbb
lea
mov
imul
je
add
xchg
add
movsb
jns
addb
fisttpll
loop
mov
mov
or
push
sbb
push
lret
push
gs
cmpsb
enter
pop
sbb
or
call
mov
mov
sub
or
aaa
adc
or
outsb
pop
xchg
clc
das
jle
ds
mov
add
movsb
mov
pusha
add
cmp
mov
fsubrl
add
into
pusha
add
sub
dec
in
xor
sub
and
mov
fadds
sbb
sbb
add
mov
or
rcrl
inc
dec
mov
mov
out
aam
add
fwait
dec
cmpsb
mov
add
cmpsb
push
jl
mov
pop
jge
icebp
ret
push
add
jbe
lret
pop
cmp
push
inc
sarl
lret
in
lea
jp
add
mull
push
mov
add
mov
mov
mov
cmpsl
pop
mov
add
add
rolb
mov
add
add
xor
sub
push
or
add
loopne
mov
add
out
outsl
pop
std
stos
aaa
inc
mov
ret
aas
lret
cmp
loopne
mov
mov
mov
xchg
mov
pop
mov
addb
xor
fisubrl
and
mov
cmp
ds
add
inc
scas
or
cld
xor
mov
mov
add
pop
xchg
or
and
add
rcll
loopne
mov
push
pop
imul
scas
cld
fcoms
lods
outsl
test
dec
fsubr
test
pop
sub
jns
fstpt
pop
and
push
ds
popf
mov
rolb
fcmove
push
jns
lret
add
mov
add
add
rolb
mov
je
sbb
adc
mov
add
xor
flds
mov
mov
leave
cld
pop
or
mov
xchg
mov
mov
and
les
jb
mov
out
jmp
dec
or
lahf
xor
cmp
mov
scas
mov
mov
add
clc
adc
mov
popa
in
sbb
lcall
lock
clc
ss
cmp
add
mov
add
ret
dec
sbb
add
outsl
jl
add
cwtl
cmp
mov
mov
inc
push
add
lock
add
loope
cmp
cmp
sbb
add
mov
cs
or
jg
mov
pop
rolb
mov
lret
pop
pop
daa
xchg
add
add
xchg
jmp
xchg
daa
pop
stc
leave
pop
jno
leave
inc
jbe
je
loop
mov
mov
fnstenv
adc
mov
mov
ret
lret
lods
daa
jae
xchg
rolb
mov
addb
jb
mov
ror
aam
sub
jbe
in
cmpsl
inc
sub
xor
js
add
jae
mov
jl
push
sbb
inc
mov
mov
add
inc
push
or
jb
mov
xor
xor
mov
jne
aam
addb
adc
jg
add
les
cs
ds
popf
add
cmp
cltd
call
mov
std
mov
mov
xlat
es
dec
xor
aas
cmp
push
call
add
mov
outsl
inc
stos
xchg
or
aam
jl
bound
mov
add
hlt
pop
cltd
jbe
test
mov
mov
or
mov
leave
enter
dec
into
fs
mov
xor
sub
add
mov
mov
popf
pop
insl
rolb
mov
push
or
mov
add
add
sub
add
mov
add
test
cmp
aaa
sbb
xor
mov
mov
mov
enter
push
test
add
pusha
add
pop
or
mov
mov
add
adc
mov
add
lcall
ja
mov
xor
mov
fs
rolb
icebp
aam
pop
lcall
loope
mov
add
mov
dec
pusha
add
lahf
fcomp
iret
test
add
and
add
mov
add
out
in
fcompl
add
adc
mov
pop
shll
xor
inc
jmp
scas
addr16
add
add
and
imul
sbb
jbe
add
negl
mov
jp
or
add
loope
mov
in
mov
cltd
add
mov
into
jno
shl
mov
add
add
add
fsubs
dec
adc
mov
mov
add
aam
pop
mov
mov
pusha
add
loopne
mov
js
mov
adc
mov
mov
jb
mov
add
mov
xchg
mov
add
mov
jbe
xchg
test
sti
xor
add
mov
or
popl
xlat
mov
mov
mov
add
mov
mov
fdivl
mov
mov
test
and
mov
mov
sbb
imul
mov
aaa
inc
jl
addb
or
cmpsl
mov
and
mov
imul
add
add
test
popa
repnz
and
mov
cwtl
mov
dec
jns
fidivl
pop
inc
into
sbb
mov
jns
add
jnp
jb
mov
sbb
inc
jle
lea
mov
addb
jmp
in
sbb
mov
adc
addb
mov
fs
add
lods
push
in
fld
add
rolb
mov
es
mov
mov
push
push
sub
ret
mov
pop
into
inc
repz
add
mov
dec
adc
mov
add
inc
mov
add
je
dec
cmpsb
stos
scas
sbb
push
hlt
adc
mov
jp
xlat
loop
mov
xcrypt-cbc
cmpsl
xchg
lcall
adc
mov
dec
add
mov
fwait
testb
loope
mov
cli
cltd
jmp
add
push
mov
call
add
add
cmp
push
sub
daa
adc
addb
ret
inc
loop
mov
scas
std
inc
jmp
cmpsb
xchg
sti
fbstp
les
out
push
hlt
movsl
fdivr
hlt
int
lods
and
xchg
movsl
or
xor
or
pop
push
and
aad
negl
jae
xor
inc
add
push
mov
add
mov
xchg
push
pop
ss
repz
dec
sbb
cmpsl
cld
out
add
outsl
fwait
push
add
add
rolb
sbbl
mov
adc
mov
int
jg
add
cld
outsl
add
add
push
in
mov
mov
sub
xchg
mov
mov
add
adc
in
add
popa
sbb
jns
or
push
je
rolb
aaa
cmp
dec
fwait
push
inc
addr16
cmpsl
xchg
add
and
jg
repz
ljmp
add
pop
inc
outsl
loop
mov
add
imul
pop
mov
adc
lret
ljmp
fcmovnu
imul
inc
inc
add
push
addb
dec
xchg
stos
into
dec
imul
in
test
or
lock
jl
push
cmpsb
lock
movsl
xchg
add
cld
mov
add
or
dec
mov
mov
rolb
mov
faddl
lea
adc
lcall
popf
cmp
add
add
divb
adc
xchg
push
jg
xchg
inc
mov
mov
lods
hlt
fs
int3
dec
mov
add
arpl
mov
mov
pop
mov
in
incl
and
add
mov
mov
ljmp
inc
rolb
mov
add
mov
cmp
cmpsb
inc
add
stc
loopne
mov
add
pop
mov
push
cmp
lods
xor
mov
cld
cwtl
in
cmp
loope
bound
mov
aam
xor
mov
test
xchg
call
mov
push
loop
mov
adc
mov
lods
push
lcall
int
aam
sbb
sub
hlt
fucomip
ret
lds
add
xor
idivl
add
xchg
add
mov
ds
jg
inc
lret
imul
into
dec
fsubrl
fistpll
dec
push
dec
icebp
rolb
mov
lahf
pop
lds
pop
mov
sti
mov
testb
fcmovnbe
sub
sub
inc
jns
jns
adc
mov
adc
mov
mov
add
mov
cmc
adc
push
repz
add
pop
out
scas
push
into
inc
pop
pop
sarl
cmp
add
lods
jle
dec
icebp
das
sbb
insb
jo
mov
fcompl
add
sub
cmpsb
fdivp
adc
push
and
mov
push
fistl
mov
mov
sub
mov
add
mov
mov
cmp
add
jp
add
ds
fwait
fwait
inc
jl
fs
ffreep
jne
inc
sub
aas
and
mov
cli
inc
push
add
sub
inc
push
outsl
adc
add
rcrl
jl
cmpl
mov
cmp
insl
mov
hlt
out
add
mov
add
push
adc
add
mov
mov
int3
jb
mov
cs
mov
add
push
xor
push
xor
mov
shl
ficomps
sub
lods
arpl
fld
add
push
call
add
pushf
xchg
shl
mov
add
cmpsl
imul
jnp
sti
test
add
dec
dec
addb
mov
mov
mov
pusha
add
outsl
loop
mov
jg
jo
mov
pushf
and
mov
rolb
mov
pop
cmp
add
add
pop
pushf
dec
ja
adc
mov
push
mov
mov
cmp
add
bound
mov
pushf
xor
mov
push
out
jae
jg
nop
add
call
ds
adc
mov
mov
add
les
xchg
cltd
xor
mov
loopne
mov
fisubrl
and
into
je
cmpsl
aad
in
push
add
xchg
add
aas
push
add
mov
sub
mov
cld
mov
mov
loop
mov
push
add
add
add
lock
mov
mov
lds
and
mov
fdivrs
fists
add
add
fcoms
dec
divl
inc
add
roll
add
mov
mov
push
fs
xchg
popf
xchg
out
push
ffree
ljmp
mov
fildll
jnp
jns
loop
mov
ja
rolb
imul
add
lock
jp
mov
loopne
mov
inc
lret
loopne
mov
add
push
xchg
lret
adc
add
es
xchg
cltd
adc
mov
addr16
insl
sub
es
add
adc
mov
and
lock
sbb
std
iret
mov
dec
je
lcall
mov
inc
add
mov
repnz
outsb
xchg
push
leave
inc
add
testl
mov
add
test
pop
mov
icebp
push
mov
add
mov
daa
aam
sbb
dec
ds
mov
add
inc
add
mov
insl
push
lret
in
daa
jge
inc
lds
adc
mov
or
test
ds
mov
test
mov
add
mov
aas
push
in
and
rolb
mov
add
loop
mov
sub
or
ljmp
add
mov
add
ret
pop
adc
mov
addb
call
ret
push
fcmovnb
add
ss
add
add
mov
out
sbb
jns
lods
shrl
addl
add
jno
cmpsb
pop
loopne
mov
ljmp
clc
repnz
pop
inc
add
or
aaa
test
adc
mov
ret
lods
out
in
test
leave
jmp
test
mov
and
dec
inc
das
xor
cmp
sbb
xor
call
stc
jg
addb
add
mov
mov
jae
fildl
jne
jmp
std
or
enter
mov
pop
icebp
mov
sbb
xchg
fdivrs
mov
int
add
pop
push
cmovge
or
scas
lret
mov
fisubrs
mov
or
ljmp
xchg
mov
scas
scas
and
out
xor
aam
dec
cmp
add
add
and
mov
rolb
lock
mov
lret
lock
add
into
lret
add
xchg
js
add
dec
negl
add
sub
lret
xchg
ss
mov
int3
xor
rcrl
dec
sbb
mov
mov
add
iret
das
add
mov
add
add
mov
lods
cli
push
addb
roll
sub
in
push
rolb
dec
cmp
adc
mov
sub
or
cmp
or
mov
inc
clc
sbb
sub
mov
mov
mov
addb
ffreep
push
stc
push
ja
add
inc
mov
out
cmp
add
repz
fwait
test
lret
cmpsb
hlt
mov
add
mov
mov
in
cltd
aas
iret
aaa
das
cmc
enter
and
mov
lock
out
outsl
mov
pop
std
and
xchg
pushf
out
jbe
and
mov
cmp
lahf
xchg
xor
mov
mov
in
and
cmp
push
jnp
add
sub
cltd
cmc
dec
push
into
dec
clc
fdivrs
in
push
add
mov
rcl
add
repz
movups
add
inc
add
add
add
out
sub
scas
sub
mov
test
xor
aam
add
mov
jle
push
mov
ret
or
rolb
pop
dec
fstps
mov
lret
xor
iret
mov
mov
mov
add
addb
test
test
add
pop
outsl
addb
ds
pop
aad
jnp
and
mov
xchg
sahf
loope
cmp
mov
add
mov
leave
ret
or
and
icebp
sbb
in
mov
mov
mov
iret
push
add
movsl
cmpsl
add
add
add
add
es
fucom
xchg
icebp
push
add
or
pusha
add
add
mov
lahf
mov
cli
pop
mov
gs
cs
jp
dec
add
add
adc
mov
or
lret
mov
cmp
mov
fcomps
sbb
arpl
cmp
jno
pop
icebp
mov
add
mov
cli
stos
adc
dec
or
cmp
add
jp
add
add
and
insl
es
sbb
mov
pop
imul
xor
cmp
out
movnti
xor
mov
adc
mov
jecxz
pop
xchg
adc
mov
into
jns
add
push
loopne
mov
bound
mov
test
dec
jle
adc
xchg
add
addr16
rolb
mov
mov
pop
mov
cmp
jl
insb
pop
loope
imul
clc
xlat
pop
nop
add
adc
jae
push
out
inc
cmpsl
in
mov
push
jno
mov
fsubrs
mov
adc
nop
add
insl
dec
and
cltd
mov
mov
sar
inc
add
movups
mov
testl
add
xor
mov
dec
lds
add
xchg
xchg
xchg
andl
adc
pop
rcll
mov
mov
add
in
push
xchg
stos
jns
push
fwait
insb
and
fdivrl
add
sbb
add
popf
inc
add
les
clc
loopne
mov
add
aam
pop
test
insl
popf
xor
nop
add
sbb
xchg
jmp
mov
inc
add
lcall
dec
mov
add
push
test
mov
add
add
cmp
std
rolb
mov
mov
mov
cld
pusha
add
sub
movsl
popf
sbb
mov
add
ds
mov
mov
repnz
or
xchg
test
mov
adc
mov
int3
movsb
pop
or
add
test
jge
fcmovnu
aas
cwtl
push
inc
add
fstpt
push
jmp
mov
dec
aaa
sub
test
mov
mov
jl
xor
mov
xor
sub
dec
dec
int3
xchg
stos
addb
push
add
jns
pop
adc
mov
adc
mov
push
stos
lock
outsb
mov
or
inc
mov
jnp
loope
push
add
jmp
add
mov
xor
or
pop
jo
mov
cmp
push
xor
mov
add
lds
bound
mov
push
ds
dec
hlt
test
int
add
mov
and
add
xor
jmp
jl
add
push
lret
inc
add
xor
mov
aad
jge
mov
out
ret
loop
mov
xorl
add
insl
push
fwait
mov
fcoml
imul
mov
mov
mov
add
pop
pop
mov
int3
repz
nop
add
pop
pushf
add
mov
xchg
imul
stc
in
aaa
adc
mov
addb
and
mov
nop
add
nop
add
add
leave
cs
in
xchg
nop
add
push
pop
ja
add
add
add
pop
roll
mov
popf
and
mov
inc
add
mov
mov
imul
add
xlat
out
pop
mov
call
mov
and
mov
int3
jge
mov
dec
ja
mov
pop
out
aam
lods
mov
sub
lret
sub
clc
cmp
fs
inc
sbb
addb
sbb
mov
dec
outsl
sub
outsl
dec
pop
mov
popf
sbb
add
add
mov
pop
add
mov
inc
jb
mov
cmp
jbe
xchg
push
daa
ljmp
xor
xchg
addb
aaa
lods
inc
outsb
xor
rolb
xchg
mov
mov
mov
mov
les
imul
fcoml
push
xor
mov
in
imul
add
lock
sub
loop
mov
mov
mov
inc
in
call
ret
push
xchg
add
mov
jo
mov
fs
jecxz
pop
pop
scas
aam
scas
cmc
sub
daa
int3
sar
out
add
pop
into
xor
mov
mov
je
xor
repz
lcall
movsl
sbb
add
cwtl
xchg
rolb
mov
imulb
pusha
add
add
mov
mov
or
add
imul
das
jns
add
add
push
add
add
add
out
sahf
add
add
inc
and
mov
hlt
outsl
ljmp
lock
jge
push
pop
nopl
adc
jb
mov
movsl
xor
add
add
mov
test
bound
mov
xchg
add
mov
cs
fdivrs
jns
sahf
sti
mov
jns
cld
xchg
push
cmpsl
add
mov
xor
xor
add
mov
rolb
mov
mov
add
mov
imul
adc
mov
mov
mov
lods
add
mov
jbe
and
mov
sub
dec
push
scas
inc
add
jnp
xchg
push
add
mov
cmc
and
mov
or
aaa
mov
mov
lcall
fmull
mov
shll
xor
push
and
mov
pop
fsubs
add
xor
mov
cs
or
sti
pop
cmp
add
add
push
sahf
mov
in
cmpsl
movsb
nop
add
mov
iret
sub
add
addb
in
aas
insb
cmp
cs
push
add
je
pop
push
or
repnz
arpl
push
jne
jle
add
add
leave
insl
out
rolb
insl
imul
ffree
add
stc
pop
rolb
push
cld
inc
shll
xor
mov
add
sbb
mov
int3
addr16
outsl
mov
push
ds
add
and
fwait
jge
ret
push
sub
imull
sub
enter
pop
adc
aaa
mov
mov
insl
pop
mov
add
fistl
ss
add
arpl
add
mov
mov
add
loopne
mov
mov
mov
clc
dec
lock
add
sub
and
dec
xchg
pop
xor
xchg
sub
jl
call
ljmp
add
jae
ds
test
mov
mov
stos
jne
xchg
and
cltd
rolb
mov
add
lcall
mov
cmp
jno
cmp
sbb
ret
pop
data16
mov
stc
lock
fdivr
push
inc
fldt
bound
mov
ljmp
mov
popf
data16
mov
insl
inc
add
lahf
mov
aas
mov
mov
xor
mov
jge
add
push
add
jnp
iret
pop
lahf
adc
mov
xor
lcall
outsb
pop
bound
mov
push
add
stc
add
outsb
adc
lret
xchg
add
cs
jg
inc
decl
cmpsb
les
pop
push
mov
std
call
sbb
sbb
mov
xchg
movsl
jmp
adc
leave
xor
mov
add
clc
xchg
stos
and
push
add
stos
mov
mov
cld
fiadds
rolb
mov
push
jno
mov
scas
js
or
out
dec
and
dec
inc
hlt
mov
in
mov
into
imul
adc
into
and
mov
gs
out
pop
mov
add
add
jle
jae
add
mov
mov
mov
sub
add
mov
les
pusha
add
daa
stos
pop
lcall
js
pop
aaa
nop
add
mov
add
push
pop
outsb
cmp
decb
insl
dec
sub
fs
jecxz
add
or
or
hlt
jl
stos
dec
adc
mov
pop
inc
lods
push
mov
sbb
test
add
test
jp
and
mov
gs
mov
adc
mov
icebp
fdivl
dec
mov
xor
addb
repnz
movl
aas
out
addb
repnz
imul
roll
test
fstpt
lret
stos
sub
or
in
jge
enter
mov
add
dec
cltd
and
movsl
stc
mov
mov
or
add
gs
add
adc
mov
mov
inc
add
add
push
add
movsb
and
or
rolb
mov
in
push
pop
push
fwait
imul
sub
add
jb
mov
add
jne
lods
jl
pop
or
in
jge
loopne
mov
add
loop
mov
mov
mov
mov
out
fldcw
insb
pop
divb
adc
mov
repnz
dec
cmc
mov
icebp
add
mov
mov
dec
mov
xchg
jmp
out
mov
mov
aas
mov
mov
sbb
xor
addb
rolb
mov
js
push
xor
mov
mov
imul
mov
fsubrl
add
mov
fnsave
add
outsl
lret
enter
mov
pop
sbb
dec
sub
mov
test
xchg
call
cmp
sub
cmpsl
pusha
add
xchg
fiadds
adcl
pop
mov
add
or
add
xor
cs
clc
repz
adc
xor
mov
cli
xchg
cmp
hlt
fwait
pop
mov
cmp
mov
nop
add
mov
fucom
pop
in
sub
sub
add
test
and
mov
jl
cmpsb
sbb
add
dec
mov
mov
adc
sub
mov
mov
insb
notl
add
xor
sub
or
push
add
xor
add
mov
xchg
aad
ret
sub
movsb
repz
movsl
jbe
xchg
jecxz
mov
cmp
xchg
je
jno
add
inc
cmp
test
adc
mov
push
cmp
xor
and
add
mov
ss
sbb
mov
push
stc
mov
xchg
sub
mov
gs
js
test
iret
sahf
das
and
mov
push
shll
loopne
mov
data16
sub
je
aam
lods
jno
push
or
cmp
jge
add
lcall
xchg
fcomps
xor
mov
dec
ljmp
jmp
gs
dec
ja
hlt
dec
dec
jl
scas
mov
jg
rolb
mov
push
mov
rcll
or
movsl
iret
xor
inc
mov
jno
add
lahf
mov
jmp
gs
mov
add
mov
push
pop
sub
mov
add
sti
fsubrs
or
add
pusha
add
xchg
test
sti
js
push
clc
and
jns
add
mov
inc
popa
fidivrl
and
lock
add
jp
fldcw
mov
inc
mov
xor
push
repnz
and
add
sub
les
mov
xchg
adc
sub
loop
mov
lcall
pushf
addb
lea
and
mov
decl
sahf
xchg
mov
mov
lret
inc
add
ss
js
add
sbb
xchg
mov
push
add
xor
fmuls
add
add
lret
out
rolb
mov
lods
lahf
das
pushf
enter
add
pop
test
or
jle
sub
mov
add
mov
and
xchg
cmpsl
cmp
add
sahf
aad
xor
ret
popf
and
mov
add
and
mov
mov
mov
in
jne
inc
add
cmp
adc
cmp
addb
rolb
gs
sahf
mov
mov
ja
les
add
or
add
mov
adc
popf
jns
cs
fld1
push
mov
jne
add
movsl
cmp
mov
scas
ds
xlat
ja
push
inc
sbb
jnp
dec
pop
dec
and
jne
inc
jae
jne
sbb
mov
or
add
aas
hlt
mov
xchg
dec
push
lock
in
cld
je
mov
mov
add
fdiv
add
gs
add
mov
add
adc
mov
dec
lods
mov
mov
daa
mov
cmp
push
and
inc
add
pop
rolb
mov
loop
mov
mov
add
add
imul
add
inc
lcall
mov
mov
add
aad
adc
mov
mov
push
clc
sub
stc
push
test
add
movsb
fbld
add
xor
add
inc
daa
adc
das
ficompl
fs
jb
mov
xchg
adc
jno
enter
dec
dec
pop
pop
or
inc
ds
test
add
movsb
out
pop
in
and
outsl
sbb
pop
jg
add
jbe
out
loopne
mov
nop
add
mov
inc
xchg
push
repnz
lret
cli
inc
add
mov
cli
cmpsl
sahf
inc
add
pop
and
mov
icebp
repnz
sti
jbe
jns
xchg
add
xor
aam
mov
mov
fsub
ffreep
add
mov
sbb
popf
cmp
or
add
pusha
add
push
hlt
sub
leave
cmp
clc
push
add
inc
add
bound
mov
stc
and
fstpl
jge
pop
out
or
cmp
imul
push
jno
pop
movsl
jo
mov
push
sti
test
add
add
mov
stos
int
add
mov
mov
test
mov
jns
push
inc
ja
xchg
lret
jecxz
pop
xchg
adc
arpl
mov
mov
adc
clc
bound
mov
cwtl
jbe
in
push
adc
push
pop
lret
sub
int
add
pop
or
stc
rolb
mov
sbb
cli
lods
insl
mov
sbb
add
mov
out
ret
and
mov
imul
add
in
push
jmp
mov
xchg
pusha
add
dec
lcall
xor
add
mov
add
xchg
mov
repnz
dec
inc
sbb
insl
sub
add
inc
ret
or
rcll
add
add
pusha
add
notl
ss
std
shrl
add
inc
add
or
out
mov
test
vmovhpd
dec
out
xlat
fs
add
mov
mov
insb
loope
into
leave
and
sub
xlat
jnp
mov
mov
call
add
les
adc
mov
inc
in
mov
add
add
out
jo
mov
xor
cltd
sub
mov
adc
call
mov
mov
add
ret
push
dec
sub
mov
add
adc
mov
outsb
mov
pushf
fidivl
jbe
fs
adc
aaa
mov
push
insl
fiadds
mov
sub
ljmp
add
xlat
pop
pop
cmp
pop
mov
adc
mov
ss
add
cmp
xchg
add
add
out
or
cmp
adc
mov
iret
aam
pushl
test
add
mov
add
adc
add
mov
into
inc
pop
push
aaa
lcall
iret
lea
mov
add
inc
push
xchg
push
add
mov
inc
push
push
scas
rolb
pop
fidivs
mov
mov
data16
sub
push
push
jae
xor
mov
lds
mov
mov
and
mov
mov
and
or
jae
xchg
add
add
jmp
pusha
add
cli
inc
add
mov
add
pop
leave
dec
call
pusha
add
ret
aad
insb
or
stos
fcomps
sbb
jnp
cli
cld
adc
add
lret
cmp
mov
cli
fucom
jmp
es
ss
or
imul
push
inc
sbb
shl
mov
push
pusha
add
push
mov
mov
js
insl
and
fwait
mov
test
mov
add
fwait
test
dec
lods
lock
pop
fmull
aas
mov
outsl
and
lock
punpckhwd
add
sbb
scas
push
pop
mov
mov
mov
add
scas
adc
xchg
pop
xchg
popa
pop
adc
cli
popl
jl
cmpsb
adc
dec
and
jne
mov
xchg
mov
inc
dec
aad
cmp
jnp
arpl
pop
out
les
adc
pushf
xchg
call
faddl
loope
ret
push
pop
enter
test
mov
mov
inc
ret
xor
mov
inc
cli
imul
int3
inc
loop
mov
dec
pop
dec
jl
cmp
jae
clc
sar
mov
lock
sti
sub
add
xchg
loope
xor
hlt
rcr
add
inc
add
cmpsl
rcll
jecxz
in
sub
cmpsl
int
cmc
stc
sub
jae
inc
jae
add
inc
add
aas
lahf
pop
stc
pop
outsl
in
jns
sbb
xchg
add
cmp
jmp
pop
fdivrs
push
pop
mov
dec
jno
int
mov
mov
xor
mov
add
push
popa
pop
dec
mov
loope
mov
call
add
mov
loopne
mov
sub
sbb
shll
add
rorl
mov
mov
data16
mov
xchg
test
add
mov
xchg
sbb
add
xor
mov
or
or
pop
xchg
ljmp
add
mov
pop
stos
in
pop
loope
test
into
cmp
in
adc
xchg
aad
inc
add
adc
popa
aam
cmp
adc
add
add
mov
out
enter
cltd
push
div
dec
lahf
xlat
fldcw
rolb
add
mov
mov
or
stos
stos
sahf
mov
add
addr16
xor
mov
lret
or
call
mov
mov
fs
enter
mov
es
imul
insb
dec
adc
mov
add
mov
lods
sbb
dec
jge
xor
mov
ja
mov
les
mov
pop
or
cmp
pop
fsubs
fimuls
pop
in
jmp
xchg
lret
stos
add
arpl
add
std
jmp
add
mov
dec
addr16
call
add
sahf
jecxz
add
loope
or
dec
xchg
add
mov
nop
add
jo
mov
push
out
outsb
rolb
mov
cmp
cld
adc
mov
push
add
add
cwtl
cmp
pushf
mov
test
outsl
xor
sub
lock
add
addb
rolb
mov
xor
mov
lcall
aaa
xchg
inc
add
cld
cld
in
es
repz
mov
mov
jne
int
sub
add
add
das
data16
xor
mov
mov
lds
repnz
loopne
mov
mov
stos
lret
stc
inc
sub
aam
clc
jle
mov
add
mov
pushf
fs
iret
movl
pop
mov
adc
mov
dec
sub
mov
mov
roll
sbbl
adc
xchg
gs
dec
es
pop
out
add
adc
add
aaa
mov
lds
mov
subl
xchg
inc
test
push
add
ja
ja
lods
lret
xor
mov
add
mov
sub
mov
cmp
add
mov
or
jp
cmc
xor
mov
adc
stos
jg
xchg
pop
push
jecxz
add
arpl
das
xchg
lcall
aaa
jbe
add
cltd
xor
xchg
loop
mov
ret
scas
cld
push
fsubs
add
add
mov
xchg
sarl
jo
mov
pop
sbb
push
pop
push
lods
adc
add
add
gs
fstps
adc
adc
sub
mov
fwait
sub
mov
lahf
popa
push
add
les
or
sub
xor
mov
roll
add
add
sub
mov
push
fidivs
mov
outsl
inc
mov
in
imull
enter
cmp
dec
sub
add
add
pop
cmpsb
loope
pusha
add
jno
je
pop
adc
or
or
mov
push
and
mov
add
test
mov
mov
leave
jg
fdivrs
lods
push
clc
aas
inc
add
adc
add
mov
stc
xchg
pop
mov
aad
add
mov
add
mov
and
add
mov
mov
mov
add
sar
jbe
cmp
mov
mov
add
clc
test
scas
push
add
xchg
mov
push
aam
xchg
cmp
add
icebp
dec
push
pop
rcrl
sbb
mov
insb
in
leave
mov
and
and
mov
jb
mov
mov
jne
add
sahf
hlt
mov
mov
xor
mov
dec
and
mov
xor
pop
cmc
adc
neg
adc
mov
ds
hlt
incl
js
fisttps
xor
pop
xor
loope
add
test
scas
mov
hlt
in
pop
bound
mov
add
add
and
or
movsb
lds
shll
mov
jg
mov
loop
mov
add
mov
jmp
adc
cld
fnstcw
sub
xlat
aas
mov
rcll
test
pop
inc
cmp
scas
pushf
mov
xchg
test
xor
out
mov
add
cmp
in
xor
js
gs
pop
push
fwait
insl
pop
push
lret
push
add
mov
mov
ja
push
sub
add
int
stc
pop
insl
adc
cmpsb
mov
pop
lret
insb
sbb
pop
mov
das
imul
add
addr16
sbb
adc
add
add
cmp
cmp
aaa
pop
jae
add
sti
add
mov
and
mov
add
mov
sub
xorl
pop
ret
mov
pop
jmp
jecxz
movsl
fadd
mov
jge
add
xchg
add
sub
mov
mov
lods
scas
mov
cmp
iret
jle
add
repnz
mov
cmp
mov
mov
iret
test
test
jnp
sahf
fidivrs
cmp
add
mov
lret
adc
push
call
adc
mov
mov
mov
fnsave
mov
dec
xchg
cld
ret
sub
and
add
mov
mov
add
lock
outsb
jp
add
sbb
push
cmp
pop
insl
xchg
dec
jg
into
or
mov
movsb
inc
jge
movsl
jb
mov
mov
xor
mov
rorl
pop
dec
jo
mov
mov
mov
out
enter
xlat
cltd
sub
xchg
sti
dec
xchg
dec
inc
repz
mov
jo
mov
add
and
xchg
popf
icebp
aas
xchg
add
es
push
mov
push
adc
jbe
sub
adc
add
aas
mull
add
xchg
popa
ljmp
cmp
add
aad
fs
jg
push
inc
jbe
stos
mov
aas
adc
xchg
xlat
ret
dec
aas
inc
dec
xchg
mov
inc
xor
aaa
inc
add
ror
jb
mov
add
dec
xor
mov
mov
mov
add
mov
jns
sub
in
in
xor
mov
mov
add
mov
mov
cld
push
add
push
cmp
aam
inc
jg
repnz
add
mov
jno
sarl
add
in
ja
mov
in
sti
sbb
mov
add
mov
lods
xchg
jo
mov
jecxz
pop
cmp
cmp
stos
inc
insb
sub
pop
xchg
aaa
sub
in
sti
mov
mov
stos
mov
movsb
fimuls
sbb
push
or
pop
sub
sub
jne
inc
add
stos
test
sbb
or
insl
sub
and
mov
roll
sub
hlt
scas
in
push
fstpl
mov
lds
mov
add
lahf
mov
cmp
out
xor
clc
iret
cmp
rolb
leavew
into
imul
sbb
or
xchg
push
in
test
iret
mov
fidivrl
inc
jbe
cmovbe
sub
jg
add
mov
or
call
mov
mov
loop
mov
cmp
shll
mov
xchg
aad
add
rolb
mov
stc
loope
in
or
popa
jmp
inc
shrl
and
jle
add
lcall
mov
addb
roll
jae
mov
mov
mov
and
mov
mov
mov
sbb
pop
test
decl
pop
movsl
xchg
loopne
mov
lahf
cs
add
pusha
add
mov
mov
inc
adc
push
addb
insl
jp
pop
dec
and
mov
fstl
incb
mov
dec
inc
cmp
test
add
pop
adc
mov
inc
mov
in
xor
cmc
outsl
cmpsl
mov
inc
xchg
test
sbb
mov
scas
out
stos
push
cwtl
shll
mov
inc
test
fnstenv
push
sbb
aaa
cmp
out
push
cmp
out
dec
or
add
mov
dec
add
daa
push
out
sub
xor
mov
mov
add
add
fst
push
add
add
add
loope
or
mov
pop
fistps
jnp
leave
jl
repz
fwait
sub
rorl
in
xor
lret
ds
jmp
mov
mov
mov
jno
sbb
pop
adc
out
sarl
pop
pop
jns
nop
add
repnz
adc
add
pop
mov
add
in
popa
fcoms
loopne
mov
add
cmp
pop
jae
jg
lcall
bts
mov
dec
pop
sahf
and
mov
mov
movsb
pop
pop
pushf
scas
or
mov
into
cmp
jp
clc
repz
in
repnz
pop
test
or
out
mov
jae
ss
jl
popa
popf
push
add
mov
cmp
movsb
lea
test
outsb
sbb
jmp
fmuls
pop
jo
mov
nop
add
addb
dec
add
fwait
addb
outsb
adc
add
add
in
adc
mov
jb
mov
pop
iret
outsl
mov
push
jle
cltd
lret
addb
adc
jle
jmp
xor
add
mov
sahf
adc
mov
mov
pop
inc
test
xchg
dec
add
mov
pop
fisttps
push
mov
mov
fmuls
add
mov
imul
add
inc
add
jg
add
repz
xchg
add
mov
lea
mov
jbe
add
mov
mov
lea
add
dec
ret
push
roll
add
xor
inc
sbb
pop
mov
rep
and
add
mov
cwtl
inc
add
xchg
sbb
inc
add
pop
pop
xchg
xchg
sub
xchg
mov
data16
inc
add
mov
add
mov
mov
adc
mov
cs
mov
sbb
mov
addr16
popa
sbb
pop
or
xor
mov
addb
push
add
lea
add
sub
rolb
mov
mov
ret
mov
scas
pop
leave
ss
ret
aam
cs
add
add
bound
mov
mov
sbb
add
add
inc
add
pushf
lds
mov
mov
test
jae
add
add
push
inc
inc
inc
pushf
je
mov
jne
push
add
jmp
or
js
repz
lcall
addr16
add
push
scas
xchg
add
xor
mov
mov
sbb
sub
in
add
add
mov
aad
mov
add
mov
mov
pop
mov
add
add
mov
adc
push
jmp
mov
int3
data16
movsl
jb
mov
mov
mov
addr16
dec
jns
imul
out
sbb
ficomps
mov
add
mov
xor
add
inc
orl
out
mov
mov
xor
mov
hlt
not
add
add
inc
add
aad
popf
cld
popa
push
arpl
sbb
inc
mov
popa
and
mov
inc
push
mov
add
sahf
data16
sti
in
rolb
mov
mov
fimull
adc
mov
push
add
mov
jl
pop
ljmp
cs
mov
repnz
mov
mov
into
mov
add
mov
dec
xor
add
sbb
lret
adc
enter
repz
sbbl
repz
xor
mov
addl
es
sbb
lret
scas
out
gs
push
popa
sbb
dec
and
mov
mov
mov
cs
scas
inc
xor
mov
mov
hlt
cmp
mov
dec
jb
mov
xor
outsb
mov
and
mov
fsts
add
add
xchg
in
mov
push
xor
mov
mov
inc
out
jp
add
outsl
pop
xor
mov
rolb
mov
daa
and
subl
sub
inc
add
mov
add
mov
add
or
push
cmpsl
dec
lret
mov
mov
mov
leave
and
mov
push
jb
mov
adc
pop
mov
pop
sub
js
mov
add
mov
sbbl
out
add
mov
mov
stc
cmp
add
add
stos
jbe
add
sub
push
mov
dec
add
jmp
inc
mov
inc
add
mov
aaa
mov
fs
jge
push
xor
mov
pop
xchg
lret
pop
out
iret
cld
loop
mov
imul
add
std
xor
mov
mov
push
or
mov
add
sub
or
or
outsb
repnz
or
arpl
xchg
divl
ret
stc
mov
xor
arpl
pop
jl
lds
shrl
cmpsl
sub
dec
or
addl
out
jl
loop
mov
mov
push
push
pop
test
mov
mov
add
pop
lea
add
call
pop
jnp
ret
das
xchg
imul
lret
mov
pop
pop
popf
jmp
pop
inc
add
mov
jo
mov
mov
add
dec
sub
mov
add
addb
cld
std
scas
ds
ljmp
xchg
xchg
add
add
mov
mov
mov
into
rolb
mov
ja
push
adc
out
out
inc
add
inc
add
add
jno
add
adc
loopne
mov
rolb
mov
loope
mov
mov
add
sahf
imull
pop
into
pop
or
inc
mov
leave
fdivs
pop
lahf
sub
push
mov
or
or
add
enter
jle
aam
xor
pop
push
jno
sahf
cmp
cs
lret
out
outsl
pop
xchg
jae
fdivl
mov
pop
xchg
fiaddl
test
sbb
lea
jl
mov
adc
mov
mov
mov
mov
add
gs
add
mov
xchg
mov
mov
addr16
lods
xchg
add
push
add
or
add
add
mov
sarl
lods
addb
mov
jne
loope
push
out
sub
enter
in
add
xor
mov
shll
xor
add
mov
es
push
mov
and
jmp
jp
sbb
or
je
dec
movsl
addb
push
sbb
jle
adc
mov
sub
cmp
repz
xchg
mov
push
or
das
cs
add
xor
mov
xlat
inc
add
fisubl
inc
gs
cwtl
mov
sub
mov
popa
xchg
add
iret
in
loop
mov
push
mov
pop
fcoms
add
or
movsb
mov
insl
jecxz
add
mov
and
outsb
mov
inc
xchg
mov
pop
dec
jbe
jbe
rorl
mov
push
dec
mov
jmp
ljmp
mov
pop
decb
lret
mov
mov
fsubl
insb
xor
sbb
test
fmull
rcrl
mov
rorl
in
cld
test
add
dec
mov
icebp
dec
out
add
xchg
add
filds
add
divl
xor
mov
add
fisubs
stc
ljmp
fildl
add
jg
pop
stos
negb
cmp
addb
mov
add
xor
mov
sub
dec
ja
nop
add
dec
imul
andl
movsl
cmp
add
sbb
pop
and
add
cld
pop
loope
add
sbb
add
mulb
add
or
mov
sbb
add
push
pop
mov
pop
mov
sub
add
ret
dec
ljmp
popf
push
int
dec
pop
inc
aam
mov
insl
fwait
jg
arpl
jb
mov
call
pop
imul
add
jge
mov
mov
nop
add
rolb
mov
add
add
je
xlat
and
add
cwtl
fildll
add
push
add
mov
mov
add
mov
rolb
mov
negb
aaa
push
daa
in
lds
lret
jge
sub
add
ficomps
lock
ret
push
test
jne
fmuls
imul
and
add
repz
jo
mov
roll
add
faddl
mov
jbe
pop
popa
cmp
scas
test
add
pop
add
mov
add
add
aad
add
cwtl
cmp
push
add
mov
or
imul
daa
or
sub
cmc
jnp
add
push
je
testb
adc
mov
popf
xchg
movsl
les
cs
mov
and
mov
movsb
mov
jnp
movsl
or
loope
add
mov
mov
mov
call
mov
add
mov
adc
mov
xchg
xchg
stc
adc
sbb
mov
in
cmp
xchg
std
std
mov
mov
mov
pop
addb
jns
ret
or
jp
je
test
mov
outsb
inc
stc
dec
fstpt
test
fists
push
mov
xchg
add
jbe
sahf
jmp
or
add
ja
dec
std
xor
push
test
push
stc
fbld
in
add
