pop
jmp
add
pop
das
daa
pop
fildll
jns
pop
pop
add
add
rcll
add
push
repz
sbb
add
jg
jl
pop
jae
add
ja
std
cld
sbb
add
lahf
xchg
pop
sbbb
fldcw
outsl
test
pop
inc
add
sub
add
add
sbb
pop
mulb
pop
scas
or
pop
xor
add
jns
and
add
xor
add
add
and
add
inc
pop
push
add
and
mov
add
sbbb
jp
mov
jg
pop
mov
jae
add
bound
add
add
dec
add
add
add
add
mov
add
xor
add
add
sbbb
cwtl
xchg
add
add
add
lahf
lret
xor
add
add
inc
pop
stos
std
or
lret
lea
add
out
sahf
add
stos
in
gs
loop
mov
xor
pop
fdivrs
mov
push
add
loope
icebp
xor
dec
adc
add
int
push
add
or
mov
add
sbb
add
pop
add
add
pop
mov
add
loope
adc
pop
or
mov
pop
ja
out
iret
test
add
adc
add
push
pop
cli
gs
jecxz
mov
add
add
add
add
nop
jg
mov
out
xor
add
clc
stos
test
bound
add
movsl
pop
sub
pop
fwait
push
add
ret
scas
test
mov
in
sarl
xlat
jmp
add
xchg
repz
dec
xor
add
add
pop
mov
pop
inc
add
in
and
add
pop
jmp
hlt
out
sbbb
add
push
adc
add
sbb
or
pop
or
scas
dec
adc
pushf
dec
inc
add
imul
pop
push
add
or
aas
shrl
pop
dec
cmp
and
add
mov
add
add
add
xchg
inc
pop
add
add
add
add
push
ret
pop
and
add
mov
mov
pop
aad
add
add
add
hlt
fmull
sahf
test
pushf
jmp
pop
sbb
mov
add
pop
adc
add
rcrl
add
xor
add
imul
iret
sub
pop
cld
push
add
clc
sbb
add
out
jecxz
inc
add
fistps
xchg
das
rcrb
stos
push
pop
sbb
pop
xor
add
pop
scas
stos
jp
test
into
jbe
insl
in
pushf
in
push
fisubl
xchg
push
pop
pushf
stc
test
or
pusha
add
in
mov
push
pop
sub
xchg
addr16
outsb
pop
aaa
sbb
pop
adc
add
mov
add
pop
decb
es
xor
add
lds
sbbl
test
mov
add
stc
adc
add
lock
jecxz
popf
mov
mov
add
xchg
add
jp
pop
jecxz
inc
add
sbbl
add
cmp
pop
push
add
or
pop
jne
pop
mov
inc
pop
or
divb
add
mov
add
add
dec
ljmp
pusha
add
cwtl
jle
pop
loopne
int3
or
gs
xchg
add
lret
add
add
rcrb
push
test
pop
jge
pop
xor
add
xchg
es
adc
add
fcom
xor
add
add
inc
pop
in
sub
add
rol
pop
sbb
rcrb
sub
lahf
push
add
test
mov
insl
or
add
inc
add
je
cmpsb
pop
rcll
loopne
fsubrl
mov
pop
push
or
mov
push
add
cmc
push
add
movsb
pop
pop
ljmp
add
sbbb
add
cwtl
sbb
test
mull
pop
add
add
xchg
mov
add
sbb
cmp
add
fdivs
add
mov
add
dec
lds
rorb
in
xor
add
or
add
int3
or
mov
packssdw
add
pop
dec
push
push
adc
add
pop
in
sub
jge
outsl
ret
push
add
or
fildll
jle
adc
add
pop
push
jecxz
outsb
fwait
aas
out
xrelease
add
add
push
xchg
sbbl
add
adc
add
lret
add
add
mulb
pop
jl
add
add
add
pop
iret
dec
in
lods
inc
add
pusha
add
push
add
in
dec
xchg
in
lcall
or
pop
pop
mov
pop
fdiv
pushf
adc
add
hlt
stc
repz
add
push
inc
add
fldl
add
test
pop
mov
inc
pop
or
pop
push
out
sbb
cmp
mov
mov
pop
insb
sbb
mov
imul
add
mov
pop
adc
pop
cmp
pop
xor
pop
xor
add
lret
mov
add
stc
repz
add
ucomiss
add
mov
or
adc
jno
add
add
xchg
jbe
jmp
add
pop
inc
add
decb
pop
pop
nop
push
add
lret
inc
pop
lds
pop
stos
pop
push
pop
mov
mov
or
pop
ret
mov
pop
idivl
jge
pop
adc
pop
insl
sub
add
mov
mov
pop
mov
mov
cli
fldl
pop
xchg
movsb
pop
leave
sbbb
pop
fstps
pop
cmp
add
cld
fdivrp
jns
sysret
pop
jl
sbb
push
aam
sbbl
adc
add
movsb
pop
push
lret
test
adc
add
leave
cld
pop
out
mov
cmp
add
jnp
rclb
add
in
test
add
add
test
imul
inc
add
pushf
das
cmp
jnp
cmp
icebp
sub
mov
lahf
mov
fnstcw
add
xchg
or
mov
cmp
push
add
cli
jno
add
dec
inc
add
pop
loop
xor
pop
sub
add
add
icebp
sarl
sbbl
mov
xor
add
lcall
add
jge
mov
push
push
fcmovne
nop
sbb
ret
pop
jmp
repnz
out
dec
mov
pop
or
bound
add
dec
mov
pop
mov
sbbl
and
test
adc
add
pop
pop
loope
mov
pop
stc
mulb
int
cli
add
add
loop
rorb
xor
add
sahf
cmp
add
dec
cmpsl
pop
fs
pop
rcrl
fisttps
int
std
daa
pop
movsl
pop
je
clc
or
push
pop
jl
jecxz
lret
in
or
negb
fs
push
pop
xor
add
sbb
xor
add
sub
lock
and
add
pop
jns
loop
nop
fucomp
xchg
inc
pop
adc
pop
pop
sub
adc
add
add
add
add
js
add
stc
push
add
out
mov
pop
sbbb
pop
cmpsb
pop
insb
pushf
leave
mov
jmp
cmp
jnp
sub
push
push
add
call
and
push
rcrl
mov
add
cwtl
movsb
pop
leave
cmp
lcall
jg
jg
pop
sub
fidivrl
fistl
or
add
or
imul
pop
mov
push
add
pop
mov
add
add
test
and
add
test
movsb
pop
ljmp
pop
dec
cld
mov
or
ficoml
add
dec
push
mov
cmpsl
pop
mov
aad
dec
popa
add
sbb
scas
addr16
adc
add
sahf
rcrl
ret
pop
daa
pop
nop
pushf
push
stc
add
mov
jae
add
sahf
fmul
pop
lcall
mov
jne
xchg
lret
add
jbe
xchg
addr16
rcrl
dec
insb
push
popa
add
hlt
ds
xor
add
pop
sbb
ret
mov
pop
cmp
add
add
mov
pop
std
js
fsubl
pop
mov
mov
outsb
sahf
xor
add
rorb
xor
add
lea
add
out
fidivrs
daa
pop
lret
sbbl
add
rcrb
add
mov
xor
add
sbb
push
pop
mov
pop
adc
add
sub
mov
sahf
repnz
add
aaa
shlb
bound
add
mov
sarb
lea
insb
stc
xchg
stc
pop
nop
cmpsl
pop
jp
pop
in
cld
dec
inc
pop
mov
fimuls
add
xor
add
mov
push
gs
rorb
add
pop
dec
cli
inc
add
in
fsubr
jae
add
jecxz
lret
cmp
call
mov
jnp
cmp
jbe
pop
xor
add
xor
add
add
sub
pop
mov
add
add
out
sbbl
add
cmp
das
mov
sub
cmp
xchg
mov
aaa
scas
pusha
add
add
add
mov
dec
mov
es
adc
add
inc
pop
fsubs
add
fwait
cwtl
xlat
pop
and
add
add
stos
inc
add
fldl
add
add
sub
aas
int3
jp
push
bound
add
pop
dec
aaa
int3
sar
fsubrp
je
cmpsl
pop
inc
pop
inc
add
inc
pop
mov
gs
mov
std
cmp
mov
jno
add
ljmp
jae
add
jnp
mov
xchg
cmp
pop
ja
add
ds
scas
xchg
add
add
push
add
pop
les
mov
popf
jle
jp
add
rcrb
inc
pop
nop
lcall
cld
insl
and
add
cmpsl
pop
daa
pop
jp
pop
xor
add
add
jae
add
mov
les
push
lock
pop
dec
and
add
add
xchg
cs
aaa
pop
pop
xor
outsl
or
add
cmp
sbb
pop
pushf
xchg
mov
mov
add
aam
xor
pop
add
add
rcrb
add
lods
cli
mov
pop
fdivrl
add
cmpsl
pop
insl
or
pop
aaa
stos
and
add
add
xor
add
cwtl
inc
add
pushf
mov
add
pop
pop
mov
stos
ss
out
pop
fbld
add
push
add
movsb
pop
and
loope
repz
add
jge
mov
xor
mov
cld
mov
pop
cwtl
aaa
and
add
add
jg
pop
cld
int
inc
pop
sbbb
add
fmuls
fdivl
pop
and
xchg
cmp
divb
out
xchg
outsl
clc
mov
pop
idivl
pop
push
add
in
test
pop
in
lods
imul
add
add
mov
sub
cmp
mov
sbb
pop
adc
cmp
pop
nop
or
push
add
pop
pop
sub
adc
add
lock
out
repnz
pop
dec
sub
pop
lds
pop
rcrb
fdivr
lea
sbb
insl
leave
adc
mov
push
add
add
add
jbe
cwtl
insl
push
push
add
xor
add
leave
arpl
add
and
add
push
cld
mov
pop
jge
pop
xchg
jmp
pop
fisttps
xchg
add
outsl
pushf
mov
pop
mov
add
mov
adc
add
pop
out
push
sbbb
les
in
dec
leave
add
add
sub
add
jle
dec
fisttpl
mov
pop
inc
add
stos
push
add
fwait
clc
add
add
mov
adc
add
iret
push
popf
loope
add
add
mov
pop
call
add
mov
pop
add
xchg
xchg
or
add
testb
pop
xchg
gs
add
add
pop
das
in
add
push
pop
or
sub
mov
shll
add
ret
pop
cmc
push
dec
pop
cmp
cli
cmp
sub
pop
pop
and
add
and
mov
pop
pop
imul
pop
int
add
sub
pop
push
pop
pop
in
iret
test
cwtl
test
pop
cli
jmp
rcll
add
dec
frstor
sub
fbld
pop
jmp
add
add
xchg
inc
pop
lods
repnz
movsb
pop
add
add
fdivrp
mov
cltd
rcrl
sbbb
add
jmp
add
in
xor
pop
ljmp
pop
xor
add
gs
fadds
add
mov
pop
add
add
add
fwait
xchg
cwtl
mov
pushl
add
in
sbbb
sbb
popf
call
dec
ret
pop
mov
loopne
cmpsl
pop
mov
add
add
add
add
jo
add
pop
pop
xor
add
pop
sarl
stc
nop
rcrb
pop
lock
jo
add
aam
popf
push
or
pop
lcall
jp
or
push
rcrl
add
js
fistpll
sarl
int
pop
std
inc
pop
mov
jle
xchg
pop
add
add
loop
xor
add
cltd
cmp
lods
addr16
push
pop
adc
add
add
mov
xchg
mov
lret
ret
pop
ja
add
jbe
sub
pop
out
lds
pop
inc
pop
push
xchg
xchg
add
and
add
jne
jne
hlt
mov
add
mov
add
add
xlat
dec
loop
push
pop
aaa
idivb
pop
rcrb
rcll
pop
std
mov
pop
std
movsb
pop
testb
incl
jo
add
add
fwait
dec
xchg
add
pop
sub
push
ficompl
add
xchg
mov
lret
insl
aam
mov
sahf
push
cmp
add
in
aam
aad
pop
movsb
pop
push
sub
jae
add
ret
or
jp
xchg
xchg
out
xor
add
sub
pop
fidivl
pop
sti
pop
sub
pop
xor
add
add
sub
in
and
pop
pop
pop
inc
pop
in
add
add
xchg
cmp
add
inc
add
adc
jle
call
add
add
loope
lcall
pop
repz
inc
add
mov
and
add
inc
add
sbbb
shll
sbb
imul
pop
xchg
out
pop
pop
addr16
in
sti
cmp
adc
pop
mov
sbb
in
sbb
pop
adc
add
sbb
sarl
mov
hlt
fs
fdivr
mov
mov
rcrb
pop
mov
lds
push
add
out
scas
or
pop
and
add
pop
and
adc
dec
std
jno
add
xor
notb
jmp
pop
or
or
incl
adc
add
scas
std
dec
xchg
roll
jo
add
and
add
add
mov
add
xor
add
add
stos
push
pand
ja
adc
add
pop
pop
outsl
stos
inc
pop
fbstp
add
add
or
add
adc
add
pop
adc
push
fsub
pop
ret
pop
xchg
test
pop
std
pop
push
xor
add
std
jp
add
push
lsl
add
lret
add
out
fwait
cwtl
dec
mov
daa
pop
jp
lods
shrl
mov
ds
inc
add
ljmp
adc
add
add
test
add
add
xlat
arpl
add
repz
dec
and
add
xor
push
sbb
cmp
stc
inc
pop
mov
add
sti
xchg
fists
add
dec
in
cmpsl
pop
inc
pop
jae
add
pop
mov
out
sahf
outsb
jl
mov
pop
pop
xor
add
cli
rcrl
sbb
add
inc
pop
in
lahf
xchg
add
add
pop
push
fdivl
add
arpl
add
pop
mov
add
ret
jl
shlb
pop
inc
pop
loopne
popl
test
insl
stos
ja
push
add
pop
insb
dec
std
lret
out
daa
pop
int3
jbe
add
xchg
sbb
add
pop
pop
enter
mov
inc
pop
cmp
pop
es
cmpsb
pop
aas
lods
addr16
push
add
stc
outsb
and
add
sub
adc
add
fcmovbe
int
pop
hlt
pop
pop
ja
cwtl
mov
add
add
rcrl
rcrl
add
cld
insl
into
push
mov
add
pop
xchg
pop
das
aam
or
pop
fbld
add
jmp
add
pop
insl
or
incb
dec
cmp
sbb
jle
pop
jnp
add
mov
pop
test
pop
add
add
pop
nop
mov
pop
adc
pop
rcrl
and
add
add
pop
fs
jg
mov
push
sbbb
insl
or
sti
pop
or
add
add
por
flds
pop
out
sbb
add
sub
add
pop
sbb
jg
jns
add
es
fs
addr16
sbb
jo
add
pop
pusha
add
adc
add
and
add
mov
rcrl
filds
outsl
xor
add
sbb
pop
int
pop
and
add
hlt
lahf
test
fs
mov
icebp
stos
mov
testl
mov
sub
cltd
lods
test
push
sbbl
push
test
add
neg
add
add
out
mov
pop
test
addr16
pop
and
add
in
xchg
pop
push
pop
pushl
add
adc
add
repnz
add
pop
jae
add
or
add
xchg
sub
dec
push
xchg
fmuls
jecxz
dec
inc
pop
add
add
hlt
mov
pop
xchg
mov
pop
cmp
cmp
out
push
repnz
cmp
pop
mov
lret
sbb
pop
dec
stos
xor
pop
jo
add
iret
jle
iret
xchg
xor
add
pop
mov
add
add
add
testl
std
sbb
in
pop
sbb
idivl
pop
int3
xchg
out
std
sub
add
mov
mov
jecxz
daa
pop
mulb
pop
or
cmp
add
sbb
pop
cmpsb
pop
push
lock
add
movsl
pop
frstpm(287
pop
push
sar
cmp
add
sbbb
pop
sbbb
gs
or
leave
rolb
add
pop
mov
add
add
add
xlat
sbbl
lret
or
sbbl
rolb
lods
xor
add
pop
push
add
xchg
jge
pop
enter
cli
xor
add
pop
push
inc
add
cmc
inc
add
iret
xchg
xor
add
and
outsl
sbb
out
jnp
dec
mov
add
mov
rcrl
aas
lcall
sbb
pop
sub
mov
xchg
cmp
pop
stc
fnstenv
loopne
dec
mov
xchg
mov
pop
lret
std
sbb
cltd
icebp
sub
pop
pop
jmp
out
iret
rcrl
inc
add
rcrb
shr
movsb
pop
call
pop
mov
add
inc
add
lea
add
mov
out
je
dec
pop
pop
pop
daa
pop
adc
add
outsl
insb
sbb
and
add
pop
outsl
and
aam
fsubl
pop
cld
jle
add
add
movsb
pop
les
out
dec
daa
pop
inc
pop
xchg
push
cmpsl
pop
movsb
pop
fldt
mov
pushf
and
add
and
add
jnp
jmp
mov
xor
add
pop
mov
jmp
lds
adc
add
sbb
pop
ja
or
adc
add
xor
add
lods
dec
fwait
sbbl
or
imul
add
sti
dec
pop
pop
js
lahf
iret
pop
xchg
sbbl
pop
stc
pop
add
add
ret
pop
jo
add
pop
mov
pop
pop
gs
fcompl
stc
push
add
jo
add
ret
pop
fldl
or
jnp
xchg
and
add
xor
add
fcoms
add
mov
jb
add
xchg
push
push
add
mov
add
icebp
hlt
lods
and
add
lods
add
pusha
add
or
add
aaa
push
add
test
dec
aad
push
jne
or
pop
aam
fwait
jns
loope
pop
ret
add
lahf
add
add
and
add
aas
nop
sub
pop
negl
add
xor
add
pop
test
sbb
sbb
pop
xor
add
add
xor
add
pop
sub
repnz
shl
mov
or
pop
out
cmp
add
add
xchg
xlat
push
pop
mov
pop
lret
push
in
call
xor
add
clc
jge
pop
and
add
cmp
add
bound
add
dec
sbb
pop
addr16
cltd
adc
js
fcompl
push
lods
add
add
add
add
pop
jl
pop
ficoml
icebp
sbb
hlt
iret
icebp
sbb
enter
loope
mov
daa
pop
inc
add
scas
into
mov
pop
xchg
adc
add
add
call
pop
inc
pop
call
add
hlt
mov
pop
pop
or
pop
sbb
jbe
cld
inc
add
add
fs
xchg
mov
push
sub
cs
pop
pop
pop
sar
xchg
aas
repz
cmpsb
pop
stos
lock
pop
fs
ja
sbbl
mov
aad
sub
notb
sub
add
pop
rep
test
fs
outsb
mov
push
cs
xor
add
add
push
add
adc
add
and
add
pop
stos
sub
xchg
xchg
xor
jo
add
add
pop
and
dec
jo
add
add
xlat
test
pop
out
fs
mov
push
add
dec
in
mov
icebp
add
imull
push
inc
add
pop
adc
loopne
cwtl
call
pop
pop
mov
or
pop
je
insl
rcrb
add
add
jmp
push
inc
pop
std
mov
dec
aam
aas
mov
pop
cmpsb
pop
adc
add
cltd
or
pop
mov
jg
jo
add
aad
cwtl
repz
add
xor
add
add
inc
pop
pop
push
xchg
lret
push
adc
gs
in
mov
add
pop
ret
pop
sub
ror
xchg
add
add
xchg
das
ljmp
pop
cmp
pop
pop
rcrl
jns
add
icebp
je
push
pop
push
pop
bound
add
mov
cmpsb
pop
loopne
pop
pop
and
pop
cmp
cmp
add
dec
push
fists
add
push
notb
add
pop
cmc
gs
bound
add
mov
mov
add
leave
pop
in
pop
shlb
mov
add
add
inc
add
dec
jnp
in
out
imul
pop
ret
pop
fcmovnb
pop
inc
add
call
pop
pop
lea
jmp
add
xchg
jae
add
jnp
pop
ret
pop
inc
pop
rcrb
add
aaa
sub
sbb
aaa
icebp
enter
out
adc
iret
bound
add
pop
icebp
adc
add
pop
sub
clc
xor
add
mov
ja
add
mov
push
dec
mov
pop
sub
pop
jmp
add
ret
pop
adc
xor
add
xchg
mov
icebp
dec
pop
mov
pop
out
xchg
xchg
inc
pop
push
pop
scas
pop
jb
add
add
or
idivl
loopne
jge
pop
sbb
add
or
push
rcrb
cmc
iret
pop
imul
add
xor
pop
dec
xor
add
add
add
pop
or
nop
jle
sbb
adc
add
imul
pop
pop
pop
mov
mov
mov
xor
add
add
shl
ds
sti
mov
pop
rcrl
cmp
add
mov
add
xor
add
das
paddsb
push
cwtl
lea
add
inc
add
rcrl
dec
loopne
sbbl
hlt
cmpsb
pop
lcall
mulb
add
pop
js
or
pop
and
add
add
xor
add
pop
fs
rorl
push
pop
inc
add
sahf
or
pop
pop
mov
pop
and
add
stc
fnstcw
add
inc
pop
sbb
cmp
pop
xchg
sbb
inc
add
divl
add
rcr
pop
iret
sbb
pop
jno
add
add
adc
add
add
ds
lret
xor
add
sbbb
mov
pop
cmpsb
pop
test
arpl
add
fsubrp
gs
movsb
pop
jmp
xchg
add
and
add
mov
das
cmc
push
add
pop
dec
dec
sub
mov
movsl
pop
or
add
add
scas
mov
pop
lds
sub
mov
test
in
sbbb
cmpsb
pop
std
mov
jae
add
dec
or
xchg
jg
xchg
push
xchg
push
cmp
shll
add
add
mov
xchg
pop
push
add
push
sub
pop
je
leave
out
ret
pop
jne
int
pop
dec
test
xor
lret
fs
push
add
lcall
pop
jae
add
sub
sbb
adc
add
dec
dec
rcrb
push
xor
add
and
add
je
mov
mov
or
mov
test
dec
sub
add
jmp
mov
in
pop
xchg
xor
add
mov
mov
out
lods
mov
add
pop
adc
add
push
ficoms
add
add
cwtl
pop
xchg
ljmp
sub
cs
ljmp
pop
inc
add
cmpsb
pop
fdivs
add
add
push
mov
into
mov
add
imul
mov
and
add
pushf
mov
pop
adc
add
add
add
inc
add
sbb
fs
cmp
pop
int
clc
and
add
and
add
add
add
les
add
push
add
jno
add
pop
inc
add
sub
call
add
add
sub
mov
fcomi
sbb
fs
and
add
add
xchg
sub
adc
add
stos
mov
add
add
add
mov
add
add
sbb
fmuls
add
aas
adc
add
mov
pop
jp
cmp
add
pop
pop
or
add
rcrl
pop
cmc
xchg
mov
clc
out
sub
rcrb
pop
out
jge
lock
xchg
scas
jle
pop
jge
mov
adc
add
stc
sbbl
push
pop
aas
pop
pop
in
and
add
idivl
adc
cs
leave
sub
push
pop
aad
add
jnp
pop
shl
lds
shr
jecxz
movsl
pop
sub
fistps
add
rcrl
add
add
xor
shrb
and
add
add
add
pop
ret
pop
add
add
pop
ficomps
sub
mov
bound
add
mov
test
mov
enter
jnp
add
add
add
add
add
add
mov
hlt
lret
ret
pop
idiv
leave
pop
inc
pop
xchg
aas
inc
pop
ret
pop
es
jnp
cmpsl
pop
mov
dec
int3
ljmp
mov
pop
lcall
mov
iret
lahf
cmp
pushl
add
jg
cmpsb
pop
and
add
cltd
enter
jbe
inc
add
aaa
es
lcall
and
add
pop
out
out
in
out
repz
add
xor
adc
pop
push
nop
push
pop
out
js
rcrb
pop
push
and
add
xchg
dec
rcrl
adc
add
add
dec
rcrb
mov
lahf
sbbb
add
pop
iret
dec
jo
add
mov
pop
cld
hlt
or
into
mull
add
mov
add
mov
push
sbb
add
in
sbb
pop
fcmove
iret
push
add
jecxz
push
jbe
lcall
add
cmp
pop
movsl
pop
mov
add
inc
add
pop
movsl
pop
shr
aam
dec
pop
push
es
loopne
inc
add
stc
loopne
lock
xchg
xchg
add
jb
add
pop
arpl
add
mov
xchg
or
les
add
sbb
sahf
adc
add
or
and
add
pop
mov
cmp
cmp
inc
add
mov
add
add
add
cmc
mov
jnp
jmp
add
add
mov
pop
mov
adc
add
ljmp
mov
js
pop
push
dec
daa
pop
sbb
push
mov
ja
mov
xchg
bound
add
mov
mov
rcrb
mov
rcrb
add
jg
add
add
add
pusha
add
jg
in
je
aad
add
pop
dec
fisttpl
push
push
mov
sbb
sbbl
mov
test
fmull
or
icebp
loopne
cmpsl
pop
pop
sub
push
pop
xor
add
adc
add
pop
push
repz
add
and
mov
ss
sub
pop
daa
pop
repz
rcrb
add
pop
mov
add
inc
pop
lea
mov
jno
add
std
mov
add
ss
pop
nop
test
pop
clc
jecxz
aam
pop
cwtl
invd
mov
fcoml
shrb
add
sbbb
add
fsubrs
sbbb
lods
sbbl
add
jae
add
out
imul
adc
mov
add
shll
add
inc
pop
cmpsb
pop
push
add
mull
add
pushf
mov
pop
out
adc
add
popa
add
and
sub
cli
add
add
add
pop
fiadds
pop
or
sbb
add
dec
pop
pop
xchg
add
add
enter
or
jns
loopne
dec
adc
pop
dec
sbb
push
add
push
mov
push
add
or
push
mov
pop
ret
add
in
mov
and
add
icebp
pop
clc
lock
pop
xor
add
and
add
movsl
pop
push
dec
imul
add
repz
sbb
add
sbb
pop
and
add
enter
sbb
add
add
mov
sarl
xchg
pop
repnz
sub
push
xchg
ficoml
add
inc
add
pop
repnz
pop
ficoml
push
sbb
xchg
rcr
mov
stos
mov
pop
mov
xor
dec
imul
nop
lods
iret
outsl
sbb
xchg
testb
cmc
mov
ret
pop
rcrl
pop
push
push
mov
pop
adc
pop
pop
jae
add
pop
mov
push
and
xchg
push
xchg
bound
add
sbbl
dec
ljmp
dec
adc
add
add
add
push
pop
xchg
test
jbe
add
ret
dec
into
cmpsb
pop
lret
add
or
cmc
inc
add
jb
add
add
inc
add
leave
xchg
mov
xchg
enter
add
add
add
jmp
rcrl
pop
in
xor
add
push
pop
or
inc
pop
adc
add
pop
xor
mov
pop
and
pop
add
add
cmpsb
pop
sbb
mov
jmp
pop
in
jbe
cmp
add
add
es
mov
cld
fs
shl
pop
inc
add
les
sub
sub
mov
add
add
mov
pop
add
add
in
call
test
mov
negb
pop
iret
jnp
pop
loop
mov
pop
add
stos
cmp
xchg
jmp
or
inc
add
loope
mov
pop
adc
add
push
in
in
in
xchg
pop
mov
add
lods
es
fisttps
cmp
das
movsb
pop
test
mov
add
ret
pop
lcall
jb
add
mov
cmp
pop
push
clc
bnd
pop
dec
sti
cmp
sbb
int3
in
pop
into
adc
add
add
push
add
xor
add
add
jmp
mov
hlt
cmp
dec
out
sub
sbb
xchg
fs
push
stos
das
stos
movsl
pop
sub
sub
add
add
ret
pop
and
add
shll
test
add
jl
popf
mov
add
test
xchg
pop
jle
fisttpl
add
pop
js
call
add
in
mov
mov
add
add
lahf
pop
pop
inc
pop
mov
pop
push
jbe
ja
push
add
jecxz
inc
add
push
sbbl
sub
pop
sub
cmp
in
mov
add
and
sub
lea
and
rcrl
xor
add
add
cmpsb
pop
pop
mov
add
pusha
add
xor
add
hlt
cltd
ds
and
mov
add
pop
not
pop
and
in
xchg
loope
insl
sub
add
pushf
ror
jmp
add
pop
mov
add
cmp
add
pop
sub
pop
adc
add
push
add
mov
mov
pop
jle
pop
lods
xchg
enter
fdiv
es
sbbb
ja
pop
sbbb
pop
into
insb
insl
cmp
pop
push
pop
mov
add
add
add
mov
pop
pop
sti
imul
mov
add
or
xchg
and
xchg
aas
dec
lahf
and
pop
popf
jle
mov
fldz
bound
add
cs
fwait
out
out
popf
fidivl
xchg
mov
mov
pop
pop
push
pop
lahf
bound
add
jae
add
lods
sbb
or
mov
pop
dec
lods
jno
add
pop
mov
pushf
scas
mov
out
std
sbb
xchg
xchg
inc
add
divl
add
add
mov
cmp
adc
pop
fwait
mov
add
pushf
cld
shl
pop
pop
pop
mov
xchg
mov
repnz
add
leave
xor
pop
fcmovu
test
enter
add
daa
pop
movsl
pop
add
add
add
int
xchg
cltd
mov
add
pop
sub
push
daa
pop
fisubrl
jmp
inc
add
mov
add
dec
mov
add
add
add
aad
add
inc
pop
or
push
add
add
out
stos
xchg
cmpsl
pop
out
cmc
mov
add
loopne
sbbb
add
sub
jmp
pop
fsubrl
sub
push
sbbb
pop
jecxz
js
and
add
pop
lods
and
add
add
popa
add
lret
add
xacquire
or
add
aas
pop
and
add
pop
cmpsb
pop
cwtl
xor
mov
pop
and
cmpsl
pop
lcall
pop
iret
cmc
adc
add
add
lods
incl
int3
stos
cmp
pop
sbb
lock
ljmp
add
mov
arpl
add
sbbl
xchg
fcmove
xchg
aaa
movsb
pop
xchg
ljmp
stos
fisubrl
aaa
dec
imul
pop
aam
lock
leave
jl
aam
pop
add
add
pop
jg
out
push
push
add
cmp
mov
call
add
sbb
push
add
jmp
mov
cmp
sti
xor
add
pop
repnz
rcrl
cli
adc
lcall
outsb
sbbb
add
rcrl
cs
pop
sbbb
lods
lahf
sub
aas
fidivrs
pop
push
and
add
decl
cmp
pop
lahf
fstpl
std
jge
add
loop
mov
stos
dec
mov
mov
popa
add
repz
mov
pop
jne
jecxz
mov
xchg
shlb
add
je
pop
fnstsw
pop
minps
mov
pop
popf
sbb
xchg
out
cmp
add
jmp
pop
call
push
and
enter
test
add
add
add
or
loop
jp
test
mov
sbbb
pop
das
sahf
add
add
cmp
imul
pop
inc
pop
pop
pop
sbbl
dec
arpl
add
cli
adc
add
pop
mov
cs
push
jbe
mov
fwait
ljmp
jp
pop
jl
or
add
out
pop
cmc
loop
push
insb
int3
sbbb
add
in
pusha
add
popf
std
or
add
cmp
xchg
xchg
sub
adc
add
add
pop
stos
mov
add
push
jbe
clc
pop
mov
fs
lods
clc
icebp
test
add
ljmp
pop
mov
pop
in
cmp
test
add
ds
add
sbb
add
scas
aaa
adc
add
inc
add
mov
jp
cli
and
add
add
pop
sub
xor
add
push
add
jmp
pop
pop
fcompl
add
lcall
sbb
pop
in
sbbb
invd
in
lock
xor
add
fcompl
pop
push
xor
add
imul
inc
pop
lods
xchg
out
and
add
add
add
add
mov
pop
int3
clc
sub
lds
bswap
or
pop
dec
sub
push
or
add
addr16
mov
add
sahf
cmp
leave
mov
addr16
sub
cld
ficoml
out
mov
jbe
mov
clc
nop
push
cltd
divl
add
sbbl
mov
add
stos
ret
jae
add
pop
lods
stc
cwtl
pusha
add
imul
or
add
xor
add
leave
jecxz
sub
pop
das
das
pop
pop
sti
sbbb
jno
add
fsubr
outsb
pop
fidivl
sub
lods
xor
in
fisttpl
add
xchg
inc
add
cltd
ja
xchg
xchg
sbb
add
add
pop
push
inc
add
jmp
fildll
inc
add
lods
jo
add
pop
adc
add
push
add
out
jno
add
stos
cmpsl
pop
xchg
and
add
cmpsl
pop
mov
in
test
pushf
in
rcrl
fs
jb
add
pop
xor
dec
ja
pop
popf
lea
sbb
call
inc
add
std
add
add
pop
lea
pop
cmp
add
xchg
mov
sub
and
add
pop
sub
add
add
add
out
sub
pop
cmp
scas
and
jns
sbb
and
add
pop
sti
push
gs
adc
pop
fidivrs
adc
add
add
pop
jae
add
mov
pop
add
add
in
jmp
xor
add
pop
or
mov
pop
scas
lock
pop
pop
jmp
testb
pop
push
xchg
xchg
pop
inc
pop
aas
sub
dec
repz
add
rcrl
add
les
inc
add
scas
pop
dec
stc
lock
xchg
adc
add
movntq
in
push
iret
in
push
cs
pushf
xor
xchg
adc
rcrl
add
jnp
jno
add
mov
xor
pop
ret
jno
add
inc
add
jb
add
add
pop
es
insl
movsl
pop
ljmp
cld
rcrb
pop
loopne
add
std
add
add
pop
sub
popa
add
js
jecxz
cmp
add
adc
add
add
sbb
add
sarl
sti
push
cmp
push
out
lods
movsb
pop
aam
push
add
xor
add
add
pop
adc
add
add
imul
fistl
add
push
pop
and
add
add
repz
add
add
cltd
xor
add
add
jb
add
pop
push
fsts
add
mov
mov
popa
add
sahf
daa
pop
mov
out
cmp
pop
bound
add
fs
jae
add
repz
add
push
add
add
fdivp
xor
sbb
dec
sbbb
inc
add
pushf
mov
sub
mov
dec
mov
cmpsl
pop
jmp
add
add
pop
or
xor
loope
jbe
movsb
pop
test
rcrl
pop
outsb
test
scas
and
add
add
iret
lds
sub
pop
lods
dec
or
add
divb
add
das
aad
sub
add
inc
pop
cmp
ss
out
inc
pop
sarl
push
push
pop
jecxz
lret
pop
mov
add
lock
daa
pop
pop
and
add
pop
mov
add
add
add
add
popf
add
dec
fbstp
add
ljmp
test
insl
xor
add
add
pushf
sbb
pop
pop
jg
add
sti
mov
or
sub
cmpsl
pop
pushf
cmp
sub
ljmp
push
das
mov
pop
test
lods
xor
mov
aad
sbbb
and
add
add
das
lods
add
add
pop
aaa
int
add
xchg
xchg
jmp
add
mov
jns
not
fmull
dec
test
lahf
mov
or
add
cmp
mov
daa
pop
jle
cmp
sbb
push
repnz
pop
or
rcrl
js
dec
xor
push
push
add
lret
mov
sahf
aaa
test
int3
xchg
test
testb
add
add
inc
add
ljmp
bound
add
add
add
scas
sub
add
out
sub
sbb
dec
push
in
hlt
push
xchg
mov
xchg
pop
jbe
enter
sbbl
push
add
cmp
push
add
dec
mov
jnp
sub
xchg
cmp
aas
in
sbb
aaa
dec
xchg
ja
shlb
sbb
push
add
fdivl
jl
pop
jnp
addr16
mov
pop
call
insb
inc
pop
or
add
addr16
lods
inc
pop
nop
pop
negb
add
add
imul
add
mov
mov
pop
sbb
pop
inc
pop
int
pop
nop
negl
cmp
mov
pop
adc
add
jb
add
push
pop
xor
or
add
adc
add
es
loope
in
repz
push
jecxz
push
pop
jae
add
pop
xor
mov
or
iret
sbbl
lahf
xor
add
lods
mov
pop
sti
push
movsl
pop
mov
std
mov
mov
pop
sbbl
pop
sbb
mov
cltd
xchg
mov
pop
popa
add
adc
stos
xchg
scas
int3
test
add
and
add
scas
fimuls
pop
adc
add
add
add
add
lret
fs
xchg
xor
add
fidivl
xor
add
mov
add
bound
add
add
pop
scas
jle
and
add
add
pop
fs
mov
push
pop
sub
mov
xchg
jmp
pop
stos
bnd
pop
mov
mov
adc
add
fwait
push
sub
bound
add
pop
stos
sbb
add
add
divl
pop
or
mov
jbe
aaa
push
add
fdivr
xor
add
arpl
add
dec
ss
xor
add
pop
insb
pop
repz
cs
inc
add
inc
pop
jae
add
dec
in
cmp
dec
stc
aas
insl
sbb
insb
enter
popa
add
cld
mul
pop
ret
pop
test
ds
pop
rcrb
push
pop
out
ja
test
cmpsb
pop
aam
pop
lret
sbbl
add
gs
fcmovnb
pop
addr16
xor
add
pop
pop
lock
lds
mov
cmpsl
pop
cld
fs
dec
scas
test
pop
push
add
xor
add
add
push
pop
or
pop
sbbl
mov
jl
sbb
sbbb
cmp
lahf
out
mov
scas
adc
add
pop
inc
add
and
add
pop
dec
cld
push
mov
sar
sbbb
add
jne
xchg
fcmovnbe
pusha
add
dec
imul
pop
adc
add
add
add
add
sub
pop
pop
out
inc
pop
push
jle
in
bound
add
add
out
mov
pop
jno
add
add
pop
into
adc
mov
je
pop
add
add
adc
add
test
push
add
in
dec
jae
add
inc
add
mov
pop
lock
je
mov
pop
lods
int
std
bound
add
pop
jle
sbb
add
fisttpll
iret
push
cmp
cmc
dec
add
add
inc
pop
xor
add
pop
xchg
adc
imul
add
popa
add
nop
and
rcrb
loop
sarl
sbb
pop
cmp
jmp
add
add
pop
sbb
mov
movsl
pop
cltd
out
loopne
mov
and
add
rol
pop
xor
add
cmp
add
shlb
movsb
pop
inc
pop
sub
push
xchg
sbb
lret
pop
test
add
in
xchg
sbbl
inc
pop
jbe
pop
adc
add
sahf
jg
movsb
pop
inc
pop
lret
rcrl
push
push
add
rcrl
aas
and
add
sub
rorb
pop
jae
add
pop
and
add
enter
lock
pop
push
add
adc
add
pop
fwait
or
rcrb
jae
add
add
pop
out
loop
xchg
or
add
int
xor
add
mov
pop
mov
fs
xchg
inc
pop
mov
pop
mov
add
pop
sbb
xchg
incl
add
popf
xor
add
jl
add
fildll
dec
lahf
fwait
rcrb
pop
mov
and
add
pop
daa
pop
outsl
mov
sahf
test
pop
lcall
and
add
add
cmp
arpl
add
sub
not
jg
mov
xor
add
repz
pop
dec
or
add
xchg
pop
jecxz
jle
xor
add
pop
pop
out
push
insl
es
pop
in
loope
inc
add
sbb
les
push
sti
cld
stos
fsts
pop
xchg
inc
add
push
add
sbbl
add
pop
decb
std
sub
pop
xlat
ret
jmp
pop
inc
add
pop
mov
pop
inc
add
aas
lds
pushf
out
inc
add
mov
ror
xchg
nopl
add
imul
add
mov
add
push
add
test
sbb
xchg
mov
out
pop
notl
pop
inc
pop
addr16
cmpsl
pop
popa
add
xlat
test
pop
or
add
push
add
popa
add
stos
js
insb
lret
mov
jle
dec
add
or
cpuid
pop
dec
das
leave
inc
pop
aad
jo
add
push
out
clc
sub
add
sub
pop
mov
jo
add
ficoml
inc
pop
push
lods
sub
push
add
and
add
aad
lahf
je
cmpsl
pop
jne
dec
popf
mov
add
add
loopne
cs
pop
call
incb
or
ss
xchg
mov
add
add
cmpsl
pop
jl
pop
notl
enter
enter
inc
pop
pop
out
pop
negb
sub
jge
inc
add
mov
dec
test
pop
xor
mov
add
xchg
shll
add
add
sbbl
or
fsubs
add
dec
out
faddp
pop
icebp
cmp
add
int3
icebp
icebp
xor
add
outsl
or
stos
in
js
pop
jno
add
mov
pop
scas
cmpsl
pop
out
mov
mov
add
push
cmc
lock
cmp
dec
and
add
pop
lret
scas
shlb
add
mov
pop
jle
pop
jg
pop
rcrb
cmp
add
add
pop
xor
add
pop
pop
xchg
pushf
jge
push
pop
jl
pop
sub
inc
pop
es
adc
add
cmp
add
imul
pop
cmpsl
pop
sub
mov
xchg
imul
sbbb
pop
call
sbb
add
inc
add
add
mov
out
dec
push
pop
stos
jge
cmp
stos
and
add
add
pop
idivl
add
mov
pop
mov
add
stos
mov
dec
jg
mov
std
loop
icebp
mov
add
xlat
push
mov
call
or
call
in
add
push
push
call
add
push
call
mov
add
test
jne
jmp
mov
imul
movzbl
shr
push
mov
add
push
mov
push
push
call
push
call
leave
ret
xchg
mov
sub
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
shr
add
jmp
xor
add
sbbl
outsb
and
xlat
js
les
gs
fst
cmp
push
nop
push
ret
cmp
and
add
pop
es
sbbb
mov
sbb
into
pop
test
gs
adc
add
add
mov
add
add
push
add
mov
mov
xchg
popa
add
mov
jmp
xor
add
pop
std
lds
dec
in
pop
sbbb
mov
xor
or
pop
aad
shll
add
into
sbb
jo
jmp
in
ljmp
push
jmp
ret
fists
arpl
add
pop
xor
add
scas
shrl
adc
add
add
or
sbb
out
add
cmp
inc
or
push
mov
mov
stos
daa
pop
sub
xor
add
add
add
xchg
ret
push
out
divl
rcrb
mov
jmp
pop
sbb
idivb
in
mov
mov
fistl
in
push
add
and
sbb
add
add
add
roll
xchg
mov
popf
fadds
add
bound
add
xor
add
cmovge
add
cli
imul
aad
pop
fsubp
pop
int3
icebp
mov
pop
adc
add
repz
push
mov
jmp
pop
arpl
inc
test
pop
test
xchg
xchg
push
cltd
enter
rcrb
addr16
jne
add
xor
add
or
sub
pop
dec
rcrb
mov
adc
cmp
add
cmc
mov
sbb
add
dec
sbb
xor
jle
sbbl
mov
push
pop
in
pop
and
lods
jmp
arpl
add
push
aaa
test
push
add
jmp
add
add
lock
pop
sahf
and
add
fsub
pop
and
add
aas
dec
imul
imul
sub
movsb
pop
insl
aas
fsts
push
nop
push
ret
arpl
add
icebp
cmp
add
jle
add
and
add
jns
lock
add
push
push
mov
fldl
push
mov
add
add
add
sbbb
add
and
add
jne
jmp
sub
push
mov
out
mov
movsl
pop
je
pop
mov
xchg
xchg
enter
mov
mov
pop
lret
xchg
push
into
sub
outsl
and
add
push
sbbb
nop
mov
pop
das
cmp
pop
pop
add
add
ja
cmpsb
pop
jae
add
add
mov
ljmp
je
pop
cwtl
mov
xchg
insb
aas
mov
pop
push
add
sti
xor
add
pop
imul
add
cmpsb
pop
and
add
mov
shll
add
sub
add
push
sub
cmpsl
pop
and
add
pop
mov
add
mov
pop
cmp
add
add
push
jmp
arpl
arpl
std
in
push
pushf
push
add
jmp
push
dec
sti
add
add
div
jmp
pop
inc
cmp
jge
pusha
add
fs
sub
mov
sbb
and
add
add
ret
pop
in
add
add
add
fiaddl
and
add
rorl
mov
add
add
pop
imul
add
xchg
rcll
add
rcrl
cli
jmp
adc
pop
test
imul
pop
in
cmp
dec
inc
add
fisubl
push
pop
pop
add
inc
add
add
add
inc
add
addr16
adc
add
negl
xchg
les
pop
jle
inc
pop
sbbl
add
xchg
inc
pop
test
sbbb
add
pop
fimull
pop
push
jo
add
pop
outsb
inc
pop
push
ret
pop
sbb
push
aad
ret
loope
mov
add
aad
dec
sub
lods
sbb
scas
outsl
les
add
clc
and
add
into
inc
pop
cmp
push
add
add
add
pop
js
mov
lea
inc
add
pop
pop
push
daa
pop
fbld
xor
add
add
nop
add
add
pop
and
add
and
add
pop
rcrl
mov
adc
add
adc
or
add
call
jmp
aam
arpl
test
pop
ret
pop
xor
add
divl
add
sbb
mov
add
inc
arpl
push
add
cwtl
mov
inc
pop
sub
pop
call
nop
push
ret
fstps
rcrl
push
dec
jb
add
pop
push
ds
cmc
lahf
cld
dec
push
cmc
testl
add
pop
mov
mov
add
or
repz
add
jmp
sti
addb
add
test
add
shrl
jmp
pop
pop
and
add
cmovg
push
add
jg
arpl
add
into
out
xchg
fsts
cmp
pop
sarl
sbbb
cmp
repz
lods
jne
pop
xchg
pop
mov
add
mov
fwait
ret
scas
jae
add
int
pop
adc
add
add
pop
cmc
sub
add
jne
cmp
xor
pop
jp
dec
movsb
pop
cmp
jnp
pop
ds
cmp
pop
rcrb
pop
fisubs
pop
dec
push
in
js
pop
add
into
push
add
popa
add
sti
push
jno
add
gs
call
sub
mov
add
add
sub
out
es
stc
sti
jne
pop
or
pop
arpl
add
xor
add
pop
mov
add
lcall
add
imul
add
mov
jp
add
adc
loopne
add
add
push
add
jmp
cmpsl
pop
fcmovnb
pop
js
jno
add
pop
push
pop
rol
pop
mov
dec
test
add
inc
push
pop
sbb
jp
pop
mov
pop
mov
lcall
inc
add
bound
add
repz
add
jo
add
add
adc
add
or
pop
test
cmp
xchg
mov
test
mov
xchg
inc
add
add
add
adc
add
rcrb
mov
pop
add
add
cmc
test
movsb
pop
and
add
and
add
fcomi
mov
cmp
jb
add
pop
xchg
jecxz
push
xchg
mov
sub
add
int3
stc
cwtl
cmp
add
adc
or
pop
cmc
imul
add
pop
pop
inc
add
jmp
pop
and
sbb
mov
sarb
pop
pcmpgtw
pop
enter
or
add
add
ja
aas
cld
into
fs
cmp
mov
outsl
rclb
xchg
cmp
cwtl
mov
in
rclb
mov
fcmovnbe
push
push
sub
xor
add
shlb
add
mov
mov
jmp
inc
and
ret
pop
jne
movsb
pop
and
add
pop
fistpll
ljmp
add
das
call
pop
fcmove
mov
mov
pop
inc
add
xchg
add
mov
add
aaa
arpl
and
rcrl
sbb
imull
mov
mov
lea
add
mov
xor
mov
pop
jnp
adc
add
add
pop
sub
sbb
jmp
out
arpl
pop
out
scas
mul
pop
cmp
in
mov
ret
pop
xor
pop
ds
hlt
add
add
dec
jge
push
add
adc
or
sub
push
addl
pop
arpl
jne
cmp
add
jp
nop
or
and
add
dec
outsl
mov
call
decl
add
adc
mov
xchg
test
pop
pushf
ret
pop
mov
add
add
pop
sbb
and
add
cmc
sub
pop
xchg
pop
pop
push
rcrl
xor
add
pop
std
sbbl
add
xchg
ret
pop
push
add
xor
add
pop
jae
add
xchg
stos
adc
add
pop
cmpsb
pop
inc
pop
sub
push
gs
or
add
jge
push
pop
xchg
daa
pop
and
add
jne
add
jmp
or
fildll
add
test
pop
sti
aaa
imul
das
popf
sbb
sbbb
test
add
pop
push
add
cmp
xchg
sti
mov
aad
pop
inc
pop
int
ret
pop
fwait
sbbb
mov
stos
push
rcl
gs
xor
add
sbbb
pop
pop
push
mov
lock
pop
mov
push
and
add
into
loope
daa
pop
loopne
testb
adc
add
pop
aas
rcrl
outsl
xchg
mov
pop
pushf
xor
add
in
lods
push
gs
push
add
dec
arpl
pop
arpl
outsb
or
jg
loop
fsubrl
and
shll
cmc
push
in
mov
jge
enter
pop
scas
add
ljmp
cmp
mov
add
div
or
xchg
jl
pop
aas
daa
pop
shrb
jle
pop
jo
add
je
pop
sub
jmp
flds
pop
push
add
in
pop
insl
and
add
pop
sub
test
fs
lods
lret
es
dec
popf
xchg
je
jmp
arpl
sbb
jmp
adc
pusha
add
xchg
fsubp
pop
imul
add
push
arpl
inc
add
jne
jmp
add
add
add
mov
testl
xchg
inc
pop
add
push
int3
movsl
pop
rcrb
xchg
adc
add
add
add
std
add
add
add
xchg
inc
add
rcrl
cmp
pop
icebp
mov
pop
call
lret
dec
aam
jge,pt
add
decl
xchg
add
adc
fs
ljmp
mov
nop
push
ret
sbb
pushf
enter
insb
pop
mov
add
add
add
mov
sahf
fs
neg
add
add
pop
jecxz
fadds
add
dec
mov
pop
add
add
inc
add
aaa
push
dec
rcrb
dec
xchg
jnp
add
pop
repz
ja
ret
pop
pop
sub
push
add
arpl
ds
cmc
ret
lcall
add
add
add
arpl
mov
push
lret
lret
fstl
add
and
add
mov
mov
dec
or
add
add
sahf
push
add
in
mov
sbbl
add
aaa
pop
enter
leave
test
dec
cli
int
add
and
scas
rcll
add
cs
stc
aaa
push
add
add
add
mov
iret
pop
pop
mov
pop
xchg
adc
add
cwtl
fnstenv
ret
pop
aad
dec
jle
add
mov
add
xlat
mov
cwtl
fucomip
dec
lret
add
add
add
bnd
pop
pop
fstpl
or
pop
cmp
in
jg
cmp
mov
jmp
push
sti
les
pop
pop
repz
sahf
cmp
mov
pop
mov
inc
pop
and
add
or
gs
cmp
xchg
and
dec
ljmp
stos
mov
es
jl
or
lods
inc
add
ja
inc
pop
lock
xor
add
sub
add
dec
inc
add
sti
scas
dec
cmp
fwait
rcll
cmp
mov
das
pop
xchg
fucomip
outsb
decl
jo
add
sub
arpl
sbbb
push
add
pop
out
mov
les
add
xchg
ror
adc
add
xor
add
add
cmp
inc
add
addr16
ja
aad
repnz
insl
adc
add
adc
add
add
add
into
rcrb
icebp
int3
mov
pop
jo
add
dec
push
add
xchg
adc
arpl
int
std
jmp
lcall
hlt
sbbl
bound
add
es
add
add
arpl
add
add
scas
sub
in
push
add
jmp
arpl
outsl
dec
sbb
es
sbb
hlt
daa
pop
into
xchg
pop
add
add
add
or
add
in
lds
and
add
xchg
lds
and
add
mov
mov
pop
sbb
pop
sub
jno
add
add
sahf
or
jmp
jmp
mov
add
jo
add
adc
push
add
cmc
sbb
lahf
dec
sbb
or
push
shl
mov
cwtl
sbb
neg
sub
pop
stc
pop
in
add
cmp
pop
lock
add
pop
ret
sbb
inc
add
test
ljmp
sub
mov
in
sub
add
aaa
push
add
or
push
add
arpl
xchg
dec
sub
adc
add
pop
scas
test
jl
adc
add
je
push
sbb
mov
add
sti
inc
pop
jle
fstl
add
sub
pop
pop
fs
mov
add
sahf
jno
add
push
mov
jmp
arpl
pop
fists
add
enter
xor
add
out
mov
pop
mov
adc
pop
popa
add
jge
aas
cwtl
bound
add
add
pop
xor
imul
jl
jmp
push
imul
gs
xchg
pop
jo
add
pop
stos
inc
add
bound
add
insl
mov
add
xor
add
pop
cmpsl
pop
sbbb
sub
loope
into
cmp
pop
add
add
pop
sub
pop
pop
add
add
push
push
ljmp
pop
push
jmp
xchg
in
adc
sar
push
add
adc
shll
pop
mov
cli
sub
push
add
mov
add
jmp
std
lods
lret
repnz
add
leave
sub
add
add
arpl
sub
push
adc
ljmp
inc
add
out
in
pop
mov
pop
test
mov
add
popf
mov
pusha
add
sbbb
jmp
cmp
push
cmp
add
cmpsb
pop
inc
add
mov
xor
add
mov
add
lcall
add
jmp
fbld
xchg
scas
xor
add
pop
jb
add
adc
add
inc
pop
cli
push
add
sub
add
add
pop
adc
add
cmpsb
pop
loopne
add
add
push
mov
add
out
adc
shrl
es
shl
inc
add
sub
fwait
loope
cltd
inc
add
cmpsl
pop
sbbb
es
aad
add
add
add
add
out
mov
and
add
xor
add
add
sbb
dec
or
addr16
xchg
mov
in
add
pop
test
out
mov
ds
cmp
push
add
bound
add
je
add
cs
mov
xchg
cld
loopne
lret
mov
shr
das
out
push
add
add
add
add
add
pop
push
jg
pop
adc
add
add
filds
add
jecxz
mov
mov
inc
pop
mov
scas
rcrb
pop
push
push
ret
jp
sbb
add
add
pop
mulb
arpl
add
stos
test
mov
add
test
pop
cmp
fs
and
add
jo
add
pop
sub
aad
pop
int3
mov
jno
add
cs
mov
fidivrs
pop
mov
pop
cmp
int
pop
out
aam
clc
les
pop
cmpsl
pop
ret
pop
xor
add
out
xor
pop
sbb
add
loop
in
test
pop
dec
jae
add
pop
xchg
adc
add
aam
add
push
add
push
hlt
stc
rcrl
add
sbb
pusha
lcall
inc
push
pop
popa
add
in
shll
add
lock
add
pop
inc
add
fwait
jp
push
add
rcr
pop
mov
add
jbe
lahf
fistps
stos
ret
pop
pop
pop
or
repz
aam
pop
push
add
fwait
jo
add
loop
sub
negb
push
js
outsb
dec
xor
add
add
clc
sbb
push
sbb
sbb
cmpsl
pop
inc
add
xor
add
add
adc
add
push
mov
add
pop
xor
add
cmp
test
sub
cmc
sub
add
fisubrs
xchg
lods
movsb
pop
popa
add
push
add
gs
xor
add
add
add
aaa
es
jb
add
mov
add
jo
add
and
add
add
scas
mov
add
scas
outsl
sbb
int
add
popf
jo
add
lcall
push
add
mov
lods
cmp
xor
nop
push
ret
in
jne
pop
iret
sbb
shlb
add
mov
ss
pop
add
add
sbb
inc
add
in
and
xchg
out
leave
jns
add
ja
add
out
pop
push
adc
add
pop
sahf
sub
pop
dec
pop
jecxz
xor
pop
movsb
pop
xor
add
sub
pop
loope
cmc
jmp
xchg
dec
sbbb
dec
lods
push
ret
mov
jo
add
add
add
add
xchg
arpl
dec
subb
push
add
nop
push
ret
arpl
push
jmp
pushl
xor
out
sbb
imul
add
adc
add
push
add
jmp
dec
and
out
cmp
cmp
jb
add
pop
add
add
xor
add
add
icebp
jmp
xchg
push
adc
add
es
or
pop
scas
bound
add
pusha
nop
push
ret
dec
pop
arpl
add
pop
push
add
mov
add
pop
pop
divl
jae
add
lcall
pop
mov
je
in
sbb
pop
push
pop
cmp
add
popf
push
push
jmp
fs
and
add
add
dec
je
in
mov
inc
pop
push
xor
add
add
add
imul
ljmp
xor
inc
pop
pop
in
sahf
loope
fistpl
lods
mov
add
sbb
insl
int3
adc
add
scas
fwait
push
cmpsl
pop
cmp
inc
adc
adc
add
pop
or
xchg
int3
incl
repz
into
cmpsl
pop
enter
pop
lods
js
pop
jae
add
add
dec
sub
mov
add
pop
inc
pop
add
lods
fs
mov
add
pop
fcompl
pop
xchg
icebp
sbb
pop
and
add
adc
add
push
add
mov
pop
rcrl
push
xor
jmp
push
add
add
sbb
and
add
pop
pop
sbb
aam
pusha
add
aam
add
sbb
mov
mov
pop
inc
add
dec
pop
mov
fisttpll
pop
fisttpl
sbb
leave
in
ret
pop
or
fcoms
add
push
lea
jmp
arpl
arpl
jnp
insl
adc
add
push
add
mov
jp
add
jmp
pop
loopne
sub
add
cs
imul
icebp
jne
dec
ret
pop
sub
lret
cld
cmp
out
dec
mov
cmovle
test
add
jmp
pop
adc
add
cmp
insb
or
pop
pop
pop
add
jns
mov
add
jns
imul
pop
aaa
das
into
fwait
and
add
add
aaa
cmpsl
pop
imul
add
mov
pop
jmp
pop
pop
add
sbb
bound
add
sub
cmp
pop
call
add
xor
add
mov
pop
sbb
mov
pop
xrelease
fwait
or
daa
pop
push
pop
enter
in
add
scas
add
gs
add
xor
add
cmp
add
add
add
dec
movsl
pop
movsl
pop
lret
inc
pop
jb
add
add
jmp
arpl
arpl
mov
mov
jmp
add
xor
pop
nop
mov
fstp
cwtl
push
cmp
je
adc
gs
xchg
pop
into
cmp
pop
jne
pop
mov
pop
adc
add
cmpsb
pop
or
jns
push
add
lcall
pop
sub
fwait
dec
mov
pop
adc
pop
mov
add
ret
pop
dec
imul
and
add
std
out
jmp
mov
mov
hlt
outsb
inc
pop
rcrb
pop
xchg
add
test
jnp
pop
mov
outsl
int
pop
lock
cmpsb
pop
lods
dec
jge
cltd
jge
pop
sbb
pop
ror
aaa
mov
lret
gs
aas
inc
pop
adc
or
popf
cmp
lahf
icebp
add
add
add
ret
pop
ds
nop
aas
jmp
mov
add
push
add
loop
sbb
rolb
add
add
mov
jmp
andb
and
test
pop
jo
add
pop
push
pop
sbb
pop
in
popa
add
pop
fwait
pop
aas
mov
cmc
pushf
lods
pop
insl
xor
add
add
in
xchg
negb
pop
push
jmp
xchg
out
or
arpl
add
add
popf
add
sbb
daa
daa
mov
sbb
loope
ret
pop
lcall
mov
add
jp,pt
pop
pusha
add
stc
mov
add
add
or
add
mov
push
cmp
add
inc
pop
xchg
inc
add
int3
dec
mov
add
imull
adc
add
add
add
inc
add
cli
mov
pop
bound
add
stc
mov
pop
xchg
icebp
fs
xor
fldenv
leave
icebp
xchg
lds
and
stos
cs
jno
add
pop
adc
cwtl
lahf
mov
pop
movsl
pop
test
dec
mov
cmp
add
sbb
mov
daa
out
outsl
inc
add
test
je
pop
push
add
xchg
rcrl
jb
add
fwait
adc
add
or
sti
scas
ja
pop
imull
mov
sub
std
sub
add
dec
into
popf
rolb
lds
add
push
jne
jmp
arpl
push
add
dec
sub
in
fdivrl
push
pop
cmpsl
pop
lcall
add
shr
sbbl
jmp
jmp
arpl
in
rolb
add
add
ja
mov
add
sbb
inc
pop
inc
add
scas
test
negb
test
sahf
faddl
add
add
out
xchg
jle
pop
pop
cwtl
dec
setne
sub
add
fsts
pop
stos
cwtl
sbbl
insl
shrb
mov
sub
out
sbb
pop
sbb
gs
xor
add
add
add
add
mov
pop
jmp
cwtl
or
inc
add
sbb
sti
inc
add
in
out
out
je
jns
add
cli
sbb
xchg
add
enter
cmp
push
jmp
pop
pushf
sub
pop
daa
jnp
pop
jae
add
add
pop
sbb
jp
sub
add
clc
in
mov
lods
mov
pop
xchg
jmp
into
loope
push
add
pop
popf
mov
and
add
or
popf
sub
call
andb
add
sub
pop
mov
add
les
xor
add
add
xchg
xchg
add
xlat
in
mov
dec
sub
pop
insb
adc
adc
add
pop
inc
add
jo
add
jecxz
dec
rcrb
cmp
mov
stc
sbb
pop
pop
shll
pop
pop
in
xchg
push
pop
sub
add
push
xor
add
mov
add
daa
pop
dec
in
mov
add
pop
mov
aad
sub
jmp
sbbl
push
std
int3
add
add
dec
int
add
sbb
add
xlat
pop
mov
pop
pop
mov
lea
jo
add
xor
add
add
push
add
mov
jmp
mov
lahf
pushf
push
add
xlat
or
js
test
pop
rcll
add
pop
push
pop
jae
add
xor
add
mov
jnp
jp
add
cmp
mov
jmp
push
into
pop
add
xchg
lods
stc
xor
add
add
mov
pop
mov
sbb
cmp
add
lods
inc
add
mov
push
mov
aam
pop
in
out
test
add
adc
add
add
loop
push
add
fiadds
adc
add
pop
or
pop
pop
ds
cli
or
insl
and
lock
xor
sub
mov
add
jmp
out
sub
repnz
xchg
inc
add
push
aad
ret
pop
ds
pop
aam
mov
or
pop
and
add
add
daa
pop
pop
test
sub
inc
pop
fldt
mov
add
jecxz
sbb
rol
pop
stc
rcrb
add
jo
add
or
add
dec
push
cmp
pop
cmp
add
imul
inc
add
mov
call
ret
pop
mov
pop
xchg
adc
add
sarl
dec
add
add
sbb
repnz
in
daa
pop
hlt
lret
pop
cmpsl
pop
push
jo
add
pop
add
add
aaa
lods
pop
or
daa
pop
push
test
jmp
adc
mov
xor
inc
push
adc
loop
add
inc
arpl
add
pop
add
pop
push
xor
add
mov
jp
sbbl
add
pop
cwtl
int3
pop
fcompl
add
lret
pop
sub
or
scas
das
rcrb
icebp
push
pop
icebp
jb
add
negb
add
add
cwtl
dec
sbb
push
jmp
xor
dec
cmp
stos
jmp
xor
outsl
cmp
dec
js
ss
add
int
pop
inc
pop
pop
fsubp
pop
jecxz
push
pop
add
add
add
add
out
pusha
add
cli
xchg
ja
mov
add
add
mul
pop
out
lock
jo
add
out
jmp
inc
pop
stos
rcrl
mov
dec
jmp
rcl
mov
add
fisubrs
mov
dec
mov
mov
jmp
pushf
arpl
adc
add
sub
add
mov
pop
popa
add
pushf
or
add
add
fsubs
add
les
aaa
lret
cltd
or
adc
add
add
pop
pop
mov
pop
sub
test
mov
add
pop
cmp
pop
jae
add
add
add
sbb
pop
cmpsb
pop
rcrb
push
pusha
add
cmc
fisubl
rcll
mov
jl
loope
xlat
sub
out
aam
stos
lcall
pop
cltd
mov
in
je
add
pop
fs
or
mov
pop
mov
dec
nop
outsb
pop
mov
cmp
pop
decl
mov
adc
jbe
add
adc
rcrl
fs
ja
mov
jmp
arpl
cmp
cwtl
pop
xlat
add
add
add
bound
add
add
lods
scas
sbb
pop
stos
mov
pop
pop
xchg
sar
mov
sbbb
add
pop
shll
mov
add
leave
cltd
add
push
into
arpl
mov
test
add
mov
clc
ss
pop
xchg
push
imul
rcrl
fs
repnz
or
inc
pop
mov
insl
sbb
dec
jp
and
add
add
pop
in
sbb
or
shr
push
add
mov
pop
cld
jg
add
mov
jmp
push
fcoml
daa
pop
xchg
add
leave
clc
or
add
pop
push
mov
jmp
arpl
push
sti
push
loopne
scas
xor
add
pop
jp
ret
pop
das
sbbl
mov
or
pop
mov
scas
fs
mov
sbb
rcrl
dec
js
pop
mov
push
add
mov
sti
adc
add
mov
push
jmp
dec
cmpsl
inc
xor
dec
mov
add
or
push
sbbl
add
push
pop
sub
add
cmp
add
jmp
andb
mov
or
rcrb
jne
jmp
mov
das
cmp
push
jle
iret
enter
jo
add
faddl
add
cmp
pop
pushf
jle
inc
pop
adc
dec
out
popa
add
dec
mov
lds
sbbl
in
sbb
add
jmp
push
mov
jmp
fs
repnz
xchg
aas
or
add
push
add
xor
jne
add
inc
add
pop
into
lcall
add
add
lds
pop
pushf
or
pop
das
add
pop
fnstsw
cmpsb
pop
jnp
xor
add
cmpsb
pop
outsb
clc
clc
loope
push
mov
sbb
fsubrp
arpl
add
pop
dec
arpl
mov
out
lahf
xchg
das
mov
addr16
xor
add
add
add
dec
idiv
jg
or
push
mov
dec
dec
push
add
repnz
add
loop
xchg
pop
xchg
adc
add
cmpsl
pop
push
pop
int3
cmp
add
sbb
pop
scas
and
jecxz
pusha
add
mov
stc
pop
pop
or
imul
fisttpl
mov
ret
adc
pop
sbbl
pop
ds
add
test
pop
mov
jge
in
cmp
test
fstl
add
lods
sti
dec
jns
pop
mov
add
pop
cmp
pushl
nop
push
ret
and
pop
xor
add
sbb
mov
sbb
add
or
pop
mov
add
stos
dec
mov
sbbl
pop
push
mov
movsl
pop
and
add
add
jb
add
fwait
sbb
dec
mov
xor
add
add
pop
jbe
lret
pop
pop
pop
push
sbbl
xchg
push
les
sbb
pushf
bound
add
add
pop
inc
pop
jno
add
aaa
pop
and
add
add
movsl
pop
push
mov
aam
das
cmc
in
jnp
add
pop
aaa
in
pop
movsl
pop
xchg
jge
add
mov
dec
and
outsl
stos
jb
add
mov
ljmp
add
pop
jmp
hlt
dec
pop
pop
mov
popa
add
fwait
jecxz
call
pop
gs
xlat
or
add
dec
dec
es
mov
inc
pop
das
adc
add
push
add
sbbb
pop
mov
pop
inc
add
bound
add
scas
pop
lcall
addr16
sbb
pop
std
imul
add
push
cmp
push
enter
xchg
pop
cmpsl
pop
mov
pop
in
mov
arpl
add
add
mov
pop
mov
pop
push
add
inc
pop
ss
ljmp
js
sahf
mov
test
es
mov
pop
imul
add
icebp
mov
lret
fst
scas
push
add
lret
push
mov
pop
jge
sbbl
inc
pop
loopne
cwtl
cmpsl
pop
icebp
bnd
xchg
iret
or
pop
jno
add
cmp
add
dec
mov
jmp
arpl
arpl
fistpl
mov
add
push
leave
dec
arpl
add
jmp
adc
add
pop
jecxz
dec
xchg
pop
sbb
in
add
cwtl
add
pusha
add
push
add
mov
lods
out
lcall
xchg
ljmp
ds
pop
jp
sub
adc
pop
in
mov
add
pop
in
jne
pop
je
pop
divps
adc
add
pop
dec
jg
pop
jmp
add
add
add
add
push
add
daa
pop
or
pop
std
in
or
int3
cmp
in
xlat
mov
sub
ljmp
hlt
fcoml
add
jae
add
insl
sbb
mov
add
or
rcll
add
sbb
js
add
inc
pop
test
add
ljmp
and
add
pushf
ljmp
nop
push
ret
aaa
cmpsl
mov
or
testl
pop
out
popf
std
jmp
add
pop
lahf
mov
pop
adc
add
add
adc
add
pop
adc
pop
sbb
push
push
pushl
jmp
jp
xor
sbb
mov
nop
fnstcw
dec
jge
icebp
jp
mov
sub
push
pop
jmp
cmc
arpl
sbb
out
jmp
jmp
add
ljmp
cmpsl
pop
in
and
add
add
xchg
test
jmp
outsl
push
pop
arpl
pop
stos
or
pop
pop
fsubrp
mov
add
ja
lods
loopne
bound
add
pop
dec
sbbl
mul
pop
xor
add
int
pop
imul
mov
aam
nop
inc
add
and
add
pop
xlat
sub
add
pop
and
add
add
push
add
aas
cwtl
ljmp
mov
das
cld
fildll
leave
sub
xlat
jecxz
loope
xor
add
pop
loope
jmp
push
in
jg
add
mov
cmp
pop
cmc
push
add
pop
mov
add
ds
adc
sbb
pop
test
mov
xor
add
xor
jl
dec
and
add
jecxz
mov
adc
add
push
xchg
ret
pop
insb
cltd
jo
add
pop
std
rcrl
fldt
sub
push
add
lds
or
push
xchg
add
push
mov
add
mov
insl
je
or
test
mov
call
iret
iret
addr16
aas
inc
add
pop
cmp
adc
add
add
pop
fnstcw
mov
jmp
ret
mov
xor
shlb
push
mov
jmp
or
pop
aaa
flds
add
pusha
add
pop
adc
or
add
cmp
pusha
add
sub
shll
add
out
int3
je
add
rcrb
and
add
xchg
dec
les
pop
add
add
add
dec
sbbl
pop
test
pop
aas
pop
dec
fisubs
add
pop
push
insb
jmp
add
add
leave
loop
incl
push
bound
add
loopne
mov
outsb
cwtl
mov
das
mov
ljmp
xchg
cld
les
scas
or
xor
sbb
inc
pop
fstl
add
sub
cmp
jl
pop
sbb
mov
jmp
push
dec
inc
pop
loope
xchg
rcll
push
pop
add
cmc
loop
cmpsb
pop
nop
ja
ret
pop
scas
mov
push
jmp
mov
adc
pop
rcrl
pop
xor
add
add
jmp
aaa
dec
dec
arpl
pop
pushf
mov
cli
addr16
push
add
movq
jmp
mov
cmpsl
pop
insl
ds
dec
adc
xor
and
add
cltd
mov
mov
repz
push
mov
pop
inc
add
jp
pop
int3
cltd
jb
add
jmp
pushf
and
sub
add
lds
aaa
repz
sbbb
jmp
add
add
repnz
xor
int3
clc
mov
mov
xor
add
add
jmp
cmc
dec
push
arpl
add
push
add
xchg
or
xchg
ror
js
js
fbstp
movsl
pop
mov
add
add
add
add
jge
pinsrw
dec
mov
jecxz
mov
pop
xchg
dec
mov
add
pop
adc
add
outsb
push
mov
add
inc
add
bound
add
add
aam
pop
lret
push
adc
xchg
addl
or
add
in
fnsave
and
add
xor
add
pop
rolb
inc
pop
mov
incb
call
add
pop
stos
js
add
xchg
aaa
and
add
push
add
enter
pop
lods
jb
add
add
mov
add
out
cmpsb
pop
cwtl
stos
mov
gs
adc
pop
mov
xchg
and
add
sub
das
push
imul
imul
and
add
add
inc
add
loope
dec
push
add
add
add
cmpsl
pop
insb
cmp
pop
pop
sahf
iret
out
jne
push
nop
push
add
sbb
pop
cmp
gs
and
add
sbb
addr16
sti
jg
cmp
mov
je
pop
pop
sbb
sbb
add
lods
mov
add
pop
fimuls
pop
xor
add
add
pop
arpl
add
inc
add
lcall
push
es
arpl
add
add
out
in
push
gs
cmc
cmc
dec
jae
add
fstpt
adc
add
sub
add
fcmovnb
pop
dec
sbbb
add
add
and
add
pop
int
pop
sahf
fdivrl
rcrb
pop
mov
xor
add
lret
pop
loope
jno
add
faddl
pop
imul
ljmp
shr
repz
jmp
andb
pushf
loope
fidivrl
lods
shll
add
adc
add
stc
ljmp
repz
lret
xor
add
jmp
pop
jno
add
pop
xor
add
scas
fisubrs
shr
outsb
add
pushf
in
arpl
jo
add
add
or
add
imul
pop
and
add
sbb
pop
xlat
pusha
add
iret
ljmp
or
push
arpl
pop
fmull
add
je
jno
add
add
mov
mov
pop
loop
mov
add
pop
sub
add
push
pop
leave
pop
sbb
sub
pop
push
add
mov
add
sbb
enter
and
add
aad
lret
fadd
pop
loop
pop
pop
adc
add
pop
les
fcomip
xlat
sbb
pop
or
pop
push
test
outsb
mov
repnz
push
cli
pop
xchg
mov
mov
mov
mov
dec
test
push
fistpll
loope
sbb
pop
imul
pop
sbbb
add
mov
loop
test
jnp
pop
inc
pop
bound
add
loope
into
maxps
dec
mov
pop
mov
fcoml
pop
adc
add
cld
outsl
mov
and
add
push
test
jmp
dec
aam
add
in
xor
add
pop
das
std
pop
pop
hlt
sbbl
mov
pop
mov
adc
add
push
ret
cmpb
int
dec
pop
push
push
add
inc
pop
and
imul
add
in
setno
inc
jmp
xor
mov
pop
dec
imul
daa
pop
mov
add
in
lods
xchg
les
scas
inc
pop
negb
mov
aaa
cmpsb
pop
sbb
or
and
jmp
dec
cmc
inc
add
leave
jo
add
scas
lds
lds
cli
pop
mov
loope
rcrl
inc
add
and
add
pop
cli
sbb
pop
mov
pop
xor
add
stos
repnz
inc
add
push
jecxz
pop
pop
int3
xchg
add
adc
add
add
dec
dec
int3
faddl
lods
xor
add
sbbb
add
add
fisubs
and
add
pop
outsb
cmp
je
jmp
push
adc
add
pop
lret
inc
add
mov
mov
jmp
jne
loope
sbb
push
imul
add
lahf
xchg
aad
or
insl
hlt
add
add
add
adc
add
bound
add
pop
lret
push
add
imul
repz
add
dec
out
mov
shl
pop
xor
add
add
loop
jge
sbbb
fs
fsubl
pop
push
jl
add
ret
pop
pop
inc
add
js
sub
pop
pop
sub
add
cmpsl
pop
inc
pop
fdiv
mov
or
push
add
xchg
pop
and
add
stos
into
jg
pop
popa
add
inc
add
and
add
or
mov
pop
shrb
add
pop
pushf
insl
shrl
jmp
add
push
rcrb
stos
fsub
pop
xchg
dec
out
jnp
out
lds
aaa
lods
stos
sub
add
add
add
pop
cmc
jnp
sbb
decl
cmc
jp
cwtl
mov
mov
pushf
call
sbbl
pop
sub
aad
add
cmpsl
pop
insl
add
add
pop
jb
add
stc
sbbl
and
add
pop
imul
add
sbb
pop
fsubrs
mov
fstp
inc
pop
mov
cmp
mov
notb
add
sbbl
jmp
into
inc
jp
daa
dec
hlt
out
ss
xchg
jae
add
sub
lcall
pop
xor
add
pop
iret
stos
pusha
add
mov
add
loop,pt
jl
adc
add
test
add
aaa
xchg
mov
mov
nop
push
ret
arpl
inc
pop
stos
mov
add
es
sub
add
ret
dec
into
dec
push
cmpsl
jbe
setp
add
or
push
test
pop
sbb
xor
sbb
push
aad
lcall
push
push
out
add
and
mov
sub
add
dec
and
add
pop
pop
leave
push
add
jno
add
jno
add
pop
cmp
or
push
jmp
lods
ds
fldenv
out
or
cmp
movsb
pop
dec
insl
cmp
mov
and
out
push
jbe
lahf
loopne
out
inc
pop
mov
in
pusha
add
roll
out
mov
add
mov
add
or
in
fstps
inc
pop
xor
add
push
pop
pop
adc
add
jmp
rorb
add
frstor
add
dec
push
push
mov
lret
adc
fwait
lds
push
jbe
rcrl
mov
add
pop
mov
sub
pop
push
add
out
mov
loop
xor
movsl
pop
xchg
into
or
repnz
bound
add
pop
mov
or
scas
insb
hlt
sbbl
xor
add
add
pop
adc
add
pop
sbb
mov
jo
add
add
out
out
rcrl
cmc
sbb
mov
in
mov
movsb
pop
lret
out
int
sbbb
add
mov
inc
add
sbb
pop
sbbl
add
pop
jmp
and
mov
add
lds
add
std
jae
add
add
add
mov
loop
pop
jp
add
test
lcall
xchg
fwait
lcall
clc
pop
mov
das
cwtl
stos
out
out
sbb
fwait
jp
pop
mov
insl
nop
push
add
push
sub
lock
bound
add
out
mov
add
cmp
les
dec
bound
add
popa
add
sub
ret
add
mov
push
into
add
add
add
pop
dec
loopne
fadd
pop
das
rcrb
add
and
add
daa
pop
or
gs
adc
add
add
add
add
fstps
dec
je
div
dec
js
cld
add
movsl
pop
add
int
adc
add
pop
jbe
add
jmp
ret
in
add
add
push
add
jb
add
pop
stc
popf
or
pop
mov
jp
pop
pop
insl
inc
add
pop
cld
loope
inc
pop
insb
add
add
add
mov
add
add
xchg
sbb
add
dec
push
pop
sti
pop
pop
dec
pop
sub
add
nop
sarb
sub
add
pop
mov
aas
mov
add
push
xor
add
mov
les
add
pushf
bound
add
imull
add
sbb
inc
pop
pop
pop
fwait
ja
and
mov
pop
or
add
test
xor
nop
push
ret
sbb
outsl
sbbl
add
sti
push
out
mov
pop
stc
pop
add
mov
pop
inc
pop
int
pop
sahf
rclb
add
inc
pop
dec
das
pushf
aas
stos
adc
add
push
add
ficompl
pop
lods
mov
sahf
das
ja
lret
add
push
add
fcmovu
hlt
aaa
lret
add
test
popa
jmp
xchg
ds
lods
pop
and
add
add
sbbl
add
popa
add
movsb
pop
mov
add
loope
jle
popf
adc
add
jp
in
push
add
lahf
mov
cmp
push
mov
add
xor
outsl
aas
repnz
add
sbb
repz
dec
xor
add
dec
stc
sub
and
add
test
pop
jle
mov
add
xchg
divb
xchg
loopne
repnz
jmp
add
and
add
loope
sbb
xchg
mulb
add
and
add
mov
jmp
into
arpl
arpl
cmp
cmp
iret
mov
add
es
test
inc
pop
loop
or
movsl
pop
dec
mov
lock
mov
jmp
jne
xor
pop
jle
test
pop
mov
pop
sub
pop
xchg
jne
pop
out
bound
add
pop
dec
lods
push
add
lret
sub
aam
add
dec
test
pop
jno
add
pop
xor
add
and
add
add
pop
dec
or
pop
sub
enter
popf
xor
add
cld
cmp
adc
add
add
mov
sar
test
dec
sub
sbbb
ja
push
pop
stc
test
sarb
fisubrs
stos
cwtl
add
jmp
sbb
fs
enter
add
pop
and
adc
add
mov
pop
cmp
cmp
xlat
push
lahf
mov
push
pop
xor
dec
jl
pop
lret
jecxz
addr16
sub
imul
lret
sbb
pop
into
sub
pop
pop
cmpsb
pop
jmp
jb
add
pop
ret
pop
pop
clc
in
pop
push
add
aas
mov
pop
pop
push
pop
mov
rcrb
nop
sub
add
out
inc
add
sub
pop
or
xlat
sti
jmp
xchg
jns
add
add
outsb
add
add
pop
xchg
push
dec
jg
lods
xchg
or
icebp
fisttps
aad
xor
add
cmp
add
mov
insb
mov
mov
add
mov
add
add
pop
out
mov
es
push
add
jecxz
insl
pop
iret
adc
add
pushf
add
add
movsb
pop
sbbl
repnz
jno
add
and
sti
test
cmc
lds
cli
addr16
inc
pop
loop
or
pop
jmp
xchg
xchg
mov
inc
add
scas
repz
mov
add
dec
mov
xchg
mov
pop
bound
add
add
lahf
pusha
add
push
pop
rorb
or
or
pop
lds
push
add
stos
cld
sbbl
cmp
add
pop
imul
push
sub
cli
xchg
popa
add
mov
jne
pop
xchg
adc
add
add
arpl
xchg
cmpsb
pop
add
add
pop
ficoms
dec
sti
sbb
test
fdivrp
jmp
enter
add
sbb
lcall
lret
add
out
ss
pop
mov
pop
sbb
fsubrl
jl
xchg
pop
pop
out
xchg
gs
nop
sbb
pop
ret
add
cli
call
mov
mov
imul
add
mov
fld
pop
pop
stos
or
add
dec
dec
aas
push
xor
in
cmp
push
jmp
and
arpl
dec
pop
movsl
pop
jecxz
adc
add
xlat
ret
pop
push
pop
nop
insl
jge
adc
add
imul
pushf
test
imul
pop
std
rorb
mov
jmp
add
dec
aaa
or
mov
sbb
pop
xlat
scas
or
pop
jnp
add
add
add
push
add
cmc
add
pop
and
pop
add
xchg
add
push
add
icebp
cmp
pop
lea
add
pop
incb
add
jp
in
or
push
mov
add
jmp
sub
loop
flds
add
push
add
into
xor
sbb
dec
xchg
ficompl
add
gs
les
push
push
pop
cltd
mov
adc
add
add
add
ss
mov
mov
jno
add
pop
lret
sbb
test
dec
push
add
scas
rcr
push
pop
sbbb
fdivr
ret
jmp
arpl
dec
lods
add
xor
sbbb
sbb
je
jns
push
add
mov
arpl
add
push
notl
sbb
pop
mov
into
mov
or
pop
push
add
sbb
outsl
dec
sub
add
push
pop
in
into
sbbl
add
add
add
add
inc
pop
add
add
push
add
lods
cld
xchg
xchg
or
int
jo
add
sbbb
rcll
xchg
repz
es
lret
adc
add
add
cli
sti
mov
ud0
jmp
cmp
add
xor
add
iret
mov
pop
rcrl
add
into
pop
cmp
add
nop
rcrl
pop
jo
add
imul
sbb
jmp
into
inc
and
std
sbb
int
ret
pop
dec
xor
add
add
push
add
sbbb
inc
pop
sub
add
pop
sahf
sbbl
add
out
fucomi
aam
int3
imul
xor
add
add
shr
push
add
mov
cmp
negl
add
mov
mov
mov
dec
push
add
arpl
add
push
add
loope
push
add
add
pop
dec
popa
add
pushf
aas
test
adc
add
test
sbb
or
fsubrs
pop
mov
push
sti
arpl
add
dec
push
add
stos
jnp
push
repz
decl
imul
popa
add
scas
push
and
fisubs
into
fs
aam
dec
or
add
shll
add
ret
jmp
push
mov
sbb
xor
add
add
pop
jg
pop
push
outsl
daa
pop
cwtl
daa
pop
movsb
pop
pop
adc
add
loop
xlat
stc
cwtl
cmp
fidivrl
jecxz
push
push
leave
pop
cmc
hlt
enter
andb
add
jp
arpl
lods
or
scas
mov
cmp
mov
fimuls
jg
pop
mov
rcrl
mov
cwtl
push
fisubs
lds
lahf
mov
mov
sub
and
add
lret
mov
pop
je
xchg
xchg
outsb
shlb
pop
dec
hlt
cmp
pop
pop
adc
test
xchg
stos
mov
pop
add
adc
arpl
pop
xor
add
mov
xor
cmp
dec
mov
inc
add
scas
aas
xchg
fmul
mov
xchg
arpl
add
add
aas
push
add
lcall
add
jnp
add
xchg
jb
add
stos
jne
pop
pop
pop
rorl
add
and
add
or
pop
mov
xor
add
add
mov
cmc
in
dec
mov
adc
add
add
pop
cmp
hlt
mov
out
pop
pop
into
ja
leave
pop
sbb
and
add
push
add
mov
pop
mov
pop
inc
add
mov
jmp
pop
push
mov
fwait
ljmp
inc
pop
jb
add
add
add
fs
mov
jge
jae
add
lods
pop
mov
jle
pop
push
pop
in
roll
add
in
add
or
add
lock
add
test
jg
add
pop
sub
mov
call
jmp
dec
add
shr
sub
add
arpl
pushf
xchg
arpl
add
jecxz
jl
cmp
jb
add
pop
lcall
sub
lcall
fs
adc
add
add
in
sti
xlat
and
add
add
ljmp
push
pushf
cmp
pop
mov
jb
add
add
push
push
adc
add
add
push
cmpl
jmp
jp
dec
mov
out
icebp
sbbb
add
cmp
xchg
mov
insb
mov
pop
and
add
add
mov
sub
int3
dec
pop
outsl
jmp
mov
pop
push
arpl
add
and
add
scas
mov
pop
cmp
test
jg
add
loope
pop
arpl
add
add
lea
add
mov
add
ret
pop
movsb
pop
xchg
pop
clc
jae
add
fsts
cmp
fbstp
add
in
shll
out
jp
mov
mov
dec
mov
pop
out
sbb
loop
add
pop
add
fbld
adc
pop
sbbb
repz
sub
pop
pop
ljmp
roll
add
jecxz
add
pop
add
or
sub
add
mov
jno
add
pop
add
loope
mov
jmp
add
mov
pop
jne
aaa
sub
inc
add
mov
pop
adc
add
pop
adc
push
jnp
mov
mov
cmp
add
add
lea
pop
pop
xchg
jnp
lods
insb
sbb
push
add
dec
int
cmp
jp
cli
es
sub
pop
and
add
cld
and
add
sbb
or
add
enter
arpl
aam
jne
jmp
push
int3
dec
fsubl
add
add
pop
cmpsl
pop
std
pusha
add
lcall
pop
fwait
js
cmp
xor
add
mov
shrl
std
std
inc
add
mov
sbb
pop
pop
inc
add
scas
imul
mov
aad
fimuls
add
push
add
add
imul
add
add
test
add
add
add
dec
pop
jge
ja
cmpsb
pop
cmp
pop
xchg
xor
pop
add
add
lods
xchg
stos
lret
pop
sbb
cmp
nop
push
ret
jp
jp
adc
pop
inc
add
xchg
jmp
cwtl
int
add
or
xor
add
push
mov
sti
into
dec
arpl
add
lds
add
jnp
or
pop
mov
insl
push
add
cmp
lret
lock
cmpl
jmp
fs
jmp
rcrl
mov
pop
cltd
or
inc
pop
add
dec
and
push
add
fsubrs
lcall
mov
push
ret
fnstcw
dec
es
push
add
arpl
add
cmp
add
fucom
pop
xchg
bound
add
aad
pop
inc
add
stos
and
add
incl
jge
jmp
xor
pop
andb
cmpsl
pop
xor
add
decl
test
lcall
negl
add
sub
xor
add
add
or
pop
add
add
mov
dec
fiadds
mov
add
xchg
fdivr
lcall
push
decl
test
int3
jmp
arpl
xor
dec
jno
add
sbbb
outsl
cmp
lock
jo
add
cmc
je
add
sub
push
pop
inc
add
testb
add
add
sti
cmp
cmp
stos
sub
das
pop
pop
or
imul
inc
pop
push
mov
jmp
sbb
enter
cmp
pop
das
rcrl
pop
or
in
popa
add
add
add
shl
pop
push
pushf
and
arpl
add
add
adc
out
nop
outsl
dec
add
add
ja
iret
out
leave
dec
xchg
pop
fisubrs
add
adc
add
movsl
pop
int3
ret
mov
and
add
add
in
movsb
pop
out
xor
add
bound
add
ljmp
mov
cmp
pop
xchg
mov
fdivr
add
add
pop
mov
xchg
popl
pop
loop
aad
pop
adc
add
aas
xlat
inc
pop
mov
pop
sbb
add
jl
push
pop
adc
add
add
pop
and
sub
add
add
pop
incb
mov
add
dec
in
adc
push
arpl
add
add
mov
add
scas
xor
mov
fisttpll
pop
movsb
pop
push
add
mov
adc
add
add
push
add
add
add
pop
jmp
icebp
cltd
pusha
add
xor
add
xchg
test
clc
enter
add
lods
scas
adc
add
jb
add
pop
mov
pop
pop
enter
sbbb
pop
pop
aam
repz
sbbl
add
add
dec
enter
test
sbb
push
ret
sub
arpl
add
xchg
lea
add
add
add
pop
sub
add
push
ret
xor
mov
in
enter
add
pop
xor
add
add
aam
popf
sbbl
or
push
repz
add
inc
pop
sub
xchg
add
jg
pop
sbb
pop
jle
pop
mov
pop
push
add
mov
pop
dec
aas
mov
dec
jmp
adc
arpl
mov
add
adc
add
inc
pop
bound
add
mov
fldcw
mov
add
add
push
cmp
adc
add
cmp
jge
lcall
add
cltd
sub
add
pop
cmpsb
pop
push
jmp
jo
add
sbbb
mov
add
add
add
pop
mov
pop
fadds
add
mov
pop
testl
rcrb
pop
xchg
arpl
add
pop
xor
add
or
pop
mov
mov
pop
leave
fbstp
in
out
push
add
add
jle
imul
pop
inc
pop
jle
pop
repnz
xor
add
repnz
imul
add
fs
add
xor
pop
mov
jp
add
pop
mov
pop
cmpsb
pop
pop
mov
add
pop
popa
add
and
add
cmp
xor
add
push
add
jno
add
in
and
add
adc
add
call
jmp
cmpsl
into
add
cld
aad
jl
adc
add
add
repnz
add
mov
mov
add
mov
aam
std
dec
aam
add
into
rcrb
cs
xor
add
xor
add
add
pop
out
sbb
jbe
add
xor
and
add
movsl
pop
call
in
dec
in
add
add
cmp
std
lods
test
ds
add
movsb
pop
and
pop
inc
pop
repz
dec
mov
add
sar
ret
add
lcall
ss
pop
sbb
add
daa
pop
mov
lret
std
fs
fdivrl
pop
push
outsb
dec
insl
mov
jno
add
mov
and
jnp
add
daa
pop
rcrl
mov
fldt
add
pushf
lods
cmpsl
jp
pop
or
adc
and
add
int3
mov
cwtl
push
mov
pop
inc
pop
fcmovnb
pop
fisubs
lods
jb
add
add
sub
add
dec
add
add
add
mull
mov
mov
xlat
arpl
add
into
imul
cmp
mov
fs
or
ficoml
jmp
div
or
stos
in
or
jmp
sub
add
xchg
scas
fsubrl
rcrb
add
inc
add
aas
inc
pop
adc
hlt
les
adc
add
inc
add
cmp
scas
setns
mov
shll
sahf
mov
pop
or
push
add
add
add
pop
xchg
and
dec
pop
mov
pop
inc
add
es
and
add
add
jmp
lods
ret
inc
cmpsl
push
pop
repnz
idivb
test
rcrb
test
pop
pop
loopne
aaa
and
add
mov
pop
mov
add
mov
cmpsl
pop
or
add
pop
stos
inc
add
jno
add
lock
je
sub
add
xchg
pop
rcrl
add
add
pop
lock
xor
add
jg
fcmovnb
pop
repz
add
cmpsl
pop
gs
or
ss
hlt
int3
pop
and
add
inc
pop
mov
jge
xchg
mov
add
pop
cwtl
adc
or
adc
xchg
cmp
pop
repnz
arpl
jmp
cmpsl
pop
push
add
jbe
push
pop
pop
mov
adc
add
add
dec
mov
pop
mov
fxch
inc
pop
stos
adc
add
jae
add
or
mov
pop
sub
test
add
cs
add
mov
pop
dec
xchg
pop
push
outsb
jg
shlb
pusha
add
xor
add
add
jmp
pop
mov
pop
pop
fucomi
setnp
cli
es
dec
in
cmp
ret
jmp
jne
jp
arpl
test
pop
add
add
fimuls
pop
push
add
push
jae
add
adc
add
das
push
push
mov
add
outsb
add
pop
lret
pop
xchg
xchg
sub
add
add
add
add
ror
xchg
sub
pop
lcall
popa
add
mov
pop
repnz
std
stos
add
imul
pop
lret
add
push
push
add
mov
pop
sbb
xor
add
dec
outsl
arpl
leave
lock
decl
test
pop
xchg
icebp
pop
pop
setp
push
add
lea
adc
enter
pop
sub
mov
push
jmp
add
sti
outsb
pop
add
add
inc
pop
sbb
mov
add
and
add
fisubs
add
lods
mov
xchg
mov
xchg
sub
pop
les
pop
pop
sbbb
lods
ret
pop
xchg
out
sub
mov
nop
push
ret
adc
or
pop
push
movzwl
jmp
pop
arpl
pop
bound
add
ret
mov
pop
int
add
mov
jmp
inc
inc
fs
daa
jb
add
add
add
lret
inc
add
xchg
bound
add
pop
push
inc
pop
xchg
add
push
mov
add
aaa
or
xor
add
add
out
cli
push
add
pop
mov
pop
jbe
jbe
jb
add
mov
add
inc
add
jp
add
out
jl
pop
dec
and
add
mov
mov
movsb
pop
mov
or
lea
add
aas
stos
mov
pop
ljmp
out
push
add
iret
dec
cs
xor
add
add
cmp
pop
outsl
mov
sub
adc
add
sti
xchg
xchg
dec
sbb
je
jmp
pop
ffree
pop
hlt
cmp
add
add
sbbb
pop
test
fsubs
scas
sbbl
rcrl
enter
adc
add
gs
in
movsl
pop
or
pop
jns
fadd
pop
sbb
test
pop
cmp
lret
iret
inc
add
cli
std
mov
push
inc
add
jne
arpl
add
cmpsb
pop
jo
add
flds
pop
pop
rcrb
ss
std
mov
int3
decl
cmp
inc
add
sub
cs
pop
jo
add
sub
cmpsl
pop
pop
aaa
out
int3
xor
add
ss
xchg
add
adc
sahf
xchg
cmpsb
pop
outsb
sub
stc
push
push
pop
es
push
mov
jmp
lods
out
sub
add
add
pop
fstpl
shll
push
in
pop
pop
insb
pop
lcall
pop
adc
add
push
push
mov
aam
in
jmp
add
xlat
int3
dec
enter
pop
shr
mov
add
pop
test
stos
push
add
pop
pop
sbb
nop
ljmp
xchg
testl
pop
inc
pop
aas
fwait
cwtl
sub
loopne,pn
xor
add
pop
imul
pop
adc
add
pop
cmp
add
adc
add
lock
das
jbe
insb
in
test
pop
mov
pop
aam
dec
push
xchg
sbb
pop
pop
outsl
sbb
lcall
pusha
add
fcomps
sbb
mov
je
jmp
flds
add
jp
mov
mov
add
add
mov
jmp
fldenv
fists
push
add
cmpsb
pop
push
scas
lahf
push
negb
loop
push
sbbl
and
pop
dec
mov
lea
out
add
jg
loopne
dec
sbbl
dec
fwait
mov
xor
add
pop
es
pop
sbb
movsl
pop
push
sbbl
xor
je
inc
add
cmp
add
clc
in
xlat
dec
jae
add
add
rcrb
add
xchg
sbb
xchg
js
pop
mov
inc
add
add
fstpt
das
ret
add
and
add
inc
pop
pop
loope
in
loope
sbb
add
push
pop
icebp
mov
add
imul
add
pop
sti
pop
pop
inc
add
sbbl
push
ret
jmp
into
ljmp
adc
add
loopne
sub
add
sti
leave
and
xor
add
pop
mov
pop
insb
and
add
add
fldt
insl
out
adc
add
mov
add
loopne
cld
push
add
jmp
arpl
sub
mov
xchg
pop
imul
mov
and
add
mov
pop
xchg
stos
aas
ficompl
insb
jns
pop
inc
pop
gs
dec
lea
int
adc
add
add
arpl
add
movsb
pop
xchg
out
xchg
mov
pop
inc
pop
xchg
mov
and
add
add
repnz
jp
outsb
jb
add
lock
add
movsl
pop
ffreep
pop
pop
xor
pop
les
and
add
std
mov
mov
int
pop
pop
add
add
pop
loop
insl
mov
add
sbb
pop
jmp
ds
push
jp
cmp
fldt
loop
fcmovb
pop
sub
sbb
and
mov
add
cmp
sarb
rcl
mulb
jmp
pop
mov
xchg
or
cmpsl
pop
adc
add
add
pusha
add
fdivp
mov
pop
out
sbbb
and
add
dec
enter
inc
pop
mov
and
add
mov
jmp
ret
stc
std
aam
sbb
add
outsl
and
add
call
xor
add
enter
lret
mov
push
dec
cmc
loop
mov
and
add
pop
push
add
sub
pop
js
add
add
add
add
jb
add
add
loop
lock
sbb
loop
push
ret
xor
stos
inc
add
cmp
mov
pop
pop
lret
add
repnz
cli
pop
xchg
add
pop
jg
mov
jne
pop
lock
dec
xchg
jl
loopne
inc
pop
mov
ret
pop
ja
adc
add
add
pop
in
mov
icebp
pushl
mov
movsl
pop
aad
push
add
stc
cmp
cmp
cld
int3
into
std
stc
dec
dec
ret
pop
mov
and
add
push
mov
jmp
dec
push
dec
outsl
arpl
int3
dec
push
adc
dec
pop
xchg
test
ret
lods
xor
add
and
add
xchg
adc
add
add
add
add
jnp
sbbl
pop
xchg
scas
repz
jmp
pop
nopl
pop
xor
add
and
add
pop
call
add
xchg
jmp
sbb
ds
pop
stos
push
jle
cwtl
ret
pop
jl
inc
pop
pusha
add
or
cli
fcomi
mov
loop
je
xchg
repz
push
pop
mov
loope
mov
add
inc
pop
mov
pop
sub
add
pop
das
and
add
push
add
sub
mov
bound
add
ss
and
add
pop
insl
sbb
add
cld
and
add
pop
pop
and
lock
pop
pop
cli
ss
add
inc
pop
pop
adc
add
jmp
cmc
cmp
int
push
stos
jmp
sub
pop
arpl
add
outsl
or
add
inc
add
fisubs
pop
das
xchg
pop
cmp
sub
mov
jmp
fs
cmc
arpl
pop
mov
pop
cmp
cld
xor
add
pop
scas
hlt
stos
sbbl
mov
pop
mov
add
out
js
lret
sbb
pop
loopne
adc
movsb
pop
jne
pop
jo
add
cmpsl
pop
popl
loop
outsl
lea
pop
xchg
jmp
mov
mov
sub
add
add
pop
sbb
sub
add
push
add
mov
in
xchg
mov
nop
push
ret
lods
lods
adc
push
add
ja
add
testb
add
or
xor
add
insb
pop
paddsw
add
int3
enter
lcall
and
icebp
push
pop
icebp
dec
fidivrl
add
or
lods
jge
add
cmp
add
pop
fdiv
test
imul
jmp
enter
pop
jae
add
add
aas
jno
add
repz
add
xor
add
push
mov
add
add
add
mov
dec
lret
ret
sub
pop
xchg
in
iret
dec
into
dec
repz
mov
add
jmp
cmc
out
push
xor
jge
jns
jnp
mov
out
shll
cmp
pop
sti
lods
adc
add
cli
aas
ss
int
lock
jecxz
repz
push
cmp
das
adc
aad
rep
pop
mov
call
pop
aam
je
cmc
xor
nop
or
pop
cmpsb
pop
mov
add
add
mov
add
in
ljmp
out
jmp
sbb
ljmp
scas
dec
inc
add
or
pop
arpl
clc
add
add
mov
jmp
arpl
arpl
jne
add
add
pop
nop
gs
add
add
pop
arpl
add
jns
push
add
sbb
add
shrl
sbbl
add
cmp
aas
outsl
xchg
loope
insb
pop
inc
add
cmpsl
pop
dec
pop
pop
mov
pop
pop
jb
add
add
stos
and
dec
fwait
cmc
rcrl
nop
push
fs
push
dec
pusha
add
pop
sbbb
movsl
pop
xor
add
js
pop
in
mov
pop
cwtl
pushf
iret
ret
pop
cmc
and
inc
pop
dec
lcall
add
inc
pop
leave
sub
xlat
mov
aaa
and
inc
add
aas
jmp
cmc
out
mov
add
fistpll
pop
add
add
xor
add
mov
pop
popa
add
push
add
or
sub
pop
xchg
aad
add
fsts
aas
outsl
pop
fisttpll
add
pop
or
pop
repz
insl
or
or
pop
int3
sbb
mov
scas
jmp
or
adc
mov
nop
push
ret
daa
pop
pop
sbbb
push
add
add
add
lds
rorb
pop
rcrl
movsl
pop
lret
jl
mov
pop
nop
pop
scas
mov
pop
dec
inc
add
ret
mov
add
jle
pop
jl
add
mov
pop
and
xor
add
push
push
sub
jmp
pop
arpl
add
push
lret
into
xor
add
jl
xor
add
pop
xor
add
sbb
movsl
pop
pop
jb
add
or
pop
movsl
pop
es
lock
or
out
add
add
movsl
pop
ret
sbbl
add
jbe
add
shlb
pop
daa
pop
push
bound
add
inc
pop
nop
add
add
pop
sub
jne
add
inc
add
jmp
out
lret
add
inc
pop
cmpsb
pop
inc
add
das
and
add
add
add
pop
hlt
les
mov
jecxz
es
nop
std
jle
inc
add
mov
pop
std
jns
es
and
add
and
add
add
push
je
add
int
icebp
add
add
test
add
xchg
cmovbe
lahf
test
pop
in
xchg
adc
add
dec
ljmp
add
loope
pop
push
inc
add
xchg
mov
cmp
fists
jmp
das
repnz
test
mov
adc
sti
loopne
es
ds
and
add
xchg
pop
icebp
xor
add
xchg
mov
loopne
fisubs
add
fwait
jmp
pop
push
add
mov
add
sbbb
pop
mov
bnd
xchg
mov
push
xlat
mov
add
out
popa
add
aad
pop
out
pop
mov
fmuls
stos
pop
insl
cmp
cld
fldt
add
stc
xchg
jle
pop
sti
pop
or
pop
dec
adc
add
jae
add
pop
xchg
push
in
and
add
pop
xchg
push
add
cmp
sub
fwait
sbbl
xor
add
jmp
and
fs
cmp
dec
ss
add
add
fidivrs
call
pop
sub
mov
es
sbb
pop
repnz
sbbb
pop
ficomps
inc
add
pop
mov
add
rcrl
pop
jb
add
pop
push
pop
es
loop
fcoml
push
jmp
arpl
and
pop
mov
cmp
jmp
les
sub
enter
cmp
enter
inc
pop
popl
mov
mov
jmp
enter
xchg
mov
pop
ljmp
push
add
sbb
jb
add
popf
pop
nop
or
pop
loopne
xchg
imul
add
int3
sub
dec
add
add
add
rcrl
jno
add
sbbl
add
add
fadds
add
sub
pop
mov
pop
mov
pop
sarl
pop
mov
add
add
test
and
inc
pop
pop
cli
sbbl
add
cs
outsl
dec
and
add
cmc
sub
add
xlat
mov
add
add
lcall
stos
shll
add
jge
ror
push
testl
sub
pop
lfs
add
hlt
sbb
add
hlt
push
pop
movd
add
xchg
mov
dec
mov
pop
adc
add
dec
pop
out
les
add
mov
movsb
pop
les
sbbb
dec
sbb
sub
or
in
outsl
cmp
stc
out
or
pop
pop
mov
sub
fsubrl
xor
add
pop
enter
lods
repz
icebp
dec
jne
outsb
cmp
adc
out
lods
jge
sbb
add
in
pop
sub
pop
pop
adc
add
pop
dec
ret
pop
leave
xchg
roll
xor
add
adc
xor
add
leave
in
pop
lock
mov
push
add
mov
add
test
and
add
pop
jns
ja
mov
jecxz
rorb
mov
aam
push
cmp
jmp
mov
inc
push
and
add
adc
and
add
mov
sbb
mov
sbb
pop
outsb
cmp
add
mov
add
fiaddl
aas
call
sbb
add
add
rcrl
imul
nop
push
ret
add
add
cmp
inc
add
push
add
jmp
pop
ljmp
jg
addr16
push
and
jmp
arpl
aaa
mov
add
jg
pop
mov
add
pop
xchg
jg
jmp
fsubs
imul
ret
pop
mov
add
mov
pop
sahf
jo
add
js
dec
outsl
add
add
in
inc
gs
popf
add
add
pop
push
push
xor
add
mov
sub
add
push
add
popa
add
jns
sbbb
imul
je
add
arpl
push
fcoml
add
shll
stos
rcrl
mov
repz
add
cli
repnz
lock
add
mov
mov
or
add
je
fcmovu
add
in
rcll
and
add
add
pop
dec
xor
scas
aaa
filds
add
or
jne
dec
ja
fstl
repz
mov
add
add
add
out
add
add
xchg
loopne
push
add
insl
out
ror
sub
lret
mov
add
div
pop
adc
add
outsl
add
add
pop
cmp
inc
add
bnd
add
adc
add
jno
add
push
inc
add
push
add
arpl
cmp
mov
add
shll
push
pop
pop
inc
pop
mov
lods
xchg
push
add
leave
ja
pop
mov
mov
jmp
cs
push
add
movsb
pop
push
add
sub
sbb
add
adc
and
cmp
js
or
dec
pop
sbb
xor
add
add
inc
add
imulb
add
jmp
arpl
push
pop
lret
aad
lds
add
sahf
mov
es
cmp
insl
inc
pop
add
add
cmpsl
pop
pop
sbb
add
add
ficomps
arpl
add
add
and
or
adc
add
sbb
add
inc
add
cmp
pop
sbb
aam
scas
push
xchg
mov
pop
out
add
push
add
cmp
out
pop
pop
mov
das
push
push
sub
mov
jmp
xor
add
leave
xchg
pop
in
movsb
pop
rcrb
pop
cmp
je
jmp
arpl
pop
jns
mov
sbb
add
pop
rcll
add
mov
in
outsl
imulb
lahf
cmp
inc
pop
push
pop
pop
ss
iret
out
rcrl
pop
xor
pop
xor
movsl
pop
jbe
add
mov
sbb
bound
add
pop
addr16
in
lds
rol
pop
fs
or
cmp
lods
xor
add
cmp
adc
add
addr16
sahf
test
aad
pop
scas
mov
pop
pop
cwtl
aad
mov
in
cld
addr16
int
lahf
clc
mov
push
ss
add
mov
mov
xor
pop
dec
lds
pop
xchg
es
rcrl
push
add
pop
sub
test
std
pusha
add
cltd
mov
add
pop
or
pop
stos
mov
pushf
lcall
jns
pop
das
pushf
lahf
adc
add
xchg
cmp
add
loope
in
or
pop
dec
jno
add
not
and
add
pop
jb
add
fmull
cmc
movsl
pop
pop
xchg
test
add
loop
lret
push
pop
cmp
xor
add
sbb
ret
pop
mov
add
add
add
jge
stos
dec
jno
add
pop
jne
push
add
jp
push
add
mov
js
arpl
add
add
clc
and
add
in
mov
add
ud1
mov
outsb
and
add
or
rcrl
lods
es
push
xchg
xchg
dec
div
xchg
pop
lock
cwtl
ficomps
pop
mov
faddl
add
pop
adc
add
sti
std
or
gs
rcll
dec
xor
add
inc
pop
rclb
add
adc
add
pop
pop
movsl
pop
mov
add
sub
movsb
pop
jnp
add
test
pop
or
dec
push
add
dec
lret
cli
clc
cmpsl
pop
or
add
popf
mov
jg
and
push
pop
rcrb
add
add
pop
gs
xchg
or
lret
add
sub
add
jmp
pop
dec
jb
add
xchg
sbbb
add
adc
pop
ljmp
dec
xor
inc
pop
enter
test
push
dec
push
add
je
add
xchg
cld
repz
pop
dec
test
sub
cmp
add
jns
add
add
dec
push
add
push
sbb
out
mov
cmp
and
jmp
sub
rcrl
jge
imul
loope
add
add
xchg
stos
and
add
pop
insl
fs
add
dec
sbbb
fs
loope
pop
insl
jge
lds
and
add
sarl
mov
insl
aad
pop
ljmp
mov
add
sub
add
sub
pop
cmp
mov
mov
pop
jle
adc
push
xchg
push
add
pop
sub
pop
inc
pop
mov
pop
jne
sub
add
icebp
adc
add
inc
add
pop
add
add
add
dec
std
jne
pop
jge
cmp
pop
nop
jge
pop
cld
sete
add
add
add
add
pop
es
mov
pop
ret
pop
in
gs
push
add
pop
pop
sub
call
pop
les
pop
test
pop
dec
push
cmpsb
pop
je
aad
push
pop
les
fisubl
imulb
push
lds
icebp
out
mov
pop
filds
rorb
mov
movsl
pop
dec
mov
pop
push
or
adc
add
sbb
mov
pop
xor
add
movsl
pop
rolb
push
mov
nop
push
ret
dec
adc
cwtl
pop
inc
add
dec
xchg
jnp
pop
add
add
cltd
pusha
add
fimull
rcrl
lret
pop
cmp
add
stos
ffreep
pop
push
fdivrp
iret
popa
add
xchg
repz
rcrb
xor
add
aaa
scas
hlt
ja
mov
add
mov
jbe
pop
fdivrs
rclb
jno
add
adc
xor
pop
pop
jns
pop
leave
in
mov
sbb
push
pop
imul
into
jmp
fwait
cs
add
lcall
nop
push
ret
ret
arpl
mov
pop
xor
add
xchg
rol
pop
cmc
insl
or
fstl
xor
add
cmp
rclb
test
dec
pop
mov
add
dec
add
add
add
aam
cmp
pop
outsl
cmp
sti
stos
into
pushf
mov
mov
test
icebp
cmp
xor
jmp
mov
dec
cltd
fs
das
int
outsl
lods
cli
add
add
add
jns
imul
sbb
add
testl
add
clc
mov
pop
mov
imul
add
inc
pop
inc
add
sub
mov
test
in
pop
je
add
dec
nop
mull
xor
xchg
mov
mov
add
pop
xchg
xchg
lret
pop
lcall
add
mov
mov
gs
lret
insl
leave
sub
pop
jb
add
add
inc
add
mov
add
stc
pushf
cmp
add
add
loopne
adc
sub
jne
and
add
dec
rcl
push
jno
add
into
pusha
add
jbe
jnp
fimuls
cmpsb
pop
pop
rcr
mov
cli
jbe
add
lods
repnz
add
xchg
and
or
push
push
jmp
adcb
jp
add
sub
add
pop
aaa
or
pop
sub
not
sbb
rorl
insb
cmp
or
hlt
push
and
add
out
sbbb
add
lret
insl
pop
cltd
add
add
dec
sub
div
dec
push
je
aas
xchg
stos
lea
mov
aam
test
pop
xor
mov
pop
or
movsb
pop
out
cmp
pop
mov
cmp
lds
mov
pop
lahf
fcompl
push
push
pop
scas
jno
add
add
fsts
add
bound
add
movsb
pop
aam
mov
add
pop
jg
movsl
pop
adc
pop
xchg
mov
cmp
add
add
sahf
mov
mov
add
inc
add
add
pop
mov
mov
insl
mov
jmp
enter
mov
rorb
loop
call
pop
stos
stc
mov
in
inc
add
int3
mov
push
xor
add
fistl
les
add
adc
add
scas
adc
add
les
push
ret
jne
stos
adc
inc
pop
nop
fst
sub
add
enter
xor
add
add
sub
mov
inc
pop
xlat
lret
pop
imul
rorl
push
pop
mov
inc
add
pusha
add
out
dec
pop
test
pop
fstpl
ret
pop
sahf
scas
pusha
add
mov
add
add
pop
cmpsl
pop
jb
add
add
xor
add
cwtl
inc
pop
and
add
std
add
push
add
pop
or
shl
pop
pusha
add
sbb
push
aas
and
add
pop
or
pop
mov
add
arpl
inc
nop
push
ret
pop
sbb
arpl
negl
sbb
add
jle
jbe
movhps
add
imul
add
add
mov
jmp
xor
inc
add
imulb
nop
push
ret
sub
movsl
pop
nop
sub
pop
mov
add
add
pop
sbbl
notb
add
pop
in
and
add
hlt
pop
mov
rcrl
add
rcrl
add
add
mov
adc
add
addr16
cld
call
and
lods
imul
xchg
add
arpl
add
or
pop
jmp
pushf
push
sub
jne
mov
add
dec
sbbl
push
popa
add
mov
pop
cmp
jnp
cmp
inc
pop
insb
hlt
mov
pop
enter
int
pop
cld
repnz
mov
add
fadds
pop
cmp
sbb
pop
pusha
add
nop
ja
pop
rcrb
lret
ror
cmp
std
push
add
mov
ss
jmp
or
popl
xchg
mov
inc
pop
add
add
lahf
mov
add
scas
movsl
pop
sbb
ljmp
adc
pop
dec
and
repnz
dec
add
pop
insb
jl
sbbl
ds
sbbb
add
aam
xor
add
add
and
add
pop
mov
mov
add
es
cmc
lods
out
insb
cmp
pop
cmp
loope
adc
add
loopne
push
pop
ret
pop
jno
add
sub
das
fldcw
sbb
add
mov
pop
cltd
mov
int
mov
xor
add
add
mov
lods
lret
mov
pop
ret
pop
fldt
es
cmp
testl
jmp
arpl
mov
add
add
pop
popa
add
pop
pop
leave
mov
add
add
add
clc
cli
ljmp
shlb
pop
or
inc
add
xor
add
mov
pop
loop
nop
pop
loope
mov
sbbb
insl
notl
or
pop
xor
add
imul
pushf
stc
pop
and
add
xchg
daa
pop
mov
add
push
jmp
add
add
jo
add
iret
sub
jae
add
add
xchg
popf
jecxz
xchg
push
add
add
add
pop
adc
add
pop
xchg
dec
mov
fisubrs
dec
hlt
das
sub
pop
lcall
pop
movsl
pop
xchg
pop
hlt
dec
dec
dec
xor
sbbl
mov
sti
mov
ljmp
or
scas
pusha
add
sub
pop
fstl
add
sub
mov
pop
aas
ja
cmpsl
pop
movsl
pop
pop
out
inc
pop
cli
dec
dec
aam
push
mov
jmp
or
daa
repz
ja
add
stos
cs
add
inc
pop
pop
and
add
and
add
dec
push
add
negb
cmp
sahf
enter
pop
cld
loop
testl
pop
popf
insb
fistps
add
out
js
push
in
sub
sbbb
push
xchg
or
cld
pop
pop
clc
xchg
push
mov
imul
add
repnz
add
add
outsb
sub
loopne
add
add
roll
add
jo
add
pop
xor
ret
pop
fcompl
sub
jmp
pop
arpl
add
and
add
push
or
fs
dec
cltd
xor
add
pop
xchg
cli
xchg
or
jnp
sub
add
jle
mov
push
mov
sub
add
add
pop
test
xchg
xchg
xor
add
add
add
inc
add
push
cmpsl
pop
in
jg
arpl
add
jl
fsubrl
cmp
xchg
jmp
sbbb
inc
add
xor
add
dec
pop
nop
js
mov
jmp
es
xor
add
mov
add
pop
insl
loopne
xor
add
add
lods
incl
repz
cmp
aaa
push
inc
sub
add
pop
arpl
mov
pop
xchg
mov
sub
mov
mov
mov
pop
xchg
lret
add
loop
adc
add
scas
push
fcomps
pop
ja
out
mov
into
inc
pop
sub
pop
inc
pop
add
std
add
add
sub
rol
pop
mov
add
add
cmc
jnp
inc
add
or
outsb
mov
push
mov
pop
out
movsb
pop
sar
jp
outsl
outsb
das
xor
add
pop
jle
or
add
mov
sbbl
fs
add
add
or
test
aaa
mov
movsl
pop
out
mov
pop
pop
rcrb
add
push
add
mov
cltd
cmc
jne
sub
mov
pop
mov
mov
not
inc
pop
and
xchg
les
pop
fstps
pop
xor
add
cmp
jae
add
popa
add
loopne
faddl
mov
out
int
add
jns
push
pop
out
mov
push
and
add
add
cld
inc
add
arpl
pop
cmp
cld
jge
pop
cmpsb
pop
pop
mov
pop
mov
add
in
stos
mov
repnz
sub
add
ds
add
add
fimull
pop
add
add
leave
movntps
pop
sbbb
pop
pusha
add
mov
pop
notl
add
sbbb
dec
out
fwait
jge
pop
imul
add
pop
xor
add
add
xor
add
add
fstpl
mov
pop
xchg
pop
xlat
push
cmp
fs
fmull
pop
adc
shl
out
and
add
adc
imul
pop
imul
add
outsb
out
cmp
and
add
pop
cmp
add
add
pop
add
addr16
xor
pop
add
add
add
add
aaa
aam
add
mov
add
lret
add
add
push
sbbl
pop
fwait
lret
add
mov
add
pop
lods
je
lea
jmp
adc
adc
and
mov
lret
hlt
clc
cmp
pop
pop
push
xor
add
pop
mov
add
popf
test
pop
sti
adc
add
add
addr16
pop
jno
add
xchg
mov
sbb
lret
add
xor
icebp
xchg
leave
pop
outsb
cmp
xor
add
into
stos
rcrb
inc
add
pop
mov
dec
adc
add
add
mov
nop
push
ret
cmc
adc
pop
jo
add
sbbb
add
cmc
in
dec
daa
pop
push
or
ret
pop
mov
add
xchg
mov
or
cmp
imul
pop
push
add
jmp
jp
pop
adc
jge
pop
in
and
nop
push
ret
daa
mov
adc
inc
pop
pop
das
xor
add
add
out
pop
ja
add
loopne
xor
add
xchg
add
sub
add
add
add
mov
add
sub
leave
cmp
rorb
add
or
shlb
pop
add
add
je
js
push
ret
dec
incl
inc
add
fbld
adc
fs
pop
lret
xchg
repnz
add
pop
jmp
lods
jne
push
jne
jbe
add
jbe
into
imul
and
add
cld
dec
ret
pop
stos
call
pop
dec
js
out
jnp
cmpsl
pop
lds
inc
add
mov
loope
popf
adc
add
nop
push
push
add
add
movsl
pop
add
add
test
push
add
cwtl
loope
and
pop
aam
pop
stos
push
decl
add
and
mov
add
pop
xor
add
jo
add
xor
add
int
fdiv
mov
scas
sub
mov
add
iret
mov
add
add
shl
ret
mov
jne
jmp
pop
iret
ds
inc
pop
inc
pop
inc
pop
inc
pop
and
pop
popf
xchg
and
xor
pop
aaa
das
or
pop
lahf
pop
frstor
add
add
adc
pop
hlt
nop
pop
gs
jne
pop
test
add
sbb
or
sub
in
mov
add
lock
add
cmp
jg
xchg
xchg
ja
and
add
pop
jl
sbbl
mov
or
pop
out
cmpsb
pop
clc
lods
mov
add
fs
test
pop
and
add
pop
lret
ss
iret
cmpsl
pop
pcmpeqb
pushf
pop
push
push
mov
mov
inc
add
add
add
in
aaa
leave
test
lds
fdivs
xor
pop
je
pop
aam
and
je
stos
ljmp
pop
sti
enter
mov
add
add
jne
pop
lcall
add
and
add
push
pop
mov
std
jge
add
pop
pop
out
sbb
mov
lods
add
add
decl
test
stos
dec
add
arpl
xor
add
add
mov
pop
cmpsb
pop
lea
add
add
jae
add
bound
add
add
xchg
xchg
and
add
add
add
pop
and
add
outsb
mov
bound
add
add
jae
add
lock
jns
lods
push
add
push
add
sbbl
lret
cmp
jae
add
pop
push
jo
add
cmp
push
add
mov
add
add
loope
je
pop
outsl
shlb
cs
pop
jecxz
lods
mov
pop
test
inc
add
gs
jae
add
pop
imul
ss
inc
pop
xchg
or
add
in
jae
add
and
add
inc
add
cmp
add
pop
jae
add
add
icebp
imul
jle
popa
add
lcall
mov
aad
imul
xor
push
pop
and
pop
das
ss
test
pop
mov
test
pop
or
pop
stos
mov
pop
hlt
rcl
js
add
dec
or
stos
jl
pop
pop
add
sbb
add
jmp
ret
cmc
cmpsl
and
and
xchg
fs
xor
pop
aaa
sub
outsl
mov
inc
pop
fs
cwtl
bound
add
mov
add
add
add
lds
or
pop
xchg
pop
mov
sbb
popf
fidivrs
movsb
pop
inc
pop
or
pop
sbb
add
rcrl
dec
call
pop
lret
jmp
andb
fildll
add
add
movsb
pop
ret
pop
lock
pop
add
add
add
mov
pop
sub
and
add
jmp
mov
adc
add
xor
add
add
pop
nop
not
jb
add
pop
push
jmp
popa
add
cmp
dec
adc
add
push
add
hlt
test
push
push
jmp
sti
sbb
enter
jmp
mov
add
jne
add
outsl
call
jo
add
cmp
add
pop
mov
ret
jmp
mov
ljmp
call
jmp
aaa
daa
sti
adc
sbb
cltd
sub
xor
pop
xor
add
lea
in
jbe
call
push
sub
imul
pop
sbbb
and
add
jnp
add
nop
pop
fbstp
dec
xor
add
add
pop
sub
loopne
mov
cli
cmc
lock
add
adc
add
xchg
dec
insb
iret
dec
je
sahf
jp
jo
add
insb
pop
pop
aas
or
add
add
xchg
or
xchg
aaa
adc
add
in
pop
jbe
mov
nop
imul
or
pop
sub
movsb
pop
cmp
mov
pop
lods
clc
pop
sbbl
push
jmp
aaa
add
neg
test
and
add
mov
pop
xor
jo
add
add
push
inc
add
inc
pop
in
shrb
xchg
and
es
popa
add
lret
lahf
pop
ss
sub
fcompl
xor
ss
icebp
jmp
pop
pop
mov
adc
add
add
add
add
add
jmp
pop
inc
add
fadd
pop
or
pop
xchg
mov
pop
popf
jecxz
sub
add
inc
pop
ds
xor
add
jmp
add
lds
clc
inc
pop
cltd
xor
add
pop
xchg
adc
add
add
bound
add
sbbb
mov
or
add
xlat
popf
mov
ja
pop
mov
pop
cmp
add
lcall
or
pop
aaa
lcall
shl
pop
test
jne
stos
and
add
outsl
arpl
jbe
cmp
pushf
jecxz
and
add
add
pop
rep
xor
jg
popa
add
jge
pop
jbe
adc
add
mov
jmp
lods
mov
add
inc
pop
xor
push
push
mov
add
add
add
push
add
sbb
or
cmp
add
mov
dec
insl
out
aad
mov
shrb
filds
add
fwait
add
add
pop
jae,pt
add
popa
add
idiv
cmp
in
mov
rcrb
add
call
add
add
pop
sahf
nop
push
and
add
cli
sub
in
adc
lock
mov
xchg
nop
push
xchg
xchg
cld
sub
fdivrl
dec
adc
dec
add
add
lea
pop
jecxz
push
lea
sahf
cmp
pop
out
or
add
in
jmp
pop
add
add
stos
lret
mov
add
jmp
xchg
pusha
add
ret
pop
mov
inc
add
jecxz
add
add
sub
add
xchg
sub
enter
mov
xchg
scas
imul
add
scas
movlps
add
or
mov
call
in
add
inc
add
and
add
and
add
jge
push
jmp
add
adc
jne
lods
les
mov
jmp
xor
daa
jp
xor
add
pop
mov
pop
aad
lock
sub
pop
pop
xchg
push
add
sbb
add
adc
add
pop
cmp
dec
adc
add
add
add
add
dec
cmp
mov
add
jmp
mov
fwait
sbbl
add
pop
dec
cmpsl
pop
lret
adc
es
lret
add
cltd
lea
sti
fs
pop
adc
add
adc
add
mov
dec
pop
lds
pop
add
mov
pop
or
sbbb
pop
pop
sub
and
add
aam
sahf
push
addr16
jmp
add
push
in
inc
pop
loopne
repz
mov
adc
add
pop
sub
add
adc
add
pop
cmpsb
pop
jne
xor
mov
pop
inc
add
enter
sub
pop
popa
add
movsb
pop
repnz
pop
dec
pop
push
mov
add
jmp
call
test
mov
add
daa
pop
adc
add
mov
push
dec
mov
adc
mov
nop
push
ret
fcomip
into
xchg
rcrb
add
add
add
jl
inc
add
arpl
add
pop
pop
xor
add
mov
gs
pusha
add
punpckhwd
pop
lret
addr16
das
mov
pop
or
es
push
add
sbbb
mov
pop
jae
add
mov
pop
or
fnstsw
add
insl
sbb
daa
pop
insl
rcrb
add
pop
cs
add
mov
pop
xchg
add
daa
pop
fisubrl
rcrb
jb
incl
push
xorb
add
jo
add
add
dec
mov
dec
push
pop
fmuls
pop
scas
incl
inc
cmp
ja
mov
mov
add
adc
add
xor
add
out
ss
add
or
add
fs
divl
pop
outsb
mov
cmc
pop
cmovns
rorl
mov
add
ja
pop
mov
scas
push
pop
sbbl
mov
icebp
lcall
test
out
adc
add
cltd
out
pop
add
add
je
lahf
mov
and
add
sbb
pop
loop
xor
add
sahf
rcll
imul
pop
aam
pop
mov
sub
arpl
add
dec
mov
call
pop
lods
push
xor
pop
mov
add
sbb
jl
inc
add
push
and
add
adc
add
add
inc
pop
jg
add
mov
pop
inc
pop
fisubs
add
in
test
dec
adc
dec
imul
adc
add
pop
cld
add
add
aaa
jmp
pop
jbe
pop
jmp
sti
xchg
sbb
add
flds
add
add
add
lock
dec
mov
inc
add
and
popf
add
jmp
jmp
arpl
sbbb
add
int3
add
xor
jbe
insb
es
lret
pop
insb
cmc
idivl
pusha
nop
push
ret
dec
pushf
jne
rcl
dec
pop
xor
pop
pop
push
add
cld
adc
lods
pop
add
enter
orb
push
jmp
jmp
aam
jecxz
jle
idiv
in
dec
sahf
mov
pop
testb
and
dec
and
add
rcl
sbb
cli
les
mov
and
add
faddp
pop
push
mov
nop
push
ret
add
ficomps
inc
add
cld
jno
add
sti
jl
cmp
add
pop
fstl
add
rcrb
xchg
push
movsl
pop
fs
dec
rolb
rcrl
add
pop
adc
add
cmp
jmp
daa
cmpsl
push
jp
lods
sbb
add
push
call
jmp
arpl
aam
pop
cmp
pop
jb
add
mov
clc
mov
add
scas
mov
lds
repz
mov
add
cwtl
xchg
pop
fsubl
pop
jb
add
add
adc
add
sbb
xor
add
add
fwait
dec
iret
testl
inc
pop
xlat
ret
pop
mov
pop
rcrl
fildll
mov
arpl
add
pop
ret
pop
sti
pushf
repnz
pop
arpl
add
out
adc
mov
cmp
sbb
mov
mov
push
add
pop
push
arpl
add
sbb
pop
lds
das
loop
pop
xchg
js
pop
sub
das
inc
pop
ret
cmp
idiv
xlat
mov
pop
mov
fmuls
pop
xor
add
pop
pop
pusha
add
inc
add
cwtl
and
jmp
ss
add
shr
iret
add
add
add
sub
xchg
mov
or
fwait
add
add
pop
xchg
incl
jne
rep
jmp
inc
sub
arpl
xchg
push
repz
dec
hlt
mov
jo
add
jo
add
jb
add
mov
push
add
xchg
add
add
pushf
adc
add
aas
lret
pop
out
ror
in
cmpsl
pop
cmp
xor
in
jmp
dec
push
lea
pop
dec
sub
add
cmpsb
pop
dec
adc
add
add
mov
add
xor
add
and
add
add
ret
mov
mov
add
add
cs
add
add
dec
pop
dec
xchg
dec
add
sbb
mov
stc
push
add
fcos
popl
jmp
or
dec
in
lock
mov
add
fwait
rdmsr
add
out
cmpsb
pop
sbbb
xchg
idivb
inc
add
icebp
sarl
bound
add
xchg
lea
add
add
jb
add
insl
push
loopne
sar
mov
out
mov
loope
jle
add
loopne
adc
add
add
add
rcrl
les
clc
xor
add
outsb
pop
pop
aas
add
add
cli
pop
mov
mov
rcrl
or
add
cltd
out
dec
sbb
mov
daa
xor
mov
pop
lods
test
jmp
jnp
aas
push
pop
xchg
fdivl
mov
fcompl
sahf
xor
and
add
add
inc
pop
jmp
hlt
add
jns
add
add
mov
in
add
add
pop
mov
cltd
nop
xchg
sub
and
xchg
jg
add
adc
push
mov
pop
mov
pop
cli
lret
jle
xchg
cltd
sub
add
jmp
jne
sub
test
pop
aam
dec
mov
in
dec
aas
lea
pop
mov
pop
fs
loope
nop
and
add
or
mov
xchg
out
jo
add
std
call
jmp
mov
cltd
popa
add
push
inc
pop
pop
sub
pop
adc
xchg
sbbl
movsl
pop
repnz
jo
add
add
enter
jmp
jmp
fistps
pop
fistps
or
in
cmp
add
mov
std
sub
leave
push
das
inc
add
and
add
pop
nop
out
push
xor
xor
mov
fwait
cmp
pop
xor
sub
std
pop
imul
leave
mov
pop
cmpsb
pop
iret
push
pop
add
pop
dec
test
mov
add
pop
jle
mov
das
es
inc
add
movsl
pop
std
cmp
pop
outsl
dec
sbbb
ficomps
add
mov
fwait
sub
pop
sbb
stc
jmp
inc
push
aaa
push
sub
jmp
add
dec
fs
dec
pop
bound
add
pushl
nop
push
ret
cmpsl
dec
push
add
pop
mov
mov
sti
jmp
mov
push
aas
out
outsl
pop
icebp
cmp
or
add
pop
mov
xchg
push
mov
pop
cmp
add
cmpsb
pop
sub
pop
pop
xchg
mov
jmp
push
enter
sbb
inc
add
push
jmp
test
add
clc
mov
negl
mov
fs
jmp
dec
in
pop
mov
xor
jmp
enter
flds
add
sarb
jge
aas
push
add
inc
sub
adc
jmp
pop
arpl
fistps
sbb
add
dec
cmp
add
mov
sub
out
dec
enter
leave
or
add
add
daa
pop
stc
xchg
adc
add
pop
xchg
imul
pushf
daa
pop
aas
jns
jns
in
popa
add
fwait
int
pop
popf
jle,pn
add
pop
in
xchg
sbbb
out
jae
add
add
and
add
add
add
aad
pop
inc
pop
stc
jnp
lcall
add
add
pop
and
add
inc
add
fdivrl
add
leave
shrb
aaa
inc
add
arpl
and
out
je
fstps
mov
jmp
pop
arpl
arpl
addr16
std
into
repnz
pop
xchg
sbb
jns
pop
or
stos
es
insb
cmpsl
pop
xor
add
pop
jge
pop
and
add
sbb
and
add
add
aam
cmp
repnz
mov
adc
add
cld
insl
adc
add
pop
insb
cmpsl
pop
ret
pop
out
icebp
out
stc
dec
mov
bound
add
pop
add
decl
test
xchg
jmp
pop
jbe
and
add
add
jge
fisttps
fmuls
pusha
add
cmp
mov
pop
and
add
or
ja
into
push
xor
nop
push
ret
pop
mov
mov
add
ret
add
mov
fdivrs
stc
test
fstps
mov
add
pop
mov
pop
insl
or
pusha
add
stc
cmpsb
pop
rcll
adc
cmp
pause
push
ret
push
arpl
mov
pop
loopne
dec
les
pop
jg
loopne
dec
faddp
pop
sub
lahf
sbb
arpl
add
stos
or
pop
mov
and
lds
push
cmp
sbb
jb,pt
jmp
arpl
sub
dec
es
decl
test
jmp
push
pop
jo,pn
add
sub
add
aaa
xor
add
add
cmp
shr
jmp
arpl
add
test
push
add
scas
push
add
lcall
add
lahf
leave
cmp
pop
mov
pop
daa
pop
lcall
jp
mov
add
mov
adc
add
pop
mov
ljmp
add
rcrb
pop
fldl
add
mov
pop
sbb
adc
gs
cltd
inc
add
lods
jle
pop
repz
lahf
popf
popf
test
rep
nop
push
ret
push
arpl
add
mov
loope
js
leave
jmp
sti
daa
dec
sti
sub
pop
imul
sub
call
in
rdpmc
out
add
add
loop
pop
mov
pop
fimuls
and
add
add
xor
add
pop
leave
mov
mov
clc
mov
add
xchg
rcrb
in
lahf
mov
adc
add
hlt
idivl
lahf
inc
add
jno
add
add
or
jp
cli
pop
clc
pusha
add
rep
daa
pop
call
push
add
mov
out
xor
add
inc
pop
pop
sbbb
pop
cmpsl
pop
into
pop
addr16
add
add
mov
pop
iret
mov
mov
pop
jbe
jne
dec
pop
sub
pop
inc
add
das
shrl
xchg
jmp
dec
in
sub
dec
in
mov
jmp
mov
pop
mov
xchg
call
xchg
cmp
mov
insb
fs
clc
xor
add
pop
pop
mov
add
aaa
push
jmp
mov
dec
cmpsl
pop
push
add
jnp
add
xchg
cmp
lods
mov
in
mov
pop
rorb
lea
add
xchg
ja
pop
pop
push
lcall
clc
repnz
dec
lret
pop
cltd
mov
jmp
push
or
mov
pusha
add
lret
pop
std
cmpsb
pop
inc
pop
push
idiv
xchg
hlt
add
add
pop
loope
pop
push
add
js
jb
add
pop
bound
add
xchg
pop
pop
mov
lds
adc
add
mov
add
cmp
xlat
jnp
enter
in
les
pop
dec
clc
fisttpll
pop
jbe
rcrb
add
add
lea
add
in
xchg
pop
rcrb
add
sbb
fdivp
dec
xchg
add
cmc
adc
add
mov
jnp
bound
add
pop
push
or
cmp
add
adc
add
addr16
aaa
dec
jle
pop
sbb
in
add
add
movsb
pop
ficoml
pop
stos
mov
xor
add
add
mov
dec
push
sti
call
and
and
add
repnz
cwtl
clc
lea
add
add
out
and
outsb
fs
jbe
inc
add
icebp
jbe
pop
nop
adc
add
push
iret
jne
push
stos
insl
leave
mov
rcrl
rcrl
pop
push
pop
fadd
pop
stos
pop
movsl
pop
and
add
xor
add
fs
pop
push
dec
jmp
arpl
xor
add
sbb
add
add
pop
pop
jb
add
fidivrl
or
incb
daa
pop
mov
mov
add
dec
dec
dec
mov
bnd
clc
int
add
mov
add
lock
add
mov
add
mov
push
add
push
pop
pop
outsl
mov
add
adc
add
insb
xchg
stos
in
cmp
dec
or
lock
pop
sub
dec
lock
dec
fsubrl
add
xchg
push
jno
add
mov
leave
dec
pop
test
pop
push
inc
add
mov
sbbb
jo
add
add
sub
add
xor
add
pop
test
fisubrs
lcall
pop
mov
pop
pop
rcrb
lahf
hlt
inc
add
push
jmp
mov
adc
out
inc
add
add
es
aas
sbbb
add
mov
adc
ds
push
add
std
inc
add
fs
push
sbbl
add
add
and
mov
add
ficoml
add
insl
xchg
xchg
add
add
sbb
pop
or
mov
pop
or
jmp
sbbb
movsl
pop
cmp
aam
push
mov
xchg
adc
add
inc
pop
pop
pop
dec
out
sub
inc
pop
jo
add
sbb
add
pop
inc
add
out
sbbb
jg
push
int
pop
repnz
pop
dec
stos
cmp
add
loopne
setge
add
add
xor
sgdtl
add
xor
icebp
in
popa
add
push
pop
sbb
pop
cli
jle
sahf
dec
mov
add
cmpsl
pop
xor
add
pop
sbb
pop
inc
pop
inc
pop
jge
pop
cmp
add
add
sbbb
xchg
aad
add
insl
mov
aam
add
push
add
cmpsb
pop
mov
shl
jmp
lods
and
add
add
push
cmp
mov
pop
sti
out
stos
adc
add
jmp
mov
mov
sub
pop
div
mov
in
aad
pop
inc
pop
fnsave
clc
dec
xor
jmp
add
push
push
jne
jmp
arpl
add
mov
jmp
mov
icebp
pop
lret
out
push
push
add
das
arpl
add
mov
pop
sbb
and
add
divb
push
hlt
jno
add
add
pop
rcrl
pop
int3
scas
inc
pop
mov
pop
push
or
aas
cmpsl
pop
pop
adc
int3
pop
xchg
add
mulb
push
add
adc
add
pop
sbb
leave
xor
add
jg
dec
mov
notb
add
add
xor
add
sbb
inc
add
and
add
or
pop
inc
add
enter
fldenv
inc
add
aad
pop
in
dec
rorb
sbbb
mov
or
add
sbb
pop
pop
cltd
int3
push
add
pop
dec
lock
add
stc
or
pop
lds
or
add
es
ss
mov
stos
sub
pop
xor
add
popf
jns
pop
mov
arpl
add
sahf
cmpsl
pop
bound
add
call
xor
add
imul
ljmp
add
cmpsl
aaa
xchg
sti
xor
hlt
mov
add
test
jmp
ds
add
or
lret
add
loopne
test
add
bound
add
and
add
gs
mov
pop
decb
and
add
int
push
add
inc
add
mov
add
jmp
and
add
push
push
pop
clc
xor
imul
pop
or
add
inc
add
xchg
mov
add
sub
add
add
sbb
sub
add
addr16
sbb
xor
add
imul
loope
pop
inc
add
jecxz
lret
push
add
xor
add
pop
negb
add
add
fbld
call
cld
lret
add
cltd
dec
ror
add
and
add
pop
adc
add
pop
hlt
jne
pop
les
pusha
add
pop
scas
lcall
mov
jne
das
addr16
pop
mov
dec
sub
pop
cmp
sti
jge
pop
and
add
sar
pop
ds
gs
and
add
mov
mov
repz
add
jo
add
jle
jo
add
fisubl
add
pop
out
dec
daa
pop
mov
xchg
xor
add
insl
mov
add
mov
in
lea
fadd
pop
fbld
inc
add
sbb
add
mov
sub
pop
hlt
lret
sub
pop
divb
sbb
mov
jmp
mov
dec
cmpsl
pop
and
add
xchg
sbb
jmp
enter
and
add
jns
adc
add
add
ret
pop
adc
pushf
popf
push
add
cmpsb
pop
in
repz
test
push
mov
nop
push
ret
arpl
or
add
sbbb
adc
add
in
rol
pop
and
add
xchg
ds
sbb
shll
stos
xchg
adc
add
add
clc
rcr
or
sti
es
push
mov
inc
mov
push
xor
add
pop
rcrb
xchg
sbb
add
or
movsl
pop
ds
pop
jmp
add
icebp
push
call
jmp
daa
outsl
adc
add
xchg
jg
add
jmp
pop
arpl
push
add
int
scas
cmpsb
pop
push
add
or
in
mov
add
ljmp
xchg
pop
mov
pop
aad
pop
pop
clc
lods
inc
add
mov
xchg
sub
pop
xor
add
fistpll
sbbb
ret
pop
repnz
movsb
pop
test
jo
add
pop
es
add
add
and
or
incl
mov
cmp
sbb
sbbl
repz
nop
insb
sbbl
add
stos
scas
pop
push
add
std
stos
js
add
cwtl
fwait
xchg
inc
pop
xchg
add
pop
out
rcrl
sbbb
mov
push
adc
add
jne
sub
outsl
adc
add
add
add
sub
out
std
and
xchg
rorb
ficoml
add
sbbl
pop
nop
pop
adc
mov
call
jmp
lods
and
xchg
sbbl
inc
pop
pusha
add
cmpsl
pop
int
add
adc
add
dec
aam
add
ljmp
inc
add
aaa
push
cmp
outsl
pop
pusha
add
sbbb
jns
lcall
sub
mov
add
mov
adc
add
pop
sub
cmp
add
jne
add
cltd
loopne
mov
dec
int3
jns
add
dec
repnz
add
add
gs
out
insb
jl
add
sahf
pusha
add
pop
pop
mov
rorl
inc
add
xchg
jecxz
inc
add
cld
pop
xor
add
add
dec
push
add
fstpl
pop
sbbl
pop
and
add
pop
je
repnz
add
add
scas
jno
add
pop
lea
pop
adc
aaa
lods
cmpsb
pop
rcrb
add
jge
or
jle
inc
pop
scas
xchg
and
add
addr16
push
add
fwait
pushf
dec
gs
pop
sahf
int3
ss
clc
jbe
xchg
outsb
jmp
lods
das
and
add
add
je
add
call
add
and
pop
in
pop
xor
add
das
sub
add
dec
xor
add
cmp
add
ja
push
pop
or
mov
sbb
push
imul
add
add
mov
add
cmc
adc
pop
scas
jecxz
cltd
mov
pop
cmp
add
popf
mov
push
mov
inc
add
add
inc
mov
cmp
pop
cs
sbb
bnd
add
xchg
imul
sub
notl
add
aaa
sub
push
add
les
sbb
add
inc
add
mov
aaa
les
gs
test
lea
pop
sub
jmp
dec
cmp
fldenv
outsl
xchg
add
shr
fiadds
or
pop
mov
mov
pop
inc
add
cltd
addr16
jp
sbb
add
mov
mov
rcll
pop
inc
pop
jae
add
loope
mov
pop
adc
add
fs
sub
ds
xchg
push
jmp
call
inc
pop
inc
add
push
add
shrd
add
das
push
mov
add
scas
negl
and
add
sub
jp
push
jb
add
pop
sahf
popa
add
ftst
pop
mov
pop
test
add
mov
rcrl
in
jl
repnz
pop
pop
sbbb
cmp
pop
aam
add
mov
xchg
jnp
iret
loopne
mov
mov
pop
pop
insb
and
add
cwtl
loope
into
inc
pop
push
mov
jmp
mov
mov
loop
mov
mov
cwtl
popa
add
jno
add
nop
add
fisttps
jmp
add
mov
push
or
cmp
add
popf
jge
pop
sbbl
rcrb
shrb
add
mov
add
out
add
adc
add
jle
pop
fidivl
add
in
pop
aaa
xor
bound
add
fistps
add
jnp
add
cmc
lods
mov
pop
nop
popf
sub
nop
ja
scas
pop
les
add
jne
pop
cmpsb
pop
mov
aad
pop
and
add
inc
pop
aas
jbe
mov
lahf
pop
cli
fbld
add
add
mov
in
cmp
pop
jae
add
mov
add
repz
sbb
add
add
ret
add
mov
aad
aaa
jnp
push
mov
add
add
jp
add
add
nop
push
ret
xchg
mov
jp
rcrl
add
sti
jle
pop
addr16
pop
or
xchg
push
add
ljmp
pop
push
jnp
jae
add
mov
int
push
stc
xor
add
pushf
cmp
pop
sbb
lea
aam
dec
lods
lock
add
jbe
pop
inc
add
fs
push
mov
in
loope
cmpsl
pop
mov
movswl
jmp
arpl
daa
hlt
mov
dec
daa
pop
stos
lcall
add
add
jle,pn
lods
popa
add
mov
fxch
dec
or
lock
aas
lds
pop
bound
add
pop
xor
add
pop
pop
adc
add
lds
jbe
pop
pusha
add
mov
add
cmp
icebp
negl
stos
bound
add
pop
inc
pop
outsb
fadds
add
cmpsb
pop
std
fs
repz
mov
pop
inc
pop
push
add
pop
fwait
push
pop
or
adc
add
mov
pop
xchg
add
dec
imul
add
cmovp
mov
outsl
pop
and
jo
add
inc
pop
pop
addr16
pop
ret
pop
push
add
popf
dec
outsl
mov
pop
std
xchg
mov
and
hlt
mov
loop,pt
jne
add
add
sbb
test
in
jmp
dec
pop
and
add
or
loope
bnd
scas
cwtl
repz
add
add
mov
rcrb
loop
push
add
dec
push
test
in
adc
add
add
loop,pn
es
loop
rcrl
pop
xor
add
pop
les
pop
loop
or
sub
outsl
mov
add
xor
add
add
xor
push
mov
dec
add
sbb
cmp
aaa
es
cmpsl
pop
xor
add
pop
insb
movsb
pop
popf
push
add
test
add
xor
add
push
pop
mov
push
jmp
aam
in
into
test
mov
mov
inc
add
pop
ficoml
add
jo
add
add
inc
add
popf
repnz
popf
stos
arpl
add
xchg
rolb
pop
pop
in
cmpsl
pop
cmpsl
pop
leave
fisttpl
push
jo
add
xor
dec
or
add
loop
lret
popf
in
sbbl
call
aaa
fs
pop
pop
aam
xchg
in
sbb
add
pop
mov
cld
notl
mov
push
add
shl
pop
stos
jecxz
adc
add
xor
add
ss
sbbl
pop
jnp
push
js
rol
pop
insl
xchg
sub
adc
cmc
inc
pop
mov
pop
push
add
mov
pop
add
fidivrl
add
mov
add
cmp
fidivs
pop
and
add
jne
pop
jnp
push
mov
add
or
push
stos
cmc
ret
pop
inc
pop
cs
pop
fdivs
aad
pop
fdivrs
getsec
inc
pop
or
test
pop
loop
and
add
pop
stos
cs
mov
add
add
xchg
sub
mov
add
add
pop
push
add
outsb
add
add
pop
pop
aam
add
pop
mov
pop
inc
pop
xor
mov
add
arpl
add
add
add
leave
xor
add
add
pop
jnp
pop
or
add
dec
cmp
pop
sbb
add
fisubs
sub
pop
pop
mov
ljmp
arpl
jp
jl
pop
adc
outsl
aam
pop
ss
std
es
mov
popf
add
add
pop
imul
xchg
pop
pop
inc
pop
lret
rclb
add
out
dec
aas
pop
stos
xor
push
pop
mov
jge
add
xor
in
dec
and
or
xchg
xchg
cmp
lock
add
repz
mov
pop
rorl
add
pushf
stc
test
in
jecxz
mov
jg
and
pop
adc
js
add
xchg
adc
add
out
add
add
pop
stc
into
mov
add
lcall
es
add
imulb
arpl
add
ljmp
mov
add
xchg
and
pushf
lods
cwtl
cmc
rorl
movsb
pop
mov
pop
sbbb
jmp
or
add
fisttps
cmpsl
mov
loopne
das
jno
add
pop
add
add
test
add
xchg
add
ret
pop
jl
pop
add
add
dec
pop
xchg
push
add
jne
lea
enter
incl
ret
sub
pop
into
dec
cmpsb
pop
or
jne
cltd
insl
push
out
fstps
mov
loope
sbb
jmp
sbb
push
add
fsubl
add
lcall
add
movsl
pop
adc
add
xchg
push
add
jmp
out
in
les
ja
add
pop
pop
arpl
add
xor
add
add
add
out
pop
jns
mov
and
pop
mov
lds
adc
adc
jmp
arpl
sbb
lcall
pop
pop
lods
push
insb
and
add
bound
add
fistl
jle
nop
mov
repz
pop
daa
pop
test
int3
push
into
dec
cs
bound
add
jne
fwait
aaa
jno
add
sub
cli
or
and
add
xchg
insl
sbb
adc
add
xor
add
push
add
or
push
nop
push
ret
sub
xor
add
aad
jo
add
add
repz
push
add
pop
jo
add
pop
sahf
mov
lods
xor
add
pop
pop
loop,pt
inc
pop
push
pushf
inc
add
add
jno
add
xchg
cmpsl
pop
movsb
pop
mov
and
add
push
pop
inc
pop
icebp
xchg
ljmp
outsl
add
mov
dec
test
pop
movsb
pop
in
lcall
dec
sbb
add
test
in
cmpsl
pop
xor
add
jbe
lea
add
xor
cmpsb
pop
icebp
fdivrl
pop
pop
lahf
mov
cmp
pop
jp
int
add
xchg
pop
xchg
push
imul
push
out
mov
into
jno
add
fldlg2
inc
add
mov
mov
imul
add
fdivs
in
xchg
dec
and
add
mov
cmp
push
add
std
repz
push
add
jbe
xor
jmp
pop
sbb
cmp
pop
cli
and
add
dec
sbb
jmp
test
xchg
add
insl
repz
into
lcall
add
xchg
dec
fs
sbbl
int3
mov
pop
lds
dec
in
aaa
sbb
add
dec
test
sub
add
pop
mov
add
or
sbbl
jmp
add
arpl
add
div
jmp
and
add
pop
and
add
pop
pop
je
add
add
mov
and
in
mov
pop
adc
pop
das
xor
push
cltd
sbb
add
dec
aas
mov
pop
adc
inc
add
ss
sbb
pop
xor
add
push
xchg
pop
push
inc
pop
pop
repnz
ss
hlt
lea
add
mov
add
cmp
loop
jp
mov
add
cmpsb
pop
leave
or
pop
sub
test
lea
pop
sarb
add
sti
insl
ret
repnz
jo
add
jle
jae
add
xchg
push
pop
mov
cmpsb
pop
and
add
add
xlat
add
add
pop
test
add
fcmovb
pop
push
es
adc
add
testl
pop
pop
or
xchg
fs
mov
xchg
push
add
call
std
cmpsb
pop
rcrb
pop
pusha
add
int
push
add
pop
cld
fisubrs
cld
and
add
cmp
pop
faddl
pop
sbb
pop
popl
jmp
stos
les
in
xor
add
pop
jp
pop
jmp
dec
add
fbstp
sbb
or
pop
lahf
jnp
xchg
jne
add
add
add
call
pop
sti
sub
add
or
add
xchg
add
enter
and
add
pop
mov
pop
push
adc
add
add
or
pop
xor
cmp
add
das
rcrl
add
lahf
icebp
fxch
fwait
aas
push
inc
pop
or
add
das
xlat
xchg
mov
pop
push
fsubl
je
mov
add
lods
add
add
into
and
addr16
decl
mov
add
idivl
pop
jmp
or
arpl
xchg
sub
mov
shrb
shrb
and
add
js
pop
sbb
add
adc
add
mov
pop
mov
add
lods
pop
cmpsl
pop
cmp
push
sub
pushf
dec
jmp
and
add
jmp
cmpsl
or
cmp
pop
mov
and
lret
mov
push
xchg
in
adc
sbb
jo
add
aam
jbe
cltd
cmpsl
pop
or
pop
fldenv
add
nop
mov
stos
add
add
mov
sbb
out
sbb
loop
ret
pop
mov
xchg
adc
add
mov
and
add
add
pop
pushf
mov
pop
test
pop
pusha
add
cmp
imul
dec
cmp
lahf
adc
add
pop
sbbl
jmp
jne
loopne
pop
lahf
clc
xchg
pop
fadd
pop
xchg
int
add
mov
inc
add
stos
into
and
add
add
add
mov
mov
pop
in
les
pop
add
add
pop
pushf
jecxz
out
ss
add
and
add
jb
add
clc
push
xchg
push
add
fisttpll
pop
push
push
nop
push
ret
arpl
or
push
cmp
or
add
pop
call
movsb
pop
insl
popf
or
pop
add
add
cmp
lret
add
cld
jae
add
cwtl
xor
add
add
pop
add
add
or
add
add
add
fisubrs
add
sbb
mov
pop
cltd
fwait
or
dec
inc
add
rcrl
inc
pop
loope
arpl
add
clc
jmp
arpl
cli
add
insb
dec
cli
cmp
ljmp
cmp
add
and
add
add
xor
add
push
mov
or
pop
or
rcrb
sbbb
pop
loopne
push
add
lret
pushl
shr
mov
pop
adc
in
add
add
rcrb
pop
clc
xlat
adc
xlat
in
sahf
pop
lock
js
mov
adc
int
add
pop
jne
cmc
fdivrs
dec
jmp
push
sbb
push
sbb
cmp
add
inc
pop
or
push
adc
add
pop
dec
jle
jmp
add
jg
sub
jmp
pop
xor
mov
dec
inc
add
loope
pop
mov
out
mov
add
sbb
es
lcall
in
test
pop
or
pop
addr16
push
pop
jmp
xor
les
lret
add
mov
xlat
pop
adc
add
add
pop
and
mov
add
sbbb
out
jno
add
pop
dec
testb
rcrl
imul
repnz
add
mov
add
add
cmp
add
movsl
pop
bound
add
add
pop
out
pop
cmp
cwtl
ljmp
mov
push
pop
sub
jp
pop
mov
add
or
fbstp
add
add
add
mov
add
cltd
push
int3
jb
add
inc
pop
outsl
addr16
push
add
jmp
flds
pop
ds
daa
pop
sbb
loope
add
ljmp
sti
cs
push
add
arpl
cmp
enter
pop
test
dec
lahf
jmp
pop
pop
cwtl
pop
or
xor
add
add
mov
xchg
add
adc
add
clc
outsb
ds
gs
repnz
pop
fdiv
sti
and
add
push
add
cmp
fldenv
mov
dec
ret
pop
jl
mov
sub
mov
test
call
cltd
test
pop
pop
mov
mov
js
mov
loop
jae
add
cmp
sbb
mov
pop
mov
testb
add
repz
add
es
daa
pop
pop
dec
lahf
inc
pop
jp
or
jns
icebp
shl
pop
into
mov
pop
in
xchg
cmc
and
add
pop
mov
mov
in
mov
popl
dec
ret
or
add
cmpsb
pop
dec
in
add
std
mov
pop
push
jne
test
in
sbbl
add
dec
lahf
xchg
xchg
aaa
sbb
mov
inc
add
test
push
ret
arpl
add
imul
hlt
pop
add
sub
add
pop
js
push
mov
ds
rol
pop
enter
add
add
mov
push
add
dec
inc
or
add
sbbl
xchg
sti
sub
add
jge
scas
insb
fnstenv
pop
les
mov
pusha
add
fildl
add
lock
arpl
add
sbb
add
mov
add
dec
repz
je
fnsave
sahf
add
add
xor
stc
stos
pop
inc
add
or
or
pop
rcrl
xor
add
call
fldl
dec
dec
or
add
add
sti
daa
pop
xchg
ret
pop
movsl
pop
out
pop
inc
pop
pushf
loop
int
pop
test
sahf
mov
fimuls
add
sbbb
sbb
add
aam
cltd
outsl
xlat
pop
xor
add
pop
push
adc
add
and
test
pop
or
and
add
add
loop
mov
cltd
adc
add
pop
enter
clc
adc
mov
add
mov
pop
or
jp
xchg
add
sbbb
jecxz
pop
push
add
mov
add
pop
mov
pop
out
out
adc
add
setbe
inc
pop
jge
call
icebp
mov
mov
pop
and
pop
std
mov
add
enter
jns
push
pop
pop
lods
pop
enter
add
mov
je
pop
xchg
test
cmc
pop
fadds
add
adc
add
cmpsl
pop
aam
push
loop
into
push
add
sub
das
cmp
lahf
sub
push
add
sbb
push
or
mov
xchg
mov
jne
pop
addr16
sbb
add
add
pop
push
add
popf
push
pop
xor
add
add
sub
repz
add
mov
inc
add
mov
xchg
or
pop
out
sbbl
pop
iret
divl
and
or
jmp
arpl
mov
add
mov
mov
add
add
fs
xchg
pop
jb
add
dec
rcrb
lea
lret
push
lds
mov
cmp
cmp
mov
jmp
ds
out
test
pop
mov
out
and
add
sti
out
add
decl
mov
push
jmp
cmc
sti
push
lcall
pop
sbb
jns
pop
sbbb
mov
pop
repnz
pop
movsl
pop
es
jmp
pop
xchg
jbe
add
pop
loop
cmp
add
clc
in
nop
idivb
pop
pop
addr16
jmp
rcrb
pop
inc
pop
dec
sub
pop
aas
enter
pop
movsb
pop
rorl
ja
incl
adc
xor
les
repz
add
sbb
pop
ficoml
add
in
sbbb
pop
mov
add
rcl
testl
pop
dec
es
sbb
pop
cmp
push
ret
or
sti
and
add
hlt
loop
repz
cmp
loope
mov
xor
add
add
cld
pushf
jnp
insb
sbbl
add
pop
negb
pop
mov
dec
sub
es
cltd
loopne
xchg
inc
add
ror
stc
push
ljmp
add
add
inc
add
pop
aam
pop
dec
inc
pop
cmp
jle
pop
imul
or
push
ret
nop
push
ret
pop
and
add
add
add
adc
jno
add
add
and
add
or
add
icebp
lods
dec
add
add
sub
mov
mov
test
pop
jl
adc
add
dec
out
mov
lret
sbb
lret
mov
pop
add
add
add
mov
inc
pop
ds
pop
jno
add
xor
add
outsb
mov
pop
jl
jb
add
add
pop
adc
add
bswap
popa
add
imul
ret
pop
ljmp
lret
lods
inc
pop
sti
test
loop
sub
sbb
add
arpl
sub
pop
pop
lock
jmp
cwtl
add
push
fistpll
movsl
pop
xor
add
sub
mov
sub
in
pop
mov
pop
dec
dec
out
mov
rclb
add
pop
mov
add
negl
pop
mov
lds
aaa
aam
sbb
push
ret
pop
test
ds
in
lods
dec
add
add
fdivl
lcall
pop
out
scas
sub
mov
add
stos
xchg
mov
gs
fidivrl
and
add
add
push
pop
aad
call
jmp
adc
sbbl
das
sbb
add
scas
sahf
sbbb
add
lahf
inc
add
mov
xchg
pop
outsl
jbe
fidivs
dec
jns
pop
pop
mov
sub
in
xchg
ja
rcrb
inc
sub
incb
add
xlat
xchg
inc
pop
jg
sar
mov
pop
jb
add
rcrb
adc
add
aam
adc
add
ret
pop
in
test
xchg
mov
add
xchg
jne
movsl
pop
jae
add
pop
aas
xchg
pop
push
pop
loope
fsubrs
pop
lods
imul
add
les
add
loopne
or
inc
pop
scas
dec
pop
aad
add
push
sub
jmp
sti
flds
ljmp
jae
add
sbbb
push
dec
repz
inc
pop
aad
hlt
inc
pop
mov
movsb
pop
flds
push
add
test
pop
cmp
inc
add
adc
pop
out
leave
xor
add
mov
add
add
jmp
stc
loop
adc
add
mov
add
adc
add
push
add
aas
out
push
test
pop
pop
add
fsubs
add
mov
test
call
in
add
mov
add
add
adc
push
outsl
xchg
xchg
push
pop
pop
jl
pop
out
or
test
push
jmp
add
arpl
cld
push
movsb
pop
mov
add
inc
add
dec
sti
mov
pop
add
add
jp
xchg
fildl
add
cmpsb
pop
add
add
add
add
mov
add
dec
dec
jl
cmp
xchg
and
add
mov
cltd
xor
or
cli
aad
ror
jmp
sbb
enter
add
cmp
out
incl
ljmp
arpl
cmp
mov
scas
xchg
sar
imul
pop
add
add
jp
add
sbbb
lods
sbbl
lock
cmp
pop
out
test
pop
push
sar
inc
add
movsb
pop
cli
loopne
pop
popa
add
out
xchg
xor
shrb
add
jmp
add
jnp
sbb
pop
mov
ret
add
into
ds
dec
cwtl
pop
pop
or
fs
cld
sbb
pop
inc
add
adc
repz
das
xor
add
sbb
mov
push
imul
jmp
dec
sbb
add
rcrl
sbb
pop
fsts
jae
add
add
pusha
add
repnz
add
pop
push
add
outsb
xchg
xor
and
add
aam
les
sub
add
dec
push
stos
add
or
add
pop
fsubl
loope
pop
enter
jl
je
jmp
daa
aad
bound
add
jns
fidivrs
bound
add
pop
jno
add
xor
mov
fdivs
push
add
aad
in
lcall
psraw
mov
pop
pop
out
xchg
sbb
cmpsb
pop
pop
pushf
pop
cs
add
add
pop
add
arpl
add
fstpl
push
mov
pop
xchg
xchg
add
add
adc
and
xchg
lahf
jns
push
add
add
add
cli
in
cmp
decl
call
fldenv
add
pop
rcl
daa
pop
jp
xchg
les
inc
pop
shll
add
lds
sbb
mov
cs
cwtl
cmp
add
jmp
push
push
add
add
add
aaa
les
mov
pop
xchg
xchg
add
jmp
pop
arpl
jle,pt
add
cmp
xor
add
and
ret
clc
lcall
pop
mov
add
push
adc
dec
xchg
cmp
cltd
fisttpll
dec
sbbb
mov
enter
cmp
add
sbbb
jbe
cmp
add
cmpsl
pop
ret
out
rorl
mov
xchg
and
add
mov
dec
cmp
push
add
mov
stc
cmp
pop
fs
and
add
add
add
xor
add
mov
add
add
mov
jmp
dec
ret
sbb
inc
loope
xor
add
add
xchg
xor
add
mov
out
xlat
fucom
pop
xchg
add
mov
xchg
sub
pop
pop
pop
fistpl
xor
jmp
sbb
add
xor
add
sub
xor
add
outsl
or
add
add
pop
sbb
push
ret
pop
shrl
add
cmp
int
push
add
adc
add
es
sbbl
jae
add
add
jecxz
enter
inc
add
jae
add
cmpsl
pop
xchg
sbbb
into
sbb
inc
add
into
cwtl
fsubrs
adc
dec
leave
cmp
pop
sbb
popa
mov
incl
add
add
aad
mov
pop
cmp
cmp
pop
scas
and
adc
add
pop
stc
mov
pop
pop
ja
push
mov
mov
add
push
jmp
mov
dec
adc
add
or
or
pop
push
sbb
pop
pop
int
pop
sbb
idivl
scas
shr
test
add
pop
gs
movsb
pop
push
bound
add
add
pop
int
pop
adc
ljmp
icebp
sub
pop
jbe
leave
je
test
dec
mov
add
mov
add
in
sti
dec
mov
push
loope
movsl
pop
aas
adc
add
jge
pop
das
repz
add
add
pop
pop
add
add
xchg
es
pop
imul
pop
aam
lock
ret
pop
jne
pop
mov
pop
pusha
add
pop
xchg
or
insl
mov
int
jns
pop
adc
add
loop
rol
pop
inc
add
or
sbb
push
push
add
mov
add
adc
add
pop
pmulhuw
inc
add
sahf
movsb
pop
xor
push
or
pop
xor
add
rcrb
repnz
fs
es
xchg
cmpsb
pop
inc
add
test
or
pop
loop
into
les
mov
add
mov
lret
add
add
or
pop
sbb
add
mov
add
push
mov
pop
int
nop
sbb
add
int
aad
pop
mov
clc
sbb
pop
pop
dec
pop
mov
jecxz
mov
push
ret
arpl
addr16
in
add
add
aad
in
mov
or
add
lods
push
add
pop
mov
xor
add
iret
inc
add
pop
or
cmp
add
xor
add
add
ficomps
sahf
shlb
popa
add
insl
out
dec
mov
and
pop
or
aam
sub
mov
sub
adc
add
inc
pop
fcoml
mov
out
jo
add
add
jne,pt
xchg
movsb
pop
fwait
pop
mov
popf
aad
pop
iret
xlat
cmp
inc
pop
fcoml
add
pop
mov
sub
mov
and
add
pop
into
and
add
or
add
add
pop
jo
add
add
pop
es
in
aas
and
add
pop
outsb
inc
add
cmp
xchg
jne
shl
loope
lahf
out
rcrb
fbld
arpl
add
out
stos
scas
inc
add
inc
pop
pop
mov
xor
add
shlb
cmc
iret
int3
or
or
pop
xchg
sub
add
mov
pop
mov
add
add
jecxz
pushf
cli
adc
jb
add
inc
add
push
pop
and
add
mov
push
adc
add
dec
sub
pop
pop
sub
addr16
jp
ret
mov
add
repz
aaa
xor
add
pop
jmp
cmp
ret
add
pop
jg
mov
add
outsb
inc
pop
jno
add
sub
pop
jne
lret
fwait
mov
sbb
push
nop
push
ret
mov
lcall
add
add
or
add
or
pop
push
mov
outsl
mov
out
or
pop
repz
add
mov
lock
xchg
and
add
jmp
jmp
or
jecxz
push
push
add
imul
xchg
xchg
fistps
mov
out
add
add
fisttps
pop
jle
insl
rcrb
int
pop
cld
sbbl
call
add
fwait
push
fdivrp
sahf
or
daa
pop
lahf
mov
or
and
pushl
xchg
push
daa
movsb
pop
mov
sub
mov
jmp
push
pop
mov
add
pop
jecxz
push
mov
jmp
sbb
aam
adc
add
loop
decb
out
sub
imul
mov
mov
jmp
flds
dec
xor
push
mov
nop
push
ret
aaa
push
jno
add
in
dec
imul
add
add
lret
add
dec
mov
add
sbbl
or
loop
imul
jp
pop
inc
pop
repz
fsubrl
mov
add
sub
rcr
mov
add
pop
addr16
xchg
enter
pop
or
inc
add
pop
lret
aaa
jne
jecxz
push
dec
popl
add
std
or
or
pop
mov
add
mov
fisubl
add
add
sbbl
or
add
imul
ret
pop
push
add
cltd
repnz
add
hlt
and
mov
mov
push
pop
int
push
nop
push
ret
push
pushf
add
aas
roll
dec
lea
add
pop
push
cmp
fwait
imul
push
add
ja
pop
out
add
add
rcrl
add
fisubrs
ss
iret
mov
add
push
add
jmp
sub
add
pop
test
pop
lds
add
imul
lods
out
imul
mov
pop
mul
pop
rcrl
add
imul
push
add
bnd
in
add
add
out
add
mov
pop
inc
jmp
lcall
inc
mov
cli
out
aas
push
add
xor
add
or
int
scas
push
xor
add
add
enter
pop
rol
pop
push
add
cmp
fstl
jmp
adc
pop
pop
adc
fstpl
add
inc
pop
notl
add
fbld
pop
pusha
add
mov
aas
mov
sbb
add
int3
arpl
add
add
fldl
mov
jae
add
add
xlat
imul
addr16
add
add
bound
add
pop
jl
loope
ljmp
fisttps
push
jl
pop
mov
dec
dec
lock
pop
icebp
cmpsl
pop
cmp
jae
add
add
dec
dec
js
inc
add
sbbl
sbbb
cmpsb
pop
push
mov
pop
sbbb
test
iret
test
arpl
add
mov
push
mov
mov
movb
add
add
add
add
sbb
rcrl
mov
pop
sbb
mov
inc
add
mov
or
push
div
in
xchg
fsubl
xchg
push
add
daa
pop
aam
pop
fisttpll
add
pop
sbb
pop
rcrl
xchg
inc
add
jecxz
mov
add
cmp
sbb
mov
push
loopne
xor
add
xchg
pushf
ffreep
pop
push
add
aas
cmp
fcom
decl
mov
arpl
pusha
add
sbbl
mov
pop
push
mov
jmp
arpl
test
inc
add
dec
bound
add
add
inc
pop
gs
push
and
fstpl
ret
in
bswap
in
mov
pop
sbbl
push
daa
pop
lds
sbb
xlat
pop
gs
testb
add
mov
add
loop
xchg
int
incl
ret
jmp
and
sbb
dec
sub
add
jmp
jb
add
pop
mov
jno
add
pop
jne
pop
inc
add
mov
lods
lds
aaa
stc
mov
and
add
add
mov
xor
jmp
test
sbbb
fildl
mov
test
pop
cmpsl
pop
sarl
fbstp
pop
adc
add
pop
fwait
and
add
add
mov
outsl
dec
dec
push
add
cli
lret
iret
std
in
jns
mov
jns
add
mov
ds
pop
mov
adc
add
jnp
aad
add
push
push
icebp
idiv
incl
sbb
pop
add
fisubrs
pop
mov
cmp
add
out
lods
clc
sbb
pop
cwtl
mov
add
mov
insl
xor
pop
inc
pop
call
lret
pop
insb
dec
sbb
dec
mov
and
add
add
loopne
bswap
jmp
pop
dec
movsl
pop
jnp
pop
rcll
add
fisubrs
ss
movsb
pop
mov
ljmp
mov
pop
insl
mov
mov
mov
inc
pop
mov
add
jno
add
mov
add
add
imul
in
add
add
xor
add
jne
jmp
fbstp
adc
mov
cmp
add
adc
add
pop
outsl
mov
daa
pop
and
add
add
sbb
add
add
std
xor
test
shrb
pop
fnstenv
add
jmp
cli
shrb
pop
fiadds
jg
mov
sub
pop
xchg
cld
sbbb
add
sbb
nop
push
ret
mov
inc
std
pop
push
pop
jmp
dec
or
adc
add
bound
add
dec
out
or
add
pop
xlat
gs
rcrb
out
mov
pop
cmp
hlt
test
mov
pop
mov
mov
packsswb
add
xchg
push
add
fcomps
imul
aad
pop
scas
in
push
sahf
in
das
xchg
push
add
xchg
or
mov
add
mov
pop
cmc
mov
add
aas
cmp
xor
add
sub
pop
cld
scas
js
adc
add
add
repnz
xchg
icebp
xchg
xor
add
dec
imul
add
add
add
fs
mov
pusha
add
fildll
xor
sbb
pushf
pop
cmp
scas
out
sbb
fwait
repnz
call
sbbl
cmp
cmp
sbb
push
cmpw
jmp
arpl
outsb
int
lea
jle
add
cmp
add
add
nop
push
ret
mov
add
adc
add
sahf
mov
enter
pop
inc
pop
push
lahf
sub
inc
add
test
add
nop
je
pop
popf
pop
push
mov
add
inc
add
mov
add
repnz
dec
in
cli
daa
pop
mov
inc
add
lods
repnz
jno
add
lahf
sbb
sahf
shl
pop
lea
xor
add
push
add
stos
inc
add
cmp
add
xor
add
fmull
pop
cmp
add
pop
jle
add
or
pop
movsb
pop
aas
sbbb
add
add
pop
divl
dec
loope
outsb
sbbb
dec
mov
clc
jle
rorl
jle
or
pop
les
inc
add
addr16
mov
sbbb
pop
xor
loop
fadd
pop
xchg
pop
dec
ficoml
pop
mov
mov
cwtl
test
add
adc
push
sahf
int
or
xchg
decl
pop
inc
out
enter
add
out
fneni(8087
pop
test
std
cmp
cmp
pop
jne
xchg
add
add
and
add
popa
add
lret
fisubl
add
jge
pop
fbld
push
mov
sahf
cmp
jnp
add
pop
cmp
add
pop
sbb
rcrb
sbb
push
rcrl
dec
imul
pop
rcrb
cmp
cmp
aam
movsb
pop
sbb
mov
les
lock
stos
sbbb
pop
fs
sub
cmp
insb
adc
add
test
jle
imul
pop
inc
pop
addr16
cmp
pop
push
add
out
lret
jge
icebp
lds
pop
inc
pop
mull
add
sbb
pop
in
popl
add
add
cmpsl
pop
adc
add
in
and
add
add
je
fwait
jp
std
sbb
add
add
add
adc
add
pop
jo
add
or
pop
mov
mov
jmp
test
pop
rcrl
pop
movsb
pop
or
lret
add
add
add
loopne
sbb
push
ret
xor
arpl
mov
out
dec
ret
pop
add
add
add
pop
or
mov
dec
cs
pop
inc
pop
push
pop
rcrb
loopne
into
xor
add
pop
mov
mov
mov
call
mov
mov
dec
cmp
out
inc
pop
xchg
aad
pop
out
sub
sahf
mov
icebp
push
punpckhwd
imul
xor
add
pop
leave
shrl
push
add
push
sbbl
pop
mov
add
pop
fs
outsb
cltd
xchg
mov
inc
pop
popa
add
rcl
in
jl
sbbl
popa
add
or
pop
sbb
add
popf
lret
inc
pop
popf
mov
mov
loop
cld
rcrb
fiaddl
adc
sbbl
pop
in
sbb
and
add
add
les
push
gs
and
add
icebp
sbb
pop
cmp
pop
mov
fisttpl
add
and
add
jmp
add
outsl
mov
pop
mov
push
push
jp
arpl
pop
cmp
pop
sub
xchg
outsb
mov
pop
dec
adc
add
movsl
pop
sub
xchg
jle
lea
jmp
arpl
dec
fstps
pop
pusha
add
or
pop
xlat
movsl
pop
pop
push
aas
out
inc
add
pop
dec
adc
pop
mov
inc
pop
or
pop
bound
add
mov
xchg
loopne
push
pop
push
pop
cld
iret
push
add
cmp
pop
jp
fidivs
add
pop
pop
je
add
div
stc
arpl
add
scas
call
jmp
push
in
sub
pop
out
xor
mov
insb
xchg
push
lods
in
aaa
cmp
shlb
add
pop
inc
add
lds
xchg
jne
pop
sbb
pop
outsl
sarb
pushl
rclb
add
arpl
outsl
sbbb
inc
add
fcmovb
pop
pop
std
adc
xor
xor
add
add
add
cmpsb
pop
cmc
mov
arpl
add
mov
pop
fwait
jo
add
pop
sbb
js
jmp
mov
add
in
addr16
aam
pop
cwtl
dec
dec
and
add
add
cmc
pop
pushf
or
add
into
sbb
xor
add
stos
push
fsubs
add
sbbl
xor
pop
out
rcrl
sub
mov
pop
dec
lahf
ret
pop
inc
pop
pusha
add
sub
pop
or
pop
cli
jo
add
pop
dec
push
mov
pushl
add
xchg
push
inc
add
arpl
add
stos
mov
loope
je
icebp
sti
sub
pop
xor
add
push
pop
inc
add
test
pop
mov
add
scas
lds
lcall
cli
cltd
push
or
pop
jbe
aas
cmpsl
pop
xor
call
addr16
popf
outsl
cmp
xor
popa
add
cwtl
rcrl
sbbb
das
rcrl
inc
pop
inc
pop
inc
pop
inc
pop
jl
outsb
rcrl
sub
mov
mov
loop
or
mov
jmp
pop
daa
inc
xor
add
dec
ret
pop
mov
add
fisubl
and
fisubs
cld
sbb
add
add
add
adc
add
dec
das
leave
gs
int3
mul
pop
out
xchg
add
mov
xor
add
lods
mov
add
stos
enter
gs
push
add
out
jecxz
rcrl
pop
movsl
pop
mov
shrb
and
add
in
jge
pop
push
add
push
add
test
pop
lds
fcoms
add
pop
lock
popa
jmp
in
pop
dec
aam
pop
mov
fbstp
add
mov
pop
lods
in
ret
pop
mov
add
mov
sbb
enter
pop
repz
jg
fldt
fs
bnd
fdivrl
jo
add
pop
push
add
push
add
sub
and
add
scas
add
add
add
sbb
adc
ja
add
out
push
add
mov
pop
mov
pop
sbbb
fs
neg
arpl
add
add
int3
xor
pop
cmp
add
fcomps
mov
insb
xchg
inc
pop
ficoml
pop
rclb
cld
fisubrs
mov
sub
pop
stos
xor
add
mov
testb
add
pop
xor
jnp
pop
sbb
rcrl
mov
add
add
aad
add
jne
dec
push
sub
repnz
pop
rcrb
mov
jmp
pop
arpl
push
adc
pop
adc
add
pop
nop
dec
jl
or
imul
in
iret
sbbl
sub
and
test
mov
and
add
jb
add
add
loop
mov
xor
leave
sub
cmpl
jmp
aaa
arpl
mov
or
cmp
jmp
and
add
pushf
xchg
push
dec
rorb
scas
mov
int3
movsl
pop
sub
pop
pop
pop
push
lds
push
push
pop
xchg
add
add
add
imul
cmp
es
out
test
pop
lea
sub
out
pop
dec
fdivrs
mov
add
icebp
pop
es
dec
mov
push
pop
mov
push
call
jmp
arpl
add
repz
mov
ljmp
aas
mov
dec
ss
mov
nop
mov
dec
sbbb
sbb
push
ret
push
pop
pop
in
inc
add
decl
add
add
sbb
jmp
push
jmp
xor
cmc
aam
mov
jmp
mov
jge
cmp
imul
add
jl
fistl
add
cli
in
adc
add
pop
in
sub
add
test
add
add
inc
pop
pop
imul
imul
or
add
or
jnp
add
xor
add
mov
incl
insb
sub
add
mov
mov
add
add
sbb
loop
cmc
sbbb
xor
add
add
and
jmp
arpl
fld
pop
fs
pop
jno
add
pop
lods
rcl
loop
cld
popa
add
or
add
add
call
add
ret
pop
jle
shrl
mov
outsb
sbb
mov
daa
pop
pop
in
pop
mov
add
pop
into
xchg
mov
ror
sti
je
les
pop
loopne
imul
mov
add
test
dec
add
in
cmc
sub
push
sbb
iret
inc
add
cmpsb
pop
fiaddl
add
pop
mov
jmp
xor
cmp
xchg
mov
pop
popf
push
add
adc
repz
cmp
sub
jmp
sub
mov
outsl
sbb
jbe
call
arpl
xchg
movsb
pop
mov
add
insl
push
push
mov
mov
ja
pop
adc
push
add
xchg
mov
scas
lret
in
into
and
add
mov
lcall
pop
mov
pop
cwtl
mov
add
mov
fnsave
add
jb
add
mov
repz
pop
enter
add
add
add
ja
enter
pop
push
stos
jns
xchg
test
js
pop
dec
imulb
pop
cmpsl
pop
push
add
xchg
xor
jmp
aam
inc
ljmp
in
mov
sbbb
pop
lock
pop
mov
cld
fs
test
sbbb
pop
lock
pop
lret
test
cmc
loopne
inc
pop
das
es
add
add
add
pop
test
mov
xchg
fiaddl
ja
sbbb
pop
pop
imull
lret
add
scas
cli
dec
adc
leave
je
add
sub
pop
jg
adc
add
fcomp
cmp
pop
imul
cmp
dec
arpl
fsincos
mov
in
mov
pop
lods
push
add
and
add
jbe
jmp
add
add
sbbl
mov
xchg
je
mov
sbbb
pop
out
es
popa
add
hlt
mov
add
xor
add
cld
dec
scas
and
add
mov
incl
test
add
add
add
popf
or
pop
pop
cmpsb
pop
out
dec
sbb
pop
pop
and
add
pop
adc
add
add
je
pop
ffree
pop
dec
jnp
pop
or
cmp
fisttpl
pop
bound
add
pop
mov
add
test
add
cmp
add
inc
pop
rcrl
pop
push
add
movsb
pop
mov
add
incl
xchg
test
decl
sbb
imul
out
imulb
insl
xor
inc
add
cmp
sub
add
pop
popa
add
pop
jge
imul
and
jmp
add
dec
lods
adc
add
not
loopne
sbb
sbb
stos
mov
inc
pop
mov
add
add
add
arpl
add
gs
and
lret
add
insl
loop
in
lock
mov
mov
pop
mov
bound
add
pop
mov
mov
pop
mov
pop
jne
add
cmp
call
pop
loope
or
add
cli
or
add
pop
mov
cmp
and
add
add
lds
fmuls
lea
add
movsl
pop
les
shl
test
mov
jmp
arpl
pushf
push
xchg
loop
into
ret
jbe
outsb
gs
das
lods
adc
add
mov
nop
push
ret
cmc
xor
fcoml
sti
movsl
pop
outsl
lcall
sbbl
lahf
add
add
add
pop
mov
outsb
scas
into
lea
add
gs
sbbl
add
pop
push
mov
add
sub
add
sbbl
fldcw
jne
jmp
arpl
xchg
je
dec
or
outsb
cmp
js
outsb
rcrl
popf
jmp
arpl
arpl
add
jmp
aam
jmp
or
add
enter
dec
xor
add
add
add
sub
add
pop
enter
sahf
inc
add
add
add
aad
sbb
out
pop
imul
jmp
jne
xor
add
sbb
pop
cmp
mov
add
jge
sahf
mov
insb
rcrl
sbbb
add
stc
aaa
mov
or
sbb
adc
add
cwtl
dec
pop
jns
pop
sbbl
adc
add
jmp
push
add
jbe
add
add
xor
add
mov
cwtl
addr16
inc
add
add
add
loop
sbb
inc
pop
sbbb
and
add
add
pop
or
nop
push
ret
sub
hlt
gs
pop
adc
pop
das
xlat
pop
pop
test
sbb
decl
mov
arpl
add
jmp
push
or
stos
dec
jns
js
les
add
add
or
test
mov
add
add
je
pop
xchg
and
add
fsubs
sub
inc
add
inc
pop
sbb
sbb
sbb
add
test
pop
inc
add
push
add
pop
mov
pop
in
sbbb
sub
add
nop
lods
sub
add
add
hlt
aas
lock
cmc
into
pop
leave
iret
rcrb
out
push
add
mov
add
push
mov
arpl
adc
add
mov
xchg
scas
sbbl
lcall
adc
add
pop
dec
mov
adc
add
push
add
mov
cli
jb
add
push
lret
push
sahf
inc
pop
cmp
pop
cwtl
lea
icebp
mov
movsl
dec
jmp
arpl
icebp
pop
test
pop
push
xchg
dec
scas
lret
pop
pusha
add
imul
add
cmp
add
pop
mov
loopne
add
add
pop
or
loopne
daa
pop
or
jp
dec
mov
mov
sbbl
inc
pop
push
cltd
fisubl
add
mov
lahf
mov
aam
add
xchg
leave
push
xchg
es
sub
sahf
ret
pop
jp
pop
test
add
add
mov
dec
fwait
mov
add
ds
pop
imul
sbb
add
xchg
mov
idivb
mov
add
add
dec
push
iret
inc
add
sbb
js
in
cmp
add
mov
jmp
arpl
xor
add
jg
pop
popa
add
js
add
leave
inc
pop
pop
or
mov
add
add
cli
ret
pop
push
lds
inc
pop
sbbb
fidivl
je
add
add
pop
jg
out
xor
add
push
fcmovb
pop
xor
add
mov
in
xor
add
inc
add
pop
or
ja
ret
or
add
add
add
add
mov
das
mov
push
pop
fmull
add
inc
add
or
jge
mov
mov
jmp
pushf
xor
inc
pop
mull
jo
add
add
popf
or
adc
and
add
jns
xchg
mov
mov
dec
xor
ret
cmp
add
add
pop
or
add
mov
add
clc
mov
add
iret
mov
push
add
aaa
inc
pop
sbbb
dec
xchg
ljmp
pop
push
pop
sbbl
les
mov
add
pop
sbbb
inc
add
or
pop
aaa
adc
add
add
sti
mov
add
adc
add
shl
sbb
jl
pop
jmp
pop
aas
dec
jo
add
out
mov
dec
das
xor
pop
jmp
in
arpl
xchg
cmp
or
add
jmp
sbb
and
pop
pop
jae
add
test
pop
and
aaa
inc
pop
sub
out
xchg
cmc
sub
sti
leave
cmpsb
pop
lock
inc
pop
arpl
add
cmp
sbbl
and
cmp
mov
jmp
xchg
arpl
jb
add
and
fldt
sub
pop
cmc
rcl
inc
pop
mov
add
mov
pop
inc
pop
pop
push
add
mov
mov
cmc
jae
add
add
pop
imul
pop
shl
enter
rcll
jge
xchg
push
pop
mov
jb
add
das
sbb
pop
xor
adc
loop
lcall
add
add
add
add
xor
add
mov
pop
push
cwtl
pop
xor
add
les
or
jg
ja
cmp
add
rcrl
rcrl
xchg
rcrl
pop
add
add
pop
xlat
gs
imul
add
rclb
stos
aam
add
add
pop
xchg
pop
cld
sub
pop
mov
mov
mov
insl
bound
add
shr
aas
gs
arpl
add
add
shl
pop
sbb
mov
decl
aaa
mov
pop
pop
into
mov
dec
fldenv
dec
sahf
out
inc
add
movsb
pop
mov
insb
cmp
inc
add
fisubrl
aad
pop
pop
jge
push
add
sub
fwait
mov
add
jnp
pop
mov
sbb
dec
pop
mov
bound
add
add
cmp
es
jne
into
mov
push
popf
mov
pop
push
add
out
inc
add
add
add
add
insb
imul
add
pop
sub
pop
or
add
jae
add
and
add
pop
inc
pop
int3
inc
add
jp
push
mov
adc
test
sub
add
push
adc
add
dec
aas
and
add
pop
sbbl
adc
pop
in
mov
push
inc
add
leave
fmulp
or
mov
sub
push
push
ret
sbb
jge
pop
jp
jae
add
adc
and
push
and
inc
pop
pop
daa
pop
mov
add
mov
push
mov
pop
mov
out
pop
in
clc
mov
add
out
jecxz
pop
ja
arpl
add
lds
add
in
fldl
add
shr
nop
mov
push
add
jmp
pop
pop
pushf
mov
rcrl
inc
pop
lds
insl
cltd
call
addr16
sti
test
aas
mov
add
jo
add
aad
jge
sub
ss
mov
pop
jmp
stc
into
add
add
add
stos
jbe
xchg
pop
push
add
mov
or
pop
pop
add
add
or
jle
in
push
pop
mov
call
cmp
or
cmpsb
pop
pop
pop
cltd
std
or
je
jmp
mov
pop
jnp
add
sbb
push
pop
pushl
test
daa
arpl
loop
and
add
add
cmpsl
pop
sahf
xor
xor
add
xchg
push
adc
sbb
scas
stos
inc
add
push
arpl
pop
xlat
inc
pop
sti
push
cmp
pop
cmp
push
jb
add
push
jae
add
add
push
add
daa
pop
dec
fadd
pop
cmc
push
add
fdiv
adc
adc
add
or
pop
adc
add
imul
cmpsb
pop
jnp
sbbl
sbb
call
in
adc
mov
inc
add
pusha
add
sbb
add
lret
xchg
negb
mov
pop
movsl
pop
add
add
add
das
mov
popf
xchg
rcr
popa
add
stos
test
or
add
ret
pop
icebp
jmp
out
jo
add
repnz
call
rcrl
pop
jl
mov
sbb
add
add
into
sbb
cmp
pop
adc
add
add
in
out
sbb
add
pop
pop
xchg
cs
call
add
test
adc
add
addr16
insb
shll
pop
cmp
mov
pop
jecxz
inc
pop
mov
add
xchg
addr16
xor
add
insb
arpl
add
arpl
add
arpl
add
out
mov
add
jp
lcall
dec
sbb
fbstp
add
dec
push
js
pop
arpl
add
pusha
add
jo,pn
add
add
sbb
cwtl
dec
add
add
pop
pop
jmp
pop
vprotb
sahf
outsb
fcomps
cmp
pop
pushf
cmpsl
pop
int
xor
pop
in
mov
add
add
sti
inc
pop
pop
mov
sub
xchg
sbb
push
add
sbb
inc
add
loopne
cmp
fadd
pop
pop
pop
xchg
xor
lret
aas
or
pop
add
xchg
cmc
inc
pop
mov
mov
add
mov
xor
add
pop
rcrl
jl
add
cmp
outsl
test
dec
bound
add
add
add
add
add
pop
adc
mov
pop
frstor
add
jecxz
pop
xor
add
ret
pop
jl
pop
loop
mov
iret
outsb
loopne
lret
or
mov
lgs
add
push
add
js
test
pop
dec
ja
repnz
sbbl
sbbb
adc
add
lds
ret
aaa
push
jmp
adc
add
mov
hlt
jg
cmp
dec
fsub
pop
gs
jbe
pop
mov
xchg
pop
iret
dec
clc
jg
jge
loop
nop
or
pop
or
pop
jb
add
push
add
and
add
pop
scas
push
xchg
int3
ljmp
ficoms
adc
add
jge
in
xchg
in
lahf
enter
loope
out
fistpll
push
add
or
inc
add
fcompl
mov
pushf
jae
add
lcall
inc
add
pop
pop
mov
cltd
and
add
add
mov
sub
ficoml
add
dec
lds
add
xor
add
movsb
pop
sbbl
sub
add
add
cmp
pop
ja
pop
or
cmp
push
test
lods
jae
add
jge
or
insl
and
add
and
lock
xor
add
ja
add
stos
jge
mov
das
outsb
adc
add
clc
pop
lret
cmp
pop
pop
fdivrl
pop
adc
add
pop
addr16
inc
pop
xor
add
pop
sub
test
inc
pop
cmpsl
pop
iret
out
shlb
mov
sar
loopne
imul
cwtl
and
das
fnstenv
add
pusha
add
or
add
pop
push
xor
dec
sarb
jnp
stc
gs
insl
mov
add
add
add
add
movsb
pop
pop
and
add
add
push
mov
pop
sar
jns
pop
stos
jb
add
pop
imul
pop
jns
pop
mov
mov
inc
add
stos
xchg
test
iret
fcoml
add
push
pop
sbbl
add
jae
add
and
add
loop
mov
loope
loop
pusha
add
push
pop
pop
scas
into
sub
sbb
add
and
add
jg
outsl
stc
add
add
addr16
lret
cmpsb
pop
ret
pop
add
add
add
lock
inc
add
sbb
add
sbb
pop
xor
add
pop
std
out
xor
inc
pop
ja
mov
es
and
fdivl
add
imul
lock
adc
add
inc
pop
imul
pop
std
add
aam
sbb
add
pop
adc
sub
inc
pop
out
iret
imul
add
adc
add
inc
pop
in
rorb
pop
pop
lods
sbbl
clc
in
addr16
into
in
jl
call
add
pop
xor
add
add
add
add
pop
mov
add
pop
aad
sbbl
pop
daa
pop
in
sub
mov
pop
sti
sbbb
pop
cmp
add
mov
out
mov
xor
add
xchg
sbbb
outsl
gs
lock
mov
add
pop
insb
sbb
add
sbbl
push
outsl
and
add
sbbb
pop
mov
add
test
and
add
pop
cmp
daa
pop
and
add
pop
sbbb
xor
add
jns
cltd
pop
jmp
pop
pop
cmpsl
pop
dec
or
test
pop
add
add
add
pop
stos
bound
add
add
mov
dec
or
push
in
cwtl
push
add
xor
add
mov
adc
add
jg
jle
add
sub
dec
rcrb
das
jnp
mov
cmpsb
pop
and
add
add
sbb
loope
mov
and
add
or
and
add
cld
inc
add
lods
mov
jg
add
scas
and
add
add
lret
les
inc
add
inc
pop
adc
add
add
pop
fwait
mov
aad
adc
add
pop
aas
lret
icebp
iret
dec
insb
aaa
fcoml
and
add
pop
jmp
pop
enter
pop
hlt
xor
test
lods
sahf
sub
pop
mov
or
pop
mov
outsl
out
jb
add
scas
push
lret
lahf
cmp
pop
pop
jg
lea
pop
outsb
mov
pop
out
pop
xchg
repz
mov
rcrb
push
push
add
das
adc
push
add
rcrb
pop
mov
pop
test
test
jg
bound
add
inc
add
movsb
pop
pushl
add
lea
add
or
xor
add
add
mov
pop
lahf
notb
mov
enter
pop
test
pop
insb
addr16
sbbb
decb
add
ret
pop
lds
bound
add
inc
pop
fldcw
js
add
inc
pop
cmp
add
stos
mov
pop
pop
mov
sbbl
lret
jo
add
shrl
call
fucomip
cmp
mov
inc
pop
pop
inc
add
cmp
push
pop
or
add
in
pop
daa
pop
outsb
notb
add
inc
pop
insb
les
add
mov
add
pop
push
xlat
inc
add
add
add
push
dec
mov
pop
xor
mov
push
add
cmp
pop
mov
add
push
adc
add
inc
add
adc
add
pop
xor
add
add
sbbl
test
cmp
adc
add
stc
pop
aas
cmpsb
pop
sbb
inc
add
ja
add
mov
popl
add
sarb
add
mull
pop
push
add
pop
stos
cmpsl
pop
inc
add
shll
sarl
fs
push
in
mov
nop
jg
mov
hlt
and
add
pop
dec
ss
pop
ds
inc
pop
xor
add
dec
ss
call
pop
scas
daa
pop
lret
bound
add
add
inc
add
sbb
add
and
add
mov
add
pop
mov
cmp
adc
repnz
push
int
pop
pop
jne
add
pop
jae
add
or
pop
mov
loope
repz
cmp
pop
push
xor
cmp
add
pop
push
cld
loop
jae
add
add
ja
xchg
pop
loope
aad
add
sub
and
add
pop
push
mov
int3
or
pop
rcrl
add
add
add
jg
pop
ljmp
add
xor
add
jp
push
add
xor
mov
cmpsb
pop
mov
add
daa
pop
cmp
daa
pop
ljmp
in
stc
int
bound
add
add
push
loopne
frstor
add
mov
xor
dec
dec
sbb
mov
out
or
fildll
pop
push
jnp
xor
add
popa
add
sbb
mov
xor
jae
add
fsubrl
lahf
loopne
pop
aaa
pop
sahf
nop
adc
add
add
and
add
mov
pop
adc
add
mov
iret
int
fiadds
pop
jmp
aas
insb
int
pop
pop
sti
rcrl
push
add
mov
add
push
fwait
rcrl
insb
popa
add
and
add
cmp
sti
imul
cwtl
jmp
add
jg
arpl
add
pushf
sub
fldcw
ret
pop
pop
lds
pop
push
add
pop
jae
add
rcl
fnsave
lahf
or
sbbl
xchg
in
jbe
lods
rol
pop
ja
rcrl
and
add
daa
pop
mov
add
sbb
mov
mov
push
and
add
rcrl
or
xlat
out
push
and
jle
xor
add
lret
sbb
mov
add
inc
add
push
mov
stos
sub
add
add
jno
add
add
les
add
test
xchg
rcrb
pop
into
xchg
mov
dec
inc
add
adc
sti
add
add
add
push
imul
fwait
mov
leave
std
push
fidivrs
dec
lea
add
ss
pop
jp
ret
pop
mov
imul
ljmp
das
jns
ja
scas
mov
mov
sbb
and
add
shrb
fcmovnu
dec
add
add
add
pop
pop
and
add
mov
pop
and
add
add
xchg
loop
rcrl
pop
xor
add
pop
fwait
sbbb
add
les
pop
rorb
jmp
add
stos
cmpsb
pop
pusha
add
and
add
add
push
and
add
lock
add
push
add
dec
pop
fbld
mov
pop
in
cwtl
lcall
roll
add
pop
pop
jecxz
dec
in
out
popf
test
scas
popa
add
pop
test
sub
pop
mov
add
add
xchg
pop
adc
pop
dec
xchg
fdivrs
pop
xchg
jmp
call
aaa
jae
add
pop
fdivrl
pop
divl
jl
inc
add
xchg
sbb
pop
lock
addr16
outsl
mov
in
adc
out
cmp
bound
add
test
pop
dec
add
sub
mov
push
pop
push
nopl
adc
add
and
add
leave
xchg
mov
jno
add
add
pop
jns
xchg
adc
add
pop
mov
rcrl
push
out
jp
add
out
lahf
add
add
lret
insb
pop
dec
lods
add
add
sahf
or
pop
xor
add
call
add
addr16
test
add
mov
scas
push
add
mov
cmp
leave
sub
jmp
push
popa
add
into
xor
arpl
add
clc
dec
mov
addr16
and
add
pop
add
gs
cli
scas
arpl
add
daa
pop
and
add
aam
push
in
pop
outsb
mov
ds
pop
je
adc
add
sub
ret
lock
pop
and
add
push
add
test
pop
push
mov
add
pop
jmp
pop
sbb
mov
sbb
pop
xchg
xor
mov
xlat
lcall
daa
pop
xchg
push
inc
add
leave
mov
mov
adc
add
add
cmpsl
pop
je
pop
enter
add
add
xor
add
pop
pop
and
fisttps
pop
adc
add
mov
pop
pop
jmp
add
add
out
sbbl
add
mov
add
lock
add
jbe,pt
add
add
add
sub
inc
pop
sbb
out
int3
out
cli
xchg
sbb
call
add
mov
add
adc
add
out
ds
xlat
ss
rcll
pop
sbb
cwtl
hlt
hlt
inc
add
mov
mov
out
repz
addr16
imul
outsl
out
pop
sub
mov
sahf
fldz
dec
push
add
xchg
xor
sub
shlb
sub
mov
fs
cmovnp
stc
nop
sar
sbb
cwtl
dec
scas
cmp
outsb
mov
movsl
pop
lock
cmc
arpl
add
rcrl
pop
enter
add
add
mov
pop
enter
sbb
call
lea
loope
pop
fidivrl
inc
pop
iret
add
pop
mov
popa
add
in
clc
enter
adc
add
mov
test
imulb
or
add
ja
adc
adc
add
add
or
pop
or
pop
rcrl
sbb
fdivl
add
flds
inc
add
jmp
add
aam
test
jnp
idiv
or
add
lret
pop
sbbb
add
aaa
or
push
int3
mov
movsb
pop
and
add
in
mov
ss
pop
jne
icebp
outsl
fldl
outsl
imul
pop
xchg
shll
jbe
out
rcll
movsl
pop
sub
clc
stc
sbb
add
mov
arpl
add
add
xlat
cmp
add
or
mov
out
sbbl
jb
add
out
nop
fmuls
fisubl
add
dec
inc
add
fnsave
add
xchg
cwtl
mov
pop
sbb
xor
add
cmp
lahf
inc
pop
mov
add
add
add
add
push
add
mov
les
ror
and
pop
out
rcrl
in
pop
inc
pop
sbb
lahf
sbb
scas
shll
pop
xchg
pop
add
add
jb
add
fs
ret
pop
jb
add
add
mov
into
pushl
js
pop
popa
add
mov
mov
pop
cmp
xchg
pop
iret
jecxz
inc
add
xor
add
xchg
dec
lods
push
xor
add
add
add
add
pop
fdiv
les
xor
add
jecxz
cmpsl
pop
cmc
mov
adc
add
mov
add
inc
add
rcll
lcall
add
adc
add
adc
xchg
arpl
add
std
sub
and
or
and
add
push
or
xchg
pop
aam
push
xchg
adc
add
sbbb
sbbl
add
mov
mov
add
dec
notl
add
or
enter
fadds
push
add
std
sbb
and
add
add
inc
add
xor
add
addr16
sahf
out
lahf
mov
psllw
add
out
fs
les
pop
out
xchg
les
mov
popf
rcrb
add
add
test
add
repnz
mov
sbb
add
add
lods
outsl
cli
leave
inc
pop
sbbl
xchg
in
call
into
adc
cmpsl
pop
ds
cwtl
sbb
push
jl
pop
pop
in
mov
loope
adc
add
pop
cld
mov
add
adc
add
add
loope
jp
pop
cmp
mov
adc
iret
ret
cmpsl
pop
pushl
pop
icebp
xchg
mov
daa
pop
push
xor
add
add
mov
and
add
stos
and
pop
sbbb
or
xor
add
or
icebp
lds
sub
pop
mov
pop
stos
mov
push
add
xlat
dec
pop
int
adc
inc
pop
aaa
xchg
dec
mov
adc
add
or
pop
push
repnz
pop
xchg
sbb
lret
pop
outsb
ss
jns
lcall
ret
pop
lods
mov
push
test
lret
inc
pop
mov
popa
add
outsl
xchg
mov
pop
imul
aas
push
dec
sbb
pop
out
repnz
call
sub
add
add
pop
fldcw
push
pop
sub
test
pop
lds
inc
pop
cli
movsb
pop
out
mov
pop
clc
mov
mov
mov
pop
ret
inc
pop
push
dec
outsb
in
sbb
xor
add
and
add
inc
pop
cmc
sub
dec
inc
pop
and
add
int
shll
add
xlat
jl
mov
lret
pop
js
pop
pop
sbbl
pop
iret
xlat
push
cmp
add
mov
push
add
push
xor
add
js
repz
pop
les
add
ljmp
add
add
add
push
add
mov
imul
jb
add
add
add
divb
add
ficompl
pop
or
add
pop
sbbl
popf
and
add
test
test
add
add
pop
insl
xlat
adc
mov
dec
dec
add
xchg
ret
pop
or
add
sti
sbb
pop
pop
mov
push
rcrl
add
and
pop
mov
pop
in
nop
ljmp
push
push
add
pop
fs
repz
xlat
jmp
pop
ret
test
fisttpll
das
xchg
jp
add
mov
pop
popf
jo
add
pop
outsl
push
add
lods
mov
dec
cs
inc
add
lcall
popa
add
sbb
add
inc
pop
mov
mov
jg
push
add
aaa
cmp
or
pop
popl
add
aas
sub
dec
je
pop
iret
sub
add
sbb
add
loop
sub
iret
loope
leave
mov
mov
pop
pop
pop
pop
fstps
pop
lds
test
pop
jp
addr16
pop
jno
add
add
pop
push
add
or
lds
pop
or
xchg
enter
popa
add
rcrl
sbb
add
stos
add
add
xor
add
add
xchg
add
mov
bound
add
je
push
mov
movsb
pop
jo
add
cmp
push
and
das
and
add
pop
fsts
or
add
jp
das
add
insl
and
add
ret
pop
gs
fists
ljmp
push
sbbb
mov
shlb
pop
mov
pop
addr16
or
stos
xchg
loope
fildl
pop
sbbb
pop
fmul
inc
add
loopne
sbb
or
pop
pop
cltd
cmp
add
pop
mov
sti
pop
push
imul
and
mov
stc
pandn
addr16
dec
pop
push
pop
adc
iret
lret
jp
add
push
add
mov
xchg
pop
pop
sub
mov
cmp
add
sti
ficoms
add
idivb
add
xchg
adc
add
stos
and
add
add
add
add
add
in
jle
pop
mov
and
add
and
add
add
pusha
add
xchg
sub
push
or
pop
xor
or
out
adc
add
sbb
sti
inc
pop
or
add
pop
jbe
ja
loope
sub
dec
sarl
add
sbbb
mov
pop
add
xchg
adc
pop
sbb
dec
xchg
sbb
add
pop
pop
cmp
cli
repnz
pop
call
pop
pop
pop
mov
loopne
popa
add
sbb
add
mov
pop
ja
add
adc
pop
sahf
jno
add
out
fpatan
xchg
fs
flds
xchg
sbb
adc
add
pop
cld
sahf
jl
push
add
jbe
insl
xchg
popa
add
and
pop
push
bound
add
icebp
rcrb
pop
and
pusha
add
mov
lods
xchg
stos
push
inc
pop
push
add
xchg
mov
jg
add
test
pop
sbb
and
add
inc
pop
or
out
mov
jns
ljmp
add
sub
add
fcompl
fldl
xor
add
pop
mov
movsl
pop
rcrb
pop
mov
repnz
mov
add
pop
aaa
xchg
ljmp
pop
lods
push
mov
pop
lret
rcrl
or
cmpsb
pop
mov
or
pop
aad
movsl
pop
aaa
xor
add
sbbb
pop
jge
pop
mov
and
add
add
pop
outsl
out
shll
pop
aam
leave
call
pop
xchg
or
pop
mov
pop
daa
pop
fnstsw
pop
les
std
dec
jnp
repz
xor
pusha
add
cltd
lret
test
mov
pop
out
stc
cli
loopne
xchg
inc
pop
pop
mov
shlb
add
pop
leave
xor
add
add
push
fs
inc
pop
xor
add
stc
insb
xchg
mov
popf
out
xchg
mov
test
pop
xchg
pushf
jo
add
add
push
xor
add
pop
repnz
and
add
pop
xor
add
add
negl
pop
inc
pop
jno
add
imul
dec
leave
and
add
add
add
sub
pop
jecxz
adc
add
inc
pop
xchg
pop
sbbb
pop
mov
lea
pop
ja
pop
jp
add
pop
test
gs
jb
add
fldl
pop
mov
add
add
movsl
pop
aaa
jne
mov
dec
or
xor
add
test
sti
in
out
dec
cmovge
cltd
cs
popf
pop
jns
adc
add
ljmp
mov
add
xlat
mov
jle
test
mov
pop
cmpsl
pop
inc
pop
gs
arpl
add
push
ret
cli
adc
add
pop
out
cli
jecxz
add
xchg
stos
mull
inc
pop
leave
cmp
arpl
add
adc
add
mov
stos
int3
jne
and
add
mov
in
mov
pop
xlat
enter
pushl
add
or
inc
pop
test
push
or
xchg
mov
add
psubw
xor
add
loope
aam
pop
insl
pushf
push
mov
xor
add
popl
sahf
ret
pop
fcmove
nop
jg
mov
xchg
jns
add
repz
addr16
or
add
fistpll
int
pop
ja
pop
pushf
mov
in
enter
or
dec
pop
dec
int
pop
xor
addr16
pop
jge
add
icebp
mov
pop
mov
cmp
into
nop
add
xor
add
add
lds
cmp
mov
add
cmp
test
inc
pop
push
xor
add
add
mov
ljmp
dec
cmpsl
pop
add
xchg
je
push
add
mov
pop
ds
add
pop
add
gs
mov
mov
mov
push
decl
add
ret
pop
movsb
pop
push
pop
clc
sbbl
or
mov
push
je
add
rorb
pop
xchg
stos
cwtl
ss
adc
add
int
add
push
ss
add
add
push
mov
pop
mov
lret
pop
leave
lcall
rol
pop
add
add
push
add
lods
lods
fwait
les
test
out
sbb
adc
inc
pop
push
add
mov
cwtl
stc
pushf
and
add
jnp
lea
pusha
add
mov
pop
jns
lahf
jne
outsl
inc
pop
mov
js
pop
faddl
add
popl
dec
sbbl
loope
mov
or
add
add
add
ja
xchg
jecxz
out
or
pop
inc
add
fmuls
mov
int
add
mul
pop
mov
sbb
sbb
cmp
push
sub
add
out
pop
and
fsubr
mov
add
push
daa
pop
lcall
add
inc
pop
pop
push
mov
adc
add
scas
cmp
add
out
dec
push
add
mov
adc
bound
add
push
add
sbb
mov
mov
add
add
ja
xchg
jmp
js
add
xchg
out
pusha
add
mov
sub
pop
inc
pop
cwtl
mov
dec
fisubrl
nop
cmp
hlt
xchg
xchg
mov
cmpsb
pop
and
add
fld1
aas
loope
add
add
add
mov
aad
cmp
add
or
add
lret
sub
jecxz
mov
or
add
sti
add
ret
pop
sub
fnstsw
or
add
aas
add
add
and
add
add
clc
and
add
out
rolb
jl
sub
mov
pop
xlat
pop
aad
xchg
sti
fsubrl
pop
push
pop
mov
in
mov
add
movsb
pop
stos
clc
sbb
mov
pop
cli
or
addr16
cmpsb
pop
pushf
push
pop
js
fdivp
xchg
push
jne
sub
push
pinsrw
add
int
add
adc
jo
add
add
lds
inc
pop
xor
add
add
add
lods
xor
add
adc
std
xchg
xchg
sahf
sub
add
mov
jge
add
inc
pop
test
pop
pop
ja
mov
and
add
add
add
sbbl
pop
test
mov
pop
sub
pop
scas
mov
insl
pop
mov
add
push
adc
add
push
sub
add
aaa
fcomi
dec
test
pop
pop
dec
sub
les
add
xchg
cmc
lret
fadds
sahf
mov
xor
add
cwtl
mov
add
dec
dec
dec
cld
ljmp
xchg
leave
in
enter
pusha
add
clc
mov
aam
sbb
add
add
das
xor
add
add
pop
in
pop
lods
mov
outsb
pop
js
mov
add
pop
repnz
mov
push
add
mov
add
sbb
lods
cmpsb
pop
mov
add
xchg
or
add
add
add
inc
pop
lock
add
jmp
imul
add
add
add
add
add
mov
cmp
push
xchg
mov
nop
mov
pop
imulb
push
pusha
add
jg
mov
outsl
mov
pop
pop
pop
xchg
and
add
pop
push
add
jne
pop
adc
sub
xchg
rcrb
pop
dec
jmp
pop
outsl
pop
inc
add
iret
push
xchg
pop
bound
add
testl
push
add
stc
mov
repnz
stos
xor
add
add
repz
pop
pusha
add
mov
inc
pop
xchg
jmp
jl
outsl
jp
stc
sub
xchg
xor
add
rcrl
mov
ret
pop
rcr
push
add
ret
pop
int3
or
cmpsb
pop
mov
ret
icebp
jo
add
movsb
pop
and
add
add
mov
sbb
xchg
pop
cmpxchg
cmc
mov
std
or
xchg
pop
ja
ret
pop
ds
mov
jge
pcmpgtb
dec
fxch
mov
xlat
aam
push
mov
pop
insb
es
mov
pop
mov
add
stos
ds
pop
add
add
les
xchg
mov
add
sbbb
dec
js
adc
add
sbbl
iret
xchg
pop
push
arpl
add
add
add
inc
pop
xor
add
call
vmwrite
lahf
cld
push
xor
add
lods
cltd
inc
add
xchg
push
push
add
lods
xchg
cmp
mov
pop
imul
jae
add
pop
xlat
and
add
repnz
mov
insb
xchg
ret
add
roll
add
and
add
lods
rcrb
push
imul
enter
mov
mov
hlt
test
bound
add
and
add
pop
pop
testl
pop
and
add
dec
inc
pop
or
add
cmp
pop
into
lea
enter
pop
cli
xchg
pop
pop
lret
mov
dec
xor
add
add
pop
pop
inc
pop
jae
add
pop
inc
pop
jmp
pop
mov
add
sbbl
add
pop
pop
mov
hlt
xchg
sbb
xlat
mov
add
dec
icebp
insb
fsts
mov
push
add
daa
pop
mov
push
in
jne
xchg
cmc
xchg
add
xchg
and
add
pop
mov
pop
adc
pop
shlb
mov
pushf
out
repz
pop
pop
fsubs
xchg
jo
add
cmp
arpl
add
dec
ret
xor
add
loope
addr16
les
cmpsl
pop
sbbb
repz
jo
add
mov
push
add
push
rcrl
imul
pop
push
sub
pop
insl
xor
add
in
rclb
add
dec
imul
pop
and
add
jbe
add
sub
shll
pop
sub
inc
pop
xor
add
add
fs
push
jns
pop
cmp
add
jo
add
into
jg
adc
add
insb
pushf
pop
inc
add
mov
mov
adc
add
pop
dec
sub
jo
add
add
add
jne
push
in
dec
xchg
mov
add
sbb
add
imul
gs
push
imulb
dec
loope
js
sub
xchg
jns
arpl
add
xchg
outsb
jbe
add
ss
gs
cmpsb
pop
es
out
mov
ds
mov
add
outsb
or
lcall
cmp
imul
sub
les
test
pop
stos
push
pop
scas
es
jbe
pop
test
add
pop
or
pop
mov
sbb
pop
mov
test
cs
add
mov
out
inc
pop
in
jge
ret
pop
rcrb
add
add
dec
cmp
repnz
add
lea
mov
jo
add
add
adc
ret
or
add
push
addr16
jge
pop
or
pop
out
bts
lods
int
add
add
mov
push
cmp
sbbl
js
pop
insb
cld
jmp
add
add
fcmovnbe
les
sahf
add
add
mov
jle
push
outsl
test
lods
hlt
mov
std
inc
add
sub
faddl
sti
es
hlt
mov
mov
xchg
push
add
outsl
js
fidivs
mov
repz
pop
dec
sti
es
fs
mov
pop
lret
add
inc
add
je
dec
shl
pop
xchg
mov
cmp
add
sahf
xor
dec
insl
call
enter
ret
pop
cs
mov
movsb
pop
fldcw
mov
add
pop
mov
pop
incl
dec
aad
or
xor
pop
cmpsl
pop
iret
pop
adc
add
cmp
pop
cmp
dec
and
add
jno
add
mov
add
push
pop
pop
pop
sbbb
ret
add
xlat
loop
pop
pop
ljmp
push
mov
and
add
arpl
add
lea
popf
cld
dec
mov
mov
add
sbb
and
add
add
les
divb
nop
aam
lret
jae
add
and
jp
outsl
out
pop
iret
lods
pushl
add
add
add
add
pop
mov
aaa
add
add
xchg
or
repz
pop
xchg
lea
mov
loop
lret
test
pop
xchg
rcrl
fsts
add
sahf
fcompl
stc
ljmp
rcrl
mov
pop
je
mov
das
ficoms
add
fwait
jo
add
gs
push
add
mov
in
xor
add
shr
int
cmp
add
nop
sbb
loope
lods
xor
add
xor
add
pop
aam
and
jge
sub
outsl
mov
jp
jg
pop
sbbl
lods
jb
add
aam
adc
add
cmc
pop
jae
add
pop
pop
in
cmp
pop
push
add
pop
int3
imul
adc
add
stc
out
mov
int
mov
add
ret
pop
ret
pop
cmp
pop
adc
add
hlt
fisttpll
add
add
out
outsb
pop
pop
mov
pop
sub
cs
and
mov
cmp
pop
sbbb
and
add
add
fstpl
add
pop
cmp
pop
pop
sbb
mov
fs
mov
xchg
dec
add
stos
daa
pop
xor
add
loop
loop
les
mov
pop
mov
add
sbb
mov
mov
add
insl
std
mov
sbbl
or
pop
insb
adc
dec
scas
xor
add
jge
add
adc
add
add
add
scas
pop
cmp
mov
ljmp
dec
inc
add
cld
insl
rcrb
xchg
pop
xchg
push
pop
or
dec
call
fwait
sbbl
and
add
add
pop
dec
fs
lods
ds
inc
pop
jb
add
pop
or
add
mov
add
stos
mov
addr16
dec
jge
pop
add
xor
push
add
adc
cld
mov
add
push
add
icebp
pop
mov
imul
ja
sbb
add
or
mov
xor
pop
jg
add
rcrb
lods
scas
fwait
inc
pop
adc
add
jno
add
push
add
cmp
ret
add
xor
add
gs
pop
ret
pop
ficomps
je
add
cmp
jge
push
add
pushf
out
imul
xor
add
pop
cmp
pop
xchg
inc
add
add
dec
dec
stos
and
add
pop
cld
inc
pop
xchg
xchg
rcrl
mul
pop
and
add
jnp
add
repz
sbb
bound
add
jnp
add
aaa
in
push
push
lahf
iret
jne
mov
pop
cltd
fwait
jnp
and
add
pop
cwtl
xor
add
pop
les
out
and
loope
xor
add
add
cmc
test
aam
testl
sbb
or
add
sbb
xchg
dec
xchg
and
add
add
add
add
add
mov
xor
add
jp
mov
das
mov
add
and
add
xchg
dec
mov
pop
ljmp
fs
adc
xchg
lods
call
add
fidivs
pop
or
push
icebp
xchg
sub
imulb
adc
dec
int
adc
add
add
mov
sub
cwtl
pop
es
xchg
sbbl
sub
pop
adc
add
mov
mov
pop
dec
jle
push
in
add
lret
xor
add
mov
lds
push
add
jl
int3
push
add
inc
add
jmp
pusha
add
push
inc
pop
add
sbb
pop
ret
pop
pop
xchg
jo
add
xchg
lods
sbbl
imul
add
hlt
sbb
add
dec
stos
js
sti
lret
add
mov
not
sbb
inc
add
leave
jle
pusha
add
dec
cltd
cltd
push
or
pop
xchg
rclb
pop
adc
add
push
add
loop
jecxz,pt
mov
sub
fdiv
sbbb
ret
pop
dec
xor
add
pop
jb
add
fbld
add
adc
pop
and
add
cmpsl
pop
sahf
lock
js
in
mov
pop
gs
add
pop
imul
add
mov
pop
cld
cmp
push
jp
pop
cmpsl
pop
add
cmp
pop
or
or
ret
iret
or
add
fs
sub
add
out
fucomi
and
mulb
add
addr16
addr16
or
rcrl
add
xlat
test
add
xor
mov
into
mov
add
pop
push
in
rorl
xchg
pop
ret
pop
movsb
pop
cmp
add
pop
mov
xor
add
pop
cmpsb
pop
stos
and
xor
add
push
add
pop
stc
in
fs
loopne
test
mov
add
clc
das
jnp
pop
xchg
sbbl
xchg
loop
rolb
add
pop
mov
pop
mov
aad
add
out
push
cltd
mov
dec
in
add
add
add
pop
adc
pop
jns
add
cmp
aad
pop
pop
push
aas
sub
and
sub
cmpsb
pop
and
add
pop
test
dec
cmpsb
pop
jg
pop
hlt
dec
popf
dec
xchg
sbbl
pop
pop
pop
mov
aam
adc
es
into
mov
movsl
pop
mov
pop
sbbl
add
dec
pop
mov
cmp
pop
sub
mov
pusha
add
or
add
mov
mov
pop
call
add
pop
lock
and
add
push
pop
pushf
jp
iret
and
add
inc
pop
dec
push
xor
add
or
pop
mov
pop
pop
stos
adc
add
pop
insl
pushf
nop
into
mov
or
sub
push
popa
add
in
inc
pop
or
movsl
pop
fwait
dec
jae
add
sbbl
outsl
mov
test
pop
fcompl
sub
test
rol
pop
cmpsl
pop
cmpsl
pop
es
inc
add
jle
add
or
mov
add
sub
pop
pop
lahf
inc
add
ss
cmp
xor
add
gs
call
sbbb
ss
mov
jo
add
movsl
pop
aad
push
shlb
pop
dec
mov
inc
pop
jecxz
sbb
add
lea
sbbl
jo
add
add
or
sbb
pop
stc
int3
addr16
out
mov
pop
mov
pop
dec
loop
push
setl
pop
dec
fs
pop
dec
or
add
outsl
pop
ret
aaa
fstps
add
in
sbb
add
cmpsl
pop
cmp
inc
add
cmp
sbb
pop
rcrl
add
lods
sbb
pop
addr16
loopne
or
xchg
rcrb
aas
xchg
mov
add
xchg
cmp
add
mov
adc
add
cld
aas
mov
adc
add
mov
or
test
add
push
add
test
add
test
mov
xchg
dec
and
add
fcoml
add
imul
mov
fadd
pop
xchg
xlat
push
je
rcrb
cmp
leave
stos
jno
add
pop
jae
add
cmp
out
and
add
adc
pop
and
add
outsb
inc
pop
pop
std
clc
dec
dec
iret
in
or
pop
pop
js
dec
and
add
stc
jo
add
in
shll
add
jb
add
pop
push
pop
sbb
mov
loopne
mov
mov
pop
pop
scas
push
cli
das
mov
push
jge
sti
sbb
push
leave
and
cld
jns
or
pop
dec
call
iret
push
add
pop
and
add
and
iret
leave
sahf
jg
pop
xchg
sub
je
dec
and
add
add
pop
mov
mov
add
movsl
pop
push
in
loop
out
mov
sbbb
in
sub
pop
xor
add
add
in
push
add
push
pop
sbbb
add
mov
add
xor
sahf
pop
xchg
mov
dec
out
jle
add
sahf
pop
xchg
js
add
shlb
cmpsb
pop
lret
rcrb
gs
ljmp
stos
adc
add
sub
sub
xchg
jbe
mov
add
iret
sub
and
add
add
cmpsb
pop
leave
mov
pop
cmp
mov
dec
mov
pop
mov
add
ss
lods
sbbb
sub
popa
add
insl
gs
push
add
dec
in
jle
add
insb
test
test
inc
pop
xor
add
arpl
add
pop
or
add
ds
bound
add
clc
mov
lods
mov
xor
push
fistpl
adc
add
in
fsub
pop
mov
aaa
adc
add
add
les
push
add
pop
xlat
cld
jns
imul
add
insl
addps
sbb
pop
pop
in
pusha
add
xchg
imul
push
scas
mov
icebp
in
and
mov
sbb
add
popa
add
push
add
insl
sbb
push
add
arpl
add
add
jne
pop
jns
xchg
in
jecxz
lahf
inc
pop
xor
scas
outsl
sbb
das
cld
add
pop
fcomps
repz
ja
pop
gs
pop
add
add
add
repnz
stc
sbbl
add
add
add
pop
dec
mov
dec
cmp
into
mov
mov
dec
mov
rorl
mov
xor
jns
pop
nop
pop
push
add
push
pop
mov
mov
mov
stos
clc
lds
pop
ficomps
sbb
adc
add
add
es
sbbb
add
mov
sarl
hlt
dec
scas
mov
mov
dec
scas
xchg
and
ss
scas
xchg
repz
add
add
add
lret
js
outsb
jecxz
push
push
scas
cld
lods
pushf
repnz
add
add
adc
add
jmp
add
aaa
lock
daa
pop
jp
push
add
adc
add
push
inc
add
sbb
jo
add
add
mov
dec
lods
sahf
adc
add
pop
mov
and
add
inc
add
imul
pop
jg
add
pusha
add
fiadds
mov
sbb
adc
add
insb
scas
sub
insb
int
xchg
and
add
pop
and
add
cmp
pop
xchg
jle
add
js
pop
sti
pop
fildl
add
fstps
imul
pop
lret
and
pop
pop
xor
adc
add
sbb
add
push
sub
add
add
add
pop
jnp
add
cmp
xor
add
push
adc
pop
scas
mov
add
adc
add
es
mov
mov
pop
rcrl
and
add
push
pop
jecxz
and
arpl
add
stos
hlt
xor
add
add
ss
pop
insl
push
add
mov
pop
imul
adc
add
sbb
pop
js
pusha
add
dec
sub
cmpsl
pop
or
pop
xor
add
jge
pop
mov
pop
mov
pop
mov
imul
pop
lock
sbb
pop
in
popa
add
cmp
js
pop
les
add
jae
add
xchg
cltd
and
fs
in
ja
pop
cmpsl
pop
lods
sub
pop
pop
xchg
mov
adc
pop
mov
sti
pop
pop
dec
inc
add
add
add
pop
mov
add
cmp
aaa
push
add
mov
push
sub
mov
mov
sub
xor
add
pop
lock
fsubl
pop
add
add
jp
pop
aas
jmp
pop
insl
mov
dec
add
add
addr16
test
movsl
pop
xor
add
test
bound
add
pop
mov
push
add
mov
sbb
mov
pop
mov
iret
in
das
sub
lods
imul
and
add
mov
or
add
mov
add
jo
add
push
add
sub
add
out
adc
add
out
xor
pop
sbb
pop
push
inc
pop
adc
add
add
scas
xchg
mov
lret
mov
xlat
cmp
arpl
add
fs
into
mov
daa
pop
mov
out
cmpsl
pop
jno
add
pop
xchg
push
lret
push
add
dec
scas
int
or
js
ja
ret
pop
jae
add
fwait
inc
add
jbe
or
jbe
fnstenv
and
add
ljmp
mov
call
add
push
movsb
pop
popf
cs
sub
in
enter
add
fdivrs
popf
mov
pop
repnz
loope
enter
jnp
add
cld
sbbl
add
push
popf
mov
add
add
add
lcall
cmpsl
pop
dec
ret
pop
out
scas
mov
xchg
cmpsl
pop
jge
lods
lahf
popl
xchg
pop
mov
mov
leave
inc
pop
xlat
mov
pop
test
push
pop
rorb
pop
or
insb
jbe
add
sti
mov
pop
iret
mov
fld
pop
and
ja
push
mov
or
add
sbbl
outsb
cmpsb
pop
jo
add
add
scas
sysenter
xchg
in
das
scas
imul
add
pop
mov
jge
add
gs
xor
pop
and
add
add
add
fsts
outsl
movsl
pop
aad
add
cwtl
mov
cmp
xchg
xchg
jmp
pop
pop
cs
dec
pop
pop
add
add
pop
out
mov
inc
add
jo
add
cmpsl
pop
jae
add
add
jbe
jp
sbbb
js
pop
mov
pop
push
add
adc
leave
sbbl
xchg
repz
fmull
popf
adc
add
inc
pop
out
stos
in
or
pop
sub
not
divl
add
push
mov
push
pop
sub
push
int3
jns
outsb
cmp
pop
sbb
add
xor
add
pop
jbe
or
pop
in
adc
add
pop
pop
sbb
mov
add
les
fsub
pop
ficoms
add
or
xchg
add
add
lret
test
add
push
pop
xor
add
pop
xchg
mov
and
xchg
adc
add
add
or
pop
add
add
inc
pop
inc
pop
les
push
jle
mov
daa
pop
cs
out
push
add
dec
sub
xor
add
mov
jae
add
jb
add
xchg
addr16
in
gs
adc
add
pushf
inc
pop
sbb
pop
test
add
and
add
add
sub
xchg
test
adc
add
add
add
push
sbb
pop
xchg
das
ret
pop
sahf
pop
cltd
addr16
cmp
add
pushf
in
adc
test
test
xor
add
mov
jecxz
imul
es
daa
pop
cmp
pop
loopne
fidivs
add
push
sub
stos
pop
popa
add
pop
or
pop
in
xor
add
gs
jbe
mov
pop
sub
sub
sub
add
sahf
test
mov
mov
add
fs
pop
test
pop
in
pop
cs
push
pop
sbb
rcrb
add
shrl
add
mov
mov
fmuls
icebp
xchg
ljmp
ja
mov
scas
shr
mov
ret
pop
in
inc
pop
push
lock
into
adc
in
lock
pop
fdivrl
add
and
add
fs
outsb
out
pop
push
add
add
add
divb
add
movsl
pop
rcll
adc
add
pop
pop
pop
lods
ret
pop
xchg
fidivs
add
mov
sub
xor
add
pop
mov
lods
add
add
imull
or
iret
xchg
fcoml
pop
cmp
mov
add
add
add
pop
out
inc
add
adc
add
add
xchg
call
add
add
add
and
sbb
in
add
add
pop
lds
cmc
imul
add
stc
add
cmp
popa
add
jmp
pop
jl
inc
pop
push
test
lock
mov
push
sbbb
push
mov
pushf
sbbl
pop
mov
hlt
sahf
fs
inc
pop
inc
pop
popa
add
js
test
dec
add
add
push
inc
pop
lcall
xchg
pushf
leave
pop
pop
movsl
pop
ficoms
xor
add
lcall
lea
lods
loopne
or
add
test
cmc
add
add
add
add
pop
ds
mov
pop
pop
cwtl
push
add
ss
cs
je
add
mov
aam
push
add
loop
stos
ja
pop
sbbb
movsb
pop
stc
push
pop
sarb
pop
bound
add
fwait
lret
icebp
outsb
mov
jo
add
pop
jo
add
add
movsb
pop
add
add
into
push
add
sahf
lds
pop
mov
mov
pop
movsb
pop
sub
lock
testb
gs
mov
or
movsl
pop
xor
test
aaa
push
stos
pop
lea
add
lods
mov
pop
cwtl
sbbb
mov
jmp
cmc
jb
add
pop
lods
jl
jle
dec
inc
add
fs
mov
in
clc
xor
add
loop
lods
sbbl
sbb
fmuls
dec
inc
pop
dec
xor
add
sahf
sbb
cmc
or
add
pop
fs
xor
add
sbbl
sbb
pop
jnp
add
rcrl
add
or
call
pop
cmpsl
pop
sbbb
mov
push
add
or
pop
cwtl
sbb
mov
ss
cmp
pop
xor
add
popf
cmc
cmpsb
pop
inc
pop
jns
pop
or
add
add
mov
add
cmp
jmp
leave
jnp
pop
lret
sbb
enter
lock
mov
cmp
add
ss
adc
lret
pop
push
mov
popa
add
adc
add
add
stos
popa
add
xor
lds
jmp
jbe
arpl
add
cwtl
int
push
inc
pop
add
push
mov
add
xchg
idiv
mov
add
and
std
sub
or
ret
pop
pop
test
pop
mov
in
jmp
and
add
pop
shrl
pop
adc
add
sbb
inc
add
rcrb
dec
sbbb
add
push
add
jg
dec
das
lret
add
add
movsl
pop
sbb
sbb
rcrl
pop
adc
test
test
xchg
lods
and
add
add
pop
sub
popf
scas
jno
add
add
adc
add
add
mov
mov
add
jae
add
add
push
aad
add
mov
pop
jnp
add
lds
push
add
jl
out
in
dec
mov
lret
inc
add
xchg
jl
add
stc
scas
ret
pop
rorb
add
or
pop
jae
add
add
ljmp
cmpsb
pop
push
loopne
xchg
cmp
add
movsl
pop
sbbl
sarb
es
add
add
pop
jnp
sub
les
pop
lds
dec
mov
pop
faddl
add
fidivs
jecxz
in
loope
mov
gs
int3
mulb
add
or
loope,pt
cli
and
xor
jge
add
cltd
scas
xlat
pop
cwtl
mov
int3
fistpl
inc
pop
or
dec
mov
push
add
jp
cltd
jle
addr16
mov
push
or
pop
mov
and
add
out
xlat
lahf
jge
push
add
pop
pop
jg
pop
loope
push
pop
jecxz
insl
pop
mov
add
pop
mov
pop
adc
add
pop
sbb
add
imul
add
cs
pop
imul
mov
push
pop
pop
fcomps
pushf
ss
pop
xchg
adc
add
cmp
add
pop
pop
int
lods
in
xor
add
cwtl
jns
loope
icebp
push
into
aas
jp
lods
mov
push
add
icebp
cmp
add
loopne
lock
adc
add
pop
mov
in
push
xchg
push
pop
jnp
jb
add
push
jge
pop
call
fdivl
in
scas
mov
pop
mov
xor
inc
add
cltd
and
add
pop
and
add
xchg
lods
mov
js
add
push
add
nop
xchg
jmp
xlat
pop
or
cmpsb
pop
aaa
pop
cmp
mov
lea
pop
stos
sbbl
adc
sub
sbb
inc
add
cmp
mov
add
cmp
add
xor
add
pop
and
repnz
aad
push
mov
test
xor
add
aas
pop
cltd
punpckldq
add
mov
enter
pop
inc
add
sahf
pop
outsl
mov
add
add
adc
loop
jp
pop
scas
push
mov
cmp
pop
aas
or
add
movsb
pop
sub
movsl
pop
es
rcll
jle
popf
rclb
push
jle
shr
insb
pop
pop
rcrl
mov
add
xchg
cltd
jnp
repz
add
xchg
sbb
daa
pop
xlat
dec
lret
add
jmp
loopne
faddl
add
rcrb
ret
pop
or
add
fsubs
gs
pop
std
cmp
pop
pop
mov
inc
pop
adc
test
mov
add
sbbb
fcoml
mov
jb
add
pop
fsubl
cmp
arpl
add
xlat
xchg
push
pop
iret
or
add
add
insl
lock
mov
jb
add
add
push
add
add
add
scas
jb
add
mov
add
add
add
loopne
sbb
add
add
loope
sahf
push
movsl
pop
jg
add
push
add
cmc
push
cmp
jnp
inc
add
lods
inc
pop
or
add
push
adc
add
pop
movsl
pop
rcrl
je
es
outsb
in
jge
add
or
and
add
out
mov
mov
add
xor
mov
inc
add
or
jge
aam
pop
repz
iret
add
add
pop
cmpsb
pop
stos
sub
in
inc
add
mov
pop
movsl
pop
call
jmp
shl
cmpsl
pop
lret
sbbb
pop
scas
inc
add
adc
and
add
sbb
fcmovnb
pop
xchg
pop
dec
mov
sbbb
add
sar
fcompl
push
adc
add
pop
add
jg
insb
jns
cmpsl
pop
push
out
in
mov
mov
add
addr16
lock
add
stos
sbb
pop
ror
out
xchg
mov
imul
pop
insb
cmp
mov
dec
dec
adc
add
pop
lahf
mov
lds
pop
in
pusha
add
dec
cmpsb
pop
daa
pop
in
scas
out
mov
jle
push
les
rcrb
scas
add
push
pop
dec
sbb
lcall
and
add
add
add
fsubr
inc
add
insl
jmp
mov
lea
jmp
jb
add
add
and
add
add
gs
cmp
jo
add
add
dec
mov
pop
in
lods
call
push
add
mov
push
add
add
stos
mov
insl
mov
xchg
jb
add
jb,pt
add
add
aas
outsl
adc
dec
mov
pop
daa
pop
jmp
add
imul
add
sarb
pop
cmp
pop
testl
lds
xor
add
pop
mov
addr16
push
add
adc
add
test
adc
add
add
dec
or
add
fcoms
add
adc
add
add
test
aas
and
add
mov
mov
add
and
add
xchg
xor
cmp
add
pop
mov
pop
lods
xchg
das
aas
lea
test
aam
aad
inc
pop
lcall
mov
sbb
jp
pop
dec
and
add
std
xchg
in
insb
sbb
jns
add
mov
jge
dec
fsubl
pop
mov
pop
ret
push
insb
insb
add
add
pop
ja
push
add
push
cmpsb
pop
hlt
sub
pop
mov
imul
add
bound
add
pop
popa
add
lds
mov
pop
pop
push
leave
in
gs
xor
add
add
jb
add
add
jle
jmp
das
sti
fildll
popf
in
test
imul
inc
add
mov
sbb
add
pop
adc
scas
pop
cmpsl
pop
jg
add
sti
jo
add
cmp
add
lret
cmc
in
mov
add
add
add
mov
add
add
add
add
add
ds
add
add
loope
fsubrs
pop
mov
cmc
jecxz
xchg
imul
pop
sbb
add
cmp
pop
das
add
add
stos
xlat
mov
lret
add
add
mov
mov
lret
pop
lcall
mov
mov
add
sub
adc
add
inc
add
movsb
pop
cwtl
int3
int
rol
pop
int
xchg
or
xchg
popf
cmp
jecxz
pop
inc
add
adc
and
add
insb
inc
add
insb
gs
or
stc
adc
add
add
cmc
sbb
add
jecxz
repnz
aad
sbb
pop
xor
add
mov
xchg
add
in
inc
pop
xor
mov
add
jg
mov
ds
add
addr16
aas
or
inc
add
mov
add
xchg
jg
xor
add
imul
popf
inc
pop
je
add
divl
pop
sbb
lds
call
add
sbb
pop
lds
adc
mov
mov
stos
mov
xor
add
mov
scas
fadds
add
add
and
add
add
movsl
pop
add
add
add
and
add
pop
mov
pop
sbbb
movsb
pop
fsubrp
js
pop
sub
add
sbb
add
add
jge
sbb
sahf
sub
pop
xor
add
add
test
jno
add
pop
imul
and
push
add
add
scas
push
add
out
adc
add
pop
pop
imul
or
cmp
dec
cmp
fstl
add
sbbl
jns
add
test
stos
in
cmc
rcrb
add
ror
stos
pusha
add
out
in
xchg
ja
pop
loope
jne
pushf
fsts
mov
pop
enter
insb
mov
add
das
and
mov
and
add
stc
loope
dec
mov
enter
sbbl
inc
add
int3
daa
pop
cmpsl
pop
jp
fidivs
add
add
inc
pop
sub
xchg
mov
cmp
imul
add
jecxz
cltd
pop
stos
or
add
add
add
pop
xchg
mov
pop
sbb
pop
dec
xor
fadds
pop
loop
movsl
pop
fndisi(8087
pop
xlat
xor
add
sbbl
mov
insl
lods
and
add
imul
ds
clc
in
mov
xor
add
testb
sbbb
daa
pop
mov
lret
cmp
add
dec
mov
mov
es
push
add
mov
imul
cmp
sub
add
add
add
hlt
sbbl
rcrb
adc
add
add
sbbl
in
arpl
add
xor
add
push
add
mov
mov
imul
xchg
jl
rcll
dec
or
test
add
mov
pop
sbb
and
add
inc
add
aad
sbb
sub
cmpsl
pop
push
pop
fs
xchg
sub
pop
enter
sub
add
movsb
pop
test
xor
add
mov
pop
rorl
and
add
add
sahf
xor
sbb
pop
push
add
xor
add
add
shr
xor
add
pop
sti
std
sub
loop
lea
out
adc
mov
popf
cwtl
adc
inc
pop
in
inc
add
fs
mov
add
add
add
pop
mov
add
add
and
add
or
pop
aad
adc
add
ret
jnp
and
mov
add
popa
add
inc
add
loopne
pop
pop
push
shlb
add
lods
ret
pop
lods
jmp
pop
mov
mov
inc
pop
loope
and
idiv
arpl
add
jecxz
mov
push
flds
pop
dec
pushf
jo
add
pop
mov
gs
lods
inc
add
dec
inc
pop
xchg
xchg
inc
add
addr16
jge
pop
lea
dec
test
sub
and
cmp
pop
jmp
pop
test
sahf
cltd
jge
add
adc
add
or
push
add
dec
add
inc
pop
and
mov
stc
aas
scas
imul
gs
mov
outsl
pop
sub
xor
add
je
icebp
scas
add
add
push
ljmp
sbb
xor
add
out
insl
inc
pop
mov
push
push
pop
push
popa
add
outsb
mov
sbb
pop
roll
add
int
add
aaa
sub
scas
xchg
and
add
xchg
arpl
add
xchg
cwtl
xchg
aaa
stc
push
jg
pop
jecxz
or
mov
dec
leave
ja
pop
mov
movsb
pop
pop
dec
mov
jo
add
dec
xchg
add
add
add
sub
loop
rcrl
xor
pop
and
mov
cmc
jp
add
xor
pop
lahf
xchg
push
inc
add
sar
sbb
hlt
nop
stc
les
sbbl
add
pop
repz
add
add
add
add
rcll
add
push
add
push
add
pop
inc
add
test
pop
pop
xchg
sbb
add
push
add
sbbl
pop
dec
xchg
fildll
add
sbbl
mov
clc
lods
pop
ljmp
repz
mov
add
ds
and
add
out
and
add
into
cmp
mov
lds
add
mov
fnsave
add
add
gs
fisttpl
cltd
sbb
jge
add
mov
loope
mov
out
xchg
push
mov
add
mov
sub
add
adc
add
test
sub
shrb
add
xchg
clc
adc
add
add
add
mov
mov
pop
or
adc
pop
jmp
aam
pop
sbb
pop
dec
add
add
pop
jns
cmp
out
les
sbbl
mov
xchg
aas
mov
jo
add
add
loop
push
cmp
incb
pop
loop
mov
fstpl
xchg
jp
and
add
js
pop
jo
add
pop
lods
push
add
jbe
pop
mull
add
repnz
into
dec
scas
dec
nop
int3
stos
movsb
pop
ljmp
iret
pop
sub
mov
incb
pop
cli
lods
jecxz
mov
jp
pop
ret
sbb
mov
add
dec
xchg
not
mov
popa
add
nop
aad
pop
add
add
pop
inc
add
cmp
add
mov
pop
in
fsubr
cwtl
call
cli
addr16
lret
pop
stos
and
add
aad
sub
int
add
in
pushl
add
add
pop
aaa
jne
sbbb
sub
pop
sbb
loopne
rcrb
rcrb
push
add
jl
add
dec
push
pop
xchg
xchg
stos
xchg
mov
iret
roll
add
jp
shlb
dec
sbbb
sbb
add
push
out
pop
adc
add
cwtl
aas
cmp
add
add
sbb
jb
add
cwtl
mov
cli
xchg
imul
pop
cmp
pop
adc
add
popf
outsb
xlat
pop
lret
aam
aas
in
mov
pop
loope
insb
repnz
pop
dec
out
ss
inc
pop
ljmp
cmp
sahf
jmp
pop
sbb
rcl
js
shl
jno
add
pop
pop
sbb
xchg
test
movsl
pop
mov
mov
add
inc
add
and
add
outsb
cs
into
jae
add
sbbb
repz
cmp
out
fdivrl
sub
and
fldl
pop
xor
push
push
xor
cmp
je
pop
into
lret
cltd
and
add
movsb
pop
shll
add
lret
cmp
pop
jne
loopne
ds
cmp
xchg
add
pop
add
add
inc
pop
fmul
stos
fs
and
je
pop
dec
sti
cmp
pop
jb
add
iret
cmp
add
xchg
push
sub
xchg
adc
add
add
mov
xor
add
clc
enter
add
dec
fmull
pushf
mov
arpl
add
sbbb
pop
movsb
pop
rcrb
adc
add
in
loope
sub
add
enter
xchg
or
pop
push
int3
mov
pop
icebp
cwtl
lcall
pop
mov
sbbl
rcrb
add
add
mov
push
pop
jp
dec
xchg
out
add
add
pop
mov
dec
adc
add
pop
pop
adc
add
pmulhw
pop
mov
sub
mov
into
sub
or
mov
pop
dec
sbb
add
ss
add
mov
into
add
add
mov
and
add
inc
pop
leave
mov
push
rcrb
in
icebp
cwtl
out
xchg
pop
dec
stc
sbb
ds
add
inc
add
push
sbbb
lahf
das
fcoms
add
in
shlb
add
lea
push
test
pop
jecxz
insl
and
add
ret
add
mov
add
add
add
pop
ljmp
pop
jnp
cmp
les
add
out
repz
adc
add
mov
pop
mov
lret
mov
out
inc
pop
rclb
add
inc
pop
jne
pop
lcall
add
std
es
in
dec
pop
inc
pop
mov
add
outsb
mov
add
add
pop
mov
int3
aas
fnstenv
jns
iret
cmp
jg
fmull
pop
mov
add
or
add
insb
ret
pop
xor
add
inc
add
call
mov
add
fidivrl
mov
add
mov
jo
add
push
fcoms
add
push
push
rcrl
mov
sbb
add
sub
repnz
add
add
rcrl
pop
sbbl
lock
daa
pop
call
pop
dec
sub
add
in
daa
pop
push
pop
sub
mov
jge
outsl
adc
ss
mov
add
lret
pop
fxch
rcrl
std
jns
mov
mov
pop
and
add
add
lcall
jne
add
add
add
pop
cld
adc
add
sbbb
pop
pop
movsl
pop
into
xchg
sub
dec
mov
mov
add
xor
lea
add
push
add
je
fisubrl
je
pop
inc
add
inc
add
inc
add
repz
push
mov
xor
add
push
pop
jbe
iret
lahf
push
xor
add
xchg
fwait
lds
pop
frstor
addr16
or
aaa
sbb
ret
pop
pop
jo
add
adc
add
daa
pop
fsts
test
push
shll
add
xor
pop
sbb
push
mov
ficomps
rcll
add
call
pop
cmc
mov
add
icebp
pop
pop
daa
pop
cwtl
in
sbbb
add
inc
add
pop
push
imul
and
add
outsb
add
add
jp
xor
add
or
lret
enter
pop
daa
pop
push
inc
pop
mov
add
add
jle
add
dec
dec
stos
lds
pop
fsubl
add
ss
xchg
fwait
add
shlb
add
ljmp
add
add
pop
imul
add
adc
add
push
jae
add
dec
push
fstpl
jnp
pop
inc
pop
jp
pop
jmp
lods
pop
dec
das
sbb
adc
add
pop
insb
add
add
fisttpl
insb
mov
dec
popf
jmp
add
inc
pop
mov
push
inc
add
addr16
repz
xchg
mov
pop
xchg
popa
add
inc
pop
in
lret
cmp
add
fldcw
mov
pop
rcrb
xchg
test
add
sub
cwtl
mov
dec
pop
adc
add
jo
add
sub
add
jmp
pop
dec
xchg
repnz
sbb
sbb
stos
sub
insb
jne
repnz
or
rcl
aas
inc
add
push
mov
pop
out
pop
ljmp
pop
ss
inc
add
sbbl
lea
mov
ds
sub
pop
js
pop
pop
sbb
xchg
mov
add
add
adc
add
mov
xor
add
nop
loopne
insl
push
pop
aam
or
dec
mov
add
or
es
cli
faddp
pop
scas
mov
rcrb
dec
pop
pop
xor
add
dec
inc
add
jge
lret
sahf
inc
pop
sbbl
xlat
ret
pop
dec
popa
add
and
add
mov
aas
sbbb
fistl
add
push
add
jmp
pop
int
loope
js
pop
fnstenv
aam
pop
mov
sub
pop
enter
pop
inc
add
mov
sbb
xchg
es
jge
push
add
push
sbb
icebp
scas
add
sbbl
fwait
pop
sbbb
movlps
add
sbbb
and
mov
push
add
dec
popa
add
fisubrl
add
add
add
ss
sub
rcrb
add
jns
pop
pop
outsl
adc
add
pop
ss
aas
sbbb
add
cmpsb
pop
lahf
mov
add
xchg
pushf
test
add
add
stos
mov
adc
add
add
sbb
xchg
pop
arpl
add
add
mov
pop
enter
and
add
pop
cld
dec
add
add
push
add
cmpsb
pop
and
inc
pop
xor
pop
xor
add
xchg
lea
fistpl
add
insl
cmc
mov
pop
sub
add
xor
add
sbb
adc
add
pop
pop
lret
sbb
xor
cmp
call
add
int3
fs
popa
add
faddp
pop
sub
pop
or
mov
add
add
insb
and
add
sbb
add
push
add
enter
sub
movsl
pop
push
pop
or
add
cmp
add
push
repz
dec
mov
out
push
je
popa
add
popa
add
mov
add
lahf
cltd
pushf
adc
add
dec
mov
pop
ja
add
repnz
add
sahf
rcrb
sub
sbb
add
sti
rcrl
add
pop
rcrl
pop
stc
and
add
jg
bound
add
jle
cmp
scas
adc
add
add
add
xor
add
pop
aaa
mov
add
pop
sub
rcrb
add
pop
pushl
add
lcall
xor
add
add
in
movsl
pop
push
pop
cmp
xor
mov
pop
xchg
push
mov
loope
lret
add
ficoml
mov
out
loop
mov
add
loope
cmpsb
pop
inc
pop
js
mov
mov
inc
pop
push
pop
mov
sub
pop
inc
add
sbbb
xchg
pusha
add
lcall
pop
aas
fcompl
lret
inc
pop
push
mov
push
add
mov
mov
pop
lds
pop
sub
fwait
or
jp
pop
sarl
addr16
fwait
repz
add
mov
pop
pop
mov
mov
add
jo
add
jp
add
loope
add
add
add
mov
pop
and
add
imul
push
sbb
add
mov
jnp
add
add
shlb
add
push
stos
lods
out
bound
add
fcmovnbe
push
sbb
pop
hlt
or
lahf
out
test
sub
add
push
pop
mov
std
cmp
jb
add
mov
add
xchg
sbb
or
ret
addr16
es
cmc
ja
adc
add
xchg
scas
xor
push
aad
pop
push
add
fmull
pop
mov
xor
hlt
mov
pop
pusha
add
dec
jns
add
mov
mov
add
add
xor
add
sbbl
pop
add
add
pop
pop
xchg
leave
leave
sbb
pop
mov
pop
ljmp
mov
cli
or
fsubs
nop
mov
mov
pop
pushf
mov
fwait
xor
add
mov
xchg
jle
sbb
addr16
int3
pop
xor
add
add
add
or
add
xor
add
pop
ja
add
gs
cmp
call
pop
dec
inc
pop
add
inc
add
xor
add
adc
dec
pop
pop
fwait
dec
std
xchg
or
inc
add
dec
xor
add
pop
repz
adc
loope
fcoml
add
adc
add
sbb
hlt
aad
lods
cmc
cs
pop
mov
adc
pop
jl
and
jmp
cld
mov
jle
sbb
pop
xchg
icebp
push
add
in
idivl
das
mov
cmp
jp
ret
pop
pop
jg
xor
sti
ffreep
pop
pop
pop
movsl
pop
add
add
repz
fsubs
add
movsb
pop
pop
cmp
sbb
fs
xlat
inc
add
mov
dec
mov
mov
sbb
pop
loope
rcrl
add
jb
add
add
adc
add
popf
xor
add
fucom
pop
sub
rcrb
add
add
jecxz
icebp
mov
addr16
or
mov
pop
jo
add
add
and
jnp
jnp
pop
in
xchg
or
and
add
es
pop
stc
dec
or
in
pop
rcrl
pop
fdivp
xor
add
sbbl
js
jp
lds
icebp
fdivr
mov
push
pop
lahf
mov
mov
sub
rcrb
pop
int3
sbb
mov
dec
ljmp
pop
pop
test
sbbb
mov
pop
cli
or
arpl
add
mov
add
daa
pop
lcall
cmc
sub
push
add
xor
dec
lock
add
mov
push
add
pop
sub
push
add
sub
in
xlat
out
dec
inc
pop
imul
pop
aaa
ret
dec
out
push
pop
roll
mov
push
add
rcrl
inc
pop
and
mov
add
lahf
test
call
pop
jle
jae
add
add
push
add
xor
add
sub
test
or
js
mov
inc
pop
jnp
pop
xchg
repnz
pop
fmull
lcall
jne
pop
jns
fistpl
add
add
test
mov
xchg
xchg
es
arpl
add
add
add
pop
push
in
adc
add
negb
ja
xor
add
jge
pop
xchg
cs
cmp
sbb
push
add
push
inc
add
and
add
mov
inc
pop
push
add
ret
pop
pop
mov
cmp
pop
lods
inc
pop
cld
scas
jge
add
sbb
adc
push
add
pop
cmova
add
xchg
add
stos
bound
add
imul
pop
mov
insb
xchg
push
sbb
cmc
fwait
xchg
jne
pop
loopne
lret
add
add
pop
sub
and
imul
adc
lds
add
ffreep
pop
dec
cs
pop
out
xor
dec
leave
aam
add
jmp
inc
add
cmpsb
pop
and
add
pop
and
add
sub
jmp
add
add
pop
xchg
dec
popf
cwtl
idivl
adc
add
les
loope
aaa
xlat
and
aad
dec
stc
add
pop
ljmp
enter
cwtl
enter
pusha
add
rcl
adc
xchg
or
imul
sbbb
sarl
aaa
inc
pop
and
add
std
lds
sub
xor
add
add
mov
pop
test
test
out
aaa
out
dec
dec
pop
add
add
pop
gs
mov
loopne
cs
xor
add
pop
and
push
add
fwait
cmp
add
add
add
fistl
mov
add
jp
pop
ret
pop
pop
sub
pop
jae
add
xchg
or
cmpsl
pop
lret
inc
pop
or
or
pop
mov
pop
leave
mov
add
aam
pop
jge
mov
xor
call
pop
xor
add
outsl
addr16
insl
movsl
pop
sub
in
js
pop
int
lock
mov
pop
pop
jne
jb
add
add
push
pop
cmpsb
pop
aam
test
fimull
mov
out
jmp
pop
ds
pop
inc
add
pop
jns
addr16
ljmp
mov
add
lds
xchg
jge
idiv
dec
stos
loope
icebp
mov
out
mov
xor
add
jecxz
mov
add
clc
xor
add
xor
add
and
add
cltd
lret
inc
add
enter
dec
clc
mov
testb
xor
mov
pop
sahf
pop
pop
aam
cmpsl
pop
mov
add
icebp
je
rcr
inc
pop
push
add
jg
and
add
loope
insl
ds
add
in
in
push
pop
test
fadds
add
add
add
mov
mov
jl
popa
add
lcall
xor
add
sti
and
loopne
imul
pusha
add
loop
push
movsl
pop
mov
mov
int
inc
add
sti
addr16
outsl
lods
add
add
inc
add
push
add
push
pop
sub
pop
xchg
fwait
jae
add
add
xchg
dec
mov
fs
lea
add
das
test
int3
enter
pop
adc
add
pop
mov
dec
insb
xchg
mov
add
add
add
pop
xor
add
cmp
add
enter
pop
push
pop
daa
pop
je
push
loop
inc
pop
js
and
add
add
rcrb
xlat
push
lea
add
icebp
cmp
stos
sbb
add
pop
mov
imul
stos
rcrl
addr16
sub
test
pop
stos
push
add
push
mov
add
imul
mov
sub
mov
js
jp
inc
add
fsubr
cmpsl
pop
js
or
pop
jl
pop
push
cmp
lret
add
icebp
daa
pop
test
add
and
add
dec
push
or
cmc
sbb
push
imul
pop
fldt
jnp
add
lods
clc
xchg
mov
inc
pop
mov
dec
mov
inc
add
pop
dec
and
add
dec
sahf
gs
inc
pop
or
fcomip
push
add
aad
icebp
dec
xor
add
add
pop
mov
js
add
mov
add
ja
pop
adc
add
sbb
cmp
add
std
push
push
pop
addr16
cwtl
add
rcrl
pop
mov
inc
pop
adc
pop
adc
inc
pop
cltd
xchg
adc
add
les
sti
std
out
mov
test
scas
test
mov
in
push
add
outsl
add
add
mov
loope
imul
xor
add
ret
mov
inc
add
cmp
mov
add
sub
add
pop
jmp
jecxz
mov
pop
inc
pop
arpl
add
scas
mov
mov
mov
add
add
mov
movsb
pop
leave
nop
xchg
cld
in
xor
addr16
sub
repnz
aam
js
pop
lret
dec
je
pop
push
add
cltd
push
mov
pop
xchg
sbb
rclb
pop
sub
pop
aaa
movsb
pop
pop
pop
sub
pop
adc
pop
mov
test
add
jmp
pop
ljmp
cmp
pop
cmp
adc
add
pop
jne
pop
cmp
jb
add
ficompl
roll
add
xor
add
mov
addr16
in
sbb
pop
sub
push
jge
sti
push
imul
pop
mov
add
and
test
pop
dec
sahf
sbb
add
pop
mov
pop
faddl
pop
loope
inc
pop
jbe
jle
pop
movsb
pop
insb
and
add
ss
or
shll
add
aad
pop
bound
add
jne
das
stos
mov
add
add
lods
adc
push
mov
or
mov
fwait
inc
add
rcrl
add
ja
inc
add
mov
cwtl
nop
push
or
add
add
outsl
shlb
add
jae
add
sbbb
add
sti
icebp
les
cmpsl
pop
cmpsb
pop
or
mov
loopne
xchg
inc
add
cli
aad
xchg
pop
cmp
cmpsb
pop
test
arpl
add
dec
sbbb
xchg
push
mov
pop
and
lds
rclb
pop
in
mov
adc
add
add
lahf
cwtl
ja
jno
add
aad
mov
add
or
dec
xor
add
add
push
pop
inc
pop
rcrb
and
add
arpl
add
daa
pop
add
add
pop
pop
sbb
sbb
add
addr16
jg
add
scas
leave
mull
imul
mov
lods
xor
add
pop
cmp
popf
es
lock
pop
imul
test
pop
sub
lea
add
jbe
pop
dec
cli
pop
pop
loope
mov
popa
add
dec
sarl
in
push
add
fnsave
add
sbb
test
ja
lock
mov
cmp
mov
push
mov
sahf
adc
add
sti
ljmp
cmp
int
add
pop
stc
in
mov
out
adc
pop
cmp
cmp
add
mov
pop
push
jnp
sub
add
add
add
lret
cs
add
mov
adc
add
push
add
adc
add
pop
cmpsl
pop
adc
jmp
add
pop
jns
push
adc
add
inc
add
mov
dec
cmp
mov
pop
pop
sahf
jns
cmp
movsb
pop
repz
add
or
adc
add
push
add
cmp
add
add
add
in
pushf
push
add
lods
mov
pop
fimull
sti
xor
add
add
jecxz
sub
mov
pop
jle
rcrl
scas
sbb
add
cld
loopne
out
in
xchg
icebp
loopne
adc
add
add
mov
add
xchg
push
lahf
dec
stos
and
add
pop
enter
mov
fst
sbb
add
dec
sbb
add
add
dec
stc
xor
int
test
popf
sub
pop
xchg
dec
mov
add
xlat
mov
add
popa
add
nop
aaa
push
add
paddd
and
add
in
dec
ret
jl
adc
add
pop
push
pop
ss
dec
les
mov
and
add
popf
inc
pop
mov
imul
pop
in
ret
push
add
sti
push
add
jb
add
add
cmp
ficomps
mov
cmp
add
jnp
add
add
pop
test
add
jns
cs
hlt
jb
add
ds
pop
test
add
add
add
pop
sbb
add
bound
add
movsl
pop
shll
imul
pop
mov
push
add
xchg
add
add
add
push
inc
pop
arpl
add
les
add
mov
sbb
pop
push
add
imul
mov
mov
out
jl
pop
sahf
pop
mov
or
rcrl
add
in
and
add
sbb
add
inc
add
push
lods
xor
add
push
jl
pop
push
pop
jecxz
sbbb
xchg
aad
pop
cmpsl
pop
icebp
jne
movsl
pop
add
push
pop
and
add
add
rcr
jmp
cltd
shl
cltd
add
add
push
add
add
mov
pop
and
add
inc
pop
pop
xor
add
pop
testb
pop
out
pop
fldt
clc
inc
add
xor
fldt
pop
cmp
pop
iret
addr16
lahf
movsl
pop
fistpl
adc
add
sub
pop
inc
pop
lret
sbbl
loop
aam
jecxz
mov
add
repnz
xor
add
add
mov
xor
pop
dec
dec
dec
adc
add
pop
pop
pop
js
clc
inc
add
arpl
add
sbb
add
jl
pop
push
add
xchg
add
push
add
jmp
pop
pop
rcrb
add
push
pop
imul
in
xchg
mov
test
pop
rcrl
sub
add
ss
add
add
bound
add
adc
add
pop
inc
add
and
add
push
fcompl
or
cld
lahf
pop
jns
pop
or
faddl
pop
inc
pop
pop
popa
add
push
and
sbbb
add
scas
lea
rcrl
jecxz
insl
pop
sub
pop
cmpsl
pop
inc
pop
mov
mov
add
add
add
mov
inc
add
dec
mov
push
pop
xchg
test
pop
mov
jb
add
xlat
pop
sub
pop
ljmp
mov
mov
pop
into
es
mov
add
or
push
add
imul
and
add
das
ljmp
pop
jns
divb
add
add
jl
pop
idivb
lods
repnz
jns
pop
jnp
inc
add
xor
add
mov
pop
lods
jge
test
add
cld
jbe
add
add
xchg
mov
and
jae
add
cmpsb
pop
mov
rep
pop
mov
pop
cmp
add
je
pop
xor
add
pop
les
fnsetpm(287
pop
jne
cmp
xor
add
add
pop
fcmovb
pop
mov
das
pop
out
mov
jae
add
pop
xor
adc
add
sbb
shll
add
pop
push
ret
cmp
fdivrs
dec
dec
xchg
mov
pop
pop
inc
add
dec
leave
and
add
sbb
pop
xchg
clc
stc
nop
mov
add
inc
add
mov
es
lret
jp
inc
add
and
inc
pop
pop
hlt
fwait
mov
loop
lock
pop
jbe
pop
dec
fwait
mov
add
idivl
pop
mov
les
add
scas
call
add
pop
fmulp
add
add
inc
pop
ret
pop
outsb
xchg
cld
xor
add
sub
pop
mov
and
adc
add
jne
sahf
clc
ljmp
sbb
pop
mov
add
imul
dec
xchg
inc
add
nop
out
jmp
push
pop
mov
fsubs
add
cmpsl
pop
push
inc
add
rcrl
call
pop
sbbl
lods
xchg
add
cli
gs
pop
jno
add
pop
cltd
mov
add
mov
xor
adc
add
or
add
in
sbbl
mov
dec
jns
pop
loopne,pn
out
jns
sti
fisubrs
sub
test
pop
int
pop
icebp
jg
lods
cmp
add
add
and
add
sbb
add
hlt
push
clc
jns
jae
add
jmp
popf
jg
lods
cs
daa
pop
lock
pop
icebp
test
out
xor
add
icebp
mov
rcrl
hlt
dec
inc
add
pop
sub
add
push
add
pop
sahf
test
mov
je
sahf
jo
add
dec
cmp
pop
fs
mov
pop
dec
mov
pop
mov
add
movsb
pop
fcomp
mov
push
insl
cmp
pop
rcrl
add
bswap
mov
or
pop
aad
sub
cmp
dec
push
inc
add
xchg
add
adc
add
pop
iret
inc
add
pop
pop
add
add
jge
in
test
mov
jge
shlb
add
add
sub
arpl
add
push
add
pop
sub
inc
add
aad
insb
inc
add
ret
add
dec
adc
add
lcall
pop
sub
cmp
sbb
pop
mov
lock
fwait
jp
into
mov
lods
bound
add
pop
add
or
push
clc
into
mov
imul
sub
sbbb
out
xor
add
add
adc
icebp
mov
pop
and
add
aad
and
add
add
out
cwtl
pushf
mov
pop
mov
add
push
jg
adc
add
loop
mov
add
or
pop
in
loop
pop
stos
mov
add
in
hlt
mov
movsl
pop
in
dec
loop
scas
testl
xor
stos
add
inc
pop
aam
cmp
mov
out
mov
pop
inc
add
lahf
and
add
mov
fidivrl
mov
ss
fisubrl
add
xchg
in
mov
inc
add
or
pop
and
add
rcrb
stos
test
shl
cmp
add
pop
xchg
jbe
add
pop
icebp
xchg
es
sbbl
xchg
clc
jge
or
pop
popf
adc
push
outsl
mov
pop
movsl
pop
js
popf
xor
add
sub
add
mov
mov
ja
pop
push
cs
dec
dec
push
add
cs
add
pop
leave
xlat
mov
pop
and
add
leave
shlb
adc
add
add
inc
add
inc
pop
int3
push
jno
add
cltd
sub
adc
add
and
add
sbb
movsl
pop
shl
jge
es
into
in
pop
xor
add
cmp
add
jbe
mov
outsl
mov
pop
xchg
or
pop
sub
nop
adc
add
pop
pop
pop
ja
and
pop
or
je
inc
add
rcrl
add
mov
pop
bound
add
pop
insl
aas
cld
sub
pop
cmp
lahf
add
ja
pop
cli
fildl
add
pop
and
add
dec
push
add
setne
jle
aaa
aaa
inc
add
mull
add
mov
pop
xor
add
dec
xor
add
fistl
add
lret
cwtl
pop
xor
pop
xor
add
in
adc
add
dec
adc
add
add
mov
test
pop
in
addr16
pandn
cwtl
or
cmp
pop
xchg
and
pop
pop
cmp
fmull
add
mov
std
je
add
add
mov
dec
adc
add
push
add
cmc
inc
add
movsb
pop
inc
add
dec
jne
in
fwait
into
mov
push
insl
mov
cs
bound
add
mov
pop
ror
xlat
inc
add
rcrb
mov
and
mov
jecxz
hlt
ret
out
incb
pop
pop
sti
adc
xchg
push
add
sub
xor
add
fcmovne
pusha
add
fdivr
cmc
dec
mov
inc
pop
mov
dec
stos
jecxz
sbb
pop
fnstsw
mov
adc
add
xchg
shlb
pop
or
pop
ret
pop
adc
add
dec
fcompl
inc
pop
aaa
gs
mov
jnp
pop
push
add
add
add
int
add
cmp
add
loope
mov
mov
xor
add
pop
in
xchg
popf
iret
stc
jae
add
cs
or
mov
adc
add
pop
outsb
gs
cs
leave
or
pop
mov
lea
pop
lods
mov
pop
xor
es
mov
jae
add
pop
psrlq
test
jge
pop
inc
add
and
add
add
lea
cs
push
imul
pop
inc
add
jns
pop
and
add
add
add
lcall
add
pop
loopne
inc
pop
and
arpl
add
pop
pop
pop
and
or
pop
outsl
repz
pop
jbe
pop
lret
jg
js
fdivrp
aaa
pop
jecxz
or
imul
sub
xor
hlt
lret
jbe
pop
pop
xor
add
loope
mov
jne
pop
jne
mov
sbb
inc
add
mov
faddl
add
sub
mov
sti
ja
pop
aas
das
jno
add
add
negl
xchg
shr
push
jg
pop
call
add
mov
add
lds
pop
mov
xchg
sbb
jae
add
test
pop
scas
movsl
pop
imul
test
add
stos
nop
mov
inc
add
bnd
movsb
pop
push
add
inc
pop
loope
jle
insl
pop
pop
mov
add
add
sub
bound
add
rcrl
lods
add
add
sbb
add
cmp
add
mov
pop
jge
pop
or
push
add
push
pop
adc
sbb
enter
sub
lea
pop
int
sbbl
lods
push
add
ror
ljmp
rclb
in
je
and
add
sbb
add
sbbb
cmp
pop
lods
push
add
add
add
jmp
in
bound
add
jne
xchg
clts
pop
dec
pop
faddl
add
xchg
mov
add
sbbb
add
mov
and
lods
jae
add
mov
lret
ljmp
pop
scas
pop
push
add
inc
pop
in
sti
repnz
and
cltd
lcall
out
jmp
add
cmp
fisubrl
pushf
dec
scas
fisubrl
pop
fdivrl
jae
add
dec
insb
in
sub
add
xchg
fsubl
push
xchg
int3
std
lods
enter
add
xchg
cmpsb
pop
in
scas
and
fcomip
cmp
inc
add
lods
inc
add
aaa
mov
mov
dec
inc
pop
sbb
das
jle
adc
jmp
pop
xor
add
sub
push
add
add
pop
push
cmp
jle
pop
movsl
pop
mov
mov
loopne
aam
pop
lods
aaa
aaa
fadd
pop
mov
pop
pop
mov
pop
jmp
cli
pusha
add
push
add
inc
pop
mov
push
std
mov
mov
xor
add
add
aam
push
add
pop
sbb
inc
add
cmc
jmp
pop
sbb
lret
add
inc
pop
lcall
addr16
bound
add
add
scas
pop
outsl
in
hlt
aad
out
ret
pop
cmp
pop
xlat
mov
es
sbb
cwtl
mov
push
pop
das
jl
add
jmp
insl
dec
adc
add
pop
int
cli
xor
add
add
pop
pop
xchg
xchg
and
add
out
aaa
pop
mov
cmpsb
pop
sbbl
sti
nop
insl
or
pop
stos
or
add
add
add
push
repnz
push
rclb
add
mov
push
lods
rcrl
mov
pop
and
adc
mov
add
and
xchg
mov
sub
pop
jge
xor
cmpsl
pop
xchg
mov
pop
push
mov
mov
sbb
in
insl
cmp
add
pop
out
cmp
pop
hlt
sub
sbb
lahf
xchg
jecxz
sbbb
jbe
mov
sbb
add
pusha
add
std
cltd
cmp
pop
jbe
dec
jnp
jge
xchg
adc
pop
mov
jns
add
jmp
scas
inc
add
sbbb
xlat
cmp
js
lahf
addr16
mov
aam
or
add
pop
push
add
and
add
add
pop
mov
pop
les
adc
out
mov
popa
add
xchg
lods
mov
mov
xlat
push
dec
and
add
rcrl
add
fcomi
fcoms
add
and
add
daa
pop
mov
mov
add
pop
pop
jecxz
xchg
iret
cwtl
lret
cltd
shrl
xlat
adc
sub
adc
add
jl
add
xchg
mov
mov
leave
dec
or
add
pop
mov
add
iret
sbb
and
sarb
jg
xor
cmp
into
js
adc
and
stos
sub
pop
fidivrs
xchg
mov
shl
or
add
jecxz
icebp
adc
sbb
jb
add
pop
in
mov
xchg
jb
add
pop
mov
add
sbb
leave
outsl
lods
mov
dec
int3
loope
inc
add
xor
add
test
add
sub
addr16
ret
pop
je
sub
add
aas
push
mov
hlt
push
sbbb
add
add
mov
pop
pusha
add
mov
mov
add
add
pop
and
add
mov
pop
cmp
push
add
push
mov
add
scas
mul
pop
adc
add
xchg
hlt
fbld
add
lahf
inc
add
loop
xor
add
pop
push
add
movsb
pop
mov
dec
cltd
jg
inc
add
fdivr
pop
mov
add
into
xor
add
test
mov
pop
add
shlb
jmp
add
mov
test
pop
add
push
add
xchg
inc
add
mov
add
or
jnp
cmpsb
pop
or
push
add
sub
mov
pop
jge
xor
stc
add
add
pop
stos
das
push
jno
add
or
pop
mov
pop
lahf
cmp
add
js
xchg
pop
popl
pop
les
pop
in
cli
ds
sbbb
test
pop
push
mov
pop
and
jb
add
inc
add
fcmovb
pop
rcrl
add
pop
pop
lcall
and
add
pop
test
pop
lock
xchg
cltd
clc
in
jge
jo
add
addr16
ljmp
insl
and
add
add
test
or
add
add
sbb
jo
add
lock
movsb
pop
lret
jmp
mov
mov
mov
mov
in
fcoms
pop
xor
add
add
les
int
lret
sbbb
add
sub
in
dec
jmp
in
jae
add
add
popf
cmp
pop
xchg
dec
cmc
sub
clc
mov
and
add
pop
push
in
sbb
add
pop
mov
and
add
add
dec
repz
rcrl
xor
add
fildl
add
pop
fsubs
add
imul
lcall
add
scas
scas
jbe
mov
pop
mov
int3
aad
dec
or
add
sbbb
test
jns
ffree
pop
push
adc
add
pop
cmpsb
pop
sub
pop
sub
fmuls
pop
cmp
sbb
imul
aad
mov
and
add
push
add
in
jge
add
lret
fsubrl
mov
add
cld
aas
lea
pop
pop
pop
sbbb
sub
push
mov
shll
add
mov
std
idivl
mov
cmp
mov
pop
cmc
leave
xor
add
sub
mov
std
ljmp
pusha
add
lcall
lock
add
sbb
or
add
jae
add
xor
add
mov
add
add
cmpsb
pop
movsl
pop
cmp
in
pop
fs
dec
mov
bound
add
pop
dec
bound
add
add
xchg
sbbb
lea
jp
or
xchg
pop
push
ds
xchg
loop
inc
add
je
pop
pop
pop
daa
pop
aad
add
inc
pop
mov
aam
fisubrs
pop
and
add
sbbl
fldcw
add
push
test
inc
add
mov
pop
jnp
add
cmp
sbbl
pop
fidivl
add
push
add
fwait
push
shll
pop
fstpt
jns
ss
jp
add
out
adc
add
addr16
imul
pop
fs
pop
scas
and
add
icebp
mov
lock
inc
pop
sbbb
mov
mov
into
shrl
aaa
inc
add
push
jl
lcall
sbbb
out
enter
or
mov
fldt
je
mov
add
pop
xchg
pop
lds
adc
add
add
jle
inc
pop
repnz
mov
frstor
add
jecxz
pop
cmp
jbe
xor
mov
push
add
xchg
popa
add
inc
pop
inc
add
cmc
les
jle
xor
add
push
movsl
pop
test
ret
arpl
add
pop
lock
push
pop
lds
lock
add
xlat
pop
xchg
cmp
pop
test
jb
add
in
sbbb
pop
aaa
lret
and
mov
pop
pop
sub
add
sbb
add
nop
mov
pop
cli
stos
and
sbbl
pop
sbb
pop
bound
add
mov
aam
sbb
add
xchg
add
xchg
sarb
push
lret
out
inc
pop
dec
aas
popf
inc
pop
jecxz,pt
mov
fs
mov
hlt
and
and
add
add
pop
push
add
sbbl
jae
add
inc
add
adc
add
mov
mov
add
repz
mov
adc
add
dec
xchg
dec
pop
dec
adc
and
add
add
push
div
or
sub
jge
pop
jbe
pop
push
add
rcrl
les
add
add
pop
or
or
add
add
lds
mov
mov
push
add
push
rcrl
cmc
popf
jl
cs
pop
adc
add
pop
jle
testl
pop
lods
cmp
add
xchg
jnp
addr16
cmp
jmp
cmp
fwait
cltd
inc
add
add
add
inc
add
addr16
test
mov
pop
xor
sub
pop
rcrl
dec
cmp
xchg
push
add
cmc
in
in
insb
or
pop
xor
add
or
loop
mov
xchg
push
mov
pop
loop
in
icebp
xlat
stc
hlt
add
add
pop
cmp
insb
or
adc
add
add
rcrb
sub
add
push
pop
lods
cmp
xor
mov
pop
enter
or
jno
add
add
lcall
lods
cli
xchg
ljmp
gs
negb
mov
add
aaa
into
ss
xchg
incl
add
lcall
stos
push
jg
push
add
js
inc
pop
scas
aam
push
add
test
shlb
add
pop
inc
add
and
add
mov
add
push
add
outsb
add
add
lods
or
add
aas
pop
xor
add
int
dec
ret
pop
fbld
pop
sub
pop
xor
add
test
pop
les
ljmp
add
mov
pop
js
add
sbbb
int3
pop
or
sbb
pop
jg
add
out
ds
xchg
pop
fcomps
test
add
lahf
js
sbb
add
xor
add
inc
add
sub
dec
mov
les
pop
xor
ja
mov
pop
xrelease
add
test
pop
dec
jle
out
sub
pop
jns
pop
dec
dec
mov
jno
add
ljmp
add
inc
add
cld
sub
push
add
push
sahf
mov
aas
inc
pop
lock
sub
sub
iret
mov
enter
pop
fs
push
xor
add
bound
add
pop
xchg
xchg
jno
add
add
sbb
xchg
add
pop
pop
xor
add
mov
add
mov
add
clc
cmp
jnp
loope
xchg
inc
pop
js
pop
mov
fldlg2
or
cs
add
push
add
or
pop
popa
add
xor
add
add
add
jbe
cmpsb
pop
out
mov
add
pop
in
scas
push
add
push
add
es
or
notl
dec
bound
add
sub
mov
pop
push
add
into
or
xchg
xchg
sub
je
sbbl
add
cmp
add
rcrl
pop
sub
or
sbb
add
push
add
jne
ret
pop
and
add
movntps
add
repz
add
add
dec
in
or
outsl
es
cltd
nop
jne
push
add
mov
dec
xor
add
cmp
in
inc
add
movsl
pop
mov
add
xor
test
jl
mov
mov
mov
dec
ja
pop
or
mov
sahf
sbb
jae
add
adc
add
ficoml
add
ss
jne
add
movnti
add
and
mov
add
mov
scas
pop
sbb
add
jb
add
add
je
xchg
hlt
inc
pop
aad
cmp
pop
push
arpl
add
movsb
pop
pop
sahf
adc
xchg
jne,pn
daa
pop
xor
mov
pop
sub
imul
add
lock
cmp
xchg
mull
sbb
addr16
in
ficoms
add
out
scas
jmp
pop
sbbb
add
add
push
sbbl
push
add
push
aam
add
popf
lock
aam
pop
xlat
dec
lret
mov
mov
lea
lds
pop
cs
lea
add
adc
add
add
jne
pop
pop
xor
add
xor
add
add
add
pop
mov
xchg
add
add
push
pop
addr16
sbbb
pop
sbb
pop
xchg
insb
xchg
sbb
pop
pop
xchg
add
add
in
sub
mov
out
adc
add
adc
add
pop
pop
push
or
pop
dec
push
sbb
pop
dec
or
add
ds
out
pusha
add
adc
add
inc
pop
cltd
mov
cmpsl
pop
mov
sub
dec
sub
test
add
dec
stos
pop
pop
aad
add
cmp
pop
loopne
mov
fisubrs
pop
pop
dec
repz
dec
adc
mov
dec
lds
ficoml
cmc
das
test
jo
add
cs
mov
inc
add
mov
fwait
dec
leave
inc
add
xchg
into
mov
pop
xchg
stos
fs
loop
test
rcrl
mov
into
mov
cmp
add
inc
add
and
add
js
enter
out
in
clc
mov
stos
cmp
jp
cwtl
push
add
pop
mov
add
mov
add
negl
jne
and
add
pop
pop
push
xchg
sub
add
and
add
cld
insb
sub
adc
ljmp
xchg
pop
cmp
aas
push
add
jmp
add
cmp
push
add
sub
pop
sub
pop
xor
add
mov
repz
add
pop
pop
jmp
rcrb
add
lds
sub
mov
jb
add
pop
dec
and
add
add
pop
mov
lods
in
mov
loop
and
js
pop
sbbb
add
pop
pop
cmp
push
add
or
jae
add
jo
add
in
das
sub
and
add
lcall
jbe
pop
pushf
sbbl
sub
pop
ljmp
add
mov
add
add
fbld
out
sub
xchg
lahf
pop
ja
cmc
sbb
mov
dec
cs
pop
mov
ss
inc
pop
push
mov
pop
inc
pop
sti
push
xchg
jae
add
inc
add
js
pop
adc
add
pop
jno
add
mov
aad
jecxz
sahf
add
sbb
add
inc
add
out
cmp
cmpsl
pop
adc
add
add
pop
jl
pop
xor
add
inc
pop
js
lods
aad
aad
pop
pop
xlat
jmp
add
push
xor
mov
mov
add
inc
add
pop
cs
pop
repz
arpl
add
add
sti
inc
pop
dec
pop
sub
mov
add
xor
add
sub
repnz
out
stos
pop
jp
cwtl
xor
mov
add
in
jmp
xor
add
jmp
pop
cmp
jg
push
xor
add
gs
xchg
insl
cs
lods
sbbl
mov
add
push
add
sbbl
pop
mov
lahf
cwtl
fbstp
cmpsb
pop
rcrl
nop
and
pop
mov
sbbb
add
pop
icebp
jmp
pop
mov
pusha
add
sbb
jg
push
add
stos
pop
in
push
aad
and
add
fildl
sbbl
mov
pusha
add
xlat
add
add
dec
xchg
aad
cmp
add
fptan
jb
add
jle
pop
mov
cmc
jl
inc
pop
fimull
add
fisubrs
push
pop
jnp
ror
sub
pushf
mov
scas
arpl
add
movsb
pop
jmp
jne
xchg
add
add
rorl
pop
push
add
add
add
out
push
add
pop
pop
sbb
add
pop
add
add
add
inc
add
int3
jnp
xchg
div
rcrb
and
add
inc
add
and
xchg
pop
and
add
push
add
xor
add
pop
ret
push
sbbl
mov
jbe
and
rcrb
add
cmp
flds
add
pop
je
sbbb
add
lds
add
add
pop
in
nop/reserved
add
add
add
add
leave
jns
cmpsb
pop
sarl
or
add
mov
in
xor
out
and
add
add
xchg
cmp
rcrl
pop
mov
jge
pop
adc
add
stos
popf
frstor
or
pop
cmp
add
iret
inc
add
xchg
arpl
add
mov
cmp
pop
mov
mov
inc
add
daa
pop
repz
pop
inc
pop
mov
add
inc
add
cld
lcall
imul
add
add
pop
stos
jb
add
add
add
pop
and
add
push
ret
pop
std
stos
scas
jno
add
lahf
das
push
cmp
mov
shrl
add
cmp
aas
mov
cmp
movsb
pop
xchg
sbb
add
pop
xor
add
pop
in
test
ja
adc
add
and
bound
add
add
adc
add
jl
pop
popa
add
rcrb
add
add
lret
adc
add
sub
out
rcrl
mov
add
add
pop
test
inc
add
ljmp
sbb
add
adc
add
sbb
cltd
mov
add
mov
inc
pop
testl
adc
add
add
fstpl
pop
inc
pop
adc
add
adc
push
xchg
test
jbe
add
cmpsb
pop
xchg
int
test
xor
xchg
sub
pop
sbb
add
mov
add
fisttpl
inc
add
int
mov
add
daa
pop
lea
es
mov
add
pop
lahf
ret
pop
inc
pop
push
pop
jmp
push
pop
sbbb
cli
sahf
fs
fsubrl
fsubrs
push
jne
pop
inc
pop
mov
add
pop
shll
add
rcrl
mov
int
dec
add
add
js
pop
ficomps
cwtl
sbb
add
sub
cmp
add
icebp
popa
add
mov
mov
add
scas
sbbb
add
xlat
shrb
ret
popf
pusha
add
cli
cmpsb
pop
adc
add
mov
mov
add
sti
aaa
cmc
frstor
add
xchg
adc
pop
mov
lds
pop
es
pop
je
sbb
pop
mov
aas
mov
pop
dec
jg
cmp
add
push
add
movsb
pop
and
lret
dec
sbbl
add
sbb
add
add
movsl
pop
cwtl
aad
add
add
add
add
mov
add
sub
js
fptan
mov
dec
xor
add
add
test
pop
cwtl
out
stc
test
pop
jno
add
clc
push
call
or
ja
mov
xor
add
add
and
pop
fnstenv
pop
loop
addr16
add
pop
stc
aaa
mov
add
or
xlat
lret
sti
cwtl
jmp
jl
pop
pushf
jmp
pop
in
ficompl
jbe
xor
add
push
mov
ror
inc
pop
push
add
jle
dec
jnp
add
pop
hlt
pop
or
add
xchg
pop
fisttpll
mov
add
das
in
cmp
mov
add
imul
jp
add
inc
add
imul
add
into
insl
repz
in
cmp
pop
dec
cltd
or
sub
jmp
pop
pop
cli
cmp
cmp
add
je
pop
mov
daa
pop
mov
jno
add
add
pop
mov
inc
pop
mov
pop
cld
xchg
pop
aaa
dec
mov
add
xchg
pop
ret
pop
shl
pop
leave
pop
mov
shr
loopne
dec
jns
test
xchg
test
inc
pop
mov
adc
add
add
add
clc
in
mov
push
xchg
mov
test
mov
aas
sarl
inc
pop
lahf
jg
lret
mov
movsl
pop
xchg
mov
cmp
add
sti
lahf
mov
add
push
push
popf
pop
addr16
das
gs
push
push
rorl
stc
adc
add
add
jne
jle
loopne
dec
aaa
cmc
repnz
adc
add
pusha
add
sbbb
add
add
pop
adc
add
and
add
add
mov
pop
inc
pop
test
fsubrs
push
pop
inc
pop
adc
add
add
mov
pop
push
add
add
in
pop
sbb
pop
or
xor
jne
in
dec
mov
cs
push
add
push
pop
pop
or
add
sbb
dec
je,pn
add
xchg
sbbb
sti
push
lret
scas
test
push
mov
mov
leave
cmc
mov
add
add
sbb
icebp
mov
leave
jno
add
sbbl
add
or
xor
add
sbb
shrl
jg
cs
fisttpll
sbbl
jb
add
out
xchg
push
jecxz
xchg
bound
add
pop
mov
jae
add
add
insb
mov
lds
and
add
pop
adc
rorl
add
dec
pop
sbbb
scas
out
xchg
pop
sbb
pop
lods
adc
add
pop
jl
lds
les
add
or
dec
add
add
add
pop
call
lock
test
dec
popf
lock
jbe
sbb
daa
pop
dec
sbb
and
add
pop
fnstsw
add
push
and
add
add
push
dec
xlat
repz
add
push
push
add
out
ss
mov
adc
add
cmp
adc
add
ror
jp
into
mov
adc
add
in
push
aaa
sub
mov
pop
lret
jbe
sub
ljmp
sub
pop
sti
dec
pop
push
add
add
add
add
add
add
add
lret
mov
pop
cld
mov
or
pop
jecxz
xchg
pushl
add
sbb
sbbb
add
sbb
push
in
mov
mov
cltd
xchg
leave
jle
das
pop
lret
add
icebp
fistl
add
mov
fisubl
pop
scas
lock
mov
les
fadds
add
add
jg
sti
pop
gs
es
dec
mov
push
jbe
xchg
outsl
add
mov
leave
mov
in
lds
add
sub
and
add
outsb
dec
inc
pop
mul
pop
das
loope
jb
add
pop
gs
mov
pop
add
jmp
add
or
addr16
mov
sub
cmpsl
pop
jp
pop
mov
jae
add
adc
add
idivb
inc
pop
fdiv
int
add
testl
pop
xchg
jno
add
and
add
pushf
pop
push
add
jle
int3
mov
cmc
mov
mov
gs
mov
xchg
pop
jbe
fisttpl
dec
jne
sub
scas
xchg
scas
ljmp
adc
add
fwait
incl
scas
lods
sub
jecxz
push
add
dec
outsb
jg
xor
mov
inc
pop
call
jne
pop
sub
jo
add
jmp
push
or
push
add
sar
adc
add
outsb
mov
rcrb
pop
int
pop
sbbl
loope
sub
pop
nop
inc
add
xor
add
add
shll
add
in
pop
divb
pop
add
add
pop
mov
sahf
pop
xchg
pop
mov
push
pop
xchg
inc
pop
inc
pop
jg
xchg
fwait
loopne
into
xor
add
mov
sbbb
mov
lock
pop
test
pop
pop
jecxz
pusha
add
xor
add
xchg
push
add
in
rcrb
lds
aas
inc
pop
jae
add
gs
pop
mov
or
lds
mulb
add
mov
sbbb
add
xlat
sahf
movsb
pop
and
add
cli
fcompl
in
insb
and
add
add
and
add
das
pop
add
cmp
push
add
pop
push
push
add
adc
add
add
sub
sub
mov
add
ficompl
int
cli
imul
jo
add
xchg
lcall
pop
roll
jbe
mov
xor
add
xchg
xchg
sti
xor
add
pop
lods
movsb
pop
lds
add
sahf
sar
in
jl,pn
pop
mov
add
ljmp
add
dec
jmp
fwait
add
add
mov
xchg
repnz
mov
add
insb
push
mov
add
add
jecxz
and
add
pop
loop
push
inc
add
cmp
pop
pop
jecxz
movsl
pop
push
mov
jbe
pop
lea
fildl
mov
add
add
inc
pop
movsl
pop
adc
adc
add
fs
mov
and
add
add
add
arpl
add
add
pop
dec
sarl
cmp
jl
stos
dec
sub
fs
sub
push
pop
repz
popa
add
das
adc
add
pop
aas
cld
jle
into
imul
gs
mov
add
sub
ljmp
add
scas
jg
pop
jecxz
or
mov
inc
add
jo
add
pop
add
add
pop
jmp
in
lcall
mov
pop
inc
pop
les
pop
jmp
pop
push
add
xchg
imul
imul
pop
lods
lods
call
cmpsb
pop
and
add
add
stos
push
push
pop
rcrl
dec
jge
call
mov
adc
add
arpl
add
add
test
mov
dec
cmp
loop
pop
hlt
push
pop
mov
cmp
pop
stos
bound
add
mov
add
scas
sbb
mov
add
push
idiv
mov
scas
jae
add
sbb
add
call
pop
icebp
out
jns
movsl
pop
sub
fs
jb
add
pop
cmp
popa
add
fwait
dec
movsb
pop
sub
add
and
sub
add
push
aaa
bound
add
add
push
xor
inc
pop
push
add
inc
pop
int3
sbbb
aaa
mov
leave
dec
call
add
es
pop
mov
dec
cmp
mov
mov
push
pop
adc
clc
pmulhuw
sub
cli
out
fwait
adc
add
lahf
das
js
or
mov
sub
xchg
nop
or
push
add
popf
aaa
inc
pop
inc
pop
sbb
pop
sub
pusha
add
lds
add
add
add
faddl
fsubr
int3
cwtl
mov
add
add
std
mov
es
filds
jae
add
fs
fst
leave
jb
add
adc
add
int3
mov
jae
add
add
push
adc
inc
add
test
sbb
dec
jg
add
add
dec
inc
add
pop
pop
test
pop
and
fimuls
pop
and
out
or
xor
pop
test
cmc
adc
add
pop
shlb
add
cmp
add
pop
jb
add
pop
insl
or
mov
dec
mov
inc
add
sbb
jl
add
loope
call
add
cs
sti
ret
add
xchg
sbbl
mov
pop
jbe
pop
pop
push
pop
ret
mov
mov
pop
fsts
push
notb
add
dec
js
mov
or
gs
rep
pop
push
pop
aam
pop
xchg
test
cmp
add
push
pop
rcrl
pop
or
mov
ja
pop
pop
insl
std
ret
adc
add
add
pop
popl
pop
xchg
pop
pop
push
mov
add
mov
add
add
lcall
pop
jl
pop
jg
int
push
add
mov
add
nop
sbbb
push
mov
idiv
xchg
arpl
add
push
add
sahf
das
add
pop
lea
dec
neg
push
imul
add
test
lret
add
add
fidivrs
add
jmp
rcrl
cmp
fnstsw
shrl
sahf
push
xchg
in
test
inc
add
mov
pop
mov
sbb
add
xor
add
adc
add
pop
push
add
add
std
inc
add
jns
or
loop
les
and
add
enter
pop
or
xchg
pop
nop
xchg
mov
fistps
inc
pop
lcall
add
aad
mov
pop
jbe
jno
add
mov
mov
mov
pop
sbbb
out
pushf
or
pop
aam
cmp
add
lods
cmp
ja
fwait
push
pop
imull
mov
pop
cmp
pop
in
mov
push
das
xchg
aad
movsl
pop
push
jmp
mov
addr16
sub
icebp
sbb
call
add
add
push
add
iret
loope
mov
add
xor
adc
outsl
lods
mov
pop
mov
pop
mov
add
add
pop
call
push
fidivl
add
aad
int
add
xchg
sub
pop
xchg
cs
jo
add
mov
sub
xchg
add
lcall
lcall
mov
pop
mov
int
add
aad
mov
add
test
xchg
std
dec
add
add
push
ss
neg
test
movsb
pop
fidivrs
add
add
pop
out
call
in
movsl
pop
pop
int
add
pop
loope
pop
cmp
clc
mov
test
pop
cmp
pop
mov
add
jp
add
rcrb
dec
jmp
call
lds
mov
pop
std
push
pop
inc
add
insb
xchg
aaa
insl
xor
add
scas
fs
jecxz
sarl
cs
dec
add
add
jbe
addr16
fidivrl
icebp
mulb
pop
pop
pop
arpl
add
stos
and
add
cmp
add
loop
out
movsl
pop
inc
pop
jp
bound
add
pop
push
mov
pop
jle
sar
stos
inc
add
mov
xlat
in
into
mov
pop
pushf
scas
sub
popa
add
sbb
sbb
and
add
add
ret
add
in
jg
jl
dec
sahf
pop
mov
or
sbb
pop
shlb
add
mov
adc
add
pushf
scas
rcrl
push
in
lret
out
inc
add
sub
pop
pop
push
add
push
cmp
pop
enter
add
pop
pop
rolb
pop
ret
pop
sbbb
pop
aam
pop
sti
cmp
aaa
or
pop
inc
pop
sub
leave
cli
into
jne
jb
add
movsl
pop
rcrl
push
scas
mov
mov
stc
addr16
mov
sbbl
fs
xor
add
inc
add
xchg
jmp
inc
pop
loop
xchg
out
inc
pop
adc
add
dec
lea
pop
out
mov
clc
add
add
cmpsl
pop
jmp
or
cmp
dec
mov
add
pop
pushf
sbbb
add
add
push
repz
pop
decb
add
push
inc
pop
adc
add
cmp
lock
je
and
add
add
pop
insl
dec
cmp
add
pop
dec
push
add
fdivs
add
lods
sub
add
mov
ss
iret
insb
push
pop
fwait
pop
push
mov
xlat
inc
add
jae,pn
add
add
add
pop
sti
lods
mul
pop
ret
pop
loopne
push
ret
daa
pop
sbbb
add
add
add
xor
add
add
mov
ss
inc
add
les
mov
pop
fdivrl
gs
add
add
pop
pop
hlt
imul
cmpsl
pop
pusha
add
movhps
pop
sbbl
pop
xchg
push
mov
cmp
ljmp
pop
call
pop
lods
test
mov
pop
and
sbb
add
ret
pop
push
add
cmp
pop
lds
nop
mov
mov
add
add
add
sti
cltd
fcmovnb
pop
roll
shl
pop
mov
push
mov
adc
or
pop
fmulp
mov
add
lahf
or
push
sbbb
add
add
inc
add
sbbb
js
push
xchg
add
add
jnp
and
add
cld
into
lahf
jl
mov
add
lret
loope
mov
pop
aaa
add
push
lret
sub
add
jecxz
pop
mov
push
add
lcall
rcrl
add
pop
scas
popf
xchg
nop
fiadds
add
pusha
add
sbb
add
jno
add
pop
mov
add
inc
pop
cs
out
or
rcrb
pop
stc
push
add
cld
mov
mov
add
inc
add
lcall
add
lret
jp
add
lods
in
fs
mov
leave
out
pop
jle
movsl
pop
movsb
pop
sbbb
pop
pushf
mov
mov
ja
pop
lahf
jne
cmp
pop
jmp
shrl
add
xchg
add
lods
add
add
pop
jo
add
add
mov
test
es
pop
ja
pop
aaa
dec
outsb
push
add
xchg
je
dec
shrb
out
cmp
add
or
push
mov
push
add
inc
pop
dec
jg
add
inc
pop
jno
add
out
xchg
push
jne
mov
dec
int3
mov
clc
mov
add
mov
decb
pop
imul
pop
pop
icebp
imul
enter
mov
insl
lcall
add
clc
adc
fstps
sahf
mov
lcall
pop
pop
ja
pop
fsubrl
pop
pusha
add
jge
add
pop
int3
nop
and
add
jle
mov
fs
bound
add
loop
pop
or
jp
dec
imul
jmp
ret
pop
push
add
hlt
push
add
test
pop
ret
std
xchg
xor
add
rcrl
xchg
push
and
mov
push
adc
add
pop
inc
add
xchg
jp
pop
or
pop
aaa
and
xchg
shll
add
aad
mov
add
and
add
sti
cs
test
cs
pop
aas
clc
mov
sub
stc
cld
bnd
add
adc
add
pop
rcrb
cmc
lahf
inc
add
sub
sahf
ja
add
or
pop
adc
pop
imull
pop
sbb
pop
xor
add
nop
imul
adc
add
call
sti
dec
sbbb
in
lcall
popa
add
jo
add
and
add
pop
lea
add
lret
add
add
add
pop
sti
or
sub
cmp
xor
add
or
sbb
mov
fistpl
pop
dec
xchg
xchg
test
ret
divl
leave
out
xchg
add
jl
fsubs
push
add
mov
mov
pushf
jmp
add
mov
fdivrl
dec
in
sbb
pop
sub
add
mov
sbbb
pop
fwait
sbbb
push
add
push
or
pop
mov
dec
and
add
add
int3
jmp
mov
repz
add
fidivrs
dec
add
add
pop
lret
add
mov
jg
cli
aas
push
jecxz
popa
add
xor
add
lock
pop
mov
add
cltd
das
push
add
das
inc
pop
push
add
decl
fists
push
mov
pop
scas
xchg
aam
add
stos
cs
int3
popa
add
lret
and
add
jecxz
lret
add
pop
mov
xor
popf
sbb
add
inc
pop
movsb
pop
add
add
add
add
pop
xchg
pop
mov
xlat
into
inc
add
fmull
pop
repz
mov
mov
mov
lret
pop
dec
sbb
jb
add
pop
cmpsl
pop
lock
jp
cltd
popf
add
insb
scas
sbb
add
ret
pop
mov
add
add
pop
push
add
out
xchg
insl
popf
lock
pop
mov
add
adc
add
aaa
cmp
pop
jecxz
adc
add
fs
xchg
ret
pop
push
clc
jle
add
cmpsb
pop
xchg
mov
dec
cmp
xor
pop
pop
rol
pop
pop
ljmp
pop
sbbb
fiadds
add
pop
xor
addr16
and
add
pop
insl
cli
jmp
stos
mov
pop
xchg
das
cmp
imul
pop
rcrb
add
aad
lcall
add
mov
add
es
xchg
stos
mov
lds
pop
dec
jbe
pop
gs
inc
add
pop
mov
rcrb
sbb
lods
ja
add
cmp
div
and
add
mov
pop
int
sbb
ds
pop
push
pop
sub
adc
add
mov
push
add
inc
add
pushf
fcmovb
pop
dec
nop
outsl
ja
add
rcrb
inc
pop
sub
scas
loope
adc
mov
inc
add
push
fdivl
cwtl
mov
xor
ret
pop
das
lcall
sbb
pusha
add
jle
cmpsb
pop
mov
dec
sbb
push
add
sub
add
mov
jmp
in
addr16
rolb
add
pop
jmp
fists
mov
mov
and
add
les
enter
pop
cmp
outsl
sub
es
arpl
add
add
pop
js
sbb
add
aas
pop
repz
pop
sahf
or
ret
bound
add
add
popa
add
xchg
mov
mov
bound
add
pop
movsb
pop
and
test
das
sbbb
or
pop
sub
jl
xchg
or
mov
pop
sbb
jmp
pop
les
jb
add
add
pop
xor
add
pop
lahf
inc
add
mov
pop
imul
les
inc
pop
sti
insl
lcall
adc
icebp
sbb
sub
jne
inc
add
call
push
add
add
add
out
arpl
add
mov
jnp
stos
js
rcrb
add
add
cmp
lea
cli
mov
add
add
add
mov
outsb
push
sub
sbbl
mov
jecxz
rcrl
xchg
aad
mov
mov
rcrl
std
stos
repz
add
mov
lcall
pop
test
pop
mov
or
pop
and
test
jae
add
sahf
push
pop
outsl
mov
add
jno
add
sbbl
mov
or
xchg
insl
inc
add
pop
mov
jnp
add
xchg
mov
push
pop
adc
add
rcll
add
add
sub
loopne
cmp
aam
push
add
test
inc
pop
fisubl
fsubrs
mov
add
inc
add
in
adc
pop
fdivl
pop
or
pop
lahf
inc
add
cmpsl
pop
movsb
pop
push
fcom
rcrl
mov
cmpsb
pop
sbb
add
call
and
pop
sbbl
cmp
ret
add
push
mov
pop
ret
pop
push
add
sbb
add
jmp
je
flds
pop
mov
jle
mov
pop
dec
test
pop
sub
mov
add
add
add
pop
in
in
cmc
gs
shll
pop
sbbb
or
add
cmp
pop
pop
mov
pop
sub
shl
out
push
ja
sub
enter
sub
add
mov
inc
add
mov
rcll
add
dec
out
jmp
add
and
into
loopne
cld
mov
stc
mov
pop
popa
add
cmp
pop
dec
and
add
dec
movsl
pop
sub
psllq
pop
lods
pop
inc
pop
xor
add
pop
lods
mov
fisttpl
add
or
add
xchg
mov
jae
add
push
add
push
mov
sub
ds
pop
jmp
jns
mov
ja
add
jmp
mov
dec
pop
