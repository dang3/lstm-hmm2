add
pop
xchg
xchg
arpl
out
out
cwtl
cwtl
scas
mov
mov
cmpl
jae
xchg
sbb
sbb
sbb
std
std
out
jmp
rol
mov
mov
and
int
or
outsb
outsb
outsb
outsb
outsb
outsb
in
sti
push
inc
cmp
dec
xchg
call
and
and
and
add
or
sub
out
add
out
out
out
out
cmp
xchg
jns
jns
std
arpl
cltd
cltd
mov
xchg
jns
jns
jns
push
push
push
out
out
fwait
fwait
jbe
je
jg
repz
nop
nop
pusha
pusha
out
xchg
add
xchg
gs
sbb
nop
mov
and
stc
cmp
pop
pop
pop
or
outsb
outsb
xorb
add
je
insb
insb
es
sbb
inc
inc
inc
incb
push
push
push
scas
adc
mov
ret
pushf
pushf
or
or
out
out
out
out
sbb
sbb
push
push
push
push
push
repnz
lods
lods
sahf
sahf
sahf
das
out
sub
jp
jnp
inc
inc
or
cmp
mov
sbb
dec
dec
lahf
shrb
and
xor
pop
pop
pop
dec
pop
xchg
mov
stc
stc
stc
stc
out
stc
pop
xchg
out
fildll
mov
jp
push
push
mov
les
push
lret
lret
bnd
adc
adc
adc
out
hlt
hlt
add
add
add
add
mov
add
out
out
in
out
out
out
cltd
cltd
cltd
cltd
cltd
cltd
out
out
out
out
out
out
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
out
xor
inc
inc
jl
xchg
xor
das
das
das
das
das
das
pop
enter
jmp
sbb
sbb
lea
push
push
xchg
xchg
mov
mov
out
outsb
outsb
mov
and
or
or
jo
cmp
scas
scas
scas
scas
scas
scas
jg
jg
loope
out
out
cmp
push
push
push
push
ficoms
dec
push
dec
sub
push
push
sub
lods
or
fldenv
test
xor
fldlg2
xor
fisubl
or
jb
es
es
scas
scas
sahf
mov
mov
adc
dec
dec
jecxz
jecxz
out
out
lret
sti
lods
lods
lods
xchg
test
cld
cld
or
cmp
dec
dec
sbb
sti
sti
lds
outsl
outsl
bound
jne
loop
fwait
push
arpl
arpl
ror
enter
mov
inc
out
mov
push
push
push
or
stos
or
mov
cs
into
into
into
into
js
push
dec
dec
dec
fdivrs
xchg
xchg
mov
insl
pop
pop
or
rcl
rcll
mov
xor
leave
pop
or
or
cmpsl
cmpsl
cmpsb
cmpsb
cmpsb
push
push
push
push
push
js
jbe
inc
lahf
lahf
add
jp
jp
and
sub
jno
or
imul
xor
gs
sub
sub
sub
mov
in
clc
clc
clc
clc
clc
in
lcall
mov
cld
xchg
xchg
xchg
ds
lods
adcb
pop
pop
ss
cmp
mov
cli
cli
pop
out
cmp
add
add
out
out
or
mov
inc
inc
inc
inc
ds
fnsave
out
outsb
addr16
xchg
xchg
xchg
xchg
xchg
xchg
lods
mov
das
and
and
jle
jle
dec
cld
cld
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
push
mov
lahf
or
and
or
into
into
into
into
popf
popf
popf
dec
dec
dec
cmpsl
sbb
sbb
jg
jg
sbb
lock
cmpsl
cmpsl
cmpsl
div
push
push
jbe
jbe
out
out
jmp
out
gs
mov
test
int
out
or
sbb
cmp
cmp
push
inc
addl
jnp
fwait
fwait
fwait
fwait
dec
dec
sub
daa
daa
daa
daa
insl
insl
insl
insl
out
mov
mov
imul
inc
fstl
push
push
push
push
sub
xchg
aaa
aaa
jmp
cmp
insl
insl
iret
iret
aaa
aaa
aaa
cld
cld
cwtl
cwtl
cmp
daa
daa
daa
gs
jge
xlat
pushf
push
push
inc
mov
f2xm1
cltd
cltd
cltd
cltd
cltd
cld
or
or
mov
divl
fcmovu
mov
lea
pop
pop
push
push
push
rcrl
pop
je
je
out
scas
lods
lods
lods
sub
mov
lods
mov
int
inc
push
outsb
sbb
rolb
inc
inc
inc
imul
pop
pop
popl
je
je
inc
inc
dec
dec
dec
dec
fwait
cmp
push
mov
out
jecxz
inc
inc
inc
inc
pop
pop
pop
daa
daa
daa
or
or
or
divl
fcmovnu
fcomp
pop
pop
xor
cmc
cmc
cmc
mov
in
in
leave
clc
in
or
cwtl
cwtl
cwtl
rol
jmp
pop
pop
addr16
clc
clc
xchg
xchg
xchg
pop
xor
in
enter
mov
push
inc
pop
push
inc
rcrl
sbb
push
lods
lods
inc
clc
jg
mov
jne
inc
inc
out
out
aas
and
push
push
push
jae
mov
mov
shld
movsl
iret
cltd
cltd
cltd
cltd
cltd
lock
test
inc
or
push
jnp
jnp
jnp
data16
sbb
fdivl
xor
xor
xor
push
sub
jae
adc
aam
cmp
call
mov
add
test
pop
dec
pop
addl
stc
stc
insl
insl
insl
es
inc
cmp
dec
dec
dec
dec
out
out
out
cmp
mov
sub
rol
rol
ret
sub
data16
push
hlt
hlt
addb
pusha
pusha
pusha
add
add
jb
cmp
dec
jmp
adc
mov
and
lods
adc
sub
in
in
mov
sti
sti
arpl
loope
and
insl
insl
insl
rclb
xchg
and
shlb
clc
clc
pop
pop
mov
dec
dec
dec
xchg
xchg
jecxz
jecxz
xor
dec
out
mov
dec
pop
bound
pop
and
xlat
xlat
xlat
adc
adc
dec
dec
sub
insb
pop
pop
pop
cmp
cmp
push
adc
jp
in
scas
scas
push
lock
pop
pop
pop
pop
lds
call
adc
ss
mov
inc
inc
push
sbb
sbb
loope
clc
jno
jno
push
push
pusha
pusha
xor
xor
or
cmp
dec
dec
push
push
into
into
mov
mov
add
add
mov
filds
inc
aam
int
nop
dec
scas
mov
inc
inc
mov
mov
addl
push
push
push
push
push
mov
mov
div
in
in
xchg
push
cmp
cmp
lea
aaa
iret
iret
iret
mov
fcmovnu
data16
out
push
push
push
push
scas
scas
scas
out
out
out
out
out
out
out
out
out
addb
shll
xchg
sub
jl
xchg
mov
cmp
adc
adc
adc
es
pop
pop
repnz
jecxz
ljmp
out
sbb
sbb
sbb
mov
in
in
in
in
in
jbe
xor
shl
or
cmp
cmp
cmp
mov
mov
aas
loope
xchg
xchg
and
cmp
cmp
xor
mov
faddp
xchg
xchg
xchg
xchg
cmp
mov
cwtl
cwtl
cwtl
outsl
outsl
ret
nop
nop
nop
in
add
stos
in
pop
pop
pop
pop
pop
pop
mov
jmp
and
repnz
out
in
sbb
xchg
cmp
cmp
cmp
jmp
lret
aam
xchg
xchg
pop
inc
or
movsl
jge
or
or
ret
ret
fbstp
xor
xor
ficoml
fmuls
int
xor
sbb
mov
xor
push
fcmovu
fcmovu
fcmovu
mov
out
stos
stos
stos
mov
fmul
into
into
cmc
cmc
cmc
cmc
enter
fs
sbb
test
xlat
push
lret
inc
inc
div
negb
xchg
xchg
aaa
aaa
push
nop
nop
lahf
lahf
mov
div
div
cmc
ljmp
mov
push
push
imul
mov
loopne
loopne
pusha
pusha
aam
fcmovu
fcmovu
mov
pop
pop
pop
dec
arpl
push
push
sub
sub
push
ret
ret
out
out
in
in
in
into
into
into
popa
pop
pop
repnz
out
xlat
xlat
or
rorl
jnp
into
xchg
push
push
push
push
push
push
push
fmull
or
adc
fsts
adc
push
push
xor
xor
xor
dec
dec
dec
dec
dec
movsl
sbbb
xchg
out
push
out
out
out
out
out
out
jl
data16
push
push
mov
icebp
test
sub
dec
or
scas
fistps
inc
mov
dec
dec
mov
arpl
in
in
in
in
subb
test
rcrb
test
sub
mov
xchg
xchg
pop
xor
xor
xor
stos
lds
repz
sbb
les
cmp
inc
js
js
js
call
out
lods
lods
aad
outsl
outsl
outsl
and
aas
mov
mov
mov
les
xor
jno
jno
jle
xchg
jbe
push
outsl
cmp
rcl
rorb
or
std
std
std
std
mov
cli
cli
cli
loop
loop
icebp
xchg
mov
pcmpgtw
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
dec
inc
inc
daa
loope
mov
dec
dec
push
push
and
mov
data16
repz
mov
cwtl
mov
xchg
jo
xor
xor
mov
rcl
sub
mov
sbb
push
insl
insl
pop
pop
test
out
out
out
out
inc
inc
inc
mov
mov
lock
jbe
jp
jle
sub
icebp
icebp
icebp
icebp
icebp
xlat
xor
xor
imul
push
push
mov
xchg
push
push
jmp
jmp
cs
push
or
inc
inc
jmp
stc
aaa
aaa
aaa
jle
sbb
faddp
fwait
fwait
fwait
xor
fsubl
mov
fldcw
das
pop
pop
pop
iret
cmpsb
mov
mov
jae
ljmp
jb
jb
or
mull
or
mov
mov
jb
jb
xor
and
and
fisttpll
add
xor
testb
adc
adc
insl
insl
aam
lods
lods
lods
lods
jbe
jbe
or
sbb
in
add
lahf
lahf
les
mov
int
sub
stos
stos
adc
mov
lods
lods
pop
rcll
aam
int3
int3
mov
and
lods
lods
push
lahf
lahf
adc
pop
ret
clc
clc
ljmp
cmp
cmp
cmp
cmp
cmp
push
rolb
add
orl
jne
jne
jne
jne
jne
sub
pushf
nop
push
sub
sub
xchg
jno
xchg
xchg
xchg
and
and
adc
lods
or
or
xor
jno
cs
movsb
mov
sbb
inc
jg
out
mov
test
xor
sahf
sahf
cmp
cmpsl
cmpsl
adc
adc
sub
push
lret
cmp
pusha
fsubr
out
out
out
out
out
out
scas
fcmovnu
pop
adc
dec
xchg
mov
addb
adcb
fcmovnu
fildl
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
mov
mov
adc
adc
loopne
int3
aas
aas
aas
aas
aas
aas
fcomp
das
adc
adc
push
add
add
data16
add
insb
insb
dec
dec
dec
cmc
cmc
in
in
ss
in
arpl
in
in
dec
outsb
out
jno
cmp
add
add
add
ds
dec
dec
dec
ret
push
sbb
dec
dec
dec
insl
inc
sbb
add
aas
aas
xchg
xchg
xchg
xchg
lret
xchg
adc
adc
nop
pop
pop
out
cmpps
and
jno
ds
movsl
movsl
movsl
dec
jns
fwait
fwait
fwait
mov
cmp
xchg
mov
jl
push
push
mov
rcl
shrl
das
cmc
cmc
cmc
cmc
xor
xor
jno
sbb
mov
fcomp
jno
adc
rorb
push
cmp
cmp
fisubs
or
call
leave
leave
in
lea
sub
mov
in
in
in
rolb
cmpsb
cmpsb
in
in
frstor
or
mov
mov
fsubrl
fsubr
out
out
out
out
out
out
movsl
movsl
dec
lds
scas
scas
scas
lret
bound
nop
loope
jno
or
xchg
adc
dec
dec
ret
ret
rcl
shll
mov
pop
rsqrtps
push
or
or
ds
push
push
gs
mov
mov
js
in
in
test
icebp
std
std
pop
xor
or
xchg
pop
pop
pop
jbe
inc
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
mov
jno
daa
cmp
jns
in
in
ljmp
fs
pop
pop
pop
pop
pop
pop
xor
jns
mov
gs
lret
mov
int3
int3
int3
int3
int3
test
test
test
movsl
movsl
movsl
movsl
movsl
cmc
imul
adc
ret
ret
hlt
hlt
pop
cmp
cmp
jo
jo
jo
sub
sub
push
inc
inc
vfmadd132ps
pop
pop
outsb
outsb
outsb
mov
clc
jo
push
push
imul
addb
mov
mov
pop
jl
inc
addb
inc
inc
int3
int3
stos
stos
dec
jmp
jmp
iret
iret
iret
xorl
mov
mov
fcomp
mov
push
push
sub
sub
mov
in
push
jmp
je
sahf
dec
jecxz
jecxz
jecxz
fwait
fwait
fwait
dec
xchg
js
div
popf
pop
aaa
aaa
push
xchg
xchg
test
sub
dec
dec
dec
xchg
xchg
xchg
xchg
push
std
std
std
std
sub
mov
out
mov
stos
daa
daa
jno
cli
cmp
call
gs
call
test
je
je
je
je
in
fmulp
scas
leave
leave
leave
mov
push
adc
pop
pop
pop
pop
pop
pop
pop
pop
and
out
pop
pushf
in
in
daa
std
std
std
popa
popa
aaa
aaa
aaa
aaa
aaa
or
repz
loop
jecxz
jecxz
lret
lret
bound
push
push
das
das
rcl
shll
ret
ret
ret
ret
int
sbb
push
in
into
into
into
jno
mov
push
mov
ja
xchg
jecxz
test
rcl
ret
in
in
in
in
repnz
ss
cmp
or
dec
dec
xlat
xlat
xlat
xlat
xlat
mov
mov
jg
data16
je
pop
pop
xchg
push
push
push
pop
out
out
out
cmp
cmp
inc
into
into
into
sub
daa
daa
xchg
inc
test
jne
push
push
aad
out
out
sbb
iret
iret
lret
addr16
leave
leave
jo
xchg
cmovge
push
iret
iret
iret
iret
andl
mov
mov
mov
and
repnz
jecxz
outsl
dec
dec
dec
std
sti
sti
sti
pop
setge
lret
jp
rcl
rcll
in
in
repz
lods
jae
jae
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
cmpsl
pop
pop
mov
out
pusha
pusha
sub
sub
mov
mov
test
xchg
mov
inc
inc
inc
insl
test
cmp
sbb
pop
cmpsl
sub
or
dec
iret
iret
and
imul
out
out
sbb
pop
sbb
iret
or
pop
inc
or
pop
pop
add
jle
or
or
popf
sub
loop
push
push
push
cmp
or
fcmovnu
push
cwtl
cwtl
out
popa
leave
leave
stos
cmp
cmp
cmp
jbe
jbe
jbe
jecxz
mov
mov
mov
out
out
movsl
movsl
movsl
movsl
xor
xor
fcompl
xchg
mov
mov
dec
dec
pusha
pusha
jecxz
es
xchg
mov
add
or
insb
insb
insb
insb
cmp
add
in
in
in
xor
push
push
or
cmc
fwait
fwait
cltd
cltd
cltd
cltd
cltd
cltd
leave
leave
leave
mov
push
push
push
pop
stc
sbb
out
out
xchg
xchg
popf
out
out
out
out
mov
imul
in
mov
iret
iret
iret
iret
mov
into
cmp
sti
outsl
outsl
out
negl
sbb
sbb
or
imul
shrb
xor
stos
pop
pop
pop
pop
pop
cwtl
in
insb
sahf
sahf
sahf
sahf
pop
pop
pop
pop
test
sbb
mov
sub
pop
pop
jge
jge
rorb
outsb
xor
xor
out
cld
cld
scas
cmp
stos
stos
stos
stos
stos
stos
stos
push
in
in
in
loopne
fcoml
nop
nop
cltd
mov
mov
mov
loopne
repz
cs
push
push
fisttps
or
cli
jae
data16
sub
sub
sbb
jp
imulb
cmp
stos
stos
stc
stc
xor
insb
insb
stos
xor
pop
pop
icebp
sub
adc
jp
jp
cli
jno
jno
sbb
sti
sti
sti
mov
pop
sbb
or
ficomps
aam
aam
ror
iret
iret
iret
mov
adc
loope
loope
loope
sub
subb
std
std
stos
stos
or
or
stc
push
push
push
push
adc
stos
stos
stos
dec
push
push
push
std
vpsllw
outsb
xlat
xchg
xchg
xchg
xchg
xchg
xchg
jae
jae
jae
jecxz
aas
jne
push
push
and
lret
cld
cld
cld
cmp
cmp
inc
inc
test
insl
call
cmp
into
and
and
std
std
std
std
mov
scas
scas
scas
scas
jnp
fcomip
mov
lahf
lahf
lahf
add
pop
pop
pop
pop
push
push
push
stos
mov
call
testw
xor
inc
inc
inc
inc
inc
inc
insb
mov
or
push
push
push
dec
dec
dec
rorb
scas
scas
jg
jg
dec
sbb
or
sahf
mov
inc
inc
inc
jno
pop
fimull
ds
lods
lods
sbb
sbb
sbb
dec
enter
xor
outsl
push
mov
rcl
sarb
lock
push
mov
outsb
outsb
outsb
rcl
shr
addr16
sbb
cmp
incl
add
test
add
gs
dec
mov
cmp
push
push
call
mov
fmuls
mov
jl
and
and
loopne
cmp
rcl
rcl
cmpsb
cmpsb
pop
pop
addb
lock
addl
stos
stos
inc
rcl
mov
mov
mov
mov
cmc
push
js
dec
dec
cmpb
cmp
dec
dec
mov
in
insl
addl
or
xchg
ret
mov
dec
pop
pop
pop
pop
or
jmp
insl
insl
insl
mov
jne
jne
fstp
fstp
loopne
add
push
ret
ret
ret
repnz
sbb
pop
pop
mov
icebp
add
fcomp
fcomp
fcoml
adc
mov
fsts
push
imul
mov
loopne
es
and
and
and
mov
lods
addl
cmp
cmp
and
icebp
test
inc
imul
mov
out
rcll
xchg
xchg
dec
and
iret
iret
mov
mov
add
add
add
mov
div
ficompl
pop
pop
pop
pop
jae
ds
push
push
cld
gs
push
sub
mov
mov
cmpsb
cmpsb
cmpsb
cmpsb
addr16
pop
lods
scas
scas
scas
scas
addb
sub
addl
rcl
out
out
in
mov
repz
dec
dec
dec
pop
std
inc
inc
xchg
xchg
xchg
nop
enter
hlt
hlt
hlt
hlt
hlt
mov
pusha
pusha
pusha
cmpsl
cmpsl
or
aad
pop
pop
pop
pop
pop
es
adc
adc
adc
adc
adc
adc
push
sbb
in
lret
lret
je
pushf
pushf
mov
out
lods
inc
inc
sbb
scas
scas
scas
fistpl
cwtl
cwtl
dec
dec
dec
dec
imul
and
and
movsb
mov
lret
lret
or
loop
sbb
divl
add
push
int3
int3
int3
int3
int3
int3
pop
pop
pop
xor
xor
outsb
movsl
movsl
cmpsb
jle
pop
pop
xchg
mov
xchg
cmp
jg
xor
xor
jb
jb
add
or
jp
into
into
into
dec
dec
dec
dec
push
push
ret
pop
pop
std
pop
pop
enter
add
cmp
int
rcrb
jg
jg
jl
pop
pop
pop
pop
arpl
ds
out
out
out
out
out
out
out
out
out
xor
sub
dec
pop
pop
pop
xchg
imul
testl
out
xchg
iret
iret
sbb
mov
or
cltd
cltd
cltd
cltd
and
mov
pop
pop
pop
xor
xor
cmp
cmp
cmp
dec
dec
pop
pop
pop
pop
fcmovu
fcmovu
fcmovu
icebp
icebp
icebp
icebp
mov
lods
icebp
icebp
icebp
inc
loopne
addl
jae
mov
call
addb
fisubs
sub
repz
jns
mov
rcl
rorb
mov
and
dec
dec
add
jnp
dec
dec
dec
dec
dec
dec
dec
dec
xor
aam
adcl
arpl
clc
clc
stos
stos
lret
out
in
ss
dec
dec
push
xchg
dec
dec
pop
ds
fidivrs
cmp
cmp
imul
test
and
repz
rcl
rcl
push
push
mov
outsb
test
rol
inc
inc
clc
clc
cs
adc
dec
dec
xchg
xchg
leave
leave
leave
leave
mov
mov
imul
and
push
push
push
push
test
sbbl
and
adc
jns
roll
add
xchg
jno
jno
aas
aas
aas
aas
aas
aas
push
xchg
faddl
in
jo
jo
jo
jo
daa
daa
daa
daa
cmp
cmp
loopne
mov
cwtl
cwtl
cwtl
sub
push
push
push
push
jb
jne
fcomp
fcomp
sub
cs
aas
aas
aas
aas
and
or
sub
fcmovnbe
sar
mov
dec
dec
push
push
push
push
push
push
push
push
xchg
notb
test
push
in
in
in
jns
jns
jns
shll
lret
lret
lret
xchg
addb
pop
add
test
push
ja
add
adc
subb
add
jno
test
inc
add
sbb
cs
sarl
pop
rolb
push
add
add
jae
mov
bound
jmp
outsl
push
add
mov
add
ljmp
cmp
add
sbb
mov
xchg
push
add
ret
and
add
sub
add
in
in
add
add
loop
cmp
cli
cmp
jnp
das
sbb
sarb
clc
ljmp
mov
xor
rolb
jnp
outsb
add
add
fs
out
xchg
ret
loop
add
add
jns
andl
inc
add
sbb
jnp
add
xchg
sub
jg
mov
mov
push
xor
divb
mov
cmc
cmpb
mov
pop
add
or
push
add
add
push
add
imul
add
and
popf
mov
in
add
jle
cld
cmp
popf
aas
mov
jmp
add
add
add
repz
icebp
cmc
sbb
adcb
scas
inc
add
out
add
idiv
packuswb
add
xchg
call
sbb
push
add
pop
adc
aaa
inc
add
push
add
sbb
sbb
sub
fs
fsts
mov
push
add
pop
or
dec
add
add
add
push
setns
push
add
mov
aad
cmp
and
pop
rcrb
stos
movl
sbb
repnz
push
add
mov
pusha
add
add
add
push
xor
dec
pop
imul
ljmp
add
loopne
popa
clc
sbb
add
aad
fcmovu
mov
add
add
pop
sbbl
jle
jp
sub
xchg
push
dec
and
add
jno
inc
test
add
scas
aam
dec
add
loop
hlt
pop
add
add
xor
add
enter
and
jg
ja
addl
xchg
ret
pop
and
push
mov
rcl
scas
mov
pop
add
jle
cwtl
sub
pop
add
test
add
mov
sti
cmc
shlb
out
add
pop
outsb
add
inc
add
inc
mov
add
jnp
das
repz
adc
push
push
add
cld
cmp
lahf
paddsw
stc
mov
sbb
add
jo
add
pop
dec
add
in
inc
adc
pop
adc
stc
mov
ja
push
repz
jae
loop
jge
mov
mov
stc
test
jmp
adc
ret
pushf
mov
out
push
jle
call
add
add
into
pop
scas
mov
push
push
add
add
sub
xchg
jnp
pop
add
in
lock
mov
je
xor
add
scas
stc
and
add
push
or
and
add
cmp
mov
sbb
xchg
jb
fldt
or
sarl
or
jl
dec
add
pop
add
pop
xlat
or
push
pop
add
add
fs
ds
aas
lret
xchg
push
add
ljmp
sbb
loopne
bound
loopne
add
pop
or
xchg
adc
mov
sti
add
xor
mov
test
adc
lret
int
sti
jl
imul
jle
std
inc
add
xchg
add
cmp
mov
add
and
jb
or
dec
push
add
adc
add
pop
sub
dec
mov
add
xor
mov
adc
mov
mov
add
add
bound
stos
ret
int
mov
fnstenv
cli
jo
sub
add
insl
out
pop
or
jl
icebp
mov
add
add
add
imul
push
add
fdivrs
and
call
add
cwtl
sbb
fdivs
add
add
add
rcrl
data16
or
std
fsubl
add
push
roll
enter
and
insb
add
lods
xlat
in
jb
enter
push
add
movsl
cmp
cmc
jle
dec
add
pop
add
adc
mov
shll
add
sub
pop
addr16
inc
add
push
decb
clc
adc
push
add
add
sub
xor
pop
add
mov
jb
mov
enter
outsl
test
jnp
cmp
faddl
stos
and
enter
xor
cld
mov
add
stos
mov
popf
jae
fistl
add
mov
add
mov
jl
imul
add
fisubs
scas
lret
jne
sub
mov
xchg
jl
stc
xor
push
cmp
pop
lahf
cmp
add
jnp
xlat
pop
sbb
fdivp
loopne
outsb
add
pop
push
and
cmp
outsb
add
int
push
add
sarb
jae
and
repz
rorb
inc
mov
jp
out
cmp
xchg
adc
mov
mov
in
psubsw
jle
pop
add
sub
xchg
xchg
lahf
jb
add
inc
add
pop
add
jg
gs
add
add
mov
faddp
sub
repnz
cmp
loope
add
cltd
dec
je
jg
fimull
jle
lahf
inc
add
jge
push
cmp
loope
movsb
pusha
add
jge
add
push
test
insb
add
cmc
cmc
daa
insl
gs
add
add
sbb
xlat
xchg
movsb
lea
add
shrb
out
xchg
add
imul
ret
add
cltd
jnp
repz
pop
adc
add
icebp
cmpsl
lds
mov
test
add
add
sbb
pminub
inc
add
mov
test
cmpsb
sub
or
aad
inc
dec
add
adc
pusha
add
pop
gs
ja
sub
shl
into
cmp
fidivrl
add
add
add
lcall
mov
xchg
std
mov
push
inc
add
add
add
adc
sub
clc
leave
dec
add
cmpsl
inc
push
jmp
and
adc
add
pushf
adc
add
bound
sub
xchg
loopne
add
mov
add
mov
pop
add
push
xor
mov
add
insl
stos
mov
lret
push
mov
jmp
adc
ljmp
fnstsw
shl
adc
sub
sarb
push
add
add
inc
add
in
xor
push
add
pop
add
clc
mov
in
mov
lods
loope
inc
add
xchg
outsb
add
adc
add
mov
loope
jecxz
and
sti
adc
mov
add
faddl
push
aam
inc
add
push
cmp
xchg
pop
mov
enter
add
xchg
sbb
add
push
inc
add
aad
sub
add
cltd
testb
test
sti
orl
adc
cmp
push
add
std
out
out
inc
add
mov
push
add
addr16
jmp
adc
lods
mov
add
cmp
int3
adc
pop
insb
add
add
out
add
ret
aam
adc
add
dec
add
add
add
dec
sti
stos
insl
xlat
push
add
insb
add
adc
add
add
add
add
add
lea
add
repnz
hlt
ljmp
sbb
loop
lods
loop
and
dec
std
pop
in
add
aad
add
fists
pop
cmp
push
insl
inc
add
jmp
add
adcb
mov
je
test
les
lahf
ret
shlb
add
call
cmpb
add
pop
add
push
add
enter
jmp
add
mov
dec
adc
sub
shlb
sahf
in
xchg
aam
push
repnz
xor
mov
in
movsb
iret
mov
jb
xlat
jne
xchg
mov
mov
adc
sub
insl
push
popf
mov
test
add
bound
inc
cmp
les
mov
movsl
leave
jbe
inc
add
out
add
add
rolb
add
pop
cmp
mov
add
imul
scas
pushf
aad
add
add
insl
cmpb
jne
dec
jl
fstl
add
sahf
jmp
lret
and
jno
bnd
pop
push
add
mov
xor
rolb
notb
dec
fwait
sub
add
fldl
sbb
and
inc
add
xchg
cwtl
cmp
pusha
add
test
add
add
mov
add
fucom
jmp
push
jo
loopne
add
adc
mov
push
xchg
iret
pop
es
sub
dec
inc
rcll
add
add
pop
inc
add
add
cltd
sub
stos
jne
adc
add
inc
add
orb
add
mov
out
neg
mov
push
loop
cmpsb
mov
xor
mov
movsl
xchg
add
enter
imul
push
xchg
push
pop
adc
xor
bound
test
test
add
xchg
add
jle
push
add
mov
push
sub
lret
rorl
add
add
inc
cli
arpl
imul
test
adc
sbb
pop
sub
add
das
add
add
jo
mov
jle
mov
jo
fcmovb
dec
out
push
or
outsl
fs
adc
test
jo
adc
xor
sub
ret
cwtl
mov
bound
lods
mov
xchg
add
and
movsl
xor
rolb
xor
xor
insl
jo
sub
add
enter
jp
pop
push
add
push
add
mov
mov
icebp
popa
xchg
add
aaa
or
iret
adc
ss
xor
shrb
icebp
dec
add
xchg
daa
notl
sub
mov
add
faddl
clc
or
sub
add
jle
cmovl
sbb
mov
cmp
or
cmpsl
icebp
int3
bound
mov
addb
add
loope
scas
fsubs
xchg
lcall
add
and
lahf
test
add
xor
aad
mov
iret
inc
add
icebp
pop
add
movsb
out
jge
add
xchg
cmp
int
add
sbb
mov
add
add
shr
popa
ficompl
shld
dec
add
fbstp
mov
mov
iret
call
add
sahf
lods
lds
inc
add
mov
add
add
add
push
add
cltd
jne
adc
jg
rorl
dec
pusha
add
mov
cmp
and
in
pop
add
shlb
or
test
jmp
cltd
xchg
pop
add
cmp
loope
xor
jae
outsb
add
in
add
mov
inc
hlt
pop
mov
add
jge
cmp
add
sbb
mov
add
add
add
mov
add
add
idivb
clc
fwait
pop
cld
lea
subb
xorb
ja
add
add
add
add
sbb
in
add
outsb
add
cmp
cmpl
jmp
out
lods
inc
add
xchg
jg
mov
pop
out
add
push
add
add
add
and
xlat
insl
lahf
xchg
add
jl
sahf
ret
fwait
mov
sub
fsubrs
or
jno
add
sbb
movsl
dec
add
add
test
push
sub
xor
loope
aas
add
flds
clc
adc
xor
sbb
xor
add
insl
cltd
dec
int3
test
jecxz
add
adc
inc
add
jno
lret
cmpsl
jp
incl
lods
repnz
xchg
mov
sbb
fimuls
add
in
ret
in
fsts
push
add
sbb
hlt
or
add
into
int
xor
in
insb
add
scas
push
pusha
add
add
push
leave
ret
push
sbb
cmp
scas
pushf
sbb
add
das
dec
push
flds
or
add
add
lock
arpl
sarl
lds
sub
test
add
add
push
cmp
mov
arpl
neg
fnstenv
jne
add
and
in
push
add
stos
add
add
pop
add
or
sti
cmpsl
ret
adc
add
in
cmp
add
add
sbb
enter
sbb
jbe
loop
lret
push
add
cmp
cmp
jle
xchg
fwait
jns
add
xchg
mov
add
add
add
xchg
jns
add
add
add
jg
notb
jo
sbb
mov
push
lahf
mov
mov
outsb
add
das
shrl
or
movsl
bound
imul
add
jmp
cmpsb
in
int
xlat
xchg
xchg
sub
sub
lds
repz
xchg
in
pop
movsl
or
int3
les
inc
add
and
inc
daa
data16
add
mov
stos
cmp
add
test
jmp
cld
xchg
sahf
pop
test
shll
and
aas
aad
aaa
test
add
aaa
pop
mov
add
repz
lret
add
push
add
add
add
add
stc
push
cmp
add
add
fdivrp
push
add
add
fists
aam
sahf
imull
lock
aam
or
add
sbb
dec
jns
sbb
testb
inc
add
mov
jbe
imul
xchg
das
lret
adc
push
add
push
clc
xchg
aam
add
push
adc
mov
mov
adcl
cltd
jo
xchg
std
jl
rcrb
jg
cmp
or
out
push
add
jecxz
icebp
jg
out
cmp
add
pop
add
add
cmp
cmp
movsl
push
add
jnp
add
jne
fisttps
jle
iret
lock
lock
ret
sub
movsb
scas
mov
push
mov
sub
movl
clc
push
lea
call
sub
add
add
and
mov
cmp
je
mov
push
push
push
cld
call
test
jne
dec
add
mov
add
push
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
push
call
push
cmp
lea
jne
movzbl
or
add
mov
add
not
cld
xor
test
jne
call
xor
mov
add
ret
xor
mov
mov
stc
mov
bnd
cmp
mov
mov
mov
inc
or
lea
lea
add
xchg
shr
xchg
lock
and
sub
cld
jne
push
mov
jne
sbb
lret
ror
dec
add
ja
insb
add
sub
xchg
mov
outsb
add
add
pop
pop
testb
cmpsb
dec
mov
lea
add
push
add
lcall
add
or
inc
add
pop
add
add
inc
mov
xlat
pushf
mov
add
lods
ja
xchg
rep
add
add
mov
mov
xchg
pop
int
add
push
add
dec
add
add
add
int
add
sub
lret
outsl
ret
mov
int
outsb
add
fistps
insl
cmp
jl
pop
dec
add
adc
dec
add
mov
mov
add
and
daa
fists
lods
outsb
add
jecxz
mov
push
add
out
cmc
dec
add
popf
mov
mov
add
xor
xor
je
jg
in
stos
xor
dec
sub
imul
add
cmp
add
push
push
add
sub
test
add
mov
add
mov
add
add
shrl
add
lods
jnp
les
outsb
add
mov
add
aaa
js
xor
mov
cli
mov
ret
jmp
add
add
xchg
cmp
idivb
xor
daa
push
add
aam
add
inc
add
sub
push
and
mov
pushf
in
lods
pop
mov
shrb
push
add
add
aam
mov
int3
addr16
add
outsl
sbb
push
add
add
add
test
sbbb
rcrb
add
ja
add
idivb
in
push
xchg
shrb
sbb
shr
mov
insl
add
xor
add
add
rolb
jmp
insb
add
add
adc
fisttps
addb
rcll
add
add
rcll
add
jg
test
repz
cmp
roll
int3
add
add
adc
mov
nop
icebp
rcrl
inc
add
mov
add
call
xor
lcall
jb
sahf
adc
outsl
ret
sahf
cmp
lret
pop
add
frstor
sbb
jge
add
ja
pop
add
or
aaa
mov
call
sub
repz
add
add
mov
inc
pop
cld
jle
ret
shl
adc
dec
dec
add
je
pop
and
mov
add
out
lcall
add
scas
jno
xchg
je
mov
add
cli
dec
add
adc
shrb
push
add
in
dec
add
mov
mov
mov
add
add
add
aas
fst
out
cmp
mov
push
add
lods
imul
add
add
je
pop
mov
add
cmovae
mov
add
les
add
ficoml
ja
push
add
imul
adc
jbe
data16
das
out
add
fwait
sbb
leave
sub
jbe
dec
ffree
and
mov
cmc
xor
inc
add
add
or
hlt
xor
sbb
add
mov
std
out
add
leave
sbb
sub
inc
add
dec
stc
add
add
add
add
lock
add
sub
push
jo
sub
xor
fisttpll
das
mov
xchg
repz
and
cmc
daa
xor
movsl
xchg
add
outsl
test
add
lea
pushf
aam
roll
xchg
pop
add
add
scas
xchg
push
add
add
aaa
gs
sub
aaa
jnp
add
add
ja
sub
sub
add
loopne
imul
add
mov
sub
add
inc
js
mov
or
mov
sbb
std
out
dec
dec
lahf
pushl
aam
push
add
test
sub
jns
lods
add
pop
pop
fimuls
jns
adc
push
add
push
add
cmp
cmp
sbb
mov
loope
add
cmc
mov
mov
mov
add
scas
xchg
inc
add
add
jnp
mov
adc
mov
add
xorb
sbbl
in
push
add
jno
add
aaa
rclb
in
add
xor
or
loop
add
clc
ffreep
push
mov
ss
loop
cmpsb
cmp
adc
add
sub
test
add
hlt
push
or
mov
std
mov
dec
mov
inc
sub
inc
add
popf
ljmp
bound
mov
add
mov
jl
notb
sbb
loopne
fmull
outsl
push
add
add
fnstsw
xchg
push
add
arpl
mov
les
add
pop
lret
fbstp
xorb
add
or
orb
add
lcall
add
jbe
and
rorl
outsb
add
imul
add
ss
mov
add
add
sbbl
add
add
sbb
add
mul
mov
mov
mov
ja
mov
add
mov
and
cltd
leave
xchg
fwait
sub
push
shll
ret
add
sbb
mov
mov
fisttpl
call
lods
hlt
sbb
add
and
add
sub
das
cmc
imull
and
icebp
arpl
add
xor
into
stos
call
popa
mov
add
xchg
or
xchg
loopne
push
add
jbe
or
add
jne
lods
xchg
sub
xchg
stos
mov
add
add
lock
loope
lcall
add
add
add
jb
add
clc
shll
add
leave
inc
add
add
repz
xchg
mov
add
mov
cli
cli
mov
andb
add
mov
dec
jb
pusha
add
or
push
lea
xor
mov
test
sbb
enter
jl
fwait
decl
dec
loop
shrb
adc
cmpsb
or
jns
test
iret
sub
and
in
mov
inc
add
imul
push
fldcw
add
add
std
xchg
dec
add
push
fs
lcall
push
or
pop
add
int3
adc
xchg
jg
mov
out
push
add
mov
mov
add
jmp
sbb
rcll
les
add
add
aas
push
add
and
in
js
add
mov
fdivl
add
loope
add
rcrl
add
xor
add
pop
add
mov
add
repnz
sbb
aas
cwtl
mov
xor
inc
add
or
xchg
lret
insb
add
add
add
xor
xor
cmpsb
ja
mov
movsl
pop
mov
mov
add
adc
sub
and
popa
xor
test
mov
inc
mov
add
dec
mov
mov
test
add
imul
jo
das
mov
or
das
aam
lahf
jmp
add
outsl
inc
add
cltd
movsl
push
add
push
movsb
or
ja
adc
dec
repz
add
inc
ljmp
adc
add
add
cmp
dec
add
push
ljmp
in
pop
in
cmp
inc
and
int3
pop
push
add
ss
push
add
shlb
sub
xor
add
add
add
loopne
cmc
sbb
and
push
sbb
fisubs
cmp
movsl
lds
cmp
pop
mov
pop
fcomi
mov
shrl
add
fdivp
imul
sub
out
mov
mov
jno
add
add
push
add
lods
cmpsb
push
add
inc
add
test
inc
pop
add
xchg
jge
add
pop
add
shll
test
add
insb
add
add
or
add
xchg
fucomp
movsl
add
add
stos
sub
loope
inc
add
xchg
cmp
sbbb
dec
jmp
cli
jle
cmpsl
flds
add
data16
gs
add
add
add
add
dec
add
sbb
dec
movsb
push
add
out
push
nop
jnp
pop
mov
mov
jne
gs
add
lock
ficoml
sbb
add
fwait
icebp
mov
mov
scas
filds
or
push
dec
add
and
rolb
popf
dec
add
add
push
sbb
mov
cmp
cld
in
add
ret
incb
mov
sbb
push
test
outsl
push
fdiv
pop
add
loope
adc
js
in
add
scas
out
xor
lea
jecxz
mov
mov
push
cmpb
add
in
mov
or
add
pushf
pop
and
jb
push
clc
sbb
add
adcl
insb
add
movsl
insb
add
scas
inc
mov
div
outsl
lock
add
sub
cmpsb
pop
add
or
inc
scas
inc
in
dec
add
add
pop
add
and
add
sbb
add
push
add
add
adc
mov
add
mov
pop
add
sbb
push
add
aaa
push
cmpl
dec
add
add
lahf
in
sub
cwtl
movsb
cmp
pop
add
mov
xor
and
movsl
and
out
ljmp
addr16
test
add
dec
add
mov
push
clc
push
add
add
add
inc
sub
lret
add
mov
xor
jne
xchg
mov
push
add
xchg
push
add
add
push
cs
sbb
xchg
mov
into
and
mov
xorb
pop
add
cli
mov
xorl
push
add
add
or
shl
scas
dec
pop
add
in
jnp
ficompl
add
push
add
mov
addr16
add
xlat
push
add
or
cmp
add
xor
mov
pop
add
add
add
cmp
loop
add
add
test
or
js
jae
jmp
inc
add
fbld
popa
iret
in
shlb
jnp
mov
das
daa
inc
add
out
movsl
cmpsb
mov
push
add
adc
add
test
sub
mov
push
cld
jnp
fildl
inc
add
add
stos
into
aam
enter
push
add
pop
in
sub
cli
jo
call
cmp
mov
fwait
xchg
loop
lock
mov
add
add
andl
add
mov
cmp
add
add
loopne
fsubrp
inc
add
cli
notl
mov
cmc
pushf
sahf
mov
movsl
or
int
jecxz
adc
popf
xchg
icebp
sti
mov
pusha
add
add
add
add
push
add
jecxz
cmp
fnsave
add
add
sbb
add
loopne
add
ljmp
add
jmp
xchg
push
add
les
sbb
js
sbb
jmp
jns
aaa
cmpsb
pusha
add
popa
rcrl
add
pushl
add
subb
add
hlt
test
add
mov
jl
test
add
adc
aas
and
mov
lahf
data16
mov
outsb
add
add
add
fstpl
cmp
add
outsl
sub
push
add
add
mov
in
out
push
add
inc
and
in
popf
add
das
shlb
icebp
cmp
jg
fdivrl
mul
push
sahf
xchg
inc
add
aam
sbb
add
bound
xchg
jecxz
xchg
hlt
add
xchg
jecxz
add
add
rcrl
fsubrs
loop
inc
add
push
nop
dec
add
adc
xchg
cmp
adc
cmp
adc
add
inc
push
in
add
jne
int3
push
add
push
add
cmp
xor
xchg
or
add
mov
add
mov
aad
xchg
cmpsb
xor
or
push
add
fmull
xlat
lea
add
add
stc
pop
add
jecxz
push
add
jl
mov
push
mov
pop
shl
rcrl
addr16
mov
loop
fdivrs
push
jne
add
pop
in
dec
add
cmp
aas
and
insb
add
jo
xchg
pop
lea
pop
out
pop
adc
inc
add
movsb
out
dec
fucomi
sbb
add
repnz
pop
pop
add
fcomi
cld
out
mov
in
adc
adc
add
daa
pop
push
add
lret
test
rolb
shlb
loopne
add
out
ljmp
rorb
add
sti
arpl
decb
mov
jne
mov
add
rcrl
add
scas
inc
mov
daa
adc
out
ret
mov
in
add
push
add
jo
jb
mov
cmp
and
adc
add
push
add
fisubrs
add
fucom
fsubl
adc
sbb
inc
add
imul
iret
lahf
inc
insl
adc
mov
inc
add
add
add
add
into
xor
mov
sti
mov
je
sbb
jne
add
add
mov
add
add
jmp
adc
mov
nop
outsl
cmpl
lea
shlb
add
xor
fnstcw
jo
frstor
and
outsb
add
rcrl
add
add
push
add
pop
add
add
sub
outsl
ret
aam
mov
push
clc
repnz
nop
nop
jae
insl
stos
insl
and
mov
mov
push
clc
repnz
nop
nop
jae
insl
test
add
cli
add
mov
clc
repnz
nop
nop
jae
test
and
pop
add
movsb
clc
repnz
nop
nop
jae
incb
mov
movsl
sbb
add
pop
clc
repnz
nop
nop
jae
pop
scas
cmp
pop
add
mov
dec
push
clc
repnz
nop
nop
jae
add
add
add
add
mov
push
mov
xchg
ret
add
add
add
jmp
pop
inc
add
pop
rolw
add
add
loopne
pop
fsts
in
mov
add
add
add
add
ret
and
pop
adc
fsubr
decl
mov
adc
repnz
nop
nop
jae
test
add
dec
pop
add
pop
push
push
mov
xchg
ret
mov
js
add
mov
push
shr
nop
push
mov
leave
nop
jmp
stos
xchg
add
test
inc
and
nop
push
mov
leave
nop
jmp
add
scas
fiadds
pop
pop
roll
pop
push
nop
push
mov
leave
nop
jmp
pop
add
stos
pop
xchg
add
mov
out
push
push
mov
xchg
ret
gs
add
dec
add
test
add
test
and
xor
nop
push
mov
leave
nop
jmp
add
cli
movsl
scas
add
pop
clc
repnz
nop
nop
jae
add
sub
stos
test
add
dec
push
inc
add
movsb
mov
rolb
add
pop
fdivrl
jge
dec
imul
nop
jae
add
js
je
pop
rorl
mov
clc
repnz
nop
nop
jae
test
add
pop
add
leave
test
adcl
add
cli
fs
mov
jb
iret
cmpw
clc
repnz
nop
nop
jae
leave
add
add
add
jle
adc
call
inc
add
add
xchg
pop
dec
test
add
clc
dec
fwait
clc
repnz
nop
nop
jae
add
data16
add
data16
add
call
clc
repnz
nop
nop
jae
aad
filds
add
sub
and
push
mov
leave
nop
jmp
movsb
roll
add
pop
cmp
fsts
in
xchg
add
add
hlt
cmpsb
push
scas
cld
add
add
add
xor
add
nop
push
mov
leave
nop
jmp
add
pop
pop
pop
add
add
add
mov
clc
repnz
nop
nop
jae
xor
je
cmp
xchg
jmp
leave
nop
jmp
adc
cli
add
add
gs
add
test
repnz
nop
nop
jae
adc
add
add
add
mov
xchg
ret
dec
add
js
cli
pop
test
fiadds
daa
push
clc
repnz
nop
nop
jae
add
add
cwtl
out
inc
gs
clc
repnz
nop
nop
jae
test
add
out
cli
stc
add
push
mov
xchg
ret
movsb
add
add
add
add
insl
inc
shl
nop
push
mov
leave
nop
jmp
add
insl
cli
sub
mov
mov
clc
repnz
nop
nop
jae
rorl
push
movsb
js
add
push
mov
xchg
ret
shl
add
add
je
pop
xor
lds
inc
add
pop
or
add
pop
insl
add
add
xor
add
repnz
nop
nop
jae
insl
add
movsl
push
adc
inc
add
add
add
add
lods
iret
mov
clc
repnz
nop
nop
jae
sti
push
mov
add
add
imul
cld
nop
nop
jae
test
fistpll
add
add
sbb
add
clc
repnz
nop
nop
jae
stos
pop
add
incb
scas
mov
ds
js
adc
cld
nop
nop
jae
movsl
add
cmp
add
leave
inc
add
add
mov
clc
repnz
nop
nop
jae
pop
cli
gs
add
add
mov
xchg
ret
add
add
test
add
add
and
in
leave
nop
jmp
add
test
filds
mov
fistpl
push
mov
xchg
ret
data16
add
pop
test
std
lea
nop
push
mov
leave
nop
jmp
pop
add
add
fs
add
pop
push
clc
repnz
nop
nop
jae
add
add
mov
add
clc
repnz
nop
nop
jae
fs
add
stc
push
nop
push
mov
leave
nop
jmp
data16
add
leave
out
pop
clc
repnz
nop
nop
jae
add
add
mov
inc
add
xor
add
clc
repnz
nop
nop
jae
test
test
daa
push
clc
repnz
nop
nop
jae
js
add
xor
xor
mov
mov
clc
repnz
nop
nop
jae
adc
add
int3
and
add
inc
negb
inc
add
bswap
clc
repnz
nop
nop
jae
add
or
add
add
cld
inc
add
or
dec
add
mov
nop
push
mov
leave
nop
jmp
pop
fbld
add
pop
and
jb
clc
repnz
nop
nop
jae
add
or
scas
js
push
clc
repnz
nop
nop
jae
add
or
push
add
adc
sarb
push
push
clc
repnz
nop
nop
jae
cli
pop
add
mov
sbbl
add
clc
repnz
nop
nop
jae
xchg
add
test
incb
push
sub
in
leave
nop
jmp
test
add
stos
add
leave
filds
add
fadds
mov
leave
nop
jmp
add
pop
filds
add
mov
nop
cmp
daa
add
push
mov
xchg
ret
add
jns
or
dec
add
add
push
mov
xchg
ret
dec
and
scas
shl
and
scas
add
mov
mov
xchg
ret
add
add
pop
cmpsl
add
clc
repnz
nop
nop
jae
add
pop
push
aad
lock
aad
subl
clc
repnz
nop
nop
jae
lock
add
lea
push
mov
xchg
ret
test
sti
add
add
cmc
pusha
clc
repnz
nop
nop
jae
stos
sti
add
test
movsl
mov
add
add
aas
add
imul
add
add
pop
xchg
repnz
nop
nop
jae
add
adc
add
add
leave
pop
int3
dec
inc
clc
repnz
nop
nop
jae
add
add
jns
add
test
loopne
fmuls
mov
xchg
ret
add
add
gs
xor
clc
mov
push
mov
leave
nop
jmp
xchg
adc
pop
add
add
nop
push
mov
leave
nop
jmp
add
test
add
add
js
add
mov
clc
repnz
nop
nop
jae
add
fs
add
sub
les
push
mov
xchg
ret
decb
add
add
add
jmp
xbegin
jae
add
lock
movsl
incb
int3
enter
push
mov
xchg
ret
add
filds
movsl
add
insl
cmpsl
push
push
mov
xchg
ret
inc
mov
cmp
je
pop
push
mov
xchg
ret
mov
data16
leave
sub
cwtl
sub
add
repnz
nop
nop
jae
mov
mov
int3
leave
sub
ret
clc
repnz
nop
nop
jae
add
movsb
push
cli
add
sbb
pop
add
rep
clc
repnz
nop
nop
jae
dec
cmp
add
and
lret
add
clc
repnz
nop
nop
jae
movsl
add
add
fiadds
add
inc
adc
repnz
nop
nop
jae
mov
sub
pop
pop
add
rep
clc
repnz
nop
nop
jae
mov
xor
popl
cmpb
add
pop
jns
push
add
xchg
add
add
pop
js
fld1
clc
repnz
nop
nop
jae
add
pop
add
sbb
jno
nop
push
mov
leave
nop
jmp
xchg
je
add
add
scas
fisttpl
cld
nop
nop
jae
leave
add
stos
mov
push
add
jl
hlt
ljmp
nop
nop
jae
gs
xorl
xorl
inc
clc
repnz
nop
nop
jae
pop
add
cmp
add
inc
add
add
add
add
add
data16
gs
js
dec
add
leave
add
add
add
les
clc
repnz
nop
nop
jae
add
add
pop
add
add
sbb
clc
repnz
nop
nop
jae
xor
add
dec
loopne
rcr
push
add
add
clc
repnz
nop
nop
jae
add
sti
mov
add
sti
add
xchg
xchg
ret
add
add
add
mov
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
push
mov
xchg
ret
add
add
inc
cmp
loop
mov
xchg
ret
add
dec
add
add
push
clc
repnz
nop
nop
jae
add
add
mov
add
rcrl
test
push
inc
add
add
roll
rolb
stos
add
push
push
mov
xchg
ret
add
sbb
push
movsb
add
cmp
jnp
push
mov
xchg
ret
add
mov
pop
add
mov
mov
nop
push
mov
leave
nop
jmp
add
push
js
add
inc
mov
nop
push
mov
leave
nop
jmp
out
sbb
mov
cmp
xchg
xchg
inc
pop
clc
repnz
nop
nop
jae
add
add
pop
add
jne
nop
push
mov
leave
nop
jmp
xor
sbb
mov
test
inc
add
aad
pop
sub
add
add
insl
inc
add
je
mov
adc
scas
mov
clc
repnz
nop
nop
jae
jns
cli
je
incb
or
dec
cmp
xchg
test
nop
push
mov
leave
nop
jmp
add
add
loop
push
push
mov
xchg
ret
movsl
add
movsl
loopne
jns
pop
push
pop
add
push
clc
repnz
nop
nop
jae
add
add
add
rorb
fildll
jae
out
movsl
aad
add
and
mov
jmp
add
clc
repnz
nop
nop
jae
add
add
add
lret
notl
push
mov
xchg
ret
js
add
add
cmp
mov
nop
push
mov
leave
nop
jmp
pop
movsb
cli
fiadds
add
aad
and
nop
nop
jae
add
add
aad
add
addl
jno
pop
clc
repnz
nop
nop
jae
add
test
aad
mov
add
cmp
cmp
cld
nop
nop
jae
add
add
pusha
add
mov
clc
repnz
nop
nop
jae
mov
movsl
roll
cmp
nop
push
mov
leave
nop
jmp
add
js
add
aaa
jne
clc
repnz
nop
nop
jae
pop
add
gs
cmp
ja
nop
push
mov
leave
nop
jmp
add
add
add
add
add
add
push
add
push
mov
xchg
ret
je
add
gs
aam
popa
pushl
nop
push
mov
leave
nop
jmp
stos
out
fs
add
add
add
add
repnz
nop
nop
jae
sbb
pop
add
shlb
push
mov
leave
nop
jmp
add
int3
add
rcrl
andl
add
nop
jmp
pop
pop
roll
add
sub
aas
push
clc
repnz
nop
nop
jae
aad
test
dec
sbb
mov
fs
add
hlt
pop
jmp
add
cmp
xor
add
add
popl
lret
ret
nop
push
mov
leave
nop
jmp
xchg
test
add
add
dec
pop
pop
add
nop
nop
jae
mov
scas
pop
pop
add
filds
xchg
shr
clc
repnz
nop
nop
jae
add
js
add
push
pop
inc
add
add
add
add
sti
fs
pop
insl
add
jno
icebp
nop
push
mov
leave
nop
jmp
cli
sub
pop
je
sbb
repnz
nop
nop
jae
loopne
lock
lock
xor
add
push
mov
xchg
ret
andl
dec
pop
pop
add
test
add
cld
nop
nop
jae
add
fiadds
pop
adc
sbb
nop
push
mov
leave
nop
jmp
xchg
add
je
push
gs
test
repnz
nop
nop
jae
add
filds
inc
add
nop
push
mov
leave
nop
jmp
add
leave
mov
jns
add
push
nop
push
mov
leave
nop
jmp
add
test
loopne
js
pop
leave
int3
push
sub
push
add
popl
int
inc
add
sbb
sbb
or
popl
test
xor
add
repnz
nop
nop
jae
add
mov
add
add
clc
repnz
nop
nop
jae
add
xchg
add
push
add
je
nop
push
mov
leave
nop
jmp
add
pop
leave
data16
mov
leave
nop
jmp
incb
add
fs
xchg
sub
mov
leave
nop
jmp
addl
out
add
movsl
add
jg
jmp
jl
add
add
mov
je
jns
out
test
sbb
add
repnz
nop
nop
jae
add
stos
mov
loopne
push
clc
repnz
nop
nop
jae
add
add
add
scas
push
add
dec
add
clc
repnz
nop
nop
jae
and
add
or
add
add
add
add
fistpl
nop
push
mov
leave
nop
jmp
jns
fs
push
add
cmp
lret
call
nop
push
mov
leave
nop
jmp
adc
add
add
add
pop
cmp
loopne
add
clc
repnz
nop
nop
jae
add
add
mov
repnz
nop
nop
jae
sbb
add
add
incb
xchg
jne
clc
repnz
nop
nop
jae
add
test
movsl
repnz
jmp
add
add
int3
add
adc
add
pop
push
clc
repnz
nop
nop
jae
or
add
mov
dec
push
mov
in
xchg
cltd
add
adc
add
add
inc
test
add
jmp
lret
clc
repnz
nop
nop
jae
xor
movsb
add
add
mov
cmp
ret
add
je
add
data16
add
inc
add
mov
nop
push
mov
leave
nop
jmp
add
add
xor
add
repnz
nop
nop
jae
add
add
add
add
nop
nop
jae
pop
adc
inc
add
add
jle
add
nop
jmp
add
lock
stos
adc
scas
add
push
clc
repnz
nop
nop
jae
pop
xchg
pop
fisttps
add
add
push
mov
xchg
ret
mov
jns
sbb
shrl
nop
nop
jae
inc
xor
add
push
add
add
cld
nop
nop
jae
dec
pop
add
movsl
test
xor
add
add
nop
nop
jae
add
adc
add
add
add
push
mov
xchg
ret
cli
add
gs
addl
nop
nop
jae
stos
add
add
cld
xor
nop
nop
jae
or
sti
add
sbb
inc
insw
lret
xorl
nop
push
mov
leave
nop
jmp
insl
mov
mov
test
or
add
repnz
nop
nop
jae
sbb
add
lds
test
xor
add
repnz
nop
nop
jae
dec
add
pop
add
clc
inc
add
lcall
lea
add
cmp
add
popl
add
add
add
add
cmp
add
jns
add
jl
dec
xor
nop
push
mov
leave
nop
jmp
cli
filds
add
add
pop
xchg
fbstp
call
push
mov
xchg
ret
add
sbb
or
add
cmp
or
in
leave
nop
jmp
add
inc
add
add
add
loop
push
push
mov
xchg
ret
add
add
pop
pop
aad
scas
add
add
jecxz
test
repnz
nop
nop
jae
add
add
add
popl
cld
nop
nop
jae
sub
rcll
add
rcr
dec
add
mov
mov
cld
nop
nop
jae
fs
test
add
add
jbe
clc
repnz
nop
nop
jae
cmp
scas
andl
jg
push
or
repnz
nop
nop
jae
cli
add
addl
pop
popl
add
nop
nop
jae
xchg
add
add
rolb
pop
fld1
push
mov
xchg
ret
add
add
add
aad
lds
rclb
jmp
sar
add
pop
add
add
inc
and
clc
repnz
nop
nop
jae
sti
add
add
fiadds
add
imul
and
ljmp
scas
sbb
add
repnz
nop
nop
jae
leave
scas
pop
and
add
mov
push
mov
xchg
ret
data16
movsl
add
add
cmpsb
fadds
add
push
mov
leave
nop
jmp
add
add
pop
test
add
add
stos
nop
push
mov
leave
nop
jmp
add
sti
add
js
xor
add
xchg
cli
push
add
call
nop
push
mov
leave
nop
jmp
cmp
pop
ficomps
add
add
clc
repnz
nop
nop
jae
add
add
push
add
nop
nop
jae
add
add
js
mov
pop
push
mov
xchg
ret
int3
mov
add
add
incb
roll
movsl
xor
push
mov
xchg
ret
add
add
data16
cli
mov
pop
inc
add
add
mov
add
add
add
nop
push
mov
leave
nop
jmp
fs
add
add
xchg
mov
pop
pop
inc
add
test
add
add
add
add
xchg
sub
push
mov
xchg
ret
roll
add
add
sbbl
xchg
sti
nop
push
mov
leave
nop
jmp
add
leave
add
fimuls
add
test
add
clc
repnz
nop
nop
jae
sub
or
clc
repnz
nop
nop
jae
popl
add
add
dec
cmp
repnz
nop
nop
jae
test
add
add
push
clc
repnz
nop
nop
jae
add
mov
add
add
and
movsl
xchg
fistpl
push
mov
xchg
ret
pop
add
add
add
add
dec
je
clc
repnz
nop
nop
jae
add
out
sbb
clc
repnz
nop
nop
jae
add
fs
add
mov
cld
nop
nop
jae
add
add
or
add
pushf
cmp
repnz
sub
repnz
nop
nop
jae
stos
test
scas
add
movsb
icebp
jne
clc
repnz
nop
nop
jae
pop
mov
add
or
mov
clc
repnz
nop
nop
jae
add
add
sub
int3
lods
arpl
repnz
nop
nop
jae
add
add
test
mov
lock
add
lea
push
mov
xchg
ret
push
add
add
js
and
push
add
mov
xchg
ret
add
add
pop
pop
add
test
push
clc
repnz
nop
nop
jae
gs
out
cmp
add
add
clc
repnz
nop
nop
jae
adc
dec
add
add
popl
dec
sub
cld
nop
nop
jae
add
add
add
roll
gs
add
add
repnz
nop
nop
jae
add
pop
cmp
mov
push
mov
xchg
ret
add
out
dec
pop
add
add
push
dec
clc
repnz
nop
nop
jae
sti
pop
add
add
add
loop
push
mov
xchg
ret
test
incb
movsl
and
mov
in
loopne
clc
aam
rorb
loopne
add
sub
add
mov
repz
lea
nop
push
mov
leave
nop
jmp
mov
add
add
int3
fistps
add
mov
xchg
ret
add
cmp
add
int3
add
std
call
nop
push
mov
leave
nop
jmp
push
add
int3
sti
mov
test
xor
nop
push
mov
leave
nop
jmp
pop
xchg
add
test
adc
pop
add
bound
xchg
ret
dec
adc
add
add
fsubp
je
pop
test
jne
in
leave
nop
jmp
xchg
add
add
add
add
nop
push
mov
leave
nop
jmp
dec
inc
add
addl
add
fwait
jne
clc
repnz
nop
nop
jae
add
test
inc
adc
pushl
clc
repnz
nop
nop
jae
add
add
movsl
leave
mov
mov
leave
nop
jmp
pop
add
rolb
and
leave
data16
call
leave
nop
jmp
sbb
test
add
aad
dec
add
add
clc
repnz
nop
nop
jae
add
js
mov
fistpll
and
and
test
rclb
inc
pusha
inc
add
test
xchg
pop
sti
fs
pop
test
sbb
nop
push
mov
leave
nop
jmp
add
sti
add
cmp
into
pop
add
add
inc
add
pop
inc
add
add
add
filds
add
add
mov
xchg
ret
mov
andl
clc
repnz
nop
nop
jae
gs
je
pop
test
sti
outsl
add
clc
repnz
nop
nop
jae
test
add
mov
sbb
add
dec
push
mov
xchg
ret
rorl
sbb
add
add
cld
clc
repnz
nop
nop
jae
add
pop
inc
gs
add
pop
add
push
pop
clc
repnz
nop
nop
jae
add
add
add
sbb
mov
negl
repnz
nop
nop
jae
add
test
add
fs
in
leave
nop
jmp
add
je
sbb
add
add
cmp
nop
nop
jae
addl
pop
add
insl
add
add
lock
push
push
mov
xchg
ret
pop
rolb
movsl
insl
add
pop
add
add
add
add
roll
repnz
nop
nop
jae
jns
add
add
cmp
add
mov
cmp
jb
push
mov
xchg
ret
pop
add
add
fs
add
repnz
nop
nop
jae
movsb
pop
sbb
loopne
inc
add
cli
dec
add
push
add
mov
leave
nop
jmp
leave
add
pop
je
add
add
sbb
fucomp
cmp
add
clc
repnz
nop
nop
jae
add
inc
pop
add
add
add
push
mov
xchg
ret
roll
shl
add
leave
nop
jmp
js
add
add
test
scas
add
sub
mov
xchg
ret
and
pop
stos
int3
je
add
cmpsl
push
clc
repnz
nop
nop
jae
shlb
movsl
pop
addl
add
filds
adc
repnz
nop
nop
jae
add
cmp
pop
add
je
xor
enter
rclb
adc
add
xchg
leave
add
add
cmp
iret
mov
clc
repnz
nop
nop
jae
add
add
add
fistps
aad
add
daa
add
nop
push
mov
leave
nop
jmp
sub
scas
add
lods
clc
repnz
nop
nop
jae
add
pop
filds
add
scas
cltd
xor
clc
repnz
nop
nop
jae
fs
add
insl
add
popa
clc
repnz
nop
nop
jae
add
add
adc
add
or
clc
repnz
nop
nop
jae
sbb
sbb
add
mov
stos
imul
incb
faddp
dec
mov
add
rclb
clc
repnz
nop
nop
jae
mov
data16
inc
add
add
cld
nop
nop
jae
loopne
add
movsl
add
pushf
sbb
fwait
clc
repnz
nop
nop
jae
add
add
test
add
sbb
push
mov
xchg
ret
cmp
movsl
add
scas
or
add
mov
xchg
ret
scas
sbb
add
add
mov
xchg
mov
inc
add
je
add
movsl
je
lcall
cld
nop
nop
jae
scas
adc
add
test
add
movsl
pop
clc
repnz
nop
nop
jae
add
add
add
aad
xor
inc
mov
clc
repnz
nop
nop
jae
je
leave
add
add
add
cld
nop
nop
jae
add
pop
rorb
add
inc
and
repnz
nop
nop
jae
inc
add
add
add
inc
jecxz
repnz
nop
nop
jae
test
pop
add
loopne
add
add
push
add
jl
add
clc
repnz
nop
nop
jae
sbb
mov
jg
inc
in
nop
push
mov
leave
nop
jmp
data16
sbb
addl
loopne
add
xchg
nop
push
mov
leave
nop
jmp
jns
add
cli
add
movsb
movsl
add
lret
push
clc
repnz
nop
nop
jae
movsb
xor
add
add
mov
push
clc
repnz
nop
nop
jae
fs
leave
gs
repnz
clc
repnz
nop
nop
jae
mov
add
add
adc
je
add
push
mov
xchg
ret
push
add
adc
mov
pop
and
clc
repnz
nop
nop
jae
data16
gs
out
int3
add
cmp
jae
clc
repnz
nop
nop
jae
scas
adc
sbb
gs
add
leave
xor
outsb
add
cld
nop
nop
jae
add
add
pop
fbld
filds
movsl
xchg
not
push
mov
xchg
ret
data16
pop
movsl
movsb
fiadds
jns
mov
scas
ret
movsb
test
test
add
mov
add
dec
cli
addl
add
fwait
clc
repnz
nop
nop
jae
add
sub
xor
mov
clc
repnz
nop
nop
jae
scas
je
add
out
and
nop
push
mov
leave
nop
jmp
pop
scas
fs
sti
test
push
push
mov
xchg
ret
jns
add
add
add
add
pop
add
mov
clc
repnz
nop
nop
jae
test
add
add
sbb
clc
repnz
nop
nop
jae
gs
mov
add
stos
add
add
mov
repnz
nop
nop
jae
add
add
mov
add
nop
jmp
add
pop
fs
cmc
add
clc
repnz
nop
nop
jae
js
add
cmp
subl
or
add
aad
add
movsb
pop
out
dec
je
add
dec
push
add
clc
repnz
nop
nop
jae
add
add
xor
add
pop
clc
repnz
nop
nop
jae
mov
or
je
add
add
add
jl
lea
mov
sub
xchg
test
xchg
ret
add
fs
movsl
add
add
add
mov
clc
repnz
nop
nop
jae
roll
add
fisttps
fistpl
push
mov
xchg
ret
push
add
sbb
add
repnz
nop
nop
jae
cmp
mov
sub
adc
xor
mov
repnz
nop
nop
jae
aad
js
pop
roll
aad
popf
mov
clc
repnz
nop
nop
jae
add
add
and
nop
push
mov
leave
nop
jmp
add
mov
lock
mov
fcoml
pop
ljmp
pop
adc
and
movsl
filds
movsb
test
and
loopne
add
test
nop
push
mov
leave
nop
jmp
or
add
cltd
pusha
clc
repnz
nop
nop
jae
mov
add
inc
filds
add
dec
add
pusha
push
mov
xchg
ret
gs
add
pop
or
add
clc
repnz
nop
nop
jae
add
add
cmp
outsb
add
addr16
jmp
incl
add
add
push
int3
add
stos
addl
push
push
mov
xchg
ret
add
xor
adc
add
add
push
mov
xchg
ret
mov
add
add
jb
and
jmp
push
mov
xchg
ret
add
scas
add
adc
add
mov
push
mov
xchg
ret
add
add
add
fiadds
xor
add
nop
push
mov
leave
nop
jmp
loopne
add
add
call
nop
jmp
dec
add
lock
add
add
jmp
mov
xchg
ret
sbb
js
test
call
cld
nop
nop
jae
add
push
pop
add
pop
mov
dec
add
add
push
mov
xchg
ret
add
pop
cli
add
add
add
nop
nop
jae
add
jns
fistpll
add
add
mov
clc
repnz
nop
nop
jae
add
mov
mov
nop
push
mov
leave
nop
jmp
sub
dec
add
fld1
clc
repnz
nop
nop
jae
insl
loopne
add
add
push
nop
push
mov
leave
nop
jmp
movsb
add
fs
add
add
jns
rclb
jnp
add
add
inc
addl
rcl
add
clc
repnz
nop
nop
jae
add
pop
dec
add
in
leave
nop
jmp
mov
add
add
sbb
sub
xor
push
mov
xchg
ret
data16
xor
add
pop
movsl
add
xor
repnz
nop
nop
jae
mov
subl
sti
add
sbb
inc
add
add
xchg
sbb
clc
repnz
nop
nop
jae
add
lock
or
add
add
clc
repnz
nop
nop
jae
add
add
add
xchg
jge
xchg
cmpl
nop
jae
out
movsl
add
adc
scas
mov
repnz
nop
nop
jae
add
xor
fisubrs
push
mov
xchg
ret
add
push
mov
mov
cmp
push
mov
xchg
ret
test
scas
adc
add
add
add
je
and
push
mov
xchg
ret
add
adc
xchg
add
test
push
imul
cld
nop
nop
jae
out
test
adc
movsl
add
mov
repnz
nop
nop
jae
add
add
add
add
add
mov
clc
repnz
nop
nop
jae
inc
scas
cmp
je
mov
ror
arpl
jmp
nop
nop
jae
and
add
add
movsl
add
pushl
push
mov
xchg
ret
add
test
insl
add
add
repnz
nop
nop
jae
add
leave
add
insl
scas
add
adc
repnz
nop
nop
jae
shrl
test
jg
nop
push
mov
leave
nop
jmp
cmp
add
add
pop
pop
push
jecxz
nop
push
mov
leave
nop
jmp
add
mov
mov
ljmp
nop
jae
add
add
cli
scas
fs
scas
roll
push
and
nop
push
mov
leave
nop
jmp
add
add
add
fiaddl
roll
mov
xchg
ret
add
cmp
add
add
stos
add
cltd
loope
clc
repnz
nop
nop
jae
add
scas
sub
add
jp
nop
push
mov
leave
nop
jmp
loopne
pop
add
popw
loopne
adc
nop
nop
jae
add
fiadds
add
push
add
popa
stos
clc
repnz
nop
nop
jae
add
pop
add
add
add
add
add
clc
repnz
nop
nop
jae
pop
shll
loopne
test
sub
call
inc
add
add
add
add
shll
clc
repnz
nop
nop
jae
add
add
movsl
rolb
call
popf
fwait
push
mov
xchg
ret
scas
test
pop
adc
out
out
add
clc
repnz
nop
nop
jae
loopne
add
add
add
add
popf
call
clc
repnz
nop
nop
jae
add
add
rorl
mov
mov
mov
clc
repnz
nop
nop
jae
sbb
pop
add
and
test
mov
leave
nop
jmp
mov
add
fiadds
mov
push
mov
xchg
ret
sbb
dec
pop
dec
int3
cli
and
out
fld1
push
mov
xchg
ret
add
add
addl
push
add
add
repnz
nop
nop
jae
add
insl
filds
pop
and
mov
adc
push
mov
leave
nop
jmp
add
add
push
add
add
cld
nop
nop
jae
pop
add
add
pop
add
pop
mov
push
push
mov
xchg
ret
add
xchg
cmp
scas
pop
pop
pop
scas
jns
lcall
nop
nop
jae
add
add
js
add
clc
repnz
nop
nop
jae
add
addl
pop
sti
pop
test
out
lock
mov
xchg
ret
aad
pop
pop
cli
add
adc
repnz
nop
nop
jae
add
add
add
add
and
add
cld
nop
nop
jae
add
add
scas
add
add
add
ret
sbb
nop
jae
je
jns
add
fwait
nop
push
mov
leave
nop
jmp
add
add
pop
add
push
add
add
clc
repnz
nop
nop
jae
sti
add
xchg
add
add
data16
push
push
mov
xchg
ret
adc
add
add
add
jns
dec
add
cwtl
test
and
fld1
clc
repnz
nop
nop
jae
test
add
popl
pop
inc
add
into
lahf
xor
clc
repnz
nop
nop
jae
insl
add
fs
pop
add
add
nop
push
mov
leave
nop
jmp
adc
add
push
mov
pop
pop
push
mov
xchg
ret
dec
pop
gs
cli
add
add
add
movsb
int3
fwait
add
clc
repnz
nop
nop
jae
mov
int3
add
and
sbb
jge
add
popl
add
adc
leave
data16
pop
in
clc
repnz
nop
nop
jae
add
leave
add
mov
nop
push
mov
leave
nop
jmp
add
pop
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
pop
xchg
add
adc
js
add
movsb
add
sub
jns
add
clc
repnz
nop
nop
jae
add
jns
add
jns
add
add
pop
inc
add
add
mov
pop
pop
sbb
push
add
cld
nop
nop
jae
xor
aad
xor
add
push
mov
xchg
ret
xor
add
add
insl
add
sbbl
cld
nop
nop
jae
add
je
cmp
aad
rep
clc
repnz
nop
nop
jae
mov
add
cli
add
je
clc
repnz
nop
nop
jae
add
add
add
xchg
in
lods
jmp
shll
add
mov
add
add
sub
clc
repnz
nop
nop
jae
jns
add
or
nop
nop
jae
xor
scas
add
je
inc
add
add
add
insl
je
nop
push
mov
leave
nop
jmp
sbb
aad
jp
or
repnz
nop
nop
jae
add
add
xor
pop
inc
add
push
or
popf
push
clc
repnz
nop
nop
jae
add
sub
and
sbb
inc
add
fiaddl
add
repnz
nop
nop
jae
add
or
pop
fld1
nop
push
mov
leave
nop
jmp
add
add
scas
sti
add
sub
sub
push
add
pop
add
nop
push
mov
leave
nop
jmp
mov
add
add
push
mov
xchg
ret
pop
add
add
sbb
nop
nop
jae
fiadds
movsl
add
add
int3
add
out
cmp
nop
push
mov
leave
nop
jmp
test
pop
adc
add
add
cwtl
outsl
fwait
push
mov
xchg
ret
filds
add
lea
rclb
addr16
add
add
add
add
movsl
mov
int3
add
add
repnz
nop
nop
jae
add
adc
stos
add
int
push
insb
gs
repnz
nop
nop
jae
cmp
add
mov
xchg
ret
mov
mov
cli
add
js
inc
add
sub
rclb
nop
jmp
scas
insl
add
add
add
inc
test
jbe
hlt
pop
add
mov
xchg
ret
add
mov
add
mov
add
add
ljmp
add
insl
add
data16
cli
orb
repnz
nop
nop
jae
add
sbbl
add
add
add
add
fdivrs
cld
nop
nop
jae
add
je
movsl
add
add
bound
xchg
ret
add
cmp
add
add
add
sbb
fcoms
loope
adc
pop
add
add
add
xchg
add
xor
mov
clc
repnz
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
pop
pop
pop
rolb
add
add
cmp
add
push
mov
xchg
ret
add
pop
add
int3
loopne
add
cld
nop
nop
jae
stos
add
test
add
mov
clc
repnz
nop
nop
jae
je
add
pop
add
addl
sbb
push
mov
xchg
ret
filds
add
pop
cmp
add
add
nop
push
mov
leave
nop
jmp
movsl
or
add
add
add
sbb
push
mov
xchg
ret
pop
add
out
and
add
je
pop
or
push
out
dec
add
add
sar
adcl
cld
nop
nop
jae
movsl
add
movsl
add
and
mov
movsl
jno
inc
sub
repnz
nop
nop
jae
add
add
add
add
add
add
mov
repnz
nop
nop
jae
lock
loopne
add
jl
and
mov
cmp
ret
leave
mov
add
add
push
clc
repnz
nop
nop
jae
add
mov
mov
nop
push
mov
leave
nop
jmp
pop
sbb
add
pop
movsl
mov
dec
clc
dec
inc
clc
repnz
nop
nop
jae
add
mov
add
add
cld
nop
nop
jae
add
cmp
add
rcrb
test
dec
cmp
repnz
nop
nop
jae
add
add
pop
mov
push
mov
xchg
ret
cmp
add
add
add
js
scas
inc
add
nop
push
mov
leave
nop
jmp
roll
popl
sti
add
pop
add
add
dec
mov
clc
repnz
nop
nop
jae
leave
mov
add
ljmp
push
add
mov
clc
repnz
nop
nop
jae
sti
pop
add
add
lock
repnz
sub
nop
nop
jae
add
aad
add
call
clc
repnz
nop
nop
jae
add
rolb
daa
jmp
cld
nop
nop
jae
add
push
loopne
mov
clc
repnz
nop
nop
jae
pop
addl
lock
add
add
nop
push
mov
leave
nop
jmp
add
fidivrs
xor
add
rcll
repnz
nop
nop
jae
add
int3
add
inc
add
cmp
mov
xchg
ret
int3
pop
add
adc
and
mov
mov
inc
add
rolb
movsb
add
add
div
clc
repnz
nop
nop
jae
movsl
add
xchg
add
nop
push
mov
leave
nop
jmp
add
add
add
scas
xor
push
inc
add
pop
add
add
add
stos
js
push
add
sbb
add
mov
clc
repnz
nop
nop
jae
xchg
add
add
add
add
add
rol
movswl
clc
repnz
nop
nop
jae
addl
add
add
pop
clc
repnz
nop
nop
jae
add
pop
add
jne
clc
repnz
nop
nop
jae
add
add
movsb
int3
data16
in
arpl
clc
repnz
nop
nop
jae
data16
add
stos
cmp
dec
add
cmpl
nop
push
mov
leave
nop
jmp
add
add
test
cmpsb
popf
mov
clc
repnz
nop
nop
jae
pop
addl
sub
add
call
cmp
ret
add
cmp
leave
roll
sub
nop
nop
jae
add
pop
mov
scas
add
mov
mov
clc
repnz
nop
nop
jae
add
loopne
add
int3
pop
add
xchg
stos
mov
clc
repnz
nop
nop
jae
adc
add
add
push
add
ret
clc
repnz
nop
nop
jae
add
movsl
add
filds
xchg
cld
nop
nop
jae
scas
add
js
add
test
push
clc
repnz
nop
nop
jae
sbbl
pop
add
movsl
sti
pusha
nop
push
mov
leave
nop
jmp
add
add
pop
sti
add
push
nop
push
mov
leave
nop
jmp
mov
stos
add
adc
add
cld
nop
nop
jae
add
add
add
push
mov
xchg
ret
scas
out
add
ffreep
insl
sbb
cli
xor
aam
lds
addb
cmp
ret
dec
je
adc
js
mov
cmpsl
add
clc
repnz
nop
nop
jae
incb
add
adc
nop
push
mov
leave
nop
jmp
movsl
add
pop
movsl
imul
add
repnz
nop
nop
jae
movsl
add
add
imul
lock
add
nop
jmp
add
adc
stos
add
cmp
mov
push
mov
xchg
ret
test
cmp
pop
adc
clc
push
mov
xchg
ret
test
add
and
sub
outsl
add
push
mov
xchg
ret
mov
pop
add
push
push
mov
xchg
ret
add
filds
mov
mov
pop
add
int3
mov
lahf
fistpl
clc
repnz
nop
nop
jae
sbb
lock
rcr
mov
clc
repnz
nop
nop
jae
add
add
movsw
inc
sti
sub
in
add
sub
push
add
in
mov
cltd
add
add
jmp
fld1
push
mov
xchg
ret
add
mov
mov
sbb
jns
call
nop
nop
jae
sti
add
int3
pop
je
pop
add
clc
repnz
nop
nop
jae
insl
add
aad
add
add
rcl
mov
clc
repnz
nop
nop
jae
sti
add
add
add
mov
push
mov
xchg
ret
add
cmp
leave
add
gs
lahf
fwait
clc
repnz
nop
nop
jae
add
adc
filds
insl
add
inc
arpl
in
mov
add
jp
xlat
add
fadds
add
add
inc
lock
sbb
clc
repnz
nop
nop
jae
add
movsl
add
incb
dec
mov
mov
clc
repnz
nop
nop
jae
je
add
pop
jo
roll
cmp
repnz
nop
nop
jae
add
mov
add
lock
pop
push
push
mov
xchg
ret
js
pop
add
orl
add
pop
inc
clc
repnz
nop
nop
jae
add
add
sub
incb
pop
jo
mov
and
clc
repnz
nop
nop
jae
movsl
fiadds
aad
scas
stos
popl
sbb
repnz
nop
nop
jae
add
roll
add
add
add
push
mov
xchg
ret
add
test
add
sub
clc
repnz
nop
nop
jae
add
out
add
data16
cmp
repnz
nop
nop
jae
mov
add
jns
add
add
pop
add
push
mov
xchg
ret
add
add
sub
cmp
sbb
add
push
add
popl
outsb
add
add
repnz
nop
nop
jae
xchg
add
out
rolb
scas
jns
in
cmp
cld
nop
nop
jae
add
faddp
add
add
cld
nop
nop
jae
add
add
pop
movsl
add
add
mov
xchg
ret
add
add
add
out
call
nop
push
mov
leave
nop
jmp
add
add
add
push
mov
xchg
ret
movsb
push
add
movsl
add
add
add
add
incl
je
cmp
jns
sti
fs
movsb
loopne
add
mov
xchg
ret
js
add
fists
add
add
mov
fwait
add
push
mov
xchg
ret
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
scas
or
fs
and
test
or
add
repnz
nop
nop
jae
pop
pop
add
add
loopne
xorl
clc
repnz
nop
nop
jae
cli
lock
add
add
and
clc
repnz
nop
nop
jae
add
add
add
incb
or
insb
add
cld
nop
nop
jae
mov
mov
sub
int
rcll
mov
xchg
ret
add
filds
out
incb
sti
loopne
filds
add
repnz
nop
nop
jae
data16
add
add
jg
add
mov
aad
je
add
jns
mov
pop
push
mov
xchg
ret
add
and
add
incb
clc
repnz
nop
nop
jae
add
insl
add
js
add
cwtl
pop
push
nop
push
mov
leave
nop
jmp
add
add
pop
fs
inc
xor
clc
repnz
nop
nop
jae
add
add
loopne
pop
decb
cld
nop
nop
jae
add
add
add
cmp
inc
jns
add
daa
push
mov
test
add
add
lods
pop
movsb
xchg
add
add
repnz
xor
fcomi
stos
clc
repnz
nop
nop
jae
test
jns
dec
fs
cld
nop
nop
jae
add
jns
pop
or
call
clc
repnz
nop
nop
jae
pop
test
add
add
loop
mov
clc
repnz
nop
nop
jae
inc
fs
leave
add
add
add
sbb
clc
repnz
nop
nop
jae
mov
popl
pop
in
mov
push
mov
xchg
ret
cli
add
add
add
gs
dec
sub
repnz
nop
nop
jae
pop
add
add
add
pop
gs
pop
lss
clc
repnz
nop
nop
jae
rolb
add
or
and
call
nop
jae
add
add
cmp
dec
add
xchg
shr
clc
repnz
nop
nop
jae
je
add
popl
pop
and
add
nop
nop
jae
add
pop
add
fidivs
scas
mov
clc
repnz
nop
nop
jae
pop
add
scas
fistps
dec
pop
add
push
push
mov
xchg
ret
add
pop
int3
test
add
and
insl
push
mov
xchg
ret
add
or
add
add
add
daa
add
clc
repnz
nop
nop
jae
movsb
add
add
mov
push
push
mov
xchg
ret
add
dec
add
pop
sbb
pop
mov
nop
nop
jae
pop
add
pop
test
add
je
int3
shrl
nop
jmp
test
pop
add
add
add
add
add
nop
push
mov
leave
nop
jmp
sbb
popl
int3
sub
nop
nop
jae
je
add
pop
je
scas
add
add
add
push
clc
repnz
nop
nop
jae
movsl
sbb
incb
inc
movsl
or
cmp
or
fwait
add
nop
push
mov
leave
nop
jmp
add
add
add
sar
mov
xchg
ret
scas
mov
add
movsb
filds
pop
inc
test
inc
push
clc
repnz
nop
nop
jae
add
movsl
loopne
pop
add
add
fistpl
nop
push
mov
leave
nop
jmp
and
add
add
add
and
clc
repnz
nop
nop
jae
movsl
movsl
test
add
cld
nop
nop
jae
int3
add
rolb
add
pop
test
push
mov
leave
nop
jmp
cmp
js
add
loopne
in
mov
mov
leave
nop
jmp
add
add
stos
pop
lock
add
dec
cli
outsb
add
outsb
je
jb
repnz
nop
nop
jae
lock
add
test
pop
fwait
sub
nop
push
mov
leave
nop
jmp
jns
add
add
add
pop
add
fstl
in
stc
hlt
int
out
add
push
add
add
inc
fs
lock
pop
mov
push
mov
xchg
ret
xchg
add
lock
lock
dec
cwtl
shl
pop
nop
push
mov
leave
nop
jmp
fs
add
pop
je
pop
add
add
mov
add
sub
add
add
and
add
movl
push
push
mov
xchg
ret
add
scas
add
gs
add
shrl
nop
jae
mov
sbb
add
add
jns
add
add
nop
push
mov
leave
nop
jmp
add
add
pop
test
repnz
nop
nop
jae
data16
add
xor
repnz
nop
nop
jae
sbb
leave
stos
pop
pop
add
outsl
loopne
mov
xchg
ret
add
add
js
add
cld
nop
nop
jae
add
roll
pop
stos
addl
clc
repnz
nop
nop
jae
add
movsb
popl
add
xor
pop
add
test
add
jns
rclb
jmp
jns
add
rolb
xor
add
in
nop
push
mov
leave
nop
jmp
add
pop
pop
sbb
add
inc
lahf
mov
clc
repnz
nop
nop
jae
filds
add
add
add
add
add
clc
repnz
nop
nop
jae
and
add
shll
xorps
xchg
ret
adc
scas
pop
rorb
leave
nop
test
sbb
repnz
nop
nop
jae
aad
add
jns
pop
pop
cmp
push
add
out
jb
add
pop
adc
jns
add
add
nop
push
mov
leave
nop
jmp
add
test
pop
add
je
or
pop
jbe
add
lock
sbb
aad
ljmp
add
nop
push
mov
leave
nop
jmp
add
add
add
pop
push
push
mov
xchg
ret
add
pop
movsl
fiadds
add
pop
add
incb
cld
nop
nop
jae
add
add
add
or
arpl
outsl
dec
inc
add
add
lock
mov
add
add
sbbb
jne
nop
push
mov
leave
nop
jmp
mov
mov
mov
cld
nop
nop
jae
add
pop
mov
rcrb
leave
xchg
je
lret
clc
repnz
nop
nop
jae
add
or
add
dec
add
repnz
nop
nop
jae
out
movsl
pop
add
mov
repnz
nop
nop
jae
int3
add
sbb
fisttps
outsl
arpl
clc
repnz
nop
nop
jae
add
int3
add
pop
int3
aad
push
nop
push
mov
leave
nop
jmp
add
pop
jne
clc
repnz
nop
nop
jae
add
or
out
mov
push
push
mov
xchg
ret
and
adc
add
add
jecxz
inc
call
leave
nop
jmp
js
insl
pop
cmp
add
leave
js
push
clc
repnz
nop
nop
jae
movsl
add
adc
fiadds
rep
clc
repnz
nop
nop
jae
add
js
inc
add
sub
mov
adc
repnz
nop
nop
jae
add
sbb
add
add
imul
in
leave
nop
jmp
add
inc
pop
clc
repnz
nop
nop
jae
je
aad
pop
sbb
stos
add
and
push
mov
xchg
ret
add
add
sub
movsl
adc
add
add
mull
jb,pt
nop
push
mov
leave
nop
jmp
sub
add
mov
push
mov
leave
nop
jmp
sub
out
cld
jmp
push
mov
leave
nop
jmp
inc
add
jns
add
outsl
mov
push
mov
xchg
ret
js
gs
rolb
sbb
insb
add
sbb
insb
add
mov
nop
push
mov
leave
nop
jmp
xor
or
add
xor
jo
add
pop
mov
clc
repnz
nop
nop
jae
out
add
cmp
add
add
pop
add
jge
clc
repnz
nop
nop
jae
out
movsb
add
add
mov
xchg
ret
cmp
js
add
movsl
js
mov
pop
pop
push
mov
xchg
ret
add
add
add
and
jbe
push
push
mov
andb
and
add
add
sbb
mov
mov
push
mov
xchg
ret
pop
xor
add
add
test
or
testb
jne
clc
repnz
nop
nop
jae
add
insl
mov
add
push
clc
repnz
nop
nop
jae
inc
add
test
add
add
push
push
mov
xchg
ret
add
pop
add
adc
add
pop
sub
les
repnz
nop
nop
jae
mov
data16
test
sti
stc
or
clc
repnz
nop
nop
jae
add
add
add
cld
nop
nop
jae
movsb
or
add
insl
add
adc
mov
push
mov
xchg
ret
incb
cmp
add
lock
add
add
clc
repnz
nop
nop
jae
add
pop
add
add
add
nop
push
mov
leave
nop
jmp
add
add
insl
filds
or
jl
add
add
add
add
cmpl
cmp
scas
enter
nop
nop
jae
add
dec
add
jns
add
jae
push
mov
xchg
ret
xchg
pop
movsl
cli
add
add
add
add
fnstcw
clc
repnz
nop
nop
jae
add
or
or
add
loope
clc
repnz
nop
nop
jae
add
mov
mov
add
test
add
nop
nop
jae
cmp
and
add
pop
add
incb
cmp
sahf
and
mov
push
push
mov
xchg
ret
roll
pop
inc
sub
gs
add
add
mov
xchg
ret
add
popl
mov
shll
add
add
mov
clc
repnz
nop
nop
jae
rcrl
pop
cmp
test
fistpl
push
mov
xchg
ret
add
add
sub
jns
clc
repnz
nop
nop
jae
add
sbb
sbbl
inc
add
add
hlt
clc
repnz
nop
nop
jae
add
incb
mov
call
inc
add
je
je
js
or
xchg
scas
pop
fcom
lret
add
ror
push
mov
xchg
ret
roll
add
add
sti
out
add
add
cld
nop
nop
jae
add
add
add
add
push
mov
leave
nop
jmp
add
add
xor
add
adc
and
nop
nop
jae
add
fistpll
adc
add
dec
sbb
pop
inc
add
add
scas
fimuls
sbb
dec
adc
sti
test
dec
ret
nop
push
mov
leave
nop
jmp
or
leave
add
loopne
je
add
mov
cmp
nop
push
mov
leave
nop
jmp
stos
lock
add
add
nop
sub
add
mov
mov
clc
repnz
nop
nop
jae
add
aad
test
jns
add
nop
jmp
cmp
incb
add
pop
jne
nop
push
mov
leave
nop
jmp
add
movsl
add
outsl
test
nop
push
mov
leave
nop
jmp
test
je
out
or
cmp
add
add
cmp
scas
xor
je
inc
jo
pop
mov
clc
repnz
nop
nop
jae
add
loopne
leave
add
add
fcomps
testl
nop
push
mov
leave
nop
jmp
add
xchg
add
add
mov
xchg
ret
fs
movsl
lock
add
movzwl
clc
repnz
nop
nop
jae
int3
fbld
xchg
pop
add
adc
push
mov
leave
nop
jmp
add
add
movsb
data16
add
pop
inc
add
add
pop
add
add
add
out
adc
clc
repnz
nop
nop
jae
add
add
add
stos
and
nop
push
mov
leave
nop
jmp
cmp
pop
test
sub
pop
lea
clc
repnz
nop
nop
jae
sub
add
add
repnz
nop
nop
jae
add
mov
add
add
jbe
or
mov
xchg
ret
filds
sti
add
movsl
mov
jns
add
push
add
jmp
add
add
test
sti
mov
add
jae
rolb
repnz
nop
nop
jae
add
fs
roll
test
popa
clc
repnz
nop
nop
jae
add
leave
pop
scas
add
xor
les
clc
repnz
nop
nop
jae
add
test
ss
push
mov
inc
int3
push
les
add
or
mov
xor
cmp
push
add
ret
adc
fadd
mov
add
jo
xchg
sbb
lods
mov
adc
jbe
stos
stc
dec
stos
lods
imul
sarb
add
sbb
adc
repnz
mov
xchg
sbb
stos
dec
xchg
xor
sahf
jg
sub
int
jge
add
and
mov
add
push
add
add
out
mov
jo
adc
jp
pushf
pop
or
add
or
fs
adc
cmp
jnp
add
jae
fiadds
push
add
jno
rcrb
xorb
das
and
ja
stos
mov
or
std
jg
cmpsb
daa
enter
add
jge
add
add
xchg
loope
hlt
pop
sbb
xor
adc
pop
add
add
fcmovnu
imul
jl
shll
xchg
push
add
pop
add
cmp
jge
inc
add
dec
lock
add
pop
or
push
negl
add
mov
add
js
popf
inc
outsb
add
and
shll
andb
add
mov
and
aas
mov
repz
mov
int
add
sbb
scas
inc
add
imul
das
sahf
stc
mov
bound
cmp
enter
xchg
add
dec
inc
add
cltd
jno
xor
hlt
push
add
sbb
cmpsb
fistl
push
add
jno
insl
lret
fnsave
inc
add
arpl
add
imul
imul
push
jb
or
xchg
inc
push
add
das
insb
add
pop
add
push
add
xor
loop
add
sub
pop
add
add
cmp
pop
add
ret
sahf
popa
xor
mov
aad
sahf
in
pop
mov
add
pushf
xchg
xchg
jmp
add
add
add
adc
lods
test
add
xor
shl
push
add
add
loopne
dec
push
add
pop
add
les
repnz
inc
add
dec
add
jl
sub
add
out
je
dec
xchg
add
xlat
dec
jmp
int3
add
dec
add
clc
push
add
bound
mov
jmp
out
mov
add
push
add
add
add
adc
cli
inc
add
push
in
sub
je
outsb
add
fldcw
negl
mov
add
add
pop
add
test
pop
icebp
mov
sbb
mov
sti
pop
test
mov
jge
mov
add
dec
add
add
je
daa
int
add
mov
pushf
lea
add
shrb
add
cmpsb
ljmp
add
std
mov
push
add
dec
add
pop
notb
inc
add
inc
add
lock
sbb
mov
stos
xor
ja
add
jne
call
out
data16
inc
add
add
xor
mov
add
cwtl
je
dec
cmp
xor
push
add
fdivrs
add
add
call
add
add
jo
jl
das
into
cld
stos
mov
decl
sbb
pop
push
add
sbb
lods
add
add
xor
add
addr16
mov
test
push
add
cltd
sub
mov
add
jae
lods
aam
add
mov
fcoml
fstl
add
inc
add
add
pushf
insl
jg
dec
mov
clc
int
add
push
add
pop
and
cld
dec
add
cmp
pop
xlat
lcall
and
jnp
sarb
add
cld
fbstp
add
push
jle
push
dec
mov
inc
or
cwtl
lea
ja
add
add
iret
movsl
mov
and
lea
cmp
add
ret
in
push
add
leave
mov
call
adc
and
push
lahf
repz
sbb
mov
mov
test
cli
inc
add
xchg
mov
push
pop
add
push
and
jecxz
repnz
repz
imul
add
add
ret
push
add
fwait
jmp
add
repnz
add
add
mov
xlat
rclb
add
loop
and
fs
imulb
add
pop
add
mov
gs
lods
mov
mov
add
add
mov
inc
add
shlb
add
test
test
pop
pop
mov
adc
adc
inc
repz
loopne
sahf
lods
popf
sahf
or
pop
faddl
add
xor
mov
add
and
pop
inc
addb
cli
into
sbb
add
xchg
add
inc
addr16
jg
add
jg
add
add
fisttpl
int3
inc
je
xor
sarl
mov
jae
test
add
add
add
dec
add
add
in
inc
add
int
add
sub
pop
add
scas
aam
cmpsl
aas
and
or
aaa
in
add
fidivl
add
mov
inc
add
aaa
pop
pop
add
add
sti
pop
sub
add
movsl
data16
push
add
add
inc
add
cmpsb
push
add
iret
xor
inc
and
fmul
dec
add
ret
test
inc
out
add
mov
insb
add
das
sbb
add
sti
pop
add
inc
shll
add
mov
cmpsl
outsl
ljmp
jg
mov
add
add
xchg
int3
dec
out
add
or
pop
fcmovu
add
daa
mov
push
out
and
adc
xchg
movl
add
aad
mov
mov
rorl
outsb
add
push
add
mov
cmp
add
rorb
repnz
add
notl
add
mov
rcll
jle
fldcw
add
adc
test
xor
movsb
xchg
jecxz
add
jge
loop
sbb
xchg
xor
dec
into
int
add
aaa
mov
add
adc
bound
insl
in
stos
and
sub
push
das
mov
add
mov
add
add
add
add
add
sbb
add
jns
jecxz
cmp
push
add
add
sbb
repz
add
push
jo
add
xchg
lock
lods
iret
lock
loop
mov
rcrl
mov
add
xchg
xchg
mov
mov
js
dec
pop
xor
mov
add
add
sub
inc
add
outsb
add
test
dec
push
add
push
add
mov
add
add
es
mov
push
ret
xor
push
add
test
add
add
xchg
mov
fnstcw
add
cmc
sub
push
add
mov
add
mov
add
sar
cmp
int3
fdivr
and
subl
mov
xlat
pop
add
bound
fnstcw
pop
add
pop
or
les
decl
cmpb
inc
imul
or
jle
stc
mov
adc
adc
jp
add
shrb
add
add
std
test
in
jmp
jp
fsubrl
add
add
mov
add
push
add
aad
idivl
add
xchg
pop
cwtl
ja
or
xchg
jbe
sbb
outsl
mov
lods
leave
add
in
insl
push
enter
mov
push
add
lea
add
cmp
and
data16
rol
dec
scas
xchg
cmp
add
add
inc
add
inc
add
add
arpl
add
jbe
lcall
add
insl
add
cli
mov
add
shlb
ret
add
insl
call
dec
add
mov
mov
popf
dec
push
add
xchg
lds
loop
xor
in
ljmp
mov
add
iret
push
add
hlt
fwait
std
daa
fwait
sbb
int3
pushf
or
add
or
mov
lock
testl
mov
add
test
pop
add
ljmp
lods
ljmp
imul
sub
xor
ljmp
xchg
mov
cmp
add
or
add
add
sbb
mov
add
add
sbb
jmp
jle
push
dec
add
or
lds
xchg
outsb
add
clc
insb
add
pusha
add
mov
add
fwait
jmp
add
or
and
sbb
add
sti
cmp
in
lea
add
inc
cmp
sub
lods
arpl
sbb
pop
add
add
jg
loopne
jle
shlb
add
cmp
or
add
jnp
decl
mov
add
push
add
in
add
lock
mov
add
in
daa
jmp
mov
sbb
insb
add
add
inc
add
repnz
add
popf
fstpl
add
das
mov
push
xchg
sub
int3
lods
arpl
mov
add
into
mov
xor
add
and
addl
add
sub
ret
add
addr16
cld
cmp
daa
rep
fsub
subb
mov
faddl
sbb
adc
pop
add
and
rcr
mov
add
mov
add
add
add
test
mov
dec
add
sbb
fistpll
xor
and
icebp
mov
ljmp
mov
add
add
mov
nop
js
clc
cs
popf
jbe
sub
popa
add
repz
cmp
xchg
or
push
add
rolb
add
fdivrs
insb
add
add
int
add
arpl
add
fst
jecxz
addr16
call
imul
cmp
pop
add
push
add
add
mov
jecxz
and
add
int
leave
push
add
or
push
add
jecxz
add
loop
inc
add
mov
outsl
out
push
add
add
popa
mov
dec
add
jp
fidivrs
push
add
add
xor
xlat
mov
pushf
or
add
movsb
lock
add
or
test
rcr
lea
add
fiadds
add
add
inc
xchg
insb
add
mov
xchg
add
shll
int
ret
push
xchg
mov
push
add
cmpsb
or
mov
jg
in
add
and
iret
and
in
add
icebp
add
push
add
jg
xor
jle
mov
or
jne
jle
hlt
jmp
add
add
add
add
stos
popf
lods
push
add
ljmp
mov
xlat
dec
stc
ret
adc
push
add
test
mov
pop
jne
jne
add
adc
lret
add
aaa
cmpb
cli
or
add
pop
pop
add
push
mov
das
add
inc
add
mov
xchg
sbb
cli
bound
or
add
add
mov
mov
mov
jnp
jbe
push
add
in
push
ret
pusha
add
or
outsl
and
lods
jo
addb
add
cmpsl
loopne
add
mov
mov
jmp
add
or
movsb
mov
cld
jmp
mov
mov
fldcw
and
mov
add
std
lods
add
add
jecxz
cmp
xchg
add
lods
jns
add
cmc
add
cld
ljmp
add
add
in
add
data16
add
add
adc
pop
lods
in
ljmp
lea
xchg
ljmp
sbb
inc
add
pop
repz
mov
add
dec
into
mov
cmp
push
add
jg
sahf
jne
lds
add
loopne
add
cld
iret
jbe
push
jl
bound
cmp
loope
add
add
add
mov
lock
add
add
outsb
add
push
add
jp
cmp
rolb
fwait
jno
popa
dec
add
add
mov
cmovle
xor
mov
add
mov
imul
add
ret
out
add
mov
push
lret
shlb
aas
add
cmp
pop
add
add
jp
jo
pop
inc
xchg
xorb
add
inc
add
cmp
call
jbe
mov
pop
add
and
outsl
mov
jmp
lds
sarb
icebp
stos
push
cmp
mov
out
popa
and
adc
sub
xchg
pop
mov
cmpsb
int
ret
mov
add
test
in
mov
cltd
fcom
jp
jmp
pop
add
sub
out
lahf
iret
inc
push
frstor
add
outsl
sbb
sbb
sub
popa
bound
scas
add
push
add
mov
dec
add
mov
testl
jno
add
das
add
add
imul
mov
mov
add
xlat
inc
add
fists
add
add
add
pop
add
add
and
jge
sahf
pop
and
out
push
cmpsl
xor
aaa
add
xor
fsubrl
add
test
add
add
shlb
cltd
pushf
imul
mov
add
mov
add
adc
xor
lret
mov
sub
sbb
lock
add
or
inc
add
add
jbe
pusha
add
add
out
lret
loop
ror
cmp
mov
bound
jo
jmp
pop
fdivl
xchg
addb
pusha
add
add
pop
add
pusha
add
add
test
add
in
mov
add
add
and
sub
mov
fwait
jo
pusha
add
add
testl
fnstcw
nop
movsl
and
cmp
jns
adc
add
add
add
cmp
add
xchg
lods
and
mov
sbb
cmovnp
add
add
jno
add
inc
add
dec
add
scas
jecxz
lea
cmp
stos
sbb
loope
add
xor
or
sahf
inc
adc
push
add
outsb
add
int3
xor
push
add
lea
xor
out
imul
inc
scas
add
test
js
mov
push
add
add
out
nop
push
add
xchg
inc
add
add
add
add
cmp
in
test
pop
insl
ds
cltd
xor
shll
adc
dec
add
movsb
mov
pop
add
in
stos
shll
mov
jnp
icebp
and
inc
add
ret
mov
pop
add
mov
mov
push
add
add
mov
or
js
xor
test
jns
add
add
andb
mov
add
test
add
orl
adc
add
ljmp
inc
jge
stc
loopne
ret
mov
ret
imul
mov
addl
adc
mov
add
fwait
out
inc
cmpsl
jge
cld
or
aad
vmwrite
orl
lret
fistps
dec
jmp
dec
dec
in
push
add
cmp
fwait
push
mov
outsl
jns
add
add
scas
leave
dec
add
add
aam
add
add
dec
fdivl
add
add
add
repz
mov
adc
test
mov
mov
add
insb
add
mov
push
mov
or
arpl
jbe
xchg
xor
daa
pusha
add
sbb
ficoml
xchg
add
fdivrl
add
negl
mov
cwtl
imul
insl
add
jmp
loope
ja
inc
sub
in
mov
add
ljmp
rolb
add
pop
ret
fidivrs
add
out
push
add
mov
add
adc
mov
fcomps
xor
jle
cmp
js
add
out
fldcw
add
leave
loop
inc
add
add
rcr
cltd
add
sbb
ret
scas
xor
out
jns
mov
jb
cltd
sbbl
or
stc
dec
add
jbe
mov
pop
dec
add
sub
hlt
mov
add
push
loopne
addr16
push
add
sbb
add
add
add
cld
push
add
pop
mov
add
mov
ss
pop
add
addb
add
stos
imull
add
or
xchg
aad
jge
dec
js
jne
add
data16
popf
sahf
lret
pop
insb
add
in
test
cmpsb
fisubrs
pop
std
jb
mov
or
and
mov
int3
scas
pop
add
std
stc
xor
push
ret
stos
or
dec
add
push
decl
add
add
cltd
mov
add
add
jp
sub
sahf
mov
fistpll
imul
sub
add
aaa
mov
aas
in
sbbb
add
push
test
sbb
inc
add
xchg
test
add
add
addr16
add
into
and
jne
dec
lock
fwait
sub
add
aam
pop
add
add
xor
mov
movsb
in
jne
sub
mov
cmp
fadd
mov
dec
popf
shlb
sbbb
add
js
je
mov
add
aad
add
mov
movsl
popa
outsl
enter
add
lcall
mov
je
adc
out
inc
sub
into
loopne
and
jmp
dec
fisttpll
dec
add
clc
push
lret
jl
mov
add
cmp
pusha
add
add
or
pop
add
jge
imul
loopne
js
pop
add
add
ret
outsb
add
clc
int3
add
cmp
xchg
mov
add
add
bound
jae
add
xor
jmp
add
cmp
pushf
ret
jb
inc
add
dec
push
add
add
add
sbb
mov
sub
shrb
adc
into
mov
add
loopne
xchg
jle
or
inc
add
nop
shl
insb
add
insb
add
jne
cli
mov
addb
fisubrs
and
repnz
cmp
stos
mov
js
faddp
cmpsb
fists
xlat
dec
fnstsw
lahf
call
cld
sub
pop
pop
mov
cwtl
add
sub
aaa
dec
xor
pop
stos
loopne
push
add
sub
xchg
cld
in
add
inc
lcall
jg
cmp
xchg
sbb
sub
xor
into
xchg
add
add
add
shlb
or
daa
repz
insb
add
mov
mov
loopne
push
add
fists
out
imul
jecxz
pop
add
mov
push
jno
add
xor
std
xor
cmpsb
mov
add
lahf
push
add
cmpb
mov
jle
test
insl
cmpb
vmwrite
add
xchg
imulb
sub
add
pop
ljmp
xor
imul
jne
add
std
add
je
xchg
xor
xchg
sub
bound
mov
icebp
push
add
add
mov
add
add
add
ficoms
or
cli
mov
add
cli
mov
add
ljmp
push
cmp
sbb
cli
add
and
dec
sub
jl
insl
mov
mov
sub
fwait
ret
fbld
popf
lock
int
inc
add
test
or
jg
pop
push
dec
push
add
gs
popf
in
add
adc
mov
push
add
dec
mov
sbb
mov
cmp
insl
push
add
pop
xchg
stos
mov
lahf
dec
rcr
icebp
inc
add
leave
adc
in
jo
mov
outsl
xchg
inc
add
xchg
aaa
aad
stos
adc
push
imul
nop
xchg
add
xchg
adc
addr16
add
add
mov
mov
out
mov
mov
cmpsb
ret
cwtl
or
ret
or
jns
add
push
add
pop
cwtl
lods
xchg
jecxz
adc
sbb
mov
ret
out
push
add
add
mov
pop
add
add
or
jg
ja
or
add
sub
cmpsl
imul
cld
cmpsb
loopne
imul
pop
mov
add
pushf
pop
flds
leave
xchg
cmpsl
in
jns
inc
add
dec
cmp
xchg
xor
add
jg
adc
pop
push
hlt
sbb
jae
add
pop
add
add
xorb
add
mov
fyl2x
add
addr16
push
rorl
add
arpl
sbb
add
push
add
adc
mov
popf
add
test
xor
sbb
xchg
push
sub
or
add
add
add
push
add
jns
imul
add
mov
int
add
fdivp
ficompl
das
mov
jne
movsb
pop
add
xchg
mov
mov
scas
cmpsl
iret
jl
jne
insb
add
pop
cmp
test
into
lret
adc
in
arpl
rolb
mov
inc
add
add
outsl
dec
add
add
xchg
push
add
les
inc
int
test
and
sub
push
add
jmp
addr16
xchg
xor
push
add
cmp
jne
add
inc
int3
jb
fistps
test
mov
add
dec
loopne
shll
dec
add
add
add
add
add
push
add
mov
add
push
add
ja
add
mov
cltd
inc
in
cmp
inc
sti
adc
and
add
out
mov
ja
pop
fidivl
insb
add
testb
xchg
imul
sbb
xchg
inc
add
inc
jl
lock
iret
dec
add
push
mov
pop
add
rcrb
fcoml
daa
and
add
mov
adc
cmp
mov
pop
add
mov
sbb
add
adc
xor
leave
js
pop
add
fldl
add
sub
mov
pop
add
shl
cs
stc
mov
add
add
add
add
jmp
mov
add
subl
dec
jecxz
xor
cmc
loope
or
xchg
add
dec
dec
cmp
mov
and
dec
add
shrb
sbb
pop
xchg
add
mov
add
add
pop
add
cwtl
push
add
lea
add
lods
sahf
sub
mov
dec
push
add
shll
daa
cmp
mov
add
ljmp
xchg
mov
decb
sahf
dec
add
pushf
push
lds
in
dec
add
push
nop
in
push
add
push
add
cld
sti
test
add
inc
add
xchg
sub
push
mov
and
push
add
add
add
add
xor
mov
add
popa
adc
mov
sbb
xlat
cld
movsb
mov
add
lahf
add
sarb
cs
sub
sahf
add
add
xor
pop
add
add
push
mov
adc
or
cmp
pusha
add
lea
lds
push
iret
outsb
add
push
add
mov
divl
add
das
shlb
add
std
mov
mov
mov
pop
add
sbb
adc
popa
fistps
pop
or
shl
divb
add
add
inc
add
cmp
add
push
add
add
xchg
inc
repnz
add
adc
jbe
icebp
or
or
add
add
add
dec
add
mov
add
add
or
add
outsb
add
sbb
add
mov
add
loopne
push
add
add
movntps
add
jne
add
add
inc
add
add
or
sbb
in
xchg
cmovb
addr16
adc
pop
and
insb
add
add
loope
add
test
pop
sbb
add
add
xchg
ret
ret
lea
inc
mov
cmp
ljmp
inc
cmp
int
cmp
add
add
aas
test
enter
and
xor
and
jg
mov
and
out
outsl
dec
int
add
inc
xchg
pop
add
add
add
add
loopne
add
add
cli
rcrl
xchg
adc
push
pop
aad
lahf
aas
mov
out
aaa
jb
cld
cmc
scas
les
add
test
loopne
push
stc
lea
jnp
jo
add
scas
pop
xchg
jecxz
test
out
jo
ja
ja
mov
insl
fistps
lea
pop
cmp
jae
aad
lock
cmpsl
daa
lods
sub
loop
mov
add
stos
inc
pop
movsl
test
sub
movsb
dec
sub
add
test
cmp
adc
mov
add
mov
add
add
jb
lds
lcall
sarl
mov
add
push
add
cmpsl
mov
cwtl
fidivrl
mov
add
mov
cmp
ret
cwtl
push
movsl
push
add
push
add
add
mov
jae
add
mov
add
cs
arpl
cli
dec
repnz
add
jmp
adc
add
mov
add
xor
jae
dec
enter
add
or
mov
or
shr
rolb
rcl
cli
sbb
or
pop
add
and
int3
addr16
add
add
xchg
punpcklbw
or
mov
add
aad
add
push
xchg
mov
shrb
out
outsl
pop
xchg
sbb
lcall
les
ds
inc
add
cmp
fnstcw
add
add
mov
xchg
cmp
jge
mov
jno
jge
jbe
jo
and
add
add
pop
add
loop
add
add
add
push
jp
fidivrs
add
add
movsl
push
add
aad
mov
pop
add
add
add
out
shlb
add
add
xchg
aas
movsb
fwait
add
mov
and
adc
add
pop
and
shlb
fcoml
add
jp
imul
lds
mov
push
add
mov
adc
dec
ret
cmc
loopne
add
dec
add
psrlw
pushf
add
add
add
stc
loop
add
add
add
into
xchg
push
add
popa
jns
jae
mov
or
push
cwtl
mov
add
fwait
pop
xchg
add
shr
pusha
add
sbb
add
addl
add
lahf
shll
add
cmpsb
pushf
roll
rclb
mov
sub
add
mov
add
add
mov
push
add
pop
add
cmp
out
in
add
add
popa
inc
add
or
ss
gs
add
add
into
repz
mov
fwait
xlat
xchg
pusha
add
add
rcll
add
add
icebp
xchg
inc
add
cmp
add
xchg
inc
add
inc
lods
inc
ror
lret
je
das
mov
inc
add
mov
add
neg
add
cmp
movsl
pop
add
add
mov
xor
cmp
rcr
aas
lock
add
add
inc
das
imul
mov
scas
hlt
lss
roll
add
add
add
mov
mov
xchg
bound
inc
push
xchg
in
xchg
mov
aas
jl
mov
shl
data16
jg
inc
fs
or
cmc
push
add
xchg
out
fmull
inc
sbb
sbb
mov
add
out
ss
pop
mov
add
or
pop
lods
ds
or
int
add
cmp
repz
stos
push
dec
add
add
add
stc
inc
pop
add
jne
add
mov
add
inc
xor
add
lret
nop
int
xor
lret
stos
inc
add
dec
add
mov
fiadds
cmp
add
jno
add
add
pusha
add
xchg
and
xchg
fadds
add
add
push
dec
add
cmp
int3
in
cmp
jge
fdivr
add
lods
jo
jnp
in
pop
ficoml
add
loope
xchg
mov
push
add
add
sub
add
sbb
or
mov
aaa
bound
leave
cmp
jle
adc
gs
add
ret
add
lcall
add
push
jbe
stos
enter
insb
add
and
jb
sub
dec
xor
jae
push
outsl
add
jp
jl
push
add
stos
lods
pop
into
xchg
pop
repz
add
mov
bswap
in
xor
mov
insb
add
stos
inc
insl
adc
pop
pusha
add
dec
ja
gs
mov
add
pop
outsb
add
fstpl
add
andb
add
sbb
insl
cmp
hlt
jo
aad
jp
jecxz
add
add
imull
icebp
lods
aaa
mov
cltd
xor
lods
xor
add
add
icebp
sti
lret
add
push
daa
rolb
add
and
enter
into
rolb
aad
cmc
cmp
cwtl
gs
mov
out
add
xchg
push
push
add
pop
adc
add
in
and
xchg
add
pop
or
add
scas
pop
pop
add
push
add
aaa
dec
add
sbb
ljmp
aam
pop
add
notb
insb
add
add
add
vmwrite
movsb
fsubp
xor
and
cmp
lods
bound
arpl
xor
sbb
jmp
lea
leave
or
add
cmp
push
add
imulb
xor
fwait
inc
pop
add
push
cwtl
enter
outsb
add
xor
cmp
add
out
loopne
mov
add
add
add
dec
add
mov
cmp
in
test
pushf
insl
popf
fistpl
cwtl
dec
push
add
jb
jns
mov
lret
or
pop
mov
mov
add
sbb
scas
ficompl
add
push
aam
add
dec
std
pop
add
mov
cmpl
test
hlt
xchg
mov
icebp
lahf
jno
repz
dec
add
mov
out
xchg
mov
add
and
je
shlb
mov
sbbb
add
testb
or
cmp
add
int3
sub
add
or
nop
andb
scas
ja
mov
mov
and
and
mov
xor
xor
ret
stos
xchg
add
dec
xchg
ficomps
add
add
add
repz
inc
je
xchg
imul
into
xlat
or
xor
fdivrl
add
arpl
xchg
add
xor
xchg
fwait
in
mov
inc
add
sbb
aam
decl
jns
adc
add
and
dec
in
orb
xor
sub
sub
sbb
xor
scas
lret
js
rcrb
aad
add
fcoms
aas
dec
adc
in
mov
scas
push
cmp
cmp
adcb
xor
aad
dec
ja
push
add
add
jle
and
stos
pop
add
mov
dec
leave
movsb
add
loope
mov
into
and
add
dec
add
mov
into
repz
ljmp
and
fwait
mov
add
aaa
add
pop
out
add
cmp
imul
je
push
add
outsb
add
or
add
shlb
loop
jle
out
aaa
mov
sbb
mov
jmp
daa
mov
dec
add
add
orb
add
xor
push
add
cli
lret
add
xorl
xor
push
add
xlat
ja
in
push
add
iret
sarl
add
aam
ficomps
pop
dec
test
cltd
jecxz
loop
ret
mov
inc
add
in
pop
add
push
mov
xchg
mov
dec
add
cmpsl
andl
int3
out
xchg
outsl
sub
inc
sbb
jmp
xor
mov
dec
add
add
add
std
jmp
add
xor
subb
imul
mov
mov
or
add
xchg
or
mov
dec
add
add
add
add
mov
roll
addr16
ficomps
nop
jbe
and
or
push
inc
adcb
add
mov
add
inc
add
lret
or
ret
sbb
add
add
dec
add
jne
dec
repz
mov
aad
add
sub
fidivl
sahf
push
add
xor
or
lret
rol
aas
out
lds
jmp
out
add
inc
sbb
outsb
add
mov
test
arpl
and
or
add
iret
sub
sub
jl
cltd
pop
xorb
cmpsl
lret
fstp
adc
jg
add
add
loopne
add
inc
add
shr
add
repz
les
pop
lods
and
mov
sbb
add
add
mov
add
xchg
das
pop
push
add
sti
mov
add
popf
cmp
lahf
lods
add
pop
add
mov
add
add
push
add
jae
add
lret
add
mov
xor
mov
arpl
sti
mov
xchg
pop
fidivl
aas
shrl
out
fnsave
add
add
call
leave
fdivrs
add
or
add
scas
scas
int3
sahf
imul
jecxz
jo
inc
add
ret
push
add
add
add
cmc
add
call
inc
lcall
add
cmp
mov
dec
xchg
jmp
pop
aaa
outsl
and
shl
push
add
add
data16
jle
and
rcr
add
cld
add
adc
stos
fidivrs
loopne
leave
out
add
add
add
add
push
add
rcrl
enter
mov
adc
xchg
dec
add
insb
add
add
mov
add
mov
enter
loopne
push
add
xchg
ret
mov
jp
int3
push
add
sarb
aam
xchg
inc
push
xchg
add
outsb
add
arpl
into
aas
mov
cmpsl
lock
aad
push
outsb
add
add
push
add
jo
lock
adc
add
add
data16
insb
add
mov
add
loope
jb
sub
loopne
adc
cs
jbe
call
or
adc
cmp
hlt
cwtl
addb
repz
in
incl
adc
or
add
xchg
xor
sahf
popf
lods
lcall
mov
add
les
xlat
insb
add
sbbl
add
fwait
scas
inc
add
movsb
cmpsb
jb
lcall
xchg
aas
sti
jle
mov
pusha
add
neg
fcmovnb
push
aad
pop
and
jnp
add
cmpsl
sbbl
add
shlb
jmp
jg
cld
sub
add
das
push
add
xchg
sub
test
testb
xchg
sub
push
dec
add
pushl
imul
add
adc
jo
or
add
clc
sahf
fs
loopne
ret
add
sub
mov
sub
adc
rcll
add
lea
add
add
mov
push
inc
add
add
add
push
add
add
xchg
xor
loope
add
add
insl
adc
add
sar
jbe
or
stos
stos
xchg
shl
jp
push
add
jno
popa
test
add
mov
add
add
lahf
xchg
push
imul
add
add
loope
add
test
mov
nop
ret
das
jb
and
cmp
or
add
push
add
xor
add
sub
nop
popa
add
dec
scas
push
sbb
jecxz
add
xor
add
sub
dec
cli
jo
mov
add
push
mov
ret
dec
add
xchg
add
clc
or
and
sbb
lods
pushf
aas
cmpsb
pop
add
dec
add
mov
push
add
and
inc
add
and
mov
sbb
dec
add
add
rol
js
fsts
cld
rcl
data16
movsl
ret
jno
cli
inc
cmp
out
push
push
add
inc
mov
jae
add
movsb
std
push
shlb
xchg
or
loop
lret
loopne
mov
mov
fldl
lret
loopne
and
mov
inc
add
mov
add
or
je
pop
into
inc
lds
adc
push
mov
movsl
dec
add
adc
je
jns
aam
stos
sbb
jne
add
movsb
aaa
mov
test
mov
adc
in
add
lods
aas
mov
add
xor
rcrl
add
push
add
mov
adc
mov
dec
add
add
cmpb
add
add
fwait
data16
mov
js
add
inc
out
xchg
insb
add
xlat
add
test
cmp
pop
orps
out
sub
adc
fcmovbe
lcall
pop
add
rep
add
mov
add
popa
sub
push
add
push
add
add
roll
sar
andb
mov
negb
loope
add
push
add
add
jbe
pusha
add
add
adc
loopne
aaa
rcll
icebp
mov
xchg
movsl
xor
fisubl
stc
sbb
sub
add
add
psrad
adc
jmp
insl
repz
mov
sahf
add
add
mov
add
insb
add
add
add
rcll
rcl
sbb
mov
add
in
inc
add
mov
xor
and
nop
test
mov
test
push
shr
addr16
mov
fldt
add
fsubs
add
add
add
lock
imul
adc
lods
movsl
add
add
cmp
out
popf
faddp
pop
add
mov
add
icebp
shlb
add
add
lea
shll
add
lahf
jle
imul
in
xchg
in
fs
rcrl
add
adc
mov
mov
or
pop
mov
mov
pop
and
xor
movntq
mov
jo
pop
jg
leave
hlt
push
mov
mov
dec
mov
jmp
pop
ljmp
add
out
push
add
sub
stos
mov
xchg
add
cmp
mov
add
push
shll
xor
add
lcall
int
rorl
add
add
clc
xchg
push
push
add
in
xchg
popf
int
add
mov
dec
add
leave
and
imul
add
add
push
add
or
push
add
insb
add
add
push
add
into
jo
xor
add
adc
js
adc
xor
gs
icebp
in
mov
sahf
enter
sub
mov
jnp
add
add
hlt
sub
xlat
xchg
scas
add
push
add
add
scas
popa
dec
and
cmp
add
bound
and
add
mov
xorb
add
out
mov
ret
shlb
sbb
cltd
fsin
sub
sub
shrb
push
and
addr16
add
aad
or
popa
jno
gs
aas
dec
fsubrl
add
lods
fwait
dec
add
add
mov
sahf
cmp
dec
fiaddl
push
add
ficompl
dec
add
mov
fwait
or
repz
add
lret
mov
lret
jbe
movl
mov
push
sarl
or
shrl
xor
adc
loopne
fimull
cltd
aam
sbb
into
xchg
imulb
test
ja
add
add
leave
xchg
je
sbb
sub
mov
add
add
push
add
push
add
mov
lods
mov
mov
add
sub
mov
or
scas
xlat
and
sub
rcrb
mov
fwait
sub
push
pop
stos
in
push
add
insb
add
shll
add
mov
lahf
dec
add
sbb
imul
add
mov
sub
xchg
dec
add
cmp
dec
jbe
mov
add
shrl
add
outsb
add
push
push
add
push
add
add
add
add
sbb
add
add
and
add
in
arpl
lret
fistps
add
aam
dec
add
mov
test
outsl
push
add
shlb
mov
gs
add
push
add
xor
jge
xchg
xor
add
pop
add
jnp
add
jno
enter
sbb
sahf
loop
fdivrs
mov
popa
sub
cmp
add
movsb
push
js
repnz
idivl
pusha
add
add
push
add
inc
add
add
pop
add
cmp
mov
pop
xchg
fsubrl
ficompl
or
repz
add
test
add
jle
in
mov
add
jl
pop
add
inc
add
out
stos
add
add
cmc
iret
xchg
addr16
movsl
outsb
add
sbb
pushf
shlb
mov
add
xchg
add
sbb
mov
sub
cld
fisttpll
cli
out
add
popa
rcrl
mov
add
xchg
inc
mov
roll
add
pop
sub
std
insb
add
and
dec
std
mov
ljmp
jmp
push
add
maxps
ret
and
xlat
sub
push
add
add
push
add
repz
add
add
xor
imul
call
cmpsl
into
dec
icebp
dec
add
push
add
enter
loopne
push
add
roll
dec
add
add
decb
add
ror
add
loop
out
add
shlb
sub
sbb
test
jmp
adc
add
insb
add
lods
jo
cmp
aad
xor
loope
add
rol
sub
iret
in
push
add
add
fisttpll
add
js
and
xor
pop
add
cli
das
sbb
mov
jp
ficomps
jb
mov
mov
mov
add
in
jmp
add
repnz
xor
add
inc
add
test
cmp
mov
pop
add
mov
add
adcl
subb
push
lar
jnp
add
add
add
add
nop
call
add
add
repz
add
ljmp
iret
inc
add
or
gs
mov
hlt
andb
sbb
pusha
add
add
add
lods
pop
add
and
jo
xchg
dec
mov
xchg
movsb
adc
subl
jmp
add
add
call
cmp
add
and
mov
pusha
add
rorl
add
add
push
add
mov
mov
mov
mov
sub
inc
add
mov
roll
and
add
icebp
pop
cli
ja
add
pop
xchg
mov
iret
mov
jbe
mov
lods
mov
xorl
pop
lret
add
xchg
aam
dec
in
sbb
inc
and
xchg
sub
gs
mov
adc
add
bound
jbe
aaa
inc
add
xchg
add
add
fadds
add
loopne
sahf
icebp
add
mov
adc
dec
test
add
aam
or
sbb
sti
in
mov
inc
push
add
add
daa
mov
cmc
xchg
mov
sub
stos
hlt
addr16
mov
add
add
mov
pop
add
nop
leave
nop
lods
insl
orb
lds
cwtl
inc
lret
rolb
mov
mov
or
or
imul
xor
inc
gs
add
cmc
add
push
add
add
sbb
xor
push
add
add
iret
gs
add
cmpsb
pusha
add
add
pop
cmc
pusha
add
cmp
mulb
outsl
outsl
jnp
fistpl
mov
and
cmp
leave
stos
mov
int
add
int3
mov
xor
mov
pop
add
pop
insl
mov
add
xor
and
lds
mov
add
cld
iret
push
xchg
mov
aas
mov
mov
push
add
sti
adc
xor
mov
add
test
mov
dec
rclb
add
add
pop
ljmp
or
sub
add
sub
add
add
add
xchg
shll
add
push
add
cld
pop
add
push
add
add
movsl
add
add
ret
jge
add
frstor
add
int3
add
jnp
add
rorl
sbb
mov
test
xor
cltd
lock
pop
add
mov
mov
outsb
add
add
xchg
imul
add
dec
push
ljmp
fisttps
lods
in
js
adc
add
mov
push
add
xchg
jae
and
repnz
push
out
mov
add
or
test
xchg
insl
dec
add
insl
cltd
and
cs
sbb
or
in
mov
add
shrb
xchg
lods
int
shrb
in
stc
int3
outsb
add
dec
add
adc
xor
fildl
add
push
add
add
stos
out
in
ljmp
add
pop
cmp
loopne
inc
sbb
lea
add
addr16
or
xchg
add
xchg
sub
mov
mov
jne
lock
jge
popa
aad
add
fldt
add
add
iret
daa
mov
cmc
mov
xor
lods
mov
mov
insb
add
ss
sub
add
movsl
xor
cli
rorb
mov
out
add
push
pop
xchg
add
mov
cmp
pusha
add
fisubl
or
mov
add
mov
jne
daa
aad
dec
faddl
add
add
add
test
and
popf
add
add
loope
add
add
add
xor
and
dec
add
inc
sbb
add
sub
add
add
xor
mov
xor
fstl
add
jae
add
out
and
stos
insl
add
mov
ja
loope
dec
inc
fidivl
push
add
add
in
sti
mov
inc
add
mov
add
sub
sbb
add
add
pop
aas
mov
js
sbb
dec
add
jmp
push
inc
add
jle
popa
imul
insl
jbe
or
bnd
sahf
outsb
add
sti
fnstcw
dec
add
and
add
in
add
ret
aam
add
fwait
push
lcall
subl
das
xor
sub
add
add
mov
push
add
popl
push
std
xchg
inc
add
popa
add
or
das
dec
add
cld
lods
imull
cmc
xchg
xchg
xchg
outsb
add
xchg
mov
bound
cmp
std
test
lea
xchg
dec
inc
push
jge
add
add
pop
into
lret
add
stc
icebp
cwtl
data16
add
ret
xlat
int3
lcall
hlt
test
add
cmp
jge
pop
mov
inc
inc
add
pavgb
mov
add
fnclex
jbe
leave
and
pop
in
mov
test
push
add
imul
pop
add
aam
add
daa
out
add
add
add
outsb
add
add
pushf
das
icebp
xchg
or
lods
rorl
add
add
push
add
add
in
sub
cmpsb
lock
push
add
enter
add
xor
adc
movsl
add
cwtl
adc
popf
and
fmuls
fstps
cmc
popa
movsb
mov
js
test
add
push
add
mov
add
adc
lea
mov
push
jecxz
pop
add
jl
subl
mov
sbb
mov
dec
add
mov
add
cmc
ret
add
and
add
test
cld
imul
outsb
add
inc
jae
test
ret
test
xor
add
jg
and
mov
add
mov
add
mov
enter
fdivs
add
add
std
sti
rorb
inc
push
push
add
jbe
ret
add
movsb
or
cmp
mov
pop
cmp
call
mov
stc
pop
add
cmp
xchg
orl
push
push
add
add
add
add
add
sub
jns
add
inc
or
out
jnp
cltd
sahf
insl
or
jge
popa
and
sbbb
xchg
lahf
xchg
fdivp
cmpl
adc
movsb
cmp
scas
mov
jae
add
add
cwtl
pop
xor
out
sub
add
push
add
add
jo
ffree
push
add
jb
sbb
add
inc
add
js
xchg
cmp
sbb
cmp
in
in
out
mov
push
add
or
adc
pop
mov
cmp
add
adc
push
aaa
mov
add
aam
testl
push
mov
repz
testb
mov
adc
add
push
add
add
sbb
cmp
add
add
cmpsb
test
jecxz
add
mov
mov
add
cld
xchg
sub
dec
add
add
add
arpl
push
add
sub
xor
shl
mov
add
unpckhps
jae
bound
add
in
or
add
xor
add
add
cltd
xor
add
rolb
xchg
add
add
add
cld
mov
notl
dec
add
stos
je
ja
sahf
jg
inc
add
dec
add
lcall
dec
add
add
add
sub
inc
push
or
pusha
add
add
add
dec
dec
dec
add
push
add
add
mov
mov
cmp
adc
sbb
cltd
enter
dec
add
jecxz
add
add
xchg
mov
add
rcl
add
sub
mov
movl
and
pop
add
mov
aas
add
pushl
add
xor
les
add
mov
mov
ljmp
into
or
cli
xchg
mov
idivb
add
jo
mov
dec
add
mov
add
mov
test
mov
adc
loope
add
call
lcall
add
add
insb
add
scas
test
shrb
add
cmpsb
in
clc
sar
repz
lcall
popf
popf
xchg
fcmovb
mov
sbb
cmp
xor
add
lret
add
lods
mov
add
test
push
add
jo
mov
andb
or
push
add
push
push
add
inc
lcall
dec
into
pushf
inc
add
arpl
fwait
imul
adcl
cmp
add
and
dec
add
lods
iret
stc
stos
inc
add
idivl
stos
das
xchg
pop
add
xchg
push
into
icebp
mov
hlt
push
add
xchg
sbb
adc
xchg
push
add
pop
push
decl
andb
movsb
mov
add
add
hlt
xor
addr16
roll
add
mov
or
inc
test
add
inc
add
add
jno
rcrl
push
repnz
add
mov
subl
add
mov
mov
push
add
jle
leave
mov
mov
fadds
add
jmp
add
add
pop
mull
add
add
push
xor
lret
jbe
mov
clc
inc
add
cltd
in
outsl
incb
mov
add
aam
add
sti
mov
divl
sub
mov
jno
lods
pop
add
add
lcall
xchg
xor
popf
sarb
cmpsl
pop
lahf
sbb
sbb
flds
stos
clc
cmpsb
pop
pop
in
jecxz
js
ficoms
jl
xchg
insb
add
adc
je
xchg
add
notb
add
fstl
mov
inc
add
add
dec
add
add
and
rol
xor
add
jecxz
mov
mov
sbb
out
or
test
leave
js
std
adc
mov
xor
inc
or
lock
ja
add
cli
mov
int3
fidivs
stc
out
add
push
push
cs
add
je
insb
add
sub
lret
mov
fmuls
aam
add
add
sub
je
into
ficomps
cmp
add
cmp
dec
add
jno
or
int3
shll
mov
repnz
cmpsb
mov
mov
add
dec
add
add
out
inc
or
imul
in
fnop
sahf
iret
lods
addb
add
add
push
jl
add
pusha
add
and
rclb
add
xlat
xchg
xor
cmpsb
outsb
add
and
icebp
and
push
add
js
add
mov
icebp
xchg
cmp
dec
xchg
adc
gs
imul
or
cmpsb
lcall
jmp
fistl
cmp
sbb
jno
add
dec
add
lock
scas
or
add
xor
sub
outsl
popf
hlt
push
pop
add
dec
mov
pop
jb
and
cwtl
lods
push
add
cmp
hlt
xchg
cwtl
sbb
cmp
fsubrl
add
loopne
add
add
dec
add
js
test
iret
push
cli
sbb
xchg
xchg
xchg
sub
pop
push
xchg
pop
rorl
shrb
stc
mov
add
sahf
imul
add
pop
sbb
add
jnp
mov
add
or
dec
test
sbb
mov
out
add
xor
xor
cld
xlat
xchg
inc
add
adc
or
sub
gs
sbb
add
sub
fildll
push
add
pop
add
jnp
ror
imul
pop
xchg
int
test
add
jbe
test
push
pop
add
mov
jae
mov
pop
add
mov
ljmp
in
adc
jp
xchg
sarl
add
pop
add
ja
mov
lret
pop
daa
add
add
jg
decb
xor
and
jae
mov
jge
nop
dec
add
gs
mov
out
add
pop
add
add
aas
mov
and
or
mov
jp
add
cmp
test
sbb
cmpsb
icebp
or
movsl
rolb
repnz
adc
ljmp
jno
xchg
daa
shll
add
add
xchg
adc
fst
adc
sbb
or
mov
add
add
pop
xor
mov
add
out
add
sub
sbb
in
add
xor
adc
inc
enter
add
xchg
dec
subl
mov
scas
fwait
enter
out
mov
add
xlat
add
fistpl
add
test
mov
in
add
add
testb
sti
dec
add
stos
add
pop
add
pop
add
nop
mov
add
inc
add
int
insb
add
ja
add
pop
loop
push
add
jge
add
xor
in
jg
add
imul
adc
mov
push
ret
in
call
pop
add
faddp
inc
js
adcb
jl
push
add
xor
lods
je
je
lea
mov
add
add
jg
add
mov
add
mov
xchg
cli
loope
mov
mov
xor
add
aad
jl
sub
aas
jo
mov
call
add
add
iret
sub
aaa
jmp
and
pop
fcmovne
cmp
add
shlb
add
dec
mov
add
add
test
cmp
out
nop
lock
add
cmp
adc
add
jne
rcll
pop
add
mov
push
test
add
mov
add
bound
jg
add
mov
add
add
jb
inc
add
adc
add
jp
xchg
pop
add
add
fwait
add
fwait
mov
push
add
add
mov
js
loopne
add
test
mov
mov
add
push
add
movsl
adc
aam
add
lock
inc
fiaddl
add
movsb
mov
cmp
movsb
push
add
test
loop
or
pushf
sar
add
fsubl
inc
or
push
add
xchg
pcmpeqb
xor
sub
add
add
add
add
add
add
movsb
adc
jno
mov
mov
adc
add
sub
test
xor
mov
inc
je
xchg
aam
inc
add
add
lds
adc
xchg
dec
dec
add
mov
push
mov
decb
push
add
xor
mov
notb
cltd
scas
dec
adc
pop
add
push
add
add
push
pop
inc
dec
add
sarb
out
add
dec
jl
pop
orb
sub
addr16
add
ja
push
mov
add
pop
add
sub
mov
mov
add
lcall
add
add
je
add
mov
frstor
jmp
xchg
push
adc
xchg
or
movsb
xchg
add
pop
xor
fsubrl
mov
enter
add
pop
add
mov
and
test
add
pop
add
mov
add
adc
push
add
or
xlat
jae
loop
pushf
lcall
push
add
std
and
stos
lea
add
and
xchg
sar
inc
add
jge
add
xchg
loopne
add
mov
add
add
and
mov
mov
add
mov
ret
mov
and
int
scas
push
add
dec
add
fldt
pop
jmp
jnp
and
add
mov
add
cmc
push
add
mov
add
notb
adc
out
aaa
out
fcoml
push
fildl
movsl
arpl
stos
or
stc
mov
cmp
add
and
shrb
or
mov
mov
mov
add
sub
lods
stc
pop
subl
add
icebp
mov
add
add
add
add
pushf
and
push
and
outsb
add
sub
aad
sar
in
mov
push
push
shlb
fcompl
inc
add
xor
fildll
mov
cmp
push
mov
divl
in
adc
loopne
jno
push
add
add
push
mov
add
add
push
imul
bound
stos
inc
mov
push
add
push
add
add
test
rcrb
in
adc
or
cli
lds
ljmp
out
imul
scas
xor
insl
mov
add
add
and
sti
mov
adc
popa
push
add
fucom
mov
andb
les
jmp
or
fsts
jge
and
inc
daa
pop
add
and
add
sti
nop
dec
add
push
add
call
rcr
xor
fadd
jae
pop
mov
jns
scas
ret
aaa
mov
add
push
add
aaa
mov
add
mov
add
add
das
scas
sbb
and
cli
fwait
dec
add
movsb
andb
add
pushf
cmpsl
mov
mov
xor
shl
pushf
loope
pop
add
cmp
pop
add
test
hlt
xchg
in
lret
fwait
pusha
add
leave
popa
adc
xchg
mov
add
test
rcl
xchg
xor
xor
push
add
push
test
lahf
mov
test
add
add
xlat
bound
cmp
ret
xchg
add
add
and
jb
jp
pop
or
int
cmp
std
mov
dec
add
outsl
pop
nop
mov
inc
popa
std
jp
loope
jl
adc
adc
outsl
add
sbb
dec
add
add
add
sarb
cmp
jp
stos
add
mov
jo
sbb
add
mov
add
jle
add
add
push
add
mov
jmp
or
out
je
dec
xchg
in
movsb
xchg
orl
mov
add
add
add
sbb
pop
gs
xchg
push
xchg
cld
adc
jmp
adc
sub
sahf
orl
idiv
sub
ret
adc
in
push
add
xorb
fsubr
xor
add
xchg
stos
mov
add
rol
lods
xlat
int
push
add
pop
popa
and
sbb
mov
pop
add
add
add
lods
xlat
incl
popa
sahf
xlat
out
mov
lret
clc
cltd
push
and
popa
insl
inc
add
jecxz
out
fistpl
add
loop
inc
cmp
push
js
scas
mov
mov
add
add
add
bound
ret
inc
add
pop
fwait
add
xlat
push
add
or
pop
mov
add
add
mov
add
jmp
fld
and
xchg
dec
nop
xchg
scas
in
add
pop
push
add
add
or
in
dec
add
aaa
push
bound
aas
lcall
add
into
std
xchg
pop
add
mov
in
test
and
insb
add
aam
and
inc
fcompl
sub
lds
cmp
fwait
scas
mov
add
out
out
add
mov
addl
pop
add
pop
add
call
pop
repnz
add
test
inc
pop
add
orl
jo
lahf
aad
add
push
enter
sahf
lock
repz
cmp
mov
add
test
movsb
jecxz
add
mov
inc
push
lods
xchg
xor
jae
sbb
cltd
adc
cltd
pusha
add
lea
mov
adc
add
xchg
cs
adc
cmc
repnz
xchg
clc
inc
add
adc
sbb
mov
add
in
add
add
sbb
xor
mov
sbb
mov
dec
add
add
fcmovbe
fimull
push
add
dec
add
add
mov
cmp
xor
add
mov
sub
popf
or
fdivs
lea
add
lods
xor
or
lds
pop
daa
cmpsl
leave
and
aas
lahf
clc
inc
add
add
add
add
test
in
add
or
adc
xor
mov
add
mov
pop
lea
push
add
mov
or
add
and
outsb
add
xor
lahf
jmp
add
fnstsw
add
dec
add
cmpsb
jae
add
add
add
out
fistpl
add
adc
movl
xor
sbb
jno
add
shlb
stos
bound
aad
fcmovne
test
add
jge
and
jmp
pop
add
js
xor
repnz
jle
inc
add
lcall
mov
imul
shll
scas
shrb
mov
dec
add
add
pop
movsl
push
add
pop
push
add
popf
xor
add
loope
sbb
mov
add
add
add
sbb
ljmp
add
mov
add
mov
xor
mov
add
xchg
sub
add
dec
add
cmp
add
add
cmp
push
add
test
pop
add
or
pop
add
jne
cmp
jecxz
loope
cmp
xor
and
data16
repz
mov
xchg
add
add
adc
clc
call
lea
lcall
mov
add
lret
adc
daa
jmp
cmpsb
mov
sbb
or
inc
aad
outsl
bound
std
adc
mov
sbb
sub
jecxz
add
mov
mov
adc
adc
jl
xchg
lcall
test
movsl
ds
xchg
imul
xchg
xlat
mov
jecxz
add
add
adc
add
jne
add
cltd
push
add
add
mov
cmp
popf
lods
mov
pop
jl
and
push
add
xor
fldl
adc
cli
push
add
add
lahf
call
add
sub
add
lods
sub
push
add
stos
dec
xchg
adc
rol
add
add
add
sbb
out
xor
out
enter
add
xchg
mov
addl
out
lahf
lcall
fstps
sbb
clc
pop
data16
clc
jb
mov
mov
push
add
dec
add
add
ret
insl
sub
cmp
jp
pop
inc
roll
test
add
mov
dec
pop
xchg
ret
stc
mov
add
mov
add
jl
imul
sub
or
aam
dec
pushf
and
add
mov
mov
add
adc
int3
lock
fmull
jmp
jno
call
cmp
sub
dec
add
mov
add
test
add
add
fnstsw
jp
mov
and
nop
inc
aad
xor
xchg
mov
add
movsl
cmpsb
jg
inc
testl
shlb
add
add
push
add
ja
out
mov
add
in
add
loop
jno
push
add
xchg
xchg
xchg
sub
cltd
popf
add
add
push
add
sbb
mov
add
ja
lea
mov
sbb
add
fisttps
sub
xor
inc
add
mov
mov
add
add
add
rcl
std
nop
mov
add
arpl
add
cmpl
mov
add
add
cmp
mov
push
add
les
stos
mov
add
in
jne
cld
dec
daa
jns
icebp
mov
add
mov
add
call
add
daa
es
aad
add
push
add
add
leave
popl
xor
out
add
lret
add
je
pop
mov
jmp
orps
and
add
adc
insl
ret
subl
sarl
add
add
xchg
bound
sbb
mov
arpl
iret
lods
jb
cli
sub
or
xor
lock
pxor
ret
lcall
add
push
add
add
pop
add
add
add
jno
hlt
orl
mov
inc
add
add
add
add
add
add
sub
pop
rcrl
add
sar
sbb
add
mov
xchg
enter
add
lea
add
ficoml
hlt
nop
shll
add
mov
mov
loop
add
add
mov
and
add
int3
jb
jne
sub
mov
add
enter
adc
push
add
adc
repz
add
jns
roll
add
xchg
push
add
cmp
shrb
mov
xchg
mov
mov
add
clc
loop
movsl
repnz
pop
add
out
das
add
dec
pushf
mov
idivb
add
adc
inc
add
add
mov
gs
jmp
or
daa
ljmp
dec
add
lods
sbb
xlat
das
push
add
out
cmp
dec
xchg
fistps
add
add
add
jne
add
shrl
lods
mov
xchg
add
fcmovu
mov
inc
add
xchg
xchg
xchg
xlat
pushf
icebp
lods
adc
adc
es
adc
jb
push
add
add
inc
add
add
add
xor
xor
outsl
out
clc
das
aad
push
out
add
cmp
icebp
xchg
add
jl
sbb
add
mov
add
pusha
add
jo
push
push
mov
jp
mov
movb
cmp
and
jb
jmp
mov
pushf
add
add
adc
add
mov
lahf
pop
mov
adc
loope
add
fsubs
gs
fdivrl
int
add
mov
pop
add
ja
in
daa
xchg
out
inc
add
fucomi
movl
aam
call
fmuls
mov
add
xchg
imul
or
add
add
daa
cld
xor
loope
mov
add
add
inc
push
xor
xchg
mov
faddl
add
mov
aas
push
add
popa
loope
add
ret
insl
sub
fistpll
test
xchg
pop
mov
mov
add
add
xor
dec
add
add
or
std
jo
filds
add
sbb
je
xor
add
add
mov
scas
inc
add
sbb
rcrb
add
loop
aam
jl
dec
add
add
sub
or
dec
add
add
out
add
add
add
mov
pop
sub
cmp
cmp
cmp
add
xchg
lret
inc
add
lods
lock
sub
pop
or
xlat
add
push
add
icebp
push
add
out
jae
sub
shlb
sbb
or
inc
add
mov
jbe
or
add
push
add
sbb
ljmp
push
add
add
xorps
mov
add
add
push
cmp
add
add
sbb
sbb
sbb
fildl
add
inc
add
push
stc
aam
adc
mov
inc
add
sub
ror
or
add
cmp
loopne
dec
aaa
push
add
daa
sub
or
in
add
add
jnp
push
or
dec
xchg
mov
add
sbb
mov
inc
add
cmc
cld
das
dec
add
xor
add
popf
pop
cltd
push
imul
inc
add
rorb
jns
pop
add
pusha
add
addb
xchg
fstl
or
add
push
add
bound
push
add
cmp
push
add
jo
bound
xchg
leave
jmp
push
out
subb
mull
mov
lods
lahf
inc
add
pop
add
repz
add
stos
jne
add
cmpsb
push
outsl
jl
sub
add
add
cli
inc
cltd
ljmp
add
add
push
insl
rolb
ljmp
pop
add
jns
inc
add
test
xor
jbe
popf
mov
jp
bound
jecxz
mov
add
add
push
add
jecxz
xor
flds
add
int3
sub
lock
fsubl
add
cmp
movsl
test
mov
and
jae
sti
xor
add
and
sub
add
mov
sub
push
add
out
outsl
pop
ret
mov
subb
xchg
aad
sub
push
add
rorl
add
outsl
daa
ret
mov
aam
jle
add
push
movsl
ret
push
add
pop
outsb
add
notl
add
test
js
cli
sahf
add
add
jecxz
adc
movhps
add
add
addl
scas
js
jge
sub
mov
cmpsl
sahf
sbb
pusha
add
add
ljmp
add
pop
add
jno
and
add
inc
sub
repnz
out
add
push
mov
add
outsl
add
call
iret
test
add
add
jl
scas
les
bound
aas
push
add
sarl
xchg
sub
xchg
ds
js
pushf
xlat
sbb
add
sub
imul
or
mov
add
mov
cmc
sbb
or
dec
add
rorl
add
jp
pop
mov
mov
add
add
and
xor
aas
pop
scas
mov
add
cmp
adcl
add
or
add
or
test
in
ret
ja
xor
mov
xchg
xor
sub
jb
cmp
xor
inc
jno
add
mov
int3
fwait
sahf
nop
out
popa
fwait
jge
sbb
mov
mov
adc
loop
push
add
les
add
push
add
popf
fst
adc
leave
ja
push
add
add
add
adc
test
jnp
add
add
mov
mov
push
add
shrl
dec
add
mov
add
shr
add
add
loope
test
mov
adc
mov
mov
pop
dec
lods
and
pop
jnp
pop
add
and
add
adc
add
add
inc
add
sbb
scas
sub
add
jmp
inc
js
add
add
sub
lods
add
cmpl
aas
out
cmp
add
push
add
add
push
xchg
xchg
cmp
orl
add
fisubl
push
mov
not
mov
insb
add
imul
mov
outsl
sub
aas
adc
dec
add
pop
add
sbb
dec
add
mov
sub
cmc
insl
divl
inc
and
clc
sub
xchg
in
jbe
or
insb
add
outsb
add
xchg
outsl
lret
jo
jne
add
add
jl
dec
fildll
fwait
test
push
add
pop
add
add
int3
int
add
mov
add
xchg
mov
call
lret
sbb
cmc
dec
mov
add
jecxz
sub
or
movsb
call
add
mulb
fidivl
jle
ja
cmpb
mov
sub
int
add
push
add
adc
xchg
incl
add
add
mov
adc
mov
add
pop
pop
or
cld
shr
xor
sub
ret
nop
movsl
xor
inc
add
pop
hlt
fidivrl
insl
test
shl
mov
insl
sbb
repnz
xchg
mov
scas
or
ja
add
inc
add
add
inc
add
lcall
int
outsl
add
add
jge
imul
add
jmp
jmp
mov
fsubrp
mov
out
add
in
aaa
divl
xchg
and
xchg
add
xor
out
xor
add
aad
pop
add
xor
mov
int
pslld
jmp
jbe
sbb
stc
inc
add
ret
fistps
sar
int3
mov
ljmp
inc
add
loopne
mov
add
add
add
add
or
iret
mov
cmc
dec
ret
stos
je
push
add
sbb
pop
dec
add
mov
inc
sbb
add
xchg
inc
add
jecxz
add
jae
and
mov
sahf
push
add
in
push
add
mov
dec
bound
xchg
es
jl
or
jae
jge
mov
mov
add
xor
add
add
js
popf
outsl
jl
int
add
call
in
arpl
flds
add
cmp
into
push
push
add
rclb
adc
out
cmc
or
push
xchg
xor
data16
lret
push
mov
adc
jl
call
mov
lret
push
insl
mov
ret
and
loope
dec
add
add
cmp
mov
out
xchg
bound
mov
add
ret
mov
add
jbe
repz
mov
hlt
sub
pushf
fnstcw
add
add
cmp
cli
inc
pop
add
mov
add
mulb
sub
popf
mov
add
add
pop
add
sbb
stc
lods
xor
dec
add
sahf
cmp
add
dec
add
add
aas
insl
stos
mov
je
les
sti
push
mov
add
add
push
add
repz
loope
add
xchg
mov
inc
insb
add
dec
add
add
out
frstor
xchg
gs
cmp
adc
xchg
cmp
sub
repz
loop
dec
add
push
daa
movsl
data16
lea
pop
scas
jo
sbb
test
sbb
add
push
add
mov
imul
shr
xchg
jnp
roll
inc
mov
hlt
fcoml
cwtl
hlt
aad
aam
add
cmp
ret
push
add
add
sarl
test
mov
clc
cwtl
out
repnz
add
add
sub
rclb
add
bsf
fcoms
sub
sbb
add
push
add
sub
fdivrp
out
jb
and
in
mov
inc
add
lahf
dec
mov
pusha
add
push
imul
add
add
clc
enter
push
add
add
push
add
and
pop
add
and
mov
add
mov
or
adc
pop
add
dec
test
mov
dec
and
mov
add
lret
add
push
jns
lods
movsl
push
add
add
add
add
xlat
lcall
push
add
add
push
add
jmp
inc
add
fidivrl
add
fisttpl
mov
mov
add
add
nop
shlb
cmp
or
jecxz
add
mov
or
movsb
mov
add
int3
jne
mov
pop
pop
jmp
xchg
add
stos
out
pusha
add
sbb
add
add
fists
inc
add
jmp
fisttpll
add
leave
inc
add
cmc
mov
divb
pop
je
in
arpl
mov
popa
movsb
insb
add
dec
cmp
in
dec
add
or
cmp
ss
enter
mov
add
add
stos
cmpsb
stos
xchg
subl
mov
pop
jg
add
and
pop
add
and
pop
add
add
and
adc
imul
pop
mov
add
out
jnp
mov
add
cmpl
incb
sbb
je
icebp
jg
nop
xchg
jbe
lea
add
mov
movsl
inc
or
dec
add
fildll
in
sub
mov
and
cmp
lods
add
std
scas
inc
popf
lock
add
add
mov
inc
add
clc
sub
or
cltd
and
mov
sbb
mov
mov
subb
addl
add
int
bound
negl
add
jb
out
mov
pop
js
jl
jge
inc
in
bound
mov
loop
subl
or
pop
add
test
xchg
aaa
mov
jge
sbb
pop
add
mov
icebp
pushf
sahf
sub
scas
adc
fistl
add
in
mov
aaa
outsb
add
dec
add
ret
cmp
stos
int3
call
cmp
jo
pusha
add
jns
add
add
add
add
pop
add
je
add
add
add
mov
add
lods
mov
add
aad
pushf
cmp
or
in
hlt
aaa
xchg
loopne
add
xlat
push
add
and
push
add
lret
int3
jae
mov
call
rol
dec
add
add
mov
dec
add
js
roll
imul
add
in
test
jp
mov
add
or
std
pop
scas
sub
add
dec
add
shlb
clc
add
pop
add
fildl
cmc
scas
jg
cmpsl
add
adc
sbb
xor
fcompl
xchg
std
aas
dec
faddl
add
sub
lock
loopne
mov
push
add
mov
scas
punpckldq
jne
pop
imul
xchg
xchg
ret
xor
pop
add
sti
in
rcrb
daa
pop
jo
adc
aam
xchg
outsb
add
add
sub
int
test
add
movsb
push
add
ret
add
cmp
rcrl
add
loop
pop
add
movsb
mov
test
int3
jecxz
mov
sbb
movsl
or
add
add
add
push
aas
pop
mov
jb
loopne
jg
jnp
in
leave
inc
pop
jmp
jg
mov
mov
add
add
xor
pop
dec
add
in
jmp
sbb
pop
mov
test
outsb
add
enter
jp
addr16
add
add
sbb
test
fdivl
add
rcll
add
add
add
add
push
add
add
and
fmull
inc
add
pop
aaa
sub
rcr
adc
sbb
aaa
daa
popa
push
add
shrb
add
std
aas
rclb
add
push
aas
jge
stc
fmulp
sbb
add
xchg
cmp
push
add
sub
jns
sbb
sbb
hlt
sub
push
add
pop
add
jnp
cmc
mov
xchg
jl
mov
jns
add
xor
js
stos
std
push
add
push
add
jge
adc
adc
add
fcomp
pop
orb
push
pushf
mov
daa
inc
add
add
stos
push
add
add
cmp
add
jmp
sub
and
shrl
add
add
push
cmp
cwtl
sub
pushf
xorl
cltd
sub
cli
adc
sbbl
xchg
incl
in
inc
mov
mov
and
out
ret
call
daa
test
and
mov
add
mov
jl
mov
daa
test
push
adc
aaa
push
and
inc
jmp
add
pop
and
add
inc
mov
adc
add
mov
add
stc
stos
and
cmp
pop
pushl
in
pop
cmp
pop
jg
add
jg
jns
dec
add
add
mov
push
push
add
sbb
subl
add
pop
sub
inc
cmp
add
add
rol
lods
push
daa
adc
out
or
xlat
imul
add
in
scas
sbb
mov
add
inc
add
and
into
xor
arpl
out
pop
lcall
popl
jne
add
push
jecxz
fdiv
dec
or
sbbb
bound
outsl
pop
popf
xor
lds
push
inc
add
js
sub
jb
inc
add
add
bound
ljmp
add
pop
add
pop
jae
push
mov
add
add
call
insl
inc
aam
or
ret
hlt
je
adc
incl
iret
arpl
imulb
movsl
lea
aas
sbb
add
faddl
aas
fiaddl
add
movsb
aad
add
jnp
or
xchg
push
add
xorb
mov
or
sub
push
add
xlat
mov
add
pop
add
test
dec
add
out
xchg
fildl
add
in
imul
add
stc
add
add
ret
add
pusha
add
sub
xlat
add
je
mov
jno
jecxz
movsl
and
xchg
push
add
mov
push
shl
add
leave
push
sbb
mov
xchg
hlt
mov
jg
cmp
or
ret
jp
sbb
movsb
mov
cmpsb
movsb
daa
pop
ja
add
add
add
mov
add
add
mov
rorb
mov
add
add
out
adc
call
adc
sub
cli
mov
rolb
add
sub
clc
stos
or
sbb
or
cld
shlb
xchg
dec
add
js
testb
fwait
add
and
inc
add
add
xchg
vpunpckhqdq
and
ror
jp
xchg
adc
ret
add
mov
fisubrs
add
std
add
xor
rorl
cmc
inc
stos
sbb
add
in
dec
add
jbe
lea
or
xchg
xchg
inc
push
add
dec
cmp
mov
in
movsb
aaa
inc
push
push
movsb
popf
in
sbb
jo
push
add
pop
stos
das
stos
movsb
jl
mov
add
fucomp
add
lea
in
add
and
fs
stc
xchg
xchg
adc
dec
adc
sbb
dec
add
push
sub
pop
add
push
add
mov
add
mov
jecxz
cmc
or
dec
add
cmpb
and
push
jae
imul
add
push
mov
out
mov
fisttps
nop
out
lds
int3
sti
daa
ficoms
add
popf
rorl
rclb
adc
add
mov
insb
add
add
mov
adc
push
add
cmp
shll
mov
add
inc
add
add
add
sti
aad
add
add
testl
xchg
add
add
add
add
add
nop
pop
dec
add
add
jb
sti
ret
sbb
mov
add
adc
pushf
jae
add
shlb
add
add
mov
sub
in
rol
dec
add
add
popa
daa
insl
ret
mov
loop
add
add
shll
xor
xchg
pop
cmpsl
in
cld
sbb
add
std
mov
jg
add
jmp
es
int
inc
add
add
sub
sub
add
xchg
mov
aad
inc
add
lock
add
pop
add
push
add
ret
data16
add
add
add
mov
push
mov
ljmp
or
lcall
outsb
add
scas
fcoml
dec
add
out
icebp
sub
add
add
int3
mov
je
xchg
mov
jecxz
add
pop
add
sbb
sbb
data16
add
sahf
mov
lods
les
add
in
inc
add
sbb
adc
mov
cmpl
add
cmp
mov
add
into
movsl
movsb
test
jo
cmp
or
daa
inc
add
push
add
dec
add
sbb
dec
add
add
sub
mov
pop
add
push
repz
mov
dec
add
das
jb
addr16
and
jg
jg
loope
add
js
insl
mov
nop
add
mov
aaa
imul
add
testb
add
inc
cmp
loope
je
lret
pop
lcall
mov
data16
sub
push
and
mov
or
dec
lds
add
push
add
mov
lahf
mov
mov
add
lret
cmc
mov
data16
push
inc
add
sti
mov
into
or
sbb
mov
subl
mov
add
add
outsb
add
add
jo
push
add
add
cmpsb
push
push
add
leave
lret
add
cmp
mov
pop
out
push
movsb
inc
add
push
enter
add
out
ret
add
pushf
jae
frndint
jge
push
add
cld
repz
sub
outsb
add
dec
add
sahf
imull
push
add
add
adc
xchg
push
add
add
fsub
or
jo
pop
test
jb
movsl
push
mov
adc
sbb
mov
add
xchg
adcl
ljmp
jns
cld
sub
int3
dec
add
bound
sub
adc
add
in
push
rorl
mov
xchg
dec
add
pushf
adc
mov
xchg
mov
sub
add
add
mov
mov
lds
add
or
sbb
hlt
push
add
xchg
into
outsb
add
das
push
add
orl
adc
sbbb
in
add
push
add
sbbl
add
xchg
call
hlt
mov
iret
xchg
roll
rorb
push
add
js
enter
pop
add
daa
sub
and
jnp
add
add
pop
jno
ret
add
push
add
pop
mov
fcmovu
add
xchg
int3
out
add
dec
add
pusha
add
inc
lea
das
pop
add
add
sub
add
clc
push
add
mov
xor
shrb
negl
add
andl
add
add
add
jg
dec
not
add
jne
lcall
and
add
add
add
add
repz
add
test
sub
push
add
add
mov
inc
add
jns
mov
clc
push
add
dec
add
add
outsl
xor
sub
negb
test
add
stc
sbb
inc
add
push
add
cmp
push
add
add
sub
les
sbb
ja
push
add
mov
cld
mov
add
sar
cmp
ret
push
push
add
adcb
clc
stc
aad
add
mov
mov
aas
and
mov
add
xchg
mov
imul
mov
add
cli
pop
insb
add
add
repnz
sti
mov
and
add
gs
cmp
outsl
inc
add
adc
cltd
sub
or
dec
push
add
sub
push
add
fsts
xchg
add
inc
bnd
add
xchg
fwait
add
add
add
mov
mov
stc
sbb
add
lods
inc
sbb
cmpsl
inc
xor
outsb
add
add
push
mov
add
and
sub
sub
push
incb
imul
mov
mov
add
mov
mov
mov
jo
lds
mov
mov
add
cmp
inc
adc
scas
add
pop
lret
mov
icebp
push
ret
imul
push
add
cmp
add
hlt
testl
jb
cli
dec
xlat
xlat
fbld
push
add
insl
adc
inc
sub
dec
pop
in
add
fiadds
add
jne
add
mov
add
add
push
add
add
movsb
fcoms
mov
mov
movsb
loopne
add
cwtl
orb
add
jnp
mov
pavgb
mov
ja
add
outsb
add
sbb
add
imul
mov
dec
ret
and
xchg
clc
push
add
mov
dec
loopne
add
mov
cwtl
xor
iret
mov
aas
push
add
pop
add
or
dec
add
sub
ret
das
adcb
movsb
cmp
jb
in
push
hlt
mov
add
leave
dec
stos
out
jbe
call
push
add
mov
jno
ss
mov
add
add
jg
rorl
cli
dec
push
add
add
lea
add
fsubrl
add
pop
cmp
out
stos
mov
shll
iret
rclb
jno
push
add
jno
add
imul
add
fildll
sub
mov
fwait
jle
imul
sub
lods
mov
cwtl
xchg
or
add
and
repnz
dec
add
jae
leave
insb
add
add
filds
jnp
add
cmc
adc
jns
add
pop
bnd
and
rorb
iret
mov
add
jle
into
rorb
xchg
popf
jmp
adc
cmp
call
adc
and
repz
add
dec
add
add
and
add
or
add
add
jmp
xlat
shrl
sbb
pop
add
cmpl
popf
int
adc
sti
mov
mov
jmp
dec
add
or
sti
push
add
in
and
xor
pop
add
push
add
add
popa
das
clc
out
jmp
fbstp
ret
lahf
jnp
add
mov
adc
or
xchg
mov
add
add
push
add
mov
and
inc
icebp
cld
cltd
or
rorl
inc
add
add
clc
sbb
bnd
xor
cltd
das
pop
add
add
xchg
fsubrl
add
mov
pop
add
cmpsl
dec
lock
shrl
aad
sbb
push
add
lods
sub
aam
bound
sti
sbb
jmp
nop
push
add
scas
add
add
pop
add
insb
add
enter
lcall
frstor
in
xor
test
cmpsl
hlt
jg
outsl
and
cmp
movsb
cli
xor
cli
xor
test
ret
lock
cli
jno
add
out
lds
add
add
jmp
mov
sub
mov
cmp
pop
push
add
xor
add
sti
ret
push
add
cli
mov
and
sti
jae
add
out
inc
pop
shll
inc
add
push
mov
sbb
xchg
pop
add
ret
add
dec
mov
les
sahf
mov
aas
and
fldenv
mov
mov
dec
clc
lock
cli
add
sbb
mov
sbb
add
add
mov
add
out
and
xor
out
add
cmc
aas
ljmp
add
orb
add
pop
add
inc
add
fcomip
push
cmc
xchg
jge
mov
add
sbb
scas
fsubrs
jg
js
lds
into
push
add
add
fdiv
mov
mov
add
fsubs
or
sbb
push
add
cs
mov
js
dec
loopne
add
or
cmpsb
js
daa
mov
mov
int
add
addl
xchg
mov
int
pop
add
add
add
pushf
jle
lcall
add
xor
sub
xor
add
add
cmpsl
or
mov
add
add
add
push
add
push
add
add
add
stos
call
mov
into
dec
sbb
jl
push
sti
add
sub
sbb
jmp
mov
or
add
add
jbe
rcll
aaa
std
inc
add
cmpsl
sbb
add
rclb
test
pop
add
add
jo
push
add
add
cli
outsb
add
add
mov
clc
sub
add
int
mov
or
jmp
add
add
adc
jle
jg
fistps
mov
add
xchg
pop
dec
ret
cltd
fwait
stos
roll
add
push
test
jb
arpl
cmp
add
pop
push
add
push
mov
mov
xchg
fcomps
add
cli
imul
mov
inc
add
pop
add
add
add
pop
mov
call
shlb
dec
add
push
add
add
or
sbb
popa
subb
repnz
mov
pop
push
add
in
add
mov
push
pushf
lds
repz
add
add
sub
add
mov
or
cmp
cwtl
nop
daa
xchg
lahf
sbb
daa
sbb
add
push
add
sub
mov
cwtl
sbb
cli
fisttpll
test
mov
fidivrs
add
lret
cli
adc
cvtps2pi
sarb
das
jne
and
imul
repnz
orb
mov
loopne
cmp
out
mov
add
dec
and
call
mov
add
or
fcomi
pop
jno
popf
insl
xor
adcb
ret
add
icebp
xor
cmpb
push
add
mov
push
xor
xor
mov
loopne
xchg
rcr
loopne
and
mov
cmp
out
in
add
push
add
cli
add
bound
fdivs
aad
in
outsl
mov
add
sub
dec
add
fnsave
add
adc
add
add
xchg
popa
xchg
das
in
cwtl
inc
xor
add
int3
add
das
jo
add
je
in
ret
xchg
inc
add
fdivl
mov
xchg
icebp
xchg
xchg
push
inc
mov
add
nop
mov
outsl
fildl
add
xchg
sub
pop
dec
add
add
in
pop
xor
rorl
lds
xchg
dec
scas
adc
adc
inc
add
fwait
daa
repz
add
fists
and
mov
adcl
jae
js
lcall
push
dec
imul
sub
mov
incb
mov
add
add
aad
inc
add
ljmp
add
into
sbb
bound
xchg
or
cmp
jae
mov
sub
add
sub
xorl
adc
rcll
scas
fstl
add
mov
ror
fsubl
sti
mov
imul
jge
jg
add
add
mov
add
add
inc
push
add
xor
cmp
jl
pop
shlb
add
add
jmp
add
push
add
add
scas
daa
jg
loopne
or
call
add
add
fmull
mov
mov
jge
xor
nop
cmp
mov
add
mov
xor
lods
adc
dec
add
jo
dec
add
dec
and
mov
add
aaa
add
add
adc
into
and
inc
add
dec
add
fisubs
add
add
ffreep
movl
add
popf
adc
ja
in
push
add
pop
push
add
add
mov
push
int3
rcl
shlb
cmp
bound
push
add
jle
rcrl
pop
cmp
hlt
add
or
dec
mov
dec
add
lahf
aaa
test
mov
loopne
ja
add
addr16
loopne
stc
arpl
mov
add
push
add
sub
cmpsb
xchg
cmp
test
aas
js
or
add
add
add
push
add
fwait
adc
jae
popa
jne
add
loope
mov
sbbl
movsl
clc
jnp
pushf
push
add
call
test
add
jno
jge
movb
ja
add
push
add
mov
add
mov
add
xchg
rcrb
and
jle
js
movl
inc
add
add
stc
xchg
add
xor
leave
adc
add
sbb
ds
inc
add
je
add
jne
add
push
add
out
or
test
xor
aas
out
stos
inc
ss
xchg
xchg
pop
add
into
ret
pop
add
add
push
add
add
std
mov
add
push
add
stc
ret
minps
add
loop
jmp
outsl
or
gs
jae
dec
cli
sbb
jb
pushf
xor
fisubrl
mov
mov
iret
mov
add
add
call
dec
xor
cmp
inc
add
add
add
jg
add
scas
rcrb
pusha
add
imul
inc
add
jno
pop
add
lcall
call
fsts
add
xlat
xchg
add
jb
jb
int3
test
stos
mov
add
add
mov
lods
mov
xchg
mov
bound
sub
add
add
add
mov
adc
ljmp
sbb
add
mov
add
cmp
jp
push
push
add
add
add
pop
add
jo
fcos
mov
add
sbb
pop
add
mov
add
xchg
out
sub
add
mov
add
aad
add
sbb
add
shl
add
sub
add
dec
pop
fld
outsl
cmp
rclb
test
adc
add
inc
jge
add
add
push
add
and
mov
fnsave
fbstp
pop
adc
adc
int
jae
cld
pop
add
add
sub
dec
pop
je
outsb
add
add
into
add
xor
or
in
sub
hlt
sub
add
add
push
lret
inc
test
mov
add
lds
out
seto
mov
push
sub
jae
adc
sahf
jecxz
jo
and
add
sub
inc
add
cwtl
or
nop
shll
lea
push
add
bound
fwait
add
sub
outsb
add
cmp
dec
sub
int
mov
jns
lahf
mov
dec
stos
jb
rcl
sti
jp
fisubrl
add
add
testb
dec
test
cmp
enter
push
mov
aad
push
inc
hlt
xchg
adc
aaa
dec
add
andl
aas
rclb
add
cld
call
add
sbb
fwait
push
mov
testl
add
inc
add
in
in
mov
jno
add
test
push
adc
mov
add
inc
add
push
add
je
fstpl
add
shrl
insb
add
add
adc
jge
add
add
inc
add
add
popa
dec
add
cs
add
push
add
ljmp
add
bound
xor
mov
and
repnz
add
mov
xchg
add
pop
add
jae
adc
push
add
test
add
cmp
mov
iret
lods
or
dec
cmp
fcmovnbe
ret
mov
add
add
push
add
lea
lret
dec
xor
testb
add
jl
sub
aam
or
inc
push
add
cwtl
and
pop
je
sarb
pop
push
pusha
add
pushf
inc
orb
fcoms
mov
add
mov
enter
pop
rolb
mov
add
pushf
sarb
sti
push
ret
icebp
outsl
sub
lods
adc
decb
lahf
stc
into
cltd
lahf
mov
icebp
jno
frstor
das
testl
add
xor
dec
pop
add
hlt
fstp
xchg
ret
add
cmpsl
and
mov
jcxz
add
add
stos
inc
cmpsb
scas
dec
mov
testb
add
aaa
addl
mov
add
add
iret
adc
jb
push
add
repnz
add
mov
out
xor
mov
add
dec
add
cmp
pop
mov
push
stc
fildl
add
cmp
add
imul
push
add
pop
add
cmp
jl
fdivs
rcrb
pop
add
pop
add
add
pop
adc
add
mov
ja
cwtl
push
add
sbb
xchg
iret
pop
jne
inc
call
add
cmp
data16
jecxz
sbb
inc
add
add
inc
add
rorb
push
push
test
add
jae
add
fsubl
mov
dec
mov
mov
int
add
mov
add
insl
inc
add
add
add
pop
add
loop
in
adc
push
cmp
add
or
rolb
add
mov
push
add
inc
add
inc
adc
cmp
dec
add
add
int3
cmp
inc
cmpsl
sub
dec
fdivl
mov
xchg
jb
and
add
fistps
dec
insl
mov
in
jb
fsubrs
sub
ljmp
add
mov
add
lods
jnp
pop
lcall
mov
add
mov
inc
sti
mov
xlat
jle
mov
dec
adc
xor
cli
subb
add
inc
inc
add
adc
add
xacquire
mov
add
icebp
add
jmp
xchg
divb
mov
add
popf
add
fidivrl
lahf
aad
mov
add
dec
add
cld
pusha
add
ljmp
jp
shlb
add
mov
sub
lods
xchg
rcll
mov
xor
add
shrl
out
je
cli
sub
add
xchg
add
pop
add
or
add
add
sbb
repnz
lods
out
jecxz
add
xchg
pop
mov
mov
add
cmp
filds
add
add
add
mov
jo
shlb
fwait
pop
add
fdivl
movsb
add
add
movsl
loop
sbbl
pop
ljmp
add
in
sbb
test
fildll
push
dec
adc
add
pop
dec
out
enter
stos
sub
bound
add
adcl
xor
fcoms
mov
push
add
add
xchg
test
bound
adc
and
add
add
inc
mov
add
add
fisttps
add
and
and
fisubrl
add
add
aam
add
push
lea
pop
iret
jl
lea
inc
add
cmpsb
daa
and
ret
sbb
in
scas
mov
add
lcall
add
cltd
mov
shrl
or
jne
daa
sahf
pop
outsb
add
fisubrl
add
push
add
dec
inc
push
add
lods
das
outsb
add
add
and
jg
sbb
jbe
fcoml
mov
add
xor
adc
add
dec
add
cmp
sub
icebp
ret
jns
inc
mov
or
add
mov
add
adc
pop
dec
add
mov
sub
iret
sbb
sub
lods
sbb
mov
and
loop
jbe
add
xchg
jmp
add
cmpsl
in
dec
add
jns
icebp
fidivs
pop
xor
add
mov
add
jp
jle
cmp
xchg
mov
add
call
xchg
shlb
xchg
mov
add
popf
add
add
xor
cld
jbe
in
das
scas
incl
xor
push
add
cmc
outsl
push
add
add
add
add
jb
fisubrs
add
xchg
or
sub
push
sahf
jae
popf
push
add
add
adc
cmp
jno
mov
pop
out
movsb
push
add
push
add
add
add
push
add
add
add
cmc
jno
in
mov
adc
adc
loop
add
and
add
add
or
lahf
xlat
jge
scas
orb
daa
add
in
pop
dec
fdivrs
test
std
addl
push
add
ret
idivb
add
rcrb
add
sti
jns
add
out
subb
mov
iret
out
push
add
pop
loopne
lock
loope
add
cmpsl
inc
pop
push
cmp
daa
fcoml
sub
loope
call
push
loope
enter
out
or
lea
add
sbb
add
arpl
mov
add
jns
aad
add
into
ret
add
ror
add
jns
jne
add
lock
loop
push
cmp
add
je
mov
xor
sbb
mov
dec
sbb
jb
pop
add
out
dec
add
add
adc
jp
push
add
and
testl
daa
xor
add
lahf
rcrl
jmp
call
push
add
lret
mov
add
cmp
xchg
iret
and
mov
and
iret
mov
add
sub
or
mov
mov
push
add
sub
sub
inc
add
shlb
adc
and
jmp
pop
lret
ja
dec
add
arpl
mov
pusha
add
xchg
iret
iret
bound
mov
add
fcmovnbe
add
inc
add
add
add
loope
add
inc
aaa
or
add
add
pop
push
add
jl
pop
add
cmp
jp
xchg
shll
push
rorb
pop
or
mov
mov
xchg
sub
add
pop
outsl
das
shr
and
jns
repz
je
and
jg
add
add
add
pop
add
add
push
mov
ret
push
add
popf
add
ljmp
mov
push
add
add
decb
sbb
ja
add
add
ja
add
movsl
fs
aaa
shl
add
repz
popf
cmp
pop
inc
dec
add
mov
lahf
scas
push
add
xchg
lods
sbb
mov
mov
add
jg
push
add
inc
add
gs
sahf
jle
xchg
faddp
addl
xor
out
jo
jg
cwtl
loopne
add
add
sub
test
and
pop
inc
add
shrb
add
insb
add
hlt
in
rcrb
add
add
pop
lods
mov
fucompp
mov
add
add
scas
fs
ljmp
push
add
cli
adc
shlb
add
sbb
jge
pop
pop
add
sub
lcall
into
lods
loop
jle
dec
push
in
push
pop
enter
loope
add
in
push
add
mov
sbb
repz
inc
or
cmp
add
mov
stc
pop
mov
mov
in
int3
add
stc
arpl
add
out
sub
jmp
aam
mov
mov
jns
add
ja
jae
pop
add
dec
or
pusha
add
add
out
sbb
sbb
dec
out
leave
mov
lret
jno
add
xor
add
sbb
add
sti
add
mov
add
call
mov
scas
lods
sub
pop
jb
inc
mov
adc
sarb
pop
stos
and
xor
add
fiadds
add
sbbl
add
xchg
push
add
rol
sbb
mov
das
outsl
sbb
lds
mov
or
inc
inc
jmp
add
add
add
add
out
roll
icebp
fisubrs
push
mov
insl
insl
fwait
adc
mov
adc
xchg
loopne
xlat
rolb
jnp
add
cli
xor
or
add
and
jnp
loop
ret
add
mov
mov
add
scas
push
loopne
stos
adc
lock
rcl
cmpsb
push
add
mov
or
cmp
das
loop
fadds
scas
push
shrl
jbe
mov
push
popa
mov
add
pop
sub
cmp
pop
pusha
add
xchg
xlat
and
push
add
xchg
dec
adc
add
call
add
mov
mov
add
popf
nop
das
out
lret
movsb
inc
test
inc
int
xchg
bound
push
cmp
in
mov
inc
mov
data16
push
add
dec
add
sub
pop
add
iret
xchg
cltd
push
add
dec
fldcw
out
cmc
not
adc
add
sub
sbb
and
cmpsl
lret
psrlq
add
push
add
mov
xchg
adc
bound
sbb
mov
add
sub
add
inc
add
loope
push
add
sub
call
lock
add
push
and
xorb
mov
test
dec
add
xor
add
add
mov
add
add
cmc
mov
add
sbb
int3
lock
lds
add
clc
out
xchg
cmp
lods
lods
xchg
arpl
add
insb
add
loope
cmp
sbb
add
xchg
bound
pop
lds
add
sti
or
inc
add
add
ss
adc
dec
enter
sub
and
out
jns
mov
cmp
and
iret
push
jb
pusha
add
jne
xlat
loope
clc
push
add
sub
jp
mov
imul
add
fbstp
stos
pop
add
pop
add
pop
pushf
xchg
or
pop
cmc
inc
or
repnz
push
push
inc
ljmp
test
add
pop
psraw
jge
sub
repz
lods
and
or
jp
dec
add
add
jl
loop
add
jns
add
add
scas
fildl
cmpsb
pusha
add
add
pop
add
add
inc
add
sbb
icebp
ret
jno
or
jae
push
add
xchg
andb
add
add
add
mov
push
ja
sbb
xchg
in
jge
lahf
ljmp
aas
jbe
sub
pop
int3
cmpsb
popa
cmp
mov
sbb
mov
add
lods
in
mov
aas
adc
popa
sub
pop
inc
sbb
std
int3
xlat
pop
out
push
imul
iret
les
and
das
pushf
sahf
in
sbb
stc
nop
cwtl
lods
sub
dec
add
iret
dec
mov
dec
loope
add
jae
bound
pop
add
mov
imulb
stc
dec
add
add
add
or
insb
add
shll
add
sbb
add
add
aam
add
icebp
push
cmc
mov
js
mov
xlat
dec
add
push
add
add
das
inc
add
add
add
xor
add
xor
or
dec
popf
adc
cmc
cmp
add
aaa
imul
imul
add
add
or
xchg
mov
jae
outsb
add
add
cmpsl
loop
in
ret
std
jae
sahf
pushf
nop
insl
or
pop
add
imul
loopne
or
filds
ret
js
loop
add
testb
pop
mov
xor
fadd
loopne
add
mov
add
adc
add
mov
adc
repz
add
mov
inc
sub
cmp
add
out
rorl
inc
adc
jl
adc
add
add
cmpsb
xor
sub
xchg
outsb
add
loope
add
ficoms
lds
push
test
add
cmp
enter
inc
lcall
add
loopne
add
lea
scas
mov
xor
or
jnp
mov
cmpsb
add
nop
adc
jbe
iret
dec
xorl
daa
arpl
gs
add
add
cmp
data16
mov
dec
add
sub
xor
inc
fsubs
out
add
mov
add
mov
fbstp
add
add
loope
pop
add
mov
inc
add
add
add
add
adc
mov
or
pop
call
ja
add
iret
test
add
ret
or
and
push
add
add
add
add
jp
jae
xchg
xor
mov
jne
add
imul
add
cwtl
xor
push
jbe
and
xchg
leave
hlt
aaa
and
mov
out
sbb
shl
mov
jp
clc
jnp
fcmovnu
jne
lcall
add
ret
popf
fistpll
mov
add
mov
mov
stc
cmp
adc
mov
pushf
loop
repz
fs
push
clc
cmc
and
fidivrs
xchg
negl
inc
add
and
nop
cld
mov
add
xchg
mov
jmp
or
orb
cmp
adc
lock
int
add
lods
adc
fs
cmp
ljmp
adc
int
push
add
add
in
xor
xor
aas
jge
cmp
lahf
call
lods
mov
js
pusha
add
lcall
add
mov
rorb
in
mov
add
arpl
adc
xlat
add
cwtl
inc
popa
push
and
xor
clc
sub
rcrl
adc
ja
movb
fisubl
orl
aaa
bound
push
add
xchg
sbb
and
add
cmp
movsl
pushf
lahf
loop
add
pop
xchg
in
add
mov
mov
add
sub
stc
push
pop
inc
inc
add
scas
inc
call
cmpsb
add
cli
js
jnp
sbb
pushf
mov
push
adc
jge
fisubrs
jle
cmpsl
sub
dec
mov
push
add
cmc
nop
mov
dec
add
negb
fldcw
cwtl
sahf
jg
add
inc
add
and
xchg
or
in
lock
sbb
adc
int
add
add
les
xchg
and
notl
pushf
sbb
dec
add
cmc
cmp
mov
add
sub
mov
add
loope
mov
add
add
push
add
je
jno
pop
jno
rcll
mov
je
psubusb
add
push
add
add
jno
lahf
daa
ljmp
jge
add
cmpsl
xchg
rorl
cmp
add
push
add
rcl
xchg
add
sub
jo
mov
sbb
add
add
add
adc
pop
add
mov
push
add
add
mulb
add
out
cmp
icebp
nop
cmp
test
jo
mov
mov
sub
jns
sahf
push
xorl
add
add
add
pop
pop
mov
leave
or
jnp
add
and
loop
call
add
push
add
xor
add
mov
addb
pop
add
mov
add
imul
test
add
xchg
sub
sarb
arpl
and
add
lret
mov
sbb
sahf
inc
add
mov
add
xchg
add
pop
add
add
in
cwtl
aam
jecxz
sbb
push
add
cmp
xchg
xchg
ljmp
push
add
add
mov
or
pop
lcall
mov
mov
int3
outsb
add
add
jo
add
cmc
or
add
pop
add
mov
mov
imul
sub
xor
insl
orl
ja
add
jae
mov
add
cwtl
add
cmc
scas
aas
xchg
les
add
cmc
es
fmull
faddp
lret
cmp
mov
out
dec
add
aam
loope
add
pop
and
sub
rcll
add
adc
add
aas
cltd
cmc
add
add
add
mov
lea
cmpsb
mov
mov
fisubs
lods
push
add
mov
mov
add
mov
cmp
repnz
call
and
jecxz
lea
add
fsubrs
mov
and
adc
sub
mov
dec
xchg
cmp
repz
pop
add
add
test
and
cltd
mov
addl
xchg
xor
xchg
cli
lds
add
aam
lods
mov
mov
nop
outsl
xor
sbb
aaa
orb
fidivrs
mull
dec
ds
push
and
aaa
sbb
jns
cmp
and
mov
adc
fwait
xchg
aad
cmp
pusha
add
or
sbb
sahf
cmp
mov
pushf
mov
incl
push
add
sbb
clc
loopne
add
add
stos
mov
add
shl
sbb
and
aad
add
or
ljmp
add
cmp
ficomps
jmp
sub
mov
add
add
sub
push
sub
repz
add
add
mov
add
scas
std
xor
jmp
ljmp
mov
lea
dec
add
jl
inc
inc
orl
xchg
mov
ljmp
and
push
jmp
add
subl
into
push
addr16
or
dec
or
mov
pop
in
jmp
rcr
adc
or
mov
add
popf
mov
sub
repnz
lods
jnp
popf
xor
out
outsb
add
je
scas
pop
add
out
mov
xchg
add
cmc
inc
add
add
add
stc
out
push
add
xchg
sbb
loop
pop
jge
sbb
mov
add
lret
stc
or
aaa
mov
mov
ret
cmp
ficoms
sub
xchg
pop
add
add
pop
jo
and
pusha
add
test
out
pop
add
aaa
add
ss
cmp
push
add
adc
aam
sbb
add
or
inc
add
add
mov
add
add
and
movsl
xor
insb
add
out
repz
add
add
mov
pop
lahf
fcoml
add
sarl
cmpsb
das
jmp
jg
push
dec
add
add
add
arpl
add
add
pop
or
jmp
add
notb
add
or
inc
mov
inc
push
mov
xor
add
add
scas
sbb
imul
push
clc
pop
loop
add
add
push
add
or
add
pop
sub
mov
and
jbe
shll
add
outsl
dec
or
leave
test
add
divb
add
adc
ljmp
add
enter
cli
mov
add
movsl
loopne
mov
push
add
adc
lods
or
call
ffreep
xchg
divb
fdivrl
inc
add
adc
sbb
je
arpl
add
add
fmuls
outsl
jbe
or
and
add
call
inc
add
lods
add
add
loope
add
cld
pop
pop
jns
test
add
add
nop
xchg
psubsw
add
add
sbb
pop
sbb
add
lods
add
out
shll
icebp
and
add
aas
add
sub
and
mov
pop
pop
in
mov
imul
stos
cmc
add
clc
leave
lcall
jge
add
add
pop
add
jnp
add
jl
mov
out
add
push
add
add
les
add
adc
sub
lret
adc
xchg
xchg
push
add
add
add
add
add
add
push
jge
negl
xchg
clc
mov
and
mov
add
enter
out
sub
add
cmp
in
add
mov
fwait
or
adc
cld
add
sar
sub
cmpsb
loope
outsl
dec
shll
insb
add
add
jbe
movsl
xchg
push
push
add
add
sbb
ds
scas
aam
xor
enter
into
xchg
sbb
fadd
xlat
and
mov
add
sub
leave
rol
add
add
iret
mov
jo
sti
in
mov
jb
or
imul
sub
push
add
add
inc
cmp
adc
add
add
push
xchg
stos
xor
out
popa
lea
lahf
dec
popa
cmpsb
jo
lds
add
negl
popf
pop
cmp
xchg
xchg
push
mov
sub
cwtl
cmp
sub
add
je
out
pop
dec
add
add
jg
add
loop
popa
xor
das
push
push
add
pop
add
xchg
dec
push
add
add
pop
leave
leave
ja
add
mov
lea
add
inc
add
adc
aas
sub
xchg
test
insl
xlat
adc
movsl
inc
add
mov
xchg
add
xchg
mov
add
inc
add
cmpsl
cmpsl
cli
cwtl
adc
imul
adc
jno
in
jg
add
bound
pushf
dec
add
dec
mov
mov
roll
out
aam
add
xlat
fwait
into
push
push
add
in
inc
cmp
cmp
inc
icebp
dec
cmpsl
adc
mov
add
leave
sub
insb
add
dec
lret
fsubrl
daa
adc
outsl
je
aaa
andl
lret
add
mov
jno
push
add
mov
mov
mov
add
jns
add
cmp
add
mov
pop
adc
add
stos
inc
iret
mov
inc
xchg
dec
sahf
jmp
pop
jp
jo
shlb
mov
add
loope
cmpsl
mov
lds
add
mov
add
int
dec
add
sahf
loop
arpl
add
inc
add
sbb
add
adc
lcall
aad
dec
add
add
push
ljmp
inc
add
and
push
add
in
inc
add
pop
and
mov
bound
mov
add
mov
ror
into
adc
aas
mov
push
pminsw
add
sbb
pop
xchg
xchg
lahf
or
ja
jne
xchg
out
repz
out
inc
add
push
add
outsb
add
add
jecxz
pop
fimull
sub
outsb
add
xchg
imul
insl
stc
sbbb
pop
add
pusha
add
push
add
sarb
out
shll
add
out
jge
add
push
add
sbbl
add
ja
jl
stos
sbb
insl
and
aad
dec
add
jo
mov
add
sti
aas
add
push
add
xchg
movsl
mov
fsubs
in
dec
cmp
dec
stos
xchg
cmp
test
add
bound
daa
std
sahf
into
and
and
add
loope
or
es
test
add
push
add
add
addb
test
in
rcrl
jecxz
aaa
add
mov
xchg
scas
push
add
mov
loope
add
bound
mov
dec
add
call
mov
and
dec
add
add
mov
jmp
aas
push
add
jo
imull
add
add
cmpsl
popa
jge
add
and
enter
mov
sub
xchg
add
sbb
xchg
fldenv
cmpl
pushf
mov
sub
shlb
cmpps
xchg
ret
aas
jp
imul
insl
xor
push
loop
cmp
andl
bound
sub
insl
mov
push
add
icebp
and
push
mov
add
stc
cmp
imul
mov
adc
sub
mulb
in
and
adc
aad
pop
xrelease
ja
mov
xlat
pop
add
pusha
add
into
jp
bound
test
push
push
add
leave
dec
add
sub
daa
push
adcb
dec
cmp
popa
test
fdiv
test
add
dec
mov
add
hlt
jno
movsl
add
sub
sbb
push
int3
and
cwtl
add
inc
add
add
add
movsl
rorl
add
add
jae
jmp
mov
call
jmp
cmpsb
xor
lds
lahf
push
add
mov
add
mov
jno
popa
lret
out
in
add
add
xchg
cmp
fisubl
push
inc
add
xchg
lea
sbb
push
add
xor
inc
add
push
add
out
ret
enter
inc
pop
add
add
xchg
fdiv
pop
mov
push
add
loopne
add
dec
add
cld
sahf
scas
add
mov
jl
outsb
add
mov
lahf
xchg
fcmovnb
push
add
les
jge
cmpsl
xchg
add
add
add
jecxz
js
leave
fimuls
test
incl
add
cli
jns
add
pop
add
in
ds
sbb
bound
dec
add
inc
add
jne
dec
add
stos
fsubl
add
jo
adc
repz
add
sub
add
inc
add
jns
mov
les
xlat
fwait
push
dec
mov
or
negl
insl
adc
add
cwtl
xchg
xlat
add
xlat
xor
hlt
pop
add
inc
push
add
add
add
add
add
or
enter
push
test
add
fs
pop
mov
add
add
xchg
add
add
cmpsl
xchg
mov
add
fcoms
add
mov
arpl
push
popf
pop
cmp
fcoms
xchg
cld
push
add
fnstenv
add
add
arpl
movsb
jnp
or
mov
js
std
sbb
cli
out
inc
or
adc
les
bound
decb
andl
push
add
cmp
stos
pop
add
sbb
dec
cmp
push
add
pop
mov
add
loopne
fwait
inc
add
add
adc
add
add
enter
push
add
mov
xor
out
add
aas
inc
add
add
and
adc
cmp
dec
add
add
add
loope
int3
sahf
xchg
cmp
mov
adc
ja
add
decb
jge
call
adc
add
inc
add
add
shlb
cmp
insb
add
insb
add
call
mov
test
xor
fldl
std
pop
add
or
adc
loopne
ja
pop
add
out
popf
fcmovnb
movsl
arpl
jl
shll
mov
add
push
add
mov
dec
add
lcall
add
jecxz
jo
jg
push
add
int
add
test
add
xchg
adc
add
and
add
push
add
nop
push
add
insl
adc
lahf
cmp
lods
jg
jns
popf
ds
sti
mov
pop
sbb
mov
and
xor
xor
fistpl
cmp
push
add
rorl
add
je
aad
fwait
cmp
adc
lds
jne
add
add
inc
mov
dec
inc
add
popa
pop
xchg
dec
add
add
add
ret
test
add
es
cld
lahf
mov
loop
pop
pop
add
and
inc
add
add
inc
add
push
pop
cmc
lods
repz
add
aad
push
add
sub
xor
call
add
loope
aas
sub
ljmp
loop
int3
popa
sbb
pushf
xchg
push
add
add
add
scas
mov
jb
and
jno
push
add
mov
lds
ficomps
xchg
fcompl
sub
xor
push
pop
push
and
add
add
add
lods
and
mov
repnz
or
inc
add
inc
dec
pop
add
push
add
icebp
decb
fldt
in
call
aad
popf
pop
or
lock
pop
fidivl
mov
adc
loope
jmp
add
sub
add
inc
pop
pop
aas
mov
outsl
xchg
lret
pop
test
add
enter
add
sbb
dec
ljmp
sub
or
gs
into
sub
add
inc
and
out
xchg
aad
je
pop
sub
rcrb
mov
xor
xchg
sbb
mov
mov
push
add
inc
add
dec
fsts
mov
add
pop
push
shrl
les
adc
mov
ficompl
cmpsl
push
sub
std
adc
outsb
add
rcll
adc
in
aam
add
fstl
add
add
add
lcall
adc
xor
pop
sub
sub
push
add
or
shl
mov
add
dec
add
add
add
add
test
add
add
add
sbb
js
add
add
lea
insb
add
xor
loope
add
xchg
push
add
xlat
inc
lods
pusha
add
add
repnz
enter
or
add
mov
adc
test
enter
mov
cmpsl
rcrl
add
stos
ret
lods
daa
int3
mov
add
add
std
repnz
inc
fistl
add
out
dec
push
arpl
pop
pop
add
movsl
insb
add
adc
push
add
add
in
add
daa
sti
decl
leave
push
add
xchg
fisttpll
hlt
or
movsl
pop
cmpb
jbe
jnp
add
cmp
mov
stc
insl
into
inc
add
movsl
xor
je
add
fst
repnz
lds
push
add
mov
inc
arpl
inc
adc
sbb
add
mov
das
repz
ret
stos
or
add
icebp
ja
add
push
add
test
fcomps
add
imul
add
shlb
cmp
cmpsl
test
xor
mov
sub
add
add
loope
aas
movl
inc
add
in
pop
dec
add
dec
add
add
aas
cld
test
add
add
lcall
repz
mov
mov
loopne
and
repnz
pop
push
inc
add
lods
fisubl
lcall
add
dec
pop
add
add
xor
jb
xchg
sbb
in
add
adc
sbbb
gs
add
gs
add
leave
lret
xchg
nop
in
lcall
arpl
inc
pop
add
add
out
jns
add
sub
mov
sub
adc
add
or
ret
inc
add
data16
js
icebp
inc
inc
adc
xchg
add
add
in
cmp
imull
pop
rcrl
push
mov
cmp
cmp
mov
add
add
add
lea
add
and
or
dec
add
push
add
xor
cmp
mov
movsb
jne
jo
mov
test
mov
jl
ret
aad
lret
fcmovb
mov
sub
lcall
std
push
outsl
test
cmc
xor
push
add
leave
test
scas
dec
shlb
adc
add
cmp
add
mov
repz
fisttpl
add
cmp
adc
sbb
lcall
aam
xchg
pushf
mov
sbb
inc
lcall
adc
mov
add
xchg
mov
sbb
lret
jge
add
hlt
scas
je
je
mov
sub
ret
xchg
fidivrs
dec
add
add
aam
sbb
mov
xchg
push
add
mov
pushf
mov
jae
dec
jmp
add
xor
cmp
addr16
imul
mov
das
sbb
add
fucomip
call
je
cmpsb
mov
add
pop
dec
add
mov
cmpsb
outsb
add
and
shrb
xchg
repnz
pop
add
stos
dec
pop
cmc
imul
pop
add
jge
adc
pop
inc
imul
xchg
arpl
sbb
add
iret
mov
mov
notb
repnz
add
dec
push
lret
icebp
sbb
scas
sahf
stos
mov
xchg
adc
add
jbe
mov
insb
add
add
mov
rol
add
add
mov
push
int
add
add
and
dec
out
adc
sti
addl
mov
add
ljmp
mov
fisubl
and
ja
add
and
cmpsl
fwait
inc
add
daa
and
add
mov
or
and
add
or
push
test
lea
jne
add
push
add
adc
orb
jge
cmpsl
pop
add
push
add
add
mov
jns
mov
arpl
fnstcw
das
outsb
add
mov
rcrl
imull
add
add
sahf
scas
fnstcw
xchg
push
sub
add
sbb
pushf
mov
inc
push
add
out
mov
lret
push
add
cmp
sub
add
xchg
add
pop
mov
cmp
pop
add
cltd
icebp
jne
push
pop
cmp
loop
add
mov
lahf
aaa
outsb
add
movsb
adc
mov
in
ds
push
je
adc
outsb
add
push
add
sub
cmpsb
outsb
add
add
add
hlt
pusha
add
mov
pop
add
and
inc
add
and
icebp
cmp
fstpt
or
shr
jnp
ret
pop
add
rcll
jae
ret
xchg
and
add
jp
mov
mov
cmc
inc
add
outsl
mov
lods
iret
mov
add
xor
fbld
add
add
jmp
cmp
iret
sbb
add
popf
mov
add
dec
or
scas
xchg
mov
das
jns
arpl
dec
add
add
bound
cmp
shll
add
add
fisttps
inc
add
sbbb
fsubrl
add
or
pop
mov
and
adc
push
add
fnstenv
add
sub
mov
lret
inc
add
add
in
pop
movsb
fcomp
jb
scas
push
mov
push
add
je
inc
add
aaa
loop
add
aaa
int3
jne
mov
adc
add
mov
add
jl
add
pop
mov
add
scas
cmp
insb
add
add
add
add
add
add
mov
add
inc
add
shlb
adc
jo
xchg
add
sarb
push
add
mov
add
push
add
imul
xchg
fsubrs
mov
add
scas
jnp
jmp
out
vxorps
cmpsl
insl
sbb
jns
sbb
notb
mov
add
aam
adc
insl
xchg
lock
aaa
stos
iret
es
mov
cmpsb
pusha
add
cmp
loope
add
loop
add
add
fdivs
add
pusha
add
add
add
add
or
lret
xchg
and
xchg
jecxz
mov
into
cmp
add
in
sbb
jp
mov
pop
jns
mov
add
jo
les
add
jl
sti
test
jmp
add
lods
push
add
add
push
add
add
add
in
mov
push
arpl
stc
stc
mov
pop
mov
add
ret
imul
add
xchg
mov
out
subl
sbb
or
jge
bound
mov
inc
fwait
iret
dec
add
add
push
add
pop
add
add
mov
es
push
add
popf
hlt
aam
mov
mov
push
jb
xor
pusha
add
inc
add
add
mov
sbb
push
hlt
lods
mov
mov
push
dec
addr16
push
gs
lods
push
add
add
inc
stos
rcr
lahf
sahf
stos
iret
xchg
frstor
dec
add
cmp
lret
popa
xor
dec
add
adc
ljmp
andl
in
inc
add
fldenv
xchg
fwait
xchg
insl
frstor
in
testb
pop
add
scas
adc
sbb
mov
jg
sti
out
sub
ret
cld
hlt
imul
add
fldenv
ret
testl
lret
add
les
mov
dec
add
enter
test
mov
data16
movsb
push
add
nop
call
clc
out
insl
mov
fadds
add
adc
fmull
aam
cld
insl
adc
int
push
add
shll
pop
outsb
add
test
mov
out
lret
lret
mov
dec
test
and
inc
add
pushf
and
adc
daa
out
pop
in
mov
add
pusha
add
fcoml
je
or
mov
loopne
add
sahf
call
add
xchg
int3
icebp
mov
lcall
cltd
je
mov
inc
add
cli
jmp
dec
push
add
sub
fisttps
jne
xchg
mov
pop
add
add
jo
pop
add
push
add
fst
mov
add
add
add
in
repz
bound
ss
ss
fistpl
add
not
adc
cmp
imul
xchg
push
add
pop
repz
add
xchg
cmp
loope
mov
in
pop
add
add
ljmp
add
lret
add
ret
pop
add
lea
dec
stos
xor
in
jne
add
outsl
js
and
aas
mov
push
add
mov
add
xchg
cmpsl
and
mov
add
push
add
dec
cwtl
xchg
mov
add
inc
sbb
inc
add
add
clc
imul
dec
add
in
rolb
jmp
add
test
add
loop
daa
stos
add
cli
out
push
add
add
add
add
aam
adc
mov
add
add
mov
mov
or
xchg
add
mov
adc
add
sbb
add
test
mov
sub
cmp
jmp
int3
xchg
repnz
shlb
cmp
cmp
lret
pop
add
add
cmp
add
xchg
add
bound
mov
int
add
lea
ret
inc
add
add
add
jl
fwait
imul
push
in
jb
add
xor
jnp
xor
add
jl
mov
inc
cltd
push
add
test
sti
add
add
add
jl
cmpsb
test
stos
mov
mov
cmp
inc
add
mov
leave
mov
xor
pop
cltd
fmul
adc
or
ficompl
add
pushf
sub
fidivs
push
jge
xchg
add
add
rcrb
andl
mov
xor
cmc
sti
stos
fimuls
das
out
mov
mov
xchg
add
out
push
add
push
add
stos
sub
imul
add
cmp
and
mov
lcall
stos
ja
or
popl
pop
and
push
add
mov
xlat
cmp
nop
adc
add
xchg
cmpsb
mov
xor
push
add
add
out
add
loope
popa
shll
inc
add
fadds
add
mov
ficoml
add
add
sub
xchg
stos
dec
movsb
je
hlt
aad
mov
mov
jle
jno
add
inc
add
fimull
mov
sahf
cltd
xor
test
popf
adc
push
add
popf
mov
pop
pop
enter
add
std
or
lcall
into
cli
int3
test
lods
push
add
mov
jle
rcrl
add
fisubl
and
add
add
cmp
hlt
mov
push
add
ret
insl
lods
lods
push
lahf
stc
mov
imul
lret
xchg
pusha
add
pop
shrl
add
push
movl
push
rcr
mov
das
mov
jbe
aas
mov
add
add
gs
loope
lds
rcrl
add
enter
je
push
add
add
js
pop
add
test
pop
add
mov
mov
aam
add
ret
xchg
or
mov
gs
pop
sti
repnz
leave
scas
in
out
enter
sub
movsb
js
pop
dec
add
mov
add
sbb
xchg
cmp
mov
add
inc
xor
xchg
in
cltd
xor
mov
stos
dec
add
or
rclb
pop
jne
add
add
out
jg
jb
add
adc
scas
xor
cmp
dec
add
adc
jmp
test
cli
shr
jno
or
xchg
inc
xchg
fldcw
push
jb
xchg
push
jne
add
cmp
push
add
add
add
stos
push
add
sarl
mov
movsb
mov
int
add
cmpsb
push
add
out
gs
add
addr16
push
add
jno
or
gs
stos
cmc
pop
mov
fadds
incl
addr16
xchg
push
add
adc
push
add
add
push
add
sbb
cmpsb
rcrb
xchg
adc
xchg
lahf
push
add
add
fdiv
pop
add
inc
add
push
add
fwait
push
add
ret
subb
mov
cmp
cmp
aam
or
jno
add
sti
fildl
cmp
lods
or
cmp
sbb
xchg
movsl
orb
pop
cmc
div
cmp
lods
mov
add
fbstp
add
pop
push
add
xchg
sub
test
out
shrb
sbb
sub
xor
pop
push
lods
rorl
mov
add
cmp
lea
jns
in
push
add
cmp
outsb
add
stos
cmp
add
push
add
xchg
out
xchg
stos
nop
xlat
pop
insb
add
adc
notl
fnsave
add
aaa
bound
push
mov
push
add
push
fidivl
add
push
add
cmp
test
jb
sbb
aas
lcall
add
js
xchg
push
pop
add
add
pop
add
mov
or
mov
mov
ret
sub
sar
out
mov
push
xchg
inc
test
and
add
or
mov
add
add
push
aas
call
aaa
fwait
scas
lret
mov
xor
jmp
add
repz
pop
inc
int3
aaa
rorb
fadds
sarb
pushf
xchg
or
jp
push
fsubrs
mov
add
add
add
add
lea
add
js
add
add
ja
add
fisubl
in
add
add
pushf
hlt
lods
mov
add
and
fwait
out
sbb
jae
add
movsl
insb
add
add
add
into
dec
add
add
add
xchg
testl
lcall
test
jp
jp
or
mov
pop
add
inc
outsl
pop
add
outsb
add
add
xlat
mov
add
jns
add
add
add
movsl
data16
sahf
std
mov
in
in
mov
cmp
imul
in
mov
ja
add
js
mov
outsl
in
cmpsl
xchg
push
mov
stc
mov
out
into
push
add
add
push
add
adc
cwtl
stos
dec
pushf
lea
into
pop
and
test
xor
aaa
aam
add
out
fisttpll
cmp
mov
dec
hlt
adc
xor
adc
xor
scas
aad
jecxz
outsb
add
test
and
add
ret
jns
add
cltd
inc
ficomps
icebp
movsb
add
add
clc
xchg
add
add
add
lret
inc
add
adc
out
sbb
and
push
add
addr16
loopnew
xor
jg
add
xor
dec
add
add
push
popl
mov
pop
ret
sbb
push
add
mov
add
mov
push
add
jecxz
cmp
inc
add
mov
jo
cmc
cmpsb
shlb
adc
imul
scas
lock
add
popf
inc
add
adc
add
add
jp
inc
cli
fmuls
mov
pushf
add
cmp
loop
fnstsw
shrb
add
mov
cmpsl
push
add
jge
mov
add
add
and
call
call
orb
mov
push
repnz
add
repnz
in
add
or
inc
add
inc
dec
add
out
push
add
add
sub
daa
out
loope
dec
add
add
add
adc
sbb
data16
add
add
stc
loop
add
insb
add
lods
mov
add
mov
lock
sub
mov
add
sbb
in
lock
imul
dec
adc
gs
dec
add
loope
add
add
xchg
dec
push
lahf
pusha
add
adc
push
add
or
add
adc
add
outsl
hlt
lret
sbb
add
enter
sub
jb
push
add
dec
add
mov
jecxz
add
add
push
jg
adc
fsubp
inc
jmp
loope
iret
mov
add
dec
add
fisubrs
add
add
cwtl
sub
rcrb
aaa
sub
rcrb
rolb
mov
ja
adcb
into
ficompl
add
mov
adc
push
add
inc
daa
ret
insb
add
test
stos
shll
ds
inc
add
adc
xchg
push
add
or
popa
mov
add
add
push
rcr
std
sti
xor
push
add
bnd
gs
cmp
sub
add
add
loop
add
scas
adc
or
daa
int3
stc
lcall
add
lret
test
sahf
fdivrl
add
jno
jecxz
je
stos
or
jg
sahf
cmpsl
fistpll
scas
movsb
sahf
mov
add
add
mov
xor
add
ja
mov
add
mov
loope
movsb
pop
add
add
cli
arpl
pop
add
add
std
inc
add
rcl
fwait
and
mov
xchg
ja
add
add
lods
add
hlt
test
lods
mov
sahf
int3
out
shr
lods
pop
xchg
rcrl
add
adcl
xchg
xor
add
add
xchg
fs
lret
add
test
dec
pop
add
add
sbb
pusha
add
push
add
or
psadbw
add
test
or
or
adc
add
test
add
mov
add
stc
std
inc
add
adc
lods
xchg
rorl
xor
nop
add
insl
faddl
inc
xchg
std
push
mov
mov
add
cmp
notl
add
add
sub
dec
sub
add
outsb
add
ret
jmp
ss
add
cmp
rcrb
aam
xchg
push
add
add
adc
icebp
cld
dec
test
add
push
or
loop
add
xchg
add
call
add
insl
add
or
int3
imul
add
outsl
mov
push
add
add
in
aas
ret
add
mov
add
jmp
repnz
mov
dec
add
sub
add
mov
add
dec
ljmp
mov
jecxz
scas
lods
push
lods
inc
and
jbe
push
add
decl
add
cs
pusha
add
loopne
and
sub
add
push
loopne
pop
loop
inc
std
int3
xchg
add
mov
fstpl
scas
stos
add
sbb
inc
add
call
dec
add
add
roll
adc
and
addr16
cmc
jne
add
add
jmp
push
mul
add
adc
cmpsl
inc
jl
xor
pop
add
adc
addb
movsl
arpl
xchg
movb
imull
add
cmp
insl
dec
cmp
daa
lds
cmc
into
add
inc
add
sahf
popf
jle
mov
add
mov
push
add
mov
add
and
add
add
mov
xchg
aad
add
add
ljmp
sub
push
negb
pop
mov
push
add
inc
add
dec
mov
jg
add
repz
pop
add
adcb
sub
inc
mov
pop
sub
js
mov
xchg
mov
cmp
and
push
add
add
inc
push
sbb
out
or
bound
dec
inc
add
ds
ja
jo
dec
add
add
sbb
jo
xchg
stos
test
pop
pop
mov
fldenv
add
jno
imul
imul
add
xor
test
mov
push
jp
sub
pop
add
lock
add
add
add
testb
or
shl
add
movsb
popf
xchg
or
cli
ja
mov
add
add
or
sub
or
out
lods
push
add
jno
add
pop
add
inc
shr
cmp
jle
insb
add
and
lea
add
aad
add
scas
jle
sbb
jg
in
sbb
ficoml
xchg
dec
shlb
add
mov
pop
sub
push
add
pop
add
xor
xor
or
imul
add
dec
add
sbb
pop
fldl
and
mov
loopne
lret
cmc
cmp
sbb
mov
xlat
mov
add
add
jge
push
add
add
mov
add
aad
add
add
add
mov
sarl
scas
pop
cmp
jge
dec
add
fdivrl
add
add
hlt
and
cmp
mov
pop
sub
add
add
cli
test
sahf
mov
loope
or
cwtl
jae
mov
add
fucom
outsl
pop
inc
add
loop
mov
scas
lods
sbb
jle
xchg
xchg
imul
add
inc
ret
mov
add
sub
mov
cli
xchg
out
stc
jno
add
loop
mov
cmpsb
into
or
gs
movsl
cltd
sbb
loop
add
fnstsw
push
mov
cmpsl
sbb
or
xor
and
mov
fadds
add
add
add
int
mov
cmp
les
add
iret
and
adcl
dec
add
add
mov
add
test
je
loope
add
jne
das
inc
add
dec
aas
loopne
testb
aaa
pushf
push
add
aas
cmpsb
ficomps
mov
lods
cmp
pop
add
mov
xchg
and
mov
jno
sub
sbb
jl
mov
jno
jl
pop
add
pop
rol
leave
sub
jl
scas
cwtl
jle
pop
andb
pop
add
or
jecxz
add
sarl
and
or
inc
add
adc
mov
enter
pop
dec
xchg
xor
out
into
sbb
add
add
mov
or
std
int3
fcompl
clc
sti
cltd
cmp
inc
cmp
pop
add
add
pop
aam
add
add
mov
mov
add
lods
jbe
ret
cld
aas
int3
dec
mov
add
ss
xor
test
add
jle
add
test
add
add
add
add
mov
mov
add
xchg
cld
sbb
stc
cmc
add
add
dec
and
jmp
scas
mov
dec
add
and
dec
add
mov
call
add
pop
add
add
add
xor
add
leave
cmp
ret
add
clc
adc
pop
add
and
mov
add
jle
int3
das
mov
mov
push
mov
and
mov
jg
add
outsl
ljmp
sti
push
add
adcl
pop
add
add
mov
mov
pusha
add
sbb
loope
add
and
ret
add
lods
mov
add
test
popf
dec
add
mov
lret
dec
add
daa
inc
and
sub
add
mov
and
mov
mov
add
cmp
popa
inc
cltd
or
add
pushf
nop
add
xor
push
enter
repnz
xchg
jbe
adc
roll
pop
jo
cld
test
cld
inc
das
jl
pop
mov
inc
add
mov
cmp
cmp
mov
add
rolb
cmove
jne
cmp
jae
add
add
add
fiadds
cli
xor
mov
in
add
int3
nop
sub
gs
les
add
test
js
pop
loop
add
adc
add
test
mov
push
pop
imul
jle
nop
sbb
fdivrs
out
add
add
mov
fisubrs
mov
add
pop
add
xchg
fdiv
sub
push
cmpsb
push
mov
add
add
mov
dec
or
add
xchg
lahf
divl
push
add
cli
lods
mov
add
and
xor
adc
mov
xor
cmp
mov
mov
jg
pusha
add
sbb
and
movl
add
lcall
xlat
dec
add
pop
push
adcb
sub
cmc
sub
imulb
out
mov
into
jae
add
add
lock
mov
daa
inc
jg
add
add
add
add
dec
add
add
rclb
cwtl
jmp
mov
add
sub
mov
stos
fidivrl
inc
add
add
add
repz
ret
ds
fnstenv
cmc
xor
sub
cmovne
ret
dec
rclb
add
add
sub
xchg
xchg
stos
and
movsb
push
add
andb
jno
int
in
aas
mov
imul
aaa
addr16
jns
mov
xorb
add
dec
sub
add
adc
add
or
mov
add
cs
mov
add
test
ljmp
out
and
mov
daa
mov
add
test
fldcw
add
scas
test
inc
add
sbbl
into
mov
js
inc
push
cmp
mov
loop
add
fnstsw
test
ret
jle
mov
add
data16
and
xchg
inc
add
aam
jecxz
leave
cmpl
add
into
cmp
mov
in
lds
inc
push
loope
mov
push
push
add
push
pop
adc
scas
mov
and
jmp
add
adc
jnp
ja
xchg
stos
jns
cmc
or
into
add
sub
aaa
inc
sub
add
jl
leave
lret
add
add
loope
xor
and
add
add
mov
lahf
test
iret
mov
add
add
inc
mov
mov
dec
add
repz
xchg
pop
add
add
add
jge
adc
vmread
push
jle
scas
les
iret
xchg
pop
lahf
dec
and
push
add
lret
lcall
cmp
jp
jo
push
add
and
pop
mov
add
inc
add
add
add
mov
add
lahf
bound
mov
fisttpll
add
rcrb
mov
repz
das
lret
lds
add
test
test
add
in
mov
or
clc
xor
fldl
test
xor
cmpsl
cmp
add
add
addr16
roll
pop
in
call
fnstsw
icebp
aaa
dec
add
jp
dec
cmpb
fiaddl
xchg
movsb
je
mov
mov
dec
add
shrb
stos
xor
pop
add
addr16
add
xor
rclb
negl
xchg
add
add
fcomi
xor
jno
out
add
pusha
add
test
push
cmp
and
add
cmp
lods
inc
add
lock
jle
add
push
cmp
add
ret
xor
pop
add
mov
scas
arpl
inc
iret
cmp
dec
add
loopne
jnp
sub
in
add
add
into
push
add
and
in
cmp
fimull
xor
pusha
add
xor
in
mov
es
add
faddl
sub
inc
xchg
pushf
sbb
cmc
mov
pop
out
lea
add
mov
das
and
mov
add
les
or
add
ja
xor
adcb
sarl
mov
push
add
add
or
stos
jbe
stc
add
or
mov
add
add
cmpsb
mov
bound
or
adc
jo
icebp
sbb
movsb
in
mov
add
sti
stc
loopne
and
mov
aas
shll
dec
add
push
add
std
mov
or
subl
add
out
ljmp
mov
imul
fcoms
add
add
mov
lds
adc
fsubs
or
sbb
add
xchg
imul
add
add
push
add
jecxz
add
int
add
lods
in
ds
pop
inc
add
mov
add
sub
mov
fisubrs
jecxz
push
add
add
mov
ret
pop
loope
add
add
or
clc
lret
bound
and
stc
mov
rol
pop
iret
fisttps
sbb
jl
dec
add
out
and
add
add
in
jnp
sub
dec
add
std
sar
add
jl
and
sbb
fdiv
shll
add
lret
mov
cli
mov
mov
popa
ret
add
cmc
xchg
mov
sbb
shl
cmp
xlat
jmp
arpl
enter
pop
lock
adc
cmp
adc
sbb
nop
xchg
and
movsb
jno
add
add
or
push
aas
mov
sub
mov
push
add
xor
add
add
test
cmp
aas
lret
and
sbb
popf
add
pop
lods
jae
lcall
test
add
xchg
das
push
add
mov
pushf
lods
and
cmc
fsubr
out
int3
pop
fiadds
add
clc
int3
jno
jle
and
add
nop
cmpsl
push
add
add
add
das
xor
pop
and
add
fists
sub
add
divb
xor
sbb
jl
mov
inc
add
add
cmp
call
nop
xor
mov
lods
xor
jmp
add
das
dec
add
xor
mov
push
add
push
dec
call
pop
add
sub
cmp
insl
nop
mov
cs
mov
lcall
xor
into
pusha
add
lret
push
sbb
cmpsb
in
push
add
aaa
mov
cmp
dec
add
mov
aad
sahf
cmp
stc
mov
and
xchg
sub
jbe
pop
test
mov
add
sbb
inc
add
popl
leave
push
dec
add
xchg
add
jecxz
std
cmpsb
stos
dec
push
mov
add
mov
in
add
pop
add
fisubs
add
sbb
int3
push
jno
push
add
ljmp
cmp
cmpsb
pop
add
adc
sarl
lahf
add
jecxz
push
pop
push
adc
jecxz
lods
jg
add
out
fiaddl
fcomi
mov
mov
lret
leave
sbb
add
mov
lods
test
test
dec
add
sahf
out
add
loope
add
or
repnz
add
add
add
ljmp
add
inc
adc
xor
add
loop
mov
sub
xchg
xor
shll
pop
lret
xchg
dec
add
xor
push
add
or
pusha
add
add
add
mov
mov
dec
clc
jecxz
xchg
add
add
add
add
xchg
arpl
add
jl
ja
bound
andb
jp
sti
pushf
dec
add
add
lock
jmp
and
mov
add
and
arpl
push
add
fbstp
push
add
insl
inc
das
mov
xchg
adc
pop
add
fnsave
iret
xchg
ss
in
pop
arpl
and
fs
lods
jge
andl
imul
add
add
dec
pop
sti
outsb
add
lock
gs
pop
add
les
jecxz
or
mov
adc
insb
add
pushf
ficoms
sbb
int3
inc
add
dec
add
pop
rcr
sbbl
adc
loopne
and
sahf
sub
fstl
lods
popf
pop
sbb
pop
mov
and
ja
imull
pop
add
mov
add
add
lret
push
aam
in
sub
lods
push
mov
add
push
xchg
sbb
ja
fildll
pop
fbld
add
push
add
cmp
dec
inc
jb
lea
and
loope
mov
add
xor
add
jnp
add
std
push
add
int3
inc
add
add
inc
or
add
loop
adc
or
enter
enter
xor
cltd
repz
push
xchg
sbb
mov
out
mov
xchg
fistps
cs
arpl
fstpl
xchg
mov
popa
popf
fwait
out
add
pop
jle
addr16
add
push
add
fcmovu
lds
add
xchg
fcmovne
pop
add
add
jmp
andb
xlat
dec
add
pop
nop
jle
loop
cmp
test
pop
add
les
adc
idivb
scas
pusha
add
shlb
addr16
mov
mov
lcall
push
add
or
pop
add
lea
xchg
out
addb
xchg
in
fists
into
mov
icebp
test
mov
add
cmp
mov
and
adc
or
inc
mov
loop
fstpt
add
inc
jne
in
jmp
rcl
popf
add
sti
mov
add
mov
repnz
xchg
jns
add
add
mov
or
add
jae
mov
clc
sub
xchg
xor
add
add
dec
xchg
push
push
add
add
hlt
scas
test
inc
mov
das
test
xchg
das
repnz
xchg
and
lahf
jmp
mov
xchg
mov
add
add
pop
adc
xchg
leave
xchg
cmpsl
insb
add
cmp
add
loope
std
nop
into
addr16
add
sbb
into
jno
add
mov
fstl
lret
mov
scas
pop
add
mov
add
push
jns
clc
vphaddbw
add
lret
mov
add
stos
xchg
in
mov
test
xor
jl
das
repz
add
jge
std
lods
push
add
pop
add
fidivrl
add
add
push
add
inc
add
ret
cmpsl
xchg
mov
add
push
add
xchg
fcmovbe
lea
add
jle
sbb
mov
add
call
ret
call
jge
cmpsl
pop
inc
add
cwtl
xchg
pop
add
rol
clc
sbb
jbe
dec
add
add
iret
and
xchg
add
add
cltd
sti
mov
cli
inc
add
dec
jle
jge
dec
add
sub
cmp
xchg
push
add
enter
add
fwait
jbe
mov
jg
les
add
fsub
stos
stos
mov
stos
sahf
addl
std
jp
adc
shlb
add
mov
incl
sarl
mov
adc
dec
add
mov
xor
push
lcall
and
jl
aaa
in
xchg
shlb
fucomip
shll
add
xor
sub
jne
cmp
add
or
mov
call
add
cmp
add
add
adc
test
nop
mov
xchg
xchg
lret
test
fcmovnbe
add
mov
in
add
shl
jnp
add
mov
ss
sbb
int3
fwait
ret
xchg
iret
mov
mov
lods
outsl
fisttps
call
adc
gs
aas
add
addb
adc
out
loope
add
pop
push
add
cmp
lcall
cltd
sub
mov
jg
add
xor
add
cmp
sbb
sahf
jp
in
and
xor
mov
pop
xor
push
add
mov
mov
add
add
or
aad
add
add
xlat
pushf
sub
leave
aad
add
faddl
rcll
nop
pop
add
aaa
sbb
es
push
add
scas
cmpsl
jg
sbb
aas
mov
clc
in
mov
add
lds
inc
add
dec
push
add
sbb
push
or
mov
add
add
add
xor
or
mov
add
mov
and
add
sahf
out
add
add
lcall
insb
add
add
js
icebp
sub
in
add
jg
xor
movsb
xor
and
adc
add
jl
inc
add
add
add
stc
insb
add
mov
cmp
enter
frndint
xor
jnp
mov
es
shlb
add
cltd
dec
add
xchg
adc
xchg
imul
daa
push
ljmp
pop
add
or
dec
or
adc
inc
xadd
add
add
cmp
push
clc
sbb
and
xchg
jmp
sahf
xorl
adc
out
adc
push
add
add
arpl
add
addb
add
je
in
add
add
lds
sbb
lods
icebp
cmpsb
cld
and
add
xor
adc
xchg
outsl
or
leave
and
and
mov
rcl
aam
add
sahf
sbb
test
xchg
nop
inc
add
add
add
call
add
inc
pop
add
add
test
orl
imul
add
sbb
test
add
push
add
add
call
add
and
in
lods
push
add
and
xlat
cmp
cmp
dec
dec
add
dec
add
add
fwait
and
notb
push
add
lock
add
or
aaa
aad
add
sub
hlt
ds
adc
jecxz
fnstsw
mov
fcompl
xchg
mov
adc
cmp
je
loop
mov
pop
sub
push
add
adc
addr16
les
lahf
rclb
cmc
and
jne
loopne
xchg
outsl
or
mov
push
mov
add
or
into
push
les
sbb
jb
push
add
dec
add
ret
mov
cmpsb
aam
xor
push
add
es
ret
cmp
mov
repnz
add
xchg
adc
and
scas
add
sbb
cmp
add
cwtl
dec
shll
push
add
adc
out
push
add
mov
repnz
add
out
add
sahf
and
cld
xor
test
add
std
jecxz
nop
les
add
push
add
aaa
je
leave
repz
add
adc
in
insb
add
add
add
adc
or
jg
out
fisubl
and
add
add
out
pop
add
push
add
lahf
out
dec
add
add
cmp
jl
xchg
add
lods
arpl
xchg
sbb
cmp
mov
xor
enter
jp
sub
mulb
or
add
sub
add
dec
add
and
add
mov
gs
cmp
mov
test
lret
xor
cmc
add
js
repz
dec
add
mov
jmp
add
add
or
rorl
xor
xchg
cwtl
mov
test
add
add
into
add
jge
fs
imul
add
rolb
lcall
shrl
add
jbe
enter
movsl
jp
sub
add
jns
add
cmp
fcmovnu
cmpb
add
add
xor
and
shl
iret
scas
cmp
lock
fildl
add
loop
ret
clc
sub
rclb
scas
mov
xchg
lods
fisttps
add
push
add
push
add
sarl
int
add
test
test
add
mov
shr
mov
fwait
leave
imul
xor
mov
insl
fstpl
xchg
add
ljmp
add
sub
xchg
mov
pusha
add
cmp
in
add
fincstp
xchg
push
or
das
rorb
mov
push
add
add
adc
add
mov
mov
fcmovnu
xchg
stc
icebp
inc
fwait
inc
mov
shl
aam
jbe
push
into
out
dec
add
cmp
mov
adc
inc
out
dec
add
movsl
push
das
sti
or
jmp
daa
arpl
lods
add
mov
add
add
push
add
add
and
imul
add
or
neg
dec
movsl
xor
push
cmpsl
pop
andb
aas
daa
xchg
push
add
lahf
and
lret
cmp
sbb
mov
decl
push
enter
inc
sub
popf
mov
add
pop
cwtl
subb
add
mov
rcrl
add
mov
sbb
repz
insl
dec
movsb
cli
sbb
pusha
add
xor
add
add
add
cmpsb
add
lret
xchg
push
add
add
xor
or
mov
ljmp
out
mov
add
add
add
lods
pop
jns
addr16
add
add
add
ljmp
rsm
adc
test
fidivl
xlat
loopne
sbb
in
push
mov
shlb
push
add
xlat
pop
cli
js
sbbb
test
mov
push
repz
add
jmp
fldl2t
cmp
fs
popf
xor
add
data16
subb
add
xchg
sub
add
push
adc
inc
add
jge
add
lret
push
add
xchg
mov
aas
jo
shll
add
aam
popf
movsl
js
in
outsb
add
jb
sub
popa
pop
jg
aam
shlb
test
add
mov
mov
pushf
xchg
cli
adc
mov
add
or
les
push
add
pop
add
add
mov
pushf
nop
inc
inc
add
incl
rcll
or
lret
adc
in
inc
add
push
add
stos
fistpll
push
add
jl
sbb
and
test
mov
add
add
enter
add
push
add
repnz
push
filds
fwait
add
sub
add
inc
mov
lea
cmp
mov
inc
add
add
incb
lea
sub
sbb
ja
add
add
out
stos
jno
data16
lds
cmp
sbbl
rcrl
jmp
in
sbb
movsl
cmp
adc
shrb
xchg
add
add
pop
shrl
cmpxchg
add
add
in
das
in
push
add
sub
iret
xor
adc
lret
add
popf
jb
sub
fildl
sbb
cmp
pop
add
jns
mov
and
adc
push
pushf
ret
ret
inc
add
cmp
je
pop
or
addb
mov
je
inc
add
add
jecxz
push
add
jbe
movsl
sub
add
add
add
jbe
je
enter
push
add
add
jmp
add
jecxz
out
or
pop
imul
loopne
outsl
mov
cli
mov
add
pop
mov
sub
xor
mov
push
fidivs
xchg
push
mov
je
cmpsl
mov
add
sbb
lods
cmp
add
pop
add
or
sbb
add
fsubrs
add
aam
pop
add
sub
imul
jne
mov
add
aas
aas
add
or
add
mov
add
lods
sub
add
clc
out
bound
popf
mov
and
add
rcl
clc
jmp
mov
jno
add
cmp
add
xchg
mov
jl
shl
mov
add
pop
gs
add
add
push
add
mov
in
insl
imul
mov
sbb
fidivrl
xor
add
cmp
clc
adc
dec
add
int3
xor
push
add
mov
adc
sahf
lcall
inc
or
mov
pop
ret
int3
xor
or
xor
test
pusha
add
xchg
stc
ret
std
aaa
arpl
add
add
fwait
inc
popf
out
cmp
push
add
sub
test
dec
add
pop
add
add
std
dec
push
xchg
cmp
leave
mov
mov
add
sbb
stos
ja
imul
dec
add
add
fidivrl
add
aaa
dec
add
add
cli
lock
stos
dec
das
xor
mov
add
mov
mov
repz
add
cmp
jp
in
add
movsb
pop
nop
cmp
bound
xor
mov
push
add
dec
fbld
add
lret
dec
add
add
add
bound
jg
data16
sub
xor
outsb
add
add
add
cmp
and
aaa
and
popf
xchg
cmovs
sbb
jmp
loope
stc
sbb
js
cmp
lds
das
jne
add
or
xchg
add
push
add
add
sbbb
sub
push
test
xor
xor
push
add
mov
add
lcall
adc
lea
cmpb
jge
add
xchg
imul
add
fistpll
add
sub
add
orl
ds
or
add
scas
xchg
or
jb
lods
mov
rorb
inc
add
add
xchg
push
add
add
dec
sbb
push
add
push
add
add
jbe
inc
test
add
add
test
ss
out
fs
add
xchg
rcr
loop
xchg
pop
insb
add
jb
enter
mov
ret
mov
sbb
cmc
adc
inc
add
push
add
add
jnp
or
add
adc
add
add
sub
add
ljmp
add
or
add
add
sbb
fwait
rolb
fisttps
addb
sbb
push
adc
jno
sbb
mov
add
pop
add
add
add
sbb
lods
add
out
push
loop
inc
add
sub
lcall
jge
jae
mov
mov
push
imul
xor
cmp
add
sarl
inc
sub
pop
add
xchg
lds
imul
inc
add
jo
sahf
xchg
add
mov
pop
arpl
add
add
add
fwait
icebp
xchg
add
loopne
add
add
cmpsl
adc
push
pop
add
scas
jmp
cmpsl
fcmove
and
mov
or
imulb
cli
push
or
leave
xchg
sbb
jp
cwtl
aad
add
jg
xor
test
add
or
or
mov
inc
lea
xor
jge
dec
mov
rcr
mov
add
shl
jo
mov
add
jecxz
sub
out
rcrb
xchg
mov
cld
mov
bound
out
cmp
mov
sahf
fbld
mov
add
cmp
lret
xlat
pop
add
mov
add
add
jmp
add
cmp
add
dec
add
cmp
and
ficomps
call
adc
lret
inc
sbb
mov
mov
add
and
dec
pop
lock
insb
add
xchg
fwait
pushf
add
push
add
xor
dec
add
xchg
mov
add
rcl
pop
add
xchg
mov
jae
add
push
add
movsb
xor
jb
lea
test
leave
mov
mov
xor
pop
mov
sub
inc
mov
mov
jnp
aas
mov
push
add
fsubs
inc
add
push
add
add
add
sar
data16
mov
add
add
sbb
jns
push
loope
add
jo
jl
inc
xor
xchg
jae
cmp
dec
push
add
jo
push
add
adc
loopne
add
out
out
sbb
in
jp
sahf
pop
add
mov
sbb
add
inc
dec
add
add
pop
mov
push
add
add
add
cltd
lret
push
add
adc
fstpl
xor
movsl
or
cwtl
cmp
jecxz
sbb
pop
aas
add
sub
cmpsb
fadd
test
xor
inc
add
cmpsl
in
pusha
add
mov
insb
add
add
aas
pop
inc
add
rcr
sub
and
mov
add
mov
push
add
or
add
add
xchg
repz
add
inc
pop
lcall
pop
and
shr
loope
add
add
mov
fnstsw
mov
sbb
cmpsl
jge
popa
cmp
pop
bnd
mov
pop
add
pop
add
xchg
mov
nop
xor
xor
add
cmc
popa
call
and
add
inc
add
mov
inc
add
aas
mov
call
stc
cmc
pop
mov
inc
add
dec
lret
dec
mov
pop
add
adc
add
pop
add
add
repz
add
jge
add
xor
ss
xor
sbb
dec
add
stos
sti
fnsave
mov
sbb
test
mov
dec
add
add
add
mov
pop
fldt
add
jecxz
repz
xor
mov
addr16
sub
outsb
add
mov
cmp
subl
sbb
dec
xchg
fisubs
into
cli
xor
ficoms
add
fsubrl
sbb
repnz
pop
add
add
add
add
cmp
rorl
cmpsl
add
mov
add
sub
mov
adcl
pusha
add
sub
xchg
clc
sbb
and
dec
bound
out
add
pop
add
mov
push
add
lds
inc
add
fsubs
add
pop
popl
dec
add
ret
sbb
xor
add
add
push
add
ret
add
pop
add
repnz
jmp
add
bound
mov
pop
ret
aam
hlt
fstl
sub
inc
add
sbb
mov
add
fcmovbe
mov
imull
add
nop
lcall
inc
inc
add
mov
push
add
sahf
sbb
mov
cmp
mov
sub
xor
push
add
fisttpl
sub
clc
inc
add
cmp
sbb
iret
bound
push
test
add
loop
sub
sbbl
cmp
cmp
lock
sbb
outsl
add
jae
cltd
mov
shrl
add
cmc
out
cmc
cmp
imul
mov
xchg
xor
adc
cli
add
lods
mov
std
mov
or
push
add
fidivs
push
add
add
cld
jmp
lret
pop
fsubp
gs
cmc
les
sbb
add
push
add
push
add
and
dec
mov
adc
negl
add
add
loopne
add
imul
leave
jl
mov
add
stos
cmpsb
jne
pushf
sbb
cmp
cmp
push
add
aas
mov
mov
jns
fimull
in
fiaddl
add
incb
dec
xor
jg
add
add
add
fsubs
sbb
add
lds
mov
push
add
add
jne
js
ljmp
add
stos
jmp
add
add
loop
add
add
add
scas
xchg
cmp
sub
add
popa
cmp
addl
add
jo
sbb
popf
roll
add
addb
icebp
cmpb
add
add
add
sbb
cmp
popf
sarb
cmpsl
or
andl
push
xchg
sarb
add
sbb
aaa
xchg
dec
aas
cwtl
xlat
add
orl
movsb
pop
lods
nop
pop
cltd
fwait
cmc
and
xchg
xchg
xchg
sti
and
pop
add
sbb
pop
jnp
idivb
mov
popa
in
sbb
add
ret
or
mov
sbb
jnp
add
mov
lock
sbb
rcrl
imul
jl
cmp
in
xor
insb
add
add
fwait
add
mov
jg
sbb
int3
lret
jns
shll
add
out
mov
push
stos
std
cmp
testb
add
adc
inc
add
push
addr16
shrb
cmpsl
and
ret
and
mov
add
roll
add
out
add
add
add
cmpsl
adc
add
add
leave
fstpl
in
xor
adc
repz
adc
fcmovnu
mov
mov
out
mov
mov
add
call
mov
add
add
out
mov
or
mov
add
mov
inc
add
dec
jne
mov
add
test
add
int
pop
add
add
sbb
add
adc
add
xchg
adc
add
rcrb
xchg
sub
addr16
add
add
or
sbb
push
and
xor
add
scas
sti
mov
clc
jg
pop
add
add
or
std
mov
add
jmp
test
add
sbb
movsb
gs
repnz
sub
into
popf
cmpsl
nop
mov
lods
pop
add
in
add
add
inc
add
sub
ror
cld
sbb
jo
sub
aam
out
sub
mov
push
jns
out
jecxz
and
dec
add
mov
loope
add
cmpsb
call
xor
xchg
mov
adc
fsubrl
js
rorl
mov
add
mov
or
add
sbb
rol
and
hlt
cld
cmp
add
add
adc
push
add
outsb
add
mov
pop
mov
scas
dec
add
add
jge
xchg
pop
adc
sbb
jl
add
add
loopne
pop
sbb
pop
add
push
add
add
xor
mov
add
push
push
add
mov
add
lret
daa
testb
inc
add
add
add
inc
add
add
mov
test
add
das
mov
sti
mov
sbb
dec
mov
xchg
mov
mov
xchg
push
add
pushf
not
outsl
dec
add
add
pop
shl
sbb
andb
jns
iret
and
movl
add
xchg
js
shll
pop
xor
add
dec
add
sbb
lods
push
add
sbb
xor
cwtl
lods
jns
push
add
mov
ja
pop
cmpsl
dec
add
add
jge
jmp
lds
mov
add
mov
jno
sbbl
ss
xorl
add
add
add
jp
push
add
push
add
outsl
imul
mov
lahf
pop
cmpsb
sbb
add
pop
js
or
hlt
test
aas
lret
mov
fisttpl
mov
push
add
inc
aad
xlat
movsl
clc
jle
cmp
jbe
test
sti
mov
iret
add
mov
pop
pusha
add
push
add
add
dec
add
ja
add
sqrtps
add
lock
hlt
push
add
test
add
or
mov
and
test
add
xchg
aam
cwtl
and
inc
mov
and
xor
jne
xchg
add
and
dec
add
dec
add
leave
jecxz
std
add
imul
and
mov
out
fxch
data16
aaa
mov
add
xchg
sub
leave
mov
mov
lret
add
xchg
mov
jmp
push
add
aaa
mov
add
cmc
test
add
add
mov
add
push
add
sbb
iret
jns
pop
in
add
out
pop
add
add
cmc
into
lods
mov
inc
adc
pop
add
and
fdivs
notl
loope
mov
add
jg
into
xor
rcrl
jnp
sti
push
add
add
mov
add
or
pop
sub
inc
push
add
mov
mov
dec
sub
xlat
sub
mov
add
pushf
ret
push
add
add
inc
xchg
add
movsb
jecxz
push
add
imul
adc
lea
in
inc
pop
add
inc
add
dec
add
xor
pusha
add
add
xchg
sub
cmp
mov
fcomps
and
pop
repz
add
jge
pop
xorb
add
add
dec
fwait
sub
add
pop
pop
pop
push
add
add
sub
shlb
out
mov
push
add
divb
add
inc
add
add
or
cwtl
dec
dec
add
dec
add
push
aas
pop
sbb
int3
adc
rclb
xor
cmp
stc
fsubs
seto
push
pushl
xor
and
nop
inc
add
mov
cmp
lods
sbb
lock
scas
aad
stos
sub
in
mov
ret
push
mov
add
jl
dec
add
lods
aas
insl
xchg
je
lock
in
pop
mov
gs
inc
add
jns
jns
xchg
mov
add
out
add
sbb
mov
add
pop
add
mov
movsb
xchg
push
mov
pop
or
or
add
add
mov
adc
add
add
mov
leave
sbb
lock
scas
xor
test
lcall
nop
hlt
jmp
add
inc
add
and
mov
xchg
xor
pop
sarl
dec
mov
into
jmp
add
push
add
sbb
rcrl
add
dec
popf
in
pusha
add
add
add
add
lahf
stos
mov
imul
pop
daa
mov
leave
lcall
add
add
imul
add
jle
xchg
mov
test
push
sbb
and
aas
xchg
dec
add
jecxz
add
dec
add
repz
add
das
mov
sub
jne
fists
sbb
jecxz
add
add
push
scas
sub
in
add
push
add
add
add
ja
jmp
adc
jae
je
cli
mov
jne
add
xchg
pop
movsl
inc
dec
add
add
into
pop
add
xor
or
jno
out
pop
add
pop
sbb
scas
test
cmpsb
shll
or
divl
add
add
pop
mov
add
add
xchg
daa
sti
cmp
in
jne
add
add
push
inc
add
mov
test
icebp
out
xchg
xchg
jb
decb
adc
cmp
aaa
mov
add
mov
add
mov
add
add
add
add
faddp
add
jae
add
add
inc
add
add
outsb
add
adc
add
inc
mov
add
daa
push
add
fisubs
mov
add
add
in
sbb
out
movsb
aaa
or
je
add
das
add
cld
sbbb
add
add
add
sbb
fldcw
pushf
int
add
lret
add
add
add
loope
popf
into
xchg
bound
inc
mov
sarb
push
add
jle
pop
or
xchg
inc
add
repz
repz
add
sbb
push
add
in
push
add
int3
add
out
xor
ljmp
add
insb
add
ret
hlt
sub
jg
xchg
jmp
add
inc
cmc
in
test
std
loop
inc
faddl
daa
sub
stos
jg
add
and
rclb
add
inc
dec
add
push
add
inc
mov
pop
add
add
in
add
xchg
or
movsl
add
int
mov
add
mov
add
lcall
mov
inc
fisttps
add
push
add
add
add
add
push
add
enter
insb
add
icebp
int3
mov
add
dec
add
lods
pop
add
imul
xchg
ljmp
add
pop
add
js
xchg
sarl
add
addr16
popf
jge
add
cmp
inc
daa
gs
out
add
addl
mov
inc
jmp
cmp
jecxz
push
add
and
mov
je
test
repnz
adc
jbe
mov
cmpsb
xchg
xor
add
add
mov
add
add
inc
add
sbb
test
shl
xchg
les
mov
mov
sbbb
cmpsl
sahf
hlt
arpl
pop
or
add
fxch
cli
push
add
iret
jbe
sbb
or
pop
jae
mov
add
repz
std
arpl
mov
into
ret
daa
cmp
xchg
sbb
add
add
dec
add
inc
add
add
sub
push
add
push
add
stos
mov
add
or
adc
add
add
mov
push
add
push
add
lcall
data16
adc
rcrl
sbbb
cmp
push
add
jle
inc
dec
add
add
fcoms
cld
loop
add
adc
mov
add
out
jb
montmul
cmpsb
inc
repz
add
outsb
add
insb
add
stos
outsl
push
add
add
add
cmpsl
cmp
mov
fnsave
adc
add
mov
add
sub
daa
sub
mov
and
jno
mov
mov
jp
sub
insb
add
and
sbb
fucomip
pop
icebp
cmp
jecxz
inc
add
jl
inc
add
add
cmp
inc
add
add
add
push
add
ja
sub
repz
mov
pop
ret
cmp
jne
add
and
dec
add
add
add
lret
add
fidivrl
add
mov
add
outsb
add
mov
lret
push
add
dec
add
xor
cmp
adc
pop
add
xchg
paddsb
mov
adc
mov
pop
stos
fucomip
ficomps
add
cmp
add
add
mov
popf
scas
dec
add
mov
pop
mov
add
mov
add
add
add
add
mov
jne
sub
shll
xor
loope
dec
add
ret
mov
jo
dec
jnp
dec
add
add
push
add
test
mov
cmpsl
in
or
aad
add
push
mov
add
sarb
add
adcb
add
ja
add
xor
push
add
fstpl
add
mov
mov
mov
adc
mov
pop
sub
out
out
adc
lret
mov
lcall
fnstcw
adcb
add
inc
add
fwait
add
push
fsubr
mov
mov
and
inc
add
sub
imul
test
add
add
out
test
testl
push
ret
xchg
ror
test
xchg
ljmp
xchg
add
sbb
jecxz
cmp
sub
les
sub
mov
sbb
cmp
dec
add
enter
loope
add
cmp
mov
pop
mov
sub
push
add
out
xchg
or
jmp
push
add
xor
cwtl
mov
cmpsl
aas
fistpll
pop
xor
push
add
and
or
leave
add
outsb
add
dec
xor
clc
and
out
mov
popa
jge
add
rcrl
dec
xchg
inc
add
in
adc
jae
bswap
nop
lock
sub
pop
cmpl
add
pop
push
add
outsl
or
aam
add
add
and
out
loopne
add
add
add
js
cmpsl
push
add
movsb
lcall
nop
ret
add
or
add
rcl
insl
lret
add
andb
mov
add
out
xchg
sub
inc
xor
add
lahf
cld
push
add
xchg
inc
add
repz
or
int
add
sbb
add
insb
add
inc
add
js
sub
jl
pop
adc
fdivrl
add
ljmp
pop
adc
push
scas
adcl
icebp
gs
add
pop
add
xchg
in
cmp
or
or
push
add
ljmp
add
adc
lcall
fsubs
push
ret
sub
pop
push
add
push
push
stos
in
testb
leave
fiaddl
dec
add
jle
lds
add
cltd
jmp
loopne
add
adc
js
or
jo
jb
inc
cmp
bound
xchg
add
add
mov
add
dec
pop
xchg
xchg
imul
cmp
test
cld
mov
mov
daa
mov
add
dec
cli
insl
repnz
and
sub
xchg
enter
inc
cmp
scas
jge
add
into
int3
jmp
shl
pop
add
stos
shl
mov
xor
pop
xchg
decb
xchg
cltd
fidivrs
add
loopne
pop
jns
add
add
add
add
insb
add
pop
mov
jns
xchg
pop
add
fs
dec
add
nop
cltd
cmp
adc
popa
xchg
push
add
add
cmpb
push
add
xchg
pop
xchg
mov
push
add
adc
xchg
pop
add
inc
add
mov
jle
in
enter
sub
stos
or
push
pop
jg
jo
mov
add
xor
hlt
roll
adc
add
mov
movl
movsb
out
cmc
xchg
mov
nop
dec
add
scas
sub
jae
fsub
dec
pop
inc
add
add
loop
add
xchg
leave
mov
mov
mov
lea
int
push
add
mov
jg
cltd
je
aas
or
nop
imul
xor
add
add
insb
add
add
movsl
lods
push
add
clc
ret
mov
jl
add
in
add
sbb
sbb
pop
divb
int3
hlt
lret
fisubrs
add
hlt
xchg
push
adc
push
add
popf
jns
sub
sub
inc
add
add
xchg
pop
jns
add
add
outsb
add
add
add
jbe
addb
bound
rol
mov
add
add
xchg
pop
add
xchg
push
aam
sbb
adc
jne
fwait
pusha
add
cmp
jmp
xchg
xchg
int3
pusha
add
or
mov
jnp
cld
stos
lret
popf
cwtl
aaa
xchg
push
in
cli
add
mov
add
inc
add
add
mov
add
push
add
push
add
dec
jne
fsts
cmpsl
mov
jecxz
shlb
adc
push
into
and
gs
ret
add
add
add
sahf
pop
mov
mov
xchg
lods
jge
add
add
cmp
mov
jp
fldcw
xor
repz
std
fwait
hlt
nop
out
fisttpll
dec
pop
dec
add
outsl
mov
add
rorl
testb
cmc
inc
jmp
adc
add
xor
or
aam
inc
cmp
loope
add
out
fstpl
pop
and
add
lea
das
push
mov
or
ret
xchg
insb
add
mov
jb
loope
hlt
add
fcmovu
mov
add
pop
das
insb
add
push
add
cmp
xor
jmp
add
fptan
push
add
and
mov
jecxz
pop
add
jbe
adc
movsl
cld
sub
cmp
xchg
gs
cmpsb
lods
xchg
push
add
add
add
jg
test
and
xchg
xchg
and
inc
add
xor
add
xchg
orl
jecxz
inc
add
jo
pop
add
add
xchg
mov
mov
leave
imul
test
mov
out
xchg
mulb
loop
pop
sbb
daa
xchg
pop
mov
push
cwtl
xchg
call
loop
add
and
imul
mov
enter
xchg
in
repnz
add
inc
add
sub
mov
add
mov
hlt
xchg
jle
pop
add
add
imul
and
add
add
mov
and
add
jno
ret
inc
loopne
jp
mov
out
movsb
sbb
scas
inc
sarb
add
inc
sti
inc
mov
add
pop
enter
inc
int3
mov
stos
jae
adcl
add
cmp
add
insb
add
in
sbb
sub
stos
hlt
pusha
add
int3
pop
or
dec
add
and
lods
cmpl
add
dec
lds
cld
mov
add
or
sarb
int
mov
add
rcll
mov
adc
add
clc
arpl
hlt
sbb
xor
cmp
out
or
mov
add
pop
mov
add
xor
stos
aam
jmp
add
adc
push
add
sbb
cmp
test
xchg
xchg
push
sti
arpl
xchg
mov
clc
xor
xchg
sbbb
icebp
lock
cmpsb
or
out
test
ss
outsb
add
jo
gs
push
lods
dec
add
imul
jb
push
add
gs
add
push
add
cltd
xor
mov
add
dec
cmp
fdivrl
add
or
push
add
add
or
or
pusha
add
pop
add
or
sbb
popf
sub
push
add
mov
dec
add
in
cmp
lret
add
add
mov
add
push
add
push
movsl
clc
in
mov
add
mov
loop
pusha
add
sahf
lcall
add
dec
add
mov
adc
lea
push
mov
dec
cld
jge
add
dec
lods
sahf
push
add
inc
je
sahf
sub
inc
add
cmp
insl
sbb
pop
mov
cs
or
scas
dec
add
dec
jg
pop
add
add
pop
add
add
pop
lea
fisubs
arpl
pop
add
sbb
add
aad
jmp
in
rolb
ljmp
pusha
add
mov
lds
jbe
add
add
lahf
shlb
add
push
add
add
loopne
add
add
xchg
xor
and
movsb
push
add
leave
lcall
jp
cwtl
xor
inc
add
xchg
movsl
xor
add
int
mov
add
aas
sub
lahf
dec
add
popa
jmp
nop
or
fwait
jb
mov
inc
sbb
jae
add
arpl
inc
add
jle
pop
sbb
pmulhw
mov
add
add
add
add
mov
loopne
test
mov
mov
add
add
jecxz
mov
add
adc
pusha
add
add
bound
jge
int3
dec
add
bound
and
nop
clc
mov
and
mov
push
stos
mov
add
stc
aaa
lea
add
add
or
movsb
in
add
movl
or
movsl
mov
inc
add
add
sub
repnz
fs
stos
icebp
sti
movsb
pop
add
flds
pushf
rol
push
add
add
mov
loopne
add
add
cmp
outsl
push
movsb
pusha
add
pop
adc
sbb
add
adc
imul
inc
mov
pop
and
add
add
add
xchg
add
adc
adc
sti
push
push
add
mov
xor
add
xchg
into
cmp
add
jle
mov
xor
fildll
add
add
add
add
addl
mov
add
mov
add
popf
mov
push
rcr
xchg
lods
dec
add
aam
add
lods
sub
push
add
in
add
loopne
add
daa
cmp
bound
inc
add
insl
insl
inc
ret
arpl
and
cmpsl
dec
scas
icebp
xchg
pop
add
jge
add
jmp
add
jmp
push
add
nop
mov
and
fidivs
push
lds
add
add
imul
cmpsb
or
xchg
je
lcall
sarl
cmp
sbb
xchg
aad
mov
add
pop
and
arpl
inc
add
sub
add
add
cmp
popa
cld
and
inc
xchg
fwait
jecxz
js
scas
jecxz
mov
add
add
arpl
jnp
aam
add
imul
push
xor
loop
stos
negb
push
add
aam
in
add
add
jmp
js
test
test
inc
and
sub
movsl
call
adc
mov
cwtl
adcl
and
inc
add
xchg
jle
xchg
les
xchg
push
lock
rcrb
lea
iret
mov
ds
sbb
mov
sahf
adc
add
pushf
loopne
out
mov
add
and
add
or
mov
add
push
cmp
in
loopne
push
add
data16
add
push
add
jns
idiv
xchg
daa
adc
test
les
aad
pop
add
or
lods
jbe
mov
add
mov
in
mov
add
leave
and
add
je
pop
add
insb
add
shlb
jge
cmpsl
fisubrs
aaa
or
rcrb
sahf
test
idivl
andb
rcr
jae
xchg
popf
add
mov
inc
push
cmc
push
add
add
add
fdivs
adc
push
pop
lea
inc
add
add
je
pop
out
fwait
iret
jb
out
mov
cmp
mov
jnp
out
lret
and
aam
inc
data16
mov
inc
add
out
pop
add
addb
sbb
int
add
sti
or
arpl
add
xor
iret
sub
sub
add
or
cltd
xchg
das
mov
test
icebp
cmpsb
ds
mov
xor
call
jecxz
mov
xchg
movsl
fsubrs
pop
add
test
xchg
scas
cld
ret
jbe
push
xor
inc
add
jge
iret
int
mov
jge
add
pusha
add
inc
adc
xchg
sbbb
add
fdivrs
add
cwtl
pop
or
mov
jo
aad
add
add
jo
jns
cli
xchg
jno
sub
shr
mov
add
popf
inc
cmp
add
dec
add
testb
stc
lret
jge
or
nop
xchg
dec
add
jle
shll
add
push
add
cmp
and
sub
fcomip
cmp
ljmp
inc
bound
mov
call
push
add
shll
xlat
ds
mov
add
add
in
add
test
shlb
stc
add
xor
adc
push
jg
mov
xchg
push
add
add
lahf
inc
add
inc
add
popa
fidivrl
add
xchg
cmp
sbbl
add
imul
test
or
addr16
add
add
add
mov
mov
add
rcl
adc
or
cmpsl
jecxz
xchg
pusha
add
mov
jo
cmp
and
fidivs
and
ret
andb
mov
jle
sbb
add
inc
add
add
mov
push
add
orb
add
in
sbb
aas
dec
add
mov
sbb
movl
fidivl
add
fimull
sub
mov
mov
add
notl
dec
add
cld
pop
add
push
add
sbb
sbb
jle
in
pop
addl
add
inc
add
ret
outsb
add
insl
dec
add
pop
ljmp
jbe
js
int
mov
adc
lea
das
adc
push
add
add
dec
add
add
adc
in
repz
fcmovu
add
cmp
add
add
add
add
inc
rcrl
aas
in
add
and
mov
jne
add
add
add
add
dec
add
imul
add
add
mov
outsl
push
stos
std
mov
xchg
arpl
les
jp
cwtl
in
in
test
adc
fistl
add
call
mov
add
aas
add
dec
mov
add
lcall
bnd
call
fcomip
jmp
popf
add
xchg
xchg
lds
add
xorb
sbb
and
jns
add
out
sub
add
inc
pop
pop
add
add
dec
daa
leave
loop
iret
int
repz
jo
jae
or
daa
dec
mov
in
jle
sub
push
sbb
pop
cltd
add
jae
add
mov
mov
add
mov
add
shlb
xor
rcll
push
sub
xor
inc
add
mov
add
les
sbb
add
xchg
sbb
push
push
jne
pop
add
add
add
push
add
loopne
add
lods
shll
scas
xor
push
stos
push
add
cmpsb
bnd
scas
add
mov
stos
les
mov
icebp
jbe
imul
aaa
insl
pushf
jne
outsl
pop
add
jb
jno
add
add
mov
add
add
ljmp
add
pop
add
cld
pop
push
add
add
adc
add
pop
inc
add
adc
xor
push
mov
loop
lcall
add
xchg
inc
push
add
outsl
mov
divb
mov
or
mov
lds
inc
add
in
int3
gs
add
mov
add
xchg
leave
push
add
add
pushf
adc
fucompp
mov
in
mov
mov
cmpl
add
leave
fcmovu
sub
add
in
test
cmp
arpl
add
cmp
mov
add
mov
or
jp
dec
add
add
push
repnz
pop
xlat
dec
or
loopne
add
xor
pop
cmc
sub
xor
lods
sub
or
xor
dec
add
test
add
jnp
orl
cltd
sub
xlat
jge
lahf
ret
add
sub
sbb
cltd
jg
adc
iret
cmp
mov
in
in
loope
mov
loop
add
clc
mov
push
dec
add
sbb
add
add
add
inc
leave
in
or
sub
test
pop
push
das
addl
push
xchg
movsb
inc
add
inc
add
add
add
jb
stc
in
bound
and
cltd
mov
dec
add
xchg
sub
push
add
mov
outsb
add
out
popa
rcrb
add
mov
sbb
add
in
out
mov
mov
add
loop
jnp
imulb
popf
adc
push
add
and
mov
and
out
xchg
ret
scas
jge
add
jns
test
add
push
add
and
xchg
enter
push
add
pop
add
add
fistps
add
or
add
cmp
jne
add
add
mov
stos
stos
je
or
aaa
fadd
test
cmp
test
mov
add
pop
add
pop
enter
addr16
lds
jmp
aas
mov
xchg
xor
add
outsb
add
dec
add
add
aaa
push
add
mov
pop
rep
test
add
cmc
pop
add
mov
add
out
das
repz
ret
xchg
push
add
add
add
arpl
mov
add
add
inc
sbbl
push
sub
add
add
add
jg
add
adc
add
icebp
pop
add
test
add
sub
mov
adc
add
jmp
inc
add
stos
sub
xchg
and
cmp
xchg
push
and
ljmp
add
test
add
jmp
sbb
push
add
shrb
fisubl
pop
cmpsb
mov
add
jp
out
scas
pop
add
mov
push
add
lcall
add
cwtl
test
add
pop
in
dec
add
mov
xor
add
sbb
popa
jbe
rcrb
dec
add
aad
into
mov
add
add
add
add
jmp
inc
add
pop
or
add
scas
xchg
out
pop
mov
add
mov
add
add
inc
jp
jo
push
add
lods
add
fs
clc
xchg
jg
cmpsl
xor
mov
inc
add
in
jns
or
adc
add
scas
xor
add
adc
push
add
add
dec
add
add
lret
pop
add
add
lods
jbe
cmpsb
dec
movsl
inc
add
loop
add
add
lahf
and
cs
jmp
xor
sahf
mov
and
jmp
add
loopne
add
jecxz
call
lock
add
cmpsb
lds
dec
add
dec
add
mov
std
fwait
shrb
add
add
push
add
cmpsb
jno
pop
add
outsb
add
cmp
push
add
arpl
jmp
leave
ljmp
pushf
in
cld
pop
fstl
pop
push
add
pop
insb
add
pop
popf
add
add
cli
push
add
xlat
imulb
out
pop
add
nop
vaddsubps
add
loopne
and
aad
test
cmp
xchg
fstpt
fldcw
jo
lods
imul
arpl
add
pop
adc
mov
out
rolb
push
add
out
pop
dec
js
push
push
or
ret
add
add
mov
ja
mov
mov
add
inc
add
add
outsl
add
push
add
add
pop
shll
add
add
mov
outsl
pop
movb
push
cmc
mov
clc
insl
and
out
dec
inc
add
fsubrl
mov
and
sbb
stos
inc
add
push
add
add
jecxz
cmpsb
sub
xchg
jle
push
add
arpl
add
lods
dec
add
add
inc
inc
imul
xchg
push
das
add
sar
ja
jle
out
pop
add
imull
cld
jle
xlat
push
add
xor
push
add
popa
inc
add
add
push
icebp
push
jae
add
xor
subl
cmpl
add
inc
mov
add
pushf
adc
ja
sahf
mull
add
lcall
int3
lds
in
fsubr
pop
add
out
lea
sub
cmp
push
push
rclb
lret
dec
stos
sbb
mov
add
add
add
mov
in
cmp
add
mul
add
in
icebp
jb
push
add
inc
xchg
add
pusha
add
loopne
add
fidivs
add
out
add
cmp
xor
aaa
sbb
lcall
cmp
scas
mov
nop
cmp
scas
icebp
fidivrl
jmp
add
add
out
pop
mov
pop
add
add
out
sbb
mov
cmp
add
jecxz
jge
pop
add
add
cld
xchg
add
lock
inc
cltd
je
sbb
insl
std
dec
add
pusha
add
add
inc
add
and
xchg
xchg
mov
imull
shr
dec
jecxz
add
xchg
data16
add
add
loopne
fdivrl
test
xchg
jo
sbb
inc
add
add
sbb
adc
xchg
mov
add
sbb
dec
mov
or
mov
sahf
ffreep
cli
test
add
hlt
mov
inc
popa
aad
mov
add
xchg
mov
push
add
mov
rclb
inc
stos
add
mov
xchg
pop
mov
sbb
rorb
add
cmp
mov
sarl
mov
dec
add
add
nop
mov
mov
add
pop
sub
ljmp
adc
add
icebp
mov
inc
mov
cmp
ret
ja
das
pop
xchg
test
sub
test
mov
add
les
add
dec
add
add
out
jne
add
pop
mov
add
mov
mov
add
push
add
dec
shll
aad
loope
fwait
insl
jne
adc
das
pop
jns
add
xchg
lock
add
jle
lret
dec
pushl
das
or
xchg
pop
add
pop
add
pushf
pop
add
lret
dec
add
push
add
inc
movsl
mov
icebp
lret
lds
or
sbb
xlat
xor
frstor
push
add
mov
dec
add
add
add
cwtl
out
add
xchg
fsts
loopne
dec
add
adc
mov
or
insl
push
jl
push
xchg
in
out
repnz
sub
andb
jl
adc
outsb
add
imul
imul
sub
pop
add
add
std
pop
add
add
in
or
or
dec
and
xor
je
push
add
add
and
adc
nop
jg
and
adc
sbb
mov
pop
and
add
add
loopne
pop
lcall
cmpb
lea
add
adc
push
mov
xor
adc
int
and
outsl
pop
inc
add
add
add
pop
popf
les
xor
and
int
push
add
adc
mov
add
call
add
jb
push
add
ret
jle
mov
add
push
push
add
gs
sbb
adc
test
jo
push
stc
mov
add
and
jb
inc
add
sub
cmp
push
add
cmp
mov
pop
adc
lret
outsb
add
jmp
jl
jmp
add
add
add
mov
clc
dec
add
add
ja
push
add
add
fldt
jl
push
add
je
xor
addr16
fstps
ret
dec
add
fiadds
dec
sbb
push
mov
in
jmp
loopne
mov
cmp
imul
int
add
leave
insl
dec
add
add
je
sub
xor
lcall
aad
test
adc
mov
aad
add
xchg
xchg
arpl
stc
into
sub
icebp
in
add
lods
inc
add
push
add
aas
mov
mov
jnp
xor
mov
add
lock
inc
add
loopne
add
add
movsb
push
add
pop
test
add
ja
push
adc
lds
mov
add
add
cmp
mov
dec
add
push
movb
gs
add
adc
dec
ficompl
ret
add
fisttpl
xor
sbb
data16
lea
dec
fcomip
mov
sbb
mov
lock
adcl
add
add
xchg
rcl
jne
add
fmuls
xchg
out
lret
iret
shlb
add
jb
jp
mov
mov
add
and
sub
rorl
in
add
fisubs
pushf
push
add
int
repnz
sub
xor
mov
into
sub
repz
addr16
add
push
add
dec
add
icebp
and
sub
arpl
add
cmc
mov
add
jecxz
push
add
out
mov
xchg
mov
push
add
js
jno
add
add
inc
pop
dec
add
add
pop
aam
pop
dec
add
or
fiadds
add
xor
xor
mov
das
add
push
mov
add
test
or
pop
xchg
xor
mov
mov
leave
push
add
orl
jb
pusha
add
subps
push
jmp
xlat
leave
aad
xor
mov
add
add
inc
lods
add
add
cmp
add
test
add
test
mov
add
outsb
add
sub
mov
icebp
inc
or
fcmovnb
add
add
aad
add
insl
xchg
test
add
sahf
scas
or
xchg
add
in
and
lahf
lret
add
mov
scas
push
add
mov
stos
mov
addr16
xchg
pop
pop
add
xchg
mov
add
add
jbe
mull
fidivs
add
lret
inc
mov
dec
add
add
pop
mov
jmp
adc
dec
add
mov
mov
sbb
jae
pop
push
add
inc
add
add
xor
int3
arpl
enter
sbb
xor
jg
add
lret
dec
mov
mov
jno
add
pop
add
mov
fwait
test
mov
and
idivb
add
sbbl
add
scas
pusha
add
or
add
and
push
add
sub
xor
das
ret
sub
stos
push
stc
and
push
add
push
add
in
fisttpll
add
in
add
mov
sbb
mov
pop
add
cld
and
mov
divps
jp
xor
popa
ret
and
ficoms
lock
and
push
je
imul
loop
xchg
stc
mov
add
hlt
xchg
sahf
fwait
aam
pop
pop
cld
push
add
inc
add
sbb
das
jl
ret
popa
xlat
push
add
fdivrs
add
jmp
js
das
sbb
adc
jo
into
test
mov
repz
inc
call
leave
sub
loope
cli
fimull
les
mov
ret
cmp
sbb
fisttps
test
cwtl
push
test
data16
daa
mov
mov
mov
cmp
xchg
shr
into
test
repnz
in
nop
bound
and
pop
inc
add
out
push
add
add
xor
add
mov
xorb
mov
xchg
adc
add
ljmp
add
add
loopne
pop
add
jmp
out
stc
fdivrl
add
arpl
aad
sarl
mov
add
add
xchg
sti
sti
lret
jne
lcall
add
add
add
lock
push
add
lahf
fwait
ret
pop
inc
add
adc
add
xor
clc
dec
add
divb
and
jge
jne
mov
outsl
and
hlt
push
add
add
dec
sahf
mov
pop
add
xchg
add
add
sub
push
add
mov
sbb
aad
sarl
add
add
mov
add
jg
or
add
outsl
add
add
enter
gs
arpl
leave
sti
cmpsb
jae
add
adc
xchg
outsb
add
cltd
inc
add
gs
adc
in
pop
out
pop
test
aaa
iret
jge
in
mov
add
outsl
dec
add
in
stos
out
les
ljmp
imul
das
cld
mov
add
shl
mov
xchg
jne
movsl
rcrl
mov
add
adc
mov
mov
add
loop
inc
in
mov
add
mov
add
loop
jo
or
insb
add
add
lcall
out
pop
andl
test
add
cltd
outsb
add
add
ror
add
aas
push
fwait
xor
call
add
lock
add
lret
notl
add
adc
push
add
inc
call
add
out
mov
or
mov
mov
test
mov
sbb
pop
mov
hlt
or
icebp
inc
lods
or
add
popf
xor
or
stc
pusha
add
add
mov
pop
adc
jmp
xor
dec
add
mov
add
add
add
arpl
mov
sub
xchg
dec
loope
add
add
inc
jge
int3
out
mov
dec
add
xchg
mov
out
pop
add
xor
cmp
shlb
pushf
mov
lahf
bound
imul
mov
gs
mov
sbb
in
add
and
popa
pop
enter
add
add
int3
dec
add
imul
in
add
sbb
bound
ret
xchg
add
movsb
lods
xorl
sub
mov
mov
add
mov
add
fisttpll
sbb
pop
add
add
add
add
pop
push
add
gs
mov
add
mov
xchg
sahf
or
mov
add
cmp
pop
mov
add
mov
xor
sbb
mov
xchg
lea
sti
and
imul
cmpl
fimull
jle
or
and
mov
cmp
jno
mov
arpl
pop
add
inc
add
mov
jmp
add
add
addb
add
addr16
xchg
and
adc
add
add
lret
xor
mov
pusha
add
push
add
adc
incl
or
add
clc
call
add
lea
lret
sub
je
adc
lret
cmp
sub
mov
adc
movsb
popa
fisubs
imul
cmp
jbe
or
out
lea
aad
xchg
data16
xchg
mov
addr16
add
out
push
add
add
data16
add
xchg
push
out
gs
mov
add
add
add
add
xchg
push
add
add
test
add
stos
add
lcall
xchg
loop
bnd
add
lds
xchg
aad
add
add
sbb
in
sub
arpl
fisubs
push
add
add
cmp
testl
into
dec
pop
jns
add
or
fwait
daa
dec
add
or
add
sub
cli
cmpsl
sub
add
add
mov
xchg
mov
fiadds
push
jns
test
jge
lds
inc
add
add
adc
adc
mov
xor
lcall
out
xlat
lock
out
hlt
jnp
add
add
lcall
add
add
add
das
lds
je
sbb
xchg
notb
cld
cmp
add
mov
lods
into
sbb
aas
dec
sahf
sub
sbbl
in
ljmp
add
sahf
shl
dec
fistpl
pop
sub
push
add
sub
sbb
stos
dec
add
out
and
dec
add
xchg
pop
add
bnd
xchg
ret
jp
rcll
add
ljmp
fldl
mov
adc
mov
add
add
int
popf
pop
add
outsl
mov
jmp
add
mov
test
add
add
xor
mov
add
add
jg
mov
mov
inc
push
or
les
mov
int3
repnz
dec
add
xchg
pop
add
mov
push
add
push
rcrb
or
insl
xchg
ret
mov
pop
add
add
mov
and
mov
dec
repnz
add
leave
inc
add
stos
fwait
rdtsc
mov
in
mov
xchg
mov
insb
add
movsb
mov
mov
sbb
inc
sti
test
add
add
add
jb
test
add
mov
pop
fsub
push
mov
dec
add
lea
jno
add
lea
add
inc
add
lahf
int
add
fsubrl
xorl
lret
push
mov
cmp
sahf
push
add
add
test
or
imul
sbb
add
add
dec
add
mov
dec
push
pop
add
fdiv
aam
in
add
sbb
mov
add
int
add
and
int
and
add
add
movsb
pusha
add
mov
bound
jo
add
or
push
dec
add
lret
lods
cltd
and
dec
add
jns
mov
add
add
sbb
add
add
xlat
push
add
push
adc
inc
add
pop
add
aas
addb
add
add
lods
adc
stc
pop
lea
cmpb
xchg
push
enter
shl
loope
test
stc
cmp
cmp
rcrb
jp
out
lock
dec
inc
add
sbb
add
add
cmp
pusha
add
push
add
add
rcrb
mov
rcrb
in
mov
sub
inc
add
mov
add
add
imul
inc
jo
scas
mov
sub
je
out
add
add
pop
cmp
lods
push
add
sub
testb
jbe
jg
add
add
adc
call
jge
cmp
mov
add
dec
add
pusha
add
jns
add
sbb
dec
add
inc
add
test
jo
sub
or
icebp
jge
shrl
mov
add
add
inc
pop
stc
mov
lret
idivl
lds
push
add
lret
aad
sahf
adc
xor
inc
sub
mov
add
jmp
jb
scas
sub
push
add
loopne
clc
cltd
inc
xchg
sbb
jp
adc
cmp
movsb
pop
fmuls
add
add
dec
lret
cwtl
lret
xor
add
mov
ret
pop
test
cwtl
andl
fs
fsubl
inc
add
pop
xor
push
clc
stos
nop
fsubrs
add
arpl
lds
xor
add
pop
add
nop
fsqrt
cmp
jno
add
push
add
dec
mov
xor
add
pop
add
push
add
add
shl
sbb
shlb
aaa
fmull
inc
enter
add
shrl
add
and
in
pop
add
lods
rcrb
dec
add
xor
or
add
sahf
xchg
stc
mov
add
cld
mov
add
call
lds
add
sub
loopne
loop
add
and
mov
lret
mov
repnz
insl
sub
add
leave
xchg
mov
fwait
ret
push
sub
mov
mov
mov
add
add
testb
add
sti
mov
aam
mov
add
add
xor
lods
xor
call
shl
mov
add
sahf
sub
aaa
add
push
add
arpl
xor
and
out
sbb
push
add
add
imul
ja
add
fmuls
add
add
notl
add
inc
mov
add
sub
add
cmpl
cmp
add
inc
test
add
inc
add
mov
ret
xchg
sar
rolb
sub
xchg
out
jge
add
cmp
mov
stos
popa
push
notl
pop
arpl
jle
stc
dec
lods
pop
add
cmp
fwait
nop
inc
add
push
xchg
mov
jmp
stos
adc
int
rcll
add
daa
add
push
add
pop
mov
and
mov
adc
add
cld
imul
cld
rorl
mov
or
add
sti
cmp
mov
mov
rorb
pop
add
loope
add
adc
push
add
adc
insl
sub
jno
lods
data16
add
mov
add
jb
loop
and
hlt
push
add
inc
mov
push
add
add
or
push
add
in
fimuls
add
sti
pop
add
push
add
fistl
add
add
loopne
addr16
add
add
and
jae
xchg
xor
hlt
scas
ret
add
inc
add
pop
jp
inc
inc
xor
mov
add
push
cwtl
add
pop
mov
insb
add
lods
mulb
add
adc
fwait
and
pop
add
or
and
pshufw
xor
cltd
in
jo
aam
add
cmp
mov
aaa
adc
repz
jae
sbb
pop
xchg
cltd
cli
jp
lahf
adc
mov
cld
loope
ret
idiv
jp
xchg
jbe
cwtl
lds
sarb
data16
popf
sbb
cmp
in
mov
lods
push
add
mov
add
daa
in
rcl
pop
fidivl
iret
and
into
std
pusha
add
inc
popf
inc
add
stos
mov
mov
dec
pop
add
xor
add
or
jge
lock
pop
ljmp
xchg
out
stc
sub
dec
push
add
mov
cmp
loopne
add
xchg
xchg
insl
jnp
add
add
cmpsb
dec
mov
mov
sahf
push
add
add
mov
jo
mov
add
loope
pop
xchg
repz
mov
add
shrl
add
add
adc
xchg
push
dec
addr16
arpl
add
shrl
push
xor
adc
xchg
mov
inc
add
add
div
or
les
pop
arpl
bound
xor
inc
add
add
adc
cmp
inc
aas
cmp
dec
hlt
sbb
daa
fstpt
fiadds
mov
lock
add
xor
push
add
pop
add
lahf
sub
in
jbe
add
in
xlat
sbb
sbb
or
and
movsl
add
lds
inc
imul
nop
inc
push
icebp
xchg
imul
xchg
pusha
add
fsubrl
add
in
out
sbb
mov
jno
pop
outsl
xchg
sbb
lea
mov
mov
add
cmpsb
decb
aas
dec
add
xchg
pop
add
in
bndstx
add
fdivrs
sbb
add
mov
cmp
mov
xchg
or
idivl
inc
add
pop
dec
add
ljmp
std
ljmp
fnstenv
or
lcall
xchg
mov
jnp
jl
cmp
loope
repnz
xchg
xor
xor
fsubrs
mov
jmp
add
inc
push
addr16
xchg
and
test
adc
add
add
xor
or
jbe
sbb
ret
add
adc
xchg
aas
fmull
cmpsb
adc
push
add
insl
stos
mov
xchg
mov
mov
rorb
rcrb
gs
dec
ret
out
mov
and
je
lea
adc
rcr
push
add
mov
add
mov
std
dec
add
add
add
push
pop
add
mov
dec
add
fistpl
xor
mov
pop
add
add
adc
shlb
xchg
cmp
daa
mov
sbb
sbb
movsb
in
ficomps
call
add
int
add
inc
add
gs
push
jns
add
add
or
sub
scas
loopne
and
add
dec
fiadds
xor
add
add
outsb
add
ret
mov
add
sub
adc
cwtl
xchg
push
mov
aam
pushf
mov
leave
mov
or
mov
push
xchg
mov
pop
add
mov
add
or
add
addr16
mov
dec
sub
imulb
sub
call
jge
add
in
jmp
fisubrl
mov
movsl
les
xor
add
xchg
inc
add
scas
cwtl
jg
add
fmull
cmp
push
add
xor
jne
mov
sub
add
jb
stc
push
xchg
mov
in
add
mov
out
or
adc
ja
add
mov
or
add
test
add
nop
pushf
jae
and
cmp
rcrb
push
pop
out
add
add
pop
int
imul
jb
mov
add
add
fmuls
enter
lret
cmc
fnstcw
push
add
inc
lods
sbb
and
mov
cli
adc
add
repnz
inc
add
outsl
push
add
gs
pop
jnp
fs
jo
lret
push
add
cmp
or
add
add
xchg
sub
movsl
dec
lods
pop
add
inc
push
add
pusha
add
mov
movsb
ret
add
bound
jns
lret
lcall
cmp
xchg
jns
add
in
pushf
add
aas
adc
fidivs
fs
loopne
add
push
shll
loope
add
movsb
and
cmp
mov
add
add
pop
push
add
sbb
inc
adc
lods
adc
jbe
lds
xchg
orb
scas
xchg
add
jo
testb
inc
sub
xor
lock
movsb
mov
mov
mov
adc
out
add
add
add
and
mov
add
push
add
ret
sbb
incb
rcr
sbb
sbbl
sbb
cwtl
mov
add
pusha
add
inc
add
repz
mov
and
push
movsb
sbbl
lret
xor
add
sbb
add
lods
int
hlt
loopne
or
pop
dec
adc
fcoml
sub
add
stos
pop
insb
add
and
iret
dec
add
out
xorb
add
pop
mov
into
sub
js
or
add
addb
add
ljmp
add
loop
mov
add
das
pop
insl
pop
daa
mov
fadds
add
cmp
add
int
daa
add
fdivl
and
jns
and
add
scas
imul
add
add
mov
add
add
repnz
adcb
popf
addr16
dec
add
dec
add
cmpsl
clc
xor
mov
add
shll
sub
add
fsubl
fistps
add
add
cld
fidivs
mov
pop
add
jae
add
add
sbb
inc
add
and
mov
data16
les
scas
mov
add
jno
cvtps2pi
inc
imul
and
mov
pushf
in
insl
cmp
sbb
and
mov
inc
pop
mov
ret
adc
jg
or
xor
cmpl
dec
pop
leave
and
sti
jb
and
arpl
out
mov
test
add
ljmp
sbb
add
jbe
xlat
ds
jmp
add
mov
fcompl
and
ljmp
lds
mov
jl
test
add
dec
push
add
int
add
loop
scas
fsts
add
add
out
sbb
cmp
iret
out
pop
add
mov
dec
mov
add
gs
add
add
mov
and
mov
fstpt
xor
popf
loop
add
xor
xor
test
add
lcall
movsl
arpl
or
jnp
roll
mov
mov
jg
add
in
imul
add
pop
repz
dec
sbb
mov
xchg
mov
ss
and
arpl
out
jbe
dec
add
add
cmp
sub
out
pop
pushf
xchg
or
pushf
mov
cmp
add
add
add
add
add
add
mov
add
movsl
out
loope
add
jo
lock
and
rclb
lods
inc
push
in
bound
lahf
outsb
add
mov
mov
pusha
add
movsl
xchg
icebp
test
add
in
xchg
xlat
repnz
pop
add
imul
add
jp
pop
add
test
popf
push
add
jb
sbb
add
add
jnp
mov
xchg
insl
xchg
cmp
push
add
negl
add
lea
add
add
add
add
add
mov
outsb
add
add
ret
jecxz
add
add
push
add
loopne
jl
mov
out
add
add
aas
aaa
sub
ja
add
add
add
cmovl
pop
add
and
repz
lds
xor
add
clc
jecxz
xchg
enter
add
cmpsb
pop
add
add
out
push
add
arpl
push
pop
add
xchg
ret
loop
shl
add
arpl
add
lret
out
pop
adc
fists
push
add
add
add
inc
add
jl
roll
fdivr
mov
sub
mov
push
pop
jp
scas
repz
stc
dec
add
jb
mov
je
jns
sti
mov
jp
push
add
test
dec
adc
scas
add
mov
xchg
dec
add
jle
mov
cmc
add
test
pusha
add
daa
mov
shrl
fcmovbe
push
out
lods
push
add
push
add
adc
inc
je
loope
pusha
add
loope
mov
fistpl
add
xor
push
adc
jle
fwait
cmp
inc
ficompl
int3
mov
add
ja
add
notl
outsl
call
sub
es
in
sub
or
pop
add
add
test
dec
cmp
add
or
push
add
lea
ds
test
sbb
pop
mov
rcrb
shlb
pop
mov
push
add
das
sub
jae
and
add
jbe
or
cltd
adc
mov
ja
daa
negl
clc
orb
xchg
ljmp
add
add
push
add
lret
xor
push
add
inc
pushf
pop
add
sarl
pop
cmpsb
dec
add
aas
or
imul
add
popf
push
add
adc
add
add
mov
add
xchg
jecxz
add
add
or
lods
and
popa
and
lahf
clc
pusha
add
add
imul
sbb
shrl
sbb
adc
mov
cli
mov
xchg
jecxz
testl
insl
aam
push
add
jl
pop
add
inc
pop
add
aaa
sbb
loopne
add
add
cmp
clc
and
jecxz
push
and
sub
xchg
push
add
inc
das
or
jmp
add
sbb
repz
add
push
add
or
add
insl
cmp
fs
cli
cwtl
cmpsl
int3
push
sbb
fildl
add
rcl
inc
imull
add
xor
std
sti
lock
pop
add
cmpsb
into
idivl
add
add
sub
pop
push
repnz
jecxz
sbb
popa
adc
add
nop
and
sub
push
dec
add
rorb
faddl
mov
or
inc
cmp
cmpsl
pusha
add
and
adc
stos
pop
lret
mov
rcrl
xchg
fsubl
sti
adc
add
pop
add
call
inc
int
jns
add
add
mov
incl
cwtl
mov
cmc
inc
jge
daa
sarb
mov
pusha
add
mov
inc
add
add
add
adc
imul
int
lss
rcll
xchg
push
add
fmuls
ljmp
add
add
mov
out
fistpl
pop
mov
loopne
add
xor
cmp
in
or
add
add
add
sarl
int
scas
sub
mov
or
rorb
loope
xor
ret
jl
dec
add
push
pand
push
sti
aaa
xor
into
daa
loope
add
add
shl
ljmp
lods
cmpxchg
add
jp
ficoms
inc
add
ret
jb
mov
stos
repz
jecxz
xor
add
sbb
cs
xor
aam
add
iret
popa
xchg
adc
mov
cmp
add
loop
rolb
fidivl
add
pop
push
add
xchg
mov
aas
cmc
cli
mov
add
add
test
pusha
add
stc
sahf
rolb
fcmove
pop
in
add
insb
add
mov
pop
add
inc
add
les
add
and
out
dec
add
pop
xor
sbb
icebp
jo
sbb
into
jge
add
inc
xlat
xor
or
add
repz
add
jo
xchg
inc
add
cmp
pop
insb
add
mov
mov
add
sub
ds
jbe
mov
or
xchg
inc
jno
sbb
rorb
or
sbb
pop
add
push
add
add
add
ljmp
popf
in
cmp
shr
stos
mov
adc
add
sub
xchg
mov
push
add
loope
xchg
cltd
lea
pop
add
lahf
movsl
sbb
xlat
or
mov
movsb
lods
mov
add
jo
mov
and
dec
add
mov
call
sti
fidivrl
add
mov
add
jge
add
add
xor
add
mov
sbb
jne
mov
add
aaa
mov
jnp
add
add
sub
in
push
cmpsb
repnz
and
and
insb
add
and
js
xchg
clc
in
add
pop
push
and
add
rol
push
int3
popf
xor
enter
adc
fwait
dec
add
jmp
or
pop
aas
stc
jno
test
aas
scas
arpl
movsl
mov
bswap
mov
insb
add
lods
fistpl
arpl
mov
adc
lahf
xor
sbb
ret
adc
cltd
outsl
scas
stos
pop
lods
enter
je
inc
add
sbb
mov
add
add
cmp
jo
in
test
icebp
dec
add
add
addr16
iret
loope
dec
test
cmp
add
ret
mov
mov
jnp
add
fidivrl
cltd
jmp
add
dec
add
sahf
ljmp
cmp
les
cmp
or
cld
add
mov
add
add
call
add
inc
add
pushf
inc
dec
add
add
insb
add
mov
add
dec
add
je
cltd
mov
add
xor
sbb
add
jne
add
jg
std
mov
je
add
scas
hlt
push
enter
inc
outsb
add
movsl
insb
add
inc
mov
add
imul
push
add
movl
add
adc
xchg
out
repz
mov
popf
and
add
and
sbb
add
add
lcall
mov
and
jns
dec
jo
xor
rcr
cli
sahf
inc
add
dec
pop
test
inc
add
dec
add
adc
bound
sbb
nop
push
add
add
fistl
lds
aad
add
mov
add
add
mov
test
into
scas
sti
mov
add
imul
add
add
jns
sar
sub
stos
mov
shlb
add
add
jne
je
sahf
js
add
out
fcomip
in
hlt
lret
pop
add
add
mov
add
adc
out
add
or
or
cmp
addr16
cmp
add
adc
in
add
mov
add
pop
add
or
push
add
decl
lods
jns
add
and
adc
add
add
push
mov
cltd
stc
sub
movsb
js
or
mov
mov
inc
jge
xchg
stos
add
fsubs
jb
mov
int3
ds
cmp
lahf
pop
xchg
movsl
or
add
or
cli
jl
ror
add
cmp
add
outsb
add
subb
outsl
add
add
add
loopne
push
dec
dec
add
add
scas
outsl
push
add
adc
add
frstor
add
mov
pop
add
cmp
add
and
daa
bound
cmp
mov
pop
in
mov
add
adc
fistps
sbb
jns
fwait
aam
icebp
pop
add
add
add
add
fisubl
insb
add
das
xchg
add
add
add
jb
mov
or
xor
mov
pop
leave
or
add
add
pop
sarl
adc
jl
sbb
in
cli
jae
add
add
and
fstps
sbb
add
add
add
xor
sbb
daa
in
inc
add
aam
mov
insb
add
push
add
in
jnp
not
pop
add
pop
or
add
repnz
add
out
jnp
cmpsl
scas
int3
jo
movsl
shlb
push
add
mov
out
add
test
fwait
pop
sarl
cld
cltd
inc
add
mov
repnz
in
mov
add
lret
das
leave
xlat
sbb
pop
mov
leave
lcall
scas
orb
rep
add
sub
lahf
inc
test
mov
jnp
add
fistps
add
stc
xchg
pop
add
and
adc
xlat
div
std
pop
sbb
dec
sahf
or
sbb
xor
add
in
enter
xchg
stos
jb
into
scas
push
add
hlt
imul
inc
sbb
enter
dec
add
add
jecxz
push
add
jne
add
daa
in
dec
iret
pusha
add
stos
int3
sbb
xchg
or
add
add
add
mov
rolb
ret
imul
mov
xchg
pop
add
mov
mov
xor
xchg
sbb
mov
add
fidivs
add
add
aad
push
add
es
bound
aam
pop
add
int3
lret
stos
adc
in
add
sub
lret
ficoms
lret
add
add
add
add
xchg
cli
push
add
dec
add
add
cmp
mov
in
jb
fwait
or
mov
cmpsb
xor
inc
adc
mov
sbb
out
xchg
dec
div
popa
inc
add
rcrb
add
int3
fisttpl
daa
mov
aas
int3
pop
lret
repnz
daa
push
add
adc
mov
mov
dec
inc
add
imul
insl
into
je
addl
lret
sub
jp
andb
loopne
and
xlat
fimull
jo
jge
pop
add
add
or
jg
int
sbb
add
inc
sbb
fcomps
inc
add
addl
pushf
mov
jne
fnstenv
add
jge
add
mov
and
sub
subl
add
shll
add
sbb
in
int3
cmp
stos
mov
add
lcall
mov
or
xchg
mov
add
and
mov
mov
orb
push
add
aad
cli
xchg
mov
add
js
nop
xchg
sub
mov
cld
xchg
add
aam
mov
mov
lret
pop
sub
cld
cmpsb
cltd
aam
or
and
in
js
loop
add
mov
mov
dec
add
inc
fsubrs
adc
sub
and
pop
lahf
mov
add
and
test
add
outsl
in
cld
loop
add
jp
mov
js
push
mov
shll
dec
add
add
xor
add
inc
add
xchg
fidivrs
lock
cmp
or
push
sub
sbb
repz
mov
add
xor
push
xor
stc
sahf
pop
xchg
mov
adc
jne
cmc
in
push
fmuls
adc
out
and
add
add
add
aad
sar
add
std
mov
adc
ret
into
pop
test
popf
call
mov
jne
add
mov
shll
cmp
repz
in
bound
mov
faddp
xchg
fsubs
add
scas
int
add
mov
cmp
inc
add
ret
jbe
lahf
out
std
mov
mov
jmp
add
mov
jne
mov
add
add
pushf
adc
hlt
add
lods
xchg
mov
add
xorl
dec
add
int3
mov
popf
loope
mov
inc
jae
jno
add
inc
add
add
add
test
aaa
repz
add
add
aaa
mov
add
or
add
inc
mov
lods
and
call
xchg
mov
xor
arpl
cmp
sti
stc
mov
outsl
imulb
sub
mov
mov
add
or
or
loop
mov
add
mov
add
ret
dec
add
and
or
fsubr
and
add
stos
pop
aaa
lock
and
add
pop
out
or
dec
mov
add
das
aad
add
add
adc
add
xchg
sub
dec
add
sub
fcmovnbe
pop
mov
add
movsb
lods
test
inc
lcall
inc
add
cwtl
pop
add
sahf
popa
stc
or
jl
sti
fistps
push
psrad
lahf
lret
test
add
mov
cli
leave
pop
add
or
mov
test
adc
stc
push
add
add
jmp
lock
push
lahf
mov
out
neg
sbb
jnp
add
aam
add
push
lods
rcrl
stos
enter
les
jno
movl
or
insl
in
lods
xchg
mov
ljmp
stos
aaa
dec
mov
jne
adc
and
loope
jl
and
insb
add
pop
add
push
add
add
movl
add
push
add
into
rclb
dec
add
add
sahf
lret
xorb
add
add
sbb
mov
js
shlb
or
push
add
push
add
and
jb
mov
add
scas
aam
cltd
jl
fiadds
jle
cmp
scas
shrb
push
add
add
push
add
test
ret
or
andb
push
add
jo
lds
sbb
inc
add
xchg
icebp
xor
jnp
data16
incb
pop
add
inc
popf
sub
jge
xchg
in
add
sbb
clc
adc
ret
mov
mov
xchg
addr16
add
sub
mov
dec
dec
add
push
add
add
loopne
aas
addr16
cltd
imul
mov
cmp
sub
add
inc
add
lret
rcrb
mov
push
dec
add
add
mov
sub
lret
mov
add
out
cmp
inc
out
imul
add
pop
jne
add
dec
add
xor
add
mov
test
inc
xchg
out
jecxz
or
inc
mov
stos
dec
add
mov
mov
mov
stos
mov
fadds
fimuls
push
mov
je
and
jne
add
add
jmp
add
mov
std
or
imul
add
hlt
add
pushf
mov
lret
add
mov
mov
push
cmp
jb
cmpsl
loopne
and
addr16
dec
add
lods
mov
paddusw
fadds
add
test
not
cmp
mov
pop
dec
add
shlb
push
add
mov
jp
repz
and
mov
inc
mov
push
adc
dec
add
add
cmp
dec
dec
add
shrb
jge
add
sbb
lods
loope
shr
add
rcrl
cmp
pop
add
add
add
lds
add
daa
mov
adc
mov
in
ffree
data16
and
loope
das
and
pop
mov
ja
roll
dec
add
pop
or
mov
test
test
dec
les
add
je
mov
add
call
add
pop
sbbb
lock
mov
fst
jge
or
sub
or
iret
push
add
add
mov
jno
xor
pop
jno
sbb
inc
add
add
fwait
out
repnz
xor
out
xor
ja
adc
fistpl
add
stc
sbb
cmp
mov
repz
setle
lea
and
push
add
add
cmp
mov
cs
movsb
mov
lret
fisubrs
daa
xchg
and
add
cmp
mov
addl
mov
adc
mov
cmp
add
rcr
cmc
mov
cmpsl
sbb
mov
pop
arpl
add
loop
sbb
mov
les
add
jnp
test
add
jo
fldl
mov
lret
stos
in
outsb
add
jnp
add
push
cld
paddq
sub
xchg
mov
pop
add
cmp
mov
xor
lcall
add
pop
xorl
in
bound
mov
push
sti
pop
add
cmc
mov
add
xor
leave
imul
vphsubwd
rorl
add
add
outsl
mov
add
fwait
test
jmp
or
loop
add
add
push
add
pop
lea
scas
inc
add
sbb
xchg
or
loope
loope
push
add
add
pop
add
xor
add
in
adc
inc
sub
adc
dec
add
xor
mov
add
add
and
ljmp
pop
add
add
add
add
sbb
mov
jb
and
add
mov
addr16
nop
test
ret
les
std
mov
mov
popf
lcall
add
cltd
and
push
add
cs
in
xlat
test
add
test
leave
testb
xor
sbb
movsl
adc
mov
stos
cmpsl
inc
clc
mov
cmp
xlat
int
cmp
enter
adc
stos
jns
adc
cmp
mov
leave
aam
add
push
add
add
int3
orl
repz
xchg
outsb
add
mov
dec
pop
mov
jb
sbb
pop
out
cmp
out
jae
inc
pop
add
shrb
gs
xchg
xor
sbb
lret
out
jmp
jbe
push
cld
rorl
add
popf
dec
pop
add
scas
mov
add
add
rcl
push
mov
mull
mov
dec
int
andl
push
add
xor
xor
out
dec
push
insb
add
scas
sub
icebp
pop
add
add
lods
cmp
jne
add
stos
lods
enter
aaa
jl
repz
add
out
add
in
add
stc
ja
stc
mov
add
mov
add
xor
push
add
imul
xchg
xor
hlt
cltd
sbb
popf
mov
sbbl
pop
add
mov
aaa
fstpt
loope
loope
jo
cmp
mov
mov
add
mov
loopne
inc
outsb
add
or
dec
xor
and
add
test
push
popf
into
inc
lods
or
sbb
les
add
lods
mov
ja
add
icebp
add
imul
or
push
add
sbb
push
add
inc
mov
movsb
or
cmp
add
popa
dec
add
pop
lds
sbb
fcomi
jns
rcrl
cmc
push
add
mov
pop
and
test
in
jmp
sbb
popf
shll
pop
rcll
add
fistpll
add
cltd
adc
in
add
test
into
popa
or
mov
rol
enter
add
xchg
add
add
call
pushl
add
mov
fdiv
pop
cmpsl
stc
movb
fmuls
mov
jbe
hlt
xor
inc
add
or
add
loope
out
add
pop
faddp
push
add
fsubr
ds
jne
iret
jo
sar
aam
mov
inc
leave
or
pusha
add
aam
add
loope
mov
out
sbb
xor
xor
dec
scas
jo
inc
mov
and
mov
xchg
imul
add
cmpsb
sbb
cld
cmp
iret
mov
inc
push
adc
stos
mov
sub
add
fistl
add
insl
xchg
sbb
add
push
add
add
ret
add
repnz
add
int3
arpl
add
lds
add
add
add
add
mov
iret
loopne
add
add
mov
fsubrl
pop
add
adc
sub
dec
dec
bound
and
add
add
inc
add
add
push
dec
xlat
adc
xchg
imul
add
ss
movsb
repnz
nopl
xchg
mov
push
add
add
dec
cmc
je
adc
mov
add
jg
add
dec
add
test
adc
lahf
aaa
cmp
add
insl
jns
int3
stos
jb
xchg
push
sub
pop
and
loope
add
add
add
push
add
and
sub
movl
xor
add
xorl
cwtl
sub
mov
push
das
sti
stc
repz
int
pop
jmp
pop
mov
add
cmp
push
mov
enter
jne
dec
mov
pop
insb
add
nop
adc
push
jno
div
loope
fildll
fisttpl
dec
add
cmpsl
popf
test
lret
mov
mov
xor
into
jmp
stc
in
cmp
add
loope
add
mov
mov
in
xorb
add
movsl
in
pushf
int3
push
add
int
mov
daa
lods
or
adc
mov
pusha
add
ror
mov
xor
fucomi
mov
aas
andl
adc
aad
scas
jae
enter
add
add
enter
add
lods
mov
fcoms
add
sub
pop
add
add
fisubrl
mov
popf
inc
add
and
lcall
imul
testb
add
add
add
xchg
jge
adc
add
add
cmp
cmp
push
add
adc
fstl
add
mov
add
or
mov
add
sbb
add
sub
jo
fsts
add
add
subl
dec
iret
cmp
add
dec
add
push
add
adc
add
xorb
mov
xor
jl
adc
aas
add
xchg
lret
sbb
mov
push
add
aas
inc
add
xchg
lret
fs
pop
pop
ret
and
jnp
add
or
push
add
lods
add
test
pushf
sub
movsb
mov
inc
sbb
sbb
sbb
dec
add
sbb
fsubrl
add
add
test
add
test
mov
xor
lcall
lret
ud1
sub
fldt
mov
add
inc
pop
js
movsb
add
sbb
xchg
popf
into
add
jge
repnz
sub
test
sbb
cmp
jne
out
xchg
xchg
add
dec
add
in
add
push
add
or
lret
scas
stos
and
pusha
add
pop
fnsave
add
jns
dec
add
add
into
enter
xchg
stos
hlt
hlt
cmp
add
clc
mov
add
pushl
xchg
or
test
and
icebp
pop
add
add
movsl
test
dec
add
xor
jmp
add
pop
push
add
roll
xor
fwait
rclb
cmp
cmc
xchg
js
mov
jp
adc
rcll
add
push
add
loope
and
add
cmc
fwait
cmp
sbb
jmp
add
add
adc
add
fwait
lret
mov
shrl
add
popa
notl
mov
add
add
jno
outsl
aas
inc
flds
mov
mov
jb
arpl
jl
fnclex
mov
xlat
js
fildll
inc
add
or
adc
in
add
adc
or
popf
mov
add
xchg
and
push
add
jne
mov
ds
or
lcall
cmp
arpl
call
ljmp
testb
add
loope
jno
and
inc
and
dec
add
icebp
lds
xlat
cmp
adc
sbb
jbe
imul
add
imul
mov
int3
scas
mov
pusha
add
add
sub
jb
xchg
ret
clc
inc
add
add
mov
add
icebp
in
xor
xchg
mov
in
add
add
and
jecxz
add
fsubrl
or
int
add
push
add
les
add
les
dec
add
add
jmp
and
fldcw
xor
fsubs
fcoml
dec
xchg
add
add
or
shrl
inc
lods
sub
xchg
inc
add
in
dec
add
add
add
aad
jecxz
add
or
jo
push
add
outsb
add
outsl
push
loopne
rcrb
mov
add
out
add
hlt
in
fdivrs
push
add
push
gs
pop
xchg
stc
aad
add
aad
add
add
aad
data16
mov
add
fmul
push
add
xor
subb
clc
xchg
dec
mov
fsubrs
lcall
jbe
out
scas
fwait
rcrl
add
add
jno
add
rolb
lahf
cli
add
arpl
add
add
jecxz
mov
jnp
shl
xlat
sbb
xor
push
add
in
add
mov
stos
push
add
fwait
xchg
or
mov
jno
or
ret
add
jl
jae
in
inc
add
and
shlb
add
push
dec
movsb
mov
and
sbb
push
add
add
mov
mov
outsb
add
xchg
movsl
adc
outsb
add
nop
test
std
inc
dec
add
cld
cwtl
neg
mov
add
add
xlat
lds
add
mov
rol
cmp
mov
testb
loope
add
mov
dec
add
push
add
cmpsl
adc
inc
add
sahf
gs
loope
mov
add
add
daa
inc
add
add
xchg
pushl
popa
scas
icebp
push
sub
xchg
idivl
push
dec
cmpsl
and
dec
in
scas
sti
rcrl
adc
inc
add
xchg
arpl
mov
jns
pop
add
and
xchg
xchg
add
push
add
fwait
xchg
push
sub
cli
jne
xor
add
sti
rcll
add
fstpl
dec
add
mov
push
add
fiadds
mov
add
push
add
jnp
into
arpl
fucomi
imul
outsb
add
add
rcll
push
inc
add
jns
outsb
add
mov
adc
mov
mov
dec
add
test
jg
xlat
mov
add
jne
add
ss
sbb
sahf
popf
lahf
popf
add
mov
xchg
lret
les
outsl
lret
fbstp
movsb
mov
add
in
fwait
jbe
mov
pop
add
adcl
add
lret
sbb
loopne
dec
add
jecxz
add
popa
fwait
mov
jg
add
add
add
sbb
or
jno
add
add
add
movsl
enter
xor
or
arpl
jae
mov
add
xchg
pop
push
pop
add
test
or
jb
jae
adc
rclb
shll
pusha
add
mov
add
pusha
add
inc
add
add
aaa
mov
xchg
jb
movsb
mov
add
add
in
add
cmpl
push
add
inc
add
lret
push
add
out
inc
adc
add
lret
in
aad
add
scas
sti
inc
add
xor
mov
xchg
add
gs
nop
aaa
or
pop
add
push
and
fcmovnb
adc
repz
and
je
daa
push
sarl
add
in
mov
lret
shll
inc
add
dec
add
mov
fisubrl
inc
out
call
push
lret
add
repnz
mov
xchg
mov
movsb
xor
xor
lods
inc
pop
cltd
scas
xlat
xor
or
fnstcw
sbb
add
pop
imul
add
add
xorb
add
adc
add
push
add
aas
adc
mov
lcall
gs
stc
fisubs
xchg
mov
nop
xchg
jns
js
aaa
mov
add
xor
add
add
cmp
fistps
fsubrs
leave
std
mov
add
mov
cli
movsl
mov
add
out
pop
add
imul
das
inc
add
sbb
add
add
xchg
sbb
cwtl
mov
add
add
sub
mov
add
shlb
rcl
fdivl
insl
js
ljmp
xchg
adc
sbb
mov
adc
push
add
or
adc
jne
orl
sarb
cmp
mov
add
pop
nop
push
add
pop
add
add
mov
stos
push
inc
and
sbb
aas
pop
add
lock
pop
add
test
adc
jecxz
add
add
add
mov
incb
jns
test
xchg
das
addb
add
mov
adc
lret
add
insl
push
fwait
sub
cmp
fcmovnu
push
add
sti
in
inc
out
repnz
and
mov
popf
outsb
add
or
mov
add
xor
sub
mov
sbb
aam
add
add
xor
pop
in
lahf
mov
pop
inc
add
outsb
add
adc
mov
add
repz
xor
add
add
xor
push
loope
fstps
add
add
jmp
dec
push
mov
sbb
mov
or
lds
dec
add
inc
fcoml
add
mov
in
jns
inc
add
pop
aaa
ljmp
add
add
add
insl
xchg
xor
mov
add
mov
orb
enter
pop
sbb
mov
mov
or
or
push
add
and
add
movsl
fldcw
xchg
call
dec
imul
mov
add
add
add
cmp
sbb
test
aam
test
inc
add
andl
shlb
xchg
mov
pop
jmp
pop
pop
dec
add
adc
jge
jae
lahf
stos
cld
push
cmpsb
or
std
jns
inc
fstps
mov
add
mov
test
jle
cmp
lcall
add
out
add
add
ds
mov
add
jne
add
add
lret
jmp
pop
mov
inc
add
addr16
xchg
pop
add
pop
jmp
add
add
jno
enter
add
xchg
cltd
pop
add
vmread
rorb
add
fistpll
and
cli
dec
add
and
mov
je
rorb
imul
push
add
xchg
mov
pop
enter
inc
out
push
add
push
add
mov
add
mov
add
sahf
into
mov
add
add
xor
sbb
add
loop
add
push
insl
pop
fstps
sbb
cmpl
sbb
mov
inc
add
mov
adc
stos
lods
in
shrb
add
in
xor
lret
sub
add
outsl
out
jge
add
dec
out
dec
add
add
push
jg
add
push
add
lods
in
or
mov
jns
pop
xor
icebp
jbe
lea
jns
mov
addr16
data16
mov
add
add
lea
inc
rol
out
aad
add
scas
push
add
add
add
addr16
pop
js
imul
add
xchg
lahf
add
shll
add
scas
fcmovnb
lcall
add
add
pop
add
mov
adc
sub
add
and
add
push
add
icebp
xchg
add
add
add
sbb
loope
dec
add
dec
cltd
xchg
subl
add
std
adc
mov
scas
fstpt
mov
add
out
sub
add
imul
pop
adc
push
sub
inc
add
jae
sub
pop
add
push
shlb
add
adc
xchg
pop
cvtps2pi
hlt
cmpsb
lea
lret
in
repz
add
jns
ret
add
add
push
add
jp
sub
cwtl
add
add
sbb
testb
daa
pop
and
loopne
push
xor
xlat
cmp
add
incb
add
or
aad
or
cmp
dec
add
out
jmp
ret
icebp
or
insb
add
movsb
push
lods
mov
add
xchg
mov
stos
add
insl
jbe
xchg
mov
push
add
ret
adc
popa
ljmp
adc
enter
pop
mov
add
mov
xchg
mov
adc
test
jne
jo
cld
add
iret
pop
or
add
xchg
loop
idivl
add
add
add
clc
nop
scas
xchg
aas
in
add
xor
mov
add
push
add
rcll
mov
add
leave
hlt
pop
fstpl
pop
add
add
jno
fimull
add
lcall
jns
and
cmp
jb
and
and
inc
add
and
sub
add
orb
cmp
adc
das
mov
mov
mov
jmp
jl
add
mov
add
pop
pop
add
movsl
push
add
push
xlat
sbb
sub
scas
pusha
add
add
mov
add
scas
cmp
out
sub
out
cmp
xchg
ja
stos
add
cmp
dec
add
pushf
sbb
movsb
fbld
jle
xchg
mov
clc
cmp
inc
add
add
lods
push
mov
pop
mov
add
cmp
jbe
outsb
add
sbb
or
add
mov
lods
adc
cmp
bound
mov
pop
add
xor
xchg
jmp
hlt
xor
push
add
mov
adc
bound
sub
sub
mov
aad
add
cmp
jae
pop
lcall
rorb
add
lret
adc
jbe
movsl
loope
pop
jb
add
cmp
stos
cld
enter
mov
mov
das
iret
inc
add
push
add
add
xchg
outsb
add
sbb
mov
iret
or
add
aaa
push
adc
add
scas
xchg
sbb
push
jns
push
add
jmp
add
or
and
sbb
fmuls
mov
ljmp
pop
add
popa
shll
add
mov
inc
add
dec
add
add
stc
int
adc
add
lahf
pusha
add
xchg
jbe
loopne
data16
push
add
adc
inc
sbbl
bound
or
mov
cmp
or
mov
test
mov
fisubl
sahf
scas
iret
mov
insl
bound
adc
mulb
js
addr16
push
add
xchg
test
xor
jecxz
mov
call
or
add
add
insb
add
add
push
push
add
hlt
sbbl
add
add
inc
cmp
cmpsl
or
add
cmp
add
cmpsb
mov
add
add
add
out
int
stos
add
push
adc
add
clc
and
mov
jns
add
pop
xor
xor
push
add
lods
bound
mov
std
jge
sbb
mov
inc
add
std
mov
xor
int
xchg
out
add
sub
pusha
add
add
fdivs
add
lea
pop
add
cmc
pushl
inc
add
call
addb
call
pop
or
add
pusha
add
and
roll
nop
adc
mov
pop
mov
fcomip
mov
cmp
push
add
cmpsl
in
inc
add
fists
push
add
cmpsl
push
add
pop
xchg
lock
pop
add
push
pop
add
outsb
add
add
xchg
add
add
cmovg
cmp
cmp
mov
push
add
add
add
fwait
cmp
jecxz
int
je
out
xchg
cmc
xor
add
out
out
push
add
add
repz
dec
add
call
add
orl
clc
imul
cmp
xchg
add
repnz
clc
sbb
jnp
add
jp
jnp
add
pop
loopne
add
pushf
mov
or
mov
add
add
lcall
and
mov
add
add
mov
push
add
std
cmp
aas
lret
lods
inc
push
pop
add
xor
fwait
xchg
cmp
scas
adc
jp
mov
ja
add
add
stos
loopne
pop
fwait
or
sbb
xor
test
push
add
pop
jne
cmp
bound
or
xchg
addb
mov
add
int
dec
add
mov
leave
cmc
test
enter
add
dec
add
push
add
mov
loopne
add
fists
outsl
loopne
data16
add
pop
add
sti
inc
mov
xchg
out
pop
add
jae
xchg
test
add
add
and
push
aas
dec
add
std
ficoms
icebp
pop
arpl
sub
adc
clc
lods
loop
push
sbb
shrl
and
dec
mov
lret
jne
in
mov
cmpsb
pusha
add
or
inc
push
jnp
pop
and
popa
dec
cmp
or
or
inc
add
xor
fmull
js
xor
pop
lods
sub
icebp
xor
je
inc
mov
add
cmpsb
shll
test
add
gs
add
sub
add
mov
mov
outsb
add
xor
mov
fistl
add
add
ja
mov
outsb
add
mov
add
in
flds
adc
add
add
in
jne
pop
jbe
addl
jae
aas
icebp
shlb
sbb
imul
add
add
xor
inc
mov
xor
repz
mov
xlat
ret
add
mov
sahf
inc
jp
mov
mov
pushf
jmp
xchg
xor
adc
mov
test
lea
add
mov
add
inc
xor
add
ja
popa
and
push
stos
repnz
mov
add
add
cmp
jmp
addr16
rcr
in
outsl
imul
add
pop
cmp
add
add
mov
add
add
add
sbb
jg
dec
lock
add
insb
add
lret
adc
js
inc
fistpll
jb
pusha
add
push
add
mov
loop
and
pushf
sbb
mov
cld
call
sub
sub
add
das
mov
adc
xchg
shll
and
js
push
add
add
sbb
add
add
add
inc
add
aaa
leave
xor
std
in
mov
or
or
xchg
movsl
jmp
or
xchg
sti
test
iret
int
add
mov
add
inc
or
aam
add
test
adcl
fsubrs
pop
cmovl
in
arpl
add
add
test
add
add
pop
sbb
add
mov
add
dec
add
sbb
mov
add
jae
add
xchg
jmp
add
hlt
scas
dec
add
dec
add
addb
and
sahf
mov
add
mov
aas
cli
jo
lock
jns
and
inc
add
add
mov
std
jmp
dec
or
jge
mov
in
adc
adc
aas
in
mov
mov
add
out
imul
push
add
mov
pop
repz
add
mov
mov
adc
fwait
inc
outsl
mov
cmp
xchg
scas
jb
sbb
inc
add
sti
loopne
and
xor
sbb
mov
bnd
lods
stos
int
add
sub
sbb
out
add
cli
xor
jns
add
repnz
pop
aad
outsb
add
movsb
enter
je
add
add
add
add
pop
add
and
xorl
sahf
push
add
add
adc
dec
add
mov
cmpl
xchg
enter
in
mov
bound
negl
imul
push
add
fstps
add
scas
fnstsw
shlb
mov
pop
mov
add
out
mov
add
or
add
add
pop
xchg
shrl
push
add
add
jl
xor
enter
xchg
stos
std
mov
inc
add
lods
jo
pop
add
inc
add
push
add
mov
arpl
into
push
add
pop
mov
push
test
add
add
add
mov
add
push
add
add
jge
add
jne
aaa
fwait
jp
adc
pusha
add
mov
add
add
fistps
pusha
add
movsl
or
cmc
ficomps
leave
sub
inc
add
add
add
xor
or
dec
add
dec
add
sub
ret
imul
or
je
mov
add
push
or
jge
into
lcall
add
add
aaa
cld
cltd
dec
add
add
add
ss
daa
mov
add
sub
inc
add
data16
dec
lods
repnz
add
add
add
pop
add
in
mov
mov
blcs
add
dec
add
pop
or
xchg
js
jp
mov
add
arpl
jmp
stos
cmp
sti
movsb
cmp
push
mov
add
stc
fs
pop
add
cmc
add
push
add
cmpsb
pop
iret
insl
aas
gs
nop
pop
add
andl
fwait
xlat
or
and
sub
cmp
mov
xor
push
sub
pop
jge
add
add
and
dec
mov
jp
sbb
shld
push
inc
add
and
add
and
xor
inc
add
add
pop
add
mov
dec
mov
xor
in
sbb
mov
mov
loope
ret
jmp
shlb
pusha
add
pop
jg
sti
mov
sbb
add
push
mov
add
push
in
jp
into
mov
add
add
add
add
adc
sbb
lret
andl
test
xchg
inc
add
faddl
stos
sbbb
stos
sub
sub
add
repz
loope
pop
add
fs
adc
call
or
push
add
inc
mov
aad
add
or
dec
inc
and
lock
les
add
loope
jmp
ror
push
add
daa
jle
fiadds
add
cmp
fdivr
sbb
insl
mov
out
xor
sahf
sbb
push
add
popf
mov
insl
subl
add
test
and
cwtl
mov
or
push
inc
add
add
mulb
mov
add
inc
nop
jp
mov
and
cmp
add
movsb
mov
adc
add
sbb
movsb
xchg
sti
insb
add
fimull
push
xor
inc
add
add
mov
jo
xor
add
sahf
add
mov
imul
add
daa
aam
dec
insb
add
add
mov
add
ror
les
xchg
incl
mov
add
inc
add
clc
sbb
cmpb
sbb
adcl
add
xchg
lret
mov
outsl
lcall
jp
add
jmp
or
lea
or
and
cmp
sub
add
out
dec
add
add
push
popa
sbb
mov
add
jecxz
pop
inc
add
clc
int3
jnp
mov
jo
sub
add
jle
push
add
adc
xchg
rcl
out
cmp
mov
std
out
movsb
in
mov
cmp
add
add
imul
shll
lret
je
sub
xor
cli
mov
add
ljmp
push
add
sbb
out
jp
lds
add
dec
add
aam
bswap
push
loope
add
sarl
or
push
add
push
add
iret
imul
fildl
and
add
loope
push
fcmove
add
nop
cmp
lret
sbb
push
add
jns
xor
add
jecxz
xor
lahf
xchg
cmp
add
xchg
int3
lock
dec
add
xlat
dec
mov
adc
pop
add
push
add
test
add
mov
and
inc
fstl
cmp
shlb
add
add
das
andb
adc
mov
add
jae
add
mov
js
jecxz
inc
add
outsb
add
shrl
add
loope
add
add
add
push
add
sahf
pusha
add
or
ljmp
push
add
add
jo
and
jae
add
shrb
add
lock
sahf
cmp
leave
in
push
pop
xchg
xchg
sbb
lea
add
mov
in
shlb
sbb
insl
in
out
outsb
add
nop
cmp
xor
sahf
imul
add
testl
stos
rcrb
pop
pop
add
add
popa
daa
inc
lea
imulb
xchg
fs
sbb
add
mov
lret
add
out
xchg
push
add
popf
pop
xchg
iret
shrb
dec
jno
pop
fdivp
inc
add
xor
fcom
or
cmpsl
cmp
add
add
cmp
mov
mov
add
jbe
das
stc
sbb
add
xlat
adc
aad
add
add
add
add
push
add
add
add
lret
push
add
add
add
test
add
jp
add
in
add
add
add
sbb
notl
add
add
add
call
out
ret
sahf
xchg
sub
dec
xchg
sbb
sbb
push
xchg
in
filds
adc
xchg
test
mov
add
xchg
cli
cltd
add
fistl
addr16
or
icebp
mov
hlt
int
out
pop
fsubs
jecxz
add
cltd
sar
mov
add
adc
inc
push
add
mov
loopne
add
lcall
mov
add
dec
add
add
or
aaa
or
add
mov
scas
das
mov
adc
faddp
and
movsl
jnp
bound
mov
dec
into
scas
xchg
in
sub
jl
jmp
push
sbb
mov
push
add
popa
popf
and
add
mov
xlat
dec
inc
add
jae
add
mov
mov
inc
mov
cmc
les
push
add
add
stos
popa
ret
add
dec
dec
in
jno
in
mov
ss
mov
add
outsl
sti
aad
push
add
push
add
push
add
sub
shlb
aaa
daa
jo
test
in
fldt
add
loopne
pop
add
into
dec
pushf
nop
scas
testl
add
cld
pusha
add
out
inc
push
add
inc
cwtl
xchg
lods
pushf
ljmp
push
add
lods
cli
adc
mov
add
fldenv
adc
ljmp
and
movsl
ja
clc
xchg
add
mov
add
xchg
mov
add
xchg
popf
dec
add
mov
or
int
sahf
jecxz
sbb
add
ret
push
add
fwait
mov
cmp
adc
xor
scas
cmp
add
add
jnp
add
mov
add
enter
in
loopne
cs
adc
rorb
add
les
int
jge
inc
add
add
aas
arpl
add
mov
stos
mov
clc
jo
and
inc
add
repnz
aas
push
lret
add
dec
add
sub
sub
add
or
xchg
lret
lahf
dec
push
cld
adc
cli
mov
sbbb
imul
out
ljmp
jg
push
cltd
add
xor
stos
or
push
mov
add
scas
das
xchg
mov
das
add
add
fldcw
jne
push
add
out
xchg
int
imul
xor
and
ret
mov
movsl
dec
rclb
bound
inc
sbb
repz
mov
fldt
cmc
std
add
std
sbb
data16
cmp
shl
inc
cmp
cmpsl
stos
sahf
test
cmp
mov
add
jae
add
mov
mov
pop
add
xchg
ret
pusha
add
insl
stos
test
popf
pop
add
add
push
clc
push
add
jns
add
inc
push
add
add
cli
imul
cmp
jecxz
dec
add
add
mov
and
jnp
test
xchg
adc
ret
sbb
jle
cmp
jmp
pop
add
cld
jge
cld
xchg
fsubp
adc
and
divb
xor
das
cmpsb
add
cld
pop
lock
dec
add
add
repz
outsb
add
add
xchg
xor
loope
add
add
bound
jl
cmpsl
jecxz
add
add
std
imul
add
inc
adc
repnz
sub
add
out
scas
jmp
pop
popf
push
add
jnp
in
inc
jbe
nop
and
outsb
add
or
jg
push
xchg
cmp
adc
std
xchg
and
mov
push
add
add
test
xor
mov
out
push
mov
sub
add
mov
add
or
fwait
mov
dec
add
add
mov
aaa
dec
add
jb
pop
dec
repz
jo
cmp
cmpsl
insl
mov
ret
pop
or
xchg
dec
pop
test
dec
add
cmpsl
push
mov
ficoms
lods
fs
pop
add
lods
sarb
mov
add
add
add
mov
mov
clc
aas
or
andb
les
add
das
mov
mov
aad
daa
scas
shll
add
add
out
leave
ja
stos
add
inc
xor
repz
push
and
mov
int3
fsubs
and
push
add
or
fcomps
loope
push
rcrl
testb
xchg
lods
mov
or
loope
jl
out
shrb
add
pushf
popa
test
dec
add
add
add
testb
add
sahf
imul
sub
pop
add
add
movsb
xchg
xchg
add
add
add
std
lods
mov
fmuls
in
lret
add
pop
add
es
sbb
sbb
push
add
jmp
add
add
add
pop
add
jp
aaa
cmp
sbb
add
or
inc
add
cmp
sub
add
mov
add
add
cmc
xchg
push
stc
adc
dec
popf
js
nop
andb
in
lahf
out
out
sub
push
lahf
addr16
dec
add
push
jne
jecxz
das
ficoms
mov
mov
add
jae
fmuls
add
sbb
sbbb
je
sahf
xchg
jg
sbb
imul
movsl
mov
add
mov
scas
std
push
add
sub
xor
stc
int3
add
push
add
xchg
add
jle
negl
pop
add
add
pop
lods
sbb
jl
xchg
pop
movsb
mov
xor
cld
pop
insb
add
mov
add
add
add
lret
pushl
add
sub
mov
jle
loopne
scas
mov
pop
jbe
mov
add
fwait
sub
int3
movsb
adc
ret
add
mov
xchg
pop
rol
andl
push
hlt
sti
pop
movsl
sub
adc
repz
mov
imul
mov
fcmove
nop
cmp
or
cwtl
call
je
popa
sub
cmpl
andb
push
add
add
sarl
scas
hlt
shrl
add
inc
add
int
add
pop
add
add
add
add
stos
pop
add
pop
xor
add
jl
popf
mov
add
aas
leave
pop
xchg
sti
push
or
push
add
inc
add
add
pop
inc
daa
dec
jns
sub
inc
add
pop
stos
dec
or
or
insl
movsb
cwtl
inc
add
scas
les
int
add
jns
dec
popf
leave
mulb
std
clc
jmp
pushf
add
rol
xor
or
dec
or
adc
add
out
and
inc
into
adc
xor
lret
test
imul
into
dec
or
and
call
mov
mov
add
add
enter
fistps
out
sub
and
xchg
cli
clc
or
outsb
add
and
ljmp
dec
adcb
push
add
aad
xlat
inc
add
jge
add
add
add
xchg
add
sahf
xchg
sbbb
mull
add
add
add
dec
add
jecxz
xchg
add
cmp
movsb
les
inc
mov
imulb
lret
mov
mov
jb
pop
movsl
mov
cmpsl
loope
adc
mov
pop
push
add
cmp
scas
pop
sub
push
add
add
add
push
add
shl
mov
add
add
jle
pop
mov
mov
add
add
add
jecxz
test
mov
xchg
leave
inc
jecxz
daa
mov
outsb
add
push
add
mov
or
mov
push
add
jmp
std
in
fmull
mov
test
jmp
shrl
xchg
add
pop
xchg
pusha
add
or
fdiv
repnz
and
jmp
lods
sbb
fcomp
pop
fnstenv
add
add
mov
xor
pop
mov
lods
mov
inc
add
add
add
aas
adc
sub
push
loope
add
or
cmp
ror
sbb
add
je
andl
push
add
inc
dec
add
clc
das
fwait
adc
insb
add
add
or
mov
mov
dec
add
inc
add
fstpt
mov
test
sbb
pop
test
in
and
cmp
add
xchg
add
mov
cmpsb
xchg
cmp
add
hlt
dec
add
add
inc
leave
gs
push
add
std
xchg
push
add
pusha
add
cmpb
adc
mov
sub
into
pop
mull
cmp
mov
xchg
movsl
lods
shll
add
lret
aam
add
rorl
xlat
mov
pop
and
inc
add
add
push
add
jb
cmp
push
add
and
or
lret
jbe
xor
cmp
xlat
aas
and
pop
add
xchg
xchg
mov
insl
test
add
mov
add
and
mov
add
add
push
ret
add
cmc
xchg
bound
jno
add
aaa
faddl
add
sbb
sub
xlat
pop
pusha
add
mov
cmpb
push
add
push
add
in
repz
cmp
add
cmpsb
in
add
add
mov
sbb
scas
sub
add
aas
sahf
jbe
mov
add
cmp
mov
dec
add
lret
mov
nop
push
add
mov
add
jecxz
call
ss
xlat
rcll
test
cmpsl
jb
jo
add
cwtl
ja
dec
call
add
add
jnp
mov
mov
mov
cmp
dec
adc
jle
cmpsb
dec
add
imulb
mov
shrl
mov
aad
addr16
scas
sbb
fistpll
and
push
popa
add
pop
gs
add
daa
xor
adc
adc
mov
xor
mov
mov
mov
add
jne
add
fistpll
inc
mov
add
or
push
add
jno
out
xchg
mov
cmpl
lret
stc
scas
test
pop
add
dec
add
add
push
push
add
add
enter
add
sub
scas
movsl
sbb
fldenv
add
in
mov
pusha
add
mov
lcall
or
loop
out
lret
mov
add
jecxz
mov
inc
mov
xchg
out
inc
add
lea
pop
fmull
outsb
add
popf
aam
add
lret
es
add
jae
shr
ret
shr
add
sub
lret
in
aaa
push
add
jmp
add
leave
mov
dec
add
xchg
adc
lahf
ljmp
test
jge
dec
add
mov
daa
mov
adc
es
sub
jbe
enter
add
adc
jle
sbb
je
data16
sbb
jb
iret
pop
inc
add
xchg
sbb
enter
add
add
pop
jno
fldt
aad
add
inc
add
cmp
add
or
add
mov
fistl
js
push
mov
leave
aad
add
push
add
call
jl
loope
adc
mov
add
add
xor
repnz
stos
insb
add
and
iret
dec
add
enter
cmp
add
add
push
add
and
mov
xor
add
jbe
paddsb
add
mov
rcr
lds
add
pop
fdivrl
out
and
add
lret
add
add
in
adc
xchg
stc
xor
jge
add
jbe
mov
icebp
mov
inc
add
add
add
mov
push
inc
add
not
mov
xchg
add
cli
stc
pop
mov
mov
je
mov
imul
cwtl
mov
sub
sti
scas
aas
cltd
enter
leave
unpcklps
push
add
shl
ljmp
add
cmp
mov
testl
add
add
add
mov
in
cmp
cmp
sbb
xchg
stos
cltd
mov
nop
je
mov
ljmp
mov
decb
sbb
in
data16
add
add
add
ja
lods
test
mov
add
push
add
test
add
cmpsb
push
add
dec
add
add
add
push
dec
xor
add
and
popf
or
jg
dec
add
pop
add
pop
testl
add
add
add
mov
add
mov
jne
repz
das
add
mov
add
enter
mov
add
cmp
xor
push
add
add
sbb
xchg
or
flds
adc
dec
mov
xchg
ja
add
rorl
cmp
xor
dec
add
leave
jge
rol
add
movsl
sarb
xchg
rolb
push
add
add
add
divb
add
xchg
jg
add
add
jmp
push
mov
jmp
add
pop
add
rcll
add
jg
jnp
icebp
imul
add
add
pop
inc
stc
xlat
pop
push
fstpt
add
xchg
popf
push
fnstcw
outsl
cmp
xchg
stos
xlat
arpl
mov
loop
mov
loopne
or
jns
ret
adcl
fadds
add
xchg
sbb
js
xor
add
inc
xchg
push
add
or
stc
dec
mov
add
add
add
inc
push
add
mov
mov
add
jns
sub
roll
xor
aaa
mov
arpl
sbb
out
mov
cmp
mov
or
in
jae
in
jbe
mov
xlat
push
add
jge
sub
add
add
scas
loope
add
lds
dec
ss
or
add
push
add
add
cli
cmp
add
repz
inc
leave
xor
mov
push
cli
add
add
add
cmp
add
inc
cli
test
push
repnz
add
icebp
lret
mov
rcrl
add
push
add
add
fidivl
loop
stos
mov
add
mov
xchg
inc
add
aaa
sahf
push
sbb
dec
popf
adc
pop
add
rolb
add
sub
xor
mov
add
lret
mov
rolb
add
test
jnp
push
add
pop
loopne
cmp
xadd
add
add
sub
int3
inc
add
push
add
jb
cmc
ljmp
cmp
fnstsw
mov
mov
dec
add
sarb
add
add
pop
inc
sub
mov
add
add
mov
pop
xor
clc
std
out
cmc
inc
add
add
add
cmp
test
adc
lods
div
mov
or
add
mov
mov
add
ja
inc
add
mov
and
xchg
push
add
add
and
subl
add
aas
rcll
add
add
push
inc
sbb
sahf
jp
icebp
adc
add
add
add
shl
cmp
mov
adc
xchg
jge
mov
add
push
inc
add
add
sbb
fldt
add
add
add
in
jmp
inc
jp
add
jge
sbb
repz
jecxz
sahf
xor
mov
push
add
add
and
stc
jo
js
fdivrl
push
stos
xor
push
lcall
and
jns
mov
and
push
add
inc
add
lea
xchg
pop
add
sbb
push
add
imulb
mov
mov
add
add
dec
add
imul
ljmp
add
hlt
xchg
sahf
push
add
imul
sbb
add
jle
add
out
subb
arpl
mov
xor
std
sub
mov
cs
lret
add
into
test
test
add
arpl
mov
gs
add
mov
add
add
adc
dec
add
imulb
add
or
add
ret
mov
add
xchg
cmpsb
add
cmpsl
jecxz
inc
jge
out
leave
mov
test
aad
add
rorb
add
ret
cmp
xor
add
pop
pop
lods
dec
add
add
rcl
pop
add
daa
inc
add
lret
jno
add
xor
insb
add
pop
add
mov
add
rcl
addb
inc
add
add
add
add
add
push
dec
ret
or
rcll
add
inc
js
mov
leave
push
add
add
add
add
push
cwtl
popa
cltd
xor
mov
add
add
add
movsb
push
pushf
xchg
cmp
stos
lds
shlb
add
add
jecxz
mov
add
sbb
cmpsl
fs
mov
popa
jns
cmp
sub
mov
add
mov
jbe
outsb
add
dec
hlt
pop
mov
and
xchg
or
adc
sarb
add
sub
lods
inc
xchg
or
sub
add
imul
data16
cmp
popa
and
and
popf
stos
mov
lds
add
aas
cld
xor
or
add
add
add
jnp
std
xor
pop
dec
add
bound
xor
xor
and
popa
gs
hlt
xor
add
push
add
in
add
mov
add
add
mov
pop
add
xchg
inc
mov
add
adc
xor
add
cmp
out
jae
loopne
andl
add
addr16
xchg
dec
movsb
pop
add
pop
imul
inc
add
rol
sub
add
mov
out
push
add
fisttpll
call
ror
or
jge
or
inc
addr16
out
mov
mov
push
pusha
add
fcmovnb
add
xchg
ret
sub
sar
sub
in
dec
fistl
mov
add
push
add
jnp
add
dec
add
jb
rcrl
in
sbb
add
mov
mov
stos
fimuls
ds
mov
push
add
push
add
ja
dec
add
add
add
cmp
jl
mov
dec
add
add
cmp
xor
dec
add
cli
sbbb
or
out
add
add
add
or
mov
ret
loop
dec
add
pop
dec
add
push
and
repnz
mov
inc
add
add
xor
mov
push
add
stc
pop
jnp
mov
mov
adc
lods
aaa
call
jnp
jge
arpl
lret
xchg
frstor
pushf
pop
shll
std
scas
jge
ret
push
add
xchg
sti
enter
mov
stos
sbb
in
pushf
cmp
add
mov
js
cmp
push
add
adc
sub
dec
add
pop
add
clc
xchg
lea
add
dec
add
pop
sbb
cmp
inc
movsb
dec
add
or
lea
jge
bound
sub
add
loopne
push
insb
add
add
push
cmp
xor
fidivl
push
iret
jae
fsubrs
or
pop
jg
add
add
leave
scas
dec
fwait
dec
leave
stos
insb
add
add
and
jge
pushf
cmp
push
add
mov
adc
mov
cmpsb
adc
iret
pop
ret
ds
cwtl
add
xor
pop
mov
add
push
fiadds
jnp
cmp
iret
in
pop
scas
icebp
push
add
add
cmp
jg
clc
pushf
add
xchg
xchg
jmp
cmpsb
pop
fwait
push
js
pop
or
mov
stc
adc
jno
rcll
lret
add
repz
sti
daa
loope
mov
add
pushf
subb
add
inc
imul
xor
or
divb
add
xor
push
add
add
add
add
add
mov
add
add
pop
add
lock
xchg
pop
cmc
inc
push
sub
into
decb
add
jle
mov
fisubrs
xchg
insl
add
add
sahf
xor
adc
pop
mov
or
sti
mov
and
push
add
mov
add
jge
add
shl
mov
shr
cmpsl
or
dec
lock
add
aaa
dec
add
test
test
add
add
out
into
jnp
push
add
dec
add
mov
jmp
sub
dec
outsl
jle
ret
jge
bound
and
jbe
repz
xchg
aas
stc
shrb
dec
add
sub
stc
cltd
push
into
iret
insl
cmpb
pop
add
push
add
add
add
pop
add
adcb
pop
and
add
and
dec
add
mov
lret
dec
add
clc
mov
cmpsl
adc
xor
iret
xor
dec
add
add
add
jg
insb
add
xor
lret
sahf
arpl
jge
bound
cmp
sub
add
add
and
add
cmp
pop
sbb
inc
mov
add
out
scas
neg
pop
add
pop
inc
xchg
cmp
lahf
push
add
lret
jne
mov
popa
push
add
addb
add
mov
add
xchg
add
aad
jg
add
lods
cli
mov
into
fwait
adc
mull
xchg
ret
imul
mov
add
jmp
fcmovnu
js
insb
add
inc
mov
add
add
pop
add
mov
add
add
dec
inc
movsb
mov
ret
push
inc
add
mov
fildll
subb
xor
rclb
add
or
mov
push
data16
add
add
mov
add
xor
and
sbb
xchg
cmp
pop
add
add
add
add
add
lock
cmp
imul
mov
adc
mov
add
js
sbb
stos
leave
push
leave
mov
add
aaa
stc
aam
add
mov
add
push
and
icebp
frstor
add
dec
push
add
add
add
aam
xchg
lea
and
repz
nop
out
sbb
js
bound
jmp
in
or
jl
in
mov
mov
test
lret
cmpl
sub
out
mov
push
add
and
xor
fwait
add
in
and
adc
popf
mov
dec
add
add
or
test
mov
leave
aam
add
adc
test
mov
ds
xor
jmp
mov
call
insb
add
sbb
add
add
add
mov
mov
and
add
add
fwait
sub
scas
add
pop
add
pop
cmpsb
xor
add
push
add
ret
jae
cmp
mov
jge
adc
jae
add
rcr
add
add
aas
xor
stc
pop
mov
das
mov
add
imul
jmp
add
add
movsl
shll
cli
ljmp
inc
add
sub
subb
cmpsb
add
xor
pop
cmp
lods
push
hlt
jmp
add
and
push
add
cmp
ret
jmp
jle
dec
pop
jg
sub
fld
fnstsw
mov
add
add
js
mov
and
push
push
imul
xorb
xor
mov
inc
add
daa
cmpl
adc
out
or
hlt
sbb
js
movsl
add
lret
and
cld
pusha
add
cmp
jo
and
jg
add
fstps
add
mov
and
add
add
adc
adc
out
loopne
add
add
lret
ja
mov
add
into
xchg
test
sti
or
xchg
cmpsl
lock
pop
mov
mov
rcr
in
add
leave
inc
add
js
rcr
scas
iret
mov
mov
hlt
inc
jns
add
pop
repnz
mov
aad
add
cwtl
movlps
sbb
dec
add
add
pop
insl
ficompl
add
popf
out
add
sub
mov
mov
dec
add
add
or
lahf
inc
inc
cmp
call
lahf
rcl
icebp
out
xchg
imul
add
int
add
cmp
mov
aaa
aam
add
fists
jmp
mov
adc
sahf
jbe
add
mov
add
loop
in
jmp
ds
xor
jb
push
popf
xlat
push
add
pop
and
add
in
add
add
aam
into
xchg
pushf
push
fcompl
mov
mov
test
cmp
arpl
cmp
jecxz
sbb
mov
mov
add
dec
nop
xchg
dec
push
in
sub
lock
ja
das
lcall
mov
add
add
call
sar
ret
popa
mov
dec
add
mov
push
add
push
add
lret
lods
cmpl
gs
enter
aaa
xchg
and
sub
orb
add
cltd
jno
xchg
testb
push
xor
shll
sub
fsubr
shl
sub
mov
into
inc
ret
or
sti
xor
nop
insl
in
fists
rcrl
adcb
add
push
inc
add
add
or
ror
mov
add
add
les
add
mov
fisttpll
xor
xor
test
lods
jne
mov
add
inc
add
jmp
add
pushf
rcl
mov
adc
push
shrb
mov
nop
sti
imulb
add
or
mov
cmp
add
sbb
jle
sbbl
loope
daa
pop
popf
out
in
sahf
xor
add
add
jbe
scas
sub
idiv
call
mov
add
aas
inc
add
hlt
xlat
mov
das
test
sub
add
or
fisubs
add
dec
add
sub
stos
in
repnz
add
sub
mov
jp
mov
inc
add
add
std
shll
jg
adc
xchg
xchg
jecxz
xor
and
add
add
add
inc
add
adc
bound
in
add
shll
daa
sbb
dec
ljmp
add
add
cmpsb
add
loope
jo
aad
adc
jecxz
xchg
pop
negl
lea
push
add
fistps
or
in
add
add
push
add
add
add
ret
sbb
lea
add
and
sbb
insb
add
call
imul
mov
adc
add
add
cmp
xchg
sti
and
and
xchg
aas
je
and
jae
mov
mov
add
sbb
stos
loopne
add
cmpsb
xor
int3
popa
mov
or
stc
jle
mov
mov
add
call
leave
adc
sbb
lcall
add
lret
fsubrl
mov
add
add
mov
xor
mov
add
or
mov
iret
sub
add
nop
aad
add
adc
and
mov
or
outsl
xor
xor
push
add
add
sahf
les
mov
pop
push
push
sbb
mov
movsb
xor
mov
add
pusha
add
mov
imul
add
lret
imul
jns
inc
add
js
xchg
inc
add
mov
add
xchg
pop
add
add
xchg
jae
pushf
call
fisubrs
add
pushf
xchg
mov
inc
add
mov
rol
out
idivl
add
jbe
and
cltd
sti
fistps
mov
ja
push
add
out
add
loope
add
out
loop
ja
out
add
loopne
push
add
sbb
push
add
add
imulb
add
fnsave
add
mov
pop
add
push
adc
outsb
add
jge
add
sbb
out
sahf
push
add
mov
add
add
push
add
mov
cld
lods
lods
mov
jmp
pusha
add
insb
add
jae
xchg
xor
insb
add
loope
cmp
add
pop
rep
jne
insl
add
inc
jb
fildl
lods
cwtl
sub
fnsave
mov
int
ret
bound
cmp
pop
and
push
add
roll
jno
sub
adc
nop
cmp
mov
add
add
test
lcall
ret
jecxz
xchg
push
add
sbb
mov
and
imul
xlat
jmp
out
cmpsl
sub
dec
jg
mov
out
add
sub
jg
add
add
add
sub
xchg
outsb
add
add
sbb
cmp
adc
add
add
add
add
call
add
icebp
add
jg
xor
cmp
mov
add
push
sbb
aad
cmp
cmp
pop
add
out
cmp
mov
test
outsl
inc
add
lods
inc
pop
add
mov
aad
cmp
and
cwtl
arpl
add
add
sbb
pop
xchg
inc
add
lock
add
mov
add
fidivrl
add
add
mov
add
mov
nop
adc
sbb
out
gs
scas
xchg
jne
add
jnp
inc
add
sbb
add
in
push
add
add
mov
add
scas
cmpsb
add
xchg
xchg
push
cwtl
adc
dec
sub
adcb
mov
mov
stos
and
fsub
test
arpl
add
dec
add
push
add
add
add
dec
add
lods
add
repnz
adc
out
sarb
or
mov
xchg
add
add
xor
clc
xor
fucomip
pop
add
sub
sbb
sbb
popa
popa
icebp
add
int3
jo
cmp
jge
cmp
jmp
jnp
add
or
call
pusha
add
repnz
inc
xor
ja
inc
dec
add
add
das
adc
push
add
imul
adc
adc
mov
or
xor
data16
shrb
in
and
std
loope
test
unpckhps
add
int
mov
adc
jo
daa
mov
adc
imul
push
add
sbbb
aam
jbe
call
add
in
cmp
add
mov
mov
dec
add
imul
push
add
popa
pusha
add
test
add
add
adc
rcrl
sub
test
outsb
add
loopne
add
popf
mov
and
loope
lret
pop
pusha
add
push
add
push
insb
add
mov
fdivrs
pop
pop
add
add
mov
fsubrp
adc
push
cmpsb
add
add
mov
jno
sub
shll
cld
pop
adc
mov
iret
add
mov
push
das
shll
mov
fstl
jo
ljmp
fistpl
pop
pop
jnp
add
mov
addr16
xor
nop
jmp
add
scas
icebp
jo
roll
add
mov
and
movsb
cmp
cmc
xor
add
pop
clc
loopne
fbstp
sub
sub
jb
add
in
out
push
add
sub
sub
pushf
jno
add
or
sbb
add
or
or
add
adc
cli
mov
cmp
pop
add
add
xor
jle
insl
push
add
cmp
aas
xor
cmc
arpl
popf
ljmp
xor
sti
in
loopne
pop
add
pushf
aam
mov
add
mov
adc
pop
jg
mov
add
add
inc
add
mov
mov
add
iret
add
xchg
movsb
pusha
add
add
add
pop
loope
add
jle
sahf
popa
sti
sti
lret
gs
and
jbe
add
cs
aaa
jg
add
add
rcl
cld
imul
push
and
lcall
add
mov
sbb
add
lcall
repz
data16
add
pop
insb
add
push
add
dec
dec
add
add
or
or
add
add
adc
sarb
cmc
pop
add
push
add
adc
adc
icebp
out
in
add
ja
add
inc
add
mov
add
adc
bound
mov
jl
ljmp
int3
out
decl
add
cmp
arpl
pop
add
add
push
cltd
jnp
movsb
sbb
add
mov
add
stos
andnps
lds
adc
ljmp
popf
insl
aas
xor
add
add
stos
jecxz
fistpll
aad
mov
jl
hlt
bound
test
add
jne
jbe
stc
inc
xor
mov
adc
and
fsubs
dec
shr
push
repz
cmp
fiaddl
pop
sbb
xlat
hlt
pop
movsb
sub
add
cmp
icebp
mov
jmp
in
imulb
inc
roll
add
push
add
mov
or
mov
inc
iret
sbb
add
cmp
sbb
add
and
add
mov
mov
add
lea
mov
add
push
adc
mov
add
add
rolb
adcl
add
jmp
add
add
lahf
xchg
lret
add
add
add
push
add
jbe
mov
push
add
push
ret
xor
jmp
clc
or
pop
add
pop
jne
outsl
jne
xchg
cvttps2pi
mov
sbb
mov
popf
call
jmp
cld
outsl
mov
pop
mov
into
std
repz
and
fstpl
fldt
in
inc
out
mov
jmp
add
insb
add
pop
pop
dec
xchg
push
add
jmp
jo
add
cli
stc
push
add
add
insl
add
cmpsb
mov
adc
call
sbb
cmp
xor
jp
pusha
add
add
add
add
mov
sbb
mov
shlb
add
adc
mov
xchg
out
mov
call
add
lea
mov
add
out
ret
xchg
add
cltd
lahf
rcr
popf
xor
inc
add
sbb
pop
les
mov
test
dec
add
pop
mov
scas
pop
push
add
fisttps
add
mov
add
sbb
push
add
mov
scas
int3
adc
add
aas
xchg
shrb
pusha
add
fcmovnbe
xor
call
dec
add
adc
add
xor
sarb
insl
imul
cltd
or
push
fnsave
inc
add
negb
sbb
mov
or
shrb
negl
add
cld
and
jp
pinsrw
mov
lods
xlat
mov
add
icebp
sbb
out
push
inc
gs
jnp
stc
push
add
add
and
inc
add
sub
xor
lret
dec
add
mov
add
add
sahf
mov
pop
in
test
cmp
xchg
adc
pop
cwtl
aad
loop
add
ret
sti
inc
and
and
jb
lcall
sub
and
push
push
add
or
cvtpi2ps
push
cltd
data16
enter
cmp
jo
in
jns
add
add
add
add
int3
daa
push
add
fistpll
add
pusha
add
adc
cwtl
xchg
cmp
pop
clc
fcomps
xor
add
ja
jne
add
dec
add
aaa
test
sbb
pop
jg
or
pop
dec
add
arpl
add
or
add
add
add
sbb
inc
add
adc
add
mov
add
push
cmpsb
aaa
jg
xchg
cmp
add
adc
pop
mov
jge
jecxz
mov
movsl
scas
les
aam
add
ret
xchg
out
add
in
ss
mov
fists
jle
mov
add
adc
pop
ljmp
adc
sbb
adc
mov
add
push
add
mov
or
adc
stos
inc
add
mov
add
jp
mov
fnstsw
push
add
push
add
bound
or
inc
add
xchg
insb
add
add
jbe
call
testb
insl
nop
fcoml
add
out
scas
leave
stos
pop
mov
add
lods
or
sbb
add
sub
ror
push
test
sbb
das
test
into
cwtl
pop
subl
orb
mov
xlat
add
sbb
cmp
add
fsubs
into
add
mov
scas
movaps
add
je
xchg
adc
call
mov
add
jb
inc
add
add
add
mov
add
popf
inc
add
pop
or
cld
jecxz
mov
imul
outsb
add
add
and
or
sbb
fxch
andb
das
sbb
or
jae
sbb
xor
fcmovnb
flds
jmp
add
push
lret
inc
add
ret
xor
push
add
add
lods
lea
loopne
shll
inc
xor
fsubl
or
push
add
sub
adc
in
xor
into
jns
mov
add
mov
add
add
mov
push
add
add
cmp
dec
inc
add
or
nop
jae
mov
add
jb
pop
insl
bound
and
pop
call
cmc
mov
fists
mov
inc
repz
stos
js
mov
rcr
adc
lret
insl
jno
add
xchg
or
lock
or
idiv
pop
add
lock
mov
dec
add
loop
out
scas
mov
inc
add
add
ffreep
push
cs
lds
jecxz
stos
xorl
add
push
add
push
add
cmpsl
add
add
add
add
add
loope
add
data16
repz
cmp
cwtl
lahf
and
shlb
add
cmp
mov
and
add
imul
adcl
lock
lcall
pusha
add
lcall
add
add
fidivl
inc
add
je
jg
jae
add
jae
add
jno
add
clc
or
fistps
cmp
add
inc
add
add
std
dec
add
add
test
add
arpl
cwtl
stos
rcll
leave
dec
add
inc
outsl
insl
pop
loop
ja
add
rcrb
add
and
out
std
jae
dec
add
add
add
mov
push
sbb
pop
add
paddw
xor
les
mov
scas
sahf
lods
out
add
add
loopne
add
add
mov
add
pushf
test
mov
cmpl
dec
rcl
je
clc
mov
sbb
add
aad
pop
lock
movsl
xorl
clc
dec
add
add
pop
add
add
jae
insl
ror
xor
scas
aaa
in
push
add
sahf
aad
enter
testl
add
add
fisubs
pop
loopne
add
orl
hlt
rcrb
pusha
add
rol
add
push
add
add
pop
pop
add
add
fcompl
pop
add
push
add
add
shlb
mov
test
add
xchg
fcomip
lock
push
add
add
push
add
adc
add
sbb
xor
ret
add
add
std
shll
lcall
ja
inc
xorb
or
add
prefetchwt1
or
mov
xchg
lock
add
and
mov
jns
flds
add
add
test
sbb
pop
sub
dec
push
add
dec
add
and
mov
cmpsl
cmpsl
stc
adc
inc
add
add
xchg
lahf
out
out
clc
cmp
push
add
cld
pop
imul
stos
jge
or
dec
add
mov
jecxz
add
sbb
cld
inc
add
lahf
xchg
mov
jmp
add
ja
add
dec
add
ret
push
add
add
jmp
mov
add
test
mov
jns
adc
sbb
mov
imul
mov
fiaddl
inc
add
push
add
mov
test
mov
ret
out
xchg
loope
sub
sti
jne
mov
fsub
sub
add
cmp
sub
adc
jb
mov
insb
add
add
lret
add
add
pop
add
negb
add
add
dec
add
and
lret
push
add
pop
arpl
add
adc
sarl
movq
sbb
dec
add
fwait
mov
jb
pop
roll
inc
pushl
add
fdivrl
xchg
test
push
push
add
clc
mov
inc
inc
jp
in
sbb
jb
push
fisubl
sbb
add
mov
les
int3
fidivl
or
xchg
pop
pop
add
add
cmpsb
fldcw
mov
adc
add
inc
add
pop
add
add
leave
filds
lcall
stos
sub
cmp
stos
sahf
adc
pop
add
fldenv
lds
fstl
cld
mov
add
push
add
ljmp
nop
push
pop
mov
clc
adc
add
jp
mov
jecxz
inc
add
jns
xor
push
add
sbbl
in
mov
jbe
and
and
add
mov
sbb
pushf
das
cmpsb
adc
repnz
inc
add
jno
bswap
test
xor
pushf
jge
in
adc
dec
or
test
sub
jge
dec
push
add
add
int3
xchg
mov
add
stc
repnz
mov
mov
jg
add
mull
or
pop
cmpsl
push
add
out
adcb
xchg
or
push
add
add
cmp
add
push
add
lds
or
pop
jns
add
mov
xchg
mov
dec
add
adcl
add
fimull
sti
jno
add
xchg
fdivl
leave
lds
cmp
gs
add
add
push
add
pop
add
nop
push
add
cld
gs
add
add
mov
inc
add
add
add
push
add
add
sub
stos
repz
xor
add
jp
out
cltd
ret
sahf
push
add
cmpsl
sbb
lods
test
fwait
adc
stc
leave
cmp
cmp
mov
mov
add
fildl
xchg
pushf
push
add
sbb
lret
inc
fs
or
mov
cwtl
xchg
fsubrl
adc
dec
lods
stos
lcall
pop
out
add
jo
imul
ljmp
fistpl
mov
ret
mov
add
mov
mul
mov
xchg
hlt
hlt
stos
and
test
and
test
mov
pop
xor
mov
sub
cmp
imul
popa
pusha
add
xchg
adc
xchg
push
add
popf
adc
sbb
lock
in
js
lock
push
add
add
xchg
and
in
sarl
lods
mov
add
xor
clc
in
stos
mov
cmc
mov
xchg
icebp
shlb
frstor
jno
aam
in
lret
cld
sti
pop
jle
addb
mov
and
ret
sub
out
mov
fwait
ljmp
add
add
push
mov
cmp
cltd
cmp
add
insb
add
and
lret
dec
add
add
aas
cwtl
test
add
add
add
dec
out
add
push
and
add
mov
xchg
and
fdivs
add
add
aaa
popa
push
pop
lret
add
push
pop
les
inc
out
add
sbb
and
inc
adc
or
out
add
out
ljmp
add
sub
add
add
dec
add
lods
ds
jmp
mov
inc
add
sbb
enter
jae
std
movsl
push
add
enter
cli
arpl
push
add
add
pop
add
and
and
jmp
xchg
scas
adc
out
push
add
push
mov
arpl
add
push
add
pop
add
test
add
pop
add
push
add
inc
add
cmp
mov
flds
mov
enter
outsl
negb
push
add
insl
dec
push
add
mov
shrb
inc
lahf
cmp
cmc
out
inc
add
mov
add
add
mov
add
je
sbb
jae
push
ja
jbe
lret
jg
xlat
iret
sub
push
stos
lcall
add
adc
add
aam
divb
mov
data16
add
adc
lock
add
jb
addr16
mov
add
add
orl
cmp
enter
add
dec
add
adc
insl
leave
jb
addb
xor
decl
add
or
and
fisubs
xchg
dec
repz
add
lcall
int3
jmp
sub
mov
pop
aam
cmpb
sti
ljmp
add
js
add
jp
mov
std
loop
mov
fsts
mov
inc
ja
mov
add
or
jbe
mov
add
dec
push
add
inc
rorb
pusha
add
sbb
faddl
add
in
mov
fidivs
mov
outsb
add
add
add
dec
cs
fstl
add
pop
cmp
and
sub
inc
cmpsl
ret
sbb
push
add
pusha
add
clc
ror
pop
dec
add
test
stc
loopne
cmpsb
mov
cmp
or
adc
cmpsb
aaa
sbb
add
jb
or
sbb
rcrl
add
je
and
pop
lods
adc
add
loopne
js
push
add
or
clc
inc
pop
and
pop
out
add
dec
push
add
call
add
add
daa
gs
jb
imul
add
push
mov
testl
bound
pop
add
pop
add
add
add
into
int
add
imul
add
push
add
add
fidivrl
sbb
sub
outsb
add
loope
das
mov
mov
and
xchg
jne
jge
add
call
add
add
jp
roll
push
mov
daa
mov
popa
ljmp
dec
add
or
add
sbb
ret
fidivs
sti
addr16
jge
add
sbb
test
inc
sti
mov
inc
add
push
add
add
fdivs
dec
cltd
shrl
mov
sub
xchg
jbe
add
stc
mov
jp
daa
out
add
shlb
jnp
pop
add
mov
mov
out
push
cwtl
cld
mov
add
inc
sbb
adc
dec
add
add
sub
mov
loopne
stc
loope
add
mov
push
test
pop
lcall
and
add
shl
stos
add
pop
aaa
ret
into
int
inc
arpl
mov
adc
mov
nop
loope
add
mov
hlt
idivl
cli
jmp
sub
add
pushf
or
push
add
call
add
cltd
push
and
imul
imulb
xchg
mov
clc
sbb
or
dec
add
xchg
add
divl
add
cmp
test
adc
outsl
scas
aad
lock
js
out
mov
add
add
xor
sti
pop
add
mov
je
ja
add
lcall
lds
mov
test
jne
pop
or
bnd
jne
pop
add
or
push
add
mov
mov
dec
aaa
iret
outsb
add
add
pop
add
xchg
dec
add
pop
add
add
add
add
mov
add
push
out
add
add
adc
ret
cmp
loope
adc
push
add
outsl
andl
add
mov
pop
cwtl
arpl
icebp
and
fcoms
add
clc
xchg
lahf
push
pusha
add
lret
mov
push
adcl
add
add
inc
add
int
or
push
add
add
mov
dec
add
rcll
add
dec
add
fsubrl
add
mov
add
ficoms
and
or
add
mov
add
adc
mov
call
or
imul
xchg
cmc
jmp
dec
js
pop
jecxz
cwtl
and
cmp
xchg
cmpb
lods
jns
cmpsl
add
adc
ret
add
div
popf
and
cmp
mov
loope
fimuls
shll
add
mov
inc
add
inc
add
mov
mov
push
add
pop
add
scas
imul
icebp
mov
add
lock
dec
repnz
add
call
enter
lret
jno
lods
and
jbe
rorl
push
dec
add
add
add
pop
testl
mov
mov
popf
inc
sub
add
add
cmp
stc
cld
fistps
pop
dec
add
mov
sub
xchg
in
add
dec
add
dec
pop
adc
ss
scas
ljmp
leave
jmp
pusha
add
in
and
addr16
movsl
pop
out
rorl
mov
ret
inc
add
adc
mov
add
xor
pusha
add
cs
aam
add
add
xor
sbb
aas
scas
mov
add
cli
cmp
rcrl
popf
dec
add
add
add
mov
add
test
inc
or
xchg
in
outsb
add
out
sahf
roll
add
out
mov
adc
dec
add
mov
in
push
pop
xchg
loop
mov
add
mov
push
sti
jl
sbb
stc
xchg
xor
add
notb
cmp
add
fsubl
add
ja
cltd
mov
pop
add
lcall
fwait
fwait
mov
add
adc
call
hlt
add
xchg
and
add
add
inc
push
add
test
mov
mov
pop
imul
cmp
pop
or
push
bound
pop
cmp
add
fists
loop
lcall
aas
xchg
jl
cmp
fbld
add
adc
int3
iret
cltd
in
or
into
xchg
add
imul
mov
stos
pop
jo
xchg
je
jbe
push
jmp
jns
pop
inc
xor
sub
pop
or
xchg
dec
add
out
sahf
mov
insb
add
push
add
fucompp
inc
add
lcall
add
pusha
add
mov
add
out
push
popf
xlat
decl
add
push
add
push
add
cmp
pop
adc
mov
add
mov
add
xor
inc
add
movsl
test
mov
fcomip
push
enter
arpl
loope
push
add
and
sub
push
mov
xchg
push
in
mov
repnz
xorb
cmpsl
xchg
mov
xchg
aaa
in
xchg
add
add
pushf
xchg
ljmp
pushf
and
or
xor
out
add
scas
pop
dec
fldl
add
icebp
mov
push
add
xchg
xchg
int
xor
pop
add
add
xchg
stos
test
mov
add
jmp
xchg
push
add
fldenv
add
jmp
icebp
xchg
xchg
mov
add
cmpsl
leave
mov
push
xchg
or
pop
add
push
add
sbb
data16
popf
add
cmp
add
or
fdiv
das
das
dec
add
xchg
xor
shll
rorl
fwait
rolb
cmp
dec
add
pop
xlat
mov
add
add
add
add
mov
add
clc
cltd
inc
add
lcall
aad
sbb
add
add
and
sub
ror
data16
add
and
inc
mov
add
sub
rorl
adc
xlat
xor
add
call
je
xchg
sub
gs
add
mov
insb
add
add
aas
bound
dec
cmp
push
imul
pop
ljmp
and
or
add
push
add
dec
jmp
or
sbb
fisttpll
rcrb
add
in
and
popl
imul
add
into
xorb
sti
and
cmp
add
xchg
call
sub
and
mov
xor
inc
aaa
push
adc
dec
add
jmp
ds
jle
in
pop
add
into
dec
mov
xchg
cmpsb
orl
ret
into
std
leave
sti
insl
push
push
jns
xchg
mov
add
inc
mov
inc
add
int
scas
mov
xor
data16
adc
jae
in
idivl
add
jecxz
or
addr16
mov
mov
add
add
lahf
inc
add
xor
adc
adc
xor
dec
or
jno
add
or
add
adc
addr16
xor
into
and
add
jmp
mov
ficoml
mov
push
add
add
addr16
loopne
daa
data16
call
add
inc
test
push
fnstsw
mov
lret
add
add
leave
cmp
add
add
mov
pop
add
add
imul
or
lock
jnp
add
add
call
jo
sub
push
add
add
pop
add
adc
cmc
aad
add
iret
sub
sti
cld
out
push
add
add
pop
mov
add
push
xchg
addl
add
stc
cmp
and
push
repnz
fmull
lret
add
add
push
or
pop
add
push
fiaddl
imul
fiaddl
lock
add
stos
inc
add
jp
fldl
add
dec
pop
add
fcomp
cmpl
add
jo
mov
add
rcll
insb
add
cmp
aaa
jl
rorl
movsb
jl
enter
add
xor
aas
data16
mov
test
add
and
mov
mov
and
sub
adc
cmpsb
gs
call
sbb
add
sbb
jmp
add
add
jne
add
push
add
ja
add
or
cmp
sti
push
cltd
or
xlat
sti
xor
mov
mov
int3
repnz
repnz
mov
es
cmp
hlt
cmp
mov
out
xchg
cmp
cmp
ja
sub
in
fs
or
sub
les
test
ret
jl
pushf
loope
add
jge
add
mov
add
and
test
loop
push
loop
and
sahf
or
mov
stc
cmp
mov
mov
lock
xchg
mov
mov
cmpsb
mov
add
aaa
enter
lods
rcr
jnp
idivb
push
add
mov
into
or
jbe
lcall
test
add
lods
in
cmp
inc
add
mov
sahf
lods
push
mov
add
mov
adc
je
xchg
inc
xlat
out
rclb
inc
add
lods
and
lret
inc
add
mov
push
cmc
pop
call
mov
add
xchg
orb
jae
mov
xor
pop
sbb
movsb
dec
push
ret
mov
rorl
xchg
add
shrl
fcomps
and
xchg
mov
xor
ja
cmpsb
lret
push
add
inc
arpl
imul
sahf
xchg
add
cli
lcall
lret
or
push
xor
mov
mov
xchg
pop
add
jmp
add
mov
sbb
lods
push
insb
add
cltd
push
mov
mov
movsl
imul
cmpxchg
and
jnp
cmpsb
test
dec
add
add
mov
dec
add
cli
js
shlb
add
push
add
xchg
push
add
shlb
adc
mov
insl
xor
and
mov
popa
stos
jae
add
add
int
jg
push
add
out
dec
jne
aas
fsubrl
mov
add
pop
in
andb
inc
add
dec
hlt
add
xchg
dec
add
popf
or
inc
outsb
add
push
add
add
pop
add
fsts
add
and
pop
mov
inc
add
jbe
and
pop
sahf
dec
pop
jecxz
rorl
fstl
xchg
or
ret
xchg
mov
mov
outsb
add
inc
add
nop
sbb
divl
add
or
std
lret
mov
adcb
add
aad
add
scas
aas
popf
loope
add
add
push
add
ror
inc
add
add
mov
dec
or
lahf
xchg
aam
add
add
cli
idivb
add
jbe
push
add
das
push
add
add
movsb
rclb
sub
stc
jo
les
pop
movsl
mov
add
sub
inc
add
mov
leave
int
jno
add
mov
add
xchg
push
add
pop
jle
dec
add
mov
and
sbb
jb
cmp
lods
pop
add
pop
mov
popa
lods
cmc
sbb
pop
push
add
cmp
leave
pop
or
mov
sub
cmpsl
js
addr16
repz
pop
add
fidivl
add
dec
add
movsb
adc
pop
cmp
loopne
repz
lock
mov
inc
add
add
push
jne
mov
add
and
into
ljmp
in
mov
rcll
dec
add
jno
add
int3
roll
jno
add
push
add
xor
pop
add
rolb
cmpsl
lock
shl
adcl
jp
add
xchg
add
inc
add
add
add
dec
add
push
stos
add
cld
adc
imul
pop
add
xchg
jno
push
fcompl
nop
sbb
sbb
add
jne
push
popf
add
pop
pop
add
add
adc
mov
add
push
sub
cmp
repz
add
inc
add
rorb
jecxz
or
add
and
and
mov
sub
jno
push
fidivrl
fsub
stos
sub
inc
add
dec
jb
pop
add
add
cmc
xor
push
jb
je
xchg
pop
add
xchg
std
xor
mov
add
add
xor
xor
fcmovne
in
sbb
ja
or
ja
add
daa
fwait
push
add
and
add
add
cli
push
add
push
add
daa
cmc
out
mov
popa
fisubrs
add
cmpsl
add
dec
gs
add
add
add
push
cmp
adc
add
orb
and
out
fmull
in
and
je
push
add
cmpsb
scas
out
lods
xor
add
push
add
test
cli
lea
or
aaa
imul
add
add
xchg
dec
sbb
es
les
mov
xchg
add
add
ds
push
add
jns
cld
ljmp
js
repnz
push
add
dec
add
popa
xor
sub
jno
cwtl
mov
mov
jno
add
fistps
jmp
fildll
pushf
xchg
out
mov
dec
add
nop
cmp
add
mov
xchg
and
cltd
mov
add
inc
add
lsl
mov
ror
out
add
insb
add
jns
ret
ret
mov
insl
jnp
mov
lahf
lods
clc
mov
inc
add
add
xor
lahf
aas
cmp
add
mov
push
add
cltd
ficoms
xor
mov
das
xchg
fbstp
push
add
jg
pop
add
add
arpl
popf
test
popl
pop
fbld
add
stos
fsubrp
xor
add
push
add
mov
add
lahf
add
add
and
int
pusha
add
add
inc
jg
movsb
fidivrl
icebp
sub
push
add
out
lds
add
jbe
push
scas
shl
fstl
cli
mov
cs
sbb
dec
add
or
cmc
lcall
adc
dec
mov
push
stos
or
add
jnp
or
std
dec
lds
add
int3
add
mov
pop
shll
xlat
push
add
xchg
push
loopne
add
adc
dec
jmp
shrl
sbb
cmp
divb
add
jle
lock
adc
add
rcll
add
mulb
or
sub
mov
popf
push
pop
and
es
aam
inc
add
mov
inc
inc
xchg
and
mov
fwait
ret
insb
add
mov
push
add
int3
push
add
jle
outsl
dec
add
fstps
pop
add
mov
add
add
add
add
add
jb
xchg
bound
mov
add
add
xor
insl
hlt
add
add
add
ret
sbb
add
add
bound
xchg
lcall
lds
cmp
add
add
lock
notl
add
push
push
ret
and
push
add
iret
pop
repz
ret
fdivrl
add
mov
in
inc
mov
xlat
or
ja
jb
orb
add
sbb
imul
jp
push
daa
lods
orb
xchg
and
mov
mov
xchg
ret
xchg
push
add
pop
mov
add
adc
add
scas
ja
popf
mov
add
repz
inc
pop
add
lret
or
add
add
jnp
out
add
rclb
mov
mov
arpl
dec
dec
dec
aad
jge
add
xchg
incl
scas
push
add
es
cld
push
daa
pop
pusha
add
mov
push
jnp
cmpsl
pop
jno
hlt
out
or
jl
cmp
add
inc
jns
into
jp
ljmp
repnz
ja
dec
add
add
js
bound
xlat
cmpsl
out
and
add
fmuls
push
mov
cmpsl
arpl
dec
mulb
test
jns
or
mov
add
add
jg
add
mov
pop
add
push
and
inc
stos
bound
xor
hlt
cmp
daa
mov
add
add
fiadds
daa
mov
popa
stos
push
daa
add
int
mov
push
add
addl
mov
jge
aam
icebp
fwait
mov
inc
add
cmp
sbb
xor
call
test
clc
sahf
idivb
sbb
add
rolb
outsl
xchg
xchg
mov
add
jo
fidivrl
inc
sbb
les
add
js
jne
add
add
xchg
sar
mov
pop
bound
imul
jecxz
add
cmp
jbe
add
dec
int3
dec
add
fimull
xchg
movsl
test
push
add
add
sub
in
add
aad
or
movsl
jbe
insl
push
add
xchg
xor
add
les
lock
bound
xchg
add
loope
add
add
add
bound
faddp
insl
add
cmp
stos
test
mov
mov
mov
push
nop
frstor
sahf
std
sub
mov
std
adc
add
xor
jns
cltd
lea
add
movsb
lock
add
fmuls
add
xlat
jb
xchg
cmp
stc
mov
add
add
or
add
add
add
dec
scas
sti
aas
aad
inc
add
sub
mov
add
dec
add
add
popa
inc
push
add
add
test
add
out
notb
adc
sbb
mov
mov
inc
add
add
outsb
add
out
cld
xchg
xor
push
add
in
push
xchg
xchg
int
sbb
scas
mov
ljmp
dec
add
popa
sbb
in
dec
add
repnz
and
xlat
push
add
aaa
enter
popl
rorl
jp
mov
movl
fsubrs
xchg
inc
dec
add
and
into
cs
movsb
dec
add
mov
or
mov
or
cld
pop
in
add
dec
mov
mov
push
jge
pop
add
out
inc
mov
push
add
inc
add
add
dec
jmp
add
in
fcomps
add
mov
jbe
dec
add
pop
jno
fcomps
ror
adc
adc
sub
jle
mov
jmp
add
mov
insb
add
loope
push
add
popa
fldcw
add
push
add
xchg
int3
test
cmp
test
jae
add
xor
bound
cwtl
add
xchg
mov
add
inc
add
lcall
loop
add
lahf
ds
adcb
add
fcoms
add
mov
inc
add
lea
add
jb
pop
pop
mov
add
addr16
cmp
out
dec
add
dec
sub
ret
add
imul
mov
sub
daa
hlt
insb
add
das
lea
inc
push
out
jo
iret
lods
mov
loop
mov
in
scas
aad
add
inc
aad
add
aas
xor
or
ja
mov
add
cmpsb
inc
dec
add
rcrl
mov
push
add
cmp
pop
mov
inc
add
clc
xorb
add
test
movl
pusha
add
xor
jle
inc
add
cmpsl
xchg
cwtl
mov
dec
add
or
inc
or
in
mov
out
fildl
pop
les
pop
add
iret
mov
aas
push
add
xlat
pusha
add
add
add
stc
xchg
push
jecxz
inc
inc
add
pop
xchg
add
add
add
add
test
sti
sahf
xor
mov
mov
mov
add
fwait
outsl
jg
in
rcl
sbb
add
add
add
movsb
dec
add
fwait
ja
paddw
add
shlb
add
add
test
jno
add
add
in
or
sbb
aam
add
inc
xchg
lods
mov
add
fneni(8087
lret
into
push
pop
xor
sub
cmpsl
lds
jp
rcl
cs
lods
xchg
or
add
add
mov
lcall
aaa
sub
stc
aaa
ficompl
add
test
or
out
xor
pusha
add
cmpsb
inc
add
orl
adc
jge
stc
or
loop
repz
lods
push
add
cmp
mov
inc
add
pusha
add
xor
add
add
add
dec
fcoms
je
sub
mov
lds
iret
rcll
add
add
lcall
xchg
add
or
jb
cmp
stos
idivl
jnp
rcll
stc
add
pop
test
lods
or
inc
int3
xchg
push
add
add
add
xchg
iret
push
add
add
mov
add
mov
out
sub
xor
add
mov
dec
add
add
or
loope
cmp
sbb
lret
cli
xor
or
call
cli
add
mov
mov
repnz
mov
lds
add
add
flds
out
push
add
addr16
pop
add
pop
add
push
add
repnz
xchg
or
add
xorb
push
add
sti
out
add
add
add
dec
fxch
enter
mov
dec
xor
movsl
fwait
jno
add
gs
int
icebp
repz
add
sub
jle
jmp
ficoms
aaa
lret
in
int
add
addr16
xor
adc
pop
enter
add
out
add
into
xchg
mov
add
push
and
cmp
cmp
xchg
ja
pop
push
jnp
ja
cmp
or
fidivrl
stos
push
add
add
add
or
pop
call
push
add
fiaddl
cld
or
incb
add
xor
add
subl
dec
add
add
add
dec
add
xor
mov
jp
stos
push
repz
je
sub
add
add
add
add
lret
jmp
lods
jb
pop
mov
add
mov
xor
xchg
fcoml
or
add
sbb
sub
daa
call
mov
mov
mov
fstpl
insl
inc
add
ret
push
adc
mov
aas
fstl
jne
leave
pop
popl
lds
movsl
or
jns
cmpsb
cmp
inc
add
sub
adc
iret
dec
add
add
les
imul
add
subb
xchg
cmc
repnz
add
mov
inc
add
shlb
and
cmp
cltd
cmp
add
loope
insl
into
int3
jg
scas
adc
add
xchg
inc
xor
sbb
inc
sbb
dec
insb
add
sub
and
inc
add
add
pop
fcmovnb
stos
in
or
or
xchg
push
add
dec
add
lea
push
mov
push
daa
inc
add
lods
sub
add
hlt
call
pop
add
mov
add
add
jecxz
imul
push
js
jl
dec
add
fwait
pop
add
jg
in
mov
lret
or
mov
div
lods
lcall
add
add
cmc
imul
test
adc
stos
sbb
mov
xchg
and
cmp
imull
add
xchg
in
fists
ret
ret
xor
mov
movsb
add
add
inc
add
cli
mov
xor
pop
add
add
mov
cmp
mov
jns
scas
mov
xchg
cmp
mov
mov
adc
cld
xchg
js
inc
xchg
adc
mov
add
icebp
mov
add
cmp
add
fadds
insl
mov
add
jp
rolb
xor
ret
push
push
add
add
add
lods
cld
xor
sub
adc
add
cmp
dec
addb
scas
jmp
fucom
dec
add
in
scas
adc
xor
and
mov
stc
mov
rolb
pop
arpl
push
add
push
mov
push
mov
into
and
cmp
dec
add
int3
mov
adc
orl
pop
add
mov
rorl
xchg
add
add
popf
lcall
jmp
add
xor
notl
xchg
popl
imull
gs
add
and
clc
xor
xchg
jecxz
cwtl
push
add
push
lds
repz
or
fs
mov
lcall
add
outsb
add
outsb
add
je
stos
repnz
lods
inc
add
mov
shld
push
add
data16
inc
adc
add
add
add
enter
add
in
or
pop
add
mov
and
mov
test
mov
push
add
fstpt
add
xor
sbb
xchg
pop
mov
add
add
sub
mov
add
add
jp
stc
xor
adc
mov
xor
enter
rcpps
mov
add
rcrb
push
popf
sahf
sub
loopne
push
add
xchg
sub
addr16
loope
repz
rcr
add
pop
push
mov
out
or
iret
out
cmp
push
add
add
add
sbb
aam
add
gs
dec
add
add
add
xchg
mov
xor
push
add
imul
dec
ljmp
cmp
mov
aaa
pop
add
xchg
andl
and
add
add
jl
xlat
in
add
cmp
or
jmp
repz
movsl
jmp
leave
add
int
adc
xchg
xlat
jb
fscale
ficomps
stos
xor
xchg
pop
arpl
aas
sti
scas
push
add
addr16
or
mov
add
jae
add
fcom
adc
int
mov
add
loop
add
stc
inc
add
ret
out
sub
mov
jmp
jp
test
daa
cmp
out
cs
mov
pop
jnp
add
mov
sbb
dec
add
add
add
xchg
mov
add
sub
aam
and
outsl
push
add
sbb
pop
add
jp
sub
pop
add
cmpsb
cmp
lea
jp
push
or
bound
mov
add
inc
add
cld
mov
cmp
add
add
scas
inc
testb
loop
cmp
add
push
movsl
call
arpl
add
aas
xchg
cmp
adc
adc
jno
addr16
xchg
pop
test
dec
hlt
es
outsl
adc
sub
sahf
shlb
out
aam
jmp
pop
add
bound
test
int3
scas
data16
add
cmpsl
xchg
push
add
push
add
mov
add
imul
dec
or
dec
popf
xor
mov
push
push
mov
or
add
leave
dec
add
in
pop
rep
imul
les
rcrb
mov
loopne
adc
adc
cmp
or
data16
mov
icebp
lea
add
cmp
jbe
push
add
add
shll
add
ss
mov
jb
mov
add
add
mov
add
inc
add
imul
mov
add
add
ret
pop
lahf
pop
add
add
stos
iret
aas
add
add
cmp
inc
add
scas
loopne
repnz
lcall
movsb
mov
xchg
mov
mov
add
add
add
roll
ljmp
dec
add
dec
jl
or
int
sub
pop
out
add
jno
sub
cltd
or
mov
add
jo
lahf
push
add
and
outsl
ljmp
dec
add
repnz
and
test
pushf
outsl
sub
adc
and
hlt
inc
push
add
jp
xchg
push
add
add
test
add
pop
add
push
add
stos
sbb
push
dec
add
in
out
jae
add
add
jnp
cmc
xor
fwait
cli
stos
lds
add
push
add
cmp
sub
add
insb
add
adc
mov
add
jp
and
pop
xchg
adc
mov
cli
jp
xor
adc
or
sbb
sbb
imul
dec
add
pop
add
add
mov
jg
add
add
cmp
cmp
jecxz
add
jne
adc
adc
dec
add
cmpsb
pop
adc
test
adc
xor
jnp
add
add
and
inc
mov
aam
adc
ljmp
pop
add
loop
add
push
add
das
mov
fwait
cmp
sbb
push
iret
push
add
les
mov
cmp
inc
add
divb
iret
inc
add
add
cld
popf
pop
inc
add
or
xchg
paddw
pop
add
mov
lret
mov
add
stc
dec
jbe
add
push
add
andl
and
fwait
jg
push
add
adc
into
lret
jmp
dec
add
add
add
mov
pushf
cmp
push
mov
addl
pop
add
dec
mov
sbb
dec
mov
mov
fsubs
cmp
test
dec
add
out
push
add
clc
cld
push
clc
jns
jae
mov
in
sbb
push
add
adc
mov
add
mov
stc
mov
add
cmp
fcompl
lahf
stos
push
add
add
sbb
mov
pop
add
cmc
lcall
add
or
mov
cmpl
insb
add
xchg
pop
xor
cmp
jp
push
test
and
sbb
push
fidivrl
and
jl
mov
xchg
in
cmp
mov
pop
add
add
add
mov
add
gs
daa
jge
pop
dec
enter
jo
sub
pop
xchg
cmp
ljmp
mov
add
shrl
add
lock
jae
pop
rorl
xchg
loopne
mov
cmpsb
fldenv
add
cmpsl
mov
add
add
sub
out
add
ss
pop
popa
popf
in
call
add
test
and
add
aad
add
lret
and
jp
mov
inc
cmpsb
lods
xorb
xor
xlat
push
add
inc
bound
push
add
add
jmp
mov
pop
add
pop
int3
call
int3
or
xchg
inc
in
sbb
addl
ret
add
pop
add
xchg
inc
add
mov
add
mov
add
bound
std
fldenv
add
imul
mov
std
outsb
add
add
insl
sub
ror
stos
add
call
add
in
mov
cmpsl
repz
push
add
push
cmc
in
mov
add
add
add
mov
adc
adc
pusha
add
add
gs
dec
pop
dec
add
lods
xchg
pop
popf
push
add
mov
repz
pop
push
add
frstor
jg
jmp
jno
add
add
xlat
lods
inc
imul
add
add
push
out
add
pop
jno
push
in
dec
add
inc
add
cld
pop
add
and
sub
dec
add
add
test
in
idiv
int3
fbld
int
add
jo
pop
add
xchg
loope
lahf
push
add
push
add
pop
add
mov
cli
shll
add
add
add
mov
add
add
or
add
cmp
lock
add
jecxz
inc
add
add
sbbb
dec
add
push
fcmovb
cvtpi2ps
or
adc
xor
pop
gs
cmp
icebp
push
addb
add
add
cmpsb
stc
jno
or
mov
cwtl
sbb
rclb
mov
hlt
cmp
out
inc
psubd
gs
ja
enter
js
lret
xchg
jbe
outsb
add
add
pop
cs
mov
push
add
insb
add
shr
popa
or
jns
add
xor
add
add
imul
in
add
add
pushf
push
add
mov
cmp
push
jle
inc
add
test
popa
dec
fiaddl
add
ret
mov
pop
add
imul
inc
add
sbb
cmp
add
cmp
mov
insb
add
add
mov
insl
jle
dec
dec
add
add
and
rclb
popa
addl
add
add
daa
push
fidivl
add
add
add
add
cmp
push
add
repz
add
fwait
lahf
inc
test
test
movsl
insb
add
add
mov
add
add
add
pop
pop
add
js
push
add
pop
add
push
add
bound
out
mov
push
add
add
adc
mov
lds
add
out
cmp
pop
add
bound
aam
mov
add
addb
add
inc
add
mov
add
leave
mov
cmp
add
add
add
adc
andb
lret
imul
repnz
add
fidivs
cmp
pop
mov
repz
cwtl
int
dec
mov
add
fnstsw
stos
inc
into
mov
jg
mov
cltd
loop
clc
add
add
mov
leave
into
add
aam
add
pop
add
push
mov
ret
mov
in
push
out
and
add
and
add
mov
movsb
cmpsl
cmp
add
xor
fisubl
out
add
adc
push
mov
cmp
les
push
add
out
add
sub
jp
lock
add
iret
ret
xchg
icebp
dec
add
lret
stos
pop
add
cmpsl
mull
add
xor
push
int3
adc
push
add
in
pop
imul
pop
add
and
sbb
xor
push
add
add
add
mov
add
in
cli
inc
add
in
jge
inc
test
mov
lds
decl
dec
ret
mov
mov
lock
leave
into
xlat
mov
aam
fstpt
add
ja
fldcw
adc
das
sahf
sub
add
dec
jle
repz
lcall
lea
inc
add
mov
mov
fsubl
add
push
add
mov
idiv
and
and
add
call
xor
xorb
shrb
add
pop
fimull
add
and
xor
insb
add
add
jmp
lods
in
push
add
add
fstps
fdivl
mov
and
push
into
mov
mov
sub
add
pop
test
enter
loope
add
sbb
mov
fbld
add
sub
fldenv
ja
mov
add
add
ljmp
dec
out
add
add
lods
jae
stos
adc
lods
sbb
sub
test
push
add
divb
daa
daa
imul
add
data16
add
inc
add
xchg
insb
add
push
inc
add
or
cmp
imul
jg
insl
mov
add
sbb
add
in
and
push
inc
or
cli
xchg
test
sbbb
add
gs
sub
mov
add
adc
add
sub
add
add
clc
int
add
add
add
lock
cli
cmp
mov
pushf
js
call
push
mov
add
xchg
xchg
lret
push
add
nop
in
call
sub
dec
add
or
push
daa
mov
inc
jmp
inc
add
lret
jbe
repnz
stos
and
jp
mov
add
rcrl
