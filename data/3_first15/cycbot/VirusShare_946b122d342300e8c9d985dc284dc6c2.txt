test
fisttpl
xchg
add
fwait
rolb
jp
lock
jge
add
cwtl
cmc
dec
lods
fildll
rolb
push
add
add
jne
cmp
add
mov
xchg
cmp
insb
rolb
add
pop
add
fwait
ret
jo
cmp
xchg
xchg
flds
add
rcrl
lods
and
jp,pt
insb
lret
add
add
add
in
sub
imul
add
jmp
add
hlt
add
sub
cmp
enter
add
add
imull
lds
aam
js
stc
add
sub
adc
add
xor
sbb
add
rcr
testb
add
sarl
push
add
add
xor
add
ja
incl
scas
xlat
aas
mov
and
add
mov
mov
js
fsubrl
cmp
adc
pusha
add
add
and
push
add
add
fdiv
add
popa
adc
xor
add
add
cmp
js
jl
add
add
add
mov
mov
sub
mov
inc
sub
add
add
add
outsb
lods
adc
movsl
and
scas
clc
or
pop
inc
sub
add
mov
clc
seta
lret
mov
mov
add
add
push
add
add
and
mov
int3
std
mov
sub
add
dec
xchg
xchg
inc
push
add
inc
push
add
add
insb
push
or
dec
ljmp
adc
jmp
andl
bound
mov
lcall
daa
dec
lock
add
add
into
in
imul
popf
movsl
mov
gs
cltd
data16
or
adc
jge
sub
xchg
add
jmp
out
addr16
pushf
mov
jmp
jl
xor
pop
pcmpeqw
dec
in
pop
gs
add
into
loope
xchg
jno
inc
add
fildl
mov
les
insl
add
test
add
add
push
add
ja
lock
push
cmp
mov
add
mov
adc
ja
xchg
add
dec
sbb
lods
xchg
ja
add
mov
push
xor
mov
add
mov
or
add
sbb
adc
clc
jmp
add
mov
add
jg
dec
sbb
add
inc
pop
xor
mov
add
add
jae
mov
cmc
sbb
add
add
mov
mov
sbb
add
out
push
or
add
add
jo
adc
add
push
add
mov
jp
add
inc
add
add
mov
pop
adc
push
rolb
rolb
addr16
xor
or
lcall
add
insl
jle
add
mov
jp
add
inc
add
add
mov
lods
pop
sbb
add
mov
push
loope
add
int3
pop
je
xchg
add
add
add
jp
add
push
add
lods
fists
push
mov
pop
add
mov
add
add
sbb
add
add
or
sahf
or
add
add
add
pop
aad
jbe
or
xor
jae
jbe
sbb
pop
je
adc
push
insl
jle
push
outsl
cmp
adc
add
repz
jne
rolb
xor
mov
adc
push
bound
mov
lahf
xor
out
cmp
imul
add
jne
push
mov
xor
mov
pop
ja
punpckldq
mov
ds
or
add
aad
aad
xchg
jne
mov
jl
addr16
int3
bound
mov
lahf
xor
out
add
mov
add
imul
jns
add
adc
loope
outsb
sbb
add
loop
add
mov
adc
or
add
xchg
add
add
lret
xor
out
jne
loope
addb
fildl
mov
add
mov
adc
or
add
xchg
add
add
ds
addb
or
addb
fildl
mov
add
adc
or
add
adc
dec
jae
pop
add
addb
or
addb
fildl
mov
add
adc
or
add
xchg
add
jae
pop
add
push
add
ret
add
dec
jae
out
or
add
sbb
lods
mov
testl
data16
addr16
adc
aaa
or
adc
addb
std
jbe
mov
adcl
and
push
jo
mov
inc
aad
out
add
add
or
push
mov
add
add
add
aad
inc
int3
sbb
push
add
rolb
jns
push
push
stc
push
add
cmp
mov
movb
sbb
mov
add
mov
cwtl
mov
inc
add
push
ror
add
mov
rolb
or
xor
movl
insb
mov
inc
out
push
push
add
popf
mov
add
cmp
add
sub
int
daa
xchg
add
data16
add
add
ret
movb
xlat
push
das
jg
add
lea
addb
add
loope
adc
ss
pop
repnz
add
adc
stc
in
fcomp
push
add
add
add
pusha
add
movsl
xchg
xchg
add
xor
aaa
pop
lods
in
add
ja
out
mov
dec
mov
inc
add
repz
aad
add
add
xor
inc
xlat
jecxz
fidivrl
stos
add
mov
add
add
aam
add
mov
aad
add
in
das
nop
add
adc
jno
push
add
das
rolb
out
outsb
in
inc
add
adc
add
dec
add
mov
sbb
pushl
and
fwait
pop
mov
gs
int
inc
dec
add
add
mov
sahf
fists
pop
pop
and
rcll
add
ficomps
xchg
add
xchg
ud0
push
xlat
jae
add
mov
mov
cwtl
adc
add
sub
add
fcompl
add
and
mov
jnp
xor
jnp
push
add
add
das
std
mov
sub
push
pop
into
push
xchg
add
ds
nopl
and
mov
add
stc
inc
add
push
add
xlat
mov
add
mov
imul
add
inc
add
je
repnz
mov
inc
test
mov
dec
mov
add
mov
cmc
insl
push
add
add
testl
shrl
cmp
cmp
push
add
fsub
push
add
pop
cmc
popa
loopne
nop
add
rolb
mov
add
stos
pmullw
pop
cmp
sbb
push
inc
int3
jne
add
push
add
add
outsb
sbb
dec
push
add
add
jge
add
push
add
xchg
add
jns
adc
push
cltd
mov
pop
mov
outsl
jbe
sahf
sub
shll
dec
mov
xchg
movb
add
add
aas
aas
jp
jl
enter
cwtl
xor
aaa
push
add
lock
rolb
mov
add
jmp
xlat
adc
repnz
adc
insb
push
and
repnz
ficoml
xor
in
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
pusha
add
decl
cs
push
test
push
add
xchg
adc
add
fcomi
pop
mov
gs
and
mov
add
fsubs
addr16
movb
adc
mov
mov
or
or
gs
mov
xor
inc
dec
xor
mov
mov
mov
mov
add
outsb
icebp
pop
dec
lea
mov
or
test
sub
add
or
add
test
lods
ficoms
imul
inc
adc
add
lock
add
jae
add
sub
push
cmp
xchg
lock
mov
in
test
out
out
js
jae
sub
int
pop
andl
add
mov
inc
call
mov
add
xchg
pusha
add
jg
adc
pop
add
add
pop
adc
hlt
add
xor
lea
push
outsb
mov
pop
test
in
mov
sub
sbbl
divl
outsb
or
jmp
add
das
aad
les
dec
fwait
data16
mov
adc
mov
mov
and
push
jno,pn
loope
iret
scas
stos
push
add
push
sarl
rolb
dec
lock
add
dec
mov
int
add
js
aaa
adc
xchg
dec
rcrl
mov
push
or
int
lret
add
add
add
in
sbb
add
add
aad
add
mov
add
jp
sahf
loopne
dec
ljmp
addr16
mov
add
add
movsl
mov
and
mov
aas
cmp
mov
mov
je
in
add
into
add
cltd
rolb
mov
insl
inc
out
adc
aas
inc
jbe
repz
mov
mov
cli
inc
add
sub
push
add
rolb
or
jb
test
inc
add
push
add
pop
or
cmp
xor
dec
dec
jmp
add
push
mov
or
add
jmp
jmp
or
lcall
test
test
or
iret
mov
shl
add
adc
imul
fistps
out
movsb
add
pushf
dec
cmpsl
and
or
dec
nop
add
mov
pop
add
sbb
into
idivl
mov
xchg
push
add
cmpsb
add
cwtl
test
aad
sub
loope
lock
sbb
add
iret
js
mov
and
insb
xchg
add
add
mov
jnp
add
inc
add
cld
sbb
outsl
cltd
dec
rolb
xchg
add
add
add
cmp
js
add
mov
add
fisttpl
loope
jns
add
jp
mov
add
loopne
popf
addb
jge
loopne
mov
push
add
rolb
jo
push
icebp
ljmp
cmpsl
cmp
sbb
pop
je
jbe
std
arpl
repz
add
add
add
mov
sti
mov
mov
add
adc
testb
xor
mov
add
addb
pop
aas
add
aas
fdivr
in
or
xor
inc
push
add
ljmp
iret
push
add
add
cmp
in
les
push
xlat
ficomps
adcl
mov
push
imul
adc
dec
jg
add
std
pop
add
mov
ud1
xlat
pop
and
mov
xchg
add
insl
add
sub
add
mov
add
ds
xchg
add
xor
cmpsl
outsl
fwait
mov
pushf
adc
add
add
or
loopne
ret
sbb
jl
push
mov
sub
add
jbe
das
pop
or
add
mov
add
or
add
call
add
add
cltd
xor
add
mov
jae
push
pop
dec
icebp
add
pop
mov
out
fnstcw
aam
mov
add
cs
jb
add
dec
sub
jns
add
xchg
adc
cld
push
mov
add
add
add
sbb
fiaddl
mov
clc
push
add
test
xlat
jmp
mov
iret
adc
pop
enter
add
xlat
imul
add
lret
add
mov
xor
add
xor
or
pop
jg
ljmp
mov
aad
int3
or
mov
pop
lcall
cmc
lcall
add
addb
call
cmp
addb
in
push
add
arpl
push
testb
test
cwtl
xchg
push
rolb
int
jae
adc
xchg
xchg
or
into
sbb
mov
sti
add
push
add
jno
sahf
jns
cld
inc
sti
sbb
add
sahf
adc
adc
adc
xor
pop
add
cld
mov
repnz
lods
aas
inc
add
add
add
jmp
or
and
pop
test
add
add
clc
xor
popa
add
inc
inc
add
inc
daa
hlt
add
or
mov
mov
add
fnstenv
add
movb
jge
pop
push
add
add
mov
fisttpll
cmp
ret
aam
mov
adc
loopne
dec
sahf
mov
test
movsl
mov
add
mov
ss
mov
jns
add
mov
or
pop
add
mov
push
cmp
loop
cmp
add
add
jns
cmp
jne
cltd
push
or
cli
dec
xor
fcomp
loop
pop
xlat
cmp
add
mov
push
add
hlt
add
push
add
add
sarl
mov
adc
sbb
add
add
daa
in
jmp
jne
add
lock
or
dec
add
fisubrs
jg
stos
sbb
hlt
add
add
add
mov
xor
outsl
lret
and
mov
jb
sarl
sub
dec
rorl
addr16
lahf
cmp
add
add
jno
dec
adc
add
pushf
or
pop
imul
and
bound
mov
mov
xlat
mov
mov
add
dec
push
add
dec
pop
int
sbb
icebp
insb
mov
int3
xchg
add
inc
add
imul
add
aas
sti
add
out
movsl
push
adc
cs
push
add
add
jmp
add
mov
outsb
pop
lret
xor
and
add
jle
add
add
cmp
inc
add
mov
cwtl
jbe
jp
popf
fidivrl
add
les
jg
xchg
add
add
aad
lock
add
adc
jne
jp
aaa
sbb
add
adc
sbb
repz
add
adcl
adc
cmp
add
cmpsl
out
arpl
aam
into
outsb
xor
adc
mov
add
mov
add
repz
ret
or
add
outsb
movb
add
js
add
arpl
pop
rolb
in
jecxz
outsb
xchg
push
enter
iret
dec
leave
jmp
stos
jmp
sbb
icebp
mov
add
push
add
or
ret
cmp
add
mov
jecxz
push
in
xchg
add
add
mov
cmp
jo
and
mov
rolb
inc
add
cli
out
cmp
mov
stos
add
mov
pushl
aam
add
fstl
lds
and
add
mov
rol
dec
and
xchg
lock
lret
sub
add
push
xchg
inc
repnz
add
push
add
dec
sbb
add
scas
pop
pop
sub
ja
in
xchg
add
push
add
jmp
rcl
push
add
mov
add
pop
xor
mov
sarl
dec
add
mov
add
add
mov
icebp
icebp
cld
sahf
push
add
xlat
insb
or
aam
fwait
je
mov
mov
add
pop
nop
add
lods
pop
fs
push
and
xchg
add
pop
les
pop
or
push
imul
add
dec
or
xor
std
in
or
pop
rolb
add
push
popf
in
std
rolb
add
pop
or
dec
mov
add
loopne
fstl
push
add
inc
add
int3
scas
inc
ret
adc
push
add
add
add
add
testb
add
add
add
jnp
add
rolb
inc
add
inc
popa
leave
push
add
add
adc
leave
gs
add
add
lods
sahf
or
dec
fbstp
add
add
test
ret
orl
mov
xchg
push
bndstx
xor
gs
test
in
hlt
add
add
or
test
jbe
cmp
das
jbe
and
add
add
add
cltd
loop
mov
das
jno
mov
popa
inc
add
push
add
push
add
ljmp
xlat
pop
rorl
cmp
inc
and
pop
in
mov
add
rolb
dec
pushf
out
or
add
mov
cmpsl
mov
movsl
pusha
add
pop
add
jbe
jecxz
add
xchg
xchg
and
push
or
push
daa
jle
push
ret
xor
mov
adc
jb
movb
pop
bound
mov
cmp
and
xor
jae
rol
push
rolb
push
add
rcrl
pusha
add
add
jp
add
sbb
xor
dec
fwait
inc
fisubrl
add
push
shrl
inc
add
jae
pop
and
pop
in
add
xchg
add
lahf
jb
dec
cmp
decb
or
mov
inc
add
add
jle
nop
add
dec
loope
in
fildll
lret
add
add
mov
ret
dec
xchg
jbe
cwtl
push
add
adc
add
jmp
test
data16
add
jnp
sub
les
call
lds
add
pop
pop
test
lcall
add
arpl
adc
xchg
add
and
add
add
push
add
add
sbb
add
add
std
pop
or
and
add
push
aam
aaa
call
ljmp
mov
mov
in
nop
add
mov
dec
adc
call
test
lds
push
xor
add
mov
mov
mov
test
add
fstpl
mov
mov
mov
pusha
add
lds
jae
popf
in
mov
add
dec
jp
add
mov
add
addb
add
add
aas
out
add
pop
mov
jg
push
add
cs
pop
mov
add
out
iret
fistpll
inc
adc
xor
cmc
dec
mov
add
add
je
pop
add
pop
xor
and
aas
dec
xchg
shl
add
add
add
pop
lods
adc
adc
mov
pushl
add
add
data16
pop
test
and
mov
aad
add
sub
int3
loope
add
add
cmc
push
add
mov
add
jo
dec
and
jbe
rolb
pop
aam
xchg
add
add
push
add
mov
cmpsb
add
add
jg
xor
jnp
add
sbb
push
add
mov
push
andl
and
mov
int3
loope
or
xlat
repnz
into
cmpsl
into
ja
addb
sub
add
in
xor
sahf
push
daa
incl
cmc
add
int3
imul
insl
mov
add
and
push
je
xor
pop
mov
mov
push
add
add
jae
add
add
push
adc
scas
sahf
fisttps
add
cmpsb
add
add
add
inc
add
loopne
push
add
rolb
add
daa
mov
clc
pop
sahf
inc
add
lcall
lret
xchg
xor
lahf
lds
mov
ret
add
daa
inc
dec
data16
pop
dec
outsb
push
jecxz
imul
addb
lock
mov
les
and
jae
movb
lahf
lods
push
add
jl
fists
es
add
sub
add
mov
or
dec
dec
in
jmp
push
add
jge
sbb
jle
add
inc
add
rolb
mov
clc
rorl
add
add
add
or
mov
lock
xchg
add
popf
lahf
rorl
adc
xor
jno
sbb
cmp
pop
dec
jb
mov
add
int
add
add
test
add
cli
xor
add
xchg
inc
aas
fiaddl
jp
adc
ljmp
add
dec
xchg
lea
push
push
add
fldl2e
push
and
mov
add
add
arpl
mov
push
lea
addb
add
jnp
mov
out
and
mov
add
fisttpll
inc
add
out
inc
jg
into
or
mov
mov
mov
mov
repz
add
cmp
imul
mov
add
iret
int
add
loope
push
add
add
mov
dec
add
cmpsl
xchg
jns
jecxz
add
sub
ret
add
mov
cmp
popf
leave
and
mov
je
mov
mov
inc
add
add
or
jns
jnp
cmpsb
add
mov
mov
jne
add
mov
jnp
add
add
popa
or
add
add
out
xchg
push
add
jl
jnp
inc
add
add
pop
or
add
movsl
jnp
mov
pop
jne
sub
out
jnp
add
in
pop
xlat
xor
imul
adc
pop
sub
xchg
cld
adc
sub
jnp
stos
das
mov
add
jae
pop
sbb
add
test
mov
in
jmp
add
mov
lea
rolb
add
cmp
add
mov
es
idivl
add
sbb
loop
popf
and
add
adc
aad
add
insb
xor
lds
aam
rcr
dec
das
add
and
or
adc
mov
je
adc
aad
subl
mov
cmp
aas
jo
sub
add
movsb
add
add
loopne
fistpl
popa
jg
add
rolb
lcall
addb
jb
jecxz
scas
pop
fdivrl
movsl
inc
add
add
add
add
popf
int
enter
inc
add
leave
fistl
arpl
jae
insb
addr16
clc
dec
mov
xor
out
outsb
adc
push
xchg
add
ljmp
or
adc
insb
mov
das
add
mov
in
lock
insb
pop
sub
test
mov
into
dec
and
add
add
call
push
add
repnz
add
roll
imul
jb
iret
out
pop
sub
mov
sbb
cmp
xchg
add
add
sub
dec
jb
mov
add
add
sbb
and
pop
js
mov
add
mov
mov
mov
add
stc
idivl
mov
cmc
lret
in
stc
cltd
pop
and
add
mov
mov
xor
cmc
movb
add
sbb
cltd
out
or
add
add
inc
in
sub
sti
into
sub
add
push
cmpsb
add
add
and
pop
data16
or
bound
mov
rolb
add
xchg
add
loopne
roll
adc
add
test
les
mov
and
mov
add
popa
scas
out
test
xchg
add
and
sbb
inc
add
into
xor
jle
movb
fimuls
sbb
scas
sbbl
testl
cmp
pop
lods
adc
and
pop
mov
add
das
mov
add
dec
popa
bound
mov
add
pop
outsb
inc
xor
mov
test
outsb
adc
add
jbe
imul
jae
in
add
pusha
add
icebp
mov
mov
lods
mov
add
add
mov
lea
rorl
loop
or
or
push
add
mov
pop
jne
add
dec
push
fsubs
adc
inc
int
lea
add
add
cs
rolb
out
dec
pushl
mov
pop
cmp
dec
jae
mov
pop
xchg
mov
clc
mov
test
imul
divl
cmp
pusha
add
addb
adc
mov
fwait
dec
inc
add
sub
add
mov
mov
out
dec
sbb
divl
add
add
mov
mov
xchg
testb
out
out
inc
add
test
jmp
add
pop
adc
pop
sti
xchg
add
sbb
xchg
add
fildll
out
sbb
xor
pop
mov
pop
ja
mov
loopne
movsb
add
add
cmpsl
addb
repz
outsl
jb
adc
push
jne
mov
fcmovu
mov
cmp
jp
sbb
inc
add
add
icebp
mov
add
inc
add
jb
mov
mov
add
iret
adc
loopne
mov
inc
adc
add
hlt
add
add
stc
les
xchg
bound
mov
mov
mov
dec
ror
cmp
ja
add
in
lahf
add
das
add
sbb
lods
in
xlat
xchg
add
dec
adc
or
out
adc
xchg
cmp
add
outsb
int3
enter
pop
movb
adc
pop
pop
popf
iret
push
xchg
add
jecxz
and
mov
inc
push
mov
testb
mov
xchg
add
popa
mov
add
mov
insb
mov
pop
scas
cmp
out
mov
repnz
add
jecxz
add
add
add
push
push
xor
xchg
hlt
add
fistpll
inc
mov
cmp
rolb
movb
repz
add
jbe
jle
add
les
sub
add
adc
les
adc
out
inc
add
add
roll
add
cwtl
cltd
test
or
add
add
mov
cmp
fisttpll
push
add
cmova
mov
and
pop
ds
push
jae
mov
cld
cwtl
pop
cli
ret
outsl
aam
lods
ja
add
add
sbb
adc
pop
pop
jmp
add
call
repz
add
inc
add
or
pop
add
inc
fimuls
test
add
add
mov
add
jmp
sub
imull
in
int3
gs
and
cwtl
inc
cmp
mov
add
or
mov
xchg
add
pop
popa
pushf
jp
vpmulhw
add
jmp
add
add
xchg
add
add
adc
xchg
and
testl
lds
test
int
movsb
add
mov
inc
add
adc
add
pop
cmp
push
add
mov
inc
les
add
cwtl
aam
shll
add
add
mov
push
add
add
push
pop
bound
mov
out
jo
inc
add
sub
mov
cli
add
add
add
icebp
jecxz
add
mov
mov
push
add
dec
mov
cmp
jo
push
pop
add
push
push
ficomps
bound
mov
int
add
inc
add
gs
ja
jge
push
add
add
mov
jecxz
jno
sti
rcrl
add
cmp
cmc
mov
lea
testb
inc
xlat
add
ja
push
add
push
add
dec
and
mov
mov
mov
add
shl
add
xor
push
outsb
jae
add
add
add
cs
jl
jno
cwtl
lret
scas
or
push
add
mov
popa
add
in
mov
inc
jl
rolb
inc
add
les
fistps
sahf
in
mov
ret
movsl
pop
xchg
add
add
mov
add
movsl
add
leave
cmc
xor
gs
lea
mov
int3
pop
and
add
lret
add
mov
ficoml
and
mov
pop
lret
xor
dec
lahf
test
int
sbb
repz
add
pop
inc
cltd
shll
dec
push
dec
mov
push
mov
inc
add
sub
inc
sahf
daa
leave
mov
lret
mov
sub
sbb
imul
hlt
add
add
cld
xchg
repz
addr16
xchg
add
stos
push
movsl
movsb
add
daa
sahf
push
add
and
mov
aam
rolb
sbb
in
push
daa
cwtl
or
xchg
xor
push
fidivs
add
gs
xchg
jb
jge
rolb
xchg
clc
repnz
lds
push
inc
add
push
add
pop
subl
add
xchg
aas
popf
add
fiadds
add
adc
adc
mov
add
sbb
add
leave
sbb
ja
cli
les
loop
adc
cmp
add
add
push
rolb
add
add
iret
add
mov
mov
jl
das
cmp
fwait
pushl
push
fcoml
les
stos
outsl
out
add
mov
push
mov
lea
dec
insl
test
adc
mov
jnp
push
add
or
or
xchg
cmpsl
scas
mov
add
mov
xchg
adc
add
add
ret
scas
inc
stc
rol
pop
mov
mov
bound
mov
add
mov
add
inc
add
and
rolb
bound
mov
add
ds
mov
push
add
addb
sbb
add
xchg
add
dec
sbb
mov
jp
sub
mov
fldcw
add
lock
add
add
xor
and
add
add
cmp
jmp
or
add
add
testb
pop
pop
inc
pop
scas
into
sbb
adc
addr16
push
push
add
and
or
cmp
or
shrl
rolb
iret
nop
add
push
add
add
shll
lret
jge
adc
mov
add
jne
xchg
add
mov
add
fwait
jg
add
xor
and
movsl
out
movsl
addb
add
xchg
inc
add
add
dec
jle
in
add
std
mov
repnz
add
add
lds
add
loope
add
insl
jbe
rolb
push
add
add
int
adc
mov
mov
mov
push
adc
dec
push
or
sub
add
add
out
push
add
add
xor
add
arpl
stos
cwtl
sbb
fwait
loopne
loopne
add
pusha
add
cmpsl
fcoml
add
jb
pop
adc
push
mov
movups
enter
push
add
sbb
adc
add
add
mov
add
add
add
inc
add
push
xor
frstor
pop
adc
xchg
stc
gs
aam
sub
push
add
mov
add
int3
dec
xorl
jbe
sbb
add
mov
add
iret
cmp
or
add
mov
out
mov
mov
loop
lds
push
add
arpl
add
jl
cld
push
add
add
add
xchg
add
xorl
mov
add
jmp
ss
pop
mov
xor
xlat
enter
xchg
add
mov
add
push
cwtl
int3
loop
mov
add
outsl
roll
add
add
stc
negl
bound
mov
scas
movl
lret
or
xchg
lcall
sti
xchg
xchg
add
sbb
add
addr16
rolb
std
out
or
clc
fwait
xor
ljmp
add
popa
addb
mov
adc
xor
add
out
lret
fcmovnu
push
mov
cltd
mov
nop
add
add
add
and
pop
call
add
mov
sub
inc
add
xchg
pop
jbe
xor
mov
les
dec
sahf
pop
xor
mov
fisubrl
imul
add
loopne
jle
rolb
mov
jp
adc
cmc
loopne
push
jb
test
jle
push
add
or
add
add
testl
and
cmp
mov
pop
jge
dec
push
roll
add
in
les
pushf
mov
push
push
add
push
dec
fcos
inc
add
mov
inc
ret
data16
jge
add
mov
xchg
mov
add
sbb
push
add
out
mov
enter
push
stc
dec
jle
sub
add
sti
add
add
in
scas
clc
arpl
mov
sti
jno
add
xorl
add
sbb
icebp
add
inc
pop
pusha
add
mov
pop
add
xchg
mov
mov
add
test
pop
adc
add
xor
add
ds
add
sub
fadd
add
add
lods
pop
jle
add
add
adc
add
icebp
in
add
mov
loope
adc
mov
add
xchg
add
outsb
rcrl
jmp
add
cmp
add
mov
ret
push
loope
xchg
xorl
xchg
pop
or
sti
stos
pop
or
incl
add
icebp
out
aaa
mov
add
ffreep
int
sbb
addb
testb
fildll
stos
mov
xor
or
push
add
push
pop
sub
add
jle
xlat
push
add
insb
mov
add
jb
sbb
push
mov
in
inc
addl
popa
sub
add
push
add
mov
addb
les
pop
clc
dec
clc
sbb
out
ljmp
insl
outsb
jecxz
and
mov
dec
and
mov
add
popl
mov
add
mov
dec
rolb
stos
outsl
inc
add
test
aaa
sahf
aas
imul
lret
pop
scas
ds
mov
push
add
insb
jg
cmpsl
and
xor
push
add
pop
addr16
add
add
cmp
les
test
mov
pop
xchg
out
in
imul
movsb
add
add
les
sub
dec
inc
add
addb
jno
leave
pop
jnp
add
mov
dec
jmp
add
xchg
add
std
xchg
add
jbe
loop
xlat
arpl
ret
je
mov
mov
add
test
jae
cmp
xor
sub
jg
mov
and
mov
push
add
sub
add
pushl
rolb
add
lea
lret
inc
add
mov
push
pop
cld
mov
add
mov
push
cmp
add
cltd
mov
lcall
rolb
add
and
dec
or
fisttpl
add
jne
add
sbb
out
add
ja
cli
icebp
ljmp
sub
mov
add
arpl
mov
add
dec
jb
or
dec
jl
addl
rolb
push
jge
mov
add
add
xchg
addr16
lahf
push
dec
arpl
ljmp
test
enter
push
inc
add
stc
xor
xchg
xchg
mov
mov
mov
test
adc
add
mov
std
push
push
ds
cmpsb
add
add
fimull
jb
rolb
testb
iret
mov
dec
sbb
xor
add
adc
sub
cwtl
pushf
or
lret
xor
add
pushf
jmp
xchg
scas
mov
add
jecxz
add
nop
add
out
xlat
push
fwait
sarl
mov
mov
sub
or
mov
rolb
icebp
lcall
add
xchg
mov
ja
mov
xlat
jne
sbb
mov
repnz
and
adc
add
adc
adc
cwtl
in
aas
xlat
addb
inc
add
popf
je
xchg
add
add
inc
add
add
push
xchg
add
jl
aad
add
xchg
outsl
inc
add
add
and
mov
mov
imul
push
cmpsb
add
adc
in
xorl
pop
push
sbb
inc
add
add
add
add
add
fwait
mov
addr16
rolb
testl
cmp
push
add
add
push
add
popf
hlt
add
loope
je
aad
add
add
in
add
bound
mov
ret
leave
sahf
add
add
insb
jae
xlat
imul
mov
mov
add
inc
add
sbb
cmc
int
add
sub
mov
add
outsl
js
pop
scas
ss
sub
rolb
dec
mov
test
pusha
add
jbe
out
mov
mov
popa
sbb
add
or
out
add
mov
cmp
pop
dec
stos
cmp
jb
add
add
add
jl,pt
in
mov
rorl
mov
add
jne
add
call
add
add
push
add
sub
dec
inc
dec
adc
push
add
pop
popf
mov
pop
movsb
add
mov
cs
inc
mov
leave
mov
push
gs
or
mov
mov
mov
adc
sti
jmp
loopne
dec
enter
out
add
and
jge
add
pop
sub
add
and
inc
icebp
xchg
pop
jns
add
jns
add
mov
add
sti
add
test
add
mov
stc
das
mov
add
add
xor
add
mov
and
out
inc
add
fldenv
adc
push
jmp
pop
mov
add
add
faddl
mov
xchg
dec
pop
cmp
or
jo
stc
cmp
mov
addb
xchg
add
mov
std
xchg
add
add
mov
or
int
add
outsb
adc
add
add
fisttpl
xor
ret
pop
add
loop
mov
xor
jbe
out
nop
add
add
add
add
rolb
inc
add
ds
testl
pop
test
call
add
add
lods
aam
loop
outsb
rorl
add
add
add
mov
mov
addb
and
lahf
ds
mov
cwtl
popa
xchg
push
gs
add
mov
aaa
push
cmp
add
mov
mov
add
lea
xchg
add
ret
int3
pop
and
sub
test
add
mov
mov
add
adc
mov
adc
arpl
jnp
mov
xchg
dec
push
rolb
repz
xchg
imul
cld
loop
hlt
add
fimull
shrl
cmpl
jb
lea
add
cltd
dec
aas
incb
adc
stc
in
test
mov
inc
add
out
adcl
andl
xor
sub
les
lahf
popl
jbe
xor
and
or
add
mov
add
mov
stos
in
mov
mov
lds
sbb
sbb
sub
add
add
mov
add
push
add
mov
add
add
add
adc
cmp
mov
add
xlat
orl
mov
add
hlt
add
xor
jmp
ret
add
ret
pop
pop
add
mov
or
add
add
je
mov
add
adc
fadds
mov
out
sti
jmp
add
in
push
add
add
add
mov
ret
add
add
add
mov
add
add
out
shrl
fsts
xor
sbb
jnp
or
pop
pushf
jle
testb
cmpsl
mov
loop
orl
inc
add
add
movb
push
pop
xor
or
add
add
xlat
add
addb
add
add
pop
lcall
lods
pop
sub
add
data16
push
loope
mov
add
add
repz
add
sub
shll
loope
fsubrl
popa
xchg
add
add
and
sbb
ljmp
cs
add
add
movl
xor
addb
add
cmp
scas
gs
and
add
cmpsb
add
add
lds
add
cld
cmpsb
add
fsubp
ret
push
rolb
push
testl
decb
mov
add
adc
pop
std
and
outsb
sub
add
add
dec
leave
imul
pop
mov
dec
push
dec
and
movl
repz
pushf
adc
flds
add
testb
add
xchg
add
add
scas
outsb
ret
add
add
xor
sub
add
pop
dec
or
add
add
std
addb
addb
add
dec
pop
out
lcall
and
mov
cld
add
add
dec
xchg
test
pop
sarl
cmp
or
xchg
mov
clc
ficomps
lods
dec
and
mov
repz
ror
dec
adc
in
dec
xor
hlt
add
and
sti
add
cltd
mov
add
notl
fwait
or
fcompp
push
add
add
ljmp
arpl
jge
outsl
daa
jae
add
jo
inc
add
cmp
add
mov
xchg
push
xlat
add
mov
pop
and
aaa
xchg
rcrl
or
cmp
cli
into
jae
jmp
add
adc
or
add
add
add
mov
add
jecxz
add
movl
fstl
sbb
test
pop
movsb
add
add
fcoms
add
stc
jg
lds
add
in
fisttps
in
adc
or
lods
jb
and
mov
sub
adc
xchg
add
push
add
jno
add
add
add
rolb
iret
stos
sub
fdivrl
and
hlt
add
std
mov
inc
add
cmc
pop
sbb
sbb
add
push
into
sub
jecxz
dec
pop
mov
nop
add
lret
rolb
mov
scas
ret
mov
cwtl
fisubs
inc
dec
xor
xchg
add
int
sbb
sbb
cld
repnz
sbb
nop
add
add
add
xor
sbb
push
xor
sbb
add
sub
add
add
jp
add
fldenv
cli
add
add
js
add
mov
inc
add
add
testb
popa
mov
movsb
add
jbe
add
and
call
jae
data16
dec
xchg
pop
add
mov
pop
push
test
push
mov
call
add
ds
xor
outsb
sub
add
jl
jnp
rcrl
data16
ja
xchg
sub
jp
push
add
lds
add
mov
add
mov
mov
jg
add
cmp
add
add
adcl
push
pop
pop
sbb
add
pop
mov
add
xchg
add
imul
push
add
test
addb
add
cmp
jns
sub
adc
mov
add
xlat
add
outsb
enter
push
or
repz
testb
dec
daa
cli
in
xor
out
test
add
xchg
add
push
xor
add
dec
inc
stos
push
add
nopl
ret
clc
mov
leave
lret
cltd
add
mov
js
jb
movb
add
out
dec
add
mov
mov
add
sbb
in
or
add
mov
add
xor
push
add
rolb
mov
aas
sbb
dec
push
mov
hlt
add
add
add
stos
xchg
les
cmpsl
dec
pop
stc
je
and
fdivrs
add
xchg
add
xor
or
add
add
out
packuswb
enter
ret
scas
dec
cmpsb
add
insb
or
jae
push
push
add
add
add
cmp
lods
add
mov
nop
add
add
sbb
mov
sub
bound
mov
add
add
mov
fdivl
addb
add
inc
rolb
jg
and
xor
add
mov
inc
add
inc
add
add
dec
out
orl
xlat
xchg
nop
add
or
adc
jmp
sbb
add
clc
dec
enter
jmp
addb
jecxz
add
jno
lea
dec
cmc
or
pop
fldt
ds
xchg
add
mov
add
in
sti
inc
imul
cmp
add
outsb
adc
jns
add
inc
test
add
or
mov
add
cmp
data16
sub
mov
add
add
ja
add
popf
inc
loopne
ja
push
dec
jl
add
pop
add
sub
cmc
pop
cmc
mov
push
xor
out
icebp
or
aas
pusha
add
add
sarl
je
mov
aam
xchg
add
mov
rolb
mov
add
sti
out
add
jecxz
cmpsl
mov
in
mov
fldt
add
push
add
jle
dec
and
mov
lcall
add
add
xchg
ret
pop
jle
xor
adc
pop
adc
mov
dec
jecxz
add
ljmp
cmp
mov
pusha
add
push
leave
push
or
sub
inc
dec
cmpsl
scas
test
add
testb
add
jbe
mov
add
fdivr
dec
rolb
fwait
adc
adc
add
or
mov
mov
add
pop
arpl
sbb
add
jg,pt
iret
jl
sub
cmpsb
add
add
or
dec
data16
add
add
stc
add
add
inc
add
mov
mov
add
outsb
push
jnp
push
push
in
and
sti
mov
sbb
jle
aaa
jbe
mov
add
nop
add
lret
push
es
jle
xor
adc
add
adc
jno
fwait
lahf
arpl
ret
in
mov
lret
fwait
xchg
ljmp
add
rolb
add
ret
adc
aas
adc
cmpsl
adc
nop
add
push
icebp
mov
and
add
mov
inc
add
add
push
add
imul
pop
pop
repz
scas
add
mov
pop
add
add
mov
imul
es
add
add
mov
fucomip
scas
pop
pop
xchg
sbb
js
pop
mov
pop
and
mov
sahf
sbb
pop
lea
add
push
add
sbb
test
xor
scas
fdivl
into
subl
movb
mov
push
add
addb
addb
mov
ficompl
adc
lods
pop
mov
inc
add
rolb
xor
pusha
add
getsec
addr16
arpl
sbb
xor
lock
pusha
add
add
mov
adc
pop
add
add
in
push
add
adc
inc
jecxz
add
cmpsb
add
leave
xor
movsb
add
lods
push
add
out
fsubr
sbb
test
add
add
add
dec
or
pop
fwait
adc
cwtl
dec
xchg
stos
xor
sub
stc
lods
in
jmp
add
insl
filds
add
loopne
jae
xor
inc
add
stos
repz
add
add
mov
scas
mov
adc
xchg
jg
add
rolb
addb
add
loopne
movsl
add
add
mov
add
jbe
pop
test
dec
push
movb
nop
add
xchg
dec
add
jno
sbb
and
and
mov
testb
or
sti
add
ljmp
add
stos
pop
cmp
xchg
add
lea
incl
or
mov
popa
repz
sbb
add
pop
bound
mov
rolb
pusha
add
add
ret
add
add
jmp
mov
mov
loopne
sub
jmp
add
add
add
cltd
or
out
adc
decb
pop
fwait
aaa
and
mov
add
jne
and
mov
test
jmp
or
sub
ret
icebp
out
xchg
and
leave
mov
add
or
pop
mov
int
add
push
dec
jo
add
push
in
sub
in
add
les
add
mov
jb
ret
cmp
add
add
cmpsb
add
shll
or
stc
leave
enter
and
test
movsl
inc
mov
dec
addb
mov
and
bound
mov
add
add
pop
sub
add
aas
ljmp
lock
push
sahf
mov
push
add
mov
insb
fisttpll
add
add
add
add
xchg
outsb
pop
and
ja
movsb
add
rolb
popa
and
mov
cmp
lods
stc
leave
fimull
insl
or
add
pop
pusha
add
filds
bound
mov
add
out
cld
add
mov
iret
loope
add
add
add
mov
xchg
jge
scas
lahf
xor
insb
mov
add
fdivl
int
add
mov
test
add
add
insl
out
and
xchg
jge
pop
dec
mov
cpuid
add
mov
loope
jb
and
movb
repz
lea
add
jae
add
rolb
jecxz
jp
add
adc
js
mov
cmp
repnz
add
shrl
xchg
cmp
sub
pop
adc
fidivrs
jb
arpl
mov
add
mov
outsl
push
add
mov
pop
pop
lock
xlat
xor
out
daa
adc
pop
mov
lahf
in
push
add
and
mov
sub
mov
rorl
int3
test
xlat
jp
and
enter
mov
gs
mov
mov
inc
add
xchg
arpl
dec
addl
push
testl
mov
int
pop
mov
dec
mov
add
jno
data16
or
lret
scas
sarl
xchg
lret
decl
and
cmp
imul
add
sub
fisttpl
dec
imul
push
add
add
add
stos
sub
fildl
incb
mov
add
add
mov
pusha
add
adc
add
enter
jno
insb
xchg
loope
stc
or
mov
xchg
je
jb
lret
les
sbb
mov
push
add
add
or
add
adc
and
mov
add
insl
xchg
dec
out
add
jecxz
nop
add
jae
xchg
add
sahf
test
adc
into
orl
lock
outsl
mov
and
imul
je
push
push
add
jp
mov
mov
mov
pop
pop
sbb
adc
mov
add
dec
xor
mov
adc
push
add
jns
pop
scas
rolb
cmp
add
or
daa
testb
mov
mov
pusha
add
add
push
fwait
pop
cmpsb
add
daa
fsts
inc
add
fsts
push
add
out
call
add
add
add
mov
fsubr
out
aad
dec
ret
test
adc
leave
xor
in
ficomps
add
push
add
jp
add
add
lret
fidivrl
cli
push
add
add
cmp
fiadds
add
movsb
add
inc
clc
lds
add
jne
add
scas
ret
inc
add
add
xor
call
in
sub
push
add
xchg
data16
rolb
fidivs
lods
aaa
add
cmp
add
add
out
lahf
fsubrl
sahf
movsl
pop
cmp
add
das
lods
xchg
mov
add
xor
and
mov
push
add
imul
pop
lret
jnp
add
add
jmp
out
lret
aad
add
scas
pop
sub
sbb
fidivs
out
cmc
ret
imul
add
add
mov
add
cwtl
fwait
or
push
add
bound
mov
add
or
pop
mov
adc
sti
mov
mov
adc
sub
push
inc
add
and
sbb
pop
rolb
mov
inc
add
add
sti
jae
add
add
xor
mov
in
inc
add
repnz
xchg
in
cmc
int
mov
out
mov
sub
fwait
sahf
arpl
add
dec
xchg
add
jg
dec
pop
dec
incl
iret
insl
repz
sub
add
add
mov
add
add
scas
orl
add
add
data16
add
repnz
out
xchg
jno
lods
nop
add
dec
xchg
sbb
add
push
dec
int3
adc
add
out
xchg
add
mov
fucomip
xlat
loop
cmp
add
lods
sbb
cmp
movd
mov
dec
or
fwait
jno
add
jle
add
or
adc
inc
mov
ljmp
aas
clc
adc
ficomps
xorl
and
lahf
push
add
test
mov
jbe
repnz
or
sbb
xchg
loop
adc
add
int
dec
xor
fsubs
out
jmp
add
pushl
decl
enter
int3
adc
mov
fucomip
sub
xlat
pop
jecxz
add
call
add
add
mov
lods
or
sbb
pop
cmpl
add
add
jns
add
dec
jbe
popa
movsl
xchg
add
add
sbb
fidivrl
add
daa
hlt
add
add
add
cmp
add
outsl
int
jg
add
test
sub
xor
jecxz
jo
jl
push
rolb
sub
pop
into
mov
push
mov
mov
in
fadd
cli
jp
mov
jnp
mov
repz
inc
jne
int
and
mov
adc
sahf
sbb
sub
xchg
add
add
data16
mov
aas
jns
jg
add
mov
outsb
sub
movsb
add
mov
ljmp
test
add
add
mov
add
data16
add
add
add
jbe
testb
xchg
jno
shll
add
add
in
add
sub
icebp
and
add
add
outsl
mov
loopne
out
or
pop
sbb
sti
xchg
add
add
dec
add
xor
loop
and
dec
test
jae
jne
testb
mov
inc
lock
add
inc
and
mov
add
add
sub
push
add
rolb
in
mov
jo
and
mov
add
rolb
mov
xlat
mov
std
jnp
les
inc
sbb
add
cmpl
mov
testb
arpl
inc
pop
dec
in
xor
lea
add
ficompl
xchg
add
movb
add
dec
insb
sbb
ja
add
add
or
stc
mov
add
or
imul
mov
inc
add
arpl
aas
test
add
outsl
cmp
xchg
dec
cld
cmp
add
push
scas
movsb
add
mov
add
add
dec
inc
add
add
add
add
push
cmp
loop
out
mov
or
addb
sbb
sub
mov
add
mov
aad
cltd
sub
dec
aaa
or
mov
pop
rolb
adc
cmp
cmc
int
movsb
add
add
cmp
add
ja
cmpsb
add
fdiv
add
sbb
sub
pop
cmp
adc
movb
add
mov
jle
add
mov
add
add
loop
or
add
mov
push
scas
and
rolb
add
stc
ficompl
push
add
mov
xlat
sarl
fnstsw
adc
sbb
aas
inc
jo
add
cwtl
aad
out
mov
add
add
in
fiaddl
in
inc
jecxz
sub
das
stc
dec
push
add
push
mov
push
out
flds
add
mov
cmp
add
mov
add
sbb
das
int
jb
int3
in
xor
mov
add
mov
pop
cmpl
in
add
add
sub
cmp
daa
lcall
mov
test
test
pop
push
mov
adc
pop
repnz
add
popa
leave
mov
xor
mov
nop
add
add
mov
add
push
add
mov
stc
xchg
dec
adc
jmp
add
rolb
jae
add
pusha
add
movsb
add
call
mov
push
or
inc
enter
icebp
mov
lea
leave
cli
mov
add
pop
mov
pop
lea
add
dec
push
add
add
icebp
lcall
add
inc
push
stc
aam
je
shll
fcoml
test
outsl
add
insb
jle
sbb
mov
add
and
push
add
mov
add
and
add
inc
jmp
inc
add
lcall
mov
push
mov
out
cld
hlt
add
add
add
addb
mov
push
add
xchg
add
add
popf
scas
pop
cmp
add
out
sbb
add
adc
or
add
mov
add
addb
add
push
add
push
and
dec
lods
pusha
add
pop
rolb
aam
fxch
mov
sbb
mov
lret
add
xor
add
add
add
add
lods
mov
outsb
push
add
test
add
add
mov
scas
nop
add
lret
fucomi
cltd
scas
cld
pop
push
add
add
into
daa
imul
add
mov
sub
add
mov
lods
sub
pop
dec
movsl
sbb
or
jge
ljmp
dec
jb
dec
test
dec
push
add
gs
mov
sbb
add
add
add
adc
call
pop
cmp
addr16
movsb
add
enter
mov
add
or
add
push
add
add
mov
jo
inc
add
add
rolb
cwtl
arpl
lcall
into
lock
testl
mov
add
mov
add
sub
stos
inc
add
add
mov
ret
add
pop
or
outsl
push
aad
cmp
add
jns
dec
mov
push
add
xchg
add
int
insb
mov
in
and
mov
out
lds
xchg
add
mov
mov
add
adc
pop
push
and
or
add
mov
jge
lahf
cltd
jne
dec
xor
incl
frstor
mov
clc
adc
cmp
aam
fisubl
mov
mov
cmp
add
clc
sbb
test
add
add
stos
jmp
add
add
adc
push
mov
test
mov
xchg
imul
push
add
add
adc
mov
jp
in
shll
out
push
push
fs
ds
ja
add
test
push
add
sbb
push
sbb
add
add
mov
mov
rolb
add
add
data16
xor
cmp
or
loop
pop
cmp
push
jle
add
mov
xlat
jl
dec
icebp
dec
add
add
add
inc
add
add
test
mov
add
lret
cmp
add
rolb
add
add
repz
mov
add
add
jo
mov
jp
mov
or
add
jle
push
add
daa
addl
lods
mov
insb
fdivl
push
addb
hlt
add
je
cmp
mov
fcompl
add
test
sub
and
mov
repnz
add
xchg
lret
pop
lret
pop
sar
jnp
add
add
sub
jns
add
fs
out
out
scas
adc
mov
add
cltd
add
xlat
push
xchg
enter
add
mov
inc
add
fsubrl
mov
or
mov
add
sbb
and
add
cmpsb
add
mov
mov
add
xchg
add
scas
push
sub
insb
test
incl
mov
add
adc
pusha
add
add
push
add
into
popa
jmp
popf
in
cmp
xchg
fisubs
addb
xlat
add
inc
add
sti
mov
add
add
test
inc
add
mov
xor
jne
or
imul
inc
int3
mov
xchg
mov
nop
add
add
add
add
ret
add
add
or
xlat
out
arpl
add
int
jecxz
add
add
loopne
ljmp
inc
outsl
imul
mov
xor
adc
clc
insl
pop
pop
xchg
pop
mov
add
rolb
mov
in
cmc
js
add
add
dec
aad
add
xor
cltd
das
xor
shrl
arpl
mov
fcomps
mov
mov
out
sbb
adc
lahf
mov
cmp
out
push
movsl
add
mov
push
add
mov
cmp
daa
cmp
add
add
add
std
mov
add
mov
nop
add
add
dec
sbb
add
add
mov
add
or
add
add
add
lret
jl
add
jl
jp
add
xchg
ret
xchg
je
pop
test
jp
aam
data16
roll
mov
adc
insb
jmp
add
add
jl
jo
cs
lcall
xchg
add
inc
add
adc
cld
fiaddl
jbe
in
xchg
sbb
add
dec
and
mov
add
mov
sbb
xchg
add
xchg
lods
dec
add
btc
add
sbb
fcomps
add
push
clc
mov
std
and
addl
mov
push
add
data16
jecxz
iret
push
repz
mov
das
roll
fisubl
ret
push
add
push
adc
mov
add
addb
addb
dec
and
mov
cmpsb
add
push
add
das
inc
add
popf
jno
test
mov
mov
out
or
hlt
add
inc
xor
lret
xchg
add
dec
lods
fs
inc
add
mov
push
cmp
jbe
rorl
cmp
into
lock
sahf
mov
dec
sub
clc
sti
std
add
or
add
add
mov
testb
mov
addr16
add
test
rorl
pusha
add
sbb
rolb
adc
pop
jmp
and
mov
add
mov
xlat
hlt
add
sahf
xor
mov
add
cmpl
mov
in
mov
pop
push
inc
shll
add
cs
test
pop
inc
mov
test
popa
mov
repz
add
movsl
seta
scas
mov
stc
jnp
lea
add
pop
xor
pushf
xchg
test
add
mov
ja,pn
mov
insl
cltd
fs
add
add
xchg
add
mov
push
add
add
pop
repnz
mov
pop
sbb
add
jmp
aam
jnp
cmc
outsl
pushf
cmpsb
add
cltd
test
add
add
sbb
adc
or
mov
mov
sub
addr16
mov
scas
dec
pop
mov
insl
std
add
pushf
dec
or
add
adc
ficomps
ret
mov
add
mov
outsb
push
add
add
aas
xchg
mov
imul
add
pop
stc
and
mov
mov
imul
mov
bound
mov
add
jmp
int3
rolb
xchg
js
add
mov
inc
inc
add
inc
or
add
lds
or
mov
mov
add
add
test
lret
xchg
add
add
mov
imul
mov
andl
push
push
add
push
sbb
add
outsb
outsb
popf
stos
mov
add
add
jecxz
add
xchg
mov
testb
adc
jb
movsl
mov
mov
push
add
add
out
add
add
aam
add
mov
xchg
add
ret
shll
add
std
lcall
xor
aam
mov
repz
add
add
push
call
or
mov
test
pop
and
mov
xor
add
add
add
arpl
sarl
loope
push
ucomiss
movsl
mov
sbb
pop
adc
xor
fucom
mov
bound
mov
test
nop
add
xchg
mov
add
mov
mov
imul
inc
lea
sub
cmovge
mov
push
aas
push
add
clc
movsl
loopne
sti
mov
stos
push
mov
mov
mov
cmpsl
sub
rolb
hlt
add
add
and
sti
lret
test
xchg
add
and
mov
jb
insl
mov
add
dec
lods
sub
cld
out
pop
push
add
lret
shrl
lds
xchg
cld
movsl
jmp
idivl
jnp
add
xor
xchg
mov
add
lods
cmpsl
movsl
push
aas
xlat
insb
add
roll
rolb
xor
int
add
ljmp
lods
movsl
pop
adc
stc
lea
mov
jle
jbe
test
pop
xchg
add
and
pop
dec
int
add
jb
mov
xchg
mov
add
pop
das
xorl
pop
mov
fistpll
out
int3
and
and
add
add
outsl
jge
pop
stos
in
mov
iret
and
addb
in
sbb
in
or
pusha
add
add
lock
fadds
add
je
cmpsb
add
mov
inc
add
ja
add
add
pusha
add
add
add
add
mov
add
add
add
arpl
add
pop
adc
sbb
dec
cmp
sbb
xchg
add
pop
pusha
add
jae
mov
jne
add
push
repnz
jns
jne
jne
repnz
mov
mov
inc
test
nop
add
cmp
add
xor
iret
dec
mov
push
cmp
shrl
loopne
sbb
dec
adc
pop
aaa
leave
insb
inc
add
push
add
add
fistps
arpl
lock
ss
add
testb
lds
add
testb
dec
cmc
xor
mov
in
add
add
fsts
fcomip
lcall
outsl
cmp
sbb
cmpsb
add
jp
push
sub
adc
popa
jp
add
add
int
add
popf
and
xchg
enter
loope
in
xchg
addb
fs
cmpsl
data16
add
adc
lret
xchg
xchg
xchg
add
in
jp
sub
add
jno
add
sbb
nop
add
add
and
adc
aaa
sbb
mov
cmpsl
in
and
add
add
add
add
add
xchg
add
psrlw
lahf
inc
add
into
cmp
mov
add
idiv
and
mov
imul
adc
sbb
xchg
add
ficoms
push
add
cmp
movl
lock
add
or
cmp
pop
or
inc
or
cs
adc
enter
std
jp
inc
loop
mov
add
pop
into
stos
add
push
add
mov
subl
out
add
fstpl
or
test
pop
add
hlt
add
add
or
pop
daa
push
add
inc
xchg
lods
jle
sti
mov
xor
rolb
mov
jae
enter
aaa
movb
add
add
int
add
add
xlat
adc
cmp
in
add
add
add
cmpsb
add
js
imul
add
inc
addr16
mov
cmpsl
std
rolb
sbb
mov
add
cwtl
addr16
add
sbb
add
int
add
add
add
xlat
testb
xlat
add
add
cmc
lahf
pop
mov
icebp
loopne
ret
jae
adc
xor
cwtl
pushl
add
fstl
stos
push
add
daa
std
imul
pop
cmp
pusha
add
mov
andl
push
add
add
in
adc
clc
inc
add
fwait
inc
add
scas
jl
push
pop
or
out
inc
jge
add
push
xchg
outsb
xor
and
mov
lods
dec
out
je
hlt
add
add
add
add
xor
mov
jmp
xchg
inc
jo
or
pop
xchg
into
in
in
sub
js
mov
inc
popa
jmp
add
jo
sub
add
or
add
add
add
lret
dec
jp
jo
cs
add
pop
and
pop
xor
add
inc
pop
in
mov
cmp
add
enter
mov
add
jmp
fcmovbe
add
mov
mov
jae
sbb
add
cmp
rolb
adc
cmc
out
adc
mov
and
xchg
add
mov
adc
push
add
loope
adc
mov
add
in
and
mov
and
add
xor
adcl
ja
aas
pop
cmp
jbe
fstps
mov
add
add
and
mov
outsl
cmpsl
jbe
arpl
scas
xchg
add
ss
xchg
add
movsl
add
sbb
add
jg
mov
ljmp
in
aaa
out
push
mov
movsl
les
mov
or
push
mov
outsl
and
in
push
stc
adc
test
ficomps
add
pop
xor
push
mov
add
add
add
push
movsb
add
iret
int3
fisubs
mov
add
sub
ret
test
je
or
jns
imul
add
popf
movb
mov
inc
add
jmp
inc
add
addr16
shll
adc
and
lock
inc
shr
dec
cwtl
pop
cmp
cltd
aad
cli
pop
jg
nop
add
dec
aaa
nop
add
popa
push
addb
pusha
add
add
and
mov
sbb
mov
addb
jno,pn
inc
add
jmp
add
stos
add
mov
or
add
add
add
aaa
and
or
add
scas
arpl
xlat
add
cld
mov
mov
jns
mov
add
addb
pop
je
dec
daa
ds
pusha
add
add
testb
push
and
mov
je
sbb
add
add
add
add
repnz
sub
mov
sub
add
inc
add
add
xchg
mov
inc
addb
repz
add
mov
add
add
push
cmpsl
push
loop
aaa
mov
xchg
add
and
aas
jbe
testb
sbbl
add
add
xor
jo
pop
or
inc
mov
mov
repnz
int
mov
ret
xor
iret
sbb
repnz
aad
add
add
add
pop
and
mov
add
cltd
pop
notl
hlt
add
fidivrs
xchg
add
rolb
add
mov
mov
vcvtsd2si
jl
cmp
outsb
movsb
add
insl
addr16
pop
les
daa
movsb
add
sti
popa
and
lret
insl
add
add
add
imul
jo
inc
adc
add
xor
cmp
adc
add
push
clc
or
add
add
add
outsl
add
sub
cltd
jmp
mov
add
pop
cmp
and
mov
add
rolb
cmpsl
jg
add
or
add
mov
add
cwtl
jle,pt
add
add
mov
pop
in
out
push
dec
add
add
scas
pop
jecxz
pop
push
push
xor
dec
stc
xchg
add
add
je
inc
add
dec
mov
pop
sub
add
cltd
mov
out
jl
adc
iret
mov
addb
add
add
sbb
add
inc
xlat
cmp
inc
push
jmp
jne
jg
in
int
add
stos
arpl
insb
fstpt
push
icebp
or
add
add
testl
cmc
and
mov
add
add
cli
insb
push
adcl
outsb
leave
fiadds
add
enter
pop
or
call
dec
jns
sbb
insb
ret
leave
jnp
add
loopne
cltd
stc
xchg
jp
add
addr16
add
loope
add
lea
faddl
add
add
mov
clc
cmovne
add
cmpsl
push
add
push
add
add
cmp
cmp
cmp
mov
fldt
rolb
lret
pop
jmp
add
out
pop
push
int3
mov
add
mov
inc
scas
inc
add
mov
add
roll
sbb
out
push
add
jg
movb
pop
mov
rolb
dec
pop
mov
xchg
add
add
add
add
adc
nop
add
and
add
push
aam
loope
addb
aad
scas
mov
add
lret
add
mov
or
adc
mov
add
add
shll
les
push
add
push
pop
mov
push
iret
sub
add
add
add
mov
add
add
sub
add
aas
cmp
push
dec
loopne
jmp
mov
dec
cwtl
inc
aaa
add
and
aad
cwtl
ss
add
xchg
dec
lds
dec
pop
scas
push
add
add
xor
cli
pop
jge
adc
enter
fidivl
imul
jl
mov
lret
push
add
insl
mov
insl
jnp
add
das
sub
add
ljmp
add
addr16
rorl
add
add
test
push
pushf
push
push
add
jo
pop
rolb
add
push
mov
cmp
sub
add
add
sub
cli
popa
cmp
add
jp
add
or
add
push
add
ja
ds
add
mov
sbb
add
xor
lock
jne
fstl
or
pop
fdivs
add
push
xor
add
pop
adc
mov
mov
or
stos
popa
adc
into
add
mov
jle
cmc
sbb
inc
add
jecxz
ret
repz
mov
cmpsb
add
stos
popa
and
xor
push
add
iret
ret
mov
mov
push
add
add
and
daa
mov
mov
popf
jmp
jno
mov
pop
je
or
and
enter
add
pop
jp
fldl
mov
lret
sub
or
daa
jb
mov
repnz
aaa
or
add
mov
lods
jl
lret
add
add
pop
add
sub
xchg
add
nop
popf
imul
aaa
test
mov
add
sbb
add
cwtl
loop
fdivl
xchg
int3
add
mov
cmpsl
xor
data16
add
add
out
pusha
add
add
mov
add
ret
arpl
add
add
stc
ds
data16
movsl
frstor
sub
int3
or
jns
add
add
cli
scas
dec
jbe
add
test
addb
mov
add
fidivrs
ret
hlt
add
push
mov
mov
pusha
add
push
inc
stos
pop
xlat
add
mov
add
add
add
lcall
into
xor
xchg
fidivrl
jge
add
add
flds
rol
stos
fsubl
add
add
mov
jnp
mov
ljmp
mov
mov
push
push
out
push
add
int
sub
mov
push
add
add
inc
add
add
jne
jbe
not
jmp
mov
mov
outsl
xor
addb
add
push
add
fidivrl
lock
mov
in
xorl
mov
lcall
rolb
or
pop
jecxz
pop
inc
inc
add
cmpsb
add
ret
arpl
hlt
add
mov
inc
daa
lock
add
add
inc
in
lret
outsl
out
mov
test
or
add
mov
jne
les
cmc
or
add
cwtl
mov
add
cld
leave
fucomi
push
add
add
xor
xor
dec
in
xor
dec
xlat
stc
loope
cli
nop
add
add
popa
add
add
in
movb
add
adc
dec
jnp
cmpsl
pop
ret
cwtl
adc
stos
pop
mov
insb
sti
jle
add
jb
mov
add
mov
add
fbld
dec
jno
add
repz
adc
add
cmc
jne
jbe
insl
add
mov
sub
add
outsb
lret
sbb
aad
or
scas
lret
aam
roll
ror
mov
cli
add
ret
add
add
mov
fisttpl
mov
add
ds
mov
add
jnp
add
adc
jmp
add
cwtl
les
inc
jl
adc
add
or
xchg
add
sbb
mov
mov
mov
pusha
add
push
add
sbb
add
add
and
inc
add
add
sub
repz
mov
add
add
push
rolb
add
mov
pop
inc
pop
shll
mov
add
fwait
out
and
rolb
xor
aam
xchg
add
aaa
js
adc
add
arpl
add
push
add
add
add
sub
mov
add
add
stos
mov
xchg
add
add
dec
outsb
fimull
inc
add
mov
xchg
add
mov
mov
jb
or
push
jge
and
mov
inc
add
pop
enter
call
pop
inc
aam
movsl
cmp
add
repz
pop
lret
repnz
into
loopne
lahf
lahf
pop
add
mov
int3
cmp
add
jae
fmuls
sub
dec
sbb
add
or
add
arpl
and
add
sbb
jns
add
jb
out
in
or
cli
lret
push
jae
add
cmp
add
push
add
add
or
ret
inc
add
iret
inc
add
cmpsl
cs
pushf
lahf
push
iret
inc
fwait
lcall
and
pop
lahf
lods
lahf
int
clc
mov
push
push
add
scas
jg
add
leave
add
cmp
mov
pop
push
add
movsl
adc
pop
in
aam
jecxz
dec
jl
clc
inc
pop
or
xor
mov
add
jae
xchg
add
add
add
movsb
add
in
mov
add
aad
pop
add
lock
insl
sbb
add
insl
push
add
xor
testl
mov
faddl
ja
sub
add
add
hlt
add
add
js
lds
add
add
mov
jo
sub
mov
sbb
jp
add
pop
arpl
add
cmp
out
cwtl
dec
sub
cs
into
cmpsb
add
dec
add
mov
jmp
mov
push
add
push
mov
add
add
add
stc
lahf
pop
inc
add
dec
enter
imul
lods
cwtl
xlat
pop
call
lcall
add
mov
lahf
idivl
adc
cli
lret
addl
insl
in
xchg
enter
in
or
and
add
fimuls
dec
sub
xchg
add
add
push
aas
adc
leave
adc
mov
outsl
dec
lret
or
jne
daa
inc
add
sahf
cmp
add
mov
movsb
add
jo
adc
sub
add
add
cmc
lcall
and
mov
stos
out
cmp
pop
frstor
mov
in
rcrl
add
add
mov
add
mov
imul
add
ss
out
dec
ss
fdivrp
and
mov
pop
test
jl
and
icebp
lret
add
mov
jbe
movsl
and
ja
gs
add
xlat
jp
lahf
cmp
inc
pop
mov
jmp
pop
sbb
es
dec
data16
add
fldt
in
add
out
pop
pop
inc
add
dec
lret
xor
mov
jae
arpl
or
jb
adc
lret
mov
rolb
ficomps
imul
add
jae
add
xor
icebp
in
inc
add
mov
btr
loope
int3
leave
test
lcall
add
or
xor
mov
lcall
pop
test
ds
in
mov
shr
add
cmpsl
dec
cs
call
and
pmaxub
sbb
test
push
mov
or
outsb
adc
dec
sbb
sbb
adc
add
mov
push
add
mov
add
lahf
pop
push
test
movb
add
add
pushf
push
add
bound
mov
push
add
repz
cmp
add
mov
add
inc
pop
les
lds
jg
add
add
push
insb
leave
mov
push
add
test
add
dec
rolb
xchg
add
adc
cmovp
xchg
movsb
add
mov
rol
add
dec
rolb
or
mov
add
repz
testl
cwtl
add
add
fidivrs
aas
mov
mov
aaa
add
push
lds
add
int
add
add
add
je
dec
rolb
ds
int
clc
pop
shll
jnp
xor
aaa
scas
xchg
xlat
sub
xor
sub
pop
movb
xor
pop
or
mov
add
test
and
add
sahf
add
roll
sub
outsb
dec
arpl
add
fsubl
mov
mov
ficoml
add
add
add
lahf
lret
add
add
addr16
icebp
mov
loope
pop
pusha
add
add
mov
xchg
out
or
rolb
add
movb
add
rolb
xchg
xor
pushf
add
lret
loopne
cmpsl
mov
call
mov
add
pop
mov
add
pop
inc
sub
arpl
cmp
movb
jle
hlt
add
imul
sub
mov
mov
rcrl
je
add
mov
test
add
mov
negl
sub
ret
and
mov
xor
and
mov
jnp
dec
pop
insl
pop
addb
fstp
fwait
pop
push
or
xor
addb
dec
inc
push
add
cwtl
or
fsubrp
pushf
push
mov
mov
mov
add
pop
nop
add
or
dec
inc
push
lds
adc
int3
or
out
int
and
jl
adc
and
and
mov
jae
mov
ja
mov
xchg
jnp
out
js
scas
add
cmp
add
cmpsb
add
add
cltd
out
pause
add
std
movsl
sbb
movsb
add
lret
push
js
and
mov
mov
mov
pop
scas
adc
inc
ljmp
add
cmpsl
mov
jnp
jno
movb
add
in
lret
sub
inc
rolb
or
adc
add
add
mov
add
add
daa
push
stc
testb
xor
mov
sti
out
xchg
add
add
mov
cmpsb
add
cs
mov
imul
push
jbe
jl
jl
xchg
mov
add
call
push
fwait
adc
out
add
das
add
mov
add
inc
adc
bound
mov
mov
add
add
pop
mov
add
add
add
add
adc
in
bound
mov
rolb
jge
add
nop
add
jnp
mov
xor
and
and
add
enter
dec
mov
push
add
mov
add
xor
add
or
and
add
add
jne
mov
xor
add
sub
rolb
inc
movb
add
iret
xchg
enter
in
bound
mov
ljmp
movb
mov
stc
inc
mov
test
sub
add
jl
add
inc
mov
add
or
add
sbb
push
cmp
add
in
aad
inc
jns
add
add
add
add
out
cmp
or
xchg
add
nop
add
adc
cmp
add
sbb
fcmovu
mov
fdivrs
add
adc
xchg
roll
dec
hlt
add
sbb
add
mov
fcomps
mov
out
mov
add
mov
adc
sbb
jecxz
add
cltd
mov
jns
add
xchg
add
mov
add
inc
add
pop
data16
movsb
add
add
push
aad
add
cmpl
pop
outsb
and
adc
adc
jnp
add
ficompl
add
lods
ja
add
pop
rolb
adc
add
fisubs
add
inc
add
lcall
lret
add
sti
or
push
sub
hlt
add
cltd
jne
add
and
mov
or
add
add
in
cld
jecxz
fcmovnu
sbb
in
xchg
dec
lcall
sub
pop
fadd
add
add
add
mov
xchg
outsb
out
add
mov
jno
mov
sub
lock
inc
add
add
in
popa
js
imul
gs
add
add
jmp
xor
les
mov
dec
push
jmp
add
add
decb
or
xor
xor
adc
test
cmp
add
inc
push
add
mov
cmpsl
arpl
xchg
xor
push
xchg
add
mov
iret
push
testl
jecxz
arpl
lcall
add
add
add
or
leave
dec
fiadds
add
pushf
xor
cmp
fwait
and
mov
push
sbb
out
pop
sbb
add
call
add
repnz
inc
int
mov
add
nop
add
lods
pop
pop
mov
leave
hlt
add
add
jno
gs
test
xchg
out
mov
xor
lret
mov
cmp
lret
insb
scas
adc
dec
xor
inc
pop
gs
stc
movsb
add
rolb
flds
add
insl
and
mov
imul
jne
test
mov
popf
fdivp
add
xor
inc
add
add
inc
add
add
add
add
dec
xlat
aad
lods
lds
add
stc
xor
mov
add
dec
pop
std
out
jnp,pt
add
fisubs
testb
add
lret
add
add
add
add
fldenv
fsubrl
pop
xor
imull
dec
add
int
pop
push
pusha
add
or
add
push
add
adc
xchg
add
or
add
cld
jp
add
add
out
add
add
mov
mov
add
cmp
enter
add
add
add
add
das
insb
jb
sub
ret
push
adc
add
add
clc
repnz
jae
xor
jg
aaa
inc
fimull
nop
jae
add
sbb
lock
add
sbb
add
add
pop
test
xor
add
clc
repnz
jae
add
add
repnz
jae
add
out
mov
clc
repnz
jae
add
daa
jecxz
je
clc
repnz
jae
and
push
mov
xchg
ret
add
cmpsb
ret
decl
clc
repnz
jae
add
imulb
add
and
pusha
add
clc
repnz
jae
and
call
fwait
cld
nop
jmp
aas
lahf
jmp
cmp
nop
jae
pushf
add
add
clc
repnz
jae
add
add
add
clc
repnz
jae
add
lock
rolb
mov
add
mov
clc
repnz
jae
add
cmp
popa
add
repnz
jae
add
add
pushl
add
pop
pusha
push
mov
xchg
ret
add
xchg
add
jae
mov
push
mov
xchg
ret
add
jmp
cmp
nop
jmp
add
push
add
add
xor
jo
cmc
dec
push
fwait
cld
nop
jmp
add
add
add
add
mov
sub
repnz
jae
push
add
or
push
mov
xchg
ret
addl
nop
jae
add
jecxz
add
mov
add
repnz
jae
add
add
sub
mov
cmp
ret
add
and
xchg
add
shll
xchg
inc
add
jae
ret
daa
testb
int
fdivl
sti
lea
push
mov
xchg
ret
pop
lret
aas
mov
mov
xchg
ret
and
int
add
iret
or
adcl
add
pushf
mov
insl
mov
clc
repnz
jae
add
add
inc
and
repnz
jae
add
ficoml
mov
fsubrp
and
cld
nop
jmp
and
add
xor
lods
mov
clc
repnz
jae
push
xchg
add
mov
clc
repnz
jae
sbb
jbe
mulb
je
js
repnz
jae
jecxz
add
lret
scas
xor
fwait
cld
nop
jmp
pop
add
lret
pushf
dec
push
mov
add
add
sbb
or
add
mov
clc
repnz
jae
add
add
cmpsb
inc
inc
add
rcrl
sbb
add
and
fiaddl
mov
mov
add
fwait
cld
nop
jmp
add
ret
adc
inc
add
nop
jmp
lret
fiaddl
inc
jno
jae
add
jae
add
fiaddl
or
inc
add
add
add
add
loop
sahf
call
clc
repnz
jae
add
add
push
add
add
sub
add
repnz
jae
add
jae
add
clc
repnz
jae
inc
add
jbe
push
pop
push
mov
xchg
ret
mov
jae
fsubrl
and
add
nop
nop
inc
lret
xor
push
jno
add
add
sub
clc
repnz
jae
and
lods
mov
clc
repnz
jae
aas
add
jmp
mov
xchg
ret
add
add
add
fwait
popa
push
mov
xchg
ret
xchg
add
adc
xor
clc
repnz
jae
add
nop
xchg
andl
pusha
clc
repnz
jae
neg
add
out
xchg
push
mov
xchg
ret
or
add
add
push
mov
xchg
ret
mov
dec
add
add
fwait
cld
nop
jmp
xchg
lahf
lret
lock
pop
inc
fwait
cld
nop
jmp
add
add
cmpsb
add
cld
imul
fwait
cld
nop
jmp
incl
add
mov
push
mov
xchg
ret
dec
faddl
mov
clc
repnz
jae
cmpsb
push
add
add
cmp
cld
nop
jmp
incl
int
mov
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
add
fs
mov
faddl
xchg
ret
fiaddl
mov
and
push
mov
xchg
ret
sbb
dec
jg
mov
cld
nop
jmp
add
add
mov
clc
repnz
jae
mov
aad
cmpsb
add
and
push
mov
xchg
ret
add
cmpsb
lret
cmc
sbb
mov
xchg
ret
ret
push
mov
add
or
repnz
jae
clc
lock
daa
addr16
je
orl
clc
repnz
jae
add
lret
add
jmp
jmp
add
nop
add
xchg
add
loopne
clc
repnz
jae
add
jbe
mov
clc
repnz
jae
dec
lahf
in
cld
mov
clc
repnz
jae
dec
nop
add
add
clc
repnz
jae
add
add
fs
add
push
mov
xchg
ret
add
xchg
add
pop
in
sbb
movsb
clc
repnz
jae
add
add
add
cld
nop
jmp
test
add
movb
add
sahf
add
clc
repnz
jae
xchg
mov
xlat
push
sbb
cld
nop
jmp
add
jg
lahf
add
daa
xchg
push
add
mov
xchg
ret
add
add
int
jo
push
dec
adc
repnz
jae
add
and
xlat
add
test
push
add
fwait
cld
nop
jmp
and
cmpsb
int
les
clc
repnz
jae
lret
add
addb
and
push
mov
xchg
ret
add
pop
add
mov
push
mov
xchg
ret
mov
nop
dec
test
mov
add
or
push
popa
jl
cmp
nop
jmp
xlat
add
test
add
stos
negl
add
add
lret
pop
mov
clc
repnz
jae
add
cmpsb
dec
fiaddl
add
jmp
add
add
ret
or
out
inc
add
xor
dec
nop
add
movsb
clc
repnz
jae
add
add
pop
add
ds
fwait
cld
nop
jmp
add
cmpsb
mov
cmpsb
sub
sub
repnz
jae
add
add
add
popf
mov
clc
repnz
jae
test
dec
jp
mov
nop
jmp
add
mov
shrl
nop
jmp
faddl
jno
daa
test
mov
clc
repnz
jae
and
and
mov
lock
add
nop
adc
and
pushf
leave
clc
repnz
jae
lock
mov
andl
add
mov
nop
jae
pop
add
ret
add
add
jne
clc
repnz
jae
add
cmp
repnz
jae
and
add
lret
pop
fwait
cld
nop
jmp
push
add
or
nop
ret
or
fwait
cld
nop
jmp
add
fs
add
add
clc
repnz
jae
add
add
repnz
jae
lock
add
nop
jae
add
mov
nop
add
xor
clc
repnz
jae
add
add
nop
jae
gs
xchg
add
pushf
pop
clc
repnz
jae
add
xor
or
or
or
clc
repnz
jae
mov
fdivrl
fiaddl
sti
shl
clc
repnz
jae
add
add
clc
repnz
jae
inc
push
push
add
movswl
clc
repnz
jae
jae
add
jae
xchg
fwait
cld
nop
jmp
add
add
repnz
jae
add
fs
push
add
fdivp
jmp
adcl
add
lahf
add
push
roll
xchg
ret
push
add
add
popa
fwait
cld
nop
jmp
add
clc
pop
add
out
sbb
ret
incl
daa
mov
ret
mov
add
add
sti
call
adc
repnz
jae
int
aad
nop
aas
jecxz
inc
add
mov
jne
je
repnz
jae
add
icebp
clc
repnz
jae
add
add
add
je
fwait
cld
nop
jmp
add
clc
add
add
fnsave
sar
nop
jae
add
xchg
add
sub
nop
jae
add
or
add
pusha
add
xchg
jecxz
add
xchg
add
add
xlat
push
jmp
add
aad
hlt
add
jae
fs
add
cld
nop
jmp
notb
add
sub
fwait
cld
nop
jmp
add
pop
js
add
fwait
cld
nop
jmp
jg
add
lock
jae
hlt
lock
add
fs
lods
push
mov
xchg
ret
fs
and
clc
repnz
jae
or
cmp
add
add
clc
repnz
jae
add
clc
repnz
jae
add
fisubl
mov
clc
repnz
jae
add
mov
in
and
fwait
cld
nop
jmp
lret
add
mov
jae
idiv
add
outsb
mov
push
mov
xchg
ret
add
or
adc
cld
nop
jmp
xor
test
xlat
dec
mov
push
mov
xchg
ret
lahf
add
add
fwait
cld
nop
jmp
add
add
add
push
fwait
cld
nop
jmp
daa
xchg
xchg
adc
fwait
cld
nop
jmp
add
test
nop
jmp
add
mov
push
mov
push
popa
add
repnz
jae
cmpsb
add
add
mov
xchg
ret
sbb
add
add
sbb
add
or
add
add
push
push
mov
xchg
ret
adc
dec
or
mov
clc
repnz
jae
add
add
push
mov
repnz
jae
and
ret
cmp
inc
sbb
repnz
jae
add
add
add
mov
add
clc
repnz
jae
ret
add
add
mov
repnz
jae
xchg
sbb
xor
jno
out
mov
jmp
mov
add
add
add
push
clc
repnz
jae
add
cmpsb
add
fmull
xchg
pop
je
clc
repnz
jae
push
fidivrl
rol
fwait
cld
nop
jmp
sbb
add
sbb
add
repz
mov
xchg
ret
cmpsb
add
add
jo
cltd
lods
push
mov
xchg
ret
test
add
lea
ja
fs
repnz
jae
incl
mov
add
adc
popa
cmp
add
stos
mov
clc
repnz
jae
adc
nop
dec
push
add
sbb
fdivr
repnz
jae
add
cmpsb
cmpsb
add
lret
sbb
xchg
repnz
jae
jbe
inc
xchg
adc
xchg
in
mov
clc
repnz
jae
add
add
push
push
mov
xchg
ret
mov
add
mov
clc
repnz
jae
daa
fs
add
mov
pop
call
clc
repnz
jae
dec
add
add
or
dec
add
add
add
add
mov
lods
mov
clc
repnz
jae
hlt
add
add
mov
fwait
cld
nop
jmp
add
add
xor
add
clc
repnz
jae
push
jg
add
add
clc
repnz
jae
add
hlt
mov
and
add
or
add
daa
lret
aad
dec
push
mov
xchg
ret
add
cmp
cmpsb
add
add
repnz
jae
xor
clc
pushf
add
std
popa
clc
repnz
jae
add
dec
test
add
clc
repnz
jae
add
fcoml
pop
clc
repnz
jae
add
add
sub
push
clc
repnz
jae
daa
add
dec
add
add
mov
add
clc
repnz
jae
jecxz
dec
gs
mov
xchg
ret
add
or
push
add
push
add
dec
mov
clc
repnz
jae
xor
jg
add
fildl
jmp
add
or
ret
or
test
clc
repnz
jae
lahf
add
pop
push
push
mov
xchg
ret
and
xchg
fucomi
inc
pop
add
pop
daa
add
add
or
add
adc
add
repnz
jae
add
test
sub
incl
add
add
xorl
jg
mov
jg
clc
fwait
cld
nop
jmp
pop
inc
add
xor
push
clc
repnz
jae
add
add
add
popa
add
repnz
jae
add
cmpsb
fmull
cmp
mov
xchg
ret
daa
int
testb
inc
push
mov
xchg
ret
add
add
add
add
outsl
loopne
mov
xchg
ret
dec
test
push
fwait
cld
nop
jmp
xchg
pop
dec
add
add
inc
add
add
mov
fwait
cld
nop
jmp
cmpsb
and
pop
clc
repnz
jae
mov
add
mov
nop
jae
pop
dec
add
push
lock
clc
repnz
jae
daa
add
add
and
rolb
xchg
ret
clc
add
xchg
add
cmpl
mov
add
and
movsl
rcll
jb
clc
repnz
jae
test
inc
add
icebp
test
repnz
jae
add
test
test
add
add
add
jle
add
add
cmpl
fwait
cld
nop
jmp
add
add
fimuls
test
repnz
jae
xlat
test
add
add
add
mov
add
push
add
dec
or
add
lahf
add
repnz
jae
inc
push
lret
jg
ret
pushf
mov
repnz
jae
add
add
incl
mov
fwait
cld
nop
jmp
add
add
add
loopne
repnz
jae
add
test
lahf
jmp
clc
repnz
jae
add
add
ja
add
add
jg
fwait
cld
nop
jmp
add
cmpsb
add
add
dec
push
mov
xchg
ret
lret
pop
inc
add
add
xor
repnz
jae
lret
and
int
pop
jae
repnz
jae
add
clc
repnz
jae
mov
add
hlt
nop
add
stc
ret
dec
xor
daa
and
mov
nop
add
dec
or
test
fwait
cld
nop
jmp
add
push
add
aaa
mov
mov
xchg
ret
add
jae
pop
clc
repnz
jae
dec
adc
test
cltd
and
clc
repnz
jae
dec
lret
sbb
nop
jae
mov
push
ret
add
je
clc
repnz
jae
addb
cmp
jmp
jae
cmpsb
xchg
add
add
push
mov
add
pusha
adc
add
add
add
aas
std
repnz
les
add
repnz
jae
push
add
nop
push
add
sar
mov
xchg
ret
add
mov
andl
movsl
xchg
push
add
fmull
das
into
inc
add
add
add
pop
push
add
fiaddl
jae
push
jecxz
add
ret
add
mov
add
mov
xchg
ret
add
jge
push
mov
xchg
ret
xchg
add
add
and
mov
bound
cld
nop
jmp
pushf
add
xlat
add
insb
jmp
add
add
aad
mov
je
clc
repnz
jae
add
fdivl
xchg
jb
push
clc
repnz
jae
add
ret
add
adc
cld
nop
jmp
daa
add
pop
push
mov
xchg
ret
faddl
lahf
add
clc
repnz
jae
sub
adcl
fldl
xchg
ret
or
cmpsb
pop
add
enter
nop
jae
add
fs
or
add
cld
nop
jmp
dec
test
add
or
cmp
cmp
ret
add
add
add
call
fwait
cld
nop
jmp
and
add
add
cld
nop
jmp
add
add
add
mov
repnz
jae
xor
add
lret
cmpsb
mov
test
repnz
jae
jbe
add
imul
clc
repnz
jae
div
add
xor
clc
repnz
jae
jbe
incl
xlat
hlt
add
add
add
repnz
jae
add
sti
div
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
push
mov
add
jg
add
add
je
inc
add
jno
daa
fcmove
and
fwait
cld
nop
jmp
xlat
add
sub
add
dec
mov
push
mov
xchg
ret
add
add
lret
nop
add
clc
repnz
jae
add
add
jecxz
pop
jne
clc
repnz
jae
aas
aad
in
push
clc
repnz
jae
adcl
add
aaa
out
add
xchg
add
add
mov
clc
repnz
jae
push
int
nop
ret
iret
mov
clc
repnz
jae
add
jbe
nop
leave
push
push
mov
xchg
ret
ret
add
mov
clc
repnz
jae
add
aad
jno
xchg
jno
insl
call
clc
repnz
jae
jg
sub
add
repnz
jae
add
add
add
pusha
push
mov
xchg
ret
add
add
push
or
jae
add
incl
add
addb
mov
clc
repnz
jae
fs
add
clc
repnz
jae
add
add
lock
std
mov
clc
repnz
jae
lahf
add
add
and
mov
push
add
push
clc
repnz
jae
push
add
dec
aad
add
or
add
inc
add
dec
imulb
and
cld
nop
jmp
mov
ret
cmpsb
xchg
add
gs
pop
loop
add
add
daa
pop
add
add
movsl
xorl
repnz
jae
add
xchg
clc
repnz
jae
adc
add
dec
add
clc
repnz
jae
add
add
faddl
add
mov
clc
repnz
jae
add
push
aad
pop
xor
clc
repnz
jae
or
or
fidivl
mov
add
fwait
cld
nop
jmp
jno
push
pop
or
repnz
jae
addb
lahf
add
mov
cli
clc
repnz
jae
push
add
and
cmp
clc
repnz
jae
add
repnz
jae
sub
decl
add
add
add
mov
and
fwait
cld
nop
jmp
jae
pop
inc
pop
dec
add
mov
clc
repnz
jae
add
add
clc
repnz
jae
xchg
jbe
nop
lret
in
mov
fwait
cld
nop
jmp
add
jno
inc
adc
push
fcompl
cld
nop
jmp
add
add
sub
mov
xchg
ret
add
fcompl
jg
add
loopne
cltd
mov
clc
repnz
jae
add
fwait
cld
nop
jmp
add
add
cmpsb
add
sub
and
pop
add
push
add
inc
add
add
add
adc
xor
add
xor
add
xorb
xchg
mov
mov
xchg
ret
add
add
clc
repnz
jae
int
pop
add
or
add
repnz
jae
add
lret
xchg
push
add
inc
add
add
pop
mov
pop
cmp
repnz
jae
add
jg
push
js
clc
repnz
jae
pop
xchg
add
push
xchg
add
fwait
cld
nop
jmp
add
pushf
pushf
add
add
movsl
xchg
ljmp
jmp
add
lret
ret
add
mov
clc
clc
repnz
jae
dec
add
add
add
fiadds
xchg
ret
mov
adc
cld
nop
jmp
add
aas
add
add
and
add
jmp
pop
add
cmpsb
jg
add
fwait
cld
nop
jmp
push
nop
lret
add
test
add
outsl
push
clc
repnz
jae
xor
add
nop
jbe
data16
push
push
mov
xchg
ret
add
jno
add
push
clc
repnz
jae
add
add
or
clc
repnz
jae
push
dec
add
jae
push
add
push
mov
js
add
in
pop
xor
add
add
lret
clc
repnz
jae
pop
add
jg
loop
push
mov
xchg
ret
add
lret
testb
add
push
push
mov
xchg
ret
and
add
imul
jecxz
clc
repnz
jae
jg
add
adc
repnz
jae
add
adc
add
cld
nop
jmp
add
add
addl
mov
push
mov
xchg
ret
jae
sbb
add
add
push
mov
xchg
ret
nop
and
lea
clc
repnz
jae
add
pop
add
add
add
add
and
mov
add
adcb
clc
repnz
jae
add
hlt
stos
pushl
push
mov
xchg
ret
aas
add
xlat
xor
imul
ljmp
add
and
add
push
repnz
jae
dec
daa
xlat
add
or
dec
iret
inc
add
pop
xchg
pop
add
bound
mov
mov
clc
repnz
jae
add
push
fwait
cld
nop
jmp
jno
add
add
add
test
icebp
lcall
or
add
add
push
push
fwait
cld
nop
jmp
dec
add
lret
add
pushf
add
insb
mov
clc
repnz
jae
add
pop
idivb
add
jp
inc
add
lret
add
adc
push
mov
clc
repnz
jae
add
add
add
jmp
nop
lret
lret
xchg
add
add
sahf
push
fwait
cld
nop
jmp
pushf
add
add
daa
add
clc
repnz
jae
add
es
inc
add
repnz
jae
xchg
and
mov
lea
clc
repnz
jae
add
add
xchg
add
add
xbegin
mov
add
add
xlat
add
add
repnz
jae
add
hlt
add
ljmp
subl
incl
sbb
add
repz
cld
nop
jmp
daa
pop
jno
inc
add
add
add
mov
mov
je
inc
add
test
incl
clc
repnz
jae
clc
sbb
add
jg
clc
repnz
jae
gs
and
adc
adc
out
testl
fwait
cld
nop
jmp
test
cmp
jae
jecxz
add
add
dec
add
mov
xchg
ret
inc
add
add
push
mov
xchg
ret
or
add
lock
movzwl
fwait
cld
nop
jmp
add
add
add
add
fwait
cld
nop
jmp
aas
xchg
xchg
add
aas
push
add
add
push
clc
repnz
jae
pushf
push
jae
mov
push
mov
xchg
ret
test
mov
clc
repnz
jae
add
add
jno
cmp
clc
repnz
jae
add
add
push
inc
cmp
repnz
jae
add
add
and
add
push
mov
xchg
ret
jae
xchg
cmpsb
pushf
cmp
fwait
cld
nop
jmp
aad
and
mov
fwait
cld
nop
jmp
jae
push
add
and
add
add
add
jae
add
aad
add
push
mov
xchg
ret
mov
lret
rep
clc
repnz
jae
add
add
add
jmp
nop
jmp
add
hlt
add
add
xorl
jae
push
push
test
mov
repnz
jae
mov
ret
xor
add
mov
add
shrl
repnz
jae
inc
xchg
add
mov
fwait
cld
nop
jmp
fsubl
inc
clc
repnz
jae
test
add
add
add
inc
fwait
cld
nop
jmp
gs
sbb
mov
clc
repnz
jae
or
rolb
add
pushl
clc
repnz
jae
dec
mov
in
mov
fwait
cld
nop
jmp
add
xchg
add
add
sbb
clc
repnz
jae
add
mov
cmpsb
add
add
mov
mov
clc
repnz
jae
add
push
push
mov
xchg
ret
lret
add
add
dec
cmp
repnz
jae
ret
add
add
add
dec
sub
push
mov
xchg
ret
add
pop
add
mov
rolb
mov
jae
addl
dec
testl
je
add
clc
repnz
jae
add
add
add
clc
repnz
jae
lret
add
xor
or
jae
add
xlat
xor
add
mov
clc
repnz
jae
add
push
adc
movb
cld
nop
jmp
add
and
push
clc
repnz
jae
add
add
mov
mov
dec
popa
clc
repnz
jae
cmpsb
gs
add
add
add
test
repnz
jae
pop
add
lcall
repnz
jae
add
lret
or
clc
repnz
jae
dec
fiaddl
nop
push
add
add
add
add
cmp
nop
jae
add
add
lcall
jmp
dec
add
aaa
mov
cld
nop
jmp
add
add
jno
mov
clc
repnz
jae
add
pop
incl
add
push
clc
repnz
jae
jno
clc
add
add
orb
cmpl
nop
jmp
add
hlt
mov
add
repnz
jae
add
gs
mov
jne
push
fwait
cld
nop
jmp
or
jecxz
cmpsb
jge
add
clc
repnz
jae
add
fs
push
dec
mov
push
mov
xchg
ret
pop
clc
add
ret
scas
jne
clc
repnz
jae
add
jae
and
clc
repnz
jae
add
aas
and
shrb
mov
xchg
ret
aad
hlt
jg
sti
call
clc
repnz
jae
add
add
add
clc
repnz
jae
push
add
add
add
push
mov
xchg
ret
add
push
clc
repnz
jae
add
mov
sbb
add
fwait
cld
nop
jmp
add
dec
inc
add
nop
jae
add
dec
add
out
add
push
mov
xchg
ret
xchg
adc
clc
repnz
jae
push
add
clc
repnz
jae
add
mov
add
popf
mov
fwait
cld
nop
jmp
aas
add
add
add
call
mov
cmp
ret
add
jae
add
dec
movzwl
clc
repnz
jae
add
jg
aas
xchg
xchg
add
out
inc
add
add
faddl
push
cwtl
movzwl
clc
repnz
jae
add
add
fs
jmp
aas
daa
add
and
or
mov
clc
repnz
jae
addb
ja
decl
push
mov
xchg
ret
pop
add
add
jnp
inc
sub
or
inc
add
cmpsb
pushf
add
cs
clc
repnz
jae
add
add
jae
gs
pop
clc
repnz
jae
add
xchg
jno
jae
sub
dec
cmp
repnz
jae
nop
jae
dec
dec
and
fwait
cld
nop
jmp
jno
add
pop
jno
inc
add
je
ficoms
repnz
jae
xchg
add
jecxz
clc
faddl
add
mov
fwait
cld
nop
jmp
dec
add
add
sub
jae
repnz
jae
xor
aad
or
mov
xchg
ret
add
mov
repnz
jae
add
push
lock
add
mov
push
mov
xchg
ret
add
and
add
add
add
add
repnz
jae
add
fs
add
testb
into
add
jno
jae
pop
cmp
fwait
cld
nop
jmp
add
fs
push
nop
sbb
clc
repnz
jae
add
pop
lret
jno
add
mov
repnz
jae
or
incl
hlt
add
scas
add
fwait
cld
nop
jmp
test
add
outsb
push
push
mov
xchg
ret
add
add
pop
add
fwait
cld
nop
jmp
daa
and
pop
lret
cmpsb
mov
rcl
inc
add
xchg
cmpsb
add
fsub
add
and
mov
xchg
ret
ret
mov
add
sbb
add
clc
repnz
jae
add
in
xor
push
mov
xchg
ret
aas
pop
dec
cmpsb
dec
sub
lahf
or
add
add
jg
pushf
add
push
push
mov
xchg
ret
mov
add
and
rolb
sub
cld
nop
jmp
fcoml
jae
lret
add
je
clc
repnz
jae
add
add
mov
rolb
add
add
add
mov
clc
repnz
jae
pop
ret
add
aam
mov
nop
jae
int
jno
pop
and
add
rolb
repnz
jae
hlt
add
jae
and
repnz
jae
and
add
or
repnz
jae
int
add
sbb
mov
cld
nop
jmp
push
add
add
or
repnz
jae
add
and
add
call
clc
repnz
jae
mov
or
stos
clc
repnz
jae
add
add
hlt
add
pop
mov
fwait
cld
nop
jmp
add
add
xchg
loop
dec
jne
clc
repnz
jae
call
mov
call
clc
repnz
jae
lret
add
add
xlat
inc
add
fsubrl
mov
lcall
ret
add
xlat
lret
add
sub
push
mov
xchg
ret
fs
xchg
popa
cmp
nop
jae
dec
clc
push
add
mov
adc
out
incl
aas
clc
jg
clc
repnz
jae
lock
add
jbe
add
and
fwait
cld
nop
jmp
add
add
add
lahf
pop
push
mov
xchg
ret
and
add
mov
add
hlt
ljmp
mov
clc
repnz
jae
add
add
fdivl
repnz
jae
addb
add
push
test
repnz
jae
add
sub
jbe
lret
push
fwait
cld
nop
jmp
fmull
lret
hlt
daa
int
push
clc
repnz
jae
sub
add
jbe
add
push
fwait
cld
nop
jmp
add
cmp
add
mov
clc
repnz
jae
push
sub
add
jp
jbe
clc
repnz
jae
add
mov
jmp
add
clc
push
lret
ret
add
add
test
fwait
cld
nop
jmp
add
dec
xchg
add
push
or
push
mov
xchg
ret
dec
jbe
push
test
and
repnz
jae
fs
jecxz
int
dec
mov
push
mov
xchg
ret
xchg
dec
lret
add
cld
nop
jmp
fdivl
inc
add
pop
ljmp
add
incl
add
xchg
add
push
fwait
cld
nop
jmp
add
pop
fs
mov
clc
repnz
jae
add
add
jae
xlat
add
add
add
fldl2t
mov
inc
add
lock
decl
xor
add
push
and
push
mov
xchg
ret
nop
addl
rcrb
repnz
jae
or
sbb
add
mov
clc
repnz
jae
daa
dec
pushf
aas
or
jae
add
add
adc
add
mov
clc
repnz
jae
cmpsb
add
jno
add
inc
adc
mov
xchg
ret
aas
xchg
add
fadd
add
add
enter
repnz
jae
add
fiaddl
add
add
push
clc
repnz
jae
add
mov
leave
push
mov
xchg
ret
fdivr
xchg
add
pop
jle
clc
repnz
jae
faddl
hlt
add
fisubl
fmuls
test
clc
repnz
jae
add
clc
repnz
jae
test
add
add
and
cld
nop
jmp
lret
add
add
movsb
push
mov
xchg
ret
xchg
pop
addl
dec
adc
repnz
jae
cmpsb
add
call
clc
repnz
jae
add
add
add
add
clc
repnz
jae
add
sub
clc
repnz
jae
aad
and
pop
clc
repnz
jae
add
add
add
test
mov
clc
repnz
jae
push
pop
add
add
clc
repnz
jae
cmpsb
add
mov
mov
xchg
ret
add
jecxz
add
add
clc
repnz
jae
jg
add
mov
aad
sub
clc
repnz
jae
mov
add
add
das
mov
push
mov
xchg
ret
jae
add
inc
out
add
add
xchg
push
mov
add
push
ja
add
mov
adc
lea
pop
addr16
add
clc
repnz
jae
xlat
int
jae
xchg
push
or
repnz
jae
add
xchg
add
add
add
popa
clc
repnz
jae
cmpsb
andb
jmp
popa
add
mov
xchg
ret
add
add
jns
aam
add
clc
repnz
jae
add
add
mov
adc
repnz
jae
add
push
add
repnz
jae
jecxz
add
sbb
mov
add
add
add
nop
add
add
clc
repnz
jae
clc
jg
add
add
or
sbb
repnz
jae
dec
add
add
jbe
xor
mov
repnz
jae
jg
int
cmpsb
add
push
mov
xchg
ret
jg
hlt
add
pop
jae
nop
jae
add
add
add
loop
add
add
clc
repnz
jae
xlat
add
fwait
push
push
mov
xchg
ret
add
fs
pusha
clc
repnz
jae
xor
test
add
add
or
test
repnz
jae
add
jno
lea
push
mov
xchg
ret
fcmovu
add
lea
test
repnz
jae
jbe
add
dec
add
push
mov
xchg
ret
ret
jae
dec
jae
push
push
mov
xchg
ret
add
jno
add
add
mov
push
mov
mov
mov
jne
add
add
fwait
cld
nop
jmp
add
lret
jecxz
and
fiadds
repnz
jae
jno
gs
orb
push
jmp
add
add
sub
xor
dec
pop
clc
repnz
jae
jno
jecxz
hlt
jg
add
mov
clc
repnz
jae
xchg
add
add
les
fwait
cld
nop
jmp
imulb
add
repz
cld
nop
jmp
add
add
cmpsl
cmpsb
add
enter
jae
lock
and
add
mov
clc
repnz
jae
add
add
jne
push
mov
xchg
ret
inc
xorb
push
mov
xchg
ret
add
mov
repnz
jae
xchg
add
pop
dec
xor
cmpsb
add
mov
clc
repnz
jae
add
push
add
sub
clc
repnz
jae
xchg
andb
mov
ljmp
add
push
add
clc
repnz
jae
add
add
idivb
add
jae
pop
add
fsubl
clc
repnz
jae
cmpsb
add
jbe
mov
stos
add
clc
repnz
jae
mov
mov
add
clc
repnz
jae
daa
and
fsubl
push
mov
add
sub
es
push
add
test
lea
mov
clc
repnz
jae
faddl
push
jae
test
add
xchg
movb
nop
jae
add
inc
add
add
xor
clc
repnz
jae
faddl
dec
testb
add
test
fwait
cld
nop
jmp
lahf
xlat
clc
add
dec
daa
xchg
fisubs
xor
add
clc
repnz
jae
or
clc
repnz
jae
add
pop
nop
add
mov
clc
repnz
jae
test
add
add
repnz
jae
pushf
jae
add
lret
nop
jmp
add
add
fwait
cld
nop
jmp
cmpsb
add
gs
aad
xchg
clc
repnz
jae
add
add
add
push
lret
and
push
mov
xchg
ret
cmpsb
testb
jg
fists
repnz
jae
test
mulb
push
mov
xchg
ret
add
nop
nop
add
nop
jae
jbe
push
mov
jmp
inc
and
fwait
cld
nop
jmp
sub
mov
jae
add
add
push
push
mov
xchg
ret
lret
lret
dec
add
aad
fmuls
nop
jae
xchg
or
lret
addb
and
push
mov
xchg
ret
add
jno
mov
int
add
aas
add
fimuls
jmp
jno
add
pop
jg
add
cld
nop
jmp
add
add
add
test
xor
clc
repnz
jae
test
test
pushl
add
jae
add
add
cmpsb
ljmp
rclb
cmpsb
in
inc
add
mov
sbb
xor
dec
ss
clc
repnz
jae
nop
pop
aam
xor
dec
xor
clc
repnz
jae
add
ret
dec
add
fwait
cld
nop
jmp
addl
jbe
pushf
mov
clc
repnz
jae
add
add
xchg
repnz
add
mov
xchg
ret
xlat
add
inc
and
fwait
cld
nop
jmp
mov
stos
popa
clc
repnz
jae
dec
add
jae
je
clc
repnz
jae
faddl
and
repnz
jae
jg
xchg
add
inc
cli
push
mov
out
push
add
add
add
and
cwtl
movsl
addb
and
repz
and
mov
je
mov
test
aad
lea
ret
and
mov
xor
add
mov
mov
ret
add
cltd
xor
and
add
mov
add
ret
out
dec
mov
add
inc
add
add
iret
daa
test
or
add
mov
jbe
stos
push
xchg
add
test
rdmsr
add
inc
add
into
in
mov
aam
mov
cmp
inc
add
dec
dec
aas
jmp
cltd
pop
pop
mov
add
xor
add
add
pop
inc
or
pusha
add
into
xor
add
dec
ficompl
and
dec
cmpsl
pushf
dec
rcrl
add
fmull
adc
add
test
xchg
add
add
add
test
or
add
pop
or
add
testb
xchg
aam
lret
mov
add
rolb
xchg
jl
loope
mov
push
add
add
cltd
sahf
lods
push
add
jne
add
lock
add
andl
add
push
add
mov
xchg
fstpt
aaa
jg
add
add
add
cltd
cmp
insl
loope
add
aaa
pop
sub
add
mov
add
sbb
sbb
add
add
xor
shrl
dec
aad
lods
jae
add
clc
jnp
mov
add
cmp
add
mov
and
add
movsb
add
add
push
popf
loopne
jns
add
and
adc
repz
add
jnp
pop
mov
outsl
inc
add
add
out
rolb
add
ja
sbb
add
xchg
add
add
add
mov
sbb
icebp
jb
scas
iret
or
add
xchg
inc
add
dec
xchg
test
into
inc
add
cwtl
push
add
aad
jnp
out
and
adc
or
les
movb
aad
add
cmp
sub
mov
xchg
fstpt
lret
push
add
add
vpsubd
add
xrelease
push
jg
add
mov
push
rolb
rolb
sub
add
xor
xor
xchg
enter
dec
xchg
lret
mov
xor
mov
jns
int3
aaa
mov
add
mov
push
sbb
out
dec
add
push
add
mov
and
mov
mov
push
pop
sahf
push
add
hlt
add
add
lods
add
cwtl
dec
out
nop
add
xchg
add
sbb
mov
pusha
add
mov
lds
sub
add
into
lret
pop
insl
movb
sbb
add
movsl
lret
xchg
add
fistpll
adc
add
aad
add
adc
lahf
cmpsb
add
add
cmp
cltd
js
push
add
in
add
push
test
mov
jo
lahf
nop
add
outsl
aam
jnp
cld
leave
lods
add
mov
cmpsb
add
mov
bound
mov
jb
pusha
add
add
add
dec
mov
push
mov
mov
add
add
xchg
shr
aaa
testl
je
je
push
add
xor
xor
outsl
jecxz
or
dec
rorl
insb
leave
clc
add
mov
out
testb
clc
cltd
mov
add
add
mov
add
cmpsl
les
cmp
jbe
pop
fcoml
clc
adc
xor
or
mull
add
or
cmovge
xchg
cmc
enter
add
add
add
pop
in
repnz
daa
icebp
add
negl
add
dec
xor
mov
mov
loope
lock
add
add
mov
rcl
sbb
jo
pop
maskmovq
imull
sbb
add
dec
fmuls
add
cmc
and
pop
mov
pushf
pushf
mov
or
pop
mov
add
pop
sub
data16
add
add
testb
add
int3
push
add
add
mov
dec
and
mov
xchg
add
nop
add
test
pop
jnp
sbb
add
nop
insl
test
add
add
inc
addb
or
out
or
pop
xor
and
arpl
adc
ja
rolb
repz
pop
and
mov
clc
sub
fcoms
add
add
cmp
add
add
and
jmp
jae
add
mov
mov
int
incb
mov
add
pminsw
add
insl
push
out
data16
into
xchg
scas
push
add
nop
add
mov
jp
repz
sbb
xor
movsl
popa
movsb
add
mov
stc
inc
mov
negl
fnsave
loop
cmp
add
sub
add
mov
js
cmp
mov
adc
sahf
mov
pusha
add
add
add
xchg
lock
add
sub
pop
cli
gs
mov
scas
xchg
movsl
out
inc
jmp
pusha
add
inc
add
add
scas
mov
add
test
adc
rolb
mov
pop
cmp
call
add
jmp
aas
mov
idivl
lcall
or
add
inc
add
add
repnz
icebp
push
lea
add
xchg
add
pop
and
sbb
nop
add
add
add
add
sbb
mov
add
cmp
nop
add
dec
cld
pusha
add
dec
fcom
fndisi(8087
js
stos
in
add
mov
add
lods
jb
xor
add
addb
aas
sub
add
mov
jns,pn
cmp
add
add
add
add
pop
mov
jge
dec
faddp
add
add
inc
leave
mov
push
hlt
add
add
pop
xor
hlt
add
roll
loopne
pop
sub
add
pop
add
add
add
and
add
add
mov
mov
mov
pop
or
add
in
fimull
popf
jg
inc
imul
or
outsl
je
insb
lret
mov
add
sub
mov
lods
xchg
add
add
add
and
dec
cmp
dec
aaa
stos
push
pop
or
pushf
addb
cmpsl
jle
pop
nop
add
fmul
scas
or
and
jno
rorl
and
sbb
add
data16
pop
mov
fimuls
inc
add
or
xchg
dec
les
cld
popa
mov
int3
stos
inc
jne
into
lock
rolb
lret
aaa
xchg
pusha
add
inc
xor
and
push
add
add
add
mov
jp
test
xchg
cmp
lahf
movsl
das
flds
pop
or
jbe
rolb
nop
add
add
mov
fists
mov
push
add
add
out
movsb
add
insb
sub
push
sahf
mov
mov
add
mov
adc
pop
leave
call
dec
mov
push
add
sbb
rolb
call
xchg
add
or
push
inc
pop
pop
mov
add
add
xor
mov
and
add
out
outsb
fnstcw
add
add
fstl
add
shll
add
mov
cmc
or
jecxz
add
and
push
add
iret
push
cmp
pop
mov
loop
or
bound
mov
mov
enter
xchg
add
loopne
mov
lret
gs
add
jbe
leave
fadd
add
mov
lcall
scas
or
cmp
add
mov
nop
add
add
icebp
pop
stos
lds
jnp
mov
add
inc
xchg
add
push
add
out
jns
pop
and
mov
out
inc
add
dec
adc
mov
add
adc
adc
add
aam
faddl
pop
cld
add
call
cmp
arpl
xor
mov
cmp
sti
inc
add
add
pop
lcall
mov
sub
test
cli
loope
mov
add
outsb
inc
add
jl
adc
int
mov
add
xchg
negl
mov
or
add
cmpl
or
add
add
aam
mov
mov
jp
mov
add
das
push
mov
push
add
add
adc
ret
pop
in
sbb
loop
push
or
stos
or
mov
pop
push
add
jne
nop
add
addb
popa
pop
sbb
or
mov
xor
dec
inc
add
mov
rcrl
xchg
fstpt
add
mov
pop
sbb
pushf
pop
popa
cs
add
add
testb
mov
into
sahf
mov
xor
fimull
add
sub
xchg
sti
or
add
fsubr
xor
addb
lcall
xchg
add
push
add
add
xor
aaa
push
add
xor
mov
add
out
mov
daa
pushf
jecxz
js
adc
push
add
sbb
push
add
add
pushf
pop
adcl
xor
add
movb
jle
add
sbb
or
xchg
add
add
add
xchg
adc
icebp
mov
lret
cmp
test
aad
mov
mov
add
pusha
add
push
add
xor
mov
and
mov
or
adc
xchg
add
mov
push
add
add
dec
mov
mov
xchg
inc
add
pop
rep
mov
or
dec
into
sahf
pop
aad
mov
mov
mov
cmp
add
xor
hlt
add
fisubrl
add
lods
fcmovnb
lock
add
add
mov
roll
add
imul
or
add
add
add
sub
arpl
addb
add
test
xor
pop
loopne
test
cwtl
movsl
push
mov
arpl
js
sub
jge
clc
loop
mov
dec
xchg
mov
movb
xchg
add
sarl
ret
hlt
add
xchg
mov
ljmp
cmp
fwait
addb
dec
dec
pop
mov
pop
repnz
popa
add
mov
mov
xchg
xchg
add
xor
and
mov
add
add
mov
add
add
add
add
add
cs
push
sub
push
or
mov
call
flds
sbb
shl
add
pop
push
add
nop
add
cwtl
cmp
bound
mov
mov
ret
add
dec
or
add
repnz
add
xchg
add
rcrl
cmp
adc
ret
mov
inc
jmp
in
cmp
add
xlat
enter
add
stos
sub
add
testl
add
addb
or
je
mov
arpl
out
inc
add
movsl
mov
cmp
add
testb
add
xchg
add
nop
add
or
add
cmp
jp
add
add
add
das
rcrl
mov
push
sub
dec
imul
add
adc
add
pusha
add
add
cld
movsb
add
add
es
add
cmp
add
jge
cmc
mov
addb
add
into
gs
dec
mov
add
add
inc
add
or
jmp
add
jecxz
mov
roll
add
add
add
add
dec
push
add
and
mov
mov
insl
aad
mov
cmp
add
inc
add
movsl
inc
push
jg
add
add
test
pop
mov
popa
jnp
add
add
jl
add
add
cmp
add
add
pop
xchg
add
add
loop
adc
mov
mov
ljmp
int3
cltd
das
adc
add
pop
inc
add
add
nop
add
out
cmc
jg
data16
push
add
add
push
add
jmp
push
and
leave
sbb
add
add
add
mov
rolb
addb
and
mov
add
mov
insb
psubsw
mov
aam
mov
add
add
mov
int3
push
add
add
sahf
mov
add
add
add
push
cltd
shld
inc
mov
je
dec
cwtl
xchg
lahf
loopne
in
loope
fdivrp
sbb
add
jmp
add
mov
fistpl
repnz
outsl
dec
or
add
ljmp
jno
pop
push
add
mov
aas
rolb
cmp
cltd
mov
mov
cmp
jnp
cltd
lea
mov
mov
arpl
add
mov
fldl
xor
dec
pop
lahf
hlt
add
sub
adc
jp
clc
insb
sbb
mov
js
stos
add
dec
mov
mov
push
or
bound
mov
jmp
inc
mov
jmp
or
fisttpl
jnp
mov
adc
std
inc
dec
testb
add
sbb
xor
sub
add
xchg
add
imul
test
lods
adc
ja
daa
adc
add
mov
stc
jae
mov
hlt
add
pop
adc
add
out
fists
push
add
add
add
inc
add
mov
gs
add
add
mov
adc
call
outsl
mov
les
js
add
mov
add
lds
add
jnp
subl
scas
je
aaa
mull
add
imul
mov
add
add
add
add
add
add
add
popa
nop
add
mov
out
adc
test
mov
xor
add
lods
mov
sbb
mov
out
mov
add
lds
addb
add
mov
jnp
popf
pop
fildl
xor
adc
push
in
adc
dec
xchg
add
add
lahf
cmpsb
add
lods
push
mov
mov
add
push
sbb
add
mov
movsb
add
ret
cmp
pop
cmp
push
lods
mov
pop
and
add
or
icebp
adc
mov
add
adc
add
mov
add
dec
xchg
add
lock
mov
xchg
add
cmc
cmpsl
mov
add
mov
sub
add
add
xchg
pop
xor
movb
sbb
and
ds
add
jge,pt
add
mov
add
adc
out
js
mov
mov
add
sbb
inc
add
add
aam
add
mov
addb
add
dec
jae
add
xchg
loopne
rolb
add
dec
push
xor
add
add
enter
movb
dec
jge
push
add
add
push
add
adc
loop
mov
add
dec
fmuls
aad
lods
aam
push
add
jae
repz
repnz
add
xchg
sbb
sbb
add
mov
add
xchg
and
mov
add
push
add
push
add
dec
cmp
xchg
imul
cmp
popa
or
pop
xor
mov
and
sbb
mov
cmc
insb
pop
xlat
loop
data16
dec
fdivp
add
add
xor
pop
rolb
out
scas
and
mov
dec
or
in
incb
inc
add
dec
sub
xor
add
fidivs
cmp
add
jmp
outsl
jl
pop
iret
ret
movb
mov
adc
dec
cmpsb
add
add
add
pop
test
arpl
pop
push
add
mov
jmp
pop
dec
into
js
insl
xchg
add
add
fdivl
or
dec
push
and
mov
add
push
push
add
add
outsb
sbb
add
fists
cmpsl
ljmp
dec
push
test
pop
xchg
add
add
ret
mov
fisubl
mov
loopne
icebp
add
add
sub
sbb
dec
dec
addb
adc
faddl
sbb
movsl
lea
into
sbb
add
cmp
cld
stos
lds
in
jmp
jns
or
cli
mov
pushl
mov
mov
cmp
xchg
add
xchg
add
mov
mov
gs
add
mov
or
add
dec
scas
inc
add
dec
loope,pn
cltd
nop
add
add
add
sub
imul
push
add
pushf
sbb
add
xchg
dec
sbb
insb
ljmp
cwtl
adc
mov
test
loope
add
xor
add
in
and
mov
jne
jbe
adc
mov
add
mov
add
xchg
add
add
xchg
imul
add
gs
xchg
int3
test
add
add
imul
fisttpl
hlt
add
xor
addb
int
xchg
add
sub
mov
push
add
jae
add
popa
mov
add
xchg
enter
insb
cs
add
add
inc
ret
dec
je
insl
or
lds
xor
or
add
mov
push
add
add
cmp
mov
pop
out
xor
add
push
mov
add
mov
test
aad
pop
rolb
sbb
sub
cmpsl
testb
add
add
not
adc
int
add
add
sbb
pop
add
dec
push
add
inc
lahf
xchg
dec
lret
popl
push
add
cmp
add
xchg
add
iret
insl
mov
mov
jbe
inc
hlt
add
stc
sub
inc
add
add
add
jmp
mov
ret
lods
shll
add
add
jo
movsb
add
adc
ret
loopne
sbb
mov
icebp
jbe
sub
or
mov
jno
lods
jecxz
sub
mov
mov
test
xchg
add
popl
lcall
add
in
adc
jp
ds
jae
loope
add
and
inc
loope
jo
sbb
cmp
fs
add
add
mov
add
inc
add
popf
mov
push
add
add
add
add
and
mov
testb
mov
add
add
rolb
dec
push
add
add
movsl
mov
data16
ds
sbb
lock
add
scas
mov
lret
test
int3
scas
jno
inc
xlat
mov
lea
les
push
xor
pop
stos
cmp
add
sbb
and
mov
pop
leave
lahf
jb
sub
jno
mov
add
data16
rolb
adc
adc
xchg
ljmp
aaa
ret
mov
iret
sbb
mov
mov
add
add
sbb
cmp
add
cmc
cmc
mov
jnp
add
mov
mov
mov
pushf
mov
add
sbb
add
popf
aad
mov
das
scas
les
add
mov
add
out
je
rolb
jnp
shll
ret
inc
add
inc
xor
add
mov
popf
push
xchg
add
sbb
add
inc
mov
add
mov
add
push
add
add
les
aam
xchg
add
insl
adc
jns
cmp
aad
add
add
xor
cli
insb
mov
pop
dec
insb
push
add
adc
inc
pop
std
fmuls
add
adc
add
outsl
icebp
jg
or
aad
lods
les
scas
call
enter
add
adc
icebp
sbb
shll
mov
cmpsl
xor
out
repz
outsb
mov
lret
add
add
add
cmp
rolb
aad
add
and
adc
les
dec
sub
add
add
add
stos
xchg
add
xor
lret
mov
xor
mov
add
pop
push
dec
nop
std
in
cmp
add
pop
mov
mov
xchg
add
add
add
add
add
add
ret
rorl
add
ljmp
xor
sarl
addb
test
aad
outsl
and
jecxz
inc
add
jg
push
sub
jecxz
add
add
loopne
mov
inc
dec
scas
and
mov
add
add
add
ljmp
mov
and
add
das
xorl
add
incl
add
add
add
add
pop
push
bound
mov
scas
xchg
xor
mov
std
mov
aam
cmp
sub
jb
testb
xor
pushf
mov
pop
adc
add
mov
pop
lea
adc
xchg
imul
jb
cmp
dec
in
xor
add
negl
rolb
xchg
add
sub
push
jle
lahf
mov
cli
add
add
xchg
add
pop
add
rorl
cmpsb
add
je
sub
push
add
sbb
add
pop
mov
bound
mov
mov
push
add
rolb
sub
add
das
pop
addl
push
jge
popf
nop
add
or
or
lods
mov
add
sti
scas
fwait
push
add
and
pop
pop
cmpxchg
cli
in
dec
push
mov
daa
out
pop
test
xchg
add
add
or
add
stos
pop
jl
dec
outsb
jae
mov
pop
movl
add
add
mov
add
aas
add
add
or
ret
add
mov
add
addb
out
adc
stc
mov
rolb
add
add
bound
mov
add
cli
fsubr
mov
jnp
adc
loop
ds
sbb
add
add
fisubrl
xor
out
movsl
pop
inc
add
add
cmc
lcall
incb
sbb
jge
mov
rolb
lds
fmuls
les
xchg
add
and
mov
sti
ficoml
arpl
cmp
mov
mov
fsubrl
lret
sbb
testb
into
adc
add
add
add
mov
jnp
add
xlat
ds
sub
pop
push
add
add
mov
mov
add
xor
stos
popf
in
cmp
add
movb
add
add
add
add
push
inc
loope
in
outsb
and
xor
cltd
mov
sub
add
add
xchg
add
in
mov
les
sahf
mov
adc
iret
ffree
jne
add
adc
inc
into
mov
mov
xor
add
fxch
hlt
add
add
inc
add
pop
rolb
add
add
add
xor
into
jl
add
mov
in
mov
xor
add
add
add
mov
push
add
xchg
add
aas
add
cmp
add
mov
stos
cwtl
bound
mov
call
xor
add
adc
ss
scas
adc
add
int3
pop
inc
add
loop
addb
leave
sbb
push
push
add
icebp
add
mov
ret
push
add
mov
push
add
enter
push
jns
pushf
or
adc
inc
add
add
pop
pop
cwtl
js
in
jns
push
add
pop
jno
fadds
mov
aam
cs
add
add
push
test
cmp
cmpsl
std
outsl
jb
flds
add
dec
push
cld
adc
add
int
pop
xor
adc
push
mov
cld
dec
mov
adc
and
mov
jns
inc
add
lret
jmp
jmp
jbe
inc
add
mov
pop
fdivrs
pop
pusha
add
rolb
push
mov
pop
xchg
add
push
add
adc
inc
add
xchg
add
add
lods
add
dec
ficoms
add
add
xor
mov
cld
and
fildll
test
and
xchg
inc
add
mov
aaa
add
and
add
movsb
add
add
or
add
sub
add
iret
leave
inc
xchg
add
xchg
and
add
repnz
js
jno
add
jne
cmp
int3
rolb
xor
add
mov
add
repnz
hlt
add
sahf
int
add
mov
dec
add
adc
dec
dec
mov
out
xchg
dec
fcomi
cmp
cld
cld
dec
addr16
add
nop
add
sti
adc
or
jmp
dec
lods
add
add
push
add
add
movl
loopne
xor
pop
push
or
rolb
jg
jp
ss
push
and
loopne
mov
add
movb
xlat
aaa
movsl
loopne
xchg
jns
mov
in
add
mov
lret
jmp
int3
cmpl
mov
xchg
or
lods
mov
lret
fwait
mov
ds
add
add
jle
add
add
dec
push
add
push
add
add
add
popf
cmpsb
add
add
jecxz
sub
dec
scas
icebp
ret
add
dec
loope
inc
outsb
adc
leave
addb
cmc
aam
ja
add
inc
les
jns
add
call
enter
movsb
add
add
rolb
mov
xor
push
add
mov
popf
cltd
aaa
push
scas
rolb
mov
jp
movb
xchg
loopne
jge
add
mov
stos
movsb
add
and
pop
push
add
or
movsb
add
cmp
lret
test
cltd
fadd
add
add
add
mov
add
mov
xor
add
add
andl
in
mov
mov
inc
je
sbb
fnstsw
push
add
hlt
add
pop
faddp
add
dec
or
outsb
clc
daa
dec
repnz
mov
repz
add
sbb
cmpsl
mov
jae
xchg
add
mov
jbe
movsl
push
push
add
and
cld
stos
rolb
movsb
add
add
mov
add
add
add
xchg
fdivs
xor
xchg
add
fcomps
push
hlt
add
push
add
and
mov
mov
add
add
add
mov
pop
inc
cs
or
mov
pop
and
sbb
xchg
addb
add
mov
jge
add
add
add
add
mov
lret
inc
arpl
lods
adc
iret
rolb
arpl
daa
xchg
loopne
rolb
inc
in
add
pop
data16
imul
sub
ret
jl
add
mov
add
push
xchg
pop
addb
add
mov
shll
xlat
xor
add
add
add
add
jmp
add
divl
jge
std
rolb
mov
das
and
jnp
push
and
mov
loop
repz
mov
ljmp
or
add
sub
add
xor
fwait
daa
mov
mov
mov
add
sbb
emms
adc
jne
ret
loopne
jne
cmpsb
add
jl
imul
push
add
add
in
sub
pop
mov
mov
ret
and
add
mov
fstps
arpl
add
mov
lods
adc
lods
aaa
add
and
mov
cli
ds
dec
outsl
dec
sub
sub
add
add
lock
push
jp
add
add
mov
cwtl
out
popf
popa
je
rol
ja
jp
add
mov
in
addr16
add
lods
xlat
sbb
add
inc
add
sahf
fwait
push
mov
movsl
bound
mov
xchg
test
dec
push
jmp
push
jb
mov
pushf
xor
je
in
popl
mov
add
test
add
jo
mov
les
out
addb
pop
sub
pop
out
je
call
fnstcw
xor
add
das
daa
cmpsl
fadds
add
xchg
add
add
pop
and
pop
sub
add
pop
push
arpl
jne
add
jle
mov
xchg
popa
lea
scas
push
insb
adc
push
add
addb
iret
rolb
push
add
movsb
add
pop
sub
mov
cmp
jmp
mov
fimuls
xor
cmc
dec
mov
jp
sbb
out
dec
out
xchg
lock
mov
add
jnp
add
test
add
jge
xor
add
and
mov
test
testb
add
xlat
loope
and
push
addb
lcall
xor
cli
add
dec
xchg
in
add
jp
sti
daa
or
add
test
pop
xor
out
pusha
add
test
sbb
add
add
jl
pop
cmpsb
add
add
jge
arpl
add
std
jae
jnp
les
cmpsl
dec
dec
push
lods
or
cmp
jno
add
dec
mov
fwait
data16
pop
je
mov
lret
aad
add
scas
mov
inc
fdivrs
xor
dec
ds
aam
mov
addb
dec
call
add
add
inc
add
ret
leave
xchg
mov
add
inc
add
addb
add
pop
pop
addb
fldz
mov
pusha
add
inc
scas
jp
add
mov
xor
mov
add
fscale
icebp
xchg
inc
mov
aam
dec
movsl
arpl
mov
flds
es
jbe
and
mov
add
add
and
mov
and
mov
icebp
repz
add
sti
inc
add
add
add
repnz
cmp
pop
cmc
mov
cmpsb
add
js
add
outsb
sub
iret
xlat
bound
mov
xor
fcomip
add
add
mov
dec
movb
mov
inc
xor
test
movb
add
add
popa
mov
add
jb
jbe
dec
orl
mov
jmp
add
push
add
push
add
repz
add
add
add
int3
mov
pushf
adc
and
lds
mov
mov
into
adc
leave
mov
jne
bound
mov
cmp
sbb
testb
hlt
add
add
add
add
mov
add
dec
and
mov
push
add
mov
or
add
xchg
fists
xchg
rolb
pop
sbb
add
jno
cmpsb
add
xor
fldenv
into
inc
add
loop
xor
adc
pop
cmp
into
mov
push
cmpsb
add
add
xchg
add
pop
mov
add
add
add
loop
scas
out
nop
add
mov
add
add
out
pushf
repz
mov
add
mov
add
aaa
add
lret
popa
pop
jle
xor
daa
test
xor
jecxz
into
shll
jne
add
add
lods
aad
repz
rolb
mov
movb
mov
dec
addb
cltd
sbb
add
add
dec
out
sbb
mov
add
add
push
push
mov
loop
push
add
add
arpl
sub
inc
test
nop/reserved
jnp
pushf
and
xor
or
repz
mov
push
cli
nop
add
cli
cltd
shll
hlt
add
xor
add
cld
jno
shr
ja
add
aaa
inc
fwait
sbb
sti
ja
push
add
scas
dec
and
xchg
movsb
add
mov
out
iret
and
or
push
and
bound
mov
add
lret
das
xchg
jne
add
in
and
mov
clc
in
cmp
ds
repz
dec
aas
pop
adc
add
testb
add
adc
andl
test
lock
nop
add
rolb
jmp
add
fistpl
add
mov
std
sub
add
mov
sbb
adc
daa
dec
jnp
mov
lods
and
add
loopne
movb
pop
xchg
and
stos
inc
dec
movsl
mov
pop
test
add
add
push
add
add
add
test
lret
dec
add
test
rolb
int
pop
loop
dec
mov
cmp
mov
lea
inc
pushf
mov
in
add
lods
rolb
in
movsb
add
cmp
add
add
ja
imul
outsb
cld
in
lods
hlt
add
xchg
out
sub
dec
mov
add
add
or
push
add
add
sub
add
mov
push
xor
adc
stos
mov
mov
cwtl
dec
pop
mov
js
decb
lret
dec
pop
mov
xchg
add
push
add
add
add
xchg
push
add
and
mov
push
dec
sbb
jp
arpl
pop
ds
out
popf
sub
dec
adc
add
or
shr
testb
xchg
add
lcall
testb
add
jns
daa
jecxz
push
or
add
mov
rolb
addb
xor
fwait
sbb
inc
cmp
add
mov
cmp
add
add
add
add
rcll
jmp
inc
add
push
ja
jno
mov
cmpsl
cmpsb
add
lock
add
rolb
add
mov
outsl
mov
std
fists
push
add
cld
xchg
test
cli
movb
mov
test
movb
mov
inc
add
xchg
cmp
ja
add
add
cltd
mov
pushl
add
repnz
addb
push
add
lret
xchg
mov
add
xlat
xchg
clc
addb
add
and
mov
jo
push
mov
add
mov
inc
insb
add
dec
cmpsb
add
pop
fcoml
add
add
mov
add
add
sub
add
hlt
add
push
add
add
cltd
sub
inc
ret
push
pop
cmc
pop
out
push
add
add
mov
clc
outsl
imul
add
adc
outsb
pmullw
in
add
rcrl
mov
mov
test
inc
mov
rolb
sbb
out
dec
rolb
inc
xor
sub
mov
add
repnz
cmp
std
lahf
add
pop
movsl
add
lahf
stos
push
add
add
add
shll
out
and
popa
lock
mov
add
mov
mov
jl
xlat
pop
fstpt
cmp
rcll
add
mov
in
xor
std
rolb
add
mov
mov
iret
adc
ss
clc
jmp
cmc
xchg
outsb
data16
add
movsl
outsb
or
faddl
sbb
sbb
sbb
add
push
rorl
mov
loop
pop
push
add
dec
pop
das
sbb
rolb
mov
sub
add
inc
add
sub
xchg
add
mul
add
add
mov
cltd
faddl
sbb
add
iret
sub
mov
add
sub
mov
rorl
xor
jle
add
int3
sbb
add
popf
stc
adc
clc
xlat
daa
out
pop
insl
xchg
mov
dec
sbb
xchg
push
dec
push
add
cs
mov
add
inc
add
add
or
add
fldcw
add
add
xor
out
addb
add
mov
shll
add
scas
data16
fisubrs
add
or
fwait
xchg
sbb
movsb
add
pusha
add
push
stos
inc
mov
int
add
movb
std
in
ljmp
ds
and
mov
les
sti
in
addl
loop
push
add
mov
dec
dec
sub
iret
shll
lods
lcall
cmp
jg
dec
sub
lahf
adc
bound
mov
xchg
adc
movsl
js
insl
or
add
mov
add
testb
add
daa
ljmp
pop
imul
mov
and
mov
add
xchg
add
aaa
fisttps
xchg
inc
xor
jae
pop
sub
add
repz
add
add
add
ja
cmp
lds
cs
add
add
jl
push
imul
push
add
dec
outsb
adc
out
jo
mov
mov
add
test
xor
add
push
add
jae
mov
sub
into
insl
push
sbb
mov
xchg
add
xchg
iret
fsincos
popl
add
adc
das
stos
sub
in
cld
in
add
or
and
lcall
dec
fdiv
test
loopne
in
pop
mov
fidivrl
add
or
bound
mov
mov
dec
inc
add
dec
scas
sub
pop
stc
push
mov
je
test
cmp
and
mov
xchg
add
out
out
aas
add
sbb
mov
outsb
ljmp
add
xor
xchg
sbb
ja
jecxz
add
mov
int
data16
adc
pop
add
addb
dec
aaa
enter
and
mov
add
add
cmp
or
int
or
add
xor
test
add
out
mov
sbb
cmp
xor
scas
call
add
add
add
and
sbb
add
xchg
mov
xor
jmp
add
icebp
lret
push
or
call
inc
pop
call
mov
pop
push
add
rolb
enter
push
add
xor
cmc
mov
inc
mov
push
fdivl
adc
and
movsl
fiaddl
aad
outsl
sahf
pushf
jns
out
shll
xor
or
cwtl
mov
xchg
add
iret
fwait
stos
push
add
mov
add
repnz
add
jmp
add
xor
sub
loop
stos
ss
je
test
mov
jl
ja
cmpsb
add
push
xchg
push
sbb
pop
dec
stc
out
aad
add
add
add
mov
fsts
ja
add
enter
add
ljmp
inc
inc
dec
mov
jbe
cmp
xor
add
cmp
leave
xchg
shrl
inc
add
ljmp
addl
or
dec
dec
fnstenv
add
adc
shll
pop
cmp
add
cltd
incb
xor
cs
add
push
fimuls
add
push
add
add
aad
cmpsl
rolb
dec
inc
or
roll
push
add
and
adc
je
jb
or
mov
add
int
mov
in
scas
jns
sub
pop
push
ljmp
fwait
out
or
add
mov
mov
outsl
xchg
in
cmp
mov
add
call
mov
add
add
movb
add
cmp
nop
add
add
or
add
add
add
mov
add
add
andl
xchg
aad
iret
mov
mov
mov
ljmp
mov
popa
and
mov
jno
add
add
cs
lret
pop
lahf
bound
mov
rolb
ds
pop
jmp
pusha
add
add
add
mov
nop
add
cmc
call
pusha
add
lret
aas
adc
jg
xor
jne
repnz
jecxz
add
mov
add
repz
arpl
mov
pop
sbb
sub
add
pop
das
pushf
cmpsb
add
nop
add
test
sub
xor
push
add
inc
jne
add
andl
sbb
pop
in
dec
or
dec
push
fnstsw
add
add
dec
popf
test
add
adc
das
jo
loope
outsl
pop
ret
or
fsub
lahf
mov
scas
shll
loop
lcall
pop
hlt
add
andps
add
lahf
movsl
push
sti
sub
cmc
pop
scas
rolb
xchg
add
add
inc
dec
and
mov
bound
mov
mov
jecxz
pop
pusha
add
ret
mov
add
pop
push
inc
add
add
leave
add
mov
dec
movsl
clc
out
pusha
add
add
decl
out
pushl
cmp
add
add
sbb
add
mov
pop
inc
add
adc
imul
sbbl
cmpsl
jno
add
add
pop
mov
repnz
mov
sbb
add
jl
lods
ficomps
in
inc
imul
in
addr16
add
outsl
xchg
add
loopne
rolb
jmp
movb
jmp
add
leave
sub
in
rcll
mov
push
add
inc
dec
mov
nop
add
testb
ret
xchg
jp
lds
jge
add
inc
jecxz
fnstenv
xor
data16
add
gs
imul
mov
jns
pop
mov
add
xor
sub
sub
rolb
lock
xor
mov
add
add
add
fstl
add
pushf
jne
movsl
test
sti
cli
movsb
add
add
rolb
insb
fisttpl
mov
add
add
mov
ret
mov
xlat
dec
mov
mov
add
add
add
add
pushf
push
mov
adc
loope
add
sbb
inc
aad
ljmp
adc
flds
adc
out
dec
jge
sub
stos
in
adc
fnsetpm(287
add
add
lock
out
cmp
push
cmpsb
add
add
add
sub
add
pop
imul
add
mov
fbld
cltd
insb
xor
std
jo
jb
call
jb
xchg
add
xchg
popf
fwait
fwait
iret
out
push
add
add
add
pop
aad
or
iret
mov
add
xor
mov
pop
push
add
pusha
add
push
or
dec
pusha
add
fldl
incb
add
and
imul
mov
dec
dec
push
add
sub
add
add
movb
jmp
add
testb
mov
lret
lret
rolb
add
add
xchg
add
sbb
mov
add
ja
adc
mov
inc
add
add
into
stos
add
add
mov
add
std
dec
xchg
adc
mov
cmp
test
jg
cld
pop
shll
movb
mov
vmwrite
rep
outsl
fwait
push
jle
inc
arpl
sbb
in
fstpl
pop
mov
scas
jmp
test
dec
enter
add
add
mov
add
add
adc
and
jb
mov
mov
faddl
mov
rolb
inc
mov
cmp
ret
add
sahf
dec
xrelease
mov
add
add
add
push
add
test
aas
mov
add
mov
dec
pop
dec
mov
add
cmp
rolb
add
outsb
lock
jnp
and
add
add
gs
addb
aas
mov
clc
dec
jle
add
add
xor
sbb
add
dec
dec
je
jp
add
rol
add
sub
push
pop
loope
add
add
mov
add
mov
data16
out
lret
add
insb
jnp
mov
in
jae
gs
negl
add
cmp
std
add
mov
insb
repnz
add
cwtl
data16
add
add
add
cwtl
mov
cld
jno
xor
mov
test
addb
pop
inc
rep
cs
mov
test
loopne
adc
xchg
add
pop
add
add
and
push
push
test
add
jl
inc
add
dec
mov
scas
imul
add
add
stos
in
push
cmp
adc
adc
stos
in
jle
lcall
cs
add
imul
add
add
pop
cmp
add
add
sahf
adc
dec
mov
mov
xchg
add
add
cli
in
outsl
and
lcall
and
mov
jl
xor
add
rolb
dec
lea
cmp
and
mov
addb
add
fiadds
add
call
jne
cmpsl
xchg
add
push
push
movsb
add
les
xor
add
push
mov
adc
adc
inc
add
and
xlat
jno
push
add
mov
inc
add
lds
pop
out
mov
pop
repz
inc
dec
lcall
icebp
addb
add
addb
or
rcrl
inc
add
sub
test
jne
scas
and
ljmp
mov
orl
push
jbe
cmp
add
add
jbe
rorl
xchg
push
imul
mov
add
xor
lcall
dec
sub
add
push
add
cmpsl
adc
inc
add
in
add
fcmovnb
inc
add
inc
add
cmp
into
ja
xchg
lock
add
std
jae
push
fcompl
add
add
add
lahf
std
andl
or
das
and
mov
add
inc
pop
adc
jb
or
addb
leave
test
push
in
add
mov
cli
adc
add
mov
rolb
xchg
fcoml
ja
add
rorl
add
pop
lret
addb
add
ficoml
or
xor
add
testb
leave
mov
add
add
add
ljmp
push
add
add
lret
add
xor
add
add
lea
jge
add
add
mov
add
add
xchg
add
dec
add
mov
dec
movsb
add
notl
das
stos
add
cmp
push
or
and
add
cmp
xchg
aad
adc
add
push
movb
add
add
mov
add
mov
in
lret
loop
add
mov
lret
rolb
pop
fldlg2
push
mov
insl
lods
aam
mov
fwait
loopne
sbb
add
mov
in
icebp
addl
push
aad
movb
cld
xor
add
lock
adc
jnp
adc
inc
add
fnstcw
cld
cltd
mov
mov
sbb
addb
add
addr16
sub
insl
sbb
lcall
add
and
cs
push
scas
enter
in
enter
les
lret
add
rolb
add
pusha
add
sub
add
inc
cltd
add
and
inc
add
jo
test
inc
add
pop
mull
mov
add
add
jb
mov
add
add
dec
dec
aas
jae
add
jecxz
popf
dec
xchg
add
je
sbb
sbb
push
adc
push
mov
repz
jl
add
add
ljmp
dec
xchg
add
cmp
add
add
add
add
and
pop
mov
xor
xchg
add
dec
dec
jne
sub
add
cmp
jb
sub
inc
add
add
or
jecxz
add
xchg
add
lods
rolb
cwtl
dec
leave
jnp
add
test
js
add
dec
sub
inc
add
adc
add
loopne
out
mov
add
mov
add
pushl
test
fisttps
jae
add
add
out
or
cwtl
push
add
add
in
sub
adc
scas
jmp
out
testb
add
add
cmp
add
push
cmp
fsts
and
in
add
push
add
push
stos
dec
push
add
xchg
add
lods
imul
add
add
ret
ret
mov
push
add
add
arpl
mov
outsb
cmp
testb
hlt
add
add
or
sub
enter
mov
cld
imul
add
mov
add
aad
add
jg
add
imul
std
in
dec
xor
adc
xor
cs
popa
cmpsl
lods
stc
bound
mov
mov
leave
dec
enter
jle
add
xchg
add
jns
add
mov
ss
jp
fcmovu
pop
push
pop
das
add
add
outsl
movb
add
add
pop
xchg
xlat
xchg
cs
add
add
cs
xor
in
mov
fnstenv
sbb
ja
xchg
add
add
fmull
xchg
add
inc
xchg
jbe
cmp
add
stos
xchg
add
mov
add
add
mov
icebp
adc
sub
shll
add
loopne
stos
sbb
push
ret
cmp
add
add
xchg
outsl
sahf
dec
das
dec
push
loop
popa
mov
inc
lret
mov
mov
call
hlt
add
push
add
cmp
fistpll
or
addb
popf
push
and
xor
push
lods
add
mov
sub
cs
hlt
add
std
pop
popf
movb
lret
xor
jne
pop
repz
out
adc
push
add
test
shrl
add
dec
sub
jecxz
mov
add
mov
cmp
add
add
cmpsl
pop
test
addr16
pop
mov
addb
cli
mov
insl
test
push
add
mov
testb
push
add
sub
or
jb
sbb
inc
add
sub
add
add
dec
push
add
add
inc
add
in
stc
jns
add
add
add
sbb
pop
js
stos
xchg
and
int
add
xchg
push
jb
lods
enter
lret
adc
lds
pop
push
cmp
test
adc
jecxz
xchg
add
mov
add
add
push
add
sbb
jl
popf
xor
ret
xchg
sbb
push
add
add
xchg
add
xlat
data16
xchg
ljmp
mov
sti
and
add
daa
xchg
add
das
sub
insl
dec
pop
jle
and
rolb
fmuls
fdiv
aas
mov
cmp
rolb
xchg
fnstsw
add
add
xchg
sbb
xchg
inc
add
and
fdivs
scas
xchg
lret
mov
outsl
sbb
push
xor
add
add
test
loopne
inc
mov
sbb
push
add
iret
cld
jp
xor
sub
out
pop
sbb
mov
inc
aaa
data16
icebp
mov
adc
pop
xchg
add
xchg
add
add
add
sub
maskmovq
testl
rolb
inc
add
mov
push
add
xor
das
arpl
mov
add
add
repnz
add
add
int3
cmp
jb
aas
xlat
jge
add
add
mov
jb
push
data16
gs
xor
dec
das
mov
add
sub
cmp
add
jge
add
add
add
cltd
adc
add
jne
adc
adc
jmp
xchg
add
add
lret
pop
push
jo
xor
dec
movsb
add
loopne
bound
mov
call
add
sbb
add
add
repz
add
mov
add
aaa
push
add
add
add
xchg
mov
lahf
stc
dec
fcmovu
loope
add
popa
and
add
push
mov
add
jnp
add
fnstenv
xchg
dec
les
jl
testb
add
aam
int3
test
add
aas
lods
add
pop
lret
cs
add
bound
mov
sbb
mov
push
add
test
add
arpl
add
std
mov
push
aad
xor
sub
mov
add
cmpsl
inc
add
sti
add
push
add
or
pushf
rolb
in
cld
dec
and
add
lahf
sahf
jbe
mov
addr16
add
adc
pop
jle
out
add
push
cmp
movsb
add
lods
add
cmp
pop
leave
xchg
shl
cwtl
jbe
xor
mov
push
cwtl
adc
test
xchg
mov
sub
test
aas
lcall
add
add
mov
mov
jl
sub
stos
lahf
add
lcall
jo
insl
ds
rolb
addb
lret
jmp
mov
popa
movsb
add
repz
cmp
push
and
mov
pop
mov
out
rolb
or
adc
enter
jbe
ret
adc
add
add
mov
xor
popf
iret
pushf
scas
push
add
cmp
add
xor
test
ret
cmp
mov
mov
cld
pop
les
popa
push
add
add
push
add
es
sti
lds
xor
push
pushf
stc
xor
xor
clc
mov
enter
in
repz
xchg
add
fsubr
pop
sbb
ret
add
mov
sahf
pop
aad
add
add
add
mov
fidivl
js
mov
cmpsb
add
add
loopne
add
and
adc
les
xlat
call
adc
lcall
add
fsubs
cwtl
mov
into
mov
add
xor
sub
jae
mov
jecxz
bound
mov
shrl
fmul
mov
add
push
addb
xchg
sbb
pop
out
xor
mov
add
lods
push
add
insl
cltd
gs
push
loopne
jb
jmp
pop
push
mov
gs
and
frndint
xor
sbb
sub
aaa
dec
jle
loop
add
addb
push
testl
xchg
rolb
add
jle
xor
add
or
jne
and
std
out
mov
cmp
ret
sub
inc
add
mov
pop
insl
pushf
adc
stc
or
pop
mov
adc
push
add
xchg
add
push
scas
cltd
sub
add
sbb
in
fmul
xchg
add
cs
add
dec
mov
sbb
add
sbb
add
ljmp
pop
xchg
add
cmp
leave
inc
sbbl
mov
sahf
push
lds
mov
mov
int3
push
add
jp
ret
stc
push
sbb
pop
add
dec
nop
add
test
das
sub
out
bound
mov
fidivl
push
cmp
push
inc
xchg
adc
xchg
mov
add
hlt
add
sub
clc
pop
xor
dec
addb
add
sub
hlt
add
out
adc
cwtl
mov
ret
int
and
xchg
in
clc
jl
add
mov
mov
and
mov
add
inc
add
pusha
add
ret
imul
mov
cli
or
xchg
call
jb
mov
sub
mov
lret
lods
pop
cmc
adc
jne
outsb
test
adc
mov
mov
aam
jns
dec
push
xchg
adc
and
arpl
enter
cli
adc
add
add
add
hlt
add
push
and
mov
mov
add
mov
out
loope
mov
cmpsl
add
rolb
test
xchg
add
stos
push
add
add
scas
mov
add
add
mov
add
int
ljmp
add
dec
in
shll
mov
push
fidivs
add
mov
or
push
inc
dec
call
xor
add
mov
push
mov
add
mov
mov
test
add
xor
push
rolb
dec
push
add
mov
rolb
mov
fcoms
add
mov
add
add
mov
xor
xchg
mov
jo
pop
cmpsl
int
data16
dec
fists
jecxz
fistl
add
add
xor
imul
add
add
add
add
add
lods
mov
bound
mov
add
test
repz
dec
sbb
jbe
cs
shll
push
add
stc
es
testb
loopne
add
movsb
add
test
rolb
mov
jp
aad
xor
testb
dec
mov
and
fcomps
mov
xor
popl
lods
adc
psrad
inc
xchg
outsl
add
push
cmc
lcall
add
add
add
jg
mov
loope
add
adc
mov
inc
add
cld
dec
mov
add
add
decl
mov
pop
xor
enter
push
data16
addb
sbb
dec
arpl
mov
push
add
ja
loopne,pn
pop
pop
jmp
xlat
ret
add
iret
fimuls
inc
lcall
cmpsb
add
fidivrl
in
add
fiadds
add
push
cmp
dec
ret
mov
mov
add
add
mov
sub
rcr
and
add
add
add
add
lods
sbb
add
mov
dec
sbb
add
cmp
hlt
add
pop
inc
add
push
add
test
sbb
add
cmp
inc
lds
popa
sbb
outsl
xchg
dec
movsl
pop
dec
add
mov
add
add
into
cli
es
dec
fcoml
clc
inc
add
add
scas
push
cmp
add
mov
add
add
mov
push
add
mov
add
add
les
push
mov
inc
add
sahf
data16
fisubl
add
lea
int
add
pop
mov
and
jge
repz
add
ficomps
cltd
mov
add
and
mov
jnp
cmp
push
add
add
ds
and
cmp
push
das
sub
stc
inc
rolb
mov
shll
hlt
add
add
or
add
mov
dec
jns
inc
add
add
adc
sti
cmp
or
mov
mov
rolb
cld
das
jae
add
add
add
add
add
clc
vpslld
lea
cwtl
sti
pop
or
dec
push
fbstp
pop
pusha
add
cs
jge
imul
pushf
mov
or
xchg
sbb
xor
arpl
add
ret
mov
add
dec
mov
or
nop
add
test
hlt
add
inc
add
adc
add
cmc
xchg
add
mov
test
out
xor
loope
xor
movb
cmc
fstl
aas
je
xor
adc
loope
stos
lods
xchg
add
movsl
cmp
add
mov
add
loop
push
add
mov
insb
sub
add
into
pop
lods
add
inc
add
xchg
scas
mov
cld
into
cmp
add
xchg
jo
cmp
out
dec
rolb
sbb
add
std
addb
pop
sbb
add
addb
add
xchg
aam
push
pop
je
addb
add
aaa
xchg
add
andl
dec
lret
lar
mov
add
movsb
add
movb
add
dec
xchg
test
cwtl
filds
cmpsb
add
dec
out
arpl
lods
inc
add
arpl
add
add
push
mov
aaa
or
pop
cli
push
add
add
movb
ljmp
jmp
mov
add
add
jmp
add
add
sbb
mov
lds
add
add
cmc
nop
add
bound
mov
add
vpslld
jns
add
loop
xchg
add
loop
ja
add
and
mov
fmuls
jnp
imul
lcall
add
add
or
push
add
cwtl
jns
into
dec
in
testb
add
out
repz
add
scas
psrlw
dec
push
add
push
mov
add
push
push
add
add
pop
lcall
mov
add
decb
inc
add
or
add
add
popf
xchg
add
mov
add
cmp
sbb
add
add
loope
mov
add
int
adc
or
add
jmp
add
test
mov
fucomp
mov
cltd
jle
add
add
pop
rolb
and
cltd
add
add
add
or
add
dec
movsl
in
pop
mov
popf
push
xor
aam
or
add
ljmp
add
out
xor
data16
jge
adc
mov
hlt
add
inc
add
dec
repnz
add
add
add
mov
add
mov
push
add
movsb
add
add
xlat
mov
inc
add
add
fsts
mov
andl
or
clc
testl
add
cld
les
out
push
fwait
movsl
push
outsb
lahf
dec
xchg
jb
movb
dec
mov
xchg
mov
jae
add
fistpll
addb
test
add
insl
das
xchg
add
shll
jno
add
aam
and
add
xor
add
push
add
add
xor
repnz
outsl
push
mov
pusha
add
add
add
inc
add
cwtl
pop
mov
movsl
out
imul
add
add
push
add
xor
cmp
jl
add
data16
add
mov
movsb
add
jae
test
hlt
add
sub
adc
add
add
mov
pop
rolb
pop
mov
push
add
add
sahf
fiadds
js
xchg
loope
daa
enter
add
add
or
lods
mov
xchg
out
xchg
xchg
add
fsubr
test
rolb
stos
and
xchg
jb
sbb
inc
cmp
sub
cmp
fistpll
std
cmp
std
lcall
mov
add
cmp
add
add
xlat
xorl
cmp
pop
ret
xor
jo
dec
lahf
movsb
add
add
sub
add
add
dec
cmp
mov
add
int3
xor
xlat
scas
lods
xchg
bound
mov
mov
outsl
shll
add
addb
mov
outsl
fbld
dec
pushf
sub
sub
mov
mov
xor
fs
add
mov
rorl
outsb
movsl
and
cmc
in
daa
fcmovnb
rolb
movsb
add
add
ljmp
outsl
cmp
add
add
add
arpl
mov
adc
inc
add
lods
roll
fsts
ret
xor
fstl
icebp
dec
das
fstpl
add
add
xor
add
push
loope
add
add
add
loopne
in
and
cmp
add
add
add
inc
dec
sub
add
xchg
scas
pop
loopne
aaa
mov
pusha
add
fdivrl
hlt
add
adc
pmullw
loope
lods
xchg
add
mov
sti
stc
call
add
add
push
add
or
mov
push
add
lret
and
dec
icebp
pop
int
mov
mov
add
pop
add
mov
sbb
add
add
add
pop
mov
ljmp
xchg
dec
sub
mov
add
pop
or
cmp
stos
xchg
pushf
adc
mov
mov
or
add
rolb
xchg
add
add
mov
add
and
bound
mov
add
mov
push
lahf
popa
mov
out
dec
std
sbb
add
lahf
mov
hlt
add
adc
adc
push
loopne
rolb
ja
cmc
push
push
nop
add
int
sub
xchg
add
add
icebp
rolb
imul
pop
call
add
aaa
mov
mov
mov
into
adc
hlt
add
xor
fstl
sbb
aad
stos
repz
dec
and
and
out
pop
fidivs
lock
jmp
movsl
les
adc
dec
and
add
bound
mov
cmpsb
add
movsl
out
add
add
add
int
and
inc
dec
add
mov
data16
add
push
add
add
out
add
mov
call
add
push
add
add
add
sub
add
dec
les
xchg
pop
xchg
add
sub
push
mov
pop
int3
push
inc
add
push
imul
mov
or
xor
sbb
jp
cmc
mov
test
int
add
inc
add
add
pop
cmpsl
or
mov
jge
loop
mov
hlt
add
in
add
out
jg
add
mov
add
add
cld
add
mov
inc
js
dec
dec
dec
ds
or
sbb
xor
add
inc
ja
add
add
or
add
leave
sub
cmp
add
add
or
out
sub
xlat
dec
mov
rcrl
mov
add
addb
in
les
xchg
add
jg
add
push
add
inc
cld
inc
add
loop
js
cltd
mov
fcomps
add
imul
pop
add
bound
mov
mov
add
xor
dec
es
pop
and
outsb
test
push
add
movsb
add
leave
out
call
add
out
fwait
bound
mov
add
add
leave
mov
stos
out
movsb
add
outsb
jb
or
add
mov
mov
mov
in
aad
das
in
push
add
mov
iret
add
lock
mov
push
add
aad
add
add
repnz
add
loopne
mov
mov
rolb
or
add
loope
add
dec
test
add
data16
mov
jl
add
add
idivl
sbb
xchg
add
add
test
lock
and
mov
mov
add
xchg
add
xchg
dec
out
adc
loop
sti
mov
xor
hlt
add
leave
in
rcrl
ret
ret
mov
addb
add
mov
add
add
ret
inc
mov
mov
rolb
mov
movsb
add
sbb
fucomi
test
stc
pop
out
xlat
xor
fiadds
sub
or
test
sbb
dec
subl
aas
sub
cmp
cltd
mov
cmpsb
add
js
push
sub
add
cmpsb
add
dec
add
mov
add
sbb
cmpsb
add
fwait
mov
mov
test
cwtl
out
jg
push
add
fs
add
adc
xchg
mov
add
inc
add
addr16
add
fsub
or
sub
add
pop
int
je
push
cli
mov
mov
fimull
scas
ljmp
mov
and
mov
xlat
cmp
add
sub
lds
repz
fmulp
jae
inc
add
xchg
test
xchg
push
add
add
movb
mov
pusha
add
add
xorl
loope
out
fwait
testb
add
inc
fistpll
sarl
jns
xchg
add
add
mov
add
add
cmp
loop
fsts
add
cmp
jp
in
and
out
faddl
add
add
add
dec
mov
add
or
add
iret
xor
mov
lcall
xor
pop
adc
inc
add
xchg
push
add
add
add
add
pop
negl
aad
add
int3
fstp
cmp
js
lret
mov
push
cltd
pop
mov
sahf
icebp
pop
nop
add
add
add
inc
add
mov
mov
dec
cmp
addb
add
std
inc
fcmovne
inc
add
repz
jmp
sub
pop
rolb
sbb
mov
inc
add
cmc
mov
fmul
aam
fdivrs
pop
inc
inc
hlt
add
daa
aaa
daa
pushl
add
push
sub
dec
movb
popa
lods
push
mov
add
ja
add
sbb
xchg
add
inc
add
add
rolb
jge
sbb
add
cwtl
mov
sbb
jbe
ret
mov
cmp
add
lds
add
adc
mov
iret
xchg
add
mov
mov
imul
int3
rolb
mov
dec
lods
push
add
aas
dec
incb
mov
mov
movsl
sbb
iret
test
add
cmc
inc
add
jmp
testb
cmp
mov
inc
add
mov
rolb
sbb
jne
inc
add
lcall
pop
mov
add
mov
dec
ficompl
rolb
xor
dec
xchg
fcmovnb
add
mov
add
mov
aam
mov
dec
sti
dec
scas
lcall
cmpsl
out
add
movsb
add
add
add
mov
add
std
adc
mov
add
pop
pop
movb
add
mov
adc
daa
mov
add
pushf
fsubl
add
sti
addb
fbld
add
xor
dec
cmp
das
xchg
add
enter
inc
pop
sbb
add
add
ljmp
add
sub
mov
add
addb
add
out
add
stos
js
push
add
sbb
in
jbe
mov
lea
inc
add
jmp
add
add
sbb
test
pop
lret
aam
inc
cmpsb
add
out
push
add
int
ss
in
stos
pop
and
cltd
cmp
add
add
iret
nop
add
adc
dec
fmuls
pop
add
rolb
add
add
dec
pop
in
inc
add
add
dec
sbb
add
add
add
ljmp
add
jmp
xor
mov
and
add
pop
mov
inc
add
fnstsw
bound
mov
rolb
jno
xchg
add
adc
add
in
sub
dec
ljmp
push
add
and
or
adc
cmp
add
fmul
leave
jnp
add
inc
add
cltd
sbb
addb
adc
xor
mov
data16
mov
push
add
and
mov
add
mov
addb
mov
mov
xor
clc
sub
add
adc
movsl
rolb
cmpsl
cmp
add
pusha
add
add
push
sti
fildl
jl
add
dec
popa
push
add
addb
add
xchg
lods
out
jae
xor
mov
add
add
xchg
fcoml
add
mov
arpl
xchg
mov
scas
ja
pop
addl
pop
movb
add
add
addr16
add
lds
cli
jl
add
fstpt
xlat
or
in
clc
aad
add
add
add
add
add
mov
test
mov
lods
pushf
rolb
and
and
mov
inc
or
add
add
into
cmp
sub
cs
add
dec
jo
jbe
or
and
mov
ja
add
and
sbb
rorl
add
push
mov
xchg
loop
addb
ret
and
mov
lods
in
call
stos
pusha
add
sub
scas
lock
pop
rolb
icebp
sar
mov
push
pusha
add
push
dec
cld
push
mov
mov
mov
cmp
subl
mov
test
add
lahf
stos
stos
stos
pop
cld
pop
outsb
repnz
sbb
lcall
cs
ret
dec
adc
dec
xchg
push
pop
int3
dec
pop
mov
sbb
add
mov
add
stos
cli
imul
sub
add
add
add
add
mov
add
mov
add
aad
lea
add
lret
add
jle
xchg
rolb
sbb
push
inc
jge
mov
sbb
xchg
add
sub
outsl
dec
or
xor
scas
add
dec
das
popf
shll
add
sahf
mov
sbb
add
sbb
mov
fisttpll
test
pop
xchg
mov
out
mov
ja
jae
scas
int
inc
add
inc
inc
add
add
add
addb
add
pop
repz
add
addb
push
add
in
mov
add
pop
xor
mov
repnz
pusha
add
mov
sbb
add
sub
sub
add
mov
add
add
iret
adcl
add
add
add
imul
aad
arpl
cmp
jbe
xchg
sti
addb
add
push
add
sub
add
xlat
inc
add
add
xchg
add
or
adc
jp
xor
pushf
jbe
test
push
add
test
add
into
mov
cmp
add
sub
insb
repnz
add
inc
add
mov
add
or
mov
add
lock
mov
daa
pushf
xchg
lahf
mov
add
add
cmp
push
add
fstps
mov
inc
add
xor
outsb
stc
add
mov
pop
mov
scas
pop
xchg
jb
mov
cli
cltd
dec
mov
test
add
dec
imul
loope
cmp
add
out
add
sub
popa
mov
jns
add
jecxz
or
or
add
popf
add
add
cld
outsl
jbe
aam
push
out
out
mov
add
sub
xchg
add
add
gs
pushl
add
sub
nop
add
fcoms
add
enter
sub
add
repnz
fsts
add
pop
or
add
mov
rcll
add
add
add
pop
ds
lret
pushf
or
jbe
in
add
fcoms
int
leave
mov
fwait
inc
mov
into
fmull
stos
inc
cmp
leave
lahf
ja
mov
iret
xlat
insb
inc
cmp
pop
pusha
add
jmp
mov
add
lcall
lret
add
out
sub
pop
call
add
push
adc
push
sti
jns
add
pop
mov
cmc
xchg
add
push
popa
jno
mov
das
sub
scas
rol
add
ja
jb
and
lds
mov
add
xchg
repz
pushf
out
push
addb
xchg
addb
add
push
add
stos
ljmp
mov
and
mov
fistps
jns
movl
jge
dec
test
test
negl
and
daa
ret
push
add
les
jbe
insl
and
mov
add
dec
loopne
mov
push
xchg
add
insb
add
lret
add
mov
mov
loop
mov
jp
pop
and
push
add
dec
cs
cmp
cltd
push
jno
rolb
lret
add
or
data16
add
mov
add
jno
mov
pop
fs
popf
stos
test
cmp
sbb
call
fistl
jp
adc
add
nop
add
push
add
movsl
aam
stos
xor
mov
adc
mov
pop
ficomps
add
xlat
testb
or
loopne
jge
add
add
add
add
cmp
scas
cmp
jmp
inc
add
add
andl
loop
sahf
xchg
add
dec
js
sub
test
add
adc
and
addr16
rolb
dec
sub
mov
test
mov
xlat
push
xchg
rolb
cmp
mov
add
add
cmpsb
add
movl
cmc
and
out
add
add
aam
nop
add
inc
add
loop
add
sti
fisttps
rcll
sub
add
add
add
sub
add
imul
out
mov
add
pop
pop
mov
dec
inc
in
ret
popf
or
lock
addb
xor
add
add
lcall
cltd
mov
add
inc
add
xchg
add
or
add
in
xor
add
xchg
pop
push
loopne
das
add
insb
mov
add
into
add
das
mov
lods
flds
add
add
add
push
add
scas
add
addb
into
arpl
repnz
mov
jne
add
add
imull
adc
add
jno
xor
sbb
adc
cmc
loopne
data16
jno
add
pushf
rorl
xlat
sbb
in
out
imul
add
xchg
add
in
mov
or
pop
negl
sub
mov
add
scas
daa
call
add
scas
js
add
add
fwait
xchg
stos
test
mov
scas
ret
add
pop
shrl
add
stos
mov
jne
add
add
push
adc
push
add
cmp
add
sbb
xchg
fildl
popa
add
or
sub
add
cmp
mov
mov
mov
jecxz
adc
mov
push
add
pop
fisubrs
add
add
in
stos
dec
je
xchg
jl
xor
sub
pushf
push
add
fistl
xor
sub
aad
add
popa
pusha
add
pushf
xchg
push
sbb
cmp
clc
cmp
icebp
int3
into
add
xlat
cmp
xchg
cmp
dec
ret
rcrl
add
ficompl
in
rolb
add
sub
add
ficoms
add
in
cmpsl
mov
aam
into
rolb
pop
aad
fmuls
dec
mov
mov
dec
or
aam
shll
add
xchg
add
add
js
sbb
jmp
sbb
arpl
inc
mov
add
mov
int3
rcr
jbe
lods
sbb
inc
or
jge
sbb
xchg
sbb
cmp
leave
pusha
add
cmc
movl
mov
add
add
subl
mov
inc
add
enter
adc
pop
pushf
inc
lret
push
add
add
push
lods
sbb
mov
pop
ret
mov
rcrl
or
arpl
testb
add
cmp
inc
lret
cmpl
bound
mov
sub
addb
add
jl
dec
rolb
aas
cltd
adc
sysenter
add
stos
mov
xor
jge
and
lock
inc
add
inc
add
dec
push
add
mov
mov
add
and
mov
scas
loop
jno
add
add
sub
add
add
out
std
cmpsl
mov
sub
add
add
add
inc
add
xorl
push
xor
sti
xchg
mov
in
sub
xor
inc
pop
rorl
fnsave
loop
xlat
dec
enter
add
add
out
push
add
lret
add
add
int
ror
add
pop
jp
jge
add
add
inc
add
add
rcrl
cmova
movb
pop
pop
mov
pop
repnz
mov
repnz
pop
sti
mov
add
add
insb
pop
cwtl
out
pop
fsubr
test
cltd
lea
adc
mov
xor
xchg
outsl
jge
jno
add
and
inc
add
pop
sbb
mov
rcll
add
add
imul
ret
push
add
mov
xchg
jnp
add
cmp
lock
sti
movsb
add
cmp
test
testl
inc
add
ja
adc
push
in
imul
mov
add
add
pop
push
add
add
mov
sub
xchg
das
adc
add
mov
lods
add
mov
dec
movsl
pop
inc
leave
pop
in
out
xchg
add
rcrl
pop
lods
rolb
mov
movsb
add
add
add
add
sbb
rcll
add
idiv
xchg
add
mov
cmpsl
lret
and
cmpsb
add
data16
pop
sbb
mov
scas
adc
test
xor
pop
test
scas
scas
int3
adc
add
add
sub
ret
mov
rcrl
rolb
xchg
add
insl
test
imul
sbb
mov
insb
pop
fst
and
fdivrp
pop
getsec
stc
out
cmpsb
add
add
fsubrs
pop
scas
jl
aaa
push
add
add
add
xchg
cmp
dec
bound
mov
pop
jge
movsl
ret
inc
pop
inc
add
mov
mov
add
dec
in
lahf
dec
hlt
add
add
sbb
in
xchg
add
add
add
sub
add
dec
mov
and
push
stc
in
mov
loop
add
loop
inc
inc
add
push
xchg
add
cs
mov
push
add
add
xchg
push
add
fwait
lret
xor
notl
daa
pop
xor
and
mov
mov
jno
add
lret
cmp
std
mov
xchg
mov
mov
add
cmp
sahf
push
jbe
cmpsl
lock
push
dec
lret
sbb
add
add
add
push
add
call
insl
add
add
add
inc
add
push
or
test
mov
add
add
js
add
mov
add
add
mov
sti
mov
push
push
testb
add
add
lret
add
imull
addl
fldt
stc
xorl
ds
add
sbb
lret
mov
sub
add
jg
outsl
inc
add
mov
cmp
pop
pop
repz
lods
call
mov
cld
jbe
inc
add
popa
ljmp
push
add
add
mov
add
add
push
add
add
aam
test
xor
rcrl
add
add
add
push
loope
mov
adc
or
add
xchg
add
ja
mov
stc
addb
call
or
int
push
push
mov
inc
cmp
and
xchg
add
xor
sbb
add
add
repz
sbb
into
daa
mov
lret
and
jb
jns
add
jbe
xchg
mov
pushf
pop
ds
add
enter
cmp
lret
add
mov
add
cmp
mov
cmc
fstps
enter
add
add
ret
inc
inc
and
mov
add
fcmovnbe
add
sahf
mov
jle
into
flds
add
inc
or
call
add
sbb
std
xor
mov
testb
out
and
add
add
xor
add
add
jl
adc
loopne
stos
hlt
add
cwtl
push
add
add
mov
negl
lds
add
jp
jne
jge
lret
rolb
pop
adc
add
scas
or
xchg
add
rolb
out
rolb
pop
fsubrs
add
push
add
int
shl
push
inc
add
inc
add
lock
lea
add
add
addr16
sbb
add
adc
mov
movsl
lret
mov
clc
dec
or
jg
dec
mov
daa
mov
mov
sbb
aaa
sub
mov
mov
pop
inc
add
cmp
pop
shl
add
add
stc
dec
push
adc
pushf
add
mov
sub
inc
add
add
jge
in
push
add
mov
and
aaa
mov
adc
add
sahf
add
add
add
jne
hlt
add
pushf
sbb
popf
adc
aam
mov
dec
out
popa
xor
sub
lahf
and
mov
add
xor
dec
es
add
in
sbb
mov
jno
arpl
xchg
aam
mov
rolb
add
mov
loopne
sbb
add
out
mov
add
add
inc
push
add
mov
inc
addb
and
mov
pop
and
mov
dec
test
add
sub
sbb
dec
leave
btr
iret
and
mov
mov
push
add
testb
add
sbb
icebp
mov
add
inc
add
testb
add
lret
add
mov
xchg
add
lea
mov
xchg
lcall
mov
xchg
add
rolb
test
push
iret
xor
rolb
xor
rolb
popf
fwait
enter
add
les
sub
add
aas
push
add
push
jo
add
xchg
lock
and
add
icebp
push
add
in
mov
into
hlt
add
jle
add
loopne
test
pop
and
cmc
ret
icebp
aam
scas
ret
and
mov
stos
push
lock
inc
add
adc
pop
jns
jb
imul
cs
into
repnz
add
fnstcw
sbb
push
add
mov
xchg
mov
out
inc
add
and
sub
movsb
add
popf
cmc
mov
mov
mov
add
add
ljmp
add
add
xor
mov
cmpl
pop
iret
xlat
fcmovnb
xlat
inc
add
lret
cld
or
adc
ror
xchg
mov
loop
test
call
xlat
cwtl
in
in
fcomi
push
add
add
jae
xchg
mov
add
add
inc
push
mov
push
add
enter
scas
push
adc
jbe
mov
mov
mov
add
add
sbb
mov
mov
dec
aas
mov
xchg
mov
rolb
mov
add
dec
pop
push
add
cmpsb
add
xor
mov
add
add
hlt
add
add
fsubl
add
add
add
imul
adcl
inc
xchg
xor
xchg
add
ss
ja
add
lock
sbb
add
add
mov
or
push
adc
lret
mov
mov
add
xchg
and
push
add
sar
jne
add
add
fld
inc
xor
testb
mov
sti
mov
add
and
fwait
scas
xchg
add
lahf
test
mov
rorl
add
push
add
in
aam
inc
add
add
insb
push
pusha
add
ret
pop
xor
in
out
xor
mov
push
or
std
pop
mov
xor
push
insb
sbb
mov
push
add
add
add
push
jle
fimuls
std
cltd
dec
xchg
test
xor
inc
add
adc
xchg
add
add
and
mov
add
add
add
or
aaa
movsb
add
in
mov
aam
clc
dec
jnp
dec
push
add
jge
add
add
jns
add
addb
dec
push
imul
mov
sub
push
and
mov
add
sbb
data16
lret
cwtl
jnp
mov
int
fistpl
mov
cmp
add
jmp
add
mov
jns
add
pop
mov
pop
daa
xlat
sub
mov
sub
xor
ret
add
push
and
call
aas
mov
dec
pop
pop
nop
add
xor
or
add
add
dec
jle
pop
add
mov
insb
test
pop
movb
xchg
add
add
cli
and
mov
mov
stos
enter
imul
popa
rolb
bound
mov
and
mov
mov
out
add
rolb
fstenv
add
ret
mov
lods
xchg
add
addb
in
test
out
xor
rcrl
lahf
sub
pop
xchg
push
xor
xor
mov
xchg
fnstenv
dec
popa
mov
fdivrl
or
sub
xor
xor
dec
lret
add
add
adc
jg
add
add
add
das
lock
hlt
add
loopne
sahf
insl
mov
add
incb
or
push
add
sarl
push
add
pop
sub
mov
mov
int
outsb
pushf
inc
add
iret
ret
adc
add
in
add
mov
add
rolb
roll
add
mov
mov
pusha
add
jge
sti
add
pop
mov
pop
cld
lret
adc
jl
mov
lods
js
add
lret
insb
pop
sub
loopne
aad
push
bound
mov
jp
rolb
dec
stos
jmp
roll
pop
jns
or
or
xchg
sbb
lahf
cmc
out
pop
in
push
add
sarl
add
or
add
add
test
add
aaa
xor
imul
mov
or
jle
and
mov
xor
and
mov
xchg
scas
loopne
mov
mov
loope
pushf
adc
loope
lds
mov
mov
sbb
sbb
cmp
gs
push
add
ret
int
daa
sub
int3
pop
mov
iret
push
dec
addb
jae
rolb
xor
pusha
add
add
push
adc
mov
icebp
test
add
add
inc
test
mov
push
add
push
out
mov
push
add
rorl
push
rep
pop
xchg
pushf
pop
movsl
jl
sub
in
cltd
pushf
and
mov
aam
repz
add
adc
mov
and
add
mov
test
cmp
add
pop
into
aas
in
movsb
add
add
adc
testl
or
js
jl
sahf
dec
rolb
mov
push
or
add
dec
and
jl
adc
pop
daa
fistpll
inc
mov
add
add
add
mov
or
cmp
or
add
bound
mov
jp
enter
lock
jnp
add
and
testb
add
jae
add
add
add
daa
mov
add
add
cmp
add
and
mov
xchg
add
jmp
jb
stos
sbb
mov
xlat
push
mov
pop
mov
rolb
mov
aad
add
popf
out
addb
je
out
inc
add
mov
add
pop
jl
dec
jb
push
add
add
mov
xor
leave
xor
rolb
add
jne
add
mov
loopne
lds
lock
add
cmp
push
lahf
mov
push
add
dec
jl
add
mov
aaa
fcmovnb
add
add
pop
pusha
add
add
ss
add
add
repnz
add
add
daa
push
jno
sub
add
inc
add
pop
test
cs
add
dec
mov
testb
pop
push
pop
push
add
add
and
mov
ret
leave
repnz
cwtl
add
sub
add
mov
add
and
xor
mov
add
add
js
add
fstl
add
inc
xchg
adc
cli
lds
addb
sahf
mov
arpl
in
cmpsb
add
xchg
or
xor
mov
add
lret
push
mov
icebp
pop
add
mov
add
sbb
xor
lea
mov
mov
insl
sbb
add
push
add
lods
scas
dec
testl
add
enter
je
shll
sti
dec
rolb
out
inc
add
push
pop
mov
mov
dec
mov
add
cmp
scas
mov
das
movb
xor
lea
or
pop
insl
mov
mov
cmp
xchg
lcall
pop
push
xchg
xchg
add
mov
xchg
add
mov
add
add
add
pop
adc
popf
popf
int
aaa
push
add
add
push
add
iret
arpl
add
mov
add
lahf
cwtl
jg
push
cmpsb
add
xlat
cmp
testl
add
push
add
loope
mov
add
xor
addr16
push
sub
cmpsb
add
add
add
cmp
add
fisttps
lods
xor
add
xor
in
fdivl
in
iret
add
addb
add
add
add
pop
jle
daa
mov
std
push
adc
inc
rolb
nop
add
lds
cld
insl
or
rcll
mov
push
fwait
out
xchg
add
dec
mov
add
scas
sbb
dec
insb
xchg
mov
dec
test
cmpsb
add
jb
dec
add
mov
inc
cmpsl
adc
shrl
add
daa
cmp
add
add
popa
sub
hlt
add
add
add
insl
mov
repnz
or
iret
popf
mov
mov
jle,pn
add
or
pop
pop
lea
inc
add
jg
bound
mov
add
mov
xchg
jmp
popa
in
mov
pop
or
pop
jb
loope
xor
pop
dec
add
loop
ljmp
mov
cmp
mov
sti
xor
mov
hlt
add
add
stc
iret
add
fwait
mov
sub
cli
or
repnz
dec
insb
xor
movb
lahf
dec
scas
push
iret
inc
stos
fisubrs
xchg
dec
jmp
jmp
pop
sub
add
cltd
jg
add
add
mov
lret
mov
sbb
add
inc
add
add
add
inc
loop
pop
sbb
js
das
inc
and
mov
add
sbb
jmp
loope
add
mov
cmp
add
add
cli
popa
in
cwtl
add
add
pop
pop
js
add
add
push
add
out
shll
sbb
mov
add
xor
mov
jle
add
xor
add
dec
or
jle
loop
push
hlt
add
add
add
add
xchg
adc
leave
dec
push
sbb
ficoms
xor
sub
mov
scas
add
sub
daa
scas
lahf
pop
adc
xor
add
addb
adc
ret
fwait
std
int3
in
adc
add
adc
push
mov
test
add
xor
mov
add
xchg
int3
lret
adc
and
mov
rolb
and
mov
add
into
adc
imul
xchg
lret
pop
mov
lock
cwtl
or
int
add
mov
add
add
add
jne
mov
add
insl
rcrl
lods
cmp
add
fldcw
inc
pop
mov
lods
lfs
sti
add
and
add
add
add
add
add
add
pop
push
mov
lahf
mov
lock
call
fwait
dec
xchg
test
outsl
test
add
add
adc
or
ud0
mov
and
mov
and
sub
add
add
lret
pop
out
lock
mov
shrl
js
and
out
scas
pop
push
add
ret
lea
add
add
add
jo
push
add
sbb
fistps
testb
mov
pop
sub
add
add
imul
add
pop
pushf
jle
add
out
add
les
fildll
mov
cmp
jg
out
add
cltd
ljmp
pop
mov
adc
xchg
xor
dec
in
cmp
aam
imul
iret
xchg
add
inc
add
add
sbb
dec
in
outsb
daa
repz
stc
dec
and
mov
add
push
add
nop
add
cmpsb
add
test
aam
adc
add
push
add
rolb
add
add
dec
pop
cmp
add
add
push
add
jb
and
mov
add
inc
into
add
enter
int
add
sub
sub
jb
sub
aas
ljmp
test
lock
loope
test
add
in
popa
fucomp
pop
sbb
push
add
mov
mov
add
mov
push
add
add
jge
dec
pusha
add
jne
das
aaa
mov
push
or
mov
add
inc
je
adc
inc
std
outsb
adc
sbb
nop
add
fwait
jp
sub
out
cmc
push
add
aad
add
popa
lock
xchg
testb
test
test
adc
outsb
and
movb
icebp
add
jmp
stos
add
mov
mov
add
mov
sub
fistl
dec
enter
cs
add
add
jns
add
mov
in
mov
push
add
mov
xchg
cmp
rcl
add
add
popa
vprotb
daa
fwait
clc
sub
dec
insb
dec
or
clc
fildll
adc
out
mov
add
dec
das
jnp
add
add
push
add
push
add
add
add
rolb
stos
out
inc
add
daa
lds
scas
stos
xchg
mov
add
clc
xor
int3
iret
cmp
ja
add
hlt
add
push
add
xchg
lahf
pop
gs
scas
sti
rolb
xchg
mov
inc
add
stc
pop
leave
pop
rolb
mov
cmp
sbb
add
test
add
xor
lret
add
xchg
add
mov
icebp
cmc
in
ret
mov
cmpsb
add
xchg
lahf
imul
jl
jp
addr16
add
add
aaa
rolb
and
xchg
test
xor
and
mov
add
mov
jae
loop
icebp
sbb
inc
add
int
out
bound
mov
sub
add
push
cmc
jecxz
push
push
add
aam
in
pop
les
pop
cmp
mov
mov
mov
jl
cmp
test
add
outsb
pop
sub
add
add
add
add
xchg
jnp
mov
add
push
rdtsc
sbb
sub
notl
out
xor
add
add
sbb
aas
fcmovnu
sbb
add
and
push
add
xchg
add
add
push
add
nop
add
add
add
in
dec
rolb
icebp
loope
add
dec
and
add
mov
mov
mov
repz
and
push
stc
aam
scas
xchg
addb
add
scas
cmpsl
mov
mov
out
rolb
sub
or
pusha
add
loop
xchg
jnp
add
push
add
movsb
add
lods
mov
xchg
fnstcw
add
add
mov
add
add
scas
in
imul
cmp
test
adc
add
fwait
mov
imul
add
inc
add
jne
lea
lret
in
push
je
jmp
add
inc
add
inc
addr16
add
pop
into
into
or
push
movsl
add
pop
popf
pop
lea
xchg
rolb
test
push
add
pushf
fdivl
add
mov
add
ffreep
add
jle
add
add
rolb
loope
pop
sti
mov
add
add
int3
mov
mov
cmc
into
jl
add
cmpsb
add
jbe
jecxz
addb
adc
add
ret
andl
mov
lock
dec
mov
inc
add
add
inc
add
js
iret
mov
sbb
push
add
stc
xor
movsl
cmp
add
out
add
out
out
fwait
test
add
adc
iret
lea
add
mov
pop
jbe
in
out
and
add
aas
frstor
mov
add
mov
add
push
adc
arpl
add
lock
add
mov
mov
and
mov
xchg
add
mov
gs
out
test
adc
stc
push
push
dec
stc
stc
mov
add
and
ds
incb
add
jg
add
test
add
add
dec
jle
js
addl
mov
and
mov
add
add
repnz
add
cmp
xchg
inc
lahf
mov
dec
inc
sub
cmp
lea
mov
jl
or
push
addb
push
add
addb
add
ret
add
mov
ds
xchg
pop
cmp
mov
pop
cmp
lret
adc
je
jle
xchg
add
xchg
pop
push
aas
sbb
jae
jno
repnz
add
roll
adc
test
xor
add
cmpsb
add
add
scas
pop
add
leave
pop
addb
mov
cli
inc
pop
fldcw
testb
dec
dec
xor
sbb
push
sbb
jmp
lods
add
jne
jne
jo
ret
add
movsb
add
out
jo
outsb
xor
mov
cld
push
add
mov
es
and
ds
cmp
mov
dec
inc
add
mov
add
mov
ljmp
cld
repnz
add
jmp
mov
add
mov
frstor
scas
sbb
in
mov
das
xor
push
add
add
add
or
push
mov
or
push
jno
int
add
add
and
xchg
add
add
add
fistpll
in
jecxz
jne
adc
xchg
add
cmp
push
out
ret
mov
bound
mov
data16
sti
aam
sub
xchg
add
orl
xchg
out
in
hlt
add
movsl
leave
daa
int
adc
inc
out
add
int
sub
ret
xchg
push
call
test
insl
or
cmp
xchg
add
test
adc
xchg
lret
iret
stc
cmp
mov
add
add
and
add
cwtl
test
add
into
lds
xchg
bound
mov
xchg
add
out
sti
sub
add
xor
inc
add
add
add
push
or
mov
mov
ljmp
addb
add
lock
mov
dec
or
xchg
orl
add
xor
bound
mov
pop
cmp
mov
add
test
lret
mov
mov
mov
xchg
add
push
jp
js
ds
adc
or
cmp
add
repnz
mov
or
stc
xor
nop
add
popf
mov
hlt
add
add
xchg
ret
out
fldl
ss
mov
mov
mov
aaa
stc
mov
mov
dec
push
add
add
adc
bound
mov
add
aad
push
add
add
cmp
add
add
lods
in
sbb
add
or
add
imul
popa
pop
or
xchg
cmp
mov
test
xchg
testb
pop
mov
xor
aas
dec
sti
enter
xor
add
in
dec
lds
call
jp
add
pop
bound
mov
add
ljmp
in
sbb
push
add
cmc
jp
jp
outsb
and
clc
ret
cli
lods
adc
mov
add
ds
mov
push
add
cmp
cmpsb
add
dec
dec
sub
add
lods
sub
add
test
addr16
aaa
inc
jecxz
add
mov
push
out
inc
aam
mov
fimull
cmp
rolb
lahf
mov
insb
arpl
and
mov
add
adc
cmpsl
cmp
add
add
add
add
ret
out
das
push
jbe
data16
or
lret
mov
add
addr16
xchg
add
sub
dec
cmpl
add
add
lret
roll
mov
lret
pop
mov
xor
jnp
lock
mov
arpl
outsl
daa
xchg
inc
add
sbb
gs
and
mov
roll
mov
add
int3
xlat
rolb
push
lret
dec
test
aam
insb
movsb
add
add
insl
sbb
popf
push
mov
lds
ret
les
push
stc
mov
add
movb
mov
enter
stos
mov
hlt
add
pop
mov
push
je
xor
inc
add
mov
and
mov
pop
mov
popf
and
push
add
mov
xadd
adc
add
and
mov
add
rolb
inc
add
cmp
add
pop
jmp
lret
fnstenv
add
adc
add
hlt
add
add
mov
add
add
mov
test
add
add
jp
push
add
lahf
pop
sbb
mov
cmp
add
add
hlt
add
jecxz
pop
adc
pop
loopne,pn
data16
aaa
aas
cmp
xchg
jno
add
add
add
and
mov
rolb
out
xchg
add
add
adc
jecxz
lret
addb
mov
add
push
push
add
jo
adc
add
outsb
mov
add
jmp
inc
add
add
add
mov
dec
xor
aad
cmp
inc
jns
outsl
sbb
stos
inc
out
stc
dec
iret
mov
lcall
and
stos
or
add
pop
cmp
add
lds
xor
jmp
fwait
jnp
outsl
fildll
fimuls
push
test
sti
test
mov
mov
ds
adc
je
lret
imul
add
ljmp
rolb
int
int
sbb
dec
add
pop
into
push
add
add
add
es
adc
xor
mov
data16
rolb
cmc
aas
pop
mov
pop
jg
ficoms
jo
fisubrl
mov
jae
add
aam
gs
add
and
or
add
flds
add
add
mov
cmp
push
mov
add
or
outsb
cli
insb
call
add
or
cmp
lahf
dec
lret
pushf
push
adc
repnz
mov
sub
mov
loope
push
or
aaa
cmp
sub
rolb
jnp
lods
jne
int
add
mov
add
jne
xchg
leave
aam
cmpsl
jp
mov
jno
add
add
push
repnz
add
lahf
mov
add
mov
add
inc
jnp
add
add
lret
movsb
add
add
add
das
imul
mov
mov
add
fs
add
stos
dec
mov
insb
xor
inc
add
add
sub
sbb
into
mov
mov
jne
add
add
out
pop
add
mov
cmp
out
in
stos
cmp
xchg
pop
push
add
cltd
xchg
add
add
scas
movsb
add
add
add
add
push
xor
inc
add
jns
leave
add
testb
or
xor
popa
cmp
push
movb
fxtract
add
add
movsl
lahf
sub
movb
add
mov
xchg
push
add
add
and
mov
jno
add
add
dec
mov
add
add
mov
addb
out
adc
aas
js
leave
test
mov
icebp
test
mov
cmpsb
add
inc
add
dec
cli
adc
lea
cmp
add
mov
add
mov
pop
sub
add
jmp
push
das
and
enter
add
repnz
fwait
cs
adc
xlat
outsl
in
mov
add
xchg
xchg
cmp
xor
dec
xchg
add
push
mov
add
hlt
add
cwtl
and
out
sub
mov
xor
rep
mov
cmpsl
sub
insb
jmp
mov
add
or
dec
aas
rolb
add
add
add
cmp
sbb
loope
adcl
ret
push
iret
xchg
add
add
mov
xor
imull
or
pop
repz
addb
icebp
pop
inc
add
repnz
rorl
and
out
dec
add
mov
inc
pop
stos
xchg
add
and
sbb
add
add
loopnew
mov
add
add
mov
mov
xor
aas
pop
inc
add
and
and
xchg
add
hlt
add
cmpsl
testl
cmpsb
add
and
iret
pusha
add
addr16
cmp
push
andps
cmc
push
jmp
cld
add
sub
pop
roll
fs
adc
out
ret
xlat
and
mov
add
mov
add
add
xor
dec
pop
jb
jne
pop
scas
rolb
loope
add
adc
addb
insb
js
subl
add
add
push
add
and
mov
fisubrl
add
aas
clc
add
mov
xor
ljmp
inc
dec
iret
pushf
inc
add
stos
pop
push
call
pop
add
mov
enter
push
cmp
dec
in
jecxz
out
outsb
pop
sti
inc
add
xchg
cmpsl
mov
or
mov
adc
add
call
sti
in
xchg
adc
or
add
loop
stc
push
fcom
addb
rolb
gs
push
bound
mov
add
fistl
add
leave
or
pushf
push
pop
jge
cwtl
jecxz
add
add
push
add
insl
pop
add
lods
aad
in
jns
inc
mov
ret
add
sbb
xor
movsl
int
fnsave
jge
add
mov
clc
dec
loop
add
push
add
jl
add
loope
add
ret
testl
xlat
jmp
incl
add
addb
test
add
in
jl
fnstsw
mov
pop
adc
add
xor
rolb
loop
lret
xchg
add
xchg
sbb
add
xchg
dec
or
rolb
mov
fiadds
pop
cld
sbb
cwtl
pop
and
rolb
mov
push
mov
xchg
movsl
cmp
mov
adc
lea
push
add
pushf
inc
add
pop
xchg
add
add
clc
jo
sub
sbb
add
mov
roll
scas
inc
add
cmc
mov
jge
aas
xchg
add
mov
sbb
push
add
adc
add
enter
movsb
add
mov
addr16
pop
lahf
mov
push
add
outsl
into
and
push
add
repnz
push
add
sarl
pop
mov
lock
add
into
add
add
sbb
or
fwait
mov
add
push
add
lahf
push
add
fbstp
addb
rcll
aaa
push
inc
add
add
inc
add
lea
xlat
js
add
clc
adc
sub
add
or
mov
pop
sbb
imul
repz
cmpsl
fdiv
mov
les
jne
pop
sub
dec
sub
pop
dec
jmp
add
add
scas
cwtl
popa
in
sub
add
aam
rcrl
jmp
fwait
popl
add
or
push
jae
sbb
add
jo
fldenv
inc
add
into
out
das
sti
jns
add
dec
mov
fwait
cs
jns
sub
ret
pop
mov
xor
jge
sbb
pop
fcomps
add
add
into
js
ficomps
sbb
push
cmp
pusha
add
or
jle
bswap
sub
adc
add
cwtl
xor
add
pop
dec
add
hlt
add
jge
sar
add
push
add
add
mov
in
and
add
add
repnz
add
mov
adc
test
icebp
fcmovb
jae
mov
imul
dec
mov
cmpsl
test
popa
mov
add
subl
pop
lds
add
add
xchg
adc
mov
in
into
in
cmp
add
mov
jp
popa
out
jg
xor
or
test
add
add
push
insb
ljmp
add
add
add
add
add
bound
mov
mov
mov
rolb
sbb
imul
fistps
in
divl
add
dec
inc
repz
add
ud1
add
add
add
stc
lock
push
adc
inc
add
jmp
les
xchg
add
mov
lahf
testb
cmp
scas
or
add
add
add
inc
add
xchg
add
cld
sbb
or
pop
stc
and
mov
add
mov
add
mov
add
cmpl
add
loope
or
testb
add
mov
add
add
imul
push
out
movsb
add
iret
xchg
arpl
pop
aam
jno
add
add
sti
add
addb
add
add
or
xchg
test
add
xchg
out
out
pop
icebp
jl
add
mov
addb
lods
pop
insl
leave
add
add
add
jae
repz
es
add
test
sub
mov
add
lcall
lock
jmp
add
jne
sbb
jne
dec
incl
and
scas
or
add
xchg
inc
add
add
aam
mov
add
ficompl
add
fwait
loop
mov
arpl
fcomps
sub
jnp
add
mov
xor
int
aas
int
add
add
add
inc
add
add
add
inc
stc
jmp
push
mov
adcl
or
add
mov
push
add
mov
or
mov
sti
pop
or
test
cmp
adc
repnz
mov
push
xchg
mov
pushf
adc
dec
add
add
cmpsl
xchg
int3
pop
enter
xor
rolb
cmp
add
add
add
and
pop
add
icebp
cmp
sbb
cli
inc
add
xchg
dec
push
add
fdivrl
scas
rolb
in
add
mov
pop
inc
add
bound
mov
bound
mov
dec
xchg
mov
xlat
xchg
xchg
cmp
insb
enter
inc
add
push
add
stc
xor
bound
mov
add
dec
movb
xchg
dec
or
add
mov
add
lock
push
push
mov
push
ja
adc
push
add
cmp
punpckhwd
clc
leave
adc
push
add
add
stc
push
add
fisubl
or
sbb
pop
bound
mov
mov
leave
clc
mov
add
xchg
add
leave
ret
inc
add
add
in
mov
add
fisubrs
dec
push
xor
lds
jno
add
push
fbstp
inc
pushf
cmp
or
cld
lret
push
jl
jns
pop
sahf
in
cmp
test
add
cmp
mov
fldcw
jns
std
mov
add
add
add
test
dec
dec
std
ja
add
mov
aas
lret
call
add
insb
add
add
or
je
push
add
add
jmp
testl
inc
add
aas
mov
cwtl
pusha
add
scas
test
cmp
add
add
sub
flds
mov
mull
add
outsl
xor
add
mov
pop
testb
movsl
lahf
dec
je
dec
lea
jnp,pt
rolb
dec
mov
ror
lcall
add
add
add
cmp
add
and
mov
add
push
cmp
add
mov
and
mov
inc
xchg
pop
push
add
rolb
pcmpgtw
add
add
in
push
add
jg
push
add
add
loop
or
add
sbb
add
add
adc
mov
dec
pop
imul
xor
fidivs
push
xchg
arpl
inc
add
in
or
stc
cmpsb
add
in
je
jge
lcall
js
add
add
mov
add
testb
inc
add
loope
pop
lcall
adc
out
add
fwait
dec
cli
pop
add
add
mov
adc
add
sbb
std
imul
inc
pop
or
pop
or
les
aam
jmp
add
div
aas
pop
jl
pop
movsb
add
icebp
xor
add
add
mov
xchg
xchg
loop
clc
pop
pusha
add
fdivl
mov
sbb
jne
mov
movsl
pop
in
push
cli
push
nop
add
add
int3
lcall
add
add
sbb
orl
add
add
add
insb
into
and
mov
mov
fstpt
loop
ror
cmp
movsb
add
add
mov
lret
mov
pop
fisttps
xchg
add
mov
int3
jl
add
dec
addr16
ficoml
cmp
add
cmova
lcall
mov
xor
fdivrs
addr16
add
repnz
and
mov
add
add
add
rolb
mov
xchg
add
out
sub
add
add
push
pop
add
xchg
inc
add
add
add
pusha
add
add
add
add
hlt
add
and
mov
and
les
aad
add
sub
pop
push
add
sti
push
lcall
popa
orl
xchg
test
sub
and
movb
add
add
rolb
add
add
add
inc
add
add
outsl
sub
dec
mov
mov
add
jl
or
sub
loopne
adc
sub
add
xchg
rolb
jno
leave
xchg
or
je
push
add
xorl
loopne
mov
jb
test
add
sub
jne
add
mov
rolb
mov
add
inc
or
cld
int
add
test
and
lahf
mov
stos
popa
pop
sbb
add
not
inc
add
add
and
add
sahf
or
adc
mov
mov
loope
imul
push
mov
and
mov
fistl
insb
ret
push
add
cmp
int3
cmp
mov
add
sbb
les
xor
mov
jno
in
loop
xchg
pop
enter
pop
xchg
add
rolb
arpl
xchg
add
cmp
add
mov
dec
repz
ja
add
fisttps
and
mov
enter
lret
sbb
cmp
inc
add
and
stc
movb
xchg
add
or
xchg
pusha
add
mov
cmp
add
test
sbb
dec
bound
mov
jns
add
ja
push
add
add
outsb
fmuls
jp
add
fcmovb
add
lods
fcoml
movsb
add
int3
push
adc
add
add
mov
add
pop
and
mov
add
add
ja
ja
in
cmpsl
add
pop
incl
mov
movsl
cmpsb
add
popf
xor
out
cmp
out
xlat
sub
add
add
xor
sub
add
sub
fnop
add
pushf
sub
ja
addb
add
rolb
aaa
push
add
add
add
push
inc
add
rolb
mov
add
push
ret
mov
sbb
andl
loopne
mov
adc
aam
xor
xchg
addb
push
push
hlt
add
out
lret
inc
add
inc
add
mov
loope
shll
cmp
add
leave
and
ret
add
sbb
and
cmp
and
ret
gs
cs
xchg
inc
add
add
mov
jge
rcr
rcrl
pop
shll
add
stos
das
cmp
push
add
add
cli
pop
xor
xor
pushf
inc
imul
les
loop
and
mov
add
pop
mov
add
cmp
add
ret
cmp
lahf
lahf
or
add
adc
dec
push
xchg
int
cmp
inc
out
add
adc
insl
push
cmpl
pop
jae
add
pop
xchg
add
add
lods
add
add
mov
xchg
add
push
hlt
add
add
add
mov
add
xchg
add
or
ret
add
jb
sbb
pusha
add
popf
outsb
cltd
fwait
or
sub
addr16
lret
inc
add
aam
sahf
push
lds
lock
mov
adc
dec
dec
lods
push
inc
add
xchg
add
rolb
js
add
or
lcall
movsl
pusha
add
mov
push
add
int
add
or
sar
fsubl
push
testb
and
mov
cmp
xor
fildl
addb
push
add
add
daa
movb
cmp
add
add
in
insl
fsubrl
jo
loope
movsb
add
jp
mov
jne
lods
add
push
add
add
mov
jo
rolb
dec
inc
add
add
je
cmp
enter
ficomps
sbb
fcom
xchg
cmp
mov
dec
mov
lea
movsl
stos
in
pop
hlt
add
lods
lock
insb
sbb
fidivs
adc
mov
cs
addb
and
jecxz
dec
inc
add
pop
lods
jo
mov
inc
add
mov
add
add
test
roll
add
mov
lds
enter
dec
push
int3
sbb
add
test
jmp
xchg
add
ja
add
mov
mov
lahf
and
ljmp
jecxz
sub
stc
aam
repz
gs
xchg
add
jno
add
cltd
dec
fcmovu
sub
mov
add
rolb
mov
xor
push
add
add
movsl
fbld
mov
fdivr
push
add
add
out
testb
push
add
pushf
ja
push
call
pop
sbb
int
clc
ja
mov
pop
xlat
into
adc
lret
andl
add
add
add
add
hlt
add
add
addb
je
lcall
add
xchg
in
sbb
mov
in
lcall
sub
movb
add
pop
xor
lods
pop
push
add
add
add
mov
add
add
jae
popa
push
add
add
xor
call
testb
sti
cmp
add
or
sbb
jne
in
jno
jge
add
js
add
outsb
adc
lods
mov
movsb
add
adc
add
xchg
add
xchg
add
add
or
or
add
push
lds
sti
or
add
aad
sub
sbb
xor
add
pop
movsb
add
add
push
add
add
les
pop
movsb
add
leave
pop
jnp
sub
add
mov
xchg
inc
push
add
dec
sbb
lods
rcrl
mov
mov
inc
add
add
and
mov
mov
add
movsl
test
add
mov
add
aaa
xor
fcomi
subl
insl
scas
mov
jnp
into
push
add
add
and
add
add
insl
xchg
add
add
test
je
xchg
push
push
inc
add
jl
clc
and
mov
in
enter
inc
add
cmc
sbb
pop
dec
pop
add
ret
sbb
add
mov
cmp
imul
add
add
out
stos
cld
daa
data16
pop
jg
add
add
test
aam
sub
or
xchg
fucomp
sub
movsl
bound
mov
lret
test
test
or
cwtl
test
add
insl
dec
ljmp
add
add
not
add
mov
filds
aad
xor
pop
add
push
add
xchg
jne
add
jnp
add
push
push
add
add
outsl
lret
add
push
pop
pop
adc
stc
test
sbb
arpl
add
add
cmp
add
mov
add
arpl
xchg
add
lcall
add
add
cwtl
cmp
andl
xor
sti
adc
repnz
push
imul
es
sbb
xor
add
cmpsb
add
add
and
mov
and
mov
xchg
add
mov
add
push
push
add
xor
dec
data16
add
mov
lcall
jg
rolb
and
dec
out
mov
inc
add
daa
xor
addb
add
mov
mov
add
push
cmpsl
sbb
cld
xchg
add
or
je
mov
dec
pushf
cltd
or
adc
jl
mov
ds
hlt
add
add
add
int3
mov
hlt
add
add
fisubrs
add
and
fs
mov
add
mov
cltd
sti
jmp
add
mov
add
cmp
add
outsl
xchg
test
add
sbb
jno
in
sbb
cmp
add
mov
push
inc
add
add
add
mov
add
inc
mov
pop
mov
add
loope,pt
adc
out
add
push
adc
mov
sbb
repnz
mov
loope
addr16
add
popf
push
add
xlat
dec
mov
push
sti
sub
cld
pmulhw
add
movsl
inc
dec
and
dec
or
pop
jbe
fcoml
xchg
add
ror
jno
jne
pop
gs
ljmp
dec
ljmp
add
pop
in
sbb
add
add
or
sub
data16
xor
andl
xchg
dec
std
nop
add
add
mov
xor
mov
add
push
cmp
add
mov
sbb
add
and
mov
xchg
add
add
lock
inc
add
dec
sbb
add
inc
mov
add
inc
pusha
add
mov
pusha
add
add
add
addl
mov
lds
add
push
add
scas
xchg
xor
andl
pushf
gs
bound
mov
out
sar
pop
data16
dec
shrl
mov
sbb
add
add
add
movsb
add
add
add
add
add
int
pop
or
xchg
dec
dec
popa
or
mull
ja
push
add
add
stc
repz
inc
add
jae
sbb
add
jle
push
add
sub
movaps
stos
jbe
mov
aaa
mov
outsl
mov
xor
arpl
add
dec
dec
lret
inc
flds
add
lock
sbb
addb
add
sbb
mov
cmpl
out
lea
mov
add
test
add
call
dec
inc
clc
rolb
xlat
dec
fldcw
adc
out
add
test
add
add
xchg
push
jge
jle
add
add
loopne
inc
add
cli
jnp
push
dec
xchg
lret
movb
mov
dec
addb
stos
pop
imul
add
lods
xor
test
add
fld
pop
jb
add
lcall
push
add
add
lahf
mov
lret
imul
cli
lea
or
add
push
adc
scas
fdivs
xor
add
in
cmp
cmpsb
add
int
pop
imul
std
dec
or
add
pop
movsb
add
mov
sub
mov
or
pop
sub
mov
add
xchg
mov
rolb
testb
add
adc
fisubrl
push
add
mov
cmp
or
push
add
mov
cmc
jp
ret
mov
xorl
outsl
sbb
or
enter
mov
adc
std
es
add
mov
add
sbb
adc
mov
psrlw
or
mov
add
lock
add
and
fcomip
icebp
dec
and
mov
stos
sar
push
add
rolb
adc
push
jge
push
add
aas
std
mov
test
cwtl
pop
test
test
mov
mov
fwait
pop
inc
add
xor
and
push
jmp
and
add
jmp
ja
pop
in
adc
lret
push
jb
gs
jp
add
movsl
iret
add
xchg
sahf
xchg
xchg
cmp
jmp
add
shll
add
xlat
inc
aaa
xchg
add
adc
sub
add
pop
push
rolb
pop
repnz
bound
mov
dec
xor
cld
or
add
add
push
add
adc
sub
loope
aaa
or
decb
out
mov
nop
add
and
mov
fdivs
dec
hlt
add
sbb
jle
xchg
repnz
inc
stos
sub
loopne,pt
dec
in
jne
addb
mov
add
sbb
add
add
mov
cmp
shll
add
add
adc
cltd
mov
rolb
fstl
loopne
pmaxub
stc
imul
stc
push
add
std
stc
fidivrl
add
outsl
dec
mov
fstpl
lcall
incb
stc
data16
mov
add
mov
into
xor
lds
or
lcall
dec
xchg
jge
add
xchg
inc
add
mov
rolb
testb
push
push
int
and
mov
lcall
add
add
add
enter
and
xchg
movsl
add
add
lahf
inc
jae
or
sbb
loop
or
xlat
pop
xchg
add
push
test
jge
pop
mov
add
add
add
testb
pop
jo
rolb
add
mov
rolb
dec
mov
push
add
addb
loope
add
mov
inc
dec
pop
leave
xor
repnz
add
adc
mov
jnp
aaa
icebp
and
gs
test
add
pop
aam
xchg
add
inc
jne
add
push
aam
sub
add
sahf
dec
mov
adc
push
add
test
daa
or
xor
and
mov
insl
xchg
add
inc
jb
mov
add
cwtl
mov
adc
xor
movb
sbb
pop
cmpsb
add
mov
sbb
mov
add
mov
adc
add
es
add
add
rolb
cli
sub
add
sub
mov
shll
orl
js
ds
push
add
add
add
add
loope
dec
push
mov
xchg
add
dec
pop
push
jne
lahf
and
mov
add
cmp
lret
add
pop
btl
mov
leave
or
daa
push
add
add
repnz
movsl
add
jge
arpl
negl
xor
add
lock
cmp
mov
mov
lea
add
out
test
fstpl
dec
lock
ljmp
mov
xchg
std
xchg
jno
repnz
mov
xchg
cs
ret
rolb
add
aaa
pop
addb
add
adc
and
jnp
add
ss
fildl
ljmp
test
push
add
stos
dec
ficompl
inc
mov
add
pop
lahf
pop
repnz
xor
loop
cli
inc
add
add
push
imul
cltd
aaa
mov
mov
movsl
lret
cmpsb
add
sbb
jb
push
imul
mov
add
mov
sti
push
xor
cli
pop
push
rolb
lds
mov
sub
lret
add
aad
fucom
xchg
pop
and
mov
bound
mov
add
add
cmpsb
add
add
imul
jg
stos
in
pop
into
add
add
faddp
add
mov
shll
sbb
jnp
adc
popf
cmp
ja
imul
add
or
add
mov
and
mov
clc
mov
orl
xchg
add
add
xchg
jecxz
mov
push
add
push
add
add
fiadds
into
stos
adc
leave
sbb
add
mov
out
push
loopne
mov
mov
loope
fsubrl
jne
repnz
pop
jge
cmp
icebp
mov
xor
stos
pop
jno
xor
lods
add
add
hlt
add
pop
imul
add
out
add
push
add
add
icebp
adc
je
in
cmp
stos
push
add
jno
and
iret
repnz
add
add
add
ja
loopne
dec
pop
jmp
ja
inc
add
add
add
mov
mov
add
add
sbb
add
add
or
insb
mov
add
push
dec
mov
mov
jge
or
xchg
add
std
into
mov
sbb
add
je
push
add
mov
scas
lock
leave
icebp
and
push
add
add
lds
add
ljmp
adc
mov
add
pop
jmp
ficompl
sub
add
in
add
int3
rcll
rolb
inc
lods
mov
daa
pop
fnstenv
add
lahf
cltd
or
cmp
add
mov
mov
jecxz
add
add
fildll
pusha
add
into
sbb
add
xor
in
outsl
out
hlt
add
push
add
pop
xor
dec
or
xor
ffreep
jnp
fxch
push
add
pop
sti
inc
add
mov
xchg
add
aam
out
mov
xchg
sub
testb
add
xchg
add
add
add
and
inc
add
mov
stos
push
add
jmp
pop
into
vmread
jo
pop
xchg
mov
add
inc
jnp
jle
shld
inc
add
in
mov
movb
add
cmp
add
jne
add
xchg
scas
add
add
cmpsl
cmp
add
inc
add
mov
mov
addb
das
cmp
dec
sub
or
mov
cmp
jge
cmp
pop
insl
sahf
adc
cld
cmc
sti
arpl
xchg
add
add
add
mov
push
jg
out
aas
add
pushf
shr
add
sbb
xchg
add
mov
add
shrl
add
das
xchg
int
add
das
aad
ret
xor
add
dec
mov
lea
test
int
or
sbb
xorl
imul
jb
lods
fcomps
add
mov
cmp
xchg
ja
ret
add
jmp
sub
add
mov
or
add
cmp
dec
jp
add
lcall
add
mov
aaa
insl
std
pop
or
sbb
mov
jno
dec
mov
fimuls
fbstp
add
pop
pop
cmp
cmp
sub
out
popf
push
add
add
xchg
add
add
fiaddl
mov
int
jne
jmp
bound
mov
add
lcall
mov
add
leave
push
add
dec
jge
insb
aas
sbb
push
xchg
cmp
dec
insl
or
xlat
add
scas
call
or
add
add
push
add
jns
sbb
add
push
cmc
sub
add
push
rolb
sub
mov
add
into
mov
push
popa
xlat
test
divl
xchg
cli
pushf
xlat
rolb
xlat
sbb
mov
aad
add
sub
add
add
push
add
lods
cmp
dec
sub
xchg
pop
add
push
add
add
add
mov
add
and
lret
inc
pusha
add
insb
loope
insl
out
insl
cmpsb
add
lock
sbb
cmp
push
add
xor
xor
add
js
add
adc
add
add
add
lds
mov
std
lcall
pusha
add
inc
xor
loope
jmp
add
sub
data16
ficoms
or
sti
add
pusha
add
add
mov
mov
movb
push
add
lds
mov
fidivrs
add
add
cltd
rcr
add
add
push
add
sub
cld
push
mov
enter
mov
cmc
xorl
add
lods
xor
cmp
add
pop
cmp
inc
lret
inc
add
add
xor
ret
pushf
shll
mov
lock
and
scas
imul
int3
int
dec
pop
mov
xchg
add
and
add
mov
and
ljmp
test
sub
add
js
add
sub
mov
frstor
cld
pop
loop
daa
mov
pop
xor
jp
dec
mov
adc
mov
imul
add
mov
cwtl
pop
inc
add
pop
jge
add
movsl
testb
xchg
leave
push
add
jp
shll
out
jge
ficompl
mov
or
es
addl
add
add
jg
outsl
loop
cld
push
fldt
add
add
data16
add
add
testb
jmp
jle
mov
add
in
and
xchg
imul
jbe
mov
repz
add
ror
pop
jnp
insl
inc
push
add
scas
repnz
lods
cwtl
mov
scas
add
or
cmp
add
cltd
popa
repnz
dec
cmp
lock
add
add
mov
cmpl
pusha
add
xchg
add
add
add
mov
lret
push
add
jl
xchg
lret
xorl
add
fildl
adcl
cltd
xor
jp
cld
cmc
or
sahf
lock
mov
mov
add
sti
aam
xorl
sti
cmpsl
mov
cmp
ja
xchg
add
push
add
add
add
fbld
int3
xchg
add
mov
loop
ret
in
xchg
rolb
xorl
mov
loop
adc
inc
add
mov
les
mov
add
lea
add
imul
mov
push
outsb
jmp
or
add
in
loop
addb
or
arpl
xor
xchg
jmp
fistpll
insb
adc
incl
mov
and
int3
pop
lock
and
mov
cs
add
add
add
add
stc
out
scas
sahf
pop
mov
inc
add
loope
add
nop
add
lea
loope
dec
and
xchg
add
inc
cmp
add
sbb
and
jp
add
add
mov
and
data16
push
inc
add
jl
add
aam
sub
xchg
lds
adc
adc
fs
push
add
mov
outsl
in
vphadduwd
add
cmpl
jmp
mov
and
mov
add
push
stc
add
push
xlat
stos
dec
mov
cli
pop
mov
inc
add
add
add
pop
aad
xor
movsb
add
adc
scas
rolb
dec
cli
xor
and
rolb
sub
add
mov
pop
rolb
add
add
add
lods
lods
cmp
je
movsb
add
pop
mov
xlat
arpl
push
jl
and
push
add
add
icebp
inc
add
mov
add
pop
jp
cmc
pop
aam
dec
aam
push
insl
mov
cs
or
mov
mov
dec
push
stos
mov
js
add
out
flds
test
roll
in
arpl
add
rolb
xor
fnstsw
in
stc
in
scas
testb
add
mov
out
popf
rolb
js
xchg
add
inc
mov
push
jno
add
adc
mov
add
jno
jns
add
mov
jp
add
add
jae
pop
mov
jns
push
cld
das
dec
or
dec
push
add
add
out
xchg
lock
out
loopne
cmp
add
inc
test
leave
mov
data16
inc
fstps
add
int3
xor
lret
dec
cmp
add
movsl
push
or
in
ljmp
add
adc
rcrl
add
mov
adc
testb
add
add
addr16
xor
int
push
add
xchg
add
add
insl
sub
mov
add
mov
add
dec
pusha
add
adc
and
mov
adc
add
mov
push
into
bound
mov
mov
add
add
add
pop
pop
push
add
add
arpl
mov
jno
popf
push
into
fcompl
movsb
add
jge
ret
jb
and
xor
and
pop
xor
rolb
xchg
add
add
push
add
fisubl
add
lods
pop
iret
push
das
add
and
mov
add
aam
jb
subl
push
add
mov
das
dec
les
lock
mov
sub
add
add
mov
pop
shl
add
add
add
add
jb
xor
nop
add
add
mov
xchg
pop
sub
fadds
add
bound
mov
mov
push
add
call
fisttpl
in
dec
mov
mov
cltd
mov
add
add
add
add
jb
clc
fisttpll
inc
inc
add
push
add
xor
sub
jecxz
add
or
ud2
push
out
xchg
fwait
inc
mov
inc
out
insb
jae
add
sbb
hlt
add
push
xchg
and
mov
inc
push
pop
push
add
mov
fcoms
add
je
aaa
int
ret
scas
jmp
fidivs
or
and
xchg
mov
sbb
xchg
icebp
sbb
add
xchg
mov
or
rolb
add
mov
adc
mov
xor
add
adc
aam
inc
add
xchg
aad
mov
out
add
std
movsb
add
add
rorl
cwtl
dec
jno,pt
clc
lret
sub
add
cltd
xchg
aad
pop
sbbl
add
cmp
mov
add
cld
jae
add
xchg
insb
and
cwtl
mov
xor
add
add
fwait
int
movb
add
add
ljmp
pop
pop
es
add
adc
add
adc
xlat
pop
cmp
test
xchg
xchg
add
mov
add
or
testb
loope
add
add
add
dec
mov
jb
xchg
mov
or
add
scas
out
mov
mov
orl
jle
add
xchg
mov
sub
xchg
mov
add
add
add
mov
add
jns
add
std
xor
mov
sbb
add
add
jp
leave
in
in
and
mov
leave
test
jle
add
xlat
les
mov
pop
je
dec
rolb
rolb
add
add
test
and
lcall
pmulhrw
push
movsl
daa
dec
test
add
inc
add
cmp
subl
mov
test
mov
