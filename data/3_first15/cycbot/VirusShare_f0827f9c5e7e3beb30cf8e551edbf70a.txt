inc
cwtl
into
dec
fsts
mov
jmp
aas
stc
pop
rorl
inc
add
push
jbe
adc
sbb
bound
jno
aas
pop
nop
inc
ret
pop
fadd
mov
or
add
shr
mov
xor
and
call
jge
add
add
add
add
or
arpl
add
ja
cmpsb
leave
repz
jno
mov
stc
cmp
outsl
push
inc
add
push
cmpsl
inc
fs
push
sub
add
dec
dec
sub
pop
mov
lods
mov
insl
filds
adc
adc
call
dec
sub
jge
cwtl
xchg
push
mov
pop
gs
mov
mov
xor
cld
and
mov
imull
nop
adc
and
outsb
test
add
jge
add
popa
sub
pop
push
iret
mov
push
jbe
bound
imul
push
fs
and
add
jns
ja
dec
mov
incb
or
rcll
inc
add
xor
push
movl
cs
push
mov
iret
sti
jle
fs
pop
sti
clc
popa
into
lods
je
xor
mov
loope
sub
js
lcall
fdivr
jle
xchg
xchg
clc
and
rolb
sbb
cs
inc
add
sahf
add
out
xor
cli
jg
dec
fcoms
leave
ret
add
add
sbb
movsb
pop
repz
jb
mov
fstp
rcll
aaa
jnp
stos
xchg
sub
ja
movsb
rolb
mov
adc
mov
add
cmpsl
icebp
test
push
test
adc
mov
cld
add
addb
test
and
out
test
add
test
pop
cltd
mov
jbe
mov
dec
and
cmpsl
inc
and
xchg
je
add
leave
jle
jmp
cmp
pop
mov
add
dec
sub
jle
cmp
dec
sub
ljmp
out
cmp
jnp
movsl
adc
lods
or
fldcw
mov
or
push
add
adc
mov
jp
push
add
jmp
dec
jmp
cvtdq2ps
sub
dec
imull
xchg
mov
test
fisttpll
xchg
out
xchg
test
mov
push
movsb
data16
repnz
stos
or
outsb
shll
mov
add
sub
rolb
aaa
cwtl
inc
cwtl
pop
jmp
movsl
pusha
add
lods
ret
stos
popf
pop
pop
mov
loopne
inc
call
push
imul
loope
movsl
ret
jb
hlt
pop
fsubrp
mov
add
xchg
cmp
add
or
mov
fwait
push
jo
and
in
adc
es
xchg
scas
sbb
sbb
and
es
push
add
jno
cli
std
shrl
int3
in
movsl
push
inc
xchg
mov
add
push
das
lods
jno
insb
mov
loop
fldenv
inc
add
and
test
aam
loope
cmp
add
and
dec
into
or
sbb
lods
or
ja
test
mov
sbb
outsl
jnp
cmp
push
rcrl
mov
outsb
cmpsl
mov
mov
mov
addr16
in
int
pop
adc
test
subl
stc
imul
js
or
or
jge
addr16
push
clc
mov
and
movsb
sbb
movb
decb
scas
popa
jb
scas
data16
inc
add
add
mov
add
sub
add
stos
popa
in
fmull
rsqrtps
inc
add
cmp
dec
in
aaa
adc
sbb
mov
jbe
cmc
jp
je
cmp
dec
mov
xor
dec
pop
push
frstor
add
mov
jg
test
cltd
jb
ljmp
add
jbe
jp
xor
and
lods
inc
add
add
test
lods
add
icebp
adc
stos
pop
xchg
test
movsl
inc
in
lcall
shll
fnstenv
inc
add
repnz
pop
sub
aaa
pop
adc
div
sub
xlat
pop
je
rolb
xchg
mov
pusha
add
pop
xchg
cmc
push
nop
mov
dec
push
in
and
lods
arpl
lcall
in
cld
cli
pop
push
popa
xchg
jmp
lret
sub
movsl
int
add
add
ret
inc
add
ljmp
sets
sbbl
std
in
mov
add
insb
bound
pop
jb
jmp
push
out
cli
pop
test
cmp
insl
iret
xchg
les
push
pop
faddl
or
outsb
stc
cmpsl
sahf
test
ret
add
add
loope
sahf
cmp
xchg
or
sbb
cmp
fisubs
rolb
outsl
aad
mov
pushf
sub
push
or
inc
pop
sbb
cltd
sbb
test
rol
sahf
push
sbb
inc
stc
repnz
adc
and
je
dec
pop
in
lods
or
jge
adc
es
popw
dec
or
mov
inc
add
ljmp
jecxz
cmp
or
push
loope
add
addl
cld
out
movsb
xchg
jo
test
sbb
push
add
add
lret
test
sbb
cltd
fildll
sbb
in
jecxz
add
add
add
addb
rorl
enter
lods
or
sub
stc
pop
ret
inc
add
jmp
cld
rolb
add
gs
or
rolb
mov
lea
icebp
pop
lea
and
or
inc
xchg
movb
negb
or
and
lods
sub
daa
cld
fst
ret
sar
mov
xchg
cmp
jne
inc
mov
lret
cwtl
insl
adc
insl
lea
jns
movb
wbinvd
push
js
add
adc
xchg
dec
hlt
lahf
push
mov
inc
add
icebp
int
fists
push
push
xlat
add
xor
cltd
inc
add
xchg
and
aad
inc
and
ret
popf
ljmp
push
add
and
jmp
adc
icebp
inc
add
xor
jecxz
add
scas
mov
sbb
add
adc
or
dec
les
fsubrl
outsl
mov
add
push
sbb
inc
add
stos
aam
ja
insl
test
sbb
call
push
insb
and
into
loopne
inc
add
out
add
pop
mov
in
das
addr16
daa
pop
inc
add
mov
js
adc
fdivrl
mov
add
dec
out
jecxz
push
mov
sti
or
leave
dec
sar
add
mov
gs
and
imul
pop
adc
pop
pusha
add
or
fisubrs
fldl
movb
and
cmpsb
dec
pop
cmp
inc
add
icebp
dec
rolb
testb
ret
fisubl
xor
push
fcoms
add
or
lock
andw
and
ret
movsl
cmp
cmp
add
jae
or
sbb
sbb
out
and
lcall
jo
in
adc
push
shll
adc
pop
cwtl
mov
loopne
lea
out
leave
lret
in
test
mov
pop
popf
das
enter
or
add
popf
andl
add
call
jo
data16
jle
rcl
lods
pop
gs
xor
push
mov
adcl
fstpt
add
or
outsl
xchg
xchg
icebp
jge
add
ss
jg
cltd
lret
add
mov
cwtl
xchg
cmp
push
xchg
or
add
push
pusha
add
scas
fists
cmpsb
add
addb
cmpsl
icebp
movsb
es
cmp
lret
jbe
xchg
sahf
arpl
cmp
mov
imul
addb
shlb
rorb
stc
rorl
xchg
and
push
jg
fstps
adc
xchg
out
push
pop
pop
cwtl
jmp
add
out
dec
mov
or
movsb
add
add
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
lret
mov
inc
add
mov
xchg
ror
mov
sbb
jno
xchg
mov
ja
aaa
dec
movaps
and
jno
add
das
jo
push
dec
or
mov
xor
inc
sbb
dec
add
cli
and
xor
scas
pop
ja,pn
pop
mov
das
mov
adc
cmp
std
js
imul
sbb
xchg
hlt
dec
out
stos
adc
or
lret
pop
mov
aam
inc
add
out
shrl
jp
shll
test
push
adc
outsl
ret
mov
mov
frstor
lods
push
iret
pop
mov
jmp
cltd
fiaddl
and
mov
ds
xchg
jb
jno
add
add
jmp
xchg
jl,pn
stc
mov
and
mov
pop
ret
and
and
in
add
xchg
addb
xchg
dec
or
int
jl
shl
in
ret
jbe
sub
lret
and
nop
cmp
inc
add
cmpsb
das
enter
sub
lods
fwait
jo
aam
fwait
test
mov
mov
add
add
rcll
movb
ret
sahf
int
lahf
dec
das
adc
and
ja
inc
repz
sub
scas
test
pop
pop
repz
xchg
pop
xchg
lcall
movsl
stos
cmp
or
cli
mov
or
pop
sbb
add
jp
add
lock
jp
sti
pop
add
cmp
add
xchg
dec
fcoms
or
aaa
jno
adc
xor
jno
repnz
cmp
ds
outsl
pop
pop
daa
push
inc
add
cli
push
mov
xchg
jno
jg
xor
mov
add
cwtl
lods
loope
add
movsb
lcall
sub
add
popa
pop
inc
lret
pop
int3
jmp
mov
add
add
pop
jg
push
rcrl
mov
add
inc
dec
pop
mov
xor
fwait
imul
test
aad
cmp
add
xor
enter
mov
add
add
xchg
ds
cmp
fidivl
mov
mov
or
movsb
inc
shr
mov
xor
cmp
push
cmp
push
add
shl
inc
jl
mov
add
xchg
popa
xchg
aas
popf
mov
mov
jbe
or
lahf
add
popa
jle
pop
lods
rorl
sahf
std
mov
pop
mov
addr16
ret
jae
add
dec
fwait
test
mov
jecxz
mov
fwait
push
push
addb
sub
cmp
mov
call
or
pop
inc
add
inc
mov
inc
add
add
stos
dec
jnp
popf
jl
jno
push
cs
push
aad
cmp
xchg
loope
fcmovb
inc
add
loope
add
inc
add
xchg
sbb
icebp
push
dec
sahf
test
sti
mov
add
sti
popf
lret
xchg
mov
aam
arpl
or
scas
jl
lahf
test
in
jae
jl
ret
add
add
pop
pop
and
incb
add
or
sub
in
stc
sub
int
sub
leave
and
in
aaa
and
xorl
fiadds
test
ret
add
div
movsb
sbb
cmc
mov
add
or
jno
dec
or
cmp
jge
jb
or
add
or
xor
dec
addb
lock
mov
cmpsb
jge
mov
add
dec
in
dec
adc
imull
jo
jns
ss
inc
add
jge
scas
data16
sbb
pop
std
sbb
arpl
movsb
mov
mov
cltd
pop
jge
jo
rol
push
add
push
fs
sti
lret
rcrl
adcl
sub
in
outsb
mov
jge
pop
and
in
rcrl
mov
pushf
pop
fisttpl
mov
ljmp
xchg
in
jno
pop
pop
dec
or
jbe
mov
stc
dec
inc
add
push
add
push
lret
lea
lret
dec
aaa
ljmp
pop
test
sub
sbbl
dec
push
add
and
insl
loope
repnz
add
loope
jb
add
xchg
push
dec
rcll
jecxz
cmp
jns
ljmp
add
outsb
mov
addb
inc
mov
movb
mov
push
add
mov
test
in
add
mov
mov
add
fmull
pop
bound
daa
or
stos
push
or
xchg
je
js
pushf
push
mov
sub
xchg
fs
add
add
or
mov
add
jnp
sbb
ja
push
mov
pusha
add
push
scas
enter
inc
outsb
push
pop
mov
add
adc
mov
jge
xchg
add
pop
or
jle
add
push
xchg
ret
addb
pushw
add
dec
repnz
adc
cmp
test
addb
add
cmp
lret
dec
je
mov
arpl
add
shrl
push
enter
add
mov
dec
daa
subl
leave
cmp
dec
jecxz
pop
jns
xor
out
call
jns
loop
pop
mov
add
add
mov
xchg
out
scas
mov
adc
jbe
push
add
loopne
xchg
cmc
sahf
mov
lahf
xchg
xchg
mov
iret
insl
in
xor
addb
sub
cmpsl
jg
lods
fimull
sbb
ljmp
mov
imul
aas
and
add
testl
xor
push
lock
mov
push
inc
sbb
ret
mov
repnz
rolb
adc
add
xchg
cmp
lock
mov
scas
fcoml
insl
mov
mov
mov
scas
out
scas
pop
lcall
lock
repz
outsl
rorb
jl
lock
sub
inc
add
add
lcall
outsb
mov
clc
jno
stos
pop
push
xor
js
and
aad
add
sub
icebp
mov
xchg
add
add
inc
in
sbb
pop
test
test
repz
add
stos
cli
pusha
add
and
fildll
call
or
daa
dec
adc
clc
add
cmp
add
jne
pop
sbb
push
sarl
xchg
js
test
out
ret
cmpsl
cmp
mov
jne
sahf
xor
in
loopne
test
sub
sahf
ret
push
js
or
mov
mov
jge
and
lea
pop
jb
fwait
and
or
in
js
mov
jg
mov
es
jmp
cwtl
js
dec
loope
push
int
fs
inc
add
mov
xchg
xor
xor
mov
xchg
jmp
jmp
loopne
or
jb
lods
in
pop
loop
and
add
int3
mov
ret
and
mov
xor
add
fadd
add
jecxz
movsb
pop
inc
arpl
lods
mov
out
in
or
jbe
mov
sbb
xor
je
push
stos
push
mov
rcr
aam
dec
xor
mov
cmp
adc
pop
jbe
call
jmp
adc
aad
and
mov
loopne
adc
xchg
push
push
mov
sbb
or
inc
push
outsb
cltd
push
pop
sbb
add
in
clc
and
mov
lods
push
fwait
jbe
mov
imul
add
movsb
jmp
cmc
cmp
pop
out
shll
outsb
into
outsb
fchs
sub
stos
inc
add
xchg
sub
iret
adc
lock
xchg
dec
dec
jb
testl
mov
jp
jo
sti
cwtl
push
in
inc
add
mov
or
in
mov
pop
cmp
cmp
cmp
xchg
pop
in
add
sbb
mov
subl
sub
mov
push
in
mov
cwtl
cld
add
add
loopne
inc
adc
ljmp
ja
in
jo
mov
push
pop
adc
scas
xor
jp
int
add
iret
push
in
out
and
mov
rolb
loope
and
add
jl
cltd
jl
cmp
cmp
cmp
call
add
dec
or
add
int3
adc
movsb
jbe
pop
inc
fcoms
in
add
sarb
push
daa
sub
xor
addr16
outsl
xchg
mov
insl
mov
iret
je
add
pop
scas
fdiv
hlt
ja
jnp
sub
jl
push
add
sbb
jbe
sub
and
mov
mov
or
inc
push
pop
lcall
int3
or
loope
fcmovb
adc
push
cmpsl
push
or
add
cld
dec
jae
dec
out
ja
jle
out
dec
pop
aad
dec
mov
cmp
and
add
push
add
lock
cld
pop
fisubl
addb
sub
scas
in
push
les
push
sub
or
sarl
lahf
lret
push
pop
movb
gs
sub
test
add
add
pop
mov
test
jns
repz
enter
push
rolb
push
dec
lock
addl
xchg
dec
test
cwtl
jno
add
sub
mov
push
or
lcallw
rorb
or
xchg
lods
scas
push
cmp
adc
add
add
mov
push
mov
add
mov
add
mov
add
aad
out
jmp
pop
out
sbb
shrl
stos
mov
sub
push
pop
xor
leave
dec
leave
push
cltd
push
pushf
mov
cli
add
pop
push
cmp
pop
daa
stos
call
test
mov
js
pop
dec
xchg
add
lret
cli
stos
aad
sub
mov
daa
dec
and
mov
mov
fnstenv
cmp
fstl
push
test
sub
cmp
ljmp
out
stos
lret
arpl
mov
add
lds
mov
mov
sbb
pop
loop
jnp
adc
add
hlt
mov
flds
ret
sti
inc
add
sub
aam
cli
mov
push
add
dec
shrl
and
jmp
or
push
xor
add
in
xor
lock
inc
add
subl
shlb
cwtl
addl
dec
shll
sbb
ljmp
or
imul
in
call
out
test
xchg
test
jno
pusha
add
dec
pusha
add
add
dec
inc
add
adc
and
xor
pop
mov
call
push
xor
shll
insl
fldt
add
in
jbe
in
rcll
jae
add
jmp
mov
shrl
aas
sbb
xchg
pop
xor
ror
test
lods
sbb
pop
lahf
jns
add
sub
jecxz
sub
js
lds
cmp
jmp
sbb
shl
pushf
inc
add
push
das
sub
loopne
arpl
rolb
cmp
imul
jb
add
jb
inc
or
es
ljmp
pop
test
mov
inc
add
adc
push
add
insl
pusha
add
add
enter
xor
inc
push
and
sbb
rclb
and
mov
jb
push
push
leave
les
mov
inc
jge
push
adc
jle
movsl
insb
pop
pop
jmp
popf
jnp
push
cmp
pop
outsb
mov
jae
jmp
mov
rcll
ret
pop
popa
scas
push
jo
je
push
ljmp
movb
sarl
and
jb
cmpsb
mov
pop
addb
mov
xchg
sub
xchg
push
insl
mov
inc
out
rolb
xlat
enter
bound
cmp
movsl
ds
jo
lahf
sbb
cmp
xchg
pop
push
sbb
xchg
shl
sbb
add
movsb
xchg
repz
sbb
push
sbb
insl
pusha
add
cmp
enter
dec
movb
adc
push
iret
daa
adc
das
je
test
adc
cmp
stos
mov
leave
xchg
lock
inc
add
sub
pop
push
add
cmp
pop
adc
mov
out
jns
or
add
inc
add
xor
lock
sbb
sti
fcoms
mov
adc
outsb
fcompl
jb
loopne
cmp
mov
and
inc
test
cs
add
addb
fcompl
faddl
and
pop
out
inc
add
movb
adc
add
imul
jne
add
and
jae
push
sub
lods
addr16
sub
je
call
add
xchg
nop
clc
or
add
fwait
data16
ds
xor
imul
and
lock
or
in
push
nop
sahf
icebp
xchg
push
imul
aas
sahf
cmpsl
scas
sub
and
test
je
iret
mov
data16
sub
adc
shrl
push
inc
add
fs
dec
insl
mov
jmp
xor
push
test
or
mov
xchg
cmpsl
addb
jmp
rcr
jb
jo
add
icebp
and
movsb
insl
sbb
pop
sub
jo
cmc
dec
mov
add
sbb
mov
and
mov
inc
add
pop
outsl
aaa
outsl
push
xor
xor
sbb
push
movsb
in
jb
sbb
popf
dec
pop
sbb
es
add
addb
and
pop
add
inc
arpl
and
inc
add
add
and
xor
outsl
and
push
cmp
movsl
cmp
jb
xchg
or
ret
pop
push
sahf
rcr
lret
and
addb
scas
xchg
cmpsl
lds
cmc
mov
mov
cld
sbb
jmp
stos
mov
push
xchg
in
mov
adc
cmp
insl
rolb
inc
add
cmc
int
std
jo
lds
fildl
add
addb
test
add
mov
jecxz
xchg
adc
sbb
inc
dec
mov
shl
fisttpl
pop
sti
sbb
inc
add
dec
xchg
push
add
movb
add
add
xor
inc
add
dec
mov
loop
test
xchg
mov
data16
adc
pop
out
inc
add
fsts
out
xchg
and
sahf
aas
xchg
leave
add
xchg
adcl
notb
xchg
dec
mov
add
mov
dec
pop
lea
add
add
push
dec
outsl
mov
push
shll
xor
cmp
outsl
stc
sahf
cld
sub
or
sub
js
sbb
repnz
lods
add
testl
add
adc
cltd
int
mov
sub
loop
cmp
cmc
ret
xchg
push
maxps
mov
lcall
mov
hlt
xor
push
ss
in
in
stos
push
add
push
pop
ljmp
lods
jp
ss
jo
add
sti
sub
cmc
idiv
fsincos
mov
adc
pop
sbb
add
or
mov
stos
dec
in
loop
rcll
push
mov
lahf
and
mov
mov
push
mov
lahf
mov
inc
add
cli
mov
xchg
push
enter
gs
addr16
jg
add
mov
and
add
add
inc
add
jae
movb
arpl
fstp
adc
hlt
mov
push
es
repz
les
inc
add
cmp
loope
fwait
xchg
sbb
lea
lret
pop
push
outsl
loopne,pn
add
sbb
ja
cmpsb
cld
xchg
rclb
inc
add
testl
ret
add
outsb
or
mov
das
add
nop
cmp
shlb
push
add
inc
repnz
pop
icebp
insl
cmp
add
insb
mov
sub
iret
push
data16
cmpsl
icebp
arpl
dec
das
ja
and
sub
push
cli
xchg
lret
pushf
pop
mov
pop
shlb
inc
pop
loop
call
mov
in
jbe
xchg
xor
fdivl
adc
adc
scas
in
mov
test
sti
je
test
int
outsb
popf
sahf
cmp
cltd
cmpsb
sub
aaa
adc
outsb
in
daa
js
clc
lds
xor
test
mov
js
adc
addb
and
andl
sub
adc
add
mov
push
lods
adc
and
bound
ficompl
ret
push
add
add
jo
lods
push
add
add
push
mov
inc
jb
inc
add
pop
mov
addb
push
popa
xchg
aam
lret
int3
and
add
scas
dec
pushf
pop
dec
je
js
or
enter
je
add
lret
inc
add
stos
inc
rcll
cmp
je
mov
pop
push
rol
sub
outsb
sbb
pop
js
mov
jge
and
jmp
mov
movsl
or
cmp
mov
icebp
add
cmp
hlt
push
mov
data16
icebp
cltd
push
xchg
rcrb
lret
cmp
icebp
lea
test
addb
lret
test
cmp
sbb
mov
test
lret
xchg
xor
enter
pop
enter
add
cltd
sbb
mov
sahf
pop
mov
call
ret
pop
xor
xchg
add
xchg
std
inc
add
xchg
dec
jl
int3
mov
dec
imul
sbb
jge
sub
adc
popf
and
in
addb
les
mov
jno
add
pop
cmp
adc
mov
lcall
pop
xor
and
jge
scas
mov
shll
pop
sti
sub
add
add
add
pop
push
lods
out
test
lds
lods
xchg
xchg
xchg
movsl
aad
mov
sub
cltd
roll
pop
mov
inc
pop
je
xchg
test
testb
add
mov
add
shll
fisttpll
rorl
add
loope
push
cmp
lahf
jg
add
lret
jns
ljmp
adc
movsb
subl
les
cmp
inc
inc
add
dec
into
out
mov
xor
xor
fsubrl
pop
sahf
inc
mov
pushf
jge
sbb
xchg
pop
add
jne,pt
es
jmp
pop
ja
fs
jmp
xchg
sub
iret
ss
xor
mov
addr16
fcoms
es
xlat
cmp
jmp
and
fiaddl
bnd
xchg
cld
mov
sub
sbb
xchg
das
cmp
add
sahf
add
jb
sub
mov
mov
ror
mov
pop
jnp
push
jbe
xor
std
jmp
daa
pop
jmp
scas
cmp
loopne
aas
xchg
fisttpl
jg
jg
out
sbb
in
popa
call
lock
shr
jo
out
xchg
inc
add
xor
in
rcrb
sub
mov
jmp
int
add
into
sbb
jecxz
add
ret
cs
out
jl
add
dec
jecxz
pop
mov
xor
xlat
add
jmp
movl
imul
mov
nop
fdivrl
pop
cmp
lea
mov
mov
ja
mov
adc
jno
nop
add
punpckhbw
and
and
add
call
hlt
push
xchg
addb
pop
xchg
pop
or
push
add
data16
push
popa
push
sbb
inc
xchg
push
cmovns
adc
out
push
cmpl
mov
rcrl
lods
xlat
mov
addb
add
pop
popf
or
push
clc
inc
push
jb
jg
stos
cltd
addr16
lock
add
hlt
jnp
mov
addr16
push
jge
lds
xor
mov
or
and
add
jmp
rolb
lret
hlt
pushf
sbb
movsl
imul
mov
cmp
stos
cwtl
loope
or
mov
out
les
xchg
mov
cmp
clc
sub
decl
imul
lahf
das
movl
fsts
sub
roll
scas
xchg
pop
xor
das
sahf
call
pushf
push
mov
push
adc
xor
push
mov
dec
sbb
pop
add
cmpsb
addr16
xor
sub
cmp
in
test
jle
push
cmp
jmp
lcall
xchg
xor
addl
sbb
add
les
and
pusha
add
in
mov
push
xchg
mov
dec
fcoml
mov
lret
jne
or
push
add
add
adc
push
cmpsb
out
pushl
adc
push
lcall
mov
pop
push
lret
push
cs
inc
add
int
add
xor
stos
push
adc
test
repz
pushf
out
pop
stos
or
or
xlat
jns
insl
pop
pop
add
mov
bound
xchg
test
add
inc
inc
add
into
sub
movsl
lret
jecxz
aas
repz
aad
add
pop
sbb
mov
out
add
mov
mov
fisttpl
imul
xchg
xor
sbb
xchg
cs
xchg
and
sub
mov
sub
shlb
aam
inc
add
dec
adc
add
fldl
push
mov
mov
ljmp
nop
xchg
in
jecxz
sub
test
xchg
inc
and
xor
push
xor
lret
xchg
lret
lock
push
lods
movq
repz
push
cmc
and
stos
ja
jbe
fisubl
clc
popf
cmpsb
sti
fwait
xor
out
fwait
pop
ss
popa
into
lock
call
andl
mull
add
in
add
mov
xchg
add
cwtl
fucomi
popf
pop
push
daa
sub
push
pop
sarb
scas
push
test
insl
sbb
addb
xchg
or
cmc
incb
sub
adc
add
es
jecxz
push
mov
add
fsubrl
scas
dec
and
out
out
jl
and
add
int
sub
addb
xorl
out
mov
mov
ret
xchg
xor
push
xchg
add
pop
les
mov
dec
ret
std
and
inc
add
add
mov
insl
icebp
cmc
rcr
pop
inc
add
add
jne
aaa
pop
xchg
or
mov
js
fidivl
fcoms
mov
push
jno
not
mov
cmc
inc
add
inc
add
hlt
call
in
cwtl
mov
lret
mov
cmp
dec
or
cs
add
xor
and
cmp
xchg
fs
or
incb
lret
pop
call
inc
rolb
jge
incb
add
mov
mov
addb
daa
call
dec
scas
test
cmp
jae
add
adc
xchg
call
add
add
add
fcomps
jl
add
aad
fcmovne
sbb
mov
cwtl
jnp
jl
sbb
add
test
ja
mov
cmc
call
dec
loop
dec
and
pop
jb
mov
pop
inc
add
test
adc
cmp
add
mov
pop
pop
cltd
stc
mov
aam
xor
imul
fwait
movb
insl
scas
mov
pop
or
dec
repnz
sub
or
repz
clc
pop
jecxz
add
add
pop
mov
cmc
insl
xchg
stc
sbb
out
push
or
xchg
xchg
les
loopne
rolw
idivl
mov
roll
addb
add
mov
fadds
pop
adc
push
xchg
sahf
inc
add
and
sub
scas
into
push
dec
daa
mov
cld
std
leave
idivl
dec
daa
bound
mov
ds
push
xor
push
outsb
sbb
jnp
sarl
lret
ja
ss
add
sbb
pop
push
ret
test
cmpl
lahf
push
add
sub
mov
repnz
movsb
inc
mov
and
push
test
xor
and
ja
flds
mov
add
out
mov
dec
mov
jge
or
push
add
nop
xchg
cmp
pop
aaa
lea
pop
enter
jle
loope
xor
sub
mov
fs
mov
mov
push
mov
leave
add
add
iret
jmp
sub
xor
fstpt
repz
sahf
fwait
cmp
mov
jo
pusha
add
js
xchg
ja
cmp
dec
and
negb
je
int
push
adc
ds
mov
ljmp
aas
ret
daa
fnstenv
rcr
out
mov
mov
xchg
cmp
lret
lahf
aam
imul
mov
jbe
jo
jmp
pop
pop
in
sub
add
xor
out
into
jle
lret
pop
cmp
movb
dec
push
gs
mov
cmp
adc
les
or
mov
add
add
sub
cld
ret
add
pop
dec
pop
rcrb
add
pushf
or
sub
or
rolb
push
imul
mov
xchg
clc
push
std
outsb
xchg
in
in
fisttpl
dec
cs
jecxz
sarb
mov
add
rcrl
rolb
push
pop
clc
aas
jg
add
in
fs
pop
lods
sub
adc
subl
xor
das
jns
repnz
fsubr
testb
dec
mov
call
pop
fadd
pop
mov
lret
cld
addb
push
sub
mov
je
aaa
xor
imul
and
mov
jne
imul
cltd
lock
inc
addb
add
shlb
add
cmp
add
and
jae
or
mov
lods
mov
dec
cmpsb
aaa
cmc
inc
add
arpl
pop
mov
jns
xchg
js
pop
out
fldl2e
cmp
pusha
add
mov
add
divb
int3
pop
cmp
pcmpgtb
lds
sarl
pop
mov
add
divl
add
addb
adc
xchg
jnp
data16
sbb
stc
mov
fsubs
add
jp
ja
fxtract
fisttpl
mov
in
lret
xchg
xchg
and
jg
add
mov
add
pusha
add
insb
jb
jno
lret
add
mov
xchg
in
pop
lock
cmpl
sub
add
mov
movsb
jnp
addr16
push
sub
dec
mov
cmpsl
push
rolb
jg
js
cmp
or
leave
in
sbb
mov
out
sbb
movsl
enter
mov
inc
add
mov
mov
insl
cmc
adc
jge
and
dec
xor
inc
scas
sti
mov
imul
push
push
das
adc
mov
inc
loop
mov
mov
jo
mov
pop
gs
shl
ljmp
pop
lret
cmp
je
dec
hlt
push
cs
out
mov
sub
rcrl
popf
mov
in
rolb
xchg
lret
jmp
leave
xchg
test
xor
xor
dec
add
jnp
popa
lret
mov
ja
stos
lret
mov
fstpt
fists
repz
add
add
cli
sbb
gs
es
push
out
dec
mov
scas
xchg
or
add
pop
push
and
jmp
mov
add
cld
push
loopne
dec
mov
add
test
adc
mov
loope
ror
mov
in
pop
sub
les
outsb
je
adc
pop
dec
out
insb
xchg
bound
cwtl
jge
ror
and
push
test
sbb
addl
bound
cwtl
pop
and
add
mov
xor
in
pop
xorl
xor
xchg
jp
and
cli
fsubs
movsl
xchg
mov
dec
in
pushf
rcll
jno
test
nop
sbb
and
push
jmp
add
sahf
aaa
movb
jl
out
add
aaa
xchg
cmpsb
enter
sti
cltd
xor
lret
jle
js
sbb
mov
add
inc
xchg
rcrl
cld
cwtl
lcall
jp
add
scas
push
or
stos
xchg
cmp
add
insb
out
cli
lds
sub
fstps
mov
jg
and
add
pop
sti
cmpsb
or
and
inc
insb
lret
sbb
add
sbb
pop
push
cmp
add
add
add
add
or
push
popf
negb
ja
divb
mov
mov
data16
jbe
or
add
insb
mov
add
dec
inc
add
push
icebp
repz
push
mov
arpl
push
mov
sbb
les
sub
pop
out
and
mov
inc
add
xchg
xchg
pop
sbb
orl
cmp
dec
mov
insb
pop
shll
push
imul
push
mov
int
add
push
mov
or
fisubrs
mov
sbb
into
mov
mov
mov
add
nop
lods
inc
add
sahf
and
dec
pop
mov
sbb
mov
fs
jl,pt
add
xchg
inc
add
cmp
mov
push
mov
ljmp
add
rcr
push
cli
cli
ret
pop
ss
fdivs
imul
fsubs
pop
mov
popf
arpl
shrl
lahf
cmp
xor
bound
ficoms
stos
imul
push
fists
repz
clc
and
out
mov
test
sahf
aam
add
xchg
out
std
pop
mov
test
out
call
int
lahf
movsb
push
sbb
xchg
push
andl
xchg
scas
mov
mov
test
js
pop
xor
add
sbb
add
xor
push
jge
or
dec
jl
cmpsl
pop
fiaddl
add
add
xchg
push
int
add
data16
jae
fnstcw
mov
mov
fucomi
sub
cs
pop
cwtl
xor
mov
mov
jno
movb
repz
mov
mov
hlt
cmpsb
mov
in
pushf
loop
inc
add
adc
lock
out
pop
push
xor
int
sub
or
in
scas
icebp
jne
mov
mov
fs
ret
sub
dec
rcr
xchg
and
or
testl
inc
add
shrl
ja
mov
sub
inc
add
adc
or
aaa
and
imul
push
and
cmp
add
imul
pop
fadds
aad
add
pop
jp
in
jl
add
cmp
lock
andl
pop
data16
inc
add
movsl
xor
xor
es
adc
imul
addb
xor
pop
cs
xor
push
lret
sar
fnsave
pop
fs
out
stos
scas
mov
push
mov
scas
cmp
sub
pop
adc
fildl
cmp
shrl
mov
add
sbb
insb
out
jp
rorb
mov
out
rcl
je
jecxz
sub
aam
jl
in
scas
pop
or
aas
cmpsl
fisttpll
mov
fmul
test
add
cmp
dec
or
add
mov
mov
pop
sbb
push
or
dec
mov
mov
cmp
inc
add
xor
cmp
ss
add
mov
add
out
movb
lahf
and
xor
loop
cmp
std
cmp
cmp
out
push
lods
jns
sbb
loope
mov
test
jb
js
sahf
add
sub
sbb
lret
test
es
pop
lcall
push
sub
and
dec
sbb
jmp
xor
les
addb
sti
cmpsl
pop
pop
lret
jp
lahf
pop
imul
cmc
cmp
pusha
add
in
cmp
inc
add
fwait
bound
cmp
mov
fsubrs
mov
out
mov
pop
lret
jno
add
into
mov
inc
add
xchg
sub
inc
add
ja
imul
dec
ja
add
jmp
je
add
sub
pop
in
adc
or
js
rolb
add
mov
xchg
data16
movswl
ljmp
fidivrl
xor
aam
xor
jo
add
addb
faddp
addb
inc
add
adc
ljmp
push
je
xor
cmpsb
fdivl
popa
out
xchg
mov
sbb
icebp
xchg
sbb
add
push
addb
pop
rorb
iret
add
dec
aad
incl
lcall
jnp
xlat
adc
mov
lods
idivb
sbb
shlb
mulb
add
out
rolb
aaa
pushf
mov
xchg
daa
fwait
test
ret
add
cmc
out
data16
jecxz
pop
loopne
push
or
pop
push
jg
pop
or
imul
dec
mov
test
add
and
sub
subl
add
mov
sub
add
inc
mov
std
test
jae
xchg
xor
dec
movsl
xor
add
add
icebp
xchg
or
or
cmpsl
popf
addb
push
jnp
rclb
mov
lahf
fisttpl
mov
and
lret
xor
mov
add
out
xor
hlt
loopne
adc
push
push
arpl
fldenv
add
or
pop
add
mov
addl
add
xchg
cmp
mov
call
mov
and
xchg
push
mov
xlat
cmp
dec
lcall
sub
in
xor
sbbl
inc
add
add
jge
and
add
dec
inc
or
cmp
lods
adc
mov
cmc
mov
xchg
test
daa
imul
add
xchg
dec
jno
mov
movsl
rorb
adc
pmuludq
dec
fstp
adc
adc
or
jmp
push
push
ss
cmp
aas
stos
xchg
clts
add
jb
add
ja
lock
mov
add
orl
fcoml
pop
sti
push
popf
push
addr16
add
jl
xor
add
test
xchg
mov
cmpsb
add
lock
testb
mov
sbb
pop
add
sbb
mov
call
xlat
es
jne
or
std
mov
xchg
adc
cmpsb
inc
add
jle
das
lahf
mov
mov
xlat
dec
push
sub
xchg
into
sahf
xor
movb
aaa
dec
pusha
add
call
ljmp
adc
cmp
lret
imul
cwtl
lret
lock
push
das
mov
inc
sbb
add
lods
aad
add
movb
std
les
popf
sub
cmpsb
sbb
pop
pop
daa
mov
jecxz
cmovb
psubusw
mov
adc
add
sbb
int
xchg
xchg
mov
fnsave
adc
std
cmp
xchg
and
pop
sub
es
xchg
push
push
push
inc
mov
loope
mov
imul
fisubs
or
rcr
aam
ss
cmp
popa
xchg
mov
cld
mov
and
pop
mov
push
gs
ret
aad
sub
ficomps
mov
addb
fildl
dec
lods
imul
cmp
xor
add
cwtl
mov
push
push
mov
pop
imul
js
push
lcall
inc
push
arpl
mov
add
add
xchg
dec
mov
lds
add
or
mov
adc
cmc
mov
mov
test
rclb
sub
pop
or
fcomps
push
test
pop
and
enter
aad
add
cmp
into
mov
ret
push
into
stc
lods
pop
mov
add
and
fsubrs
add
idivl
sub
push
add
in
or
stos
popf
addb
bound
inc
inc
add
call
or
cmp
std
std
jo
pop
into
outsb
cld
lods
sti
sub
xchg
sub
lock
outsb
pop
incl
add
mov
mov
adc
test
push
movsl
inc
add
enter
out
mov
or
xlat
push
ds
fcmovb
add
xchg
add
adc
fimuls
es
lods
es
add
sarb
imul
xchg
sub
pop
mov
pop
push
add
in
loopne
test
mov
pop
movsl
adc
xchg
je
repnz
insb
popf
cmp
call
add
aas
and
stos
imul
xor
into
sti
mov
cmpsb
clc
xchg
cs
jbe
adc
push
adcl
in
bound
dec
cwtl
pop
sbb
add
sub
push
pop
in
int
add
outsl
enter
and
pop
sub
pop
scas
xor
fld
add
adc
push
xor
ds
or
jno
mov
fwait
inc
add
mov
add
add
aad
cli
lret
movb
lahf
int3
addr16
push
dec
dec
inc
add
lods
push
adc
add
icebp
incb
pop
cmc
lret
loopne
sub
pop
jo
repnz
outsl
js
mov
mov
jns
testl
test
adc
add
xchg
xlat
jo
and
hlt
push
adcl
mov
shr
icebp
jp
pop
push
enter
mov
dec
and
inc
add
mov
mov
jb
mov
aad
add
add
add
sbb
or
jns
xchg
pushf
iret
ds
loop
insl
push
add
xlat
sub
test
out
or
inc
lret
test
push
or
fistpl
out
jmp
mov
fisttpl
mov
pop
dec
push
adc
xchg
idivl
and
adc
std
ret
bound
jne
pop
movsb
xor
movsb
sub
mov
ja
xor
outsl
sbb
cld
xchg
push
add
mov
sbb
adc
cmp
aam
in
jo
mov
fsubrl
xchg
fidivrs
lahf
jne
xchg
push
jle
jg
mov
lret
cmp
out
pop
xor
test
lcall
lcall
add
cmp
fidivrl
cmp
and
pop
jns
rolb
mov
fdivl
fistpl
test
mov
jne
push
or
xchg
and
popf
mov
popf
outsl
outsl
push
insb
ljmp
int3
jmp
add
inc
add
xor
sub
rcrl
repnz
repnz
loop
pop
outsl
jo
pop
in
addb
add
or
lcall
adc
xor
mov
imul
in
mov
ljmp
cmpsl
xor
add
jae
xchg
das
sbb
jle
aas
push
sti
dec
outsb
es
sahf
xchg
pop
pop
lea
xor
data16
je
add
sub
test
add
das
or
mov
push
lds
sub
mov
jmp
jo
or
jp
cmpsl
imul
dec
pusha
add
lods
pop
add
inc
jno
cmpsb
push
mov
add
mov
dec
inc
add
popa
leave
pop
icebp
pop
rcll
stos
addb
or
add
add
imul
adc
add
das
test
lahf
imul
sti
jecxz
dec
sbb
xor
push
pop
pop
xor
movsb
xchg
mov
imul
and
push
rcr
bound
mov
mov
jge
xchg
mov
test
adc
cs
pop
add
cli
cmp
mov
mov
mov
jns
xor
enter
push
lret
xor
test
sahf
lock
addb
xchg
leave
test
inc
add
adc
or
xchg
stc
negl
add
test
and
jae
pop
inc
mov
out
lahf
rorl
lods
pop
movsb
mov
stos
mov
fs
pop
dec
xchg
ret
rcll
xchg
jmp
add
push
ds
xor
cmp
and
aaa
sbb
sub
ss
add
add
jnp
inc
add
mov
add
ss
lods
push
fsubrp
fsubrs
cmp
fdivs
adc
scas
mov
jp
adc
lock
jg
fwait
xchg
push
pop
cld
jp
fprem
xchg
jnp
xor
insl
pushf
lret
mov
in
cmc
pop
ret
jecxz
mov
outsl
sbb
testb
xchg
fstpt
pop
scas
jbe
dec
sub
rolb
add
and
ficoml
adc
jbe
bound
dec
cmpsb
cli
sbb
cltd
popf
dec
stos
repnz
sti
out
idivl
sub
popa
jo
cld
sub
cltd
cmp
lods
jo
add
or
js
inc
add
lretw
pop
popf
push
add
add
jb
loop
adc
sub
lods
in
shr
mov
mov
add
mov
cmpsl
addb
test
ret
xor
addr16
popf
repnz
dec
scas
lret
pop
out
fcom
inc
cwtl
cmp
fwait
lds
push
mov
xchg
cmp
adc
bound
fmuls
mov
cltd
popf
rcrl
add
cmp
jmp
mov
or
mov
sahf
test
xor
add
add
xchg
mov
add
mov
sti
inc
add
xchg
jg
dec
sub
jl
pop
mov
xchg
fcompl
leave
cmp
pop
adc
add
into
xor
or
push
pop
push
outsl
pop
sbb
push
cltd
jmp
fisttps
jecxz
xor
cltd
mov
cmpsb
add
fs
add
cmp
or
mov
pop
dec
adc
mov
cmp
daa
inc
popf
and
lock
mov
jo
scas
aam
xlat
imul
jg
inc
mov
sbb
inc
pop
es
or
jecxz
jno
stc
cld
test
mov
mov
out
jbe
div
movb
add
ds
imul
adc
mov
je
add
sub
add
into
popa
mov
add
fstl
addb
and
fwait
jmp
jns
out
shrb
movsl
push
outsb
add
int
pminsw
jge
xchg
cmp
sub
in
test
inc
add
cmp
je
jmp
cwtl
fdivrs
arpl
or
adc
sub
jle
movsl
je
addr16
out
xor
lea
mov
or
xor
dec
pop
sbb
add
push
ds
cmpsl
add
jl
in
xor
inc
xor
adc
cmpsb
hlt
loope
daa
or
sub
mov
inc
add
and
pop
inc
hlt
add
out
enter
add
cmp
addr16
aaa
or
xchg
int3
pop
mov
sbb
sbb
ret
push
push
mov
add
cli
xchg
dec
adc
stos
out
jge
xor
push
cmp
ja
rolb
pop
mov
aad
sub
xor
jbe
mov
fwait
cs
bsf
out
mov
test
push
lret
xor
adc
cld
in
add
cmpsl
xchg
xchg
push
test
sbb
test
repz
add
and
popa
adc
xchg
enter
add
adc
push
out
inc
add
out
in
fdivl
fwait
dec
out
or
sahf
lds
add
adc
pop
mov
dec
cmp
mov
stos
gs
or
dec
adc
lods
test
jne
jl
adc
and
inc
add
dec
mov
mov
cli
cmp
xor
sbb
fwait
mov
inc
and
push
xlat
loop
sbb
cmpsb
das
scas
push
test
rolb
add
add
ds
scas
fsts
mov
mov
push
stos
ret
fdivrl
dec
xchg
sub
pop
andl
sub
pop
push
int
mov
jecxz
mov
dec
clc
pop
pop
add
movsl
dec
push
push
icebp
mov
sbb
lock
and
call
mov
dec
sahf
mov
in
mov
mov
inc
leave
jp
add
sbb
mov
inc
add
xor
mov
adc
inc
add
out
cmp
add
sub
mov
add
mov
jns
fstl
pushf
addl
mov
mov
dec
mov
mov
stos
mov
hlt
mov
mov
out
les
testb
xor
inc
daa
and
adc
outsl
or
daa
inc
add
rcrb
add
ds
xchg
sub
sub
xor
add
push
xchg
sti
addr16
dec
adc
mov
je
sub
test
xchg
dec
sbb
add
mov
out
dec
and
sti
and
data16
push
fidivs
add
aam
dec
dec
adc
sub
push
add
sub
mov
inc
add
jne
sahf
or
add
insl
insl
stc
xchg
int
jecxz
ljmp
bound
mov
jge
cmpsb
jmp
imul
movsl
inc
test
pusha
add
sub
pop
cmp
dec
push
pop
inc
mov
and
popw
rcr
or
adc
and
xchg
mov
ret
mov
shrl
adc
out
jne
xor
cld
out
lret
test
jle
add
inc
add
mov
add
in
jnp
inc
add
shll
rcl
int
jge
cs
jg
insl
pushf
int
cwtl
xchg
mov
add
aam
cmpsl
cmpl
push
sbb
call
jl
bound
imul
ret
js
sub
sbb
dec
push
xchg
mov
cmp
dec
ljmp
ja
scas
out
xor
les
sub
push
dec
adc
add
sbb
add
sarl
mov
push
jne
mov
sbb
jb
mov
mov
leave
scas
and
and
jp
loopne
dec
fldenv
mov
in
mov
jae
inc
mov
arpl
pop
add
or
imul
adc
ret
frstor
imul
das
sub
incb
fbld
enter
imul
imul
push
add
adc
fildl
add
data16
jecxz
xor
sbb
jecxz
fstpt
sub
xchg
xchg
repnz
push
jmp
push
xor
jl
push
add
push
loop
fcompl
ffree
add
iret
push
loop
add
and
rcll
add
leave
test
jecxz
dec
cmp
hlt
lahf
mov
inc
add
int
sub
jg
or
pushf
jecxz
mov
mov
mov
mov
inc
add
stos
ret
push
inc
aam
xchg
aaa
mov
ja
arpl
addr16
sub
cmp
stos
push
jo
pusha
add
mov
xchg
lret
cmpl
cli
jnp
gs
jp
mov
rolb
movb
mov
add
pushf
mov
in
lock
pop
in
mov
mov
sub
add
mov
cmpl
add
adc
js
add
and
push
hlt
out
xchg
push
add
push
mov
mov
dec
mov
adc
frstor
repnz
rcl
xor
daa
ds
movsb
aam
jns
pop
and
jne
cmp
cmpl
push
cmp
xchg
adc
hlt
inc
add
mov
ficoml
test
mov
hlt
xchg
pop
and
es
dec
add
cld
xor
movsb
pop
pop
decb
xchg
test
sahf
mov
fistl
dec
stos
push
adc
call
gs
xor
pusha
add
cs
add
movsl
leave
loop
in
mov
mov
fldl
xor
fsts
push
pop
arpl
or
lret
add
add
lock
out
dec
sub
out
sub
leave
ret
fstpt
or
xchg
cli
xchg
pop
mov
add
int3
push
lea
inc
add
cmp
icebp
mov
stc
aaa
ljmp
jge
cltd
pop
inc
add
in
test
add
adc
xchg
dec
in
inc
add
pop
lea
dec
xor
jl
hlt
cmp
sarl
leave
add
adc
add
int3
cwtl
test
lea
mov
jno
fsubrs
add
fists
fsub
rolb
adc
repnz
gs
push
sub
push
jns
ret
push
lods
lods
movsb
lea
adc
or
fs
popf
cmp
push
mov
xchg
mov
and
test
fs
jbe
or
mov
push
pop
icebp
out
out
jmp
dec
rolb
adc
ds
pop
fildll
sarb
test
aaa
daa
lret
xchg
icebp
insb
pop
pop
lret
pop
mov
mov
jmp
dec
jmp
loope
orl
aad
stos
into
cld
mov
rcrl
xchg
outsb
or
or
sub
jb
add
clc
jmp
push
add
jae
movb
cld
dec
push
pop
pop
jae
push
ds
lahf
mov
jmp
cmpsl
leave
movsb
dec
xor
dec
insb
loop
iret
xchg
and
int3
cmpsl
lret
mov
and
stos
or
pushf
loope
call
scas
pushf
pushf
xchg
mov
fsubrs
ljmp
inc
add
sub
pop
icebp
or
repz
ret
fidivl
insb
pop
lods
mov
add
ja
jae
or
lds
repz
nop
ljmp
pop
andl
addb
mov
push
jg
loope
jl
jns
inc
popf
imul
test
sub
adc
fnstsw
xor
mov
pop
sub
inc
xchg
add
push
mov
mov
mov
test
loope
enter
sbb
movsb
das
out
cltd
testl
add
push
js
nop
cmp
lock
fistps
mov
adcw
push
popf
mov
rolb
nop
test
add
enter
jge
cmpsb
insb
add
mov
test
push
stc
pop
xchg
xchg
mov
dec
jmp
add
pop
popf
jg
stos
mov
sub
xor
fnsave
dec
aad
mov
pushf
movsb
lahf
xchg
and
movb
mov
mull
rclb
sbb
mov
dec
lret
ret
popf
push
xchg
jg
cmp
mov
xor
popa
pop
mov
pushf
sub
in
lcall
jg
testb
imul
lret
out
jge
rclb
jno
stos
fucomi
daa
dec
xchg
dec
mov
pop
push
hlt
lds
nop
int3
jg
pop
and
xchg
mov
mov
mov
cli
sbbl
add
test
add
rcl
bound
lods
pop
aas
dec
dec
cmp
mov
add
ret
mov
push
sub
test
dec
stos
xchg
fisubl
dec
xchg
je
adc
js
xchg
fsub
je
pop
mov
xor
and
adc
cmpl
xor
jmp
or
xor
mov
sub
dec
movl
dec
or
js
insb
mov
add
or
push
sbb
add
or
mov
leave
sbb
bound
lea
test
xchg
loope
mov
js
repz
push
sbb
xor
imul
add
pop
addl
dec
dec
add
pop
mov
cmc
movsb
rcll
dec
stc
les
dec
lds
loop
add
pop
cs
pop
stos
call
add
cmovne
repz
inc
add
add
xchg
shll
xorl
in
jp
mov
into
dec
add
add
xchg
or
gs
fsubrl
js
fsubp
mov
in
shrl
je
jns
lahf
mov
add
lahf
into
push
add
add
loopne
adc
jno
daa
add
push
mov
pop
iret
fstpl
xor
pop
pop
stos
idivb
cmc
rcrl
mov
jb
adc
mov
shll
sbb
mov
xchg
push
dec
gs
jmp
adc
mov
pop
loop
dec
pop
imul
jb
xchg
cltd
lea
fwait
call
push
fsubr
xchg
pop
in
sub
xchg
es
add
mull
cmp
mov
roll
pop
fadds
sti
loopne
sub
jmp
jne
mov
jne
jne
insb
or
lret
clc
and
dec
movsl
in
push
dec
out
mov
sub
in
cmp
fisubl
aaa
iret
movsl
pop
jo
xor
fmull
xor
repnz
rcrl
push
sbb
popa
shll
add
sub
cmp
and
jne
out
mov
das
sub
add
add
addb
pusha
add
sub
test
or
mov
shrl
test
aam
adc
jecxz
int3
jo
mov
push
fs
mov
mov
scas
ljmp
divb
sub
dec
xchg
jmp
les
or
jge
leave
pop
stos
outsb
test
arpl
add
scas
xor
push
fwait
shl
xlat
mov
add
xor
loopne
jne
xchg
andl
lahf
xchg
mov
sbb
push
mov
ror
pop
dec
in
mov
in
lahf
jnp
add
cld
jnp
lahf
add
cwtl
xor
add
pop
and
xor
dec
add
cltd
sub
jecxz
and
sub
pop
mov
cmp
xor
pop
insl
or
fdivr
cmp
pop
mov
loope
mov
adc
sti
jne
pushf
or
add
xor
sbb
xor
dec
jge
mov
xchg
jg
ljmp
sub
cmp
cmpsb
xchg
lock
lea
jo
mov
pop
jbe
call
xor
clc
push
test
xchg
cmpsb
jl
add
add
sti
adc
or
scas
movsb
add
xor
pop
jl
add
shlb
mov
ja
adc
inc
mov
stc
or
hlt
clc
jns
add
pop
mov
addb
aas
incl
nop
ret
sub
or
cmp
jo
xor
sub
jg
pop
leave
cli
push
add
xor
rorb
lret
sahf
pop
inc
adc
add
push
add
addb
ss
pop
xchg
and
out
push
scas
mull
push
ds
add
enter
dec
or
call
mov
loop
xor
out
fcoml
out
cmp
mov
leave
add
or
mov
sarb
std
shll
mov
sub
and
mov
das
into
fsts
imul
sbb
xchg
in
xlat
mov
push
mov
cmc
cmp
ljmp
ds
cltd
pop
mov
out
mov
pop
push
xchg
sub
in
in
addb
sarl
stos
xor
test
adc
mov
ret
ss
rcrl
sarl
jno
or
fldpi
xchg
adc
mov
xchg
rorl
xor
jbe
mov
adc
lds
adc
repz
adc
divl
xor
test
add
push
dec
or
inc
imull
xor
sbb
pop
sbb
fcmovu
mov
jae
pop
xor
mov
cmp
mov
rcll
in
adc
cli
cmp
sbb
xor
gs
arpl
rcl
in
lds
jb
test
lret
dec
jg
push
add
inc
and
add
dec
or
cmp
fsub
jb
xchg
mov
jg
push
inc
add
dec
ss
pop
adc
out
dec
and
pop
mov
xor
movb
clc
es
add
scas
das
adc
lahf
pop
push
sbb
movsl
in
pop
sbb
mov
pop
addr16
push
mov
pop
fs
inc
add
dec
pop
jne
mov
das
sub
adc
mov
es
add
push
push
add
pop
stc
pusha
add
and
inc
add
pushf
cmp
ror
adc
pushf
add
xchg
fcompl
sahf
jmp
cmp
cld
fdivr
int3
repnz
xor
add
add
daa
and
xchg
add
push
into
sub
and
ret
aas
pop
or
add
imul
int3
add
mov
cwtl
into
ret
mov
rol
add
add
mov
fcmove
lcall
add
xchg
and
add
lret
stos
mov
mov
addr16
mov
sub
scas
movb
aad
add
mov
je
lods
rcll
sbb
addb
xor
iret
push
or
daa
pop
sbb
ret
push
insb
xchg
lret
inc
sbb
aas
cli
or
mov
adc
push
and
xchg
insb
daa
xor
push
or
aad
sbb
sbb
jecxz
add
js
xor
push
mov
lea
pop
les
mov
add
and
pop
xor
and
jle
les
inc
movsl
in
or
xor
lahf
fwait
repz
scas
xlat
jb
in
imul
and
xor
addl
fwait
xchg
inc
add
mov
add
adc
sub
iret
and
pop
outsb
je
inc
add
filds
jle
pop
dec
or
outsb
xor
xchg
pop
les
cmc
cld
in
inc
add
adc
cmp
jl
xor
pop
dec
in
push
pusha
add
lcall
cld
cld
dec
push
push
add
aas
cmc
nop
or
js
lret
repz
gs
aad
add
sbb
and
xchg
dec
jmp
jmp
inc
add
or
xor
add
ljmp
cltd
mov
sub
add
add
sub
push
fs
inc
add
xor
stc
jmp
add
clc
push
sbb
add
stc
fwait
popa
call
push
push
jge
or
or
int3
pushf
cmp
inc
add
xchg
adc
enter
outsl
pop
ret
into
shrb
lcall
mov
cmp
dec
mov
sbb
dec
hlt
jle
int3
aad
mov
add
test
xor
imul
jbe
test
data16
bound
jae
in
shrl
scas
popf
mov
or
in
jbe
aam
add
xchg
into
daa
or
sbb
pop
push
mov
xchg
xchg
lret
lahf
sti
or
inc
add
add
pop
xor
push
mov
rcl
jne
sbb
cmc
ljmp
mov
aaa
xor
movsl
ret
sbb
add
jecxz
xchg
ljmp
sahf
cmp
push
rcll
repnz
cmpsl
das
clc
dec
out
cmp
in
popa
add
icebp
imul
int3
mov
inc
sub
sbb
push
lret
lret
mov
mov
test
push
adc
int3
stc
mov
inc
add
pop
clc
dec
cmpsl
jae
lods
data16
push
inc
add
cmp
scas
mov
outsb
xchg
popf
xlat
mov
aam
in
lds
shll
arpl
cmp
dec
add
ret
adc
shrl
add
int
mov
dec
repnz
push
push
xchg
fistps
sub
add
push
add
xchg
jo
aad
sbb
dec
popa
dec
movsl
bound
jle
sahf
rorl
loop
pop
cmp
push
pop
addb
rolb
leave
or
sahf
mov
xor
jle
jae
or
orl
aaa
popf
movsl
je
mov
jmp
add
jno
les
je
cli
insb
scas
xor
mov
hlt
adc
stos
cmpsl
push
lcall
inc
inc
sbb
jmp
outsl
std
int3
lods
rolb
out
mov
xor
jb
xchg
loopne
out
and
scas
pop
jnp
add
push
add
add
jbe
xchg
in
xor
sbb
insb
imull
xchg
add
xchg
or
xor
xchg
std
push
popw
imul
jne
add
add
dec
pop
mov
jecxz
inc
add
push
pop
mov
testb
insb
push
sbbl
push
mov
fsubl
cld
and
or
cmp
inc
add
dec
and
pop
jnp
repnz
shl
pushf
cltd
pop
div
in
outsl
lock
push
lahf
mov
xchg
addr16
sub
or
aaa
cmpl
push
add
add
in
mov
lcall
add
cmc
sbb
pop
push
aam
outsl
push
icebp
cmp
or
add
jb
pop
mov
nop
cltd
fs
fpatan
mov
mov
mov
lea
dec
cltd
sahf
xchg
cmpsb
jno
lcall
cmc
out
std
in
loope
add
test
adc
push
add
add
jp
jmp
outsl
mov
jbe
add
jg
andl
loop
push
cmp
mov
xchg
mov
cmp
pop
inc
add
aaa
dec
arpl
push
mov
mov
stos
imul
cmp
iret
lods
xor
push
loopne
jno
pop
lret
or
add
mov
cmpsb
inc
add
jb
fstpt
scas
ljmp
sahf
xchg
testl
into
test
lods
fimuls
inc
xor
pop
add
add
repz
dec
test
add
cmp
add
pop
jecxz
mov
add
mov
dec
mov
push
ss
in
stos
in
or
inc
js
add
push
and
xlat
scas
or
pusha
add
inc
sahf
test
dec
mov
add
and
xchg
mov
sub
and
xor
jl
pop
cwtl
js
adc
add
pop
dec
out
mov
ljmp
and
das
cld
aad
test
xor
lds
push
cmpsl
sti
cli
cld
sti
xchg
jmp
mov
add
es
fistps
pusha
add
jmp
sub
dec
push
pop
repz
aad
push
jbe
pop
lret
lret
fmull
in
mov
add
lret
fimuls
xchg
pop
mov
ds
mov
push
hlt
test
xor
dec
xchg
push
push
add
movb
mov
mov
sbb
adc
cmpsb
popa
and
negb
testb
add
mov
repnz
lret
daa
test
ret
int
xor
ret
fdiv
cmp
and
rcll
sbb
sub
test
mov
cmp
push
xorl
push
mov
stos
sbb
std
insb
sarb
push
mov
mov
je
dec
xchg
lret
arpl
push
mov
jno
and
negl
rolb
add
dec
jno
add
xchg
mov
roll
add
push
das
or
fwait
mov
add
or
rorl
dec
xlat
fimuls
cwtl
bound
mov
inc
add
dec
movb
call
pop
mov
add
push
pop
cli
lods
or
mov
add
add
push
mov
add
mov
add
out
cltd
pop
add
or
inc
add
je
pushl
int3
mov
mov
add
adc
add
pop
pop
in
mov
push
mov
mov
add
out
inc
sub
xchg
outsl
sub
jecxz
inc
ja
mov
jmp
pushl
dec
in
in
repz
icebp
jo
ds
out
mov
repz
ljmp
ljmp
mov
lcall
es
scas
dec
sbb
pop
and
lds
xlat
jge
lock
xor
loopnew
ds
cs
push
adc
and
add
push
cmp
mov
dec
das
and
xchg
cmp
mov
fistpll
leave
cmp
stos
dec
xor
add
mov
inc
add
popf
pop
inc
mov
mov
xchg
ljmp
pop
lods
mov
pushf
adc
mov
add
xor
pop
outsb
lahf
repz
adc
push
aam
mov
mov
insl
push
add
int3
sbb
rclb
push
pop
fnstenv
xor
mov
jo
and
outsl
nop
sahf
ss
mov
fcomi
cmpsb
bound
lret
sub
je
into
fmul
movb
test
mov
or
cmc
push
enter
repz
dec
jbe
lret
test
push
into
pusha
add
movb
add
dec
in
aaa
add
cmp
nop
sub
xor
cmp
mov
mov
add
mov
and
xchg
push
jge
je
cmp
out
mov
push
or
out
std
les
push
sub
jp
push
and
pop
xor
fdivrs
inc
scas
daa
loop
push
frstor
or
add
cld
mov
and
clc
jb
mov
and
xchg
sub
mov
cltd
es
inc
cwtl
fists
iret
xchg
push
punpcklbw
add
pop
pop
test
lods
test
bound
in
push
insl
dec
loop
daa
sbb
stos
popf
push
add
ljmp
test
test
add
add
xchg
js
cli
inc
imul
mov
adc
jge
fcomps
jg
xor
and
sub
lods
jmp
movsl
in
cmp
adcl
push
jae,pt
or
mov
pop
mov
bound
repnz
sub
jns
stos
outsl
jae
fidivs
push
int3
int3
aaa
pop
stc
gs
arpl
jnp
mov
gs
cmp
xor
sbb
sub
pop
pop
pop
hlt
js
rolb
fnstenv
sahf
test
iret
dec
test
cli
ret
mov
inc
add
lods
hlt
cmp
mov
out
out
lret
mov
or
clc
ljmp
arpl
rolb
add
icebp
cld
insl
or
xor
add
insb
test
dec
lds
add
ja
sub
arpl
xchg
mov
rcrl
inc
test
test
sarl
addr16
and
test
int
loope
outsl
mov
ficoml
movb
and
in
add
mov
into
test
sub
outsb
cmp
adc
push
test
cmc
xchg
mov
xchg
movb
test
addl
inc
add
rolb
adc
push
push
in
cmp
mov
cmp
xlat
movl
dec
inc
add
xorl
push
das
add
push
adc
mov
leave
push
sub
pushf
and
imul
addr16
in
xor
mov
cmp
lods
dec
in
jae
cmp
outsb
adc
jo
dec
push
xor
dec
mov
aaa
jo
in
mov
insl
add
pop
sub
or
add
fldt
repz
jmp
jns
inc
xchg
mov
lahf
push
data16
test
popf
gs
xor
in
pop
les
mov
fldenv
pop
fisttpl
add
movsb
fistps
insl
xor
xchg
into
mov
sbb
add
adc
ds
xchg
push
stc
push
pop
add
jge
push
xchg
xchg
clc
shr
movsl
data16
sahf
xor
dec
mov
xchg
lahf
ret
sbb
or
sbb
pop
push
add
mov
out
test
aad
enter
cmp
mov
jo
dec
cmp
bound
fisubl
std
into
jb
das
or
xchg
xor
sbb
pop
test
lcall
sbb
ds
dec
das
jecxz
sbb
adc
je
xchg
insb
push
pop
sub
add
push
bnd
inc
add
outsb
cmpsl
test
roll
je
scas
mov
mov
adc
aas
xchg
gs
int
adc
bound
popf
gs
add
insb
or
push
inc
add
mov
adc
shll
mov
sarl
add
sub
mov
xor
jle
jnp
mov
and
dec
aad
add
cmp
push
fcompl
repnz
mov
ret
add
dec
jae
je
sbb
rorl
xchg
test
xchg
in
adc
rolb
pop
in
adc
sbb
add
imull
pop
in
push
mov
out
or
or
jb
loope
adc
xchg
imul
or
jp
add
imul
push
fcoms
add
dec
fistl
leave
clc
lods
jnp
inc
popl
pop
jecxz
hlt
lods
aas
and
movsb
dec
out
pop
dec
div
and
nop
mov
xchg
adc
adc
xlat
gs
add
imul
testl
push
add
pushf
inc
add
out
leave
pop
aaa
mov
push
add
idivb
add
js
aaa
inc
add
dec
fwait
adc
ja
xlat
jbe
add
ret
cs
sbb
or
popa
push
push
add
je
add
pop
dec
mov
mov
push
test
aam
cmp
adc
imul
mov
cli
aam
dec
movsb
movl
pop
cmp
loope
xchg
faddl
xchg
pop
adc
push
add
aad
adc
add
add
mov
mov
xchg
add
dec
jmp
push
inc
add
add
fidivs
sbb
pop
lods
mov
movsb
pop
push
sbb
add
jmp
in
lds
pop
fdivrs
cmpsl
loope
scas
aas
inc
mov
and
jp
mov
jno
add
push
push
xchg
pop
lds
daa
in
sbb
sub
in
bts
sub
xchg
sarl
pop
jno
fisubrs
hlt
js
enter
add
xor
add
adc
mov
push
pop
xchg
push
xlat
mulb
fisubrs
loop
mov
mov
movsl
das
mov
insb
xchg
inc
mov
add
and
lods
inc
add
add
add
jb
into
jbe
aaa
iret
les
mov
push
mov
cld
loop
in
dec
cmp
rolb
jg
adc
scas
dec
test
mov
jns
fistps
jnp
lock
xlat
cwtl
and
pop
nop
pop
push
daa
jecxz
mov
and
repz
mov
daa
sub
fldcw
out
xor
imul
aam
out
adc
repnz
pop
cmpsb
lods
sub
mov
pop
data16
push
push
adc
jmp
fld
mov
cmpsl
add
mov
add
scas
cmp
inc
mov
or
nop
gs
xor
test
and
rolb
add
movsl
xor
test
fwait
ds
dec
inc
ljmp
outsl
xor
xchg
data16
xor
add
add
inc
add
cmpsl
lds
mov
leave
sub
add
sbb
ja
rcr
scas
sarl
aas
out
sbb
aaa
imul
gs
loopne
xor
sbb
push
cwtl
test
pusha
add
ss
inc
add
fistpll
lods
inc
negl
xor
les
insb
je
cmpsb
pop
or
add
sahf
mov
or
push
pop
xor
sub
push
gs
xor
fsubrs
ljmp
inc
inc
push
xchg
mov
mov
imul
xor
leave
rclb
mul
fstl
addl
insb
mov
jnp
mov
icebp
inc
add
add
or
test
stos
dec
jno
dec
lret
pop
cmp
mov
test
sub
inc
add
inc
add
mov
pop
push
add
loopne
jg
testb
mov
ljmp
add
sbb
add
mov
ljmp
out
mov
adc
sub
mov
cmp
pop
dec
jecxz
fs
test
stos
sbb
add
push
inc
add
xchg
adc
call
mov
push
dec
mov
cwtl
cli
xchg
sbb
rolb
or
stos
test
xchg
add
jmp
movsb
mov
sbb
push
loope
pop
ret
pop
add
scas
or
jnp
movsl
fildl
add
cmp
cmpsb
icebp
into
mov
pop
mov
aad
add
add
addr16
sbb
loope
inc
mov
xchg
cmp
ja
enter
les
rolb
lds
mov
mov
add
mov
jg
js
or
xchg
add
sahf
mov
xchg
arpl
cmpsl
lret
stc
inc
dec
push
rorb
sbb
add
imul
mov
das
xchg
dec
jmp
adc
movsl
or
jle
mov
add
in
stos
rol
add
add
lock
add
jmp
pop
sbb
addr16
repz
cmp
fistps
addb
mov
pop
cwtl
jb
std
push
popf
mov
pop
mov
insl
out
loop
sti
xlat
or
ss
aam
sti
lods
aad
sbb
jmp
ljmp
out
pop
enter
and
mov
add
jge
nop
fstps
scas
rcr
shrb
mov
pop
scas
xor
das
in
sub
ljmp
sbb
sub
dec
pop
fstl
sub
push
add
mov
movsb
push
push
add
seta
inc
add
fst
cmp
pop
dec
xchg
xor
out
popa
sub
push
jcxz
cld
movsb
cmpsb
fsubr
shll
repz
sbb
add
ljmp
cli
mov
push
jmp
testl
xor
outsb
repz
pop
movsb
scas
inc
pop
jle
sahf
out
bound
into
inc
add
pop
repnz
ret
xor
sub
add
andl
inc
add
mov
into
addb
ss
mov
movsl
loope
or
sar
pop
cmp
adc
jg
add
adc
lret
inc
add
pop
add
add
add
testb
rcr
mov
lcall
and
mov
push
push
add
call
pusha
add
movsb
dec
mov
jg
add
sbb
dec
addr16
xor
or
pop
loope
inc
insb
lods
or
pop
repnz
add
cmp
addb
xor
push
mov
ficompl
lds
fs
add
sub
jns
mov
sbb
jmp
mov
lahf
push
rolb
sbb
lahf
fdivl
push
inc
add
cwtl
dec
es
es
movsl
stos
repnz
mov
in
mov
rep
pop
js
push
add
jbe
sbb
addb
inc
inc
add
cld
pop
repnz
xchg
add
xchg
fcomps
mov
pop
call
fidivs
sub
cmpsl
pop
cmp
add
in
dec
pop
add
jmp
cmp
stos
pop
dec
jmp
add
out
sti
mov
mov
cli
ds
or
xchg
out
aaa
push
add
cmp
jge
testb
pop
ret
int3
jne
mov
pop
icebp
ss
fcmovne
aaa
dec
cli
rolb
sti
out
scas
fistpl
add
sub
and
frstor
sub
sub
fsubs
pop
and
add
mov
mov
or
xchg
xchg
es
dec
mov
addr16
and
push
xchg
lcall
shrl
jle
pop
sahf
out
and
das
les
mov
mov
hlt
inc
add
dec
leave
scas
jno
fsubrs
sub
fildll
sub
and
cmc
int
clc
dec
adc
push
add
test
popf
test
ss
test
insl
cmc
lcall
add
cli
push
mov
jno
add
cmpsl
jae
push
ljmp
gs
test
js
add
xchg
pop
pop
sub
ja
lea
adc
pop
xor
or
adc
mov
pop
mov
scas
lea
pop
xchg
fistpll
ret
mov
scas
cld
cmpsl
jbe
pushf
std
in
cmpl
xchg
repnz
add
and
xor
fwait
sub
lods
inc
add
fnstcw
mov
stc
jecxz
fsubl
push
mov
sbb
cmp
add
push
les
movl
push
shll
cld
addb
fldt
mov
rolb
pop
fdivs
add
mov
shll
push
outsb
dec
jecxz
sbb
bound
adc
mov
por
js
add
and
pop
lods
mov
movb
add
cmc
fsubs
daa
movsb
sarl
xor
mov
adc
cmp
add
mov
mov
lods
ror
sarl
and
loope
mov
xor
inc
add
jbe
sahf
int
arpl
fimull
add
adc
sub
mov
fs
sti
loop
sahf
outsl
mov
jmp
cmovle
or
bound
iret
push
jge
mov
mov
or
add
pop
and
jmp
jo
cmc
xchg
and
sti
loope
sbb
add
std
lock
scas
ret
jb
add
add
ss
in
popf
jnp
lcall
aad
jle
fs
out
xor
data16
arpl
outsl
adc
in
gs
sub
dec
mov
testb
inc
add
add
jne
fwait
and
inc
add
add
add
jne
imul
pop
lea
add
daa
enter
xchg
mov
lcall
jmp
add
movsb
dec
sahf
push
ficomps
loop
add
push
mov
mov
add
or
loopne
cltd
mov
or
sbb
mov
xor
add
adc
pop
ret
jno
or
fstl
sbbl
pop
or
daa
lret
rolb
mov
lcall
stc
sbb
rolb
add
cmpsl
or
and
movsl
jg
add
sub
mov
inc
add
rcll
jne
ljmp
cltd
jg
ss
pop
xchg
or
inc
xlat
cmp
mov
cld
inc
xchg
or
jg
arpl
or
sbb
addb
adc
mov
inc
add
fiaddl
adc
add
bound
push
call
pop
lock
addps
cmp
mov
xchg
std
int
sub
xor
sub
pop
push
add
cmc
in
jne
sti
adc
out
rorl
daa
xchg
cmp
scas
pop
addr16
mov
xor
xor
movsb
jecxz
lret
test
lret
adc
test
jmp
inc
faddp
add
push
add
xchg
mov
cmp
mov
repz
push
jo
iret
sub
and
push
insb
stos
and
mov
jge
mov
pop
xlat
xor
icebp
mov
xchg
movsb
outsl
lea
xor
add
stos
xchg
mov
stos
test
repnz
xchg
getsec
in
ret
or
fbstp
push
dec
movsl
in
loop
out
sti
pop
sbb
bound
pop
lods
insb
inc
add
loopne
lods
and
aam
ret
xchg
loopne
add
loop
pop
mov
mov
outsb
fstpl
test
jl
repz
add
add
xor
mov
jbe
addl
add
adc
sbb
addb
add
ror
and
fnstsw
shll
add
test
ss
push
out
and
adc
inc
add
jge
mov
sahf
lahf
mov
into
dec
popf
repz
add
nop
aaa
dec
jbe
mov
pop
stc
call
lahf
aaa
je
xchg
pop
sub
js
ds
rcrb
les
rolb
adc
sahf
jne
hlt
and
fadds
jb
pop
xor
and
test
add
outsb
mov
mov
xor
fdivs
pop
push
fwait
pop
test
xchg
mov
jnp
iret
xchg
sbb
cmp
xor
lock
aas
fidivs
cmp
xor
enter
scas
push
out
jnp
mov
std
dec
pop
mov
cltd
imul
xor
sbb
arpl
jno
xchg
dec
cli
lods
jo
push
cmpsb
adc
popa
fwait
pop
mov
fsubs
mov
mov
cli
mov
lock
push
fsts
add
xchg
lret
lret
addb
sti
into
imul
pop
aaa
mov
jae
adc
push
push
sub
out
mov
pop
insl
sarb
pop
daa
ffreep
and
in
dec
stos
in
dec
or
and
cld
jne
dec
jecxz
outsl
cmp
add
add
pop
clc
das
imul
adc
inc
add
mov
xchg
push
add
test
loopne
mov
aad
mov
add
mov
mov
sahf
cmpsb
sub
stc
arpl
fwait
ret
cmpsb
out
shlb
mov
lcall
add
in
mov
jl
cmp
adc
or
sbb
xor
cmp
clc
xchg
xor
std
add
mov
xchg
push
inc
cmp
inc
ret
in
rolb
loope
xlat
pop
xor
nop
pop
insl
sbb
dec
pop
sbb
adc
incl
fistpll
xchg
jno
sub
sbb
adc
ds
idivl
add
xlat
shlw
add
std
jmp
fcmovnb
mov
out
clc
sti
sub
push
mov
dec
pop
ret
push
jnp
add
or
cmp
add
cmp
and
add
mov
clc
and
xchg
mul
add
push
pop
push
add
xchg
inc
xor
aaa
and
push
mov
add
push
dec
pop
out
xor
cs
mov
xor
inc
sub
mov
add
loopne
fadd
add
dec
test
enter
popa
movb
push
cli
cmp
cmpsl
clc
ficoml
cmpsl
jno
add
push
add
push
xchg
out
rcrl
popa
jo
std
aaa
fistl
mov
ljmp
dec
xchg
add
mov
roll
insb
xchg
in
sub
ja
sbb
add
mov
lea
in
xchg
cmpsb
dec
xor
fwait
testl
js
adc
xchg
flds
pop
push
mov
push
sahf
icebp
dec
inc
add
aas
aaa
and
or
cli
dec
pop
loop
les
xchg
mov
jne
fst
jno
sbb
mov
jmp
ja
mov
mov
pop
jmp
jmp
out
mov
test
add
xchg
mov
std
add
pop
mov
mov
jl
scas
aad
pop
inc
popa
aad
mov
fwait
xchg
inc
add
bound
in
push
movb
jl
jno
jge
jle
xchg
adc
idivl
movsb
pop
lock
cmpsl
mov
add
sbb
ja
rolb
cmp
add
scas
dec
mov
mov
les
imul
test
mov
sbb
arpl
push
push
add
ds
dec
stc
xor
hlt
dec
fwait
inc
add
pop
mov
sub
test
ja
movsb
push
xor
add
pop
or
rcrl
xor
nop
rcrl
das
lods
mov
ds
jl
jp
jg
fimull
mov
or
fwait
in
xchg
sbb
loope
shl
pop
pop
mov
add
into
push
outsl
test
lods
dec
sub
dec
out
adc
or
es
loope
cmp
imul
pop
mov
jae
pop
mov
add
adc
fadd
add
out
imul
inc
sbb
test
add
cltd
add
dec
mov
mov
cmp
pop
mov
mov
mov
enter
inc
add
adc
pop
cmp
les
push
insl
jnp
mov
add
push
adc
mov
nop
cld
nop
jmp
clc
add
xor
pop
pushl
nop
cld
nop
jmp
push
add
mov
lods
jne
stc
nop
es
mov
stc
nop
es
movl
adc
sub
ss
and
dec
adc
loop
outsb
mov
push
mov
xchg
ret
and
adc
and
inc
add
cmc
jno
add
stc
nop
es
adc
cli
add
add
mov
push
mov
xchg
ret
add
jp
mov
add
stc
nop
es
xor
add
adc
inc
add
lods
dec
add
jb
data16
add
enter
xchg
xchg
fcmovb
out
stc
nop
es
xchg
out
add
push
aas
add
add
or
add
add
pushw
cmp
nop
cld
nop
jmp
pusha
add
add
add
mov
es
cli
add
clc
add
and
loope
push
pushl
push
mov
xchg
ret
ds
data16
mov
nop
es
pushf
add
add
add
push
mov
xchg
ret
data16
add
popa
sbb
add
nop
es
jge
add
pop
sub
test
or
add
push
add
add
out
out
add
stc
nop
es
mov
pop
add
push
nop
es
jo
add
push
add
lret
nop
es
jge
and
add
mov
stc
nop
es
lods
add
cli
inc
pop
push
pushf
and
push
mov
xchg
ret
add
add
cmp
xor
add
stc
nop
es
es
nop
cld
nop
jmp
add
pop
add
add
push
insb
insb
nop
cld
nop
jmp
movl
mov
add
mov
stc
nop
es
pop
add
add
add
ret
add
and
add
inc
and
add
xor
add
push
mov
xchg
ret
pop
idiv
add
nop
cld
nop
jmp
add
add
add
popa
add
add
stc
nop
es
sub
add
xchg
push
stc
nop
es
xor
jo
add
data16
je
stc
nop
es
add
mov
push
mov
xchg
ret
add
jo
add
nop
es
out
and
push
outsl
popa
fs
cld
nop
jmp
add
shlb
mov
jae
mov
stc
nop
es
sub
data16
push
mov
nop
es
stos
jb
add
add
rclb
push
inc
add
addb
cmp
fstps
mov
xchg
ret
add
add
add
or
mov
xchg
ret
cmp
add
add
and
es
sbb
ret
or
add
add
repnz
insl
pop
nop
cld
nop
jmp
movl
add
cmc
and
mov
push
mov
xchg
ret
and
adc
repz
mov
xchg
ret
out
mov
popa
push
cmc
mov
nop
es
add
add
add
add
fistps
mov
xchg
ret
add
adc
pushf
divb
mov
repz
test
push
mov
add
add
jns
scas
movsb
and
stc
nop
es
add
add
and
jp
inc
xor
stc
nop
es
pop
ret
mov
add
inc
add
sub
dec
cmp
cld
nop
jmp
add
add
mov
loope
nop
es
orb
add
add
push
mov
xchg
ret
push
jo
add
out
mov
stc
nop
es
add
dec
pop
nop
cld
nop
jmp
popa
mov
add
stos
pop
pop
stc
nop
es
add
push
enter
add
mov
xchg
ret
add
add
rolb
mov
stc
nop
es
add
xor
fs
add
stc
nop
es
sub
add
cmp
es
add
add
add
push
pop
mov
nop
cld
nop
jmp
add
add
cmp
push
sub
pop
std
inc
add
add
add
jbe
push
mov
xchg
ret
or
jb
ret
aaa
push
add
jmp
adc
pusha
inc
add
clc
add
mov
nop
cld
nop
jmp
and
add
adc
or
nop
es
add
add
add
cli
inc
add
add
jb
add
outsb
call
stc
nop
es
and
add
mov
stc
nop
es
add
push
push
add
xor
test
jb
add
xor
stos
add
mulb
popa
push
mov
xchg
ret
add
sbb
xor
les
mov
xchg
ret
add
add
add
stc
nop
es
push
sbb
cmp
sbb
add
lock
adc
je
mov
stc
nop
es
pop
add
loop
test
enter
es
add
add
dec
cmp
pushf
xor
push
mov
xchg
ret
add
outsb
mov
stc
nop
es
data16
add
push
push
mov
xchg
ret
add
cltd
add
add
stos
push
push
mov
xchg
ret
add
lock
testb
add
nop
es
mov
mov
and
or
nop
es
add
add
add
clc
cwtl
add
add
push
add
add
mov
jb
clc
add
add
adc
addl
xor
add
nop
cld
nop
jmp
add
movsl
je
push
stc
nop
es
add
add
sub
test
test
nop
es
sbb
jb
add
lcall
jmp
and
add
add
add
push
add
stc
nop
es
add
cltd
ret
mov
push
mov
xchg
ret
add
pushf
push
sbb
faddl
add
add
add
sub
sar
nop
es
and
add
rep
push
mov
xchg
ret
movb
pop
add
dec
cmp
mov
xchg
ret
pushf
add
cli
repnz
stc
nop
es
data16
add
add
or
add
or
add
push
xor
mov
out
testl
add
add
add
cmp
and
adc
stc
nop
es
pushf
xor
dec
out
sub
pushf
dec
and
nop
cld
nop
jmp
add
scas
add
stc
nop
es
add
add
add
xchg
xchg
ljmp
nop
es
and
testb
rclb
out
inc
add
add
testb
add
mov
sub
nop
es
mov
sbb
and
nop
es
out
popa
jo
add
pusha
add
add
push
pop
push
mov
xchg
ret
add
add
and
enter
inc
and
stc
nop
es
add
add
pushf
cwtl
lea
push
mov
xchg
ret
sbb
add
add
ret
jo
add
add
add
andb
add
lock
add
stc
nop
es
stos
add
fcoms
cld
nop
jmp
add
popa
adc
jns
add
push
stc
nop
es
stos
add
add
add
add
nop
cld
nop
jmp
mov
push
add
jle
rolb
cld
nop
jmp
add
add
add
nop
es
mov
cli
add
inc
call
inc
add
adc
add
stc
nop
es
add
add
sbb
xor
popa
mov
mov
push
stc
nop
es
mov
dec
add
xor
xor
stc
nop
es
clc
add
add
mov
out
inc
add
add
add
add
stc
push
push
mov
xchg
ret
clc
add
jb
add
jb
or
add
jb
add
push
mov
xchg
ret
jge
stos
cmp
dec
ret
stc
nop
es
adc
add
stos
pop
loop
xlat
arpl
jmp
add
add
add
push
lcall
jmp
add
add
or
es
push
add
push
dec
cmp
nop
es
adc
add
stos
xchg
push
cli
call
or
add
add
push
add
add
stc
nop
es
add
icebp
and
nop
es
add
movb
jmp
nop
es
add
dec
negb
add
pop
mov
stc
nop
es
movw
add
push
stc
nop
es
lods
add
sub
add
cli
inc
inc
add
cld
nop
jmp
add
add
fiadds
es
movl
add
add
nop
es
mov
popa
insb
mov
stc
nop
es
jo
jo
push
jo
mov
shr
stc
nop
es
sub
add
and
rolb
movsl
sahf
mov
stc
nop
es
sub
or
ds
mov
stc
nop
es
add
push
inc
add
push
mov
xchg
ret
dec
add
dec
add
and
pop
push
nop
cld
nop
jmp
jb
add
add
inc
add
lods
stc
nop
es
add
dec
add
add
popf
jmp
nop
cld
nop
jmp
bound
pushf
add
test
nop
cld
nop
jmp
add
add
push
add
pop
push
push
mov
xchg
ret
and
jge
pusha
inc
and
not
stc
nop
es
add
fs
add
cmp
or
nop
es
add
and
sbb
nop
es
adcb
sbb
ja
xor
push
mov
xchg
ret
mov
add
pop
push
mov
xchg
ret
pop
ret
add
imulb
stc
nop
es
adc
add
jge
stos
xchg
jae
mov
stc
nop
es
add
jge
jb
push
stc
nop
es
jo
add
nop
push
mov
xchg
ret
jo
add
es
jne
stc
nop
es
add
push
es
add
add
pop
add
stc
nop
es
push
jns
movsb
pop
mov
stc
nop
es
add
imul
mov
xchg
ret
pop
add
repz
pushl
stc
nop
es
data16
add
stc
mov
push
mov
xchg
ret
mov
add
add
push
sbb
icebp
stc
nop
es
lock
add
cli
cltd
add
push
mov
xchg
ret
add
add
xchg
cmc
cmp
mov
xchg
ret
add
enter
or
stc
nop
es
testb
add
jb
stos
add
data16
clc
stos
movzwl
stc
nop
es
cmp
lods
add
add
add
nop
es
add
add
je
stc
nop
es
popa
adc
cltd
dec
stc
nop
es
add
add
je
or
nop
jmp
add
idivb
nop
es
ret
adc
add
or
inc
std
inc
add
jb
add
mov
cmpl
jb
dec
dec
sub
add
jo
popa
stc
nop
es
loop
add
add
mov
jb
add
loop
adc
inc
jge
arpl
add
add
stc
nop
es
add
jo
add
lods
movzwl
stc
nop
es
inc
add
fs
pop
rep
stc
nop
es
add
rorb
add
add
add
nop
es
and
lock
cld
nop
jmp
negb
push
and
lock
cmpsl
cmp
nop
es
clc
add
add
add
pop
stc
nop
es
add
push
xor
out
add
xchg
cmc
stc
nop
es
inc
add
add
add
adc
out
push
add
fs
repnz
nop
cld
nop
jmp
popa
add
add
xor
adc
mov
nop
cld
nop
jmp
add
add
lcall
inc
add
inc
adc
add
je
mov
stc
nop
es
movl
data16
pushf
push
stc
nop
es
pop
cli
jo
pop
mov
stc
nop
es
and
add
add
or
nop
jmp
add
pushf
pop
or
add
cld
nop
jmp
data16
pusha
add
call
stc
nop
es
inc
add
add
jne
stc
nop
es
add
xchg
pop
push
stc
nop
es
and
add
add
shr
push
mov
xchg
ret
add
add
cli
and
fiadds
inc
add
add
add
adc
xor
stc
nop
es
jns
dec
xor
add
call
pop
add
bound
add
pop
mov
stc
nop
es
xor
popa
xor
stc
nop
es
sbb
or
jns
add
stc
nop
es
add
popa
sbb
mov
cld
nop
jmp
add
lods
enter
add
decl
add
nop
es
jo
xor
aad
add
or
popa
add
cld
nop
jmp
data16
mov
nop
sub
call
idiv
incl
jo
add
cmp
lret
nop
jmp
add
and
sub
jne
lea
nop
cld
nop
jmp
add
lock
lock
dec
pop
push
mov
xchg
ret
dec
inc
pop
clc
add
pop
add
cmpsl
cmc
inc
add
and
push
add
add
icebp
movsl
inc
xor
add
add
nop
es
adc
stc
nop
es
add
ret
dec
add
cli
data16
jb
add
es
rolb
pusha
add
mov
stc
nop
es
cltd
jns
jne
stc
nop
es
add
imul
add
andb
push
jb
sub
nop
cld
nop
jmp
add
stos
add
push
nop
cld
nop
jmp
clc
inc
jge
add
push
stc
nop
es
dec
add
and
add
movsb
insl
pop
push
mov
xchg
ret
adc
add
dec
cltd
add
cld
nop
jmp
data16
add
push
lods
xor
mov
nop
cld
nop
jmp
pushf
mulb
lods
add
mov
jg
cmpl
nop
jmp
add
add
cmp
adc
nop
es
clc
bound
add
mov
add
stc
nop
es
and
adc
sti
cmp
nop
cld
nop
jmp
add
push
lods
push
mov
xchg
ret
add
shrb
push
and
push
mov
xchg
ret
inc
out
add
rclb
or
add
jo
add
and
inc
add
call
call
incl
add
jle
stc
nop
es
add
add
push
add
xorb
add
data16
or
add
nop
es
add
add
out
add
add
stc
nop
es
inc
movl
push
or
nop
jmp
push
add
add
dec
xchg
pop
add
stc
nop
es
popa
add
add
add
fwait
push
push
mov
xchg
ret
fs
add
lock
xchg
pop
lea
stc
nop
es
clc
add
ret
add
pushf
call
stc
nop
es
rolb
sub
scas
imul
stc
nop
es
add
mov
data16
nop
es
ret
shl
jns
adc
mov
stc
nop
es
add
add
loop
call
add
add
add
add
cwtl
push
push
mov
xchg
ret
dec
add
fnsave
add
push
mov
xchg
ret
add
xor
mov
jmp
and
add
add
add
add
roll
div
nop
cld
nop
jmp
add
add
add
pop
loope
add
stc
nop
es
xor
and
add
faddl
xchg
ret
jo
pusha
pushf
pop
movb
add
stc
nop
es
and
add
es
push
mov
and
insb
add
mov
add
cmp
mov
nop
es
add
add
jmp
stc
nop
es
dec
add
add
enter
es
and
cmp
enter
stc
nop
es
add
add
out
add
enter
jb
jb
push
enter
int3
mov
push
mov
xchg
ret
add
pusha
test
jl
dec
or
nop
es
add
add
cmp
in
add
and
push
push
mov
xchg
ret
rcrb
pusha
dec
add
jae
mov
and
push
mov
xchg
ret
dec
add
clc
mov
jb
jge
add
xchg
inc
pop
movzwl
stc
nop
es
add
loop
or
push
loopne
nop
es
add
add
es
stos
stc
nop
es
push
add
clc
mov
jge
add
stc
nop
es
inc
add
push
add
incl
nop
cld
nop
jmp
add
cmp
dec
jne
stc
nop
es
inc
add
fstpt
stc
nop
es
data16
das
push
mov
pusha
add
jmp
push
add
or
add
dec
pusha
stc
nop
es
add
adc
add
cli
loopne
add
mov
stc
nop
es
add
add
cltd
jne
stc
nop
es
adc
inc
ficomps
nop
es
jo
add
or
and
cld
nop
jmp
jns
jb
stos
add
test
pop
add
stc
nop
es
jo
add
mov
stc
nop
es
add
add
mov
stc
nop
es
add
add
mov
push
mov
xchg
ret
push
clc
andl
andb
add
pop
dec
out
push
xor
add
call
add
add
dec
data16
stc
nop
es
jge
rorb
add
stc
nop
es
data16
pusha
add
addb
mov
stc
nop
es
dec
add
es
daa
sub
jb
out
add
inc
add
addb
mov
push
mov
xchg
ret
add
xor
cltd
mov
nop
cld
nop
jmp
push
jb
cli
je
push
push
mov
xchg
ret
add
add
cmp
add
xor
lea
sbb
add
stc
nop
es
sub
pusha
add
xor
stc
nop
es
add
add
add
xchg
cmp
nop
cld
nop
jmp
inc
cli
add
cltd
loop
or
jbe
stc
nop
es
push
xchg
jb
dec
add
add
and
in
mov
nop
cld
nop
jmp
cmp
jo
sub
inc
add
push
push
mov
xchg
ret
jge
add
add
push
push
mov
xchg
ret
jb
add
rolb
shrb
add
stc
nop
es
add
add
add
adc
push
stc
nop
es
add
jge
adc
cli
add
nop
es
add
adc
cli
add
popa
stc
nop
es
dec
cmp
add
enter
mov
stc
nop
es
adc
add
add
clc
mov
stc
nop
es
add
push
add
add
push
mov
xchg
ret
dec
add
add
or
nop
cld
nop
jmp
popa
movb
popa
jb
jns
iret
jne
stc
nop
es
xor
add
add
sub
nop
es
inc
add
dec
add
add
mov
nop
cld
nop
jmp
movl
add
sub
test
stc
nop
es
pop
add
or
mov
xchg
ret
add
add
test
imul
incl
lock
lods
mov
xchg
stc
nop
es
add
pushf
sub
push
cld
nop
jmp
add
add
push
xchg
add
movl
inc
add
add
dec
je
nop
cld
nop
jmp
add
add
add
cmp
lret
or
add
nop
es
add
inc
subb
sbb
add
add
add
add
add
inc
mov
lret
push
mov
mov
add
xor
sbb
jae
push
stc
nop
es
add
out
add
cmpl
es
add
add
pushf
xchg
push
shlb
mov
add
nop
es
add
adc
jb
add
out
sbb
add
inc
push
adc
stc
nop
es
add
rolb
mov
testl
mov
xchg
ret
data16
lods
add
mov
push
push
mov
xchg
ret
cli
dec
add
enter
daa
jp
inc
push
mov
xchg
ret
mov
cmp
add
stc
nop
es
mov
push
add
add
nop
es
add
pusha
or
es
pop
push
push
mov
xchg
ret
add
cli
dec
xor
add
push
stc
nop
es
add
mov
cli
add
and
add
push
subl
nop
jmp
add
sub
add
popf
mov
nop
cld
nop
jmp
add
dec
stos
ror
push
mov
xchg
ret
add
testb
add
stc
nop
es
bound
ret
popa
stos
add
add
add
add
inc
stc
nop
es
push
lret
mov
stc
nop
es
and
add
xchg
add
in
jle
test
pop
mov
loop
aad
jae
add
stc
nop
es
push
es
and
stc
nop
es
and
jns
sub
jb
inc
cli
add
add
add
jne
stc
nop
es
add
mov
es
add
sbb
add
add
dec
push
stc
nop
es
add
inc
add
nop
es
jb
or
jge
mov
jmp
jge
add
add
imul
add
add
data16
popa
outsb
xor
stc
nop
es
add
add
decl
test
or
add
nop
es
add
add
test
nop
cld
nop
jmp
popa
pushf
or
xor
xor
adc
add
push
mov
xchg
ret
add
and
shl
nop
cld
nop
jmp
inc
add
xchg
add
mov
arpl
cld
nop
jmp
stos
pushf
dec
add
inc
mov
test
jnp
les
push
mov
xchg
ret
add
inc
add
aam
sub
stc
nop
es
or
adc
push
xchg
ret
inc
add
xchg
stc
nop
es
add
loop
leave
cld
nop
cld
nop
jmp
lods
xchg
add
add
add
rorb
xchg
stc
nop
es
push
mov
push
stc
nop
es
stos
add
nop
es
add
add
cli
add
add
push
mov
xchg
ret
pushf
dec
add
add
add
stc
nop
es
pop
xor
add
loop
dec
push
stc
nop
es
enter
negb
or
jmp
out
mov
out
and
push
mov
xchg
ret
add
dec
mov
inc
or
adc
add
add
sbb
push
push
fisttpll
test
add
stc
nop
es
cli
add
cwtl
push
push
mov
xchg
ret
lods
add
push
pushl
nop
cld
nop
jmp
add
add
popa
nop
cld
nop
jmp
mov
add
and
add
mov
int
pause
cld
nop
jmp
testb
addb
andnps
add
scas
add
pop
fisubl
stc
nop
es
cli
jo
add
jns
dec
push
push
mov
xchg
ret
xor
add
add
add
mov
xchg
ret
add
add
out
dec
nop
cld
nop
jmp
es
inc
add
dec
jge
je
stc
nop
es
or
xor
inc
add
add
enterw
les
sbb
fistl
fcmovu
inc
add
add
add
mov
adc
cld
nop
jmp
dec
popa
add
add
add
stc
nop
es
add
inc
add
dec
mov
push
mov
xchg
ret
bound
add
rolb
nop
cld
nop
jmp
add
ret
jo
xor
push
push
mov
xchg
ret
add
add
add
daa
cmp
icebp
nop
cld
nop
jmp
lods
add
sbb
inc
jo
xchg
push
cld
push
stc
nop
es
push
add
or
clc
push
mov
xchg
ret
clc
jb
add
dec
xchg
in
cmp
cli
loop
add
add
push
jge
nop
cld
nop
jmp
add
bound
add
dec
int3
and
push
mov
xchg
ret
jns
mov
lock
adc
nop
es
add
push
mov
add
add
push
mov
xchg
ret
rcrb
sbb
mov
xchg
ret
add
add
nop
es
add
cli
lock
nop
es
sbb
clc
pusha
add
leave
push
mov
xchg
ret
negb
jo
scas
pop
stc
nop
es
testb
add
add
stc
nop
es
add
ds
es
push
stc
nop
es
lock
add
xor
nop
cld
nop
jmp
out
add
add
add
adc
mov
xor
add
stc
nop
es
add
pop
xchg
stc
nop
es
add
add
in
xor
push
mov
xchg
ret
jb
add
rep
stc
nop
es
add
add
add
out
mov
stc
nop
es
add
sub
dec
adc
push
push
add
sarl
push
leave
in
add
add
cltd
cmp
add
stc
nop
es
add
ret
add
push
adc
dec
mov
stc
nop
es
add
mov
push
stc
nop
es
adc
sub
add
pop
mov
mov
xchg
ret
push
add
add
add
push
mov
xchg
ret
movl
push
mov
xchg
ret
add
add
pop
call
stc
nop
es
cltd
mov
add
add
loop
incl
push
jns
call
std
incl
dec
popa
add
addb
aad
mov
stc
nop
es
data16
push
add
add
cmc
push
sub
stc
nop
es
orb
data16
test
nop
cld
nop
jmp
testb
add
add
stc
nop
es
adc
add
add
add
pop
cmpl
nop
cld
nop
jmp
ret
inc
add
add
decb
nop
es
add
add
add
add
mov
ror
nop
cld
nop
jmp
xchg
cli
bound
push
adc
push
jmp
stc
nop
es
jns
add
mov
cld
nop
jmp
mov
add
add
add
mov
stc
nop
es
add
push
stos
out
inc
add
sbb
add
mov
jb
add
add
add
push
test
mov
xchg
ret
jns
add
or
es
add
add
mov
add
or
nop
es
sbbb
push
cld
nop
jmp
xchg
add
add
add
enter
push
mov
xchg
ret
sbb
sub
xor
mov
stc
nop
es
dec
ds
add
pusha
nop
adc
stos
add
nop
cld
nop
jmp
add
add
add
mov
stc
nop
es
movb
add
std
mov
stc
nop
es
add
adc
pusha
pop
mov
stc
nop
es
out
add
cli
cltd
mov
stc
nop
es
adc
lock
add
shl
cld
sub
stc
nop
es
mov
add
add
fsts
mov
xchg
ret
sar
rolb
popa
adc
std
dec
nop
cld
nop
jmp
sub
popa
adc
add
or
cld
nop
jmp
stos
dec
testb
add
mov
push
mov
xchg
ret
push
add
jns
mov
mov
stc
nop
es
add
add
add
nop
cld
nop
jmp
add
add
mov
je
nop
cld
nop
jmp
add
cmp
pop
pop
stc
nop
es
data16
add
ds
out
push
stc
nop
es
add
cli
stos
add
stc
nop
es
mov
add
dec
add
nop
jmp
sub
add
cli
xor
add
jl
xor
jle
inc
add
add
aaa
mov
nop
es
enter
stos
bound
mov
stc
nop
es
pusha
or
lea
push
mov
xchg
ret
add
push
je
nop
cld
nop
jmp
jns
add
and
nop
popa
pushf
add
nop
cld
nop
jmp
cmp
pushf
add
sbb
fs
xlat
shll
jb
inc
xor
enter
nop
es
jge
and
add
add
test
pop
add
add
nop
es
cltd
xchg
cli
loop
xchg
les
add
cmp
clc
stc
nop
es
add
add
test
nop
es
movb
es
cmp
inc
add
ret
sbb
adcb
pushl
sub
mov
push
mov
xchg
ret
add
or
add
sub
push
mov
xchg
ret
dec
and
pusha
add
add
stc
nop
es
and
inc
add
sbb
and
nop
cld
nop
jmp
sbb
sub
jge
enter
ss
nop
es
add
jo
add
push
mov
cs
stc
nop
es
jns
jmp
jmp
jo
add
add
add
cmp
nop
es
add
jge
add
add
test
inc
add
sub
add
push
mov
xchg
ret
add
add
stc
nop
es
enter
add
call
nop
cld
nop
jmp
and
clc
add
add
ret
popa
sub
nop
jmp
xchg
add
rolb
jmp
popa
add
nop
es
jo
add
add
inc
and
stc
nop
es
cltd
sbb
add
ret
push
mov
xchg
ret
add
sbb
jne
push
mov
xchg
ret
add
sub
jmp
out
out
add
add
add
xchg
and
popa
stc
nop
es
cli
add
bound
pusha
fs
jle
dec
add
nop
es
loop
add
and
mov
fwait
movzwl
nop
cld
nop
jmp
lock
and
subl
push
mov
xchg
ret
cli
rolb
hlt
mov
xor
nop
cld
nop
jmp
add
add
clc
add
cmp
cld
nop
jmp
add
divb
and
gs
mov
add
add
es
add
jo
add
out
mov
stc
nop
es
and
push
cltd
dec
push
mov
xchg
ret
rol
add
push
outsl
arpl
add
nop
es
subb
adc
arpl
inc
add
add
add
nop
sahf
mov
stc
nop
es
jb
and
repz
shll
inc
push
mov
xchg
ret
lock
add
pusha
xor
mov
stc
nop
es
clc
add
xor
jo
ss
fwait
add
add
loop
add
jge
add
movsl
xor
jb
nop
es
add
aas
nop
cld
nop
jmp
add
popa
add
add
test
nop
cld
nop
jmp
push
add
add
inc
stc
nop
es
add
dec
add
cli
inc
pusha
add
push
mov
xchg
ret
add
stos
and
add
mov
stc
nop
es
add
and
data16
movb
mov
stc
nop
es
add
add
jnp
dec
cmp
nop
es
pop
xor
add
pusha
xchg
cmp
jb
push
add
mov
add
pushf
sub
stc
nop
es
add
sbb
jns
out
mov
stc
nop
es
ds
push
and
nop
es
add
add
add
nop
es
add
cli
add
xor
stc
nop
es
add
add
add
outsl
add
stc
nop
es
sbb
cli
add
cli
add
nop
cld
nop
jmp
add
add
jo
clc
cmp
es
add
testb
add
push
mov
xchg
ret
cmp
add
add
call
stc
nop
es
jb
add
gs
ds
push
mov
xchg
ret
add
add
or
sti
nop
cld
nop
jmp
subb
add
mov
stc
nop
es
cli
jb
outsb
and
push
mov
xchg
ret
add
clc
jns
aas
xor
push
mov
xchg
ret
fs
add
add
nop
jmp
add
cli
bound
xor
icebp
add
push
mov
xchg
ret
and
add
or
add
sahf
jmp
stc
nop
es
add
es
pop
pusha
stc
nop
es
adc
dec
mov
add
sbb
xor
fs
nop
es
add
add
jg
stc
nop
es
jns
add
add
mulb
and
stc
nop
es
out
fs
mov
stc
nop
es
add
mov
stc
nop
es
clc
pop
add
testl
inc
add
sbb
adc
jmp
mov
xchg
ret
xor
loop
mov
stc
nop
es
jo
popa
add
cli
subl
stc
nop
es
and
cltd
add
mov
stc
nop
es
jo
add
ret
decl
mov
adc
nop
es
add
add
popa
mov
fwait
call
stc
nop
es
add
push
and
mov
adc
nop
es
add
data16
es
add
inc
add
inc
stc
nop
es
add
mov
subb
repnz
nop
es
cli
pushf
bound
dec
inc
shll
mov
push
mov
xchg
ret
pushf
push
add
enter
nop
cld
nop
jmp
sub
cmp
add
testb
mov
stc
nop
es
add
pushf
add
jb
cmp
nop
cld
nop
jmp
jge
clc
add
add
xchg
ret
pusha
and
inc
add
inc
dec
dec
nop
cld
nop
jmp
and
push
dec
pushf
lret
jmp
stc
nop
es
add
add
mov
adc
xchg
call
sbb
cmp
stc
nop
es
stos
popa
add
and
mov
stc
nop
es
add
add
add
insb
insb
add
stc
nop
es
xor
add
in
mov
stc
nop
es
or
out
popf
decl
push
mov
xchg
ret
pusha
inc
add
mov
data16
nop
es
add
jns
add
push
nop
jmp
add
loop
add
mov
jmp
push
pushf
add
lods
add
xchg
jl
rcrb
nop
es
add
pushf
add
cwtl
cmp
push
mov
xchg
ret
loop
dec
add
mov
xchg
ret
add
cli
dec
adc
fldl
nop
jmp
loop
inc
add
pushf
dec
mov
stc
nop
es
add
fstl
nop
es
and
inc
add
addb
es
stc
nop
es
ds
push
push
mov
xchg
ret
add
add
xor
mov
stc
nop
es
add
xor
cltd
es
add
and
in
idiv
mov
nop
cld
nop
jmp
add
mov
xchg
adc
push
mov
xchg
ret
add
adc
add
and
nop
es
mov
mov
nop
jmp
add
lock
data16
aam
jne
stc
nop
es
pushf
xchg
sub
stc
nop
es
add
add
xchg
stc
nop
es
add
add
add
add
xor
push
mov
xchg
ret
mov
sub
add
or
movsl
stc
nop
es
clc
add
add
mov
nop
es
add
and
ds
stc
nop
es
ds
inc
addb
mov
je
nop
cld
nop
jmp
add
es
or
push
mov
xchg
ret
add
push
subl
stc
nop
es
add
dec
add
mov
stc
nop
es
add
sbb
rclb
adc
lea
stc
nop
es
add
add
or
nop
jmp
inc
movl
cwtl
xor
stc
nop
es
add
xchg
cmp
inc
fdivr
stc
nop
es
add
mov
stc
nop
es
popa
sub
jne
stc
nop
es
add
dec
add
add
add
add
xchg
add
add
aaa
stc
nop
es
pushf
jb
adc
add
nop
cld
nop
jmp
dec
push
push
add
xor
add
imul
stc
nop
es
add
add
add
mov
cmp
ret
add
push
push
mov
xchg
ret
xor
pushf
stos
add
add
push
mov
xchg
ret
jb
and
add
add
stc
nop
es
jns
xchg
push
mov
add
mov
xchg
ret
jns
add
lods
add
push
mov
xchg
ret
add
add
mov
xor
mov
addl
add
and
stos
pop
ret
addb
add
push
jnp
add
adc
ret
mov
iret
movb
mov
jmp
loopne
sarb
pop
mov
data16
jg
dec
in
mov
xor
add
sub
fwait
sub
mov
push
mov
push
mov
in
repz
jns
cli
rolb
mov
mov
add
in
jne
cmpsl
push
sarl
movb
out
sub
popf
fstps
lock
dec
rorl
stc
sbb
out
fmull
lcall
addr16
add
dec
addr16
aad
movsb
arpl
cmpsb
pushl
scas
inc
add
pushf
imul
pop
ficompl
xor
push
xchg
outsl
mov
jo
lock
mov
mov
add
sbb
cmp
insb
addr16
ss
add
lret
movsl
gs
popf
and
dec
daa
sub
add
es
movq
cld
rcr
jg
sbb
and
sub
out
cld
stc
xor
dec
add
movsl
orl
jmp
and
cmp
xchg
and
inc
sbb
add
xor
in
jne
addl
push
ret
adc
mov
sub
push
in
and
adc
lods
xchg
repz
leave
jmp
push
pop
push
pop
shlb
sub
pop
scas
cwtl
jbe
and
rolb
and
imul
cmp
xchg
out
push
jg
add
cmp
jmp
push
addb
or
add
repz
xchg
cli
add
mov
cltd
push
js
add
cmpsb
dec
mov
jmp
and
pusha
add
fstpt
add
les
aaa
push
push
add
into
push
sub
or
mov
enter
aad
out
dec
icebp
adc
sub
jmp
add
movsl
pusha
add
imull
mov
inc
mov
xor
xor
dec
xor
pop
loopne
in
mov
or
add
mov
jo
in
push
test
dec
push
jmp
mov
inc
xlat
dec
cmp
xchg
xchg
movb
mov
add
xorl
xchg
pop
lret
push
inc
cld
iret
fsts
adc
cwtl
jmp
mov
add
push
mov
xor
inc
mov
pop
cmpsb
xor
sub
sbb
dec
mov
add
push
push
mov
mov
movsl
dec
leave
stos
cmpsb
pop
loope
add
into
popa
or
mov
cmc
push
and
in
mov
stos
sub
xor
pop
sub
dec
xor
adc
add
pop
aas
mov
mov
sahf
lds
jo
lods
daa
call
jp
mov
movb
cs
add
add
filds
add
scas
arpl
mov
cmp
mov
adc
out
test
leave
movl
or
or
add
test
and
add
rcl
popa
dec
xor
jbe
xchg
sahf
jge
or
ljmp
enter
jmp
test
dec
sbb
fisubrl
pushl
add
ja
in
pop
jno
xchg
jecxz
fldt
mov
scas
pop
call
fidivs
pushf
pop
and
inc
add
loopne
add
es
rcll
or
push
outsb
jp
mov
call
lret
xchg
ret
fwait
xchg
sbb
pop
push
popf
pusha
add
add
jp
data16
push
xor
jg
sub
aas
mov
cltd
pusha
add
lea
addb
in
lret
mov
add
dec
push
call
xor
add
sbb
xchg
call
ljmp
pusha
add
push
push
push
jmp
add
add
imul
and
xor
mov
gs
jnp
int3
stos
mov
add
cmp
adc
adc
push
flds
dec
out
sub
scas
imull
js
inc
add
sti
cmpsl
repz
jl
daa
fwait
pop
shrl
sub
jmp
fsubs
pushf
aas
sti
cmc
push
gs
lock
test
jnp
cmp
cmp
lds
cwtl
addr16
and
cmpsl
mov
dec
inc
mov
push
or
jno
mov
cmp
scas
sub
stc
jno
lcall
cmp
cmp
arpl
mov
dec
in
xor
sbb
xchg
imul
cmp
fadds
leave
rorb
imul
cmp
test
rclb
cmp
clc
sub
out
clc
cmp
sbb
scas
hlt
shl
or
rolb
mov
pop
adc
test
pop
bound
sub
add
dec
xor
adc
and
inc
pop
test
and
mov
cwtl
loopne
push
xor
add
xlat
out
cmpsl
scas
push
inc
inc
lock
push
xchg
inc
cmc
in
pop
jb
jp
and
pop
pop
in
or
enter
imul
mov
jl
fidivs
jp
das
jo
orl
xlat
push
pushf
icebp
mov
aam
push
mov
inc
add
mov
inc
add
dec
mov
push
push
daa
xchg
mov
out
hlt
jno
push
add
out
orl
mov
aaa
push
les
shr
jecxz
inc
pop
ja
push
rep
push
cld
enter
popl
add
test
mov
add
addb
xor
outsb
or
mov
andl
int
push
in
ds
xor
inc
xor
divl
adc
rcrb
and
jnp
test
or
or
cmp
movsl
ss
insl
xor
into
in
mov
and
xchg
adc
movb
pop
dec
outsb
mov
addl
dec
cmp
in
stc
nop
add
das
adc
popl
add
rcrl
scas
popa
push
add
xor
lcall
roll
add
scas
lret
xor
xchg
jl
movsl
xchg
mov
addl
scas
pushf
lahf
iret
sbb
push
pop
jae
sbb
icebp
int
cmp
and
outsb
pusha
add
ret
push
lret
and
ss
inc
jnp
sub
xchg
or
jecxz
xchg
push
push
imul
stos
mov
pop
ja
addb
ret
cmp
je
inc
add
shrl
adc
inc
and
push
mov
std
fmull
adc
add
addb
je
xchg
inc
add
sub
jmp
and
xor
add
inc
add
jb
cltd
mov
aas
pop
ja
and
adc
push
mov
add
add
inc
push
mov
xchg
mov
mov
std
mov
add
les
jl
mov
sbb
ret
add
add
fadds
data16
cmpsb
test
pop
mov
sub
enter
fwait
addr16
mov
rcl
nop
cmp
cwtl
rcrl
jmp
and
mov
rolb
fcmovne
jecxz
repz
pop
pop
addb
fsts
int3
bound
adc
repz
add
ljmp
or
scas
pop
xchg
out
cs
xchg
lret
std
sbb
inc
add
fisttpll
xchg
add
adc
jno
test
lods
mov
and
nop
and
push
clc
sub
pop
gs
jae
ja
scas
xor
daa
sbb
xchg
adc
add
mov
jp
ficoms
add
mov
icebp
pop
movups
push
cmpsb
sub
xor
cmp
xor
ds
cld
lret
add
pushf
jl
and
fwait
add
test
clc
movsl
repz
in
addb
lea
and
fstl
jp
push
out
push
fcomps
test
repz
or
faddp
add
je
adc
addb
and
inc
add
mov
xor
dec
xchg
pop
dec
ss
push
add
cli
or
push
cld
xchg
adc
test
jp
adc
push
mov
cltd
movl
lea
loop
push
outsl
cmp
add
iret
imul
mov
dec
insl
mov
and
xchg
dec
mov
push
add
adc
pushf
adc
cmp
mov
pusha
add
sbb
int3
mov
add
mov
mov
ffree
cwtl
mov
mov
sub
add
outsb
push
loopne
add
sbb
mov
psubsw
dec
sti
push
mov
jo
dec
addb
sbb
xlat
daa
xchg
aaa
and
mov
cmp
jo
dec
lods
push
movnti
mov
add
aaa
in
mov
negb
ja
int
bound
lea
add
loope
rcl
imul
popf
sbb
cmp
xchg
push
jecxz
mov
add
dec
cmovge
imul
sub
dec
add
hlt
repnz
add
popf
and
pop
out
enter
jbe
int
pop
hlt
fcoms
dec
hlt
jge
mov
add
cmpsl
cmp
xor
imul
dec
mov
je
and
add
cs
add
push
add
jmp
cltd
shlb
int
mov
inc
add
cmc
aaa
cli
mov
fldl
daa
popa
jmp
aad
mov
inc
add
in
inc
lods
xor
push
rolb
inc
push
outsl
pop
decl
inc
add
icebp
pusha
add
pop
enter
mov
mov
data16
mov
jl
add
cmp
movsb
xor
cmpsb
xor
test
lock
fsubs
lcall
xlat
aad
divb
cli
cmc
mov
add
outsb
add
test
add
icebp
jl
call
addr16
cltd
dec
stos
inc
add
add
ja
cs
daa
mov
sub
arpl
int
pusha
add
dec
pop
or
xchg
out
lods
out
cmpl
xchg
push
add
popl
xchg
push
add
xlat
push
add
add
inc
add
loop
addb
mov
cmpsb
cmp
cmpsw
les
adc
pop
push
ficompl
xchg
roll
add
outsb
cmp
sub
jg
pop
mov
pop
jecxz
aad
outsb
xor
scas
std
sti
je
cmpsb
das
cmp
stos
stos
insb
add
rcll
popf
mov
lods
or
mov
mov
fistl
mov
repnz
in
out
mov
daa
inc
iret
fldt
push
aam
inc
cmp
dec
push
or
cmpl
or
lock
pop
in
dec
int3
cs
add
fsubrl
mov
mov
pop
in
xchg
pop
das
cmc
mov
adc
xor
inc
add
aad
jle
mov
and
mov
push
mov
sbb
add
fldl
out
out
into
cmp
xor
cli
or
sbb
push
leave
mov
xchg
daa
xlat
inc
add
or
sbb
mov
mov
cmp
add
movb
xor
cpuid
fxch
orl
sub
and
test
test
das
or
add
mov
test
xlat
faddp
add
or
pusha
add
add
outsl
mov
lods
mov
and
sbb
and
pushf
imulb
cmp
jo
push
mov
jp
add
push
test
add
gs
movb
daa
aas
jo
cmp
add
das
in
mov
or
bound
imul
or
xor
push
jl
mov
out
test
in
jg
jl
jb
lods
sahf
filds
push
lock
int3
dec
mov
lahf
mov
nop
and
fsubp
movsb
out
sub
repnz
and
jl
push
aaa
xchg
pop
std
daa
mov
psubw
movsb
mov
adc
xchg
cwtl
je
xchg
pop
fcom
jle
sub
mov
sbb
mov
outsl
shrb
inc
fcmovb
addb
mov
pop
test
mov
loopne
pop
shl
repnz
dec
sti
ds
addr16
aas
hlt
js
add
insl
mov
scas
add
in
mov
mov
mov
cmp
push
dec
sbb
adc
int
out
cwtl
jne
out
in
repnz
mov
ss
rolb
mov
test
mov
js
pop
cmp
add
leave
in
icebp
nop
into
fistl
jns
testb
jle
nop
push
es
jne
fmul
ss
stos
dec
push
fcoml
out
ds
addb
jne
fistpl
mov
adc
gs
sbb
hlt
test
sub
fbld
ss
xchg
mov
mov
jns
xor
cmc
bound
jp
popa
dec
pop
lods
into
fsts
repz
aad
add
pop
fwait
and
leave
adc
outsb
push
add
dec
xor
sti
jmp
test
mov
les
add
popf
outsl
data16
push
adc
inc
add
dec
cmpsb
pop
push
in
mov
pop
ror
inc
ret
mov
and
rolb
ret
push
popf
mov
cld
nopl
lds
xor
add
hlt
movsb
add
loop
ret
mov
in
add
aad
loopne
cwtl
es
std
fistpll
ffreep
dec
ljmp
ja
pop
dec
mov
jl
add
dec
sub
add
mov
insb
pop
mov
scas
cmpsl
mov
and
inc
add
or
adc
adcl
push
mov
icebp
sub
or
mov
hlt
push
pushf
repnz
gs
xchg
sub
sbb
out
aad
dec
mov
inc
push
sbb
add
or
mov
repnz
pushf
push
out
jbe
and
cmp
fistl
xor
push
gs
loope
push
cli
and
and
mov
rorl
add
loop
fimull
add
js
mov
les
mov
pop
cmp
add
pop
mov
in
cmp
aaa
call
nop
cmp
fldl2t
mov
aaa
ljmp
nop
bound
mov
and
imul
out
xchg
xchg
sbb
sub
and
cmp
cmpsl
sub
add
lods
movsb
dec
and
add
in
aam
adc
adc
add
or
and
dec
nop
jbe
stc
push
lret
arpl
lea
insb
adc
inc
mov
pop
popf
movb
popa
xchg
enter
pop
pop
push
mov
mov
rcrl
lock
pusha
add
mov
and
arpl
rolb
jp
pop
negb
add
push
or
mov
in
jecxz
das
and
stos
xchg
in
iret
dec
lcall
ljmp
arpl
cmp
push
mov
adc
push
add
mov
pop
int
rcrl
inc
add
sub
notl
mov
push
push
add
add
in
and
shlb
mov
out
enter
je
and
dec
ss
mov
dec
mov
sub
sbb
jp
add
addr16
and
add
mov
pop
jp
movsl
popf
clc
cld
ret
mov
or
add
fld
mov
add
xchg
mov
daa
std
push
and
clc
adc
addb
fisttpll
push
call
call
lret
stos
cmc
imull
add
cmpsb
call
fs
jmp
mov
mov
adc
mov
rclb
dec
int3
jo
int3
push
cmp
mov
push
xor
add
cwtl
ljmp
push
sar
bound
popl
ret
cmp
adc
fsubrp
inc
jle
clc
roll
jge
shll
jnp
mov
lock
cmc
inc
insl
or
test
gs
cld
inc
add
sub
cli
testb
lds
dec
ret
ljmp
push
outsb
int3
jmp
aas
push
mov
enter
mov
lret
xchg
pop
stos
xchg
in
incb
mov
lock
mov
pusha
add
dec
shl
lcall
add
divl
mov
and
xchg
js
pop
mov
outsl
sbb
imul
cwtl
push
sti
divl
rolb
add
lahf
push
add
data16
push
lcall
pop
pop
ljmp
pusha
add
pushf
cmp
or
jne
iret
ja
add
mov
and
cld
int3
sbb
fnstcw
fidivrs
ret
les
rcr
test
sub
jg
mov
sub
insl
mov
les
cmp
shll
mov
lea
loope
sbb
mov
icebp
les
ljmpw
sub
and
mov
add
bound
sub
and
out
mov
sbb
sbb
pop
adc
mov
pusha
add
add
pop
add
mov
mov
push
idivb
jg
lahf
push
add
add
adc
mov
add
inc
add
xchg
add
dec
insl
cmp
sub
insl
cld
add
push
mov
dec
add
push
fwait
sub
sbb
addb
add
movsb
fs
xchg
pop
cmp
dec
sbb
mov
nop
jno
into
mov
or
fsubl
add
add
add
add
jb
aaa
dec
rcr
addb
sub
out
popl
pushl
bound
out
mov
sub
and
in
test
sarl
pop
push
addb
add
or
mov
pop
push
add
sub
lea
test
ja
or
outsb
rorl
dec
xchg
lcall
xor
push
push
ljmp
mov
movb
add
jb
pusha
add
cmc
cmc
dec
cli
enter
jns
sti
repz
lds
or
mull
ret
dec
inc
dec
jge
cmp
ret
lahf
dec
dec
popa
inc
leave
jnp
loop
add
addb
xchg
and
clc
dec
lahf
int3
dec
dec
add
dec
cmp
gs
call
or
adc
mov
in
xchg
ja
out
sbb
add
lock
call
hlt
outsl
jo
add
add
push
lods
inc
add
in
xor
xchg
pop
negl
mov
adc
clc
jno
and
rcrl
jl
pushf
sbb
add
add
mov
cmpsb
inc
add
lods
mov
sahf
and
xor
mov
rolb
add
jecxz
test
inc
push
add
sub
lods
inc
add
stos
inc
add
cld
jle
testl
ja
add
lcall
testb
or
mov
push
divl
add
or
cmp
jns
fildll
jbe
leave
movsl
enter
lock
pop
inc
add
sbb
int
mov
sub
pusha
add
cmpsl
jmp
data16
add
cmp
pop
cmpl
aam
add
fneni(8087
jb
outsl
mov
jle
xor
inc
jb
insb
pop
mov
dec
lds
das
ss
jl
inc
add
adc
lods
sbb
jmp
add
fistps
shrb
jp
or
add
movsb
adc
push
or
or
and
jbe
add
mov
test
add
add
jae
sbb
int
fdivp
cltd
vpsrad
jo
mov
fnstsw
clc
popa
mov
pop
and
rcrl
push
fsubp
fstps
cwtl
and
leave
inc
add
sbb
enter
mov
into
fwait
enter
shrl
out
jb
movzwl
adc
jmp
ja
imul
sub
add
dec
pop
movsl
cli
lret
cwtl
pop
dec
push
inc
add
imulb
mov
add
or
mov
xor
lret
jg
enter
stc
or
inc
add
nop
mov
cli
mov
testl
aaa
ret
das
gs
ljmp
test
clc
ror
xor
dec
lock
mov
pop
mov
lcall
add
jp
ficoml
xchg
jns
sti
or
push
push
in
movsb
cmc
push
outsl
push
outsl
imul
pusha
add
sbb
add
mov
stos
dec
loop
nop
stc
xor
inc
mov
push
lret
inc
xchg
and
mov
and
pop
inc
xor
push
sbb
data16
pop
mov
cmp
ljmp
rol
sbb
mov
addb
or
add
mov
int3
mov
imul
imul
dec
adcl
and
xor
int3
jbe
addb
mov
sbb
sub
gs
lret
xor
sbb
sub
ljmp
fwait
push
mov
inc
stc
jbe
and
push
fidivrl
stos
mov
addr16
sub
divl
std
or
add
mov
pop
jg
cmp
enter
pop
xchg
mov
jne
cli
inc
pop
adc
add
cmpsb
aad
rclb
cmpsl
loope
push
lahf
inc
add
lods
dec
das
inc
add
or
roll
push
in
mov
movb
pop
ficoms
into
enter
scas
jge
mov
addb
dec
push
jns
andl
sbb
aam
add
push
cltd
addb
loope
jbe
mov
xchg
stos
insl
jne
fs
push
test
add
hlt
fdivr
int
shll
mov
sub
or
push
outsl
sbb
sbb
cs
mov
cltd
lea
ja
jl
pop
mov
jno
push
adc
cmp
and
xchg
add
push
push
shll
xor
mov
xor
ret
adcl
rorl
pushf
cmp
cwtl
adc
add
roll
sub
ja
dec
cmp
or
jno
je
loop
add
inc
inc
mov
movsl
jmp
jmp
cld
fsubp
inc
add
xlat
shrl
push
pop
mov
popa
mov
bnd
mov
xchg
sbb
lods
xor
and
cmpsb
mov
inc
pop
mov
subl
xchg
ja
sub
decb
mov
jecxz
pop
out
icebp
mov
xor
sub
push
add
mov
ficoms
call
lret
jg
jo
out
cmp
add
add
jo
add
add
add
sub
jbe
or
push
add
lret
and
jns
fcoml
jne
jno
mov
pop
push
add
dec
shr
sub
ret
and
add
inc
add
addr16
mov
adc
sub
ret
inc
add
addl
call
mov
dec
imul
sbb
mov
ret
jno
lock
addb
repnz
xchg
push
out
add
test
sbb
addb
push
sbb
pushf
ds
rcl
dec
jns
ss
cmp
cs
aas
jnp
ret
lea
sbb
inc
add
mov
pop
xor
mov
xlat
xor
push
inc
mov
in
or
movsb
push
add
in
dec
pop
sbb
lds
je
and
or
and
dec
inc
add
cli
repnz
aaa
cld
daa
xor
mov
jge
jmp
add
outsl
das
out
shrl
imul
push
pop
push
cmp
enter
dec
adc
mov
sbb
mov
out
sbb
and
hlt
cltd
dec
cmp
add
in
jg
pop
push
hlt
xchg
bound
cmp
outsb
pop
and
or
lahf
cmc
test
jo
or
mov
js
fisubrs
inc
push
nop
mov
test
addb
sub
or
mov
movsl
push
sbb
jmp
loop
jno
int
in
cmc
or
sbb
sub
inc
add
sub
mov
xchg
ja
mull
add
pop
adc
call
mov
sahf
leave
int3
jno
jecxz
out
and
dec
scas
stc
mov
fmuls
pop
rolb
mov
mov
cli
sub
inc
add
xor
push
push
test
out
pop
addb
xor
add
push
add
sub
push
fists
int
mov
xchg
push
pop
hlt
cmpsb
lahf
and
or
mov
shl
in
fidivrs
nop
in
push
frstor
xchg
pop
into
add
or
mov
mov
gs
sub
stc
cmp
jecxz
sbb
mov
hlt
cmpsl
jbe
sbb
jmp
mov
pushf
loopne
sub
cltd
das
sbb
mov
adc
pop
movsb
in
out
cmpsb
je
mov
jb
sub
mov
cmp
add
add
push
cmp
movb
pop
mov
xor
cmp
scas
jg
leave
in
sbb
lea
xor
add
add
repnz
scas
in
sub
sbb
hlt
mov
add
mov
push
cmpsl
inc
mov
popa
mov
loope
mov
mov
int3
into
mov
std
push
jbe
cmp
xor
add
mov
addb
repnz
push
test
xchg
jp
sub
in
and
push
add
cld
sbb
insl
and
add
mov
dec
push
mov
mov
sbb
add
cmpsl
cmpsl
dec
or
jae
pop
call
add
add
jb
push
daa
ds
cmp
aas
pop
push
popf
sub
and
add
mov
or
or
cmpsb
sbb
stos
xchg
jmp
fidivrs
pop
pop
mov
les
push
jle
int
add
inc
js
mov
push
popf
add
outsl
int3
cmp
adc
push
add
mov
cmc
ret
rolb
jns,pn
jo
loop
lds
xchg
fsubs
mov
push
xlat
std
cmpsb
popa
adc
sahf
jmp
jp
pop
notl
ja
add
and
scas
mov
movsl
movsl
cmp
loope
jg
addb
mov
lods
push
add
cltd
add
inc
mov
addl
add
pop
dec
xor
xchg
pop
das
testb
out
inc
add
push
jnp
add
jae
pop
jb
stos
rclb
xchg
inc
add
sub
jbe
jno
xchg
pop
xlat
sbb
xlat
mov
cwtl
ret
mov
pop
pop
sbb
add
lods
cltd
push
lret
mov
sub
cmpsl
or
fcomps
popf
fstps
sbb
xchg
test
aam
mov
jnp
xchg
push
adc
xchg
and
stc
mov
mov
pop
lret
sub
lea
je
mov
sbb
and
push
into
push
jno
and
and
push
add
pop
mov
sbb
mov
jnp,pt
add
dec
mov
mov
js
inc
lea
cmp
cmp
and
loopne
mov
test
scas
movb
push
inc
add
sub
lods
scas
add
cmpsl
xchg
gs
jmp
mov
loopne
pop
outsb
mov
mov
rcrb
in
in
mov
call
xchg
testl
dec
adc
mov
dec
mov
pop
int3
push
js
jo
int3
mov
sub
mov
js
mov
mov
jbe
cmp
bound
add
movsb
xchg
je
loopne
cmp
or
push
rolb
add
fimull
mov
sub
in
aaa
inc
inc
ret
and
jne
addr16
cs
iret
sbb
mov
add
cmp
mov
and
stc
pusha
add
add
lods
and
imul
push
into
mov
xchg
and
inc
add
pusha
add
mov
mov
cld
sub
jecxz
add
scas
or
dec
scas
mov
xchg
cmpsl
popa
sub
jbe
int3
rol
add
jp
daa
push
xorl
pop
insl
in
cld
imul
add
ljmp
test
int
pop
or
add
xor
adc
inc
add
inc
add
movb
sti
adc
movb
jmp
pusha
add
pop
es
add
xchg
or
fs
add
adc
test
inc
add
add
add
pop
cltd
sarl
neg
in
cld
fwait
sbb
popa
mov
add
push
rorl
movsb
adc
lock
mov
sub
cwtl
jne
jg
sahf
shll
test
rolb
lds
cld
pop
scas
imul
and
add
mov
pop
fs
pop
out
push
dec
stos
add
jno
mov
out
mov
jle
push
movb
insl
sbb
sub
cmp
pusha
add
sub
add
pop
xor
aad
add
add
adc
fcomip
cmp
jb
xor
scas
mov
out
and
push
mov
lret
enter
or
out
sub
adc
rcrl
cmpsl
in
aam
call
mov
xor
cmp
ss
in
sbb
mov
mov
jge
xor
jge
adc
push
xor
xlat
or
lret
loope
jmp
ret
outsl
add
add
out
je
add
popf
mov
movsb
jl
add
xlat
xchg
inc
dec
adc
arpl
add
dec
cmp
inc
scas
rclb
scas
das
cmp
adc
push
out
cmpsb
cltd
out
jnp
inc
add
pop
mov
pop
xchg
or
add
rorl
adc
or
add
xchg
sbb
mov
mov
add
jge
and
rolb
aam
das
pop
inc
sub
add
loopne
and
insb
inc
sbb
xchg
pop
out
leave
adc
shlb
out
or
sub
push
clc
xor
out
daa
xor
fimuls
dec
gs
add
cld
mov
out
je
int
sbb
push
mov
add
lods
push
push
and
popf
cmp
ss
in
stos
fsubr
inc
bound
and
inc
add
or
aas
movsb
mov
in
dec
in
or
xor
lods
lcall
fs
ret
clc
sti
inc
or
jnp
fmull
jge
icebp
sbb
xchg
add
stos
or
mov
popa
mov
or
in
test
adc
sub
add
jb
sub
mov
xlat
jb
add
pop
js
mov
add
cmp
outsl
sub
add
sub
lds
pop
jle
inc
xchg
adc
sbb
sub
or
sbb
lock
mov
data16
std
pop
push
add
data16
pop
popa
test
cmpsb
icebp
mov
test
bound
popa
mov
add
push
dec
inc
xlat
push
ljmp
push
add
sub
mov
sbbl
fnstenv
cmpsb
fcomps
fadds
arpl
and
jae
mov
inc
add
mov
xchg
dec
enter
dec
ret
out
data16
and
xchg
sbb
call
inc
add
test
fwait
dec
dec
in
es
jmp
mov
add
cltd
mov
bound
aad
out
xchg
aad
rcll
cld
inc
dec
jo
mov
mov
addb
jmp
cmp
jg
xchg
stos
or
popf
push
outsl
in
pcmpeqw
add
cltd
sbb
xchg
inc
and
mov
cwtl
rcrl
in
jecxz
push
push
mov
sarl
add
push
test
push
mov
pusha
add
sahf
icebp
loop
rorl
push
out
push
pop
sub
add
mov
bound
imul
sar
sbb
jg
jp
bound
push
addb
leave
xor
or
out
stos
aam
add
repz
dec
rolb
aam
pop
inc
add
mov
out
jae
xor
cmpsl
add
movsl
fucomp
sbb
out
loope
lods
push
enter
data16
inc
scas
jp
sub
and
mov
add
das
jge
sub
pop
addb
add
enter
mov
loope
lods
jecxz
ja
sbb
js
ret
punpcklbw
mov
loop
dec
cmp
mov
add
fwait
sub
mov
inc
add
int
mov
add
pop
sbb
pop
mov
ja
ret
cli
loopne
rcrl
ret
test
xor
std
pop
adc
add
add
push
add
add
mov
add
push
xor
jp
addb
sbb
and
push
sbb
pushf
cmpsb
xor
in
sbb
je
add
sub
scas
call
out
mov
test
xor
testl
shll
ljmp
jmp
cwtl
mov
stc
dec
popa
cmpsl
or
out
jecxz
jmp
popa
iret
xchg
scas
leave
rcrb
mov
pop
mov
mov
mov
mov
push
add
adc
test
jb
add
sbb
sub
ret
mov
and
jb
add
in
xchg
cmp
fcoms
stos
xor
inc
add
mov
inc
add
xchg
loopne
shr
aaa
cmp
sarl
insb
fsubrl
sti
int
repnz
push
cmp
or
icebp
fisubs
fildl
mov
test
push
loope
int
and
das
mov
mov
add
outsl
aam
cmpl
mov
xor
xor
cmp
adc
popa
jnp
pop
push
mov
jo
pusha
add
add
fs
cmpsb
ja
lds
pop
xchg
sub
sbb
cmp
add
outsl
test
les
ficoms
icebp
mov
xor
add
jb
mov
addb
or
roll
xchg
leave
or
pop
movsb
cmp
jo
stc
dec
xorl
fst
cmp
int
scas
mov
sub
addr16
popf
movsb
mov
rcrl
mov
in
or
cmp
aad
scas
add
loop
icebp
std
lods
jp
pop
rolb
int
mov
pop
mov
fsts
mov
inc
fisttpll
int
mov
and
sbb
or
scas
pop
lret
data16
xchg
movsb
push
mov
and
les
push
imul
shll
pushf
xor
cmp
xchg
pushf
mov
xor
mov
stos
aaa
repnz
inc
and
stos
mov
cmp
in
inc
jb
fdiv
pop
in
jae
add
jecxz
mov
mov
dec
xorl
pushf
cmc
cmp
sub
fst
mov
aad
adc
mov
add
fstpl
adcl
push
out
mov
add
nop
ret
sub
out
shrl
sbb
imul
and
mov
sbb
sbb
mov
push
jae
jb
xchg
mov
xor
sub
insb
inc
add
add
add
pop
and
pusha
add
call
jp
fst
inc
fwait
imul
cmp
xor
inc
add
push
movb
stc
xchg
mov
cs
ss
addb
int
icebp
mov
lahf
aaa
mov
dec
push
sbb
iret
out
arpl
adc
adc
das
adc
mov
xor
push
mov
in
adc
push
ret
mov
pop
lahf
pop
shll
sub
add
movsb
lods
mov
push
loopne
cmp
add
cmp
cmp
mov
cli
xor
mov
pop
inc
add
inc
add
cmp
daa
ret
dec
mov
xlat
mov
and
xchg
jge
notb
pop
rolb
adc
ja
xchg
mov
pop
add
addr16
imul
cmpsb
daa
lock
les
pusha
add
add
add
scas
sub
dec
es
loop
js
sub
mov
add
movsl
ja
outsl
mov
pop
and
into
xlat
or
push
jl
in
hlt
ljmp
jmp
pop
movb
test
inc
lea
push
addl
lock
test
cmc
xchg
push
cmp
mov
test
les
loop
mov
ret
psubb
add
xchg
repnz
or
clc
jb
movb
faddl
dec
dec
out
pop
lods
pop
pop
adc
int3
add
xchg
pusha
add
and
sub
jne
mov
scas
shrl
jne
ja
gs
out
dec
and
and
mov
add
hlt
fs
mov
ret
or
mov
bound
mov
sbb
mov
mov
mov
lods
inc
add
idivb
xlat
call
cmpsl
rolb
movsl
sub
cmp
out
or
dec
fldt
ljmp
lock
out
aas
outsb
ret
iret
aaa
repz
int3
mov
xchg
lret
sbb
stc
and
cmp
inc
sub
cmp
icebp
sbb
add
push
loopne
add
adc
xor
sbb
stc
sbb
inc
out
add
fcomi
enter
add
xlat
dec
out
add
and
in
into
mov
cmp
add
out
dec
imul
fldl2e
jg
daa
loope
pop
dec
mov
fldt
ret
lods
sbb
out
mov
pushf
fildl
or
lcall
adc
pop
icebp
testb
icebp
bound
sahf
cld
loopne
mov
add
mov
bound
pushf
jecxz
stc
mov
lcall
sub
mov
pop
cmp
and
icebp
add
outsl
cmp
and
mov
outsl
or
movb
cli
loop
mov
lahf
filds
pop
mov
imul
mov
inc
add
adc
pop
mov
lcall
ja
stos
xor
and
int3
repnz
mov
add
adc
add
mov
mov
sti
push
mov
mov
push
movb
adc
test
shrl
pop
add
xchg
test
lds
daa
repz
jb
stos
mov
jb
mov
dec
inc
add
cmpsb
cmc
pop
sahf
lods
sub
das
mov
adc
xor
add
sub
mov
jg
out
add
dec
addr16
call
insl
dec
aam
add
int3
adc
stos
in
addr16
std
cmp
add
sbb
add
shlb
add
daa
xlat
fwait
cli
cmpsb
fbld
pop
in
in
push
mov
inc
add
in
mov
pop
xchg
lea
and
test
xchg
or
int
inc
rolb
dec
ficomps
cli
mov
popa
nop
leave
xchg
xor
aas
into
lea
lret
fsts
lea
adc
shlb
mov
mov
pop
mov
push
and
loope
xor
add
dec
lret
mov
pop
or
cmpsl
xor
add
mov
cs
mov
jmp
add
pop
mov
jno
ljmp
inc
add
mov
int3
jmp
popf
jno
aaa
ret
arpl
iret
sahf
bound
push
dec
mov
dec
inc
cmc
rolb
push
in
mov
loop
inc
cmpsl
es
dec
in
or
outsl
mov
and
std
add
fadd
add
jae
push
lret
pop
stos
pop
insl
mov
cld
cmp
cmp
add
sub
push
adc
mov
mov
pop
adc
lahf
mov
or
add
sbb
or
dec
inc
add
mov
fcomps
ret
clc
cmp
mov
aaa
ud1
movsb
ret
add
cmpsb
jl
jno
push
push
pusha
add
into
fistpl
int3
clc
loopne
mov
mov
lds
dec
adc
pop
pop
shll
cmc
mov
hlt
out
stos
pop
sub
or
nop
dec
mov
mov
add
and
in
loopne
mov
push
push
leave
inc
inc
add
lcall
inc
add
sbb
and
idiv
ret
outsb
sub
or
or
icebp
ljmp
add
or
pop
sub
mov
es
sbbl
ja
and
push
sarl
cmp
movsl
cwtl
addr16
or
push
ljmp
push
in
shll
mov
sub
rorl
or
add
jl
add
scas
inc
movsl
popl
dec
data16
mov
mov
dec
notb
fwait
or
cs
add
ljmp
gs
or
pop
aam
pusha
add
jmp
negl
xor
add
xchg
sbb
add
fsubl
shrl
out
add
add
lods
stos
push
stos
push
add
jo
ret
sub
cs
pop
movsl
adc
mov
add
cld
rcll
or
pop
xchg
sub
test
inc
ss
sbb
rol
push
cli
cmp
inc
add
lock
in
mov
add
cld
xchg
adc
dec
mov
or
clc
sub
inc
add
mov
rcrl
inc
push
aad
arpl
sbb
and
out
add
push
sub
jecxz
and
add
fdivrs
pop
dec
fcoms
aaa
loopne
and
add
xlat
adc
std
add
call
push
popa
or
fs
lock
xor
xchg
xchg
fldcw
lahf
xchg
test
mov
ficoms
pop
xchg
test
xchg
frstor
adc
addb
add
in
imul
mov
ss
js
cli
and
in
xor
cmpsl
out
fldcw
sub
xchg
stc
mov
hlt
mov
hlt
push
popa
xchg
mov
mov
cmp
mov
add
cmp
gs
lret
add
lods
ret
inc
add
movsb
arpl
pop
cmpsl
sbb
jge
mov
jns
cmc
pop
mov
add
cltd
jl
popa
aad
cli
sub
add
into
add
sbb
nop
cmp
push
xor
fildll
xchg
sbb
pop
je
ds
mov
addb
gs
cmp
aaa
mov
scas
and
lcall
jp
in
mov
or
pop
or
adc
sub
inc
add
nop
xchg
and
addb
js
add
fstps
adc
xchg
notl
movsb
dec
inc
add
sarl
pop
jnp
add
adc
add
push
inc
btr
adc
push
mov
lret
outsb
shr
popf
push
movb
xor
imul
or
jne
pop
movsb
lea
stos
sahf
mov
sub
add
out
and
adc
sbb
jo
xlat
pop
nop
call
pushf
add
or
popw
add
xchg
in
cld
inc
add
addb
push
xor
imul
lcall
fisttpll
xor
push
mov
in
cltd
jns
mov
jmp
xor
int
lock
mov
jbe
dec
mov
imul
mov
jp,pt
nop
dec
and
cltd
jp
push
push
fucom
adc
pop
inc
ret
push
push
sahf
sub
pop
adc
push
add
sbb
rcrl
movb
add
ret
inc
scas
je
jge
into
push
jns
addb
into
rolb
dec
push
xchg
and
mov
shrl
inc
add
mov
and
imul
daa
xchg
jl
in
in
push
xchg
insl
mov
add
push
jg
xchg
rol
scas
cltd
hlt
mov
lea
mov
into
jecxz
repz
dec
sub
pop
das
push
nop
lods
inc
add
cli
cmp
rcrl
repz
bound
lret
xlat
stos
lea
pusha
add
mov
pop
negl
aam
pop
cmp
mov
daa
cmp
mov
add
jmp
aad
add
lahf
out
add
testl
lcall
sbb
sbb
mov
jo
xor
outsb
addb
cmp
pop
mov
add
inc
add
je
push
rolb
push
mov
add
cmp
dec
insl
mov
rclb
shl
sbb
jmp
ja
xchg
fs
out
scas
lret
mov
add
outsl
add
pop
out
push
fwait
dec
mov
adc
icebp
flds
jmp
pop
add
push
cmp
sbb
cmp
add
xchg
push
or
adc
sub
insb
pop
aad
fildl
add
or
xchg
stc
xchg
sbb
adc
aaa
ds
xor
xlat
add
ror
pop
xchg
test
movsl
adc
call
add
clc
dec
mov
jne
cmc
sahf
cmp
scas
sbb
imul
pop
inc
add
clc
add
fs
into
fdivp
data16
inc
add
xor
cmpsl
cmpsl
sub
out
imul
add
pop
pop
add
rcl
jg
add
imul
fldl2t
ret
push
sub
aaa
test
add
add
loope
data16
cltd
inc
add
test
add
push
add
mov
jge
push
dec
push
adc
mov
shll
xor
fldenv
add
pop
push
add
jnp
mov
insb
jge
add
mov
fldl
jl
mov
jno
xchg
cltd
lock
jae
test
rcl
idiv
neg
das
mov
out
pop
jb
ficomps
mov
push
inc
jge
inc
add
stos
adc
add
repnz
xchg
fucomi
ljmp
pushf
and
sbb
add
insl
mov
pop
push
inc
add
mov
cmp
call
mov
shl
mov
sbb
inc
dec
ja
lret
push
add
dec
add
clc
or
inc
bound
pop
je
jmp
addb
sub
sub
add
aad
push
adc
hlt
pop
pop
pop
std
jge
or
push
sbb
xchg
fists
out
or
inc
nop
xchg
mov
dec
mov
and
fs
fs
cmp
mov
cmp
fsubrl
jo
jns
lret
sub
call
addb
cmp
ficoml
cmp
add
add
and
push
pop
sbb
xor
mov
sub
imul
sub
outsb
and
or
mov
in
xchg
add
sub
adc
lea
sbb
cmpsl
mov
add
pusha
add
pop
movsb
adc
js
add
adc
cmc
repz
cmp
pushf
mov
scas
mov
sbb
cwtl
stos
mov
push
add
stc
fld
cmp
jno
add
movsl
jno
test
jbe
mov
add
mov
add
and
mov
add
test
add
add
cmp
adc
inc
xor
ret
sbb
out
out
imul
out
xlat
xchg
mov
jne
jle
je
mov
push
fidivrl
lods
icebp
mov
lret
pop
mov
sbb
mov
xor
divb
sbb
hlt
pop
pop
lods
xchg
mov
mov
cmpsb
xorps
stos
in
inc
add
push
or
jno
push
add
mov
test
subl
mov
dec
test
sbb
inc
shlb
add
xchg
xchg
sub
add
faddl
xchg
push
sub
lods
mov
add
into
xor
cmp
add
add
xor
mov
add
lcall
mov
test
nop
outsb
int
sbb
gs
dec
xor
add
xor
push
test
sbb
idivl
mov
jb
adc
cld
imul
jg
cld
popa
or
fwait
and
mov
or
push
sbbl
insb
sbb
xchg
add
adc
nop
int
cmpsb
lret
inc
cwtl
cmp
jmp
sbb
xchg
jl
push
push
add
xor
cmpsl
dec
push
adc
test
cs
jle
aaa
fdivrp
inc
add
into
mov
add
imul
stc
xchg
jns
aad
push
enter
pop
jecxz
add
sbb
xchg
out
sbb
cmp
scas
mov
daa
push
roll
outsl
or
xor
dec
adc
movb
iret
andl
ss
inc
mov
repz
das
add
loop
and
mov
push
cmp
jo
rclb
addb
add
stos
add
dec
and
test
sahf
jae
popf
imul
mov
pop
jo
push
jae
pop
push
sti
xchg
popa
loope
lods
loope
xlat
pushf
pop
jnp
es
xchg
and
ret
addb
add
or
add
mov
pop
mov
shlb
mov
sub
decb
mov
fwait
pusha
add
and
sub
mov
aad
pop
mov
mov
test
sbb
iret
mov
int
push
inc
mov
xor
dec
pop
les
xchg
add
add
fwait
addb
add
jns
jg
xchg
or
inc
add
add
daa
data16
js
movsl
cmp
es
cmp
jne
std
xchg
and
sub
add
jne
repz
mov
repnz
cmp
xor
rolb
shl
mov
cmp
add
imul
push
xorl
fiaddl
xlat
xchg
std
dec
mov
cmp
loopne
mov
push
add
xchg
std
cmpsb
jae
sarl
and
mov
adc
lods
clc
test
xchg
jp
inc
add
insl
lret
push
hlt
movsl
mov
jns
push
mov
into
insl
and
incl
popf
pop
in
and
std
out
mov
add
popf
das
cmp
sub
add
stos
icebp
jns
pop
mov
fsubr
jle
sub
push
shr
and
mov
lcall
mov
xchg
push
out
sar
sub
pop
mov
xchg
lea
shrb
insl
jbe
test
cmpl
addb
or
and
and
mov
sub
loope
or
cmp
fdivrl
scas
mov
andl
push
cli
jns
fsubrl
inc
add
jb
repz
add
mov
pop
shll
mov
gs
mov
repnz
mov
sbbl
fldcw
in
push
sbb
test
add
mov
adc
stos
jle
add
adc
lea
push
aaa
lods
xchg
in
int3
jns
sub
rcll
mov
add
xchg
pop
pushf
jae
dec
inc
jbe
loope
sbb
out
repz
xor
dec
mov
addr16
popf
pop
adc
add
lock
cltd
mov
add
xor
mov
out
adc
bound
inc
hlt
ljmp
movsl
pop
in
lcall
sbb
add
mov
out
popa
mov
adc
sub
insl
push
xchg
xchg
or
rcr
xor
cld
or
fcompl
mov
push
fisttps
jecxz
pop
fistps
gs
dec
pop
fmull
into
cmp
mov
cmp
dec
push
fsubr
mov
movsl
mov
push
scas
jo
pop
dec
addb
xor
sbb
add
movb
push
loop
add
push
js
inc
add
aad
add
rcll
sub
jnp
xchg
pop
mov
add
sub
movb
lds
xchg
lret
iret
mov
rolb
nop
sub
mov
add
adc
mov
pop
std
addb
into
jno
xchg
fiaddl
je
or
jno
les
shlb
pop
push
lret
mov
mov
pop
pop
mov
ret
daa
xlat
xchg
aas
xchg
cmp
fcmove
push
cmp
dec
jecxz
jl
pop
cmp
shl
mov
mov
pushf
ret
inc
jb
js
mov
movsl
rcll
insb
pushf
shll
je
mov
nop
jecxz
loope
or
inc
add
or
dec
loope
decb
ljmp
lea
adc
loope
xchg
mov
repnz
iret
cli
clc
pop
jecxz
test
add
insb
jmp
add
dec
lahf
dec
inc
add
sbb
imul
addl
cmpl
or
jecxz
add
add
xlat
ret
pop
mov
cmpl
hlt
insb
xor
push
cli
in
adc
mov
jp
inc
jb
sbb
or
add
cmp
adc
aaa
movb
imul
pop
rclb
xchg
mov
add
cmp
adc
add
movsb
imul
inc
add
add
jbe
lcall
dec
add
mov
pop
xor
add
add
sbb
and
sub
jle,pt
mov
pop
jo
int3
jne
pop
pop
sub
dec
lea
pop
shlb
pop
push
bound
jmp
mov
fmul
mov
lds
rolb
add
cs
xor
pop
dec
fadds
ja
adc
pop
mov
sbb
add
pop
add
add
push
xlat
loop
xor
popf
push
sub
rcrb
mov
in
pop
jns
cmp
add
ja
add
rorl
xchg
leave
pop
mov
add
out
inc
add
xchg
or
pop
inc
mov
mov
loopne
xchg
push
mov
push
push
xchg
sub
mov
jg
pop
icebp
ds
arpl
cs
lods
iret
cld
pop
mov
jl
out
mov
in
insl
divb
mov
mov
sub
in
mov
cmp
hlt
cmpsb
inc
adc
test
in
dec
add
cwtl
leave
xchg
add
pop
shll
movb
rolb
arpl
xchg
insl
frstor
pop
aaa
sbb
pop
mov
testl
cmp
inc
jno
int
mov
xchg
aad
repnz
jp
push
sbb
test
cmp
aam
add
sbb
xor
mov
ss
mov
sbb
jl,pt
sbb
insb
lock
call
xor
cmpsb
dec
inc
add
cli
jl
xchg
cmp
pop
rolb
add
scas
lods
ficompl
cmp
insl
cs
add
nop
add
addr16
stos
add
push
testb
daa
out
addr16
js
push
in
or
cmp
jae
scas
xchg
xchg
movsb
das
fstp
scas
mov
sub
xor
fs
dec
mov
je
mov
rcll
add
mov
rcll
gs
push
xlat
mov
imul
mov
iret
shl
add
inc
add
leave
xchg
aas
mov
ret
mov
nop
jno
xchg
mov
dec
cmp
push
loop
or
or
xchg
out
mov
add
adc
sub
adc
lahf
lret
xor
add
and
fcoms
mov
add
inc
jmp
sub
out
push
push
mov
and
cmp
add
inc
popa
xchg
push
add
mov
movsl
sub
push
test
popa
cmp
jl
add
dec
inc
ret
mov
scas
mov
test
jnp
lods
addb
add
pusha
add
pusha
add
arpl
out
xor
mov
or
add
decb
int
jl,pt
or
pop
xchg
add
add
enter
fadd
add
add
lcall
or
bound
jo
push
push
add
adc
xlat
push
into
cmpl
jae
sti
out
push
fnstenv
dec
xor
lahf
inc
add
pop
add
filds
popa
and
sub
add
lock
js
push
fdivl
sub
cmp
inc
add
push
add
stos
das
fists
push
lods
cmp
cltd
addb
add
mov
add
add
xchg
mov
push
fbstp
add
cld
jmp
adc
pusha
add
fisubs
mov
aam
jne
xchg
or
test
dec
mov
xor
pop
fists
or
fistl
dec
addb
inc
add
cmp
push
add
das
pop
xchg
xrelease
jl
mov
cs
sub
add
fs
xor
dec
mov
jns
cwtl
ud1
sti
pop
dec
add
add
movsl
cmp
push
adc
arpl
adc
fucomp
jno
push
iret
push
pushf
xor
xor
out
addb
xchg
js
inc
add
mov
jl
inc
lcall
jae
jo
fstpt
outsl
sbb
shr
fs
fcom
dec
xor
mov
and
push
inc
fildll
lret
add
cld
ret
mov
cmp
dec
in
cmp
sbb
fsts
in
les
addb
sahf
lods
add
stos
pop
xchg
movsl
xor
lods
sbb
testb
aam
into
jecxz
add
and
pop
inc
and
push
aas
repz
leave
jle
add
jmp
add
into
mov
sub
sub
mov
mov
jo
mov
inc
sub
xor
add
mov
les
jp
dec
icebp
inc
add
ret
add
cmp
and
or
lds
pop
lahf
lods
les
aas
test
arpl
add
and
xor
imul
xchg
aad
push
push
xor
mov
mov
mov
insb
cmp
lea
dec
test
pop
inc
repnz
cmp
sahf
push
cld
mov
xchg
push
ret
cmp
fcomps
je
sub
push
test
add
jbe
mov
add
stos
cmp
cmovl
ss
hlt
pop
test
rcrb
or
sub
push
pop
jo
scas
adc
sbb
inc
add
cmc
pop
push
orl
stos
or
adc
arpl
cmpl
lcall
pop
push
hlt
push
xchg
push
push
or
and
rclb
or
or
pop
jl
add
mov
cli
and
cmc
scas
lods
shr
movb
push
jl
pop
scas
inc
add
or
je
fnsetpm(287
xchg
mov
mov
iret
mov
daa
scas
push
mov
adcl
stos
or
xchg
sub
movsl
lcall
mov
add
dec
xchg
cld
popf
add
test
or
jge
not
pop
and
mov
aam
in
or
lcall
fcmove
mov
stos
push
vfrczpd
jb
jl
add
xchg
mov
lods
jl
mov
and
and
vpsadbw
dec
pop
inc
or
outsl
xchg
mov
sti
rolb
nop
jns
test
add
rclb
imul
cmp
lods
fs
push
mov
add
add
imul
faddl
cli
shll
in
xchg
xlat
jge
lret
movsb
lods
js
hlt
dec
notb
ror
mov
push
fisttpll
out
into
sbb
add
push
mov
mull
pop
mov
xor
add
mov
incb
sub
xor
mov
int3
out
add
movsb
aam
call
rcr
sub
pop
pop
nop
std
ljmp
add
lods
lret
mov
nop
jecxz
fldt
cmp
xchg
mov
add
cmpl
lcall
push
add
aaa
inc
fs
cmovl
jno
push
add
iret
pop
insb
test
add
roll
add
add
add
xchg
sti
hlt
sbb
movsl
mov
push
popf
push
fs
stc
pusha
add
push
cmp
jecxz
movsl
and
sti
jge
jmp
loope
add
xor
and
pop
push
add
and
mov
pushf
int3
sbb
test
icebp
pop
aaa
jg
jo
gs
mov
repz
idivl
xchg
mov
xchg
insl
adc
pop
cmp
imul
or
mov
aam
subl
xchg
faddp
jge
pop
xor
jae
addb
add
ja
ret
adc
inc
mov
rcll
scas
push
cli
sub
jno
add
faddl
out
in
pop
lahf
lcall
pop
mov
sub
xchg
push
int3
jae
gs
add
add
lea
mov
add
mov
ret
inc
add
jae
sub
mov
jnp
icebp
xchg
and
loopne
nop
or
dec
out
test
inc
add
mov
pushf
adc
std
push
and
pop
or
popf
mov
push
add
dec
jno
popf
dec
jp
jns
fs
jp
xchg
dec
mov
mov
jle
xlat
fldpi
adc
jecxz
jae
dec
push
jle
popf
popa
dec
or
call
sub
loopne
stos
hlt
sub
mov
into
xchg
shll
adc
and
rcl
pop
push
add
xlat
in
jmp
sub
insb
xchg
lods
xor
dec
lods
int3
jg
nop
dec
mov
pop
loope
mov
int
ret
push
enter
push
outsl
jne
ret
int3
xor
movb
test
inc
xchg
loope
icebp
mov
xor
outsb
add
jg
addb
aas
xchg
mov
dec
insl
push
sbb
dec
cmp
push
scas
add
test
repz
movb
xor
jp
in
leave
shl
loop
inc
lods
aad
jb
pusha
add
inc
dec
js
mov
dec
fidivl
es
fadds
push
int3
ljmp
mov
and
jg
int
adc
adc
or
ret
sub
pushf
add
xor
std
sahf
std
std
mov
xchg
or
xchg
adc
add
call
out
and
mov
xor
push
mov
stc
lret
mov
adc
pushf
pusha
add
cmp
sub
scas
leave
pop
mov
fisubl
mov
cmp
inc
add
dec
arpl
add
leave
and
jo
sub
int
sarl
add
out
pusha
add
lea
add
xor
fimull
push
mov
add
test
cmpsl
mov
cld
lods
out
je
mov
dec
int3
cmp
jns
cmp
xlat
dec
adc
adc
adc
xchg
repnz
sbb
mov
push
inc
mov
inc
or
add
cmpsb
sbb
xchg
int
add
sbb
fcmovbe
mov
sbb
inc
mov
add
ljmp
les
fimull
fnstcw
lcall
dec
imul
cld
cmp
out
push
sarl
add
mov
int
mov
lea
hlt
cmp
stc
xchg
xor
push
mov
add
sti
cmpsl
or
hlt
stos
cwtl
cmp
mov
int3
repnz
pop
sub
lock
jle
out
fneni(8087
fwait
and
add
loopne
clc
lock
sbb
dec
mov
jge
inc
add
cltd
notb
movl
add
sub
push
mov
add
cwtl
dec
fists
jno
xor
push
push
mov
xor
or
add
mov
add
lea
mov
dec
sbb
xchg
sub
mov
add
add
testl
mov
and
fninit
push
fadd
sub
pop
and
fists
nop
pop
pop
cmp
dec
stc
loopne
mov
add
add
sub
adc
clc
pop
dec
xchg
cmp
mov
arpl
pop
shll
inc
mov
add
popf
or
push
cld
rol
add
mov
dec
clc
xor
popa
dec
gs
ret
dec
sub
jle
addr16
dec
dec
mov
je
sub
inc
adc
stos
jmp
into
rcl
std
dec
lahf
ret
push
jg
inc
add
mov
cmp
xchg
enter
loop
ds
inc
add
iret
cs
ficompl
fwait
and
pop
mov
xlat
jae
and
mov
add
lds
cld
pop
add
mov
repnz
ret
mov
ja
das
out
add
jge
add
stc
ljmp
inc
add
inc
faddl
lret
subl
data16
insb
loop
in
jae
addl
push
xor
sbb
mov
scas
aaa
push
repnz
popf
mov
aam
inc
cmp
insb
lods
inc
xchg
test
sbb
sbb
insb
or
cltd
adc
or
ljmp
out
add
leave
cmpsb
sti
pusha
add
cwtl
in
cmc
fcompl
fnsetpm(287
adc
mov
hlt
or
push
lock
mov
lods
push
pushw
jp
sub
outsl
add
add
lds
or
mov
xchg
or
fisubrl
std
js
pop
cmp
lret
dec
addr16
inc
add
addb
push
xchg
dec
sbb
int3
fdiv
inc
add
movb
and
add
pop
pop
int
outsb
inc
add
fidivs
imul
add
inc
sub
shll
cs
mov
inc
add
xor
ljmp
rolb
mov
xchg
push
ss
push
add
clc
xor
cmc
test
or
dec
cwtl
sbb
mov
sub
sbb
sbb
aas
outsb
scas
ds
loop
mov
outsl
hlt
adc
addb
lea
shl
movb
sub
add
sub
lods
push
mov
dec
cli
jmp
inc
inc
sub
jb
xor
inc
mov
incb
out
sub
aam
xlat
lds
adc
lahf
dec
sbb
aaa
sbb
ss
xchg
popf
into
mov
sbb
add
and
cmpsb
mov
push
cmpsl
mov
in
xchg
add
insb
cmp
shl
mov
hlt
cmp
pusha
add
add
add
imul
push
xor
sbb
xor
adc
lret
jmp
mov
andps
addr16
mov
add
aaa
cmp
ss
mov
filds
lds
xor
add
sbb
xchg
and
hlt
sbb
sti
xor
addb
mov
rolb
addb
push
add
pushf
sbb
lret
out
inc
add
mov
pop
out
leave
dec
xchg
je
xchg
mov
es
sub
jns
scas
out
and
xor
stos
dec
fwait
rolb
loope
mov
cmc
sub
pop
iret
mov
cmp
push
pop
insb
insl
pop
sarl
add
push
insl
movsb
in
insl
inc
inc
add
movsb
imul
or
loopne
shl
dec
fmuls
adc
mov
mov
pop
mov
sahf
adc
je
mov
cmp
adc
xchg
sarl
mov
ds
mov
aam
add
lods
jne
insl
outsb
gs
pop
push
add
int
add
add
in
jmp
out
aaa
mov
cwtl
insb
push
jg
add
in
dec
fcoml
out
addb
mov
push
jecxz
mov
stos
mov
mov
and
out
std
mov
add
add
add
mov
xlat
int
sub
dec
cmp
xchg
cwtl
jo
xor
add
shrd
add
add
out
mov
dec
sahf
jl
js
adc
lock
mov
adc
pop
icebp
aaa
push
or
out
bound
push
mov
add
lret
lds
sub
imulb
sbb
outsl
rolb
popa
lret
cwtl
test
addr16
test
xchg
repnz
call
dec
pop
divl
inc
iret
inc
add
adc
pop
mov
es
sahf
push
leave
pop
xchg
lret
iret
jmp
dec
fsub
xchg
arpl
loope
add
dec
outsb
xchg
xorl
sti
or
sub
sub
mov
push
mov
gs
and
bound
outsl
sbb
or
mov
mov
lret
push
sbb
dec
mov
imul
sarl
sbb
insb
arpl
inc
add
pop
mov
mov
ret
cmp
jmp
dec
popf
and
push
xor
pusha
add
add
cli
mov
cltd
pop
ds
test
addb
mov
cmp
sbb
add
clc
inc
mov
loope
xor
xchg
xor
dec
mov
xchg
fcoms
sub
test
mov
cmp
dec
pop
push
and
xchg
dec
addb
out
and
mov
ljmp
add
cltd
clc
pop
leave
lret
xchg
adc
xchg
push
scas
lret
mov
mov
push
and
sub
mov
mov
jecxz
pop
out
adc
popf
out
clc
ss
dec
daa
dec
inc
add
aam
clc
insb
fcmove
xlat
leave
sbb
lcall
pushw
loope
and
sbb
or
addb
das
lcall
dec
imul
jnp
hlt
mov
sti
jb
adc
jbe
xchg
mov
addb
mov
add
and
inc
jg
add
rolb
sub
ss
adcl
movsl
stos
ret
out
push
cs
imul
mov
repz
add
lods
rclb
jb
and
push
jb
and
push
dec
rolb
or
ss
aaa
scas
lds
adc
fldl
adc
sbb
cmpsb
cmpsb
jp
mov
adc
popf
sahf
xchg
leave
icebp
aam
mov
mov
xor
lcall
cltd
lds
lds
add
daa
in
add
xchg
xor
sahf
jo
jecxz
mov
nop
jb
add
addb
or
ficoml
shrl
sub
lods
addb
mov
stos
cmp
rolb
pop
loopne
jl
xchg
popf
cmc
popf
outsb
jae
loopne
inc
add
bound
cmc
subl
add
jbe
dec
add
outsl
pop
inc
inc
mov
sbb
and
std
xlat
addb
xchg
lods
add
add
int
shlb
addb
addb
mov
loopne
shr
testb
data16
push
xchg
xchg
in
mov
pop
pushf
loop
pop
cmp
cmp
out
into
imul
and
lcall
rcl
shlb
orl
cld
cli
lods
adc
add
dec
loop
adc
cmpsb
sub
add
cmp
add
dec
imul
cltd
fcmovne
inc
add
es
sbb
mov
bound
cmp
add
popf
pusha
add
xorl
or
ss
cmp
mov
add
insw
push
mov
mov
sub
enter
loopne
pop
and
add
rolb
jnp
xor
stos
arpl
jecxz
push
pop
arpl
fidivrl
adc
movb
ss
add
mov
and
sarl
lds
and
pop
jns
std
push
adc
jno
push
mul
shlb
sub
les
fbld
bnd
stos
push
notl
fcoml
or
and
jns
fnstcw
int
add
jmp
sub
cwtl
lods
in
add
xchg
sarl
in
jl
add
loope
jo
add
xchg
lahf
xor
outsb
or
xor
clc
jo
lret
dec
pmaxub
or
loope
aam
sahf
mov
outsb
pushf
shll
sbb
ss
add
push
and
sub
lahf
pop
mov
and
mov
cmp
fs
sub
mov
add
xor
cmp
push
cmp
jmp
mov
add
add
mov
jecxz
sub
push
aam
add
jmp
aas
mov
sbb
pushf
mov
test
jae
aam
mov
adc
add
outsb
adc
or
repnz
aam
sub
adc
fld
add
into
loop
imul
add
mov
and
stos
lds
dec
cmpsl
lods
add
mov
sbb
add
and
rolb
jg
add
jne
or
and
add
popa
ljmp
push
or
or
adc
add
addb
adc
jbe
idivl
arpl
push
lods
rol
jecxz
jns
push
addb
inc
pop
frstor
add
out
in
int3
adc
or
imul
stos
mov
add
pop
daa
movsb
les
cmpsl
leave
into
push
movsl
jnp
mov
push
add
add
xor
lcall
je
sbb
add
sbb
and
cmc
filds
sbb
test
in
dec
cld
mov
push
adc
jmp
lods
inc
add
in
or
sub
je
fisttpl
cmpsb
fs
fstl
sbb
nop
inc
jb
test
xchg
loopne
sbb
jae
mov
jp
movsl
in
imul
xor
push
shl
sbb
add
cmpsb
adc
add
mov
out
clc
adc
icebp
or
jno
fsubl
dec
lds
mov
int3
clc
push
jg
pop
dec
int
pop
push
mov
scas
dec
aad
dec
fiaddl
and
movsl
mov
out
cmpsb
fwait
xchg
pop
cmp
fiaddl
dec
push
into
outsl
js
lock
mov
das
hlt
adc
sbb
push
xchg
dec
les
outsl
ret
fwait
jg
daa
dec
cli
sbb
aas
pop
fcomps
test
mov
jmp
fidivrs
and
repz
add
out
fs
add
aam
ja
test
cmp
cmc
int3
test
into
add
jns
jne
bound
mov
and
jns
push
imul
mov
xlat
psubsw
nop
dec
push
inc
add
adc
movsl
sarl
sbbl
addb
aas
aas
push
pop
jle
sbb
lea
in
inc
leave
in
mov
mov
pop
lock
test
out
add
mov
testl
jo
add
push
aaa
jbe
lods
les
nop
sti
xor
out
out
dec
mov
jle
out
sahf
cltd
movl
aam
push
add
add
jl
add
sar
in
mov
sub
divl
and
jo
ja
mov
cmp
addr16
push
lcall
or
fwait
sbb
mov
enter
jecxz
sub
pusha
add
movntq
add
test
outsl
lahf
sub
inc
cmpsl
into
leave
std
push
and
pop
lea
mov
aas
or
jne
sar
rorl
push
xchg
aad
cmp
mov
add
add
scas
jae
jmp
mov
out
add
mov
pop
rol
into
fcomps
repz
outsl
dec
pop
aas
andl
negl
add
int
add
push
shll
out
addb
xor
cli
ds
fisubrl
insb
adc
in
mov
repz
mov
mov
jae
dec
mov
sub
add
test
hlt
lea
adc
ja
js
lret
adc
xor
push
and
outsb
imul
jmp
add
test
dec
jge
xor
dec
fs
out
mov
int3
inc
add
add
scas
repnz
in
pop
insl
gs
sub
fsubl
add
push
sbbl
add
dec
repz
push
mov
pop
mov
xor
shl
jnp
xchg
aas
les
mov
call
movb
adc
std
jle
xlat
bound
jno
mov
sub
dec
cmp
pop
xor
stc
pop
adc
sub
pop
mov
sub
repnz
fsubl
mov
xchg
pop
bound
addb
sbb
adc
add
lret
dec
mov
hlt
adc
lcall
das
imul
mov
lods
sub
test
call
mov
add
adcl
adc
ret
pop
gs
add
add
arpl
fcomps
mov
or
les
pop
jns
inc
push
hlt
mov
push
adc
add
mov
sarl
sub
gs
push
mov
mov
xchg
inc
add
das
xor
ret
mov
imulb
mov
stc
mov
add
add
pop
out
and
mov
sbb
jp
push
push
mov
dec
in
pop
inc
movsl
mov
and
add
or
mov
jge
cwtl
pop
rorb
cmp
dec
iret
inc
and
out
cmpsb
cmp
push
jle
cmp
mov
addb
imul
adc
mov
stc
aam
xchg
lds
mov
jmp
sbb
loope
xor
or
add
adc
addr16
pcmpgtw
jno
jl
aaa
mov
mov
jo
stc
xorl
cmp
mov
andl
neg
lcall
mov
cmp
dec
adc
movsl
cmp
xlat
test
movsl
dec
or
ret
mov
or
add
push
jg
add
fisubl
popa
xor
ss
xchg
pop
cmp
aas
inc
add
ljmp
aam
fdivl
hlt
add
iret
cmpsl
add
jbe
or
jns
add
jp
add
xchg
pop
mov
cld
int
dec
add
data16
mov
push
shrl
push
test
fwait
and
push
cli
mul
fucomi
aaa
mov
repnz
xchg
add
ficomps
or
ja
int3
xchg
jno
add
and
jb
call
into
ficompl
dec
mov
dec
xchg
xchg
loop
sub
push
xor
sub
inc
and
or
jp
xchg
cmp
add
and
scas
jmp
dec
xchg
idivb
add
int
dec
decl
movntq
inc
lahf
inc
add
mov
jmp
pop
lods
adc
mov
cld
loop
aam
adc
clc
mov
rorb
sbb
add
xchg
sub
inc
add
mov
f2xm1
gs
xor
xchg
and
loopne
fstpl
add
or
xchg
mov
addb
add
mov
sub
in
fcompl
les
push
sahf
repz
cmc
in
hlt
lods
sar
imul
sahf
inc
movsl
pop
leave
xor
xchg
pop
ss
inc
inc
xchg
mov
out
fxtract
insl
adc
add
sahf
or
add
pushf
loopne,pt
mov
add
jl
push
pop
cmp
add
out
mov
cmpsb
xor
mov
add
or
cmpsb
in
pop
and
xor
in
cmpsl
addb
pop
inc
add
fnstcw
or
pop
jp
jno
or
cmp
push
mov
add
pop
sbb
add
dec
movsb
push
cltd
std
std
sbb
clc
out
lret
mov
mov
xor
jne
lcall
jae
icebp
leave
mov
jmp
dec
inc
add
out
mov
add
lret
or
xchg
aad
mov
add
jmp
cmp
fcoml
mov
mov
repz
inc
add
leave
xor
push
mov
add
sub
sbbl
add
shlb
pop
cmp
dec
fsubrs
movswl
cmc
cmpsl
inc
pusha
add
cmp
xor
bnd
xor
dec
outsl
jp
nop
test
jmp
cmp
or
jl,pn
sbb
add
lds
cltd
ds
inc
add
adc
xor
fnstsw
push
iret
in
add
mov
jnp
mov
mov
rorl
push
cmpsl
divb
cmc
es
push
addb
or
mov
aas
sub
add
sbb
add
bound
aad
gs
lar
mov
mov
outsl
arpl
cmp
xchg
inc
add
xor
pop
and
repz
add
js
lds
mov
xchg
push
fnstenv
gs
loop
mov
and
popa
sbb
dec
sbb
inc
add
mov
or
push
cmpsl
jl
add
test
ja
mov
mov
lods
jecxz
daa
fbstp
dec
cld
into
aaa
push
dec
push
xor
adc
cwtl
test
xlat
pop
mov
add
enter
sub
dec
pop
add
pop
repnz
jnp
adc
mov
pop
mov
push
std
aam
popa
test
mov
or
xlat
out
fmuls
cmp
jl
jns
out
sub
add
setge
jo
stos
mov
lods
inc
add
pop
mov
mov
xor
mov
sbb
inc
add
sbb
mov
loop
jb
mov
dec
call
dec
dec
jecxz
push
subl
add
xor
cmpsb
out
pop
mov
daa
das
mov
mov
and
mov
pop
pop
outsl
inc
add
mov
push
ficoms
adc
arpl
pop
pop
lret
mov
jae
gs
sub
stos
dec
outsl
mov
jbe
call
lret
stos
insb
jecxz
mov
mov
lods
cld
pop
sbb
push
inc
add
sarl
fisttpll
sti
out
lret
leave
stos
lahf
push
xchg
nop
lods
ficoml
bound
hlt
sahf
lds
add
cs
mov
add
imul
add
mov
xlat
pop
jle
xchg
outsb
cwtl
push
sub
push
clc
add
sbb
inc
add
hlt
aas
dec
lods
popa
test
movsl
mov
push
pushf
rcrb
imul
jl
jle
inc
cmp
push
xchg
clc
outsl
and
or
add
adc
lock
pop
push
scas
fidivrl
xchg
test
insb
jp
pushf
in
or
aad
outsb
cld
mov
adc
int3
test
in
push
jae
addb
dec
cmp
aad
ljmp
fs
push
pop
xchg
lret
rolb
add
data16
ret
add
xchg
insb
lods
push
xor
nop
cmp
adc
mov
add
push
sub
stos
jbe
inc
mov
es
add
xchg
fidivrl
add
icebp
push
loop
add
les
mov
dec
mov
add
jg
jns
add
cmp
jl
mov
scas
jg
push
mov
enter
or
rolb
push
pop
shll
jle
ret
mov
jmp
ja
adc
mov
in
les
fistpl
jmp
out
sub
sbb
push
pop
cmp
mov
add
mov
inc
add
stos
lret
or
mov
orl
packuswb
mov
rorl
adc
in
fwait
inc
add
in
daa
fnsave
dec
dec
or
add
mov
xor
in
push
fldenv
add
add
xchg
lahf
mov
stc
add
and
cmp
push
jg
inc
add
lods
lds
add
and
icebp
push
scas
and
das
fidivl
or
fstpt
clc
out
pop
jmp
adc
add
add
xchg
movsl
nop
push
jne
add
or
popf
sbb
insb
and
pop
jmp
add
add
add
mov
push
ljmp
dec
jg
inc
add
inc
add
add
add
jne
push
stc
xor
sbb
sbb
movsb
lahf
and
or
jle
add
mov
rcll
cmp
and
popf
push
int3
iret
sub
les
xor
cmp
add
add
and
add
rol
add
mov
out
add
xor
cltd
mov
dec
add
fwait
repnz
pop
xor
mov
aaa
rorl
ja
imulb
ja
cmp
xor
fsubr
lret
leave
jmp
add
add
lock
pop
and
push
mulb
fsub
mov
nop
icebp
inc
and
mov
add
testb
rcll
fimull
mov
and
fucomip
rcrl
mov
or
mov
stc
out
and
lea
adc
test
pop
push
mov
neg
sub
mov
popf
xchg
dec
jmp
test
test
test
idivb
sub
ficoms
std
mov
movb
pop
repnz
sahf
cwtl
mull
or
in
lahf
mov
mov
jmp
push
fnstsw
cld
outsb
cmc
gs
mov
jno
cmp
les
addb
push
add
sbbl
cld
aam
out
pusha
add
ja
mov
sbb
pop
js
inc
mov
fimull
out
das
and
add
sbb
jo
test
into
dec
ret
mov
ljmp
rolb
fldl
scas
fnstsw
arpl
js
xchg
xlat
dec
inc
add
rorl
hlt
push
push
ss
into
jb
loopne
daa
mov
cli
popf
push
sbb
inc
add
cmp
mov
lods
insl
bound
flds
dec
mov
dec
loopne
push
addr16
jle
cli
push
aaa
pop
push
mov
out
test
or
ret
dec
lods
popf
fwait
aaa
cmp
add
jae
decl
add
pop
nop
jne
sarb
loope
inc
add
iret
repz
add
jb
inc
add
mov
fcoml
add
pop
into
lcall
add
mov
aam
cmp
push
jecxz
cmp
sbb
push
lods
xchg
pusha
add
rorb
in
cmp
stc
pop
mov
scas
mov
jno
mov
outsl
pop
sti
outsb
and
mov
pop
dec
mov
fildl
mov
push
jp
adc
stos
xor
mov
add
cmpsb
int
adc
in
xchg
adc
test
fldcw
jnp
mov
pusha
add
sbb
cmc
daa
repnz
hlt
jne
es
ja
pop
xchg
insl
rclb
lea
add
jmp
dec
push
xchg
pop
sbb
xchg
mov
push
jbe
jae
jbe
adc
add
lcall
sbb
add
lcall
add
movsb
and
std
or
xchg
pop
mov
add
je
scas
jp
pop
sub
cwtl
jno
mov
jbe
xor
jecxz
int3
cmp
test
iret
lcall
xchg
repnz
sbb
sbb
adc
push
nop
stos
movl
pop
rclb
mov
add
xchg
mov
ficomps
cld
inc
or
out
ret
xor
fcom
bound
repz
aaa
shll
add
lock
xlat
hlt
lret
out
jp
or
sub
js
stos
and
add
ror
or
shll
cmp
insl
pop
je
fwait
adc
fistl
mov
daa
das
xchg
pop
popa
int3
in
push
xchg
mov
pop
test
xchg
gs
rol
mov
cmc
inc
and
push
or
les
pop
icebp
dec
lret
cmp
add
inc
mov
add
push
out
rclb
repnz
ret
push
add
ljmp
insb
in
cmp
sub
pop
xchg
xchg
lods
push
shll
fmull
inc
add
mov
scas
mov
repnz
scas
pop
jl
xor
sbb
enter
pop
lcall
sbb
ds
push
into
insb
push
sub
aad
ds
adc
daa
xor
out
or
fisttpl
data16
and
mov
mov
scas
mov
push
movsl
xchg
dec
icebp
inc
add
mov
pop
push
pop
mov
and
dec
jne
add
xor
dec
fnstcw
cld
add
aad
stos
aad
mov
add
cli
mov
sub
and
or
fstl
jne
loop
mov
xlat
inc
push
movsb
mov
dec
lea
xor
cmp
cmp
jne
mov
sub
jb
add
xor
repz
add
and
stos
leave
add
stc
lret
xchg
popf
xchg
jecxz
movsb
addl
lret
ja
dec
pop
lcall
cmp
inc
adc
cmp
fadds
mov
mov
jno
adc
jns
nop
xchg
loopne
add
mov
enter
add
sub
ficompl
push
cli
adc
push
out
mov
add
pop
push
xor
test
pop
in
ds
lret
cmp
out
inc
add
xor
rolb
jno
add
mov
sahf
sbb
mov
lods
xchg
add
inc
add
jne
add
repnz
ljmp
sbb
adc
mov
add
pop
mov
add
add
lds
and
aas
lods
xchg
daa
xor
shrl
cwtl
dec
mov
or
sbb
ficoml
push
mov
jl
sbb
hlt
scas
fnstcw
lock
bound
leave
divb
daa
mov
iret
fstps
ss
hlt
int3
inc
scas
rcll
mov
inc
push
xor
add
sarb
mov
sbb
jno
jmp
inc
push
icebp
mov
test
daa
and
pop
arpl
xchg
movb
mov
cltd
push
mov
mov
pop
scas
iret
mov
fdivrp
jns
inc
add
add
fwait
push
mov
xchg
lods
lcall
adc
mov
push
movb
gs
into
imul
adc
das
lea
sbb
fwait
inc
add
out
adc
fmulp
pop
and
fmuls
pop
jo
and
pop
push
xchg
adc
xor
mov
sbb
mov
rol
testb
mov
mov
push
xchg
roll
cmpsl
dec
in
aad
out
jge
mov
add
cmp
loopne
int3
sub
adc
sbb
lahf
outsl
adc
xor
add
inc
fidivl
inc
adc
add
out
xchg
addb
add
cmp
addl
loope
in
pushf
pop
or
in
repnz
dec
jbe
in
imul
sbb
add
int3
cmp
sahf
mov
sub
aaa
ret
nop
stos
aad
xor
pop
or
add
pop
pushf
inc
jg
aam
add
addl
push
jno
sub
pop
or
lods
repnz
push
fwait
loopne
dec
or
clc
in
jbe
add
jb
idivb
xchg
mov
lea
movsl
in
mul
jmp
xor
inc
mov
xor
and
mov
inc
add
sarl
cld
add
jecxz
xor
fdivs
fdivrs
mov
fwait
imul
pop
mov
mov
aam
or
cmp
mov
and
or
mov
add
test
pushf
adc
addb
xor
mov
ljmp
cmpsl
lods
sbb
loopne,pt
jl
lahf
lahf
pop
adc
pop
loope
lea
clc
pushf
mov
imul
jl
mov
out
pop
dec
sub
add
push
test
std
les
ret
push
ret
push
hlt
adc
push
mov
mov
out
jge
aad
std
jns
xor
xor
test
adc
cs
pop
scas
jo
sub
xchg
jbe
lea
jge
ljmp
out
nop
stos
cli
xchg
mov
mov
sbb
repnz
jae
inc
add
cmp
xchg
sbb
nop
push
dec
in
call
jge
sbb
test
lret
or
pop
pop
mov
push
add
movsl
test
xor
in
test
xchg
inc
add
ja
repnz
rorl
sub
cmp
outsb
movsb
push
jecxz
ss
add
push
fcmovu
rcll
je
test
xchg
and
rclb
fsubrl
add
xchg
push
mov
aas
push
dec
push
push
xchg
arpl
sbb
fwait
pop
dec
or
and
ficoml
cld
lret
add
negl
ret
sbb
add
sub
cltd
jo
insb
arpl
sub
add
jbe
in
or
lods
ds
jne
add
xchg
inc
sbb
cld
inc
push
sub
fwait
cltd
cli
iret
adc
pop
cmc
test
cld
aas
jns
mov
xchg
xchg
clc
dec
inc
rolb
add
movsl
mov
mov
sbb
push
std
push
add
jae
leave
shl
mov
adc
push
pop
js
jb
imul
fistpll
xorl
add
lods
loop
sbbl
mov
push
jno
dec
stc
pop
sub
add
ret
ljmp
sahf
and
xor
jae
add
push
pop
xor
jge
aas
adc
add
jp
add
pop
push
mov
lea
popa
add
ds
test
or
test
push
cmc
pusha
add
xor
add
out
lds
jge
pop
mov
mov
movsb
sti
xchg
bound
leave
adc
sub
pop
mov
jmp
enter
into
or
cltd
insb
shr
aam
insb
jl
imul
jb
cmp
gs
mov
aas
push
xlat
inc
add
sbb
aas
ja
es
xchg
jg
or
jle
hlt
ffree
add
mov
add
rorb
and
add
rorl
andl
aas
or
push
js
out
add
cmp
push
fcompl
pop
inc
pop
and
xchg
mov
std
pop
insb
outsl
pop
cmpsb
dec
fwait
sub
jnp
je
add
call
bound
data16
enter
gs
stc
iret
movsl
xchg
cmpsb
jne
sbb
sbb
lret
rcrb
jmp
fwait
imul
inc
cmpsb
push
fstpt
add
dec
jge
dec
push
adc
aaa
sub
dec
sbb
add
inc
add
and
mov
mov
add
cmp
mov
push
add
xor
xor
nop
sbb
aam
ljmp
lds
mov
nop
cmp
mov
add
hlt
mov
punpcklbw
sub
sub
orl
roll
xchg
mov
lahf
lods
sub
push
mov
addb
add
test
pop
jg
and
add
hlt
icebp
adc
dec
jmp
push
lahf
sbb
jns
rcll
mov
add
cmp
push
jg
sbb
movsb
adc
add
scas
jbe
pop
mov
shl
and
jg
mov
dec
insb
jnp
sub
dec
xchg
jmp
add
aam
xor
sbb
push
loope
xlat
es
icebp
adc
vmwrite
adc
rorb
mov
push
js
int
add
cmp
mov
adc
push
sbb
out
sub
repz
or
dec
add
int
add
add
fisttps
insl
inc
lds
aad
adc
xor
pop
add
add
add
scas
movsl
xchg
mov
jo
inc
cltd
sbb
add
xor
movsl
mov
jns
sbb
test
adc
out
out
jae
add
add
dec
push
fs
xchg
sub
leave
push
mov
mov
out
icebp
rolb
pop
pop
adc
scas
mov
out
jmp
cmp
push
adc
pop
dec
enter
push
xchg
add
mov
rolb
and
repz
nop
jp
sbb
push
call
add
cmp
icebp
push
sub
jecxz
pop
xchg
shl
mov
arpl
mov
cli
icebp
sti
pop
ficompl
push
jb
aad
rolb
lds
cmp
sbb
cmp
rcrl
inc
xor
aas
jo
mulb
rol
and
cmp
out
mov
lret
cmp
pop
mov
add
cld
scas
inc
add
pop
repnz
mov
jbe
jp
xor
jo
mov
xlat
xchg
imul
inc
pop
mov
push
sub
mov
adc
inc
insb
sbb
mov
jne
out
lret
pop
push
pop
mov
add
xchg
mov
jo
lods
cmp
add
jmp
or
cmpsl
jo
dec
sti
fs
fcomps
loope
not
jmp
stos
in
inc
add
dec
ficompl
jp
repnz
jg
adc
add
arpl
mov
xchg
jne
cmpsl
xchg
mov
mov
pop
scas
mov
sub
mov
xchg
out
cmp
mov
loopne
add
jge
imul
ret
in
rcll
pop
sbb
daa
aas
inc
xchg
gs
add
test
stos
cwtl
ljmp
mov
out
out
loopne
add
es
inc
mov
out
shrb
add
test
imul
in
sbb
sahf
lods
in
or
jb
add
clc
in
jge
add
push
movb
ret
rcll
loope
adc
mov
mov
push
lock
cmp
outsb
push
adc
cwtl
ljmp
dec
imul
and
mov
add
add
xor
test
adc
les
scas
imul
mov
add
sbb
lods
pop
popa
mov
rolb
std
push
fidivs
sbb
and
shrl
test
dec
aam
loopne
mov
inc
add
add
in
out
jne
jmp
jle
sub
scas
int3
cmp
std
in
das
sbb
stos
ljmp
xchg
xchg
test
xor
outsb
lret
add
pop
cmp
xchg
andl
jl
and
cmpl
pop
and
jg
and
addb
call
and
cltd
das
pusha
add
mov
icebp
mov
les
psubd
pop
daa
add
mov
add
inc
lock
sub
mov
push
add
lret
adc
add
fistpl
in
cmp
mov
cmp
fdivr
xor
iret
mov
jmp
xchg
imulb
adc
adc
dec
adc
add
cmp
fiaddl
addb
test
add
jl
scas
lahf
shll
xor
jmp
pop
xchg
mov
inc
add
jne
fwait
imulb
lds
rolb
cmp
push
cmp
lods
or
nop
pop
push
divb
jmp
add
mov
add
push
mov
push
sbb
jg
adc
dec
adc
bound
cmp
adc
add
or
push
jl
xchg
sub
cmc
outsl
ficoml
lret
mov
addb
jcxz
mov
add
lcall
int3
pushf
push
test
outsl
scas
adc
add
xchg
orl
cmp
or
xor
mull
or
pop
add
and
jne
inc
add
pop
mov
lahf
movb
popf
in
push
sub
jne
jne
add
adc
fs
je
mov
add
jbe
jle
ss
aad
out
jo
xlat
out
fisubrs
ljmp
add
pop
cmp
pop
jns
jge
add
adc
and
push
or
xchg
pushf
xchg
adc
jbe
dec
and
mov
xchg
call
hlt
push
cmc
xchg
dec
repz
mov
dec
lahf
jmp
stos
mov
push
les
test
jecxz
std
aas
lahf
jbe
add
sub
inc
add
dec
shr
dec
aad
mov
mov
and
mov
xchg
mov
mov
xor
mov
push
mov
mov
mov
adc
sbb
arpl
mov
addb
add
mov
sub
in
add
in
inc
add
mov
push
xor
cmp
pop
pop
pop
or
loope
stos
xor
adc
sbb
out
inc
cwtl
and
lcall
lods
rolb
sub
mov
stos
jecxz
sahf
push
xchg
adc
pusha
add
adc
cmpsb
mov
test
test
xchg
add
add
aam
mov
into
out
add
lods
cli
or
and
in
dec
jle
outsb
mov
push
push
adc
xchg
adc
imul
pop
mov
add
add
addb
or
out
add
pop
arpl
and
sbb
mov
sub
loopne
leave
ret
repz
inc
or
add
or
jl
icebp
imul
loope
ret
mov
lret
or
ret
lahf
ret
ror
xchg
and
sub
aaa
adc
movsl
adc
das
push
lahf
inc
add
inc
fnsave
jo
iret
inc
add
xor
jns
push
fidivl
or
add
lea
jmp
stos
test
out
inc
add
test
push
pop
imul
addr16
jo
jne
add
dec
sbb
roll
jns
scas
jmp
in
movb
mov
add
lret
fwait
cltd
sahf
jge,pt
xor
pushl
jb
push
pusha
add
sbb
add
bound
mov
aas
data16
rolb
jbe
xchg
shr
das
xchg
pushf
movsl
xchg
cwtl
adc
xor
add
subl
rolb
mov
sbb
pop
stc
rorl
loopne
addb
adc
dec
push
lea
insl
rcrb
cmp
sbb
rcr
movups
loop
aam
imull
cmovs
lea
sahf
mov
mov
sbb
mov
addb
lret
jb
fcoms
xchg
ret
imul
fs
ja
test
test
cmpsl
pop
mov
mov
movb
rcrl
sub
test
gs
int3
loope
inc
addr16
insl
push
jp
and
add
or
push
push
lret
mov
add
rolb
and
xor
neg
cmp
lret
out
mov
push
lds
push
cmp
fcoms
mov
xor
and
ret
jmp
rcll
je
addb
dec
jbe
gs
xchg
fcomps
push
add
fcoms
dec
sbb
xor
mov
lea
xchg
mov
jecxz
xchg
iret
pop
pop
lahf
cs
mov
xlat
out
arpl
add
pusha
add
jo
fld
add
mov
xor
cwtl
js
insb
dec
mov
popa
push
test
test
pop
outsl
das
sarb
dec
pop
or
lds
cmc
mov
add
xor
jnp
add
add
inc
add
push
ja
mov
fimull
icebp
jbe
jl
add
addb
imul
xor
lret
dec
push
sbb
mov
lcall
scas
in
xor
mov
push
icebp
ror
aad
inc
bound
push
aad
cltd
enter
xchg
push
mov
leave
push
xor
add
sub
ficoms
jo
cmova
data16
add
sub
imul
fdivs
mov
lods
icebp
mov
jns
mov
adc
mov
dec
movsb
dec
ret
add
add
mov
in
scas
and
gs
pop
or
jne
add
pop
int
add
mov
add
sbb
add
push
adc
das
cmp
inc
inc
add
push
dec
pop
mov
lock
or
addb
inc
add
ds
scas
pop
inc
add
pop
xchg
scas
push
scas
in
xor
dec
inc
call
mov
aaa
cmpsl
outsb
add
jmp
bound
daa
dec
xchg
mov
push
xchg
xchg
aad
addb
mov
push
xor
push
lret
dec
out
xchg
int
mov
dec
sbb
stos
jle
cmp
mov
xlat
sub
inc
add
bound
inc
sub
mov
add
push
push
cmc
adc
incb
cmp
push
adc
mov
pop
jno
in
cmp
cmpsb
sbb
and
add
lret
rolb
lret
cmp
xorl
pop
jno
pop
push
pop
xlat
mov
or
xchg
mov
push
xchg
jne
repnz
lods
mov
add
sbb
cmp
push
sub
add
repz
or
or
sub
daa
mov
and
jo
mov
pop
ljmp
in
ret
out
inc
adc
push
pop
cmp
fnstcw
in
cli
in
pop
jnp
pop
or
add
mov
cmp
add
add
add
out
or
inc
add
add
out
out
add
push
add
mov
lods
es
fdivrl
mov
xchg
dec
mov
in
push
add
xor
cmp
sbb
dec
movsl
xchg
fcomps
aad
call
and
sbb
rclb
out
mov
out
cmp
jo
add
ja
cmpsl
cmp
mov
cltd
sub
push
push
addb
jno
dec
adc
or
inc
add
adc
outsb
inc
mov
mov
push
lock
test
rorl
pop
mov
lds
scas
or
roll
shll
add
pushf
lcall
lds
lcall
mov
inc
add
imulb
test
daa
enter
adc
add
out
dec
adc
push
shld
loop
fstp
add
inc
cmpl
fstps
push
pop
mov
movsb
or
aas
pop
sarb
mov
pop
sbb
jo
lahf
mov
in
dec
pop
es
rcrb
adc
jp
lea
sbb
mov
pop
push
jno
loope
push
and
add
cld
or
xor
add
or
xchg
ret
adc
inc
add
std
mov
sub
xor
inc
lea
cli
pop
push
or
ret
jb
test
lock
rolb
dec
outsb
lcall
pop
ds
mov
inc
add
push
lret
add
mov
enter
mov
add
and
cwtl
ror
mov
sub
inc
add
sub
mov
cmp
xor
test
pop
jo
jg
int
decb
repz
rclb
imul
jo
xlat
rolb
test
xchg
mov
aaa
addr16
mov
dec
in
js
push
xchg
jge
jne
mov
push
jmp
mov
movb
add
fsubp
enter
cld
xchg
xor
add
scas
jg
std
inc
mov
add
add
add
scas
jmp
xor
mov
or
int3
inc
sti
mov
movsb
push
add
incl
cmp
dec
adc
or
scas
or
add
addb
rolb
pop
push
inc
shll
add
test
aam
int
stos
mov
jl
pop
movb
push
iret
xchg
cmc
in
or
mov
loop
lods
setg
movl
mov
push
nop
fwait
repnz
add
sub
mov
add
add
jmp
mov
das
neg
adc
and
jmp
add
or
ret
add
jp
pop
shll
rclb
adc
movsb
xchg
pop
jnp
fucompp
movsl
mov
jb
fstpt
insl
lret
mov
jbe
fmull
sbb
push
dec
pop
sahf
xor
inc
add
test
add
jo
mov
sbb
xchg
or
sarl
in
add
rcrl
cmp
fildll
xchg
jecxz
add
push
mov
and
cmpsb
cmp
movsl
shlb
callw
popl
xor
inc
add
dec
in
dec
shll
out
mov
add
mov
shl
mov
scas
xor
pusha
add
pop
sbb
mov
jecxz
add
cmpsl
sbbl
shll
insb
pop
lcall
scas
outsb
push
mov
sar
pop
xchg
push
lock
xor
mov
shlb
mov
cmp
dec
smsw
mov
jmp
adc
cmp
push
repz
mov
inc
add
shlb
shl
das
or
jbe
ljmp
mov
xchg
pop
push
dec
lea
pusha
add
cmpsl
loop
fwait
and
jg
dec
add
lds
ljmp
int3
pop
sbb
ss
adc
add
cld
jl
in
cwtl
or
cmp
xchg
add
cwtl
mov
addb
lea
mov
add
ret
fimuls
pop
inc
add
inc
add
lea
push
pop
call
mov
nop
test
rolb
repnz
fidivs
push
add
addb
sub
and
mov
mov
xchg
push
bound
jno
or
mov
movsl
xchg
cmp
adc
je
adc
stos
dec
xchg
hlt
jp
adc
jno
jno
adc
jecxz
push
dec
adc
iret
and
xchg
das
loope
mov
sahf
sbb
cmp
cld
shlb
bnd
jb
mov
push
lahf
inc
add
and
xchg
push
add
out
mov
mov
sub
adc
pop
dec
movsl
data16
stc
fcmovnbe
in
jne
int
pop
cld
nop
pop
lock
cld
je
lcall
cmp
insl
mov
push
jns
xchg
daa
shll
in
std
ja
mov
jecxz
inc
pop
mov
jecxz
add
and
mov
inc
add
aam
flds
loop
add
mov
xor
inc
add
add
xor
pop
jb
lret
jmp
sub
push
js
ss
fcompl
and
addb
dec
xchg
pusha
add
mov
loop
movsb
xchg
mov
add
fsubrs
outsb
jns
fisubrs
adc
jp
mov
adc
int
push
mov
and
cmp
roll
lods
mov
jle
sub
add
sti
mov
and
lcall
add
repz
lret
les
addb
xchg
add
lcall
xchg
gs
out
fcmove
push
ffreep
ret
inc
add
jns
sbb
mov
pushf
cwtl
jmp
dec
dec
push
add
shrl
jnp
xlat
push
add
in
loopne
clc
push
and
add
sbb
fcoml
push
cmpsl
stos
xchg
pushf
and
jge
btrl
hlt
inc
add
in
gs
lock
imul
ret
int
out
pushf
xor
icebp
push
les
dec
std
dec
and
aad
pushf
ljmp
in
xchg
imull
sarl
stos
xor
sbb
lds
divb
adc
mov
add
add
enter
stos
ret
pop
mov
and
test
je
lock
outsl
inc
add
add
inc
or
jecxz
push
xor
or
push
stos
dec
out
adcl
sub
shr
lcall
sbb
inc
int3
adc
xchg
fstps
test
ljmpw
fdivs
push
negl
sahf
int3
mov
add
sbb
divb
in
xchg
mov
inc
test
in
lods
mov
fsubs
into
xchg
clc
mov
xchg
sub
stos
cmpsl
xchg
int
cs
pop
jg
push
cld
inc
add
loopnew
mov
outsl
jg
cmp
add
faddl
dec
xor
add
rolb
rcr
and
dec
bound
pop
hlt
test
mov
clc
cmc
stos
loopne
ja
and
add
sub
xchg
dec
or
inc
add
lock
add
lahf
shlb
add
mov
mov
or
inc
cwtl
cmp
and
nop
ret
pop
cwtl
mov
inc
add
xchg
and
sub
stos
addb
and
mov
fucomip
sbb
add
into
xlat
iret
out
out
cwtl
jb
daa
sub
in
adc
movsl
testb
cmp
push
jge
inc
mov
cld
inc
add
ja
mov
imul
les
stos
push
popa
jmp
push
test
popl
addl
imul
sbb
or
mov
arpl
jmp
in
inc
add
rcr
lret
sbb
jmp
cmc
idivl
rcrl
cmp
or
mov
mov
dec
xor
add
xchg
cmp
jnp
nop
jns
push
sahf
or
push
pop
and
pop
adc
push
add
shr
icebp
lea
jl
inc
pop
jbe
arpl
add
mov
add
scas
ret
or
cmpsb
push
je
gs
sbb
mov
shrb
js
cmp
pop
jecxz
jge
fidivrs
addb
clc
dec
fcompp
add
jle
pusha
add
mov
cwtl
fisttps
fidivl
dec
cltd
mov
in
sub
or
jmp
cli
xchg
lds
or
out
dec
int
movsl
fidivrs
or
test
add
xor
mov
rorl
bound
push
push
mov
pop
jg
adc
aad
sbb
and
jns
jmp
lea
add
dec
stc
dec
xchg
inc
add
sub
pop
inc
add
add
sub
rorb
mov
movsb
in
xchg
lods
mov
icebp
push
add
jg
cld
mov
cwtl
and
lret
inc
cmc
addb
jns
xchg
cwtl
inc
add
xor
mov
loopne
add
rorb
dec
adc
int
out
and
lock
stc
lods
or
mov
cmp
fidivl
scas
xchg
dec
xor
cmp
das
vmovdqa
add
jb
sub
cmp
stc
dec
subps
push
jb
push
cmp
jg
add
add
xchg
stos
xor
sbb
jge
in
std
ret
pusha
add
fdivs
bound
mov
sub
adc
icebp
xor
js
add
add
sub
lret
sub
pop
jp
shrl
push
sub
dec
or
clc
pop
mov
mov
push
sub
es
add
jmp
out
dec
and
push
int3
mov
add
xor
add
xchg
aad
add
mov
rorb
mov
iret
add
push
pop
data16
sbb
push
pop
inc
push
xchg
or
sarl
insb
out
mov
stos
inc
add
inc
test
cmpsl
mov
in
dec
ljmp
mov
and
lahf
arpl
jns
loop
add
jno
sbb
cmp
rorb
cmc
stos
sub
pushf
mov
mov
xchg
add
xor
mov
rcl
mov
rolb
sahf
pop
mov
push
nop
lahf
pop
loop
lods
or
filds
mov
test
dec
negb
fmull
adc
add
xor
inc
mov
ljmp
int3
push
mov
xchg
sbb
xchg
fwait
inc
add
xchg
lret
scas
fadds
icebp
jg
mov
xchg
insl
dec
shll
pushf
xor
adc
pop
fcomps
mov
fs
add
fcompl
sub
pop
adc
aam
int
xchg
pop
in
add
jne
mov
pop
ja
add
rcll
and
xchg
movsl
arpl
xchg
cmpsb
fbstp
mov
add
inc
cld
xchg
push
mov
repz
inc
add
je
dec
jbe
dec
out
mov
inc
add
xor
cli
mov
push
or
add
inc
add
adc
les
jg
lods
pop
inc
add
lret
xchg
mov
fcmovne
scas
rolb
and
lock
fwait
pop
and
out
imul
add
jnp
mov
and
scas
sub
sbb
xchg
loopne
add
sub
js
loopne
lahf
shlb
jbe
pop
and
cs
movb
ljmp
add
fnsave
add
push
daa
mov
addb
push
cmp
jo
sahf
push
aaa
shl
bound
loopne
stc
cwtl
jg
insb
loopne
incl
or
movsl
jnp
daa
negl
jae
add
sub
mov
inc
add
loope
iret
es
mov
loop
sub
add
rcrl
lods
ret
aad
sub
test
sbb
push
adc
pop
test
lret
push
nop
fchs
or
fbld
pop
mov
das
and
insb
pop
sub
mov
in
adc
jg
jecxz
add
add
test
js
mov
lret
and
repz
test
mov
add
clc
cmc
div
dec
cmp
scas
adc
pusha
add
bound
stc
push
mov
push
xlat
jg
bound
jns
aas
mov
ret
xlat
cmp
fists
imul
das
add
mov
add
enter
fwait
test
or
push
pusha
add
loope
mov
dec
jg
pusha
add
test
aad
mov
fmul
inc
ljmp
mov
sbb
pushf
jns
inc
cmp
fists
call
xor
addr16
ja
popa
push
cmp
push
adc
in
js
jle
sub
add
js
pop
hlt
jp
mov
loope
add
into
call
cmp
mov
push
mov
inc
add
jl
mov
movsl
lret
jmp
jmp
test
dec
loope
add
lods
cmp
cmp
bound
pushf
leave
mov
je
xchg
jns
xlat
or
cmp
mov
dec
das
imul
sets
cmpsb
sbb
mov
add
insl
addr16
inc
add
popf
in
arpl
sbb
int
mov
mov
or
sahf
and
outsb
fsubrl
jl
inc
add
cwtl
and
mov
clc
lods
pop
push
xor
add
xor
rcl
cmc
fcomi
bound
mov
push
xor
add
xrelease
jmp
inc
mov
xchg
aad
lods
add
sti
mov
add
lret
add
add
sub
and
inc
add
mov
add
lcall
ja
jnp
lock
mov
cmp
sahf
jbe
loope
in
cmp
sub
loopne
add
mov
pop
aaa
fisttpl
dec
xchg
mov
pop
ret
xchg
pop
mov
inc
mov
mov
fs
jo
imul
mov
dec
lods
mov
pusha
add
cmp
cmpsl
sub
iret
lods
fcmovb
add
sahf
aam
push
rorl
cmp
adc
outsl
ja
and
dec
push
cld
data16
mov
adc
pop
sub
cli
das
xchg
leave
scas
cmp
jge
sbb
push
add
lcall
sbb
rolb
sbb
incl
mov
cmp
cmp
cmc
sub
push
es
pop
xchg
lcall
dec
pop
and
xchg
loopne
cmove
imul
cmp
mov
add
negl
cmp
push
mov
dec
mov
hlt
insb
jbe
inc
out
xor
push
xchg
add
aas
jb
insb
mov
xor
gs
add
sbb
push
scas
pop
and
pop
cmc
pop
fisttpl
add
les
test
gs
clc
mov
jo
addb
xor
ret
lds
sbb
in
inc
jno
repnz
mov
sahf
insb
pop
cmpsl
push
xchg
inc
push
push
or
insl
outsl
add
push
adc
jb
addb
jmp
xchg
enter
bound
add
pop
mov
nopl
jns
fidivrs
fisttpll
test
testl
xchg
cmp
mov
paddusw
ljmp
les
mov
jecxz
jl
lcall
xchg
and
and
add
add
popf
adc
xchg
jge
imul
js
adc
inc
add
aam
rcll
shll
xchg
cmp
lock
aas
jge
enter
inc
add
in
lcall
outsb
mov
and
jo
jnp
jp
or
push
push
jbe
inc
inc
add
push
in
add
push
inc
loopne
icebp
pop
lock
movsb
rcl
jo
stos
call
sbb
sbb
int3
inc
add
jno
lds
sub
mov
popl
movsb
lods
test
cmp
inc
push
movb
adcl
dec
das
je
movsb
fiaddl
add
shrl
sbb
call
xchg
jb
jmp
add
cmp
inc
push
pusha
add
popf
rolb
inc
add
push
mov
add
inc
adc
imul
fsubrl
add
fcoml
loopne
movsl
pop
mov
clc
popa
xlat
inc
add
add
imul
pop
cmp
dec
or
xor
add
xchg
fdivrl
stos
sbb
test
mulb
out
cmp
addr16
mov
cmp
leave
pop
lcall
jecxz
add
add
addb
lods
inc
add
pop
das
dec
mov
adc
add
daa
loop
pop
lods
outsl
sbb
mov
xchg
push
xchg
leave
push
cltd
ffreep
add
std
sbb
sub
jp
mov
inc
add
push
pop
test
adc
ljmp
pop
cmp
sbb
add
mov
inc
adc
jle
cld
jge
and
pop
in
test
fbstp
and
mov
jns
addr16
movsb
fwait
add
psubd
fcoms
std
xchg
ss
in
and
mov
movb
cmpsl
push
popa
mov
mov
dec
mov
std
jp
es
daa
rcrb
sbb
fucomi
es
ja
cmpsb
andl
add
mov
mov
insl
fucomp
xchg
jecxz
push
fwait
dec
je
cmpsb
jge
lods
jb
ljmp
add
aad
sub
mov
xchg
adc
shrl
xchg
mov
xchg
movb
dec
push
les
cmp
sub
and
outsl
add
mov
push
inc
ret
xchg
mov
lea
loope
popa
jg
push
enter
pop
and
add
clc
gs
inc
add
mov
cmpsb
pusha
add
lahf
dec
test
dec
add
in
out
pop
rolb
and
dec
mov
sbb
ss
fldcw
jmp
dec
and
stos
xchg
jg
insl
jp
push
stos
mov
nop
jno
or
jmp
cmpsb
insb
ja
addb
xchg
pusha
add
jb
jne
add
push
inc
add
fisubrs
jmp
pushw
out
sti
cli
addr16
inc
add
mov
cmpsl
arpl
adc
pop
lret
leave
cmpsb
icebp
add
cmpsl
jb
int
sbb
dec
mov
test
aaa
add
pop
out
sbb
cmpsb
pop
pop
jl
inc
or
fmuls
mov
mov
and
jbe
cmpl
push
pop
add
bound
clc
loopne
pop
xchg
ret
xchg
icebp
add
jge
add
xchg
shlb
dec
cmp
inc
add
add
lea
sbb
mulb
push
loopw
add
push
scas
shr
mov
or
jle
jmp
icebp
cltd
addr16
pop
js
int3
std
mov
pop
lods
jg
mov
clc
sbb
test
sbb
cmp
push
ss
cmpsb
test
jp
inc
dec
push
xor
ds
add
xchg
jecxz
or
xchg
leave
aaa
add
jl,pt
shlb
andl
jecxz
push
aaa
push
iret
ja
add
cmp
jno
or
mov
add
mov
ja
pop
sbb
mov
mov
es
in
divl
rep
mov
shrl
mov
rol
mov
ja
mov
inc
add
ret
or
push
add
mov
ja
es
jno
jmp
add
push
and
rolb
movsb
and
jge
add
add
ret
or
mov
xor
and
and
push
add
push
jl
jb
ds
pop
das
out
jmp
mov
in
mov
xchg
lahf
or
mov
dec
mov
add
sarl
mov
and
jmp
fildll
adc
les
shl
cwtl
jmp
jne
stos
popf
jno
enter
mov
add
fsubr
mov
mov
push
into
xchg
lret
outsl
je
add
or
fucom
jne
out
mov
pop
xchg
and
imul
dec
repz
or
fcompl
jl
pop
movsb
test
sub
jb
add
adc
cmpsb
inc
cmp
loopne
pop
mov
sub
mov
adc
fisubl
push
int3
mov
add
nop
and
dec
lods
call
sbb
add
mov
pop
mov
mov
cltd
add
adc
enter
sub
add
adc
push
xor
out
int
inc
add
inc
add
cli
pop
pop
xor
flds
and
and
test
repz
dec
pop
inc
add
mov
adc
repnz
mov
ljmp
and
gs
and
cmp
jmp
imul
xor
std
ret
add
int
loope
add
and
stos
jo
and
loope
in
mov
mov
es
imulb
scas
aad
mov
dec
pop
roll
add
jg
xor
cs
xchg
rcr
test
shll
pushf
test
sahf
mov
pop
mov
push
mov
xor
fstpl
pusha
add
fstpt
jg
mov
lret
jbe
out
outsl
xchg
rclb
clc
test
add
call
add
jb
cmp
cmc
lods
mov
fsubrl
fmuls
push
push
sub
cmp
push
dec
mov
pop
pop
cs
sub
cmp
ds
pop
rclb
ljmp
cltd
das
mov
mov
repnz
int3
insl
hlt
jo
fs
dec
loope
jge
push
mov
addb
int3
lret
push
cmpsl
mov
dec
pop
test
addb
jns
cmpsb
loopne
jmp
mov
inc
add
add
mov
lods
jbe
aam
lret
jb
jg
adc
mov
add
cltd
pop
pop
mov
sahf
sbb
sbbl
or
mov
sbb
add
xchg
add
rolb
addb
xchg
stos
addb
xchg
outsb
loop
adc
in
icebp
jmp
gs
jno
mov
cmp
and
xor
sbb
add
adc
cs
jmp
pop
or
jbe
mov
xor
insb
jecxz
jmp
xor
add
xchg
mov
push
in
add
and
lret
jecxz
hlt
jle
add
movsb
out
mov
and
sbb
xchg
cltd
cmp
add
add
stos
mov
lock
pop
and
mov
shll
push
daa
nop
dec
lret
add
pop
push
std
sbb
xchg
fcompl
loopne
dec
push
add
jecxz
add
push
pop
int
xchg
sbb
add
add
adc
aad
add
std
mov
add
daa
xchg
pop
std
into
or
outsb
repnz
mov
xlat
lret
imull
add
inc
movsb
jle
fistl
mov
add
mov
out
cwtl
ret
xchg
or
lods
bound
mov
add
scas
fdiv
mov
xchg
cmc
adc
stos
rolb
and
mov
sbb
push
cmp
gs
pop
loope
sahf
add
add
aas
fldl
incl
jo
cwtl
push
leave
add
inc
add
lahf
sub
sub
addb
push
mov
ss
mov
dec
je
add
pop
adc
and
dec
mov
or
sti
add
aas
pusha
add
rolb
pop
and
fcoml
jecxz
fwait
sti
iret
sbb
lahf
adc
add
fnstenv
push
test
lahf
or
and
and
hlt
mov
xor
call
dec
outsb
push
dec
inc
hlt
xchg
jno
lods
push
bound
or
mov
push
cmp
add
add
shll
out
test
ret
adc
insl
mov
cmp
pop
jo
adc
xor
push
clc
cmpsl
mov
jns,pn
add
inc
in
pop
and
mov
or
pop
inc
add
push
adc
popf
or
incb
xor
sbb
mov
dec
pop
popa
mov
addb
jecxz
mov
add
insl
iret
inc
add
scas
sbb
lock
jge
xchg
pop
imul
mov
aad
pop
sbb
jmp
stos
mov
mov
cwtl
sbb
je
adc
push
xchg
dec
mov
add
dec
sbb
and
pusha
add
mov
addr16
mov
jnp
cmpsb
push
jmp
add
push
dec
dec
xlat
mov
mov
xchg
daa
mov
je
in
int
mov
lret
movb
movsb
cld
out
inc
pop
xchg
jnp
dec
adc
out
mov
push
pushf
push
mov
xchg
or
icebp
mov
sbb
adc
leave
test
dec
testb
add
imul
sub
xchg
in
ss
cli
or
rolb
cld
sbb
cld
sbb
mov
ds
xchg
cmpsb
and
sbb
mov
add
cltd
or
imul
sbb
xor
xchg
ja
sub
loope
xchg
outsl
iret
cmp
daa
xchg
pusha
add
lock
leave
dec
incl
insb
jmp
cmp
mov
in
fwait
fwait
add
inc
add
addb
sarb
inc
imul
mov
mov
add
addb
sub
ror
mov
mov
xchg
and
pop
movb
inc
add
pushf
sub
lcall
pop
in
xor
mov
outsl
out
push
ss
jo
lcall
push
add
add
xchg
pop
fwait
bound
icebp
out
jg
aas
pop
mov
dec
ljmp
ljmp
loop
cmpsl
out
por
mov
xor
and
adc
add
pop
jbe
add
jb
mov
add
sub
clc
fcom
test
fwait
in
pop
enter
and
push
inc
fs
and
iret
aas
xchg
sub
add
flds
mov
add
cli
inc
jne
add
adc
add
add
add
