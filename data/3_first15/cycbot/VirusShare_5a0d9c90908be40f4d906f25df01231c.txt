bound
dec
les
xchg
add
or
add
enter
add
inc
pop
sbb
sub
sub
or
imul
test
aaa
mov
push
add
rolb
add
mov
movsb
add
sbb
fnstcw
add
lret
sub
sub
xchg
int
add
push
jecxz
add
or
adc
or
add
mov
push
mov
jo
pop
jle
jb
std
jne
loopne
jno
add
add
jns
sbb
dec
test
jmp
sbb
add
call
rolb
imul
add
push
push
mov
mov
adc
mov
xor
ret
jo
inc
add
adc
fistps
sbb
addr16
push
lahf
lahf
adc
xor
movsl
adcl
ret
testb
cmp
cmc
add
repnz
cmp
add
mov
add
add
data16
push
mov
jmp
mov
add
xchg
add
add
add
add
dec
push
add
inc
jb
popa
dec
rolb
lret
mov
add
add
add
mov
sbb
add
xor
bound
mov
add
xchg
pop
insb
add
add
mov
xor
lock
add
cmpsb
add
mov
stos
jno
adc
gs
movl
add
jno
mov
inc
add
add
add
test
add
loopne
and
mov
adc
push
add
lock
add
mov
mov
add
mov
jge
stos
adc
scas
cmp
rolb
leave
stos
jecxz
fsubrs
mov
pop
and
mov
loope
dec
mov
add
aaa
push
adc
xor
dec
fucomp
jne
inc
loopne
loope
push
loope
sub
mov
pop
jns
mov
cmpsb
add
lock
adc
add
add
test
sub
mov
pop
add
fildll
add
and
mov
add
xor
scas
dec
bound
mov
sahf
mov
push
add
rolb
out
aaa
arpl
ret
repz
push
add
add
outsb
scas
sbb
sub
dec
imul
cmp
xor
cli
push
add
sti
jns
repz
roll
add
add
jecxz
test
sub
push
js
add
push
into
stos
fs
add
pop
mov
add
jb
stc
jg
mov
add
jge
add
xchg
movsl
mov
and
test
in
mov
addb
add
sub
pop
int3
rcr
mov
in
add
push
add
add
add
sub
add
add
xchg
pop
movsl
cmpsl
sbb
add
cmpsl
leave
jle
cmpsl
xchg
cmc
xor
xchg
imul
stc
adc
lcall
sbb
add
mov
inc
add
add
rolb
lret
iret
dec
rolb
nop
add
mov
imul
in
pop
fidivs
dec
or
or
outsl
sub
loop
xchg
xchg
xchg
add
add
add
or
push
bound
mov
mov
mov
xchg
xchg
hlt
add
jnp
mov
in
aaa
lods
jns
add
dec
pop
rolb
or
shll
test
jns
mov
imul
mov
mov
and
mov
add
in
cli
and
add
xchg
add
mov
mov
sti
mov
movsb
add
xchg
add
sub
call
orl
cmp
add
mov
xor
or
sub
mov
sbb
mov
add
sub
mov
ja
scas
push
xor
xchg
mov
add
adc
test
testb
test
mov
repnz
push
cld
dec
cmpsb
add
dec
rcr
test
jmp
dec
jmp
adc
mov
inc
push
pop
jmp
inc
and
add
push
xor
cltd
mov
mov
fldcw
add
addl
add
add
js
jns
cmpsb
add
dec
bndstx
sbb
add
sbb
sbb
loopne
push
shll
cwtl
hlt
add
lcall
mov
push
jo
jne
inc
add
shll
shl
data16
add
ret
xchg
sbb
xchg
add
add
add
in
jb
dec
test
lea
adc
cwtl
hlt
add
xor
pop
push
add
cmp
sahf
sub
add
rolb
lods
das
mov
add
push
add
mov
stos
and
mov
mov
sti
sbb
in
xor
ljmp
imul
add
push
jnp
add
gs
add
or
mov
push
clc
js
add
xchg
add
jg
lds
jp
add
in
dec
and
mov
add
js
push
add
fstl
add
add
pop
inc
dec
mov
mov
sbb
rolb
pop
xor
outsl
aam
bound
mov
addb
les
aas
imul
add
push
add
xchg
add
pop
sti
inc
add
test
ja
pop
mov
pop
add
mov
in
dec
test
add
add
sub
mov
cmc
outsb
sbb
pop
or
inc
jmp
mov
das
out
iret
sbb
mov
add
sbb
add
add
leave
aas
rcrl
xchg
aad
add
cmpsb
add
and
sub
mov
xor
jmp
add
jecxz
dec
pop
int3
pop
xor
or
add
add
add
jnp
scas
sub
add
mov
sar
mov
lret
add
cli
mov
add
hlt
add
insb
jle
xchg
jecxz
xor
data16
mov
add
scas
or
add
mov
push
add
pop
popa
enter
push
add
inc
aas
cmp
nop
add
ret
add
fwait
imul
add
add
mov
addb
jle
add
jg
add
cmp
add
add
repnz
rolb
mov
in
dec
dec
dec
lcall
add
cmc
fstps
or
add
inc
push
jnp
jl
dec
das
mov
mov
add
add
mov
xchg
jge
push
or
addb
mov
sub
add
add
pop
xchg
inc
xor
subl
imull
movb
pop
xchg
xlat
cltd
icebp
rolb
push
add
jmp
pop
rolb
lods
push
add
dec
lahf
ficoml
mov
add
adc
pop
mov
jo
pop
cmp
dec
cs
add
push
jmp
dec
jo
jae
adc
xchg
xlat
cmp
dec
int
mov
lods
xchg
add
add
and
dec
and
or
mov
add
sbb
add
cwtl
aam
out
jg
add
xorl
mov
jbe
lods
dec
xchg
inc
add
cmpsl
notl
adc
add
pop
push
add
cwtl
les
scas
add
fcom
jae
clc
sti
dec
add
gs
or
add
mov
lods
std
lcall
jae
add
add
add
add
mov
sub
push
add
inc
rolb
aam
sbb
mov
add
lock
mov
cmpsb
add
adc
daa
or
mov
out
add
add
xor
popa
sbb
clc
addb
add
jnp
mov
mov
or
add
add
add
mov
mov
int3
das
addb
inc
mov
inc
add
pop
mov
add
inc
add
adc
pop
into
mov
ljmp
dec
aam
push
arpl
add
xchg
inc
out
mov
mov
add
add
mov
add
sbb
pop
sbb
mov
sti
sub
add
push
xchg
add
movsl
jmp
or
push
add
rolb
aam
mov
cmc
lds
add
push
aad
add
mov
push
cli
shl
add
add
add
add
fsubl
xor
add
mov
add
mov
pop
sub
add
dec
jge
add
lret
outsb
repz
jp
mov
lock
add
lds
sahf
into
sbb
add
sti
add
pop
inc
add
add
add
ret
addb
jmp
pop
cltd
xchg
stos
pop
lds
mov
in
sti
jle
xchg
out
mov
mov
rolb
mov
push
adc
mov
xor
fmulp
cmp
or
add
aad
mov
dec
inc
and
rolb
xlat
push
add
loope
add
xchg
add
test
mov
add
hlt
add
add
ja
or
les
les
outsl
xor
aam
sbb
add
aad
adc
add
adc
push
add
add
and
lock
xchg
add
and
jne
or
cmc
mov
mov
test
xchg
add
add
mov
sub
inc
mov
add
add
add
add
loop
pop
out
add
add
std
das
test
mov
xor
sub
rclb
push
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
mov
push
pop
push
push
jmp
jmp
add
add
push
add
fstps
add
jbe
fwait
movsb
add
jno
add
add
dec
mov
jae
add
sub
pop
or
testl
or
mov
mov
or
add
add
lock
or
jmp
add
add
or
jg
add
mov
dec
sbb
add
out
sub
pop
push
add
add
add
sbb
add
out
loope
sub
and
mov
push
add
and
stos
jge
mov
mov
insb
aas
push
call
fstpt
push
add
mov
js
add
xor
pop
and
add
mov
xchg
add
sbb
add
add
add
add
and
mov
out
fstpl
mov
xor
mov
ret
add
add
int3
jb
xchg
sub
cmpsl
add
lahf
fiadds
ja
daa
into
and
sub
add
inc
int3
add
add
sub
pop
fnsave
mov
xchg
insl
fwait
insl
dec
popa
mov
loop
pop
scas
push
add
cld
filds
daa
pop
dec
ret
jnp
add
push
add
out
clc
loop
jge
fwait
rolb
add
popf
adc
rcl
add
add
lcall
nop
add
or
or
mov
add
lock
inc
add
out
or
ret
mov
add
pusha
add
add
pushf
sbb
add
jb
pop
mov
add
jge
or
sub
loope
loopne
push
lock
dec
fsubrp
pop
mov
add
adc
out
daa
test
adc
je
data16
mov
or
insl
and
add
mov
and
add
adcl
jg
mov
pop
jne
mov
int
insl
lds
add
add
add
lcall
popf
or
std
jb
loopne
rolb
inc
sahf
paddd
mov
std
pusha
add
push
ljmp
pop
mov
je
dec
and
add
mov
int3
push
test
add
dec
inc
cld
xor
sti
dec
ljmp
add
xchg
add
add
cli
sti
nop
add
add
pop
pop
sub
jbe
fiadds
push
out
mov
jns
add
xchg
or
mov
popa
in
outsl
jns
add
add
mov
mov
sbb
push
add
add
push
add
push
add
add
add
cltd
push
add
jl
add
icebp
sbb
dec
sti
or
out
sub
or
add
mov
add
add
mov
insb
mov
mov
aas
out
xchg
add
pop
arpl
enter
add
lea
push
adc
popf
das
aas
repz
cmp
addb
repz
add
jmp
add
inc
add
pop
push
add
xor
add
mov
inc
inc
leave
pushf
fwait
sub
scas
mov
add
mov
imul
outsl
push
pop
jmp
cmp
add
add
scas
sbb
in
push
add
add
ja
int3
pop
pop
jg
jne,pn
jmp
cmpl
cltd
dec
insb
mov
sbb
ss
into
movsb
add
sbb
add
cltd
stos
iret
aas
cltd
or
mov
jo
or
dec
fldl
add
jg
add
mov
test
add
shll
test
call
jb
cltd
sub
pop
cld
jb
fsubrs
or
add
mov
jg
add
mov
into
ljmp
add
cltd
div
add
add
add
inc
ljmp
fs
bound
mov
out
xor
inc
jge
cli
fidivl
add
cmc
cmp
sbb
mov
cmp
pop
lcall
adc
add
add
cmp
jo
test
outsl
and
mov
test
cmc
repnz
mov
rolb
and
mov
push
adc
sti
jmp
push
adc
ljmp
add
add
lock
xor
cmpsb
add
das
in
stos
lret
iret
sub
xchg
add
stos
sbb
jle
out
sbb
add
dec
cmp
pusha
add
cmpsb
add
repz
cmp
add
add
aam
dec
fstpt
and
mov
or
mov
add
loopne
fldenv
push
inc
mov
add
add
xlat
fmull
add
je
dec
je
and
and
mov
mov
leave
sahf
cmp
jp
or
rolb
das
add
mov
test
mov
inc
add
mov
popf
fbstp
icebp
sahf
add
mov
aaa
add
test
add
add
hlt
add
das
xchg
add
add
add
xchg
xchg
add
cmc
js
add
mov
rolb
mov
sbb
inc
add
mov
lds
das
add
test
je
lret
xor
mov
mov
mov
inc
push
jno
dec
mov
dec
adc
fisttpll
jge
push
add
sbb
out
sbb
add
push
push
pushf
fistpl
add
stos
cmp
pusha
add
push
ficoml
js
add
jp
xchg
mov
adc
jle
add
std
cli
je
jns
add
mov
add
adc
cmpsb
add
test
ror
jl
stos
mov
pop
jle
sbb
add
add
sub
lcall
rolb
sbb
pop
sub
repnz
mov
add
add
add
sti
inc
xor
or
insl
popa
popf
movsb
add
cmp
out
jl
add
cld
or
add
in
add
mov
add
add
data16
add
sub
mov
nop
add
add
add
adc
jp
insl
sbb
push
aam
jno
cmc
pop
outsl
imul
movsb
add
jp
sub
pushf
jns
jle
inc
add
jnp
jae
xor
add
mov
xlat
and
mov
add
add
mov
xchg
sub
or
bound
mov
loopne
in
addb
or
data16
add
out
stos
sub
and
add
mov
mov
add
xor
lret
dec
adc
xchg
lcall
mov
or
push
add
clc
pop
js
mov
popf
cmp
addb
lds
in
add
lcall
bound
mov
fnstcw
movsb
add
xor
rolb
jmp
add
je
push
add
xlat
outsb
add
add
add
ret
movsl
fdivrs
add
jne
add
and
hlt
add
adc
pop
dec
repz
dec
and
mov
lds
mov
cmp
push
add
sahf
jle
add
mov
add
loope
cmpsl
mov
ja
cmp
cmc
xor
add
lods
rorl
inc
add
add
sbb
cld
ds
add
push
cmpsb
add
and
push
mov
jmp
les
outsb
jb
vmovaps
add
pop
cmpsb
add
add
add
test
test
outsb
inc
sbb
sub
ret
in
pop
or
call
cmp
cmc
aaa
pusha
add
pop
daa
jne
add
addb
add
fstpt
lods
ret
rolb
sbb
insb
mov
sbb
in
jnp
cmp
lds
stos
data16
clc
ficomps
jecxz
push
add
je
mov
movb
mov
add
add
int
add
pop
testb
aaa
adc
add
cmp
mov
mov
add
and
inc
add
xchg
add
xor
cmp
mov
shll
and
push
mov
jmp
mov
dec
pmaxub
sbb
mov
and
or
ja
xor
xchg
mov
iret
pop
addr16
push
add
push
xor
inc
add
sub
ret
add
push
add
add
or
add
les
imul
mov
daa
lahf
outsb
xchg
sbb
pop
xor
add
std
adc
add
add
inc
push
add
int3
mov
in
ljmp
scas
xor
mov
mov
add
add
rcrl
scas
mov
movb
es
jnp
sbb
add
push
add
testl
stos
jo
mov
mov
add
add
add
dec
and
cld
shll
jno
adc
inc
add
jecxz
xchg
add
add
mov
dec
loopne
xor
add
lods
xchg
mov
pop
adc
push
add
add
pop
js
mov
dec
ds
jge
iret
insl
or
negl
xchg
or
js
mov
cmp
or
rolb
cmp
je
movsb
add
add
jno
add
int3
add
add
add
add
cs
stc
fisubl
xchg
push
add
loopne
add
icebp
xor
mov
xor
stos
adc
std
stc
addb
in
sbb
add
add
shr
stos
pop
mov
add
jmp
add
mov
jmp
sti
into
fisttpl
dec
out
sbb
xor
add
mov
and
inc
int3
mov
add
xor
ja
mov
push
push
add
add
add
mov
add
mov
add
sub
add
add
icebp
inc
dec
push
outsl
addb
add
lea
inc
lcall
scas
mov
add
mov
xchg
std
lock
add
jp
sbb
fnstsw
sbb
mov
xorl
insl
pop
incb
dec
xchg
sub
add
add
add
add
dec
cmp
enter
add
lret
jo
dec
insl
jbe
daa
or
notl
jmp
add
cwtl
hlt
add
popa
xor
push
add
push
add
iret
and
loope
add
fists
data16
xchg
jbe
pop
xor
add
add
cmp
add
pop
mov
add
pop
xor
jle
mov
cld
inc
add
imul
gs
adc
pushf
xchg
das
xor
add
cmc
lods
mov
add
dec
pop
cmpl
push
adc
popa
sbb
inc
sub
add
js
mov
ret
sbb
or
add
punpckhdq
mov
inc
add
dec
mov
mov
xchg
cmp
rolb
push
add
cs
hlt
add
mov
add
add
dec
cwtl
in
add
jb
jbe
dec
add
cmpsb
add
stc
andl
pop
movsl
data16
mov
sub
add
add
scas
and
jecxz
push
insb
fsubl
pop
stos
cmp
add
lcall
roll
mov
ds
push
sti
into
and
test
in
jg
sub
add
dec
adc
push
mov
and
mov
cld
xchg
rolb
jno
add
cltd
inc
add
add
add
iret
adc
rolb
add
lret
out
repnz
and
fisubl
push
add
xor
pushf
imul
rolb
cmp
push
xlat
insl
rolb
add
xchg
pop
andl
cli
or
add
add
pushf
mov
loop
out
sahf
sti
cli
mov
xchg
add
inc
mov
lock
add
mov
sbb
and
inc
xchg
lret
mov
fcmovne
popf
cmovp
add
mov
mov
sbb
sbb
add
movhps
mov
ret
pusha
add
add
adc
push
add
sbb
inc
add
jnp
fwait
sbb
insb
jg
add
add
xor
lret
add
add
add
ja
mov
pop
push
add
rolb
add
mov
add
jne
repz
cmp
add
adc
rolb
jnp
outsb
jne
in
fistpll
push
mov
add
fiaddl
add
pop
and
cmp
fwait
pop
or
add
mov
stos
insb
gs
loope
jns
mov
por
add
mov
pop
add
inc
add
sahf
pushf
inc
mov
add
pop
xchg
int3
gs
dec
or
cmp
add
ljmp
das
std
outsb
arpl
add
cmp
add
xchg
aas
mov
scas
push
pop
fsts
mov
sbb
punpckhwd
mov
jge
push
add
in
jo
int3
pusha
add
adc
push
add
cmp
cmp
imul
shrl
outsb
mov
pop
call
add
hlt
add
mov
mov
dec
sub
mov
add
dec
sbb
mov
nop
add
insb
inc
add
ret
add
or
hlt
add
rolb
out
ficompl
dec
push
add
or
mov
fwait
mov
add
outsb
out
add
mov
inc
add
mov
add
mov
scas
nop
add
out
fcomp
rolb
push
mov
sub
fcmovne
sbb
push
fstpt
addb
insb
dec
pop
aad
lea
fwait
push
add
fsubr
hlt
add
shr
add
add
add
and
add
es
add
xor
rolb
out
aam
jae
cmpsb
add
addb
aas
dec
data16
add
mov
cmpsl
sub
add
push
add
add
push
add
mov
mov
xchg
daa
jnp
or
mov
addb
add
test
in
cwtl
dec
jle
jnp
add
add
add
add
add
loop
cmp
mov
dec
jo
adc
loopne
sub
add
dec
lods
jp
lcall
add
add
xchg
cmp
adc
and
mov
fidivrl
xchg
pop
mov
lahf
push
add
dec
mov
mov
inc
mov
add
inc
jmp
pop
cltd
sbb
add
push
add
add
jmp
add
rolb
add
jo
fsubl
fldcw
cmp
movsb
add
sbb
mov
cmpsb
add
enter
mov
add
fistpll
ljmp
stc
xor
cld
fmul
sub
lcall
add
rorl
loopne
testb
add
add
or
stos
xchg
adc
add
ret
pop
pop
adc
scas
and
sbb
dec
xor
add
add
mov
jp
add
xchg
ss
add
enter
cli
add
add
ljmp
rolb
and
mov
imul
add
and
int
add
enter
jle
jb
popa
testl
pop
aam
inc
data16
pop
lods
jo
push
out
lret
std
fldl
add
xor
sarl
add
add
add
pushf
les
test
cli
or
arpl
xchg
add
and
push
mov
push
xchg
rolb
sbb
add
popf
or
insb
cmp
or
push
cmp
cs
repnz
add
add
sbb
mov
xchg
xor
cmpsb
add
add
inc
add
add
inc
add
add
ds
into
cmp
xchg
push
sahf
int3
dec
addb
add
add
mov
add
jae
add
leave
in
stc
inc
mov
cmp
outsl
pop
dec
testb
mov
sbb
add
mov
add
push
add
repnz
add
add
add
mov
push
add
jne
lds
push
sub
and
movups
push
jnp
scas
push
movb
adc
add
ficoml
add
mov
mov
push
rolb
dec
inc
add
xchg
add
fwait
addb
ljmp
xor
cmp
rolb
mov
xor
pop
ljmp
lcall
add
out
jmp
cmp
add
notl
mov
stos
repnz
cltd
dec
out
ja
mov
add
fld
add
or
add
jnp
push
add
add
add
fistpl
into
sub
fsts
lods
testb
add
add
xor
add
loop
jo
daa
scas
mov
rolb
add
ret
cmp
add
add
mov
add
sbb
cmp
mov
mov
daa
jp
push
addb
add
add
pop
pusha
add
lret
push
add
mov
jnp
add
and
sbb
add
cmp
rcrl
add
mov
out
push
sub
mov
add
arpl
iret
fwait
mov
xor
adc
prefetch
add
movsb
add
and
add
fsubrl
or
lcall
mov
or
call
add
test
aam
or
dec
lahf
lret
pop
pop
data16
repz
add
in
mov
add
jle
sub
dec
jl
jge
mov
add
add
add
pusha
add
dec
cmpsl
inc
add
mov
pop
xor
mov
std
push
add
adc
loop
fcomp
cwtl
fisubrs
add
mov
pop
sahf
stc
cltd
int3
fdivl
add
mov
push
add
mov
mov
add
mov
in
mov
inc
xchg
jnp
push
add
mov
add
lock
dec
sbb
add
lods
rolb
loope
sub
xchg
movsb
add
leave
cs
mov
add
std
pop
push
outsl
das
pop
xchg
xor
dec
fstpl
or
add
or
ljmp
jb
cwtl
xor
add
aas
scas
nop
add
addb
add
adc
pop
sbb
add
cltd
add
xchg
or
mov
add
add
lds
fnsave
fists
add
add
add
jp
add
adc
or
shr
push
roll
or
cld
push
jp
jo
movsb
add
enter
jns
jmp
ljmp
xchg
add
jg
push
add
jne
add
mov
add
add
out
push
add
out
sub
stc
mov
or
add
lcall
add
mov
or
add
xor
loop
mov
sbb
add
call
xchg
add
dec
scas
fimuls
add
imul
push
add
icebp
pop
cmp
daa
xchg
add
mov
jns
in
or
add
dec
push
lock
rcl
push
sub
lods
cmc
cltd
ret
sbb
insl
jle
add
add
inc
mov
jl
fsubrs
or
pop
icebp
add
mov
iret
jl
push
add
sbb
rolb
jmp
add
add
ret
clc
xchg
add
add
push
repz
mov
add
dec
jmp
movb
fisttpl
adc
cld
add
lret
inc
mov
adc
and
mov
and
add
add
cmp
add
ret
sub
jge
hlt
add
add
xchg
add
dec
sahf
dec
pop
sub
add
rcrl
pusha
add
add
add
add
jne
lret
push
add
mov
outsb
ret
out
push
add
add
hlt
add
aaa
dec
sbb
mov
add
sbb
xor
mov
mov
aas
ret
pop
jecxz
add
mov
inc
iret
arpl
push
loope
dec
dec
cmp
icebp
rcll
add
add
add
add
sti
mov
in
dec
sub
add
add
imul
add
lods
jmp
stc
mov
lret
jb
ljmp
xlat
xchg
xchg
add
jge
mov
inc
pusha
add
bound
mov
jne
clc
mov
add
test
in
cmp
or
add
es
add
add
xchg
push
lret
testl
add
dec
test
adc
lahf
movsl
mov
popf
aad
add
and
dec
pop
push
mov
loope
add
ret
mov
add
imul
adc
push
int3
sbb
inc
ss
inc
add
add
push
add
shll
xchg
ret
sbb
cmc
pop
leave
pop
jae
cs
add
lcall
loop
pusha
add
pop
adc
mov
int
in
lcall
imul
jp
push
fwait
lahf
pop
cmp
mov
testb
push
jmp
cmp
jae
divl
add
jg
and
mov
add
push
add
adc
test
jo
fwait
pop
mov
add
popa
stc
rolb
enter
inc
add
add
mov
rolb
xor
in
rolb
push
fists
add
mov
add
dec
mov
add
mov
adc
test
test
push
movsl
mov
add
leave
mov
sub
lods
xchg
add
push
add
mov
inc
add
mov
add
lods
dec
sbb
scas
push
xchg
add
fdivs
xchg
add
add
icebp
lock
out
push
addr16
mov
jl
add
pop
sbb
lock
add
pop
jnp
sbb
dec
mov
mov
add
fdivrs
mov
pop
cld
aam
in
add
mov
jge
add
xor
xlat
fwait
push
add
scas
push
sbb
fsts
mov
aad
add
or
xchg
push
push
js
js
add
bound
mov
testb
sbb
cmp
xchg
add
add
and
scas
stos
scas
push
add
in
pop
stos
push
xchg
movzwl
cmc
test
loop
into
out
mov
movsl
loope
cmpl
mov
mov
push
xchg
add
add
push
std
inc
add
addr16
iret
clc
insl
fsubs
dec
in
jns
add
into
sub
add
add
xorl
add
xchg
add
mov
mov
add
mov
mov
or
adc
test
fmul
pusha
add
ret
xchg
add
das
adc
push
mov
pop
rcrl
add
mov
rolb
fistpl
sub
mov
or
int
mov
add
sbb
add
add
push
add
lret
xor
cmp
cli
pop
cmpl
test
xchg
fildl
add
ja
jno
nop
add
add
pop
push
add
lret
push
fstpt
int
aas
fiadds
xchg
add
daa
ljmp
int3
and
add
mov
and
add
out
fs
add
add
mov
cld
push
add
add
push
add
add
ret
fiadds
dec
movb
add
jl
mov
les
dec
fnstenv
add
add
add
add
sbb
inc
rolb
int
and
out
dec
jbe
cwtl
sbb
add
add
dec
mov
mov
add
adc
in
sub
add
add
or
push
add
push
aam
mov
pop
adc
xchg
add
xchg
addr16
pop
rolb
jp
push
lods
mov
add
pusha
add
adc
nop
add
mov
adc
sub
adc
movsl
in
lock
cwtl
xor
add
mov
out
int3
push
add
inc
add
pop
push
add
fsts
add
in
jle
les
mov
ja
and
mov
inc
add
or
movsl
xchg
fisttps
mov
cmp
pop
adc
mov
push
add
test
jno
or
fmuls
add
adc
add
scas
push
mov
daa
sahf
inc
loope
jb
sub
add
scas
imul
mov
mov
stos
addb
pop
xchg
add
addb
add
cmpsb
add
adc
xlat
aad
xchg
add
add
add
loopne
nop
add
orl
aas
sub
add
cmp
push
movsb
add
jmp
add
in
outsb
sub
add
add
call
and
jp
xchg
add
add
jo
mov
and
mov
addl
xor
xchg
pop
or
fstpl
bound
mov
sub
or
add
pushl
incb
mov
inc
add
add
sub
or
add
jns
jo
push
pop
stos
xchg
mov
mov
cmp
loop
push
add
add
mov
add
hlt
add
pop
movsb
add
add
out
jge
or
add
ss
in
insb
add
dec
sbb
add
mov
hlt
add
add
movsl
test
add
add
jmp
insl
in
aad
push
push
add
pusha
add
xchg
add
mov
add
add
add
add
fnstcw
mov
cmc
jmp
add
mov
push
pushf
sahf
gs
adc
jnp
outsl
add
add
push
add
inc
add
add
add
sub
adc
add
stos
dec
data16
cmp
in
add
cmc
or
add
add
add
test
rorl
out
sub
sbb
cmp
popa
scas
ja
addr16
arpl
out
inc
add
jl
mov
add
inc
add
in
fidivrl
mov
ja
mov
add
testb
jmp
mov
std
mov
loope
add
push
add
xor
out
out
loope
addb
push
add
inc
add
add
bound
mov
add
call
cmp
xor
or
imul
fbld
cmp
and
mov
loop
xchg
inc
adc
mov
cmpsl
sub
mov
jo
or
mov
xor
mov
sbb
mov
je
out
addr16
add
loope
add
add
mov
or
lcall
add
fmull
add
jg
inc
add
fcmovnbe
add
sub
add
cmpsb
add
add
add
xor
dec
pop
addr16
scas
sbb
mov
add
insl
mov
cmc
mov
js
cvtpi2ps
mov
add
add
mov
sub
fwait
mov
add
addb
clc
mov
rolb
xor
orl
fcompp
lcall
jne
add
scas
repnz
lock
test
scas
cmp
push
in
jo
insb
mov
add
add
flds
mov
xlat
loope
add
or
pop
in
pop
imul
cmp
add
out
les
ret
add
mov
loope
adc
inc
add
pop
out
mov
jns
add
push
inc
mov
adc
push
popf
enter
pop
sbb
movsl
shll
mov
add
inc
dec
push
add
fneni(8087
add
mov
ficompl
insb
andl
sbb
push
test
outsb
adc
arpl
mov
push
mov
add
add
xchg
add
jnp
add
pop
push
out
fnsave
add
add
fdivl
add
add
or
sti
mov
stos
addl
jnp
add
adc
imul
add
movsb
add
icebp
popa
xchg
adc
movsl
lea
pop
pop
testb
out
lret
loope
fiaddl
fwait
jbe
scas
sbb
inc
mov
push
add
xchg
add
add
rcll
lret
add
call
push
add
xlat
push
add
stos
ja
add
test
cmp
lods
xor
and
mov
sbb
add
add
mov
add
mov
add
adc
insl
or
repz
insb
push
jo
add
sub
dec
push
add
xor
xor
mov
nop
add
push
push
add
add
stos
stos
add
cld
loopne
nop
add
clc
xor
inc
or
int3
jle
add
jle
mov
mov
cwtl
and
or
sbb
aad
add
rolb
rcr
stc
dec
data16
add
fsubrl
lds
mov
rolb
mov
mov
adc
push
mov
pop
in
pop
inc
add
pop
stos
sbb
mov
add
gs
add
mov
push
add
and
aam
xchg
pop
fwait
xor
and
mov
push
add
add
test
jb
aaa
mov
add
test
popf
inc
add
scas
jmp
add
fsts
sti
into
addb
incl
push
add
inc
popa
push
jb
inc
rolb
inc
add
add
adc
insb
outsb
rolb
sub
cltd
add
pop
fwait
jl
daa
adc
sbb
daa
push
add
fnstsw
and
adc
popf
scas
or
add
add
shrl
add
lods
jb
add
nop
add
inc
jp
add
mov
inc
add
add
subl
mov
add
xor
stos
ja
ljmp
std
sub
pop
mov
and
shl
ret
and
out
mov
push
test
mov
mov
add
sbb
stos
jbe
cmpsb
add
add
mov
jl
add
loopne
mul
add
sahf
mov
loopne
ds
cmpsl
adc
push
ffree
add
sbb
xor
gs
add
pop
and
add
call
add
add
add
add
add
add
rcrl
mov
loopne
testb
cltd
addb
mull
inc
dec
jecxz
add
add
jns
add
add
add
push
add
mov
add
add
out
out
sti
push
add
mov
xchg
lret
std
dec
lock
add
sub
sub
add
inc
jne
add
sub
push
pushf
pop
mov
add
add
mov
xchg
loopne
dec
mov
inc
add
push
cmp
mov
sbb
cli
not
add
add
push
xor
daa
jo
cmp
add
mov
add
inc
aaa
aam
repz
add
pop
int3
fdivrs
add
fnstcw
add
enter
les
and
rolb
std
or
jp
sbb
push
add
mov
lret
add
cmp
mov
lahf
mov
xchg
lods
mov
add
add
fwait
enter
push
push
add
inc
addb
out
lock
leave
adc
fldcw
mov
mov
or
testl
data16
pop
and
mov
mov
mov
addl
in
add
imul
add
rolb
cld
push
mov
sbb
rolb
nop
add
adc
push
add
faddl
xchg
add
mov
add
ret
jne
add
add
add
add
mov
test
js
jo
mov
std
call
push
adc
jecxz
add
fidivrs
add
xor
cmp
sti
out
add
add
add
push
leave
xor
add
aad
ljmp
dec
aaa
inc
add
or
rolb
adc
ja
add
jle
fisttps
out
sbb
add
add
das
and
dec
xchg
jmp
mov
adc
mov
pop
mov
add
add
add
fisubl
mov
add
addr16
call
mov
jne
movsb
add
scas
daa
mov
xor
pop
jge
sahf
stc
pop
pop
push
add
ljmp
mov
push
stos
jp
or
call
add
mov
lods
sarl
push
pop
or
jbe
leave
mov
push
add
add
add
fmuls
add
jg
xchg
add
add
nop
add
or
mov
bound
mov
lea
faddl
xor
stos
xor
bound
mov
push
add
add
pop
out
clc
arpl
movsl
int
and
testb
sbb
lcall
adc
je
cmp
add
add
enter
jne
xchg
add
stos
jl
aam
fwait
pop
xchg
xchg
aam
or
sub
je
mov
sahf
jmp
add
add
sbb
xchg
dec
pop
xor
pushf
sbb
mov
add
add
add
out
xlat
inc
add
mov
test
jecxz
add
lods
sub
out
pop
add
test
add
add
mov
mov
and
std
sub
add
lods
aaa
lds
lret
mov
add
xchg
test
add
xor
adc
add
subl
jge
jp
int3
push
add
movsb
add
mov
add
lds
add
xchg
add
adc
dec
lea
push
add
insb
in
xchg
cmp
test
lods
jno
xchg
add
add
imul
lds
loop
mov
rolb
cmp
pushf
mov
add
cmp
add
add
add
and
test
push
dec
pop
iret
repz
in
call
add
add
rolb
fcmovnb
add
xchg
add
pop
jle
int
cmp
add
sahf
sub
inc
add
jp
icebp
xchg
aaa
mov
add
ficompl
mov
push
dec
sub
pop
cmp
repz
jmp
mov
add
adc
add
mov
loopne
jb
movb
add
add
push
add
mov
add
mov
pushf
xchg
sbb
add
add
stos
pop
fcoms
data16
jmp
test
push
cwtl
inc
xchg
test
inc
pop
add
cltd
push
cmp
jle,pt
mov
out
mov
add
push
xlat
mov
stos
add
mov
rolb
loop
or
insb
das
xor
jno
add
rolb
stos
int
add
popf
adc
pop
xor
aad
add
xor
hlt
add
adc
mov
sbb
outsb
mov
pop
out
add
add
add
add
fsubrs
je
xchg
out
push
add
add
pop
sahf
inc
xor
jmp
lods
into
mov
icebp
sbb
add
mov
in
jbe
lea
add
popf
pop
or
vrcpss
stos
int3
hlt
add
add
add
mov
insb
or
imull
cltd
cli
push
mov
pcmpgtb
fstps
aad
or
add
rcll
and
mov
add
stc
ds
aam
loopne
sbb
mov
out
xlat
iret
shll
add
add
add
mov
push
add
imul
inc
adc
and
push
adc
or
pop
cmpl
add
add
popf
cmp
adc
adc
cmp
mov
movsl
xchg
add
mov
les
inc
lds
ffree
lea
das
adc
fnsetpm(287
add
jb
xor
xchg
add
insb
pop
mov
dec
shrd
test
ja
push
add
add
in
push
add
add
lahf
pop
add
stos
mov
push
add
mov
adc
mov
xor
push
cmp
push
mov
ret
xlat
fwait
jns
adc
add
jnp
add
jnp
add
cmp
or
imul
push
popa
movsb
add
or
mov
xor
jge
sahf
inc
add
sub
addb
add
int3
jns
pop
xchg
movb
add
add
add
cwtl
and
mov
stos
dec
adc
ficomps
add
cwtl
or
add
jmp
addb
jae
cmp
adc
outsb
push
add
xlat
lret
hlt
add
add
ljmp
movsl
mov
push
add
es
add
imul
fistpl
or
test
out
loopne
dec
mov
ljmp
inc
add
mov
pop
lahf
cltd
adc
and
inc
in
sub
mov
cmpsb
add
ficomps
sbb
iret
and
mov
cmpl
int
add
xor
mov
inc
add
xor
insb
stc
xchg
fsts
inc
add
pop
shll
lea
lods
mov
sub
ds
add
add
inc
add
add
xchg
add
addb
inc
in
shll
cltd
cmp
add
add
dec
or
lea
dec
sahf
sbb
cmp
pop
jns
sub
add
loopne
add
add
add
mov
add
jne
dec
xor
int
add
mov
repnz
in
add
pushf
dec
jp
movsl
fs
inc
add
add
loop
jno
jbe
cmp
inc
in
add
clc
mov
add
mov
jne
add
cmp
add
inc
add
inc
adc
cmp
xchg
push
add
add
add
mov
xchg
mov
test
jl
mov
out
movb
rolb
pop
push
add
js
adc
sbb
add
add
add
int3
or
sbb
test
push
add
dec
mov
and
add
add
testl
mov
movsb
add
cmpsl
enter
dec
scas
add
fdivrs
inc
add
movb
jl
bound
mov
cwtl
xlat
adc
mov
add
push
add
add
mov
add
mov
les
jo
inc
add
adc
xchg
lret
clc
scas
sbb
gs
leave
sub
lea
popa
xchg
add
cmc
pop
lahf
rolb
jmp
or
sub
test
jle
call
jnp
pushf
or
add
dec
ds
fcomps
pop
out
fwait
xchg
xor
in
xor
stos
in
cmp
fnstenv
sub
inc
cmpsl
aad
lods
lret
add
insl
sahf
sub
rolb
mov
xchg
add
call
popa
xchg
add
cmp
add
add
sbb
push
sbb
int3
add
push
dec
nop
add
xchg
push
add
xor
add
jns
xchg
sbb
add
add
lret
addb
add
in
add
stos
es
add
mov
aaa
add
ret
mov
sbb
jo
unpckhps
add
cmpsl
jns
add
add
stc
mov
xchg
add
xor
add
dec
lods
mov
xchg
add
jge
jge
add
sub
lods
jns
jg
add
outsl
rolb
lea
add
add
loopne
inc
add
icebp
cltd
sub
insb
mov
in
adc
cmpsl
mov
icebp
or
test
xchg
pop
test
add
jne
int
mov
jno
loopne
daa
xor
pop
lahf
push
add
movsl
fcomip
add
sub
jg
int3
mov
outsb
jle
lods
sbb
pop
call
mov
loope
add
bound
mov
add
test
test
jg
ds
sbb
add
jo
rolb
jno
xchg
jnp
daa
inc
add
jl
add
push
loope
les
cmc
scas
cli
iret
hlt
add
add
mov
sub
cmc
pop
xor
add
jmp
scas
or
mov
inc
push
add
sub
nop
add
pop
pop
xor
add
push
add
cltd
pop
cmp
cli
rcrl
pop
out
mov
add
xchg
add
pop
sbb
test
cmpl
push
add
pop
mov
xchg
add
rolb
shll
add
add
out
hlt
add
xor
cmp
add
add
daa
sub
adc
xchg
cmp
movb
jne
lds
negl
cli
mov
pushf
xchg
add
ds
mov
cmp
sub
inc
rolb
sub
shll
fisttps
cmp
add
add
outsb
mov
add
cmp
push
cmp
les
mov
mov
hlt
add
inc
sub
rolb
cmp
leave
movb
add
add
scas
xchg
add
sbb
add
stos
nop
add
add
insl
adc
add
loopne
repnz
or
xor
jbe
aas
fdivs
add
jb
pushf
mov
add
adc
daa
data16
xchg
xor
and
mov
jo
in
fsubs
pop
iret
inc
mov
jp
adc
les
lcall
psubb
inc
sub
cmpsb
add
add
add
outsl
jnp
pop
movb
pop
and
mov
int
fbstp
add
aam
pusha
add
mull
mov
sbb
cwtl
jo
cmp
xor
mov
aam
fisubl
add
sub
pop
pop
lahf
pop
int
repnz
adc
rcrl
js
push
add
incl
mov
dec
xor
mov
sarl
outsl
push
aam
jb
sbb
das
mov
jl
mov
add
add
mov
pop
loop
mov
dec
push
rolb
add
push
add
xchg
mov
jmp
stos
cmp
fildll
pop
add
cmp
sub
mov
stc
addb
ds
popf
stc
jns
push
add
jns
mov
fwait
lahf
xchg
subl
loopne
movsl
xchg
sub
out
pop
stc
pop
addr16
jns
sbb
rolb
js
add
push
add
add
add
xchg
fstpl
add
inc
add
xchg
or
jno
into
sbb
fwait
add
sahf
in
or
pusha
add
in
out
add
in
jb
aaa
push
add
cmp
sahf
sti
outsl
shr
testl
int3
push
add
adc
inc
add
or
imul
push
add
add
add
jb
inc
add
daa
sub
testb
xchg
mov
add
add
movsl
add
mov
mov
pop
mov
loope
stos
pop
add
mov
add
mov
test
xor
std
or
inc
add
lahf
xchg
leave
sub
add
lret
test
add
outsb
ds
cmp
add
jnp
dec
mov
mov
add
into
fwait
xor
add
sub
in
adc
mov
ss
mov
add
inc
add
outsb
fistpl
test
add
add
cmp
pop
and
mov
push
add
pop
push
dec
cmp
iret
ja
add
repz
and
out
rolb
pop
out
push
push
add
add
push
inc
add
xchg
das
or
out
imul
aas
xor
add
pop
sbb
xor
inc
add
arpl
loopne
and
vpsubw
pop
add
jbe
mov
pop
or
lret
pop
ljmp
add
mov
add
addb
xor
ja
das
filds
add
add
add
mov
add
add
xor
and
push
fcmovbe
sub
push
int
leave
mov
cmp
addb
dec
push
add
mov
add
scas
inc
dec
mov
add
sub
mov
jp
add
mov
ja
pop
sub
pusha
add
mov
sub
xor
adc
mov
xchg
jno
pop
dec
mov
das
mov
add
sbbl
add
loope
nop
add
jg
mov
add
lret
sbb
cmpsb
add
addr16
dec
cmp
pop
addb
or
add
pusha
add
sub
pushf
jl
inc
cli
cmp
sbb
xchg
mov
adc
inc
mov
add
ds
ret
and
ljmp
jg
enter
stos
jge
les
mov
xchg
add
jb
aam
jb
adc
fmull
popf
js
xor
xchg
das
dec
add
cmp
insl
sbb
add
add
mov
jp
add
push
aad
std
outsl
lahf
add
mov
add
ffreep
add
imul
iret
pop
pop
fcoml
add
and
mov
pop
push
repz
mov
loopne
pop
push
push
lahf
ficomps
in
pop
mov
mov
loopne
dec
hlt
add
ret
cwtl
test
pop
bound
mov
lcall
add
pop
mov
mov
sbbl
jmp
push
add
add
call
and
mov
add
sbb
jae
xchg
addb
cld
cmp
lret
add
popa
addb
mov
dec
roll
add
imul
out
add
rolb
mov
add
dec
push
add
jno
loopne
out
ja
out
mov
fdivrl
mov
add
add
dec
inc
add
mov
mov
jp
add
add
push
add
dec
out
mov
in
sbbl
add
push
or
dec
xchg
jo
add
outsl
xchg
add
add
les
test
add
xor
sbb
pop
xchg
add
jp
add
inc
add
xor
push
add
adc
loopne
xor
jge
add
mov
or
mov
mov
adc
js
mov
test
add
cli
ljmp
add
call
nop
add
add
mov
int3
lahf
push
add
enter
into
outsb
data16
add
sub
xchg
sub
out
int3
dec
mov
jo
and
add
add
js
add
mov
lods
dec
lahf
jno
mov
ds
add
pop
cmp
pusha
add
iret
dec
mov
mov
xlat
std
test
imul
mov
add
add
pop
pop
rorl
scas
in
mov
add
ret
add
add
xor
iret
jnp
inc
xorl
mov
data16
add
mov
mov
mov
sub
add
add
sbb
push
add
rcll
add
adc
ret
xor
insb
mov
add
dec
insl
cmpsl
addb
add
add
rorl
and
mov
and
fisubrs
dec
dec
loope
add
inc
punpcklbw
mov
push
add
add
sub
js
mov
push
leave
jecxz
add
jae
out
add
mov
repnz
addb
aas
push
bound
mov
mov
add
movsl
sti
adc
and
add
mov
add
loope
popa
les
rolb
add
push
xlat
sub
pop
repz
add
or
dec
xchg
pop
movb
xchg
add
stos
dec
mov
lret
arpl
int3
mov
aaa
mov
or
stos
dec
imul
push
add
add
add
je
int
cmp
inc
mov
xchg
add
fistl
inc
mov
sbb
lcall
stc
dec
test
mov
add
add
addr16
sahf
loop
pop
sub
add
add
mov
aas
mov
add
mov
xlat
ljmp
pop
stos
pop
aam
jne
add
add
pop
mov
or
ja
add
add
push
add
add
mov
cs
stos
sahf
cmp
hlt
add
pop
les
out
add
movsl
cmpsl
popf
and
pop
sub
jns
adc
and
test
inc
xor
push
push
add
dec
or
add
add
pop
fisubrl
sbb
push
std
lea
mov
mov
enter
add
rolb
arpl
xor
add
mov
int3
lods
nop
add
inc
add
call
movb
addl
pop
xchg
add
or
cmpsl
sub
add
add
dec
sti
pop
dec
jne
add
mov
test
add
cmp
add
add
mov
rsm
mov
add
fcmovb
or
test
add
mov
mov
add
add
mov
rcl
dec
mov
sti
out
add
lock
hlt
add
mov
aad
iret
mov
dec
addb
add
test
mov
stos
movb
add
sub
add
jo
sbbl
add
iret
pushf
add
js
in
mov
add
mov
mov
add
aaa
cld
ret
jbe
loop
add
add
add
add
add
add
addb
add
add
add
add
jge
mov
aad
pushf
addr16
pop
adc
sub
bound
mov
xchg
lea
add
add
mov
xor
xchg
gs
add
add
jbe
fildll
cld
jae
push
add
add
iret
fists
cmc
mov
sub
add
add
mov
adc
mov
add
dec
addb
push
sbb
mov
loopne
lahf
ret
out
push
xor
addr16
add
mov
inc
add
and
add
add
cmp
push
add
jne
in
jnp
add
hlt
add
add
inc
add
pushf
sbb
dec
xor
mov
mov
mov
movsb
add
mov
mov
jmp
mov
jle
xchg
add
add
add
add
add
dec
xchg
cli
aam
test
mov
inc
arpl
add
mull
negl
pop
outsb
sub
shl
add
adc
in
popf
loope
jmp
dec
and
imul
push
add
inc
add
ret
dec
daa
sub
out
imul
jl
adc
cs
adc
push
jge
adc
add
mov
push
bound
mov
repz
pop
lret
out
add
aaa
mov
add
cmp
add
jbe
lds
jg
inc
add
fnstenv
add
pushf
ja
xchg
cmpsb
add
jle
int3
clc
rolb
mov
mov
add
call
pop
subl
mov
push
add
xor
push
add
mov
mov
hlt
add
push
add
rolb
pop
inc
or
add
add
inc
add
push
add
add
cmp
scas
ret
mov
rorl
add
add
inc
add
add
sub
xchg
fcompl
dec
mov
add
add
lds
pop
pusha
add
add
pop
mov
fs
fdivr
push
repz
imul
add
je
mov
mov
mov
ss
mov
push
add
jb
insl
add
add
add
arpl
insl
cld
jns
test
mov
testb
add
mov
repnz
test
add
push
add
or
add
mov
lds
ja
cmc
iret
mov
pop
mov
mov
into
pop
push
les
pusha
add
lods
scas
rcl
xor
mov
dec
dec
mov
mov
add
add
add
push
add
cmp
inc
add
adc
pop
js
push
cmp
imul
dec
pusha
add
adc
scas
mov
sub
add
add
outsb
lret
add
xchg
lods
mov
lcall
and
loope
adc
addb
leave
imul
mov
into
sub
mov
insl
push
add
mov
add
movsb
add
jns
add
pop
sbb
sbb
idivl
leave
in
cmc
lods
push
dec
push
ret
fists
add
add
add
adc
sahf
sbb
outsb
push
add
cmp
add
test
jmp
push
add
lods
lcall
add
push
add
add
add
mov
add
std
push
add
add
nop
add
mov
add
add
push
cwtl
jb
test
cmc
enter
pop
int
add
mov
add
insl
dec
mov
add
lds
out
out
xchg
sti
jp
sahf
inc
jne
lret
mov
test
add
aam
add
jnp
add
mov
or
xor
aas
addr16
pop
roll
xchg
add
xchg
push
adc
clc
insb
dec
int3
jmp
mov
test
add
cmp
int3
rcll
addb
cwtl
sub
add
inc
add
in
insb
pop
sub
inc
inc
jae
push
imul
add
pusha
add
mov
add
cmp
push
adc
les
jle
add
js
push
into
sahf
subl
lahf
fsubrl
ret
cmp
dec
mov
pusha
add
stos
or
test
repz
imul
je
mov
add
dec
xchg
icebp
sub
fwait
push
add
sahf
testb
scas
dec
push
cmp
xchg
out
mov
and
mov
jge
adc
add
push
add
push
add
mov
add
int
enter
outsl
xchg
ljmp
das
jo
cmp
add
inc
add
cwtl
push
inc
add
mov
add
pop
inc
add
lcall
data16
aas
repnz
add
popa
mov
pushf
mov
and
mov
add
in
fldcw
sub
jle
add
dec
push
inc
add
add
test
mov
bound
mov
ret
dec
pop
into
into
pop
inc
add
cmpsl
fstps
scas
dec
adc
addb
add
pushf
xchg
inc
add
pop
movb
mov
pop
aad
repnz
test
add
add
adc
test
jo
mov
mov
inc
add
movsb
add
add
rolb
fdivrs
popf
test
add
pusha
add
mov
popa
fmul
pusha
add
add
add
add
out
xchg
or
loope
add
addb
rolb
test
push
or
sbb
int
push
add
add
add
mov
add
mov
enter
imul
ret
popa
rolb
jne
add
dec
mov
xchg
add
pop
mov
insl
add
and
mov
xchg
scas
aas
movsb
add
cmp
add
add
aas
aas
adc
data16
mov
add
sti
jle
add
rolb
and
mov
inc
mov
lds
iret
adc
fsubrs
cmp
pusha
add
push
add
lds
daa
mov
clc
notl
lods
jge
add
push
xchg
add
jecxz
ljmp
jae
add
repnz
jns
and
mov
sbb
xchg
add
leave
cmp
mov
mov
jae
add
out
addb
pop
xchg
outsl
pop
inc
mov
out
add
movsb
add
sbb
fwait
or
pop
aad
xchg
or
mov
inc
addb
lock
enter
aad
add
add
arpl
mov
dec
cli
addb
ja
popf
pop
mov
add
push
addb
mov
lds
add
or
add
or
das
cmp
daa
xchg
add
add
aas
sbb
sub
add
sbb
pop
cli
pop
jae
jl
in
and
mov
add
mov
inc
add
rolb
inc
ljmp
fcoms
hlt
add
ficomps
subl
aas
popa
sub
ret
jnp
lock
add
cmpsl
lods
fcoml
dec
add
mull
xchg
lea
xchg
add
or
sahf
lods
sbb
cmp
insl
mov
add
in
pop
jo
sub
add
test
dec
pop
or
add
add
inc
add
jl
add
aam
mov
sub
lcall
or
add
adc
lret
push
add
jge
pop
out
ja
addb
add
sti
adc
add
add
add
std
xor
fcmovb
add
mov
add
add
in
adc
fbstp
push
add
add
mov
add
add
add
mov
xchg
add
add
pushf
jae
arpl
repnz
add
add
test
xor
or
cmp
add
add
mov
mov
jmp
jns
mov
daa
jnp
jo
mov
rorl
mov
mov
mov
lock
mov
add
out
out
push
add
test
add
push
add
inc
jbe
cmp
daa
fnstenv
dec
orl
add
jnp,pt
add
push
add
add
mov
data16
add
add
insl
mov
mov
xor
out
sbb
add
add
sub
sbb
add
inc
add
push
add
jnp
mov
lods
lret
xor
rorl
push
add
and
add
mov
add
add
movsl
push
push
add
or
add
mov
mov
pop
test
add
mov
in
or
scas
std
fmuls
xlat
add
fadds
add
jge
lock
rorl
into
addb
add
add
pop
test
je
stos
or
add
add
push
add
lock
fstps
or
add
add
je
int
add
fisttps
add
into
xchg
jmp
stc
in
insb
cli
push
sub
add
test
sub
add
add
add
add
out
xor
rolb
inc
add
popa
xchg
xchg
sub
add
lcall
add
xor
aaa
lahf
add
aam
pop
mov
das
aaa
xchg
repnz
xchg
lds
test
imul
mov
add
xor
int3
sub
or
cmp
mov
and
movsl
gs
int
add
mov
in
adc
clc
aaa
push
jl
sbb
aas
lret
lods
movsb
add
mov
add
in
push
mov
add
push
add
test
flds
add
or
add
add
stc
stos
cmp
add
mov
insl
test
repz
sub
paddusw
je
mov
add
les
push
jo
mov
add
dec
adc
sti
ljmp
sbbl
sbb
gs
mov
add
xorl
inc
andl
add
cmpsb
add
loop
loop
fcompl
jo
add
mov
inc
add
pop
dec
mov
jns
test
mov
stos
les
push
push
add
add
xchg
add
xchg
add
add
rolb
lock
add
mov
bt
icebp
mov
lcall
jbe
xlat
test
add
pop
xor
xor
int
mov
add
cmpsb
add
jb
pop
js
insl
mov
aaa
add
mov
arpl
addb
pop
cmpsl
pop
lock
add
mov
ja
pop
xchg
fcmovu
std
in
rolb
inc
pusha
add
sub
adc
push
add
daa
loopne
orl
xchg
add
bound
mov
add
add
cmc
addb
or
shrl
xor
jp
das
inc
add
add
test
call
jns
add
pop
jno
adc
sti
out
ljmp
repnz
add
mov
cltd
push
add
sarl
push
add
add
nop
add
loopne,pn
dec
int3
imull
and
mov
stos
cmp
sahf
add
sbb
add
loope
push
add
inc
add
mov
jns
add
dec
sbb
in
add
insl
add
dec
xchg
cltd
js
out
or
add
dec
test
sti
adc
in
cli
sahf
mov
les
inc
aad
add
add
pop
imul
push
adc
add
mov
dec
cmpsl
lock
cmp
sti
cli
dec
stos
inc
outsb
ret
lahf
bound
mov
mov
add
insl
sbb
mov
push
fstpl
add
add
js
or
add
jne
mov
dec
xlat
test
and
add
add
dec
sti
or
add
popf
adc
sbb
test
dec
imul
pop
xchg
add
lock
popa
movsb
add
jge,pt
add
and
mov
addb
cmp
rcll
mov
mov
lods
lods
or
adc
jmp
add
add
add
xchg
add
addb
add
aaa
add
sbb
add
inc
add
add
out
jg
mov
add
insl
fidivrs
cli
fbstp
push
add
add
add
sub
add
in
mov
pop
sbb
mov
mov
add
rorl
or
sub
mov
in
mov
std
into
xchg
add
xchg
add
push
and
add
add
outsl
rolb
mov
adc
push
add
out
aad
xchg
add
inc
push
add
aad
add
add
loop
js
add
add
stos
fmuls
inc
jge
jnp
xchg
add
scas
cwtl
hlt
add
addb
jb
or
pushf
outsl
xor
push
xchg
add
add
negl
jg
out
xchg
add
fcmovu
add
nop
add
inc
inc
add
add
add
mov
jns
fcmovnb
add
loop
cmpsb
add
add
add
cmp
add
add
out
insb
jge
mov
or
mov
add
insl
jbe
cltd
data16
push
and
nop
add
mov
sub
add
xor
mov
out
xor
pusha
add
jno
jp
or
data16
dec
cmp
call
pop
ds
add
mov
xchg
ret
dec
add
add
insl
leave
sub
lret
inc
add
stc
leave
inc
testb
jno
add
mov
mov
add
add
jp
inc
mov
lahf
sbb
add
lahf
sub
mov
add
add
into
add
and
add
fmul
inc
add
jno
mov
cmp
or
sbb
lcall
add
add
lret
jae
aaa
sbb
sbb
lods
js
add
or
add
aad
add
jl
add
call
add
jne
out
mov
icebp
mov
mov
sbb
mov
cmp
out
and
pushf
cli
inc
add
ja
mov
test
repnz
mov
pop
rorl
push
adc
fbstp
popf
lret
pusha
add
add
rcrl
mov
mov
add
inc
add
or
add
jmp
xor
sub
xchg
mov
or
mov
les
xchg
mov
jae
outsl
or
pusha
add
pop
xchg
inc
add
popf
sbb
and
mov
add
mov
mov
inc
mov
jno
sub
add
nop
add
mov
xchg
popf
fwait
out
jno
clc
xchg
add
add
add
or
mov
inc
add
add
push
add
mov
lods
pop
mov
cmp
jne
or
add
int
lcall
imul
aaa
push
bound
mov
hlt
add
add
push
add
xor
cltd
out
xor
movsl
jmp
sahf
aaa
les
mov
add
aad
pop
add
jp
inc
sub
repnz
mov
push
add
test
push
cmp
add
add
mov
aas
sub
pop
push
movsl
xchg
icebp
lret
mov
add
and
dec
pop
rolb
inc
push
test
pop
push
jnp
jl
iret
sbb
add
sub
add
lock
pop
sub
addb
sbb
mov
fimuls
mov
sub
sbb
mov
add
jbe
mov
add
mov
sub
test
jne
imul
inc
cld
xor
inc
add
jbe
mov
add
lret
sbb
loop
out
out
repz
add
xchg
lret
js
les
cwtl
js
sub
test
clc
mov
aad
push
or
add
int3
jmp
add
add
test
movsb
add
mov
movsb
add
je
ficompl
shll
pop
mov
rolb
add
add
pop
mov
push
add
and
pusha
add
add
push
mov
add
add
lret
fidivrs
xchg
add
and
ljmp
add
rolb
mov
mov
pop
sub
inc
mov
mov
out
cmc
sbb
xor
movsb
add
add
add
repnz
test
outsb
leave
jp
add
insl
adc
aam
pusha
add
call
scas
dec
ret
cmp
jg
and
add
and
mov
clc
mov
add
in
mov
xor
mov
pop
push
movb
addb
cmpsl
jnp
addr16
add
xchg
add
add
mov
das
mov
push
add
cld
out
aad
inc
stc
mov
add
dec
in
jmp
add
jmp
push
aaa
xor
add
in
shl
add
sub
test
cmp
jb
fld
hlt
add
add
pop
add
xchg
add
sti
push
jb
push
out
pop
daa
push
push
add
pop
stos
sub
xchg
add
and
mov
lea
add
pop
ffreep
lret
mov
add
movsb
add
mov
mov
add
sub
out
add
add
add
jae
and
mov
aad
xchg
mov
push
negl
add
pop
dec
loop
into
add
mov
add
inc
sub
add
movsl
out
push
adc
icebp
aas
pop
int3
mov
xor
add
insb
mov
add
sahf
or
add
add
mov
sub
les
mov
addb
add
add
popa
movb
add
add
sub
mov
mov
inc
add
cmpsl
mov
dec
fcmovnu
dec
loop
test
popf
cmp
add
push
out
pop
ret
mov
and
mov
popa
loop
movsl
add
mov
dec
ljmp
mov
pop
mov
sbb
add
add
loopne
add
add
mov
add
loop
imul
or
adc
scas
adc
cli
hlt
add
mov
call
int3
in
movsl
sahf
push
loop
dec
push
jge
out
mov
xchg
pop
lock
mov
mov
mov
add
mov
push
sbb
out
and
mov
add
ja
mov
rolb
repz
dec
test
add
add
inc
add
inc
pop
std
aaa
dec
in
lods
fcmovne
xlat
sub
mov
lds
arpl
xor
dec
movsl
xchg
push
add
imul
in
sbb
pop
nop
add
push
cmc
xchg
mov
add
stos
xchg
add
add
pop
insb
fnsave
dec
cltd
pop
jno
add
mov
sub
adc
add
sbb
push
add
inc
orl
ror
push
add
mov
add
xchg
add
push
outsl
push
push
mov
adcl
mov
and
into
cmp
sub
movsl
dec
cltd
mov
add
testb
ret
add
ret
lahf
mov
add
mov
add
sub
mov
mov
push
add
jno
xchg
add
add
cltd
jmp
lea
pop
xchg
add
add
movsb
add
push
add
add
sub
push
inc
add
rolb
std
cwtl
call
dec
mov
add
addb
inc
or
add
xchg
add
cmp
lock
xchg
sahf
push
popf
and
mov
inc
add
outsl
test
adcl
jecxz
add
add
pop
inc
mull
mov
sub
loopne
mov
sub
pop
add
add
ficomps
add
push
add
mov
test
fsts
cmpsb
add
outsb
add
mov
testb
add
je
in
add
add
test
addl
jb
dec
ret
in
addb
add
add
ljmp
add
add
add
call
repnz
add
test
fstl
sbb
add
mov
sub
ret
jmp
add
rolb
sub
add
ja
out
lea
sub
repnz
js
sbb
repnz
add
mov
out
sub
add
add
in
xchg
add
scas
test
xchg
ret
add
add
jg
add
gs
daa
add
sub
addb
add
mov
stc
movsb
add
add
add
pop
add
lret
mov
add
mov
jl
add
dec
mov
cld
add
ds
add
fidivl
movsl
dec
push
add
fwait
mov
cld
js
add
add
mov
sbb
dec
das
dec
adc
add
jge
leave
mov
test
popf
add
add
xor
pop
jne
in
stc
push
mov
popf
rolb
pop
fs
in
ljmp
add
add
addr16
add
mov
pop
or
add
add
andps
add
mov
add
mov
dec
dec
ficoms
jnp
aas
popf
clc
sbb
xchg
pop
pop
jp
add
sbb
xchg
cwtl
sub
rcll
add
fistpl
in
xchg
add
mov
lahf
mov
add
rolb
cmp
mov
xchg
inc
mov
decl
iret
or
add
jno
xchg
ljmp
mov
xor
out
bound
mov
add
or
ret
or
add
in
daa
dec
ja
jge
nop
add
data16
add
dec
push
add
rolb
inc
add
adc
jg
add
lea
jbe
sti
xchg
mov
push
add
push
fsubs
stc
add
add
testb
leave
mov
test
daa
repz
fnstsw
add
popa
jnp
add
add
add
mov
cs
orl
notrack
add
xlat
fbld
push
push
add
add
add
mov
daa
cli
pop
mov
insb
mov
out
lcall
add
fxch
daa
mov
add
out
popl
add
add
jnp
mov
xlat
mov
sbb
xchg
js
xor
lret
cmp
stos
leave
ja
and
fst
out
xor
ljmp
jbe
rcll
mov
add
add
add
addb
and
sub
lcall
add
outsb
push
add
xchg
test
mov
add
inc
add
add
std
dec
call
add
cwtl
sub
push
add
imul
xor
mov
xchg
enter
mov
loope
pushf
cmp
cmp
clc
scas
push
add
inc
add
dec
insb
cld
jle
add
jne
cs
js
repnz
add
add
pop
int3
sahf
mov
add
add
arpl
jmp
stos
pop
stos
sbb
add
add
add
or
add
add
add
dec
jns
int
adc
jmp
jbe
mov
mov
aaa
lea
jb
int3
std
fsubr
aam
rcr
daa
jl
mov
iret
dec
mov
mov
add
push
add
and
adc
dec
icebp
stos
mov
sbb
adc
jg
mov
dec
inc
xchg
add
mov
dec
xlat
jmp
add
mov
push
add
mov
mov
mov
lods
and
mov
add
cmp
ja
pusha
add
xor
je
add
lret
adc
mov
insb
aam
aas
adc
add
cmp
add
add
inc
add
xchg
lret
add
bound
mov
add
push
sbb
sub
add
rolb
inc
add
sub
push
add
mov
add
add
sub
add
jmp
ds
pop
pop
out
lods
push
mov
sbb
mov
aam
pop
das
rolb
lds
jne
add
pop
out
addl
mov
or
pop
adc
or
add
add
add
enter
or
outsb
test
add
lret
cli
mov
add
sub
lea
add
pop
xchg
add
cmc
xchg
fmuls
pushf
cmc
inc
add
cmp
add
dec
jp
add
add
pop
inc
add
sub
outsb
std
jno
movsl
scas
mov
cmc
mov
add
pop
mov
add
sbb
add
add
mov
inc
jb
imul
adc
rolb
xchg
xor
jbe
aas
push
add
popf
jo
cmpsb
add
xchg
add
gs
ret
cmp
jge
add
icebp
call
add
into
fcmovu
je
push
add
popf
pop
mov
add
fidivrl
inc
dec
jg
sarl
xchg
jne
mov
sub
add
pop
jne
pop
ret
xor
mov
add
pushf
ja
pop
mov
add
cmp
mov
mov
mov
mov
dec
imul
add
add
popf
push
xchg
inc
add
add
out
add
mov
gs
xchg
add
scas
enter
mov
sbb
lea
addb
xor
mov
int3
cmc
rcrl
imul
add
add
imul
addb
cmova
add
add
add
pop
jno
jecxz
aas
test
mov
jge
xor
test
xor
add
stc
xor
push
fnsave
fs
add
mov
cmp
xlat
lcall
add
cmpsb
add
push
sarl
popf
cmp
ficoms
add
rolb
sti
ljmp
mov
mov
jne
add
out
iret
cmp
movb
sbb
movb
dec
ljmp
add
sbbl
fidivrs
ljmp
mov
add
mov
daa
inc
into
push
jmp
mov
add
add
data16
inc
add
dec
shrl
stos
jns
add
mov
add
fwait
mov
add
add
pop
mov
icebp
in
xchg
add
add
add
add
mov
dec
sub
add
stos
dec
popa
mov
jmp
mov
sub
in
xor
mov
adc
loopne
shll
call
dec
into
mov
testb
xor
and
insb
sub
gs
aas
jbe
into
hlt
add
push
dec
mov
inc
add
cmp
jnp
rolb
test
add
xor
call
add
add
add
add
add
mov
add
mov
pop
clc
dec
xlat
or
leave
mov
in
xor
mov
lea
aad
addr16
lret
lea
pop
add
movb
xchg
add
pop
lock
add
xor
adc
cmp
mov
cwtl
nop
add
pusha
add
pop
pop
mov
jns
outsl
imul
mov
aam
mov
cmp
add
add
inc
add
cltd
jg
arpl
cltd
cmp
lock
xchg
add
sahf
add
add
add
jae
add
add
add
mov
lahf
and
add
add
add
cmp
fildll
jbe
fsubrs
mov
in
pop
add
cltd
mov
add
cwtl
dec
cltd
loope
sbb
pop
mov
iret
xor
repz
add
mov
add
fwait
or
test
bound
mov
add
rolb
add
jo
mov
ja
mov
sti
rcrl
push
add
fldl
add
add
add
jns,pn
lock
add
add
insl
addb
add
add
jmp
xor
iret
loope
add
add
cmp
add
add
mov
add
pushf
or
cwtl
jp
add
add
les
jge
add
add
stos
mov
popa
inc
add
adc
add
cmc
dec
mov
in
add
je
mov
add
jmp
mov
out
movsl
lods
pop
jl
test
dec
mov
add
stos
ja
cmp
add
mov
mov
add
add
add
add
ljmp
sbb
sub
dec
xor
mov
in
lret
cmp
jl
push
data16
or
sti
push
add
movsl
cmp
cs
repnz
add
dec
call
push
add
repz
sbb
daa
fisttps
and
add
in
add
inc
add
mov
add
add
pop
mov
stos
pop
xchg
sahf
dec
icebp
lahf
xchg
add
into
orl
and
add
mov
mov
jle
add
add
pop
cwtl
rolb
sub
clc
sub
test
imul
js
add
outsl
push
add
aaa
cmp
add
add
pop
into
mov
add
mov
add
loop
xor
decl
add
and
mov
les
test
addb
imul
add
test
out
enter
frstor
inc
add
cs
and
jle
add
dec
iret
repz
add
in
jmp
and
add
add
add
add
dec
in
lahf
pop
enter
mov
xor
inc
pusha
add
mov
fbstp
add
pop
mov
add
les
inc
xor
in
les
inc
and
das
mov
ds
add
push
jo
ljmp
add
xor
into
push
es
or
add
fdivrs
add
add
out
adc
icebp
movl
jo
mov
fcmovnb
add
add
sub
mov
ds
mov
setb
pop
add
jnp
mov
or
and
add
ret
jbe
icebp
inc
xchg
sbb
add
shrl
jge
fldl
push
add
jo
cmp
repnz
jle
add
inc
add
jge
xor
xchg
jns
add
mov
cmc
push
adc
stos
push
pop
test
insl
and
bound
mov
cmp
add
stc
les
call
stos
mov
push
add
add
add
mov
rolb
stos
or
imul
add
xchg
movb
lock
mov
repnz
push
and
leave
aaa
mov
fprem
xor
add
shr
inc
add
add
push
add
jl
add
add
push
dec
push
arpl
pop
stos
cli
sub
ret
leave
mov
add
std
das
sub
add
mov
push
add
xchg
ret
std
ss
xchg
nop
add
jae
test
xchg
rolb
or
scas
clc
jne
je
add
mov
fildl
add
mov
outsl
push
add
adc
decb
cmp
add
or
push
mov
add
mov
mov
mov
jae
add
jp
add
or
mov
add
mov
mov
push
add
insl
pop
out
popf
mov
idivl
mov
mov
scas
es
xor
ds
add
repnz
jp
mov
add
adc
push
out
mov
mov
pop
ficompl
lods
push
jecxz
push
sbb
into
call
mov
add
add
add
dec
push
pop
ret
xchg
in
int
add
push
jnp
xchg
add
mov
stc
nop
es
out
add
or
nop
es
fldenv
push
jns
movsb
add
jne
stc
nop
es
cld
mov
or
add
nop
es
cmc
inc
add
mov
mov
inc
add
scas
mov
stc
nop
es
inc
add
jg
push
jecxz
add
ret
nop
es
push
add
pop
push
stc
nop
es
pushf
mov
ret
add
stos
lea
stc
nop
es
sbb
cld
mov
stc
nop
es
cmpsb
add
mov
add
add
push
stc
nop
es
cmc
add
add
in
rcll
movsl
push
mov
movzwl
push
mov
xchg
ret
cmpsb
add
int3
mov
stc
nop
es
add
xchg
add
add
daa
add
test
nop
es
cltd
push
add
add
cli
mov
push
mov
xchg
ret
cmpsb
add
insb
ret
push
mov
xchg
ret
pushf
shll
sbb
add
cld
nop
jmp
add
add
repnz
add
rclb
sub
inc
add
xchg
mov
add
mov
dec
add
push
mov
xchg
ret
in
popa
into
add
mov
push
mov
xchg
ret
jg
lahf
into
add
sbb
stc
nop
es
adc
push
cltd
out
mov
push
mov
xchg
ret
pop
add
sbb
stc
nop
es
add
add
or
cld
nop
jmp
add
cmpsl
addl
or
inc
add
popa
add
push
sbb
mov
xchg
ret
insl
add
cltd
pop
out
sbb
es
inc
xchg
mov
sub
stc
nop
es
pop
mov
mov
stos
stc
nop
es
jns
add
pop
add
mov
nop
es
cltd
add
add
add
in
cmp
dec
cmp
nop
es
add
xchg
add
cld
pop
add
nop
cld
nop
jmp
add
push
adc
rolb
roll
push
nop
cld
nop
jmp
sarb
add
jmp
add
mov
nop
es
add
mov
mov
xchg
ret
inc
add
pop
jmp
xchg
lea
test
add
stc
nop
es
add
push
stc
nop
es
adc
add
mov
stc
nop
es
movsb
shr
popa
and
jp
inc
loopne
mov
xchg
ret
add
jg
lahf
daa
cmp
out
stc
nop
es
pop
add
add
pop
jge
jmp
adcb
add
insl
add
inc
adc
cltd
fnstenv
call
and
cmp
ret
cmpsl
inc
mov
add
imul
es
in
and
add
imul
jb
popa
add
add
add
sub
loope
add
stc
nop
es
add
add
mov
xchg
ret
pop
mov
add
jle
stc
nop
es
rcl
add
cmc
and
insl
xchg
add
add
mov
add
mov
xchg
ret
jns
add
add
mov
nop
cld
nop
jmp
add
and
push
push
mov
xchg
ret
add
add
add
add
cmpl
nop
cld
nop
jmp
pop
fnstcw
add
repz
mov
xchg
ret
add
pushf
fnstenv
mov
pop
nop
cld
nop
jmp
add
add
add
mov
dec
push
mov
xchg
ret
mov
add
mov
push
add
stc
nop
es
add
add
mov
cmp
nop
cld
nop
jmp
add
popa
stc
nop
es
jg
insl
pushf
js
and
stc
nop
es
jg
inc
adc
push
add
jmp
stc
nop
es
add
repnz
mov
es
add
test
add
nop
cld
nop
jmp
add
add
stc
nop
es
add
movsb
add
je
stc
nop
es
in
add
mov
add
mov
stc
nop
es
add
add
add
sub
add
nop
es
xchg
insb
add
add
stc
nop
es
add
add
add
mov
push
mov
xchg
ret
and
mov
add
add
nop
es
inc
ret
repnz
xor
stc
nop
es
cmpb
jno
push
mov
jp
jge
negb
push
pusha
sbb
jne
fpatan
movsb
stc
nop
es
add
add
jg
add
lock
mov
xchg
ret
add
insl
jns
add
fwait
push
nop
cld
nop
jmp
in
add
push
cld
add
sbb
es
add
add
cmpsb
or
mov
stc
nop
es
cmpl
in
dec
add
stc
nop
es
add
add
sarl
stc
nop
es
add
add
mov
es
rcrb
fnstcw
mov
xchg
ret
adc
out
add
add
nop
cld
nop
jmp
add
add
inc
lds
push
push
mov
xchg
ret
add
mov
sub
mov
xchg
ret
push
push
add
and
es
add
ret
add
test
fimuls
mov
push
stc
nop
es
add
pop
add
mov
xchg
ret
add
mov
push
add
jle
stc
nop
es
add
add
cld
nop
jmp
add
rcrl
add
rolb
ds
stc
nop
es
add
repnz
inc
add
lock
mov
jb
repnz
add
push
add
es
out
aaa
pop
add
nop
jmp
fldenv
add
add
adc
sub
nop
es
add
add
ret
shl
add
out
out
clc
call
pop
add
add
add
movsl
sahf
pop
push
mov
xchg
ret
add
lds
or
add
nop
es
gs
subl
mov
mov
xchg
ret
insb
xchg
movsb
push
add
add
nop
es
andb
adc
mov
xchg
ret
add
pop
cmpsb
inc
insb
nop
add
test
add
stc
nop
es
add
add
add
stc
nop
es
jmp
push
push
stc
nop
es
cld
add
and
jg
mov
mov
inc
add
jae
dec
mov
stc
nop
es
mov
pop
mov
stc
nop
es
add
add
repnz
pop
sahf
pop
nop
cld
nop
jmp
inc
cmpsb
insl
add
xchg
mov
inc
scas
sub
push
mov
xchg
ret
pushf
add
stc
cmpl
nop
cld
nop
jmp
add
or
add
add
add
stc
nop
es
add
jmp
insl
add
clc
add
rolb
xchg
ret
xchg
cmpsb
add
int
push
sub
cmpsb
fildl
xchg
ret
inc
popa
add
add
add
mov
cmp
ret
push
xchg
roll
cld
mov
movsl
lea
js
nop
cld
nop
jmp
adc
add
add
dec
stc
nop
es
repz
add
mov
push
mov
mov
aam
add
js
jg
mov
nop
cld
nop
jmp
add
into
cmc
xchg
add
add
mov
stc
nop
es
or
add
test
stc
nop
es
add
ret
stos
or
add
nop
es
push
add
dec
cmp
mov
xchg
ret
insl
add
add
lock
add
stc
nop
es
repz
add
add
cmp
add
nop
cld
nop
jmp
add
pop
stc
nop
es
mov
out
mov
stc
nop
es
add
xor
repz
nop
es
add
add
rcrb
mov
xchg
ret
mov
add
testl
stc
nop
es
inc
mov
mov
in
mov
nop
cld
nop
jmp
or
insb
add
stc
nop
es
adc
adc
lea
nop
cld
nop
jmp
add
mov
add
mov
add
stc
nop
es
add
andl
test
nop
es
add
add
add
test
nop
jmp
pop
add
into
fnstenv
add
push
stc
nop
es
mov
add
push
mov
xchg
ret
sarb
add
push
mov
xchg
ret
out
inc
add
shl
movsb
add
add
push
mov
xchg
ret
add
add
add
aam
lock
mov
xchg
ret
add
adc
stc
nop
es
add
or
jmp
inc
add
inc
add
add
inc
push
adc
stc
nop
es
add
out
loopne
aaa
mov
stc
inc
add
add
lahf
lahf
add
jp
je
sub
and
add
add
mov
stc
nop
es
add
add
mov
add
add
sbb
add
shl
push
mov
xchg
ret
add
add
pop
sub
stc
nop
es
add
mov
add
inc
sbb
nop
es
add
cmpb
das
je
nop
cld
nop
jmp
rcrb
rclb
call
push
mov
xchg
ret
cld
cmpsb
mov
add
jb
push
add
add
inc
add
xor
push
mov
xchg
ret
repz
add
add
nop
es
popa
add
push
stc
nop
es
add
mov
pop
pop
stc
nop
es
adc
add
add
add
outsl
nop
cld
nop
jmp
jns
jns
sub
es
adc
xorl
or
incl
add
xchg
add
jns
push
add
mov
stc
nop
es
add
add
adc
inc
add
push
mov
mov
nop
es
cmpsl
add
jbe
das
push
nop
cld
nop
jmp
add
insb
add
inc
insb
add
dec
jmp
stc
nop
es
add
add
movsb
shl
mov
add
idiv
incl
add
add
add
es
stc
nop
es
add
inc
add
nop
es
mov
add
rolb
mov
stc
nop
es
shll
add
arpl
xchg
nop
cld
nop
jmp
pop
movsb
add
ret
inc
or
movsb
stc
nop
es
add
mov
add
add
nop
nop
cld
nop
jmp
add
roll
inc
add
push
mov
xchg
ret
add
popa
insl
pushf
add
call
stc
nop
es
push
add
pop
mov
mov
cld
nop
jmp
insb
popa
add
mov
cmpsb
testb
dec
push
push
mov
xchg
ret
mov
add
add
incl
nop
cld
nop
jmp
add
rorb
mov
xchg
ret
repz
add
cltd
pop
and
stc
nop
es
pop
add
add
add
push
mov
xchg
ret
pop
add
push
add
sti
xorl
stc
nop
es
repz
xchg
add
cld
push
mov
xchg
ret
inc
sbb
push
add
xchg
test
andl
jb
adc
push
add
add
push
lods
pushl
stc
nop
es
add
add
add
xor
loope
add
addl
sub
mov
xchg
ret
insl
pop
add
add
push
stc
nop
es
add
sbbl
inc
stc
nop
es
xchg
add
aaa
add
into
insl
mov
loop
add
add
add
add
mov
stc
nop
es
repnz
movsb
add
mov
stc
nop
es
imul
push
mov
add
ljmp
push
mov
sub
xor
add
stc
nop
es
inc
imul
nop
cld
nop
jmp
cltd
add
repz
sbb
stc
nop
es
mov
add
xchg
dec
mov
nop
cld
nop
jmp
add
cld
xor
dec
sub
into
int
add
insl
add
test
push
mov
xchg
ret
xchg
adc
add
aaa
mov
nop
es
lahf
add
add
push
and
add
add
push
mov
xchg
ret
add
push
rclb
add
mov
push
nop
cld
nop
jmp
jmp
add
add
mov
out
and
mov
cld
nop
jmp
popa
into
add
add
dec
pop
stc
nop
es
add
add
pop
push
stc
nop
es
and
mov
lahf
lea
nop
cld
nop
jmp
flds
add
mov
sub
stc
nop
es
sbb
add
add
add
stc
nop
es
xchg
add
add
add
es
cmpsb
add
add
add
leave
sub
nop
es
cltd
add
add
ret
stc
nop
es
mov
mov
mov
push
mov
xchg
ret
push
cmp
rolb
outsb
mov
stc
nop
es
aaa
add
jb
stc
nop
es
mov
adcl
sbbb
cmp
xchg
add
stc
nop
es
inc
push
push
add
and
inc
add
bound
cld
nop
jmp
pop
add
mov
cld
nop
jmp
add
popa
push
sub
xor
add
nop
cld
nop
jmp
push
mov
stc
nop
es
mov
subl
stc
nop
es
jmp
push
cmpsb
add
push
mov
xchg
ret
cltd
addb
add
mov
aad
xor
nop
cld
nop
jmp
pop
push
add
out
add
add
nop
cld
nop
jmp
add
inc
add
add
add
call
nop
es
inc
add
xor
nop
es
add
andl
add
sub
mov
xchg
ret
add
xchg
add
ret
push
stc
nop
es
add
add
mov
add
and
stc
nop
es
repnz
cld
repnz
add
pop
stc
nop
es
repnz
add
add
add
add
inc
nop
cld
nop
jmp
and
add
ja
fs
nop
es
js
xchg
sarb
test
add
add
nop
es
add
add
push
mov
xchg
ret
and
rolb
push
add
add
and
mov
xchg
ret
inc
add
bnd
stc
nop
es
gs
push
cld
add
add
add
arpl
cld
nop
jmp
add
add
lds
movzwl
stc
nop
es
addb
add
popa
iret
add
stc
nop
es
xchg
adc
push
mov
add
add
mov
adc
ds
stc
nop
es
repz
out
push
movsb
add
add
stc
nop
es
or
cltd
cmpsb
add
call
stc
nop
es
add
ret
adc
insb
xor
stc
nop
es
xchg
pop
add
add
mov
xchg
ret
roll
out
push
cmp
test
enter
es
add
add
add
cmp
jb
push
add
rolb
push
add
add
add
add
mov
xchg
ret
add
add
mov
nop
jmp
addb
rolb
xchg
add
inc
add
mov
push
mov
xchg
ret
add
push
add
loope
mov
xor
inc
add
add
bnd
jbe
jae
add
jne
stc
nop
es
add
cmp
cld
nop
jmp
add
cmp
add
sbb
jb
jg
add
repnz
imul
nop
cld
nop
jmp
movsb
add
add
out
push
cmc
inc
add
add
and
add
adc
xchg
push
add
imul
jmp
stc
nop
es
add
add
std
push
nop
cld
nop
jmp
inc
xchg
insb
and
add
add
mov
xchg
ret
cld
mov
imul
nop
es
sbb
dec
add
stc
nop
es
add
imul
jae
stc
nop
es
ret
add
add
cld
nop
jmp
add
add
stc
nop
es
inc
push
add
add
xor
stc
nop
es
add
add
add
add
push
mov
xchg
ret
adc
mov
xchg
or
nop
cld
nop
jmp
add
cltd
add
xchg
add
mov
lahf
push
push
mov
xchg
ret
cmc
or
add
mov
stc
nop
es
pushf
icebp
rolb
pop
add
stc
nop
es
addb
add
mov
div
nop
cld
nop
jmp
add
add
push
jmp
add
shrl
nop
es
add
xchg
repz
jb
add
add
jns
adc
sub
cld
nop
jmp
add
add
cmpsb
mov
ret
add
nop
es
cmp
cmpsl
insl
add
icebp
les
loopne
sub
jmp
ljmp
add
add
push
mov
stc
nop
es
and
add
mov
add
push
add
in
or
ljmp
cmpsl
inc
in
into
add
sahf
shr
stc
nop
es
mov
adc
mov
mov
xchg
ret
lahf
jg
add
sbb
inc
movb
mov
push
mov
xchg
ret
inc
push
or
out
add
repz
cld
sbb
jne
stc
nop
es
imul
ret
push
mov
nop
cld
nop
jmp
cld
into
push
or
add
mov
xlat
xorl
add
mov
add
inc
add
fsubrp
hlt
cmc
stc
nop
es
jmp
add
add
aam
in
fisttpll
test
nop
es
add
and
push
mov
xchg
ret
adc
add
add
aam
je
cwtl
push
stc
nop
es
add
add
fwait
mov
stc
nop
es
pop
add
add
mov
stc
nop
es
add
cmpsl
roll
inc
add
mov
add
mov
push
mov
xchg
ret
mov
mov
decl
push
mov
xchg
ret
adc
adc
add
add
dec
and
push
mov
xchg
ret
add
adc
shrl
add
stc
nop
es
add
add
mov
stc
nop
es
movsb
mov
imul
stc
nop
es
add
push
add
in
popa
test
stc
nop
es
imul
sar
nop
es
xchg
add
add
cmpsb
pop
push
push
mov
xchg
ret
movsb
js
addl
mov
stc
nop
es
or
jmp
std
mov
stc
nop
es
add
jnp
es
nop
jmp
add
xchg
stc
nop
es
jns
add
addb
cmp
mov
xchg
ret
push
adc
pop
add
je
pop
mov
stc
nop
es
add
jg
repz
add
dec
nop
cld
nop
jmp
push
repz
repz
add
and
push
mov
xchg
ret
addb
add
add
es
push
mov
outsb
mov
stc
nop
es
gs
mov
jmp
stc
nop
es
add
js
xor
add
stc
nop
es
add
and
stc
nop
es
cmp
and
mov
dec
mov
stc
nop
es
push
add
push
or
adc
nop
cld
nop
jmp
add
js
sbb
mov
and
nop
cld
nop
jmp
add
rcll
inc
jo
aad
add
jb
add
add
mov
rolb
add
stc
nop
es
in
add
repz
stc
nop
es
cmc
add
add
dec
push
stc
nop
es
add
add
adc
addr16
es
add
add
add
movsb
mov
inc
cmp
mov
xchg
ret
insl
in
js
inc
stos
jne
stc
nop
es
add
icebp
or
popa
add
mov
xchg
ret
add
mov
arpl
les
nop
cld
nop
jmp
popa
jg
inc
add
rolb
jp
repz
mov
xchg
ret
add
add
add
nop
cld
nop
jmp
cld
cmc
repz
add
cmp
nop
es
cmc
add
add
add
nop
jmp
or
mov
add
fiadds
cld
nop
jmp
add
sub
test
stc
nop
es
add
xor
nop
jmp
add
lahf
gs
popa
add
mov
stc
nop
es
imul
or
js
out
movsb
add
add
push
mov
xchg
ret
push
and
push
mov
xchg
ret
push
mov
push
add
nop
es
add
add
push
mov
xchg
ret
mov
xor
test
and
popl
stc
nop
es
rolb
cld
add
cmp
nop
cld
nop
jmp
add
add
xor
stc
nop
es
pushf
jg
add
cmpsb
add
call
stc
nop
es
adc
mov
inc
je
dec
pop
push
mov
xchg
ret
add
xor
imul
jmp
mov
insl
shll
mov
fiaddl
xchg
ret
add
jns
add
jne
stc
nop
es
add
xchg
dec
pusha
stc
nop
es
add
mov
add
push
stc
nop
es
add
cmpsl
repz
pop
aad
mov
nop
cld
nop
jmp
lahf
add
add
and
add
neg
inc
add
add
add
add
mov
popa
push
add
push
add
xchg
lock
stc
nop
es
movsb
add
add
and
nop
cld
nop
jmp
add
imul
test
out
stc
nop
es
add
push
jle
push
mov
xchg
ret
pop
add
add
add
popf
mov
stc
nop
es
add
add
pop
pop
rep
push
mov
xchg
ret
add
js
cmpsb
inc
sub
cld
nop
jmp
pop
movsb
js
pop
mov
movzwl
stc
nop
es
add
int
jg
stc
nop
es
add
shl
inc
mov
mov
stc
nop
es
add
lahf
ret
push
add
add
mov
xchg
ret
add
dec
mov
stc
nop
es
add
add
pop
push
mov
xchg
ret
and
lahf
in
mov
stc
nop
es
add
add
fadds
xchg
ret
mov
and
std
call
jmp
add
add
cli
stc
nop
es
add
add
js
xor
push
mov
xchg
ret
inc
add
inc
or
stos
lea
push
mov
xchg
ret
ret
add
je
js
mov
xchg
ret
inc
add
add
add
add
add
lea
nop
es
add
mov
add
add
or
stc
nop
es
add
mov
add
add
push
in
call
ljmp
or
rclb
add
cmp
ret
pop
add
addb
inc
add
leave
nop
cld
nop
jmp
add
add
add
push
stc
nop
es
mov
pop
repz
ret
add
add
pop
push
mov
xchg
ret
cmpsl
mov
and
push
stc
nop
es
jmp
push
add
add
push
push
mov
xchg
ret
add
roll
cmpsl
roll
pop
mov
nop
cld
nop
jmp
add
mov
test
es
sbbb
popf
add
nop
cld
nop
jmp
cmpsb
push
into
sub
mov
nop
cld
nop
jmp
mov
mov
es
add
aaa
add
je
add
stc
nop
es
add
je,pn
stc
nop
es
mov
inc
cmp
nop
cld
nop
jmp
add
in
popa
stc
mov
nop
cld
nop
jmp
add
add
add
sub
stc
nop
es
pop
add
cmp
jno
stos
push
mov
xchg
ret
add
or
popa
push
mov
xchg
ret
mov
push
movsb
jns
lea
nop
cld
nop
jmp
add
xchg
push
add
add
stc
nop
es
add
add
add
push
push
mov
xchg
ret
into
add
push
push
mov
xchg
ret
mov
add
gs
cmp
nop
cld
nop
jmp
sbb
xchg
add
pop
add
int
jle
stc
nop
es
inc
shr
add
push
repz
and
add
add
hlt
incl
inc
adc
popa
and
mov
stc
nop
es
add
and
and
nop
cld
nop
jmp
pop
push
add
lahf
add
stc
nop
es
add
add
rolb
and
mov
out
push
stc
nop
es
flds
push
xchg
popf
lods
stc
nop
es
add
add
push
push
mov
xchg
ret
push
push
rolb
out
mov
test
nop
cld
nop
jmp
sbb
js
loopne
add
mov
adc
add
add
push
stc
nop
es
add
adc
repnz
pushf
sbb
jne
push
mov
xchg
ret
add
add
into
mov
stc
nop
es
add
add
add
jb
xchg
inc
sbb
cld
add
loope
push
push
mov
xchg
ret
add
cmpl
mov
nop
es
cmpsb
pushf
adcb
sbb
nop
jmp
push
and
pop
lahf
add
stc
nop
es
add
pushf
push
add
js
stc
nop
es
add
movsb
ja
add
stc
nop
es
add
add
stc
nop
es
pop
add
inc
add
add
stc
nop
es
cltd
add
repnz
mov
aad
insl
xor
stc
nop
es
jmp
mov
imul
mov
dec
push
push
mov
xchg
ret
mov
add
push
mov
xchg
ret
add
mov
orl
stc
nop
es
add
mov
popa
stc
nop
es
add
jmp
add
subl
add
nop
cld
nop
jmp
add
cmp
mov
and
stc
nop
es
into
ret
add
xchg
add
mov
stc
nop
es
mov
pop
stc
add
stc
nop
es
mov
mov
stc
nop
es
add
subl
stc
nop
es
add
inc
add
add
pop
push
mov
xchg
ret
cmpsl
push
add
dec
adc
or
cmp
ret
cltd
fldenv
adc
nop
es
and
cmpsb
add
test
nop
cld
nop
jmp
sarb
xorb
add
je
and
es
push
shlb
jge
inc
stc
nop
es
cltd
add
add
add
ret
jmp
es
add
add
adc
pop
call
jmp
mov
dec
popa
stc
nop
es
add
out
mov
mov
test
test
stc
nop
es
cmpl
stc
nop
es
pushf
add
mov
adc
nop
es
add
cmpsl
pop
mov
mov
popf
stc
nop
es
add
add
mov
stc
nop
es
mov
movsb
icebp
or
es
add
inc
mov
mov
pop
push
push
mov
xchg
ret
js
into
add
ljmp
nop
es
cld
into
add
dec
push
nop
cld
nop
jmp
add
repnz
xchg
repnz
popf
push
mov
xchg
ret
inc
popa
cmpsl
inc
add
inc
add
add
add
call
stc
nop
es
add
jmp
cmp
dec
cmp
cld
nop
jmp
add
pop
sub
nop
es
push
add
aaa
sahf
push
mov
add
dec
add
add
xor
push
xchg
add
nop
es
mov
push
add
lahf
add
add
add
nop
es
add
pop
inc
push
mov
xchg
ret
add
pop
jg
add
ss
daa
adc
stc
nop
es
mov
add
add
imul
mov
mov
nop
es
rolb
push
out
and
add
ret
stc
nop
es
shll
add
add
gs
nop
es
jmp
push
add
add
jg
nop
cld
nop
jmp
add
pop
inc
add
stc
nop
es
mov
add
mov
jb
add
add
ret
add
add
sub
mov
cmp
ret
lahf
mov
add
out
or
xor
fs
nop
es
push
repz
aaa
shrl
sar
nop
es
mov
push
mov
add
nop
es
rolb
mov
addb
push
add
and
stc
nop
es
push
cmpsb
add
fnstenv
mov
nop
cld
nop
jmp
add
add
add
jg
mov
hlt
pop
add
add
jmp
or
sbb
sbb
push
es
inc
pop
pop
add
add
add
nop
es
cltd
add
inc
js
enter
jb
inc
js
out
add
nop
jmp
js
pop
inc
add
mov
adc
add
push
mov
xchg
ret
adc
add
push
mov
stc
nop
es
add
stc
nop
es
rolb
xchg
push
and
mov
je
nop
cld
nop
jmp
into
cmpsl
pop
out
ret
stc
nop
es
add
add
pop
rcll
add
add
nop
es
pop
add
ret
push
push
mov
xchg
ret
add
cmpsl
add
addb
mov
stc
nop
es
adc
cmpsb
pop
mov
pop
stc
nop
es
add
cmpsb
cld
mov
mov
stc
nop
es
add
add
stc
nop
es
mov
add
add
je
nop
cld
nop
jmp
add
js
inc
test
pop
and
nop
es
js
add
cmp
inc
pop
jmp
stc
nop
es
add
roll
into
movzwl
nop
cld
nop
jmp
add
xchg
add
push
stc
nop
es
pop
add
rolb
rorb
add
jmp
cmc
add
mov
add
add
stc
nop
es
mov
mov
mov
nop
cld
nop
jmp
push
add
inc
add
add
cld
nop
jmp
add
insb
add
add
stc
nop
es
popa
pushf
add
add
and
mov
stc
nop
es
pop
inc
andl
sub
stc
nop
es
xchg
add
add
dec
shl
nop
cld
nop
jmp
add
rcrl
add
add
add
nop
cld
nop
jmp
insl
adc
and
aad
mov
stc
lock
add
adc
add
cmpsl
mov
fldl
add
call
mov
bound
mov
nop
es
add
add
cltd
inc
add
lret
add
stc
nop
es
push
js
cmp
push
mov
xchg
ret
add
and
mov
stc
nop
es
add
cld
das
mov
stc
nop
es
insb
repnz
mov
mov
add
cmp
xor
mov
add
xor
push
mov
xchg
ret
addb
sbb
mov
stc
nop
es
insb
add
adcb
add
mov
push
mov
xchg
ret
mov
and
add
movb
mov
push
mov
xchg
ret
add
add
pop
mov
stc
nop
es
cld
and
xchg
xchg
imul
mov
inc
add
jg
add
sub
nop
es
add
add
rolb
add
cmp
nop
cld
nop
jmp
jmp
repnz
cmpsl
add
insb
insb
add
stc
nop
es
add
and
sti
xor
stc
nop
es
or
fyl2x
mov
mov
in
mov
mov
cmp
add
mov
es
add
pop
in
mov
stc
nop
es
flds
cld
add
sub
fsubr
movsl
mov
sahf
add
add
mov
stc
nop
es
aaa
mov
movb
mov
push
mov
xchg
ret
add
imul
nop
cld
nop
jmp
push
add
add
pop
mov
inc
dec
push
push
mov
xchg
ret
pop
addl
sbb
call
call
add
pop
cmp
push
mov
xchg
ret
add
add
mov
xchg
ret
add
add
mov
xchg
ret
add
insb
add
lds
jle
stc
nop
es
add
add
dec
push
push
mov
xchg
ret
add
add
push
nop
es
add
add
add
insl
mov
push
mov
xchg
ret
cmp
cmp
add
stc
nop
es
inc
insl
adc
cld
add
pop
lea
push
mov
xchg
ret
add
add
pushf
cld
add
stc
nop
es
push
repz
mov
add
call
idiv
dec
roll
aaa
add
jg
mov
stc
nop
es
imul
nop
es
mov
addl
pop
push
mov
xchg
ret
push
add
add
mov
stc
nop
es
gs
imul
sub
push
mov
xchg
ret
add
add
jns
add
add
leave
stc
nop
es
pop
add
insl
mov
add
nop
jmp
ret
add
jns
push
xchg
fwait
mov
stc
nop
es
or
add
divps
nop
es
xchg
add
pushf
adc
add
cld
or
jmp
mov
pop
js
add
cld
nop
jmp
add
add
nop
es
add
add
cmpsl
cmp
add
add
add
add
pushf
add
lret
cld
nop
jmp
add
push
stc
nop
es
add
jg
add
push
mov
xchg
ret
add
mov
sub
nop
cld
nop
jmp
add
lret
mov
nop
cld
nop
jmp
add
xchg
mov
lahf
or
dec
add
push
mov
xchg
ret
add
jmp
add
add
nop
es
push
ret
add
mov
add
mov
add
bound
pop
pop
add
pop
arpl
mov
pop
stc
nop
es
aaa
pop
mov
push
ret
inc
xor
mov
mov
stc
nop
es
movsb
add
pushf
add
nop
cld
nop
jmp
into
pushf
add
add
movsb
add
stc
nop
es
insb
add
adc
add
add
push
add
sbb
nop
es
jmp
add
add
add
add
nop
cld
nop
jmp
rorb
stc
nop
es
add
sub
add
stc
nop
es
push
fldenv
sbb
nop
es
add
add
add
popa
out
inc
stc
nop
es
add
lahf
add
xlat
daa
es
xchg
sbbb
add
mov
xchg
ret
inc
cmpsl
adcl
push
mov
xchg
ret
add
add
stc
nop
es
push
cmpsb
jns
add
add
sahf
push
push
mov
xchg
ret
add
mov
cld
xchg
add
add
nop
es
pushf
in
movsb
add
or
mov
add
push
push
mov
xchg
ret
mov
add
lods
xor
stc
nop
es
add
lahf
out
add
stos
stc
nop
es
add
js
and
or
add
mov
stc
nop
es
mov
jmp
nop
cld
nop
jmp
add
rclb
roll
xchg
ret
add
mov
add
inc
insl
mov
stc
nop
es
add
push
pushf
popa
add
es
add
flds
cmp
pushf
jne
pop
je
stc
nop
es
mov
test
nop
es
add
mov
stc
nop
es
add
add
roll
aas
dec
push
mov
xchg
ret
add
cld
repnz
movsl
adcl
shr
nop
cld
nop
jmp
and
push
add
call
stc
nop
es
js
inc
add
add
add
data16
ljmp
lahf
add
movb
shll
stc
nop
es
add
aaa
cltd
jg
pop
add
stc
nop
es
lahf
add
add
mov
stc
nop
es
add
nop
es
popa
cld
add
add
add
mov
nop
es
cmpsb
add
mov
add
jmp
and
push
add
pushf
add
bound
mov
mov
stc
nop
es
and
in
mov
stos
push
mov
sub
int3
add
mov
jge
add
jmp
cmp
ret
add
add
push
mov
xchg
ret
push
mov
add
jp
test
in
call
call
add
add
stc
nop
es
push
xor
flds
out
ja
repnz
ds
stc
nop
es
inc
add
add
rep
stc
nop
es
add
imul
stc
nop
es
add
push
add
xchg
sbb
mov
add
into
add
mov
add
test
sbb
mov
iret
mov
mov
add
jo
stc
test
das
sbb
mov
sbb
sbb
mov
adcl
mov
add
pop
mov
add
cmp
jmp
add
movsb
add
fimull
add
push
add
in
fstpl
arpl
mov
add
aam
add
fld
aas
icebp
dec
into
sarl
call
sahf
mov
cmp
cltd
xchg
push
jp
add
mov
or
les
push
add
add
mov
add
add
pop
cmc
arpl
ljmp
lods
nop
add
xchg
add
add
cmp
loopne
adc
pop
mov
pop
pop
popf
jecxz
pop
sub
add
mov
dec
push
insb
add
test
mov
add
add
pop
mov
mov
call
add
in
mov
add
add
add
add
arpl
add
rolb
add
outsl
dec
repnz
dec
int
mov
int3
leave
divl
or
add
mov
and
xlat
jl
xor
add
fistpl
add
push
jp
enter
add
mov
insl
aam
popf
call
ret
add
xchg
add
jg
add
data16
add
add
add
add
add
in
and
mov
in
addb
add
or
outsb
sbb
outsb
outsl
dec
mov
mov
out
sbb
lret
movb
add
mov
mov
push
movsl
push
add
add
das
jl
lea
data16
mov
sbb
xchg
add
add
adc
inc
add
aaa
sub
stos
rolb
inc
add
add
gs
add
mov
mov
rolb
call
add
xchg
add
add
mov
push
add
leave
popf
fstpl
imul
jno
push
add
repz
icebp
daa
stos
pop
out
dec
addb
add
add
cltd
adcl
adc
cmpsl
and
test
daa
pop
xlat
and
mov
dec
dec
jmp
ret
dec
pop
dec
push
push
pop
fsubrs
fdivl
ret
push
add
scas
xor
insl
inc
add
add
jmp
add
int3
mov
cwtl
cmp
push
xchg
push
std
ffreep
add
scas
adc
hlt
add
mov
testb
cmp
nop
add
add
rolb
fisubrl
pusha
add
inc
int3
push
add
rolb
ljmp
add
add
add
jne
add
ljmp
rolb
pop
inc
inc
pop
movb
fcomp
xchg
add
lods
xor
imul
rolb
insb
pop
imul
into
adc
sub
add
pop
xor
push
mov
daa
inc
jecxz
decb
lret
addb
cmp
cli
out
bound
mov
cmp
pop
add
mov
sub
add
add
add
or
jne
add
pop
pop
fidivrl
add
add
ds
fwait
lea
add
dec
sbb
into
xor
addr16
cmp
add
jmp
and
ficompl
jae
and
xor
pop
fmuls
imul
add
inc
add
add
cld
push
data16
cld
cltd
xlat
imul
rcll
addb
add
add
jb
push
sbb
insl
nop
add
add
shll
add
pop
add
mov
add
inc
push
add
hlt
add
repnz
xchg
ret
and
add
add
sbb
testb
xor
inc
add
xor
xchg
data16
or
add
push
sbb
pop
mov
insl
cld
dec
sahf
scas
pop
xor
add
mov
sub
mov
mov
lods
fadds
xor
jmp
shll
xchg
add
lods
and
mov
add
stc
cmp
add
fisttpll
cld
adc
push
lret
mov
jge
mov
add
cltd
test
mov
add
add
add
std
mov
hlt
add
push
notl
cwtl
out
add
popf
fisubl
negl
jae
notl
daa
mov
or
mov
xchg
arpl
test
repz
add
lcall
test
lods
adc
sahf
int
add
test
stos
inc
add
std
leave
sets
hlt
add
loope
add
rol
add
add
ljmp
mov
adc
push
add
add
jl
add
repz
test
add
mov
xor
push
add
or
add
popf
mov
jo
inc
shll
imul
add
cmp
add
add
add
mov
mov
sbb
loopne
and
add
addl
jmp
rolb
dec
sti
add
lock
outsb
shl
ja
add
jp
mov
sub
and
mov
cmp
mov
mov
add
add
inc
add
xchg
add
add
add
jmp
sbbl
add
cmp
dec
add
mov
out
repz
hlt
add
mov
or
lea
pop
imul
mov
dec
mov
sbb
in
xor
xchg
add
scas
push
mov
repz
add
add
decl
addr16
push
dec
dec
pop
mov
outsb
inc
int3
jb
fnstcw
mov
fisttpl
mov
data16
clc
rcll
iret
jmp
sub
add
dec
or
push
add
int
add
xchg
add
add
fimull
ret
mov
rolb
add
add
jbe
push
add
push
add
mov
xchg
pop
jecxz
test
aad
mov
mov
sub
sub
xchg
add
sub
add
stos
xchg
add
repz
mov
aas
out
add
addb
loopne
xchg
add
mov
add
out
les
cwtl
pop
in
jp
das
add
rolb
push
add
push
add
sahf
xchg
movsl
aas
mov
test
inc
add
cltd
add
add
xlat
movsl
push
mov
iret
daa
adc
dec
scas
ljmp
push
add
cmp
sub
add
mov
and
mov
and
mov
frstor
add
jns
jecxz
sub
xchg
cmpsb
add
sti
or
lea
and
add
jb
pusha
add
add
add
enter
xchg
mov
or
xor
sarl
repnz
or
jl
jae
add
add
xor
out
jae
movsl
add
mov
pop
sbb
push
mov
add
movsb
add
add
pop
inc
mov
rolb
jb
mov
add
add
add
add
in
test
adc
pop
add
add
test
xor
push
pusha
add
mov
fiadds
push
add
sbb
dec
jg
add
add
sbb
jmp
add
mov
sub
add
mov
int3
les
or
mov
push
fs
sub
mov
stc
jbe
mov
mov
jle
add
adcl
lahf
scas
fidivrl
pop
fdivl
ret
push
add
lcall
add
nop
add
xchg
or
jno
mov
adc
xor
add
lods
and
add
add
mov
or
push
add
out
daa
mov
xor
and
adc
mov
je
mov
scas
pop
push
add
loopne
fists
pop
bt
inc
add
gs
in
mov
add
call
aaa
mov
call
rolb
pop
loope
add
dec
and
add
movsb
add
call
sub
add
or
inc
add
cmovne
add
cmp
stc
mov
xchg
and
mov
add
cmpsb
add
xor
test
add
add
addr16
iret
mov
gs
sub
pop
cmp
or
inc
rolb
lock
and
mov
cmp
hlt
add
cmp
add
mov
add
lcall
cld
xlat
or
mov
push
sbb
add
mov
add
out
add
aaa
inc
add
add
mov
call
push
add
imul
add
mov
xor
pop
add
fcompl
clc
int3
aam
and
scas
das
mov
das
cmp
add
bound
mov
jnp
mov
mov
sub
data16
adcl
add
movb
add
ret
sub
add
add
jo
rolb
testb
add
jae
sbb
mov
andl
jge
nop
add
push
mov
add
mov
in
stc
dec
inc
aam
rolb
movb
xchg
add
int
xchg
ds
repz
xchg
sub
add
fwait
pop
adc
and
mov
add
push
add
cwtl
addb
jae
stos
call
mov
add
or
test
add
add
add
je
xorl
popf
push
push
jns
xlat
push
or
adc
xor
subl
sbb
sti
sbb
add
jb
mov
add
ficoms
iret
out
adc
dec
mov
add
add
push
add
jp
xor
pop
addb
add
dec
gs
leave
push
add
dec
repz
xor
lret
xor
jae
idiv
jno
add
rdmsr
add
imul
mov
and
cmp
mov
ljmp
xchg
add
addb
cmpsb
add
mov
cmp
and
add
out
std
jmp
sbb
sete
pop
push
add
lods
movl
or
or
arpl
inc
add
lds
add
mov
add
or
mov
sahf
repz
or
mov
scas
jp
xchg
add
jns
add
lret
xorl
sbb
and
pop
mov
lods
std
push
add
push
add
cwtl
pop
pop
or
mov
and
mov
add
ret
xchg
add
inc
ret
hlt
add
add
mov
call
add
add
push
add
add
mov
int3
fbstp
je
rolb
mul
add
enter
add
mov
addr16
inc
add
add
jmp
sbb
mov
pop
ficoml
and
cmp
add
loopne
cmc
mov
inc
add
xchg
out
dec
sbb
and
add
ljmp
int
pop
data16
add
add
inc
mov
xchg
add
cmp
add
fsts
daa
xchg
add
test
and
pop
mov
adc
jne
add
mov
enter
cmp
or
xor
mov
add
add
ret
add
bound
mov
cltd
xchg
in
sbb
out
mov
fnsave
add
xchg
add
lods
pop
fs
das
xor
xchg
push
insb
idivl
add
push
sbb
add
out
xchg
add
add
xchg
les
stos
xor
mov
jnp
sub
jg
movsb
add
or
daa
inc
add
movsl
fisubs
xor
aad
mov
test
gs
mov
adc
loope
enter
nop
add
xlat
jae
js
add
out
int3
cmp
add
push
add
or
lods
rolb
rcrl
add
xlat
and
mov
add
mov
loop
xchg
popa
jae
movsb
add
add
and
pop
adc
add
add
inc
add
dec
data16
or
pop
push
add
icebp
imul
add
mov
adc
icebp
pushf
jl
out
push
mov
scas
xor
data16
jp
dec
stc
and
mov
mov
jbe
popf
add
into
divl
xchg
rolb
mov
nop
add
cltd
arpl
add
loop
loop
pop
or
jae
xor
add
ja
fistpl
jnp
add
push
pop
imul
adc
push
add
sub
add
xor
popf
xchg
push
add
add
add
out
test
jl
pop
addb
loope
add
sub
dec
testb
sub
mov
cmc
gs
add
mov
dec
pusha
add
add
add
mov
imul
iret
cmp
inc
inc
add
jnp
add
cmpsb
add
add
sahf
jge
pop
xchg
or
xchg
das
push
inc
imull
fsubrl
mov
loop
push
movb
sub
add
pop
mov
add
cs
cmp
xor
hlt
add
roll
mov
mov
xor
or
lds
push
cmpl
cltd
mov
mov
and
fmul
daa
ljmp
inc
int3
test
mov
fsubl
mov
mov
rolb
lret
gs
add
lcall
outsb
decl
ja
lret
lea
movb
aaa
imul
test
add
test
push
xchg
add
mov
xor
lret
pop
test
aas
push
lret
in
add
test
add
add
add
add
iret
xchg
sub
jne
rcrl
into
out
mov
cmp
fs
add
xchg
outsb
cltd
incl
pop
into
mov
add
dec
sub
add
adc
dec
pop
xchg
pop
lret
cmc
dec
mov
pop
inc
sbb
out
add
pop
outsb
jbe
ror
mov
ret
add
testb
add
out
ficomps
push
add
add
test
mov
or
adc
add
addr16
pop
loopne
popf
adc
or
das
mov
mov
dec
xor
pop
outsb
dec
out
lret
and
inc
mov
add
rolb
aaa
inc
add
xchg
inc
add
add
hlt
add
dec
xor
clc
adc
dec
popf
or
mov
lea
adc
enter
adc
push
add
add
add
mov
add
loopne
inc
rolb
out
xor
add
add
jge
test
mov
nop
add
enter
add
cwtl
and
or
and
add
mov
leave
in
and
mov
je
nop
add
lds
add
aad
adc
add
cmpsl
push
add
add
mov
shrl
add
in
xor
pop
dec
imul
add
add
jo
call
mov
add
add
mov
lret
sub
sbb
push
add
mov
add
pop
popl
xchg
test
add
add
gs
add
add
mov
add
ja
stos
push
add
mov
mov
xor
lret
out
mov
pop
hlt
add
aas
sub
addb
arpl
sbb
jle
out
xor
lahf
out
addb
jns
incl
add
es
add
sbb
add
mov
add
add
test
notl
js
xor
push
add
movl
jno
and
mov
mov
add
mov
add
test
add
addb
insb
ret
cmp
mov
je
push
add
add
add
push
push
add
and
data16
rcrl
daa
sti
jnp
inc
add
or
jbe
add
mov
movb
add
mov
xlat
aas
add
push
pop
sarl
or
adc
mov
ret
pop
cmp
rolb
pop
rolb
xchg
fstpl
push
out
push
cld
mov
cmp
dec
sub
jnp
push
pusha
add
mov
out
mov
cwtl
inc
add
cli
push
fnstcw
push
add
fcmovnb
add
sbb
ds
bound
mov
jns
sub
test
push
add
add
add
add
sbb
adc
add
jb
lds
xlat
fsub
add
imul
cli
scas
add
mov
add
and
mov
push
push
sbb
and
push
lods
int3
mov
mov
add
xchg
add
into
adc
mov
add
js
push
add
and
push
add
test
dec
into
iret
xchg
add
sub
in
negl
add
movsb
add
sahf
fnstenv
ficompl
sbb
push
movsl
mov
mov
jae
add
add
data16
or
dec
loope
pop
jle
imul
add
arpl
add
add
cmpsb
add
jb
xchg
add
std
mov
or
dec
add
lea
sub
add
test
add
add
mov
mov
push
add
insl
jo
ret
xlat
push
gs
dec
dec
push
add
and
mov
sub
mov
loope
add
sbb
push
add
xchg
mov
stos
cmpsl
mov
add
add
test
scas
dec
dec
or
cmp
mov
add
push
add
stos
jb
movsl
lret
movsb
add
cmc
sti
icebp
jp
lcall
add
clc
aad
nop
add
sbb
add
testb
cmp
jne
add
mov
add
stos
or
or
bound
mov
addr16
or
cmp
mov
fildll
pop
mov
push
add
add
add
cli
mov
sbb
stc
sbb
cld
outsb
imul
and
ret
dec
cld
cmc
cmp
cli
xlat
out
rolb
mov
dec
and
mov
mov
mov
ds
pop
inc
cltd
inc
and
testb
mov
add
cmp
dec
sub
mov
add
add
sub
cwtl
inc
add
aam
xchg
in
inc
jl
add
inc
add
add
xor
popl
cltd
xchg
push
add
add
add
add
add
add
sub
jns
sbb
add
fcoml
mov
mov
add
pop
loopne
insb
in
sub
add
test
push
add
add
mov
loopne
pop
insl
mov
add
add
in
orl
addb
pop
in
call
stos
cmp
adc
or
jg
cmp
mov
mov
push
add
push
loopne
add
mov
add
add
ss
lods
stos
add
or
xor
pop
js
in
imul
clc
les
adc
pop
mov
push
add
sub
das
movb
mov
mov
push
inc
add
cmp
movsl
inc
in
sub
ds
loopne
push
movsb
add
mov
jae
test
loop
stc
jle
lahf
loop
mov
dec
sahf
adc
dec
das
scas
add
jle
jmp
cmp
ljmp
jne
add
lea
add
add
fldl
add
bound
mov
sbb
add
add
add
hlt
add
gs
jns
sub
mov
xor
icebp
sbb
mov
add
add
mov
loop
in
xor
pop
push
xchg
rorl
rolb
add
inc
mov
add
cmc
jo
testb
inc
add
push
add
jne
rolb
inc
add
jle
sbb
add
fdivrl
dec
out
xchg
add
mov
pop
inc
jno
mov
leave
pop
cwtl
push
andl
add
mov
inc
add
add
push
add
mov
jb
sti
push
add
sub
add
testb
add
jg
movsb
add
add
scas
fwait
mov
add
mov
aaa
mov
mov
xchg
out
mov
or
add
add
stos
clc
adc
jmp
xor
loop
lods
iret
inc
add
mov
iret
cmp
pop
es
add
add
pop
cmp
leave
mull
jae
jns
jp
push
add
mov
jge
add
add
fldl
add
add
push
add
aaa
pop
inc
add
jl
add
aaa
out
mov
outsb
dec
pop
cmp
movsl
iret
je
loope
leave
dec
sub
incl
pop
pusha
add
aam
xor
add
add
mov
aam
inc
aam
cli
aaa
cmpsl
cmc
dec
add
fwait
lock
jns
add
add
and
ret
daa
dec
jmp
loopne
je
sbb
ret
insb
add
xor
pusha
add
test
rolb
sarl
int
int3
sbb
add
add
inc
add
add
int3
enter
movb
push
add
xor
cmpsl
sub
add
mov
scas
lret
cmp
outsl
icebp
jae
add
mov
add
add
aad
add
outsb
mov
sbb
sub
ljmp
test
mov
leave
ret
ret
stos
rolb
mov
daa
sbb
lret
sub
add
and
sbb
pop
mov
add
add
scas
and
mov
ret
cmpsb
add
fnstenv
mov
add
stc
mov
or
scas
hlt
add
jo
je
push
cmc
daa
leave
xchg
add
lcall
mov
add
lods
mov
cwtl
loopne
mov
outsl
pop
and
mov
add
add
data16
int
adc
adc
stos
mov
xor
cmp
push
cmp
cltd
mov
js
imul
int3
fistps
add
mov
add
add
jnp
loope
add
int3
sub
sbbl
testb
add
add
pop
repz
cmp
mov
xchg
push
add
mov
pop
testb
add
xchg
add
imul
add
loope
dec
je
inc
add
add
mov
or
add
and
add
add
lahf
mov
negl
pop
in
sbb
adc
add
cltd
inc
add
add
add
cld
xchg
xor
xor
fldz
movb
repnz
add
sbb
add
cmp
sbb
test
add
dec
pop
fnstcw
mov
add
gs
adc
add
xor
aam
jl
add
lea
and
insl
fisubrl
add
mov
inc
popa
call
xchg
pop
add
add
testl
mov
in
out
cmp
add
mov
add
pop
loop
testb
test
fisubrs
mov
scas
dec
js
adc
and
mov
out
xchg
leave
rolb
or
and
jnp
add
mov
enter
add
cmpsl
das
lea
je
add
mov
add
mov
fsubs
dec
aad
or
xor
dec
or
add
dec
xor
add
mov
sub
add
xor
and
add
mov
add
cmp
je
mov
in
add
dec
rolb
add
jecxz
add
js
xchg
mov
add
xor
out
xor
xchg
add
add
xchg
out
test
rolb
insl
das
xchg
add
xchg
push
aad
and
cli
inc
add
iret
out
add
mov
add
add
pop
xlat
or
mov
mov
mov
jns
mov
dec
popa
cltd
lods
les
ffreep
add
das
out
mov
and
mov
xchg
add
test
mov
imul
add
mov
add
add
inc
cli
scas
add
add
sahf
jg
add
add
dec
cmc
into
pop
adc
add
mov
fmul
lret
adc
add
sbb
testb
mov
add
in
mov
sub
add
xor
mov
mov
and
mov
dec
cwtl
sub
or
add
push
aam
je
lods
jno
movsl
add
pushf
out
and
mov
add
xchg
add
pop
lods
imul
jo
imul
lahf
loope
and
add
inc
jne
jl
xchg
add
dec
jl
add
add
in
or
popa
push
xor
stos
lods
enter
loop
cwtl
jge
rolb
jno
decl
mov
icebp
dec
mov
add
xor
lahf
and
inc
add
lds
shrl
mov
cmp
addb
add
sub
add
jo
add
sahf
shll
add
push
pop
les
movsb
add
push
add
add
or
push
addb
add
lret
sub
std
outsl
pop
cs
pop
fldl
add
add
icebp
mov
add
fucom
int
add
mov
out
and
test
movsb
add
arpl
add
sub
nop
add
add
sbb
add
add
xor
cmpsl
scas
sub
pop
push
subl
repnz
in
inc
or
popf
setge
sub
cmp
sbb
add
mov
add
add
mov
sub
stos
addb
sbb
sbbl
jmp
rdmsr
add
push
dec
or
add
mov
pop
mov
mov
in
xchg
add
cmp
addb
arpl
addb
es
je,pt
dec
mov
cmp
imull
add
add
addb
add
xlat
repnz
inc
add
mov
leave
movsl
jle
push
inc
add
mov
inc
leave
bound
mov
add
xchg
or
or
xchg
add
mov
add
mov
add
mov
cs
add
jecxz
add
push
add
fst
lea
rolb
jmp
cltd
movsl
inc
add
add
or
xchg
stos
scas
data16
in
add
add
add
xchg
das
push
add
mov
or
out
sub
pop
mov
fdivrl
mov
pop
icebp
jge
loopne
int3
inc
add
call
add
inc
add
rolb
add
test
jle
loop
ret
mov
mov
leave
scas
movsl
xor
cmp
add
jmp
and
mov
and
sbb
add
add
fsubrp
movsl
addb
jnp
add
add
insl
cmp
inc
xor
in
insb
stos
jno
sbb
mov
add
jae
cld
movb
lock
call
add
testb
xor
leave
lock
into
xor
and
mov
stos
movsl
adc
movsl
mov
add
and
mov
or
dec
add
sub
add
add
mov
mov
ret
jne
repnz
aad
jns
jge
add
mov
cmp
fs
outsl
bound
mov
add
movb
add
push
add
add
cmc
or
add
cmpl
add
push
add
clc
scas
lcall
xor
sti
and
pop
mov
add
movb
add
enter
add
sbb
push
add
add
xor
sub
data16
or
add
mov
or
add
add
or
push
add
mov
add
cmp
pop
dec
mov
scas
pop
add
int3
mov
sub
sti
jmp
mov
mov
hlt
add
dec
cmpsl
mov
imul
mov
shll
loop
add
lods
cmp
add
mov
ljmp
push
add
jle
push
add
sbb
add
lods
jg
add
add
add
imul
adc
adcl
inc
adc
sub
cld
mov
mov
jg
jae
inc
mov
movb
aas
lods
lods
outsl
test
ret
push
sbb
inc
add
test
pop
sbb
fisubrl
push
lods
leave
jb
aaa
jae
cmp
add
push
cmp
clc
and
mov
pop
dec
in
inc
add
adc
add
sbb
mov
inc
xchg
add
testb
in
dec
out
xlat
pop
jo
lods
add
clc
jp
add
mov
dec
cmp
pop
pop
loopne
push
add
mov
rolb
xor
cmp
movsb
add
add
sub
sbb
mov
adc
push
xchg
inc
je
push
add
icebp
orl
stos
popf
pop
lods
test
push
add
scas
xchg
pop
gs
fbstp
add
jbe
mov
sub
push
add
jp
or
add
jg
in
mov
jbe
dec
ljmp
adc
add
adc
or
int3
testl
incb
arpl
movsb
add
add
clc
xor
mov
sbb
inc
aam
add
in
mov
in
imul
ret
add
add
add
sub
add
add
outsb
rcrl
push
add
shll
add
push
pop
xor
hlt
add
add
test
add
jne
out
dec
jb
je
imul
inc
add
sub
mov
loope
add
out
out
cmp
inc
add
sub
test
sub
int
xlat
fistpll
in
pop
rolb
outsl
in
adc
clc
fmul
movb
and
xchg
add
call
jl
fimuls
cs
mov
inc
add
cmp
jb
jmp
add
sub
xchg
add
fs
push
add
inc
add
push
inc
and
inc
add
jae
mov
jle
add
int
cmp
pop
fnstsw
testb
add
ret
jge
aad
rolb
xor
jecxz
jmp
mov
jp
add
ljmp
jbe
test
int3
fdiv
add
data16
add
jge
lock
add
sub
testb
mov
add
fsubs
das
pushf
lods
fwait
inc
scas
inc
xor
int3
jle
jo
mov
cmp
ret
or
jb
push
or
dec
cwtl
icebp
dec
push
mov
or
add
inc
dec
mov
add
xlat
pop
outsb
loop
movsl
testl
adc
mov
jb
lds
lods
mov
sbb
push
and
jge
sbb
mov
popa
pusha
add
add
add
add
add
loope
aas
js
mov
les
cmp
add
add
mov
out
mov
add
or
inc
add
sahf
xorl
orl
add
shrl
mov
add
inc
enter
stos
mov
inc
add
mov
xchg
rolb
add
lods
xchg
add
mov
add
stc
push
dec
cmc
rorl
cmp
out
mov
fisttps
fwait
mov
insl
inc
add
add
add
add
jb
mov
add
add
mov
pop
push
add
add
mov
out
mov
shll
mov
adc
lahf
jg
mov
sub
mov
dec
data16
jge
leave
ljmp
adcl
add
out
bound
mov
psubd
push
sbb
lods
out
lods
fsub
test
fidivs
dec
lcall
pop
mov
mov
adc
rolb
testb
add
or
cs
or
add
add
add
les
jae
pop
pop
jmp
inc
jge
cmp
rolb
jae
add
mov
add
add
cmovne
sub
add
and
mov
out
jmp
add
add
jae
add
add
mov
fmul
or
cmp
mov
adc
shll
lods
sbb
sti
sahf
inc
into
les
xlat
jbe
sbb
jp
and
dec
mov
add
pop
fstps
mov
test
ds
cmc
adc
testb
mov
das
fisttps
add
add
mov
sbb
mov
add
out
cmc
pop
add
mov
nop
add
nop
add
jno
pop
push
jmp
mov
sbb
add
lods
sub
sub
mov
jle
add
popa
data16
sbbl
les
imul
lods
outsl
std
mov
push
add
add
imul
add
cmp
and
idiv
outsb
rolb
in
sub
out
sub
and
add
add
add
out
insb
fistpll
dec
aas
xchg
add
rcrl
cmp
pop
adc
cmc
cli
sbb
in
inc
cmpsl
push
out
insl
adc
jl
xchg
add
sub
add
rolb
add
or
mov
movsb
add
mov
add
add
add
push
icebp
ja
sti
xchg
add
add
add
add
or
add
add
sub
and
push
add
mov
mov
std
aam
dec
mov
aas
popa
mov
mov
xchg
add
dec
push
sbb
add
out
adc
aaa
xchg
cmp
lods
inc
mov
inc
mov
cmpsb
add
das
shrl
push
ds
add
cld
xchg
adc
xor
mov
fisttpl
fstp
sbb
add
shrl
pop
cltd
mov
add
push
add
addb
sub
add
sbb
sub
in
icebp
test
mov
iret
mov
jae
loop
or
sahf
sub
sub
dec
push
add
mov
fldenv
add
add
jle
bound
mov
push
jmp
testb
jae
push
and
mov
fistpll
push
pop
shrl
add
arpl
movsb
add
xchg
add
add
pmaddwd
adc
lds
add
adcl
ljmp
into
into
adc
mov
ljmp
lret
lret
cli
pop
ret
movb
add
dec
notl
add
pop
and
mov
test
out
cmp
add
add
call
gs
jns
add
aam
sahf
jge
das
pop
and
or
pop
dec
testb
xor
and
mov
jecxz
add
add
mov
mov
lahf
outsl
sbb
add
pop
cmp
jb
xchg
inc
add
dec
movsl
cwtl
sbb
in
mov
add
inc
add
or
mov
add
xchg
add
add
add
adc
mov
add
mov
add
mov
dec
out
and
mov
push
add
lods
mov
pop
outsb
rorl
add
adc
loope
mov
js
rolb
repz
xchg
adc
mov
mov
add
jp
es
push
add
add
testb
push
jbe
jae
or
rcl
neg
das
mov
outsl
or
mov
aas
push
add
andl
and
mov
loopne
xchg
mov
add
add
inc
add
and
mov
push
add
add
push
inc
jle
jle
sub
iret
or
aaa
int
add
adc
aam
fdivr
in
push
add
inc
add
push
fwait
push
test
cmp
add
add
xor
aad
pop
and
flds
jmp
cmp
rolb
jp
add
adc
dec
mov
jmp
aam
xchg
mov
pushf
inc
test
sarl
push
jge
fwait
call
add
out
lods
cld
xchg
xor
jno
add
add
xchg
faddl
pop
xor
inc
add
call
mov
add
jne
jbe
push
add
lea
mov
pusha
add
fwait
dec
orl
addb
pop
mov
addl
sbb
add
and
daa
cmp
lock
ss
aaa
loopne
push
add
jne
cs
xor
popf
mov
add
add
add
fsubl
add
add
mov
pushf
int
xchg
add
outsb
addr16
add
jp
cwtl
movsb
add
mov
lret
add
mov
mov
add
pop
gs
add
add
pop
xchg
ljmp
dec
fmulp
in
daa
jnp
cwtl
push
add
out
les
test
fisubrl
out
fdivrp
sti
mov
xchg
mov
add
ds
lcall
in
imul
add
mov
aaa
sbb
inc
mov
mov
in
xchg
jp
jne
add
sub
nop
add
mov
adc
add
fs
add
ret
sti
jno
pop
pop
push
insl
cmp
add
or
cmc
lods
adc
cmpsb
add
leave
loopne
adcl
add
addb
add
xchg
add
add
scas
cmp
dec
enter
add
add
movb
std
icebp
and
rolb
add
pop
fiadds
mov
mov
pop
pusha
add
add
cld
loop
lcall
js
addb
mov
xchg
ljmp
pop
jge
or
sbb
pop
cltd
xchg
add
sub
add
xlat
and
scas
add
jg
sahf
and
sub
dec
cmp
fmuls
add
jmp
push
or
sbb
mov
stc
movb
ja
loopne
xor
add
test
push
add
add
ds
adc
inc
add
cli
ret
lds
add
loop
shll
add
add
sub
mov
add
sbb
add
test
adcl
jmp
cmp
add
cltd
xor
sub
add
add
add
dec
and
mov
add
jl
add
shll
cmp
js
jge
repnz
sub
mov
lock
add
push
movb
add
scas
sub
dec
jmp
cmp
pop
add
adcl
sbb
add
addr16
add
pop
mov
add
or
imul
add
lret
sbbl
notl
mov
dec
xchg
add
add
add
scas
aas
mov
movsb
add
mov
mov
add
icebp
fsubs
in
sub
add
bound
mov
cld
jae
sbb
add
add
pop
add
add
add
out
xchg
pusha
add
add
push
add
push
sbb
popf
push
add
and
mov
add
adc
fldl2t
jb
les
mov
add
repz
into
test
test
cmpps
lods
lods
push
add
out
lds
or
add
lods
and
das
add
add
push
xor
rolb
add
jl
cmpsb
add
movb
inc
stos
xchg
mov
icebp
mov
or
xchg
add
add
mov
add
scas
push
add
lret
cli
lcall
inc
add
pop
insb
je
clc
pop
mov
testb
add
ja
popf
pop
aas
push
pop
pushf
add
mov
lods
pop
push
jl
jecxz
add
mov
imul
pop
cmp
int
dec
and
mov
outsl
mov
add
add
mov
and
add
mov
add
add
pop
fwait
cmpsb
add
add
inc
rolb
mov
lret
add
stos
scas
ds
sbb
sbb
adc
mov
and
mov
add
add
stos
incb
push
or
mov
rolb
push
fisttpll
xor
dec
mov
inc
add
pusha
add
stos
rorl
jmp
add
add
mov
and
aas
and
add
add
fsubl
and
pop
xor
pop
cmp
dec
lods
call
popf
mov
add
jl
sbb
add
test
rolb
dec
iret
add
rolb
js
jno
add
inc
cmp
mov
add
mov
mov
clc
rolb
pop
and
dec
inc
add
add
add
mov
cwtl
cli
rolb
xchg
add
dec
rolb
scas
and
add
pop
push
das
addl
and
mov
cmc
ret
mov
fcmove
mov
xchg
dec
and
mov
test
pop
ret
xor
cwtl
cmp
add
jb
add
fstl
add
std
xor
addr16
add
or
sub
ljmp
stos
or
lahf
fnsave
xor
jecxz
add
fildl
jl
add
add
add
scas
aam
imul
popa
mov
fwait
cmp
mov
add
add
add
push
add
mov
pop
js
add
add
fscale
inc
sub
or
add
dec
inc
add
add
sub
mov
pop
dec
addb
inc
add
mov
test
push
add
xchg
add
add
out
addb
cmc
mov
outsl
pushf
hlt
add
add
push
call
xchg
ret
pop
sti
inc
arpl
test
jmp
mov
lds
repnz
add
sub
add
cmp
pop
mov
pop
clc
xor
push
stos
adc
mov
mov
add
add
lret
mov
and
mov
add
inc
add
add
xchg
and
movl
movsl
cmp
and
mov
lods
adc
pusha
add
fdivrl
pop
lea
add
add
add
or
add
les
aad
in
aaa
adc
xor
jnp
pop
mov
xchg
push
sub
xor
pop
cltd
add
or
push
in
mov
stc
pop
mov
jbe
mov
add
add
mov
mov
leave
dec
jmp
jecxz
inc
sub
shr
pop
jmp
add
add
add
add
cltd
dec
mov
jecxz
add
mov
icebp
lds
xchg
add
mov
lods
or
ja
add
mov
add
add
fsubrp
lahf
test
mov
add
add
fwait
push
add
popa
push
push
test
popa
cmp
data16
xor
aas
dec
pop
aas
cmp
mov
int3
dec
aad
call
mov
cltd
movb
fisubrl
hlt
add
add
add
jge
jb
dec
rcll
xchg
sub
jbe
cwtl
into
addb
gs
movsb
add
mov
loope
inc
jmp
std
std
xor
mov
lods
add
mov
add
pop
mull
add
dec
arpl
xor
pop
ljmp
push
repnz
mov
aam
cmp
mov
leave
or
lds
add
add
adc
lods
sbb
add
add
aas
push
add
add
add
dec
lods
cli
enter
mov
enter
repz
xchg
rolb
dec
outsb
dec
sti
mov
rolb
fstpt
add
mov
jnp
mov
pop
mov
mov
lahf
add
mov
cmp
rolb
push
sbb
test
add
in
call
pop
fiaddl
loope
lret
leave
lret
popa
sbb
mov
pop
ret
in
pop
imul
xchg
repnz
add
stos
mov
stos
add
sti
shll
xchg
add
add
xchg
add
bound
mov
mov
mov
and
mov
mov
pop
iret
mov
add
mov
add
adc
add
mov
inc
add
int
pop
outsb
sub
add
add
popf
cmc
add
repnz
add
fcmovnb
clc
adc
add
leave
mov
rcr
les
add
pop
imul
aad
insb
leave
xor
add
or
xor
add
addr16
inc
add
pushf
mov
mov
lds
mov
jl
push
add
add
sub
std
bound
mov
cmc
inc
adc
add
xor
mov
push
adc
push
add
roll
mov
testl
loopne
ds
lea
int
add
add
insl
sub
mov
add
add
in
testl
scas
aas
dec
adc
inc
das
int
sbb
mov
repnz
add
and
popf
mov
cmpsl
dec
js
test
fsubs
sbb
xchg
add
mov
add
add
add
jmp
add
jp
cmp
add
push
add
out
lret
out
mov
cmp
lds
add
jge
daa
movsl
push
add
clc
daa
add
mov
and
add
les
add
inc
out
pusha
add
add
sub
adc
mov
add
loopne,pt
adc
rcll
add
mov
and
in
and
pusha
add
add
shrl
loope
add
jb
rolb
and
mov
add
adc
push
add
orl
add
inc
add
test
mov
leave
cld
data16
imull
mov
insb
xchg
mov
mov
rolb
add
aam
add
inc
add
jmp
add
jne
stc
fadds
mov
add
enter
cmpsl
out
fs
push
jl
add
or
xor
scas
aaa
xchg
add
push
aam
mov
add
push
add
xchg
add
scas
inc
cmp
or
in
pop
jo
testb
lock
jle
inc
add
pop
insb
xlat
jnp
add
add
mov
add
add
sub
sbb
jl
add
add
add
rolb
bsf
adc
push
add
mov
push
xchg
or
std
ret
pop
repnz
les
jmp
xlat
inc
pop
xchg
add
scas
push
add
add
rcrl
add
mov
into
mov
mov
mov
mov
push
add
cmpsb
add
add
add
les
insl
arpl
add
add
mov
insl
pop
stos
fisttpl
pop
cmp
loopne
push
add
gs
stc
pop
ss
mov
push
fchs
add
in
shrl
jb
out
ficompl
fstpl
rolb
int3
shrl
cmp
add
pusha
add
jle
mov
into
mov
push
mov
mov
ljmp
xchg
add
mov
add
inc
add
mov
test
mov
xor
stos
cmp
fsubr
fidivrl
loop
sbb
add
insb
dec
push
add
xchg
add
lods
and
sbb
add
xchg
push
add
sub
and
mov
xor
jl
or
add
fildl
bound
mov
cmp
hlt
add
push
xlat
out
or
sub
mov
in
in
psubusb
add
and
mov
add
jns
xchg
sbb
mov
cmp
add
je
cmp
adc
rorl
in
add
mov
or
push
add
outsb
add
mov
enter
jl
push
enter
add
aaa
cmp
add
loopne
stos
js
add
add
add
lods
add
add
add
jns
adc
sbb
xor
add
dec
push
add
dec
adc
sbb
or
push
add
addr16
xor
add
xchg
add
add
mov
sarl
cmp
mull
mov
lret
add
add
out
inc
fcomip
add
dec
daa
jb
lods
out
add
pop
hlt
add
je
jle
pop
sub
and
mov
xchg
sub
or
arpl
shll
add
sti
fnsave
bound
mov
rolb
into
mov
insb
xchg
add
add
outsl
sub
add
xchg
aad
add
push
lret
inc
add
xchg
add
add
clc
in
mov
sub
mov
jno
lret
xchg
pop
mov
or
add
mov
push
add
mov
mov
fdivrs
adc
add
or
add
add
addb
pop
insl
or
push
and
xchg
add
imul
dec
add
ret
pop
add
mov
test
sti
xchg
pop
sub
data16
in
jb
push
add
mov
jns
add
inc
sbb
sub
add
add
jns
fcomps
lods
sbb
xchg
and
mov
fwait
daa
in
add
jmp
add
aaa
xor
mov
pusha
add
adc
add
dec
mov
fwait
push
add
mov
xor
in
or
sub
cmp
cltd
push
nop
add
add
add
aaa
jno
add
daa
cmp
ja
out
lret
inc
add
enter
add
rolb
sbb
pop
das
inc
add
add
cmp
add
xchg
inc
scas
inc
add
add
add
add
pop
dec
adc
and
rcrl
jno
and
mov
add
out
outsb
ffree
add
xchg
cltd
jb
lret
rcll
ret
add
jno
cvtps2pd
cltd
sub
fistl
mov
add
add
add
mov
dec
jnp
add
adc
push
add
push
push
add
mov
inc
add
add
cmc
cmp
mov
mov
movsb
add
or
add
and
mov
add
add
and
popa
add
mov
and
mov
add
push
add
stos
stos
pop
in
cmp
add
cmp
data16
add
cwtl
imul
lods
addl
mov
xor
cmc
jno
ljmp
scas
pop
movsb
add
mov
data16
mov
ja
add
iret
sub
sbb
mov
xchg
add
pop
testl
pop
aaa
and
movsb
add
ficomps
xchg
repnz
push
add
sub
add
in
mov
and
mov
pop
adc
out
call
cmc
mov
push
add
sbb
imul
sub
data16
scas
add
cli
ja
imul
mov
mov
bound
mov
add
add
mov
add
sarl
mov
std
ljmp
add
mov
imul
xor
jmp
popf
jno
arpl
add
add
cwtl
movsl
cmc
add
push
add
movsb
add
add
loopne
add
mov
lret
jb
inc
xchg
add
add
add
cmp
cli
mov
pop
cmp
dec
mov
mov
add
pop
nop
add
adc
add
jo
xor
sub
punpcklbw
mov
dec
inc
iret
cmp
lahf
orl
lahf
push
add
mov
int
add
mov
push
add
sti
xchg
add
add
fisttps
add
mov
jae
dec
loopne
sbb
addb
add
xor
cmp
mov
add
aaa
jb
insl
repnz
adc
addr16
sbb
jp
lret
push
data16
aaa
jbe
xor
mov
push
sub
mov
popa
ficompl
add
pop
fstpl
add
sbb
stos
rolb
jnp
add
arpl
lret
push
enter
jecxz
mov
rol
add
add
loopne
aaa
pop
or
add
fisubs
sub
loopne
xchg
add
pushf
addb
in
jg
mov
rolb
push
or
jbe
mov
add
push
jmp
inc
add
mov
push
add
xlat
roll
add
add
ret
or
add
ds
xchg
add
loop
lea
in
rolb
or
mov
ja
add
push
loope
dec
cmpsb
add
add
add
rorl
addb
pop
sub
mov
ret
sub
mov
in
cmp
mov
adc
ja
les
sbb
add
add
push
mov
add
in
mov
addb
add
ljmp
pusha
add
cmp
cs
roll
mov
div
push
js
popa
cld
jge
mov
inc
add
bound
mov
push
add
push
add
lea
xlat
inc
add
addb
adc
xor
push
add
pslld
testb
int3
dec
sub
add
rolb
pop
add
mov
sbb
rolb
mov
std
push
pop
or
movsl
add
mov
add
jb
push
add
add
add
das
ja
fsubr
jmp
bound
mov
sub
push
lret
lods
repz
cmpsl
roll
and
in
dec
add
popa
sub
pop
aaa
pushf
lret
mov
push
mov
pop
xchg
add
push
xlat
pop
data16
out
mov
push
ret
add
out
mov
out
or
xor
mov
scas
imul
int
add
add
fdivp
push
in
aaa
sbb
into
rol
add
mov
xor
add
jle
stc
je
das
push
add
add
jbe
mov
rcll
bound
mov
out
xchg
and
mov
lcall
add
lods
mov
push
ret
jmp
add
add
sbb
add
lods
gs
jl
and
mov
xchg
xchg
adc
cmp
fistpll
add
cmc
adc
adc
pushf
cmc
add
add
add
add
add
jo
cli
loop
out
mov
add
movsb
add
adc
xor
addb
ds
cmc
jle
add
mov
outsl
push
out
add
mov
jb
sub
add
mov
push
add
rolb
jl
add
add
add
mov
xor
jle
add
jge
jg
add
add
inc
add
add
int3
popl
jnp
and
add
sbb
add
push
outsb
inc
add
call
sti
out
btr
js
add
inc
lds
test
cmc
pop
jbe
bound
mov
jbe
lea
jge
sbb
fdivr
jle
cld
sar
cmp
pop
xchg
and
testb
aad
testb
sbb
pop
stos
mov
add
dec
xlat
ret
incb
rolb
rolb
add
bound
mov
pop
mov
fsubrs
mov
popf
or
sub
jnp
add
mov
lods
and
mov
add
fstpt
rcrl
in
jecxz
add
mov
add
mov
sub
push
add
outsb
jb
rolb
jno
and
mov
add
add
mov
out
jne
xor
xor
mov
sub
mov
add
pop
or
mov
add
dec
jmp
add
add
stos
loope
sbb
sbb
sub
cs
add
mov
xchg
sub
add
lret
add
aas
enter
pop
repnz
pop
lahf
pop
or
adc
dec
pushf
or
movsl
repnz
outsb
addr16
mov
sub
inc
pop
ja
add
shll
pop
sbb
popf
neg
popa
add
ja
movsb
add
jnp
add
cmpsb
add
pop
cmp
jo
push
movb
je
or
cs
add
testb
jnp
adc
add
movb
add
test
dec
dec
pop
shll
scas
cld
add
mov
mov
sbbl
jl
add
aad
testb
cltd
mov
add
cmp
sub
addb
push
jmp
jne
jnp
movsl
adc
gs
or
clc
lret
mov
loope
cmp
jecxz
inc
add
mov
stos
pop
xor
or
in
mul
add
xchg
aas
xchg
addr16
addb
cmp
adc
cmpsb
add
cld
xor
mov
fsubs
add
add
push
add
lods
popa
addb
lahf
mov
aaa
pushf
icebp
sahf
mov
add
stos
and
xor
mov
xchg
ret
add
push
jb
ret
add
mov
test
xor
dec
pop
inc
call
out
mov
mov
cmp
aaa
xchg
cmp
psadbw
lods
mov
xor
add
add
mov
fidivl
rolb
mov
mov
mov
add
iret
rolb
cmp
add
inc
add
add
xor
stos
inc
sub
add
xchg
cmp
ret
xlat
ja
add
add
int
inc
add
iret
popa
xchg
add
push
add
clc
pop
imul
add
jl
push
add
out
mov
iret
add
sub
push
add
add
mov
daa
loopne
je
mov
add
or
jecxz
push
xchg
add
add
add
sbb
cmc
sub
jae
int
shr
mov
sub
repnz
add
add
and
dec
add
add
jmp
sbb
ja
lods
jns
xchg
addr16
icebp
pop
and
fiaddl
test
add
inc
add
dec
je
jle
add
cltd
dec
add
scas
outsl
shll
push
out
adc
push
add
mov
add
add
lcall
add
leave
aad
hlt
add
imul
iret
hlt
add
add
test
add
add
rcr
mov
sbb
pop
imul
adc
cmp
mov
jnp
test
mov
cld
adc
jecxz
insb
mov
jnp
dec
xchg
xor
lods
add
mov
pop
pusha
add
mov
addb
or
xchg
test
icebp
out
xchg
int3
cltd
jb
enter
cmp
add
pop
add
insb
std
add
cs
xor
add
inc
add
adc
pop
fwait
inc
add
cmpsl
cmpsl
adc
pop
aaa
stc
mov
lods
test
std
sub
xchg
mov
adc
fwait
rcll
in
lret
into
push
mov
add
ds
jg
pop
jno
cwtl
pop
xor
inc
cmp
jle
add
popf
sub
sub
pop
movb
into
in
jno
pusha
add
add
insb
sbb
fimuls
mov
inc
add
push
add
add
cmp
lea
xor
cmp
add
in
test
adc
pop
add
repnz
mov
aad
rolb
leave
jb
addb
inc
add
js
repz
fmulp
int3
popa
les
les
and
mov
enter
jae
add
popa
inc
add
add
add
or
pop
jne
xchg
add
push
push
add
test
add
xchg
jge
adc
add
lock
dec
inc
test
mov
arpl
mov
leave
xchg
mov
ds
fdivl
push
out
pop
cmpl
adc
xor
popl
sarl
xor
fnstenv
pop
outsb
ljmp
adc
jg
je
dec
sub
jbe
sub
jo
cmp
push
add
push
add
lret
pushf
mov
imul
loop
int3
data16
add
add
mov
out
jl
push
add
pop
fadd
idivl
es
add
pop
ficoms
lahf
out
nop
add
adc
sub
jo
and
jnp
add
ja
stos
ret
add
add
mov
mov
mov
and
cli
mov
sub
sbb
add
loop
or
add
add
add
add
add
mov
mov
data16
testb
dec
sbb
inc
insl
push
add
add
cmp
xlat
jnp
mov
add
push
push
add
sub
mov
push
add
add
mov
inc
les
or
pop
adc
and
mov
movsl
dec
mov
cld
cmp
add
add
dec
cmp
inc
add
jl
jg
mov
xchg
das
add
add
adc
add
add
add
add
ret
add
xor
fistpl
xchg
loope
add
add
add
movb
idivl
and
mov
je
lock
and
and
dec
outsb
xchg
add
fimull
cmpsl
adc
in
rcrl
lahf
dec
inc
add
inc
adc
les
push
add
add
mov
add
or
add
add
leave
das
mov
xchg
add
add
add
add
add
pop
mov
sbb
jae
loope
mov
sub
jno
xchg
stos
xchg
jnp
rcll
lcall
pushf
fsubl
add
add
push
data16
in
xchg
add
mov
add
xchg
mov
sbb
fcoms
jmp
out
int
or
add
add
pop
add
add
add
data16
add
test
iret
inc
add
mov
stos
push
add
mov
add
add
add
xor
mov
imul
mov
and
add
add
push
add
ret
xchg
out
mov
add
add
jno
push
repnz
mov
stos
sub
outsb
pop
inc
outsb
mov
add
mov
xchg
add
add
les
add
add
add
add
sub
es
or
cwtl
xchg
dec
addb
mov
add
add
cmp
mov
movl
rolb
xor
daa
mov
rolb
add
add
fsubl
fldt
insb
repnz
lods
int
lods
xchg
aaa
jne
add
in
mov
sahf
jae
cwtl
cmpl
lfs
ret
movsl
sub
scas
ss
fmuls
sbb
add
add
cmp
fildl
and
lock
add
sub
sbb
mov
add
mov
and
jmp
sbb
add
mov
xor
insb
inc
add
add
lods
xor
add
pop
inc
add
movsl
jnp
add
add
pop
add
add
ljmp
sub
mov
xor
jp
out
or
mov
add
push
add
add
add
add
push
add
mov
jne
arpl
pop
mov
or
scas
cmpsl
pop
loop
xor
push
jbe
or
pushf
xor
and
mov
add
out
les
fwait
or
int
mov
or
add
add
add
loope
add
mov
add
inc
add
inc
add
add
aad
lods
add
mov
add
test
push
loop
cmp
addb
cmp
jp
push
add
jbe
mov
cltd
lods
xor
inc
add
dec
dec
xlat
lods
call
add
add
add
out
add
cltd
sbb
rolb
ucomiss
dec
scas
add
add
sahf
gs
mov
and
outsl
sub
cmp
add
add
fiaddl
cmc
pop
data16
xchg
lds
mov
add
fs
add
cmpsb
add
jbe
ljmp
add
add
ljmp
loop
out
mov
push
arpl
outsb
repz
aam
icebp
push
add
add
mov
addb
das
scas
or
and
jo
add
mov
fldl
aaa
xor
mov
test
add
data16
add
lea
jns
add
dec
push
add
push
add
fsubl
add
add
sbb
mov
xchg
add
adc
add
and
pop
inc
dec
adc
push
mov
mov
fldt
cmc
cmp
add
shl
xor
add
add
add
stc
and
mov
hlt
add
js
add
and
mov
call
add
mov
mov
adc
gs
jne
mov
les
mov
add
in
subl
mov
sbb
add
push
add
push
add
leave
mov
outsb
rolb
add
sbb
inc
add
outsl
inc
add
sbb
adc
add
mov
sbb
mov
add
xchg
addr16
xchg
aas
stos
stos
out
adc
jp
push
add
or
pop
fsts
or
pop
add
dec
cmpsl
lock
mov
push
add
into
popf
cmp
sbb
add
add
movsl
adc
adc
std
push
setne
add
das
call
mov
pop
testl
jnp
int3
fadd
lcall
cmc
ret
lahf
sbb
and
mov
int
outsl
xchg
add
push
daa
mov
mov
and
mov
inc
add
stos
movsb
add
in
xchg
lret
mov
add
add
add
add
sbb
add
cli
mov
bound
mov
add
add
pop
cmp
mov
pop
test
add
je
loop
insb
or
test
mov
add
add
add
sub
jne
aas
adc
ds
or
imul
mov
inc
add
xor
pop
incl
mov
and
fsubrp
std
imul
pop
in
push
sub
xor
out
mov
addb
jns
enter
stos
out
rolb
movsl
outsl
inc
enter
sub
mov
cmp
add
or
and
mov
movsb
add
add
arpl
pushf
mov
and
add
add
cli
mov
sub
outsl
and
dec
gs
adc
adc
fisubs
add
mov
push
loop
fnstcw
add
gs
sar
add
imul
ljmp
dec
addb
mov
inc
mov
xchg
mov
dec
test
add
add
and
fstpl
scas
jmp
or
pusha
add
mov
dec
jno
movb
inc
add
add
add
mov
add
mov
xchg
add
rolb
lcall
add
add
lcall
cmc
xlat
jne
addr16
dec
dec
pop
int3
push
add
iret
addb
pop
push
dec
dec
jnp
push
add
fimuls
adc
add
add
ret
add
adc
and
mov
and
int
add
adc
xor
push
push
add
add
add
lods
or
mov
cmc
dec
das
mov
mov
add
in
and
mov
shll
jle
push
out
addb
push
adc
shll
jbe
iret
and
adc
mov
jno
jo
xchg
incb
mull
xchg
movsl
movsb
add
add
insb
lahf
mov
push
dec
mov
add
mov
and
loop
lret
aad
adc
out
sahf
jae
iret
xchg
mov
mov
mov
push
add
les
cmpsb
add
add
cmpsb
add
or
add
mov
jmp
addb
add
add
mov
add
add
push
xchg
add
sbb
pusha
add
pop
inc
aaa
adc
mov
sbb
xchg
add
push
add
or
sbb
add
call
jge
fcompl
dec
xchg
popf
xchg
add
add
aad
jmp
lret
xchg
mov
jno
filds
push
sub
lock
add
mov
add
imul
add
push
add
out
addb
add
add
add
jns
add
mov
add
cld
push
imul
mov
inc
jle
add
pusha
add
add
xchg
jo
movsb
add
cmp
movb
add
add
add
push
add
mov
hlt
add
jne
dec
inc
add
add
pop
add
gs
add
add
jnp
or
sti
sbb
add
jo
sbb
pusha
add
test
inc
jno
dec
mov
add
add
mov
jbe
enter
pop
jno
xchg
arpl
add
add
mov
add
lcall
add
add
inc
imul
sti
jl
mov
mov
add
es
and
add
mov
int
xchg
scas
mov
sbb
mov
xor
add
lods
sub
dec
adc
out
int
jne
add
test
or
popf
int3
popa
add
ret
add
cs
mov
xor
ficoml
popa
pop
mov
push
cmc
repz
add
add
cld
rolb
adc
and
mov
sub
push
add
add
mov
adc
jns
add
mov
add
in
jb
add
add
mov
add
xchg
es
or
gs
lds
or
insb
pop
pop
inc
add
add
mov
mov
add
push
push
js
push
add
add
popf
icebp
pop
and
imul
sahf
add
pop
outsb
add
add
add
xchg
lods
push
and
lahf
pop
mov
xchg
dec
and
cmp
add
dec
shll
mov
sbb
xor
push
xlat
push
add
or
ljmp
mov
add
mov
les
rolb
outsl
xchg
add
rcll
add
bound
mov
add
mov
outsl
xor
in
jne
pop
addb
data16
test
add
das
imul
push
inc
add
mov
cwtl
sub
pop
adc
es
and
mov
add
add
scas
push
or
add
add
addb
add
add
add
add
add
mov
mov
clc
sbb
add
mov
cmc
sahf
mov
inc
out
ret
dec
rolb
or
add
push
add
ja
addb
jmp
xchg
cmp
add
cmp
insl
aam
clc
xlat
jle
add
jae
int
cwtl
xor
add
add
sub
add
add
add
outsb
mov
mov
mov
add
lcall
icebp
pop
add
add
dec
add
out
addl
add
add
add
and
sub
xor
mov
out
negl
cmpsb
add
inc
inc
pop
or
mov
dec
cmpl
add
into
mov
push
add
pop
or
fwait
mov
jle
cmc
dec
or
push
sbb
sub
loopne
lcall
add
stc
in
ljmp
in
hlt
add
sbb
add
add
fstps
jmp
push
add
add
sbb
cmp
mov
mov
push
add
or
or
cmpsl
testb
icebp
jne
adc
mov
cmp
pop
jge
sbb
outsl
js
jbe
mov
movsl
mov
dec
pusha
add
inc
mov
add
add
pop
mov
ffreep
add
int3
pop
aad
mov
arpl
mov
adc
dec
repnz
add
aas
adc
add
popa
and
mov
xchg
popf
out
std
cmp
rol
add
outsb
stos
pop
scas
mov
jns
inc
add
insb
push
mov
xor
push
add
mov
shrl
out
dec
bound
mov
add
fists
push
jns
or
std
gs
mov
jl
add
add
add
iret
mov
inc
xor
pop
lahf
mov
test
and
mov
clc
xor
push
lea
mov
add
int
inc
add
pushf
mov
out
sub
into
loopne
mov
fwait
in
jno
add
add
add
add
push
add
pusha
add
add
and
insb
or
in
add
mov
sbb
add
add
add
add
mov
and
cs
pop
add
mov
call
add
mov
data16
add
and
mov
outsl
xor
dec
mov
push
jp
add
dec
push
mov
dec
aaa
cmpsl
and
mov
and
dec
sub
mov
fmull
inc
adc
or
push
add
out
xchg
notl
mov
mov
sti
jmp
in
ds
add
dec
je
sbb
test
mov
jmp
pop
arpl
add
or
jo
sbb
shll
add
add
add
add
or
movsb
add
bound
mov
xchg
add
and
movb
aaa
jns,pn
pop
inc
push
jmp
and
mov
mov
fstps
jmp
in
dec
pop
pop
pop
dec
dec
push
outsb
pop
gs
or
add
push
push
mov
inc
add
lahf
int3
mov
mov
inc
daa
add
mov
adc
pop
add
adc
and
rolb
and
sahf
fcmovne
jmp
sbb
or
daa
dec
sbb
fidivs
repnz
cmc
fwait
and
add
add
add
add
mov
data16
lock
add
add
pusha
add
sahf
mov
ficompl
mov
add
jge
add
shrl
add
out
aam
ficoms
add
add
lods
and
push
pop
jne
mov
xlat
mov
lods
test
imul
add
test
popa
lahf
pop
jbe
repnz
xlat
xorl
add
rolb
mov
xor
mov
lret
add
or
mov
add
fldt
add
mov
or
sub
add
add
int3
arpl
call
add
addb
ljmp
add
mov
jl
jnp
xchg
add
mov
pusha
add
add
add
fcoml
fdivrl
cltd
or
adc
jbe
pop
mov
mov
enter
add
dec
push
fiaddl
addb
pop
xlat
out
mov
adc
add
aam
mov
dec
xchg
push
xlat
xchg
loope
lcall
add
add
dec
jns
enter
push
add
imul
pop
cli
mov
testb
dec
imull
add
xchg
out
lret
stos
bswap
loope
or
add
sub
or
fimull
stos
xchg
add
dec
or
bound
mov
insb
ljmp
imul
mov
add
clc
daa
xor
stos
dec
jecxz
add
cli
jecxz
sbb
adc
lock
cld
test
mov
mov
mov
loope
add
dec
fsin
inc
addb
cmp
aas
dec
xchg
add
rolb
aad
add
add
mov
add
mov
andl
scas
or
ds
add
mov
add
sub
sbb
cli
movsb
add
add
mov
out
jne
add
add
add
mov
ja
in
adc
xor
cmpsl
xlat
push
add
sbb
hlt
add
add
js
leave
daa
and
aam
out
jge
jae
jecxz
add
es
add
add
push
add
mov
xchg
add
add
add
jmp
xorl
inc
jnp
sbb
xchg
add
add
stos
adc
add
add
in
data16
or
cmpsb
add
lods
lret
and
test
incb
add
movb
jg
dec
outsl
and
mov
add
xor
mov
addb
add
xlat
sbb
fnstsw
stos
or
lcall
fwait
dec
outsb
mov
sub
cli
mov
add
out
xchg
add
pop
rcrl
addb
mov
cmp
icebp
mov
sti
xor
lds
test
fcoms
push
sbb
or
sbbl
add
jno
xorl
and
mov
xor
lods
dec
pop
lds
dec
mov
inc
xor
nop
add
test
insb
xchg
add
add
lock
loopne
daa
repz
ficoms
dec
sbb
add
add
mov
add
jne
add
add
test
and
xchg
add
rolb
movsl
mov
mov
jne
add
add
mov
add
jae
sub
in
rolb
outsl
test
mov
xor
add
gs
or
test
daa
jle
mov
cmp
add
add
jl
aam
sbb
or
add
jbe
push
and
mov
add
hlt
add
dec
lret
add
std
js
add
fwait
aam
cmp
push
or
or
add
add
add
lahf
mov
dec
scas
cli
sbb
lcall
aas
test
addr16
loop
add
mov
mov
lock
in
out
test
add
xchg
add
fnstcw
add
mov
les
mov
dec
sar
push
add
test
fisubl
test
mov
inc
push
add
mov
and
jno
xchg
add
in
and
mov
push
or
cmp
add
add
pop
insb
or
add
pop
jecxz
cmpsb
add
add
push
sbb
cmpsb
add
rep
xor
mov
pop
addb
loope
loope
fidivrl
add
out
leave
xchg
fstpl
jp
loope
test
repz
fs
pop
enter
test
jmp
add
scas
cld
lods
lret
sahf
mov
and
adc
adc
aaa
je
repnz
add
add
add
xchg
add
and
push
dec
shll
add
clc
jecxz
and
mov
or
pop
outsl
shl
out
mov
add
mov
je
aas
pop
test
add
add
add
test
fs
or
inc
add
mov
add
xor
cmp
mov
add
jmp
pop
mov
inc
inc
arpl
mov
cld
adc
mov
movsb
add
adc
add
sub
mov
add
rolb
out
lock
xchg
add
popa
data16
lret
sbb
repnz
dec
and
mov
dec
mov
add
pop
addb
jno
xchg
inc
xchg
add
sub
std
fbld
add
sbb
sub
cmp
scas
jns
hlt
add
mov
add
or
add
add
out
data16
adc
aas
jo
aaa
incb
push
bound
mov
add
pop
pop
jecxz
sub
js
mov
mov
jnp
add
add
dec
in
cmp
imul
add
out
aad
add
xor
add
cld
cmp
icebp
jecxz
add
add
testb
dec
inc
das
cmpsl
mov
add
movb
jnp
js
sarl
push
xchg
add
jg
lock
add
mov
fisttpl
add
test
sbb
add
jp
adc
loop
cld
push
stos
sub
mov
sbb
jle
push
pop
add
in
sub
sub
and
cmpl
add
add
mov
add
mov
jno
add
mov
add
add
add
add
lock
dec
jecxz
add
sti
push
add
inc
add
outsl
int3
adc
scas
xchg
add
aam
dec
cmp
inc
add
daa
dec
sbb
out
mov
pop
lret
jnp
add
xor
add
jge
add
add
mov
cltd
sub
lahf
or
add
test
add
js
add
iret
out
jl
pusha
add
rcl
cmp
jne
add
add
inc
mov
movb
jg
add
scas
fisubrl
pop
rcrl
mov
out
xchg
or
add
and
call
push
incb
add
add
pop
aas
mov
jp
add
add
and
mov
jne
cld
jae
int3
add
mov
mov
test
dec
jmp
push
push
add
add
mov
ds
jge
add
add
add
mov
add
cld
test
mov
inc
add
push
add
addb
mov
sub
test
mov
mov
rolb
imul
add
mov
mov
inc
add
add
add
jns
add
add
and
dec
aas
xchg
xor
add
fiadds
add
jp
add
addb
push
sub
or
leave
out
out
xchg
add
nop
add
mov
add
add
jle
mov
xchg
test
mov
add
push
jnp
jno
in
mov
or
loope
add
xor
fcmovnbe
cmp
push
mov
adc
rolb
add
xor
lods
dec
add
loop
dec
ljmp
adc
and
mov
add
fiadds
mov
addb
push
fistl
lret
mov
add
lret
scas
sbb
add
add
add
mov
add
adc
movsl
std
inc
pushf
rolb
sub
rolb
jbe
and
mov
add
dec
sarl
inc
add
add
sub
add
jne
xchg
add
add
mov
movsl
or
repnz
lock
mov
loopne
rcll
pop
sub
add
sahf
jmp
pop
out
inc
dec
data16
ds
dec
sarl
xchg
or
dec
aaa
lahf
imul
fdivs
cmp
insl
fimull
sbb
cli
push
aam
dec
jmp
xchg
mov
test
add
dec
jecxz
in
jge
mov
add
add
add
jae
or
ds
lods
cmpsl
stos
ret
sub
jne
add
mov
sub
add
stos
pop
or
sub
mov
insl
pop
lods
mov
add
mov
lods
inc
jo
mov
ret
add
pusha
add
test
clc
call
cmpsb
add
add
jecxz
add
cmp
cltd
into
sub
add
leave
mov
mov
xchg
mov
jae
jmp
or
mov
jno
notl
pop
or
movntps
push
cmp
sub
inc
lods
cmp
xchg
lods
sbb
add
jle
jbe
xchg
mov
jne
testb
movb
ljmp
inc
push
lcall
movsb
add
mov
add
add
mov
lahf
inc
cmpsl
loope
pop
incb
add
add
add
add
stc
xchg
add
add
mov
push
add
mov
add
outsb
js
inc
int
aas
adc
xchg
add
mov
push
add
aaa
iret
add
aam
outsb
hlt
add
add
jno
and
cwtl
out
add
addb
mov
mov
inc
xchg
add
mov
xchg
add
rolb
scas
out
testb
push
add
enter
sub
mov
mov
sbb
movsb
add
cmp
faddl
mov
jle
fiaddl
and
fistpl
add
dec
or
add
ljmp
add
jns
xlat
hlt
add
out
sub
cmp
inc
addr16
sub
add
aad
add
add
push
add
bound
mov
out
repz
add
clc
inc
movsb
add
add
fsubs
add
sbbl
adc
add
stos
inc
add
dec
inc
add
cltd
hlt
add
or
dec
movsb
add
add
add
add
or
xor
jg
cmp
in
jmp
les
add
testb
rolb
cmp
jnp
mov
das
or
add
ret
sahf
test
fildll
mov
fcompl
out
scas
cmc
jb
dec
mov
add
insb
dec
mov
adc
add
push
add
add
add
pop
inc
mov
pushf
jb
sbb
add
and
dec
xor
adc
mov
sub
pop
fildl
add
jno
add
sbb
push
add
xor
add
mov
add
lret
rolb
add
add
pop
add
lcall
sahf
add
xchg
in
icebp
jne
add
jno
push
mov
cmp
add
js
add
dec
test
lret
mov
mov
movsl
rolb
mov
cmpsl
mov
add
mov
add
xor
sbb
add
cli
rolb
daa
push
fs
add
les
mov
add
mov
add
add
mov
jnp
cltd
bound
mov
lret
mov
xchg
mov
mov
inc
add
mov
cmp
pop
jae
lods
add
add
insl
sub
add
lock
sbb
or
movb
add
das
test
and
and
mov
lock
mov
cmp
outsb
scas
mov
push
add
mov
push
shll
mov
sub
xchg
add
add
push
add
mov
add
add
cltd
push
add
or
jo
ljmp
add
and
xor
dec
in
jg
int3
and
mov
add
jmp
xchg
add
data16
pop
xchg
pop
cmpsl
xchg
add
test
add
and
mov
lcall
mov
in
out
xor
add
rolb
add
add
mov
inc
movb
add
mov
add
mov
add
add
sub
pushf
fwait
gs
mov
mov
mov
dec
xchg
fwait
mov
lock
and
icebp
lret
insb
xor
push
add
fcoml
add
and
cmp
pop
jge
insl
pop
dec
loopne
notl
jp
aad
add
adc
divl
add
push
cltd
jmp
fwait
in
inc
call
add
add
sub
add
xchg
xchg
or
iret
arpl
loope
mov
inc
sub
bound
mov
pop
mov
movsb
add
call
add
add
xchg
mov
add
outsb
cmp
add
xor
sub
jecxz
icebp
lret
add
push
mov
pop
dec
enter
pop
aas
addr16
gs
pop
test
cs
inc
add
push
add
push
xchg
add
rolb
rolb
ret
sbb
dec
jp
add
xor
ljmp
or
imul
fwait
xchg
test
out
add
mov
mov
mov
pop
data16
out
repz
outsl
rolb
push
lds
add
xor
jns
xor
frstor
popf
add
insb
or
or
jp
add
movsb
add
pop
add
mov
lret
cmp
xor
xchg
int3
inc
add
pushf
cmp
add
push
jg
decl
add
mov
push
add
dec
push
sbb
add
sbb
push
adc
fmul
je
lock
adc
hlt
add
and
mov
sbb
cwtl
movsb
add
add
sub
add
lock
sbb
mov
add
movsl
dec
testb
fiaddl
dec
jo
ds
rolb
add
mov
mov
cld
xchg
adc
adc
ret
push
add
add
add
daa
push
lret
add
in
pop
test
add
hlt
add
mov
xchg
add
lcall
outsl
mov
fidivs
aaa
mov
add
xchg
jp
add
add
add
or
std
sbb
jmp
in
xchg
add
or
add
pop
in
sbb
movsb
add
push
add
xchg
addb
xchg
add
jb
mov
add
push
insb
dec
stos
rolb
aas
lods
sub
lock
add
add
into
push
loope
call
mov
add
add
jmp
add
add
sbb
mov
and
push
sbb
add
and
mov
repz
add
jmp
add
mov
lahf
xor
and
add
jge
mov
int
movsl
aaa
add
add
push
add
inc
add
add
sbb
mov
or
mov
add
xor
ret
popa
testb
aas
leave
iret
addb
cmp
scas
jae
int
cmc
fstps
adc
mov
add
mov
jg
add
add
sbb
jbe
xchg
mov
int3
rcll
add
xchg
dec
mov
pushf
outsb
jbe
or
add
add
jns
jle
js
push
in
dec
cmp
fsubl
add
mov
fsubrl
mov
adc
repnz
daa
mov
add
lock
add
add
rolb
fisubrs
add
ljmp
lret
jno
add
mov
outsb
mov
push
mov
add
add
and
xor
stos
out
inc
jmp
iret
scas
sub
mov
add
stos
cmpsl
int3
std
sbb
cld
mov
dec
add
out
sbb
mov
add
mov
cmp
cmp
insb
push
add
jb
pop
add
mov
add
mov
pop
cmp
cli
test
add
sbb
and
mov
cmp
add
cmp
stc
data16
add
add
add
xchg
out
addb
dec
iret
sbb
mov
mov
add
add
in
cmp
mov
add
pop
or
pop
jb
mov
mov
mov
movsl
or
add
in
or
mov
outsl
push
add
inc
add
pop
pop
out
sbb
inc
dec
mov
adc
xchg
mov
push
insl
scas
pop
xchg
mov
add
insb
add
add
outsb
pop
rolb
mov
and
mov
add
cmc
fwait
xchg
inc
add
adc
scas
jg
mov
lret
mov
push
add
xchg
add
cli
cmp
push
add
pop
ja
and
cmp
add
add
add
pop
cmp
adc
test
push
add
add
lds
js
leave
mov
add
rolb
dec
bound
mov
popa
psubq
add
pop
pop
cmp
push
lock
add
mov
add
add
mov
adc
and
sub
add
add
cwtl
dec
ds
cld
and
mov
pop
and
mov
push
xor
pop
subl
add
mov
mov
xchg
arpl
or
insb
fmul
movsl
das
inc
add
dec
mov
rolb
adc
fucomp
je
pusha
add
push
sbb
add
add
mov
push
add
xchg
add
dec
gs
stos
enter
in
mov
push
repnz
add
xchg
icebp
test
mov
xor
add
hlt
add
mov
add
pop
ret
mov
incb
in
lret
testb
add
mov
jns
xchg
add
add
add
loop
mov
popa
mov
add
mov
mov
or
mov
cmp
popa
fidivrs
int
or
mov
add
add
loope
sbb
mov
out
lahf
stos
sahf
test
sbb
fnstsw
add
cmp
add
cmpsb
add
pop
stos
mov
add
mov
add
add
add
add
filds
sub
jae
xlat
sbb
lcall
repnz
pop
pusha
add
push
add
dec
pop
lds
mov
add
add
push
add
cmp
add
inc
add
add
stc
inc
cmp
test
fcmovb
add
jbe
push
add
loop
sbb
movsb
add
shrl
add
repnz
loope
pop
popa
jae
push
inc
xor
ljmp
adc
lods
ret
add
inc
add
pushf
inc
add
add
and
mov
test
add
movsb
add
pop
bound
mov
add
xchg
add
ficoms
imul
mov
mov
sbb
push
jge
popf
pop
addr16
add
mov
ljmp
add
add
sbbl
add
push
add
movb
add
stos
addb
add
testb
popf
inc
add
add
pusha
add
pop
sub
and
mov
add
fcmovne
xlat
dec
sysret
inc
addr16
and
add
add
mov
xor
push
push
movb
add
add
lock
jns
movsl
into
xchg
adc
cmp
add
iret
push
rolb
test
add
sub
aas
sub
testb
dec
data16
and
add
out
fwait
insb
adc
and
jae
add
mov
aam
jbe
int3
and
sbb
mov
add
push
add
add
fwait
mov
shll
mov
dec
in
das
pop
ds
fsubrl
add
jno
add
jge
add
add
add
add
ds
fadds
add
dec
pop
mov
sub
stc
lods
xchg
mov
loope
add
sub
aad
mov
fdivs
xchg
jno
rolb
lods
pop
xor
lds
inc
add
in
dec
xchg
test
add
data16
mov
add
les
mov
add
mov
adc
xchg
add
mov
xorl
add
lret
sub
out
xchg
mov
xor
add
or
mov
out
cmpsb
add
ds
pop
data16
or
and
mov
mov
add
add
pop
jbe
out
aad
mov
add
jne
repnz
mov
add
mov
call
testb
push
sbb
add
add
or
sbb
into
testl
pop
cmp
add
in
pop
dec
js
add
mov
lret
fwait
cmp
push
or
add
add
add
and
xchg
xlat
sarl
scas
add
addb
sti
push
add
lods
lock
add
addb
add
dec
pop
scas
add
add
pop
sub
sbb
add
scas
hlt
add
add
sub
sarl
jno
and
mov
in
test
add
mov
loope
test
ret
adcl
popf
test
xchg
pop
test
xor
xchg
add
inc
add
ljmp
pop
test
in
or
xor
cltd
lock
pop
xchg
movsb
add
es
jmp
addr16
add
pop
xor
pop
jns
lret
xlat
cltd
jge
add
insl
fdiv
add
mov
sbb
inc
add
fldz
daa
mov
add
push
dec
data16
leave
je
scas
insl
iret
sarl
jno
jle
or
mov
pop
and
sti
int3
ret
mov
pop
mov
add
mov
cmp
add
mov
addr16
add
add
mov
popf
xor
ret
xchg
mov
add
add
sahf
xchg
adc
add
cmp
add
mov
add
sarl
dec
sub
add
pop
lea
add
rolb
xor
pushf
testl
jo
and
jge
add
add
fildll
lea
insl
jg
testb
mov
pop
pop
cmc
into
cmp
lods
inc
lods
aam
push
roll
scas
bound
mov
add
adc
add
dec
adc
push
test
and
mov
into
ret
cmpsl
add
mov
xchg
jae
adc
inc
add
add
dec
jmp
in
ret
imul
push
add
lahf
int3
ret
out
in
mov
add
add
mov
idivl
pop
je
pop
les
lahf
fcomps
cld
gs
add
add
pop
mov
add
pusha
add
or
sub
ficompl
add
rolb
add
repnz
mov
fsubp
add
add
add
add
push
cli
xchg
or
pop
cmp
add
xchg
add
cmp
jae
xchg
xor
pushf
shrl
sti
lret
clc
pop
add
addl
sbb
pop
mov
or
pushf
icebp
popa
scas
jne
dec
pop
sub
add
jp
push
xor
sub
add
lret
arpl
jge
add
add
add
lret
int
mov
add
or
add
pop
pushf
sbb
cmp
mov
jmp
sbb
mov
cmc
ljmp
test
outsb
cld
js
sub
adc
add
mov
bound
mov
xor
jecxz
mov
dec
xchg
add
add
add
add
sub
add
test
adc
jp
jnp
sub
add
lock
testb
sub
push
add
add
aaa
inc
add
push
xor
push
adc
imul
ljmp
add
dec
divps
add
addl
pusha
add
add
push
add
add
les
xor
js
add
sahf
pop
fsubr
pop
xlat
out
sub
aas
repz
add
lds
add
jle
frstor
add
mov
add
cltd
sub
add
mov
add
sub
push
add
iret
xor
lahf
aaa
add
push
xchg
rcll
add
leave
aas
cmc
jl
add
adc
pop
add
mov
mov
ss
cmp
dec
fldl
add
lret
inc
add
add
jae
cmpl
jno
faddl
and
xchg
add
insl
fbstp
add
loop
fldl
adc
insb
xlat
add
push
ficompl
add
mov
mov
outsl
push
add
inc
inc
sbbl
push
aam
enter
das
and
popf
cmp
mov
lcall
sub
inc
add
into
pushf
or
outsl
test
add
and
mov
or
xor
rolb
mov
mov
dec
hlt
add
pop
fldenv
testb
or
out
fistl
or
add
in
add
mov
sti
inc
add
cmp
xor
in
jns
rcrl
mov
add
lret
out
sbb
add
push
dec
lahf
sub
pop
rolb
sbb
insb
iret
cmc
les
cwtl
lods
inc
cmp
and
and
xchg
add
sti
lods
rolb
addb
add
cli
dec
inc
jp
jmp
add
negl
add
lea
and
cmp
add
lods
jmp
mov
jae
xchg
insl
mov
scas
xchg
add
cltd
stos
addb
mov
jge
mov
jge
sarl
pop
adc
xchg
sbb
pop
mov
lods
push
test
add
or
add
rolb
mov
jp
and
mov
adc
mov
add
push
add
inc
addb
add
xor
lods
xor
push
inc
add
add
sub
aad
add
add
sbb
je
push
inc
les
inc
add
mov
cmp
add
inc
add
xchg
add
andl
pop
xorl
pop
sbb
mov
xor
inc
add
hlt
add
inc
add
add
pushf
pop
and
mov
rcrl
push
inc
add
cmpsb
add
add
lock
stos
fcoml
nop
add
add
add
jns
add
jle
aad
push
into
fsubrl
xor
movsl
sarl
add
js
mov
cs
add
cmpsb
add
mov
add
jmp
jge
push
icebp
lock
call
movsl
jg
out
xchg
mov
popf
mov
jb
adc
fs
inc
add
dec
ret
add
add
dec
fldenv
mov
mov
mov
aaa
icebp
inc
add
or
imul
add
ret
push
add
mov
push
mov
fcmovnbe
add
mov
xchg
or
mov
cmpsl
gs
add
add
cmp
cmp
pop
jecxz
add
jl
or
cli
sbb
jae
add
jns
lret
sub
jge
imul
cmp
out
lret
inc
test
cmc
loope
push
stos
push
add
loopne
add
cmp
add
or
jmp
add
jnp
cld
inc
outsl
push
test
mov
mov
scas
inc
gs
add
ss
adc
mov
push
addr16
pushf
sbb
movsl
mov
lret
outsb
mov
add
add
add
add
test
call
lods
nop
add
stos
adc
jmp
out
icebp
iret
scas
jno
addb
movsb
add
sub
sbb
push
add
mov
cmp
add
add
in
mov
jo
sbb
es
mov
loopne
jno
mov
add
mov
aad
sub
mov
mov
inc
add
mov
add
aad
bound
mov
add
add
add
leave
in
push
pop
dec
mov
dec
bound
mov
or
sbb
mov
or
lods
pop
xor
mov
lock
add
fadd
mov
cmpsl
stos
cmp
cmp
jg
outsb
mov
test
add
sbb
add
outsb
cmp
push
add
testl
add
mov
mov
inc
add
in
and
data16
lea
call
fsubrs
sbb
adc
movb
add
sahf
pop
jbe
addb
add
lods
rolb
scas
insb
adc
mov
push
add
push
loope
aad
add
jge
stos
imul
hlt
add
xchg
aas
sbb
pop
aaa
mov
add
scas
daa
cld
inc
add
add
jle
sbb
in
fsubrs
out
jae
add
movl
sub
stos
sbb
incl
add
insb
pop
xchg
mov
and
xor
repnz
and
clc
push
add
jne
add
add
add
int3
adc
cmp
out
addb
add
add
inc
add
stos
fwait
or
fadds
or
scas
xor
add
out
fimuls
std
xor
pusha
add
add
jne
mov
add
and
or
stos
fimull
mov
js
into
mull
inc
add
lea
mov
sbb
mov
xchg
lock
mov
add
lods
dec
daa
insb
dec
and
add
mov
add
insb
push
add
add
adc
loopne
fcomps
pop
in
stos
fistpll
pop
imul
sub
shll
jecxz
rolb
cmp
mov
inc
add
add
mov
loopne
aaa
or
add
addr16
cwtl
xchg
add
or
pop
addb
add
out
pop
andl
add
xor
das
adc
xchg
add
add
add
cmc
aam
jne
xlat
mov
cmp
add
sub
add
aas
push
adc
sahf
jbe
adc
hlt
add
add
add
add
xor
clc
ret
sti
and
mov
cmc
rolb
jnp
add
push
pop
cmp
add
sbb
push
add
daa
dec
movsb
add
jo
pop
add
mov
jle
push
xlat
and
inc
jecxz
push
add
pop
sbb
clc
and
mov
pop
add
add
pop
lea
adc
mov
add
pop
mov
dec
cmpsb
add
jecxz
pop
and
push
in
jmp
fcoms
mov
imul
xchg
ds
ja
xchg
add
nop
add
movb
lahf
push
repz
mov
cmp
jp
call
mov
cmpsb
add
dec
xor
jb
std
xor
xchg
add
add
rolb
adc
std
mov
xchg
add
mov
fldt
ret
out
sub
add
aas
adc
jecxz
cli
stos
and
arpl
pop
stos
data16
inc
add
jnp
add
add
cmpsb
add
cmp
add
mov
add
push
xchg
mov
add
addb
inc
jg
xchg
xchg
add
fnstsw
jl
add
movb
and
add
inc
add
lret
pusha
add
fnstenv
add
aaa
lret
sbb
sarl
dec
lahf
testl
sti
jne
add
mov
outsb
imul
cli
lret
daa
mov
sbb
pop
xor
cwtl
movsl
sbb
adc
mov
mov
mov
xlat
mov
xchg
bound
mov
roll
out
mov
cwtl
cmpsb
add
add
pop
testb
inc
gs
mov
mov
mov
repnz
add
sub
mov
in
or
or
call
add
nop
add
xchg
add
ljmp
aaa
add
js
xchg
add
mov
ljmp
add
or
jne
push
fdivrs
scas
in
repz
sub
movb
dec
jmp
add
add
pushf
into
inc
in
adc
lds
jbe
leave
push
test
mov
or
xor
push
pop
imul
in
inc
mov
testb
cmp
cmpsl
je
xchg
sbb
add
sub
repnz
rolb
pop
jle
adc
mov
cmpsb
add
std
pop
and
cwtl
mov
ret
add
or
inc
pusha
add
and
loop
arpl
dec
ljmp
dec
dec
cmpsl
hlt
add
in
mov
or
add
lahf
inc
jmp
mov
and
mov
test
rcr
pushf
jns
or
out
in
jg
bound
mov
add
rorl
repnz
xchg
lods
mov
fistpll
sub
outsl
jge
ret
cmc
xchg
add
pop
xchg
addb
fcoms
movsb
add
cmpsl
or
add
dec
cli
xchg
adc
add
shrl
mov
push
add
add
imul
leave
scas
cli
loopne
adc
and
dec
push
add
mov
sbb
add
add
push
add
cld
or
add
mov
pop
mov
add
jbe
sub
inc
add
aaa
jl
add
sbb
pop
jl
loop
cld
aam
cwtl
popa
add
push
mov
ret
mov
test
push
jmp
inc
add
outsb
cli
gs
add
add
sbb
add
cld
push
push
add
add
add
xor
mov
sti
stc
add
mov
push
add
scas
lods
test
add
add
add
push
add
mov
sub
push
aam
mov
test
cmp
add
xlat
sahf
and
add
pop
rcrl
add
jbe
ret
cmp
fcmovu
aas
add
add
add
mov
jns
xor
bound
mov
jle
out
add
add
jne
add
adc
xchg
add
out
add
mov
and
dec
jb
addb
cmp
ret
xchg
add
push
add
inc
sub
mov
mov
rolb
rolb
icebp
lcall
lea
repnz
popf
adc
inc
add
popa
add
jmp
push
add
or
sbb
stc
aam
pushf
mov
mov
add
mov
shr
push
cmpsl
test
add
push
add
dec
not
add
repnz
add
inc
mov
cmp
add
add
aad
jg
aam
dec
pushf
ds
cs
dec
mov
jbe
jge
aas
mov
test
add
jns
jmp
mov
add
add
scas
insl
push
add
mov
clc
jl
push
sub
cld
addb
add
cmp
test
push
dec
inc
add
add
sbb
imul
and
mov
add
sub
cmpsl
jne
add
inc
add
mov
or
sbb
mov
mov
add
test
add
add
jg
rcrl
std
movsl
mov
lods
mov
mov
add
les
test
mov
push
nop
add
add
adc
pop
cli
mov
add
shll
inc
inc
rcrl
mov
test
out
mov
sbb
ret
add
add
add
add
push
add
push
mov
dec
pop
pop
sub
mov
push
sub
test
loopne
fdiv
mov
mov
scas
outsl
out
jno
or
add
push
add
add
push
icebp
or
leave
out
ffree
pushl
xchg
movsl
or
or
sub
cli
loopne
push
add
shr
mov
fucomi
scas
push
aam
or
data16
stos
ss
add
mov
mov
jp
js
dec
arpl
clc
aad
mov
dec
or
lds
ljmp
mov
and
mov
add
or
cmc
lods
icebp
fstpt
or
pop
cmp
adc
movsl
je
lods
mov
jne
dec
jnp
add
mov
xor
fxch
jmp
icebp
stos
mov
add
pop
push
jnp
popa
cmp
add
test
pop
cli
pop
push
fisttps
add
aaa
in
xchg
stos
adc
test
add
in
lahf
or
mov
call
mov
sub
xchg
add
add
popf
iret
mov
sti
push
xchg
and
mov
outsl
shll
cltd
mov
push
add
addb
cli
sub
add
mov
add
ret
pusha
add
lret
ficompl
popa
or
insl
out
out
mov
mov
inc
add
add
push
add
loopne
cmp
add
js
add
add
lods
or
insb
rolb
in
iret
fistpll
inc
repnz
add
add
add
push
add
mov
add
mov
ljmp
inc
dec
mov
jno
mov
inc
add
sub
push
add
lods
rolb
sub
fdivrp
mov
mov
jp
in
push
rdpmc
daa
leave
sub
fs
add
and
jmp
dec
add
lcall
ljmp
or
mov
add
add
inc
imul
outsl
mov
mov
shl
add
fdivp
add
outsl
fcompl
fs
add
shll
jmp
pop
std
dec
test
insb
add
add
repnz
add
rolb
xchg
fisubrs
sub
pop
add
mov
add
add
mov
rolb
or
test
mov
mov
push
dec
mov
cmp
cltd
cmc
sub
pmuludq
jns
add
add
mov
lahf
roll
lret
addb
test
movsb
add
add
inc
add
adc
pop
inc
mov
popa
and
setne
jnp
push
addr16
nop
add
xor
add
add
stos
loope
fsubrl
add
cs
jns
add
xchg
sbb
mov
sbbl
mov
dec
push
add
cmp
add
mov
imul
add
rcrl
mov
mov
add
mov
insl
enter
add
mov
adc
stc
pop
sub
add
push
xor
xchg
jge
les
imul
jp
daa
aas
daa
cwtl
mov
jle
rolb
dec
add
adc
sbb
mov
inc
add
inc
xchg
add
mov
add
in
adc
push
dec
test
mov
push
iret
xlat
sbb
xchg
jg
add
add
and
sub
inc
jge
testb
add
add
mov
pushf
in
mov
push
add
mov
add
ljmp
xor
jno
and
pop
mov
jecxz
repnz
gs
fstpt
test
fwait
rolb
loope
push
fisubs
sbb
and
ja
ds
dec
movb
add
scas
cmp
mov
inc
aam
inc
xor
sbb
add
inc
add
pop
inc
cld
mov
mov
cwtl
das
movsl
pop
movb
add
add
rolb
and
mov
out
cmp
sahf
adc
fisubrs
xchg
pop
cmp
jle
xor
xchg
cmc
lret
xor
add
add
cmc
cli
aas
ds
inc
cmp
jbe
xor
ljmp
add
add
loope
in
mov
mov
bound
mov
jg
add
add
add
lea
pop
stc
loope
icebp
cs
push
add
hlt
add
push
addl
sbb
lods
push
cmp
add
shl
add
cmp
dec
in
adc
add
add
inc
cmp
or
lret
jge
std
rolb
nop
add
add
data16
jp
dec
adc
stos
dec
std
in
push
and
mov
jbe
push
add
cmc
sbb
add
xor
and
xor
dec
addr16
jnp
test
add
mov
xchg
add
mov
add
jg
pop
arpl
jnp
lds
xchg
imul
insl
rolb
shr
ds
mov
cmp
xchg
add
add
jecxz
pop
mov
sbb
mov
mov
das
lods
sbb
jmp
add
dec
jge
lea
mov
outsl
dec
adc
xor
test
into
mov
lret
and
jbe
mov
fld
add
mov
outsb
push
add
mov
add
or
enter
mov
rolb
fnsave
mov
das
mov
push
cmp
repz
xor
inc
push
add
add
add
add
mov
scas
cltd
xchg
xchg
rolb
imul
add
adc
xchg
add
sbb
add
add
dec
push
add
add
in
imul
scas
mov
mov
clc
pop
inc
add
jecxz
lods
add
jae
pop
jp
clc
add
push
or
rolb
pusha
add
add
daa
add
cmc
aas
xor
mov
fildll
add
add
pop
cld
or
in
repnz
xchg
add
push
add
xchg
dec
in
ds
mov
mov
jmp
lcall
iret
addb
jmp
mov
add
and
jecxz
lock
add
std
pushf
adc
out
movsb
add
dec
test
or
pusha
add
mov
add
add
add
push
das
xchg
add
add
cmp
add
adc
in
and
push
fisttpl
and
mov
mov
add
aas
or
sub
add
jb
cmpsb
add
cli
mov
add
bound
mov
add
jae
lods
or
add
add
popf
call
inc
sub
add
push
add
imul
add
add
add
pop
dec
cltd
adc
pop
pop
cwtl
shll
cmpsl
sbb
add
mov
add
popa
daa
adc
out
adc
out
pusha
add
add
add
add
sbb
add
adc
xchg
xor
adc
push
cld
mov
xor
lods
add
xor
dec
jp
loope
test
in
add
add
add
add
pushf
jge
pop
xchg
jb
mov
add
sarl
mov
or
add
add
subl
add
add
mov
cmp
xor
sti
dec
cld
popa
add
push
add
rcl
add
add
popf
out
mov
add
roll
mov
cmp
and
sub
je
bound
mov
dec
insl
cwtl
push
add
test
xchg
xlat
cmp
and
mov
dec
movsl
dec
std
push
add
add
add
in
add
lods
add
rolb
cmpsb
add
add
add
xchg
mull
in
pop
loope
das
test
jo
xchg
and
mov
add
mov
hlt
add
mov
add
sbb
aaa
xor
jno
add
mov
mov
cmpsl
jp
inc
add
push
add
xchg
stos
nop
add
add
dec
cmp
add
add
mov
rolb
das
push
add
jnp
push
add
adc
lret
push
add
add
enter
add
ret
mul
add
or
sbb
cmp
pop
hlt
add
add
fsubl
mov
mov
inc
add
add
and
test
lahf
cmp
sub
mov
add
and
mov
adc
jbe
pop
cld
cmpsb
add
add
dec
jbe
aad
popf
inc
mov
add
mov
mov
addb
lods
fwait
inc
loope
add
mov
add
daa
sub
scas
fmuls
mov
mov
int
add
scas
stc
fnstcw
jg
pop
xchg
pop
fsts
call
cwtl
sub
add
jl
add
add
repz
jo
xchg
add
cwtl
jmp
test
mov
sub
mov
add
fidivs
loopne
pop
mov
test
add
pop
pop
and
mov
cmp
ljmp
add
xor
add
cmp
les
cmc
mov
and
mov
jo
daa
sbb
cmp
adc
jno
mov
jge
add
mov
cmp
insl
rorl
sbb
add
fists
xchg
xor
add
dec
add
mov
movsl
sbb
add
fildll
into
aam
pop
cmp
dec
push
add
dec
aas
clc
ficompl
testb
insb
adc
adc
and
scas
or
add
lcall
add
mov
jo
jmp
or
jl
jno
cmp
fsubl
add
lds
add
cmp
lret
daa
sbb
mov
cmp
test
pop
bound
mov
inc
mov
popa
movsl
or
add
int
xchg
cs
inc
add
xor
mov
int
cmp
add
cmc
pop
xchg
add
mov
pop
sub
add
mov
add
mov
daa
mov
inc
add
add
mov
rolb
mov
cmp
imul
mov
xchg
pop
stos
xor
jae
push
add
insb
loope
add
add
cld
mov
push
push
add
add
jae
add
dec
movb
add
add
loopne
aas
sub
and
or
cmc
or
testb
xor
push
icebp
pop
sub
cmpsl
sbb
push
mov
cmpsl
xchg
ficomps
add
push
loop
not
add
aad
iret
and
adc
jp
lret
adc
arpl
fbstp
in
cld
cmp
add
add
push
mov
mov
cmp
add
into
rol
mov
add
push
add
add
ds
idivl
fcoms
add
mov
mov
jbe
mov
add
jmp
cltd
add
loop
xchg
add
and
pop
cmp
scas
or
add
sahf
push
add
add
or
dec
gs
xchg
popf
xchg
add
stos
pop
movsb
add
cwtl
and
cltd
adc
jmp
add
sbb
popf
insb
aam
or
std
out
inc
add
mov
push
mov
and
dec
movb
leave
ja
inc
test
ret
xor
mov
leave
sbbl
add
push
add
ret
lods
stc
mov
mov
icebp
cwtl
dec
cltd
movsl
add
xlat
fs
dec
das
xor
mov
lods
dec
jmp
mov
loopne
push
add
cmp
and
mov
xor
mov
or
outsb
mov
add
add
scas
gs
add
fiadds
pop
and
mov
push
out
jle
mov
add
xor
movsl
aam
cmp
out
adc
push
pop
mov
test
fwait
test
and
mov
add
add
add
inc
push
int3
lock
dec
das
cmp
adc
add
adc
stos
jmp
add
add
leave
jno
add
add
inc
ds
jne
xor
push
aaa
out
dec
xchg
dec
sbb
imul
mov
jo
fsubrl
add
testb
cmp
dec
jmp
test
jo
jnp
add
add
leave
cmp
lea
stc
adc
jne
sub
inc
add
mov
mov
xchg
add
cmpsl
adc
daa
inc
add
hlt
add
or
test
add
mov
shll
mov
lcall
jns
gs
add
adc
fmull
mov
add
jg
add
cmp
jb
in
dec
sub
mov
adc
mov
sbb
add
and
test
pop
sbb
sub
push
stos
push
add
mov
cltd
js
xchg
scas
mov
sbb
push
add
sub
mov
jmp
jecxz
add
push
aad
add
je
push
imul
fstl
push
add
sub
mov
xchg
add
fildll
mov
jbe
jle
mov
int3
insl
insl
push
add
add
xchg
ret
and
in
add
mov
add
mov
ror
imul
movb
mov
decb
jl
add
add
add
mov
arpl
push
fdivrp
sub
sub
add
mov
test
aad
mov
shl
stos
jno
clc
mov
add
lods
mov
insb
cltd
and
sub
scas
fwait
dec
inc
aad
dec
pop
xchg
xor
movb
lcall
pop
and
unpckhps
cmp
add
mov
add
add
mov
pop
jbe
shll
adc
lret
add
add
clc
daa
add
mov
push
add
cmp
inc
add
pop
pushf
fmul
ficoml
mov
into
mov
addb
adc
dec
addb
add
lods
mov
xor
and
add
das
jmp
pop
popf
nop
add
into
rolb
add
add
add
rolb
pop
stos
bound
mov
mov
fists
add
cmpsl
imul
add
add
add
frstor
add
add
pop
dec
jns
sub
inc
or
and
cmp
inc
pop
fwait
dec
add
xor
add
push
add
cltd
mov
mov
bound
mov
add
or
aas
hlt
add
add
mov
add
xchg
mov
mov
inc
add
push
fistpl
cmp
adc
xchg
xor
fiaddl
mov
add
aam
inc
add
add
rolb
add
push
add
and
cwtl
rolb
sti
in
out
clc
cltd
out
roll
mov
xor
cld
mov
call
xchg
jb
sbb
sbb
scas
sarl
cmpsl
xor
addr16
test
sahf
mov
add
aaa
inc
or
jle
cwtl
rcrl
lock
aaa
xor
addr16
stc
test
jo
mov
add
push
add
bound
mov
sbb
mov
std
dec
idiv
popf
mov
mov
add
call
add
je
and
mov
repz
adc
les
gs
addb
push
add
outsl
ljmp
mov
mov
add
out
out
push
add
addr16
mov
aam
and
sbb
push
add
movsl
cmc
mov
dec
add
add
jne
mov
fs
into
xor
addr16
dec
mov
stos
mov
add
jae
add
add
lea
out
fiaddl
mov
setns
out
sbb
dec
sub
and
mov
js
add
add
lea
inc
add
push
sbb
add
push
mov
add
xchg
jmp
add
add
or
sbbl
test
pop
cmpsb
add
inc
xchg
jb
int
xchg
jb
xchg
add
loopew
dec
sbb
test
imul
xor
inc
add
mov
out
std
mov
jl
push
insb
outsl
cmpsl
mov
mov
fimuls
add
addb
xor
mov
out
into
test
mov
cld
mov
enter
test
jo
lock
mov
xor
bound
mov
or
fimuls
nop
add
mov
add
push
add
add
ja
add
adc
scas
pop
or
js
push
add
and
pop
pop
xchg
add
pop
pop
js
test
scas
and
adc
jno
fistpl
pop
xchg
add
orl
add
movb
add
lret
stc
enter
inc
add
add
push
insb
sti
sub
mov
add
add
add
pop
push
pop
pop
push
add
cmp
and
mov
xchg
stc
scas
add
lret
sahf
mov
add
jne
add
pop
lret
icebp
mov
incb
add
pop
ss
xchg
popf
dec
stos
fldl
add
add
mov
or
add
addb
out
mov
loope
add
sub
mov
add
jp
sub
add
add
mov
add
scas
dec
or
loopne
fistpl
inc
add
pop
adc
aad
mov
add
add
call
push
in
sub
push
pop
add
ret
xchg
add
push
add
push
cmpsb
add
clc
push
mov
add
data16
add
push
add
mov
pop
les
icebp
jbe
pusha
add
add
add
cltd
pop
mov
lea
addb
mov
adc
add
mov
pop
fdivrs
cwtl
icebp
inc
sbb
add
daa
cwtl
fildll
mov
add
fstpl
mov
push
out
pop
push
fidivl
icebp
mov
add
add
loop
cmpsl
repnz
add
add
mov
mov
pop
loop
inc
fimuls
add
sahf
and
mov
fmull
inc
pop
movsb
add
xchg
add
and
pop
in
cmp
bound
mov
fs
fcmove
mov
cmc
movb
repz
jbe
mov
nop
add
lret
inc
stos
gs
dec
sbb
sti
pop
push
aaa
cmp
inc
add
daa
loope
push
mov
add
jne
leave
push
sub
jmp
jge
add
add
mov
mov
sbbl
mov
push
add
mov
add
mov
add
cwtl
push
xor
insb
ja
inc
add
mov
push
dec
loopne
inc
add
shll
add
mov
repnz
add
push
add
mov
sub
push
mov
dec
mov
cmpsl
mov
orl
xchg
sbb
push
add
popf
shll
inc
idivl
xchg
add
add
xor
insb
sub
adc
into
repnz
cmp
inc
mov
and
mov
adc
mov
icebp
movb
cmp
cmpsl
jmp
xchg
or
sbb
or
mov
xor
or
iret
add
mov
add
pop
daa
addb
mov
scas
icebp
sub
sub
add
add
add
mov
add
push
add
popf
je
out
aad
push
xor
sbb
xor
jbe
es
cltd
addb
je
ret
int3
add
mov
cmpsb
add
adc
or
icebp
mov
adc
mov
add
xchg
add
insl
mov
cmc
ret
sbb
dec
sti
addr16
dec
push
cld
sub
cmp
lods
pushf
rolb
dec
in
and
mov
add
mov
jbe
add
xor
add
popf
aaa
mov
add
aad
pusha
add
sti
or
test
fldt
add
fildl
rolb
or
add
std
lds
mov
pop
and
xchg
mov
add
mov
add
sbb
add
xchg
add
sbb
data16
push
add
add
cmpsl
mov
dec
adc
dec
and
mov
add
push
js
sub
add
lock
mov
cmpsb
add
add
sbbl
add
add
out
shll
or
cmp
add
mov
add
mov
adc
rolb
sbb
cmc
cwtl
push
add
cmp
dec
lahf
fisubrl
cmc
shrl
jb
adc
add
mov
inc
add
aaa
jae
add
add
loope
add
mov
outsb
sub
add
and
mov
add
xchg
frstor
mov
add
aam
sub
push
add
movsb
add
or
xor
jl
rolb
out
jecxz
add
adc
add
rolb
sub
das
inc
add
inc
add
jmp
xchg
push
add
xor
jmp
lds
sbb
add
mov
rolb
outsb
push
sub
add
add
add
xchg
add
xchg
add
add
jne
add
ffree
add
pusha
add
adc
rol
add
add
pop
fucomi
mov
sti
push
add
push
add
xor
pushf
out
add
push
dec
clc
and
mov
add
jne
add
scas
lahf
mov
push
add
jge
mov
les
repnz
pop
jb
jle
fwait
add
add
dec
xchg
movsl
cwtl
jbe
jb
push
test
add
sbb
add
add
mov
daa
jecxz
rolb
data16
dec
lahf
mov
jmp
js
lcall
add
rdtsc
into
and
or
ds
add
add
add
sbb
fwait
mov
add
mov
inc
add
add
mul
add
mov
adc
jo
adc
test
add
jecxz
add
mov
mov
and
mov
cmp
add
add
sbb
add
repnz
and
mov
pop
movsb
add
cmp
add
dec
pushf
pextrw
add
mov
jbe
popf
in
testb
mov
jmp
sbb
push
add
add
add
cmp
or
add
add
jmp
inc
add
xchg
add
ja
cmp
add
jle
fwait
add
mov
add
add
add
lds
or
fisttpll
add
mov
test
arpl
add
test
test
dec
xor
pop
xlat
sbb
xchg
mov
sbb
add
adc
push
adc
add
mov
fwait
aam
in
sub
add
xlat
push
add
add
inc
add
push
call
xor
jne
add
jo
xlat
int3
lahf
outsl
lahf
cmpsb
add
imul
dec
add
pop
bound
mov
cmp
in
push
mov
push
add
add
nop
add
add
add
jbe
push
shll
movsl
and
and
ljmp
nop
add
shr
mov
hlt
add
dec
ret
movd
jp
stc
pop
or
pop
and
aad
add
and
sub
dec
jnp
mov
jno
jns
cltd
fisubrs
bound
mov
add
out
fsubrs
sbb
call
roll
mov
add
add
jg
cmp
add
test
sbb
repnz
pop
inc
enter
arpl
int3
imul
jno
jmp
add
dec
lea
push
insl
jnp
add
add
pop
popa
cmc
addb
add
add
lahf
cwtl
aaa
jb
stc
sub
xchg
rolb
mov
inc
add
in
xor
sub
xchg
add
add
xor
lcall
pop
lods
stos
movsl
xchg
loopne
mov
xchg
xchg
jg
add
cld
push
push
add
scas
aas
push
add
adc
push
or
jecxz
fwait
in
pushf
les
scas
gs
sbb
add
jne
mov
inc
add
out
and
add
add
in
leave
js
iret
cmp
and
sub
loop
addb
out
adc
push
xor
dec
mov
pop
testb
jecxz
stos
fucomi
xor
mov
daa
pop
sbb
push
inc
dec
sub
xor
insb
or
in
xchg
pop
jle
rolb
inc
dec
adc
push
add
mov
leave
mov
jle
sub
xchg
aaa
cmp
dec
and
mov
xchg
add
scas
adc
add
test
cmpsb
add
add
scas
mov
sub
lods
or
xchg
add
pop
push
enter
cs
xor
outsl
lods
mov
movb
in
loop
sahf
adc
fiaddl
mov
push
add
scas
and
shrl
mov
add
rolb
rolb
lret
icebp
daa
xchg
adc
rorl
mov
dec
leave
jb
rolb
cs
outsb
ret
mov
pusha
add
aad
add
pop
arpl
mov
fwait
dec
dec
push
add
cmpsl
mov
add
add
lahf
addb
loop
or
add
add
cmp
add
jno
xchg
add
iret
mov
inc
cli
push
add
xchg
cmc
rorl
testb
xchg
push
add
mov
add
add
add
xor
xchg
lret
or
dec
jge
shll
data16
test
push
add
xchg
lods
mov
or
jmp
lret
lods
aad
add
inc
das
and
adc
mov
rorl
add
lds
lods
enter
push
add
mov
insb
mov
rolb
test
add
cmp
sub
xchg
mov
insl
mov
add
adc
pop
leave
jnp
push
scas
out
fidivrs
insb
jo
rolb
hlt
add
push
add
rolb
ret
add
push
pop
enter
popf
dec
in
add
sub
add
int3
lods
flds
add
adc
add
ja
cltd
mov
pusha
add
adc
add
mov
pop
ljmp
add
inc
add
add
icebp
adc
add
add
adcl
pop
pop
ret
in
je
sti
stc
fwait
inc
add
xor
add
push
add
dec
xchg
add
lret
xor
cmpsl
arpl
push
add
add
pop
and
adc
out
sahf
imull
pop
filds
mov
mov
add
jp
add
add
ds
xchg
add
push
ret
jae
add
add
add
pop
sbb
pusha
add
add
push
stos
fmull
jle
jbe
stos
pop
mov
test
add
dec
stos
push
mov
xchg
loop
adc
in
ret
add
sarl
add
add
add
mov
cmp
jge
ljmp
add
cmp
push
add
add
insb
add
mov
insb
mov
adc
cmpsl
test
push
pop
rolb
hlt
add
rolb
mov
jae
out
jp
pop
fdiv
add
inc
mov
mov
add
or
daa
movb
push
add
add
xor
movl
xor
jno
enter
add
sub
xor
movsl
jb
mov
ljmp
sahf
push
lods
cs
or
add
add
push
add
dec
lret
add
and
mov
in
scas
sbb
add
mov
divl
dec
iret
pop
addb
movsb
add
lret
popf
lods
add
mov
test
inc
jns
xor
push
pop
mov
mov
xchg
hlt
add
cmp
cmp
add
jns
repnz
fwait
mov
dec
cmpsb
add
add
add
push
or
add
pop
repz
into
mul
add
add
jg
pop
mov
sbb
inc
add
fimull
dec
push
add
sbb
or
scas
icebp
add
add
scas
cmc
nop
add
add
cmp
cmp
push
popf
rolb
popf
jl
popa
xchg
pop
mov
popl
add
dec
ret
xchg
add
jmp
adc
adc
sub
cmp
xor
iret
mov
subl
mov
inc
adc
cmp
in
inc
add
add
inc
add
mov
add
push
mov
sub
outsl
sahf
adc
imul
push
or
or
movsb
add
mov
sub
add
sbb
shr
es
aaa
aaa
xor
add
push
sahf
call
push
jl
add
jl
cmp
inc
add
ja
add
push
ret
jmp
push
shll
xchg
pushf
sbb
add
sar
mov
sub
add
xchg
add
mov
add
add
data16
add
popf
fisttps
scas
cmpsb
add
or
ja
xor
or
add
mov
add
add
sub
add
mov
addb
lret
enter
add
mov
sub
jge
add
cmp
je
scas
mov
lods
add
mov
popa
mov
add
stos
push
dec
mov
out
sbb
add
addb
in
and
movsl
sub
push
add
add
add
insb
mov
mov
fnstenv
push
js
push
add
push
add
add
xor
mov
add
cld
std
gs
rolb
imul
xchg
xchg
add
scas
mov
xchg
jle
rolb
lea
add
adc
cmp
or
lcall
add
add
nop
add
dec
adc
jl
add
jg
cmp
jnp
jns
sbb
shr
lcall
add
iret
cmp
test
rcll
adc
clc
cmp
ss
add
and
mov
negl
std
mov
add
cmp
mov
rcll
cmp
cmp
scas
addr16
add
lahf
bound
mov
adcl
mov
cwtl
aaa
cwtl
outsl
repz
push
xlat
mov
or
mov
in
dec
inc
add
sub
jg
add
clc
aad
fisubrl
and
add
cs
out
lcall
add
mov
add
sub
add
mov
add
in
add
shrd
add
data16
add
outsl
gs
push
add
adc
sbb
gs
mov
int3
mov
repnz
add
add
add
gs
add
in
push
add
add
sti
cmpsb
add
fimull
mov
outsl
andl
lods
mov
adc
dec
sub
add
mov
add
add
mov
not
sti
jecxz
add
add
add
les
stos
iret
shl
js
movsl
inc
adc
jne
stc
pop
and
shrl
outsl
lds
cltd
cli
mov
push
add
sub
mov
test
add
xchg
rolb
pop
cmpsb
add
shll
and
or
add
xchg
dec
call
jg
dec
push
pop
push
add
add
add
add
int3
adc
pop
inc
add
call
add
push
add
pop
mov
ret
fldz
leave
das
orl
ss
outsb
js
ss
loope
add
add
inc
add
mov
mov
mov
add
mov
add
mov
add
mov
add
add
insb
sub
jp
add
cmpsb
add
es
mov
adc
add
and
add
rolb
xor
test
test
add
sbb
add
mov
icebp
jl
sub
push
add
or
jb
jmp
and
add
inc
add
inc
mov
pop
push
xor
adc
push
imul
add
call
movb
and
hlt
add
push
add
add
sub
lods
lea
pop
inc
add
js
lods
lods
xor
aaa
or
bound
mov
aam
jle
add
enter
lret
xchg
in
repnz
xchg
mov
add
add
add
add
dec
out
add
jne
jl
pop
mov
add
add
out
mov
jo
cwtl
insl
leave
je
mov
pop
outsl
add
add
js
pop
sub
lods
pop
loop
sbb
add
add
add
cmp
fmuls
jo
cmp
add
arpl
mov
sahf
cmpsl
pop
push
add
add
rolb
jno
fldenv
data16
ja
add
mov
daa
jg
nop
add
and
mov
and
adc
push
xchg
add
xor
add
js
add
adc
adc
xor
shll
add
adc
int3
mov
push
add
aad
sub
subl
pop
sbb
fmul
xchg
add
je
aaa
jo
mov
add
jecxz
fucomip
jb
call
outsl
sbb
cmp
rorl
dec
xchg
and
mov
lock
add
enter
fists
cmpl
sti
mov
lea
mov
mov
add
movsl
inc
les
inc
add
mov
add
rolb
mov
add
push
cli
and
mov
xchg
sbb
xchg
mov
add
push
clc
mov
cmc
push
fisubl
push
movb
add
sarl
add
inc
add
add
add
sub
mov
add
add
xchg
add
int3
into
dec
xor
jae
add
add
add
addr16
loop
dec
adc
dec
xor
push
dec
pusha
add
mov
addb
add
xor
mov
out
addb
shld
inc
add
add
mov
popf
fdivrl
mov
mov
push
add
push
mov
add
int3
fs
rolb
mov
add
mov
or
dec
pusha
add
cwtl
mulps
xchg
add
add
xchg
in
inc
movsb
add
add
jne
es
sub
mov
stos
jge
add
xchg
pop
std
jge
test
add
addr16
add
push
push
data16
ficoml
mov
push
add
pop
into
or
mov
add
pushf
shrl
mov
gs
jp
clc
cld
sub
cli
lret
jle
sti
adc
mov
out
xchg
add
mov
cmp
mov
lds
out
push
add
jecxz
adc
add
add
pop
inc
cmpsl
cmp
dec
cs
loopne
dec
cs
rolb
pop
mov
add
lock
add
sbb
adc
mov
dec
int3
imul
add
call
in
xor
addb
cmp
inc
in
add
scas
add
add
add
sub
and
repnz
mov
outsl
add
in
movsl
dec
inc
movb
shll
lahf
lods
dec
sub
xor
xchg
add
lahf
or
add
add
add
dec
in
sar
sbb
dec
roll
add
add
pusha
add
add
sbb
adc
repnz
inc
add
xchg
aam
add
cmp
scas
fisttps
jmp
add
inc
pop
rolb
fcmovnbe
pusha
add
mov
add
jno
add
int3
adc
gs
int3
pushf
inc
jecxz
add
add
add
add
mov
popf
lds
mov
add
lahf
imul
out
dec
fsubrl
mov
or
add
aad
and
pusha
add
repnz
mov
push
and
mov
push
popa
inc
test
add
sbb
add
add
add
fstl
mov
cwtl
fcomps
fstps
movb
add
add
add
inc
ret
pop
fmuls
or
sub
add
imul
out
addb
sub
add
loop
xchg
sub
sahf
lahf
outsb
addb
sbb
mov
scas
mov
sub
mov
and
mov
jge
addb
push
add
jge
in
sub
nop
add
push
test
xor
gs
das
and
add
jmp
lods
mov
jmp
in
inc
add
sub
add
add
pop
sub
mov
addb
lods
xor
jb
inc
add
mov
add
mov
inc
xor
cltd
jge
popf
dec
enter
or
add
jae
jo
pop
add
mov
mov
add
sub
inc
add
test
push
imul
insb
jp
popf
repnz
add
add
xchg
rolb
cmpsb
add
push
add
add
out
daa
daa
sbb
jle
add
bound
mov
int3
sbb
ds
in
aas
fadds
bound
mov
add
add
mov
dec
lods
jge
pop
pusha
add
add
leave
dec
es
xchg
add
mov
outsl
push
add
scas
les
iret
mov
adc
cs
xchg
add
rolb
test
inc
mov
jl
inc
popa
das
rolb
xor
mov
fsubl
loop
add
mov
data16
mov
push
add
repnz
pop
add
jecxz
mov
push
add
call
loop
push
les
adc
stos
dec
ficompl
jo
sahf
add
add
dec
sbb
aad
sbb
add
pop
cmp
dec
movsb
add
sub
or
out
std
add
test
add
std
sti
xchg
lds
outsb
cmp
stos
lret
inc
clc
loop
add
mov
mov
add
add
xchg
add
clc
mov
aam
push
add
mov
add
in
mov
add
enter
adc
out
mov
add
mov
add
pop
jl,pn
add
add
xorl
js
aad
cmp
add
je
int3
pusha
add
pop
rcrl
sbb
mov
out
push
add
ret
sbb
fdivrl
testb
ret
push
add
fwait
popl
add
cmp
nop
add
add
mov
or
push
add
add
add
add
and
cmp
mov
rorl
jns
adc
cmp
or
outsb
lds
adc
into
cmp
pop
xchg
or
movb
fs
mov
call
fmul
sub
sar
rolb
or
pop
dec
rolb
aaa
mov
add
add
out
push
lret
or
add
lds
cmp
ret
inc
mov
addb
xor
add
mov
add
add
sbb
push
add
add
adc
mov
ds
mov
dec
add
mov
mov
cmpsb
add
add
enter
add
lcall
iret
push
mov
inc
lds
and
mov
pop
or
jg
cmc
imul
stos
add
mov
add
add
fcoml
sub
cmp
mov
add
add
xchg
sub
pop
ds
add
scas
sbb
mov
mov
add
repnz
test
lods
adc
add
cwtl
movb
add
fnsave
push
add
ja
sbb
add
in
sahf
add
mov
test
lds
in
shr
fistps
addb
add
push
add
add
or
mov
stc
mov
arpl
add
sbb
test
add
sub
in
add
negl
mov
mov
dec
dec
rcrl
jmp
push
add
scas
jno
mov
mov
cmp
and
lock
pop
jmp
mov
add
lcall
out
add
scas
adc
xchg
add
inc
xor
cltd
insl
jg
push
add
scas
dec
out
std
pop
xchg
icebp
jnp
and
out
rcrl
add
pop
addb
and
pop
pop
in
and
mov
out
jno
xchg
add
das
mov
sbb
aam
scas
in
or
add
add
cmp
jmp
mov
add
xor
jno
jo
dec
pop
xchg
pop
push
and
cmpsb
add
dec
push
add
jnp
mov
xor
into
int3
xor
mov
add
pop
out
jmp
std
addl
fwait
fucomip
enter
ret
add
dec
je
push
addb
lods
cmovs
enter
add
testb
sbb
add
cmc
or
stos
mov
sti
ret
adc
and
jl
xor
add
add
js
add
inc
add
cwtl
mov
add
jg
add
les
xchg
add
dec
add
cs
pop
sub
push
mov
fucomi
loop
push
adc
mov
leave
je
jne
add
mov
pop
xor
loop
fcoms
sbb
outsb
addr16
and
add
sahf
xchg
jmp
pusha
add
add
add
jp
add
add
mov
add
mov
fiaddl
call
add
or
int
add
add
mov
subl
sahf
lods
mov
cmpsl
inc
adc
inc
add
xor
movsl
icebp
push
add
pushf
and
mov
test
inc
add
mov
add
mov
sub
cmp
test
lret
mov
add
inc
xor
mov
add
add
mov
cmp
repnz
mov
push
add
fmul
outsb
ja
sbb
add
mov
add
imul
ljmp
inc
aaa
insb
int3
out
cmp
dec
data16
add
arpl
or
iret
push
add
add
add
inc
sahf
fadds
jp
jge
movb
inc
add
sub
push
pop
repz
ss
out
push
add
add
mov
rolb
add
mov
or
add
addb
add
mov
add
out
std
xor
mov
inc
add
mov
add
movsb
add
push
add
add
loop
sub
jp
adc
add
xchg
add
jp
jbe
xor
xchg
add
cwtl
mov
adc
xor
sbb
cli
xor
push
push
add
cmp
je
sbb
cld
pop
fcompl
add
push
add
stos
jne
ds
jnp
movsb
add
je
or
sub
stc
push
add
lret
fwait
pop
cld
sarl
pop
or
add
adc
movb
add
pushf
xor
jbe
loop
jbe
xor
js
add
add
sbb
push
add
add
cmp
fisttpl
test
inc
add
loope
add
pop
add
or
lret
adc
and
add
add
inc
add
orl
add
mov
daa
sbb
fdivs
or
add
cmp
xor
loop
movb
shrl
mov
add
xchg
sbb
sbbl
and
int
xchg
aaa
add
xor
and
test
pop
sti
sahf
out
mov
adc
inc
add
add
fs
add
add
jbe
dec
fcomps
xor
sub
adc
lahf
outsl
loop
in
add
jns
aam
jne
adc
push
and
lahf
adc
subl
dec
aam
fisttpll
fwait
je
mov
lds
call
cmp
in
add
lcall
add
push
add
mov
add
add
ja
add
int
dec
insb
in
and
mov
add
fisttpl
push
add
sub
add
sbb
addr16
testb
cmp
add
add
jno
add
add
adc
fwait
movb
inc
add
hlt
add
sbb
cmc
cmp
mov
add
add
and
add
sub
add
outsl
jnp
adc
mov
lods
push
lods
lret
push
xlat
in
int
std
arpl
lock
sti
sub
jnp
out
add
aas
mov
add
daa
jmp
add
inc
or
mov
push
add
movl
add
imul
add
enter
adc
add
add
in
out
lock
xor
addb
nop
add
add
bound
mov
mov
or
arpl
and
xor
or
cs
mov
out
test
aaa
data16
add
cwtl
jg
sub
data16
add
mov
lret
jp
mov
or
adc
mov
in
push
mov
pop
fcoms
in
in
pop
push
add
pop
enter
jg
add
add
xchg
add
add
sub
iret
lcall
dec
jo
lret
pop
ljmp
pop
insl
mov
popa
mov
mov
mov
fsubr
pop
in
repnz
push
add
pushf
mov
add
test
js
add
add
add
pushf
jbe
daa
xor
xchg
enter
add
out
or
add
rolb
lods
push
cwtl
arpl
push
jne
leave
lock
dec
insl
dec
mov
popf
fadds
and
mov
daa
dec
stc
mov
add
dec
stos
or
ja
jge
add
mov
add
add
add
in
jle
int3
jg
gs
cmp
shll
pop
sbb
scas
scas
sahf
jno
sub
testb
cli
inc
xchg
lock
nop
add
or
je
ret
std
mov
push
add
popa
lea
mov
add
pop
rolb
sub
add
mov
add
push
xor
cltd
mov
cltd
ret
jg
mov
pop
dec
push
add
xor
xchg
pop
dec
adc
adc
pushf
inc
mov
sbb
pop
mov
lret
sub
and
mov
add
dec
pop
cmp
fbstp
add
loopne
ss
stos
cmp
push
add
out
aad
add
mov
cmp
inc
add
aas
popf
jne
add
add
aaa
push
push
rolb
je
stos
je
pusha
add
aad
stc
loope
in
add
mov
add
pop
negl
sbbl
dec
fucomi
xor
ffreep
out
test
inc
cmc
xor
inc
xor
lock
fistps
or
imul
and
add
add
add
mov
mov
mov
jp
add
add
xor
mov
rolb
lds
clc
push
stos
jnp
add
fstpl
add
rcr
xchg
jl
scas
cmp
addb
inc
decb
testl
sti
xchg
add
add
add
add
inc
mov
pop
and
dec
cmp
fisubl
add
xchg
hlt
add
cltd
outsl
sti
mov
stos
aas
gs
add
add
add
add
mov
xor
jge
add
aam
mov
pop
in
jae
add
addb
add
jle
dec
into
inc
add
add
std
movb
aad
dec
jg
pop
cmp
and
mov
xor
cmp
add
mov
or
jbe
lea
loopne
insl
pop
cmpsl
jp
cwtl
push
add
xor
aas
push
add
jecxz
fdivp
xchg
add
or
push
into
adc
or
inc
add
ljmp
add
xor
push
add
mov
imul
add
and
add
out
aaa
pop
xchg
sbb
add
add
add
add
call
rcl
add
scas
dec
cltd
push
add
add
mov
add
xor
sub
add
popa
mov
mov
addb
add
push
jae
cwtl
jmp
add
inc
and
pop
mov
sub
add
cltd
xchg
loop
add
loop
adc
xchg
xchg
popf
add
pop
add
adc
push
jo
fnstenv
mov
jbe
rolb
out
and
mov
mov
mov
scas
mov
cmp
cmpsb
add
int3
es
add
add
std
cmp
pop
xchg
mov
sti
in
cwtl
jns
add
mov
rolb
rol
out
dec
jecxz
add
mov
add
loop
mov
sbb
add
pop
xchg
mov
jae
add
mov
add
add
jnp
fldenv
pop
add
mov
and
mov
in
add
add
ja
add
add
push
xorl
xlat
sub
pop
add
mov
add
lcall
xchg
push
add
add
mov
mov
out
mov
cmp
xchg
jno
sub
mov
add
and
mov
int
add
inc
add
fimull
iret
bound
mov
mov
sbb
dec
add
nop
add
add
mov
add
movsb
add
add
add
push
add
ss
add
add
mov
add
leave
sbb
add
sub
jl
cld
xchg
add
dec
fcompl
test
jmp
mov
movsl
push
add
sub
call
sub
or
call
push
add
hlt
add
add
sbb
pop
mov
add
fxch
loopne
test
xchg
mov
imul
sbb
add
arpl
add
inc
clc
mov
mov
xchg
pop
stos
sbb
mov
lods
push
lods
out
mov
addb
pop
out
push
add
pop
xor
push
add
add
add
add
add
add
jecxz
sbb
mov
mov
pop
call
add
sub
adc
neg
stos
pop
mov
mov
mov
sub
pop
fdivl
xchg
mov
add
add
js
imul
add
dec
sub
xlat
dec
add
push
cmp
adc
pushf
frstor
adc
test
les
sub
jno
outsb
pusha
add
push
vpmacssdql
add
cmp
popa
or
add
ficompl
xor
xor
mov
test
lahf
pop
or
lock
adc
pop
int3
sti
into
mov
dec
pop
push
inc
add
popa
adc
scas
cmp
dec
loop
fidivl
add
mov
pop
iret
cmc
jno
and
js
add
pop
dec
dec
mov
jecxz
add
add
add
mov
add
add
popa
imul
rolb
or
arpl
les
jae
add
mov
cmpsl
mov
mov
negl
jbe
xchg
out
aaa
or
jnp
out
cmp
movsl
jbe
mull
add
add
ret
jg
xchg
jae
add
loopne
mov
inc
js
lods
or
sub
mov
add
faddl
add
cmp
add
std
addb
add
lds
push
mov
or
out
out
lret
jl
xor
xchg
add
add
movsb
add
add
sub
or
add
les
aas
and
mov
add
lret
sub
pop
jae
xchg
add
pop
xor
add
cmpsl
dec
pop
repnz
insb
aam
xor
ret
mov
or
ret
outsl
or
add
data16
add
repz
iret
lcall
add
test
add
inc
add
add
add
mov
add
cmpsb
add
add
adc
or
add
cmp
icebp
cmp
add
add
add
inc
rolb
jns
xchg
add
add
add
ljmp
xchg
add
push
add
cwtl
mov
lcall
add
std
push
int
fisttps
mov
hlt
add
outsl
add
and
add
xchg
sub
mov
add
sub
mov
sbb
bound
mov
loopne
inc
sti
jbe
xor
adc
add
jno
jbe
mov
nop
add
stos
test
fdivr
loope
aad
add
mov
xorl
cmp
mov
dec
pop
jb
cmpsb
add
dec
lock
mov
add
cmc
orl
mov
add
lret
fstps
int3
xchg
mov
xchg
pop
xor
jecxz
out
sets
xchg
je
lea
mov
dec
mov
dec
lea
xor
xor
fwait
jns
scas
mov
enter
mov
add
mov
add
jbe
cmp
test
inc
add
add
mov
xchg
add
sub
push
xor
clc
and
mov
test
sub
sbb
xor
cmpsb
add
push
psubq
int3
std
icebp
xor
adc
add
push
add
or
test
aaa
or
rolb
lods
push
add
adc
xor
into
jle
mov
icebp
xchg
addr16
cmp
movb
add
xor
insl
push
sti
int3
push
add
mov
add
mov
add
pop
sbb
add
test
cmp
insb
sub
adc
inc
sub
pusha
add
add
mov
add
pushf
xchg
add
fldenv
in
add
jae
in
inc
add
jne
add
cmp
inc
add
mov
test
dec
mov
jae
ja
dec
lret
dec
pop
sarl
add
mov
out
addb
push
nop
add
add
add
