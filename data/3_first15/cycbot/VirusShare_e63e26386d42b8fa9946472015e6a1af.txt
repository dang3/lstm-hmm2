lods
rorb
cmc
ret
nop
mov
in
mov
popa
aam
sbb
or
add
adc
mov
push
mov
into
dec
xchg
ljmp
cltd
adc
xchg
sahf
jno
addb
cmpsb
push
aad
jno
pop
mov
add
sahf
jge
test
add
and
mov
cwtl
int3
push
int
pop
out
in
mov
imul
faddl
adc
loop
mov
dec
cmp
fisttpll
add
pop
jge
add
add
sbb
cltd
arpl
aaa
add
popa
incl
and
js
mov
add
inc
add
insl
pop
cmp
sti
sbb
gs
add
mov
dec
imul
pop
mov
loop
xchg
xchg
mov
pushf
lcall
xchg
or
cmp
mov
int
add
loopne
xchg
mov
movsl
xor
or
aam
add
adc
fcomip
mov
movl
fmull
loopne
dec
les
push
or
dec
js
xchg
push
push
mov
cmpsl
loop
push
scas
and
add
iret
sub
pushf
or
fldcw
adc
xchg
aad
dec
push
sbb
rcrl
jp
inc
add
ss
popa
cmpsb
xchg
cs
push
or
nop
xor
xchg
rcr
inc
mov
mov
pop
sub
push
sahf
int
cltd
push
adc
inc
add
mov
add
cmpsl
xor
jecxz
add
test
leave
inc
loope
add
and
popa
sub
mov
add
test
test
popf
push
add
mov
popa
repz
cmp
pushf
fldl
loop
jl
sti
sti
cld
fdiv
ret
stos
adc
push
mov
pop
mov
cmp
cld
xor
add
sbb
ljmp
loopne
push
pop
adc
mov
lcall
pusha
add
in
xchg
pusha
add
nop
and
aam
movups
leave
pushf
hlt
lock
repz
mov
add
arpl
sub
add
scas
stc
or
fistps
scas
dec
aaa
adc
sbb
movb
add
scas
mov
pop
jp
cmc
mov
dec
pop
lret
popf
sbb
sub
jl
mov
cmp
inc
aam
jno
hlt
jle
and
popf
pushf
add
adc
outsl
xchg
loop
add
fsubl
cld
and
bound
mov
sub
out
mov
mov
ret
pop
test
push
test
imul
imul
dec
sub
imul
dec
fwait
mov
add
lret
popf
out
in
pop
dec
out
clc
in
add
xor
or
jbe
andl
jl
int3
xor
jb
imul
adc
mov
sub
add
iret
insb
pop
outsl
jb
test
addb
popf
sbb
push
shr
test
add
clc
dec
fwait
cmp
pop
add
movsl
push
or
testl
add
mov
dec
in
mov
clc
cli
xchg
int
mov
xor
push
jno
cmpsb
and
xchg
dec
or
mov
or
insl
ret
sub
js
cmp
jno
add
lahf
dec
in
xor
shll
jnp
bound
jecxz
push
incb
adc
add
xchg
or
push
or
dec
cmp
xor
test
stos
or
imul
push
push
gs
shlb
and
mov
push
mov
xor
add
movsl
pop
sub
in
insl
pop
jae
int3
adc
pop
pop
mov
add
repnz
stc
pop
shll
imul
flds
xor
sbb
mov
and
sub
add
xchg
push
pop
push
push
mov
cli
scas
cs
add
push
add
movsl
adc
sub
pop
imul
add
gs
inc
adc
add
push
aam
jmp
sbb
xor
add
sub
jl
iret
mov
jmp
stos
movsb
and
dec
jl
dec
mov
xchg
rolb
inc
add
push
out
xchg
pop
jns
add
scas
repnz
cmp
leave
int
addr16
out
clc
sub
add
xchg
addb
add
popf
jnp
add
nop
popa
xchg
sti
cld
outsb
xor
add
jnp
jl
pop
mov
fs
add
add
add
add
cmpsb
roll
mov
sub
push
into
popa
mov
ss
lcall
dec
sbb
fisubs
data16
add
nop
iret
out
insl
pop
into
jns
cmp
jmp
jmp
jl
fs
or
cltd
cwtl
lods
xchg
jnp
sbb
cmc
push
ds
add
pop
lgdtl
dec
mov
inc
push
das
inc
add
push
xchg
add
mov
fldenv
loop
jp
imull
lods
xchg
dec
aam
insl
xchg
xor
push
add
ds
add
add
mov
in
jmp
sub
aaa
xlat
push
add
jnp
or
insl
cmpsb
push
push
lods
in
or
cmp
lods
dec
xor
dec
mov
mov
add
add
in
mov
add
mov
adc
add
jecxz
add
cwtl
push
setg
lret
and
rcrl
ja
push
lods
shrl
or
sbb
out
mov
addb
sbb
in
lock
in
jns
push
dec
test
fdivrl
in
pusha
add
cmp
jbe
cmp
dec
cmp
insl
pop
pop
ss
test
je
mov
js
mov
les
lock
push
pushf
stos
xchg
dec
lods
or
mov
add
sub
sbb
je
test
add
movl
push
dec
leave
test
pusha
add
mov
push
mov
int
add
pop
xchg
iret
push
mov
add
es
sub
xchg
add
add
test
arpl
or
stos
xchg
push
push
jb
movsl
sub
flds
addb
aam
pop
notb
fiadds
push
loop,pn
add
xor
mov
pop
into
movb
out
mov
push
orl
fistpl
push
test
and
leave
ss
inc
sbb
lret
loopne
out
adc
arpl
dec
sbb
or
lahf
nop
jmp
data16
cmp
jp
dec
adc
cmp
xchg
mov
bound
mov
mov
data16
dec
inc
scas
mov
adc
shlb
rolb
dec
lea
je
jg
adc
fmul
push
call
push
cmc
sbb
jbe
sbb
rcrl
mov
sbb
call
add
push
dec
xor
wrmsr
test
stc
aaa
inc
add
sbb
push
inc
add
mov
jne
dec
aad
lahf
jns
cmc
sub
add
add
add
inc
add
cmp
pop
jecxz
insl
cli
ss
add
dec
jge
lcall
scas
in
les
cmp
jns
pop
aas
sbb
inc
mov
in
test
pop
push
push
aas
inc
cwtl
sub
and
add
in
lret
arpl
test
push
add
out
xchg
sahf
or
popa
add
pop
iret
adc
lods
iret
and
add
js
roll
mov
add
xor
or
lock
loope
lahf
mov
jp
mov
cltd
and
fnsave
repnz
jb
add
add
sub
cmp
adcl
bound
xor
push
mov
mov
flds
jge
movb
jne
fwait
hlt
test
add
add
add
xor
cmp
stos
jg
lret
sub
mov
add
add
sbb
dec
lcall
jl
ds
xor
cld
aad
js
das
fisubrl
pop
lods
sahf
stos
in
gs
pop
sub
hlt
hlt
mov
sub
cwtl
mov
jge
out
add
call
clc
inc
add
add
arpl
mov
fdivrs
mov
add
dec
mov
rcrl
dec
stos
ss
cmp
add
push
test
push
fwait
lahf
pop
in
jg
and
or
jmp
add
divb
inc
add
mov
lcall
push
add
pop
xor
and
sub
mov
fdivrs
sub
jg
aam
mov
iret
push
add
das
fscale
mov
mov
fs
pop
mov
add
push
lcall
xchg
aas
test
and
pop
mov
push
adc
fcmovbe
adc
divl
mov
cli
push
dec
icebp
lret
push
sbb
mov
scas
out
xchg
movb
jg
daa
loop
sub
add
adc
mov
add
hlt
dec
addb
jo
cltd
xor
outsl
xor
and
push
fmull
rolb
add
push
xchg
dec
mov
dec
jns
mov
mov
in
mov
mov
mov
push
pop
jb
loop
inc
dec
cmc
and
dec
aaa
pusha
add
ljmp
sbbl
popf
sub
xor
sub
repnz
mov
fcmovb
je
sbb
and
add
sarl
lods
sbb
lsl
xchg
clc
sub
bound
cli
mov
mov
lret
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
add
les
push
cmpsl
in
xchg
test
xlat
mov
push
cs
mov
lds
orl
test
or
mov
mov
sbb
in
mov
adc
push
mov
inc
add
gs
popa
scas
clc
push
adc
xchg
test
jmp
sbb
jo
dec
push
mov
add
add
pop
xlat
xor
xchg
or
sub
jg
bound
fwait
addb
jge
rolb
cmp
sbbl
push
cltd
bnd
rolb
shrl
jmp
mov
addb
lahf
sarl
icebp
sarb
icebp
das
in
aad
sti
lock
add
mov
imul
insl
xchg
cmp
jbe
sub
adc
mov
jmp
lahf
or
push
jbe
inc
dec
fadd
add
movsb
mov
inc
movb
mov
push
vpmaxub
repnz
push
fnstcw
add
sti
fsub
dec
mov
xchg
mov
inc
xchg
cmp
lea
and
add
mov
add
popa
jmp
add
and
or
add
out
adc
adc
mov
add
ljmp
xchg
pop
loopne
push
test
inc
xor
mov
fucomi
das
dec
icebp
sub
fidivl
add
or
fwait
inc
sbb
into
pop
mov
pusha
add
jecxz
mov
or
cwtl
jg
int
add
sub
sbb
mov
add
aad
jp
inc
add
add
addb
add
xor
or
ds
add
xchg
mov
and
push
sbb
xor
add
jecxz
add
pop
add
pop
pushf
sarb
out
inc
add
add
clc
jb
mov
subl
sub
cmp
fmull
dec
xor
add
addr16
xor
iret
std
sub
add
lret
and
movsl
fiadds
jnp
cmpsb
movsl
mov
jg
call
out
shrl
ds
or
fisttpl
addb
adc
shlb
sub
icebp
xchg
cmp
mov
pop
cmp
into
push
cwtl
loop
cmp
ljmp
mov
add
mov
pop
pop
popa
subl
add
movsb
mov
aaa
add
inc
add
movb
sub
cmc
sub
push
add
mov
pop
xchg
fwait
cmp
mov
sub
in
std
push
les
jb
push
add
dec
pusha
add
mov
aad
add
inc
add
in
pop
or
test
jne
xchg
xchg
dec
pop
out
and
adc
jnp
xchg
rol
cmp
mov
or
in
addb
cli
sbb
jnp
inc
cs
sub
scas
sbb
aam
lods
jns
add
cld
stc
jbe
xchg
and
mov
and
pusha
add
sti
in
mov
arpl
add
xchg
push
out
call
in
adc
cmpsl
cli
or
rcl
dec
cmc
and
cmpsb
idiv
dec
loope
mov
aad
inc
and
addb
test
imul
loopne
add
add
addb
stos
stos
enter
in
mov
push
rolb
andnps
add
add
mov
mov
aas
lock
cmp
push
push
addr16
add
int3
aam
cmp
sub
cmp
cmp
sbb
les
push
xor
add
sbb
loope
xlat
lret
mov
jmp
mov
xlat
call
sub
add
sub
insl
adc
ror
and
xlat
inc
add
add
out
sbbl
dec
cltd
dec
add
jo
test
mov
cmpsb
ret
sbb
mov
loopne
inc
jge
ja
aam
ja
stos
out
imul
inc
adc
mov
hlt
or
add
test
lds
ljmp
addb
dec
ljmp
or
scas
inc
add
in
jge
enter
add
pop
and
pop
adc
add
dec
stos
xor
add
pop
pop
jge
xchg
and
jmp
or
mov
in
ss
xlat
adc
pop
cmpsl
icebp
lea
dec
repnz
hlt
into
add
rcr
inc
add
push
inc
ret
sbb
roll
fsubs
mov
hlt
mov
adc
sbb
push
mov
sbb
adc
push
loopne
mov
mov
sub
and
dec
lods
pop
add
jl
add
shlb
loop
add
sarb
ds
pop
iret
movb
test
imul
inc
arpl
cmp
loope
mov
xchg
mov
and
mov
xchg
stos
iret
dec
aas
inc
pop
inc
add
lods
lods
xor
adc
or
ljmp
jle
cmpsb
cmp
ss
mov
lahf
mov
push
cmp
scas
lock
cltd
repnz
inc
mov
adc
ds
pop
cs
loopne
add
sbb
cmp
movb
pop
ja
dec
adc
mov
mov
adc
fwait
cmp
add
mov
lds
dec
hlt
stos
mov
inc
loop
add
stc
fldcw
jecxz
jno
xor
lods
mov
inc
add
add
push
xchg
mov
je
mov
out
mov
pop
fimuls
testb
test
dec
add
cmpsb
aad
or
dec
cmp
dec
fcomps
add
push
loop
or
and
or
push
mov
hlt
pushf
pop
scas
les
fisttps
sub
stc
lods
outsl
xchg
and
jnp
int
add
mov
xor
test
mov
addb
mov
pop
jmp
addr16
and
add
into
daa
pop
mov
lods
loop
mov
cltd
cltd
xchg
push
inc
test
int3
xor
or
imul
sbb
push
clc
jne
xchg
gs
dec
xchg
mov
es
cmp
icebp
imul
cmp
arpl
mov
cmp
mov
jmp
test
ja
add
dec
inc
shll
mov
outsl
cltd
push
stos
add
add
xor
cmpsb
mov
or
fdivrl
adc
push
cmp
int3
sbb
sub
cli
inc
out
popf
imul
add
xchg
repnz
add
jp
leave
ljmp
and
in
add
test
aad
sub
ffreep
add
jae
xor
jae
andl
shrb
in
inc
add
imul
int
mov
iret
mov
mov
lods
aaa
outsl
roll
sbb
jg
or
loopne
add
pop
lret
repz
pop
lds
add
flds
jg
fisubrs
jae
lds
lret
cltd
mov
cwtl
pop
out
jge
and
ret
popa
lock
and
addr16
mov
repnz
test
sub
roll
std
dec
in
cmp
fdivrs
and
sbb
add
sbb
add
pop
xchg
rorb
push
lods
push
and
int3
imul
mov
loopne
fstl
adc
mov
xchg
push
xorl
adc
fists
loope
out
add
cs
mov
push
movb
adcl
jo
pusha
add
mov
mov
add
xchg
jae
fisubs
xlat
sbb
adc
movsl
movb
add
cld
inc
fsubrl
sub
add
imul
dec
test
in
aad
lahf
leave
repnz
mov
js
lods
cmp
mov
jge
loop
nop
xchg
loope
add
mov
stos
pop
cs
push
lods
dec
pop
sub
or
mov
cmpsb
stc
or
sbb
and
cwtl
and
inc
add
lods
in
add
inc
add
xlat
movb
sub
lea
gs
dec
inc
add
push
pop
inc
add
add
sub
add
adc
daa
fsts
test
in
lds
adc
xchg
mov
xchg
mov
add
icebp
mov
lret
int3
or
shrb
mov
dec
sbb
shrb
sub
mov
jnp
xor
ret
addb
test
add
loopne
popa
cli
push
ret
push
mov
sub
and
sti
setbe
int3
fs
aas
add
pop
mov
adc
mov
fbld
xchg
mov
dec
scas
dec
dec
sub
out
out
and
cmp
add
add
add
lods
or
out
imul
mov
mov
sub
cwtl
adc
dec
insb
sub
cmp
push
nop
or
mov
and
les
mov
mov
sub
pop
jmp
pop
into
dec
xor
adc
loopne
insb
pop
test
jecxz
inc
sti
les
dec
jnp
jecxz
add
sub
fadd
push
xchg
pop
aad
pushf
dec
test
mov
sbb
and
scas
cmp
xor
stc
lret
add
dec
mov
xchg
hlt
mov
dec
push
xor
cld
xor
inc
add
adc
loop
dec
adc
mov
sahf
mov
add
add
push
pop
push
mov
cmp
mov
shlb
add
and
iret
cmp
mov
or
dec
push
add
add
in
lret
fmuls
jns
inc
add
pop
out
jb
aas
cs
jno
adc
push
push
out
repnz
pop
mov
xchg
cmc
into
xchg
push
outsl
sub
lds
or
xlat
xchg
mov
mov
xlat
and
or
dec
fistps
addr16
sub
cmp
cltd
mov
out
jle
jmp
mov
rcr
in
pusha
add
lds
push
in
std
fwait
jae
add
add
cs
pop
enter
ljmp
fiaddl
bound
push
push
inc
add
sub
daa
sub
lret
das
test
sbb
in
imul
jbe
out
or
xor
fildll
sbb
pop
jns
push
pop
adc
scas
leave
dec
push
push
jle
mov
sbb
add
xor
add
xor
dec
aas
outsb
xor
cli
movsl
dec
stos
insb
cmp
mov
imul
stos
dec
das
mov
add
add
jg
clc
fldenv
les
pop
push
inc
add
jp
and
dec
cmp
inc
add
sub
rcll
add
out
or
leave
lea
sbb
sbb
ds
push
mov
lret
or
stos
and
movb
sbb
sbb
mov
sbb
sbb
ljmp
out
push
pushf
and
pushf
ret
push
add
jge
mov
xor
movsb
jnp
popf
inc
inc
mov
lret
lock
lods
mov
and
xor
mov
adc
loope
cmp
add
int3
xchg
and
cmpl
cwtl
sbb
int
dec
ss
loope
xchg
fnstenv
adc
cmp
stc
stc
push
mov
dec
mov
daa
les
out
adc
push
mov
mov
or
add
lret
aad
fisubrs
pop
mov
pushl
fidivrs
out
imul
pop
adc
out
mov
imul
cmpsl
adc
adc
fbstp
sub
dec
scas
cmovs
repnz
jmp
mov
or
mov
pushf
dec
ret
pop
cld
add
iret
sub
fwait
les
insb
shll
pushf
pop
std
ja
push
mov
dec
test
sbb
sbb
add
or
xchg
xlat
int3
insl
sbb
test
mov
dec
mov
movb
add
loope
loope
pop
sub
pop
mov
sbb
cmp
loop
push
repnz
mov
cmp
push
test
test
stc
repz
add
xchg
cmp
adc
sbb
jne
mov
mov
nop
ss
mov
mov
mov
xor
pop
int
cs
movsl
int3
xchg
movsl
inc
xchg
cmp
cwtl
fsubr
mov
and
mov
pop
push
dec
mov
mov
cld
pop
mov
and
sbb
loopne
jae
in
jmp
add
mov
and
rcrl
push
rolb
jno
addb
mov
aad
mov
int3
adc
in
sub
mov
inc
add
mov
sub
loopne
add
das
mov
sbb
add
sub
dec
adc
jmp
or
mov
mov
mov
addb
and
pop
inc
add
push
inc
add
leave
cmpsb
sbb
sbb
fsubrs
cpuid
jl
movsl
mov
popf
rclb
mov
mov
xchg
sbb
xchg
mov
cmp
add
rolb
and
test
xor
and
or
jg
leave
jae
rcr
push
sub
mov
shr
bound
jecxz
mov
loope
fwait
les
leave
sbb
jbe
test
arpl
jno
or
in
popw
mov
popf
xchg
lock
mov
mov
pop
mov
dec
jns
std
movb
in
fisttpll
cli
adc
sbb
add
mov
addb
jp
sub
stos
sbb
add
or
add
push
lock
xchg
mov
push
inc
add
cmpsb
sub
add
lahf
add
mov
fs
mov
cmc
andl
sub
int3
int3
pop
into
jnp
jge
mov
lret
fmuls
in
iret
jle
leave
dec
add
jnp
bound
mov
adc
xchg
sub
fldl
leave
scas
mov
cmp
jae
add
lahf
cld
out
pusha
add
mov
or
repnz
cmp
add
add
jge
mov
fs
add
mov
lods
xor
add
mov
pop
xchg
dec
int
mov
sbb
mov
imul
and
ja
or
add
bnd
lods
popf
leave
gs
inc
add
mov
push
xchg
jns
add
sti
push
mov
cmp
and
fsubs
pop
lds
sub
mov
sub
lret
mov
push
and
pop
mov
add
fcompl
xor
mull
add
jmp
add
mov
inc
push
xor
pop
jp
hlt
cs
in
cs
insl
cmpsb
stos
lock
fildll
mov
mov
outsb
and
popf
fimuls
sub
adc
addb
adc
fidivrl
out
add
mov
mov
push
shl
call
ss
call
add
fwait
shll
dec
cmpsl
stos
sub
xor
sbb
jns
xchg
and
out
arpl
sbb
add
xlat
cmp
or
mov
arpl
add
int
sahf
jle
test
outsb
scas
roll
mov
rolb
xchg
lods
scas
xlat
mov
sti
xchg
sbb
jle
jnp
popa
sub
xchg
jge
fxch
pop
jo
pop
mov
inc
add
xor
adc
xchg
and
imul
and
push
dec
iret
push
sbb
add
pop
cmpsl
in
fistl
cmp
jb
lea
cltd
test
or
add
inc
add
push
int
stc
lods
jp
mov
add
incl
nop
pop
in
das
push
add
cmpsl
into
mov
movsb
sub
out
data16
add
xchg
mov
stos
or
les
mov
outsl
testb
fimull
test
add
cmpsb
pusha
add
sub
jns
cwtl
or
cmp
or
das
clc
xlat
imul
adc
push
addb
in
daa
sub
mov
mov
xor
mov
mov
fs
add
mov
mov
jb
pop
xor
mov
inc
push
xchg
cmp
inc
les
inc
add
push
ljmp
sbbl
and
push
pushf
aaa
pop
jge
sbb
adc
mov
and
pushf
mov
int
jmp
mov
mov
pushf
jge
in
out
out
jne
and
imul
inc
jae
push
test
insb
push
fldl
shrb
mov
sub
adc
cmp
outsb
xchg
or
repz
or
fiadds
jo
sub
out
popf
std
pop
mov
icebp
or
scas
xor
into
push
seta
add
add
dec
js
mov
loope
or
lock
cmp
add
add
test
fs
lret
or
push
sub
pop
imul
add
fs
dec
sti
push
add
das
cmc
sti
and
mov
and
add
stc
push
add
je
shrb
jno
test
jae
addb
cltd
pop
out
js
adc
add
dec
sbb
or
cld
sbb
es
adc
call
sarl
int3
in
xor
test
xor
movsb
addb
jae
roll
dec
pushf
jmp
cmp
xor
and
cld
lds
sub
sbb
mov
call
add
cwtl
popa
xchg
mov
dec
jmp
add
lds
dec
dec
add
andl
addb
mov
or
sub
movl
ucomiss
mov
rolb
or
mov
add
into
xchg
rorl
in
add
or
mov
push
adc
and
adc
lret
test
push
add
xor
push
jae
add
sub
sbb
in
fwait
out
stos
lds
mov
int3
jg
inc
aaa
stos
pop
xchg
mov
je
test
pop
jno
push
add
cmc
add
movsl
pop
mov
mov
add
xchg
popa
scas
and
leave
sti
loop
js
mov
xchg
sbb
sub
jp
add
push
in
jnp
cwtl
jae
rolb
outsl
leave
stos
inc
push
pop
sbb
xchg
bound
push
int
sahf
adc
cmpsb
or
adc
mov
add
mov
aad
sub
add
aad
inc
add
pop
push
sahf
mov
pop
rolb
add
lahf
ja
andl
dec
test
lock
and
clc
adc
or
mov
fs
imul
mov
stos
cltd
fcmovnbe
xchg
mov
push
xchg
mov
lods
pushl
mov
mov
std
out
bound
in
mov
add
cmpl
jge
sbb
pop
cld
rorb
aam
inc
fcoms
lds
es
lcall
and
repz
cmpps
es
imull
lods
and
inc
leave
into
imul
repnz
sbb
inc
mov
mov
rcrb
jo
add
fs
in
add
add
push
jl
and
add
add
test
fcmove
cmp
adc
mov
lcall
stos
xchg
and
je
cmpsl
mov
xor
add
push
test
xor
pop
cli
push
ljmp
aam
sbb
lret
cmpsb
push
sti
arpl
clc
pushl
push
nop
jnp
into
cmp
add
aad
pop
jno
jne
pop
xchg
xchg
aam
fldenv
pop
or
sub
lods
pop
movsl
stos
pop
pop
jne
push
pop
pop
lods
sahf
jo
in
cld
testb
inc
add
adc
pop
cmp
incb
and
and
divl
push
outsl
push
into
outsl
adc
pusha
add
mov
bound
sub
xor
mov
jmp
sbb
add
cwtl
xorl
add
nop
jbe
mov
fistps
cmc
cmp
add
outsl
ljmp
sub
aas
mov
jo
add
add
xchg
dec
int3
xchg
mov
rclb
dec
divl
sbb
shll
mov
cs
xor
xor
xchg
mov
pop
dec
dec
push
xchg
xchg
enter
ret
loopne
js
movsl
aas
cmp
fcom
stos
pop
stos
cmc
pusha
add
jmp
leave
mov
adc
jecxz
jg
arpl
inc
lcall
dec
popa
std
push
sub
jp
push
test
xlat
xchg
inc
fst
mov
fwait
jge
les
inc
ds
jge
pop
xor
addb
cwtl
ss
movsb
daa
add
dec
xchg
cld
ljmp
inc
add
popa
adc
or
sub
lret
push
dec
push
gs
ja
add
stc
dec
int3
enter
and
dec
cmpsb
aas
jae
sub
js
mov
aam
das
addb
lahf
cs
add
arpl
fistl
fcmovnbe
out
inc
add
sbb
mov
iret
shr
mov
mov
adc
or
jmp
dec
adc
xchg
out
mov
add
stos
add
jge
sbb
xchg
movsl
or
sub
fstpt
clc
dec
mov
cmp
out
cli
movb
hlt
stos
je
lret
sbb
stc
mov
push
in
test
mov
cmp
mov
repnz
xor
sub
add
loop
inc
cld
jns
pop
and
push
add
test
out
pop
repz
out
mov
inc
add
add
add
adc
inc
add
pop
clc
jl
out
ficoml
push
add
or
cmp
and
es
ljmp
je
push
dec
mov
cmp
popa
xchg
inc
xor
mov
cmpsl
adc
mov
mov
adc
mov
aad
jle
cmp
aam
out
mov
fcompl
xchg
cmp
scas
xchg
or
lock
inc
add
jae
mov
int3
sub
sbbl
or
add
fdivrl
add
faddp
add
push
lods
sub
divb
xchg
cmp
push
adc
xor
pop
addr16
negb
mov
lcall
mov
pop
mov
das
mov
mov
add
adc
add
fisubrl
or
sub
or
call
xchg
and
mov
sbb
sbb
inc
xchg
daa
adc
out
fldl
stc
mov
add
lds
mov
mov
cmc
cmpsl
mov
ja
aaa
adc
and
idivb
clc
in
out
adc
add
mov
popf
dec
bound
jg
mov
push
cmp
call
pop
rclb
imul
pop
push
outsb
xlat
sub
fdivrl
cwtl
in
mov
dec
mulb
jg
and
je
sbb
cmp
lcall
cmp
xor
frstor
add
and
dec
outsl
clc
jno
shll
xchg
addb
or
addb
mov
pop
in
cltd
lock
sub
cs
pop
mov
or
or
push
movb
push
nop
cld
fs
xor
shlb
add
cmpsl
lds
push
and
or
cwtl
inc
add
or
cmc
push
out
jge
mov
js
or
hlt
fists
cs
cli
cld
push
pushf
adc
xor
test
add
clc
fimull
and
in
fistl
lret
jl
push
add
mov
push
imul
jns
xor
sub
add
jge
add
icebp
mov
add
sti
xor
iret
mov
in
cmpsb
mov
cmp
push
inc
addb
fsubrl
insb
sbb
cwtl
xchg
mov
pop
sahf
ss
je
fwait
data16
fxch
ficoml
add
dec
mov
xchg
das
cmp
and
sbb
flds
mov
mov
sbb
and
fisttpl
mov
and
adc
sahf
nop
loope
mov
mov
ds
aaa
pop
daa
lea
xchg
test
pop
push
sbb
xor
les
jecxz
gs
cmpsb
jecxz
sti
dec
clc
movsl
sbb
xchg
cld
pop
out
dec
push
add
push
cmc
mov
mov
jl
lahf
mov
mov
xchg
mov
xchg
xor
and
pop
ss
sbb
jecxz
mov
xor
sub
mov
push
sbbl
lret
notl
pop
mov
push
jl
gs
stc
or
divb
cmpsb
fs
and
ss
mov
xchg
sahf
xchg
pushl
xchg
xlat
test
fbld
jo
sub
xchg
lods
xchg
jne
push
decb
shlb
jmp
lret
add
mov
test
mov
rcrb
xchg
mov
cmp
mov
jmp
mov
sub
xor
jb
mov
add
addr16
das
insl
clc
cmpsl
mov
pop
jge
and
aad
sti
inc
mov
lds
or
das
mov
stos
or
lods
insl
outsb
xchg
popa
push
and
jl
push
pop
je
pop
aam
arpl
pop
loop
loop
or
mov
jns,pn
lock
push
add
dec
dec
or
in
jl
imul
mov
sbb
in
inc
addb
mov
xchg
idiv
std
je
insl
xor
pop
jb
add
jbe
rolb
add
stos
jl
fcoml
sbb
mov
mov
and
pushl
xor
pop
push
cmp
mov
add
dec
icebp
sub
addb
or
imul
leave
addb
insb
ret
inc
add
or
popa
jge
repnz
daa
js
ret
and
sub
out
pop
jle
mov
test
sub
movb
dec
cmp
pslld
aad
lds
mov
pushf
cwtl
add
shrb
das
lahf
push
jg
adc
pop
push
loop
repnz
nop
xchg
dec
add
pop
cwtl
pop
data16
add
and
icebp
movl
adc
mull
add
sarl
stos
decl
cld
fwait
dec
stos
lret
dec
xorl
data16
stc
test
adc
aad
xchg
adc
and
les
push
mov
out
lret
inc
imul
add
into
popa
cmc
pop
fcoml
sbb
inc
add
sub
and
loop
rol
dec
clc
sahf
mov
dec
add
sti
pop
subl
cmp
jmp
rolw
stos
mov
mov
jp
das
xor
into
add
jge
fmuls
sub
in
jno
cli
dec
add
lock
lds
pushf
jp
add
les
or
daa
xchg
stos
std
dec
cmp
lahf
jnp
insl
int3
xchg
mov
dec
dec
sbb
shl
push
jo
jl
iret
jae
add
mov
mov
sbb
enter
push
mov
push
add
xor
dec
mov
sbb
cmpsb
xchg
in
enter
xlat
mov
mov
xor
cmp
mov
sbbl
faddl
and
add
inc
add
xor
test
das
ds
inc
add
fdivrl
test
xor
popf
sub
push
in
pop
mov
test
mov
xor
xchg
loope
roll
stos
pop
pusha
add
js
sbb
mov
add
sbb
addb
add
sahf
or
lcall
ficoml
das
dec
sbb
fs
cmc
in
push
pop
movsl
daa
movsb
mov
inc
add
mov
in
cmp
ljmp
add
das
fsubrp
pop
pop
jg
filds
add
mov
xchg
cmp
pop
dec
mov
icebp
sub
fs
into
into
adc
cmpsb
xchg
lahf
into
xor
hlt
mull
popf
test
add
and
leave
enter
dec
jbe
mov
fsts
pushl
lock
iret
jae
xchg
cmp
stos
out
mov
sub
pop
adc
sbb
dec
ret
push
add
mov
mov
adc
add
fcom
xlat
add
test
pop
mov
cmp
or
icebp
cmpsb
scas
test
push
xchg
repnz
add
xchg
dec
test
pusha
add
mov
xor
subl
movb
add
add
and
xor
sti
pop
scas
pop
aas
loopne
dec
insb
add
mov
pop
mov
stc
stc
pop
cli
or
inc
add
add
add
and
lds
cmc
lods
mov
xlat
dec
inc
add
loop
and
enter
push
sbb
push
subl
shl
jo
cmp
fwait
std
pop
fwait
rorl
fbstp
mov
add
or
repz
popf
add
push
sbb
fildl
insl
inc
add
roll
lods
mov
mov
cmp
les
mov
mov
fimull
add
adc
sahf
xor
mov
scas
fdivl
ss
sahf
repnz
or
dec
mov
and
arpl
addb
mov
cmp
jae
mov
addb
push
add
sbb
addb
mov
imul
ja
movsb
dec
add
inc
pop
pop
popa
jmp
add
leave
push
add
lcall
xlat
mov
add
sub
int3
repnz
idivb
inc
add
mov
mov
push
and
mov
das
notb
push
xchg
jg
out
fucomp
ret
xor
push
pop
fstps
add
add
ss
pop
jg
flds
pop
insb
mov
and
roll
xor
xor
push
inc
add
jne
insl
stc
lahf
int
or
sbb
pop
sbb
hlt
in
and
mov
sbb
aad
decb
jle
or
hlt
xchg
mov
mov
mov
jno
arpl
ret
gs
sub
add
mov
inc
add
adc
arpl
movsl
stos
and
jl
addb
jns,pt
add
call
xor
xchg
fwait
mov
inc
add
dec
add
xlat
or
int
dec
inc
sub
fstpl
push
inc
adc
lcall
mov
int
fsubrl
xor
add
sub
pop
ja
add
adc
add
add
add
add
enter
rolb
xor
aas
sbb
mov
sub
adc
or
stos
xchg
add
rolb
dec
mov
icebp
shld
lcall
add
sub
pushf
push
mov
stos
mov
adc
loop
push
dec
dec
xor
jb
jo
jl
add
in
in
dec
dec
or
mov
and
jns
add
push
icebp
and
xchg
insb
scas
xor
dec
mov
jl
push
cmp
icebp
inc
cmp
sub
aaa
push
pusha
add
cld
sbb
lods
mov
cmp
out
data16
cwtl
jnp
test
mov
test
push
shll
pop
dec
and
outsb
ret
jbe
or
cld
inc
sti
imul
test
mov
sbb
dec
or
sbb
fmull
pop
add
mov
or
inc
lret
jle
mov
mov
dec
or
xchg
jb
dec
mov
push
call
push
mov
les
movb
sbb
pop
imul
push
iret
clc
or
adc
lds
addr16
sbb
or
sub
push
add
fldcw
stos
int3
hlt
pop
cmp
mov
pop
ds
pushf
xchg
lock
aam
sub
dec
xor
subl
add
aaa
testb
jnp,pt
out
je
adc
cs
dec
mov
push
cmp
mov
rcrl
mov
rorb
sub
pop
enter
mov
jno
add
jae
add
and
lea
sbb
pop
mov
lcall
sahf
testl
add
sub
movsl
xchg
jns
mov
clc
movsb
pop
pop
cmpsb
push
add
mov
pop
lret
repnz
xchg
pushf
popf
lods
lea
dec
dec
pop
sub
jle
adc
sub
adc
fwait
or
pop
movsb
xchg
int
and
call
mov
mov
rolb
sbb
js
mov
add
aaa
jp
add
ret
mov
leave
addb
fwait
mov
sbb
add
std
cmc
or
fisubrl
xchg
fsts
add
fs
ja
add
adc
cwtl
jae
lea
sbb
sbb
jns
ss
and
test
or
lods
sbb
ret
test
pop
rolb
push
xchg
sbb
pop
jle
les
sub
jno
sub
ds
pop
dec
inc
mov
jge
test
pushf
mov
int
fdivl
jecxz
push
push
or
enter
dec
mov
mov
imul
dec
das
sub
sbb
push
loope
mov
xchg
int
dec
pusha
add
add
xor
lods
test
mov
add
push
int
dec
std
notb
scas
loope
mov
add
ror
dec
xchg
aad
mov
add
or
addb
push
aad
enter
add
stos
popa
push
or
fwait
lock
out
mov
jo
notb
cmc
hlt
adc
xchg
xlat
stos
ds
jp
mov
adc
and
xchg
popa
mov
adc
xor
xor
push
pop
pop
xchg
push
outsb
fists
add
fdivl
je
int
or
mov
push
jns
fsubs
xchg
push
cmpsl
cmp
jo
mov
test
and
mov
jae
jg
fwait
daa
outsb
cltd
add
loopne
xchg
popl
std
repz
into
jnp
int
lahf
rcll
mov
fcoml
mov
pop
iret
outsl
repz
add
jb
das
adc
sbb
addb
xchg
cltd
daa
sub
push
movb
mov
lods
test
sbb
out
fisubrs
add
pop
and
or
xor
out
or
pop
and
and
xchg
push
add
lods
adc
jns
jmp
jae
cmpsl
negb
clc
pop
and
addb
iret
ss
push
std
and
ss
test
add
aas
sbb
inc
add
add
push
adc
arpl
cwtl
sbb
and
dec
cltd
bound
shll
sub
mov
dec
jle
sub
add
js
add
pop
test
lcall
jge
add
mov
lea
xchg
out
aaa
nop
lcall
jmp
cmp
and
and
ds
aas
aam
xchg
ja
dec
mov
movb
lret
loopne
sbb
add
and
sub
pushl
enter
sub
sub
insb
out
rolb
jecxz
bound
daa
sub
cmpsl
fwait
xchg
xchg
mov
lods
movb
sbb
insb
xchg
icebp
nop
fs
add
stc
jns
push
jo
mov
add
out
out
pop
mov
js
sub
dec
and
jb
add
rclb
pop
aaa
and
pusha
add
fld
add
leave
mov
jl
mov
xor
xchg
ss
mov
xchg
loope
or
stos
int3
push
mov
fs
add
fstps
xor
jle
sti
mov
dec
aad
add
jle
add
das
das
cmp
mov
out
sbb
push
cmpsb
or
push
add
sbb
add
mov
sbb
pushf
pop
lret
gs
add
mov
add
jae
lahf
and
and
jo
movsl
add
xchg
add
cld
rolb
mov
movsb
jns
add
fcmovbe
mov
sub
out
sub
and
in
mov
mov
out
fcomip
adcl
sub
js
inc
insl
xor
lret
in
xchg
imul
pop
jo
add
and
std
cli
inc
lds
popf
fdivrl
sti
or
inc
add
add
fdivrs
test
scas
ss
pushf
jbe
stos
adc
mov
sbb
arpl
jne
lret
jnp
lret
sub
add
lcall
mov
std
mov
xlat
mov
and
addb
cmp
std
mov
fistpl
and
cld
add
shll
jmp
jg
pop
add
out
xchg
shrl
jb
push
sub
xor
and
mov
mov
sbb
aad
sub
push
gs
fisttps
add
es
movsl
lods
mov
pop
sbb
fldt
mov
mov
pop
push
add
mov
inc
cmp
cmc
sub
ds
fdivl
test
mov
add
mov
hlt
arpl
in
cmp
xor
push
add
sub
scas
andl
int3
cwtl
into
xchg
jno
mov
into
sbb
sbb
cmp
xlat
mov
sbb
jbe
jl
mov
lods
add
jecxz
vpmuludq
cmc
mov
add
clc
in
pop
jb
aaa
shlb
js
push
xor
xorl
insl
movsb
loopne
and
jle
jne
mov
cwtl
cmp
cmpsl
lock
repnz
and
ficoml
fcoml
lret
movsl
cwtl
jo
cmpsl
xchg
rolb
lahf
or
es
mov
mov
popf
jne
jge
repnz
inc
sbb
loopne
fsts
or
add
push
pop
inc
add
mov
jge
pop
xchg
sbb
add
out
lcall
xchg
jg
add
int
xor
adc
out
lds
jmp
add
add
mov
insb
shlb
pop
es
lods
add
pop
imulb
out
mov
xchg
or
push
movsb
imulb
add
dec
xor
mov
mov
pop
xor
sub
js
lea
leave
in
inc
add
rorl
ret
popa
adc
scas
jae
add
sbb
pushf
loopne
pop
push
adc
and
push
adc
test
icebp
mov
pop
test
jno
out
or
mov
jle
sbb
mov
gs
sbb
enter
ljmp
add
lock
mov
add
mov
dec
arpl
decb
fisubrl
lret
popa
adc
xchg
cwtl
or
xchg
sub
inc
add
pop
inc
add
aam
bound
cmpsb
fdivs
sbb
bound
test
mov
call
out
sub
dec
cmp
icebp
movsb
test
fwait
cltd
fstpl
push
cwtl
imul
out
test
jns
jmpw
cmp
add
sti
mov
aam
gs
inc
mov
lds
mov
add
sub
mov
dec
and
mov
gs
add
jge
pop
or
push
test
popa
scas
lds
jns
das
enter
mov
or
add
jl
aaa
push
cmp
or
fucom
xchg
cltd
or
iret
adc
imul
add
mov
mov
jae
adc
repnz
aad
pop
sbb
xchg
repz
rcrb
mov
pop
lret
out
jmp
lcall
lods
and
mov
movsl
jg
mov
mov
nop
movsb
rdpmc
sbb
mov
mov
add
or
inc
mov
add
mov
jl
pop
cmp
pushf
or
add
add
aam
push
fidivrl
les
pop
lret
nop
jmp
jp
add
inc
jle
aaa
lods
into
movb
add
cmp
mov
sbb
inc
pop
fbstp
push
mov
fsubr
push
addb
loope
hlt
icebp
outsl
cs
pop
in
mov
push
cmpsl
lods
dec
cmp
rorl
or
imull
inc
add
fs
lret
dec
sub
in
mov
cld
inc
add
mov
mov
pop
das
sub
loopne
leave
mov
push
rolb
add
add
xchg
or
mov
xchg
cli
ss
jl
test
push
mov
add
add
adc
movsb
aam
dec
xor
jle
jmp
hlt
mov
add
mov
andl
push
add
sub
lcall
out
adc
add
ljmp
jo
hlt
sub
and
rol
add
jbe
std
xor
adc
out
ljmp
cmp
jecxz
xchg
bound
and
adc
add
pop
mov
jp
in
mov
addb
sub
mov
push
cltd
mov
mov
add
add
cmp
push
dec
stos
and
mov
add
bound
mov
xlat
or
dec
shl
out
cmp
pop
js
push
add
dec
sub
pop
pop
xor
add
dec
mov
sub
movb
mov
rolb
pop
adc
hlt
leave
jb
lret
and
int3
outsb
inc
sbb
jecxz
dec
add
call
outsl
lret
mov
xlat
cmp
mov
and
push
fwait
mov
sbb
jae
ret
push
ja
movb
add
pusha
add
test
sbb
inc
sub
add
push
loop
pop
xchg
pop
std
mov
dec
cmp
imul
popf
pop
ja
bound
ud2
mov
inc
push
pop
fwait
xchg
push
mov
imul
fs
add
pop
push
clc
outsb
push
add
jns
arpl
push
icebp
pop
repz
xchg
sub
jecxz
das
pop
xchg
out
mov
inc
xchg
es
sbbl
fwait
inc
int
fsts
sbb
mov
mov
mov
lahf
inc
add
add
rolb
fistps
add
enter
lea
add
cmp
fdivl
call
add
cmp
sbb
mov
add
jno
and
fdiv
nop
sbb
fcomi
std
inc
je
divb
stc
xor
popf
addb
push
sub
sbb
je
add
push
fistl
in
add
repz
sub
mov
icebp
mov
addb
int3
testl
mov
lock
or
shrl
inc
add
cmpsl
mov
push
and
in
outsb
iret
xor
jp
add
push
add
sahf
ljmp
push
add
rcll
dec
fldl2t
cli
push
decl
dec
xchg
add
pop
mov
lea
push
cmp
lahf
pop
mov
add
shr
into
cmpsl
push
mov
jmp
jl
into
or
jbe
fisubs
shll
and
xor
pop
adc
or
jne
and
add
xchg
aaa
arpl
shrl
mov
call
inc
add
sbb
cs
scas
mov
imul
adc
in
add
push
shr
dec
cmp
add
pop
jns
test
test
mov
insl
call
add
jno
fidivrl
mov
call
movsb
movb
inc
std
imul
je
jmp
jp
pop
f2xm1
jmp
icebp
dec
repnz
leave
arpl
add
add
push
xchg
adc
sbb
int3
nop
movsb
xlat
gs
insl
mov
jl
bound
adc
lea
lods
test
dec
insl
sbb
dec
xchg
push
mov
in
ret
cmp
dec
sbb
mov
daa
xchg
inc
add
add
out
ss
add
lods
pop
fcomp
xor
cmc
jg
add
add
cmp
in
aam
add
cmpl
mov
adc
jae
movsb
lods
cli
mov
inc
add
aas
push
mov
cmc
cltd
mov
adc
xchg
push
fisubs
in
dec
out
jmp
push
rorl
mov
jns
add
lcall
sub
lret
fists
cmc
fdivrs
in
fstl
mov
daa
mov
xor
out
add
xchg
stos
aaa
rcrl
aam
jae
ret
sub
add
push
xchg
iret
lret
sub
add
add
loop
mov
pop
pop
fistl
fcos
out
test
fst
cs
push
mov
sub
js
insl
enter
add
aam
push
test
sbb
add
add
shl
insl
jbe
inc
add
movsl
inc
add
fisubrs
inc
addb
dec
pop
adc
jae
pop
sbb
sub
push
jl
jo
xchg
or
inc
add
add
xlat
add
jnp
movsl
sbb
fsub
jo
cwtl
aaa
aas
add
push
dec
jg
cmp
data16
test
out
cld
inc
sub
push
jg
js
adc
icebp
sub
push
loope
pop
inc
stos
mov
std
pusha
add
lods
mov
lea
mov
lock
loopne
adc
cmp
mov
out
outsl
cli
outsl
inc
sbb
push
inc
push
call
stc
lahf
sub
pop
adc
add
pusha
add
cmp
imull
loop,pt
in
inc
add
js
add
roll
aaa
gs
or
andl
test
xlat
cli
inc
popa
outsl
scas
iret
pop
stc
push
add
pop
push
xchg
fstps
push
push
cmp
sbb
jne
inc
arpl
mov
sub
fsubrl
jl
push
mov
adc
add
stos
repnz
cmpsl
sahf
sbb
xchg
jl
ds
mov
xor
addb
mov
aad
jnp
jns
fwait
test
mov
fstl
mov
push
xchg
lret
ljmp
fistps
popa
test
xchg
pop
lahf
daa
dec
jecxz
sub
or
xor
xchg
les
mov
mov
scas
gs
add
pushf
int
push
push
add
inc
mov
inc
add
cli
inc
cmp
add
clc
dec
lcall
seta
adc
add
sbbl
xchg
stc
add
inc
pop
mov
imul
mov
add
jbe
lahf
cmp
js
mov
cmp
dec
imul
cli
inc
add
roll
adc
sub
insb
adc
jge
iret
dec
lcall
push
cmp
cwtl
out
mov
daa
addb
jne
and
sub
mov
icebp
adc
inc
add
xor
fisttpll
mov
ljmp
loopne
addr16
or
das
je
test
test
xor
test
push
xchg
inc
ffree
cmp
dec
lea
stos
pop
or
xchg
or
mov
push
pop
pop
mov
cmpsl
push
fsubrs
stos
inc
add
imul
jb
mov
js
push
pop
jge
stc
mov
add
mov
or
add
inc
add
into
out
test
xchg
sub
shll
xchg
push
adc
out
out
iret
adc
mov
adc
cmp
in
push
jne
add
fsubl
or
in
cltd
and
lahf
mov
add
loop
popa
jns
loope
popf
stos
push
sahf
cs
inc
add
xor
inc
loopne
and
sbb
mov
mov
fidivrs
shl
inc
pushf
mov
nop
arpl
cwtl
push
stos
inc
movsb
xchg
xor
or
mov
push
mov
daa
aaa
data16
xor
or
in
xor
cmpl
add
mov
in
dec
mov
add
sub
and
add
push
sti
test
push
mov
std
ljmp
in
sbb
pushf
jns
adc
movsl
arpl
imul
leave
sahf
pop
out
inc
roll
dec
stc
and
sub
pusha
add
add
inc
xchg
es
in
xchg
sti
xor
jb
insb
lret
mov
and
std
mov
cmpsl
dec
clc
inc
add
ret
inc
ret
add
adc
add
lea
icebp
shrb
add
out
sbb
insb
xor
daa
insl
fdivrl
xlat
out
cs
addb
pushf
out
movsb
xchg
das
or
jp
les
test
scas
hlt
or
mov
ss
cwtl
add
rolb
add
lods
jbe
push
push
sub
jbe
out
in
int
sar
faddl
scas
sbb
adc
popa
push
pop
adc
movb
xor
xchg
pop
fmuls
fnsave
mov
fsubs
pop
jecxz
movsb
bound
cmp
sub
adc
cs
xchg
pop
test
ja
ret
hlt
out
sahf
movl
rcll
nop
sub
fldenv
xlat
mov
fidivl
jmp
out
test
stos
xchg
sbb
push
ja
xchg
lods
adc
hlt
xor
popa
mov
cld
pushf
sbb
add
inc
add
mov
pop
fucom
dec
aam
cmp
add
push
inc
add
ljmp
add
loop
sbb
das
add
pusha
add
jge
push
rorl
jne
xor
les
les
sahf
sub
stc
enter
pop
adc
addr16
rcrb
xor
pop
loop
and
insl
stc
dec
jnp
cmpsl
lahf
sub
pop
xor
mov
mov
mov
add
jp
hlt
ds
push
int
das
cmpl
add
sub
popa
and
inc
add
lods
jge
ja
scas
bound
jmp
les
rclb
repz
cmpsl
add
mov
mov
sbb
sub
sub
bound
sti
das
mov
add
jecxz
dec
fwait
pop
outsl
repz
add
sub
ljmp
shlb
ret
lock
je
lret
lret
mov
aad
or
aam
inc
mov
push
in
cmp
fisubrl
aaa
call
gs
and
sti
lret
mov
out
cmc
sub
add
jg
jmp
push
testl
jl
xchg
adc
out
mov
mov
insb
in
cld
std
mov
xchg
lods
xchg
sti
and
add
inc
addb
scas
shl
pusha
add
cmp
xchg
imul
add
shll
add
fwait
adc
pop
mov
scas
aad
add
push
sbb
add
out
inc
add
adc
clc
and
sti
loope
mov
jne
lods
in
push
jmp
sub
ljmp
int
imul
in
inc
add
in
xor
aam
add
mov
adc
dec
jb
xchg
cltd
flds
icebp
adc
jecxz
add
rclb
adc
out
cmp
mov
mov
pop
xchg
testl
std
pop
flds
fstl
out
mov
xchg
addr16
or
addb
push
add
cmp
aas
aas
ret
cs
bound
mov
or
fistpl
js
cmp
loopne
add
stc
cmp
cmc
mov
or
mov
icebp
cmp
jb
mov
inc
xchg
fstps
imul
sub
lds
pusha
add
sub
mov
mov
add
inc
pusha
add
and
jno
xchg
aas
dec
cli
popf
mov
dec
pop
int3
push
insb
int3
ret
mov
xor
add
add
dec
add
addb
adc
rcrl
adc
push
dec
ljmp
mov
negb
jo
std
sbb
ja
popa
mov
cmc
addl
in
mov
stos
pop
add
out
aad
loop
sbbl
arpl
add
add
dec
and
jbe
mov
inc
pop
push
mov
add
push
shlb
test
mov
in
ds
push
cmc
and
add
cltd
popf
xor
add
jo
js
lret
and
dec
leave
jge
in
lret
inc
rcrl
jp
xor
insl
popf
test
lds
sub
enter
inc
add
mov
mov
dec
dec
inc
insb
xor
inc
add
sbb
add
xchg
mov
stos
push
cmp
add
jb
jno
jo
jg
gs
add
idivb
or
xchg
pop
int3
addb
cwtl
movb
add
and
daa
call
out
loopne
insb
push
pusha
add
add
insl
test
faddl
sbb
dec
mov
das
std
cwtl
jo
lahf
ret
pop
adc
add
loop
pop
cmp
cltd
mov
test
insb
ficomps
push
jle
data16
scas
jg
jo
test
cwtl
les
push
or
jb
add
lret
stos
lds
fstps
jge
aad
ror
pop
sbb
or
shll
ljmp
jns
mov
cmpsb
push
lahf
push
nop
out
push
addr16
and
iret
sbb
and
cmp
mov
add
jns
std
add
mov
cmp
jbe
xchg
mov
pop
mov
mov
push
cmpsb
jb
addl
mov
pop
les
xor
fidivrs
cmp
and
insb
push
add
outsb
in
fadds
into
lret
dec
xchg
xchg
lahf
pop
pop
je
and
movsb
mov
in
pusha
add
mov
imul
ds
adc
mov
inc
add
addr16
nop
push
lods
jae
adc
mov
lock
gs
push
les
stc
xor
mov
mov
jae
jle
fiaddl
rorl
pop
cmpsl
inc
add
test
movsl
sub
sub
lret
clc
dec
adc
add
add
inc
mov
mov
mov
into
jno
sarl
iret
sub
iret
jns
imul
xor
inc
add
jmp
ret
xor
cmpsb
pop
xor
into
jge
cmp
enter
js
mov
rolb
sub
and
mov
ja
pop
jl
adc
add
mov
jno
fstp
dec
fstp
addb
loope
xchg
jecxz
scas
dec
inc
add
add
sbb
cmp
ljmp
test
mov
std
aad
loopne
pop
fmul
push
pop
add
je
addb
negb
add
pop
stos
arpl
sbb
add
cmp
xor
jns
clc
repz
mov
fcmovbe
push
mov
add
and
int
loop
pop
and
mov
loope
fistpll
stos
jecxz
out
test
and
and
push
adc
les
icebp
mov
or
fwait
bound
add
cmp
sub
jae
icebp
sbb
pop
out
dec
leave
mov
ljmp
pop
dec
dec
lods
aas
in
ret
add
adc
xor
hlt
dec
add
or
mov
add
xor
or
je
sbb
xchg
mov
push
xor
pop
fsubrs
xor
cmp
cwtl
dec
es
out
inc
mov
cmp
insl
cwtl
iret
call
dec
mov
es
into
or
xchg
sbb
data16
faddp
pop
fnstsw
movsb
pop
stos
rcrl
pushf
rolb
pop
leavew
sbbl
in
inc
roll
adc
xchg
sub
xlat
cmp
jp
dec
add
cmp
insl
lods
cli
fbstp
outsl
aad
add
cmp
scas
cmp
ret
add
add
fst
out
sub
fsubl
xor
jno
sahf
arpl
mov
lods
inc
add
cmp
and
mov
mov
add
cmp
sbb
cmpsl
fcmovne
cmp
loopne
xor
sbb
aam
push
or
dec
dec
loop
sbb
fsubr
out
stc
dec
lods
jne
lret
push
clc
push
sahf
fcomi
jp
pop
xchg
mov
daa
mov
sub
nop
fildl
ss
insb
cwtl
fiadds
xor
outsl
or
add
call
mov
leave
scas
insb
push
ss
ja
ficomps
xchg
cmp
sub
add
pop
cmpsl
out
add
sbb
add
enter
mov
inc
cmp
add
lea
add
dec
push
daa
mov
xchg
add
icebp
xor
js
xlat
adc
fdivl
mov
xor
add
pop
aad
loop
and
scas
je
mov
push
mov
inc
inc
add
mov
dec
push
add
mov
call
cmp
fs
imul
and
add
xchg
lods
out
add
out
fadds
repnz
lods
daa
push
pop
mov
ds
loop
lahf
cwtl
sbb
xor
lret
lret
cmp
and
mov
aas
out
scas
cmc
in
ss
and
adc
mov
push
shrl
sub
movsl
add
pop
iret
or
test
sub
inc
mov
ret
je
xchg
mov
jecxz
sbb
popa
sub
sub
movsb
outsl
inc
add
ja
mov
jnp
pop
push
add
xor
pop
inc
add
fnstsw
shl
add
gs
ss
xor
and
daa
jg
mov
inc
add
adc
add
lret
in
addl
add
mov
mov
addr16
js
bound
movb
xor
mov
xchg
mov
sbb
js
testl
je
or
test
push
dec
leave
insl
adc
mov
and
or
stos
push
add
xor
and
jle
mov
mov
adc
pop
or
mov
fcmovne
xchg
pop
icebp
inc
push
sbb
in
inc
pop
adc
sub
imul
push
pop
movd
xchg
stos
cs
xor
sub
loop
add
cmp
cmpl
iret
jecxz
mov
mov
cli
stos
call
push
xor
dec
cmpsl
out
dec
les
mov
or
sbb
call
pop
sbb
movsb
fwait
add
notl
rolb
les
sahf
inc
inc
mov
mov
add
loopne
sbb
add
xor
add
add
outsb
jne
icebp
mov
je
and
inc
add
push
fsubl
push
mov
aas
insl
test
pusha
add
mov
mov
sub
xchg
incl
lcall
mov
jl
stc
arpl
lcall
ret
outsb
push
add
arpl
mov
ss
pop
rcll
in
cmpsl
cmpl
cmp
and
xlat
jnp
mov
or
cli
lods
iret
rolb
addb
mov
ss
int
loope
sbb
inc
jge
stos
adc
add
ret
mov
jnp
add
inc
rcl
mov
insb
out
push
and
iret
insb
imul
adc
inc
jecxz
adc
dec
jbe
xor
or
icebp
or
sbb
fmul
cld
and
sti
or
dec
mov
flds
xchg
mov
sub
cmp
jb
cmp
lods
xchg
aam
add
jecxz
dec
inc
jmp
push
movb
push
mov
icebp
mov
ret
in
mov
fld
and
cmpsl
cmp
add
les
jno
movsl
sbb
pop
xlat
sbb
dec
in
and
std
cmpsb
xlat
add
fisttps
shl
xor
sbb
or
pop
rolb
pop
xor
scas
lea
jae
add
sbb
add
lods
xor
mov
xchg
sbb
xor
je
push
cld
scas
out
pop
cmp
movb
xchg
shlb
dec
cmp
sub
or
add
orl
pop
ds
ss
jne
cs
fwait
xor
xchg
add
adc
pop
mov
ss
jl
mov
push
call
add
in
les
das
ret
push
js
rolb
mov
rcr
ret
xor
ret
fmull
dec
sti
ret
and
fbld
and
cltd
xor
out
sahf
add
lods
or
mov
dec
mov
adc
fidivs
ds
pop
mov
lret
js
orl
sti
or
mov
iret
jnp
mov
add
add
xchg
push
and
jns
jo
rclb
scas
loop
sbb
adc
push
pop
xchg
cltd
or
push
hlt
push
mov
mov
xchg
cmc
cmp
cmp
test
sbb
or
icebp
adc
lcall
push
add
cmp
pop
xchg
fs
or
sub
push
rolb
out
sub
or
dec
imulb
dec
sarb
xchg
pusha
add
addb
mov
add
inc
add
ret
insb
int
add
push
add
add
cmpsb
or
movsl
add
pop
incb
scas
js
aaa
mov
fistl
jne
scas
sub
fstl
ja
add
sti
fwait
push
mov
lods
or
push
sub
insb
add
mov
and
das
add
cld
push
add
mov
add
push
xchg
push
cmp
add
mov
push
scas
scas
push
cmp
fldt
mov
movsb
cmp
xchg
sub
mov
in
xchg
shll
in
lea
shrl
adc
imul
icebp
ljmp
or
push
pop
push
mov
adc
pop
mov
add
xor
outsb
clc
lock
fucomip
mov
loop
daa
iret
jne
sbb
adc
rolb
jo
repz
mov
popf
jne
and
sbb
in
or
sbb
xor
jle
adc
ror
or
int3
jp
aam
pop
mov
repz
xchg
lock
jns
int3
pop
sbb
cmp
daa
sub
sub
loopne
add
add
fistps
jb
stos
mov
jae
sbb
sbbl
xor
add
rclb
cmpsl
xchg
int3
fistpll
les
adc
pop
xlat
pushf
jns
jle
rol
jbe
mov
hlt
addb
add
push
mov
insb
mov
ret
pop
mov
stos
pop
test
adc
lock
dec
std
or
add
fsubrl
fldcw
cmc
inc
sahf
aad
pushf
push
ja
mov
out
jg
and
inc
add
scas
fsubl
test
ret
daa
jbe
and
outsb
lret
push
inc
std
inc
lds
add
sub
adc
xor
test
jg
outsl
or
mov
test
clc
cmp
add
push
add
loope
mov
mov
mov
add
jb
add
shlb
add
pop
jp
repz
push
in
lds
outsb
mov
data16
nop
inc
add
movb
ds
imul
stos
inc
add
push
add
xchg
cmp
icebp
jae
bound
jnp
leave
out
push
sub
in
mov
fstl
fiadds
sbb
aaa
cmp
inc
adc
aas
jecxz
add
add
dec
jne
add
fists
rcrb
lret
fdivrs
xchg
scas
fcomps
pop
pop
mov
jb
loope
or
dec
repnz
dec
repz
cltd
addb
xchg
dec
mov
popf
sub
fisubs
js
clc
sbb
pop
inc
add
xor
in
jbe
pop
les
mov
mulb
xlat
imul
cmp
cwtl
push
push
or
push
sbb
stos
xchg
fs
gs
sbb
sahf
push
jg
mov
sub
push
and
adc
adc
fs
jne
std
jbe
pop
cld
mov
xchg
mov
xor
add
ss
add
xchg
fucompp
in
mov
xchg
cmpsb
js
sti
imul
xor
data16
mov
and
dec
jb
out
fstps
sub
pop
movsl
xor
mov
add
loopne
inc
addb
mov
insl
cmp
pop
pop
mov
mov
movsl
fs
js
cs
lea
jae
mov
and
mov
neg
inc
add
or
jae
jge
cmp
sbb
mov
icebp
addb
ljmp
pushf
loop
enter
xor
xchg
inc
add
jmp
aam
xlat
push
movsl
fs
add
pop
add
bound
ds
cld
jne
out
mov
scas
outsl
cmp
and
std
sbb
push
inc
add
orl
fwait
lock
cmpl
xor
cmpsl
pushf
imul
sbb
add
add
xchg
popf
notl
dec
ja
mov
push
data16
movsb
jp
enter
jno
add
repz
loope
sahf
push
mull
cmp
jns
icebp
data16
jle
cmp
inc
add
inc
jb
add
mov
mov
add
mov
pop
and
imul
mov
ficomps
sub
dec
in
xor
cmp
in
lods
jecxz
dec
adc
ret
mov
xor
jne
lahf
lock
jns
lret
xor
mov
jmp
data16
sub
mov
pop
mov
push
cmp
or
mov
cmp
loopne
add
dec
pop
mov
push
sub
in
pop
les
popf
pop
into
mov
add
daa
js
push
aad
mov
inc
mov
ficoms
sbb
lea
clc
ret
mov
fistl
adc
sub
outsb
jb
nop
hlt
aam
bound
bound
push
rol
imul
add
sarb
push
add
adc
add
sahf
mov
repnz
fmuls
aad
mov
int
pop
add
repz
loope
cld
mov
cmp
or
mov
push
or
xor
jle
testb
jmp
cmpsb
pusha
add
mov
imul
fcoml
movsl
or
lea
pop
dec
fwait
test
ret
dec
push
xlat
mov
lcall
das
xor
mov
cmp
ljmp
add
xor
mov
out
pop
dec
lret
adc
sub
es
arpl
inc
add
cmp
xchg
pop
pop
enter
popf
mov
add
or
mov
int
inc
add
and
mov
movb
mov
sti
lods
push
test
add
jb
mov
daa
gs
and
daa
and
lret
repnz
stc
sbb
mov
cmp
push
add
movb
insl
loope
dec
pop
xchg
sahf
outsb
and
out
and
inc
xlat
push
mov
jne
std
test
aaa
scas
scas
adc
loopne
pop
mov
adc
test
inc
add
xor
das
hlt
dec
stos
inc
cld
add
mov
loope
add
bound
or
rsqrtps
add
xor
mov
int
add
adc
mov
test
fs
dec
test
icebp
addb
push
add
add
pop
sbb
test
cwtl
icebp
inc
adc
mov
leave
adc
sub
jne
inc
fsubrp
jnp
add
aaa
mov
in
mov
inc
add
add
jbe
mov
and
xor
scas
inc
out
lret
fildl
out
add
sbb
push
shr
inc
add
xchg
mov
sbb
in
clc
clc
xor
pop
js
xchg
and
mov
cli
js
dec
jl
add
das
inc
add
sbb
push
adc
insl
or
add
cmp
inc
fsubrs
mov
fwait
addr16
push
notl
testl
mov
icebp
adc
cmc
mov
and
sbb
and
xchg
lret
gs
in
xor
mov
mov
mov
icebp
les
movb
mov
cmp
sbb
cltd
lea
add
mov
xor
add
add
adc
xchg
pop
jle
push
mov
and
dec
xor
iret
notl
dec
or
mov
lahf
push
add
cmpsl
scas
sahf
cmp
adc
iret
rclb
add
ds
push
movsb
jb
faddl
pop
pushf
sbb
xchg
ja
or
out
roll
jns
inc
add
sub
jecxz
mov
add
ljmp
fwait
popa
xchg
popa
cmp
xchg
push
pop
pop
leave
inc
add
dec
inc
add
dec
pop
mov
jno
and
loope
clc
fsub
pusha
add
sti
repnz
or
mov
mov
sub
gs
testb
adc
ds
movsl
jb
push
inc
cmpsl
mov
push
outsl
test
fwait
or
je
add
push
out
jnp
dec
scas
addb
movsb
xchg
xor
cmp
adc
xchg
add
loope
lock
mov
jp
push
inc
pop
sbb
sbb
cmc
dec
xor
add
ljmp
jbe
fisubrl
mov
inc
add
sub
fcompl
mov
pop
cld
cmpsb
mov
xor
xor
push
ret
out
imul
sbb
add
and
loop
ret
dec
sbb
adc
mov
add
xor
lds
sbb
push
mov
sbb
cltd
popa
imul
push
ret
mov
mov
sub
add
fbstp
inc
inc
adc
mov
cltd
mov
cmc
pop
mov
outsb
lods
cmp
mov
xor
pop
lret
test
pop
jns
cld
sbb
xor
fsts
mov
xchg
and
dec
sbb
add
xlat
shrb
or
icebp
lock
mov
xchg
sbb
push
popa
dec
add
inc
add
add
jae
add
inc
xchg
insb
sbb
inc
add
scas
fs
mov
je
outsb
and
jne
lret
call
push
cld
xor
adc
sbb
adc
add
add
push
xchg
rcll
cltd
test
xor
sub
jecxz
movsl
add
xchg
mov
outsl
shlb
add
mov
sub
xchg
xor
jns
add
push
fsubs
mov
test
xchg
xchg
xor
or
inc
add
adc
jmp
in
leave
cld
mov
out
sbb
inc
add
add
out
fidivrl
pushf
sub
add
adc
sar
push
mull
stos
mov
ljmp
and
jnp
into
test
lret
cmp
adc
mov
inc
add
movsl
pop
push
mov
dec
sarl
sub
idivb
insb
adc
gs
pop
dec
ss
cmpsb
pop
fstl
sub
jp
ds
je
mov
and
xchg
addb
hlt
fmuls
in
cmp
cld
adc
add
push
xsha256
cmpsb
xchg
jbe
cmpsb
pop
mov
xor
gs
sbb
push
or
jg
cli
das
inc
add
add
rolb
cwtl
xchg
push
sub
scas
loop
cltd
and
dec
sbb
add
add
xchg
mov
cmpsb
push
xchg
repnz
int
mov
hlt
adc
dec
add
movsb
pop
insl
dec
mov
cmp
fwait
aaa
xchg
or
mov
repnz
inc
add
or
push
les
ret
cli
mov
test
push
push
add
and
adc
add
repnz
xchg
clc
push
sub
addl
loopne
xchg
xlat
shrl
and
sbb
ss
lcall
push
pop
pop
out
insl
xchg
xchg
jae
into
dec
movd
and
test
lret
rorb
push
push
test
je
int3
pop
lret
mov
dec
jb
pop
out
imul
mov
pop
out
mov
or
addl
repnz
or
mov
outsl
cmp
lods
nop
mov
popa
out
cli
iret
jnp
test
xchg
aam
mov
add
mov
dec
sub
insl
outsl
mov
add
push
push
pusha
add
add
dec
rcl
iret
xlat
pop
inc
add
lea
enter
outsl
rorb
int
inc
push
jmp
cmpsb
cltd
mov
daa
icebp
stos
jmp
mov
inc
add
mov
mov
mov
add
ds
cwtl
rolb
fdivrs
jmp
mov
cmp
stc
inc
bound
popa
out
mov
jae
out
xor
or
lret
iret
and
iret
mov
push
int3
dec
mov
jecxz
add
sub
sti
jo
sbb
pop
pop
xchg
or
xlat
loope
bound
fcomps
sbb
test
add
add
out
cld
js
addb
leave
cld
xor
lds
fdiv
pop
jns
pop
push
lds
mov
inc
daa
jmp
xchg
sti
mov
jnp
jmp
addr16
sbb
cmp
jne
jo
add
sbb
iret
add
mov
add
popa
mov
je
add
cltd
aam
cmpsl
jb
in
add
jb
add
add
fs
adc
mov
xor
add
data16
cli
sbb
ds
push
test
cli
push
mov
movb
je
xchg
bound
cli
repnz
ficoml
ljmp
mov
insb
fisttpl
mov
int
mov
sahf
imul
fwait
lcall
std
adc
mov
sbb
daa
pop
sub
xchg
mov
cwtl
dec
in
stos
push
repz
dec
pop
pushf
outsl
lock
add
add
jnp
cltd
add
test
iret
adc
add
icebp
mov
add
stc
and
lret
cltd
enter
jae
cs
icebp
incl
lds
add
je
out
mov
pop
ja
cli
mov
push
and
mov
fst
mov
cli
adc
push
sahf
mov
add
sub
lcall
inc
add
icebp
shlb
add
out
add
pop
cld
add
mov
push
arpl
sarb
aaa
sbb
lock
aad
mov
je
lret
cmpsb
fmul
loope
add
fstpt
mov
rolb
outsb
imul
cmp
int
iret
mov
mov
loop
add
bound
xlat
sbb
pop
mov
dec
js
out
lretw
adc
or
out
int
mov
add
cld
sbb
stos
jl
mov
ds
mov
sarl
lcall
mov
sbb
mov
adc
rcr
mov
test
push
fs
je
orl
inc
clc
mov
or
lcall
xchg
cmpsb
in
lret
jecxz
out
int
mov
lds
mov
cmc
mov
imul
cli
in
xor
xchg
jge
mov
sub
int3
sbb
movsl
fs
dec
sub
push
pop
mov
imul
movb
jbe
rolb
mov
cmp
in
pop
out
pop
mov
pop
dec
xchg
adc
pop
addb
add
xchg
push
sbb
dec
fnstcw
jae
mov
push
aam
daa
xchg
fldenv
xor
mov
sbb
pop
and
outsb
jno
and
mov
lret
stos
mov
mov
les
xor
mov
jp
arpl
fcmovnb
jle
add
inc
sbb
movsl
cmp
stos
dec
add
ja
test
mov
repz
add
imul
add
add
add
and
dec
stc
loopne
add
test
and
stc
xor
xor
pop
scas
xor
call
mov
cmp
xlat
add
aas
push
push
mov
addb
or
fisubl
jp
dec
jbe
jge
mov
add
adc
fistps
lods
mov
ror
xor
xor
dec
pop
and
xchg
jg
outsb
xchg
mov
xchg
mov
bound
add
dec
mov
bound
insb
data16
movb
push
xchg
jmp
push
lea
jo
mov
jecxz
add
shll
imul
inc
add
int3
adc
add
sub
jl
add
mov
add
sarl
ud0
pushf
sub
or
lcall
pop
js
push
mov
das
stos
icebp
mov
cmp
pop
mov
insl
out
jmp
adc
inc
add
lahf
cmp
add
and
adcl
add
rolb
idivb
sbb
movb
ffreep
add
fs
je
mov
addb
cmp
adc
inc
add
add
sbb
or
std
add
xor
fisttpl
xchg
pop
rorb
inc
cld
iret
pop
aaa
test
push
icebp
and
and
mov
pop
mov
pop
xchg
decb
out
and
xchg
jbe
adc
sub
lods
pop
ret
lahf
cmpsl
sbb
cli
loopne
filds
add
push
push
pop
mov
push
and
mov
sbb
jmp
mov
or
dec
cmp
mov
in
jg
testl
scas
imul
pop
xchg
jl
enter
pop
mov
imulb
test
pop
insl
lahf
mov
adc
xchg
and
stos
jmp
decb
test
xlat
jns
shr
out
pusha
add
push
test
test
outsl
cmp
lret
dec
push
aaa
jmp
xchg
and
add
pop
ljmp
jl
and
les
inc
jge
aaa
decb
cltd
cli
mov
xor
stos
sub
cs
jmp
or
add
out
dec
movl
or
jns
push
add
add
cmp
jne
lock
addb
mov
ret
or
mov
cmpsb
bound
cmp
xchg
pop
add
pushf
es
push
dec
sub
push
movsb
pop
scas
sub
test
xchg
mov
into
xor
cmpsl
lret
dec
push
xor
xchg
outsl
cmc
js
cmp
jg
or
lods
lods
rolb
adc
call
adc
dec
cmp
rol
popf
pusha
add
stos
ja
incl
jge
or
dec
add
sarb
add
cmpsl
jo
sti
outsw
sbb
fs
in
inc
shll
arpl
popa
xsaves
push
xchg
pop
mov
fs
nop
inc
jo
or
icebp
sub
jl
jo
icebp
push
test
dec
aaa
cs
addl
es
cmp
and
imul
jle
cmp
rcrl
dec
jb
cmpsb
das
pop
cmpsb
lea
lret
pop
addb
inc
add
out
in
popf
mov
add
push
cmp
pusha
add
inc
add
stc
test
loopne
mov
inc
xor
dec
pop
inc
add
add
cmp
add
pop
int3
aaa
out
add
xor
add
jae
dec
sahf
xchg
mov
add
push
cmp
cmpsb
sub
gs
mov
and
adc
mov
fsubs
lea
mov
pop
mov
mov
jp
xor
lea
lock
or
sbb
test
ja
cmp
push
aaa
push
popf
adc
pop
js
xchg
jae
clc
sbb
fld
add
jo
iret
shll
sub
add
dec
adc
jnp
fildll
and
xchg
in
pop
or
imul
fildll
frstor
xchg
lock
and
loop
pop
jmp
not
and
rolb
out
inc
add
lods
adc
loopne
mov
das
or
ficoms
dec
icebp
push
sub
dec
insl
mov
sub
aas
push
xor
add
xchg
addr16
xchg
or
xchg
out
addr16
pop
test
adc
inc
add
imul
and
movb
es
lock
rolb
sub
ss
js
cmp
add
jns
out
jmp
jmp
mov
mov
aas
mov
jns
data16
pop
popf
add
sahf
and
rol
les
out
inc
add
add
pop
mov
les
fldlg2
xchg
jle
dec
and
adc
stos
push
lock
cmp
push
add
sub
inc
add
inc
add
sbb
repnz
add
push
sbb
mov
add
mov
repnz
fbstp
or
cld
adc
sub
push
add
and
xor
push
and
mov
add
ret
add
inc
add
add
jae
rsqrtps
push
mov
adc
pusha
add
fmul
cwtl
ficoms
mov
push
inc
add
shrl
std
inc
pop
pop
test
test
xor
fistps
rorb
cwtl
push
std
inc
xchg
or
pop
jno
jg
pop
mov
mov
mov
push
add
scas
xchg
add
mov
repnz
out
fists
cmp
add
bndstx
xchg
or
mov
jbe
inc
add
test
testl
jne
dec
movb
xor
and
loope
inc
leave
inc
add
lods
bound
es
into
cmova
inc
add
scas
xor
std
or
testb
jg
int3
inc
add
stos
test
loope
les
ss
pop
fwait
cmp
in
cmp
sti
sub
rcrb
imul
sub
stos
fs
lahf
inc
add
pop
fldcw
pop
addr16
xor
xchg
cmp
jno
cs
aam
add
in
mov
rcrl
das
push
sti
lcall
lahf
add
inc
add
xlat
lcallw
jns
insb
mov
pushf
xlat
mov
cmc
xor
and
sbb
xchg
adc
movsl
mov
movsl
cmc
rorb
ds
sbb
lea
cmp
mov
mov
stos
xchg
lods
xor
lods
xlat
xchg
in
push
loopne
cmp
js
dec
cs
je
mulps
lret
adc
das
imul
adc
imul
add
xchg
or
jns
and
fisttpl
out
sbb
xor
sahf
cmpsl
mov
or
in
mov
mov
xor
sbb
daa
fst
in
sbb
xlat
mov
movsb
rorl
clc
cmp
in
dec
cmp
mov
xchg
fists
stc
mov
and
push
xchg
xor
test
pop
jge
stc
rolb
lahf
cmp
dec
xor
adc
dec
mov
add
or
pop
add
pop
add
ret
add
lret
movsb
addb
dec
inc
dec
les
or
into
push
stc
jl
in
jecxz
mov
movsl
or
lea
mov
daa
or
and
call
adc
or
pop
jl
push
inc
add
ja
inc
add
bound
js
jle,pt
into
imul
dec
pmullw
pop
stos
insl
sub
data16
inc
ds
add
or
fidivl
xchg
add
mov
fisttps
mov
imul
xchg
lods
adc
push
insb
xchg
sub
popa
xchg
dec
rcrb
fldenv
push
xchg
push
inc
inc
mov
nop
mov
and
stc
xor
int
imul
pop
or
add
jo
fildll
push
lods
enter
and
imul
outsl
push
loopne,pn
mov
push
enter
jo
loopne
scas
sbb
push
push
aad
ljmp
sahf
add
mov
repnz
pop
mov
add
inc
iret
das
fcmovnb
add
gs
icebp
jne
sbb
cmp
add
adc
popf
mov
xor
test
jmp
cltd
shl
mov
int3
sub
test
test
repnz
insl
xchg
addb
and
mov
leave
cmp
scas
cld
mov
xchg
and
call
lods
es
shrl
jg
ret
addr16
push
stos
sub
inc
addl
pop
ror
in
add
add
repz
scas
cmp
aam
lret
fmulp
loop
pop
sub
fisttpl
int3
cli
and
mov
aas
xor
addb
or
adc
nop
lods
loope
pop
and
hlt
push
mov
jge
sub
mov
mov
aas
outsl
inc
mov
jbe
add
xchg
jge
push
lods
lods
sub
icebp
cmpsb
xchg
sub
and
imul
and
enter
ret
add
dec
cwtl
mov
lcall
es
jge
dec
sar
and
addb
jmp
lcall
xchg
cmp
scas
es
xchg
sbb
xor
ret
adc
lds
add
adc
in
or
scas
mov
adc
add
or
fldenv
mov
xchg
mov
add
rorl
pop
inc
stc
add
add
add
movsl
sar
push
jo
and
add
sbb
mov
aaa
xchg
adc
add
inc
add
in
data16
packsswb
sub
push
js
cmp
dec
sbb
mov
sub
shrl
loop
mov
inc
add
ss
cli
jg
jp
push
lret
adc
test
enter
lret
out
fwait
ss
data16
imul
xchg
jb
jae
mov
pop
push
dec
es
pop
pop
rep
imul
cltd
in
sub
test
sahf
std
push
xchg
mov
pop
xor
pop
dec
xchg
adc
mov
enter
je
add
int3
jae
inc
nop
fmulp
xor
mov
addb
data16
xor
add
sti
addb
pop
mov
stc
nop
es
add
or
mov
xchg
ret
mov
add
mov
popa
cld
inc
add
ss
xor
and
add
nop
es
and
add
cmp
repz
nop
es
and
or
and
nop
es
add
add
add
cmp
nop
cld
nop
jmp
add
mov
jle
mov
lock
mov
xchg
ret
add
add
adc
test
nop
cld
nop
jmp
add
lahf
int
push
movsl
bnd
dec
add
nop
es
add
add
add
fbld
add
stc
nop
es
das
and
loope
mov
nop
cld
nop
jmp
pop
xor
push
jno
jae
or
inc
add
add
add
nop
es
add
roll
ret
xchg
mov
push
mov
xchg
ret
add
pop
add
mov
push
mov
xchg
ret
add
xor
jb
add
push
sarl
andl
jb
inc
and
sti
push
stc
nop
es
xorps
add
jb
stc
nop
es
add
xchg
xchg
fwait
sub
add
nop
es
ss
lahf
imul
nop
cld
nop
jmp
add
add
add
nop
es
add
ret
and
jne
stc
nop
es
add
add
cld
nop
jmp
push
add
jge
int
pop
jae
nop
es
add
xor
add
stc
nop
es
mov
mov
mov
add
add
nop
es
nop
and
loope
ret
nop
cld
nop
jmp
and
and
add
stc
add
lret
stc
nop
es
or
add
add
xchg
push
mov
stc
nop
es
push
add
add
add
xor
or
test
inc
add
add
add
add
es
add
and
add
push
add
add
add
or
mov
xchg
ret
push
inc
add
push
push
mov
xchg
ret
and
add
xchg
repnz
iret
add
stc
nop
es
add
cmp
mov
inc
and
nop
es
add
lahf
add
rolb
add
push
mov
xchg
ret
add
push
or
mov
stc
nop
es
inc
add
or
mov
stc
nop
es
and
mov
and
nop
es
add
out
sub
pop
add
push
mov
xchg
ret
stos
repnz
add
mov
nop
es
add
mov
and
nop
es
jle
push
and
aas
pushf
mov
stc
nop
es
add
add
in
rep
nop
cld
nop
jmp
or
jle
add
jle
inc
add
loopne
add
nop
cld
nop
jmp
das
add
xor
and
stc
nop
es
jno
and
add
stc
nop
es
add
repz
inc
pop
add
stc
nop
es
add
add
jne
and
mov
xchg
ret
add
add
add
jbe
fimuls
es
addl
in
push
mov
outsb
add
jl
aam
int
adc
jne
stc
nop
es
add
and
mov
stc
nop
es
stc
add
add
jmp
rclb
incb
xchg
ret
or
das
and
pop
dec
nop
cld
nop
jmp
jno
imul
jp
es
stc
das
add
mov
bound
mov
pusha
add
xchg
push
mov
xchg
ret
or
jmp
push
mov
xchg
ret
inc
add
inc
movsl
push
rcll
fwait
push
stc
nop
es
add
add
roll
add
mov
jb
add
lahf
roll
add
and
push
stc
nop
es
cmp
inc
movsl
stos
into
cmpl
nop
cld
nop
jmp
nop
shll
stc
nop
es
add
add
or
xor
add
stc
nop
es
add
or
jb
ret
xor
int
push
mov
push
mov
xchg
ret
add
add
mov
ret
and
push
mov
xchg
ret
add
cpuid
mov
pusha
add
nop
cld
nop
jmp
add
lret
add
nop
es
xchg
jns
mov
stc
nop
es
jle
add
aad
lea
stc
nop
es
add
add
adc
sti
incl
inc
add
add
adc
mov
stc
nop
es
add
mov
add
icebp
nop
cld
nop
jmp
jbe
add
or
rclb
add
and
add
add
stos
add
push
add
push
mov
xchg
ret
xor
xor
imul
stc
nop
es
imul
aaa
outsb
pop
push
mov
xchg
ret
add
add
add
inc
inc
es
rclb
in
inc
add
add
jne
inc
push
add
mov
jecxz
add
add
and
mov
add
nop
es
add
lahf
inc
and
mov
sbb
lds
add
out
add
mov
and
push
mov
xchg
ret
add
inc
push
pop
add
stc
nop
es
add
stos
or
nop
jmp
sub
add
add
loop
addb
dec
jne
stc
nop
es
add
or
jb
and
add
sub
stos
add
mov
lahf
clc
inc
add
add
mov
add
es
add
add
push
stc
nop
es
and
add
fdivrl
stc
nop
es
roll
sbbl
stc
nop
es
add
add
test
stc
nop
es
orl
mov
decb
nop
es
jle
repnz
mov
add
stc
nop
es
ss
adc
movzwl
nop
cld
nop
jmp
add
movsl
jge
loop
stc
nop
es
or
mov
push
mov
xchg
ret
movsl
rcrl
push
add
imul
pop
stc
nop
es
add
add
add
push
inc
loopne
daa
negl
push
mov
xchg
ret
add
add
add
push
mov
fs
nop
es
add
add
mov
call
adc
add
sarl
push
inc
add
xor
stc
nop
es
inc
add
jne
cmpsl
add
repnz
cs
stc
nop
es
and
aas
add
stc
nop
es
push
aas
push
add
movsl
stc
nop
es
push
add
add
int
jle
test
add
add
adc
add
add
movsl
cs
stc
nop
es
xor
push
xor
push
mov
xchg
ret
add
mov
add
jle
sbbb
add
nop
es
stos
jle
lahf
punpckhdq
nop
cld
nop
jmp
add
add
and
jge
nop
cld
nop
jmp
xor
mov
mov
push
mov
xchg
ret
push
inc
xrelease
ret
mov
mov
or
int
add
mov
stc
nop
es
add
getsec
cmp
mov
add
cld
nop
jmp
add
cmpsl
add
add
stc
nop
es
add
rorl
das
and
stc
nop
es
push
sub
add
push
add
xor
stc
nop
es
stc
add
cvttps2pi
add
add
add
stc
nop
es
nop
lahf
stc
jne
add
stc
nop
es
inc
add
repnz
incl
nop
cld
nop
jmp
sarl
sub
stc
nop
es
inc
add
repz
lea
stc
nop
es
add
add
add
pusha
nop
cld
nop
jmp
add
and
add
mov
add
push
mov
xchg
ret
add
add
mov
stc
nop
es
imul
scas
shl
stc
nop
es
jns
add
add
nop
cld
nop
jmp
das
inc
add
lahf
jle
add
add
nop
es
xor
jmp
inc
and
cld
nop
jmp
pop
and
ret
fldenv
xor
add
stc
nop
es
lahf
or
sbb
jmp
jb
add
add
aas
add
cmpsb
sub
add
nop
es
repnz
mov
push
mov
xchg
ret
pop
add
add
push
leave
jne
stc
nop
es
add
stos
xchg
push
mov
xchg
ret
and
ret
adc
inc
nop
cld
nop
jmp
nop
ss
jle
add
push
jne
cmpl
nop
cld
nop
jmp
add
call
stc
nop
es
add
cmp
movb
stc
nop
es
add
addl
push
mov
xchg
ret
ds
add
into
mov
stc
nop
es
add
push
or
subl
or
aas
and
lret
add
add
cmp
std
inc
add
stos
add
stc
jns
jle
stc
nop
es
and
add
or
popa
stc
nop
es
jno
and
aas
jns
add
add
add
nop
es
xor
mov
or
or
add
push
pop
lea
stc
nop
es
pop
inc
inc
out
mov
nop
cld
nop
jmp
add
push
lea
jmp
cmpsl
stos
add
add
push
ds
add
stc
nop
es
push
and
in
jne
call
stc
nop
es
add
add
xchg
or
mov
xchg
ret
sub
int
inc
cmp
clc
push
mov
xchg
ret
lahf
push
ret
inc
add
stc
nop
es
sub
movsl
add
ret
push
mov
xchg
ret
add
mov
addb
add
xchg
cmp
nop
es
stc
mov
add
je
stc
nop
es
push
add
test
nop
cld
nop
jmp
add
inc
or
dec
cmp
nop
es
cmp
mov
jmp
add
mov
add
jo
push
stc
nop
es
aas
add
jne
loopne
add
data16
sub
add
nop
es
in
sub
outsb
push
stc
nop
es
inc
xchg
or
nop
es
out
int
sub
add
dec
nop
cld
nop
jmp
repnz
add
stos
and
mov
stc
nop
es
add
xor
shr
stc
nop
es
add
adc
add
adcl
push
push
mov
xchg
ret
cmpsl
add
popf
shr
push
mov
xchg
ret
mov
enter
es
add
add
stos
mov
call
stc
nop
es
add
mov
add
stc
nop
es
add
and
rorb
or
push
mov
xchg
ret
add
add
roll
repnz
add
stc
nop
es
add
out
mov
jmp
add
mov
sldt
lahf
stc
inc
add
pop
nop
cld
nop
jmp
in
mov
push
or
sub
add
nop
es
nop
xchg
or
es
inc
or
add
add
add
repnz
test
add
xchg
ret
add
inc
add
mov
stc
nop
es
repz
add
add
nop
cld
nop
jmp
and
add
loope
jne
ret
pop
add
nop
cld
nop
jmp
add
add
cmp
test
add
stc
nop
es
add
add
adc
mov
xchg
ret
add
xor
mov
sub
nop
cld
nop
jmp
add
mov
and
mov
xchg
ret
add
add
and
pop
pop
push
mov
xchg
ret
cmpsl
add
add
lldt
mov
inc
add
jle
and
add
lods
mov
stc
nop
es
add
fbstp
rclb
out
inc
add
xchg
int
add
jb
add
mov
push
add
inc
add
add
idivl
mov
nop
cld
nop
jmp
jns
add
sub
add
jmp
stc
nop
es
add
add
cltd
je
nop
cld
nop
jmp
xchg
xchg
aam
add
nop
cld
nop
jmp
ret
movsl
push
add
imul
nop
es
add
add
add
aad
mov
stc
nop
es
add
add
or
mov
inc
add
jne
add
push
add
stc
nop
es
movsbl
into
xor
stc
nop
es
add
das
add
mov
push
nop
inc
add
add
lret
pop
add
rcrl
add
xor
add
stc
nop
es
add
mov
cmp
nop
es
add
add
add
aad
lahf
mov
stc
nop
es
mov
add
cld
nop
jmp
add
aas
inc
xchg
sub
stc
nop
es
repz
mov
push
mov
xchg
ret
mov
add
push
dec
nop
nop
cld
nop
jmp
add
add
push
mov
xchg
ret
add
pop
or
nop
es
add
or
int
stc
nop
es
add
add
add
bound
sbb
es
add
add
nop
es
ss
sub
stc
add
cmpsb
cmp
nop
es
jbe
stos
add
inc
add
into
add
nop
jmp
jle,pt
jne
add
add
stc
nop
es
mov
add
xor
push
mov
xchg
ret
add
pop
add
add
push
mov
xchg
ret
add
mov
sbb
jb
cmp
add
sub
loop
nop
cld
nop
jmp
imul
nop
fiadds
clc
stc
nop
es
jno
mov
pop
rep
nop
cld
nop
jmp
add
add
imul
stc
nop
es
xchg
jns
rorl
pusha
nop
cld
nop
jmp
add
add
or
add
repnz
dec
incl
xchg
ret
push
xchg
xchg
cmpl
nop
jmp
push
add
jne
add
nop
cld
nop
jmp
push
jns
and
push
add
mov
jb
add
push
add
mov
stc
nop
es
mov
add
xchg
es
or
or
add
push
pop
jp
inc
and
nop
cld
nop
jmp
add
sti
mov
push
mov
xchg
ret
add
bswap
add
mov
into
ret
stc
nop
es
imul
add
fimull
es
or
add
add
mov
nop
es
add
jle
inc
aas
add
xor
add
nop
cld
nop
jmp
add
add
test
push
add
stc
nop
es
or
add
ret
add
add
aas
xor
call
out
decl
and
lret
nop
jmp
push
add
das
mov
pushf
pop
push
mov
xchg
ret
aas
add
pop
pop
stc
nop
es
out
add
add
push
in
add
les
add
stc
nop
es
add
add
fisubl
popa
add
cld
nop
jmp
jno
add
add
push
mov
xchg
ret
add
add
add
lcall
nop
es
add
add
popa
mov
nop
es
sub
add
add
js
adcb
add
nop
es
imul
xor
cs
nop
es
inc
add
dec
add
mov
xchg
ret
jle
das
jle
and
leave
push
stc
nop
es
and
ss
xchg
mov
nop
es
add
movsl
int
add
add
push
push
mov
xchg
ret
add
inc
sub
nop
es
aas
lahf
add
add
mov
stc
nop
es
add
cmp
rolb
cwtl
mov
push
mov
xchg
ret
add
add
jne
stc
nop
es
add
repnz
clc
idiv
jle
aas
in
or
push
mov
xchg
ret
sarl
add
sbb
jo
nop
cld
nop
jmp
jle
add
add
add
stc
nop
es
add
add
repnz
jg
stc
nop
es
add
jle
xor
inc
nop
cld
nop
jmp
pop
add
addb
mov
stc
nop
es
add
repnz
jecxz
pop
push
mov
add
mov
cmp
mov
xchg
pop
add
stc
nop
es
add
mov
sub
insb
nop
cld
nop
jmp
add
add
repz
mov
sahf
cld
inc
add
add
mov
lret
stc
nop
es
inc
inc
push
jle
add
inc
mov
add
nop
es
and
add
nop
es
or
lahf
add
inc
and
cld
nop
jmp
xchg
inc
out
push
or
enter
es
mov
add
nop
cld
nop
jmp
lahf
inc
add
push
add
and
nop
es
mov
cmpsl
out
adc
push
mov
xchg
ret
out
inc
add
jno
aas
push
stc
nop
es
movsl
inc
add
add
mov
or
stc
nop
es
stc
addl
push
adc
stc
nop
es
or
aam
pop
push
nop
cld
nop
jmp
mov
add
cmpsb
pop
dec
pop
stc
nop
es
or
inc
aas
xchg
nop
es
push
add
pop
and
bound
pop
mov
stc
nop
es
add
or
sbb
push
mov
xchg
ret
shll
add
or
es
or
xor
nop
es
sub
add
or
es
stos
add
js
add
push
mov
xchg
ret
pop
push
mov
push
mov
push
mov
xchg
ret
and
imul
jb
add
add
sldt
dec
mov
stc
nop
es
repnz
test
stc
nop
es
inc
add
add
movsb
push
rclb
jmp
int
ds
inc
jns
push
stc
nop
es
movsl
add
movsl
add
add
sub
mov
stc
nop
es
xchg
add
nop
es
add
jno
mov
jb
add
jns
mov
sub
xor
inc
add
add
add
add
stc
nop
es
add
add
rep
add
push
mov
xchg
ret
add
add
sub
cmpw
stc
nop
es
jno
inc
add
add
jne
inc
add
stc
nop
es
sub
stos
add
lahf
jne
stc
nop
es
add
or
dec
cmp
nop
es
jno
add
add
push
imul
add
stc
push
mov
push
adc
cld
nop
jmp
push
repz
add
ltr
nop
es
add
ret
add
jmp
nop
cld
nop
jmp
add
or
and
stos
and
push
mov
xchg
ret
and
jno
add
rolb
clc
je
stc
nop
es
movsbl
sub
push
mov
xchg
ret
inc
add
push
add
mov
nop
es
stc
add
out
repnz
sub
add
nop
es
or
push
mov
xchg
ret
add
mov
pop
stos
repnz
add
stc
nop
es
in
add
in
add
popa
add
nop
es
lsl
add
and
in
add
add
aas
mov
mov
inc
and
stc
nop
es
cmpsl
add
pop
pusha
add
adc
add
add
adc
out
jns
pop
je
stc
nop
es
mov
adc
je
stc
nop
es
add
xchg
repnz
mov
stc
nop
es
mov
inc
or
popa
add
nop
es
add
add
push
jle
pop
stc
nop
es
add
add
add
popa
add
mov
xchg
ret
and
xchg
mov
stc
nop
es
push
cmpsl
mov
mov
xchg
ret
mov
add
movsl
add
ss
lods
stc
nop
es
add
add
mov
pushl
push
mov
xchg
ret
add
jno
out
push
push
mov
xchg
ret
ret
and
and
jmp
nop
cld
nop
jmp
repnz
add
sub
mov
cmp
ret
add
push
stc
nop
es
add
repz
sub
stc
nop
es
push
and
and
stc
add
nop
cld
nop
jmp
aas
jle
add
mov
push
mov
xchg
ret
add
add
adc
adc
and
push
mov
xchg
ret
jle
add
stc
nop
es
jle
add
mov
out
stc
nop
es
add
add
pop
push
push
mov
xchg
ret
add
push
add
add
or
nop
jmp
push
movsl
cmpsl
inc
add
nop
into
xor
nop
cld
nop
jmp
sarl
test
push
mov
push
mov
xchg
ret
add
adc
clc
call
or
add
inc
add
jmp
es
add
and
stc
nop
es
out
add
sub
mov
call
stc
nop
es
addl
inc
and
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
stc
and
js
add
nop
es
sldt
add
stc
nop
es
stos
or
add
add
stc
nop
es
add
add
add
iret
rep
push
mov
xchg
ret
push
mov
mov
stc
nop
es
das
add
push
inc
push
movsl
cwtl
lods
push
mov
xchg
ret
add
push
xchg
sbb
es
add
in
add
cmp
inc
adc
nop
es
push
add
add
clc
stc
nop
es
and
push
js
mov
xchg
ret
add
and
insl
pop
push
mov
xchg
ret
add
mov
ja
or
filds
xchg
ret
push
in
nop
add
out
mov
sbb
adcb
orl
sbb
nop
es
add
inc
cmp
stc
nop
es
mov
and
add
push
mov
xchg
ret
and
push
sbb
add
inc
in
add
jle
mov
add
push
mov
add
mov
movsl
faddl
xchg
add
add
gs
stc
nop
es
lahf
rcll
add
mov
xchg
ret
add
add
add
imul
inc
add
sub
add
in
jmp
stc
nop
es
add
cmpl
xchg
add
add
cmpxchg
sub
stc
nop
es
add
add
adc
sbb
es
sub
push
add
add
popa
stc
nop
es
or
add
and
nop
inc
cmpsb
or
stc
nop
es
push
add
repnz
xchg
dec
stc
nop
es
push
add
add
adc
nop
jmp
add
add
add
sub
negb
jae
nop
es
jbe
add
mov
cmp
ret
imul
add
js
nop
cld
nop
jmp
inc
add
push
push
stc
nop
es
push
adc
repnz
adc
les
add
mov
mov
popf
stc
nop
es
add
push
xchg
jo
pop
nop
cld
nop
jmp
mov
stc
add
mov
cltd
mov
stc
nop
es
rol
out
in
push
mov
adc
aas
push
nop
cld
nop
jmp
add
add
push
add
inc
and
hlt
inc
add
add
add
xchg
aaa
jnp
push
mov
xchg
ret
add
add
test
es
add
aas
jns
stc
imul
lock
incl
cmp
push
nop
cld
nop
jmp
stos
add
add
cltd
je
stc
nop
es
add
pusha
add
push
stc
nop
es
push
push
add
jns
add
add
test
cmp
ret
add
add
lea
repz
nop
es
add
add
mov
stc
nop
es
or
cmpsl
int
fsts
mov
xchg
ret
mov
mov
mov
inc
std
inc
add
imul
std
inc
add
das
add
add
es
add
and
pop
mov
jb
add
add
jge
leave
stc
nop
es
add
ds
nop
cld
nop
jmp
push
push
add
add
push
and
adc
inc
sub
nop
es
cmp
add
sbb
cmp
inc
add
jns
add
and
es
add
ds
rep
push
mov
xchg
ret
add
add
add
adc
test
push
mov
xchg
ret
add
adc
lock
add
inc
add
add
xchg
fadds
add
nop
es
nop
inc
jle
push
push
mov
xchg
ret
or
imul
push
stc
nop
es
add
add
movsl
add
mov
nop
es
push
add
mov
push
stc
nop
es
add
inc
add
insb
mov
nop
cld
nop
jmp
add
adc
mov
add
inc
cmp
nop
es
add
mov
rep
nop
cld
nop
jmp
add
add
push
mov
dec
add
cld
nop
jmp
or
imul
inc
add
xor
add
add
stc
nop
es
add
add
mov
dec
adc
xor
inc
add
and
add
nop
es
add
jns
nop
add
or
mov
xchg
ret
push
ss
add
inc
add
add
add
stc
nop
es
xchg
add
pop
push
mov
xchg
ret
nop
add
add
test
cmp
nop
jmp
or
pop
add
push
push
mov
xchg
ret
add
add
add
inc
xor
push
nop
cld
nop
jmp
add
push
stc
add
add
stc
nop
es
mov
mov
lea
nop
cld
nop
jmp
push
str
int
rorl
add
nop
es
in
add
mov
push
mov
xchg
ret
add
and
push
mov
xchg
ret
add
add
jne
mov
mov
stc
nop
es
jle
add
add
mov
push
push
mov
xchg
ret
das
pcmpeqw
add
add
mov
nop
es
mov
xchg
imul
stc
nop
es
add
movsl
add
add
in
incl
add
push
mov
xchg
ret
add
and
cld
or
jmp
add
jns
dec
rep
stc
nop
es
lahf
add
add
add
add
stc
nop
es
add
add
push
push
add
sar
nop
es
jns
add
int
nop
rcrl
nop
es
jno
add
add
add
ds
push
mov
xchg
ret
addl
pop
pop
stc
nop
es
pop
jns
add
add
stos
movzwl
stc
nop
es
add
in
add
movsl
aaa
lahf
mov
stc
nop
es
cmpsl
mov
orl
jmp
pop
push
repz
popa
cli
subl
push
mov
xchg
ret
inc
add
or
adc
nop
es
add
lahf
pop
mov
mov
stc
nop
es
lahf
add
dec
stc
nop
es
jle
add
or
add
cmpsl
loop
mov
stc
nop
es
lahf
cmpsl
pop
xchg
stc
nop
es
add
punpckhwd
pop
repz
xchg
nop
es
add
add
push
mov
add
add
add
pop
add
add
inc
add
nop
es
add
in
and
stc
nop
es
lahf
add
add
mov
mov
add
add
nop
es
add
leave
movzwl
nop
cld
nop
jmp
and
inc
out
jno
jne
stc
nop
es
xchg
add
jne
stc
nop
es
add
jno
stc
nop
es
add
nop
repnz
mov
mov
and
add
cs
stc
and
stc
nop
es
push
repnz
stc
sqrtps
mov
stc
nop
es
xor
sbb
stos
nop
cld
nop
jmp
and
jno
add
ficoms
or
add
add
xor
mov
stc
nop
es
out
push
in
pusha
nop
cld
nop
jmp
push
xchg
add
das
push
add
lock
jb
jbe
out
lahf
repz
nop
cld
nop
jmp
add
add
mov
stc
nop
es
add
add
pavgw
jmp
stc
nop
es
adc
add
stc
nop
es
add
add
push
pop
push
jae
push
mov
add
fdivrp
pushl
add
mov
clc
ja
add
mov
mov
add
icebp
or
mov
xchg
ret
jbe
shl
push
add
mov
push
mov
xchg
ret
add
mov
mov
stc
nop
es
inc
inc
add
mov
adc
nop
es
pause
mov
jno
mov
stc
nop
es
jle
add
and
subl
nop
cld
nop
jmp
add
add
xchg
add
adc
je
push
mov
push
mov
call
outsb
add
shll
stc
nop
es
add
lret
add
stc
nop
es
add
arpl
jl
sbb
nop
es
add
mov
pop
cmp
nop
es
add
lahf
imul
jb
mov
out
or
nop
es
movsl
xchg
add
ss
jmp
add
add
nop
es
add
fnstenv
sar
nop
es
and
add
add
imul
jb
add
push
and
insl
call
stc
nop
es
out
push
add
adc
stc
nop
es
stc
add
inc
add
push
nop
cld
nop
jmp
sub
add
mov
and
stc
nop
es
add
add
xor
add
and
nop
cld
nop
jmp
add
lldt
add
cmp
jmp
push
add
add
stc
nop
es
push
adcl
stc
nop
es
repnz
or
inc
add
xor
les
stc
nop
es
cmpsl
pop
add
aas
add
ja
movzwl
nop
cld
nop
jmp
ss
movsl
das
das
xchg
jnp
movb
mov
xchg
ret
pop
xor
push
mov
outsb
cmpb
add
sub
in
push
add
lea
nop
cld
nop
jmp
in
adc
and
adc
sti
nop
cld
nop
jmp
add
push
add
add
gs
add
stc
nop
es
add
add
mov
nop
es
add
inc
and
inc
add
mov
cmp
ret
movsl
push
mov
cwtl
mov
nop
cld
nop
jmp
add
add
xchg
test
lret
movzwl
stc
nop
es
adc
mov
add
xor
stc
nop
es
repz
add
add
xor
add
call
xcrypt-cfb
cmpsl
and
call
loopne
incl
add
inc
add
nop
cld
nop
jmp
add
and
push
popf
pop
nop
cld
nop
jmp
add
add
addb
add
push
mov
xchg
ret
add
mov
scas
jne
stc
nop
es
add
dec
imul
xorb
add
add
or
mov
xchg
ret
sub
out
add
mov
stc
nop
es
add
ret
add
add
stc
nop
es
jbe
add
scas
decl
push
mov
xchg
ret
aas
push
jne
and
jne
stc
nop
es
mov
add
mov
stc
nop
es
push
sldt
dec
push
stc
nop
es
add
mov
dec
stc
nop
es
add
addl
decb
mov
nop
jmp
mov
mov
stc
nop
es
add
add
lahf
pusha
add
xchg
lcall
jb
add
add
stc
nop
es
or
adc
stc
push
add
or
mov
nop
es
add
stc
nop
es
jno,pt
add
in
or
nop
es
add
add
push
add
scas
lea
stc
nop
es
ss
add
dec
add
stc
nop
es
push
mov
mov
shr
stc
nop
es
addl
add
movsb
lea
insb
add
stc
nop
es
add
adc
inc
shll
cmp
nop
es
inc
jle
push
and
dec
push
stc
nop
es
xchg
and
and
mov
stc
nop
es
add
mov
add
push
mov
xchg
ret
push
adc
aas
add
stc
nop
es
push
cmpsl
add
pop
add
jns
add
mov
cld
nop
jmp
add
add
jo
push
xor
add
cld
nop
jmp
mov
cmp
inc
xor
stc
nop
es
mov
add
je
sub
push
sti
inc
add
jno
add
loop
push
mov
xchg
ret
nop
xor
shl
nop
cld
nop
jmp
add
mov
jno
pop
nop
cld
nop
jmp
add
cmpsl
and
inc
push
lea
push
mov
xchg
ret
add
add
lret
push
stc
nop
es
sub
lahf
add
add
stc
nop
es
add
jbe
mov
nop
cld
nop
jmp
add
xchg
push
cmp
push
push
mov
xchg
ret
add
add
movsl
add
cmpsb
add
add
nop
es
add
mov
pop
stc
nop
es
add
add
jbe
add
nop
es
add
push
add
xor
mov
stc
nop
es
mov
add
add
stc
nop
es
jle
or
call
stc
nop
es
add
and
mov
stc
nop
es
das
add
add
sbb
icebp
nop
cld
nop
jmp
add
lahf
xchg
call
stc
nop
es
mov
mov
stc
nop
es
jle
add
mov
ror
stc
nop
es
and
add
add
add
mov
es
ss
push
add
into
push
push
mov
xchg
ret
or
pop
add
adc
cld
nop
jmp
add
add
add
ljmp
add
add
add
mov
nop
cld
nop
jmp
xor
fcoms
pop
pop
inc
add
add
mov
leave
stc
nop
es
add
pop
or
inc
add
mov
stc
nop
es
add
mov
call
push
mov
xchg
ret
add
xchg
xchg
add
mov
stc
nop
es
add
add
mov
nop
cld
nop
jmp
add
out
sub
and
test
fistl
nop
es
add
add
add
or
jb
add
add
add
push
jne
cmpl
nop
cld
nop
jmp
mov
jno
add
mov
stc
nop
es
lahf
or
pop
stc
nop
es
add
in
and
add
fiadds
pause
cld
nop
jmp
and
add
add
mov
push
stc
nop
es
inc
ss
add
push
push
mov
xchg
ret
and
add
sbb
jecxz
add
sbbl
es
or
and
pushl
stc
nop
es
add
imul
add
add
nop
es
add
and
cmp
xchg
inc
add
add
push
imul
in
cmp
add
mov
push
add
add
aaa
fwait
mov
adc
in
inc
in
or
mov
push
cltd
add
cmpsl
jle
fdiv
cld
mov
call
xor
jmp
sarl
repz
mov
xchg
and
shr
mov
xor
xor
popa
push
cmc
test
mov
inc
loop
mov
mov
pop
rolb
scas
adc
sub
ja
sahf
std
out
jne
jo
push
lea
add
rolb
mov
andl
pusha
add
xchg
aaa
addb
and
jg
inc
dec
bound
pop
gs
fcoml
add
loope
ss
dec
mov
push
cld
cld
cmp
mov
jno
jle
cltd
fsts
cmp
mov
jmp
push
cld
out
xchg
data16
jmp
les
popa
mov
sbb
push
jno
cmc
mov
aad
fsubr
out
mov
mov
mov
jg
in
add
add
mov
dec
push
lret
aas
scas
pop
movsl
insl
mov
pop
inc
add
jbe
pop
mov
sub
and
nop
xchg
in
lock
int3
xchg
test
loop
call
add
add
test
mov
mov
jmp
test
adc
popa
aaa
push
pop
int3
add
mov
or
cs
mov
dec
in
pop
fisubs
or
adc
add
mov
nop
les
loope
int3
jae
xchg
push
push
loop
out
test
int3
jp
add
jle
rcrb
mov
adc
adc
pop
push
ret
loopne
fcompl
push
xor
call
mov
lret
xor
cmp
xor
xchg
dec
dec
jge
and
cli
rcrb
cmp
pop
mov
enter
mov
rolb
adc
push
dec
add
lahf
bound
adc
jg
sahf
fisttps
popa
les
in
xorl
ja
sbb
xchg
sub
addr16
push
push
ljmp
dec
sub
movsl
fcompl
or
xor
movb
pop
roll
cltd
add
or
fnstcw
pop
je
add
adc
andl
add
stos
jle
aam
xor
xor
xchg
xor
add
dec
out
addb
jmp
add
add
and
cmpsl
test
jl
jg
mov
xor
int
test
sarl
dec
push
ret
imul
mov
or
insb
fsubs
add
cmpsl
fstpt
setbe
push
aaa
call
jo
sti
mov
add
adc
ja
dec
jge
mov
xor
cmpsb
dec
dec
jnp
cwtl
idivb
cmpsl
xchg
shrb
and
push
pop
pop
push
fsts
cwtl
jae
data16
std
mov
or
jns
mov
sbb
gs
xchg
pop
pop
and
add
frstor
sti
insb
jbe
and
or
and
push
inc
dec
ljmp
movntq
popf
push
addr16
test
add
and
jmp
sbb
inc
sbb
and
addr16
es
xor
and
shlb
or
add
pop
movsb
sbbl
dec
int3
add
sbb
imul
pop
cmp
addb
shll
inc
add
ret
psubd
push
stc
jl
in
add
movsb
pop
pop
add
lea
cbtw
mov
pop
lret
ret
lds
adc
dec
lods
mov
mov
xchg
or
sbb
dec
pop
test
adc
testl
push
scas
loope
add
fstps
mov
lcall
sub
xchg
mov
mov
xchg
cmc
sub
adc
and
clc
sub
jnp
clc
test
rcrl
push
lods
and
clc
cmpsb
cmc
pushf
ret
orl
rolb
push
int
aaa
fidivrl
outsl
shlb
pop
cmp
sub
jmp
and
add
add
inc
add
dec
aam
out
xchg
cmc
daa
test
jp
cld
xor
mov
loope
and
push
sarb
add
insl
loope
lret
sub
xchg
popf
xlat
push
add
add
push
outsb
mov
or
leave
mov
mov
test
inc
add
sub
sarb
xor
mov
insl
movsl
cli
imul
add
add
icebp
inc
add
stos
je
and
sub
pop
jl
adc
shlb
divb
out
loope
push
or
mov
mov
test
cmpsl
aaa
cltd
xchg
jl
cmp
mov
sub
and
mov
lea
push
add
sbb
les
push
add
movsb
dec
insl
add
inc
add
dec
pop
pop
lods
outsl
mov
pop
iret
or
sbb
xchg
or
sub
push
add
push
in
subl
sbb
mov
mov
pop
in
lret
aas
inc
add
les
mov
cmpsb
popf
add
cmc
mov
pushw
ret
roll
add
stos
int3
xchg
ss
fsts
jp
mov
call
inc
ret
stos
sarl
fcomps
mov
lret
outsb
std
mov
mov
xchg
lahf
leave
push
dec
callw
xlat
popl
jbe
push
dec
xchg
sub
dec
xor
sbb
jb
add
add
jbe
push
cmp
and
add
sbb
test
movsl
push
test
push
loopne
lahf
xchg
imul
xor
out
rorl
das
movb
add
mov
mov
shrl
outsl
mov
mov
pop
rolb
out
out
sbb
add
inc
fists
inc
add
ret
repnz
sub
sub
push
sbb
mov
cmp
addl
divb
and
xor
and
inc
add
pop
icebp
nop
push
pop
pop
inc
add
stos
movsb
int
jb
add
or
mov
cmp
or
ja
movsl
into
gs
mov
add
shl
pop
dec
leave
push
mov
add
sbb
mov
rolb
add
cmpsl
mov
cmp
cmpsl
xchg
mov
mov
or
inc
add
and
iret
fnstenv
loopne
push
jb
fcomip
lods
movsl
pop
push
jae
xchg
fldl
push
js
mov
add
out
enter
xor
fs
fsubrs
in
jns
cmp
jb
inc
fdivrp
sub
push
jns
jnp
inc
add
sub
sub
repz
lret
stos
and
movb
dec
outsl
pop
les
dec
lcall
movsl
sbb
test
enter
push
ret
fiadds
add
push
ret
cltd
inc
xchg
fistpl
test
pop
arpl
ret
addb
sbb
test
pop
test
cmp
jb
mov
pushf
pop
and
add
and
xchg
enter
nop
jle
and
enter
sub
pop
and
aad
mov
jecxz
adc
addb
btc
fnop
add
or
or
add
aam
mov
cmp
dec
test
sbb
dec
mov
add
jmp
jp
jns
cmpsb
lock
xchg
cmp
inc
imul
ss
add
pop
dec
cmp
iret
mov
imul
inc
push
mov
rcr
inc
add
xchg
std
jno
ss
jb
adc
adc
mov
jnp
mov
mov
les
cli
fdivl
cmp
xchg
out
mov
inc
add
fnstcw
popa
es
in
xor
cli
xor
dec
push
loopne
mov
and
addb
ja
adc
cmp
and
lret
add
add
xor
loope
mov
push
sbb
jnp
xchg
or
xchg
jns
xchg
or
or
popa
test
jb
clc
hlt
cs
add
fwait
xchg
addl
imul
dec
jmp
mov
add
dec
cmp
bound
roll
push
and
cmp
std
cmp
xlat
pop
or
ja
imul
inc
add
mov
mov
inc
pop
lcall
or
imul
fistl
xchg
sub
dec
push
loop
sbb
cwtl
xlat
cmp
jb
loope
arpl
daa
xor
jmp
cmp
cmpsb
inc
add
pcmpeqw
lea
dec
in
add
dec
fidivrl
adc
arpl
pushl
dec
push
ss
rolb
movsb
fistps
ret
aam
fsubrl
and
dec
push
lcall
fisubs
enter
lock
sbb
adc
mov
xchg
pop
push
test
pop
js
xorl
fdivp
mov
test
mov
add
into
pop
dec
inc
leave
imul
iret
xor
movsl
push
scas
icebp
mov
stos
and
adc
pushf
mov
xchg
or
popf
fisubl
mov
mov
movsl
clc
lods
flds
add
jae
and
loope
pushf
es
test
jne
or
aad
int3
addb
bound
cmc
in
daa
mov
inc
add
xchg
push
mov
je
mov
stos
pop
lcall
xchg
xchg
hlt
xlat
mov
lods
jg
mov
in
add
ret
dec
xchg
and
xcrypt-ecb
cmpsl
mov
cs
inc
add
pushf
or
or
sbb
and
dec
cmp
data16
outsb
out
push
mull
xlat
mov
out
ds
dec
sbb
frstor
sbb
cmp
loop
aaa
aam
push
aad
jbe
add
into
jns
mul
jmp
add
add
cmc
inc
ljmp
add
int
jae
add
and
shlb
add
xor
sub
sbb
add
aas
xor
js
dec
fmulp
std
xchg
sbb
pop
add
int3
and
test
xchg
inc
jmp
xor
push
add
mov
dec
ljmp
aad
add
or
les
jmp
aam
push
les
repnz
aam
cld
in
add
dec
das
ja
mov
sbb
jl
rolb
test
sahf
fnstsw
xchg
movsb
pop
aad
sub
les
sbb
jb
push
push
xchg
scas
ret
int
dec
push
aad
add
mov
jns
mov
clts
add
jb
shlb
aad
lods
or
divl
or
pop
ret
and
xlat
add
rcr
cs
add
pop
cmp
sbb
add
sub
outsb
iret
mov
loopne
subl
push
in
adc
and
int3
aaa
xchg
jo
sbb
les
test
xlat
jl
cwtl
jl
jl
sub
inc
add
sub
or
inc
add
js
leave
jmp
lea
add
fwait
fwait
les
out
rol
sti
dec
aam
jmp
and
out
cmc
and
mov
fcoms
int
out
jl
out
sub
cli
jecxz
jp
push
inc
add
jp
xchg
xor
adc
js
adc
cwtl
out
add
mov
out
add
lds
iret
cmpsb
adc
ret
ss
js
inc
add
inc
rorl
movb
fucomi
lcall
mov
pop
ficoms
and
pushf
mov
mov
sbb
aas
stos
lods
or
or
xor
dec
or
aad
inc
pop
jmp
cmp
daa
push
fs
mov
stos
sbb
int3
cltd
scas
notl
lcall
xchg
pop
xchg
std
popf
xchg
subl
sbb
pop
sbb
dec
dec
push
fucomp
sbbl
xlat
push
cmp
aad
popa
clc
mov
cwtl
sub
lds
and
lds
add
xor
xor
sub
pop
adc
insl
popa
pop
add
call
arpl
xor
bound
push
dec
imul
add
out
clc
jbe
add
insb
xor
push
outsl
out
xchg
rclb
jbe
xchg
add
aaa
aam
lahf
loopne
push
xchg
inc
cmp
inc
repz
pop
and
dec
rclb
jle
cld
cmp
lret
rolb
adc
push
adc
pop
fisubrs
popa
mov
call
add
lahf
mov
inc
call
jle
sarl
jp
adc
sti
xchg
xor
add
push
cltd
jo
xchg
mov
add
arpl
cmp
jmp
popa
js
mov
lret
push
push
add
jns
pop
push
or
insl
cmp
push
sub
sub
mov
lods
inc
sahf
push
jl
repnz
dec
in
outsb
jno
inc
add
jmp
fldl
jo
cli
repnz
add
into
lea
loop
xchg
repnz
loope
push
lds
mov
xchg
bound
jns
sub
pop
pop
mov
sti
mov
mov
or
add
gs
pop
ror
pop
push
icebp
and
fldt
lods
cmp
adc
and
stc
pmaxsw
add
das
xor
add
lods
out
or
push
add
lret
fs
xchg
in
in
lds
sub
lret
lret
xchg
leave
arpl
fildll
aad
mov
rcr
sahf
lods
icebp
sarl
add
dec
lods
inc
add
stos
das
cli
sti
adc
mov
insl
mov
mov
adc
mov
sub
stos
cli
and
or
aas
adc
cwtl
push
sub
add
jecxz
cmp
lret
dec
push
cld
mov
stos
mov
xor
lds
sti
cmpsb
in
xlat
scas
jns
jmp
in
arpl
int3
repz
sahf
int
mov
shr
xchg
adc
add
jmp
outsb
cli
inc
add
xchg
das
sbb
aaa
cmp
dec
out
ficomps
or
push
sbb
add
aad
vmovntps
addb
ret
in
ljmp
push
fimull
fcomps
pop
mov
adc
sbb
add
push
jecxz
push
ljmp
cmp
ret
pop
xor
repnz
scas
rolb
sub
int
aad
enter
jb
pushf
hlt
add
ja
sbb
sub
test
add
xchg
in
add
lahf
adc
mov
jno
xor
shrl
sub
mov
sbb
jge
dec
sbb
sbb
sarl
shll
out
movb
sbb
notb
hlt
notl
movzwl
stos
gs
lods
sbb
and
jmp
lods
xchg
xchg
ret
fadd
add
xchg
stc
fistl
add
lods
mov
cmp
inc
add
xchg
adc
push
jl
and
push
and
push
inc
pop
jns
andl
pop
das
nop
mov
mov
data16
pop
pop
cmpsl
in
dec
and
test
mov
aaa
bswap
addb
aam
enter
rolb
insb
inc
mov
add
pusha
add
jg
dec
mov
jle
add
jne
inc
xchg
outsb
xchg
push
lcall
movsb
fildll
int3
fdivs
inc
add
dec
fstpt
mov
out
mov
xchg
jl
fcompl
addr16
int3
jb
lods
dec
addb
fcoms
jae
fwait
sub
mov
xchg
push
mov
shlb
faddl
and
pop
popa
adc
xchg
adc
adc
jmp
addb
jo
xchg
mov
add
aas
nop
rcrl
and
mov
pop
loop
cmp
lods
xor
add
push
jmp
add
sub
in
hlt
out
and
xchg
xchg
dec
dec
test
scas
fwait
rolb
cmpsl
push
cmc
bound
aad
loopne
lea
dec
sarl
scas
aas
daa
lcall
inc
add
adc
add
repz
or
pop
jae
mov
add
cld
ret
jbe
jl
push
and
sub
ds
add
dec
jne
les
cld
inc
jmp
xor
mov
push
lods
fisttpll
add
shll
cmp
pop
rep
xlat
inc
add
and
dec
dec
in
inc
add
das
mov
ret
inc
lahf
push
push
jp
rcl
or
inc
das
pushf
dec
call
add
inc
add
jae
ficomps
jmp
xchg
movsb
cltd
add
inc
add
or
fcoml
add
adcl
mov
and
bound
adc
sbb
jnp
jge
sub
test
sbb
jo
pusha
add
add
mov
add
add
outsb
stos
xchg
addr16
sbb
cmp
or
add
xor
cmc
adc
xchg
mov
and
sub
add
sbb
pop
push
add
add
xchg
popf
push
cltd
xchg
inc
out
or
arpl
xor
and
in
xor
jnp
push
cmpsb
call
sub
je
popa
cwtl
repz
cmp
and
int
mov
add
fwait
mov
inc
add
out
lds
flds
mov
add
movsl
je
sarl
adc
pop
mov
sub
add
dec
jg
les
outsb
in
addr16
mov
sbb
cmp
cli
out
sub
cmp
int3
mov
lret
stos
xor
add
outsl
pop
iret
pop
dec
movsl
sub
movb
xchg
mov
add
test
add
pop
cmp
add
repz
mov
add
les
inc
push
cmpsl
sbb
lods
movb
aas
xchg
int
int
aas
cli
dec
and
sub
and
shll
or
sbb
add
in
jns
add
incb
push
cld
fdivrp
mov
ret
cli
inc
add
mov
fwait
jl
dec
cmp
rolb
ret
popa
cmp
lock
cmp
ss
lock
xchg
cmpsb
cmp
xchg
rcr
stos
mov
push
lret
loopne
enter
jecxz
mov
sbb
add
inc
add
mov
add
add
xchg
dec
cmpsl
sbb
dec
clc
xchg
sbb
add
pop
int
iret
add
dec
in
or
xor
push
sub
cwtl
or
xchg
into
push
enter
cld
push
sbb
or
xor
call
add
out
add
adc
add
dec
andl
inc
add
add
add
or
inc
mov
leave
jg
cmp
jo
int
add
cmp
adc
movsb
and
ljmp
call
mov
andl
ret
stos
push
xchg
jo
xchg
pusha
add
lea
mov
mov
mov
jle
sahf
mov
cmp
and
imul
add
fimuls
add
sbb
adc
mov
jg
adc
outsl
push
push
inc
pop
je
add
xor
in
cmp
dec
popa
push
es
fstl
xchg
ss
inc
in
divl
negl
inc
pushf
add
imul
inc
sahf
pop
jo
hlt
dec
add
mov
rcrl
call
inc
or
sub
inc
pop
addl
and
aas
push
in
repz
ljmp
loopne
fs
ds
out
mov
fwait
sbb
sysexit
jg
add
pop
mov
jp
add
loope
mov
dec
xchg
insb
out
adc
xchg
dec
out
mov
sahf
and
bound
mov
jl
dec
cmp
and
inc
add
loopne
jnp
icebp
call
adc
cmc
dec
movsl
nop
mov
lock
out
jns
scas
mov
data16
push
in
dec
mov
nop
popa
inc
pop
push
add
aas
ljmp
mov
lds
lock
mov
mov
add
push
add
or
fs
xchg
pop
stos
sbb
adc
ficoml
xchg
stos
inc
and
inc
add
xor
mov
pop
out
xchg
dec
sub
add
stc
jg
mov
bound
sahf
cmp
popa
xchg
sub
add
mov
xchg
xchg
jg
inc
add
out
inc
add
xor
aad
cmc
mov
xor
fisubrs
mov
dec
lahf
mov
push
arpl
data16
jo
push
add
in
enter
mov
nop
or
insb
dec
outsb
add
sub
or
add
or
pop
cltd
mov
leave
psllw
sbb
xchg
mov
add
mov
sahf
xchg
dec
adc
jg
sub
arpl
fildll
push
pusha
add
add
add
insl
out
dec
dec
jmp
add
add
nop
out
pop
xchg
int
push
push
movsb
shlb
aas
mov
ja
add
sbb
and
mov
ljmp
outsl
data16
jmp
or
add
jnp
pushf
jmp
mov
jae
push
cltd
in
jns
add
add
pop
pop
add
popa
xor
aad
gs
pushf
mov
add
lds
ss
cmp
push
test
out
sbb
les
xchg
ret
adc
ficompl
addr16
and
cmc
mov
add
add
xor
fnstsw
stc
mov
loope
add
cld
mov
add
xorl
cmp
addb
paddusw
in
mov
mov
mov
or
fwait
or
mov
int
subl
and
sbb
pop
cltd
sub
mov
push
ret
mov
cmp
lock
add
andpd
adc
scas
inc
mov
cltd
jae
andl
gs
ret
sbb
xchg
xlat
data16
movsb
ret
shll
or
rolb
or
shll
repz
sarl
xchg
add
jo
fwait
mov
jmp
jecxz
mov
mov
push
addb
and
out
dec
enter
pop
sub
adc
mov
inc
add
and
xor
dec
dec
gs
inc
mov
inc
add
mov
lret
add
add
cs
arpl
ja
or
xchg
js
push
cli
out
loope
add
sbb
in
hlt
out
nop
out
fisubrs
inc
jne
inc
add
cld
inc
sbb
cmpsb
xchg
jge
sub
lods
movsl
jl
movsb
inc
add
into
fcoms
and
push
lret
xchg
sub
fcom
fidivs
jno
mov
test
insb
cmp
push
sbb
lods
leave
mov
jg
sar
xchg
jl
mov
or
mov
mov
pop
pushl
sbb
sub
sub
cmpsb
pop
gs
test
and
rorb
adc
mov
dec
iret
sbb
mov
mov
into
int
repnz
mov
inc
mov
ljmp
sbb
cmp
mov
stos
outsb
pop
fs
mov
xlat
cmp
mov
jb
add
sbb
enter
out
les
mov
or
std
loop
xchg
jo
xor
push
insl
cmp
add
daa
pop
sub
jl
add
add
xchg
fimuls
cli
pslld
mov
aas
js
ret
mov
sbb
mov
sub
aam
mov
je
iret
add
rolb
daa
push
call
or
mov
and
inc
insb
in
dec
ja
xchg
mov
add
push
dec
lods
dec
mov
xor
movsl
add
out
add
add
add
sti
jnp
mov
add
out
mov
lahf
inc
subl
bound
je
push
xchg
xchg
fbld
loope
lea
leave
movsl
adc
ljmp
scas
mov
fs
sbb
mov
inc
filds
iret
cmpsl
incb
add
adc
xor
cmp
pop
cmp
enter
ja
daa
rcr
pop
push
mov
je
fnsave
add
insb
cwtl
dec
scas
push
mov
pusha
add
add
xor
ss
rolb
mov
ds
mov
mov
and
lock
pop
shll
fcoml
addr16
fwait
xchg
in
xchg
int
test
xchg
add
test
pushf
outsl
inc
add
add
xchg
mov
push
fwait
mov
sub
push
je
xor
push
add
ret
in
es
int3
push
mov
hlt
test
cmpsb
mov
or
adc
aad
xor
add
and
js
pop
stos
imul
fwait
pop
mov
add
add
rorb
mov
xor
iret
push
call
or
add
jb
loop
xchg
add
sub
pop
fiaddl
nop
inc
add
add
and
cwtl
icebp
mov
xchg
mov
mov
xlat
pop
mov
lds
jp
test
movsb
lea
jecxz
cmpsb
lcall
xchg
aad
sub
in
mov
xchg
cwtl
push
xchg
fldt
fucomp
add
cli
scas
inc
add
add
pop
ficomps
stos
not
lcall
pop
add
and
mov
mov
cmp
mov
dec
ret
push
xor
mov
jl
push
lcall
stos
add
xor
mov
sub
les
cmp
mov
add
pop
mov
out
flds
call
inc
sbb
inc
pop
push
inc
out
stos
scas
stos
clc
fnstcw
out
push
mov
stos
cmpsb
and
cltd
lods
or
push
or
push
or
popa
xchg
iret
push
js
mov
scas
sub
or
jno
add
jb
inc
add
pop
add
dec
push
jmp
sbb
mov
add
out
loopne
xor
jmp
cmp
sbb
hlt
cs
leave
stos
stc
mov
jge
inc
jb
pop
arpl
add
or
adc
ja
enter
test
stc
bound
and
je
pop
push
cli
fnsave
inc
add
sbb
in
or
jae
mov
aam
movsl
dec
out
mov
es
add
aaa
sbb
sbb
mov
sbb
add
mov
or
call
jnp
ss
and
inc
add
add
flds
ds
inc
and
insb
mov
test
cli
jo
pop
inc
sub
ss
sbb
xor
ret
imul
cli
jecxz
bound
jmp
sahf
sbb
mov
pop
sub
stos
or
cmp
dec
and
and
std
mov
push
inc
add
shlb
push
mov
jne
jbe
mov
test
out
sbb
inc
add
arpl
pusha
add
scas
icebp
pop
jmp
inc
and
xor
sub
je
mov
sarl
inc
add
mov
add
adc
sti
mov
mov
adc
mov
sub
add
cmp
sbb
and
xchg
in
and
dec
daa
and
call
xor
cs
cmpsb
divl
inc
cld
push
adc
addb
loopne
sbb
lods
lock
pop
cmc
out
add
push
jae
cmp
push
or
cmp
add
clc
or
lock
addb
iret
adc
ficomps
stc
adc
xor
mov
or
pop
push
add
mov
add
ljmp
or
xor
repz
movb
xchg
pop
sahf
xor
out
mov
ss
std
rclb
adc
pop
clc
mov
add
fwait
enter
jecxz
mov
je
mov
ficompl
loope
xchg
mov
mov
add
mov
jns
kmovb
nop
fisttpll
stc
cs
add
fdivrp
or
xchg
jbe
loop
add
inc
add
mov
movsb
aas
ja
aad
pop
popa
fistl
into
mov
or
stc
inc
add
movsb
incl
cwtl
pushf
addr16
jb
add
adc
add
cmpsb
mov
mov
inc
add
scas
in
cmp
add
xchg
lea
outsl
enter
bound
mov
add
push
movsl
bound
adc
loop
inc
add
inc
add
xor
adc
ja
pop
fcomp
push
hlt
mov
push
jl
mov
test
lds
int
daa
sbb
jmp
add
cmp
into
mov
pop
icebp
pushf
xchg
xchg
and
sahf
loope
jns
bound
lret
dec
cmp
jo
stos
jae
push
cmovg
cmp
sahf
cltd
dec
pop
aas
imul
dec
mov
dec
xchg
fwait
cmp
cmp
add
jle
adc
mov
das
ret
lock
add
or
lret
pop
call
xor
adc
mov
push
cmp
sahf
in
xchg
mov
in
jmp
mov
jg
movb
in
hlt
out
mov
scas
xor
push
rolb
mov
movsb
or
cmp
or
pushf
cmp
push
repz
mov
mov
sub
add
add
adc
sbb
movb
adc
sti
xchg
xor
test
pop
sbb
mov
data16
and
stc
cld
mov
cli
clc
les
rcrl
ret
jle
xchg
xor
fs
sub
push
push
aad
sti
popl
xchg
jecxz
mov
jo
cmp
add
add
test
out
pusha
add
fisubl
cmp
imul
dec
push
inc
add
das
dec
mov
popf
faddl
push
sbb
xchg
adc
add
mov
mov
push
in
jae
push
push
add
add
xchg
in
push
xchg
push
or
cmp
jp
add
jp
js
inc
mov
mov
xchg
sub
outsl
aad
sub
fs
or
mov
sbb
xor
push
mov
fst
decl
dec
mov
mov
cltd
sbb
addb
insl
xchg
test
mov
rolb
xchg
enter
push
mov
add
mov
xchg
cmc
fstpl
dec
cmpsb
mov
xor
pop
mov
sub
fistl
pop
fsubr
jbe
sub
outsl
mov
in
add
inc
add
xchg
fstpl
loope
stos
out
aaa
je
push
cmp
push
enter
push
jbe
mov
mov
sbb
imul
int3
in
push
jb
add
mov
test
add
and
add
testb
inc
add
fistl
fs
xchg
cwtl
ds
insb
mov
outsl
adc
mov
call
cmc
and
icebp
jg
bound
ret
mov
add
iret
popa
imul
mov
loopne
cs
or
fs
sbb
stc
rolb
mov
pop
cmp
lock
dec
and
fs
dec
pop
stos
and
xchg
icebp
cmp
add
call
jbe
sub
jecxz
nop
add
enter
mov
xor
jp
mov
mov
mov
fstps
cmp
ret
arpl
gs
push
pop
arpl
into
pop
add
jns
das
rorl
icebp
inc
add
push
aad
jae
jmp
bound
pop
push
mov
or
mov
mov
leave
pop
and
in
addb
lret
adc
jae
adc
xlat
test
adc
xlat
and
cmp
scas
jbe
std
popf
loop
push
test
sub
lret
popf
add
mov
pusha
add
pop
mov
repnz
sahf
sbb
xchg
scas
mov
gs
and
xchg
in
int3
sbb
mov
lahf
and
aam
in
and
add
jp
mov
jecxz
or
cmp
sub
inc
cmp
ss
sbb
mov
sarl
ficoms
jo
pop
gs
push
push
add
popa
fwait
testl
jo
push
jecxz
fisttpl
pop
adc
sbb
add
rcrl
add
add
add
and
mov
add
add
dec
mov
dec
sub
dec
movsb
pop
leave
outsb
cmc
mov
out
sbb
sbb
stos
mov
cmp
cmp
outsl
inc
sarb
orl
add
sbb
dec
mov
cmp
inc
inc
dec
gs
testl
call
xchg
les
jmp
push
out
dec
add
stos
cltd
mov
xor
loopne
or
bound
fnstcw
addb
xchg
mov
mov
data16
xchg
sub
xor
ret
loopne
fmul
les
mov
inc
mov
jl
push
into
aas
fstps
dec
push
jge
or
bound
or
decl
jecxz
shlb
loop
mov
pop
mull
mov
jbe
iret
insl
xchg
cmp
or
lcall
test
dec
sarb
pop
pop
xor
notl
sub
fistpl
std
or
negb
test
pop
fists
pop
lcall
inc
mov
mov
xor
cmp
cmp
dec
shrb
mov
jb
push
jle
xor
out
lods
xlat
lcall
sbb
mov
dec
adc
push
lahf
add
cltd
adc
cltd
sti
cmp
dec
pop
cmp
push
dec
pop
cmc
jle
clc
xchg
sub
push
cmp
mov
xchg
and
faddl
fdivp
mov
xchg
das
xor
mov
jg
dec
iret
adc
lahf
push
cmovo
jecxz
dec
pop
test
push
ficomps
jmp
jo
and
fmull
pop
cltd
pop
jb
mov
les
dec
inc
add
addr16
push
mov
inc
fsubs
mov
outsb
mov
or
rcr
xor
dec
or
sbb
stos
pushf
sbb
dec
xor
dec
or
mov
jae
add
mov
add
xor
xor
xorl
imul
es
add
sub
pop
jbe
add
inc
add
adc
ds
xor
cmp
jb
cmp
stos
pop
popf
pushf
sbb
sbb
addb
mov
mov
mov
dec
pop
pop
jge
push
add
dec
std
add
pushf
mull
rcr
mov
inc
add
mov
stos
xor
push
out
mov
add
mov
sarb
push
fcoms
add
push
mov
or
mov
add
push
pop
loope
add
cmp
in
dec
inc
add
sub
mov
test
movsb
cmp
xchg
mov
xor
and
imull
leave
mov
jp
add
mov
sub
lock
leave
das
push
xchg
pop
pusha
add
push
ret
inc
add
mov
and
jno
fidivrs
fistl
pushf
aas
push
iret
xchg
lods
pop
int3
mov
pushf
jbe
movsl
filds
add
add
les
cld
ja
data16
xchg
jo
data16
lret
and
sub
out
inc
sbb
lds
cmp
xchg
mov
incb
and
cmc
lcall
and
mov
add
sub
test
pop
jno
lcall
xor
jno
cld
dec
inc
lock
mov
aad
add
cmc
jne
cltd
dec
mov
adc
add
push
enter
icebp
pop
pushf
pop
std
loop
mov
jmp
cwtl
std
clc
int3
xchg
cmpsb
jge
xchg
cmp
test
jp
inc
add
cmp
call
js
ficoms
daa
hlt
jo
cmpl
push
mov
stc
scas
mov
mov
lcall
mov
add
push
and
jnp
popa
pop
vpcomuw
mov
fstpl
lret
aam
and
les
addb
movb
jae
and
lahf
addb
mov
add
leave
dec
movsb
inc
add
dec
xchg
sbb
inc
add
xchg
loope
and
popa
mov
pop
push
add
lret
stc
js
add
arpl
imul
adc
jg
add
clc
jo
add
imull
jge
jecxz
cmp
pop
in
xor
xchg
and
fsubrs
movsb
movsl
mov
into
cmp
sbb
add
lods
fs
cmp
jno
in
mov
mov
mov
roll
pop
hlt
bnd
cmp
mov
mov
lea
jb
xchg
cli
pop
lock
fmull
ja
xchg
and
lods
sbb
aaa
mov
dec
aad
loopne
mov
xchg
bound
imul
scas
mov
jle
mov
xor
dec
out
subl
fcomi
cmp
add
scas
out
mov
sbb
ljmp
ret
sti
rorl
loop,pt
insl
pop
or
outsl
sub
and
xchg
mov
sub
movb
xor
insb
jns
or
inc
mov
bound
sar
in
cmpsb
es
mov
mov
mov
push
pop
les
out
movb
popa
jnp
inc
add
push
push
add
roll
xor
jl
mov
lcall
stos
cmp
and
dec
pop
scas
sub
mov
fnstsw
divl
mov
fdivp
push
xor
push
les
addr16
add
push
pop
pop
cwtl
push
mov
lahf
out
push
xchg
std
push
and
sahf
loop
add
mov
jns
test
dec
jne
imul
lock
dec
mov
cmpsl
movsl
shrb
mov
outsb
lcall
add
repnz
rolb
jno
add
lahf
aaa
mov
sub
mov
into
push
ljmp
enter
pushf
mov
inc
add
mov
pop
mov
gs
sbb
comiss
outsb
pop
jecxz
and
scas
fsubs
push
mov
mov
outsb
int
dec
add
aam
sbb
and
je
lret
dec
inc
add
xor
testb
rolb
mov
add
bound
addb
add
push
sbb
xchg
pusha
add
xchg
movb
fidivl
pusha
add
lret
push
pop
sbbl
cmc
mov
cmp
test
mov
aam
jo
out
daa
mov
add
mov
cs
addb
fincstp
scas
addb
mov
add
stc
push
add
idivb
jle
popa
sarb
adc
xchg
push
mov
jge
call
dec
popa
jbe
cs
in
jge
push
or
push
mov
inc
in
adc
mov
cmpsb
pushf
ret
jge
movb
dec
insl
cmp
ljmp
or
dec
inc
scas
ret
mov
cmp
sarl
in
notb
dec
adc
out
jp
xchg
push
add
std
loop,pt
jnp
in
push
hlt
push
or
shll
xchg
sarl
inc
add
stos
jno
cmp
imul
push
add
cmp
pop
xchg
dec
mov
add
inc
add
aam
ret
xor
sbb
js
fistps
jp
push
dec
xor
addb
std
in
in
ljmp
fimuls
or
addb
cmpsl
shrl
mov
add
fnstenv
adc
pop
adc
bound
mov
jge
mov
pop
mov
add
ret
iret
mov
addr16
and
dec
icebp
mov
mov
movsb
xchg
ficomps
fstl
cmp
sbb
add
mov
addb
push
mov
and
test
pusha
add
sbb
rcrl
sub
sar
adc
movl
and
nop
shlb
dec
int
dec
or
and
leave
jno
imul
aaa
pop
dec
mov
lock
mov
add
mov
popa
cmpsl
push
or
adc
in
fwait
leave
les
jae
inc
sbb
gs
test
repz
jmp
addb
clc
jmp
add
cmovnp
out
out
repz
add
inc
add
idivb
add
dec
scas
add
jne
add
notb
mov
inc
add
push
push
mov
lock
jmp
xchg
lahf
mov
xchg
lret
xchg
adc
add
mov
cmpsb
addb
push
imul
mov
pop
pop
inc
imul
fisttpll
mov
xchg
scas
mov
add
loopne
add
mov
loop
cld
lods
adc
cmp
fcmovnb
add
mov
mov
scas
rcr
xor
test
mov
mov
push
ret
mulb
sub
cmp
test
mov
std
mov
cltd
push
in
sti
aas
and
mov
and
std
clc
jmp
nop
xor
inc
add
lods
outsb
pusha
add
mov
icebp
test
add
in
mov
adc
daa
mov
clc
imul
xchg
mov
les
outsl
jae
int
pop
je
pop
jg
mov
shrl
loopne
push
add
loopne
mov
rolb
add
sbb
xchg
out
ret
js
loope
sahf
push
add
pop
lods
xlat
and
stc
outsb
fidivrs
outsl
repz
jg
inc
add
push
int3
xchg
scas
or
xchg
mov
arpl
add
push
pop
cmp
adc
in
movsl
sbb
jae
add
add
cmc
leave
jae
add
fsubs
dec
sub
dec
pop
cwtl
fiadds
push
imull
nop
jmp
stos
push
pusha
add
inc
add
into
inc
add
insl
lods
movsb
addb
pushf
ret
mov
mov
jns
add
add
add
ret
jp
xor
movb
add
lds
push
data16
and
orw
jne
loopne
add
rcll
pop
dec
ret
mov
das
jbe
adc
jge
inc
and
push
ret
out
mov
jle
fs
xor
add
or
xchg
or
loope
mov
out
mov
jbe
push
icebp
xor
inc
jge
and
int3
dec
xor
lods
and
mov
rolb
add
push
icebp
mov
or
and
inc
add
mov
adc
cmp
mov
jecxz
cs
add
lods
ja
jg
pop
push
add
xor
neg
aad
fwait
ret
cmp
cmc
daa
mov
add
add
sub
rcr
loope
and
enter
fwait
and
fistpll
jnp
out
rorl
or
add
xchg
pop
sti
push
shlb
push
add
cwtl
fwait
adc
pushf
lret
mov
xor
dec
dec
fwait
icebp
js
cld
xchg
push
push
cmp
les
jb
adc
inc
daa
push
sti
sub
mov
cmpsl
sub
cmp
fnstsw
out
mov
arpl
mov
and
pop
and
add
add
repnz
test
repz
repnz
clc
fsubs
mov
fldcw
add
push
testb
lahf
movsl
mov
stos
mov
add
cmp
rolb
cmc
xor
mov
inc
add
imul
movsb
out
imul
out
add
or
bound
cld
test
sbb
test
cmpxchg
sub
ss
in
and
call
jne
out
testl
leave
sub
fdiv
push
fildll
jbe
mov
movsb
push
pop
and
bound
popf
pop
mov
or
outsl
sub
int
lods
or
and
dec
arpl
ss
lcall
add
rorb
data16
cwtl
jecxz
incb
and
xchg
jl
fisubl
dec
ret
aaa
int3
add
or
add
mov
xor
clc
pop
and
push
enter
jo
fldcw
fdivl
mov
aam
imul
xlat
cmp
add
out
cmp
fucomi
ret
fstp
push
mov
cmpsb
jmp
dec
sbb
sbb
push
lock
in
push
jne
jno
int
mov
jl
sub
add
mov
or
sub
cli
pop
dec
ss
jae
mov
loop
lock
or
call
mov
mov
ss
stc
add
aaa
cmp
imul
jge
push
fwait
cmp
addb
mov
xor
cmp
inc
push
mov
sub
mov
sbb
sbb
push
push
push
push
push
mov
addb
dec
hlt
jecxz
lret
in
mov
add
add
add
adc
add
mov
into
inc
add
push
das
push
lcall
mov
leave
mov
pop
mov
test
and
je
add
les
pop
add
data16
mov
add
setb
roll
add
xor
out
js
mov
mov
es
add
push
out
rcll
xchg
lods
mov
dec
movsl
ficomps
dec
pop
push
push
cmpsb
cltd
push
add
loop
das
mov
outsl
mov
popa
cmp
cmp
inc
outsl
decb
jb
insb
pusha
add
sbb
lods
inc
add
popf
jmp
addb
pop
enter
add
xchg
pop
call
scas
xchg
les
mov
rolb
ret
fnstcw
sarb
add
pop
sbb
mov
movsb
push
add
pop
push
int
mov
xchg
imul
hlt
xor
xorl
inc
add
shrl
mov
add
cmpsb
movsl
rolb
sbb
cli
push
mov
dec
movb
lea
jge
jge
cmpsl
add
add
xchg
fisttpl
idivb
and
push
scas
and
movsb
jo
fldt
mov
imul
js
xlat
sbb
gs
jnp
mov
cmpl
add
inc
lods
mov
mov
xlat
sti
mov
leave
or
push
add
cmp
ljmp
xchg
into
xchg
add
xor
push
push
push
out
push
addb
into
rcll
dec
sbb
mov
hlt
sub
aaa
dec
cmp
pusha
add
fwait
mov
xor
jo
popa
incl
iret
into
push
dec
xor
cmpsl
mov
sbb
pop
cmp
add
cld
popa
mov
jnp
inc
lret
outsb
sbb
xchg
in
imul
sarl
mov
int
shrb
mov
dec
and
leave
into
xor
adc
test
subps
movsl
add
hlt
stos
jmp
lds
mov
mov
pop
shld
and
xchg
outsb
fs
adc
loope
pop
ja
and
dec
add
dec
mov
add
mov
mov
lods
push
leave
jb
stos
jbe
aam
xchg
testb
out
jle
add
mov
ljmp
arpl
cmp
pop
sub
cwtl
sbb
faddl
xor
add
pop
or
fnsave
mov
bound
call
jle
inc
aam
test
jl
in
jno
lds
add
pop
mov
arpl
cmpsb
adc
hlt
mov
inc
sub
xchg
or
and
cmpsl
sahf
scas
ret
mov
outsb
cmp
xchg
inc
jae
bound
clc
in
add
add
mov
push
lret
dec
dec
push
mov
sbb
dec
xchg
js
add
dec
insl
mov
out
negl
mov
pop
scas
xchg
in
or
xor
inc
add
dec
lods
pop
push
push
roll
int3
enter
xchg
push
push
lret
daa
sbb
iret
mov
inc
sbb
and
inc
add
into
mov
or
xor
je
xor
lcall
sub
fisubl
add
arpl
test
imul
inc
sti
pop
stos
push
jmp
mov
mov
imul
es
arpl
add
add
add
xchg
les
mov
pop
dec
cmp
dec
jnp
repz
test
rclb
lret
scas
sub
adc
je
add
je
cmp
xchg
add
rolb
pusha
add
mov
mov
mov
mov
xor
xor
mov
pop
pop
int
call
shll
mov
adc
pop
insl
repnz
movsl
and
xor
push
add
cmp
lea
mov
cli
sbb
and
int3
cmp
inc
arpl
mov
jg
add
clc
pop
fidivl
dec
loopne
movsb
loopne
add
test
mov
add
pop
test
dec
xchg
addb
dec
ret
imulb
and
negb
sarl
sbb
das
aas
dec
shlb
sbb
hlt
jns
mov
sub
daa
pop
pop
roll
popa
or
in
add
fdivrl
out
aad
icebp
jno
dec
xchg
add
bound
out
addb
cs
ss
or
lcall
imul
push
push
loopne
sti
stc
and
mov
fwait
seta
mov
mov
push
sbb
dec
push
xchg
out
sub
dec
dec
mov
and
out
arpl
or
mov
xor
cmp
lcall
pop
loopne
jae
sub
fwait
call
mov
adc
jg
adc
jbe
jb
sub
movb
in
leave
or
dec
dec
addb
jne
lcall
jb
xchg
pop
addb
ret
enter
fdivrl
aam
add
or
int
arpl
mov
movlhps
jns
pusha
add
push
pop
xchg
test
mov
adc
or
idivl
and
rolb
aas
xchg
and
push
mov
jne
scas
jg
xchg
push
loope
sbb
adc
pop
sar
and
aaa
dec
or
dec
cmc
cmp
xor
cmp
int
outsl
push
popf
jbe,pn
pushf
scas
ret
imul
pop
cwtl
mov
sbb
push
cwtl
aam
add
xor
dec
xchg
mov
mov
inc
add
cwtl
mov
fsubrl
lret
inc
add
bound
inc
dec
es
jo
fldcw
test
xor
clc
into
dec
cltd
js
push
stc
test
jl
aaa
pop
jmp
bt
add
add
cmc
bound
push
stc
flds
add
fistps
outsl
shl
enter
pusha
add
pop
into
dec
sbb
add
fdivrl
jb
add
pop
push
sbb
add
fidivrs
je
pop
lahf
fcmovnu
pop
mov
arpl
js
mov
push
push
in
test
cli
push
sbb
fcmovbe
xchg
jg
lahf
sub
insb
dec
int3
insl
fdivp
and
loop
movsl
mov
mov
test
lods
mov
add
fcmovne
adc
lret
dec
adc
add
mov
in
or
xor
pop
cmc
insl
add
shrl
xchg
cmp
push
add
add
fstpt
mov
mov
fcoms
add
pop
pop
add
xadd
sbb
xor
adcl
clc
mov
inc
aam
das
lahf
jb
sub
xchg
mov
rclb
ljmp
pop
addb
xchg
fidivrs
ss
in
sbb
repnz
mov
int3
dec
pusha
add
std
mov
popa
popa
adc
jmp
push
ficompl
jnp
mov
xchg
mov
xchg
bound
out
sbb
jnp
fdivl
outsb
mov
pop
mov
add
cmpsb
sbb
inc
add
adc
popf
fs
lods
inc
xor
inc
add
outsb
sahf
pop
inc
add
jge
lods
insl
test
pop
pop
jns
sub
push
jp
jnp
je
dec
ljmp
iret
movsl
xor
aaa
add
test
addb
add
mov
loop
gs
jl
add
fldcw
add
add
addb
aam
adc
adc
call
jecxz
add
cmpsb
inc
jae
push
sub
fchs
fsubl
popa
add
add
add
ds
das
out
lock
call
add
outsb
cmp
jmp
adc
insl
icebp
cmp
mov
mov
sub
addb
add
movsl
mov
xchg
push
cmp
test
into
movsb
fwait
inc
adc
test
jl
jbe
dec
repz
xchg
fnstenv
ja
leave
mov
push
xchg
je
sub
lret
cmp
adc
xor
pop
xor
aaa
dec
ljmp
add
mov
and
and
pop
or
lret
lret
xchg
inc
mov
add
adc
fwait
xchg
lock
lods
xchg
inc
add
imul
or
jns
mov
jmp
inc
add
rcrb
and
push
push
movsl
xchg
xchg
leave
inc
jecxz
in
mov
xor
mov
xchg
xchg
mov
test
mov
add
xchg
icebp
inc
add
xchg
sub
sbb
jmp
add
or
jmp
add
test
push
sbb
jbe
lds
shrb
pop
lock
clc
mov
lods
insb
mov
add
sti
push
into
scas
pop
lods
mov
or
push
dec
lret
test
mov
xchg
sahf
add
jmp
inc
add
mov
mov
dec
icebp
fdivs
or
cmc
adc
enter
dec
or
xor
pop
iret
ljmp
mov
add
addb
add
sti
imul
jae
mov
add
roll
add
xchg
jnp
stos
sub
stos
mov
lahf
out
scas
push
mov
mov
add
xchg
cmp
stos
push
mov
mov
add
mov
movb
push
add
clc
scas
sahf
xchg
adc
push
aad
clc
test
bound
fld
add
pop
push
add
inc
add
jb
arpl
lcall
push
xchg
mov
push
add
sbb
movsb
out
ret
loop
mov
dec
push
dec
sti
add
add
imul
cmpsb
xlat
lret
cmp
lahf
mov
sbb
movsl
aam
aad
sub
cmp
imul
test
dec
das
and
xchg
ret
lock
cld
cmc
fstpt
les
jmp
or
lock
and
inc
add
imul
fdivl
cmp
pop
call
or
adc
add
push
lret
dec
lret
addb
mov
pop
cmp
lock
mov
dec
mov
jg
or
add
out
add
adc
mov
push
popa
xchg
dec
into
adc
arpl
push
jge
aas
inc
pop
cli
popa
push
dec
push
test
add
jle
add
ljmp
add
lds
repz
fs
popa
xchg
mov
jg
mov
push
xchg
adc
xchg
aam
inc
add
add
hlt
adc
addb
add
inc
add
adc
add
pop
dec
ret
adc
mov
cmp
cmp
ljmp
mov
iret
fcmovne
imul
lret
cmp
mov
int
addb
add
rolb
movb
add
push
push
in
pmullw
jns
add
jmp
add
in
imul
fbld
add
roll
mov
sub
leave
aad
js
inc
add
add
mov
pop
jo
adc
add
fistpll
imul
add
jo
mov
sti
xchg
rcl
add
add
movl
popf
test
push
lahf
mov
xchg
push
cmp
add
add
mov
popa
pop
jb
cmp
repnz
add
add
popa
insl
adc
aad
jp
mov
addb
leave
cmp
pop
into
push
xor
cmpsl
rcr
add
cmp
mov
in
lahf
sarb
sub
and
ret
pop
dec
cmp
and
hlt
pop
es
pusha
add
int
mov
hlt
mov
mov
lds
jbe
aad
fidivrs
mov
int
dec
lea
cmovg
call
rolb
add
and
repnz
add
ret
mov
out
arpl
loop
dec
sub
inc
add
hlt
xchg
add
or
xchg
imul
mov
ret
call
pop
mov
and
pop
mov
push
push
xor
inc
sbb
sbb
adc
xor
mov
sbb
loop
add
mov
xchg
std
into
std
in
popf
inc
outsb
mov
xlat
pop
pop
adc
rolb
mov
scas
xor
lcall
loope
test
sub
push
es
jns
inc
add
mov
mov
cmp
mov
sub
add
push
add
mov
jle
aas
dec
push
sub
and
add
adc
or
popw
sbb
add
adc
and
mov
push
jmp
cltd
adc
addb
sahf
call
fldl
aas
xchg
pop
pop
mov
stos
inc
add
rcr
lods
popa
adc
push
mov
add
jmp
add
movsl
push
add
inc
add
jmp
jp
lret
add
or
xor
add
sbb
add
bound
mov
sbb
arpl
bound
cmp
or
add
xchg
stc
ret
mov
add
loop
and
jns
xchg
xchg
lahf
pop
xchg
movb
fdivr
aam
cmp
xor
in
scas
fs
ret
add
inc
add
imul
jle
movsb
lods
int
xchg
adc
cmc
push
add
lock
les
jmp
cmp
jl
jns
sub
pop
jp
mov
outsl
jmp
stc
insl
push
jno
lret
xor
pop
addb
scas
out
ljmp
mov
out
cmp
sbb
test
idivb
mov
cmp
out
inc
ret
aam
mov
jmp
or
mov
xchg
lcall
xor
add
outsb
mov
mov
movb
cmp
sbb
push
repz
aad
stos
push
loop
sub
add
add
dec
add
jbe
xlat
push
pop
mov
stos
xchg
xor
ret
leave
cmp
mov
push
sbb
pusha
add
in
fsubl
mov
add
insl
and
mov
out
aaa
sub
outsb
scas
xchg
mov
cmp
aad
scas
jg
int
and
pop
xchg
add
push
jle
add
es
inc
inc
add
cmp
sbb
add
inc
add
cs
dec
bound
adc
fcomps
int3
fnstenv
sar
cmp
sub
push
shll
cmp
stc
fwait
ss
pop
ja
pop
std
stos
lods
cld
dec
outsb
and
pop
lods
je
xchg
pop
out
adc
mov
jp
mov
xor
int3
pop
xchg
jnp
in
mov
aaa
mov
cmp
cmp
mov
xchg
mov
stos
jo
adc
push
clc
mov
bound
or
inc
add
jg
rolb
pop
test
mov
jp
sub
add
int
mov
repnz
addb
jne
imul
shll
xchg
mov
and
sbb
dec
mov
out
push
dec
cs
adc
shll
push
lahf
sahf
mov
and
cmp
pusha
add
xchg
push
shll
sbbl
call
fcmovnb
hlt
jbe
es
ficoms
iret
rolb
inc
pop
mov
push
jne
adc
add
sbb
sub
aam
js
cmc
mov
adc
lahf
clc
leave
addr16
cld
and
ret
iret
pop
hlt
pop
cmpsb
mov
add
out
ss
dec
mov
mov
adc
sub
xchg
movb
mov
add
pop
dec
and
addb
pusha
add
ret
icebp
in
shll
mov
mov
outsb
xchg
sub
add
aaa
in
test
mov
fstps
inc
sub
sub
and
mov
ljmp
jp
jmp
or
dec
add
mov
mov
outsl
sar
xchg
pop
and
js
imul
xchg
jmp
xchg
fldt
rolb
lea
cmc
add
add
mov
lret
mov
pop
adc
push
ficoml
cli
iret
dec
cmpsb
mov
add
pop
dec
ror
push
mov
es
pop
add
add
inc
into
mov
rcrl
call
loope
xchg
sbb
mov
outsb
mov
es
dec
mov
lret
xor
sbb
sub
movb
dec
jbe
add
push
push
loop
push
dec
ret
pop
es
or
add
int
adc
fistpl
xor
mov
add
dec
add
fstps
cld
inc
pop
test
xchg
jns
add
cld
cltd
ja
dec
adc
mov
push
outsl
mov
jae
add
add
popa
push
add
jne
aaa
dec
cmp
pop
rcr
clc
jb
adc
imulb
cmp
mov
imul
out
cli
push
jnp
es
xchg
std
cmp
inc
add
scas
nop
add
outsb
inc
add
or
add
mov
mov
insb
push
xchg
imul
sbbl
daa
adc
popf
cwtl
mov
stos
xchg
stos
das
rolb
add
mov
add
and
dec
outsl
jno
pop
xor
jae
xchg
pop
lahf
cmpl
mov
pusha
add
add
je
lret
lahf
shlb
add
and
in
sbb
out
push
mov
jbe
dec
daa
xchg
faddp
add
mov
push
fs
gs
mov
mov
hlt
mov
sbb
les
popf
mov
cmp
test
mov
mov
adc
adc
pop
or
pop
stc
pop
test
sbb
jg
and
add
mov
loop
lcall
rcrb
pop
movsb
cmp
push
mov
adc
insb
push
mov
popf
lahf
mov
insb
sub
adc
jnp
dec
ffreep
add
push
jle
ljmp
in
cli
jmp
fs
inc
add
testl
xor
imul
adc
cli
cld
outsb
xchg
test
sar
mov
loop
ret
lret
cmp
pop
lock
or
add
dec
fidivrs
sbb
push
sbb
lock
dec
or
movsl
flds
add
xchg
inc
subl
add
jg
mov
add
mov
jp
cld
mov
sbb
dec
mov
add
aaa
std
subl
or
pusha
add
lcall
mov
adc
sub
aam
sbb
test
dec
jnp
dec
fidivs
dec
divb
adc
addb
xor
inc
push
aad
mov
push
mov
add
fildl
bound
imulb
mov
cwtl
sub
sbb
or
xchg
or
cli
je
xor
negl
jae
mov
jbe
or
iret
pop
das
push
add
rcll
adc
add
add
loop
xlat
jmp
adc
jle
pop
clc
pop
scas
std
adc
push
xchg
test
add
pop
add
add
push
aad
xor
pop
pop
sbb
fs
add
out
fsubp
add
cmp
sbb
loope
in
popa
shrl
test
loopne
mov
mov
mov
outsl
jbe
inc
add
sar
call
mov
inc
add
mov
bnd
subl
mov
out
xchg
pop
div
fsts
cld
imul
int
jmp
or
shlb
jne
mov
push
js
xchg
fbstp
xor
add
getsec
dec
or
push
add
push
mov
test
xor
aas
or
pop
pop
cmp
pop
daa
jle
fstps
add
jnp
pop
cs
sbb
pop
dec
jmp
pop
push
daa
test
adc
imul
pop
cmp
adc
stc
mov
out
add
loopne
and
nop
mov
jmp
or
jge
ljmp
xchg
jne
dec
test
mov
add
gs
pop
mov
or
sbb
xor
xlat
aaa
outsl
add
add
stos
outsl
mov
lcall
sbb
or
add
shlb
dec
dec
cli
ljmp
jnp,pt
sti
mov
mov
xchg
cmp
xor
or
and
sub
repz
xchg
mov
sub
jno
xlat
dec
pushl
in
mov
xchg
push
decb
nop
fs
jle
lcall
int3
fiadds
jge
lret
shll
add
imul
mov
clc
push
in
lea
adc
inc
add
xor
movb
mov
pop
dec
dec
lock
cmpsl
xchg
cmp
xor
mov
andl
jne
das
in
inc
add
insb
cmp
outsb
rcr
dec
inc
add
daa
fstpt
movsl
in
mov
popa
sub
aaa
ja
fcom
stos
adc
leave
mov
lods
roll
inc
adc
add
jns
sarl
addr16
push
mov
xchg
mov
add
fists
lods
inc
inc
add
mov
data16
add
xchg
jg
add
imul
stc
scas
fucomi
ds
lret
push
sahf
lret
sbb
cltd
out
aam
int
movb
cmp
fs
dec
add
adc
jmp
test
add
es
cmp
mov
cmpsb
sub
lahf
movsl
imul
fisubrl
mov
test
dec
dec
in
scas
jp
mov
sub
dec
js
fnstenv
mov
inc
xchg
xchg
imul
sub
jle
imul
mov
push
pusha
add
incb
push
ss
popl
jo
pop
jg
inc
adc
imul
cmovge
filds
add
or
into
pushf
adc
add
inc
add
dec
inc
fadd
add
movsl
loop
lds
dec
into
add
je
es
jne
dec
les
jae
in
aam
jp
rolb
dec
jge
inc
add
or
out
adc
inc
add
xor
mov
in
movsb
ret
notl
leave
push
add
lret
sbb
adc
pop
add
pusha
add
fwait
nop
in
cmp
sub
or
aam
jnp
lods
testl
or
inc
adc
add
pop
ror
push
cmp
sbb
add
pushl
inc
add
mov
or
fdivs
dec
cmpsb
xor
shll
stc
sub
push
push
jle
sbb
xchg
xor
add
aaa
in
movb
push
add
fidivl
js
aad
inc
cs
sub
push
jo
add
sub
add
push
test
mov
stos
add
daa
pop
loope
jbe
fs
jo
aad
js
popa
dec
jno
push
clc
cmp
dec
jge
pop
mov
mov
insb
aaa
adc
add
out
dec
sub
jp
pop
aas
lock
loop
sub
daa
sbb
out
stos
test
add
aaa
sbb
pop
rcll
ja
sub
mov
mov
jg
es
cmp
sarl
adc
add
lret
fcmovbe
add
add
and
mov
mov
jmp
jmp
out
daa
dec
outsb
fld1
outsb
mov
clc
sbbl
into
or
add
inc
pop
fcmovnbe
aaa
dec
inc
add
test
add
add
pop
jle
add
xor
loope
ret
add
add
dec
in
test
push
or
outsb
icebp
loopne
xor
inc
push
fadds
push
jge
lods
ss
leave
mov
dec
xchg
imul
push
inc
add
adc
sahf
dec
jge
inc
add
mov
jbe
outsb
pop
cmp
int3
sbb
pop
mov
adc
lcall
movsl
imul
ror
push
ret
mov
add
addr16
mov
std
jmp
pusha
add
push
add
stos
cmp
push
into
jb
cmp
dec
sub
cmp
add
add
popa
xchg
clc
jb
push
lds
repz
mov
addl
out
cmp
sti
nop
cli
jg
mov
cmp
xchg
push
test
jnp
mov
cmp
in
and
cmpsb
xor
dec
stos
roll
scas
sbb
daa
divl
add
mov
clc
cmp
add
xchg
cs
pop
xor
scas
fs
inc
mov
or
adc
aad
pop
jb
cli
xor
arpl
push
loopne
mov
int3
add
hlt
sub
cld
xor
bound
iret
xchg
jl
int
test
daa
lret
sbb
loope
imul
mov
mov
xor
enter
mov
jp
test
pushf
repz
add
xchg
cmc
push
imul
sbb
jo
int3
fsub
lds
or
xor
cmp
mov
daa
xor
or
mov
aam
add
sbb
cmc
mov
jl
mov
and
outsl
cmp
jmp
ret
aaa
shl
addb
mov
add
stc
mov
mov
rolb
xor
jecxz
mov
hlt
es
adc
mov
cld
mov
aas
aam
add
mov
test
and
add
sub
rorl
mov
mov
fs
lods
mov
test
movsb
xlat
dec
std
sbb
cli
out
in
outsb
and
lahf
sub
xor
pop
adc
js
jbe,pt
push
cmp
sahf
mov
pop
popa
mov
lds
add
stc
adc
pop
inc
add
xchg
adc
arpl
fbld
leave
sbb
rcrl
enter
add
add
add
dec
pusha
add
andl
ja
roll
add
jnp
cmpsb
adc
loopne
xor
jno
imul
mov
cld
daa
mov
popa
in
sub
mov
and
xor
and
mov
add
dec
cli
mov
repnz
jge
push
mov
int3
dec
jecxz
ret
or
mov
in
call
adc
inc
or
loope
sbb
inc
add
add
and
aaa
inc
sub
ficomps
les
pop
jle
push
sahf
fildl
je
les
rolb
mov
dec
je
inc
jecxz
add
es
sub
pushf
idiv
popf
sub
inc
pop
push
sbb
add
adc
jmp
or
inc
add
mov
sub
xchg
mov
add
add
add
cld
push
out
xor
jg
and
fildl
inc
add
insb
dec
popa
push
popa
imul
adc
push
insb
and
inc
sub
pop
jge
nop
mov
and
test
sahf
enter
mov
xchg
in
rolb
add
je
leave
insb
stc
xchg
movb
cli
fsubrl
jg
push
bound
xorl
lret
and
es
gs
sbb
pop
imul
hlt
repz
loop
mov
add
xchg
jmp
cmp
dec
mov
lods
fcoms
inc
push
inc
add
add
fidivrl
clc
mov
pop
xchg
fmull
lcall
push
add
int
xlat
mov
fisttpll
aad
jnp
adc
add
rclb
mov
test
aam
add
imul
dec
movsb
xchg
cld
mov
sahf
jmp
mov
ljmp
addb
stos
jl
add
or
inc
fxch
rolb
ss
rolb
cli
sub
jae
cmp
scas
iret
mov
cmpsl
sbbl
add
mov
add
xchg
mov
div
xor
mov
jle
mov
daa
pop
pusha
add
addr16
adc
lds
or
bound
les
insl
jne
in
cs
cmp
hlt
push
add
mov
sub
mov
rorb
in
ss
mov
pop
push
ss
movl
mov
and
rolb
dec
mov
push
in
sub
lret
add
cmpsb
ljmp
movsb
or
insl
ljmp
add
xor
jae
imul
aaa
push
sti
sbb
cltd
insl
xchg
in
ffree
add
sar
cmp
jge
mov
add
ss
pop
and
fldt
sub
gs
lods
push
xor
inc
addb
ds
mov
mov
push
mov
dec
xor
add
sbb
push
add
aam
into
test
stc
jecxz
mov
push
jg
xor
mov
aam
sbb
jl
sub
xchg
sbb
movsl
into
add
shrl
add
add
mov
mov
add
lock
shl
add
fs
xor
xor
fcmovnu
hlt
mov
pop
out
push
jne
je
sbb
push
push
jle
mov
inc
add
adc
loope
jne
dec
out
std
jge
sub
inc
add
sbb
call
add
stos
dec
push
shll
stc
jl
sbb
adc
ss
mov
pop
mov
mov
cli
shl
pop
cmp
pop
cwtl
jo
xor
add
mov
insl
cmp
mov
sub
aad
add
cltd
adc
add
pop
addb
and
mov
and
out
mov
jmp
in
fistpll
jns
bound
jge
loope
mov
repz
movsb
popa
lds
or
xor
add
and
cmp
stc
loope
mov
cvtps2pd
jmp
add
xor
push
add
dec
push
xor
popf
jb
popf
repz
mov
cwtl
aaa
fldcw
xorl
ss
jnp
aam
out
bound
push
addb
add
xchg
popf
pop
pop
jle
jne
add
aaa
je
add
inc
inc
add
nop
iret
jb
repz
std
mov
fists
add
pop
jg
sbb
pop
inc
add
add
or
push
aas
pop
insb
lret
aaa
mov
fiaddl
sub
cmp
loopne
add
das
test
cmp
push
dec
or
or
fistpll
addr16
cmpsb
sub
dec
insb
push
fsubrs
push
imul
sbb
mov
push
ret
sub
lret
push
mov
lret
push
mul
add
sub
in
gs
rolb
lret
inc
sub
add
and
icebp
fisubl
xor
xor
add
cmc
add
add
outsb
out
sahf
cwtl
add
pop
sub
pushf
push
mov
movsl
pop
add
jnp
jl
insb
cld
sub
scas
icebp
jnp
test
add
pop
gs
dec
lahf
push
fidivrs
mov
cmc
out
movb
pop
test
add
mov
mov
dec
dec
addr16
push
movsb
add
adc
inc
inc
mov
push
popa
test
jge
xlat
in
add
hlt
lds
jnp
repnz
test
fisubrl
cmp
inc
imul
inc
add
bound
int3
or
outsb
movb
jg
call
and
and
sub
push
jge
xchg
add
xor
pop
fnstenv
push
jecxz
pop
je
inc
add
mov
xchg
push
add
xchg
test
jecxz
push
dec
or
ljmp
pop
nop
jmp
int
fstpt
mov
cmp
add
add
dec
lea
add
mov
add
add
test
sub
outsl
negb
add
jecxz
sbb
sbb
mov
mov
lds
add
movb
jne
push
and
fnstsw
test
cs
add
arpl
and
push
iret
hlt
inc
leave
add
cltd
fisttps
stos
xlat
addb
jbe
test
mov
scas
jb
add
shl
fsubr
xor
add
add
xchg
mov
xlat
mov
ret
addb
inc
jmp
fdivs
cmp
lahf
or
cli
inc
add
push
test
negb
jns
add
inc
add
mov
pop
adc
xchg
sti
jae
add
inc
add
pop
mov
movsb
fidivl
idivb
inc
movsl
push
xor
mov
imul
ficomps
loop
sahf
add
inc
add
mov
add
cmp
cmpsl
pop
adc
pop
pop
je
pushf
insl
cmpsb
xchg
ja
xchg
sub
xchg
xlat
and
das
loop
dec
sub
mov
inc
fidivl
cmp
mov
ret
add
xchg
or
shll
push
cmpsl
outsl
and
pop
es
sub
les
pop
sbbl
xchg
cmp
inc
daa
push
and
std
and
adc
add
in
dec
pop
sub
push
mov
add
jl
and
ret
test
popf
add
shrl
lahf
pop
mov
push
in
arpl
push
jecxz
pop
addr16
sbb
add
add
mov
xchg
jae
add
mov
push
add
frstor
fwait
pop
ss
jno
cwtl
je
jg
in
icebp
xor
sbb
xor
or
xor
adc
repz
mov
in
daa
rorl
and
adc
add
int
int
std
bound
xor
repz
mov
faddl
mov
nop
add
and
mov
outsb
lds
sub
sbb
jecxz
xchg
xchg
adc
ljmp
adc
idivb
jmp
lds
fwait
xlat
pop
popf
push
add
mov
inc
add
fidivrl
imul
mov
daa
inc
in
xchg
dec
pop
out
jmp
add
lea
xor
xor
bound
shl
adc
aam
adc
mov
movsl
sti
mov
xchg
xor
sbb
out
sub
pop
add
push
add
jge
bswap
jno
les
or
fldcw
test
mov
xchg
pop
and
loop
add
div
aas
arpl
push
flds
add
loopne
and
lahf
out
cs
and
stos
addr16
addb
cmp
mov
pop
mov
hlt
sub
test
arpl
mov
pop
adc
loope
orl
leave
dec
loop
addb
icebp
pop
sbb
fs
leave
arpl
aaa
xchg
cs
adcl
addl
mov
fcmovne
add
popa
clc
inc
add
pop
dec
leave
out
shl
lret
sbb
mov
lcall
aam
adc
cld
rcll
inc
add
cwtl
sbb
xchg
repz
sub
sti
int
ss
xor
jg
push
push
or
addb
push
inc
add
dec
sbb
xchg
out
fnstenv
les
popf
jno
dec
jo
pop
fcmovu
sti
in
xor
arpl
cmp
mov
add
inc
lods
gs
mov
movsl
sub
xchg
cmp
stos
sub
mov
and
lret
or
and
or
imul
dec
dec
pop
lods
sbb
add
xchg
loopne
cmp
lahf
sbb
ss
dec
test
dec
test
out
cmp
insl
addb
pop
add
lahf
mov
jecxz
outsb
cmc
stc
stos
dec
pushf
or
leave
lea
add
add
repz
jo
fsubr
cmpsb
dec
or
cmpsl
cmc
cmp
jecxz
pop
fimuls
xchg
ret
cmp
add
movsl
loop
daa
jo
mov
dec
jp
cld
fs
pushf
adc
xor
sbb
sbb
add
dec
inc
add
dec
lods
push
or
imul
inc
add
inc
add
xchg
fcmove
insb
fstl
cmp
pop
aad
sbb
xor
cmp
jl
hlt
cmpsb
aad
xchg
cmp
mov
sti
shl
lret
enter
sbb
iret
rolb
inc
add
pop
inc
add
push
add
out
sbb
jmp
lods
leave
rolb
out
jl
imul
pop
jp
adc
xchg
mov
mov
mov
and
sub
sti
adc
addb
imul
add
push
xchg
fimuls
add
add
xor
pusha
add
and
sbb
inc
jp
icebp
push
ss
and
stos
ss
stos
hlt
test
xor
cmpsl
adcl
jl
lods
cwtl
mov
add
jecxz
clc
rcrb
add
nop
cltd
jg
ljmp
push
mov
cmpsl
add
dec
mov
repz
out
or
mov
mov
das
push
push
es
mov
adc
sti
xchg
cmpsl
mov
xor
iret
sbb
jno
add
mov
cmc
sbb
rolb
sbb
adc
jmp
std
dec
push
xchg
and
xchg
jbe
fsubrs
daa
mov
popf
sbb
push
push
lock
les
cld
push
add
movsl
sldt
adc
movb
ret
mov
fbld
add
push
cmpsl
popa
xor
out
test
loopne
movb
xchg
je
addb
and
fisubrs
push
nop
jae
inc
add
or
sub
sub
aaa
icebp
repnz
mov
push
inc
add
xchg
std
push
rolb
sub
stc
dec
insb
xchg
test
or
mov
js
rolb
test
xor
nop
repz
mov
outsl
call
jecxz
and
or
mov
jo
push
shll
mov
or
add
dec
fidivrs
push
xor
add
repnz
shrl
push
lahf
sub
mov
sbb
xor
outsb
in
roll
lea
inc
adc
add
xor
call
xchg
in
enter
rcll
mov
std
leave
sbb
push
lret
js
or
sub
lods
pop
shlb
add
jp
inc
cmp
fsubrs
mov
dec
fcmovne
popf
push
add
daa
je
cmp
mov
add
mov
lcall
addb
inc
add
add
and
adc
dec
or
lcall
or
adc
pop
rolb
filds
mov
sbb
decb
push
add
shl
es
mov
sub
mov
mov
aad
pushf
push
and
push
mov
mov
mov
std
cmp
and
xor
cmp
cmp
pop
mov
mov
and
movb
dec
in
sub
in
stos
arpl
pop
sub
aas
mov
inc
and
push
adc
add
jg
dec
fistpll
adc
inc
mul
mov
add
sub
add
mov
pop
jae
sti
jae
mov
push
jns
scas
dec
dec
std
sar
xchg
shll
inc
addr16
dec
xor
out
mov
sbb
fbstp
icebp
and
cmp
inc
add
xor
push
adc
xchg
out
pop
mov
lcall
cmpsl
cmpsl
push
sbb
inc
add
addb
lret
rcr
std
scas
adc
cltd
jae
push
push
sbb
add
or
adc
arpl
hlt
mov
and
inc
add
mov
addb
mov
pop
jge
xchg
sahf
pop
sub
stc
add
xor
fwait
cmc
mov
push
add
pop
loopne
test
jae
lock
or
fisubs
loope
add
cmp
test
stc
push
mov
dec
es
mov
in
addr16
cmpsb
cmp
mov
call
cmpsl
mov
mov
rorb
mov
jecxz
add
lcall
in
xchg
push
cmp
idivl
mov
mov
mov
rorb
xor
pop
imul
out
push
or
cmpsb
lock
xorl
pop
loop
add
sahf
adc
aas
fldt
in
test
adc
cmp
jg
ljmp
incl
cltd
or
add
and
and
fs
push
mov
add
add
sbb
dec
js
add
pop
pop
sub
add
jg
inc
add
add
add
xor
loopne
add
cld
test
cmp
or
lock
adc
lret
and
dec
xor
into
and
jmp
sub
dec
cmp
add
jo
out
sub
movsb
je
push
xchg
jo
add
mov
ja
xor
imul
pop
inc
add
add
jp
inc
add
add
popa
mov
pop
xchg
iret
or
sahf
push
jno
xchg
addr16
mov
push
out
or
leave
je
jb
add
lret
or
out
clc
mov
daa
mov
push
mov
push
adc
and
es
sbb
xchg
cmc
movb
add
lret
and
dec
iret
pusha
add
test
jl
mov
inc
stos
adc
stos
inc
js
push
and
inc
add
xchg
movsl
or
loope
fmull
or
sub
adcl
jnp
add
lahf
cld
stc
addb
xchg
pop
mov
mov
push
mov
add
ss
pushf
outsl
add
adc
add
inc
or
pop
clc
movsb
ds
dec
xor
fwait
push
sbb
mov
sbb
lret
add
pushf
mov
inc
add
rcrl
addb
dec
rolb
cli
adc
cmp
pop
nop
lock
int
add
addb
imul
lods
lahf
into
or
add
jbe
and
jne
push
movsl
and
xchg
pop
xlat
scas
imul
call
dec
sbb
or
xor
mov
test
cmp
sahf
xor
inc
js
rcrl
mov
push
add
add
mov
imul
or
cmp
jle
cli
clc
push
push
push
stc
lds
xor
inc
add
add
adc
jmp
inc
add
std
lods
mov
add
pop
pop
mov
icebp
cmpsb
sbb
push
jne
jle
inc
add
or
shrb
and
xchg
pop
mov
addb
cwtl
shll
sbb
addr16
cmp
jae
add
and
pop
inc
add
jmp
fcoms
xchg
adc
sub
das
mov
leave
out
mov
outsb
inc
add
pop
ror
pop
clc
pop
out
int
in
hlt
addb
pop
orl
outsb
mov
imul
add
test
data16
and
cmp
mov
mov
popa
add
pushf
xchg
clc
movsb
push
add
aam
fists
xchg
xor
xchg
push
mov
add
cmpsb
xchg
out
mov
push
add
push
lock
out
hlt
adc
add
push
adc
test
jae
mov
and
test
jl
int
mov
leave
imul
add
adc
aam
add
pop
rolb
mov
sbb
sahf
ss
xor
and
pop
jae
in
sub
sbb
sbb
aad
fimull
jb
xchg
out
ja
pop
xchg
repz
mov
add
add
icebp
push
lret
adc
cltd
incb
call
pop
sbb
xchg
addr16
xchg
or
add
add
pop
sub
add
pushf
insl
stc
repnz
ret
xor
test
add
loop
push
jmp
sub
icebp
in
repnz
add
mov
jmp
xor
mov
addb
cmpsb
add
stc
mov
jb
mov
or
xchg
clc
movl
pop
in
add
jns
jne
ret
adc
movsb
sbb
xor
das
jnp
dec
clc
add
dec
mov
push
pop
aas
push
adc
scas
loope
or
sub
dec
sub
mov
icebp
outsl
outsl
cmp
in
xor
cmpsl
xlat
jecxz
jg
mov
pop
movb
fs
movsb
jmp
sbb
test
jge
push
push
flds
cltd
dec
xchg
mov
test
jge
mov
lret
scas
mov
addb
and
insl
xor
shll
push
inc
pop
xchg
out
faddl
add
and
jle
jl
cmc
int
dec
enter
out
push
into
xchg
adc
popf
std
dec
pop
leave
addb
mov
sbb
xchg
pop
movsb
cmpsl
dec
fucomi
loopne
testb
mov
pushl
mov
pop
jo,pt
xor
inc
mov
js
pop
dec
mov
outsl
test
into
dec
bound
push
add
cmpsb
adc
or
and
pop
jle
and
subl
les
jne
jne
jnp
popl
cli
cmp
mov
movb
movsb
std
push
mov
into
pop
in
jp
or
add
test
scas
pop
mov
mov
imul
scas
nop
jl
pushf
and
mov
xchg
or
add
mov
xchg
fimuls
jbe
in
in
pop
and
sbb
stc
mov
add
in
shll
pusha
add
idivl
xlat
inc
add
xchg
or
xor
addb
jbe
shlb
cmp
rolb
sti
adc
mov
outsl
dec
movb
jae
add
mov
dec
fsubrs
insb
repnz
inc
add
test
add
cs
addl
sbb
jecxz
mov
test
sbb
pop
adc
push
mov
int
fiaddl
xor
cmp
stc
bound
push
add
push
popf
add
cmp
mov
sbb
sbb
sub
mov
repz
pop
sbb
add
sub
lcall
mov
notl
clc
jmp
jns
mov
dec
xchg
add
repnz
gs
add
aaa
clc
ret
or
xlat
or
addb
fwait
or
into
popl
lods
shr
mov
sub
imul
mov
sub
inc
add
or
mov
add
mov
sbb
lret
jl
pop
es
fisttps
lcall
xchg
roll
add
add
sahf
push
lds
inc
in
jg
test
cltd
jp
xchg
mov
add
into
jl
test
mov
sahf
cmp
cmp
addb
cld
movb
bound
and
dec
push
notl
push
ds
jge
clc
bound
dec
lds
imulb
jb
sub
mov
scas
fstl
adc
stc
fnstcw
mov
add
sbb
iret
sarl
sbb
dec
push
bound
mov
bound
dec
in
rolb
adc
push
add
xor
arpl
pusha
add
pop
dec
dec
cld
jg
add
cmp
out
cs
dec
jge
add
mov
xchg
add
mov
or
clc
cmp
repz
shrl
pop
add
cmp
imul
daa
fcomps
or
int
outsb
pop
cwtl
mov
xchg
jnp
fneni(8087
fsubr
cmp
add
imul
inc
add
data16
fistpll
dec
push
and
mov
leave
fstpl
nop
std
fldl
ret
stos
test
loop
jecxz
fwait
sarb
cmp
clc
sarb
inc
add
cmp
mov
dec
sub
sbb
gs
mov
xchg
xor
push
ror
shll
dec
sub
fistps
bswap
and
mov
mov
add
sbbl
mov
stc
lahf
xchg
lahf
pop
xor
pop
testb
dec
movb
insb
xchg
je
fistps
mov
test
mov
add
in
jmp
cmp
pop
clc
movsb
mov
push
inc
add
pop
loopne
push
dec
xor
sbb
adc
jmpw
xor
push
jb
call
xchg
ret
or
jecxz
add
xchg
push
insb
sub
std
push
sub
jne
add
mov
into
mov
and
jl
das
push
sub
jge
sub
lods
push
fdivl
icebp
addb
add
inc
pop
xchg
dec
pop
jo
and
cmp
out
scas
dec
inc
xchg
das
xor
out
inc
notl
dec
insl
addb
int3
pop
add
inc
add
jl
iret
and
repz
mov
xor
out
jns
and
testl
cltd
push
not
aaa
sahf
mov
std
addr16
stos
dec
adc
add
sub
inc
aad
mov
aad
lret
sub
push
push
test
lret
ja
jmp
xor
sub
scas
fcomps
test
pop
loop,pn
mov
gs
lods
outsl
push
jle
mov
and
inc
add
roll
mov
xchg
or
nop
cmp
clc
pop
jb
mov
push
add
push
cmp
and
aaa
xor
hlt
push
lahf
pop
pushf
xlat
bound
imul
cmp
pop
mov
out
mov
push
addb
fcoml
jp
fwait
sub
fistpl
rcrl
adc
into
aas
mov
cmpsl
sbb
pop
or
push
mov
add
cmp
cmp
mov
mov
mov
sbb
pushf
push
stos
test
repnz
add
adc
aaa
pop
mov
cwtl
movsb
movb
mov
cltd
jno
adc
pop
jmp
popf
popf
stc
xchg
mov
adc
outsl
fdivl
add
adc
ret
addr16
mov
add
das
int3
into
inc
loope
dec
arpl
addr16
aas
int3
in
icebp
leave
cmp
loope
lods
sbbl
add
nop
mov
mov
ja
mov
rclb
movsb
sub
sbb
out
rcll
not
aaa
scas
rcr
in
xchg
cmp
jns
les
mov
fists
fdivrl
jae
outsb
inc
popf
mov
cmp
rcl
loop
clc
icebp
int
add
pop
jmp
and
lods
outsb
test
ja
js
bound
fildl
in
arpl
jae
mov
sbb
push
rcl
cld
pusha
add
dec
cmc
xor
ret
fldcw
jo
test
pop
jnp
sub
addb
imul
xchg
cmp
dec
mov
jmp
fsub
movsl
scas
mov
add
xlat
test
or
das
mov
pop
cs
js
sub
scas
bound
addb
pop
frstor
and
addr16
mov
inc
leave
rolb
fisttpl
shll
mov
and
movsb
add
mov
aam
ret
int
and
cmp
add
and
sti
pop
jecxz
xchg
adc
add
inc
jecxz
push
adc
daa
addb
fdiv
aaa
jmp
scas
mull
sahf
add
jmp
push
fldcw
jp
sbb
test
cmc
dec
stos
xchg
pop
push
xchg
fsubrs
pushl
push
scas
outsb
push
and
fs
lods
jnp
sub
mov
aaa
cmp
scas
clc
inc
add
in
pushf
mov
push
push
dec
fmuls
and
je
repz
pusha
add
mov
mov
mov
sarl
add
pop
push
fidivrl
xor
add
test
lret
mov
push
lahf
xchg
jmp
fwait
test
adc
xchg
out
mov
mov
test
jnp
jno
mov
mov
or
add
insl
pop
inc
add
pusha
add
sbb
xchg
addb
fldt
add
pop
xchg
inc
or
test
pop
loop
add
inc
add
lock
hlt
xchg
gs
pop
or
js
add
add
mov
std
pop
pusha
add
sbb
inc
arpl
xchg
push
les
adc
rolb
sub
jne
adc
or
jne
xchg
fwait
jecxz
jge
stc
dec
push
jmp
add
nop
popf
js
out
and
scas
movsl
add
sub
inc
add
add
xchg
and
xchg
mov
jmp
int3
outsb
and
shrl
xor
je
out
stos
jp
xor
add
shll
add
sub
inc
cmpsl
push
push
mov
mov
aas
out
imul
add
pop
mov
cld
daa
stos
jnp
cwtl
jmp
mov
adc
sbb
loop
mov
les
addr16
push
xor
jp
add
cmpsb
sbb
xchg
cmc
inc
mov
mov
nop
sub
xor
cmc
inc
add
pop
ret
popa
out
cs
jne
shll
add
out
adc
sub
gs
jae
xchg
dec
mov
jo
pop
movb
pop
mov
ja
add
outsb
jl
arpl
mov
test
in
outsl
gs
popf
push
cli
lock
jae
xchg
fldl
add
in
lods
inc
add
stos
jg
sub
add
xchg
add
imul
ror
mov
mov
addr16
push
sahf
inc
mov
xchg
push
test
and
aam
mov
add
mov
cli
fstl
aam
call
stos
mov
xchg
mov
add
dec
imul
sub
and
mov
push
add
xorl
lea
out
dec
lret
inc
fidivl
add
das
adc
pusha
add
add
movsl
in
push
mov
fimull
pop
xchg
insl
sbb
movsl
in
mov
inc
mov
push
addb
xchg
mov
sub
or
cmp
add
pop
mov
add
add
test
sub
clc
out
out
add
test
cmp
addb
push
movsb
cmp
int
into
xchg
mov
pop
sub
into
mov
inc
add
in
add
xchg
mov
sub
lods
enter
out
add
pop
cli
test
mov
xchg
add
sbb
mov
jb
in
cmp
adc
addr16
aad
mov
rcll
cwtl
jmp
push
fbstp
xchg
mov
add
mov
js
or
imul
push
insb
mov
addb
xor
pop
lods
out
jno
cmp
adc
inc
add
scas
lahf
jbe
add
mov
movb
lret
or
jge
push
loopne
sbb
add
dec
in
insb
push
sbb
adc
ja
std
aad
add
cmp
testb
dec
idivb
add
fsubs
push
out
lea
aaa
add
int
dec
ret
shlb
fldenv
dec
or
sub
jmp
movsl
mov
mov
mov
and
mov
ret
movsb
sbb
shrl
cmp
inc
add
fildll
aam
sub
jmp
cmpsl
sbb
dec
pop
pop
aad
je
mov
in
add
and
xchg
xor
pop
add
in
jne
cld
jns
add
push
and
xor
mov
out
insl
cmc
push
jno
adc
popf
inc
cmp
inc
mov
add
mov
les
mov
add
mov
movsl
xchg
jbe
jecxz
push
push
mov
sub
dec
loope
mov
popf
sub
dec
pop
pop
popf
in
mov
add
fcomp
fwait
lret
icebp
arpl
push
ds
mov
nop
mov
les
xor
jae
add
add
push
bound
rolb
mov
clc
jno
mov
and
add
adc
and
mov
add
mov
lea
mov
add
push
xor
imul
mov
jnp
out
add
add
ror
xchg
cmpsl
jp
fstpt
adc
xor
lock
rcll
lcall
fnsave
adc
jbe
test
adc
sahf
sub
ds
movb
cs
lcall
mov
rolb
inc
add
mov
sub
test
js
mull
pop
push
in
lcall
scas
stos
scas
rol
add
xchg
sub
dec
jae
mov
push
mov
jle
push
mov
add
mov
xchg
outsl
xor
mov
inc
add
push
aad
in
mov
xor
test
iret
pop
push
jg
jo
add
inc
cmp
push
mov
std
lret
push
enter
addr16
imul
loope
arpl
movsl
in
sbb
aam
fcmovu
sahf
repz
addl
cmp
pop
add
sub
movsb
pop
push
insb
inc
xor
xor
add
sbb
data16
xor
leave
aad
inc
add
pop
jb
stos
inc
int3
xorl
pop
sub
addb
lock
aas
fdivr
mov
lret
push
sub
xor
icebp
push
jnp
cmp
mov
add
push
enter
inc
add
sub
loop
cmpsb
adc
inc
pop
pop
jmp
je
pop
push
int3
es
pop
in
lahf
cltd
lods
mov
shl
xor
mov
add
jne
cwtl
nop
inc
lret
xor
xchg
jmp
aas
jb
add
adc
xchg
cli
call
leave
lods
fisubs
add
movb
out
addb
mov
lcall
inc
add
cs
add
js
pop
mov
jg
fisubrs
ds
pusha
add
sbb
out
pusha
add
adc
mov
dec
push
imul
stc
xchg
lds
mov
das
ljmp
andl
jl
in
loop
mov
mov
and
std
mov
pop
fsubl
add
add
popf
sbb
xchg
fwait
leave
mov
add
es
test
andl
fadds
add
repz
add
mov
ror
std
sub
fwait
xor
add
cmp
or
adc
imul
dec
ret
xchg
in
je
movsl
je
fldt
lret
jle
add
imul
cmp
or
mov
sti
or
lret
cs
dec
popl
add
dec
push
nop
cmpsl
out
dec
fs
jo
cmpsl
fdivs
add
repz
aaa
cli
cmp
dec
cmpsb
and
mov
cmp
ljmp
mov
addb
mov
push
inc
movsl
sbb
dec
pop
je
adc
jno
lods
leave
xor
bound
loop
xchg
and
mov
lret
adc
imul
sbb
cld
and
mov
xor
fistpl
imul
xchg
xor
imul
push
jne
rcrl
mov
fisubl
fidivrs
push
adc
sub
sub
add
xlat
jae
xor
das
sbb
add
ret
jl
fs
sbb
cmp
and
lcall
sbb
ljmp
sahf
in
ret
fbstp
mov
leave
popf
outsl
jbe
sbb
lret
scas
jno
jo
mov
add
cli
testl
rclb
movsb
addb
ja
xor
addr16
push
inc
bound
inc
aas
add
sub
outsl
clc
mov
adc
enter
insl
ficompl
inc
push
adc
sbb
xlat
push
je
xor
add
push
adc
adc
int
out
add
hlt
fwait
dec
cmp
rcl
cltd
pop
xlat
push
jp
cmp
aad
pushf
fs
or
fucomp
jno
or
loope
sahf
add
or
xchg
dec
cmpsl
xor
aas
dec
push
das
call
sar
mov
cmpsl
adc
test
lret
mov
mov
mov
pop
jge
add
xchg
mov
xor
add
lock
xor
add
nop
aad
add
addl
and
or
xchg
mov
mov
out
add
cmpl
mov
rolb
mov
int3
gs
add
out
scas
orl
sub
add
hlt
inc
add
je
jp
cli
push
jmp
dec
jbe
add
pop
imulb
sub
jp
stos
mov
add
push
lds
add
mov
mov
and
pusha
add
or
rolb
ja
pop
shl
push
add
mov
popa
adc
add
jbe
loop
cmpsb
and
jnp
add
mov
cmp
dec
push
xor
mov
lahf
add
inc
lds
gs
xchg
outsb
addr16
rcll
xchg
pop
and
icebp
add
pop
and
jae
fs
push
pushf
adc
and
sahf
xor
scas
lret
negl
xlat
xchg
out
or
inc
divb
adc
in
fmuls
mov
add
jns
jb
ds
dec
mov
lock
dec
inc
add
push
pop
clc
jl
lock
pop
rcrl
mov
rcrl
addb
pop
bound
xchg
sar
enter
mov
pusha
add
sub
xchg
popf
push
in
popa
push
sub
inc
pop
ljmp
rep
dec
stc
xchg
dec
sub
addb
ret
pop
stc
cmc
mov
dec
push
aad
cmc
and
cs
movsb
adc
xor
aaa
add
fwait
pop
in
imul
add
adc
xor
test
mov
push
sbb
add
orl
popf
repz
mov
add
aam
xchg
cld
lcall
pop
cltd
cmc
iret
ja
aas
test
int
adc
push
sbb
popf
test
ss
pop
sar
arpl
rolb
cltd
inc
jne
and
aaa
push
pusha
add
xor
ss
test
bnd
roll
idivl
add
in
push
xor
pop
mov
cwtl
addb
rcll
fcompl
add
add
lret
repz
mov
stos
add
sarl
mov
jnp
or
pop
jae
lcall
iret
into
pop
pop
fwait
xor
xor
pop
sub
lock
add
add
cmpl
add
pop
pusha
add
add
pop
lret
and
imul
ljmp
mov
sbb
stc
test
inc
mov
lahf
pop
cmp
xor
push
add
les
mov
ljmp
jns
xchg
jno
pusha
add
and
xor
cwtl
or
cmc
dec
mov
popf
sub
sti
push
jp
aam
nop
lret
repz
lock
lret
test
jg
push
mov
lock
xor
add
sbb
scas
mov
mov
fsubr
jae
les
sub
fwait
iret
ffreep
add
inc
testb
cmp
and
add
in
and
test
push
and
xlat
shrl
push
jmp
mov
add
push
cmpsl
xor
pop
or
mov
add
cmc
mov
nop
pop
mov
cld
or
ljmp
mov
pop
xchg
xor
mov
mov
fsub
jbe
dec
or
test
mov
notb
popf
mov
jge
call
dec
adc
mov
hlt
rolb
nop
add
sbb
or
in
fcmovnbe
mov
jg
movsl
andl
jnp
pmaddwd
or
sbb
fld
jle
jnp
movsl
mov
lods
sbb
xchg
jl
mov
add
xchg
sti
inc
jns
aam
inc
add
loop
adc
rcl
cmp
mov
add
fbld
add
and
es
cmp
pop
in
movb
inc
add
mov
insb
xor
pop
pop
loope
test
scas
ret
dec
leave
addr16
sbb
add
inc
fsubl
jmp
mov
ret
mov
add
jecxz
fcoml
add
popa
pmaxub
mov
leave
mov
stos
xchg
jae
xchg
int3
test
movsl
mov
mov
mov
lods
out
add
xor
push
idivb
mov
mov
adc
repnz
dec
xor
mov
lret
nop
inc
sahf
cs
inc
jl
fsubp
test
dec
push
mov
sbb
testb
inc
add
movsb
push
add
loop
push
scas
icebp
adc
pop
popf
xchg
out
xchg
andl
jmp
stc
loope
mov
jge
nop
pop
addb
movb
pusha
add
push
add
cmp
push
lahf
in
jmp
rcrl
mov
xlat
sbb
dec
dec
das
addb
shll
push
arpl
add
mov
stos
call
pop
das
in
mov
or
jg
or
inc
mov
outsb
pop
inc
add
icebp
xchg
loope
fidivl
xor
loope
adc
or
lret
inc
add
pop
scas
testl
xor
adcl
add
imul
dec
psubd
inc
mov
mov
and
and
inc
sahf
xchg
fadd
pop
stos
pop
push
mov
fdivs
xchg
cltd
out
jnp
rcrl
adc
sub
jmp
int
lret
add
jnp
addl
fidivrs
int
jg
dec
pop
test
fwait
pop
jge
adc
xchg
int3
test
xchg
lea
mov
lret
push
jae
add
push
add
pop
icebp
lock
icebp
fistpll
xchg
sahf
push
movsl
mov
pop
lea
loope
mov
push
add
pushf
mov
sbb
inc
add
add
inc
add
sbb
mov
pop
leave
sub
pop
mov
cmpsb
push
out
add
jb
add
aam
add
lret
pushf
notl
and
xor
cli
inc
add
lds
add
mov
or
mov
xchg
push
or
shl
xchg
lret
fisttpll
cmp
pi2fw
inc
add
sub
stc
push
inc
add
dec
test
jp
xlat
push
sbb
incl
add
cmp
sub
lock
std
test
popf
stos
add
cmp
jns
fucomi
sub
mov
xor
push
lcall
cwtl
call
pop
ds
rorl
mov
scas
int3
jo
sub
shll
clc
fwait
push
cmp
and
or
sbb
add
mov
xor
out
dec
fs
add
js
pop
inc
jmp
cltd
xchg
repz
ja
enter
and
add
orl
dec
pop
ret
xchg
mov
mov
bswap
lods
add
leave
pop
jmp
xchg
ja
out
jae
idiv
lods
mov
pop
jbe
xor
sti
fcompl
jle
or
lock
ljmp
call
xchg
stc
les
cmpsb
outsb
hlt
and
xlat
sub
fld
add
pushf
dec
push
push
adc
lcall
lods
divl
in
mov
mov
test
mov
data16
mov
jne
iret
dec
mov
loope
sub
mov
sbb
leave
out
mov
ja
ds
push
xor
jl
adc
jno
out
sahf
fdivrs
lret
loope
js
add
add
cmp
out
xorl
and
dec
fwait
pop
ljmp
mov
jge
pop
clc
xor
popa
and
push
pop
jb
cmpsb
xchg
cmp
in
mov
add
mov
das
imul
test
mov
std
lods
inc
mov
inc
mov
aas
movsl
nop
aam
add
mov
xor
int3
jb
fsubr
jae
outsl
lds
mov
fstpt
mov
int3
xor
adc
stos
shrb
pop
adc
push
add
add
inc
add
stos
mov
mov
add
js
cmpsb
mov
adc
test
loop
mov
cli
loopne
pushf
fs
les
das
sahf
mov
jnp
ja
sub
stos
aaa
jmp
pop
adc
pop
rol
cmpsl
in
icebp
push
add
push
mov
loope
jns
add
movb
pop
in
mov
in
shrl
adc
aaa
sbb
outsl
or
mov
sbb
movsl
pop
and
xor
lods
sbb
popf
add
movlps
jmp
insl
out
sub
add
add
push
fdivs
push
xchg
adcl
lock
push
stc
xor
lahf
adc
push
mov
leave
jp
add
add
sbb
add
stc
stos
shlb
into
and
out
add
jae
sub
pop
mov
add
fists
pop
aaa
test
je
jge
sbb
or
ljmp
lret
add
imul
add
add
push
out
je
test
icebp
test
dec
and
pand
int
add
inc
add
pop
test
popa
subl
inc
shrl
mov
dec
pop
sbb
add
adc
push
cmp
jmp
addb
inc
add
add
add
push
lods
xor
xor
mov
jge
outsl
addb
std
loop
je
adc
xor
outsb
xchg
jmp
mov
push
lahf
je
cld
clc
sub
jl
loopne
fildll
xchg
pop
lret
push
cld
inc
add
inc
add
sahf
and
adc
fs
filds
repnz
add
out
fcomps
push
sub
inc
push
adc
lcall
xor
cli
out
test
lret
mov
pop
mov
mov
enter
cmp
mov
cmp
xchg
sub
jb
fisubrs
lock
fdivr
popf
cli
xchg
scas
mov
adc
xchg
mov
loop
lahf
pop
in
incl
mov
shrl
cmpsb
test
jb
add
add
mov
rolb
shrb
addr16
push
dec
movb
fsubl
add
int3
inc
add
cmpsb
movsb
sbb
leave
mov
add
and
mov
outsl
std
das
loop
add
mov
das
xchg
jae
sub
add
movb
sub
in
or
out
xchg
std
mov
out
lcall
add
add
cmp
out
stos
mov
sub
sub
call
int3
and
or
add
mov
out
mov
add
test
cmp
jmp
jg
mov
sbb
cmp
jbe
add
pop
sub
mov
push
dec
fiadds
jae
add
sbb
repz
jp
stos
or
ret
mov
and
cs
clc
pop
dec
and
sahf
add
xchg
and
dec
sub
pusha
add
pop
orl
add
mov
lret
or
push
out
out
mov
ljmp
andl
mov
mov
xor
lret
in
fcomip
jb
sub
adc
fcoms
stc
jbe
and
divl
sarb
ret
mov
inc
mov
sub
jg
mov
iret
and
pusha
add
addl
add
jmp
dec
test
add
inc
add
add
sub
add
loope
cli
mov
inc
add
scas
sbb
push
push
mov
jo
or
js
jp
adc
repnz
xchg
push
jg
and
test
mov
mov
out
orl
xchg
mov
dec
fistl
mov
leave
inc
add
cli
mov
mov
call
add
add
inc
add
fdivp
push
enter
add
mov
mov
fs
fsubl
mov
xor
or
loope
add
push
movb
cld
mov
fcmovu
imul
mov
mov
aad
mov
cmp
aam
insb
mov
sti
jmp
outsb
pop
adc
or
mov
call
xor
fwait
arpl
mov
cmp
pop
cmp
and
mov
adc
xlat
outsl
shr
ljmp
mov
cltd
sub
sbb
adc
ljmp
inc
add
cld
out
xor
fdivr
ss
sti
ljmp
jnp
dec
cs
sub
mov
repnz
or
pop
nop
xchg
outsb
or
jl
pop
loopne
or
movsb
enter
push
jo
imulb
add
jno
and
stos
sbb
test
je
mov
loopne
lods
and
cmp
mov
addr16
push
add
insb
xchg
inc
add
lds
movl
xchg
add
ret
mov
or
add
call
cltd
scas
push
add
addb
pusha
add
bound
xchg
xlat
loope
fnstenv
push
addr16
add
mov
popa
push
push
mov
mov
adc
add
jl
push
pop
push
imull
aam
cmp
clc
mov
push
jb
stos
icebp
sbb
lods
or
fists
insb
push
jg
xchg
xor
ljmp
loopne
mov
out
mov
pop
adc
aas
and
fadd
add
ds
mov
sub
jo
repnz
negb
mov
movsb
les
mov
sahf
sahf
mov
rorl
bound
addb
mov
ja
dec
cmpsl
inc
xor
sub
sbb
cmp
shrl
add
addl
cli
and
add
sub
or
sti
and
xor
mov
shlb
out
mov
std
in
addb
ret
popa
mov
xchg
ret
jecxz
repnz
bnd
sbb
add
sbb
out
push
repz
cmpsb
imul
test
js
xchg
cmp
pop
jmp
lds
jge
scas
inc
add
in
scas
jg
insl
lret
sti
insl
jmp
rolb
xlat
push
mov
xor
loopne
sbb
lcall
inc
dec
mov
pop
mov
add
insb
mov
xlat
add
fmulp
mov
fcoml
in
inc
test
lds
or
add
lcall
cmp
dec
cmpsl
jmp
insb
pop
adcl
lret
and
push
insl
enter
mov
pop
xlat
pop
ror
outsl
incb
imul
jl
fs
pop
std
xor
mov
add
out
loopne
add
cs
add
push
jle
es
add
inc
add
push
add
add
dec
adc
int3
cmpsl
dec
and
into
jecxz
cmpsb
and
mov
fimuls
loop
jne
or
popf
shlb
into
push
fst
or
and
lods
popf
pop
fcoml
movsl
pop
sti
mov
les
mov
aaa
or
pop
xor
cld
hlt
test
or
dec
imul
ret
paddd
andl
push
cmp
scas
mov
cmp
pop
pop
inc
add
loop
movsl
jmp
scas
fs
mov
xchg
cmp
add
push
lods
xlat
paddw
xchg
mov
mov
jge
rolb
lahf
add
push
add
add
sbb
addb
push
cmp
daa
sub
jns
cmp
pop
sub
sub
adc
ffree
jne
add
addr16
add
test
add
xchg
outsl
inc
sub
insl
sub
ret
mov
add
push
add
les
icebp
mov
cmp
jno
mov
and
mov
mov
jg
int3
mov
scas
push
sarb
cmp
dec
push
in
mov
sbb
shr
mov
pop
and
insb
jmp
pop
xchg
add
xchg
je
ret
mov
std
repnz
shrb
mov
mov
mov
enter
pop
mov
movsb
xchg
fwait
push
lea
xchg
push
test
sbb
cli
xchg
xchg
lahf
cmp
aaa
ds
pop
inc
jns
cmp
add
pushf
or
ror
in
mov
call
neg
sbb
fisttpl
mov
push
add
addb
mov
dec
movsb
sbbl
in
adc
add
push
rorl
test
jl
insb
or
push
shlb
int
inc
cmc
and
pop
jl
mov
ret
into
pusha
add
repz
stos
inc
add
out
and
xchg
test
ret
pop
mov
mov
repnz
mov
xor
sbb
or
adc
sbb
bound
fsubrl
and
cmpsb
ljmp
stc
adc
loop
ljmp
adc
adcl
sub
mov
sub
adc
adc
add
sbb
les
push
adc
or
pop
aam
add
jns
or
out
je
out
test
into
fsts
push
lret
movb
sti
stc
int
and
xchg
fimuls
inc
add
subl
push
mov
mov
add
scas
push
adc
ror
mov
or
dec
cs
lds
fdivrl
data16
push
pop
sub
mov
mov
imul
cmc
push
add
faddl
mov
mov
in
lods
mov
jmp
bound
cmpsb
or
jecxz
rcrl
pop
sub
int
bnd
add
icebp
inc
add
test
dec
push
add
lahf
lds
sar
or
and
cs
sbb
add
mov
addl
add
push
add
push
adc
xor
add
rolb
add
shlb
pop
cmp
icebp
ds
xlat
mov
pop
loopne
mov
fwait
test
add
shrl
add
cwtl
aad
iret
outsb
iret
jno
cmpsb
pop
jle
inc
nop
mov
lock
arpl
add
and
loope
addb
cmpsl
jbe
nop
fwait
sub
fistl
sti
dec
sub
stos
mov
dec
cmp
out
incb
xchg
pushf
lods
imul
mov
jl
add
test
fidivs
sub
call
mov
dec
fs
mov
add
fmuls
xchg
pop
loope
cmp
in
push
and
dec
test
outsb
inc
dec
call
add
add
pop
jno
mov
fadd
add
mov
mov
test
fisubl
sub
je
lock
cmpsb
sub
add
daa
jb
outsl
leave
aas
sub
scas
out
arpl
repz
in
aas
sub
into
fbstp
movsb
mov
cmp
ficoml
les
pusha
add
and
inc
lea
dec
jns
mov
imul
test
add
fbstp
adc
inc
add
xchg
jge
inc
add
mov
add
push
sbb
lods
push
mov
add
push
aam
mov
hlt
xchg
bound
imul
arpl
push
jl
jno
test
call
push
adc
add
icebp
popf
add
out
lret
outsb
and
or
in
imul
push
and
mov
fwait
pop
xchg
xchg
mov
mov
cmp
push
inc
insl
push
jecxz
mov
test
adc
jbe
fwait
jno
xor
jno
dec
ror
enter
aas
inc
mov
mov
repnz
mov
cs
sbb
adc
push
mov
in
xchg
pop
inc
div
pop
imul
fcoml
das
popf
ret
pop
cld
ja
add
notb
imul
add
adc
in
cmp
aaa
cli
lahf
push
add
dec
mov
push
pop
jb
and
cltd
push
bound
cmp
outsl
dec
pop
or
pusha
add
mov
pop
rolb
cld
push
fisttpl
ljmp
or
add
sub
xor
arpl
inc
xchg
add
sub
cld
or
bswap
or
insl
cwtl
ja
jnp
stos
and
sbb
inc
add
cwtl
incb
pop
pop
mov
movsb
cmp
mov
testb
frstor
movsb
pop
mov
sbb
add
sub
pop
jno
test
cmp
clc
rorl
ss
mov
out
in
cwtl
inc
pop
out
xchg
xchg
test
cmp
add
mov
popa
and
add
fwait
in
pop
sbb
dec
cld
and
cmp
les
xor
repz
mov
push
sub
xlat
jmp
scas
jns
sub
loop
ret
cli
cmc
lods
mov
push
and
stos
les
dec
insl
mov
roll
mov
sbb
add
jmp
addl
sub
or
test
lret
into
sub
fnstcw
cmc
add
int
lahf
mov
mov
push
roll
ss
ds
cmc
cmc
push
cmp
and
push
mov
clc
daa
call
popa
xor
loopne
add
frstor
pop
out
rorb
sbb
jmp
repnz
int
push
push
or
or
pop
jno
aam
out
cmp
jnp
jecxz
jp
mov
xor
mov
fistl
test
jbe
jb
ficoms
mov
adc
ret
pop
adc
or
fsubr
jmp
jb
outsl
push
mov
add
pop
data16
movsl
xor
mov
add
add
jno
inc
in
aam
cs
loop
mov
mov
mov
xchg
cmp
adc
inc
add
movb
pop
das
mov
sub
add
fdivrl
push
in
fisttps
and
mov
xchg
xchg
and
mov
fwait
inc
add
cmc
xchg
xchg
shll
nop
fmul
xchg
loop
cmpsl
js
sub
mov
add
loopne
outsb
shlb
fwait
mov
data16
repnz
ljmp
repnz
fistpll
sub
or
test
ljmp
pusha
add
or
inc
pushf
scas
sahf
addl
sub
pop
inc
add
fstl
add
outsl
icebp
mov
mov
imul
add
jecxz
push
sbb
push
insb
pop
mov
addr16
adc
das
mov
sbb
add
int
shll
daa
cmp
push
jge
xor
fs
clc
mov
addr16
jp
int3
push
loopne
lahf
inc
aam
pop
mov
inc
add
push
dec
shl
mov
call
enter
scas
ret
enter
icebp
cs
or
sub
dec
test
jecxz
enter
flds
clc
scas
dec
and
sbb
ljmp
or
sar
sbb
sbb
sub
inc
add
cmpl
in
jae
lea
js
ret
pop
je
sbb
sub
add
out
stc
js
inc
add
xlat
add
cmp
fstpt
pusha
add
fsubs
je
roll
imul
out
stc
adc
mov
mov
jns
mov
mov
and
add
or
jmp
ss
mov
cmpsl
sbb
mov
lods
sbb
dec
jae
cmpsl
jb
lea
mov
fadd
into
mov
push
xor
fmulp
ds
cltd
mov
inc
add
dec
mov
dec
sub
mov
fs
inc
or
loopne
int3
outsb
jnp
ja
mov
mov
mov
cld
fwait
mov
aas
ds
jno
daa
rcrb
inc
add
out
cmpsb
xor
mov
push
jb
out
lahf
cmp
repnz
sub
mov
or
and
pop
mov
int
jno
adc
jecxz
add
add
mov
inc
add
enter
or
inc
add
lcall
outsl
imul
add
rol
xchg
shrb
aad
dec
in
lahf
data16
movsb
into
and
jmp
outsb
inc
pusha
add
or
dec
int
add
lods
fldt
in
loope
leave
sarl
addr16
imul
hlt
push
inc
add
jmp
jmp
sbb
push
sbb
in
cmp
pop
addb
sub
xor
scas
adc
or
push
add
and
cmp
pop
push
pop
add
bnd
push
out
aas
jne
xchg
loopne
add
xchg
in
outsl
out
mov
sub
dec
push
xor
int3
les
push
test
out
inc
push
movsb
pushf
xrelease
mov
jle
pop
in
cmp
addb
mov
in
das
repnz
test
push
shrl
pop
in
fs
call
mov
push
cs
jns
add
push
insl
jp
mov
jbe
mov
repz
add
xor
push
rolb
add
jno
out
sarb
mov
add
mov
cmp
xchg
stc
out
mov
mov
std
inc
add
ss
fst
pop
shl
push
push
add
mov
imul
adc
bound
es
inc
add
sbb
mov
xor
add
mov
push
or
sub
adc
xchg
xchg
movb
fstp
bnd
rcrb
out
cmpl
add
mov
dec
pop
pop
mov
adc
or
adc
js
in
push
or
pop
lret
inc
in
icebp
jbe
cmc
dec
lret
mov
into
jne
bound
and
inc
add
repnz
sbb
dec
jnp
mov
cs
jmp
ftst
adc
inc
add
lret
push
xchg
fcomps
or
mov
addb
test
data16
push
xor
test
sbbl
pop
cld
xor
xor
add
cmpsl
xchg
lahf
mov
jmp
xor
out
ljmp
mov
pop
pop
push
fldenv
mov
sbb
jecxz
xlat
xchg
movsl
movb
lea
rcll
mov
mov
mov
pop
jnp
cmc
push
call
arpl
jne
jl
ret
cmpsb
sahf
shrb
xor
or
xor
fcmove
mov
mov
jmp
and
add
ja
scas
pushf
dec
mov
add
pop
pop
ja
adc
loop
enter
mov
push
cmp
rorl
adc
dec
xor
jns
xor
and
idiv
int3
int3
scas
loope
push
testl
sub
mov
push
add
cmp
test
sbb
mov
jnp
and
adc
push
sub
push
cs
jnp
xchg
mov
ja
aaa
lret
pop
sbb
or
fstps
fs
dec
notl
inc
add
xor
add
cmpsl
cs
push
ficomps
pop
push
ja
push
add
fisttpl
xor
outsb
repz
out
pop
test
add
pusha
add
pop
cld
jb
stos
sbb
cmc
or
adc
enter
cmp
pop
fsubs
add
jecxz
pop
out
insb
jle
adc
imull
or
push
adc
mov
xchg
add
je
out
ficomps
push
lea
into
cld
sbb
add
and
push
push
add
xor
in
dec
fsub
jge
xchg
scas
and
mov
fmull
inc
add
and
sub
leave
mov
jge
pusha
add
adc
jecxz
cli
stos
movsl
je
xor
dec
jns
dec
in
syscall
lds
add
cmp
fs
or
xchg
pop
inc
sbb
out
mov
mov
pop
call
arpl
leave
pop
add
stos
int3
loop,pn
divl
data16
jecxz
add
add
sub
stos
dec
sbbl
pop
inc
add
mov
push
mov
daa
adc
std
lods
arpl
out
movsb
lods
fidivl
les
xchg
ror
sarl
sub
loop
pop
xor
rolb
pop
test
push
jle
clc
addr16
stos
xor
lods
pop
sbb
dec
arpl
xchg
addr16
cs
int3
dec
fcoms
mov
push
xlat
push
inc
add
lods
jge
inc
add
bound
push
lods
sbb
adc
xor
insl
and
arpl
mov
push
test
sbb
and
lret
xor
aaa
stc
test
in
add
dec
enter
ja
out
gs
push
test
mov
stos
es
test
cld
jb
pop
mul
fwait
pop
jl
mov
inc
add
add
xchg
xchg
movb
movb
add
sti
push
lds
or
mov
cmp
daa
push
popa
mov
mov
jmp
mov
or
into
adc
inc
add
add
xchg
mov
xorl
push
xchg
adc
scas
popa
jecxz
push
les
mov
jo
into
movsl
pop
lcall
jo
pop
jp
or
add
pop
jns
add
add
jle
cltd
fisubl
aam
mov
repz
or
repz
ret
bound
das
gs
jge
je
or
icebp
fdiv
jg
stc
dec
aam
pop
sysexit
jmp
xchg
jo
add
add
lds
mov
push
sbb
les
enter
lock
fcoms
and
pushf
mov
icebp
cld
or
cs
push
mov
std
out
sbb
lcall
rclb
les
xchg
mov
jb
cmp
enter
pop
mov
dec
add
int3
fwait
jge
addb
sub
sbb
add
jg
mov
mov
out
stc
mov
inc
add
movsl
dec
les
jp
enter
ljmp
mov
mov
add
xchg
xchg
adc
mov
or
inc
aam
lret
scas
fldl2t
pop
test
lds
add
jae
add
bound
mov
or
fisubs
adc
push
test
add
mov
daa
popf
stc
sub
mov
inc
xor
push
pop
je
scas
popf
negb
lcall
dec
addr16
ja
dec
aad
ss
cmpsb
int
int
cld
xchg
or
test
xchg
jno
fsubs
sahf
pushf
imul
cmp
sub
test
movsb
std
mov
mov
add
mov
insl
mov
aad
clc
fstps
push
adc
mov
cmc
jg
jne
xor
addb
add
stos
cmp
pop
inc
inc
pop
or
aaa
test
movl
jo
mov
outsl
sub
add
xor
mov
in
lcall
repz
mov
jb
sti
sub
cmpsl
loope
mov
jge
mov
lds
add
jne
add
jo
jp
mov
add
mov
and
iret
mov
mov
in
jmp
outsl
and
xchg
cmpsb
adc
jp
xchg
lret
scas
popf
push
outsl
fadd
add
mov
xchg
cli
stc
mov
pop
outsb
stc
repz
popf
and
adc
cmc
nop
mov
nop
or
xchg
push
sti
ljmp
aaa
pusha
add
mov
addr16
out
mov
ror
cld
in
inc
add
daa
scas
leave
jae
add
add
filds
xor
sarl
add
cmp
andl
repnz
jno
jmp
cmc
daa
movsl
adc
adc
add
pop
adc
xchg
inc
ret
int3
and
pop
sub
fnsave
aas
ljmp
add
int
mov
add
ds
xchg
jo
mov
loopne
in
inc
and
inc
dec
pop
push
rolb
arpl
sub
add
fiadds
dec
xchg
add
mov
and
filds
add
lea
mov
or
jle
pop
sbb
inc
add
inc
add
fildll
dec
inc
orl
add
ds
out
iret
mov
dec
pop
test
jge
pushf
and
mov
jmp
sahf
call
jmp
add
ret
push
xor
add
jp
sbb
popa
mov
pop
fdivr
pop
roll
ret
addb
sbb
or
mov
or
jno
push
sub
mov
dec
mov
cmp
jbe
add
jno
push
shll
pop
adc
js
push
fmuls
aad
pop
mov
das
repz
cltd
hlt
mov
popa
pushf
in
sahf
lea
add
in
test
xchg
out
fs
or
inc
add
std
mov
mov
test
in
sbb
nop
jbe
add
gs
sbb
xor
mov
aas
cmp
jno
cli
in
pop
popa
pop
js
push
pop
popa
jnp
add
pop
fisttpll
sbb
sbb
fcmovu
jnp
out
adc
add
int
cltd
and
mov
scas
mov
addb
xchg
mov
jae
inc
add
ret
mov
inc
adc
scas
sbb
or
mov
cmpsl
addl
push
add
arpl
movsb
dec
lods
mov
addb
add
jns
popf
shll
fldl2t
pop
in
pop
stc
inc
mov
sbb
adc
add
add
pusha
add
add
inc
add
insl
fisubl
add
ret
loopne
rolb
push
dec
mov
cwtl
scas
inc
add
stos
fisubl
add
sub
xchg
mov
repnz
mov
xor
into
fstpt
or
and
int
add
add
jle
or
cmp
insl
mov
dec
adc
mov
sub
and
test
dec
xchg
ret
lock
movsl
add
test
out
dec
xor
sub
inc
add
pushf
or
add
test
add
pop
shl
cli
sub
repnz
xchg
je
adc
inc
add
add
pop
inc
push
negb
pushf
xor
mov
adc
mov
in
xor
test
xor
dec
aad
lods
addb
daa
shll
pop
jg
mov
xchg
cmp
gs
not
rclb
xor
add
mov
cmp
mov
mov
call
scas
cmpsl
dec
sub
adc
cs
lahf
and
inc
add
dec
imul
fstpl
hlt
call
mov
mov
jp,pt
stos
ljmp
fidivrs
jo
inc
sbb
cmp
fcomps
cli
nop
jb
and
sbb
mov
into
test
sub
add
inc
int
punpckldq
mov
test
movsl
movb
push
shl
jns
or
add
in
push
fucom
lea
ljmp
cld
add
inc
add
ja
add
push
dec
mov
push
ss
inc
add
pusha
add
addb
sbb
add
lret
hlt
sub
and
sbb
lahf
mov
xchg
jne
aad
ficoml
mov
repnz
rolb
stc
mov
push
pop
xor
fisubl
aam
or
movsl
and
fistpl
ds
pop
sub
cwtl
mov
out
jnp
je
add
repnz
inc
dec
jo
xor
test
pop
xchg
into
sub
ja
cmp
outsl
inc
pop
push
jo
jge
iret
jl
add
pushf
cmp
pop
popa
outsl
xchg
push
mov
add
std
cmp
shrb
jg
pop
in
jecxz
inc
add
sti
imul
mov
in
cmp
mov
add
sbb
scas
and
scas
pop
jbe
add
mov
inc
or
dec
pop
clc
xor
pop
jo
adc
push
and
mov
cmp
out
rdmsr
movsl
mov
adc
sbb
jnp
bound
les
int3
adc
mov
sub
mov
mov
cmp
jp
insl
ja
ret
inc
jp
mov
jne
mov
cld
pusha
add
mov
cmpsw
loope
add
imul
sub
pop
push
sub
cmovp
out
and
sub
shr
out
sub
add
mov
pop
arpl
in
add
aas
pop
ljmp
add
lods
imul
add
xchg
jge
add
dec
add
fiadds
cmp
inc
add
sbb
je
add
jno
lock
adc
mov
adc
push
cli
in
fstpt
add
lods
mov
push
push
pop
jno
add
push
pop
iret
pop
sbb
aas
mov
insl
jb
add
push
dec
out
add
aad
shr
jge
add
pop
sub
push
mov
inc
add
notb
out
xlat
xchg
inc
add
add
iret
xlat
daa
imul
add
in
jge
add
push
add
nop
into
out
push
add
shr
fcmovnbe
sti
push
stos
push
rcll
jecxz
aad
jecxz
ret
add
push
ljmp
movb
pusha
add
aas
movsb
lret
imul
loope
data16
notl
push
lods
sti
mov
cltd
aad
mov
jnp
into
movsw
loope
test
enter
add
notb
fwait
in
inc
loope
jg
mov
xor
adc
xchg
push
push
popf
mov
cmp
test
pop
mov
or
sbb
mov
add
lcall
add
cmp
leave
fsts
lods
sub
rcrl
xor
push
mov
cld
cltd
gs
sahf
jmp
dec
stc
cld
xor
sti
leave
mov
cltd
sub
cmp
xor
jae
add
add
mov
sahf
and
add
into
cmp
xor
jg
fldenv
test
pop
sub
sub
clc
or
xor
ja
movsb
test
iret
cmp
add
add
clc
lds
xchg
adc
mov
fisttps
pop
or
and
xchg
mov
jecxz
push
lds
sub
dec
push
aad
sti
sbb
add
aad
sub
xor
mov
xor
ret
cmp
cltd
les
repnz
adc
arpl
xchg
fsubl
es
sub
daa
cmpsl
imul
cmp
fs
inc
add
mov
add
mov
pushf
test
xlat
int3
fbld
sbb
jg
xchg
scas
xchg
add
pop
xchg
imul
movsl
cmpsl
arpl
js
cmp
sbb
das
pop
pop
mov
adc
mulb
cli
and
jns
out
add
dec
sti
enter
mov
fwait
cmp
subl
push
icebp
inc
mov
or
flds
out
push
push
subl
mov
pop
scas
addb
mov
push
sbb
sbb
addr16
add
sub
ret
xchg
cmp
jno
pushf
xor
jge
jo
push
mov
cli
insb
add
das
dec
push
lret
fwait
mov
jno
sbb
mov
add
jnp
imul
xchg
call
mov
adc
dec
xor
fs
loope
jbe
or
repz
jp
and
lahf
cmc
and
sub
sub
sti
jp
fistpl
popa
push
iret
mov
add
imul
xor
das
insl
inc
add
stos
mov
inc
add
lret
loop
add
imul
test
jnp
jmp
imul
pop
dec
dec
fsubs
cld
xor
pop
imull
cltd
fdivrs
xchg
xor
mov
jbe
mov
fisubrl
cli
popa
mov
cmp
hlt
adc
mov
lods
mov
or
and
pop
and
lods
sbb
xchg
js
hlt
imul
add
mov
mov
rcrb
shll
add
cmp
fildll
jg
add
mov
pop
cmp
xor
sub
and
test
jmp
mov
mov
sbb
insb
push
sbb
push
lds
lock
add
addr16
dec
xchg
add
dec
nop
movl
mov
push
lock
xor
cmc
cmp
lret
clc
jno
lock
or
cmp
push
repnz
pop
vmaxps
add
or
pop
clc
xchg
sahf
inc
js
add
push
test
add
popf
iret
dec
fwait
shll
sbb
add
or
cld
xchg
mov
add
pop
mov
out
add
lahf
jno
test
loopne
push
imulb
inc
and
add
sub
addb
movsb
mov
ds
push
or
aaa
popf
les
mov
pop
lcall
jno
ss
mov
add
test
mov
and
pusha
add
into
int3
xor
fstpl
addb
cltd
lds
or
add
inc
scas
int
lret
add
inc
adc
lcall
sahf
testb
inc
inc
add
sahf
or
out
inc
add
xorl
push
stos
stc
incb
into
out
inc
mov
add
add
movb
das
xchg
and
add
pushf
les
negl
clc
jno
popa
jl
hlt
inc
add
pop
cmpsl
add
sub
push
lret
into
or
add
add
in
dec
mov
jne
loope
pop
loope
cmp
ja
lds
push
test
mov
jns
mov
cmp
addb
pop
mov
push
dec
pop
mov
add
sub
mov
lock
sti
add
jle
jp
repz
shll
mov
mov
imul
xchg
jo
push
pop
lret
xchg
inc
int3
fs
ret
cmp
