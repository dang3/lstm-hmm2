call
add
xor
movsl
adc
adc
in
sbb
das
jl
add
pop
pop
adc
lods
sbb
add
add
sahf
jmp
add
cltd
aam
sbb
jg
mov
add
fmul
addb
fnsave
add
cld
std
add
sub
rolb
mov
mov
add
in
mov
add
push
add
pushf
mov
inc
add
out
push
loopne
je
lods
pop
insb
adc
inc
add
movb
int
arpl
add
in
fiaddl
testb
fldl
add
add
int3
lods
testb
add
lea
add
push
rolb
mov
fistpl
test
scas
sub
jge
ret
pop
jbe
sbb
cltd
push
add
add
inc
add
lods
cli
mov
rorl
xor
inc
inc
inc
jo
pop
iret
lcall
mov
add
mov
add
outsb
addb
mov
add
mov
or
inc
outsl
icebp
fdivs
xchg
in
sub
lcall
add
adc
sahf
loope
das
fmull
psrad
data16
mov
xchg
stos
pop
dec
jnp
movb
jno
add
rdtsc
sub
add
aas
dec
and
mov
jmp
in
cmp
mov
jne
adc
mov
cmp
ja
add
jg
xor
aas
fnsave
add
hlt
add
add
lds
mov
add
add
pop
test
pop
mov
mov
sub
add
les
cmc
mov
addr16
jp
add
repz
jne
fistps
cmp
add
enter
add
add
sub
sub
mov
add
mov
outsl
dec
pop
mov
loope
xchg
add
in
and
mov
pusha
add
push
leave
cmpl
add
jmp
addb
add
or
add
lahf
outsb
xor
push
and
jne
add
fmulp
push
pop
aaa
cwtl
mov
rolb
movsl
xchg
mov
sbb
jmp
daa
and
mov
add
mov
push
mov
inc
add
push
add
mov
or
jae
add
icebp
fisubrs
add
mov
mov
cli
jns
add
add
add
mov
dec
jmp
cvtps2pd
dec
push
add
lcall
jp
mov
out
movb
add
sti
out
push
add
jp
cmp
add
pop
arpl
es
add
add
xor
sub
repz
add
adc
add
xor
gs
mov
rolb
add
mov
add
adc
in
arpl
jle
mov
cmp
add
jmp
mov
rolb
xchg
fisttps
lods
mov
sub
mov
mov
addb
jge
sbb
ficoms
cmpl
rolb
xchg
out
dec
popa
lock
add
rorl
cmc
popa
add
scas
ljmp
out
loopne
add
add
sub
add
outsb
sti
mov
leave
inc
or
add
add
das
xchg
adcl
into
arpl
out
jb
shll
js
popf
lock
pusha
add
lock
fnsave
push
inc
add
add
addb
into
fbstp
push
add
push
add
gs
pushf
jg
add
lcall
pop
push
into
xchg
call
xchg
xlat
push
add
stc
mov
add
stos
in
or
js
int3
push
cmpsb
add
insb
push
push
ja
add
sub
test
popf
adc
aad
add
add
inc
divl
ljmp
add
out
xorl
jecxz
iret
stos
adc
inc
add
add
into
je
addb
out
gs
cmp
scas
pop
pop
int
mov
add
add
fwait
inc
sbb
add
add
add
loope
sub
or
jo
xchg
mov
mov
and
mov
add
add
cmpl
jo
ret
sbb
ljmp
xchg
add
add
and
add
rolb
sbb
push
add
push
add
and
mov
jmp
add
fbstp
add
inc
add
dec
pop
dec
stc
push
inc
mov
loop
jae
push
mov
add
lods
jne
or
add
xchg
push
arpl
fidivrs
cmp
pop
xlat
lcall
add
add
jmp
add
mov
sub
add
add
add
and
mov
add
mov
add
mov
add
testl
xchg
push
call
shll
inc
add
out
fldcw
rolb
add
scas
fidivl
add
xchg
add
cmp
add
out
add
add
add
nop
add
mov
add
dec
sub
pop
push
adc
add
mov
cmp
add
add
lret
push
add
sbb
inc
add
clc
xchg
icebp
mov
test
xor
mov
rolb
sbb
add
add
lods
mov
xchg
imul
mov
add
std
inc
shll
mov
sbb
cmp
add
xor
in
outsb
cmp
add
add
or
xor
repnz
rolb
xor
int3
mov
insb
xchg
sbb
and
mov
int
into
mov
add
leave
jne
jo
xchg
push
mov
pushf
xchg
addb
add
mov
clc
fnstcw
cmpsb
add
aad
lock
mov
sub
lahf
jge
movb
out
movb
jns
add
mov
sbb
scas
pop
bound
mov
dec
sar
adc
mov
push
add
sub
add
mov
cwtl
xchg
add
fnclex
add
dec
scas
xchg
addb
nop
add
pop
popa
int3
repz
add
dec
xlat
mov
sbb
add
xchg
add
aas
addb
dec
rolb
sub
add
enter
add
test
sub
inc
data16
push
add
cmp
enter
push
add
jle
or
imul
xor
aas
loope
add
mov
and
mov
mov
add
jbe
outsb
push
into
in
push
iret
dec
cmpsl
call
add
add
add
js
add
mov
jg
mov
and
pop
hlt
add
gs
inc
add
jge
pop
mov
add
xchg
add
sbb
add
add
scas
jle
and
mov
imul
cmp
add
gs
add
lds
add
cmpsb
add
pop
inc
testb
sbb
add
std
inc
add
mov
pushf
daa
sub
pop
ljmp
mov
aas
xor
aaa
dec
loope
push
add
push
mov
push
add
sub
js
mov
aas
mov
iret
out
sub
pop
lret
movb
mov
add
add
and
mov
add
addb
sbb
add
mov
mov
pop
add
add
adc
lods
mov
cmp
jne
xchg
cmp
jae
add
pop
pushf
mov
mov
xchg
mov
dec
fdivr
mov
pop
mov
scas
cmp
cmpsl
jnp
add
jg
js
add
add
idivl
hlt
add
mov
sbb
stos
jmp
fistpll
icebp
push
add
popa
outsb
stos
ret
cmp
pushf
into
xor
cmc
daa
jp
add
fmul
cmp
push
add
inc
add
pop
xlat
lret
and
pushf
je
cmp
add
inc
cmpl
repnz
popf
cmc
aas
inc
std
notl
dec
mov
or
cmp
add
add
add
pop
sub
mov
inc
and
leave
dec
addb
add
add
movb
push
add
xchg
add
fbld
xor
xchg
mov
insb
mov
xor
aam
out
or
cmp
add
scas
jecxz
enter
add
mov
add
pushf
cmc
mov
scas
testb
add
add
rolb
pop
inc
push
lret
adc
imul
add
call
add
add
push
cli
sub
jbe
push
add
jl
out
lret
les
mov
in
push
add
jle
enter
fndisi(8087
dec
pushf
sbb
mov
cmp
mov
fistpll
jno
mov
decl
movsb
add
inc
add
jp
add
scas
imul
fbstp
cmp
imul
mov
bound
mov
add
fdivrs
add
fcomps
addb
das
mov
mov
fdivr
pop
les
daa
call
mov
adc
sbb
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbw
cmp
ss
lea
push
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
and
fucompp
imul
out
add
fimuls
or
mov
mov
add
jecxz
lahf
and
mov
mov
loope
and
mov
add
add
lods
pop
clc
inc
add
push
pop
xor
repnz
sbb
mov
sbb
add
fwait
mov
add
rolb
add
push
jb
out
cltd
xor
divl
xor
into
adc
xlat
lahf
jmp
adc
push
add
pop
pop
sub
add
in
cmp
mov
jno
addb
arpl
add
arpl
and
add
fwait
jnp
jle
ret
mov
fwait
jnp
xlat
and
jno
add
mov
cmp
mov
ljmp
add
pushl
jl
inc
mov
cwtl
xchg
and
cmp
add
cmpsb
add
aas
xchg
push
sub
add
imul
mov
add
mov
cmp
adc
push
add
scas
call
push
add
mov
add
inc
add
adc
add
lods
xchg
loop
xchg
xor
pop
jg
outsl
mov
lods
int
lock
and
mov
cmpsb
add
sbb
add
sarl
stc
outsl
mov
loop
mov
and
add
call
mov
add
sbb
cld
pop
jbe
or
fs
add
mov
addl
ret
pop
mov
rolb
enter
testl
mov
call
sub
pop
popa
sar
mov
arpl
sbb
add
dec
pop
fists
adcl
lds
add
add
add
pop
in
xor
popl
add
and
mov
mov
mov
and
jmp
add
add
add
mov
ret
je
cmp
add
idivl
outsl
adc
add
ffreep
add
imul
fldcw
sbb
adc
rep
out
mov
pop
jb
push
add
xchg
add
push
add
add
add
mov
add
add
mov
and
mov
enter
mov
add
jne
faddl
dec
rolb
shr
push
add
add
pop
xchg
nop
add
mov
or
in
mov
add
repz
or
push
insb
add
push
add
mov
cltd
ds
mov
out
add
mov
add
add
lcall
cmp
and
jae
push
ds
xor
loope
rolb
test
lods
push
add
xor
aaa
mov
test
sbb
into
adc
jne
jl
push
add
ret
pop
xchg
mov
ja
popf
xchg
mov
xchg
mov
lcall
push
add
pop
out
push
add
cltd
add
push
xor
rcll
sub
push
dec
dec
orl
add
add
test
add
add
push
add
or
mov
aad
jecxz
inc
add
inc
add
push
add
add
lret
lret
fidivs
and
add
sub
testb
add
psllw
idivl
push
movsb
add
cs
out
imul
inc
mov
dec
dec
jno
pop
pushf
arpl
adc
mov
add
repz
popa
cmp
add
sti
test
data16
add
add
sub
sbb
add
std
test
or
add
add
add
ret
fwait
push
add
mov
push
add
and
xchg
xchg
add
dec
negl
or
pop
iret
dec
push
add
int
je
jbe
push
add
mov
mov
leave
cmpsb
add
adc
insl
push
push
add
nop
add
add
mov
add
pop
addb
pop
addr16
mov
ljmp
mov
xchg
add
insb
int
pop
ss
add
lods
fidivl
add
and
xchg
push
mov
mov
sbb
iret
push
add
xor
mov
mov
cmp
aad
cmp
push
mov
mov
or
rolb
je
jne
cmp
add
or
add
scas
out
mov
add
xchg
lock
arpl
add
add
add
mov
mov
pusha
add
add
jns
xor
inc
add
and
mov
add
stos
sub
add
mov
outsl
stc
je
pusha
add
jns,pt
xrelease
mov
iret
and
leave
xor
mov
clc
bound
mov
je
xor
addb
es
add
cmpsb
add
adc
insl
outsb
push
add
xchg
push
add
xor
jbe
sub
xor
cmpsb
add
cmp
add
jne
icebp
sti
mov
xor
xchg
add
data16
outsl
xor
cld
push
lock
icebp
sbb
add
add
lods
push
add
add
add
adc
xchg
dec
in
scas
cwtl
cltd
repnz
lret
push
add
in
mov
add
add
adc
push
je
inc
add
push
push
in
mov
inc
xchg
add
call
andl
pop
outsb
add
cmp
add
lock
inc
shll
fcomp
in
subl
nop
add
mov
and
adc
int
add
fidivrl
test
ds
add
and
pop
sub
add
pop
lahf
jge
or
lahf
add
lods
adc
movsb
add
push
add
mov
insl
add
mov
sbb
movb
cmpxchg8b
mov
push
add
outsl
sub
test
add
jae
mov
popa
xor
lahf
cmpsl
loopne
mov
or
sub
add
add
mov
push
add
mov
and
addr16
sub
dec
leave
imul
mov
add
push
add
mov
add
add
imul
add
pusha
add
stc
add
mov
mov
push
add
add
pushf
addb
movsl
mov
xlat
mov
adc
push
lods
stos
rolb
rcl
sbb
adc
add
cmpsb
add
or
add
jo
pop
cvtps2pi
xchg
std
dec
inc
fsubs
and
inc
add
inc
push
xor
stos
les
rolb
push
add
movsb
add
add
pop
dec
in
lcall
push
adc
push
push
loopne
aaa
add
sub
add
jns
add
imul
add
shrl
lds
add
stos
das
icebp
lret
push
add
add
fidivs
add
cmp
adc
sbb
push
add
adc
roll
adc
mov
leave
mov
lods
sbb
add
cltd
push
jmp
add
notl
mov
mov
add
cld
outsl
push
cmp
mov
mov
sbb
jae
add
daa
mov
cltd
aam
sbb
clc
aas
pop
jb
mov
icebp
nop
add
pop
out
push
loopne
mov
add
xor
enter
add
pop
inc
xchg
add
pop
mov
xchg
leave
lock
sub
movb
in
or
add
jl
les
add
rolb
addb
add
add
inc
mov
push
add
lock
movsb
add
xor
mov
pop
mov
fcoms
add
mov
add
jbe
test
add
add
add
add
push
jb
stc
icebp
cmp
arpl
add
and
mov
fsubr
pop
sub
ds
add
mov
test
cmpsb
add
inc
mov
cmp
and
mov
add
stc
arpl
cmp
cmpsb
add
jecxz
xchg
mov
lods
fcomps
loope
add
inc
ds
jno
jecxz
mov
and
add
lods
inc
add
enter
or
je
fs
jmp
test
iret
jae
and
ja
dec
imul
add
add
test
lret
mov
aad
mov
add
fdivrl
add
add
mov
pop
or
and
orl
stos
scas
adc
or
inc
into
enter
sub
dec
sahf
ss
or
lods
lock
aas
sub
stos
cmp
add
add
add
mov
add
fdivr
xchg
mov
push
add
dec
int3
dec
or
int
add
add
xor
dec
mov
pop
add
cmp
repz
pushf
orl
mov
ret
and
cmpsl
adc
add
inc
add
dec
xchg
add
hlt
add
add
add
add
add
aas
or
mov
add
mov
mov
sbb
cmpsl
jae
add
add
mov
add
push
add
xchg
movb
daa
mov
cmp
js
inc
mov
mov
dec
movsl
sub
stos
or
sbb
add
mov
add
lods
fildll
add
sbb
xchg
enter
add
dec
mov
pushf
or
pop
push
add
cmp
jle
push
ds
add
add
rolb
jo
xchg
add
out
pop
fdivp
iret
addb
das
mov
sbb
arpl
fsts
add
add
add
adc
cli
pushf
adc
fwait
js
inc
sbb
dec
pop
jle
pop
enter
add
mov
fdivs
cmc
in
loope
jo
cwtl
ja
scas
jle
shl
add
or
add
int
add
cmpsl
jg
jle
fldl2e
call
aad
jl
or
jecxz
nop
add
data16
add
add
add
mov
jmp
mov
stos
dec
mov
call
cmp
adc
mov
pop
mov
add
push
and
xor
gs
add
mov
cmpsl
movb
add
ljmp
in
jo
adc
mov
in
jmp
add
sbb
mov
mov
loop
push
add
add
add
and
mov
cmc
sub
repnz
add
push
add
add
testb
and
out
jmp
cs
xchg
das
imul
sbb
add
add
aad
add
inc
add
imul
sub
jae
popf
lods
xchg
xlat
or
leave
adc
sahf
repnz
jg
add
add
mov
fistpl
cs
add
add
adc
and
mov
cwtl
inc
pop
sahf
mov
aaa
insb
cmpsb
add
xchg
jecxz
mov
je
loope
add
and
mov
add
add
aam
movsl
pop
repz
add
nop
add
sbb
jl
add
outsb
pushf
testb
add
add
add
add
test
pop
mov
sub
jp
xor
jb
stos
aaa
sub
add
add
les
add
add
lods
cmc
or
add
roll
add
cmp
add
xchg
inc
add
iret
add
mov
pusha
add
outsl
cs
pushf
add
test
adc
mov
add
loopne
mov
nop
add
push
add
adc
stc
repnz
inc
add
add
xlat
pop
outsl
out
sbb
pop
cmpsl
das
rep
push
cli
or
les
xchg
add
pop
ja
push
test
sbb
lock
pop
aaa
lods
xchg
add
out
xlat
jno
add
pop
out
and
les
movl
les
xor
scas
fcoml
add
mov
fmulp
inc
clc
add
das
sub
fsubr
mov
add
push
push
add
add
aaa
test
das
push
add
ret
push
add
add
mov
xchg
push
add
cmpsb
add
and
movsl
pop
add
das
outsl
cmp
test
movsb
add
add
gs
push
add
adc
lahf
mov
pop
mov
push
movsb
add
jmp
add
pop
test
pop
addb
mov
mov
out
inc
addb
int
cmp
je
pop
cltd
sub
cld
imul
add
or
mov
add
mov
mov
cmp
lahf
fistpll
push
dec
jns
inc
push
add
add
and
call
sbb
sub
dec
fldcw
imull
add
cwtl
sub
add
mov
add
inc
enter
icebp
sub
pop
add
mov
lcall
xchg
jbe
test
insl
add
rolb
movsb
add
add
add
add
add
scas
sub
add
cmp
unpcklps
rcll
cli
lret
testb
call
sub
data16
sub
outsb
shll
add
in
arpl
xchg
add
iret
jno
shll
sub
out
imul
cmp
add
mov
imul
movsl
lods
xchg
sbb
add
add
std
roll
cld
or
add
add
lret
add
addr16
rcr
and
xchg
test
movsl
inc
inc
add
and
mov
testb
mov
mov
pop
mov
outsb
daa
pop
daa
mov
add
add
rol
ret
jg
add
add
push
pusha
add
subl
mov
push
cmp
cmp
sbb
aaa
rolb
add
mov
inc
add
cmpsb
add
mov
pop
mov
lock
mov
add
dec
jg
sbb
xchg
or
ret
call
icebp
loope
pop
movsb
add
cmp
repnz
jb
adc
add
in
pop
push
insb
in
and
pop
add
mov
sub
aas
mov
rolb
and
mov
popa
sub
jmp
nop
add
mov
or
inc
add
jg
dec
mov
pop
mov
sti
adc
dec
hlt
add
cmpsl
mov
add
inc
push
xor
sbb
push
add
lret
lret
shl
ljmp
mov
add
and
dec
mov
add
mov
ja
icebp
add
add
add
insl
stos
pop
dec
mov
test
mov
stos
lods
push
add
cld
stos
popa
cmp
jp
fwait
sub
aas
sub
push
dec
decb
mov
push
add
mov
in
popf
out
das
les
imul
incl
daa
mov
xor
inc
add
pop
inc
add
push
jno
divps
add
mov
sbb
shl
push
int3
dec
call
add
popa
loopne
ret
rolb
sti
nop
add
les
cmp
repz
loopne
cli
mov
add
sub
mov
paddb
mov
add
jl
movsl
movb
jne
xor
mov
mov
test
mov
add
addb
hlt
add
xchg
add
lahf
lods
pushf
or
jnp
add
lods
mov
iret
or
sbb
mov
xor
jle
add
lock
push
add
add
xchg
cmp
add
push
fsubrl
mov
add
movb
in
mov
ret
fmuls
add
mov
add
addb
or
and
sbb
xor
xchg
add
insl
jg
cmpsb
add
dec
jns
add
add
in
xor
jg
xchg
mov
xorl
adc
dec
stos
push
add
imul
addr16
inc
add
add
stos
xor
adc
or
sub
add
fsubs
push
daa
cld
adc
mov
cltd
jns
aaa
stos
int
imul
mov
and
add
inc
pop
adc
pop
sbb
add
rolb
int
mov
rolb
xchg
loope
add
xchg
add
add
sbb
inc
add
addr16
ret
push
add
inc
add
fnstenv
add
inc
add
mov
add
mov
mov
add
add
les
dec
push
add
repnz
add
sbb
pop
xor
repz
aaa
out
mov
add
add
add
add
add
add
sub
xchg
fwait
mov
add
push
add
loope
push
add
aas
imul
xchg
add
fmull
add
testl
cltd
or
mov
sti
jp
insb
pop
addb
cmp
add
mov
add
inc
add
loop
jns
in
xchg
add
push
add
inc
add
pop
imul
arpl
add
and
mov
daa
lcall
pop
ret
nop
add
andl
add
add
add
sbb
add
add
imul
mov
pushf
pusha
add
or
add
cmp
and
mov
aad
adc
sbb
add
add
insb
mov
cmc
dec
push
aaa
dec
ds
cmp
fldl2e
jo,pn
jl
jbe
lods
rolb
test
adc
inc
fnstcw
add
mov
push
pop
repz
mov
pop
fucomp
fidivs
mov
ja
outsl
xchg
add
add
add
mov
cwtl
xchg
add
shll
and
in
scas
sub
add
test
sub
cmp
mov
add
test
arpl
shll
push
add
add
movb
sbb
ja
push
add
sbb
loopne
mov
xchg
add
and
mov
add
add
add
mov
pop
inc
inc
xchg
add
insl
adc
fidivl
mov
inc
add
cmp
xlat
rolb
dec
sub
add
lds
das
xlat
mov
jecxz
adc
cmp
inc
jbe
aaa
int3
int
sub
rorl
add
mov
sahf
mov
mov
aas
adc
add
jno
gs
shll
dec
addb
data16
jb
xor
add
mov
jp
sahf
outsl
js
add
add
jmp
xor
sbb
loop
and
mov
das
daa
repz
add
push
add
add
scas
ret
push
rolb
scas
xor
mov
or
push
mov
adc
push
data16
insb
pop
jno
add
push
mov
add
roll
pop
lret
add
mov
jnp
add
inc
dec
inc
ljmp
add
adc
mov
add
jbe
or
js
aad
cmp
lcall
lahf
xchg
add
add
add
add
add
enter
lds
add
add
add
add
jo
mov
xor
pop
dec
adc
push
add
dec
push
add
pop
adc
xor
pop
jle
cmp
jp
imul
mov
mov
and
mov
mov
stos
jge
pusha
add
arpl
pop
lea
or
push
add
push
inc
add
mov
add
lods
daa
pop
test
pop
stos
xchg
repz
sti
jle
xchg
add
add
stc
mov
mov
add
mov
pop
mov
inc
pushf
testb
add
into
and
sbb
mov
or
xor
dec
setno
add
sub
enter
mov
add
mov
sub
mov
jo
sub
scas
aaa
in
decb
add
adc
add
fs
fsubs
cwtl
xchg
add
push
xchg
mov
lds
clc
lea
xchg
add
or
mov
out
hlt
add
daa
ret
je
sahf
xrelease
out
imul
pop
mov
add
add
ja
add
out
and
mov
xchg
out
and
jns
add
pop
adc
push
add
mov
mov
lods
xor
nop
add
bound
mov
sub
sti
lcall
mov
notl
cmp
mov
inc
add
mov
dec
loopne
sub
add
mov
lods
dec
xchg
add
and
mov
push
add
lret
sbb
popf
out
push
add
cmp
pop
add
mov
sbb
jp
das
sbb
je
arpl
add
add
mov
sub
ds
fs
mov
cltd
xchg
lret
sbb
addb
imul
jg
add
add
add
les
mov
test
mov
add
and
addr16
addb
push
repnz
lock
sub
add
icebp
test
ja
add
pop
push
mov
mov
cmp
add
add
pop
outsb
jg
add
add
loopne
jmp
xor
movsb
add
addl
jmp
sahf
sbb
pop
cmp
xchg
add
cmpsb
add
xor
mov
lods
fwait
push
add
jo
cwtl
ror
aad
add
inc
addl
add
flds
out
push
in
mov
fucomip
and
mov
sti
jg
add
or
scas
je
addb
ljmp
in
in
loopne
imul
push
ficompl
add
jns
add
dec
stos
sbb
add
fwait
movb
sub
out
mov
cwtl
js
add
in
add
test
aam
pop
aad
cmp
cmpsl
cmc
ret
xchg
add
addb
add
add
mov
lcall
fstps
gs
ret
lret
add
gs
imul
nop
add
cmp
cltd
addb
add
push
add
mov
xor
add
push
add
xchg
add
sbbl
jl
sahf
andl
mov
add
lcall
inc
add
inc
add
shll
add
or
cmc
xor
add
push
push
add
aaa
mov
bound
mov
jbe
jl,pt
push
add
sbb
arpl
add
mov
loope
add
xor
mov
into
aas
or
mov
add
add
mov
rolb
imul
or
sti
movb
addb
fpatan
ljmp
mov
pop
rolb
cltd
rcrl
das
pop
push
add
or
scas
xchg
add
add
mov
out
push
push
add
push
lods
mov
mov
testl
lcall
xchg
add
jl
mov
addb
out
inc
add
mov
stos
pop
mov
xor
dec
push
out
out
dec
and
enter
fcmovbe
add
aas
push
add
jp
mov
aaa
lds
insb
and
mov
jns
push
add
xchg
add
pop
cmp
add
pop
add
mov
dec
cmc
jno
sbb
add
xchg
add
cmp
cld
bound
mov
jno
or
add
mov
mov
xor
jmp
inc
add
aad
add
sti
sbb
add
pop
movb
push
add
add
dec
jle
adc
in
adc
add
add
and
mov
inc
add
add
mov
add
scas
lock
clc
fsubrl
cltd
outsb
mull
add
mov
ljmp
pop
sbb
mov
lock
add
add
add
add
add
fwait
push
adc
push
push
add
nop
add
shll
in
leave
fcmovnbe
add
xchg
xor
xor
fdivrp
add
pop
push
add
dec
xchg
pop
daa
addb
popf
inc
add
add
mov
insl
sbb
cli
loopne
push
out
mov
add
mov
xchg
push
add
xchg
adc
mov
mov
add
lods
lret
arpl
dec
lods
int3
dec
add
stos
add
int3
add
mov
ret
fucomip
jno
add
rolb
mov
add
fsubl
sbb
and
mov
sbb
add
fisubrs
out
xchg
inc
add
and
jo
addb
add
gs
pop
or
inc
add
sbb
in
outsl
cmp
add
inc
cmpsl
cli
stc
outsb
cmp
jmp
nop
add
add
and
and
int
sbb
bound
mov
and
mov
cli
push
enter
pop
sub
lahf
fimuls
inc
add
cmp
add
mov
push
add
sub
int
popf
cmpsl
int
cmp
add
add
cli
or
mov
xlat
loope
fwait
stc
cmp
nop
add
mov
ret
pop
or
adc
fcomps
add
add
sub
add
iret
sbb
or
dec
jne
xlat
outsl
loopne
fsub
add
mov
cmp
add
add
iret
rolb
xor
add
cltd
push
add
inc
add
ret
and
movsl
mov
out
popf
jmp
add
add
mov
pusha
add
ret
push
les
xor
rcll
add
push
xchg
das
add
or
xlat
mov
ret
pop
xchg
adc
int3
push
add
imul
cs
xchg
scas
aas
adc
add
add
insl
xchg
add
cmp
add
in
pop
mov
ret
lods
dec
adc
push
nopl
js
in
sub
sbb
ja
xchg
add
pushf
push
add
add
or
add
cmc
cmp
jbe
fimull
int
inc
add
add
push
add
push
add
add
add
out
and
inc
xchg
add
push
jle
pop
mov
add
mov
xchg
jmp
add
pop
loop
dec
push
jne
addr16
bound
mov
jle
lret
add
sbb
int3
pusha
add
repnz
pop
jae
add
add
pop
xor
mov
das
jle
add
ficoml
add
pop
xor
xchg
add
test
clc
inc
xchg
lea
sub
inc
aad
add
iret
fadd
add
pop
inc
add
in
jle
cmp
adc
lret
dec
cmp
mov
lods
lds
add
cmc
fists
inc
add
xchg
add
test
cmpsb
add
adc
inc
add
or
test
call
jge
jecxz
stos
sarl
xor
add
add
mov
add
mov
mov
adc
add
push
add
movb
xor
hlt
add
mov
jp
add
outsb
xchg
mov
cmp
add
jp
fwait
inc
push
add
add
mov
fwait
mov
add
add
cmp
std
lcall
add
and
mov
add
add
mov
add
lahf
mov
scas
aam
push
xor
icebp
lahf
in
leave
iret
pop
call
out
fsubrs
add
sub
nop
add
testb
ljmp
insb
fidivs
add
mov
in
pop
mov
fistpll
repnz
add
add
sub
add
testb
cmp
xchg
mov
add
sub
icebp
or
mov
test
and
hlt
add
outsb
pop
movb
add
cmp
and
add
sub
push
jmp
xor
adc
rolb
mov
sub
xor
fldl
and
xchg
add
and
mov
add
mov
jnp
add
hlt
add
inc
add
dec
cmpsb
add
push
gs
fstps
out
xchg
add
push
iret
lret
add
add
mov
inc
sbb
sbb
hlt
add
xor
lods
fscale
ficoml
lret
repnz
jno
out
mov
loopne
in
mov
xor
add
add
int
sbb
aas
push
popa
iret
adc
std
xchg
add
cmp
jns
adc
add
push
xchg
xor
add
add
in
add
fcomp
scas
pop
sub
mov
dec
inc
mov
pop
push
xchg
push
add
out
or
loop
or
xor
call
inc
adcl
xchg
add
arpl
cmpsb
add
jns
addb
xchg
add
arpl
mov
popf
dec
ficomps
test
or
arpl
jp
sahf
lahf
imul
mov
add
frstor
add
icebp
f2xm1
add
add
mov
repnz
mov
stos
test
push
add
mov
cmp
movb
and
je
data16
outsb
in
out
in
mov
js
dec
inc
add
and
mov
inc
or
add
loop
mov
sub
mov
inc
das
rolb
repz
fnstcw
inc
add
and
mov
add
or
add
imul
pushl
cmp
lret
xchg
add
sub
rolb
mov
jo
int
mov
add
sbb
pop
add
adc
xchg
add
adc
xchg
mov
add
scas
jecxz
add
leave
jo
shrl
sub
ljmp
xor
add
scas
div
or
mov
xchg
add
sub
add
xchg
xchg
push
push
mov
int3
ds
jle
and
inc
add
addr16
xchg
sub
rolb
push
add
mov
out
push
jmp
movsb
add
daa
pmaxub
add
dec
cli
xchg
adc
inc
add
jno
in
std
sub
jmp
add
das
adc
add
js
in
pop
push
add
mov
add
dec
mov
fiaddl
pushf
rolb
je
adc
mov
scas
jmp
test
sub
addb
adc
shll
cmp
add
add
sub
add
lds
mov
mov
lods
mov
xchg
rcll
mov
add
loope
pop
dec
icebp
daa
push
add
mov
jl
add
gs
add
add
dec
and
insb
dec
sub
sti
imul
adc
mov
sti
lcall
add
xchg
mov
add
dec
or
lock
add
add
add
in
int
test
fstpt
icebp
mov
xchg
xor
stos
mov
add
add
insl
rcrl
and
popf
ljmp
js
daa
pop
aaa
xor
add
add
push
add
and
popf
or
loop
out
mov
push
add
add
push
add
popa
push
mull
sbb
icebp
xchg
add
add
add
xor
add
insb
rolb
dec
call
bound
mov
test
add
mov
cmpsb
add
push
add
sbb
mov
fstpl
add
imul
mov
add
jno
repz
mov
add
rolb
fnsave
add
add
add
outsl
es
add
add
sahf
std
push
loopne
pop
dec
sbb
add
mov
add
dec
sarl
inc
add
push
mov
add
or
push
add
in
add
test
jnp
xchg
sbb
subl
add
movl
lret
jl
mov
test
add
sbb
push
add
into
dec
jns
inc
lds
add
lcall
or
xchg
add
jbe
and
test
daa
push
add
add
imull
add
push
add
or
add
mov
call
out
and
mov
xor
or
in
outsl
and
push
je
push
cs
sbb
mov
or
insl
gs
add
lods
pop
cmpsb
add
pop
fildl
add
cmpsl
lret
cmp
add
or
add
shrl
gs
cld
jno
push
and
mov
jecxz
inc
aaa
fistpll
jg
add
push
add
xchg
sub
push
pop
mov
or
add
enter
sbb
inc
add
mov
fldl
add
ja
or
push
add
dec
mov
pop
jae
ret
test
add
in
add
sub
inc
add
mov
add
data16
xchg
add
stos
call
cld
cmp
add
add
shl
sub
adc
out
bound
mov
in
stos
stos
lahf
cli
xchg
jno
dec
dec
dec
add
mov
mov
mov
push
outsb
stc
ret
add
pop
insl
lock
dec
rolb
sbb
add
das
movb
jns
add
push
add
add
subl
mov
lea
mov
dec
jo
sbb
add
and
out
repnz
out
add
jbe
loop
sub
add
add
mov
mov
sub
scas
dec
loopne
jbe
jae
add
sub
add
mov
arpl
fildl
insl
jno
add
les
xchg
add
mov
or
add
add
add
xchg
aas
xchg
pop
dec
dec
push
add
inc
add
sbb
into
aad
data16
pop
jns
dec
xor
cwtl
cmp
add
mov
movl
stos
inc
addb
cwtl
jge
inc
add
nop
add
popf
add
mov
clc
adc
and
add
sub
bound
mov
out
add
push
add
cmp
or
sub
es
cmp
out
dec
sub
add
data16
dec
das
leave
pop
cltd
mov
cmp
add
cmp
add
xchg
dec
fistpl
sub
add
mov
jns
or
xor
aad
mov
add
add
add
or
in
rolb
add
mov
add
out
add
add
add
add
pop
inc
pusha
add
lret
cmp
xchg
add
ret
add
stos
comiss
nop
add
mov
lods
movsl
test
and
fidivrs
add
add
xchg
in
dec
or
add
mov
rolb
jl
daa
adcl
rcll
mov
out
out
xchg
add
sahf
pusha
add
clc
pop
sbb
add
daa
jnp
add
mov
cmp
add
add
addb
add
stos
stos
ret
add
add
mov
and
mov
inc
cmp
add
das
cltd
xor
or
dec
loop
or
test
inc
int3
lret
add
or
popf
lahf
cltd
aam
cmpl
add
add
cwtl
inc
out
ja
xchg
adc
into
loope
gs
add
add
sub
aam
loopne
movnti
add
xor
pop
jne
jo
xor
add
pop
call
jle
lret
push
call
out
lea
add
add
lods
add
fiaddl
jnp
jmp
mov
and
mov
mov
test
jge
jb
das
inc
adc
jnp
add
xchg
mov
cld
xchg
mov
and
mov
cmc
pusha
add
adc
cmc
aaa
dec
cld
adc
add
add
add
push
add
fildl
add
add
mov
add
cmp
xchg
add
cmp
add
mov
add
mov
add
add
lods
iret
int
ret
add
mov
leave
rolb
cs
enter
lds
les
adc
das
push
add
lret
shl
add
inc
lcall
movsb
add
mov
cmc
mov
mov
stos
sbb
add
aad
out
cmp
dec
imul
js
pop
imul
das
cmp
or
adc
dec
mov
jge
add
nop
add
mov
aad
add
int3
jle
xor
jp
les
sbb
inc
or
fidivrl
push
add
fwait
repz
add
jge
push
cmp
das
adc
jnp
add
loopne
add
mov
dec
inc
sahf
js
rolb
mov
out
adc
lahf
inc
add
jecxz
mov
sbb
xor
inc
add
add
dec
dec
icebp
addr16
dec
outsb
adc
add
jbe
lods
and
mov
adc
lds
add
arpl
inc
add
cmp
add
add
sbb
jmp
fnstenv
dec
sub
add
cmc
rolb
push
add
add
adc
call
jecxz
fcmovbe
add
add
add
push
dec
xchg
add
mov
mov
add
sbb
add
inc
add
stos
mov
xor
add
cld
rolb
jbe
push
sti
rolb
outsl
or
add
add
or
mov
add
xor
sub
add
or
mov
lahf
addb
sahf
jge
arpl
add
lock
mov
rolb
mov
fwait
push
add
arpl
add
stos
adc
out
imul
xchg
out
push
add
pop
xor
add
mov
add
sbb
mov
or
adc
ret
add
ret
mov
sbb
adc
push
add
js
cld
sbb
shrl
or
push
add
jge
mov
add
add
loopne
popa
push
add
or
mov
shrl
int3
mov
xor
pusha
add
cmc
cli
sbb
add
inc
add
lods
fs
adc
jl
add
push
add
add
into
push
cmp
out
out
add
sbb
data16
push
add
inc
add
stos
sahf
or
xchg
inc
add
push
add
inc
lods
aam
add
sub
cmpsl
inc
mov
pop
push
jae
add
add
ret
or
xchg
adc
dec
and
mov
pusha
add
add
iret
in
insb
mov
add
add
sbb
addr16
add
lret
jmp
xchg
add
imul
add
dec
aad
aaa
das
sahf
sbb
add
add
scas
cmp
fimuls
inc
add
jnp
xor
stos
nop
add
sub
subl
pop
ficomps
jnp
add
mov
add
add
jnp
fstpl
mov
dec
push
add
mov
push
adc
add
jae
push
mov
dec
push
fs
inc
adc
mov
aam
test
repz
mov
and
mov
pop
push
mov
push
cmpsb
add
inc
add
push
add
rolb
or
push
das
mov
inc
pop
xor
outsb
fs
and
mov
mov
add
add
add
add
mov
mov
xchg
add
pop
ret
mov
mov
mov
lret
pop
pop
cli
push
dec
out
outsl
addr16
add
push
pop
out
daa
cmpsl
push
add
mov
fwait
add
or
lods
shr
hlt
add
add
add
aas
inc
loope
add
insl
dec
cmpsl
dec
subl
sub
or
lods
stc
push
sar
scas
fisttpll
add
add
xchg
lods
test
mov
call
jo
decb
out
cmp
mov
xor
mov
add
dec
lret
cs
rcrl
add
mov
das
addb
add
mov
cs
scas
das
lds
add
jb
mov
test
push
lock
cli
adc
add
add
add
mov
add
add
mov
add
into
pop
pusha
add
clc
adc
bound
mov
gs
push
add
aad
jo
rolb
inc
add
out
inc
lock
mov
or
stos
mov
and
mov
lcall
nop
add
jnp
add
mov
add
dec
mov
sub
push
rolb
xchg
icebp
jo
fwait
cmpsb
add
and
mov
add
add
cli
mov
shl
jmp
xchg
jge
cmp
mov
add
data16
add
add
mov
add
add
inc
add
lods
mov
les
add
mov
lds
add
add
mov
mov
add
add
add
xor
sbb
add
loopne
add
aaa
dec
mov
jecxz
mov
inc
or
mov
and
shll
add
rolb
inc
and
lods
cmpsl
jae
add
mov
clc
call
pop
shll
mov
add
add
xchg
lret
mov
mov
dec
sub
mov
inc
out
addb
jne
repnz
testb
out
adc
sbb
add
cs
jle
cmp
add
sbb
pop
imul
add
rolb
sbb
fadd
add
loope
add
push
cmp
lods
or
sub
mov
fimuls
push
xchg
add
xor
sahf
push
add
add
add
or
mov
pop
scas
jnp
add
mov
sbb
mov
in
adc
push
mov
add
popa
outsb
xor
or
add
rolb
inc
dec
adc
daa
jmp
aas
mov
flds
or
xchg
fs
lret
add
mov
add
test
jnp
repnz
add
mov
in
or
fsubrs
add
push
add
pop
cmp
in
ljmp
add
loopne
out
add
add
mov
add
pusha
add
stos
inc
push
cs
pusha
add
cmpsl
xor
mov
add
and
mov
popa
sti
push
add
add
jp
add
mov
nop
add
mov
add
xchg
add
add
xchg
stos
jp
jle
add
xor
outsb
push
adc
mov
das
xchg
add
add
and
lret
xlat
movsb
add
movb
add
add
add
or
pop
shll
fcmovnu
movsl
stos
push
add
add
daa
xor
into
int
or
iret
repz
sub
fldcw
cwtl
fimull
gs
dec
fnstcw
adc
rcll
mov
daa
hlt
add
rolb
scas
addb
add
lret
outsb
mov
aam
jo
jp
push
add
fcmove
pop
jle
gs
add
leave
cmp
dec
addb
clc
add
sahf
enter
add
bound
mov
mov
in
cmp
jecxz
in
dec
dec
xchg
xchg
mov
mov
sbb
xchg
add
dec
nop
add
stc
sub
pop
mov
add
pop
mov
push
add
add
rorl
inc
xchg
add
mov
add
add
or
xchg
add
sbb
rolb
into
sbbl
and
test
add
ljmp
add
dec
dec
cltd
xchg
add
mov
add
shll
call
ja
mov
xchg
sub
xchg
jne
and
add
add
out
in
clc
push
add
add
xor
ljmp
add
add
add
and
push
mov
ffree
push
add
add
add
testb
pop
push
adc
add
call
cmp
xor
insl
or
jecxz
aas
mov
sub
mov
add
sub
int
loopne
add
mov
add
sarl
xchg
or
lahf
cmp
inc
add
pop
jle
add
out
jae
push
add
fnstenv
adc
rcrl
lret
popf
je
pop
call
and
lret
add
dec
insb
pop
pop
pop
test
add
fisubrl
mov
mov
mov
or
xchg
jne
imul
loop
sub
add
xchg
add
add
shrl
insl
mov
add
add
inc
add
int
cmc
or
add
lret
ret
data16
out
sbb
add
cmc
aas
lds
add
test
in
pop
imul
cmpsl
push
and
mov
add
add
into
cmp
add
dec
sbb
sub
insl
push
jge
fimull
add
movsb
add
dec
add
mov
repnz
inc
add
sbb
lcall
cmpl
push
add
cmp
mov
add
mov
cs
xor
jne
add
mov
loopne
and
mov
jp
sbb
add
sahf
mov
movsb
add
fwait
cli
in
rcll
out
xchg
add
mov
add
pop
test
rolb
rcrl
add
dec
mov
adc
flds
add
in
ret
cli
jb
cmp
paddw
pushf
popa
sub
outsl
out
xlat
mov
rolb
add
les
or
push
add
push
movb
add
mov
add
or
addb
add
add
jnp
add
stos
cmpsl
in
lods
dec
and
add
add
out
add
xchg
lods
xlat
mov
pop
or
xchg
add
sub
xor
add
in
test
fadds
outsl
and
pop
pop
pop
add
mov
and
push
add
out
jbe
mov
testb
fldt
add
bndstx
je
fsubs
push
add
xor
stos
cmp
popa
rorl
andl
sbb
dec
aad
add
add
mov
aam
sub
out
loope
push
je
ja
fadds
xchg
add
add
cmp
add
mov
cmp
add
add
test
shl
and
mov
add
jbe
lods
cmpsl
cli
or
mov
add
mov
push
add
out
jp
lret
nop
add
movb
addr16
mov
add
add
add
lock
add
push
add
in
inc
add
hlt
add
add
jns
push
pop
lret
push
add
add
add
xchg
loope
add
ljmp
add
xchg
dec
cmp
scas
imul
add
add
mov
add
mov
push
add
add
lods
int3
or
add
jno
sahf
testl
lret
or
repnz
dec
aad
data16
sub
je
in
push
add
fucom
add
hlt
add
dec
not
mov
lods
cli
xlat
loop
xchg
add
add
jbe
xchg
add
testb
pop
leave
inc
add
mov
sbb
mov
rolb
push
add
pop
ficoml
add
rolb
adc
add
loope
add
mov
xchg
jbe
aad
test
loopne
inc
popa
xor
jnp
xlat
xor
xchg
add
nop
add
pop
testb
flds
add
xchg
scas
and
add
xchg
add
xchg
push
add
add
cmpsb
add
clc
daa
sbb
test
mov
xor
add
dec
jl
sbb
adc
arpl
incl
mov
fwait
fcomp
xor
add
add
rorl
clc
xchg
add
loop
std
adc
xchg
add
cltd
cmp
pop
imul
popa
rolb
add
rolb
pop
jle
or
or
add
xlat
daa
ret
cmp
push
lahf
call
jle
add
mov
mov
fistpll
jns
cmc
xor
cmp
mov
or
in
rolb
add
jnp
out
jno
popa
mov
and
and
jmp
movsb
add
movsl
sub
add
int3
rolb
inc
stos
ja
add
mov
add
outsb
loope
stc
sbb
lds
jns
insl
rorl
rcll
jl
pop
jae
add
outsl
adc
sbb
mov
ret
and
mov
mov
lahf
pop
fwait
mov
icebp
mov
test
add
das
shr
jge
adc
out
ret
jmp
fwait
stc
add
push
out
int
jbe
and
mov
add
mov
add
xchg
das
subl
std
imul
dec
imul
mov
add
add
loopne
sbb
shll
in
data16
fistpl
push
add
cmc
xchg
add
xor
cmp
dec
cmp
add
mov
pop
jo
inc
add
mov
fldenv
mov
imul
inc
push
add
mov
dec
dec
je
lret
sbb
xor
in
mov
jge
add
jno
sbb
out
and
mov
int3
js
in
xor
mov
cmp
in
sbb
mov
add
add
pop
xor
jno
jo
scas
loop
leave
fstpl
add
fnsave
xchg
add
xchg
unpckhps
add
aam
adc
push
out
push
cmp
data16
addb
cmp
add
sub
sbb
movsb
add
arpl
add
hlt
add
add
push
add
je
cmc
out
je
jo
add
jmp
cmp
add
add
push
out
push
lret
mov
sub
fbstp
or
bound
mov
sti
ljmp
cmpsl
inc
add
sbb
in
call
outsb
dec
cmp
add
or
mov
add
movsb
add
clc
add
mov
add
out
rcrl
add
or
pusha
add
add
and
sti
xchg
add
add
rorl
dec
je
xchg
jge
lret
xchg
add
gs
mov
jl
adc
shl
xor
xchg
inc
add
iret
cli
cs
add
inc
add
add
pushf
and
mov
pop
dec
mov
movsl
js
mov
add
shll
aas
out
les
jp
add
add
jg
add
jnp
jecxz
add
add
pminub
fcoml
add
add
in
sbb
add
xlat
sbb
jecxz
mov
gs
fucom
xchg
add
sbbl
das
jae
add
testb
sub
push
add
xchg
mov
add
repz
mov
mov
push
add
movb
xchg
mov
or
xor
mov
outsl
mov
add
xor
mov
adcl
in
push
sub
bound
mov
jp
test
xor
cmpsb
add
mov
in
add
mov
bound
mov
add
mov
das
faddl
stos
jbe
inc
mov
add
sub
add
add
fisubrl
pop
add
pop
fisttpll
lods
pop
or
insb
daa
sub
jae
add
jl
add
mov
outsl
stos
xor
add
add
les
pop
mov
add
into
je
stos
and
mov
add
pop
push
add
lods
dec
cmc
femms
xchg
adc
rolb
add
fbld
lods
jb
jmp
cmp
stos
mov
mov
clc
jl
add
add
mov
inc
sbb
cmc
test
in
and
add
add
lds
shufps
xor
adc
pop
adc
adc
test
lods
jo
test
mov
test
rcrl
int
mov
test
lods
mov
adc
xchg
aas
aas
adc
lods
addr16
or
test
add
fwait
enter
xchg
add
fistpll
xor
je
push
add
lds
push
add
mov
add
ror
sub
shll
daa
mov
add
pop
in
pop
jnp
add
rorl
add
add
faddl
adc
subl
sub
xor
aam
enter
push
add
stos
mov
mov
adc
das
xor
or
add
add
addb
movsb
add
or
cmpsb
add
into
mov
test
sti
rorl
ret
xor
jle
cmc
stos
cmp
sbb
sbb
shll
je
cmp
pop
gs
pop
es
mov
jne
dec
mov
add
pop
push
add
ljmp
sub
add
addb
movsl
loopne
aam
mov
movsl
shll
fistl
jae
push
arpl
pop
pop
test
xchg
push
out
aaa
jo
mov
push
pmuludq
mov
mov
cmp
adc
xchg
add
dec
xor
pushf
mov
fimull
in
hlt
add
inc
cwtl
dec
rolb
pop
jl
mov
add
jmp
mov
mov
pop
insl
in
clc
pop
inc
add
dec
addb
mov
add
push
adc
cltd
cmp
add
in
insl
stos
xor
add
outsl
js
adc
xor
push
call
mov
add
add
pop
mov
add
add
out
add
clc
std
stc
lret
and
mov
xchg
pushf
jmp
dec
fmul
mov
dec
mov
movsl
out
add
add
xor
in
mov
loopne
mov
ret
outsl
rcrl
cmp
jno
xor
test
lods
loopne
aad
pop
fnstcw
mov
inc
stos
jo
xchg
add
jmp
push
or
add
cli
leave
into
sub
add
jb
mov
sub
lret
xchg
jb
push
add
add
xchg
fdiv
cmp
lods
out
rolb
dec
adc
in
repnz
repnz
movb
add
lret
add
test
call
mov
add
clc
mov
into
or
adc
sub
adc
rolb
jle
ret
std
in
dec
addl
xlat
and
loop
xchg
dec
test
repnz
pop
dec
fstl
add
movsl
or
inc
add
or
add
movb
jmp
sub
add
cmp
fldcw
mov
jmp
out
push
add
mov
mov
sub
add
rcll
ds
xchg
cltd
push
jae
rorl
ljmp
aam
aaa
movsb
add
dec
bound
mov
stc
adc
pop
push
add
add
clc
repz
add
add
lea
or
mov
iret
insl
jp
mov
pop
mov
mov
in
mov
add
sahf
aam
out
int3
addb
add
sub
fidivl
add
sbbl
push
add
in
pop
adc
loope
dec
and
mov
push
add
mov
sti
sub
popf
jbe
loope
xchg
shrl
dec
xchg
test
mov
jmp
adc
js
add
add
cld
rolb
mov
lock
fmul
cmp
cmp
add
aas
std
out
lods
inc
add
add
mov
cmp
jns
add
jle
jecxz
pop
in
lods
push
imul
and
ja
dec
dec
dec
adc
inc
add
lret
xor
or
mov
rolb
mov
add
xchg
add
dec
push
jb
sbb
aad
ja
fisubrl
mov
fidivrs
xor
outsl
xor
mov
cltd
or
add
push
add
fistpll
jp
add
mov
push
or
movsb
add
loop
inc
jbe
mov
or
into
pushf
lods
rolb
jmp
cmp
add
mov
mov
add
add
jo
adc
fildll
add
push
sbb
add
das
dec
add
add
add
inc
lods
daa
xlat
cmp
sub
aaa
xchg
aad
push
pop
mov
mov
add
sub
add
jns
cmp
inc
add
add
pop
mov
add
add
mov
aas
xchg
data16
or
xchg
xor
dec
mov
cld
jo
shl
add
out
mov
add
aad
pop
pop
cwtl
outsb
ret
addb
scas
and
add
ds
mov
nop
add
add
add
pushl
jno
insb
and
ja
add
into
popa
push
and
clc
pusha
add
hlt
add
or
xchg
cs
and
movsl
cmp
insl
sub
dec
pop
cli
pop
rorl
inc
dec
rolb
jno
add
add
sbb
add
imul
jbe
aas
xchg
adc
adc
mov
mov
add
or
sti
ds
ja
hlt
add
cld
movsb
add
dec
mov
std
pop
loopne
pop
xor
and
add
fwait
in
cmpsb
add
cs
aad
mov
add
sub
xor
inc
or
scas
enter
mov
sub
jmp
mov
add
mov
std
cltd
dec
test
add
pop
outsl
or
dec
cmpsb
add
movsb
add
xchg
adc
or
sti
call
xlat
sbb
mov
xchg
add
arpl
adc
into
sbb
add
je
test
iret
popa
call
pop
mov
add
loope
push
add
pop
fmul
mov
xlat
push
xchg
testb
push
clc
jbe
sbb
loop
sub
aas
pop
xor
lret
int3
repnz
add
jl
in
std
jae
lods
test
jo
adc
xor
jnp
lds
mov
push
add
sbb
pop
fsubl
add
sbb
add
dec
jle
push
data16
add
sbb
add
inc
add
pop
mov
insl
pop
out
jp
in
mov
loop
push
add
add
addb
add
pop
dec
push
add
add
add
rolb
mov
cmp
add
lcall
inc
clc
stos
add
hlt
add
loopne
or
pop
hlt
add
cmp
add
inc
cmc
aad
sbb
jbe
push
add
pop
outsl
popf
je
pushf
bound
mov
add
gs
inc
cmp
sub
mov
mov
add
add
jno
add
lods
mov
lods
push
add
lret
jno
scas
add
add
add
add
mov
mov
add
fs
in
fsin
std
sub
scas
push
insl
jecxz
rcll
add
and
call
push
add
mov
jnp
fadd
sar
in
cmovl
add
add
add
subl
add
sbb
scas
cwtl
add
mov
mov
sbb
add
push
testb
cli
aad
ret
rolb
mov
add
rcr
dec
ficoml
mov
daa
in
push
add
mov
xor
add
mov
jbe
das
hlt
add
outsb
cwtl
and
sub
pop
xchg
lea
pusha
add
out
push
add
xchg
jbe
cmp
mov
add
xchg
sub
call
dec
add
cld
mov
add
int
push
hlt
add
xor
out
or
cmp
dec
cmp
inc
mov
cwtl
rolb
stos
pop
cvtps2pd
mov
pushl
add
test
dec
rolb
jbe
add
dec
fdivp
add
sub
int3
shll
sbb
int3
push
mov
loopne
and
dec
xor
mov
xor
fidivl
add
mov
jl
add
add
cmp
insb
out
in
pop
cmp
js
add
push
add
add
inc
add
xchg
jecxz
add
mov
add
add
dec
int
xchg
cmc
xor
das
inc
add
or
add
and
mov
add
add
fs
insl
movsl
dec
cmp
ja
add
mov
xchg
push
add
add
aam
add
ret
repnz
mov
fwait
cld
leave
gs
inc
je
scas
arpl
mov
shrl
call
jno
xor
add
add
mov
add
jecxz
pushf
loopne
test
mov
add
rolb
lock
push
adc
cltd
xchg
add
insl
adc
arpl
das
sub
fsubr
mov
push
add
mov
lcall
stc
push
addr16
push
push
add
xchg
aam
addb
out
cmpsb
add
add
fisubl
add
int3
jmp
mov
xlat
or
push
add
push
insb
and
add
add
add
add
adc
adc
data16
in
fwait
mov
add
dec
mov
pop
push
pop
int
add
add
add
xorl
mov
fcompl
xchg
pop
sahf
cmp
push
aas
pop
add
test
xor
jle
mov
add
adcl
mov
or
repz
fdiv
insl
repnz
mov
dec
test
pop
or
add
movb
sbb
push
jp
add
add
sub
add
pop
dec
mov
fisubs
add
jb
sbb
add
add
add
imul
repz
cmpsb
add
cmpsl
clc
int3
mov
iret
icebp
filds
add
hlt
add
xchg
lahf
daa
jp
add
add
add
mov
mov
je
in
pop
push
cltd
push
add
sbb
mov
ja
mov
push
mov
test
add
in
cmp
add
add
scas
punpckhbw
xor
mov
data16
dec
pushf
pop
rcrl
test
pop
jl
insb
daa
lcall
rolb
mov
mov
or
jns
clc
sahf
lahf
or
push
mov
push
add
cmpsb
add
jl
add
add
adc
inc
add
mov
add
push
add
add
jmp
mov
add
int3
xor
sub
add
add
jae
je
dec
in
sub
xchg
pop
gs
test
jmp
inc
add
add
mov
add
mov
add
jge
insb
rolb
xchg
mov
out
aaa
xchg
addb
add
aas
xchg
enter
mov
mov
test
loopne
movb
add
add
popf
cmp
add
mov
mov
sub
add
cwtl
icebp
push
pop
stos
popf
in
push
add
out
test
jnp
pop
cmpsb
add
xor
push
add
add
jge
push
add
in
or
push
add
push
add
pop
mov
lods
mov
xchg
add
add
add
into
cmp
xlat
jo
sub
testb
add
add
loope
add
shl
xchg
add
mov
or
out
xor
dec
cmp
pop
jne
dec
inc
add
push
add
jo
push
xor
mov
add
rolb
sbb
jno
out
hlt
add
add
pop
stos
dec
jne
loop
cmpsl
rolb
repnz
push
ret
xchg
sbb
mov
xchg
add
add
aam
mov
dec
mov
movsb
add
mov
xor
adc
rolb
dec
sbb
cld
mov
add
es
test
dec
sets
int
sbb
jg
add
mov
add
sbb
pop
jl
in
scas
mov
add
ljmp
push
add
shll
push
or
testl
in
in
pop
xchg
add
stos
mov
pop
inc
imul
test
out
push
add
mov
pop
fsubrp
pop
push
add
stos
adc
ds
pop
std
push
add
ret
or
add
mov
int3
cmp
mov
jne
and
fst
inc
and
mov
movsl
insl
add
test
hlt
add
test
inc
in
add
add
and
xchg
cmpsl
or
or
add
mov
insl
sub
mov
mov
xor
inc
add
push
add
or
cmp
mov
jae
add
pop
mov
pop
leave
sbb
xlat
fiaddl
add
xchg
inc
add
mov
loop
dec
movsb
add
add
mov
push
cmc
adc
nop
add
aaa
jmp
stc
clc
into
sbbl
add
dec
jl
add
ret
les
dec
mov
pop
add
add
lahf
xor
mov
addb
jge
nop
add
fiaddl
je
sbb
hlt
add
jle
add
add
add
mov
dec
popf
ret
add
stc
rolb
add
hlt
add
rorl
dec
in
push
ljmp
sbb
add
out
stos
xchg
addb
clc
xchg
aad
add
dec
movsb
add
or
xchg
add
shll
jp
ds
xchg
mov
cwtl
cmp
adc
mov
inc
add
je
sbb
les
mov
xor
cmp
add
aad
push
xor
clc
pop
out
cmc
push
add
mov
je
inc
pushf
sti
roll
inc
add
repz
xlat
dec
bound
mov
jbe
xchg
sahf
add
mov
cmp
scas
jecxz
movb
inc
xor
add
add
sbb
add
in
inc
xchg
add
add
or
add
imul
add
sti
adc
add
out
and
mov
sahf
in
inc
add
gs
add
mov
jae
add
sub
jbe
aas
in
xchg
add
push
add
int
movsb
add
add
iret
xchg
movsb
add
xchg
aas
adc
pushf
lret
movb
add
stos
mov
xchg
call
push
imull
in
call
sbb
mov
add
inc
lods
pushf
stc
add
mov
dec
daa
jl
daa
lods
imul
push
push
add
add
stc
out
sub
add
add
repz
add
mov
jns
inc
add
test
add
add
aas
pop
leave
or
cli
dec
push
jmp
mov
mov
data16
in
cmp
add
add
add
adc
fiaddl
and
mov
out
arpl
mov
fsubl
jne
add
add
add
mov
pop
shl
test
push
les
not
add
push
add
inc
add
add
add
jp
xor
add
lods
adc
mov
sbb
int3
push
add
dec
push
add
addr16
add
mov
movsl
test
outsl
xchg
add
mov
inc
add
add
add
ds
ja
mov
imul
add
add
mov
add
scas
imull
inc
dec
or
jl
xor
in
loope
repz
add
testb
add
mov
adc
mov
ds
ficomps
pop
sub
repz
ljmp
xchg
add
sbb
add
testb
add
movsb
add
mov
lahf
mov
xchg
and
cld
cmp
push
add
pop
gs
mov
sti
cmp
jge
rolb
fsubrs
lret
leave
xor
xchg
in
mov
mov
add
add
add
testb
jne
in
xchg
mov
mov
bound
mov
mov
in
dec
rolb
js
xchg
ficompl
add
cld
jae
add
outsl
inc
sub
loop
jnp
add
push
add
mov
pop
or
iret
pusha
add
add
neg
test
dec
je
mov
test
jae
loope
cmp
add
enter
mov
cltd
jg
add
mul
add
add
int3
add
mov
jecxz
out
mov
imul
add
outsl
mov
outsl
xor
cmp
sub
test
mov
jnp
adc
push
cmpl
scas
push
notl
aam
mov
add
add
add
insb
rol
xor
clc
jb
add
rolb
repnz
inc
cli
fbstp
lret
addb
push
add
mov
nop
add
pop
inc
mov
dec
std
in
sbb
jb
jnp
push
mov
xor
test
dec
popf
xor
or
sbb
addr16
add
add
push
add
enter
add
faddl
adc
add
out
pop
in
rolb
xchg
add
repz
xchg
test
add
dec
cltd
addb
sub
jp
add
jnp
adc
nop
add
add
add
push
add
xchg
add
adc
dec
mov
add
adc
clc
sub
inc
cmp
add
mov
mov
push
pop
testb
add
lret
addb
cltd
das
and
mov
add
add
xor
add
adcl
dec
push
addb
sbb
mov
das
in
add
mov
mov
add
mov
add
imul
add
pop
rcrl
and
pop
int
fstpl
add
insl
lret
pushf
xchg
imul
pop
hlt
add
xchg
add
roll
mov
sub
push
add
inc
in
push
movsl
iret
add
fldenv
add
mov
aas
addl
xchg
add
mov
fldl
add
add
int
adc
add
mov
jne
jl
add
or
mov
inc
add
add
add
sub
repz
add
dec
test
cwtl
lods
arpl
ds
dec
test
outsl
mov
xchg
push
add
mov
lds
mov
add
lret
pusha
add
jno
add
and
add
add
adc
stos
rcr
icebp
test
ret
out
push
add
inc
add
cltd
cwtl
jo
jno
and
add
add
int
movb
clc
push
mov
inc
adcl
add
js
add
mov
add
add
add
add
cmpsb
add
xor
je
pop
cmp
pop
dec
sbb
add
add
pop
xchg
jno
mov
ret
lods
mov
mov
testb
push
add
add
lahf
in
jnp
or
push
pop
in
add
add
mov
sbb
int
add
mov
cmp
xchg
add
jle
stos
lock
rcl
and
mov
or
add
add
in
imul
push
stos
jmp
add
add
add
add
push
add
add
add
popa
aad
add
add
lcall
mov
add
sub
lds
or
adc
sub
add
cli
jae
daa
pop
sarl
add
lock
popa
and
int3
sbb
add
sub
add
call
xchg
clc
cmp
add
les
xchg
adc
outsb
test
add
pop
jp
mov
out
add
mov
bound
mov
insb
jo
testb
cwtl
sahf
insb
pop
mov
add
rolb
sub
stos
addb
bound
mov
push
enter
mov
mov
dec
testb
insl
bound
mov
add
sbb
sbb
add
push
add
add
movsl
xchg
ja
lds
add
jmp
fmull
sbb
popa
inc
add
add
mov
pop
jge
ja
movsb
add
lock
data16
xchg
add
add
mov
add
jo
xchg
in
pop
in
aad
loopne
lahf
pop
gs
ds
add
add
jns
arpl
add
pushf
fwait
xchg
push
and
mov
cmp
add
and
mov
lds
call
aam
push
add
add
jp
add
aad
push
js
add
xchg
into
in
cwtl
mov
xlat
sbb
mov
add
add
xlat
pop
xchg
adc
add
add
add
mov
lods
mov
in
add
jns
dec
jb
std
push
repz
filds
pop
shl
pop
sub
popa
jmp
add
imul
lds
js
push
test
add
add
add
stos
pop
out
testl
jb
daa
push
add
add
fnstsw
mov
subl
or
sbb
pusha
add
int
fwait
out
nop
add
in
mov
or
and
mov
outsb
das
jne
add
push
add
mov
add
pusha
add
add
mov
bound
mov
test
stc
and
mov
fcomps
mov
stos
fldcw
add
push
add
cld
testb
lret
add
mov
imul
xor
push
add
mov
mov
jg
dec
cmp
add
lods
les
mov
mov
inc
xor
jbe
mov
add
sub
push
jb
loope
scas
pop
pop
mov
add
je
in
mov
add
add
add
add
adc
push
add
testb
enter
fwait
sub
mov
mov
add
out
add
add
add
jl
adc
loop
in
out
test
aam
push
mov
push
movsb
add
call
leave
adc
sub
add
pop
jle
enter
cmp
xor
ja
imul
clc
aas
fimuls
lcall
mov
les
fisttpll
stc
scas
jo
dec
rolb
pop
adc
add
add
out
add
adc
cs
add
add
lea
jp
add
push
push
inc
sarl
inc
add
insl
cmp
adc
test
sub
push
add
cld
fstpt
fwait
cld
lcall
add
nop
add
dec
jecxz
mov
mov
add
je
add
je
adc
and
scas
ficompl
insb
jmp
add
dec
mov
add
or
je
jnp
add
mov
iret
ds
add
xor
or
mov
add
add
add
mov
cmp
add
mov
rolb
mov
add
subl
add
dec
lcall
jmp
push
bound
mov
mov
add
mov
insb
addb
add
ret
adc
pop
push
pop
xor
cli
and
js
jnp
pushf
repz
add
add
nop
add
sahf
adc
inc
mov
add
add
sbb
add
bound
mov
mov
add
push
add
push
jbe
repnz
add
mov
fcmovb
add
add
and
add
xlat
imul
add
je
or
dec
fwait
xor
xor
cs
popf
xchg
loopne
test
repnz
addr16
sub
add
or
pop
inc
rolb
mov
add
sub
mov
clc
adc
inc
add
cmp
ret
loope
in
sbb
add
jl
popa
xchg
sub
lods
stos
jecxz
or
xor
fisubrs
data16
popf
pop
adc
mov
stc
add
popa
cmp
pop
outsb
mov
test
pop
shll
dec
in
jae
add
jb
jb
xchg
out
or
mov
pop
and
mov
call
and
mov
push
xchg
aaa
cmpsl
pop
fldl
adc
inc
test
addb
nop
add
aam
outsl
add
fidivrl
mov
loop
xor
mov
xchg
fstp
jbe
pop
in
popa
das
jns
jns
loop
mov
mov
fistpl
lds
push
add
popf
outsl
mov
mov
jge
in
shll
movsl
push
add
jae
add
inc
add
add
add
mov
add
test
ds
mov
jb
push
scas
out
add
push
lret
or
add
sbb
mov
xor
mov
sub
popf
les
loop
cmp
add
mov
addb
jmp
add
add
mov
cmp
push
add
jae
add
add
jae
add
mov
mov
addr16
mov
add
sub
lcall
fidivrs
sti
sbb
add
sub
stos
pop
out
xchg
add
mov
stos
xor
in
ds
mov
aad
jle
jecxz
dec
aas
add
mov
add
inc
add
ret
xchg
bound
mov
inc
add
push
jno
and
mov
and
add
xchg
cmp
lcall
push
stos
adc
or
cmc
aaa
push
add
movsb
add
add
and
repz
mov
add
add
inc
add
or
add
clc
sub
add
inc
add
add
int3
xor
sbb
add
add
add
and
add
pop
sub
icebp
add
mov
and
add
add
nopl
add
jg
add
and
mov
add
add
les
sub
add
aam
pop
push
aad
imul
bound
mov
push
or
sarl
fldcw
out
mov
rcl
add
dec
mov
add
pop
inc
xchg
add
rolb
push
add
cmpsl
add
mov
cmp
scas
scas
inc
add
pop
inc
add
test
push
add
mov
add
add
sbb
mov
hlt
add
sub
xchg
add
mov
add
add
push
add
and
movsb
add
mov
arpl
add
inc
cmp
add
jmp
mov
mov
rolb
je
or
and
sahf
loope
dec
lret
les
mov
cmp
dec
push
push
add
add
sbb
add
add
into
or
loopne
add
mov
data16
pushf
out
lock
jnp
add
sbb
push
cmp
add
sti
pop
add
add
add
dec
es
mov
fabs
jno
adcl
xor
sub
jle
sbb
jmp
mov
cltd
or
pop
fs
sbb
cmpl
add
cmc
cld
adc
jbe
outsb
pop
push
xchg
shrl
push
add
cltd
and
xlat
data16
or
dec
mov
incl
and
mov
arpl
add
mov
mov
clc
in
pop
movsl
pop
adc
pushf
or
add
dec
aaa
in
gs
lds
aad
inc
fsub
lahf
stc
out
and
mov
jmp
mov
gs
dec
loope
fstpl
out
sbb
add
movsb
add
push
add
add
xchg
mov
add
sahf
cs
mov
push
xlat
pop
int
push
push
or
add
cmpsb
add
out
loop
adc
add
rolb
and
xlat
mov
pop
shl
mov
cli
lret
adc
add
mov
jle
iret
popf
adc
cmp
add
and
inc
in
jno
add
xor
sub
lds
into
cmp
jp
xor
sub
mov
cli
mov
add
or
das
movsb
add
mov
aas
fwait
ja
add
insl
test
xchg
sbb
adc
test
call
add
lds
rolb
decl
sbb
add
sbb
xchg
sbb
lods
xor
addb
cmpsb
add
rolb
push
add
add
movsb
add
fistps
iret
xchg
repz
mov
inc
mov
out
pusha
add
sub
in
scas
push
scas
rcl
add
loopne
in
or
add
add
movsb
add
cmp
mov
cmc
jmp
push
sbb
stos
mov
jmp
jp
rolb
push
add
cmp
in
testb
sbbl
sbb
add
sub
call
add
add
cmp
sub
or
push
pop
mov
xor
mov
dec
inc
lods
in
pop
sub
add
xchg
add
jmp
add
add
int3
out
in
pop
add
mov
push
shl
mov
add
aad
stos
or
mov
outsb
roll
add
cmp
add
mov
sbb
add
xor
jmp
jne
mov
or
jnp
in
sti
repz
mov
mov
mov
push
add
and
push
iret
jo
in
fidivrs
icebp
fstp
xchg
add
outsb
mov
out
cwtl
pop
add
mov
add
mov
fcmovu
rcrl
push
dec
xor
inc
add
mov
mov
test
add
adc
mov
push
add
add
adc
cld
xor
pop
nop
add
jmp
arpl
inc
push
jge
sub
add
pop
add
xor
and
mov
add
loop
sub
push
add
out
mov
and
mov
dec
xor
add
xor
or
scas
adc
mov
lret
cmp
fidivs
pushf
mov
add
add
add
push
jns
add
test
rolb
add
mov
add
mov
jg
add
roll
outsb
push
adc
xor
push
add
daa
push
xor
lcall
loop
adc
add
pushf
jp
inc
add
into
test
scas
leave
inc
mov
mov
imul
add
mov
test
rolb
movsb
add
mov
add
inc
lock
add
test
add
add
add
inc
add
repnz
jae
add
xchg
add
cwtl
mov
clc
repnz
jae
fists
les
jns
dec
cmp
repnz
jae
imul
mov
dec
imul
cmp
adc
adc
clc
repnz
jae
add
add
or
jg
clc
repnz
jae
cmp
add
add
jae
add
cltd
scas
mov
clc
repnz
jae
add
call
pusha
push
mov
xchg
ret
add
add
cltd
add
add
test
repnz
jae
add
xor
inc
insl
push
push
mov
xchg
ret
icebp
jl
mov
adc
jmp
add
in
add
lahf
mov
push
mov
xchg
ret
clc
add
adc
add
stc
push
push
mov
xchg
ret
mov
dec
and
add
clc
mov
fwait
cld
nop
jmp
jns
sub
add
mov
clc
repnz
jae
add
sub
add
push
clc
repnz
jae
jl
addr16
add
xlat
movb
dec
pusha
clc
repnz
jae
sbb
pop
jl
pop
add
fbld
mov
xchg
ret
in
sub
add
push
clc
repnz
jae
dec
add
int3
rclb
or
sbb
add
lcall
add
add
daa
push
add
test
cld
nop
jmp
xor
add
fwait
cld
nop
jmp
pop
inc
add
xlat
aad
add
clc
repnz
jae
jg
add
add
sub
add
call
clc
repnz
jae
dec
sbb
pop
addb
add
add
mov
sub
add
add
mov
add
add
aaa
ficoms
mov
xchg
ret
call
add
outsl
les
clc
repnz
jae
imul
adc
xchg
mov
clc
repnz
jae
add
add
filds
add
nop
jmp
adc
adc
jmp
clc
repnz
jae
pop
inc
ss
mov
clc
repnz
jae
add
add
mov
fwait
cld
nop
jmp
add
mov
sub
add
mov
xchg
ret
sbb
rcrb
mov
adc
repnz
jae
add
add
adc
aam
lods
mov
fwait
cld
nop
jmp
add
sbb
dec
add
push
mov
xchg
ret
add
add
mov
add
fwait
cld
nop
jmp
and
sub
adc
add
mov
clc
repnz
jae
add
clc
repnz
jae
mov
add
sti
clc
repnz
jae
pop
add
add
add
add
add
mov
push
push
mov
xchg
ret
add
or
int3
push
clc
repnz
jae
enter
add
sub
cld
nop
jmp
add
xchg
add
add
add
lds
sar
nop
jae
sub
cmp
jg
clc
repnz
jae
add
add
jae
and
mov
cmp
jne
clc
repnz
jae
add
add
roll
sub
push
cmp
ret
add
pop
add
add
repnz
jae
clc
add
pop
add
add
cmp
fwait
cld
nop
jmp
cltd
inc
push
and
aas
add
clc
repnz
jae
int3
inc
add
int3
mov
sub
and
inc
add
rorb
add
faddl
xchg
ret
add
addr16
add
fwait
cld
nop
jmp
add
xchg
add
add
jae
adc
pop
add
daa
push
pop
jle
mov
nop
jae
pop
jl
and
xor
ret
aas
push
clc
repnz
jae
add
add
mov
xchg
and
mov
push
clc
repnz
jae
int3
ret
jns
add
mov
hlt
add
data16
add
dec
into
inc
add
filds
add
ret
dec
fwait
cld
nop
jmp
jl
xchg
add
add
add
rcll
mov
xchg
ret
add
add
add
test
jne
clc
repnz
jae
in
xor
add
fimull
repnz
jae
add
adc
add
add
or
test
sub
add
repnz
jae
xchg
add
aam
je
movsb
add
in
add
clc
repnz
jae
add
add
adc
or
icebp
fwait
cld
nop
jmp
add
add
add
add
clc
repnz
jae
add
pop
dec
push
mov
xchg
ret
add
add
add
test
push
mov
xchg
ret
sub
jp
subl
mov
add
add
clc
in
lea
clc
repnz
jae
pop
add
int3
mov
clc
repnz
jae
add
enter
push
sbb
test
inc
add
add
add
mov
repnz
jae
fistps
add
repnz
jae
add
xchg
pop
inc
jge
imul
jmp
incb
and
inc
add
add
clc
repnz
jae
int3
xchg
push
push
mov
xchg
ret
add
fistl
mov
xchg
ret
fistpll
in
add
add
scas
add
clc
repnz
jae
add
addr16
push
mov
xchg
ret
pop
and
adc
rclb
jno
inc
add
add
add
add
jp
dec
or
mov
xchg
ret
adc
dec
mov
clc
repnz
jae
jg
add
and
clc
repnz
jae
pop
add
add
add
popa
add
mov
xchg
ret
jge
mov
add
clc
repnz
jae
pop
add
add
dec
jmp
mov
add
sbb
adc
add
rorl
add
repnz
jae
add
add
repnz
jae
adc
inc
cmp
mov
xchg
ret
add
mov
ret
mov
push
clc
repnz
jae
or
mov
clc
repnz
jae
add
add
test
jnp
jae
sub
add
add
insb
push
clc
repnz
jae
add
cmp
cld
nop
jmp
cltd
add
add
daa
xor
add
repnz
jae
add
clc
add
out
pop
fwait
cld
nop
jmp
pop
add
add
jl
add
push
mov
xchg
ret
add
pop
inc
add
aaa
dec
xor
clc
repnz
jae
lcall
sub
movsb
clc
repnz
jae
ss
sbb
int3
add
mov
xchg
ret
ss
and
add
mov
clc
repnz
jae
cmp
add
fwait
cld
nop
jmp
add
add
add
add
add
cmp
gs
add
add
pop
add
sub
clc
repnz
jae
push
call
dec
push
fwait
cld
nop
jmp
jno
add
add
icebp
in
dec
xchg
popf
mov
fwait
cld
nop
jmp
int3
add
in
call
clc
repnz
jae
mov
rep
clc
repnz
jae
mov
add
call
push
fwait
cld
nop
jmp
add
push
pop
add
cltd
add
dec
adc
repnz
jae
add
mov
fs
repnz
jae
daa
jge
add
add
push
mov
xchg
ret
inc
cmp
add
jne
clc
repnz
jae
ss
clc
stos
clc
repnz
jae
pop
fcomip
add
and
xor
add
clc
repnz
jae
add
add
add
ss
repnz
jae
add
add
sahf
add
dec
add
clc
repnz
jae
add
ss
loope
add
and
add
jl
imul
sbb
add
add
in
ljmp
addl
dec
add
push
lds
add
mov
xchg
ret
enter
imul
clc
repnz
jae
adc
add
nop
jmp
or
mov
in
xor
clc
repnz
jae
add
shr
sub
adc
add
inc
add
cltd
add
adc
add
cmpl
nop
jae
push
add
add
add
mov
xchg
ret
sub
ljmp
repnz
jae
add
pop
daa
dec
add
xor
fwait
cld
nop
jmp
jl
jns
daa
add
add
dec
push
clc
repnz
jae
add
add
and
ror
jb
clc
repnz
jae
add
add
mov
add
cmpw
fwait
cld
nop
jmp
adc
sub
dec
push
mov
xchg
ret
cmp
add
iret
mov
fwait
cld
nop
jmp
push
add
icebp
int3
add
xchg
xor
push
mov
xchg
ret
add
nop
add
pop
add
add
repnz
jae
mov
imul
add
rcrl
out
dec
mov
clc
repnz
jae
mov
daa
add
add
jge
clc
repnz
jae
add
add
in
jp
jae
clc
repnz
jae
add
add
cmp
add
and
clc
repnz
jae
icebp
sbb
mov
adc
dec
add
clc
repnz
jae
and
add
rolb
or
nop
jae
imul
and
test
stc
clc
repnz
jae
add
popl
clc
repnz
jae
add
test
add
add
repnz
jae
sub
ret
fwait
cld
nop
jmp
adc
add
sahf
adc
adc
faddl
xchg
ret
add
add
mov
clc
repnz
jae
jno
cltd
add
add
add
add
cmp
clc
repnz
jae
incb
mov
lea
fwait
cld
nop
jmp
sarl
add
clc
repnz
jae
add
decl
clc
repnz
jae
add
add
daa
inc
cmpsl
push
add
push
fwait
cld
nop
jmp
filds
inc
add
add
clc
cmp
push
mov
xchg
ret
lcall
aaa
inc
xchg
movsl
mov
fmuls
nop
jae
and
dec
add
add
sbb
repnz
jae
imul
add
mov
clc
repnz
jae
ss
push
mov
xchg
ret
ljmp
or
repnz
jae
filds
add
add
add
clc
repnz
jae
add
and
xor
clc
repnz
jae
adc
add
add
or
add
repnz
jae
add
mov
test
fwait
cld
nop
jmp
addr16
add
clc
jmp
fwait
cld
nop
jmp
xchg
add
add
add
jbe
clc
repnz
jae
call
cli
and
push
mov
xchg
ret
pop
add
jno
add
jae
mov
add
push
add
xchg
xor
mov
xchg
ret
inc
mov
add
add
or
repnz
jae
add
add
pusha
add
in
add
add
mov
push
cltd
sub
mov
xchg
ret
push
and
enter
and
clc
repnz
jae
mov
mov
add
fwait
cld
nop
jmp
sbb
add
mov
std
mov
clc
repnz
jae
add
icebp
add
xor
clc
repnz
jae
add
xor
mov
add
clc
repnz
jae
adc
mov
clc
repnz
jae
mov
and
add
xor
add
clc
repnz
jae
add
dec
clc
dec
inc
clc
repnz
jae
add
pop
clc
xor
enter
jmp
add
add
add
add
mov
push
mov
xchg
ret
add
add
mov
lea
nop
jae
add
add
sub
loopne
mov
imul
clc
repnz
jae
add
or
add
idivl
je
fwait
cld
nop
jmp
cltd
add
xor
add
clc
repnz
jae
filds
adc
jl
add
mov
clc
repnz
jae
sarb
inc
or
clc
repnz
jae
pop
add
add
sbb
xor
dec
call
clc
repnz
jae
add
add
loopne
add
add
ret
pop
clc
repnz
jae
add
add
cmpsl
pop
jne
clc
repnz
jae
add
jl
or
clc
repnz
jae
mov
loope
sbb
jae
add
jbe
int3
pop
clc
repnz
jae
lcall
add
fwait
cld
nop
jmp
add
mov
in
outsb
mov
fwait
cld
nop
jmp
add
adc
push
sub
jae
mov
add
inc
stos
mov
clc
repnz
jae
pop
mov
or
sti
or
nop
jae
add
jno
sub
sti
roll
xchg
ret
pop
lcall
mov
clc
repnz
jae
addr16
add
add
repnz
jae
add
pop
xchg
add
clc
repnz
jae
jg
add
xor
clc
repnz
jae
add
jns
push
push
mov
xchg
ret
add
inc
push
add
adc
lea
nop
jae
add
add
add
mov
xchg
ret
add
jno
add
dec
mov
push
mov
xchg
ret
add
add
pop
cs
fwait
cld
nop
jmp
xchg
and
in
out
add
push
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
sub
add
xchg
mov
mov
xchg
ret
call
jl
sub
clc
repnz
jae
add
enter
add
sti
fwait
cld
nop
jmp
ljmp
pop
mov
jne
clc
repnz
jae
xor
sahf
or
lret
fwait
cld
nop
jmp
add
add
jns
inc
add
mov
xchg
ret
call
in
mov
clc
repnz
jae
clc
inc
enter
xchg
inc
add
add
add
add
and
clc
repnz
jae
xor
stos
mov
clc
repnz
jae
add
enter
push
add
cld
push
mov
xchg
ret
mov
sahf
add
jmp
jae
fistpll
mov
nop
jae
inc
and
fbld
stc
mov
clc
repnz
jae
xchg
addr16
add
clc
repnz
jae
add
pop
daa
adc
add
clc
repnz
jae
inc
jge
add
adc
repnz
jae
push
sbb
adc
pop
push
mov
xchg
ret
add
jge
roll
add
xor
fwait
cld
nop
jmp
ret
add
add
mov
lea
clc
repnz
jae
add
add
xchg
add
popa
fwait
cld
nop
jmp
imul
add
add
push
add
lret
add
add
imul
mov
clc
repnz
jae
sahf
sub
clc
repnz
jae
adc
addr16
or
aad
add
sbb
clc
repnz
jae
add
sbb
push
loopne
repnz
jae
jno
mov
push
add
push
fwait
cld
nop
jmp
add
inc
add
or
nop
jae
clc
add
pop
rolb
lcall
loopne
add
inc
add
jns
mov
add
roll
dec
jns
add
add
clc
repnz
jae
add
xor
add
clc
repnz
jae
add
add
add
in
enter
fwait
cld
nop
jmp
add
sub
add
lods
je
clc
repnz
jae
ss
rolb
sub
inc
add
add
adc
inc
in
repnz
jae
add
mov
jne
rep
push
mov
xchg
ret
adc
add
sahf
add
mov
clc
repnz
jae
mov
clc
repnz
jae
in
mov
mov
or
repnz
jae
adc
jle
inc
sub
add
add
adc
enter
clc
repnz
jae
or
add
push
mov
xchg
ret
add
add
mov
icebp
fwait
cld
nop
jmp
add
add
lret
jne
clc
repnz
jae
sub
add
arpl
add
repnz
jae
mov
push
push
mov
xchg
ret
jg
inc
shlb
xchg
add
stos
fwait
cld
nop
jmp
ret
pop
jge
in
mov
push
mov
xchg
ret
mov
adc
mov
xchg
ret
add
clc
adc
cmp
mov
xor
add
clc
repnz
jae
add
sub
push
mov
xchg
ret
add
ret
shlb
lret
inc
add
int3
int3
or
mov
clc
repnz
jae
jg
add
add
add
fwait
cld
nop
jmp
pop
dec
dec
pop
add
add
pop
clc
repnz
jae
add
jge
add
add
dec
loop
add
add
add
add
clc
repnz
jae
add
add
icebp
jo
mov
sbbl
add
repnz
jae
add
aaa
mov
fmull
test
repnz
jae
add
mov
push
mov
xchg
ret
add
add
in
call
clc
repnz
jae
fbstp
add
sub
repz
lcall
add
add
add
push
push
mov
xchg
ret
add
add
xchg
add
cmp
repnz
jae
add
and
rcr
add
push
mov
xchg
ret
add
add
add
cld
nop
jmp
mov
add
sahf
mov
add
in
add
cmp
mov
add
xchg
add
add
mov
clc
repnz
jae
and
mov
xor
add
clc
repnz
jae
add
repnz
jae
mov
call
mov
clc
repnz
jae
add
lret
add
sldt
add
ror
add
jg
inc
and
clc
repnz
jae
add
add
aas
jmp
add
add
add
inc
add
sub
nop
jmp
add
add
add
add
repnz
jae
adc
add
mov
fwait
cld
nop
jmp
add
inc
pop
sahf
inc
pusha
add
into
push
add
clc
repnz
jae
or
xor
push
mov
xchg
ret
jno
addr16
add
cld
nop
jmp
icebp
add
jns
dec
inc
adc
ja
add
mov
clc
repnz
jae
mov
xor
nop
jae
ret
dec
add
add
add
cmp
repnz
jae
call
add
adc
repnz
jae
dec
enter
mov
fwait
cld
nop
jmp
call
sub
mov
test
push
mov
xchg
ret
add
add
pop
mov
repnz
jae
mov
add
add
clc
repnz
jae
jg
int3
add
add
lret
fwait
cld
nop
jmp
add
sub
imul
fwait
cld
nop
jmp
rolb
add
adc
add
clc
cli
clc
repnz
jae
add
sahf
add
clc
inc
add
add
pop
je
clc
repnz
jae
call
clc
repnz
jae
or
add
add
mov
adc
add
repnz
jae
add
mov
test
clc
repnz
jae
push
ss
clc
repnz
jae
add
add
mov
add
add
add
les
repnz
jae
add
call
add
add
clc
repnz
jae
mov
add
pushl
push
mov
xchg
ret
add
add
je,pt
clc
repnz
jae
add
jno
clc
repnz
jae
dec
add
pop
add
repz
mov
xchg
ret
add
add
jno
add
aam
adc
add
repnz
jae
adc
sbb
mov
mov
clc
repnz
jae
dec
add
in
mov
xor
inc
fwait
cld
nop
jmp
sahf
add
inc
add
call
clc
repnz
jae
add
add
add
cmp
ret
add
add
xor
clc
repnz
jae
pop
add
rcr
dec
mov
fwait
cld
nop
jmp
and
icebp
add
sub
int
pop
jae
repnz
jae
in
sahf
add
mov
clc
repnz
jae
add
add
int3
call
fwait
cld
nop
jmp
dec
mov
sbb
cmc
addr16
inc
push
mov
xchg
ret
add
add
inc
fimull
test
clc
repnz
jae
add
pop
add
fwait
cld
nop
jmp
xchg
add
xor
jg
lahf
rep
clc
repnz
jae
dec
add
add
clc
repnz
jae
add
adc
in
and
mov
stos
mov
clc
repnz
jae
inc
dec
and
add
clc
repnz
jae
add
jge
add
add
add
ret
sbb
idiv
call
jb
and
push
mov
add
add
add
push
pop
icebp
add
add
mov
add
clc
repnz
jae
add
int3
jge
ljmp
clc
repnz
jae
sbb
add
add
stos
jmp
adc
add
inc
add
adc
in
pop
xchg
inc
add
push
push
mov
xchg
ret
inc
add
cmp
add
add
clc
repnz
jae
icebp
adc
cltd
push
push
mov
xchg
ret
cmp
add
add
push
add
jne
clc
repnz
jae
add
mov
or
add
repnz
jae
adc
pop
jmp
sahf
call
add
add
add
dec
add
clc
repnz
jae
inc
in
add
clc
repnz
jae
add
mov
mul
out
mov
clc
repnz
jae
add
int3
push
fistps
repnz
jae
add
mov
pop
sub
repnz
jae
rolb
add
fistps
mov
jae
jb
repnz
jae
enter
rolb
inc
es
add
cmp
add
clc
repnz
jae
rolb
push
clc
repnz
jae
add
add
add
add
clc
repnz
jae
add
push
sbb
icebp
fwait
cld
nop
jmp
add
add
inc
inc
sbb
clc
repnz
jae
mov
ret
clc
repnz
jae
sbb
add
jge
add
pop
mov
clc
repnz
jae
add
pop
call
clc
repnz
jae
add
jne
mov
clc
repnz
jae
add
add
lea
fwait
cld
nop
jmp
add
ret
add
xchg
nop
jae
add
add
call
clc
repnz
jae
add
mov
sub
add
push
mov
xchg
ret
pop
add
add
jbe
jnp
jecxz
add
clc
repnz
jae
icebp
addr16
sbb
nop
jmp
add
add
xor
add
mov
dec
cmpl
fwait
cld
nop
jmp
add
add
adc
push
clc
repnz
jae
imul
dec
sub
push
mov
xchg
ret
in
mov
push
mov
xchg
ret
and
clc
imul
inc
add
add
mov
loopne
cmpsl
std
mov
clc
repnz
jae
add
cltd
adc
incl
clc
repnz
jae
add
mov
pop
pop
clc
repnz
jae
add
dec
add
pcmpgtb
add
repnz
jae
add
inc
lods
jmp
clc
repnz
jae
jge
jns
pop
inc
pop
and
repnz
jae
adc
sbb
xor
jge
mov
repnz
jae
add
pop
sbb
lret
nop
jmp
inc
ss
ret
clc
fwait
cld
nop
jmp
add
add
xor
mov
mov
push
mov
xchg
ret
sbb
add
mov
clc
repnz
jae
add
add
jg
cli
mov
push
mov
xchg
ret
add
sbb
mov
push
mov
xchg
ret
add
add
in
je
clc
repnz
jae
add
mov
clc
repnz
jae
rcrl
movzwl
clc
repnz
jae
add
pop
jno
add
xor
testl
xor
add
add
xorl
clc
repnz
jae
add
icebp
cld
cmp
push
mov
xchg
ret
add
add
add
mov
xchg
ret
ss
add
add
dec
pushf
mov
clc
repnz
jae
add
adc
enter
mov
clc
repnz
jae
in
add
add
ficoms
in
sub
add
add
add
add
fwait
cld
nop
jmp
mov
add
xor
mov
inc
add
add
repnz
jae
add
cmp
into
test
fwait
cld
nop
jmp
jl
sub
ja
rep
clc
repnz
jae
and
imul
push
and
mov
cmp
fwait
cld
nop
jmp
add
add
sub
push
push
mov
xchg
ret
jg
imul
push
clc
repnz
jae
and
or
rep
push
fwait
cld
nop
jmp
sub
pop
add
pop
jne
fwait
cld
nop
jmp
jg
pop
roll
mov
push
mov
xchg
ret
pop
and
cmp
fwait
cld
nop
jmp
mov
daa
add
push
add
nop
jmp
add
add
add
add
add
add
or
add
inc
and
add
mov
clc
repnz
jae
imul
lcall
iret
inc
add
inc
add
add
push
push
mov
xchg
ret
add
xchg
or
clc
repnz
jae
in
mov
test
cld
nop
jmp
imul
jp
jbe
clc
repnz
jae
adc
push
clc
repnz
jae
sub
int3
in
add
jle
mov
clc
repnz
jae
add
pop
subl
push
mov
xchg
ret
lcall
repnz
jae
call
daa
push
add
push
push
mov
xchg
ret
add
jg
add
clc
repnz
jae
add
imul
xchg
add
add
jmp
incl
add
jge
dec
rep
push
mov
xchg
ret
mov
sub
add
push
mov
xchg
ret
and
add
cmp
test
fwait
cld
nop
jmp
add
add
or
clc
repnz
jae
add
xchg
add
add
jae
mov
mov
ljmp
jae
incb
add
cld
nop
jmp
add
rorb
mov
push
mov
xchg
ret
ret
add
clc
repnz
jae
add
or
clc
repnz
jae
dec
add
and
add
push
clc
repnz
jae
cmp
enter
cmp
pushl
push
mov
xchg
ret
jno
int3
or
sub
nop
jae
lcall
and
clc
repnz
jae
mov
add
add
add
or
add
pop
cmpsl
adc
or
stc
clc
repnz
jae
imul
inc
add
and
fwait
cld
nop
jmp
ss
call
cmp
test
repnz
jae
add
or
add
clc
repnz
jae
add
rol
cmp
clc
repnz
jae
or
mov
clc
repnz
jae
add
mov
add
clc
repnz
jae
add
jl
pop
add
add
jne
fwait
cld
nop
jmp
ss
inc
mov
in
inc
add
incb
sbb
add
rclb
fadds
xchg
ret
mov
call
cmpl
jmp
add
scas
popa
push
mov
xchg
ret
sub
add
clc
repnz
jae
add
push
mov
nop
jmp
add
sbb
and
xor
clc
repnz
jae
jl
add
cli
mov
clc
repnz
jae
add
jg
add
decl
clc
repnz
jae
add
dec
jmp
add
clc
pop
add
add
ret
cld
nop
jmp
icebp
add
add
dec
out
pushl
clc
repnz
jae
add
add
xor
out
dec
filds
add
add
add
add
rolb
lods
mov
clc
repnz
jae
call
ret
stos
clc
repnz
jae
add
pop
or
cli
call
clc
repnz
jae
mov
add
fwait
cld
nop
jmp
jns
add
lcall
rolb
xchg
ret
call
mov
repnz
jae
add
add
pop
addr16
cmpsb
add
decl
clc
repnz
jae
jns
add
mov
clc
repnz
jae
dec
add
jl
popl
dec
call
and
add
in
mov
in
into
xchg
add
sbb
add
es
xchg
lcall
incl
and
add
add
cmp
add
fwait
cld
nop
jmp
add
add
add
or
dec
add
repnz
jae
add
add
insb
ret
clc
repnz
jae
pop
daa
add
in
add
daa
add
add
adc
repnz
jae
add
add
adc
push
mov
xchg
ret
addr16
add
mov
clc
repnz
jae
pop
cltd
in
addr16
add
loop
fwait
cld
nop
jmp
mov
ss
call
cld
nop
jmp
pop
inc
clc
mov
add
add
add
add
cli
jmp
lcall
lcall
incl
inc
in
call
mov
push
lods
test
add
pop
add
sbbb
nop
jae
push
in
sbb
clc
repnz
jae
add
sbb
pop
jno
sub
adc
rcl
add
mov
inc
clc
repnz
jae
xchg
cltd
dec
jns
mov
jge
add
xbegin
jno
lcall
sub
dec
shr
clc
repnz
jae
mov
add
pop
push
mov
xchg
ret
add
add
int3
add
mov
fwait
cld
nop
jmp
adc
ss
enter
jmp
mov
mov
add
add
xor
clc
repnz
jae
pop
incb
add
add
and
fwait
cld
nop
jmp
add
jns
mov
mov
cld
nop
jmp
add
dec
add
add
call
cmpsl
loopne
add
add
sbb
dec
jo
lahf
push
clc
repnz
jae
add
dec
add
mov
nop
jae
pop
add
ret
add
cmpl
fwait
cld
nop
jmp
pop
adc
clc
add
add
aad
xrelease
sarl
clc
repnz
jae
dec
xchg
in
add
jno
call
clc
repnz
jae
add
and
insl
and
push
mov
xchg
ret
ffreep
add
ret
xchg
xchg
mov
insl
and
fwait
cld
nop
jmp
add
sub
inc
fistl
repnz
jae
incb
jg
cmp
add
mov
imul
clc
repnz
jae
add
aam
cmpsb
add
testb
cmp
ret
adc
inc
add
lock
cmpl
fwait
cld
nop
jmp
add
jge
cmpl
fwait
cld
nop
jmp
sub
add
add
mov
add
mov
clc
repnz
jae
add
enter
int
push
push
mov
xchg
ret
jl
sahf
adc
jmp
and
ret
imul
adc
clc
repnz
jae
jns
sahf
add
and
repnz
jae
jg
add
enter
push
add
add
repnz
jae
adc
movzwl
push
mov
xchg
ret
pop
add
and
and
push
mov
xchg
ret
add
add
mov
pop
clc
repnz
jae
dec
sub
add
pop
pop
int3
inc
add
inc
jl
pop
add
mov
add
lods
push
clc
repnz
jae
add
imul
dec
push
push
mov
xchg
ret
adc
ss
add
add
adc
adc
mov
clc
repnz
jae
add
add
and
add
xor
clc
repnz
jae
add
add
filds
inc
mov
mov
add
ljmp
rolb
rol
loope
mov
clc
repnz
jae
inc
add
xlat
ljmp
repnz
jae
add
mov
push
and
mov
add
cli
xor
clc
repnz
jae
add
pop
clc
repnz
jae
add
in
add
pop
add
push
mov
xchg
ret
xchg
xchg
ljmp
cmp
repnz
jae
pop
int3
rolb
adc
xor
clc
repnz
jae
add
add
aaa
fwait
add
fwait
cld
nop
jmp
add
add
add
add
lcall
jmp
in
pop
clc
mov
clc
repnz
jae
add
add
pop
ja
push
les
adc
push
clc
repnz
jae
add
add
add
add
add
clc
repnz
jae
add
mov
rolb
mov
clc
repnz
jae
imul
push
and
filds
jmp
add
lcall
sub
clc
repnz
jae
add
push
clc
repnz
jae
add
jno
dec
add
add
clc
repnz
jae
enter
add
loop
pop
sub
clc
repnz
jae
rolb
mov
add
clc
repnz
jae
mov
add
fiadds
xchg
ret
mov
enter
aad
jmp
inc
cltd
inc
add
pop
add
add
add
and
push
add
jmp
adc
fwait
cld
nop
jmp
adc
fbld
mov
mov
mov
xchg
ret
add
add
iret
or
inc
add
cltd
jl
add
xchg
lcall
out
decl
pop
daa
add
movswl
fwait
cld
nop
jmp
add
jg
inc
and
loope
inc
clc
repnz
jae
pop
cltd
add
add
test
jecxz
clc
repnz
jae
add
mov
add
inc
add
xchg
call
push
adc
jns
add
add
mov
add
inc
clc
repnz
jae
ret
add
rorl
or
clc
repnz
jae
add
add
clc
repnz
jae
mov
mov
cltd
and
clc
repnz
jae
add
sub
jno
mov
clc
repnz
jae
in
and
add
add
imul
incl
mov
cld
and
clc
repnz
jae
add
sbb
repz
repnz
jae
fistps
add
sub
push
push
mov
xchg
ret
jns
add
testb
add
sub
data16
inc
add
add
add
subl
clc
repnz
jae
pop
pop
xchg
clc
add
imul
clc
repnz
jae
call
add
or
nop
jae
xchg
add
add
inc
add
insb
add
fwait
cld
nop
jmp
add
jno
add
add
sbb
nop
jae
sahf
jl
inc
adc
pop
mov
repnz
jae
sbb
clc
ljmp
and
inc
add
xchg
sub
add
mov
clc
repnz
jae
add
add
add
cmp
add
add
repnz
jae
add
fs
add
adc
jo
and
nop
jmp
add
add
ret
add
jmp
add
jno
call
pop
stos
add
push
mov
xchg
ret
sub
add
pushl
push
mov
xchg
ret
add
int3
add
push
mov
push
mov
xchg
ret
jge
add
xor
mov
fwait
cld
nop
jmp
sahf
adc
xchg
enter
repnz
jae
xchg
add
add
call
nop
jae
ss
add
add
clc
repnz
jae
pop
add
add
call
clc
repnz
jae
adc
mov
add
mov
push
mov
xchg
ret
add
in
push
clc
repnz
jae
add
in
add
add
add
mov
mov
xchg
ret
add
sbb
mov
lahf
into
inc
add
inc
add
add
add
repz
incl
jns
xchg
adc
add
add
inc
ss
clc
repnz
jae
and
add
add
push
mov
xchg
ret
mov
adc
mov
add
clc
repnz
jae
add
add
add
mov
cmp
mov
jmp
faddl
out
icebp
fisttpl
jmp
imul
add
pop
xor
clc
repnz
jae
pop
pop
add
add
add
nop
jmp
pop
adc
jl
cmc
adc
in
sti
add
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
add
mov
mov
clc
repnz
jae
adc
aas
and
fwait
cld
nop
jmp
sahf
jl
and
dec
add
icebp
add
add
push
pop
mull
add
sti
mov
clc
repnz
jae
add
dec
filds
jns
mov
push
mov
xchg
ret
add
add
add
mov
das
ret
fsubp
add
mov
jp
or
stos
movl
cmp
xlat
mov
sbb
add
les
add
mov
pop
pop
cwtl
mov
mov
add
add
jecxz
add
daa
insb
pop
push
add
sbb
add
xor
and
fldl
lahf
pop
aas
test
xlat
mov
cmp
add
mov
add
mov
cmp
in
out
iret
ljmp
mov
out
inc
add
add
xchg
push
add
add
add
scas
pop
add
aam
out
stos
add
mov
cmpsl
fwait
imul
lods
sub
sub
jne
push
add
mov
shll
fnstsw
add
call
add
inc
add
lds
fstps
or
inc
add
add
pop
add
pop
movsl
decl
insl
lock
push
add
repnz
and
lret
leave
add
push
xlat
outsl
repnz
cmpsl
les
stc
outsl
scas
add
lahf
inc
add
dec
dec
and
mov
add
or
pop
xchg
add
sub
jnp
add
pop
cmp
jo
sbb
stos
push
add
call
popa
mov
leave
push
or
push
dec
xchg
push
push
iret
nop
add
push
add
data16
and
mov
fwait
das
in
fsubs
add
jns
lret
add
cwtl
shll
or
and
mov
add
out
dec
mov
mov
add
sub
test
xchg
shl
add
add
fprem1
xchg
mov
cwtl
dec
sahf
int
mov
add
xchg
inc
pop
bound
mov
xchg
add
jl
cltd
rolb
loope
testl
and
mov
addb
hlt
add
fildll
mov
add
mov
add
cmp
lret
mov
add
add
inc
cmp
cmc
daa
adc
push
add
rcrl
add
pop
cmp
mov
hlt
add
add
push
add
ret
pushf
repz
jecxz
add
mov
adc
pop
stc
sub
mov
repz
aas
inc
add
add
push
cmp
add
loopne
xor
lods
mov
mov
clc
push
add
add
push
add
add
call
jae
add
movb
pop
mov
add
push
cmpsl
rolb
inc
add
test
add
call
mov
in
scas
ljmp
inc
inc
in
and
mov
or
mov
add
add
pop
mov
mov
pop
ds
fstpt
sbb
into
add
mov
cwtl
xchg
add
fisubl
add
lret
push
in
test
add
insl
icebp
faddl
ds
clc
pop
adc
aam
mov
pushf
pop
and
movl
add
xchg
add
push
inc
add
fistpl
mov
mov
add
mov
js
add
mov
subl
add
test
or
sbb
out
dec
addb
add
movb
add
pop
xchg
lods
loop
lcall
inc
inc
add
daa
inc
sbb
cltd
lret
sbb
cmp
cmp
sbb
mov
outsb
negl
add
mov
insl
push
add
push
add
sbb
repnz
repz
pop
loopne
sub
faddl
inc
movb
add
clc
xor
xlat
jmp
int
dec
icebp
idiv
lahf
rolb
xor
add
or
jle
push
add
inc
int
add
enter
add
add
push
pop
dec
sbb
add
loop
cs
aad
push
add
add
mov
movb
push
test
mov
xchg
add
mov
add
idivl
pop
mov
inc
loop
pop
flds
add
inc
add
cwtl
out
lret
rolb
mov
fildll
mov
sbbl
ret
scas
jns
adc
xchg
add
mov
fistl
add
adc
pop
aaa
das
maskmovq
mull
push
add
or
loopne
mov
test
sti
xchg
je
hlt
add
add
push
add
add
pop
mov
push
int3
sub
add
mov
inc
add
push
add
mov
dec
mov
add
jb
imul
adc
rorl
mov
sahf
loopne
test
dec
xor
ja
stos
jecxz
mov
add
mov
cmpl
adc
add
xchg
in
xchg
xchg
add
rolb
lods
gs
sbb
mov
addr16
pop
in
clc
add
das
or
popa
sub
adc
fldenv
add
add
lret
inc
pop
rolb
fdivrl
jae
add
daa
or
add
add
mov
or
test
sbb
push
mov
xchg
add
add
or
xchg
add
cmc
insl
call
hlt
add
add
pop
mov
mov
popa
dec
or
mov
ljmp
mov
add
add
adc
mov
cmc
addb
add
mov
decb
add
add
out
mov
pop
pop
mov
add
cwtl
test
pop
mov
cs
addr16
cmp
lock
mov
push
lods
pop
sbb
add
bound
mov
mov
pop
add
add
xor
dec
movb
xor
test
push
add
imul
mov
pop
inc
add
add
add
add
rolb
sbb
mov
sti
add
mov
add
add
std
les
cmpsl
pop
mov
adc
add
xor
decl
add
pop
cmpsl
mov
addb
jne
mov
mov
andl
nop
add
fadds
jb
data16
popf
fsubs
jp
out
div
pslld
mov
push
add
mov
mov
pushf
jbe
push
sbb
add
and
add
mov
pop
push
push
add
mov
add
add
jno
adc
leave
ja
mov
add
lock
cmp
add
pushf
adc
add
jno
add
push
ret
loopne
jns
add
add
movb
xchg
mov
sbb
scas
sbb
add
sbb
add
lea
pop
int3
jbe
jnp
push
add
mov
add
mov
add
add
roll
mov
adc
mov
inc
add
mov
add
movsl
cmp
loop
cs
dec
mov
call
add
add
xor
add
or
jp
sbb
add
call
lods
xor
mov
clc
sahf
xchg
add
jl
xor
add
hlt
add
mov
jb
fldenv
int
call
add
add
scas
mov
repz
mov
jle
add
jg
add
cwtl
xor
in
push
add
pop
push
orl
repnz
and
adc
ret
nop
add
cmp
aaa
mov
or
xchg
add
fwait
push
add
add
push
add
fsub
add
add
add
in
add
push
sti
pop
add
dec
cmp
test
int3
fidivl
mov
stc
sbb
add
fisttpll
pushl
add
pop
mov
int
stos
inc
add
cmp
add
push
lods
sub
jmp
push
aad
sub
push
and
jns
int
add
mov
addb
out
fisttpll
xlat
pop
ljmp
mov
sti
lcall
add
add
adc
adc
and
mov
lahf
lds
cmp
insb
loopew
add
dec
test
add
sub
adc
pop
test
cmc
aam
push
add
add
cli
and
and
call
and
insl
das
jmp
mov
call
add
add
inc
cmp
cmp
add
mov
stos
movb
fbstp
add
cs
pop
dec
cmp
imul
sbb
sub
cld
into
dec
cmp
add
in
mov
mov
sub
pop
add
mov
jmp
and
and
ret
add
adc
cmp
icebp
das
in
cli
arpl
add
rolb
adc
add
mov
sahf
mov
jne
sbb
mov
or
jmp
insl
aaa
sub
add
or
add
sbb
or
add
inc
add
ret
addr16
popf
das
cmpsl
cmp
mov
push
lret
or
push
add
enter
mov
rolb
data16
add
stos
lock
sbb
add
sti
sbb
into
filds
rolb
cs
push
call
scas
lds
out
lods
xlat
sbb
add
mov
arpl
mov
adc
add
add
in
out
adc
dec
jp
add
and
mov
add
movsb
add
call
sti
addb
mov
outsb
addr16
add
bound
mov
jae
loopne
push
xor
imul
pop
std
insl
pop
xchg
add
aad
sub
push
lret
cmp
pop
add
int3
dec
xchg
add
or
mov
adc
cwtl
jo
push
add
mov
mov
add
push
iret
lock
add
add
pop
les
stos
add
mov
faddl
add
mov
icebp
stos
scas
imul
dec
and
mov
add
add
add
push
mov
mov
stos
sub
add
add
out
jmp
rolb
mov
clc
jae
add
add
xor
mov
xchg
popf
loop
or
add
and
mov
add
out
into
sub
inc
mov
ljmp
add
push
add
add
mov
inc
add
mov
add
add
and
sub
pusha
add
add
push
insb
nop
add
add
add
ds
xorl
sahf
cmp
clc
cmp
adc
test
push
add
add
daa
dec
xchg
add
in
dec
aad
addr16
jns
add
add
into
into
scas
insb
push
add
or
add
call
pop
rorl
add
add
inc
add
add
or
sahf
ret
rcll
inc
pop
xor
int
add
hlt
add
cmpsb
add
lret
ja
pushf
jb
jne
fsubs
add
mov
add
lods
outsl
mov
pop
decl
test
fbstp
and
mov
mov
mov
xchg
int3
ret
xchg
add
jmp
or
add
jecxz
add
rcll
enter
jae
push
sub
add
add
inc
adc
add
or
dec
iret
and
lret
pop
add
addb
mov
jl
mov
aas
xor
shrl
cmp
jae
fdivs
push
add
add
sbb
insl
mov
mov
add
movb
mov
lods
push
adc
add
add
mov
stos
mov
sbb
add
out
add
xor
jo
icebp
ret
das
xchg
rolb
popa
movsb
add
add
and
inc
inc
pop
les
fs
mov
ret
xchg
add
loop
jbe
lcall
add
xchg
jmp
aaa
or
xchg
add
add
int
add
sti
enter
mov
jmp
int
das
add
mov
add
sub
notl
add
add
pop
xor
out
push
add
fiadds
out
and
mov
dec
ret
add
inc
popf
arpl
mov
in
or
adc
adcl
add
sub
mov
das
or
sbb
insl
push
sub
daa
aaa
addb
jno
mov
cmp
nop
add
out
jp
jmp
mov
pop
xchg
add
insl
mov
dec
push
insb
inc
add
add
mov
test
negl
outsb
xor
xor
jge
das
ds
add
mov
add
iret
mov
add
cmp
and
sbb
popf
pop
dec
sbb
or
add
add
inc
push
add
stos
dec
scas
scas
scas
popf
arpl
add
or
add
gs
lock
daa
roll
imul
xchg
add
addr16
add
adc
hlt
add
xchg
add
xor
mov
add
repz
xchg
add
add
jne
rolb
dec
test
cmp
sub
adc
xor
sbb
or
add
test
je
jae
add
jno
add
inc
stc
jmp
aad
add
add
or
lret
movsb
add
cmpsb
add
or
jne
insl
cmp
xlat
bound
mov
or
pusha
add
popa
sub
enter
pop
bound
mov
add
mov
mov
sub
hlt
add
bound
mov
add
je
pop
and
mov
add
out
in
cmp
nop
add
jg
xchg
sub
dec
ja
add
leave
int
add
test
dec
add
dec
xor
inc
mov
cltd
int
sub
add
jp
test
inc
orl
fstl
add
jae
dec
and
addb
cmpsb
add
add
lahf
fstpl
mov
in
xchg
lock
cmpsb
add
das
push
add
cs
lea
mov
pushf
mov
cmc
je
jmp
ret
clc
stc
dec
scas
lret
push
add
push
les
add
movb
add
addr16
jmp
into
iret
test
add
jno
les
xor
jecxz
jg
lcall
aad
aam
inc
out
xchg
sbb
lret
lret
out
inc
sahf
mov
add
push
add
movsb
add
add
add
fwait
xchg
add
add
dec
pop
and
rolb
imul
add
add
mov
add
rcrl
ja
add
add
sbb
adc
in
sbb
cli
push
jne
add
rolb
mov
das
lret
mov
add
imul
arpl
add
xchg
dec
arpl
adc
daa
sub
fsubp
add
add
movsb
add
in
mov
ret
add
xchg
sbb
add
add
iret
movsb
add
sub
test
sti
inc
add
adcl
inc
add
adc
lcall
cmp
push
cmc
test
add
sub
imul
popa
imul
add
add
and
inc
into
scas
fists
fs
xor
testb
fwait
xchg
or
add
ljmp
dec
hlt
add
add
mov
add
out
mov
std
inc
add
and
mov
add
add
add
add
and
outsl
lret
addb
popf
cltd
icebp
add
arpl
mov
add
add
add
add
add
add
add
pusha
add
add
adc
stos
mov
fisttpl
add
or
add
add
xor
idivl
jmp
leave
mov
dec
dec
push
movsb
add
add
jmp
add
add
xchg
lods
insb
add
notl
addb
insb
jle
push
popa
mov
in
insl
pop
lret
xchg
jge
cmpsb
add
mov
inc
xchg
add
add
xor
xor
add
add
jg
add
loop
or
add
jne
add
mov
loop
mov
xor
sub
xor
mov
add
pop
push
insb
sbb
sbb
lea
cmp
leave
push
gs
jle
jo
fldcw
outsl
mov
add
inc
add
jg
xor
and
cmp
mov
push
sti
or
add
xlat
mov
fadds
add
and
mov
addb
pop
mov
or
out
add
add
loope
mov
add
adc
loopne
mov
loope
cwtl
pusha
add
push
imul
adc
int
jmp
add
sub
mov
add
lret
sahf
rol
jno
add
add
rolb
cmpsl
insb
xor
lods
les
lahf
testl
jbe
test
xchg
push
add
add
mov
jnp
shl
add
psubusw
add
add
add
sbb
add
mov
jl
or
add
movsb
add
push
or
fldcw
addb
add
xor
push
lods
jo
data16
add
cmp
add
jp
add
dec
mov
mov
jmp
and
add
mov
cltd
add
int
std
sbb
scas
jae
xor
fisttpll
sub
add
test
and
add
sbb
in
ret
add
arpl
stos
mov
add
orl
jns
lock
cli
jo
push
add
sub
push
mov
add
clc
xor
add
mov
xchg
in
fcom
sbb
in
mov
nop
add
add
mov
out
push
jns
jg
mov
add
mov
jo
push
rolb
ret
add
cltd
sti
daa
fadds
add
adc
inc
mov
add
mov
mov
sub
add
add
mov
add
sbb
mov
cld
adc
mov
dec
push
add
mov
jns
adc
repnz
aaa
enter
push
add
pop
xor
mov
xor
and
add
mov
add
xchg
in
mov
sbb
cld
xor
add
sub
add
cmp
add
xchg
add
sub
out
call
pushf
jae
mov
scas
les
inc
bound
mov
aaa
enter
or
popa
push
add
sbb
mov
inc
add
pop
xchg
add
push
add
imul
in
add
mov
inc
stc
pusha
add
sbb
dec
push
mov
inc
add
aas
push
add
cmp
dec
pop
jecxz
insb
nop
add
test
or
aas
cmp
mov
cmpsl
mov
jne
mov
add
fdivr
pop
jbe
xchg
add
inc
add
in
adc
add
mov
rcll
add
and
mov
add
inc
jmp
push
add
mov
adc
lcall
mov
stos
nop
add
push
std
js
add
xor
add
dec
in
push
add
bound
mov
aad
test
cs
ss
inc
imul
or
std
dec
inc
stc
mov
sti
mov
add
and
add
inc
add
jle
push
xchg
jno
add
mov
icebp
cmp
xchg
add
add
xlat
loop
test
add
add
ljmp
loope
outsb
addb
out
inc
add
mov
fwait
push
add
cwtl
test
add
mov
add
add
lock
cmpsb
add
adc
push
add
cmpsl
rcl
add
pop
adc
sub
push
add
je
cmp
mov
mov
dec
testb
add
data16
push
add
add
fists
rorl
xchg
push
add
add
add
mov
inc
add
sub
dec
xchg
loope
mov
repnz
lret
xor
add
dec
jnp
mov
add
dec
addb
stos
inc
add
daa
sbb
push
add
roll
test
ss
pop
sbb
mov
add
or
add
repnz
xor
cmpsl
push
test
or
pop
pop
jne
stos
fs
or
jb
cmp
add
mov
adc
xor
mov
pop
pusha
add
out
scas
hlt
add
mov
movsb
add
add
add
push
add
jmp
fiadds
add
add
add
add
cmp
push
add
sbb
test
mov
add
add
mov
add
mov
and
mov
add
add
cmp
fdivrs
sahf
data16
dec
cmc
pop
fists
add
fnstcw
enter
add
lcall
jp
scas
xor
das
jg
xchg
cmp
add
add
addb
pop
inc
je
ljmp
inc
testb
mov
push
add
jl
cltd
in
xchg
add
mov
mov
adc
ljmp
fisubrl
jae
pop
pop
aad
add
pusha
add
js
add
add
test
cmp
xchg
nop
add
push
add
dec
xor
insl
adc
dec
daa
aad
add
pop
call
mov
in
int
inc
add
add
inc
ljmp
add
add
sarl
rcrl
dec
adc
outsl
add
add
imul
loop
sti
sarl
movsb
add
mov
jmp
lods
jnp
xor
mov
pop
cmpsl
sub
rcl
fs
add
lret
mov
xchg
add
iret
mov
add
add
jle
add
dec
dec
inc
add
sbb
mov
je
inc
add
xor
dec
adc
inc
add
add
js,pt
add
lods
sub
xchg
sbb
add
add
xchg
add
iret
movsb
add
xchg
add
adc
mov
add
jl
mov
cs
imul
decb
mov
add
inc
scas
aaa
mov
into
cmpsb
add
add
jb
mov
addr16
xor
imul
int
repz
push
add
stos
sub
add
stos
cmpsl
movsl
fsubs
add
imul
pop
xchg
fisttpll
mov
add
sbb
data16
add
add
add
add
xor
out
xor
popa
xor
hlt
add
mov
push
add
add
mov
loop
pop
cmp
add
lock
add
adc
dec
mov
jecxz
repnz
add
and
mov
mov
add
cwtl
or
vcomisd
inc
add
icebp
cs
pusha
add
les
rolb
and
mov
add
rorl
mov
aas
testb
xlat
cs
add
int3
lods
dec
inc
js
add
movb
push
add
add
add
in
inc
stos
popf
push
mov
les
in
dec
cld
xchg
push
add
ds
fiaddl
lahf
ja
out
pop
pop
repz
sub
cmc
mov
add
add
addr16
sbb
in
xor
add
add
in
inc
data16
ret
inc
mov
add
pop
std
jecxz
fstpl
mov
add
mov
sub
cld
imul
mov
repz
cs
mov
fnsave
sbb
add
into
mov
inc
pop
test
js
add
mov
addb
sbb
add
mov
add
add
add
lret
js
add
sub
sub
shrl
inc
or
es
inc
scas
or
xchg
xchg
dec
fstp
fcomip
inc
add
fsubrs
fwait
testb
loopne
xor
add
aam
lods
jns
push
push
add
xchg
add
movsl
jg
add
shll
cmp
jmp
aas
lahf
aaa
dec
sbb
add
mov
test
pushf
mov
test
fistl
rcrl
fucomp
leave
jne
mov
cmp
add
ja
add
jp
add
push
add
xchg
add
inc
add
leave
mov
mov
mov
std
xor
push
mov
add
lahf
or
fsts
xchg
stos
jo
subl
dec
fiaddl
addb
xchg
inc
jecxz
pop
repnz
cmp
add
scas
cmp
cld
inc
add
push
gs
add
mov
fstps
pop
add
inc
add
push
jb
loopne
sbbl
add
add
add
add
and
pop
loopne
add
lret
add
add
sarl
cmp
cmp
scas
mov
sub
shll
jo
int3
stos
xchg
add
add
or
xor
mov
mov
lret
js
add
sahf
lods
jecxz
xor
add
add
push
xchg
add
xchg
mov
add
cmp
pop
rcll
xor
cmpl
xchg
push
mov
add
lret
addb
add
popf
add
add
mov
inc
pop
jl
add
mov
xor
cmpsl
out
and
mov
mov
xchg
ret
push
imul
add
sbb
testb
add
mov
imul
add
add
adc
mov
ja
mov
mov
add
add
mov
cmc
lds
mov
fnsave
dec
bound
mov
xchg
test
add
daa
and
mov
inc
add
mov
in
cs
cwtl
push
xchg
pop
cmp
xor
loopne
stos
adc
mov
add
cwtl
cmpsb
add
add
sbb
push
add
add
add
shll
jecxz
add
add
xor
cltd
lret
mov
cli
mov
in
jo
dec
test
mov
jns
add
add
add
mov
mov
je
inc
les
cltd
pop
add
sub
mov
mov
xchg
les
dec
mov
fisubrs
xor
int3
pop
mov
lock
add
mov
stos
or
mov
testb
lret
cmp
jns
adc
add
add
xor
add
rolb
jne
movb
add
fwait
movb
add
sahf
in
sbb
bound
mov
xor
cmpsl
lahf
push
cmp
outsl
xchg
cltd
addb
add
jg
add
add
sbb
add
jmp
daa
dec
jg
push
int3
add
mov
mov
test
movsl
ds
cmp
add
add
jmp
sti
ljmp
jmp
fstps
cwtl
add
jae
xor
and
loopne
cmp
push
add
enter
cmp
add
in
out
xchg
add
xlat
inc
add
adc
mov
mov
insl
pop
sbb
mov
add
add
hlt
add
mov
adc
mov
mov
pushf
sahf
decb
popa
add
pop
aaa
insb
arpl
add
mov
imul
jo
addr16
popa
cmp
add
rolb
test
icebp
pop
cmp
add
movsb
add
pusha
add
fcompl
mov
hlt
add
ret
addb
xchg
aam
sbbl
sbb
add
add
mov
adc
mov
jmp
in
mov
push
dec
jle
add
xchg
add
dec
inc
clc
pop
mov
add
pop
in
dec
rorl
test
int3
loopne
and
mov
add
mov
add
outsb
xchg
mov
sub
add
mov
xorl
out
fistl
jle
movl
jmp
aam
xchg
cmp
pop
pop
pop
xlat
mov
adc
add
cmpsl
stos
cmp
xchg
add
and
add
push
add
jge
xchg
or
data16
inc
add
stc
cli
iret
aas
mov
add
add
lret
imul
dec
jnp
lods
sbb
das
popf
ss
add
add
mov
icebp
sarl
imul
mov
cli
outsl
xchg
add
mov
mov
add
loop
enter
xlat
cwtl
hlt
add
xor
push
add
mov
add
rolb
fists
xlat
rorl
add
add
add
js
jecxz
int3
jbe
mov
stos
mov
nop
add
add
add
add
lret
add
pusha
add
mov
outsb
inc
add
jl
jae
ret
pusha
add
add
mov
test
and
mov
add
dec
mov
xor
icebp
dec
dec
pushf
mov
add
add
mull
add
aaa
stc
cmpsl
mov
add
xchg
lret
add
mov
add
add
cltd
fldenv
mov
xchg
les
pop
lock
jecxz
inc
jb
sub
std
ja
sub
es
xchg
in
test
mov
cmp
daa
aad
mov
mov
test
add
dec
dec
pop
pop
adc
sub
mov
loop
cmc
jns
dec
push
add
rol
xchg
add
mov
sbb
jp
add
or
iret
stos
sbb
add
pushf
or
add
push
add
lods
pop
sbb
ja
add
and
pushf
lea
mov
and
add
xchg
add
pop
cmp
addb
inc
add
mov
pop
cmp
inc
inc
add
out
hlt
add
iret
stos
aaa
jge
stc
push
je
lods
aas
rolb
mov
fdiv
lods
jecxz
lods
adc
sbb
mov
pop
cmpsb
add
arpl
or
cmp
repz
add
add
add
call
xor
into
insb
jnp
add
add
test
add
test
add
dec
pop
cmp
add
lods
mov
out
mov
rolb
or
in
pop
cli
xorl
cltd
jmp
add
cmpl
cli
cmove
add
mov
add
mov
xchg
xchg
cltd
inc
cmp
imul
inc
lcall
add
add
jp
cmp
popa
sarl
insl
mov
rolb
jmp
icebp
cli
and
das
pop
inc
add
and
mov
mov
pushf
lods
adc
xor
add
adc
pop
icebp
adc
add
add
cmp
mov
sahf
call
and
incl
mov
inc
add
push
add
add
imul
add
out
or
pop
movb
pop
mov
adc
dec
pusha
add
add
dec
or
add
add
fchs
add
arpl
out
inc
imul
out
cmp
gs
add
idiv
add
add
das
sub
add
add
xchg
add
mov
push
add
lock
add
add
arpl
push
add
dec
push
add
add
shll
xor
aad
sbb
mov
xchg
ret
add
stc
ret
jns
add
mov
add
add
mov
jns
add
or
aas
sub
je
mov
add
test
mov
data16
inc
xchg
add
push
pop
push
xchg
add
pushf
jg
add
xchg
add
test
idivl
pop
lods
scas
addr16
add
add
mov
mov
add
loop
int
lret
mov
add
mov
or
cmp
and
add
addb
imul
inc
add
jb
cmp
add
cwtl
lock
add
fnstsw
bound
mov
add
mov
add
add
rolb
es
sub
add
add
adc
ret
pop
and
add
loopne
inc
pop
push
add
xchg
loope
repz
xchg
add
into
xchg
xchg
mov
add
outsb
hlt
add
mov
lods
xlat
rolb
xchg
or
jl
add
add
addr16
add
lcall
add
xor
add
insl
sub
inc
call
mov
adc
rcl
cmp
mov
and
rolb
sti
inc
movb
repz
cmp
shll
in
repz
jecxz,pn
popa
loopne
and
cmp
in
out
pop
pop
and
add
mov
add
test
add
add
int
dec
and
pop
mov
adc
push
add
and
mov
iret
shrl
xlat
lods
xor
jne
add
adc
adc
cmp
jns
cltd
xor
mov
push
je
jbe
lods
out
cmpsl
arpl
daa
dec
push
rep
dec
into
cmpsb
add
add
or
cmp
data16
add
add
mov
dec
rolb
mov
mov
add
add
add
add
add
pop
repnz
add
or
mov
cmpsb
add
pop
add
mov
icebp
add
mov
js
add
adc
pop
cld
mov
mov
add
mov
lea
sbb
stos
rolb
mov
lahf
xchg
pop
adc
adc
mov
push
add
nop
add
mov
sbb
mov
rorl
dec
fwait
jbe
mov
lret
add
add
mov
les
aas
jp
add
add
and
fcompl
xor
ja
cli
aad
add
dec
mov
xchg
add
add
xor
xchg
add
or
adc
add
loop
dec
dec
movsb
add
add
push
popf
xchg
xor
loope
jne
add
xchg
add
dec
test
mov
out
out
add
out
pop
xchg
orl
add
pop
js
hlt
add
mov
sbb
cmp
movb
test
leave
and
arpl
sahf
sbbl
mov
lea
stos
loope
cli
push
gs
add
add
add
imul
mov
fistps
mov
data16
add
mov
add
jb
jp
push
add
xor
mov
pop
push
add
iret
push
bound
mov
insb
mov
mov
jmp
jno
push
add
pop
movsl
in
inc
add
mov
add
lods
pop
pop
add
mov
add
mov
sub
mov
lret
add
jns
jecxz
add
fstl
dec
jae
and
push
sbb
push
add
or
mov
sub
sbb
or
aam
les
mov
jl
stos
data16
add
xchg
push
push
pop
in
mov
xor
addb
js
add
mov
in
subl
add
mov
lcall
rolb
fsubr
cld
adc
aaa
jnp
mov
pop
mov
leave
inc
add
add
add
mov
add
cmp
xchg
push
or
add
lods
and
fsubs
test
loop
mov
ret
push
add
aad
dec
jae
add
add
aaa
mov
fidivrl
cmp
mov
lea
mov
add
add
rolb
or
dec
addr16
iret
sub
add
addb
adc
mov
decl
xchg
add
xchg
mov
inc
add
inc
loopne
push
add
xchg
fwait
imul
xor
mov
cmp
dec
imul
stos
and
mov
fsubl
add
mov
test
mov
and
jge
add
movsb
add
inc
add
adc
inc
pop
lret
mov
push
mov
int3
popf
ljmp
push
add
nop
add
pop
call
add
cmp
ret
or
add
mov
pop
push
and
mov
jnp
adc
aam
cmc
mov
xchg
xchg
imul
rolb
mov
fs
mov
int3
enter
pop
lcall
add
or
add
add
add
inc
mov
add
or
add
add
iret
xchg
add
rolb
add
nop
add
loop
dec
testl
pop
or
mov
add
leave
jbe
out
or
mov
adc
add
imul
adc
cld
gs
add
inc
in
add
stos
into
stos
fndisi(8087
or
add
lea
add
add
lods
adc
sub
out
add
cltd
scas
out
xchg
add
add
leave
jae
inc
add
add
imul
mov
fimuls
add
lret
test
add
mov
fdivrs
add
add
and
daa
cltd
add
add
jb
out
imul
add
pop
imul
lods
jmp
add
test
add
adc
add
add
ljmp
mov
lods
dec
add
cs
aas
jge
sbb
add
add
or
lahf
add
push
add
add
mov
add
pop
cmp
add
aas
aad
add
add
push
push
and
call
sub
add
add
mov
inc
or
jle
add
mov
nop
add
jecxz
xchg
add
mov
pop
xchg
xor
test
int3
push
scas
rorl
add
xor
add
lret
push
mov
add
insl
push
add
add
push
add
add
sbb
add
xor
enter
and
mov
jecxz
or
rolb
test
adc
inc
add
fstpl
ds
push
mov
or
jne
add
sbb
add
mov
mov
add
xchg
xchg
add
mov
lods
push
mov
add
mov
add
pop
mov
add
xchg
ret
int3
fwait
or
push
loop
xchg
add
add
add
mov
imul
in
xchg
add
add
add
push
push
cld
hlt
add
add
je
popa
pop
inc
jae
inc
add
jl
icebp
cmpl
push
xor
out
sbb
add
addl
fisttps
data16
mov
add
adc
mov
sbb
rolb
dec
push
add
inc
and
sahf
mov
mov
std
cltd
loopne
in
adc
add
aam
stos
lahf
add
lcall
aas
xchg
cwtl
mov
cmc
mov
add
inc
add
mov
out
jo
mov
jo
ret
data16
jle
push
inc
add
or
clc
clc
add
mov
decb
inc
add
push
pop
hlt
add
std
dec
xor
pop
mull
mov
add
cmpsl
testb
jne
add
sbb
add
mov
pop
into
push
rcl
daa
adc
add
add
adc
paddsb
testb
mov
ret
lods
cli
sbb
mov
nop
add
and
into
fwait
pop
lret
dec
lret
xchg
add
dec
pop
and
mov
cmc
inc
add
jmp
add
rolb
jg
cmp
aas
inc
add
cmpsl
test
les
lea
push
mov
add
js
add
add
add
cmpsb
add
lock
stos
shll
add
mov
cli
rolb
bound
mov
cmp
cs
add
add
arpl
add
add
mov
test
pusha
add
pop
fnstenv
in
mov
mov
leave
arpl
add
or
movb
je
movsl
fnstsw
sub
cmp
add
loop
xchg
shr
sahf
hlt
add
pop
jb
push
adc
dec
out
inc
add
mov
out
inc
add
in
aad
pop
fdivs
cmp
je
or
pop
push
lcall
add
add
mov
mov
pop
add
mov
add
adc
jp
add
cmp
add
add
fimull
dec
iret
push
add
inc
add
add
in
sbb
mov
fisubs
pop
dec
add
dec
popa
pop
frstor
add
repnz
mov
xchg
cmp
add
lret
push
add
imul
dec
adc
dec
stos
or
add
add
add
and
sbb
aad
sub
lods
adc
scas
lret
pop
insl
pop
and
mov
add
in
xor
or
push
add
and
mov
stos
xchg
or
pop
cmp
mov
cwtl
stos
lret
sbb
pop
add
mov
out
cmc
xor
pop
outsl
cli
es
lret
push
mov
addb
lods
pop
mov
push
add
sub
mov
add
and
inc
add
popa
cltd
inc
int3
inc
add
addl
and
repz
fcmovb
add
mov
fstpl
mov
inc
add
in
add
mov
popf
mov
add
xor
test
add
add
or
out
into
sub
add
add
popa
rolb
fcmovnb
jge
xor
test
ret
scas
sub
add
jecxz
xchg
jns
rcr
pop
mov
mov
stc
icebp
xchg
add
add
add
add
add
xor
pop
ljmp
mov
nop
add
dec
sbb
dec
sub
cmp
cmpsb
add
lcall
or
add
add
mov
sub
add
outsb
mov
mov
insb
mov
call
add
or
add
neg
mov
add
sahf
or
cld
addb
int3
movb
and
xor
add
add
xor
negl
xor
sub
je
lods
mov
xlat
jnp
popf
mov
add
inc
cmpsb
add
add
scas
mov
add
add
pop
lcall
mov
pusha
add
test
sbb
outsb
out
movb
add
jns
add
add
jecxz
add
push
add
inc
add
nop
add
xchg
cmpsl
push
sub
jp
lods
jge
lret
mov
mov
test
dec
sbb
ljmp
add
or
xchg
mov
shr
loope
add
push
add
sbb
add
repnz
mov
bound
mov
js
insl
dec
mov
lahf
mov
push
add
cs
iret
pop
adc
inc
add
add
add
call
bound
mov
and
mov
jge
jp
in
data16
das
mov
add
movups
sub
pop
add
test
lods
sbb
test
cmp
das
lods
int
pusha
add
fwait
dec
fsts
push
push
add
scas
and
lret
add
add
dec
popl
sbb
adc
xchg
add
adc
sbb
dec
loopne
jp
test
fldenv
daa
mov
loope
pop
inc
add
and
lret
pop
movb
cs
fwait
adc
cs
jp
sahf
in
and
mov
imul
je
lahf
adc
mov
add
mov
cmpsb
add
add
push
lods
and
rol
mov
xor
add
pop
and
mov
and
fwait
aad
inc
mov
bt
xchg
and
mov
loope
add
ljmp
add
xor
sbb
sbb
sbb
bound
mov
add
mov
add
in
push
stc
aaa
xor
add
add
fpatan
sbb
xchg
fdivs
ret
aam
xchg
out
xchg
mov
mov
sbb
sub
mov
sbb
add
movsl
xor
jne
ficoms
or
push
cmp
movsl
cmpsl
or
add
lods
dec
inc
add
add
adc
insb
mov
cld
ds
xor
or
xchg
xchg
cmp
add
add
add
add
jg
dec
ja
mov
adc
push
cmpsl
rolb
sub
pop
add
enter
mov
loope
xor
add
mov
addb
sub
mov
inc
xchg
mov
icebp
jl
pushf
lret
push
xchg
add
sub
jle
dec
xchg
stos
or
add
push
add
pop
lret
mov
and
mov
add
add
addr16
fidivrs
daa
adc
mov
xor
mov
ljmp
in
fnstcw
out
pushl
push
or
xor
mov
add
mov
scas
repnz
jns
add
inc
adc
mov
jno
add
repnz
aas
lcall
loop
mov
sbb
jbe
push
or
stos
in
or
mov
rolb
rolb
mov
adc
mov
stc
or
add
add
into
sub
xchg
stc
int3
mov
add
mov
add
jb
int
adc
xchg
fnstenv
add
mov
add
icebp
mov
add
mov
out
pop
add
rolb
jae
out
lcall
mov
add
mov
add
and
mov
js
outsl
arpl
testb
mov
add
in
pop
mov
pushf
pusha
add
cmpsl
les
addb
enter
xor
rolb
sub
add
xchg
inc
add
cmp
xchg
adc
ljmp
add
mov
add
call
rcll
add
imull
add
jg
add
add
hlt
add
fld
cmpsl
int
shrl
ret
push
call
cmp
add
add
lret
cmp
rolb
dec
aad
add
cwtl
inc
mov
leave
cmpsb
add
addb
xchg
add
pop
fucomp
pop
pop
inc
adc
aad
dec
adc
das
outsb
xor
add
mov
bound
mov
add
mov
add
add
mov
aas
lock
xor
movb
call
lock
cmp
dec
cmp
and
repnz
lcall
aas
mov
add
add
jg
movb
fldt
shrl
in
aas
fbstp
jecxz
add
inc
sti
adc
add
int
sbb
add
push
add
add
add
mov
adc
fsubs
sarl
and
loop
xor
add
jb,pn
ret
mov
add
ja
add
xchg
sub
cmc
add
xorl
add
and
mov
push
and
mov
inc
loope
pop
int
add
mov
mov
or
push
popf
rolb
mov
loop
or
mov
sahf
push
or
add
sub
mov
adc
jmp
adc
jle
mov
add
add
add
hlt
add
add
add
jmp
pop
add
add
inc
add
cmp
dec
repnz
mov
mov
mov
add
mov
fidivl
add
flds
xchg
xor
pop
mov
sub
add
lret
add
mov
inc
and
nop
add
es
rolb
inc
pop
jmp
mov
push
add
dec
push
dec
test
add
ffreep
add
mov
add
ljmp
fisubrl
lahf
pop
push
add
push
add
divl
add
add
mov
cmp
lret
dec
stc
xor
sub
movsb
add
add
repz
cmpsb
add
std
out
add
in
xor
adc
add
cmp
cli
mov
popf
inc
add
outsl
sub
rolb
addb
jbe
add
mov
add
xchg
mov
xchg
mov
cmp
jb
in
cmpsl
jl
add
mov
les
sbb
mov
add
fldt
fbld
fwait
lret
inc
add
add
js
xor
xor
cmp
xlat
into
cmp
iret
sub
add
pop
nop
add
or
and
lea
test
mov
insl
call
xor
sbb
add
icebp
mov
xchg
pop
mov
pushf
mov
mov
jle
out
cmp
push
add
cmp
dec
mov
cld
aam
cmpsl
pushf
pop
mov
lods
xchg
mov
mov
in
jo
mov
xchg
add
pusha
add
add
add
adc
jb
cmpsb
add
call
jno
aam
push
jno
add
pop
das
daa
and
adc
xchg
imul
movsb
add
add
outsb
rolb
ds
lret
pop
scas
dec
xlat
mov
xchg
add
and
adc
or
add
or
mov
dec
scas
sub
out
dec
lret
addb
or
lea
icebp
std
sub
add
xor
xchg
out
in
add
pop
pushf
out
iret
adc
xor
ret
mov
mov
mov
mov
mov
mov
add
mov
sub
jl
push
cltd
mov
xchg
add
add
in
aaa
jae
add
sbb
jmp
add
arpl
out
popf
dec
xor
xor
ret
lock
sub
add
pop
lret
mov
add
add
add
mov
mov
cmpsl
stos
stc
xchg
lea
adc
ficoms
int
pop
jno
movb
mov
imul
outsl
inc
add
mov
lret
fwait
push
add
dec
out
and
push
dec
cmp
mov
dec
xor
add
sub
cmp
push
mov
sahf
adc
mov
pusha
add
add
dec
pop
mov
sbb
add
add
inc
mov
push
add
test
jmp
add
jecxz
xchg
sbb
push
mov
sbb
add
push
add
add
dec
repz
mov
lret
clc
repnz
imul
add
imul
cmpsl
jnp
add
rol
repz
into
outsl
cmp
inc
je
mov
add
add
add
add
cltd
jo
add
decb
das
mov
add
jno
add
add
adcl
add
adc
xlat
push
push
add
add
xchg
pusha
add
lds
aas
sub
cltd
incl
test
dec
popa
cmp
or
cli
push
add
es
aad
mov
mov
add
mov
add
push
add
test
jno
rolb
repz
xchg
add
call
nop
add
sub
add
cld
adc
pop
dec
xor
add
add
sbb
sub
js
add
xchg
add
lods
aaa
push
repnz
push
mov
mov
adc
testl
int
add
add
add
xor
ret
add
movsb
add
pop
sbb
add
add
lret
add
mov
cmp
add
mov
aam
out
xor
push
rolb
cltd
fadds
add
jae
mov
add
lahf
addb
add
das
loope
fldcw
mov
mov
dec
xchg
mov
or
lods
movsl
add
inc
xor
or
and
jo
add
dec
bound
mov
mov
out
adc
je
insl
js
add
testl
or
add
add
mov
add
dec
or
call
lret
add
jecxz
add
mov
lret
add
add
lds
add
add
xlat
sub
fcmovnb
add
rolb
push
add
orl
mov
jo
xchg
push
xor
push
add
imul
mov
bound
mov
add
aam
pusha
add
rolb
mov
mov
xchg
leave
mov
add
jp
pop
les
sbb
daa
loopne
push
int
jo
lcall
enter
add
add
add
cmp
outsb
sub
mov
mov
mov
add
sbb
add
sub
outsl
mov
add
add
jmp
orl
fld
add
add
or
clc
xor
bound
mov
cmp
add
xchg
xchg
add
add
loop
cmp
add
movsb
add
in
add
or
sbb
mov
add
mov
add
push
xchg
inc
add
ret
push
adc
sub
jbe
pop
dec
in
pop
test
rcll
fucom
pop
xorl
inc
add
and
outsb
push
add
loop
mov
push
xchg
ss
add
in
sbb
add
mov
xor
cmp
mov
mov
jno
int3
jb
mov
roll
mov
sub
xchg
into
jmp
stos
nop
add
mov
mov
add
add
add
add
add
cmp
fnstenv
add
jmp
mov
jae
add
inc
add
shll
xchg
xchg
and
je
mov
inc
add
repnz
addr16
add
add
add
mov
mov
data16
push
add
push
inc
add
add
and
sub
jb
les
clc
mov
add
jmp
add
sti
adc
xchg
add
cmc
mov
xchg
aad
mov
add
add
add
add
testb
movsl
cli
cmp
neg
mov
inc
lahf
jmp
rolb
mov
xchg
in
dec
aam
out
outsb
sti
mov
push
movnti
add
mov
hlt
add
loopne
int3
pop
adc
addl
das
adc
add
fstpt
cmpsb
add
pop
lods
dec
add
gs
insl
fiadds
add
mov
add
cltd
in
mov
add
mov
adc
jle
sar
outsb
push
add
mov
aas
sub
add
pop
mov
ljmp
cmpsl
popf
jp
add
add
add
xchg
inc
outsb
bound
mov
mov
rolb
dec
mov
mov
mov
outsl
and
add
jg
add
jl
add
xlat
nop
add
or
pop
and
add
mov
sbb
add
dec
jns
xor
insl
cld
fnstcw
add
ja
add
mov
adc
add
add
mov
mov
ret
add
push
add
mov
cmc
add
mov
inc
add
ja
rorl
outsl
and
cmpsb
add
mov
add
cmovl
add
pop
cmpsl
pusha
add
and
add
mov
arpl
sub
gs
imul
mov
push
xchg
and
mov
add
xchg
icebp
inc
add
add
add
push
add
test
add
add
xchg
add
ja
adc
out
cli
cld
ja
add
xor
add
jnp
std
in
movsl
int3
and
mov
add
outsb
adc
dec
add
mov
add
mov
add
add
out
mov
sub
jmp
icebp
or
cmp
inc
xor
add
mov
push
add
push
sub
mov
stc
mov
push
add
and
mov
jnp
pop
jle
add
ja
aam
mov
mov
add
inc
add
add
add
mov
cmp
push
add
and
mov
jns
int3
mov
mov
test
add
je
loop
je
pushl
add
call
add
lcall
dec
and
insl
inc
add
add
add
loop
adc
mov
add
mov
push
insb
inc
add
roll
iret
cmpsb
add
add
jg
call
jo
pop
cmp
add
inc
add
mov
add
add
mov
sti
pop
arpl
mov
loop
scas
adc
pop
adc
adc
and
loope
inc
add
lret
add
push
add
arpl
in
pusha
add
add
add
stos
xchg
test
mov
add
lahf
lock
mov
aaa
push
add
cs
jle
mov
add
pop
sub
add
movb
add
add
mov
dec
movsl
hlt
add
shl
mov
add
mov
add
push
mov
cltd
adcl
mov
adc
aad
add
push
bound
mov
add
xchg
sbb
insl
mov
cmp
push
add
les
sarl
mov
rolb
mov
call
add
hlt
add
dec
ret
xor
faddp
or
inc
add
pop
cmpsl
jecxz
add
add
push
xor
test
fcom
add
fdivrp
jle
bound
mov
xor
sbb
add
add
popf
or
push
add
rolb
push
xchg
cmp
add
inc
add
mov
mov
add
inc
add
mov
and
or
int
add
aas
xchg
add
loopne
add
arpl
jle
sbb
add
mov
and
mov
and
pop
clc
movsb
add
bound
mov
cmp
push
add
cld
repz
lea
add
stc
cs
cwtl
ds
add
repz
add
popa
out
add
pop
fxch
adc
filds
mov
add
into
mov
insb
mov
lahf
push
lcall
dec
clc
in
ret
arpl
aam
sub
rcll
xchg
add
sahf
sti
stc
loope
lcall
mov
fimull
gs
dec
jbe
add
rolb
push
sub
sub
mov
int3
jne
or
add
cmc
mov
add
mov
push
add
sbb
and
cmpsl
cmp
imul
icebp
and
into
scas
xor
add
pop
push
push
add
cld
push
add
inc
add
and
mov
add
mov
sbb
ljmp
add
pusha
add
rolb
add
sbb
xchg
add
cwtl
pushl
push
cmpsl
lea
cltd
lahf
cmp
add
inc
lods
xor
inc
adc
pop
hlt
add
jne
add
add
ret
mov
add
sub
add
add
into
lcall
aam
loop
or
mov
movsl
xchg
add
jge
add
xchg
lds
push
add
inc
jae
add
hlt
add
add
addb
std
cmp
dec
or
jecxz
rolb
pop
adc
jb
jno
add
add
mov
mov
adc
sub
mov
sbb
add
lods
leave
jbe
push
pop
jno
pop
rolb
push
add
mov
sub
fimuls
and
test
push
insl
or
repnz
mov
cmpsb
add
adc
inc
lock
cld
adc
mov
jbe
add
inc
add
loope
test
add
into
xor
mov
jmp
jne
sub
push
add
push
xchg
add
add
mov
inc
or
sbb
add
add
icebp
push
add
add
ret
cmp
mov
mov
int
ret
mov
rolb
int
imul
cld
lahf
sub
or
dec
and
cs
lods
sub
in
or
iret
fisubs
mov
and
mov
add
xor
mov
add
mov
idivl
add
add
sbb
add
cmp
add
aas
hlt
add
add
test
add
add
insb
fnsave
cmp
shrl
int3
jg
add
xchg
add
in
jmp
add
xor
sbb
outsb
loopne
test
das
cmp
or
jecxz
leave
and
shr
movsl
in
xor
popa
aas
push
jno
gs
out
push
add
ret
pop
sahf
in
mov
popf
leave
sbbl
inc
add
popa
xorl
push
cmp
add
push
test
mov
mov
xlat
xchg
hlt
add
mov
add
jne
lods
cmpsl
jl
pop
fwait
rcl
adc
dec
call
push
add
ljmp
jg
cli
lcall
aas
sbbl
in
mov
pop
repnz
movb
add
sub
push
mov
sti
out
mov
add
add
mov
sar
push
add
arpl
mov
and
add
in
fcoms
adc
jp
mov
mov
push
mov
movb
add
mov
fldenv
in
aad
adc
cmc
lods
add
ljmp
mov
iret
out
jge
or
add
mov
lock
and
repnz
xchg
stos
and
mov
add
pop
imul
pushf
push
loop
push
add
dec
dec
sub
jl
pusha
add
ret
xchg
adc
lahf
ljmp
hlt
add
cmp
push
add
push
add
inc
sbb
ljmp
lods
xchg
inc
ds
add
out
sahf
xor
pop
or
add
movb
add
add
add
push
mov
add
add
add
sbb
out
fstl
add
push
add
loope
add
add
dec
aas
pop
adc
push
inc
add
xchg
decb
dec
or
add
adc
movb
imull
jmp
lahf
cld
loope
add
cwtl
stos
mov
add
add
lahf
cli
mov
xchg
leave
nop
add
add
cmp
add
shrl
add
add
mov
jmp
add
add
into
xor
addb
push
mov
popf
movsb
add
test
pop
jbe
and
add
add
inc
add
lcall
jge
stos
add
fst
add
add
mov
in
add
sti
rcll
jg
add
add
or
add
sahf
push
repz
movl
xchg
xchg
add
ficoml
push
add
cmp
jb
mov
xchg
push
test
popa
sbb
xor
xchg
in
addb
add
cmp
lods
mov
test
jecxz
pop
imul
mov
adc
add
add
pusha
add
lds
jne
lahf
inc
jo
dec
push
gs
add
out
add
mov
add
roll
cmp
andl
mov
xor
mov
add
addb
ja
push
sti
insl
xchg
add
sarl
pushf
mov
mov
adc
jns
roll
add
sbb
or
aam
mov
rolb
rolb
addb
add
mov
add
xlat
movb
adc
adc
enter
mov
mov
mov
clc
and
inc
dec
push
or
mov
jge
fcmovbe
into
xchg
ret
adc
addr16
add
and
loope
jnp
push
add
add
fucom
mov
int
add
arpl
sub
arpl
movsb
add
stos
sub
jne
add
ret
sub
push
jge
filds
movsl
add
mov
leave
xor
addb
fldl2t
popa
mov
jns
sbb
inc
xor
mov
clc
xchg
into
iret
push
add
int3
incl
in
add
rorl
and
mov
jg
add
rcll
add
adc
fmull
sbb
add
and
imull
add
jnp
dec
movsl
push
add
pop
push
and
mov
pandn
add
inc
xchg
add
sub
dec
out
mov
mov
pop
icebp
sub
data16
pop
hlt
add
fcmovb
add
add
sub
add
add
xchg
popf
cmp
notl
pop
mov
or
les
jmp
or
sbb
rcll
add
xor
add
popf
test
sbb
mov
fstl
js
mov
pop
cs
les
addr16
add
add
icebp
xchg
js
add
push
mov
aad
imul
int
addb
add
and
mov
hlt
add
add
mov
imul
push
mov
adc
das
in
rolb
jo
pop
out
dec
hlt
add
fbstp
imul
sub
fadds
xorl
add
mov
add
sub
jmp
push
add
mov
add
sub
add
add
addb
add
xadd
jmp
cmp
les
sbb
add
mov
or
pop
insb
ja
xchg
repz
cmp
mov
add
mov
mov
jae
adc
push
adc
cmpsb
add
mov
add
test
daa
pop
sub
add
cli
jb
or
add
xchg
mov
cmc
lds
add
mov
xchg
mov
add
xchg
mov
add
add
xor
xchg
add
mov
nop
add
sbb
add
mov
add
add
mov
inc
add
pop
cltd
add
xchg
add
xor
add
dec
pushf
add
cmp
add
add
pop
lea
jl
add
mov
add
testb
loopne
mov
push
je
dec
mov
push
inc
add
jae
ret
mov
add
sub
and
test
lret
add
xchg
add
jbe
in
cmp
mov
filds
add
mov
lods
rolb
ret
pop
loope
fiaddl
rolb
lods
testb
add
mov
add
and
add
add
int
pop
inc
jmp
mov
add
or
push
cwtl
rolb
mov
jge
push
outsb
jmp
adc
adc
incb
pusha
add
mov
lods
push
das
inc
xchg
add
cli
loop
jl
add
or
add
mov
pop
clc
mov
pop
hlt
add
mov
push
add
mov
jns,pn
add
inc
add
sbb
movsl
xlat
out
int
push
sbb
adc
add
js
lock
je
xchg
sub
push
add
pop
vshufps
fadds
dec
sub
add
lds
std
and
xchg
push
add
mov
mov
add
mov
add
cs
mov
loope
rolb
mov
mov
das
mov
int3
scas
pop
mov
add
iret
xchg
add
lock
dec
cmpsl
lcall
mov
or
daa
test
add
pushf
test
add
mov
scas
cli
push
add
dec
dec
mov
jle
fldenv
mov
leave
scas
dec
xchg
add
mov
enter
and
pop
int
movsb
add
ljmp
andl
cmpsl
push
mov
push
sub
xor
add
sbb
add
in
xchg
sahf
js
pusha
add
add
imul
jae
add
add
stos
outsb
fldt
testl
mov
sahf
popa
lret
dec
mov
and
add
and
jae
in
jne
sub
ret
jnp
int
add
or
out
in
mov
decl
mov
add
lret
add
bound
mov
ret
int
add
cmp
popf
mov
icebp
ret
stos
jne
loop
dec
loope
add
add
push
add
lret
mov
push
add
jp
and
mov
mov
add
bound
mov
add
add
jg
in
xor
shl
add
jno
add
pop
movaps
les
xor
pop
mov
mov
add
add
add
add
addb
mov
jp
add
or
mov
add
push
add
add
mov
push
add
inc
add
add
arpl
xchg
rolb
adc
and
mov
add
mov
push
cmc
sbb
out
lds
mov
push
add
add
out
out
bound
mov
add
inc
aaa
xor
std
loop
cmc
cli
cltd
test
gs
rolb
fwait
mov
mov
imul
mov
add
test
sbb
add
xor
fisubrs
fdivrp
nop
add
inc
add
sub
inc
add
and
mov
add
sbb
sahf
daa
push
add
lret
std
sti
push
in
xor
push
lods
mov
add
mov
or
add
xchg
add
loop,pn
das
loopne
add
mov
push
add
call
and
mov
xor
xchg
mov
lods
les
jno
inc
lcall
pusha
add
add
cs
mov
fcoms
dec
push
add
add
xchg
add
scas
out
xchg
mov
adc
add
xor
mov
mov
std
jecxz
movsb
add
add
mov
inc
pop
cmpsb
add
jle
add
or
add
add
or
add
in
add
dec
icebp
addl
movb
push
sub
mov
add
add
or
jns
out
push
add
movb
inc
add
mov
cmp
push
adc
mull
add
daa
and
xchg
add
loop
and
mov
nop
add
mov
lods
or
inc
add
movsl
outsl
xchg
movsb
add
mov
fs
ljmp
pop
mov
inc
mov
add
lret
push
and
mov
popf
add
lret
movsl
cmpsb
add
jo
arpl
add
add
mov
dec
fnstsw
pop
mov
mov
add
fsubrl
dec
cmp
popa
popa
iret
pushf
pop
iret
jae
mov
lods
imul
rolb
xchg
add
data16
insb
data16
bound
mov
std
pop
daa
jl
add
add
outsb
loop
aas
or
push
fnsave
in
leave
insl
mov
test
add
int3
testb
into
lock
pop
add
add
dec
pop
mov
cltd
into
ljmp
mov
add
out
mov
add
fadds
ss
pop
inc
sbb
fdivr
add
xor
fisubrs
fdivr
aam
sub
add
add
add
mov
data16
jo
push
add
das
clc
sbb
xchg
add
or
push
add
aad
rolb
int
loop
push
add
mov
jnp
in
cmp
add
enter
cmp
add
repnz
cltd
cli
int
repnz
out
icebp
je
add
xorl
mov
add
in
movsl
mov
cwtl
pop
mov
addr16
xor
loop
push
xchg
add
add
push
add
stos
sbb
repnz
add
add
mov
das
sub
xchg
add
pop
scas
addr16
data16
pop
movb
jmp
xor
jge
add
xor
add
rorl
add
add
add
add
ja
dec
xor
dec
push
add
mov
outsl
out
mov
add
fbld
push
sti
pop
stos
ret
in
lea
fsubr
mov
cmp
add
cltd
out
lods
pop
push
sub
add
push
or
jle
add
add
mov
scas
ss
fimull
add
sub
jle
dec
addb
add
add
out
and
push
add
xor
add
jge
movb
add
dec
rolb
cli
in
movsb
add
adc
fisttps
mov
bound
mov
ret
shrl
gs
mov
fs
in
dec
pop
jae
cli
push
add
add
or
std
ror
mov
add
rorl
imul
dec
pusha
add
enter
loop
or
inc
add
pop
rolb
mov
add
xchg
and
mov
add
mov
cld
movsl
rolb
pop
fdivl
add
add
add
rolb
mov
add
jnp
add
cmp
cs
dec
std
jmp
fbld
xor
adc
jno
add
add
xor
sbb
cmp
fwait
movsb
add
add
movsl
stc
out
pop
dec
add
mov
sbb
add
cwtl
xchg
or
add
ret
mov
add
pop
das
fs
jge
push
fcompl
cltd
ret
mov
add
push
add
loopne
mov
sahf
xor
add
add
mov
add
rcll
jl
add
and
dec
inc
add
or
adc
movsb
add
add
mov
add
arpl
xlat
sub
add
push
inc
sub
orl
mov
mov
stos
repnz
mov
add
xor
adc
add
jle
add
in
add
rolb
pop
add
add
scas
sbb
add
add
jne
mov
fstpl
icebp
lahf
and
mov
aad
cld
icebp
mov
add
add
mov
push
mov
pop
loop,pn
dec
mov
cmc
fwait
or
aaa
jo
or
add
incl
cmp
and
mov
jmp
and
mov
in
inc
add
outsl
mov
add
aam
jl
add
add
add
add
mov
fisubs
in
add
lcall
popa
push
data16
pop
pop
xchg
add
push
mov
add
sbb
xchg
test
push
add
icebp
pushf
xor
push
cmp
movsl
push
add
add
sti
fcmovb
dec
pop
xor
movl
outsl
add
bound
mov
xchg
inc
add
xchg
push
xchg
add
jns
xor
add
mov
pop
xchg
add
lcall
mov
or
jl
add
add
add
xlat
leave
xchg
xchg
add
add
mov
add
dec
pop
nop
add
pop
int3
or
push
stc
pop
push
add
cmc
dec
xchg
push
add
add
jno
les
mov
xchg
hlt
add
jg
jge
rcrl
add
pop
into
test
rolb
pop
addr16
add
ljmp
sub
adc
add
add
or
push
add
iret
push
nop
add
mov
mov
and
mov
adc
cmp
xchg
add
xor
lea
inc
push
add
mov
pop
mov
sahf
fcompl
dec
mov
sti
ja
xor
cs
test
add
mov
or
xor
add
add
dec
cmp
pop
stos
cld
imul
jg
add
insb
dec
mov
pop
jae
out
inc
enter
add
mov
fcoms
add
push
add
add
lds
add
loopne
insl
das
pop
addr16
ret
lods
xor
cwtl
les
testb
mov
cltd
sbb
add
or
add
or
pop
insl
push
add
addb
ds
cmp
or
add
les
add
mov
movsb
add
pop
or
add
ja
cmc
fbld
dec
sbb
cld
insl
adc
lret
add
jg
ja,pt
add
pop
out
add
sub
push
je
mov
rcr
outsl
into
adc
test
insb
jl
mov
add
dec
sbb
stc
dec
imul
mov
mov
add
mov
add
add
add
push
add
add
add
scas
add
add
mov
add
rolb
movsb
add
add
imul
loopne
lahf
jbe
out
add
xchg
or
add
add
add
push
add
sub
mov
add
test
push
add
xchg
add
outsb
jg
and
mov
cmp
pop
pop
dec
mov
icebp
les
add
add
push
jl
dec
sbb
add
js
mov
in
lock
in
pop
scas
jne
add
fs
adc
or
cmp
adc
lock
mov
test
add
inc
mov
in
hlt
add
sub
xlat
aaa
rolb
add
add
scas
mov
movb
test
add
add
add
add
add
and
ljmp
out
pop
scas
dec
into
aas
leave
test
movsb
add
dec
in
pop
inc
add
dec
mov
add
adc
lock
loop
push
add
xor
push
add
mov
fsubrs
add
test
push
arpl
jge
push
repz
xor
cltd
test
movsl
and
mov
add
fcoms
add
mov
add
mov
push
xchg
add
add
imul
out
cmp
mov
lret
loope
dec
add
mov
mov
add
xor
add
test
add
add
add
mov
and
mov
rolb
adc
cltd
stos
insl
pushf
rolb
imul
aaa
stos
mov
add
loopne
fistl
sub
sub
movsl
fists
add
add
add
add
add
icebp
push
fucomi
mov
mov
jl
test
pop
pop
addr16
xor
mov
pop
pop
cmpsl
xlat
aam
loop
jmp
cmpsl
cmpl
and
mov
mov
pusha
add
mov
add
rorl
addb
add
push
add
ret
or
jmp
lds
ret
xor
add
add
cmp
aad
add
add
js
lcall
mov
mov
jl
add
cld
out
sub
add
js
add
add
mov
add
addb
add
xchg
xchg
adc
imul
adc
mov
inc
add
mov
mov
stos
fisttps
je
leave
fcmovne
mov
pop
insb
jnp
xor
in
jp
add
rolb
and
rolb
lcall
fists
jmp
ret
stos
pop
jl
add
cmp
pop
cwtl
fldpi
mov
nop
add
and
add
movsl
out
mov
and
in
jmp
addr16
movsb
add
add
addb
add
incb
add
jns
jg
fisttps
add
mov
loopne
mov
lods
add
mov
mov
add
popa
stc
xor
add
mov
add
mov
add
add
inc
add
add
push
add
add
ret
fbld
mov
pop
out
jns
cmp
add
call
inc
add
loop
scas
xor
add
mov
add
fiadds
add
mov
add
fiadds
xchg
add
xor
aaa
lods
leave
cvtdq2ps
call
add
mov
movb
loop
mov
cmp
lods
out
xchg
xor
sbb
add
push
repz
popa
xchg
add
pusha
add
nop
add
ds
jecxz
pop
sbb
jne
and
add
jae
testb
add
mov
xchg
clc
push
add
jl
pop
dec
hlt
add
mov
inc
add
dec
enter
mov
ds
loope
push
add
add
add
mov
add
add
push
add
insb
cmp
dec
inc
add
mov
cmpsl
fnstcw
or
mov
aaa
pop
loop
outsl
adc
ret
xor
pop
mov
adc
inc
add
add
mov
push
sub
in
inc
add
aaa
insl
inc
xlat
cmp
add
add
adcl
add
pop
ffree
add
loopne
xchg
jmp
add
add
add
stc
push
pop
outsl
push
add
les
les
dec
pop
sub
add
jnp
adc
roll
hlt
add
add
xchg
add
push
sub
repz
repnz
pop
lock
mov
mov
jmp
rolb
movb
add
add
add
add
inc
add
add
mov
sub
fwait
mov
sbb
std
and
add
idiv
mov
ror
mov
aam
mov
mov
insb
xor
addb
lret
sub
into
les
ja
add
add
mov
sahf
sub
add
add
mov
cmc
popf
test
inc
xlat
scas
sbb
addb
cld
addb
add
mov
outsl
push
add
cmpsb
add
add
add
mov
in
mov
insl
clc
mov
mov
push
add
dec
ficompl
inc
add
arpl
jecxz
mov
fisttpl
xchg
insb
ficoml
jle
sub
add
or
movb
add
xchg
or
inc
add
jecxz
ret
insb
icebp
ret
cs
js
testb
xor
movb
push
sub
pop
mov
push
loopne
out
cld
and
add
push
add
add
add
jns
add
add
xchg
add
movb
nop
add
add
mov
and
add
sub
add
add
mov
cmpsl
lea
dec
test
sub
and
mov
xor
rolb
insb
xor
mov
add
test
mov
cli
rcll
sub
add
xor
test
add
mov
aad
stc
les
sbb
xor
cwtl
xchg
add
mov
add
mov
lods
add
add
add
add
pop
jo
lret
popf
lods
inc
add
cmp
add
inc
cmp
test
jb
xchg
add
xlat
mov
mov
mov
jne
sbb
and
mov
push
or
add
add
ss
add
or
mov
xchg
add
sbb
or
js
outsl
mov
add
dec
repz
add
xor
xor
aaa
adc
aaa
lahf
push
and
add
add
add
sub
or
lcall
sub
add
mov
add
lea
mov
sub
cmpsb
add
ljmp
push
mov
sub
fldcw
jmp
add
sbb
push
add
pop
cmp
dec
and
jbe
xor
jno
mov
outsl
sarl
pop
dec
ja
and
mov
addr16
jle
push
add
dec
loopne
xchg
js
add
mov
add
add
jne
stos
jle
adc
stos
xchg
add
leave
aad
add
pop
mov
out
add
leave
fwait
subl
or
pop
ret
inc
imul
pop
fiaddl
add
lds
pop
mov
mov
add
xlat
fmul
ja
jbe
pop
daa
insb
lahf
sub
add
data16
add
pop
fiaddl
add
add
lods
sbb
mov
lock
add
add
mov
addb
add
push
mov
js
add
dec
into
int3
lret
rcrl
ds
jge
rolb
push
add
mov
add
add
dec
mov
xor
add
add
mov
ret
aas
arpl
dec
cmp
jmp
cli
pop
add
mov
and
mov
loopne
or
add
daa
xlat
pop
sub
add
icebp
pop
add
push
stos
mov
cmc
pop
maskmovq
negl
pop
adc
cmc
inc
add
mov
adc
jmp
inc
imul
add
and
test
test
jbe
and
mov
lds
and
mov
insb
mov
sbb
movb
add
add
inc
add
mov
pusha
add
test
lock
fildll
outsb
sti
rolb
add
jno
jae
adc
sbb
add
xchg
add
rolb
sbb
cmp
lret
lea
pop
dec
or
xor
adc
rolb
movsb
add
ds
iret
mov
add
add
rolb
jmp
sbb
add
or
add
inc
add
loope
jmp
fcmovne
push
cmp
add
rolb
pushf
or
mov
inc
lods
stc
daa
cld
in
add
adc
mov
jb
xchg
xrelease
sbb
add
xchg
add
add
add
push
leave
nop
add
adc
cmp
add
push
pop
push
add
pop
push
add
add
add
ret
adc
out
insl
loop
push
add
xchg
pop
sbb
dec
push
add
and
mov
mov
add
add
add
mov
pop
mov
sub
add
dec
mov
add
mov
push
testl
popl
sbb
testl
add
mov
push
movsb
add
lret
pop
sbb
xor
fisttpll
jecxz
loope
add
lods
pushf
lret
sub
inc
add
pop
lret
dec
mov
mov
and
mov
imull
add
std
out
dec
dec
cmp
jmp
xchg
sub
add
pop
pop
adc
pop
cmp
cld
mov
lods
mov
mov
add
pop
and
xor
add
cwtl
test
fcoml
cmc
xchg
push
addb
into
stos
iret
and
mov
int
jnp
xchg
fcmovne
std
sbb
ficoms
add
mov
popf
lret
add
sub
add
cmp
add
mov
jb
cltd
and
mov
sub
add
adc
pop
pop
fistpll
mov
push
sbb
add
add
jne
nop
add
jl
ret
into
lret
jp
add
cld
out
add
mov
xchg
mov
dec
jl
pop
push
add
dec
jns
cmpsb
add
dec
sub
push
popa
or
mov
add
dec
call
add
mov
popf
sahf
mov
cltd
mov
jg
loop
xchg
in
popf
cmp
ja
les
leave
rcrl
add
mov
add
sub
add
rolb
pop
xchg
add
add
adcl
or
int
xchg
add
aad
pop
test
pop
mov
cmp
lret
pop
or
add
std
cmp
pop
fnsave
scas
addb
jge
cmc
lods
scas
xor
ljmp
mov
lcall
mov
mov
push
add
inc
add
jno
push
sbb
add
mov
add
xchg
add
mov
dec
inc
jmp
addb
and
mov
movb
jmp
add
dec
movsb
add
add
add
push
sti
ret
int
add
add
mov
inc
jb
and
mov
mov
or
pop
inc
add
add
std
frstor
sub
test
sbb
add
xchg
jmp
add
add
xchg
loopne
mov
mov
add
xor
add
add
xchg
sti
mov
or
add
add
add
xor
cld
test
and
add
add
pusha
add
jg
add
movb
inc
jo
sarl
sbb
or
add
mov
pop
cmp
mov
shll
outsl
mov
mov
jae
add
add
xchg
or
add
jmp
cmp
orl
add
addb
add
add
xchg
add
jnp
cli
sti
arpl
add
pop
cs
mov
int
rolb
ds
cwtl
mov
add
scas
mov
push
add
js
add
dec
data16
add
addb
pop
add
add
xlat
sub
mov
pop
xchg
add
inc
ret
pop
mov
mov
add
add
data16
add
xor
stos
sbb
xchg
fwait
add
cmp
add
add
add
mov
sbb
add
cmpsl
cmp
inc
add
data16
ret
add
add
test
pop
cmc
jne
mov
push
pop
dec
in
rep
aam
mov
dec
movb
add
pop
dec
cmpl
add
inc
or
gs
xchg
add
lock
add
adc
jne
sbb
mov
push
add
jmp
xrelease
jl
call
xchg
aad
stc
mov
push
xchg
add
push
mov
dec
addb
arpl
aad
fs
add
iret
mov
add
add
movb
in
adc
outsl
rorl
int3
call
shll
fsts
mov
gs
dec
push
out
cltd
out
sub
add
setge
or
xchg
inc
add
insb
repnz
add
dec
mov
imul
add
sub
add
pusha
add
add
add
xchg
add
add
mov
out
inc
add
add
add
test
imul
scas
ret
dec
fstpl
sub
xor
xor
add
rolb
stos
addl
add
and
mov
das
mov
loopne
adc
dec
insb
sub
jl
xor
push
add
add
sbb
mov
xor
add
lock
jns
or
mov
pop
mov
add
add
mov
sub
jo
or
mov
push
add
add
loopne
test
mov
into
add
add
stos
or
in
cmp
add
in
stc
jbe
xor
push
add
in
arpl
lea
shr
dec
sahf
sbb
mov
lea
mov
xor
in
xor
adc
sub
or
mov
loopne
addb
add
xor
loop
ficoms
stos
jns
add
add
outsb
movb
add
add
mov
add
imul
or
xor
xor
ret
out
cwtl
adc
mov
sbbl
xchg
packsswb
imul
add
pop
xchg
leave
nop
add
stos
pop
jl
dec
sbb
add
add
cmp
stos
mov
daa
push
lret
push
xchg
add
addb
add
add
ljmp
cmp
rolb
mov
movb
add
sbb
sbb
data16
sbb
call
js
mov
push
xchg
add
cld
popa
fsubr
mov
push
push
or
aad
or
mov
in
movsb
add
add
addb
lods
add
mov
xor
into
lcall
testb
movsb
add
inc
sub
sarl
negl
pusha
add
push
mov
xor
xor
bound
mov
xor
or
mov
add
fsubrs
data16
testb
mov
gs
fisubrs
sbb
sbb
xchg
add
mov
or
add
pop
nop
add
fimull
aam
mov
mov
pop
mov
add
add
arpl
and
mov
pop
lods
cmp
mov
or
scas
in
je
adc
testb
add
js
add
adc
inc
lea
add
sbb
dec
xlat
jb
lock
dec
lret
lret
mov
mov
add
add
add
add
in
sbb
pop
loopne
sbb
add
in
pushf
sub
and
mov
fidivl
test
test
jecxz
add
push
add
dec
data16
scas
add
mov
mov
or
fstpl
pop
push
add
mov
add
repnz
add
jb
xor
push
rolb
adc
sbb
into
test
into
cltd
scas
movsb
add
mov
add
add
xor
xlat
dec
and
sarl
fsub
add
test
add
stos
mov
and
mov
gs
jns
in
mov
jge
dec
out
and
add
add
jnp
pushf
mov
dec
fdivr
or
popf
mov
add
add
fdivl
add
sti
scas
daa
insl
inc
add
sbb
fwait
fwait
int3
cmp
pop
pop
pop
dec
hlt
add
add
js
pop
mov
add
mov
leave
fwait
pop
or
mov
int3
jns
subl
cmp
mov
push
mov
mov
repnz
pushf
loop
cmp
sbb
les
leave
bswap
xchg
add
movsl
popa
jns
daa
ret
mov
data16
add
push
rorl
jp
out
cli
jge
mov
std
jne
jns
adc
sbb
rcll
add
dec
adc
cmpsl
rorl
je
push
in
add
mov
daa
xchg
std
push
add
xchg
xor
inc
call
add
mov
jle
je
cmp
mov
ret
add
mov
out
mov
sub
add
sub
mov
mov
xchg
pusha
add
je
pop
dec
cli
lret
push
stos
in
or
inc
add
jo
adc
movb
jge
add
add
push
jmp
add
jno
sbb
sahf
testb
add
aaa
fwait
jmp
add
cmc
push
add
test
add
outsl
mov
add
jecxz
icebp
mov
add
or
out
push
adc
xlat
cmp
add
pop
loopne
or
xchg
add
test
push
add
or
xchg
in
cltd
sbb
pop
movb
cmp
and
mov
dec
cld
fmul
cmp
jg
and
cmp
in
aas
adc
xchg
add
rolb
jge
add
add
add
sbb
add
int
aaa
arpl
ret
lods
jg
add
add
mov
stc
sar
xchg
add
fldcw
add
scas
fstpt
prefetchw
or
cmpl
add
mov
add
inc
add
mov
fidivs
mov
add
mov
fdivs
pop
sbb
loopne
rcrl
add
mov
movb
add
mov
pop
pusha
add
add
sub
push
fistpll
xchg
data16
aas
sbb
push
add
and
mov
call
sbb
imul
add
mov
add
mov
movsl
and
popa
inc
aad
xchg
add
add
mov
cld
add
xchg
pop
or
mov
pop
loop
out
mov
shll
imul
add
testb
add
scas
push
add
add
cmp
pop
loope
pop
data16
bound
mov
cs
add
pusha
add
add
add
add
test
inc
add
push
add
add
jae
mov
add
mov
add
add
int
imul
or
add
add
in
add
xor
mov
xchg
xor
mov
mov
mov
out
frstor
add
addb
add
add
sbb
addb
addb
not
repz
inc
add
insb
sub
inc
mov
js
cmp
add
adc
jle
cltd
sti
xchg
add
push
out
jno
add
pop
out
add
add
add
jne
int
add
add
lret
push
and
sbbl
pop
mov
lahf
ret
popf
adcl
mov
jbe,pn
out
sub
fdivl
sbb
mov
pop
jmp
adc
push
add
xchg
int
add
add
dec
mov
out
push
add
std
in
or
push
add
lods
cltd
lahf
data16
aaa
test
add
add
add
cli
mov
or
call
addb
sub
xchg
or
sbb
add
mov
add
jo
cmpsl
shll
out
mov
jmp
stos
pop
leave
test
mov
add
add
and
mov
push
add
sbb
xchg
add
dec
xor
adc
std
push
mov
ficoml
mov
jp
aaa
mov
jne
jmp
roll
mov
and
ret
xchg
mov
add
add
idiv
lret
add
add
adc
loop
stc
add
or
dec
out
and
mov
add
add
add
lea
add
add
ret
sub
add
add
into
adc
cmp
arpl
shll
pop
andl
loope
les
cmp
add
pop
mov
add
cli
movb
add
sub
rcll
pop
mov
mov
and
xchg
rcrl
mov
cmp
jg
or
add
add
fistps
add
add
mov
aad
xchg
push
sub
and
add
and
pop
mov
stos
pop
lods
mov
add
or
sarl
xchg
cmc
mov
mov
ds
cmc
repz
cmp
mov
sbb
add
test
mov
fs
fwait
and
mov
add
add
ds
or
add
pop
int
add
stos
bound
mov
add
mov
xchg
pop
or
pop
mov
test
insl
popf
addb
std
sbb
or
rolb
cld
sub
mov
add
push
add
nop
add
mov
add
add
pop
adc
mov
add
mov
clc
xchg
testb
jge
out
mov
add
inc
xchg
add
push
cld
xor
das
testb
fwait
xor
mov
or
mov
add
mov
mov
cmpsb
add
or
popf
ret
ret
cmp
insl
lret
cmp
sar
test
push
lahf
push
push
add
testb
ret
in
je
loope
fwait
push
add
and
mov
out
sbb
and
mov
shll
mov
add
loope
add
xchg
add
xor
mov
xor
hlt
add
jmp
xor
insl
mov
add
negl
negl
cmpsl
add
mov
bound
mov
cmp
fcmovnu
loopne
out
inc
push
add
into
std
int3
mov
inc
add
scas
sarl
aas
jmp
add
repz
push
add
imul
cwtl
cmp
xor
test
popa
push
mov
orl
add
jp
loopne
pop
or
es
add
ret
addb
add
lock
add
add
lock
mov
iret
int
add
add
lret
mov
rorl
and
xchg
add
popa
addb
jge
mov
jp
add
cltd
mov
fisttpl
add
dec
inc
test
cld
dec
out
jae
aad
add
sub
mov
xchg
add
sahf
jl
repz
cmp
hlt
add
call
add
cmp
int3
push
adc
icebp
call
mov
xchg
jle
add
addb
push
clc
push
add
dec
xchg
dec
daa
adc
das
jns
rolb
sahf
and
ja
dec
sub
adc
add
add
aaa
fldcw
adc
insb
outsb
adc
pop
jbe
xchg
add
and
push
inc
inc
xchg
popa
inc
push
add
mov
mull
xchg
mov
pop
xlat
fs
add
jmp
sub
test
sar
push
add
in
add
mov
mov
mov
cltd
and
fstl
add
cwtl
icebp
dec
loope
sub
xor
out
sbb
add
and
mov
mov
data16
rolb
fs
add
add
push
add
sahf
mov
add
mov
xor
add
jle
in
fidivrl
lret
xor
arpl
add
dec
insl
jl
push
daa
add
mov
movb
cmp
dec
loope
add
mov
rolb
mov
mov
add
mov
push
in
rolb
stos
bound
mov
mov
add
add
mov
clc
test
add
pop
cmp
jns
add
gs
fyl2x
or
sti
and
iret
dec
cmp
add
add
add
pushf
popa
adc
imul
sub
add
add
add
mov
sub
add
ror
push
pop
fidivrl
add
dec
mov
mov
add
call
mov
mov
add
add
add
rolb
dec
rolb
cmp
add
jb
movb
sti
enter
add
fistl
ret
pop
cli
lds
dec
jl
add
add
mov
or
into
ljmp
in
mov
add
and
cmpsl
cmp
inc
icebp
xchg
add
add
add
jbe
xchg
add
add
adcl
xchg
inc
fcmovb
add
add
call
mov
or
add
inc
add
loope
add
add
add
enter
mov
jbe
inc
add
pop
daa
pop
or
add
mov
add
daa
loop
testb
subl
add
nop
add
pop
sbb
ret
cli
cltd
push
add
add
xchg
rorl
sub
ja
or
mov
testb
pop
inc
mov
sub
push
add
mov
add
mov
cmp
xor
add
in
sub
dec
sahf
inc
loope
cwtl
and
add
mov
mov
cmp
add
out
hlt
add
add
out
add
add
mov
xor
sub
jp
add
or
add
add
and
add
mov
lret
sub
cltd
into
add
fiaddl
ret
jbe
add
cltd
or
add
aas
outsb
mov
loope
test
jmp
add
pop
jg
pop
mov
add
scas
pop
mov
mov
jecxz
movsb
add
mov
bound
mov
add
stc
sbb
add
mov
add
lret
sbb
add
push
jbe
ja
loope
add
push
dec
push
add
mov
pop
inc
ja
aam
mov
pop
jl
mov
xchg
into
clc
rcll
mov
push
adc
xchg
and
add
cmp
add
add
jb
push
cmpsb
add
mov
pop
sbb
repz
stc
mov
lea
outsb
jle
imul
add
mov
inc
hlt
add
add
fsts
add
fnsave
sub
out
xor
xlat
in
testb
pusha
add
cmc
sbb
jge
aad
pop
inc
int
adc
or
sub
lods
jecxz
sbb
mov
cs
ja
fsubl
jne
sub
lahf
sbb
in
stc
andl
add
push
add
mov
loopne
jmp
add
in
pushf
add
mov
fsub
mov
add
dec
cmpsb
add
in
add
add
daa
lret
dec
sbb
and
mov
add
xor
push
add
cmp
add
pop
push
jg
push
add
pop
icebp
ret
cwtl
push
fstpt
test
movsb
add
add
fucom
stos
inc
and
dec
inc
stos
mov
add
add
negl
movsl
pop
pushf
inc
add
mov
and
mov
test
xchg
cmc
and
loop
pop
les
stc
sbb
add
mov
jmp
add
rcl
add
cld
fucomip
mov
scas
insb
gs
mov
add
xchg
and
mov
and
in
dec
lret
dec
lods
fiadds
add
mov
icebp
push
pop
nop
add
rol
ljmp
cmp
mov
aam
push
js
in
mov
cld
or
add
mov
in
rolb
imul
inc
add
add
add
add
xchg
fidivs
mov
mov
cmpsb
add
dec
cmp
sub
jo
mov
push
add
rolb
addb
in
push
add
add
or
sub
or
add
mov
sbb
imul
loope
add
adc
xchg
add
test
jo
push
loop
mov
lods
inc
inc
add
mov
inc
add
mov
add
out
shrl
add
out
mov
add
loop
add
mov
mov
lea
pop
dec
add
jo
push
sahf
xor
jg
dec
add
and
bound
mov
sub
jl
aas
test
stos
cwtl
cmp
push
arpl
sti
and
stc
rolb
iret
call
rolb
mov
add
jmp
aad
stos
dec
and
addb
dec
and
stc
ljmp
lods
lods
push
mov
mov
mov
jne
and
or
adc
add
mov
xor
loop
lcall
sbb
int
adc
or
pop
in
push
add
mov
sub
jmp
movsl
jno
add
fsubp
call
sub
inc
jae
add
fistpl
sbb
xor
dec
inc
mov
fwait
xor
std
cld
or
sbb
sbb
ds
add
mov
lcall
mov
fsub
add
xchg
dec
scas
adc
shll
rolb
push
add
add
sbb
ljmp
mov
rolb
push
add
xor
loopne
sbb
inc
addb
push
add
ret
push
add
data16
add
jne
loopnew
xchg
mov
and
lret
and
sub
add
in
pop
cwtl
pushf
sub
add
push
add
add
in
mov
rcll
push
add
pop
and
subl
xor
rcrl
add
push
push
xlat
jnp
inc
add
add
fildl
add
add
add
add
in
push
sbb
add
mov
cld
pop
test
das
and
mov
dec
jns
or
repz
and
mov
xchg
and
mov
sbb
cmp
add
add
test
add
lods
xchg
add
arpl
xor
dec
sbb
push
js
imul
add
js
dec
daa
jno
out
in
les
pop
inc
add
or
add
add
jnp
pushf
gs
jnp
and
add
and
dec
or
lret
sahf
lret
movb
cmpsb
add
push
xor
mov
push
add
mov
push
add
mov
add
add
scas
add
mov
xchg
add
pop
jl
add
mov
cwtl
fs
add
add
adc
pop
mov
push
mov
xor
mov
mov
cmovbe
inc
add
je
stos
cmpsb
add
negl
add
lcall
add
rolb
xchg
add
xchg
lea
add
pop
pop
xor
sub
dec
out
fnsave
icebp
push
add
mov
into
and
lcall
scas
fnstenv
mov
add
ret
outsb
ret
add
sbb
fidivrl
add
or
rolb
pusha
add
mov
xchg
add
adc
and
add
sub
push
add
xlat
jb
mov
add
in
popa
jno
add
push
add
add
fldenv
or
ficoms
js
dec
inc
ja
push
add
in
ret
aad
inc
test
push
add
cmp
pop
in
je
cmp
push
add
cltd
pop
dec
inc
add
in
gs
and
add
add
mov
and
cmpsb
add
test
add
fnstcw
js
adc
js
and
add
test
ja
test
and
lcall
add
add
add
dec
sarl
and
mov
mov
xor
call
test
add
sub
mov
mov
mov
out
cmpsb
add
add
mov
add
in
push
add
dec
testb
out
clc
scas
ja
add
cmpsl
nop
add
xor
movsl
repnz
or
loope
xchg
add
push
push
add
add
std
imul
xchg
adc
inc
add
inc
ret
add
mov
add
add
lea
cli
cmp
cmp
jmp
loop
sbb
add
cmpsl
xchg
jl
pop
add
mov
add
jl
in
jge
add
jle
inc
sti
mov
mov
pop
mov
rolb
add
mov
cmp
dec
pushf
cmp
movsb
add
adc
xchg
mov
xchg
outsb
scas
in
stc
test
addb
add
add
add
push
add
add
clc
sub
pop
or
jp
pop
rolb
adc
xor
popf
jge
mov
and
xlat
xlat
jno
sub
cmp
add
add
inc
or
add
push
add
add
test
and
mov
test
add
mov
xchg
jnp
add
pop
mov
mov
fnstenv
add
add
addr16
in
add
add
bound
mov
add
mov
incb
mov
push
add
mov
fisubrl
dec
add
add
std
cs
add
pop
and
inc
pusha
add
ret
cmp
scas
cmpsl
lods
push
add
cli
arpl
sbb
arpl
add
sbb
mov
scas
out
add
mov
and
sbb
add
int3
add
add
push
mov
in
jecxz
xchg
add
shll
mov
adc
push
add
add
gs
xor
js
lods
pop
xlat
sub
push
mov
repz
adc
les
repz
and
jnp
and
xchg
push
adc
repz
add
sub
lahf
mov
les
pop
inc
jecxz
mov
ds
pop
or
mov
xchg
add
inc
add
jge
jmp
add
add
mov
add
faddl
rolb
add
rolb
add
cli
stos
add
add
add
add
mov
sti
testb
dec
insb
mov
inc
add
cmpsb
add
push
add
add
mov
fstpt
inc
lahf
mov
mov
icebp
rolb
jo
mov
popa
push
testb
add
add
movsb
add
mov
fiadds
add
and
cmpsb
add
loope
add
add
shll
test
add
mov
call
add
imul
mov
dec
mov
mov
mov
nop
add
mov
add
add
xchg
add
xchg
iret
nop
add
add
inc
add
lods
or
in
into
test
xor
cmpsb
add
xchg
mov
mov
mov
pop
and
mov
add
add
xchg
fidivl
add
jmp
adc
aas
scas
sbb
xchg
mov
sbb
sub
aaa
dec
cmc
test
or
jno
mov
fwait
pop
jl
add
cmp
and
in
xchg
add
inc
add
ret
jmp
add
add
pop
add
adc
adc
ficoml
cmp
and
add
add
add
xchg
or
seto
sbb
dec
movb
add
fiadds
inc
add
outsb
sbb
mov
add
add
jecxz
rol
add
pushf
mov
iret
mov
cmp
mov
rolb
lds
add
adc
movb
add
add
add
enter
ja
sub
xlat
movsl
push
add
xchg
out
addr16
and
mov
xchg
outsl
sbb
add
mov
in
int3
jns
adc
jmp
rorl
cmp
cltd
dec
mov
cld
or
testb
add
mov
aaa
jle
add
add
in
mov
xor
into
ret
scas
lahf
gs
je
dec
push
xor
cmp
pop
adc
addl
push
jae
int3
sub
inc
lods
pop
sbb
or
daa
in
jg
lock
add
mov
jge
add
stc
pusha
add
aas
xchg
xor
mov
mov
jnp
clc
add
in
addb
add
out
push
add
add
outsl
sbb
add
add
or
stos
aam
cmp
lds
jo
xchg
das
lds
xchg
add
jo
loopne
add
popa
lcall
or
add
cmp
adc
xchg
mov
imul
ja
popf
push
adc
dec
adc
dec
mov
cltd
add
sub
push
add
add
add
lret
adc
mov
dec
rolb
inc
test
and
mov
mov
add
xor
mov
ret
pop
mov
pusha
add
xor
in
aaa
and
mov
mov
dec
push
xchg
inc
add
adc
imul
ja
pusha
add
jecxz
add
add
cs
add
cmp
mov
insl
sub
adc
add
inc
mov
xor
push
add
popa
adc
daa
ret
lea
inc
jo
push
add
add
add
rolb
movsl
jb
ficomps
movsb
add
add
add
lret
iret
dec
gs
test
mov
and
xor
pop
xchg
add
add
xor
cld
repz
add
jge
xor
in
pusha
add
add
popa
js
add
xchg
add
xorl
cmpsl
sbb
inc
ja
and
mov
add
je
ret
or
adc
daa
xor
lock
mov
mov
jbe
cmp
add
arpl
mov
add
push
fstpl
testb
insl
lret
mov
add
add
mov
rolb
std
sub
rolb
xchg
les
add
mov
fidivl
mov
icebp
scas
adc
arpl
lahf
out
cltd
xlat
and
jle
add
jns
or
outsb
add
int
pop
mov
add
sub
hlt
add
in
pop
inc
add
xor
or
and
mov
sub
aaa
add
mov
add
mov
add
daa
and
inc
add
add
mov
or
add
add
jo
sbb
fdivs
addb
enter
and
xchg
add
loope
clc
aam
inc
and
cli
inc
add
add
add
add
add
xor
add
push
add
add
push
mov
add
stc
mov
add
jnp
leave
mov
pop
or
jmp
sbb
pop
xchg
add
or
mov
mov
mov
jp
in
stos
sbb
add
add
lret
out
push
add
add
add
xor
dec
mov
daa
lret
insb
ds
test
add
dec
push
add
addb
mov
stos
adc
mov
xchg
lods
nop
add
pushf
or
stos
movb
jno
xchg
add
inc
add
add
inc
add
push
jno
loope
sub
add
mov
mov
mov
xchg
add
clc
fcomps
pop
ret
sub
out
add
in
cmp
out
jg
arpl
and
mov
inc
add
mov
test
add
mov
pop
inc
int3
pop
push
sbb
pop
movsl
out
pop
loope
add
sahf
and
add
movsb
add
ret
lret
sbb
lea
mov
dec
icebp
outsl
movsl
xchg
and
hlt
add
jo
jnp
lock
add
add
add
push
and
mov
cli
mov
aam
add
add
addb
add
mov
jnp
add
dec
dec
aam
mov
add
adc
add
cli
stc
cmc
cmp
inc
or
loop
sub
fisttpll
ljmp
dec
les
pusha
add
imul
inc
stc
mov
pop
cmp
inc
lds
inc
add
add
add
rcl
cmpsb
add
cmpsl
outsl
imul
add
add
aas
outsb
js
loopne
das
or
lret
dec
scas
imul
push
xlat
and
pop
fnstenv
mov
fildll
sbb
add
aam
adc
call
add
mov
mov
jo
pop
imul
ret
add
add
add
arpl
add
cld
movb
lock
add
dec
das
std
pushf
jns
push
or
ret
incb
xchg
pop
sbb
movb
mov
dec
cmpsb
add
push
addr16
jb
mov
add
cltd
mov
in
add
add
lods
adc
add
adc
push
add
jmp
inc
jo
lods
test
arpl
shr
je
push
add
cmpsb
add
out
test
add
jl
xchg
add
add
add
add
dec
testl
inc
add
test
mov
scas
xlat
movsl
cmp
imul
cmp
add
push
jmp
test
jmp
xchg
in
or
fisubrl
add
lret
daa
pop
push
add
fwait
push
add
mov
add
add
addb
push
add
movb
cmpsl
or
add
add
mov
dec
dec
xor
mov
in
lcall
pop
sahf
and
mov
add
xchg
daa
addr16
add
inc
add
push
add
pop
and
xchg
movb
rolb
data16
fcmovu
pop
dec
add
jnp
mov
fdiv
add
popa
lea
add
pop
mov
add
jns
pop
scas
mov
inc
add
add
and
mov
add
aaa
xor
lret
add
or
add
nop
add
add
inc
add
test
jae
hlt
add
add
add
sub
add
xor
pushf
test
mov
jns
add
add
add
pop
inc
add
addb
fsts
mov
data16
lock
add
lock
mov
je
popa
mov
pop
and
cmpl
std
int
mov
add
stos
mov
add
or
out
ja
pop
xor
mov
or
add
addr16
mov
js
push
into
xlat
inc
add
add
jecxz
add
add
decl
jae
add
jo
adc
scas
xor
pop
adc
cmpsl
sahf
adc
sbb
add
out
jmp
push
cmp
mov
push
addb
push
add
add
movsb
add
or
or
or
inc
add
outsb
lcall
add
and
xor
mov
mov
sbb
rcll
xor
jbe
jbe
xchg
push
add
popa
aaa
or
mov
dec
xchg
add
mov
add
jecxz
lock
daa
ret
lcall
aaa
xchg
fsts
add
popf
dec
mov
add
fsubrs
cmp
add
loop
mov
add
flds
mov
sub
fldenv
jle
fsubrs
lcall
mov
add
add
push
add
in
pop
dec
mul
push
dec
mov
js
dec
add
add
add
add
cmp
add
add
lods
add
stos
insb
adc
fidivs
sub
add
add
dec
stc
pop
pop
sub
cs
out
decb
add
mov
push
or
add
in
das
insb
les
js
mov
mov
nop
add
or
mov
add
sub
add
add
add
mov
add
and
mov
and
add
add
add
add
sub
add
inc
add
jns
addb
add
cmp
iret
aam
ret
mov
mov
jecxz
rol
add
add
out
in
repnz
add
repnz
add
jne
ret
mov
jo
decb
frstor
mov
fdivrl
or
add
enter
mov
pop
les
sub
js
inc
addb
fidivrl
adc
sub
imul
add
xchg
add
pop
and
mov
das
jmp
cwtl
loopne
lock
xchg
adc
xchg
add
add
inc
add
js
or
rorl
push
add
int
add
and
add
or
nop
add
inc
in
jne
add
andl
mov
cmp
jg
add
add
mov
vmwrite
adc
add
lcall
add
dec
mov
add
jge
insb
ret
add
mov
testb
hlt
add
aad
push
add
pop
cltd
push
add
mov
xor
xor
cs
xor
cmp
pop
stos
jp
add
add
inc
mov
add
mov
add
fiaddl
dec
cli
add
out
ja
jno
loop
outsb
mov
add
int3
aad
test
add
mov
dec
pop
push
iret
in
ja
push
add
add
rolb
mov
nop
add
loop
lret
cmp
addb
ss
in
inc
add
add
insl
out
or
mov
push
add
pop
andl
add
pop
pop
mov
mov
sti
movb
cmpsl
and
mov
xor
nop
add
mov
push
dec
pop
dec
pop
add
mov
cmp
ja
add
adc
add
add
add
add
movsl
addb
add
sahf
mov
and
cli
hlt
add
popf
and
mov
test
jbe
lods
mov
cmp
xor
mov
add
cmc
cmc
addr16
inc
mov
or
jns
jg
add
neg
sub
sub
mov
dec
cmc
xor
stc
mov
nop
add
push
add
jl
addb
in
mov
mov
mov
mov
add
fbld
inc
add
or
and
add
loopne
jp
add
jno
adcl
mov
add
aas
hlt
add
adcl
andl
lea
cmc
cmp
je
cmpsl
mov
aam
add
jecxz
rcll
in
sbb
rolb
aas
outsb
and
mov
std
pop
inc
in
scas
push
ja
add
mov
sbb
add
push
movsl
gs
add
cwtl
rcrl
mov
add
add
xchg
add
leave
xchg
pop
popa
ds
mov
add
add
add
add
xchg
add
cld
lcall
add
add
add
mov
mov
jl
add
je
mov
stos
cmp
xchg
add
ja
or
add
add
sbb
sarl
stos
enter
imul
dec
pusha
add
xchg
mov
stos
pop
add
insb
ret
leave
push
gs
lcall
xchg
inc
mov
push
add
sbb
add
dec
cs
pop
movsb
add
push
add
mov
pop
jb
rolb
push
add
outsl
push
mov
or
enter
sbb
icebp
inc
add
stos
pop
mov
add
dec
out
test
add
push
mov
into
mov
rcll
add
bound
mov
mov
sbb
mov
insl
sbb
add
fimuls
arpl
inc
testb
xor
pushf
xchg
add
add
jnp
in
add
add
add
xorl
mov
jle
adc
pop
ss
add
stc
mov
jno
inc
add
add
mov
loope
fcoml
insb
mov
test
add
in
mov
add
cs
stos
add
repz
loope
xor
sldt
mov
sahf
mov
add
lcall
gs
cmp
add
mov
sarl
pop
and
pop
aam
imull
mov
add
mov
add
cmp
pushl
mov
push
add
pop
outsl
pop
mov
add
inc
inc
add
or
outsb
dec
dec
dec
xor
mov
add
pop
xchg
add
arpl
xor
or
mov
or
add
add
data16
test
inc
add
add
ja
rcll
mov
mov
lret
lahf
sub
add
xor
mov
add
pop
push
cs
testb
add
add
add
sbb
jbe
add
mov
add
sti
lret
or
push
add
lds
push
add
xchg
add
imul
rolb
and
or
inc
add
in
pop
jo
stos
push
std
sbb
outsb
sti
cmp
nop
add
mov
add
jp
add
push
add
xorl
sti
or
movb
inc
xor
pop
pop
rorl
das
jle
inc
add
addb
mov
add
push
pop
hlt
add
mov
ja
add
sbb
cli
add
mov
mov
hlt
add
lock
jo
enter
and
add
add
nopl
add
pop
in
lods
aas
rolb
in
adc
dec
fwait
js
add
inc
add
movb
popa
shr
in
mov
aam
adc
stos
push
add
imul
adc
dec
fwait
or
dec
add
add
mov
mov
jmp
aas
test
mov
pop
push
add
lret
and
cli
in
add
pop
notl
push
push
jno
mov
sbb
add
addb
add
jge
add
and
addb
outsl
add
mov
inc
add
cli
addb
js
xchg
cmp
imul
add
out
mov
jo
push
add
add
addb
into
push
add
loopne
movsb
add
add
out
enter
iret
addb
push
add
add
sbb
xlat
and
add
inc
cmp
add
pop
ret
add
stos
fnstcw
add
add
mov
inc
mov
add
add
and
mov
mov
add
lcall
add
add
mov
sahf
scas
mov
shrl
js
std
adc
adc
mov
inc
add
mov
in
lahf
jae
xor
inc
push
add
sti
cmp
add
in
cmp
add
aad
mov
mov
add
add
mov
add
or
add
add
xchg
nop
add
add
add
in
leave
mov
add
into
xchg
add
mov
std
xlat
add
xchg
add
add
jmp
jle
rcrl
xchg
add
cmp
cmpsb
add
fwait
lcall
add
add
mov
sub
negl
sbb
add
mov
fsts
xlat
addb
js
sub
mov
lahf
je
adc
adc
inc
add
data16
inc
popa
mov
add
add
cmp
int
fwait
mov
addb
stc
mov
int3
in
fdivrs
bound
mov
and
mov
pop
popl
lcall
add
outsb
pop
cmp
sahf
jne
cs
mov
dec
inc
add
mov
data16
pop
sub
or
add
cli
test
or
mov
pop
mov
in
call
fnstsw
cld
pop
inc
add
out
add
ret
add
add
mov
lret
fdivl
add
add
add
fildl
int3
sbb
jle
lret
mov
adcl
push
fbstp
add
or
imul
push
add
std
mov
testb
add
adc
add
popa
mov
sub
add
add
jmp
hlt
add
jp
stc
add
test
pop
xor
sbb
add
lock
jp
nop
add
outsb
add
add
sbb
add
lock
add
add
lods
fsts
and
add
lods
and
mov
and
push
pushf
pop
repz
push
add
mov
roll
add
nop
add
adc
add
adc
int3
jne
imul
jae
and
add
mov
ret
inc
add
adcl
add
shrl
data16
adc
adc
inc
mov
jecxz
xchg
pop
sub
jecxz
add
add
ficompl
add
add
jp
dec
dec
jbe
imul
add
mull
mov
add
add
add
sbb
out
jne
or
add
push
add
mov
pop
sbb
sbb
or
dec
push
add
scas
rolb
xor
sti
mov
stos
rolb
pop
out
add
aas
cmc
out
or
rorl
pop
dec
ja
popf
incl
xor
inc
add
jne
push
add
movsb
add
add
jg
popa
imul
out
lahf
sahf
push
add
cmp
mov
popf
add
mov
and
add
lcall
add
mov
pop
loop
pop
stos
lock
daa
inc
add
sub
push
testl
lcall
jnp
push
add
push
xchg
test
add
xor
add
repz
mov
xchg
mov
mov
sbb
jnp
push
in
xchg
aas
dec
xchg
xchg
push
add
loop
inc
add
push
insb
cmc
aam
add
inc
add
stos
loop
push
push
jae
ficoms
add
mov
in
imul
insl
xlat
sub
and
mov
add
dec
sbb
add
mov
adc
mov
jge
xchg
mov
add
fisubl
add
add
lcall
add
test
mov
lock
inc
add
leave
gs
push
mov
and
add
popa
scas
lods
and
mov
nop
add
sahf
xchg
add
push
das
cmpsl
pop
inc
add
jno
add
pop
testb
lret
push
stc
add
add
lods
jecxz
add
xchg
mov
add
stos
ret
sub
notl
test
or
jbe
jmp
add
mov
xchg
movsl
or
sti
fistps
and
sub
aam
leave
enter
sub
and
jp
add
arpl
and
add
cmp
add
jp
add
out
fs
jae
out
adc
shl
pop
lods
inc
xor
cli
inc
add
and
lds
mov
test
or
mov
add
add
mov
stos
scas
xchg
add
add
add
xchg
mov
mov
maskmovq
imull
mov
add
imul
add
mov
inc
cld
nop
add
je
sub
add
xor
in
test
or
out
mov
pop
int
pop
xor
add
shl
loope
xchg
fs
mov
add
add
jmp
mov
add
xchg
jbe
insl
jo
xchg
loope
xchg
add
fs
cmpsb
add
push
lret
lods
push
adc
jg
xor
push
add
aas
or
mov
add
lods
and
add
sbb
add
mov
incb
jcxz
inc
movb
and
stc
fisttpl
bound
mov
sub
aad
add
int3
mov
loop
mov
jmp
lods
pop
push
add
pushf
addr16
fidivs
cltd
arpl
pop
repnz
dec
lds
add
aad
add
aas
je
stos
pop
std
inc
popa
shrl
add
in
fnstsw
push
jns
jbe
ret
mov
mov
imul
lock
add
add
fadds
jecxz
push
cmp
push
test
mov
push
xor
cmp
add
test
addb
lock
xchg
add
push
sti
daa
inc
stos
and
fistps
add
out
ret
pop
out
cmpsl
xchg
jp
add
test
add
jg
mov
add
lds
add
adc
add
add
add
in
push
test
loop
add
mov
pop
mov
loop
and
daa
inc
add
lods
sbb
add
jl
enter
xchg
add
jb
xchg
add
loop
push
or
shll
mov
inc
add
cli
inc
adc
shl
push
inc
add
xor
je
stc
cmc
jne
add
leave
cmp
outsl
mov
and
mov
add
mov
popl
add
xchg
add
das
jp
add
add
add
outsl
sbb
push
fidivrl
pop
jg
add
add
sub
call
sub
add
aad
fwait
mov
in
lock
dec
jg
mov
addb
clc
andps
inc
add
cmp
test
push
fcoms
into
movsb
add
xchg
add
aad
jnp
add
mov
nop
add
mov
add
add
sub
add
lods
cmpsl
cmp
add
out
rolb
dec
call
scas
ljmp
add
add
add
out
fcmovnu
xchg
mov
push
clc
cli
std
pop
xchg
dec
out
mov
ret
sub
jmp
imul
add
add
jbe
add
loopne
loopne
ffree
add
and
test
not
mov
add
jge
iret
cmp
push
pop
or
add
cmp
add
sahf
push
testl
mov
add
add
add
mov
sub
mov
adc
mov
testb
lods
rolb
mov
sahf
stc
inc
xor
push
push
addb
push
add
ret
aaa
or
loopne
in
cmp
mov
pop
jbe
push
and
mov
xchg
add
popf
stos
add
mov
lahf
sub
mov
pop
ja
add
mov
aas
arpl
aad
add
out
and
sbb
ds
testb
add
int
hlt
add
daa
add
int
add
add
add
sbb
add
out
loop
mov
mov
out
in
imul
jle
arpl
add
xchg
add
icebp
add
mov
push
stos
jmp
lea
ds
dec
mov
hlt
add
sahf
fisubrs
sbb
add
add
dec
stos
clc
pop
sbb
add
inc
mov
lods
mov
push
or
repz
add
or
mov
sbb
pop
test
add
les
clc
scas
test
and
mov
xor
xchg
add
lret
in
xchg
cmp
inc
add
cmp
out
add
add
sub
add
pop
rolb
mov
cmc
and
fld1
fsub
add
add
enter
and
mov
push
add
sarl
movb
mov
sub
pop
out
add
and
dec
pop
mov
jge
add
or
insb
xor
and
mov
jb
mov
clc
or
sbb
add
int3
xchg
pushl
add
movsb
add
add
xchg
xchg
add
mov
bound
mov
jo
out
test
int3
and
mov
cmpsl
icebp
mov
add
jb
dec
sbb
loopne
push
dec
mov
sub
sbb
sub
add
mov
sti
cmpsl
mov
add
lods
testb
cmpsl
inc
add
fs
and
mov
lods
int
cltd
or
sbbl
adc
in
test
push
add
xchg
add
add
mov
pop
andl
add
mov
sahf
fsts
pop
cmpsl
hlt
add
jbe
popa
adc
out
fiaddl
push
add
mov
loop
pop
add
cltd
lods
arpl
pop
add
mov
add
add
adc
add
add
add
mov
add
push
add
xchg
sub
ja
add
addb
and
sub
jbe
lret
sub
movsl
repnz
add
stos
mov
fcmovbe
cltd
push
jne
inc
add
lods
xor
mov
popa
lods
aaa
pop
jg
pop
jle
fldl
aas
clc
loope
jecxz
xor
out
pop
popa
cltd
js
inc
add
fdivr
jbe
xchg
xchg
repz
adc
dec
mov
ret
cli
mov
mov
scas
mov
push
pop
xchg
add
jbe
sti
mov
xor
sub
push
test
in
cltd
cmpsb
add
sub
add
add
repnz
aaa
mov
adc
add
push
inc
add
jmp
pop
push
add
add
jo
mov
add
xlat
repnz
sub
dec
in
jne
repz
xchg
sahf
xchg
stc
addb
add
add
dec
push
add
add
add
js
add
mov
ficompl
xor
les
ficompl
mov
icebp
lea
jns
ljmp
dec
aam
fcompl
mov
fwait
pmulhw
add
das
sbb
ja
push
aam
xchg
add
mov
or
rolb
mov
pop
inc
dec
adc
lods
addr16
push
dec
xor
inc
add
add
popa
mov
add
sub
add
or
add
jnp
add
or
add
add
mov
in
mull
js
out
movswl
fmul
aam
or
add
jp
cs
add
add
fsub
push
jnp
mov
ja
mov
int3
bound
mov
add
add
adc
and
or
lock
add
mov
pop
mov
add
mov
outsl
sub
xchg
add
adc
loopne
sahf
cs
int
mov
sub
and
lock
add
testb
add
push
xchg
iret
xchg
cmp
xor
cmc
jge
mov
or
pop
ret
jge
scas
pop
pop
dec
cmp
add
jne
mov
ret
pusha
add
mov
add
mov
popf
sbb
add
cwtl
cmp
mov
mov
mov
mov
mov
add
inc
test
mov
jge
pop
pop
inc
out
aad
hlt
add
aas
and
cmpsl
jns
add
mov
cs
repnz
lcall
add
clc
loope
jnp
sbb
and
mov
xor
insl
mov
test
ja
lcall
mov
inc
jecxz
js
add
jecxz
and
rolb
jecxz
outsb
jns
push
add
add
rolb
adc
mov
out
push
mov
mov
inc
out
add
scas
adc
icebp
movb
loop
adc
mov
and
mov
xlat
xchg
add
mov
add
jbe
pop
jbe
mov
inc
xor
jecxz
add
fmull
stc
dec
sub
mov
inc
add
add
and
jno
fidivl
sub
push
add
or
pushf
add
mov
add
inc
add
popf
jae
add
filds
add
test
jl
rcl
add
into
out
jne
inc
add
sti
pop
cmp
sub
notl
add
add
cli
std
and
mov
hlt
add
xchg
addb
add
jg
repnz
add
inc
add
mov
fadds
add
cltd
sub
add
add
repz
or
and
rolb
out
scas
imul
ss
jae
add
test
add
sahf
inc
call
stos
xor
lods
fsubl
pusha
add
sub
movsl
iret
sarl
add
jge
mov
cmp
sbb
arpl
jecxz
jle
xchg
add
add
sbb
ljmp
cld
repz
adc
mov
dec
xchg
test
dec
add
push
add
inc
add
arpl
mov
inc
movb
mov
xchg
add
add
hlt
add
div
add
add
add
mov
movb
in
add
or
lahf
push
mov
aaa
ret
gs
add
dec
adc
rolb
push
test
lea
jg
add
add
sub
add
mov
mov
add
add
mov
jp
lret
fiadds
xchg
into
outsl
mov
inc
outsb
data16
mov
in
inc
add
lds
fnstenv
bound
mov
mov
add
mov
cmpsl
inc
add
adc
mov
mov
add
popf
mov
xor
jo
push
add
mov
xor
dec
aaa
daa
fs
dec
xor
pushf
sbb
je
mov
jecxz
add
mov
add
or
jecxz
lea
pop
cwtl
cmp
test
add
cmpsl
add
add
pop
hlt
add
jecxz
add
rolb
pop
xor
pop
mov
add
roll
mov
add
cmp
movb
das
pop
iret
sub
add
add
add
movsb
add
rolb
lea
sbb
nop
add
add
add
jnp
imul
ds
aad
mov
xchg
jg
adcl
add
ret
insl
ret
clc
insl
fwait
lock
add
or
out
mov
xor
out
lea
clc
out
add
push
and
mov
sub
add
mov
call
mov
pushf
icebp
ljmp
xchg
outsl
pop
xchg
out
jae
xchg
pop
nop
add
pop
js
add
sarl
movl
mov
xchg
or
add
add
push
out
xchg
push
add
add
jns
adc
int3
mov
inc
mov
sub
fdivrs
xlat
sbbl
cmp
add
jo
mov
add
xor
add
add
sub
add
or
add
or
stos
int
inc
add
add
data16
add
in
add
je
or
mov
push
add
dec
call
add
mov
icebp
iret
or
imul
add
pop
insl
clc
iret
cmp
add
add
mov
popl
xor
out
add
jns
scas
movsb
add
adc
lcall
sub
mov
push
add
add
pop
add
test
cmpsb
add
add
add
test
adc
aam
ja
sub
lahf
mov
ja
add
mov
pushf
jo
pusha
add
loop
or
jg
add
addb
movsb
add
add
sbb
pop
mov
push
add
mov
outsl
cmp
pushf
xor
insb
mov
add
push
add
add
push
mov
mov
jns
pop
repz
lds
add
repz
adc
icebp
ret
add
ja
add
arpl
push
add
stc
fs
lcall
sub
rcrl
add
add
add
xchg
mov
mov
add
iret
in
push
add
add
je
push
add
add
inc
mov
cld
adc
cmp
adc
test
add
add
pushf
mov
cmc
jmp
inc
add
dec
das
ja
jecxz
add
jmp
sbb
mov
iret
pop
push
add
push
or
cmc
mov
inc
mov
add
add
mov
mov
sub
dec
int3
mov
pop
adc
movsb
add
xor
mov
pop
inc
add
imul
mov
mov
mov
test
movb
sarl
sahf
cmp
xor
and
mov
add
cmp
leave
dec
rolb
out
adc
xor
mov
and
es
fs
ja
pop
dec
mov
mov
xchg
add
aad
xchg
cmpsb
add
add
cmc
sub
mov
dec
jo
sti
jp
std
push
arpl
jae
push
mov
jp
and
add
dec
xor
sub
sub
mov
add
cmp
push
add
out
jne
or
std
add
add
inc
mov
in
pop
sbb
in
out
add
inc
xchg
add
xor
mov
cmp
mov
add
add
add
stos
and
xchg
or
add
mov
inc
add
add
sub
mov
scas
cmp
mov
aaa
xchg
lahf
das
xchg
add
fsts
or
add
rolb
shrl
cmp
test
popa
bswap
push
add
add
push
aad
add
cld
or
add
adc
or
push
add
push
add
fstps
mov
das
jne
add
add
sub
in
jecxz
pop
inc
icebp
shrl
add
pop
cmp
outsb
xchg
jge
mov
xchg
test
jle
or
add
pop
js
mov
mov
fdiv
add
testb
scas
test
sahf
aaa
inc
sbb
scas
gs
push
pop
mov
push
add
add
add
pop
jecxz
add
andl
std
mov
xchg
xor
sbb
xchg
clc
xchg
imul
dec
dec
or
hlt
add
les
inc
add
mov
mov
add
ljmp
cmp
insl
push
pop
int3
in
ret
fidivs
add
repz
test
add
roll
lods
in
or
das
jae
dec
sub
cmp
mov
cld
and
pop
xor
and
xor
mov
out
jmp
xor
fs
insb
dec
lods
cld
xor
adc
daa
sti
mov
xchg
sub
cs
add
es
dec
mov
add
mov
mov
into
pop
xchg
sub
sti
in
ffree
inc
adc
mov
fsubrl
cwtl
cs
in
dec
addr16
and
out
jg
add
lds
stos
iret
xchg
add
xchg
add
mov
cs
adc
push
add
xor
push
sub
xor
mov
add
icebp
add
mov
std
mov
add
adc
fdivrs
adc
les
and
push
adc
roll
add
push
mov
leave
ret
push
std
push
add
aad
sub
adc
fnstcw
add
loope
out
test
add
mov
add
xchg
add
add
imul
inc
add
std
sub
or
xchg
add
sbbl
dec
ljmp
lods
cld
mov
mov
pop
test
lock
clc
mov
mov
dec
cld
or
jns
add
add
add
add
cmp
add
divl
fucom
or
mov
movsb
add
pop
dec
lret
ret
mov
jbe
pop
mov
and
mov
jae
add
js
add
xor
sti
fcmovu
outsb
stc
leave
lods
mov
mov
les
out
mov
js
or
mov
mov
add
add
pop
sub
jmp
or
mov
icebp
xchg
add
jp
push
popf
data16
push
add
sbb
pop
xchg
add
push
sbb
pop
add
mov
push
push
lcall
add
push
add
cmp
add
add
dec
xor
test
fsubs
jno
add
add
lcall
add
add
add
cli
jns
scas
jp
xor
pop
xchg
add
inc
or
imul
cmpsl
js
cmp
pop
pop
aas
add
rolb
or
mov
add
sti
insl
imul
add
test
mov
fnstenv
add
push
sti
data16
insl
in
push
add
addb
dec
addb
stos
jnp
pop
das
filds
jnp
mov
add
fimull
dec
ljmp
push
add
add
insb
sub
cmp
add
jecxz
fistl
scas
pop
adc
arpl
repnz
lahf
xor
add
mov
inc
add
inc
popa
fwait
pop
incl
gs
add
stc
inc
pusha
add
add
scas
pop
imul
or
adc
sbb
inc
add
add
add
sbb
pusha
add
add
add
mov
dec
mov
add
dec
xlat
cmp
in
loopne
addl
push
and
sbb
add
add
jnp
daa
cmove
add
lret
outsl
dec
icebp
pushf
test
sbb
pop
ret
stos
clc
lock
sub
add
inc
add
jle
add
adcl
jg
add
add
mov
ret
les
je
fildll
mov
das
jo
cmp
add
add
daa
mov
imul
stos
stos
xchg
loop
test
ret
mov
cwtl
push
test
fisttps
rolb
ret
cmpsb
add
lods
cwtl
xchg
add
push
aaa
mov
rolb
icebp
inc
lret
icebp
bound
mov
sti
pop
out
jge
add
pop
data16
add
nop
add
add
pop
mov
lock
dec
out
mov
mov
xlat
movsb
add
jle
add
add
mov
xor
jecxz
pop
movsl
fidivrl
jnp
adc
fwait
adc
add
scas
bound
mov
add
clc
loopne
push
xchg
add
add
add
add
lods
mov
jno
pop
scas
cmp
and
jle
test
xor
mov
mov
and
in
mov
sub
mov
add
sbb
add
mov
fiadds
addb
add
add
ret
jmp
pop
add
mov
loopne
leave
lock
insl
sub
cltd
mov
js
add
add
cmp
add
cmp
test
aam
lahf
cmp
push
jb
inc
add
cmpsl
xor
out
add
add
mov
inc
xchg
add
add
fsubrs
mov
lahf
sbb
lret
dec
and
mov
inc
or
add
arpl
mov
add
nop
add
add
and
clc
aas
cs
add
pop
mov
add
add
stos
push
leave
sbb
fwait
jle
add
xchg
add
push
add
dec
or
sub
cltd
ret
add
roll
add
add
repnz
pop
movsl
xchg
fstl
xchg
add
add
sbb
add
mov
add
add
dec
insl
inc
test
pop
cltd
sub
jnp
cmp
push
sub
clc
mov
enter
push
frstor
fbld
fmull
jno
test
leave
int
add
or
mov
add
add
add
inc
add
nop
add
loop
repz
sub
mov
mov
jnp
mov
jnp
add
add
addb
jp
jnp
add
jb
std
test
cmp
xchg
add
add
add
add
mov
pop
fstpl
jle
add
addr16
xchg
aas
or
clc
or
add
add
nop
add
imul
iret
int3
fbstp
sbb
add
add
add
push
add
pusha
add
add
add
and
mov
jle
test
adc
scas
mov
mov
hlt
add
repnz
add
jne
cwtl
repnz
mov
gs
in
mov
add
dec
mov
add
mov
add
ja
jno
add
inc
fld
add
mov
pop
cmc
adc
jp
lds
pushf
mov
icebp
jno
add
xchg
add
or
xorl
add
cmp
xchg
add
std
xor
dec
rolb
insb
test
cli
pusha
add
ljmp
jb
and
mov
negl
nop
add
cmp
lock
xchg
fdivr
or
lahf
sahf
dec
cwtl
cmp
imul
cmp
add
add
mov
lret
pop
cltd
sub
ffree
rolb
stos
and
mov
add
addb
add
decl
add
add
outsl
cmp
xchg
add
mov
add
mov
fldt
and
mov
add
add
das
ss
mov
push
add
pop
adc
ds
mov
movb
add
shr
add
stc
dec
inc
add
stos
xchg
add
mov
add
add
mov
cmp
add
add
add
adc
popa
addb
xor
pop
leave
push
xor
in
cltd
push
push
out
rolb
stos
hlt
add
mov
cmp
dec
movb
std
xchg
and
mov
jae
add
popa
rol
lret
dec
mov
push
add
loope
add
nop
add
pop
stos
subl
add
or
insl
les
test
scas
lahf
clc
mov
into
pop
add
aaa
mov
pushf
mov
out
stos
rolb
sub
add
out
lods
pop
jg
je
add
mov
subl
add
add
jp
inc
add
out
sub
ljmp
mov
mov
pushl
sbb
push
add
testb
outsl
fisubrs
add
dec
add
add
leave
data16
ja
jp
push
mov
or
jle
lds
inc
inc
jp
add
mov
add
iret
iret
dec
pop
out
and
push
add
jge
adc
fstpt
cmp
or
gs
sbb
dec
mov
add
cld
addb
pop
faddl
sarl
pop
sbb
add
nop
add
add
cmpsl
mov
add
add
adc
adc
mov
push
add
push
aad
or
rolb
push
testb
enter
jbe
mov
jb
mov
pop
ss
add
mov
testl
sbb
add
mov
push
rcll
add
add
push
mov
pop
movsl
decl
adc
mov
add
push
mov
or
movb
ljmp
add
pop
mov
xor
nop
add
add
mov
sahf
mov
add
pop
lock
arpl
mov
adc
jg
das
popa
pusha
add
add
add
rolb
cmpsl
cs
cltd
cmp
cltd
mov
jae
int3
or
jp
add
lahf
lods
xchg
pop
pop
ret
and
mov
jg
push
add
xchg
pop
adc
mov
addl
mov
sbb
add
dec
je
or
add
and
mov
std
sahf
mov
add
cmp
jle
add
int
jp
mov
rcrl
sbb
add
icebp
ja
hlt
add
add
les
pusha
add
sbb
cltd
mov
sbb
add
pop
pop
add
mov
addb
add
add
