mov
rorb
mov
outsl
insl
push
add
test
add
jo
adc
jnp
jo
inc
jne,pt
movb
dec
pop
rolb
aad
add
enter
mov
add
mov
adc
fildl
xor
aam
cmp
bound
mov
xchg
xchg
cmpsb
add
add
sbb
add
mov
mov
mov
outsb
xchg
add
pop
jl
mov
pop
sahf
jo
roll
mov
or
loopne
mov
popf
jge
jl
add
ror
add
jge
jo
lret
les
out
and
mov
imul
jecxz
sub
test
aaa
out
jb
loopne
fnsave
sub
mov
and
pop
push
jecxz
add
dec
cmp
xchg
add
je
mov
enter
inc
mov
sbb
inc
scas
sub
add
sbb
and
addb
add
add
das
mov
loop
repz
add
pop
shll
std
sub
inc
leave
fisubrl
add
outsb
add
mov
add
test
movsb
add
sbb
into
mov
out
insb
xor
aas
mov
dec
sub
or
add
add
and
mov
jge
add
adc
add
rolb
add
jb
rol
lret
repnz
int3
push
add
or
adc
rolb
daa
and
add
sbb
loope
inc
jl
xorl
add
repnz
mov
es
mov
pusha
add
into
or
add
add
and
mov
push
and
mov
out
out
inc
add
insl
out
rolb
jge
xchg
cmp
mov
aas
push
es
add
cmp
addr16
fdivs
add
add
movl
add
testb
addb
add
add
jns
xlat
nop
add
push
stos
fdiv
add
mov
add
add
out
and
mov
xchg
loop
mov
cmpsl
dec
testb
ret
sub
and
stc
and
insb
data16
pop
int3
testb
test
in
daa
and
mov
pop
push
adc
add
cmpsb
add
in
movsl
fstp
ds
shl
add
popa
cmp
sahf
xchg
outsb
insl
insl
and
mov
adc
jge
lods
xchg
incl
mov
inc
xor
mov
cmc
adc
add
std
mov
xor
cmp
orl
mov
add
stc
lret
test
dec
pop
sti
mov
rolb
jnp
add
imul
mov
mov
xor
add
sbb
lds
test
out
cmpsl
pop
cmp
dec
int
cli
sarl
cld
aas
test
addb
jne
add
fiaddl
aas
cmp
add
scas
sbb
nop
add
pusha
add
adc
jb
pop
bsf
rolb
sbb
mov
out
js
cmpsb
add
sub
jae
cli
ljmp
insl
cmp
add
out
pop
cmp
int
das
insl
aaa
ret
nop
add
xchg
hlt
add
or
add
add
testb
add
mov
cmpsl
xor
xlat
mov
add
add
pop
scas
jl
mov
mov
fcompl
mov
pop
adc
add
and
mov
les
shll
add
add
pop
pop
in
push
add
inc
add
sbb
mul
add
shll
loop
cli
or
or
add
or
xchg
daa
lahf
sbb
add
jmp
pop
mov
add
sahf
fiaddl
push
jae
and
mov
pusha
add
je
negl
pop
mov
addb
das
cltd
dec
stos
jle
ljmp
movsl
dec
aam
adc
sbb
rolb
mov
mov
mov
and
xchg
add
add
mov
addl
mov
lock
aam
inc
add
sbb
xchg
adc
out
jbe
mov
adc
jbe
pop
pop
jb
xchg
in
mov
jmp
nop
add
mov
add
mov
cmp
mov
and
mov
add
or
sub
add
add
add
pop
je
lds
mov
bound
mov
add
add
pusha
add
add
arpl
ret
jecxz
jb
incl
movsb
add
pop
aam
inc
add
inc
sti
inc
loope
add
and
mull
mov
clc
mov
add
int
sbb
in
nop
add
or
testb
inc
sbb
add
testb
pop
fsts
jne
add
mov
add
ret
loopne
sbb
fldl
das
pushf
and
addb
mov
lods
jecxz
add
mov
pushf
add
cmp
leave
loopne
gs
pop
and
mov
mov
add
pop
pop
into
mov
pop
mov
call
dec
gs
ja
lcall
sub
push
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
jmp
jmp
add
add
aas
add
cs
or
lea
add
xor
mov
ja
data16
fcoml
ja
orl
add
aaa
add
add
add
out
iret
sbb
jl
ds
lea
add
add
pop
out
sbb
popf
add
add
add
push
loopne
out
mov
add
data16
aam
xchg
sbb
add
pop
dec
pop
movb
pop
rolb
xor
aaa
testb
fiaddl
das
lahf
aad
add
sbb
add
imul
add
jg
add
mov
jo
xchg
mov
sub
add
repz
aaa
sub
scas
add
mov
sub
and
pop
pushf
push
jge
in
xchg
add
lahf
push
and
add
xchg
xchg
add
mul
jns
add
sti
and
icebp
mov
std
pop
mov
add
sub
add
jne
pop
in
add
jns
pop
dec
push
add
call
add
mov
add
push
add
sbb
inc
add
repz
or
es
push
lds
or
mov
outsl
in
in
fistpl
add
add
jnp
aaa
inc
out
and
mov
push
push
cmp
stos
xor
test
in
dec
lods
mov
es
popa
daa
mov
loop
and
or
into
dec
fxtract
add
mov
movsb
add
scas
fcmovu
out
enter
in
add
sub
pop
call
jbe
and
mov
jge
add
mov
mov
add
mov
mov
outsb
pop
pop
shll
add
add
mov
xor
dec
mov
dec
arpl
push
rolb
cltd
inc
jbe
les
pop
or
xchg
cmpsb
add
add
add
add
pop
push
add
add
inc
add
ret
int3
mov
add
add
lahf
cld
push
add
mov
pusha
add
sbb
xchg
add
add
fnstenv
add
add
mov
sbb
pusha
add
cmp
fcoml
mov
rolb
and
dec
bound
mov
add
movsb
add
xor
inc
sahf
cmp
bound
mov
je
pusha
add
jb
mov
leave
adc
push
cmpsl
mov
add
xchg
add
add
mov
mov
stos
cmp
outsb
pop
dec
mov
hlt
add
add
add
push
add
repz
scas
mov
add
lcall
scas
mov
pop
jne
test
bound
mov
fsubrs
add
mov
fwait
or
rolb
push
cltd
jns
add
js
mov
jecxz
outsl
aam
cmp
cmp
sbb
and
mov
hlt
add
pusha
add
mov
loope
sbb
mov
or
mov
sbb
test
fiaddl
mov
add
push
mov
add
pop
or
add
add
mov
and
pop
divl
mov
mov
add
int
mov
xchg
cli
ljmp
sub
add
mov
dec
mov
lcall
sub
push
xchg
add
jge
push
add
cmpsl
aam
sub
mov
inc
add
mov
les
add
add
fstpt
ljmp
push
add
outsb
adc
fisubs
pop
mov
add
add
and
xor
cmp
test
push
add
std
stos
stos
test
rolb
and
movsb
add
add
sub
sahf
pop
or
subl
dec
jle
pusha
add
jecxz
inc
push
add
push
add
std
push
mov
dec
shll
mov
cld
adc
xor
lock
cltd
mov
mov
mov
sub
clc
lret
push
jns
or
ret
cmp
rolb
add
add
mov
jmp
add
pop
sub
scas
mov
rolb
cmpsl
pop
stc
js
inc
fistpl
add
mov
or
sub
je
movsl
test
xchg
dec
ret
aas
mov
push
add
mov
addb
loope
adc
add
dec
lods
daa
repz
push
add
mov
sarl
add
and
mov
add
xor
ja
sti
mov
add
add
mov
imul
inc
add
add
jle
add
push
test
and
mov
ret
scas
dec
sbb
rcrl
dec
orl
add
add
add
mov
lcall
add
mov
fldenv
or
add
jl
add
add
daa
add
lds
je
pop
push
add
mov
add
std
lods
pop
icebp
push
sbb
ja,pt
clc
xchg
pop
xchg
bound
mov
sub
push
pop
push
add
add
dec
dec
mov
adc
fidivrs
nop
add
add
pop
fildl
call
xchg
add
add
add
and
mov
add
das
pop
push
cmpsb
add
or
test
sub
cmp
gs
cmp
jnp
push
add
test
jg
int
add
add
outsb
ss
lret
scas
jl
dec
xor
sub
add
gs
mov
movsl
stc
adc
mov
dec
out
ret
data16
add
add
out
out
pop
adc
add
push
jns
push
ror
popf
das
addb
mov
add
add
add
fbstp
and
mov
push
push
xchg
mov
add
mov
mov
add
add
mov
repz
xor
push
pop
nopl
ret
adc
mov
scas
xchg
xor
or
cli
adc
mov
cmp
stos
or
add
add
repnz
mov
imul
push
push
inc
add
push
add
add
dec
imul
xchg
inc
add
pop
mov
add
je
inc
mov
mov
mov
lods
jne
daa
les
inc
add
mov
mov
mov
mov
xor
add
add
sbb
int
int
jb
lds
out
add
sahf
jbe
testb
add
add
sbb
sbb
or
and
mov
inc
fwait
push
add
add
fisubrs
in
xchg
jl
add
add
add
add
add
add
cmp
inc
add
sarl
inc
les
sbb
mov
add
das
mov
scas
rolb
in
lcall
push
scas
pop
mov
sbb
mov
lcall
push
add
adc
out
push
add
mov
add
add
stc
repnz
fidivs
add
idivl
add
jns
filds
cld
cs
add
popf
mov
push
jge
lea
and
mov
scas
dec
iret
dec
scas
or
fcoml
ljmp
shll
insl
mov
mov
add
out
jg
add
hlt
add
mov
add
add
loop
sub
fwait
je
mov
add
mov
push
popf
pop
cltd
repnz
dec
mov
add
je
inc
add
xor
and
in
mov
push
push
mov
rorl
scas
sbb
aaa
and
mov
adc
mov
jmp
mov
mov
lret
popa
mov
adc
jecxz
push
pop
rcll
ss
add
roll
fwait
cmc
xchg
push
add
dec
mov
adc
sahf
mov
jbe
sbb
fistpl
xchg
add
imul
rolb
outsl
push
pop
hlt
add
idiv
jnp
test
ud1
xor
xor
adc
pop
repz
xchg
push
inc
iret
pop
jecxz
add
add
movsl
and
mov
add
pop
adc
add
scas
jnp
jae
sbb
cltd
fsubrs
xchg
leave
jbe
les
lahf
ja
add
add
fwait
out
dec
push
add
sub
movsl
stos
ret
mov
pop
in
xor
mov
imul
jl
add
add
call
mov
mov
dec
ret
nop
add
add
add
xor
popa
cli
pusha
add
add
xor
sbb
or
sahf
pushf
pop
dec
jne
dec
push
add
dec
rolb
nop
add
repnz
add
data16
add
mov
xchg
push
add
xchg
add
fiadds
adc
decl
mov
jecxz
xchg
jo
movsb
add
add
add
lret
add
push
add
cmp
xor
add
push
add
cli
and
mov
add
test
push
mov
lods
cmpsb
add
xchg
inc
pop
jge
jp
or
or
lods
mov
dec
js
add
jae
add
cs
dec
stos
jns
sbb
ret
or
rorl
add
jecxz
push
ds
add
adc
pop
in
xchg
add
mov
dec
inc
add
outsb
mov
add
mov
xor
filds
jecxz
in
pop
xorl
xor
pop
lds
add
bound
mov
jno
outsb
daa
add
rolb
and
mov
lahf
fsubs
popa
sub
sbb
popa
or
add
add
jno
addb
pop
adc
jp
pop
pop
cmp
call
cmpsl
pop
jb
and
mov
sbb
mov
mov
dec
inc
add
add
aam
xchg
or
cmp
jb
dec
data16
js
jl
sti
hlt
add
arpl
pop
dec
ret
ds
jecxz
dec
inc
add
add
xlat
inc
or
cmp
add
pop
push
cmc
cmp
lds
addb
xchg
add
jge
outsl
orps
sub
add
iret
xor
add
xor
mov
out
add
mov
push
and
dec
inc
pop
shll
mov
ret
inc
aaa
in
xchg
jns
add
push
add
mov
adc
pusha
add
xchg
mov
add
nop
add
sub
sub
lds
push
lods
mov
mov
int
pop
and
mov
in
pushf
lds
push
ja
cmp
mov
add
rolb
test
sti
popa
imul
add
bound
mov
cmp
mov
sbb
sbb
jl
test
push
sbb
je
daa
mov
hlt
add
loopne
jg
pop
sbb
mov
lret
test
int
fwait
inc
add
in
sahf
or
cmp
mov
aad
fistpll
dec
aad
inc
add
loope
add
sub
ret
addb
add
add
add
outsb
pop
cmp
cmp
push
adc
inc
pop
jecxz
add
out
push
clc
lock
mull
mov
rcr
addb
add
pop
or
frstor
add
orl
push
add
add
stc
andl
sub
out
daa
xor
stos
inc
pop
jle
leave
and
mov
jg
imul
push
loopne
lea
je
pop
xor
mov
adc
mov
inc
shrl
jo
sub
add
das
cmc
fisubs
aaa
sarl
aaa
sub
xor
testb
dec
jns
cwtl
mov
out
lods
addb
test
push
add
mov
mov
pop
lea
lea
add
je
push
add
mov
xor
mov
mov
add
fscale
adc
sbb
testb
stc
or
add
pop
push
add
adc
sub
mov
xor
push
fimull
fwait
cmpsl
cli
les
push
add
add
or
add
data16
add
pusha
add
sbb
add
stos
aam
dec
addb
dec
lds
jns
add
fadd
push
pop
aas
testl
dec
inc
out
xor
aam
mov
add
push
pop
pop
daa
xchg
add
jmp
add
repz
add
add
add
ja
loopne
pop
in
ljmp
mov
add
mov
jo
jb
test
lahf
rolb
das
mov
pop
jmp
aam
mov
pop
lahf
loop
add
add
add
dec
out
xchg
cwtl
push
mov
add
or
shll
add
add
add
mov
xchg
aad
add
sbb
pop
scas
dec
mov
int
pop
jg
add
sub
push
add
add
jg
add
iret
test
imul
push
push
dec
addl
scas
insl
addb
dec
scas
dec
fwait
addr16
mov
or
add
or
sbb
call
add
xor
mov
sub
push
add
je
int
add
add
and
aam
add
add
data16
pop
cmp
adc
rolb
pop
mov
inc
mov
add
add
add
rolb
in
add
loop
rolb
or
push
lahf
outsl
xchg
add
fsubl
xchg
fcmovnu
add
jmp
add
xor
add
jne
xor
mov
lcall
add
add
mov
sbb
out
les
cmpsl
int
xchg
mov
jo
arpl
mov
add
jne
xor
sub
add
testb
stc
gs
add
out
orl
je
out
dec
add
and
mov
inc
out
dec
push
add
in
loope
loope
add
in
sarl
add
mov
jno
add
mov
jne
add
push
in
js
pop
and
lods
dec
sub
iret
nop
add
mov
jecxz
adc
loopne
repz
in
or
inc
add
loope
addb
adc
jns
in
test
push
add
sub
cmp
add
enter
add
or
dec
and
mov
out
add
repz
pop
mov
xchg
add
add
and
mov
add
adc
into
stos
repz
add
or
add
cmp
pop
arpl
lds
sub
add
mov
ljmp
pop
add
or
leave
add
test
mov
pop
inc
sahf
pop
xchg
add
int
add
test
or
nop
add
jmp
add
fimull
mov
pop
and
movsl
inc
add
mov
add
cmp
add
mov
add
push
or
inc
cmp
loop
add
loopne
roll
stos
cmp
add
aad
add
xchg
add
dec
int
pop
pop
mov
cwtl
add
mov
sti
adc
mov
xor
sbb
cld
xor
je
mov
jae
xchg
add
add
movb
movsl
add
sbb
mov
add
mov
in
je
stc
push
add
out
mov
add
mov
add
les
xchg
dec
pushf
cmp
cmp
cmp
test
pop
mov
xchg
sbb
pop
out
sub
out
mov
popf
xchg
add
dec
xor
test
ret
outsl
push
add
addb
add
xlat
or
pop
xor
inc
add
add
imul
mov
aad
fdivrs
ja
inc
pop
xor
inc
daa
testl
cmp
mov
insl
mov
add
add
add
in
addb
or
lcall
add
push
add
add
sub
add
add
ja
inc
scas
mov
out
xor
fsubl
add
sub
jecxz
add
xchg
push
aam
pop
rcl
add
ja
pop
push
mov
jb
pop
and
repz
outsl
cmp
add
ja
xchg
lahf
loopne
cmp
pop
vsqrtsd
add
add
and
mov
clc
in
pop
cltd
cmp
mov
add
push
mov
xor
adc
ret
mov
add
ljmp
add
jo
push
add
xlat
repz
add
or
mov
das
aam
hlt
add
add
sub
xchg
mov
lret
in
in
fistl
add
movb
insb
inc
sbb
lock
and
mov
pop
jo
jge
mov
movb
clc
cmp
mov
sbb
add
add
add
cmc
sbb
inc
add
pushf
ljmp
cmp
mov
jge
jnp
mov
mov
mov
dec
xor
push
addb
addb
add
data16
inc
add
jbe
ret
mov
insb
stos
das
movl
lea
add
stos
stos
mov
fnsave
add
mov
xlat
nop
add
add
loope
sahf
packsswb
in
pop
loop
lock
sbb
add
in
sbb
lods
push
loop
jl
add
inc
repz
xor
dec
lods
int3
das
add
mov
add
das
inc
jae
mov
push
add
inc
fdivrs
in
imul
std
dec
sub
clc
aad
loopne
inc
add
testl
add
sti
push
add
shll
xchg
in
sub
int
pop
negl
dec
ret
popa
bound
mov
rol
pushf
pop
movb
dec
add
testb
add
enter
clc
ret
out
out
cmp
hlt
add
and
jae
add
xor
or
fcompl
inc
add
cmp
imul
pop
push
add
add
mov
add
sti
push
rolb
xchg
add
add
inc
add
dec
in
fwait
pop
enter
xchg
out
popf
xchg
add
int3
popf
fdivl
into
adc
out
jecxz
cld
test
add
int
gs
mov
add
mov
adc
fnsave
dec
cltd
adc
push
push
add
add
push
add
imul
pop
add
outsl
rolb
stos
lret
and
mov
add
add
sub
sbb
cs
mov
lcall
add
loopne
rorl
push
add
lods
cld
mov
mov
les
xchg
add
jmp
xchg
add
and
mov
movsl
imul
xor
xor
mov
das
adc
sbb
add
movb
dec
lods
inc
leave
addb
add
mov
add
movb
push
dec
inc
add
mov
loop
mov
lods
rolb
std
sbb
aam
bound
mov
mov
or
add
mov
xchg
jo
adc
adc
cld
jecxz
xor
add
or
mov
add
mov
mov
gs
popl
add
push
add
enter
pop
pop
jo
dec
int3
daa
pop
ret
lods
fsubrs
push
rcr
out
and
xor
add
and
dec
lret
add
pop
and
xor
add
cwtl
and
mov
push
mov
add
add
jmp
add
add
aam
and
adc
and
mov
adc
add
aas
lock
mov
add
pop
jle
das
add
adc
addb
mov
and
ja
mov
add
jb
inc
leave
in
ror
jle
shll
add
jne
mov
add
ret
leave
push
add
bound
mov
add
and
add
imul
inc
add
out
cmp
lahf
fidivrs
jmp
add
mov
js
add
ja
add
xchg
add
mov
or
cmp
add
sbb
add
fcmove
mov
add
dec
inc
add
and
add
ret
add
mov
imul
pop
in
insl
incl
add
add
add
add
dec
pop
addb
add
je
imull
adc
loop
incl
outsl
js
testl
sbb
add
xchg
add
mov
dec
inc
add
repnz
stc
xchg
add
or
and
mov
bound
mov
mov
add
les
stos
lahf
push
leave
shll
adc
aas
jno
aaa
cmp
add
xor
imul
cmp
xor
jecxz
outsl
lods
lods
lock
int3
imul
jl
test
imul
pop
xlat
xor
add
jp
xchg
add
pushf
jbe
xor
cwtl
rolb
cli
fdivrl
add
mov
mov
add
mov
add
movsb
add
mov
and
mov
lock
icebp
mov
xor
add
out
dec
call
and
mov
arpl
xor
adc
stos
jae
xor
adc
mov
push
add
mov
add
popa
fistpl
cwtl
pop
or
imul
add
add
test
test
imul
imul
sbb
pop
fnsave
jb
dec
push
jmp
testb
jbe
add
lds
and
mov
fimuls
lock
pop
inc
add
inc
add
imul
sub
push
into
xchg
add
sbb
fldl
add
add
add
add
add
add
add
icebp
pop
stos
enter
fdivs
jge
jg
xchg
add
add
rolb
sbb
xchg
in
pop
push
mov
bound
mov
and
mov
add
stos
jle
mov
js
push
nop
add
leave
mov
xchg
je
fisttpll
pop
mov
inc
add
adc
incl
add
icebp
lcall
aas
test
rolb
pusha
add
add
lods
test
xchg
add
mov
cmp
sub
hlt
add
xchg
add
xchg
add
add
add
into
mov
cmp
inc
cmc
ds
add
add
cltd
dec
out
jecxz
add
jg
add
add
mov
lock
cmp
add
jg
add
add
add
mov
add
std
sbb
add
repz
mov
jb
iret
rolb
xlat
lcall
fmull
rolb
out
stos
jmp
mov
daa
movb
lret
lahf
jo
gs
xor
lock
add
std
add
mov
xor
pop
xor
mov
cwtl
ret
mov
dec
hlt
add
add
fdivs
add
jo
and
mov
jb
aas
pop
repz
insl
mov
bound
mov
add
sub
add
rolb
add
add
outsb
arpl
add
aaa
and
add
out
pop
sub
add
cmp
add
push
xchg
add
add
ud2
xor
loop
lods
pop
mov
or
fiadds
inc
jmp
data16
sti
mov
add
daa
mov
adc
or
mov
fsubrl
sti
add
out
addb
arpl
test
add
gs
mov
inc
add
les
sub
movb
xchg
add
add
push
test
out
popa
data16
add
popa
gs
or
out
repnz
popa
rolb
sub
add
mov
mov
adc
or
add
xchg
icebp
rcll
push
push
inc
fsubl
and
imul
repnz
jle
ds
add
xor
rolb
mov
push
add
and
push
add
mov
rorl
in
sub
pop
push
jecxz
lds
add
mov
add
add
jae
fisttps
add
mov
mov
ror
push
sbb
mov
add
xor
test
push
jbe
imul
addr16
mov
fldenv
add
ret
cmp
add
jo
les
mov
add
pop
sub
movsl
ljmp
xchg
add
add
adc
inc
add
add
add
sbb
add
add
cmpl
pop
add
pop
add
mov
xor
cltd
in
add
add
cmp
mov
mov
call
jg
xchg
push
movb
icebp
cmp
loopne
mov
lock
add
lahf
push
push
mov
fisubl
fldl
rolb
cld
das
push
xor
mov
add
add
mov
scas
adc
test
add
bound
mov
mov
add
jae
out
sbb
mov
enter
mov
mov
lea
add
add
nop
add
add
fbstp
add
scas
in
ficomps
xchg
mov
pop
sub
test
xlat
loopne
ret
dec
cwtl
pop
movsl
rolb
xor
mov
das
data16
add
mov
add
and
push
rolb
mov
out
pop
lock
mov
cmp
icebp
xchg
add
add
xor
lea
add
add
add
pop
add
fwait
sbb
jb
inc
add
sub
pop
sbb
push
add
add
lcall
lods
cmp
lock
push
add
add
mov
insl
sbb
add
mov
push
add
ret
push
add
aad
mov
cmp
xchg
xor
insl
jne
xlat
mov
fdiv
test
mov
xor
pop
insl
jo
sub
mov
xchg
and
stos
icebp
xor
jge
add
push
adc
push
add
out
and
add
and
mov
repnz
in
enter
add
add
mov
mov
gs
add
add
add
insb
aas
sbb
fidivrs
sub
inc
dec
idivl
add
add
cltd
loop
cli
and
add
add
sbb
add
ljmp
add
add
add
popa
int
add
add
add
stos
and
lock
cmp
fisubrs
ret
cwtl
out
xlat
cmp
loopne
add
add
add
add
out
lgs
add
mov
ja
cli
inc
sub
mov
mov
jnp
push
testl
xchg
add
movsl
loopne
addb
adc
add
add
mov
dec
jno
mov
lea
add
cmp
pushf
xor
repnz
jo
adc
xor
dec
pop
add
add
pop
out
data16
pushf
and
add
lcall
mov
movsb
add
add
out
lcall
pop
dec
mov
jae
cmpsl
cmp
cmp
imul
fnstcw
fucom
sbb
add
scas
pop
mov
add
inc
add
es
insl
push
mov
add
mov
jge
bound
mov
add
add
movsl
shll
inc
js
out
outsl
repnz
add
movb
add
add
mov
and
add
inc
add
lahf
arpl
add
movsl
cmpsb
add
popf
cmp
enter
addr16
mov
add
lret
mov
xor
add
add
add
add
dec
push
addb
dec
mov
add
sub
add
lods
fldenv
cltd
lea
xchg
outsb
in
add
insb
int
mov
mov
adc
ret
jg
or
add
inc
fldl
loopne
aas
xchg
add
cmp
mov
add
cmp
mov
sbb
cmp
adcl
mov
dec
cli
cmp
add
push
fisttpll
dec
mov
ja
imul
scas
sbb
add
add
add
leave
push
add
loopne
into
pop
loope
fstpl
cmpsl
inc
je
mov
jbe
pop
pop
adc
jns
jmp
add
pop
cwtl
xchg
fisttpll
cmp
add
out
add
xlat
push
add
and
xchg
add
xchg
add
add
add
mov
repz
mov
loope
add
jg
jae
add
sbb
inc
popa
outsb
mov
xchg
add
repz
add
pop
jge
std
addb
gs
lea
pop
pop
xchg
out
jg
ret
sbb
or
mov
test
sbb
jl
leave
sahf
push
shrl
xchg
add
add
jne
std
mov
fists
or
mov
mov
pop
test
jo
das
mov
add
cmp
adc
add
outsb
inc
push
bound
mov
or
nop
add
add
addr16
push
fnclex
add
mov
fildll
add
add
pop
lock
add
cltd
xchg
add
call
sbb
sbb
add
sbb
iret
outsl
call
add
add
add
sub
or
jmp
add
mov
add
xchg
das
or
mov
add
add
enter
mov
ljmp
mov
mov
add
mov
inc
add
in
adc
add
add
les
add
aas
loop
js
add
mov
push
add
add
push
and
imul
fcmovbe
add
add
mov
stos
test
sbb
push
or
add
add
mov
add
add
mov
popf
mov
imul
and
mov
dec
dec
push
mov
add
inc
popa
jb
test
jbe
cmpsl
sub
add
add
adc
int
sbb
push
add
xor
push
add
imul
fsubp
add
lea
fs
pop
lods
hlt
add
outsb
lret
add
lods
mov
mov
ljmp
popf
add
dec
js
mov
mov
push
sar
add
add
imul
add
add
lret
push
stos
push
cs
dec
jnp
adc
add
hlt
add
je
mov
add
mov
push
add
or
pop
and
mov
cli
jbe
dec
sahf
fdivrl
push
cmp
add
pop
nop
add
xlat
cmc
push
add
inc
mov
sbb
leave
mov
pop
sub
mov
jb
inc
cmc
pop
jp
add
loope
add
cmpsl
sti
ror
push
add
sbb
mov
cmp
add
mov
add
jnp
add
data16
add
mov
add
jge
add
popf
je
imul
cmp
popa
push
test
dec
sbb
mov
xor
pushl
scas
sub
add
mov
rorl
aas
jl
xor
pop
enter
cltd
hlt
add
sub
or
ret
test
out
out
sbb
xchg
jge
add
jmp
mov
lret
push
add
pusha
add
repz
fisttps
lds
sahf
pop
add
mov
xor
mov
ret
add
add
int3
add
popf
movl
add
int3
pushf
or
push
inc
add
mov
add
add
jbe
xchg
inc
add
jg
fimull
testl
push
addb
rorl
xchg
data16
add
jle
mov
xlat
xor
cmp
lea
and
mov
add
adc
mov
push
pusha
add
mov
inc
add
lret
adcl
add
add
sub
add
mov
add
jae
or
rolb
pop
aas
stos
repnz
mov
shll
sub
add
add
jle
gs
test
push
add
or
push
jmp
push
add
rolb
add
and
or
add
or
adc
adc
cmp
ja
sub
add
sub
mov
addb
pusha
add
test
sbb
fnsave
xlat
add
movsb
add
jno
inc
mov
ljmp
add
bound
mov
inc
cmpsl
movl
dec
add
sbb
sbb
add
dec
mov
add
cmp
sub
sub
sar
add
mov
cmp
mov
loop
inc
sbb
fcomi
add
add
popf
sahf
mov
add
add
mov
add
mov
aad
or
push
fistl
in
movb
sbb
mov
adc
sbb
add
adc
add
adc
xor
pop
repz
or
jb
popa
add
add
add
add
mov
ja
inc
add
in
and
mov
add
inc
addb
movsl
ljmp
lret
mov
mov
jne
stos
inc
add
mov
add
inc
add
andl
add
and
dec
add
jg
sbb
add
pop
icebp
mov
add
aaa
sbb
or
xor
mov
pushf
mov
stos
or
fdivr
add
mov
xor
testb
dec
dec
or
xchg
mov
imul
add
sub
insl
testb
add
sub
testb
popa
fistpl
add
pop
mov
add
add
cli
jbe
mov
add
testb
add
es
test
add
les
repnz
add
iret
mov
insb
or
jno
add
clc
cmc
cli
mov
loope
add
sti
mov
mov
add
lods
data16
xchg
add
sti
lea
add
mov
add
adc
push
mov
inc
cltd
xchg
add
add
or
inc
add
int3
sbb
mov
out
add
xor
or
cmc
or
add
jle
les
mov
adc
xor
pop
add
pop
jae
add
add
xor
xchg
std
imul
add
add
mov
cwtl
mov
add
mov
sbb
add
add
mov
lods
sub
push
add
adc
popf
jnp
jge
jns
inc
add
fcoms
add
fistl
test
mov
pop
pusha
add
add
fcoms
jp
dec
adc
pop
popf
stc
iret
add
in
repnz
sbb
rolb
push
add
add
push
inc
add
mov
sub
jecxz
lock
jge
cmpsl
mov
dec
stos
popa
adc
out
xor
sti
dec
mov
outsl
cmpsl
int3
hlt
add
add
push
add
sub
call
test
das
xchg
out
dec
mov
cmpsb
add
sbb
add
xlat
mov
cmp
mov
pop
sbb
lds
or
add
mov
add
ret
add
add
movb
rolb
inc
add
add
mov
mov
jg
push
movsb
add
popa
jle
mov
sub
push
xchg
push
add
dec
insb
daa
xchg
gs
mov
add
push
add
out
xor
je
dec
xchg
dec
push
jns
jbe
and
mov
xchg
mov
sarl
add
out
addb
mov
jae
xor
add
add
add
push
add
adc
stos
out
sbb
inc
jp
push
pop
arpl
add
mov
pop
cmp
add
inc
jne
lds
mov
add
lods
mov
add
add
popf
rcl
add
insb
sti
mov
into
or
in
xchg
and
mov
adc
movsl
popf
cmp
add
add
int3
jb
fstpt
adc
clc
and
xor
add
xlat
sti
adc
xchg
repz
repnz
popa
outsl
insl
push
add
insb
jecxz
dec
stc
fsts
pop
out
lock
add
fcoms
ffree
add
adc
mov
cmp
pop
pop
movsb
add
add
add
add
movb
or
das
mov
icebp
lcall
add
ret
inc
je
in
jle
add
cmp
pop
add
dec
mov
fiaddl
mov
mov
addb
data16
jg
lret
hlt
add
add
add
add
daa
test
push
add
add
call
dec
test
jne
in
jo
push
pop
test
add
add
push
les
add
stos
fcompl
rolb
add
mov
inc
lock
lea
mov
sbbl
scas
loop
stc
inc
add
add
nop
add
inc
add
sub
add
das
lret
enter
pop
sbb
add
add
add
cmp
add
lret
or
push
add
idivl
clc
sbb
loope
lea
imul
in
pop
fsubrp
imul
add
mov
lret
xor
sub
adc
ljmp
add
mov
addb
add
add
or
fcmovne
pusha
add
stc
mov
inc
testb
repz
shrl
and
add
add
inc
add
jge
jge
xor
add
add
add
xchg
add
add
inc
add
add
dec
mov
out
and
add
add
bound
mov
jo
cli
gs
addb
pusha
add
mov
mov
data16
das
mov
addb
add
pop
movb
cmp
add
cld
adc
dec
mov
dec
push
imul
mov
nop
add
mov
cltd
mov
bound
mov
lods
and
out
and
jecxz
and
stc
pop
jo
out
mov
adc
mov
sub
outsb
out
clc
movsl
imul
out
scas
dec
mov
mov
aas
data16
mov
add
xchg
loop
mov
add
add
lds
test
mov
repz
ljmp
push
add
out
add
inc
add
mov
sbb
add
mov
add
jl
add
out
rolb
adc
into
dec
and
and
add
sub
add
mov
addb
jne
add
add
add
and
movb
iret
pop
push
add
cltd
mov
mov
add
popa
into
mov
add
add
mov
xchg
add
call
in
clc
stc
pushf
and
mov
add
gs
mov
rolb
jns
popf
cmp
add
cs
fs
in
testb
iret
loope
outsl
add
pop
sub
push
add
les
mov
cltd
out
mov
jle
dec
je
push
mov
mov
push
add
add
add
loopne
push
xor
push
add
add
sub
jns
rolb
jl
sub
fidivs
mov
addr16
out
cmpsl
or
mov
mull
dec
ficoml
lock
enter
addr16
xchg
pop
add
test
pop
xor
mov
dec
and
mov
xchg
mov
push
add
cwtl
flds
add
xlat
addr16
sahf
rolb
test
cmpsl
ret
xchg
ret
lods
mov
lods
adc
mov
add
add
xor
data16
add
movsb
add
add
add
add
mov
int
add
mov
jp
cmp
mov
in
push
aam
in
jge
add
ss
pushf
jecxz
lahf
enter
aam
loop
or
pop
jae
push
add
aad
or
test
mov
lds
ret
add
scas
pop
dec
mov
flds
repz
sti
sbb
lock
cmp
sahf
cmpsb
add
test
mov
add
testb
fstpt
pop
xor
loop
inc
cmp
add
mov
sub
sub
std
ja
add
add
add
lock
add
fisubrs
pop
in
aas
xor
inc
add
test
mov
add
mov
mov
das
repnz
mov
mov
int3
mov
pop
push
add
add
add
inc
add
rolb
jns
add
push
ret
hlt
add
scas
xchg
int3
fsubr
outsl
adc
mov
js
cmp
cmp
add
stos
outsb
inc
addl
add
add
popf
ds
add
adc
add
jmp
iret
pop
pop
sbb
jmp
pop
outsb
loope
xor
xchg
jae
inc
add
add
into
movb
fidivrl
xchg
out
mov
mov
ret
add
push
or
add
mov
adc
lahf
jb
cmc
fnstsw
add
shll
add
add
in
mov
sbb
imul
popf
lea
add
xor
lret
insb
stos
inc
arpl
adc
pop
les
cli
in
add
mov
add
or
lods
mov
data16
cmp
test
sub
arpl
sub
mov
cltd
ficoml
cmp
mov
or
sbb
xchg
add
stos
pop
cltd
xchg
mov
test
add
hlt
add
adc
sbb
add
add
sub
mov
add
daa
daa
adc
leave
fdivr
xchg
adc
dec
stc
dec
lds
or
add
enter
dec
into
adc
xor
add
add
add
mov
add
test
stos
loopne
or
fwait
mov
fwait
adc
mov
mov
repz
mov
add
add
or
add
add
add
jo
mov
cli
and
stc
mov
dec
dec
rolb
cmpsl
push
add
add
pop
adc
outsl
and
mov
lret
pop
out
pop
in
sub
data16
sub
movsl
add
add
data16
pushf
sub
imul
add
rcll
aaa
sub
add
xchg
insb
pop
jle
add
fwait
inc
add
cmovo
mov
mov
outsb
ret
or
sub
cmp
inc
aam
out
jnp
add
xchg
add
in
push
add
add
add
push
add
sbbl
xlat
test
push
add
adc
out
cltd
mov
dec
imul
testb
pop
xchg
rolb
leave
xlat
jg
and
shl
add
add
cmpsb
add
sbb
add
mov
mov
mov
cli
push
add
pusha
add
xchg
rcll
push
add
sub
add
add
add
mov
repz
mov
add
add
xchg
add
scas
or
mov
aas
notl
add
pop
pop
inc
push
push
lret
mov
loopne
inc
sub
sub
or
xor
pop
stos
lods
nop
add
sbb
add
stos
xor
cltd
outsb
ds
insb
fimull
sub
add
popa
and
mov
mov
add
lods
sar
push
in
sbb
adc
or
add
out
dec
dec
push
lea
mov
mov
cmpsb
add
into
popa
jmp
xchg
add
add
je
fstpt
pop
ja
jp
add
rolb
push
out
enter
pushf
xchg
add
scas
fnstenv
cmpl
push
add
cmc
fs
in
addb
cmpsb
add
add
mov
pop
mov
mov
scas
pop
addb
movsl
mov
cwtl
xor
mov
jg
mov
add
lahf
clc
ret
cmc
mov
jle
add
outsl
adc
xchg
add
cmc
xchg
imul
lret
out
stos
cmpsl
add
mov
pop
xchg
addb
mov
pop
stos
daa
rolb
loopne
insb
leave
dec
movsb
add
sbb
sub
femms
pop
inc
adc
sbb
add
xchg
add
mov
mov
call
dec
movsl
shl
rolb
dec
les
ret
in
decb
out
xchg
jbe
add
or
add
addr16
add
jbe
fcoml
add
push
add
lea
add
imul
add
mov
cmp
lret
pop
out
or
mov
out
aas
xchg
xchg
add
lcall
cli
icebp
int3
or
dec
mov
testb
add
add
mov
add
or
outsl
jg
add
add
inc
cmpl
aaa
mov
addb
add
pop
push
adc
imul
inc
xor
nop
add
scas
push
je
sbb
lock
hlt
add
jmp
add
mov
push
add
xchg
cmc
scas
aas
insb
xchg
pop
aad
add
call
cmp
fwait
movb
add
sbb
add
add
daa
ja
push
jle
jae
add
out
add
add
dec
inc
add
xchg
in
scas
push
jmp
mov
sbb
push
sub
mov
lock
mov
add
adc
and
sbb
jns
xor
inc
lret
lds
mov
lods
bound
mov
push
add
add
add
mov
outsl
scas
loop
mov
push
jbe
popa
rorl
push
add
dec
pop
sbb
scas
icebp
xor
jno
jl
add
add
insb
pop
push
push
add
cwtl
loopne
js
pop
into
leave
mov
inc
add
add
dec
mov
xchg
in
popa
call
mov
add
mov
mov
mov
pop
push
add
mov
mov
cmp
jns
ficomps
jae
mov
test
sbb
cs
aam
inc
add
pop
add
arpl
into
pop
lods
sub
add
mov
add
add
in
add
inc
add
jge
jbe
dec
push
add
add
add
jb
in
loopne
loope
pop
fisubs
add
hlt
add
arpl
add
add
dec
das
mov
sub
add
cli
push
add
inc
add
add
add
insb
mov
jo
cmp
incl
and
add
push
ljmp
jo
jg
mov
add
int3
cld
les
imul
and
mov
jle
dec
ja
insb
jg
add
add
add
cmp
add
jbe
or
jns
add
add
cmp
add
fsubl
enter
dec
adc
adc
add
jmp
addl
fcmovb
add
push
add
add
cmp
fstps
sbb
mov
movb
add
mov
lret
add
mov
xlat
cmp
dec
fcomps
add
loop
cmp
ret
add
or
add
add
imul
shll
or
pop
sbb
aaa
cs
sub
xchg
add
add
mov
adc
test
roll
test
mov
add
dec
mov
inc
add
add
push
addb
add
mov
scas
mov
jne
add
mov
imul
mov
cmpsl
xlat
fbstp
add
and
dec
lods
imul
repnz
orl
fadds
add
in
in
mov
adc
test
mov
pop
ficompl
pop
add
add
inc
add
push
add
lea
testb
fucomi
add
adc
mov
bound
mov
in
pop
dec
pop
push
add
adc
add
add
push
ljmp
mov
test
pop
cmpsl
mov
mov
add
add
push
mov
cli
lret
or
imul
pop
adc
add
add
mov
imul
fstpt
push
add
fcmovnb
sti
lods
js
add
fsts
jnp
inc
dec
dec
js
mov
mov
rcll
sub
out
jb
fisttpll
add
cltd
sbb
adc
mov
add
in
gs
inc
add
mov
add
popa
pop
int3
lahf
add
leave
pop
sub
add
pop
adc
gs
pop
push
add
inc
imul
mov
jmp
loope
add
lods
sub
adc
lock
add
inc
add
mov
mov
rolb
ljmp
lods
pop
sub
pusha
add
push
add
mov
cmc
xchg
add
add
mov
loop
int
add
add
xchg
add
movb
mov
dec
push
add
daa
pop
out
add
add
mov
lods
insl
pop
out
lods
mov
pop
jge
popa
sbb
sub
jle
insb
repnz
cmp
bound
mov
mov
add
outsl
stc
mov
fucomip
push
popf
fdivl
addr16
add
out
sbb
jg
add
add
add
data16
xlat
call
jno
mov
adc
add
add
dec
or
out
imul
add
fmulp
dec
fldl
mov
push
sub
add
sbb
jp
bound
mov
add
add
xor
dec
and
mov
push
add
add
mov
js
add
movsl
pop
inc
jnp
add
subl
add
push
mov
gs
mov
sbb
mov
pop
push
pushf
mov
aaa
data16
add
cmp
insb
jmp
je
nop
add
xchg
sbb
add
sbb
mov
sub
mov
mov
nop
add
add
mov
xor
sbb
add
int3
sub
inc
add
mov
sbb
add
mov
mov
movsb
add
add
mov
add
jb
sbb
neg
and
mov
sub
mov
enter
shll
add
enter
iret
push
add
add
filds
push
pop
nop
add
add
push
rolb
pop
cli
lods
xor
jecxz
jbe
pop
push
add
mov
cmpsb
add
xor
daa
jae
insl
rolb
xchg
add
sub
add
inc
sub
add
add
add
add
add
pop
push
add
sbb
sub
add
mov
mov
or
mov
rolb
sub
lock
pop
les
mov
add
into
pop
pushl
add
add
les
add
mov
les
push
add
add
popa
add
jbe
iret
addb
mov
add
out
sbb
sub
shr
fidivrl
lock
add
imul
rolb
xor
mov
add
hlt
add
mov
pop
int3
loopne
in
dec
test
mov
add
mov
add
jo
jns
add
add
fwait
dec
gs
add
add
fidivrs
sbb
imul
xor
loop
daa
jl
arpl
add
sbbl
push
add
adc
lods
xchg
sub
or
scas
ret
pushf
in
add
addb
mov
lock
lods
data16
add
push
cmp
push
and
mov
pop
pop
jno
aad
mull
ficoms
movsb
add
xor
testb
pop
addb
xor
mov
add
mov
lea
in
or
addb
jb
push
xor
loop
pop
jae
add
mov
mov
out
add
adc
mov
add
cmpsb
add
lods
sub
add
sbb
jp
lea
jl
add
lcall
iret
xor
cltd
cmpl
push
add
lahf
clc
pushf
cltd
adc
sub
jmp
pop
inc
add
out
cmpsl
cmc
mov
add
mov
adc
imul
jns
dec
mov
ret
jno
pop
ret
and
call
add
loop
dec
mov
xchg
adc
cltd
pop
adc
mov
add
repnz
mov
adc
loope
dec
pop
inc
add
dec
in
add
hlt
add
add
shll
add
add
addl
add
add
mov
aam
rolb
sbb
iret
test
add
pop
je
ja
add
aas
and
mov
add
add
add
add
leave
fimuls
and
mov
add
cmp
imul
sti
scas
addl
icebp
mov
jmp
addr16
mov
in
pop
or
add
mov
ds
mov
sbb
addb
add
out
jnp
mov
sbb
add
add
add
cli
aam
ja
add
mov
rolb
add
add
sti
insl
out
add
in
iret
cli
call
add
call
add
mov
cltd
daa
mov
dec
movsl
div
add
pop
inc
sub
cmc
addb
in
and
mov
xchg
add
test
ja
rolb
inc
add
rolb
lods
xor
mov
mov
add
pop
and
mov
mov
xchg
add
add
dec
adc
pusha
add
ficomps
imul
lods
mov
jns
add
add
add
aas
test
test
fsts
pop
pop
and
add
rolb
sarl
xlat
or
pop
and
add
fbld
xor
inc
mov
add
mov
jae
mov
testl
sbb
sub
add
add
mov
add
stc
and
mov
mov
adc
mov
add
pop
add
mov
add
add
aaa
clc
jle
jno
xchg
mov
insl
stos
cmp
jmp
pop
dec
ret
sub
mov
cmp
xchg
add
add
add
add
add
filds
and
mov
lds
mov
adc
jne
add
or
loop
pop
addb
lods
push
xor
add
xor
jbe
movsl
mov
scas
leave
js
adc
cmp
xchg
lods
cli
lds
add
testb
daa
pusha
add
add
leave
call
test
stos
icebp
xchg
mov
pop
imul
add
test
add
out
jae
pop
out
and
xchg
decb
je
pop
fdivs
insl
mov
mov
add
push
add
add
xor
sbb
add
cli
push
add
mov
add
add
add
cwtl
mov
fwait
inc
and
mov
lea
lret
inc
sbb
jp
or
int3
arpl
sbb
out
add
add
stos
ljmp
jge
xchg
add
lret
adc
popa
dec
jle
push
add
mov
in
xchg
sub
sub
push
add
mov
pop
loopne
and
aas
pop
xchg
add
scas
mov
out
mov
mov
mov
test
notl
mov
lret
ljmp
jge
addb
test
xlat
xchg
lret
cmp
repnz
cmpl
mov
ja
insl
outsl
mov
std
pop
sbb
out
cmpl
dec
es
repz
or
add
mov
push
call
lea
movb
iret
dec
addb
add
adc
and
mov
sbb
mov
add
add
test
and
inc
push
imul
loopne
adc
jnp
test
xchg
add
mov
add
or
adc
xor
push
sub
jnp
inc
std
adc
sbb
movb
add
push
mov
mov
add
cli
mov
push
int3
pop
daa
jmp
fnstsw
mov
jg
add
xchg
add
int
pushf
lret
in
xchg
add
mov
add
fbstp
jg
xor
push
or
add
add
inc
add
dec
notl
cmp
js
mov
inc
push
or
add
lods
dec
xchg
add
xor
add
xor
mov
or
shll
jge
xchg
cmpsb
add
inc
add
mov
sbb
testb
pop
mov
iret
mov
sbb
data16
movsl
aam
and
add
mov
stc
push
mov
add
addb
lods
pop
sbb
add
push
mov
test
add
pop
sub
sub
mov
add
mov
cmp
jno
rolb
aam
ljmp
fptan
add
andl
add
and
add
xchg
sub
orl
add
push
add
xchg
add
dec
jbe
or
stc
fwait
xchg
dec
fimuls
jo
add
mov
mov
fsts
jg
xor
pop
jmp
mov
add
dec
sub
push
stos
xor
mov
mov
in
sub
xor
add
or
add
push
add
and
mov
add
add
lods
idivl
add
jnp
add
fisttpl
fidivl
addl
add
lods
push
cmp
add
add
jmp
add
mov
inc
add
add
inc
inc
add
xchg
addb
jl
int3
dec
pop
pop
decb
inc
add
jb
rcrl
mov
sbb
mov
dec
cli
iret
jl
movsb
add
add
jno
dec
pop
dec
xchg
repnz
jbe
jge
shl
into
in
arpl
pop
xchg
add
inc
sbb
jle
mov
add
adc
cli
movsb
add
aam
mov
push
add
aaa
sub
sbb
ds
inc
stc
dec
mov
sbb
stos
cmp
sub
mov
adc
dec
pop
movsl
or
jmp
mov
cmpsl
addb
test
adc
mov
std
pop
jge
out
mov
dec
jg
je
lret
leave
fisubrs
sbb
push
add
cmp
sbb
add
loop
push
pop
stos
test
imul
add
aad
in
sarl
ret
inc
add
ljmp
cmp
cmp
out
pop
ret
les
and
or
inc
add
add
add
sbb
hlt
add
add
mov
add
adc
add
add
cmpsl
movsb
add
pop
xor
jbe
test
add
or
testl
add
adc
mov
jl
pop
pop
xlat
pop
enter
rolb
inc
insb
xor
ret
adc
js
add
adc
cwtl
sbb
into
mov
add
add
xchg
scas
mov
sub
jp
add
cmp
add
ret
in
add
dec
or
or
adc
into
test
add
inc
xchg
mov
add
lock
arpl
jbe
dec
int3
test
mov
inc
in
add
ljmp
add
xchg
add
mov
xchg
add
mov
add
addb
popa
fdivrl
jecxz
mov
inc
add
loopne
xor
inc
or
cs
add
adc
cwtl
adc
or
add
lods
rolb
lods
int
andl
sbb
movb
sti
rol
aad
add
hlt
add
mov
pop
cwtl
cmpl
adc
and
jp
jp
mov
pop
movb
test
push
jno
les
fdivs
push
leave
and
mov
clc
pop
inc
add
lods
in
inc
in
mov
add
bound
mov
pop
or
add
sahf
or
int
add
iret
movsb
add
mov
data16
sbb
add
add
add
adc
inc
movb
add
inc
add
mov
mov
cmp
call
imul
mov
add
pusha
add
pop
dec
push
rolb
lods
sub
lahf
dec
sbb
jge
pop
repz
xor
outsb
imul
add
lods
test
cmpsb
add
and
inc
in
enter
add
or
clc
movb
xchg
mov
int3
push
add
dec
mov
add
mov
in
push
dec
repnz
es
add
add
cli
adc
cld
pop
loope
rolb
data16
add
add
inc
add
dec
jns
pusha
add
mov
xor
loopne
pop
jnp
das
sbb
add
push
add
loopne
xchg
add
xchg
add
add
add
je
mov
cmpsl
cltd
icebp
and
add
xor
stos
push
add
test
inc
imul
add
push
add
jbe
or
add
dec
and
add
add
adc
lods
jnp
adc
lods
mov
movsb
add
or
cmc
pop
mov
sbb
add
ret
adc
lea
fstp
lock
add
mov
add
sub
fisubrs
add
xor
mov
rolb
movb
loopne
icebp
rorl
repz
add
add
add
mov
add
lret
jmp
sub
sbb
xchg
add
mov
fsub
vpunpcklwd
xor
and
add
mov
xchg
sti
movsl
call
jo
sbb
add
mov
mov
rorl
adc
mov
in
test
add
push
pop
fiaddl
add
addb
into
aas
cwtl
pop
test
and
push
add
loop
in
adc
add
mov
sti
rolb
pushf
rolb
fwait
lcall
dec
cmp
les
pop
sbb
add
add
adc
test
adc
mov
or
lret
add
add
mov
push
insl
inc
add
loop
scas
sbbl
jecxz
add
add
mov
adc
add
lods
call
add
add
add
add
add
push
and
mov
lods
stos
mov
rolb
sub
pusha
add
mov
add
add
cmp
stos
xchg
dec
outsl
sbb
mov
sbb
add
xchg
add
mov
add
leave
js
stos
fsts
add
sbb
mov
inc
adc
push
or
in
dec
or
sub
add
add
inc
in
or
inc
add
add
mov
fsts
add
lock
add
insb
shl
loope
movb
and
dec
dec
push
loope
add
sub
data16
jle
ja
inc
xchg
in
dec
xchg
inc
mov
cltd
call
loopne
loopne
adc
imul
dec
rorl
js
fwait
imul
mov
nop
add
xchg
add
addr16
cmp
add
add
fwait
jecxz
imul
add
mov
scas
fadd
add
add
add
add
add
add
add
pop
into
jne
xchg
add
add
lock
push
jg
addl
mov
mov
pop
add
adc
movb
add
add
pop
add
and
xor
mov
sbb
jns
loope
jbe
movb
add
xor
mov
add
add
sbb
sub
mov
addr16
ret
fsubrp
cwtl
stos
inc
add
push
push
add
stos
loopne
loope
adc
mov
xchg
or
cmp
aaa
loope
cmp
add
test
jle
jp
fcomip
add
add
cmp
popa
lods
xor
xor
leave
jle
add
add
jp
aam
jmp
xchg
sub
add
mov
repnz
aas
in
sbb
pop
je
jmp
add
mov
add
xchg
mov
pushf
lea
test
nop
add
pop
sub
sub
add
mov
hlt
add
data16
mov
or
or
jno
add
fdivrl
inc
add
jb
and
cwtl
push
add
add
repz
inc
add
cltd
fwait
pop
push
add
repnz
cmp
inc
add
data16
out
iret
jbe
push
inc
nop
add
sbb
add
inc
add
jno
ja
add
sub
pushf
xor
add
jno
stc
rolb
pop
arpl
fldenv
add
adc
cli
ficoms
stos
hlt
add
mov
cmc
cmpsb
add
adc
push
popf
roll
mov
add
mov
push
add
incl
add
es
push
dec
rolb
pusha
add
fsubl
test
pushf
adc
mov
xor
add
stos
stos
add
mov
es
adc
adc
or
out
dec
mov
add
sbb
mov
mov
inc
add
add
roll
stos
mov
xor
fsubs
xchg
add
dec
leave
and
add
add
test
sub
add
mov
sub
add
add
xlat
clc
xchg
je
dec
flds
add
mov
mov
add
frstor
dec
mov
rcrl
add
insb
out
sbbl
push
cli
dec
cli
sub
adc
inc
pop
ret
mov
iret
xchg
sti
xchg
add
and
mov
testb
clc
fstpl
add
movsb
add
call
test
cmp
push
add
subl
xor
add
jl
cmp
incb
dec
push
jge
jg
mov
lcall
bound
mov
movsl
sti
mov
add
or
pop
inc
add
add
push
xchg
rolb
clc
je
cmp
add
jbe
jb
or
ret
push
add
add
loop
sbb
sub
add
or
outsl
in
mov
repnz
popf
mov
jecxz
or
cli
bound
mov
add
mov
sub
lahf
add
shll
sub
inc
add
testb
sub
mov
xor
cld
mov
stos
aaa
mov
aas
movsl
pop
inc
add
das
ja
add
mov
adc
add
add
dec
cmp
push
add
sbb
aaa
dec
mov
jp
pop
push
add
pop
in
lock
inc
rolb
add
inc
and
mov
sbb
popf
mov
and
fldcw
dec
aam
mov
adc
pop
scas
sbb
rolb
aaa
lahf
xchg
xor
add
add
jle
aas
mov
orps
xchg
jmp
sub
in
cli
push
add
push
arpl
movsb
add
psllw
mov
sbb
loop
mov
and
mov
leave
add
add
add
mov
add
xor
call
cli
lds
add
testb
add
int
mov
pusha
add
outsb
dec
inc
add
mov
add
mov
les
addr16
lods
xchg
inc
add
pop
fsubrl
jecxz
out
cltd
stos
push
daa
fisttps
or
sub
xor
leave
int3
cmp
push
add
rcrl
mov
sbb
in
pop
daa
pop
jne
add
add
mov
sbb
add
add
add
add
add
add
je
add
mov
push
add
add
xor
lods
in
mov
dec
jecxz
add
mov
xor
add
add
dec
add
fsubl
ljmp
mov
add
mov
adc
mov
lret
and
add
mov
add
stos
out
aaa
inc
sti
ss
mov
jg
xlat
jg
nop
add
std
push
add
jecxz
cs
movsb
add
mov
add
push
add
test
add
jns
test
test
out
lea
push
data16
jecxz
cmp
add
pusha
add
sbb
mov
int
xchg
xor
add
aam
inc
mov
mov
add
mov
and
into
daa
jp
mov
inc
add
add
add
out
sub
add
add
les
jbe
movb
in
mov
add
xchg
add
ret
std
sbb
xchg
jae
add
sbbl
mov
stos
lret
mov
ss
cmp
jp
add
add
pop
fwait
popa
inc
or
add
mov
jbe
sahf
rolb
mov
add
rolb
inc
or
mov
in
add
mov
and
in
mov
mov
add
push
inc
test
or
fmuls
lods
ficoml
push
inc
add
jno
add
mov
xor
leave
add
or
add
loopne
push
add
or
add
sbb
rolb
inc
lea
cld
js
add
js
les
and
add
in
add
dec
fwait
dec
or
out
inc
mov
add
and
dec
pop
or
shll
add
add
jne
sbb
add
call
sahf
cmp
in
xchg
and
in
mov
add
adc
cmc
lods
and
int3
addb
add
sbb
and
mov
mov
das
fsub
sub
mov
repnz
add
mov
xchg
dec
cmp
push
xor
jg
scas
imul
stos
jb
shll
add
add
mov
fcoms
pushf
pop
push
add
add
add
push
add
jb
dec
cmpsl
xchg
mov
js
pushf
adc
add
aam
out
rolb
pop
jns
add
call
nop
add
insb
js
in
cld
jle
add
add
in
xor
jb
push
push
jbe
push
add
mov
add
jns
add
jmp
repnz
add
jmp
cmc
mov
cs
lods
or
mov
add
dec
jnp
aas
cmp
in
adc
lds
mov
xchg
add
or
rolb
add
add
xchg
add
add
sub
mov
add
pop
testb
sub
add
add
rolb
inc
add
fdivrl
cmc
lahf
addr16
popf
push
add
add
popf
out
pop
inc
loope
mov
loop
add
mov
mull
adc
out
fists
loope
xlat
push
sub
mov
mov
dec
dec
popf
xor
add
sub
loope
fadds
add
movsb
add
add
stc
push
clc
ficompl
or
or
xchg
push
bound
mov
cmp
arpl
mov
inc
mov
or
or
shrl
lahf
stos
das
hlt
add
out
lds
push
arpl
jo
nop
add
jge
add
add
fldenv
popf
insb
cli
iret
pop
fiaddl
shll
scas
dec
dec
mov
and
repnz
inc
aas
mov
mov
jno
pop
ja
add
add
rolb
addb
pop
dec
cltd
flds
sbb
add
add
ljmp
add
sbb
add
xchg
jmp
pop
add
loop
jmp
ja
aad
hlt
add
add
out
add
cmp
mov
push
add
add
or
mov
inc
add
mov
mov
pop
jnp
mov
lea
add
dec
popf
add
add
mov
inc
push
add
mov
add
cld
rcll
mov
add
testb
add
add
dec
rolb
loope
dec
add
cmc
sbb
jp
add
lret
mov
imul
addb
add
jg
dec
mov
inc
jo
dec
ret
loope
aam
pop
and
xor
cli
loopew
add
leave
mov
add
dec
pop
andl
int
clc
sbb
add
push
fsub
jle
mov
sbb
aaa
lea
xchg
add
jns
lods
mov
adc
jp
add
jl
sbb
add
pop
push
add
and
sti
movsl
pop
add
data16
add
add
add
mov
add
xchg
add
mov
ja
and
testb
das
daa
dec
mov
xor
mov
scas
jmp
clc
inc
mov
movl
cmp
cli
cmp
test
test
and
mov
into
push
icebp
adc
adc
sbb
push
add
add
and
popl
add
dec
inc
add
add
rolb
dec
pushf
fdivl
add
pushl
ret
add
mov
xchg
add
rolb
das
pop
movsl
lods
scas
filds
addr16
mov
ja
add
movb
cwtl
int
add
mov
movsb
add
add
into
dec
dec
cltd
shl
sti
pop
dec
inc
add
add
adc
push
mov
jae
inc
addb
dec
out
push
lods
movsl
inc
insb
mov
ret
sbb
js
fwait
sahf
jno
lcall
aam
sub
mov
push
pusha
add
int
pushf
repnz
xchg
dec
addl
add
loop
sub
add
mov
add
jecxz
add
movb
add
aam
aad
nop
add
fcmove
popa
dec
lods
xchg
jecxz
jno
add
mov
add
add
pop
mov
sub
mov
jge
loope
iret
xor
xor
cltd
arpl
mov
sub
add
jns
sbb
mov
jecxz
cmp
int3
hlt
add
repnz
lea
add
bound
mov
out
add
out
jl
jbe
cmp
xor
push
and
mov
add
and
mov
jle
add
add
push
add
loop
jno
add
mov
sbb
cli
popa
insl
push
add
ffree
add
add
add
add
mov
rolb
jl
cmp
xchg
add
add
cmp
add
add
mov
add
add
cli
repz
aaa
ljmp
add
fnstenv
cli
pop
push
add
add
add
in
pop
rolb
mov
jbe
lret
xchg
add
inc
add
addb
pushf
and
mov
mov
stos
sub
sbb
imul
outsl
pop
push
add
inc
fwait
push
in
sahf
adc
push
repz
sbb
push
add
jg
add
ljmp
push
add
sub
lods
sbbl
aam
cmp
cmp
add
das
push
add
push
xor
sbb
lods
push
and
mov
aas
or
adc
xchg
dec
push
add
int
aad
enter
test
cmp
sbb
add
add
je
or
cmp
push
dec
xor
jl
ret
andl
lds
lcall
imul
add
mov
mov
mov
jb
sub
cmp
lods
iret
in
push
add
inc
cmpsb
add
add
repnz
add
aam
pop
iret
cwtl
je
add
push
push
fistps
out
outsb
aam
test
aam
gs
pop
mov
cmp
jg
hlt
add
inc
add
std
arpl
add
data16
js
mov
mov
sub
dec
ret
movsl
adc
jl
cmp
addb
add
add
mov
pop
lret
jge
pop
push
lcall
add
add
cmp
mov
mov
mov
jecxz
subl
add
add
imul
pop
lret
add
mov
into
mov
push
add
sub
fbstp
sbb
clc
mov
or
xchg
add
in
jg
fucomp
jb
aas
sbb
add
std
in
dec
or
add
add
paddusw
mov
pusha
add
outsl
inc
mov
sub
mov
add
add
pop
mov
push
jl
add
enter
in
dec
out
add
push
add
add
add
sub
lret
pop
in
sub
add
sbb
inc
and
add
mov
and
mov
add
rolb
mov
movsb
add
loope
add
in
cmp
cmp
inc
sahf
ja
add
add
scas
xor
add
mov
add
int3
lods
push
add
add
add
clc
inc
hlt
add
aad
add
cmp
or
cmp
out
jl
sub
movb
in
adc
add
outsl
mov
push
add
sbb
mov
dec
lret
lret
mov
add
add
mov
sbb
testb
cmp
pop
sub
add
and
add
fmulp
sahf
dec
xor
add
add
add
pop
dec
repz
add
add
addb
sahf
aad
inc
push
dec
add
add
stos
fdivrl
xchg
add
jmp
add
xchg
add
insl
inc
add
mov
add
fsubs
rolb
jge
add
mov
pop
dec
mov
mov
mov
add
add
add
mov
inc
add
xchg
push
add
mov
in
mov
stos
outsb
push
add
pop
xor
jo
sub
mov
add
xchg
stos
sub
and
mov
sub
in
repz
sub
lods
popf
xchg
mov
add
cmp
pop
lods
push
add
cmp
sti
pop
sarl
jo
or
loopne
bound
mov
add
std
idiv
pop
fidivl
add
dec
pop
fnstcw
loope
repnz
xchg
add
mov
lret
add
out
jo
enter
inc
mov
pop
fwait
leave
inc
add
add
movb
cmp
flds
add
insb
xorl
add
add
mov
test
mov
jns
add
jno
add
add
adc
outsb
repnz
outsl
test
fdivs
cmc
ja
imul
add
mov
add
mov
add
mov
mov
and
sub
mov
dec
xchg
add
mov
and
inc
add
les
add
ss
shl
mov
cmp
add
out
push
fcoml
add
das
cmc
push
add
add
mov
push
cs
cli
popa
dec
xchg
add
std
jmp
rorl
or
mov
out
mov
xchg
inc
lock
inc
add
add
add
je
adc
scas
jp
rolb
xchg
fiadds
add
dec
and
mov
inc
xor
mov
jl
add
add
addb
daa
shll
push
add
jmp
push
add
pop
cmp
stos
ja
out
out
out
and
insb
and
add
shll
xchg
add
add
fucomi
and
mov
dec
jnp
dec
stc
test
and
mov
add
sti
push
add
xor
mov
popf
jbe
xchg
pop
bound
mov
cwtl
jne
ja
pushf
mov
cwtl
push
or
add
add
cmp
add
and
add
outsb
adc
adc
test
insl
and
mov
jmp
add
cmp
add
popa
inc
add
or
mov
adc
dec
dec
mov
add
add
lret
outsb
fdivs
mov
test
ret
imul
add
lret
add
add
add
test
mov
xchg
cmp
jecxz
adc
push
fidivrl
movsl
ja
pop
sbb
mov
push
add
dec
add
outsb
mov
sub
inc
pushf
es
add
movsl
lds
add
test
add
sub
add
aad
fisubs
mov
out
dec
push
add
out
imul
add
jbe
add
mov
add
les
mov
cmp
addl
add
or
fistpl
iret
mov
movb
add
dec
test
add
sub
cmpsb
add
add
stc
nop
es
and
pop
add
push
stc
nop
es
add
mov
add
pop
call
stc
nop
es
adc
mov
add
add
add
add
nop
es
clc
jg
popf
test
nop
cld
nop
jmp
add
adc
add
sub
nop
es
adc
add
iret
or
adcb
add
add
pop
adc
rolb
enter
es
add
add
test
add
jo
fisttpl
rolb
xchg
ret
iret
add
add
fwait
push
stc
nop
es
and
pop
mov
push
mov
xchg
ret
add
add
and
mov
xchg
ret
add
out
inc
mov
xchg
xor
mov
push
mov
xchg
ret
add
add
sub
dec
dec
nop
cld
nop
jmp
data16
aam
add
clc
lea
stc
nop
es
sbb
test
mov
mov
mov
xchg
ret
mov
aam
dec
shl
stc
nop
es
add
pop
add
pusha
add
nop
cld
nop
jmp
ds
movb
call
stc
nop
es
sub
inc
add
mov
mov
stc
nop
es
add
add
dec
test
and
add
nop
es
add
xor
stc
nop
es
adc
add
add
adc
data16
jmp
cmp
ret
add
jl
add
add
es
add
add
add
add
add
nop
cld
nop
jmp
cmc
add
ss
pop
push
mov
xchg
ret
and
in
out
xor
dec
sub
es
pop
xor
mov
add
nop
cld
nop
jmp
adc
sbb
in
xor
nop
cld
nop
jmp
add
pop
add
xchg
je
lret
and
nop
es
dec
pusha
add
out
je
mov
es
add
add
cld
nop
jmp
pop
test
add
clc
sbb
popa
add
cld
nop
jmp
add
add
es
mov
add
rolb
add
inc
xor
stc
nop
es
dec
add
adc
aaa
shll
orl
nop
es
test
mov
cmpw
nop
cld
nop
jmp
data16
dec
add
cmp
nop
cld
nop
jmp
jg
sldt
lret
aam
xchg
stc
nop
es
pop
outsb
pop
imul
insb
pusha
add
stc
nop
es
dec
insb
add
jmp
stc
nop
es
xor
add
add
mov
scas
mov
stc
nop
es
add
add
add
jne
nop
cld
nop
jmp
sub
insb
fwait
cmp
inc
lret
inc
add
insb
xor
mov
stc
nop
es
dec
add
add
cmpsl
cwtl
shr
stc
nop
es
aam
lret
add
insb
test
inc
mov
jb
mov
fwait
data16
add
add
mov
add
test
cld
nop
jmp
and
add
insb
les
add
add
rolb
nop
es
and
add
add
lahf
add
push
mov
xchg
ret
test
rep
stc
nop
es
add
adc
data16
int3
push
mov
test
add
imul
fldz
loop
or
clc
stc
nop
es
add
add
add
jge
push
push
mov
xchg
ret
out
add
add
lret
pop
nop
cld
nop
jmp
adc
pusha
pop
and
lret
cmpsb
add
es
dec
adc
add
cmc
add
and
stc
nop
es
add
add
push
add
out
call
stc
nop
es
test
and
shl
add
mov
nop
cld
nop
jmp
add
cmp
push
mov
xchg
ret
arpl
or
jg
nop
cld
nop
jmp
add
pop
int3
pop
push
mov
xchg
ret
add
jl
in
les
mov
push
mov
xchg
ret
aam
sti
add
ds
add
nop
es
add
add
mov
das
mov
stc
nop
es
pusha
add
jge
sub
push
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
add
out
add
push
stc
nop
es
ds
sub
add
add
add
push
nop
cld
nop
jmp
lret
mov
sti
push
nop
cld
nop
jmp
pop
add
add
out
push
nop
cld
nop
jmp
add
cmp
add
mov
stc
nop
es
add
add
add
add
nop
es
add
add
les
mov
xchg
ret
pop
adc
add
daa
add
stc
nop
es
les
cmp
inc
cmp
nop
es
sti
add
in
sbb
addb
inc
jge
add
stc
nop
es
add
add
aam
lcall
nop
es
movsb
add
add
mull
push
dec
adc
jmp
cmp
ret
xor
repnz
mov
stc
nop
es
add
dec
add
add
adc
ds
nop
cld
nop
jmp
add
dec
add
mov
lds
nop
es
jl
add
aam
bound
mov
mov
sar
mov
xchg
ret
sbb
add
mov
nop
cld
nop
jmp
jge
ss
outsb
movd
testl
or
add
add
add
add
mov
add
add
nop
es
add
and
es
clc
movsb
add
add
stc
nop
es
insb
adc
adc
add
les
xor
leave
nop
cld
nop
jmp
add
add
dec
popa
stc
nop
es
xor
add
add
dec
clc
movsb
add
mov
stc
nop
es
lret
add
iret
push
push
mov
xchg
ret
pop
lret
add
add
xor
jbe
mov
aam
lahf
push
nop
cld
nop
jmp
imul
add
jl
push
push
mov
xchg
ret
add
add
add
add
pusha
stc
nop
es
lret
add
mov
add
mov
cld
nop
jmp
ltr
pop
adc
xor
push
nop
cld
nop
jmp
add
add
add
add
cs
stc
nop
es
add
add
fwait
add
push
cmp
mov
xchg
ret
cmp
mov
add
and
pop
nop
cld
nop
jmp
add
test
add
sti
add
dec
clc
dec
inc
stc
nop
es
adc
rclb
add
inc
movsb
pop
add
add
int3
and
stc
nop
es
add
mov
add
nop
cld
nop
jmp
jg
pop
iret
add
mov
xchg
ret
add
in
adc
add
inc
add
dec
mov
mov
nop
jmp
dec
inc
add
sub
es
arpl
test
stos
call
stc
nop
es
aam
add
add
nop
es
and
add
add
scas
push
stc
nop
es
mov
pop
jl
movsl
lcall
mov
add
add
cmp
add
inc
add
cld
nop
jmp
add
mov
or
cld
nop
jmp
dec
test
jg
add
in
adc
mov
xchg
ret
ds
test
dec
add
cmp
stc
nop
es
add
add
fwait
mov
stc
nop
es
add
clc
insb
ss
mov
stc
nop
es
add
mov
xchg
leave
xchg
stc
nop
es
add
add
iret
add
add
push
mov
xchg
ret
add
outsb
and
mov
nop
es
mov
add
pop
jmp
stc
nop
es
lret
add
add
add
or
decl
test
and
push
mov
xchg
ret
add
imul
mov
popf
stc
nop
es
imul
rolb
add
stc
nop
es
data16
punpckhwd
push
pop
mov
stc
nop
es
mov
nop
add
add
nop
cld
nop
jmp
sub
mov
mov
cmp
mov
xchg
ret
out
adc
add
lretw
mov
stc
nop
es
add
in
test
add
cmpl
nop
cld
nop
jmp
add
sub
sbb
cmp
dec
std
call
add
pusha
imul
cmpb
test
add
jl
daa
ffree
jmp
jb
insb
add
sub
sti
adc
jb
add
add
adc
ss
xor
stos
jne
stc
nop
es
pop
pusha
add
stc
nop
es
adc
add
jno
ret
fwait
add
add
ss
add
adc
add
cmp
jb
dec
pop
stc
nop
es
add
outsb
sti
mov
popa
add
mov
xchg
ret
test
push
add
sbb
repz
nop
es
shld
push
stc
nop
es
add
aam
ss
aam
or
xor
add
stc
nop
es
clc
add
cmp
nop
es
add
movsb
dec
jge
test
push
mov
add
add
push
loope
out
dec
add
pop
add
mov
or
es
cmp
mov
nop
es
add
imul
decb
jb
add
add
add
add
stc
nop
es
dec
mov
xor
adc
xor
scas
xor
stc
nop
es
lret
add
jg
test
add
stc
nop
es
add
add
imul
add
stc
nop
es
add
std
add
stc
nop
es
aas
add
add
mov
mov
jecxz
add
test
add
stc
nop
es
pop
add
stc
nop
es
mov
add
aam
pop
mov
push
mov
xchg
ret
cmc
iret
add
xor
iret
mov
stc
nop
es
aam
les
pop
test
or
push
out
inc
add
test
mov
nop
jmp
out
add
imul
jne
nop
cld
nop
jmp
aam
mov
add
pop
mov
push
mov
xchg
ret
iret
insb
add
mov
rolb
push
stc
nop
es
add
dec
jl
add
ljmp
sbbb
add
inc
add
add
lea
nop
cld
nop
jmp
ds
add
adc
nop
es
jg
add
add
push
stc
nop
es
dec
aas
dec
add
imul
mov
adc
nop
es
add
mov
aas
adc
adc
add
add
test
add
ffree
stc
nop
es
add
mov
jmp
push
mov
xchg
ret
sbb
add
push
stc
nop
es
adc
xor
aas
add
sbb
nop
es
aam
xor
xor
cs
nop
es
add
add
mov
add
stc
nop
es
add
mov
cmc
pusha
add
es
mov
add
add
mov
ljmp
add
lret
cmc
push
leave
nop
cld
nop
jmp
aam
sub
out
pop
aam
add
stc
nop
es
movups
adc
imul
das
jmp
stc
nop
es
out
add
push
add
mov
stc
nop
es
add
add
add
add
sar
es
mov
add
sub
push
mov
xchg
ret
imul
add
jae
stc
nop
es
pop
add
aam
and
dec
mov
nop
cld
nop
jmp
outsb
sti
cmc
add
es
add
jl
add
pushl
push
mov
xchg
ret
movb
mov
bound
mov
stc
nop
es
add
adc
mov
or
nop
es
aam
mov
mov
es
add
ds
and
or
es
inc
and
mov
add
mov
add
mov
xchg
repz
add
mov
insb
sub
nop
es
aas
add
outsb
aaa
mov
pop
push
mov
xchg
ret
jge
dec
add
testb
push
stc
nop
es
aam
xor
sbb
add
nop
es
add
mov
jle
dec
outsl
popa
fs
nop
es
data16
add
sub
mov
add
nop
es
add
adc
mov
nop
es
add
and
add
nop
es
add
test
mov
add
hlt
inc
add
add
add
inc
or
nop
es
add
add
mov
add
add
stc
nop
es
add
add
mov
cld
nop
jmp
pusha
add
jge
xchg
and
ret
pop
rep
stc
nop
es
adc
add
rep
push
mov
xchg
ret
lret
pop
add
insb
aas
lahf
jne
stc
nop
es
in
imul
stc
nop
es
add
add
dec
mov
stc
nop
es
add
cli
push
stc
nop
es
add
add
test
cmpw
stc
nop
es
add
add
xchg
add
adc
nop
es
movb
add
stc
nop
es
inc
add
add
test
enter
jb
sub
adc
jg
dec
mov
push
mov
xchg
ret
movsb
out
add
sbb
push
mov
xchg
ret
aas
xor
fmull
es
imul
add
mov
stc
nop
es
movb
movsb
rolb
jne,pt
stc
nop
es
add
dec
add
nop
cld
nop
jmp
adc
les
add
pop
push
mov
xchg
ret
add
and
imul
add
add
sub
test
jmp
fiaddl
xchg
ret
add
add
push
stc
nop
es
test
add
adc
imul
jb
jge
xor
lret
push
add
pop
push
stc
nop
es
add
add
pop
adc
insb
sti
subl
nop
cld
nop
jmp
movb
add
sub
es
add
pop
add
jb
test
pop
lret
ds
call
stc
nop
es
inc
mov
sti
stc
nop
es
mov
dec
imul
out
out
clc
stc
nop
es
add
xor
add
loop
nop
cld
nop
jmp
pusha
add
ds
xchg
add
mov
stc
nop
es
sub
add
add
or
in
decl
incl
pusha
movl
xchg
add
aad
pop
pop
mov
stc
nop
es
add
and
add
insl
sub
nop
cld
nop
jmp
lret
add
test
and
stc
nop
es
out
add
add
add
nop
es
insb
add
jl
lret
nop
jmp
add
jg
add
add
nop
es
add
push
add
je
and
mov
add
nop
es
add
add
nop
add
pusha
add
sbb
inc
add
pusha
ss
inc
add
mov
nop
cld
nop
jmp
and
add
add
or
nop
es
add
add
mov
rcll
inc
or
mov
xchg
ret
add
add
add
call
stc
nop
es
in
xor
add
ss
add
fwait
adc
adc
mov
std
rcrl
mov
xchg
add
add
xlat
jne
movsb
add
es
add
cmc
dec
add
xlat
cld
mov
push
mov
xchg
ret
mov
test
test
stc
nop
es
mov
mov
nop
cld
nop
jmp
xor
add
push
mov
ret
push
jns
push
outsl
xor
sahf
loop
repz
es
dec
add
add
test
pusha
push
mov
xchg
ret
adc
mov
sbb
jb
inc
add
sub
add
add
mov
push
mov
xchg
ret
add
add
nop
es
add
add
add
clc
dec
ja
stc
nop
es
cmc
mov
adc
pop
add
add
add
jno
push
nop
cld
nop
jmp
test
jne
lret
stc
nop
es
add
xor
divl
nop
cld
nop
jmp
cmp
add
mov
mov
jb
sub
ret
add
add
mov
mov
stc
nop
es
add
add
mov
pop
call
stc
nop
es
add
dec
sub
add
push
push
mov
xchg
ret
inc
adc
adc
adc
or
test
sldt
stc
nop
es
add
add
popa
add
nop
es
adc
pop
add
adc
pusha
push
mov
xchg
ret
add
and
add
mov
xchg
ret
aam
and
ds
jge
push
mov
xchg
ret
xor
and
pop
add
stc
nop
es
adc
add
xor
add
fiadds
add
nop
es
add
mov
dec
mov
stc
nop
es
add
jge
push
mov
xchg
ret
adc
mov
add
jne
nop
cld
nop
jmp
dec
mov
push
mov
xchg
ret
cmp
aam
add
stc
nop
es
add
test
mov
and
addr16
inc
adc
mov
xchg
ret
add
aas
add
jne
add
push
mov
xchg
ret
imul
insb
imul
mov
xchg
ret
add
add
add
ljmp
jl
add
repz
nop
es
lret
pop
adc
and
sbb
stc
nop
es
and
and
add
add
nop
cld
nop
jmp
data16
add
add
jns
dec
cmp
nop
es
add
iret
add
cmc
push
add
add
stc
nop
es
adc
xor
and
push
mov
xchg
ret
in
add
imul
add
insb
pop
stc
nop
es
arpl
test
add
aas
add
pop
stc
nop
es
add
ret
adc
add
add
stc
nop
es
and
add
push
add
cld
or
jmp
add
add
int
andl
jmp
out
in
inc
imul
jne
push
mov
xchg
ret
out
cmc
add
cmpsb
add
mov
nop
cld
nop
jmp
cmc
mov
stc
nop
es
clc
add
dec
lret
or
iret
or
sbbb
sti
add
pusha
add
lahf
mov
stc
nop
es
lret
cmc
jg
mov
mov
xchg
ret
out
test
add
jge
mov
stc
nop
es
pop
add
add
push
mov
xchg
ret
outsb
add
add
add
stc
nop
es
add
mov
jb
stc
nop
es
jg
add
es
dec
add
add
cmc
add
mov
xchg
ret
insb
jg
in
add
push
nop
cld
nop
jmp
add
dec
add
lret
add
push
mov
xchg
ret
aas
add
add
add
nop
es
add
add
pusha
add
stc
nop
es
mov
add
jbe
sub
cld
nop
jmp
add
and
jge
out
mov
push
mov
xchg
ret
mov
add
nop
inc
add
and
and
pop
add
add
out
inc
add
add
lret
sbb
repz
add
add
add
sub
push
stc
nop
es
sub
add
pop
imul
push
mov
xchg
ret
pop
insb
sub
add
mov
stc
nop
es
add
mov
es
adc
add
mov
stc
nop
es
add
arpl
add
stc
nop
es
pop
add
add
push
call
stc
incl
test
stc
nop
es
add
add
push
mov
xchg
ret
add
pop
add
mov
jb
ret
add
add
add
add
mov
stc
nop
es
pusha
test
aam
mov
xor
add
nop
cld
nop
jmp
add
add
add
mov
stc
nop
es
add
add
and
jae
cld
nop
jmp
add
add
stc
nop
es
add
test
add
lock
add
jge
adc
add
sub
nop
es
add
add
sub
mov
stc
nop
es
arpl
jle
or
push
mov
xchg
ret
add
add
stc
nop
es
clc
add
sti
and
test
call
stc
nop
es
add
add
xchg
add
jae
es
ds
add
nop
cld
nop
jmp
cmc
add
pusha
adc
pusha
sub
bswap
inc
add
pop
adc
movsb
pop
xor
push
mov
xchg
ret
add
add
jl
test
call
jg
ret
add
ret
fists
orb
ljmp
add
test
pop
rolb
mov
pushf
int3
inc
add
dec
add
add
les
add
mov
stc
nop
es
pop
add
sldt
adc
lret
mov
nop
cld
nop
jmp
add
aas
in
lret
mov
xchg
ret
mov
add
add
pop
xchg
add
addb
add
add
aam
mov
stc
nop
es
add
dec
and
stc
nop
es
add
dec
in
icebp
stos
mov
stc
nop
es
add
adc
xor
push
mov
xchg
ret
lret
adc
and
aas
dec
or
stc
nop
es
mov
add
mov
stc
nop
es
aas
inc
add
add
mov
nop
cld
nop
jmp
dec
test
add
add
mov
sub
jb
inc
add
test
and
add
nop
es
add
mov
nop
cld
nop
jmp
ds
mov
repnz
cld
nop
jmp
dec
add
add
add
imul
add
and
add
adc
sub
add
in
jmp
pop
and
stc
nop
es
xor
add
jge
or
mov
stc
nop
es
pop
sbb
add
push
mov
xchg
ret
les
mov
cld
nop
jmp
add
ss
add
addr16
mov
cld
nop
jmp
add
add
decb
es
lret
add
psllq
ljmp
mov
pop
stc
nop
es
insb
dec
cmp
add
add
add
mov
cmpsb
add
enter
jb
add
add
mov
stc
nop
es
insb
add
jl
mov
stc
nop
es
add
add
sub
push
mov
xchg
ret
out
mov
mov
in
stc
nop
es
add
add
push
stc
nop
es
add
insb
add
and
jl
dec
sub
push
mov
xchg
ret
add
add
mov
stc
nop
es
movsb
sti
outsb
dec
add
add
ss
nop
es
add
adc
dec
jg
cmpsb
add
push
stc
nop
es
add
clc
adc
pusha
stc
nop
es
add
add
in
test
mov
push
nop
cld
nop
jmp
les
add
pusha
iret
test
test
stc
nop
es
add
aas
add
nop
cld
nop
jmp
add
add
out
movsb
insb
and
cld
nop
jmp
aam
mov
add
nop
es
adc
insb
fwait
add
fisttpl
test
nop
es
sldt
xchg
lcall
andb
jl
add
imul
xchg
ret
add
fwait
add
scas
mov
nop
cld
nop
jmp
sub
add
fmull
cld
nop
jmp
pop
sub
dec
pop
cmpsb
add
ror
push
push
mov
xchg
ret
add
fwait
sti
clc
test
cmp
popa
add
cld
nop
jmp
les
test
inc
testb
mov
stc
nop
es
add
add
jg
pop
jmp
clc
add
cmc
incl
sbb
ret
pop
xor
add
or
stc
nop
es
add
add
or
add
out
incl
add
mov
push
mov
xchg
ret
insb
out
add
xchg
lahf
add
stc
nop
es
jl
add
push
add
stc
nop
es
outsb
out
and
les
stc
nop
es
pusha
outsb
sub
add
or
add
lret
mov
add
add
stc
nop
es
jge
insb
adc
add
jmp
nop
cld
nop
jmp
add
add
test
or
es
add
add
nop
es
insb
and
and
inc
fsts
mov
xchg
ret
add
aas
add
add
jg
stc
nop
es
out
add
xchg
xor
push
pusha
add
push
add
stc
nop
es
pop
fwait
add
add
push
add
nop
cld
nop
jmp
dec
and
add
push
add
push
mov
xchg
ret
add
add
add
add
add
push
mov
xchg
ret
add
mov
fwait
xchg
xor
add
push
mov
xchg
ret
ret
adc
add
out
add
stc
nop
es
adc
cmc
add
mov
nop
cld
nop
jmp
add
add
imul
pushl
push
mov
xchg
ret
add
add
add
add
pusha
stc
nop
es
fwait
ss
mov
fisttpll
mov
adc
nop
es
add
add
test
mov
stc
nop
es
add
add
addb
mov
push
mov
xchg
ret
add
dec
pop
add
or
xor
add
stc
nop
es
add
push
add
add
call
sub
add
add
mov
call
or
add
add
rep
nop
cld
nop
jmp
test
add
or
jmp
add
add
push
stc
nop
es
imul
ds
mov
push
mov
xchg
ret
add
sti
add
add
clc
cwtl
add
add
add
add
add
lsl
stc
nop
es
add
add
add
add
lods
push
mov
xchg
ret
add
sub
mov
xchg
ret
add
ret
test
add
std
pop
nop
cld
nop
jmp
aam
add
add
imul
and
pop
out
add
mov
add
pop
add
stc
nop
es
movsb
iret
dec
test
add
cli
call
stc
nop
es
add
add
nop
jmp
add
mov
add
stc
nop
es
add
sbb
add
stc
nop
es
and
aas
add
add
leave
mov
stc
nop
es
jge
add
repnz
testl
roll
add
add
mov
es
add
adc
ret
adc
add
push
mov
pop
add
repnz
add
clc
add
lods
add
adc
test
inc
add
add
out
movsl
imul
stc
nop
es
sbb
lret
mov
cld
nop
jmp
aam
add
and
data16
add
mov
push
mov
xchg
ret
pop
jge
add
aam
or
mov
adc
nop
es
xor
adc
lret
stc
push
mov
add
pop
add
xor
add
push
fs
test
popf
mov
push
mov
xchg
ret
str
add
jno
add
cmp
test
nop
es
add
pop
pusha
add
nop
es
insb
add
pop
test
int
popa
add
mov
xchg
ret
add
inc
add
out
in
inc
add
add
aas
pop
add
push
add
mov
push
mov
xchg
ret
add
add
dec
xor
jae
je
stc
nop
es
and
mov
xchg
ret
add
test
add
insb
adc
mov
cld
nop
jmp
add
pop
dec
dec
add
fistl
mov
xchg
ret
data16
add
add
push
cmp
nop
es
mov
pop
sub
clc
stc
nop
es
pusha
test
and
insb
mov
mov
xchg
ret
data16
add
cld
nop
jmp
add
add
add
push
push
mov
xchg
ret
ret
add
add
add
add
fdivrp
inc
add
mov
add
stc
nop
es
add
pop
mov
cld
nop
jmp
add
test
out
lret
mov
movzwl
nop
cld
nop
jmp
add
data16
data16
jo
addb
push
sbb
in
add
popf
fnstenv
add
add
stc
nop
es
add
imul
mov
je
stc
nop
es
and
aam
stc
mov
stc
nop
es
out
sbb
add
add
add
cld
nop
jmp
adc
adc
mov
ret
loopne
scas
push
stc
nop
es
add
sub
add
stc
nop
es
adc
test
xchg
adc
flds
es
add
mov
mov
in
add
roll
push
cmp
cs
int
data16
cmp
nop
jmp
add
out
mov
add
add
nop
es
add
add
pushl
push
mov
xchg
ret
add
pop
add
inc
add
fs
jo
shll
stc
nop
es
add
aad
repnz
mov
nop
cld
nop
jmp
mov
enter
stc
nop
es
add
pop
imul
incl
jl
inc
pusha
jg
push
nop
es
add
cmp
xor
add
mov
xchg
ret
pop
add
add
mov
stc
nop
es
data16
imul
add
lock
nop
es
sti
add
add
add
nop
cld
nop
jmp
add
add
add
jbe
out
mov
stc
nop
es
add
and
sti
add
add
icebp
incl
xor
push
push
mov
xchg
ret
add
test
add
add
add
nop
jmp
add
add
arpl
mov
jb
iret
add
add
add
in
pop
mov
stc
nop
es
test
add
xor
or
movl
imul
add
jg
dec
mov
stc
nop
es
imul
nop
cld
nop
jmp
add
add
test
lret
push
push
mov
xchg
ret
add
mov
imul
mov
xchg
ret
outsb
dec
add
xor
nop
es
add
pop
add
xor
stc
nop
es
les
dec
ficoml
nop
es
add
add
jl
adc
xlat
add
push
mov
xchg
ret
add
adc
into
lea
stc
nop
es
pop
mov
les
adc
mov
jb
add
test
ret
sub
jmp
cmc
test
sub
cmp
stc
nop
es
lret
add
push
cmp
insb
add
stc
nop
es
add
cmp
sar
es
les
add
mov
lods
popa
nop
cld
nop
jmp
clc
dec
lret
mov
add
add
add
add
mov
add
sgdtl
add
nop
es
add
add
test
out
call
idiv
clc
data16
call
nop
es
add
test
adc
lahf
mov
stc
nop
es
dec
add
add
pop
pop
test
push
mov
xchg
ret
mov
test
test
scas
mov
stc
nop
es
add
testb
push
push
mov
xchg
ret
and
mov
add
xor
stc
nop
es
add
sub
adc
dec
je
stc
nop
es
add
arpl
testl
nop
cld
nop
jmp
pusha
insb
in
pop
sub
mov
xchg
ret
test
out
test
sub
mov
xchg
ret
mov
add
add
mov
xchg
ret
pop
cmc
adc
mov
mov
stc
nop
es
adc
add
jl
mov
push
mov
xchg
ret
add
add
add
dec
jmp
stc
nop
es
mov
mov
push
mov
xchg
ret
mov
test
and
jge
test
in
stc
nop
es
out
pop
jno
add
stc
nop
es
add
and
mov
nop
es
movsb
imul
jb
and
add
sub
mov
stc
nop
es
xor
add
and
push
push
mov
xchg
ret
dec
aam
mov
mov
stc
nop
es
jl
imul
stos
push
stc
nop
es
add
test
outsb
mov
xor
jmp
cmc
add
sbb
and
add
psllq
andb
jl
pop
adc
loopne
out
xor
push
mov
xchg
ret
dec
test
add
add
mov
es
pop
jl
add
and
pop
cmp
nop
cld
nop
jmp
mov
jne
stc
nop
es
adc
inc
adc
nop
es
test
add
add
insb
mov
push
mov
xchg
ret
adc
add
cmc
or
push
mov
xchg
ret
add
add
ret
stc
nop
es
aas
fwait
lret
add
mov
decb
mov
add
nop
es
adc
lret
mov
sti
nop
cld
nop
jmp
add
add
add
inc
add
add
cmp
or
mov
add
stc
nop
es
cmp
ds
pop
or
stc
nop
es
fwait
add
in
pop
and
nop
cld
nop
jmp
add
add
add
add
push
stc
nop
es
bsr
imul
or
stc
nop
es
pop
imul
or
nop
es
movb
pusha
add
stos
push
mov
xchg
ret
add
add
add
stc
nop
es
lret
inc
add
add
nop
es
fwait
add
add
xor
ror
add
test
add
pop
pop
sub
nop
jmp
test
pop
adc
jecxz
ret
stc
nop
es
mov
add
mov
jmp
popl
stc
nop
es
add
xor
mov
stc
nop
es
add
adc
add
es
insb
movsb
sti
cmp
jmp
stc
nop
es
add
push
or
nop
es
pop
iret
lret
dec
add
add
mov
stc
nop
es
ret
add
mov
push
sub
cmp
inc
add
add
insb
ss
pop
add
add
nop
es
jg
add
push
aad
add
stc
nop
es
aas
in
insb
lock
ret
stc
nop
es
add
and
add
cwtl
es
nop
cld
nop
jmp
and
jl
jmp
fcom
jmp
add
pop
mov
lret
push
push
mov
xchg
ret
data16
add
fisubs
popa
add
mov
xchg
ret
iret
add
imul
xorl
stc
nop
es
add
lock
push
mov
xchg
ret
mov
mov
push
push
mov
xchg
ret
add
mov
fadds
xchg
ret
add
add
test
mov
xchg
ret
arpl
adc
add
call
ljmp
xor
jb
xor
add
pop
insb
add
add
mov
dec
sub
nop
es
add
mov
std
popa
stc
nop
es
add
add
add
test
nop
es
add
dec
nop
cld
nop
jmp
add
add
pop
sti
ret
add
mov
adc
nop
es
dec
pop
add
ss
rep
stc
nop
es
aas
add
jl
and
xor
add
cmpsl
dec
movswl
nop
cld
nop
jmp
add
and
mov
cld
add
stc
nop
es
add
adc
sub
stc
nop
es
add
jge
out
add
add
stc
nop
es
add
les
pushf
mov
stc
nop
es
mov
inc
add
not
stc
nop
es
mov
add
add
in
push
stc
nop
es
adc
adc
sub
mov
xor
cmp
sar
nop
es
and
add
out
pop
pushf
mov
stc
nop
es
mov
add
rolb
add
fdivr
call
mov
ficoms
mov
xchg
ret
mov
add
iret
insb
add
es
ret
out
add
cmovge
mov
imul
mov
nop
es
add
and
push
mov
xchg
ret
add
test
mov
add
js
push
cmp
add
scas
push
in
mov
repnz
add
jo
sbb
pop
outsb
mov
adc
pop
mov
add
add
add
and
ficoms
push
add
sub
add
adc
mov
notl
outsl
rolb
sbb
loope
add
push
lcall
xchg
jo
jmp
add
fnsave
and
mov
fidivrl
rolb
pop
or
inc
add
add
push
add
pop
jle
add
add
add
add
iret
sbb
shll
addb
add
add
bound
mov
add
add
add
xlat
in
jecxz
add
fmuls
outsl
cwtl
mov
sbb
movsb
add
std
out
addr16
add
add
fcomi
add
sbb
aam
xchg
add
scas
sub
push
add
pusha
add
or
arpl
or
arpl
add
ficomps
sbb
mov
call
add
mov
pop
lods
jle
test
add
add
add
inc
add
rolb
add
cmp
rolb
data16
ljmp
in
rolb
stc
stc
loope
add
scas
xchg
add
outsb
push
clc
aad
movsl
aas
pop
xchg
pop
add
mov
jb
add
xchg
or
add
add
add
xchg
add
fldcw
mov
pop
out
mov
mov
addb
fs
insb
push
push
mov
cwtl
je
insb
mov
mov
fsubrl
add
mov
add
mov
leave
and
in
gs
jnp
in
xchg
pop
pushf
daa
or
mov
mov
jle
add
scas
mov
pop
sub
add
dec
push
push
repnz
xchg
sub
add
fldl
enter
and
mov
mov
and
push
fsubl
push
jecxz
add
montmul
cmpsb
add
ja
js
or
filds
in
insl
pop
push
add
fwait
std
cmp
ret
cltd
pop
mov
push
add
mov
int3
je
mov
add
test
add
testb
pop
movsl
movl
sbb
sub
sub
pop
ss
add
data16
pop
add
jnp
add
mov
add
and
mov
in
mov
lods
cmp
popa
cmp
add
scas
lret
or
add
or
mov
add
add
out
inc
add
add
add
xor
mov
add
and
pop
add
cmp
addr16
sub
das
add
add
add
add
scas
and
push
push
dec
insl
add
add
mov
in
aad
push
mov
in
inc
dec
loope
outsl
imul
add
add
add
inc
add
jge
add
mov
and
sbb
mov
sub
add
add
std
adc
jp
add
add
pop
pop
stc
ffreep
add
xchg
add
sub
movsb
add
add
add
sbb
add
add
add
in
pop
dec
jecxz
rorl
add
rcll
test
dec
cli
das
xchg
mov
movsb
add
jle
add
add
dec
lds
sahf
shrl
stos
js
pop
stos
dec
or
inc
add
stos
scas
adc
fabs
cmp
outsl
pop
cmp
mov
add
cmp
jae
add
xchg
ret
push
adc
fsubrl
cwtl
add
call
in
rolb
xor
or
mov
add
lods
adc
jl
popa
and
mov
add
add
adc
add
xchg
sub
jne
outsl
add
add
add
add
idivl
js
push
xchg
add
ret
test
dec
pop
pop
mov
pop
icebp
ljmp
pusha
add
sbb
sub
add
add
add
aam
test
add
inc
add
add
inc
add
xchg
add
jmp
adc
or
lods
xchg
or
dec
jne
aas
testb
mov
add
dec
movsl
test
aad
mov
pop
fsubr
mov
out
jae
pop
mov
mov
pop
repnz
xor
add
mov
icebp
cmp
test
pop
add
outsb
add
mov
jecxz
add
mov
jge
dec
pop
out
xchg
add
add
mov
rcrl
add
cmc
push
add
in
xchg
dec
stos
mov
add
fstl
and
add
mov
arpl
mov
add
add
push
add
cmpsl
icebp
pop
or
inc
roll
mov
loopne
cmp
outsb
bound
mov
push
sbb
xlat
popf
and
add
add
cmp
dec
cltd
xlat
ret
add
mov
sbb
mov
je
mov
add
sub
in
pop
flds
xor
add
add
dec
push
mov
dec
lods
pop
jo,pn
loope
fwait
jmp
addb
gs
adc
jne
pushf
jge
sub
cmc
out
or
add
test
sti
adc
add
add
mov
add
test
lahf
aas
pop
popl
decb
xchg
sub
add
add
add
add
aam
xchg
add
addb
mov
add
jge
add
push
int3
xchg
add
add
and
add
test
and
cmp
gs
cmp
shll
mov
add
xor
shll
sub
add
jb
jmp
add
jae
test
scas
pop
aas
push
out
pop
pop
fldt
mov
pop
cwtl
xor
jno
pop
out
dec
aam
inc
xchg
add
fsubrs
idiv
add
add
or
push
add
xchg
add
adc
and
mov
pop
or
add
add
mov
outsb
dec
cmp
cmp
add
rolb
cmp
iret
mov
push
add
ljmp
mov
add
and
jbe
xchg
add
sub
negl
sub
dec
add
add
cmp
jns
movsb
add
mov
xor
in
mov
xchg
int
nop
add
bound
mov
fnstcw
xchg
xchg
add
add
dec
add
mov
pop
lock
add
fidivs
sub
add
cmp
mov
inc
push
add
mov
dec
inc
xchg
mov
cmpsl
adc
xor
and
in
jnp
call
jecxz
or
add
add
fwait
cld
mov
int
add
enter
cwtl
nop
add
dec
push
add
aad
lahf
xor
dec
dec
test
jmp
add
mov
sbb
add
outsl
arpl
mov
mov
mov
mov
mov
addb
sti
js
testb
add
lcall
lock
add
pop
cmc
jae
xchg
mov
cmp
add
xor
cmc
incb
add
jae
or
add
mov
jmp
aad
mov
add
add
mov
add
mov
jbe
ja
lods
aaa
add
push
lret
jae,pn
add
add
data16
lahf
movsb
add
add
outsb
ret
adc
bound
mov
xchg
add
fwait
rolb
aad
add
add
pop
mov
and
adc
or
mov
std
inc
add
out
push
or
mov
inc
add
and
mov
push
fldl
mov
testb
lods
xchg
jbe
push
add
xchg
add
inc
add
xchg
xchg
inc
add
push
add
je
jmp
scas
scas
fdivrs
rorl
add
repz
add
add
add
shll
xchg
sub
add
add
jnp
add
add
add
xor
test
add
add
add
xor
push
or
push
rolb
add
add
cld
mov
aaa
jne
or
clc
dec
add
enter
sub
cmpsl
ret
mov
sbb
mov
mov
add
xchg
lret
call
adc
ret
jae
add
lret
jl
xor
mov
inc
add
cmp
enter
push
and
aad
cmp
neg
mov
add
or
popa
mov
jbe
movsb
add
mov
mov
add
das
add
shr
sbb
add
sahf
add
dec
push
add
loopne
fistps
add
cmp
inc
or
ret
out
jns
mov
push
add
pop
and
mov
lret
fbstp
add
popf
sbb
andl
je
aas
les
loope
xchg
add
add
sub
mov
add
int3
adc
add
add
add
leave
imul
scas
je
add
loop
ficomps
add
daa
mov
inc
add
jmp
mov
inc
add
add
out
nop
add
sti
sbb
int3
xor
repz
fisubl
jge
dec
xor
addb
add
mov
testb
xlat
cmc
ja
add
add
add
xor
xchg
adc
sub
in
mov
jl
add
add
rorl
stos
jecxz
add
add
add
fistl
enter
xchg
add
js
cmc
and
or
mov
pop
mov
add
enter
in
outsb
mov
popa
ljmp
push
sbb
add
adc
test
push
jne
orl
add
push
testb
outsl
rolb
cwtl
arpl
add
add
lock
test
cmp
add
push
dec
div
push
add
add
enter
add
into
mov
inc
add
add
add
cld
or
add
leave
adc
mov
mov
sub
cli
orl
push
ret
outsb
pushf
fiadds
lock
add
mov
add
mov
add
xchg
fidivs
stos
mov
mov
addr16
ljmp
add
pop
pop
out
adc
cmp
add
shr
rolb
mov
nop
add
add
test
add
mov
pushf
or
add
add
add
add
push
add
add
lcall
add
jmp
les
addb
dec
sbb
mov
repnz
mov
dec
scas
dec
test
sbb
mov
sub
mov
add
pop
push
add
add
repz
lods
fwait
movsl
xor
test
xor
stc
add
jmp
and
add
add
rcrl
cmpsl
sbb
adc
inc
jno
jmp
notl
adc
xchg
add
pop
mov
jns
lret
add
pop
stos
add
shr
xchg
add
sub
je
popf
imul
testb
add
add
and
add
stos
out
push
test
movsb
add
push
add
add
fnclex
add
sbb
xchg
add
add
add
pop
cli
movnti
inc
add
add
xchg
test
imul
add
pusha
add
inc
cmpsl
repnz
sbb
int
mov
dec
or
mov
and
jmp
mov
jp
push
in
aad
inc
add
push
xchg
cld
jo
lods
pop
movsb
add
add
xlat
cli
in
lcall
out
data16
add
add
xor
and
and
mov
insb
pop
and
mov
xlat
in
jns
sub
mov
and
ret
in
dec
ds
and
mov
add
repz
add
ss
imul
loop
add
add
add
pusha
add
das
aaa
xor
pop
imul
pop
mov
test
sub
push
add
inc
mov
or
add
add
and
inc
add
mov
add
rolb
shrl
fldt
add
sbb
movsl
jg
add
add
cmpsb
add
addb
dec
sarl
jne
imul
xchg
add
push
add
mov
in
lret
mov
popf
lret
xchg
add
and
jne
dec
sarl
sbb
add
mov
jg
add
push
add
add
sbb
cs
or
and
or
fnsave
add
imul
jl
sbb
add
push
add
mov
imul
add
addr16
mov
add
pusha
add
add
dec
movsl
dec
xchg
push
insl
test
add
mov
mov
add
xchg
add
addb
add
out
dec
pop
in
jge
mov
iret
sub
add
add
add
mov
or
add
aas
pop
xor
jo
fsts
add
jp
jne
add
scas
popl
fdivp
pop
lock
dec
adc
movl
loop
rolb
and
mov
sbb
inc
pop
lock
add
lret
int3
mov
nop
add
fwait
addb
add
add
xor
fstpl
loopne
imul
pop
mov
sbb
test
mov
sub
jnp
addb
add
add
sbb
fsub
or
sbb
pop
xchg
out
pop
call
push
add
stos
mov
add
add
add
and
mov
pop
add
in
idivl
xor
ret
jmp
add
mov
add
insl
add
ss
add
pop
pop
pop
cmp
int
movsl
es
xor
scas
jle
add
in
jmp
shrl
mov
add
add
mov
in
cmp
adc
dec
cwtl
push
add
addb
push
js
add
pop
adc
cmp
sbb
imull
stc
dec
jae
add
add
add
add
out
or
mov
mov
xor
add
lods
inc
pop
add
add
add
sbb
push
mov
push
inc
push
ret
lods
xlat
ret
sahf
aam
or
mov
movb
xor
fstps
ljmp
add
cwtl
lds
cwtl
in
pop
push
adc
out
std
fdivp
aaa
jp
add
pushl
mov
inc
add
stos
xchg
sti
ljmp
lds
and
icebp
pop
or
roll
add
fildll
addb
add
mov
dec
add
adc
pop
xchg
fistpl
js
add
sbb
cmpsl
jle
arpl
add
add
ret
inc
cld
int3
sbb
stos
sbb
sub
sub
fidivrl
inc
add
out
sub
add
add
mov
in
in
mov
jmp
add
lea
add
hlt
add
add
push
add
dec
rcrl
lods
add
jns
mov
push
rolb
or
add
in
insl
repz
add
cmc
rolb
jb
das
inc
out
ret
ja
xor
mov
add
in
sub
leave
leave
data16
mov
jle
add
jecxz
add
cmpsb
add
push
mov
pop
addb
add
js
ds
iret
sub
movb
add
mov
addr16
or
daa
popf
cmp
popf
repnz
mov
mov
cmp
inc
add
jns
rcrl
lds
hlt
add
scas
inc
cmpsb
add
paddusw
add
jp
add
add
mov
pop
mov
add
aas
jbe
int3
push
in
add
add
add
add
fwait
cli
lret
or
cltd
sub
hlt
add
mov
jnp
sub
mov
add
and
mov
inc
mov
lcall
pop
jo
fadds
push
aaa
pop
icebp
sti
stos
pushf
test
add
out
xchg
add
imul
mov
add
add
push
dec
add
mov
cmpsl
daa
rolb
fistpl
add
ljmp
sbb
push
add
add
dec
les
arpl
add
mov
mov
add
add
jb
sbb
movsl
bound
mov
cmp
sti
testb
sbb
adc
jns
jbe
leave
cmovnp
xchg
add
movsl
shrl
or
push
ljmp
test
mov
ret
mov
jge
cmc
push
add
add
add
mov
cmp
push
add
and
mov
add
adc
ja
add
cmpsl
add
mov
add
mov
rolb
xchg
add
stos
add
out
mov
pop
adc
add
in
cmc
cwtl
lods
dec
sbb
imul
add
pop
jp
jbe
ljmp
xchg
rolb
data16
inc
or
test
outsl
leave
cltd
push
add
std
addr16
fcmovb
xor
fabs
mov
mov
push
add
in
test
jle
add
testb
dec
cmp
sub
add
imul
add
mov
xchg
enter
stc
jmp
xchg
or
add
pop
mov
push
add
movb
lods
mov
pop
jae
aam
cmc
lods
les
xlat
js
cwtl
cmp
dec
pop
cmp
dec
aad
add
mov
add
bswap
rolb
adc
ja
dec
clc
out
imul
pop
cmpsb
add
jl
jge
roll
mov
mov
mov
aam
add
mov
scas
nop
add
js
or
rcr
add
pop
repnz
mov
mov
fbstp
not
add
mov
lret
xor
pop
sub
push
mov
ljmp
push
add
push
dec
dec
adc
dec
adc
movb
push
push
lods
inc
sbb
in
mov
outsb
fadds
xor
cmp
shll
pusha
add
pop
sahf
xchg
add
inc
add
cmp
inc
jg
add
insb
push
add
xchg
add
sub
rorl
test
scas
ljmp
shll
lock
repnz
and
das
mov
adc
sbb
add
pop
clc
arpl
xchg
xor
bound
mov
add
add
pop
dec
out
add
loope
add
add
dec
repz
loopne
or
add
add
dec
push
fs
sub
shl
add
in
inc
je
andl
je
stos
pop
rolb
or
addb
dec
test
add
push
add
xchg
fnsave
add
cmpsl
and
mov
movsl
cmp
test
lret
ljmp
xor
mov
loop
gs
into
jp
cmp
pop
aad
inc
add
push
data16
sbb
pop
xchg
arpl
aaa
jne
mov
testb
cmc
in
lock
xor
or
add
add
add
pop
stos
sbb
int
jno
add
scas
movlps
inc
repnz
dec
add
fcomps
ljmp
test
scas
dec
imul
fstpl
ds
push
add
push
add
pop
pop
ficoml
in
jnp
cmp
loope
aad
xchg
add
outsb
or
xchg
add
sbb
add
add
add
add
aad
les
or
add
add
sti
sub
add
add
pop
inc
xchg
dec
movb
sahf
inc
in
aad
out
bound
mov
addb
or
shl
jle
add
adc
int
add
mov
adc
add
xlat
cltd
mov
cmp
jns
add
add
test
add
xchg
xchg
rcrl
jne
add
add
xchg
rolb
lahf
push
add
notl
lock
jge
add
ja
push
add
mov
jno
cltd
sbb
jb
pop
push
sbb
and
outsb
in
sti
mov
aam
fcomip
add
outsb
push
loopne
outsl
inc
add
lsl
xor
daa
psubw
adc
add
adc
mov
cld
xor
lahf
mov
dec
sub
add
repz
add
outsb
push
add
add
add
jo
sahf
popf
sub
nop
add
xchg
push
mov
add
rolb
jecxz
lret
clc
mov
add
jo
loopne
ljmp
add
add
mov
rcrl
mov
add
pop
cwtl
cld
inc
add
test
clc
in
ss
movb
pop
inc
sbb
mov
and
mov
xor
pop
cwtl
ss
add
call
jo
dec
movsl
jmp
and
out
and
mov
add
lahf
insl
aas
repnz
add
add
xor
pop
add
loope
inc
add
pop
sti
add
aam
pop
cmc
mov
mov
enter
and
mov
aaa
jns
xor
test
add
add
mov
push
je
add
int3
mov
jne
mov
insl
es
icebp
je
ja
push
cs
arpl
pop
insb
iret
hlt
add
mov
add
pushf
clc
loop
aas
movb
add
movsl
fidivrl
add
pop
out
scas
xor
push
add
and
mov
adcl
add
mov
add
push
add
sub
add
test
sahf
push
push
sti
test
pop
int
pop
add
adc
add
add
lock
jne
pusha
add
add
push
add
mov
test
dec
jle
rolb
arpl
movsl
pop
push
xchg
pop
mov
adc
aam
mov
add
jb
sahf
outsl
cmpsl
sub
add
add
loope
shrl
lds
add
mov
sbbl
cld
push
jo
pusha
add
add
add
rolb
jg
add
sub
push
add
add
add
or
jae
cmp
and
sbb
add
add
nop
add
gs
hlt
add
gs
aad
aaa
roll
mov
and
test
mov
test
iret
out
or
dec
mov
jg
add
imul
sbb
add
inc
add
inc
add
xchg
in
xchg
add
jecxz
addb
mov
mov
imul
add
cmp
pop
fnstenv
xchg
inc
mov
nop
add
sub
dec
pushf
sahf
call
xlat
mov
pop
ficomps
add
xchg
test
pop
inc
add
add
add
jno
add
inc
or
push
add
mov
dec
aad
arpl
sbb
in
adc
dec
add
test
add
dec
sbb
cmp
add
lahf
xor
push
add
ljmp
repnz
mov
into
and
xchg
add
sahf
mov
leave
insl
push
add
in
bound
mov
mov
add
aas
js
add
jge
in
mov
add
lcall
loope
push
add
jno
add
enter
xlat
and
mov
cmp
add
out
mov
lret
inc
rolb
sub
fisttpll
xchg
loopne
mov
cmp
or
data16
mov
loop
mov
shll
rcl
arpl
and
add
add
or
addb
jge
add
add
jns
dec
add
fisubl
add
add
lock
add
mov
add
iret
bound
mov
add
add
popf
or
inc
popf
push
fmull
add
aad
mov
pop
pop
adc
xor
cmpsb
add
inc
push
adc
add
add
out
lahf
jle
jecxz
jp
add
add
fdivrl
jns
cmpsl
pop
arpl
pop
add
js
add
test
aaa
xor
cs
pusha
add
ret
add
shll
mov
add
in
outsb
mov
in
adc
push
add
adc
push
add
mov
adc
push
add
push
push
add
int
shll
mov
mov
out
xor
insb
rcrl
and
mov
movsl
mov
aaa
lock
iret
and
mov
mov
xor
add
add
and
mov
mov
cld
inc
add
bound
mov
sub
add
rolb
jbe
pop
aas
mov
lahf
mov
in
pop
cli
push
add
mov
add
cmp
pop
scas
cmpsb
add
xchg
mov
mov
add
outsl
incb
rolb
mov
icebp
into
fsub
cltd
aaa
or
add
mov
cmovg
jecxz
fs
cmp
add
add
repnz
xor
pop
push
add
lcall
add
add
loope
jne
imul
xchg
add
mov
add
jnp
cmp
sub
dec
push
sub
pop
jns
outsl
repnz
lahf
cmc
aas
push
add
dec
lea
jge
cli
clc
mov
fnsave
add
fmuls
xchg
push
decb
enter
jp
mov
movsl
movb
add
dec
jnp
add
sub
add
out
clc
mov
add
mul
cmp
inc
add
xor
fisubs
add
scas
arpl
mov
pop
xchg
add
push
add
add
add
push
test
js
pop
addb
add
dec
sbb
hlt
add
mov
roll
push
and
mov
inc
gs
jno
hlt
add
pop
jnp
add
mov
adc
lea
push
hlt
add
imul
je
adc
dec
clc
rolb
jbe
inc
ds
push
add
ja
pop
les
rolb
icebp
and
xchg
add
and
mov
pusha
add
add
sbb
insl
loopne
aad
add
add
and
popl
mov
sahf
nop
add
xlat
push
add
add
push
add
shll
add
push
add
imul
addb
add
sub
add
xor
xorl
jl
add
add
add
cmp
jge
aad
fcmovnbe
add
jecxz
add
leave
push
add
mov
xor
cmp
add
lret
je
popf
pushf
mov
jecxz
add
mov
xor
add
rcrl
test
fistpll
add
add
add
push
add
jecxz
lret
addb
mov
add
add
in
xchg
cmpsb
add
pop
cmpsb
add
mov
pop
dec
jecxz
xchg
aaa
push
add
add
movb
inc
adc
inc
add
add
fldl
cwtl
jmp
pusha
add
ret
lods
sbb
add
push
add
mov
mov
in
dec
jae
push
push
mov
mov
pop
inc
add
insb
add
movsl
and
or
jne
add
jle
add
mov
add
add
fwait
sahf
adc
das
fbstp
int3
mov
sbb
add
out
sub
nop
add
mov
mov
data16
xor
add
loopne
pop
add
mov
xchg
jo
sbb
ror
add
cli
inc
data16
mov
cmp
add
lods
cmp
enter
bound
mov
adc
mov
add
fcompl
add
add
mov
add
gs
cmp
xchg
pushf
scas
ja
push
cli
movsb
add
mov
orl
xchg
sub
stos
imul
testb
xor
add
mov
add
mov
add
stc
push
mov
add
add
add
lret
jecxz
add
add
add
mov
add
sahf
rcrl
add
fwait
bound
mov
repz
add
int3
cltd
addb
add
add
call
mov
imul
add
add
loope
in
push
cwtl
loopne
and
mov
add
add
add
out
push
jns
mov
xor
icebp
jmp
jnp
inc
out
rolb
lods
pop
rcrl
add
xorl
add
call
sbb
test
jge
js
lret
daa
add
jle
xchg
add
add
adc
push
stos
mov
arpl
les
inc
add
stos
mov
in
icebp
pop
xor
cmp
pop
lahf
ret
mov
add
mov
sbbl
jnp
add
sub
add
pop
push
push
push
pushf
mov
mov
stc
xchg
nop
add
add
dec
mov
jl
add
mov
pop
in
xchg
js
in
push
add
mov
les
jmp
mov
test
testl
mov
mov
inc
stos
lcall
add
lret
out
outsl
sub
cmp
pop
stos
popf
les
fldenv
stc
leave
lret
xor
rolb
hlt
add
add
add
add
sbb
xor
mov
cmpl
inc
mov
adc
add
mov
cmp
sti
aaa
testb
or
aam
dec
sub
out
fisubs
mov
add
ljmp
mov
jecxz
add
or
add
popf
gs
movsl
in
jo
cmp
mov
xchg
add
add
in
pusha
add
popf
nop
add
mov
jle
push
add
rorl
loop
aad
inc
inc
adc
add
int3
lcall
add
add
loopne
imul
push
add
icebp
adc
aas
mov
jge
dec
mov
mov
cmp
mov
sahf
add
loope
iret
pop
push
fnstcw
add
mov
push
add
hlt
add
add
dec
sub
ljmp
clc
fnstsw
add
adc
bswap
les
pop
xchg
add
pop
add
pop
xor
sarl
mov
inc
xor
jecxz
add
or
dec
mov
pushf
jmp
add
add
repnz
fisttps
scas
jb
gs
jg
push
add
cmp
movb
add
cmp
fmulp
mov
xchg
add
aaa
out
xor
add
add
mov
mov
fxch
push
popf
fnstsw
add
mov
fcomps
cltd
into
shr
rolb
inc
add
add
cmp
xor
outsl
jo
push
pusha
add
sti
outsl
lds
rolb
aam
sarl
clc
mov
add
ja
cmp
jl
adc
xchg
mov
xchg
add
shl
add
push
add
bound
mov
inc
add
push
add
add
mov
add
add
mov
mov
mov
add
iret
pop
cmp
add
xchg
add
into
das
out
sub
popa
xor
out
lock
pushf
xchg
add
or
in
cltd
pop
shl
lret
sbb
mov
nop
add
mov
add
add
mov
rolb
cltd
lods
push
add
dec
cmp
inc
jl
add
push
movsb
add
dec
rolb
out
leave
out
push
mov
push
icebp
pop
in
addb
add
in
in
in
sahf
pop
fcmovbe
pop
data16
repz
xor
jbe
jmp
push
cld
xchg
mov
leave
fbstp
push
push
add
movsl
testb
lret
mov
sbb
mov
cmp
add
mov
fmuls
add
pop
cli
insb
push
mov
add
xlat
negl
sbb
fwait
call
popa
aaa
adc
shll
or
jb
data16
add
add
mov
sub
add
repnz
add
mov
pop
push
add
shll
lret
sbb
add
adc
pop
aaa
mov
and
mov
inc
mov
mov
into
out
xor
aaa
lahf
and
mov
add
sub
mov
movsl
dec
je
repz
js
cmp
les
loop
pop
push
outsl
and
add
sub
add
dec
or
add
xor
insb
icebp
scas
addr16
cli
push
add
bound
mov
add
add
add
xchg
repnz
jbe
push
add
out
mov
and
bound
mov
cmpl
and
lods
inc
dec
pop
push
add
add
add
add
jl
add
daa
inc
add
add
mov
cmp
xor
repnz
add
mov
xor
xchg
mov
add
add
add
add
sahf
add
mov
add
aad
ljmp
in
adc
jmp
add
sbb
or
jae
adc
mov
testb
xchg
add
adc
adc
add
add
dec
add
mov
dec
mov
out
icebp
ja
add
add
mov
add
cmp
add
loop
sub
mov
aaa
repz
add
test
cltd
incl
mov
add
add
add
insb
mov
add
divl
fdivl
dec
cmpsl
xor
push
inc
ljmp
pop
gs
mov
push
add
mov
loop
stos
in
lcall
inc
les
ret
push
add
add
jl
add
fdivrs
cmp
testb
add
cmp
adc
add
push
add
add
testb
or
hlt
add
stos
imul
push
add
aaa
adc
add
imul
dec
loope
out
lahf
sahf
xor
cmp
or
mov
adc
lods
push
mov
add
sahf
pusha
add
mov
add
popa
mov
hlt
add
pop
push
add
mov
or
sbb
push
loope
insb
sbb
pushf
mov
add
mov
mov
mov
aas
inc
add
frstor
jae
jno
cmp
xchg
add
je
push
mov
mov
repnz
rolb
sub
adc
add
mov
sahf
testb
xchg
add
add
add
add
add
xor
add
cli
add
add
pop
dec
push
sbb
imul
add
add
mov
xlat
fidivrl
push
mov
mov
repnz
mov
stc
ret
mov
add
push
cmpsl
dec
sub
in
into
sbb
lahf
dec
push
add
xchg
add
sbb
dec
data16
add
repz
sub
mov
push
jae
mov
pop
pushf
test
add
ljmp
jnp
push
add
rolb
push
add
push
std
mov
jae
les
xor
and
mov
lahf
xchg
add
pop
pop
imul
add
mov
movb
push
pop
mov
add
add
mov
pop
mov
data16
mull
mov
mov
xchg
add
andl
or
sbb
push
add
mov
add
push
and
push
push
in
in
mov
add
outsl
call
and
add
add
mov
add
add
add
and
add
add
add
add
enter
xchg
add
mov
lods
lods
adc
xor
jmp
cmpsb
add
jmp
loop
dec
cmp
jae
push
movsb
add
add
imul
add
pop
lcall
add
call
mov
mov
bound
mov
add
inc
add
add
mov
cltd
or
mov
hlt
add
fnsave
add
outsl
lods
sub
or
orl
add
add
fbld
rolb
insb
repnz
mov
push
add
mov
mov
pusha
add
mov
add
adcl
mov
or
fldt
add
add
push
sub
sbb
mov
lock
jbe
ja
test
mov
cmp
leave
or
add
and
mov
push
add
xchg
loope
mov
lods
xor
data16
sti
in
xor
push
add
inc
mov
sahf
mov
out
repnz
add
fcmove
or
push
add
add
add
xchg
testb
inc
dec
loop
popf
imul
mov
add
dec
dec
pop
inc
add
adc
popf
or
add
adc
repnz
dec
inc
lds
push
add
into
lds
sbb
insb
or
inc
add
add
les
sub
mov
add
iret
aad
icebp
xor
movb
add
insb
or
push
ret
add
adc
add
sub
add
mov
ds
ficoms
and
add
add
sub
add
adc
sbb
dec
jno
push
fildll
add
rolb
pusha
add
pop
lock
sbb
push
add
mov
inc
push
imul
lock
mov
add
lods
xchg
add
pop
and
add
mov
add
xchg
add
mov
adc
pop
xor
mov
popa
repnz
mov
movsl
mov
data16
dec
nop
add
add
rolb
jge
jle
out
pop
cmpsl
xor
sarl
xchg
mov
mov
add
jge
lea
repz
mov
repz
add
test
add
add
sbbl
outsl
in
sub
add
mov
add
pushf
imul
lods
cs
sub
pop
aaa
inc
dec
mov
xor
or
mov
push
and
mov
xlat
out
xlat
fdivrl
add
add
add
test
add
or
jmp
push
add
sbb
loop
inc
add
adcl
xchg
test
xor
cmp
push
add
sti
sarl
add
add
push
add
pop
jge
add
lds
xor
push
xchg
add
jl
jbe
xchg
add
inc
pusha
add
mov
inc
out
ret
mov
fadd
add
add
into
mov
add
scas
cmp
aam
inc
xlat
mov
daa
inc
add
sbb
nop
add
mov
lods
push
pushf
push
jne
jb
arpl
add
inc
add
add
or
mov
and
mov
shl
sbb
aaa
dec
mov
jb
cmp
inc
cmp
movsb
add
call
mov
mov
into
xchg
add
jb
inc
ljmp
hlt
add
xchg
add
rcrl
add
add
add
mov
add
mov
mov
xlat
and
adc
cmc
aaa
in
addb
cld
push
ljmp
add
mov
fadds
rolb
lret
stc
sub
mov
aam
adc
add
add
mov
push
or
cmp
enter
pop
faddp
add
popa
js
xchg
lods
adc
cmp
mov
lahf
add
mov
add
lret
cmp
mov
lcall
inc
add
jns
into
mov
add
cmp
cs
nop
add
add
jns
nop
add
add
jmp
ret
push
add
add
daa
or
addb
sti
rorl
add
add
push
add
jbe
test
mov
scas
xor
lret
push
add
lret
sbb
add
jnp
nop
add
mov
mov
inc
add
cmpsb
add
insb
imul
fsub
mov
xchg
aas
dec
add
add
jbe
inc
xor
sub
or
ds
jp
sub
and
mov
cli
sub
mov
mov
add
xchg
xor
lds
add
rolb
rolb
lret
add
add
add
arpl
mov
push
cs
add
xor
in
scas
int
add
je
push
add
add
adc
push
arpl
mov
out
dec
add
test
add
cmpsl
fistl
add
add
add
test
add
in
add
add
cld
mov
popf
mov
add
rcll
add
mov
add
fcoms
add
mov
call
sub
mov
mov
mov
sarl
or
mov
add
mov
bound
mov
or
add
jno
add
cmpsl
rolb
add
pusha
add
jae
add
mov
jae
fbld
add
add
clc
lds
mov
enter
mov
movsl
leave
push
add
add
add
add
lock
jl
aad
sbb
roll
cmc
adc
mov
xor
std
in
pop
adc
out
add
add
add
cld
scas
mov
sbb
jle
addr16
xor
lret
ds
push
mov
fsubl
or
and
pop
imul
das
dec
stos
mov
push
testb
out
fucomip
ret
call
dec
cs
popf
loopne
lea
fists
or
add
loop
hlt
add
aad
add
add
arpl
push
mov
fcoms
dec
sub
insl
pop
out
add
aas
add
in
mov
xor
mov
push
add
pop
pusha
add
cwtl
or
xlat
mov
or
xchg
jns
in
jnp
pop
repz
cmp
xchg
add
fisubs
add
pop
loope
ljmp
xchg
add
mov
aas
push
add
or
xchg
call
pusha
add
sbb
mov
rolb
cmp
movb
and
mov
jo
xor
imul
out
lret
pop
and
mov
push
je
insl
loopne
std
push
add
and
pop
outsb
adc
add
popa
sub
pop
out
inc
jae
add
add
pop
jmp
push
add
sub
jae
fimull
sahf
call
icebp
jecxz
add
int3
je
rolb
fwait
or
roll
in
dec
inc
add
xlat
movsb
add
push
lods
pop
sbb
add
leave
test
clc
mov
and
add
add
and
add
fisttpl
enter
pop
fcomi
data16
nop
add
inc
cmp
jo
movsb
add
add
cmp
lock
add
adc
imul
add
popf
addb
add
xchg
add
adc
xlat
je
dec
stc
cli
rolb
std
rorl
add
sbb
jmp
mov
add
xchg
mov
xor
out
xchg
add
add
jmp
xor
add
add
in
insb
movsb
add
inc
add
movsl
xorl
add
in
imul
mov
add
add
dec
movsl
or
imul
cwtl
or
add
addb
imul
add
in
add
lahf
dec
lret
push
cmp
das
mov
adcl
xchg
push
add
in
fimull
in
mull
sub
dec
scas
adc
popa
scas
sub
xor
leave
add
sub
add
rolb
lds
add
aaa
lret
add
lock
into
jae
or
pop
xor
jno
add
add
add
xor
xchg
les
in
xchg
imul
or
rolb
out
pop
aas
popf
rolb
pushf
pusha
add
inc
add
add
add
and
mov
int
add
bound
mov
add
pop
jb
dec
imul
mov
cli
addl
mov
pop
cmp
add
jl
add
add
in
xor
jns
lahf
shrl
call
clc
ljmp
add
mov
ret
in
push
add
add
lock
bound
mov
push
ret
dec
jg
xor
mov
cmp
xor
jnp
loopne
xor
lock
xor
add
fwait
data16
push
loope
fimuls
add
add
pop
xor
sub
aad
lods
adc
sub
push
add
add
inc
add
lahf
mov
repnz
mov
adc
cli
jp
add
outsl
aam
cmp
mov
xor
add
add
insl
mov
xor
in
out
dec
or
fmul
cwtl
icebp
inc
rolb
jg
xor
add
add
mov
and
mov
dec
pop
or
pusha
add
sub
add
lret
add
mov
aas
cltd
mov
xor
lret
jmp
shll
pop
dec
mov
adc
or
loope
les
cmp
add
cmp
mov
add
rolb
fcoms
int
les
stc
testb
test
add
add
mov
mov
add
sub
pop
pushf
jae
add
sti
pop
sbb
add
add
add
mov
add
add
add
fistpl
add
add
dec
mov
add
fsts
cmpsl
xor
pop
jmp
add
popf
cmp
insb
xchg
add
sbb
add
mov
add
mov
jmp
repnz
mov
ficomps
add
sub
test
fdivrs
mov
das
add
addb
mov
add
decb
add
sub
sbb
sub
xchg
add
jbe
inc
add
dec
test
add
jmp
jns
add
cmp
add
sbb
add
add
ret
and
insl
mov
rolb
data16
xor
or
jg
sbb
add
add
jp
sbb
insl
mov
dec
push
daa
xor
push
add
add
xchg
jnp
add
or
in
jge
sub
cwtl
add
adc
mov
gs
lods
push
xor
add
sub
or
sbb
sub
add
rolb
cmpsl
add
inc
add
add
js
mov
add
cmp
pop
cwtl
lret
push
xlat
prefetchwt1
dec
mov
aam
dec
pop
dec
into
repnz
inc
inc
mov
sbb
nop
add
add
add
dec
js
mov
dec
cmpsl
and
add
xchg
sub
add
add
int3
sub
push
add
pop
imul
movntq
adc
add
mov
add
popf
repz
out
test
sbb
add
rolb
dec
scas
jg
adc
lret
add
lods
xchg
jbe
cmp
imul
aad
add
or
sbb
jb
lds
add
or
mov
icebp
and
mov
add
sbb
mov
dec
xor
aas
and
je
popf
push
add
dec
and
in
adc
jle
adc
cmpsb
add
add
mov
orps
mov
in
add
add
lahf
cwtl
sub
fists
cmp
sbb
clc
les
dec
insb
jno
insl
and
test
fdivrl
cmp
cmp
add
je
loopne
inc
lock
add
mov
add
shr
inc
add
jo
popf
stos
xchg
xchg
fadds
pop
mov
xchg
rcll
out
mov
cmp
add
add
inc
and
mov
inc
add
add
jnp
shl
inc
in
xchg
add
popf
sub
jp
test
xchg
jle
add
in
xchg
add
add
in
add
rolb
mov
inc
add
add
addr16
xor
add
add
decb
or
inc
add
scas
xor
adc
pusha
add
lret
dec
mov
sbb
push
mov
push
iret
xchg
add
add
add
pop
inc
divl
out
add
out
add
in
in
flds
add
es
sub
add
add
mov
pop
xor
lret
fsubr
mov
loope
add
add
int
push
insl
in
push
sub
repnz
xor
ljmp
xlat
dec
push
dec
movsl
xlat
call
xchg
add
push
std
mov
cmc
add
mov
push
add
xor
pop
or
aaa
jle
lods
mov
and
cmpsl
lcall
add
add
add
pop
dec
fistl
add
popf
dec
push
gs
inc
jge
mov
mov
add
cs
mov
adc
cmp
mov
nop
add
arpl
insb
loopne
loop
push
pop
arpl
add
int3
jp
ljmp
sbb
add
mov
xchg
add
in
push
and
add
test
out
mov
add
add
add
hlt
add
sub
mov
mov
movb
stos
inc
add
push
pushf
adc
stc
xchg
jmp
std
in
push
add
add
das
pop
xchg
xor
add
add
add
add
pusha
add
or
sahf
aaa
sub
jg
add
les
scas
cli
es
mov
gs
add
add
aaa
test
cmp
dec
pop
mov
push
jnp
les
jnp
ljmp
mov
movsl
jnp
push
add
add
mov
stos
adc
pop
pop
mov
jno
in
movsb
add
in
add
lock
mov
xor
add
and
jecxz
ja
push
mov
ret
add
mov
mov
adc
rcll
dec
or
movb
stos
je
clc
pop
fldt
mov
shl
stos
add
mov
inc
add
sbb
je
jae
in
cmpsl
mov
inc
add
xor
mull
and
push
add
sbb
add
push
add
mov
jle
dec
testb
imul
call
add
rolb
lods
cs
add
adc
aam
daa
out
lret
xchg
add
enter
add
pop
add
add
fdivs
jo
xchg
cs
add
dec
dec
push
add
xchg
dec
xor
cmp
mov
dec
cwtl
orl
jp
mov
sahf
sahf
cmp
and
out
mov
inc
sbb
add
aam
mov
into
push
add
test
xchg
mov
pusha
add
sub
dec
jbe
adc
and
mov
ret
add
mov
les
mov
mov
and
call
add
push
add
fwait
add
mov
rolb
add
add
xchg
add
outsl
mov
jo
inc
add
sub
sub
and
out
mov
pop
dec
xchg
popf
xor
scas
gs
cmp
add
push
cmc
call
pop
rolb
mov
add
add
and
cwtl
popl
and
hlt
add
add
inc
or
pushf
lret
pop
cmp
add
cld
arpl
add
add
add
outsl
enter
mov
adc
cmp
mov
push
add
add
jmp
add
adc
pushf
sbb
mov
out
push
jge
push
add
mov
shll
loop
lahf
dec
or
mov
add
add
icebp
jo
loopne
fildll
xor
shll
imul
add
jmp
xchg
enter
sahf
clc
inc
add
add
mov
fstps
add
test
lret
sti
lds
jo
cmpsb
add
add
inc
sub
add
add
mov
add
add
push
add
push
sub
xchg
and
mov
or
mov
addr16
sub
add
add
in
out
cmpsb
add
pusha
add
mov
mov
popa
mov
test
int
scas
jecxz
pop
mov
daa
enter
xor
and
push
add
add
rolb
fcmovne
addb
dec
outsb
repnz
add
insb
push
cmp
roll
mov
add
xchg
add
mov
mov
mov
popf
fmull
addb
add
fiadds
add
pop
cltd
add
sbb
les
dec
xor
lods
push
out
popa
add
xchg
push
add
mov
sbb
in
dec
mov
push
testb
add
push
enter
add
lea
add
jecxz
xor
addr16
fldt
add
pop
lea
jg
add
dec
shll
inc
add
add
mov
ret
addb
add
testb
add
add
add
aas
mov
sub
addr16
adc
adc
mov
fidivrl
or
cmpsl
int
mov
mov
add
sub
add
addb
daa
mov
adc
xor
pop
std
jae
push
add
add
sbb
add
jmp
add
or
xor
pop
lock
cltd
xchg
jl,pt
loope
out
insl
xor
sti
popa
push
add
jnp
push
mov
loop
mov
mov
push
shll
inc
add
sub
gs
xor
xor
add
xchg
and
ficompl
add
xor
imul
cmp
xchg
repnz
sahf
cmpsl
addr16
sti
bound
mov
add
add
mov
lods
cmp
scas
mov
inc
add
pop
push
add
mov
adc
addr16
repnz
test
add
mov
cli
and
add
fidivrl
movb
lret
rolb
out
push
adc
mov
add
adc
aad
outsl
fwait
dec
lret
push
add
xor
and
aaa
daa
pusha
add
addr16
add
fsubl
add
add
arpl
stos
and
pop
or
push
add
testb
jo
data16
imul
bound
mov
out
add
mov
add
or
es
add
sbb
lods
cwtl
incb
cltd
fbld
mov
das
jl
lret
xchg
xor
adc
imul
mov
add
cmp
add
add
cmp
add
add
add
mov
add
xlat
sub
push
add
add
add
push
add
sub
dec
cmpsb
add
pusha
add
fisubrl
mov
mov
add
lods
sbb
popf
rolb
out
test
push
add
mov
add
add
divl
jge
test
add
xor
or
or
fbld
lret
ja
push
jmp
pop
lret
mov
xchg
test
add
xlat
andl
lcall
add
add
push
add
js
leave
mov
dec
les
xchg
add
movsb
add
call
add
mov
mov
loope
jl
push
add
sbb
aam
ficoml
add
popf
jecxz
stos
inc
data16
xchg
add
push
add
insb
push
add
icebp
jge
add
cmpsb
add
mov
mov
cmp
fcmovb
addb
add
push
add
add
imul
mov
ss
add
add
add
mov
mov
add
mov
mov
sbb
add
ret
ficompl
mov
sbb
aam
ret
outsl
ret
cmp
add
divl
push
mov
gs
add
pop
xlat
nop
add
add
jb
sbb
or
add
mov
mov
jo
int
xor
enter
jge
add
xchg
and
stos
in
fldcw
pop
mov
inc
push
add
add
add
add
insb
addb
sub
push
adc
add
add
push
add
lods
movb
add
sub
dec
mov
add
pop
testb
add
mov
test
frstpm(287
push
push
jbe
testb
lahf
sub
aaa
out
in
insb
add
add
xchg
add
pop
subl
add
jecxz
mov
pop
divl
out
add
in
mull
rolb
add
dec
cmp
dec
and
mov
cmpsb
add
sbb
add
daa
int3
pop
cwtl
add
bound
mov
inc
add
mov
cmp
push
out
add
orl
jb
mov
cmpsb
add
pop
sbb
mov
pusha
add
add
test
jae
add
fmull
xchg
mov
xchg
xchg
fbld
sahf
lahf
fs
ret
stc
popf
dec
pop
int
add
mov
cmp
jecxz
ret
add
add
mov
sbb
cmc
mov
and
popa
dec
add
mov
repnz
add
sub
jge
add
adc
loopne
jg
add
or
sbb
pop
js
pop
cmp
cmp
add
xor
mov
jmp
add
std
jne
pop
leave
mov
xchg
add
leave
rolb
mov
fisubrs
cwtl
test
add
pop
pop
dec
add
add
mov
add
sbbl
cmp
add
add
add
lcall
add
das
popf
imul
icebp
dec
fidivl
and
into
add
std
mov
inc
add
push
ret
pushf
test
imul
dec
lret
xchg
add
vpxor
outsb
xchg
mov
add
mov
or
sarl
push
add
ret
jecxz
popf
lcall
je
jae
pushf
sahf
pause
add
xor
mov
inc
add
dec
mov
mov
inc
add
mov
iret
adc
inc
bound
mov
daa
or
sbb
xor
ja
loope
pop
in
lods
or
loope
adc
inc
and
mov
imul
push
add
or
mov
leave
push
add
add
add
data16
add
push
add
das
push
xor
out
std
mov
cmp
enter
cwtl
push
rolb
cmpsb
add
add
add
add
fidivl
add
cmp
inc
inc
add
fmull
inc
cmp
add
mov
aas
mov
rolb
cmp
add
nop
add
aad
leave
ljmp
sbb
mull
add
sbbl
std
js
add
mov
add
mov
mov
add
push
ret
sub
mov
test
sti
enter
dec
adc
fisttpl
cld
mov
cmpsl
push
add
clc
outsb
rolb
ret
je
cmpsb
add
mov
mov
mov
outsb
or
pop
push
scas
jmp
addb
mov
addb
add
cwtl
add
mov
jnp
add
xlat
mov
sbb
mov
adc
repz
scas
sub
add
push
add
aad
pop
pop
or
add
mov
cmp
mov
mov
mov
add
add
aaa
xor
data16
imull
dec
loop
adc
sbbl
add
mov
testb
popf
add
mov
or
and
test
lods
in
and
sub
add
addb
rorl
dec
scas
loop
mov
add
imul
mov
ret
push
add
add
lea
add
xorl
les
push
add
cmpsb
add
inc
add
push
add
and
mov
add
lds
adc
movb
out
add
mov
insb
add
mov
add
inc
testl
dec
aad
test
mov
stos
cmpsl
jne
add
outsb
sbb
jae
add
fidivl
or
mov
data16
add
add
push
push
jg,pn
add
add
cli
push
add
aam
sub
ret
pop
mov
add
push
add
xor
in
mov
lret
mov
mov
lods
rolb
mov
add
cld
sbb
jbe
xchg
add
jg
add
inc
add
mov
sbb
testb
adc
dec
inc
add
or
mov
testb
loopne
sub
push
out
testb
sub
add
push
xor
lea
mov
mov
add
jne
pushf
lds
push
add
out
nop
add
mov
dec
mov
xchg
mov
mov
mov
movl
add
lret
inc
mov
pop
cmp
add
outsl
out
xchg
cltd
sub
add
add
loop
adc
and
mov
push
add
data16
clc
cmpsb
add
stc
leave
test
imul
and
gs
in
xor
data16
rolb
cmpl
int
add
sti
adc
add
dec
jae
inc
add
pushf
inc
pop
lahf
mov
add
add
xchg
add
inc
shr
out
mov
add
jmp
je
movsb
add
add
loope
cs
push
into
mov
ds
add
xchg
add
addl
outsb
jle
add
jae
jae
ss
ljmp
popa
pop
dec
jne
fistl
add
adc
inc
aaa
mov
jbe
cmc
scas
mov
jle
add
add
or
mov
jae
lds
nop
add
mov
jnp
in
test
mov
in
mov
add
mov
mov
add
aad
mov
fcmovne
popf
dec
outsl
xor
xorl
and
rorl
mov
addb
ds
inc
add
xchg
add
test
add
and
bound
mov
out
cmpsb
add
lods
cmp
into
sub
dec
aas
mov
inc
add
add
add
jl
add
data16
pop
mov
xor
lock
stc
adc
xor
addb
add
mov
mov
cmp
xchg
add
or
ss
jecxz
jns
jp
add
imul
push
add
xlat
pop
inc
push
add
jle
dec
gs
xchg
mov
into
or
add
add
add
add
xor
sub
je
adc
add
mov
out
pop
sub
repz
dec
add
enter
aaa
add
sub
in
and
call
inc
daa
push
mov
call
mov
add
add
dec
sbb
lret
and
ljmp
add
jmp
mov
dec
pop
inc
add
into
inc
add
outsl
pop
mov
jl
ret
testl
add
stos
xchg
fisttpl
ljmp
sub
push
push
add
add
lcall
sbb
fnstenv
add
rolb
jae
ret
stos
cmp
add
add
hlt
add
and
mov
xchg
add
add
xchg
add
push
mov
add
mov
negl
add
das
jae
sarl
fildll
add
in
add
loop
xor
mov
add
imul
aam
xchg
out
andl
leave
xor
movsb
add
arpl
or
aam
jmp
ljmp
mov
and
bound
mov
popa
mov
add
repz
mov
mov
aam
ljmp
mov
cmp
add
and
and
add
add
adc
push
sbb
lret
popa
push
add
add
add
add
xchg
cmp
jge
fcomps
add
or
rolb
mov
add
in
pop
jmp
add
push
add
xor
sbb
outsb
fldcw
add
jno
add
adc
xchg
add
add
add
xchg
mov
cmp
pop
movb
jle
in
add
rolb
cltd
mov
add
pop
daa
mov
add
add
push
dec
addb
mov
xor
int
pop
and
add
add
bound
mov
xchg
test
push
repz
inc
add
xchg
push
scas
fldenv
mov
add
popf
fs
pop
out
call
ret
cmpsb
add
push
add
mov
add
inc
add
and
lods
mov
add
hlt
add
add
add
mov
add
mov
popa
sbb
in
sub
add
aad
xor
jno
add
addb
sub
inc
adc
stos
xrelease
xchg
sub
add
cmp
fisttpl
pop
jecxz
mov
pop
inc
or
add
bswap
mov
or
push
out
mov
or
push
add
rolb
lods
testb
adc
xor
cmc
mov
add
add
rolb
jno
lds
add
add
enter
push
add
add
in
dec
pushf
mov
inc
add
add
mov
pusha
add
cmp
xor
imul
mov
sbb
add
lock
add
add
dec
inc
or
scas
mov
push
pop
or
add
lret
int
push
add
rolb
mov
insb
lds
repnz
inc
add
aaa
push
add
cwtl
push
ret
pop
cltd
jle
add
out
leave
addb
pop
jle
add
idivl
addr16
cmp
mov
xchg
loop
fstl
push
add
mov
inc
add
xchg
add
add
add
je
jae
push
mov
mov
stos
push
add
add
loopne
jecxz
add
or
std
testb
xlat
repz
xor
fst
add
push
add
add
add
fdiv
xchg
xlat
mov
lret
ja
add
mov
pop
jmp
inc
fcom
addb
adc
sub
fsubrs
add
add
out
jbe
shll
sub
add
xchg
add
add
and
add
add
cmp
add
cmp
mov
mov
add
xor
inc
ljmp
mov
repz
adc
add
cld
or
mov
push
xchg
mov
and
mov
jmp
sub
test
mov
call
sub
mov
push
add
mov
stos
movsl
xor
add
mov
imul
dec
mov
xchg
jne
or
ret
fnsave
add
test
pop
xchg
add
xchg
add
jecxz
shll
insb
fstl
and
mov
add
add
inc
add
add
addr16
add
jmp
jl
add
mov
add
add
mov
movsbl
add
add
xchg
add
cli
iret
movsb
add
dec
mov
jmp
mov
cli
xchg
add
jp
add
mov
mov
pop
push
stc
mov
sti
sbb
push
add
adc
rolb
sbb
jecxz
mov
add
jmp
cmpsb
add
add
fisttpl
mov
jge
sub
mov
rolb
addb
add
leave
or
mov
xchg
mov
and
jne
add
lods
jns
into
sarl
hlt
add
mov
outsb
push
add
test
add
or
adc
movsl
repnz
add
inc
add
add
adc
fimull
xchg
inc
ss
ret
pushf
mov
sbb
rolb
lcall
rolb
dec
jp,pn
fisubrs
add
cltd
jb
add
push
add
stc
enter
add
inc
add
jp
ds
rolb
mov
add
add
mov
jnp
dec
bound
mov
iret
in
js
mov
add
subps
add
add
shll
clc
jnp
test
mov
inc
and
fmuls
add
mov
cmp
jg
mov
int3
or
add
add
add
mov
add
or
add
add
ljmp
add
add
add
mov
ss
add
xchg
into
pop
sub
or
and
xlat
mov
lea
lea
add
dec
pop
xchg
leave
mov
sti
push
add
add
or
add
test
add
icebp
pop
push
ljmp
add
add
pop
pop
pop
les
aas
pop
push
mov
add
add
add
jmp
jae
add
jns
xchg
jmp
push
add
add
test
add
xlat
rolb
add
imul
add
cmp
mov
lahf
repnz
add
mov
mov
or
add
dec
pop
pop
jl
add
add
addb
add
bound
mov
cltd
and
mov
add
loope
jns
add
and
mov
jl
add
add
daa
xchg
add
cmp
mov
xorl
xor
adc
mov
and
mov
cmc
jmp
add
js
sbb
jae
inc
add
add
add
mov
dec
adc
mov
rolb
lret
movsb
add
add
add
add
test
xor
mov
rcrl
add
add
pop
std
rolb
jmp
insl
mov
add
adc
adc
add
lock
add
mov
lock
add
scas
xchg
add
mov
mov
pop
outsl
outsb
sbb
popa
loopne
mov
cwtl
int
mov
xchg
loop
push
push
add
call
add
out
add
mov
ds
lret
xor
add
sbb
jns
add
add
loope
out
leave
xor
imul
add
inc
aam
test
test
test
mov
rolb
pop
sub
ss
add
mov
add
or
lods
adc
ret
jae
pop
xor
cmp
addb
sbbl
jmp
adc
clc
lcall
lcall
add
sbb
xchg
push
add
mov
mov
ss
jmp
add
gs
jns
enter
add
mov
rolb
add
mov
sub
outsl
sbb
pop
xchg
add
punpcklbw
mov
add
or
addb
push
lods
lods
sbb
inc
jg
fisttpll
lods
push
add
add
jg
or
das
dec
adc
push
push
mov
rolb
add
mov
add
mov
repz
cmpsl
xchg
add
cmpsl
stos
je
mov
in
inc
aas
dec
fwait
mov
add
mov
mov
jecxz
mov
add
aam
xchg
lea
movsl
mov
arpl
call
test
nop
add
fwait
mov
add
insb
mov
pop
testb
add
xor
mov
push
je
popf
xchg
add
les
int
test
mov
lret
add
imul
lods
jnp
add
in
popa
lods
lahf
mov
push
add
leave
jmp
das
test
mov
add
rolb
add
mov
cmpl
push
add
lahf
sti
in
rolb
push
add
mov
add
add
cli
aaa
mov
sub
add
or
inc
rolb
or
scas
rcrl
scas
jb
cmp
call
dec
movb
mov
add
mov
lock
movsb
add
sbb
mov
lods
mov
daa
pop
add
add
jecxz
daa
cli
mov
dec
mov
les
addr16
daa
jecxz
outsb
push
mov
pop
push
nop
add
in
fdivr
hlt
add
cld
lds
xchg
add
add
int
or
movsl
test
insl
cmp
cmp
add
cltd
mov
cli
daa
stos
and
nop
add
repz
add
jnp
out
insb
adc
pop
adc
lods
test
enter
pop
mov
movb
and
pop
mov
test
gs
jmp
push
add
jne
pop
mov
lea
ljmp
push
add
add
jbe
pop
xchg
sub
add
or
add
das
addb
clc
or
add
mov
rolb
arpl
sbb
mov
inc
add
fwait
inc
add
jmp
testl
mov
adc
jle
pop
pop
out
lods
xor
pop
xor
rolb
enter
add
test
add
add
int
add
das
push
jl
je
jb
jge
push
pop
cmp
out
cmp
xchg
inc
and
rcrl
add
jbe
mov
add
add
add
fs
mov
out
int
push
mov
or
xor
jb
jecxz
cmp
sbb
add
add
mov
andl
mov
mov
inc
add
add
mov
add
add
cmpsl
mov
mov
push
aam
add
add
or
mov
add
jne
push
add
push
and
dec
mov
dec
xor
imul
orl
pop
dec
fidivrs
outsl
in
xchg
in
test
loop
call
inc
jle
push
add
add
jle
pop
pop
push
mov
mov
add
add
insl
movl
mov
or
imul
sub
lods
insl
shll
jmp
or
mov
std
stc
lds
imull
xchg
ss
in
fisubrs
ljmp
test
insl
cmc
cltd
xlat
int
push
and
inc
mov
cmp
test
pop
movsb
add
add
cld
mov
scas
sbb
daa
mov
dec
movb
push
add
xor
push
add
add
add
add
xchg
jb
stc
aam
jmp
push
pop
pushf
cmc
aas
cwtl
and
mov
rolb
push
add
push
add
clc
pop
push
add
fstps
xor
negl
add
add
stos
dec
arpl
pop
jo
jecxz
arpl
inc
add
add
daa
out
xchg
add
add
nop
add
add
ja
stos
sbb
mov
add
push
loop
rolb
push
lock
add
xlat
mov
movb
ja
ja
push
adc
aam
push
add
mov
pop
pop
out
or
js
add
movb
jno
add
adc
in
gs
pop
xchg
add
sbb
sbb
mov
stos
int3
pop
lahf
movsb
add
and
sub
or
fucomi
js
popf
ja
ret
pop
push
add
push
add
xlat
sahf
fadds
dec
mov
add
mov
cltd
aad
pop
pop
imul
out
add
add
mov
pop
test
decb
in
add
add
mov
add
aam
mov
xor
shrl
push
cwtl
add
sub
mov
add
mov
push
jne
movb
or
hlt
add
jg
hlt
add
sub
add
add
test
mov
xor
stos
std
and
add
cmc
loopne
lods
bound
mov
mov
sti
and
lcall
mov
push
xchg
sub
pop
scas
decb
hlt
add
stos
cwtl
mov
insb
test
popf
xchg
xchg
add
pop
lock
add
inc
add
mov
xor
adc
movb
push
fcoml
fwait
xchg
into
cltd
loop
movsb
add
dec
mov
add
cli
emms
mov
call
out
mov
add
add
sbb
add
sbb
push
add
add
adc
aam
mov
jmp
mov
sbb
add
mov
cmp
add
add
add
push
add
add
mov
sbb
jno
filds
add
add
dec
test
jmp
iret
cmp
cwtl
pop
inc
add
in
add
add
inc
push
add
enter
add
add
mov
jno
add
cmpsb
add
inc
pop
dec
jle
gs
jne
add
add
rolb
dec
pop
sub
les
xchg
fidivrl
and
mov
add
mov
and
outsl
ja
add
add
add
add
loope
mov
fisttpll
sahf
movsb
add
mov
dec
and
mov
mov
xchg
in
sub
jmp
lret
rolb
xor
adcl
and
mov
add
add
add
mov
daa
pop
das
mov
add
ds
add
mov
add
js
push
add
add
cltd
adc
cmp
data16
cmp
addb
mov
in
rolb
inc
add
in
and
mov
in
jo
mov
push
add
adc
inc
xor
xchg
add
test
dec
xor
inc
and
arpl
jp
sub
sub
add
xor
add
add
add
aas
and
mov
add
add
jb
ja
add
pushf
aas
jns
xchg
add
push
aad
add
aad
or
add
add
ljmp
cmpl
or
add
in
xchg
out
xchg
bound
mov
add
imul
std
iret
je
lret
add
add
cmp
add
pop
add
mov
push
add
add
push
add
add
das
xor
mov
popf
cmp
push
add
mov
add
add
push
dec
push
rolb
rcll
mov
pop
addb
jnp
xchg
add
and
and
add
add
add
pusha
add
repz
add
mov
les
push
jmp
cmp
xor
pop
outsb
mov
add
push
add
clc
sahf
mov
sub
add
mov
add
mov
pop
push
xor
lds
add
add
sbb
pop
testb
add
cmpsb
add
add
mov
data16
out
dec
fwait
aad
insl
lret
sbb
nop
add
outsl
xor
push
add
lock
push
xor
xchg
inc
add
xor
mov
stc
or
clc
xchg
add
and
pushf
ret
and
mov
cmpl
or
or
mov
add
ljmp
mov
pop
test
jg
push
add
mov
scas
mov
cmp
sbb
aas
pushf
dec
and
mov
imul
add
movsl
sbb
lea
add
movb
bound
mov
add
add
aaa
in
ret
mov
add
in
lahf
add
imull
pop
cmp
add
ficoms
jp
add
mov
add
jno
and
iret
scas
push
jmp
add
xchg
add
xor
cmp
add
popf
or
xor
push
add
ja
jns
add
cltd
dec
sub
pusha
add
leave
dec
mov
mov
subl
lods
fnstenv
xchg
mov
push
add
dec
jo
mov
xchg
add
cltd
mov
cli
jo
fisubl
cmpsl
arpl
scas
int
push
add
out
add
mov
cli
aaa
xor
xor
mov
add
add
addb
add
sqrtps
add
ljmp
add
xor
dec
pcmpeqd
add
jp
les
aam
movb
pop
js
add
cmc
add
sub
jnp
insl
inc
add
xrelease
add
insl
mov
dec
cmp
add
jbe
addb
jbe
and
mov
cmp
add
cmpsl
cld
lret
out
add
add
bsr
in
jmp
ja
sub
iret
jp
scas
testb
adc
add
mov
add
int3
sub
push
add
stos
lret
outsb
xchg
add
add
add
dec
push
movsl
lahf
inc
add
add
iret
imul
add
add
mov
add
sti
cmp
pop
sbb
add
add
add
add
cmc
movb
mov
push
add
sub
push
push
add
enter
scas
dec
rcll
push
add
add
insb
mov
mov
insl
cwtl
nop
add
add
repz
add
push
add
jns
sbb
mov
xchg
xor
out
push
add
or
add
add
jg
add
rcll
in
dec
pop
inc
test
or
into
scas
adc
outsb
or
pop
nop
add
arpl
movsb
add
aam
stc
mov
stc
inc
add
or
mov
and
mov
add
mov
test
fstps
add
addr16
add
mov
aas
mov
add
cli
cmp
add
push
test
add
add
inc
add
scas
rorl
mov
xor
fwait
mov
mov
in
sub
add
mov
add
mov
mov
pop
test
or
add
mov
loopne
aas
ret
add
xchg
into
out
add
mov
insb
call
loop
lods
jnp
sbb
outsl
pop
cmp
push
add
les
push
add
add
fmul
push
dec
data16
inc
add
push
pop
shll
add
mov
add
pop
cs
pushf
pop
mov
jge
aam
inc
xchg
add
sub
das
sbb
loope
cmp
daa
mov
fistl
sub
add
pop
lcall
lods
add
lcall
push
add
pop
addr16
add
xor
in
test
add
add
mov
gs
add
xchg
push
add
inc
add
sub
sbb
daa
popa
nop
add
inc
fstl
add
xchg
or
add
sub
mov
dec
stos
xor
stc
lods
jae
dec
adc
loop
add
mov
jne
add
repz
xor
sbb
lds
mov
call
dec
aam
addb
les
push
add
add
ret
jnp
add
in
gs
push
add
dec
dec
cmp
add
mov
add
in
pop
dec
adc
add
movb
add
xchg
xchg
add
push
stos
ljmp
bound
mov
pop
mov
add
dec
outsb
insb
dec
jp
add
sbb
ds
loop
mov
mov
lahf
ret
add
add
adc
add
ret
cmp
mov
lock
ret
and
lcall
pop
scas
cmpsl
push
add
add
push
rcll
add
add
enter
add
jecxz
lock
addb
add
je
lods
out
hlt
add
hlt
add
push
add
push
mov
add
mov
pop
inc
add
das
sti
in
xchg
or
enter
add
push
or
pop
incb
add
jecxz
inc
add
mov
add
mov
cmc
dec
xlat
cld
xchg
add
add
xor
ja
mov
cltd
sbb
add
or
add
adc
out
stc
mov
push
add
sub
addb
sti
rolb
test
sbb
add
add
add
xchg
stc
mov
in
scas
repnz
jnp
cmp
int3
xchg
pop
or
dec
outsb
scas
jge
add
add
sub
add
aam
cld
push
add
test
xor
mov
lret
addr16
add
push
add
add
cmp
sub
push
add
stos
mov
mov
add
mov
sbb
in
sbb
je
mov
adc
inc
add
fstpt
adc
lock
mov
jne
pop
test
add
fldcw
push
pop
stc
and
add
cmpsl
mov
or
add
arpl
std
lret
stos
shll
mov
adc
add
cld
in
clc
dec
add
mov
xchg
inc
add
mov
inc
add
add
inc
add
push
adc
add
pop
and
mov
into
or
add
jecxz
add
xor
fisubrs
lock
hlt
add
add
push
add
add
gs
ja
add
mov
add
mov
scas
jno
mov
fisubs
add
mov
xor
cmp
add
add
jns
mov
push
add
rolb
pop
stos
call
out
cmp
fistpll
nop
add
xchg
inc
ret
add
add
add
xchg
mov
data16
mov
push
adc
movsl
pop
push
add
aad
pop
lock
xchg
add
test
add
mov
stos
push
cmp
dec
add
mov
das
pop
sub
cmpsb
add
jle
aas
mov
insb
jbe
int3
xchg
add
out
or
inc
mov
mov
mov
cmp
mov
sub
dec
pop
loope
fsubl
and
xor
and
mov
jl
dec
fistpll
jge
add
cmp
add
insb
movb
sti
out
pusha
add
add
cmp
das
ljmp
dec
gs
rolb
addb
lahf
lds
add
rorl
add
add
mov
add
xchg
ljmp
icebp
push
in
xchg
xlat
ret
and
push
inc
add
add
mull
inc
add
add
inc
stos
jb
mov
add
rcpps
das
xor
jns
add
daa
push
gs
add
jbe
sbb
in
adc
cmp
pop
xchg
jb
lret
mov
frstor
mov
in
dec
jns
pop
mov
inc
add
xor
and
addb
mov
add
add
jbe
mov
jns
pop
aas
pop
jp
out
cmp
pop
pop
add
mov
xor
xorps
mov
hlt
add
add
fildl
jp
lahf
pop
xchg
add
call
xchg
dec
mov
add
mov
mov
rcll
add
sub
add
add
icebp
push
cmpsb
add
jge
aas
mov
add
add
dec
adc
movsb
add
add
add
cmp
movq
add
mov
add
xor
dec
insb
push
add
popf
dec
lret
dec
frstor
add
rolb
rolb
jp
leave
ja
add
pop
leave
notl
mov
jns
sbb
add
add
xchg
add
inc
add
push
add
sub
cmp
js
add
add
lea
imull
pusha
add
add
mov
aaa
pop
pop
mov
fucomip
les
sti
pop
inc
add
insl
cs
push
add
lcall
test
fucomp
sbb
pop
push
add
add
sbb
add
add
bound
mov
add
lret
hlt
add
ds
std
jns
fdivl
sbb
in
inc
add
push
cmp
inc
add
adc
daa
push
add
jecxz
outsb
add
dec
insb
mov
add
mov
lds
jbe
or
pop
daa
xchg
cmp
push
mov
sbb
rcll
xchg
lods
fxch
xor
xchg
xor
std
dec
bound
mov
add
lea
sub
rolb
add
jp
add
adc
add
add
add
add
mov
mov
std
js
dec
inc
add
je
stos
fwait
add
repz
add
pop
jg
sbb
add
add
xchg
aas
sbb
inc
add
out
xor
loope
add
xor
sub
add
sbb
and
mov
cmp
add
imul
ljmp
inc
add
add
jle
in
add
lods
cmp
repnz
iret
jne
inc
rolb
sbb
leave
mov
add
add
sbb
add
sahf
popa
loope
xor
ficoml
push
fdivs
pop
pop
cwtl
jl
leave
pop
in
movb
and
add
push
mov
push
add
jae
add
imul
adc
pop
rolb
or
fistpll
into
xchg
add
mov
sbb
add
add
lods
adc
dec
popa
mov
out
or
ljmp
inc
sbb
mov
add
or
add
mov
push
add
add
add
mov
and
mov
in
rolb
mov
fstps
mov
das
insl
push
add
add
push
mov
add
in
cmp
das
in
fyl2xp1
mov
dec
push
in
cmp
add
data16
hlt
add
pop
jg
push
add
test
add
add
add
fstps
add
aad
ds
push
add
mov
in
popf
js
fisttpll
sub
add
and
mov
imul
or
push
mov
ret
mov
add
jmp
movb
add
lods
sqrtps
add
jnp
xor
sub
add
cmp
dec
test
add
ud0
mov
movsb
add
add
add
add
add
add
dec
out
push
add
stc
cmp
inc
add
and
mov
xor
ficoml
add
add
mov
push
add
repnz
sbb
mov
add
lcall
xlat
outsb
or
addb
add
loopne
sahf
mov
add
pop
arpl
inc
add
movsb
add
mov
pusha
add
fnsave
add
mov
adc
sbb
add
jg
pop
ret
addb
das
xchg
ja
add
in
adc
inc
outsl
ja
cmp
out
les
mov
or
push
add
push
in
and
sub
loope
add
mov
paddusw
add
pop
mov
and
dec
jns
je
xor
push
stos
push
push
add
mov
xor
mov
xchg
add
add
and
add
movsb
add
movsb
add
pop
scas
repnz
aas
pop
sub
or
mov
jle
cs
add
lret
add
add
or
add
add
jge
add
xor
inc
add
add
mov
pop
sub
add
add
add
dec
dec
scas
or
add
add
add
rolb
mov
ds
test
add
int3
jmp
dec
adc
aaa
data16
jl
add
pop
adc
mov
cli
cs
stos
popa
in
pop
inc
mov
leave
push
add
xchg
xchg
lcall
repnz
adc
les
push
add
mov
daa
xchg
xor
add
cmp
enter
rcll
das
pop
pop
sbb
jb
and
lcall
and
mov
add
add
dec
in
sysret
sub
test
outsl
data16
pop
push
add
add
cmpsb
add
inc
add
xchg
add
add
inc
push
jg
push
add
jnp
dec
cmp
add
mov
addb
add
roll
loopne
xchg
fisubs
pop
scas
mov
push
add
add
add
add
add
add
aas
cmpsl
push
add
inc
push
mov
xchg
std
scas
fistl
add
add
mov
add
xor
add
mov
add
mov
add
mov
cmpsl
call
ret
add
mov
add
mov
adc
xchg
push
add
imul
mov
mov
orl
add
add
outsl
neg
ret
mov
mov
loop
rolb
bound
mov
add
movsl
insl
or
shrl
add
jl
cmp
popf
arpl
jno
ljmp
mov
dec
outsb
ret
or
mov
mov
shll
adc
cmp
insl
push
rolb
mov
nop
add
test
push
push
push
push
add
add
push
add
add
add
sbb
rorl
mov
out
nop
add
add
add
popa
repnz
xchg
add
dec
push
jo
das
xchg
rolb
pop
pop
pop
push
sub
les
and
add
dec
dec
jp
add
cmpsl
inc
add
add
dec
ljmp
shll
pop
adc
psrlq
cmp
add
mov
sub
add
xchg
lods
je
out
out
aam
fnstsw
pop
lcall
in
out
lahf
pop
xor
and
mov
out
cli
repnz
pop
jmp
fucom
add
cmp
test
push
add
imul
add
daa
mov
std
xchg
add
xor
jae
rolb
or
fninit
imul
xor
addb
push
add
das
adc
jb
mov
add
xor
and
mov
pusha
add
movsb
add
in
or
mov
add
jge
test
nop
add
add
scas
ret
add
add
jmp
sbb
pop
repz
das
test
pop
fisubl
loop
ret
fistpl
addb
add
shl
add
xchg
add
add
lock
mov
jbe
sbb
mov
jp
add
xchg
xchg
inc
add
add
add
push
add
aas
data16
mov
add
je
insl
iret
pop
leave
dec
call
mov
add
fstl
add
mov
dec
cmp
orl
test
add
add
sbb
add
push
add
add
scas
jne
push
mov
mov
fldt
add
in
mov
or
push
cmpsb
add
icebp
stc
insb
sbb
addb
jmp
popf
dec
xor
aam
fildll
add
add
icebp
sub
add
pushf
sub
add
jmp
add
pushf
dec
aaa
jmp
mov
clc
cmp
xor
sahf
in
fcompl
add
mov
xchg
add
jmp
jecxz
pop
inc
fwait
mov
sbb
adc
jns
add
add
lret
and
mov
scas
xor
cmpsb
add
test
add
mov
add
mov
add
or
fisubrs
fcoml
sub
jg
jp
add
lods
scas
out
jge
lds
rolb
adc
adc
push
xlat
sub
pop
mov
outsl
jb
push
xor
or
add
mov
push
jg
xchg
fnstcw
push
add
add
arpl
out
and
mov
add
lahf
inc
cmpsb
add
push
add
stc
and
add
push
add
clc
gs
add
and
jp
xor
cli
mov
jne
jbe
adc
push
das
and
add
rcll
nop
add
cltd
adc
add
push
add
adc
sbb
js
sub
add
inc
add
repz
cmpsl
and
mov
popf
cwtl
insb
out
and
mov
add
sub
add
popa
ds
cs
xchg
add
inc
add
nop
add
movsl
jmp
add
inc
add
popf
sbb
lock
sub
fisttps
mov
repnz
dec
leave
int3
movsl
jle
lods
sub
push
add
push
add
hlt
add
add
add
dec
cmp
add
xor
xor
int
mov
fsubrs
lea
mov
addb
add
add
add
add
add
cwtl
fcmovbe
mov
add
sub
add
mov
jp
add
add
stos
adc
testb
stos
jle
xor
add
add
add
add
add
and
mov
fnstsw
rolb
test
dec
jecxz
add
add
add
repz
sbb
add
mov
cmp
dec
in
adc
fldenv
dec
push
mov
ds
add
rolb
fstp
call
xor
mov
inc
movsl
cld
imul
repnz
cmp
jg
or
pop
mov
in
fwait
lahf
sub
in
mov
xor
add
mov
mov
pop
and
cmp
data16
xor
incb
add
add
add
and
add
mov
jge
add
mov
add
pop
lret
dec
push
add
add
cld
addb
push
mov
stc
scas
shll
cmpsb
add
inc
int
scas
push
mov
add
or
add
movsb
add
cwtl
push
add
sbb
add
mov
xchg
add
add
aas
ss
loope
add
push
sub
in
add
mov
mov
jbe
pop
fsts
sahf
inc
xchg
in
rolb
ja
pcmpeqb
out
dec
addb
mov
add
add
loope
rcrl
cs
mull
fldenv
mov
add
add
or
add
adc
mov
add
mov
mov
fcomip
sub
dec
xor
adc
cmpsl
pop
lods
loopne
aam
nop
add
add
add
add
add
out
leave
jb
test
insb
pop
jge
sbb
inc
jbe
jg
pushf
cld
lcall
xchg
jo
or
add
lods
ret
inc
add
push
xor
mov
movb
add
add
add
add
ljmp
addb
mov
add
loope
add
or
aam
cltd
addr16
add
add
add
adc
popf
bound
mov
push
add
xor
inc
add
bound
mov
add
in
cmpsl
jbe
outsl
cmp
dec
pop
lret
ret
adc
add
add
adc
mov
add
mov
mov
or
into
sbb
push
add
sbb
jge
ljmp
inc
addb
add
add
add
xchg
js
add
ds
dec
add
xchg
loop
ret
int3
insl
pop
out
pop
movsl
jo
dec
popf
and
sbb
in
jp
sbb
ja
pop
push
add
add
jno
cmp
mov
pop
adc
xchg
add
pop
gs
rolb
xchg
add
sbb
add
mov
add
cmp
jp
add
lcall
loopne
push
inc
out
clc
sub
out
add
add
mov
inc
mov
adc
push
add
pushf
or
add
add
add
mov
xchg
jle
std
mov
arpl
cwtl
adc
cmpsl
addb
jbe
add
mov
add
in
mov
add
or
xor
cltd
mov
rcll
add
pop
mov
add
push
xor
jb
pop
pop
or
or
jae
add
pop
push
add
das
fistps
les
xor
add
fcmovne
add
cmp
mov
mov
sbb
add
jmp
push
add
mov
testb
add
or
cld
jb
fcompl
push
add
sub
mov
cmc
mov
stos
add
mov
repz
inc
xor
sub
add
pop
rolb
iret
cs
adc
popf
sbb
push
and
mov
push
leave
rolb
cmpsb
add
add
mov
push
add
inc
add
push
clc
xchg
enter
mov
pop
cmp
ljmp
addb
fistpll
push
add
add
add
ss
xor
movsb
add
xor
mov
pop
jo
ds
add
pusha
add
add
daa
fbstp
bound
mov
mov
sbb
cmp
out
test
test
cmp
cmpsb
add
stos
sbb
xor
pop
push
add
pushl
ja
add
jbe
loop
pop
pushf
loop
add
add
add
cmp
add
push
ret
int
cs
inc
push
outsb
rorl
and
into
xlat
sbb
dec
inc
pop
dec
dec
pop
push
add
mov
add
jg
sub
sub
add
lret
mov
mov
loop
rol
rolb
out
add
push
add
imul
das
xchg
rolb
call
push
add
sbb
pop
add
add
mov
adc
jmp
xor
rolb
ret
fdivrp
jg
jbe
xchg
add
mov
add
mov
jmp
xchg
add
in
and
mov
fiaddl
test
dec
popa
mov
scas
mov
xchg
mov
add
lds
imul
jbe
pop
and
mov
mov
roll
lea
push
add
rolb
movb
lock
mov
pop
in
mov
pop
ror
cmp
add
push
add
push
cmpsb
add
add
pop
ljmp
test
add
lock
cmp
add
add
xchg
aas
add
mov
stos
xor
mov
dec
fidivrs
push
add
xor
push
mov
add
pusha
add
clc
orl
test
test
mov
inc
daa
pop
in
push
or
in
jp
call
divl
dec
cmpsb
add
adc
pop
rolb
add
movl
and
mov
add
push
add
leave
aaa
loop
adc
pop
cltd
push
add
loope
xchg
add
add
mov
loop
mov
push
add
add
cmp
popa
in
std
xor
mov
push
mov
mov
cs
or
fadds
fsubrp
loopne
xchg
test
and
stos
or
jl
pop
int3
jns
push
add
add
incb
jnp
add
sub
imul
ljmp
fwait
shll
add
adc
mov
mov
xor
jp
jge
sub
push
ja
test
inc
add
repz
ja
add
mov
mov
push
pop
clc
rolb
xor
mov
mov
add
push
add
icebp
out
addl
mov
add
inc
mov
lods
mov
xchg
out
ret
cmp
add
push
jle
out
add
inc
mov
add
loopne
push
add
add
movsl
leave
add
mov
loopne
outsb
push
je
inc
rolb
cmc
xor
pop
inc
sbb
repnz
add
dec
lods
dec
dec
bound
mov
pop
jb
mov
mov
xchg
add
lods
xchg
sbb
add
dec
sbb
call
dec
popa
cltd
sbb
add
add
push
add
mov
cvtps2pi
lret
jno
cmp
lcall
add
mov
lea
jne
lea
and
adc
out
sahf
add
pop
into
insb
push
into
cmp
call
add
inc
adc
add
add
nop
add
mov
adc
push
add
mov
add
ret
loope
loopne
dec
cmp
sti
ret
jle
add
into
pop
push
add
xlat
jp
pop
rolb
fisttps
cli
mov
fnsave
sbb
cli
cwtl
mov
stc
fistpl
iret
pop
shl
add
mov
shll
dec
pusha
add
push
xchg
push
repz
in
mov
pop
insb
cli
mov
stos
xor
add
xor
add
lock
add
add
mov
add
mov
ret
adc
in
xchg
imul
xchg
add
xchg
push
add
rolb
inc
add
pop
add
jg
sbb
add
add
xchg
add
jg
sub
add
add
sub
lcall
cmp
gs
lret
mov
daa
jge
dec
aaa
js
add
sahf
pop
xchg
mov
mov
add
add
loope
mov
addb
add
lods
int3
outsl
outsl
sub
dec
pop
jg
decb
mov
adc
roll
add
push
add
outsl
jmp
aad
xchg
out
daa
push
mov
shl
std
xor
je
aas
stc
cwtl
push
add
adc
push
jns
lahf
invd
mov
xor
imul
or
inc
add
decl
push
add
das
data16
rolb
xchg
push
hlt
add
addb
add
add
adc
mov
add
add
jno,pn
cs
xor
pop
xchg
out
pop
sub
mov
and
mov
add
add
pop
xor
stc
lret
mov
cmpsb
add
mov
mov
xchg
push
insl
mov
outsl
inc
add
pop
add
add
jge
jbe
testb
add
rolb
xor
pop
popl
in
testb
cmp
add
mov
test
jl
push
addb
add
add
daa
push
mov
out
cmc
adc
loop
inc
add
mov
loop
or
add
scas
ljmp
int3
sbb
add
rolb
push
push
inc
add
pop
xchg
mov
mov
inc
cmpsl
loop
xchg
add
sub
sub
add
mov
add
mov
fldt
mov
cmp
xchg
sti
dec
loope
add
jmp
shll
push
mov
outsb
aad
add
add
add
hlt
add
dec
sub
insb
pop
fwait
jecxz
and
mov
add
and
fdivs
push
push
add
xchg
push
add
push
mov
mov
cmovbe
inc
ljmp
xchg
aaa
jle
add
stc
cmp
add
add
addb
cs
add
mov
jno
dec
or
add
add
add
cld
add
out
pop
push
add
frstor
add
cmp
add
insb
xor
inc
add
cmp
xchg
push
jmp
sbb
jmp
xchg
mov
add
dec
bound
mov
mov
mov
add
out
inc
xchg
add
ljmp
pop
outsl
ficoml
call
add
add
jg
xchg
cmp
push
add
test
fdiv
add
add
mov
add
rolb
cmpsb
add
and
add
cmp
inc
lret
scas
stc
xchg
scas
mov
add
sub
xchg
push
xor
mov
xchg
add
add
and
mov
in
sub
sbb
mov
rolb
subl
add
rolb
and
stos
cmp
mov
lret
ret
int3
cwtl
jno
mov
aaa
loop
mov
insl
adc
xlat
loopne
adc
iret
arpl
and
mov
pop
pop
jns
add
push
and
add
cmp
push
add
dec
les
or
pop
jo
scas
add
pop
jmp
adc
lods
fdivp
pusha
add
add
jecxz
push
pop
mov
ret
inc
add
xor
add
add
jg
jno
or
mov
push
add
add
cmc
jmp
mov
and
data16
insl
addb
dec
das
dec
inc
in
pop
mov
add
add
call
idivl
add
popa
xor
cmpsl
repnz
mov
aad
xchg
dec
lods
jmp
lcall
add
add
add
lcall
cmp
addr16
enter
pop
or
mov
jecxz
add
add
push
jne
add
add
les
ss
sti
stc
sahf
pop
mov
xor
pop
mov
mov
adc
xchg
pushl
push
nop
add
push
add
adc
cli
fwait
dec
jl
int3
mov
aaa
xchg
or
mov
add
add
stos
popa
loope
ljmp
add
sbb
inc
lret
fsubl
mov
add
in
mov
add
add
popf
addr16
movb
add
push
add
add
inc
xor
ret
pop
sub
scas
mov
add
add
mov
dec
repz
fists
out
mov
mov
add
in
xchg
add
cli
into
and
cmpsl
mov
mov
cmp
testb
adc
imul
or
or
pusha
add
lea
add
add
mov
sub
sbb
fistl
add
inc
add
add
push
mov
sbbl
fcoms
pop
repnz
jle
ja
mov
addb
ficoms
pop
xor
push
add
lods
xchg
add
or
push
add
or
pop
in
dec
adc
lock
fbld
add
add
dec
lea
fucomip
pop
ret
lock
dec
pop
add
mov
jae
fstl
aaa
xor
adc
ret
out
dec
daa
or
movsl
pop
or
add
sub
jae
adc
iret
dec
push
add
xor
add
testb
add
add
and
inc
inc
mov
sub
fsubrs
lret
xlat
push
add
sub
cmp
push
repz
push
loope
pop
pop
push
add
and
add
add
add
add
add
std
add
rcrl
and
add
shll
push
add
pop
cmp
xor
add
arpl
xchg
fwait
js,pt
inc
add
and
sahf
or
add
pop
push
add
push
add
jne
int
rolb
fldcw
pop
adc
pop
movsb
add
test
aas
fcmovne
rcrl
ds
jo
movsl
add
mov
js
add
mov
rolb
testl
mov
jle
mov
lock
add
add
add
adc
or
add
add
cmp
mov
lods
sti
arpl
lahf
ret
add
and
xor
mov
cmp
jp
loope
xor
add
gs
sti
add
loop
jp
add
rolb
adc
cmpsl
mov
mov
sbb
add
adc
add
iret
inc
jecxz
add
pop
movsb
add
inc
add
fsts
add
lods
scas
mov
test
or
mov
mov
inc
add
lret
lcall
fwait
or
add
add
inc
cli
push
add
xor
jp
rolb
ds
add
lret
sbb
int
sbb
ljmp
add
add
add
mov
add
sub
add
and
inc
fsqrt
lock
xchg
bound
mov
add
add
mov
ja
decb
mov
sbb
fstl
add
add
dec
adc
add
xchg
xchg
les
mov
out
stos
inc
cmp
insb
lea
out
mov
add
sbb
pop
pop
loop
icebp
lahf
mov
lds
std
out
int3
cmpsb
add
add
mov
add
dec
repz
sbb
in
push
add
std
cmp
mov
dec
addb
rolb
addb
mov
out
enter
addb
movsl
dec
cli
lret
lock
das
mov
inc
add
add
lock
add
adc
cmp
aas
xchg
mov
test
add
add
add
mov
sub
xor
popf
stos
xor
dec
lret
pop
fcoms
mov
movsl
test
add
xor
test
in
das
inc
orl
add
pop
sub
add
add
pop
leave
mov
mov
jl
sbb
or
dec
add
iret
dec
cmp
imul
aam
jo
dec
ja
xlat
insl
test
dec
lahf
insb
push
loope
add
loope
inc
add
add
add
cmp
arpl
xor
sbb
and
bound
mov
addb
pop
dec
cmp
pop
cmp
dec
xor
nop
add
iret
mov
jle
add
pop
push
add
jle
add
lahf
add
mov
js
fistps
mov
add
js
rolb
lret
jg
add
pusha
add
icebp
cmpsb
add
mov
jb
dec
jne
inc
or
lock
and
mov
ljmp
push
add
jbe
pop
inc
dec
les
sbbl
fsubr
xor
lds
mov
fxtract
add
and
int3
repz
pop
repnz
push
add
jno
jbe
dec
sbb
mov
test
add
mov
pop
add
or
data16
jl
sti
mov
notl
add
push
ret
cmpsb
add
or
iret
in
mov
cmp
mov
mov
dec
adc
cmp
push
add
mov
out
xchg
aaa
lret
add
cmp
and
mov
scas
mov
mov
fisubrl
ret
sub
jo
rolb
mov
sub
lcall
in
push
mov
add
jne
mov
push
add
cs
out
ret
add
test
cmpsb
add
inc
add
sti
pop
push
add
mov
jp
mov
ds
add
add
add
add
sbb
cmpsl
iret
popf
icebp
pushf
bound
mov
push
xchg
lea
pop
ja
add
cmpsl
mov
push
add
addb
lret
xorl
icebp
mov
add
mov
lock
lcall
fdivs
add
dec
je
jae
je
lods
adc
push
cmp
push
add
sbb
inc
incb
repz
xor
int
movsl
and
add
sub
movsb
add
cmp
std
dec
or
push
push
add
mov
adc
mov
add
lret
or
add
jl
add
movsl
arpl
cmpsb
add
fwait
inc
sbb
dec
icebp
xor
loop
push
add
add
mov
mov
xchg
ret
sarl
xchg
add
outsb
iret
push
add
add
les
das
add
push
add
sahf
in
hlt
add
jg
pop
sti
xor
sub
out
or
add
add
and
jae,pt
xchg
testb
jl
lock
repz
jnp
push
into
adc
push
add
add
or
movb
out
and
adc
add
popa
mov
mov
loopne
loope
daa
xor
mov
add
sbb
xor
sub
cmpsl
pushf
cmp
add
sbb
mov
inc
sahf
or
add
pop
inc
test
add
sub
sub
sub
cmpsl
mov
pop
inc
add
add
out
inc
mov
xchg
add
cld
cltd
insb
or
jl
add
add
testb
add
mov
xchg
push
cmp
add
add
adc
fwait
out
jo
mov
lods
in
push
add
adc
pop
mov
push
cmpsl
cmpsb
add
sub
lds
jbe
cld
xlat
cmp
mov
cmp
add
or
mov
or
mov
mov
add
mov
add
mov
mov
add
jp
jno
repz
int
mov
lret
lods
int3
clc
push
stc
enter
add
add
movsl
lret
inc
hlt
add
add
adc
add
dec
aaa
je
inc
add
dec
subl
add
cltd
jb
mov
outsl
jne
shl
cmp
dec
nop
add
pushf
adc
movsb
add
sub
add
add
xor
add
add
xor
jge
and
and
dec
lret
addb
push
add
push
fwait
out
pushf
shll
insb
popf
pop
cmp
test
nop
add
icebp
shll
push
add
mov
movsl
jo
mov
mov
and
mov
push
and
sub
addb
add
add
mov
rolb
or
imul
add
add
in
mov
test
pop
sbb
lcall
mov
add
insb
inc
add
add
or
insl
sub
add
lods
fmuls
dec
pop
out
lret
leave
enter
out
aaa
lret
aam
stc
insl
inc
popa
sti
cmp
leave
xchg
add
lods
mov
jo
popf
add
inc
add
add
or
outsl
dec
push
lret
jp
add
leave
xchg
scas
and
add
cwtl
pop
sbb
pop
pushf
push
hlt
add
add
mov
and
rolb
xor
xchg
rolb
push
add
add
pop
pop
push
add
push
unpckhps
leave
mov
add
out
mov
mov
push
test
in
enter
inc
add
ds
mov
clc
scas
xor
or
mov
jecxz
cmpsl
jecxz
mov
movsb
add
push
add
add
sti
sti
xor
fmuls
and
mov
jae
add
or
add
in
mov
and
push
mov
outsb
cmc
test
stc
push
cld
sbb
fwait
or
push
repz
mov
or
xor
add
add
add
test
mov
add
add
les
fidivl
add
xchg
and
add
add
add
or
inc
add
sub
push
add
add
add
std
rorl
inc
add
jle
pop
outsl
movb
lcall
adc
mov
add
mov
cmp
stc
adc
movsb
add
mov
xchg
repz
jmp
scas
sbb
add
mov
add
mov
mov
add
push
rcll
mov
add
pushf
into
hlt
add
fidivl
add
loopne
and
mov
add
add
addb
add
pop
or
jle
push
pop
xchg
add
rolb
sub
movb
add
ret
arpl
mov
mov
cmpsl
lods
int
hlt
add
outsb
jb
mov
pop
push
sbb
jns
inc
add
add
xchg
add
mov
add
add
add
int
adc
test
jp
add
movsb
add
in
add
bound
mov
add
js
lds
add
add
fwait
lods
fdivs
pop
xor
mov
dec
inc
popf
enter
inc
add
add
add
mov
mov
or
xor
push
add
test
add
and
lods
movsb
add
add
jge
add
les
addr16
test
dec
out
and
dec
xor
push
add
addb
dec
and
sbb
cmp
shll
call
imul
cli
vmwrite
dec
lods
fmul
xor
dec
add
add
and
add
aad
add
adc
pop
int3
scas
mov
push
clc
cs
into
movsl
mov
cli
mov
cmp
add
jbe
bound
mov
leave
mov
push
add
add
mov
and
mov
add
add
add
leave
push
sub
mov
mov
cmp
add
popa
mov
pop
in
enter
add
inc
add
leave
adc
rolb
jno
add
outsl
lds
add
add
add
pop
jns
or
gs
cli
test
sub
add
add
int3
test
add
xor
add
flds
add
outsl
sub
cmc
aad
mov
ds
adc
ja
lret
xorl
inc
add
add
adc
add
add
add
sbb
sub
add
pop
sti
out
iret
mov
add
ss
push
push
add
aad
sub
add
int3
pop
les
adc
and
mov
add
enter
add
test
dec
mov
sub
add
out
add
add
adc
fwait
pop
jb
out
mov
dec
ficompl
in
jle
add
xchg
cmp
fcom
sub
mov
xchg
pop
arpl
add
push
rolb
cli
adc
cltd
in
sbb
popf
scas
sbb
loope
sub
xchg
sahf
xchg
dec
pop
mov
mov
dec
and
mov
or
cmp
push
cltd
loopne
cli
cmpsl
or
mov
mov
sbb
out
pop
out
push
or
add
jne
add
mov
add
add
mov
data16
jb
xchg
arpl
add
std
dec
jmp
repnz
add
dec
fadds
ljmp
adc
sahf
jmp
jecxz
enter
jmp
push
add
sti
rolb
pop
stos
addb
add
inc
mov
jb
hlt
add
add
cmpsb
add
mov
add
adc
ds
jns
mov
add
add
adc
aas
into
scas
sub
testb
jmp
add
add
dec
lea
addb
add
add
testb
xchg
mov
lds
jo
cmp
lcall
in
add
and
cmp
mov
and
mov
add
out
loop
mov
sub
dec
jns
add
test
lcall
adc
mov
xchg
stc
das
addb
push
js
add
sub
mov
mov
repz
jae
cmp
add
add
jp
bound
mov
jecxz
mov
jge
repnz
add
icebp
fsubs
xchg
xor
add
jmp
add
fwait
loope
fiadds
call
lret
add
fisttpll
daa
mov
add
push
push
add
ljmp
mov
add
xor
sbb
inc
mov
adc
lods
xor
adc
add
adc
into
and
mov
les
sti
xchg
dec
std
rolb
movsb
add
mov
testl
mov
subl
add
add
add
mov
inc
jg
repz
testb
add
dec
test
iret
data16
jae
aam
or
jns
lds
xchg
frstor
mov
in
call
add
jl
stos
les
out
int
add
fbstp
jle
sbb
add
scas
das
jbe
loop
je
xchg
add
je
xchg
add
leave
pop
ss
inc
mov
ficoms
add
xlat
loop
mov
mov
sub
lea
inc
add
push
add
ficoml
inc
add
mov
rolb
std
or
mov
add
leave
rcll
es
add
fucomi
sahf
sbb
xchg
add
inc
add
push
add
outsb
movsb
add
sbb
add
add
add
add
cwtl
mov
sahf
pop
or
push
or
push
add
je
leave
rolb
iret
dec
in
pop
push
clc
mov
lods
xor
mov
mov
adc
jb
jmp
add
aaa
adc
push
scas
gs
cmc
xorl
sub
pop
pop
clc
addb
popf
popf
sub
push
mov
lret
testb
xor
addb
xchg
aas
jg
jecxz
mov
add
mov
mov
mov
adc
call
test
inc
outsb
and
mov
lods
mov
call
in
add
sbb
lods
call
shl
out
or
sbb
sbb
add
add
xchg
add
sbb
cmp
add
add
cmp
mov
in
cwtl
adc
lock
out
daa
inc
sub
add
add
mov
add
mov
sbb
popa
loope
jne
cmc
cld
pop
rolb
movb
add
into
mov
mov
popf
adc
jge
add
aad
test
add
mov
add
add
in
push
icebp
bound
mov
ret
popf
or
add
add
cwtl
cmpsb
add
in
int3
mov
add
add
xchg
aam
mov
movsb
add
or
push
add
add
pop
lcall
mov
add
push
and
add
roll
dec
mov
add
xor
mov
jmp
fcoml
inc
add
mov
cmp
pop
fistpll
mov
andl
test
xchg
add
cld
adc
xchg
mov
mov
inc
sub
add
test
inc
mov
testb
jp,pt
out
lcall
cmpsl
rolb
cmp
jmp
fsin
mov
popf
xchg
add
loopne
inc
out
or
data16
add
je
sub
out
bound
mov
ret
dec
mov
hlt
add
mov
add
push
add
outsb
insl
mov
jmp
add
cmp
add
sbb
xchg
add
jg
add
iret
lret
xchg
add
or
pop
int3
xor
mov
mov
pop
popa
cmp
add
sti
sbb
loop
stos
mov
pop
mov
add
les
dec
dec
roll
add
mov
mov
mov
sbb
add
or
mov
or
in
rolb
add
add
or
xchg
lds
add
cld
insl
imul
xchg
in
pop
popa
rolb
pop
add
push
add
add
in
add
add
add
lret
add
icebp
mov
xor
lret
mov
in
in
cld
mov
jae
loopne
fldt
add
dec
ljmp
push
push
add
mov
add
xor
out
xor
sahf
cmp
into
sub
sub
cmp
insb
enter
jnp
add
jg
add
xchg
data16
add
push
add
sbb
mov
push
add
pop
mov
dec
sub
jb
push
add
xor
sub
add
add
jno
add
add
clc
repz
add
add
add
mov
cmp
cmp
fmull
shrl
test
push
push
lret
lcall
jp
cmp
mov
add
jle
imul
mov
popf
addb
iret
xor
add
addr16
jl
push
pop
or
stos
js
or
xorl
and
loop
jmp
mov
or
mov
inc
mov
sbb
add
sbb
add
mov
addb
das
cltd
lcall
inc
add
add
out
cmp
add
add
test
and
out
adc
mov
pop
push
pop
enter
inc
add
dec
addb
shl
lods
rcll
aas
imul
add
popl
add
push
add
mov
andl
add
sub
jecxz
push
mov
test
movsb
add
inc
add
fnstcw
nop
add
add
or
push
add
add
sbb
add
add
and
out
xchg
add
sub
sahf
cli
sbb
cmpsb
add
add
add
loope
movsb
add
rolb
movsl
int3
adc
mov
add
push
in
mov
xchg
dec
imul
mov
add
aas
dec
pop
xchg
les
xchg
add
arpl
jg
scas
dec
mov
mov
add
xchg
scas
push
add
in
cwtl
jnp
add
pusha
add
ds
je
les
testb
xchg
add
xchg
add
jae
add
and
test
xor
aaa
mov
mov
inc
add
add
mov
mov
mov
xor
add
ljmp
push
add
sub
int
sub
add
add
sub
dec
insb
add
add
add
fwait
scas
aas
cld
lret
cli
lea
add
stc
dec
push
add
fdivp
mov
ret
scas
rcrl
add
add
mov
adc
inc
divl
add
push
push
mov
pushf
popa
lods
jmp
stos
mov
cli
xchg
arpl
mov
sub
addb
jo
jmp
add
inc
add
add
mov
pop
inc
add
cmp
sub
sbb
in
insl
xchg
sub
out
mov
xor
add
movsb
add
mov
or
add
daa
roll
add
data16
lods
fdivrl
xchg
jno
add
mov
lret
leave
data16
sahf
into
out
andl
add
mov
mov
out
pushf
rolb
adc
xor
mov
xor
sbb
jns
lods
cmp
pop
lods
add
add
mov
js
xor
mov
inc
add
add
adc
add
xchg
add
mov
jb
sbb
jecxz
add
and
xchg
mov
mov
in
push
add
fs
push
push
add
dec
mov
cld
fucomi
loope
add
mov
sbb
mov
add
sbb
pmuludq
push
in
sbb
popf
xchg
push
daa
cmp
add
add
pop
imul
testb
mov
or
add
insb
or
add
add
pop
enter
lods
lret
add
sti
jns
xor
loope
fdiv
push
dec
add
and
add
mov
add
mov
das
jle
dec
aaa
mov
add
addb
or
lret
pushf
addb
sub
adc
mov
add
push
add
add
jp
pop
incb
das
add
sub
in
dec
inc
add
dec
fwait
das
bound
mov
nop
add
int3
cltd
xchg
cmpsl
add
xor
jmp
add
xchg
popl
imul
inc
add
add
add
stos
lods
jp
pushf
cld
push
add
push
add
fdivr
jnp
add
add
add
add
cmp
add
outsl
hlt
add
movsl
sub
scas
mov
add
adc
jl
leave
jmp
add
dec
push
add
mov
add
jns
mov
movsl
jp
and
dec
inc
pop
int
pop
pushf
push
pop
loopne
sbb
mov
add
add
pop
push
rorl
jo
and
mov
add
jge
add
hlt
add
pop
cmp
add
add
cmp
add
mov
negl
add
cmpsb
add
add
add
jb
cmp
aad
xor
and
mov
cwtl
inc
subl
dec
pushl
xor
test
les
sbb
inc
add
and
add
add
xchg
jg
ret
cmp
bound
mov
mov
sbb
cmpsl
cltd
dec
dec
jne
jnp
movb
ljmp
sub
imul
adc
repnz
add
loop
xchg
jecxz
jmp
sub
aaa
mov
add
mov
inc
add
cli
jo
mov
ds
add
mov
jne
fisubl
stc
pop
push
mov
jmp
add
add
add
mov
adc
mov
add
and
mov
mov
mov
add
loopne
mov
adc
xchg
add
add
sub
sub
mov
loope
add
jne
lock
push
xchg
push
addb
popf
adc
mov
stos
cmp
add
add
stos
xor
outsb
pusha
add
add
or
out
data16
gs
xchg
in
xor
adc
dec
mov
and
mov
imul
bswap
or
in
cmp
cmp
ja
leave
adc
dec
push
add
mov
add
cmp
out
test
add
jae
cmp
ficompl
add
mov
pop
add
insb
add
add
mov
and
repnz
jb
lods
pop
outsb
movsb
add
add
sub
add
int3
push
loopne
pusha
add
add
imul
pop
lret
mov
add
mov
add
mov
sbb
cmpsl
pop
daa
mov
add
mov
clc
ret
xchg
add
add
lret
addb
cmp
add
imul
stos
popa
repnz
test
adc
add
popf
mov
out
lahf
mov
subl
add
popa
sub
imul
imul
out
jno
ficompl
das
popa
mov
movb
add
cwtl
adc
cmp
popf
std
scas
in
mov
add
add
fstp
lods
adc
push
add
rolb
insl
sub
mov
aam
and
add
insb
pop
out
cmpsb
add
pop
cltd
mov
sbb
add
add
push
add
out
sbb
mov
mov
fsubr
test
jge
push
add
add
lcall
insl
jecxz
mov
outsl
xor
stc
dec
out
or
nop
add
movsb
add
clc
push
outsb
das
mov
mov
mov
iret
mov
dec
mov
pusha
add
mov
and
mov
out
mov
pop
or
add
add
mov
push
add
and
mov
add
dec
pop
mov
mov
add
nop
add
mov
add
hlt
add
movsb
add
insb
mov
inc
xchg
cs
pop
ficoml
outsl
cltd
jbe
ja
add
mov
adc
lock
cmp
add
add
jle
add
add
mov
pop
jne
add
sbb
or
adc
add
cli
add
mov
dec
ljmp
push
loope
add
in
cmp
mov
test
iret
dec
test
inc
add
loope
loop
repz
sti
adc
add
add
push
add
pusha
add
mov
adc
or
rolb
xchg
orl
pop
cltd
pushf
stos
jmp
push
loope
addb
fcmovnu
pop
sbb
movsl
jo
inc
insb
jge
pop
daa
or
fdivs
inc
outsb
xor
jl
add
add
aad
pop
mov
lret
mov
jecxz
add
cmp
push
add
cmc
sbb
out
cwtl
dec
lahf
loope
mov
add
and
cmc
xchg
add
or
cltd
mov
mov
scas
mov
std
dec
xlat
inc
add
add
rolb
scas
insl
and
mov
xor
xchg
add
sbb
mov
adc
jge
imul
pop
sbb
add
add
ss
jo
and
test
add
add
in
arpl
fs
jno
add
pop
jo
dec
and
mov
mov
add
in
rcrl
add
out
les
pushf
add
mov
add
add
add
mov
rolb
add
leave
add
cmp
add
sbb
add
add
add
add
inc
loop
call
pop
jecxz
jle
je
repz
xchg
add
add
out
jmp
stc
lret
and
mov
add
xchg
add
add
mov
fistpl
jae
icebp
mov
popf
push
lret
mov
xchg
add
add
lret
addr16
or
push
and
mov
out
inc
lret
leave
scas
popf
xchg
sbbl
mov
add
mov
mov
inc
add
cmp
add
xchg
fldt
push
int
push
sbb
pop
mov
add
cmc
je
jmp
add
es
sbb
int3
test
add
mov
push
fldt
jnp
xor
add
add
stos
push
pop
jg
mov
mov
add
push
lret
jo
add
fists
test
add
ret
sub
inc
dec
inc
add
add
aad
stc
adc
xlat
enter
pop
cli
mov
insb
aad
and
lock
add
pop
mov
mov
mov
ficompl
or
fbstp
add
xchg
add
add
sub
mov
leave
add
mov
mov
mov
add
add
mov
int
fidivs
sbb
add
and
enter
lods
mov
fcomps
lahf
lahf
repz
adc
insb
aas
dec
ljmp
data16
icebp
pop
push
add
in
or
push
add
push
pop
popa
cld
push
push
add
add
fwait
add
mov
popf
dec
xchg
scas
push
add
jge
pop
cmp
cmp
xchg
add
mov
outsl
pop
pusha
add
adc
popa
add
mov
add
add
daa
sub
aas
cmpsl
and
xchg
add
add
in
repnz
sub
ret
stos
jnp
add
add
inc
add
je
cmp
dec
mov
mov
xchg
inc
mov
lret
jge
add
or
bound
mov
add
or
cmpsb
add
jns
or
or
cmp
test
fcomps
outsl
out
cmc
add
jnp
or
dec
and
mov
stos
aas
cmp
dec
std
testb
jne
cmp
aad
add
ds
pop
mov
pop
fldt
or
test
push
mov
sbb
add
xor
add
in
dec
inc
sub
add
cmc
addb
fsts
pop
fidivl
int
add
mov
mov
add
loopne
ds
add
mov
out
dec
push
leave
add
mov
cmc
es
fsubs
jbe
mov
xor
inc
add
add
add
sub
add
sub
or
inc
dec
add
add
push
fwait
daa
xor
add
add
pop
mov
and
js
nop
add
adc
jns
xchg
inc
dec
popf
std
xchg
out
ret
xchg
add
fidivl
jbe
jge
add
out
xor
bound
mov
mov
push
or
mov
add
sbb
add
testb
rolb
pop
xor
call
notl
or
or
sub
jno
add
or
add
aam
pop
push
add
scas
or
sbb
push
hlt
add
xlat
int
mov
pop
stc
je
pop
idiv
xchg
pop
jp
add
lds
pop
fcmovne
fsubrl
add
pop
lahf
xor
jg
lods
movb
and
in
add
add
mov
xchg
loope
add
loop
insl
ja
decb
aad
add
inc
add
les
cmpsl
mov
add
into
iret
std
xchg
mov
dec
mov
add
push
cmp
mov
mov
add
addb
cmpsb
add
add
dec
xchg
gs
std
call
add
add
add
dec
bound
mov
sub
add
out
pop
add
mov
push
rolb
and
add
add
mov
cmpsl
inc
add
add
ja
and
add
rolb
call
sub
add
stos
ljmp
mov
sub
pop
sbb
scas
js
jp
data16
mov
insb
jae
mov
lret
xor
xor
aaa
fiadds
cltd
xchg
jl
popa
fcompl
loop
mov
jmp
xor
pop
lret
movb
jge
icebp
xchg
dec
fisttpll
sahf
addb
add
pushf
cmp
sbb
repnz
add
add
fidivl
mov
sub
add
add
mov
add
add
fiadds
add
add
dec
sbb
pop
add
add
add
add
mov
add
mov
shrl
add
ds
mov
mov
and
mov
add
add
xchg
add
add
push
add
xor
add
add
hlt
add
add
cmp
add
lahf
call
test
inc
std
stc
int
inc
add
aaa
gs
pushf
inc
add
mov
add
add
or
add
lock
add
inc
cmp
aas
dec
and
add
popf
jl
mov
add
scas
mov
jge
sub
rcrl
add
xor
mov
scas
cmc
scas
mov
add
pop
leave
movsl
jno
popa
filds
push
inc
add
rolb
jg
xchg
insl
sahf
mov
or
inc
fsts
imul
aam
mov
gs
out
jl
daa
and
les
lods
stos
das
inc
add
out
mov
jmp
add
add
mov
lods
shll
mov
lea
dec
ljmp
sbb
xchg
iret
pop
mov
add
mov
hlt
add
add
mov
cmp
add
xor
pop
gs
push
add
add
and
popf
pop
arpl
add
dec
sti
mov
add
push
add
jmp
dec
shll
lcall
xor
add
dec
pusha
add
idiv
sub
or
add
lea
xchg
mov
pop
inc
add
add
mov
aas
xchg
add
mov
add
push
add
sub
push
add
mov
add
xchg
in
mov
sub
inc
push
add
and
push
add
push
and
mov
jo
movb
xchg
pop
add
pop
xchg
add
xor
cmp
or
add
inc
repnz
cltd
inc
xchg
pop
sbb
xor
pop
aas
mov
add
push
push
loope
aad
dec
in
push
add
dec
sub
jmp
add
mov
test
inc
add
add
mov
testl
mov
inc
xchg
add
leave
add
xchg
imull
bound
mov
push
add
mov
jne
pushf
mov
mov
test
sub
add
add
adc
xchg
add
sbb
and
push
adcl
add
push
inc
das
cmp
fbld
mov
add
lret
sbb
pusha
add
and
add
out
lea
inc
sbb
xor
add
jmp
je
test
inc
add
pop
inc
add
hlt
add
xchg
add
sbb
cmc
ficoms
jg
sbb
fwait
dec
mov
cmpsb
add
add
cmp
add
dec
inc
add
adc
and
or
mov
das
xor
add
mov
dec
in
xor
add
mov
das
in
xchg
inc
add
add
ljmp
xor
hlt
add
and
mov
lods
push
jne
xchg
popa
outsl
daa
pusha
add
mov
je
data16
icebp
push
add
sub
fcompl
fisttps
mov
mov
or
addb
xchg
add
add
test
xchg
hlt
add
or
pushl
jle
add
add
add
mov
push
test
sbb
xchg
data16
fsts
pushf
inc
cld
rolb
xchg
out
imul
scas
std
jno
add
cmpsl
rcr
add
mov
cmp
mov
add
cmp
call
add
mov
add
mov
test
add
adc
mov
lock
add
and
add
lahf
stos
or
pop
add
jl
or
add
add
mov
mov
add
ja
insl
pop
pop
pop
push
dec
movsb
add
or
xchg
xor
cld
cli
xchg
add
pop
ja
lret
aad
adc
mov
push
jge
add
repz
stos
fmuls
add
test
mov
orl
add
addb
add
sbb
sbb
repnz
add
add
mov
dec
int
add
cwtl
clc
stc
jns
imul
mov
aaa
loopne
nop
add
add
adc
xor
add
add
mov
gs
add
mov
cld
les
pop
rolb
push
adc
ret
add
adc
call
add
add
add
enter
add
inc
add
adc
out
stos
mov
call
mov
add
in
pop
cltd
je
clc
lea
add
mov
sarl
mov
pop
sub
add
add
loop
or
pop
pop
add
pusha
add
add
xchg
add
call
ds
or
add
mov
rolb
enter
add
or
adc
jle
mov
test
cmp
ret
jmp
add
add
mov
leave
stos
fsubrp
jmp
mov
push
add
outsb
fs
push
add
add
add
icebp
jbe
adc
pushf
sub
arpl
aam
push
add
and
jbe
mov
test
rolb
push
add
in
add
mov
jp
outsb
rcll
add
add
cmp
out
into
daa
nop
add
int
jae
mov
cwtl
in
mov
add
adc
cltd
fsubrl
pop
stc
jno
sub
movsl
adc
and
mov
gs
add
add
dec
add
hlt
add
popf
sbb
adc
addb
mov
add
dec
lods
cli
inc
add
push
ficoml
mov
mov
add
pop
xchg
add
inc
and
mov
add
add
stos
sub
mov
cmp
adc
mov
shll
sbb
pop
fisttps
sub
movsl
adcl
ss
push
inc
add
outsl
xchg
add
add
adc
add
stc
push
or
adc
aad
add
sub
loopne
aas
pop
xor
mov
sub
add
add
call
out
stc
int3
cld
ret
rolb
stos
arpl
and
and
mov
out
in
sarl
cmp
fnsave
add
adc
lret
push
add
add
push
popa
testb
sahf
out
testb
push
add
add
add
je
and
test
sbb
add
xor
or
arpl
add
fidivrl
sub
add
add
adc
pop
int3
pop
and
in
add
add
add
add
add
push
add
jb
outsb
adc
sub
add
lods
jae
cmp
sbb
add
les
popa
xchg
add
pop
addl
cmpl
data16
cmc
push
add
push
add
xchg
add
repz
and
mov
dec
dec
xor
sahf
ja
jp
mov
rolb
push
add
movsb
add
xchg
ja
in
enter
add
mov
leave
jo
popa
xor
add
mov
or
cs
jl
rcrl
mov
adc
daa
adc
adc
test
pop
xchg
add
add
and
outsb
addb
add
add
push
add
and
stc
stc
imul
sbb
sub
add
fistpl
fxam
out
pop
insb
sub
fsubl
lods
ja
ds
push
add
mov
cmpsb
add
mov
push
add
add
add
pop
mov
add
add
sahf
or
add
or
add
push
addb
iret
out
rolb
iret
out
inc
inc
add
fdivs
mov
cmpsl
lahf
jae
add
add
add
add
mov
roll
ds
loope
fisubrs
mov
outsb
pop
or
add
sbb
jo
std
sub
les
adc
xchg
add
add
mov
add
xchg
add
xchg
add
jp
and
mov
cltd
lcall
add
add
cmp
add
add
add
lock
xchg
add
add
pop
dec
pop
sbb
add
add
mov
cmp
mov
dec
or
add
mov
out
push
ret
ljmp
sbb
sbbl
movsl
aas
nop
add
add
add
mov
push
xchg
cs
xchg
test
sbb
fnstenv
add
cmc
aad
ret
or
pop
push
push
enter
add
lret
loop
ljmp
out
and
outsb
push
cld
andl
outsb
out
movb
add
add
and
mov
mov
xor
cmp
xchg
dec
add
xchg
insb
and
mov
add
enter
lods
dec
xor
or
out
pop
ret
arpl
in
inc
add
popf
and
cli
mov
xchg
mov
jle
jl
sub
fldenv
xor
mov
cmp
add
icebp
sub
adc
leave
cmp
sub
jb
mov
cli
or
add
push
pop
or
adc
fcoms
dec
in
sbb
push
mov
bound
mov
pop
icebp
lea
xchg
fstps
outsl
movsb
add
mov
and
and
cmp
cmpsl
mov
negl
mov
add
pop
icebp
xor
push
add
jb
jae
icebp
fiaddl
movb
xchg
dec
sahf
pop
push
xorl
add
stos
test
cs
xchg
mov
lods
push
add
sub
hlt
add
sbb
bound
mov
xchg
jns
stos
ret
mov
ja
add
mov
inc
add
pop
movsl
pusha
add
and
jne
lock
add
add
add
aam
dec
fwait
loope
add
rolb
cmpsb
add
add
push
add
or
lea
mov
cmpsb
add
add
sub
add
add
add
mov
add
daa
imul
add
sub
jne
imul
jns
push
add
aas
add
add
fcomi
add
add
mov
add
mov
xchg
jmp
add
add
jo
mov
add
pop
fldt
dec
sbb
add
outsb
rcll
add
addb
add
add
loope
add
repz
or
add
mov
lock
imul
fucomp
push
add
inc
cmpsl
testb
ret
test
and
mov
add
hlt
add
xor
or
inc
test
jp
movsl
and
inc
inc
add
add
sbb
rolb
test
and
mov
add
mov
jge,pn
ja
add
xor
jnp
ret
jbe
addr16
push
cmc
cmp
pop
inc
xchg
movb
push
add
add
lcall
add
push
add
int
dec
mov
add
inc
mov
fisubl
add
dec
dec
loope
cltd
add
mov
and
mov
out
jp
add
stos
pop
repz
mov
outsl
lds
rolb
stos
pop
adcl
mov
outsb
inc
add
sbb
scas
dec
add
mov
push
dec
fwait
inc
add
add
add
dec
adc
jns
jecxz
bound
mov
dec
pop
and
mov
aam
aam
gs
sub
and
sub
jae
sub
add
movb
inc
add
insb
cmp
xchg
pop
inc
add
push
add
lcall
add
xchg
outsl
jns
pop
hlt
add
and
mov
add
mov
inc
mov
ret
insl
add
mov
sub
roll
add
add
adc
add
add
add
mov
and
das
je
nop
add
int
add
add
xor
mov
fxch
mov
sbb
add
sti
inc
add
push
add
add
inc
fldenv
rolb
fldenv
lahf
push
add
add
and
mov
lds
add
fidivrl
add
sub
andl
mov
mov
add
icebp
nop
add
add
sbb
jns
loopne
push
add
insl
jecxz
cltd
fcoml
filds
insb
push
xchg
push
add
add
fwait
hlt
add
pop
imul
add
add
inc
sbb
dec
pop
sti
movsb
add
push
add
mov
stos
lods
ret
jae
