rolb
jnp
add
cmp
push
movsl
jmp
jge
or
mov
cs
cli
test
sbb
ss
mov
aam
js
push
ficoms
add
fsubrl
pop
out
add
add
mov
ljmp
adc
mov
cmc
loope
add
inc
adc
negb
cltd
adc
add
scas
push
test
jg
add
repnz
call
iret
cmp
lret
je
cld
leave
out
sbb
add
add
inc
or
aam
cmp
das
xor
mov
ja
add
add
or
inc
push
sub
cmc
cli
cmp
pushf
movsb
int
fwait
jmp
adc
mov
add
jmp
add
movsl
and
mov
push
gs
mov
xchg
add
jmp
mov
imul
mov
sbb
das
ret
add
push
push
xor
adc
xchg
mov
ss
lcall
lcall
or
xchg
cltd
xchg
inc
dec
fadds
in
mov
movsb
jle
xor
movsb
jl
fistl
mov
sbb
xorl
adc
mov
cmpsb
outsb
xchg
add
out
mov
xchg
std
cmp
popf
or
jb
mov
lock
mov
add
dec
push
movsb
inc
add
cmp
movsl
xor
push
mov
adc
cwtl
and
cmc
scas
inc
stos
ja
mov
stc
lret
lahf
sbb
ret
aas
rolb
mov
add
pop
and
rolb
int
inc
add
pop
cli
and
add
or
out
inc
xchg
fisubrs
loope
xchg
add
ss
adc
mov
inc
imul
add
push
sub
add
pop
scas
rolb
dec
dec
pop
jne
sarl
mov
add
xchg
cltd
movsb
mov
add
cld
les
mov
repnz
rorl
mov
aad
inc
fistpll
sbb
push
rolb
mov
add
pushf
add
aad
dec
push
call
mov
adc
push
add
pop
sahf
daa
jge
add
call
sub
add
cmp
add
pop
sti
lock
mov
mov
cmp
inc
arpl
rolb
mov
jle
addr16
dec
xlat
mov
lahf
repnz
mov
pop
cmc
sub
adcl
add
mov
fs
nop
add
es
inc
loopne
mov
mov
jmp
dec
insl
mov
out
cmp
mov
jo
mov
call
add
xchg
add
pop
adc
lret
adc
dec
rcr
push
add
bound
mov
cwtl
mov
cmp
in
leave
fwait
mov
repnz
mov
jo
mov
jmp
or
cld
inc
lret
popl
sub
cmpsl
xor
mov
movsl
rolb
mov
shl
in
cld
dec
rcr
xlat
bound
mov
sub
add
and
loope
enter
sbb
dec
lahf
aam
add
adc
mov
clc
push
mov
stos
adc
rolb
in
jge
paddb
add
lcall
addb
out
mov
pop
addr16
mov
xchg
inc
xor
mov
pop
and
adc
in
fmull
pop
lds
add
movsb
push
add
cld
outsb
notb
or
pop
dec
jb
mov
idivb
mov
stos
pop
jns
lds
mov
xor
mov
push
add
mov
ret
mov
add
sbb
xchg
sahf
ret
cli
sbb
add
push
lahf
mov
dec
jb
mov
mov
iret
and
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
fistps
mov
cmp
stos
xor
mov
cmp
xor
mov
add
mov
sub
mov
add
mov
icebp
cmp
sbb
pop
xchg
add
out
les
into
fbld
xor
sub
stc
lahf
test
cld
xchg
je
ja
insl
push
add
cmpsb
loopne
mov
fld
std
mov
mov
popa
addb
dec
scas
ds
ss
add
mov
jnp
cmp
les
les
sti
add
mov
mov
mov
push
push
dec
push
mov
mov
sub
inc
not
lods
int3
dec
adc
add
test
rolb
rolb
mov
push
xor
mov
pop
adc
mov
addl
mov
out
mov
mov
cs
jge
nop
add
cli
or
addr16
aad
loop
mov
push
add
sti
aaa
imul
sub
clc
xlat
call
dec
mov
xlat
inc
add
out
loop
mov
sbb
add
sbb
test
pop
lds
xchg
cld
cltd
addb
lds
mov
jle
addb
push
add
pop
outsb
aam
add
jge
test
mov
add
mov
loope
dec
add
mov
add
add
dec
jle
mov
daa
sarl
add
or
mov
push
mov
add
mov
rolb
mov
pop
jae
out
sbb
dec
push
adc
xchg
mov
repnz
loopne
mov
pop
ds
add
jge
add
mov
pop
popa
repnz
add
ja
insb
jg
ss
add
sub
add
and
mov
xor
mov
js
pop
cwtl
icebp
jb
mov
cmp
scas
fdivs
movsb
test
mov
pop
mov
jmp
out
hlt
mov
filds
add
leave
mulb
push
add
sub
addb
leave
xor
mov
jne
mov
imul
call
inc
add
lret
fsubr
jnp
dec
scas
sub
push
out
and
cltd
pop
es
or
add
pop
dec
repnz
pop
mov
aaa
mov
dec
and
sti
cmpsl
ret
mov
xor
add
je
xchg
adc
add
pop
sti
lret
stos
or
push
mov
lret
das
cld
push
add
add
lret
mov
in
add
sbb
jge
jno
add
mov
sahf
add
push
add
stos
out
mov
add
inc
add
add
jg
jge
cwtl
inc
aaa
jmp
add
add
add
sbb
ret
jg
dec
pop
cs
xor
mov
inc
cs
loope
mov
sbbl
out
in
jecxz
add
mov
outsb
jmp
rcr
insb
ljmp
jo
mov
push
sub
lea
test
dec
sub
jl
push
dec
pop
addb
scas
pop
cltd
sbb
push
sarl
jb
mov
lahf
push
xor
fcomp
mov
rolb
mov
dec
loop
mov
add
xchg
cs
out
lcall
sub
mov
xor
icebp
inc
jmp
fwait
pop
or
sub
add
xchg
adc
add
mov
cltd
rolb
mov
dec
add
mov
add
rolb
mov
add
inc
dec
lock
cwtl
dec
and
mov
gs
hlt
out
fnstcw
das
mov
push
add
ret
cs
add
inc
enter
ss
jmp
add
inc
and
sbb
add
dec
lods
movsb
mov
aas
mov
fisubs
out
push
add
mov
mov
pop
cli
je
jp
xlat
add
sbb
pop
loop
mov
out
iret
sbb
add
mov
scas
orw
or
ret
lret
shr
add
test
pop
mov
xchg
out
jo
mov
iret
ss
add
es
add
loopne
mov
sub
add
pop
std
cmp
hlt
cld
sarl
xchg
xchg
ljmp
add
lods
or
stos
xor
mov
pop
jo
mov
mov
bound
mov
push
add
inc
out
jno
data16
mov
jle
and
add
add
mov
push
sub
add
mov
dec
adc
addb
mov
add
add
addb
adc
stos
ja
lock
jmp
add
jae
adc
mov
push
add
pop
xchg
jno
add
mov
pop
adc
movl
aaa
inc
mov
xchg
push
add
sbb
push
dec
push
clc
rolb
mov
mov
add
dec
inc
jecxz
add
add
mov
push
push
add
adc
mov
and
add
mov
stos
dec
jo
mov
sub
add
mov
adc
mov
fs
add
dec
and
mov
sub
cltd
push
jne
add
mov
add
mov
add
mov
add
and
insl
test
jge
addb
mov
pop
shll
dec
out
and
pop
cmp
movsb
aam
and
call
push
or
cmp
xchg
and
mov
add
mov
mov
iret
inc
dec
add
shr
add
cld
adcl
pop
or
das
push
add
icebp
cmp
pushf
mov
int3
jl
scas
and
adc
mov
mov
fidivl
mov
mov
add
or
jnp
int
mov
int
fldpi
mov
cmp
mov
add
jg
call
sub
add
cmpsb
jg
jb
mov
popa
and
mov
mov
add
mov
mov
mov
ret
or
dec
mov
xchg
push
test
aam
out
movsb
dec
call
rolb
dec
or
lea
cmp
into
push
out
lret
mov
mov
call
imul
mov
add
lret
fsubs
mov
lods
mov
jns
xchg
int
stc
jne
pushf
and
jmp
test
push
popf
repnz
out
jo
mov
mov
push
dec
out
pushf
icebp
pushf
not
pop
fxam
mov
adc
and
outsl
inc
sbb
mov
xchg
jle
pop
inc
add
mov
xor
mov
mov
mov
in
add
cmp
je
add
sbb
or
dec
mov
rolb
stos
mov
movsb
inc
rolb
mov
popl
sbb
cli
sbb
add
out
mov
jbe
arpl
adc
fdivs
mov
lock
popa
jae
dec
push
xchg
cmp
roll
jle
call
pop
les
mov
mov
ss
jne
xchg
and
fadd
xor
lret
scas
and
mov
mov
out
imul
cltd
scas
cmpsl
and
mov
repz
add
and
je
adc
mov
lea
add
add
mov
inc
lcall
jl
shrl
sub
add
das
lods
jbe
test
pop
mov
add
push
add
arpl
cmpsl
rolb
scas
mov
inc
add
sbb
mov
repnz
sbb
xchg
add
mov
lock
add
mov
pop
addb
sqrtps
jle
mov
add
rcll
xchg
rolb
mov
adc
stos
mov
jge
mov
mov
mov
mov
jbe
cmpsb
cmp
dec
add
pop
sahf
je
cmp
jmp
jnp
push
pop
adc
add
dec
xchg
add
leave
xchg
xor
add
mov
rolb
mov
mov
rolb
mov
sub
adc
test
daa
outsb
add
sbb
mov
push
sbb
xor
mov
or
cmpsb
push
in
nop
add
cltd
rolb
fldcw
test
push
mov
mov
add
bound
mov
add
mov
cmp
add
mov
add
data16
dec
mov
rolb
mov
add
sub
cmp
fldt
jle
add
mov
js
mov
or
je
inc
cli
add
xchg
stos
sti
into
out
mov
add
mov
push
pop
dec
pop
into
push
das
inc
and
movb
add
mov
test
cmp
mov
xchg
lret
popf
sbb
lods
push
jg
add
push
add
lea
arpl
outsb
pop
fdivl
mov
xchg
data16
mov
xchg
mov
mov
add
push
push
xor
mov
fsubrs
mov
adc
pop
add
jge
loopne
mov
fs
xor
jbe
mov
add
mov
mov
pop
push
add
xor
mov
jle
iret
je
fs
outsl
repz
inc
push
cwtl
jns
aam
imul
xor
loop
mov
dec
sbb
add
lret
xor
mov
and
dec
and
pop
xchg
divb
mov
out
stc
data16
adc
mov
icebp
mov
jbe
outsl
push
or
mov
orl
pop
or
add
or
inc
in
pop
sub
pop
cs
cmp
int3
jae
cmp
add
xchg
fsubrs
push
add
or
lock
push
js
jp
call
add
and
jno
inc
add
leave
dec
or
push
sti
lret
insb
out
pop
mov
jl
add
lods
push
cmp
dec
fcmovnb
mov
ret
adc
ja
jmp
or
and
leave
mov
dec
scas
loop
mov
mov
ja
div
sbb
mov
mov
lahf
mov
add
dec
sbb
rolb
mov
loope
enter
cmp
mov
lock
mov
cmpsl
bound
mov
add
mov
jae
cmp
mov
sub
jbe
and
dec
xchg
gs
add
xchg
icebp
jo
mov
mov
daa
sub
sub
test
or
jg
popa
fsubrp
das
movb
pusha
add
scas
mov
test
and
mov
and
xchg
mov
ljmp
mov
pop
addb
jno
divb
add
dec
rolb
mov
or
inc
add
and
add
iret
cmp
lods
push
add
xor
mov
repz
xchg
push
ds
outsb
mov
or
mov
mov
pop
in
lret
fcom
sbb
dec
loope
das
sub
into
lret
scas
add
add
and
dec
sbb
cmpsl
xor
pop
test
or
lock
mov
xchg
xor
mov
add
mov
imul
xchg
push
movsb
cmp
pop
bound
mov
mov
jb
mov
jge
daa
and
das
inc
add
jl
mov
add
cli
jbe
jnp
sbb
scas
jb
mov
aaa
imul
add
js
adc
push
jb
mov
sbb
mov
sahf
insl
in
add
add
xchg
in
or
pop
in
in
jnp
jo
mov
inc
jnp
dec
subl
xchg
test
aaa
test
xchg
add
jns
mov
mov
xchg
push
sbb
testl
push
cmp
jnp
daa
cmp
xlat
les
add
cmp
add
mov
out
in
fsubs
daa
imul
mov
add
mov
mov
and
add
sbbl
inc
pop
push
clc
xchg
clc
ret
std
inc
fcmovnb
pop
adc
ret
push
stos
jg
add
inc
add
jmp
and
imul
mov
jae
push
fiadds
outsl
sbb
add
mov
mov
mov
inc
push
or
mov
dec
pop
cmpsb
and
xchg
sbb
fmuls
ds
adc
mov
cmp
mov
aad
add
es
insl
cwtl
icebp
xchg
mov
mov
mov
add
test
sbb
push
fxch
push
sbb
sbb
and
mov
movsl
cmp
push
ss
pusha
add
add
mov
pop
xchg
in
mov
push
add
int3
jo
mov
jbe
rolb
mov
idivb
je
mov
fisubrl
add
imul
xchg
les
jle
add
lods
sahf
gs
test
rcrl
sti
cltd
mov
bswap
cmp
or
push
jge
add
add
hlt
sub
xor
mov
pop
jns
sub
xor
dec
lods
sub
rolb
mov
or
add
mov
mov
aaa
cmpsb
int
hlt
mov
mov
fisubrl
lcall
sbb
xlat
lods
dec
je
inc
fsubs
pop
push
inc
stos
stos
mov
cmp
mov
mov
mov
gs
add
cmp
or
add
lea
push
pop
mov
dec
bound
mov
aam
stc
addr16
sbb
xchg
dec
orl
ljmp
adc
ja
dec
cltd
clc
dec
push
add
or
mov
sub
add
mov
mov
adc
lods
pop
sbb
out
icebp
fildl
add
pop
stos
hlt
dec
add
icebp
lahf
mov
mov
sti
add
mov
or
add
and
mov
mov
sub
incb
cltd
ficoms
adc
mov
mov
and
or
ret
adc
aam
jmp
jp
add
sub
les
pusha
add
cmc
jbe
add
add
pop
pop
pop
mov
cltd
fdivrs
mov
mov
mov
rolb
jmp
fs
fcoml
mov
dec
dec
sti
mov
je
into
addb
dec
xchg
mov
mov
notb
lret
mov
mov
mov
mov
mov
mov
mov
fstpl
cmpsb
inc
mov
or
add
mov
test
out
add
mov
xor
mov
das
cmpsl
outsl
fildl
push
jae
inc
fs
dec
fmull
lods
push
cs
pop
mov
imul
mul
inc
popa
push
add
mov
jnp
in
and
jbe
add
and
mov
ljmp
and
mov
lcall
in
mov
ret
sbb
mov
mov
and
mov
mov
mov
jmp
fcomi
xlat
test
mov
je
ficoms
ret
xlat
pop
xchg
jp
or
add
or
iret
js
jae
add
mov
in
jmp
jb
mov
mov
mov
mov
into
and
lods
sbb
inc
add
add
jne
imul
fsubrl
add
mov
jecxz
inc
mov
jecxz
jg
mov
dec
xchg
mov
add
or
lret
rolb
mov
add
sub
dec
xchg
inc
add
std
movb
jnp
lahf
mov
add
mov
adcl
mov
pop
rolb
mov
lret
mov
mov
add
add
aam
sbb
or
inc
aas
icebp
fstp
icebp
xor
sbb
cld
inc
inc
pusha
add
cld
sbb
loopne
mov
outsl
adc
mov
mov
add
ljmp
push
mov
in
int
cltd
ss
stos
push
fisubs
pop
lea
icebp
mov
mov
add
dec
inc
cmp
pop
adc
loope
inc
int3
out
or
pop
push
add
push
push
jnp
cltd
pop
in
cld
sub
pop
pop
out
in
in
ljmp
inc
xchg
loope
ret
lds
rolb
mov
sub
out
pop
inc
xchg
outsl
sbb
jae
xchg
add
jo
mov
add
mov
mov
sbb
jae
addb
scas
mov
jmp
movsb
in
pushf
lret
sub
and
push
xor
mov
cltd
lcall
mov
adc
mov
jl
pop
jecxz
popa
in
pop
xchg
add
repnz
popl
outsb
add
mov
loopne
mov
pop
addb
adc
mov
add
cwtl
mov
into
lods
mov
mov
inc
mov
mov
cmpsl
lods
popf
cmp
xchg
enter
mov
add
push
inc
add
mov
mov
std
test
pop
jne
scas
sub
movsb
sub
add
rolb
sub
jb
mov
inc
jns
add
aaa
sbb
jbe
ljmp
xchg
mov
and
mov
add
xchg
sub
add
jne
mov
cld
call
xchg
and
add
jmp
add
not
add
imul
fidivrl
mov
addb
fnsave
add
jb
mov
add
mov
sbb
outsl
dec
sbb
and
pop
push
rolb
mov
out
ss
das
mov
or
inc
add
lods
lret
pop
out
aas
push
or
or
in
add
popl
inc
add
or
pop
cmp
fdivrl
insb
dec
add
mov
scas
cld
jge
out
int
adc
negl
inc
jle
add
int
mov
mov
adc
mov
push
mov
sbb
and
idivb
push
pop
lods
mov
cmp
or
mov
orl
dec
in
cwtl
push
imul
mov
lds
add
add
cmc
lock
repz
lcall
mov
ja
sbb
rolb
adc
push
aas
out
adc
inc
add
mov
fiadds
add
dec
adc
mov
xor
and
mov
push
addb
lds
cmp
loopne
mov
mov
divl
inc
add
mov
in
inc
push
add
test
xor
mov
add
mov
test
and
mov
rolb
mov
repnz
insl
mov
in
sbb
and
add
mov
mov
movsl
movsl
into
sahf
xchg
add
aaa
push
xchg
rolb
push
dec
mov
rolb
mov
adc
mov
mov
jle
push
mov
mov
loope
xchg
loope
dec
js
cmc
hlt
or
add
jo
mov
lret
or
mov
ret
pop
push
add
stc
je
add
inc
adc
push
xor
inc
pop
jno
stc
xchg
add
add
icebp
cmp
add
mov
and
mov
inc
inc
ljmp
mov
inc
sub
mov
sahf
push
add
loopne
mov
mov
insb
sahf
mov
add
stos
jle
dec
pop
js
xchg
in
inc
and
add
cmpsl
xchg
pop
jae
dec
outsl
ds
stos
xchg
out
cmp
pop
sbb
xlat
and
mov
popa
cltd
mov
add
mov
inc
out
mov
mov
inc
mov
nop
add
pop
adc
mov
addr16
insl
jne
add
leave
mov
pusha
add
mov
cld
scas
cwtl
jg
add
sub
add
fiadds
into
mov
incb
add
add
test
or
cwtl
add
dec
or
mov
xchg
aad
add
imul
orl
add
imul
mov
mov
loop
mov
movsl
daa
sbb
xchg
cmp
fstl
mov
data16
xchg
repnz
sub
adc
test
out
in
mov
add
mov
arpl
addb
push
icebp
cmp
lods
cmpsb
mov
loop
mov
arpl
jne
out
and
xchg
push
daa
pusha
add
add
rolb
mov
in
xor
mov
add
add
xchg
mov
inc
or
mov
sbb
push
aam
mov
add
push
inc
jne
xchg
lea
and
mov
lods
sbb
xor
rolb
mov
cmp
mov
mov
fidivrs
add
mov
add
lahf
push
jg
and
cwtl
negl
mov
mull
in
aaa
dec
mov
repnz
adc
mov
stc
test
fstpt
jo
mov
jp
jle
in
inc
cli
adc
into
cmp
mul
testl
out
add
sub
push
es
mov
inc
jb
mov
mov
jg
lcall
xchg
mov
mov
mov
mov
push
icebp
mov
popf
repnz
add
mov
daa
inc
or
fsubrl
mov
scas
push
add
lret
lock
pop
sub
add
mov
popf
mov
setbe
sbb
imul
dec
pop
cmp
clc
cmp
mov
je
add
mov
jb
mov
dec
loope
adc
add
scas
adc
mov
in
dec
outsb
inc
pushf
or
sti
xchg
add
popa
fcoms
add
adc
enter
sbb
stos
int
push
jne
cmp
mov
call
mov
mov
dec
pop
and
cmpsb
inc
pop
divl
repnz
adc
mov
out
xlat
mov
mov
mov
insb
or
jg
push
xchg
or
adc
loope
inc
repnz
add
movsl
stos
add
add
dec
bound
mov
into
mov
sarl
mov
add
fs
jbe
nop
add
add
imul
add
jg
xchg
scas
cmp
cmp
dec
add
xchg
cli
decl
cmp
push
rolb
mov
cmc
sub
mov
movsb
sub
adc
add
loop
mov
sahf
fistpl
faddl
sub
or
lea
lahf
push
add
inc
and
mov
mov
sbb
cld
cmp
test
subl
mov
add
add
sub
addb
add
xchg
or
nop
add
adc
adc
js
add
mov
sti
or
inc
add
stc
fs
add
xor
out
sbb
imul
movsb
sbb
pop
adc
mov
cmpsb
xchg
icebp
cmp
jbe
scas
icebp
cmp
xchg
add
or
pop
pop
pop
cmp
popa
push
add
adc
mov
fwait
dec
lds
rolb
mov
insl
xor
mov
jmp
ficoms
mov
inc
pop
xor
mov
pop
mov
int
jg
mov
mov
pop
push
add
cmpsl
sbb
lods
aam
xchg
in
dec
push
lock
imul
add
inc
in
pushf
xor
cmpsl
add
pop
dec
add
mov
cmp
xchg
stos
movsl
ds
sarl
cmp
xchg
je
cmpsl
sbb
scas
mov
xor
mov
lods
mov
mov
push
outsb
pushw
or
rolb
fnstsw
add
loop
mov
out
add
adc
dec
or
aad
popa
pop
jo
mov
add
jb
mov
add
lea
or
mov
push
add
add
adc
mov
xchg
cmpsl
xchg
dec
or
loope
inc
xlat
xor
mov
bswap
inc
add
mov
sbbl
jg
or
mov
mov
in
js
mov
mov
add
int
in
jno
divb
or
or
add
and
mov
ret
cld
in
add
test
lret
scas
cld
mov
sti
xchg
add
add
vmread
pusha
add
mov
mov
push
mov
cld
pop
jge
daa
lcall
repz
je
sbb
std
add
mov
pop
repz
mov
mov
in
add
in
cltd
arpl
mov
and
and
add
cmp
pop
lock
filds
add
add
add
mulb
mov
add
mov
inc
add
mov
aad
std
aad
ja,pt
in
insl
popa
incl
sbb
jl
sub
aam
out
and
mov
sti
lcall
les
jmp
in
add
mov
mov
pxor
mov
jnp
jae
push
mov
mov
adc
add
mov
leave
mov
pop
lret
dec
xchg
hlt
stc
leave
xlat
lret
mov
stc
push
scas
ja
inc
cmpsl
or
sub
mov
add
push
insb
iret
das
pop
test
add
mov
mov
adc
or
pusha
add
push
xchg
mov
inc
sbb
jns
std
add
mov
leave
sti
inc
fistl
add
xchg
push
rolb
add
mov
mov
addb
ret
fucomip
and
dec
lret
push
sbb
xchg
add
out
clc
sbb
jne
add
xchg
add
add
mov
sub
pop
cld
fiaddl
adc
mov
scas
sbb
sub
mov
dec
cmc
jecxz
or
mov
mov
add
mov
xchg
xchg
mov
test
movb
sub
aad
dec
inc
adc
dec
mov
add
add
and
into
popa
inc
pop
in
cli
cld
mov
or
mov
xchg
test
stos
xchg
push
or
pop
push
add
aaa
scas
test
dec
es
mov
add
test
fcmovnu
push
loopne
mov
add
jb
mov
add
add
popa
ds
pop
sbb
repnz
ds
sahf
adc
mov
insb
cmp
mov
mov
mov
addr16
test
mov
and
add
jns,pt
or
inc
cld
push
mov
lds
mov
add
add
mov
pop
daa
mov
add
jnp
lods
inc
dec
mov
std
cmpsb
lret
or
xor
mov
scas
gs
testb
mov
adc
mov
mov
mov
je
sub
mov
arpl
lret
aam
mov
mov
sub
addr16
push
out
addb
jbe
leave
mov
cld
test
imul
insl
out
lcall
add
xchg
bound
mov
add
xchg
clc
rolb
mov
mov
add
mov
add
mov
into
lock
dec
or
mov
cli
scas
cld
pop
or
mov
mov
push
or
fldcw
mov
lock
sub
mulb
add
add
daa
dec
loop
mov
jmp
call
std
rcl
and
mov
push
imul
mov
outsb
pop
lret
cmpsl
pop
fwait
call
lret
xchg
in
mov
subl
test
add
cmp
in
loope
or
mov
or
push
sbb
and
dec
adc
addb
outsl
jle
cmp
or
add
xchg
cmp
jae
add
xor
bound
mov
add
fs
dec
mov
mov
in
xor
fxch
mov
clc
or
hlt
int
jne
dec
lods
pushf
daa
cli
add
mov
cmp
dec
scas
test
add
mov
rolb
aas
test
jmp
js
test
nop
add
add
cmp
add
adc
mov
jg
ret
xchg
cmp
inc
fistps
outsl
loopne
mov
xchg
add
les
lds
dec
mov
popf
mov
jecxz
add
mov
mov
jecxz
push
clc
ret
pop
add
mov
or
mov
add
cmpsl
scas
mov
lret
cmp
scas
in
push
or
addr16
inc
sbb
add
mov
aas
dec
xlat
test
hlt
scas
sub
jg
inc
mov
pop
movb
mov
int3
movsb
xor
pushf
shll
mov
inc
add
int
add
daa
data16
mov
add
add
or
inc
add
add
mov
and
mov
push
pusha
add
test
adc
stos
xchg
cmp
jo
mov
gs
add
sbb
addb
cmp
add
lea
pop
leave
xchg
push
jnp
add
mov
inc
cmp
dec
inc
add
pusha
add
imul
decl
imul
mov
xor
ds
mov
lret
test
aas
sub
bound
mov
mov
xchg
jp
sbb
mov
or
add
mov
in
popf
add
cwtl
and
jl
add
add
sub
bound
mov
add
mov
outsb
sub
inc
xchg
cltd
adc
insb
hlt
fidivrl
call
push
repnz
push
add
or
popf
xor
addb
mov
das
push
pop
ja
jbe
inc
mov
bound
mov
add
xchg
frstor
repz
add
mov
mov
add
mov
mov
mov
cmp
imull
xor
movsb
test
add
xchg
sbb
mov
sbb
xor
xlat
test
outsb
in
pop
mov
cmp
stos
arpl
and
mov
jnp
add
dec
dec
pop
push
add
mov
lahf
mov
addl
pop
cmc
ss
popa
addr16
arpl
scas
test
cwtl
sub
addb
mov
cmp
cmp
test
push
addb
mov
js
movsb
jge
aam
add
lcall
pop
mov
mov
add
lock
call
sub
mov
lcall
mov
mov
mov
add
test
jae
xchg
push
jp
add
pop
clc
cmpsl
loope
add
add
lahf
xlat
mov
push
add
mov
or
add
add
adc
xor
mov
xor
in
lds
mov
mov
or
movsl
repnz
or
add
sbb
daa
sub
add
popf
inc
xchg
add
add
stc
mov
test
push
inc
add
mov
cmc
push
add
dec
ja
mov
mov
lret
dec
and
jle
aas
jae
cmpsb
xchg
fwait
sub
cmp
or
int
cmp
outsb
or
mov
add
add
mov
shll
push
or
dec
ret
gs
stos
cmp
jecxz
push
mov
repz
addb
popa
into
mov
stos
mov
lods
pmaxsw
mov
addb
jl
lods
addr16
aas
stos
out
daa
test
add
add
mov
push
add
lds
mov
nop
add
out
sbb
imul
add
mov
dec
dec
adc
mov
or
adc
mov
add
sbbl
mov
sub
fsubrl
jb
mov
mov
leave
jge
lea
in
enter
mov
jmp
add
dec
mov
xor
mov
mov
arpl
or
mov
jp
movsb
lds
addb
jp
rcr
xchg
bound
mov
inc
in
jns
or
push
pop
rcll
add
jl
mov
add
push
gs
movsb
push
sbb
mov
imul
cmc
addr16
inc
and
mov
or
and
add
jg
lret
jle
rolb
lds
push
xor
movsl
bswap
push
mov
mov
jmp
jae
add
push
cmp
push
aas
fbstp
rep
inc
test
jmp
orl
mov
mov
mov
rolb
xchg
enter
cli
push
sbb
adc
inc
mov
inc
je
in
les
xor
dec
or
add
or
ret
les
add
add
lea
cld
nop
add
pop
pushf
dec
fcomps
add
dec
mov
add
pop
ds
add
jae
push
xor
in
into
mov
outsb
xor
mov
jne
xchg
mov
push
sti
push
sti
jl
popf
pop
add
cmp
mov
lahf
pop
sub
adc
sbb
jge
loopne
mov
dec
lock
mov
movsl
rcrl
and
inc
add
cmp
mov
mov
lods
sub
pop
test
push
dec
imul
jo
mov
mov
add
sbb
pop
dec
les
xchg
jo
mov
mov
movsb
in
xchg
inc
imul
jbe
sti
aad
sbb
pop
cmc
and
sbb
dec
xor
mov
mov
addb
repz
jb
mov
mov
sti
ss
stos
test
mov
aad
mov
call
outsb
loop
mov
pop
loop
mov
sbb
mov
mov
adc
lcall
lock
jo
mov
mov
sub
sub
jae
and
cmc
lahf
jmp
jne
push
pop
outsb
xor
mov
mov
test
mov
sbb
xchg
adc
pop
jno
sbb
mov
mov
add
cltd
mov
mov
addb
pop
in
es
mov
iret
push
add
sub
push
push
mov
out
mov
mov
dec
sbb
pop
test
fs
pop
push
out
add
dec
aad
ljmp
jns
push
add
insl
scas
repnz
mov
mov
lret
psubusb
add
inc
add
mov
arpl
add
addb
jmp
xchg
push
push
jmp
cmpsb
ror
mov
lods
mov
push
scas
fs
or
jne
cmp
sub
lret
in
pop
xchg
int
add
fistpll
inc
add
mov
out
or
ja
sub
insl
add
add
dec
xchg
pushf
adc
mov
test
xchg
jmp
add
sub
insl
add
aad
addr16
mov
cmp
mov
dec
xchg
add
inc
cmpsl
jmp
pop
sahf
jl
pop
es
jecxz
pushf
cmp
push
bound
mov
or
push
cmc
mov
mov
loope
ljmp
rolb
mov
fstpl
jge
sbb
adc
sub
call
enter
ret
je
or
push
cli
addb
pop
dec
inc
outsl
add
mov
xchg
fadd
add
dec
and
mov
add
in
pop
shll
xchg
sahf
popa
data16
add
mov
lahf
scas
mov
push
popa
xchg
imul
mov
fnstcw
pop
lds
std
add
add
add
test
mov
dec
cmp
stmxcsr
bound
mov
mov
add
inc
mov
and
mov
pop
dec
lea
add
cwtl
insb
sbb
ffreep
add
ds
xor
test
mov
sahf
pushf
jb
mov
and
push
xchg
test
fistl
jno
add
fildll
mov
orl
push
push
aaa
and
lahf
mov
mov
mov
in
loope
out
sbb
jge
js
jb
mov
das
mov
fadds
add
mov
push
pop
gs
dec
xor
mov
mov
push
lock
cmp
scas
addb
inc
add
sbb
movsb
jl
push
sub
add
loopne
mov
add
pusha
add
mov
shrd
pop
test
add
mov
push
add
stos
dec
inc
ja
das
adc
js
repnz
jns
aad
add
mov
pop
in
aaa
rolb
mov
cli
inc
mov
mov
enter
cltd
xchg
ljmp
mov
mov
fbld
add
or
scas
jge
mov
test
pop
loopne
mov
adc
mov
add
sub
cmp
fisttpl
insb
xlat
inc
punpckhdq
adc
mov
pop
or
fldln2
jge
pop
fwait
clc
ret
push
out
xchg
sub
int
cli
and
mov
in
je
stos
mov
or
js
cmp
test
movsl
lcall
pushf
and
mov
push
hlt
in
or
fldl
sub
cmp
cmp
fnstenv
mov
add
mov
pop
jns
xor
mov
or
roll
inc
out
dec
js
add
mov
lods
lods
ret
mov
add
dec
std
cltd
sub
pop
call
adc
loopne
mov
out
clc
pop
mov
mov
sub
cmp
jnp
xchg
aam
pop
cwtl
lock
jle
adc
mov
add
out
aas
mov
mov
jmp
add
negl
mov
in
mov
dec
dec
in
jg
lahf
inc
aaa
mov
mov
add
fldt
and
in
pushf
orl
int
fidivl
jb
mov
daa
add
mov
sbb
in
add
ljmp
out
and
add
mov
add
xlat
sbb
scas
lahf
rolb
mov
fld
rolb
mov
push
add
pop
jle
inc
sbb
or
stos
out
cmp
add
add
mov
ds
stc
jle
jp
pop
xchg
add
add
mov
sbb
test
jmp
jge
adc
cltd
rol
pop
les
rolb
idivl
and
mov
repz
fs
add
fbld
mov
pop
ja
pusha
add
scas
enter
addb
clc
dec
push
out
lods
jle
push
add
std
push
jp
mov
pushf
mov
and
dec
lods
sub
mov
add
jle
std
ret
mov
cltd
inc
add
hlt
bound
mov
test
int
into
outsl
xor
mov
in
cmp
mov
scas
sub
scas
add
xlat
dec
or
pop
cmpsb
xchg
mov
push
xchg
mov
add
fbld
xchg
jmp
mov
mov
push
lret
mov
iret
loopne
mov
int
add
imulb
addb
movsl
lcall
sti
mov
std
out
dec
or
lret
stos
lcall
mov
mov
insl
fwait
lods
or
add
pop
mov
mov
mov
mov
jne
add
mov
or
imull
or
mov
add
push
add
mov
and
add
clc
mov
add
lods
popa
cltd
jno
or
jle
xchg
mov
lret
jmp
das
or
add
repz
mov
xor
mov
roll
cmp
or
outsb
std
cli
and
mov
adc
or
icebp
adc
pop
pop
pop
and
cmpsl
hlt
fadd
add
stos
xchg
stos
adc
mov
out
mov
outsl
inc
dec
addr16
pop
push
add
stc
adc
mov
push
leave
add
jb
mov
jmp
sub
add
mov
fidivrl
stos
fldcw
mov
add
ss
test
cmp
push
into
rolb
sbb
incb
add
and
fdivp
mov
jp
fstps
mov
jmp
and
popf
adc
movsb
sbb
rolb
mov
add
xorl
mov
stos
and
mov
je
outsl
and
mov
jge
fucomip
nop
add
xchg
mov
out
sub
ss
pop
mov
arpl
mov
add
std
es
inc
dec
dec
lds
xchg
and
out
push
ficompl
js
stos
mov
sub
rolb
mov
pop
mov
stos
gs
rcl
add
add
push
mov
sbb
int
fistpll
mov
mov
mov
push
cwtl
inc
inc
sahf
pop
jmp
dec
sbbl
add
mov
mov
xor
repnz
mov
jnp
pop
mov
add
popa
in
je
push
add
jp
aad
xor
add
jle
fsubrl
jbe
mov
imul
int
mov
mov
shl
add
cmp
rolb
add
dec
sbb
mov
add
pop
cmc
sbb
jl
or
add
int
xchg
add
mov
jp
dec
mul
pop
cmp
cmp
movsb
pop
inc
xor
roll
hlt
fstp
add
addr16
jl
push
fildll
push
mov
mov
and
into
xchg
add
mov
push
ds
add
add
push
add
data16
test
arpl
pop
pop
or
jle
aad
mov
mov
outsl
xor
fucom
xor
mov
pop
push
add
xchg
leave
cs
xchg
add
ss
xchg
adcl
lahf
clc
in
in
inc
sbb
outsl
pop
inc
add
mov
push
enter
push
or
mov
lea
sbb
mov
mov
add
inc
add
add
push
aaa
idivb
in
addl
aas
jae
ljmp
xor
das
lods
push
adc
dec
std
cmp
ljmp
lahf
stc
fistps
push
push
out
jmp
add
mov
lds
add
xchg
mov
cmp
jne
add
in
ret
mov
xchg
stos
fistpll
jae
mov
loop
mov
popl
repnz
aad
jne
jecxz
addb
dec
xchg
adc
fstps
cltd
sbb
inc
add
fcoms
icebp
push
xor
push
loop
mov
cmp
mov
add
mov
mov
stc
loope
fidivs
push
pusha
add
jae
xchg
add
cli
mov
mov
mov
imul
push
les
mov
rolb
xor
mov
mov
cmp
add
xchg
int3
outsl
fidivrs
sbb
adc
cmc
int
xchg
add
pop
adc
mov
push
in
loope
sub
es
add
arpl
add
jmp
mov
mov
out
xorl
test
or
lods
out
orl
jno
insl
cs
mov
mov
and
mov
bound
mov
mov
xor
mov
mov
push
mov
xor
mov
adc
add
cmpsb
jno
test
mov
rolb
mov
add
lock
sub
jl
cmp
insb
adcl
rolb
mov
jbe
add
mov
sbb
push
test
and
mov
add
mov
push
add
fnstcw
add
and
mov
mov
inc
mov
push
add
sub
mov
jnp
mov
add
out
test
mov
cmc
xor
rolb
mov
xchg
fidivrl
mov
das
pop
lds
cs
add
mov
in
xor
mov
movsl
push
mov
scas
mov
or
or
gs
add
ret
cmpsl
xchg
add
xchg
pop
cmp
mov
add
xchg
pusha
add
addb
xlat
stos
addb
cmpsb
mov
aam
inc
and
mov
stc
sbb
iret
xor
mov
xchg
or
jle
xlat
dec
ja,pn
add
add
inc
dec
nop
add
test
xlat
dec
ljmp
add
xlat
dec
pop
stos
push
push
xor
adc
pop
sub
in
inc
dec
loop
mov
xchg
stos
aam
in
inc
add
push
cmc
test
mov
mov
xchg
jl
add
mov
sub
fwait
jmp
cmpsl
pshufw
pop
adc
mov
test
jae
rol
pusha
add
sahf
jge
add
jb
mov
cmc
or
ret
adc
repnz
xchg
fidivrl
fs
dec
test
xchg
iret
mov
mov
add
ja
add
add
int
jecxz
add
dec
lock
imul
add
xchg
dec
in
ss
add
add
aad
push
xor
mov
add
sbb
into
sbb
jb
mov
jl
addb
sub
inc
in
fsts
inc
std
nop
add
mov
hlt
cwtl
pushf
pop
icebp
imul
xor
add
mov
add
loop
mov
lds
stos
addb
insb
or
arpl
sub
xchg
inc
push
mov
mov
ds
mov
cmp
xchg
push
and
lock
mov
mov
sbb
arpl
adc
in
lods
in
ret
jl
dec
leave
sbb
jo
mov
add
add
cltd
dec
movsl
jmp
add
add
addr16
xchg
dec
ret
sub
or
sub
mov
push
repnz
dec
cwtl
jbe
push
subl
add
dec
rcll
les
addb
imul
add
cmc
test
xchg
enter
fisttps
int
jmp
mov
jnp
jecxz
mov
in
fwait
inc
add
add
fsubrs
movsl
fsubs
add
lock
imul
xlat
in
sub
or
mov
fbstp
mov
sti
daa
fadds
loop
mov
mov
mov
mov
repnz
push
hlt
xchg
inc
aas
xchg
add
sub
push
add
add
dec
cmp
or
jmp
shll
add
fwait
aaa
and
mov
ret
mov
ds
add
pop
pusha
add
add
add
push
fmul
insl
ret
xlat
ljmp
jle
repz
jecxz
dec
lret
andl
sbb
std
lock
out
call
jecxz
pusha
add
imul
add
sbb
or
mov
fnstsw
repz
jbe
adc
out
mov
mov
hlt
push
add
mov
sub
jbe
pop
pop
xor
stos
lods
adc
cmpsl
stos
iret
mov
mov
add
fidivl
or
repnz
mov
mov
mov
jbe
lret
rcrl
in
dec
fcomps
addb
adc
and
or
mov
add
jns
clc
ja
sbb
push
outsl
call
mov
inc
clc
xchg
aad
aaa
std
loopne
mov
mov
jmp
rolb
mov
pop
aaa
fwait
or
inc
add
aas
test
jge
add
out
ss
push
scas
pop
std
mov
mov
add
add
mov
or
lods
pop
cli
outsl
mov
decl
sti
push
sub
jne
mov
mov
add
ret
out
and
xor
mov
addr16
inc
frndint
mov
add
xchg
roll
xor
mov
push
outsl
shl
or
and
mov
imul
add
push
ljmp
test
mov
add
pop
addb
pop
mov
fldt
aas
loopne
mov
add
in
mov
cmc
mov
int3
xchg
push
mov
mov
sbb
mov
jle
mov
leave
jns
push
frstor
xchg
ss
adc
mov
xor
mov
mov
cld
outsl
sub
add
jbe
loope
loope
add
mov
and
mov
movsl
mov
mov
push
xchg
je
adcl
lret
pop
insb
movsl
or
into
jno
test
popf
add
add
stos
adc
pop
fiadds
add
pop
cltd
rcrl
xchg
sub
sbb
pusha
add
jbe
and
jns
add
js
or
jae
rolb
mov
mov
clc
jns
jne
pminsw
dec
push
add
add
imul
es
jns
scas
jecxz
jb
mov
stos
pop
xchg
push
fldcw
lods
es
add
sub
add
into
mov
xchg
adc
add
inc
pop
mov
mov
setg
out
sti
pop
fstp
mov
jmp
aad
repnz
add
add
ljmp
dec
xchg
xor
mov
rolb
mov
inc
mov
push
inc
push
adc
mov
mov
aad
push
test
xchg
stos
stos
add
add
xchg
test
out
and
add
pop
sub
movsb
rolb
mov
or
out
inc
pop
mov
pop
hlt
jae
rolb
mov
add
add
test
pop
or
inc
mov
jbe
and
loopne
mov
mov
bound
mov
hlt
or
cmpl
push
push
pop
dec
imul
xchg
jg
xchg
movsl
adc
mov
add
mov
cmpsl
add
mov
mov
push
pop
pusha
add
dec
push
clc
das
inc
clc
add
popa
daa
sahf
xchg
shll
inc
or
push
inc
mov
add
cmpsb
bound
mov
mov
lahf
cwtl
inc
sbb
push
add
leave
stos
inc
fsubrp
ja
dec
inc
cmp
mov
or
dec
mov
add
pop
sbb
or
and
mov
arpl
or
lret
push
mov
cmp
mov
jno
enter
mov
adc
mov
cli
dec
jno
add
or
xor
mov
jb
mov
mov
cmp
pusha
add
mov
add
mov
icebp
or
push
jne
dec
pop
movsl
mov
and
mov
mov
mov
mov
add
sbb
jb
mov
add
push
rolb
mov
cmpsb
sub
add
insb
and
std
jmp
data16
jns
loopne
mov
pop
dec
mov
mov
lahf
add
mov
sub
add
mov
dec
inc
add
push
push
cmp
add
sub
cmp
sub
push
add
mov
jp
in
addb
movl
cmpsl
add
add
std
fwait
jle
jl
add
inc
dec
mov
lahf
fmuls
sub
lcall
mov
addb
mov
out
xor
mov
mov
outsl
adc
xchg
gs
and
xor
mov
mov
lock
aaa
cwtl
push
mov
push
rolb
mov
add
pop
insl
ror
ds
sbb
fstl
loope
xchg
mov
out
test
pop
in
mov
add
add
jns
pushf
jnp
outsb
pop
pop
xchg
dec
int
add
ret
insl
inc
push
sbb
mov
aaa
inc
add
pop
bound
mov
push
xor
jge
add
mov
mov
cmp
pusha
add
mul
subl
lret
cmc
int3
add
mov
in
or
or
and
mov
hlt
iret
dec
add
mov
cmp
out
lahf
ret
add
mov
dec
pusha
add
mov
lods
add
pop
cmpsl
push
inc
cwtl
test
ss
gs
rolb
movsb
sbb
movsl
jno
pop
outsb
jecxz
adc
out
in
fisttps
add
add
int
xlat
jg
add
cmp
les
mov
andl
addb
loope
fdivrl
aaa
addb
lcall
mov
fdivrl
mov
or
mov
je
aam
sub
xchg
sbb
cld
loope
idiv
arpl
pushaw
add
xchg
out
add
in
mov
add
mov
mov
xchg
test
jbe
out
std
adc
mov
add
push
jle
add
mov
mov
imul
cmp
add
add
mov
mov
mov
mov
movsl
mov
lds
mov
rolb
mov
jo
mov
or
and
cs
sarl
sub
negb
xchg
addb
das
icebp
sahf
jge
jg
outsl
ja
adc
mov
add
scas
xor
add
in
push
mov
add
sub
imul
and
mov
mov
sbb
add
sub
insb
inc
cwtl
pop
pop
inc
imul
cmp
aaa
out
pop
lret
sbb
or
mov
jb
mov
jnp
add
mov
mov
jl
push
pop
inc
add
pop
mov
cmp
lods
sub
mov
jge
mov
cmpsb
push
xchg
pop
addb
mov
mov
xchg
add
ljmp
lret
movb
dec
flds
mov
sub
loopne
mov
add
push
adcl
shll
mov
into
adc
add
rolb
mov
jl
lcall
pop
fstp
popa
fimuls
add
add
and
ficompl
sti
push
shl
sbb
xchg
jge
adc
add
mov
xchg
or
cmpsb
clc
adc
mov
js
add
mov
sbb
xchg
add
outsb
jno
cmc
in
in
aas
cltd
inc
add
adc
mov
sub
cmpsl
lock
pushf
popf
mov
add
add
mov
in
xchg
add
test
add
in
dec
inc
imulb
loopne
mov
add
add
dec
fldl
test
data16
adc
mov
adc
add
and
pop
nop
add
test
pop
and
out
aas
into
int3
scas
and
inc
add
push
add
mov
dec
shll
pop
imul
nop
add
cli
xchg
mov
mov
adc
add
dec
jae
lcall
mov
es
add
cmpsb
mov
mov
cltd
cltd
xor
mov
loope
and
xlat
icebp
lahf
pop
lds
fisubl
fnstenv
jge
sbb
lods
xor
jmp
pop
aam
rolb
mov
cmp
cmp
fadd
insl
ret
jns
mov
in
popf
cmc
jnp
ret
ds
inc
add
add
sub
movsl
insb
sbb
js
enter
pop
push
add
cmp
fidivl
mov
xchg
push
in
add
ret
cmp
ret
pop
movsb
mov
rolb
mov
jge
inc
js
add
add
inc
scas
mov
movsl
test
cmpsb
jns
add
mov
in
mov
add
addb
mov
and
in
push
add
or
mov
mov
sbb
cmp
sbb
add
int
inc
add
out
enter
mov
addb
cmpsb
and
pop
mov
add
mov
xor
mov
add
add
mov
sbb
xor
jge
add
and
mov
in
add
xor
mov
add
and
mov
mov
outsl
inc
popf
aaa
fiadds
dec
push
add
add
pop
sub
clc
stos
xchg
in
xor
mov
mov
sub
inc
add
jae
std
lods
fldcw
sub
dec
outsb
dec
out
rolb
mov
mov
mov
xchg
or
into
mov
add
js
repz
cmp
mov
xchg
pop
pop
shrl
pop
or
add
jbe
inc
stos
hlt
push
add
adc
arpl
shrl
rorl
aas
test
pop
cwtl
loope
or
mov
add
jns
add
or
xchg
pop
out
mov
mov
mov
add
mov
enter
mov
jae
sbb
adc
mov
mov
push
add
data16
leave
imul
add
push
xor
mov
pop
pop
daa
inc
dec
jo
mov
add
out
cld
inc
xorl
popf
mov
cli
mov
andl
mov
js
fldz
adc
add
mov
add
xor
int
mov
inc
and
mov
mov
sub
mov
icebp
aad
dec
sahf
dec
adc
in
inc
adc
mov
mov
stc
and
rolb
test
cmp
stc
fsubrp
out
add
hlt
lahf
clc
std
add
daa
rolb
mov
cwtl
mov
push
add
neg
out
xor
inc
add
add
mov
imul
aas
pop
dec
pop
and
mov
add
jno
adc
add
mov
int3
adc
mov
inc
add
mov
mov
daa
xor
mov
out
add
mov
inc
cmp
inc
inc
sub
rolb
mov
rep
lret
inc
add
mov
and
add
in
push
insl
mov
cs
dec
inc
add
filds
xchg
out
cmp
add
mov
and
mov
xchg
test
dec
mov
mov
mov
add
je
test
imul
add
testb
bound
mov
cmpsl
add
xchg
sub
mov
movl
repz
inc
sub
jo
mov
insb
mov
inc
sbb
add
pop
test
cmp
add
jbe
ds
lods
jo
mov
dec
and
mov
push
jecxz
add
jne
cmpsl
sahf
mov
into
cltd
push
sub
xchg
mov
lret
inc
adc
mov
xor
mov
mov
xchg
add
add
add
or
js
jmp
addr16
or
adc
aas
stos
cwtl
shll
cmp
fcmovb
add
xor
stos
iret
pop
inc
insl
rolb
mov
add
adc
xchg
mov
xchg
jae
push
imul
push
cmp
lret
rolb
mov
sbb
push
push
add
mov
addb
into
mov
mov
add
mov
jns
testb
xor
mov
cld
es
jg
add
xor
aas
jle
add
daa
push
lret
imul
add
adc
or
xchg
add
adc
add
mov
std
iret
mov
add
add
scas
xor
fidivrs
jle
and
mov
add
ljmp
hlt
push
add
aas
arpl
push
cwtl
jb
mov
or
fildl
hlt
push
add
mov
add
jmp
add
sub
nop
add
inc
ss
popa
push
mov
mov
cltd
push
int
inc
ljmp
aas
arpl
xchg
clc
outsl
jbe
or
arpl
add
jge
add
add
mov
jne
cmp
mov
ss
mov
mov
add
xor
or
ss
mov
adc
mov
aad
test
add
add
roll
rcll
adc
mov
push
pushf
cmp
sbb
push
ljmp
outsl
movsl
aaa
adc
and
mov
add
mov
imul
adc
mov
inc
jbe
add
lret
pop
sub
outsb
popf
mov
roll
and
pusha
add
add
lcall
test
mov
mov
add
mov
add
cmp
add
mov
add
or
imul
cmc
mov
fdivs
xchg
aad
dec
mov
mov
sub
mov
addb
lcall
movl
insl
rcrl
mov
rcrl
push
jnp
pushf
in
scas
notl
inc
ja
xchg
pop
imul
bound
mov
jg
jo
mov
call
cmpsb
scas
ret
sahf
jl
imul
adc
test
or
out
push
xchg
push
mov
adc
sbb
add
cwtl
inc
add
or
sahf
aaa
cli
jb
mov
xchg
dec
pop
mov
adc
mov
mov
add
scas
iret
in
pop
in
loope
imul
lahf
pop
test
add
aas
xchg
jle
dec
int
shr
pop
add
out
xchg
xchg
fnsave
test
sahf
das
jno
inc
add
lea
add
outsl
jo
mov
add
sbb
das
pop
push
push
push
pushl
mov
ss
xor
add
dec
sbb
popf
dec
lds
add
add
test
mov
pop
dec
cli
xlat
add
mov
lds
addr16
mov
add
add
add
add
sbb
or
dec
mov
or
repz
sbb
inc
add
xor
movsl
lahf
mov
jne
int3
xchg
mov
inc
add
pushf
cmc
jl
add
xchg
add
clc
cmp
xchg
ljmp
xchg
add
mov
add
stos
cmp
mov
mov
push
arpl
mov
add
add
rorl
cltd
packsswb
xchg
add
inc
test
lahf
setae
scas
jmp
mov
jbe
loopne
mov
adc
mov
sub
mov
jbe
add
mov
mov
cmp
add
leave
jb
mov
add
mov
cwtl
mov
not
add
les
add
mov
jg
ja
jecxz
inc
add
stc
scas
sbb
addb
sub
add
sahf
lret
insl
mov
bound
mov
mov
push
dec
xchg
mov
mov
mov
dec
aam
insl
addb
mov
pop
xor
xlat
xchg
add
jns
pop
push
ljmp
add
mov
push
add
sahf
xor
mov
cmp
dec
add
in
push
pop
jmp
xchg
add
mov
psadbw
jmp
push
or
loop
mov
sub
aas
popa
sbb
in
lea
adc
adc
mov
imul
mov
nop
add
leave
sub
push
add
sar
pusha
add
xchg
out
aam
dec
fisubrs
adc
scas
jns
rolb
mov
les
loope
pop
mov
mov
mov
outsb
test
add
or
pop
mov
mov
mov
add
inc
ds
movsb
inc
bound
mov
mov
mov
mov
jo
mov
pop
push
arpl
cs
jo
mov
mov
mov
mov
pop
fisttpll
sar
sbb
dec
sub
pop
loope
add
jge
add
mov
add
enter
pop
and
mov
add
mov
into
fdivl
mov
enter
add
and
mov
add
mov
mov
loope
push
into
push
mov
fsubrs
jb
mov
mov
add
mov
es
mov
inc
test
dec
jb
mov
push
pop
in
sbb
sbb
mov
addr16
add
adc
or
and
shrl
add
lahf
fcomps
mov
add
push
cmp
fstl
ds
dec
icebp
pusha
add
addb
jns
test
mov
add
pushf
mov
xchg
add
push
add
pop
jno
lods
mov
xor
xor
mov
lcall
or
sub
add
stos
sbbl
aaa
sbb
mov
push
lea
mov
rcll
inc
add
push
jl
adc
add
push
push
ret
jns
xor
push
add
xchg
cwtl
add
mov
jp
fmull
mov
mov
mov
push
clc
outsl
pop
in
rolb
mov
out
aas
roll
dec
in
or
in
pop
push
add
aam
push
mov
mov
test
add
fstps
push
push
mov
add
mov
ja
mov
add
test
fdivl
jmp
mov
xlat
lock
stc
xlat
pusha
add
mov
or
arpl
add
add
mov
add
pushf
addr16
icebp
xchg
sbb
add
aam
add
imul
mov
pop
lds
mov
sti
adc
mov
aas
popa
pushf
fldt
adc
mov
sub
add
sub
add
sbb
mov
mov
das
mov
addb
cmp
or
xor
leave
ret
data16
mov
lret
sub
test
sbb
push
lds
mov
mov
test
les
xlat
mov
in
addb
insl
or
push
sub
dec
xchg
call
add
ds
aaa
adc
mov
push
lods
bound
mov
or
add
add
jle
js
idiv
ret
js
ds
xor
mov
bound
mov
add
jl
in
or
leave
js
sbb
mov
or
fs
mov
xchg
mov
mov
mov
aaa
into
iret
cmp
mov
add
pop
lret
int3
loopne
mov
dec
fwait
lods
xchg
add
push
sub
pop
cmp
xor
mov
pusha
add
jecxz
pop
mov
popa
fbld
outsl
loope
add
dec
repnz
popf
lods
fmuls
addb
push
imul
rolb
addb
imul
sbb
xchg
hlt
mov
mov
mov
or
inc
mov
add
mov
add
sub
insb
xchg
ljmp
fcmovne
out
test
and
mov
sub
testb
inc
test
jne
dec
mov
add
jl
sbb
rolb
cld
push
push
mov
jle
or
lds
jb
mov
and
jae
out
mov
aad
sub
test
loopne
mov
mov
lcall
aam
inc
mov
mov
adc
hlt
imul
lods
bound
mov
dec
adc
ljmp
fdiv
jmp
imul
loopne
mov
sbb
inc
add
jae
test
sub
aas
mov
adc
fidivrl
mov
lret
mov
out
dec
push
add
inc
fs
add
mov
fimull
push
mov
xchg
dec
inc
add
fs
mov
enter
push
add
jae
pop
sbb
in
mov
mov
add
shrl
lahf
leave
imul
pop
jecxz
insb
or
stos
or
outsl
dec
in
ljmp
dec
push
adc
mov
add
jp
dec
mov
loopne
mov
enter
xorl
mov
es
fstps
lahf
int
inc
add
cmp
add
xor
mov
push
iret
loope
add
and
popf
jne
sub
addr16
add
mov
rolb
mov
push
or
mov
sbb
dec
gs
cmc
out
daa
jb
mov
rolb
pop
xchg
xor
pusha
add
fcompl
xor
das
and
cmpsb
inc
roll
and
mov
cmp
add
in
add
loope
push
inc
add
xchg
shr
and
add
lcall
stos
and
outsl
xchg
mov
mov
cs
pushl
mov
les
and
mov
add
add
out
add
fdivrl
sti
add
loopne
mov
jae
cmp
idivb
mov
pop
cmpsb
xlat
mov
ss
lds
pop
add
add
movsb
mov
pop
cs
sub
jbe
or
leave
dec
xchg
movsb
jl
add
mov
mov
jnp,pt
test
add
lret
in
mov
lret
mov
inc
adc
add
aaa
into
or
mov
push
lahf
ds
addr16
inc
and
mov
icebp
add
mov
mov
jge
add
repnz
lods
fidivl
mov
int
inc
dec
and
insb
dec
push
add
arpl
cmpsb
int
lret
inc
add
lea
jno
lods
or
lret
mov
mov
add
jae
cmp
add
pop
cmpsb
add
mov
cwtl
jo
mov
add
mov
jmp
cmpsb
dec
dec
fwait
arpl
in
add
mov
rolb
mov
lds
adc
mov
das
cmp
mov
add
mov
sub
add
mov
cmp
cmp
xor
call
ss
fsubs
add
mov
add
pop
mov
mov
repz
fsubp
cmpsb
sub
mov
movsb
sbb
sub
jns
pusha
add
add
mov
xchg
mov
add
mov
pop
ja
movsb
add
pop
xchg
mov
mov
loopne
mov
jmp
sbb
mov
mov
imul
mulb
mov
mov
mov
fwait
js
or
mov
mov
sbb
add
mov
nop
add
rolb
mov
add
lods
test
in
xchg
add
icebp
adc
mov
add
cwtl
xor
icebp
or
pop
testl
loope
xor
nop
add
cmp
add
lds
out
mov
jnp
fs
add
sub
adc
pushf
aaa
push
add
and
mov
mov
add
fwait
mov
mov
xchg
xor
lock
rolb
mov
cli
push
mov
fwait
push
decb
repz
mov
mov
es
pushf
cmp
iret
test
insl
int3
gs
add
mov
inc
ds
out
cld
adc
rcrl
and
or
xchg
pop
inc
mov
add
add
lods
adc
shll
jae
mov
fstpl
hlt
sti
mov
and
push
pop
mov
adc
mov
adc
mov
ljmp
add
dec
mov
icebp
mov
add
clc
pop
mov
mov
and
add
arpl
add
pop
jg
jns
btr
mov
add
div
add
out
push
cli
push
scas
xor
mov
jg
or
dec
jmp
mov
add
and
lock
dec
xchg
xor
sub
mov
mov
xchg
inc
mov
adc
mov
xchg
add
add
mov
add
mov
add
sub
jmp
add
inc
inc
je
xchg
inc
lahf
popa
mov
mov
mov
add
mov
fwait
aam
sub
push
push
test
dec
sub
inc
jnp
addl
je
mov
aaa
dec
or
push
cltd
jecxz
push
inc
add
ficoml
add
xchg
lds
add
xor
out
push
stos
adc
mov
lds
mov
sbb
xor
mov
orl
add
mov
add
inc
push
add
lods
les
inc
add
add
sub
add
sbb
mov
jmp
add
mov
mov
lret
sub
in
adc
loop
mov
lret
arpl
cltd
adc
mov
xor
mov
xor
add
jne
xor
add
sbb
pop
mov
std
xor
aaa
cwtl
mov
pop
xor
popa
jno
aad
add
pushl
pop
jecxz
jns
sbb
daa
mov
push
cld
jne
pop
adc
mov
mov
adc
mov
push
popf
daa
ja
or
adc
jb
mov
aaa
shr
movsb
ljmp
cmp
sahf
add
dec
popa
je
les
push
iret
push
mov
jbe
lret
loopne
mov
add
cmp
fldcw
add
or
scas
shr
jae
xchg
sub
mov
loop
mov
mov
mov
cmpsb
xor
mov
bound
mov
add
mov
sbb
sub
xor
inc
add
call
or
add
mov
xchg
outsl
rcll
jge
enter
mov
add
jae
xchg
mov
add
jmp
add
add
cld
mov
sub
sbb
add
mov
pushf
add
pop
mov
mov
jbe
lds
inc
add
enter
xlat
rcll
add
pop
jno
scas
cmp
adc
mov
push
sub
popf
hlt
mov
ja
icebp
rcrl
add
add
pop
ret
xor
mov
push
pop
jb
mov
push
daa
mov
add
inc
add
hlt
mov
mov
js
cmp
ja
daa
int3
sbb
lods
add
mov
sti
adc
mov
dec
rolb
mov
pop
call
mov
mov
dec
inc
or
push
add
mov
out
aaa
cmp
ja
add
mov
ja
iret
test
popa
movsl
xor
cmpsl
sub
inc
add
add
add
sti
pop
lahf
stos
xchg
daa
insb
pop
sbb
xchg
iret
cmpsb
fdivs
mov
call
fucomi
lret
pop
popa
repnz
adc
cmp
xlat
or
jns
add
loop
mov
add
outsl
rolb
mov
xor
mov
pop
out
jecxz
xor
ljmp
xchg
adcl
push
add
mov
add
push
jmp
out
dec
int
filds
mov
pop
rolb
jge
or
repz
add
dec
cmp
jns
jp
push
clc
shrl
int3
or
data16
mov
arpl
sbb
push
sti
iret
mov
push
cmp
and
notl
mov
in
mov
jg
shrl
xor
mov
shrl
mov
mov
mov
xchg
in
or
add
dec
lods
insl
ret
jo
mov
jp
jl
and
inc
inc
std
stos
jle
dec
aam
lods
push
jbe
cmc
inc
pop
sbb
add
xchg
add
outsb
addb
cwtl
push
jp
mov
add
and
xchg
mov
mov
int3
addr16
inc
mov
pop
loope
jb
mov
rolb
mov
jo
mov
icebp
add
test
mov
stos
sub
xchg
push
cmp
mov
pop
loopne
mov
jns
inc
add
or
push
int3
aaa
xor
mov
pop
xchg
lahf
sub
inc
bound
mov
sbb
pop
pop
xor
mov
dec
pop
jecxz
mov
rorl
sub
mov
lods
pop
das
addb
jo
mov
add
add
mov
add
sub
popf
or
add
lret
dec
test
in
push
enter
dec
aam
lea
or
add
xor
add
icebp
mov
mov
cli
add
mov
ds
js
add
imul
into
mov
sbb
pop
or
mov
add
xchg
je
or
popa
sahf
add
popf
inc
add
test
mov
sbb
add
jp
and
inc
jno
call
mov
or
test
repz
jl
ljmp
xchg
pushf
mov
add
into
and
dec
mov
inc
cmp
lds
xlat
push
xchg
xchg
mov
or
add
or
pop
loopne
mov
add
cmc
addl
ret
out
ss
inc
ljmp
mov
add
mov
mov
pop
sub
popf
mov
mov
stc
leave
sahf
and
mov
scas
in
aad
mov
je
add
rolb
xchg
mov
insb
aam
movsl
loop
mov
xlat
pop
push
add
inc
scas
jp
add
das
push
cwtl
addr16
imul
js
add
test
data16
sbb
adc
clc
jbe,pt
pop
adc
sbb
push
in
xchg
add
xchg
sub
pushf
std
mov
pop
pop
or
add
jnp
repnz
inc
add
sbb
fdivs
add
es
cmpl
dec
mov
fstps
mov
xchg
mov
pop
jg
iret
push
xor
mov
pop
fwait
jl
or
pop
dec
xor
mov
jno
dec
dec
xor
mov
mov
clc
repnz
nop
cld
jae
add
add
and
push
mov
nop
leave
jmp
add
add
aam
jne
clc
repnz
nop
cld
jae
add
ret
gs
call
clc
repnz
nop
cld
jae
add
mov
test
add
nop
nop
cld
jae
add
icebp
stos
mov
clc
repnz
nop
cld
jae
push
xor
add
test
test
add
clc
repnz
nop
cld
jae
adc
jae
push
mov
nop
leave
jmp
inc
call
ficoms
push
add
inc
adc
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
ret
mov
into
push
add
add
clc
clc
repnz
nop
cld
jae
push
mov
add
mov
clc
repnz
nop
cld
jae
mov
add
push
mov
lea
push
mov
xchg
ret
cmp
cld
add
clc
repnz
nop
cld
jae
push
rclb
dec
xor
push
mov
nop
leave
jmp
pushf
aaa
add
add
pusha
push
mov
xchg
ret
cmpsl
add
add
pop
fiadds
xchg
ret
repz
add
add
add
je
push
mov
nop
leave
jmp
fiadds
xchg
in
add
push
mov
xchg
ret
push
add
add
rolb
aam
push
clc
repnz
nop
cld
jae
in
add
add
call
and
push
push
mov
nop
leave
jmp
fimuls
repz
dec
push
mov
xchg
ret
into
mov
add
mov
mov
jns
popa
push
mov
xchg
ret
add
add
add
repz
mov
nop
leave
jmp
call
add
call
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
mov
add
add
add
cltd
pop
push
mov
xchg
ret
mov
inc
add
add
repnz
nop
cld
jae
imul
add
add
xor
push
mov
xchg
ret
jle
or
incl
pushf
dec
pop
clc
repnz
nop
cld
jae
add
push
add
add
movswl
clc
repnz
nop
cld
jae
add
add
mov
iret
add
clc
repnz
nop
cld
jae
jae
pushf
add
mov
jne
icebp
dec
and
push
mov
nop
leave
jmp
xchg
add
add
mov
push
mov
nop
leave
jmp
lock
into
add
add
cmpsl
xchg
push
repz
mov
xchg
ret
or
add
inc
add
push
mov
nop
leave
jmp
add
add
test
stos
jne
push
mov
nop
leave
jmp
add
xchg
add
mov
add
add
repnz
nop
cld
jae
cmp
and
mov
push
mov
xchg
ret
add
add
into
lods
cmp
mov
nop
leave
jmp
add
lock
stc
xchg
add
clc
repnz
nop
cld
jae
push
push
repz
jle
pop
clc
repnz
nop
cld
jae
sbb
jle
mov
or
add
lret
mov
clc
repnz
nop
cld
jae
add
pop
cmpsl
push
add
mov
clc
repnz
nop
cld
jae
push
or
push
add
mov
push
mov
repnz
add
xchg
icebp
add
je
dec
add
mov
clc
repnz
nop
cld
jae
adc
xor
mov
mov
push
mov
nop
leave
jmp
push
add
xor
mov
cmp
add
push
mov
nop
leave
jmp
lods
add
mov
clc
repnz
nop
cld
jae
in
add
repnz
nop
cld
jae
clc
mov
movsl
push
push
mov
xchg
ret
add
or
lods
add
inc
clc
repnz
nop
cld
jae
add
jae
mov
lcall
add
clc
repnz
nop
cld
jae
add
adc
add
push
mov
nop
leave
jmp
or
adc
jg
clc
repnz
nop
cld
jae
add
add
xor
sub
enter
nop
cld
jae
add
repz
nop
leave
jmp
xchg
add
push
add
mov
nop
cld
jae
aaa
incl
add
jne
push
mov
xchg
ret
add
repz
cmp
add
test
add
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
add
data16
adc
repnz
nop
cld
jae
add
lods
stc
add
jb
mov
leave
clc
repnz
nop
cld
jae
pop
add
clc
add
hlt
mov
mov
clc
repnz
nop
cld
jae
push
add
add
add
push
cmp
repnz
nop
cld
jae
in
add
sbb
add
push
int
sar
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
xchg
aam
sbb
rclb
scas
mov
push
mov
nop
leave
jmp
add
add
jg
clc
repnz
nop
cld
jae
add
aam
add
mov
call
clc
repnz
nop
cld
jae
push
add
hlt
push
repnz
nop
cld
jae
aaa
or
mov
les
repnz
nop
cld
jae
pushf
add
lcall
add
repnz
nop
cld
jae
imul
dec
sub
repnz
nop
cld
jae
fiadds
in
repz
push
sub
sti
push
mov
nop
leave
jmp
add
lods
mov
add
repnz
nop
cld
jae
add
cmpsl
and
mov
mov
push
mov
nop
leave
jmp
dec
shrb
adc
push
mov
xchg
ret
xchg
into
add
dec
xor
mov
clc
repnz
nop
cld
jae
repz
clc
repnz
nop
cld
jae
mov
xchg
add
sahf
mov
clc
repnz
nop
cld
jae
jae
add
mov
repnz
nop
cld
jae
add
add
lods
add
xor
xorl
clc
repnz
nop
cld
jae
inc
add
nop
nop
cld
jae
add
inc
rolb
xchg
jl
test
or
add
in
nop
leave
jmp
jmp
add
cmp
jae
mov
nop
leave
jmp
add
add
lret
cmpw
push
mov
nop
leave
jmp
add
add
add
in
nop
leave
jmp
add
push
push
or
into
div
clc
repnz
nop
cld
jae
imul
add
mov
xor
add
clc
repnz
nop
cld
jae
into
xchg
cmpsl
add
mov
add
arpl
jecxz
inc
push
mov
xchg
ret
add
cmpsl
pop
add
add
enter
nop
nop
cld
jae
add
incl
add
repnz
nop
cld
jae
lock
add
or
add
clc
repnz
nop
cld
jae
add
add
ret
dec
lods
stc
pusha
clc
repnz
nop
cld
jae
push
mov
add
add
repz
push
mov
xchg
ret
add
add
add
sbb
int3
inc
add
add
add
xchg
lods
mov
movb
cmp
ret
stc
add
aaa
add
xchg
xchg
ss
push
push
mov
nop
leave
jmp
xchg
or
add
jmp
popa
add
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
mov
add
add
into
xchg
outsl
add
push
mov
nop
leave
jmp
add
call
xor
add
mov
clc
repnz
nop
cld
jae
add
add
lcall
repnz
nop
cld
jae
pop
add
jmp
in
push
push
mov
xchg
ret
add
add
add
jle
jg
jmp
nop
cld
jae
fisubs
adc
mov
clc
repnz
nop
cld
jae
add
or
dec
push
mov
nop
leave
jmp
add
into
add
addr16
lret
xchg
ret
xchg
add
mov
add
xor
sub
clc
repnz
nop
cld
jae
inc
fsubrp
lods
add
test
push
mov
nop
leave
jmp
inc
add
xchg
add
sub
repnz
nop
cld
jae
lods
clc
adc
push
push
mov
xchg
ret
into
or
add
add
cmp
inc
add
add
push
mov
adc
dec
adc
sub
inc
add
xor
add
sbb
sub
xor
add
imul
sbb
xchg
clc
add
push
xchg
add
idiv
push
push
mov
xchg
ret
rol
add
incl
repz
jmp
and
add
xchg
push
lods
jmp
add
sub
add
clc
repnz
nop
cld
jae
fisubs
add
or
rcr
inc
add
add
add
add
add
clc
repnz
nop
cld
jae
or
pop
subl
nop
leave
jmp
add
aaa
or
pop
flds
xchg
ret
add
add
lock
clc
repnz
nop
cld
jae
add
test
mov
cmp
clc
repnz
nop
cld
jae
inc
inc
add
out
in
add
add
push
lods
add
add
cmp
nop
nop
cld
jae
aaa
add
pop
add
sbb
lds
xchg
ret
add
fs
mov
clc
repnz
nop
cld
jae
add
mov
lea
clc
repnz
nop
cld
jae
repz
add
add
sub
test
sbb
add
repnz
nop
cld
jae
bound
add
add
xor
mov
mov
push
mov
nop
leave
jmp
clc
in
mov
add
pushf
or
nop
cld
jae
mov
add
pop
xchg
clc
repnz
nop
cld
jae
fiadds
inc
add
mov
outsl
loopne
mov
xchg
ret
mov
add
mov
nop
nop
cld
jae
mov
imul
push
jg
mov
mov
scas
add
xor
inc
add
pop
xor
push
mov
xchg
ret
add
cmpsl
add
adc
or
leave
jmp
add
add
incl
rcr
jmp
dec
add
xchg
or
add
add
mov
es
clc
repnz
nop
cld
jae
add
jmp
nop
leave
jmp
add
add
add
sbb
ja
fs
repnz
nop
cld
jae
inc
cmpsl
push
add
loope
repnz
nop
cld
jae
add
aaa
jmp
mov
push
mov
nop
leave
jmp
xchg
push
add
push
mov
nop
leave
jmp
imul
add
jle
add
add
mov
xchg
ret
add
cmp
sarb
movb
add
clc
repnz
nop
cld
jae
add
insb
mov
clc
repnz
nop
cld
jae
add
lcall
jmp
xchg
clc
add
add
cmpsl
pop
rolb
dec
call
clc
repnz
nop
cld
jae
into
or
xchg
adc
mov
nop
cld
jae
add
add
pusha
clc
repnz
nop
cld
jae
ret
add
stc
add
or
mov
add
nop
nop
cld
jae
add
add
add
add
in
mov
clc
repnz
nop
cld
jae
add
inc
cmp
mov
xchg
ret
mov
add
or
in
mov
mov
adc
mov
nop
leave
jmp
pop
push
add
xchg
stc
imul
nop
cld
jae
inc
add
add
mov
or
sar
repnz
nop
cld
jae
stc
dec
mov
repz
add
push
mov
nop
leave
jmp
add
xchg
push
stc
add
sub
clc
repnz
nop
cld
jae
in
pushf
push
add
sbb
mov
xchg
ret
in
add
sbb
add
shlb
xor
clc
repnz
nop
cld
jae
repz
stc
add
xchg
cmpsb
and
push
mov
nop
leave
jmp
bound
imul
out
push
mov
nop
leave
jmp
lods
add
add
add
testb
cmp
ret
lods
shlb
add
push
mov
scas
enter
nop
cld
jae
add
add
jae
test
jne
clc
repnz
nop
cld
jae
add
bound
add
clc
repnz
nop
cld
jae
lods
add
xchg
dec
xchg
clc
repnz
nop
cld
jae
xor
add
add
repnz
nop
cld
jae
add
add
bound
int3
and
push
mov
xchg
ret
sbb
add
stc
add
movsb
push
mov
nop
leave
jmp
dec
add
clc
mov
mov
shl
push
mov
nop
leave
jmp
add
stc
or
in
add
mov
xchg
ret
add
aam
mov
nop
nop
cld
jae
add
data16
add
add
pusha
clc
repnz
nop
cld
jae
push
add
incl
cmp
add
nop
nop
cld
jae
lods
into
or
push
push
push
mov
xchg
ret
jmp
add
add
rclb
in
nop
leave
jmp
add
add
mov
stos
clc
repnz
nop
cld
jae
add
push
add
lock
adc
add
add
pushl
add
add
lods
dec
inc
call
sahf
add
push
mov
xchg
ret
dec
fidivs
add
add
add
inc
and
repnz
nop
cld
jae
add
xchg
mov
fs
or
dec
cmp
repnz
nop
cld
jae
add
in
add
aad
inc
pop
jne
clc
repnz
nop
cld
jae
repz
outsl
nop
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
add
add
pop
adc
mov
push
mov
xchg
ret
ficoms
add
inc
add
add
clc
lea
clc
repnz
nop
cld
jae
into
add
or
mov
in
nop
leave
jmp
push
add
add
add
add
js
push
mov
nop
leave
jmp
add
add
adc
add
lcall
jae
inc
cmpsl
add
add
add
imul
add
xor
push
add
sub
clc
repnz
nop
cld
jae
push
add
jae
or
fucomi
push
push
add
rolb
lock
add
adc
cmp
popa
add
repnz
nop
cld
jae
inc
mov
or
decl
nop
cld
jae
add
aam
add
stc
aam
mov
clc
repnz
nop
cld
jae
add
jmp
add
clc
repnz
nop
cld
jae
jmp
add
add
inc
add
cmc
call
in
nop
leave
jmp
push
add
adc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
inc
data16
rolb
lods
mov
clc
repnz
nop
cld
jae
add
repz
pop
pop
clc
repnz
nop
cld
jae
in
into
add
or
add
add
add
clc
repnz
nop
cld
jae
add
add
xchg
test
jb
jae
clc
repnz
nop
cld
jae
add
add
pusha
add
push
mov
nop
leave
jmp
pop
cmpsl
or
jle
jne
push
clc
repnz
nop
cld
jae
add
add
data16
imul
jb
out
add
mov
add
and
nop
nop
cld
jae
add
mov
mov
xchg
ret
add
push
add
add
incl
push
mov
nop
leave
jmp
pushf
ret
add
add
mov
push
mov
xchg
ret
add
rolb
sbb
mov
hlt
into
inc
add
add
mov
repnz
nop
cld
jae
mov
into
mov
lea
push
mov
nop
leave
jmp
ret
lods
add
cmp
sub
clc
repnz
nop
cld
jae
add
or
dec
push
clc
repnz
nop
cld
jae
add
add
scas
pushl
push
mov
xchg
ret
add
push
xchg
add
clc
repnz
nop
cld
jae
xor
inc
add
and
clc
repnz
nop
cld
jae
data16
in
add
rolb
mov
pop
movl
add
jae
add
add
leave
mov
clc
repnz
nop
cld
jae
push
add
add
repz
jg
pop
call
in
nop
leave
jmp
add
cli
push
mov
addb
xchg
repnz
cmp
dec
cld
mov
push
mov
xchg
ret
add
or
rolb
call
nop
nop
cld
jae
add
push
pusha
add
js
repnz
nop
cld
jae
lods
add
dec
mov
clc
repnz
nop
cld
jae
adc
add
push
mov
mov
nop
nop
cld
jae
pushf
imul
add
push
call
nop
cld
jae
add
in
jmp
repz
clc
repnz
nop
cld
jae
imul
add
add
push
sub
jne
clc
repnz
nop
cld
jae
add
add
add
clc
add
mov
inc
add
add
lock
jne
jmp
incl
add
add
xchg
cmp
add
add
mov
bound
mov
nop
leave
jmp
add
ret
push
clc
fadds
nop
nop
cld
jae
mov
pushf
xchg
mov
nop
leave
jmp
mov
aam
and
mov
pop
push
mov
xchg
ret
add
repz
add
rolb
add
adc
clc
repnz
nop
cld
jae
add
into
add
pop
add
push
mov
xchg
ret
xor
lods
add
add
sahf
mov
push
mov
nop
leave
jmp
add
in
in
add
cltd
push
push
mov
nop
leave
jmp
pushf
adc
add
into
repz
mov
clc
repnz
nop
cld
jae
add
into
mov
clc
repnz
nop
cld
jae
repz
pushf
xchg
imul
clc
repnz
nop
cld
jae
or
clc
inc
xchg
add
jne
clc
repnz
nop
cld
jae
pushf
add
test
in
inc
add
mov
xchg
xor
adc
add
add
add
repnz
nop
cld
jae
jle
adc
mov
clc
repnz
nop
cld
jae
add
add
fstpl
mov
xchg
ret
call
add
subl
clc
repnz
nop
cld
jae
stc
add
fiadds
dec
outsl
popa
fs
repnz
nop
cld
jae
xchg
rep
add
push
mov
nop
leave
jmp
add
add
lods
add
add
jmp
incl
ret
add
mov
add
mov
imul
nop
leave
jmp
push
into
add
cmpsl
add
add
leave
je
clc
repnz
nop
cld
jae
clc
dec
add
mov
push
mov
xchg
ret
push
add
add
in
clc
repnz
nop
cld
jae
xchg
adc
pop
mov
clc
repnz
nop
cld
jae
in
imul
aam
ret
clc
repnz
nop
cld
jae
clc
add
add
add
push
cmp
nop
leave
jmp
xchg
add
sbb
clc
repnz
nop
cld
jae
add
add
or
push
or
add
clc
repnz
nop
cld
jae
clc
add
add
push
clc
repnz
nop
cld
jae
push
add
imul
add
addb
add
repnz
nop
cld
jae
add
add
mov
aad
fimuls
nop
nop
cld
jae
in
add
cmpsl
add
or
inc
add
pushf
add
mov
mov
mov
clc
repnz
nop
cld
jae
cmp
add
mov
sub
repnz
nop
cld
jae
add
xchg
aam
call
add
push
push
mov
xchg
ret
add
cmpsl
add
jle
lock
arpl
push
mov
add
add
add
pop
add
ret
push
mov
nop
leave
jmp
add
bound
adc
mov
xchg
ret
add
call
into
incl
add
mov
mov
mov
push
mov
xchg
ret
jae
push
mov
pushf
mov
mov
shl
clc
repnz
nop
cld
jae
mov
adc
push
mov
xchg
ret
add
xchg
or
incl
out
add
clc
repnz
nop
cld
jae
or
add
jle
andl
mov
in
nop
leave
jmp
add
pop
cmpsl
into
mov
clc
repnz
nop
cld
jae
add
add
pushf
lods
pop
push
mov
nop
leave
jmp
aaa
pushl
add
add
add
repnz
nop
cld
jae
stc
add
add
add
ljmp
add
repnz
nop
cld
jae
add
dec
mov
mov
xchg
ret
add
imul
cmp
jnp
test
in
call
in
nop
leave
jmp
push
aam
add
push
push
mov
xchg
ret
cmpsl
in
fiadds
mov
pushf
repz
xor
push
mov
xchg
ret
add
data16
into
push
push
mov
xchg
ret
cmpsl
push
adc
add
mov
mov
push
mov
xchg
ret
call
dec
jmp
add
je
jne
clc
repnz
nop
cld
jae
push
cmp
mov
nop
nop
cld
jae
push
add
add
pop
movsb
jp
or
clc
repnz
nop
cld
jae
or
cmp
add
xor
repnz
nop
cld
jae
adc
add
movswl
clc
repnz
nop
cld
jae
add
add
dec
mov
push
mov
nop
leave
jmp
lods
mov
adc
pop
jae
repnz
nop
cld
jae
add
sbb
data16
mov
adc
repnz
nop
cld
jae
add
shlb
clc
repnz
nop
cld
jae
pushf
mov
ret
pop
add
addb
clc
repnz
nop
cld
jae
mov
add
add
dec
push
mov
xchg
ret
add
add
sbb
aaa
add
sbb
nop
leave
jmp
add
add
add
pusha
push
mov
nop
leave
jmp
stc
add
clc
add
bound
loope
rep
push
mov
nop
leave
jmp
or
add
add
mov
jmp
add
push
data16
add
pop
bound
add
pop
push
mov
nop
leave
jmp
add
pop
add
xchg
mov
add
nop
nop
cld
jae
or
pushf
push
add
stc
cmp
movsb
clc
repnz
nop
cld
jae
add
add
outsb
add
clc
repnz
nop
cld
jae
clc
push
add
pop
clc
repnz
nop
cld
jae
xchg
add
or
popa
add
repnz
nop
cld
jae
add
add
add
jmp
jne
clc
repnz
nop
cld
jae
repz
pushf
add
mov
clc
repnz
nop
cld
jae
in
adc
dec
add
mov
nop
leave
jmp
add
add
pushl
clc
repnz
nop
cld
jae
adc
add
in
push
mov
adcb
mov
pop
jp
fdivrl
push
sub
in
nop
leave
jmp
add
rolb
add
adc
fsubrs
cld
jae
add
add
xor
mov
add
repnz
nop
cld
jae
add
sbb
cmp
in
nop
leave
jmp
push
add
add
ret
scas
add
clc
repnz
nop
cld
jae
or
or
clc
repnz
nop
cld
jae
add
rol
push
mov
xchg
ret
push
fisubrs
mov
push
push
mov
xchg
ret
mov
cmpsl
add
leave
push
clc
repnz
nop
cld
jae
lcall
xchg
mov
nop
nop
cld
jae
add
repz
jae
cli
add
clc
repnz
nop
cld
jae
inc
add
add
and
mov
jne,pt
clc
repnz
nop
cld
jae
xchg
add
nop
nop
cld
jae
repz
push
add
ret
imul
shr
clc
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
xchg
add
lods
add
add
call
repnz
nop
cld
jae
inc
xchg
add
add
adc
leave
jmp
mov
pushf
add
xor
push
mov
xchg
ret
add
add
dec
push
push
mov
xchg
ret
rcrb
add
adc
repnz
nop
cld
jae
pushl
push
ljmp
ret
add
pop
fildl
xchg
ret
add
fs
push
mov
nop
leave
jmp
adc
add
push
add
mov
clc
repnz
nop
cld
jae
add
shrb
jae
incl
mov
inc
aaa
jns
mov
clc
repnz
nop
cld
jae
adc
sti
mov
push
mov
nop
leave
jmp
pop
add
add
mov
dec
cmp
push
mov
nop
leave
jmp
add
lock
pushl
clc
repnz
nop
cld
jae
lock
rep
clc
repnz
nop
cld
jae
inc
push
mov
cmp
add
clc
repnz
nop
cld
jae
add
push
mulb
test
repnz
nop
cld
jae
aam
add
xlat
jmp
nop
nop
cld
jae
add
inc
cmpsl
jle
push
pop
pop
popa
clc
repnz
nop
cld
jae
lock
push
add
add
repnz
nop
cld
jae
add
push
add
mov
lock
push
mov
xchg
ret
cmp
lods
jle
add
les
add
add
repnz
nop
cld
jae
cmp
push
loopne
mov
clc
repnz
nop
cld
jae
in
add
add
mov
xor
add
clc
repnz
nop
cld
jae
mov
ret
push
mov
xchg
ret
add
mov
or
clc
repnz
nop
cld
jae
add
dec
push
mov
nop
leave
jmp
add
repz
add
addb
adc
mov
xchg
ret
in
add
add
xchg
stc
push
clc
clc
repnz
nop
cld
jae
add
pop
push
mov
adc
mov
dec
adc
mov
xchg
ret
pushf
inc
mov
jae
pop
push
mov
xchg
ret
aaa
add
repz
add
aaa
dec
and
push
mov
nop
leave
jmp
jle
add
push
push
mov
xchg
ret
jmp
add
add
sarb
add
xor
hlt
inc
add
nop
nop
cld
jae
add
add
inc
and
imul
clc
repnz
nop
cld
jae
push
add
incl
fmuls
repnz
nop
cld
jae
data16
adc
lds
add
push
mov
xchg
ret
push
add
inc
add
es
nop
nop
cld
jae
add
imul
in
cmpl
push
mov
xchg
ret
xchg
add
incl
adc
sub
repnz
nop
cld
jae
adc
inc
fs
add
mov
repz
repnz
nop
cld
jae
add
add
add
movsb
clc
repnz
nop
cld
jae
pushf
push
add
dec
out
push
clc
repnz
nop
cld
jae
add
aam
add
inc
ss
pop
clc
repnz
nop
cld
jae
aam
in
add
push
add
push
mov
nop
leave
jmp
lock
xchg
push
jle
clc
repnz
nop
cld
jae
pushl
bound
aaa
sub
pop
and
out
add
push
add
xchg
aam
add
stc
pop
sub
clc
repnz
nop
cld
jae
add
add
mov
mov
nop
leave
jmp
mov
stc
dec
add
xchg
jg
add
in
inc
add
add
call
add
xchg
jmp
add
or
pop
add
add
add
push
add
push
mov
xchg
ret
add
add
mov
or
and
clc
repnz
nop
cld
jae
add
inc
rolb
pop
adc
mov
les
mov
xchg
ret
or
add
and
clc
repnz
nop
cld
jae
add
push
add
adc
lock
add
add
mov
xchg
out
inc
add
add
add
push
xchg
add
cmp
in
nop
leave
jmp
add
mov
repz
pop
push
mov
xchg
ret
cmpsl
in
add
mov
aas
mov
push
mov
xchg
ret
add
add
nop
add
push
mov
xchg
ret
add
incl
jb
clc
repnz
nop
cld
jae
repz
bound
test
clc
repnz
nop
cld
jae
add
or
pop
out
lcall
add
add
aam
fiadds
nop
add
clc
repnz
nop
cld
jae
rorb
clc
push
fstl
repnz
nop
cld
jae
add
push
add
les
mov
xchg
ret
add
add
in
xchg
add
nop
nop
cld
jae
xchg
or
fiadds
lods
repz
mov
xchg
ret
add
mov
xor
pushf
mov
outsb
push
mov
add
add
add
cmp
pop
add
sbb
hlt
clc
repnz
nop
cld
jae
add
add
cld
pop
clc
repnz
nop
cld
jae
sbb
add
push
add
repnz
nop
cld
jae
add
add
incl
in
cmc
sbb
nop
cld
jae
cmp
add
sbb
xchg
add
clc
repnz
nop
cld
jae
ljmp
push
xchg
add
and
clc
repnz
nop
cld
jae
add
data16
and
jmp
nop
cld
jae
add
into
push
and
test
cmc
clc
repnz
nop
cld
jae
aam
push
xchg
pop
mov
push
mov
xchg
ret
add
xor
cmpsl
add
sub
in
nop
leave
jmp
add
xchg
add
push
clc
repnz
nop
cld
jae
add
in
push
fidivs
stos
push
mov
xchg
ret
add
inc
clc
mov
mov
clc
repnz
nop
cld
jae
push
ret
xor
xor
pushf
dec
push
mov
add
dec
dec
lret
add
filds
add
add
test
mov
addl
sub
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
inc
or
adc
mov
push
clc
repnz
nop
cld
jae
or
pop
pop
push
add
xchg
into
push
jmp
incl
pushf
add
add
add
mov
jl
arpl
clc
repnz
nop
cld
jae
cmp
add
mov
mov
inc
push
mov
nop
leave
jmp
dec
jle
push
sbb
mov
nop
leave
jmp
cmpsl
fiadds
jmp
add
inc
cltd
push
mov
jle
add
movsb
and
hlt
rolb
add
add
in
add
add
imul
add
add
scas
xor
clc
repnz
nop
cld
jae
data16
repz
clc
jmp
push
mov
xchg
ret
into
add
add
clc
xchg
add
test
push
push
mov
nop
leave
jmp
mov
push
add
adcl
nop
nop
cld
jae
add
je,pt
clc
repnz
nop
cld
jae
cmpsl
add
pop
sub
clc
repnz
nop
cld
jae
add
add
rcll
repnz
nop
cld
jae
add
mov
jmp
nop
cld
jae
repz
add
jo
push
mov
nop
leave
jmp
add
pushf
clc
push
push
clc
push
clc
repnz
nop
cld
jae
mov
or
repz
add
call
lcall
add
add
add
add
outsb
mov
push
mov
nop
leave
jmp
add
mov
aam
mov
sub
add
pusha
repz
add
aam
add
adc
lret
clc
repnz
nop
cld
jae
add
lods
pop
mov
clc
repnz
nop
cld
jae
aam
add
add
incb
in
nop
leave
jmp
add
add
sbb
nop
add
cmc
jmp
add
push
add
mov
push
mov
xchg
ret
in
add
add
repz
pusha
push
mov
nop
leave
jmp
rclb
add
add
repz
pop
clc
repnz
nop
cld
jae
add
rolb
add
add
mov
push
mov
nop
leave
jmp
repz
add
out
out
clc
clc
repnz
nop
cld
jae
add
pop
fiadds
mov
test
clc
repnz
nop
cld
jae
xchg
inc
xor
lea
clc
repnz
nop
cld
jae
push
push
into
mov
xor
movzwl
clc
repnz
nop
cld
jae
incl
add
data16
lret
in
nop
leave
jmp
repz
add
add
add
add
repnz
nop
cld
jae
or
cmpsl
push
add
out
mov
push
mov
nop
leave
jmp
add
add
add
sahf
xor
clc
repnz
nop
cld
jae
mov
adc
test
popa
clc
repnz
nop
cld
jae
or
add
into
mov
pop
clc
repnz
nop
cld
jae
imul
stc
sbb
xchg
repz
add
add
add
add
in
pop
push
jmp
add
add
push
add
shll
rolb
mov
fildl
xchg
ret
pop
add
pushf
inc
lock
add
fadds
add
in
nop
leave
jmp
cmp
repz
sub
repnz
nop
cld
jae
repz
add
push
push
mov
xchg
ret
add
add
add
mov
add
push
mov
xchg
ret
inc
add
add
or
mov
xchg
ret
aam
mov
incl
or
in
nop
leave
jmp
add
stc
add
push
add
sahf
imul
clc
repnz
nop
cld
jae
into
fs
add
movsl
sbb
jns
clc
repnz
nop
cld
jae
sbb
add
mov
call
clc
repnz
nop
cld
jae
lods
add
cmpl
cld
jae
xchg
repz
cmp
repnz
nop
cld
jae
push
repz
data16
add
mov
jmp
add
repnz
nop
cld
jae
jae
add
add
add
jmp
add
sbb
add
repz
fs
sbb
add
clc
repnz
nop
cld
jae
add
inc
add
add
inc
add
pop
add
add
mov
call
in
nop
leave
jmp
in
add
cmp
clc
repnz
nop
cld
jae
add
add
sub
in
nop
leave
jmp
add
repz
push
out
mov
clc
repnz
nop
cld
jae
add
clc
mov
in
nop
leave
jmp
imul
aaa
mov
add
jae
cmp
push
mov
nop
leave
jmp
cmpsl
add
add
mov
popf
push
mov
nop
leave
jmp
aam
add
mov
push
clc
repnz
nop
cld
jae
mov
or
add
add
add
push
mov
xchg
ret
mov
add
jbe
xchg
add
cmp
inc
add
add
push
add
pop
push
aaa
mov
add
mov
xchg
ret
add
add
cmpsl
ret
jae
adc
mov
repnz
nop
cld
jae
clc
mov
imul
movzwl
clc
repnz
nop
cld
jae
add
in
push
push
mov
xchg
ret
add
or
add
repnz
nop
cld
jae
push
add
dec
mov
clc
repnz
nop
cld
jae
pushl
add
aaa
stos
push
push
mov
xchg
ret
add
xor
nop
add
repnz
nop
cld
jae
add
push
repz
rolb
mov
clc
repnz
nop
cld
jae
add
jbe
mov
clc
repnz
nop
cld
jae
add
jae
lcall
clc
inc
add
adc
add
add
mov
nop
leave
jmp
incl
add
lods
add
decl
clc
repnz
nop
cld
jae
push
aaa
add
data16
push
push
mov
nop
leave
jmp
add
push
add
repz
xchg
repnz
nop
cld
jae
or
add
push
stc
add
push
add
fiaddl
nop
nop
cld
jae
add
add
sbb
testl
out
gs
mov
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
add
repz
mov
xchg
ret
add
add
add
add
movb
repnz
nop
cld
jae
add
into
xchg
lock
nop
cld
jae
add
or
jno
add
inc
testb
dec
mov
aas
mov
add
jbe
clc
repnz
nop
cld
jae
pop
add
clc
add
std
call
push
mov
nop
leave
jmp
pop
adc
je
clc
repnz
nop
cld
jae
add
push
push
mov
push
mov
nop
leave
jmp
mov
add
mov
clc
repnz
nop
cld
jae
add
add
incl
jbe
mov
clc
repnz
nop
cld
jae
add
add
add
mov
int
add
jae
add
jmp
push
push
jmp
call
data16
clc
or
add
add
data16
mov
xchg
ret
pushl
fisubrs
or
xchg
out
xchg
push
mov
xchg
ret
pushf
add
add
aam
mov
lcall
nop
cld
jae
add
add
popa
clc
repnz
nop
cld
jae
add
cmp
add
pop
cmp
nop
cld
jae
mov
shl
mov
outsl
push
clc
repnz
nop
cld
jae
jle
add
push
push
repz
mov
clc
repnz
nop
cld
jae
add
jl
clc
repnz
nop
cld
jae
add
dec
mov
clc
repnz
nop
cld
jae
inc
add
jle
or
stc
jmp
rolb
mov
lods
or
inc
add
incl
mov
popa
test
pushf
add
push
mov
nop
leave
jmp
bound
stc
add
adc
push
mov
nop
leave
jmp
or
add
xchg
inc
sub
xor
add
clc
repnz
nop
cld
jae
mov
push
push
mov
xchg
ret
into
imul
in
xchg
fs
push
fisttpll
nop
nop
cld
jae
xchg
adc
dec
jmp
add
or
add
lods
into
lods
add
push
push
add
stos
sub
sub
add
jle
dec
mov
and
push
push
mov
xchg
ret
sbb
add
add
add
int3
push
clc
repnz
nop
cld
jae
incl
add
scas
rep
clc
repnz
nop
cld
jae
add
clc
add
add
jne
push
mov
xchg
ret
repz
data16
adc
mov
mov
clc
repnz
nop
cld
jae
add
cmpsl
mov
dec
rep
push
mov
xchg
ret
push
add
imul
inc
testb
nop
leave
jmp
data16
or
xchg
or
in
nop
leave
jmp
adc
add
or
nop
cld
jae
or
adc
add
je
ret
scas
jne
clc
repnz
nop
cld
jae
add
jmp
add
jae
push
add
repz
stc
add
outsl
sub
push
mov
nop
leave
jmp
add
clc
xor
push
mov
xchg
ret
add
pushf
clc
push
add
add
push
mov
nop
leave
jmp
add
add
movzwl
push
mov
nop
leave
jmp
push
sbb
add
add
repnz
nop
cld
jae
adc
add
or
in
nop
leave
jmp
mov
lods
cmp
xlat
leave
inc
add
jmp
aaa
mov
mov
clc
repnz
nop
cld
jae
jmp
add
imul
adc
loopne
mov
mov
xchg
ret
add
adc
data16
push
push
mov
mov
add
lods
mov
inc
jae
cmpsl
dec
xchg
clc
repnz
nop
cld
jae
add
add
push
mov
das
add
cwtl
mov
pop
movb
add
movsl
sbb
clc
repnz
nop
cld
jae
xchg
add
fiadds
add
push
jl
add
xor
inc
add
pop
add
lods
push
add
mov
mov
xchg
ret
add
add
add
push
enter
clc
repnz
nop
cld
jae
mov
add
lods
aas
push
clc
repnz
nop
cld
jae
or
add
je
clc
repnz
nop
cld
jae
mov
add
sub
fiadds
xchg
ret
add
mov
push
mov
push
mov
xchg
ret
push
push
inc
add
add
xchg
add
mov
clc
repnz
nop
cld
jae
push
cmpsl
add
push
fs
add
jbe
clc
repnz
nop
cld
jae
cmp
add
add
add
clc
repnz
nop
cld
jae
add
inc
xor
imul
clc
repnz
nop
cld
jae
push
add
add
push
js
clc
repnz
nop
cld
jae
repz
dec
mov
jmp
add
add
adc
add
add
repnz
nop
cld
jae
xor
or
add
jns
add
add
add
mov
add
add
or
lret
clc
repnz
nop
cld
jae
shrb
rdtsc
add
push
mov
xchg
ret
mov
sarb
call
clc
repnz
nop
cld
jae
add
dec
cmp
repnz
nop
cld
jae
add
add
fs
pop
add
add
repnz
nop
cld
jae
repz
adc
cwtl
add
mov
xor
pop
out
add
outsb
call
clc
repnz
nop
cld
jae
add
add
xabort
nop
nop
cld
jae
add
or
add
rolb
push
add
push
mov
xchg
ret
mov
push
adc
mov
clc
repnz
nop
cld
jae
cmpsl
add
add
push
jg
cwtl
sub
add
repnz
nop
cld
jae
xor
incl
pop
push
mov
or
add
add
add
enter
add
inc
push
add
in
nop
leave
jmp
jmp
in
xor
push
or
mov
xchg
ret
add
xchg
add
bound
dec
clc
dec
inc
clc
repnz
nop
cld
jae
add
lock
mov
lret
mov
clc
repnz
nop
cld
jae
mov
mov
nop
leave
jmp
xchg
add
mov
cmp
mov
nop
leave
jmp
repz
add
add
inc
dec
xor
push
mov
xchg
ret
add
add
xchg
pushf
cmpsl
add
clc
repnz
nop
cld
jae
add
ficomps
in
add
mov
nop
leave
jmp
xchg
add
add
add
add
add
push
mov
xchg
ret
add
adc
out
and
clc
repnz
nop
cld
jae
add
add
pushf
nop
add
repnz
nop
cld
jae
adc
push
stc
jae
or
jno
outsb
mov
push
mov
xchg
ret
push
add
aaa
incl
push
inc
add
mov
mov
nop
leave
jmp
add
add
mov
add
repnz
nop
cld
jae
add
cmp
stc
ljmp
mov
aas
add
add
rcrb
push
stc
aam
stc
lock
add
leave
jmp
add
add
addb
push
clc
repnz
nop
cld
jae
pushf
repz
inc
int3
xor
push
mov
xchg
ret
cmpsl
xchg
add
add
and
mov
add
popf
add
repz
movsl
stos
hlt
sub
js
adc
mov
outsl
push
and
mov
out
or
mov
push
push
test
mov
or
icebp
dec
incb
in
jg
mov
mov
pop
loop
mov
add
and
xor
cmp
mov
cs
mov
pop
mov
pushf
cmpsl
imul
fsubr
mov
and
mov
lahf
adc
mov
int
or
mov
push
std
pusha
add
jb
mov
push
cmp
in
or
mov
add
fwait
mov
pop
xor
rolb
mov
xor
mov
adc
mov
jg
add
ficoml
cmp
iret
ja
fs
cltd
mov
xor
or
and
mov
int
js
cmc
push
js
mov
fimuls
inc
jl
add
xor
jle
fwait
inc
pop
lret
lods
xor
in
in
or
pop
test
fadds
or
pusha
add
scas
jmp
add
inc
lcall
adc
mov
dec
pop
pusha
add
jl
push
cs
fldt
add
inc
add
add
mov
mov
inc
adc
mov
aad
js
imul
stc
pusha
add
addb
or
test
out
jg
add
inc
add
out
add
call
mov
add
stos
div
pop
test
dec
push
and
xlat
roll
mov
mov
es
pop
imul
add
mov
mov
mov
add
aad
xor
mov
jb
mov
push
in
or
jae
push
mov
gs
and
add
xchg
rolb
mov
push
mov
add
fsts
scas
movsb
lds
outsb
mov
and
cmp
mov
add
pop
lcall
decb
lods
aad
adc
xor
mov
pop
divl
mov
mov
push
push
xchg
scas
or
repz
cs
lds
sbb
mov
lds
sub
mov
cmp
add
inc
inc
ds
lods
dec
add
call
or
xorl
and
cld
dec
dec
cmp
adc
sbb
xchg
insb
addb
negb
rolb
or
add
add
jns
add
inc
jnp
push
je
add
in
outsl
mov
addr16
mov
xchg
dec
push
addb
and
inc
push
add
outsl
dec
or
add
lahf
mov
mov
ret
cld
les
add
mov
call
push
add
rolb
mov
cmp
test
mov
push
subl
js
and
mov
lahf
ficompl
pop
dec
or
les
inc
cmp
dec
testl
cmp
inc
dec
rcl
add
add
lods
imul
mov
clc
push
cmpl
or
push
sub
popf
loopne
mov
xor
adc
pop
add
outsb
adc
mov
push
incl
mov
fbstp
adc
mov
mov
mov
les
mov
lds
add
imul
add
mov
pop
mov
sbb
cmpxchg
ret
push
add
in
inc
ficoms
mov
add
push
and
mov
dec
mov
mov
sbb
push
xlat
cmpsl
adc
pop
xchg
mov
fcompl
mov
dec
and
mov
int
sub
ret
mov
les
fwait
add
jecxz
xor
mov
sub
inc
add
mov
sbb
or
add
and
xlat
mov
into
jno
ds
mov
or
test
inc
xor
mov
mov
daa
ljmp
cmp
and
add
rolb
mov
mov
imul
repz
inc
fimuls
frstor
mov
mov
inc
insl
mov
fsubl
mov
mov
pop
rcll
mov
mov
pop
pop
mov
add
ret
inc
and
mov
ret
int3
pushl
mov
leave
aas
adcl
sub
adc
mov
add
mov
mov
pop
cmc
daa
mov
cs
add
jmp
das
insl
cmp
data16
cmpsb
mov
loope
push
add
add
js
add
mov
je
or
jbe
fimull
shll
mov
in
mov
push
add
add
rolb
push
pop
xchg
movlps
pop
and
mov
add
jge
push
testl
cs
add
fildll
bound
mov
push
xlat
add
mov
cmp
ds
mov
and
add
sbb
lcall
leave
mov
mov
sub
cld
jne
stos
push
add
mov
mov
inc
sub
cmp
push
add
mov
add
add
mov
pop
jb
mov
les
mov
dec
test
add
ja
sub
cmpsl
pushf
lret
mov
xchg
or
inc
mov
mov
lahf
ror
push
enter
pop
addb
mov
xchg
add
ret
jg
add
mov
nop
add
cmp
hlt
mov
mov
adc
mov
scas
sub
iret
je
pop
fcmovb
xchg
mov
mov
je
cld
jl
add
insb
outsb
xchg
scas
push
lds
rcll
add
lret
bound
mov
sbb
scas
jnp
fcoml
lods
sub
mov
mov
jmp
or
inc
sbb
loope
rolb
mov
pop
aaa
test
push
add
add
loope
fstpl
jbe
mov
sbb
add
jle
jns
add
mov
mov
pop
aaa
cmp
mov
out
addb
xor
jmp
fcmovnu
jg
mov
ljmp
clc
jmp
add
add
data16
cmp
out
sub
dec
cmp
cwtl
into
dec
jle
mov
mov
lret
pop
push
cmpsb
inc
mov
imul
jge
jb
mov
dec
mov
mov
pop
fwait
hlt
scas
cmc
adc
mov
loopne
mov
inc
add
mov
jge
or
imulb
pop
hlt
daa
jno
imul
xchg
add
lret
dec
and
mov
mov
xor
jmp
sbb
adc
loop
mov
push
add
xor
dec
int
sbb
nop
add
fisubs
stos
sub
add
sbb
add
mov
push
sbb
repz
rolb
mov
add
add
int
mov
xor
adc
mov
add
add
lock
sub
jg
add
mov
push
loop
mov
mov
add
sarl
add
add
rolb
mov
adc
sbb
mov
add
and
aas
out
imul
mov
and
mov
or
push
add
lock
mov
stos
pop
jne
mov
inc
add
add
aas
add
add
dec
enter
jmp
inc
popa
add
aam
dec
xchg
add
add
dec
xchg
pusha
add
xor
push
mov
mov
add
cwtl
adc
push
and
mov
add
roll
adc
mov
xor
add
inc
pop
cmpsb
fsubs
shll
test
or
mov
add
ljmp
add
mov
mov
push
add
ret
or
mov
fnstcw
add
nop
add
out
pop
xchg
les
mov
aam
jl
jns
jp
push
jbe
rcl
cltd
pop
jnp
mov
or
sbb
addb
je
je
rolb
mov
add
and
pop
out
test
std
fsubs
stc
cmp
iret
mov
icebp
aad
add
mov
inc
inc
cmp
push
add
cmp
push
add
cmp
mov
xchg
jnp
test
outsl
inc
add
in
mov
ds
adc
xchg
movsb
iret
push
fdivl
add
adc
rolb
cmp
and
mov
mov
adc
mov
pop
das
lcall
dec
pop
fst
dec
cmp
outsb
sub
mov
cmp
mov
mov
inc
out
mov
lret
sbb
jne
or
push
addl
add
pop
sbb
mov
pop
iret
enter
and
add
out
mov
repz
sbb
sub
rolb
in
xchg
mov
dec
mov
scas
in
int
aas
lret
fldcw
mov
fistps
jmp
cmp
sbb
mov
add
pusha
add
xchg
lock
test
add
fsin
mov
add
rolb
mov
je
cmp
xor
cmpsb
fcoml
add
sahf
mov
cmp
mov
mov
mov
add
insl
push
adc
mov
scas
cmp
sbb
add
push
sbb
ret
sahf
fildll
fxtract
inc
add
test
dec
sub
nop
add
sub
mov
iret
push
loope
add
cmp
outsb
outsl
je
notb
xchg
repz
insl
xor
mov
cmpsl
jge
rolb
mov
lock
mov
add
mov
hlt
mov
mov
jbe
cs
add
sbb
inc
add
lahf
xlat
add
mov
xchg
test
mov
insl
lret
dec
add
mov
mov
mov
jmp
mov
or
fwait
mull
repnz
cli
push
add
cld
scas
add
in
movsl
inc
add
mov
add
cli
pushl
and
mov
jge
and
sub
out
mov
mov
mov
nop
add
add
fnstcw
xchg
adc
mov
add
add
xchg
add
and
mov
inc
xor
mov
inc
add
or
sbb
add
jno
add
mov
mov
xchg
or
jecxz
add
add
sub
jmp
inc
data16
ret
jecxz
insl
mov
pusha
add
mov
add
icebp
add
mov
xchg
or
pop
mov
adc
and
mov
rolb
mov
repnz
inc
mov
scas
cmpsl
mov
xchg
popa
repnz
out
pop
cmp
mov
pushf
cmp
push
push
mov
scas
das
scas
frstor
mov
inc
pushf
loopne
mov
pshufw
and
mov
sub
xchg
rolb
mov
rcll
push
mov
add
push
add
or
mov
ss
jae
xor
std
push
pusha
add
inc
leave
jno
cmp
mov
neg
push
mov
mov
mov
mov
mov
add
test
lcall
add
mov
fnstcw
cmpsl
loope
jo
mov
fdivl
ja
imulb
cmc
sub
add
inc
add
push
rcrl
add
pop
push
add
mov
inc
mov
and
insl
dec
iret
xor
cmp
xchg
or
rolb
inc
xchg
mov
mov
je
imul
pop
cmpl
adc
addr16
mov
mov
add
addb
pushf
shl
push
jecxz
jns
icebp
cs
adc
dec
pop
push
or
and
cmp
rolb
mov
inc
pop
jo
mov
fisttpl
pushf
lret
adc
addr16
ret
ljmp
sbb
mov
sti
sbb
mov
out
mov
dec
xchg
std
add
mov
cli
sbb
scas
xor
mov
mov
add
dec
pusha
add
mov
ret
push
repz
mov
push
aas
enter
insl
cwtl
test
repnz
dec
xor
repnz
jb
mov
cli
xor
gs
add
mov
std
xchg
repz
mov
xor
cmpl
mov
sbb
sub
cmc
imul
call
or
idivb
js
ss
inc
jmp
adc
insb
mov
cwtl
sub
iret
divl
cmp
into
jecxz
pusha
add
dec
pop
lds
jle
sbb
test
adc
mov
jbe
add
rolb
mov
sbb
add
push
cmp
add
mov
int
mov
mov
mov
push
lahf
sbb
roll
sti
mov
pop
mov
mov
mov
mov
cmp
pop
rcrl
sbb
mov
mov
xchg
jns
add
add
mov
and
movsl
xchg
shr
push
sti
fwait
sbb
cli
pop
loop
mov
jp
add
popf
subl
mov
cmp
in
mov
mov
lahf
push
mov
andl
add
mov
adc
mov
fists
xchg
jp
jns
rol
or
push
or
add
stos
push
mov
stos
stos
test
jne
mov
daa
jns
sbb
sub
inc
xor
adc
add
mov
mov
cwtl
fadd
add
and
mov
cwtl
jbe
stos
dec
cmp
insl
push
insl
push
hlt
ds
mull
cmp
xor
xlat
push
adc
mov
add
incl
je
sbb
adc
mov
push
sub
jno
xor
mov
test
ret
mulb
sbb
negb
mov
cmp
daa
xor
out
jle
and
mov
push
add
xor
dec
ds
outsb
imul
mul
add
ficoms
push
add
mov
add
mov
rolb
dec
jg
mov
add
mov
mov
jle
pop
or
ret
adc
mov
add
sbb
mov
jnp
stc
push
jmp
add
je
adc
fucomi
jbe
pop
cmp
add
xor
add
andl
je
add
dec
sbb
fnstenv
add
mov
mov
filds
cmp
mov
adc
test
iret
sti
mov
and
mov
mov
add
mov
mov
rorl
jge
add
xor
gs
mov
mov
in
insb
push
rolb
data16
jecxz
jb
mov
push
rolb
mov
push
push
mov
cmp
clc
lds
test
jae
mov
cwtl
insb
arpl
or
add
jp
push
push
pop
mov
mov
add
and
adc
mov
inc
add
addb
xor
mov
add
push
add
xchg
mov
pop
ret
mov
xor
aad
xchg
push
ljmp
lea
lcall
mov
mov
mov
and
mov
inc
xchg
jmp
dec
jl
add
lret
push
je
add
and
mov
xor
lahf
lea
pop
stc
xor
mov
add
jo
mov
inc
cmp
mov
xchg
in
add
out
adc
mov
in
xlat
faddl
mov
add
sarl
in
in
std
stos
loopne
mov
mov
add
fmull
mov
add
fwait
es
lods
movsb
adc
ds
jne
mov
add
add
mov
pop
and
mov
leave
jbe
mov
mov
pop
and
mov
std
inc
add
jmp
xor
add
jmp
xor
mov
insb
push
xor
mov
test
adc
pushf
repnz
push
int
or
pop
xchg
dec
mov
repz
lock
cmp
inc
rcll
cmp
ja
add
daa
scas
aam
add
mov
xchg
add
pop
subl
call
les
add
sub
mov
xor
mov
xor
add
xchg
sbb
int3
movsb
or
mov
enter
mov
in
fwait
mov
leave
movzwl
addb
lret
push
inc
add
sbb
jnp
sbb
lods
cmpsl
jno
add
mov
jle
add
xchg
sbb
les
lret
cmp
in
aas
pusha
add
out
das
shll
mov
mov
sub
inc
cmp
xor
sub
ljmp
add
lret
mov
mov
jns
and
fld
jb
mov
cli
adc
js
fwait
rolb
push
lret
dec
pop
pop
xor
mov
loope
out
dec
ljmp
call
or
dec
es
jg
imul
push
add
mov
stc
movsb
mov
sub
out
inc
sub
mov
clc
pop
add
inc
xchg
rolb
mov
stos
test
adc
mov
add
add
add
lods
lret
pop
or
mov
lret
push
sbb
lods
ds
mov
mov
jl
or
jp
lods
data16
arpl
and
out
xchg
inc
fs
xor
mov
inc
add
fadd
add
negb
out
sti
inc
mov
mov
add
cltd
or
lods
cmp
mov
and
mov
movsb
inc
adc
mov
add
adc
mov
movswl
add
push
add
and
mov
push
or
xor
add
dec
fidivl
add
bound
mov
jge
lea
mov
or
push
and
inc
imul
push
out
pop
sahf
xor
inc
add
mov
pop
imul
ja
arpl
pop
dec
mov
add
aaa
mov
xchg
cwtl
inc
test
add
add
ficoml
adc
mov
cld
bound
mov
sub
push
dec
mov
lret
outsl
inc
das
push
cmp
push
stos
jg
and
mov
add
add
frstor
das
cmp
fistl
add
add
adc
fidivl
andl
add
mov
mov
loope
add
inc
push
rolb
mov
inc
add
cmpsl
xchg
dec
mov
addb
add
hlt
test
rolb
mov
mov
jp
add
lret
and
mov
int3
mov
addb
ds
movsl
sahf
cmp
push
in
mov
inc
mov
jb
mov
call
and
xor
mov
adc
jo
mov
add
fdivs
test
lock
mov
stos
addb
test
add
mov
mov
adc
jge
movsb
sub
add
jae
popa
mov
sahf
and
mov
ljmp
mov
pusha
add
cld
negl
cmp
adc
loope
cmp
add
test
addb
cmp
xchg
test
jbe
ljmp
dec
xor
mov
cmpsb
arpl
into
lea
stc
sbb
dec
ja
jecxz
add
movsb
std
adc
mov
add
push
out
mov
insl
push
xchg
int
add
subl
addb
icebp
inc
add
xchg
mov
mov
repz
push
repnz
cld
mov
jge
pop
in
sbb
add
sbb
cmc
inc
in
roll
xchg
add
mov
sbb
fdivs
add
test
ds
dec
jae
sbb
cltd
push
iret
les
add
xor
mov
add
pop
adc
mov
cmp
mov
mov
mov
add
lods
daa
jp
jmp
add
mov
sahf
fdiv
ret
std
mov
cmp
xor
scas
lcall
push
dec
lcall
pop
cmp
add
mov
inc
pop
ljmp
mov
mov
std
fistl
add
mov
lahf
mov
enter
inc
xchg
mov
lahf
add
mov
pop
xor
mov
inc
push
add
add
add
mov
mov
lds
popf
scas
mov
add
mov
repnz
fdivrs
std
sub
loope
decl
fistpll
sub
push
xlat
rolb
mov
push
or
mov
loop
mov
pop
clc
jg
mov
add
and
imul
mov
mov
mov
fstpl
ret
addb
mov
mov
dec
arpl
inc
add
imul
jp
mov
push
push
adc
mov
mov
ljmp
test
mov
xchg
adc
add
mov
xchg
or
icebp
mov
jae
insl
inc
add
mov
inc
lock
lock
repz
adc
mov
out
mov
or
add
fwait
push
sbb
dec
mov
dec
sbb
add
mov
stc
dec
mov
inc
pop
jge
cld
call
mov
cs
jl
and
mov
push
movsl
add
cs
jae
add
mov
rorl
stos
movsb
jl
loopne
mov
mov
test
add
mov
pusha
add
dec
lret
mov
push
loop
mov
cli
int
sub
loopne
mov
and
pusha
add
stos
xor
mov
add
cltd
rolb
mov
ret
mov
mov
inc
outsb
xor
incb
jnp,pn
cmpsl
xor
mov
add
movsl
inc
add
mov
xchg
cli
mov
loope
pop
cmp
push
arpl
rolb
mov
nopl
adc
mov
loopne
mov
xor
adc
mov
push
add
cmp
out
add
mov
or
inc
sub
ja
add
mov
mov
inc
xor
mov
fstpl
repnz
lods
cmpsb
or
pop
pop
mov
aad
fisubs
mov
mov
sbb
add
lcall
mov
and
add
subl
add
add
addb
ljmp
lock
inc
aas
or
xor
pop
fisubrs
xor
mov
sti
shl
mov
adc
rolb
mov
ret
inc
add
jg
pusha
add
fildl
notb
mov
pop
sbb
mov
pushl
ja
push
pop
rolb
mov
aas
xor
cmc
icebp
fidivrs
mov
addb
sub
add
clc
sbb
test
add
mov
cmp
insb
pop
sub
aad
insb
jg
fwait
xor
pop
mov
mov
add
js
hlt
mov
test
xor
mov
hlt
jae
mov
fidivrl
mov
push
add
or
add
add
inc
mul
push
sbb
mov
addb
jg
or
stc
in
arpl
mov
adc
cmp
mov
mov
sub
dec
xchg
add
mov
imulb
mov
inc
popf
push
ja
adc
inc
movsb
sbb
add
add
pushf
or
pop
mov
paddsb
mov
add
fwait
cmp
pop
filds
lods
lods
fidivrl
mov
add
aam
dec
stc
shrl
ffreep
adc
mov
jb
mov
int3
ss
add
sub
or
test
adc
mov
add
add
ss
stos
lret
add
mov
int
mov
mov
add
mov
xor
mov
and
add
repnz
add
jl
fwait
xor
add
fisubrl
clc
stos
or
lods
fwait
mov
pop
cmp
jno
add
rcrl
dec
leave
push
add
xor
mov
add
mov
gs
fucomip
mov
jbe
adc
and
sahf
jno
mov
movsb
xor
test
test
add
sbb
add
rcr
xchg
inc
add
adc
mov
and
push
jns
lods
or
inc
rolb
mov
jg
push
add
add
stos
cmc
insl
xlat
add
mov
push
fwait
push
mov
out
pop
addb
stos
clc
and
push
fisubrs
lcall
pushf
cmpsl
sub
mov
mov
mov
sub
jbe
mov
fs
imul
add
xlat
sahf
ljmp
and
xor
push
add
add
sbb
aam
mov
jmp
mov
mov
jmp
and
mov
adc
mov
dec
mov
ficompl
fwait
lods
int3
lret
mov
xlat
sbb
lret
test
dec
in
mov
movsb
leave
popa
jl
insl
pushf
cmpsl
dec
and
mov
jns
mov
int3
icebp
push
mov
add
cwtl
into
adc
mov
stos
mov
or
add
gs
sti
adc
mov
push
mov
adc
dec
loopne
mov
and
lods
lret
je
mov
out
xor
mov
mov
push
add
sub
shl
add
add
lret
or
add
mov
add
addb
adc
mov
push
add
adc
fnstenvs
add
add
mov
add
repnz
movsb
ret
negl
roll
daa
mov
mov
pop
inc
jle
lds
add
add
addb
and
mov
in
lahf
leave
iret
sbb
xor
adc
cmp
notl
mov
fistps
scas
adc
add
lock
or
loope
add
dec
mov
gs
jg
push
addr16
sbb
icebp
sub
in
xlat
add
add
mov
jmp
add
sbb
loopne,pn
mov
mov
and
mov
dec
lods
add
add
mov
jg
cmp
adc
mov
imul
add
mov
data16
stos
add
fstpt
out
inc
mov
add
mov
lret
mov
ret
scas
outsl
movsb
test
fwait
inc
stc
xchg
mov
test
xchg
lock
jmp
xchg
add
mov
or
pop
dec
js
jne
sub
mov
mov
mov
pop
and
xchg
add
dec
push
pop
int
push
and
mov
xor
or
mov
add
ret
dec
inc
add
dec
dec
shll
std
dec
mov
push
inc
cmp
xchg
ljmp
mov
inc
cmpsb
push
add
add
mov
mov
and
mov
andl
popa
test
mov
addb
sub
and
push
add
ficompl
add
add
xchg
cli
mov
mov
into
sbb
cli
popf
xor
cmp
fs
xchg
add
add
movsl
stc
jg
add
daa
fisttpl
outsl
shr
sar
mov
adc
leave
adc
aad
push
mov
outsb
subl
cltd
nop
add
jns
add
xor
mov
mov
mov
insl
lds
jne
add
jecxz
leave
fwait
dec
test
ljmp
test
add
test
or
cmpsl
dec
mov
loope
push
push
aas
jp
pop
or
and
mov
push
mov
popf
in
inc
add
jae
xor
outsl
std
push
add
xchg
cmp
cmp
les
pop
frstor
add
mov
add
mov
in
adc
push
enter
add
push
push
shll
gs
mov
jmp
jge
dec
mov
mov
cmp
adc
fidivl
mov
pop
mov
pop
pop
jg
sub
jl
xlat
popa
push
pop
sbb
xchg
ret
mov
fnsave
add
insb
pop
clc
stos
sti
or
xchg
jmp
cltd
or
cmp
out
mov
jb
mov
imull
in
das
lahf
out
ds
insb
or
xor
mov
inc
repnz
pop
pop
adc
mov
jmp
push
add
and
mov
out
mov
pop
dec
mov
add
loop
mov
xchg
push
add
xor
mov
mov
add
mov
insb
sahf
sub
and
mov
out
or
or
push
lret
cmpsl
inc
jle
stos
ljmp
add
pop
movsb
and
mov
out
lods
add
xor
dec
mov
mov
dec
pop
adc
inc
add
add
aaa
fs
and
push
int
lods
fsubl
xor
and
ljmp
jmp
jl
das
rcll
add
test
mov
adc
add
jne
add
popa
subl
ret
pushf
rolb
mov
jns
sbb
add
push
dec
rolb
addb
int
repnz
out
and
mov
add
push
xchg
ret
dec
icebp
adc
push
add
les
rolb
mov
add
clc
push
mov
mov
mov
mov
xchg
sarl
mov
push
aam
cmpsl
int3
sbb
imul
mov
test
std
dec
push
inc
mov
mov
jns
int3
sbb
enter
add
add
mov
sub
test
sbb
test
sti
in
cld
adc
push
cmp
mov
mov
out
repnz
mov
push
mov
add
mov
dec
push
inc
jo
mov
mov
fdivs
mov
add
aam
push
add
adc
fildl
add
push
cs
popa
stc
fnstenv
mov
dec
test
cmp
adc
jl
pusha
add
mov
mov
jl
add
add
add
jb
mov
add
inc
add
sbb
xchg
xchg
dec
fidivrl
add
mov
imul
sarl
sub
loopne
mov
addb
or
imul
mov
gs
cmp
test
and
cwtl
xchg
add
test
ja
inc
hlt
ds
xor
push
stos
das
scas
jb
mov
add
mov
add
sub
add
add
out
outsl
clc
pop
pop
add
mov
jns
scas
addr16
arpl
inc
dec
add
ljmp
xor
mov
test
add
imul
jo
mov
addb
sbb
inc
scas
mov
push
push
mov
rolb
mov
push
push
add
jno
cld
pop
cs
xchg
sbb
loope
xchg
push
outsb
bound
mov
sub
add
mov
add
inc
xchg
sub
movsb
push
fbstp
mov
cmp
jne
adc
incl
push
add
sti
mov
add
or
cmp
aam
adc
add
js
add
add
ret
sub
mov
fsubrs
mov
dec
and
push
adcl
dec
jb
mov
mov
mov
pushf
inc
push
scas
loope
jge
pop
adc
mov
and
add
mov
lret
xchg
pop
pop
arpl
inc
add
mov
mov
pushf
push
cmpsl
mov
add
pop
push
add
push
push
mov
sbb
sahf
gs
add
push
stos
push
outsl
call
pop
sub
pop
cmp
add
roll
add
mov
mov
add
pop
jo
mov
add
cmp
pop
test
clc
cmp
add
mov
add
rcrl
adc
repnz
inc
dec
popl
add
mov
insl
cmp
xor
cmp
push
inc
out
mov
add
xchg
cmpsb
push
add
cld
push
in
jle
add
add
mov
jmp
dec
xchg
sti
or
pop
cmp
test
mov
fldl2t
jnp
fsubl
adc
mov
mov
mov
mov
mov
mov
dec
mov
loope
clc
pop
sub
push
dec
out
lcall
inc
add
and
daa
int3
mov
mov
xlat
pop
add
repnz
pushf
rcr
int
push
add
pop
dec
push
add
push
dec
idivl
fbstp
push
int
add
aaa
aaa
test
aas
or
dec
adc
mov
cmp
xchg
add
add
mov
das
das
imul
pushf
pop
mov
or
and
pop
cli
cwtl
jecxz
inc
jno,pt
inc
in
dec
push
jmp
add
outsb
push
xchg
dec
sbb
bound
mov
lock
mov
dec
fidivrl
adc
insb
repnz
mov
push
add
or
add
jge
pop
mov
or
mov
sbb
insl
push
cld
cmpsl
sub
rorl
jo
mov
rolb
mov
out
in
pop
outsb
dec
ljmp
pop
xchg
xchg
out
inc
add
scas
stos
dec
jmp
mov
std
outsb
or
add
int
inc
add
aas
jp
add
in
inc
outsl
add
mov
jno
push
sbb
inc
mov
sub
je
hlt
loop
mov
jmp
jb
mov
scas
movsl
movsl
adc
mov
lret
adc
mov
add
addb
scas
lcall
dec
push
in
addb
push
jecxz
sbbl
jnp
fcmovnu
icebp
test
mov
cwtl
xchg
add
mov
mov
fisubrl
pop
or
aas
lcall
mov
add
sub
mov
sbb
call
push
add
sub
add
addr16
add
push
add
mov
xor
mov
jmp
pop
xor
jle
enter
cmp
add
push
xchg
scas
negb
repnz
mov
add
test
rorl
pop
xlat
sub
leave
push
test
ljmp
lret
cmp
ror
or
sub
daa
out
cmp
add
add
dec
ds
add
add
mov
mov
xor
inc
int
mov
repz
mov
dec
adc
mov
xor
xchg
push
and
inc
add
cmp
mov
xchg
loop
mov
or
inc
fsubrs
and
and
xor
mov
add
jns
add
call
into
xchg
rol
jmp
dec
cli
addb
add
jns
add
fiadds
sar
mov
cmp
add
add
les
dec
xor
mov
mov
adc
mov
jae
mov
push
pop
dec
xor
mov
clc
pop
int3
cmp
add
mov
xchg
add
imull
gs
and
mov
sbb
or
add
mov
push
mov
lcall
add
insl
ss
fimuls
pop
incb
add
xor
add
adc
sarl
sub
or
xchg
mov
add
sbb
mov
les
ret
push
push
xor
call
mov
repnz
add
dec
mov
or
addr16
call
mov
add
add
add
xchg
test
out
mov
jl
dec
subl
or
int
add
mov
in
imul
aaa
mov
mov
int
lret
add
sub
ja
dec
in
rolb
mov
addb
inc
or
add
mov
add
sbbl
mov
add
mov
xchg
inc
adcw
mov
mov
xchg
push
mov
mov
daa
std
inc
add
ja
in
add
enter
repnz
sbb
rolb
mov
int3
push
negb
or
add
add
jg
mov
sti
mov
test
push
add
xchg
nop
add
xchg
add
mov
add
jge
cmpsl
insl
andl
imul
add
clc
add
mov
mov
jo
mov
add
fdivrl
nop
add
push
std
inc
adc
mov
add
mov
add
add
mov
cmpsl
and
mov
adc
mov
icebp
mov
add
fadd
or
stc
fsts
fs
mov
sti
sbb
inc
cmpsl
jle
add
mov
push
addb
loop
mov
lock
sbb
fsubrl
push
xchg
aas
loopne
mov
enter
cmp
add
add
mov
pop
xchg
inc
inc
xchg
aam
cs
cmpsl
sub
aaa
arpl
xchg
mov
lcall
add
xchg
sub
aaa
push
add
add
mov
test
leave
dec
xchg
add
ret
sbb
loop
mov
push
pop
rolb
mov
push
mov
push
pop
fadds
dec
add
movsb
lods
sbb
sbb
test
sub
dec
cli
sub
and
mov
cli
ret
cmp
enter
into
jl
loop
mov
iret
sbb
cmc
shll
mov
pop
sub
dec
rolb
mov
mov
push
aam
pop
or
add
mov
jecxz
out
rolb
pusha
add
ret
xor
ret
mov
cmp
cmpsl
mov
gs
shll
pop
add
inc
add
add
je
mov
add
into
loop
mov
stos
cmp
push
in
nop
add
xor
mov
add
cmpsb
dec
pop
es
push
xchg
push
mov
inc
lock
je
cmp
cltd
inc
test
pop
xchg
inc
repnz
fstps
mov
sbb
cmp
push
push
jb
mov
cmp
adc
call
and
xor
cmp
add
adc
mov
mov
add
fstpl
push
insb
clc
mov
pop
xor
push
in
nop
add
mov
add
sub
test
mov
cmp
add
add
addb
xchg
mov
and
mov
dec
outsl
cld
push
add
add
mov
jae
enter
mov
stos
into
cmp
mov
rolb
mov
arpl
sbb
pop
nop
add
mov
push
scas
ret
insb
adc
mov
dec
pop
js
add
insb
movswl
sarl
dec
push
inc
add
add
mov
scas
push
rolb
mov
add
dec
push
insl
arpl
dec
adcl
in
mov
mov
dec
sbb
sbb
fs
push
lock
mov
aad
mov
shll
loopne
mov
pop
mov
xor
mov
pop
mov
mov
loope
js
inc
add
jg
xor
mov
mov
add
xor
mov
sub
xchg
ss
pop
sub
dec
fists
mov
pop
mulb
or
add
pop
xor
cs
addb
loopne
mov
dec
dec
mov
add
and
aas
lret
jp
sbb
mov
add
push
sbb
icebp
lahf
insl
je
lods
cld
hlt
out
test
jmp
add
or
jge
add
jno
out
mov
push
add
mov
pop
jno
cmp
xchg
frstor
xlat
sub
sahf
and
push
add
mov
mov
mov
daa
icebp
mov
or
in
insb
aaa
pop
les
push
xchg
lahf
xchg
sbb
pop
leave
and
xor
testb
add
inc
mov
dec
push
test
pop
sti
repz
cltd
mov
add
pop
jnp
xchg
mov
sbb
leave
mov
mov
jg
or
and
mov
add
xlat
push
mov
stos
ret
js
imul
mov
mov
inc
mov
enter
push
sbb
sbb
xchg
or
xor
jg
dec
fisubl
mov
sbb
mov
fistl
add
mov
push
xchg
and
addb
add
cmp
ret
fsubl
filds
mov
fsubrs
imul
pop
push
add
and
mov
add
pushf
dec
mov
mov
xor
iret
fidivl
jl
add
add
cld
inc
hlt
aaa
mov
movsl
sahf
or
out
xor
mov
inc
mov
imul
pop
jecxz
repz
bound
mov
jmp
cltd
stos
pop
or
sbb
std
jnp
or
lods
mov
fcoms
add
inc
outsl
jg
sbb
mov
fprem
push
dec
or
cmpsl
add
sub
rcrl
fldenv
add
add
add
push
addr16
mov
and
mov
dec
pop
add
sub
mov
inc
das
cmp
insb
cmc
scas
mov
add
pushf
repz
stos
imul
bound
mov
in
dec
sbb
jl
xor
mov
add
repnz
mov
add
addb
dec
mov
cmp
inc
xchg
iret
pop
es
xchg
sbb
add
nop
add
push
stos
xchg
mov
dec
fcomip
xchg
add
mov
ret
cmp
decb
xor
add
mov
mov
sbb
and
fs
xor
mov
ja
add
ss
fidivl
dec
mov
mov
mov
add
push
loope
into
test
out
int
xchg
rolb
mov
cwtl
pushf
cmp
sbb
sub
fidivl
add
sarl
add
mov
xor
popa
fstpt
xchg
push
ljmp
add
mov
push
adc
outsl
sub
add
pop
mov
xchg
scas
cmp
mov
shll
mov
int3
pop
in
cltd
pop
dec
cwtl
inc
cmp
mov
rolb
mov
mov
and
mov
int
adc
mov
fildll
ret
adc
mov
fidivs
adc
jmp
mov
pop
pop
adc
add
sbb
out
cmpsl
lods
mov
mov
sbb
push
adc
out
cs
sbb
and
mov
mov
repnz
push
push
inc
add
pop
lods
cld
stc
xlat
ljmp
inc
outsl
test
jl
in
rsm
jmp
ret
inc
lods
add
jb
mov
fs
pop
sub
add
je
cltd
adc
mov
lret
mulb
add
add
shl
add
movsb
inc
mov
out
adc
mov
test
call
sbb
inc
decb
sbb
adc
mov
aad
sbb
mov
adc
ss
fcmove
adc
mov
jmp
lock
add
addb
out
fdivrl
dec
adc
mov
adc
add
jae
adc
data16
lods
inc
add
mov
inc
add
dec
mov
clc
fildl
add
test
adc
mov
jae
add
aas
xchg
mov
mov
mov
nop
add
loope
xchg
add
repz
jb
mov
mov
jns
add
jmp
mov
xor
fildl
mov
rorl
addb
mov
add
lcall
data16
mov
mov
sub
add
xor
mov
jns
mov
xchg
cmp
stos
jno
cli
push
cmc
and
mov
xchg
add
jno
ljmp
scas
mov
sbb
add
and
mov
add
jp
in
dec
xor
mov
or
addb
test
bound
mov
xor
std
sbb
cwtl
leave
fistps
xchg
sbb
stos
push
mov
jge
and
add
mov
adc
add
mov
adc
add
adc
xchg
xor
mov
xor
nop
add
ja
rolb
inc
mov
jp
add
mov
push
pop
xor
leave
stos
mov
shll
out
pop
lods
push
int3
loope
into
dec
jl
imul
mov
jbe
mov
insb
lcall
jae
and
insl
sahf
mov
int3
into
sbb
mov
push
xchg
jge
and
loop
mov
test
addr16
fistpl
rolb
mov
inc
add
loopne
mov
es
addb
pushf
ret
dec
loop
mov
mov
pop
pop
pop
mov
mov
jno
inc
ret
shll
pop
cmp
mov
mov
pop
sbb
sbb
adc
loopne
mov
add
addr16
mov
jle
addb
cwtl
jae
nop
add
jmp
cmp
adc
dec
addl
dec
mov
mov
add
xchg
cwtl
push
int
add
jae
ds
add
add
pmaxub
mov
mov
and
out
xor
mov
scas
out
test
adc
pop
popf
sti
pop
mov
icebp
addb
jmp
cs
or
mov
ljmp
ret
negb
cli
dec
in
jno
xchg
stos
dec
xchg
pop
fisttps
cltd
scas
sub
add
add
jg
cmc
adc
mov
add
add
adc
mov
movb
imul
cmp
fisubs
add
ljmp
out
in
insb
xlat
outsb
inc
mov
lds
pop
cmp
mov
lds
aaa
jo
mov
xchg
dec
cs
mov
push
std
add
adc
and
dec
cmc
fadds
mov
add
jb
mov
mov
div
lret
test
inc
mov
addr16
mov
int
adc
jns
data16
icebp
mov
call
mov
and
mov
cwtl
inc
idivb
mov
js
popa
icebp
inc
xlat
in
mov
mov
add
mov
std
jno
dec
mov
inc
fwait
pop
xor
mov
mov
adc
mov
lcall
mov
jae
inc
popa
inc
pop
sub
add
mov
arpl
std
repz
jmp
mov
pop
inc
cmp
rolb
pushf
outsl
and
cmp
repz
inc
in
enter
pop
sahf
stos
mov
mov
sbb
mov
add
inc
dec
mov
mov
scas
or
lds
mov
add
mov
push
stos
das
out
add
cltd
cmp
lcall
cmp
mov
popf
push
adc
mov
ja
add
sbb
inc
add
or
xor
push
add
mov
add
mov
rorl
add
mov
jg
ljmp
movsl
rolb
mov
dec
test
add
add
xchg
xrelease
add
add
jmp
cmp
or
mov
call
xchg
mov
mov
jne
add
ljmp
out
cmp
ret
xchg
out
adc
inc
pop
lret
xor
mov
movsl
das
rolb
mov
and
mov
mov
xchg
and
mov
int3
aad
dec
lcall
stos
mov
mov
pop
dec
xchg
add
clc
adc
push
dec
pusha
add
xchg
push
movsl
adc
jo
mov
lods
jno
add
shll
add
lahf
push
xchg
outsb
or
arpl
add
push
jmp
sub
jbe
pop
call
push
add
roll
cmp
xor
roll
xchg
lret
pop
ds
mov
bound
mov
mov
inc
dec
adc
or
xor
push
mov
mov
xor
sub
das
cwtl
inc
add
mov
add
sub
xor
mov
add
add
add
jne
fsubr
xor
jge
add
inc
stc
adc
mov
mov
fucomi
jge
add
out
inc
push
add
inc
add
test
fstpt
push
cwtl
push
mov
add
sti
mov
in
cmp
push
pop
jo
mov
mov
push
pop
arpl
cmpsb
popa
or
adc
addb
jo
mov
mov
popf
rolb
inc
out
mov
add
xor
mov
sub
call
mov
mov
es
push
inc
cs
add
dec
mov
test
xchg
std
lods
shll
outsb
mov
mov
lds
mov
out
mov
dec
mov
add
icebp
aas
mov
mov
mov
add
mov
add
scas
stos
mov
mov
xchg
fisubrl
pop
xchg
mov
xchg
test
pusha
add
xchg
imul
add
add
xor
cmpsl
loop
mov
fimuls
push
loope
fwait
out
in
mov
jne
cmp
fnstcw
add
inc
rolb
mov
add
push
dec
es
scas
gs
ljmp
out
push
outsb
or
mov
mov
mov
push
outsl
sub
add
add
add
xchg
stos
jo,pt
mov
add
icebp
xchg
cli
dec
stc
push
mov
fiadds
repz
and
mov
loop
mov
data16
mov
rolb
mov
xchg
xor
add
sarl
roll
mov
mov
sub
add
push
stc
jecxz
mov
add
add
lods
ret
or
and
add
mov
lret
mov
sbb
xchg
push
xchg
add
sub
push
mov
mov
xchg
pop
aas
xor
fdivs
add
cs
leave
mov
test
add
add
or
add
mov
mov
mov
add
dec
inc
push
cwtl
mov
push
loop
mov
ds
add
jg
in
lret
iret
in
lret
mov
add
jmp
hlt
nop
add
add
rolb
mov
arpl
sbb
and
mov
mov
mov
pop
mov
mov
mov
mov
hlt
jne
in
xchg
scas
orl
or
bound
mov
lcall
pop
xchg
add
test
jns
dec
cmovae
add
ds
cld
cmp
pop
pop
divl
push
xchg
lea
add
mov
gs
sbb
scas
dec
fdivrl
add
ss
scas
jmp
arpl
fucomi
cmp
stos
into
jne
stos
push
out
pop
incb
mov
mov
mov
mov
mov
mov
insb
leave
pusha
add
mov
xchg
movsb
add
mov
xor
mov
and
mov
jp
gs
test
sbb
sbb
test
in
adc
mov
cmp
jb
mov
dec
push
add
jns
xchg
std
test
add
scas
sub
imul
mov
aaa
test
and
mov
add
mov
add
mov
add
cld
outsl
addr16
mov
mov
inc
adc
outsl
cli
mov
jle
std
xchg
shrl
and
mov
nop
add
addb
insl
push
out
dec
jecxz
outsb
scas
inc
adc
mov
mov
add
jns
inc
or
int3
cmp
dec
dec
or
loopne
mov
not
clc
out
mov
rolb
mov
mov
aad
mov
lret
jno
xor
les
xchg
add
mov
add
add
dec
pop
xchg
add
jnp
mov
pop
xchg
sahf
sub
shll
mov
shld
mov
aaa
push
cmp
xchg
xchg
icebp
push
push
jg
call
push
pop
mov
out
in
mov
test
xchg
aaa
test
movsb
repnz
add
mov
inc
mov
stos
push
jae
sub
sbb
push
and
add
loope
add
sbb
mov
xor
jne
mov
jb
mov
mulb
adc
mov
jge
and
movl
mov
enter
sub
mov
add
aas
stos
loop
mov
sbb
and
add
mov
les
mov
mov
mov
sub
push
pop
inc
add
add
lret
or
dec
push
mov
nop
add
mov
add
mov
mov
mov
mov
mull
sarl
adc
mov
mov
xor
pushf
cmp
add
and
imul
xchg
negl
nop
add
add
push
pop
data16
add
sbb
cwtl
dec
jle
fdivs
mov
fcomp
mov
and
add
add
add
out
push
add
arpl
mov
loope
jne
lcall
out
mov
add
cmc
adc
loopne
mov
dec
jge
cmp
add
mov
xchg
mov
add
add
mov
ficompl
mov
mov
jp
in
orl
enter
mov
sahf
push
jmp
mov
repz
std
add
pushf
lods
aas
push
sbb
jno
test
mov
out
xor
inc
daa
pop
shrl
jge
jg
sbb
mov
pop
call
add
add
pop
rcll
andl
incl
lds
add
fadd
dec
sub
jecxz
mov
in
cmpsw
jb
mov
mov
rolb
stc
inc
imul
cmc
ds
fcmovne
ret
int3
sahf
cmp
pop
and
mov
sti
lcall
cmp
add
mov
sti
mov
call
push
out
divl
in
sbb
fs
cwtl
int
add
add
fcompl
test
js
add
cwtl
mov
movsl
push
int
mov
sub
add
push
les
add
mov
add
hlt
inc
xchg
cmc
hlt
iret
xchg
inc
jb
mov
mov
mov
add
add
add
lret
add
mov
mov
setns
dec
jecxz,pt
stos
and
add
jb
mov
imul
mov
xchg
mov
jg
add
sub
add
sbb
ja
dec
out
addb
and
mov
mov
add
push
add
lret
and
pushf
leave
addr16
xor
jg
adc
cld
xchg
mov
ljmp
hlt
stos
loopne
mov
stos
dec
jnp
fistl
sbb
and
mov
nop
add
add
call
xchg
jp
repnz
and
add
std
mov
lods
fwait
jmp
lds
jb
mov
and
push
jp
add
xor
mov
imul
add
shl
testb
push
and
xor
mov
add
pop
xchg
sarl
clc
dec
mov
add
mov
adc
mov
add
std
inc
addr16
jo
mov
dec
jp
lods
cmp
mov
and
mov
mov
cmp
loop
mov
push
clc
insl
sbb
sub
cmp
rolb
mov
cwtl
sahf
cmc
cmp
and
aam
add
cli
lods
or
loop
mov
les
stos
cltd
pop
jp
add
add
je
mov
mov
mov
sahf
mov
pusha
add
in
adc
add
push
add
add
jl
test
sbb
ss
add
hlt
out
in
icebp
int3
out
add
add
faddl
or
out
insl
xor
jbe
fistpl
sti
jecxz
xchg
out
inc
add
mov
incb
adc
add
xor
mov
pop
fidivrl
mov
mov
jbe,pn
add
push
lods
inc
sbb
xchg
add
add
push
test
mov
mov
add
mov
sbb
pop
cld
xor
jno
insl
int
stos
movsl
pop
ljmp
das
outsl
dec
jp
push
and
mov
into
cwtl
mov
xor
and
add
aaa
in
iret
pop
ljmp
mov
notl
add
push
jbe
inc
daa
xor
add
mov
ret
mov
jmp
rolb
sti
int3
repz
loopne
mov
and
mov
sub
negl
adc
mov
xor
mov
stos
stos
sbb
push
shrl
mov
lea
inc
stc
out
jno
mov
mov
roll
insl
mov
xchg
jecxz
cli
addb
cmc
inc
icebp
xchg
dec
jmp
cmc
rolb
frstor
add
enter
je
int
inc
add
and
mov
cmc
in
movsb
in
push
sti
cs
jae
mov
push
add
lods
js
addb
fs
xchg
cmp
mov
loop
mov
jp
outsb
pusha
add
mov
dec
mov
mov
jg
je
add
movsl
jo
mov
addb
xchg
rolb
mov
aas
lea
test
addr16
in
ret
add
mov
mov
mov
push
addr16
lods
jp
push
push
mov
mov
add
and
push
sbb
cs
jns
add
xchg
movsb
addb
test
pop
and
add
mov
sub
outsl
push
push
movsb
int3
push
scas
dec
add
add
mov
mov
ret
adc
sub
cwtl
xor
mov
add
stos
push
add
push
add
mov
and
mov
jb
mov
fidivrs
das
cmp
xlat
cmpsb
dec
sbb
cmp
loop
mov
cwtl
push
dec
push
jmp
add
add
sti
popf
push
sub
sbb
add
add
mov
pop
lock
pop
jp
mov
and
cmp
jg
loopne,pt
mov
out
add
or
clc
lret
inc
inc
add
mov
gs
add
enter
stc
xor
xchg
push
mov
add
dec
arpl
sbb
push
add
mov
add
inc
inc
add
ljmp
call
add
mov
and
add
mov
adc
mov
int
and
outsb
test
mov
add
jbe
xchg
pushl
xchg
in
xor
add
flds
add
xchg
ret
mov
loopne
mov
mov
mov
add
add
sub
add
lea
sbb
and
mov
sub
add
lret
loopne
mov
cld
stc
stc
xchg
xchg
jns,pn
mov
icebp
mov
add
xchg
jl
dec
dec
and
mov
sub
pop
bound
mov
jge
or
add
jns
testl
addb
imul
add
call
enter
sbb
xor
add
add
dec
cmpsl
rolb
mov
add
rolb
mov
rolb
mov
std
nopl
add
xlat
loope
push
jb
mov
fnsave
push
add
fldl
add
popa
aas
adc
shr
scas
adc
or
pop
xchg
inc
sub
xor
add
inc
add
xchg
enter
sub
mov
mov
add
fistpll
notl
mov
das
cmp
js
pop
xchg
aaa
jmp
mov
mov
mov
add
hlt
je
push
enter
cld
jp
cmp
mov
mov
data16
mov
mov
in
mov
arpl
mov
cmc
push
jmp
fisttps
jne
sbb
outsb
sub
add
stos
cmpsl
push
jb
mov
and
and
mov
inc
jae
lret
push
add
cmc
push
daa
add
pop
fbstp
dec
lcall
mov
xchg
cmpsb
popf
rolb
mov
cs
jne
xchg
imull
mov
repz
pop
outsl
shll
mov
dec
pop
outsl
sahf
cmpsb
mov
aas
jp
sub
mov
adc
mov
out
dec
xchg
mov
and
cmp
and
mov
in
inc
xchg
adc
ljmp
adc
mov
and
pop
rolb
test
fistps
movsl
in
add
push
add
rorl
fwait
and
mov
mov
mov
test
mov
lea
sub
daa
adc
push
dec
out
mov
fistps
mov
add
mov
add
mov
lahf
fdivrs
add
inc
cmp
rolb
mov
add
add
sbbl
test
dec
int3
je
ja
mov
or
call
add
xchg
sub
adc
repnz
cmpsb
stos
addl
jg
add
ret
cmp
lsl
sahf
mov
fwait
outsb
xor
xchg
bound
mov
add
stos
in
rcrl
popa
aad
mov
mov
into
sub
repz
inc
add
pop
mov
jb
mov
inc
hlt
pop
dec
mov
add
dec
test
mov
mov
mov
lea
fcomps
lods
or
mov
add
mov
sbb
arpl
xor
adc
mov
push
frstor
inc
jg
pop
jmp
dec
push
add
repnz
add
push
inc
add
cwtl
rcrl
das
dec
xor
in
mov
add
mov
inc
lods
sbb
cltd
cmpsl
jmp
jl
push
mov
xor
jns
mov
and
add
add
push
mov
add
cmp
jp
or
add
mov
mov
roll
jo
mov
add
xchg
out
mov
or
mov
dec
mov
cmp
ficompl
fwait
pop
rol
add
adc
mov
loopne
mov
pop
jns
jge
addb
fidivrl
lcall
xchg
dec
test
xchg
lret
add
mov
iret
dec
or
cmpsb
and
mov
adc
push
les
jmp
filds
addb
sbb
add
fwait
int3
push
fidivl
nop
add
add
lods
stos
inc
add
pmuludq
sbb
add
aas
daa
jmp
and
movsl
fwait
lods
popa
shrl
aaa
test
mov
mov
mov
or
test
mov
repnz
int3
or
xlat
jg
sbb
bound
mov
mov
addb
jb
mov
cmp
add
repz
sbb
and
mov
movsb
cmc
dec
xchg
pop
call
pop
jnp
push
sbb
mov
xchg
loopne
mov
xchg
mov
dec
sarl
adc
mov
add
mov
cmc
jne
push
jne
mov
cmp
or
sub
or
inc
add
sub
dec
arpl
add
div
add
inc
mov
imul
add
mov
scas
cmpsl
xchg
cmp
jle
add
dec
adcl
stos
xchg
push
nop
add
cmpsb
fisttps
push
imul
add
roll
and
mov
push
popa
xchg
incb
add
add
mov
addr16
push
test
cs
add
mov
outsl
out
test
jg
mov
add
popa
outsl
mov
dec
xchg
stos
jl
xor
jecxz
adc
fildll
lret
cs
addb
mov
cmpsb
sub
scas
testl
add
popa
fsub
je
push
mov
or
add
addb
js
cmc
jno
call
jo
mov
jb
mov
mov
mov
lret
je
sub
mov
push
add
mov
add
and
cmp
push
add
movhps
inc
add
adc
add
sbb
mov
add
dec
xor
mov
sub
pop
pop
xor
add
ss
icebp
jecxz
inc
cmp
push
xor
jbe
xchg
insb
into
ds
popa
adc
push
add
ret
fdivl
mov
add
add
insb
pusha
add
mov
add
xchg
fcomp
mov
mov
mov
adc
mov
add
xor
mov
sbb
imul
mov
add
addr16
pusha
add
outsl
inc
sarl
ret
cmp
push
add
add
out
xchg
nop
add
jbe
enter
mov
xor
pop
bound
mov
mov
sbb
sub
add
push
pop
loopne
mov
mov
imull
jg
out
push
push
leave
imul
mov
xchg
data16
add
mov
pushf
lds
push
aad
add
sbb
rolb
mov
cwtl
inc
add
jne
add
dec
fcmovnb
push
out
pop
xor
rolb
mov
add
pop
pop
jno
xchg
add
jae
les
cmp
test
mov
pop
xor
dec
inc
add
xchg
add
push
fadd
add
scas
push
hlt
mov
add
add
scas
bound
mov
adcl
push
add
add
or
add
mov
mov
test
ret
in
cmp
sbb
mov
dec
loopne
mov
mov
sub
and
pop
int3
les
sub
add
add
popa
out
mov
lret
jno
inc
mov
sbb
add
inc
dec
iret
push
clc
loopne,pt
mov
rolb
mov
jg
mov
mov
or
mov
jge
cld
test
sub
mov
mov
add
addb
into
daa
dec
repz
push
ja
push
push
addr16
adc
testb
mov
push
cli
rolb
mov
out
push
dec
push
pop
adc
mov
out
movsl
ret
xchg
adc
mov
add
mov
sbb
dec
cmp
mov
add
inc
popf
sub
add
pop
cmp
fidivrs
push
pop
cmp
xchg
add
ljmpw
fbstp
test
dec
in
fldenv
add
cwtl
mov
into
fdivrp
lock
pop
out
sbb
or
mov
mov
adc
out
push
lret
and
out
pop
mov
add
icebp
and
mov
mov
xchg
add
and
mov
mov
cmp
add
in
inc
and
push
add
add
pop
pop
cmp
lcall
mov
add
xchg
sti
scas
inc
adc
int3
leave
xor
add
mov
jle
push
push
out
xor
enter
das
pop
aam
leave
lock
cmpsb
add
mov
jbe
push
call
ljmp
inc
loopne
mov
xchg
xchg
lret
sub
add
fcoms
add
add
inc
xchg
addb
cltd
addb
xlat
insb
scas
sbb
pop
out
xor
in
bound
mov
fildll
addr16
add
mov
mov
jmp
add
add
mov
jae
push
sub
adc
mov
add
out
push
ja
dec
mov
in
pop
cmpsl
nop
add
inc
int
add
out
cmpsb
cmp
loopne
mov
add
fidivrl
mov
daa
xchg
adc
outsl
addb
xchg
dec
movsl
aam
xlat
lock
mov
add
xchg
mov
pop
sbb
add
mov
mov
ret
pop
jmp
test
notb
mov
jp
iret
pop
cmp
or
sbb
push
push
shr
nop
add
lock
mov
or
dec
pusha
add
loope
cwtl
enter
adc
mov
stos
gs
add
mov
add
js
fisttpll
mov
inc
add
jmp
add
mov
mov
scas
mov
cmpsb
std
fcmovnu
xor
repnz
mov
mov
inc
cmpxchg
mov
fsubs
jecxz
inc
jmp
outsl
mov
xchg
enter
fs
add
add
scas
push
bound
mov
jns
inc
xor
ds
lret
xor
hlt
mov
gs
sub
push
ja
movsb
roll
in
addb
jg
lret
add
or
mov
add
mov
add
repnz
ds
add
inc
add
fimuls
dec
cmp
mov
mov
jecxz
rolb
mov
pop
inc
int
add
mov
push
lods
loop
mov
pop
rcll
rolb
jmp
data16
dec
addl
mov
and
and
mov
in
movsl
push
std
test
xchg
jecxz
div
clc
popa
aam
ljmp
mov
jp
pop
stos
lods
sbb
add
ja
push
dec
xchg
sub
add
mov
sbb
into
imul
push
xchg
add
int
xor
add
lcall
add
fsts
add
rolb
mov
mov
daa
into
scas
test
scas
pusha
add
cwtl
or
adc
add
fs
mov
mov
add
add
test
push
jns
repnz
push
pop
call
out
inc
shl
mov
pop
das
and
mov
add
in
adc
mov
fcoms
adc
addb
in
inc
mov
daa
xchg
int
scas
sub
push
arpl
sbb
mov
mov
xchg
adc
inc
add
mov
enter
gs
mov
mov
xor
xor
push
enter
add
lcall
sbb
mov
arpl
push
add
cmp
mov
mov
lcall
xchg
add
xor
mov
test
cld
lret
or
arpl
add
mov
sub
mov
mov
xchg
lgs
add
and
adc
mov
mov
inc
fcoms
sub
into
push
add
inc
or
movsb
rolb
mov
test
push
rolb
mov
mov
leave
sbb
mov
xchg
out
push
add
push
pop
notb
mov
mov
inc
sub
fstps
ret
push
jnp
adc
jo
mov
push
or
jmp
cmp
addl
enter
mov
xor
inc
pop
addb
jge
inc
movsb
pop
mov
dec
es
cli
jb
mov
mov
sbb
add
xor
push
add
add
xor
add
mov
and
rorl
xchg
test
or
lods
aas
lods
mov
xchg
scas
movb
insl
xlat
lret
mov
add
cmp
add
fwait
mov
xchg
les
add
sbb
add
mov
mov
xchg
mov
rolb
mov
inc
add
shll
scas
fstl
outsb
push
mov
cmp
add
repz
scas
xchg
xor
mov
add
idiv
arpl
add
add
and
call
push
lods
lods
test
lcall
int
dec
dec
insl
mov
sub
dec
lret
loop
mov
or
scas
fnstsw
and
in
popf
dec
lods
sbb
mov
cmp
stos
sbb
sub
cld
test
dec
sub
add
lds
inc
add
sub
mov
icebp
xchg
xadd
mov
lods
sub
xor
mov
and
mov
lahf
push
rolb
out
cmp
xchg
cli
mov
lahf
daa
sbb
and
add
movsb
add
pop
cmp
cmpsb
cmp
cmc
lds
add
inc
pop
jbe
xor
sbb
cli
addb
adc
mov
add
insl
cmp
add
add
add
jmp
leave
jnp
test
mov
in
add
mov
das
inc
je
inc
add
mov
add
nop
add
mov
add
add
sahf
pop
sbb
sbb
mov
es
sbb
insb
add
adc
outsb
jo
mov
sub
mov
jbe
lock
rolb
jne
addb
mov
mov
xor
cltd
mov
insl
cs
in
jp
lea
mov
add
inc
xchg
in
or
dec
cmp
fiaddl
lods
bound
mov
add
add
out
and
loope
jae
xchg
dec
mov
sub
mov
sbb
jne
sti
bound
mov
sbb
aad
add
mov
aas
fimuls
loop
mov
dec
mov
mov
inc
in
mov
lods
mov
repnz
add
mov
mov
mov
movl
mov
push
push
sub
add
addb
fnstcw
fsubs
pop
mov
in
mov
jge
fisubrl
add
mov
mov
add
mov
fisttpll
mov
mov
cmp
je
call
popa
mov
adc
dec
daa
imul
mov
mov
mov
fs
fiaddl
lea
add
lcall
xchg
xor
dec
and
inc
jae
fsubs
lret
add
xchg
nop
add
stc
adc
mov
ficoml
xchg
test
arpl
jmp
ds
add
add
cmp
fisubs
mov
decl
mov
cmp
inc
add
mov
rolb
mov
outsl
push
in
cld
mov
fisttpll
ret
rolb
arpl
add
or
test
imul
sub
sbb
popa
loop
mov
jne
add
dec
in
xor
mov
sub
push
clc
add
or
jb
mov
xchg
add
sbb
lea
pop
fldt
xchg
add
mov
xor
mov
push
xchg
lahf
push
sbb
pop
je
dec
or
stc
adc
int
into
xchg
mov
cmp
jae
cmc
addr16
icebp
xchg
fcmovnb
xor
mov
loope
rolb
mov
into
mov
cmp
mov
dec
movsb
pusha
add
add
jmp
mov
add
or
rolb
loope
adc
jbe
shll
mov
loopne
mov
add
mov
in
adc
and
jno
addb
cmp
inc
ljmp
mov
jb
mov
and
mov
shl
mov
and
dec
pop
inc
pop
xchg
and
mov
sbb
or
adc
mov
scas
lret
shl
add
adc
inc
inc
cmp
rolb
dec
repnz
sti
ret
cmc
mov
mov
inc
gs
mov
fdivr
sbb
xor
fnstcw
outsl
insb
pop
and
enter
scas
ljmp
mov
mov
pushf
bound
mov
add
mov
in
movsb
and
mov
add
ret
adc
into
lock
mov
adc
mov
add
mov
add
mov
add
jg
lods
cs
lds
add
mov
pop
inc
add
test
mov
lods
ja
or
xchg
lahf
jnp
add
hlt
inc
in
ljmp
mov
or
xor
mov
shr
ror
pop
enter
mov
fisubrl
mov
sbb
int3
jge
mov
add
mov
xchg
dec
pop
mov
and
mov
cmp
pop
mov
push
fcomps
sub
mov
mov
bound
mov
mov
fcoml
js
cmp
ret
rolb
mov
add
jnp
mov
add
fdivrs
or
js
xchg
adcl
add
insb
adc
mov
mov
xchg
and
mov
fsubrs
add
mov
push
daa
shll
inc
mov
push
dec
cmp
mov
mov
xchg
mov
mov
inc
lret
add
addb
fisubrs
cmp
mov
test
out
inc
cmp
addb
jo
mov
lret
mov
add
fimuls
jle
mov
push
lcall
std
xchg
sbb
cli
pop
inc
add
add
scas
jp
clc
jno
mov
ds
mov
lahf
sbb
ja
add
mov
cmp
xchg
jno
push
out
mov
das
xor
mov
loope
fiaddl
add
or
inc
loopne
mov
or
add
sbb
add
mov
dec
mov
cmp
mov
loopne
mov
and
mov
lret
cmpsl
mov
sbb
cmpsb
sub
pusha
add
push
jecxz
add
repz
sbb
mov
out
inc
add
pusha
add
pop
jo
mov
push
jecxz
ficoml
fs
add
lret
xor
mov
cmp
inc
xchg
pop
mov
test
mov
inc
mov
mov
sahf
shll
dec
add
int
add
mov
mov
mov
dec
dec
jno
ljmp
aas
sbb
jle
adc
xchg
push
add
xchg
repz
sarl
pop
mov
mov
call
mov
add
rolb
mov
mov
pushf
outsb
xchg
dec
cs
and
mov
int
xchg
and
stc
ret
and
dec
mov
sbb
sbb
xchg
mov
icebp
cmp
cmpsl
aas
jmp
add
pop
cs
sub
inc
add
inc
aam
cmp
push
gs
sub
nop
add
scas
test
fwait
push
add
add
jge
mov
mov
add
push
add
adc
add
inc
add
push
xchg
mov
rcrl
add
cli
iret
xor
mov
fldt
or
in
shll
add
mov
jecxz
movl
mov
roll
rolb
mov
xor
jmp
mov
push
add
add
iret
gs
mov
xchg
sub
pop
bound
mov
and
mov
mov
mov
mov
xchg
cmp
push
inc
add
sub
mov
mov
mov
add
mov
push
popf
ds
lcall
daa
aam
mov
call
mov
mov
xor
imul
jge
inc
pop
jae
ljmp
test
mov
loopne
mov
xor
aas
addr16
xlat
popa
and
mov
or
add
insl
pop
jb
mov
add
test
mov
and
mov
add
lahf
lret
je
imull
adc
rolb
pop
arpl
aaa
or
add
call
leave
daa
push
or
clc
pop
mov
inc
sub
add
add
leave
loopne
mov
es
in
push
cmc
jae
inc
sbb
dec
jle
leave
imulb
movsl
rolb
mov
jnp
cmc
lret
imull
cmp
hlt
lods
ds
xchg
outsl
cmp
rolb
mov
mov
fidivrl
add
mov
mov
out
sbb
rolb
mov
in
dec
ljmp
test
insl
scas
lcall
rolb
xor
js
rolb
std
mov
lock
outsb
test
mov
inc
imul
jecxz
mov
pop
push
push
add
daa
push
lock
mov
rcrl
mov
scas
push
aaa
push
add
clc
or
aas
sahf
adc
addb
rorl
xchg
pushl
mov
lret
xor
mov
inc
lods
sub
add
add
loop
mov
mov
in
test
in
cltd
xchg
sub
pop
aad
jge
add
int
jae
loope
add
mov
addb
js
mov
mov
cmp
xlat
jg
xchg
sub
adc
daa
jg
das
adc
adc
add
addl
mov
addb
mov
data16
sub
nop
add
dec
cld
push
adc
jne
test
sahf
dec
adc
add
mov
mov
mov
loope
inc
sub
je
in
sub
cs
adc
ret
and
mov
add
push
sbb
jmp
dec
sub
daa
lahf
test
cld
aaa
aam
pop
add
inc
sahf
and
bound
mov
mov
xchg
add
inc
add
aam
leave
das
mov
fwait
push
add
mov
add
jge
mov
mov
pop
out
inc
lea
je
cli
pop
lock
add
add
xchg
adc
mov
mov
mov
lret
xor
mov
in
gs
repz
mov
sub
fbld
lods
arpl
and
mov
add
xchg
sbb
jle,pn
mov
cmp
mov
mov
mov
push
nop
add
sbb
push
jg
mov
mov
push
jmp
and
mov
fldcw
or
int
in
xchg
add
add
xor
push
movsb
fwait
test
sbb
add
xor
mov
mov
mov
dec
aas
jmp
stos
xor
insb
dec
outsb
rolb
mov
gs
fdiv
or
repnz
das
cmp
les
fsubl
mov
add
push
cmp
popa
test
add
jbe
scas
insb
and
orl
movsl
enter
inc
add
ror
outsl
outsl
int3
push
outsb
enter
add
addb
add
lcall
outsl
imull
pop
fwait
mov
mov
add
pop
inc
dec
lahf
or
dec
out
pop
repz
jmp
sub
and
mov
xchg
int
xor
movsb
iret
leave
pop
aas
addb
into
enter
in
adc
mov
mov
jmp
cmpsb
rolb
push
add
xor
mov
pop
dec
xchg
bound
mov
addb
jp
mov
add
in
add
jmp
xchg
inc
das
or
pop
jg
aas
sub
fiadds
shr
sub
ficomps
inc
add
std
aam
add
jbe
test
mov
push
loopne,pn
mov
adc
les
mov
mov
enter
in
push
dec
xchg
sbb
insb
int3
inc
pop
in
movsb
lods
jl
leave
jmp
lcall
stos
push
cld
jbe
das
lds
pop
dec
call
mov
jg
lock
out
jp
and
mov
sti
mov
idiv
push
hlt
mov
ja
movsb
jmp
hlt
adc
test
pop
mov
add
lcall
inc
inc
outsb
popa
fsubrl
pop
jo
mov
push
add
out
loopne
mov
pop
mov
add
jno
add
add
jbe
mov
mov
rolb
lods
repz
or
aad
jo
mov
lret
mov
add
mov
jno
outsb
js
divb
add
add
mov
add
mov
fwait
jp
pop
std
cmpl
sahf
adc
test
push
clc
in
test
push
lods
adc
mov
test
ficoms
inc
arpl
push
mov
add
mov
cwtl
out
es
xchg
sub
imul
mov
xchg
outsl
loope
xor
mov
or
add
std
cmc
pop
adc
mov
mov
scas
mov
ficoms
inc
inc
add
or
das
lea
mov
lcall
sbb
add
ja
hlt
pop
scas
xor
jb
mov
pushf
mulb
jecxz
jns,pt
sub
addr16
into
jg
mov
outsl
cmp
pusha
add
add
and
mov
lret
cmp
loop
mov
or
mov
mov
sub
cmc
sbb
je
sti
addb
adc
inc
push
lret
inc
popa
or
and
mov
clc
sarl
imul
insl
push
mov
inc
xor
dec
xor
fwait
mov
xlat
mov
mov
add
fistpl
mov
std
call
and
sub
xor
mov
inc
add
out
addr16
add
dec
inc
add
rolb
push
mov
sub
add
adc
jg
add
mov
mov
icebp
sub
cmp
dec
sbbl
or
add
lock
push
data16
mov
rcrl
movsl
mov
adc
js
add
repnz
rolb
jmp
sbb
xchg
pushf
push
int3
jmp
and
mov
jecxz
cmp
stos
pop
js
add
and
xchg
rcl
add
cs
test
mov
jbe
mov
imul
push
addl
add
inc
cmp
mov
add
popf
add
jne
and
sub
add
and
add
fisttps
jnp,pn
test
and
add
mov
cmc
or
mov
mov
xchg
mov
sbb
testl
adc
mov
jecxz
mov
out
pop
imul
mov
je
hlt
xor
mov
add
sub
mov
das
inc
add
sub
adc
push
ret
xchg
sub
outsb
stos
jmp
mov
add
add
ljmp
repz
lcall
mov
lock
jne
fmull
mov
das
ss
and
mov
les
sbb
xlat
jne
clc
sub
iret
mov
xchg
jae
jg
movsb
inc
add
dec
push
test
xchg
popf
lds
jnp
daa
mov
push
add
inc
add
mov
mov
jo
mov
out
decl
or
loope
pop
jae
jp
or
lods
push
fdivs
mov
xor
mov
pop
mov
fisttpl
xchg
mov
das
cmpsl
xchg
pusha
add
fadd
add
mov
add
dec
mov
xchg
add
pushf
jnp
inc
add
mov
test
es
push
test
or
pop
js
in
rolb
mov
repnz
add
sahf
sub
adc
mov
rolb
mov
add
cmp
and
shll
push
mov
sbb
add
dec
dec
push
add
mov
es
or
cli
jecxz
add
xor
add
jmp
fdivr
pop
inc
add
cli
mov
and
mov
or
pop
cmpl
add
pop
jb
mov
cs
cli
jne
mov
jp
add
addb
loope
xor
mov
pop
sub
mov
mov
insl
jl
rolb
mov
adc
mov
iret
mov
rolb
mov
gs
lods
push
add
mov
dec
out
les
insl
fsts
add
testl
adc
mov
adc
stos
in
add
sbb
fdiv
jno
cmc
mov
pop
lods
pushf
push
ljmp
add
add
dec
adc
lds
fcomps
add
lret
arpl
imul
mov
ret
jns
lcall
mov
in
sub
and
bound
mov
stos
mov
pop
daa
ja
pushf
fldt
add
push
stc
cmp
push
dec
jae
loope
jp
es
and
mov
inc
add
sbb
mov
mov
into
rolb
xchg
jmp
das
push
and
mov
scas
push
mov
idivb
test
mov
dec
inc
in
lcall
jecxz
sbb
mov
mov
mov
mov
mov
in
inc
fisttpll
and
mov
mov
push
mov
mov
pop
loope
idivl
sbb
jmp
je
loop
mov
mov
add
sbb
push
aaa
insl
pusha
add
mov
aad
add
mov
mov
push
enter
add
std
or
nop
add
or
add
mov
inc
xor
xor
mov
icebp
adc
jmp
jecxz
shrl
add
push
add
pop
or
scas
jnp
add
rolb
mov
scas
dec
push
jbe
add
repz
hlt
mov
pop
add
push
add
mov
int
xor
mov
in
vpunpckldq
mov
xlat
pop
jge
hlt
es
or
pop
mov
stos
xchg
xor
scas
nop
add
std
dec
pop
iret
fsubl
inc
add
mov
popf
inc
and
sbb
xor
popa
in
sbb
mov
mov
xor
mov
imul
xor
cld
loope
dec
xor
and
mov
mov
ljmp
push
add
mov
rcrl
mov
mov
add
pop
mov
and
mov
jmp
mov
and
mov
push
add
xchg
and
mov
add
fadd
cld
xchg
inc
adc
add
out
dec
sub
add
add
pop
pop
add
mov
outsb
xchg
rolb
mov
add
mov
pop
fldt
scas
lock
push
inc
add
add
daa
or
add
add
add
mov
je
pop
pop
jecxz
out
cmpsb
mov
testl
arpl
test
lods
xchg
add
mov
leave
lods
aad
mov
fldenv
ret
iret
push
jecxz
sbb
fisttpll
cmp
test
push
xchg
sti
mov
jge
aaa
repz
dec
jmp
mov
in
add
idivb
sti
mov
mov
dec
cld
ss
iret
inc
sub
jp
das
ficoml
pop
cmp
mov
test
loope
sbb
xor
aad
mov
mov
out
aad
pusha
add
fmuls
sub
sahf
out
imulb
jb
mov
insb
mov
push
aas
fidivrl
lret
mov
je
inc
sub
sub
and
add
mov
or
sbb
mov
sbb
mov
add
pushf
aas
cmpsb
add
push
imulb
int3
adc
add
lret
lea
fadd
add
lcall
jno
cmp
out
pop
cmp
ds
outsb
out
mov
insb
mov
and
mov
cwtl
stc
in
pop
push
push
mov
add
mov
jne
pop
stos
jbe
add
cmp
mov
or
cmp
mov
xchg
add
outsb
xchg
inc
and
push
and
mov
add
add
mov
cmp
lods
add
ss
push
and
mov
divb
fdivr
mov
ret
lret
cli
out
sbb
pop
xlat
push
add
add
add
xchg
xlat
adc
mov
or
in
sub
fwait
ret
fisubl
add
sub
jns
addb
push
adc
pusha
add
mov
jno
or
mov
daa
pop
sub
add
xor
sbb
mov
mov
sahf
das
mov
mov
mov
cmp
shrd
loop
mov
jo
mov
aam
add
mov
mov
movsl
mov
imulb
sub
push
outsb
jge
sub
mov
adc
mov
jge
mov
out
xlat
pusha
add
cmpsb
out
inc
pop
rcll
add
xchg
dec
mov
stc
cmp
jo
mov
jle
push
add
mov
xchg
movsl
rolb
mov
sti
pop
adc
mov
pop
or
xchg
add
jg
sub
scas
inc
adc
aas
nop
add
out
imul
mov
out
mov
xchg
movsl
xchg
push
or
mov
in
test
sub
loop
mov
int
or
add
sbb
add
rolb
enter
loopne
mov
into
jle
movsb
pop
xchg
in
mov
mov
mov
mov
mov
js
or
sub
add
add
add
mov
icebp
mov
fisubrl
mov
mov
addb
inc
sub
fwait
xor
les
mov
in
add
scas
push
add
adc
mov
rolb
repz
mov
gs
push
add
mov
loop
mov
add
add
in
aaa
jl
fs
addr16
or
test
nop
add
int3
je
cmc
and
dec
sbb
clc
mov
add
je
jne
mov
cld
cmpl
mov
mov
frstor
mov
mov
outsl
fsubrl
ljmp
push
xor
mov
stos
or
inc
fwait
push
lret
mov
enter
inc
scas
inc
sub
inc
add
les
int3
outsb
inc
add
pop
sub
cmovo
mov
sub
aas
in
xchg
add
jnp
jmp
add
sub
add
mov
addr16
out
in
adc
mov
idivl
stc
jecxz
push
adc
nop
add
adc
mov
ret
xor
and
mov
cmp
les
mov
add
fcmovnb
in
xlat
scas
cs
movb
jl
pop
push
lahf
test
gs
rolb
mov
dec
push
imul
addr16
mov
sahf
cmc
dec
inc
cld
xor
mov
add
mov
sbb
jnp
or
jno
std
or
add
in
fbstp
lret
mov
mov
add
fldcw
or
push
pop
cld
adc
mov
cmc
jmp
call
push
cmpsb
int3
fwait
mov
xchg
or
test
xchg
jle
insl
dec
mov
lods
mov
fdivrs
ret
jae
xor
mov
aam
mov
imul
cmp
add
insl
pop
nop
add
add
mov
pusha
add
add
and
mov
sub
addl
jmp
movaps
pop
scas
fcomps
pop
sbb
add
idiv
mov
push
call
pop
data16
pop
out
xchg
mov
sub
call
test
inc
jne
jp
inc
or
outsb
add
jne
aad
sbb
ret
enter
stc
ficoml
dec
scas
gs
add
in
mov
int
jg
repnz
add
or
dec
jp
in
sbb
add
add
mov
mov
mov
jg
stos
and
jb
mov
pop
loop
mov
add
mov
rolb
add
mov
pop
movsb
imul
jo
mov
mov
and
in
mov
push
fists
cmc
sub
mov
adc
add
mov
lock
add
mov
lahf
lods
test
mov
push
add
add
add
cmc
rcl
pushl
notl
add
mov
mov
sti
jns
dec
pop
jns
add
mov
cltd
push
fwait
aaa
adc
sbb
mov
dec
xchg
add
lahf
and
cmpl
ret
sub
js
push
mov
sbb
sub
arpl
and
mov
cltd
scas
daa
stc
mov
add
mov
pop
add
inc
iret
fsqrt
cmc
sub
add
je
mov
rcrl
dec
dec
pushf
sub
cmp
mov
mov
loope
add
mov
aaa
idivl
je
test
add
mov
sbb
or
add
pushf
xor
subl
pop
sbb
sbb
add
fwait
cmp
test
dec
jae
push
pop
loope
scas
push
add
mov
mov
out
jnp
sbb
int
xchg
mov
sbb
jb
mov
mov
test
cmpsb
pop
cli
jmp
xchg
les
mov
mov
or
adc
out
hlt
sub
and
cwtl
xchg
dec
xor
jb
mov
dec
inc
cmpsl
ja
xchg
inc
mov
je
addr16
inc
add
add
mov
in
push
mov
mov
mov
sbb
add
jp
add
cmp
bound
mov
cmp
jne
stc
jg
sti
push
add
lea
mov
mov
mov
mov
or
in
ss
sbb
sub
scas
push
enter
dec
sub
add
xchg
push
ss
cmp
out
xor
imul
mov
out
cmc
lods
xchg
xchg
mov
jecxz
and
pop
test
jae
int
add
add
push
add
or
or
negl
xor
and
mov
mov
daa
mov
mov
mov
add
and
and
add
xlat
xchg
push
fdivrs
mov
add
repnz
mov
xchg
mov
andl
push
add
setb
mov
gs
push
jne
add
repnz
out
or
insl
mov
repnz
xor
cli
enter
ret
and
sub
loope
mov
nop
add
add
xchg
repz
jbe
push
sbb
pushf
mov
inc
inc
je
dec
lcall
test
aas
xchg
sbb
nop
add
subl
arpl
movsl
outsl
mov
add
dec
rolb
mov
push
dec
xorl
int
add
mov
xchg
pop
pop
lret
or
mov
xchg
ss
or
jo
mov
and
mov
mov
loop
mov
sub
add
cmp
add
cwtl
jmp
jne
adc
mov
mov
or
mov
mov
add
mov
bound
mov
clc
jbe
adc
mov
and
mov
pusha
add
pop
fs
add
mov
or
mov
ljmp
mov
add
arpl
add
mov
mov
fnstsw
mov
and
mov
add
bound
mov
outsb
repz
scas
test
add
mov
lods
mov
mov
push
into
adc
mov
psllw
pop
insb
testl
push
jnp
pushf
mov
adc
add
and
mov
imul
loop
mov
icebp
clc
and
mov
rolb
mov
xlat
mov
mov
add
rolb
jg
jmp
call
adc
mov
dec
ficoml
pushf
pop
add
out
loop
mov
imul
rep
mov
lea
iret
jno
cmp
test
stos
pop
mov
test
jg
mov
mov
xor
add
aas
mov
jle
mov
or
invd
jp
adc
mov
out
push
sbb
call
mov
cli
arpl
fnstcw
mov
outsl
inc
sbb
mov
xchg
mov
add
rcrl
imul
mov
data16
mov
hlt
cmc
mov
fdivrl
jecxz
push
add
in
sbb
add
fs
mov
add
leave
adc
mov
pop
add
add
cmpsb
gs
xlat
addb
pop
mov
repz
rorl
mov
popa
loop
mov
test
add
mov
test
mov
mov
push
enter
mov
aad
lods
and
jne
add
add
aaa
out
lods
mov
pop
or
mov
jns
nop
add
xchg
sub
into
jecxz
and
add
mov
cmp
out
cmp
mov
rolb
mov
js
pop
loop
mov
mov
mov
mov
dec
es
lahf
fistps
mov
out
popa
stos
inc
xor
mov
xchg
push
add
push
adc
sub
stos
pop
adc
cs
add
mov
int3
jmp
mov
test
mov
and
mov
mov
lea
ret
aaa
jno
push
enter
stos
inc
scas
adc
jnp
and
adc
and
mov
enter
icebp
lds
popa
xor
adc
test
hlt
jno
ljmp
add
daa
mov
xchg
and
jl
mov
fstpt
enter
fldenv
adc
arpl
or
mov
add
int
push
dec
jo
mov
mov
lret
es
bndldx
add
add
add
dec
jo
mov
test
add
mov
jle
push
jno
push
add
shrl
inc
int
add
cmp
sub
add
cwtl
sbb
rcr
clc
ficomps
cltd
aam
dec
xchg
cltd
lds
xchg
out
pop
lods
xlat
decl
jb
mov
add
adc
add
mov
add
pop
dec
push
add
add
enter
std
and
jae
mulb
dec
lahf
mov
add
push
and
aad
inc
mov
loop
mov
mov
add
loopne
mov
mov
insb
xlat
mov
push
mov
repnz
add
sahf
add
add
mov
test
add
icebp
lock
push
mov
insl
stc
and
mov
out
out
add
lock
xorl
aam
in
scas
lods
mov
add
test
test
xchg
inc
test
xchg
jns
mov
into
adc
pop
lods
nop
add
xor
push
or
fisubrs
ss
xchg
sbb
out
and
mov
pop
jno
ss
add
sti
dec
add
mov
sub
cmp
outsb
lea
lret
xor
add
mov
push
ret
int
mov
rolb
mov
xchg
add
add
inc
mov
iret
aam
pushf
outsb
xchg
pop
into
out
xchg
cmp
fwait
cmpsb
out
and
mov
mov
adc
push
cltd
or
je
pushf
lds
arpl
mov
push
pop
mov
mov
fiaddl
testb
add
inc
jae
rolb
mov
cmp
pusha
add
add
pusha
add
insb
iret
mov
push
push
jns
add
imul
mov
in
xchg
xor
inc
add
sub
push
icebp
fcoml
lds
jnp
arpl
add
mov
add
pusha
add
int
imul
cmp
add
repnz
mov
fidivrs
mov
add
mov
mov
mov
es
aad
outsl
fwait
out
add
mov
add
add
jp
inc
jge
fwait
je
popa
cmp
and
mov
add
add
mov
lds
mov
cs
xor
mov
mov
scas
sarl
mov
adc
mov
add
loopne
mov
cwtl
imul
insl
xchg
cmpsb
push
addb
in
cmpsl
push
push
lcall
mov
sbb
test
movsb
mov
cmp
movsl
daa
xor
sbb
scas
inc
add
int
add
out
cmp
or
cmc
call
mov
out
add
add
rcrl
and
mov
cmpsl
clc
dec
imul
mov
mov
leave
addr16
push
popf
fcoml
inc
add
mov
dec
test
pop
jns
inc
data16
fwait
adc
add
xchg
dec
int
or
add
pop
rolb
sub
pop
dec
lods
sti
dec
adc
mov
add
adc
sbb
adc
call
in
lds
mov
cmp
into
imulb
xchg
xchg
dec
add
mov
jnp
add
add
mov
xor
mov
orl
shll
xchg
mov
dec
pop
mov
jle
pop
sbb
jbe
lret
outsl
hlt
add
mov
add
push
pusha
add
call
popf
fcoms
add
arpl
and
mov
add
pop
int3
pop
in
fidivl
mov
shll
sbb
fnstenv
mov
fnstenv
add
dec
push
xor
mov
not
rcrl
add
add
loop
mov
add
stc
outsl
test
scas
push
movsb
cmp
mov
jns
xor
lret
xor
xor
or
jmp
frstor
add
pop
nop
add
les
mov
mov
or
dec
mov
or
fwait
das
mov
mov
mov
lahf
jmp
lret
mov
add
sub
and
mov
lods
call
add
repz
lahf
mov
add
mov
pushf
jge
mov
mov
cmpsb
jle
aad
nopl
out
fbstp
nop
add
mov
add
jl
mov
or
stc
jl
cmpsl
arpl
fmull
add
pop
push
add
and
scas
lret
push
fdivrs
outsb
out
push
xor
mov
adc
mov
add
leave
lds
pushf
add
mov
aam
add
std
lcall
mov
nop
add
mov
mov
mov
add
insb
sbb
jne
cmpsb
and
inc
dec
nop
add
inc
cmpsb
push
push
add
push
push
add
cmp
sbb
das
adc
mov
add
clc
clc
enter
arpl
cwtl
ljmp
scas
and
mov
add
iret
or
xor
orl
std
mov
add
mov
das
mov
data16
out
or
test
addb
add
adc
rolb
mov
add
pop
xchg
fildl
mov
cwtl
pop
jmp
cmc
sbb
jecxz
sarl
mov
pop
out
mov
xlat
xchg
in
fldcw
dec
sbb
aas
jmp
out
add
pop
rolb
mov
rolb
mov
jp
sub
or
add
add
dec
jmp
xor
test
out
fisttpll
scas
mov
push
xchg
xor
and
imull
loopne
mov
pop
xchg
add
mov
lods
je
jg,pn
out
mov
add
data16
dec
roll
add
cmpsb
fs
orl
mov
mov
push
mov
dec
nop
add
scas
jp
rolb
mov
pop
xor
loope
stc
scas
fldcw
mov
add
mov
cmp
lods
shll
rorl
add
dec
mov
dec
xor
mov
movsl
fmul
cmp
xchg
mov
inc
xor
addb
adc
mov
mov
adcl
mov
jnp
add
testb
push
insb
repz
fmull
xor
ja
ljmp
faddl
pop
mov
adc
mov
out
int
out
jbe
add
mov
mov
divb
jge
je
clc
addb
cs
mov
add
sbb
xor
cs
popf
cmp
out
loop
mov
mov
stc
mov
test
add
dec
inc
lea
sbb
out
push
jge
jne
sub
sub
mov
pop
pop
and
call
outsb
popa
xchg
xor
pop
out
cs
push
hlt
dec
popl
mov
cmp
adc
je
lcall
dec
cmp
add
cmp
mov
out
jge
add
add
popa
cltd
mov
loope
mov
mov
pop
inc
add
hlt
mov
ret
xor
mov
cwtl
aad
das
and
ficompl
mov
lahf
jl
mov
jecxz
enter
inc
or
ret
ds
add
fiadds
fimull
cld
inc
sbb
stos
fs
inc
push
rolb
mov
cmpsb
out
push
and
mov
in
mov
push
and
push
popf
adc
mov
mov
push
mov
xor
mov
cmp
mov
xchg
adc
mov
mov
dec
push
nop
add
cli
lea
add
mov
mov
mov
sub
lock
add
lds
aad
sbb
xchg
or
in
push
fstl
add
imul
sbb
movsb
mov
add
dec
mov
mov
mov
movl
sbbl
mov
jne
sub
cmpsb
cmp
inc
add
add
loop
mov
aaa
ret
fdivrl
cmpsl
xchg
adc
mov
xor
mov
xor
ss
mov
add
mov
add
mov
dec
mov
dec
inc
xchg
psubb
inc
psubsb
pop
leave
mov
loop
mov
add
jb
mov
rolb
js
imull
mov
es
mov
dec
insl
jns
pop
jge
add
ss
nop
add
push
xchg
sbb
lods
lret
fiaddl
mov
loopne
mov
mov
mov
and
mov
pop
mov
mov
rcll
push
cli
push
mov
aaa
push
sbb
add
add
rolb
outsl
mov
mov
aaa
ret
rcll
and
imul
and
mov
pop
mov
clc
imul
jp
imul
mov
adc
xlat
sub
jmp
push
es
push
aad
addb
mov
inc
insb
stos
arpl
les
jle
sbb
call
add
add
pop
test
xor
aam
add
loope
lock
int3
jmp
cltd
int3
and
movsb
sahf
adc
xchg
adc
add
mov
sub
add
mov
mov
add
mov
push
add
das
loope
pushl
dec
mov
fs
jno
daa
movsl
xor
mov
aas
mov
cs
add
cmc
cmpsb
sahf
int
int3
int
loopne
mov
nop
add
add
scas
xchg
mov
lret
mov
sub
add
lock
addb
mov
sub
je
bound
mov
test
push
add
add
sbb
push
divb
mov
cmp
lret
lahf
rolb
mov
pop
movsb
movsl
push
arpl
mov
adc
mov
push
pop
std
sbb
mov
sub
push
mov
int3
fnstcw
push
add
jns
jmp
inc
aaa
sub
lahf
iret
sbb
mov
fisubrs
cmp
or
cmpps
lahf
push
pusha
add
js
rolb
mov
and
mov
lcall
adc
mov
mov
mov
std
ljmp
xchg
inc
add
adc
mov
mov
add
pop
push
divb
mov
and
mov
add
cmc
or
add
cmpsl
or
xchg
rolb
xor
mov
inc
addb
push
mov
add
jns
push
jnp
xor
mov
inc
pop
rolb
or
inc
aas
cs
mov
mov
mov
mov
mov
jno
pop
imul
mov
call
mov
in
fiaddl
test
outsl
ret
adc
or
mov
cmp
dec
jle
add
mov
mov
sbb
rolb
add
es
es
jb
mov
addb
imul
lahf
rcr
lahf
repz
add
enter
mov
or
aas
adc
xor
mov
push
or
xchg
iret
iret
or
lcall
add
hlt
int3
hlt
pop
addb
ljmp
test
add
add
mov
out
add
scas
loope
lock
xchg
dec
clc
arpl
add
mov
pop
sti
mov
xchg
dec
in
and
lods
scas
jbe
and
mov
jg
lret
repnz
add
dec
push
add
jl
pop
sbb
add
add
mov
mov
xchg
add
mov
cmp
stos
adc
mov
jp
popf
loope
sub
scas
xor
mov
out
jp
dec
push
loopne
mov
les
add
xchg
pop
jg
push
in
jne
rcr
ljmp
add
les
mov
adc
mov
stos
rolb
mov
xchg
mov
mov
push
dec
scas
das
xor
mov
or
add
mov
dec
or
add
add
popf
xchg
fcmovb
inc
add
mov
add
jg
add
test
pusha
add
adc
sbb
mov
loop,pn
mov
add
add
sbb
aam
add
fstps
std
mov
mov
mov
lods
std
jle
mov
push
add
mov
and
mov
dec
adc
enter
xor
sub
mov
fidivrl
pop
cmp
push
adc
das
sbb
fcom
cld
xor
lret
pop
add
mov
add
mov
inc
add
int
mov
xor
mov
mov
add
add
adc
mov
repz
daa
in
testb
mov
jle
sub
mov
mov
mov
add
stos
push
xchg
push
xchg
cmpsb
cmp
mov
rorl
outsl
outsl
inc
xchg
mov
inc
stos
push
imul
dec
jle
add
push
test
add
sub
mov
mov
sub
enter
push
add
add
scas
enter
mov
add
add
inc
movsl
mov
fsts
add
lds
iret
xchg
mov
sbb
fld
pushf
dec
jg
aaa
dec
cwtl
ret
ret
mov
mov
cld
std
lahf
jp
push
add
rolb
mov
and
mov
add
mov
rolb
orl
add
insl
or
add
mov
jmp
mov
leave
inc
add
mov
movsl
clc
mov
mov
mov
add
popa
lods
sub
mov
dec
in
addb
fisubs
sub
inc
aad
inc
adc
mov
add
add
outsl
repz
mov
push
add
jl
cmp
cmc
fs
xor
inc
mov
mov
xchg
leave
js
bound
mov
jb
mov
jo
mov
aas
push
add
imul
mov
mov
inc
cmp
movsb
nop
add
and
cli
pop
aaa
mov
mov
roll
xor
das
inc
xchg
xlat
xor
sub
rolb
mov
stc
xor
add
xor
cmpsl
cwtl
mov
mov
inc
add
stos
mov
mov
imul
jno
fdivr
add
mov
add
aad
add
mov
add
push
fsubrs
cmp
jg
pusha
add
loop
mov
add
mov
pop
lea
mov
inc
mov
mov
cmc
roll
mov
rolb
mov
mov
push
fsubrs
into
gs
mov
loop
mov
and
cmpsb
jns
pusha
add
add
mov
adc
mov
bound
mov
dec
adc
push
out
stos
icebp
lahf
lret
lds
add
rcr
into
pop
or
subl
sub
add
cmp
cltd
outsl
fisubrl
mov
lods
jb
mov
push
fidivl
dec
or
and
or
mov
in
mov
jp
xor
mov
frstor
sbb
das
loopne
mov
lods
shll
nop
add
lods
jae
pop
xor
in
mull
clc
or
add
std
sub
pop
lea
int3
mov
push
push
popf
gs
or
in
xor
js
mov
mov
add
adc
xchg
sub
sbb
mov
mov
mov
fsubs
and
test
fldenv
xchg
rolb
mov
dec
int
mov
mov
sti
test
pop
test
ret
test
add
or
inc
dec
call
pop
decl
xlat
arpl
dec
add
cld
in
out
mov
out
js
cmp
imul
xchg
std
and
icebp
in
sbb
and
inc
pushl
lock
insl
sbb
into
add
mov
inc
cmp
push
jmp
add
cmp
xchg
sub
nop
add
mov
xchg
mov
arpl
mov
ret
mov
imul
xchg
bound
mov
aam
testb
inc
and
cltd
imul
add
mov
das
xchg
aam
insb
mov
xchg
add
xlat
fcompl
or
dec
cmp
aaa
loop
mov
jge
inc
inc
sbb
cmpsl
or
add
sub
xor
mov
push
mov
sub
add
mov
mov
xchg
push
pusha
add
cmp
popa
mov
add
and
and
mov
jg
nop
add
xor
mov
sbb
mov
sbb
cmp
mov
test
sahf
jge
roll
dec
sub
fisttpll
mov
jne
repz
mov
inc
or
lds
imul
mov
rcrl
add
sbb
leave
mov
cmc
loope
bound
mov
xchg
adc
mov
mov
lds
adcl
mov
mov
add
sub
repnz
push
shll
mov
xchg
stos
sub
mov
ss
jmp
xor
add
mov
push
inc
add
sub
aaa
inc
lret
sub
rolb
mov
dec
mov
and
mov
in
das
inc
add
mov
mov
js
mov
ja
pop
inc
icebp
xor
push
inc
das
stos
push
repz
fs
fisttpl
inc
inc
subl
movsl
std
rorl
adc
push
dec
repnz
add
add
lret
leave
mov
inc
jb
mov
ret
inc
pop
add
mov
call
ret
movsl
jl
pop
pop
aad
mov
cmpsl
jg
dec
jmp
scas
mov
xor
test
hlt
fwait
and
adc
mov
daa
inc
jno
fstl
stos
adc
fsubs
inc
cmc
fwait
pop
push
insl
ret
test
add
rolb
shll
pushf
adc
addb
movsl
and
jge
enter
xchg
add
ds
dec
out
mov
scas
call
or
mov
and
in
repnz
pop
inc
inc
insb
fdivl
add
pop
and
ret
and
mov
jb
mov
movsl
dec
test
ss
cmp
insb
nop
add
lock
popf
jns
enter
sub
in
rcll
loop
mov
mov
add
icebp
dec
stos
addb
movsl
and
movsl
cltd
movl
ret
insb
incb
mov
mov
ljmp
fistpl
pop
or
dec
hlt
or
stos
sbb
push
push
add
pop
sarl
jl
mov
mov
rolb
mov
neg
cmp
stos
out
mov
mov
lds
mov
mov
push
jl
mov
inc
inc
add
mov
mov
mov
lcall
add
xor
mov
jbe
add
add
xchg
dec
aad
mov
dec
test
mov
pop
inc
cmp
adc
mov
int
pop
xchg
fsubl
add
inc
repnz
jp
fwait
ljmp
mov
test
imul
mov
sbb
and
add
push
lret
or
mov
lock
mov
outsl
movsb
cmc
out
movsb
ret
cld
dec
bound
mov
add
hlt
pop
add
notb
lds
mov
pop
sti
in
add
lods
fadds
mov
add
push
fsubr
cmp
push
push
cltd
jp
bound
mov
dec
inc
add
mov
add
mov
cwtl
jo
mov
and
int3
roll
rolb
mov
mov
mov
mov
xchg
and
xchg
xor
add
add
insl
pop
push
add
xor
jo
mov
add
add
loope
sti
dec
outsl
sahf
in
mov
rolb
mov
dec
and
add
stos
cmp
mov
pop
xchg
fdivrl
inc
gs
pop
cwtl
int3
jnp
mov
cmc
movsl
sub
ficoml
add
icebp
add
add
les
adc
mov
fldenv
rolb
cmp
mov
clc
bound
mov
sahf
dec
sbb
imul
add
or
add
dec
push
jl
sbb
addb
fcmovnb
jp
push
add
imul
sbb
add
inc
fimull
addb
mov
mov
mov
scas
mov
push
jp
pop
movsb
shrl
shll
jp
test
xlat
jbe
mov
addb
test
xor
scas
jecxz
outsb
fcmovbe
mov
jmp
cmpsl
hlt
cmp
lahf
cmc
addr16
push
cmpsl
jecxz
addb
in
mov
add
shll
cs
sub
xchg
add
mov
and
scas
ja
pop
hlt
fiadds
mulb
ret
std
jb
mov
push
add
ss
mov
shll
mov
adc
mov
mov
xor
add
mov
imul
or
nop
add
rolb
mov
das
and
mov
leave
dec
rorl
inc
add
push
mov
decb
std
arpl
pop
sarl
ret
sub
add
hlt
test
data16
push
add
add
mov
data16
add
mov
mov
xor
mov
sahf
mov
mov
jb
mov
in
jb
mov
lcall
mov
das
addb
and
mov
add
mov
push
add
bound
mov
shl
mov
imul
push
imul
add
mov
pop
xor
mov
or
popl
andl
add
dec
imul
and
mov
ljmp
add
shll
mov
mov
mov
dec
or
or
mov
adc
mov
test
loop
mov
in
add
mov
addb
cld
scas
cs
shl
sub
dec
gs
pop
mov
jmp
popf
cmp
inc
mov
mov
cmp
ja
fs
mov
mov
pop
xchg
mov
lret
mov
mov
push
dec
mov
movsb
inc
push
mov
mov
push
add
adc
push
adc
mov
and
pop
push
icebp
les
mov
cmpsl
lods
cmp
push
add
es
mov
scas
dec
out
int3
xchg
icebp
cmc
out
xchg
cmpsl
mov
popf
jae
cli
es
or
aas
ficomps
shll
repz
jne
stc
cmpsl
inc
add
aaa
test
sarl
and
mov
adc
mov
jl
add
imul
test
pop
sub
add
mov
push
popf
xlat
mul
add
lret
and
mov
xor
fsqrt
or
pop
rorl
jns
int
pop
inc
jl
add
fadds
mov
mov
sbb
int3
out
add
out
xchg
inc
add
vcvtsd2ss
or
push
ret
inc
fs
insb
xchg
enter
add
stos
push
aas
sub
or
test
xor
testl
xchg
mov
add
mov
cmp
fs
add
mov
mov
imull
add
mov
push
testl
mov
and
push
add
test
mov
je
mov
mov
sbb
mov
mov
and
mov
das
adc
mov
sbb
aad
shll
mov
mov
addb
mov
sub
out
aas
sub
bound
mov
mov
ficoms
fs
mov
jb
mov
daa
jmp
mov
inc
and
mov
pop
daa
sbb
add
popa
pop
and
out
add
add
or
mov
mov
imul
mov
add
idiv
or
add
push
addr16
pop
lock
call
jecxz
out
cld
outsl
cmpsl
inc
push
cs
sub
mov
add
sub
add
add
add
add
xchg
mov
fs
add
rorl
je
push
mov
add
mov
cmpsl
loopne
mov
fs
cli
xor
sbb
add
insl
mov
or
repnz
repnz
cmp
ljmp
add
mov
nop
add
mov
psubd
mov
test
dec
adc
hlt
sub
mov
jmp
push
popa
leave
cmpsl
ret
push
iret
inc
mov
out
mov
mov
add
mov
lret
add
adc
push
add
jb
mov
mov
imul
pop
sub
adc
pop
clc
mov
adc
mov
std
xor
lret
lea
lock
test
into
pop
inc
and
jnp
and
nop
add
sbb
dec
jecxz
in
into
sub
mov
add
mov
add
sbb
gs
lcall
xor
sbb
lahf
jo
mov
add
icebp
lret
xor
mov
rolb
fmulp
rolb
mov
movsl
xor
mov
negl
test
mov
rolb
mov
fidivs
or
test
mov
push
seta
add
pop
cmp
cmp
add
adc
mov
add
mov
lds
sahf
xchg
movsb
or
cmp
clc
cmp
adc
mov
icebp
adc
mov
in
push
jne
shll
pop
testl
lods
xchg
enter
imul
mov
cmp
add
mov
jecxz
push
out
push
jbe
inc
add
add
es
cmp
ret
cmp
xor
mov
mov
les
sub
xchg
add
nop
add
mov
mov
cmp
add
popf
push
ljmp
push
pop
out
stos
mov
arpl
cmp
mov
sub
jo
mov
xchg
clc
lock
add
mov
lods
add
pop
jl
mov
adc
mov
mov
push
or
stos
pop
mov
addb
inc
mov
ret
adc
inc
add
shll
mov
dec
out
divl
cmp
add
dec
fcoml
shrl
push
add
leave
aas
pushf
lret
adc
inc
sbb
or
xchg
nop
add
mov
clc
out
out
mul
mov
xor
mov
sub
or
aaa
stc
pop
mov
ds
mov
mov
add
cli
jo
mov
loop
mov
mov
add
mov
out
lret
mov
adc
sti
xchg
mov
pop
test
add
or
jnp
adc
lods
in
push
xlat
out
aad
xor
mov
mov
push
cmp
fmull
js
push
add
jns
xor
add
pop
pop
inc
cmp
xlat
push
adc
add
xchg
fs
stc
xor
add
xorl
pop
and
sub
mov
lcall
lock
lea
cmc
add
rolb
mov
add
scas
faddp
push
sbb
mov
fisttpl
pop
stos
and
sbb
icebp
push
xor
ret
test
add
add
lods
mov
aaa
pop
jnp
add
js
sahf
xchg
ss
sub
mov
add
add
push
add
lds
add
pop
mov
cmp
adc
mov
js
addr16
mov
add
adc
mov
and
and
add
add
and
mov
xchg
add
or
outsl
xchg
inc
push
jb
mov
add
add
lods
add
dec
enter
xchg
push
out
pushf
cli
inc
hlt
xor
mov
fs
lret
or
pushf
and
mov
fldenv
adc
mov
add
jnp
lods
xor
lock
mov
jmp
mov
jbe
cmc
fildl
push
add
lock
nop
add
adc
add
sub
jns
repnz
xchg
cmp
pop
sub
shll
mov
sti
imul
mov
mov
mov
bound
mov
gs
insl
stc
xchg
mov
xchg
or
scas
push
push
mov
push
jno
xor
mov
int3
inc
add
shrd
movsb
rolb
scas
mov
mov
inc
adc
in
push
add
push
sarl
mov
cmpsl
paddsw
in
imul
adc
jae
jle
rorl
mov
jnp
cwtl
dec
jnp
add
jmp
sub
les
add
dec
mov
dec
and
clc
jmp
add
fisttps
les
rorl
dec
dec
fcmovu
adc
aad
add
out
movd
mov
lods
es
mov
add
mov
jl
test
add
test
popf
or
cwtl
mov
fs
js
and
mov
xchg
mov
mov
addb
push
sub
addb
scas
pop
pushf
inc
cltd
lret
mov
add
daa
jl
testl
fnstenv
jbe
fnstsw
call
cs
jp
dec
sub
mov
add
or
mov
lods
sahf
vmread
or
test
aaa
add
mov
push
scas
rolb
mov
fs
std
jmp
jp
pushf
jecxz
rolb
mov
push
pop
mov
push
pop
in
test
push
dec
pop
mov
mov
add
add
mov
sub
daa
pop
jo
mov
sbb
movsb
ds
mov
push
mov
jecxz
add
add
cmp
out
out
cmp
gs
push
add
xchg
test
cld
jo
mov
push
bound
mov
movsl
into
stc
mov
pop
hlt
mov
add
mov
pop
and
adc
add
or
inc
add
add
mov
mov
push
inc
test
js
ror
add
mov
jnp
inc
add
sub
add
push
pop
and
mov
lock
pop
fidivs
mov
xor
mov
pop
xchg
addb
pop
std
mov
sbb
cmpsb
and
push
or
add
adc
jb
mov
pusha
add
mov
sbb
add
cmpsl
xchg
jne
pop
mov
movsl
mov
cltd
mov
scas
and
mov
push
es
pop
cmp
add
inc
add
out
adc
mov
mov
fdivrl
insl
jo
mov
mov
gs
aaa
mov
cmp
mov
cmp
xchg
aaa
cmp
out
pop
mov
or
mov
into
leave
mov
add
add
mov
add
pop
push
shrl
dec
not
test
mov
sbb
dec
jbe
add
int
push
cmp
xchg
jp
test
enter
cmp
mov
cwtl
shll
inc
into
mov
aam
imul
mov
outsb
mov
stc
pop
test
aaa
mov
push
sahf
nop
add
inc
dec
leave
out
out
lods
imul
rolb
mov
xor
inc
and
mov
push
adc
clc
mov
pop
popa
jo
mov
cli
in
cmp
loope
and
fmull
dec
pop
int
mov
add
out
out
dec
pop
jb
mov
test
dec
adc
mov
pop
and
out
stc
mov
pop
jno
add
cmpsb
test
std
lret
sub
dec
mov
pop
in
cmp
cmc
mov
add
push
rolb
mov
sub
xor
lahf
jb
mov
mov
add
shr
push
out
std
jge
add
sub
stc
mov
aas
mov
das
cmp
add
jne
inc
add
push
mov
mov
add
xor
xchg
dec
sbb
scas
ljmp
les
test
cmp
sbb
jp
dec
gs
pop
mov
es
test
rolb
mov
add
xor
mov
cmp
icebp
out
mov
lret
repz
mov
aam
pop
jle
mov
loopne
mov
mov
mov
popf
daa
ret
xchg
push
mov
push
lea
pop
int3
mov
ret
aad
push
add
pop
aas
sbbl
mov
in
add
xor
jnp
pop
call
cli
mov
add
icebp
dec
jmp
mov
add
push
aad
cmp
sbb
dec
push
add
mov
sub
das
xor
mov
stc
cmp
jno
xchg
add
inc
add
xor
add
push
mov
push
add
in
loop
mov
fstpl
push
imul
mov
add
movsl
mov
out
lock
addb
in
inc
xchg
sti
leave
cmp
inc
sub
je
fidivl
jmp
fwait
xchg
cld
xchg
and
mov
bound
mov
test
popf
or
add
mov
je
std
pusha
add
jno
addb
dec
xchg
imul
shll
dec
or
in
mov
push
imul
and
add
xor
xor
mov
xor
sbb
popa
mov
rolb
mov
orl
mov
rcrl
push
lret
cmpsb
fldt
add
push
imul
mov
add
adc
mov
mov
popa
pushl
add
scas
icebp
pop
leave
sbb
sldt
mov
pop
scas
xor
mov
lods
lret
add
add
out
xchg
out
adc
mov
mov
dec
pop
test
inc
dec
xor
mov
in
mov
add
and
pop
in
out
cs
jb
mov
add
mov
adc
mov
push
adc
pushf
mov
push
cmp
xchg
orl
outsb
icebp
sub
mov
ss
icebp
and
and
mov
pop
cli
jnp
cli
dec
mov
sub
cmpsb
enter
add
sbb
cmp
inc
ljmp
pop
ja
out
ja
xor
mov
pop
sub
sbb
add
jae
mov
xchg
or
push
js
fidivrl
inc
add
repnz
dec
incb
mov
mov
and
addb
sub
pusha
add
add
out
xor
ret
out
arpl
add
popf
daa
stos
std
mov
sti
ret
inc
add
jecxz
inc
sbb
fstpt
in
test
stc
loopne
mov
pop
cs
addr16
push
dec
push
xchg
add
mov
pop
add
rolb
mov
mov
decl
add
dec
popa
pop
push
push
add
pusha
add
hlt
lods
add
cli
mov
inc
sub
aam
adc
mov
xchg
sbb
inc
add
fisttpl
arpl
hlt
mov
cmp
addb
fisubs
out
dec
out
xchg
sub
pop
xchg
rolb
rolb
imul
push
scas
and
mov
pushf
repz
or
loope
add
jns
mov
mov
dec
cmp
adc
jne
andl
add
in
xor
arpl
cmpsl
stos
es
iret
mov
arpl
mov
icebp
xor
mov
nop
add
mov
push
stc
add
mov
or
add
and
mov
sub
add
mov
cmp
add
mov
pop
xchg
mov
mov
loope
jb
mov
sbb
mov
add
and
loopne
mov
das
lods
aam
jl
xchg
lret
fstp
les
add
mov
lret
cmp
je
lret
mov
mov
and
lds
enter
pop
ss
pop
je
adc
mov
fcomps
push
aam
push
fimuls
add
inc
xchg
in
fdivs
cltd
inc
xchg
cltd
push
add
ljmp
mov
add
push
add
rolb
insl
ret
leave
add
addb
push
add
jne
jmp
bound
mov
pushf
arpl
xlat
sti
xor
add
xor
mov
xchg
add
les
out
imul
cmp
dec
aad
add
sub
xchg
ss
cmpsl
and
mov
jbe
cmpsb
jae
or
in
pop
pop
push
daa
inc
cmp
pop
cs
loopne
mov
mov
push
gs
xchg
add
mov
mov
add
push
addr16
outsb
and
jns
pop
and
mov
jmp
in
lods
mov
je
jnp
add
imul
mov
std
pushf
xchg
mov
bound
mov
mov
cmpl
ds
add
pop
cmp
xor
pop
ret
dec
mov
lods
cmpsl
fcom
xchg
fdivrl
sti
sub
lahf
dec
add
push
fwait
xor
and
mov
scas
pop
pop
pop
add
mov
ss
mov
addb
lock
leave
xchg
add
add
mov
xor
mov
add
cmp
add
add
sub
inc
and
ret
add
cli
loope
call
add
pop
sbb
loope
inc
push
xchg
es
clc
add
add
mov
push
add
add
mov
sub
std
mov
mov
in
add
add
add
add
add
cld
jp
sub
sbb
cmp
stc
inc
addr16
add
inc
add
mov
repnz
add
mov
mov
in
cld
mov
xchg
pop
add
rolb
mov
add
fwait
in
add
ja
add
sbb
loopne
mov
dec
inc
or
fnstcw
add
mov
mov
mov
loope
sbb
or
add
mov
loopne
mov
fucomp
pop
fsub
add
je
bound
mov
push
jp
add
mov
or
test
insb
data16
pop
outsl
pusha
add
add
mov
aam
nop
add
mov
pop
xor
mov
movsl
decl
rolb
mov
inc
mov
pop
fadd
popa
into
popf
rolb
mov
add
mov
nop
add
or
outsb
mov
add
and
mov
push
dec
mov
pop
lods
add
das
mov
and
pop
jecxz
shll
jmp
adc
mov
add
jl
add
cli
call
mov
test
mov
add
inc
ss
mov
cltd
lcall
push
sub
imul
push
sub
or
add
inc
add
sahf
push
cwtl
xchg
mov
add
loopne
mov
arpl
ret
mov
pop
push
lret
jae
and
mov
pop
mov
jns
cmp
aas
popf
mov
test
hlt
fxch
orl
jb
mov
pop
fdivrl
pop
pushf
xchg
push
inc
push
add
in
xor
mov
std
mov
movsb
mov
pop
repnz
sti
xchg
out
enter
sub
cmpsb
mov
add
mov
add
jecxz
int
pop
repz
lret
xchg
int
cltd
sti
pushf
adc
and
enter
fucomp
push
mov
mov
cltd
jl
fistl
mov
pop
test
add
mov
add
addb
pop
sarl
sub
insb
into
adc
mov
fwait
sub
pop
jl
push
pop
pop
sub
movsb
push
push
add
mov
mov
add
xchg
mov
jp
inc
out
add
adc
int
in
push
loope
mov
sti
ss
push
sbb
pop
in
dec
dec
mov
mov
add
sbb
pop
bound
mov
je
iret
adc
mov
in
inc
fwait
sub
int3
mov
push
js
js
push
mull
enter
or
add
mov
sahf
push
out
pop
cmpsl
jmp
pop
pop
ret
mov
push
add
add
mov
mov
hlt
test
and
add
jnp
into
xchg
inc
mov
pop
lret
insb
adc
in
push
dec
not
cmc
mov
repnz
mov
push
lret
call
pop
frstor
add
repz
mov
out
lea
data16
addl
xor
cmp
jne
mov
add
mov
xchg
fistpll
leave
mov
push
aad
mov
mov
cmp
outsb
cld
cmp
lds
btc
loope
mov
mov
movsb
pop
sbb
fimuls
int
andl
cmp
div
call
jo
mov
imul
es
int3
push
movsl
fwait
notl
ja
cmp
mov
mov
add
fs
mov
hlt
addb
jns
or
lret
dec
mov
and
push
lock
ss
add
xchg
lods
cmp
add
sub
xchg
jg
inc
jae
add
ss
xor
sbb
add
inc
add
push
jmp
add
repz
mov
and
mov
add
rolb
mov
or
jle
pop
aad
mov
movsl
xchg
hlt
stc
in
lcall
ss
mov
add
cli
pop
push
inc
mov
fists
mov
add
add
mov
sub
add
adc
mov
mov
jb
mov
cld
mov
xor
mov
mov
mov
aam
sbb
inc
add
fwait
lods
test
imul
fdivs
xlat
fwait
paddq
push
push
jb
mov
mov
add
add
subl
sub
push
frstor
xchg
fcoms
pop
lock
lret
cmp
add
mov
cmp
mov
mov
int3
loop
mov
jle
enter
jmp
or
add
add
mov
pop
cli
es
push
pop
stos
or
mov
in
jnp
add
icebp
and
adc
dec
addb
dec
mov
cltd
test
or
movsb
mov
xor
mov
xchg
sub
mov
dec
lret
xchg
push
in
leave
push
dec
andl
add
mov
jo
mov
adc
add
stc
and
mov
inc
and
mov
sub
mov
mov
jge
enter
mov
stos
mov
add
std
push
push
pop
add
add
push
and
xchg
inc
in
add
dec
stos
fadd
aas
or
sub
push
push
and
mov
jecxz
filds
cmpsb
in
xchg
les
add
sbb
add
mov
mov
push
sbb
sti
xchg
push
test
fbstp
out
jno
add
add
mov
scas
fcompl
pop
xchg
ret
cmpsb
cmp
add
loope
cmp
aad
js
and
add
cltd
test
fsubr
mov
mov
mov
faddl
and
jge
cli
cld
mov
aaa
adc
pop
test
mov
jl
inc
add
add
inc
add
cli
cmp
inc
dec
outsl
jmp
enter
inc
sbb
mov
arpl
mov
push
add
outsl
or
clc
sub
adc
push
pop
das
xor
mov
lcall
stos
loop
mov
mov
inc
push
inc
push
add
mov
add
shl
movsb
xor
mov
mov
lret
push
or
add
mov
mov
rolb
or
cmp
cmp
xchg
add
inc
call
mov
decb
adc
mov
mov
lret
repnz
mov
into
imul
push
push
xor
in
fwait
sbb
les
mov
lahf
add
jne
loope
add
fdivrl
mov
inc
pop
sbb
sbb
push
bound
mov
rcrl
and
mov
xchg
dec
sbb
sbb
mov
fisttps
push
pop
bt
mov
dec
loopne
mov
ds
aaa
mov
add
jle
pop
and
std
pop
outsl
sti
aam
test
add
xchg
call
das
push
jnp
xchg
cmp
sub
mov
mov
push
repnz
mov
xor
pop
pusha
add
add
sbb
sub
cmpl
mov
dec
and
mov
addb
add
inc
sbb
adc
mov
insb
xor
mov
xor
push
call
outsl
aad
imul
add
add
add
mov
add
outsl
jnp
pop
test
and
cmp
daa
and
mov
les
scas
leave
ss
jmp
add
call
inc
xchg
mov
mov
xorl
jle
jnp
int
mov
mov
mov
xchg
ret
je
iret
imulb
insl
jmp
imul
rolb
mov
jecxz
in
cld
pop
mov
mov
mov
out
inc
dec
mov
pop
xor
mov
or
rolb
mov
ss
lret
in
test
inc
ret
mov
