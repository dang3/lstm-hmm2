scas
add
dec
in
jns
mov
or
loope
icebp
mov
std
popa
bound
mov
add
mov
xor
call
test
rep
test
or
add
lock
mov
xchg
rolb
mov
add
add
add
add
outsl
ret
mov
mov
cli
push
fwait
ret
sub
add
push
mov
popa
jmp
add
mov
mov
pushl
mov
das
addb
ja
js
inc
test
faddl
movaps
lcall
loopne
mov
mov
mov
dec
js
scas
inc
jne
fdivrl
mov
fcom
aaa
sub
inc
push
and
mov
jae
in
push
add
fistps
pop
fwait
cltd
jmp
scas
xchg
add
sub
jp
fs
xchg
das
rolb
mov
mov
clc
lcall
add
mov
add
mov
lock
or
scas
pop
jmp
mov
int3
cld
fldt
add
std
push
jmp
shl
push
das
xlat
sti
aad
jbe
mov
adc
mov
mov
lds
sbb
loope
sbb
data16
mov
or
mov
push
lahf
xlat
mov
repnz
inc
add
mov
mov
dec
sahf
roll
mov
add
ds
xchg
or
sbb
in
into
push
pop
cmp
into
lods
scas
out
mov
out
sub
adc
rolb
mov
add
and
adc
mov
loope
shr
ljmp
sbb
aaa
mov
popa
ds
sbb
mov
mov
mov
insb
mov
jo
mov
lock
dec
cmpsl
in
shll
out
add
test
push
add
mov
sbb
sub
cld
out
jg
jg
mov
dec
fimuls
sti
pop
enter
mov
sub
cltd
jle
js
hlt
cmp
sbb
or
rolb
in
add
pop
aaa
out
mov
mov
mov
mov
mov
push
sub
inc
push
fsubp
add
mov
xchg
fsubl
jae
leave
out
sub
add
pop
fsubrs
aam
sub
imul
sub
xor
daa
aam
xchg
add
xor
insl
lret
ja
jnp
inc
inc
add
mov
mov
add
mov
repz
mov
add
and
push
aam
scas
mov
jno
into
xchg
popa
jge
rolb
mov
add
mov
cmpsb
ss
mov
xlat
outsl
cmp
mov
xchg
stos
or
add
clc
inc
add
add
rcrl
xchg
add
rolb
mov
cmp
js
cmpsl
push
or
scas
mov
adc
add
jecxz
dec
pop
or
adc
fwait
outsb
addb
fdivl
imul
xor
rcrl
out
mov
movsl
sbb
shll
add
out
lcallw
pop
push
bound
mov
jae
add
mov
out
jp
pop
jl
hlt
mov
mov
pop
aas
sub
pop
mov
rolb
mov
pop
sub
ja
pop
xlat
and
movsl
mov
leave
std
jae
popf
fs
dec
xor
mov
mov
push
and
sahf
repz
add
or
xchg
fisubl
add
nop
add
in
lahf
or
jl
sub
xchg
add
mov
jae
push
lahf
xchg
pop
adc
mov
jl
push
lahf
leave
rolb
pop
scas
cmp
test
jb
mov
es
clc
mov
add
mov
push
js
add
negl
pop
add
fdivrs
add
cmpsl
mov
je
add
push
jmp
dec
cs
xchg
imul
cmpsl
cwtl
mov
add
mov
movsl
in
movsb
mov
xchg
add
mov
gs
sbb
xchg
aaa
rolb
mov
leave
out
sbb
icebp
xor
mov
dec
sbbl
adc
pop
pop
sbb
pusha
add
mov
push
cwtl
push
adc
das
lea
mov
lahf
and
leave
sti
popf
sub
int3
and
or
fdivrl
inc
mov
mov
jge
mov
mov
jae
mov
icebp
ds
or
add
add
stos
push
mov
add
cltd
lea
stos
mov
jnp
add
imul
sbb
inc
inc
fwait
sub
out
mov
mov
push
int3
inc
sbb
add
inc
add
add
mov
add
xor
outsb
sti
divl
add
adc
mov
ss
mov
mov
punpcklbw
mov
fidivs
mov
pop
rolb
xchg
cmp
adc
les
add
enter
add
xchg
mov
or
mov
stos
arpl
add
or
sbb
adc
add
fs
aas
dec
or
dec
jmp
insb
sbb
stos
test
pusha
add
cltd
push
lahf
faddl
daa
inc
add
mov
add
jecxz
dec
cmpl
add
mov
mov
aaa
cmp
cmpsb
push
cmpsb
fucomp
repz
sub
jno
enter
rolb
mov
inc
add
xchg
sbb
leave
cmp
mov
addb
mov
mov
jmp
daa
adc
mov
and
cmp
jnp
fldcw
mov
add
mov
add
mov
sti
lods
jle
mov
mov
pop
clc
jecxz
sti
mov
mov
add
mov
movsl
nop
add
or
sbb
add
sbb
dec
cmpsl
mov
add
popf
cmp
mov
cwtl
adc
add
add
mov
xchg
push
or
jns
cld
mov
dec
lods
loope
add
lret
lcall
outsb
or
nop
add
xchg
jl
mov
int3
add
test
dec
mov
adc
addr16
rolb
mov
repz
add
xor
mov
push
inc
add
sbb
movsb
inc
cltd
rcr
sbb
js
and
mov
push
add
aam
mov
mov
push
or
cmp
mov
fldenv
lods
xchg
add
mov
mov
xchg
pop
jge
popa
out
aad
add
mov
in
push
sub
or
scas
jecxz
jmp
mov
adc
mov
jno
add
insb
in
add
into
and
cld
cs
jo
mov
xchg
add
jnp
dec
mov
mov
jns
mov
std
sbb
mov
outsb
xor
mov
lock
mov
push
jl
ja
test
xchg
or
outsb
lock
jbe
add
push
mov
add
xchg
add
mov
leave
sub
addb
cld
addl
and
add
or
scas
xchg
and
jns
jecxz
sti
dec
data16
pop
push
add
jl
stos
mov
mov
pop
fstp
fcmovne
stos
fcmovnb
cmc
repnz
push
pop
icebp
and
mov
and
add
loope
add
inc
pop
notl
add
xchg
jo
mov
and
or
mov
add
test
pop
add
mov
add
mov
inc
add
jecxz
xchg
push
rolb
mov
mov
push
dec
std
daa
xchg
or
loopne,pt
mov
and
mov
dec
mov
test
and
mov
insl
xor
mov
loop
mov
jnp
ret
xchg
aam
aam
add
add
push
dec
or
mov
mov
xor
fiadds
inc
add
test
jl
xchg
das
mov
rolb
mov
mov
sbb
sbb
aam
mov
xchg
out
lods
jecxz
add
sahf
int3
push
lock
push
pop
pop
shll
mov
mov
mov
fs
adc
sub
mov
xor
int
mov
mov
xchg
inc
add
mov
cmpsb
sti
jecxz
add
sub
addr16
gs
add
inc
add
pushl
leave
loop
mov
addr16
push
pop
js
jno
cltd
stos
dec
bound
mov
jmp
in
sahf
lcall
mov
imulb
mov
push
mov
fcomi
xchg
fiaddl
rolb
pop
xchg
popa
nop
add
or
cmpsl
jl
gs
in
cmp
xchg
sub
sbb
loopne
mov
mov
inc
sub
cmp
arpl
adc
mov
add
mov
mov
mov
rolb
mov
add
pop
xlat
aam
lods
or
btcl
fldcw
pop
aad
add
frstor
insb
xchg
sbb
popa
into
repz
add
lock
sbb
jp
and
mov
loope
enter
mov
mov
mov
imul
jecxz
shr
addb
sbb
pop
mov
add
iret
push
lret
pushf
sub
in
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
or
mov
loop
mov
add
ja
or
add
insb
xor
pop
inc
jmp
push
adc
out
in
sub
adc
mov
or
cwtl
shll
push
cli
or
nop
add
pop
mov
mov
sbb
lods
call
loopne
mov
les
lea
ret
in
scas
insl
mov
add
add
adc
mov
sub
add
jno
jo
mov
lock
popf
mov
fdivrl
arpl
add
jne
add
add
mov
sti
pop
lret
sbb
je
add
jae
sub
mov
xchg
push
cmc
ja
in
out
dec
mov
outsb
icebp
mov
sbb
push
shrl
insb
stc
dec
inc
movsb
push
bound
mov
pop
rolb
mov
add
rolb
mov
pop
cmp
add
int
add
mov
mov
mov
je
adc
imul
cld
jle
cwtl
mov
mov
into
jno
jns
clc
pop
inc
ss
imul
add
or
pop
and
mov
mov
imul
add
loope
cmc
jp
test
mov
or
sbb
dec
jno
add
jp
mov
add
or
add
mov
movsl
dec
es
int
add
mov
and
mov
in
pop
inc
mov
ret
jle
in
daa
xchg
addb
sarl
jle
rolb
ljmp
repz
rolb
mov
mov
xchg
inc
inc
xor
or
adc
xchg
xchg
add
mov
add
mov
lods
clc
mov
daa
lods
test
add
inc
add
add
mov
mov
int
adc
mov
mov
mov
cmp
mov
jo
mov
xchg
dec
sub
add
mov
xchg
cs
into
mov
repnz
add
mov
xlat
inc
add
aam
mov
mov
das
pushf
or
es
add
jo
mov
xor
in
and
mov
aas
sub
test
in
lret
jmp
add
or
add
lods
jg
rolb
mov
pop
adc
and
mov
or
dec
jo
mov
mov
imul
mov
cltd
dec
pop
aad
jno
push
push
pop
add
mov
pop
cmp
add
cmp
in
lods
adc
add
in
add
pop
inc
xor
add
test
mov
or
insb
push
mov
rolb
dec
mov
add
movsb
mov
xchg
lods
sbb
inc
xor
mov
mov
add
mov
push
movsl
movsl
push
es
lock
cmc
push
push
and
add
or
sub
std
repnz
add
and
mov
push
add
add
xchg
nop
add
push
add
mov
mov
push
add
push
cmp
push
fisubrl
sub
sub
or
add
arpl
ljmp
fsts
add
icebp
in
loop
mov
pop
dec
mov
xchg
cmp
add
mov
push
xchg
add
cmp
mov
mov
or
sti
mov
clc
fiaddl
and
inc
aam
and
mov
int
pop
inc
and
daa
dec
pusha
add
jecxz
repnz
es
outsb
push
jg
inc
add
fcom
int3
int
fidivl
mov
sbb
int
fisubl
add
push
mov
inc
fstpt
daa
xchg
add
add
dec
push
and
arpl
mov
and
add
mov
dec
in
cmc
and
mov
mov
ds
repnz
add
cmp
outsl
xchg
sub
mov
sti
loope
mov
xor
mov
add
mov
mov
js
add
loop
mov
outsl
adc
dec
repnz
das
out
xchg
gs
ds
test
int
mov
iret
push
add
sbbl
jp
lret
rorl
sub
add
add
inc
sqrtps
add
mov
xlat
cmp
push
repz
fucompp
cld
push
add
loopne
mov
and
push
add
std
xchg
dec
aad
push
cmpsl
jb
mov
mov
mov
insl
pushf
push
add
std
mov
pop
out
add
mov
pusha
add
mov
push
add
push
jp
dec
push
cmp
fsubrl
dec
mov
mov
mov
sbb
add
sbb
inc
xor
mov
sub
or
add
test
add
fldl
pop
nop
add
ficomps
mov
add
add
or
mov
in
lock
push
or
add
mov
push
pop
mov
fcomp
mov
mov
out
lds
sarl
add
test
scas
arpl
push
jo
mov
and
add
and
mov
xchg
jne
add
mov
in
jge
push
cmp
pusha
add
mov
jge
sbb
add
insb
and
sub
adc
mov
roll
dec
loopne
mov
xor
jmp
add
add
imul
outsb
lahf
pop
mov
mov
add
cltd
mov
cmpsl
fildl
notl
stos
imul
test
xor
mov
mov
stos
call
add
mov
jae
pusha
add
movsl
sbb
fsubp
stos
mov
add
fistl
jnp
push
add
pop
cli
push
outsl
xor
mov
dec
add
jns
mov
add
xor
test
add
jns
xor
mov
add
xor
add
mov
lcall
dec
loope
mov
dec
and
pshufw
pop
std
loopne
mov
xor
sub
mov
mov
mov
mov
mov
push
popa
push
adc
xchg
mov
fiadds
lahf
imul
jle
add
andnps
lock
dec
inc
add
insb
int
fistpll
mov
ret
xchg
xchg
push
jne
inc
add
mov
inc
lods
movsb
daa
pop
aaa
xor
jno
push
mov
test
mov
or
add
in
cld
mov
lahf
fsubr
popf
testb
add
addr16
out
and
jmp
lods
xchg
sbb
cmp
ficompl
js,pt
mov
inc
dec
cmp
cmpsl
add
test
jb
mov
inc
ljmp
test
out
loopne,pt
mov
sbb
fs
mov
add
clc
mov
add
push
imul
cmpsl
rolb
mov
in
mov
pop
jb
mov
mov
mov
cs
je
cltd
adc
arpl
pop
leave
cwtl
mov
or
mov
push
pop
pusha
add
sbb
movsb
or
adc
xor
mov
stc
mov
fists
das
mov
cmp
push
scas
xor
mov
cmp
sub
rolb
mov
ret
loope
add
dec
leave
mov
sbb
movsb
sub
cld
mov
movsb
pop
stc
add
pop
sbb
into
pusha
add
or
xor
mov
add
mov
adc
mov
add
add
iret
into
add
test
in
out
ja
adc
lret
jl
lock
add
stos
push
pop
add
cmpl
mov
mov
add
pop
adc
mov
out
add
rcrl
add
add
mov
mov
dec
ja
stc
push
add
fldt
cmpsb
test
jle
adc
adc
sbb
cs
add
sbb
sbb
cmp
mov
mov
mov
nop
add
loopne
mov
xchg
mov
mul
scas
lods
inc
add
mov
add
adc
cmp
rcll
mov
movsb
sub
mov
mov
sahf
or
lods
fisttpll
inc
add
add
sti
mov
mov
out
inc
add
push
leave
sarl
or
fcomps
adc
mov
jnp
lret
data16
mov
add
test
sbb
jg
fsubrl
out
jo
mov
out
rorl
inc
push
push
and
mov
jmp
or
cmc
mov
adc
mov
leave
test
icebp
inc
inc
sub
stos
loop
mov
ja
xor
mov
fnsave
add
rolb
mov
and
pop
inc
test
cmp
sub
cmc
or
outsl
xchg
bound
mov
push
xor
mov
add
aad
scas
or
shl
add
mov
mov
add
mov
fisttpl
and
in
mov
mov
divl
mov
pop
add
mov
fsts
out
mov
pushf
dec
sar
cli
fwait
adc
mov
or
ljmp
add
std
xchg
mov
push
add
cmp
push
add
push
andl
popf
bound
mov
add
popf
push
cwtl
stos
jl
add
mov
push
pop
dec
mov
inc
dec
lods
adc
mov
add
rolb
mov
mov
iret
cld
jle
pop
ss
jge
int3
les
and
add
mov
adc
xchg
push
add
sub
pop
dec
xchg
cld
or
leave
mov
jae
fisttps
add
xchg
mov
add
mov
sbb
mov
pushf
push
popl
push
in
add
add
mov
je
push
fists
lahf
mov
in
sbb
and
mov
mov
jl
divb
cmpsb
push
lret
xor
mov
cltd
lods
jmp
loope
push
nop
add
cld
lret
or
mov
scas
sub
out
imul
faddl
add
in
test
mov
mov
arpl
sbb
add
mov
fcomp
mov
pushf
jge
push
jnp
sub
inc
mov
shrl
lea
stos
ds
idivl
cmpsb
adc
xchg
mov
test
push
jae
rolb
push
push
add
add
mov
mov
mov
cmp
mov
fldl
add
jb
mov
add
or
mov
loopne
mov
addr16
stc
and
je
rep
cmc
rolb
mov
call
sub
mov
push
mov
hlt
adc
mov
nop
add
add
stos
arpl
mov
lea
sbb
mov
jne
test
nop
add
pop
notl
add
dec
popf
lods
inc
pop
js
scas
adc
add
mov
jp
add
push
add
sub
test
jmp
jno
nop
add
jne
test
mov
add
adc
mov
out
xchg
xor
mov
je
add
add
loopne
mov
xchg
add
xchg
push
push
mov
adc
mov
pop
or
inc
mov
int3
dec
scas
insb
mov
cli
and
mov
jno
mov
mov
pusha
add
push
and
andl
jp
dec
imul
bound
mov
mov
ljmp
addb
imul
add
or
mov
mov
inc
inc
dec
adc
icebp
jnp
add
imul
pop
pusha
add
ret
scas
aad
add
add
ud0
add
decl
push
inc
mov
mov
mov
jmp
sub
mov
aad
push
add
ss
mov
imul
out
ss
pop
iret
lds
xor
je
clc
add
shl
push
repnz
xchg
add
dec
mov
inc
mov
add
add
xor
mov
mov
mov
and
sub
add
or
pop
or
jmp
xchg
add
cmpl
cmpsl
pop
jae
add
mov
mov
xor
push
add
call
jge
ret
popa
or
xchg
add
mov
add
int
rolb
mov
xor
inc
add
mov
fwait
cmpsl
enter
sub
popf
lods
xchg
mov
cmc
sub
cmp
loop
mov
sbb
add
add
xchg
mov
repnz
mov
add
dec
mov
mov
rolb
cmp
popa
mov
mov
outsl
addl
jge
loop
mov
movsb
mov
popa
add
test
js
push
add
add
mov
jne
mov
jg
fwait
push
xlat
adc
sahf
ljmp
mov
out
push
cs
dec
pop
xchg
addb
dec
add
add
ljmp
add
add
jae
test
pop
mov
movsl
insb
adc
add
mov
rolb
loopne
mov
mov
out
cmp
in
push
or
sbb
add
inc
push
jo
mov
mov
jne
out
pop
lea
ret
test
add
mov
sub
pushf
or
out
rolb
mov
loopne
mov
add
add
es
dec
in
repnz
mov
insb
jne
mov
xchg
add
out
add
das
sub
or
add
into
xor
mov
icebp
cmp
js
hlt
mov
mov
mov
mov
dec
pop
movsl
lods
xchg
int
push
adc
pop
xchg
adc
mov
push
mov
pusha
add
add
rcll
mov
ret
in
adc
addb
xor
mov
jmp
test
sbb
mov
jle
add
into
dec
mov
push
les
mov
mov
scas
lock
scas
rolb
mov
mov
in
add
jle
sbb
dec
sahf
aas
fsub
add
add
add
pushf
push
add
aad
add
mov
js
xchg
mov
push
pushf
cld
mov
or
loope
xor
mov
andl
in
inc
icebp
jl
cld
xor
cmp
cmp
imul
xor
mov
or
push
add
add
add
mov
pusha
add
sbb
push
cwtl
test
mov
scas
jge
insb
and
cs
pop
and
pop
aaa
insb
stos
mov
add
push
add
cmp
xchg
insb
jle
cwtl
pop
outsb
inc
jmp
cmc
rcrl
cltd
stos
xchg
or
add
in
xlat
fs
pop
data16
mov
out
add
mov
into
xchg
xchg
add
mov
jo
mov
addb
jecxz
mov
cwtl
rolb
mov
sub
repnz
sub
add
mov
ret
sti
in
mov
sbb
incb
addr16
data16
lds
mov
mov
jbe
pop
cmpsb
jle
adc
test
call
add
mov
add
jmp
gs
iret
rolb
mov
add
mov
pop
insl
inc
adc
andl
cmpsl
pop
je
fs
add
jb
mov
mov
mov
dec
outsl
in
mov
adcl
push
or
push
jnp
imul
add
mov
sub
jne
cmpsb
fwait
icebp
scas
rcl
mov
testb
mov
sar
mov
mov
lods
in
pop
arpl
add
lahf
inc
push
add
mov
mov
dec
jmp
and
mov
fwait
and
mov
mov
jmp
push
pop
pop
insl
jp
in
or
mov
add
xor
mov
push
mov
mov
xor
mov
lds
pop
aad
mov
dec
pop
sahf
sbb
add
jb
mov
jo
mov
jne
add
pop
xchg
cmp
push
adc
cltd
pop
je
jle
scas
repnz
mov
xchg
push
cmp
or
mov
dec
ljmp
mov
mov
int
adc
mov
call
jecxz
sbb
mov
mov
mov
or
mov
scas
add
iret
adc
xor
push
xor
mov
and
mov
mov
sbb
add
adc
add
sub
js
adc
jp
pop
mov
xor
mov
add
push
jecxz
cs
xchg
movsl
addb
das
pushf
mov
push
mov
mov
mov
xor
mov
loopne
mov
sub
sahf
fwait
or
lret
jbe
loope
addr16
jae
add
lcall
lret
mov
iret
outsb
push
pop
js
jno
add
js
test
mov
repz
stos
fisttpl
mull
mov
mov
jo
mov
rolb
movsb
aaa
inc
mov
mov
test
jle
mov
mov
mov
scas
aaa
dec
rcll
push
add
notl
add
cmp
les
dec
pop
mov
add
push
add
mov
xor
mov
cmc
pop
adc
testl
add
loop
mov
jg
add
mov
cld
sub
fildll
dec
cmp
mov
sub
in
xchg
cmpsl
arpl
adc
mov
ja,pn
add
xchg
aam
clc
ficoml
aad
clc
add
jp
add
mov
cmp
push
and
es
jmp
add
cld
fsubrl
xchg
add
pop
repnz
add
shl
and
push
out
lret
pop
mov
imul
xchg
dec
add
pop
jle
jp
stc
into
in
xor
mov
xchg
test
iret
sbb
nop
add
gs
inc
iret
jne
cmp
xchg
loopne
mov
and
mov
fiaddl
mov
mov
rcl
scas
mov
sbb
add
add
shr
fdivl
mov
mov
dec
sub
ljmp
adc
cltd
ficoms
mov
mov
or
xchg
add
mov
addb
adc
mov
add
mov
xchg
test
stc
bound
mov
xchg
push
add
aad
jo
mov
es
loop
mov
xchg
out
dec
aaa
mov
lods
lds
mov
mov
mov
nop
add
das
or
add
call
pop
pop
mull
lret
mov
push
add
mov
add
lds
cmpl
lcall
sbb
cld
pushf
push
mov
dec
stc
cmp
add
mov
insl
cmpsl
mov
vmovapd
enter
leave
xor
dec
fwait
cltd
mov
xchg
icebp
pop
iret
adc
int3
loopne
mov
inc
add
add
mov
and
loop
mov
add
add
lcallw
lea
pusha
add
cmc
repz
or
sub
mov
add
repz
popa
call
pushf
out
xchg
mov
mov
call
mov
insl
rolb
mov
mov
xlat
icebp
insb
movsb
ret
add
mov
adc
mull
add
inc
add
pop
lds
mov
push
andl
pop
xchg
mov
dec
lds
mov
popf
cmp
sub
addr16
shrl
popa
xchg
push
mov
idivl
add
mov
ss
add
push
pushf
lea
add
or
js
or
add
jne
in
mov
xchg
int3
mov
dec
icebp
aas
arpl
icebp
inc
in
mov
mov
lods
push
aad
outsb
xchg
mov
lcall
push
mov
add
dec
sahf
das
inc
hlt
scas
pusha
add
xor
mov
jmp
lea
in
pop
loop
mov
popf
out
lcall
addl
push
js
jo
mov
dec
cmp
pop
sbb
je
add
cli
mov
mov
enter
es
dec
ja
pop
repnz
add
testl
jo
mov
mov
arpl
aaa
iret
mov
add
pop
mov
mov
add
add
add
add
mov
aas
xor
mov
fdivr
mov
add
xchg
sbb
add
insb
or
add
cwtl
add
mov
or
add
mov
rolb
mov
and
mov
daa
repz
into
mov
jp
int
sbb
mov
pop
in
inc
add
loope
scas
into
jns
inc
add
and
std
mov
jo
mov
mov
aaa
inc
and
mov
pop
mov
xchg
inc
inc
add
add
stos
in
sbb
hlt
mov
imul
std
lcall
mov
in
shrl
add
jl
jl
add
add
mov
cmpsl
mov
mov
dec
dec
mov
xchg
nop
add
mov
jb
mov
add
add
mov
add
xchg
add
xor
mov
jae
pushf
es
mov
mov
dec
xor
lahf
dec
in
sub
ja
add
mov
enter
out
dec
scas
and
xchg
mov
mov
adc
add
fsubrs
mov
adc
mov
cs
cmpsb
lods
cmp
pop
sub
mov
xchg
rolb
push
int
push
xchg
rolb
out
les
sbb
xchg
cwtl
and
mov
jnp
push
sti
jns
insl
xor
mov
pop
notl
std
icebp
and
pop
mov
or
add
jns
add
mov
je
adcl
add
outsl
mov
mov
add
icebp
movsl
add
push
xorl
dec
call
mov
jo
mov
mov
movb
dec
call
add
imul
jle
jl
mov
mov
push
xor
mov
and
mov
add
daa
imul
ss
add
mov
sub
mov
or
push
pop
sbb
and
outsl
fisttpl
jmp
inc
test
adc
add
cmc
mov
in
dec
movsl
pop
pusha
add
xchg
cmpsb
pop
cmp
mov
jp
addb
es
adc
mov
or
sbb
add
fisubs
mov
in
test
push
dec
mov
jle
lods
inc
or
bound
mov
std
mov
mov
add
and
lahf
pop
cmc
movsb
lahf
imul
std
fstpt
add
pusha
add
js
int
add
adc
stos
imul
add
mov
mov
pusha
add
shll
add
cmpsb
aas
outsl
mov
sbb
inc
adc
mov
in
rorl
sbb
lcall
jmp
add
cmp
or
cmpsl
inc
pushf
jns
shll
mov
mov
xor
sub
aad
outsl
sub
lea
mov
mov
push
add
gs
ja
lcall
fistpl
jmp
ret
and
es
mov
mov
mov
pmaxsw
mov
mov
das
jbe
cmp
js
cmp
repnz
add
arpl
xchg
add
test
jns
enter
ja
test
push
jno
fiadds
add
add
mov
add
add
sbb
mov
push
jns
push
add
hlt
lock
int3
imul
lods
mov
add
fcoml
leave
sbb
cmc
repnz
dec
jb
mov
add
into
dec
jbe
mov
or
mov
outsl
and
mov
add
cld
inc
lahf
pop
adc
push
cwtl
sbb
nop
add
test
mov
mov
mov
jo
mov
mov
pop
test
or
or
jecxz
gs
push
lock
mov
push
and
add
std
cltd
cs
add
add
push
test
mov
dec
jge
inc
mov
mov
pop
pushf
xchg
lcall
pushf
jb
mov
add
push
add
mov
inc
add
jbe
jns
cmc
jg
add
ja
xchg
add
push
mov
mov
test
fisubrs
mov
add
add
mov
jae
dec
rcrl
mov
pop
xchg
or
lods
jp
lods
mov
mov
dec
fcmovnu
jae
mov
mov
movl
sub
mov
mov
mov
xchg
add
add
cmp
add
xchg
mov
jl
pop
fisubl
add
mov
les
sub
insl
rolb
mov
lods
and
and
mov
add
ret
test
addb
xor
mov
fisttpl
xchg
lcall
jle,pn
popf
pop
test
mov
jns
add
mov
mov
add
sbb
in
fwait
nop
add
sbb
pop
fadds
jp
add
sbb
or
daa
mov
add
xor
mov
cmp
add
mov
jl
add
sub
mov
mov
mov
mov
sub
lock
cmp
mov
push
insb
call
outsl
es
cmp
push
icebp
das
nop
add
pop
push
daa
sub
test
adc
mov
mov
mov
mov
xchg
add
cli
fidivrs
mov
sahf
ds
mov
sub
stc
lds
and
lds
cmp
mov
dec
xor
mov
xor
add
jle
xor
sbb
nop
add
loop
mov
js
repz
leave
pop
and
popf
lods
lret
add
push
sbb
dec
daa
lods
inc
add
add
adc
or
mov
adc
mov
mov
or
out
das
mov
in
repnz
repz
cs
pop
dec
xchg
xor
dec
dec
jecxz
jno
je
pop
imul
mov
loope
imul
mov
xor
addb
and
mov
add
insb
into
fistpll
outsb
push
jg
daa
out
dec
jmp
lret
addb
sub
sbb
cli
fisttpl
mov
aaa
lcall
psubusw
rolb
mov
add
sub
addb
adc
mov
add
divb
iret
and
in
stos
outsb
mov
addb
cwtl
cmp
mov
outsb
xor
mov
iret
pusha
add
sub
mov
mov
mov
movsl
xor
pusha
add
mov
xchg
nop
add
rolb
or
test
mov
and
stc
mov
jge
add
cs
mov
and
in
add
pop
pop
rolb
sub
add
add
add
les
mov
testb
xor
mov
jb
mov
mov
stos
jecxz
repnz
mov
add
pop
popa
dec
ljmp
daa
or
test
sbb
rolb
mov
jecxz
pop
dec
sub
xor
rolb
mov
not
add
bound
mov
cmpsl
rolb
mov
mov
leave
fstl
add
fdivl
fdivs
mov
es
add
dec
mov
jnp
mov
cmp
mov
jmp
mov
and
insb
fwait
je
outsl
jnp
pop
fsubrl
add
loope
mov
mov
sub
cmp
movsb
jle
or
pusha
add
and
mov
add
sbb
mov
leave
add
gs
mov
xor
mov
add
imul
addb
dec
insl
cmp
jno
addb
cmpsb
test
adc
iret
or
mov
push
push
stc
ret
test
mov
cmpsl
cmp
ret
pop
leave
mov
lret
add
pop
test
add
cmp
add
add
aas
and
and
add
push
jecxz
add
mov
mov
push
inc
cli
outsb
fdivl
and
mov
fdivrl
stc
andl
mov
add
sti
xchg
mov
mov
gs
add
pop
bound
mov
xor
mov
jge
loope
lret
add
ss
add
loope
inc
push
sbb
add
mov
mov
imul
dec
loop
mov
xchg
add
mov
push
mov
cmpl
mov
mov
adc
mov
aas
jb
mov
add
sbb
das
pop
jmp
add
ret
cmpsl
test
and
add
cmpl
adc
hlt
push
jae
pop
mov
mov
pushf
push
mov
jg
cmpsl
outsb
inc
adc
fists
jge
mov
sub
add
mov
and
mov
fdivrl
mov
cmp
stc
add
mov
aaa
repnz
push
cmp
mov
pop
sbb
shll
mov
in
lahf
rcrl
add
add
mov
adc
mov
push
inc
sbb
outsl
pop
xlat
cmpsl
pop
xchg
and
mov
loopne
mov
dec
lods
cmp
add
add
add
mov
dec
push
adc
pushf
fwait
aas
scas
push
xorl
dec
dec
xchg
adc
mov
icebp
xor
shr
push
fs
cmpsb
xchg
mov
mov
mov
aaa
jmp
jg
cld
pusha
add
add
pop
data16
inc
shll
add
jge
fbstp
dec
or
add
mov
addb
adc
xchg
hlt
inc
add
sbb
add
add
js
rolb
mov
jmp
jecxz
xlat
sub
push
push
add
mov
xlat
sbb
push
adc
xchg
xchg
push
test
rolb
cmp
lahf
sbb
mov
push
scas
out
add
pop
cmp
pop
cmp
and
lcall
dec
jmp
sub
jle
ds
inc
and
inc
push
iret
jne
bound
mov
cs
add
jg
or
jo
mov
mov
push
out
cli
mov
add
add
popf
rcrl
subl
xor
aad
enter
add
inc
lock
add
lret
mov
leave
cmp
enter
add
mov
fwait
xchg
or
xor
mov
out
mov
jle
lock
addr16
test
sbb
add
adc
add
mov
ljmp
js
jns
pop
mov
gs
and
mov
and
or
add
mov
dec
roll
add
in
push
or
mov
mov
add
dec
cltd
psrlq
fwait
out
jp
les
stos
sub
int3
cld
aas
jle
daa
mov
dec
mov
test
xchg
fstps
stos
mov
add
xor
mov
call
pop
push
push
mov
push
testl
dec
adc
mov
add
divl
add
mov
jbe
add
inc
mov
fisubs
imul
daa
dec
sub
scas
scas
pop
jp
push
push
pop
aad
stos
push
jmp
adc
add
pop
jns
and
and
mov
mov
add
js
jp
fs
or
add
faddp
add
push
imul
and
pop
and
mov
xor
sti
mov
mul
bound
mov
pop
es
pop
js
cmp
lock
fsubrs
mov
leave
mov
mov
add
fiadds
ret
adc
test
inc
add
jb
mov
scas
dec
sti
sub
stos
adc
mov
jmp
lret
imul
cmp
movsb
jno
mov
add
repnz
mov
lahf
arpl
scas
insl
or
xchg
rcr
cmpsl
cld
imul
adc
mov
lret
push
mov
ret
rorl
ret
xor
add
jp
pop
test
pop
fbld
and
jb
mov
mov
add
rolb
dec
hlt
insl
in
hlt
stc
dec
inc
pop
cmp
jne
std
or
test
add
add
rolb
mov
fdivl
mov
sbb
enter
mov
mov
in
cmp
rolb
std
ret
roll
dec
daa
xor
inc
stos
scas
or
xlat
push
adc
mov
mov
faddl
cmpsb
mov
fisubs
rolb
mov
mov
mov
repz
mov
mov
repnz
mov
add
imul
and
mov
add
xor
mov
mov
mov
push
push
add
sub
or
push
mov
xchg
add
xor
je
nop
add
add
mov
mov
je
add
into
pop
aad
xchg
add
adc
mov
add
mov
mov
rolb
mov
mov
jno
add
pop
sbb
mov
fildl
xchg
mov
add
mov
mov
add
pop
cli
rorl
sub
xor
mov
repz
addb
jge
mov
or
in
gs
js
ret
jp
mov
xor
or
xchg
shrl
xlat
out
ds
xchg
add
mov
cwtl
fisttpll
xchg
lret
int3
dec
add
mov
xchg
add
sbb
das
mov
mov
lea
pop
pop
pop
push
jp
das
sarl
mov
jno
pop
inc
ds
bound
mov
cmp
gs
add
xchg
fs
rorl
sbb
add
add
lea
fsubl
add
mov
push
mov
add
fdivl
add
int3
movsl
and
mov
xchg
imul
sbb
mov
add
push
jno
fnsave
mov
mov
lods
add
mov
cmp
in
inc
add
cmp
mov
es
nop
mov
push
adc
mov
les
mov
add
mov
jnp
pop
ja
andl
xor
push
or
cmp
ret
test
xchg
add
mov
and
inc
std
cmpsl
jo
mov
xchg
mov
mov
add
xchg
xor
stos
sti
mov
in
roll
mov
xor
mov
xor
cmp
xor
add
in
loop
mov
and
test
add
add
sub
xor
imul
test
add
ret
or
sbb
add
lds
mov
and
mov
leave
bound
mov
sbb
jb
mov
mov
add
adc
or
mov
pop
jmp
or
cmpsl
shll
and
aam
lea
add
insl
int
add
and
xor
mov
add
call
jbe
nop
add
add
or
add
adc
in
fs
shrl
int
adc
mov
add
addl
mov
push
fidivs
push
push
sbb
add
repz
dec
div
add
pop
mov
inc
add
mov
repnz
rolb
mov
push
dec
enter
pusha
add
add
push
dec
pop
pop
ficoml
add
and
mulb
popa
inc
add
dec
insb
mov
div
add
mov
add
pop
inc
add
add
sub
cwtl
lds
mov
out
sbb
daa
js
dec
pop
nop
add
cvttps2pi
lsl
dec
or
aaa
mov
adc
add
popa
lret
xchg
in
popf
dec
push
jo
mov
es
dec
xchg
rorl
adc
xchg
add
dec
test
add
pop
cmp
fistpl
dec
mov
sub
or
in
mov
cmp
jne
outsl
out
and
out
xor
add
add
jns
add
and
mov
jle
js
adc
mov
stos
pop
mov
mov
inc
je
add
or
add
add
or
cmp
fldl
je
pop
xor
mov
mov
inc
push
xorl
stos
rolb
mov
mov
movsb
inc
add
inc
mov
inc
js
mov
mov
inc
add
inc
dec
addr16
add
arpl
xchg
sbb
add
rolb
std
fidivrl
into
mov
adc
mov
jl
add
mov
scas
jg
push
mov
add
aas
sub
sbb
mov
xchg
das
push
stos
addl
lret
mov
fistpl
sbb
inc
pusha
add
lods
add
mov
insl
daa
or
mov
mov
mov
sbb
jl
insb
jl
vpsrlw
add
add
ret
rolb
jge
xchg
test
sbb
aad
and
lock
xchg
ljmp
add
mov
repnz
add
add
das
dec
movsb
sub
add
cmpsl
jle
cmpsl
push
rolb
push
jmp
inc
add
cli
pop
dec
or
add
adc
mov
adc
cmp
int
mov
sti
cmpsl
test
idivb
dec
hlt
jne
pop
insl
je
out
in
sub
vmwrite
test
add
mov
stos
mov
mov
adc
fs
push
aaa
add
mov
adc
jbe
xor
mov
adc
mov
lds
mov
mov
or
add
mov
or
mov
mov
cmp
add
push
add
lret
mov
adc
mov
test
mov
test
xchg
fcomip
xchg
add
cmp
adc
mov
mov
add
imull
lock
or
fidivrs
add
cmp
stc
hlt
and
or
xchg
xchg
ret
je
je
jbe
sub
pop
mov
xor
aas
or
mov
inc
xlat
pop
xlat
pop
jecxz
add
test
icebp
icebp
pop
mull
add
add
mov
movsl
and
pop
movsb
outsb
push
and
mov
sub
dec
pop
mov
add
mov
loopne
mov
dec
adc
cmp
stos
fiaddl
or
or
dec
inc
add
mov
or
jae
add
add
or
lods
fs
dec
push
pop
mov
sbb
add
in
mov
jae
add
add
add
mov
mov
add
das
repnz
imull
sbb
sub
add
mov
add
add
add
int3
gs
inc
fdivr
dec
xor
mov
xchg
mov
mov
add
jle
pop
push
jbe
rolb
mov
jb
mov
xorl
add
add
mov
gs
xor
fisubl
arpl
hlt
inc
adc
mov
inc
icebp
rorw
add
movsl
pop
addb
fs
repnz
add
jg
add
add
adc
in
mov
jo
mov
or
add
out
pop
gs
fistl
xchg
fs
mov
mov
lcall
test
pop
cmp
fimuls
sbb
fsubr
or
inc
add
sti
ret
mov
add
add
mov
xchg
add
nop
add
xor
add
mov
add
mov
mov
out
or
mov
add
js
add
mov
mov
add
fisubrl
repnz
in
fmull
imul
add
ss
mov
aaa
and
mov
int3
ja
add
scas
lods
sahf
adc
pushl
mov
jle
xchg
jmp
pop
inc
ljmp
add
insb
stc
mov
pop
jo
mov
aad
out
push
add
mov
rolb
mov
rolb
mov
add
in
repnz
xchg
mov
mov
mov
adc
add
push
aam
imul
in
scas
xchg
jmp
add
ss
ret
xchg
fistl
popf
loop
mov
pop
int
add
and
mov
mov
jg
daa
es
jb
mov
divb
rolb
mov
loop
mov
movsb
lret
or
andl
pop
lock
push
leave
mov
sub
or
in
shll
cwtl
mov
or
filds
lods
add
stos
cmc
xchg
add
mov
outsl
jmp
sub
lret
mov
and
mov
add
xchg
scas
iret
addb
xchg
inc
daa
push
add
scas
out
and
mov
arpl
cwtl
xchg
push
add
xlat
nop
add
xchg
mov
mov
addr16
inc
push
cmp
mov
mov
inc
add
mov
mov
aad
repz
push
das
jo
mov
test
movsl
outsl
arpl
cltd
jnp
add
mov
hlt
adc
mov
xchg
cwtl
cmp
pop
mov
or
repnz
add
sarl
xchg
ret
adc
mov
int3
sbb
push
sub
scas
adc
jno
dec
icebp
loope
add
mov
mov
pop
mov
idivb
pop
push
add
and
jge
mov
in
cmp
add
or
fwait
dec
mov
add
push
lods
push
xor
mov
pop
mov
outsb
xchg
cmp
stc
repnz
add
fmuls
or
ret
jne
sub
mov
cmc
call
scas
pop
mov
mov
or
rolb
mov
add
sbb
and
mov
lods
lahf
dec
imul
cld
repnz
xchg
adc
add
mov
dec
popa
pop
scas
sub
ss
dec
pop
cmp
push
or
sub
mov
add
mov
xor
mov
scas
mov
sbb
add
push
dec
stos
test
cwtl
addb
mov
dec
data16
add
add
add
pop
stos
iret
and
add
pop
cwtl
loopne
mov
ret
adc
sub
mov
push
das
jecxz
add
pop
mov
jb
mov
jo
mov
push
arpl
push
mov
ret
inc
insb
testl
inc
dec
pop
aas
cmc
nop
add
xor
mov
jns
mov
ret
iret
and
xlat
mov
mov
add
mov
imul
xchg
js
mov
out
loopne
mov
scas
cmpsb
pop
cltd
inc
cmp
cmp
aad
leave
xlat
in
enter
notb
mov
add
iret
jnp
inc
mov
xchg
inc
pop
jmp
add
lcall
out
mov
mov
nop
add
mov
arpl
sbb
ret
xor
mov
add
jecxz
into
jno
pusha
add
mov
mov
fstps
pop
fnstcw
repnz
mov
fistps
das
inc
out
inc
push
add
rorl
push
add
leave
fs
addb
stos
cmp
mov
adc
jecxz
pop
aas
test
xlat
push
or
mov
push
sbb
sub
add
je
add
mov
mov
add
lea
mov
pop
ret
outsb
sub
sahf
cmp
rorl
les
out
filds
add
and
cmp
inc
add
mov
xchg
pop
lods
pop
cmp
push
cmp
dec
lock
or
lods
lock
mov
dec
pushf
xor
add
mov
xlat
add
mov
clc
sub
fadds
insb
addb
rcrl
adc
mov
rcll
rolb
sbb
cwtl
fwait
cmp
loop
mov
stc
mov
mov
adc
data16
dec
cltd
and
mov
aad
xchg
sub
mov
add
adc
mov
add
xlat
xchg
int3
dec
adc
mov
xor
test
add
xor
unpcklps
mov
sub
jmp
gs
xor
mov
xchg
add
add
and
repz
add
addb
sbb
jbe
out
push
cmp
cmpsl
dec
push
into
mov
lds
and
mov
mov
addb
or
adc
mov
mov
es
jo
mov
cmp
adc
les
insb
dec
dec
mov
jnp
cwtl
xchg
addb
or
lret
push
add
insb
test
mov
inc
ret
jo
mov
sti
sub
and
jbe
add
fs
mov
imul
or
and
jmp
mov
fisttps
mov
negb
pop
gs
add
mov
jb
mov
push
sub
sub
nop
add
add
mov
add
pop
in
lret
mov
xchg
scas
cld
loopne
mov
fwait
iret
pop
pop
dec
pushf
xor
mov
fidivl
sub
addr16
aam
repnz
cmp
jnp
jnp
stc
iret
mov
mov
mov
mov
add
ret
pop
jb,pn
mov
orl
mov
push
addb
enter
mov
sub
sbb
mov
jge
jg
add
inc
jnp
or
mov
add
mov
inc
add
jno
in
insl
cmp
test
out
dec
mov
xchg
int
ss
mov
push
mov
mov
adc
mov
mov
add
add
pop
insb
dec
jmp
nop
lret
out
dec
out
add
fstl
iret
emms
stc
and
mov
fadds
mov
add
mov
aas
mov
call
jecxz
pop
pop
fwait
ljmp
in
and
xor
out
add
adc
mov
aaa
xchg
push
xor
cmp
add
lahf
out
add
mov
mov
mov
and
xor
aam
cltd
stos
inc
jge
cmpsb
and
je
dec
sti
cmc
adc
mov
adc
mov
mov
xor
shl
add
pop
lea
daa
mov
testl
adc
stc
fstpt
push
nop
add
xchg
xor
addb
sbb
push
cmc
stc
repnz
cwtl
pop
push
push
jae
add
icebp
jp
outsb
cwtl
shl
add
mov
pop
rolb
mov
sbb
push
jbe
add
fwait
cwtl
mov
mov
pop
add
mov
popf
jg,pt
mov
dec
lock
das
mov
mov
dec
fisttpll
or
inc
xorl
inc
lcall
leave
dec
sahf
jb
mov
sbb
cmp
pushf
lds
add
mov
sbb
mov
inc
push
aaa
out
sub
and
mov
dec
sub
sub
in
jle
push
insb
push
mov
testl
aad
add
add
negl
and
add
stc
jp
adc
fildl
jb
mov
add
into
leave
call
imul
mov
in
add
orl
mov
add
adc
mov
cmp
adc
mov
add
mov
cmp
sahf
imul
lret
mov
nop
add
mov
mov
jl
sbb
aas
and
add
icebp
lret
fsubs
jne
leave
push
add
test
lds
push
nop
add
add
lods
inc
xchg
adc
mov
adc
hlt
cs
nop
add
insl
push
add
push
mov
jl
adc
or
jmp
popf
fs
fbstp
add
add
pop
xor
dec
cli
dec
lret
push
in
js
orl
rolb
mov
and
lds
mov
push
jl,pt
sbb
add
inc
push
add
and
in
out
mov
int
push
rolb
mov
jbe
cmp
add
xchg
dec
mov
mov
and
call
add
decl
mov
pop
scas
xchg
jecxz
iret
aas
negb
mov
aam
es
notb
push
subl
mov
mov
xor
mov
data16
sbb
push
loopne
mov
call
jmp
mov
dec
roll
cmp
outsb
sbb
pop
inc
std
adc
cmpsb
xor
dec
sub
scas
mov
in
ret
cmpsl
mov
jp
repnz
aam
fisubs
popa
lods
adc
mov
inc
add
into
mulb
rolb
xor
dec
out
jg
fs
mov
and
xor
mov
xor
ret
in
add
or
xchg
int
iret
push
int3
push
jae
cld
xchg
add
push
sub
mov
inc
out
ljmp
xorl
mov
add
loopne
mov
sarl
dec
mov
mov
mov
or
mov
push
mov
add
rolb
fucomip
dec
mov
add
mov
ljmp
clc
mov
pop
scas
aaa
enter
add
xchg
fld
mov
inc
add
pop
pop
or
and
dec
les
inc
imul
subl
out
std
in
xchg
ljmp
add
mov
xor
or
pop
int
pushf
push
add
jge
cmpsl
mov
dec
adc
add
mov
pop
adcl
fldl
in
pop
imull
xchg
rolb
mov
stos
jg
int3
sub
jg
and
mov
fwait
xchg
add
inc
add
mov
into
pop
fistps
test
pop
out
js
iret
add
sbb
add
xor
mov
cmp
xchg
sub
mov
mov
pop
addb
sbb
mov
fcoms
mov
add
cmc
ret
bound
mov
push
mov
mov
push
push
mov
lcall
ja
add
and
mov
xchg
rolb
and
in
xor
sahf
xor
mov
add
rolb
mov
inc
subl
mov
addr16
lret
iret
imul
mov
mov
cld
in
test
sub
mov
or
add
mov
and
add
pop
or
mov
stc
mov
add
out
fcmovnu
xchg
pop
std
ret
xchg
sub
push
add
ds
jo
mov
add
mov
aas
cld
lods
fidivs
xor
sbb
rolb
mov
mov
hlt
jno
xchg
and
add
jle
loopne
mov
out
and
fildl
fsts
pop
je
jb
mov
sbb
lods
inc
pop
loope
dec
shrl
in
mov
lock
add
lods
cmp
push
add
inc
mov
push
dec
mov
stc
jne
fcomps
scas
dec
bound
mov
mov
test
mov
sbb
add
aad
add
add
call
mov
pop
jne
sub
rolb
cmpsl
push
push
jl
add
jno
push
aam
or
add
or
in
mov
push
add
movsl
dec
xchg
icebp
movsb
jl
jl
add
xor
mov
xchg
loop
mov
arpl
test
push
fidivrs
in
fmull
inc
mov
or
add
es
xchg
mov
add
mov
add
xchg
dec
xor
pop
mov
enter
out
jge
add
add
sti
or
sub
int
imul
add
add
loope
icebp
test
mov
and
fdivrp
bound
mov
pop
andl
dec
ja
add
inc
add
lret
sub
mov
bound
mov
cltd
or
and
mov
in
mov
and
mov
jmp
mov
and
xchg
mov
and
lods
iret
shll
divb
dec
stos
cmp
int
lea
addl
add
adc
test
mov
lds
mov
pusha
add
mov
leave
cwtl
cli
rolb
mov
push
int3
mov
mov
add
sub
push
mov
maxps
aas
mov
arpl
iret
repnz
sbb
nop
add
xor
mov
add
mov
dec
mov
push
aas
loope
clc
xor
enter
mov
in
pusha
add
add
push
mov
push
and
dec
roll
daa
scas
addr16
jb
mov
out
sbb
sub
rolb
push
fwait
loope
add
add
add
loop
mov
mov
pushf
daa
in
lahf
push
add
outsb
sub
push
in
cmc
xchg
inc
sub
decb
add
repnz
add
loop
mov
lods
popa
xchg
mov
xor
cmp
stos
add
mov
cmp
sub
repz
sub
xor
mov
inc
mov
xchg
inc
mov
pop
int3
fs
add
stc
add
popa
lret
add
push
add
bound
mov
xchg
in
xchg
add
mov
mov
add
mov
and
pushf
xor
add
add
add
mov
iret
cmc
sbb
sub
mov
mov
fs
add
dec
or
das
and
js
add
add
xchg
fwait
sub
lds
sahf
mov
bound
mov
add
jnp
lods
push
add
mov
dec
in
ja
pop
ljmp
add
sbb
xchg
dec
cmp
xchg
jmp
mov
adc
mov
negl
add
add
add
mov
and
iret
push
lcall
pop
cltd
rcrl
stc
jg
je
pop
ror
test
ficoms
mov
mov
icebp
nop
add
or
xchg
push
add
pushl
fwait
inc
decl
jge
mov
mov
and
mov
pop
inc
pop
mov
push
mov
mov
aas
push
out
dec
fbld
ljmp
mov
test
sub
cld
insb
rcrl
sbb
add
hlt
sub
iret
sbb
sub
add
scas
and
mov
std
cli
add
pop
adc
jle
xor
mov
dec
push
mov
push
fldt
aam
add
pop
movsl
aam
push
mov
push
add
fld
add
lods
or
repnz
jecxz
es
mov
jb
mov
jns
add
addb
fistpl
scas
mov
mov
add
jno
mov
mov
mov
inc
clc
inc
xchg
repz
cmp
mov
xor
out
add
pop
jb
mov
mov
stos
jp
rorl
stos
or
les
mov
xchg
icebp
fdivs
adc
xchg
mov
or
rolb
mov
push
and
mov
cwtl
gs
data16
stos
add
mov
mov
or
cmp
sbb
add
mov
adc
out
inc
ret
jle
add
push
rolb
mov
loope
adc
mov
dec
dec
test
aad
inc
add
data16
mov
mov
add
popa
sbb
xlat
hlt
dec
pusha
add
add
idivb
add
mov
aam
lods
negb
fwait
xor
aas
mov
mov
jmp
sub
mov
mov
sbb
push
test
pop
sub
mov
mov
mov
add
add
inc
and
xor
adcl
adc
mov
addb
add
je
xchg
mov
dec
loope
cmpl
test
add
adc
mov
addb
rolb
pop
cmpsl
ds
imulb
xchg
cmp
ja
add
xchg
mov
pop
mov
loop
mov
and
cmp
fimuls
add
push
xchg
mov
inc
out
iret
repnz
imul
add
add
mov
jae
movsb
movl
fbld
rorl
xchg
add
xor
cmp
inc
ss
mov
push
sti
add
xlat
das
xchg
jecxz
arpl
loope
add
add
ret
in
mov
icebp
push
mov
add
pop
addr16
mov
test
mov
divl
adc
add
dec
fsts
cmp
mov
inc
add
add
inc
repnz
lods
decb
scas
stos
jecxz
cmp
dec
dec
xchg
xor
mov
ljmp
test
xchg
pusha
add
mov
inc
call
fwait
and
push
fldl
add
mov
xor
push
cltd
mov
mov
subl
inc
xchg
mov
jge
pop
sub
rolb
fistl
add
inc
push
dec
loop
mov
fs
xchg
mov
mov
dec
pusha
add
push
push
loopne
mov
or
and
cltd
int
mov
mov
cmpsb
icebp
jno
add
mov
aas
adc
mov
and
add
add
test
push
faddl
mov
stc
sbb
add
mov
dec
sub
int
add
dec
adc
cwtl
arpl
popf
ret
insl
movsl
pop
cmp
cltd
mov
outsb
cmp
pop
imul
jge
int
jecxz
ds
add
mov
aas
pop
dec
cmp
mov
insl
int3
cmp
mov
add
and
mov
lods
pop
mov
xor
mov
mov
aam
adc
and
jge
dec
inc
add
mov
sbb
xchg
xor
idivl
add
jae,pn
xor
mov
into
addb
pushf
nop
add
mov
add
stc
lock
cwtl
fsubrs
notl
test
outsb
je
mov
mov
and
mov
push
jbe
lock
mov
add
mov
mov
lds
jns
std
xchg
add
jmp
cmp
mov
fsubrl
inc
and
push
nop
add
cmp
nop
add
filds
xor
loopne
mov
mov
sbb
out
pushf
popf
pop
sbb
add
add
xchg
cs
out
lods
stos
adc
mov
push
mov
mov
mov
out
pushf
jno
pop
test
shll
push
mov
popf
cli
out
das
mov
add
negl
rolb
mov
mov
daa
orl
add
pop
mov
sbb
xor
xor
mov
jg
adc
mov
lock
data16
mov
jnp
mov
dec
push
xchg
mov
jns
push
fwait
jno
sub
aam
sarl
mov
or
cmpsl
mov
cld
pop
jl
or
jmp
adc
mov
loopne
mov
add
aad
rolb
mov
testl
mov
mov
aad
addb
test
sub
call
jle
fisubrl
push
push
cltd
adc
mov
add
xor
sbb
add
adc
jge
cmp
out
fs
lock
pop
call
mov
sub
popf
inc
icebp
out
pop
sbb
add
mov
add
push
add
icebp
jbe
push
dec
or
cmp
stc
aad
add
mov
sti
sub
je
xor
xchg
add
inc
cmpl
sbb
mov
push
or
add
shrl
jmp
fscale
in
aas
popf
sub
call
rolb
mov
xor
push
dec
inc
jg
mov
mov
xor
mov
gs
mov
mov
mov
icebp
pop
inc
mov
inc
iret
or
xchg
mov
mov
mov
xor
dec
jg
in
clc
aaa
dec
ja
outsl
lret
adc
mov
movsl
mov
sti
in
in
xor
add
mov
idivl
ss
rolb
ja
addb
inc
add
pop
jg
pushf
in
jbe
sub
outsl
popf
insl
scas
enter
and
add
pop
js
add
dec
sub
add
jp
outsl
and
mov
xor
pop
in
mov
call
out
push
inc
add
mov
and
mov
ret
cs
sbb
cs
add
decl
addr16
dec
aam
mov
sahf
test
ljmp
lcall
pushf
jns
icebp
jle
inc
add
imul
jno
daa
stos
loopne
mov
in
sahf
jecxz
mov
mov
add
xchg
cmp
addr16
pop
stos
iret
and
or
add
pop
fwait
mov
push
xlat
out
add
loopne
mov
xor
add
repz
fisubrs
mov
push
or
fsqrt
mov
sbb
push
jmp
add
mov
add
add
mov
outsl
into
mov
es
scas
mov
add
or
mov
add
add
jl
por
das
popf
inc
mov
mov
scas
cmp
mov
je
fcomip
sub
mov
dec
mov
scas
xchg
or
lods
outsb
push
jl
jge
add
add
add
mov
add
mov
pushf
test
mov
mov
mov
sub
fsts
aad
ja
ret
test
cmc
pop
aad
scas
iret
push
adc
mov
lret
add
mov
cltd
inc
add
mov
mov
adc
mov
je
movsl
out
clc
and
jecxz
mov
cld
stos
lret
lahf
or
add
sti
push
fnstsw
push
add
mov
in
std
or
mov
xchg
ds
inc
sahf
xchg
adc
mov
in
add
gs
stc
ds
push
repz
fwait
xlat
jb
mov
mov
and
in
sub
mov
addl
mov
add
add
xchg
popa
std
cs
rolb
mov
sbb
pop
ret
ljmp
add
pop
loope
xchg
or
stos
add
test
stc
push
push
add
jmp
dec
icebp
push
or
mov
mov
xchg
stc
mov
and
inc
add
insb
int3
hlt
call
int
jl
push
mov
dec
inc
add
mov
addb
addb
cmp
lds
xor
and
mov
clc
dec
scas
lret
lahf
mov
fcom
pop
or
jnp
fiaddl
into
jnp
add
or
sti
scas
pop
jecxz
inc
xor
lret
ss
sbb
lds
loope
fdivl
mov
das
xchg
sub
fbstp
pushf
lods
ret
test
bound
mov
mov
mov
mov
sbb
cmp
cmpsl
lret
add
insl
scas
sub
mov
fcoml
lret
add
mov
mov
mov
mov
cltd
push
mov
ror
push
add
push
xor
sub
not
and
mov
push
add
mov
xchg
xchg
mov
mov
xchg
iret
daa
lods
or
movsb
or
rol
mov
mov
stc
mov
add
cmp
pop
cwtl
xor
inc
outsl
pop
mov
outsb
adc
mov
mov
mov
loopne
mov
mov
cs
outsl
xchg
xchg
dec
outsb
cmp
in
sub
pop
dec
lret
fwait
into
cltd
jae
cmpsb
test
lock
into
cmc
test
mov
hlt
adc
mov
pushf
inc
sub
pop
clc
add
mov
push
inc
data16
leave
adc
jle
jns
pop
test
insl
adc
add
mov
push
cli
ficomps
mov
adc
adc
decl
mov
loopne
mov
scas
sahf
std
jne
inc
add
add
add
add
mov
fs
add
call
and
and
mov
data16
mov
test
xchg
mov
jo
mov
sub
xchg
stc
and
mov
clc
pop
stos
pop
adc
mov
mov
cltd
push
and
mov
enter
dec
mov
mov
mov
adc
add
add
das
xchg
dec
or
mov
push
and
mov
mov
jmp
mov
mov
lea
dec
test
cmp
jp
sahf
rolb
mov
cwtl
dec
add
pop
or
insl
jecxz
cmpsl
aaa
mov
add
mov
mov
add
cmp
inc
add
popl
mov
xor
mov
je
cmp
cli
cmp
mov
insb
sub
sub
addb
frstor
jg
mov
mov
cmc
mov
in
rolb
mov
pop
fildl
mov
lock
outsb
out
and
mov
pop
jo
mov
mov
mov
cld
repnz
mov
test
lods
sub
lahf
js
add
pusha
add
xor
push
push
xor
mov
add
push
aaa
mov
add
mov
xchg
icebp
push
lea
inc
add
mov
mov
cwtl
iret
pushf
add
mov
add
lret
cmpsb
sbb
sub
cld
cs
jns
cmp
add
mov
mov
add
mov
js
inc
jb
mov
outsl
test
mul
jo
mov
add
or
mov
mov
pushf
push
add
scas
repnz
fwait
mov
add
test
rolb
mov
mov
add
inc
cmp
cli
ss
idiv
dec
push
sub
add
in
sbb
add
test
jno
imul
hlt
aad
adc
xor
loop
mov
pop
xchg
add
ret
sub
pop
jmp
and
mov
add
sub
gs
jge
test
inc
add
mov
mov
mov
xor
lret
add
cmp
out
arpl
xor
mov
push
jge
add
fucom
cmp
test
loope
sbb
or
mov
jl
sti
jmp
sahf
pushf
es
ret
into
mov
mov
daa
pop
jmp
jnp
icebp
out
add
cmp
add
std
push
and
add
add
icebp
xchg
jl
lcall
in
cwtl
push
add
mov
mov
pop
mov
cmp
add
clc
add
scas
push
lahf
or
es
dec
push
rolb
mov
sbb
push
jb
mov
mov
add
mov
lds
mov
les
or
insl
pop
fildll
mov
add
add
sbb
cmpsb
inc
add
dec
mov
dec
iret
push
mov
add
jg
add
sbb
decl
inc
mov
sub
fdivrs
in
jp
add
xor
mov
out
fsubs
out
pusha
add
aam
daa
sub
push
or
sbb
test
mov
loop
mov
mul
push
dec
mov
push
iret
mov
mov
nop
add
lock
xchg
cmc
js
add
add
mov
add
ljmp
add
mov
add
test
add
xchg
add
lahf
lods
nop
add
fldl
mov
add
inc
push
ss
add
and
add
dec
sbb
push
ja
add
push
add
cltd
dec
jb
mov
pop
bound
mov
loop
mov
out
sub
cmp
mov
xor
hlt
lret
jmp
sub
pop
dec
mov
rolb
mov
mov
pop
adcl
cmp
push
xor
mov
xchg
add
icebp
jecxz
mov
jns
jnp
mov
add
movsb
sbb
push
addb
lods
sub
add
add
mov
inc
outsb
mov
add
mov
into
push
and
add
insb
inc
inc
les
xchg
add
jmp
fstl
mov
stc
repz
xchg
add
mov
outsl
and
mov
stos
loopne
mov
imul
add
mov
fildll
push
add
mov
and
mov
rolb
pushl
mov
add
inc
sub
and
mov
add
mov
add
shll
sbb
push
add
and
pop
lea
cmp
ret
jg
fdivr
imul
outsl
push
iret
pushf
sub
add
mov
add
add
mov
in
jae
aad
daa
rorl
xchg
jl
data16
cmp
enter
shrl
js
xchg
xor
mov
push
pop
addb
adc
je
stc
arpl
xchg
push
jge
jb
mov
dec
lret
decb
addr16
nop
add
cmp
jg
sbb
fdivrp
sub
dec
jo
mov
call
adc
stc
mov
inc
jns
sub
add
xchg
call
fstps
lods
dec
cmp
sub
mov
scas
pop
insb
popa
iret
and
iret
mov
mov
fdivs
add
rolb
mov
pop
bound
mov
test
push
ljmp
jno
stos
fcomp
add
add
shr
sbb
mov
jmp
mov
cli
pop
outsb
cli
inc
and
mov
sahf
iret
pop
test
stc
cmp
add
mov
int3
mov
add
add
addb
push
inc
loope
mov
subl
add
hlt
cmp
pop
cli
jge
and
xchg
mov
jo
mov
std
aas
jl
xor
mov
xchg
mov
pop
andl
inc
sub
inc
pop
push
call
test
sti
mov
mov
and
mov
mov
mov
xchg
mov
popa
fsubrl
adc
mov
enter
pop
ja
add
add
mov
or
add
jne
ljmp
add
add
cs
fildl
add
dec
frstor
je
xchg
or
scas
in
add
xchg
add
stos
add
int3
push
clc
ds
fnstsw
stos
inc
sub
push
out
imul
andnps
mov
aad
std
enter
movsl
daa
mov
iret
lahf
pop
mov
add
mov
inc
add
sarl
mov
add
dec
sbb
clc
sub
ss
jecxz
or
fs
mov
mov
jle
ret
test
hlt
test
mov
mov
pop
loop
mov
add
pop
push
jae
aaa
and
push
cli
adc
and
add
inc
stos
mov
mov
out
inc
es
add
popa
outsb
jg
xchg
push
adcl
jge
in
scas
rolb
mov
rolb
cmp
lods
xor
mov
xchg
push
xchg
repnz
adc
mov
and
mov
mov
cmp
out
and
mov
fwait
rol
xor
add
inc
add
cmp
xor
dec
add
push
in
lret
cmpsl
test
stos
loopne
mov
mov
add
test
fbld
add
mov
in
cmpsl
adc
add
mov
add
add
xchg
lahf
xor
mov
jmp
mov
sub
and
rolb
mov
clc
daa
dec
pop
dec
sub
outsl
cli
inc
loopne
mov
insb
or
stc
ss
iret
jg
push
mov
mov
test
inc
pop
popa
rolb
mov
pop
jbe
sub
pop
dec
mov
mov
cmp
pop
scas
pop
in
icebp
into
jbe
data16
lods
fdivrs
jle
mov
add
mov
dec
das
loopne
mov
and
stos
popa
or
jnp
divb
add
pop
enter
mov
mov
mov
orl
add
pop
fwait
lea
push
cli
add
pushf
dec
out
fsts
jmp
mov
mov
adc
daa
out
pop
mov
movsl
cmp
mov
jp
dec
das
inc
add
mov
rolb
mov
add
mov
dec
lcall
test
xlat
std
int
dec
insl
adc
jbe
push
jge
inc
mov
mov
ds
out
dec
push
xchg
sub
jae
cld
or
mov
mov
mov
lret
inc
lret
aad
add
xor
push
jae
cmc
jge
mov
ss
xlat
lret
add
mov
pop
in
add
outsb
loope
fs
push
outsb
inc
jnp
sbb
enter
add
out
sbb
mov
bound
mov
inc
cmp
add
pop
ret
cli
iret
xor
xchg
inc
mov
insl
inc
mov
add
add
lock
sub
inc
int3
stos
and
mov
in
dec
rolb
mov
imul
or
jmp
sub
pop
sub
add
dec
push
aad
cwtl
aaa
xchg
push
add
loope
add
mov
add
mov
mov
int3
test
or
push
xchg
add
mov
dec
test
das
repz
lret
fmull
dec
sbb
jns
aaa
sub
mov
test
adc
add
or
mov
loope
test
add
cwtl
lds
mov
sub
mov
pop
sbb
rolb
mov
jmp
pop
lds
ljmp
xchg
xchg
mov
add
ret
rolb
mov
cmpsl
rolb
mov
add
jmp
mov
add
cmp
mov
test
xchg
mov
repnz
icebp
mov
cmp
repnz
xor
or
mov
dec
rolb
mov
and
mov
pusha
add
add
mov
push
pop
pop
out
inc
add
cmpl
xor
add
loope
inc
add
sahf
push
fsub
in
fwait
insb
and
push
and
fwait
icebp
jb
mov
push
mov
into
and
jmp
loope
sbb
stos
push
mov
jl
push
test
loope
xchg
xchg
jnp
mov
sarl
add
mov
and
add
cmp
add
jp
jle
add
mov
sub
adc
add
mov
fucomip
xchg
cmpsb
xor
push
adc
xchg
in
enterw
clc
sub
add
add
mov
jne
mov
xchg
lea
mov
cs
push
or
aas
dec
sahf
and
mov
addb
pop
ja
xor
in
addb
and
mov
ss
fucomi
mov
dec
cltd
and
cli
movsb
int
mov
dec
call
idiv
movsb
lret
mov
cmp
add
fwait
sub
adc
mov
outsl
ret
xlat
popf
xchg
inc
cmp
add
add
mov
and
ljmp
mov
adcl
adc
mov
add
inc
mov
mov
jae
jmp
mov
sbb
add
pop
cmpsb
sub
mov
fidivrl
test
addb
aad
adc
mov
add
mov
call
adc
int3
mov
add
add
clc
repnz
nop
cld
jae
fadds
and
push
mov
xchg
ret
add
add
sahf
push
xor
mov
sti
mov
clc
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
add
dec
add
pop
scas
xor
lea
push
mov
nop
leave
jmp
mov
add
push
push
push
mov
xchg
ret
add
sahf
pop
add
add
or
test
repnz
nop
cld
jae
add
test
add
clc
repnz
nop
cld
jae
add
mov
loope
dec
push
mov
nop
leave
jmp
add
imul
sub
or
add
outsb
fildl
xchg
ret
add
add
fidivs
sar
nop
nop
cld
jae
insb
aas
push
clc
aas
add
push
add
add
repnz
nop
cld
jae
jg
jle
rclb
daa
sti
inc
add
mov
sub
sbb
cld
or
nop
leave
jmp
mov
pusha
clc
repnz
nop
cld
jae
add
add
fadds
xor
and
repnz
nop
cld
jae
xor
add
movsb
push
mov
xchg
ret
fldt
or
or
add
clc
repnz
nop
cld
jae
repnz
add
sub
cmpw
push
mov
nop
leave
jmp
mov
fwait
push
push
mov
xchg
ret
push
rcll
sub
jne
clc
repnz
nop
cld
jae
add
and
repnz
nop
cld
jae
add
and
fistpl
sbb
test
sbb
nop
nop
cld
jae
add
adc
repnz
nop
cld
jae
add
add
add
sbb
add
push
mov
nop
leave
jmp
add
imul
nop
nop
cld
jae
pop
add
add
popa
clc
repnz
nop
cld
jae
add
repnz
add
mov
insb
mov
push
mov
xchg
ret
add
adc
add
add
imul
cld
jae
add
sub
xor
inc
add
add
into
add
push
mov
xchg
ret
aas
sub
fiadds
add
xor
sbb
inc
add
faddl
add
add
arpl
add
push
mov
nop
leave
jmp
add
add
xor
push
clc
repnz
nop
cld
jae
add
add
push
push
mov
nop
leave
jmp
add
add
mov
add
add
mov
xchg
ret
loope
loope
add
fcoms
add
push
mov
nop
leave
jmp
mov
test
call
nop
cld
jae
add
sub
add
je
clc
repnz
nop
cld
jae
add
mov
in
push
stos
sahf
add
add
add
add
inc
leave
pusha
clc
repnz
nop
cld
jae
xor
mov
add
mov
xchg
ret
lcall
loope
rolb
ret
cld
leave
push
mov
nop
leave
jmp
add
add
add
add
push
mov
add
ja
add
add
cmp
jne
adc
add
clc
repnz
nop
cld
jae
add
fadds
add
out
addb
sbb
popa
add
mov
xchg
ret
js
add
faddl
mov
mov
clc
repnz
nop
cld
jae
sub
repnz
nop
cld
jae
add
add
cltd
lods
clc
repnz
nop
cld
jae
add
add
xor
sub
ja
je
clc
repnz
nop
cld
jae
test
add
leave
jmp
pushl
sub
aad
mov
or
xor
clc
repnz
nop
cld
jae
add
add
fcmovnu
mov
clc
mov
clc
repnz
nop
cld
jae
inc
push
cmp
xor
clc
repnz
nop
cld
jae
add
sbb
push
add
push
mov
xchg
ret
xchg
inc
pop
add
mov
dec
jmp
add
sub
adc
push
add
sbb
movmskps
repnz
nop
cld
jae
add
mov
pop
pop
shl
clc
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
add
mov
testl
push
mov
nop
leave
jmp
add
insb
add
stos
push
mov
xchg
ret
add
or
mov
mov
clc
repnz
nop
cld
jae
add
fsubr
sahf
and
add
mov
nop
leave
jmp
add
xchg
sahf
sahf
mov
xor
clc
repnz
nop
cld
jae
add
add
pop
add
cmp
sahf
or
nop
nop
cld
jae
in
add
adc
cwtl
jne
clc
repnz
nop
cld
jae
add
dec
push
push
mov
xchg
ret
scas
repnz
mov
bnd
call
clc
inc
add
sahf
cmp
pop
add
dec
ss
sbb
mov
stos
add
cwtl
add
cld
cmp
add
push
imul
nop
nop
cld
jae
add
add
dec
clc
repnz
nop
cld
jae
jbe
add
add
jb
clc
repnz
nop
cld
jae
js
add
add
clc
repnz
nop
cld
jae
add
xor
add
add
add
adc
pop
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
clc
imul
pusha
clc
repnz
nop
cld
jae
movsb
mov
sub
cs
push
mov
xchg
ret
mov
js
add
adc
test
repnz
nop
cld
jae
sub
cmpsb
pop
add
rorl
nop
nop
cld
jae
add
adc
add
nop
nop
cld
jae
sahf
js
sahf
movsb
pop
add
cmp
repnz
nop
cld
jae
mov
add
and
clc
repnz
nop
cld
jae
add
jecxz
mov
nop
cld
jae
cmp
adc
fiadds
aad
mov
push
mov
xchg
ret
add
pop
push
add
add
add
clc
repnz
nop
cld
jae
pop
imul
inc
push
mov
xchg
ret
sub
add
add
add
rep
push
mov
xchg
ret
add
add
ficoml
repnz
nop
cld
jae
xor
add
inc
mov
push
push
mov
xchg
ret
push
popl
or
pop
mov
clc
repnz
nop
cld
jae
add
add
or
add
repnz
nop
cld
jae
mov
pop
lcall
mov
imul
nop
leave
jmp
add
js
add
add
in
add
mov
je
clc
repnz
nop
cld
jae
push
add
jnp
push
mov
xchg
ret
mov
mov
dec
fldt
clc
repnz
nop
cld
jae
test
lcall
mov
nop
leave
jmp
add
pop
add
roll
mov
mov
clc
repnz
nop
cld
jae
or
or
in
pop
movsl
jns
add
jno
add
bound
add
mov
nop
leave
jmp
add
pop
mov
push
arpl
xchg
or
add
in
nop
leave
jmp
lcall
int
pop
jae
repnz
nop
cld
jae
sbb
stos
push
mov
xchg
ret
add
mov
jae
cwtl
and
push
mov
xchg
ret
add
add
insb
add
lock
mov
clc
repnz
nop
cld
jae
add
add
add
aas
mov
push
mov
xchg
ret
insb
mov
movsb
jg
mov
mov
xchg
ret
js
add
add
arpl
or
xor
add
push
mov
nop
leave
jmp
pop
fcomp
out
push
jmp
incl
add
sub
add
add
rep
clc
repnz
nop
cld
jae
add
add
mov
into
pushl
push
mov
xchg
ret
fiadds
xor
add
mov
jg
xchg
pop
add
add
add
or
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
js
add
adc
add
push
mov
xchg
ret
sub
add
adc
movzwl
push
mov
nop
leave
jmp
jbe
aas
add
fadd
inc
add
out
clc
clc
repnz
nop
cld
jae
jg
add
or
xor
add
clc
repnz
nop
cld
jae
add
xor
repnz
nop
cld
jae
add
add
pop
xchg
cmpsb
cmpsl
push
add
repnz
nop
cld
jae
add
sub
sub
clc
repnz
nop
cld
jae
add
lcall
in
stc
clc
repnz
nop
cld
jae
add
add
cli
add
clc
repnz
nop
cld
jae
js
add
test
mov
add
loop
mov
jne
push
mov
xchg
ret
cmpsb
add
jb
mov
cltd
add
push
mov
nop
leave
jmp
imul
add
fildl
gs
jle
add
in
nop
leave
jmp
pop
add
mov
add
fadds
ret
clc
repnz
nop
cld
jae
insb
sbb
xor
dec
adc
repnz
nop
cld
jae
add
popl
add
mov
push
mov
xchg
ret
repnz
add
fildl
mov
nop
nop
cld
jae
fadds
add
add
ror
push
clc
repnz
nop
cld
jae
pop
add
add
stc
imul
clc
repnz
nop
cld
jae
sub
ljmp
mov
nop
leave
jmp
push
xor
add
add
repnz
nop
cld
jae
fisttpl
add
mov
clc
repnz
nop
cld
jae
add
inc
add
in
nop
leave
jmp
add
and
fadds
insb
push
mov
add
in
nop
leave
jmp
imul
imul
sub
nop
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
sbb
add
inc
in
xor
clc
repnz
nop
cld
jae
add
fs
je
mov
mov
clc
repnz
nop
cld
jae
add
lods
mov
clc
repnz
nop
cld
jae
aad
xchg
movsb
fiadds
lcall
cld
jae
add
or
andl
nop
cld
jae
sub
add
repz
imul
add
clc
repnz
nop
cld
jae
cmpsb
add
add
jg
popa
ret
inc
mov
xor
clc
repnz
nop
cld
jae
add
add
popf
mov
clc
repnz
nop
cld
jae
imul
add
add
stos
clc
repnz
nop
cld
jae
xchg
xchg
jg
insb
add
add
repnz
nop
cld
jae
sahf
add
clc
and
add
mov
clc
repnz
nop
cld
jae
faddl
psubsb
push
add
clc
repnz
nop
cld
jae
mov
and
clc
repnz
nop
cld
jae
or
addl
add
mov
push
mov
xchg
ret
mov
add
jmp
push
mov
xchg
ret
add
insb
add
add
or
clc
repnz
nop
cld
jae
sub
fcomp
mov
clc
repnz
nop
cld
jae
jbe
add
xor
into
pop
push
mov
xchg
ret
add
add
add
clc
add
es
arpl
aaa
push
pop
push
push
mov
xchg
ret
fiadds
imul
add
test
je
add
test
push
mov
nop
leave
jmp
add
pop
add
mov
add
shr
clc
repnz
nop
cld
jae
add
pop
mov
add
add
in
nop
leave
jmp
sahf
add
add
push
mov
xchg
ret
xor
xor
in
add
fxch
add
pop
cmp
add
sub
jne
push
mov
nop
leave
jmp
mov
add
jge
test
add
push
mov
nop
leave
jmp
add
add
push
lds
add
nop
nop
cld
jae
mov
mov
xor
clc
repnz
nop
cld
jae
insb
add
mov
and
clc
repnz
nop
cld
jae
add
add
mov
mov
repnz
nop
cld
jae
add
mov
add
push
clc
repnz
nop
cld
jae
add
add
add
add
nop
nop
cld
jae
add
mov
add
pmaddwd
xchg
ret
add
add
stos
add
clc
repnz
nop
cld
jae
add
fidivrs
mov
add
jmp
add
xchg
add
clc
add
nop
nop
cld
jae
sahf
fidivrs
mov
loope
mov
repnz
nop
cld
jae
js
pop
add
js
add
mov
nop
leave
jmp
add
add
add
push
nop
leave
jmp
dec
faddl
mov
cs
push
mov
nop
leave
jmp
add
add
xor
push
clc
repnz
nop
cld
jae
add
jbe
cmpsl
cmp
rcll
nop
leave
jmp
add
add
jg
or
or
clc
repnz
nop
cld
jae
add
insb
add
clc
repnz
nop
cld
jae
add
mov
mov
add
clc
repnz
nop
cld
jae
pop
sbb
loope
mov
clc
repnz
nop
cld
jae
pop
mov
movsb
insb
mov
adc
repnz
nop
cld
jae
xor
add
pop
cmp
repnz
nop
cld
jae
add
cmpsl
fistpll
clc
repnz
nop
cld
jae
add
sbb
and
repnz
nop
cld
jae
inc
add
stc
xor
clc
repnz
nop
cld
jae
jbe
add
add
test
push
jmp
jg
mov
add
inc
dec
test
xor
and
push
mov
xchg
ret
cmp
movsb
add
sub
xor
mov
les
add
add
in
nop
leave
jmp
js
pop
dec
jl
test
adc
add
repnz
nop
cld
jae
fiadds
imul
jg
inc
add
add
add
xor
add
push
push
mov
xchg
ret
dec
sub
aas
sub
add
jne
mov
clc
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
xor
insb
add
loopne
mov
mov
clc
repnz
nop
cld
jae
add
shll
adcb
nop
leave
jmp
add
add
add
ljmp
nop
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
xor
movsb
add
and
push
ja
adc
xchg
push
mov
nop
leave
jmp
fildl
popl
add
add
add
nop
nop
cld
jae
sub
add
sbb
push
mov
nop
leave
jmp
adc
add
and
clc
repnz
nop
cld
jae
add
and
aad
repnz
clc
clc
repnz
nop
cld
jae
imul
add
add
clc
repnz
nop
cld
jae
push
add
add
jb
jae
clc
repnz
nop
cld
jae
add
rcr
jg
ss
repnz
nop
cld
jae
add
xor
clc
repnz
nop
cld
jae
add
add
js
mov
stos
cmpl
push
mov
nop
leave
jmp
loope
push
mov
ret
clc
repnz
nop
cld
jae
dec
add
lcall
mov
clc
repnz
nop
cld
jae
add
mov
or
aaa
fsts
mov
xchg
ret
add
add
add
cmp
sbb
mov
nop
leave
jmp
add
push
add
add
push
mov
nop
leave
jmp
add
add
add
push
jno
push
clc
repnz
nop
cld
jae
aad
add
sub
repnz
nop
cld
jae
sub
xor
mov
clc
repnz
nop
cld
jae
or
mov
fisttpl
repnz
nop
cld
jae
add
add
xor
mov
push
mov
xchg
ret
add
adc
inc
add
add
add
in
nop
leave
jmp
sub
add
add
clc
repnz
nop
cld
jae
add
add
aam
add
nop
nop
cld
jae
sub
add
add
sti
clc
repnz
nop
cld
jae
xor
sub
xor
mov
cmpl
jae
sahf
js
ret
test
cmp
in
nop
leave
jmp
add
add
add
mov
clc
repnz
nop
cld
jae
add
and
jg
rolb
fimuls
nop
cld
jae
add
sub
xor
shrl
repnz
nop
cld
jae
and
loopne
mov
lea
clc
repnz
nop
cld
jae
add
add
sbb
repnz
nop
cld
jae
add
mov
fadds
pop
mov
clc
repnz
nop
cld
jae
add
loope
lea
push
mov
xchg
ret
sahf
jbe
insb
loope
sbb
add
clc
repnz
nop
cld
jae
xor
sub
add
push
mov
nop
leave
jmp
in
mov
add
fdivrp
repnz
nop
cld
jae
mov
add
ss
jle
jmp
add
add
cmp
add
test
bnd
mov
clc
repnz
nop
cld
jae
xchg
xor
add
add
or
clc
repnz
nop
cld
jae
add
mov
jg
clc
repnz
nop
cld
jae
add
aas
add
add
add
clc
repnz
nop
cld
jae
js
movsb
sub
mov
push
mov
xchg
ret
add
add
add
nop
nop
cld
jae
add
add
inc
add
push
clc
repnz
nop
cld
jae
fildl
add
sub
xor
push
mov
scas
add
xchg
repz
int
add
mov
adc
out
dec
clc
repnz
nop
cld
jae
sahf
in
xor
add
add
and
mov
nop
leave
jmp
add
mov
in
push
dec
add
clc
repnz
nop
cld
jae
add
aas
clc
cmpsb
int
clc
repnz
nop
cld
jae
add
add
add
add
loop
mov
repz
mov
nop
leave
jmp
mov
lcall
clc
repnz
nop
cld
jae
xor
add
dec
sub
repnz
nop
cld
jae
add
popl
add
ficoms
repnz
nop
cld
jae
pop
add
inc
js
clc
repnz
nop
cld
jae
add
fadds
add
add
and
mov
mov
push
mov
nop
leave
jmp
repnz
repnz
nop
cld
jae
repnz
jmp
nop
cld
jae
test
lcall
mov
dec
push
mov
nop
leave
jmp
add
pop
add
add
jg
imul
push
mov
xchg
ret
add
pop
add
add
push
push
mov
xchg
ret
sbb
add
pop
add
popa
add
repnz
nop
cld
jae
lcall
mov
push
mov
nop
leave
jmp
mov
add
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
xor
je
mov
push
mov
nop
leave
jmp
add
add
arpl
dec
push
clc
repnz
nop
cld
jae
movsb
inc
add
mov
nop
nop
cld
jae
test
add
mov
sbb
nop
nop
cld
jae
add
sub
nop
nop
cld
jae
aad
add
arpl
clc
repnz
nop
cld
jae
push
add
clc
repnz
nop
cld
jae
sub
scas
add
mov
clc
repnz
nop
cld
jae
xor
sub
dec
pop
push
mov
xchg
ret
shll
jbe
mov
sub
mov
cmp
ret
pop
add
xchg
fdivs
clc
repnz
nop
cld
jae
rcrl
add
push
push
mov
xchg
ret
scas
add
fildl
add
and
push
mov
xchg
ret
loope
add
mov
add
push
push
mov
xchg
ret
add
add
popl
inc
mov
nop
nop
cld
jae
popl
add
jg
nop
add
nop
nop
cld
jae
imul
mov
adc
and
xchg
inc
add
mov
imul
add
add
push
push
mov
nop
leave
jmp
movsb
pop
add
add
add
rol
popa
clc
repnz
nop
cld
jae
xor
clc
add
pop
mov
ljmp
lcall
add
add
jns
clc
repnz
nop
cld
jae
add
pop
cmp
add
fcompl
add
add
in
nop
leave
jmp
xor
xorl
clc
repnz
nop
cld
jae
or
dec
mov
clc
repnz
nop
cld
jae
mov
mov
push
mov
xchg
ret
add
movsb
add
add
mov
inc
add
mov
pop
add
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
movsb
jg
add
mov
add
add
add
add
stc
int3
ljmp
lret
mov
clc
repnz
nop
cld
jae
push
roll
add
mov
add
add
in
nop
leave
jmp
and
add
mov
xchg
ret
add
mov
add
mov
mov
mov
clc
repnz
nop
cld
jae
add
mov
mov
ret
clc
repnz
nop
cld
jae
add
clc
dec
inc
add
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
add
mov
mov
push
mov
xchg
ret
xor
inc
lods
inc
clc
repnz
nop
cld
jae
adc
xor
mov
incl
dec
cmp
repnz
nop
cld
jae
xchg
add
push
add
decb
mov
push
clc
repnz
nop
cld
jae
add
add
or
mov
xchg
ret
xor
add
add
repnz
nop
cld
jae
mov
js
add
pop
or
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
add
mov
mov
mov
xor
nop
nop
cld
jae
loope
pop
add
inc
xchg
test
repnz
nop
cld
jae
cmpsb
pop
add
fcompl
push
push
mov
xchg
ret
or
add
add
mov
repnz
nop
cld
jae
loope
mov
jbe
add
mov
inc
add
xor
sahf
add
stos
clc
repnz
nop
cld
jae
aas
add
fdivs
fiadds
addb
shrl
push
clc
repnz
nop
cld
jae
xor
add
push
mov
nop
leave
jmp
add
add
add
push
push
mov
nop
leave
jmp
add
add
add
ret
clc
repnz
nop
cld
jae
aad
add
fdivrs
add
in
nop
leave
jmp
add
add
fisubrs
icebp
push
mov
nop
leave
jmp
sahf
add
sub
clc
repnz
nop
cld
jae
add
xchg
add
cmp
clc
repnz
nop
cld
jae
mov
pop
add
call
in
nop
leave
jmp
push
repnz
lcall
mov
xchg
ret
add
lcall
clc
repnz
nop
cld
jae
movsb
add
add
or
mov
xchg
ret
mov
add
add
push
clc
repnz
nop
cld
jae
orl
add
add
clc
repnz
nop
cld
jae
fsubrs
es
add
add
fcomp
add
bnd
jo
mov
mov
clc
repnz
nop
cld
jae
add
sbb
out
clc
repnz
nop
cld
jae
xor
sahf
add
int3
jne
clc
repnz
nop
cld
jae
popl
add
mov
nop
leave
jmp
add
add
add
push
dec
xchg
push
mov
nop
leave
jmp
add
pop
add
dec
push
mov
cmp
add
fstl
add
add
pop
push
mov
xchg
ret
js
add
add
add
repnz
clc
repnz
nop
cld
jae
add
pop
add
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
aas
loope
pop
add
mov
add
push
mov
nop
leave
jmp
add
add
gs
push
sub
in
nop
leave
jmp
js
add
xchg
aam
call
clc
repnz
nop
cld
jae
add
movsb
add
loop
clc
repnz
nop
cld
jae
clc
fadds
add
push
mov
nop
leave
jmp
fiadds
pop
popl
add
cmp
add
or
pop
aad
add
mov
add
and
add
or
add
repnz
nop
cld
jae
sbb
add
mov
nop
leave
jmp
pop
add
clc
fidivrs
add
repnz
nop
cld
jae
dec
add
add
mov
pop
add
push
mov
nop
leave
jmp
jg
add
add
mov
hlt
js,pn
add
push
mov
jnp
loopne
imul
leave
jmp
mov
add
or
nop
nop
cld
jae
js
add
lea
push
mov
nop
leave
jmp
mov
inc
jbe
fwait
je
clc
repnz
nop
cld
jae
pop
add
popa
push
mov
xchg
ret
add
mov
add
cmpsb
popl
pop
and
repnz
nop
cld
jae
shll
aas
insb
add
cltd
mov
clc
repnz
nop
cld
jae
lcall
nop
add
nop
nop
cld
jae
add
add
add
mov
nop
nop
cld
jae
sub
add
add
jg
rolb
mov
ret
add
add
and
add
add
mov
clc
repnz
nop
cld
jae
sbb
inc
cmp
cld
jae
add
xor
aad
add
lods
push
mov
xchg
ret
movsb
inc
sub
add
shr
clc
repnz
nop
cld
jae
imul
lods
call
clc
repnz
nop
cld
jae
add
add
fidivrl
push
mov
nop
leave
jmp
add
sub
push
push
mov
nop
leave
jmp
pop
add
cmp
cmpsb
xchg
and
add
clc
repnz
nop
cld
jae
add
aad
mov
inc
clc
repnz
nop
cld
jae
inc
adc
add
jmp
ret
sbb
cld
jae
add
insb
xor
sar
repnz
nop
cld
jae
add
xor
mov
mov
clc
repnz
nop
cld
jae
mov
repnz
nop
cld
jae
pop
or
fiadds
clc
inc
add
add
jg
xor
ss
test
jne
push
mov
xchg
ret
xor
mov
push
mov
xchg
ret
add
movsb
insb
fildl
mov
add
repnz
nop
cld
jae
aas
mov
pop
add
xor
add
push
mov
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
fildl
add
push
mov
nop
leave
jmp
inc
add
mov
add
add
push
mov
xchg
ret
add
sub
add
fmull
jp
inc
in
push
mov
xchg
ret
add
mov
mov
clc
repnz
nop
cld
jae
add
add
mov
fwait
imul
clc
repnz
nop
cld
jae
clc
mov
add
add
or
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
xchg
jg
and
incl
xor
add
add
add
add
add
in
nop
leave
jmp
cmp
add
negl
clc
repnz
nop
cld
jae
add
and
add
add
jl
clc
repnz
nop
cld
jae
add
fsubr
mov
clc
repnz
nop
cld
jae
fiadds
mov
pop
push
mov
nop
leave
jmp
dec
imul
add
cmpw
push
mov
nop
leave
jmp
add
fadds
add
ss
add
clc
repnz
nop
cld
jae
push
add
add
add
jne
mov
clc
repnz
nop
cld
jae
add
cmp
mov
nop
nop
cld
jae
loope
and
add
nop
cld
jae
fiadds
add
mov
repnz
nop
cld
jae
mov
add
add
bnd
mov
dec
or
mov
xchg
ret
mov
add
test
clc
repnz
nop
cld
jae
mov
pop
push
push
mov
xchg
ret
push
add
add
call
clc
repnz
nop
cld
jae
add
add
stos
mov
push
mov
xchg
ret
insb
mov
insb
loope
jne
clc
repnz
nop
cld
jae
mov
push
mov
xchg
ret
xor
add
sub
dec
clc
inc
add
dec
mov
push
push
dec
push
clc
repnz
nop
cld
jae
pop
xchg
sarl
imul
add
insb
insb
insb
add
cmp
ljmp
push
mov
nop
leave
jmp
sub
sahf
mov
movzwl
push
mov
nop
leave
jmp
xor
sbb
into
push
push
mov
xchg
ret
add
xor
add
add
mov
add
clc
repnz
nop
cld
jae
xor
mov
dec
shr
push
mov
xchg
ret
add
add
add
add
sub
nop
nop
cld
jae
add
repnz
rolb
test
sar
repnz
nop
cld
jae
mov
or
inc
push
mov
xchg
ret
dec
add
insb
shl
sahf
mov
clc
repnz
nop
cld
jae
add
add
add
inc
add
and
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
pop
subl
add
lcall
clc
repnz
nop
cld
jae
ficoms
fdivs
xor
add
frstor
pop
adc
add
in
cmc
fwait
push
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
insb
add
push
nop
cld
jae
add
add
add
add
push
mov
xchg
ret
cmpsb
add
xor
add
adc
cmp
repnz
nop
cld
jae
pop
xor
mov
mov
xchg
ret
add
scas
add
xor
pop
pop
pusha
clc
repnz
nop
cld
jae
inc
test
bound
mov
mov
xchg
ret
fdivrs
add
jbe
aam
mov
add
in
nop
leave
jmp
imul
pop
jp
sar
nop
nop
cld
jae
pop
inc
js
add
ficoms
clc
repnz
nop
cld
jae
aad
inc
inc
lds
add
push
mov
xchg
ret
add
mov
push
mov
mov
clc
repnz
nop
cld
jae
aad
add
xor
sub
pop
add
add
add
add
add
add
add
pop
mov
clc
repnz
nop
cld
jae
sbb
add
imul
mov
add
add
sahf
add
fsubrp
clc
repnz
nop
cld
jae
add
sub
push
mov
xchg
ret
aad
add
pop
mov
sub
das
hlt
inc
add
dec
sahf
add
insb
sub
add
add
clc
repnz
nop
cld
jae
cmpsb
ficomps
mov
push
mov
xchg
ret
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
sbb
sbb
enter
nop
cld
jae
add
in
add
add
loopne
mov
push
mov
in
lock
add
cli
int3
push
sub
add
lock
std
jno
xor
add
push
add
clc
repnz
nop
cld
jae
imul
clc
repnz
nop
cld
jae
xor
mov
add
add
clc
repnz
nop
cld
jae
add
mov
movsb
mov
pmaxub
clc
repnz
nop
cld
jae
and
dec
cmp
mov
nop
leave
jmp
mov
fcomp
add
adc
repnz
nop
cld
jae
popl
add
js
and
and
clc
repnz
nop
cld
jae
sahf
fistpl
add
test
ret
push
mov
xchg
ret
aad
sahf
sub
insl
rep
clc
repnz
nop
cld
jae
adc
xor
push
sbb
mov
xchg
ret
mov
add
insb
lcall
add
clc
repnz
nop
cld
jae
add
add
movzwl
clc
repnz
nop
cld
jae
add
cmpsb
sahf
jb
mov
mov
mov
nop
cld
jae
lcall
xor
and
clc
repnz
nop
cld
jae
js
mov
mov
dec
push
mov
nop
leave
jmp
add
movsb
pop
repnz
repnz
add
out
jmp
dec
je
xor
ror
push
mov
xchg
ret
add
add
imul
add
mov
inc
add
add
addb
cmpsl
lahf
add
push
mov
nop
leave
jmp
jg
fdivs
add
jbe
fsubr
jbe
incl
add
movsb
aas
pop
add
mov
sahf
add
fmul
mov
clc
repnz
nop
cld
jae
cmp
js
add
mov
xchg
ret
add
fdivrl
stos
test
push
mov
nop
leave
jmp
add
add
dec
inc
push
mov
xchg
ret
add
add
faddl
add
add
out
add
mov
xor
scas
push
push
mov
xchg
ret
sahf
add
add
or
or
and
push
mov
xchg
ret
jg
add
insb
add
fisttpll
add
repnz
nop
cld
jae
add
add
jl
inc
add
add
push
in
add
add
mov
out
mov
clc
repnz
nop
cld
jae
add
mov
add
nop
add
push
mov
xchg
ret
mov
add
mov
push
mov
nop
leave
jmp
dec
add
add
les
clc
repnz
nop
cld
jae
in
add
add
enter
add
add
repnz
nop
cld
jae
in
add
popf
dec
clc
repnz
nop
cld
jae
add
mov
fadds
add
push
clc
repnz
nop
cld
jae
mov
mov
lcall
or
add
repnz
nop
cld
jae
add
aad
add
push
mov
xchg
ret
fsubrs
pop
add
mov
push
mov
nop
leave
jmp
add
mov
mov
mov
nop
leave
jmp
mov
add
jae
mov
clc
repnz
nop
cld
jae
add
pop
add
xor
lcall
nop
nop
cld
jae
add
add
mov
rclb
fs
inc
add
loope
and
add
and
mov
mov
push
mov
nop
leave
jmp
add
js
xchg
mov
test
add
in
nop
leave
jmp
fidivrs
cmp
repnz
nop
cld
jae
xor
mov
sub
push
push
clc
repnz
nop
cld
jae
add
xor
push
mov
nop
leave
jmp
js
sub
rorl
add
mov
mov
clc
repnz
nop
cld
jae
or
pop
add
adc
repnz
nop
cld
jae
jg
add
repnz
mov
add
rolb
clc
add
and
add
aaa
or
add
xor
jne
clc
repnz
nop
cld
jae
pop
inc
or
xchg
call
push
mov
xchg
ret
cmp
shrl
add
int3
aad
add
add
repnz
push
adc
push
clc
repnz
nop
cld
jae
add
add
fisubrl
clc
repnz
nop
cld
jae
add
add
add
mov
dec
adc
repnz
nop
cld
jae
add
pop
add
add
mov
push
mov
xchg
ret
mov
add
add
mov
xchg
clc
repnz
nop
cld
jae
add
adc
mov
rclb
rolb
xchg
ret
add
xor
add
cmpl
add
push
mov
nop
leave
jmp
fimuls
add
xchg
push
mov
nop
leave
jmp
movsb
or
mov
daa
into
inc
add
add
ss
mov
push
mov
nop
leave
jmp
add
add
add
dec
jecxz
clc
repnz
nop
cld
jae
xor
pop
roll
mov
adc
repnz
nop
cld
jae
xor
xor
jae
in
nop
leave
jmp
imul
push
mov
clc
repnz
nop
cld
jae
xchg
cmp
pop
push
and
mov
decl
push
mov
xchg
ret
sub
fiadds
fdivl
mov
push
add
add
scas
and
sahf
add
fdivrl
clc
repnz
nop
cld
jae
or
add
sub
clc
repnz
nop
cld
jae
add
add
add
sub
inc
add
add
sbb
add
repnz
nop
cld
jae
insb
add
or
shr
ljmp
fcoml
clc
js
pop
fadds
add
xor
mov
je
clc
repnz
nop
cld
jae
cmpl
mov
xchg
ret
add
add
fidivrs
add
repnz
nop
cld
jae
add
mov
imul
push
clc
repnz
nop
cld
jae
scas
add
aad
fiadds
loope
xchg
jnp
inc
and
mov
nop
leave
jmp
add
xor
sub
or
add
add
repnz
nop
cld
jae
add
addb
out
cld
clc
repnz
nop
cld
jae
loope
fiadds
jbe
insb
fsubl
repnz
nop
cld
jae
add
add
jns
add
push
mov
xchg
ret
add
mov
clc
repnz
nop
cld
jae
movsb
insb
mov
mov
jg
clc
repnz
nop
cld
jae
push
pop
jg
add
bound
mov
jmp
add
jg
sub
add
fistl
push
in
nop
leave
jmp
xor
add
mov
lea
push
mov
nop
leave
jmp
push
dec
pop
add
xabort
nop
nop
cld
jae
sub
add
sub
add
or
inc
xor
clc
repnz
nop
cld
jae
xor
xor
clc
repnz
nop
cld
jae
fadds
add
add
push
mov
xchg
ret
add
fcoms
sahf
mov
add
push
mov
xchg
ret
clc
jg
push
add
ljmp
sub
repnz
nop
cld
jae
and
fiadds
push
sbb
repnz
nop
cld
jae
mov
mov
xchg
in
mov
clc
repnz
nop
cld
jae
aad
sub
xor
mov
xchg
ret
mov
sub
ljmp
nop
cld
jae
add
jg
sbb
in
nop
leave
jmp
add
sbb
enter
clc
repnz
nop
cld
jae
add
pop
add
add
in
nop
leave
jmp
in
add
dec
or
mov
nop
leave
jmp
mov
and
mov
mov
push
aaa
sahf
pop
push
mov
xchg
ret
add
mov
sbb
cmp
in
nop
leave
jmp
add
clc
sub
or
test
hlt
clc
repnz
nop
cld
jae
push
clc
xor
push
mov
xchg
ret
add
ficoms
lcall
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
fadds
mov
popa
add
repnz
nop
cld
jae
add
outsl
movzwl
clc
repnz
nop
cld
jae
adc
mov
shr
clc
repnz
nop
cld
jae
add
add
xor
mov
nop
leave
jmp
add
scas
add
fdivs
mov
cmp
ret
js
mov
sbb
hlt
adc
push
mov
add
addl
mov
mov
repnz
nop
cld
jae
add
xor
push
mov
nop
leave
jmp
add
fadds
add
sub
clc
repnz
nop
cld
jae
mov
movzwl
clc
repnz
nop
cld
jae
add
add
out
jmp
lcall
add
add
add
add
insb
call
clc
repnz
nop
cld
jae
mov
add
adc
add
add
repnz
nop
cld
jae
add
jmp
in
add
add
clc
repnz
nop
cld
jae
sub
push
mov
nop
leave
jmp
add
sub
add
dec
add
push
mov
xchg
ret
adc
add
sub
aad
mov
clc
repnz
nop
cld
jae
xchg
clc
inc
add
mov
nop
nop
cld
jae
or
and
mov
nop
leave
jmp
cmpsb
add
scas
add
enter
add
add
repnz
nop
cld
jae
add
idiv
clc
repnz
nop
cld
jae
js
xor
dec
add
repnz
nop
cld
jae
add
ficomps
clc
repnz
nop
cld
jae
sahf
cmpsb
aas
fldt
add
notb
mov
mov
push
mov
xchg
ret
add
add
add
or
subl
clc
repnz
nop
cld
jae
add
pop
rol
clc
repnz
nop
cld
jae
aad
add
add
pop
pusha
push
mov
xchg
ret
scas
jg
add
imul
add
push
push
mov
nop
leave
jmp
pop
add
add
dec
add
add
inc
add
repnz
nop
cld
jae
cmpsb
fadds
js
loop
mov
push
mov
shrb
jg
add
xchg
pop
loopne
insl
lock
je
add
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
aad
add
cmp
aas
adc
in
nop
leave
jmp
sub
fstpt
clc
repnz
nop
cld
jae
insb
xor
fildl
aad
mov
clc
repnz
nop
cld
jae
add
add
lcall
jae
add
fmuls
jne
xchg
lds
loopne
clc
repnz
nop
cld
jae
jg
sub
repnz
nop
cld
jae
inc
add
add
mov
xbegin
jae
push
add
js
add
xor
pop
mov
push
mov
nop
leave
jmp
sub
mov
imul
push
mov
nop
leave
jmp
mov
cmpsb
faddl
cmpl
push
mov
nop
leave
jmp
push
dec
aad
add
fs
and
push
mov
xchg
ret
add
add
test
push
xchg
add
sti
ljmp
add
xor
mov
pop
add
mov
add
push
mov
fldl
xor
add
scas
mov
add
clc
or
jp
jp
xchg
add
insb
outsl
inc
add
sbb
lahf
int3
add
mov
fdivrl
add
pop
cmp
cmp
in
adc
mov
jecxz
add
rolb
mov
ret
mov
inc
pop
sub
rolb
pusha
add
lahf
or
or
mov
leave
dec
mov
or
ficoml
push
pop
pop
xor
push
pop
sti
fnstsw
out
sub
mov
sub
fstpl
dec
out
and
mov
dec
lock
cmp
rolb
xlat
xor
mov
out
icebp
push
es
pop
sbb
mov
add
and
jno
outsl
inc
adc
lods
pop
jg
stos
std
cli
xchg
das
fmull
cltd
push
mov
mov
xor
sub
pop
add
adc
mov
push
add
mov
adc
pop
pop
mov
mov
bound
mov
stos
cmp
and
pop
push
jae
test
rcll
inc
add
cmp
movsb
mov
sbb
xchg
adc
in
into
test
lods
mov
mov
mov
inc
cli
cmc
pop
jb
mov
cmp
js
dec
addb
gs
mov
xchg
add
js
ss
pop
insl
les
adc
mov
stc
repz
xchg
add
and
mov
mov
push
pusha
add
aam
xor
popa
xchg
add
pop
sbb
xor
lock
add
xchg
pop
push
or
mov
jae
inc
push
adc
std
mov
pop
or
pop
cmp
out
cmp
inc
add
cs
dec
pop
jnp
add
sbb
cmpsb
dec
hlt
in
mov
dec
cltd
insb
sarl
or
cmpsl
inc
and
pop
loopne
mov
sub
add
int
test
pop
xchg
add
add
add
push
push
xor
add
cmp
dec
cmp
cmp
je
jb
mov
fsts
stos
stos
out
out
rolb
mov
jae
add
insb
push
je
mov
aaa
mov
pop
cwtl
push
xchg
add
mov
xor
adc
mov
mov
insl
push
rolb
mov
mov
cltd
ja
and
aaa
mov
mov
pusha
add
push
pop
and
mov
inc
rcl
inc
shr
arpl
arpl
fwait
inc
clc
lods
sti
sbb
sub
fnstsw
and
mov
fwait
in
sub
lock
jge
xlat
insb
into
je
sti
decl
es
xchg
fidivl
testl
add
add
andl
mov
jns
add
mov
add
lcall
adc
pushf
push
movsb
call
mov
add
push
jl
xchg
add
mov
xchg
cmp
movsl
push
ror
inc
add
and
loope
fmull
mov
mov
mov
xor
mov
or
add
or
add
mov
mov
loope
pop
add
mov
test
mov
addr16
loopne
mov
mov
cmp
outsl
mov
repnz
push
rcll
lahf
adc
mov
adc
filds
push
push
shll
mov
aad
mov
clc
xlat
test
gs
icebp
xchg
outsb
and
mov
sub
and
mov
add
mov
add
add
popa
out
fsin
add
add
xor
dec
adc
mov
mov
mov
push
add
imul
js
test
icebp
add
test
js
cld
add
mov
add
xchg
icebp
push
popf
xor
add
mov
inc
dec
mov
jg
xchg
adc
mov
mov
pop
push
cs
pop
jbe
sbb
pop
in
stc
sub
inc
add
aaa
sub
mov
clc
lcall
dec
and
idivl
inc
pop
adc
mov
mov
mov
add
lret
mov
nop
add
add
push
mov
sub
mov
dec
popa
fmul
jnp
add
mov
fisubs
add
xchg
push
mov
mov
add
out
adc
cmp
fnsave
mov
sarl
dec
jne
add
push
clc
xor
xor
mov
cmp
mov
lds
add
pop
popa
clc
call
fcoml
xchg
enter
mov
mov
jle
rolb
mov
jecxz
or
pop
sbb
jbe
js
add
cmpsb
lahf
lds
fimuls
add
mov
sti
push
jbe
push
add
mov
rolb
mov
arpl
mov
out
das
mov
jnp
lea
jnp
sub
sbb
movsl
scas
outsb
lcall
add
xor
mov
push
ret
inc
fs
fsub
or
jl
jle
aam
dec
insb
dec
int
pusha
add
ja
add
add
cli
push
sub
add
add
addb
not
and
push
lds
add
mov
add
mov
addr16
mov
hlt
aas
adc
loopne
mov
pop
cwtl
stc
push
add
add
sub
add
xchg
mov
xor
mov
sbb
mov
addb
leave
ret
lcall
lahf
cmp
xor
add
mov
mov
jg
xor
push
inc
xor
mov
out
lahf
xor
push
ljmp
add
jg
jmp
pop
dec
sbb
cvtps2pd
jb
mov
daa
aad
ret
inc
push
jmp
xchg
sbb
add
cmp
inc
repnz
mov
pop
rcll
les
push
mov
jno
scas
insb
jg
sub
sub
mov
gs
push
gs
cmp
add
mov
mov
loope
inc
es
dec
mov
rolb
mov
jne
sbb
rolb
mov
lret
mov
scas
imul
sub
jge
gs
repz
jns
sub
mov
mov
mov
insb
xor
iret
icebp
push
test
into
lods
lea
add
mov
mov
lret
jp
popf
data16
gs
or
jns
mov
lcall
nop
add
xchg
es
pop
and
sub
push
add
daa
addr16
fs
push
mov
call
mov
mov
mov
lsl
or
push
add
push
notb
jle
mov
add
add
add
jmp
mov
int
out
adc
dec
pop
data16
jg
es
lret
mov
xchg
xchg
cld
push
add
add
addb
mov
dec
into
loope
jmp
aam
ds
bound
mov
loopne
mov
adc
mov
xor
sbb
cmp
adc
mov
lea
in
and
popf
sbb
gs
jecxz
xor
mov
dec
pop
nop
add
aaa
adcl
or
add
js
in
dec
cmp
dec
inc
mov
in
fucompp
jecxz
jecxz
int
pushf
repz
mov
fwait
and
jmp
add
dec
pop
sbb
sub
outsb
rolb
mov
add
outsl
test
dec
inc
sbb
mov
mov
out
adc
mov
add
rolb
mov
dec
fisttps
aad
cld
outsb
push
test
mov
add
mov
sar
inc
cli
lahf
cld
mov
test
lret
es
jbe
out
jnp
scas
mov
mov
mov
xchg
repz
test
mov
mov
das
test
push
sti
pop
fidivrs
pop
sub
cmp
add
rolb
mov
ljmp
inc
int
lea
sub
xor
scas
jne
dec
ljmp
fldt
mov
jbe
add
xchg
stos
test
xchg
dec
fdiv
add
mov
inc
rolb
mov
jmp
mov
add
mov
mov
or
inc
data16
and
out
lea
lds
mov
rcrl
jnp
ds
jle
loope
in
mov
out
push
add
mov
mov
inc
insl
xchg
mov
sub
test
mov
bound
mov
add
mov
loopne
mov
add
orl
or
push
roll
mov
outsl
popl
mov
insb
div
dec
pop
xchg
rorl
mov
addr16
cli
mov
mov
out
sub
arpl
fidivrl
mov
mov
jo
mov
add
add
and
mov
ret
pop
push
adc
mov
jle
mov
fcomps
movl
lock
je
jno
cmpsl
lods
sarl
mov
mov
mov
mov
add
mov
jne
mov
mov
mov
jge
ja
add
cmp
add
leave
or
jb
mov
push
mov
out
fisubl
push
testb
es
mov
outsl
aad
jmp
outsb
sbb
insb
xchg
mov
add
jb
mov
pop
addb
aas
xchg
push
sti
cmp
imull
jge
repnz
mov
mov
mov
mov
mov
xchg
add
mov
mov
adc
mov
and
mov
sbb
leave
sub
xlat
cmp
mov
inc
insb
mov
jns
and
add
add
xor
sbb
pop
cs
pop
rcll
push
mov
add
push
frstor
xchg
xor
add
lret
adc
mov
xchg
pop
popa
sub
mov
mov
data16
or
and
negb
push
cld
mov
add
jecxz
xor
xchg
mov
dec
imul
push
sbb
mov
and
mov
lahf
mov
popf
test
xchg
ds
add
add
add
fidivs
inc
jb
mov
add
outsb
outsb
repnz
xchg
cmp
mov
stc
sahf
jae
and
mov
mov
push
xchg
mov
jne
popa
and
add
sbb
rolb
mov
mov
or
add
clc
add
mov
icebp
xor
mov
inc
adc
cld
fdivr
mov
mov
test
stos
xor
push
add
xor
mov
add
add
aaa
gs
mov
stc
sub
std
sbb
dec
stos
mov
jno
add
add
add
jl
inc
stc
sbb
add
shl
mov
insb
and
mov
mov
mov
jae
bswap
cmpsl
push
iret
js
inc
add
sub
add
lods
mov
mov
mov
mov
aas
aaa
mov
mov
imul
add
add
mov
mov
scas
pop
adc
negl
lahf
push
sarw
repz
les
jne
aaa
xchg
mov
cmc
jmp
daa
jle
lds
imul
mov
add
jb
mov
fwait
push
pushf
push
add
out
xchg
arpl
add
push
gs
add
aas
mov
push
das
idivb
add
add
pop
jno
add
outsl
or
push
inc
jle
mov
mov
mov
mov
fistps
push
fcomp
xchg
pop
sahf
jl
add
loopne
mov
add
and
scas
lods
adc
mov
add
mov
nop
add
add
lret
ss
add
les
mov
mov
pusha
add
add
add
inc
add
test
add
mov
pop
dec
inc
in
adc
jo
mov
mov
ja
scas
loope,pn
faddl
ljmp
add
xor
mov
and
add
pop
fildl
adc
mov
adc
mov
bound
mov
std
iret
xor
pop
xchg
add
mov
lock
adc
mov
add
jae
into
jle
popa
jne
add
popf
js
xchg
add
ret
inc
addb
mov
sub
adc
inc
add
ss
xor
mov
sub
xchg
addr16
icebp
push
inc
add
stos
and
lods
mov
in
int3
push
mov
add
add
sbb
pop
pushf
jne
hlt
push
push
pop
xchg
inc
add
dec
ret
daa
or
popf
inc
les
add
mov
lret
add
push
cmp
mov
xchg
add
ret
cmp
ret
cmp
int
add
pusha
add
add
out
mov
mov
imul
mov
sbb
dec
arpl
scas
dec
out
test
push
add
mov
es
xor
inc
mov
mov
add
movb
jae
jb
mov
or
mov
mov
push
pop
mov
add
mov
add
mov
das
aaa
lods
push
test
mov
xchg
cmc
js
dec
imul
mov
add
dec
sub
iret
jmp
je
add
mov
add
mov
mov
ret
ljmp
jl
out
sti
mov
xchg
jg
add
addb
mov
out
out
test
mov
std
out
mov
imull
sbb
ror
xchg
xor
mov
cmp
mov
in
rolb
mov
mov
jmp
pusha
add
rolb
mov
add
add
push
add
mov
or
rolb
jns
add
inc
add
add
lcall
push
xor
push
add
outsb
popa
sti
cs
mov
mov
add
out
jae
aaa
pop
sahf
addb
push
add
mov
and
stc
test
ss
sbb
aaa
pop
out
insb
movq
loop
mov
or
sub
ret
addb
in
fbstp
cmp
or
aam
push
add
loopne
mov
push
add
imul
adc
mov
inc
lea
loope
bound
mov
pop
je
sub
push
jnp
dec
insb
movsb
adc
je
ja
sub
sahf
sub
cmc
mov
add
cmp
add
fsubl
in
enter
push
mov
js
add
xor
pushf
mov
mov
stc
mov
loop
mov
ss
outsb
pop
out
push
add
loop
mov
sub
jo
mov
in
je
in
test
sbb
icebp
lods
cmc
jo
mov
mov
rcr
stos
add
mov
loopne
mov
add
push
push
jecxz
xor
sub
test
dec
test
call
add
mov
pop
xchg
push
movsl
leave
push
cmp
pusha
add
mov
add
xchg
add
lea
and
jg
cld
test
pop
pushf
clc
addb
add
or
add
sbb
movsl
lds
add
add
add
lret
xor
mov
cmpsb
xchg
pusha
add
aaa
sbb
add
add
addb
xchg
push
js
fdivrp
lds
add
add
mov
add
add
add
push
out
sti
mov
add
lock
xchg
xchg
into
push
fs
clc
pushf
dec
sahf
push
test
rorl
add
mov
addb
rolb
mov
out
xchg
push
add
test
in
popa
cwtl
sti
out
out
add
lods
stos
xchg
js
fstp
or
hlt
insb
repz
xor
daa
shl
mov
push
add
pop
stc
push
inc
add
cmp
or
jbe
sub
and
push
jmp
out
sbb
sbb
pop
jg
lds
pop
push
cli
mov
pop
xor
add
mov
mov
mov
add
mov
add
mov
lods
int3
ja
jns
add
and
fsubl
leave
ja
popf
and
xchg
rcrl
inc
pop
pop
inc
lahf
fwait
movsb
mov
lds
fcoms
test
or
sub
addb
and
mov
mov
xchg
add
inc
dec
jg
es
push
add
jmp
add
mov
inc
mov
cmp
pop
out
adc
mov
push
or
shrl
loope
and
mov
xor
aam
pop
push
add
ret
mov
pop
jne
add
inc
mov
popf
adc
mov
outsl
xchg
add
ds
add
test
mov
bound
mov
loop
mov
adc
jg
add
mov
test
mov
add
fldenv
push
mov
mov
out
pop
and
test
out
lods
dec
pusha
add
add
mov
ljmp
adc
pop
data16
insl
imul
add
mov
test
add
xchg
add
xchg
lea
xchg
xchg
xchg
enter
aaa
and
jns
inc
add
add
dec
xor
cmp
lods
pop
fs
test
mov
lret
mov
add
push
sub
add
push
jnp
hlt
pushl
sub
rolb
mov
add
int3
push
push
sti
mov
mov
les
insl
sub
movsl
les
or
push
popf
js
add
jae
popf
scas
cwtl
xchg
add
or
addb
rolb
fsts
inc
and
mov
pop
popa
cmpsl
scas
or
fists
jmp
mov
dec
cmpsl
outsb
inc
rolb
mov
int3
test
stos
movsb
hlt
push
sub
and
mov
mov
add
mov
in
addb
inc
add
mov
into
push
repnz
mov
out
icebp
sub
fistpll
xlat
popf
xchg
add
cli
sub
push
pshufw
add
scas
clc
mov
insb
mov
jmp
and
xlat
push
add
add
sub
add
mov
mov
sub
jae
lcall
push
add
out
in
or
push
adc
cltd
inc
lcall
lahf
cltd
dec
mov
jge
es
jle
add
scas
fistpll
add
les
or
enter
in
mov
sti
lods
movsl
xor
mov
cmpl
push
add
int
add
rolb
mov
xchg
pop
mov
call
jns
fs
jb
mov
add
and
les
push
add
add
cmp
xchg
add
mov
mov
add
insl
push
add
sub
sahf
imul
mov
inc
inc
out
lret
sub
push
scas
outsb
into
adcl
add
ja
xlat
jg
flds
mov
add
add
xor
mov
jg
mov
sub
add
divl
xor
in
add
add
adc
mov
nop
add
mov
xor
mov
test
imul
dec
add
xor
mov
add
mov
pop
jge
icebp
imul
add
sub
and
mov
add
dec
cld
outsl
mov
ret
fxch
dec
dec
movsl
inc
mov
lds
add
push
test
add
pop
fstpt
orl
jo
mov
pop
sub
mov
mov
pushf
fldcw
es
add
xchg
mov
sbb
inc
std
adc
aam
or
push
mov
mov
in
dec
mov
call
adc
mov
dec
sub
xchg
dec
mov
xor
mov
scas
aam
lret
push
clc
pop
mov
add
cltd
fadd
pop
sbb
and
mov
xchg
fsubrs
add
mov
mov
sub
sbb
xchg
movsl
fisubrl
leave
pushf
test
bound
mov
jae
xchg
or
int3
leave
test
inc
mov
cmpsl
push
fwait
cmp
mov
insb
addr16
add
sahf
or
mov
add
pop
sub
add
mov
mov
lock
sbb
jmp
add
aas
dec
in
mull
jo
mov
mov
sbb
stos
and
jmp
dec
sbb
jbe
mov
add
xor
mov
add
mov
inc
ret
or
add
xor
mov
aas
dec
and
xchg
std
aas
push
mov
xchg
icebp
inc
add
jbe
jb
mov
ror
pop
arpl
imul
subl
pop
mov
or
add
cltd
daa
jp
or
sbb
mov
imul
jmp
inc
cmp
or
sti
lds
rcr
inc
test
or
mov
add
adc
mov
push
add
mov
pop
outsb
mov
add
scas
or
mov
ss
mov
out
xchg
loopne
mov
xchg
mov
push
ds
in
jbe
xchg
mov
add
pop
stos
cs
sbb
or
cmpsb
sub
rolb
mov
and
mov
mov
mov
inc
add
fistps
mov
push
movsb
cwtl
icebp
test
xchg
add
aaa
and
add
ds
addb
sti
sub
aad
outsl
sbb
mov
inc
stc
xchg
sub
fldl
add
ss
inc
cmc
imul
cmc
add
mov
cmp
add
out
aam
pop
inc
mov
mov
rcr
or
lods
in
cld
addb
sub
mov
jp
xor
add
sbb
adc
or
pop
cmpsl
xor
add
jmp
fwait
stos
scas
les
shll
in
add
ja
loopne
mov
arpl
add
rolb
mov
sti
repnz
cmc
outsl
push
add
add
add
movsb
cmp
jae
push
add
mov
mov
pop
sbb
and
mov
cmp
inc
add
mov
int
sahf
dec
and
sbb
add
adc
addb
mov
mov
mov
sbb
jae
pop
lods
xor
in
and
mov
xor
mov
insb
cmpsb
push
add
mov
les
cmp
and
mov
cmpsb
xchg
lea
push
add
outsl
incb
pop
stos
call
addb
pop
and
out
jmp
dec
and
add
push
push
add
arpl
mov
std
mov
mov
jecxz
adc
out
incl
add
daa
lret
dec
movsl
iret
shrl
js
mov
sbb
stc
loopne
mov
mov
lock
incb
add
push
lds
lods
shrl
mov
pop
in
leave
adc
mov
je
add
add
insb
and
mov
outsl
adc
adc
mov
in
iret
nop
add
add
xor
in
or
mov
push
add
mov
pop
lods
dec
mov
rorl
sbb
jl
adc
lods
xchg
dec
pop
pusha
add
xor
push
mov
sub
ret
jb
mov
xchg
add
ja
sub
std
mov
es
add
hlt
sub
hlt
sub
das
and
mov
cmp
inc
cmpsl
iret
clc
push
xor
and
dec
lods
leave
mov
push
mov
cltd
mov
push
out
xchg
add
mov
push
dec
xor
mov
pop
or
pop
mov
mov
ds
cmp
sbb
popf
out
lcall
and
addb
sbb
lea
cmp
rolb
in
ret
push
add
add
outsb
in
jbe
add
in
js
cmc
mov
fists
xchg
add
jge
outsb
je
add
xchg
ljmp
aad
add
outsl
cmpsl
dec
mov
mov
jne
clc
and
add
test
fildll
dec
push
ds
pop
and
int3
sub
add
clc
xor
mov
ficoml
mov
mov
push
in
mov
fsubs
add
fildl
lret
divl
sahf
jmp
pop
inc
add
mov
cmp
lret
cmpsl
fiadds
cwtl
jnp
shll
add
lods
push
dec
and
clc
mov
mov
fistl
mov
add
inc
test
sbb
scas
movsb
loope
pop
int
xor
push
aaa
ljmp
mov
dec
movsl
sub
loop
mov
add
add
mov
inc
xchg
sbb
test
clc
mulb
add
pop
adc
mov
pop
adc
mov
mov
pop
aam
push
fs
dec
jp
int
je
jnp
ret
push
pop
mov
mov
insb
mov
cmc
dec
addb
js
insb
sub
jne
in
jmp
leave
push
add
das
arpl
adcl
add
mov
movsl
repz
add
imul
test
sbb
jle
xor
mov
adc
popa
scas
lods
mov
les
inc
add
add
adc
mov
mov
lock
pop
dec
jnp
push
sbb
dec
mov
sub
pop
ds
add
add
rolb
mov
inc
lret
rolb
mov
add
add
dec
aaa
sbb
scas
jnp
xchg
aad
push
outsl
in
push
jmp
cmp
xchg
mov
xlat
hlt
subps
or
add
mov
loop
mov
aad
daa
pop
pushf
xchg
outsb
jg
out
xchg
sbb
mov
mov
sbb
lea
add
add
popa
jecxz
add
mov
add
mov
mov
mov
xchg
push
jle
outsb
enter
mov
add
xchg
add
int
adc
mov
mov
repz
dec
xor
divb
add
mov
push
add
dec
xchg
cld
inc
dec
cmp
and
mov
push
in
adc
mov
xchg
jo
mov
dec
jno
push
fmuls
dec
push
push
add
inc
jnp
stc
js
pop
ret
push
insl
cmp
jg
add
out
add
mov
leave
lcall
into
lret
mov
aam
cmp
scas
inc
cmp
and
add
test
mov
mov
cld
add
sbb
dec
out
int3
lods
fistpl
into
mov
repz
arpl
es
pop
adc
mov
mov
push
pop
pushf
jle
mov
sub
add
xchg
mov
mov
add
subl
outsb
std
push
jbe
sbb
or
in
sbb
add
mov
leave
and
push
rol
cltd
inc
add
xchg
sbb
adc
aad
add
jnp
insl
scas
out
xchg
add
lcall
add
mov
or
sub
dec
cld
shr
add
nop
add
mov
add
add
in
imul
lods
ss
sahf
adc
mov
or
test
dec
gs
add
les
divl
out
in
pop
push
push
mul
add
add
mov
mov
add
in
out
popa
xchg
mov
lret
mov
cmp
inc
int3
mov
rolb
mov
cmp
dec
lcall
cli
call
pop
in
scas
push
mov
mov
sbb
sbb
test
add
lahf
mov
mov
add
push
scas
lds
rep
or
mov
mov
and
add
outsb
pop
adc
or
fidivs
jns
icebp
iret
cld
sub
inc
push
popa
test
xchg
dec
dec
fldl
inc
jo
mov
cltd
push
cmp
add
push
cmp
enter
dec
xor
xor
aas
es
sbb
cwtl
pop
aad
dec
push
add
cwtl
add
mov
dec
sbb
sarl
rolb
mov
out
int3
pop
cli
int3
aas
mov
cmp
mov
fcmovne
sub
pop
push
sbb
aas
and
fs
push
sbb
add
mov
cld
in
stos
loopne
mov
add
mov
jne
add
addb
jl
push
es
inc
ss
aam
subps
add
mov
lea
add
push
aas
mov
sub
push
popa
mov
jno
mov
mov
sbb
add
add
xchg
fdivs
add
add
jb
mov
mov
pop
in
sbb
push
xor
xor
stc
mov
leave
rorl
mov
das
lret
adc
scas
add
add
and
inc
jecxz
push
add
lret
inc
add
mov
test
add
mov
fwait
test
mov
add
mov
adc
je
out
add
rolb
pop
inc
fdivs
leave
add
mov
out
sbb
xchg
lcall
add
mov
mov
xchg
jle
xchg
xor
push
push
inc
je
fdivr
lahf
mov
cmp
and
mov
jmp
mov
cmp
and
mov
lds
sbb
add
je
sbb
mov
es
mov
add
mov
and
mov
mov
push
pusha
add
sahf
dec
pop
ja
psubw
mov
popf
addl
xchg
out
mov
push
rolb
mov
add
jo
mov
jle
or
mov
jp
push
test
das
sub
clc
mov
sub
dec
nop
add
mov
add
add
sbb
in
xchg
add
mov
inc
push
mov
jle
pop
testl
pop
cltd
or
dec
pop
inc
notb
dec
add
mov
pop
inc
lahf
push
call
clc
fnstsw
or
clc
mov
cmpl
rorl
test
add
and
mov
jle,pn
xchg
mov
mov
mov
mov
icebp
inc
sub
and
mov
add
jno
mov
jnp
add
jno
out
cmp
mov
add
je
cmp
mov
push
fwait
addr16
rolb
mov
pop
fwait
adc
iret
ljmp
test
pop
mov
in
or
shll
mov
lods
insb
imul
out
xor
repz
mov
jno
fdivr
fwait
stos
aad
sbb
addb
cld
or
add
inc
rolb
mov
mov
shll
idivb
fisubs
test
fldl
in
ret
pop
out
fsubrl
xor
lods
ss
addb
cmp
add
mov
dec
inc
movsb
clc
js
add
sub
mov
mov
rcll
sti
mov
stos
movsb
in
pop
mov
stos
enter
mov
shll
mov
mov
mov
xor
sbb
mov
shll
aam
sbb
jne
jne
adc
mov
xor
mov
mov
add
add
add
mov
scas
mov
enter
add
loope
test
mov
xlat
pop
cmc
adc
mov
ss
sbb
repnz
jge
dec
jbe
cmp
jmp
add
hlt
xor
mov
adc
mov
mov
xorl
repz
inc
add
mov
or
jl
mov
lret
xor
addr16
hlt
movsb
jp
jg
and
lcall
sbb
inc
bound
mov
add
xchg
inc
cmc
rolb
mov
rolb
mov
ljmp
xchg
add
sub
shr
add
mov
add
adc
test
test
mov
mov
adc
xlat
call
std
cli
out
jle
adc
ljmp
std
push
out
add
add
mov
stc
xor
loop
mov
add
leave
mulb
add
add
push
jle
add
sahf
mov
add
xor
mov
mov
cld
push
enter
xor
mov
test
das
or
push
outsl
cltd
and
add
sub
mov
out
push
ss
pop
xchg
out
add
in
mov
and
mov
icebp
pop
and
mov
cmp
test
push
loope
es
fwait
clc
and
xchg
push
bound
mov
cmp
mov
lock
mov
jbe
lods
cmpl
add
jb
mov
addl
sbb
sub
sahf
loope
adc
mov
cmp
push
add
in
je
call
mov
outsl
dec
into
pop
cs
cmpsl
in
ss
je
add
outsb
insl
cwtl
xchg
out
sbb
xchg
add
add
mov
popf
add
mov
mov
add
out
sub
adc
mov
jmp
add
les
mov
add
imul
test
add
and
cmp
adc
pop
pushf
int
inc
add
in
inc
add
mov
push
inc
sbb
cmp
push
jno
or
out
add
mov
cmp
fidivl
mov
sbb
add
add
dec
cltd
das
jl
addb
sbb
addb
pop
pop
mov
add
xor
test
xor
jno
icebp
pop
xor
scas
jmp
adc
mov
daa
pop
xor
rorw
lcall
unpckhps
add
fcomps
cld
push
iret
mov
pop
cltd
test
jno
push
add
daa
xchg
or
add
cwtl
inc
and
mov
orl
test
xor
mov
mov
add
jnp
stos
and
lret
sahf
fcmovnbe
jg
cli
imul
fdivl
jnp
inc
pop
cmp
and
cli
frstpm(287
fbstp
adc
jno
or
add
mov
movsl
rolb
mov
mov
jp
mov
jne
fisubl
pop
sti
inc
adc
add
add
add
mov
cmp
cmp
sub
jp
sbb
popa
std
jecxz
ret
adc
jle
sub
mov
pop
xchg
push
mov
fisubrl
ret
test
imul
aas
add
mov
mov
bound
mov
repnz
sub
adc
mov
add
loop
mov
mulb
inc
push
mov
add
shrl
dec
lea
add
inc
xchg
rolb
mov
add
lcall
lds
mov
int3
pusha
add
negl
sub
jmp
mov
call
adc
mov
mov
fildl
pop
pop
mov
fildl
adc
or
stos
xchg
bound
mov
mov
xchg
nop
add
add
hlt
cmpsl
test
adc
mov
xchg
push
pushf
enter
add
jl
clc
push
movsb
mov
add
ret
repnz
mov
lahf
jmp
add
mov
enter
mov
cmp
add
aam
lds
sti
adc
jle
test
popf
cwtl
and
in
fcom
cli
adc
mov
cmc
lcall
aam
out
add
push
mov
add
mov
mov
add
popf
mov
mov
or
jbe
add
data16
mov
dec
pop
bound
mov
lds
add
mov
add
nop
add
fidivrs
add
xchg
add
dec
and
and
mov
pop
mov
in
fcmovb
add
lds
dec
push
and
inc
popa
icebp
add
mov
insb
sub
jne
jl
fcom
shll
sub
adc
sbb
cmp
mov
inc
test
pop
daa
dec
rolb
mov
and
mov
add
mov
add
sub
mov
push
mov
or
add
mov
push
add
bound
mov
mov
sbb
mov
incb
aas
shll
inc
cltd
pcmpeqw
in
or
rcll
mov
mov
hlt
outsb
sub
mov
add
les
cmp
fsubrs
iret
lds
mov
push
inc
add
mov
loope
jnp
mov
add
popf
mov
das
mov
mov
lahf
or
add
lods
cli
inc
jo
mov
aas
jns
xchg
sub
cmp
xor
pushf
add
mov
pusha
add
mov
mov
add
cmp
std
mov
push
xor
out
pusha
add
cmp
repnz
test
xchg
sub
or
iret
or
lret
test
cmpsb
mov
mov
repz
inc
mov
fists
add
add
lret
jns
addb
mov
js
add
or
mov
add
push
push
push
add
xchg
adc
mov
mov
mov
and
cld
or
mov
mov
lods
pusha
add
aam
xchg
pop
pop
cmp
gs
leave
aad
jle
add
ja
in
in
cmp
das
outsb
xor
enter
jg
add
pop
cmc
and
out
inc
cmp
mov
jl
sbb
enter
addb
cltd
daa
inc
mov
mov
std
loop
mov
add
mov
or
fbld
mov
mov
mov
out
pop
sub
inc
mov
mov
pop
pop
push
xchg
pop
dec
addb
addb
and
mov
rolb
mov
xchg
dec
mov
mov
jno
cmpsl
xchg
xor
mov
add
add
add
push
rolb
mov
push
sub
add
insb
pushf
or
cmp
mov
xor
mov
bound
mov
div
dec
dec
punpckhdq
mov
arpl
mov
rolb
mov
popa
pop
or
xchg
mov
rolb
mov
movq
mov
lahf
outsb
scas
ret
push
xchg
sbb
cmpsl
mov
loopne
mov
mov
mov
mov
and
mov
and
pop
movsl
lods
jo
mov
mov
repnz
push
lcall
xor
cmp
cmp
out
lcall
mov
xor
mov
or
fcmovnbe
sub
cmpsb
xchg
movsb
fistl
add
fisubs
iret
fidivrs
mov
push
add
mov
pop
cwtl
push
mov
ja
push
inc
add
jo
mov
sbb
fcoms
rolb
mov
ds
iret
cmp
popa
or
mov
jnp
adc
mov
xchg
xchg
dec
cmc
push
insl
cmp
mov
add
imul
xor
mov
ds
jmp
cmpsb
ret
adc
and
pop
bound
mov
xchg
rcll
repnz
add
mov
mov
out
out
pop
mov
out
repnz
add
test
jmp
cmp
cltd
xor
mov
add
mov
imul
fucomp
push
into
cmc
jnp
loope
cli
xchg
jecxz
jecxz
ud0
mov
add
add
pop
adc
cmp
jns
outsb
aad
out
notl
cld
je
ret
notl
mov
add
pushf
jne
add
fxch
mov
add
mov
add
scas
aad
movsl
icebp
fadds
loope
or
addb
mov
nop
add
inc
add
jne
add
ret
xchg
jne
add
mov
push
repz
sbb
fistl
ja
inc
add
scas
adc
mov
scas
lret
mov
les
mov
and
mov
rolb
dec
push
xchg
jns
and
mov
in
xchg
inc
jg
adc
mov
mov
and
add
cmpsb
sbb
cmp
add
add
add
xchg
add
add
hlt
call
dec
imul
inc
cmp
add
nop
add
add
add
add
sub
movsb
sub
dec
dec
stos
loope
punpcklwd
jae
popa
and
xor
dec
xchg
cmp
mov
jno
pop
and
jp
xlat
pushf
lret
push
add
cmp
adc
mov
ret
loop
mov
add
rolb
adc
aam
pop
mov
mov
out
in
enter
test
sub
aas
pop
and
rcrl
add
hlt
pushf
cmp
xlat
imul
repnz
cmp
dec
mov
pop
adc
mov
sbb
mov
cltd
out
iret
ffree
sub
jne
dec
push
add
mov
dec
test
decb
mov
add
call
mov
sbb
sti
mov
xor
mov
cmpl
mov
adc
jne
inc
cltd
lock
popf
rolb
mov
cmc
pop
push
add
xchg
lods
add
add
dec
ficomps
jo
mov
adc
mov
testb
xchg
jge
add
add
xor
sbb
xchg
push
add
jle
pop
jmp
ja
add
mov
push
adc
mov
mov
mov
test
test
mov
in
sub
test
push
and
xor
mov
int3
add
lahf
push
add
clc
inc
and
repnz
mov
arpl
add
movsb
addr16
mov
mov
mov
jmp
in
leave
mov
movsl
test
push
add
mov
add
lock
mov
jo
mov
lock
add
or
ficoml
push
add
and
inc
enter
fstl
and
mov
jnp
mov
fcompl
sbb
mov
push
mov
into
mov
pop
or
add
pop
push
lret
and
add
filds
out
shll
fldl
add
repz
test
pop
incb
add
cmp
repnz
sbb
sub
loopne
mov
and
jge
xlat
icebp
add
mov
pop
scas
outsl
mov
or
mov
addb
jbe
iret
mov
xor
mov
add
bound
mov
in
cmpl
stc
mov
push
aaa
lock
add
mov
in
fs
in
gs
das
xorl
xor
mov
add
adc
popa
inc
mov
add
inc
fbld
mov
add
sbb
sbb
add
pop
popa
push
outsb
adcl
mov
addb
jecxz
cmp
mov
jne
mov
ss
mov
mov
mov
pop
and
sbb
ss
inc
insl
ljmp
sahf
rcll
mov
mov
cmp
inc
xchg
movsl
and
mov
jmp
mov
dec
adc
and
mov
fcmovb
sbb
fwait
es
push
cld
mov
mov
mov
pop
outsb
xchg
jg
lds
add
mov
push
fidivrl
add
cld
adc
mov
add
adc
mov
xchg
mov
xchg
incb
out
test
ja
jl
cmp
mov
and
and
ljmp
mov
push
jbe
fbld
enter
jg
out
add
push
cmp
mov
or
sub
adc
mov
sbb
subl
in
add
call
jbe
mov
mov
mov
jae
add
adc
test
pop
daa
jmp
and
mov
test
add
mov
add
xor
in
sub
jns
int
rolb
rcrl
sahf
addb
mov
mov
flds
add
adc
mov
js
imul
test
ss
and
mov
add
add
push
dec
test
scas
out
sub
xchg
lds
jno
rolb
mov
add
pop
pop
inc
add
inc
in
add
push
call
enter
adc
mov
sub
jbe
lods
cmp
mov
xchg
aam
addb
mov
and
icebp
ljmp
mov
nop
add
dec
out
mov
rol
add
add
inc
adc
mov
outsl
mov
dec
insb
mov
pushf
cmp
mov
add
or
push
subl
push
movsb
mov
add
outsb
jle
add
mov
push
repz
scas
hlt
push
add
mov
adc
lds
mov
add
sub
mov
jns
xchg
sti
pop
jae
mov
jnp
and
dec
out
jge
add
add
pop
ffree
xor
outsl
in
clc
or
mov
ficoml
cltd
and
mov
popf
out
sub
cmp
add
scas
shll
mov
fstps
rolb
dec
iret
push
and
jnp
scas
xlat
mov
mov
cld
inc
mov
cs
sub
rol
shll
lcall
xor
mov
mov
je
sbb
daa
xor
mov
pop
or
stos
addb
arpl
pop
add
rcll
add
sbb
adc
mov
jb
mov
sahf
push
in
push
add
insb
stc
ret
insl
outsb
mov
js
cmp
mov
mov
test
into
cmpsb
stc
mov
sub
in
xor
mov
mov
pop
mov
add
and
mov
scas
xchg
ja
stos
leave
rolb
mov
ds
add
mov
mov
lock
xchg
add
mov
je
sub
rol
pop
cli
mov
add
push
out
shl
pop
mov
in
pmaddwd
insl
sub
inc
jp
out
dec
xor
mov
add
push
loopne
mov
stc
and
ret
inc
sub
inc
adc
mov
sbbl
out
xchg
addb
iret
in
adc
fcmovne
leave
mov
push
pop
xor
mov
sub
dec
jg
roll
or
lock
mov
into
pop
pop
mov
add
stos
mov
pusha
add
mov
dec
add
mov
xor
mov
mov
test
or
cs
add
arpl
insb
andl
pusha
add
mov
jns
mov
add
mov
add
and
mov
add
rolb
mov
in
int3
xchg
mov
mov
or
add
xchg
add
ja
rolb
mov
ffree
xchg
mov
lods
shrl
mov
mov
adc
cmpsb
xchg
pop
std
inc
xchg
push
icebp
js
push
iret
inc
mov
cs
mov
xchg
nop
add
cmp
inc
adc
mov
mov
mov
ror
add
xchg
add
popf
and
mov
ja
and
dec
in
rolb
cmp
or
jo
mov
mov
fs
mov
ljmp
pop
cmp
add
or
fbstp
in
int
pop
stc
dec
adc
mov
aad
cwtl
out
je
loopne
mov
sbb
add
dec
fwait
xor
mov
mov
sbb
lea
mov
sbb
inc
push
mov
add
mov
dec
loope
aad
sub
jno
ss
mov
test
call
aad
jns
imul
mov
mov
imul
inc
mov
mov
popa
mov
jl
int3
in
cwtl
or
mov
mov
test
jp
fs
testb
add
mov
add
mov
cmp
push
aad
and
sbb
outsl
pop
pop
and
mov
arpl
iret
push
pusha
add
add
mov
enter
sub
loop
mov
gs
pop
lret
fwait
int
add
arpl
out
jge
ss
test
add
inc
sub
inc
out
rcrl
fs
mov
add
add
aam
bound
mov
inc
add
cs
lods
addb
mov
fisubl
ret
inc
add
hlt
mov
add
xor
xchg
cltd
call
mov
insb
mov
clc
mov
cmp
inc
fisubrs
adc
mov
dec
pop
je
xchg
inc
add
mov
cmp
notl
mov
outsl
sub
push
jge
xchg
mov
iret
orl
add
out
or
add
push
lahf
push
enter
xchg
cltd
adc
cmp
sub
mov
xlat
in
inc
into
mov
rolb
mov
sub
add
sahf
rcll
add
inc
add
in
mov
add
out
mov
push
xchg
xor
mov
aad
clc
inc
in
pop
incl
add
adc
ljmp
or
ja
es
sub
adc
ss
xor
int
add
imul
pop
addb
enter
cld
push
bound
mov
add
mov
mov
add
enterw
ds
mov
mov
mov
sub
push
scas
addb
fmull
jp
mov
sbb
mov
add
xor
mov
jno
sbb
popf
popf
sbb
fwait
push
add
movsl
cltd
in
in
push
rolb
mov
addb
dec
fstps
add
cs
mov
sub
das
nop
add
mov
mov
lret
lret
sbb
shrl
add
js
mov
mov
mov
sbb
pop
mov
fdivrl
add
adc
mov
add
fsubrl
jge
add
add
int3
incl
fidivl
xchg
fwait
les
insl
dec
push
in
inc
insb
out
push
jb
mov
cli
movsl
adc
and
add
jg
lea
push
aas
or
dec
fdivl
xchg
mov
pop
push
jne
rolb
dec
sub
mov
xor
mov
addb
dec
aam
push
test
arpl
sbb
push
and
mov
mov
add
xchg
ficoml
jne
mov
int
ljmp
jnp
cmp
jbe
rcr
pop
es
inc
mov
test
pop
sbb
lcall
push
xlat
clc
test
rolb
mov
daa
mov
fucomi
mov
jmp
sbb
ret
adc
add
mov
mov
push
jle
lods
int
and
mov
cltd
xor
add
mov
repnz
pop
mov
cmpl
ficompl
jae
loope
fnstenv
sub
dec
pop
rolb
test
pusha
add
sbb
aas
int3
outsb
lret
test
sahf
cmp
adc
shll
mov
mov
mov
add
sub
cs
mov
in
gs
pop
dec
sub
imul
sbb
inc
out
xchg
fnstsw
addb
dec
insl
and
mov
clc
and
lret
jno
add
add
mov
shlw
ffree
mov
sbb
je
jns
add
aad
insb
sub
mov
or
aas
inc
xchg
add
sbb
adc
outsl
dec
rol
out
add
mov
cltd
movsb
sahf
xor
mov
add
fmuls
mov
mov
dec
add
call
insb
icebp
lock
mov
out
pop
push
cmp
xor
add
add
addb
mov
test
ljmp
rcrl
movsl
push
jge
fs
lock
dec
sbb
lahf
mull
add
mov
in
test
cmp
gs
mov
push
mov
add
cmp
inc
call
cmp
add
push
decl
enter
add
mov
rolb
and
mov
mov
add
lret
xor
lock
test
out
sub
imul
aas
sbb
add
cmp
add
or
loope
scas
loope
xor
mov
in
jo
mov
xor
sbb
lahf
inc
cmp
ss
add
add
mov
lock
mov
notb
add
add
pushw
mov
push
rolb
mov
mov
xor
mov
movb
mov
add
lods
jmp
add
add
imul
sub
ret
fidivrs
jnp
out
insb
xor
mov
pop
jo
mov
out
xor
mov
test
add
fadd
int
xchg
add
fldt
jnp
lahf
out
movsb
lcall
mov
add
push
xor
mov
mov
mov
jnp
mov
out
ljmp
add
fcmovu
repz
movsl
dec
ret
jge
and
cmc
fwait
inc
add
push
sbb
jne
jp
imul
les
test
cmp
mov
mov
add
inc
add
xchg
add
mov
push
sbb
sbb
cwtl
rolb
mov
add
sub
dec
adc
add
mov
sti
subl
rolb
xchg
fdivl
mov
add
mov
add
push
add
pushf
call
insl
scas
rolb
jne
lds
mulb
add
add
mov
dec
jnp
out
faddl
mov
push
add
aas
inc
add
dec
push
mov
mov
mov
or
add
add
mov
divl
loope
lock
inc
add
add
mov
enter
in
sbb
fdiv
add
push
popa
inc
add
notb
pusha
add
xor
mov
movsb
sub
xchg
and
mov
add
or
adc
mov
les
mov
outsl
push
push
sbb
cmc
fisubl
mov
les
aam
add
stos
mov
add
and
mov
pop
les
rolb
mov
imul
mov
add
add
inc
ds
pop
test
leave
mov
push
push
add
fidivrs
loopne
mov
hlt
add
dec
jg
sti
sbb
adc
mov
bound
mov
add
jb
mov
leave
jmp
dec
xchg
jmp
aad
mov
jge
decl
push
dec
dec
enter
add
add
mov
dec
mov
jnp
fincstp
cmpsb
lret
mov
mov
sahf
and
push
lahf
cmpsb
adc
mov
imull
nop
add
add
push
pop
xchg
mov
fstl
pop
outsl
mov
out
push
jg
cli
add
sub
mov
xor
dec
out
les
xor
mov
dec
or
roll
xor
dec
sub
mov
sahf
popl
add
das
mov
insb
xlat
jne
push
rolb
mov
cmpsb
gs
cmp
mov
outsl
jne
and
add
mov
or
test
mov
cwtl
fdivp
into
mov
add
mov
mov
pop
in
mov
jmp
movsb
ja
je
ret
sar
add
addl
cmc
pop
lcall
cmpsl
sbb
xchg
add
dec
add
add
scas
dec
push
sbb
mov
rolb
mov
xor
mov
add
clc
inc
xor
shll
dec
cld
sahf
je
pop
pop
rcll
mov
xor
add
mov
pop
js
adc
mov
add
sti
fisttps
cmp
std
sti
jb
mov
pop
mov
mov
and
mov
add
enter
mov
pop
mov
vpackssdw
mov
mov
decl
sbb
mov
add
test
add
pop
inc
push
adc
leave
jg
add
jb
mov
dec
push
cmp
cs
lods
fcomps
pushf
loopne
mov
adc
push
and
mov
pop
mov
dec
enter
lock
into
dec
and
mov
pop
popl
out
in
add
xor
add
mov
inc
inc
and
enter
mov
movsl
push
jmp
insb
or
outsl
test
inc
add
std
sub
test
inc
mov
fstpt
loopne
mov
enter
pop
sbb
pop
sti
mov
mov
gs
lea
and
add
mov
dec
inc
mov
mov
adc
add
add
cmpl
pop
pop
add
xor
insb
lret
xor
push
aad
add
iret
xchg
add
mov
or
sti
ja
and
mov
mov
mov
add
iret
testb
mov
xor
add
add
jp
mov
mov
sbb
sub
inc
inc
add
fsubr
xor
fdivrl
rolb
mov
mov
push
add
and
mov
add
nop
add
or
in
jg
fs
stc
imul
or
mov
dec
adc
aas
inc
dec
pushl
jmp
add
dec
push
mov
mov
cmc
inc
add
push
adc
mov
das
push
add
sbb
xchg
xchg
stos
pop
addb
jecxz
sub
cld
gs
clc
movsb
or
notl
push
add
and
mov
imul
or
inc
add
popa
cmpsl
aaa
and
mov
inc
loopne
mov
cltd
imul
add
jl
adc
mov
mov
mov
add
pushf
test
fnstsw
xchg
mov
mov
xor
xchg
dec
inc
jb
mov
fiaddl
mov
add
sbb
add
mov
adc
and
mov
add
or
mov
xor
mov
sub
mov
push
into
jno
scas
aad
mov
add
mov
push
cmpl
sbb
fidivl
add
arpl
cmpl
or
ss
sub
in
mov
add
ror
cmp
imul
imul
cli
push
jge
pushf
cmc
aad
repz
mov
rolb
mov
mov
mov
out
leave
jbe
int
jmp
arpl
or
in
xor
repnz
add
mov
vshufps
pusha
add
leave
adc
mov
push
pop
sub
push
movb
dec
pusha
add
pop
insl
xchg
and
or
xor
mov
push
sbb
pop
xchg
xchg
movnti
and
stos
rolb
out
ljmp
mov
fldcw
sbb
jno
clc
jns
mov
repnz
cmp
push
add
lret
mov
xchg
jnp
add
cwtl
out
fidivs
or
add
push
add
sbb
add
loope
add
xor
mov
or
mov
pop
xlat
jne
stos
xchg
jle
add
mov
xchg
lds
loopne
mov
repz
add
rcrl
sub
inc
dec
inc
nop
add
mov
sub
test
add
add
mov
sub
add
mov
push
add
nop
add
addb
xchg
jbe
int
pop
test
popa
js
lea
add
mov
and
add
cmpsl
ss
dec
daa
bound
mov
mov
adc
sub
xor
mov
movsl
mov
cmc
int3
add
mov
mov
add
rolb
mov
jge
mov
js
add
or
add
rolb
mov
std
lods
int3
addr16
inc
add
add
fnstcw
sub
rcrl
adc
mov
mov
add
mov
mov
fchs
add
lods
dec
icebp
out
mov
xor
jecxz
jno
fcmovne
jo
mov
and
mov
mov
mov
push
add
lahf
cmc
sahf
pop
loop
mov
in
dec
stos
cmp
enter
inc
stc
insw
add
xor
in
bound
mov
stos
push
data16
sub
clc
mov
add
add
add
sub
or
imul
inc
or
jne
xchg
inc
ljmp
test
js
inc
adc
add
jno
clc
cli
pop
scas
fs
mov
add
stos
das
sub
mov
cli
or
cmp
mov
mov
test
in
mov
mov
mov
jp
mov
fstl
push
fwait
adc
mov
mov
jp
or
dec
shl
cmp
add
xchg
add
jae
add
cmp
sub
mov
lret
jns
add
sub
add
roll
mov
ljmp
xor
push
lods
push
aaa
addr16
in
imul
pop
mov
inc
fisttpll
ljmp
int
add
add
outsl
lock
sub
outsb
xchg
add
jge
mov
bound
mov
add
test
mov
add
add
mov
psubd
outsl
cmp
jecxz
cs
test
movsb
inc
pop
leave
mov
fisttpl
mov
add
add
aam
add
movsl
in
cmp
sub
rolb
mov
or
lret
imul
test
nop
add
addb
out
xor
outsl
adc
pop
test
scas
outsl
mov
or
add
inc
pop
adc
or
inc
shll
popf
cmovl
cmp
mov
mov
add
dec
lcall
pop
mov
cmpsb
cmc
or
cwtl
dec
lea
and
mov
add
mov
inc
push
mov
and
das
adc
mov
inc
dec
jmp
int
loop
mov
add
mov
jle
roll
mov
push
gs
add
ficomps
add
lcall
add
push
sbb
dec
aam
roll
imul
inc
mov
jg
add
jmp
add
das
adcl
cmp
push
dec
mov
nop
add
add
fnsave
imul
pop
addr16
lods
push
add
mov
aaa
mov
in
loopne
mov
aaa
inc
idivl
add
mov
loop
mov
adc
mov
sub
dec
mov
xchg
fisubs
push
decl
mov
ret
adc
mov
mov
add
mov
cmp
ret
je
cmp
or
dec
pop
sti
jg
add
mov
int
lea
rolb
mov
add
sbb
jg
add
loopne
mov
add
stos
mov
mov
jg
add
pop
imul
xchg
and
lods
cmp
movsb
mov
hlt
sub
inc
outsb
push
add
mov
fcmovnb
sbb
xlat
push
scas
add
fnsave
xchg
mov
sbb
push
inc
negb
popf
stos
ret
inc
jecxz
test
outsl
add
cld
movl
daa
mov
icebp
gs
gs
add
enter
pop
sbb
dec
jp
add
pop
adc
xchg
and
mov
xchg
add
imul
push
rolb
push
stos
xor
pop
pop
sahf
add
mov
popa
mov
sbb
add
cmp
add
in
sbb
mov
je
das
push
add
mov
mov
sbb
mov
mov
rcll
call
loope
faddl
dec
cmp
dec
fwait
sbb
add
mov
loop
mov
out
add
and
icebp
xchg
mov
out
loop
mov
out
xchg
add
rolb
mov
fisubs
ret
pop
xchg
bound
mov
or
push
add
add
inc
mov
add
imul
dec
pusha
add
repz
jecxz
pusha
add
ss
add
add
hlt
imul
mov
xchg
rolb
mov
lret
daa
mov
xchg
enter
std
push
or
mov
and
mov
iret
sbbl
mov
lret
stc
pop
in
xor
mov
bound
mov
out
pop
xor
push
xchg
mov
jg
pop
cmp
jo
mov
pop
and
dec
aaa
inc
mov
mov
mov
cmp
add
jle
popw
adc
test
push
add
not
add
pop
outsb
jbe
mov
add
xchg
jmp
xchg
add
loop
mov
add
mov
push
nop
add
gs
rcll
dec
syscall
xchg
mov
add
mov
ja
sub
xor
pop
sbb
xor
mov
xor
xchg
add
mov
into
stos
pop
clc
bound
mov
pop
add
rolb
outsl
in
outsl
rolb
jle
mov
mov
add
mov
dec
pop
jge
fsub
add
mov
sbb
movsb
js
cmp
scas
bound
mov
cli
mov
inc
add
mov
add
sbb
daa
stos
call
in
rol
loopne
mov
mov
inc
add
mov
jno
mov
sub
xor
xchg
add
jbe
dec
pop
sub
in
push
movsl
or
test
test
in
add
mov
test
mov
push
ds
rcrl
mov
inc
add
test
in
inc
dec
jnp
jecxz
add
test
call
lahf
in
sbb
movsl
push
dec
dec
gs
ret
fs
mov
mov
scas
dec
jl
mov
xor
jb
mov
dec
shll
inc
movsb
cwtl
mov
jmp
clc
sahf
dec
lret
add
cli
repnz
addr16
repz
xchg
pop
fsubr
or
popf
push
add
icebp
popf
pop
push
inc
mov
int3
sub
jg
push
jne
movsb
bound
mov
stos
mov
repz
jno
stos
insl
push
push
inc
dec
dec
pop
addb
adc
jmp
mov
or
pop
xchg
jecxz
xchg
add
dec
sbb
call
fisubl
es
bound
mov
cld
stos
ret
fbstp
cld
fisubrs
test
mov
mov
in
mov
aad
icebp
inc
jge
test
inc
cltd
xor
enter
add
sub
xor
mov
imul
js
out
mov
lcall
or
fadds
sub
int3
jnp
sub
pop
xchg
fcmovb
sbb
pop
push
cwtl
das
add
mov
add
cmp
adc
mov
outsl
loopne
mov
out
sbb
lcall
fistl
cmp
add
movsb
mov
sarl
sti
and
xorl
xchg
and
xchg
popf
in
lods
mov
sbb
mov
add
bound
mov
inc
les
mov
outsl
bound
mov
int
add
es
in
pop
cld
sbb
mov
dec
xchg
lds
pop
and
movsl
add
mov
ljmp
and
addb
inc
mov
push
outsl
test
scas
push
add
pop
xchg
lock
fdivrs
add
mov
ror
lea
rolb
mov
out
iret
aaa
push
add
inc
sub
add
dec
lods
xchg
out
jno
sbb
imul
je
xchg
gs
pushf
dec
jle
add
add
scas
pop
or
jno
pop
out
mov
cmp
mov
inc
leave
mov
jne
add
cmc
xor
mov
mov
pop
lods
lods
push
and
shrl
jnp
pop
cmpsl
std
or
add
repnz
mov
mov
mov
fisubrl
or
mov
pop
insb
inc
add
add
cmpl
sbb
sub
add
push
inc
outsl
stos
pop
test
jne
addr16
add
add
dec
mov
push
sub
test
add
into
mov
add
lret
rolb
fimuls
xor
mov
dec
clc
cwtl
fwait
mov
add
add
add
rolb
mov
insb
in
adc
xchg
mov
xchg
sahf
xchg
rolb
mov
fwait
jecxz
in
test
jmp
jnp
adc
mov
cmp
add
mov
sbb
add
xchg
imul
add
mov
dec
clc
xchg
add
mov
add
mov
ds
cmp
test
jmp
add
aas
mov
scas
cmp
add
add
lea
pop
out
xchg
dec
insb
lods
testb
cwtl
pop
roll
add
test
add
jnp
add
push
outsl
pop
dec
mov
cmp
or
pop
addb
leave
sbb
insl
call
js
add
xlat
or
mov
pop
repz
mov
xor
addb
mov
out
shl
arpl
loope
mov
jecxz
mov
xchg
add
mov
xor
mov
add
ja
cmp
add
vmload
cs
sti
xor
cmpsb
xchg
shrl
aad
int3
mov
mov
or
jmp
repnz
std
cmp
xor
mov
adc
ja
jbe
nop
add
jmp
mov
mov
dec
or
and
mov
add
push
add
hlt
hlt
jne
iret
adc
fistl
std
or
add
add
adc
jg
add
call
inc
pop
pop
sub
mov
mov
and
pushf
fiadds
add
mov
mov
mov
repnz
push
dec
ds
pop
js
testb
mov
mov
mov
adc
xor
mov
rolb
mov
mov
cli
xor
cmp
xchg
mov
das
xor
push
jmp
imull
loope
push
notb
add
add
mov
lea
xor
mov
mov
adc
add
dec
in
rolb
std
adcl
mov
jb
mov
push
add
mov
loop
mov
mov
enter
mov
sahf
cltd
repz
pusha
add
xchg
add
pop
ljmp
mov
and
mov
add
mov
push
sub
dec
push
mov
inc
sbb
ficompl
loop
mov
xchg
js
inc
add
sti
inc
insl
aaa
loopne
mov
leave
pop
and
sbb
xchg
add
pushf
rolb
mov
testb
clc
test
xchg
inc
cmp
sbb
push
sbb
add
ret
es
in
rolb
in
lret
xchg
pop
cmp
gs
loop
mov
jbe
or
stos
adc
iret
fidivrl
shrl
int3
adc
mov
or
das
test
mov
mov
pop
adc
mov
sti
and
das
insl
adc
mov
mov
das
fsub
cmpsb
sub
mov
fildll
or
add
mov
data16
mov
mov
cli
insl
and
mov
sahf
fmuls
adc
push
shrl
add
mov
pushf
out
sub
add
push
addb
lret
xchg
pop
addb
sahf
sub
out
jb
mov
adc
mov
fisttpl
in
int3
rolb
mov
pop
imul
scas
cli
out
add
adc
add
jno
mov
adc
jg
mov
adc
mov
into
hlt
mov
cmpsb
adc
mov
mov
mov
add
mov
call
aaa
dec
sbb
ds
es
mov
mov
add
push
mov
add
mov
add
add
add
jno
xchg
das
popa
jg
mov
les
jo
mov
xor
jmp
xor
fisttpll
mov
mov
fwait
mov
mov
add
jnp
and
mov
add
mov
addb
push
enter
add
pop
mov
mov
jecxz
aam
lods
push
ffree
add
mov
aas
mov
mov
bound
mov
push
loop
mov
rolb
mov
sub
mov
mov
pop
or
jae
adc
leave
lahf
and
add
jp
fmuls
iret
call
add
dec
xor
mov
mov
mov
jbe
inc
add
loopne
mov
movl
mov
add
sbb
add
jae
scas
imul
mov
push
add
iret
jecxz
je
ja
add
ljmp
pop
xlat
lcall
sti
addr16
pop
push
sub
std
fistps
mov
into
push
pop
inc
mov
jecxz
jp
shrl
scas
push
nop
add
cs
dec
jl
out
add
mov
dec
mov
mov
add
mov
ficomps
dec
popf
adc
mov
call
loop
mov
lret
out
mov
add
push
sub
je
pushf
in
and
mov
inc
push
jmp
cld
es
mov
inc
add
xor
mov
ret
and
mov
std
add
add
mov
jbe
les
add
out
repz
cmp
rolb
jge
xchg
inc
add
add
fnsave
xchg
and
jp
ds
lret
add
lret
sub
mov
clc
pop
mov
imul
add
loope
mov
mov
add
mov
ret
imul
in
add
mov
rolb
mov
add
fs
jp
and
adc
mov
adc
push
push
inc
xchg
add
jecxz
and
mov
lea
mov
add
add
xchg
adc
popl
push
add
add
jmp
add
or
inc
das
rolb
mov
es
add
addb
inc
cs
addb
hlt
loopne
mov
rcll
aam
adc
add
mov
cmp
adc
mov
call
sbb
mov
jp
imul
xor
mov
and
mov
data16
add
and
repnz
jo
mov
lea
mov
sub
lahf
stc
jne
movsb
or
mov
lret
test
inc
push
mov
add
arpl
dec
pop
icebp
daa
fwait
mov
mov
mov
cli
fwait
cmp
sahf
popa
sysret
ret
bound
mov
rolb
cld
xchg
faddl
xchg
cmp
cmp
xor
dec
hlt
jb
mov
sub
jmp
add
mov
insb
gs
add
jne
lods
outsb
sub
cld
xchg
add
fisttps
lock
in
mov
sbb
xor
xchg
mov
mov
add
in
outsl
out
push
mov
fcompl
adc
mov
rolb
xchg
cmp
sbb
xor
es
and
jno
into
sarl
stc
cmc
jle
movsb
rolb
mov
pop
push
mov
mov
pop
rolb
mov
adc
pushf
scas
rolb
mov
aad
pop
icebp
or
sbb
mov
jno
xchg
add
mov
add
mov
fdivs
into
add
sbb
add
cltd
adc
gs
rolb
mov
xchg
mov
inc
cmc
mov
mov
nop
add
xchg
nop
add
and
pop
movsb
cmpl
xchg
jg
mov
imul
cli
sub
rolb
mov
rolb
cmp
test
pop
sar
into
out
inc
add
or
imul
mov
sub
adc
outsb
jbe
xchg
flds
lea
iret
cmp
gs
jmp
xchg
in
lret
mov
jge
imul
iret
pop
ficoml
inc
and
add
shrl
in
xor
jle
add
pop
test
testl
scas
jae
mov
mov
jge
movsb
or
and
mov
mov
mov
pop
iret
jg
rcll
add
mov
inc
sti
enter
bound
mov
xor
dec
push
add
push
clc
push
ds
mov
ljmp
mov
ljmp
sub
xchg
insb
insl
std
out
pop
in
fiaddl
inc
inc
add
fdivrl
add
enter
mov
push
divl
leave
add
mov
popa
data16
jmp
push
out
popf
mov
out
ljmp
mov
rolb
mov
xchg
inc
push
add
lahf
xor
mov
sub
int
cmpsl
pop
arpl
movswl
fidivs
add
push
adc
clc
xchg
sub
mov
loop
mov
add
xor
addb
cmp
jp
inc
ja
pop
nop
add
and
int
xchg
xor
imul
loope
add
rolb
mov
and
mov
stos
push
dec
push
sub
dec
in
xlat
dec
imul
popa
cld
add
xor
cmp
mov
pop
das
mov
or
add
xor
mov
mov
fldenv
aaa
xor
mov
add
or
mov
test
dec
mov
sbb
lcall
adc
push
enter
and
mov
push
push
cmp
repnz
scas
stos
frstor
ret
daa
or
add
shll
add
cmp
add
sbb
mov
call
cmp
xor
subl
hlt
xchg
and
mov
cmovno
sahf
xor
adc
incb
adc
addb
inc
mov
mov
shrl
mov
add
push
xor
mov
and
add
mov
add
mov
or
loope
cmpsl
lods
xchg
add
add
dec
xchg
add
sub
dec
stos
enter
cmpsb
fildll
in
cmp
mov
daa
movsb
sbb
mov
add
cs
mov
addl
add
mov
addb
mov
lods
jmp
adc
mov
mulb
addb
inc
fldt
jbe
scas
mov
mov
push
cmc
pop
pop
adc
mov
lea
pop
add
mov
mov
lods
notb
add
clc
stos
xchg
icebp
cmp
lahf
jb
mov
rolb
mov
cmp
test
or
movsb
popf
mov
rolb
mov
jp
xchg
add
pop
sbb
xor
mov
mov
pop
xchg
stc
shll
jmp
repz
cmp
push
sub
cld
add
mov
add
in
sbb
orl
cmpsb
cmp
pop
mov
mov
mov
mov
mov
add
mov
leave
test
aaa
push
mov
sub
in
xlat
fldcw
adc
testl
cli
xor
add
ret
cltd
pop
jo
mov
mov
shrl
out
jnp
adc
mov
ret
movsl
clc
out
cwtl
mov
sub
add
mov
dec
enter
dec
stos
lock
add
mov
icebp
add
mov
xchg
fildl
jecxz
mov
cmp
add
add
scas
popf
sahf
stos
jl
add
nop
add
cmc
inc
notb
jg
lret
add
in
pop
pop
and
loope
jbe
loope
adc
mov
xchg
add
mov
xor
mov
add
repnz
push
push
insb
jge
imul
push
out
xor
mov
mov
aas
iretw
addb
popl
jle
les
pusha
add
push
jp
add
mov
xchg
add
dec
fdivr
sub
mov
add
push
rdpmc
jle
or
add
subl
push
xor
add
cwtl
outsb
or
adc
mov
inc
sbb
sbb
mov
dec
insl
dec
adc
mov
enter
flds
mov
dec
int3
and
int
into
je
add
push
add
lahf
pop
insb
fisubl
xor
je
insb
ss
stc
mov
bound
mov
mov
add
push
add
adc
push
pop
cmp
test
test
scas
xchg
pop
inc
addb
pushf
xchg
addb
push
mov
or
mov
pop
add
mov
push
add
add
daa
scas
mov
cwtl
jb
mov
dec
mulb
int
ds
cmp
scas
push
mov
mov
mov
mov
inc
add
lcall
add
or
add
mov
mov
inc
jmp
mov
fs
cmp
xchg
inc
pushl
test
add
imul
dec
lahf
mov
sbb
mov
mov
ljmp
clc
inc
imul
and
into
scas
je
imulb
push
mov
mov
mov
push
inc
add
jbe
sub
clc
xor
add
push
fisubrl
out
push
cs
jge
jno
dec
sbb
xor
lret
xchg
out
addb
mov
pop
jno
lods
inc
ret
push
cmpsl
push
fs
add
xor
push
in
mov
out
lods
xor
in
cmp
mov
inc
mov
cli
adc
cmovb
mov
add
stc
jo
mov
add
lock
add
mov
push
rolb
mov
add
insb
xchg
outsb
pop
fdivrp
div
daa
dec
dec
pop
cwtl
loopne
mov
dec
icebp
cs
dec
ret
das
or
mov
add
lds
and
mov
mov
lods
xchg
mov
arpl
xlat
aad
mov
pushl
test
cwtl
mov
mov
mov
add
mov
add
xchg
pop
rolb
enter
ret
cs
xchg
mov
add
add
sarl
addb
pop
adc
mov
testb
pusha
add
inc
add
cmp
mov
repnz
mov
je
mov
mov
jae
aas
lds
push
fcmovu
jl
push
lret
rolb
mov
rolb
mov
mov
roll
add
add
add
mov
mov
add
add
addb
xchg
add
leave
cmp
repz
or
cmpsl
add
mov
add
jp
mull
aaa
stos
addl
inc
jne
add
add
mov
mov
jle
and
inc
jl
mov
ja
sbb
add
bound
mov
dec
rcl
inc
xchg
push
add
mov
ficoml
adc
fbld
frstpm(287
into
rolb
mov
movsl
test
icebp
xchg
inc
mov
jecxz
stc
and
mov
das
mov
rorl
dec
add
and
and
int
iret
xor
icebp
loope
scas
pop
mov
mov
ss
or
add
aad
daa
lahf
jbe
cmpsb
sbb
lock
pushf
mov
mov
add
mov
jl
mov
or
mov
test
iret
mov
mov
mov
mov
inc
outsb
mov
roll
js
add
mov
xchg
sbb
sub
add
add
mov
cwtl
popa
mov
mov
and
mov
inc
xor
mov
int
add
out
imul
push
addb
push
cmp
add
test
dec
gs
mov
mov
mov
loope
scas
cmpsl
sbb
add
jp
mov
push
xchg
add
add
dec
xor
loop
mov
mov
pop
xchg
aas
addb
sbb
int
jp
sub
mov
lea
xchg
add
decl
pop
test
xchg
add
sub
add
dec
inc
add
jge
loope
xor
mov
addb
push
rolb
mov
hlt
adc
mov
add
lret
jl
or
rolb
mov
add
add
dec
xor
mov
dec
xor
ja
mov
mov
mov
mov
sbb
add
mov
ss
add
scas
cmp
or
jp
push
dec
ja
xchg
clc
fwait
out
dec
cld
xchg
repz
add
lret
cmp
cmp
add
aas
xchg
aas
or
addb
in
or
push
lock
sbb
mov
dec
cmpsb
sub
fnstcw
sbb
arpl
test
cltd
je
test
push
adc
add
add
negl
aam
add
mov
jo
mov
gs
lea
jge
pusha
add
dec
js
pop
pop
jno
scas
cmp
jb
mov
popa
sbb
cwtl
js
or
add
xlat
lds
xor
ljmp
push
mov
cs
push
es
invd
in
and
mov
cmpsl
and
mov
mov
push
fsubrl
fs
adc
mov
int3
sbb
or
sub
mov
mov
mov
mov
mov
add
fists
shrl
pop
cmp
xchg
add
jne
stc
xchg
pop
movsl
jno
dec
inc
loop
mov
add
push
into
popa
cli
sbb
lahf
xor
mov
test
jno
adc
les
inc
int
fiaddl
dec
xchg
xlat
and
mov
sbb
or
add
faddl
mov
mov
mov
sahf
and
xorl
cmp
xor
sub
test
inc
cmp
add
add
add
lcall
mov
push
rcll
adc
mov
or
mov
call
mov
mov
ret
xlat
shll
rolb
sub
mov
arpl
fbstp
jne
mov
add
mov
addb
xchg
outsb
or
or
int3
mov
leave
and
cld
shr
push
push
data16
iret
cmp
repz
cvtdq2ps
sbb
push
inc
xor
mov
jecxz
fs
call
fldenv
add
ret
xor
cmpsb
dec
add
scas
cmp
xor
mov
mov
inc
das
pop
lcall
xchg
movsl
cld
xchg
add
lret
or
add
sti
dec
and
mov
sub
add
iret
mov
mov
mov
mov
adc
das
xor
andl
mov
mov
sub
push
cmpsl
mov
leave
test
arpl
cmpsl
pushf
stc
fisubl
dec
fisubs
mov
pusha
add
mov
add
push
mov
sub
in
int
pushf
leave
into
mov
mov
add
cs
push
push
ljmp
loop
mov
inc
and
mov
mov
mov
add
add
int
cmp
add
in
push
mov
dec
xchg
aas
xlat
dec
gs
stos
iret
adc
aaa
mov
xor
insb
mov
add
dec
outsb
je
add
mov
push
pusha
add
inc
stos
mov
push
add
movsl
inc
and
nop
add
call
and
mov
mov
add
mov
sbb
push
add
lcall
cli
movsbl
push
add
fstl
adc
mov
and
mov
mov
sub
mov
xchg
or
movsb
jg
arpl
add
sbb
mov
pushf
popf
xchg
mov
stos
dec
rolb
shrl
mov
add
push
xor
inc
inc
pop
mov
arpl
out
fldt
dec
ficomps
add
add
mov
xchg
pop
xor
add
ret
xor
mov
rolb
push
add
mov
mov
mov
clc
out
or
inc
jae
rolb
push
cli
mov
es
inc
fisubrs
rolb
jbe
mov
cmpsb
cmc
movsl
pop
pop
lods
add
ret
dec
add
mov
test
es
pop
mov
mov
cli
or
add
shl
jns
cwtl
fwait
pop
jno
pop
call
xor
sti
ljmp
mov
ds
add
mov
add
cmpsl
mov
mov
lret
imul
aam
out
pop
jae
or
cli
mov
jge
xchg
out
sbb
mov
clc
push
pop
es
or
mov
sbb
push
popf
inc
add
mov
rorl
mov
pushf
dec
test
dec
movl
inc
lahf
scas
js
sbb
insb
mov
mov
pushf
pusha
add
add
push
add
daa
add
mov
add
scas
jmp
std
pop
scas
mov
test
mov
mov
mov
add
xchg
dec
mov
jo
mov
add
mov
jne
rorl
add
xchg
add
je
bound
mov
gs
fimuls
jmp
cmc
fisttpll
push
jno
xor
mov
addb
pop
pop
jl
add
je
push
movsb
fisubrl
pop
lock
adc
mov
mov
add
test
lahf
mov
xchg
xor
mov
jae
pop
xchg
inc
add
inc
add
cmp
add
add
adc
xlat
out
pop
in
aad
aad
or
jne
jns
add
mov
mov
mov
les
pop
adc
jnp
mov
pop
int
in
stc
xor
in
pop
movsl
sbb
push
cmpsl
nop
add
pop
ret
add
fisttpl
mov
movsb
add
add
loopne
mov
addb
sbbl
jne
push
not
dec
push
int
cmp
xor
mov
out
add
test
mov
faddl
cli
jb
mov
in
imul
mov
xchg
jb
mov
xchg
fistl
jb
mov
pop
sub
or
push
pop
test
push
mov
scas
stc
or
pop
push
dec
or
mov
lods
ret
lret
fdivl
push
das
ret
sbb
and
add
dec
shrl
mov
xlat
dec
sbb
arpl
repnz
mov
xchg
jne
pop
mov
mov
sahf
rolb
mov
add
dec
lahf
lods
daa
testl
mov
fcoml
mov
mov
arpl
dec
popa
pop
icebp
fcompl
add
leave
mov
jae
lds
xchg
cmp
or
fisubrs
dec
test
mull
ret
les
add
xchg
scas
jge
mov
xchg
cmp
push
jb
mov
cmp
and
push
mov
add
repnz
cmc
jbe
xchg
aas
sub
jnp
add
pop
out
pop
lret
ds
mov
lods
mov
addb
fcmovu
inc
bound
mov
cmp
sbb
add
adc
fidivrl
jno
rcrl
mov
pushf
pop
rolb
dec
adc
add
sti
in
or
xchg
jno
in
add
add
lcall
ds
mov
mov
mov
jae
das
pop
std
cltd
int
mov
mov
stos
mov
roll
inc
mov
mov
or
add
jne
push
cld
pop
jg
stos
outsl
dec
fwait
cld
out
jno
xchg
add
pop
mov
mov
add
mov
add
andl
dec
std
pusha
add
add
xor
mov
ss
pop
std
aad
cmp
add
mov
fs
int3
lods
shll
mov
add
jge
lahf
xchg
add
sub
leave
ret
inc
add
jb
mov
js
xor
push
mov
lret
popa
push
pop
lds
inc
sti
dec
cld
in
int
push
cmp
dec
jae
fldcw
cmp
iret
cli
and
rolb
mov
mov
rolb
add
mov
rorl
or
imul
jecxz
add
mov
lret
jmp
movsl
adc
mov
fcoml
adcl
es
mov
mov
fdivl
loop
mov
jl
in
std
mov
add
popf
mov
cld
out
fimull
sub
rolb
pop
rolb
mov
and
inc
cs
ret
mov
mov
add
ds
inc
movsl
popf
sub
jns
mov
mov
and
cmp
add
cmc
hlt
mov
mov
inc
adc
ds
jle
in
jbe
mov
fstpl
lods
push
out
or
lock
push
fstl
xor
add
fcmovne
add
jno
cmp
loope
add
jae
xchg
xor
add
xchg
jmp
inc
arpl
mov
adc
mov
ja
sbb
mov
lock
mov
pop
mov
ljmp
icebp
cmp
out
inc
fnstcw
jno
rcrl
add
add
mov
and
mov
insb
fnstenv
mov
xor
add
xlat
push
les
fcmovne
adc
in
fs
xchg
jmp
addb
es
dec
mov
adc
mov
mov
xlat
cmpsb
out
adc
jg
push
leave
adc
mov
jl
dec
sbb
adc
test
mov
loopne
mov
mov
mov
xor
cmp
inc
add
movsl
inc
add
add
sbb
add
jl
imul
fidivs
in
movsl
lret
add
fsubl
mov
repnz
add
sti
pop
push
lcall
adc
jp
negl
enter
test
in
push
mov
add
setl
loopne
mov
add
in
rolb
mov
mov
mov
adc
jb
mov
pusha
add
xchg
in
push
js
inc
jmp
pop
and
cld
iret
rolb
mov
pushf
rolb
push
or
hlt
fisubl
nop
add
dec
jne,pn
aas
lods
dec
scas
sub
mov
std
cwtl
xchg
push
add
ficoml
add
push
rolb
jo,pn
mov
mov
call
xchg
pop
xor
mov
rcr
or
add
add
pop
test
add
inc
lcall
sub
push
and
lods
inc
sets
mov
xlat
call
into
bound
mov
add
out
imul
scas
ret
cld
add
sahf
fcomp
lret
mov
aam
test
mov
or
fcomi
or
test
bound
mov
mov
mov
sti
nop
add
loopne
mov
jp
inc
add
mov
fsubp
std
iret
hlt
xchg
shrl
movsl
call
sub
mov
cmpsl
sti
mov
sbb
jae
add
xchg
cmpsl
lods
enter
push
out
inc
jno
addb
test
dec
dec
arpl
jno
les
rolb
mov
nop
add
xchg
add
mov
mov
jge
nop
add
mov
ret
sub
outsb
cltd
dec
push
ja
cli
push
das
pusha
add
xchg
mov
sbb
movsl
mov
and
in
lea
adc
add
mov
rolb
mov
and
jle
xor
add
mov
subl
sti
sub
or
mov
xchg
stos
xor
mov
mov
fwait
pop
adc
mov
add
pop
stos
int
add
add
mov
and
mov
add
sub
xchg
add
inc
add
xchg
out
cmpsl
cmp
or
mov
mov
shll
add
add
addb
lock
adc
lret
cwtl
adc
mov
stc
add
adc
inc
mov
mov
aam
daa
test
in
divl
test
daa
cwtl
cmpsl
iret
adc
push
out
sub
test
into
fidivrl
stc
cltd
cltd
xor
fildl
mov
mov
gs
xchg
pop
jbe
lds
pop
imul
jae
push
xlat
and
mov
add
bound
mov
xor
imul
das
mov
aas
inc
bound
mov
push
add
in
jb
mov
jg
sub
add
mov
imul
mov
mov
add
add
in
cmpsl
or
or
sub
mov
add
aas
movsl
cmp
rolb
sbb
push
add
lods
inc
add
mov
jne
add
push
insl
loope
sbb
pop
loopne
mov
shl
add
aad
rolb
imul
pop
xor
mov
add
mov
adc
cli
hlt
mov
xor
or
lods
add
sbb
dec
push
popf
inc
push
inc
mov
push
jnp
cmpsb
in
or
sub
add
pop
cmp
add
mov
out
cs
push
add
mov
add
jbe
lcall
jno
addb
mov
add
mov
add
xchg
push
xlat
mov
mov
sti
pop
mov
aam
inc
repnz
out
icebp
pop
aaa
sbb
mov
ret
jl
mov
xchg
pop
xor
mov
std
int
xchg
mov
lock
add
loop
mov
inc
add
mov
or
int3
idivb
mov
testb
mov
add
cmp
jne
pop
sub
gs
add
daa
loope
pop
repz
jns
inc
add
mov
sarl
add
insl
dec
mov
mov
iret
les
cli
add
push
pop
rorl
xor
mov
add
add
or
nop
add
lret
push
addb
clc
xchg
std
outsb
jae
stc
ja
dec
sbb
and
push
fwait
lods
es
icebp
scas
xor
add
jb
mov
movsl
imul
sub
int
lds
add
cmpsl
gs
add
sti
mov
mov
out
cltd
clc
sti
sbb
push
add
add
xchg
enter
adc
sbb
ss
aaa
mov
mov
add
mov
pop
aam
add
mov
mov
add
inc
inc
stc
xlat
loope
js
popa
mov
mov
mov
cmp
add
mov
push
and
mov
push
sbb
add
rolb
mov
add
out
xchg
add
das
insb
dec
fildll
fxch
cmp
add
mov
mov
loopne
mov
cs
daa
shll
enter
and
mov
add
cmpsb
fsubrl
mov
mov
adc
cmpsb
xchg
pop
add
dec
ljmp
push
adc
mov
cwtl
jmp
rorl
shr
push
jns
pop
xchg
adc
and
or
add
movsl
push
xchg
ret
xchg
cli
xchg
adc
xor
cltd
stos
iret
inc
cmp
int
jb
mov
bound
mov
add
insl
je
add
mov
rolb
sti
int3
pop
test
fldl
add
mov
idivb
loopne
mov
mov
xor
mov
pop
pop
inc
add
mov
add
aad
test
xor
mov
movsb
mov
cs
push
mov
lahf
push
pop
xchg
imul
mov
push
decb
inc
inc
add
sbb
pusha
add
cmp
add
dec
mov
aaa
out
icebp
movsl
lock
lods
inc
out
adc
mov
xchg
sub
push
add
mov
push
add
add
add
pop
mov
mov
movsb
and
mov
fdivrp
int
fsts
fidivrs
and
add
adc
and
add
shll
add
add
mov
les
std
insl
cmp
or
sar
addb
call
sbb
dec
inc
adc
fwait
aam
add
movsb
xlat
jns
sub
push
test
pop
jg
jmp
pop
daa
dec
xchg
mov
fstpt
fsubs
or
push
shrl
jmp
mov
fcoml
sti
test
mov
add
add
mov
scas
dec
leave
or
bound
mov
roll
dec
pop
cmp
mov
add
xchg
add
int
sub
jns
add
sti
out
sbb
xchg
add
push
sbb
mov
mov
jmp
rolb
mov
lds
lds
jecxz
mov
insl
pop
push
add
shll
add
dec
jle
les
decl
rolb
mov
xor
mov
xchg
and
mov
xor
cmp
arpl
push
add
and
cmp
mov
lret
loope
add
lods
fnsave
mov
add
loop
mov
js
fsubrs
stc
jl
cmpsb
fs
ljmp
int3
inc
and
movsb
push
sahf
sub
jnp
sub
add
add
insb
outsb
and
out
pop
cmp
cmp
sub
inc
aaa
mov
mov
push
addb
dec
jmp
xor
mov
lea
je
popa
scas
fcomp
pop
data16
add
mov
shrl
movsl
fwait
aaa
mov
add
mov
sub
mov
mov
mov
fnstsw
lock
dec
mov
xchg
xchg
push
pop
aaa
add
mov
mov
pop
xchg
xrelease
add
mov
loop
mov
push
fisttps
add
mov
mov
cmpsb
jmp
stos
sbb
dec
inc
dec
mov
std
in
cld
mov
mov
addb
or
mov
push
mov
int3
pop
scas
push
iret
mov
and
mov
insl
aas
fidivrs
pop
adc
mov
mov
add
sub
xor
push
repz
or
mov
add
add
mov
ljmp
push
dec
mov
add
add
mov
jbe
push
add
lret
popf
loop
mov
push
add
leave
mov
filds
add
inc
add
movsb
add
les
stc
ds
push
sub
sbb
out
mov
or
mov
mov
sarl
sbb
lea
aaa
cwtl
dec
pop
sbb
mov
addr16
add
mov
dec
cld
outsl
arpl
ss
jbe
jae
add
addb
cltd
clc
repz
cmpl
push
es
jne
jns
int3
daa
popa
push
int
sbb
mov
mov
fiadds
add
mov
sub
sbb
add
fsubp
imul
out
inc
add
lcall
inc
lret
xchg
push
arpl
mov
movsb
push
pushw
jmp
das
fnstsw
cmp
in
daa
into
imul
adc
mov
nop
add
fisubrl
sbb
cltd
pop
jmp
leave
insl
mov
sbb
mov
pop
push
add
add
push
xchg
add
add
mov
dec
lods
call
mov
je
repz
enter
pop
mov
js
and
mov
mov
loope
xor
mov
in
push
addb
addb
and
rolb
mov
mov
mov
push
xor
mov
inc
and
mov
xlat
cmp
add
mov
add
cwtl
loop
mov
jno
jl
cli
xor
cmovbe
add
mov
sti
and
mov
test
push
enter
xor
jne
std
out
incb
fwait
sub
xchg
test
movsl
jge
jle
lods
addr16
push
fistps
or
or
add
lahf
inc
add
sbb
pop
movsb
xor
rolb
jbe
jecxz
mov
in
inc
rolb
mov
push
clc
jp
mov
loopne
mov
bound
mov
mov
jb
mov
pusha
add
adc
pop
cli
pop
fldenv
cmp
jnp
std
call
popf
arpl
lods
outsl
repz
mov
push
add
jnp
xor
xchg
jae
fbstp
pop
movsb
sbb
push
add
or
addl
inc
add
jnp
lods
pop
cmp
mov
mov
fwait
repz
fldt
jno
mov
or
jae
mov
mov
and
movsb
and
outsl
es
xchg
sub
mov
and
sbb
cli
xchg
add
jg
jecxz
nop
add
add
mov
xchg
addb
movsb
addb
mov
mov
lret
fnstcw
push
cld
rolb
push
add
leave
inc
sbb
mov
rorl
ret
dec
xor
sbb
dec
movsb
negb
jle
dec
pop
cmp
add
sar
cwtl
or
out
addb
sti
xchg
outsb
cmp
add
pop
jge
shrl
mov
out
pop
sub
add
bound
mov
add
imull
add
nop
add
add
mov
jle
mov
dec
jno
pop
into
xchg
in
and
and
mov
mov
outsl
mov
pop
push
mov
xchg
add
mov
cld
mov
add
push
cltd
inc
adc
rolb
cmpsb
in
jecxz
sub
xor
dec
adc
mov
mov
mov
add
mov
pop
xchg
imul
xor
mov
and
pop
mov
push
scas
sbb
out
pop
out
cmp
fmul
add
mov
adc
inc
sbb
mov
mov
fwait
cmp
shll
push
bound
mov
pop
test
add
adc
ljmp
test
jae
or
lods
xchg
push
std
mov
rolb
mov
loope
mov
xchg
mov
dec
inc
xchg
pop
loop
mov
mov
lcall
lcall
add
or
into
and
cld
sbb
rolb
mov
jo
mov
jae
ret
rcll
mov
and
dec
aas
and
xor
mov
cmp
sti
xchg
add
clc
dec
dec
cmp
xsha256
cmpsb
xchg
cwtl
scas
out
add
mov
add
mov
sbb
jns
std
es
mov
mov
insb
addb
dec
sbb
stc
aam
mov
xchg
fwait
popa
inc
add
loop
mov
imul
ret
rcrl
jae
adc
or
add
call
enter
xchg
fsubl
add
mov
mov
dec
rolb
mov
mov
pop
push
push
cmpsb
and
mov
in
sbb
xchg
sbb
or
push
aam
lcall
sbbl
mov
xchg
xchg
lret
push
add
sbb
cwtl
loop
mov
inc
test
add
add
xchg
bound
mov
xlat
arpl
and
mov
jp
leave
lods
mov
stos
jae
mov
mov
icebp
dec
sbb
add
add
out
nop
add
jl
cwtl
push
mov
popa
outsl
or
mov
mov
stc
jns
inc
push
and
add
or
fmull
dec
or
sub
jnp
repz
lods
sbb
shrl
add
add
dec
mov
add
mov
jo
mov
jmp
fs
jo
mov
mov
lahf
je
outsl
mov
dec
xchg
or
xor
mov
adc
or
pushf
aas
sti
xor
mov
outsb
xor
mov
add
aaa
xor
frstor
add
mov
cmp
mov
add
fildl
mov
adc
push
fwait
add
sar
jns
jg
ficompl
arpl
xor
insl
es
add
push
rolb
xor
mov
aas
inc
add
scas
cmp
pop
lods
push
cmpsb
push
xorl
xchg
sbb
xchg
enter
add
je
stos
push
mov
cmpsb
cld
jmp
xor
shll
imul
xchg
cmp
loopne
mov
test
add
mov
add
cs
mov
inc
das
stc
and
loopne
mov
mov
cmpsl
int
xchg
cld
fisttpl
dec
in
xorl
add
pop
cmpl
jb
mov
mov
lahf
push
dec
aad
and
outsb
mov
mov
insb
jge
jge
lea
lea
cmp
cmp
mov
fcompl
xor
mov
ss
out
jae
add
imul
out
fdivrs
fsts
add
mov
mov
dec
lea
mov
add
out
fadds
adc
mov
add
add
hlt
mov
out
push
add
rolb
mov
into
dec
sub
iret
subl
aad
add
xor
sub
lds
pop
sahf
mov
pop
sbb
or
cmc
or
mov
addb
jae
addb
jb
mov
mov
xor
mov
add
mov
or
jns
sbb
add
mov
outsl
arpl
outsb
sub
aam
add
in
xchg
addl
sahf
pop
mov
sbb
imul
subl
push
xchg
push
or
add
mov
cli
movsl
and
js
push
ds
ljmp
pop
addb
adc
mov
scas
xchg
add
xchg
lock
mov
add
lahf
in
scas
xor
mov
js
fsubrs
xchg
pop
xlat
dec
pop
imul
fdivl
mov
incl
xor
scas
xor
add
lds
in
aam
mov
add
mov
popa
rcrl
xchg
mov
add
popf
and
mov
add
and
in
cli
lret
mov
add
add
mov
out
jne
jmp
add
jmp
testb
pusha
add
fcomp
jle
add
or
add
test
add
add
jp
int
fisttpl
ja
mov
add
aaa
adc
scas
repnz
mov
mov
push
add
mov
mov
addb
ret
lahf
test
add
mov
add
mov
insb
imul
fldl
mov
imul
jmp
cmp
scas
adcl
or
inc
fs
mov
pop
pop
adc
dec
mov
mov
loope
adc
mov
inc
mov
inc
mov
rolb
xchg
xchg
add
loope
lods
test
add
int
imul
mov
ret
inc
enter
mov
add
loopne
mov
cmp
xor
filds
stc
mov
addr16
sbb
lock
push
add
add
gs
mov
push
add
jp
add
scas
fstpl
stos
ljmp
popa
cmp
pushf
push
lret
mov
xchg
cmp
das
into
mov
bound
mov
orl
jle
js
stos
addb
pop
test
and
add
xor
dec
addb
pop
mov
inc
addps
add
add
jle
mov
mov
fs
inc
or
lds
repnz
adc
mov
outsb
call
fldt
imul
addr16
popa
mov
test
icebp
push
loopne
mov
xchg
xchg
dec
pop
inc
add
add
dec
daa
outsb
lret
cmpsb
sbb
mov
add
mov
mov
adc
decl
and
movsb
shll
mov
ljmp
dec
pop
inc
call
mov
jae
sbb
inc
int
mov
inc
fidivrs
cs
add
outsl
lcall
sbb
fmul
xchg
or
imul
and
mov
and
add
adc
loope
andl
add
xchg
add
or
cmpl
mov
add
pop
int3
lods
lahf
fistpl
add
push
nop
add
out
and
push
test
mov
mov
add
sub
rcr
mov
push
add
jb
mov
mov
mov
push
daa
lods
insb
mov
mov
cmp
out
ret
movsb
fistl
add
rolb
mov
add
mov
mov
in
sub
lea
add
mov
xchg
xchg
add
stos
lods
mov
add
subl
xor
ja
push
lock
pop
out
add
enter
mov
out
popf
imul
call
clc
arpl
mov
add
lds
addb
mov
or
cmpsl
rolb
mov
xchg
add
adc
jo
mov
push
add
lret
sub
pusha
add
push
ja
and
iret
xchg
or
or
sbb
mov
leave
pop
movsl
mov
xor
outsl
jl
xor
mov
mov
lods
inc
loopne
mov
xchg
pop
mov
mov
adc
mov
movl
cld
decl
add
adc
xor
mov
movsl
daa
jne
lods
scas
mov
xchg
pop
mov
test
fxch
int
add
pop
jecxz
dec
test
add
pop
loop
mov
outsb
rolb
mov
and
mov
stos
dec
push
adc
mov
and
in
jbe
xor
dec
nop
add
popf
daa
cld
push
iret
fldt
stos
ss
fsub
adcl
mov
into
dec
loop
mov
mov
sub
insb
mov
push
lock
xchg
lds
xlat
sub
add
enter
inc
cltd
or
pop
call
ljmp
mov
fnstsw
and
xchg
xchg
les
cmp
out
iret
xchg
repnz
mov
fs
or
mov
xchg
sbb
data16
mov
cmp
cld
addb
test
push
stos
jmp
push
push
add
imul
sub
je
jg
and
push
pop
jle
inc
cmc
jns
dec
cmpsb
sub
pop
adc
mov
add
sbb
add
sahf
arpl
aad
jno
cli
hlt
imul
pop
decb
and
add
and
mov
push
icebp
int
inc
add
xor
mov
dec
pop
or
sti
sub
movsl
stos
mov
add
cmp
push
in
mov
sub
or
lea
repnz
or
mov
push
ljmp
dec
aam
aaa
mov
push
popf
mov
sub
mov
js
adc
lods
or
and
mov
cwtl
or
push
or
add
add
add
jg
and
mov
sbb
lret
adc
cmp
and
push
shrl
ss
xor
mov
add
lcall
mov
pushf
pusha
add
sar
pop
ret
out
add
mov
lods
inc
or
sahf
push
pop
pushw
lret
jne
dec
aad
int3
add
loopne
mov
js
jbe
cld
es
mov
outsb
or
xor
daa
flds
adc
mov
xchg
cmpsb
outsb
mov
rep
lahf
insl
test
pop
bound
mov
mov
add
pop
push
push
sub
xor
xchg
divl
rolb
mov
movsl
adc
loop
mov
add
jnp
shrl
mov
loop
mov
mov
jmp
pop
sbb
cmp
fwait
js
jns
xchg
outsb
mov
lcall
push
add
cmp
hlt
imul
cld
sti
add
mov
push
dec
xchg
push
jmp
fnstcw
stc
xor
mov
dec
xchg
add
pop
arpl
daa
mov
fdivl
add
lret
mov
ja
out
cli
test
insb
cmp
pop
dec
dec
pushf
push
and
cli
xchg
pop
and
test
lea
jbe
add
dec
dec
inc
xor
add
dec
cmp
dec
jecxz
sbb
mov
mov
in
push
add
jne
cld
push
mov
push
mov
add
sbb
add
mov
mov
add
adc
mov
sti
bswap
cmp
add
dec
fs
jg
xor
or
sub
test
mov
rolb
mov
jo
mov
das
adc
mov
or
add
fs
sub
stc
