sub
dec
push
repz
mov
int
jp
je
sub
push
call
test
in
jecxz
ret
clc
ss
dec
adc
mov
push
xchg
push
add
mov
xchg
add
sub
lahf
test
pop
push
rolb
mov
add
fistps
popa
sbb
repz
sbb
mov
inc
inc
inc
test
sub
div
ljmp
mov
mov
xchg
add
mov
jg
push
inc
fs
pop
lea
pop
dec
mov
xchg
enter
pop
sti
cmp
inc
jg
push
add
addb
std
in
test
add
fnstcw
jo
mov
ss
std
add
mov
cwtl
jnp
scas
mov
ret
cmpsb
fstps
mov
jmp
int3
test
mov
mov
add
mov
pop
fsubs
mov
pusha
add
add
ljmp
mov
sahf
movsl
imul
push
decb
icebp
pushf
add
mov
mov
pop
imulb
add
xor
mov
or
jmp
ja
cmp
xchg
xchg
aad
rolb
mov
stc
popa
or
or
mov
popf
xor
mov
pop
ds
add
xchg
pop
dec
cltd
ret
adc
inc
nop
add
lds
lahf
sti
pop
jb
mov
dec
xor
mov
or
pop
cmp
pop
rolb
mov
ret
repz
pop
lods
pop
into
pop
loope
idivl
mov
hlt
cwtl
or
add
ljmp
xchg
inc
cwtl
jnp
add
mov
pushf
je
ret
cs
cmp
scas
call
lahf
pop
ret
sbb
xor
add
mov
add
bound
mov
add
incl
add
xor
mov
dec
mov
push
jecxz
adc
mov
adc
mov
jmp
lods
dec
lret
iret
movsl
repnz
sub
add
and
add
rolb
mov
mov
push
add
or
dec
movl
lcall
scas
xor
add
mov
mov
cmc
dec
in
sub
cld
hlt
lahf
inc
cmpsl
lcall
add
pushf
add
mov
add
xchg
lret
dec
popa
mov
xchg
add
mov
add
dec
insb
mov
sub
xchg
cli
icebp
jb
mov
pop
mov
mov
jns
fmulp
pusha
add
add
push
dec
mov
add
pop
out
sub
mov
mov
fidivl
jo
mov
adc
in
pop
jmp
jp
add
mov
mov
mov
mov
mov
ljmp
mov
sbb
xchg
daa
dec
cs
add
or
xchg
leave
sub
add
int
ja
ljmp
leave
in
test
enter
jp
add
mov
add
mov
cld
addb
sahf
bound
mov
xchg
inc
nopl
mov
scas
inc
add
aas
je
lret
out
adc
adc
mov
adc
fnstcw
jecxz
and
mov
pop
adc
mov
lahf
and
mov
mov
push
test
lcall
mov
xor
loopne
mov
mov
notb
mov
mov
push
call
repnz
mov
add
add
jle
cmpsb
and
cmpsb
dec
jg
call
cmp
sti
adc
jno
add
dec
lods
mov
aam
xor
push
dec
divl
stos
sbb
rcll
lock
mov
mov
xor
mov
adc
mov
push
add
cmpsb
sbb
and
sbb
jmp
cmpsb
push
popf
mov
out
mov
mov
inc
jl
mov
cltd
daa
mov
js
pusha
add
add
mov
add
hlt
sbb
inc
inc
add
dec
lret
sbb
add
add
arpl
pushf
outsl
inc
add
mov
std
mov
sub
push
push
push
push
push
push
cld
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
ja
mov
add
mov
or
sar
ljmp
lock
insl
push
add
pop
push
xlat
test
add
mov
es
lret
mov
pop
or
movzbl
lea
dec
mov
aas
fsubrl
iret
lahf
mov
jmp
push
addr16
mov
test
lret
pop
rcll
test
jo
mov
das
outsl
sub
dec
jecxz
out
lods
add
mov
iret
in
mov
addb
into
jle
call
mov
shl
repz
or
add
js
add
mov
adc
imul
clc
test
mov
pop
test
outsb
sub
notl
in
outsl
leave
aam
add
rolb
mov
std
xor
mov
mov
mov
add
mov
lods
xor
mov
add
add
add
xchg
lret
das
test
and
mov
inc
out
dec
mov
negl
stos
int3
nop
add
ret
inc
aam
add
mov
add
xor
fwait
mov
mov
ret
sub
in
popw
xor
mov
xchg
scas
bound
mov
xchg
notl
mov
lods
jae
sbbl
cld
mov
mov
mov
push
mov
mov
inc
mov
into
jbe
push
orl
mov
push
add
or
inc
add
add
mov
push
add
add
rcll
es
add
mov
mov
rolb
sbb
add
sbb
mov
test
mov
and
addb
cs
inc
mov
addl
mov
aaa
rolb
mov
mov
jns
jl
cli
and
mov
mov
pop
out
xchg
fidivrs
xor
pop
scas
mov
sub
inc
ss
popf
shll
or
add
jmp
shll
fdivs
add
inc
add
lock
pop
push
popa
aaa
leave
idivb
aam
test
mov
lock
jb
mov
inc
lods
inc
add
sub
inc
lods
pop
inc
pop
add
ja
jp
addb
ljmp
out
mov
cmpsb
popa
or
test
add
mov
sti
hlt
and
lsl
add
add
test
push
push
or
in
push
pop
jo
mov
mov
mov
je
mov
scas
pop
jge
pop
mov
add
sbbl
mov
stos
das
pop
lods
inc
add
adc
mov
mov
inc
add
xor
mov
std
or
rorl
or
xchg
sub
mov
lods
loopne
mov
add
jo
mov
mov
cmp
sbb
add
mov
adc
mov
incb
arpl
cmc
pop
push
clc
dec
mov
mov
mov
sub
add
sub
mov
xchg
inc
sbb
ja
xor
mov
adc
mov
jmp
add
mov
cmp
lcall
dec
sbb
mov
sbb
out
push
stos
aad
and
lea
lahf
mov
add
add
lahf
pusha
add
bound
mov
lahf
sub
loope
cmp
mov
ljmp
add
mov
mov
cwtl
out
data16
pop
fs
out
lods
pop
sub
pop
adc
mov
add
js
mov
add
jecxz
jecxz
sbb
popa
dec
ss
or
or
sub
scas
mov
pop
arpl
add
mov
js
adc
pushf
pop
mov
nop
add
push
or
add
lahf
movl
fst
ret
sub
enter
imul
mov
mov
push
and
dec
mov
jl
int3
sahf
and
lock
test
sub
repz
inc
add
mov
push
test
in
mov
rolb
xchg
aas
data16
cmp
and
mov
push
and
cmc
add
pop
add
movsl
ljmp
ljmp
in
push
jecxz
inc
add
mov
mov
pop
dec
aaa
ja
jae
rolb
fsubr
xchg
push
sub
and
mov
and
add
pop
lock
mov
add
dec
je
adc
mov
sbb
shll
mov
lcall
les
add
pop
scas
adc
jg
push
push
clc
ja
push
add
push
mov
add
stc
xchg
xchg
adc
imul
add
sub
cmp
lahf
outsl
pop
push
bound
mov
sub
add
cld
fimull
pop
outsl
mov
add
add
mov
or
int3
aam
mov
inc
add
add
jne
sbb
add
push
mov
int3
pop
or
mov
pop
xor
inc
jbe
xor
mov
arpl
add
rolb
mov
in
mov
outsl
sub
movsl
clc
cmp
add
outsl
adc
imul
data16
js
dec
testb
add
adc
push
xchg
add
mov
add
mov
mov
shrl
es
add
mov
in
mov
add
stos
rolb
insl
and
mov
addr16
les
mov
fldcw
xlat
add
mov
mov
outsl
arpl
cs
std
push
jg
lods
xchg
push
pop
rolb
mov
xor
mov
ret
in
and
mov
mov
push
repnz
mov
data16
lret
push
scas
dec
dec
push
add
sub
xorl
mov
daa
fxch
sbb
mulb
mov
sub
rolb
lcall
cmc
rolb
mov
stos
lret
mov
iret
in
jb
mov
loop
mov
gs
addl
aad
movsl
mov
or
push
add
mov
inc
sbb
mov
pop
ljmp
les
mov
ljmp
add
add
inc
add
mov
mov
add
jne
out
pop
pop
and
scas
addr16
and
and
mov
jmp
and
mov
bound
mov
jnp
add
push
dec
fcomi
call
add
push
push
mov
cmp
cltd
push
enter
ljmp
dec
paddsb
cmp
adc
das
aam
dec
push
aam
mov
je
add
add
mov
cli
test
add
mov
mov
cmp
fdiv
add
jae
cmc
jns
cld
xor
add
out
cwtl
xor
mov
movsl
sub
fiadds
idiv
inc
adcl
push
xchg
fistpll
add
push
push
cs
stc
cmp
add
xor
and
ljmp
nop
add
mov
mov
add
rolb
mov
ficoml
mov
lds
mov
mov
mov
cmp
ret
pushf
push
pop
loopne
mov
pop
xchg
add
mov
mov
arpl
repz
pushl
mov
data16
add
fwait
int3
xor
mov
fsubs
mov
std
mov
sub
dec
cmp
xchg
jmp
mov
and
mov
push
mov
add
mov
test
out
mov
add
xchg
dec
ljmp
jl
ds
mov
jnp
inc
xor
mov
or
scas
rolb
mov
stos
cmpsb
movsl
and
mov
aas
rolb
mov
inc
repnz
add
mov
enter
inc
mov
jb
mov
cmc
push
or
and
pusha
add
add
clc
js
mov
daa
xchg
add
push
add
add
inc
cmc
pop
imul
cwtl
mov
dec
cli
xchg
add
or
es
or
mov
ret
repz
and
and
mov
push
adc
add
cli
push
jbe
jp
add
fldcw
sub
test
add
dec
in
pusha
add
rolb
fwait
mov
adc
xor
mov
mov
jo
mov
mov
push
xchg
jmp
dec
mov
js
es
jnp
rolb
mov
jnp
xchg
jmp
adc
mov
push
push
bound
mov
and
add
imul
das
xor
mov
pop
adc
mov
mov
test
cwtl
mov
add
mov
sub
test
dec
scas
aad
fisubl
movl
jbe
cmp
lods
add
push
add
xor
mov
pop
fisubrl
lahf
inc
sub
mov
mov
add
add
mov
rolb
mov
mov
enter
cmovle
xchg
add
mov
jle
mov
add
jmp
mov
popf
push
pop
jnp
rolb
mov
xor
push
add
in
stos
popa
addb
int
mov
mov
cmp
cltd
pop
iret
out
jbe
push
addb
dec
push
jg
add
js
jno
scas
cmpsb
and
js
lea
adc
mov
rolb
mov
in
scas
pushl
daa
cltd
inc
and
loopne
mov
mov
adc
mov
jmp
adc
dec
push
sbb
lea
mov
je
mov
push
imul
add
data16
add
stc
pushf
pop
fdivrp
sahf
negb
loope
add
ja
popf
stos
jno
and
mov
inc
lret
popf
adc
mov
outsl
mov
fiaddl
add
fwait
jmp
test
iret
addr16
ret
cmp
mov
xor
push
fistpl
shll
dec
jmp
mov
mov
push
mov
mov
lods
lods
pop
fs
ja
lcall
mov
lods
cmp
shll
jge
mov
lods
fstpt
mov
mov
idivb
lret
rolb
mov
aas
jae
cmp
push
outsl
inc
fs
test
push
push
das
mov
ret
jp
pop
pop
imul
add
add
arpl
clc
xlat
sub
imul
ret
or
add
sub
mov
jo
mov
sub
xor
mov
jne
addb
jb
mov
add
add
mov
bound
mov
push
je,pt
fimull
jo
mov
fiaddl
push
add
mov
addr16
inc
sbbl
insb
in
fidivrl
mov
add
xchg
outsl
jne
dec
je
pop
jge
std
and
mov
add
mov
mov
mov
adc
add
push
in
add
lea
mov
push
add
inc
cltd
sub
fsubs
lods
or
push
add
call
pop
jbe
sbb
add
dec
sub
dec
cld
lret
rolb
mov
mov
or
int3
mov
scas
and
mov
push
std
jo
mov
dec
lcall
mov
in
js
addb
pop
xchg
mov
mov
mov
rolb
mov
mov
lods
mov
adc
insl
iret
mov
inc
js
xchg
add
icebp
mov
add
add
mov
adc
jmp
rolb
mov
nop
add
mov
bound
mov
negl
mov
mov
lea
mov
add
cmp
in
pop
addr16
mov
adc
les
fisubs
mov
xchg
inc
push
jo
mov
push
hlt
loopne
mov
js
push
sbb
test
mov
add
mov
add
mov
aam
gs
sti
aad
add
add
lock
mov
icebp
jecxz
lods
icebp
loopne
mov
add
stos
in
enter
xor
mov
dec
pop
add
insb
mov
aad
cmpsb
pop
push
add
jecxz
cmpsl
jne
or
add
add
movsl
testb
adc
mov
add
cmp
xchg
push
add
int3
xor
repnz
popf
mov
cmpsl
leave
nop
add
mov
pop
and
mov
mov
mov
mov
add
mov
jle
add
jmp
xchg
inc
xchg
add
xor
pop
dec
sbb
adc
setne
fisttps
add
jmp
addl
xor
mov
sub
ljmp
mov
mov
insb
fcomps
fcoms
outsl
cmp
in
outsb
divl
mov
or
jbe
add
sub
add
sub
add
inc
es
mov
mov
inc
rolb
mov
push
fimuls
pop
sub
out
cmp
mov
jne
add
jnp
add
loopne
mov
jg
rolb
cld
orl
mull
sub
add
sbb
arpl
add
fdivs
adc
mov
out
push
add
mov
pusha
add
pop
rcll
mov
add
lahf
add
mov
nop
add
or
pop
push
fsubl
cwtl
or
jnp
jle
add
mov
xor
mov
lcall
jp
pop
jle
lcall
add
js
pop
test
lcall
mov
and
jl
or
in
cmp
dec
loope
add
pop
mov
mov
lock
cmp
push
clc
push
lcall
mov
and
mov
add
inc
add
popf
pushl
cs
bound
mov
into
sub
pusha
add
add
xchg
popf
ja
add
in
in
addb
bound
mov
movsl
cmpsl
add
mov
mov
int3
rolb
inc
sub
jns
dec
nop
add
int3
pusha
add
or
inc
lcall
and
inc
ja
sub
add
imul
xor
mov
add
mov
mov
mov
sbb
xor
push
sub
xlat
int
popa
mov
jne
mov
cmp
adc
movsb
fistl
fwait
lret
or
jg
push
add
and
mov
loope
rolb
or
mov
push
mov
jo
mov
lret
sbbl
push
dec
lds
add
or
jns
push
cld
pop
cli
push
mov
mov
or
add
loopne
mov
addb
xlat
dec
sub
cmp
mov
mov
mov
addb
cmc
push
mov
inc
add
pop
push
inc
push
add
add
add
jno
or
stc
dec
jle
mov
or
addb
jmp
rol
es
add
fdivl
js
cmp
mov
xchg
and
in
ljmp
sub
and
mov
cmp
cltd
loopne
mov
addb
adc
ret
scas
lods
daa
mov
js
pushaw
add
scas
sbb
dec
iret
cmpsl
outsl
adc
inc
fldt
mov
sbb
std
add
add
stos
out
gs
rcll
mov
add
xchg
mov
mov
out
mov
into
add
mov
rolb
mov
or
notl
mov
movsb
inc
push
fadds
mov
push
sub
add
and
mov
scas
add
sub
addb
push
rolb
mov
add
and
mov
repnz
add
fninit
out
xlat
or
imul
outsl
jmp
sbb
sbb
pop
fwait
jbe
jecxz
lea
dec
cmpsb
cmp
leave
ss
add
dec
mov
push
pop
lods
mov
daa
mov
mov
repnz
sbb
jg
or
add
cs
and
xchg
add
fs
mov
add
mov
push
jbe
out
mov
movsl
push
mov
mov
outsb
or
jge
icebp
mov
adc
mov
adc
mov
adc
mov
loopne
mov
shrl
push
push
xor
dec
enter
pop
dec
inc
push
adc
push
into
add
mov
int
inc
inc
lds
lea
inc
dec
cmpsb
pop
xor
popa
mov
add
jns
rcrl
out
call
mov
rorl
prefetchnta
push
add
pop
pusha
add
jp
cmp
pusha
add
or
sbb
and
mov
stos
cmp
add
mov
add
leave
cmp
repnz
and
add
jne
cmp
inc
sub
sarl
mov
mov
mov
mov
outsl
jb
mov
scas
fcmovne
xor
mov
lock
add
push
cmc
adc
mov
add
or
mov
mov
insl
xchg
decb
push
test
or
lahf
inc
sub
daa
inc
mov
clc
and
mov
add
xor
inc
dec
xchg
pop
test
inc
in
dec
fsubrs
xchg
fwait
hlt
or
insl
xchg
cld
push
addb
add
and
sub
movsl
pop
or
popa
xchg
add
ss
sub
add
mov
or
dec
jno
test
fwait
xchg
pop
je
add
xchg
ret
xchg
push
rcrl
popl
adc
mov
loope
in
lahf
jbe
ds
movsb
rolb
mov
cmpsl
mov
add
jb
mov
dec
popf
loopne
mov
inc
adc
js
lret
jmp
mov
add
cmp
sub
push
jmp
test
xchg
xchg
add
mov
stos
adc
sbb
and
mov
add
add
cmp
loopne
mov
cmp
add
mov
add
in
pop
jns
add
cmp
or
mov
xor
mov
add
sbb
aaa
push
cli
decl
xor
add
cmp
lret
pop
pop
fucomi
pop
outsb
dec
movsb
pop
dec
dec
mov
xchg
inc
mov
mov
ss
push
lods
dec
outsl
jae
popf
and
mov
test
push
lahf
adc
mov
mov
push
pusha
add
movsl
ret
das
mov
adc
mov
or
std
lock
jmp
dec
pop
jae
call
push
mov
add
mov
sbb
mov
cmc
cld
xor
dec
and
mov
adc
mov
pop
je
fstpt
mov
mov
sbb
or
ret
jl
add
clc
xchg
fstl
sbb
cmpsb
xor
mov
jmp
add
insb
xor
xor
mov
je
sub
stos
or
dec
pop
inc
add
mov
arpl
ss
xchg
pop
push
scas
or
pop
mov
mov
push
aas
push
rolb
mov
push
add
rolb
mov
aas
nop
add
enter
outsb
ja
dec
sbb
insl
add
divps
jecxz
inc
add
popl
mov
mov
or
add
add
jmp
fmull
cmpxchg
bound
mov
shrl
add
pusha
add
outsl
insl
jl
outsb
rolb
jp
in
mov
mov
add
inc
fistl
mov
fldcw
in
pop
dec
in
addr16
jbe
add
xor
jae
mov
inc
inc
add
cwtl
mov
push
push
imul
mov
pop
sti
addb
cs
ficoml
xchg
push
add
mov
add
add
xchg
push
add
mov
insb
loope
mov
jno
leave
enter
cmp
sbb
fiaddl
jmp
cmp
test
addb
imul
stos
outsl
lods
pop
les
cmp
lds
jno
push
push
test
cs
les
shll
jg
shll
xor
mov
push
out
adc
mov
pop
mov
scas
push
xchg
add
cmp
push
pop
jbe
add
or
inc
add
and
mov
hlt
dec
sahf
std
mov
ficompl
mov
mov
mov
add
push
sbb
inc
mov
sahf
icebp
inc
sub
mov
xor
mov
inc
push
not
or
rcr
leave
pushf
mov
mov
add
xchg
push
add
dec
mov
add
into
jb
mov
add
cmc
adc
mov
ret
insb
popf
xchg
mov
fbld
add
add
aam
rcrl
xor
push
addr16
mov
mov
je
inc
cli
pop
in
lds
mov
push
add
jo
mov
add
mov
jmp
jo
mov
mov
push
push
jl
add
movsl
addb
jno
dec
incb
fidivs
cmpsl
push
push
lret
les
xlat
push
or
roll
call
inc
das
jns
add
mov
cltd
xlat
sbb
push
add
addl
mov
pushw
and
mov
ljmp
add
fldcw
ret
jl
outsb
or
scas
icebp
dec
sub
addb
ror
pop
xlat
ficompl
and
std
cmp
jnp
mov
test
inc
add
jg
fimull
push
jne
cs
cltd
lea
movsl
mov
xchg
int
add
stos
popf
dec
hlt
xor
sbb
enter
rorl
or
sub
test
std
test
hlt
mov
mov
jle
lods
ja
cmp
add
sub
dec
and
lods
bound
mov
add
jp
cli
iret
lock
mov
add
pushf
push
xor
add
xor
mov
cmp
sub
push
in
or
add
pop
mov
sub
add
jmp
push
xchg
test
xchg
add
cmp
into
fxch
dec
jne
jge
hlt
mov
add
arpl
and
iret
inc
add
mov
mov
mov
subl
push
cmp
add
sbb
sbb
loop
mov
sahf
mov
out
inc
int3
loope
mov
xchg
push
adc
mov
shrl
push
push
add
add
xor
mov
inc
add
cmpsl
push
ja
add
mov
mov
push
pop
dec
imul
xor
add
add
sbb
add
xchg
push
pop
xchg
out
test
loop
mov
add
pop
insl
punpcklwd
addr16
add
ljmp
sub
add
mov
add
xor
mov
mov
ss
mov
xchg
add
mov
push
out
cmp
inc
add
pop
sahf
insb
push
pop
aas
pop
xchg
xchg
push
inc
add
push
movsl
imul
pop
repnz
mov
pop
xor
mov
mov
ficomps
jne
testl
loopne
mov
push
cmp
das
mov
mov
test
add
imul
mov
scas
imul
sub
repz
add
xchg
adc
sbb
gs
sti
nop
add
mov
push
or
adc
add
inc
pop
imul
inc
enter
add
mov
push
add
and
mov
insl
jb
mov
dec
iret
mov
xchg
add
insb
dec
subl
icebp
call
mov
sub
ljmp
mov
pop
xchg
sbb
fstpl
dec
mov
aaa
mov
cmp
stos
xchg
hlt
jmp
mov
add
xchg
scas
pop
pushf
cmp
add
inc
test
and
int3
lock
mov
add
jl
add
mov
daa
leave
test
mov
cmp
fstpt
mov
mov
out
test
pop
sahf
pushf
adc
xor
push
xchg
cwtl
mov
xor
mov
jo
mov
sub
inc
push
add
pop
ss
mov
jnp
insb
fwait
stc
sar
icebp
div
sub
jb
mov
movsl
and
movsb
sysexit
cltd
and
jmp
mov
cmpsb
test
inc
mov
aaa
rcrl
add
mov
mov
clc
dec
xchg
in
add
lock
adc
pushf
mov
sbb
mov
pop
jge
ret
icebp
and
mov
rolb
mov
lret
rolb
lds
xchg
aas
pop
mov
add
gs
add
and
mov
adc
jns
sub
mov
mov
mov
scas
mov
mov
jge
mov
mov
push
enter
cli
sahf
ljmp
inc
aad
xchg
iret
addb
icebp
sbb
mov
test
rolb
mov
ljmp
pop
dec
scas
out
mov
aaa
jnp
hlt
sub
and
mov
mov
pop
mov
sbb
loope
jbe
jns
sbb
add
or
subl
call
stos
push
sub
mov
and
xchg
in
jge
das
mov
loop
mov
ret
shrl
sbb
dec
scas
mov
and
mov
cmp
repz
mov
mov
and
mov
or
add
and
jle
jmp
xor
mov
fs
sub
add
add
jecxz
je
add
jl
imul
add
insl
push
add
cmp
pop
aaa
fwait
ret
or
daa
ljmp
pop
sub
test
xchg
pop
ljmp
sarl
mov
or
add
jns
xor
mov
inc
inc
add
sbb
add
int3
neg
and
mov
xchg
mov
jb
mov
mov
mov
ffree
loope
ficomps
mov
and
mov
leave
inc
jae
outsl
mov
inc
inc
cmp
add
mov
dec
pop
test
mov
mov
lret
addb
cmp
lahf
sbb
or
or
in
mov
sbb
lods
popf
jnp
mov
xor
mov
xchg
fistl
rolb
mov
lahf
xchg
ss
add
movsb
rolb
mov
fcoml
dec
mov
cmpsl
ds
fsubs
mov
aaa
mov
inc
add
cwtl
push
add
push
jp
sbb
in
out
test
js
xlat
out
push
push
add
je
add
in
lcall
dec
pop
ret
jle
push
fst
arpl
mov
add
arpl
mov
bound
mov
add
add
rolb
dec
mov
movsb
or
or
add
push
xchg
imul
loop
mov
dec
xchg
dec
out
stos
xchg
les
mull
jns
add
or
adc
into
loope
dec
jne
adc
pop
sub
and
mov
or
mov
inc
add
mov
add
sub
insb
repnz
mov
stos
mov
mov
enter
cmp
add
mov
add
mov
test
out
mov
sub
cmp
nop
add
cs
loopne
mov
dec
fsubrl
push
add
dec
jg
imul
xor
mov
or
sbb
shl
lret
fiadds
or
jne
mov
dec
xor
mov
mov
mov
mov
rolb
mov
insb
add
mov
out
add
xchg
jl
lea
pop
enter
sub
test
inc
cs
jno
aam
inc
stos
and
mov
adc
mov
sbb
push
lods
fcmovbe
add
rorl
inc
mov
mov
pop
jge
pop
xchg
add
add
add
jno
out
jns
lods
int
dec
fwait
js
aam
xor
xchg
iret
addb
std
jnp
mov
lods
lods
push
mov
add
data16
mov
mov
loopne
mov
xor
mov
add
inc
mov
das
jno
add
mov
cmp
dec
or
add
cltd
pop
or
add
fmuls
imul
mov
adc
mov
sbb
adc
mov
xlat
ja
xchg
pop
ror
pusha
add
fadds
outsb
push
test
xchg
test
ja
push
adc
mov
adc
xchg
aaa
stos
mov
repz
cmp
ret
xlat
stos
in
mov
test
xor
icebp
jp
repz
lea
jle
add
mov
and
das
mov
sbb
sbb
rolb
add
mov
out
jo
mov
icebp
jge
jnp
add
mov
add
and
fisttpl
out
lret
xor
push
dec
fidivl
imul
mov
pop
lods
addb
and
mov
pop
push
stos
mov
cmpsl
sub
sbb
ljmp
mov
cmp
xor
jae
addb
aad
daa
mov
or
mov
xchg
lahf
scas
add
out
aas
mov
mov
mov
fstpl
xchg
sub
cmc
les
sbb
call
mov
cmp
in
adc
mov
mov
mov
add
add
push
repnz
xchg
pop
ds
sub
add
jecxz
cmc
push
mov
js
test
repz
adcl
push
jle
movsl
cmpsb
fadds
add
and
mov
push
sub
add
mov
jge
subl
iret
or
add
mov
dec
jae
push
ret
or
movsb
add
mov
push
push
lcall
jecxz
into
aaa
scas
push
xor
gs
and
add
mov
xchg
loope
pushf
jecxz
repnz
mov
mov
add
xchg
jne
scas
push
cmp
cmpsb
add
sub
rolb
mov
movsl
test
pop
push
dec
ds
mov
push
xor
lods
cld
xchg
pop
pop
mov
add
gs
pop
push
daa
iret
scas
add
mov
cltd
cmpsb
das
mov
mov
in
cmp
mov
test
pop
aaa
add
jecxz
seta
mov
pushf
inc
ds
mov
mov
stos
mov
push
mov
add
fcoml
fnsave
add
mov
mov
enter
pop
push
adc
and
dec
and
xchg
add
and
mov
ret
addb
cmpsb
sub
mov
mov
push
mov
adc
rolb
mov
mov
test
insl
pop
cmp
mov
add
xor
and
mov
mov
mov
inc
jne
int
cmpsb
mov
add
xrelease
mov
mov
add
mov
add
mov
in
add
pop
lahf
inc
data16
xchg
daa
fiadds
sbb
add
mov
pop
xchg
lret
out
aam
mov
lahf
mov
mov
pushf
imul
fwait
add
cmp
sti
mov
mov
and
mov
add
pop
pop
sbb
push
scas
mov
in
push
add
stos
pop
clc
jb
mov
push
inc
add
add
jae
mov
movhps
cmpl
push
add
leave
xchg
lret
cmp
cwtl
in
int
inc
jge
das
scas
test
sbb
lret
mov
outsl
xor
add
rolb
mov
and
jo
mov
clc
outsb
dec
popa
aaa
mov
mov
jnp
ffree
xchg
das
bound
mov
or
add
gs
lods
movsb
das
bound
mov
insl
xchg
add
pop
xchg
ret
pop
inc
add
add
mov
sub
jae
fst
jnp
fwait
pop
jno
add
pop
int
rolb
jle
rcll
add
add
in
add
dec
pop
inc
mov
push
xchg
cmpl
movsb
outsb
adc
ljmp
jecxz
dec
xor
mov
loope
fmul
jne
sbb
pop
enter
add
mov
loop
mov
add
std
repz
mov
addb
arpl
sub
fdivrl
and
mov
add
add
jo
mov
add
dec
mov
jb
mov
fbld
fwait
movsl
push
cmp
es
jecxz
push
repnz
xchg
pop
xchg
push
inc
ret
inc
mov
es
cmp
mov
add
mov
mov
popf
cld
inc
dec
daa
addb
push
inc
add
push
add
xchg
loop
mov
sarl
imul
lods
xor
nop
add
ret
adc
mov
fstpl
lret
sbb
mov
mov
xor
add
jmp
jl
fsubr
and
movsl
push
pop
adc
mov
mov
imul
rcl
mov
add
mov
test
popa
xor
mov
adc
mov
push
sbb
in
das
nop
add
inc
cmpsb
sbb
mov
mov
out
dec
mov
mov
mov
movsl
jp
jne
outsl
pop
shll
xor
add
dec
push
cmp
jo
mov
aas
push
pop
dec
inc
add
cmp
push
pop
cmp
dec
std
jmp
push
mov
jg
add
sbb
lahf
inc
mov
mov
les
mov
mov
outsl
fcmove
mov
mov
jne
aad
push
add
test
and
jne
and
mov
xchg
xchg
jp
mov
pop
mov
jg
add
rcrl
mov
mov
testl
xorl
or
add
xchg
pop
pusha
add
jbe
rolb
and
mov
stos
aas
sbb
stos
stos
jl
cli
sbb
add
add
mov
add
stos
xor
pcmpeqd
mov
leave
fwait
mov
xchg
add
add
mov
nop
add
test
jmp
mov
or
adc
mov
inc
rolb
jae
in
xchg
adc
mov
inc
outsb
fsubr
jmp
lds
jle
push
add
push
outsl
out
mov
push
sbb
roll
lock
mov
clc
mov
mov
dec
xchg
push
push
ja
add
es
add
push
add
lcall
hlt
std
lret
mov
jecxz
repz
repnz
jnp
xchg
dec
in
xlat
test
cmpsb
dec
mov
dec
sub
push
push
xor
jmp
push
jle
inc
pop
mov
push
movsb
and
mov
cmp
jbe
into
es
and
jbe
xchg
xchg
dec
call
adc
mov
mov
mov
daa
adc
mov
rolb
mov
gs
not
pop
sar
adc
mov
mov
cmp
pop
ss
adc
lret
or
adc
mov
add
push
call
mov
mov
xchg
pop
jle
gs
mov
cmp
xor
insl
loop
mov
adc
stos
cmpsl
inc
add
scas
and
in
scas
and
mov
ds
jecxz
mov
add
pop
jg
test
pop
mov
loop
mov
add
shr
sub
xchg
sub
add
pop
in
fadds
pop
pop
jnp
lods
or
jl
add
push
je
cli
push
sbb
add
dec
and
mov
and
mov
add
mov
cmp
pop
aas
test
xor
movsb
pushf
pop
sbb
xchg
inc
out
add
xadd
xor
mov
test
add
loopne
mov
nop
add
mov
sbb
xor
add
movsb
pop
pop
leave
push
mov
push
dec
sub
jp
or
enter
xchg
lods
loop
mov
mov
mov
imul
pop
inc
jo
mov
addr16
jbe
sbb
add
push
arpl
mov
pop
mov
mov
adc
add
mov
and
mov
add
add
stc
jae
pop
je
enter
fcomps
mov
popf
packssdw
mov
mov
pop
xor
test
add
rcll
mov
mov
mov
insl
out
push
repz
sub
add
clc
mov
sub
iret
lret
cs
movsb
addb
test
pusha
add
scas
pop
test
das
add
mov
xor
lret
call
mov
adc
mov
mov
daa
sbb
mov
mov
xchg
xchg
add
pop
es
sub
sub
mov
insl
mov
add
loop
mov
outsl
in
xchg
pop
stos
or
jmp
jecxz
testb
mov
loopne
mov
adc
mov
dec
sub
push
add
add
scas
mov
icebp
aaa
push
add
xchg
add
add
int3
es
movsb
movsb
and
stos
fs
dec
das
int3
leave
lods
pop
ja
in
or
nop
add
out
push
dec
xor
dec
adc
jl
sbb
je
pop
mov
mov
ret
cmp
divl
add
cld
mov
mov
xchg
mov
shl
adc
mov
xor
mov
xlat
mov
sbb
xor
add
mov
add
jne
pop
gs
sub
cmovge
test
and
mov
pop
xchg
add
inc
push
in
inc
add
mov
jae
pop
mov
mov
out
out
jne
inc
jg
inc
push
pop
sub
sbb
sub
ret
jb
mov
jle
cltd
mov
mov
fnstsw
mov
add
ljmp
dec
gs
adc
mov
cmpsb
mov
dec
ljmp
dec
int
stc
enter
fbstp
jmp
add
mov
jp
inc
add
mov
adc
cmc
stos
dec
icebp
mov
pop
pop
adc
mov
addr16
mov
fnstcw
clc
sti
lods
mov
test
cmp
mov
outsb
sub
add
add
add
test
or
add
fistps
push
and
sub
movsb
pop
enter
sub
in
loopne
mov
cli
inc
add
mov
jnp
loop
mov
mov
ds
or
jp
mov
mov
jns
add
mov
inc
mov
fwait
pop
nop
add
add
mov
mov
add
add
mov
sti
movsl
test
or
pop
inc
aad
jle
rolb
mov
insl
lods
rcrl
mov
add
fwait
lcall
popf
pop
xor
cmc
aaa
or
cmp
mov
push
xchg
ljmp
stos
push
lods
mov
jge
add
testl
pop
stos
and
mov
pop
addb
js
add
add
sbbl
fnsave
rorl
cmpsb
mov
in
or
loope
jp
out
ds
in
mov
popa
in
add
mov
add
test
pop
xchg
clc
sar
insb
out
push
dec
insl
testb
ds
and
mov
je
add
or
cli
add
mov
dec
in
lcall
in
int
dec
adc
mov
add
or
add
outsl
dec
fdivp
sub
add
add
mov
insb
loop
mov
adc
mov
mov
jb
mov
rcll
fisubrl
ja
repz
mov
and
xchg
jnp
insb
aam
push
push
arpl
lock
popa
loopne
mov
inc
lret
test
adc
mov
sub
imul
daa
sbb
add
lock
outsb
hlt
mov
add
mov
mov
xchg
inc
lods
loop
mov
add
add
jbe
stos
pop
and
mov
scas
push
pop
pop
bound
mov
mov
mov
add
jns
xchg
xor
xor
mov
and
mov
adc
sub
jnp
add
add
loope
or
mov
inc
dec
push
inc
add
push
dec
stos
xchg
cmpsb
movsl
push
sbb
add
mov
mov
push
fisttpl
inc
lds
aad
add
mov
divb
inc
jmp
pop
push
sbb
fsubl
mov
adc
lock
add
add
fs
add
mov
cmpsl
cmp
popf
stos
xor
in
sub
or
mov
mov
stc
cmp
add
add
fisubs
addb
xchg
mov
mov
cwtl
aas
dec
lds
mov
bound
mov
add
dec
push
call
add
inc
add
or
mov
add
mov
mov
addb
and
cmp
push
mov
add
mov
add
adc
mov
jae
jbe
and
mov
mov
mov
and
dec
in
and
add
mov
scas
push
insb
int
adc
mov
std
inc
push
ret
dec
jle
fistpll
dec
clc
ds
fnstsw
sub
add
mov
ds
popf
push
mov
jns
cs
imul
dec
mov
mov
or
dec
sub
fmul
dec
cmc
outsl
xchg
xchg
add
in
add
mov
pop
addr16
fdecstp
test
addb
pop
mov
pop
dec
divb
push
je
rolb
mov
mov
sbb
mov
lahf
mov
add
ljmp
xor
aas
lea
enter
fldl
xor
mov
and
mov
pop
setbe
push
in
xor
sub
add
mov
add
add
pop
rolb
cmp
es
mov
inc
addr16
lods
sbb
dec
cli
fbld
jecxz
je
adc
adc
jmp
addb
out
bound
mov
add
das
sub
mov
add
inc
dec
enter
mov
addr16
cmp
push
inc
add
add
ds
xlat
test
xor
mov
roll
mov
add
add
add
pop
jnp
rolb
mov
mov
mov
ja
je
into
mov
cmc
ret
add
add
jns
add
cmp
loope
in
cmp
pop
sbb
mov
cli
pop
orl
jg
add
mov
into
inc
xchg
add
aad
pop
stc
idivl
lock
sbb
lods
nop
add
add
jne
loopne
mov
mov
out
and
add
xchg
jb
mov
mov
test
hlt
ljmp
leave
in
or
and
push
add
test
cs
repnz
push
xor
xorl
pop
cmp
cmpsb
mov
cmc
dec
inc
flds
in
inc
cmp
stos
cmp
movsb
xchg
ja
push
repnz
push
add
pop
push
xor
mov
push
outsb
xor
aaa
ja
xchg
daa
jg
lea
cli
mul
test
leave
jno
mov
add
aam
mov
jg
insl
push
cmc
mov
mov
pop
mov
mov
jg
nop
add
add
rolb
mov
add
mov
stos
mov
mov
add
aas
push
aaa
ja
xchg
das
fcoml
mov
std
lock
dec
std
ret
sbb
jns
xor
jo,pt
mov
add
mov
ror
rcll
rcll
mov
outsl
int3
jb
mov
arpl
and
mov
dec
out
mov
sub
lahf
dec
sub
repnz
mov
add
mov
lea
loopne
mov
add
test
pop
stos
hlt
cmpl
xchg
add
mov
imul
lret
ljmp
add
aam
pusha
add
add
mov
aas
cmp
or
cmp
and
mov
add
add
out
cmpsl
pusha
add
jl
sub
or
xchg
add
pop
push
adc
add
or
outsl
gs
pop
cwtl
out
scas
mov
add
pop
lock
or
ret
sub
sbb
sbb
bound
mov
add
pop
xor
fnop
add
add
out
inc
lcall
dec
cmp
add
imul
js
mov
scas
shll
mov
pop
mov
jle
cs
adc
xchg
rcl
mov
add
lretw
subl
mov
outsl
and
cli
stos
fldcw
in
push
inc
aas
xor
movsb
add
jge
in
or
add
inc
add
xchg
or
shll
mov
out
out
mov
pop
subl
stos
add
mov
mov
icebp
push
arpl
lret
dec
movsb
sub
popa
rolb
mov
mov
adc
mov
xchg
push
add
adc
mov
movsl
les
add
push
into
bound
mov
push
fisttpll
addb
lock
idiv
movsb
bound
mov
cmp
lcall
pop
pushf
mov
mov
roll
and
mov
mov
mov
fwait
inc
push
pop
pop
enter
jg
mov
ss
mov
js
pop
loop
mov
inc
push
add
inc
add
add
fs
out
test
and
or
add
add
or
dec
mov
nop
add
sahf
inc
jo
mov
mov
cmp
mov
test
int3
in
add
mov
sbbl
rolb
mov
dec
lds
adc
mov
add
push
add
or
inc
int3
jae
inc
add
mov
push
shll
add
insl
or
cld
xchg
add
add
mov
ret
in
scas
enter
cltd
mov
and
pop
pop
stc
js
xchg
stc
addb
mov
dec
inc
fdivs
fs
mov
push
les
xchg
add
jns
cli
pop
iret
xor
rolb
mov
fmul
popf
jns
xchg
xor
jno
inc
dec
jg
imul
leave
or
imul
lret
pop
ret
popf
dec
shrl
stos
mov
cmpsl
mov
push
xchg
bound
mov
mov
lock
stc
iret
dec
outsl
mov
dec
mov
testb
fmul
popf
rolb
mov
sbb
arpl
add
mov
add
mov
mov
sbb
add
add
mov
mov
add
push
add
test
popf
test
inc
add
mov
add
movsb
fwait
loop
mov
mov
jmp
cs
dec
gs
push
pop
mov
pop
adc
inc
add
push
mov
mov
cmpsb
pop
test
dec
outsb
in
popa
mov
ss
sbb
lods
cmpsl
lods
std
addb
cs
test
sbb
xchg
clc
cmp
dec
in
aam
jmp
add
add
jo
mov
jo
mov
or
cmp
xor
mov
decb
mov
add
pusha
add
add
push
add
adc
ss
add
jae
pop
fsubp
pop
xchg
movsl
mov
xor
mov
mov
add
mov
push
xchg
rolb
mov
mov
mov
clc
cmp
push
add
jmp
and
mov
jg
inc
add
add
mov
inc
adc
dec
into
pushf
xchg
lods
pushf
lahf
jno
mov
xor
mov
mov
cltd
or
and
rol
add
add
bound
mov
dec
filds
add
mov
fwait
addb
mov
add
ret
in
arpl
cli
push
outsb
push
add
dec
cmpsl
fisttps
aaa
inc
sub
mov
ds
shll
add
push
inc
and
mov
mov
mov
jl
pushf
imul
inc
stos
dec
and
add
mov
mov
dec
out
sub
addb
rorl
push
push
lods
lcall
inc
add
mov
je
sbb
add
insb
divb
aam
fldln2
daa
pop
xchg
add
mov
ds
sub
add
push
push
add
mov
cmp
dec
gs
adc
arpl
dec
xchg
add
fcmovb
call
rolb
mov
cmp
mov
add
lods
mov
sbb
xchg
test
or
aad
adc
mov
mov
inc
xor
mov
add
add
mov
add
hlt
insl
cmp
add
pushf
add
into
mov
mov
scas
pop
aas
add
aas
adc
mov
sub
sbb
fistpl
rolb
jo
mov
inc
add
mov
lock
loope
add
loopne
mov
add
add
dec
scas
testl
daa
jl
and
mov
cmpsb
xor
leave
pop
jo
mov
or
mov
movsl
mov
mov
out
ss
clc
add
mov
add
lcall
dec
sub
sub
jbe
xor
mov
int3
mov
inc
popf
push
add
mov
jl
mov
popa
cmp
pop
mov
addb
stc
push
sbb
mov
inc
dec
std
pop
insl
insb
lahf
add
ljmp
add
mov
mov
mov
shrl
jle
cmp
aam
mov
mov
mov
int3
lcall
mov
and
mov
sarl
loopne
mov
fwait
negl
push
sub
push
push
inc
add
mov
outsb
int3
rcrl
cmp
out
fistl
add
outsb
xchg
push
mov
dec
and
mov
shrl
cmpsl
sahf
cmpsb
push
rcll
add
pop
out
cmp
ret
loope
jg
int3
sub
push
in
pop
sub
loope
jle
in
test
dec
push
mov
mov
sub
sub
pop
add
mov
bound
mov
xor
add
mov
add
ret
xor
mov
mov
mov
rorl
sbb
rolb
int3
fnstsw
sti
sti
xchg
outsb
leave
push
sub
xor
add
add
add
loopne
mov
fdivp
mov
cmc
dec
mov
mov
add
mov
lods
testl
dec
adc
mov
and
and
sub
add
jae
out
repz
mov
pop
inc
add
xchg
push
add
pop
in
mov
add
sbb
and
aam
xchg
mov
add
data16
rorl
jmp
adc
push
movsb
mov
cmp
repnz
lahf
dec
addb
jmp
in
mov
pop
cwtl
jns
jl
dec
mov
jb
mov
push
mov
dec
or
fildll
inc
add
mov
mov
add
add
mov
push
punpckhbw
mov
arpl
popa
mov
sub
jbe
add
push
cwtl
bound
mov
mov
bound
mov
add
xchg
mov
aad
in
shl
pop
insl
mov
push
add
call
and
jp
add
push
add
cmpsl
rcll
cmp
add
std
dec
shll
mov
pop
out
insl
mov
mov
in
jne
lret
out
aaa
mov
lods
fnsave
add
dec
push
mov
sti
dec
jbe
pusha
add
add
icebp
cmp
adc
add
inc
mov
enter
adc
or
sbb
in
das
iret
lcall
jmp
dec
dec
push
not
pop
sbb
outsb
mov
ljmp
out
mov
push
push
mov
mov
mov
mov
repnz
arpl
aas
jl
inc
cmp
ljmp
or
push
add
filds
jno
lahf
cmp
xor
stos
push
cli
sbbl
pop
addb
xchg
add
mov
or
cltd
mov
mov
mov
ret
push
jns
pop
inc
lcall
hlt
icebp
mov
adc
mov
xchg
add
xchg
fadd
add
leave
ret
nop
add
mov
stos
push
or
mov
jp
xchg
movsl
psubq
and
mov
popf
in
fbld
int
add
xor
mov
das
pop
pushf
mov
push
clc
lret
call
aaa
sbb
pusha
add
mov
int
mov
jp
or
pop
jl
adc
mov
test
xchg
adc
mov
add
dec
mov
add
test
loope
add
mov
cmp
mov
dec
add
pop
cmc
adc
xchg
add
mov
sbb
cmpsb
inc
add
out
in
push
out
inc
insl
ds
add
lods
and
adc
cltd
outsb
push
add
push
add
mov
adc
mov
bound
mov
shrl
lds
dec
addb
xchg
mov
inc
mov
jge
sub
mulw
add
sbb
pusha
add
add
rolb
and
mov
mov
mov
mov
mov
inc
cmc
cmpsl
jae
mov
cmp
pop
clc
aas
mov
mov
dec
push
nop
add
xchg
mov
mov
adc
mov
ficomps
fnstenv
mov
icebp
jne
outsl
adc
mov
jno
add
sub
inc
add
aam
jecxz
in
and
mov
gs
fildl
cli
fisttpll
pop
adc
mov
in
and
mov
incb
jl
add
sub
jecxz
lods
in
cmpsl
fnstenv
cmpsb
addb
xchg
int3
jl
adc
mov
add
test
add
add
mov
cmp
push
add
mov
mov
lds
jl
js
add
out
test
dec
xlat
out
xor
mov
add
in
mov
daa
fcoms
add
add
dec
in
inc
lock
cmpsb
xchg
jns
in
movsl
mov
mov
mov
mov
int3
divb
mov
xchg
sub
add
dec
xchg
mov
cmp
not
push
add
cmpsl
mov
mov
or
xor
mov
rolb
mov
jmp
add
and
mov
dec
add
mov
add
sbb
pop
daa
vpminub
xchg
rorl
movsb
xchg
add
mov
add
push
inc
into
ja
sbb
scas
cmpsb
jg
andl
imul
add
fbld
mov
aaa
push
outsb
mov
fistpll
in
scas
push
add
cmc
pop
lret
test
gs
add
mov
push
pop
dec
dec
test
add
mov
dec
subl
mov
mov
stos
jle
enter
test
repnz
dec
cltd
adc
add
add
mov
mov
mov
pop
push
test
aas
and
mov
ret
jno
sti
push
mov
mov
jmp
add
sbb
in
mov
mov
cmpsl
xor
mov
arpl
add
add
imul
mov
hlt
sub
add
rolb
mov
or
addb
loope
mov
and
mov
movsl
cs
add
add
test
imull
stc
adc
mov
rolb
mov
adc
mulb
test
sbb
mov
mov
mov
popa
or
sbb
mov
aas
daa
sub
stos
dec
sub
mov
mov
mov
rcr
fidivrl
add
mov
push
jl
add
cmpsb
cld
mov
lahf
push
add
mov
shrl
sub
add
fnstcw
add
rolb
rolb
mov
push
dec
insb
jle
mov
push
add
out
push
fadds
push
cmp
repz
mov
add
mov
xchg
jne
lods
and
mov
mov
mov
rolb
and
mov
clc
mov
xchg
rolb
mov
mov
add
xchg
movups
mov
fadds
sub
decb
packsswb
rolb
mov
mov
sub
sub
add
sub
mov
or
add
xor
sar
ss
add
enter
sub
pop
push
call
into
scas
les
cmpsl
xor
mov
add
pop
addb
adc
mov
jg
adc
fdiv
mov
jnp
inc
out
mov
mov
mov
add
sbb
sub
cmc
jle
adc
mov
add
add
add
add
mov
pop
test
ret
push
jge
jbe
add
add
pop
out
ret
cmpsl
mov
mov
pop
cmp
rolb
fldpi
lret
dec
dec
sbb
inc
add
add
jb
mov
push
and
loopne
mov
mov
loop
mov
add
mov
mov
rcll
cmp
dec
popf
jae
inc
inc
xchg
cld
jb
mov
add
add
add
icebp
negb
add
cmpsl
add
movsl
or
rolb
mov
dec
cltd
mov
cmp
imul
cltd
aam
xor
popa
jae
add
sbb
lods
outsl
cmp
shll
add
cltd
aad
test
inc
hlt
add
pop
test
aas
xchg
add
test
movsb
js
adc
and
mov
add
mov
add
lcall
add
xor
mov
jno
pop
inc
pop
mov
mov
inc
add
push
rolb
mov
data16
mov
sub
lock
loope
popa
rolb
mov
push
mov
mov
push
mov
xchg
xlat
pop
test
inc
fwait
out
push
call
jg
cmpl
aam
and
mov
loop
mov
cs
mov
insl
add
cmp
sti
iret
rcrl
add
pusha
add
gs
pop
or
mul
cmp
mov
addb
push
outsb
push
add
addb
dec
imulb
rolb
mov
mov
insl
cs
mov
mov
cli
push
sahf
push
jecxz
sbb
mov
repz
and
mov
add
mov
cld
sub
pop
movsb
xchg
add
cltd
test
repz
add
mov
xchg
mov
add
mov
aaa
mov
jnp
std
cmp
mov
add
mov
or
out
dec
sbb
imul
inc
or
jae
push
xchg
outsb
mov
outsl
ret
dec
jbe
outsl
sub
and
mov
adc
imul
mov
sbb
add
mov
mov
jns
cmp
inc
xchg
push
pop
int3
stc
pop
push
add
or
das
imul
lea
add
ja
pop
lahf
pop
test
pop
lods
xor
mov
sbb
mov
in
adc
pop
mov
dec
icebp
daa
xor
outsl
addr16
and
add
leave
in
lcall
xor
mov
push
outsb
dec
outsb
xor
add
xchg
add
pop
xor
inc
mov
ss
mov
xlat
jo
mov
xchg
add
mov
fisubrs
ljmp
stos
lds
add
add
xchg
pop
cmp
mov
add
pop
cmp
xchg
add
test
cmp
out
fcomps
xchg
add
mov
add
clc
jo
mov
jbe
mov
or
xchg
sti
dec
jne
cmp
pop
dec
xorl
mov
add
lahf
arpl
add
loop
mov
or
sub
je
icebp
cmp
out
je
and
mov
push
inc
int
aam
mov
ret
nop
add
inc
add
add
dec
mov
mov
inc
push
cs
cmp
xor
sub
add
pop
in
lret
arpl
xor
jae
jne
in
adc
add
sub
pushf
sub
outsb
out
pop
adc
mov
pop
mov
sbb
xchg
inc
xlat
negb
fimull
adc
cmpsb
add
mov
in
add
scas
mov
sbb
mov
mov
push
add
mov
loopne
mov
cmpsl
inc
mov
add
pop
ss
add
or
jbe
add
je
jbe
dec
insb
test
pop
jb
mov
nop
add
cmp
ljmp
cmp
test
add
mov
add
mov
mov
int3
rolb
mov
mov
ljmp
test
in
add
mov
fs
jne
or
push
add
or
xorl
jge
xchg
fcom
pop
inc
add
mov
orl
or
push
mov
mov
leave
sub
jl
mov
and
sub
inc
add
rcrl
adc
mov
jnp
loop
mov
dec
rolb
mov
mov
insl
pop
insl
addr16
testb
outsb
ret
repz
jg
or
mov
mov
imul
rolb
mov
or
xchg
pop
lods
add
add
sti
pop
xchg
repz
add
fists
pop
lahf
mov
xchg
xlat
xchg
jge
roll
mov
idivb
add
add
pop
pop
stos
and
mov
push
pop
xor
mov
mov
insb
arpl
push
or
sbb
mov
scas
jmp
pop
divl
mov
adc
push
inc
xlat
add
add
jae
fbstp
test
mov
addr16
dec
ret
sti
pop
cwtl
mov
sbb
mov
lock
sub
xchg
addb
inc
aas
sub
pop
mov
das
lahf
dec
and
mov
inc
fsubrl
daa
jo
mov
push
dec
xchg
sub
lods
lock
add
mov
or
loop
mov
cpuid
add
mov
rolb
push
pop
xor
mov
mov
push
movsw
dec
rolb
mov
mov
movsb
add
and
dec
add
mov
add
fucomp
dec
fucomi
and
stos
xchg
cwtl
test
or
add
pop
sub
int3
jl
xchg
add
add
add
mov
cmp
push
pop
test
fsubrs
inc
fldcw
jnp
fadds
mov
movsb
push
sbb
aam
add
mov
or
or
pop
cltd
xor
mov
lcall
cmc
cmp
xor
add
aam
js
dec
cltd
inc
jns
pop
into
into
dec
cmpsb
lock
rolb
mov
lahf
popf
mov
add
add
popf
mov
jg
leave
add
push
add
inc
add
nop
add
add
adc
mov
lock
loop
mov
mov
mov
mov
add
loopne
mov
sbb
sbb
add
mov
repz
jmp
mov
fucom
sbbl
jmp
mov
clc
mov
mov
fisubl
addb
mov
ljmp
rcrl
jo
mov
mov
mov
sbb
mov
je
push
add
lods
negb
shll
pop
jno
mov
filds
mov
mov
divb
xchg
fisubs
lea
rolb
lods
push
inc
repz
adc
addb
push
in
and
add
roll
mov
cmp
sbb
add
jecxz
fidivrs
lcall
cmp
inc
inc
add
and
mov
negl
add
adc
sbb
icebp
imul
and
mov
mov
addb
or
dec
test
add
cmp
sub
iret
add
mov
je
shrl
mov
mov
adc
mov
xchg
hlt
scas
push
pop
das
test
adc
stos
aas
dec
jp
pop
jg
dec
fistpl
jnp
add
jae
repz
adc
mov
repnz
aam
test
into
jecxz
jmp
ljmp
pop
out
adc
mov
loope
pop
fs
mov
addb
sti
xlat
into
pop
push
xchg
iret
push
sub
shl
aad
and
mov
add
mov
jae
cmpsl
cmovs
mov
mov
xchg
or
push
sub
lock
add
ss
nop
add
dec
adc
mov
popf
aam
jbe
adc
mov
dec
addb
fcompl
scas
outsl
sbb
xchg
ja
sahf
sbb
sahf
mov
add
mov
inc
add
mov
dec
push
cmp
pslld
mov
dec
inc
call
lds
aas
push
icebp
jb
mov
push
sub
lods
test
fldenv
xchg
loopne
mov
in
int
in
test
jnp
jns
lods
scas
add
mov
xchg
inc
das
into
insb
push
add
adc
add
sahf
pop
jge
add
scas
xchg
addb
jae
push
cmp
icebp
jmp
add
insl
in
test
cmp
add
add
adc
outsb
addb
or
add
add
cmp
outsb
mov
enter
mov
dec
pop
sbb
icebp
pusha
add
add
sub
push
rolb
hlt
cmp
or
sti
pop
imul
add
js
add
lahf
cwtl
in
roll
cli
loop
mov
mov
scas
es
fcompl
into
and
xor
push
add
cmpsb
mov
mov
add
mov
add
add
negb
add
mov
and
call
fwait
xor
mov
add
adc
test
add
jo
mov
ret
add
mov
scas
jl
inc
add
mov
out
negb
into
push
add
inc
pop
je
ljmp
into
cld
mov
add
mov
movl
addb
cwtl
sub
add
cmp
add
lods
push
fsub
test
cmpsl
push
push
std
ljmp
mov
xchg
add
xchg
jbe
lea
push
push
std
and
mov
add
mov
fldl
stos
iret
loopne
mov
add
cmpsb
xchg
mov
lret
std
inc
clc
mov
lcall
jmp
fldenv
add
imul
lret
jp
or
mov
test
adc
add
and
aad
add
rolb
mov
dec
std
push
loopne
mov
or
test
addb
int3
in
loope
pop
shr
jl
addb
pop
loope
je
push
xchg
push
xor
adc
mov
mov
dec
mov
pop
inc
lea
pop
xchg
inc
imul
mov
popf
xchg
push
movl
xor
pop
enter
add
cwtl
fucomp
enter
or
add
add
jg
add
pop
mov
sub
pop
mov
repnz
or
ficoms
mov
xchg
and
mov
outsl
inc
mov
adc
mov
mov
add
dec
jmp
sub
es
mov
scas
rcl
inc
or
scas
gs
add
add
add
add
mov
jne
lea
add
or
sub
imul
cmp
rcr
dec
mov
sub
rolb
out
mov
movsb
xchg
or
add
ss
addb
and
mov
mov
add
or
add
scas
les
or
scas
fdivrs
aas
xor
mov
imull
add
add
loop
mov
test
es
scas
out
stc
or
pop
sub
enter
pop
xor
icebp
data16
jns
jnp
mov
add
inc
stos
sahf
lcall
mov
popa
adc
dec
xor
add
add
xor
mov
lods
dec
andnps
push
aas
mov
add
bound
mov
jecxz
lret
push
xchg
icebp
inc
add
mov
int
dec
cmpsl
fmuls
and
icebp
ljmp
mov
stc
add
and
mov
push
in
in
cmp
daa
out
std
push
push
mov
mov
mov
xor
mov
add
out
sub
push
out
gs
sub
add
les
dec
adc
add
in
inc
dec
or
mov
sbb
sub
mov
or
adc
mov
dec
rcrl
rolb
mov
xor
mov
rolb
push
leave
test
mov
data16
movsb
out
sub
mov
push
dec
dec
lahf
and
add
add
test
les
sub
sub
das
cwtl
pop
clc
pop
test
add
dec
jne
repz
add
add
fnstcw
push
lock
inc
add
mov
fwait
out
fisubs
jge
adc
mov
lods
ret
xor
mov
leave
das
inc
clc
mov
mov
jno
add
mov
add
or
mov
mov
in
or
test
pop
add
rcl
add
push
rolb
mov
dec
mov
inc
add
es
push
mulb
push
shl
add
test
cmpsl
test
xchg
fdivrs
mov
mov
add
jmp
insl
cmpsb
loopne
mov
fcmovnb
and
inc
fst
add
jmp
mov
in
es
mov
movsb
xchg
jbe
add
insb
push
cld
xchg
mov
cwtl
movsb
stos
adc
mov
mov
test
jg
add
or
stc
cmp
enter
mov
jne
das
sub
js
rcrl
mov
xchg
push
rolb
mov
mov
add
mov
mov
xor
mov
mov
movb
ret
mov
mov
mov
stc
ljmp
pop
pushf
and
imul
ficompl
mov
int
aad
push
mov
pop
in
mov
xor
mov
add
rolb
mov
scas
sti
fdivl
mov
xlat
mov
inc
add
sbb
xchg
add
mov
and
mov
mov
rolb
mov
stc
int3
jo
mov
sbb
mov
mov
add
out
icebp
lcall
and
add
lret
cmp
or
or
add
push
add
mov
xchg
popa
aad
or
add
retw
xchg
xchg
out
sub
add
mov
add
xchg
pop
pop
imul
fldcw
mov
add
mov
add
leave
sub
mov
jbe
dec
xchg
pushf
dec
loop
mov
ss
add
movsb
cwtl
cwtl
aad
pop
xor
js
cmp
mov
dec
mov
mov
mov
mov
adc
push
icebp
or
pop
xor
bound
mov
cmpsl
cmpsl
cmp
push
mov
push
ss
mov
mov
fbstp
add
add
add
scas
jns
xchg
add
rolb
mov
mov
dec
jb
mov
jbe
add
cmp
push
mov
sbb
cmp
xchg
in
adc
les
negl
int3
jns
cmp
test
popf
sbb
push
inc
rdtsc
scas
inc
add
cwtl
sbb
rolb
mov
divb
add
xor
mov
std
fnstenv
pop
pop
daa
push
lea
sub
or
push
fwait
sub
xor
pusha
add
sub
add
mov
pop
mov
xchg
adc
mov
jne
test
push
mov
xlat
out
addb
bound
mov
cmp
push
loopne
mov
lea
or
rolb
mov
scas
mov
outsb
movsl
xchg
rolb
or
dec
movsb
sbb
sbb
add
or
ja
lods
add
jp
lock
rolb
rolb
mov
sub
mov
sub
mov
std
fidivrl
dec
sbb
pop
nop
add
push
cmc
and
mov
jnp
movsl
mov
sbb
sub
dec
addb
divl
jbe
cs
mov
add
add
arpl
ljmp
mulw
into
and
mov
push
push
mov
sbb
or
mov
cmp
cmp
insl
es
into
jmp
or
add
sbb
mov
xor
pop
rolb
mov
xor
add
pop
fs
add
loopne
mov
and
add
out
add
mov
mov
mov
push
mov
and
dec
sub
icebp
testl
sbb
jo
mov
add
or
sbb
daa
addl
mov
insb
lret
inc
add
movb
es
sub
inc
add
cmpxchg
subl
mov
add
mov
fbld
and
mov
outsb
cmp
stos
loope
mov
mov
jmp
in
push
cmp
rcl
rolb
mov
in
and
add
mov
das
outsb
or
loop
mov
lcall
mov
add
roll
std
sub
gs
stos
sbbl
add
fucomp
fdivrs
add
mov
mov
mov
add
fisttpll
stc
dec
fwait
xchg
nop
add
mov
mov
adc
mov
add
into
dec
aam
paddsb
add
mov
pop
jmp
dec
inc
add
pop
mov
es
aaa
cmc
int3
fimuls
stos
add
mov
insb
lds
jmp
add
pop
das
xchg
dec
into
mov
inc
add
test
mov
xchg
pop
push
outsl
jnp
pop
int
add
rolb
mov
pop
mov
inc
mov
mov
mov
push
popf
loope
add
iret
rcr
fs
roll
jb
mov
push
cmpsl
imul
mov
enter
inc
inc
rolb
mov
add
pushf
cmp
mov
add
insb
mov
mov
and
lahf
inc
add
dec
mov
mov
mull
xlat
out
sbb
sbb
ljmp
mov
arpl
int3
jmp
bound
mov
outsb
inc
out
push
xchg
add
jae
jmp
dec
mov
fisttps
movsb
leave
gs
xor
mov
mov
or
in
pop
dec
movsb
mov
out
cmp
int3
and
add
adc
loop
mov
imul
mov
push
add
mov
lods
sub
mull
hlt
lahf
imul
dec
sarl
call
jns
add
ffreep
repnz
mov
cmc
rolb
xchg
scas
fs
add
mov
add
jb
mov
mov
or
mov
add
lret
sahf
std
scas
movsb
aaa
test
cmpsl
test
cmp
rolb
mov
jo
mov
inc
add
dec
push
push
ja
adc
mov
ds
icebp
outsl
ljmp
add
lds
inc
add
mov
mov
hlt
mov
in
in
out
pop
mov
and
or
add
mov
repnz
addb
add
mov
adc
push
js
add
cmp
mull
mov
pop
je
das
sbb
mov
divb
cmc
xchg
cmp
and
mov
add
idivb
or
shll
or
mov
jmp
xor
ss
mov
jmp
mov
push
xchg
add
ficoms
mov
and
mov
push
add
xor
mov
xor
mov
push
add
mov
stos
loopne
mov
movsl
lock
mov
out
frstor
imulb
inc
stos
test
ljmp
stos
imul
cs
sub
add
mov
out
ljmp
addb
xchg
outsb
cmp
popa
pop
push
add
jns
cmpsb
cltd
and
mov
mov
add
mov
xor
mov
testb
aas
xor
mov
xchg
pop
mov
mov
pushf
sbb
add
add
clc
repnz
nop
cld
jae
add
add
xchg
aas
mov
push
mov
xchg
ret
fsubs
add
adc
push
mov
nop
leave
jmp
add
add
add
add
shr
push
mov
xchg
ret
fadds
add
cmpsb
ljmp
clc
repnz
nop
cld
jae
dec
add
add
aam
dec
push
mov
nop
leave
jmp
add
add
or
clc
repnz
nop
cld
jae
inc
je
or
add
add
clc
repnz
nop
cld
jae
add
add
add
ret
jb
mov
jne
clc
repnz
nop
cld
jae
lcall
dec
push
push
mov
xchg
ret
push
push
fiaddl
add
ret
leave
push
clc
repnz
nop
cld
jae
xchg
int
add
js
xchg
mov
clc
repnz
nop
cld
jae
or
fucomp
adc
repnz
nop
cld
jae
add
test
nop
nop
cld
jae
xor
movsl
sbb
out
clc
repnz
nop
cld
jae
add
xchg
add
or
pop
rolb
xchg
ret
add
add
add
ret
mov
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
add
sub
push
mov
xchg
ret
add
pop
pop
add
add
add
clc
repnz
nop
cld
jae
add
sub
xor
inc
add
push
push
add
add
push
push
mov
xchg
ret
js
jge
mov
cld
call
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
stos
push
push
mov
xchg
ret
and
ficompl
add
arpl
and
push
mov
xchg
ret
add
add
sahf
pop
and
mov
add
outsl
popa
fs
repnz
nop
cld
jae
add
xor
or
repnz
nop
cld
jae
xchg
add
add
mov
mov
clc
repnz
nop
cld
jae
jge
out
add
add
sbb
nop
nop
cld
jae
add
lds
add
jns
mov
push
mov
nop
leave
jmp
add
out
mov
add
mov
nop
leave
jmp
mov
pop
int
ret
add
stc
add
push
mov
xchg
ret
loop
fisubrl
add
mov
sub
nop
nop
cld
jae
xchg
mov
mov
jge
clc
repnz
nop
cld
jae
xchg
add
push
jle
mov
div
clc
repnz
nop
cld
jae
cs
mov
rolb
adc
mov
and
clc
repnz
nop
cld
jae
pop
push
dec
jge
js
testb
push
mov
nop
leave
jmp
add
dec
movsl
add
shl
inc
add
add
fimull
subl
push
mov
xchg
ret
jo
pop
lret
or
add
repnz
nop
cld
jae
jo
add
sbb
nop
nop
cld
jae
pop
add
mov
clc
repnz
nop
cld
jae
add
xchg
and
add
adc
add
add
add
add
add
imul
clc
repnz
nop
cld
jae
lcall
pop
mov
push
mov
xchg
ret
jo
movsb
add
add
loope
dec
push
mov
nop
leave
jmp
in
add
add
xor
sub
in
nop
leave
jmp
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
in
dec
mov
clc
repnz
nop
cld
jae
sub
movsb
add
jecxz
imul
pop
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
push
add
stos
add
push
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
stos
add
movsl
adc
call
clc
repnz
nop
cld
jae
arpl
pop
je
movsb
ja
push
mov
clc
repnz
nop
cld
jae
add
xor
mov
adc
add
repnz
nop
cld
jae
add
dec
out
call
clc
repnz
nop
cld
jae
add
xchg
out
jmp
je
out
in
or
ljmp
sbb
nop
cld
jae
add
push
je
add
in
push
push
mov
nop
leave
jmp
add
jo
xor
loope
movzwl
push
mov
nop
leave
jmp
lret
add
add
movzwl
clc
repnz
nop
cld
jae
rol
add
push
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
xchg
pop
lret
mov
clc
repnz
nop
cld
jae
or
or
out
push
mov
mov
add
push
mov
nop
leave
jmp
inc
pop
jo
lcall
clc
repnz
nop
cld
jae
in
add
call
clc
repnz
nop
cld
jae
xchg
shr
mov
push
mov
xchg
ret
lcall
icebp
gs
push
mov
nop
leave
jmp
lret
dec
xor
mov
push
mov
nop
leave
jmp
add
add
inc
adc
add
repnz
nop
cld
jae
pop
add
jle
inc
add
mov
push
mov
xchg
ret
stos
je
add
add
sub
mov
es
add
xchg
add
add
enter
fisttpl
nop
rcrb
nop
leave
jmp
sahf
in
fadds
push
add
pop
fisttpll
nop
cld
jae
lcall
xchg
jg
clc
repnz
nop
cld
jae
lret
in
js
pop
in
cmpl
push
mov
nop
leave
jmp
add
pop
fmul
or
mov
gs
repnz
nop
cld
jae
add
and
sub
mov
xchg
ret
add
add
mov
xor
xor
pop
add
push
mov
nop
leave
jmp
mov
add
add
add
inc
add
add
mov
clc
repnz
nop
cld
jae
add
sub
cli
movb
cmp
ret
add
lds
enter
nop
nop
cld
jae
xor
push
add
int3
and
push
mov
nop
leave
jmp
ret
out
fdivs
mov
jl
pop
mov
movsb
incl
out
add
add
cmpsb
add
out
ficoml
repnz
nop
cld
jae
lret
add
push
add
pop
clc
repnz
nop
cld
jae
add
add
and
add
inc
push
nop
add
repnz
nop
cld
jae
out
loop
mov
not
push
mov
xchg
ret
out
xchg
add
fwait
push
mov
add
add
push
jns
addr16
inc
test
mov
add
push
mov
xchg
ret
loop
movsl
add
add
stos
mov
clc
repnz
nop
cld
jae
dec
xchg
mov
cmp
repnz
nop
cld
jae
add
xchg
add
add
pop
clc
repnz
nop
cld
jae
add
add
xchg
out
cmp
jp
inc
add
rcll
lea
push
mov
xchg
ret
add
pop
add
and
pushl
push
mov
xchg
ret
js
ljmp
pushl
clc
repnz
nop
cld
jae
add
sahf
add
push
mov
nop
leave
jmp
and
dec
xor
ljmp
add
clc
repnz
nop
cld
jae
movsl
shrl
push
fmuls
nop
nop
cld
jae
or
add
stc
mov
clc
repnz
nop
cld
jae
add
or
mov
xchg
ret
add
inc
je
push
push
mov
xchg
ret
add
xor
jl
out
jle
nop
add
nop
nop
cld
jae
mov
jne
pop
in
add
clc
repnz
nop
cld
jae
xchg
loop
movsl
ret
add
cmp
popa
push
mov
nop
leave
jmp
push
sahf
or
add
add
add
add
repnz
nop
cld
jae
add
add
add
in
lods
clc
repnz
nop
cld
jae
add
add
cwtl
add
push
mov
xchg
ret
xchg
add
lret
sar
jmp
mov
xchg
ret
arpl
in
add
add
addr16
dec
cmp
repnz
nop
cld
jae
fadds
add
push
js
add
mov
nop
leave
jmp
xchg
or
cmp
nop
nop
cld
jae
int
add
in
jno
pop
clc
repnz
nop
cld
jae
add
add
rcrl
clc
repnz
nop
cld
jae
xor
add
add
out
push
mov
push
movsl
insb
and
sbb
adc
add
mov
add
clc
repnz
nop
cld
jae
mov
and
mov
jmp
nop
cld
jae
jge
movsl
add
fidivrl
mov
clc
repnz
nop
cld
jae
add
ret
jge
fdivr
repnz
nop
cld
jae
add
mov
fsub
add
call
clc
repnz
nop
cld
jae
fiaddl
jo
pop
cmp
push
mov
nop
leave
jmp
add
movsl
xchg
adc
mov
add
ss
add
in
add
xchg
add
aam
call
clc
repnz
nop
cld
jae
add
dec
out
and
fstl
repnz
nop
cld
jae
je
add
out
xchg
mov
clc
repnz
nop
cld
jae
jo
and
xor
xor
clc
repnz
nop
cld
jae
or
fcompp
add
clc
repnz
nop
cld
jae
add
mov
call
clc
repnz
nop
cld
jae
add
and
rolb
jle
jne
push
mov
xchg
ret
loop
out
add
sahf
jge
sar
repnz
nop
cld
jae
and
add
cmpsb
add
imul
nop
nop
cld
jae
add
and
pop
clc
repnz
nop
cld
jae
add
stos
in
add
add
add
clc
repnz
nop
cld
jae
add
movsb
pop
add
fildl
clc
repnz
nop
cld
jae
cmpsb
xchg
add
cmp
je
sub
repnz
nop
cld
jae
add
rolb
mov
mov
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
add
lock
or
nop
leave
jmp
xor
stos
movsl
sahf
mov
clc
repnz
nop
cld
jae
ret
pop
arpl
add
addb
cli
push
mov
or
lock
or
fldl
mov
repnz
nop
cld
jae
add
dec
out
add
add
sbb
repnz
nop
cld
jae
add
add
fadds
add
add
and
repnz
nop
cld
jae
add
movsb
cs
mov
clc
repnz
nop
cld
jae
add
pop
add
movsb
loop
mov
pop
mov
clc
repnz
nop
cld
jae
add
add
sbb
sti
clc
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
xchg
add
xor
add
jle
push
sbb
add
mov
add
jo
fidivs
add
jne
aas
push
clc
repnz
nop
cld
jae
mov
cs
and
mov
push
mov
xchg
ret
pop
add
xchg
or
nop
nop
cld
jae
or
in
sbb
mov
add
clc
repnz
nop
cld
jae
fadds
int
addb
ljmp
jae
mov
out
add
lret
repnz
nop
cld
jae
add
xchg
add
add
stos
push
mov
nop
leave
jmp
fsubs
add
xchg
push
add
add
jbe
clc
repnz
nop
cld
jae
jo
and
ret
or
nop
nop
cld
jae
add
mov
mov
jp
inc
add
add
movsl
lret
sub
nop
nop
cld
jae
jge
add
add
push
mov
xchg
ret
cmpsb
add
fiadds
lds
add
add
clc
repnz
nop
cld
jae
fiaddl
add
or
repnz
nop
cld
jae
add
add
jo
add
mov
nop
leave
jmp
xor
add
sbb
mov
nop
leave
jmp
in
pop
add
add
int
add
pop
push
mov
xchg
ret
xchg
loop
jo
jne
mov
mov
movb
cmp
ret
pop
add
pop
stos
jo
add
pusha
add
repnz
nop
cld
jae
in
xchg
and
clc
repnz
nop
cld
jae
cmpsb
out
push
add
jno
mov
push
mov
nop
leave
jmp
lcall
daa
les
add
add
repnz
nop
cld
jae
add
rcll
mov
clc
repnz
nop
cld
jae
and
jle
push
lret
add
jmp
add
shr
add
pop
add
add
mov
mov
clc
repnz
nop
cld
jae
js
jne
cmp
xor
in
nop
leave
jmp
in
jo
add
add
xchg
push
mov
xchg
ret
add
add
mov
cmpl
push
mov
nop
leave
jmp
add
je
xor
mov
dec
add
add
repnz
nop
cld
jae
xor
add
lret
inc
adc
repnz
nop
cld
jae
add
add
jmp
fiadds
add
ret
add
add
xor
add
mov
push
mov
xchg
ret
push
push
jo
add
push
add
loope
repnz
nop
cld
jae
push
jle
add
add
cmp
nop
nop
cld
jae
xchg
add
sub
shll
add
clc
repnz
nop
cld
jae
push
inc
pop
add
repnz
nop
cld
jae
out
inc
js
roll
dec
push
mov
nop
leave
jmp
add
dec
xor
test
push
mov
nop
leave
jmp
add
lcall
in
xchg
push
mov
nop
leave
jmp
xchg
mov
add
add
add
dec
push
push
mov
xchg
ret
mov
or
dec
add
add
inc
addl
push
clc
repnz
nop
cld
jae
and
add
jge
pop
or
jmp
fcoms
add
pop
mov
push
xchg
add
lds
add
add
repnz
nop
cld
jae
ljmp
push
push
mov
xchg
ret
add
inc
or
add
or
scas
push
clc
repnz
nop
cld
jae
xchg
roll
push
add
mov
test
sahf
add
clc
repnz
nop
cld
jae
pop
add
mov
push
mov
nop
leave
jmp
add
inc
test
nop
nop
cld
jae
pop
add
add
mov
repnz
nop
cld
jae
loop
fadds
sahf
add
push
add
insb
pop
adcl
and
add
add
and
ret
push
mov
nop
leave
jmp
arpl
mov
add
add
add
sbb
add
repnz
nop
cld
jae
add
xor
test
xor
push
mov
nop
leave
jmp
add
push
xor
mov
in
nop
leave
jmp
add
xchg
add
add
push
clc
repnz
nop
cld
jae
movsl
add
stos
fcomps
mov
pusha
push
mov
xchg
ret
add
jo
add
inc
movsb
xchg
or
xor
add
clc
repnz
nop
cld
jae
add
push
ret
clc
repnz
nop
cld
jae
js
add
add
fdivr
repnz
nop
cld
jae
lret
in
js
mov
mov
mov
nop
leave
jmp
add
add
pop
xchg
jne
adc
mov
gs
pop
push
mov
xchg
ret
or
lcall
lods
and
clc
repnz
nop
cld
jae
add
fimull
in
add
out
mov
jmp
test
repnz
clc
repnz
nop
cld
jae
xchg
xchg
movsb
inc
add
lcall
cld
jae
lds
lds
mov
clc
repnz
nop
cld
jae
sub
movsl
cmpsb
add
push
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
cmpsb
sub
add
jge
out
insb
add
clc
repnz
nop
cld
jae
ljmp
add
inc
clc
repnz
nop
cld
jae
push
add
dec
mov
add
or
add
repnz
nop
cld
jae
add
add
jl
push
mov
xchg
ret
pop
mov
fiadds
ret
or
mov
add
repnz
nop
cld
jae
ret
add
or
leave
jmp
lds
add
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
fidivrl
inc
add
in
xor
push
add
add
inc
add
roll
add
repnz
nop
cld
jae
and
in
jle
in
hlt
call
repnz
nop
cld
jae
or
add
mov
leave
push
mov
nop
leave
jmp
add
add
jle
loop
fimuls
sub
cmp
ret
pop
movsb
xchg
add
add
daa
icebp
mov
nop
cld
jae
fiadds
jl
add
add
adc
nop
nop
cld
jae
stos
mov
add
mov
push
mov
jbe
cwtl
add
stos
les
aad
das
pop
adc
add
clc
repnz
nop
cld
jae
add
add
dec
lea
push
mov
xchg
ret
xor
xor
out
add
push
int
inc
and
clc
repnz
nop
cld
jae
add
add
push
xchg
mov
popa
add
repnz
nop
cld
jae
or
push
ljmp
clc
repnz
nop
cld
jae
mov
movsb
rolb
mov
les
repnz
nop
cld
jae
or
push
add
sub
mov
clc
repnz
nop
cld
jae
in
jge
add
ficoml
repnz
nop
cld
jae
pop
add
out
and
add
push
push
mov
nop
leave
jmp
in
lds
add
popf
and
push
mov
xchg
ret
xchg
out
add
push
and
shr
clc
repnz
nop
cld
jae
or
add
add
ja
mov
push
mov
xchg
ret
jl
xor
pop
mov
add
fisttpll
out
jne
xor
add
add
in
add
mov
out
add
add
add
add
out
mov
repnz
nop
cld
jae
add
or
push
pop
and
add
mov
add
repnz
nop
cld
jae
and
or
faddp
outsl
add
push
mov
nop
leave
jmp
in
movsb
xor
add
fcompl
mov
nop
leave
jmp
add
add
mov
cmp
ret
add
sub
add
incl
dec
xor
xchg
stos
out
jge
add
and
cmp
repnz
nop
cld
jae
add
sub
add
pusha
add
clc
repnz
nop
cld
jae
je
add
nop
nop
cld
jae
add
or
add
js
pop
push
mov
xchg
ret
in
add
je
add
cmp
mov
xchg
ret
pop
add
roll
in
add
lea
push
mov
nop
leave
jmp
loop
add
shr
clc
repnz
nop
cld
jae
add
arpl
jl
addb
add
mov
cs
insb
clc
repnz
nop
cld
jae
mov
add
negb
push
mov
xchg
ret
and
jl
add
and
add
cmp
clc
repnz
nop
cld
jae
add
add
push
add
push
add
clc
repnz
nop
cld
jae
push
add
xchg
lret
mov
clc
repnz
nop
cld
jae
cmpsb
add
add
push
mov
xchg
ret
add
add
cmpw
push
mov
nop
leave
jmp
in
add
int
xchg
pop
push
clc
repnz
nop
cld
jae
cmpsb
and
movsb
movsb
push
int
jp
subl
jae
cmpsb
push
add
add
nop
nop
cld
jae
add
push
add
add
add
clc
repnz
nop
cld
jae
mov
out
lcall
clc
repnz
nop
cld
jae
xor
push
add
add
xor
push
mov
xchg
ret
jne
arpl
add
inc
outsl
push
clc
repnz
nop
cld
jae
or
add
add
pop
sub
add
clc
repnz
nop
cld
jae
add
xchg
add
jne
sub
push
mov
xchg
ret
add
add
loop
push
add
repnz
nop
cld
jae
add
shll
add
test
push
mov
xchg
ret
in
add
loop
mov
clc
repnz
nop
cld
jae
fadds
add
pop
add
add
imul
add
add
push
fidivrl
jne
clc
repnz
nop
cld
jae
push
pop
push
add
in
mov
clc
repnz
nop
cld
jae
lds
push
mov
sar
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
add
mov
jo
mov
sub
clc
repnz
nop
cld
jae
ljmp
mov
rolb
xchg
ret
movsl
sub
push
mov
ret
sbb
cld
jae
add
pop
add
mov
push
clc
repnz
nop
cld
jae
add
out
dec
push
add
dec
push
mov
xchg
ret
add
add
jo
add
inc
add
push
add
push
ljmp
aas
push
mov
nop
leave
jmp
lds
xchg
pop
push
push
int
fs
xor
push
mov
nop
leave
jmp
in
lret
add
movsl
nop
add
clc
repnz
nop
cld
jae
lds
push
add
add
movsl
push
mov
nop
leave
jmp
cmpsb
dec
xchg
add
add
push
mov
nop
leave
jmp
jle
add
jge
or
jne
push
mov
xchg
ret
jge
add
mov
jmp
incl
xor
add
add
ljmp
jp
loop
push
mov
xchg
ret
int
int
out
add
xor
imul
inc
add
add
push
jle
stos
sub
clc
repnz
nop
cld
jae
or
inc
out
jo
je
clc
repnz
nop
cld
jae
add
push
popf
popa
push
mov
nop
leave
jmp
in
sub
in
add
add
mov
xchg
ret
add
roll
movsb
add
add
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
add
add
add
leave
xchg
cmp
pop
add
xchg
push
mov
xchg
ret
jle
movsl
push
xchg
add
and
clc
repnz
nop
cld
jae
add
add
xchg
loop
jne
clc
repnz
nop
cld
jae
dec
mov
aas
mov
push
mov
nop
leave
jmp
xchg
fsubr
mov
mov
clc
repnz
nop
cld
jae
add
out
jo
add
adc
add
push
js
mov
xchg
ret
add
xor
js
mov
push
mov
xchg
ret
add
lcall
mov
add
add
mov
push
jmp
xor
add
clc
repnz
nop
cld
jae
fadds
sbb
add
repnz
nop
cld
jae
jge
add
adc
mov
xor
push
mov
xchg
ret
pop
ret
or
add
push
mov
nop
leave
jmp
add
mov
dec
div
push
mov
nop
leave
jmp
jge
fiaddl
cmpsb
fsubrs
sar
nop
nop
cld
jae
add
sahf
add
cmpsb
or
pop
clc
repnz
nop
cld
jae
add
add
inc
inc
add
repnz
nop
cld
jae
xor
add
outsb
pop
clc
repnz
nop
cld
jae
add
in
fisttps
nop
nop
cld
jae
add
and
add
dec
mov
clc
repnz
nop
cld
jae
jo
add
arpl
sarl
repnz
nop
cld
jae
add
add
cmpsb
add
loop
push
mov
nop
leave
jmp
mov
mov
lret
adc
adc
jmp
add
inc
add
jle
push
int
add
inc
xor
mov
add
nop
nop
cld
jae
mov
add
add
add
mov
clc
repnz
nop
cld
jae
ficoml
add
add
inc
add
add
add
add
push
movsl
jae
pusha
clc
repnz
nop
cld
jae
lret
cmpsb
add
add
dec
mov
clc
repnz
nop
cld
jae
pop
mov
cmpsl
inc
dec
dec
push
mov
xchg
ret
jl
xchg
mov
jo
jmp
ficompl
and
je
out
add
xor
in
nop
leave
jmp
pop
add
dec
and
add
add
rolb
mov
push
mov
xchg
ret
in
add
jo
add
loop
add
clc
repnz
nop
cld
jae
add
loopne
mov
ret
clc
repnz
nop
cld
jae
xor
add
loop
movsl
cld
nop
clc
repnz
nop
cld
jae
fisubrl
ljmp
je
clc
repnz
nop
cld
jae
add
add
test
or
add
repnz
nop
cld
jae
add
inc
in
push
mov
xchg
ret
xchg
ficoms
movsl
add
mov
mov
xchg
ret
fiadds
jl
add
add
je
push
mov
nop
leave
jmp
in
or
add
repnz
nop
cld
jae
add
add
mov
xchg
ret
add
sub
add
mov
mov
mov
xchg
ret
ljmp
dec
mov
clc
repnz
nop
cld
jae
xor
add
xchg
out
rolb
mov
repnz
nop
cld
jae
add
inc
mov
cmp
push
mov
xchg
ret
loop,pn
cmpsb
mov
xorl
clc
repnz
nop
cld
jae
add
pop
push
mov
nop
leave
jmp
ljmp
push
add
jb
jae
clc
repnz
nop
cld
jae
add
jle
out
xor
push
mov
xchg
ret
movsl
out
add
in
jne
ret
add
add
lds
add
ljmp
add
stos
dec
push
push
mov
nop
leave
jmp
add
and
xchg
add
add
fimull
add
repnz
nop
cld
jae
mov
add
and
clc
repnz
nop
cld
jae
sahf
mov
fimull
nop
nop
cld
jae
add
add
jge
sub
in
nop
leave
jmp
lret
add
sub
pop
clc
repnz
nop
cld
jae
add
add
pop
add
mov
test
add
clc
repnz
nop
cld
jae
add
add
leave
clc
repnz
nop
cld
jae
xor
loop
xor
insl
movzwl
clc
repnz
nop
cld
jae
add
add
add
add
scas
push
clc
repnz
nop
cld
jae
and
xchg
jge
movsl
mov
or
in
nop
leave
jmp
je
add
xchg
add
mov
repnz
nop
cld
jae
xor
lret
dec
vpcomltb
clc
repnz
nop
cld
jae
add
loop
jmp
nop
cld
jae
dec
add
fdivs
jo
movsl
push
cmc
inc
pusha
add
int
pop
jae
repnz
nop
cld
jae
add
jne
push
mov
nop
leave
jmp
add
add
jge
or
add
lods
push
mov
xchg
ret
add
add
js
js
push
mov
nop
leave
jmp
add
add
or
cmp
nop
nop
cld
jae
add
jo
fidivs
popa
add
repnz
nop
cld
jae
add
ret
int
add
sub
clc
repnz
nop
cld
jae
push
jge
inc
add
push
clc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
out
or
sub
clc
repnz
nop
cld
jae
add
add
add
data16
lea
push
mov
nop
leave
jmp
pop
and
add
mov
mov
xchg
ret
lret
sahf
loop
out
xchg
add
lret
xchg
ret
add
add
pop
and
mov
clc
repnz
nop
cld
jae
xchg
add
and
nop
leave
jmp
in
ljmp
mov
add
pop
xchg
pop
add
or
cmp
movb
cmp
ret
add
mov
out
or
mov
xchg
ret
add
out
arpl
cmpsb
loop
mov
add
clc
repnz
nop
cld
jae
int
add
sahf
add
mov
repnz
nop
cld
jae
lcall
mov
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
dec
pop
lret
add
mov
pop
cmp
mov
xchg
ret
add
add
jae
repnz
nop
cld
jae
cmpsb
push
add
jo
mov
add
push
mov
xchg
ret
jne
add
in
popf
dec
clc
repnz
nop
cld
jae
add
fisubrs
or
inc
pop
push
mov
movl
outsb
push
iret
mov
add
cmp
jge
push
mov
nop
leave
jmp
add
lret
add
lods
push
mov
xchg
ret
add
out
cmpsb
or
add
add
push
mov
nop
leave
jmp
jo
add
add
js
mov
nop
nop
cld
jae
out
je
jo
push
pop
xchg
outsl
push
push
mov
xchg
ret
add
sub
push
out
add
push
add
repnz
nop
cld
jae
add
stos
xor
add
inc
or
repnz
nop
cld
jae
add
movsl
pop
add
fcompl
mov
xchg
ret
push
pop
add
add
add
popl
clc
repnz
nop
cld
jae
add
add
add
lock
push
mov
xchg
ret
add
add
or
adc
repnz
nop
cld
jae
xor
add
ficomps
inc
add
add
clc
repnz
nop
cld
jae
add
out
xor
push
sbb
nop
cld
jae
add
add
into
push
clc
repnz
nop
cld
jae
add
add
add
add
mov
sub
clc
repnz
nop
cld
jae
movsl
add
out
nop
add
add
push
mov
nop
leave
jmp
add
add
jo
mov
dec
push
clc
repnz
nop
cld
jae
add
add
and
int
pop
ja
clc
repnz
nop
cld
jae
add
out
je
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
pop
add
add
push
push
mov
xchg
ret
add
add
mov
cmpsb
push
out
mov
clc
repnz
nop
cld
jae
or
xor
clc
repnz
nop
cld
jae
add
xor
or
add
clc
repnz
nop
cld
jae
jne
add
in
push
jle
mov
clc
repnz
nop
cld
jae
mov
xor
sbb
add
push
mov
nop
leave
jmp
dec
out
divl
pusha
add
push
mov
nop
leave
jmp
out
dec
add
rolb
repnz
nop
cld
jae
add
loopne
mov
jg
clc
repnz
nop
cld
jae
add
add
jl
test
push
mov
nop
leave
jmp
xor
out
arpl
out
pop
jg
jo
push
mov
nop
leave
jmp
in
ret
pop
sahf
sahf
inc
jle
dec
push
clc
repnz
nop
cld
jae
out
pop
mov
add
mov
mov
clc
repnz
nop
cld
jae
roll
arpl
xchg
lret
xor
add
clc
repnz
nop
cld
jae
xor
add
add
jmp
add
pop
je
add
or
or
sub
jns
clc
repnz
nop
cld
jae
fidivs
ret
js
add
mov
call
in
nop
leave
jmp
and
add
or
adc
in
nop
leave
jmp
jge
in
ficoms
add
repnz
nop
cld
jae
inc
cs
add
add
repnz
nop
cld
jae
add
add
add
ljmp
nop
cld
jae
add
add
mov
out
mov
clc
repnz
nop
cld
jae
fiaddl
add
stos
add
mov
iret
or
inc
add
fisubl
add
mov
xchg
ret
mov
add
add
addr16
add
mov
push
clc
repnz
nop
cld
jae
add
add
push
out
pusha
clc
repnz
nop
cld
jae
out
add
add
mov
cmp
ret
add
or
or
push
xor
inc
cmp
repnz
nop
cld
jae
inc
add
add
dec
add
repnz
nop
cld
jae
add
movsl
add
add
pushl
push
mov
xchg
ret
fidivrl
and
mov
add
sbb
fcom
xchg
and
cs
and
push
inc
add
fmull
add
repnz
nop
cld
jae
jle
movsb
nop
add
mov
xchg
ret
ret
push
out
push
add
or
sub
clc
repnz
nop
cld
jae
pop
add
loop
add
add
clc
repnz
nop
cld
jae
jle
add
arpl
lahf
call
clc
repnz
nop
cld
jae
xor
add
or
shr
add
add
add
pop
jo
add
add
je
clc
repnz
nop
cld
jae
je
dec
insb
mov
clc
repnz
nop
cld
jae
xor
push
fidivrs
lea
clc
repnz
nop
cld
jae
xor
and
inc
mov
add
xchg
or
add
xlat
add
add
add
repnz
nop
cld
jae
add
dec
jo
arpl
in
add
clc
repnz
nop
cld
jae
add
add
add
popf
mov
clc
repnz
nop
cld
jae
add
add
jmp
sbb
cmp
ret
in
xor
add
in
mov
push
mov
nop
leave
jmp
add
add
sahf
and
add
add
mov
xchg
ret
add
xor
push
mov
xchg
ret
int
ret
push
mov
mov
push
mov
nop
leave
jmp
add
add
cmp
mov
xchg
ret
add
add
sahf
add
out
jno
jae
test
nop
nop
cld
jae
or
int
movsl
or
push
xchg
cli
mov
clc
repnz
nop
cld
jae
add
add
add
mov
push
clc
repnz
nop
cld
jae
push
add
add
nop
leave
jmp
add
add
add
add
clc
repnz
nop
cld
jae
pop
add
cmpsb
cmp
add
incl
push
mov
nop
leave
jmp
add
add
or
clc
repnz
nop
cld
jae
add
add
add
nop
cld
jae
xchg
add
mov
stos
add
dec
add
mov
nop
leave
jmp
pop
or
add
movsl
imul
leave
jmp
add
xchg
or
add
out
imul
nop
nop
cld
jae
or
mov
add
cmp
add
jae
pop
loope
adc
int3
add
fsts
mov
xchg
ret
add
add
add
jecxz
xor
clc
repnz
nop
cld
jae
add
add
xchg
repnz
nop
cld
jae
add
add
xor
mov
fistl
mov
inc
add
add
inc
fcoms
nop
nop
cld
jae
add
add
in
xchg
inc
push
dec
add
jmp
decl
add
add
pop
add
add
addb
mov
mov
nop
leave
jmp
ret
add
roll
add
push
clc
repnz
nop
cld
jae
or
add
js
inc
dec
mov
and
push
add
adc
pop
jl
add
out
add
or
mov
xchg
ret
jl
fadds
mov
jne
jmp
push
add
sahf
int
add
jl
inc
add
sub
repnz
nop
cld
jae
sub
in
dec
in
rol
push
mov
xchg
ret
xor
add
jae
mov
clc
repnz
nop
cld
jae
mov
add
mov
push
mov
xchg
ret
add
or
ret
add
jp
rclb
fiaddl
xchg
ret
xor
add
je
pop
pop
push
jmp
add
add
jge
pop
add
in
movsb
add
mov
pop
clc
repnz
nop
cld
jae
add
xor
adc
in
nop
leave
jmp
add
mov
push
mov
xchg
ret
rcll
add
sbb
xor
add
clc
repnz
nop
cld
jae
mov
dec
call
push
mov
nop
leave
jmp
add
fidivl
clc
repnz
nop
cld
jae
pop
in
movsb
add
mov
add
mov
add
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
add
cmc
xchg
push
addb
xchg
sub
repnz
nop
cld
jae
add
or
add
out
pushl
movsl
movsl
pop
fidivs
movsb
lds
add
push
clc
repnz
nop
cld
jae
fidivrl
jge
add
xchg
adc
mov
popa
add
repnz
nop
cld
jae
add
and
movsl
js
dec
add
repnz
nop
cld
jae
and
add
mov
repnz
nop
cld
jae
out
xchg
xor
xor
addb
jne,pn
push
mov
nop
leave
jmp
add
pop
cld
jne
push
mov
nop
leave
jmp
add
add
or
test
repnz
nop
cld
jae
dec
or
adc
mov
xor
add
mov
nop
leave
jmp
jle,pn
add
jge
loopne
mov
movzwl
clc
repnz
nop
cld
jae
ret
arpl
add
clc
repnz
nop
cld
jae
add
ret
pop
js
mov
mov
clc
repnz
nop
cld
jae
add
add
pushf
mov
push
mov
xchg
ret
pop
fadds
in
mov
push
mov
nop
leave
jmp
fiaddl
push
add
add
add
pop
add
push
mov
nop
leave
jmp
add
push
push
mov
xchg
ret
dec
add
pop
add
jo
mov
add
and
imul
nop
nop
cld
jae
add
add
fcos
jmp
pop
ljmp
mov
or
leave
push
push
mov
xchg
ret
dec
mov
ficoml
out
repnz
repnz
nop
cld
jae
add
out
add
fiaddl
fidivrs
nop
nop
cld
jae
out
add
xchg
stos
pop
push
mov
nop
leave
jmp
add
movsl
add
add
add
repnz
nop
cld
jae
in
add
xchg
add
push
jne
clc
repnz
nop
cld
jae
add
lret
mov
clc
repnz
nop
cld
jae
add
dec
fisubl
fidivl
ret
repnz
add
add
in
nop
leave
jmp
pop
sub
add
imul
clc
repnz
nop
cld
jae
je
jl
push
xor
sar
nop
nop
cld
jae
add
xchg
add
lcall
repnz
nop
cld
jae
add
push
or
roll
clc
repnz
nop
cld
jae
add
xchg
add
add
mov
add
in
nop
leave
jmp
out
add
clc
shl
clc
repnz
nop
cld
jae
add
dec
add
add
jne
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
in
add
add
test
clc
repnz
nop
cld
jae
add
or
add
xor
clc
repnz
nop
cld
jae
pop
jle
add
add
in
xor
clc
repnz
nop
cld
jae
add
adc
clc
repnz
nop
cld
jae
je
add
loopne
clc
repnz
nop
cld
jae
movsb
xchg
add
in
push
push
mov
xchg
ret
loop
lds
pop
pop
in
fdivp
movsb
clc
repnz
nop
cld
jae
mov
add
stos
je
clc
repnz
nop
cld
jae
and
scas
jne
clc
repnz
nop
cld
jae
add
pop
push
push
mov
xchg
ret
add
or
pop
pop
add
sbb
mov
xchg
ret
add
arpl
ljmp
mov
clc
repnz
nop
cld
jae
jle
arpl
out
add
push
mov
xchg
ret
mov
add
js
mov
popa
add
repnz
nop
cld
jae
add
add
sub
push
imul
pop
loope
fcoms
and
js
xchg
xchg
add
aad
call
in
nop
leave
jmp
pop
int
lds
cmc
aaa
iret
push
push
mov
xchg
ret
xor
xor
xor
je
leave
sub
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
js
jl
pop
xchg
xor
mov
push
mov
sahf
lcall
and
lahf
adc
jae
add
ret
clc
repnz
nop
cld
jae
out
push
add
add
or
and
inc
add
dec
add
bound
mov
push
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
mov
add
add
push
jmp
cld
jae
add
je
jo
lds
mov
push
mov
nop
leave
jmp
fadds
push
fiaddl
mov
push
mov
xchg
ret
add
or
add
in
nop
leave
jmp
and
add
je
inc
add
sub
repnz
nop
cld
jae
add
add
fimuls
scas
enter
nop
leave
jmp
push
xchg
je
pop
add
add
and
clc
repnz
nop
cld
jae
add
and
add
mov
xchg
ret
add
add
push
add
or
lret
clc
repnz
nop
cld
jae
add
add
lcall
test
inc
add
add
and
jb
mov
rclb
jmp
add
jge
add
jp
xorb
nop
nop
cld
jae
add
add
mov
call
in
nop
leave
jmp
loop
add
addb
addr16
aaa
sub
clc
repnz
nop
cld
jae
xchg
lret
push
sub
clc
repnz
nop
cld
jae
ret
add
dec
mov
clc
repnz
nop
cld
jae
mov
cmp
adc
sahf
dec
out
ljmp
add
jne
movsl
clc
jmp
add
add
mov
add
int
dec
sub
and
inc
add
roll
push
add
sbb
mov
xchg
ret
add
xor
inc
add
xchg
mov
xchg
xor
mov
add
scas
cmpw
push
mov
nop
leave
jmp
add
add
int
movzwl
clc
repnz
nop
cld
jae
jl
add
push
call
clc
repnz
nop
cld
jae
add
dec
cmp
repnz
nop
cld
jae
or
add
add
clc
repnz
nop
cld
jae
arpl
movsl
add
mov
rclb
inc
loopne
add
xor
push
dec
push
push
add
enter
repnz
nop
cld
jae
or
add
movsl
movsl
or
idivl
push
mov
nop
leave
jmp
mov
add
js
clc
repnz
nop
cld
jae
mov
push
mov
xchg
ret
fidivs
add
xor
add
mov
mov
nop
leave
jmp
add
in
lds
push
add
xchg
jns
shrb
repnz
nop
cld
jae
and
and
cmpsb
xor
nop
add
in
sub
add
add
sarb
add
mov
stc
mov
mov
push
sub
and
test
fwait
stos
adc
mov
out
mov
add
jg
add
adc
jmp
sub
add
xchg
lea
add
cmp
or
mov
int
sbb
add
or
pop
xor
movsb
insb
rorl
test
jns
add
fadds
std
ret
xlat
jl
add
add
mov
inc
pop
nop
add
icebp
adc
and
bound
mov
int3
fdivl
add
cmc
fsubrs
mov
mov
sbb
jge,pt
ss
addr16
mov
rcll
mov
sub
push
mov
popa
js
enter
pop
sub
ljmp
scas
ffree
shll
pushf
fnstenv
xchg
jmp
mov
out
adc
jns
cwtl
iret
addb
pop
jmp
push
mov
xchg
and
add
add
in
xchg
add
push
gs
dec
stos
mov
add
mov
in
adc
mov
dec
mov
mov
pushl
mov
lcall
in
ret
cmp
cs
xchg
add
adc
mov
and
mov
rcrl
add
mov
add
add
add
lock
fcomip
add
xor
lcall
add
add
or
add
add
cmp
mov
sbb
add
cmp
add
jne
mov
add
outsb
lahf
pop
in
fcompl
mov
mov
fistps
add
push
dec
test
rolb
mov
add
cmp
and
mov
mov
sbb
mov
cwtl
adc
outsb
push
cmp
cld
ss
push
test
push
aam
add
js
cwtl
xchg
out
stc
fdivrs
and
mov
add
mov
or
add
addr16
mov
mov
jg
aam
ss
adc
mov
jbe
add
mov
out
popf
cltd
mov
mov
mov
mov
leave
hlt
xchg
call
test
inc
cmpsl
push
xlat
mov
add
xor
mov
push
push
xchg
cs
add
xchg
movsl
mov
add
mov
mov
inc
sub
mov
mov
add
add
mov
sbb
push
shr
addb
pop
pop
fadd
add
push
jg
cmpsl
push
add
push
push
das
adc
mov
add
pusha
add
imul
mov
or
rolb
mov
xor
icebp
lahf
fldenv
add
cmp
mov
ret
mov
adc
mov
add
xor
mov
add
mov
pushf
test
inc
jns
loop
mov
ss
fdivrs
sub
jbe
add
xchg
mov
es
mov
jecxz
cltd
mov
ss
icebp
outsl
int
call
inc
add
fs
daa
std
pop
popa
addb
xchg
add
dec
push
push
or
cld
fcompl
cmove
pop
adc
mov
pop
loopne
mov
daa
divb
add
add
jecxz
push
sub
test
push
adc
push
sub
xchg
add
add
jmp
and
iret
inc
insl
aad
cmpsb
xor
mov
add
out
daa
icebp
dec
dec
outsl
sahf
inc
mov
add
ret
out
or
and
divl
fisubs
in
pop
and
inc
add
add
mov
mov
shl
lret
adc
mov
mov
inc
push
add
popa
sub
outsb
insl
mov
loope
outsl
dec
add
rorl
imul
call
insl
repnz
sbb
mov
testl
leave
dec
aam
jmp
std
dec
notb
dec
ficomps
stc
cmc
and
shll
add
xchg
xor
mov
or
xor
add
pop
fisttpl
sub
mov
loope
add
push
xor
mov
les
fnstenv
or
dec
call
repz
stc
and
cmc
mov
inc
cmpsb
adc
cwtl
js
mov
subl
add
sbb
clc
cltd
jl
jno
jo
mov
mov
or
leave
pushf
fcmovu
mov
mov
repnz
mov
mov
cmp
clc
movsb
add
add
jl
pop
push
gs
inc
loopne
mov
pop
jbe
fldenv
push
pop
int
or
mov
xchg
add
add
add
add
aas
fldcw
loopne
mov
mov
fcomip
add
dec
xchg
add
rolb
mov
push
mov
jnp
xchg
les
mov
mov
stos
mov
std
dec
mov
mov
icebp
stc
or
adc
mov
cltd
lods
xor
lret
out
cwtl
imul
pop
mov
cwtl
bswap
pop
fcompl
cmpsl
lods
enter
push
add
mov
add
sbb
mov
out
add
add
mov
jp
mov
lret
mov
mov
mov
aam
daa
cmp
jp
add
jecxz
pop
jecxz
popa
sbb
mov
pop
jae
mov
add
add
or
xor
andl
and
mov
xchg
mov
add
jmp
out
test
push
dec
cltd
push
stos
add
mov
mov
add
in
mov
mov
roll
add
or
lods
gs
outsb
test
mov
mov
push
sub
fstps
cmpsb
mov
pop
dec
cmpsb
or
fsubr
and
mov
xchg
sub
dec
mov
inc
sub
je
mov
mov
jne
add
jg
loopne
mov
loope
lahf
dec
push
add
fildll
mov
add
add
mov
mov
pop
int
hlt
cmp
mov
rolb
mov
jp
stos
dec
je
mov
aas
push
adc
js
add
fsts
pop
out
rcr
idivb
pop
dec
mov
cmp
lahf
pop
lds
jnp
lcall
inc
add
aad
daa
ja
xchg
add
mov
xchg
pop
std
jge
xor
add
test
ss
sbb
add
arpl
add
lea
mov
mov
fdivs
xchg
add
push
or
aas
lret
xlat
addr16
outsb
cmp
xchg
add
mov
pop
mov
mov
div
mov
xchg
out
pop
adc
sub
and
sbbl
sub
or
icebp
sub
fists
aam
add
cmp
or
push
jno
arpl
mov
jae
pop
and
xchg
and
icebp
adc
add
add
mov
mov
adc
inc
push
aam
ss
and
mov
outsb
rolb
mov
in
sar
clc
sub
popa
enter
fisubl
push
loope
inc
sahf
cmc
test
sbb
mov
add
bound
mov
jp
sarl
jne
push
adc
mov
mov
cmp
mov
xchg
pop
clc
mov
xchg
add
sahf
inc
iret
push
pop
leave
jb
mov
lret
test
sti
lock
mov
mov
mov
xchg
shll
mov
mov
stc
ds
ret
jmp
cmpsb
cmp
das
add
or
add
mov
pop
lret
int3
and
test
test
add
mov
mov
add
mov
add
add
xchg
sbb
dec
push
cltd
lret
xchg
jb
mov
add
pop
adc
js
inc
jo
mov
imul
aaa
push
fisubl
cwtl
inc
add
mov
sti
xchg
das
dec
pushf
cwtl
jae
pop
out
inc
or
cmp
addr16
out
mov
mov
push
xor
xor
mov
or
mov
repnz
es
popa
sti
and
mov
mov
xor
mov
sub
out
jne
sub
cld
subl
add
lods
js
in
ds
xor
mov
das
pusha
add
sbb
jno
rep
movsb
mov
leave
sub
icebp
dec
lea
out
jne
ljmp
add
mov
cmp
ss
stos
mov
cmp
mov
lds
fdecstp
push
out
add
add
mov
mov
or
ljmp
cmp
add
pop
enter
mov
cmpsb
sar
sbb
jle
mov
int
and
das
mov
mov
sbb
sub
ret
arpl
and
jne
adc
mov
mov
cmp
insl
push
add
jmp
jle
add
lcall
jns
xor
loopne
mov
add
push
xlat
lcall
mov
adc
fucomip
test
xor
mov
push
add
add
mov
cwtl
outsl
jo
mov
add
add
ja
addb
push
add
shl
hlt
imull
xor
add
sub
icebp
pop
and
pop
xchg
inc
mov
adc
mov
or
adc
mov
and
mov
sub
mov
cwtl
sub
std
stc
cmpsl
jp
das
cmpsl
inc
inc
add
cmp
add
das
imulb
cltd
enter
add
in
jns
sub
inc
add
jo
mov
push
daa
lcall
mov
jle
pop
ficomps
add
je
insl
aam
add
and
mov
rolb
mov
pushf
test
lcall
add
pop
cld
jl
rcrl
outsb
pop
xor
sub
add
std
xor
cmp
andl
outsl
fdivs
pop
cwtl
ja
mov
gs
adc
ja
add
add
push
leave
mov
add
test
loop
mov
add
lahf
jp
lods
mov
stos
imull
aad
cmp
mov
xchg
lock
cmp
pop
and
mov
fstpl
mov
cmpsl
sub
add
sub
insb
mov
inc
push
add
outsl
fwait
and
add
lahf
adc
add
mov
or
mov
loop
mov
adc
shl
add
mov
or
stc
dec
mov
jmp
loopne
mov
dec
gs
jne
repnz
imul
fbld
faddp
inc
icebp
into
push
jg
add
aaa
add
mov
inc
mov
lds
add
popa
in
sub
push
add
add
mov
in
out
aaa
cmpxchg
mov
cmpsb
jae
rolb
mov
push
add
insb
dec
unpcklps
add
mov
add
adcl
dec
lret
shll
mov
jmp
or
lods
mov
add
out
dec
mov
or
cmp
and
mov
addb
jno
lret
add
add
add
jg
push
inc
rolb
scas
add
xor
mov
fcomi
rolb
mov
add
fisttps
xlat
mov
mov
test
lods
gs
dec
jmp
mov
frstor
in
jne
add
dec
mov
mov
cmp
add
xchg
adc
add
inc
add
add
push
fisubl
mov
cmp
inc
add
iret
cmp
rolb
mov
jns
mov
or
mov
add
pop
repz
mov
jg
xchg
or
add
mov
addr16
ret
mov
add
jge
js
repz
sub
imul
mov
push
popa
insb
inc
mov
cwtl
addb
mov
mov
jecxz
pop
fwait
addb
cmp
inc
mov
aam
fisttpl
xchg
stos
rolb
mov
push
add
lret
add
mov
popa
cmp
lret
push
sahf
mov
mov
cmp
xor
in
out
ja
test
pop
loop
mov
cltd
out
mov
rol
nop
add
pop
xchg
bound
mov
loopne
mov
and
xchg
jl
aas
cwtl
pop
aaa
add
mov
add
mov
imul
out
lods
lock
jp
mov
pop
fsts
imul
and
lahf
xchg
jg
pop
cli
imul
ret
mov
push
outsb
mov
cmp
stos
xchg
decb
add
aaa
pop
pop
and
mov
dec
inc
inc
xchg
aas
test
iret
ffreep
add
and
pushf
xchg
orl
test
cmpsl
pop
mov
push
inc
mull
lds
cli
add
cmpsl
lds
push
sbb
and
mov
add
jae
addr16
xchg
xorl
mov
les
mov
add
jp
add
sbb
addb
pop
insl
pop
jl
out
loop
mov
pop
sti
stos
inc
cs
iret
mov
mov
add
into
xor
mov
pusha
add
lea
and
mov
mov
add
mov
sbb
je
push
add
mov
in
pop
lret
bound
mov
aas
lock
push
add
sub
mov
sbb
or
pop
adc
cmpsl
dec
xchg
sub
add
push
push
addb
mov
add
jge
sub
aam
rolb
mov
in
sahf
dec
shll
popf
xchg
scas
out
xchg
mov
neg
jns
sub
sbb
dec
fisttpl
in
dec
pop
aas
or
pop
adc
jmp
fwait
les
xlat
pop
js
das
push
push
sub
repz
add
repz
mov
xchg
add
add
bound
mov
dec
in
xchg
imull
add
repnz
aas
fistpl
jnp
hlt
adc
mov
notl
popf
fs
test
jbe
or
push
or
cmp
dec
cmp
rolb
mov
enter
aam
cmp
out
bound
mov
push
push
rcll
sub
scas
outsb
dec
mov
sbb
in
adc
mov
pop
mov
push
lret
jbe
addb
in
popf
add
insl
test
add
push
iret
pop
jb
mov
sub
mov
push
xchg
fsubrs
add
inc
add
mov
cmp
mov
mov
iret
mov
add
inc
sub
xor
mov
add
xor
stc
leave
pop
mov
add
das
in
addb
mov
jg
pop
cmp
fisttps
test
push
out
test
add
and
pop
cld
movsl
jb
mov
add
xor
iret
mov
mov
sub
insl
push
add
sub
into
aad
push
mov
xchg
stos
addr16
jns
pushf
leave
pop
es
push
outsb
gs
inc
mov
sar
hlt
push
xor
mov
movsl
jp
sub
mov
adc
mov
pop
dec
js
add
dec
in
je
add
nop
add
mov
test
mov
add
das
and
add
add
in
cmp
add
mov
lret
loope
add
mov
imul
pushf
jl
mov
add
add
inc
addb
xor
push
std
cmp
cmp
cmp
scas
repnz
add
arpl
sub
push
mov
jns
add
xorps
inc
nop
add
fildll
adc
mov
push
push
or
rolb
mov
add
adc
push
stc
xor
mov
lret
das
pop
dec
or
rolb
cmpsb
shll
or
add
imul
add
sub
mov
jae
pop
mov
scas
sub
push
es
mov
jne
scas
xor
mov
addb
mov
sbb
subl
sub
sub
adc
ljmp
aaa
pop
jmp
mov
dec
xor
mov
aad
out
xor
mov
mov
int
add
adc
sub
add
std
mov
xor
mov
push
add
shl
outsb
dec
mov
mov
xchg
inc
push
into
push
cwtl
sbb
add
rolb
mov
mov
loop
mov
insb
mov
jge
fstpt
outsl
cmp
jp
outsl
and
mov
dec
test
mov
sbb
das
hlt
pop
popf
insl
out
add
sbb
cmp
in
aam
pop
sarl
mov
je
jmp
cmpsl
pop
fdivr
or
add
sbb
mov
fs
fwait
outsl
push
fnstsw
addr16
pop
sub
hlt
inc
int3
fwait
aas
popf
out
repnz
jno
cmp
add
add
gs
add
jo
mov
pop
sahf
movsb
insl
in
add
test
fucomi
xor
mov
inc
jmp
push
out
add
mov
and
xchg
pop
aam
add
add
add
in
jo
mov
jae
add
add
sarl
packssdw
divb
mov
lcall
loopne
mov
lods
test
add
mov
sbb
mov
mov
ja
add
add
and
mov
add
mov
cmp
insl
xor
mov
rolb
mov
aas
popf
and
add
sub
pop
inc
and
pop
mov
popa
dec
or
fisubrs
call
mov
add
addr16
mov
inc
es
sbb
cs
add
mov
mov
stos
xlat
xor
add
lret
movsl
fsts
fadds
repnz
ret
icebp
cwtl
pop
push
ficoml
add
add
mov
insb
ret
push
add
add
mov
mov
xor
scas
fs
add
dec
pop
fcompl
negb
out
add
mov
xorl
xchg
push
mov
cmpsl
lahf
filds
add
mov
loopne
mov
push
aaa
push
lods
dec
xor
pusha
add
jle
adc
push
mov
add
or
mov
jb
mov
mov
mov
ja,pn
and
add
repz
addr16
adc
in
stos
xchg
mov
push
out
or
add
mov
pop
jae
xorl
dec
xchg
movsl
mov
mov
and
mov
repz
cmp
inc
cli
inc
lcall
mov
cmp
adc
and
ja
mov
mov
shrl
in
mov
cmpsl
push
adc
xchg
mov
or
jnp
pop
pop
or
rolb
mov
add
lret
imul
mov
mov
add
loopne
mov
inc
out
xor
mov
mov
addb
lcall
insb
mov
outsb
mov
sub
rolb
mov
add
cmp
mov
pop
movsb
pop
movb
mov
add
cmpsb
or
add
or
sti
loopne
mov
sbbl
push
ds
ret
push
add
add
push
lds
jae
fbstp
scas
clc
loop
mov
push
pushf
sbb
dec
lds
sbb
mov
ficoml
mov
out
pushw
mov
add
fdivrl
les
arpl
out
jmp
cmp
insl
int3
cmp
mov
cltd
lahf
xchg
lcall
test
jg
mov
mov
ja
add
add
mov
test
dec
in
in
adc
mov
inc
outsl
aaa
outsl
pop
stos
jno
xor
aas
jae
add
lret
daa
pandn
mov
or
fnsave
push
sbb
xchg
pop
mov
add
inc
clc
unpcklps
daa
and
lock
imul
mov
xchg
out
cmpsl
jo
mov
xchg
add
xor
add
add
notl
mov
inc
add
push
add
push
icebp
mov
pop
mov
and
je
or
pop
jns
loop
mov
adc
mov
sbb
mov
jp
or
add
cmpsb
testl
xchg
add
add
cld
test
add
pop
pusha
add
test
cmp
add
add
rolb
stos
mov
mov
adc
or
aad
int3
pop
lcall
pop
and
mov
leave
movsl
lds
add
push
nop
add
xchg
ljmp
xchg
jno
jbe
icebp
ret
xchg
pusha
add
int
pop
sub
in
xchg
push
add
mov
inc
les
or
fistpl
or
cmp
mov
adc
mov
divl
and
jb
mov
lret
push
imul
push
sbb
hlt
inc
or
mov
inc
pusha
add
sub
imul
xor
mov
aad
getsec
sbb
push
add
insl
sbb
jg
xchg
fs
jecxz
add
mov
ljmp
push
add
imul
lods
test
mov
xor
mov
add
pop
pop
push
adc
lods
mov
outsl
out
insb
mov
inc
mov
add
dec
sub
add
mov
jp
sub
push
inc
cli
cwtl
sub
addb
dec
aad
movsb
imull
add
add
sbb
push
jne
inc
into
fisttps
std
jo
mov
nop
add
mov
add
dec
repz
xor
mov
test
pop
mov
sub
mov
ficompl
add
jno
pop
data16
addb
scas
xor
movsb
xor
lods
lock
loope
pop
xchg
inc
lods
fistl
push
dec
pop
jne
subl
jle
arpl
iret
xchg
je
jecxz
sti
mov
cmpsb
fptan
add
add
mov
mov
add
mov
mov
mov
cmpsl
std
outsl
dec
lahf
jnp
loopne
mov
mov
mov
sbbl
aam
add
es
inc
ret
mov
out
imul
push
mov
iret
mov
mov
mov
fildl
nop
add
out
popa
ret
adc
sti
lds
lahf
lahf
push
add
test
cmpl
fdivrs
ret
stc
enter
aad
jg
mov
ret
mov
jecxz
fdiv
inc
add
add
cwtl
mov
mov
stos
pushl
adcl
mov
lea
dec
pop
divb
mov
sub
jns
insb
hlt
or
popf
adc
mov
add
mov
xlat
sub
rolb
push
out
mov
mov
sub
push
in
ret
cli
cmp
cmp
add
mov
xchg
cmp
add
mov
mov
pop
ret
mov
in
movsb
enter
pop
andl
add
scas
add
mov
nop
add
dec
jle
add
xor
je
mov
mov
mov
loopne
mov
cmp
add
ret
dec
leave
cmp
lea
divl
push
add
jmp
xlat
ficompl
or
ja
bound
mov
mov
fidivl
dec
rolb
mov
inc
fdivrs
mov
out
inc
xchg
in
pop
xchg
mov
xchg
and
pop
inc
add
faddl
insb
dec
aas
pop
xchg
cmpsb
mov
not
add
mov
mov
decl
cld
mov
push
add
pop
jno
add
jb
mov
popf
mov
bound
mov
adc
cmp
mov
xchg
and
loop
mov
pop
cwtl
out
jg
pop
mov
mov
or
fcmovb
je
sbb
loope
and
addr16
nop
add
lret
jns
lods
and
nop
add
stos
daa
dec
neg
mov
or
mov
into
mov
mov
lods
cmp
mov
fs
mov
fsubs
pop
addb
aam
mov
movsb
das
mov
adc
mov
mov
xor
mov
add
int3
mov
dec
cmpsb
rep
fisubl
mov
add
xor
mov
or
sti
addb
push
add
mov
cltd
movsl
pushl
add
jle
add
add
je
xchg
xchg
lret
ljmp
xchg
lds
add
xchg
pop
ret
pop
in
adc
mov
dec
jbe
push
xchg
xchg
push
inc
lea
imull
add
or
add
sub
es
jp
xor
les
add
sub
xor
cld
out
add
fdivs
mov
outsl
pop
xor
mov
or
mov
ret
in
loop
mov
bswap
pop
addb
cwtl
insb
test
mov
lahf
cmpsb
cmpsl
xor
add
xor
mov
sub
add
pop
sbb
add
xchg
outsb
sbb
mov
xchg
adc
mov
cmovo
mov
cmp
and
push
addb
add
add
mov
je
movsb
loopne
mov
stc
push
gs
test
dec
pop
test
jo
mov
add
push
jecxz
or
add
fcompl
jl
push
mov
scas
inc
add
add
mov
jbe
add
add
mov
mov
and
add
ds
add
out
sub
mov
js
mov
in
add
jno
sti
js
daa
js
aaa
int
sbb
out
scas
xchg
jnp
lea
add
sbb
adc
mov
mov
sbb
xchg
add
mov
orl
lock
mov
jno
sub
xchg
add
add
in
sub
test
inc
add
sbb
sti
test
fdiv
add
mov
fisubrs
fldcw
icebp
xchg
pop
xchg
pusha
add
mov
mov
outsb
sub
push
ljmp
mov
cmp
adc
mov
das
sub
aas
fdivrl
or
and
add
jae
add
and
sahf
imul
scas
test
add
inc
out
dec
and
sbb
call
and
mov
adc
addb
mov
push
and
mov
push
mov
data16
jg
add
mov
in
push
inc
jecxz
add
cmpsb
fnstenv
mov
add
in
add
add
lret
insl
shll
icebp
ret
ret
xchg
xchg
add
xchg
or
xchg
daa
jecxz
setns
mov
sbb
sbb
std
xor
mov
test
add
add
imul
and
mov
mov
sub
add
sub
push
mov
cmc
out
hlt
add
mov
imul
add
mov
add
mov
lods
xchg
stc
mov
add
into
jecxz
add
fnstenv
mov
sub
xor
mov
lods
cmp
add
aaa
les
cmc
ljmp
inc
lret
lahf
je
lock
add
mov
fnsave
ret
jmp
xchg
push
or
out
push
add
arpl
inc
fcompl
inc
stos
arpl
push
ret
adc
je
push
rolb
mov
imul
into
add
mov
mov
mov
mov
add
add
push
xchg
add
mov
mov
shll
icebp
hlt
movsl
test
jns
movsb
inc
cld
rcrl
mov
dec
pushf
mov
jecxz
adc
mov
icebp
ja
lcall
add
lds
mov
sub
sahf
scas
ficomps
aam
add
int3
sbb
rolb
mov
mov
das
add
mov
add
push
add
add
notl
sub
mov
add
inc
add
stos
push
jg
bound
mov
out
mov
cld
push
add
enter
sub
int3
in
testb
mov
add
les
push
stos
push
repz
push
rolb
cmpsl
neg
js
add
mov
aad
xor
jns
add
sbb
out
mov
lds
into
ret
outsl
jle
push
mov
push
jae
add
scas
pop
sub
aas
orl
push
fstps
pop
adc
mov
frstor
add
iret
sbb
add
inc
push
lods
cmp
or
outsb
movsl
stc
dec
mov
jg
add
mov
mov
movsb
and
mov
mov
loop
mov
mov
les
and
cltd
mov
mov
imul
lret
pushl
mov
mov
mov
mov
add
fdivrl
lods
add
mov
sti
cmp
sti
mov
clc
mulb
add
fidivrs
andl
add
sub
add
mov
add
lds
add
jb
mov
cwtl
and
push
xchg
push
sub
dec
popf
enter
push
mov
test
lret
xor
cmpsb
inc
fsub
add
push
test
inc
cmp
ficoml
add
push
sub
mov
mov
stos
scas
sub
jnp
add
mov
push
add
jmp
scas
pusha
add
stc
or
and
mov
nop
add
sbb
daa
clc
addb
les
inc
add
xor
fists
dec
push
add
jle
push
jecxz
aas
fimuls
mov
mov
lock
cmpsb
out
cli
fstps
dec
mov
mov
add
js
sub
pop
jnp
leave
push
inc
xchg
fisttpl
jb
mov
add
cltd
mov
mov
out
popa
into
mov
push
cwtl
jnp
jae
jle
pop
inc
add
mov
mov
repz
sbb
jae
add
out
add
mov
mov
or
int
sbb
push
fwait
mulb
cmp
dec
sbb
adcl
add
pop
push
xchg
mov
add
or
add
or
mov
push
add
ljmp
mov
inc
and
mov
mov
fisubrl
inc
pop
cmpsb
hlt
hlt
jecxz
adc
or
add
daa
jl
je
cld
imul
inc
add
in
mov
add
cmpsl
lret
call
add
mov
inc
adc
mov
cmc
pop
fstcw
or
lds
mov
jb
mov
xchg
rolb
into
adc
add
lock
jo
mov
in
lret
and
cltd
ljmp
jb
mov
xor
or
scas
cmpsb
std
repnz
call
add
add
mov
rolb
mov
inc
add
xorl
add
add
js
addb
dec
mov
add
sub
add
mov
add
loopne
mov
jnp
repz
imul
xchg
loop
mov
testb
sub
mov
out
pop
mov
add
jg
push
adc
add
sbb
inc
add
jge
cmp
mov
jnp
mov
add
iret
pop
jecxz
sub
add
mov
mov
outsl
mov
cmp
and
mov
mov
mov
push
out
jb
mov
add
mov
inc
fmulp
xchg
sbb
jne
pop
les
jp
fiadds
dec
ret
cmp
add
rcr
test
sbb
mul
dec
jae
add
jg
adc
mov
add
mov
mov
cmp
ficoml
mov
iret
addb
arpl
inc
xor
popf
ljmp
pop
mov
out
leave
xor
mov
cmp
imul
xor
out
xlat
inc
add
arpl
aas
xor
aas
and
mov
mov
mov
in
into
dec
mov
sub
popa
push
jb
mov
add
arpl
add
pop
iret
clc
dec
mov
pop
test
mov
jl
jp
cltd
sbb
push
push
xchg
jae
fldt
mov
xor
sub
add
or
cmp
mov
push
imull
pop
jo
mov
mov
cmp
jno
imul
xchg
mov
dec
lahf
js
in
loope
arpl
push
cmp
cltd
jle
add
mov
test
xchg
mov
mov
mov
add
ficomps
int3
and
mov
jbe
cs
lret
jge
push
fcoms
mov
add
jno
hlt
lcall
test
inc
add
call
jmp
insl
push
jnp
add
and
adc
mov
or
fcmovnu
jae
mov
mov
pushf
lds
mov
add
pop
or
rolb
adc
pop
fidivrl
rcrl
mov
add
lea
dec
data16
incl
lret
icebp
mov
mov
jnp
add
dec
in
xchg
sub
add
mov
addr16
add
mov
pop
jnp
sbb
cmpsb
outsb
test
jbe
add
insl
insb
pusha
add
mov
jo
mov
mov
popa
mov
popf
and
mov
ds
mov
ret
cld
cmp
outsb
cld
jp
cmp
pop
adc
sub
jle
add
sbb
xchg
sub
adc
cmp
sub
add
scas
loop
mov
pop
push
outsb
or
pop
cmpsb
mov
mov
add
arpl
pop
mov
xlat
pop
and
jb
mov
add
sbb
and
adc
mov
sahf
dec
push
xchg
add
cwtl
jne
call
pop
xor
mov
mov
mov
push
pop
data16
daa
or
jb
mov
add
repnz
int3
add
mov
mov
xchg
sahf
add
out
add
push
mulb
xchg
cmp
or
cltd
adc
mov
add
pop
outsb
outsl
fildll
cmp
outsl
sbb
add
sub
xchg
add
jbe
or
mov
mov
hlt
movsl
fstps
add
pop
stos
int3
pop
inc
mov
int3
js
test
bound
mov
scas
cmp
adc
lea
loopne
mov
jle
xor
mov
add
xor
shll
cs
push
cs
add
xor
mov
push
loopne
mov
mov
mov
add
dec
fwait
push
mov
add
repnz
clc
or
fbstp
rolb
mov
mov
push
add
mov
mov
and
mov
jecxz
cltd
nop
add
pop
push
add
mov
push
mov
mov
jne
add
push
rolb
cs
mov
rolb
mov
movsb
pop
and
mov
xchg
call
mov
testb
add
mov
mov
mov
mov
popl
icebp
insl
pop
pop
sub
test
push
inc
add
orl
mov
fidivrl
rolb
mov
add
and
mov
or
out
add
test
push
aaa
xor
mov
push
faddl
mov
lcall
add
stos
mov
mov
jns
rolb
dec
jo
mov
mov
mov
cmp
out
lea
push
cmc
fldcw
cli
mov
dec
lods
std
xchg
js
ds
in
and
push
es
mov
xor
add
fdivrp
push
or
jle
add
mov
add
pop
out
pop
push
sbb
lods
lea
xor
adc
jbe
xchg
mov
loopne
mov
dec
insl
inc
dec
mov
mov
mov
and
mov
add
xchg
dec
mov
test
pop
cmp
add
lods
loop
mov
rcr
cs
imul
int
add
cmp
add
shll
jne
inc
push
mov
scas
push
push
rolb
mov
mov
movsl
add
out
add
and
data16
add
xchg
ljmp
dec
stos
jmp
filds
or
int
sbb
add
mov
in
and
mov
adc
add
aam
mov
cmpsb
or
ret
cmp
add
add
sbb
mov
sbb
xchg
add
mov
sbb
push
pop
jle
cmpsb
aas
mov
push
mov
cmp
or
enter
loope
hlt
daa
gs
add
mov
push
mov
cmp
leave
mov
add
mov
es
out
insl
and
mov
add
mov
lods
push
cmp
mov
mov
add
mov
leave
aas
sti
repnz
cmp
out
mov
addb
cmp
gs
cmp
loope
sbb
stos
adc
rolb
mov
pusha
add
in
adc
add
mov
or
dec
jmp
movsl
mov
add
pushl
rolb
mov
enter
push
push
popf
mov
dec
rolb
scas
test
push
data16
add
ss
rolb
mov
jb
mov
xor
mov
add
xor
popf
jle
xor
stos
adc
mov
mov
push
ret
imul
rcll
fldl
mov
mov
cmp
jns
sub
mov
fnsave
add
mov
lods
mov
mov
and
jle
add
push
or
dec
push
add
or
out
inc
add
push
je
sbbl
xor
push
aas
sub
add
add
rcll
push
add
add
add
leave
loopne
mov
adc
mov
testl
inc
mov
arpl
movsl
pop
jge
pop
movl
mov
mov
in
mov
mov
mov
inc
rolb
pop
and
mov
jae
add
add
mov
dec
jne
and
cmpl
add
test
add
mov
dec
bound
mov
add
imul
add
dec
mov
mov
fldt
inc
cmpsl
repz
add
mov
dec
fistpll
xchg
outsb
jo
mov
or
sub
imul
addb
test
icebp
and
pushf
in
add
xchg
push
push
cwtl
ss
jnp
add
test
loopne
mov
arpl
nop
add
cli
mov
push
stos
testb
add
sub
inc
add
lcall
push
mov
pop
mov
add
and
fs
dec
jne
add
dec
pop
leave
pop
mov
sub
jb
mov
pop
add
mov
clc
dec
mov
not
mov
and
inc
out
and
mov
je
add
test
mov
mov
xchg
mov
paddw
push
in
xor
repnz
add
out
mov
lret
mov
mov
lods
sbb
add
loop
mov
push
cmpsb
mov
stos
mov
aad
pop
rcl
or
sar
jp
pop
repz
mov
addb
mov
addb
das
bound
mov
add
mov
fistps
mov
cmp
loop
mov
add
mov
add
add
mov
pop
loop
mov
imul
mov
movsl
dec
cltd
mov
mov
or
jecxz
mov
pop
cmpsl
and
mov
xchg
inc
in
and
add
ja
popw
or
add
push
add
add
adc
movsb
and
mov
mov
xchg
cli
xchg
add
mov
rolb
mov
aam
imul
shr
bound
mov
add
aaa
fstpl
addb
rolb
mov
mov
xor
mov
mov
jp
mov
xchg
jp
add
aam
jns
inc
add
jno
sbb
dec
and
mov
xchg
mov
mov
add
mov
sbb
dec
and
mov
fildl
add
test
adc
mov
pop
ja
add
adc
sbbl
stc
dec
push
setns
add
pop
das
inc
xchg
movsb
icebp
pop
cmc
pop
pop
add
mov
push
push
add
pop
cmp
js
mov
cmpsl
lcall
jmp
mov
pop
jp
push
test
adc
mov
cmp
and
arpl
lcall
add
mov
ds
adc
mov
jg
add
mov
mov
sbb
add
add
mov
insl
dec
jnp
add
mov
pop
cld
inc
add
lahf
inc
scas
cmp
movl
push
fst
rolb
mov
jecxz
add
pop
ja
add
fwait
je
add
add
jno
mov
leave
xor
mov
dec
mov
and
cvttps2pi
cmp
js
xor
mov
add
or
mov
inc
add
add
sti
bound
mov
out
addb
sbb
add
inc
pop
dec
cli
ret
cwtl
repz
add
push
roll
insb
pop
fdivrl
imul
lret
jp
mov
mov
add
add
pop
push
add
dec
or
add
mov
add
rorl
adc
add
push
jle
mov
mov
add
mov
add
add
hlt
cmpsl
test
fnstenv
orl
stc
imul
rolb
lret
inc
dec
in
xor
mov
faddl
push
enter
jl
add
pop
and
mov
ficoml
push
in
push
faddl
fs
nop
add
add
mov
add
scas
and
mov
sub
and
add
inc
add
push
xor
mov
test
and
or
mov
mov
mov
in
jnp
push
out
pop
or
xor
sub
jl
mov
and
mov
add
push
push
mov
add
cmp
or
test
mov
push
jmp
add
repz
push
das
lahf
pop
ret
sub
pushf
push
push
int3
addr16
inc
mov
aas
rcrl
dec
mov
mov
jns,pn
add
and
notb
mov
add
xchg
popf
mov
cmp
pop
xor
es
jmp
add
jmp
mov
in
add
mov
ja
jnp
xchg
arpl
lahf
les
add
jnp
jbe
or
repz
jge
in
stc
out
popa
pop
sub
int3
dec
testl
sbb
rolb
mov
xor
subl
sbb
mov
mov
dec
ret
mov
cmpsb
jge
push
and
push
sub
mov
pop
in
pop
into
cmp
cltd
fwait
and
jbe
add
shrl
mov
sbb
into
fadd
dec
adc
mov
fs
jmp
add
and
push
pop
jbe
fs
jp
mov
sbbl
jp
mov
and
insb
cwtl
cmpsl
dec
into
xchg
scas
cld
leave
std
mov
rolb
mov
das
jp
inc
add
pop
pop
roll
add
repz
stos
inc
mov
fdivrs
add
add
mov
cmpsl
pop
mov
push
add
ret
xor
sbb
push
jl
lea
in
add
cmc
icebp
ljmp
outsl
call
mov
and
add
mov
push
lock
mov
jnp
out
add
les
add
add
jnp
jmp
mov
adc
mov
push
add
repz
mov
inc
shll
sbb
outsl
fmul
mov
int
sbb
fiadds
lcall
stos
pop
cmp
adcl
xor
data16
int
add
popa
push
aas
int3
sub
fs
xor
push
jo
mov
and
mov
fcoml
mov
jbe
add
lds
dec
lcall
add
mov
test
add
nop
add
push
test
dec
aaa
xchg
jmp
add
lahf
sbb
outsl
push
mov
mov
mov
xchg
fmull
add
adc
arpl
mov
mov
xchg
mov
cmp
hlt
cmpsl
rolb
mov
dec
xor
aad
sbb
fldcw
sarl
mov
push
fs
push
pop
jp
xor
mov
mov
mov
nop
add
rolb
or
hlt
add
mov
hlt
adc
mov
jnp
fcoms
mov
test
daa
push
add
mov
push
cmp
mov
cmp
mov
sahf
ss
cmp
sbb
aas
in
popa
and
and
add
xor
imul
sub
dec
mov
xchg
leave
addr16
std
sub
pop
fsts
pop
jge
dec
sti
stc
sbb
imul
add
fstpl
stos
test
int
sbb
mov
daa
subl
or
ficomps
add
push
xchg
cmp
or
gs
fstps
nop
add
mov
mov
mov
mov
and
mov
mov
jae
add
loop
mov
xor
js
test
pop
bound
mov
mov
neg
int
popf
cld
sbb
mov
int3
fbstp
out
or
sub
add
add
add
mov
icebp
dec
mov
mov
cmp
mov
add
mov
es
and
cmp
add
add
add
push
add
jno
sbbl
inc
xor
mov
push
or
das
cmp
mov
and
add
add
push
push
mov
inc
add
sbb
es
push
jns
add
push
or
add
jne
adc
mov
add
mov
loop
mov
std
mov
and
mov
sub
and
dec
addr16
xor
cmpsl
scas
sub
adc
movsb
jns
mov
mov
adc
add
mov
fidivl
xlat
cmp
pop
mov
adc
mov
dec
add
inc
incl
mov
in
lds
push
adc
mov
mov
into
adc
xchg
lods
mov
cmp
andl
dec
cs
mov
out
sub
push
pop
pop
sub
mov
jne
dec
repz
sahf
mov
inc
shll
mov
add
add
mov
in
cltd
xchg
xor
mov
sahf
cwtl
and
mov
arpl
ss
add
sbb
mul
ret
clc
push
ss
into
ljmp
shl
incl
cmpsb
mov
add
lret
test
lret
jg
xchg
mov
jge
add
or
out
out
fs
xchg
scas
pop
mov
repnz
mov
mov
mov
es
sub
push
cmp
jb
mov
pop
or
out
add
add
outsb
sbb
test
je
int3
jo
mov
adc
lods
sti
aas
lods
xchg
repnz
mov
mov
mov
add
lods
mov
cmp
add
mov
icebp
adc
sbb
add
mov
enter
sub
repnz
addb
outsl
pop
jle
sbb
push
add
inc
ss
out
mov
test
xchg
cmp
cmpsl
or
clc
push
decl
pop
push
jns
das
adc
xchg
stos
jns
das
imul
mov
mov
mov
mov
inc
stos
xor
mov
cmpl
add
inc
xchg
jl
aas
jnp
movsl
out
jp
sahf
adc
add
sub
mov
jne
aad
nop
add
and
mov
inc
mov
mov
lock
add
inc
into
imul
insb
xchg
add
mov
rolb
mov
mov
cmp
ljmp
repz
mov
ja
loope
pop
and
mov
add
add
pop
fidivrs
add
jns
lahf
outsl
lods
and
mov
icebp
cltd
pop
and
jge
jo
mov
mov
rcll
imull
add
bound
mov
push
movl
mov
rolb
out
add
add
jns
cwtl
arpl
kmovw
mov
lods
cmp
adc
mov
in
sub
inc
ds
add
mov
push
mov
push
enter
mov
mov
test
cli
pop
daa
fcoml
add
lock
jo
mov
dec
lods
xchg
mov
mov
sbb
add
inc
inc
or
dec
add
mov
ss
push
mov
mov
mov
hlt
cmc
cmp
add
lock
mov
mov
das
sbb
xlat
fidivrl
or
das
mov
cmp
add
push
das
mov
cmp
add
pop
mov
add
leave
xor
push
stos
xchg
add
mov
sub
lea
test
repz
lahf
mov
stos
push
xlat
sti
inc
sub
mov
dec
add
mov
add
jae
filds
add
inc
add
mov
adc
mov
add
in
xchg
push
int3
jns
mov
sarl
stos
mov
pop
dec
scas
mov
and
mov
enter
pop
mov
push
cmp
mov
cmp
adc
xor
mov
sbb
add
pop
mov
mov
jl
jb
mov
pop
out
add
mov
das
or
pop
movnti
mov
add
outsl
sbb
add
test
inc
jno
add
mov
jle
xor
mov
cmc
inc
adc
mov
lods
lahf
inc
mov
sbb
push
out
and
mov
aam
inc
stc
je
loope
add
pop
ret
jb
mov
fildl
mov
add
cmp
mov
mov
add
mov
or
add
inc
sub
push
stc
icebp
pop
addr16
add
data16
mov
mov
cmc
push
mov
sti
stos
daa
negb
sub
insl
sarl
adc
sarl
inc
loopne
mov
lds
js
imul
out
xor
mov
add
std
pop
pop
lods
mov
scas
mov
add
mov
dec
fbstp
add
fsubrp
dec
mov
addb
ficomps
test
fisubrl
mov
imul
stos
mov
das
stc
cwtl
fucomp
icebp
out
sub
jne
movsl
and
jge
lret
mov
sbb
add
negb
stos
rcll
and
push
add
hlt
cmp
add
mov
dec
iret
adc
mov
popa
lds
out
xor
dec
push
arpl
mov
mov
bound
mov
xor
adc
mov
dec
push
add
xchg
add
mov
or
add
ret
and
xchg
jbe
add
aaa
and
ret
sti
cmp
add
mov
sub
xchg
adc
add
lcall
stc
mov
mov
lret
adc
mov
add
add
xor
mov
push
negl
push
pop
cmp
xchg
rolb
mov
cmp
loope
xor
add
pop
jns
addb
orl
mov
lahf
lret
jmp
push
jb
mov
test
lcall
mov
add
mov
sub
dec
and
mov
add
mov
xchg
fmull
inc
inc
adc
jae
xchg
add
adc
or
add
cmp
add
in
rolb
loope
adc
mov
add
mov
sub
int3
pop
pop
movsl
mov
int
jmp
cltd
rolb
mov
adc
jge
xor
mov
stos
fnstenv
pop
mov
jge
push
xchg
mov
repz
dec
dec
mov
add
clc
and
mov
loopne
mov
add
inc
pusha
add
push
pushf
pop
pop
inc
mov
mov
lds
push
dec
clc
test
pop
inc
inc
push
sbb
mov
mov
push
pop
xorl
mov
xchg
xchg
ja
pop
in
pop
cmp
jl
stc
sbb
inc
jno
push
sti
push
lock
sub
or
add
jle
dec
and
mov
rolb
mov
jle
add
xchg
xor
pusha
add
push
cli
xor
add
pusha
add
mov
add
mov
add
mov
insb
cmp
push
pop
push
xor
mov
movsb
notb
mov
pop
int3
xor
adc
mov
mov
dec
imull
inc
add
shrl
cld
cmp
pop
add
mov
mov
and
stos
popa
gs
add
aam
add
repz
lea
cmpsb
mov
mov
mov
mov
rolb
mov
popa
or
scas
adc
mov
jae
adc
pop
mov
mov
cli
sub
xchg
inc
adc
mov
xor
mov
pop
mov
clc
jg
imull
popa
fnstcw
mov
push
jno
leave
cmpsb
xchg
pop
dec
push
addr16
test
lcall
cld
adc
out
cmc
outsl
sbb
jbe
aad
outsl
cwtl
int3
imul
add
mov
mov
mov
xchg
sbb
mov
inc
out
cwtl
jp
xor
mov
mov
loop
mov
fdivp
add
jnp
enter
jp
movsb
bound
mov
pop
or
cmp
insb
jl
out
jb
mov
mov
out
mov
addb
das
aaa
pop
mov
imul
xor
xchg
cmc
fstl
test
add
or
jns
jmp
cmp
js
jg
add
mov
add
out
add
ja
mov
mov
cmp
rorl
mov
cld
lock
mov
xchg
test
fdivl
add
ljmp
rolb
ret
add
mov
outsb
and
inc
pop
sub
sub
inc
add
mov
mov
in
stos
push
stc
cmp
xchg
xor
push
mov
add
pusha
add
sbb
pop
adc
mov
cltd
lods
sbb
imul
dec
adc
fs
add
cmpsl
pop
pop
jnp
sub
rolb
out
push
jle
add
mov
mov
std
repnz
ret
popa
lock
lods
ret
jmp
push
fistl
sti
nop
add
pop
rolb
mov
sbb
add
out
push
lahf
pop
push
xlat
cli
into
pop
xor
mov
ret
inc
into
push
mov
stc
pop
loop
mov
repnz
mov
clc
jnp
or
and
mov
or
xor
mov
xchg
add
mov
dec
push
add
cmp
sub
mov
xchg
mov
mov
xchg
cltd
cmp
cmp
jle
inc
daa
rolb
repnz
sarl
int
rolb
mov
jle
popf
adc
sbb
mov
hlt
cli
ficompl
and
mov
int3
push
jnp
fimuls
add
mov
inc
dec
outsb
pop
mov
fs
xlat
sahf
jae
add
xchg
xchg
sbb
cwtl
in
mov
add
adc
repz
push
mov
push
add
inc
sub
mov
mov
add
pop
inc
int
out
inc
xchg
jno
rclw
mov
mov
stos
pop
add
bound
mov
lret
add
cmc
gs
dec
iret
mov
test
or
fsubrl
pop
arpl
imul
fisttps
inc
iret
pop
das
sbb
mov
add
das
mov
cld
xchg
add
repnz
shll
aam
aad
push
or
jge
imul
dec
dec
clc
into
rcll
add
fistps
dec
jl
insb
addb
mov
and
je
xor
mov
scas
push
cld
mov
addb
addb
sub
clc
xchg
add
movl
sub
mov
push
add
or
mov
adc
out
sbb
mov
mov
add
jl
push
sbb
add
xchg
jno
mov
jns
xlat
xor
in
push
dec
imul
mov
lret
mov
pop
push
mov
mov
out
push
sub
mov
pop
dec
in
mov
inc
add
mov
mov
fmuls
adc
mov
dec
repz
mov
sub
sub
xchg
test
mov
sub
fildl
ljmp
add
and
jge
push
or
and
and
mov
mov
mov
xchg
fdivs
add
in
sub
sub
popf
nop
add
ret
push
mov
fwait
and
in
push
repnz
loope
insl
add
and
mov
loopne
mov
cmp
mov
xchg
push
pop
faddp
inc
arpl
lds
xor
mov
sub
or
inc
inc
add
addb
imul
xchg
mov
inc
add
and
sub
push
addb
loop
mov
add
add
mov
inc
cmovns
push
sbb
scas
movsl
and
cmpsb
push
addb
cs
lds
sub
outsb
loop
mov
adc
mov
fidivs
xor
mov
add
mov
xchg
or
add
fmull
sub
lods
pop
and
mov
outsl
sar
lret
mov
loop
mov
in
add
mov
daa
test
xrelease
push
pop
or
jp
mov
icebp
mov
push
testl
daa
je
pusha
add
aad
pop
loope
xor
inc
out
mov
insl
fwait
add
cmp
mov
sub
push
inc
test
and
mov
stos
aad
insl
data16
sub
mov
mov
int3
out
cvttps2pi
aam
add
add
push
add
mov
dec
or
push
and
jl
ja
adc
adcl
add
cmp
adc
xchg
flds
data16
in
add
insl
out
mov
add
add
aam
mov
addb
aam
cmp
add
xlat
push
jnp
xor
pop
cmp
ret
je
cld
xchg
sbb
push
adc
mov
jno
jae
popa
mov
scas
into
test
pop
mov
mov
cmp
dec
hlt
hlt
movsl
jbe
int
addb
insl
mov
add
mov
or
loop
mov
dec
lds
enter
push
out
or
add
dec
mov
add
cmp
add
mov
lret
mov
test
rolb
mov
push
mov
add
add
lcall
lcall
sub
clc
lret
inc
sub
shrl
mov
cld
pop
push
add
rolb
or
pusha
add
mov
aas
xor
mov
mov
jge
add
jecxz
add
mov
mov
xorl
rolb
mov
mov
add
mov
leave
data16
aad
test
adc
loopne
mov
mov
jno
pop
mov
scas
addb
in
xor
mov
mov
es
mov
add
add
cs
add
mov
add
sti
fs
mov
adc
mov
bound
mov
arpl
in
test
mov
xor
test
xor
add
cmpsb
lds
push
pop
mov
mov
add
add
repz
pop
lcall
pop
adc
push
mov
sub
add
notb
push
imul
lock
add
xor
mov
add
fcmovnbe
fcmovb
pop
sbb
push
mov
fisttpl
adc
mov
hlt
mov
inc
add
sub
sar
int3
rolb
mov
aam
pop
sub
outsb
lods
mov
sub
aam
dec
les
jnp
jno
into
push
adc
mov
add
add
fisubrl
fwait
adc
das
lret
insl
test
adc
adc
add
add
add
icebp
fwait
ljmp
mov
add
inc
cld
in
das
inc
mov
pop
xchg
add
movsl
sub
pop
pop
bound
mov
stos
xchg
xor
mov
mov
loope
dec
stos
pop
lods
nop
add
icebp
xchg
xchg
push
dec
sti
or
push
lahf
into
push
shl
iret
inc
adc
add
mov
aas
and
test
or
mov
test
add
add
mov
popf
mov
add
enter
mov
cld
mov
rolb
mov
sahf
fldl
arpl
rolb
mov
add
inc
or
jle
mov
fdivs
xchg
rolb
mov
ja
add
shr
add
add
cmp
call
lret
add
add
pop
mov
ljmp
insl
daa
call
mov
add
and
into
mov
xchg
popa
jge
mov
dec
fimuls
and
mov
repnz
mov
push
sub
add
dec
add
fsubrl
in
or
mov
add
pop
mov
ret
insl
rolb
repz
mov
add
outsb
fisttpll
js
push
add
add
mov
adc
add
mov
mov
mov
hlt
sbb
test
pop
add
stc
icebp
aam
cld
push
mov
add
test
adc
mov
and
mov
inc
add
sbb
ldmxcsr
cmp
std
cltd
mov
sbb
into
mov
inc
sbb
addb
enter
fdivr
fwait
rolb
mov
cmp
loope
xor
mov
add
bound
mov
das
mov
and
cld
out
add
cmp
or
add
dec
mov
add
mov
jne
out
xchg
jg
add
mov
sarl
rolb
mov
nop
add
test
xchg
ss
pop
cltd
sub
add
in
mov
sub
loope
xor
sti
or
pcmpeqd
mov
ljmp
aam
mov
mov
stos
lret
mov
fs
add
add
add
pop
xchg
dec
xchg
xor
or
rcrl
inc
add
mov
sub
outsb
pop
mov
jae
lods
fcmovnb
add
sbb
rcll
roll
add
loope
add
leave
paddd
je
and
mov
mov
add
popa
dec
sbb
mov
rorl
es
dec
repnz
add
rolb
mov
mov
inc
add
mov
and
mov
mov
mov
pop
iret
out
mov
pusha
add
imul
add
scas
inc
dec
pop
enter
aad
test
testb
cmpsl
and
mov
mov
mov
push
mov
mov
out
fwait
stos
xor
dec
inc
pop
mov
insl
dec
rolb
pop
js
add
mov
pushf
fdivrs
icebp
sub
into
popf
push
mov
adc
mov
popf
test
add
js
pop
cmp
inc
cmp
mov
lret
iret
pop
lea
ficomps
mov
scas
lock
stc
mov
mov
cltd
and
mov
add
dec
push
add
add
inc
cmpsb
adc
mov
xor
add
mov
fmuls
xchg
pop
and
mov
sub
mov
ja
cs
mov
pop
rolb
mov
sbb
js
decb
inc
icebp
repnz
dec
mov
pop
sub
and
hlt
ficomps
mov
stos
fisttps
mov
std
mov
cmpsl
clc
icebp
inc
push
enter
in
das
imul
lahf
sti
popf
adc
and
mov
addl
mov
mov
out
adc
mov
push
mov
inc
loop
mov
jl
ja
add
jl
jmp
fadd
add
xor
imul
adc
fstp
mov
jnp
add
movsb
xlat
add
arpl
push
lock
call
push
gs
mov
sub
add
jg
enter
pop
jecxz
mov
hlt
lret
push
std
int
push
xchg
mov
fidivrs
sbb
or
mov
cmp
jnp
mov
xchg
mov
fisttpll
ficoml
pusha
add
xlat
cwtl
mov
mov
mov
nop
add
pop
pop
es
push
cmp
int3
repnz
fs
mov
outsl
cmpsl
cmp
leave
mov
cwtl
sbb
lret
add
lods
sbb
sub
mov
mov
jb
mov
add
sarl
mov
out
jmp
mov
mov
mov
into
xchg
add
js
loopne
mov
mov
sbb
test
in
push
lock
add
mov
cmpsb
cld
add
mov
iret
mov
and
jo
mov
add
mov
mov
ret
scas
jle
add
jno
pop
push
add
out
mov
lds
xor
pop
ficompl
lea
cwtl
sbb
repz
mov
pop
inc
add
push
ds
add
mov
lahf
xlat
cmpsb
in
into
jne
inc
shll
add
dec
mov
mov
mov
rolb
stos
dec
fcompl
jnp
sbb
les
popa
xlat
imulb
add
push
bound
mov
mov
jmp
mov
push
jl
aam
jns
in
and
mov
sti
fptan
add
cs
mov
cmp
mov
int
rcll
dec
pop
sti
loop
mov
cli
xchg
jnp
repnz
decl
outsb
scas
hlt
hlt
out
xchg
nop
add
and
mov
testb
jmp
add
mov
loope
mov
insb
aad
and
cmc
ficomps
jbe
push
add
sbb
xchg
or
fs
mov
xor
mov
add
mov
push
xchg
lcall
fidivs
mov
adc
mov
mov
jnp
mov
jge
jne
rolb
mov
jnp
negb
sbb
add
rolb
mov
mov
scas
xchg
mov
sub
outsb
sbb
mov
lods
xchg
rorl
lret
mov
inc
cld
adc
or
gs
gs
sub
mov
add
jne
inc
pushf
adc
test
mov
add
mov
mov
and
inc
cwtl
test
addb
arpl
mov
out
add
addb
addb
scas
sti
and
out
outsb
js
sbb
mov
rolb
mov
dec
jge
mov
add
push
imul
add
aam
dec
and
push
roll
dec
cmp
loopne
mov
dec
mov
cmp
add
jp
add
mov
mov
mov
xchg
add
sbb
add
xor
out
push
bound
mov
decb
ret
inc
xchg
and
mov
xchg
mov
mov
xchg
xchg
push
sbb
add
push
dec
xchg
sbb
jne
rcll
add
xor
add
jno
add
mov
add
add
xor
mov
rolb
mov
jecxz
movsb
in
adc
mov
add
mov
add
movsb
fildl
xchg
outsb
sbb
lret
mov
in
sbb
add
mov
pushf
in
mov
cmp
add
test
jge
je
dec
sbb
aam
push
xor
mov
or
add
pop
cltd
out
xchg
cltd
lahf
mov
add
repz
jnp
mov
fnsave
add
mov
jg
add
mov
addb
mov
mov
adc
sti
in
imul
outsl
scas
outsl
dec
inc
jle
push
add
clc
vdivpd
sbb
repnz
cltd
inc
jg
lea
add
xchg
rolb
mov
mov
aam
add
pop
jae
xchg
add
movsl
sahf
push
add
xorl
jae
push
call
add
movsb
fistl
push
in
jge
add
mov
cmp
mov
push
out
xchg
sbb
cmp
mov
mov
movsb
mov
rolb
out
pop
jge
repz
add
mov
pusha
add
sub
or
loopne
mov
cmp
jb
mov
mov
dec
je
ljmp
mov
add
lods
bswap
ja
add
mov
dec
jp
ljmp
mov
and
mov
lcall
jmp
xor
mov
sbbl
push
mov
adc
xlat
sbb
inc
add
insl
into
lds
inc
lahf
movsl
fnsave
and
loopne
mov
into
lock
in
inc
add
popa
pop
jge
jmp
js
pop
test
or
cwtl
dec
out
add
add
cmp
fisubl
mov
mov
mov
xchg
add
movsb
call
lods
push
iret
push
add
add
fxch
addb
jbe
incb
into
cwtl
daa
popl
inc
add
mov
das
dec
inc
add
and
mov
setns
jnp
cmp
loopne
mov
add
test
test
dec
fidivrs
imul
lcall
push
cmpsl
inc
add
add
add
push
add
mov
mov
and
mov
gs
es
popa
mov
fwait
add
fisttpl
std
push
add
push
std
sbb
push
xchg
hlt
movsl
shll
add
inc
hlt
and
add
adc
mov
add
add
js
add
mov
pop
cmp
out
lock
mov
push
dec
cmp
pusha
add
mov
fsts
addb
mov
mov
mov
add
mov
add
sub
add
popf
push
add
mov
outsl
push
pop
sub
pop
pop
mov
cmp
inc
add
mov
data16
cli
cmp
shrl
pushf
repz
mov
loop
mov
sub
fldcw
mov
nop
add
adc
add
sbb
mov
push
and
mov
fs
mov
jo
mov
mov
dec
fcomip
add
add
mov
mov
dec
jo
mov
jns
mov
mov
add
cmpsl
mov
add
jmp
dec
mov
ret
sub
ja
sub
ds
sbb
add
add
je,pt
fldcw
out
pop
push
add
cli
push
sub
loope
jge
fildll
add
add
insb
cwtl
xchg
add
aas
cmpsl
rolb
mov
inc
pop
frstor
xorl
dec
lcall
pop
cmp
leave
std
xor
or
cmc
sub
loopne
mov
mulb
mov
idivl
inc
add
outsb
mov
mov
stos
push
push
je
mov
push
mov
rolb
mov
arpl
add
mov
addb
int
add
incb
add
iret
mov
xlat
fildll
add
pushf
mov
fidivs
add
mov
xchg
add
pop
jge
sbb
xchg
std
mov
add
das
dec
dec
cmp
add
rcrl
hlt
jae
popf
add
adc
mov
mov
jae
mov
loope
xor
mov
fists
adc
hlt
addb
xor
aas
add
fdivrp
ss
ret
sbb
mov
insl
pop
pop
flds
cmp
rolb
mov
fs
mov
add
xchg
cmpsb
mov
clc
decl
in
cmpsb
jg
add
rolb
mov
pop
inc
add
and
icebp
xchg
xor
mov
jns
xorl
or
add
js
sbb
lahf
scas
xlat
movsl
inc
insb
mov
nop
add
mov
dec
pop
xor
lods
sbb
sbb
cmp
mov
sbb
mul
mov
clc
xor
mov
sub
ljmp
repnz
add
xor
outsb
mov
add
pop
jns
add
mov
jb
mov
add
xchg
xor
add
mov
inc
idivl
out
outsl
xor
mov
sub
sti
lcall
cmp
shll
in
push
cmp
fs
gs
add
fsubrl
subl
inc
loopne
mov
add
jo
mov
pop
jmp
add
xlat
dec
sbb
mov
pop
jle
rcll
pushf
cmpsb
pop
jmp
mov
mov
testl
rcrl
ds
mov
bound
mov
fwait
repz
ret
sub
rolb
test
sbb
add
mov
outsl
ss
xlat
aaa
test
test
sbb
loop
mov
mov
inc
sbb
jno
or
add
out
in
dec
jne
xor
imul
clc
ds
std
and
mov
mov
test
pusha
add
stos
jb
mov
arpl
or
mov
add
mov
adc
add
add
or
std
adc
mov
or
rolb
mov
mov
rolb
mov
add
dec
pop
inc
lret
mov
mov
sbb
cld
push
out
push
insb
imul
xchg
mov
xchg
sbb
out
js
mov
sti
cmpsb
stc
mov
fs
and
cmp
lods
sbb
add
inc
test
cmpsb
pop
arpl
dec
inc
or
add
cmpsl
test
popa
jle
cmpsb
in
add
js
insb
push
rorl
xchg
mov
mov
sbb
add
dec
lds
jmp
repnz
push
sub
jge
add
aaa
lods
lds
in
ret
mov
into
pop
xchg
imul
dec
xor
mov
xchg
aas
mov
xchg
sbb
das
lcall
adc
mov
jb
mov
fnstenv
mov
dec
std
out
xchg
stos
cmp
mov
scas
cmp
adc
jnp
mov
and
mov
dec
lret
mov
mov
test
push
mov
cmpsl
fwait
gs
push
lcall
add
jno
inc
jnp
mov
rcl
add
out
lahf
and
xchg
add
inc
aaa
in
push
ja
add
push
add
nop
add
mov
add
adc
mov
add
mov
rolb
mov
jecxz
mov
loop
mov
sub
pop
add
mov
subl
sub
adc
mov
stos
and
mov
and
mov
test
movsl
jl
xchg
stos
movsl
and
adc
mov
sar
lds
adc
lahf
cmp
mov
jge
add
add
push
add
js
inc
mov
mov
cmc
cmpsl
mov
mov
nop
add
add
add
add
mov
xchg
add
add
cs
stos
add
sti
fwait
and
mov
cmp
dec
insl
addr16
movsb
push
mov
add
and
test
add
inc
push
add
mov
mov
sti
loop
mov
sub
mov
pusha
add
cld
lcall
mov
andl
add
rolb
mov
mov
pushf
scas
imul
jge
mov
inc
push
js
loop
mov
or
fsubl
sub
pop
sub
cmpsl
ds
jo
mov
repnz
push
push
fs
inc
mov
enter
jns
sbb
jb
mov
shl
ret
push
add
dec
push
add
cld
or
mov
das
movsb
cmp
int
inc
fwait
addr16
push
fldt
jns
add
mov
xchg
ss
xor
test
aaa
sbb
pop
scas
push
das
sub
mov
push
jp
ret
adc
mov
add
mov
or
test
scas
and
mov
enter
lahf
mov
addr16
loope
add
inc
add
je
mov
or
ret
test
fwait
and
add
test
mov
xor
rolb
jns
int
rolb
mov
pop
or
xlat
jge
test
dec
sbb
add
jg
add
sub
cmp
mov
xchg
testl
movsl
add
rolb
mov
fimull
add
imul
out
bound
mov
daa
add
or
add
mov
out
add
mov
in
fucomi
pop
mov
fxch
or
add
inc
mov
shl
je
xchg
mov
fs
or
jno
test
add
inc
add
jge
das
xchg
scas
adc
mov
sahf
cld
popa
cli
fsubs
dec
jbe
mov
mov
add
jg
mov
mov
pop
stos
pop
stos
dec
outsl
sbb
mov
pushf
dec
rolb
mov
push
aad
xchg
add
pop
push
jp
cmp
repnz
cmc
push
add
mov
add
mov
int
mov
add
mov
add
mov
lock
insl
dec
sbb
push
add
push
cwtl
pop
scas
xor
add
addb
daa
mov
or
mov
dec
shll
test
dec
lret
push
add
fs
mov
xchg
sbb
pop
mov
stos
out
jae
cmc
jge
out
ss
test
add
xor
mov
insb
jl
dec
ret
sub
inc
add
cwtl
add
add
cvtpi2ps
add
popf
jg
int3
sub
lods
lahf
xchg
and
mov
stos
ja
mov
mov
mov
test
dec
insb
pop
add
push
add
fwait
rol
xlat
lcall
inc
dec
daa
xor
mov
inc
iret
das
push
leave
pop
push
xchg
movsl
pop
xchg
test
pop
fadds
test
add
jle
push
add
add
mov
add
mov
addb
jne
add
daa
xchg
mov
fcmovb
mov
jmp
add
add
neg
in
pop
adc
lcall
dec
imul
add
sahf
and
add
cmp
mov
cmpsb
mov
inc
pop
mov
mov
lock
mov
cmpsl
out
das
mov
jle
popa
and
mov
mov
jp
add
sbb
xchg
and
add
push
add
mov
sbb
add
imul
mov
jmp
jno
addl
dec
and
mov
xchg
add
jmp
rolb
arpl
mov
adc
test
mov
jecxz
hlt
push
jge
imul
push
add
push
fnstsw
out
sub
add
dec
rolb
mov
xchg
add
mov
mov
xchg
popf
mov
add
and
mov
cmp
outsl
xchg
pop
cmp
pop
mov
push
ret
nop
add
mov
mov
or
add
pusha
add
mov
add
add
sti
and
mov
jb
mov
mov
xchg
pop
mov
cs
sub
sub
ljmp
sub
mov
jp
stos
jo
mov
in
and
loop
mov
add
xchg
lds
mov
fxch
adc
push
scas
and
mov
std
pop
pop
mov
add
mov
je
add
mov
addb
cmp
inc
jb
mov
imul
or
pcmpgtd
add
add
inc
enter
lret
cmp
mov
mov
mov
clc
mov
faddl
adc
mov
loopne
mov
bound
mov
add
aad
push
mov
dec
mov
mov
mov
test
mov
aaa
or
add
mov
mov
or
scas
stos
sbb
scas
mov
in
scas
xchg
dec
fimuls
pop
insl
outsb
repnz
js
ja
push
add
dec
scas
lods
into
add
mov
mov
mov
rolb
mov
fidivs
subl
mov
cs
int3
stos
add
adc
mov
mov
outsl
aas
std
rcrl
mov
addb
stos
or
and
enter
adc
mov
add
xchg
add
add
daa
or
xchg
add
mov
pop
jno
push
mov
jecxz
fisttpl
les
adc
xor
mov
adc
mov
int
add
popf
iret
push
and
stc
insl
sub
jecxz
imul
mov
and
mov
vpsllw
addb
pop
ja
ljmp
cmp
and
mov
add
add
mov
mov
mov
ja
sub
sbb
cmp
clc
lcall
pop
fs
inc
pop
sub
fsub
clc
or
ja
xor
mov
les
stos
movsb
test
subl
mov
mov
mov
in
add
add
or
cltd
addb
push
add
int
fisttpll
sbb
jne
add
dec
sbb
sbb
aam
imul
mov
je
jns
push
cli
mov
idivb
jae
inc
add
pop
pop
mov
add
fsubp
push
add
adc
mov
shr
outsb
or
sti
or
ss
les
add
lahf
mov
lock
jns
add
add
nop
add
sbb
add
mov
mov
ffreep
add
scas
mov
popa
btr
loope
lea
addb
xor
mov
pop
data16
gs
in
mov
pushaw
add
mov
xor
add
sbb
add
inc
push
cmpsb
test
or
fidivrs
mov
mov
xor
mov
stos
cmpl
add
add
jb
mov
and
repnz
push
mov
in
pop
sub
loope
add
imul
sbb
inc
push
pop
jbe
rolb
mov
insl
push
add
addb
in
xor
add
movsb
bound
mov
leave
add
bound
mov
mov
lret
inc
inc
add
jmp
lcall
add
enter
xchg
add
hlt
subl
add
add
push
shufps
negl
add
xchg
pop
mov
add
sti
sahf
les
jns
xor
add
jle
dec
outsl
inc
push
dec
push
nop
add
mov
or
xchg
cld
divl
test
add
fistpll
sub
add
jg
mov
mov
push
push
std
mov
pop
loop
mov
pop
pop
adc
add
add
add
xchg
cs
je
lret
jmp
xor
xor
mov
xchg
ljmp
jle
mov
lods
and
lcall
hlt
lret
sub
add
dec
hlt
dec
pusha
add
jge
jle
xchg
lcall
mov
mov
push
dec
movsb
cld
sbb
jbe
incl
mov
mov
add
mov
xor
nop
add
push
push
add
insb
jnp
clc
stc
lcall
push
rolb
mov
mov
mov
jecxz
mov
mov
jmp
add
lock
mov
mov
icebp
pop
sub
es
push
daa
mov
mov
fistps
add
sub
push
hlt
ret
push
out
imul
ss
out
xchg
arpl
mov
es
jbe
outsl
or
int3
icebp
xor
inc
add
cltd
hlt
jg
add
or
or
add
dec
mov
jbe
jp
out
inc
sbb
in
daa
mov
in
cmc
shll
jl
inc
cmp
xchg
sbb
add
xchg
xchg
jg
pushf
cmp
addb
rolb
mov
or
into
nop
add
push
icebp
pop
loope
add
and
mov
add
imul
add
idivl
adc
add
mov
jg
xor
mov
inc
imul
in
popf
scas
xor
pusha
add
les
enter
mov
cmp
mov
dec
pop
shl
popf
rolb
mov
add
cli
ds
cli
loop
mov
out
xor
jae
in
push
insl
ffree
push
scas
mov
add
jns
je
lret
cld
mov
and
sbb
xchg
mov
add
test
in
xor
mov
pop
ss
movsl
mov
mov
mov
call
mov
pop
add
mov
jmp
out
add
jb
mov
add
jle
fdivl
mov
push
xor
mov
add
mov
sub
inc
add
cmp
mov
gs
cltd
mov
mov
mulb
xchg
adc
mov
dec
aas
adc
sbb
add
addb
out
std
xor
cmp
sti
test
pushf
mov
ja
pusha
add
inc
and
addr16
cld
push
inc
add
lret
inc
and
xor
ljmp
arpl
add
mov
hlt
mov
mov
fwait
std
sub
or
and
sub
inc
add
add
test
addb
pop
in
cmp
mull
add
add
rolb
mov
fdivrs
popa
jno
cmpsb
push
iret
pop
test
cmpsb
and
mov
lcall
mov
test
aad
mov
outsl
mov
or
mov
cli
mov
add
mov
or
add
jge
add
mov
lea
push
cld
add
mov
rolb
mov
rolb
sti
call
xor
bt
cmc
aaa
cmp
inc
add
fists
call
add
or
add
mov
push
movsb
push
divl
add
xor
jg
add
into
cs
push
adc
mov
pop
push
push
cmc
mov
add
add
lret
push
inc
cmp
add
add
cmpsl
rolb
mov
push
fnop
add
mov
scas
sti
lcall
popf
flds
push
add
lea
push
pop
in
rolb
and
mov
xchg
push
add
addl
add
push
jnp
int
add
and
dec
in
mov
add
mov
add
xor
test
add
mov
lock
jnp
pop
jbe
orl
mov
xchg
sbb
mov
je
add
add
mov
fsubrs
addb
pop
rcll
inc
cwtl
stos
rolb
mov
mov
popa
xlat
sub
inc
add
pop
insl
jno
jecxz
push
out
into
cmp
dec
lods
cs
add
mov
in
push
mov
mov
xchg
or
icebp
and
adc
mov
push
and
mov
cld
mov
sbb
mov
decl
popa
jns
add
lds
mov
mov
add
and
mov
mov
mov
int
sahf
shrl
push
sub
mov
mov
add
mov
lea
cmc
jnp
ficoms
mov
mov
push
test
inc
mov
add
cmc
mov
vmulss
push
cltd
xor
mov
mov
loopnew
mov
add
mov
inc
shll
mov
jne
add
xchg
fnstsw
add
mov
mov
repnz
add
cmp
add
adc
mov
mov
xor
lods
xchg
inc
popf
movsl
mov
shll
mov
cmp
push
add
jg
inc
add
stos
pushf
or
mov
xor
add
push
mov
add
addb
loope
mov
add
int3
lods
rolb
mov
mov
rolb
mov
loopne
mov
sub
cli
test
outsl
push
inc
add
enter
add
xchg
dec
data16
pop
loopne
mov
dec
xor
mov
mov
push
cmp
mov
xlat
sbb
sub
cmp
mov
push
bound
mov
int
push
add
into
inc
ror
cmpsb
xlat
pop
mov
push
inc
sub
push
dec
rol
or
cli
clc
xlat
sub
pusha
add
push
jge
lcall
std
pushf
jb
mov
and
out
stc
pop
or
push
popa
rolb
push
sbb
arpl
out
pop
xor
mov
jnp
js
cmp
and
test
mov
rorl
addl
add
add
mov
add
add
mov
mov
dec
sub
ljmp
add
cmp
into
mov
xchg
inc
jmp
nop
add
add
add
in
cld
push
and
mov
lods
and
mov
mov
adc
mov
pop
mov
add
mov
mov
addb
pop
push
lods
lock
xor
sub
fidivrs
add
add
xor
mov
out
shr
jno
and
pusha
add
pop
and
insb
sbb
mov
test
sub
cli
lods
push
bound
mov
stc
or
flds
roll
add
add
scas
scas
addb
shl
cmp
icebp
lods
jmp
cmc
mov
mov
xchg
mov
lret
sbb
lds
inc
push
jecxz
add
cli
clc
push
mov
mov
fisttpll
dec
cmp
sbb
push
mov
jb
mov
sub
sbb
add
push
mov
imul
jmp
sbb
fwait
inc
add
mov
add
inc
and
mov
pop
lock
mov
cmp
aas
loopne
mov
add
gs
mov
pushf
mov
fchs
add
test
sub
and
mov
sub
add
mov
or
outsl
inc
push
add
cmp
mov
pusha
add
and
xchg
mov
pop
pop
lea
mov
in
xor
mov
ret
and
mov
xchg
jo
mov
jmp
xchg
sbb
mov
iret
fmull
add
repz
xor
mov
mov
jo
mov
xor
jnp
mov
sbb
icebp
adc
mov
repz
cld
icebp
ret
ljmp
mov
mov
ljmp
insb
adcl
mov
ds
add
sahf
inc
xchg
loopne
mov
pop
scas
aaa
push
xor
mov
pop
push
add
dec
xchg
jae
add
add
pop
mov
mov
add
mov
add
mov
into
mov
mov
sub
xchg
dec
sub
outsb
nopl
loop
mov
js
loopne
mov
pushf
mov
bswap
xor
add
rcrl
push
pop
es
dec
jbe
ljmp
add
insl
daa
rolb
stos
jne
add
test
and
mov
add
add
add
jae
add
add
adc
inc
add
lret
dec
xchg
fld
cmpsl
mov
data16
push
add
cmp
mov
enter
hlt
cmp
ss
lock
mov
fwait
mov
mov
mov
add
mov
add
out
add
add
lods
pop
jecxz
dec
mov
xchg
cmp
sahf
ret
pushl
fprem1
adc
xchg
add
jno
jae
dec
cli
pop
cltd
push
add
cmp
inc
add
loope
leave
fcmovnb
rolb
mov
mov
pop
and
xor
mov
and
pusha
add
mov
mov
out
jne
adc
repnz
add
call
aas
rolb
mov
mov
psubsb
mov
dec
dec
aas
xor
mov
imul
mov
sbb
or
mov
loopne
mov
mov
xchg
lods
cmp
or
adc
shll
and
mov
add
mov
mov
sub
cld
mov
aaa
test
orl
fsub
add
xor
and
mov
mov
jmp
sub
inc
add
add
xor
das
lock
mov
mov
mov
add
push
mov
add
sub
rdpmc
push
cmp
mov
cs
xchg
sub
jne
add
popf
data16
out
fldcw
xchg
xor
mov
dec
sti
dec
pushf
out
sbbl
mov
mov
mov
cmc
inc
add
pop
fwait
add
mov
lahf
dec
jle
dec
cmp
xlat
xlat
repz
push
mov
mov
lcall
stos
adc
mov
pushf
fxch
loopne
mov
mov
add
add
and
adc
sbb
add
shll
xor
mov
es
rcl
mov
xchg
add
mov
xchg
cmp
mov
mov
cmp
xchg
outsl
xchg
iret
mov
push
outsb
ljmp
mov
fisubl
xchg
push
daa
jno
adc
fs
shrl
dec
aad
sbb
jge
cmp
pmulhuw
iret
mov
adc
mov
jb
mov
mov
jno
sarl
sub
or
mov
add
sub
xchg
and
lds
outsb
popf
test
loopne
mov
fcoms
fstl
jne
xchg
addb
lods
mov
mov
sbb
fs
cmp
cli
fstl
les
frstor
mov
or
pop
out
xlat
inc
ss
arpl
fldl
mov
sub
add
out
test
mov
push
mov
dec
xor
bound
mov
jb
mov
bound
mov
jno
pop
leave
loop
mov
add
mov
jge
andps
call
and
adc
loope
mov
rolb
sbb
mov
and
mov
aam
push
mov
xor
cmp
add
push
jle
jns
sbb
jmp
test
push
add
push
decb
rorl
xor
mov
fstl
inc
add
cld
scas
ret
pop
test
mov
and
sub
cmp
imul
lahf
scas
lret
fcompl
xchg
nop
add
pop
add
jo
mov
lahf
outsl
loope
sbb
loope
jge
addb
add
mov
jne
mov
inc
aad
push
jae
dec
mov
mov
mov
xchg
jl
inc
inc
jno
add
mov
adc
cmp
shll
add
add
in
inc
in
xchg
aaa
das
bound
mov
pop
imul
push
sub
mov
mov
add
fisubrs
jle
adc
push
or
mov
mov
or
mov
mov
adc
mov
xchg
jg
adcl
adcl
addl
mov
call
mov
cs
add
sbb
pop
sub
ror
add
sbb
inc
adc
mov
jecxz
add
jo
mov
push
pop
popa
adc
es
add
lock
and
mov
popf
data16
hlt
aaa
mov
xlat
les
sub
pop
jae
xchg
loop
mov
mov
ret
mov
stos
push
sbb
outsl
inc
loope
add
test
rolb
mov
add
mov
frstor
inc
movsb
shll
jmp
fisubl
mov
add
adc
add
mov
mov
add
fsub
add
loope
test
add
jbe
pop
push
pop
pop
adc
repz
mov
xchg
xlat
mov
dec
pop
movsb
and
call
xchg
add
mov
clc
jmp
jno
call
xor
mov
push
out
push
cli
pop
pop
mov
stc
add
fdivrs
test
pop
mov
mov
lea
add
mov
mov
add
ljmp
mov
jle
push
inc
dec
into
int
add
add
inc
sub
fucomp
fdiv
loopne
mov
add
mov
test
or
mov
or
dec
dec
xor
ja
add
shrl
mov
sub
pop
inc
inc
loopne
mov
pop
mov
jne
inc
push
into
xor
mov
and
jae
mov
xor
adc
pop
sahf
ret
test
add
data16
pushf
mov
push
add
mov
imul
inc
add
mov
arpl
lds
xchg
push
add
pop
jbe
lods
adc
mov
imul
cld
xchg
xor
mov
pop
scas
jne
xor
mov
rcrl
jne
loope
push
mov
hlt
imul
xchg
fldcw
mov
jmp
repnz
dec
hlt
jl
inc
rolb
lods
pop
imul
je
and
add
mov
imul
jecxz
dec
inc
les
mov
sti
mov
add
xor
add
mov
pop
sub
roll
xchg
add
mov
dec
shl
pop
mov
mov
in
out
jnp
jecxz
jnp
lcall
popf
jge
pop
and
mov
and
adc
cmpsl
aaa
ret
pop
out
ret
sub
add
icebp
in
fidivrl
push
dec
and
mov
inc
add
repnz
inc
icebp
push
lea
mov
add
mov
mov
fsts
add
add
dec
sbb
sbb
add
mov
pop
addb
ret
push
mov
add
imul
lret
jno
das
mov
pop
mov
mov
addb
mov
add
push
mov
nop
add
ljmp
pop
lods
pop
fwait
lcall
push
and
mov
adc
test
add
stc
jle
test
mov
out
jg
add
fs
adc
mov
add
add
or
or
sub
jmp
movups
mov
scas
xchg
repnz
jo,pt
mov
mov
loopne
mov
add
add
cwtl
cmp
testl
xchg
or
cmp
subl
insb
cmp
cmp
add
mov
out
movsl
lds
add
mov
iret
xchg
jmp
adc
xchg
ret
push
cmp
push
add
mov
mov
test
pop
and
add
add
and
mov
jne
sbb
sbb
dec
push
adc
mov
mov
adc
jo
mov
push
fisubs
add
pop
rolb
jbe
fimull
push
test
jae
mov
push
xor
mov
xchg
pop
inc
arpl
push
inc
push
int
and
push
add
sbb
loop
mov
bound
mov
mov
mov
dec
adc
xchg
adc
data16
sti
push
sbb
add
cmpsb
iret
hlt
push
lahf
test
mov
cmpsl
xor
fistps
js
repz
out
shrl
xchg
mov
jle
dec
push
adc
mov
pop
jo
mov
add
insb
inc
push
mov
sbb
dec
cltd
jmp
ds
in
add
inc
or
mov
mov
mov
lods
mov
adc
add
mov
sub
cs
fldcw
pop
int3
nop
add
adc
sub
and
mov
or
push
jge
add
lods
add
add
lods
mov
pavgw
pop
mov
lods
cmp
add
mov
popf
addr16
mov
lahf
leave
dec
in
add
jae
add
sbb
mov
add
adc
pop
je
outsl
cli
cmp
mov
ljmp
stos
push
cltd
or
adc
jb
mov
in
jnp
or
aaa
fdivl
div
dec
mov
mov
inc
jmp
das
stos
sub
arpl
pop
lds
add
add
dec
sub
push
inc
add
mov
popa
inc
fisubrs
adc
and
mov
mov
rcrl
mov
mov
jle
inc
pop
daa
repz
sbbl
cs
repz
adc
mov
fisttpll
mov
stos
dec
iret
lods
aaa
adc
mov
rolb
mov
add
enter
xor
mov
push
xor
pop
rorl
jno
jp
mov
mov
add
addb
rolb
mov
push
jbe
js
mov
adc
sub
addr16
cwtl
pop
dec
stos
dec
adc
mov
mov
add
mov
mov
setle
add
pop
mov
orl
or
mov
cmpsl
add
push
scas
loopne
mov
add
or
in
punpckhdq
xchg
roll
pop
mov
push
outsb
pop
jnp
jae
enter
data16
fldenv
outsb
sti
rolb
mov
hlt
dec
lock
add
adc
jecxz
fcmovnbe
pop
push
aad
add
jo
mov
add
sub
inc
inc
adc
aam
jo
mov
out
leave
movhps
bound
mov
mov
jp
and
add
adc
ljmp
inc
inc
nop
add
mov
push
add
ja
add
mov
add
add
adc
dec
dec
dec
cmp
xchg
outsb
rolb
sbb
mov
add
add
or
std
lahf
inc
add
mov
rolb
mov
lods
sbb
mov
mov
push
cmp
add
mov
pop
sub
sbb
jge
push
jnp
stc
aam
add
cmp
out
int
lret
add
add
push
or
jnp
add
cli
mov
add
cs
fdivs
add
add
mov
jl
movsb
xchg
out
cmpsb
jg
add
add
outsb
cmp
add
dec
ffree
in
xchg
xor
fldl
mov
or
jecxz
in
aad
add
mov
mov
aad
jbe
add
add
add
mov
dec
lea
add
mov
push
cmc
and
inc
add
mov
add
sub
mov
add
mov
std
adc
pop
fcmovu
jmp
ret
and
mov
xor
mov
ret
inc
adc
mov
mov
add
movsb
lcall
test
cmp
add
add
and
mov
add
mov
popf
push
aad
cltd
mov
out
sub
out
or
add
mov
add
aad
mov
jns
pop
repnz
mov
rolb
rolb
mov
scas
jle
add
jle
jge
mov
add
daa
out
nop
add
ja
pop
aas
frstor
xchg
rolb
adc
push
mov
bound
mov
jg
add
xchg
jo
mov
gs
pusha
add
dec
or
and
mov
jp
push
add
mov
movsl
in
push
pop
cmp
or
jg
jp
mov
lret
mov
jno
sub
add
mov
lods
mov
loopne
mov
sub
mov
mov
mov
add
mov
fcom
ret
mov
into
jp
add
outsl
mov
adc
xor
mov
je
cmpsb
sub
mov
dec
dec
jno
add
lods
mov
cmp
aam
jns
mov
mov
mov
aam
popa
loop
mov
jl
add
add
jb
mov
xor
movsb
pop
push
lahf
lock
sahf
je
test
push
imul
mov
ret
aaa
cmp
add
mov
insb
lcall
add
mov
repnz
out
sbb
lahf
mov
cmp
imul
movb
fwait
push
add
into
insb
scas
aas
mov
and
mov
add
mov
add
add
cwtl
bound
mov
mov
inc
movsb
push
dec
sub
cmc
xor
sbb
mov
add
inc
cmc
mov
cmp
in
push
out
xchg
push
xchg
jecxz
inc
jo
mov
movsl
pusha
add
imul
aaa
xor
stos
adc
cs
repz
mov
pop
ss
push
add
ja
mov
adc
add
ds
cld
pop
xchg
faddl
cmp
jnp
xchg
add
add
mov
mov
mov
add
and
xchg
add
data16
mov
pusha
add
leave
push
add
or
or
inc
add
adc
mov
int3
and
mov
mov
mov
mov
sbb
add
add
mov
lods
lock
rolb
mov
mov
dec
out
cmp
lret
xchg
xor
ja
push
stos
add
cmp
gs
cmp
es
lods
inc
lcall
push
insl
fistpl
add
jns
push
aas
xchg
mov
xor
mov
rolb
mov
mov
addb
and
sub
mov
jle
aas
out
inc
xor
mov
jg
xchg
insb
popf
inc
enter
add
nop
add
pop
and
inc
outsl
fnsave
lret
mov
std
xchg
popf
enter
sub
xor
arpl
mov
sbb
popf
sbb
das
xchg
or
pop
adc
mov
lods
jle
xlat
or
mov
or
push
lods
scas
push
jp
mov
mov
inc
sbb
mov
xor
jnp
notb
add
add
mov
add
xor
mov
ljmp
cmp
sub
inc
add
cs
xor
cli
or
std
mov
add
das
pop
pop
cmp
mov
sub
add
iret
rolb
loope
xchg
popf
movb
sarl
add
ss
fsubr
cmp
mov
fs
mov
fwait
xor
mov
push
daa
cmp
add
and
mov
lods
arpl
aas
xor
push
inc
add
les
out
and
cld
sub
mov
cs
add
mov
sbb
pop
lods
js
lahf
inc
and
pop
sub
stc
adc
mov
xor
cwtl
out
jmp
inc
add
pop
push
dec
loop
mov
jbe
jg
popa
subl
adc
adc
mov
dec
dec
xchg
movsl
aam
out
roll
test
mov
push
push
mov
je
jno
jge
mov
xchg
rorl
sub
pop
or
add
scas
mov
sbb
add
xor
pusha
add
add
add
pop
pop
sahf
jne
lods
jbe
mov
dec
aam
push
lss
mov
and
bound
mov
out
adc
mov
push
out
xchg
add
mov
mov
add
pop
mov
add
and
mov
mov
gs
testl
and
and
xchg
mov
and
push
add
mov
fistpll
inc
mov
mov
adc
loopne
mov
add
jp
add
mov
in
sub
add
dec
int
repnz
cmp
ret
dec
test
add
fxam
sbb
cmp
or
mov
or
bound
mov
push
stc
inc
or
mov
mov
in
sbb
mov
mov
push
add
mov
sbb
add
add
inc
cwtl
lock
xchg
cli
xchg
and
mov
lods
mov
addb
push
jb
mov
add
add
loope
mov
push
pop
xchg
mov
push
add
mov
mov
rolb
mov
lcall
movsl
dec
cli
in
lcall
adc
mov
mov
jecxz
add
mov
add
in
test
pop
dec
cs
dec
out
add
mov
aaa
rolb
mov
mov
cwtl
in
sub
jmp
lret
xor
mov
mov
mov
scas
vcvtpd2dqy
std
or
add
adc
pop
aad
add
out
jbe
dec
cmp
mov
out
mov
xlat
add
push
cmc
add
jg
lahf
inc
add
mov
mov
mov
dec
in
add
add
cli
fstpl
mov
in
test
pop
jb
mov
adc
fstps
cltd
sbb
sbb
add
pop
xchg
imul
scas
mov
dec
scas
inc
pop
les
add
pop
and
push
test
mov
push
xchg
ljmp
fbld
inc
pop
ja
add
mov
cmp
mov
mov
inc
adc
mov
mov
add
add
adc
mov
dec
lea
ss
jnp
sub
ljmp
mov
mov
fadds
add
mov
and
dec
int
jp
lods
lea
dec
cmp
mov
lcall
scas
mov
mov
sub
out
movsl
in
push
mov
add
cli
xchg
add
mov
add
mov
cmp
stos
inc
add
xor
mov
repz
add
add
mov
jno
insb
imul
push
popf
lds
lahf
pop
int
std
fwait
ja
sub
add
das
and
sbb
add
xor
add
ret
sub
mov
int3
mov
fs
pop
dec
pop
scas
test
add
pop
orl
add
add
nop
add
mov
add
mov
movsb
push
jmp
fs
mov
xlat
and
add
jge
lcall
add
jae
cmp
add
daa
jp
mov
insb
and
xchg
xchg
lcall
es
or
add
popa
les
mov
add
add
lret
test
xchg
jbe
imul
mov
add
inc
push
incb
fdivrp
xor
test
mov
adc
pop
dec
lods
or
mov
mov
cmp
push
jecxz
xor
sub
xor
jmp
push
inc
je
sbb
mov
addb
inc
add
std
leave
push
pop
loop
mov
jl
push
add
lea
xchg
mov
mov
shr
mov
add
fsts
mov
add
data16
jb
mov
mov
add
fsubrs
out
scas
and
int
dec
in
inc
push
into
push
mov
mov
stos
fs
sbb
ljmp
or
add
mov
add
iret
test
sbb
cmp
adc
int3
push
add
inc
add
mov
loop
mov
jg
and
cmp
call
add
test
add
scas
outsl
rolb
jg
cmp
add
aaa
not
jle
cli
jp
add
jle
ds
mov
inc
mov
adc
out
outsl
loope
test
daa
lea
add
mov
adc
cs
jbe
cltd
xorl
xlat
mov
push
mov
mov
mov
jno
cmc
xchg
xor
mov
mov
nop
add
fisttpll
inc
movb
push
xchg
sti
out
mov
scas
loop
mov
jmp
add
add
add
sbb
in
push
adc
mov
mov
movsl
outsl
jnp
pop
mov
add
lea
les
or
fs
mov
pop
mov
add
sub
push
xchg
bound
mov
push
imul
es
cmpsl
jge
xchg
testb
fs
fwait
fstps
push
and
pop
lods
clc
sbb
inc
add
jae
sub
add
add
ret
pop
pop
lods
addb
mov
pop
popf
jo
mov
cltd
dec
popa
daa
cwtl
mov
jb
mov
add
mov
inc
add
add
movsl
adc
mov
mov
sbbl
xchg
push
dec
xor
push
adc
mov
sub
imul
fidivs
lret
or
xlat
sub
xchg
in
rcr
js
fidivrs
add
cmpsl
push
repnz
and
mov
push
pop
loop
mov
lock
je
movsl
xor
popf
xchg
cmp
add
sub
jns
sub
pop
sub
ss
xchg
mov
hlt
das
sti
stc
aas
aad
add
pop
cwtl
jp
mov
mov
jl
add
pop
pop
adc
inc
add
mov
inc
lods
int3
inc
xchg
pop
aad
cmpsb
mov
std
sbbl
arpl
pop
adc
mov
lods
cmpsb
mov
stos
loopne
mov
mov
dec
lea
int3
adc
mov
out
add
cmp
into
or
loop
mov
xchg
add
mov
mov
add
daa
sbb
nop
add
ss
test
xor
sbb
and
mov
add
bound
mov
pop
xorl
sbb
lcall
movlps
mov
ljmp
hlt
sahf
outsb
mov
out
lret
sarl
and
mov
push
mov
mov
mov
add
outsb
push
and
mov
sbb
jns
std
pop
cmp
outsb
or
jb
mov
lock
incb
mov
cs
mov
add
fisubrl
fwait
add
add
pop
mov
xor
cmpsb
addr16
and
mov
pop
jg
iret
push
and
or
jg
int3
scas
push
pop
out
aas
or
add
mov
addb
mov
xchg
mov
adc
js
dec
cmp
cmp
notl
mov
outsb
bound
mov
and
fldz
pop
lea
xchg
add
inc
roll
test
and
push
cmpsb
pop
insb
mov
mov
lea
mov
push
push
lods
insb
and
and
mov
fnstsw
cmp
mov
movsb
adc
fnstsw
pop
jnp
dec
js
or
data16
addr16
jle
mov
mov
insl
mul
add
mov
sti
xchg
pop
aaa
inc
jmp
add
add
ret
rolb
and
sub
add
add
mov
decb
add
sub
mov
mov
push
popa
or
adc
mov
jb
mov
mov
dec
stc
mov
adc
mov
jp
scas
mov
jo
mov
mov
dec
jae
loopne
mov
cli
push
add
addb
out
icebp
arpl
push
jle
adc
mov
ljmp
mov
pop
dec
and
add
jno
sbb
sbb
sub
loope
mov
fistps
pop
ds
leave
mov
adcl
jbe
das
push
outsb
pop
adcl
push
aad
int3
lock
cs
mov
push
stos
test
mov
mov
cli
das
xor
mov
mov
movsb
or
xchg
ss
add
arpl
fwait
jnp
pusha
add
or
cmp
mov
sub
jb
mov
xchg
xor
push
add
mov
sub
sub
add
adc
mov
mov
gs
mov
mov
add
aaa
iret
cli
arpl
or
lock
mov
pop
mov
add
mov
xchg
mov
scas
clc
jns
pop
push
cli
push
into
lret
pop
leave
test
jecxz
sbb
popf
push
add
rolb
mov
mov
inc
or
add
mov
enter
jge
jg
and
mov
push
dec
stos
data16
mov
addb
add
adc
and
outsb
cmp
dec
lcall
push
inc
mov
mov
add
in
and
inc
in
enter
xchg
imul
iret
int
rolb
mov
adc
add
sub
test
fldenv
lock
rolb
sub
aam
mov
jo
mov
in
pop
push
in
push
push
icebp
xchg
pop
xor
mov
ds
cmp
inc
push
pop
push
rolb
dec
sub
mov
mov
loopne
mov
mov
roll
inc
add
add
mov
pop
lea
shl
xor
aam
sbb
lods
xchg
jb
mov
xchg
mov
sbb
or
pop
xchg
add
adc
cli
test
test
jb
mov
mov
mov
sbb
pop
or
dec
stc
lcall
add
mov
repz
notl
xrelease
adc
imul
rolb
mov
jle
push
inc
jns
bound
mov
inc
dec
in
es
mov
xchg
popf
jl
jo
mov
push
mov
mov
add
xor
mov
dec
xchg
popa
add
mov
add
cmp
mov
add
xor
mov
add
add
pop
ficoms
push
imul
mov
add
mov
dec
bound
mov
adc
insl
rolb
mov
adc
mov
xchg
leave
xchg
push
add
xchg
icebp
mov
lret
mov
add
jmp
out
add
add
sub
test
lret
pop
es
stos
icebp
sub
cli
lret
sbb
and
mov
mov
es
adc
mov
test
cmp
xor
addb
jno
pop
push
dec
push
bound
mov
in
add
fwait
je
loope
adc
mov
lret
xchg
dec
pop
push
push
xchg
cwtl
xlat
in
mov
mov
fucomi
rolb
mov
loop
mov
aaa
xor
adc
clc
xchg
mov
mov
mov
or
mov
mov
dec
or
mov
jns
mov
mov
scas
add
xchg
add
movsb
out
xchg
mov
repz
jecxz
add
cmp
or
add
adc
mov
loop
mov
pop
neg
loop
mov
mov
jae
sub
add
xor
add
mov
push
mov
cmp
sti
rolb
mov
jbe
pop
lods
insb
push
jl
add
pop
arpl
add
mov
add
add
dec
jo
mov
mov
jne
into
push
xchg
push
add
or
fidivl
sbb
add
or
lret
in
mov
repz
mov
insl
dec
loope
and
mov
pop
loop
mov
inc
popa
adc
mov
sub
mov
sbb
loopne
mov
xchg
mov
ret
cmc
out
pop
into
push
movsb
int3
push
add
aaa
test
dec
lahf
add
push
cmpsb
js
mov
xchg
jecxz
das
mov
or
mov
sbb
sbb
pop
jnp
adc
mov
pusha
add
sub
inc
xchg
cltd
pop
sbb
not
pop
push
add
sahf
out
addb
dec
or
sti
and
rolb
mov
insl
cli
sbb
adc
mov
mov
mov
add
mov
rolb
mov
add
xchg
sbb
mov
pop
xchg
dec
or
mov
cltd
loopne
mov
cltd
repnz
fs
adc
mov
les
xor
mov
add
mov
int3
pop
js
fists
pop
stos
jae
push
push
add
cmp
or
int3
cld
in
mov
cltd
mov
add
and
mov
push
mov
pop
push
add
add
insl
mov
insb
push
test
mov
add
xorl
fisubrl
add
xchg
sub
add
mov
add
outsb
int3
imul
mov
aas
xchg
mov
mov
mov
add
cmp
mov
fimuls
xor
add
mov
mov
loopne
mov
mov
xchg
movsl
xchg
jb
mov
loop
mov
xor
mov
clc
pop
stc
add
mov
or
add
popa
inc
add
sub
cmp
neg
mov
mov
ret
lahf
mov
cmp
outsl
pop
add
out
scas
icebp
push
loopne
mov
mov
add
mov
add
int3
inc
mov
mov
mov
xlat
lahf
es
pusha
add
pop
out
sub
fwait
sbb
cld
invd
inc
adc
lods
popf
jb
mov
pop
adcl
lret
repz
sbb
rolb
mov
and
pop
imul
mov
mov
sub
add
add
and
scas
fsubrl
push
mov
mov
jae
mov
pop
imul
fistps
add
adc
push
popf
xchg
daa
inc
sub
cmp
jge
in
dec
cmp
inc
int3
pop
repnz
add
xor
pop
repnz
mov
add
add
inc
sub
fbstp
rcll
xchg
add
jae
sub
and
inc
or
fstpl
push
daa
pop
stos
rolb
jle
adc
add
add
das
mov
cmp
popf
mov
xor
testl
inc
pop
lods
cli
jae
sti
shrl
add
mov
test
add
mov
add
in
mov
test
lahf
mov
pop
jae
pusha
add
sbb
negb
add
into
bound
mov
leave
mov
out
ljmp
add
mov
and
add
push
test
adc
xor
mov
aam
mov
push
inc
add
xchg
in
mov
ljmp
lea
movsb
adc
fidivl
outsl
jne
dec
add
daa
add
add
ja
jp
test
add
in
and
mov
lcall
sbb
data16
mov
aam
sbb
xchg
add
mov
arpl
push
cld
rorl
fstpt
push
dec
sub
add
add
pusha
add
insl
dec
push
sub
lea
dec
outsl
jnp
data16
pop
push
ja
fnstenv
add
xchg
jl
std
dec
popa
jge
insl
mov
mov
mov
and
mov
mov
add
mov
push
inc
xchg
lds
mov
lcall
loop
mov
popf
adc
cmp
and
mov
mov
out
xchg
addb
int3
jnp
sub
inc
push
call
mov
mov
aas
push
mov
jae
push
movsl
ja
and
pop
adc
mov
outsl
in
add
or
add
mov
mov
jb
mov
enter
movb
mov
push
jmp
inc
mov
pusha
add
xchg
add
mov
aas
sbb
mov
iret
pop
leave
or
popf
out
jo
mov
rcll
lahf
mov
add
mov
inc
add
cmpsb
add
adc
mov
fs
sbb
test
stc
jp
mov
loopne
mov
aad
lret
dec
loope
inc
gs
repnz
add
mov
mov
ljmp
je
and
mov
rcl
jg
dec
pop
addl
mov
add
mov
scas
fldt
repnz
rolb
adc
push
and
leave
fs
add
jp
adc
jg
add
mov
lcall
push
dec
out
pushf
jmp
outsb
and
mov
push
mov
pusha
add
ja
push
outsb
inc
add
dec
rolb
mov
lcall
fbstp
sti
outsl
call
cmp
jo
mov
inc
add
xchg
mov
ss
mov
mov
mov
and
mov
bound
mov
addb
and
pop
nop
add
cmp
aas
sbb
imul
mov
xchg
mov
imul
adc
cli
inc
sub
jmp
int
add
mov
bound
mov
cmp
sbb
fcmovnu
orl
and
xor
mov
lods
pop
sub
inc
lret
dec
addb
hlt
mov
jns
dec
and
mov
shll
sbb
mov
add
cld
in
and
mov
clc
inc
xor
mov
mov
mov
pop
sbb
es
fst
push
xchg
pop
imul
or
pop
loop
mov
rolb
mov
add
cmp
add
mov
pop
lods
iret
xchg
fidivrl
lods
test
das
pop
dec
mov
shll
inc
add
pop
mov
jl
subl
loop
mov
inc
sub
imul
je
xchg
cltd
jg
add
mov
lret
sti
inc
dec
jnp
add
sub
pop
in
clc
inc
fucom
nop
add
shr
cmp
lods
not
add
sub
data16
mov
repnz
jns
adc
jno
xchg
hlt
imul
add
mov
sub
xor
or
sbb
ss
popf
cltd
or
mov
inc
push
cmp
add
jp
adcl
rcll
mov
mov
add
gs
sbb
jl
out
ret
adc
mov
repz
mov
adc
pop
out
es
outsl
je
lahf
loope
int3
push
pop
insl
addb
or
dec
inc
add
pop
gs
dec
jle
and
pop
sbb
popa
lock
mov
add
adc
mov
mov
mov
rolb
mov
addr16
jge
int
mov
xor
mov
out
outsl
mov
add
push
notb
add
out
pop
jle
mov
adc
xchg
ret
cmp
sub
sti
cltd
adc
mov
xchg
jne
mov
jl
out
inc
jl
fsubr
mov
mov
sbb
add
push
addb
iret
cmp
mov
mov
icebp
mov
sub
xor
add
xchg
dec
lds
outsl
shll
mov
fimuls
sub
shrl
mov
sub
cmp
cmp
jle
test
ret
and
popa
pop
lock
add
mov
add
mov
jg
sarl
mov
lds
xor
mov
add
lods
cwtl
jnp
out
add
and
cmpsb
xor
add
xchg
cmpsl
jns
add
add
test
add
mov
add
aas
enter
mov
or
testl
jmp
add
test
ret
sti
fldl
add
imul
push
adc
mov
mov
mov
mov
add
push
pop
test
add
add
sub
push
pop
loope
pop
pop
push
lock
mov
cmp
aad
mov
mov
scas
mov
mov
rsm
fmull
call
xchg
into
or
sbb
mov
adc
mov
sub
and
add
add
cmp
xor
rolb
mov
mov
mov
add
mov
jp
sbb
test
jecxz
fstpl
or
out
loopne
mov
push
imul
outsl
popf
leave
fsubl
movsl
fsubrs
fldt
xchg
es
lcall
pop
stos
frstor
popf
lds
mov
pop
mov
setbe
cmc
jnp
add
arpl
mov
push
add
jo
mov
cmp
and
push
add
mov
mov
sbb
cmc
dec
vaddsd
cwtl
aam
adc
dec
fs
mov
adc
mov
sbb
dec
xchg
add
mov
inc
mov
mov
mov
lret
jl
test
test
adc
inc
dec
sbb
imul
mov
mov
xchg
adc
mov
or
fs
add
push
in
push
sbb
cmp
add
lahf
sbb
cltd
loop
mov
addb
hlt
nop
add
fwait
lock
mov
cmp
mov
fwait
aam
mov
leave
dec
push
lahf
push
int
jae
jmp
jne
rolb
mov
add
mov
add
xor
jnp
add
insl
push
lods
fucom
and
stos
fidivrs
pop
daa
add
xor
add
in
loopne
mov
add
adc
and
cmp
sbb
mov
cmp
push
xor
add
sbb
iret
cmp
lds
mov
jmp
pop
pop
rolb
inc
pop
lods
pop
jns
pop
inc
out
mov
mov
mov
rolb
mov
inc
test
pop
ret
cmc
add
imul
out
shll
pop
sub
add
js
addr16
loope
xor
sahf
dec
pusha
add
mov
inc
add
sub
das
fadds
or
xchg
into
cmc
cmp
loopne
mov
jb
mov
pop
inc
mov
adcl
dec
or
out
je
rolb
mov
aaa
jg
inc
sbb
add
mov
jo
mov
add
nop
add
cmp
bound
mov
add
mov
lods
stc
shll
outsl
out
repnz
xchg
xchg
push
add
mov
add
call
dec
subl
jecxz
jl
sub
push
push
sbb
add
xchg
loop
mov
inc
loopne
mov
mov
or
and
add
lcall
push
lea
dec
pop
into
adc
add
test
push
cld
pusha
add
push
fdivrl
mov
mov
adc
mov
mov
inc
add
push
or
std
xorl
mov
or
sub
test
xchg
pop
push
add
add
mov
jns
add
cwtl
mov
push
add
sub
or
xor
mov
fcompl
out
in
fadds
push
jmp
addl
inc
sar
xchg
dec
and
push
add
pop
mov
mov
cmp
push
push
addb
lods
pop
dec
xor
les
std
testb
mov
mov
pop
ret
xor
out
xchg
mov
and
mov
add
mov
push
and
cmpsb
mov
lcall
mov
outsl
pop
mov
addb
sti
jnp
insb
cmp
push
add
lock
and
mov
add
add
mov
call
mov
lea
mov
fsubl
cmpsb
leave
push
mov
mov
mull
lea
ds
flds
fs
xor
sbb
in
cmpsl
inc
add
add
sbb
nop
aam
add
add
mov
add
mov
int
xor
adc
dec
add
mov
pop
cmp
ss
add
add
dec
xor
mov
xchg
mov
mov
push
lret
cltd
xchg
or
push
add
mov
sahf
mov
mov
cmp
popa
bound
mov
xor
mov
fwait
push
add
push
decb
dec
xor
add
mov
call
pop
popa
addb
inc
add
add
int3
xlat
in
or
mov
ljmp
pop
divl
add
jle
out
lret
jle
sub
add
mov
addb
ss
push
int3
mov
sub
push
in
in
arpl
dec
loop
mov
fdivrs
movsl
cmp
add
insb
mov
add
add
clc
xchg
cmp
pop
mov
xor
mov
dec
in
gs
add
jmp
pop
loopne
mov
fcomp
lret
add
mov
push
aaa
mov
mov
cmpsl
or
stc
mov
popa
mov
mov
mov
adc
mov
fdivp
mov
mov
ds
ret
pop
das
popf
xchg
add
add
mov
fnstsw
jb
mov
fdivl
add
pop
push
mov
mov
pop
enter
cmp
mov
add
int
sbb
int3
mov
mov
add
dec
repnz
inc
rclw
push
add
stos
into
fisubs
mov
lock
addr16
push
add
mov
add
add
mov
mov
mov
mov
stos
pop
cli
pop
mov
outsb
scas
push
in
mov
dec
in
add
in
cmp
push
cli
iret
in
or
cmp
jno
jne
add
iret
jae
stos
mov
leave
mov
adc
sbb
inc
add
add
cmp
cmpsl
push
jno
dec
popa
ret
call
add
mov
xchg
xor
mov
push
add
pusha
add
lds
imul
add
mov
push
pop
neg
sbb
sbb
jo
mov
and
push
jecxz
jl
or
dec
lret
add
or
test
cmp
dec
aas
cmpsl
ret
cmpsb
das
cmp
test
movsb
sbb
test
or
or
bound
mov
aam
mov
out
dec
sbb
push
mov
inc
inc
add
mov
mov
pop
aaa
xchg
add
add
add
mov
mov
adc
mov
sub
and
inc
add
add
adc
mov
out
stos
das
ret
push
add
cmpsb
outsl
inc
cmp
js
adc
mov
mov
add
sub
sbb
add
daa
rol
dec
mov
lods
mov
mov
add
push
scas
movsb
push
je
inc
dec
fs
inc
add
xor
inc
or
shll
add
mov
movsl
leave
pop
cmp
xor
mov
push
mov
jns
add
push
test
insb
add
out
or
mov
dec
mov
jg
mov
add
add
mov
mov
adc
pushf
fimuls
add
loopne
mov
bound
mov
or
jl
adc
xchg
stc
iret
mov
mov
xor
pop
xlat
loope
mov
imul
add
push
daa
dec
in
add
mov
test
popa
or
mov
mov
shll
lods
cld
ret
ss
mov
aad
add
scas
mov
mov
add
rolb
mov
addb
dec
sub
roll
mov
add
or
push
add
aas
idivb
or
inc
or
jbe
mov
dec
mov
jo
mov
mov
clc
ret
icebp
addb
xor
leave
lods
jno
mov
push
push
xor
add
repnz
pop
mov
and
add
add
mov
cmp
sti
push
dec
xchg
mov
out
mov
mov
add
pop
push
nop
add
mov
fs
addb
je
and
add
aad
stos
in
pop
fwait
xor
add
mov
repz
movsl
stc
add
mov
add
hlt
sub
sahf
pushf
push
aam
xor
add
mov
add
pop
and
mov
rcrl
incb
add
mov
imul
mov
sbb
rol
adc
repz
jo
mov
das
loope
push
sbb
mov
aaa
dec
mov
mov
mov
push
into
jb
mov
and
add
sub
lds
mov
sub
and
pop
mov
into
and
add
mov
sub
dec
xchg
add
mov
mov
sahf
test
sub
inc
arpl
mov
test
and
mov
repnz
cs
mov
add
cmc
mov
push
add
add
les
add
imul
xor
add
mov
cmp
or
add
xor
mov
inc
jnp
or
mov
xor
rolb
jle
or
stos
jnp
and
cmp
test
mov
mov
popf
inc
add
mov
pop
in
jne
divb
mov
mov
jno
dec
ss
mov
adc
add
mov
cmp
cwtl
out
inc
cmc
cmpsl
ljmp
stc
and
add
xchg
add
sub
mov
push
add
mov
mov
ds
mov
ja
push
bound
mov
mov
aam
xchg
mov
aad
mov
addb
jbe
mov
loop
mov
in
adc
test
mov
popf
imul
add
imul
mov
out
in
xor
mov
jae
add
pop
push
sub
jnp
add
popl
mov
cld
mov
dec
aaa
sbb
xchg
jg
testl
add
add
imul
dec
inc
dec
mov
mov
or
push
loop
mov
add
add
jb
mov
add
push
adc
mov
inc
lcall
scas
push
inc
xchg
dec
out
fisubrs
jne
cmpsl
out
inc
pushl
mov
pushf
jmp
nop
add
sbb
xor
fdivl
cld
addb
out
out
fidivrs
notl
push
rolb
mov
fbstp
push
add
loope
out
pop
out
lods
rolb
mov
or
mov
add
push
ljmp
call
rolb
mov
mov
add
add
add
dec
enter
add
mov
call
mov
aas
sub
xchg
iret
jne
lds
sbb
dec
repnz
in
push
sbb
rolb
mov
rcr
scas
inc
add
cltd
rcll
push
nop
add
cmp
sub
cld
imulb
mov
and
mov
ficoml
sub
jae
outsl
out
fdiv
jae
cmpsl
jb
mov
add
rolb
and
fs
mov
mov
lods
addb
cmp
mov
add
popf
pop
addr16
xchg
lds
dec
pop
pop
inc
add
cltd
mov
mov
mov
adc
add
mov
int
mov
lret
mov
or
and
mov
mov
mov
jns
add
xor
aas
test
xor
mov
decb
addb
js
xchg
sahf
imul
mov
roll
xor
mov
or
and
adc
mov
mov
mov
nop
add
mov
xor
jle
jbe
fstpt
fsubr
or
pop
adc
je
mov
or
sub
push
or
jmp
pop
or
and
adcl
aaa
out
cmp
mov
in
adc
sub
int3
aam
inc
add
movsb
sub
add
in
int
ret
jl
sub
mov
stos
fs
dec
jb
mov
cltd
popf
out
sub
jns
addb
dec
pop
sub
jno
test
ljmp
add
scas
fisubs
clc
loopne
mov
notl
mov
and
mov
add
pop
sbb
out
loope
lods
outsb
aam
orl
nop
add
movsl
lcall
mov
cmp
mov
or
sbb
test
test
jne
outsb
das
into
xchg
mov
xor
mov
bound
mov
dec
testb
or
push
add
mov
mov
movb
data16
mov
mov
int
add
mov
faddp
imul
add
fisttps
addr16
leave
fisubrl
fiadds
ss
mov
sub
cmc
jl
push
mov
pusha
add
imul
in
sbb
cld
jle
fsts
cltd
sbb
push
push
add
jmp
addr16
out
and
mov
out
mov
and
mov
mov
mov
jl
adcl
add
push
add
mov
pop
push
scas
push
add
in
shll
pop
out
xchg
inc
dec
inc
push
add
push
dec
mov
mov
outsl
ret
cmp
mov
xchg
add
adc
sub
and
lock
insb
fidivrl
adc
add
cs
cli
push
adc
adc
mov
mov
sbb
add
add
mov
add
cmp
push
cwtl
mov
outsb
dec
sub
pop
fdivl
adcl
push
or
iret
int
test
or
imul
leave
scas
lea
adcl
mov
adc
mov
pop
cmp
jo
mov
push
addr16
push
cmp
rolb
ljmp
add
bound
mov
mov
gs
cld
dec
addb
addb
imul
xor
adc
mov
mov
cmp
movsl
xor
sub
cmp
add
xorl
adc
add
adc
fnstenv
out
ret
fildl
fsubr
sbb
adc
mov
xchg
fiadds
test
add
mov
mov
test
ret
cwtl
test
es
rolb
mov
xor
cmpsb
lcall
add
push
mov
mov
jl
pop
test
rcl
outsb
scas
jmp
cmc
jl
sti
sub
cmpsl
mov
sub
lods
cs
cmp
mov
mov
inc
sbb
iret
movsb
adc
mov
mov
cmp
xchg
or
mov
sarl
sub
leave
sahf
aas
push
cld
dec
add
int
cmp
push
dec
and
mov
add
mov
cmc
mov
inc
jle
jle
add
mov
adc
mov
in
xor
ja
jne
ds
cmp
loop
mov
pop
push
add
push
jp
add
mov
movsb
mov
or
mov
pop
mov
popf
mov
add
mov
aaa
xchg
adc
add
mov
arpl
insb
fbld
cmpsl
hlt
adc
mov
xchg
cmpsl
mov
addb
orl
negl
or
xchg
jge
add
mov
dec
fmull
aam
add
jno
dec
pop
mov
movsb
dec
dec
mov
adc
mov
jp
push
add
pushf
sbb
rolb
mov
stc
stos
push
sub
mov
sbb
push
addb
cmp
mov
mov
sub
lods
pop
in
loopne
mov
mov
pushf
fsts
add
mov
add
fdivrs
adc
pushl
add
mov
push
add
mov
into
outsb
lea
jb
mov
jg
mov
fidivl
jne
out
jge
pop
ja
cmp
xchg
shrl
cs
mov
add
xchg
pushf
mov
pop
repnz
outsb
mov
xlat
inc
pop
pop
loopne
mov
add
mov
roll
lret
iret
popa
mov
imul
cmpsl
loope
xor
add
add
xchg
add
cwtl
mov
fidivl
adc
in
pop
ja
outsb
jno
push
pop
stc
bound
mov
mov
popa
bound
mov
add
mov
aaa
sbb
imul
enter
out
add
adc
mov
add
ret
in
xchg
repnz
out
mov
dec
push
out
insl
or
mov
mov
dec
ss
sbb
ret
nop
add
aaa
int
out
addr16
add
addb
pop
jne
jle
cli
ds
push
stc
imul
pop
cmp
cltd
push
cmpl
mov
roll
ret
test
das
int
hlt
fimuls
cwtl
push
lret
mov
enter
add
and
fistpll
je
sbb
add
add
add
sbb
lret
mov
cmp
xor
or
lret
inc
ljmp
lock
xchg
test
sbb
add
cmp
clc
out
pop
gs
ficompl
push
add
or
insb
cmpsb
adc
mov
ficompl
mov
mov
xor
mov
in
push
and
push
mov
sbbl
jecxz
mov
aaa
cmpsb
test
and
and
mov
add
jne
movsb
mov
xor
mov
add
add
sbb
xchg
stc
rolb
mov
add
jae
cmp
add
pop
push
das
adc
fisubl
sub
and
mov
outsl
fwait
ss
push
bound
mov
and
mov
cwtl
ficoms
mov
loopne
mov
xor
into
lret
push
add
mov
in
rolb
mov
and
add
mov
cmc
js
adc
mov
es
xor
mov
aam
jecxz
.byte
