or
mov
test
mov
mov
loopne
pop
cmpsb
loopne
int
loopne
scas
movsl
loopne
cld
test
mov
cmpsl
loopne
subb
mov
cmpsl
loopne
out
mov
loopne
pop
test
mov
cmpsb
loopne
xchg
movsb
loopne
add
mov
movsl
loopne
jae
loopne
push
movsb
loopne
loopne
sub
loopne
sahf
movsl
loopne
xchg
movsl
loopne
cltd
test
mov
test
loopne
xchg
mov
loopne
dec
mov
loopne
push
mov
loopne
mov
test
mov
mov
loopne
shlb
mov
movsl
loopne
shlb
loopne
pop
test
mov
cmpsb
loopne
dec
test
mov
movsb
loopne
cmc
movsl
loopne
adc
loopne
sbb
mov
cmpsb
loopne
loopne
loopne
scas
mov
loopne
in
cmpsb
loopne
stc
movsl
loopne
in
cmpsb
loopne
andb
mov
test
mov
test
mov
test
mov
mov
loopne
mov
loopne
movsl
cmpsl
loopne
xchg
mov
loopne
mov
loopne
cwtl
movsl
loopne
dec
test
loopne
repz
mov
mov
loopne
cmc
mov
loopne
test
mov
movsl
loopne
scas
movsb
loopne
mov
loopne
xchg
movsb
loopne
pop
movsb
loopne
std
movsl
loopne
jno
loopne
mov
mov
mov
loopne
test
loopne
out
mov
loopne
mull
loopne
cmc
mov
loopne
xchg
movsl
loopne
and
loopne
jns
loopne
mov
mov
mov
loopne
loopne
pop
mov
loopne
fwait
mov
loopne
push
movsb
loopne
add
loopne
push
movsb
loopne
jmp
mov
loopne
movsl
movsb
loopne
insl
mov
loopne
in
cmpsl
loopne
xchg
mov
loopne
loope
loopne
jmp
loopne
das
movsl
loopne
jmp
loopne
or
mov
mov
loopne
jecxz
loopne
shll
loopne
jnp
loopne
test
loopne
jmp
loopne
lods
movsb
loopne
lahf
mov
loopne
lods
cmpsl
loopne
mov
mov
loopne
sbb
loopne
mov
loopne
movsl
loopne
jae
loopne
add
mov
loopne
xchg
loopne
pushf
mov
loopne
movsl
mov
loopne
mov
loopne
lret
mov
mov
loopne
cwtl
mov
loopne
jg
loopne
push
movsl
loopne
jb
loopne
lods
mov
loopne
adc
loopne
iret
movsl
loopne
and
loopne
push
cmpsl
loopne
outsl
movsb
loopne
loopne
loopne
dec
movsb
loopne
mov
loopne
push
cmpsl
loopne
das
cmpsl
loopne
push
mov
loopne
loop
loopne
jge
loopne
dec
cmpsb
loopne
andb
mov
mov
loopne
add
loopne
les
loopne
sub
mov
test
mov
mov
loopne
add
loopne
add
loopne
sbb
loopne
into
movsb
loopne
loopne
or
loopne
push
test
loopne
mov
test
loopne
push
mov
loopne
sbb
mov
cmpsl
loopne
movsb
movsb
loopne
mov
movsl
loopne
mull
loopne
aaa
cmpsl
loopne
lods
mov
loopne
in
mov
loopne
xor
loopne
shll
loopne
add
loopne
cli
movsl
loopne
cmp
loopne
inc
movsb
loopne
mov
movsb
loopne
mov
loopne
movsb
movsb
loopne
mov
movsb
loopne
push
test
mov
test
mov
mov
loopne
xor
mov
cmpsl
loopne
xchg
mov
loopne
enter
cli
cmpsb
loopne
xchg
mov
loopne
xchg
cmpsb
loopne
loopne
loopne
inc
test
mov
cmpsl
loopne
sbb
loopne
ret
mov
cmpsl
loopne
push
mov
loopne
inc
cmpsl
loopne
and
loopne
fwait
cmpsl
loopne
xor
loopne
das
mov
loopne
subb
mov
movsb
loopne
add
loopne
mov
movsl
loopne
mov
loopne
sub
loopne
cmpsb
loopne
push
loopne
mov
cmpsb
loopne
test
loopne
data16
mov
mov
loopne
mov
loopne
daa
mov
loopne
outsb
cmpsl
loopne
shrl
loopne
pop
cmpsl
loopne
pop
mov
loopne
push
movsb
loopne
scas
test
mov
cmpsl
loopne
mov
loopne
insb
mov
loopne
sub
movsl
loopne
pop
mov
loopne
in
loopne
mov
mov
cmpsl
loopne
loop
loopne
xchg
mov
loopne
xchg
movsl
loopne
xor
loopne
stos
movsb
loopne
clc
mov
loopne
lcall
mov
mov
loopne
xchg
mov
loopne
xor
loopne
ret
cmpsl
loopne
js
loopne
loopne
push
cmpsl
loopne
or
loopne
dec
movsb
loopne
xchg
movsl
loopne
frstor
mov
cmpsl
loopne
mov
loopne
jg
loopne
sub
movsl
loopne
or
loopne
sub
loopne
call
cmpsb
loopne
shll
loopne
enter
mov
cmpsl
loopne
scas
mov
loopne
shll
mov
mov
loopne
pop
cmpsl
loopne
inc
movsl
loopne
lds
loopne
stos
mov
loopne
sbb
mov
cmpsl
loopne
cmp
loopne
shlb
mov
mov
loopne
cmpsl
cmpsl
loopne
outsb
cmpsl
loopne
add
loopne
test
mov
loopne
push
test
loopne
cmpsl
loopne
mov
loopne
inc
mov
loopne
bound
loopne
repz
loopne
sbb
loopne
lret
movsl
loopne
jl
loopne
mov
cmpsb
loopne
cmp
cmpsl
loopne
pop
cmpsb
loopne
xchg
test
mov
movsb
loopne
and
loopne
scas
mov
loopne
adc
loopne
sub
mov
loopne
jae
loopne
add
loopne
or
loopne
mov
test
loopne
or
loopne
sti
movsl
loopne
les
loopne
add
loopne
mov
cmpsl
loopne
pushf
mov
loopne
pop
movsl
loopne
push
test
mov
mov
loopne
test
loopne
sbb
loopne
test
loopne
aas
movsb
loopne
xor
loopne
xor
loopne
mov
loopne
dec
test
loopne
cmp
loopne
xchg
mov
loopne
movsl
loopne
pop
movsl
loopne
icebp
test
mov
mov
loopne
pop
mov
loopne
pop
mov
loopne
xor
mov
mov
loopne
lcall
mov
mov
loopne
mov
loopne
xchg
cmpsb
loopne
pop
mov
loopne
push
loopne
dec
movsl
loopne
pop
mov
loopne
andl
loopne
enter
xchg
mov
loopne
fldenv
loopne
and
loopne
fsubs
loopne
pusha
mov
loopne
andb
mov
movsl
loopne
fbld
mov
mov
loopne
shlb
loopne
lods
cmpsb
loopne
pop
mov
loopne
mov
cmpsb
loopne
fldenv
loopne
loopne
pop
movsl
loopne
hlt
mov
loopne
test
mov
mov
loopne
push
cmpsl
loopne
std
cmpsb
loopne
add
loopne
ret
mov
mov
loopne
push
movsl
loopne
popf
cmpsl
loopne
inc
cmpsb
loopne
push
cmpsl
loopne
fisubs
mov
mov
loopne
popf
mov
loopne
js
loopne
push
mov
loopne
movsb
movsb
loopne
cmpsb
mov
loopne
cmpsl
loopne
jge
loopne
cmp
mov
movsl
loopne
and
loopne
scas
mov
loopne
sub
loopne
mov
loopne
shll
mov
mov
loopne
pushf
mov
loopne
out
loopne
sub
loopne
loop
loopne
sbb
mov
mov
loopne
jg
loopne
adc
loopne
push
movsl
loopne
imul
mov
cmpsb
loopne
test
loopne
xchg
mov
loopne
imul
loopne
andl
loopne
push
mov
loopne
pop
cmpsl
loopne
and
mov
loopne
shll
mov
movsb
loopne
jbe
loopne
fldcw
loopne
xor
loopne
push
mov
loopne
js
loopne
mov
loopne
das
test
mov
mov
loopne
jg
loopne
mov
loopne
adc
loopne
into
mov
loopne
out
mov
loopne
jo
loopne
es
mov
mov
loopne
jb
loopne
test
loopne
sub
mov
movsl
loopne
cmp
loopne
or
loopne
movsb
loopne
adc
loopne
push
test
loopne
cltd
mov
loopne
ret
mov
cmpsb
loopne
jb
loopne
dec
cmpsl
loopne
das
cmpsb
loopne
scas
mov
loopne
xor
mov
movsl
loopne
fsubl
loopne
inc
test
mov
cmpsl
loopne
pop
mov
loopne
outsl
movsb
loopne
lds
mov
cmpsl
loopne
sbb
loopne
js
loopne
cmp
cmpsl
loopne
push
movsl
loopne
sub
loopne
enter
push
test
mov
test
mov
cmpsl
loopne
push
loopne
nop
test
mov
test
mov
mov
loopne
or
loopne
iret
movsb
loopne
mov
loopne
cmpsl
cmpsb
loopne
pop
movsl
loopne
inc
cmpsl
loopne
jns
loopne
dec
movsl
loopne
cmpsl
loopne
and
loopne
push
loopne
fwait
mov
loopne
mov
loopne
leave
test
mov
movsl
loopne
jp
loopne
fisubs
loopne
ret
mov
movsb
loopne
mov
loopne
shll
mov
mov
loopne
or
movsb
loopne
call
movsl
loopne
andl
loopne
leave
mov
loopne
test
cmpsb
loopne
mull
loopne
and
loopne
sahf
mov
loopne
pop
test
loopne
pop
cmpsb
loopne
xchg
cmpsl
loopne
dec
cmpsb
loopne
hlt
mov
loopne
mov
loopne
es
mov
test
loopne
into
movsl
loopne
int3
mov
loopne
shll
mov
test
loopne
pop
cmpsb
loopne
ret
cmpsl
loopne
cmpsl
movsb
loopne
xor
loopne
sbb
loopne
pop
test
mov
movsb
loopne
inc
cmpsb
loopne
std
cmpsb
loopne
inc
test
loopne
nop
test
mov
movsb
loopne
lds
loopne
xchg
loopne
loopne
jg
loopne
ss
loopne
mov
movsl
loopne
push
mov
loopne
je
loopne
ret
mov
loopne
cmp
loopne
mov
mov
loopne
fsubs
loopne
and
loopne
mov
test
mov
cmpsl
loopne
inc
test
loopne
shll
mov
cmpsb
loopne
shll
loopne
cmp
cmpsl
loopne
loopne
dec
movsl
loopne
add
loopne
mov
movsl
loopne
mov
loopne
jp
loopne
add
loopne
lods
movsl
loopne
and
loopne
test
mov
mov
loopne
pop
test
mov
movsb
loopne
mov
loopne
mull
loopne
sbb
loopne
and
loopne
cmp
loopne
dec
movsb
loopne
xor
loopne
jmp
loopne
fisubs
loopne
jp
loopne
and
loopne
repz
loopne
fldenv
loopne
push
test
loopne
in
mov
loopne
jmp
test
mov
cmpsl
loopne
push
test
loopne
stc
movsl
loopne
shlb
loopne
jecxz
loopne
cmpsb
loopne
shll
mov
mov
loopne
mov
mov
loopne
dec
movsl
loopne
cmp
movsb
loopne
das
test
mov
movsb
loopne
cmpsl
movsb
loopne
int3
cmpsl
loopne
jecxz
loopne
clc
mov
loopne
inc
cmpsb
loopne
js
loopne
jb
loopne
pop
mov
loopne
shlb
les
loopne
pop
movsb
loopne
mov
loopne
pop
test
mov
test
loopne
xchg
cmpsl
loopne
push
test
mov
mov
loopne
mov
movsl
loopne
lcall
mov
mov
loopne
lret
movsl
loopne
movsl
loopne
jecxz
loopne
mull
loopne
push
movsb
loopne
lock
loopne
aam
loopne
stc
cmpsb
loopne
mov
cmpsl
loopne
movsl
mov
loopne
test
loopne
sbb
loopne
jb
loopne
adc
loopne
add
cmpsl
loopne
mov
movsl
loopne
stos
test
mov
mov
loopne
fisubs
mov
movsb
loopne
inc
mov
loopne
movsb
loopne
jle
loopne
inc
movsl
loopne
mov
mov
test
loopne
shll
loopne
imul
loopne
mov
loopne
insb
cmpsb
loopne
shrl
mov
cmpsb
loopne
mov
cmpsb
loopne
dec
test
loopne
push
test
mov
mov
loopne
inc
test
loopne
inc
cmpsb
loopne
or
loopne
push
cmpsb
loopne
jg
loopne
pusha
movsb
loopne
jl
loopne
and
loopne
or
loopne
mov
loopne
stc
test
mov
mov
loopne
in
loopne
add
loopne
cmp
loopne
mov
test
mov
movsb
loopne
jae
loopne
loop
loopne
jge
loopne
test
loopne
and
loopne
dec
mov
loopne
in
cmpsl
loopne
mull
loopne
or
loopne
aas
cmpsb
loopne
push
mov
loopne
imul
mov
mov
loopne
mov
cmpsb
loopne
cmp
mov
test
mov
cmpsb
loopne
dec
mov
loopne
or
movsb
loopne
inc
mov
loopne
jnp
loopne
mov
mov
mov
loopne
daa
test
loopne
or
loopne
mov
loopne
add
loopne
push
test
loopne
inc
test
mov
movsb
loopne
std
test
mov
mov
loopne
add
loopne
xor
loopne
mov
mov
loopne
inc
test
mov
movsb
loopne
out
loopne
cmpsb
loopne
lcall
mov
movsb
loopne
mov
loopne
mov
movsl
loopne
shlb
mov
cmpsb
loopne
lock
loopne
jae
loopne
lds
loopne
and
loopne
pusha
movsb
loopne
fsubl
loopne
cli
cmpsb
loopne
enter
pusha
mov
loopne
cmpsl
loopne
or
loopne
das
mov
loopne
aas
test
mov
cmpsb
loopne
stos
mov
loopne
lods
movsb
loopne
pop
movsl
loopne
sbb
loopne
or
loopne
and
loopne
sbb
loopne
leave
mov
loopne
test
loopne
push
test
loopne
in
loopne
cmpsb
mov
loopne
sub
loopne
lret
cmpsl
loopne
in
loopne
hlt
mov
loopne
cmp
mov
loopne
lods
mov
loopne
in
movsl
loopne
fsubl
loopne
shlb
loopne
mov
movsb
loopne
outsb
mov
loopne
and
loopne
inc
cmpsl
loopne
test
mov
mov
loopne
mov
movsb
loopne
push
cmpsl
loopne
jmp
loopne
sub
loopne
push
cmpsb
loopne
mov
mov
loopne
mov
loopne
out
loopne
push
movsb
loopne
mov
loopne
mov
loopne
sbb
loopne
xchg
loopne
inc
cmpsb
loopne
loopne
loopne
scas
movsl
loopne
je
loopne
cmpsb
loopne
jnp
loopne
cmpsb
cmpsl
loopne
outsl
mov
loopne
stc
mov
loopne
std
test
mov
movsb
loopne
shld
mov
movsb
loopne
pushf
cmpsl
loopne
jmp
loopne
dec
test
mov
mov
loopne
pushf
movsb
loopne
cli
test
mov
movsl
loopne
inc
test
mov
cmpsb
loopne
jns
loopne
fsubl
loopne
mov
loopne
mov
loopne
sbb
mov
mov
loopne
mov
loopne
xor
loopne
and
loopne
and
mov
test
loopne
add
loopne
and
loopne
cmpsb
loopne
mov
test
mov
movsb
loopne
cmp
loopne
sbb
loopne
push
cmpsb
loopne
movsl
loopne
cmpsl
loopne
dec
mov
loopne
daa
mov
loopne
cmp
loopne
nop
mov
loopne
insl
test
mov
mov
loopne
addr16
or
movsb
loopne
or
mov
loopne
and
loopne
sahf
cmpsl
loopne
push
test
mov
mov
loopne
or
loopne
andb
mov
cmpsl
loopne
inc
cmpsb
loopne
or
mov
loopne
in
mov
loopne
lods
mov
loopne
shlb
loopne
xor
loopne
add
movsb
loopne
adc
loopne
push
mov
loopne
sbb
mov
mov
loopne
add
mov
cmpsb
loopne
lock
loopne
imul
mov
cmpsl
loopne
mov
loopne
out
mov
loopne
xchg
test
mov
mov
loopne
outsl
cmpsb
loopne
mov
mov
loopne
and
loopne
push
cmpsb
loopne
dec
movsb
loopne
pop
cmpsl
loopne
xchg
movsl
loopne
push
cmpsl
loopne
insb
movsl
loopne
inc
test
mov
mov
loopne
mov
loopne
push
mov
loopne
inc
cmpsb
loopne
sub
loopne
xor
loopne
jg
loopne
bt
mov
mov
loopne
pop
cmpsb
loopne
inc
test
loopne
add
loopne
jne
loopne
mov
loopne
add
loopne
and
movsl
loopne
call
movsb
loopne
mov
mov
loopne
mov
movsb
loopne
sub
loopne
push
movsl
loopne
adc
loopne
and
cmpsl
loopne
adc
movsl
loopne
cmpsl
cmpsl
loopne
lds
loopne
jbe
loopne
andl
fisubrs
loopne
das
movsl
loopne
cmpsl
loopne
push
loopne
mov
cmpsl
loopne
out
loopne
pop
cmpsb
loopne
mull
loopne
int
loopne
lods
cmpsb
loopne
dec
movsl
loopne
popf
mov
loopne
es
loopne
ret
cmpsb
loopne
push
loopne
std
mov
loopne
in
loopne
andl
loopne
lea
loopne
xor
loopne
cmpsb
mov
loopne
in
mov
loopne
loope
loopne
shlb
loopne
jne
loopne
pop
mov
loopne
xchg
mov
loopne
jb
loopne
insl
cmpsl
loopne
dec
test
loopne
push
cmpsb
loopne
stos
test
mov
test
mov
test
mov
cmpsb
loopne
mov
test
mov
mov
loopne
cmp
cmpsl
loopne
mov
test
mov
movsb
loopne
xchg
mov
loopne
mov
loopne
hlt
mov
loopne
loopne
loopne
les
loopne
in
mov
loopne
push
test
loopne
pop
cmpsl
loopne
jb
loopne
sti
mov
loopne
scas
mov
loopne
pop
test
mov
cmpsl
loopne
rep
loopne
mov
mov
loopne
sub
loopne
int3
mov
loopne
shlb
loopne
xchg
mov
loopne
or
loopne
jg
loopne
bound
loopne
mov
cmpsb
loopne
repz
loopne
push
mov
loopne
loopne
loopne
stos
cmpsl
loopne
andl
loopne
fisubs
loopne
pop
cmpsb
loopne
ja
loopne
sbb
loopne
adc
loopne
lods
movsl
loopne
inc
cmpsb
loopne
fwait
cmpsb
loopne
mov
movsb
loopne
shlb
mov
movsl
loopne
repnz
mov
mov
loopne
adc
loopne
mov
loopne
in
loopne
push
mov
loopne
jo
loopne
shld
loop
loopne
cmpsb
loopne
scas
mov
loopne
inc
cmpsb
loopne
mov
mov
loopne
fwait
movsb
loopne
movsb
movsb
loopne
jl
loopne
push
mov
loopne
into
mov
loopne
push
cmpsl
loopne
mov
loopne
add
loopne
movsl
loopne
subb
mov
test
mov
test
loopne
xchg
loopne
inc
test
mov
cmpsb
loopne
dec
cmpsl
loopne
loop
loopne
inc
movsl
loopne
pop
movsb
loopne
inc
movsl
loopne
mov
mov
loopne
les
loopne
cld
movsb
loopne
mov
loopne
jns
loopne
pop
cmpsl
loopne
cmc
test
mov
movsl
loopne
mov
movsb
loopne
int
loopne
jnp
loopne
push
test
loopne
jge
loopne
sub
loopne
sahf
movsb
loopne
jl
loopne
dec
cmpsb
loopne
jl
loopne
xor
loopne
imul
mov
movsl
loopne
aam
loopne
std
movsl
loopne
aad
loopne
xchg
mov
cmpsb
loopne
outsb
cmpsb
loopne
jge
loopne
dec
mov
add
lahf
mov
cs
sahf
aad
out
xchg
inc
add
call
clc
jge
pop
jo
add
cld
pusha
add
cmp
add
add
add
fdivrl
add
sbb
jo
add
add
clc
test
clc
iret
je
jge
cmp
icebp
mov
clc
push
add
pop
mov
cmp
aam
add
sarl
clc
inc
add
mov
push
add
sub
clc
dec
bound
add
cmpsb
clc
push
fucomp
pop
out
movsb
clc
jmp
int
clc
push
pop
fucompp
push
add
js
clc
jno
add
bound
add
add
cmp
xchg
lock
add
push
add
rclb
add
frstor
clc
inc
add
lcall
push
add
repnz
cmc
movaps
add
pop
test
sbb
fs
pusha
add
jle
adc
pop
mov
clc
aad
fwait
and
add
mov
add
bound
add
add
mov
outsl
and
dec
and
add
clc
xor
add
shll
or
add
push
movsl
clc
dec
sahf
mov
cld
in
cmp
call
or
clc
jns
clc
jmp
stc
in
push
add
add
nop
cmp
inc
clc
fnsetpm(287
clc
jne
push
add
test
pop
out
setle
out
lahf
sar
adc
add
frstor
add
add
cmp
clc
mov
clc
imul
add
clc
sub
add
add
adc
add
clc
je
out
ret
clc
popf
xor
lods
lock
push
push
bound
add
mov
lods
sti
enter
call
xor
add
add
add
repnz
lret
clc
fdivr
gs
add
add
fisubrs
cmpsl
clc
in
stc
dec
cmp
cwtl
jno
add
and
add
add
xlat
aad
adc
clc
icebp
and
add
inc
add
adc
add
add
int3
xbegin
clc
mov
cmc
sar
add
out
loope
push
jae
add
add
add
xchg
mov
add
rorl
fadds
hlt
mov
adc
lahf
sar
mov
inc
add
sub
add
and
add
lea
add
sub
sub
cmp
sar
dec
nop
aas
data16
push
add
mov
aad
inc
clc
jns
sar
add
enter
add
ret
clc
xchg
repnz
daa
clc
aam
clc
mov
into
dec
ret
clc
lcall
fcomip
mov
cmc
sar
jae
add
out
out
scas
lods
in
cmp
clc
jp
add
add
sbb
pop
mov
push
add
or
enter
bound
add
sub
mov
add
cmp
mov
in
adc
add
jnp
xchg
pop
sbb
or
int3
mov
add
fistps
cmp
jne
pushf
pop
add
add
add
cmp
jbe
imul
add
mov
add
rcl
xchg
jg
mov
cmc
int3
dec
sub
add
inc
clc
or
add
xchg
push
sbb
add
std
shll
add
xchg
dec
xor
push
push
sar
outsl
mov
call
adc
add
clc
pop
pop
clc
inc
add
stos
cmp
sbb
clc
dec
sub
lock
lahf
adc
xchg
fstpl
xchg
and
add
fldl
add
mov
sub
add
mov
add
clc
fwait
cmc
inc
clc
sub
add
or
es
add
add
mov
clc
loopne
int3
cmp
clc
and
add
dec
and
add
test
nop
popf
gs
push
mov
xchg
sub
into
add
add
clc
adc
dec
rolb
imull
mov
mov
adc
add
mov
clc
sub
add
jg
add
cmc
stos
cs
clc
lret
mov
sub
add
jne
gs
add
add
clc
add
add
enter
mov
dec
jne
add
mov
es
cmp
cmp
or
jp
clc
notb
iret
or
inc
add
jl
clc
jge
adc
add
inc
add
mov
clc
sbb
push
test
xlat
ljmp
cmp
cld
cmp
rcll
cmp
and
pusha
add
ja
add
jno
add
cmp
add
fcmovb
clc
fs
gs
xor
add
add
add
iret
adc
add
adc
add
sub
cmp
jecxz
scas
insl
pop
xchg
fwait
jno
add
movsb
clc
leave
mov
data16
adc
add
push
clc
hlt
inc
add
mov
cmp
inc
clc
xor
add
jmp
clc
xchg
add
mov
ss
sbb
jbe
add
std
cmp
and
add
mov
adc
add
mov
jbe
lret
add
add
outsl
popf
setl
pop
or
adc
pop
jp
dec
scas
push
jno
add
clc
imull
clc
fadd
clc
clc
xlat
cs
xor
add
push
add
xor
add
adc
add
mov
cld
out
aam
clc
cli
into
or
aam
jne
lret
cmp
clc
mov
xchg
outsl
daa
clc
push
add
scas
xchg
cmp
add
xchg
xchg
aam
adc
add
outsl
cld
add
add
inc
clc
inc
add
popf
fxch
xchg
adc
add
xor
add
clc
mov
or
jle
aas
lock
hlt
ja
add
fs
jge
clc
ret
clc
sub
cmp
xchg
imul
add
cltd
imul
mov
repnz
clc
pop
mov
imull
push
add
jg
clc
inc
clc
bound
add
add
dec
mov
clc
cmp
add
pushf
int
push
pop
mov
movsl
clc
idivl
mov
fcomps
push
add
xchg
mov
clc
in
dec
jae
add
and
add
mov
in
push
mov
pop
add
add
insb
sub
idivb
scas
xor
mov
push
or
negb
clc
jl
add
jb
add
xor
xlat
mov
sbb
clc
pop
xor
add
cmp
clc
mov
push
add
dec
adc
add
add
cmc
cmp
into
jnp
fadds
std
into
nop
fisttpl
add
fistpl
enter
sub
out
mov
clc
ret
clc
das
jecxz
popa
add
pop
sub
cli
clc
xlat
jl
add
jo
add
mov
jo
add
add
pushf
adc
add
add
xchg
cmp
clc
push
fs
cmp
xchg
pop
sub
clc
push
add
nop
lcall
aad
sbb
cmp
fwait
cmp
in
pop
add
add
cmp
and
add
dec
push
std
or
test
decb
add
je
stos
sub
clc
cmp
ret
cli
sub
add
mov
adc
xchg
mov
clc
cmp
add
js
dec
dec
jmp
add
jo
add
add
sar
out
add
add
clc
pop
xchg
es
mov
clc
push
add
jo
add
add
push
add
xchg
xabort
out
call
pushl
mov
aad
mov
fwait
sbb
add
data16
adc
add
ret
clc
cmpsb
clc
repnz
add
cmpsb
clc
ret
clc
pop
sbb
clc
lahf
or
clc
lahf
add
mov
das
add
add
add
dec
xchg
in
inc
clc
mov
pop
lcall
adc
lea
mov
je
in
sbb
clc
mov
pop
in
mov
clc
loop
imul
add
add
xchg
cmp
clc
jnp
xchg
xchg
cmp
lcall
pusha
add
popf
xor
sub
add
add
das
adc
add
sub
add
xchg
pop
shlb
cwtl
mov
ljmp
cmp
syscall
clc
dec
xor
add
aas
jecxz
push
mov
jbe
sbb
clc
and
add
inc
add
jb
add
clc
shlb
mov
add
xchg
imul
inc
clc
arpl
add
add
push
clc
leave
pusha
add
aad
push
fists
add
add
jb
add
mov
add
dec
jmp
clc
fucom
clc
cmp
clc
in
stc
jecxz
mov
mov
test
pop
and
mov
add
inc
add
xor
add
int
fidivrs
out
clc
data16
mov
mov
out
sbb
out
xor
inc
add
dec
es
add
add
add
dec
ss
stc
call
clc
and
add
clc
jbe
xabort
clc
pop
lods
fucomp
jo
add
aam
add
add
and
pop
clc
js
sbb
adc
add
insl
insl
lret
dec
cmpsl
clc
dec
xchg
mov
add
enter
xor
add
add
mov
test
inc
clc
in
mov
add
jg
clc
pop
xor
add
clc
aaa
stos
clc
out
and
add
insb
hlt
lfs
pusha
add
ja
in
mov
add
cmp
push
clc
inc
clc
ds
sub
sar
xchg
sub
clc
push
add
jmp
xabort
loopne
mov
mov
add
lods
pop
push
xchg
xor
add
add
mov
clc
mov
clc
cmpsl
clc
mov
mov
stc
movsb
clc
addr16
sub
sbb
popf
push
int3
iret
cli
aas
xchg
lea
gs
cmp
test
add
add
add
xchg
inc
clc
mov
pushf
dec
push
fsubrs
push
pop
lahf
mov
mov
mov
add
mov
adc
add
add
xchg
scas
out
dec
add
add
cwtl
popf
cwtl
mov
hlt
adc
add
clc
mov
add
xchg
mov
pop
icebp
stos
ficoms
sbb
jae
add
repz
mov
add
xor
add
clc
popa
add
cmp
lea
addr16
mov
clc
inc
clc
aaa
out
mov
bound
add
clc
clc
lahf
lock
pop
test
cmp
pop
repnz
add
rcrl
nop
and
cmp
clc
inc
add
jmp
add
pop
and
xor
add
add
lahf
xchg
or
and
in
mov
jge
clc
cmp
and
jns
clc
cmp
in
popf
out
loope
mov
mov
mov
clc
add
xchg
dec
jbe
fbstp
testb
mov
jo
add
mov
or
clc
fs
nop
push
add
stos
jns
add
int3
out
pop
dec
mov
add
xor
add
jns
jp
cmp
clc
cltd
aad
mov
push
lret
xchg
mov
jo
add
add
pop
and
lcall
add
lock
mov
clc
rcll
add
bound
add
add
xor
add
xlat
cli
and
add
add
das
jbe
clc
cwtl
sahf
aad
sbb
clc
mov
sarb
jge
sbb
addr16
mov
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
sbb
cmc
jnp,pt
or
clc
cmp
add
push
int3
out
sub
pop
pop
shll
mov
das
clc
in
xor
sbb
add
stos
lea
add
push
add
lahf
out
cld
enter
and
push
pop
das
jge
add
rolb
add
add
push
add
push
dec
imul
lods
lods
push
stos
and
add
jg
clc
lods
clc
cltd
mov
popa
add
cli
ss
fdivrs
cmp
clc
and
add
add
push
add
add
add
jmp
and
or
sbb
clc
ja
ljmp
cld
jmp
aaa
mov
addb
clc
ret
clc
pop
es
add
add
add
add
clc
sub
add
shl
clc
sarl
loope
ja
clc
mov
push
jns
mov
or
adc
add
mov
pusha
add
dec
rcl
adc
add
shr
push
add
push
jmp
sub
mov
sahf
call
pop
and
add
adc
add
imulb
push
test
int
pop
jae
jmp
inc
jg,pn
dec
hlt
pop
lahf
and
add
add
sbb
clc
in
xchg
cmp
mov
clc
fldcw
mov
jne
mov
cmp
clc
mov
mov
and
add
add
push
imul
fiaddl
add
add
ds
xchg
mov
add
clc
in
sar
add
sbb
in
or
add
add
mov
mov
clc
push
ret
std
push
add
pop
mov
lret
insb
scas
sbb
and
clc
pushf
out
sub
pop
jo
add
dec
push
add
add
jmp
pop
push
adc
pop
sub
add
ret
add
call
clc
inc
clc
mov
mov
push
push
cld
jmp
or
add
mov
jnp
clc
nop
pop
jp
add
clc
nop
imul
clc
in
sbb
cmp
adc
add
add
stos
lock
dec
jno
add
popf
pop
clc
sti
push
addl
aaa
mov
cmp
clc
mov
clc
push
mov
push
ret
imul
sldt
add
inc
add
ss
mov
add
cmp
jae
jmp
ja
xor
add
clc
push
arpl
add
and
notl
clc
nop
cmp
clc
mov
cmp
jmp
sub
adc
add
add
sbb
xchg
movsb
clc
jae
add
lock
stc
int
add
pop
rcll
add
insl
jo
add
test
pop
clc
adc
add
ret
clc
add
add
rclb
or
add
add
add
scas
xchg
and
and
add
add
ret
clc
cmpsb
clc
sbb
inc
clc
icebp
jg
loopne
shr
je
clc
jb
add
add
rorl
std
add
fldenv
add
mov
mov
leave
mov
sub
add
call
push
lea
adc
add
sub
dec
mov
clc
or
pop
and
add
add
punpckhwd
xlat
sub
add
shrb
adc
add
jl
add
adc
add
add
dec
bound
add
hlt
nop
inc
add
jmp
shlb
xchg
cmp
nop
mov
pop
adc
adc
repnz
clc
mov
dec
cmp
add
add
xchg
je
add
xor
add
add
add
push
clc
lods
add
add
add
pushf
sbb
mov
cmp
inc
clc
pusha
add
ljmp
cmp
add
lods
ret
shr
cld
jmp
sub
push
add
shll
sbb
bound
add
das
out
dec
in
repz
imul
jae
add
sar
dec
jo
add
clc
test
clc
mov
clc
mov
cmp
scas
sar
leave
fdivrl
cld
repnz
call
add
pop
pop
lahf
outsl
cmp
sub
clc
repz
dec
pop
loope
stos
pop
ficoml
add
adc
add
mov
jb
add
add
cld
jmp
scas
xchg
pop
lock
fwait
js
inc
clc
das
ret
clc
xchg
lret
sar
clc
movsb
clc
or
dec
out
movsb
clc
pop
std
in
xchg
data16
pop
scas
jb
add
mov
cld
jmp
sbb
inc
clc
out
mov
clc
je
clc
fprem1
fimull
add
push
pop
clc
mov
clc
push
add
xchg
mov
iret
adc
add
add
add
add
add
or
add
sbb
cltd
lea
add
lcall
xor
add
add
clc
mov
arpl
add
pop
cs
sahf
mov
xabort
mov
add
imul
clc
xor
clc
push
xchg
mov
xor
add
loopne
movsl
clc
data16
xabort
clc
clc
inc
clc
clc
inc
add
shlb
pusha
add
push
lret
out
xchg
scas
jae
add
or
test
sar
jge,pt
add
enter
or
add
arpl
add
je
add
lea
insl
cmp
add
add
push
add
ficompl
outsb
bound
add
clc
ss
pop
inc
clc
loop
push
jb
add
js
add
ja
add
sub
outsb
push
add
mov
imul
mov
add
stc
das
lea
push
clc
push
add
inc
clc
aas
icebp
jb
add
add
push
add
scas
cmpsb
clc
out
mov
clc
daa
clc
mov
push
jge
call
cld
jmp
fwait
and
add
add
push
add
or
add
clc
je
push
lret
pop
cld
jmp
pop
sub
nop
sub
mov
and
add
sbb
jmp
push
sub
aaa
inc
fsub
clc
cmpsb
clc
ss
roll
adc
add
hlt
scas
mov
inc
clc
in
arpl
add
mov
add
jb
add
clc
mov
cmp
add
pop
lret
stos
stos
add
add
adc
add
add
clc
ffreep
clc
popa
add
xor
jns
cmpsl
clc
cmpsl
clc
xchg
repz
add
imul
push
mov
cld
jmp
cwtl
sub
add
cwtl
psadbw
sbb
add
sub
clc
sbb
and
add
pop
cltd
clc
cld
xor
clc
lret
sub
lea
push
or
cltd
jp
clc
imul
clc
jp
cmp
add
push
lea
add
test
add
adc
add
out
idiv
xlat
and
add
clc
stos
jecxz
out
test
clc
sldt
add
xbegin
inc
clc
sar
ja
in
pushf
dec
shlb
data16
test
clc
mov
clc
aad
mov
cld
jmp
pop
or
cmp
sub
lock
cld
jmp
ja
sub
add
icebp
sbb
shll
bswap
push
add
jl
lods
dec
xor
add
pusha
add
fwait
pop
aam
xchg
dec
add
add
loope
jl
push
shll
or
add
jmp
sar
clc
lods
xor
add
ror
add
add
xchg
mov
lahf
cmp
mov
clc
push
pop
in
cld
jmp
sbb
jge
scas
and
negb
fwait
add
add
jb
add
add
clc
inc
clc
pusha
add
mov
clc
mov
out
mov
sbb
clc
data16
cwtl
mov
dec
sub
lock
clc
cmp
push
loop
xchg
sub
add
fadd
clc
mov
push
clc
outsb
mov
xor
xor
xabort
add
test
jmp
clc
hlt
xor
cld
jmp
ja
add
push
push
add
sbb
aaa
pushl
out
ja
test
jnp
jmp
clc
js
clc
dec
fdivl
add
xchg
imul
clc
lcall
clc
cwtl
ret
cmc
xor
add
add
add
adc
add
clc
cmp
clc
mov
pop
imul
jne
add
add
add
clc
enter
dec
push
adc
add
dec
or
je
cmp
inc
clc
ss
add
mov
and
add
xchg
dec
add
add
clc
fcoms
mov
insl
xchg
or
cld
jmp
scas
outsl
push
mov
add
add
jle
or
pop
xor
add
or
add
clc
jae
add
fisubl
adc
add
clc
test
mov
lea
call
cld
jmp
sub
lret
add
pop
clc
sar
clc
loopne
mov
fsubrp
cmp
clc
fcomp
cmpsl
clc
lea
cld
jmp
dec
push
fwait
pop
jg
clc
and
add
cmp
add
add
lods
adc
add
add
xchg
mov
sub
clc
aas
inc
clc
cmc
int
xabort
push
add
cmp
sti
lahf
adc
fcoms
add
rcll
push
clc
lret
sub
cmp
add
data16
and
mov
dec
inc
add
adc
add
add
into
cmp
lea
sar
pop
mov
jmp
cmpsb
inc
sub
aaa
ss
bound
add
lods
punpckhwd
add
std
xabort
pop
in
xchg
pop
clc
outsb
and
add
add
jo
add
fistps
clc
lea
mov
xor
add
clc
xor
add
add
into
negb
pop
test
mov
pop
dec
dec
cmp
add
add
and
add
pop
and
add
clc
lods
sahf
push
fs
out
mov
cmpsl
clc
movsb
clc
idivb
mov
clc
pop
mov
fwait
ret
loope
ljmp
clc
fwait
adc
add
sbb
clc
ljmp
jae
add
sarl
arpl
add
add
add
add
add
pop
push
sub
clc
xchg
mov
clc
decl
mov
add
jmp
mov
loopne
loope
ljmp
int3
xchg
push
jo
add
add
add
fwait
adc
clc
std
ljmp
add
cli
mov
cmp
clc
test
scas
pop
adc
enter
frstor
push
jmp
data16
std
xchg
lods
mov
int
xbegin
cwtl
test
fmull
mov
cld
jmp
lods
jp
push
test
in
push
add
js
adc
mov
push
clc
sar
add
inc
add
jbe
clc
mov
int3
sub
clc
cs
add
fbld
add
jnp
push
add
add
pop
cltd
or
scas
insb
ret
out
xchg
jle
inc
clc
stos
test
sub
clc
sbb
scas
imul
in
aam
mov
clc
test
and
add
add
popf
nop
fwait
repz
mov
clc
out
cli
pop
mov
add
and
add
fidivl
add
clc
xor
xor
add
sbb
icebp
cmp
clc
gs
xbegin
add
fsts
cli
cmp
clc
out
ss
clc
xchg
cmp
js
jmp
sub
sar
clc
push
add
pushf
aaa
and
add
add
add
add
add
clc
and
sub
xchg
adc
add
cmp
mov
xbegin
mov
repnz
pop
mov
push
or
clc
bound
add
dec
clc
jbe
in
dec
mov
repnz
push
lahf
jp
cmp
add
clc
gs
adc
sar
stos
lock
clc
add
cld
jmp
sub
scas
or
outsl
sbb
repz
clc
gs
jge
fs
pushf
leave
sahf
lret
mov
add
jmp
push
cwtl
sub
push
aas
ret
clc
or
cmp
jae
add
xor
add
ret
clc
jle
lret
enter
add
mov
pusha
add
test
add
lods
cmc
mov
push
add
or
add
cmp
clc
push
add
push
div
cld
jmp
mov
pop
je
fldenv
add
or
push
cld
jmp
popa
add
xor
add
xabort
clc
xchg
aad
cwtl
pop
daa
clc
lods
sub
and
add
xor
add
fisttpll
inc
add
and
add
or
add
or
out
lea
clc
imul
mov
fcomp
and
clc
out
int
add
cmp
add
add
pop
pop
cmp
arpl
add
inc
clc
call
jbe
movsb
clc
add
clc
mov
repz
enter
add
cmp
jle
clc
add
sbb
call
scas
popl
add
jo
add
add
cmp
ljmp
clc
push
adc
add
enter
add
push
add
insl
fwait
scas
int3
cmp
clc
ds
gs
in
int3
lods
scas
test
data16
das
mov
dec
sub
loop
scas
fwait
ss
inc
clc
hlt
stos
mov
clc
mov
add
jmp
add
pop
jnp
inc
clc
add
add
insl
out
push
add
pop
hlt
dec
mov
mov
sti
xchg
add
xor
add
add
clc
enter
add
clc
jbe
add
sub
aad
and
jb
add
xchg
mov
dec
adc
add
mov
add
jge
push
ret
add
cld
jmp
subb
clc
cltd
repz
add
push
scas
jno
add
pop
ftst
clc
int
ss
add
stos
in
popf
sub
jl
aas
mov
mov
cld
jmp
or
clc
sub
add
es
sar
test
mov
clc
add
add
add
std
or
leave
jae
add
lock
ljmp
cld
jmp
fs
sub
into
add
add
sahf
and
add
add
ret
clc
pop
int3
hlt
ljmp
clc
fxch
mov
dec
mov
add
add
add
add
je
mov
add
add
add
pop
lret
add
lock
dec
mov
arpl
add
xchg
cmp
jecxz
addr16
cmp
cs
sbb
es
mov
aam
push
add
xor
add
clc
xchg
outsb
jmp
clc
gs
sub
add
loopne
cmp
fimuls
clc
movsb
clc
mov
clc
xlat
xchg
in
lahf
inc
clc
jne
mov
ss
cmpsb
clc
or
popf
mov
clc
out
cld
and
or
add
test
adc
add
add
cld
jmp
das
lea
fmuls
clc
mov
clc
and
add
gs
outsl
enter
out
aam
clc
inc
clc
out
push
add
pop
clc
dec
adc
add
add
or
and
int
add
insl
imul
imul
aaa
sub
mov
pusha
add
ja
add
out
es
lods
lods
dec
hlt
rclb
adc
data16
and
add
mov
in
aad
add
in
scas
clc
jg
adc
add
jl
add
cld
lock
mov
sub
lcall
clc
xor
add
xchg
outsl
jbe
add
negb
add
adc
and
clc
inc
add
or
test
cmp
data16
sbb
aaa
push
clc
jl
bound
add
clc
scas
sub
xor
sahf
jbe
cmp
or
add
lea
clc
mov
sti
addr16
out
cmc
sbb
push
pop
inc
clc
icebp
cs
addr16
ficompl
jp
loopne
fucomip
mov
add
pop
xor
add
jb
add
cmpsl
clc
std
pop
pmulhw
je
leave
mov
clc
loopne
ret
clc
pop
ret
cmp
clc
mov
test
jg
add
testl
jge
add
add
and
add
arpl
add
jmp
cs
clc
bound
add
add
pop
lea
xlat
and
add
clc
xor
add
and
add
push
ss
ret
xchg
push
outsl
adc
aas
mov
mov
adc
add
cmp
clc
ret
clc
xor
add
add
inc
add
add
add
stos
sar
imul
inc
add
add
add
rorl
jae
add
cmp
dec
jno
add
rcrl
or
sti
test
dec
addr16
lret
int3
push
pop
ss
ret
cmp
dec
sub
jg
jp
pop
ss
ret
push
add
scas
daa
clc
ds
clc
push
add
and
dec
call
add
clc
iret
inc
add
adc
repz
cltd
insl
dec
jl
inc
add
mov
xchg
sub
clc
stos
test
jno
add
add
mov
add
xchg
xor
add
mov
cld
jmp
xchg
je
push
cmpsb
clc
cs
pusha
add
enter
outsb
mov
add
testb
cli
clc
xchg
mov
out
lret
scas
not
inc
add
mov
push
add
cmp
add
jno
add
ffree
clc
pop
inc
clc
enter
clc
xor
add
shlb
inc
add
ss
cs
add
cld
jmp
mov
outsl
rcrl
inc
add
adc
add
cli
xlat
cltd
mov
pop
sub
clc
inc
add
xchg
outsl
mov
clc
dec
pop
bound
add
add
stos
add
add
int
add
repz
add
clc
mov
jg
inc
add
jle
lea
sub
sahf
inc
clc
cmpsl
clc
push
clc
pop
mov
clc
cwtl
inc
clc
stos
cmp
clc
mov
add
push
pushf
out
addr16
xor
add
add
movsl
clc
pop
in
cmp
sar
dec
fists
add
clc
cmc
sbb
sub
jmp
movsb
sub
and
sbb
clc
sbb
add
xor
add
imul
or
mov
add
clc
jmp
clc
out
mov
test
mov
adc
add
in
push
add
cmp
add
add
es
fistl
add
clc
jmp
clc
aaa
sti
call
jb
add
sub
add
pop
fldcw
loopne
clc
mov
aas
adc
xbegin
pop
jg
and
add
add
pop
clc
fisubl
add
mov
jo
add
clc
pop
xor
add
lcall
mov
mov
clc
lea
jmp
imul
add
sub
clc
xor
add
clc
cmp
add
mov
movsb
clc
cmp
or
xchg
aas
add
add
sbb
add
jg
clc
sub
add
in
loop
or
add
sar
out
mov
add
ja
clc
gs
movsb
clc
mull
push
ret
clc
fxtract
call
in
stos
pop
imul
add
add
mov
add
hlt
jne
jge
adc
add
pop
clc
push
fs
pop
xchg
sub
jecxz
cmp
clc
cmp
jp
sub
add
loopne
or
fdivs
clc
insb
jecxz
pop
repz
sar
sbb
cmpsl
clc
inc
add
loop
mov
push
cmp
clc
out
ret
clc
outsb
out
das
ljmp
jle
add
jmp
xchg
pop
sub
add
lock
jno
add
pop
mov
or
clc
imul
and
add
add
ds
imul
and
add
add
clc
shrb
test
add
cld
jmp
rclb
clc
outsb
jns
icebp
scas
out
cmp
clc
scas
sar
xchg
jns
in
add
add
sbb
repz
xor
clc
inc
clc
cmp
xabort
clc
mov
clc
mov
jmp
clc
adc
add
add
popa
add
pop
dec
imull
addr16
fwait
ss
inc
clc
stos
mov
mov
clc
or
lock
sbb
xchg
repz
sar
clc
mov
add
rorb
clc
in
fwait
xchg
pusha
add
ss
jnp
xor
cld
jmp
or
pop
push
xchg
mov
add
icebp
jecxz
cmp
mov
clc
fistpl
mov
clc
xor
add
xchg
sbb
add
fs
rolb
scas
mov
ret
jnp
jns
add
int3
lea
add
sbb
hlt
xbegin
decb
stos
push
mov
ret
clc
adc
add
clc
in
pop
clc
and
xchg
das
jbe
clc
jmp
in
inc
clc
pop
cmp
add
jg
clc
pop
push
cmpsb
clc
xor
add
mov
add
aaa
popa
push
or
mov
daa
clc
jge
pop
movsl
clc
sbb
cmc
aas
cmc
ret
xor
add
add
add
pop
out
dec
pop
dec
xor
arpl
add
clc
push
xchg
push
cmpsl
clc
jns
add
into
push
push
or
inc
clc
inc
add
enter
mov
movsb
clc
test
sbb
mov
cmp
cli
loopne
add
clc
or
sar
pop
cltd
in
mov
clc
movsb
clc
cmp
clc
jnp
add
lea
add
clc
out
js
or
add
add
pop
enter
cmp
dec
mov
jmp
imul
mov
clc
jbe
lret
out
sbb
xchg
jno
add
add
sub
jecxz
aaa
mov
push
loop
xbegin
add
add
or
add
add
insl
jp
cmpsl
clc
into
int3
in
popf
push
jne
cld
jmp
aam
mov
mov
adc
jmp
jg
sbb
outsl
popa
fs
jmp
insb
cmp
clc
mov
mov
pop
dec
stc
pop
cwtl
scas
notb
add
adc
das
stos
idivl
xor
add
push
clc
dec
push
add
add
mov
sbb
jmp
sbb
es
js
fldcw
std
es
xchg
push
add
add
outsb
mov
cwtl
jno
add
adc
jmp
dec
data16
sbb
xchg
and
add
xor
add
mov
mov
imul
sub
push
ret
scas
mov
cmp
mov
clc
jp
jbe
clc
hlt
or
sub
mov
clc
jo
add
clc
cmp
sar
push
test
pop
push
and
cld
jmp
fs
jno
add
in
test
xor
add
add
js
arpl
add
adc
cli
mov
clc
push
mov
repz
popa
add
mov
inc
clc
xchg
lea
dec
cld
jmp
jp
and
sub
clc
fwait
sti
mov
cmp
imulb
cmpsl
clc
mov
add
fsts
add
in
dec
push
add
or
pop
fldcw
add
jl
scas
fisttpll
add
dec
das
fiadds
aaa
jg
in
cmp
faddl
add
push
sub
cs
xchg
sbb
nop
in
bnd
add
add
jo
add
cmp
aam
clc
sbb
jmp
sub
es
push
add
gs
jno
add
rep
cld
jmp
inc
sahf
add
xor
add
clc
mov
clc
mov
clc
jne
sub
test
je
fs
jle
inc
clc
bound
add
push
pop
add
insb
sub
cmp
add
pop
ret
clc
leave
clc
add
add
ja
clc
push
not
ss
ret
scas
add
add
dec
push
mov
cld
jmp
adc
sub
insl
mov
add
clc
ret
clc
mov
add
push
add
fwait
sar
lcall
clc
popf
or
xor
add
clc
lods
addr16
movsl
clc
pushf
lods
imul
sbb
js
div
lcall
loop
sub
pop
dec
negb
sub
add
lock
jmp
push
pop
sbb
in
stc
add
adc
loop
cmp
clc
or
lods
dec
add
add
xbegin
add
add
clc
out
inc
clc
jmp
add
xchg
ficomps
clc
mull
add
add
or
clc
and
clc
fstps
add
cmp
pusha
add
outsb
and
mov
sub
cmc
cmp
and
mov
push
push
hlt
sub
clc
or
clc
mov
sti
lret
and
add
add
cmp
add
test
sbb
add
sbb
dec
inc
add
add
add
add
call
in
add
sub
add
push
pop
pop
clc
mov
bound
add
and
add
or
out
repz
xor
add
leave
cmpsl
clc
fcomp
mov
sti
cld
jmp
outsl
add
adc
icebp
mov
clc
arpl
add
xor
add
out
push
jne
cld
jmp
sbb
clc
add
add
add
add
xchg
bound
add
clc
pop
mov
clc
cmp
aas
test
add
xchg
xchg
ret
add
adc
add
jno
add
dec
sbb
add
or
inc
add
and
add
es
out
stos
mov
test
cs
test
push
add
jmp
mov
add
or
enter
jecxz
jnp
mov
and
add
clc
dec
int3
sub
adc
test
pmulhw
jns
add
dec
out
fwait
aam
in
inc
clc
psllw
xchg
xor
add
clc
mov
push
out
cld
jmp
fcmovbe
sar
push
mov
mov
imul
clc
cmp
aam
data16
dec
sbb
clc
pop
pop
cld
fdiv
add
jge
movsb
clc
test
dec
add
cld
jmp
sub
lahf
int3
and
mov
inc
clc
lods
and
add
xchg
inc
add
testb
stos
sbb
and
add
cmp
ds
add
mov
out
xchg
dec
enter
add
xabort
es
cmp
push
clc
adc
or
movsb
clc
into
stos
aad
sub
lods
cmp
add
std
jle
push
add
cld
jmp
outsl
push
lea
or
mov
jo
add
adc
or
fwait
dec
int
add
data16
cs
push
mov
xchg
pusha
add
imul
cmp
add
cmpsb
clc
xbegin
cwtl
call
add
push
add
aas
sbb
jmp
mov
sahf
dec
jp
out
fcoml
add
stos
stos
mov
jmp
lea
add
mov
xlat
in
add
gs
jmp
pop
stc
mov
jmp
test
sti
scas
out
call
fs
fs
or
sbb
add
cmp
cmp
jae
add
rol
clc
or
add
lret
cmp
add
inc
add
dec
in
cs
mov
clc
cmp
clc
and
movsl
clc
cld
gs
hlt
jne
push
loop
cmp
incl
repnz
add
xor
add
std
mov
xchg
mov
inc
add
scas
sbb
outsl
imul
clc
jo
add
push
add
mov
gs
pop
cmp
add
and
mov
and
add
cmp
add
mov
sbb
clc
push
mov
gs
dec
int
add
sar
add
cli
add
add
leave
xchg
add
add
cmc
add
clc
ret
mov
imul
mov
pop
arpl
add
clc
mov
or
add
test
add
cld
jmp
mov
cmp
and
cld
jmp
xor
add
clc
test
dec
mov
jmp
push
or
sahf
push
push
add
mov
add
or
clc
push
add
dec
xbegin
add
mov
mov
jecxz
fsubr
inc
add
mov
inc
add
mov
clc
xchg
je
push
jmp
sbbb
push
or
add
es
lret
sbb
clc
cmp
push
shrb
add
idivb
clc
ljmp
clc
out
ret
clc
data16
cmp
clc
enter
clc
adc
cmp
scas
ret
clc
push
daa
clc
cmc
jle
xchg
mov
idiv
cmp
add
dec
insl
lock
jo
add
add
push
clc
push
cld
jmp
lods
loop
fsubrs
cld
jmp
cwtl
or
movsl
clc
pop
jmp
cmp
cld
cs
jmp
cld
jmp
imul
mov
add
pop
pop
xor
add
clc
add
add
adc
jmp
sahf
inc
fwait
mov
ljmp
xor
add
loope
aas
and
add
add
inc
add
cmpsl
clc
cmp
clc
bound
add
clc
jmp
sti
popf
dec
pusha
add
and
add
fbstp
popf
je
pop
clc
dec
popf
push
and
add
add
push
or
inc
add
leave
xchg
test
push
add
xchg
aad
imul
lret
add
push
add
xchg
xor
add
cltd
jg
clc
cmp
add
sbb
pop
jnp
lods
mov
clc
fidivrl
cmp
cmp
sar
cmpsl
clc
insb
fcoml
add
add
sar
aas
pop
add
add
inc
add
inc
add
fs
lahf
fadds
jmp
add
clc
lret
fmuls
or
and
add
out
mov
clc
cmc
dec
xor
add
mov
add
pushf
fs
jae
add
lcall
or
out
add
add
scas
xchg
leave
xchg
pushf
out
dec
xchg
outsb
cmc
out
enter
adc
add
push
add
daa
clc
sbb
bound
add
jge
clc
mov
clc
mov
jmp
sub
push
xchg
cvttps2pi
cmp
jg
data16
gs
vaddps
xor
add
add
test
xchg
mov
daa
clc
inc
add
mov
clc
adc
ja
add
cld
jmp
cs
sbb
add
cld
jmp
insb
or
pushf
addr16
xchg
sar
leave
cmpsl
clc
or
pop
push
add
push
add
cmp
arpl
add
add
push
push
add
add
add
sub
insb
jmp
clc
arpl
add
clc
imul
add
clc
or
add
stc
or
sbb
cmp
lret
sbb
push
ret
dec
or
fdivl
add
xor
clc
mov
imul
iret
mov
into
push
add
sub
loop
std
push
add
aas
inc
add
clc
or
clc
add
add
fsts
add
std
inc
add
cmp
clc
push
cld
aam
clc
mov
sub
clc
popa
add
cmp
clc
mov
clc
notl
mov
ss
dec
jnp
push
cmp
inc
add
sahf
insb
sub
je
testb
scas
daa
clc
or
add
imul
mov
cld
jmp
lea
add
pop
mov
jp
mov
clc
add
add
add
sbb
je
sub
push
ret
push
xchg
lret
cmp
clc
add
cmc
cmp
add
idiv
cld
jmp
test
clc
pop
mov
mov
clc
test
or
cld
jmp
pop
popa
inc
cmp
add
and
add
imul
clc
jle
stos
scas
and
add
imul
lcall
mov
sar
cltd
pop
or
clc
cmp
xchg
push
add
jp
adc
add
dec
dec
movsb
clc
pusha
add
mov
add
es
loope
insl
ja
add
dec
jl
mov
pop
add
mov
jno
add
or
xchg
push
add
cmp
jb
add
push
cmp
add
clc
hlt
repnz
scas
outsb
jbe
adc
aad
call
add
mov
add
mov
ds
stos
inc
clc
pushf
cltd
sbb
sbb
jmp
add
insb
je
adc
out
outsl
nop
cld
push
pop
mov
mov
sub
or
xchg
lahf
push
jmp
pop
scas
sub
outsb
inc
clc
mov
clc
lcall
in
and
add
or
clc
cmp
nop
mov
push
clc
jecxz
or
inc
add
sahf
push
cmp
clc
cmp
stos
ss
add
adc
add
aas
dec
in
ds
push
add
push
add
jno
add
add
mov
fistpl
psllq
cmp
in
nop
mov
jo
add
or
add
mov
add
cld
jmp
ja
mov
adc
add
add
cwtl
xchg
mov
pop
clc
add
add
clc
popa
add
or
clc
dec
repz
jb
add
clc
gs
clc
jbe
vmovlps
add
stos
pop
aam
add
outsl
and
add
jecxz
xchg
push
xchg
pop
mov
xchg
add
and
in
ficoml
add
pop
add
add
push
jmp
push
mov
mov
jbe
push
add
xor
add
jns
lods
pandn
outsl
cmp
into
insb
push
add
mov
fwait
cmp
and
jp
jle
clc
pslld
test
cmp
clc
mov
add
bound
add
adc
add
clc
aam
clc
xchg
or
pop
loop
int3
jae
add
jne
cld
jmp
fsubs
add
cs
cmp
je
clc
popf
pop
clc
out
lahf
cmp
mov
add
add
add
leave
pop
loopne
xchg
cmc
pop
clc
sub
pop
aad
add
sbb
mov
sub
sbb
mov
push
cmp
insb
push
dec
cld
jmp
xchg
and
fnstsw
clc
jge
jno
add
add
das
movsb
clc
out
mov
pusha
add
inc
add
insb
arpl
add
arpl
add
pop
rcll
clc
push
add
mov
fwait
and
add
clc
xchg
adc
add
mull
lods
sahf
dec
sub
mov
add
add
or
xor
add
add
outsb
mov
cmp
ljmp
ljmp
mov
mov
mov
push
add
clc
shll
add
cmp
mov
inc
add
and
dec
jl
out
add
add
clc
loop
jns
clc
mov
js
cmp
fdivrl
gs
sub
clc
jl
sub
mov
cmpsb
clc
adc
add
add
push
add
mov
add
cmpsb
clc
jnp
lret
cmp
add
pop
add
add
mov
xchg
mov
jnp
ss
test
stos
hlt
pusha
add
testb
jno
add
add
mov
mov
ja
clc
xbegin
jo
add
xchg
mov
pop
movsl
clc
imul
jb
add
das
adc
jne
clc
testl
clc
pop
clc
mov
jb
add
inc
clc
aas
test
mov
mov
ds
dec
sbb
jmp
imul
sbb
jmp
jg
jge
jp
add
rolb
push
cld
jmp
cmp
sub
xchg
pop
addr16
cmp
clc
push
test
cld
jmp
and
ja
outsl
add
add
add
clc
lcall
mul
clc
mov
push
mov
jmp
cmp
add
das
ficomps
sahf
test
movsb
clc
lahf
scas
add
add
add
mov
push
add
add
push
add
pop
push
add
ljmp
clc
or
mov
stc
cmp
sbb
add
out
dec
xor
add
clc
push
stc
inc
clc
gs
enter
adc
sub
clc
push
add
or
clc
or
add
xabort
xchg
sahf
outsb
shll
inc
clc
mov
mov
cmp
add
or
push
cmp
cld
jmp
sub
adc
sar
cmp
xchg
enter
int3
add
add
inc
clc
cmp
test
pop
icebp
inc
clc
mov
or
add
dec
and
add
clc
cmp
mov
testb
jae
add
xlat
enter
outsb
jmp
mov
sbb
cmp
jmp
mov
cmp
mov
sbb
mov
xchg
pop
filds
pop
push
add
rcrl
xchg
into
lret
add
add
add
jmp
clc
lret
icebp
mov
push
jns
pop
ss
xchg
into
sahf
or
clc
movsb
clc
dec
cs
stc
inc
add
mov
addr16
mov
clc
mov
cmc
pop
clc
push
xchg
dec
imul
mov
sub
xchg
ret
clc
fildll
push
inc
add
cld
jmp
int3
push
add
sbb
data16
sbb
add
mov
or
insb
jmp
and
add
insl
mov
add
clc
push
cmc
incl
and
add
clc
incl
jne
cld
jmp
adc
mov
add
ret
cmp
clc
cmp
clc
and
add
add
add
scas
inc
clc
fs
dec
fs
fisubrl
add
ljmp
mov
add
add
ret
je
call
dec
stos
mov
add
add
sub
in
mov
add
out
rolb
loope
negb
mov
fs
icebp
in
xor
add
ss
ret
adc
sahf
mov
and
add
clc
repnz
dec
mov
clc
sar
mov
clc
sub
clc
test
ss
hlt
jno
add
pushf
lcall
dec
popa
add
stos
cwtl
notrack
push
ret
test
clc
sbb
pop
test
mov
mov
fdivs
sti
adc
add
sub
pop
or
add
sub
ljmp
cld
jmp
sahf
sub
mov
xor
add
jmp
movsb
outsl
sbbb
push
push
cld
jmp
jg
sbb
mov
dec
or
add
cmp
cmp
clc
xchg
mov
add
mov
call
push
ret
aas
test
add
fucom
clc
sub
cmpsb
clc
fs
sub
sbb
sbb
xor
add
jle
aaa
inc
add
push
mov
cld
jmp
dec
mov
test
in
stos
fldenv
add
daa
clc
int3
jp
add
jmp
add
cmp
rolb
add
sbb
clc
sub
add
out
inc
clc
mul
clc
inc
clc
ljmp
add
repnz
add
clc
mov
clc
sar
outsl
add
lods
ret
clc
ljmp
dec
nop
jp
or
push
cld
jmp
jno
aaa
adc
out
sub
xchg
or
pop
mov
pop
fmuls
incl
cld
jmp
sub
mov
repz
test
test
add
pop
adc
xchg
lods
nop
nop
out
jge
add
sahf
dec
gs
mov
repz
pop
lods
insb
xor
add
cmp
push
adc
jmp
in
or
xchg
add
add
je
clc
das
inc
clc
js
add
push
add
cld
jmp
xchg
insb
test
push
clc
mov
add
clc
nop
adc
add
add
clc
mov
imul
ss
clc
arpl
add
add
add
xabort
add
clc
fnstcw
mov
lret
scas
mov
add
cld
jmp
cmpsb
clc
push
cmovp
push
je
clc
add
mov
clc
pop
fimuls
add
nop
pop
mov
adc
add
cmp
clc
and
add
jne
add
into
push
add
xchg
inc
add
std
clc
xbegin
jecxz
mov
add
push
add
xor
add
cmp
clc
mov
aas
cmp
clc
inc
clc
incl
jbe
cld
jmp
sbb
fwait
cltd
scas
inc
add
add
add
add
xchg
iret
pop
mov
jmp
sub
test
add
add
hlt
adc
popa
add
clc
push
lcall
jmp
push
inc
data16
cmp
stc
mov
push
std
in
mov
cmp
mov
cmpsb
clc
inc
clc
xor
sub
push
mov
cld
jmp
test
push
add
bound
add
clc
dec
pop
mov
cltd
add
or
push
add
push
add
inc
clc
pop
sahf
mov
add
or
jle
adc
add
in
lea
int3
or
aas
mov
clc
fistl
add
int3
shlb
add
add
fists
jmp
sub
sbbb
clc
stos
fistpl
inc
add
inc
add
mov
vsqrtps
add
add
outsl
lea
cmpsl
clc
cmp
pop
clc
es
mov
pop
inc
add
popa
insb
add
clc
nop
inc
add
fisttpl
add
clc
sarl
mov
gs
push
scas
jl
push
add
repnz
add
xor
add
add
clc
je
clc
dec
cld
sar
cmp
clc
shll
nop
cmp
clc
sub
notl
add
jl
mov
add
mov
lahf
sbb
clc
cmp
clc
inc
add
shll
test
add
clc
or
loope
pop
mov
and
test
add
add
mov
enter
std
test
xor
add
or
mov
pop
sbb
ret
cld
jmp
sub
sub
push
mov
add
jne
clc
loope
sub
dec
add
add
add
enter
xchg
adc
push
cld
jmp
sub
add
mov
popa
add
out
fs
fiadds
add
xchg
jg
repnz
clc
mov
das
xchg
daa
clc
pusha
add
jmp
clc
iret
aad
clc
iret
and
add
cmp
fs
movsl
clc
ret
and
mov
add
clc
jne
mov
clc
addr16
insb
and
sti
xor
clc
or
add
icebp
decl
test
jmp
or
clc
push
jg
add
sbb
call
cltd
push
jmp
pop
pop
sbb
mov
inc
add
mov
cwtl
pushf
aad
xchg
into
adc
add
add
add
add
clc
sbb
push
xchg
cmpsl
clc
out
lock
add
inc
clc
inc
clc
push
add
dec
ss
adc
add
movzwl
cld
jmp
je
fisttpll
fisttpll
add
mov
clc
pop
insl
sub
add
clc
bound
add
cli
pushf
clc
lods
add
add
clc
insb
mov
fnstcw
js
xchg
int3
pop
push
mov
add
jmp
sub
sub
push
add
jge
sbb
ss
clc
add
add
add
pop
clc
loop
mov
add
mov
mov
or
add
mov
bound
add
fistps
cmpsb
clc
pop
clc
sub
sahf
scas
xchg
xchg
add
add
sar
jmp
xor
xor
ja
clc
cld
pop
mov
dec
mov
popa
add
ret
das
xchg
dec
inc
clc
out
mov
mov
add
inc
clc
xor
add
cld
jmp
or
add
sbb
push
add
cmp
clc
add
pop
mov
addr16
ljmp
stc
push
and
add
push
mov
scas
std
inc
add
repnz
jl
xchg
cmp
xchg
imul
adc
add
clc
pop
jae
add
mov
cld
jmp
fwait
mov
add
mov
adc
ljmp
sub
or
add
sub
and
jnp
mov
clc
leave
pushf
mov
clc
adc
add
jg
clc
pop
jb
add
sbb
clc
jns
imulb
push
add
sub
adc
in
clc
add
add
cmp
cmp
arpl
add
in
jge
add
add
movsl
clc
cli
cwtl
cmp
jecxz
cli
jne
jno
add
add
mov
clc
sub
sbb
mov
fisttpl
or
mov
stc
cmp
add
cmp
cmp
clc
or
ljmp
add
jge
stos
cmp
adc
add
push
mov
insl
dec
add
add
out
fstl
add
push
lret
notb
add
enter
add
and
add
add
mov
clc
mov
clc
xor
add
clc
int3
out
dec
std
and
add
fisubrl
add
in
cltd
mov
fnstcw
add
add
sbb
out
mov
lret
inc
clc
mov
add
push
nop
xor
cld
in
shlb
add
add
add
aad
add
dec
lea
xbegin
cmp
jle
sahf
xor
add
clc
ljmp
sti
jne
add
push
divl
clc
mov
clc
jl
add
mov
repnz
movzwl
cld
jmp
sub
mov
add
pop
add
add
add
out
lret
add
add
cmp
inc
in
push
ret
add
add
lods
inc
clc
jmp
add
loopne
ja
es
bound
add
cmc
cmpsb
clc
xor
add
mov
pop
jge
sar
push
ss
ret
sbb
clc
ss
add
dec
lock
inc
clc
or
add
add
aad
clc
inc
clc
mov
push
add
mov
pop
not
pop
pop
sar
clc
arpl
add
inc
clc
es
jl
clc
out
mov
jge
inc
clc
sub
adc
add
mov
add
int3
fisttpll
mov
mov
add
push
add
ds
in
fisubrl
das
stc
jno
add
add
ret
clc
call
add
pop
insb
mov
add
in
daa
clc
in
or
pop
ret
clc
mov
jno
add
out
adc
add
add
sar
add
int3
sbb
popl
add
repnz
add
mov
rcl
cmp
clc
and
add
inc
add
mov
sbb
pushf
add
add
stc
outsb
xlat
mov
xbegin
push
push
cld
jmp
xchg
xchg
xbegin
cli
pop
mov
clc
pop
pop
roll
pop
clc
sbb
add
and
add
push
add
cmp
add
jno
add
fneni(8087
clc
xchg
out
lret
scas
fdivrs
adc
add
jp
lods
add
lods
fstl
add
push
jp
pop
pushf
cmp
clc
push
add
data16
dec
or
mov
clc
cwtl
mov
aam
add
or
enter
mov
clc
xor
add
add
cmp
cmp
add
pop
cld
mov
push
ret
pop
cmp
add
sbb
aaa
and
add
add
and
xor
add
aam
add
dec
pop
add
add
lret
add
inc
clc
mov
add
ds
jno
add
pop
add
inc
jg
cmp
jns
xchg
add
push
add
sar
push
stos
or
dec
jp
imul
cld
jmp
push
je
push
add
jmp
xchg
adc
fwait
je
clc
clc
adc
add
sub
add
hlt
into
call
mov
cmp
add
roll
clc
jge
es
push
mov
jno
add
clc
cmp
xchg
cwtl
xabort
push
add
pusha
add
mov
rolb
cli
sbb
inc
cmp
push
ret
pop
sub
stos
pop
push
iret
add
add
outsb
das
lret
or
es
lods
pop
pop
ja
push
hlt
fdivl
aam
cmp
jbe
push
clc
fcmovne
fists
add
inc
add
dec
fsubrl
loop
mov
clc
ficompl
clc
xor
add
push
aam
clc
mov
fs
in
daa
clc
lock
xlat
mov
pop
addr16
or
bnd
add
stc
sarl
clc
not
jo
add
pop
icebp
pop
pop
jg
add
pop
sub
clc
out
in
sbb
add
jmp
fidivs
add
arpl
add
add
pop
jg
clc
push
movsb
clc
fs
div
sub
loope
out
sub
add
mov
lods
fldl
clc
xbegin
xchg
xor
add
ljmp
adc
add
push
adc
add
gs
int
add
aaa
scas
sti
out
ds
mov
sar
clc
dec
fldcw
push
add
sti
pop
adc
clc
mov
clc
adc
add
clc
xchg
fistps
clc
hlt
cmp
addr16
xor
sub
mov
add
cld
jmp
add
aaa
rcr
pop
leave
jle
clc
mov
add
cld
cmpsb
clc
test
clc
mov
mov
sub
mov
add
pusha
add
hlt
cmp
clc
cltd
test
jae
add
inc
add
cmp
data16
or
pop
inc
clc
jmp
shll
add
or
mov
fwait
push
and
add
cmc
ret
clc
out
mov
fs
cmp
fnstcw
add
bound
add
clc
push
push
push
clc
sub
clc
ljmp
and
add
scas
mov
add
add
push
outsl
add
jg
sub
jno
add
xchg
cmp
in
push
add
pop
cmp
dec
test
lret
cmp
add
bound
add
xchg
sbb
mov
sbb
test
adc
clc
sar
add
dec
pop
clc
fcmovb
clc
pop
clc
in
cmp
clc
jge
ss
add
imul
add
adc
add
sbb
clc
rcll
mov
push
add
or
sar
cmp
clc
mov
clc
pop
cltd
stos
neg
mov
clc
into
mov
inc
add
jbe
and
in
popf
aad
sar
clc
add
jge
pop
cmp
je
lret
jns
out
int3
pop
popa
add
push
sar
mov
add
push
add
out
sbb
mov
mov
xchg
pop
sub
clc
push
clc
cmp
clc
ud1
add
insb
clc
ret
xor
add
add
dec
movsb
clc
mov
xchg
std
call
clc
xchg
fdivrl
clc
push
adc
mov
sub
pop
fcomi
xchg
mov
adc
add
xor
add
clc
add
add
data16
mov
clc
fs
aaa
movsl
clc
mov
aam
icebp
in
ljmp
sub
add
shr
pop
aas
push
sti
ss
scas
cmp
add
mov
pushf
or
sbb
clc
dec
inc
clc
inc
clc
sbb
shr
sbb
cld
add
test
add
sti
sub
mov
push
mov
xor
add
cmp
add
ja
inc
clc
outsb
aam
loope
and
mov
clc
lods
adc
add
fisubrs
clc
adc
add
cwtl
jg
out
loope
out
mov
clc
mov
js
cld
jmp
cwtl
dec
aaa
stos
cld
add
add
clc
lret
loop
push
add
or
add
test
aas
dec
xchg
mov
clc
xchg
insl
or
add
rcrb
add
push
add
test
jl
pop
repnz
or
add
inc
clc
popa
add
imul
fnstcw
inc
add
push
mov
fsubrp
dec
mov
clc
in
xor
add
in
mov
lods
scas
push
xchg
inc
clc
push
clc
cmp
test
mov
mov
xor
imul
add
or
mov
xbegin
add
inc
clc
dec
jle
add
loop
inc
clc
adc
pop
mov
add
clc
imul
clc
leave
cwtl
mov
out
das
mov
clc
cmp
in
inc
add
in
pusha
add
lock
or
push
adc
add
adc
add
loopne
adc
jns
add
or
xchg
test
leave
cmp
clc
mov
loopne
bound
add
sbb
add
add
add
pop
enter
out
push
sbb
clc
mov
add
xchg
cmp
clc
cmp
das
cmp
sub
mov
cld
out
mov
mov
jnp
aas
hlt
jno
add
cmp
xabort
push
add
in
lea
movsb
clc
jl
call
push
ss
ret
jge
cmpsb
sub
add
sbb
imul
nop
in
jo
add
add
add
add
icebp
push
testl
cld
jmp
sar
xchg
and
add
pop
in
repz
clc
push
add
repz
outsb
sbb
out
inc
add
outsl
aaa
mov
or
add
mov
add
mov
clc
ljmp
push
shl
cld
jmp
xor
es
clc
jg
add
in
fisubs
add
dec
sar
clc
addr16
mov
push
mov
jae
add
and
add
add
lahf
mov
add
add
clc
inc
clc
jne
add
dec
inc
add
and
add
lods
sahf
adc
add
ret
divl
mov
clc
xchg
push
clc
lods
daa
clc
push
enter
aaa
insb
or
adc
add
fidivs
add
add
inc
clc
jl
xchg
xchg
xchg
cmpsl
clc
data16
xor
mov
add
cmp
jno
add
fisttpl
ja
shlb
xor
add
mov
add
sbb
clc
cli
gs
in
jb
add
clc
vmread
clc
sub
add
mov
iret
pop
clc
add
add
inc
add
sbb
xchg
fiaddl
cmp
add
roll
add
mov
lea
adc
add
add
add
and
add
clc
push
add
add
add
clc
movsb
clc
push
add
cld
cli
loopne
enter
adc
add
inc
clc
pop
mov
clc
test
sub
clc
fdiv
cmpsl
clc
xlat
daa
clc
leave
arpl
add
add
ror
icebp
xchg
inc
add
or
jle
inc
clc
bound
add
clc
cltd
sub
cmp
add
fsubr
xor
add
popf
cmp
jne
clc
shl
or
daa
clc
mov
fstp
mov
cmpsb
clc
mov
daa
clc
stos
fcom
mov
mov
cld
jmp
add
in
int
pop
pop
clc
mov
clc
addr16
mov
aas
jle
and
add
mov
clc
push
clc
xor
add
clc
inc
clc
xchg
not
adc
add
add
mov
pop
sbb
push
jne
cld
jmp
mov
sbb
xor
sti
fisubs
lahf
cmp
shr
cld
jmp
je
sub
pusha
cld
jmp
pop
pop
test
add
add
add
add
mov
and
jmp
sub
scas
inc
add
mov
inc
add
mov
and
push
add
dec
add
push
lods
jle
add
xor
mov
clc
pop
movsb
clc
aad
clc
clc
mov
sar
add
cwtl
and
add
pop
out
fnsave
add
add
outsl
or
jecxz
xchg
xor
add
push
push
ret
adc
add
xchg
sti
xlat
cmp
clc
shl
clc
stos
int
clc
xor
add
std
arpl
add
xlat
pop
and
add
clc
cltd
mov
dec
movsl
clc
in
pop
clc
sahf
adc
mov
lret
cltd
insb
negb
add
inc
clc
cmp
outsb
xor
add
movsb
clc
es
pushf
lahf
adc
addr16
int
clc
pop
add
cld
pop
sub
scas
pop
int3
push
push
cld
jmp
push
inc
dec
fs
mov
jp
dec
shlb
push
xchg
push
jmp
mov
in
mov
jmp
mov
call
add
push
add
xchg
cmp
add
add
add
clc
dec
jnp
pop
fbstp
xlat
and
add
add
inc
clc
jno
add
inc
add
adc
push
xor
cld
jmp
es
in
in
ret
or
popa
add
fyl2x
add
jecxz
and
add
add
pop
mov
clc
jns
xor
add
clc
cmp
test
cmp
mov
clc
add
or
clc
hlt
sbb
data16
jbe
clc
xbegin
add
push
popf
inc
add
sub
outsl
aas
movsb
clc
lock
dec
add
or
in
out
stc
loopne
mov
mov
jmp
data16
mov
imul
inc
add
stos
xchg
icebp
push
and
add
clc
cmp
add
jp
stos
daa
clc
xor
add
adc
xor
clc
mov
dec
inc
add
sub
xchg
pop
mov
add
add
into
sub
add
clc
xchg
pop
mov
ror
fldt
sbb
add
mov
cmp
clc
xchg
fdiv
xor
add
clc
sub
add
jmp
sub
sub
add
data16
addr16
hlt
pusha
add
push
push
mov
jl
lcall
add
mov
cld
jmp
inc
imul
inc
add
or
pop
inc
clc
xbegin
test
aaa
sar
sub
mov
push
insl
imul
hlt
das
or
ds
xchg
js
clc
adc
add
dec
pop
cmp
in
daa
clc
sbb
mov
add
pop
outsl
ret
mov
add
enter
in
ja
in
push
add
dec
dec
movsl
clc
popf
fimull
add
add
int3
lcall
pop
pop
in
insb
xabort
clc
cmpsl
clc
and
add
adc
add
clc
mov
and
add
push
cld
jmp
jge
sub
mov
clc
or
pop
add
add
clc
pop
sub
jae
add
add
mov
outsb
fcmovne
mov
mov
clc
jl
add
mov
cmp
clc
mov
pop
clc
mov
cmpsb
clc
test
add
lret
add
outsl
repnz
clc
enter
stc
lods
cmc
jbe
mov
inc
add
dec
inc
clc
mov
fs
scas
in
xchg
xchg
dec
mov
add
add
xor
clc
ds
mov
nop
jne
add
jmp
jne
add
addr16
ja
mov
cld
jmp
dec
dec
sub
or
add
cmpsl
clc
sub
js
in
mov
add
in
mov
cld
jmp
sub
mov
add
cmpsl
clc
mov
jb
add
aam
pop
cmp
fucomip
in
sbb
clc
sub
sbb
adc
push
cmp
mov
jmp
mov
cld
cwtl
testb
xor
add
xor
clc
cmp
lods
cld
jmp
push
push
sbb
sub
clc
outsl
mov
or
clc
pop
xor
add
add
push
mov
cld
jmp
addb
ds
clc
decl
xchg
add
xchg
jae
add
or
out
movsb
clc
mov
jbe
clc
cmp
pop
scas
fsubrl
jl
push
add
inc
clc
test
xchg
sbb
push
dec
test
cmp
clc
sti
cltd
dec
sub
data16
and
fmull
xor
add
clc
mov
clc
or
in
inc
clc
pop
outsl
clc
faddl
fdivrs
aad
jo
add
loopne
mov
and
sub
add
cld
jmp
sub
jno
jnp
int3
in
cmp
out
and
loopne
mov
add
jmp
push
clc
fcomps
adc
add
or
clc
pop
jns
push
pop
add
add
clc
clc
leave
jmp
negl
xchg
cld
jmp
sub
es
add
mov
add
clc
mov
cld
sbb
sbb
add
cltd
lret
mov
clc
mov
loopne
fcompl
mov
loope
dec
out
stos
push
and
iret
cld
popl
add
fwait
clc
and
push
push
pop
cmp
add
cli
cmp
out
lahf
or
xchg
cmp
clc
mov
lahf
neg
bound
add
in
fcompl
add
add
aam
cli
mov
sahf
sar
clc
movsl
clc
mov
sbb
mov
call
add
rcrl
cmp
jle
push
xor
add
daa
clc
mov
dec
daa
clc
xchg
fdivr
xchg
mov
add
into
cmp
add
je
repnz
mov
das
mov
pop
enter
pop
and
add
jnp
add
sbb
cmp
add
push
clc
xabort
and
add
sub
call
mov
or
fistpl
and
add
add
stos
jbe
mov
cld
jmp
fs
push
cmp
ret
cmp
and
xor
clc
inc
clc
pop
sbb
clc
bound
add
cmpsb
clc
or
clc
jne
jg
adc
add
dec
or
cmp
add
add
in
leave
mov
stos
push
inc
add
stos
sbb
sbb
and
add
out
stos
lret
clc
in
mov
jno
add
test
cmp
add
gs
fwait
call
pop
jo
add
xor
add
sahf
pop
sahf
out
decb
add
add
mov
mov
cld
jmp
mov
icebp
jg
inc
add
mov
add
imulb
mov
clc
fcmovnb
clc
das
loop
mov
jp
clc
mov
std
xchg
mov
xchg
jbe
add
push
inc
add
gs
adc
add
or
fstps
inc
add
vsubps
pop
jo
add
iret
stos
jge
or
idivb
fstpt
std
push
add
data16
jne
jle
cmc
xbegin
add
inc
add
xor
add
add
and
adc
add
lock
data16
xchg
cld
mov
add
add
dec
mov
clc
jge
popf
mov
sub
dec
xabort
clc
adc
add
icebp
cmp
mov
mov
pop
ss
add
icebp
fcmovb
clc
jmp
clc
dec
testl
add
imul
add
mov
add
mov
mov
add
addr16
dec
ljmp
loopne
pop
fwait
lret
cmp
js
push
pop
out
mov
clc
mov
cmp
dec
add
add
cld
jmp
add
jge
mov
pop
xor
add
add
loopne
lahf
pop
and
add
outsl
dec
push
flds
or
mov
or
clc
gs
bound
add
add
cmp
ds
sub
adc
add
add
clc
je
ror
pop
popf
or
mov
push
mov
notb
clc
loop
adc
add
test
jmp
cmp
int
add
std
cmp
clc
psubsb
add
inc
clc
int
incb
add
divb
gs
enter
cmp
js
clc
jge
sbb
mov
call
dec
push
mov
cld
jmp
or
sub
cli
inc
clc
dec
jmp
outsl
pusha
add
icebp
xor
clc
mov
imul
add
and
add
add
out
fdivs
add
mov
jecxz
and
add
clc
pop
clc
cmc
call
and
push
ret
test
in
data16
xchg
mov
push
add
mov
loope
inc
clc
cmp
int
clc
sar
clc
insb
add
add
das
into
lods
shl
sub
movsl
clc
outsl
jns
add
sbb
jmp
dec
insb
or
cmpsl
clc
mov
jp
fs
pop
xchg
test
and
add
gs
movsb
clc
stos
lods
dec
mov
push
add
nop
cld
jecxz
sbb
jne
add
in
out
mov
add
dec
rol
clc
fidivs
add
add
out
pusha
add
lret
add
clc
pop
push
add
cld
jmp
cmpsb
sahf
mov
fcmovb
clc
rcr
mov
sub
divb
add
std
repnz
js
test
test
popf
push
clc
adc
add
lods
dec
and
add
push
add
out
lods
pop
inc
add
push
clc
sarb
ljmp
clc
mov
dec
arpl
add
jae
add
loopne
pop
xor
add
push
push
popa
aas
aaa
jl
add
add
clc
sahf
cmp
mov
clc
and
add
push
in
pop
mov
clc
mov
adc
add
add
fnstcw
dec
adc
add
dec
add
add
add
inc
clc
sbb
inc
inc
inc
add
mov
sub
sub
xchg
xor
lock
sub
shlb
and
clc
imul
daa
clc
popf
inc
clc
ret
clc
push
clc
call
jmp
fwait
sub
inc
clc
jle
add
clc
test
sbb
xchg
inc
add
fwait
and
jne
cmp
add
in
adc
add
mov
scas
popf
dec
push
jmp
add
leave
std
lret
sub
add
loopne
pslld
clc
cmp
test
jo
add
test
nop
push
sub
clc
mov
fmull
not
cltd
xchg
push
cmp
jae
add
add
add
stos
push
rorb
js
add
inc
add
call
add
add
clc
dec
dec
insb
xor
mov
jno
add
add
inc
clc
or
std
xlat
std
sub
clc
outsb
jg
clc
add
inc
clc
repnz
cmp
clc
test
clc
sbb
dec
jne
or
mov
or
int
out
fcoml
add
add
dec
and
add
add
mov
xor
ss
ret
jge
push
pop
xor
add
pop
cmp
jo
add
hlt
xor
clc
mov
jmp
sub
int
add
cmp
sub
adc
add
mov
fcompp
pop
fucomi
es
inc
clc
mov
cmp
xchg
sub
mov
mov
pop
mov
dec
cmp
out
cltd
movsb
clc
ss
add
jns
pusha
add
insb
enter
in
sbb
add
hlt
fsubr
and
add
clc
shrl
test
clc
pushf
lods
push
add
cmpsb
clc
xor
add
vcvtdq2ps
pushl
cld
jmp
cmpsb
sub
xlat
stos
test
add
xor
add
add
cld
jmp
sub
mov
mov
add
add
or
imul
in
sbb
clc
imulb
dec
gs
enter
mov
add
fwait
pop
mov
cli
dec
mov
push
clc
sub
clc
mov
add
add
add
jae
add
cs
add
add
add
jnp
clc
ljmp
cltd
or
cld
insl
pusha
add
ret
clc
jmp
inc
clc
lahf
push
insl
dec
cmp
mov
inc
add
data16
inc
clc
dec
js
xchg
fdivrs
add
dec
mov
lahf
repz
add
add
add
ret
clc
insb
jno
add
or
clc
mov
clc
xor
add
lcall
mov
mov
add
push
add
cmp
add
add
add
add
fisubl
add
adc
or
sbb
add
mov
dec
and
add
clc
mov
clc
inc
clc
fcmovu
pop
cwtl
sub
push
add
dec
inc
clc
mov
mov
ss
ret
sub
clc
shrl
gs
sub
add
je
outsb
and
add
clc
cli
mov
cld
adc
add
clc
adc
ds
clc
popa
add
mov
shlb
ja
inc
add
cwtl
lods
scas
inc
add
add
add
add
add
cmp
imul
clc
ret
dec
sub
fdivr
sar
add
bound
add
fucompp
sbb
clc
fistpll
sub
sub
jmp
je
clc
fdivrs
sbb
clc
sbb
ds
push
clc
mov
je
add
add
fucomi
jbe
clc
pop
jle
in
push
popf
cld
jmp
test
scas
add
lahf
arpl
add
clc
bound
add
adc
add
add
pop
or
sti
sbb
ds
xbegin
clc
mov
add
scas
fstps
xor
add
dec
shlb
xor
add
jmp
add
cmp
cmp
or
aad
mov
add
add
mov
add
pop
sbb
scas
scas
and
add
add
cmp
cld
jmp
add
test
sar
add
add
dec
bnd
clc
hlt
mov
jmp
add
add
clc
in
ret
clc
and
add
and
add
call
cld
jmp
xor
gs
hlt
xor
add
dec
jno
add
clc
xbegin
push
add
es
pop
xor
add
sub
cli
lret
decl
ss
ret
push
dec
and
add
xor
add
fcmove
push
clc
out
repnz
push
add
add
add
mull
out
or
mov
clc
sub
clc
mov
add
jmp
lret
mov
push
es
push
add
es
rorb
dec
sar
vsqrtps
add
in
out
push
ljmp
out
push
mov
adc
clc
call
int3
add
add
mov
add
sub
adc
add
sub
clc
xor
cmp
decl
push
add
dec
xchg
outsl
sub
sub
jmp
sub
xor
iret
in
fsubl
sbb
icebp
cld
jmp
adc
push
jp
cmpsl
clc
cmp
clc
or
in
inc
add
dec
test
shrb
cmp
xor
add
mov
clc
pop
push
add
cld
jmp
push
xor
ja
adc
add
xchg
push
arpl
add
and
insb
jmp
mov
aam
add
pop
xor
add
loop
pop
or
in
lret
xor
add
fs
mov
push
std
ja
std
mov
cld
jmp
add
add
or
add
cmpsl
clc
xor
add
and
add
add
clc
dec
loopne
sbb
lea
out
pusha
add
in
ja
clc
gs
outsl
sub
xchg
pop
loop
mov
add
jno
add
in
dec
push
movsl
clc
xchg
inc
add
sub
cltd
xor
add
xchg
ljmp
add
add
clc
mov
cmp
cld
jmp
and
or
adc
add
mov
mov
push
push
add
cmp
clc
stos
loopne
cwtl
dec
mov
add
cmp
add
add
pop
movsl
clc
icebp
push
mov
cld
jmp
test
xchg
mov
nop
xor
bound
add
xchg
sahf
sbb
scas
fs
mov
int3
xor
add
dec
inc
add
jne
cmp
add
adc
add
clc
inc
clc
and
add
ret
clc
fidivl
out
lret
sub
clc
pushf
lahf
fs
bound
add
dec
cmpsl
clc
mov
and
add
add
clc
dec
xabort
sub
jle
xchg
adc
add
and
or
shlb
clc
add
add
add
add
test
sarl
clc
je
xchg
and
add
cmp
cmp
sbb
sub
add
insb
dec
das
and
add
pop
xchg
dec
adc
add
clc
xor
scas
mov
clc
addr16
sar
cld
push
add
cmp
add
clc
ret
clc
fcomps
add
out
xchg
lock
dec
loope
push
cld
jmp
imul
cmp
es
loop
dec
out
pop
cmp
pop
mov
sar
clc
inc
add
xor
jg
add
sar
loopne
xchg
sbb
mov
add
push
sub
loope
lods
push
sbb
clc
leave
call
hlt
adc
add
clc
xor
jbe
pop
mov
cmp
jl
clc
add
add
sbb
stos
push
clc
fwait
xor
add
add
or
ljmp
cld
jmp
aaa
scas
jge
test
adc
cmpsl
clc
psubb
xor
add
add
mov
cld
jmp
das
sub
sub
jge
dec
or
jo
add
fcomp
adc
add
add
das
inc
add
dec
inc
add
test
dec
dec
push
mov
clc
inc
clc
rorl
xchg
sbb
inc
clc
lret
sti
loop
lods
xchg
sub
push
cmp
add
add
inc
add
movsb
clc
xchg
adc
xor
add
add
aam
iret
pop
enter
pop
mov
call
add
mov
stc
lea
xor
add
mov
ja
clc
mov
push
and
add
clc
ficomps
mov
xchg
adc
add
and
add
add
push
jae
add
pop
jbe
add
outsb
in
enter
clc
movsb
clc
scas
out
inc
clc
ret
clc
fisttpll
clc
jbe
push
jb
add
iret
lahf
js
fadd
clc
dec
and
mov
clc
movsb
clc
repz
clc
cmp
mov
clc
mov
clc
cmpsl
clc
aaa
gs
rolb
mov
ret
clc
mov
aas
scas
sar
push
jge
add
aas
aaa
sub
sub
sbb
clc
negl
clc
mov
in
push
mov
cmpsl
clc
out
test
lods
dec
ret
add
cmp
inc
clc
fsubr
ljmp
and
add
sar
es
adc
add
mov
scas
cmp
add
dec
clc
jmp
test
cmp
in
movsl
clc
and
add
scas
ljmp
jae
add
add
jnp
clc
lods
aam
jmp
cmp
push
out
and
fistpll
in
inc
clc
ss
clc
cmp
add
adc
xchg
push
add
icebp
clc
push
adc
clc
jmp
add
test
cld
jmp
sti
pop
xchg
dec
mov
mov
xbegin
add
clc
mulb
ss
add
jmp
add
imull
std
popf
decl
mov
push
add
cld
jmp
stos
inc
clc
jnp
mov
xchg
dec
cmc
mov
xchg
stos
jb
add
adc
add
add
pop
cld
cld
xor
add
clc
dec
xchg
mov
clc
dec
outsl
and
add
and
in
movsl
clc
dec
fld
clc
clc
out
in
loop
cmpsl
clc
call
mov
adc
mov
lret
jecxz
push
clc
xor
clc
cmp
fcomps
clc
adc
add
add
xchg
std
lahf
loopne
out
mov
add
xor
cmp
add
add
adc
add
push
clc
xor
cmp
addr16
cmp
add
imul
cmp
clc
das
popf
lret
mov
jmp
sub
into
cmp
fistps
dec
mov
sub
add
cmp
jle
cs
mov
jae
add
clc
adc
add
adc
add
clc
mov
add
push
and
sub
or
leave
sub
add
inc
add
aas
mov
add
cmp
add
cltd
repnz
icebp
inc
add
cld
data16
inc
clc
jmp
push
ret
popa
or
adc
add
stos
jl
clc
dec
xor
add
clc
fnstcw
cmp
out
or
out
sbb
dec
xbegin
push
sub
cmp
mov
pop
mov
xor
add
clc
lock
add
add
mov
scas
repz
xor
add
inc
clc
enter
xchg
ljmp
push
cld
jmp
or
cmp
ds
and
and
add
mov
or
or
sub
clc
stc
cwtl
sbb
add
or
xchg
aaa
mov
lahf
sar
std
cmp
pop
in
pop
adc
add
push
clc
call
ljmp
jge
es
mov
xabort
mov
xor
xchg
out
push
add
ss
inc
add
xchg
cmp
lock
xchg
push
lahf
pop
xchg
out
jle
ja
mov
add
push
cmp
test
inc
clc
inc
add
nop
pop
scas
test
xchg
arpl
add
add
adc
adc
add
add
adc
add
cld
jmp
sub
sub
sub
clc
jecxz
sbb
clc
leave
fwait
repz
add
adc
and
add
adc
add
fs
xor
add
leave
je
fbld
add
push
add
xor
add
clc
nop
out
inc
add
or
aad
clc
inc
clc
ret
clc
sti
xchg
dec
cmpsl
clc
loopne
test
and
pop
xchg
and
add
push
stos
jns
push
bound
add
clc
jb
add
cmc
aad
add
cmp
clc
daa
clc
sbb
inc
xor
cld
jmp
mov
daa
clc
cmp
clc
repnz
rol
clc
imul
or
clc
imul
xchg
cli
mov
sahf
pop
stos
push
add
out
mov
adc
add
clc
jb
add
add
add
xor
add
mov
pop
cmp
sub
cld
jmp
or
popa
add
loopne
adc
mov
add
mov
clc
sar
mov
xor
add
in
sar
clc
mov
mov
pcmpgtd
push
adc
add
and
add
clc
clc
fcoms
add
add
scas
add
dec
lods
or
clc
repnz
clc
push
jno
add
mov
repz
add
lret
push
and
add
lcall
clc
fs
xor
jmp
add
clc
adc
add
or
add
aad
add
add
add
test
bound
add
loopne
imul
add
xor
add
add
into
and
add
and
xchg
jl
aas
pop
inc
clc
xchg
mov
dec
add
push
or
dec
dec
or
in
sahf
fsubl
add
outsl
mov
shlb
outsl
sbb
xchg
sar
clc
inc
add
pop
lock
repz
clc
jns
pushf
jae
add
sti
cwtl
ja
adc
add
add
rcrl
add
xchg
mov
jg
test
pushf
mov
clc
and
add
add
clc
cmpsb
clc
shlb
imul
sar
int
cs
add
dec
dec
and
add
movsl
clc
repz
insl
stos
pop
pop
mov
add
mov
jl
clc
or
clc
ds
es
xchg
jp
add
sub
es
inc
clc
or
in
sarb
jns
mov
clc
dec
inc
add
movsb
clc
push
add
jnp
inc
clc
pusha
add
fwait
icebp
lahf
mov
clc
push
clc
sbb
add
cwtl
gs
into
out
in
jns
sbb
repnz
inc
add
add
jno
add
add
cmp
jns
fisubl
add
lods
test
cmp
clc
and
pop
push
loopne
dec
xor
add
in
sub
loop
jbe
adc
add
mov
add
cld
jmp
jnp
jae
add
add
xchg
dec
sbb
xchg
cmp
mov
sub
iret
in
push
add
test
fisttpl
pop
xor
add
add
sbb
jmp
pop
add
popa
ret
clc
lret
je
xor
add
test
mov
push
xchg
psraw
pusha
add
inc
clc
rcrl
cmp
xchg
add
add
faddl
add
add
clc
stos
and
add
outsb
popa
add
mov
shlb
pop
inc
add
ja
aaa
aad
leave
aam
and
add
lcall
lcall
xchg
mov
add
mov
add
std
loop
movsb
clc
fistps
add
mov
ds
inc
clc
jo
add
add
jbe
push
stos
fisubs
add
push
add
cwtl
shrl
movsl
clc
mov
adc
add
imul
cld
jmp
lea
mov
xbegin
clc
jecxz
sbb
jnp
add
xchg
inc
clc
sahf
ret
clc
dec
push
aad
add
xchg
jo
add
out
add
add
pushf
cmpsb
clc
inc
clc
cli
mov
add
xbegin
mov
loopne
add
hlt
xchg
fnstsw
stos
iret
data16
arpl
add
out
lock
xor
add
push
mov
enter
pop
test
or
cld
jmp
add
js
hlt
addr16
add
add
jbe
in
push
fldcw
add
pop
outsl
inc
add
sub
jb
add
mov
add
sub
ja
xor
add
jge
stc
jb
add
jp
clc
push
add
dec
dec
fldcw
xlat
std
js
sub
clc
xor
add
clc
in
fmul
sbb
add
rolb
add
fildl
clc
lock
clc
add
add
shll
and
inc
clc
jp
add
rolb
mov
pushl
sbbb
add
test
adc
add
and
add
out
xor
jg
mov
add
daa
clc
in
in
pushf
fs
ret
add
pop
sar
cmp
mov
mov
mov
popf
mov
adc
add
test
std
xlat
iret
xabort
imul
fmull
stos
jge
add
lods
data16
in
repz
mov
mov
cmp
clc
cmp
psubd
xchg
cld
jmp
test
mov
ljmp
push
popl
clc
out
xchg
clc
sub
clc
cmp
mov
xor
add
data16
xchg
pop
rdpmc
add
jecxz
mov
adc
add
clc
pusha
add
out
push
add
mov
add
add
or
cmp
clc
add
push
add
cmpsb
clc
mov
add
jb
add
jmp
sbb
add
add
je
add
mov
add
mov
add
in
cmp
jle
dec
jg
test
cmc
xor
add
add
aas
sub
xor
push
clc
imul
and
add
jge
xabort
outsl
nop
cs
lods
and
add
fs
mov
clc
std
out
ficomps
push
mov
cld
jmp
aaa
adc
xor
add
push
add
in
push
daa
arpl
add
je
jg
outsb
popa
add
add
jle
xor
add
add
in
sbb
test
jmp
push
test
inc
add
out
xor
add
mov
clc
loop
scas
mov
xbegin
mov
insb
push
push
sub
jl
sub
add
pop
leave
daa
clc
out
pop
adc
add
push
add
xor
add
clc
jle
mov
pop
daa
clc
aaa
and
data16
jbe
sar
clc
insb
repnz
stc
stc
xor
add
add
add
clc
cmp
das
and
add
jecxz
repz
nop
and
add
add
cmpsb
clc
sub
cmp
xor
add
add
add
add
dec
push
xor
add
lahf
incb
clc
inc
clc
arpl
add
clc
clc
mov
add
pop
out
mov
add
lcall
clc
js
popf
out
mov
adc
add
inc
clc
sbb
adc
add
adc
in
add
add
pop
cmp
cs
clc
add
lods
pop
mov
pop
cs
dec
push
add
dec
aaa
dec
int3
sbb
dec
pop
pop
gs
mov
clc
push
add
js
outsb
popa
add
sbb
add
add
and
add
aad
clc
mov
clc
ja
cmpsb
clc
push
add
cmp
in
push
clc
pop
insb
fldt
add
and
add
cmp
xchg
sbb
dec
lcall
push
clc
mov
clc
add
add
test
mov
add
nop
and
clc
mov
loopne
mov
clc
sub
clc
mov
add
adc
pop
sbb
sub
add
mov
clc
rolb
add
hlt
bound
add
in
sub
out
out
mov
clc
js
call
cld
jmp
or
inc
cld
jmp
lods
scas
xchg
sub
clc
jp
xabort
mov
inc
add
sbb
add
and
add
lret
push
aaa
fcompl
add
out
adc
add
aam
mov
add
out
aad
xchg
nop
lock
xchg
jne
clc
lea
pop
shlb
xchg
push
int
test
lock
add
shl
clc
ret
in
je
push
mov
clc
mov
inc
add
xabort
add
fwait
pop
clc
rcrb
inc
clc
loop
stos
xchg
iret
inc
clc
mov
push
pushf
out
mov
jae
add
add
mov
clc
mov
clc
jl
mov
cmp
inc
clc
push
add
std
sar
push
mulb
cmp
add
and
add
adc
sar
jp
mov
cld
jmp
sub
jge
cld
jmp
lea
cmp
jmp
clc
sbb
mov
jb
add
jp
clc
jbe
add
enter
mov
ficomps
add
iret
insl
fwait
nop
jle
loopne
outsl
lret
or
clc
xchg
mov
neg
hlt
cmpsb
clc
dec
int
or
jne
dec
js
imul
clc
pop
and
add
rcrb
mov
xor
add
or
cli
mov
push
add
fnstsw
imul
and
add
clc
into
into
dec
clc
pop
sbb
or
add
xchg
mov
cmp
fsub
clc
push
add
pop
clc
movsb
clc
ds
inc
add
sbb
add
jo
add
ds
divps
sti
fisubl
cmp
add
sub
scas
aaa
leave
pusha
add
dec
mov
add
add
add
clc
pop
ja
dec
insb
int3
dec
dec
enter
je
clc
dec
cltd
data16
out
into
sar
jno
add
xchg
xchg
adc
repnz
in
push
fmul
and
add
sti
xabort
xor
add
add
add
fimull
jae
add
cmp
add
mov
clc
push
sbb
cmp
cmp
add
inc
cld
jmp
dec
scas
andb
mov
add
sub
jmp
add
push
add
lock
add
sub
jmp
sub
add
sar
clc
add
add
ss
ret
push
adc
add
add
xabort
add
fidivs
adc
add
add
sahf
xchg
out
xchg
imul
clc
and
add
dec
sbb
fs
ret
add
mov
clc
aad
lahf
push
push
add
loope
xor
add
add
and
add
mov
cmc
adc
add
inc
add
inc
add
push
lcall
mov
mov
xor
add
sub
clc
movsl
clc
adc
add
popa
add
jle
add
jnp
adc
cmp
add
mov
add
inc
clc
cwtl
and
lret
jmp
sub
mov
add
dec
sub
jmp
je
ja
cld
add
add
mov
adc
add
add
add
push
ds
push
add
rcrb
pop
fcmove
popf
jl
clc
addr16
sbb
clc
mov
mov
clc
jne
mov
ss
ret
jg
or
fidivrl
clc
insb
jle
mov
xor
add
loopne
movsb
clc
fbstp
fcomps
lahf
cmp
ss
ret
and
xor
je
add
sbb
push
in
jmp
or
sbb
clc
aam
int
cmc
adc
and
add
aas
fwait
mov
and
call
loopne
mov
add
cmc
mov
or
adc
add
fcomi
cmp
add
comiss
clc
fstpt
add
clc
mov
clc
loope
jns
clc
mov
pushf
loop
sar
or
clc
inc
clc
divl
scas
test
pop
das
mov
mov
pop
add
xor
or
clc
shrb
push
clc
lock
icebp
pop
mov
mov
jge
push
jl
sub
pop
mov
sub
add
mov
add
das
stc
jns
sub
push
inc
clc
lods
in
stos
inc
clc
jmp
into
imul
data16
je
clc
aas
jecxz
push
jbe
add
iret
icebp
and
add
pusha
cld
jmp
push
sub
xor
inc
clc
fldl
or
cli
jbe
jno
add
sbb
imul
xor
add
mov
clc
mov
jno
add
adc
pop
pop
push
add
packsswb
add
and
add
clc
cltd
aam
cmp
std
enter
std
mov
jmp
hlt
fildl
add
clc
fdivrp
sub
clc
das
cmpsl
clc
test
add
pop
cmp
enter
and
add
clc
cmpsb
clc
movsb
clc
lods
lea
arpl
add
and
add
in
add
add
jmp
or
clc
cmpsl
clc
pop
nop
jge
fst
std
sar
dec
push
add
clc
dec
dec
xchg
pop
lea
sbb
add
fistpll
push
add
add
jmp
cld
jmp
sbb
pop
lahf
jb
add
add
std
in
aam
testl
xchg
push
pop
mov
ljmp
sub
sti
sar
clc
dec
mov
cmp
clc
pop
test
aam
cmp
add
xchg
xchg
sub
add
clc
in
clc
pop
roll
sar
sbb
add
add
aam
pop
ss
ret
sub
sub
mov
mov
out
and
add
clc
sar
out
xchg
mov
fimull
mov
or
cld
jmp
mov
and
add
mov
addr16
push
and
mov
add
stos
stos
and
add
push
fildl
add
insb
aam
sar
mov
clc
aas
sbb
mov
cmpsb
clc
clc
xor
sub
clc
sar
clc
jno
add
xor
add
clc
adc
add
add
leave
xor
add
icebp
push
sbb
mov
mov
daa
clc
lret
fidivrl
int
clc
inc
add
aas
into
fcmovnu
adc
xchg
inc
clc
ret
scas
movsl
clc
adc
add
imul
rorb
arpl
cld
jmp
cmp
push
icebp
push
add
mov
jo
add
add
incl
jmp
jmp
je
cmpsb
jp
movzwl
cld
jmp
das
or
sar
add
stc
adc
clc
fcoml
add
add
add
cld
jmp
cmp
scas
rcrb
add
cld
jmp
popa
and
pop
cmp
clc
inc
add
lods
mov
xchg
das
outsl
insb
cmp
stos
xor
add
clc
in
pop
pminub
add
ss
ret
add
sub
add
ss
ret
jge
or
clc
mov
mov
cld
jmp
xor
movsb
jnp
clc
cltd
out
imul
repz
jmp
xor
add
clc
stos
mov
clc
jb
add
jb
add
cli
sub
clc
sbb
cmp
icebp
insb
popa
add
mov
mov
or
mov
pushf
pop
movsb
clc
test
cmp
inc
clc
sub
pop
push
ror
xchg
dec
jne
inc
clc
mov
add
daa
clc
iret
adc
mov
clc
out
add
add
xor
fmulp
pop
and
pop
fisttpl
push
add
sahf
add
add
adc
add
add
add
xchg
push
add
cld
jmp
dec
scas
sub
adc
add
mov
add
add
int3
mov
popf
sub
arpl
add
sahf
adc
pop
cwtl
mov
clc
shlb
and
add
or
bound
add
scas
cwtl
sbb
lods
pop
stc
jecxz
cmc
sbb
test
sub
add
jmp
hlt
pop
clc
sub
aas
add
add
mov
add
hlt
data16
mov
cmc
pop
jbe
loopne
mov
mov
mov
jle
clc
out
mov
clc
xlat
in
xlat
xchg
xor
add
dec
fidivs
add
std
lret
lret
clc
add
in
sub
cmp
pop
and
add
clc
ljmp
jno
add
flds
add
clc
imul
add
add
mov
clc
add
add
test
outsl
ss
add
call
in
ret
jno
iret
add
cmp
mov
add
fdiv
scas
scas
sbb
imul
add
out
cmc
mov
xlat
pop
add
test
inc
clc
mov
imul
jne
test
sbb
cld
jmp
sbb
clc
xor
cmp
jbe
sub
mov
pop
xchg
fprem
lahf
leave
dec
shll
clc
mov
in
stos
sar
inc
clc
push
add
shlb
clc
std
aas
cmp
clc
jecxz
xabort
jmp
cld
jmp
or
mov
xchg
push
ss
add
add
std
stc
push
add
iret
lods
sub
fidivrl
stc
out
add
cmp
xor
ss
ret
je
test
clc
aas
sbb
sbb
clc
jle
popf
neg
in
mov
xchg
jno
add
clc
popf
addr16
pop
sub
dec
outsl
xchg
popf
out
add
add
imull
push
pop
cld
jmp
dec
nop
mov
pop
movsb
clc
jge
incl
ret
ss
ret
mov
add
ret
clc
imul
jb
cld
jmp
fs
pop
push
add
cmp
clc
pop
fdivp
jae
add
movsl
clc
push
clc
push
out
setge
add
add
xabort
clc
jo
add
data16
add
add
mov
cmp
mov
pop
cmp
gs
je
sahf
lret
clc
ss
xor
add
add
inc
add
or
inc
add
or
shll
push
mov
clc
sahf
push
jmp
or
add
add
add
repz
clc
pusha
add
xor
rolb
xchg
fadds
inc
clc
cli
jecxz
mov
mov
fnstsw
push
clc
in
and
add
add
fs
mov
lret
inc
add
popf
jle
clc
stos
fisubrl
xor
cld
jmp
cmp
pushf
xchg
add
add
mov
jmp
aad
stos
mov
popa
add
mov
add
shll
inc
clc
nop
cmp
push
sahf
add
add
clc
repnz
add
fs
push
mov
sbb
test
test
jecxz
clc
pusha
add
scas
sti
test
add
add
fcmovne
xor
add
mov
clc
iret
dec
push
mov
out
fs
cmp
ficoms
clc
leave
cmc
cmp
jecxz
sar
sub
data16
mov
jno
add
add
inc
clc
inc
add
repnz
fs
imul
sbb
pop
lahf
and
inc
add
scas
clc
push
jb
add
je
cld
jmp
int3
xchg
ljmp
add
adc
adc
add
clc
inc
clc
mov
add
push
clc
xchg
cmp
ljmp
clc
jle
clc
pop
sub
add
outsb
addr16
fs
xabort
ds
insb
sub
cld
jmp
sahf
jno
test
add
data16
lods
adc
add
pop
dec
enter
clc
dec
jb
add
add
lahf
or
jmp
xor
dec
inc
clc
mov
clc
pop
clc
cmp
clc
ret
mov
clc
stos
cmc
jmp
pop
dec
xor
sbb
cmpsb
clc
add
add
clc
sub
add
mov
mov
mov
adc
add
add
add
add
clc
std
jbe
add
pop
andnps
hlt
es
addr16
mov
clc
mov
clc
repz
data16
lcall
adc
add
loopne
loopne
push
cmp
xor
add
add
ja
add
movsb
clc
and
add
fsub
clc
bound
add
aad
add
decl
adc
mov
add
in
push
clc
scas
movsb
clc
mov
inc
add
hlt
jecxz
ret
clc
inc
clc
ret
clc
loop
push
mov
mov
loope
ror
adc
add
clc
test
adc
add
ret
cltd
bnd
mov
xor
add
adc
add
int
mov
add
clc
imul
sub
adc
add
icebp
sahf
jo
add
outsl
aam
clc
mov
mov
ss
ret
sub
add
dec
jo
add
clc
aas
test
outsb
sbb
bswap
loopne
mov
add
repnz
add
ljmp
add
xabort
cwtl
sti
mov
out
inc
clc
push
sub
clc
add
xor
add
sub
adc
add
clc
pop
clc
or
mov
ss
clc
ljmp
adc
add
add
xor
add
add
clc
nop
fsubrs
clc
add
add
mov
fisttpl
rclb
add
cmp
negb
pop
cld
jmp
sub
es
scas
jnp
push
clc
dec
adc
add
add
imul
add
imul
add
add
icebp
and
ljmp
dec
xor
add
sub
add
fstl
add
js
out
mov
clc
repz
aad
adc
add
add
add
cld
fcmovnu
lret
xchg
pop
arpl
add
clc
jecxz
sub
add
fwait
push
add
rcrb
push
add
movsl
clc
aad
decb
add
int
clc
adc
push
clc
mov
clc
inc
add
mov
add
fs
stos
mov
pop
popl
jecxz
imul
out
xabort
add
cltd
xor
hlt
add
pusha
add
jmp
cmp
push
clc
jbe
int3
cltd
pop
and
add
push
jmp
cwtl
sub
clc
jl
clc
inc
add
aam
inc
clc
or
push
add
add
add
xlat
and
add
clc
clc
popa
add
jp
clc
or
clc
nopl
icebp
push
add
xor
add
clc
popf
jp
divb
cmpsb
clc
clc
stos
imull
mov
add
xlat
cli
cmpsb
clc
pop
clc
aam
clc
add
add
or
pop
stos
add
add
sub
add
cmp
dec
push
add
adc
add
dec
test
jge
jne
in
add
add
add
cmc
jp
lret
test
push
aam
xor
ss
ret
adc
loopne
loope
fsubs
add
and
add
add
and
push
push
and
add
int3
inc
clc
xchg
mov
clc
push
clc
fdivrl
pop
stos
jle
add
out
mov
out
push
data16
lret
mov
fwait
inc
add
lret
inc
clc
push
cmp
inc
add
and
add
add
add
cwtl
push
jbe
dec
pop
icebp
and
add
and
add
mull
clc
pushf
xlat
xor
add
xor
add
mov
jmp
test
jns
jnp
mov
loop
sbb
sub
movsl
clc
mov
jp
clc
stc
sbb
nop
jg
inc
add
xor
add
clc
mov
cmp
sub
xchg
mov
pop
fwait
shrl
into
insb
sub
shll
sbb
add
outsl
icebp
stos
mov
add
int
or
fstpl
clc
add
add
push
clc
jno
add
clc
sbb
push
dec
and
add
out
std
dec
cmp
cmp
mov
sbb
jmp
fwait
xor
cmpsb
pop
cmp
adc
add
xchg
xor
add
popa
add
push
jb
add
add
jp
dec
sbb
ffree
clc
mov
lods
inc
clc
mov
clc
mov
lods
pop
gs
xchg
cli
data16
and
add
push
add
clc
mov
rcr
mov
add
stos
xor
add
clc
aas
add
add
clc
xabort
daa
clc
gs
aaa
dec
xchg
mov
xchg
cltd
push
and
pushf
mov
scas
push
add
jmp
inc
add
clc
xor
add
pop
repz
in
push
inc
add
stos
cmp
inc
clc
xchg
sbb
xchg
bound
add
add
or
add
jbe
clc
mov
mov
cld
jmp
push
xchg
push
pop
cmp
clc
xor
add
push
in
mov
push
add
adc
clc
xchg
call
adc
jmp
sahf
lea
push
outsl
idivl
cmp
clc
pop
mov
jmp
lea
clc
push
inc
add
sar
popf
sub
cltd
pushf
dec
enter
or
sub
xor
add
clc
xchg
out
mov
clc
psadbw
add
test
inc
add
cmp
xor
add
add
pop
cmp
mov
cmp
add
popf
das
sahf
pop
mov
clc
jb
add
add
jae
add
or
jecxz
aaa
push
js
clc
mov
cld
lea
add
clc
aad
clc
inc
clc
dec
pushf
sbb
add
add
pop
clc
pop
clc
in
std
sbb
jl
clc
push
push
cld
jmp
sub
fwait
push
pop
arpl
add
ds
sub
clc
aam
fisubl
jns
and
add
cld
inc
clc
fisttpll
add
dec
inc
clc
insl
dec
addr16
add
dec
inc
clc
and
add
clc
outsl
shrb
les
cld
jmp
ja
push
add
rolb
int3
mov
push
add
xchg
movsb
clc
pop
dec
xor
add
mov
scas
push
jmp
cmp
idivl
add
add
mov
cltd
sbb
add
jmp
sbb
clc
xchg
mov
xchg
sar
pop
sahf
sub
add
and
or
mov
add
pop
sub
daa
clc
jmp
jmp
clc
movsl
clc
ret
stos
ss
ret
add
xor
and
add
add
aam
clc
cmp
je
test
push
lcall
cmpsl
clc
dec
pusha
add
out
cmp
shrl
clc
sbb
mov
clc
sahf
pusha
add
sbb
cmp
lret
in
clc
xchg
push
clc
fadds
add
mov
enter
mov
clc
sar
or
jnp
clc
stos
movsb
clc
and
add
clc
add
add
clc
mov
fwait
and
add
sbb
add
iret
clc
dec
dec
xchg
xor
add
clc
clc
imul
bound
add
add
add
test
ja
aad
add
xor
add
clc
fbld
sub
incb
add
xchg
inc
add
std
cmp
add
stc
cmp
pushf
add
mov
mov
cmp
cld
jmp
xchg
orb
add
cs
ds
ret
clc
insb
popf
pop
in
ljmp
jmp
pop
clc
and
add
pop
enter
mov
add
add
push
add
repz
lock
out
into
mov
add
jmp
dec
adc
jle
add
push
shlb
cmp
scas
xchg
sub
sub
xchg
and
dec
loope
jae
add
sbb
jmp
je
aaa
add
add
movaps
rorl
lock
clc
ja
mov
sahf
test
lret
mov
movsl
clc
or
cld
mov
jge
mov
add
test
cltd
xchg
lahf
and
add
clc
mov
clc
aam
pop
aam
clc
stos
mov
movsb
clc
cmpsl
clc
cs
in
testb
add
imul
iret
mov
add
add
clc
int
pop
clc
out
fwait
xor
add
ficoms
add
add
push
xchg
in
cld
insb
add
add
cld
jmp
sub
xor
add
nop
push
add
sar
push
pushl
cld
jmp
sub
aaa
loop
adc
jo
add
add
add
clc
popf
ret
clc
dec
or
jo
add
lods
push
mov
mov
gs
adc
add
clc
lcall
cmp
inc
add
xor
add
add
cld
jmp
nop
xor
xor
add
test
roll
add
enter
mov
ss
ret
sahf
imul
mov
sub
loop
ds
cmp
lahf
pusha
add
jno
add
call
add
cld
jmp
mov
add
add
add
jecxz
ja
pushf
push
xlat
or
push
sub
cld
jmp
xorb
iret
insb
xor
add
out
lock
call
clc
cmc
cli
fildll
test
push
mov
rclb
add
pushf
push
btr
cmp
dec
loopne
fsubs
add
or
clc
popf
test
push
punpckhdq
dec
push
jmp
push
aaa
imul
sub
add
mov
mov
jmp
pop
sub
clc
jne
xchg
lods
sbb
clc
test
dec
pop
data16
mov
out
adc
cmp
out
mov
add
jmp
clc
daa
clc
dec
inc
clc
push
add
add
clc
jno
add
repnz
push
movsl
clc
clc
mov
push
cld
jmp
outsl
mov
lret
testb
clc
fwait
mov
clc
adc
cs
cmpsb
clc
repz
clc
iret
outsb
pop
lock
add
mov
clc
mov
sbb
add
and
subb
addr16
mov
dec
cmp
jmp
pop
or
push
add
sar
clc
cmpsl
clc
in
add
mov
jne
clc
inc
add
cmp
add
pop
out
or
clc
mov
xchg
mov
pop
pop
cltd
jae
add
add
nop
sahf
loopne
out
sbb
add
sub
clc
mov
add
mov
dec
fs
out
out
jo
add
add
xchg
push
nop
mov
aaa
aam
dec
outsl
loope
mov
and
xchg
ret
clc
mov
add
or
iret
jl
clc
or
push
xor
int
aaa
addr16
or
iret
lahf
jle
xchg
xlat
push
push
push
jmp
fs
movsb
jne
xor
add
loopne
cld
pop
stos
jb
add
clc
jnp
enter
adc
add
add
clc
out
jl
ljmp
arpl
add
jmp
mov
ds
popf
xor
loop
rorl
sbb
add
scas
mov
arpl
add
jecxz
mov
lea
sahf
sbb
into
sbb
clc
inc
add
push
inc
inc
add
add
inc
push
inc
clc
mov
push
cs
cld
jmp
sub
iret
mov
sar
in
inc
clc
stos
lcall
add
xor
das
pop
sbb
xchg
data16
int3
enter
dec
xchg
cmp
test
repz
clc
mov
int3
aas
sbb
adc
add
jmp
dec
imul
sahf
xor
add
mov
cmc
fcoml
pop
sub
sub
imul
or
cmpsl
clc
xor
add
adc
add
loop
push
add
and
add
test
inc
add
ret
jne
inc
clc
xor
add
cmp
adc
mov
push
popa
add
cmp
cmp
repnz
clc
addr16
lcall
clc
push
clc
popf
clc
sub
mov
clc
stos
outsb
dec
icebp
lcall
add
clc
std
pop
clc
pop
mov
add
loope
icebp
jno
add
clc
cmp
add
adc
add
xchg
rorl
fwait
cltd
popf
dec
sbb
xchg
enter
loop
xchg
cmp
push
cli
popf
aaa
daa
clc
lock
mov
push
add
imul
clc
sbb
clc
es
movsb
clc
add
dec
sbb
clc
xabort
repz
fisubl
or
fisubrl
add
addr16
cs
incl
pop
cmp
jmp
xor
orb
mov
add
push
roll
fstpl
loope
cwtl
pop
loop
cmp
add
xor
add
add
push
add
adc
add
notl
add
add
in
jbe
add
fmuls
xor
add
mov
fcomp
jbe
add
loop
lods
outsb
mov
das
cmp
ja
clc
dec
in
inc
add
mov
cld
jmp
insb
repnz
lock
sbb
add
xbegin
push
add
aad
sbb
clc
push
pushf
push
jmp
nop
or
clc
push
add
jge,pt
cmp
clc
pop
jo
add
dec
fwait
jbe
lods
or
call
add
pusha
add
xchg
pushf
call
sar
stc
mov
cld
jmp
or
popa
add
add
add
add
push
add
or
daa
clc
or
sbb
add
mov
clc
cmp
hlt
add
test
add
add
clc
movsl
clc
mov
jnp
inc
clc
cmp
std
xor
into
sbb
xor
add
add
push
inc
int
incl
mov
nop
dec
mov
jmp
xor
pop
sbb
push
dec
aad
cmpsl
clc
int3
je
int
clc
sti
jg
bound
add
sar
clc
mov
out
pop
and
inc
adc
jmp
aaa
push
aad
jne
dec
sbb
jmp
sub
fs
sub
std
sbb
or
mov
jmp
sub
add
pop
sub
xchg
lret
jge
clc
and
add
ja
add
notl
sub
lods
cmp
push
mov
inc
pop
dec
xor
fisttps
add
pop
mov
in
sti
jmp
add
xchg
movsl
clc
arpl
add
jne,pn
clc
outsb
sar
and
sbb
clc
jl
or
mov
movsl
clc
popf
xlat
stos
mov
std
stc
pop
mov
xor
add
xchg
xchg
xchg
imul
add
add
pop
scas
clc
push
jmp
add
or
jmp
jg
cmpsb
xlat
pop
ffreep
clc
add
add
cmp
clc
aas
fstps
jbe
xor
jmp
rcll
add
add
pop
enter
cmp
jmp
clc
push
jmp
mov
mov
leave
fnstcw
mov
xchg
sub
add
test
scas
vunpcklps
add
clc
ret
clc
pusha
add
cli
bound
add
add
pop
mov
cmpsl
clc
movsb
clc
icebp
xor
add
popf
pop
push
pop
pusha
add
mov
ret
clc
mov
cmpsb
clc
add
add
add
sub
fimull
cltd
fisttps
add
push
cmp
clc
sar
xchg
cwtl
mull
add
jge
clc
xchg
fcom
testl
xor
add
js
and
add
out
and
add
lahf
pushf
push
add
inc
clc
cmp
or
add
je
sar
rcrl
cmp
add
add
add
fsts
xor
add
or
mov
cmp
adc
add
add
test
aas
jbe
clc
in
repnz
mov
cmp
add
cmp
xor
add
test
popa
add
adc
add
clc
inc
clc
lods
inc
clc
push
or
and
add
add
cmp
clc
arpl
add
mov
lahf
stos
aaa
cwtl
add
add
addr16
insb
movsl
clc
push
mov
cld
jmp
cwtl
test
add
sarl
jo
add
add
fs
push
push
add
mov
shlb
add
repnz
add
add
outsl
mul
clc
sub
add
lock
add
add
out
cmpsb
clc
add
add
sahf
inc
clc
inc
add
lcall
shl
clc
sar
clc
loopne
ret
clc
out
das
and
jne
clc
jle
rcrl
clc
inc
add
push
clc
ja
and
add
fidivl
add
add
stos
jae
add
clc
fwait
jns
gs
add
cltd
ds
and
add
rol
clc
fnstcw
fwait
out
jp
jne
std
gs
fisttpl
ficomps
clc
in
adc
add
inc
clc
sahf
aas
lea
push
add
dec
and
push
add
push
fdivrp
imul
add
and
add
sbb
add
int
out
fidivl
clc
ror
cli
adc
add
jecxz
test
fcmovu
clc
jns
xchg
in
loope
xchg
ja
lods
sahf
ret
clc
add
add
in
xbegin
movsb
clc
mov
out
imul
cs
mov
clc
jae
add
pop
nop
pop
inc
clc
repz
ss
clc
mov
add
push
add
sbb
jne
ss
ret
mov
test
fwait
test
dec
and
add
sub
in
mov
add
inc
clc
dec
insl
add
add
clc
push
add
lods
push
cmp
fldl
push
adc
xor
add
add
jp
cmp
mov
aaa
mov
iret
or
xchg
jnp
and
add
int
dec
aam
inc
clc
xlat
shl
clc
pop
and
mov
add
sub
add
xchg
mov
dec
mov
mov
fistl
add
cmp
fimuls
dec
hlt
nop
xchg
sub
clc
sub
mov
push
jne
cld
jmp
jg
in
xor
xchg
mov
jae
cld
jmp
and
xorb
gs
push
add
vxorps
or
stos
fs
fxch
je
xchg
sub
add
add
add
clc
inc
clc
mov
add
xchg
imul
dec
test
add
or
xor
clc
aam
clc
scas
scas
ja
sub
clc
dec
pusha
add
jmp
sub
clc
shl
mov
mov
push
pop
cmp
xchg
mov
push
add
daa
clc
push
in
es
cli
add
test
aam
test
clc
icebp
push
clc
mov
mov
push
cld
jmp
test
test
sub
inc
add
test
in
inc
add
je
insb
pop
add
add
clc
or
out
mov
dec
sbb
inc
add
clc
sub
push
mov
cld
jmp
push
je
or
popa
add
mov
clc
push
clc
inc
clc
xchg
pop
ljmp
add
add
lock
ret
clc
dec
xchg
call
icebp
push
mov
clc
ds
ljmp
add
fidivs
clc
fdivrl
add
ja
jne
cld
jmp
xor
add
add
mov
icebp
xor
clc
mov
mov
leave
xchg
mov
dec
jne
clc
xchg
mov
add
cld
jmp
sbb
add
add
add
add
xor
jl
lret
add
lret
push
loope
push
add
aad
clc
push
add
pop
not
jb
add
add
add
repz
inc
and
jmp
add
clc
insl
push
xor
add
add
clc
lods
test
xchg
sbb
pop
jp
mov
es
push
mov
clc
leave
jp
clc
test
clc
out
movsb
clc
iret
mov
mov
jg
add
fwait
sub
mov
cld
jmp
sub
add
add
xor
add
std
lods
push
mov
inc
add
clc
xor
add
cmp
and
add
dec
mov
test
aaa
loope
lods
sub
clc
mov
leave
push
xchg
fwait
data16
pop
fists
int3
fwait
lods
mov
bound
add
or
pop
mov
xbegin
imul
clc
adc
or
mov
add
dec
aad
pop
mov
inc
clc
pop
clc
sbb
add
xchg
or
int
jo
add
pop
fisttpl
cmp
clc
or
jecxz
stos
push
push
cld
jmp
add
add
ds
mov
mov
add
mov
jl
inc
add
or
cmc
sbb
push
in
jmp
add
test
ja,pn
ja
fwait
mul
clc
and
add
mov
add
xchg
sub
xlat
xchg
adc
add
add
sub
mov
jmp
js
add
fcmovu
das
jne
sar
add
test
lods
sub
clc
mov
push
adc
add
clc
inc
clc
and
add
or
iret
mov
jp
cld
jmp
insb
dec
cmp
fisubrs
dec
jbe
cmp
cmp
add
sbb
add
clc
pop
nop
mov
add
sbb
data16
adc
add
add
add
mov
cld
jmp
ja
add
push
inc
add
pusha
add
sar
jp
add
cltd
pop
scas
cs
ret
clc
xchg
or
clc
add
cmp
insb
call
sub
clc
cmpsl
clc
sub
xchg
fs
push
clc
push
mov
xchg
sub
clc
stos
sar
loopne
das
cmp
add
clc
in
push
jmp
pop
jmp
xchg
xor
add
inc
clc
ret
clc
test
outsb
ds
push
add
push
add
dec
mov
push
ss
ret
lea
push
pop
ds
add
push
and
imul
add
clc
jae
add
fucom
clc
xchg
push
add
test
popa
add
mov
adc
add
icebp
gs
cwtl
fs
loope
lock
inc
add
fisttps
std
movsl
clc
pop
insb
lret
clc
addr16
sar
or
add
clc
mov
inc
add
jl
outsl
mov
xabort
enter
cs
movsb
clc
int3
cmp
cmp
clc
pop
dec
in
loope
push
cmc
fadd
clc
adc
add
popf
scas
sbb
inc
out
add
or
sub
jo
add
or
add
lods
scas
scas
lret
add
add
test
sti
test
jnp
sub
push
add
xchg
cld
or
clc
int
push
add
cmp
daa
clc
fidivs
fwait
ljmp
dec
gs
int3
adc
jb
add
lods
mov
ljmp
cmp
add
cld
xor
add
sahf
push
dec
and
add
or
scas
addr16
bound
add
clc
int3
mov
das
add
cld
jmp
cmp
test
jns
clc
outsb
mov
fdiv
shrl
out
gs
jmp
cwtl
jle
add
sbb
in
mov
mov
xor
add
mov
out
pop
popf
adc
add
xor
xor
add
jae
add
clc
sahf
in
int
clc
add
fidivl
add
sbb
mov
stc
mov
idiv
rorb
jmp
jge
push
inc
cmp
clc
std
and
ja
shll
add
and
data16
pop
cmp
add
jae
add
popf
jp
push
testl
and
es
push
add
add
or
mov
clc
call
jmp
jno
lods
cwtl
push
xor
add
mov
add
xchg
int
clc
pop
xchg
das
sub
and
add
push
clc
sub
and
add
add
jnp
add
daa
clc
enter
add
in
mov
clc
and
add
mov
enter
fidivrs
clc
lods
sub
push
jmp
add
push
rcrb
push
dec
xchg
push
add
int
push
adc
add
add
add
pop
aad
repnz
add
sbb
push
mov
cld
jmp
xor
lea
mov
dec
scas
out
xabort
lret
cli
ja
mov
clc
ss
push
add
adc
clc
or
lods
cs
outsl
add
sti
dec
sub
lret
jb
add
mov
clc
or
add
sbb
xchg
lahf
ja
sub
sub
add
data16
or
clc
mov
add
stos
xor
sub
stos
ds
stos
out
mov
or
add
fnstenv
add
fsub
clc
aaa
test
sub
add
add
add
clc
dec
sti
jbe
clc
stc
xchg
mov
cmp
add
test
cld
out
pop
pop
popf
lcall
push
ret
imul
mov
add
mov
pop
jo
add
decl
cwtl
ret
push
mov
pop
inc
clc
push
add
ss
jns
clc
mov
add
clc
dec
cmp
inc
add
lret
daa
clc
scas
xabort
clc
jge
pop
xor
add
add
cli
pop
pusha
add
scas
loopne
adc
add
add
popf
das
mov
add
pop
mov
popf
rolb
add
xor
add
clc
ljmp
dec
cmp
lods
dec
testl
mov
clc
out
popf
fs
arpl
add
jnp
gs
pop
add
add
clc
dec
lods
xchg
fwait
pop
sub
add
cmc
adc
add
mov
adc
add
dec
sti
mov
insl
std
mov
add
lods
sar
aam
cmpsb
clc
inc
add
xchg
call
lahf
loop
sub
adc
add
or
clc
ret
sbb
inc
add
adc
add
cmp
clc
cmc
push
ret
negb
gs
cmp
sub
add
add
clc
mov
and
add
add
ret
clc
popl
add
ss
daa
clc
add
add
clc
sub
or
inc
clc
sub
movsl
clc
inc
add
mov
fmulp
push
shrb
pop
cmp
xchg
jno
add
add
push
add
cld
jmp
scas
lods
add
pop
out
cmp
clc
pop
clc
ret
clc
mov
shrb
push
clc
push
out
int3
sbb
add
mov
add
or
clc
mov
dec
stos
adc
add
fimull
cld
jmp
push
or
clc
ds
std
mov
pop
adc
add
jo
add
clc
adc
add
je
dec
cmp
pop
stos
enter
jne
xchg
sub
add
cltd
jb
add
xabort
cmc
es
xchg
or
mov
add
sbb
add
sbb
clc
test
mov
cld
jmp
cmpsb
insb
mov
cmp
clc
popf
call
add
and
cmp
jg
jle
dec
mov
jge
add
mov
repz
xchg
fdivs
add
in
in
jg
sub
add
push
xchg
xor
add
sub
clc
mov
xchg
ljmp
sub
out
js
push
jb
add
in
jle
clc
adc
xor
add
cmp
mov
push
adc
mov
movsb
clc
pop
es
inc
add
mov
test
and
add
lret
dec
call
cli
mov
add
mov
nop
loopne
pop
sbb
clc
fcmovb
clc
jb
add
sub
xchg
push
mov
adc
dec
cmp
mov
loope
dec
test
add
jb
add
push
cld
jmp
sub
add
scas
sub
dec
and
test
clc
insb
cmp
jge
ss
cs
clc
push
add
dec
xchg
dec
std
outsl
fdivrp
xor
add
clc
jns
cmp
shll
and
jmp
xor
pop
add
add
push
clc
xchg
add
add
clc
and
add
fldenv
outsl
ljmp
cmp
scas
ljmp
add
add
and
add
jbe
sub
add
inc
clc
add
add
inc
add
adc
add
clc
xlat
pop
clc
add
jnp
jge
add
mov
clc
pop
mov
dec
jg
clc
fnstsw
rclb
clc
push
fildll
test
push
add
pop
push
add
push
add
push
add
mov
lea
call
clc
jp
pop
js
popa
add
dec
inc
clc
shrl
jg
mov
fsubl
fadd
clc
popa
add
sub
add
clc
stos
fistl
add
nop
test
jle
mov
add
mov
sti
or
fucomip
aad
clc
jg
clc
inc
add
out
decb
adc
add
cmp
push
add
adc
sbb
or
into
mov
jg
add
push
add
mov
xchg
cltd
jnp
push
add
pop
outsb
popa
add
dec
mov
clc
dec
mov
add
xchg
and
add
add
add
and
add
sub
test
push
fistl
clc
scas
pop
ret
add
pop
xor
add
icebp
mov
clc
adc
cld
jmp
xchg
and
add
rclb
clc
cltd
cmp
clc
and
add
add
clc
sub
push
add
mov
add
pop
add
add
imull
clc
js
jno
add
iret
dec
jb
add
add
insb
mov
nop
flds
add
add
clc
cmp
test
jnp
jmp
push
sbb
xor
mov
cld
jmp
dec
jg
mov
adc
add
jo
add
or
lcall
jno
pop
xchg
das
cwtl
inc
clc
push
cli
mov
clc
cltd
add
add
mov
lea
push
cwtl
enter
mov
add
mov
push
jmp
adc
add
dec
lock
fidivl
add
cld
jmp
pop
pop
sbb
mov
adc
add
pushf
ds
clc
sti
ja
add
fsubl
cwtl
nop
stos
fbstp
add
sub
add
cmp
jns
clc
mov
clc
imul
push
clc
jg
mov
clc
into
jecxz
in
fsub
clc
xor
add
roll
clc
adc
add
data16
clc
outsl
popf
daa
clc
adc
add
xor
xchg
test
push
icebp
repnz
push
add
add
and
clc
push
mov
cmp
add
loopne
jns
sub
mov
mov
clc
test
in
fs
push
mov
clc
ja
clc
push
clc
sub
fcmovne
sub
clc
int
dec
pop
add
call
cmp
ljmp
and
add
clc
push
add
xchg
and
add
lret
dec
out
imul
push
cmp
mov
jno
add
cmp
clc
jno
add
add
xchg
dec
pop
xchg
jl
mov
add
jge
aad
add
clc
push
add
incl
repz
ret
add
insb
hlt
sbb
mov
jecxz
push
add
ja
fwait
and
push
adc
add
mov
mov
movsl
clc
xchg
fs
xchg
inc
clc
pop
mov
clc
or
add
movsl
clc
shrb
mov
add
lods
adc
add
clc
cld
mov
clc
ds
clc
push
add
ret
push
adc
jmp
adc
sub
cmp
adc
add
clc
sbb
xor
add
clc
movsb
clc
lcall
add
jbe
cmp
clc
jmp
add
pusha
add
sub
add
insb
imul
fildll
add
pop
jnp
add
add
inc
add
kmovw
add
insb
movsl
clc
and
add
jae
add
add
or
sahf
std
out
sub
loope
aad
clc
aas
enter
mov
lahf
xbegin
and
xor
add
clc
int3
addr16
dec
inc
add
aam
add
xchg
fs
sbb
loope
cs
clc
mov
xor
add
push
add
pushf
push
add
scas
push
sbb
add
xchg
or
add
add
shll
add
add
sar
clc
bound
add
xchg
xor
add
cltd
arpl
add
inc
add
push
mov
ss
ret
sbbb
cltd
mov
cld
jmp
mov
push
mov
cld
jmp
nop
jno
cmp
pop
aam
add
xchg
test
xchg
aam
clc
dec
inc
add
xchg
insb
push
pop
scas
mov
jmp
ja
inc
notl
ss
ret
xor
add
dec
push
sub
clc
fsubr
scas
test
test
cld
jmp
pusha
add
cmpsl
clc
andnps
clc
and
add
add
add
and
add
repnz
cmp
add
into
int3
cli
xbegin
add
lret
inc
clc
pop
cmp
add
outsl
stos
cmpsl
clc
push
ret
clc
data16
adc
add
add
jnp
sbb
inc
clc
and
add
jne
jne
add
adc
mov
add
add
and
addr16
xor
add
xchg
mov
add
xchg
mov
mov
imul
xchg
test
cwtl
imul
lods
and
imul
xor
ljmp
xchg
aas
movsl
clc
xchg
std
pop
adc
mov
add
add
add
add
cmp
clc
mov
jp
cmp
add
clc
xor
or
add
mov
add
in
dec
cmp
ret
clc
jle
inc
clc
je
or
xchg
pop
iret
pusha
add
mov
clc
in
and
add
add
xchg
repz
sub
add
jo
add
xchg
xchg
mov
xor
or
add
xor
add
push
data16
outsb
mov
dec
xor
add
mov
add
cmp
add
mov
mov
lcall
xchg
cmp
mov
cld
jmp
cwtl
push
movsb
adc
add
aam
xbegin
cmc
cmp
adc
add
add
fsubr
cmp
sub
clc
sahf
loop
js
imul
cld
jmp
push
or
sbb
clc
std
sub
dec
or
add
mov
inc
clc
and
add
xor
add
add
cld
jmp
inc
cmp
add
clc
iret
add
add
clc
shll
xchg
aam
inc
add
stos
cmp
adc
test
push
lcall
mov
clc
or
dec
inc
clc
mov
fimull
and
add
dec
outsl
loope,pt
ljmp
cld
jmp
push
insb
jno
rclb
cmp
jbe
push
cld
jmp
test
inc
add
inc
add
mov
inc
clc
inc
add
daa
clc
mov
stos
aaa
mov
xabort
xchg
roll
hlt
jmp
fidivrl
jmp
pop
test
in
or
popa
add
lret
xor
cmp
clc
loopne
add
jmp
clc
sbb
ror
pop
insl
dec
nop
mov
clc
stos
or
clc
adc
stc
xlat
adc
xabort
xor
add
clc
int
out
push
inc
clc
jbe
out
xor
add
mov
fcmovnu
nop
mov
mov
scas
das
jne
data16
mov
add
add
add
or
sbb
clc
daa
clc
sub
pop
pushf
ret
test
cld
jmp
nop
and
add
ret
clc
mov
inc
add
jae
add
and
push
ret
imul
clc
or
cli
insl
inc
clc
test
dec
fs
stc
data16
mov
and
add
cs
add
call
clc
mov
in
outsb
dec
mov
cmp
add
ss
and
add
clc
mov
int3
bound
add
or
jg
clc
mov
mov
daa
clc
xor
add
add
lahf
in
xor
fdivrp
cld
jmp
jno
add
fstpl
hlt
mov
add
cmp
dec
cmovns
clc
mov
add
inc
add
add
add
mov
in
jb
add
clc
sbb
sub
jmp
test
test
cmpsb
clc
in
jg
adc
push
dec
repnz
fs
mov
clc
inc
clc
ret
clc
pop
repz
lret
pop
inc
add
jae
add
add
cmp
xchg
popa
add
push
add
cli
adc
add
clc
cmp
inc
clc
add
test
mov
addr16
insb
sbb
jmp
mov
cld
jmp
test
xor
add
add
pop
xor
add
enter
test
and
add
clc
jae
add
mov
push
add
add
pop
call
pusha
add
data16
xchg
in
mov
ds
enter
loopne
jmp
adc
add
push
add
add
cmp
test
cmp
jmp
movsl
clc
iret
adc
add
fiaddl
pop
in
adc
add
add
jb
add
xlat
popf
aaa
ret
clc
jge
clc
dec
push
clc
pop
clc
lcall
cmp
sar
clc
sbb
jmp
push
cmp
clc
push
add
lret
add
clc
lock
mov
inc
clc
inc
add
jge
hlt
xchg
mov
mov
inc
add
cmp
outsl
mov
add
cld
jmp
sub
xor
add
addr16
pop
sbb
sbb
sub
mov
xchg
cmp
adc
add
decl
cld
jmp
jno
das
lret
aam
popa
add
pop
mov
and
insl
xchg
mov
add
mov
cld
jmp
xor
add
sub
clc
fwait
mov
clc
out
and
add
inc
add
das
xchg
push
add
xchg
jecxz
jmp
clc
sbb
add
out
push
or
jae
add
aad
add
add
clc
lcall
scas
sbb
cmpsb
clc
into
jno
add
xchg
or
add
push
imul
pop
es
add
mov
lods
dec
in
mov
scas
popa
add
mov
push
clc
mov
add
add
mov
clc
push
add
push
inc
clc
add
add
bound
add
clc
in
inc
clc
push
clc
or
add
add
add
fnsave
sub
sar
lock
clc
loop
leave
popf
dec
adc
add
outsb
mov
mov
int3
jmp
insb
test
je
mov
sar
pop
xchg
and
push
clc
push
add
scas
int3
inc
add
pop
clc
popa
add
ljmp
xchg
push
push
pushf
std
mov
ja
stos
inc
clc
xor
add
sub
clc
add
add
inc
add
pop
inc
clc
cli
jne
add
push
xor
ss
ret
and
xor
add
scas
jmp
das
repz
int
sbb
jg
rorb
pop
adc
clc
xchg
into
mov
cld
jmp
jno
clc
mov
sar
rcrb
add
sbb
je
dec
mov
xor
mov
cld
jmp
xor
scas
cmp
mov
cld
jmp
popa
scas
jp
jp
and
mov
push
push
clc
xbegin
jmp
or
dec
xorb
and
and
add
gs
fbld
add
in
sar
lret
xchg
sbb
add
xor
add
pop
add
pop
out
xor
add
add
push
pop
mov
pop
in
adc
into
into
in
lahf
nop
jecxz
xor
add
pop
lret
push
ficoml
mov
ja
clc
sahf
or
clc
int3
ds
add
insb
js
sub
pop
cwtl
icebp
call
cld
jmp
add
add
dec
cmp
clc
xchg
movsl
clc
push
clc
mov
push
add
jb
add
add
jae
add
add
popl
clc
cwtl
push
call
cld
jmp
xchg
js
sub
push
sub
ss
ret
adc
testl
aaa
xchg
jno
add
xchg
sar
clc
mov
xchg
jmp
clc
stc
mov
dec
jmp
mov
mov
jmp
add
or
add
add
or
add
lods
or
add
loop
inc
clc
cmp
test
clc
add
add
sub
mov
add
and
add
clc
jmp
add
inc
add
std
push
add
xor
add
push
clc
or
add
inc
clc
jg
or
xbegin
xchg
push
test
inc
add
test
nop
push
popf
out
or
mov
push
add
lock
add
or
mov
sti
in
fisttpl
cmpsl
clc
and
add
add
enter
add
mov
mov
clc
rclb
add
add
mov
clc
sbb
es
xchg
enter
xlat
adc
leave
xor
add
add
in
imul
mov
loop
mov
cmp
clc
fbld
xchg
fisttpl
add
mov
clc
pop
popf
iret
lahf
in
fildl
sbb
jmp
cmp
cmp
add
inc
clc
ljmp
add
mov
adc
add
add
cli
xchg
push
add
out
nop
dec
cwtl
or
movsb
clc
insl
sahf
shll
add
cmp
push
mov
rolb
add
add
mov
mov
clc
xor
add
stos
inc
clc
mov
mov
mov
add
cwtl
and
add
mov
add
jmp
clc
inc
clc
sbb
jbe
ljmp
mov
notb
cmp
clc
call
add
jge
scas
push
ret
cld
jmp
add
jno
push
push
cmpsl
call
adc
add
fcmovnb
clc
cmp
pusha
add
cmp
add
rcrl
outsb
repz
and
add
clc
xchg
and
add
clc
js
clc
mov
jle
sbb
add
adc
add
cmp
xor
add
add
jne
mov
add
insl
vaddps
clc
dec
adc
add
add
ficoml
sahf
xor
add
cmp
outsb
aam
test
push
cmp
mov
bswap
push
add
ret
jecxz
push
add
shlb
mov
jno
add
loopne
scas
or
pop
add
add
sbb
clc
pop
clc
out
or
add
and
add
mov
clc
out
push
add
cld
lahf
sbb
test
es
sbb
add
stc
push
clc
inc
add
je
add
push
xchg
test
add
adc
add
fisubrl
clc
pcmpgtb
psrlq
rcrl
mov
fists
adc
add
sar
dec
pop
jae
add
inc
clc
mov
sub
add
int
clc
repz
sub
clc
iret
sti
mov
push
int
add
and
add
out
xor
adc
jbe
into
lock
repz
xchg
je
into
lcall
add
add
add
sahf
add
sar
push
clc
mov
outsl
int3
adc
add
decl
idiv
pushl
or
sbb
lahf
xchg
inc
clc
and
add
filds
inc
clc
and
add
popl
add
cmp
sub
xchg
leave
scas
leave
imul
mov
clc
leave
inc
clc
push
xchg
cld
jmp
fs
dec
jge
or
clc
mov
clc
in
call
mov
mull
xchg
jmp
nop
lret
loop
cmp
pop
or
fldl
xor
add
sahf
mov
loop
or
add
sahf
dec
ret
hlt
inc
clc
lcall
jns
stos
clc
mov
push
ret
cwtl
mov
mov
ss
ret
dec
sub
clc
and
add
add
xlat
mov
jno
add
clc
hlt
popa
add
cmp
cwtl
imul
adc
scas
add
add
imul
add
clc
out
daa
clc
jmp
cmc
fdivp
jge
fcomps
in
sub
xor
add
cmp
jmp
pop
ss
ret
or
add
add
clc
lods
push
rep
cld
jmp
xchg
jg
or
clc
cld
scas
icebp
fidivs
add
imul
imul
or
in
jns
clc
cmpsl
clc
pop
pusha
add
lcall
dec
mov
add
add
add
cmp
outsl
cs
lods
std
adc
add
decb
rcrb
clc
adc
sar
clc
scas
call
push
ret
or
sbb
lret
lret
decb
lock
clc
out
lods
movsb
clc
sar
clc
neg
clc
outsb
push
rep
cld
jmp
sub
cmpsb
push
mov
je
cld
jmp
jmp
clc
std
mov
shl
out
cwtl
pusha
add
lea
out
leave
add
imul
inc
clc
mov
xchg
sub
cmp
cld
jmp
popa
jg
sub
clc
sar
dec
adc
add
push
add
dec
mov
out
sbb
inc
add
xor
add
sub
icebp
js
outsb
mov
test
ljmp
lods
lea
inc
clc
inc
clc
dec
add
add
and
pop
clc
inc
add
cmp
lahf
cmc
xchg
jecxz
push
scas
xchg
pop
sar
mov
sbb
pop
fs
xor
add
in
stos
jnp
leave
xlat
cld
xchg
psraw
sub
clc
lcall
clc
jg
clc
nop
xchg
and
add
push
popa
cld
jmp
push
sub
push
fwait
mov
clc
dec
imul
sbb
add
sub
add
imul
mov
push
clc
cmp
loop
ja
aam
btc
cmp
and
mul
clc
pop
incb
dec
dec
mov
clc
mov
mov
incl
jp
mov
clc
pop
inc
add
inc
clc
pop
movsb
clc
cmc
iret
and
repnz
cmp
clc
cmpsb
clc
jecxz
pop
cmp
clc
ja
pop
inc
clc
jnp
add
xchg
jmp
mov
stc
mov
mov
add
mov
lret
clc
int
pop
clc
pop
cmpsl
clc
mov
sbb
scas
sub
add
add
cmp
addr16
ljmp
cld
jmp
xchg
aas
test
jno
add
add
movsb
clc
mov
add
std
data16
test
lods
mov
test
sahf
addr16
push
gs
out
aad
clc
mov
xchg
outsb
mov
jmp
cmpsb
fwait
clc
cmp
ja
pop
clc
out
or
in
cltd
mov
mov
jns
add
jo
add
pop
xchg
add
add
clc
jno
add
add
sub
add
mov
je
clc
jmp
clc
inc
clc
cmp
in
aam
cwtl
lock
mov
jmp
cmpsb
pop
pop
dec
pop
cmp
cmp
add
nop
jmp
mov
add
leave
adc
gs
push
pminub
fwait
mov
clc
add
add
add
add
out
sub
mov
dec
sub
je
push
clc
popa
add
lods
inc
clc
dec
int3
out
sbb
imul
adc
add
xor
add
add
clc
test
mov
adc
add
push
lods
push
pop
cmpsl
clc
mov
clc
dec
xchg
loop
shlb
add
pop
dec
in
pop
cli
dec
dec
cwtl
daa
clc
and
add
dec
daa
clc
push
in
mov
in
add
add
add
stos
loop
pop
pop
mov
clc
fisttpl
jg
test
clc
shll
add
add
sti
and
add
jge
and
add
add
push
mov
aad
pop
push
imul
jbe
add
cld
or
test
sbb
add
adc
xchg
pop
and
ja
clc
gs
inc
enter
sub
mov
loop
pop
cs
mov
stos
dec
fcmovbe
mov
inc
add
pop
xor
add
add
add
test
mov
add
ljmp
in
psubw
clc
leave
inc
add
sub
add
pusha
add
es
jge
or
lea
mov
in
sbb
inc
ss
ret
adc
addr16
or
lcall
outsb
in
mov
add
clc
js
clc
adc
inc
clc
repnz
pop
pop
out
adc
add
clc
fnsave
adc
xchg
in
fstpt
imul
mov
clc
sti
sar
add
push
clc
jg
inc
popa
jg
xchg
mov
add
ret
clc
into
push
add
sub
ds
cld
sub
xor
add
inc
clc
repnz
testl
mov
movsb
clc
imul
add
add
cmp
or
add
dec
mov
mov
xchg
push
inc
add
push
xor
add
add
xchg
daa
clc
dec
es
sbb
push
add
xor
jno
mov
clc
jp
clc
inc
clc
pop
js
dec
sti
and
add
jp
add
mov
inc
cld
jmp
sub
and
add
aas
dec
in
in
call
sub
push
addr16
jne
loope
add
fcoms
add
xor
xor
add
add
stc
leave
xchg
lret
dec
xchg
mov
sar
mov
mov
sar
mov
add
test
cwtl
pop
push
xchg
bound
add
add
mul
clc
hlt
adc
ret
scas
mov
sbb
ds
imul
adc
add
icebp
shll
nop
dec
sbb
clc
fs
ljmp
icebp
pop
inc
clc
lea
call
mov
pop
push
add
loope
xchg
mov
dec
mov
ss
ljmp
xchg
scas
pop
xchg
mov
push
pop
cld
jmp
push
lea
adc
add
xor
add
clc
jp
mov
xor
add
leave
xor
inc
clc
das
mov
sub
cld
jmp
mov
das
pop
and
and
add
seta
add
push
clc
clc
cmp
add
das
mov
shrb
pop
imul
mov
pop
clc
xchg
test
mov
clc
outsl
cld
scas
shll
add
out
popa
add
std
jle
clc
push
test
lods
pop
clc
je
xabort
push
push
flds
clc
nop
clc
pop
mov
cmp
clc
sar
clc
mov
loopne
inc
add
xor
test
lea
or
jnp
push
data16
push
cmpw
cld
jmp
push
mov
clc
lea
lods
imul
jne
ljmp
scas
mov
clc
sub
inc
add
lock
and
add
pop
sti
sub
clc
xchg
push
and
add
cmp
int3
sub
add
arpl
add
push
ret
sub
push
sub
clc
jns
dec
clc
lcall
jmp
cwtl
jno
scas
dec
jbe
aaa
jno
add
jbe
cmovb
add
add
outsb
in
scas
jmp
clc
mov
dec
pusha
add
mov
lcall
add
cs
mul
clc
test
cmp
jmp
popa
add
addr16
or
lea
cld
jmp
imul
add
jle
pop
popl
clc
xor
add
clc
sbb
mov
add
sbb
cmp
jbe
enter
add
mov
add
mov
clc
in
add
add
shlb
outsb
data16
pop
jno
add
pushf
jnp
add
gs
cld
cmc
leave
push
add
imul
scas
cld
in
adc
add
ret
clc
ds
lea
or
clc
ds
clc
ljmp
add
clc
adc
fildl
add
cld
jb
add
aad
clc
jmp
add
mov
clc
and
add
inc
add
dec
mov
or
jmp
sub
add
add
icebp
jb
add
mov
mov
sahf
test
xchg
jae
add
add
or
test
ds
or
add
mov
stc
iret
scas
cli
mov
sub
mov
sub
inc
add
mov
arpl
add
add
jns
fwait
kmovw
out
push
add
add
add
add
out
inc
add
ss
test
clc
imul
add
fidivs
xor
add
mov
insb
sbb
jl
jp
jae
add
add
insl
out
lret
fs
mull
in
xlat
out
jmp
clc
mov
arpl
add
add
add
rcrl
add
add
js
clc
mov
sub
or
rcrl
pushf
movsb
clc
lret
cmp
clc
cltd
int
fistpll
jmp
cmp
and
stos
mov
or
clc
mov
clc
sar
lods
mov
dec
mov
fwait
adc
add
clc
inc
clc
shrl
xchg
rolb
add
popa
add
lret
clc
mov
test
popf
sbb
nop
xchg
cli
movsb
clc
add
dec
mov
add
clc
mov
add
mov
clc
cmp
clc
cmp
sub
clc
cmp
add
jmp
ds
sbb
sbb
pop
xchg
aam
pop
outsl
movsb
clc
push
add
nop
fbld
clc
xor
add
clc
push
clc
test
add
mov
fnstcw
lods
cmpsl
clc
jno
add
add
add
jmp
sub
add
sub
std
out
or
xor
add
fldcw
xbegin
clc
or
iret
mov
add
pop
pop
pop
cld
jmp
add
addr16
xchg
cld
xabort
lret
sahf
xchg
cmp
add
outsb
sub
xchg
push
gs
sub
sub
cmp
add
jbe
jne
xor
cld
jmp
mov
add
insl
addr16
mov
jne
pop
cld
jmp
dec
or
fmull
inc
add
fcoml
icebp
mov
lret
movsb
clc
cmp
ljmp
adc
jle
in
ret
clc
in
rcll
add
clc
clc
xchg
push
add
xor
sub
es
xbegin
add
jnp
mov
cld
jmp
and
adc
add
insb
bound
add
cmpsb
clc
push
clc
and
dec
xchg
cmp
sbb
je
add
jmp
sub
xchg
jmp
add
mov
sar
ljmp
cmp
pop
in
sbb
imul
clc
sbb
add
addr16
adc
dec
test
add
push
add
ret
clc
out
lahf
popf
je
dec
fsubrl
xchg
imul
add
in
add
add
enter
clc
mov
ss
ret
sub
insb
test
mull
add
clc
adc
add
cltd
sar
clc
jg
jns
cmc
lcall
loopne
and
pop
clc
mov
scas
pop
pop
jne
mov
add
clc
sbb
stos
dec
jle
adc
add
push
jo
add
fdivrp
mov
mov
orb
data16
sar
clc
call
cmp
adc
add
clc
ja
shll
add
mov
iret
sub
add
jo
add
add
jmp
out
insb
jmp
and
add
cmpsl
clc
cmp
cmp
clc
cs
adc
add
push
clc
xor
add
int3
daa
clc
sar
mov
mov
add
jp
ljmp
hlt
test
out
push
cmp
clc
popa
add
pop
push
jmp
fs
or
pop
lahf
pushl
sar
jmp
adc
push
cmp
sub
cld
jmp
movsb
inc
clc
sub
insb
xchg
rol
clc
inc
add
repz
or
leave
mov
add
sar
clc
fldcw
nop
ljmp
xor
add
das
fldenv
jmp
pmaxub
ret
clc
clc
or
push
clc
xchg
mov
inc
clc
xor
add
add
int3
mov
daa
clc
fs
jge
lods
cli
gs
pop
jg
clc
jmp
clc
jbe
clc
dec
lods
sub
push
add
mov
add
cmp
cmp
jns
es
push
mov
ss
ret
and
enter
jl
xor
add
inc
add
bound
add
clc
ficomps
fimull
ret
clc
cmp
in
cmp
add
xor
add
cwtl
and
add
clc
jbe
jge
clc
pusha
add
xabort
add
mov
sub
lea
add
in
test
clc
push
add
addr16
sub
mov
clc
jle
add
add
in
cmp
and
stc
sub
sti
jb
add
add
mov
aas
fnstcw
adc
jmp
mov
add
mov
mov
clc
fstl
int3
pop
lock
pop
mov
cmp
clc
cld
fs
insl
ret
clc
jp
add
add
add
jecxz,pn
sub
clc
mov
inc
clc
and
add
add
mul
clc
add
add
add
scas
clc
int3
mov
sbb
lock
xor
add
clc
jmp
inc
clc
dec
jle
pop
adc
add
clc
dec
adc
add
popf
ja
clc
test
add
xor
add
clc
adc
add
scas
ja
hlt
mov
sar
cli
jo
add
mov
cmp
add
add
pop
xchg
jnp
sub
clc
scas
das
fmul
mov
xchg
out
cld
pop
sub
dec
cmpsb
clc
out
imul
in
mov
xchg
and
or
ret
mov
sub
test
scas
popa
add
clc
pop
lods
data16
jne
repz
add
add
lods
cmp
imul
add
and
add
clc
and
add
pop
cld
jmp
or
pop
into
test
jnp
call
cld
jmp
push
stc
or
pop
mov
clc
adc
add
inc
clc
es
sbb
clc
dec
popa
add
data16
fsubl
add
clc
notl
cmp
popf
sbb
das
inc
add
rclb
add
pop
and
add
out
popf
adc
add
fadds
add
dec
mov
ds
hlt
inc
add
mov
add
arpl
add
clc
loopne
add
test
stos
shll
leave
loopne
mov
arpl
add
scas
nop
stos
cmp
or
push
add
push
adc
ljmp
out
sbb
cli
mov
push
add
sbb
add
add
add
sar
rclb
add
fsub
clc
sar
add
mov
clc
aad
mov
cmp
aad
mov
add
dec
or
add
stc
and
add
push
out
sub
ja
inc
add
sub
sub
jge
pop
dec
push
clc
scas
jp
lods
and
add
add
scas
push
jle
clc
stos
xchg
bound
add
and
add
clc
imull
sub
or
fistpll
mov
add
add
add
inc
clc
in
ljmp
lcall
mov
mov
mov
cmpsl
clc
cmp
clc
sub
add
add
and
add
es
add
add
out
cmc
cmp
aad
xchg
adc
add
jae
add
clc
fisubrs
ret
clc
popf
inc
clc
mov
gs
cld
xabort
call
jmp
je
sahf
dec
sbb
ljmp
or
jo
add
add
add
push
cld
jmp
push
adc
and
push
aaa
out
fstpl
add
and
add
clc
cmp
and
add
jp
ja
add
pop
negb
jp,pn
xbegin
add
cmp
inc
add
cld
and
add
outsl
add
add
clc
sar
aam
add
add
add
cmc
in
outsb
add
add
into
fisttpl
xbegin
push
add
pop
cmc
sahf
jecxz
push
scas
adc
add
xor
add
add
inc
add
push
add
mov
xchg
cmp
mov
add
add
add
clc
jp
clc
adc
add
cmp
adc
jne
cltd
incb
xchg
pop
clc
adc
cltd
js
xchg
pop
in
pop
pop
in
cmove
aad
fiaddl
add
cmc
adc
add
mov
clc
mov
js
clc
aas
or
add
add
ss
or
add
add
mov
add
push
add
lret
push
mov
jmp
cmpsb
sub
clc
out
mov
sti
out
repnz
xchg
sub
add
test
clc
or
add
add
popl
jo
add
out
jnp
sbb
add
xor
or
add
add
cmpsl
clc
xbegin
mov
xchg
std
rolb
add
sub
cld
jmp
jge
xor
pushl
ss
ret
inc
jp
mov
ret
clc
push
sar
sub
test
jg
aas
imul
cld
jmp
pop
cmpsb
push
xchg
out
nop
lcall
add
jecxz
rorb
sub
hlt
outsl
mov
add
add
cmpsl
clc
jnp
notb
add
or
add
clc
pop
jle
hlt
xor
add
cmp
pop
pop
nop
sar
hlt
sbb
data16
idiv
loopne
es
jg
movsb
clc
enter
xlat
sbb
add
add
add
sbb
jge
add
xchg
lahf
imul
add
xchg
mov
mov
add
insb
adc
add
adc
add
pusha
add
mov
loopne
jbe
clc
sbb
clc
jbe
clc
xchg
leave
jmp
add
cld
jmp
outsl
sar
clc
mov
clc
push
sbb
push
rorb
clc
cmp
add
clc
jecxz
cmpsl
clc
in
pop
mov
add
xchg
fcomps
and
add
add
add
jmp
call
mov
clc
mov
push
mov
clc
fldt
add
push
mov
outsl
sub
clc
cs
clc
int
rep
cld
jmp
lods
sub
lret
jne
movsb
clc
faddp
clc
repnz
dec
test
add
and
add
rclb
and
add
jno
add
adc
add
data16
mov
add
lret
clc
test
icebp
mov
push
push
cld
jmp
xor
test
clc
pop
pop
fisttpl
mov
mov
inc
add
inc
add
dec
add
mov
xor
add
xchg
jg
add
xchg
cwtl
adc
add
dec
mov
inc
add
dec
cmp
neg
sbb
mov
cld
jmp
pop
sub
push
cmp
mov
cld
jmp
cmp
pop
call
add
inc
add
aaa
lods
inc
add
mov
jmp
fists
jmp
cmpsb
push
je
sub
add
mov
sub
clc
iret
hlt
jns
inc
add
js
push
aam
clc
nop
movsl
clc
jae
add
mov
in
or
dec
xor
add
clc
adc
add
or
jle
push
jmp
add
add
add
int
jmp
pop
loope
lret
sbb
mov
clc
imul
add
jbe
lods
mov
pop
add
add
adc
add
clc
sub
clc
jnp
lcall
add
pop
mov
stos
sbb
cmp
add
cwtl
mov
sub
cld
jmp
jno
insb
fs
cmpsb
clc
lea
mov
clc
int
mov
cld
jmp
dec
cmp
add
loop
stos
cmp
aaa
mov
clc
int3
lock
clc
pop
mov
mov
sub
ss
push
and
add
add
cmp
idiv
jg
jae
add
clc
into
into
and
add
out
enter
and
add
push
add
jmp
inc
sub
loope
adc
add
aaa
mov
aas
out
call
jmp
push
ret
pop
adc
clc
mov
cltd
es
aad
add
and
add
int
imul
clc
cmp
fcomps
and
add
jge
clc
sbb
test
mov
hlt
popa
add
jl
clc
cmp
cld
jmp
sub
jne
add
add
add
mov
add
add
push
adc
add
clc
aaa
lods
outsl
cmp
add
in
aas
repz
add
mov
clc
clc
mov
clc
adc
add
mov
mov
push
ss
ret
sub
popf
add
add
sbb
out
sbb
clc
pop
cmp
iret
push
pop
sub
push
in
test
test
gs
adc
add
cwtl
pop
popa
add
xchg
ficompl
and
add
data16
inc
clc
push
lea
ds
clc
or
clc
push
xor
add
test
cmp
setg
add
xchg
popf
inc
clc
inc
clc
movsl
clc
jno
add
inc
add
dec
sub
clc
or
add
pop
movsb
clc
fcompl
aam
test
add
mov
cld
jmp
mov
test
xbegin
xchg
ret
out
xbegin
fists
xchg
cld
jmp
dec
and
int
fiadds
add
aad
sarb
clc
outsl
inc
clc
inc
clc
pushl
sar
ret
lcall
mov
cld
jmp
dec
xchg
add
adc
add
clc
sbb
cli
and
add
xchg
sti
cltd
pop
or
add
lahf
mov
add
js
mov
ss
ret
aaa
das
sub
add
movsl
clc
jmp
push
clc
xor
add
add
gs
test
mov
add
or
cld
jmp
jp
sub
nop
arpl
add
mov
pop
add
add
add
inc
clc
jecxz
dec
leave
in
jb
add
repnz
fdiv
clc
xabort
clc
sub
add
repnz
push
clc
mov
cmp
cmc
jb
add
xor
clc
or
push
add
jp
loop
stos
sub
add
in
fisubrs
push
adc
jmp
sub
pop
push
add
sbb
adc
add
sbb
add
add
stos
in
movsl
clc
mov
pop
jbe
clc
and
sarb
sbb
add
dec
pop
test
loope
and
add
es
push
dec
cmpsb
clc
push
cmp
clc
mov
add
xchg
int3
loopne
dec
xabort
mov
dec
push
enter
clc
dec
bound
add
clc
in
push
jmp
add
sbb
lock
add
or
pop
push
add
ja
clc
dec
and
add
loope
repnz
and
add
xor
add
ret
clc
inc
clc
fwait
jns
xor
add
clc
mov
add
add
clc
pop
ret
clc
jo
add
fcomps
clc
jecxz
sbb
clc
aas
sar
clc
jmp
rep
cld
jmp
push
push
cmp
xor
add
mov
pop
ret
ret
outsl
jg
repnz
scas
xchg
test
xor
ja
ljmp
add
cltd
xchg
fs
in
leave
inc
clc
mov
cmp
add
nop
divl
cmpsl
clc
mov
jmp
pop
push
or
push
add
sar
pop
adc
xchg
push
stc
bound
add
push
add
out
jo
add
decl
mov
push
cld
jmp
sub
bound
add
and
add
das
pop
ljmp
mov
clc
popf
mov
sub
adc
add
jo
add
nop
mov
push
inc
add
pop
mov
sar
clc
xor
mov
clc
ret
cmp
mov
jmp
cmpsb
or
pop
stos
sbb
xbegin
add
jns
clc
in
sub
add
add
mov
clc
insl
jle
adc
add
xchg
clc
stc
xchg
iret
icebp
jnp
movsb
clc
xbegin
push
cmp
clc
push
lret
and
add
cmp
aas
adc
jmp
nop
mov
add
outsl
scas
inc
add
mov
fmull
sarl
loope
mov
clc
int
dec
jp
push
cld
jmp
jge
add
ss
mov
or
add
add
add
pop
or
add
test
inc
clc
cmp
add
and
add
xchg
mov
sub
jl
xor
das
mov
inc
add
xlat
cmp
add
pop
mov
add
add
add
jecxz
aas
das
mov
add
add
clc
lret
mov
pop
add
sbb
cmp
add
adc
add
clc
jg
loopne
loope
jo
add
clc
aaa
cwtl
imul
sarb
adc
add
clc
push
jo
add
arpl
add
add
dec
dec
ljmp
add
xor
add
jmp
shll
sbb
bound
add
and
test
jns
push
add
outsl
imul
cli
lahf
repz
adc
add
and
dec
and
add
mov
push
popf
mov
fwait
adc
jbe
cli
incl
cmp
ljmp
push
sub
or
int3
dec
arpl
add
and
add
loop
xchg
sti
or
clc
fsubrs
ret
clc
pop
clc
inc
add
jb
add
push
je
cld
jmp
sbb
cmp
and
aas
jle
ljmp
cmp
add
inc
add
xabort
add
call
data16
mov
fs
jne
pop
xor
sbb
clc
or
add
xchg
cmp
jne
cld
jmp
stc
daa
clc
jg
xchg
cmp
clc
pushf
jb
add
add
add
add
mov
add
dec
lods
lret
or
cmp
push
xor
cld
jmp
inc
add
sub
push
leave
push
add
xor
xlat
je
jbe
in
cmp
cmp
lods
scas
or
clc
xchg
enter
sub
add
and
add
clc
popf
add
add
clc
stc
xchg
jo
add
cmp
push
imul
xor
mov
pop
testb
add
add
add
out
xbegin
add
add
cmp
dec
cmp
mov
lcall
clc
fstpt
mov
pop
mov
movsb
clc
pop
mov
clc
imul
inc
clc
popf
cmp
xor
add
add
jmp
sub
add
cmp
loope
mov
add
add
inc
add
imul
clc
xchg
cmp
cmp
cmp
and
add
clc
mov
clc
mov
mov
xor
add
arpl
add
add
cmp
clc
push
add
in
pop
pop
xor
jno
add
add
mov
add
mov
mov
test
add
rolb
clc
sub
clc
int3
aas
dec
inc
add
sub
add
inc
clc
insl
mov
xchg
je
sbb
cmp
adc
aas
aas
fnstenv
clc
lret
rclb
int3
xchg
and
add
nop
push
add
mov
jge
pusha
add
push
out
sar
in
fstpt
fistpl
mov
loope
sahf
jmp
jns
mov
add
and
inc
add
mov
clc
jmp
cmc
roll
xor
add
push
mov
push
popa
add
cli
xchg
dec
mov
push
cld
jmp
sub
cmp
clc
jecxz
mov
fidivs
inc
add
rcll
cmp
rcrl
mov
mov
stos
sub
lcall
clc
inc
add
sbb
mulb
mov
ss
ret
aaa
sub
and
add
add
imul
lock
clc
out
stc
dec
mov
dec
or
mov
clc
xchg
ljmp
add
push
shlb
add
sbb
jbe
mov
pop
xor
push
mov
jp
sub
ds
iret
out
and
add
cs
out
out
aas
push
movsb
clc
in
push
push
xor
add
add
push
adc
sti
cld
jmp
xor
sub
add
rcrl
in
repz
pop
push
clc
sub
es
in
mov
mov
cmp
cwtl
leave
icebp
jno
add
add
int
insb
stc
mov
mov
rcl
jmp
fwait
mov
das
outsl
das
or
fnstenv
and
add
fstpt
mov
icebp
out
mov
jnp
sub
add
and
add
jl
int3
aad
ja
nop
rcll
pop
cmp
out
lcall
add
sub
add
lret
clc
mov
xabort
add
inc
clc
clc
arpl
add
movsl
clc
lods
sbb
add
jmp
rcrl
jne
dec
outsb
cs
pop
clc
xchg
push
sar
clc
xor
out
out
push
add
sbb
add
add
add
nop
dec
jo
add
jmp
clc
xbegin
jne
in
inc
add
arpl
add
cltd
dec
or
mov
cld
jmp
sub
pop
adc
cmp
sub
add
add
add
sarl
fmuls
push
and
bound
add
enter
clc
and
add
lods
ss
ret
mov
xor
mov
sub
nop
fisubl
dec
adc
add
add
out
std
fisubs
cwtl
pop
int
clc
inc
clc
mov
inc
add
sahf
xabort
mov
nop
lcall
ds
out
fldl
cs
sti
jnp
sub
clc
lret
add
inc
add
addr16
fwait
cltd
out
adc
dec
scas
fldt
inc
add
arpl
add
mov
imul
lods
or
jecxz
mov
scas
clc
divl
lret
xchg
xor
add
jns
cld
jmp
adc
cmp
clc
inc
clc
pushf
mov
add
sub
clc
into
in
inc
add
xor
add
out
mov
clc
aam
xchg
add
add
clc
xor
add
movsl
clc
sub
inc
clc
jecxz
xchg
xchg
out
hlt
bound
add
arpl
add
add
mov
clc
xor
add
adc
sti
rcll
add
sbb
push
adc
push
ret
and
leave
push
mov
push
add
add
gs
or
add
add
fwait
data16
pop
mov
mov
add
clc
sahf
pop
cmpsb
clc
fcom
scas
jg
clc
pop
aas
mov
adc
add
cmp
or
mov
stos
data16
idiv
data16
push
out
fildll
imul
sahf
test
out
nop
sub
dec
lahf
lahf
cmp
dec
add
add
add
jmp
sub
cmp
xchg
out
rcr
jg
and
cld
jmp
sub
jne
clc
cmp
scas
aam
clc
adc
add
cli
add
add
and
add
xchg
xchg
sub
dec
xor
lret
lret
clc
jno
add
adc
add
xchg
sahf
sub
dec
sub
add
clc
cltd
sahf
shll
add
clc
outsb
clc
mov
adc
add
int3
mov
movsb
clc
enter
push
clc
xor
add
add
ret
xchg
int
sub
add
xor
add
aad
int
sti
movsl
clc
ja
or
add
pop
push
add
xchg
shr
jbe
inc
add
mov
jmp
add
pop
mov
mov
pop
sub
add
enter
cld
jmp
daa
clc
test
add
add
or
add
add
push
xor
pop
push
add
fsubr
add
clc
cmp
fcmovu
mov
clc
jle
fcompl
cmp
push
mov
ljmp
test
je
clc
add
add
stos
jmp
mov
push
add
fabs
clc
sbb
mov
add
dec
sbb
add
jmp
lock
sbb
add
add
aad
inc
clc
int3
int3
out
cmp
xor
add
add
dec
pop
sub
dec
cmp
pop
stos
or
push
add
xchg
pshufw
fsts
cmpl
ljmp
movsb
cld
jmp
and
adc
push
outsl
cmp
popf
repz
add
movsl
clc
xchg
shr
xor
add
add
movsb
clc
cmpsb
clc
sahf
lret
adc
add
in
mov
movsb
clc
push
inc
add
add
add
xchg
ret
clc
mull
add
mov
or
mov
or
add
imul
mov
add
mov
lret
pop
xor
clc
outsl
clc
clc
cmp
add
add
mov
add
out
mov
clc
xchg
sbb
lods
push
call
cmp
jle
hlt
mov
cmp
and
add
clc
mov
clc
mov
jg
sar
out
cmp
lods
enter
xor
add
das
xbegin
cmp
shl
pop
pop
clc
or
clc
fnstcw
pop
loop
loopne
bnd
test
sahf
sbb
clc
mul
clc
mov
clc
xchg
outsb
int
add
insb
or
cmp
pop
mov
movsl
clc
ljmp
push
push
je
xchg
outsl
daa
clc
sbb
clc
ror
or
pop
cmp
jle
repnz
add
mov
movsb
clc
push
add
push
add
push
cmp
push
add
cld
jmp
or
ret
clc
sti
inc
add
pop
test
push
sbb
mov
dec
push
inc
clc
ss
sub
add
pop
rorl
ret
sahf
xchg
in
int
clc
int3
dec
js
clc
rorl
in
jge
cmp
add
dec
outsb
sahf
ret
clc
jbe
jbe
push
mov
add
push
add
cmp
sysenter
dec
mov
fidivl
add
or
add
in
loop
das
fdivr
add
add
clc
or
push
clc
ret
clc
add
add
mov
push
mov
clc
pop
mov
xabort
pusha
add
icebp
sbb
cmp
add
outsl
xor
add
mov
loopne
and
xor
add
movsl
clc
jp
clc
add
add
data16
push
jo
add
add
xchg
stos
cmp
cmp
clc
es
pinsrw
clc
xchg
pusha
add
lahf
cmovae
add
mov
mov
add
add
nop
lahf
cmp
add
push
inc
inc
add
mov
jp
mov
add
fxam
clc
fmull
ljmp
aaa
push
push
jge
iret
mov
cmc
pop
inc
clc
jo
add
imul
add
add
mov
jmp
xchg
sub
cs
outsb
mov
cmc
test
mov
add
add
add
clc
fcoms
add
and
add
clc
inc
clc
mov
sbb
xchg
std
dec
xchg
fs
add
mov
mov
adc
clc
fwait
mov
popa
add
mov
adc
ljmp
clc
mov
repnz
or
add
mov
inc
add
jl
add
sub
add
cmovbe
mov
clc
mulb
aam
aaa
lret
or
add
inc
clc
sub
data16
scas
call
sub
shl
clc
es
inc
clc
gs
clc
gs
jae
add
mov
add
add
push
aam
inc
cld
jmp
sahf
dec
sub
mov
add
inc
add
int
daa
clc
xchg
inc
add
push
add
pop
clc
pop
push
add
enter
ss
cmpsl
clc
and
add
or
xchg
jge
add
popa
add
mov
mov
push
fidivs
lret
xabort
sub
mov
sub
aaa
mov
add
movsb
clc
or
imul
pop
xor
add
out
xchg
aas
mov
xchg
pop
icebp
and
mov
mov
clc
and
add
add
aam
push
add
pop
pop
mov
clc
shll
out
jg
mov
clc
mov
sti
rclb
clc
dec
inc
clc
int
and
pushf
mov
cld
jmp
mov
loop
xchg
fs
rcrl
sub
add
or
add
xor
add
xor
cmp
xor
add
int3
jle
stos
push
add
mov
add
loopne
movsl
clc
pusha
add
dec
jecxz
fbstp
add
out
jns
das
ret
clc
push
clc
loope
testl
xchg
mov
jmp
and
and
add
add
add
in
clc
push
loope
add
imul
or
pop
nop
adc
add
clc
inc
add
adc
add
adc
add
pop
pop
insb
cmpsb
clc
loope
cltd
xor
add
mov
fildll
add
push
arpl
add
cs
jmp
in
inc
clc
xchg
jecxz
call
clc
sub
add
sar
add
mov
and
add
outsl
lcall
cmc
inc
clc
mov
clc
xchg
xchg
int3
sbb
add
shll
fmul
jl
clc
rcrb
jnp
clc
cmp
xor
add
mov
jb
add
jb
add
je
mov
ljmp
imul
adc
add
xabort
pop
mov
outsl
aas
push
clc
repnz
leave
dec
stos
mov
clc
cmp
add
pop
and
enter
add
add
pop
push
inc
clc
loopne
xor
add
js
clc
adc
add
clc
dec
pushf
xor
clc
inc
add
inc
clc
or
mov
add
in
and
add
clc
lods
jae
add
lods
arpl
add
add
clc
mov
add
pop
mov
clc
xchg
mov
clc
mov
jne
push
push
mov
insl
ret
clc
xor
aam
add
mov
popf
mov
add
mov
sub
and
add
add
test
popl
add
add
add
cwtl
mov
int3
or
movsb
clc
push
add
inc
clc
jbe
add
add
push
sub
clc
push
fstl
insb
out
iret
pop
clc
push
arpl
add
int3
dec
cmp
clc
cmp
mov
sub
mov
xchg
pop
clc
pop
mov
clc
cmp
pop
mov
mov
out
push
mov
add
cmp
clc
loopne
xchg
pop
xor
add
pop
cmp
clc
or
cmp
ja
mov
mov
add
add
push
add
push
sub
xchg
int3
insb
mov
rcll
add
cmpsb
clc
and
add
add
mov
mov
dec
arpl
add
loop
out
call
add
push
jecxz
sub
clc
mov
xchg
push
add
sbb
push
push
add
inc
clc
repnz
add
loopne
call
lods
clc
inc
clc
daa
clc
mov
push
clc
jp
sti
sbb
lret
insl
pop
jp
push
add
stc
shrl
jno
add
pop
gs
mov
pop
js
popa
add
mov
lret
cmp
clc
stos
cmp
cs
inc
clc
inc
clc
out
push
add
jle
clc
pop
out
push
jb
add
xlat
ss
add
inc
clc
mov
inc
clc
into
jns
ret
add
clc
xchg
dec
xor
add
gs
jnp
addr16
in
xbegin
inc
clc
iret
or
clc
xor
add
sar
adc
add
add
pop
lcall
out
dec
and
add
stos
or
movsl
clc
notb
add
add
cmp
clc
inc
add
sbb
lock
ds
pop
xor
add
push
add
int3
mov
test
jp
stos
in
imul
data16
stos
out
sar
lcall
mov
xchg
jge
dec
jo
add
fwait
push
add
cmp
cmpsb
clc
or
in
xabort
clc
call
sub
adc
add
add
clc
cmp
cmp
add
mov
cmp
mov
add
xor
add
dec
popf
add
icebp
push
pop
pop
jae
add
aaa
clc
jp
clc
sar
push
mov
jb
add
mov
mov
add
gs
mulb
add
addr16
clc
and
add
clc
lahf
xchg
or
mov
add
cmp
nop
lret
adc
add
leave
xchg
imul
cmp
add
into
sub
push
add
das
add
add
and
add
add
clc
sub
add
je
add
clc
test
out
repz
add
sbb
push
clc
or
repnz
jno
add
push
dec
lea
cmp
out
add
add
add
lret
ss
sahf
int
cmp
inc
add
dec
lret
iret
das
jle
dec
xchg
jno
add
inc
add
aaa
inc
add
insb
cli
pusha
add
cmp
cmp
cmp
mov
mov
add
push
dec
jg
clc
lret
ljmp
cmp
ja
clc
xbegin
pushf
mov
xor
imul
cmpsl
clc
add
add
test
pushf
mov
ffreep
clc
pop
inc
add
or
std
mov
clc
hlt
leave
rorb
fistl
lock
mov
pop
and
add
sub
clc
nop
movsl
clc
jg
inc
clc
pop
loop
or
mov
jp
sti
test
cmp
sar
add
mov
gs
test
fdivl
aam
clc
cmp
in
jns
popa
add
in
xchg
mov
ret
add
and
add
gs
fidivl
aas
mov
clc
imul
into
in
fwait
popf
pop
shrb
add
xchg
mov
inc
clc
pop
std
movsb
clc
pop
jmp
jb
add
add
shlb
add
add
add
add
jge
fsubl
ss
mov
mov
add
test
lret
inc
clc
push
mov
add
or
dec
xbegin
push
add
jecxz
jo
add
add
gs
repz
clc
popf
outsl
adc
add
sbb
icebp
xchg
cmp
jl
ret
clc
jmp
daa
clc
fdivrl
sub
add
clc
loop
mov
sub
gs
adc
add
in
mov
jecxz
or
out
sahf
mov
and
dec
push
clc
jmp
daa
clc
push
pop
call
jl
clc
or
xchg
sahf
dec
ds
loopne
imul
add
sahf
test
lock
scas
mov
xchg
xchg
aam
fmuls
clc
and
add
aaa
fdivrp
cmc
cld
mov
in
insb
test
and
add
add
test
call
imul
mov
clc
pop
loope
xchg
push
cltd
in
or
imul
mov
add
cs
push
add
add
mov
pop
pop
jg
clc
mov
clc
ja
push
movsb
clc
pop
and
and
inc
clc
dec
sbb
jne
jno
add
add
idiv
mov
push
add
dec
enter
js
test
sbb
add
cmp
cmp
out
sar
add
sub
add
loopne
dec
pop
mov
mov
inc
add
fbld
jg
cmp
mov
sti
jae
add
icebp
loopne
mov
icebp
popf
xchg
xchg
mov
add
add
clc
jo
add
cmp
clc
inc
add
pop
pop
clc
repnz
add
negb
lods
add
add
repz
dec
cmp
in
shrl
pop
int
xchg
mov
cli
xabort
dec
mov
out
jle
icebp
into
test
push
add
mov
clc
dec
adc
add
push
fidivs
xchg
decb
sbb
clc
movsb
clc
hlt
pop
js
clc
jle
mov
clc
xlat
das
dec
jg
mov
dec
loop
inc
add
push
icebp
mov
gs
aaa
jge
mov
mov
lock
add
jno
add
clc
mov
lcall
clc
call
clc
cwtl
mov
jo
add
fwait
cli
aam
addr16
pusha
add
push
testl
repnz
loop
gs
addr16
mov
pop
clc
test
clc
pop
cmc
clc
and
add
divl
add
clc
fimull
add
push
add
mov
vmovlhps
cwtl
int3
mov
sbb
clc
xchg
cmp
in
mull
add
sub
clc
fwait
gs
xbegin
bound
add
aas
jae
add
xor
add
add
mov
xbegin
sahf
frstor
push
pop
xabort
inc
clc
test
call
cmp
mov
clc
movsb
clc
xbegin
add
add
clc
ret
mov
clc
adc
dec
adc
add
scas
in
mov
adc
clc
adc
add
push
add
dec
test
bound
add
xchg
push
inc
clc
imul
ds
clc
dec
jbe
cmp
pop
jns
inc
add
dec
push
add
scas
stos
nop
lcall
clc
fwait
imul
pop
or
add
clc
push
jo
add
add
inc
clc
clc
sub
bound
add
iret
mov
inc
add
fwait
arpl
add
ss
adc
add
and
add
push
clc
mul
clc
movsl
clc
out
pusha
add
mov
imul
lods
test
xchg
jbe
clc
inc
clc
inc
clc
test
pop
clc
nop
mov
bound
add
add
pop
adc
add
or
pop
lock
sub
incb
sbb
ljmp
cmp
sub
add
xchg
or
clc
sbb
test
add
cwtl
push
test
cld
jno
add
push
inc
add
jo
add
jecxz
dec
daa
clc
ds
sub
add
xchg
inc
clc
mov
mov
movsl
clc
in
push
clc
inc
clc
int
add
mov
cmp
clc
rep
adc
ja
add
mov
pop
popa
add
dec
jmp
mov
lahf
fldenv
mov
inc
clc
repnz
cltd
lret
pop
pop
pop
xor
test
xor
add
push
cmpsl
clc
cwtl
or
and
add
pop
test
jmp
test
lock
jp
insb
jb
add
mov
add
stos
je
into
sub
add
pop
sub
inc
clc
int
int
call
add
idivb
add
add
add
add
ret
imul
add
test
or
cmp
out
jecxz
rorl
push
or
push
clc
inc
clc
inc
clc
xor
add
add
enter
jbe
dec
and
add
test
add
add
add
clc
loope
jno
add
cmpsb
clc
xchg
pop
sbb
jecxz
mov
add
cld
cwtl
out
data16
xchg
ljmp
in
pusha
add
add
fisttpl
nop
push
mov
jbe
mov
fcomp
mov
popf
inc
add
cmpsl
clc
fs
add
cmp
add
sbb
sub
ljmp
clc
pop
sar
clc
nop
xchg
loope
mov
add
or
xor
add
mov
clc
push
clc
test
das
pop
sub
imul
add
fldenv
add
xor
decl
add
add
add
clc
dec
repz
stos
jecxz
int3
or
inc
clc
insb
dec
popf
pop
push
pop
into
aaa
into
call
xabort
add
lret
sar
insb
and
add
test
sar
fucomp
es
mov
xor
add
add
test
inc
add
jae
add
cmp
leave
sar
data16
mov
add
inc
add
pop
test
lret
clc
loope
cmp
sar
add
inc
add
ds
insl
cmp
clc
mov
clc
xchg
cmp
add
cmp
fs
pop
dec
and
add
xchg
loopne
add
clc
jb
add
jecxz
and
add
and
inc
clc
cmpsl
clc
cmp
data16
mov
push
sahf
aas
movsb
clc
xchg
hlt
fwait
movsl
clc
mov
pminsw
das
xchg
lret
out
xchg
popa
add
jo
add
in
sub
add
xor
add
ror
int3
and
add
hlt
data16
icebp
adc
add
add
mov
ret
clc
sti
cld
jb
add
add
loope
icebp
cmp
mov
lahf
fimull
mov
clc
or
sahf
lock
and
add
add
add
repnz
clc
dec
icebp
xchg
movlps
add
add
add
mov
mov
in
int
pop
inc
clc
cmp
clc
pop
inc
clc
add
sub
mov
imul
mov
add
add
add
jns
xchg
mov
push
idivb
mov
pop
es
cmp
data16
fcmovnb
clc
jne
outsl
ljmp
mov
shl
xchg
cmc
jne
xor
add
gs
mov
xchg
and
add
int
adc
add
lret
aam
sbb
cld
xbegin
xlat
mov
hlt
and
add
push
out
add
add
fsubs
add
push
mov
lret
cmp
cld
cmc
movsb
clc
es
add
vaddps
sub
mov
mov
sbb
add
outsl
es
push
jg
add
sbb
cmp
push
lock
imul
call
dec
leave
sub
mov
jno
add
add
add
pop
add
add
clc
outsl
scas
fsubs
push
shlb
mov
inc
add
jmp
fnstsw
add
add
mov
cmc
push
add
jo
add
mov
clc
dec
pop
jno
add
push
add
jecxz
gs
outsb
push
cmp
and
and
add
jo
add
pop
and
add
data16
loope
dec
loopne
jl
icebp
xlat
dec
mov
add
rolb
clc
repz
dec
or
jp
jmp
clc
mov
add
icebp
inc
clc
xor
add
or
push
add
pop
jno
add
cld
or
add
add
js
sarl
or
or
out
loop
addr16
add
add
clc
fs
and
add
add
imul
jnp
fistps
or
cwtl
imul
add
dec
ret
iret
jne
add
mov
sbb
jbe
mov
clc
js
clc
dec
jnp
ret
clc
aam
repnz
mov
clc
mov
clc
mov
clc
pop
cwtl
repnz
push
add
fstp
mov
mov
jne
out
and
add
sub
pop
jb
add
clc
shll
jnp
clc
or
adc
ret
xor
add
clc
sar
clc
push
pop
mov
xabort
cmpsb
clc
cwtl
bnd
movsb
clc
ret
dec
push
clc
xbegin
clc
adc
fbstp
mov
xor
add
lock
and
clc
mov
sbb
clc
dec
into
nop
fdivp
cmp
test
ret
mov
push
pop
adc
add
add
dec
mov
clc
into
ficomps
clc
into
inc
add
flds
in
insb
xchg
es
fdivrl
and
add
clc
sti
enter
add
clc
push
inc
clc
push
clc
xor
add
add
push
leave
test
adc
add
xlat
mov
add
push
add
mov
add
imul
popf
enter
mov
movsl
clc
add
es
pop
pop
push
out
or
hlt
loopne
sar
int
add
repz
clc
pop
cmp
jp
add
mov
or
add
xor
add
add
repz
add
sub
roll
mov
or
clc
out
pushf
cmp
clc
iret
leave
inc
clc
scas
bnd
sub
mov
dec
sarb
clc
das
cmc
test
pop
insl
nop
lock
cmpsb
clc
dec
push
int3
inc
clc
push
add
cmp
stos
or
push
add
push
iret
cmp
fcoml
add
and
add
dec
push
cli
mov
or
add
add
add
mov
inc
clc
fwait
cmpsl
clc
or
add
cmp
clc
xchg
sbb
clc
std
out
fcmovu
fwait
mov
inc
clc
pop
clc
xchg
outsl
imul
xchg
scas
enter
shll
add
call
js
clc
push
add
pop
popa
add
cli
adc
add
clc
pop
xchg
cmp
int
cmp
xchg
sar
stos
pushf
jmp
jns
jb
add
clc
addr16
repz
clc
lock
mov
cmp
jmp
fnstsw
scas
jg
rcl
in
icebp
jl
into
jmp
pushf
cmp
adc
add
and
test
fwait
out
push
mov
mov
clc
cs
xor
sub
add
mov
clc
cmpsl
clc
stc
lea
jl
jecxz
mov
pop
push
add
sub
clc
enter
clc
mov
add
int3
sub
cmp
or
push
jg
xor
add
clc
lock
dec
sub
outsl
sti
cmp
inc
add
adc
add
sub
clc
data16
cli
dec
js
insl
js
in
sub
sti
jecxz
stos
cmp
add
out
cltd
jno
add
sub
jns
into
cmpsl
clc
popa
add
add
add
add
add
mov
shll
add
add
cltd
jns
add
add
add
out
or
mov
or
add
add
leave
mov
xor
add
cmp
hlt
clc
fcomip
sub
daa
clc
clc
adc
add
lods
xchg
ljmp
add
or
inc
add
add
push
add
popa
add
sbb
cmp
out
arpl
add
add
cmp
sbb
mov
add
mov
cmp
cltd
aad
add
es
xchg
push
xchg
add
add
sbb
nop
xor
add
or
cmp
clc
gs
inc
add
xor
mov
pop
inc
clc
jbe
add
lret
mov
jae
add
clc
out
mov
clc
push
jg
call
add
cli
or
pop
adc
inc
clc
dec
out
test
clc
jmp
lock
add
cmp
add
or
lcall
out
cmp
clc
cmpsl
clc
mov
leave
leave
sbb
clc
stc
hlt
push
clc
mov
add
push
add
add
clc
cmpsl
clc
cmp
lods
add
mov
clc
dec
push
add
imul
jmp
sub
fdivrs
imul
sub
jmp
push
fs
sub
xchg
mov
mov
ret
clc
or
test
jae
add
add
add
adc
add
clc
aas
bound
add
movsb
clc
lret
stc
cs
push
mov
add
in
lods
in
jmp
add
clc
and
add
add
outsl
mov
cmp
clc
xor
add
icebp
cmp
jbe
adc
add
clc
jb
add
add
fistl
xchg
outsl
test
jmp
rolb
dec
movsl
clc
mov
push
dec
int
add
je
int3
mov
out
xchg
jae
add
lods
and
add
add
inc
clc
inc
add
pop
pop
xor
add
clc
mov
jae
add
adc
add
clc
mov
lahf
xchg
xor
add
clc
inc
add
jae
add
icebp
pop
xchg
jp
sar
mov
iret
or
clc
mov
rcll
fwait
sbb
xor
add
push
and
add
add
add
add
popf
pop
inc
clc
repnz
mov
in
or
mov
mov
clc
lods
mov
push
xchg
add
add
xor
fs
ret
clc
sbb
add
aaa
dec
or
cli
jno
add
sahf
pop
mov
push
clc
rcrl
push
add
nop
aad
clc
inc
clc
jae
add
clc
jp
icebp
out
ljmp
clc
sahf
and
add
xchg
cli
sbb
sarl
cmpsl
clc
test
pop
clc
sar
add
lods
or
clc
imull
mov
inc
clc
jmp
jb
add
add
xchg
pmaddwd
ja
clc
mov
out
push
pop
aam
add
mov
jo
add
jge
clc
push
fnstcw
jbe
add
cmpsl
clc
jno
add
clc
xor
add
int
add
lahf
xchg
repnz
add
or
and
add
add
add
mov
clc
mov
enter
jo
add
add
add
jno
add
add
sahf
out
flds
add
push
add
cwtl
push
add
movsl
clc
push
add
mov
clc
or
out
into
sahf
sbb
clc
sar
dec
mov
js
xor
add
pop
sti
inc
clc
outsl
and
add
loopne
xchg
test
fs
scas
out
push
jnp
test
lret
je
xor
add
mov
outsl
mov
enter
clc
jmp
insb
dec
test
jmp
clc
cmp
dec
jg
add
push
jle
clc
sar
add
add
jnp
clc
xbegin
clc
mov
mov
ja
jp
cmp
add
clc
ret
and
aaa
push
imul
add
mov
int
xlat
jns
mov
add
insl
xchg
mov
fs
push
add
ss
add
xor
add
sub
fidivl
int3
test
mov
mov
add
push
add
push
fldt
pop
into
test
xabort
sub
lret
in
scas
fs
lcall
clc
sbb
mov
repnz
outsl
xor
add
cmp
out
xor
add
add
mov
add
clc
xor
add
inc
clc
cs
pop
cld
xchg
jl
and
dec
add
mov
das
stos
aam
movsl
clc
inc
add
push
sar
out
mov
clc
popa
add
inc
add
stos
or
sbb
add
add
inc
clc
mov
scas
sar
out
cltd
insb
out
add
add
add
dec
pop
clc
and
add
mov
xlat
sahf
mov
push
add
push
dec
adc
add
sbb
mov
add
gs
xchg
jl
clc
inc
clc
dec
xchg
es
sbb
pop
lods
dec
adc
add
cs
pusha
add
sub
cwtl
mov
imul
dec
aas
xchg
mov
pop
leave
call
add
jle
lods
and
add
push
clc
sar
pop
hlt
insb
xchg
mov
cli
je
mov
sbb
movsl
clc
sbb
pushf
inc
clc
inc
add
stos
mov
clc
dec
fwait
mov
mov
pop
sbb
mov
add
lock
mov
mov
push
mov
xchg
mov
clc
cmp
add
decb
add
mov
lea
add
sbb
jnp
push
ljmp
dec
and
add
jno
add
int
clc
adc
add
ljmp
clc
popf
enter
push
addr16
push
add
jge
out
aas
lahf
push
jle
fldl
aam
aam
clc
mov
clc
adc
add
mov
clc
mov
or
add
push
movsb
clc
xchg
ret
clc
add
add
nop
or
clc
sub
rorb
and
add
mov
clc
adc
insb
insb
push
outsl
xchg
and
add
dec
scas
xor
add
mov
sub
mov
clc
sbb
add
icebp
sub
dec
call
push
add
addr16
adc
add
add
pop
and
add
add
mov
add
ljmp
fdivp
xor
add
bound
add
clc
sub
mov
mov
add
mov
shrb
sub
or
push
add
arpl
add
pop
xchg
fwait
repz
js
adc
add
clc
dec
push
push
pop
mov
add
popf
cmp
clc
gs
aas
in
clc
flds
sbb
push
add
cmpsb
clc
sbb
loop
imul
pop
sub
jno
add
push
fstpl
add
in
inc
add
xchg
lods
or
inc
add
out
add
add
clc
sahf
pop
cwtl
xchg
outsb
clc
repz
call
sub
test
nop
pop
clc
cli
jns
movsl
clc
and
addr16
add
add
add
sub
clc
add
add
mov
or
xor
jbe
stc
add
add
out
sub
add
or
clts
clc
push
add
movsb
clc
in
xlat
jns
clc
cmp
punpckhwd
cmp
add
pusha
add
or
std
xbegin
add
sar
clc
cmp
add
add
popa
add
test
call
hlt
jbe
xchg
mov
pop
sar
clc
adc
add
add
xchg
vmovhps
sub
out
loopne
jmp
add
std
in
mov
clc
pop
mov
dec
or
add
add
sbb
adc
add
adc
ss
add
pop
xlat
sarb
clc
out
jg
cmp
pop
stos
in
adc
add
xchg
cltd
out
pop
clc
xor
add
clc
sbb
roll
sub
cli
pop
testb
add
mov
or
pop
mov
add
mov
add
sbb
in
sti
popf
pushf
cmp
clc
mov
clc
aad
or
xchg
push
xchg
xbegin
lock
mov
cs
mov
jmp
lock
mov
cld
gs
jb
add
clc
xchg
jle
clc
gs
int
clc
pop
push
cmp
es
xchg
jns
clc
jne
mov
adc
pop
lcall
or
clc
sbb
icebp
test
clc
aaa
cmp
add
clc
mov
add
push
mov
cltd
rorl
clc
mov
test
dec
mov
incb
xchg
cwtl
add
add
addr16
inc
add
shlb
data16
mov
add
cld
dec
jmp
add
cmp
clc
push
add
xbegin
repnz
add
bound
add
xor
add
clc
jmp
clc
pop
pusha
add
or
add
add
cmp
add
clc
scas
sbb
scas
nop
mov
cmp
xchg
into
test
clc
stos
and
add
std
cmp
mov
push
add
pop
cmp
clc
mov
clc
push
iret
xabort
scas
mov
add
add
sbb
clc
loopne
lret
sbb
mov
clc
enter
sbb
add
xchg
sub
in
data16
lock
out
or
incl
clc
mov
mov
sub
sar
add
xchg
movsl
clc
icebp
rolb
js
sub
cmpsb
clc
insb
add
add
add
add
dec
push
add
ja
es
mov
add
lahf
fs
add
add
clc
es
ret
clc
mov
add
add
cli
cmp
cmp
add
aaa
add
add
add
xabort
add
push
add
cmp
imul
push
ss
add
add
add
push
test
gs
jl
stos
in
gs
gs
test
aas
stc
mov
xchg
sub
daa
clc
inc
add
sub
vandps
clc
bound
add
add
outsb
lsl
add
push
add
pop
inc
clc
jmp
add
add
push
pushf
scas
dec
push
add
mov
mov
jmp
fidivs
add
and
add
test
add
mov
pusha
add
scas
mov
pop
imul
insl
lock
mov
repz
rcll
add
dec
or
dec
lods
sub
dec
push
out
push
lcall
and
add
add
clc
or
inc
clc
adc
add
scas
xlat
jge
push
cmp
add
jmp
test
sub
es
or
lahf
mov
or
mov
push
test
int
clc
mov
pop
insl
mov
mov
pusha
add
iret
icebp
cmp
dec
mov
add
divb
je
popf
enter
push
outsb
cld
std
push
int3
add
add
ret
add
add
add
jo
add
add
pop
data16
cmp
inc
add
push
add
jle
inc
clc
inc
add
test
clc
mov
addr16
test
jo
add
clc
mov
push
clc
xchg
nop
iret
and
out
jne
inc
clc
inc
clc
int
sub
pop
fisttpl
inc
clc
fsubr
test
xchg
pop
jnp
clc
xchg
mov
xbegin
push
add
lahf
sahf
cmp
clc
jmp
daa
clc
loop
out
in
outsl
data16
js
xor
add
xlat
xor
add
xlat
sar
aaa
pusha
add
cmp
clc
sub
cmc
xor
clc
or
aaa
xlat
out
jno
add
and
add
clc
inc
add
cmp
mov
push
and
popa
add
mov
add
xchg
sbb
clc
iret
mov
add
xchg
cli
xor
add
add
add
test
cmp
clc
jb
add
lods
jb
add
add
aam
clc
out
mov
add
add
mov
add
clc
push
sbb
mov
add
cmp
pusha
add
push
clc
movsl
clc
rcll
int3
mov
pusha
add
pop
test
clc
insl
arpl
add
add
clc
add
jmp
std
jmp
dec
xchg
js
clc
xchg
mov
sti
movsl
clc
jne
sar
imul
clc
xor
add
or
jmp
add
out
repnz
xchg
std
push
clc
sbb
enter
add
shr
stos
pop
jecxz
outsl
repz
int
ss
sbb
xchg
cmp
jecxz
sbb
cwtl
pop
icebp
sub
add
mov
cs
stos
push
mov
ret
or
in
add
add
add
into
mov
pop
pop
dec
xchg
pop
clc
xbegin
adc
add
inc
add
dec
push
call
daa
clc
test
fnsave
shl
clc
cmp
shll
inc
clc
pusha
add
pop
test
scas
fbld
mov
fdivrl
fmul
repz
add
add
fs
jmp
fimull
xor
add
mov
dec
rorl
out
test
inc
add
pop
lahf
sbb
adc
mov
clc
sub
add
push
clc
xchg
xchg
push
clc
into
insl
push
add
xchg
cmp
stos
std
sbb
sub
sbb
cmp
stos
scas
stc
je
xchg
stc
js
scas
push
clc
daa
clc
or
add
add
mov
inc
add
bound
add
jns
clc
int3
dec
mov
clc
or
cmp
push
mov
cmp
add
inc
add
xor
cltd
adc
faddl
mov
clc
insl
inc
add
sub
add
ljmp
add
add
add
jo
add
clc
int3
cmpsb
clc
push
mov
movsb
clc
push
jb
add
clc
xor
sbb
ja
mov
clc
jb
add
add
enter
jns
out
pop
mov
push
mov
cmp
and
add
add
cli
and
add
clc
imul
add
clc
aas
xchg
cmpsb
clc
cmp
pusha
add
lods
test
or
add
flds
push
jle
fimull
add
sub
or
clc
int3
insb
cmp
mov
add
std
fwait
cltd
dec
inc
clc
jne
mov
clc
js
add
test
loopne
inc
add
shll
xor
add
sqrtps
add
add
mov
add
hlt
sbb
ds
aas
inc
clc
ds
popa
add
insb
fidivrs
pop
fs
jo
add
add
add
adc
add
add
dec
xchg
cmp
sub
clc
lret
iret
jns
push
xbegin
lea
clc
idivb
inc
add
sarl
sub
lods
js
cmp
cwtl
cmp
clc
sub
push
clc
xor
add
add
clc
sbb
add
sub
xchg
roll
xlat
ret
fs
mov
ficomps
loop
lock
clc
lods
fcompl
das
mov
inc
clc
mov
cmpsl
clc
fdivs
add
clc
xlat
add
rorl
add
add
clc
addr16
ljmp
imul
popa
add
jmp
clc
mov
add
jb
add
clc
clc
adc
add
push
fldcw
mov
neg
outsb
arpl
add
pushf
scas
xchg
pop
clc
fsubrp
push
mov
adc
adc
clc
lea
push
add
sbb
add
mov
sub
clc
jno
add
je
push
icebp
clc
add
add
clc
data16
xchg
outsb
jns
dec
pop
dec
push
inc
add
test
clc
bound
add
scas
cld
push
add
pop
xor
add
inc
add
add
add
add
add
add
scas
adc
add
shrl
in
push
adc
add
and
add
add
stc
xchg
or
stos
push
add
xlat
dec
and
add
xbegin
jmp
in
pop
dec
mov
sar
add
sbb
std
push
add
jg
and
clc
pop
dec
jle
xchg
dec
sub
mov
sahf
mov
icebp
addr16
lret
enter
xor
add
clc
sub
add
pop
cld
and
add
clc
jo
add
or
sahf
ret
clc
gs
inc
clc
pop
cli
xchg
or
clc
and
add
clc
punpckhbw
dec
imul
in
out
outsb
xor
add
adc
outsb
pop
sar
xlat
cmp
mov
scas
jne
mov
cmp
shld
mov
clc
and
add
and
add
add
lea
mov
mov
clc
pop
jae
add
clc
or
popf
sbb
sub
add
arpl
add
ret
and
add
add
add
cmp
jle
clc
call
mov
loopne
decb
test
mov
mov
aaa
inc
add
cs
test
xor
add
add
ss
cmp
add
lock
mul
clc
insb
pop
cmpsl
clc
sbb
and
js
movsl
clc
cld
movsb
clc
enter
cmp
inc
clc
hlt
or
add
fadds
clc
add
popf
jge
iret
stos
mov
add
testl
clc
push
cmp
push
cmc
dec
push
aas
movsl
clc
call
rcrb
adc
add
add
push
add
pushf
daa
clc
xchg
mov
outsl
mov
push
clc
test
mov
pop
repnz
jle
add
movsb
clc
insl
mov
cmp
cmp
clc
lea
mov
inc
add
stc
mov
aad
mov
das
xchg
popa
add
das
and
add
lret
add
mov
add
inc
clc
notl
add
clc
jno
add
mov
sti
arpl
add
mov
fistps
scas
jp
add
cmp
add
and
add
add
ret
clc
mov
and
mov
add
rorb
arpl
add
insl
leave
sub
lcall
clc
sbb
cli
popa
add
xor
add
add
and
add
mov
xchg
sub
ljmp
add
or
clc
pop
pop
adc
add
lods
std
fwait
loope
pushl
jp
add
cmp
xabort
lcall
clc
push
pusha
add
add
add
inc
clc
xlat
add
leave
sbb
clc
sti
xchg
test
add
xor
add
call
clc
mov
clc
sub
add
xchg
bound
add
push
call
clc
cmp
add
mov
jnp
lea
shl
clc
mov
clc
test
dec
cwtl
out
push
add
xchg
aam
clc
push
clc
outsl
js
jbe
clc
iret
hlt
into
dec
add
add
push
cmp
clc
movsl
clc
test
mov
fisubrs
mov
or
cmp
clc
dec
push
add
push
push
clc
fldl
clc
jb
add
cs
add
jle
das
repz
popf
pop
rcll
cmp
inc
add
repnz
jae
add
mov
repz
sub
clc
test
or
clc
imul
clc
xchg
sti
je
pop
clc
mov
add
pop
mov
jb
add
jb
add
add
push
mov
int3
fsubrp
int
clc
xchg
in
cs
xchg
dec
int
ret
clc
cmp
lods
cmpsl
clc
push
out
mov
sub
clc
outsl
insl
out
mov
hlt
jb
add
jecxz,pt
and
add
add
xchg
pop
aas
mov
jmp
push
and
sti
test
xchg
dec
add
add
clc
sar
add
xchg
cmp
imul
mov
clc
aaa
pavgb
mov
add
add
clc
jo
add
clc
movsb
clc
cmp
clc
fistpll
cmp
add
or
add
lcall
add
add
clc
inc
add
sbb
clc
sub
add
clc
fistl
add
jne
mov
add
or
push
stc
movsl
clc
inc
clc
clc
aas
push
add
mov
mov
pop
clc
mov
mov
int3
or
lcall
clc
add
add
xchg
add
add
add
dec
and
add
fstpt
xor
add
cmp
shr
clc
mov
je
and
add
add
lahf
movsb
clc
or
add
inc
clc
stos
jle
jns
jne
fsubs
add
jle
arpl
add
add
out
mov
lods
dec
cmp
mov
dec
into
ds
jmp
jp
js
clc
bound
add
add
sbb
add
out
sbb
ljmp
sub
mov
add
and
add
add
in
dec
repnz
cmp
jns
dec
ret
mov
clc
xchg
out
dec
mov
clc
sbb
add
inc
clc
sub
xchg
xchg
arpl
add
xchg
clc
push
gs
mov
lahf
movsl
clc
xchg
mov
mov
add
clc
iret
jbe
fcoms
mov
popa
add
mov
jmp
stos
cmp
insl
out
mov
jb
add
fadds
mov
add
and
cmp
add
sbb
cmp
push
add
add
add
pop
or
clc
scas
mov
js
jp
clc
dec
loope
jbe
lea
add
xchg
sub
leave
mov
mov
cld
data16
cmp
mov
xor
add
imul
add
daa
clc
jmp
std
inc
clc
sub
clc
inc
clc
sar
clc
mov
pop
add
add
cwtl
stos
cmp
add
jns
dec
mov
clc
loope
iret
adc
clc
jg
jg
add
test
mov
imul
clc
lock
add
mov
clc
adc
add
scas
fimull
clc
fcoms
sti
repz
sbb
add
or
and
add
clc
pop
inc
clc
sub
add
jne
mov
sub
dec
dec
dec
in
icebp
jecxz
insb
xor
add
aad
clc
loopne
pop
aas
dec
in
jbe
mov
lock
add
add
clc
mov
cmp
jg
outsb
xor
add
add
insl
inc
clc
cmc
ffree
clc
aas
xor
add
jne
leave
scas
arpl
add
mov
mov
clc
lcall
add
jle
clc
cs
add
inc
add
jmp
cmpsl
clc
pop
ret
clc
sub
push
add
and
popf
cmp
and
add
mov
ljmp
add
push
inc
clc
cs
sbb
mov
add
pop
xor
add
add
push
mov
add
jecxz
mov
xchg
and
add
mov
std
sbb
mov
loop
mov
cmc
std
stos
cltd
adc
add
add
ja
and
add
popa
add
cmp
pop
pop
xchg
xor
pop
hlt
xchg
jecxz
clc
dec
xor
es
daa
clc
rclb
add
add
mov
sub
clc
jbe
clc
gs
mov
mov
dec
lods
mov
or
xchg
adc
add
add
jbe
idivb
adc
add
xor
add
clc
popf
xchg
pop
aaa
xor
add
add
adc
xchg
sar
clc
clc
fsts
add
and
add
mov
pusha
add
xbegin
jns
imulb
inc
add
adc
add
add
shrl
in
push
cmp
clc
xor
add
sti
sbb
std
xchg
fbld
add
xor
add
push
scas
ljmp
add
ret
mov
clc
jbe
clc
mov
xchg
aam
add
sbb
add
add
or
clc
fcoms
mov
push
lods
lods
fcmovb
clc
jb
add
cmp
testb
clc
sbb
add
sarb
add
bound
add
clc
pop
pop
mov
clc
cli
cmp
pushf
dec
mov
lahf
lret
cmp
dec
insl
push
add
push
ficoms
add
clc
or
add
mov
adc
lahf
ss
sar
clc
mov
mov
js
inc
add
push
and
add
cmp
scas
or
int3
cmpsb
clc
mov
cmp
or
loop
mov
clc
xlat
pushf
imul
clc
pushf
fisttps
sub
add
cmp
dec
clc
mov
xor
xchg
ss
int
rorl
fsubrs
clc
testb
jns
and
add
xor
add
clc
xchg
dec
sbb
cmp
add
sbb
scas
nop
cmpsl
clc
add
add
sbb
clc
test
mov
lcall
sbb
data16
je
das
or
clc
dec
push
and
add
add
mov
fbld
clc
sbb
add
stos
sbb
and
add
mov
lods
push
cmp
add
push
rcl
imul
add
adc
add
inc
add
imul
cmc
out
jno
add
or
es
fbld
push
cmp
movsb
clc
fs
cmp
or
mov
or
or
int
clc
xchg
xbegin
add
add
add
cmp
in
or
add
lret
mov
bound
add
iret
xor
add
dec
cld
daa
clc
cwtl
mov
jg
clc
idivl
repz
pop
mov
outsb
stos
or
clc
ds
fcomp
test
clc
push
add
add
add
jmp
clc
mov
add
pop
clc
lret
pop
cmp
int3
test
dec
push
push
add
add
clc
xchg
xchg
add
add
pop
sarl
out
mov
add
js
ret
clc
push
add
inc
add
sar
jns
clc
cli
aam
clc
punpckhdq
lret
add
add
add
adc
add
clc
addr16
std
add
add
es
fldl
push
out
sahf
sahf
xlat
shlb
pop
or
add
ret
clc
movsb
clc
push
add
into
mov
xor
add
in
mov
mov
add
clc
sbb
clc
mov
dec
and
inc
add
cmc
or
jnp
mov
add
jne
das
out
lcall
jg
sub
jl
cmp
xchg
aam
jmp
mov
add
loope
mov
add
icebp
lret
pop
mov
outsb
cs
nop
xchg
mov
clc
sar
fisttpl
aas
dec
jbe
clc
dec
push
add
cmp
call
add
lods
sti
adc
add
add
pop
inc
add
mov
add
test
add
add
cli
fcoms
add
cmpsl
clc
ret
adc
add
cs
cmp
clc
gs
fmuls
sub
clc
fbld
add
or
add
cmp
inc
clc
mov
add
xchg
cwtl
in
mov
add
mov
add
mov
clc
fmuls
mov
cmp
inc
add
inc
clc
std
mov
mov
xchg
int3
cmp
xchg
leave
xabort
dec
xchg
sub
add
add
fsubs
sub
mov
repnz
pop
shrl
add
test
cmpsl
clc
mov
gs
adc
add
add
rorl
dec
sub
xchg
pop
adc
add
loope
dec
push
js
push
pop
clc
xchg
dec
push
and
jno
add
jo
add
movsb
clc
xchg
cmp
push
add
lods
mov
fucomi
sti
cmpsb
clc
jo
add
add
scas
sbb
test
es
imul
jle
xchg
inc
add
push
add
xchg
cmp
lret
cwtl
mov
push
mov
clc
adc
xor
add
in
mov
push
ds
or
clc
and
add
xor
add
xchg
std
sub
inc
clc
fsubl
add
mov
and
add
enter
sbb
clc
pop
sbb
clc
icebp
iret
or
clc
daa
clc
xchg
inc
clc
mov
aaa
cmp
add
dec
xchg
mov
fbld
scas
cmp
add
bound
add
and
dec
scas
mov
add
mov
das
outsl
jg
shlb
xbegin
pop
clc
and
add
mov
mov
scas
jns
scas
pop
scas
pop
inc
add
sar
add
mov
dec
and
and
add
jo
add
imul
add
into
jmp
clc
inc
clc
in
add
add
add
xchg
test
icebp
push
add
push
add
rcll
lea
mov
outsb
mov
scas
fs
sbb
add
int
inc
clc
in
push
lea
add
leave
push
cltd
fs
xchg
sub
fisubrs
rcrl
lods
pop
add
add
cmp
jge
xchg
or
sbb
fldl
push
pop
iret
js
lret
out
xchg
lods
lret
out
loop
inc
clc
stos
pop
jnp
out
cmp
push
add
add
aam
clc
xor
fimull
clc
inc
add
inc
add
or
jb
add
clc
dec
ret
clc
dec
jmp
clc
xchg
out
cmp
clc
movsb
clc
mov
mov
lcall
or
clc
ljmp
das
pop
push
add
out
es
iret
mov
add
and
cmp
and
xchg
add
or
inc
add
xchg
imul
clc
sahf
into
mov
add
add
addr16
out
fwait
cli
fwait
push
jae
add
add
add
cmp
add
data16
or
lcall
je
cwtl
cwtl
loopne
mov
and
scas
cmp
loop
hlt
lret
iret
pusha
add
mov
jo
add
mov
adc
add
add
sysexit
sahf
inc
clc
mov
imul
sbb
clc
cmp
or
fmull
dec
je
push
sahf
sub
add
fistl
movsl
clc
aaa
or
divl
je
sar
push
add
fstpt
pop
pop
cmpsb
clc
loop
mov
add
or
ljmp
cvttps2pi
fistpl
data16
fcoms
js
inc
add
fisubs
add
add
iret
testb
add
add
push
pop
ds
clc
dec
inc
add
clc
mov
scas
mov
daa
clc
xor
add
lret
cli
es
jnp
pinsrw
clc
mov
clc
sub
pop
dec
test
aam
jo
add
data16
cli
pop
dec
movsl
clc
xor
add
aaa
divl
mov
add
pop
inc
clc
cmpsl
clc
sub
add
add
add
push
imul
mov
add
inc
add
push
inc
clc
xor
add
movsb
clc
jb
add
jb
add
add
ja
cmp
fistl
add
hlt
das
and
add
add
es
mov
add
add
test
mov
add
movsl
clc
je
loopne
test
add
test
xor
mov
add
pop
add
add
push
sti
pop
clc
inc
clc
inc
clc
xbegin
pop
clc
xor
add
cmp
pusha
add
cmp
pop
imul
add
and
add
decl
adc
add
jg
adc
push
xchg
sbb
clc
mov
mov
cmp
cld
daa
clc
dec
xchg
push
js
add
cmpsb
clc
imul
fldt
clc
call
jne
clc
sub
clc
dec
es
adc
clc
lods
and
add
hlt
leave
inc
add
cltd
inc
clc
jae
add
and
mov
aam
fiaddl
adc
add
add
xor
add
imul
dec
js
out
add
add
or
add
or
popa
add
outsl
lods
mov
ja
rol
clc
push
cmp
xchg
push
cmpsb
clc
cmp
insb
cli
out
inc
clc
aam
mov
ffree
clc
inc
add
and
add
sti
ljmp
adc
add
add
ret
clc
or
jp
fiaddl
add
add
popa
add
in
scas
jecxz
jnp
and
jmp
mov
clc
out
mov
es
jmp
mov
push
add
mov
add
dec
add
pop
clc
in
push
clc
jl
inc
add
ljmp
or
insb
icebp
lods
xchg
lret
jp
clc
dec
stos
and
add
add
lcall
cwtl
mov
add
add
je
ret
data16
mov
sub
or
sbb
gs
mov
clc
jmp
pop
cmp
add
cmp
dec
cmp
out
cmp
test
fidivrs
clc
jae
add
arpl
add
clc
ret
clc
jae
add
es
or
add
push
cld
aad
clc
inc
clc
jg
add
sub
ja
clc
ficompl
stc
adc
push
clc
adc
add
add
enter
add
add
add
mov
gs
into
pusha
add
clc
rorb
adc
stos
add
add
das
sub
sti
fbld
add
mov
inc
add
or
clc
sub
xchg
cmp
push
add
lahf
stos
xor
dec
push
shll
add
shrb
aam
clc
xchg
mov
mov
xchg
dec
into
and
iret
sahf
sahf
popf
jb
add
iret
iret
mov
add
mov
add
push
add
pop
clc
ja
xchg
loopne
adc
imull
jmp
dec
out
stc
pop
or
sbb
clc
imul
ss
clc
in
iret
mov
add
push
fprem1
loope
sbb
add
push
stos
cmpsb
clc
in
jge
add
insl
cmp
add
push
clc
out
icebp
mov
clc
scas
sub
or
push
dec
fildl
add
inc
clc
pop
gs
or
clc
int3
sub
or
int
jne
pop
cli
xchg
stos
aaa
ja
outsl
iret
adc
add
ja
pop
clc
inc
clc
adc
add
add
sahf
jmp
jne
lcall
sbb
sarb
into
mov
xchg
es
cmp
jp
mov
dec
pushf
pop
outsl
push
sbb
pop
sub
lret
add
or
clc
std
shrb
pop
leave
ja
test
sbb
imul
mov
add
mov
add
fisubrs
inc
clc
jb
add
inc
add
xor
add
pslld
add
shrb
clc
or
dec
xchg
jecxz
sub
test
sub
add
stc
fidivs
add
add
add
add
push
icebp
int3
cmp
data16
cmp
mov
jge
xor
add
cli
icebp
fs
incb
clc
adc
add
clc
cmp
add
push
add
sbb
dec
dec
xchg
push
fistpll
cmc
cmova
scas
mov
mov
adc
add
add
mov
bound
add
add
pop
sbb
add
fucomp
movsl
clc
dec
sbb
clc
xor
add
add
pmuludq
dec
and
add
pop
inc
add
cmp
shrb
sbb
ss
mov
repnz
fnstsw
add
jl
jmp
add
cmp
inc
clc
data16
cmc
daa
clc
adc
add
add
es
cwtl
sahf
cmc
and
add
fisubrs
xchg
sub
cltd
cld
pop
dec
mov
jecxz
lock
arpl
add
clc
add
add
push
jns
sub
loopne
movsb
clc
mov
addr16
jnp
rol
clc
sub
lods
xchg
inc
add
repz
std
xchg
mov
xchg
and
add
testb
add
clc
cmpsl
clc
jl
sub
add
in
movsl
clc
adc
add
clc
adc
add
mov
clc
das
adc
add
clc
cmp
clc
pop
mov
hlt
and
fcmovnbe
cmpsl
clc
in
pusha
add
test
ret
stos
es
lret
add
sar
xchg
adc
add
test
daa
clc
xchg
adc
add
out
clc
rorb
cli
mov
fldenv
clc
inc
add
clc
or
or
add
mov
loop
fucom
clc
jae
add
add
dec
xabort
add
call
je
out
dec
insb
or
add
mov
cltd
mov
add
scas
xchg
and
add
sub
clc
xchg
clc
bound
add
clc
jns
add
mov
add
lret
mov
adc
add
daa
clc
lock
arpl
add
clc
xor
add
sar
clc
jle
add
jno
add
jp
clc
mov
xchg
mov
and
add
sbb
clc
addr16
mov
inc
clc
push
add
or
xabort
cmpsl
clc
jle
loop
pop
daa
clc
and
leave
sub
gs
sti
popf
pusha
add
fdivs
push
cmp
clc
sub
jno
add
sar
data16
pop
mov
clc
in
scas
xchg
dec
mov
cli
adc
add
add
add
repz
cmpsb
clc
pop
sbb
add
adc
add
xbegin
adc
add
clc
sub
dec
mov
vmovaps
clc
and
add
sub
push
movsl
clc
mov
notl
sar
jmp
jne
push
enter
out
sti
push
cmp
fs
inc
add
cmp
adc
add
clc
ja
fs
loop
push
fmuls
add
add
add
pushf
mov
jno
add
ficoms
add
add
mov
clc
dec
fdivrs
xchg
lcall
pop
rcrl
aad
repz
add
add
add
add
cli
pop
jno
add
ret
push
lock
and
es
mov
dec
pop
fs
movsb
clc
push
add
mov
shlb
mov
shld
je
clc
dec
dec
outsl
lods
xor
add
cmp
mov
negb
gs
sub
jne
lahf
sbb
gs
std
mov
sub
sbb
add
je
loop
pop
push
filds
add
clc
pop
mov
clc
je
sbb
sub
add
add
add
xor
add
add
outsl
xor
add
sbb
push
add
pop
lahf
lret
clc
cmp
push
add
mov
dec
jmp
mov
add
roll
mov
sbb
clc
mov
push
add
mov
dec
cld
pop
xlat
xchg
je
add
clc
lods
outsb
pop
ja
add
pop
pop
cmp
bound
add
add
add
add
outsl
imul
clc
adc
add
loope
or
clc
cmp
add
or
push
jge
pop
lcall
push
xor
add
aad
cmp
icebp
pop
out
mov
clc
cli
jp
mov
fs
mov
mov
clc
clc
inc
add
or
cmp
mov
clc
dec
cmp
clc
stc
push
sbb
inc
clc
lock
aas
outsb
in
mov
rcl
cs
cmp
clc
je
clc
pop
movsb
clc
pop
or
idivb
sbb
aad
pushf
adc
add
clc
ja
mov
test
add
jo
add
sbb
dec
stos
xbegin
add
add
add
pop
cmp
jg
sbb
add
clc
cltd
push
add
mov
clc
sbb
mov
lock
add
sbb
mov
push
pusha
add
cld
or
clc
and
test
lret
sub
add
add
add
add
out
call
clc
mov
clc
cmp
add
add
clc
add
inc
clc
or
add
adc
add
mov
add
scas
icebp
lcall
jmp
xabort
add
pusha
add
das
lret
sti
add
add
cmp
clc
sbb
xchg
negb
pop
jns
clc
js
jge
or
pop
mov
or
clc
scas
cmp
push
push
leave
xchg
insb
inc
add
loop
jne
mov
movsb
clc
leave
pop
inc
clc
adc
clc
xbegin
add
in
ja
mov
clc
outsl
pop
imulb
int
clc
inc
add
in
xchg
mov
dec
fcmovnu
int
cmpsb
clc
clc
jo
add
call
lret
clc
mov
dec
inc
add
divl
jo
add
ds
clc
imul
clc
dec
fbstp
add
push
movsb
clc
daa
clc
pop
lcall
sub
dec
mov
and
xchg
sar
push
fmuls
inc
clc
xabort
mov
add
add
add
add
shll
add
add
add
mov
add
mov
flds
add
mov
sub
add
ret
clc
fsubs
inc
clc
mov
add
clc
cmpsl
clc
out
fs
bnd
sub
je
imul
aam
sub
sbb
add
fisubrs
jp
das
mov
in
loope
gs
shlb
mov
add
insb
mov
addr16
ljmp
repz
clc
jo
add
xchg
lret
jmp
clc
shrl
scas
xchg
sbb
iret
or
ret
clc
aas
mov
sub
rsm
dec
jbe
cli
push
cmp
clc
insl
out
dec
push
pop
jmp
jnp
in
push
clc
in
xor
pop
mov
scas
mov
jecxz
sbb
imul
xchg
push
mov
adc
add
add
shlb
clc
icebp
sar
int3
and
ret
clc
inc
add
je
sar
add
fmull
mov
clc
push
xchg
cmp
inc
add
dec
outsl
enter
jg
test
divl
add
lahf
dec
adc
add
mov
push
insl
sub
outsl
pop
xchg
addr16
inc
clc
ljmp
clc
sub
xchg
mov
jp
inc
add
scas
inc
add
jo
add
pop
inc
clc
mov
cs
add
add
add
test
jge
sbb
jno
add
clc
sbb
fdivl
add
pop
popa
add
sar
clc
loopne
movsl
clc
jge
clc
xchg
clc
fs
adc
sarl
pop
and
add
bound
add
add
bound
add
mov
mov
repnz
add
dec
mov
clc
std
std
push
add
loopne
dec
dec
test
out
jbe
sub
mov
add
clc
xor
add
clc
dec
and
add
clc
xchg
cmp
clc
mov
dec
and
add
mov
clc
gs
xor
add
add
hlt
push
clc
nop
jne
lods
xor
add
add
add
add
clc
sarb
fcoms
addr16
sub
xbegin
add
inc
clc
int
jge
lret
clc
lcall
push
clc
mov
add
sar
xchg
cmp
addr16
inc
add
jecxz
bound
add
mov
add
add
rolb
sub
aaa
xchg
jl
js
clc
xchg
jbe
add
mov
popa
add
fstpt
sbb
add
addr16
ret
movsl
clc
pop
sub
clc
xor
cmp
clc
stc
dec
mov
add
jle
mov
nop
das
icebp
or
es
sub
loop
mov
clc
inc
clc
and
add
sub
aaa
mov
add
in
pop
daa
clc
rcrl
add
add
int3
push
or
and
add
jl
cmpsb
clc
sub
cli
mov
out
es
sub
add
push
mov
clc
test
push
add
jmp
mov
clc
adc
add
xor
sbb
pop
fstl
add
adc
add
add
push
outsb
es
jmp
add
cmp
push
sbb
clc
dec
inc
add
xlat
mov
clc
xor
add
out
insl
mov
cmp
clc
or
push
lods
pop
stc
inc
add
imul
or
clc
popa
add
in
xlat
popf
or
jg
jne
adc
out
mov
add
add
inc
clc
scas
icebp
sti
mov
clc
mull
add
add
add
hlt
inc
clc
sar
add
add
add
or
add
clc
cmp
clc
out
xbegin
cmp
cmc
cmp
adc
push
cmp
clc
pop
mov
add
lcall
fs
xor
jg
add
inc
clc
lret
clc
lea
ret
add
add
fcompl
cmp
mov
and
jle
add
add
jmp
sub
daa
clc
outsl
adc
jbe
cli
or
add
outsl
sub
mov
cwtl
mov
xchg
iret
out
aam
adc
cmp
rorb
add
xor
add
add
clc
pushf
or
bound
add
imul
xchg
xchg
cltd
inc
clc
sub
adc
movsb
clc
inc
add
jne
and
add
mov
clc
xor
add
clc
into
loope
xchg
xchg
dec
mov
mov
and
add
inc
add
mov
cmp
inc
add
xchg
push
add
cmp
add
imul
clc
js
sahf
jns
add
or
pop
clc
in
je
mov
add
leave
je
xor
add
clc
mov
clc
insl
arpl
add
test
out
js
clc
es
fstl
add
add
mov
xabort
mov
pop
mov
loop
pusha
add
cltd
out
xchg
sub
cmp
add
xchg
inc
clc
xchg
fs
enter
xor
add
add
pop
push
xor
add
and
add
in
sub
fs
cmp
clc
stc
aad
jmp
clc
jle
clc
lret
jge
clc
roll
add
fcompl
inc
clc
loop
push
xor
add
clc
bound
add
clc
fwait
aad
add
xbegin
add
mov
mov
clc
pop
cmp
add
clc
and
js
cmp
add
xlat
stc
scas
js
clc
shlb
add
stos
clc
mov
cmp
add
pop
mov
clc
xchg
pop
div
sub
mov
js
in
fisubs
outsl
mov
add
xchg
adc
add
pop
jne
sar
sub
ss
add
lea
sub
test
clc
ret
xchg
cmp
clc
push
push
add
inc
add
lret
add
clc
xchg
aam
fsubrl
icebp
adc
add
std
icebp
fdivl
clc
jae
add
add
test
popa
add
je
jp,pn
and
add
add
stc
clc
adc
clc
int
clc
test
imul
jl
mov
dec
notb
ja
clc
xlat
sar
push
cmc
or
xchg
sahf
jae
add
pop
into
clc
fsubl
outsb
pop
movsb
clc
enter
loopne
lock
add
mov
fsubl
in
iret
bound
add
add
jae
add
cmp
add
cmp
push
push
xabort
adc
jno
add
in
enter
clc
shlb
add
add
lods
mov
imul
int
sar
xlat
scas
add
add
rclb
cmpsb
clc
js
add
outsl
loopne
sar
insb
scas
pop
js
push
clc
mov
add
in
in
into
mov
sahf
sbb
jecxz
xbegin
ljmp
xchg
mov
or
out
insl
int3
stos
lea
add
jecxz
or
add
xor
ja
cmpsb
clc
sar
xor
add
cmp
dec
and
das
in
adc
add
add
cmp
cmc
enter
clc
push
repnz
lods
mov
fidivl
xor
add
ds
fstpl
add
xchg
mov
cmpsb
clc
hlt
mov
sbb
cwtl
jmp
jno
add
push
add
lods
add
add
mov
ljmp
in
aaa
in
adc
fcoms
add
add
pop
xor
and
add
inc
add
lahf
jne
decb
cltd
dec
mov
mov
sub
cli
icebp
dec
rclb
add
add
add
icebp
scas
out
xchg
push
std
aam
pop
fsubrl
cmp
jl
xor
add
clc
fs
cs
xor
shr
or
sub
sbb
popf
in
js
add
jno
add
int
pop
add
add
xor
add
jl
mov
clc
cmp
mov
adc
add
std
testl
cltd
fwait
or
add
clc
cmp
test
push
insb
mov
push
pop
dec
inc
clc
mov
cmp
push
sub
clc
push
mov
clc
xchg
lret
add
jns
clc
push
or
clc
xchg
pop
clc
iret
xchg
mov
mov
add
gs
dec
stos
ret
sahf
push
aad
add
lret
dec
and
add
add
ja
adc
xchg
in
or
jnp
add
add
add
jmp
fs
iret
xchg
cmp
movswl
clc
dec
movsb
clc
icebp
adc
add
clc
xor
xbegin
lods
jg
out
xchg
clc
scas
std
int
imul
movsl
clc
add
or
addr16
test
cmp
add
adc
add
xchg
cmp
pushf
mov
add
dec
xchg
jl
sbb
cmp
push
adc
mov
popf
addr16
loope
sbb
ds
add
stos
sar
mov
hlt
mov
clc
lock
clc
in
mov
clc
jl
cmp
add
clc
pop
and
add
add
jle
clc
pop
leave
xchg
mov
inc
clc
add
vunpckhps
pop
clc
je
clc
aam
add
xlat
mov
mov
add
sbb
xor
add
add
add
adc
add
cmp
test
clc
pop
mov
add
add
out
xchg
and
add
cltd
pop
test
add
into
push
scas
aaa
shll
add
cmp
add
fisubrs
inc
add
and
add
clc
clc
cmpsl
clc
push
fs
cs
js
in
sar
jmp
clc
pop
movsl
clc
in
loope
bound
add
xchg
inc
add
push
jp
clc
iret
pop
and
cmp
add
lcall
add
add
in
flds
ret
stos
inc
clc
inc
clc
add
leave
push
clc
pop
imul
add
int3
rcl
xabort
sub
mov
add
mov
inc
add
xchg
movsl
clc
or
call
mov
add
sar
clc
bound
add
ljmp
add
mov
add
data16
bound
add
jle
pushf
out
fistpl
clc
adc
insb
xchg
push
sub
inc
add
inc
clc
add
add
mov
cmp
ret
gs
das
add
jl
clc
pop
stos
cmp
fcompp
xlat
lods
xor
add
clc
fld
clc
out
cmp
fadds
push
jmp
or
leave
lods
iret
push
clc
daa
clc
inc
clc
mov
clc
xor
add
add
mov
test
cmp
mov
clc
ds
clc
xabort
gs
dec
sti
ljmp
or
add
cmp
fcoml
add
clc
or
aad
aaa
add
add
out
adc
add
stos
jecxz
add
add
adc
add
add
popa
add
repz
cld
mov
add
mov
clc
cmpsb
clc
stos
xor
add
add
or
sub
add
arpl
add
inc
clc
aad
mov
add
dec
sar
clc
jo
add
add
add
clc
cmpsb
clc
sbb
add
clc
push
add
xor
add
clc
fsubrs
mov
sub
das
push
add
mov
add
add
and
add
clc
lret
add
jb
add
sub
cmp
add
out
pop
es
mov
mov
mov
add
enter
add
pop
mov
das
lea
lcall
add
cmp
clc
cmp
insb
mov
clc
mov
push
mov
push
sub
pop
inc
clc
mov
jns
addr16
inc
add
mov
leave
cmp
inc
clc
dec
xchg
adc
add
adc
add
clc
and
add
push
add
add
clc
in
stos
imulb
std
loope
movsl
clc
jo
add
cmp
push
jne
clc
aam
push
add
icebp
ret
clc
stos
jge
cmp
add
test
clc
inc
add
sub
add
add
data16
jnp
clc
inc
add
nop
cmpsb
clc
dec
inc
add
inc
clc
mov
clc
ret
add
in
int3
scas
pop
outsl
push
clc
adc
add
add
clc
push
shll
test
sub
add
mov
repnz
cmp
inc
add
test
shr
imul
clc
rol
clc
dec
lea
mov
xor
sub
scas
jne
adc
clc
fcoms
add
movsb
clc
xchg
jnp
clc
imulb
add
pop
inc
add
fbld
adc
add
pop
pop
clc
rorl
or
out
lret
sbb
add
dec
in
clc
lock
sbb
popa
add
fdivr
xchg
aas
sar
pop
and
es
lock
dec
rclb
add
jne
dec
cld
cmpsb
clc
xchg
add
add
add
xchg
jle
clc
fs
xchg
or
mov
add
clc
cli
lea
jae
add
sbb
clc
lret
and
adc
addr16
iret
lea
pop
xor
add
add
push
imul
loop
jno
add
xor
add
add
jp
clc
ror
adc
clc
add
add
sar
xchg
xchg
call
gs
sar
rcrb
leave
jl
out
int
test
repnz
add
lock
pop
idivb
xchg
mov
push
mov
nop
sti
shl
clc
addr16
dec
int
clc
dec
or
xbegin
add
clc
xchg
out
adc
jl
clc
test
insl
imul
add
add
add
add
mov
dec
push
stc
clc
mov
clc
ss
and
add
pop
fldcw
mov
add
and
mov
sar
sbb
gs
mov
add
mov
and
xadd
sete
inc
add
add
add
clc
imull
mov
fcmovu
cld
and
add
and
add
test
add
add
or
movsb
clc
or
inc
add
fnstcw
inc
clc
xchg
inc
add
mov
sbb
push
push
add
cmp
lcall
dec
shrb
cwtl
pop
leave
sar
add
stos
test
add
dec
add
add
add
add
fisttpl
clc
lret
add
jnp
clc
xchg
mov
clc
xor
add
jno
add
adc
push
movups
add
clc
xbegin
clc
xor
jge
jmp
fcomps
clc
sub
add
clc
or
push
xchg
inc
add
pop
lret
add
clc
xchg
cmpsl
clc
mov
clc
in
sahf
mov
xor
add
dec
xchg
ret
clc
imul
into
adc
add
add
add
add
dec
mov
push
clc
mov
add
aas
std
add
mov
rorl
add
inc
add
or
scas
ss
jl
and
add
xchg
and
insl
ja
add
out
xor
add
mov
pop
xchg
xor
add
add
outsl
mov
clc
sar
ret
add
pmuludq
clc
cmp
pop
clc
out
add
add
add
adc
add
add
sub
mov
out
dec
xchg
mov
add
aas
icebp
push
std
cmp
push
add
hlt
scas
push
and
add
sarl
mov
mov
add
adc
add
add
add
add
pusha
add
cmp
add
stos
data16
mov
add
xor
add
dec
sbb
dec
cmp
imul
add
js
inc
clc
jns
cmp
add
imul
add
dec
je
add
sub
and
add
test
pop
test
cmp
clc
jns
inc
clc
sbb
sar
int3
movsb
clc
adc
add
add
clc
inc
add
aam
int
stc
arpl
add
add
inc
add
xabort
clc
xchg
jbe
fildl
clc
shrb
clc
mov
int3
sti
test
clc
mov
dec
rcr
push
jae
add
cmp
pop
pop
mov
shr
sub
clc
xor
cmp
pop
movsl
clc
into
push
std
cltd
push
cmpsb
clc
inc
add
sbb
xor
mov
xlat
ljmp
inc
add
pop
mov
fists
add
pop
clc
in
adc
add
add
add
clc
mov
add
sbb
pop
dec
push
add
and
add
es
outsl
and
add
inc
add
inc
clc
add
add
jmp
add
jbe
inc
clc
mov
sbb
mov
clc
and
shll
add
xchg
fadd
clc
sar
add
shl
clc
sbb
mov
add
add
pop
int3
out
std
mov
popa
add
addr16
fwait
xchg
and
add
adc
add
add
clc
out
iret
aaa
int
clc
mov
fldt
add
add
das
inc
clc
daa
clc
inc
clc
outsl
lret
add
mov
sahf
adc
add
test
sarl
imul
clc
mov
jae
add
add
push
add
push
or
gs
push
clc
adc
test
clc
pop
popf
xchg
xor
add
clc
movsb
clc
out
ficoms
jmp
xchg
xchg
stc
sbb
sar
jno
add
flds
add
push
test
sbb
clc
mov
and
add
dec
xor
sbb
clc
mov
clc
sub
clc
mov
clc
cmc
and
add
cs
add
mov
out
sahf
test
dec
xchg
cmp
sbb
add
jg
mov
clc
in
sar
xor
add
clc
gs
sbb
add
jle
add
add
clc
add
add
clc
loop
and
add
mov
clc
jge
xchg
sub
lret
popa
add
cmpsb
clc
sarb
loopne
repnz
outsl
stos
dec
lahf
cmp
adc
add
add
inc
clc
ret
clc
stos
outsl
and
push
mov
call
add
mov
ds
call
clc
gs
xlat
jp
xchg
iret
in
cmp
fidivrs
js
xchg
fisttpll
pop
push
mov
leave
inc
clc
dec
popf
lahf
sub
add
cmp
into
js
xbegin
add
add
stc
data16
gs
jp
add
inc
add
add
add
lock
add
inc
clc
pop
in
cmp
jl
std
scas
mov
out
clc
repnz
nop
dec
ss
clc
dec
xchg
lea
push
ss
pop
xchg
fwait
sub
jl
gs
or
scas
jecxz
sub
clc
lea
test
imul
add
repnz
in
pop
sbb
clc
push
and
add
stos
and
add
pop
nop
shl
sub
xor
add
scas
test
fmuls
mov
add
add
adc
add
or
mov
into
and
xbegin
xchg
add
add
insb
mull
add
mov
sahf
test
sbb
add
xor
std
sub
fs
mov
add
cmp
clc
outsl
jnp
fs
test
test
sub
add
clc
sbb
mov
dec
jg
repz
add
push
add
pop
xchg
xchg
sbb
lock
or
bound
add
add
inc
clc
inc
add
cmc
dec
leave
inc
add
mov
mov
fidivrs
pop
int
cld
in
movsb
clc
cmp
in
add
add
add
push
push
test
stc
fcoml
add
dec
and
add
jb
add
add
in
adc
hlt
add
add
or
add
xabort
out
out
xor
add
leave
inc
add
repnz
clc
pop
test
imul
data16
xchg
aaa
cmc
and
adc
add
add
hlt
jecxz
loop
push
cmc
push
add
mov
mov
cld
idivb
clc
push
add
test
xor
out
clc
adc
add
add
data16
cmc
out
cmp
clc
push
aam
add
fistpll
add
fdivs
add
push
clc
mov
sbb
mov
mov
mov
pop
popf
push
add
jle
cmp
jno
add
jecxz
lods
add
repz
dec
enter
clc
mov
jbe
add
pop
sar
and
fnsave
clc
xor
add
loop
in
outsb
push
add
mov
sub
add
clc
jmp
pop
and
add
mov
pop
dec
outsb
loopne
nop
ss
add
cmp
clc
mov
add
inc
add
inc
add
cmp
ficoml
add
mov
clc
fdivr
or
xor
add
push
cmpsb
clc
cmpsb
clc
enter
cmc
out
fdivrl
clc
out
add
jle
add
sub
add
lods
punpckhdq
ljmp
add
dec
and
add
lods
insl
fidivl
add
fmul
out
cmp
push
in
fld
clc
mov
add
mov
add
add
add
negl
addr16
mov
das
mov
xlat
mov
mov
addr16
inc
clc
mov
in
inc
clc
adc
add
jle
js
inc
clc
mov
cmp
add
dec
adc
add
clc
hlt
mov
xchg
jno
add
add
jg
xor
add
and
add
clc
mov
clc
dec
cmp
leave
mov
int
pop
sbb
mov
rcrl
mov
sar
clc
test
lcall
clc
das
shlb
clc
dec
push
cmp
clc
dec
mov
insb
outsl
repnz
add
adc
add
cmp
clc
pushf
lods
sub
clc
rorb
fs
pop
clc
lret
or
mov
shl
jne
add
leave
pop
cmp
clc
int
add
jp
js
clc
push
fidivs
mov
cmp
sub
sub
jbe
clc
daa
clc
mov
cmp
xor
push
and
arpl
add
lea
pop
pushf
sbb
clc
leave
adc
add
aad
add
mov
loopne
mov
sub
add
cmp
loopne
ret
fildll
add
jge
add
mov
lods
aad
inc
clc
nop
pop
clc
imul
movsl
clc
jl
clc
add
add
cmp
add
enter
add
clc
roll
add
in
lret
cmp
mov
add
pop
cmp
rcr
jg
push
add
cmp
cmp
mov
add
jecxz
xor
add
add
xchg
icebp
pop
iret
mov
cmp
add
adc
add
lahf
xor
add
repz
xor
add
add
add
hlt
movsb
clc
cwtl
jp
es
cmp
cmp
stc
movsl
clc
or
add
add
push
clc
add
add
xchg
mov
push
mov
clc
loope
cmp
clc
in
dec
out
je
add
jno
add
add
xchg
push
xchg
insl
adc
add
pop
jecxz
repz
clc
cwtl
sti
xabort
add
insl
mov
cs
jne
cmp
jmp
add
sub
add
mov
mov
mov
outsl
das
in
pop
cmp
or
dec
cmp
repz
xchg
dec
in
fistl
lock
add
clc
mov
sub
ja
add
sarl
inc
clc
mov
add
mov
clc
xchg
mov
jmp
and
add
test
add
xor
add
add
clc
loopne
bound
add
fwait
push
insb
push
add
lret
mov
rclb
add
add
fwait
scas
and
clc
mov
add
int
sbb
mov
add
popf
test
sbb
je
cwtl
addr16
mov
cmp
pop
push
dec
gs
arpl
add
clc
sub
mov
pushf
adc
add
xor
dec
mov
jl
pop
mov
and
add
loope
dec
jg
or
cmp
clc
rorl
out
mov
push
inc
clc
sbb
gs
pop
in
insl
iret
iret
pop
cs
js
clc
inc
add
cs
mov
adc
add
add
add
add
and
add
xchg
push
pop
and
add
clc
fnstsw
mov
mov
cmp
clc
sar
adc
add
or
add
push
add
xor
add
add
scas
mov
sub
vcmpps
clc
cwtl
dec
cmpsl
clc
xor
add
pop
add
add
lret
and
add
clc
ret
clc
lret
add
add
add
das
pushf
and
add
add
adc
add
push
add
aad
xchg
pop
mov
sti
clc
mov
cs
clc
cs
clc
lret
xchg
jl
pop
das
pop
scas
jge
clc
ret
clc
rcll
insb
loop
jg
add
sar
std
pop
setbe
jp
clc
jo
add
add
test
sbb
inc
add
add
add
xchg
gs
mov
jp
fildll
dec
lcall
ret
clc
jmp
mov
jp
clc
xor
add
cmp
clc
pop
mov
test
xor
add
pop
jbe
cmp
shlb
inc
clc
dec
xor
add
es
cmp
and
in
clc
es
movsb
clc
jno
add
clc
dec
in
xabort
jecxz
sahf
fistps
mov
and
add
push
cmp
addr16
sar
dec
cmpsl
clc
aam
xchg
cmpsb
clc
daa
clc
ret
clc
test
and
add
mov
cmp
call
sub
add
jl
out
cmp
mov
push
rcrl
or
clc
mov
in
push
add
cmp
inc
add
clc
fs
out
hlt
mov
add
in
sar
dec
mov
clc
dec
mov
lret
xor
pop
clc
adc
add
and
add
add
bound
add
adc
add
add
clc
jne
clc
or
test
clc
aaa
xabort
mov
aas
mov
add
or
or
cmp
lret
jle
jns
clc
loopne
xchg
femms
xbegin
clc
ss
cmp
xor
fcomi
mov
adc
add
push
xbegin
scas
jo
add
add
add
xor
add
add
ljmp
mov
sbb
clc
inc
clc
sar
mov
jmp
nop
gs
mov
das
pop
dec
jp
lret
bound
add
clc
lcall
addr16
inc
clc
enter
and
add
pop
cmp
add
clc
pop
mov
xchg
out
pusha
add
adc
add
or
or
clc
call
cwtl
imul
jp
and
out
in
pop
ret
clc
popa
add
jb
add
add
xchg
ljmp
mov
xor
add
cwtl
ret
clc
pop
mov
clc
into
xchg
sbb
cmp
add
cli
gs
fidivl
sub
add
add
add
clc
jae
add
add
in
mov
jno
add
clc
jb
add
int
add
jg
dec
xchg
xbegin
je
add
add
add
clc
jno
add
pop
fisttps
add
dec
insl
xchg
pop
ja
jmp
sub
ds
addr16
adc
or
addr16
push
addr16
dec
daa
clc
movsl
clc
mov
clc
lods
cmp
mov
and
add
add
enter
out
in
cmp
add
clc
mov
add
xchg
daa
clc
rcl
test
add
loop
nop
push
clc
xor
add
std
xor
add
sahf
jbe
clc
adc
add
jl
add
pop
push
in
bound
add
lock
adc
add
clc
movsb
clc
xor
dec
pusha
add
das
sub
pop
cmpsb
clc
bound
add
lret
clc
inc
add
mov
pop
push
negl
das
pop
mov
sar
xor
add
fisttpl
adc
add
add
dec
loopne
gs
shrb
out
jo
add
clc
adc
add
inc
add
or
add
pop
ja
clc
mov
push
add
xor
add
and
add
xor
add
cs
stc
push
mov
int3
inc
clc
daa
clc
pop
sti
es
cld
xchg
lods
or
repnz
clc
gs
xchg
xchg
pop
aaa
xor
add
lcall
jmp
fucomip
adc
and
add
fbld
int3
cmp
clc
test
dec
scas
pop
arpl
add
add
sub
clc
cmpsb
clc
mov
jae
add
dec
fisttpll
xor
add
ljmp
add
add
shlb
add
clc
lret
cs
cmp
add
push
inc
add
jecxz
iret
mov
inc
clc
and
xchg
inc
add
cmpsb
clc
xbegin
or
add
loop
repnz
loopne
sbb
cmp
out
mov
scas
sub
nop
lret
add
add
jp
mov
out
push
mov
sub
add
add
cld
or
pop
ret
clc
ja
int
insb
add
add
mov
xor
add
imul
add
inc
add
mov
stc
mov
clc
adc
pop
clc
jecxz
xchg
push
add
test
push
add
cmp
out
cmp
js,pn
clc
cmp
jbe
add
fmul
mov
movsl
clc
add
or
in
inc
clc
add
fisubrs
add
cltd
aaa
pop
jo
add
add
add
pop
clc
adc
and
add
out
sbb
cmpsl
clc
pop
inc
clc
inc
clc
fistps
insl
mov
add
cld
cli
or
clc
inc
clc
xbegin
add
add
cltd
sbb
dec
iret
push
add
notl
clc
es
adc
add
gs
aaa
ljmp
scas
data16
popa
add
sbb
cmp
clc
fcoml
pop
icebp
gs
pop
aad
clc
fbstp
xchg
jecxz
idivl
aad
sub
ret
clc
cli
jae
add
mov
mov
clc
pop
stos
cmp
adc
push
add
pop
into
mov
xchg
sar
add
mov
popf
mov
clc
adc
add
jnp
pop
mov
pop
bound
add
add
scas
push
outsl
dec
push
add
dec
sbb
add
sahf
scas
push
xabort
or
add
add
clc
clc
iret
xor
add
adc
add
dec
add
add
add
and
add
gs
jp
clc
pusha
add
sbb
clc
jbe
adc
sti
sbb
add
int3
je
clc
or
ss
jae
add
add
add
add
int3
clc
cmpsb
clc
push
add
inc
clc
das
int3
frstor
push
jb
add
sbb
loop
mov
jns
clc
bound
add
mov
mov
dec
adc
idiv
inc
add
out
ret
xchg
repz
bound
add
cmp
adc
add
clc
sub
mov
movsl
clc
push
clc
aaa
xor
add
add
stos
and
test
outsl
test
add
add
add
cmp
clc
mov
or
inc
add
xor
add
in
inc
clc
in
push
test
push
test
bound
add
clc
add
add
add
imull
sahf
xor
add
xor
adc
js
add
test
clc
sahf
dec
movsl
clc
xchg
test
cmp
aaa
lods
lret
push
popf
aad
inc
clc
fs
lods
jg
or
clc
mov
add
cmp
popf
mov
xchg
pop
clc
mov
mov
xchg
sbb
add
add
testb
clc
and
add
int
xlat
push
add
and
add
xlat
mov
clc
sub
add
adc
add
push
add
sub
clc
inc
clc
in
std
cmp
clc
popf
mov
add
pop
or
clc
pop
scas
jns
nop
addr16
fmulp
out
or
clc
mov
clc
mov
add
add
pushf
xor
add
and
dec
pop
push
mov
test
hlt
jae
add
push
in
add
ja
or
clc
cld
movsb
clc
inc
add
jge
lock
mov
pop
fistl
sub
cmp
jge
add
fisubs
fs
lea
inc
clc
jne
lea
clc
notb
clc
out
lock
movsl
clc
cmp
fdiv
lahf
sub
push
cs
out
adc
add
pop
ficomps
std
jne
dec
jl
add
imul
xchg
scas
loop
and
add
inc
add
dec
mov
int
repz
mov
and
add
mov
insb
adc
add
outsl
test
mov
sar
fwait
push
mov
add
push
add
mov
or
add
mov
movsl
clc
jno
add
jo
add
add
fisubl
add
data16
pop
jno
add
add
rolb
mov
out
push
add
and
add
or
dec
mov
fildll
ljmp
jo
add
fcompl
dec
cmc
out
dec
and
loop
mov
sar
clc
lock
ss
clc
cmp
aas
lahf
and
add
sub
jo
add
add
inc
clc
push
add
xbegin
mov
mov
add
ror
sarb
clc
out
cmp
sbb
outsb
sahf
pop
fidivs
add
ret
add
cmp
add
clc
jp,pt
add
das
fidivl
add
aam
mov
es
cwtl
repnz
add
push
fimull
mov
push
pop
test
fwait
and
inc
clc
lods
pop
mov
add
mov
clc
aaa
mov
aam
aaa
test
or
add
cmp
lods
fstl
pop
mov
add
add
insb
inc
clc
mov
add
cmc
adc
add
pop
fnstcw
clc
addr16
addr16
lods
loop
dec
dec
mov
add
pop
mov
inc
clc
daa
clc
sahf
das
inc
clc
int3
xchg
mov
scas
aam
add
pop
push
idivl
clc
sbb
add
lods
and
xor
add
add
jl
add
dec
ret
clc
cmp
clc
mov
xor
fildll
je
mov
add
mov
xchg
sar
clc
lock
clc
mov
add
xlat
pushf
mov
clc
lea
int3
imul
aas
mov
and
add
dec
mov
clc
sub
add
mov
or
fst
in
sar
mov
clc
pop
mov
dec
xbegin
clc
lods
ret
jecxz
or
in
dec
neg
sbb
clc
inc
clc
das
lcall
pop
fiadds
mov
loopne
and
add
fsubrs
mov
add
jg
lods
popa
add
repnz
pushf
inc
add
xchg
hlt
jb
add
cmp
clc
xor
clc
inc
add
xchg
cmp
sar
inc
clc
movsb
clc
mov
add
xor
add
lahf
rclb
clc
sbb
add
repnz
xor
add
scas
push
add
dec
cwtl
cmpsb
clc
ret
test
das
mov
repz
sub
clc
mov
out
pop
mov
jno
add
adc
add
pushf
out
ljmp
inc
add
push
add
lea
jne
jb
add
movsl
clc
xor
add
scas
mov
add
dec
lret
test
call
fsts
add
fldt
xbegin
push
jmp
mov
add
cmp
xor
mov
jo
add
clc
jbe
in
pop
add
add
imul
add
into
and
add
rol
clc
cmp
add
add
add
or
jecxz
gs
bound
add
mov
xchg
xor
leave
dec
insl
mov
xchg
dec
pop
stos
icebp
mov
push
fadd
clc
xor
add
add
add
jne
add
add
add
mov
clc
enter
test
add
std
jns
adc
fsubs
add
gs
pop
dec
mov
dec
jecxz
dec
imul
xor
add
clc
outsl
aaa
loope
pop
repz
enter
aas
mov
int
clc
xor
loopne
leave
push
add
mov
mov
repz
jbe
clc
data16
js
clc
adc
inc
clc
jg
add
cmp
add
xlat
or
mov
outsb
insl
xchg
aad
cmpsb
clc
mov
ljmp
add
xchg
and
add
add
mov
clc
pop
fldt
mov
clc
mov
pop
mov
clc
cmp
clc
push
out
leave
cmc
inc
add
push
add
popl
cmp
jbe
push
mov
clc
and
add
lahf
fidivrs
in
je
mov
mov
add
in
adc
adc
stos
sar
add
jo
add
push
cmp
xbegin
cli
cmp
add
sarb
add
jns
push
xlat
push
xor
add
mov
add
fldcw
add
or
mov
hlt
push
pop
cmp
sbb
clc
insb
fsubl
fstpl
test
xor
add
clc
mov
clc
pop
lea
add
add
clc
pop
adc
add
xchg
jg
clc
call
add
ja
test
mov
clc
sub
add
mov
in
es
jb
add
jae
add
enter
add
inc
clc
int
inc
clc
jle
adc
add
jmp
push
xor
add
ret
out
aaa
cmp
clc
push
add
push
clc
add
leave
xabort
add
insb
test
sbb
sub
mov
dec
jo
add
push
pop
xchg
fdivs
or
fs
pop
mov
clc
cwtl
aad
jle
jae
ret
clc
mov
cmpsl
clc
dec
mov
bound
add
clc
jo
add
clc
sbb
add
push
cltd
lahf
mov
clc
mov
movsl
clc
fs
inc
clc
sbb
adc
add
add
fs
ffree
clc
int3
cmp
mov
jnp
jnp
cmp
jecxz
sbb
xchg
inc
add
cmp
push
clc
adc
add
push
pop
test
or
add
add
push
add
imul
test
lret
push
clc
push
loop
sbb
or
clc
cmp
add
mov
xor
add
add
add
add
jg
clc
lret
bound
add
clc
xchg
out
pop
mov
add
mov
add
push
popa
add
jp
add
lcall
in
stc
cmpsl
clc
aad
clc
cmp
mov
or
clc
mov
add
js
ljmp
xor
pop
pushl
jnp
clc
xor
add
pop
std
aaa
call
or
push
clc
adc
add
mov
ja
xchg
inc
add
pusha
add
ja
daa
clc
and
xchg
dec
rcl
test
add
add
add
cmp
sahf
pop
movsb
clc
lcall
xchg
lret
in
add
add
mov
add
add
fs
sar
clc
mov
add
mov
add
xchg
xor
add
inc
add
mov
shl
clc
bnd
sub
lock
jge
add
or
clc
xchg
mov
dec
cmp
es
dec
mov
pop
popf
push
outsl
js
add
ds
rcrb
repnz
btl
add
add
xchg
clc
loope
leave
adc
add
clc
aad
pop
xchg
sbb
mov
clc
lret
test
xor
add
nop
push
sbb
clc
inc
add
jp
add
insb
jae
add
cmp
cmp
add
pusha
add
jbe
test
mov
dec
mov
imul
pop
sar
clc
lock
jg
pop
dec
dec
mov
clc
push
notl
add
pop
imull
clc
push
add
int3
jle
add
push
dec
out
or
outsb
hlt
mov
adc
add
add
dec
jle
fsubs
add
push
add
imul
pop
fdivp
xchg
sbb
and
ljmp
shrb
mov
add
sbb
cmp
mov
mov
fs
out
test
nop
pop
sub
mov
add
mov
clc
rcll
clc
test
fimull
sub
mov
add
shlb
add
add
sub
fwait
adc
add
pop
dec
or
add
dec
test
incb
or
add
dec
jns
lcall
aas
or
push
in
jo
add
add
insb
push
leave
gs
repnz
add
inc
add
push
imul
sar
cmp
mov
add
sar
xor
add
add
fldl
add
ja
add
add
sti
outsl
dec
mov
test
jmp
add
loope
imul
xor
clc
inc
add
clc
clc
push
add
std
sbb
sbb
js
inc
add
sar
pop
clc
or
lret
jl
fadds
add
pop
loop
ja
or
dec
sub
xchg
shlb
add
in
cmp
pop
clc
xor
add
fsubrs
clc
cld
pop
clc
repz
add
out
je
clc
mov
sub
clc
or
test
xor
add
shll
add
add
add
pushf
and
add
add
aad
in
push
push
mov
inc
add
ret
mov
add
dec
dec
jmp
and
add
pop
sbb
cmp
sbb
nop
mov
clc
nop
cmp
loop
lods
fisubs
add
frstor
add
jg
jb
add
add
insl
jg
fbld
add
cmpsl
clc
dec
push
add
sub
clc
xchg
jb
add
clc
lock
movsl
clc
inc
clc
and
add
cmpsl
clc
jl
xabort
add
xchg
adc
add
repz
dec
jl
fwait
adc
add
mov
stos
adc
add
add
nop
or
aaa
sar
adc
clc
sbb
push
sbb
dec
mov
clc
lods
mov
adc
add
jle
clc
enter
ret
clc
add
add
test
clc
scas
push
cld
mov
add
jno
add
add
clc
cli
repnz
or
clc
negl
stos
addr16
push
outsb
imul
and
add
out
cmp
mov
imul
clc
nop
cmp
pop
movsb
clc
cmp
clc
clc
cmpsl
clc
std
jle
push
add
or
cltd
push
jmp
jo
add
cmp
out
lret
imul
clc
push
add
cmp
pop
mov
adc
add
std
aaa
imulb
push
xchg
jmp
clc
xchg
cmp
jne
inc
add
call
xchg
popf
mov
xor
add
jmp
add
iret
das
cmp
add
cmp
cmp
push
and
add
adc
add
not
popf
jge
inc
add
scas
imul
xchg
mov
inc
clc
push
lock
xor
ss
daa
clc
push
xor
add
add
or
add
addr16
push
add
stos
fisttps
add
jle
jge
clc
xor
add
loopne
aam
add
pop
aas
cmpsl
clc
loop
push
add
stos
fsubrs
fs
insb
lret
mov
aaa
and
add
add
and
xchg
mov
clc
fisubrl
add
add
add
mov
mov
add
js
or
or
ret
clc
jns
cli
insl
icebp
or
div
repz
outsb
mov
mov
add
imul
add
add
add
add
clc
cmp
add
jp
dec
insl
mov
clc
push
add
xor
add
push
stc
dec
push
add
jmp
clc
add
add
jge
out
loope
insb
and
add
ss
dec
jecxz
sub
add
clc
fdivs
pop
into
adc
add
testb
add
imul
add
xor
add
clc
mov
lods
cmp
dec
es
ljmp
bound
add
sti
scas
repz
add
mov
clc
test
dec
ds
loop
xor
add
adc
add
lcall
add
mov
jno
add
out
ffree
clc
push
add
push
lea
out
ljmp
ffree
clc
inc
clc
xchg
xchg
scas
fwait
pop
push
add
add
add
sbb
clc
clc
adc
add
sub
xchg
stos
jmp
clc
lahf
cmpsl
clc
sarb
sbb
add
out
mov
clc
sti
lock
dec
push
clc
xabort
or
dec
pop
arpl
add
dec
hlt
nop
bound
add
clc
push
daa
clc
sbb
add
jp
lahf
adc
enter
sub
clc
mov
sbb
dec
pushf
ret
clc
lea
add
movsl
clc
lret
imul
add
push
addr16
test
imul
in
lods
push
add
mov
mov
xchg
insl
popa
add
or
and
add
add
and
add
push
mov
sbb
scas
mov
jmp
mov
clc
push
jbe
inc
clc
gs
stos
xchg
data16
in
adc
movsb
clc
add
add
clc
in
jbe
clc
mov
clc
fists
add
mov
sub
fldt
jbe
jp
inc
add
std
aas
jmp
clc
adc
add
clc
data16
mov
jle
mov
add
lret
add
add
add
add
lahf
xchg
jbe
clc
int3
test
ret
sbb
mov
sbb
jb
add
jno
add
add
and
add
test
clc
cs
cmpsb
clc
jg
clc
add
mov
adc
add
add
add
add
add
mov
add
shll
add
add
cmp
rclb
add
inc
add
das
pop
aad
push
add
rcr
push
add
xchg
push
add
int3
push
add
mov
or
lods
pop
dec
dec
je
add
pusha
add
movsb
clc
lahf
inc
add
enter
add
ja
clc
or
mov
add
adc
add
out
inc
add
lcall
hlt
lods
lret
mov
clc
add
add
adc
add
je
add
jl
inc
clc
jg
mov
cmp
push
add
sub
add
mov
clc
pop
fwait
fs
pop
or
add
rorb
add
push
xchg
pop
movsl
clc
dec
mov
push
add
es
mov
icebp
push
ds
cltd
std
xor
add
lea
ficompl
test
mov
clc
push
mov
inc
add
stc
insb
xchg
jle
test
rclb
add
cmp
stos
sbb
clc
pusha
add
insl
cmp
ret
clc
loope
insl
imull
outsl
test
ficoml
iret
data16
sbb
arpl
add
clc
rcll
lods
adc
clc
xor
add
js
mov
jbe
sbb
cmp
clc
outsl
int
aas
adc
add
add
add
jne
test
sub
aad
mov
clc
adc
add
xchg
fucomp
jmp
mov
dec
sub
add
addr16
in
xchg
sbb
add
sbb
das
push
inc
clc
mov
imul
add
add
or
add
mov
jp
adc
mov
add
adc
jecxz
sar
pop
dec
aas
lea
clc
mov
add
add
add
cmp
enter
pusha
add
mov
clc
jg
xchg
repnz
fwait
mov
push
mov
cmpsb
clc
pushf
inc
add
test
add
adc
add
mov
and
xor
sahf
push
inc
add
jae
add
add
add
sbb
or
out
jecxz
cmp
fisubl
jmp
xchg
xor
add
add
clc
aam
jp
sbb
ds
mov
sub
push
inc
clc
pop
lcall
clc
lods
fdivs
dec
pop
test
xchg
cli
jb
add
fisubrs
sbb
add
cld
stos
jns
insb
sub
jae
add
add
clc
mov
in
cmp
clc
in
add
add
clc
adc
add
add
mov
clc
inc
clc
cli
mov
clc
pop
cli
cmc
pop
xor
add
out
scas
pop
sub
clc
xor
add
or
sbb
xor
add
mulb
clc
jb
add
dec
dec
test
inc
add
mov
fadds
mov
int3
stos
jb
add
sar
clc
mov
fisttpll
std
add
add
add
cmpsl
clc
xchg
xchg
dec
mov
xchg
xlat
imul
outsb
jle
adc
and
add
insb
pop
add
add
pop
xabort
sahf
insb
jg
dec
lcall
or
cwtl
dec
and
add
clc
mov
clc
jl
or
clc
adc
add
add
adc
add
add
mov
add
add
popf
add
adc
add
add
leave
shll
add
mov
stos
push
xchg
outsb
lods
mov
clc
push
add
push
push
xchg
and
add
cmp
dec
mov
clc
and
add
add
and
add
mov
cld
mov
int
aad
sub
clc
add
mov
add
std
or
cltd
lahf
lock
add
add
movsl
clc
adc
add
or
adc
clc
mov
lahf
movsl
clc
pop
cmpsl
clc
mov
inc
clc
data16
mov
xchg
push
lret
ja
pop
aaa
popa
add
out
xchg
in
int
clc
cmp
daa
clc
test
mov
inc
add
ret
fistps
xchg
push
add
jne
insb
fs
mov
clc
pop
nop
stc
xchg
mov
cmp
add
dec
xor
add
clc
idivb
jns
push
sub
clc
xabort
clc
jl
mov
cmp
add
fidivl
add
inc
add
mov
clc
iret
push
add
mov
clc
cmp
daa
clc
push
clc
pop
cmp
jge
ja
clc
sti
xchg
xchg
pop
daa
clc
cmp
clc
lret
outsb
in
pop
push
pop
inc
clc
ja
xchg
and
add
add
add
addr16
adc
add
pop
fbstp
add
push
add
fsubl
add
push
out
cmp
clc
ja
add
ror
push
mov
inc
add
xchg
cmp
pop
jecxz
mulb
leave
ljmp
pop
mov
in
push
dec
pop
outsb
mov
xchg
je
dec
adc
mov
stos
mov
pop
xlat
loop
xor
xor
add
add
dec
loope
or
sbb
clc
ret
inc
clc
cmp
add
jl
clc
dec
out
and
add
in
mov
xchg
cmp
mov
fwait
js
getsec
jle
clc
arpl
add
out
test
addr16
imul
clc
xchg
rclb
add
clc
jecxz
jnp
enter
in
inc
add
jl
bound
add
add
rorl
clc
push
and
clc
hlt
pop
xchg
push
mov
mov
pusha
add
xor
add
je
mov
mov
jae
add
mov
clc
jecxz
add
add
pop
cmc
aad
stc
sbb
sar
fstpl
in
dec
push
mov
mov
or
clc
pop
clc
in
and
add
add
add
add
add
pop
aas
vmovlps
add
imul
stos
fdecstp
add
add
pop
add
add
mov
dec
jnp
adc
add
in
ljmp
add
pause
add
add
clc
push
clc
cmp
add
repz
jb
add
sbb
push
mov
or
clc
lods
popa
add
xchg
mov
clc
inc
add
push
clc
inc
clc
pop
lea
in
pusha
add
dec
fsubl
clc
push
add
or
and
add
jne
pop
push
clc
ljmp
inc
clc
cmp
add
mov
movsl
clc
jo
add
inc
clc
imul
xchg
movsl
clc
das
jp
stos
fldcw
sub
clc
pop
ja
clc
inc
add
inc
clc
xchg
sbb
clc
cmpsl
clc
jl
clc
push
add
jmp
pop
adc
lods
inc
clc
inc
clc
sub
push
out
jecxz
scas
jle
add
popa
add
test
dec
pop
lahf
lret
add
lret
jle
adc
add
sub
add
dec
repnz
add
ret
clc
repz
add
and
cmp
clc
push
cmp
mov
testb
and
add
lods
push
fnstsw
clc
pop
cwtl
or
cli
std
mov
clc
jmp
xchg
jns
add
shrl
pop
push
add
add
add
mov
clc
cmc
jne
jmp
mov
dec
fcmove
cmp
stos
mov
aas
loopne
jg
add
or
add
mov
add
jg
clc
jbe
lret
scas
push
in
hlt
out
sar
pop
jns
add
ljmp
add
add
std
pushf
adc
dec
lcall
lock
clc
cmp
fwait
in
jo
add
mov
mov
add
ret
pop
clc
add
add
shlb
pop
pop
test
enter
sti
in
cmp
clc
xchg
je
dec
movsl
clc
movsb
clc
enter
xchg
pop
lods
test
inc
add
inc
add
inc
clc
push
jnp
jmp
clc
lock
add
inc
clc
int
fsubrs
xor
add
icebp
sbb
insl
pop
inc
add
int
rorb
ss
clc
pop
clc
dec
push
mov
clc
xabort
jb
add
jle
cmp
cmp
add
data16
lods
stos
xabort
pop
cli
xchg
mov
clc
stc
mov
inc
clc
popf
icebp
pop
fs
sub
add
or
ja
pop
or
sbb
clc
jae
add
call
add
cli
push
add
ljmp
add
jne
mov
clc
pop
clc
adc
add
std
jmp
clc
adc
add
add
inc
clc
xbegin
incl
add
clc
movsl
clc
aas
bound
add
jb
add
dec
inc
add
fstpl
sar
clc
cmp
clc
pop
enter
lret
add
add
xchg
jnp
mov
xor
inc
clc
jmp
jmp
clc
jo
add
clc
dec
or
sar
fwait
andnps
clc
mov
lahf
or
add
data16
or
cmp
add
dec
xor
add
xchg
shrb
ss
jnp
mov
add
sub
add
xlat
xchg
inc
add
sub
cs
ja
clc
in
stos
jbe
cmc
cmp
fldcw
sbb
insl
jo
add
add
and
add
pop
clc
pop
out
sub
add
int
add
out
cmp
clc
cmp
add
enter
xor
add
mov
inc
add
pop
out
push
clc
cmpsl
clc
movsb
clc
mov
clc
and
add
push
test
clc
add
add
sti
jp
xchg
daa
clc
xchg
lret
aam
pop
in
lea
movsb
clc
add
add
aas
jg
add
pop
pop
clc
enter
pop
paddw
mov
sbb
add
or
or
add
fwait
xor
add
or
clc
sar
sahf
cmpsl
clc
sub
add
adc
loop
bound
add
loop
jmp
imul
mov
lahf
imul
and
add
out
fsubr
cmp
adc
add
add
add
test
xor
clc
pop
push
add
inc
clc
pop
push
inc
clc
mov
push
or
dec
sbb
mov
sub
add
push
std
loope
adc
add
clc
inc
add
das
es
inc
clc
lret
add
add
xor
test
cld
shr
add
xor
add
clc
int
jnp
push
add
cmpsl
clc
sub
add
sar
xchg
sub
cmp
nop/reserved
add
add
repnz
clc
pop
int3
leave
lods
lock
popf
pop
push
push
inc
clc
daa
clc
das
mov
pop
mov
push
mov
dec
sbb
cwtl
sub
clc
or
clc
int
xor
add
jmp
pop
invd
sbb
mov
adc
add
sbb
add
dec
int
testb
add
ds
stos
cmp
add
xchg
and
add
and
add
or
imull
lahf
push
enter
fs
inc
add
xor
clc
xor
add
in
pushf
lea
add
clc
jmp
add
sbb
push
add
jae
add
sub
clc
jae
add
in
mov
lret
mov
clc
int
pop
clc
xor
clc
push
mov
and
add
sbb
add
cmpsb
clc
popa
add
enter
add
mov
clc
cmp
clc
mov
clc
mov
fcoms
add
sbb
or
cmp
clc
mov
clc
mov
dec
and
stc
adc
mov
add
clc
scas
mov
test
jbe
add
test
and
add
inc
clc
inc
add
sub
clc
mov
jae
add
mov
rolb
jno
add
insb
jae
add
xchg
adc
add
add
add
adc
in
cmp
add
adc
cmp
clc
fsubl
add
add
jp
mov
ds
inc
add
or
sbb
clc
fs
push
test
sbb
add
jne
clc
mov
xchg
inc
add
cmpsl
clc
push
out
jmp
es
cmp
push
xor
add
clc
lock
dec
or
out
jbe
mov
add
outsb
fimuls
mov
add
in
sub
mov
clc
dec
fbstp
dec
jg
clc
out
lcall
jle
dec
dec
out
dec
rcrl
push
jg
push
cmp
add
enter
popf
outsl
es
mov
cmp
lcall
mov
test
add
clc
pop
sub
or
pop
mov
jl
addr16
cli
mov
leave
out
data16
mov
fcomp
cmp
or
add
clc
call
push
add
cs
add
push
clc
call
clc
pusha
add
push
xabort
xchg
test
das
dec
std
lret
aad
mov
sar
jecxz
lcall
push
fld
clc
xor
add
add
xchg
xchg
adc
clc
out
lods
in
or
add
clc
sar
pop
mov
add
add
add
pop
mov
repz
cmp
cmp
sbb
movsl
clc
cli
arpl
add
clc
pop
xchg
repnz
cmp
cwtl
or
add
test
clc
dec
popf
jno
add
sub
jle
xor
add
clc
xor
add
dec
std
cmp
clc
ja
fmulp
sub
add
jno
add
clc
clc
cwtl
pop
clc
adc
add
rclb
adc
add
gs
lock
daa
clc
jae
add
xor
add
sub
inc
clc
add
sub
stos
push
jmp
test
pop
fcom
sti
jge
int
add
repnz
adc
add
clc
cmp
add
xor
mov
mov
clc
dec
test
push
ficompl
add
xchg
js
inc
clc
or
or
cld
push
cmp
push
add
push
and
and
add
pop
clc
cltd
xor
add
fnstcw
rcrb
out
mul
clc
xchg
rcrl
sub
iret
sub
lret
test
es
jmp
leave
pop
xchg
sbb
clc
mov
clc
push
add
cmp
in
mov
add
cld
sbb
or
jle
cli
leave
popl
sub
insb
jo
add
sbb
shl
jo
add
clc
dec
lods
jo
add
xbegin
popf
test
into
lret
add
push
add
icebp
sahf
in
dec
mov
decl
add
add
in
inc
clc
mov
pop
inc
add
test
dec
xchg
mov
cmp
lahf
jge
clc
in
fs
lret
pusha
add
and
add
clc
shrl
add
add
jns
cli
addr16
inc
clc
das
data16
mov
aas
pop
movsl
clc
dec
dec
inc
add
iret
scas
sub
fistpll
add
inc
clc
dec
cmp
test
cmp
add
cmp
clc
fwait
pop
sbb
mov
pop
inc
clc
sbb
test
daa
clc
in
test
inc
clc
iret
in
out
scas
mov
xchg
mov
sar
clc
push
cltd
ja
aas
mov
mov
fldcw
add
xchg
and
add
add
pop
clc
repz
add
xchg
test
fs
mov
clc
sbb
test
clc
mov
clc
ret
sbb
add
mov
call
shlb
push
ror
push
jne
jns
pop
and
add
add
xchg
icebp
mov
add
rorb
clc
mov
je
push
dec
cmp
or
rcll
enter
inc
add
adc
add
data16
imul
popf
clc
push
clc
dec
push
jno
add
lcall
clc
mov
ss
cmp
clc
mov
xbegin
pusha
add
jmp
inc
clc
rdmsr
add
cmp
jp
cmp
add
sbb
fwait
mov
clc
adc
add
jg
add
clc
jno
add
add
and
stc
lcall
clc
push
cli
setae
and
add
adc
adc
add
add
add
or
mov
clc
test
adc
add
clc
mov
cmp
sub
xchg
or
mov
clc
mov
add
adc
add
mov
dec
out
loop
sarb
testb
shrl
dec
aas
xchg
push
clc
imul
add
add
add
sub
clc
mov
test
jbe
sahf
js
cs
sbb
fdivrs
clc
pop
jnp
dec
xabort
pop
push
clc
dec
cs
test
stc
test
inc
add
out
popf
mov
clc
data16
mov
aas
fistpll
clc
push
push
add
jge
clc
outsb
sahf
shrb
xchg
mov
add
scas
test
mov
clc
fwait
in
fdecstp
mov
sti
mov
clc
out
xchg
jae
add
add
xchg
pushf
in
cmp
and
add
clc
lret
clc
sar
loop
sub
add
add
mov
mov
add
dec
stos
in
jg
popf
xchg
sub
lret
add
mov
add
xchg
pop
lret
dec
add
add
aam
clc
int3
mov
add
xor
add
xor
decl
js
clc
imul
sbb
clc
dec
xor
add
sarl
cmp
add
sbb
clc
inc
clc
ljmp
incl
aad
pop
cwtl
dec
sahf
xchg
aad
adc
add
in
je
clc
pop
cmpsb
clc
in
in
xlat
sarb
xchg
xor
add
pop
lods
push
add
sbb
or
add
push
jl
clc
inc
add
inc
clc
xor
add
jae
add
dec
jmp
add
icebp
repz
add
inc
clc
test
or
clc
out
push
sub
loop
xchg
dec
push
pop
mov
add
fisubrl
inc
add
pop
jns
clc
fsubl
sbb
or
add
mov
add
stc
pop
lods
cs
pop
cmpsb
clc
add
add
mov
jmp
ret
mov
clc
cmp
dec
mov
clc
aam
push
test
cmp
clc
adc
add
sub
clc
sub
and
roll
add
add
mov
lock
fdivl
xor
add
jbe
jne
fwait
cmp
imul
xor
add
jne
dec
inc
add
sbb
add
cmpsl
clc
arpl
add
add
add
insb
xabort
hlt
mov
push
imul
sbb
add
mov
dec
bound
add
pop
cwtl
dec
sarl
xabort
stos
pop
test
or
add
push
inc
add
mov
clc
int3
leave
cwtl
cld
xchg
sahf
push
add
mov
add
movsb
clc
mov
mov
clc
cmp
mov
clc
xchg
cmp
add
xor
add
mov
add
mov
cli
sbb
add
clc
int3
sub
cmp
clc
push
mov
dec
popa
add
stc
jo
add
clc
pop
clc
dec
loop
fnstsw
mov
std
ss
sti
sub
ja
filds
add
sub
fsubs
pop
pop
rclb
add
pmulhw
cwtl
dec
adc
add
stos
shlb
xchg
mov
lock
insl
mov
clc
push
add
cltd
push
imul
push
lock
stos
aam
clc
dec
cltd
iret
xchg
cli
mov
xchg
roll
add
jle
mov
clc
sar
ljmp
decb
icebp
call
cmpsl
clc
fwait
jbe
jo
add
clc
lods
ss
jg
clc
mov
xchg
push
clc
arpl
add
add
movsb
clc
ds
add
test
push
pushf
jbe
adc
add
pop
clc
jns
inc
clc
xchg
test
fs
imul
xor
add
adc
add
notb
add
cli
jle
jp
xabort
add
lods
scas
add
pop
cmp
mov
sti
repnz
clc
sbb
ja
cs
add
add
sbb
inc
clc
adc
add
add
add
add
outsl
lods
or
add
mov
adc
add
lahf
cli
cmp
add
cmp
dec
fldenv
add
inc
add
ja
fcomp
movsl
clc
jmp
clc
cmp
rclb
mov
es
rcl
push
pop
cld
arpl
add
mov
clc
add
add
imul
dec
leave
inc
add
add
add
clc
jnp
add
jmp
ss
add
mov
jl
add
outsb
loop
fs
das
sub
mov
jae
add
add
mov
clc
sub
and
add
jecxz
sbb
add
iret
push
clc
sahf
repnz
out
addr16
mov
movsl
clc
stos
out
in
mov
stc
mov
insl
mov
mov
psrlw
add
add
lret
js
clc
gs
lahf
jg
add
int3
sahf
mov
test
add
add
sahf
pop
push
pop
nop
lcall
pop
or
data16
aaa
sub
add
adc
shufps
xchg
xchg
xor
add
mov
sub
clc
ss
lret
xabort
adc
add
mov
inc
clc
insl
out
lcall
lahf
pop
leave
stc
xchg
cmp
enter
nop
jle
clc
pop
sbb
add
fsts
add
adc
pop
call
add
xbegin
out
lahf
in
jle
lea
clc
iret
mov
jae
add
mov
jmp
add
test
ss
mov
clc
in
sbb
and
cmpsl
clc
cmp
add
mov
fldl2t
addr16
mov
arpl
add
clc
aam
clc
loopne
dec
adc
mov
add
in
movsb
clc
sbb
add
sti
dec
arpl
add
cld
dec
xor
add
jnp
jg
dec
pop
jb
add
lret
in
jl
int
clc
adc
add
cmp
movsb
clc
sbb
xchg
es
outsl
mov
cmp
add
sbb
add
cmp
inc
add
ss
repnz
clc
add
add
mov
add
clc
cmpsl
clc
jecxz
mov
add
sub
clc
clc
jbe
cmp
movsb
clc
es
lret
xor
add
es
arpl
add
clc
aad
add
jl
clc
add
add
add
mov
clc
movsb
clc
sub
clc
push
add
cld
jnp
xchg
mov
add
and
add
inc
clc
xlat
mov
dec
push
and
cltd
std
pop
xabort
sub
add
add
clc
in
or
dec
mov
mov
xlat
mov
clc
rcrl
add
dec
in
mov
pushf
in
out
xor
xlat
sub
stos
icebp
mov
fisttpll
fs
jmp
add
cltd
dec
mov
ror
fs
push
lcall
rcrl
cmp
clc
sub
sub
mov
pusha
add
cmp
adc
add
add
mov
inc
clc
xchg
rolb
mov
inc
clc
cwtl
popa
add
jle
ret
clc
cmp
clc
mov
xchg
pop
push
add
incb
add
in
fucomp
in
ja
ljmp
dec
xchg
aad
and
aas
xchg
sub
jmp
cmc
out
lea
lcall
into
cmpsb
clc
clc
xlat
loopne
or
push
imul
pop
test
push
out
aam
add
push
clc
mov
clc
pop
aam
mov
cmpsl
clc
dec
mov
xchg
cmp
clc
ss
lret
faddl
adc
add
adc
and
add
repz
push
push
add
bound
add
icebp
add
add
je
clc
mov
push
add
add
xor
add
add
out
push
das
push
xor
add
testb
imul
jne
xchg
or
adc
add
jae
add
xchg
dec
mov
in
lcall
clc
imul
clc
clc
popa
add
push
dec
and
add
jmp
aaa
mov
mov
pop
push
add
loope
rep
mov
icebp
dec
mov
bound
add
or
mov
cmp
xchg
sbb
add
scas
xchg
jp
xchg
cld
mov
add
dec
test
enter
imul
clc
jne
out
xchg
cwtl
jbe
shl
add
mov
add
data16
add
add
jo
add
ds
mov
xchg
int3
push
cs
jns
fsubl
cs
fnsave
xor
add
jae
add
mov
adc
add
in
mov
clc
xor
add
add
clc
jecxz
or
mov
clc
adc
add
psubsb
add
and
aam
fdivs
add
mov
add
cmpsl
clc
sbb
test
lock
cmp
mov
jne
aas
inc
add
sbb
pushf
fwait
push
push
test
mov
clc
mov
cmc
dec
sub
clc
stc
fsub
clc
mov
clc
repnz
add
aam
xbegin
imul
fldenv
add
cmp
clc
add
add
add
outsb
dec
pop
lock
dec
sar
inc
clc
lods
jecxz
out
pop
xabort
clc
cwtl
cli
int
fimull
inc
add
jg
je
jae
add
add
testb
add
data16
jmp
mov
test
inc
add
add
sbb
push
push
add
lods
movsl
clc
inc
add
cltd
mov
add
jl
in
pushf
mov
outsb
mov
add
add
mov
enter
clc
sbb
jne
clc
clc
fnstenv
add
movsb
clc
inc
clc
jo
add
clc
cmp
lods
roll
add
mov
popf
lret
popa
add
xlat
mov
fsubs
add
add
ja
mov
xchg
mov
out
or
add
cltd
dec
scas
sub
add
cmp
inc
add
sub
add
clc
or
add
out
in
cmp
add
add
add
clc
pusha
add
aaa
xor
add
add
inc
clc
lcall
add
xchg
and
hlt
test
add
aas
mov
repnz
lock
jo
add
mov
insb
adc
dec
inc
add
icebp
and
clc
push
pop
pop
cmp
and
add
add
mov
gs
cmp
pop
gs
adc
add
add
into
pop
and
add
sarl
or
clc
add
add
xor
add
adc
in
and
add
cs
test
in
pop
push
inc
add
mov
ret
clc
xor
add
in
repz
clc
xchg
add
add
add
and
add
clc
popa
add
mov
or
clc
mov
lods
into
gs
lock
outsb
mov
fimuls
negb
in
mov
lcall
mov
ds
ds
mov
add
add
add
shr
sar
sub
clc
cwtl
xor
add
add
jo
add
sti
dec
cwtl
aam
into
imull
clc
mov
cmp
mov
add
add
movsl
clc
int
xor
add
add
dec
sar
adc
add
clc
ljmp
add
bound
add
in
mov
clc
xchg
mov
cwtl
xchg
fwait
lea
clc
insb
cmp
dec
pop
daa
clc
fs
cmp
pop
out
call
clc
add
mov
mov
add
movsb
clc
jne
and
add
clc
ja
xor
add
imul
add
cld
xchg
xor
scas
inc
add
mov
add
cmp
bound
add
add
rcrl
not
mov
test
push
add
dec
testl
and
gs
aas
adc
add
pop
pop
int3
cmp
add
or
clc
icebp
repnz
fsubs
push
add
and
add
push
xchg
fisttps
sbb
mov
push
add
mov
loopne
sbb
out
mov
sar
popf
flds
add
add
fstpl
add
cmpsl
clc
jns
incl
cmc
or
push
add
aas
stos
mov
or
fidivrl
jg
ss
out
jge
jbe
outsl
int
push
incl
ds
xchg
or
xchg
call
fdivl
add
pop
ds
testb
add
scas
push
jge
push
cs
add
inc
add
or
clc
sbb
hlt
cmp
icebp
adc
xchg
aaa
cmp
stos
pop
test
jg
inc
clc
cltd
adc
add
dec
or
scas
xor
add
js
add
faddl
add
mov
jno
add
push
bound
add
add
inc
clc
ljmp
in
test
add
outsb
adc
add
add
sub
test
clc
sahf
sbb
jecxz
cmp
stc
dec
sti
jmp
pop
jo
add
add
mov
add
lock
stos
add
add
adc
add
enter
xor
add
jle
fisttps
push
mov
inc
add
add
add
clc
je
sub
js
clc
ds
mov
cwtl
sbb
push
hlt
fwait
stos
xor
pusha
add
cmp
add
push
das
ja,pt
sub
add
clc
jmp
mov
iret
mov
sahf
insb
and
add
adc
add
sub
dec
sub
add
dec
pop
imull
sub
cli
sar
sar
stos
or
fstpt
clc
push
add
dec
dec
pop
lods
mov
int3
pop
inc
add
insb
mov
notl
clc
fstp
stos
loope
arpl
add
cmpsb
clc
clc
push
ret
push
or
clc
mov
add
or
cs
and
add
jge
clc
push
add
and
add
mov
pop
cmp
clc
pop
ret
clc
rol
clc
movsl
clc
clc
mov
stos
pop
mov
push
clc
divb
add
addr16
fnstenv
cmp
add
clc
sbb
add
add
nop
xchg
pop
or
add
sbb
cmp
clc
dec
lea
or
push
das
cld
and
add
std
pop
mov
clc
or
pop
lods
jl
add
aad
sub
add
add
adc
clc
loopne
in
jno
add
push
lret
xchg
testl
adc
lcall
push
adc
add
xchg
xabort
clc
cld
jp
clc
dec
std
sbb
add
cmpsb
clc
icebp
mov
dec
mov
push
adc
add
add
iret
bound
add
jb,pt
add
clc
jae
add
mov
xor
inc
add
mov
bound
add
es
rcrl
lods
push
add
mov
clc
mov
clc
lea
add
cmp
adc
add
add
clc
sbb
push
dec
adc
add
xchg
mov
clc
sub
popf
or
jge
ret
clc
js
xor
add
or
add
fs
inc
add
pop
or
clc
cltd
or
cwtl
aam
add
pop
dec
hlt
mov
adc
add
add
push
into
xchg
mov
push
mov
notb
push
mov
xchg
xchg
vmulps
xchg
mov
mov
lea
add
add
clc
out
push
cmp
add
add
test
xor
clc
incl
jb
add
test
in
and
add
clc
dec
mov
add
pop
jae
add
add
xchg
or
add
xchg
sarb
add
sar
xchg
in
aam
clc
mov
and
cltd
add
add
mov
add
sub
clc
cmpsb
clc
sub
clc
test
fists
sbb
insb
outsl
push
add
stos
cmp
add
hlt
jg
add
xbegin
jg
mov
cmpsb
clc
sub
add
in
jle
mov
or
xlat
inc
clc
cmp
enter
gs
or
data16
repnz
clc
jl
test
pop
adc
add
xor
xchg
ficompl
clc
mov
mov
cli
mov
add
and
outsb
std
lods
daa
clc
cs
mov
clc
push
clc
mov
cmp
clc
hlt
mov
clc
jp
xor
add
add
es
pop
mov
fs
push
add
cli
sbb
idiv
xchg
imul
xor
add
jmp
sub
xchg
aas
xabort
shrb
fistpl
clc
sti
lret
clc
cmp
push
add
sahf
add
add
clc
pop
ss
mov
aas
push
clc
fistpl
inc
clc
in
loop
ror
jae
add
data16
test
lret
adc
add
add
xchg
adc
add
xor
or
pop
sbb
test
sar
sub
add
add
xor
sbb
push
sbb
add
add
das
pop
jge
jne
jns
aaa
mov
mov
cmp
pop
daa
clc
clc
ljmp
add
jl
out
repnz
add
out
pop
aad
popa
add
in
lret
pop
push
cmp
stos
jmp
ret
add
xchg
xbegin
jb
add
mov
ss
jle
ja
ds
add
adc
add
clc
mov
or
clc
mov
add
fwait
push
pop
dec
out
mov
inc
clc
push
sti
adc
pushf
decb
sbb
xchg
jle
outsl
jmp
add
push
push
add
push
es
xchg
dec
sar
mov
add
mov
push
add
cld
push
clc
jmp
clc
lahf
clc
xor
add
insb
and
add
bound
add
add
cld
out
cmpsl
clc
outsb
jno
add
add
jno
add
sar
add
sbb
pushl
call
add
add
insl
pop
xor
add
add
jg
fs
outsl
sub
lret
jb
add
clc
test
jl
clc
push
lahf
pop
and
inc
clc
inc
clc
cmpsl
clc
xor
add
clc
das
inc
add
inc
add
push
nop
mov
add
xor
sahf
jo
add
shll
add
dec
inc
clc
add
add
add
cmp
add
add
adc
cwtl
inc
clc
jo
add
mov
leave
movsb
clc
hlt
push
xchg
movsl
clc
sahf
test
xabort
mov
or
pop
mov
add
add
mov
sub
fwait
shlb
add
cmp
inc
clc
xchg
add
add
ror
xlat
inc
clc
in
pop
inc
clc
mov
outsl
mov
clc
arpl
add
add
mov
add
add
test
xchg
mov
sub
pop
clc
jmp
imul
cmp
adc
add
mov
add
fisubrl
clc
cmp
clc
push
or
cmp
push
jl
shrb
cmpsb
clc
sbb
stos
and
add
in
insl
and
add
add
fld
clc
inc
clc
movsb
clc
inc
add
enter
insb
jns
add
xor
add
clc
mov
outsb
arpl
add
mov
add
xchg
fs
cmp
clc
pop
xchg
fnsave
add
shll
add
adc
add
clc
decl
add
sub
sbb
mov
es
sbb
clc
dec
into
add
test
inc
add
xor
add
clc
jbe
add
ret
clc
adc
add
mov
fsubl
lods
out
push
add
scas
std
xbegin
shr
pushf
pop
pop
xor
add
hlt
fildl
cs
bound
add
arpl
add
pop
dec
scas
sahf
xchg
lcall
add
xbegin
mov
add
dec
mov
clc
repz
mull
xor
add
add
add
ret
clc
insl
jmp
add
xor
lea
sub
add
add
jmp
cs
clc
movsl
clc
adc
add
dec
cmpsl
clc
dec
insb
out
dec
add
add
xchg
out
imul
or
aam
clc
std
ja
aad
jecxz
dec
pusha
add
xbegin
add
sti
and
add
ret
clc
sub
xor
add
add
pop
pop
clc
lods
xor
add
clc
cltd
in
test
clc
and
testl
and
add
add
jl
clc
mov
xchg
lock
jmp
mov
clc
sbb
enter
push
clc
mov
jmp
xor
add
mov
sbb
dec
mov
sub
int3
cmp
xchg
mov
push
clc
and
add
add
add
shlb
add
mov
add
call
adc
add
pop
xchg
xchg
adc
add
lea
add
cmpsb
clc
mov
inc
add
pop
jmp
sar
repz
test
arpl
add
aam
inc
add
test
insb
aaa
data16
out
jb
add
out
pop
mov
fiadds
aad
ficoml
add
add
add
clc
ss
insb
ds
jp
add
pusha
add
pop
xchg
push
cs
dec
push
data16
and
add
mov
clc
dec
pop
mov
movsb
clc
cmp
add
ss
lret
xchg
sub
mov
clc
fs
sub
add
clc
in
cmp
lahf
scas
xchg
pop
xbegin
in
adc
add
clc
cmc
pop
sub
jo
add
xchg
int
add
aas
sbb
add
bound
add
add
fbld
fldt
test
cmp
add
jp
addr16
daa
clc
mov
bound
add
leave
mov
clc
std
add
add
push
and
add
clc
xlat
xor
rorl
clc
sbb
add
add
add
clc
shll
cmpsl
clc
pop
push
add
push
clc
sbb
xor
add
ss
jg
xchg
sar
cmc
cmp
clc
cmp
add
ret
clc
addr16
std
cmp
gs
dec
data16
and
add
stc
scas
xor
add
fists
cld
adc
add
cld
jmp
inc
clc
mov
scas
mov
imul
iret
xor
fstpl
add
clc
cmc
cmpsl
clc
xchg
inc
add
sub
adc
add
mov
push
add
dec
xchg
jecxz
mov
mov
icebp
xor
mov
clc
jb
add
mov
xchg
adc
adc
aas
sub
test
fwait
jnp
mov
clc
dec
adc
add
cmpsl
clc
and
add
add
mov
sbb
fs
cmp
add
add
add
cmc
das
mov
mov
clc
xchg
pop
movsb
clc
lret
ret
mov
lret
clc
push
add
movsb
clc
inc
clc
push
clc
enter
or
out
xor
clc
mov
and
add
test
inc
add
inc
clc
imull
add
mov
cmp
icebp
xor
add
fimuls
jo
add
clc
icebp
mov
add
add
dec
pop
pop
int3
movsb
clc
popa
add
lea
add
clc
movsb
clc
in
push
test
jns
add
add
fldcw
clc
inc
add
clc
repnz
inc
clc
imul
add
loope
jne
push
sbb
popa
add
in
add
mov
clc
add
mov
sar
aad
clc
cmp
clc
cmp
imul
add
push
mov
nop
inc
add
enter
insb
addr16
sar
clc
sbb
xchg
hlt
sahf
pushf
je
dec
mov
dec
mov
cmp
pop
aas
sbb
pop
loope
inc
clc
sar
cmp
clc
jb
add
in
cli
add
add
daa
clc
adc
add
inc
clc
and
stc
pushf
sti
fwait
xchg
xlat
fcomp
sub
clc
inc
clc
and
add
aas
fwait
mov
cld
dec
add
add
clc
inc
add
cmp
mov
clc
xor
add
add
cwtl
jno
add
and
add
or
repnz
clc
outsl
pop
sbb
clc
outsl
sub
add
int
repz
mov
xchg
push
add
je
mov
push
clc
in
shll
add
inc
add
sub
js
mov
xchg
cmp
mov
es
cmp
iret
bound
add
mov
clc
in
mov
cmpsb
clc
sub
cmpsl
clc
cmp
in
clc
pop
out
sbb
add
inc
clc
imul
outsl
icebp
push
shlb
ds
xchg
pop
jne
fcmove
jmp
push
ss
inc
add
and
add
xchg
shl
clc
push
add
and
add
push
add
push
adc
add
xchg
xor
add
add
mov
add
mov
int
sbb
pop
clc
mov
ss
rorb
add
es
and
add
imul
lcall
fwait
xor
add
add
dec
lock
clc
or
dec
push
js
adc
xchg
jecxz
xor
add
clc
sub
rcrb
pushf
mov
sub
push
daa
clc
fidivrs
addr16
pop
gs
pop
dec
repz
xbegin
clc
imul
clc
call
dec
loopne
push
add
dec
lods
dec
pop
out
jecxz
mov
jp
clc
dec
aas
jnp
clc
icebp
xchg
xor
nop
xchg
push
ds
mov
fnstcw
inc
clc
mov
stos
jl
clc
fildll
inc
clc
sub
add
dec
and
cmp
clc
mov
pop
cmp
xlat
and
add
clc
cmpsl
clc
lcall
clc
loopne
lea
das
xor
pushl
add
out
mov
add
call
push
mov
loopne
xor
add
mov
ret
leave
jp
add
lods
lock
mov
inc
clc
mov
add
aaa
pusha
add
loopne
test
cmp
stc
int3
stc
mov
js
add
mov
lods
pop
aam
fcoml
xlat
xor
add
clc
pop
xlat
lahf
xchg
cmp
jge
clc
jecxz
mov
mov
lcall
add
pushf
fmull
aad
nop
out
mov
add
lcall
cli
cmpsl
clc
pop
lea
popa
add
ss
fucom
clc
popl
clc
test
leave
dec
mov
inc
clc
push
cmp
add
add
add
add
add
lea
add
loop
pushf
out
hlt
adc
add
sti
and
add
imul
jle
clc
push
add
js
clc
repz
stos
sbb
clc
jg
add
cltd
mov
cmp
clc
out
pop
push
jmp
adc
add
addr16
aaa
push
clc
cmp
add
mov
and
add
dec
pop
mov
mov
inc
add
jae
add
jns
cmp
jl
in
inc
add
mov
lret
iret
jne
xchg
ja
add
data16
or
int
add
lods
xabort
sbb
add
mov
mov
add
add
clc
sub
repnz
add
add
clc
mov
add
cltd
pop
testb
jb
add
and
add
aaa
insb
loope
loop
push
add
pop
fdivrl
clc
insl
xchg
fs
hlt
mov
add
add
mov
mov
add
xor
add
add
xchg
push
add
jns
sub
lock
clc
xor
clc
mov
mov
clc
jo
add
cltd
out
cs
jnp
fwait
sub
jns
js
xchg
shll
add
notl
out
push
add
lret
jl
clc
push
add
es
pop
arpl
add
clc
lods
in
cmp
add
add
dec
movsb
clc
inc
clc
pop
fildl
jo
add
sub
sbb
add
sbb
add
jmp
add
stos
fdivrl
mov
clc
add
add
clc
fidivrs
pop
loope
pop
adc
add
test
dec
jo
add
jmp
int3
pop
adc
add
add
push
jns
add
sar
inc
clc
pop
cltd
int3
nop
sub
clc
jl
add
aas
sub
mov
add
loope
xchg
mov
add
lea
add
clc
push
add
push
add
stos
fwait
cli
inc
add
ja
inc
add
repnz
clc
inc
clc
pop
gs
icebp
dec
out
std
leave
clc
dec
sub
add
add
add
inc
add
sbb
add
das
push
add
imul
clc
sar
add
sub
outsl
xor
add
add
jb
add
je
cmp
lods
mov
jecxz
push
inc
clc
arpl
add
cmp
fs
stos
adc
add
inc
add
cltd
bswap
push
je
add
inc
clc
dec
hlt
sbb
pop
popa
add
push
int3
adc
add
imul
add
pusha
add
popf
mov
clc
xchg
add
ss
data16
push
sub
mov
push
adc
add
clc
lret
dec
sbb
clc
lret
cld
std
or
jge
jo
add
test
and
add
mov
clc
sbb
add
arpl
add
test
fnstenv
add
fdivs
cmpsl
clc
lods
dec
jmp
add
lret
xor
add
mov
insl
fcompl
mulb
clc
test
xchg
bound
add
int3
or
inc
clc
jmp
in
sar
mov
add
clc
cs
mov
mov
mov
cwtl
lea
stos
xor
add
aad
clc
pop
aaa
add
add
lret
or
jmp
add
dec
mov
push
mov
and
add
sbb
repnz
mov
clc
into
cmp
int3
test
clc
and
add
rcll
ficomps
inc
add
xchg
sti
push
add
mov
push
add
lahf
xbegin
loop
roll
cmp
add
ss
fcoml
add
inc
add
ficoms
mov
clc
push
add
add
pop
add
jmp
sub
fstps
int3
pop
ja
clc
inc
clc
pop
clc
push
sar
add
pop
clc
jmp
add
mov
add
cmpsl
clc
in
call
add
xabort
add
clc
sti
push
add
mov
add
dec
xchg
push
add
cmp
cmp
stc
mov
ficoms
add
push
or
add
lods
and
add
aam
add
data16
aam
loope
push
movsb
clc
and
add
add
sti
mov
push
and
add
jo
add
fbld
fiaddl
clc
push
clc
xchg
pop
sub
add
xchg
inc
clc
insl
push
add
addr16
clc
or
cmp
dec
cmpsb
clc
cmp
mov
icebp
lcall
add
cmp
inc
add
jmp
and
add
add
mov
pop
clc
cmp
mov
mov
add
xchg
inc
clc
clc
mov
push
add
pop
clc
pop
test
pop
mov
gs
sahf
lret
add
mov
popf
sti
aaa
mov
lret
dec
mov
and
push
mov
shlb
add
add
jecxz
int3
adc
add
mov
dec
mov
mov
add
movsl
clc
outsb
sbb
pop
gs
xchg
popf
mov
or
inc
clc
jb
add
dec
sbb
repz
push
and
add
push
ds
add
jne
pop
data16
dec
hlt
adc
stos
stc
sar
pop
clc
ret
clc
test
cld
jl
mov
cmp
add
lret
xchg
fsts
mov
sub
sbb
clc
pop
addr16
dec
push
or
ret
clc
cmpsb
clc
mov
and
add
clc
jb
add
add
js
mov
fcoml
add
add
xbegin
notb
add
add
push
add
movsl
clc
out
inc
add
je
std
mov
dec
pop
pop
repnz
cmp
clc
lahf
call
adc
jns
mov
sub
addr16
cmp
hlt
dec
mov
add
cltd
test
test
roll
mov
xchg
aam
add
push
add
cmpsb
clc
testb
fisttps
clc
inc
clc
push
dec
xor
add
add
add
add
xor
add
test
int3
mov
clc
pushf
packuswb
hlt
jb
add
cmp
pushf
repz
enter
cmc
fisubs
add
xor
clc
loopne
cmp
lods
mov
out
aas
sub
aas
pop
mov
in
pop
mov
add
aas
insl
jge
sbb
cmp
iret
js
pop
and
add
loop
cmp
scas
gs
add
add
mov
out
stos
sub
clc
es
sbb
cld
xchg
jl
scas
clc
pop
push
xchg
mov
mov
clc
xor
clc
push
add
cmp
pop
clc
mov
add
add
mov
add
add
add
mov
sbb
adc
add
add
jecxz
adc
clc
pop
mov
clc
sub
pop
mov
and
rorl
testl
push
add
jl
loopne
dec
push
ljmp
mov
testb
bound
add
inc
clc
cltd
mov
add
jne
sahf
cld
into
bound
add
fcompl
ret
clc
jecxz
stos
popf
cs
leave
repnz
lods
cmc
data16
inc
add
push
in
rolb
add
clc
mov
add
push
add
sbb
add
popf
insb
or
clc
test
or
add
push
mov
clc
lcall
add
hlt
addr16
mov
dec
pop
jle
add
sahf
add
test
clc
jmp
clc
jns
adc
add
cmp
clc
cmp
clc
mov
clc
push
insb
in
pop
jns
mov
daa
clc
sbb
pop
ds
aas
jns
dec
and
add
add
pop
lcall
add
call
stc
test
aas
cmp
stos
nop
sar
xor
add
add
data16
sahf
add
pop
push
repz
js
clc
xchg
imul
and
add
mov
dec
rorb
pop
pop
mov
or
ret
clc
outsb
in
cmp
adc
add
clc
stos
outsb
ds
mov
xbegin
in
push
add
add
clc
xchg
push
add
and
add
mov
clc
fdivs
jno
add
add
pop
and
xchg
sub
add
add
out
ja
mov
dec
push
add
sub
clc
inc
clc
pop
pushf
fcmove
popa
add
fld
clc
cwtl
cmp
ret
clc
daa
clc
aaa
enter
cmp
lret
add
loop
xchg
adc
add
repz
add
fisubl
add
add
pop
out
in
popa
add
in
hlt
jnp
lret
jp
add
lea
test
fcoms
add
add
clc
jmp
mov
movsl
clc
cltd
xabort
enter
mov
xabort
out
in
push
loop
out
fsts
lods
cs
sbb
jp
clc
clc
cmp
add
clc
je
sbb
add
cs
add
pop
shlb
xor
clc
or
clc
in
cmp
bound
add
lea
or
jge
add
scas
push
jno
add
add
js
clc
stos
outsl
fstps
mov
clc
in
dec
stos
pop
sbb
cmp
clc
gs
cmp
push
js
imul
add
dec
rorb
jb
add
scas
inc
add
dec
cld
fucomp
clc
inc
add
mov
addr16
pop
lods
dec
decb
add
add
xchg
cmp
loope
jb
add
inc
clc
cmp
cmp
inc
clc
movsb
clc
test
fisttpl
jae
add
add
and
cmp
add
add
cmp
popa
add
ljmp
xabort
clc
sbb
add
xlat
sub
mov
add
mov
push
add
test
scas
or
scas
ret
add
or
dec
out
mov
clc
loope
aaa
mov
daa
clc
mov
pusha
add
inc
add
cmp
insb
sar
add
xchg
cli
movsb
clc
shlb
add
dec
scas
jge
add
in
bound
add
xlat
addr16
jne
fsub
clc
inc
add
stc
leave
mov
cmp
clc
fstps
notl
jno
add
clc
mov
std
test
jb
add
das
mov
cmp
add
add
xchg
mov
clc
add
add
jne
add
lea
push
lock
add
jp
clc
cmp
sbb
clc
aad
clc
jnp
dec
add
add
add
mov
add
or
add
clc
push
add
xchg
enter
clc
leave
inc
add
mov
dec
cmp
or
insl
call
xchg
mov
clc
dec
mov
jnp
clc
jb
add
mov
add
pop
adc
add
and
xor
add
es
in
sbb
xlat
aas
mov
add
lret
add
in
neg
addr16
inc
add
cmp
add
outsl
xchg
data16
inc
add
je
add
inc
clc
mov
clc
mov
clc
in
pop
or
and
push
jle
je
add
add
xlat
pop
out
mov
ds
and
add
clc
fs
in
pop
cmp
sti
test
add
mov
mov
add
insb
in
rcll
xabort
add
insb
stc
test
je
icebp
dec
nop
inc
add
and
add
lods
mov
xchg
adc
add
xabort
add
mov
rcll
clc
mov
xor
add
add
dec
out
cmpsl
clc
xchg
xor
add
inc
add
stos
clc
fdivl
clc
push
add
or
int
ja
cmp
mov
jge
add
push
and
add
fimull
cmc
jo
add
in
lods
push
add
enter
lods
dec
int3
and
add
mov
add
cmp
sar
das
in
push
dec
nop
and
sbb
dec
cmp
cmp
sub
clc
add
repz
fs
dec
pushf
repnz
add
add
fmull
fs
ds
dec
dec
dec
or
add
sbb
clc
int
loopne
iret
jp
jo
add
add
aas
xchg
aas
jno
add
sub
jb
add
add
sub
push
add
bound
add
fisubs
or
insb
ja
lea
test
sub
imul
push
hlt
dec
inc
clc
mov
out
lret
inc
clc
in
pop
dec
or
add
pusha
add
into
sbb
gs
fisttpl
mov
dec
xchg
or
add
clc
xor
add
mov
push
add
sbb
or
clc
inc
add
cmp
packssdw
shrl
test
add
adc
clc
cmp
mov
clc
cltd
out
jns
clc
cmp
out
or
sub
mov
mov
int
lret
or
mov
mov
clc
sbb
clc
xor
sahf
cmpsl
clc
shl
clc
xchg
mov
add
jne
inc
clc
es
mov
cli
popa
add
or
add
inc
add
cmp
clc
out
shlb
clc
loope
pop
in
jge
clc
insl
mov
clc
int
ljmp
mov
sbb
fnstsw
dec
lahf
mov
shrl
add
sbb
cmp
sbb
add
movaps
clc
mov
jecxz
fildl
add
jno
add
add
mov
dec
sbb
mov
fsubrs
mov
xor
add
mov
lock
loopne
popa
add
cmp
lret
adc
add
add
je
clc
pushf
dec
adc
cli
mov
enter
add
add
push
mov
js
clc
popa
add
fcomi
push
cmp
clc
es
test
out
enter
add
mov
add
pop
push
fildll
imul
mov
sbb
sub
or
lret
add
psubq
add
add
push
iret
js
xchg
mov
sub
clc
arpl
add
fs
out
test
sub
jl
add
xor
notl
push
clc
dec
pop
stc
mov
mov
add
pop
shrb
clc
mov
add
pop
dec
pop
push
mov
pusha
add
fidivrl
mov
add
ja
clc
or
fistl
mov
clc
dec
fdivr
sub
inc
add
jg
out
or
pop
shlb
add
gs
std
insl
xor
test
lock
add
add
mov
jmp
add
kortestw
std
insl
push
add
adc
sbb
clc
sbb
cld
jbe
add
mov
add
clc
popa
add
cmp
in
mov
clc
jle
dec
int3
outsb
loope
xchg
lret
test
add
cs
push
add
out
and
add
clc
lods
jle
inc
add
aas
out
rclb
clc
filds
add
push
clc
test
pop
dec
icebp
jg
mov
push
add
cwtl
jl
bound
add
cmp
add
add
cwtl
inc
add
inc
add
mov
add
aam
out
jo
add
loope
popf
jmp
sar
add
xabort
add
repnz
xchg
push
add
repz
push
pushf
fidivs
dec
and
add
dec
inc
add
mov
xor
add
clc
cmp
add
mov
xchg
cmp
clc
divl
clc
shlb
clc
sbb
pop
cmp
add
out
cmp
and
add
aam
xchg
dec
mov
shrl
scas
imul
pop
xchg
cmp
jbe
add
sar
clc
stc
testl
add
stos
outsl
out
mov
cmc
pusha
add
fmuls
fdivrs
scas
add
pop
push
add
lods
out
and
add
cmp
cmc
jbe
clc
push
aaa
daa
clc
aas
fs
popf
fisubs
mov
stos
xor
add
mov
push
adc
add
jp
cmp
add
add
add
cmp
or
stc
mov
add
loopne
and
add
in
push
js
add
sarl
clc
addr16
clc
outsb
kmovw
cmpsb
clc
xbegin
or
add
pop
dec
movsl
clc
add
add
sar
jmp
sbb
clc
jns
test
fildll
add
mov
push
add
ss
push
inc
clc
aad
cltd
ljmp
pop
add
push
add
push
add
xor
add
in
add
add
out
imulb
scas
daa
clc
cmp
jl
sbb
clc
xchg
gs
das
push
shll
add
dec
fstpt
dec
repz
add
or
cmpsb
clc
mov
xchg
lret
fldl
add
and
pop
cmp
mov
fucom
clc
lods
push
mov
mov
mov
dec
pop
iret
fsubs
aam
cmp
add
mov
add
in
popf
sbb
outsb
call
sub
sub
sub
mov
add
push
push
add
adc
add
sbb
add
add
add
clc
pop
jnp
jecxz
and
add
fs
jp
adc
add
mov
mov
clc
fcmovnb
clc
sbb
xor
add
in
jmp
add
loopne
das
repnz
add
lret
dec
out
jmp
cmp
xchg
sbb
add
loope
stos
push
add
inc
clc
fs
cmp
add
sub
call
es
cld
aas
jle
jb
add
pop
out
ljmp
mov
clc
popf
pop
mov
mov
clc
imul
test
hlt
cld
roll
add
and
add
aaa
mov
jbe
add
in
and
add
pop
sbb
dec
jo
add
dec
sub
xchg
leave
lods
icebp
add
add
sub
add
xchg
push
jle
cmp
jmp
add
insl
xchg
leave
pop
dec
test
inc
add
pop
clc
inc
add
call
add
call
cmpsb
clc
divl
add
cmp
inc
add
push
push
sub
loopne
bound
add
pushf
fistpll
dec
xlat
pop
xabort
dec
cmpsl
clc
out
popl
add
rcll
add
mul
clc
dec
dec
movsl
clc
dec
je
dec
jl
clc
pop
clc
stos
arpl
add
icebp
mov
mov
fstpl
add
int
add
in
mov
sbb
mov
add
add
or
fs
fwait
cmp
mov
sub
add
add
lock
xchg
daa
clc
int3
cli
pop
stc
mov
ja
mov
add
jnp
scas
pop
push
sbb
xchg
jmp
add
add
xlat
sti
fistpl
js
mov
add
jp
clc
iret
or
dec
cmp
xor
add
push
or
add
jl
push
lods
sub
enter
cltd
and
add
inc
add
sub
mov
mov
xor
cmp
add
add
mov
clc
xchg
sahf
jp
ja
clc
mov
daa
clc
fidivl
add
pop
cmp
add
add
adc
add
add
fwait
shlb
out
push
xor
add
add
add
in
stc
stos
push
clc
imul
mov
mov
rcll
add
sub
sub
add
std
loopne
daa
clc
nop
sti
mov
imul
add
add
mov
mov
adc
add
fstpt
dec
popa
add
test
dec
adc
add
cli
cwtl
push
add
lret
icebp
push
or
add
inc
add
fdivr
adc
add
popf
inc
add
push
clc
cmp
sub
enter
clc
repz
add
addr16
std
cmp
adc
add
add
clc
fmull
lret
test
push
cmc
xchg
sub
inc
add
pusha
add
popf
pop
mov
sbb
add
test
mov
inc
clc
lret
hlt
mov
add
add
dec
dec
mov
add
add
mov
clc
sbb
add
int
outsb
xchg
ss
ds
add
dec
shll
addr16
out
mov
add
sub
mov
add
clc
aam
add
cwtl
jns
add
push
cmpsl
clc
pop
inc
clc
lods
inc
add
push
pop
sub
ds
sar
xor
add
add
add
clc
push
mov
imul
add
push
add
repnz
jecxz
fisttpll
add
add
das
dec
addr16
div
repnz
add
push
add
popa
add
pusha
add
mov
or
and
sbb
jns
sti
pop
insl
cmp
jg
clc
inc
add
cmp
clc
jae
add
iret
xchg
push
cmp
clc
dec
cmp
push
rol
clc
push
clc
dec
cmc
fnstsw
inc
add
lret
mov
add
or
jecxz
stc
cmp
add
arpl
add
push
clc
jp
out
loope
clc
cmpsl
clc
int
aad
jb
add
aam
jl
or
int
repz
add
mov
pop
jle
jecxz
xchg
ss
add
jns
clc
push
add
mov
cs
pop
adc
add
xor
add
add
inc
clc
or
ss
add
add
addr16
sub
es
push
rclb
add
enter
sub
cmp
outsb
cmp
or
push
add
sbb
xchg
pop
inc
clc
pusha
add
jb
add
fdivrs
clc
jl
pop
jns
xchg
lock
mov
repz
cmp
lret
mov
ja
inc
clc
add
clc
mov
sbb
clc
aam
xchg
add
add
xor
add
clc
mov
add
add
pop
outsl
enter
add
movsb
clc
int3
sbb
clc
and
lods
pusha
add
mov
mov
xchg
js
sahf
and
add
std
clc
cld
jne
push
or
clc
push
xabort
push
fwait
cmp
cmp
adc
add
pop
cmp
clc
fcomp
addr16
xlat
addr16
sub
push
mov
mov
jecxz
fbstp
add
push
popf
mov
loope
mov
xor
add
add
sbb
aaa
fidivrs
add
stc
inc
clc
pop
sub
add
add
clc
clc
mov
jge
fcmovu
or
jl
clc
dec
aam
mov
clc
clc
sub
add
add
add
sar
clc
mov
xor
add
clc
xchg
sub
add
mov
hlt
xor
add
jecxz
mov
test
in
stos
or
add
xor
add
xchg
xchg
pop
sub
push
clc
ss
add
jne
add
mov
add
xchg
or
add
add
cmp
clc
into
push
mov
clc
addr16
sbb
add
ljmp
clc
lret
nop
push
in
pusha
add
movsl
clc
aad
cmp
inc
add
addr16
mov
xchg
cmp
rcr
insl
xchg
adc
or
test
cmp
movsl
clc
jno
add
add
add
sti
xchg
xchg
xchg
cmp
and
add
clc
mov
jl
adc
add
clc
pop
xor
add
movsb
clc
pop
shl
leave
sbb
lock
add
clc
cmp
mov
add
cmp
jae
add
imulb
add
lea
clc
adc
add
mov
add
push
jne,pn
loop
and
test
sub
ret
daa
clc
mov
das
ss
add
add
add
pop
mov
prefetcht1
add
mov
cmpsb
clc
pop
or
add
jp
clc
sbb
fnstenv
out
add
add
clc
fists
add
ljmp
repnz
clc
cmp
push
dec
repz
lcall
bound
add
clc
mov
aam
clc
lret
or
cmpsl
clc
mov
add
loope
add
add
add
cmp
clc
mov
pushf
mov
inc
add
mov
js
fiaddl
clc
repnz
add
clc
mov
add
mov
je
clc
clc
jbe
not
dec
test
add
mov
xchg
sti
sldt
add
ret
add
insl
mov
add
cmp
adc
scas
cmp
addr16
loopne
das
mov
xor
clc
jmp
mov
xabort
sub
clc
ret
clc
mov
mov
push
add
xchg
mov
clc
and
add
pusha
add
jge
outsl
popf
or
cmp
clc
repz
xor
add
clc
or
or
lock
add
clc
pop
lea
mulb
and
add
xlat
adc
add
cmc
icebp
push
inc
add
fnsave
add
add
int3
fucomi
cmp
sub
jne
lret
jbe
sarb
add
add
pop
or
xbegin
xor
add
dec
sub
gs
in
mov
fadds
add
in
lea
jbe
inc
add
xor
add
clc
insb
push
push
cmp
inc
add
dec
xchg
push
shl
clc
mov
aaa
lahf
imul
clc
add
push
mov
clc
and
outsl
or
add
mov
xor
add
sti
imul
aad
push
lahf
clc
daa
clc
pop
ret
in
xchg
xabort
add
adc
add
clc
shll
je
push
push
add
and
add
clc
test
dec
add
and
add
clc
repz
rclb
clc
jo
add
jnp
add
cs
or
cmp
add
arpl
add
jle
mov
jecxz
ja
in
dec
jo
add
fidivl
push
inc
add
lods
adc
add
mov
mov
clc
and
add
push
icebp
fisubs
add
jmp
xbegin
add
cmp
gs
or
add
and
add
das
into
inc
clc
lret
and
add
das
sbb
mov
mov
iret
or
clc
fiaddl
add
pop
mov
sbb
add
mov
clc
sbb
clc
pop
fidivrl
fisttpll
ja
ss
cmc
pusha
add
and
add
clc
lea
jecxz
cmp
xchg
ds
push
psrlw
mov
xor
add
add
sar
insl
push
sti
iret
add
je
aad
add
dec
and
add
sub
sbb
pop
jmp
sahf
call
mov
pop
cmp
add
shlb
mov
lods
add
lahf
add
add
pop
and
add
and
add
stos
rcrb
je
add
mov
jae
add
xor
add
add
or
pop
mov
mov
cli
xchg
inc
clc
jle
jmp
mov
ret
clc
mov
xor
add
clc
cmp
add
lock
bound
add
clc
dec
sub
sbb
jae
add
xchg
xchg
push
clc
repnz
jp
clc
in
nop
rcrb
jmp
add
push
add
je
clc
and
add
fs
mov
add
hlt
dec
in
cld
pop
mov
add
mov
clc
cli
mov
out
sar
pop
pop
push
add
jmp
sbb
stos
lret
jo
add
cmp
adc
add
xchg
or
add
clc
push
sar
clc
mov
add
cmp
jge
mov
clc
cmp
jb
add
jae
add
clc
xor
add
xor
add
addr16
aam
aaa
dec
repz
mov
add
cmp
js
imul
clc
push
add
insb
lret
jmp
clc
test
stc
pushf
push
clc
xchg
xor
add
clc
xlat
jg
pop
ljmp
sahf
aam
mov
xchg
aad
dec
ss
int
mov
add
add
and
fnsave
rorb
clc
out
cmp
clc
outsl
pop
adc
jle
clc
add
jno
add
movsl
clc
fstl
add
inc
add
jp
mov
mov
mov
add
iret
xchg
fldcw
clc
pop
jnp
mov
add
add
cwtl
stos
push
and
fldenv
and
add
bound
add
ret
cmp
mov
ljmp
ret
clc
inc
clc
sub
clc
adc
add
jae
add
cmc
mov
xchg
negb
cmp
and
add
std
shrl
lods
or
cmp
mov
xbegin
add
cmpsl
clc
mov
adc
add
dec
mov
add
test
add
shll
add
add
mov
faddl
add
sbb
inc
clc
push
add
cs
pop
insb
in
add
add
jne
add
xor
add
clc
sbb
shrb
push
lea
in
adc
add
add
pop
push
xbegin
cmc
rcll
clc
hlt
nop
pop
imul
clc
lcall
insb
jno
add
add
add
int
fbld
add
test
xor
add
popf
mov
aas
dec
and
add
push
sar
sub
push
sub
jg
add
cmpsl
clc
dec
cld
ljmp
clc
into
pop
dec
mov
scas
pop
dec
or
aas
in
jp
sub
test
dec
jno
add
jo
add
add
cmpsl
clc
sti
ret
clc
mov
clc
sar
cli
pop
cmc
mov
pop
clc
aam
dec
or
clc
stos
dec
jno
add
filds
add
jns
clc
mov
xchg
xbegin
push
int3
and
add
jns
clc
adc
add
add
push
add
mov
clc
or
add
add
dec
ss
mov
fwait
mov
add
inc
clc
sub
stos
mov
or
mov
shrb
cmp
cli
pop
xabort
add
sti
ds
pop
mov
push
ret
clc
cmp
cmp
clc
testb
add
ret
clc
pop
clc
jo
add
clc
out
xor
add
clc
xbegin
clc
test
mov
add
aad
cmp
and
add
jae
add
clc
imul
add
add
lods
push
add
jbe
sub
clc
out
adc
add
add
mov
out
addr16
dec
push
mov
push
leave
xchg
mov
add
ds
add
add
ja
add
addr16
push
jno
add
popa
add
mov
aad
loope
cmpsl
clc
sub
add
clc
pusha
add
xabort
xchg
ds
imul
clc
mov
add
xchg
push
push
test
add
leave
sub
call
fldt
aas
dec
or
into
sar
clc
fwait
add
add
inc
add
cmp
fwait
xchg
sbb
add
push
mov
inc
clc
xor
mov
jns
mov
add
mov
add
adc
sbb
xchg
sti
pop
clc
adc
add
xor
repnz
pop
sar
pusha
add
xbegin
add
mov
xlat
adc
add
clc
fsubrl
sar
mov
push
add
xor
add
clc
outsb
lcall
fwait
inc
add
cmp
and
add
cwtl
sbb
add
xchg
ljmp
add
cmp
xor
or
add
push
add
cwtl
mov
clc
and
add
cmp
mov
xor
add
jge
loope
cmp
in
mov
mov
or
clc
xchg
jmp
clc
sbb
arpl
add
sar
adc
add
push
dec
xchg
xchg
mov
std
scas
mov
clc
ljmp
add
int
lock
pop
jmp
scas
addr16
fimuls
fsubrs
cmpsl
clc
sbb
clc
xchg
stos
cmpsb
clc
shll
or
sub
sub
lock
sbb
sti
mov
add
cmp
clc
push
repnz
es
call
out
stos
stos
xchg
stos
dec
xchg
ret
clc
jbe
clc
push
ljmp
add
lods
push
mov
ret
clc
outsb
shrl
clc
gs
cmp
push
dec
fiadds
clc
jns
jecxz
pop
leave
lock
pop
inc
clc
xchg
rorb
pop
mov
jae
add
fwait
lret
add
add
cmp
add
stos
lret
outsl
stc
das
daa
clc
add
add
clc
jne
clc
cmp
xchg
fwait
jle
clc
cmp
jg
clc
loope
cltd
dec
push
mov
mov
clc
lock
add
nop
scas
inc
add
idivl
cwtl
sbb
js
out
xor
add
enter
add
inc
clc
enter
out
sub
mov
fxrstor
and
cmp
mov
sub
add
fiaddl
testl
std
ret
clc
xchg
arpl
add
add
mov
loop
inc
add
push
add
add
jb
add
clc
out
cli
icebp
aaa
xchg
pop
repnz
lret
cmc
hlt
sar
clc
mov
stc
xlat
add
add
enter
repz
cmp
clc
xor
sbb
ret
push
add
repnz
jne
clc
fistpll
clc
jp
loop
imul
inc
clc
jl
inc
clc
mov
ds
add
jbe
test
movsb
clc
push
and
add
add
mov
clc
addr16
jecxz
ja
clc
xor
add
add
movsb
clc
mov
xor
clc
cmc
xor
mov
sbb
out
push
add
cmp
adc
add
hlt
je
out
sub
pop
idivb
and
add
fwait
or
ret
clc
nop
fdivrl
outsl
rcr
and
idivb
je
clc
out
into
jo
add
cmp
add
add
clc
sbb
mov
clc
daa
clc
mov
mov
clc
inc
clc
mov
lret
xor
mov
push
add
stc
ret
and
add
mov
cmpsb
clc
fstps
sar
clc
pop
clc
cmp
sbb
add
add
clc
pop
ss
sbb
mov
add
das
and
add
ljmp
gs
adc
add
add
cmp
clc
xchg
bound
add
into
faddl
clc
jb
add
aam
clc
and
add
clc
fsubr
push
or
lret
int
in
addr16
loope
mov
xor
mov
pushf
pop
clc
scas
fmulp
cmpsb
clc
fstp
pop
loop
je
mov
movsb
clc
icebp
aaa
clc
int
add
frstor
jge
clc
dec
stos
sub
clc
xchg
cmp
clc
push
clc
mov
leave
jb
add
testb
clc
mov
aam
mov
push
add
mov
xabort
clc
adc
add
inc
clc
test
std
test
push
add
or
cmpsl
clc
aaa
mov
repz
clc
mov
dec
jnp
lcall
mov
es
xchg
cmp
clc
aaa
push
sbb
clc
shl
clc
inc
add
bound
add
jg
pop
dec
hlt
push
sbb
addr16
cmp
stc
stos
sbb
ret
in
cmp
imul
lods
cmpsb
clc
mov
clc
scas
sbb
outsb
scas
xchg
xor
add
dec
repnz
insb
test
clc
in
mov
loope
data16
cmpsl
clc
push
sbb
push
cmp
cmp
mov
push
add
int3
push
fmull
pop
mov
add
stc
leave
es
and
add
clc
test
clc
popf
xchg
mov
lods
mov
mull
clc
in
jg
stos
inc
clc
cs
scas
mov
outsb
in
adc
add
add
inc
clc
repz
cs
and
add
mov
add
repz
add
pusha
add
pop
pop
pop
xchg
push
add
add
jg
add
outsl
xchg
imul
lahf
cli
push
or
add
jmp
sbb
add
imul
mov
stc
lods
mov
leave
and
xor
clc
into
cmp
lock
bound
add
fisubs
add
out
cmpsb
clc
ds
inc
clc
xchg
dec
sbb
add
out
es
mov
add
hlt
cmp
clc
rcrb
clc
xlat
xchg
scas
out
stos
jo
add
fcom
push
add
lahf
jmp
adc
dec
dec
mov
mov
xchg
fcomps
add
dec
mov
push
add
jae
add
and
add
data16
inc
clc
test
pop
push
adc
add
clc
dec
push
and
dec
xor
pop
cmp
add
call
cli
jno
add
jo
add
adc
add
mov
xor
fs
xor
clc
jne
clc
test
clc
adc
adc
add
jo
add
add
icebp
adc
add
lea
clc
push
add
outsl
ja
dec
adc
add
stos
out
test
add
into
jae
add
aaa
lods
push
scas
jns
clc
xor
clc
icebp
push
mov
jl
enter
push
xbegin
xor
clc
xchg
lods
ret
clc
or
add
add
mov
notl
sbb
and
add
and
add
add
jle
int3
and
add
and
add
xlat
and
add
push
and
add
clc
xchg
jbe
clc
sarb
clc
push
imul
cwtl
jbe
aad
jb
add
add
scas
adc
clc
or
clc
inc
clc
leave
fidivl
clc
and
mov
clc
mov
xor
add
clc
pop
pop
xchg
std
imul
int3
out
mov
clc
stc
pop
xor
cmp
mov
ds
ss
sar
stos
jbe
jnp
mov
add
dec
push
std
lahf
adc
add
add
xchg
jmp
decb
clc
push
and
add
mov
cmp
cmp
add
jb
add
movsb
clc
es
aas
xchg
test
imul
add
mov
fs
mov
add
mov
mov
clc
jae
add
clc
or
jns
push
add
add
add
cmp
clc
imul
std
sar
test
aam
in
jp
ret
jnp
add
cmp
clc
sar
clc
or
es
je
clc
filds
add
mov
add
add
dec
test
bound
add
lret
add
clc
sbb
add
rcrl
mov
adc
sub
xor
fs
xchg
lods
sbb
clc
cmp
add
test
ds
add
popf
fisubl
pop
jmp
add
sar
test
out
and
add
xchg
mov
cwtl
test
clc
stos
xor
add
clc
xlat
scas
cmpsb
clc
call
mov
inc
add
movsl
clc
loope
mov
add
ds
sbb
add
clc
add
jns
clc
jbe
add
lret
outsl
lods
cli
sbb
shll
dec
push
clc
pop
mov
xlat
mov
clc
xchg
daa
clc
nop
sbb
add
sar
add
repz
mov
and
add
int3
decl
cmp
jl
cmp
push
add
call
clc
pop
das
xor
fstp
test
in
sbb
add
clc
sub
add
movsb
clc
insl
push
add
insl
xor
add
or
add
std
fnstsw
add
adc
add
jecxz
int3
pop
cld
mov
ja
clc
cli
out
xor
lahf
xchg
or
add
imul
aad
add
test
ss
outsl
insb
jg
xchg
cmp
adc
add
pop
jns
clc
ret
clc
mov
add
setl
cmp
add
mov
std
jo
add
clc
jne
add
cmp
insl
mov
stos
mov
out
sub
clc
jns
xchg
mov
or
or
pop
mov
outsb
adc
add
aaa
cwtl
sub
inc
add
add
add
add
jl
clc
out
mov
clc
lcall
clc
icebp
fmul
leave
psubq
or
add
xlat
jle
mov
test
or
insl
mov
push
add
fwait
inc
clc
push
inc
clc
xor
add
lea
lods
cli
insl
xchg
fists
add
jp
pop
inc
add
pushf
outsl
sbb
add
outsb
scas
sar
clc
dec
insl
lahf
sar
clc
outsl
bound
add
call
xor
add
leave
mov
or
sbb
adc
add
clc
and
add
adc
mulb
or
clc
jmp
ss
jns
movsl
clc
adc
add
or
rclb
clc
dec
adc
add
cmp
jl
sbb
mov
outsb
das
cmp
jp
jge
and
add
movsb
clc
dec
xor
add
clc
sti
clc
es
inc
add
jo
add
clc
mov
pop
pop
clc
xor
add
mov
clc
push
push
add
and
add
xchg
call
sbb
ret
sub
clc
cmp
nop
and
pop
pop
test
pop
or
add
mov
add
fs
dec
clc
cmpsl
clc
mov
mov
clc
ja
xchg
add
add
clc
mov
pusha
add
dec
add
add
or
cwtl
nop
jne
ja
xchg
xchg
pushf
sar
add
inc
add
outsl
sti
lret
sbb
clc
ss
cmp
pop
cmp
xlat
lret
test
inc
clc
and
add
add
add
cltd
iret
push
ja
lcall
jo
add
and
add
packuswb
nop
scas
cmp
outsl
mov
add
out
xchg
sbb
lods
pop
cmp
clc
mov
bound
add
or
movsl
clc
popf
out
or
add
test
clc
pop
mov
adc
push
push
cs
cwtl
movsl
clc
push
add
jle
clc
xor
add
add
js
mov
inc
clc
mov
adc
add
add
xchg
add
or
cld
pushf
wrmsr
add
aam
iret
es
push
fisubrl
fbld
ljmp
mov
je
sar
add
sti
ljmp
ret
clc
mov
add
lods
mov
add
add
movsl
clc
aad
clc
mov
mov
push
mov
add
adc
add
add
cmp
mov
clc
jnp
add
xor
add
add
mov
sbb
push
inc
clc
pop
dec
inc
add
cmpsb
clc
mull
pop
scas
adc
add
add
add
xor
add
clc
aaa
int3
sti
push
add
add
cmp
cmp
clc
sti
bound
add
add
data16
fs
pushf
sar
stos
inc
add
and
add
add
test
clc
jge
xchg
inc
add
mov
add
test
clc
cmpsb
clc
inc
add
into
mov
mov
jmp
add
popa
add
divb
add
out
fistl
clc
es
addr16
repz
movsl
clc
sbb
outsb
xchg
dec
clc
mov
mov
sbb
call
xor
clc
fistpl
inc
add
push
xchg
push
add
sbb
mov
add
cmp
add
loop
nop
es
xlat
jbe
divl
lock
inc
clc
outsl
aam
push
fnsave
add
sub
add
xchg
fwait
mov
negb
das
and
add
clc
pop
clc
cmp
add
mov
mov
sahf
add
jns
lea
jl
clc
jmp
add
add
cwtl
mov
add
add
lods
lahf
push
jg
mov
out
ljmp
jl
pusha
add
cmp
mov
enter
push
inc
add
mov
xor
add
add
adc
add
or
add
sbb
clc
cmp
dec
test
cli
dec
pop
insl
xchg
sahf
cmp
fidivrl
clc
add
add
rcrb
push
add
add
nop
int3
rorl
add
and
add
add
sbb
add
add
aaa
jp
clc
popf
hlt
dec
popf
mov
lahf
sbb
xor
add
sbb
mov
clc
lahf
lret
call
add
add
adc
repnz
mov
add
dec
sub
clc
out
cmp
pop
mov
clc
jno
add
sub
sar
mov
out
das
hlt
jno
add
mov
ljmp
clc
test
sbb
add
js
pusha
add
js
add
push
lcall
add
xchg
xchg
or
add
push
add
pop
jb
add
out
add
add
add
lods
loop
mov
clc
jmp
lods
sub
test
jb
add
fdivrp
icebp
xbegin
add
pusha
add
and
or
jmp
sar
jge
add
fmull
add
hlt
lcall
add
add
clc
test
add
add
inc
clc
cmpsl
clc
mov
add
clc
or
mov
mov
push
or
clc
inc
add
push
add
dec
mov
mov
ret
clc
xchg
xlat
push
clc
data16
lcall
clc
push
xor
lods
sar
clc
or
pop
shlb
in
xchg
gs
daa
clc
adc
add
jge
pop
cmp
clc
mov
clc
add
add
clc
lcall
add
ss
mov
test
add
sarb
test
mov
add
dec
or
out
int
clc
xlat
and
add
dec
fists
adc
add
clc
and
add
lock
add
cli
cmp
clc
rcr
mov
add
lods
cmp
lret
mov
out
mov
pop
sub
inc
clc
lret
in
in
pop
lods
inc
clc
mov
add
bound
add
aaa
imul
sar
clc
jmp
add
sahf
mov
adc
shl
dec
imul
in
dec
push
add
rcrb
xlat
insl
test
push
clc
mov
add
mov
pop
sahf
ljmp
mov
pop
mov
movsb
clc
ljmp
sbb
nop
sti
xor
add
sbb
jmp
add
clc
sub
clc
xchg
mov
inc
add
mov
clc
inc
clc
or
xchg
fcoml
push
add
in
test
das
stc
outsb
sar
clc
jb
add
add
jge
push
clc
cltd
pop
xchg
cmp
and
add
add
cmp
clc
outsl
mov
cmp
and
add
aad
add
stc
push
push
repz
call
xor
divl
stos
mov
test
clc
add
add
clc
sub
mov
adc
add
xchg
bound
add
mov
xchg
jo
add
add
xor
add
rcll
add
sti
mov
clc
cmp
clc
ud1
add
mov
in
fld
clc
aaa
add
add
clc
cmp
jge
out
cmp
add
adc
add
in
rorl
pop
clc
clc
mov
clc
jecxz
mov
pop
or
add
cmc
mov
adc
fldt
pop
mov
mov
mov
test
pop
clc
cmp
clc
js
add
ret
add
popf
xor
add
es
push
cmp
ljmp
add
fistpll
push
add
enter
add
fs
data16
inc
clc
test
data16
aaa
js
clc
fwait
xchg
lret
in
xchg
dec
arpl
add
jmp
clc
daa
clc
rcrl
add
add
add
add
sbb
test
add
sar
lret
xbegin
movsb
clc
das
pop
arpl
add
clc
out
xor
add
or
add
ss
fdivr
xor
add
mov
sub
add
clc
ficoms
fmuls
or
inc
clc
xchg
sar
clc
xchg
out
and
clc
js
clc
cmp
xor
add
clc
aad
and
add
clc
mov
pop
loopne
lret
or
add
and
add
jbe
clc
mov
clc
inc
add
inc
clc
mov
mov
enter
add
add
jg
clc
daa
clc
hlt
xrelease
clc
push
inc
add
mov
add
lahf
dec
jnp
sub
add
or
add
inc
add
pop
lods
fimuls
int3
add
add
xor
pop
pop
stc
test
shr
lea
sub
xchg
pop
sbb
cmp
jmp
clc
jecxz
jl
clc
enter
ret
clc
mov
jmp
cmp
or
add
jl
add
mov
add
clc
insb
or
sub
daa
clc
and
add
adc
lahf
lret
pop
in
jecxz
push
clc
xchg
scas
pop
xchg
xchg
mov
es
xchg
pop
fs
cmovg
jle
pushf
mov
clc
jg
mov
dec
hlt
dec
sahf
icebp
and
mov
add
add
add
pushf
nop
xchg
sub
add
cmp
add
add
inc
clc
fsubrs
idivl
movsl
clc
or
std
ficoms
add
inc
clc
arpl
add
xchg
xor
add
add
loopne
mov
dec
mov
clc
pop
mov
clc
ret
clc
es
inc
add
es
sbb
fisttpl
adc
add
add
adc
add
add
mov
push
pusha
add
jl
clc
xchg
rcll
mov
add
mov
sub
or
add
mov
add
insl
push
mov
jne
hlt
jmp
clc
cmp
clc
rcrl
ret
clc
bound
add
add
gs
movsb
clc
ret
clc
xor
aad
fsubs
add
add
add
aam
add
cmp
mov
add
leave
movsl
clc
pop
fs
push
add
inc
clc
and
add
pop
xor
add
cmp
add
xchg
clc
ss
cmp
add
sub
int
add
adc
cmp
xor
add
add
sti
aad
sar
cmpsb
clc
xor
add
in
mov
clc
scas
fadd
clc
aas
cmc
stos
test
pop
js
sbb
clc
and
sbb
clc
inc
clc
sbb
adc
add
mov
int3
vunpckhps
push
add
data16
mov
testb
ficomps
push
rcl
mov
add
xor
xchg
sahf
pop
push
daa
clc
mov
fcmovu
add
sbb
and
add
rcrb
add
clc
call
clc
mov
arpl
add
jnp
cmp
xchg
xor
add
clc
clc
ljmp
test
jmp
clc
and
mov
xor
add
pop
push
add
outsb
pop
cmp
in
ret
clc
and
sbb
add
push
clc
jmp
xchg
inc
add
aam
test
icebp
outsl
mov
popa
add
incl
add
daa
clc
out
sbb
xchg
shl
dec
lret
clc
push
aas
loop
and
and
int
jbe
and
add
clc
inc
clc
fbld
lahf
pop
clc
dec
sbb
add
mov
loope
xor
add
imul
clc
insb
sahf
enter
push
mov
adc
out
in
jmp
clc
jecxz
jp
clc
pop
jge
clc
mov
mov
clc
inc
clc
scas
imul
add
pushf
icebp
add
add
in
mov
ss
fwait
pusha
add
mov
aaa
pop
push
add
mov
clc
insb
stc
cmp
inc
add
fidivs
add
into
daa
clc
into
adc
icebp
cmp
jae
add
jmp
pop
clc
cmp
in
xchg
pop
pop
iret
fnstsw
add
ljmp
add
add
incl
add
inc
add
jmp
add
cmp
clc
mov
sbb
add
sub
in
lret
add
push
fstpt
or
mov
lods
pop
sub
mov
sarl
fstpt
or
push
push
add
fadd
clc
test
lcall
outsl
mov
sarb
cmp
add
inc
clc
cwtl
outsl
xchg
ret
clc
sti
pop
xchg
js
clc
das
push
push
dec
push
add
add
outsb
xchg
jnp
lea
pusha
add
popa
add
pop
mov
test
sbb
gs
jns
popa
add
sahf
adc
add
xor
add
clc
cmp
and
add
dec
mov
clc
out
leave
mov
mov
clc
cmc
jg
inc
add
or
jno
add
add
sar
cwtl
sbb
jno
add
push
sub
lret
dec
push
aas
mov
add
lea
or
sti
cli
inc
add
jns
gs
jb
add
cmp
pop
inc
add
mov
imul
clc
and
sub
loop
gs
inc
clc
test
inc
clc
sbb
aaa
cli
mov
add
rorl
clc
out
fwait
data16
aam
data16
push
add
jp
mov
push
out
int
sbb
cmp
add
mov
mov
clc
arpl
add
jbe
in
mov
push
insl
aad
in
add
clc
xor
add
out
xor
add
add
fadd
clc
push
add
ja
clc
lock
clc
mov
jge
clc
cli
sti
xchg
cmp
add
clc
outsb
pop
clc
test
push
ja
add
shrl
test
dec
xbegin
stc
mov
inc
add
push
add
bound
add
sub
mov
in
mov
mov
dec
cmp
add
sbb
ss
icebp
push
cmp
clc
xchg
cmp
add
sub
clc
mov
stos
in
adc
add
add
insl
lret
xor
add
mov
clc
mov
push
clc
xor
add
add
fdivrl
sti
dec
loop
lods
mov
xchg
xabort
mov
fidivrs
push
test
outsl
cmc
lcall
add
add
clc
push
push
bound
add
mov
add
in
xchg
push
add
repz
clc
xchg
pop
clc
push
add
dec
ds
mov
sbb
mov
int3
sub
add
sub
loope
ret
clc
fsubrs
mov
and
pop
jg
xchg
xchg
mov
jl
or
lret
cmp
fnstsw
pushf
vmovhps
adc
add
into
in
divb
fs
mov
nop
pop
add
add
inc
clc
jmp
xor
in
pop
shlb
add
shl
es
mov
aad
add
jb
add
popa
add
pop
cmp
mov
add
lret
add
jbe
out
dec
iret
xchg
pusha
add
xchg
out
fs
imul
clc
add
add
ss
mov
mov
mov
add
clc
bound
add
add
xor
add
adc
cli
in
clc
push
add
imul
add
clc
test
scas
dec
add
sub
es
cmp
test
push
xor
add
ljmp
sbb
das
popf
cltd
loopne
lods
loope
jle
nop
ljmp
add
or
outsb
out
mov
clc
sub
mov
adc
mov
popa
add
jmp
add
test
pop
inc
add
push
jl
mov
add
add
adc
add
add
inc
add
xchg
pop
clc
icebp
test
scas
jno
add
in
push
push
repz
outsb
sbb
dec
movsl
clc
loopne
inc
add
mov
pusha
add
mov
clc
inc
add
sub
clc
in
ficomps
adc
add
pop
sbb
sbb
gs
push
add
add
clc
dec
xchg
mov
in
fisubrl
out
add
fnsave
add
sub
cld
sbb
imul
cmpsb
clc
in
inc
clc
test
adc
clc
pop
lret
pop
leave
mov
cmp
add
int3
adc
add
add
repnz
clc
mov
insl
out
idivb
clc
leave
arpl
add
lcall
and
add
in
xlat
inc
add
scas
in
dec
inc
add
loopne
jns
dec
cmp
mov
add
pop
push
add
in
xor
add
clc
jno
add
icebp
add
add
xlat
jmp
cmp
jle
push
add
dec
sar
xabort
clc
jmp
leave
cwtl
imul
sbb
add
push
cmp
clc
call
clc
leave
push
test
pushl
add
mov
jns
clc
cmp
clc
in
out
jecxz
lock
clc
xchg
xlat
ja
add
and
add
inc
add
dec
imul
adc
add
add
add
stos
dec
inc
add
cmpsl
clc
dec
sbb
clc
mov
fcomps
and
add
push
jns
add
cmpsl
clc
loope
sahf
jmp
call
add
aam
mov
and
fcomps
jns
add
pop
fwait
arpl
add
dec
jge
scas
jmp
sub
fildll
clc
inc
add
inc
clc
pop
fstpl
xor
add
push
pop
lods
test
leave
or
add
add
and
add
stos
repnz
mov
add
jb
add
icebp
ds
jbe
add
add
clc
loop
imul
clc
repz
xchg
mov
add
xchg
push
and
jae
add
ret
add
scas
push
clc
int3
addr16
mov
and
jp
shl
clc
mov
jae
add
or
fs
dec
pxor
cmp
cmp
cmp
clc
sar
and
mov
clc
cmp
insl
xabort
clc
pop
not
push
add
dec
pop
jp
mov
pusha
add
call
sub
clc
scas
fisubl
pop
sar
mov
rclb
add
xabort
add
sar
es
mov
add
or
mov
clc
mov
or
add
lea
adc
add
clc
sbb
fs
jo
add
inc
clc
int
clc
sub
loopne
enter
cli
je
outsl
jo
add
add
inc
clc
cmpsb
clc
into
ljmp
jne
add
xor
add
add
clc
add
add
clc
ficomps
or
clc
cmp
ret
clc
fsubrs
xchg
adc
pop
clc
outsb
push
frstor
jo
add
push
xbegin
leave
sti
xor
add
add
dec
popf
data16
in
imul
inc
clc
ljmp
js
add
testb
in
ror
xor
add
inc
clc
dec
rclb
add
cmpsl
clc
jno
add
punpckhdq
clc
gs
sahf
mov
fiaddl
adc
jp
mov
clc
push
pop
cmp
int
stos
ret
incl
add
insb
or
inc
add
cmpsb
clc
faddl
movsb
clc
push
push
xor
add
clc
in
sahf
lock
add
add
add
add
add
test
push
jp
clc
pop
or
add
sub
inc
add
sub
add
adc
clc
out
mov
das
jnp
loop
fcompl
fdivl
cmp
add
dec
lahf
nop
add
add
add
add
cli
xor
add
mov
into
ss
add
clc
divb
mov
jmp
mov
clc
mov
clc
dec
pop
clc
xor
mov
lcall
fs
xor
add
pop
mov
scas
mov
clc
loopne
dec
sar
mov
clc
out
stos
sub
dec
sbb
adc
add
clc
idivb
push
cmp
mov
add
addr16
cmp
scas
gs
shrl
bound
add
add
and
jno
add
clc
js
jo
add
add
clc
insb
jnp
mov
iret
cmp
clc
ret
add
mov
add
jae
add
out
aam
add
xchg
pop
add
sub
bound
add
out
rcrb
ljmp
daa
clc
sbb
clc
gs
lods
dec
in
dec
loop
ret
push
add
add
add
add
push
xor
add
ret
clc
in
jno
add
add
adc
add
add
dec
add
inc
clc
jl
inc
clc
rcrl
jp
rcll
add
ret
clc
mov
mov
add
rcll
clc
add
add
inc
clc
pop
lahf
mov
clc
sbb
cmpsl
clc
repnz
out
sbb
add
add
clc
adc
add
lcall
clc
lods
and
add
stos
outsl
sub
lcall
clc
sbb
add
add
scas
repnz
dec
adc
add
cli
gs
in
out
sub
fistps
mov
cmpsl
clc
adc
add
clc
gs
out
inc
add
inc
add
push
sbb
add
mov
add
adc
add
add
adc
add
add
pusha
add
insl
mov
clc
lret
add
out
push
lods
repz
or
add
lock
add
pop
std
cmp
add
add
add
add
pop
or
or
add
add
stos
sar
cmp
add
add
out
jno
add
mov
jle
add
mov
clc
imul
movsb
clc
push
add
jbe
add
and
add
add
aam
and
add
push
xor
add
add
clc
jne
jecxz
push
movsb
clc
addr16
repnz
dec
mov
js
jne
je
shl
or
add
add
out
insb
test
ljmp
clc
insb
sbb
add
add
out
mov
clc
and
cmp
add
pop
jne
fs
pop
xchg
pop
sbb
dec
addr16
out
xbegin
xor
add
or
adc
add
xchg
mov
call
add
lcall
aam
psrld
clc
jecxz
in
cmpsb
clc
lea
xlat
test
clc
cmp
stc
xchg
movsb
clc
popa
add
loopne
movsb
clc
push
aam
clc
push
adc
add
xchg
and
add
cltd
fmulp
or
add
cmp
push
shl
clc
inc
add
inc
add
pop
jns
add
fwait
out
cmp
add
mov
mov
add
push
add
inc
clc
mov
add
je
push
cld
in
xor
add
clc
mov
sbb
adc
add
jb
add
add
add
add
clc
in
mov
push
add
imul
add
xor
add
add
add
fisubs
dec
xchg
rep
cmpsb
clc
lahf
adc
add
clc
faddl
add
clc
iret
test
nop
ret
clc
das
icebp
sbb
test
loopne
insl
mov
rorl
clc
aad
pop
dec
sub
sub
xchg
xchg
iret
push
add
xchg
cld
ficompl
push
cmp
add
xor
and
add
add
lahf
xor
add
dec
decl
xlat
pushf
or
mov
sub
repnz
clc
sar
inc
add
dec
scas
dec
clc
push
das
and
mov
sub
scas
sahf
dec
clc
sar
push
adc
add
into
stc
xchg
jb
add
mov
clc
dec
sub
adc
pop
insl
pop
out
arpl
add
sub
clc
sar
mov
add
push
add
dec
jne
jge
in
adc
add
clc
push
popa
add
cmp
clc
jo
add
lock
add
add
inc
add
and
add
add
add
insl
push
add
stos
mov
pavgw
out
mov
aad
clc
push
add
xor
add
in
popa
add
out
inc
clc
add
sbb
pop
mov
pop
cltd
pusha
add
xabort
iret
push
mov
add
push
mov
clc
cmp
ss
je
inc
add
cmp
clc
push
clc
jmp
cmp
push
add
inc
clc
loope
test
add
hlt
mov
clc
fwait
pop
mov
adc
add
ficoml
ficoms
add
ljmp
clc
in
gs
int3
or
ficoms
add
dec
dec
xbegin
cltd
and
add
repnz
clc
fldenv
mov
jg
jmp
pusha
add
clc
sahf
in
inc
clc
loop
ljmp
add
xor
add
sar
add
add
sbb
clc
adc
add
pop
fs
dec
pop
fimull
add
add
call
mov
movsb
clc
cmp
adc
add
cmp
arpl
add
into
loope
sar
iret
lahf
xchg
add
scas
inc
clc
test
push
add
inc
add
icebp
cmp
add
cmp
inc
add
or
loop
popa
add
jl
cmp
out
add
add
add
aad
aad
xbegin
in
add
add
add
int
cmp
cld
int
adc
sbb
add
add
mov
xchg
fimull
das
mov
mov
xchg
stos
jb
add
pop
clc
fwait
mov
push
add
call
mov
ljmp
std
xabort
pusha
add
cmp
cwtl
pushf
out
mov
cmp
cs
clc
inc
clc
pusha
add
lea
add
clc
xchg
test
movsb
clc
sub
insl
ret
clc
lcall
mov
fimull
clc
aaa
cmp
xchg
lcall
dec
and
add
clc
sub
clc
jl
inc
clc
sub
scas
sti
xchg
push
add
xor
clc
inc
clc
lods
mov
jl
add
pop
mov
sbb
mov
clc
clc
scas
jmp
mov
movsl
clc
cmpsl
clc
sub
sbb
push
xchg
ret
clc
aad
inc
add
std
into
dec
aam
insl
pop
in
movsl
clc
cltd
mov
add
outsl
add
add
clc
loop
dec
outsl
push
dec
lcall
clc
dec
adc
adc
add
lods
dec
xchg
lret
aas
gs
sbb
add
dec
adc
clc
insb
jle
cwtl
and
add
push
add
shl
clc
adc
add
mov
mov
stos
cmpsb
clc
pop
xchg
jg
push
clc
pop
inc
add
data16
cmp
js
dec
dec
ret
clc
shlb
add
in
jno
add
clc
mov
rorl
adc
clc
out
cmp
lret
loop
sub
clc
jecxz
roll
out
or
clc
jp
xor
pop
enter
xchg
xor
add
mov
cltd
inc
add
das
cmp
lea
add
das
dec
or
mov
outsl
pop
test
sub
in
xchg
push
cltd
sub
add
je
mov
enter
bound
add
add
add
pop
pop
xchg
ljmp
fmull
add
add
clc
add
add
add
jbe
ss
fwait
cltd
push
jno
add
pop
add
add
mov
add
mov
add
mov
clc
aas
ret
clc
dec
out
mov
mov
sar
inc
add
rcl
xabort
rol
clc
scas
adc
add
nop
sar
add
push
xor
add
mov
add
cld
mov
in
lret
clc
sti
pop
push
testb
mov
es
in
mov
clc
sahf
lcall
add
xor
add
clc
popf
cwtl
addr16
adc
add
add
imulb
mov
lahf
add
add
push
out
hlt
inc
clc
cwtl
icebp
sub
aam
add
lcall
xchg
mov
or
adc
add
clc
iret
fmull
inc
add
int
sub
clc
push
clc
punpckhbw
jne
push
cmp
add
add
addr16
nopl
clc
jnp
clc
enter
xor
add
add
clc
xchg
cwtl
add
add
xbegin
add
add
divl
mov
add
bound
add
add
flds
clc
out
or
jmp
imul
clc
aam
clc
addr16
test
daa
clc
loopne
fbstp
sbb
mov
push
adc
add
clc
inc
add
sbb
add
add
iret
mov
add
xor
add
add
or
mov
push
gs
inc
clc
xchg
push
jmp
pop
push
sar
add
sub
add
stc
sti
pop
rorb
add
lcall
mov
clc
push
add
push
add
mov
pop
xchg
push
add
insb
fs
dec
sub
test
sbb
clc
mov
cmpsl
clc
mov
add
dec
adc
add
pushf
jns
pop
test
imul
adc
add
add
mov
add
add
add
clc
pop
in
lods
outsb
xbegin
cmp
add
or
clc
int3
mov
sbb
adc
adc
add
clc
adc
mov
add
jbe
lcall
cmp
push
shll
clc
pop
ret
clc
jns
clc
xor
add
adc
add
lahf
stc
ret
clc
inc
clc
inc
add
push
add
pop
loop
addr16
lock
clc
test
stos
out
es
mov
mov
clc
sti
inc
add
popa
add
mov
mov
bound
add
mov
popf
sub
cmp
clc
sbb
add
pop
mov
or
sub
enter
fsubrs
add
mov
mov
mov
add
sti
mov
clc
lock
add
add
or
cmc
call
popf
insb
xbegin
clc
mov
ljmp
add
lret
xlat
cmpsl
clc
pcmpeqw
ret
clc
mov
dec
and
add
add
dec
and
add
nop
movlps
add
mov
lret
sub
int3
ljmp
cmp
clc
mov
test
ds
mov
out
test
add
pop
cmc
adc
clc
stc
lret
insb
ret
clc
mov
or
clc
loopne
push
clc
int
clc
cmp
clc
out
fwait
mov
add
add
aaa
adc
clc
clc
sar
push
and
add
clc
mov
mov
clc
push
clc
in
adc
adc
add
mov
lret
add
mov
add
pop
imul
adc
add
std
vxorps
mov
clc
mov
inc
add
add
clc
push
add
maxps
fnstsw
clc
pop
xor
add
add
cmp
jge
adc
add
sub
mov
add
or
mov
stos
aad
inc
add
pop
xor
clc
dec
push
shr
sbb
add
add
inc
add
mov
add
add
and
add
adc
clc
xchg
test
sahf
fbld
cmp
add
jne
add
add
push
sar
clc
imul
cmp
add
inc
clc
jge
sbb
add
sti
inc
clc
push
mov
add
out
jne
cmp
or
pusha
add
or
frstor
inc
add
pop
inc
add
cmc
inc
clc
cwtl
out
mov
call
imul
icebp
cs
pop
cmp
arpl
add
popa
add
in
jb
add
sbb
xor
add
inc
clc
mov
in
es
test
add
fwait
jno
add
jle
mov
scas
lret
mov
clc
arpl
add
clc
rcll
add
xchg
add
add
clc
xchg
shr
dec
mov
imul
ret
movsb
clc
insl
insl
mov
int
push
cmp
sub
add
mov
dec
enter
add
jle
ja
clc
rorl
clc
popf
popa
add
mov
clc
xor
add
and
add
imul
stc
xchg
jmp
and
add
bound
add
clc
ret
add
push
cmpsl
clc
jae
add
add
add
jnp
inc
add
sbb
add
cmp
jg
je,pt
lret
imul
sbb
dec
aad
cmc
cmp
inc
clc
fs
pop
push
inc
clc
cwtl
jbe
lcall
add
clc
and
mov
add
pushf
loop
add
add
addr16
mov
xchg
sahf
dec
xlat
xchg
mov
dec
stos
aam
addr16
dec
jmp
clc
jle
clc
pop
lret
jne
xor
xor
add
sbb
jae
add
inc
clc
bound
add
adc
add
push
testl
add
dec
xor
pop
mov
test
cmp
add
cmp
add
xchg
pusha
add
jecxz
arpl
add
xbegin
shlb
imul
fadd
clc
push
add
mov
icebp
aaa
lahf
add
dec
xchg
dec
jg
clc
xchg
bound
add
shll
add
mov
add
add
dec
and
push
in
xchg
inc
add
mov
cmp
rcr
or
add
push
gs
lcall
fsts
add
data16
pop
ror
imul
add
add
pop
in
or
add
loop
arpl
add
iret
aaa
push
clc
shll
test
loop
inc
clc
adc
add
xchg
pusha
add
push
ljmp
clc
negb
add
arpl
add
clc
arpl
add
add
add
xor
add
add
mov
sub
xchg
inc
clc
pop
enter
clc
pop
push
in
movsl
clc
jnp
in
add
mov
mov
aam
clc
movsl
clc
mov
and
add
in
pop
ja
faddl
divb
add
fwait
mov
clc
in
mov
push
add
rcll
inc
clc
inc
clc
repz
mov
aad
lock
add
cmpsl
clc
lret
sbb
clc
push
or
in
test
cmp
idivb
clc
das
cmpsb
clc
imul
cmc
fstps
cmpsl
clc
lret
outsb
sarb
shr
jns
xchg
pop
stc
inc
add
sub
add
add
mov
clc
jb
add
dec
add
add
add
add
das
fidivl
add
sbb
mov
sbb
mov
xchg
sbb
testb
or
clc
mov
add
sahf
movsl
clc
push
in
xchg
push
pop
sub
shll
fs
jmp
lret
mov
push
add
xor
add
and
add
add
add
jl
sbb
push
cwtl
es
sbb
clc
add
add
imul
ss
int
clc
add
add
add
mov
fidivrs
repnz
fwait
inc
add
jb
add
inc
clc
loopne
mov
imul
testl
add
aas
movsb
clc
rcll
add
test
leave
and
aad
add
stos
push
loope
int3
cmp
insb
fwait
pushf
test
jns
add
mov
add
cmp
and
add
add
clc
or
mov
push
clc
add
push
add
frstor
add
loop
or
pop
in
shll
mov
js
add
test
sub
push
popa
add
push
clc
mov
push
add
shlb
add
aas
push
data16
cmp
and
add
out
fwait
ljmp
add
cmp
sub
add
xchg
insl
cmp
and
add
cmpsl
clc
sbb
add
add
add
pushf
pop
mov
add
shl
clc
mov
xbegin
add
fistpll
lods
movsl
clc
outsb
mov
mov
clc
loope
cmp
fs
xchg
cs
adc
add
add
sbb
cmp
add
mov
xchg
sar
xchg
cmp
clc
jne
clc
xchg
xor
cmp
clc
das
nop
push
add
and
add
mov
add
not
sbb
addr16
inc
clc
mov
xchg
inc
add
out
shll
clc
jae
add
add
add
pop
hlt
imul
clc
add
add
add
inc
add
call
add
repnz
xabort
cmp
lock
add
add
dec
jbe
daa
clc
push
sbb
clc
shlb
add
icebp
push
clc
push
stos
jle
add
add
enter
mov
clc
sub
out
or
add
in
xchg
sbb
mov
lahf
sar
push
add
std
cwtl
dec
jmp
xchg
out
pop
psubsw
add
lea
push
add
iret
popa
add
cmpsl
clc
and
jne
add
or
es
imull
cmp
sub
ds
lahf
or
add
imul
mov
jmp
cmp
loop
loop
jnp
clc
aad
clc
inc
add
jle
addr16
sarb
pusha
add
or
push
daa
clc
bound
add
cwtl
and
add
add
dec
lret
clc
pop
lahf
jno,pt
add
rcr
pop
rclb
ror
pop
sar
inc
clc
pop
imul
sbb
lods
mov
jl
mov
add
or
bound
add
add
sub
cmp
push
ss
add
ret
add
js
out
imul
add
into
jae
add
add
add
clc
aam
push
mov
add
jb
add
add
jo
add
clc
push
add
lea
fcomps
push
add
cmpsb
clc
stc
mov
add
in
push
fsubrl
mov
pusha
add
xbegin
add
fcoml
iret
cmp
in
xchg
es
jns
jne
test
add
clc
inc
add
push
add
xchg
push
xor
add
push
scas
sub
clc
sti
js
movsb
clc
outsl
lock
add
cld
aaa
cld
sbb
and
add
out
pop
out
dec
dec
and
add
aas
mov
in
rolb
add
sti
mov
xabort
mov
stc
popf
inc
add
hlt
dec
sub
clc
stc
pushf
aam
loop
ja
sub
xchg
adc
movsb
clc
aas
add
dec
xchg
sbb
clc
xlat
outsb
loopne
pushf
sahf
cwtl
cmp
fucom
clc
sbb
scas
in
mov
out
jb
add
daa
clc
cs
adc
add
clc
jge
add
sahf
jle
cltd
mov
std
insb
add
add
fwait
lret
shlb
cmp
movsl
clc
ljmp
js
out
mov
insb
sbb
add
clc
lret
push
add
add
mov
movsb
clc
out
xchg
stos
imul
or
cmp
inc
clc
enter
sub
dec
iret
icebp
bound
add
clc
lock
mov
add
subps
popf
pop
adc
add
clc
sub
pop
clc
inc
add
out
stos
mov
clc
xchg
addr16
jae
add
addr16
pop
add
add
add
jp
clc
shll
aad
insb
pushf
insl
jle
cmp
jmp
fimull
and
add
ds
mov
jge
sbb
clc
lret
add
bound
add
push
add
sarb
jns
clc
cmpsl
clc
xchg
cmp
add
and
add
fnstenv
add
data16
push
adc
clc
imul
add
clc
in
lock
pop
jle
add
add
lods
push
add
fs
hlt
pop
or
clc
sub
fistpll
scas
loope
out
outsb
test
dec
std
or
aad
mov
add
add
inc
add
ret
clc
mov
ds
outsl
cmc
decl
and
add
out
cli
out
repz
add
xchg
cmp
push
add
cmpsl
clc
aad
test
push
cmp
pushf
int3
jae
add
sbb
mov
push
inc
clc
out
sub
sbb
clc
dec
cs
roll
dec
or
sbb
adc
add
jns
lods
cmp
jg
add
leave
mov
clc
cld
cmp
clc
in
aam
pop
jno
add
xlat
jae
add
clc
jb
add
repnz
or
jl
nop
push
add
clc
fistps
fbld
add
out
adc
add
pop
clc
push
inc
add
push
mov
add
sub
in
fnsave
aad
and
add
cli
clc
out
adc
add
test
cmp
add
cltd
bound
add
and
add
cli
mov
clc
sub
add
mov
sbb
lods
mov
mov
insb
fcmovnu
dec
xor
mov
clc
sbb
clc
int3
rorb
dec
cmp
sar
mov
add
cmpsl
clc
inc
clc
cmp
add
add
clc
cli
cmp
clc
test
cmp
or
mov
xor
add
add
jg
adc
add
je
jno
add
aam
or
jmp
sub
add
dec
int
add
sub
clc
popa
add
sub
aad
clc
jmp
pop
adc
add
add
add
std
dec
aam
cld
fstp
lods
xchg
jmp
sub
jno
add
loopne
push
add
cmp
dec
mov
daa
clc
sbb
sar
lea
sbb
sub
pop
adc
add
add
cmp
testb
mov
add
sub
clc
cmp
test
es
pop
popa
add
pop
xor
add
pop
jg
or
icebp
clc
pusha
add
dec
das
lods
mov
push
ficoml
pop
inc
add
mov
ret
clc
xchg
das
clc
je
cmp
dec
or
add
mov
sar
add
ja
clc
mov
adc
add
add
add
clc
lods
push
loope
scas
cmp
clc
bound
add
clc
pop
add
add
fnstcw
push
add
push
pop
mov
gs
fucomi
sub
jbe
xor
add
leave
mov
aad
js
pop
mov
lahf
fwait
mov
xchg
pop
mov
add
cmp
dec
push
psrlw
add
mov
pop
xor
add
mov
clc
push
fs
push
in
fistl
clc
stos
imul
add
mov
aaa
bound
add
test
mov
popf
push
clc
push
std
mov
mov
xabort
clc
sub
inc
clc
dec
xor
clc
ret
clc
inc
clc
loopne
pavgb
adc
add
aam
clc
or
sbb
clc
fldl
lret
xlat
mov
mov
clc
add
add
push
cmp
xchg
clc
sbb
inc
add
xor
add
jmp
inc
add
mov
iret
or
lods
sbb
clc
mov
adc
add
dec
mov
or
sar
jp
clc
cmc
aam
clc
jp
mov
std
lar
add
adc
add
dec
jp
popf
das
sbb
outsb
jmp
clc
sbb
xchg
loopne
mov
add
xabort
add
push
add
lea
add
sub
clc
sub
in
rcrl
push
add
call
add
clc
test
add
add
push
add
add
xchg
addr16
mov
clc
sbb
mov
dec
lods
sbb
out
call
fnsave
add
mov
clc
and
rcr
arpl
add
push
add
inc
add
mov
jno
add
data16
pop
push
pop
stos
dec
or
and
add
clc
inc
add
mov
inc
clc
je
add
jecxz
push
aaa
adc
xabort
inc
clc
sub
inc
add
out
test
rorl
xor
add
inc
add
pop
add
add
loope
sub
add
imul
loop
mov
xabort
test
sub
jns
scas
leave
repnz
add
clc
test
stos
mov
mov
clc
jo
add
ret
ljmp
mov
aas
shll
data16
lret
ss
clc
xor
add
add
mov
add
add
lahf
pusha
add
mov
or
clc
aaa
jns
clc
xor
cmpsb
clc
sub
adc
add
add
mov
add
clc
in
dec
mov
sar
clc
aaa
xor
clc
daa
clc
popf
jae
add
add
inc
clc
popf
jae
add
add
adc
add
xor
add
ret
clc
lret
dec
rcl
std
test
adc
add
and
add
xor
add
fldt
push
dec
icebp
jb
add
sbb
gs
clc
push
jge
or
sbb
inc
clc
aas
xor
clc
cmp
jle
inc
clc
pop
cmp
clc
adc
mov
pop
sbb
xor
add
leave
jmp
sti
bound
add
fs
data16
das
test
dec
or
and
add
ret
clc
xabort
ljmp
mov
push
clc
pop
adc
add
mov
add
sar
and
repnz
ficomps
cmp
mov
jb
add
push
test
aad
xchg
or
clc
int
mov
shlb
fsubrl
add
add
shll
test
into
or
add
add
push
add
notb
add
out
push
add
sbb
add
pop
inc
add
pushf
adc
add
sbb
add
mov
aam
repnz
add
sbb
cmp
xchg
int3
pop
sub
inc
clc
jns
clc
data16
pop
and
xchg
insl
mov
adc
add
add
sub
clc
add
push
in
arpl
add
jle
clc
test
clc
push
add
ljmp
ret
clc
pop
gs
fcoml
add
popa
add
fs
xchg
dec
inc
add
inc
clc
mov
dec
aad
in
test
sahf
jecxz
cmpsb
clc
pop
enter
push
or
xchg
pop
je
add
jle
mov
dec
leave
loopne
lods
lahf
xbegin
clc
adc
add
aas
dec
or
push
clc
rorl
add
into
sub
dec
mov
clc
sbb
fildll
f2xm1
cmpsb
clc
pop
push
add
cmp
clc
push
push
add
out
je
lahf
lret
xor
add
lods
notb
clc
xbegin
cmp
mov
lahf
scas
pop
daa
clc
aas
cmp
add
add
fwait
scas
cmpsb
clc
sbb
jp
fbstp
add
mov
add
add
clc
xor
add
add
das
mov
popa
add
jmp
ds
add
test
shll
add
std
jl
daa
clc
cmpsl
clc
inc
clc
or
clc
and
add
push
clc
cs
push
add
pop
scas
mov
mov
add
pop
aad
clc
fsubl
clc
into
test
cmp
in
mov
pop
paddd
sahf
cmp
stos
jecxz
clc
push
add
push
jge
jp
clc
xor
add
clc
in
adc
clc
pop
cmp
adc
lods
push
jno
add
pop
call
mov
stos
mov
jl
clc
sti
out
sub
add
mov
fdivrl
in
inc
clc
sti
das
aam
enter
push
add
push
adc
add
add
clc
in
in
sub
ja
and
sub
ret
sub
xchg
sbb
cmp
add
xor
add
clc
fdivp
pop
and
add
and
add
push
add
mov
add
pop
inc
add
xchg
inc
clc
clc
mov
mov
dec
mov
add
mov
das
insl
pop
jl
xchg
xbegin
and
clc
push
jae
add
jp
clc
sbb
and
add
clc
lret
cmp
gs
jl
sbb
add
jge
clc
push
scas
ds
roll
add
mov
fadds
and
clc
pop
or
repz
xchg
dec
lock
push
add
adc
add
add
fstps
and
add
dec
out
clc
push
add
xlat
push
mov
dec
shr
aam
mov
hlt
xchg
mov
add
add
add
sub
xchg
addr16
push
mov
add
mov
sar
mov
clc
mov
punpcklbw
add
cmp
add
repnz
movsl
clc
popa
add
adc
add
add
xchg
test
bnd
clc
movsb
clc
mov
clc
inc
add
jmp
lahf
cmp
movsb
clc
ret
sbb
clc
jns
push
clc
push
sbb
stc
inc
add
cmp
out
mov
int
clc
mov
push
clc
inc
add
mov
cmp
add
das
push
inc
add
and
in
and
sbb
add
arpl
add
lods
jle
add
xlat
enter
addr16
cwtl
pop
cmp
push
test
clc
imul
jp
aam
add
std
sub
sti
dec
out
xor
add
mov
xchg
jo
add
mov
setbe
clc
adc
add
stos
xchg
sahf
aad
clc
popa
add
sub
clc
hlt
inc
add
sar
mov
pop
std
aaa
inc
add
cmpsl
clc
mov
test
cmp
clc
jmp
mov
pop
and
add
cmpsl
clc
mov
xchg
adc
add
add
in
adc
add
pop
push
mov
xchg
inc
clc
cmp
jae
add
add
push
or
adc
add
pushf
sbb
inc
add
jb
add
adc
add
aaa
imul
cli
js
clc
sub
add
add
push
add
movsb
clc
data16
jns
clc
test
clc
enter
repz
sub
int
add
cmp
push
mov
clc
insl
aas
push
adc
add
mov
push
jb
add
sar
dec
out
or
mov
test
jp
clc
xor
add
clc
jae
add
add
xor
add
gs
push
add
lcall
cltd
cltd
testl
xchg
lods
aam
adc
add
pop
rcll
scas
xor
clc
mov
add
add
dec
inc
add
fstl
add
mov
jge
mov
repnz
add
add
add
sarl
clc
imul
add
call
add
add
dec
adc
add
lret
in
mov
mov
in
xor
clc
or
add
mulb
jg
imul
sub
add
dec
xchg
clc
dec
clc
xor
add
jge
push
inc
clc
push
clc
dec
xchg
rcll
add
sub
push
cmp
lods
mov
xchg
cmpsb
clc
sub
cmp
into
inc
clc
fmuls
mov
xabort
pop
and
add
lods
nop
xbegin
scas
clc
dec
adc
mov
add
cmp
mov
add
add
and
add
fildll
clc
scas
pop
jne
jnp
clc
mov
xor
add
add
add
jmp
mov
sub
jmp
loopne
mov
add
cmp
clc
mov
add
add
jno
add
inc
clc
popf
sub
xchg
stos
fsts
scas
repz
xor
add
add
mov
sti
mov
jp
mov
addr16
cmp
mov
push
add
jg
add
sub
clc
inc
clc
xor
add
add
add
bound
add
clc
gs
mov
xor
add
add
jbe
add
inc
add
into
mov
add
adc
add
push
inc
clc
xabort
push
jno
add
add
in
mov
ds
xchg
xchg
fs
insl
inc
clc
clc
in
pop
or
cmp
xlat
and
add
and
add
dec
mov
clc
and
mov
add
add
xchg
lret
in
fucomp
fcomps
add
cmp
es
mov
arpl
add
pushf
and
add
add
add
test
loopne
dec
loope
push
clc
pushf
pop
mov
adc
add
clc
bound
add
movsl
clc
cmp
clc
sub
add
mov
mov
clc
loope
lcall
add
add
xor
add
sub
clc
in
cltd
cmp
mov
mov
sub
nop
int3
sbb
add
lods
imul
mov
clc
cs
hlt
cmp
push
cmp
or
sbb
add
clc
and
mov
out
xchg
out
sub
add
ret
and
add
aas
mov
mov
pop
clc
mov
loopne
add
add
adc
loopne
push
imul
sbb
jb
add
gs
dec
out
inc
clc
cld
loopne
int
mov
nop
in
sbb
inc
clc
jbe
jne
inc
add
lahf
stos
mov
adc
add
xor
clc
adc
add
dec
imull
jnp
mov
cmp
add
and
add
fs
lahf
daa
clc
cmp
xchg
add
add
adc
pop
ss
sbb
jnp
lret
push
add
mov
add
je
shll
add
mov
xorps
clc
cmpsb
clc
xbegin
add
add
lcall
clc
jno
add
clc
mov
cmp
mov
ret
clc
sub
stos
adc
add
mov
clc
jle
aas
or
pop
pushf
mov
int3
dec
jns
add
mov
add
sar
add
sub
clc
and
add
jae
add
js
sbb
clc
mov
ret
clc
jns
or
add
inc
add
gs
iret
je
jb
add
add
jle
int3
out
xchg
ret
sub
adc
add
cmpsl
clc
cmp
ljmp
jmp
aam
pop
jne
dec
pop
xchg
popa
add
push
cli
xor
add
add
sahf
es
cmp
clc
xor
loope
cmp
movsb
clc
repz
add
popa
add
popa
add
jo
add
mov
jmp
push
sub
mov
clc
mov
push
add
icebp
test
nop
sbb
clc
pop
clc
inc
clc
xchg
cmpsl
clc
xchg
mov
add
insl
push
test
clc
icebp
pop
push
and
mov
mov
add
inc
clc
mov
clc
adc
add
mov
pop
ljmp
addr16
lock
clc
lret
cld
pop
js
push
inc
add
jecxz
lods
cli
ror
and
dec
rcll
add
jg
ss
lcall
clc
mov
cmp
clc
pop
flds
pop
jns
fistpl
and
fldcw
cmp
jg
push
mov
mov
inc
clc
and
add
push
jecxz
fnstenv
add
inc
add
xchg
push
insl
sub
add
add
sub
xabort
clc
in
pushf
jne
sub
mov
jbe
mov
add
dec
sbb
clc
mov
mov
push
insl
in
outsl
xor
add
clc
xchg
xchg
push
jl
clc
sti
enter
xlat
ss
xlat
sub
jg
clc
xchg
xabort
sbb
clc
je
sub
add
test
mov
pop
clc
repz
jno
add
fwait
or
jae
add
clc
aas
ss
clc
arpl
add
mov
add
enter
clc
fs
push
xabort
adc
add
clc
repnz
add
fsubs
push
clc
test
shr
add
js
pop
push
xchg
jle
mov
clc
cmp
xor
add
add
add
add
dec
lret
add
adc
add
add
clc
dec
mov
add
pop
clc
xchg
push
add
add
sub
push
add
or
xchg
std
push
ds
nop
xor
add
add
add
add
xchg
cmc
xor
add
cmpsl
clc
scas
leave
xchg
sub
inc
clc
xchg
arpl
add
insl
sub
mov
cld
ret
clc
cmp
mov
in
pop
leave
lods
outsl
mov
clc
daa
clc
pushf
out
out
and
or
pop
sub
cmp
out
scas
mov
xor
add
sbb
clc
xor
add
sar
fisubrs
sarl
clc
loopne
into
dec
enter
cmpsl
clc
test
mov
add
xor
add
add
ret
clc
mov
push
and
mov
test
cli
cmp
enter
bound
add
add
sbb
lea
add
fwait
call
ret
clc
dec
inc
clc
je
add
push
mov
shrl
fistpll
pop
push
clc
into
clc
pop
mov
add
add
add
fsubs
or
clc
cmp
test
es
mov
pop
clc
pop
in
jge
inc
add
mov
pop
pop
mov
mov
clc
inc
clc
scas
idivl
xor
add
mov
dec
sub
aaa
iret
sbb
knotw
sub
sbb
repz
fs
and
clc
adc
add
mov
cmpsl
clc
cli
testb
inc
add
mov
testb
add
add
clc
imul
data16
xor
add
inc
add
icebp
daa
clc
fdivr
mov
xabort
fcmovu
ljmp
bound
add
ljmp
dec
out
mov
clc
mov
clc
repz
xor
xabort
and
add
rcrl
cli
push
ss
call
or
cs
dec
shrb
add
add
pop
sbb
aas
leave
bound
add
je
in
loop
in
and
add
add
imull
cltd
sar
popf
xchg
sub
clc
mov
add
addr16
cwtl
dec
xor
clc
dec
scas
lods
cmp
add
add
add
mov
add
clc
xchg
ds
ret
out
js
mov
add
cmp
clc
rorb
clc
fwait
mov
clc
loopne
add
add
ja
arpl
add
xchg
popf
mov
clc
wbinvd
jbe
pushl
add
mov
add
mov
add
add
je
add
sti
rorl
add
loop
jbe
clc
lret
clc
std
pusha
add
add
add
mov
jmp
imulb
push
add
pop
inc
clc
icebp
ja
add
add
add
mulb
clc
add
add
xchg
push
stc
pop
pop
sbb
loopne
ret
clc
xchg
xchg
fsincos
push
mov
pop
or
stc
ficoms
clc
sbb
add
add
pushf
or
xor
cwtl
mov
add
add
add
clc
and
add
clc
cltd
cltd
hlt
and
add
clc
cmpsl
clc
out
xor
add
sbb
inc
add
call
mov
clc
dec
xchg
sub
sti
inc
add
clc
mov
xchg
clc
push
icebp
std
and
lahf
adc
add
daa
clc
fwait
push
adc
jae
add
adc
add
icebp
xor
add
clc
mov
mov
mov
clc
adc
fwait
xchg
hlt
mov
jmp
in
dec
sbb
sar
adc
add
lock
lahf
cs
out
fdivr
loop
push
clc
xchg
add
add
sub
pop
pop
dec
mov
lea
stos
cmp
jbe
clc
inc
add
cld
push
jnp
cwtl
adc
pop
cmp
mov
clc
cmp
cmp
int3
sub
lcall
dec
aam
jge
int
clc
test
gs
ret
clc
cmpsl
clc
jg
clc
mov
cmp
add
add
add
ret
fs
sbb
add
sbb
daa
clc
stos
inc
add
inc
add
test
add
sbb
clc
fwait
cmp
cmp
add
clc
jmp
cmp
stc
js
mov
clc
fwait
jnp
add
push
mov
add
add
adc
add
cld
jo
add
add
vmovaps
clc
fisttps
clc
repnz
clc
fisttps
inc
clc
icebp
shrl
add
leave
fs
pusha
add
adc
xor
add
xchg
push
stc
xor
add
clc
into
ljmp
add
mov
rcrl
xchg
ds
clc
imul
jns
rcrb
rcrb
add
dec
iret
dec
js
clc
leave
push
sahf
or
clc
je
rorl
push
enter
pop
push
mov
clc
test
cmpsl
clc
aaa
fwait
dec
xor
add
icebp
fcoms
add
sub
insl
mov
xor
add
push
fs
push
push
cvttps2pi
sbb
clc
adc
add
xor
add
rclb
add
mov
clc
sbb
clc
jns
mov
repz
add
in
adc
add
add
dec
int
push
sbb
add
mov
add
add
ret
clc
faddl
push
cmp
fwait
dec
jge
es
mov
adc
inc
add
cmp
add
dec
hlt
mov
fstl
xor
clc
into
hlt
repnz
add
add
mov
or
mov
rcrl
clc
jl
add
mov
jg
add
xchg
inc
add
aam
clc
aaa
popl
negl
jmp
add
dec
ja
das
inc
add
jg
xchg
dec
jns
pop
cmp
cmp
daa
clc
call
add
int3
dec
shll
mov
in
push
and
add
add
fldt
outsb
movsl
clc
out
sahf
mov
stos
sbb
stos
pop
cmpsl
clc
mov
lret
sbb
add
xchg
mov
pop
mov
add
negb
add
std
inc
add
je
cmc
in
push
cltd
loop
mov
shlb
add
out
sahf
add
add
add
shll
add
and
add
clc
loopne
fistpl
mov
mov
fistpll
clc
xor
mov
adc
add
mov
je
je
data16
push
sbb
push
cmp
clc
scas
adc
add
clc
xor
add
arpl
add
iret
xchg
lcall
out
pop
jb
add
clc
sub
dec
aas
xchg
sti
xor
add
add
add
mov
cmp
ret
cmp
add
fucomi
fs
test
add
clc
das
mov
ret
mov
mov
and
pop
divb
jae
add
inc
add
dec
and
add
add
add
fdivrs
add
lock
add
cli
mov
mov
adc
add
clc
gs
popa
add
fwait
icebp
clc
stos
js
pop
daa
clc
sub
jecxz
lret
pop
mov
pop
push
add
add
mov
lods
filds
adc
arpl
add
sbb
add
or
pop
daa
clc
jl
mov
sbb
clc
clc
push
add
ja
lods
push
and
add
fcoml
add
clc
or
sub
outsb
es
mov
add
add
rorl
jne
clc
inc
add
inc
add
outsl
push
fnsave
mov
xlat
mov
cmc
fs
pop
lret
xchg
dec
push
add
addr16
stos
js
mov
clc
inc
add
data16
xor
adc
cmp
cmp
cmp
add
push
dec
pop
and
add
mov
cmpsb
clc
sub
mov
clc
jno
add
add
clc
jne
clc
cmp
clc
cmp
repz
jnp
je
hlt
push
clc
movsl
clc
xor
clc
and
add
add
clc
fnstenv
mov
scas
ljmp
lahf
push
sbb
out
je
jo
add
mov
add
sarb
clc
inc
add
adc
add
pusha
add
mov
clc
clc
rorl
inc
clc
scas
sarb
xchg
adc
add
clc
fstl
clc
sahf
enter
pop
outsl
sub
clc
loop
test
test
sbb
fyl2x
dec
mov
faddl
insb
clc
mov
add
sub
add
xchg
dec
xchg
push
jecxz
mov
hlt
xchg
push
add
or
add
jg
xor
mov
mov
cmp
sti
cmp
inc
clc
xchg
inc
clc
std
push
clc
mov
and
add
push
jmp
ljmp
xlat
iret
scas
push
adc
add
divl
cmp
clc
and
add
clc
je
gs
repz
add
out
test
outsb
inc
clc
pusha
add
jnp
outsb
push
into
or
data16
mov
popa
add
lahf
xchg
adc
add
clc
movsl
clc
stos
out
sbb
fdiv
inc
clc
xchg
xlat
mov
add
clc
cmp
add
cmp
clc
push
std
pop
inc
clc
inc
clc
mov
imull
pop
insl
out
in
lea
add
pop
clc
test
dec
cwtl
adc
add
cmp
add
test
lcall
sbb
clc
scas
pop
mov
add
adc
add
mov
cmp
add
mov
add
fidivs
add
dec
mov
clc
xor
add
out
nop
fcmovb
clc
pop
je
ds
add
nop
sub
clc
adc
add
cmpsl
clc
sbb
and
add
xor
add
clc
and
add
sub
mov
clc
or
xor
add
clc
adc
add
dec
aam
clc
jbe
inc
add
sub
add
adc
sahf
std
push
out
xor
add
xor
add
clc
add
setno
mov
not
in
in
icebp
adc
add
clc
pop
lods
dec
cmpsl
clc
lcall
gs
mov
dec
insl
pop
mov
and
add
clc
pop
clc
add
add
fiaddl
add
sbb
inc
add
hlt
add
pop
jg
clc
push
add
jp
loope
xchg
inc
clc
lret
xor
add
aas
mov
clc
jecxz
rcrl
xbegin
jl
or
inc
add
xchg
cmp
push
add
stc
aaa
cli
js
add
movsb
clc
jo
add
push
add
or
clc
arpl
add
clc
push
add
cmp
cwtl
lcall
add
iret
push
mov
clc
and
add
xor
add
mov
xor
add
clc
ljmp
dec
lcall
sar
add
sbb
clc
dec
adc
add
sar
clc
fidivs
add
fcmovnu
cmp
data16
leave
or
add
or
add
outsb
pop
movsb
clc
pop
test
sar
imul
xchg
or
clc
pop
mov
es
push
add
sub
loopne
lcall
or
out
pop
jecxz
inc
add
cs
jns
lcall
clc
cmc
pop
xchg
inc
add
sar
jp
pusha
add
sub
clc
inc
clc
inc
add
mov
out
iret
jae
add
fsubl
clc
adc
sar
aad
pop
mov
cld
dec
mov
clc
iret
or
clc
sbb
push
jp
clc
jge
aad
clc
fcoms
xor
add
push
add
mov
add
inc
clc
ljmp
clc
enter
inc
add
sahf
fistps
imul
add
in
cmp
clc
push
add
push
mov
dec
mov
mov
add
add
divl
add
push
sar
cli
sbb
out
data16
loopne
js
add
and
cmp
clc
and
add
clc
rclb
add
neg
in
mov
pop
cmp
data16
jb
add
jl
dec
in
xchg
sar
mov
pop
xchg
mov
clc
mov
cmp
mov
xchg
scas
pop
mov
pushf
cmp
add
clc
adc
cmp
int
xchg
sub
xchg
push
ret
dec
jnp
clc
dec
xchg
fs
sbb
add
cld
sub
ds
je
add
mov
add
js
add
jno
add
mov
xor
clc
push
pop
cmp
jne
xchg
ja
mov
fmulp
mov
xor
add
add
add
add
add
and
add
out
shrl
add
test
imul
xchg
pop
clc
cli
iret
push
test
dec
mov
push
scas
scas
push
mov
pusha
add
in
pop
push
clc
aaa
push
jbe
add
adc
add
cmp
incb
add
xor
add
lock
add
xor
fcoml
cltd
js
insb
imul
add
lods
rcrl
add
test
insb
cmpsl
clc
sub
scas
push
add
ja
jmp
clc
cmp
clc
bound
add
sti
arpl
add
add
outsl
dec
pop
mov
sar
add
repnz
or
add
clc
std
fsubrl
clc
push
add
add
sarb
add
stos
rol
clc
xchg
add
add
loop
imul
lods
es
xlat
jbe
adc
add
add
adc
xchg
icebp
mov
add
into
or
fnstsw
push
add
pusha
add
inc
add
jbe
aam
or
out
jno
add
sub
repz
add
mov
clc
jp
mov
and
add
mov
aas
and
add
repz
clc
add
add
ret
add
test
stos
sbb
sub
fnstsw
xor
add
add
xbegin
clc
adc
add
nop
push
clc
xchg
shll
add
shl
mov
add
sbb
jp
add
xchg
mov
mov
mov
or
xchg
sub
add
add
ret
clc
cmp
rcl
popa
add
imul
clc
jnp
add
adc
add
mov
jg
push
add
sub
dec
push
add
lret
clc
inc
clc
cltd
xchg
flds
add
das
mov
add
add
aam
add
cmp
data16
addr16
jno
add
push
pop
outsl
xor
pop
and
add
sar
clc
mov
clc
or
add
pop
test
mov
add
adc
add
or
add
and
add
outsl
inc
add
and
add
sbb
cmpsb
clc
repz
push
je
shlb
add
cmp
clc
dec
movsb
clc
leave
mov
jecxz
mov
fs
movsl
clc
cli
dec
cmp
clc
sar
add
clc
insl
loopne
adc
add
clc
aas
adc
add
fldl
hlt
sbb
add
cltd
jae
add
add
sub
add
inc
clc
lahf
cmp
scas
xchg
aad
mov
add
adc
add
clc
jo
add
sub
push
clc
fstl
mov
xlat
ljmp
mov
or
mov
clc
out
addr16
sbb
mov
out
adc
add
out
push
mov
add
fs
jnp
sbb
clc
mov
or
mov
clc
sub
mov
jb
add
clc
rol
clc
cmp
sub
clc
mov
jno
add
add
push
lcall
clc
icebp
aas
test
add
add
ds
dec
add
ljmp
adc
add
lret
mov
clc
mov
add
push
add
inc
add
jmp
clc
shrl
add
stc
mov
adc
jns
fs
iret
outsl
sar
clc
cmp
cmp
push
jg
insb
scas
outsl
or
cli
xlat
fsts
push
bound
add
stos
pop
pop
fcomi
dec
repz
clc
push
inc
add
jne
sbb
mov
ret
xchg
jp
add
and
stc
jno
add
roll
clc
lods
pop
and
clc
mov
add
mov
inc
clc
sub
push
add
lret
addr16
cmp
call
push
or
jl
add
push
adc
rorl
add
inc
add
cmc
rcll
add
mov
mov
add
cmp
cmp
add
gs
sub
movsl
clc
dec
mov
shlb
shll
add
clc
std
mov
add
clc
test
or
add
es
ds
cmp
clc
pop
mov
push
add
dec
sahf
sbb
xor
add
mov
lcall
clc
ret
cmp
inc
add
or
std
push
notl
add
hlt
lods
jnp
data16
or
clc
loope
push
clc
fwait
push
sub
mov
add
lret
add
lods
cs
scas
test
imul
loope
clc
clc
ss
or
add
clc
mov
test
stc
add
add
add
xor
sar
stos
mov
xor
add
clc
mov
pop
daa
clc
pop
and
lcall
cmp
nop
cli
adc
add
cld
jl
lahf
xor
add
clc
add
add
icebp
enter
clc
jne
ret
clc
cmp
add
fs
sub
add
call
sub
sarl
clc
xor
add
clc
xchg
cmp
clc
xchg
fisubs
add
ret
clc
in
cs
cmp
jns
movsb
clc
loopne
je
xchg
cmp
lods
mov
pop
enter
psubw
jo
add
test
mov
mov
add
and
add
clc
das
sbb
and
add
cmp
clc
jbe
clc
inc
clc
cmp
add
clc
cs
add
pop
jno
add
clc
lret
cmp
stos
cmc
xchg
xbegin
clc
call
and
clc
enter
inc
add
scas
xor
add
iret
scas
dec
cmpsb
clc
ret
clc
aad
add
xor
add
mov
in
inc
clc
dec
clc
jp
push
clc
insb
mov
outsl
sub
clc
es
xchg
jmp
add
sbb
clc
call
add
push
add
xchg
sbb
adc
add
jp
pop
xchg
add
add
clc
adc
add
int3
jo
add
movsl
clc
hlt
mov
dec
cmpsb
clc
xchg
add
into
loopne
sub
add
or
mov
mov
inc
clc
pop
and
add
pushf
and
add
jmp
mov
add
mov
clc
sbb
sub
pop
clc
std
jbe
sbb
jns
add
jecxz
pop
jne
stos
ds
stos
inc
add
lock
sub
add
mov
mov
clc
push
add
sbb
add
xchg
xor
add
push
add
mov
mov
add
jp
imul
add
xchg
xor
clc
cmp
add
outsl
push
outsb
stc
cmp
js
xchg
pop
cmp
clc
xor
clc
xchg
cmp
jl
adc
add
ret
clc
dec
cmp
adc
add
adc
add
roll
add
push
jecxz
jno
add
mov
mov
test
clc
jno
add
add
mov
clc
cmp
dec
mov
add
add
add
scas
cmp
clc
int3
flds
add
loope
ljmp
xlat
jge
inc
clc
xor
add
in
repz
push
add
push
add
jle
add
loop
add
test
cmp
clc
cld
fldcw
clc
jne
clc
cmp
add
cmpsl
clc
sbb
mov
add
jne
cmp
mov
mov
add
mov
xor
add
sub
clc
fsts
sar
icebp
mov
stc
cmc
sub
add
add
cld
pop
pop
or
clc
fs
lea
push
add
jno
add
fcoms
add
pop
mov
daa
clc
incb
clc
sbb
clc
mov
mov
inc
add
cmp
lock
clc
mov
clc
push
add
fwait
imul
inc
clc
adc
add
pop
imul
clc
aad
out
adc
push
add
ret
add
lcall
fildl
clc
and
xor
clc
daa
clc
xchg
lea
jbe
clc
mov
clc
cmp
ror
outsl
add
add
clc
pop
popf
push
dec
pusha
add
stos
fisttpl
jg
clc
cmpsb
clc
push
add
dec
cmp
add
add
icebp
mov
cmp
out
faddl
add
add
mov
in
cmp
stos
lcall
or
clc
mov
cli
arpl
add
clc
push
lcall
add
add
push
cmp
lcall
add
mov
and
add
inc
add
lods
rcr
push
fs
pavgw
jp
add
jnp
and
mov
pop
mov
sahf
inc
clc
mov
mov
insl
adc
add
mull
add
xbegin
mov
dec
sbb
push
inc
clc
dec
mov
add
lret
cmp
mov
add
and
data16
sub
add
inc
clc
xchg
xchg
mov
pop
test
add
add
jmp
sbb
gs
dec
xchg
mov
aas
dec
arpl
add
cwtl
repz
cmpsl
clc
and
push
pop
cld
mov
add
rcrl
dec
inc
add
push
loop
mov
jns
clc
in
sbb
cltd
add
add
add
clc
out
fdivrs
ret
clc
push
add
add
add
std
movsl
clc
cmc
cmp
cmp
jl
dec
lods
cmp
and
jbe
nop
lret
sub
clc
addr16
jmp
dec
inc
add
ror
dec
cwtl
mov
mov
jge
xchg
ret
clc
popf
imul
add
push
and
add
icebp
ss
clc
cmpsl
clc
repz
add
jg
add
mov
adc
nop
mov
stos
mov
clc
cmp
clc
jne
ss
sub
pop
xor
add
cmp
xor
add
clc
scas
jle
clc
stos
insb
mov
pop
or
in
sar
or
cmp
clc
sbb
fidivl
insl
jg
not
dec
and
add
movsl
clc
sbb
ljmp
mov
dec
mov
inc
clc
pop
js
leave
insb
mov
add
add
xor
add
add
add
push
add
fprem1
nop
lcall
cmp
gs
xor
add
mov
clc
fstps
aad
cs
out
mov
clc
aas
icebp
outsl
mov
aas
test
xbegin
add
xchg
cmpsl
clc
adc
or
clc
xbegin
and
add
or
cmp
add
push
add
mov
clc
add
stc
ss
jae
add
fcmovne
outsb
sbb
dec
inc
add
jno
add
cmp
pop
cwtl
cs
cmp
repz
add
stc
test
add
adc
add
fimull
xchg
adc
add
and
add
sub
cmp
inc
clc
clc
jge
mov
add
fldln2
jge
add
add
clc
push
add
xlat
jge
clc
fistl
push
add
fldt
cwtl
pop
imul
or
add
sub
add
push
add
mov
sub
xchg
mov
clc
cmp
clc
push
clc
adc
add
sbb
add
add
adc
add
add
imul
mov
add
inc
add
cmp
clc
jg
scas
cmp
inc
add
fs
push
fcompl
and
add
clc
cmp
clc
xchg
add
add
ljmp
ja
or
in
push
add
add
icebp
pop
mov
sub
clc
push
pop
push
add
enter
mov
add
pushf
insl
clc
data16
dec
mov
add
outsb
out
ret
clc
cmp
add
jb
add
lea
dec
cmp
xor
add
lock
add
mov
xchg
popf
inc
add
fnstcw
ret
shlb
clc
mov
xorps
cmp
lock
add
je
clc
lret
ja
xchg
in
das
cmp
or
in
mov
dec
cli
cwtl
xchg
mov
add
sub
jge
clc
outsl
ret
clc
sti
sub
popa
add
fsubl
add
mov
enter
adc
add
add
clc
jnp
repnz
lahf
sbb
mov
and
xbegin
mov
clc
out
cmp
cmp
add
add
pop
sahf
add
into
mov
and
add
cmp
add
jbe
push
movsb
clc
pop
jbe
mov
cltd
in
sahf
push
sbb
imul
cs
push
pushf
lods
jmp
clc
mov
lods
movsl
clc
cld
cld
cmp
shrl
add
push
pop
xor
add
cmpsl
clc
hlt
sbb
leave
pusha
add
in
mov
adc
add
push
pop
or
clc
ja
add
and
add
pop
out
jo
add
add
je
pop
leave
sbb
add
call
out
mov
add
dec
or
clc
push
add
sbb
sub
test
das
jmp
clc
outsb
divps
add
sbb
add
adc
aas
out
fcom
stc
data16
mov
test
and
add
pop
cmp
lret
je
clc
jnp
add
inc
add
repz
add
clc
push
in
scas
pop
scas
dec
mov
dec
or
clc
fidivrs
clc
adc
add
adc
add
add
mov
addr16
ret
clc
enter
sub
clc
jb
add
into
push
aam
clc
in
dec
add
add
add
lcall
add
popf
fwait
pop
test
jnp
imul
inc
clc
jp
clc
push
ror
outsb
mov
clc
rol
clc
xchg
push
pusha
add
pop
ficomps
clc
sbb
clc
cmpsb
clc
mov
cmp
xchg
push
lods
jge
cmp
mov
sbb
xor
add
test
or
in
ljmp
mov
pop
sbb
clc
daa
clc
scas
push
clc
js
clc
daa
clc
shrl
cmp
add
xor
add
xchg
addr16
imull
push
fwait
dec
out
stos
cmp
add
pushf
mov
aam
add
pushf
pop
cld
arpl
add
daa
clc
add
sbb
clc
dec
std
mov
mov
loopne
bound
add
scas
cmp
imul
add
dec
inc
add
scas
dec
mov
clc
jmp
add
repz
push
imul
add
inc
add
mov
pop
mov
clc
xor
add
clc
enter
add
jne
cmp
outsl
xabort
clc
popf
insl
sub
add
cmp
pop
xor
add
jbe
sub
inc
clc
data16
decb
fadd
clc
dec
lods
in
je
add
sar
aam
clc
jne
jl
das
pop
fs
stos
mov
dec
jno
add
add
xchg
jae
add
add
aad
sar
clc
cltd
add
add
sahf
inc
clc
pop
sar
clc
nop
repnz
dec
lock
mov
xchg
or
clc
push
xchg
cltd
movsb
clc
popa
add
ficompl
fst
mov
xlat
push
inc
clc
or
clc
mov
xchg
pop
add
add
pop
sarl
clc
cmp
imul
out
push
adc
add
clc
pop
jne
add
fistpl
aaa
xchg
add
add
insl
adc
add
clc
in
stos
aas
testl
pop
pusha
add
call
mov
and
add
ja
loop
xabort
es
cmc
inc
add
das
cmp
mov
aam
jnp
clc
enter
add
clc
adc
sbb
clc
push
clc
shrb
dec
and
add
add
clc
xchg
fistps
lcall
clc
mov
clc
jmp
in
loope
and
add
add
cmc
lahf
popl
add
test
jmp
ret
push
add
hlt
or
imul
add
clc
scas
stc
lods
and
clc
std
dec
stos
testl
xchg
lea
clc
and
cmp
jle
clc
jb
add
add
nop
adc
mov
fmul
inc
add
xchg
sti
jnp
cmpsb
clc
inc
clc
mov
mov
clc
push
xchg
jg
add
add
dec
jecxz
mov
dec
jo
add
clc
outsb
xchg
jo
add
es
pop
add
fisttpll
jl
cmc
jge
mov
pop
lods
mov
add
into
pop
mov
int3
jno
add
inc
clc
out
cmp
clc
xchg
rolb
add
repnz
jbe
clc
loop
sub
add
enter
scas
mov
stos
leave
test
add
aad
clc
jecxz
test
cmp
or
lret
cmp
sub
mov
push
add
xchg
xor
clc
aas
loop
and
add
clc
clc
repnz
push
aam
clc
inc
clc
jl
clc
lret
repnz
fstps
clc
scas
loopne
jne
and
mov
insb
push
mov
mov
nop
das
clc
cwtl
pop
sbb
push
out
testb
xor
add
mov
or
aaa
inc
clc
mov
inc
clc
jmp
sub
cmc
iret
mov
sub
add
add
cmp
cmp
add
test
daa
clc
testb
pop
cmp
add
in
pop
sbb
out
mov
add
out
inc
add
pusha
add
in
dec
ret
clc
lods
int3
ficoml
add
and
imull
add
push
out
mov
cmp
push
add
out
out
inc
clc
xchg
cmp
add
sub
clc
sar
add
inc
add
mov
xor
add
cmpsl
clc
jns
testb
sti
push
jnp
add
add
loopne
mov
cmp
clc
cmp
pop
cld
push
jno
add
push
add
xor
add
mov
ret
clc
adc
add
ja
sbb
jae
add
clc
fnsave
add
mov
fisttps
mov
pop
popa
add
xchg
lret
addr16
cmc
push
jne
dec
jae
add
out
cmp
clc
imul
push
add
inc
clc
push
push
in
pop
jb
add
pop
sbb
mov
xor
add
clc
in
cmp
cmp
clc
mov
movsb
clc
ja
insl
dec
ret
clc
sub
inc
add
mov
adc
test
loope
adc
add
fisubl
clc
mov
in
pop
inc
add
pop
mov
xchg
cli
clc
cmpsb
clc
sub
add
pop
flds
clc
push
jbe
lret
or
add
clc
mov
out
cs
and
cmp
xchg
outsl
jg
pop
gs
add
add
add
pushf
inc
add
enter
clc
push
clc
dec
add
add
clc
in
sbb
cmp
add
bnd
xchg
jbe
cmp
xchg
jge
clc
cmp
add
ret
clc
test
stos
inc
clc
mov
add
idivl
mov
cmp
data16
push
and
add
clc
mov
aad
clc
cwtl
inc
add
lahf
xor
add
cmp
hlt
mov
sub
add
fadds
add
clc
mov
mov
ret
add
xor
add
or
pop
clc
mov
and
add
fsubrl
xchg
fdivs
xchg
cmp
pusha
add
or
sub
lcall
add
add
jne
pop
fwait
mov
add
lock
test
clc
mov
clc
repnz
inc
add
mov
xchg
je
xor
add
fs
xchg
insb
cmp
cmc
dec
sub
add
cmp
jo
add
and
add
sub
xchg
push
fisttps
add
ss
clc
scas
and
add
addr16
jmp
outsl
pop
ret
clc
dec
push
add
arpl
add
imul
inc
clc
lcall
aad
das
test
clc
add
add
cld
mov
cmpsb
clc
clc
mov
clc
stos
aaa
dec
xchg
push
cmp
clc
cmp
add
sbb
or
jp
or
clc
in
inc
clc
jecxz
jae
add
sbb
mov
add
dec
ds
sbb
clc
or
add
daa
clc
lret
fcomp
mov
add
push
notl
add
clc
sar
fdiv
fbstp
cmc
mov
add
xor
add
cmp
add
add
pop
arpl
add
into
iret
icebp
stos
jle
pushf
mov
cwtl
xchg
js
add
cmpsb
clc
lods
and
add
mov
sahf
ja
clc
in
lea
dec
add
add
add
clc
mov
clc
gs
dec
faddl
add
loope
cld
into
mov
add
jae
add
sbb
clc
inc
add
jmp
xchg
add
add
lret
add
mov
mov
push
mov
or
mov
dec
jno
add
add
sub
xchg
sbb
xchg
cltd
lock
add
add
and
pop
and
add
clc
cmp
inc
clc
in
enter
pop
pop
clc
stc
in
mov
jle
push
add
cld
jo
add
cld
inc
add
mov
mov
dec
adc
add
add
adc
add
add
ja
testl
cmp
int
fnsave
push
lahf
nop
in
jo
add
add
mov
pop
or
sar
add
sub
pop
fwait
jecxz
pop
xchg
jno
add
push
add
data16
cltd
adc
add
aam
aad
pop
sbb
lea
push
clc
mov
ljmp
jnp
add
pop
clc
and
add
mov
aad
dec
sub
add
dec
dec
testb
clc
sbb
scas
stc
ds
dec
outsb
jno
add
and
add
add
fiadds
fwait
popf
outsl
jae
add
mov
add
lea
add
rcll
clc
jl
pop
iret
jae
add
lock
clc
pop
or
test
mov
clc
mov
xchg
mov
mov
xlat
sar
jecxz
adc
add
add
notl
mov
mov
jmp
cli
xchg
stos
xor
add
xchg
insb
and
add
sarb
inc
add
and
pop
in
in
inc
add
inc
clc
pop
cmpsl
clc
pop
push
jae
add
clc
call
dec
aas
mov
clc
sti
movsb
clc
test
mov
je
clc
js
pop
into
fidivrs
test
mov
loop
imul
clc
cmp
inc
add
sti
xchg
adc
add
imulb
clc
and
add
clc
xchg
loop
repnz
ret
add
je
clc
pop
cmp
clc
cltd
mov
push
adc
add
repz
push
int3
adc
add
add
cmp
adc
add
clc
imul
pushf
mov
push
sar
clc
data16
test
shr
xor
add
clc
in
aad
pushf
add
add
ljmp
fsubrs
mov
clc
xchg
xchg
test
xor
add
xchg
mov
clc
repnz
rorl
clc
nop
enter
sahf
fdivrs
js
or
add
aas
push
ds
push
clc
das
imul
clc
cmc
mov
add
and
add
add
jne
add
jbe
add
je
std
aad
ljmp
adc
add
js
clc
and
add
sub
clc
stos
js
clc
jns
loop
dec
pushf
movsb
clc
jmp
clc
xor
add
cltd
pop
lods
test
movsb
clc
adc
add
inc
add
push
add
add
mov
inc
clc
mov
mov
xor
add
out
cmpsl
clc
test
sar
fwait
add
mov
clc
jecxz
xlat
mov
clc
or
outsl
fs
das
stos
into
repnz
fs
inc
clc
xbegin
add
jo
add
push
add
cmpsl
clc
ljmp
xchg
xchg
mov
ret
mov
add
pop
scas
push
xchg
addr16
xchg
jns
aam
cmp
add
loop
add
add
insl
or
xchg
and
push
add
mov
stos
pop
mov
add
mov
inc
clc
xor
add
sti
add
stos
out
pop
fisttpll
lcall
and
add
fistpll
inc
clc
stos
mov
clc
incl
test
xor
add
addr16
jbe
xchg
and
clc
mov
cmp
sub
fmul
add
add
fs
cmp
mov
arpl
add
add
fdivs
add
clc
mov
clc
out
popa
add
mov
adc
add
lret
stc
sub
or
xor
add
sahf
mov
lea
add
std
lret
outsb
and
add
add
jns
movzbl
clc
pop
mov
add
iret
sbb
clc
xchg
outsl
rolb
add
or
xlat
adc
test
stc
xchg
fldl
clc
es
dec
xchg
cmp
cs
ja
or
push
add
cmp
vcomiss
add
jg
clc
mov
out
mov
sub
pop
add
add
mov
pop
clc
fidivs
add
and
add
mov
ja
clc
ret
clc
sar
shlb
add
mov
clc
add
lock
pop
mov
dec
ja
clc
mov
add
add
add
sub
add
movsl
clc
cmp
add
mov
adc
add
xchg
sub
stos
sbb
push
sub
clc
sbb
xchg
dec
test
clc
bound
add
icebp
repz
add
pop
jg
jnp
add
popa
add
pushf
mov
outsl
xchg
mov
add
inc
add
mov
clc
pop
test
jmp
popf
loope
ja
clc
pop
cld
xor
add
clc
push
clc
fs
ja
clc
idivb
jno
add
add
aam
dec
add
add
sahf
stc
stos
int3
cltd
popa
add
loope
add
add
add
movsb
clc
maxps
sub
insl
mov
sbb
into
mov
push
mov
xchg
adc
add
add
clc
iret
mov
out
xor
mov
clc
test
mov
clc
mov
imul
cmp
mov
xbegin
inc
clc
fdivr
aad
mov
ss
xchg
in
sti
clc
rclb
add
xbegin
test
clc
push
cmp
clc
lea
aaa
sub
sub
stc
fs
fidivl
clc
pop
cmp
push
adc
add
mov
add
cmp
je
xchg
jb
add
cmc
in
insl
lea
add
add
sbb
add
decb
inc
add
sbb
sbb
add
add
pop
loop
cmpsb
clc
pop
xor
add
clc
adc
bound
add
add
loopne
test
sbb
sub
clc
incb
clc
cmc
mov
xchg
mov
clc
cmp
add
clc
ljmp
add
add
in
cmp
dec
pop
neg
mov
xchg
repnz
pop
or
jae
add
add
loopne
sar
scas
decl
pop
mov
jl
add
jnp
test
rcr
lock
mull
outsb
add
add
cmp
xor
jg
xor
add
clc
adc
add
clc
and
add
add
clc
enter
bound
add
pop
mov
clc
mov
mov
add
out
mov
popf
jg
add
add
clc
pop
icebp
cmc
sub
add
sbb
es
and
add
stc
clc
xchg
mov
add
in
in
dec
data16
nop
call
jbe
and
mov
add
add
add
clc
fsts
mov
rcl
fldenv
add
bound
add
cmp
sbb
inc
clc
sub
data16
push
addr16
pop
pop
xchg
sbb
add
cmpsb
clc
lock
inc
add
sub
clc
sbb
push
inc
clc
data16
dec
sub
push
mov
xor
sub
clc
inc
add
mov
addr16
ja
stos
xchg
cmp
cmpsl
clc
iret
xor
add
fsubl
add
je
clc
js
cmp
clc
sar
add
adc
cmp
mov
add
cld
int
add
xchg
mov
out
or
jmp
clc
dec
outsb
sti
jb
add
je
clc
scas
push
clc
sbb
pop
xor
add
popf
stos
xor
add
nop
push
lock
lret
sub
clc
aaa
mov
data16
inc
add
cmp
clc
scas
ja
xchg
xabort
jo
add
es
inc
add
cmpsb
clc
mov
add
add
js
clc
mov
inc
add
aad
mov
out
jb
add
filds
sub
or
clc
stc
xchg
cmp
xor
add
clc
js
or
clc
mov
or
cmp
lods
jp
xbegin
sbb
out
test
mov
jmp
ljmp
popf
xor
add
lock
clc
cli
ja
cmp
clc
dec
mov
call
cmp
add
inc
add
push
cwtl
idiv
mov
pop
inc
add
clc
dec
mov
sub
clc
fs
aas
xchg
daa
clc
popa
add
or
mov
stc
xor
add
inc
add
mov
inc
add
xor
add
xchg
push
add
add
jno
add
clc
test
repz
add
and
add
add
cmp
or
into
sbb
ja
xchg
lea
pop
outsb
aam
rcll
clc
cld
sub
add
xor
add
clc
jmp
fidivl
add
call
outsl
xlat
mov
out
inc
add
clc
pop
clc
lock
inc
add
dec
jle
clc
add
add
hlt
inc
clc
add
add
add
aaa
fistpll
loopne
pusha
add
pop
out
call
pop
dec
sub
inc
clc
mov
clc
add
add
clc
lods
pop
push
in
push
add
cmp
add
mov
push
out
mov
add
popa
add
cltd
notb
aad
mov
add
clc
stos
testb
and
add
dec
sbb
jno
add
nop
jp
test
int3
pop
mov
data16
mov
add
jecxz
mov
add
fsub
clc
mov
clc
sbb
jg
add
mov
add
arpl
add
inc
add
jge
sbb
popa
add
and
ds
fcmovnu
lret
mov
mov
add
add
add
add
push
pop
cmc
sbb
clc
dec
adc
add
clc
jnp
idivl
filds
add
int3
shll
pushf
sub
mov
clc
bound
add
clc
icebp
pop
in
cmp
push
leave
inc
clc
sub
xchg
outsl
out
bound
add
add
add
fcomps
or
ret
clc
dec
sbb
dec
pop
adc
add
add
add
flds
cmpsb
clc
inc
add
xor
add
clc
and
es
mov
ja
add
fnstsw
int3
lock
fcmovne
daa
clc
xchg
imul
sbb
mov
add
xchg
imul
lcall
clc
mov
cmpsl
clc
leave
inc
clc
sti
push
clc
inc
clc
xor
cmp
xor
add
add
add
push
push
iret
push
mov
push
add
sahf
or
add
jle
pop
adc
add
clc
jb
add
iret
mov
add
sbb
lock
mov
clc
addr16
popf
in
jne
clc
aam
mov
clc
lcall
clc
mov
pop
clc
xchg
pop
cltd
out
dec
pop
add
clc
and
add
clc
lahf
addr16
pushf
scas
mov
adc
add
inc
add
cltd
cmp
gs
dec
push
xor
pop
push
jecxz
push
inc
add
movsb
clc
es
bound
add
jmp
add
push
clc
clc
add
add
mov
add
sbb
add
push
bound
add
clc
add
add
jge
add
jnp
ret
jl
jbe
jle
sar
test
jmp
and
add
dec
dec
int
mov
add
clc
inc
add
insb
iret
push
testl
add
xlat
inc
clc
aaa
adc
clc
and
add
jmp
xchg
mov
add
add
cltd
pop
fisubl
add
cmp
lods
shll
popa
add
into
data16
cmp
add
fwait
push
add
jecxz
xchg
push
icebp
push
clc
mov
imul
mov
sbb
mov
clc
dec
pushf
or
clc
mov
nop
adc
add
add
add
adc
add
jo
add
fistpl
and
clc
xor
add
add
enter
inc
clc
sbb
add
sar
add
push
add
insl
cmp
ja
add
sahf
cmp
add
add
notl
add
pop
mov
jne
clc
push
cld
das
and
add
add
cmp
push
add
sub
clc
cmp
call
jae
add
add
add
sar
incb
add
adc
add
mov
pop
add
es
fs
push
push
add
jnp
mov
outsb
out
je
add
in
sbb
add
clc
nop
push
or
or
aad
data16
jecxz
cmp
aad
inc
clc
jb
add
or
clc
mov
add
inc
clc
test
add
arpl
add
add
mov
int3
inc
add
je
sar
movsl
clc
mov
push
sbb
push
mov
clc
push
add
ficoml
add
mov
sbb
test
inc
add
lret
data16
nop
add
add
lods
scas
fwait
sbb
pushf
sar
clc
push
add
inc
add
cmp
sub
rcr
xchg
in
in
addr16
vunpcklps
add
ds
movsb
clc
inc
clc
mov
add
js
jge
add
push
sbb
sub
push
cmp
das
jmp
es
fs
jmp
xor
and
add
pop
add
add
add
ss
add
pop
iret
shll
js
add
or
jne
clc
or
pop
and
mov
clc
ds
dec
adc
add
and
add
add
clc
incl
add
dec
js
clc
test
push
sub
fs
repz
mov
in
mov
cmp
and
add
push
add
out
pop
push
fstps
js
jne
fwait
dec
int
add
dec
cs
mov
add
add
add
cmpsl
clc
xchg
cmp
or
add
add
fs
lret
aaa
idivl
or
clc
and
add
test
sub
add
dec
nop
sub
clc
jle
jne
aam
clc
data16
jns
fs
sahf
xchg
adc
add
sub
mov
add
sti
mov
xchg
xchg
stc
and
add
add
add
adc
add
add
inc
clc
lcall
cmp
cmp
clc
ss
rclb
add
clc
fs
movsb
clc
mov
add
or
or
add
and
insb
insb
sti
ja
sbb
lods
xor
add
add
sub
pop
testl
add
jo
add
clc
fdivrl
sbb
jb
add
clc
xchg
xchg
sar
add
pop
js
imull
clc
add
add
fcompl
push
cmpsl
clc
mov
dec
adc
xchg
mov
call
clc
jbe
mov
dec
fsubrs
or
xchg
ret
clc
lock
je
mov
jmp
popa
add
fdivrp
shll
mov
xor
add
stos
pop
out
xchg
data16
insl
rcrl
clc
mov
xbegin
mov
call
jl
mov
mov
inc
clc
pop
xor
add
push
imul
add
or
add
cli
sahf
jecxz
pusha
add
pop
rolb
leave
fwait
inc
add
pushf
lahf
int3
test
or
aaa
je
add
xchg
mov
clc
jno
add
mov
dec
push
es
mov
lods
cmpsb
clc
mov
data16
jns
cld
aaa
stos
sub
mov
rcl
mov
xlat
or
add
jl
xchg
cld
pop
pop
mov
xor
cmpsl
clc
mov
clc
sbb
into
jle
inc
clc
mov
sar
add
jns
add
sahf
jo
add
push
clc
add
mov
add
or
jo
add
clc
loop
push
sarl
or
js
add
lret
clc
jo
add
in
and
add
clc
cmpsl
clc
push
add
mov
add
pop
jns
cmp
clc
cmpsl
clc
dec
jmp
fcoml
jl
clc
and
add
pop
test
cmp
cmp
add
and
test
cmp
clc
and
add
testb
insb
push
add
xchg
int3
test
jne
int
clc
jg
jns
and
mov
and
sub
clc
js
mov
clc
or
xchg
mov
rolb
add
jmp
fcoml
dec
add
xor
add
clc
inc
clc
dec
call
clc
loop
es
out
push
add
sbb
add
or
clc
mov
clc
sbb
add
mov
clc
jl
mov
xor
add
mov
clc
push
lahf
lods
and
in
das
push
int3
add
add
enter
xchg
cmc
lahf
cmp
xchg
popa
add
not
cltd
cmp
add
test
clc
fidivl
dec
pushf
xlat
sub
add
cltd
and
add
mov
sbb
add
sub
cwtl
push
add
xchg
dec
push
test
pop
loop
push
sbb
call
jb
add
clc
push
mov
clc
mov
add
inc
clc
add
mov
sub
dec
pop
xlat
cmp
loope
push
in
sub
stos
and
sahf
jmp
clc
movsb
clc
lret
clc
fnsave
pop
dec
cli
stos
data16
out
fs
call
add
push
add
or
ret
or
insl
xor
data16
cmpsl
clc
jne
or
enter
clc
pop
in
lods
call
cmp
mov
out
cmp
clc
sbb
push
add
push
mov
add
inc
add
sub
mov
clc
insl
push
loope
sub
pcmpgtd
push
clc
push
jge
clc
loop
lea
cmp
add
jb
add
xchg
in
mov
push
clc
fnstsw
mov
push
xchg
stc
fadd
clc
jecxz
enter
aam
outsb
sub
jae
add
add
pop
int3
cmc
repz
inc
add
cmpsl
clc
or
jl
clc
sar
clc
xchg
xchg
jbe
mov
clc
insl
mov
lods
jns
xchg
fistps
out
aam
scas
into
stc
hlt
xor
add
push
clc
je
cli
loop
add
add
sti
mov
cmp
mov
add
cmpsb
clc
repz
mov
clc
fcmovbe
sahf
jge
ret
clc
xor
add
add
xor
add
and
add
dec
out
notl
aad
clc
or
loope
cmpsl
clc
sub
inc
add
pop
sbb
clc
mov
clc
xor
add
mov
je
push
add
push
clc
sub
add
ja
pop
mov
mulb
mov
mov
nop
cmpsl
clc
fwait
in
cltd
fs
jno
add
imul
lods
dec
cltd
cmp
clc
or
outsl
ljmp
fs
ficomps
add
add
sti
leave
mov
add
sub
inc
clc
arpl
add
push
add
movsl
clc
jge
xchg
xchg
and
sbb
add
add
add
add
pop
sbb
jg
clc
push
or
mov
xchg
test
mov
clc
jg
faddl
add
clc
inc
clc
iret
jne
clc
dec
adc
add
out
or
out
mov
inc
add
xor
add
adc
add
lahf
xlat
cld
scas
rcr
mov
cmp
xchg
ret
pop
or
add
add
add
xchg
dec
xchg
sbb
addr16
sub
int
dec
and
add
add
add
inc
add
sub
add
add
stc
xchg
jbe
clc
es
dec
test
test
std
and
add
push
add
fbld
clc
nop
lea
scas
sub
mov
add
sbb
xbegin
add
mov
clc
pop
pop
lock
scas
loopne
dec
bound
add
add
popa
add
push
clc
jno
add
xbegin
jnp
add
add
clc
mov
and
add
clc
clc
loope
je
clc
mov
mov
cmp
ss
nop
adc
add
xor
or
shrb
add
push
dec
data16
xchg
int
add
inc
add
xchg
ja
in
pop
pop
push
add
bound
add
inc
clc
cmp
stc
xor
add
add
add
ja
cmp
clc
push
out
mov
pop
movsb
clc
imul
add
and
add
mov
cmp
imul
lret
sub
ficoms
clc
es
notl
clc
mov
cmp
add
add
add
decl
sub
fldenv
mov
clc
xchg
jecxz
sar
in
mov
mov
inc
add
inc
add
fsubrs
sbb
mov
add
lahf
data16
and
clc
lret
clc
cmp
pop
clc
sbb
clc
adc
add
sub
jbe
sub
aaa
adc
clc
push
or
clc
cwtl
mov
lcall
scas
cmpsl
clc
mov
add
sub
add
add
jb
add
add
add
clc
pop
xor
add
clc
jp
clc
mov
mov
test
jno
add
sbb
lods
add
add
sub
clc
pop
mov
stos
pop
xchg
sar
xor
shrb
add
test
dec
popf
hlt
mov
add
push
add
cmp
add
inc
add
nop
ja
push
jmp
clc
cmp
fs
sar
xchg
stos
mov
out
test
push
clc
sar
push
cmc
mov
cs
clc
jmp
mov
ja
cmc
push
and
add
push
push
jle
leave
sbb
ficompl
clc
clc
xor
add
add
mull
add
and
add
xor
add
fcmovnu
sub
es
sar
out
negl
inc
clc
mov
fidivl
and
add
clc
mov
adc
add
clc
cmp
sub
scas
test
dec
aam
fiadds
clc
out
push
clc
daa
clc
call
clc
mov
xor
add
xchg
cmpsb
clc
lret
cmpsb
clc
inc
add
sbb
sub
clc
xchg
jmp
add
inc
clc
sbb
and
add
sbb
pusha
add
push
add
das
mov
add
adc
add
adc
add
clc
or
testb
je
insl
fdivrs
sti
pop
ret
clc
lea
add
add
add
out
push
xor
add
mov
sub
imul
and
add
sar
mov
clc
mov
pop
rcr
enter
pop
test
bound
add
clc
jl
dec
js
add
aas
clc
loopne
cmp
fs
sub
cmc
sbb
cmp
cmpsb
clc
out
lods
das
imul
push
lods
add
add
test
pop
xchg
xchg
scas
lahf
sub
shl
xor
clc
cmp
ss
sti
cld
sbb
add
and
clc
call
das
jns
mov
add
add
aam
jmp
hlt
out
inc
clc
sbb
mov
dec
in
cmp
in
fwait
pop
popa
add
mov
int3
and
call
addr16
stc
inc
clc
jo
add
iret
pop
or
sarl
sar
xor
add
add
mov
out
popa
add
push
add
aad
adc
add
add
jecxz
insb
jg
clc
cmpsl
clc
mov
es
ret
push
xor
sub
clc
mov
push
and
add
lcall
loopne
repnz
push
xlat
ret
clc
stos
pop
clc
inc
add
mov
mov
cmp
clc
shrb
add
add
movsb
clc
scas
lea
clc
cwtl
enter
pop
mov
add
xchg
add
add
add
xbegin
push
cltd
inc
clc
xchg
xor
add
cmpsb
clc
rorl
cmpsl
clc
mov
int
add
bound
add
sbb
js
sar
cmpsl
clc
adc
add
clc
mov
data16
clc
cmp
movsl
clc
pushf
nop
and
add
add
test
mov
jecxz
stc
rcr
pop
push
add
pushf
in
mov
or
outsl
jl
call
clc
inc
clc
clc
mov
clc
mov
clc
ja
mov
add
mov
add
add
lea
clc
and
add
push
xor
inc
add
cmp
cmp
aad
clc
popa
add
scas
popa
add
pusha
add
xchg
jl
add
int
and
add
xor
adc
add
add
add
rcrl
out
push
mov
add
push
mov
add
pop
imul
inc
add
fdivr
pop
pshufw
bound
add
mov
cmp
cld
aaa
out
imul
add
cmp
js
mov
fwait
xchg
jnp
cmc
je
lahf
mov
push
add
pop
ror
push
inc
add
loopne
loopne
lret
mov
jl
xchg
movsl
clc
xchg
xor
sbb
clc
add
add
bound
add
or
clc
in
mov
clc
pop
scas
pop
mov
jmp
sub
ljmp
repnz
clc
out
dec
lea
add
add
lret
push
jl
aam
add
cmp
add
and
add
add
stc
lock
mov
sbb
jne
mov
int3
mov
clc
or
data16
add
clc
adc
add
clc
pop
jl
add
cmp
test
push
jne
add
xor
add
push
clc
ret
push
mov
scas
clc
sub
add
scas
rcll
sbb
push
and
clc
mov
add
and
das
outsb
pop
in
xabort
add
adc
add
clc
cmpsl
clc
add
add
popa
add
mov
jne
cwtl
mov
imul
clc
jle
clc
mov
aas
xchg
fbstp
add
fistl
add
clc
xor
add
cmp
jge
test
clc
cmc
xbegin
data16
fnstcw
sub
sbb
sub
clc
fwait
outsl
push
add
mov
clc
cltd
test
cmp
add
adc
add
add
je
clc
xabort
clc
pop
cmp
or
clc
test
fdivrs
shll
fwait
or
clc
adc
xor
loopne
mov
jmp
pop
and
xor
add
push
sub
aad
cmp
adc
add
xchg
sahf
dec
sbb
out
push
in
cmp
inc
clc
mov
out
iret
mov
add
cmp
lcall
clc
int
push
mov
add
cld
or
out
mov
clc
push
dec
jmp
add
cmc
inc
add
pushf
cltd
aas
jg
add
fwait
adc
add
xchg
jg
dec
pop
jg
mov
add
xbegin
cmpsb
clc
icebp
stos
xchg
clc
sbb
clc
adc
clc
repnz
or
dec
xchg
lock
sarb
pop
inc
add
int3
sahf
and
add
jb
add
fsubl
add
jl
out
add
add
clc
popf
cltd
mov
add
ds
movsb
clc
and
dec
mov
cmp
inc
add
int
int3
dec
ja
test
aam
clc
mov
lock
clc
and
add
pop
push
and
rolb
inc
add
sbb
stos
lods
int
clc
xchg
cmpsl
clc
sbb
add
or
clc
jl
mov
and
add
clc
xor
add
cmp
add
jae
add
pop
lcall
xor
add
push
add
add
add
in
loop
dec
push
add
adc
inc
clc
inc
add
xor
out
lock
test
sarb
dec
adc
add
or
gs
cs
inc
clc
mov
pop
pop
cmp
add
loope
sbb
cmp
clc
push
outsl
hlt
out
pop
xor
pop
jnp
clc
mov
add
or
pushf
pop
clc
shl
repz
dec
mov
jo
add
add
mov
imul
out
cmpsl
clc
push
add
sub
clc
mov
stos
add
add
clc
in
loopne
pop
clc
jecxz
outsl
dec
jns
sbb
cli
outsb
fistpl
clc
push
add
add
and
add
in
mov
clc
inc
clc
mov
ficoms
add
sahf
cmp
pop
test
or
or
add
loopne
and
mov
push
add
xlat
inc
add
call
add
cmc
adc
add
add
add
cmp
add
or
xor
add
clc
sar
clc
test
xchg
xchg
addr16
jle
mov
add
add
pop
add
mov
cld
mov
jmp
clc
xbegin
ret
clc
sahf
jp
add
clc
gs
rorl
insb
mov
dec
popa
add
push
jno
add
dec
dec
add
xchg
repz
add
inc
clc
xchg
and
int3
hlt
sub
das
idivb
add
movsl
clc
and
add
mov
pop
in
stos
sub
insb
xbegin
cmc
test
clc
clc
mov
add
pop
inc
clc
cmp
icebp
mov
clc
in
int
shll
add
into
jae
add
inc
clc
cmpsl
clc
aam
test
adc
add
lret
adc
add
adc
add
clc
mov
xbegin
add
ljmp
inc
add
sti
cmp
aad
out
pop
insl
dec
inc
add
dec
xchg
sub
clc
cmp
add
rolb
cmp
sbb
add
add
test
push
add
lods
push
pop
std
mov
add
sahf
shll
add
test
fdivrp
jp
clc
gs
sti
dec
aas
push
aas
aaa
test
int3
lret
xlat
jecxz
jbe
add
mov
jb
add
add
jns
stos
test
das
push
and
adc
add
clc
mov
mov
imul
ret
clc
dec
mov
add
xor
add
pop
es
ret
clc
dec
leave
ja
cld
mov
sbb
jmp
cmp
add
or
out
pop
clc
mov
add
arpl
add
clc
mov
xor
add
sar
ss
xor
add
jne,pt
clc
packssdw
enter
fidivl
clc
sub
clc
int
mov
push
jle
jbe
and
es
mov
clc
sub
stos
repz
lcall
in
and
add
jmp
arpl
add
clc
pusha
add
clc
je
int
dec
enter
clc
lock
clc
sbb
clc
pop
pop
or
mov
clc
cmpsb
clc
lods
xor
add
dec
dec
mov
sar
or
pop
lret
gs
das
data16
adc
sbb
adc
add
fdivr
fadds
add
das
jp
add
add
add
fcmovne
cmp
xchg
cmp
shll
add
daa
clc
outsl
and
add
sar
cmp
je
add
pop
mov
addr16
push
add
jno
add
mov
scas
scas
xlat
js
clc
cmp
fidivrl
movsl
clc
or
clc
pop
sbb
push
cmc
mov
clc
test
out
movsb
clc
sbb
repz
mov
add
cmp
add
xchg
lods
not
cmp
add
jg
cmpsl
clc
cmc
aad
add
dec
push
add
jmp
or
add
clc
dec
sahf
aad
mov
imul
fsts
ljmp
xchg
xchg
mov
clc
clc
mov
pop
xchg
xor
add
es
sbb
stos
loopne
loop
push
inc
clc
dec
jo
add
cmp
pushf
lock
adc
ret
push
pop
scas
clc
aaa
xor
clc
jo
add
add
inc
add
xor
add
add
jge
in
dec
push
mov
add
lods
sub
ja
adc
add
fmull
insb
mov
adc
add
into
in
push
faddp
clc
jl
clc
sahf
dec
ficoml
clc
xchg
xchg
push
cltd
and
add
lret
adc
add
aas
sar
fmul
fwait
std
dec
movsb
clc
in
add
add
xchg
popf
mov
clc
repnz
clc
ret
pop
sbb
add
shrb
or
add
icebp
into
and
mov
divl
or
clc
scas
jge
scas
or
je
mov
push
sarl
add
mov
or
adc
add
movsl
clc
in
mov
pop
das
xchg
or
clc
sub
pusha
add
ret
mov
arpl
add
cmpsl
clc
sub
imul
ret
clc
mov
add
adc
add
ret
clc
icebp
push
add
inc
clc
push
push
je
mov
and
add
add
insb
nop
in
lods
and
add
and
add
clc
pop
clc
fucomi
pop
dec
xchg
mov
fsub
clc
xchg
mov
loope
stos
mov
cmp
adc
add
add
iret
adc
add
clc
mov
jne
daa
clc
data16
mov
lret
fimull
add
clc
aas
jae
add
add
add
xor
testb
call
inc
add
cmp
push
add
ret
sahf
loope
repnz
mov
clc
mov
clc
lret
addr16
shrd
test
clc
ret
clc
addr16
xchg
ss
rorb
cmp
and
add
clc
imul
out
cli
data16
test
daa
clc
add
add
es
outsl
mov
int
xbegin
mov
sub
rcll
clc
jmp
sub
add
clc
icebp
stos
and
jae
add
xchg
xor
add
lock
mov
xor
add
push
clc
bound
add
clc
inc
add
jl
sti
xabort
jae
add
add
pop
aam
clc
adc
add
cwtl
popa
add
mov
scas
jmp
cmp
movsb
clc
inc
clc
jle
stos
inc
clc
rolb
jo
add
add
ja
add
pop
fiadds
add
xor
add
mov
xchg
add
mov
and
lret
pop
jl
hlt
lods
xchg
imul
add
js
clc
cs
mov
nop
cmp
push
idivb
mov
mov
frstor
clc
mov
push
shlb
add
xabort
imul
add
pop
cs
clc
xor
iret
gs
fldl
add
or
repnz
mov
scas
ret
clc
shrb
adc
add
clc
pusha
add
jns
add
mov
xchg
adc
add
push
sub
add
sub
add
clc
in
test
jb
add
in
lea
cmpsl
clc
add
add
clc
loop
or
cmp
mov
and
add
outsb
push
aaa
dec
scas
xchg
loop
dec
xchg
jne
add
inc
clc
push
sar
mov
add
es
in
fs
xabort
clc
sar
mov
sbb
add
in
jl
pushf
jb
add
test
xchg
xor
fcoms
add
push
test
lock
clc
lods
mov
xlat
jmp
add
or
rorb
add
stos
jle
sbb
push
add
jb
add
clc
decb
mov
add
add
aaa
das
dec
push
add
in
cli
mov
add
jnp
ljmp
add
add
push
inc
add
cwtl
mov
clc
lret
clc
in
mov
add
data16
fisubrl
mov
add
add
clc
mov
clc
sub
pop
adc
add
add
ja
add
hlt
sbb
add
fistpll
xchg
add
add
call
add
insb
sbb
filds
lods
pop
lahf
clc
cmp
jp
mov
das
xabort
sbb
inc
add
jmp
add
sub
inc
clc
es
pusha
add
fisttps
mov
cli
lods
aaa
xchg
fbstp
imul
clc
xchg
xchg
inc
add
jne
jl,pt
clc
jnp
push
jbe
clc
mov
cmp
add
adc
imul
add
in
fs
cmp
js
out
push
clc
jbe
mov
mov
clc
or
mov
inc
add
cmp
out
jbe
stos
xchg
hlt
xchg
sub
push
add
add
adc
add
add
add
add
clc
mov
mov
data16
mov
add
rcrl
out
sar
jl
add
cmp
xchg
push
pop
test
dec
in
jp
add
daa
clc
mov
clc
inc
add
fcoml
lret
clc
mov
add
pop
jmp
add
or
add
lods
cmp
add
cmp
pop
mov
add
mov
clc
fs
pop
clc
in
sbb
mov
sbb
clc
pop
clc
lods
stos
and
into
idivl
mov
clc
cmp
push
ljmp
shrb
or
sbb
lret
scas
hlt
cmp
cltd
jns
jae
add
push
insb
sub
lods
sub
xchg
aam
clc
es
imull
clc
fsubrl
push
add
es
frstor
pusha
add
inc
clc
out
pop
push
fsubrp
data16
aad
cltd
push
add
out
xchg
and
add
cmp
push
shll
add
dec
adc
add
add
ud1
clc
outsb
das
rcrb
movsb
clc
in
enter
jb
add
mov
popf
or
clc
mov
sub
clc
push
bnd
clc
jp
arpl
add
stc
cld
jecxz
inc
clc
push
clc
mov
fsubr
jge
xchg
jae
add
pushf
aam
dec
imul
incl
add
es
mov
add
push
xchg
mov
mov
leave
and
add
clc
adc
add
std
ljmp
mov
jns
adc
add
sti
out
imul
popa
add
ss
xchg
jg
clc
inc
add
push
clc
xor
clc
push
xchg
xor
jl
mov
mov
pop
jae
add
or
test
push
loope
inc
clc
mov
fwait
add
add
clc
and
add
mov
test
aad
add
push
clc
jne,pt
push
mov
and
add
cmp
ljmp
mov
adc
add
add
or
mov
adc
sbb
clc
mov
clc
push
clc
fistl
movsl
clc
xabort
add
fnsave
add
clc
into
pop
adc
add
mov
arpl
add
add
nop
shl
sbb
fcmovb
clc
mov
clc
mov
jg
pop
sbb
clc
outsl
jae
add
rcrb
clc
push
clc
xchg
arpl
add
lret
add
mov
add
sub
push
add
roll
clc
cmp
prefetchw
or
add
or
add
clc
test
adc
gs
icebp
iret
in
dec
fdivs
add
pop
lahf
lods
js
clc
lods
adc
add
add
fldenv
clc
fucomip
icebp
pop
and
add
clc
push
and
add
repnz
push
add
dec
jmp
clc
push
xchg
dec
cmp
cmp
clc
pop
or
sar
xchg
sbb
negb
jge
sub
sbb
add
jae
add
loopne
xor
rcrb
es
clc
inc
clc
and
add
adc
add
sbb
xlat
xbegin
aaa
mov
cmp
nop
in
pop
cltd
xchg
std
dec
cmp
clc
in
mov
add
pop
mov
add
add
add
add
add
cmpsl
clc
adc
add
inc
add
scas
and
add
cmpsb
clc
dec
cmp
sar
clc
sub
idivb
add
jo
add
clc
cmp
add
lret
sub
pop
pop
fsubr
fidivs
add
sar
pop
add
add
mov
out
mov
jnp
cmp
add
pop
sub
clc
das
js
cmp
hlt
jl
xor
add
clc
jmp
clc
jno
add
add
mov
add
stos
int3
dec
xchg
or
clc
shrb
sbb
clc
cwtl
mov
add
das
clc
xor
add
clc
pop
mov
push
loop
stos
iret
lock
pop
mov
add
loopne
jmp
clc
mov
clc
and
add
sub
std
loopne
popa
add
fwait
lret
or
imul
clc
iret
pop
cmp
push
sub
xor
add
cmpsl
clc
jp
clc
sar
mov
cmp
dec
repz
add
mov
mov
add
pop
je
add
mov
sub
fsts
in
cmp
cmp
sbb
add
add
cmp
add
loopne
into
lea
add
bound
add
clc
jbe
push
jl
icebp
push
mov
dec
mov
nop
mov
clc
vmovaps
mov
add
add
lock
add
and
add
rol
clc
xbegin
pop
pop
dec
pop
dec
mov
clc
sub
add
add
add
in
sbb
add
xlat
ret
clc
dec
or
leave
push
mov
fcomps
sbb
addr16
cmp
cmp
sub
clc
mul
clc
mov
leave
lret
cmp
push
add
push
add
xchg
aam
adc
add
clc
add
add
clc
call
clc
adc
add
jb
add
mov
add
int3
push
fcompl
clc
dec
pop
insl
cmp
lahf
out
aaa
mov
add
pop
cwtl
cmp
push
add
movsb
clc
mov
incl
clc
nop
sar
sub
add
jbe
dec
cltd
cmp
pop
sbb
shrl
dec
and
mov
iret
stc
mov
add
jmp
clc
cmp
add
mov
vminps
sub
pop
jae
add
add
sub
add
in
mov
cli
jo
add
add
lcall
add
icebp
mov
add
push
add
call
cmc
lods
icebp
jbe
clc
cmp
test
sub
pop
jb
add
xchg
clc
push
add
xchg
mov
mov
xchg
fcomps
sbb
add
out
pop
rcr
pop
cli
push
add
mov
xlat
sti
and
add
cmp
aas
mov
xchg
ret
mov
add
pop
mov
push
int3
jmp
test
stos
mov
clc
or
clc
inc
add
clc
sbb
mov
add
inc
add
xabort
clc
into
xchg
repnz
xlat
and
test
sub
add
add
xor
add
fdivrs
add
inc
clc
push
xchg
hlt
sarb
movsb
clc
gs
xchg
loopne
rorb
fdiv
mov
add
sbb
clc
clc
shlb
add
mov
jle
neg
adc
add
clc
scas
pop
xabort
push
add
push
add
mov
jp
ret
clc
mov
call
mov
xabort
adc
add
in
cmp
cmpsb
clc
sar
cltd
sbb
add
fs
stos
or
cmp
add
jp
pop
ret
clc
push
clc
xchg
fimuls
add
sub
inc
add
push
cmp
lods
and
add
mov
test
lods
xchg
repz
dec
sub
xor
push
add
dec
mov
clc
xchg
push
add
fdivr
push
add
in
pop
jge
add
mov
clc
jo
add
clc
leave
push
add
test
add
mov
or
clc
int
data16
aad
add
paddd
add
scas
loope
adc
add
clc
imul
mov
fists
add
cs
mov
nop
push
movsl
clc
lods
fidivrs
mulb
mov
clc
pushf
push
add
sub
add
test
add
repnz
das
inc
add
xor
add
clc
data16
cmp
mov
lret
cmp
cmpsb
clc
adc
add
dec
cs
pop
test
add
jbe
in
mov
add
mov
stc
roll
clc
mov
add
pushf
inc
add
push
sar
jb
add
sub
clc
gs
pop
cltd
and
add
push
add
out
dec
mov
rcrl
sub
mov
push
mov
add
cmp
arpl
add
adc
pop
in
enter
add
fcompl
movsb
clc
dec
or
inc
clc
sar
negb
jg
pop
push
add
jnp
sub
clc
add
paddusb
xchg
inc
clc
pop
in
cmc
aaa
mov
sbb
clc
fistl
add
ret
clc
sub
int
dec
fadds
inc
add
gs
cs
test
dec
out
addr16
scas
and
add
inc
clc
xchg
cmp
fadds
aam
xchg
or
jmp
shl
insb
add
clc
sbb
mov
clc
xchg
sar
sahf
bound
add
xor
add
add
add
frstor
clc
mov
mov
or
xor
add
cmpsl
clc
mov
repz
add
enter
data16
aad
outsb
push
pop
mov
sub
ja
data16
push
add
xchg
gs
dec
and
add
in
mov
xor
add
clc
add
add
or
fldz
repnz
xabort
mov
clc
jno
add
clc
outsb
xchg
xchg
daa
clc
and
in
inc
add
lea
add
aaa
cmp
sar
clc
aas
popf
mov
add
pop
sbb
clc
inc
add
sahf
pop
pop
add
add
cmp
add
mov
clc
jmp
dec
xchg
and
add
sbb
mov
cmp
sbb
std
std
mov
clc
jmp
mov
push
add
vucomiss
add
leave
lret
clc
imulb
add
xor
add
or
mov
clc
xchg
pop
shlb
inc
add
pop
lahf
out
es
clc
xabort
clc
test
add
cmp
dec
clc
mov
cmp
mul
clc
rcrb
sbb
out
pusha
add
notl
inc
add
out
cmp
movsl
clc
into
test
movsl
clc
nop
mov
add
aad
cmp
cmp
add
cmp
clc
dec
adc
add
icebp
data16
mov
clc
fldl
add
add
xlat
mov
and
add
mov
mov
xlat
or
clc
mov
clc
sub
stos
inc
clc
inc
add
bound
add
imul
stos
mov
sbb
stos
jb
add
cmp
sub
ss
pop
lret
pop
push
lret
imul
add
sarl
imul
int3
imul
add
clc
scas
inc
clc
dec
popf
cmp
add
cmp
cmpsb
clc
rorl
aad
clc
adc
mov
inc
clc
fs
leave
add
add
out
outsl
mov
popa
add
mov
cmp
add
add
add
sti
inc
clc
cmc
adc
sub
push
push
iret
sub
mov
in
clc
sar
sbb
enter
mov
add
pop
add
add
push
add
pop
clc
push
add
insb
xchg
cmp
movsl
clc
sti
inc
add
clc
or
fcomi
jno
add
fcompl
cmp
clc
ljmp
add
es
mov
ret
clc
daa
clc
lret
cmp
xchg
jno
add
mov
nop
insl
jp
sub
add
xor
add
xor
add
add
aaa
or
add
loop
out
sbb
add
ret
adc
add
test
ret
cld
dec
sbb
mov
inc
add
sbb
jnp
mov
inc
clc
test
inc
clc
push
jo
add
xor
add
pop
push
add
mov
add
insb
pop
insl
movsl
clc
sar
sub
add
add
clc
test
add
es
lea
lods
pusha
add
fs
pop
jge
xor
add
test
btc
pop
cmc
lret
sub
pop
xabort
xchg
jmp
hlt
je
lret
adc
add
add
add
in
jge
add
xchg
fnstsw
cmpsl
clc
punpcklwd
add
test
cmc
fisttps
add
sub
in
out
fwait
sub
jnp
xor
add
clc
or
outsb
imul
clc
jns
clc
cmp
add
add
test
outsb
sub
clc
pop
fcomi
cld
or
pusha
add
fcmovnu
inc
clc
lcall
jo
add
insl
jp
lods
fwait
lahf
sub
add
inc
clc
jnp
add
ljmp
js
aad
clc
cmp
mov
push
clc
fsubs
add
sbb
shrb
add
clc
lahf
xchg
xor
clc
aas
xor
add
pop
testl
add
inc
add
sbb
push
add
call
add
clc
mov
in
adc
mov
add
xchg
into
ss
roll
add
or
jmp
adc
add
lcall
xor
add
ja
daa
clc
mov
push
add
mov
clc
popf
xchg
sar
add
imul
fisubrs
mov
mov
clc
xor
cmpsl
clc
cwtl
xor
add
add
cs
cmpsl
clc
mov
add
in
arpl
add
clc
imulb
mov
push
clc
jns
mov
mov
clc
jecxz
mov
add
push
xabort
clc
sub
adc
add
clc
addr16
mov
data16
xchg
mov
add
or
clc
mov
insb
xchg
and
add
lods
daa
clc
data16
sub
jp
clc
lods
mov
add
add
add
pop
jnp
add
add
cli
or
clc
das
and
and
add
clc
hlt
or
lods
out
fimuls
test
icebp
insl
add
add
cltd
inc
clc
jno
add
clc
int
repz
inc
clc
addr16
sbb
inc
add
enter
add
add
repnz
clc
mov
jbe
clc
cmp
test
in
std
arpl
add
clc
roll
add
imul
jb
add
or
add
loope
ja
jbe
jecxz
das
xchg
popa
add
int3
iret
insb
add
push
cld
arpl
add
add
add
add
add
add
cltd
clc
push
aam
add
add
cmp
sub
out
pop
in
fwait
adc
add
add
cmp
add
adc
add
add
mov
add
xchg
sbb
fs
sub
pop
sub
mov
clc
adc
add
add
stos
into
adc
xlat
jne
lock
mov
add
shlb
add
add
add
pop
dec
adc
add
clc
fwait
adc
clc
mov
inc
add
mov
clc
cmp
outsb
push
add
and
add
repnz
clc
clc
clc
scas
push
lret
sbb
cmp
add
push
clc
mov
xchg
popa
add
pushf
je
clc
fists
add
wbinvd
xchg
xor
add
shrb
lret
cmp
aas
sahf
loope
and
add
pushf
mov
dec
cld
sub
into
sub
and
jp
clc
lret
clc
push
sub
clc
aam
cmp
add
add
clc
sub
clc
insl
push
add
xchg
lret
clc
fbstp
int
xchg
shlb
lret
hlt
aas
movlhps
ret
mov
int3
pop
clc
sbb
clc
aam
inc
add
push
add
xchg
mov
mov
clc
xchg
inc
clc
cmp
mov
mov
scas
js
mov
dec
sti
ja
pop
and
jmp
inc
clc
cwtl
negb
fstps
imulb
add
add
cwtl
cwtl
imul
add
pusha
add
and
add
add
adc
add
add
jecxz
pop
or
dec
bound
add
hlt
mov
roll
mov
aam
mov
cmp
add
add
clc
outsl
fists
add
cmpsl
clc
sub
sti
cmp
mov
cmp
hlt
xchg
into
adc
add
clc
in
sbb
clc
mov
add
add
jne
or
es
mov
add
std
cmp
cmp
xchg
or
clc
pop
clc
lahf
sti
pushf
fs
jo
add
clc
push
out
imul
iret
ds
aaa
jmp
testl
test
ret
clc
mov
adc
add
addr16
ret
clc
lods
fs
jmp
ret
clc
xchg
mov
sbb
cmpsl
clc
xchg
or
shll
cmpsb
clc
or
clc
data16
xchg
pop
lock
xor
add
bound
add
fdivrs
mov
mov
jb
add
clc
out
jo
add
clc
or
inc
clc
jo
add
dec
dec
mov
sar
clc
xor
add
daa
clc
xchg
lock
add
sub
and
add
xchg
jb
add
jbe
imul
out
mov
and
add
push
inc
add
hlt
cmp
div
mov
xor
add
clc
ss
clc
rorb
in
fmull
add
push
scas
dec
xlat
cmp
add
mov
inc
add
mov
lret
mov
pop
adc
add
xor
add
adc
add
popa
add
jge
clc
dec
mov
add
xchg
dec
outsl
testl
add
jns
add
lahf
push
add
or
cmp
clc
xchg
sbb
add
adc
add
add
add
bound
add
mov
jo
add
mov
inc
clc
mov
jne
add
add
inc
add
push
adc
jl
push
clc
inc
clc
pop
and
add
repz
or
loopne
jge
sar
mov
clc
fxch
into
scas
cmc
sbb
jl
repz
sbb
sbb
clc
iret
mov
mov
jmp
clc
out
into
mov
sar
cwtl
adc
add
clc
add
pop
clc
push
add
dec
inc
add
sub
add
mov
clc
push
aad
lahf
loopne
loope
sub
add
xor
adc
add
clc
stos
pop
sub
add
or
clc
incl
add
mov
in
in
out
mov
jge
iret
cmp
add
fnstenv
add
cmp
sbb
xor
clc
sbb
ds
mov
sub
popf
leave
sar
filds
call
cmp
ljmp
xor
fs
jge
dec
mov
clc
and
add
push
add
cmp
adc
add
clc
into
dec
xor
ret
clc
adc
add
clc
xabort
leave
insl
push
add
ss
fwait
adc
sar
sar
clc
jnp
add
pop
outsl
cli
dec
pop
pop
clc
or
sub
clc
mov
add
jg
int
in
and
add
jmp
xchg
ror
mov
pop
clc
inc
clc
dec
fimuls
cltd
jne
clc
cmpsl
clc
stc
mov
add
dec
mov
cli
inc
add
xlat
mov
add
xor
clc
outsl
fdivrl
mov
mov
arpl
add
std
sub
clc
xor
add
add
fbld
stc
jo
add
and
add
cmp
clc
clc
jbe
push
pop
movsb
clc
iret
pop
ret
iret
xchg
repz
add
mov
pop
jle
jecxz
icebp
cmp
xbegin
repnz
pop
push
add
sarl
pop
clc
inc
clc
ret
clc
push
add
int
mov
clc
cmpsb
clc
xbegin
add
add
sahf
ret
clc
add
nop
leave
loop
fistps
push
add
mov
dec
inc
add
jbe
dec
mov
clc
pop
push
lea
add
inc
add
out
mov
jecxz
sbb
clc
outsl
loopne
aad
mov
add
cli
daa
clc
scas
sahf
outsb
mov
add
or
adc
add
sub
lret
jecxz
mov
add
fcmove
clc
lods
jl
lcall
cmp
loopne
lods
cli
sar
clc
adc
add
add
shrl
mov
dec
int
test
dec
add
add
clc
testl
add
scas
in
push
dec
jmp
movsl
clc
js
fwait
in
sbb
add
cmp
cmp
push
add
jg
jne
cmp
in
pop
ret
clc
pusha
add
sbb
sub
xchg
mov
mov
in
jne
and
add
add
scas
loopne
clc
push
add
pop
loopne
insb
jg
add
pusha
add
aad
cmp
aas
test
clc
jb
add
clc
inc
clc
mov
jno
add
add
mov
into
addr16
or
int3
sti
ss
clc
sub
aaa
mov
cmp
clc
test
add
and
or
popf
out
test
sub
clc
jo
add
lcall
popa
add
mov
clc
out
xor
add
clc
pop
stc
or
clc
aas
call
add
add
pop
out
pop
xabort
inc
clc
inc
add
nop
test
add
sbb
mov
adc
add
dec
fs
jnp
gs
and
add
lock
cltd
in
mov
mov
das
bound
add
nop
aaa
cmp
adc
add
xor
clc
mov
faddl
aad
clc
addr16
or
push
add
xchg
fwait
mov
cmp
fisubrs
mov
push
add
mov
add
add
fwait
out
pushf
int3
xchg
jmp
xabort
add
add
add
add
clc
das
js
gs
outsb
fs
mov
fistpl
adc
clc
cmp
add
push
add
aaa
dec
adc
add
ds
xlat
cmp
clc
push
loopne
add
add
daa
clc
mov
cmc
out
cmp
push
add
push
fwait
fs
aad
mov
add
sar
dec
xabort
clc
sub
clc
in
roll
add
mov
divb
mov
clc
mov
inc
clc
mov
loope
jmp
add
jle
jmp
jge
sbb
clc
xchg
mov
lods
fadd
clc
decl
sub
jno
add
add
scas
cmp
pop
cmp
mull
add
clc
sbb
iret
sub
add
dec
xchg
or
add
lret
ffreep
clc
sar
add
push
add
rorl
xchg
sti
cmpsl
clc
aad
pop
icebp
stc
or
sbb
push
aas
icebp
pop
fdivr
sub
add
add
mov
mov
clc
jp
or
sub
mov
add
xlat
jno
add
out
mov
jl
sar
jae
add
xor
add
add
xor
add
and
add
clc
outsb
movsl
clc
outsb
sbb
clc
fldenv
jb
add
push
clc
pusha
add
push
add
adc
clc
inc
add
cld
dec
inc
clc
dec
jae
add
sub
push
clc
or
fadd
clc
lock
pop
lea
das
mull
add
cmp
cmp
dec
inc
clc
stos
mov
add
push
mov
clc
push
add
mov
cmp
add
fnsave
lret
xor
or
clc
stc
shlb
add
leave
test
or
clc
push
add
in
push
clc
add
stc
loopne
or
add
xchg
pop
dec
mov
and
popf
aam
cmp
clc
xchg
std
fmull
test
mov
pop
sbb
add
sarl
cmp
push
data16
xchg
xor
add
xchg
out
pushf
and
add
or
sub
pop
add
add
pop
push
out
push
add
sbb
pop
das
pop
clc
adc
add
add
cltd
into
sbb
sbb
add
add
xor
mov
outsb
test
cmp
add
pop
pminub
pop
clc
mov
bound
add
push
xchg
cli
jp
insb
mov
add
lock
es
sti
sar
leave
lods
xor
add
push
add
sub
clc
jae
add
fwait
gs
xchg
in
xchg
mov
pop
mov
push
clc
mov
xor
stos
das
dec
iret
pop
sub
ds
add
xchg
not
add
add
add
cmpsb
clc
push
add
int
xchg
push
jbe
lea
notl
sub
xor
add
clc
and
add
and
add
mov
fcoml
add
sub
pop
lock
cli
xchg
sbb
movsb
clc
aas
mov
xchg
outsl
mov
or
clc
cmpsb
clc
not
das
gs
and
add
mov
add
lock
cmpsb
clc
add
add
clc
inc
clc
das
mov
sti
push
data16
add
add
add
cmc
push
adc
add
add
jmp
mov
in
outsl
adc
arpl
add
or
push
add
sar
adc
add
aaa
push
add
xchg
push
clc
data16
pop
pop
cmp
add
push
fadd
clc
cltd
stos
xchg
cmp
add
pop
mov
push
pusha
add
fldt
clc
inc
add
fiadds
add
sbb
add
add
clc
dec
dec
js
push
push
inc
add
jg
dec
test
cmpsl
clc
outsb
cmp
sbb
test
clc
mov
clc
sbb
cmp
sbb
clc
push
loope
xchg
and
add
jecxz
inc
clc
pop
fimuls
push
sti
mov
jmp
inc
add
test
adc
add
cmc
add
add
jl
out
insb
jbe
clc
dec
and
or
clc
or
sti
ds
jo
add
clc
movsl
clc
ljmp
clc
into
xor
add
clc
mov
xchg
cmpsb
clc
sbb
add
mov
sub
clc
popf
rcrb
xchg
sbb
aas
sti
test
push
add
arpl
add
jg
clc
mov
jo
add
ljmp
dec
add
xor
add
add
push
add
pop
xchg
or
xlat
xchg
add
add
pop
clc
cmp
inc
clc
ret
clc
jbe
clc
push
add
insl
push
clc
jno
add
std
out
jge
mov
clc
jmp
push
cmp
and
add
outsb
lret
mov
pop
sub
insl
sub
add
ja
xchg
inc
clc
testb
add
jmp
push
int
cs
jmp
xor
add
add
iret
add
add
lret
cwtl
cld
add
add
clc
pop
jb
add
xbegin
js
mov
add
or
out
cld
xchg
xchg
inc
clc
mov
dec
jne
clc
mov
clc
dec
sbb
clc
jae
add
push
xchg
push
add
scas
cmp
inc
clc
xor
add
mov
cltd
popa
add
cmp
push
add
cmp
mov
mov
dec
fidivl
pop
mov
loope
enter
clc
push
add
mov
fstps
dec
cmp
mov
cmc
aaa
push
sarb
sbb
sti
sbb
lret
jp
clc
xchg
clc
mov
mov
push
aaa
mov
pop
xor
add
push
add
add
sar
jb
add
xchg
mull
add
add
lret
add
loopne
jno
add
das
outsl
scas
mov
dec
add
clc
sbb
xchg
rcl
aam
mov
clc
cltd
mov
clc
pop
or
add
dec
inc
add
bound
add
clc
or
clc
push
clc
and
add
add
clc
or
push
add
pushf
out
in
xor
add
push
add
jns
xchg
cmpsl
clc
or
iret
cmp
inc
clc
addr16
cmp
pop
xchg
jo
add
lret
repnz
nop
mov
clc
sbb
mov
mov
adc
add
shrb
add
xchg
ret
clc
icebp
add
add
add
lods
out
push
ret
clc
out
daa
clc
push
js
add
icebp
mov
movsb
clc
add
add
enter
kmovw
push
add
sar
add
inc
add
out
movsl
clc
pop
clc
sbb
insb
jecxz
xchg
mov
imul
clc
dec
fs
adc
add
push
clc
imul
add
add
mov
cmpsl
clc
push
add
movsb
clc
mov
and
and
add
mov
sub
sbb
int3
fwait
lret
add
add
add
add
pop
sbb
clc
mov
nop
in
add
add
add
clc
leave
bound
add
add
stos
xor
add
or
clc
xor
add
xor
ljmp
movsl
clc
call
mov
or
outsb
sar
ds
into
mov
push
add
mov
mov
lea
jo
add
dec
mov
test
cmp
hlt
pop
cli
gs
jbe
clc
sub
add
bound
add
add
clc
sar
add
xor
add
clc
mov
ficomps
call
add
add
mov
clc
cmp
xor
add
aas
cmp
pop
ljmp
mov
xlat
xchg
iret
aad
adc
add
pop
xchg
cmp
pop
or
mov
enter
in
nop
push
jb
add
ljmp
add
aam
mov
aas
fmul
lret
ss
test
loope
insb
stc
out
lods
push
insb
fbld
and
add
adc
pusha
add
call
mov
add
cltd
std
and
add
clc
sbb
or
rcrb
sub
inc
clc
inc
clc
sub
push
add
push
cwtl
mov
add
add
jae
add
mov
clc
push
repnz
add
inc
clc
hlt
jmp
mov
add
add
clc
enter
xchg
outsl
or
mov
clc
sahf
rcll
xchg
jo
add
sbb
aaa
cmp
add
insl
test
jae
add
add
test
sbb
jno
add
add
pop
stos
push
push
aaa
sbb
clc
or
bound
add
adc
add
mov
into
shrb
popf
daa
clc
in
sbb
add
jae
add
sub
xchg
lea
push
add
or
and
add
mov
repnz
push
clc
dec
cmp
cmpsl
clc
inc
clc
xchg
jle
enter
add
clc
lea
test
outsl
ja
aad
dec
test
pop
jno
add
add
stc
sub
and
add
add
jo
add
add
clc
cmp
mov
clc
push
shlb
clc
gs
mov
rclb
cmp
inc
add
loop
loop
outsb
inc
clc
mov
jo
add
test
insb
into
cmp
mov
add
sbb
add
pushf
add
xbegin
add
inc
add
aas
inc
add
xchg
xor
clc
xchg
jo
add
jne
sti
movsl
clc
test
popf
dec
mov
mov
pop
inc
clc
mov
ficoml
add
or
cmp
mov
stos
push
addr16
sub
add
add
scas
pop
pop
and
add
clc
mov
pop
addr16
in
sar
inc
add
cmp
cmp
add
add
out
dec
data16
sar
movsb
clc
adc
add
sti
sbb
or
push
clc
lret
mov
jecxz,pn
push
loop
sbb
xchg
mov
mul
clc
std
jmp
push
incb
add
sti
push
mov
loopne
add
add
cli
icebp
iret
mov
cmp
in
into
add
sar
out
stos
adc
clc
inc
clc
inc
clc
incb
add
mov
add
mov
add
loope
push
add
bound
add
clc
pop
ffree
clc
mov
clc
sub
mov
dec
xchg
loope
fcomps
sub
and
mov
dec
in
outsl
jbe
mov
clc
repz
and
and
imul
clc
bound
add
pop
jge
mov
sub
sub
inc
clc
int
clc
mov
clc
inc
add
push
cmp
add
add
add
pop
inc
clc
mov
clc
push
mov
clc
xchg
loop
loope
movsb
clc
data16
std
or
add
add
mov
jg
add
scas
sbb
xchg
sub
movsb
clc
out
cmp
cli
push
cwtl
ficompl
or
clc
jns
pusha
add
adc
add
sar
pusha
add
popf
fs
jmp
sar
aam
jno
add
pop
stc
stos
dec
pop
cmp
inc
add
push
add
cli
scas
mov
clc
cmpsl
clc
pop
xchg
addr16
stos
xlat
pop
jne
clc
into
dec
inc
clc
sbb
insb
mov
stos
dec
push
clc
jmp
clc
pop
popf
adc
add
dec
dec
and
sub
add
push
icebp
xchg
mov
add
clc
cmp
fnstcw
loopne
jecxz
cmp
and
add
clc
inc
clc
push
std
stos
aad
inc
clc
xchg
lahf
dec
gs
fsubl
add
popa
add
adc
add
cmp
add
dec
xor
frstor
outsb
adc
add
in
xchg
push
cwtl
test
add
add
cmp
rclb
add
clc
jns
mov
gs
cmp
lahf
bound
add
jle
jns
add
push
testl
xor
add
ljmp
mov
push
nop
pop
out
repnz
add
add
je
testb
mov
push
add
mov
push
xor
pop
sbb
inc
add
mov
add
add
mov
insl
mov
add
xor
cmpsb
clc
jb
add
clc
shlb
clc
or
sub
add
out
enter
test
scas
stos
pop
dec
jnp
ds
push
sub
push
mov
clc
xor
jb
add
sbb
mov
add
add
clc
cli
xchg
jecxz
rcll
clc
add
add
add
into
cmp
push
sub
add
mov
ret
clc
scas
rcrl
add
mov
add
outsl
fcmovnu
and
add
add
xchg
jg
add
dec
out
aad
clc
hlt
pop
dec
cmc
push
clc
push
mov
int
leave
add
add
add
xchg
divb
add
nop
sub
clc
xchg
pop
sub
lock
sbb
clc
cltd
mov
nop
or
stos
movsl
clc
mov
lahf
xchg
stc
imul
jns
adc
add
push
add
jge
sti
or
fldcw
and
add
add
clc
in
loope
fidivs
in
lock
add
push
popa
add
jp
clc
movsl
clc
or
mov
push
add
pop
ret
or
clc
lods
ret
clc
ss
sbb
pop
and
add
clc
imull
add
notl
clc
or
out
lods
xor
add
pop
scas
sahf
cli
or
insb
push
loope
sbb
mov
clc
test
clc
lods
mov
add
cmp
clc
jne
cmp
fwait
ret
clc
add
add
add
clc
mov
mov
add
cmp
xor
sbb
clc
mov
repz
clc
sbb
adc
clc
dec
fistl
clc
in
dec
mov
add
mov
dec
jmp
add
mov
add
ret
shrl
sbb
clc
jns
add
dec
pop
cmp
popl
add
clc
push
ljmp
clc
or
cmpsb
clc
push
jle
cltd
arpl
add
mov
xor
add
add
add
adc
add
add
mov
sbb
add
add
mov
fwait
pinsrw
repnz
adc
add
jae
add
add
sbb
clc
inc
clc
cmp
push
dec
in
mov
clc
pop
jae
add
aas
loop
ret
clc
out
pop
jge
jmp
add
adc
add
clc
xor
aam
clc
lods
push
adc
clc
sbb
cmp
clc
in
xor
add
and
add
add
mov
jle
sub
inc
add
ret
clc
sarl
jmp
jmp
hlt
clc
loop
mov
cmp
add
add
add
add
aas
jo
add
mov
add
ss
sbb
pop
testl
popf
fstl
push
jne
and
std
cli
out
or
pop
inc
clc
inc
add
pop
mov
add
pusha
add
and
add
repnz
mov
mov
cmp
add
or
inc
clc
stos
enter
sar
mov
mov
add
add
clc
js
xchg
sbb
add
lods
fsubs
add
inc
clc
mov
xor
shr
outsl
call
insb
add
add
sahf
jb
clc
mov
inc
add
cli
cwtl
cmp
clc
cmp
add
popf
scas
mov
xchg
adc
add
fdivrl
clc
addr16
insb
dec
sar
xchg
add
add
lcall
push
add
dec
cmp
add
int3
cmp
add
clc
pop
add
add
xbegin
clc
scas
inc
clc
clc
sub
mov
clc
mov
sbb
daa
clc
sbb
add
add
dec
sti
lret
clc
jb
add
sub
pop
es
data16
pop
dec
sbb
cmp
shll
clc
in
nop
xchg
cs
daa
clc
jb
add
add
adc
aaa
aas
repz
sub
out
loopne
jmp
clc
fidivrl
sub
cmp
add
clc
rorl
stos
sbb
fdivs
and
add
dec
xchg
or
clc
pushl
xor
into
pop
sub
loopne
leave
xlat
ror
adc
add
clc
inc
add
stc
jmp
clc
sub
push
add
movq
jmp
lahf
sar
add
repz
xor
add
aam
rep
ret
repnz
lods
cmpsb
clc
testl
add
sub
sbb
add
test
outsl
and
cltd
clc
inc
clc
dec
push
add
mov
push
fucom
clc
test
arpl
add
dec
sub
aaa
cmp
outsl
adc
add
cmp
mov
ja
add
adc
add
xor
or
sahf
xchg
cmp
clc
mov
dec
push
add
in
jmp
add
lret
sbb
filds
add
add
xor
push
add
cmp
add
jns
push
xchg
mov
xor
xchg
cmp
add
xlat
push
xchg
fwait
xchg
sbb
insl
lods
push
adc
add
loope
add
out
popa
add
add
add
arpl
add
clc
or
sarb
add
xchg
sti
jmp
clc
scas
inc
add
xchg
ja
arpl
add
sbb
add
lods
sar
add
add
and
add
js
cmp
mov
pop
lock
add
por
clc
cmpsb
clc
xor
add
loope
xchg
mov
add
stc
mov
mov
clc
inc
add
icebp
test
inc
clc
repz
clc
push
loopne
jb
add
add
ds
adc
add
clc
loop
stc
gs
popf
dec
jno
add
mov
clc
push
add
sbb
rcl
fisttps
or
adc
test
add
sbb
clc
dec
pop
push
add
sbb
add
sub
cmp
xlat
jl
clc
and
add
add
dec
enter
clc
jecxz
xchg
cmpsb
clc
jmp
add
dec
pop
clc
xchg
jae
add
clc
adc
add
fcoms
clc
pushf
xchg
mov
cmp
loope
fisubs
ficomps
data16
addr16
inc
add
cmp
clc
pop
push
jle
dec
ds
sahf
scas
in
movsl
clc
jl
and
insl
jb
add
dec
popf
pop
and
sub
insl
int3
cmp
and
add
clc
mov
xchg
pusha
add
jecxz
mov
sar
clc
test
xbegin
std
inc
clc
mov
mov
movsb
clc
lret
clc
jnp
clc
sub
xchg
cmp
add
insl
lret
push
mov
pop
insl
mov
xabort
je
ds
cmp
add
iret
pop
jmp
daa
clc
jb
add
clc
test
cmp
add
add
das
push
add
add
outsb
xchg
int
add
add
add
clc
out
icebp
sub
and
add
clc
cwtl
aam
cmp
jo
add
add
rol
clc
inc
add
test
inc
add
and
add
clc
je
jmp
xor
add
push
push
addr16
fsubp
clc
je
add
add
push
jae
add
sub
clc
or
pop
repz
add
push
clc
dec
scas
mov
mov
fidivl
cmc
aas
jp
es
push
add
xchg
mov
pushf
and
lock
xlat
cmp
add
add
add
clc
mov
daa
clc
mov
push
add
cmp
lods
jle
lcall
adc
ja
lods
xor
add
mov
add
cmc
sti
loope
cmp
sub
int3
hlt
in
inc
add
mov
inc
clc
sar
cmp
add
sahf
pop
xchg
xchg
cmp
xbegin
mov
inc
add
leave
sbb
rcrb
pop
inc
add
test
and
add
add
pop
mov
add
jo
add
sbb
adc
insl
mov
repnz
add
and
add
inc
clc
fiadds
addr16
jbe
call
inc
clc
push
fs
cmp
clc
cmp
xor
xchg
inc
clc
or
jmp
sbb
mov
pop
rcr
adc
add
add
inc
clc
jae
add
xor
add
add
xchg
xchg
add
add
cmp
jg
in
cltd
push
aaa
jl
mov
clc
mov
add
add
add
shrl
nop
xchg
mov
popa
add
sbb
clc
mov
mov
clc
sub
clc
sbb
arpl
add
clc
sub
add
pushf
xchg
ja
clc
loopne
jmp
cmc
add
add
pop
jnp,pn
clc
sahf
jbe
sar
or
cltd
xchg
add
add
lret
xchg
and
add
sbb
add
ret
adc
add
sbb
clc
xchg
inc
clc
ret
clc
repz
cmp
add
pop
es
es
pop
mov
add
add
or
lock
clc
ds
imul
insl
test
jnp
fldenv
add
rcr
outsl
ret
clc
push
add
push
add
xbegin
add
pop
outsb
fistl
clc
popf
lahf
cmp
popa
add
bound
add
lret
faddl
add
in
sbb
lahf
imul
or
mov
add
mov
mov
clc
mov
mov
add
dec
je
add
dec
jmp
fnsave
jns
clc
fisubrl
iret
add
dec
lret
das
xchg
sar
clc
rclb
add
add
add
add
push
notb
das
add
add
add
xor
cmp
loopne
lahf
imul
cmpsl
clc
imul
clc
adc
add
add
push
dec
xor
inc
clc
lret
cmc
bound
add
clc
jne
shrb
ret
dec
hlt
mov
loopne
mov
lods
cmpsb
clc
push
adc
add
add
push
add
cld
inc
add
dec
xor
add
rcl
fwait
add
add
add
mov
fadd
clc
xlat
testb
add
loop
loope
lock
jbe
movsb
clc
outsb
outsb
inc
add
mov
test
std
sub
jae
add
add
cmp
clc
clc
cmpsl
clc
out
xchg
filds
pop
clc
cmp
cli
and
test
das
sub
test
or
push
out
jle
fcompl
clc
test
push
clc
push
ljmp
in
in
jp
clc
int
leave
daa
clc
ss
jge
mov
loope
jl
clc
popl
clc
lret
cmpsb
clc
pop
gs
mov
in
mov
mov
add
cld
push
adc
add
insb
xchg
jg
clc
push
mov
hlt
cwtl
cmpsb
clc
adc
add
in
push
push
add
sbb
push
sub
add
push
sbb
add
data16
push
mov
or
mov
clc
cmp
clc
lret
dec
sbb
add
mov
lcall
clc
inc
clc
or
clc
ja
xchg
and
add
lea
pop
pop
ja
je
cmp
clc
insl
loopne
jae
add
inc
clc
jp
xor
add
add
sbb
clc
hlt
push
add
popf
mov
mov
add
add
push
mov
add
add
fstpt
mov
clc
lods
lcall
clc
xor
clc
cmp
int
add
hlt
adc
clc
dec
out
movsb
clc
sbb
push
inc
add
jae
add
loope
loopne
sbb
pop
and
add
or
jb
add
add
stc
cmp
add
push
add
and
dec
cli
sbb
add
fcomip
iret
mov
cmpsl
clc
loope
cmp
add
add
sub
ds
sub
out
jae
add
mov
inc
add
push
aam
dec
testb
scas
pop
out
leave
js
add
cmp
xor
sar
clc
cmp
clc
mov
xchg
fwait
out
ds
add
js
loop
cmpsb
clc
in
cmp
xabort
add
clc
lahf
xor
add
adc
add
push
enter
aam
fidivs
test
add
mov
add
lret
dec
pop
sub
and
add
add
add
mov
out
ret
clc
fstps
aad
arpl
add
sub
je,pt
aaa
pushf
xchg
cmp
clc
or
add
loope
xchg
sbb
cltd
mov
rclb
add
add
addr16
mov
mulb
jmp
push
add
mov
mov
sbb
pop
adc
dec
sahf
iret
loop
out
xor
xchg
mov
add
add
clc
loope
mov
sbb
mov
repz
fs
push
add
arpl
add
mov
cmp
fcmovbe
inc
add
xchg
xchg
pop
push
add
add
loopne
aas
scas
fbld
push
dec
lods
imull
arpl
add
mov
xor
add
insl
test
clc
fucomi
sbb
push
add
dec
sub
pop
push
testl
pop
xor
cmpsl
clc
cmpsl
clc
aaa
sub
mov
add
add
ret
clc
mov
dec
inc
clc
sbb
into
xchg
adc
add
add
push
jl
and
add
lcall
lods
jge
clc
mov
pop
roll
rcrl
leave
mov
clc
mov
aaa
testl
and
add
add
cltd
or
add
add
sti
test
add
add
stos
mov
mov
add
rorb
add
or
or
clc
rclb
je
and
add
add
fildl
add
ret
clc
add
add
call
xor
add
clc
and
add
dec
leave
es
xor
add
leave
loopne
add
add
dec
cld
sub
daa
clc
je
xlat
loope
add
imul
clc
outsl
add
add
add
gs
xchg
hlt
mov
clc
push
cmp
add
add
or
clc
xor
add
pop
lcall
clc
add
add
push
cmp
add
xchg
xchg
std
xbegin
add
clc
jns
clc
cmp
stos
mov
mov
xchg
pop
add
add
mov
arpl
add
data16
or
leave
mov
clc
add
xbegin
cmpsl
clc
push
add
push
jmp
call
std
xabort
test
jae
add
clc
inc
add
stos
sub
clc
scas
xchg
inc
clc
xchg
test
cmp
add
cmp
paddw
add
add
jmp
dec
pop
push
movsb
clc
push
add
popf
std
lahf
mov
cld
notb
rcll
add
clc
push
add
lret
add
add
add
add
inc
clc
or
clc
mov
pop
and
pusha
add
and
add
mov
divb
cmp
mov
lods
sub
sbb
cld
xchg
jg
xlat
adc
add
add
sub
clc
pop
mov
mov
push
clc
idivl
clc
dec
ja
add
or
popa
add
shl
mov
loope
sbb
mov
clc
xchg
xor
repnz
pop
es
push
insb
rclb
test
inc
add
add
add
xor
xchg
and
add
add
or
lods
aaa
xchg
lahf
insl
dec
cli
sub
clc
movsb
clc
call
in
mov
add
mov
testl
add
test
cli
xchg
lcall
clc
push
clc
lcall
cmp
sbb
xchg
xchg
inc
clc
cmp
push
fs
adc
add
pop
pop
cwtl
mov
add
add
jno
add
xor
test
mov
cmp
aam
daa
clc
mov
fld
clc
in
stc
push
xor
add
xor
add
clc
std
push
lret
and
add
xchg
cmp
test
add
dec
pop
clc
cmp
mov
jge
outsb
and
add
mov
in
daa
clc
mov
pop
dec
imul
inc
add
xchg
xor
add
fildll
xchg
sbb
cmp
inc
add
sbb
fs
mov
mov
sbb
daa
clc
hlt
rol
clc
cmp
dec
xchg
daa
clc
mov
rol
clc
mov
imul
aad
clc
out
inc
add
js
mov
and
add
dec
icebp
mov
add
clc
push
repnz
cs
sbb
cmc
mov
adc
add
clc
and
add
in
sbb
jle
clc
add
add
push
add
xor
add
fsubr
xbegin
inc
clc
rorb
cmp
out
pop
jb
add
pop
mov
clc
push
push
add
jmp
pop
inc
clc
jb
add
clc
cmp
add
cmp
clc
sub
sub
jnp
movsl
clc
pop
clc
sbb
clc
daa
clc
leave
cwtl
gs
fcomps
pop
clc
inc
clc
pop
mov
add
leave
inc
clc
into
jne
add
inc
add
pop
dec
pop
inc
add
add
add
xchg
fnsave
or
adc
add
adc
jns
call
push
std
test
sar
bound
add
and
add
xabort
add
cmp
clc
ss
mov
clc
sahf
sub
dec
add
add
cmp
mov
cmp
adc
add
cwtl
or
xbegin
pop
mov
add
sbb
sub
or
add
mov
and
adc
add
int3
mov
add
clc
xlat
add
add
and
add
mov
clc
inc
clc
push
dec
add
add
clc
mov
add
bound
add
rorl
add
adc
add
fs
mov
clc
call
xchg
ss
add
fcompl
adc
add
xchg
ret
inc
clc
lods
xbegin
add
test
gs
lock
jmp
push
add
sar
sub
mov
dec
push
sahf
stc
pop
mov
dec
stos
xor
push
arpl
add
add
scas
sbb
xchg
cmp
icebp
lcall
cmp
dec
mov
lcall
add
bound
add
clc
lods
dec
sbb
clc
mov
pop
and
add
in
cmp
cmp
std
add
mov
pop
add
add
add
mov
xor
add
clc
leave
repz
repz
jns
clc
xchg
dec
mov
push
stc
mov
xchg
and
add
add
push
jb
add
fadd
clc
mov
add
xor
add
out
ja
clc
push
mov
clc
jo
add
dec
inc
add
xchg
cltd
jbe
lcall
sarb
sbb
dec
loop
xor
add
ret
mov
xor
add
cmp
aam
add
xchg
sbb
and
mov
rorl
xlat
mov
add
cmp
jp
xor
add
add
jecxz
fisttps
popf
xlat
out
pop
jmp
mov
push
mov
clc
sbb
sahf
cmp
nop
mov
cwtl
pop
loope
das
ds
push
jae
add
add
mov
add
add
fcmovnb
clc
sbb
add
add
sub
clc
xchg
nop
dec
cmp
clc
add
add
sbb
lahf
bound
add
add
mov
clc
inc
add
cmp
pop
pop
sar
sbb
clc
ss
adc
add
movsb
clc
cmp
cmp
mov
cmp
mov
clc
frstor
add
add
add
xchg
mov
add
sti
push
sub
divl
add
sub
xor
add
mov
add
jno
add
clc
jae
add
cld
cmp
int
mov
add
into
xbegin
adc
add
pop
push
lcall
clc
ret
lret
int3
loopne
icebp
inc
add
arpl
add
clc
adc
add
jb
add
rep
cmp
add
add
sub
inc
clc
xor
and
add
je
xchg
mov
popa
add
addr16
and
add
aad
clc
std
jp
clc
bound
add
sbb
loop
push
add
sub
ss
addr16
pop
incl
push
sub
clc
je
in
xbegin
add
inc
clc
mov
es
mov
cwtl
in
mov
aam
add
cmp
jb
add
jnp
clc
clc
cmp
mov
pusha
add
jnp
sar
add
ret
mov
add
add
clc
mov
push
test
in
test
rol
clc
stos
dec
mov
xchg
xchg
inc
add
mov
mov
loopne
aad
clc
mov
ljmp
mov
clc
inc
clc
sti
and
add
fisubl
imull
cmp
sub
adc
jnp
clc
sarb
add
add
jne
add
mov
clc
pop
fs
lahf
pop
ror
jmp
out
fiadds
add
pop
xchg
cli
adc
ja
clc
mov
or
add
bound
add
and
add
clc
data16
sub
clc
sar
jbe
clc
pop
lock
push
jb
add
mov
es
jge
xchg
dec
and
add
add
push
add
and
add
mov
pop
pop
popf
push
sub
lods
icebp
pushf
push
negb
pushf
xabort
add
jb
add
add
cmp
clc
fimull
cmpsl
clc
cmp
add
insl
mov
xchg
mov
clc
mov
adc
add
clc
adc
add
jle
cltd
cmp
add
data16
mov
std
dec
push
add
fbstp
add
ds
add
add
add
mov
mov
clc
enter
mov
pop
or
xor
add
out
cmc
lea
decb
out
loopne,pn
movsb
clc
sbb
add
add
add
adc
add
loopne
test
popf
insb
movsl
clc
ss
sub
add
push
clc
mov
xchg
pushf
or
push
add
clc
clc
out
sub
arpl
add
jno
add
clc
cmpsl
clc
arpl
add
xchg
xchg
push
clc
adc
sbb
add
fimull
jno
add
aas
xor
add
add
iret
dec
pop
aam
push
or
fstl
hlt
inc
add
dec
push
ret
inc
clc
or
xlat
data16
xchg
or
pop
dec
push
cmp
pop
fdivr
sbb
pop
cmpsb
clc
nop
incl
fmulp
push
sub
daa
clc
pusha
add
call
movsl
clc
scas
dec
push
push
add
jbe
xbegin
cs
pushf
dec
jle
clc
test
loop
nop
sbb
clc
stc
pop
loopne
popa
add
push
add
sar
aad
add
inc
clc
adc
clc
rol
clc
aas
into
js
ljmp
mov
inc
add
xchg
int3
xor
mov
add
add
pop
push
aas
jl
clc
jo
add
clc
inc
clc
in
cmp
adc
add
dec
iret
jne
dec
mov
jmp
jne
ds
dec
adc
inc
add
xbegin
add
rorb
mov
add
add
add
add
dec
push
stos
mov
cmp
or
clc
push
add
inc
clc
js
clc
shr
cmovne
sub
add
fsubl
add
jo
add
push
cld
int
dec
mov
push
add
aam
push
mov
ljmp
stc
sub
test
pop
dec
pop
push
push
sahf
xchg
ret
clc
ss
scas
and
add
fnstenv
clc
cmc
dec
ja
repnz
jmp
clc
sbb
inc
clc
testb
fcmovb
clc
movsl
clc
div
pop
daa
clc
test
hlt
push
add
push
push
inc
add
sub
mov
dec
mov
mov
popa
add
push
xchg
ljmp
in
jno
add
xabort
mov
add
stos
inc
add
lcall
clc
addr16
ljmp
shr
push
add
inc
add
aad
addr16
addr16
out
scas
jg
or
add
mov
inc
add
test
mov
clc
sbb
mov
xchg
insl
sbb
mov
mov
mov
cld
xor
clc
sub
popl
inc
add
scas
repnz
inc
clc
lcall
add
clc
lcall
imul
mov
in
pop
mov
in
ss
clc
adc
add
loope
push
insb
call
clc
dec
rcrl
dec
dec
pop
jnp
or
add
sbb
add
decl
add
imul
cwtl
sub
sub
mov
clc
sub
ja
cmc
mov
sub
pop
mov
push
adc
add
dec
sub
mov
pop
arpl
add
add
cmp
mov
jb
add
add
out
sub
push
insb
xchg
inc
clc
sub
out
cmp
testl
loopne
sub
adc
add
ja
adc
add
sahf
aam
clc
mov
dec
xlat
fcoms
popf
and
add
clc
imul
clc
scas
cmp
cmp
lcall
xchg
fidivl
mov
mov
pop
add
add
lods
shll
cmp
dec
mov
ret
push
add
loope
xlat
roll
add
out
repnz
js
clc
sar
lods
xor
add
lea
ror
jle
add
mov
clc
adc
add
push
add
xchg
ret
clc
mov
add
sarl
mov
popa
add
push
add
mov
cmp
and
add
sbb
imul
in
das
iret
cmp
cmp
clc
hlt
fildl
rclb
add
sti
outsl
xor
add
clc
movsb
clc
fs
or
repz
add
scas
fisubrl
pop
out
mov
scas
jg
daa
clc
pop
pop
mov
add
insb
mov
clc
xchg
shrb
jb
add
mov
sub
add
adc
add
add
fcomps
mov
add
push
xor
lock
imul
and
ja
push
cld
fistl
add
inc
clc
mov
clc
repz
fsubrs
clc
pop
xchg
dec
cld
iret
or
add
mov
out
in
mov
pusha
add
sub
clc
adc
popa
add
push
ret
clc
ret
std
data16
dec
shlb
jge
xchg
icebp
call
mov
lock
mov
xchg
jge
adc
clc
dec
in
js
arpl
add
loop
scas
in
sbb
add
fnstenv
add
mov
lret
push
add
repz
sbb
add
mov
fnsave
add
cmp
in
push
push
push
loopne
add
add
add
hlt
arpl
add
clc
mov
daa
clc
inc
add
xchg
push
add
jmp
fsubs
clc
mov
fstl
add
adc
add
or
sbb
xor
add
add
xchg
sub
pop
clc
daa
clc
rcr
jo
add
add
or
fnstenv
add
movsl
clc
pop
hlt
lret
cmp
aas
adc
add
add
inc
add
lea
ja
lcall
pop
adc
add
daa
clc
mov
mov
call
cmp
je
mov
sub
cmp
add
mov
pop
push
inc
clc
in
bound
add
or
and
add
insl
jg
clc
ffree
clc
inc
add
inc
add
jb
add
push
xchg
push
add
add
icebp
xchg
jbe
clc
test
in
in
cmp
stos
xchg
or
clc
sub
data16
movsl
clc
mov
imul
or
clc
movsb
clc
cwtl
and
add
clc
sti
push
add
jne
notl
add
add
adc
add
cmpsb
clc
mov
clc
jns
dec
mov
mov
add
mov
std
je
lea
scas
xchg
ret
clc
or
add
adc
fucomp
or
mov
aad
xchg
xchg
xchg
mov
clc
lcall
mov
add
stc
cmp
jmp
cmp
in
push
add
fisttpl
lret
jecxz
push
adc
add
mov
mov
push
ror
add
push
sub
clc
out
mov
dec
lcall
sar
jg
cld
inc
add
repnz
in
jno
add
mov
clc
push
add
pop
xor
add
add
add
mov
clc
sbb
clc
shld
xchg
mov
push
add
add
add
add
shlb
add
clc
mov
mov
clc
inc
add
sbb
jmp
add
xor
add
add
nop
ljmp
lcall
mov
lret
jb
add
xchg
mov
dec
mov
lock
mov
clc
add
inc
clc
cs
cmc
sub
clc
mov
pop
add
add
out
popf
dec
pop
sar
add
mov
mov
xchg
mov
add
imul
test
lcall
pop
icebp
and
add
adc
add
add
inc
add
jo
add
add
in
or
add
mov
or
push
sarb
cmpsb
clc
xchg
pop
clc
inc
clc
pop
scas
cld
movsb
clc
jae
add
add
jnp
or
sahf
xbegin
add
rclb
add
clc
push
add
cmp
add
test
cmp
add
scas
sbb
clc
sub
out
sub
clc
xor
add
add
add
lods
jnp
fdivl
add
filds
add
and
pop
lea
adc
add
clc
nop
push
clc
leave
ja
clc
xlat
ss
or
clc
mov
cltd
scas
xchg
outsb
mov
int3
sbb
jbe
aad
notl
push
imul
add
jb
add
add
mov
add
xchg
pusha
add
push
clc
or
pop
mov
add
movsb
clc
cli
lods
mov
add
jnp
jne
js
push
add
icebp
fs
jno
add
cmp
add
add
sub
js
cmp
clc
pop
jns
gs
add
add
mov
repnz
sar
xor
add
daa
clc
add
xchg
leave
pusha
add
push
add
mov
xor
add
clc
icebp
dec
xor
add
outsb
cmp
pop
mov
clc
or
add
clc
inc
add
and
add
test
or
loop
push
clc
stos
imul
and
add
mov
sub
clc
movd
cmp
ficompl
pop
clc
inc
clc
popa
add
sbb
xor
add
pusha
add
insb
arpl
add
and
add
push
insb
rcrl
clc
scas
sub
add
std
outsb
int3
cmp
add
rcrl
into
ret
mov
mov
add
aam
mov
sbb
cs
fnstcw
aaa
push
xor
add
in
nop
fsubr
aas
fldl
clc
add
add
clc
pop
in
and
add
repnz
jns
push
pop
xor
add
sbb
mov
clc
pop
clc
ret
jge
push
push
lret
cli
jo
add
dec
mov
fildll
enter
xchg
and
add
pop
imul
clc
fs
lret
add
mov
loopne
sar
clc
add
add
add
ret
clc
adc
add
mov
cmp
add
xchg
push
add
xor
add
loop
in
inc
clc
xchg
stos
jmp
inc
clc
fsubp
clc
sahf
popf
jb
add
addr16
mov
clc
lods
xor
add
pop
inc
clc
push
xor
jnp
clc
clc
xor
add
cmp
int
insb
data16
hlt
and
clc
mov
or
clc
mov
clc
ja
mov
clc
lret
adc
add
and
add
pushf
loopne
clc
aad
pop
clc
or
clc
aam
pop
cmp
cmp
nop
clc
ja,pn
push
fisttpl
bound
add
mov
notl
add
fsub
clc
outsb
mov
cmp
add
push
add
inc
clc
hlt
inc
add
in
enter
mov
rclb
add
mov
sub
clc
fnsave
clc
fwait
or
jns
add
stos
cmp
out
xchg
stos
mov
xchg
loop
out
xlat
and
add
aam
clc
out
mov
arpl
add
ss
bound
add
add
add
mov
clc
mov
pop
int
clc
or
hlt
jle
push
adc
mov
mov
add
fstpl
sahf
mov
clc
jae
add
fidivs
add
mov
cmp
clc
gs
incl
dec
mov
add
add
add
sbb
out
cmp
clc
mov
xchg
and
add
cli
scas
inc
clc
dec
add
mov
lock
add
jne
stos
push
gs
and
cmp
out
bound
add
fadds
loopne
insl
ljmp
mov
cmpsb
clc
mov
clc
pusha
add
arpl
add
mov
add
clc
push
or
test
xchg
lods
xchg
add
add
scas
aam
pop
dec
pop
mov
addr16
mov
add
mov
cmp
push
inc
clc
cmp
rcr
repz
js
hlt
cmpsb
clc
jmp
add
sbb
scas
not
and
ficoml
add
add
mov
clc
fs
push
add
stos
pop
cwtl
add
add
add
pop
mov
pop
aas
jns
xchg
mov
add
popa
add
decl
dec
xor
add
clc
pop
mov
cmp
add
into
clc
push
push
cmp
add
fucomp
mov
clc
ss
pop
dec
xchg
inc
add
repnz
ss
pushf
bound
add
and
add
add
push
adc
add
clc
push
add
sub
int
outsb
mov
sbb
pop
xor
enter
add
clc
enter
add
aad
dec
cs
enter
mov
fistpll
sub
jne
pop
dec
push
test
call
mov
or
clc
push
add
outsl
add
push
clc
push
or
add
sahf
jnp
cmp
dec
mov
js
add
add
cmp
add
jmp
flds
es
inc
clc
lea
dec
mov
add
add
out
out
loopne
and
cmp
scas
jns
push
fwait
push
add
stc
xchg
pop
sar
mov
add
add
add
pop
popl
xor
add
xchg
mov
cmp
add
clc
jle
mov
jmp
clc
cmp
clc
sbb
fmul
mov
jp
dec
pop
mov
aas
push
add
sub
insl
mov
clc
out
mov
push
add
sar
inc
add
insl
aaa
cmp
add
mov
data16
aad
clc
cmp
clc
test
in
mov
sbb
ja
add
pop
inc
clc
dec
xor
stc
movsb
clc
cmp
and
push
sbb
mov
cmp
clc
rclb
add
jns
dec
push
dec
sub
out
fadd
clc
pop
sbb
lods
adc
add
das
in
and
add
xabort
add
cmp
sub
clc
mov
clc
and
addr16
dec
add
popf
push
add
cmpsb
clc
mov
add
icebp
jbe
xor
add
clc
sbb
mov
clc
stc
jl
clc
xor
mov
adc
add
mov
clc
add
add
add
jbe
add
int3
sar
outsb
mov
clc
inc
add
dec
mov
iret
mov
clc
cmp
sub
je
clc
adc
add
sbb
clc
jne
mov
adc
add
add
dec
or
pop
into
rcll
xchg
inc
clc
xor
add
jp
mov
dec
aad
test
add
outsl
jmp
clc
push
mov
add
loopne
push
add
in
fdivr
stos
and
add
jns
add
add
outsb
cmp
in
mov
add
repz
jnp
clc
push
xchg
rclb
add
sar
ret
pushl
clc
add
add
add
add
test
inc
clc
mov
and
add
inc
clc
cmp
filds
add
inc
add
lret
es
push
push
mov
je
push
add
out
fcmovnb
clc
ljmp
jmp
mov
add
add
clc
xor
add
xchg
cmp
add
lahf
cmp
clc
mov
lods
cwtl
and
inc
clc
or
mov
push
lea
aas
nop
inc
clc
mov
mov
in
mov
icebp
cmc
inc
add
dec
dec
jne
clc
push
inc
clc
lea
mov
add
fidivs
add
clc
cmp
imul
add
clc
icebp
xchg
mov
and
add
sub
xor
add
add
cmp
cmp
dec
stos
or
sti
fcompl
clc
out
xlat
xor
and
add
add
clc
xor
add
clc
dec
clc
pop
stos
jbe
dec
fldenv
push
clc
push
