ror
dec
test
inc
add
filds
cmpsb
add
fiadds
add
add
or
jnp
andl
push
dec
jbe
xchg
push
pusha
add
add
adc
or
pop
inc
add
add
mov
push
js
xorl
mov
adc
lahf
xchg
xchg
xchg
pop
mov
stc
push
mov
sub
inc
int3
mov
adc
lock
cmp
add
jnp
sbb
pop
pop
sbb
cs
sub
pop
and
clc
mov
add
fisubs
outsl
xchg
shll
pushf
rorl
sub
int
cli
fistl
sbb
jnp
out
aam
jnp
cmp
cmp
xchg
shrl
les
out
inc
aas
mov
add
inc
pop
aam
inc
adc
cmpsb
mov
or
in
jg
and
mov
inc
add
sub
shl
and
cli
loopne
data16
out
fcmovnbe
mov
push
add
xor
fmulp
imul
insl
sub
ja
fld
xor
mov
cmc
or
mov
add
add
enter
js
lahf
scas
insb
jl
sti
cmpsb
mov
push
ret
pop
xor
cmp
loope
xor
or
lods
stc
stc
and
xchg
cmovo
mov
add
mov
aam
add
lcall
dec
cmp
or
lret
in
xchg
jg
cmpsb
inc
add
cmp
adc
add
lods
lods
sub
sahf
pop
pop
xchg
adc
rclb
add
fidivl
xchg
ljmp
adc
pop
push
jne
pop
mov
cli
or
jb
rcrb
fbld
push
xchg
dec
dec
push
lcall
lret
cs
ljmp
addr16
xchg
outsb
inc
add
or
xchg
mov
sbb
ds
cltd
fcomps
push
lcall
and
fistpl
mov
add
add
ljmp
bound
nop
data16
xor
inc
mov
scas
out
lea
mov
pop
mov
mov
add
flds
dec
dec
add
pop
xchg
icebp
popa
mov
lcall
lods
jo
inc
xor
mov
push
test
sub
add
in
mov
sub
xor
push
rcrl
sub
push
lods
pushf
xchg
xchg
in
add
inc
add
scas
into
or
inc
add
cmp
aas
adc
aas
cmp
sub
negl
or
add
lods
mulb
and
cmpsb
adc
push
xchg
notb
mov
pop
sti
xchg
xchg
mov
sub
xor
and
sti
ljmp
outsb
iret
mov
mov
inc
add
push
jne
inc
insb
ret
je
xchg
mov
mov
pop
xor
mov
mov
inc
add
inc
fdivr
fdiv
sbb
push
movsb
or
and
pop
push
add
pop
je
cmp
lcall
addb
es
sub
movsb
mov
movsb
ds
add
jp
jnp
jo
inc
add
out
inc
add
cs
iret
outsl
adc
lea
add
mov
add
sbb
arpl
shll
dec
xchg
adc
arpl
jge
out
mov
in
ret
shl
pop
pop
jecxz
lock
sub
add
cmpsl
add
add
add
cmp
xlat
and
add
and
fs
add
out
rcl
mov
mov
pop
jo
add
lock
xchg
iret
in
adc
lods
cli
fstps
sgdtl
mov
test
sbb
clc
cli
push
add
test
rcrb
add
std
aas
jno
mov
clc
jmp
icebp
ds
rol
and
mov
mov
ss
xor
mov
fbstp
cmc
mov
fadds
mov
outsb
bound
xorl
insb
fs
xchg
enter
push
pop
jg
add
mov
add
fcmovnbe
pop
inc
mov
mov
add
push
xor
shl
pop
cmp
decb
outsl
xchg
jp
mov
int
mov
shrl
and
add
pop
add
sarl
mov
movsl
scas
lahf
test
addb
dec
adc
adc
out
movb
mov
xlat
movb
cmc
xor
hlt
mov
cmc
pop
jmp
inc
add
mov
xchg
loop
cmpl
push
add
dec
push
dec
xchg
pop
rorl
or
xor
icebp
dec
lods
fcmovbe
mov
push
pop
fiaddl
push
in
mov
xchg
lret
test
aad
add
scas
test
add
mov
xor
cld
lret
jg
aas
aaa
test
and
pusha
add
push
mov
aaa
or
push
pop
push
es
fisubs
adc
and
and
cld
cwtl
loop
ljmp
cltd
in
inc
pop
sar
out
xor
add
adc
popf
cs
int3
pop
jnp
jbe
fucom
pop
int3
push
icebp
jnp
lret
out
add
jne
in
xchg
mov
and
out
mov
insb
iret
je
adc
sub
lcall
ds
insl
aas
leave
xor
push
mov
jmp
mov
xchg
inc
add
cld
stc
cmp
push
aaa
sub
xchg
and
pop
insb
es
scas
inc
sub
adc
pop
dec
shll
cmp
loope
or
mov
pusha
add
jmp
add
mov
mov
es
mov
dec
adc
fcmovbe
into
xchg
pop
xchg
jmp
mov
xor
mov
orl
fimuls
pop
out
cmpsb
scas
sub
fstl
add
dec
mov
pop
jb
xchg
stc
ds
cs
sbb
leave
movb
test
pop
sahf
js
ja
add
add
xor
sbb
sub
mov
lahf
fdivrs
call
stc
fmul
outsb
or
add
stc
mov
add
add
jbe
add
cmp
push
pop
adc
cwtl
addb
jle
loopne
pop
inc
add
push
push
out
adc
mov
add
push
mov
cmp
sti
add
outsl
stos
push
cwtl
pop
fisttpll
scas
sahf
in
hlt
movsl
lret
add
push
cmp
pop
push
out
jecxz
or
cmp
cltd
xor
push
xor
out
out
mov
jne
popa
std
mov
pop
bound
fistps
mov
ror
push
insb
sub
add
dec
fcmove
cmpsb
shll
push
xchg
pop
rclb
xor
jmp
xchg
lock
dec
es
insb
nop
fdivp
or
cmp
sub
data16
jo
add
push
ljmp
clc
jb
inc
aam
mov
xor
repnz
bound
cmp
stc
int3
sti
incb
pusha
add
add
iret
jl
xor
stos
out
addb
sub
dec
and
js
cmpsb
pop
lahf
mov
cli
lock
ds
loop
xchg
push
inc
addb
cltd
cmpsb
std
flds
sub
add
xchg
addb
adc
sub
push
cmpsb
pop
cmp
icebp
cmpsl
mov
sub
std
and
add
fsubrl
add
loop
pusha
add
sub
cmp
mov
lret
mov
inc
cmpsb
test
jecxz
add
shlb
lret
adc
sub
dec
das
loopne
mov
mov
loope
add
in
aad
iret
into
sti
xor
sti
pop
and
add
and
shll
sbb
adc
data16
int3
movb
aad
jae
dec
lods
mov
test
or
xchg
repnz
add
bound
nop
or
test
shrl
ud1
and
movsb
out
and
pop
sub
jns,pn
sti
test
mov
and
ds
ret
mov
loopne
outsl
nop
pop
inc
add
inc
lods
cmpsl
sti
imul
sbb
pop
outsl
addb
std
dec
cmpsb
outsb
gs
test
pop
ja
loope
clc
les
mov
stos
mov
rorl
push
arpl
fs
addb
add
mov
mov
sti
imul
xchg
mov
inc
add
push
pop
leave
sub
pop
and
mov
mov
dec
fdivl
and
jnp
xlat
test
lahf
lahf
pop
imul
enter
outsl
orl
inc
ds
mov
pop
push
add
jo
cli
repz
adc
gs
jns
add
add
mov
shrl
in
cmp
fbstp
mov
sbb
mov
lods
subl
stc
je
fcmove
jp
jmp
jg
icebp
sbb
cmc
xchg
outsl
cmp
ret
addb
dec
xchg
xchg
les
and
sub
into
loopne
xor
xor
jb
enter
xchg
fwait
sub
movb
adc
pop
imul
rol
add
or
leave
les
and
adc
in
jg
jno
or
shll
ja
shlb
inc
add
rorb
push
push
sbb
subl
test
es
mov
popf
aaa
movsl
mov
jl
xchg
mov
cs
pop
xchg
mov
cmp
fnstenv
stc
repnz
add
leave
stc
mov
add
outsl
loopne
mov
xlat
stc
shll
inc
add
mov
rcrb
jmp
fisttpl
cmp
cld
push
push
add
mov
pop
nop
sbb
pop
mov
xchg
cmp
imul
lods
fadd
push
push
inc
mov
xor
mov
sahf
sub
jl
outsl
push
daa
mov
insl
mov
or
cmp
mov
fs
das
xchg
or
inc
shll
cmpsb
cmp
adc
data16
jns
aas
mov
dec
mov
jmp
push
imul
ret
mov
pop
push
outsb
xchg
lret
or
fmuls
xchg
jae
push
daa
stos
jg
repnz
call
push
cmp
jne
add
jecxz
pop
sbb
repnz
add
add
int
gs
addb
lea
add
add
mov
movsl
clc
sbb
and
cmp
jmp
decb
mov
sub
loope
add
scas
adc
add
inc
addb
gs
jno
jmp
adc
loopne
arpl
mov
js
loope
outsl
fdivl
dec
and
push
push
mov
mov
xor
cmp
call
cmovbe
es
scas
pop
es
mov
das
cmc
push
lea
adc
ja
mov
stos
push
mov
rep
pop
xchg
dec
outsb
cmp
sub
adc
add
add
or
movsl
sub
jne
int3
jecxz
or
loopne
stos
in
cs
rolb
rclb
mov
insb
cltd
mov
enter
add
mov
jmp
movsl
cs
shr
cmpsb
addb
add
mov
add
push
add
pop
aaa
jmp
inc
xchg
pop
gs
add
inc
add
add
cld
insb
cmpsl
inc
add
in
or
add
cmp
sub
add
in
pop
jnp
addb
lods
adc
mov
add
mov
push
add
nop
loope
add
sub
pop
push
sbb
mov
add
pop
mov
jne
or
pop
xchg
pop
pop
dec
cmpl
sti
push
push
gs
mov
add
stos
out
jecxz
push
rolb
mov
lret
xchg
lret
jg
daa
dec
adc
sub
sarl
hlt
mov
add
add
cmp
repnz
cli
pop
rorl
jg
jnp
jl
outsl
mov
or
int3
mov
sbb
je
add
js
and
out
jo
test
jge
xchg
pop
aaa
and
add
jge
imul
mov
mov
popa
or
adc
mov
movsl
mov
push
stos
and
mov
sbb
outsl
cli
popa
push
xor
add
pop
popf
out
out
es
rclb
cltd
jg
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
insl
and
ret
cmp
popf
sbb
mov
les
push
call
aam
mov
aam
xor
lcall
adcl
ss
sub
in
in
lds
int3
mov
cwtl
hlt
shrl
push
ds
cltd
xchg
out
fs
or
aam
xchg
add
cmp
add
bound
xor
add
add
jmp
in
cmp
mov
dec
aaa
imul
and
push
inc
add
mov
ss
jp
dec
jns
cli
stos
popa
adc
or
lcall
add
stos
mov
mov
sub
adc
adc
mov
add
adc
push
lock
and
push
add
paddd
sub
adc
mov
or
imul
std
aam
push
and
pop
pop
inc
dec
mov
inc
add
xor
add
mov
add
fimull
fucomi
fldcw
mov
daa
mov
in
fdivs
jmp
mov
push
hlt
sbb
dec
push
add
clc
xor
cmp
jp
imull
test
pop
iret
mov
cs
sub
stos
xchg
dec
inc
icebp
cmp
lahf
les
dec
out
lret
add
mov
cmp
add
or
popa
test
cld
ja
add
test
gs
pop
push
sbb
int3
cmp
test
test
lahf
cltd
xor
or
in
dec
sub
int
outsl
add
jp
jb
push
out
in
mov
frstor
in
jle
repnz
pusha
add
add
or
jecxz
lahf
nop
lret
pushf
mov
pop
sbb
jp
and
jns
popf
pop
lret
data16
std
lcall
repnz
sbb
xchg
fistl
and
lcall
add
fcmovb
add
push
stos
mov
out
sub
mov
in
add
xlat
insl
and
int3
into
sbb
sub
ds
movb
dec
xlat
inc
add
xor
pop
mov
addr16
add
nop
std
sub
mov
addb
jae
addb
adc
fisttpl
fildl
add
pop
xchg
push
int
pop
inc
add
sbb
test
sub
sbb
sti
shlb
shlb
xchg
lock
adc
lret
movb
jne
out
fcoms
xlat
mov
data16
cmpsl
fistps
ljmp
rcl
into
dec
dec
add
xchg
and
jmp
std
jmp
and
fwait
daa
adc
lahf
dec
div
jle
je
add
out
daa
mov
jmp
mov
je
addl
add
clc
jno
mov
lahf
adc
lahf
test
push
adc
add
pop
out
sub
add
popl
fbld
mov
mov
or
push
repz
add
xor
sub
jmp
push
cmp
and
lds
or
xchg
mov
popa
pushf
mov
insb
mov
sbb
sub
mov
insl
pop
mov
movsl
fildll
negb
mov
jo
sub
adc
cwtl
xor
jge
sbb
add
cld
fs
ds
add
xor
add
jne
insb
mov
adc
add
add
ljmp
push
mov
jl
mov
push
xor
add
cld
out
jmp
call
adc
inc
add
sbb
lock
mov
inc
add
fnstsw
adc
cmp
add
inc
sub
add
addb
test
cmc
lods
mov
add
inc
add
sbb
lret
das
jp
je
dec
mov
loop
pop
ds
ret
out
mov
adc
stos
push
dec
pop
sbb
cmpsl
call
sub
pop
cmp
out
in
mov
fptan
fldln2
lock
cmpsl
push
out
add
mov
xchg
rclb
ds
sub
out
add
mov
adc
inc
add
inc
add
sarl
jg
xor
xchg
and
push
jae
mov
or
shlb
mov
insl
fistps
mov
js
cwtl
cmp
fcomi
std
cmpsl
mov
sbb
dec
or
adc
hlt
movsl
das
push
cmp
sub
jecxz
pop
dec
xor
or
ret
mov
cld
jle
add
mov
or
push
lea
jbe
sub
add
jmp
or
or
mov
add
lea
dec
je
push
ljmp
mov
les
inc
pop
and
jno
jne
call
int
dec
into
sbb
xchg
gs
push
int
push
and
decb
add
push
inc
jbe
in
test
push
int3
mov
jp
lock
push
jle
movb
sbb
stc
aaa
xchg
or
dec
test
pop
aam
and
dec
sbb
add
mov
shll
add
mov
add
addl
add
mov
push
movmskps
fstl
loope
shlb
test
add
lea
sbb
lods
cli
and
cmp
roll
nop
xchg
mov
add
jnp
dec
test
cmp
mov
mov
addb
ret
mov
add
mov
js
dec
inc
push
mov
mov
int
cld
rorl
ljmp
mov
or
and
adc
add
xchg
in
subl
sbb
test
jg
mov
out
out
sbb
and
movb
enter
nop
sub
add
test
xor
call
pop
cld
xchg
sbb
pop
mov
imul
sub
leave
fildll
insb
mov
sbb
cmp
add
mov
test
daa
mov
aad
push
test
das
dec
jae
stc
mov
fcoms
sub
repz
repz
and
sbb
sbb
pop
jo
into
xor
xchg
iret
or
aad
lcall
pop
jl
ljmp
add
cs
test
add
add
idivl
mov
movsb
xchg
enter
push
mov
push
cltd
push
xchg
push
movsb
mov
sub
mov
push
add
iret
mov
add
enter
das
int
mov
xchg
pop
xor
xchg
xchg
test
pushl
sbb
rcrb
add
dec
jmp
inc
mov
add
adc
adc
out
and
pop
fs
jle
sbb
push
add
mov
add
xchg
adc
movb
xchg
push
imul
sti
pop
popa
pop
or
les
popf
insl
testb
stc
inc
cmc
arpl
jne
das
push
sub
out
push
push
cmp
adc
arpl
jg
fildll
jns
fidivs
cmp
stc
test
inc
add
out
je
adc
xor
lret
pop
adc
add
divl
jmp
add
ljmp
movl
mov
inc
add
mov
xlat
inc
add
jnp
xchg
ss
jle
lock
push
add
je
iret
shr
add
inc
add
sbbl
les
stos
cmpsl
mov
mov
out
sti
or
je
mov
add
or
addb
xchg
inc
add
jns
mov
adc
mov
repnz
and
xor
add
xor
lods
fdivrp
cmp
stos
call
xor
sarb
jge
add
stos
fstpl
add
adc
scas
or
cmpsl
shll
aas
aas
jmp
jb
aam
out
xchg
xor
jbe
shlb
int
inc
pop
stc
inc
add
outsb
outsb
cltd
mov
test
or
or
sbb
adc
jbe
sahf
incb
and
daa
pop
stos
test
adc
add
clc
outsb
mov
stc
ret
add
push
inc
add
or
inc
add
dec
into
inc
add
or
add
inc
add
lcall
fwait
or
dec
scas
push
dec
jbe
push
push
and
dec
xor
cmp
out
bound
stos
loope
or
mov
andl
cmp
add
dec
jo
inc
add
jne
in
add
jae
or
add
add
repz
sub
sbb
les
push
out
mov
inc
inc
add
sub
ret
movb
sti
or
add
mov
add
and
outsl
cmp
fisttpl
push
push
xchg
xchg
inc
bound
mov
pop
mov
adc
jl
xlat
mov
pushf
les
lock
addb
cmp
pusha
add
adc
daa
aad
loop
dec
cmpsl
data16
outsl
add
xchg
stos
sahf
inc
xchg
cmp
outsb
shlb
addr16
push
add
cmp
or
fisubl
add
sahf
mov
mov
dec
pushf
outsl
adc
pushl
rcrb
pop
sub
xchg
mov
mov
ret
ja
in
cmp
enter
add
fldl
add
cwtl
lcall
js
jl
sub
add
jns
in
test
pop
rolb
adc
into
cmpsl
mov
push
add
mov
hlt
out
rorb
stos
addb
test
test
addb
imul
pop
xor
rcrl
dec
int3
xchg
call
xchg
into
cmp
fs
add
lds
push
cmp
flds
jb
add
stc
addb
pop
cs
ffree
or
add
neg
xorl
in
gs
add
repnz
push
lods
sbb
loopne
dec
and
loop
sub
imul
scas
or
add
push
xchg
out
add
push
out
add
mov
lcall
clc
mov
xor
ja
cmp
rorb
mov
jb
add
stc
lods
sbb
stos
add
outsl
dec
insl
xchg
daa
aad
add
pop
pop
test
out
scas
adcl
push
dec
cmpsb
das
push
int
jl
mov
jecxz
add
cld
jp
pop
pop
dec
in
and
ja
add
imul
shrl
dec
cmp
dec
push
fimull
fcmove
movsb
inc
add
xchg
push
hlt
addr16
gs
out
sub
lcall
addb
filds
lret
push
dec
xchg
xchg
mov
jno
nop
mov
call
add
mov
aas
cmc
hlt
cld
mov
addb
sbb
int3
icebp
int3
mov
or
adc
fwait
jl
xchg
dec
icebp
incl
jns
add
cmp
push
add
cmp
fcomps
ss
test
cmp
add
sbb
aad
cltd
mov
push
stos
or
mov
jmp
push
lock
and
test
add
add
jns
push
mov
ljmp
bound
push
enter
mov
xor
dec
mov
mov
incb
je
dec
jecxz
icebp
cmp
pushf
add
mov
stos
xor
add
inc
add
popa
iret
mov
pop
ljmp
adc
mov
adc
dec
ds
sub
inc
or
cli
adc
mov
ljmp
stos
jne
inc
jl
jns
bound
decl
hlt
pop
add
outsb
mov
outsb
mov
subl
adcl
pop
je
xchg
repz
in
xlat
mov
test
xchg
adc
add
add
sahf
sub
scas
jge
cs
jo
xchg
xchg
jne
push
out
cmp
hlt
pushf
push
xchg
mov
push
dec
rcrl
jae
int3
pushf
jl
mov
and
dec
test
jb
jbe
imul
or
roll
jnp
into
fimuls
lods
jo
sub
add
or
pop
sub
js
add
mov
pop
int3
xchg
or
js
sub
aam
fbld
add
mov
mov
insb
sbb
add
jmp
and
mov
add
cmp
gs
or
add
test
or
mov
adc
bound
mov
jmp
cmp
and
leave
lods
fisubrs
imul
jmp
adc
nop
xchg
decl
xchg
pop
sub
dec
push
icebp
and
mov
lcall
les
or
push
adc
sub
and
aam
jno
inc
add
out
sti
jnp
mov
scas
faddl
jp
cmp
std
dec
cmpsb
cli
cs
mov
mov
mov
leave
clc
rolb
sub
inc
add
sarl
sub
xor
inc
add
loop
popf
in
jmp
mov
add
push
movsb
call
in
outsl
in
inc
add
movsb
repz
dec
pop
iret
or
test
adc
ss
add
adc
add
jnp
add
sbb
add
insl
fldcw
or
or
in
dec
mov
push
and
out
sub
cs
sub
add
or
pop
mov
lds
jecxz
and
sub
adc
cld
dec
ret
out
jmp
cmp
add
lock
and
inc
mov
jo
das
inc
add
stc
cwtl
clc
cld
rcrb
sub
ss
mov
cmp
xor
inc
jp
push
cmpsl
sbb
icebp
daa
inc
add
cltd
pushf
mov
cmp
or
xchg
in
jmp
ret
aam
popf
fildl
add
and
and
mov
inc
add
movb
ds
add
dec
inc
add
add
leave
adc
jbe
ds
xor
cmp
fcomip
fcmovne
sti
sbb
add
ficoms
repnz
popf
or
push
sbb
pop
dec
insl
outsl
inc
add
or
out
add
inc
add
cmp
add
or
or
or
and
inc
add
mov
mulb
xor
jns
fcmovu
movsl
stc
jecxz,pt
jl
pop
inc
xlat
inc
add
stc
cmp
jg
sub
fistpll
add
pushw
add
das
push
scas
or
add
test
pop
fs
mov
or
pop
cmp
add
les
mov
in
std
push
outsb
mov
or
bound
cld
mov
sarl
out
rolb
movb
sbb
jmp
inc
ret
ret
jb
lods
test
add
int3
cmpsb
clc
clc
and
cwtl
jmp
ss
aam
dec
mov
idivl
mov
push
sahf
inc
add
nop
adc
inc
add
icebp
rcl
jbe
add
sub
roll
imul
stc
dec
adc
cmp
pop
cld
in
insb
push
ret
sbb
add
cmpsl
mov
jo
mov
test
in
sbb
mov
cmp
sub
jne
std
je
je
jl
lahf
test
cmp
mov
or
insl
add
pop
xor
mov
add
clc
sbb
imul
ljmp
jno
sub
shlb
sub
shlb
ja
addr16
dec
bound
sub
lock
jae
jno
add
xchg
pop
jb
and
xchg
cld
insb
ret
xor
cltd
ja
jo
aaa
mov
push
xchg
repz
fiadds
ds
adc
push
add
outsb
push
add
adc
jns
xor
inc
add
push
movsl
addr16
pop
and
aad
xchg
clc
iret
cmpsl
sub
call
or
push
inc
mov
add
add
repnz
mov
add
add
faddl
add
test
sbb
imul
icebp
jmp
mov
in
adc
pop
and
pop
mov
cmp
push
sub
cltd
loop
mov
shlb
add
inc
add
cmp
scas
inc
aaa
push
add
jnp
adc
or
jmp
add
push
hlt
push
cmp
dec
jb
arpl
popf
adc
xor
pop
in
cwtl
inc
cltd
sbb
aam
pop
pop
movsb
movsl
push
lods
push
rep
inc
popf
movsb
jp
mov
test
cmpsl
imul
mov
fldl
cmpsb
out
cmp
or
ds
add
mov
les
out
ja
lret
add
cmp
adc
dec
aaa
pop
cmc
loopne
inc
add
push
adc
ljmp
aam
insb
and
and
dec
testb
mov
sti
pop
pop
cmp
fsubl
lahf
ret
or
mov
icebp
mov
sbb
xchg
loop
call
add
shll
add
faddl
jl
lcall
add
inc
add
xchg
jae
insb
popf
mov
cmc
push
neg
mov
fdivl
dec
and
dec
cmp
rolb
inc
fmuls
push
inc
jle
sar
sbb
inc
add
add
sub
fistps
lods
xlat
outsb
jg
cmpsb
add
sbb
shrl
add
xchg
insb
loop
add
jmp
add
jmp
cmp
les
sbb
push
shlb
scas
addb
mov
sahf
xor
mov
cmp
jl
cmp
js
sarw
mov
dec
push
xchg
mov
sub
out
or
mov
xchg
aas
enter
out
inc
idivb
pushf
lret
mov
pop
nop
jmp
mov
mov
add
lcall
pop
js
mov
outsb
sti
jo
bound
xchg
lds
clc
dec
cmp
bound
xor
aaa
xchg
jl
lcall
jge
add
nop
or
add
pop
leave
push
dec
enter
xchg
es
insl
rcrb
cs
addr16
xchg
repz
adc
out
push
outsb
xchg
jle
mov
push
loope
jl
stc
pushf
push
in
mov
sbb
ljmp
pop
mov
jae
inc
cli
jns
mov
sbb
imul
jge
or
popa
push
xchg
es
add
and
outsl
jo
cmp
sub
sub
and
shll
addr16
int3
or
fnstenv
inc
add
push
call
mov
fstl
add
lcall
cmovp
xchg
xchg
jge
data16
push
nop
cmp
add
xchg
jp
test
in
and
or
xchg
ret
aad
cmp
push
sub
inc
add
imul
add
xor
pop
xchg
bound
mov
movsb
jne
inc
add
negl
dec
insb
adc
push
cmp
jl
pop
int3
sbb
pop
cmc
in
and
les
cwtl
in
xor
outsb
rorl
xor
mov
mov
rcll
mov
add
mov
sbb
fldl
sub
add
inc
cltd
jecxz
movb
vpcmpeqw
cmpsb
cmp
sahf
lret
divps
addb
mov
dec
adc
out
sbb
dec
cmp
xchg
push
insb
scas
and
repz
mov
xor
fsubs
pop
movsl
cmp
dec
dec
ret
add
xchg
cmp
mov
xor
add
jbe
jne
and
or
pop
xlat
movsb
repz
adc
add
cli
cmpsl
mov
add
es
push
push
in
add
mov
lret
and
push
xlat
insb
movb
arpl
jmp
xor
daa
sbb
les
push
sbb
aad
mov
stos
sbb
test
lock
xor
enter
jo
add
adc
je
popa
jo
icebp
stos
mov
push
xchg
cltd
jb
rolb
sub
into
fistl
xchg
pop
push
insl
adc
int
fistl
cmp
jbe
mov
ds
iret
and
adc
jbe
mov
pusha
add
add
inc
add
xor
call
xchg
sub
fldcw
imul
jecxz
dec
xchg
std
daa
mov
fcoml
sub
loop
cld
inc
cmp
add
dec
scas
gs
push
adc
fs
mov
loope
lock
shrl
dec
pop
pop
in
jecxz
cmc
push
or
add
push
xchg
sbb
repnz
addl
fstpt
imul
and
imul
or
repz
jns
push
cmpsb
std
mov
les
add
stos
adc
insb
gs
cmp
mov
int3
stos
cwtl
mov
addr16
add
xchg
sbb
popf
loop
or
adc
push
inc
inc
add
mov
fnsave
das
jbe
push
mov
sub
add
or
jno
ds
xchg
add
inc
ljmp
stos
pop
sub
leave
icebp
es
jge
bound
js
sbb
inc
push
inc
add
fistpl
mov
mov
mov
mov
jge
stos
xchg
fs
test
xlat
movsb
push
je
cmp
imul
inc
jns
inc
add
cmpsl
pop
mov
decl
jne
dec
add
fdivrs
jl
iret
push
dec
jnp
add
rorl
jno
cwtl
xor
lret
inc
add
fiadds
jbe
jb
dec
dec
jnp
loope
mov
dec
fadd
add
jnp
in
dec
push
add
xor
mov
add
jo
fiadds
xchg
in
pop
push
data16
add
cltd
mov
ficomps
addb
fsub
pushf
push
mov
mov
add
cli
hlt
jo
xchg
sbb
aam
sub
jecxz
ret
or
out
inc
push
push
daa
int
mov
call
rolb
jg
rolb
mov
push
pop
rolb
cmp
push
fdivrl
mov
js
stos
in
pop
rorl
xchg
shr
shr
cmp
sub
dec
cltd
pop
dec
movb
std
mov
sub
xor
out
clc
pop
xchg
and
and
mov
xor
mov
xor
data16
aas
fmuls
sbb
nop
inc
add
loop
push
outsl
ret
inc
jo
jle
insl
push
mov
call
leave
pop
ret
push
lea
cmpsb
sahf
or
push
push
jae
lret
mov
negl
fsub
test
jo
out
push
dec
movsl
pop
mov
paddw
aam
sbb
popf
test
add
xor
aad
jns
and
mov
sub
inc
add
jle
in
mov
xchg
fnsave
or
pop
dec
pop
mov
lods
sbbl
popa
push
adc
push
fidivrl
cmp
push
enter
mov
mov
mov
cs
fdivp
xchg
sub
aas
dec
enter
inc
add
xchg
push
mov
ss
sub
xor
bound
jo
gs
dec
jb
mov
mov
add
mov
mov
ds
pop
cld
movsb
lahf
jp
leave
repnz
hlt
fistl
dec
pop
jne
add
hlt
lea
mov
addb
les
pop
sbb
add
in
mov
add
daa
cld
dec
inc
add
add
mov
xchg
inc
sbb
mov
jg
test
test
push
dec
rolb
ja
push
shl
lds
mov
lock
pop
arpl
dec
jp
dec
pop
out
xchg
rcr
push
jg
mov
adcl
fisttpll
daa
xor
add
sahf
pop
lret
mov
test
add
scas
out
jecxz
add
addb
xchg
pusha
add
sbb
sub
pop
les
data16
aam
pusha
add
loope
dec
pop
or
out
popf
push
dec
cmpsb
iret
dec
fwait
mov
shll
icebp
jb
add
mov
gs
inc
outsb
mov
dec
dec
mov
or
movl
push
lea
sub
outsl
mov
sub
imul
daa
jnp
add
mov
sbb
sbb
stos
loop
push
add
add
add
test
outsb
xlat
pop
jnp
jg
add
bound
lock
scas
test
jns
daa
dec
mov
push
ret
mov
cltd
dec
dec
in
adc
sbb
mov
js
repz
loop
les
dec
jnp
retw
ficoms
or
pop
lcall
popa
shr
bnd
fs
add
dec
dec
test
call
xor
add
imul
ficomps
aam
adc
add
sub
xchg
out
xlat
das
shll
add
mov
int3
push
cmpsl
xchg
jnp
or
ret
sub
xchg
inc
adc
popa
xor
add
jmp
mov
push
stos
dec
add
mov
or
outsb
out
push
add
rolb
shrl
xchg
dec
cli
rolb
add
bound
addb
mov
mov
add
addr16
out
cwtl
push
adc
mov
add
or
and
fcmovnu
sbb
adc
int
cmp
adc
daa
or
sbb
sub
xchg
bound
xchg
fidivs
sar
mov
sub
addb
add
adc
push
add
addb
in
or
adc
jnp
jl
testl
outsb
xor
mov
cmp
or
stos
ret
and
mov
push
jne
jmp
imul
lret
stos
cld
cmpsl
bound
pop
sti
aas
dec
dec
mov
pop
imul
xor
int3
dec
stos
mov
repz
cmc
in
ljmp
cli
test
sub
sbb
test
pushf
fwait
les
cmp
out
aaa
pushf
sbb
mov
and
addb
loope
loopne
hlt
stos
mov
adc
add
mov
loop
add
push
aas
add
add
jns
arpl
inc
add
dec
jg
add
xor
cmpsl
mov
mov
dec
pop
pop
clc
xchg
push
add
lock
cld
ds
mov
add
mov
sbb
add
cmc
and
shlb
push
or
int
xchg
xchg
ds
mov
jae
push
int3
sahf
movb
add
bound
jle
or
scas
dec
lret
xchg
lock
out
lret
xor
cmpsb
loope
dec
aad
add
sub
fcom
repz
jbe
sbb
cmp
test
pop
repz
inc
mov
inc
add
out
fidivl
fimuls
dec
push
jg
add
mov
add
ret
inc
add
insl
and
jns
pop
dec
xchg
jbe
add
add
mov
fsubrl
call
mov
push
or
adc
pop
jmp
iret
inc
add
mov
xchg
mov
pop
inc
pop
addb
add
add
les
in
jnp
and
ds
test
daa
mov
lds
xchg
shll
add
lcall
test
pop
outsb
je
dec
std
cmp
and
daa
mov
cmpsl
and
jo
mov
bnd
xor
dec
in
add
movb
push
mov
add
ret
ret
pop
dec
adc
xor
add
insb
inc
add
xchg
inc
add
xchg
push
in
dec
clc
mov
ret
pop
cltd
push
pop
push
add
iret
dec
mov
add
leave
addb
sub
minps
es
rcrl
int3
pusha
add
xchg
aaa
jb
sbb
std
mov
in
decl
je
add
insb
mov
mov
lahf
or
sbb
mov
out
push
stos
adc
pop
jo
iret
ret
push
inc
add
sbb
je
fnstcw
add
sbb
cld
jge
inc
add
jo
and
ja
pusha
add
push
add
add
add
clc
jns
adc
loope
add
add
adcl
add
sahf
cwtl
add
or
scas
mov
lahf
jbe
pop
pop
les
out
add
pop
inc
add
add
mov
arpl
add
dec
sbb
mov
push
cmp
insb
enter
mov
test
sbb
fwait
ror
pop
dec
fmul
icebp
imul
xchg
jmp
pop
rcr
out
jge
or
add
inc
add
cmp
outsl
add
addr16
jl
pop
outsl
je
js
adc
mov
cli
std
fldl
mov
xchg
mov
push
add
jmp
or
mov
pop
ret
inc
add
or
dec
jg
mov
xor
and
and
cs
add
or
push
bswap
lahf
ret
adc
jge
xchg
mov
into
xor
insb
aam
loopne
arpl
add
les
mov
insl
test
sti
stc
xchg
xchg
push
rorl
fcomi
cs
sub
pop
js
pop
pop
jp
jbe
adc
sar
inc
add
pop
lret
push
int3
out
lods
pushf
loopne
insb
jle
add
jmp
movb
add
mov
roll
add
repnz
stos
xchg
inc
enter
sbb
sahf
imul
test
loope
jb
dec
imul
repz
jo
dec
sub
jmp
or
mov
in
mov
dec
ja
xor
xchg
sub
sub
push
dec
jmp
imul
xchg
mov
repz
push
fcmovnu
sahf
mov
add
test
movsl
ss
sub
mov
sbb
fcoms
jmp
add
mov
pop
repz
add
jbe
adc
dec
mov
add
repnz
out
leave
mov
int3
stos
ss
jne
xor
push
mov
add
in
nop
xor
mov
out
dec
xor
or
sbb
ror
add
jns
lock
movb
mov
sbb
ret
aam
jno
add
push
leave
xor
add
add
jne
add
mov
test
lcall
xor
xchg
roll
ljmp
add
cmp
mov
inc
mov
leave
push
mov
jg
adc
cmp
xchg
mov
loop
xchg
addr16
sub
xchg
cmp
cmp
out
leave
icebp
std
lahf
movsl
lahf
ret
mov
push
pop
and
or
add
js
jne
mov
call
lret
addb
add
push
adc
mov
mov
movq
outsl
add
mov
sub
cmp
icebp
xchg
sbb
mov
add
loope
pop
movb
dec
cltd
pusha
add
mov
add
sbb
cmpsb
jle
loop
jle
add
mov
test
inc
add
sub
pusha
add
ret
jg
scas
push
jb
sub
add
jb
or
inc
add
xor
hlt
mov
fnclex
and
push
xchg
nop
dec
std
push
addr16
dec
test
mov
adc
cmc
mov
aad
es
jg
popf
shl
add
sbb
rcr
mov
dec
std
add
sub
movntps
add
repnz
rcrb
repz
stc
jne
lahf
inc
mov
stos
adc
ret
ficompl
cmp
xchg
sbb
insl
enter
mov
mov
cwtl
jns
lods
out
mov
testb
sub
or
movsb
stc
xchg
inc
add
loop
fs
pop
pop
shrb
mov
push
mov
bound
mov
mov
es
jae
jns
in
lea
jmp
lea
ds
jns
mov
rolb
gs
inc
add
imul
imul
jl
mov
movsl
call
dec
lret
mov
cs
pushf
xchg
shll
mov
aad
fsubrs
int3
int3
repnz
rcl
cmovb
sahf
push
pop
je
add
or
xor
add
sbb
jge
subl
jne
cli
xchg
aaa
std
repz
daa
add
jnp
pop
ret
lret
mov
enter
imul
les
lret
sbb
add
add
iret
mov
es
lods
rol
add
adc
adc
aam
call
or
and
and
lahf
pusha
add
jo
hlt
cmpsl
int3
repnz
or
xor
movsb
fisubrs
daa
add
test
adc
ret
das
add
add
dec
je,pn
xlat
loop
faddl
and
iret
addr16
xchg
and
lods
inc
xor
add
mov
inc
fmuls
mov
hlt
or
sbb
or
daa
ss
loop
sti
or
addb
sahf
dec
outsl
out
mov
fs
sahf
in
sbb
sarl
rolb
lcall
iret
and
sub
mov
push
add
dec
mov
xchg
je
out
push
push
sub
add
add
sub
push
js
add
mov
loope
mov
jns
lahf
xor
add
movsl
sbb
jg
add
mov
lahf
sbb
arpl
cmpl
in
push
mov
shll
add
flds
dec
outsl
sbb
add
add
sti
inc
add
gs
aaa
lods
push
push
adc
jl
dec
xchg
mov
push
adc
mov
add
imul
ss
or
sbb
les
lret
lahf
fisubs
mov
stos
leave
push
hlt
mov
add
dec
clc
adc
jmp
sti
call
add
inc
inc
mov
shll
mov
fsubl
pop
sbb
js
push
inc
mov
mov
inc
add
mov
jmp
xor
add
pop
adcl
insb
lret
das
mov
lahf
loop
addb
dec
cld
add
movb
aaa
mov
or
cmp
mov
jae
lcall
pop
rol
test
inc
bound
fwait
pop
mov
add
in
cmp
cmp
shlb
pushf
lret
mov
jp
jge
pop
cmovl
mov
enter
dec
in
add
xchg
jnp
ljmp
add
lock
lock
ret
lcall
mov
xchg
xor
shrl
add
and
leave
inc
js
mov
ror
cmpsl
pop
dec
pop
std
fucomp
xchg
jns
sahf
pop
roll
cli
stc
sbb
test
push
adc
jns
dec
dec
lcall
pop
pusha
add
add
mov
ds
in
pop
push
xchg
call
push
inc
add
test
shrb
scas
aaa
inc
inc
add
or
lods
das
and
and
pop
clc
push
dec
call
daa
cmpsb
or
adc
add
mov
fidivrl
dec
jne
or
cmp
or
sbb
adc
jns
jl
in
pop
and
fbstp
mov
iret
test
jbe
jge
pop
inc
add
pop
mov
lods
push
add
mov
add
aad
decb
add
in
add
push
mov
sbb
push
outsb
mov
lea
loopne
idivb
adc
mov
push
jmp
mov
fdivrs
jp
sbb
inc
add
insb
or
enter
aaa
iret
in
movb
bound
lcall
sbb
mov
cld
xor
add
xchg
dec
mov
testl
imul
mov
inc
add
jl
jmp
adc
push
sbb
and
add
push
mov
testb
or
aam
in
enter
push
and
stc
dec
outsb
in
test
lcall
mov
popf
out
out
scas
scas
mov
mov
inc
cmp
aaa
pop
adc
push
loop
mov
mov
pop
addb
xchg
jecxz
mov
fwait
mov
ret
mov
rolb
and
mov
mov
ljmp
xchg
push
insb
mov
push
adc
je
and
ss
lea
mov
sbb
add
mov
out
add
and
inc
dec
dec
cmpsb
fnstsw
add
adc
jg
leave
data16
shrl
adc
dec
lret
sbb
pushf
insb
fidivl
push
mov
stc
xlat
push
add
add
lret
imul
mov
imul
popa
add
pop
lds
mov
pop
add
sbb
mov
add
xor
sbb
fs
pop
pop
aam
jecxz
pusha
add
push
sbbl
aaa
and
push
xchg
inc
or
stc
in
jb
add
call
lds
loope
inc
add
aam
inc
add
adc
cltd
addb
movsl
sbb
mov
inc
add
cli
cmp
mov
fisubl
push
mov
and
dec
add
sbb
ret
int
je
or
push
push
adc
cmpsl
and
sbb
dec
push
inc
add
xchg
adc
addb
jbe
add
jno
add
add
mov
sub
pop
pop
push
sbb
mov
xchg
inc
add
or
pop
sub
xchg
or
scas
mov
jmp
pop
sti
movb
sbb
movl
aam
ret
pop
cmp
and
pop
mov
push
rcrb
mov
xor
repz
xlat
xor
dec
popa
das
mov
mov
pop
insl
clc
mov
js
jl
into
lock
inc
add
mov
enter
xchg
iret
pop
adc
clc
mov
add
lock
add
ret
push
fisttps
rcll
add
repz
in
xchg
std
adc
call
or
pop
xlat
fisttpll
les
and
daa
pop
pushf
inc
add
in
aas
jl
sti
dec
aam
adc
inc
aas
scas
dec
dec
push
out
mov
push
push
leave
movsb
xor
inc
add
pop
out
add
push
mov
jp
fucomip
jp
jecxz
adcl
arpl
sub
in
pop
arpl
adc
add
mov
add
push
pop
dec
sbb
les
out
xchg
cwtl
mov
inc
add
in
out
ds
pop
mov
pop
dec
ret
jmp
pushf
adc
pushf
xchg
cmp
stos
movsl
adc
mov
mov
fcoml
cmp
xor
dec
int3
push
cmpsl
dec
add
cs
rolb
mov
lods
dec
ret
scas
add
in
aaa
inc
aam
daa
mov
jae
xchg
pusha
add
clc
push
test
insb
movb
add
adc
xchg
push
sbb
add
xchg
addb
cli
push
pushf
loopne
jne
jae
push
add
push
cltd
jle
dec
pop
mov
adc
dec
dec
mov
fcomps
out
stos
hlt
mov
popf
or
jge
or
out
jnp
test
pop
push
in
and
insl
cmp
pop
orl
inc
add
nop
pop
cmpsl
lret
inc
and
adc
mov
addb
or
add
inc
and
cmp
hlt
lods
ficomps
fs
setno
dec
xlat
test
xor
inc
add
call
mov
lcall
adc
sbb
lret
jnp
add
xchg
arpl
add
inc
out
in
test
jb
enter
or
out
jmp
jo
mov
enter
xchg
xor
xchg
xchg
aam
xchg
rolb
pop
insl
movb
enter
aad
sub
mov
and
out
test
mov
push
lret
shll
sbb
cmpsl
push
pop
ds
test
jbe
mov
iret
das
jge
mov
jne
mov
xchg
xorl
add
rcl
in
rolb
and
aad
adc
orps
mov
jne
mov
push
mov
xchg
lods
inc
in
dec
sti
and
mov
push
add
call
add
sbb
sub
add
in
aam
add
mov
shrb
inc
dec
sahf
dec
mov
movb
xor
adc
nop
fimull
add
add
int3
lret
or
ja
adc
hlt
sbb
ja
aaa
sub
aad
add
inc
add
scas
jae
leave
adc
push
adc
hlt
dec
iret
dec
mov
andl
mov
adc
xchg
add
jg
int3
push
stc
loope
test
jb
iret
mov
cmp
movsl
jns
cli
sbb
add
shll
inc
add
push
mov
cld
test
dec
sub
jne
or
fs
out
and
mov
loopne
lret
or
int3
call
scas
mov
adc
sahf
idivb
hlt
int
inc
add
ja
les
mov
jb
inc
popa
inc
add
es
jne
xor
dec
mov
mov
ja
je
dec
test
mov
adc
xor
push
cmp
xchg
cli
inc
and
mov
mov
rolb
sti
xchg
xchg
or
pop
add
cltd
test
std
insb
out
ret
mov
adc
cmpsb
int3
jns
inc
mov
dec
xchg
push
xor
test
adc
fwait
sbb
movsb
cltd
push
pop
inc
add
pop
pop
add
mov
lea
xor
sub
popf
gs
or
pop
test
fnsave
outsl
sarl
inc
imul
add
cltd
loope
add
mov
push
lods
orl
jg
and
ret
rcrb
push
ficomps
add
in
or
add
push
mov
add
sub
add
movsb
cli
inc
js
out
rol
add
push
and
int
mov
mov
add
cs
loope
icebp
mov
mov
icebp
bound
std
mov
or
imul
popf
push
inc
add
cmc
ret
daa
aam
int
jecxz
push
push
add
add
pop
mulb
lahf
ljmp
imul
push
not
xor
jle
stos
arpl
or
arpl
dec
adc
mov
pop
mov
mov
cmp
and
loop
lods
outsb
imul
mov
push
fwait
mov
mov
xchg
std
insl
pop
sub
ret
out
cld
sti
insl
push
movsb
mov
mov
rcll
insl
jp
nop
dec
test
das
pop
mov
addb
rorl
add
sbb
add
add
andnps
jae
mov
dec
les
cs
xor
in
fcoml
xlat
out
nop
int
push
mov
jb
and
mov
jns
jne
add
shlw
ss
pushl
mov
or
push
push
push
addr16
mov
sbb
aad
lods
jo
add
mov
sidtl
in
jp
loop
ljmp
cmp
and
mov
cmp
add
out
ljmp
add
push
mov
sub
push
iret
and
pop
xor
xchg
dec
pop
sahf
and
cmp
hlt
dec
stos
clc
dec
dec
cmp
add
xor
jge
addb
mov
sbb
or
sub
mov
addb
add
sub
fstpt
mov
add
adc
pusha
add
lret
test
mov
push
push
lahf
imul
push
fldenv
inc
mov
aaa
repnz
cmp
inc
add
inc
cmpsb
in
push
pushf
jecxz
dec
repz
add
sbb
mov
cmp
cmp
mov
lea
adc
push
ja
jl
rolb
mov
mov
in
add
movsb
or
bswap
or
sub
and
jp
xor
sub
inc
push
popf
jmp
faddl
into
loop
xchg
js
cmpl
scas
mov
outsl
and
inc
add
addb
add
popf
mov
jmp
add
shll
jb
pop
cmp
pop
push
add
xchg
add
rolb
nop
mov
add
stos
mov
or
add
cmp
arpl
add
jb
shll
push
mov
add
push
push
add
pop
mov
jmp
mov
and
inc
add
addb
or
dec
test
insb
imul
add
cmp
outsl
mov
xchg
push
jg
push
sbb
sbb
adc
add
add
pop
sti
fdivs
addr16
add
daa
fucomi
add
xlat
push
adc
xor
dec
gs
jl
std
push
and
mov
adc
xor
and
lods
sub
sub
add
push
adc
enter
inc
pop
push
fisubl
jecxz
ljmp
add
lds
inc
and
andl
ja
pop
in
std
cmp
add
sbb
cld
icebp
insb
and
iret
xchg
add
stos
in
sbb
sbb
fucomi
fiadds
movsl
aam
or
jmp
dec
adc
adc
mov
jbe
add
cwtl
sub
addb
iret
push
push
xor
add
stos
jbe
xor
push
add
mov
mov
decb
cwtl
mov
mov
sub
movsb
mov
ficomps
add
nop
jg
cmpsl
adc
jo
fsts
in
mov
lahf
enter
or
lods
out
pop
push
cmpsl
add
pop
sahf
inc
add
mov
add
cmp
mov
out
scas
scas
adc
pop
xlat
in
add
mov
movsb
jnp
in
insb
stos
add
mov
sbb
push
in
lret
add
pop
lock
mov
mov
icebp
adc
addb
xor
cmp
int
divl
cs
sub
arpl
in
bound
pop
in
enter
xchg
mov
dec
xor
js
jp
enter
add
icebp
ret
mov
or
and
add
xor
and
in
xor
lods
push
add
out
fimuls
inc
add
out
test
adc
add
and
mov
push
push
js
mov
sbb
rorl
xor
lret
mov
nop
mov
in
fs
data16
ds
sbb
jno
mov
test
int3
adc
ja
xchg
jae
sarl
inc
es
lods
movmskps
dec
arpl
pop
mov
adc
test
xor
sub
add
repnz
movsl
loope
out
outsb
decb
push
mov
lods
sub
jge
movsb
cltd
sti
movb
jbe
je
mov
add
clc
jp
add
xchg
sbb
jmp
add
add
xchg
dec
mov
sub
and
jge
test
sbbl
scas
in
jp
jbe
imul
cmp
insb
adc
add
insl
mov
clc
leave
sub
inc
add
js
mov
push
jg
mov
cmpsb
and
addb
icebp
xor
test
imul
xchg
or
pop
pop
cli
shr
xor
cs
fdivr
push
das
hlt
es
sub
int
xor
add
jmp
outsl
add
inc
add
jp
les
push
pop
ret
inc
jmp
or
dec
das
mov
add
shll
add
push
xchg
mov
enter
das
daa
xor
adc
imul
inc
lahf
jmp
in
and
pop
lods
cmp
xlat
test
test
dec
mov
or
fptan
sbb
sub
data16
stc
jecxz
int3
pop
popl
or
stos
inc
add
aas
jmp
and
test
aas
test
dec
pop
push
jne
mov
test
ja
ret
pop
stos
icebp
fmuls
xchg
int3
enter
int
and
xchg
dec
cmp
add
push
pop
mov
jl
repz
stos
in
fdivrs
adc
xor
xchg
and
dec
rcl
add
insb
xchg
lods
hlt
push
mov
push
mov
add
pop
addb
cmp
ja
xchg
pop
adc
icebp
mov
in
cmp
add
or
cmpsb
shl
mov
sub
inc
add
cmpsl
and
outsb
or
ja
fwait
leave
aad
sbb
stc
mov
adc
enter
dec
mov
popa
dec
lock
cwtl
and
sbb
adc
mov
add
repz
add
lds
add
push
in
add
and
cltd
mov
fs
pop
sub
lods
sub
add
pop
and
stos
jmp
mov
jnp
adc
push
mov
pop
inc
add
out
fs
xor
xor
ret
test
inc
add
jno
sub
ljmp
mov
dec
icebp
cli
cmp
mov
push
jle
add
es
aas
adc
enter
push
sub
push
js
push
xchg
test
pop
iret
xor
insl
xchg
das
lret
in
sbb
jbe
test
add
das
cmp
test
and
pushf
movlps
mov
dec
leave
push
or
or
jle
dec
and
mov
add
mov
add
xchg
imul
add
jae
add
je
jmp
inc
lea
cmc
pop
dec
and
xor
push
repnz
pop
push
in
or
mov
cs
cli
into
sub
scas
pop
adc
cmp
fsubp
stos
outsl
mov
inc
push
add
cltd
inc
mull
add
pop
call
sbb
cmc
fwait
inc
rcrb
pop
dec
fistpll
sbb
sub
loopne
loope
push
add
inc
add
sbb
xchg
ljmp
add
add
mov
fldl
or
add
push
inc
fldl
sbb
scas
jl
add
add
push
xchg
jo
mov
das
push
inc
loope
add
mov
add
call
pushf
loop
nop
gs
lods
stc
inc
add
leave
xchg
xor
cmp
adc
push
les
outsl
gs
sbb
pushl
add
pop
mov
ret
or
add
cmp
dec
xchg
jp
sti
add
and
sbb
pop
test
inc
nopl
outsl
mov
xor
inc
add
mov
cmpsl
addb
jecxz
fistpll
and
loop
jmp
jmp
lea
faddp
add
mov
ljmp
add
mov
jns
add
fwait
insb
decl
test
xor
lds
insl
aam
push
mov
mov
iret
clc
inc
add
inc
add
ja
xchg
insl
pop
or
lods
jnp
fdivrs
add
add
push
popf
popf
aam
mov
sbb
enter
add
lds
out
add
pop
lret
inc
add
ret
pop
or
test
test
loop
outsl
out
lock
mov
push
sub
pop
mov
jp
repnz
out
shlb
fwait
xor
mov
push
aaa
push
add
adc
addb
aaa
jno
sub
pop
les
in
add
lods
les
mov
fdivrl
xchg
push
jne
push
push
xchg
xor
addb
inc
enter
mov
pop
and
ret
mov
adc
push
jecxz
add
out
jae
std
addr16
add
mov
inc
add
mov
add
mov
loop
rorl
ret
arpl
xchg
out
mov
outsl
xor
add
and
pop
cmp
push
addr16
xor
int3
filds
popa
ss
loopne
sub
loope
add
mov
clc
daa
in
cmp
add
mov
add
and
pop
sbb
mov
mulb
jmp
insl
mov
xor
in
mov
mov
pop
and
or
aas
jae
jno
outsl
pushf
ljmp
pop
add
aas
cli
inc
push
adc
or
push
sub
add
mov
lds
loope
xor
stos
ja
cwtl
jle
inc
orl
lods
or
xchg
push
add
jmp
addr16
dec
in
sub
fiaddl
add
push
test
add
sbb
aam
movsl
sbb
lret
mov
push
push
sub
add
add
call
sub
jp
loopne
call
hlt
fidivrl
jle
push
add
scas
xchg
push
ret
fcmovu
pop
hlt
aam
xchg
push
int
add
outsl
adc
fnstsw
ja
data16
jg
add
dec
in
cwtl
xor
test
es
add
push
lods
cmpsb
fstps
cmc
jnp
out
les
mov
loope
pusha
add
push
and
add
aaa
pop
push
out
dec
sbb
inc
add
mov
cmpsl
push
sti
ljmp
push
add
stos
loopne
mov
add
rolb
push
add
jge
loop
add
cmpsl
movb
mov
cld
xlat
fucom
pop
cwtl
gs
ss
test
mov
mov
into
cmp
insb
push
comiss
and
out
testl
add
mov
adc
sti
xor
sub
movsl
lods
push
cld
ja
dec
stos
repnz
adc
ja
cmovno
xor
stc
addb
inc
add
cmc
add
fbstp
sub
cmp
inc
add
into
clc
jecxz
ret
stc
sub
add
mov
fmuls
inc
pop
ss
test
cmpsb
and
mov
pop
sbb
rcll
pop
jbe
cld
stos
stos
sbb
pop
pop
dec
aas
mov
pop
sarl
sub
cmp
pop
mov
data16
addb
pop
scas
sbb
add
nop
movsb
insb
psrld
cmp
btsl
add
cmc
lcall
cmc
fimuls
cmpsb
out
sbb
idivb
loopne
mov
cmpsb
gs
lods
lods
and
sub
sub
sbb
loop
jne
stos
xchg
xor
fnstsw
jmp
add
sbb
sbb
push
add
cli
fimull
test
mov
es
mov
clc
xor
ret
mov
in
xchg
lods
dec
adc
enter
scas
popa
lods
cli
lcall
mov
push
sbb
jno
subl
je
stos
xor
and
aam
es
js
fisubl
mov
add
jbe
ret
mov
add
add
stos
mov
and
xchg
in
add
out
aad
test
arpl
push
add
push
xchg
jl
rolb
push
add
insl
mov
outsb
mov
xor
mov
dec
icebp
jmp
aas
jns
inc
add
add
add
jns
addb
xor
inc
in
mov
xor
in
cmp
cltd
push
clc
leave
subl
push
aam
inc
add
enter
add
mov
jp
push
aad
add
and
rcl
cli
adc
mov
push
xchg
jl
in
and
add
mov
daa
dec
pop
push
lret
pushf
jbe
fwait
xor
cmp
cmp
adc
cmpsl
jbe
add
sbb
fbld
add
int3
out
xor
add
fisubrl
test
dec
xor
add
lahf
or
or
add
pop
movsb
pop
push
jmp
push
pushf
or
pop
movsb
inc
lods
mov
and
mov
add
jmp
cmp
js
inc
add
es
xchg
and
sbb
add
push
es
mov
les
jb
inc
add
mov
ret
pop
sbb
mov
mov
cpuid
or
repz
dec
sbb
add
xchg
js
test
mov
dec
xchg
push
addb
inc
mov
addr16
adc
test
cwtl
arpl
inc
mov
shl
cmp
or
fistl
inc
in
pop
pop
mov
xchg
pop
out
test
xchg
int
test
lods
sbb
cmp
vandnps
in
bound
pop
cmpsl
push
sarb
lahf
jp
and
dec
or
mov
leave
add
repz
mov
jns
setg
sbb
xchg
test
rcrl
ja
in
jb
pop
repnz
out
sbb
or
add
cvtps2pd
mov
nop
lock
icebp
test
aas
push
loopne
cmc
dec
movsw
push
jle
aad
add
and
ret
in
jns
mov
in
push
jae
fimuls
lds
xchg
fldl
jp
add
and
rolb
addr16
mov
or
or
inc
pop
xor
into
popf
aam
dec
inc
add
inc
add
test
add
xlat
pop
ficoms
dec
sub
int3
in
pop
push
inc
cmpsb
pop
lcall
or
cmp
add
insb
and
inc
mov
hlt
or
scas
mov
rolb
loopne
dec
adc
pop
int
sub
pusha
add
dec
add
mov
test
in
imul
lea
jb
clc
stos
cltd
into
dec
adc
inc
sub
aas
idiv
stos
jecxz
jecxz
sbb
je
xchg
sub
sbb
and
jecxz
adc
jge
lock
jo
jp
mov
xlat
jmp
or
pcmpeqw
addr16
movsb
cmp
push
ret
insl
popa
call
mov
pop
stos
ss
push
ret
sub
lods
inc
add
clc
imulb
cs
cmpsb
out
xchg
lcall
les
sub
mov
rolb
lods
adc
pop
dec
jb
je
add
or
dec
rolb
inc
aaa
xchg
fldenv
dec
pop
les
xchg
daa
addb
or
adc
jnp
sub
xchg
cltd
clc
inc
movsl
pop
adc
shl
insb
aam
or
add
mov
hlt
or
sbb
fiadds
add
add
stos
jns
inc
cmc
loop
fs
int3
cwtl
ret
pop
mov
jg
push
xchg
push
add
add
push
or
mull
push
jnp
ret
sub
lahf
mov
inc
add
mov
pop
mov
ja
dec
in
sbb
jle
and
inc
fnstsw
sub
sbb
lods
dec
call
mov
aam
call
push
jp
pop
daa
aam
pop
fcoms
inc
cmpsb
dec
mov
and
push
ljmp
mov
push
ret
movsl
or
mov
adc
inc
push
dec
int3
sti
pop
gs
mov
pop
jnp
sahf
popf
cmp
pop
xor
xchg
mov
add
jg
in
pop
daa
cmp
js
inc
add
rolb
inc
pop
pop
mov
dec
add
scas
push
push
icebp
pop
jne
and
loope
sti
test
xchg
hlt
imul
xchg
sub
push
adc
dec
pop
mov
add
addb
js
sub
add
stos
sbb
and
out
xchg
imul
inc
incl
cmp
cli
push
xchg
fdivrl
and
lret
ljmp
sub
xchg
adc
xchg
addb
pop
or
test
push
jno
pop
push
xor
jne
scas
sbb
lods
clc
addb
pushf
xchg
lahf
inc
add
lods
pop
int3
call
js
add
pop
pop
jns
outsl
dec
sub
xor
out
out
lods
outsb
push
pop
pushf
test
mov
sbb
jg
sub
arpl
dec
or
scas
call
sub
cmc
fcom
jbe
mov
add
popa
dec
or
mov
ljmp
lret
xor
fdivr
jle
test
jg
bound
sahf
xchg
sbb
mov
dec
pop
ljmp
je
loope
dec
xor
jno
out
pop
add
out
xor
xchg
mov
push
adc
cmp
stos
add
call
adc
fstp
lock
or
repnz
rcll
les
ret
dec
mov
stos
lcall
cmpsl
cmp
pop
ret
or
push
js
add
add
mov
pop
into
in
addr16
cmpsl
or
add
and
shll
cmpsl
inc
shrl
in
xorl
jge
add
outsl
cmpsb
push
mov
lods
ret
cmp
or
test
and
inc
add
lret
insl
cmp
xor
insl
insb
ss
fstpl
test
fstps
or
push
and
lret
addl
sar
mov
ret
sub
adc
cmp
inc
add
xchg
fnstcw
loop
mov
pop
dec
adc
insb
sbb
add
cli
push
test
xchg
jg
pop
xor
fldcw
jge
add
mov
les
adc
das
arpl
repz
test
dec
xor
inc
xchg
cmp
add
ret
xchg
lahf
sbb
or
insb
mov
add
push
mov
add
fwait
jmp
mov
fsubrl
pushl
lcall
mul
push
sbb
jg
add
xorl
pop
jb
lahf
mov
pop
xlat
jno
aaa
rcrl
movb
addr16
out
pop
vpavgb
sbb
hlt
dec
and
mov
lea
aam
cmp
adc
xchg
jmp
stc
xorl
jbe
out
xor
mov
ficomps
and
fs
movb
sbb
push
dec
imul
std
jp
mov
cmp
in
sahf
mov
cli
daa
mov
jl
xor
mov
call
stos
outsb
ljmp
dec
pop
pop
adc
cli
mov
lds
lret
dec
dec
push
xchg
popl
mov
and
cmp
jp
xor
movsb
mull
cmp
cmp
je
loopne
int3
mov
scas
cli
call
test
adc
xchg
loopne
test
sarb
les
gs
dec
rolb
into
push
cmp
xchg
repz
xchg
jb
jmp
out
jb
in
mov
add
pop
jnp
addr16
shrl
in
les
mov
sbb
sub
push
arpl
ja,pn
jp,pn
mov
inc
add
add
add
aad
lds
jle
pop
cmp
icebp
xchg
sar
sti
cltd
sbb
leave
test
cwtl
xchg
sarl
mov
add
je
bound
sub
sub
sbb
lods
nop
shll
stc
sarl
fisttpl
cld
pop
movb
adc
add
jnp
add
xlat
movsl
add
jg
roll
int
das
push
mov
dec
cmc
loopne
lcall
push
test
push
dec
pop
pop
iret
notl
insb
sti
sbb
xchg
int3
add
lods
and
and
ficomps
inc
arpl
mov
subl
movsb
and
ja
add
or
cmpsb
or
leave
adc
xor
mov
cs
call
sbb
ret
popf
sbb
sbb
push
mov
cld
cwtl
shl
dec
xchg
jmp
mov
mov
pop
and
sbb
inc
and
ss
lds
cmp
dec
dec
int3
xchg
xchg
push
and
ret
rolb
inc
add
push
add
dec
xchg
sub
and
lcall
add
mov
jge
jecxz
iret
ret
jmp
jbe
and
bound
stc
add
mov
xor
hlt
sahf
pop
jp
xchg
mov
xchg
inc
dec
into
popa
jl
les
out
pop
xchg
push
lods
push
clc
mov
mov
pop
cmp
push
addb
adc
add
mov
add
mov
cmp
ljmp
pop
cmp
inc
add
add
out
xorl
mov
pop
fists
insl
test
and
add
push
and
sbb
xor
mov
mov
icebp
lahf
pushf
mov
enter
and
test
pop
test
notb
dec
inc
jne
ljmp
in
es
xchg
jnp
ret
adc
shll
jno
in
hlt
dec
addb
add
xchg
cmc
mov
fldt
pop
pop
dec
xor
jecxz,pn
xchg
xor
imul
lds
mov
mov
jo
xor
cmpsl
pop
enter
add
cli
and
jb
insl
or
xchg
push
adc
mov
push
call
xchg
das
xchg
xchg
jl
lods
icebp
nop
sub
in
aad
mov
loope
fldl
add
sti
test
inc
push
lahf
out
js
ret
or
sbb
shlb
cli
sub
loope
xor
add
ficoms
rolb
add
adc
lods
lea
add
xor
or
icebp
fdivrs
jecxz
jg
mov
xchg
incb
mov
loop
push
fstps
xchg
leave
xchg
imul
mov
mov
loope
flds
inc
add
sub
movd
inc
inc
add
and
das
mov
push
push
add
mov
addb
pop
mov
ret
sbb
add
aas
out
sub
lcall
shll
add
fisubl
push
mov
cmc
rolb
dec
in
adc
xchg
inc
add
xchg
fcomps
add
cmp
dec
ret
fisubrs
jecxz
test
rorb
lahf
mov
lret
es
lods
leave
in
notl
sub
add
jno
imul
je
je
lahf
sub
sarl
xchg
jbe
mov
mov
or
std
bound
xor
pop
int
cli
xchg
jbe
push
xchg
sarl
add
add
jno
in
xchg
inc
sarl
cmp
cmp
adc
dec
fs
sub
sub
inc
dec
pop
mull
or
sub
add
int3
lods
or
xchg
cltd
mov
call
adc
sub
push
pop
addb
xor
push
std
loope
movsb
ss
add
mov
sbb
hlt
inc
fidivrs
mov
mov
pop
jns
adc
dec
outsl
push
inc
xchg
cmp
shll
stos
xor
daa
in
inc
inc
mov
and
repz
frstor
mov
shrb
cmpsb
test
mov
sub
bound
push
adc
jp
sbb
arpl
adc
sahf
test
jb
aas
mov
loopne
xor
sti
mov
sbb
mov
aas
lea
jbe
bswap
add
jno,pt
mov
adc
sub
and
scas
add
and
jg
add
out
xor
add
fldl
push
pop
imul
push
push
dec
jnp
cmp
or
mov
sar
jbe
fmul
push
les
in
cs
cltd
sti
int3
xor
cmp
and
sub
sub
vpaddusw
adc
adc
add
nop
mov
sarl
repnz
aaa
pop
popf
cmp
add
fcmovb
add
adc
fwait
push
add
add
int3
inc
add
add
loope
or
lods
mov
fstpl
add
xor
rcll
pop
sub
in
out
add
jnp
dec
hlt
mov
fiadds
adc
lahf
inc
or
mov
flds
hlt
xor
add
ss
mov
adc
add
outsl
fsubrl
and
xor
add
add
setae
call
in
add
das
sbb
sub
jle
jge
shlb
add
pushf
push
add
fcoml
sub
lds
push
adc
jnp
xchg
mov
lds
jnp
xchg
loopne
addr16
aaa
inc
add
mov
mov
ret
sbb
add
xor
cmp
xchg
decl
cwtl
adcl
sahf
pop
sub
loope
inc
add
sbb
jl
xchg
adc
add
in
mov
pop
ss
jmp
jae
imul
insb
cld
sub
mov
lea
cmp
jmp
dec
add
and
fimull
add
je
add
jmp
enter
mov
enter
and
shr
mov
mov
test
jno,pt
lock
push
add
pop
int
ss
and
lret
mov
stos
mov
jae
xchg
fstps
push
movsl
clc
sarl
notl
add
mov
cli
leave
mov
fists
aaa
fldt
mov
jnp
sub
xor
push
sbb
lds
inc
add
jnp
add
push
push
ja
jnp
int
add
cmc
jg
stos
mov
dec
jle
sub
add
and
mov
sbb
jno
das
rclb
xlat
setns
imul
or
pusha
add
int
loop
neg
push
out
pop
mov
ljmp
fistl
imul
test
aam
lea
bound
iret
xor
enter
ds
inc
add
movb
mov
sub
mov
mov
out
xor
loopne
idivl
leave
outsb
or
pop
xchg
cli
push
inc
add
xor
lods
mov
mov
into
mov
jmp
loop
xchg
jle
xor
movsl
enter
add
lcall
or
add
sub
add
or
jge
imul
lds
pop
pop
xchg
out
out
and
shll
imul
or
add
mov
scas
int
inc
xor
rolb
sbb
scas
dec
icebp
aas
xchg
ja
mov
add
mov
shll
add
cs
pcmpgtw
loope
insb
sub
ss
cld
aaa
push
add
mov
add
ja
adc
or
inc
cs
cwtl
add
and
xchg
ja
jae,pn
mov
add
fcoms
pop
outsl
outsb
fs
in
cmp
pop
inc
add
mov
add
shrl
mov
mov
movsl
stos
and
add
or
lahf
inc
pop
fistpl
les
ds
cmc
pop
fsts
push
out
scas
jge
cwtl
xchg
adc
movsl
fyl2xp1
ficomps
pop
jo
out
jp
aaa
xchg
or
jl
adc
cmpsb
jmp
and
arpl
inc
add
jmp
xchg
loopne
filds
sti
push
fists
fmull
lahf
xor
jb
es
mov
adc
mov
push
repnz
dec
sbb
push
fwait
xor
adc
dec
jp
add
dec
mov
add
mov
jb
inc
add
push
out
or
add
bound
mov
lcall
test
fsubr
or
out
cmpsl
mov
lcall
xchg
sub
fcmovnbe
adc
ja
addb
pop
std
outsl
call
js
aad
add
addb
mov
inc
add
xor
sbb
jg
cmp
jp
addb
or
call
adc
mov
add
pop
or
jae
icebp
fndisi(8087
push
pushf
addb
sarb
mov
add
adc
inc
cmp
xor
push
decl
imul
dec
icebp
jl
inc
add
loopne
mov
scas
scas
lds
mov
jbe
dec
push
pop
adc
repz
pop
jecxz
push
xor
sub
pop
mov
movsb
mov
sbb
adc
cmp
cmc
mov
ret
jnp
and
xor
mov
mov
add
jecxz
pop
repz
or
subl
adc
cwtl
xor
add
pop
mov
dec
and
ficompl
pop
test
nop
pushf
lods
mov
cmc
fnstsw
xor
jne
dec
push
ficompl
mov
and
add
lods
sti
cltd
idivl
in
sub
inc
add
add
adc
out
mov
xchg
int
jbe
call
rcrl
mov
or
flds
xchg
pop
rolb
dec
sbb
add
jae
shlb
addr16
mov
sbb
pop
and
push
adc
ja
jmp
test
fidivl
or
cs
int
mov
inc
add
test
dec
xchg
addr16
inc
and
es
adc
lret
cmp
insl
test
cs
add
popf
xor
loope
fsubl
xchg
pusha
add
mov
in
and
scas
cmpsb
insl
mov
add
xor
jo
testb
mulb
add
sub
pop
les
cmp
enter
mov
lods
hlt
sti
test
push
mov
gs
rolb
jbe
adc
add
negb
mov
push
loop
mov
stc
les
xor
mov
adc
jnp
int3
test
addb
pop
add
pop
sub
daa
lret
adc
pop
in
xor
sbb
jno
add
lahf
inc
adc
or
mov
repnz
adc
pushl
mov
and
cmp
lea
jnp
aad
inc
add
lahf
jmp
inc
dec
pusha
add
jb
add
mov
add
and
mov
fisttps
jecxz
xchg
dec
cld
in
test
js
ret
repz
daa
or
add
in
pushf
aam
or
movsl
leave
xchg
inc
add
adc
xor
icebp
pop
jle
mov
jmp
xchg
mov
ret
sub
pop
push
push
mov
xor
add
addr16
outsb
aad
shll
fiadds
movsl
loope
insb
sti
insb
lods
cmovp
add
jno
mov
hlt
mov
outsl
pop
into
xlat
mov
mov
das
fisttpl
ja
add
popa
mov
ret
mov
popf
xchg
mov
add
add
nop
push
mov
add
ss
enter
int
sahf
lods
sbb
sbb
movsl
and
addb
inc
and
xor
fsubp
add
adc
lock
add
mov
cmp
mov
jbe
add
insb
aas
loopne
push
mov
add
inc
sbb
lods
test
or
mov
imul
mov
push
xchg
popf
into
test
pop
fildll
clc
jecxz
add
scas
inc
add
jbe
mov
add
mov
fstps
movsl
xor
or
imul
add
jae
push
add
dec
push
or
scas
pop
stos
or
inc
lds
cltd
pop
rolb
out
mov
add
and
mov
sbb
xor
add
or
aas
sbb
adc
nop
jbe
arpl
sub
add
scas
jg
repnz
push
or
inc
add
shl
add
add
mov
aad
add
dec
or
add
icebp
sub
pushl
mov
jle
add
clc
or
xchg
mov
movsl
xorl
repz
xor
mov
stos
addb
mov
or
mov
gs
loop
add
inc
jecxz
pop
mov
mov
inc
push
jnp
add
in
scas
mov
jne
test
xchg
sbb
cltd
cmp
std
cmp
sbb
adc
adc
add
decl
adc
or
mov
xchg
popf
sar
xchg
iret
add
sti
mov
push
mov
pop
dec
adc
inc
lret
jg
lcall
negb
popf
aas
fdivrl
mov
int3
jae
fs
mov
push
insl
icebp
xchg
xchg
adc
cltd
xor
or
hlt
push
fnstenv
and
xchg
and
fs
test
divl
aas
xor
test
adc
or
add
ret
test
pushf
or
add
ret
cmpl
outsl
mov
es
and
jmp
mov
iret
call
frstor
xlat
enter
and
sbb
repz
movsb
or
aam
js
les
add
aas
cltd
sbb
xchg
jns
nop
lock
inc
add
mov
out
addl
and
pop
stos
mov
test
in
shlb
or
cmp
add
mov
add
mov
lds
jmp
popf
mov
movb
enter
rcr
cltd
jmp
sub
xchg
ret
fs
jecxz
enter
fldcw
repnz
jo
xor
push
add
ror
mov
fimuls
mov
popa
in
in
xchg
xor
fcomps
popa
scas
inc
add
and
xchg
mov
inc
xlat
sbb
popa
cmp
in
adc
movsb
mov
out
lcall
pusha
add
ficompl
mov
pop
push
in
cld
xchg
ljmp
fadd
scas
gs
pop
cmp
push
jmp
add
inc
add
stos
push
iret
jge
sbb
test
bound
jno
pop
adc
cmpsb
mov
dec
out
inc
add
daa
ss
pusha
add
imul
push
sub
sub
into
shlb
cmpsb
inc
sbb
pop
rclb
or
mov
xor
sbb
out
fdivrs
stos
jp
xorl
popf
mov
lcall
pop
div
inc
and
adc
cmp
cld
xchg
mov
es
sahf
negl
inc
add
nop
push
je
xor
ret
aaa
cmpsl
loopne
and
push
pop
add
jbe
or
cmp
sub
inc
add
add
inc
addb
lcall
jns
xor
subl
push
pop
mov
addb
cmpsb
push
xchg
mov
cmp
jmp
fwait
and
iret
cmpsl
scas
mov
and
popl
add
push
out
sub
frstor
inc
int3
or
cmp
inc
add
jo
add
jo
dec
and
aad
jno
arpl
xbegin
cmpsb
dec
roll
insb
jbe
cmpsl
dec
mov
pop
pop
mov
add
arpl
nop
lds
mov
jp
dec
cmpsl
and
pop
pop
jbe
sub
inc
dec
adc
ljmp
and
js
xchg
jae
lods
pop
jecxz
inc
jmp
sub
sahf
imulb
pop
icebp
mov
movsb
mov
pop
pop
out
and
out
sbb
cmp
loopne
repz
icebp
mov
xsha256
cmpsb
aam
jb
jge
cmp
ret
cmp
test
movsl
dec
and
and
adc
mov
lds
out
mov
add
in
test
or
cmc
pusha
add
sbb
or
add
ffreep
add
xor
sub
add
push
aad
add
in
jno
add
fwait
addb
add
ljmp
pop
icebp
push
pop
aam
add
cmpsl
and
push
fisubrs
fdivp
fildll
arpl
xchg
jl
ja
arpl
and
dec
shlb
mov
in
mov
pop
mov
popf
insl
into
push
pop
ljmp
addr16
and
mov
mov
add
test
lds
sbb
fwait
int3
mov
sbb
decl
les
ljmp
sarl
mov
inc
jae
or
call
push
inc
cmp
and
push
les
push
cmp
inc
add
push
insl
jno
mov
out
rolb
cmpsb
mov
ds
add
popa
cmp
idivb
jae
js
mov
jb
das
sahf
push
je
nop
dec
cmp
add
sbb
out
popf
pop
nop
imul
adc
stc
push
and
sarb
and
mov
push
testl
test
std
or
pop
ret
lods
push
mov
add
push
ss
les
jne
or
aaa
pop
xchg
nop
mov
iret
push
and
add
enter
les
into
jmp
cmpsl
inc
add
das
ja
lods
xchg
test
into
add
movsb
sbbl
jne
shll
add
and
dec
xchg
cltd
ja
jns
in
lock
pop
add
mov
repz
or
sbb
mov
inc
add
mov
mov
mov
pop
stos
xlat
filds
jecxz
push
push
lcall
ret
or
add
cmpsb
jo
xchg
xchg
inc
add
mov
test
ljmp
mov
scas
mov
int3
inc
xchg
test
imul
adc
stos
cmpsl
inc
jl
imul
out
dec
xchg
movb
sbb
js
pushf
push
mov
cld
lahf
pop
es
shlb
dec
cltd
xchg
dec
gs
loopne
mull
lds
sbb
test
icebp
rcll
scas
loop
aam
es
es
mov
repnz
mov
jbe
js
sub
mov
adc
loop
mov
and
or
dec
push
push
mov
dec
rcll
adc
pop
lds
push
push
push
sbb
mov
jmp
add
sahf
jl
pop
sbb
nop
cmp
add
adc
jbe
inc
add
add
movb
xchg
lods
mov
pop
mov
sahf
scas
xchg
sbb
pusha
add
das
mov
sahf
jg
push
sub
adc
add
adc
lret
lods
subl
and
ja
ja
xor
in
clc
addb
jl
mov
add
notl
lcall
add
stc
popf
mov
mov
cli
mov
dec
addr16
cmc
cmp
dec
mov
add
movb
in
jae
ss
test
out
and
adc
mov
es
add
pop
mov
lods
mov
add
aas
adc
mov
sbb
test
test
xchg
push
cmp
icebp
fstpt
mov
mov
ss
aaa
in
js
mov
popa
cmp
cmpsl
cltd
out
out
or
cli
inc
add
jnp
or
and
jecxz
loopne
inc
add
pop
int
adc
or
xchg
xchg
out
mov
fstps
add
mov
or
pop
scas
sahf
xchg
pop
and
push
lods
adc
mov
mov
add
in
test
xchg
lds
pop
push
les
test
mov
mov
stc
mov
les
and
sub
add
lret
push
jns
fdivrl
iret
loopne
pop
mov
ret
inc
add
pusha
add
pop
lock
mov
add
cmp
and
add
adc
xlat
jle
test
jg
mov
mov
fidivrl
add
pop
mov
enter
lods
cld
push
mov
xlat
sbb
hlt
cmp
jge
mov
xor
lea
xchg
adc
fbld
jae
cmpsl
sbb
add
mov
stos
inc
inc
fs
loop
xchg
adc
jp
fadds
pop
add
push
orl
bound
je
fildll
cltd
dec
xor
sahf
notl
mov
gs
int3
out
or
lret
and
cld
es
push
bound
out
in
repz
std
int
mov
push
sete
dec
sub
stc
xchg
sbb
jne
xor
jo
loop
add
push
pop
idivb
cmp
cmp
mov
icebp
addb
ss
testb
or
ljmp
xor
cli
mov
sbb
inc
mov
add
mov
std
push
enter
arpl
xchg
inc
lods
pushf
in
test
xchg
sti
popf
cltd
jg
add
jbe
jae
mov
xor
or
jle
xor
add
call
dec
enter
imul
mov
loopne
dec
filds
loopne
outsb
ret
int
dec
and
add
push
scas
mov
lret
or
ds
mov
xor
add
mov
or
add
dec
adc
mov
shl
shll
jns
ss
test
movsl
jle
add
push
add
and
xor
ljmp
nop
icebp
ret
sub
adc
mov
fldenv
fstl
push
ret
and
mov
scas
repz
hlt
fucom
dec
fsts
add
imul
push
sahf
mov
add
add
inc
je
mov
daa
mov
stc
nop
jb
add
xlat
cmp
stc
nop
jb
sbb
add
nop
jb
inc
in
add
mov
stc
nop
jb
add
mov
lods
nop
cld
jmp
inc
add
add
push
add
sbb
daa
out
add
loop
xor
add
add
add
adc
xor
nop
jb
add
cltd
adc
jb
mov
pop
add
add
jge
rcrb
cld
jmp
inc
xlat
pop
mov
add
dec
stc
nop
jb
add
mov
add
push
enter
outsl
or
mov
add
add
cmp
jmp
sub
cmp
add
aam
mov
nop
cld
jmp
add
add
insl
add
fistpll
stc
nop
jb
add
mov
push
mov
xchg
ret
xchg
jecxz
div
adc
mov
mov
xchg
ret
add
add
sbb
stc
nop
jb
add
in
add
mov
ret
mov
addb
xchg
ret
aas
mov
cli
add
mov
nop
cld
jmp
add
add
add
mov
nop
jb
add
add
add
nop
cld
jmp
orl
jp
nop
cld
jmp
add
push
sub
nop
jb
loop
jge
add
loopne
les
stc
nop
jb
add
push
add
nop
jb
mov
insl
mov
push
je
stc
nop
jb
add
cmpsl
dec
je
stc
nop
jb
add
push
mov
add
add
imul
je
sub
insl
out
add
add
sar
jb
and
push
andl
subb
mov
add
outsl
repnz
add
add
adc
rolb
inc
add
mov
mov
push
mov
xchg
ret
jge
and
gs
out
xor
nop
cld
jmp
pop
add
and
add
arpl
pop
push
mov
xchg
ret
add
add
add
add
jge
in
cmpsb
add
popa
add
nop
jb
add
sub
stc
nop
jb
jge
dec
and
push
mov
xchg
ret
add
add
shlb
add
add
add
add
nop
cld
jmp
pop
add
add
outsb
mov
stc
nop
jb
add
jno
pushl
stc
nop
jb
mov
add
add
add
stc
nop
jb
add
adc
jl
sbb
cld
jmp
cli
in
add
add
jb
add
jge
add
add
enter
jmp
add
add
add
add
or
nop
jb
in
mov
add
daa
in
push
stc
nop
jb
loop
fildl
scas
add
sub
push
loopne
nop
jb
mov
add
cmp
stc
nop
jb
cmp
pop
dec
mov
nop
cld
jmp
in
mov
cmp
nop
cld
jmp
add
ds
add
jp
rclb
outsl
in
inc
add
mov
cmp
add
add
push
add
add
jge
test
nop
jb
add
bound
into
jmp
nop
cld
jmp
inc
add
add
sbb
nop
jb
loopne
add
push
repnz
inc
add
add
add
add
add
add
cmpsb
add
nop
jb
xchg
add
mov
xchg
lcall
nop
jb
xchg
add
push
ret
mov
stc
nop
jb
add
stc
nop
jb
add
jecxz
ja
mov
clc
stc
nop
jb
add
mov
addb
divb
jb
fldl
add
add
mov
leave
mov
stc
nop
jb
add
mov
add
add
nop
cld
jmp
mov
nop
jb
add
popa
push
loopne
cli
xchg
insl
xchg
stc
nop
jb
add
add
mov
add
in
shll
cs
sbb
popl
add
cmp
or
nop
jb
add
push
inc
aas
add
stc
nop
jb
ds
pop
xchg
fnstsw
adc
nop
jb
add
cmc
add
jg
insb
inc
insb
insb
stc
nop
jb
xchg
add
das
cmp
push
mov
xchg
ret
add
sub
nop
jb
popa
mov
mov
xchg
in
push
push
mov
xchg
ret
pop
pop
add
add
xor
push
mov
xchg
ret
add
cmpw
stc
nop
jb
add
add
adc
add
mov
xchg
addl
push
push
mov
xchg
ret
mov
add
xchg
cld
jmp
cmc
push
cmp
mov
stc
nop
jb
sub
adc
push
xor
mov
data16
repz
mov
xchg
ret
add
in
faddl
shl
stc
nop
jb
add
add
fdiv
xor
aas
adc
add
fildl
add
mov
or
jg
stc
nop
jb
mov
add
stc
nop
jb
cmp
out
dec
push
push
mov
xchg
ret
mov
push
mov
xchg
ret
push
adc
add
mov
adc
nop
jb
in
xchg
add
pop
shr
push
mov
xchg
ret
mov
push
mov
xchg
ret
add
add
call
stc
nop
jb
loopne
in
add
inc
add
cli
inc
push
mov
xchg
ret
add
push
ret
stc
nop
jb
cmpsb
add
in
sbb
test
and
add
nop
jb
xchg
lret
stc
nop
jb
add
inc
addb
add
add
stc
nop
jb
loopne
mov
mov
push
add
xchg
ret
mov
enter
push
stc
nop
jb
xchg
pop
xchg
add
xchg
add
mov
stc
nop
jb
mov
add
add
stc
nop
jb
in
add
add
inc
adc
nop
jb
inc
loopne
add
mov
jg
stc
nop
jb
pop
add
lock
nop
jb
ds
popa
enter
pause
cld
jmp
add
pop
mov
add
add
stc
nop
jb
jle
jge
add
addb
and
push
mov
xchg
ret
add
push
adc
pusha
add
mov
stc
nop
jb
xchg
pop
add
lret
je
stc
nop
jb
mov
fistps
mov
xchg
ret
mov
add
push
mov
mov
add
nop
jb
iret
jge
mov
dec
mov
stc
nop
jb
sbb
sbb
inc
outsb
jmp
stc
nop
jb
pop
add
addl
rclb
add
cmpsb
ds
lock
jne
stc
nop
jb
loop
push
mov
stc
nop
jb
xchg
inc
add
bound
jp
stc
nop
cld
jmp
push
add
hlt
mov
add
xor
stc
nop
jb
xor
add
add
rolb
repz
add
mov
stc
nop
jb
add
lock
mov
popa
nop
cld
jmp
lock
in
add
cld
jmp
add
fstl
ss
mov
stc
nop
jb
add
adc
incl
sbb
add
iret
mov
push
mov
xchg
ret
clc
add
in
movsb
mov
mov
stc
nop
jb
add
lret
add
stc
nop
jb
add
lock
jmp
add
xchg
ret
in
add
sbb
and
cld
jmp
jge
add
add
stc
nop
jb
out
insl
add
scas
cmp
stc
nop
jb
scas
iret
shrl
incl
xchg
ret
xchg
shll
nop
cld
jmp
pop
add
add
xor
add
nop
cld
jmp
add
add
push
nop
cld
jmp
imul
fistpl
movb
mov
xchg
ret
add
xor
popa
add
nop
jb
add
add
loop
hlt
andl
mov
stc
nop
jb
add
fisubrl
insb
insb
add
nop
jb
jge
sbb
enter
push
mov
xchg
ret
mov
sbb
add
stc
nop
jb
pop
ds
fnsave
sub
nop
jb
insl
add
mov
adc
stc
nop
jb
addl
mov
xchg
ret
enter
xchg
jb
add
add
in
mov
add
push
idivb
inc
loopne
nop
jb
add
cmpl
cwtl
add
add
add
mov
incb
sti
nop
cld
jmp
jge
cmp
xor
add
test
jb
xchg
add
cmpsb
iret
push
push
mov
xchg
ret
add
adc
hlt
pop
jne
stc
nop
jb
mov
cmp
mov
xchg
ret
lock
nop
cld
jmp
xchg
lock
loopne
inc
add
add
stc
nop
jb
mov
add
cltd
cltd
aas
push
stc
nop
jb
mov
add
fistpl
and
push
stc
nop
jb
enter
add
nop
les
push
add
cld
jmp
add
add
adc
jle
add
mov
adc
test
mov
cmpl
adc
add
add
nop
jb
add
add
add
mov
add
dec
xchg
in
idiv
jno
add
pop
xor
ja
add
stc
nop
jb
cltd
add
xchg
sbb
stc
nop
jb
add
add
add
nop
jb
add
in
popa
add
mov
mov
stc
nop
jb
popa
icebp
xchg
xchg
repnz
pusha
push
mov
xchg
ret
in
in
mov
into
mov
stc
nop
jb
mov
add
mov
push
mov
xchg
ret
xchg
add
inc
and
stc
nop
jb
clc
add
add
jmp
add
xor
add
cltd
sbb
nop
jb
in
add
sbb
scas
rcll
xchg
dec
lea
nop
cld
jmp
adc
add
and
jae
jo
mov
push
mov
xchg
ret
xor
xchg
subl
cmp
ret
fldl
mov
or
cld
jmp
add
sarl
add
pop
dec
push
nop
cld
jmp
cli
add
imul
in
add
nop
cld
jmp
push
cmp
cmp
add
add
add
xchg
mov
xchg
mov
stc
nop
jb
add
add
add
jp
jbe
stc
nop
jb
add
push
test
stc
nop
jb
faddl
xchg
mov
add
mov
push
push
add
stc
nop
jb
add
add
sbb
inc
add
xchg
xor
push
stc
nop
jb
addb
add
jecxz
xchg
imul
add
nop
jb
add
dec
push
nop
cld
jmp
mov
mov
add
and
incl
aas
xchg
add
add
sbb
nop
jb
imul
sbb
call
incl
out
xchg
add
push
push
mov
xchg
ret
add
add
add
add
nop
cld
jmp
add
sub
popa
mov
inc
add
stc
nop
jb
sbb
idivl
lea
stc
nop
jb
jecxz
lock
mov
stc
nop
jb
add
add
add
add
add
and
ds
repz
nop
jb
jge
lock
jge
mov
push
je
adc
push
mov
xchg
ret
add
cltd
add
test
nop
cld
jmp
add
fst
lcall
add
orb
fcoml
add
stc
nop
jb
jecxz
add
add
add
add
incl
cmc
jge
xchg
push
add
out
push
nop
cld
jmp
add
fdivrl
add
add
cs
call
add
add
add
inc
inc
add
and
stc
nop
jb
add
add
push
stc
nop
jb
add
xlat
add
dec
jne
stc
nop
jb
add
loope
test
cld
jmp
add
mov
nop
push
mulps
nop
jb
add
inc
add
jge
jns
nop
cld
jmp
add
add
add
stc
nop
jb
inc
iret
add
mov
push
mov
xchg
ret
fninit
andl
dec
dec
nop
cld
jmp
add
inc
sub
mov
nop
cld
jmp
add
add
loopne
sbb
cld
jmp
add
xchg
push
add
ds
lods
mov
stc
nop
jb
fstpt
fists
inc
add
addb
cltd
dec
push
push
mov
xchg
ret
aas
enter
shll
xor
jb
inc
add
adc
add
nop
cld
jmp
add
add
add
out
mov
stc
nop
jb
in
add
aas
add
sti
or
add
add
add
push
lods
add
stc
nop
jb
mov
mov
sub
add
add
xor
add
movb
push
stc
nop
jb
add
mov
in
or
nop
jb
add
cmp
mov
add
jmp
mov
mov
pop
push
mov
xchg
ret
jecxz
mov
stc
nop
jb
loop
sbb
add
add
jae
cld
jmp
add
xor
xlat
stc
inc
add
mov
nop
cld
jmp
add
add
mov
add
mov
stc
nop
jb
add
push
add
mov
nop
cld
jmp
xor
or
push
mov
xchg
ret
sbb
aas
sub
nop
jb
add
iret
je
mov
nop
cld
jmp
add
sbb
add
nop
jb
add
hlt
push
inc
add
add
imul
or
add
mov
stc
nop
jb
cli
add
jae
push
mov
ljmp
and
jo
mov
mov
stc
nop
jb
add
lock
call
stc
nop
jb
add
mov
push
mov
xchg
ret
add
add
stc
nop
jb
add
add
jp
add
nop
jb
add
fildl
cltd
add
mov
stc
nop
jb
loopne
scas
decl
stc
nop
jb
xchg
clc
mov
xchg
loope
xchg
and
je
nop
cld
jmp
xchg
and
mov
xchg
ret
add
rorl
add
stc
nop
jb
add
ss
mov
mov
xchg
ret
add
rcll
dec
stc
nop
jb
jecxz
jecxz
xorl
inc
add
add
stc
nop
jb
add
pop
add
push
mov
xchg
ret
add
add
fnsave
xor
stc
nop
jb
adc
stc
nop
jb
xor
xchg
test
nop
cld
jmp
add
fildl
mov
push
lret
push
push
mov
xchg
ret
add
sub
jge
jne
stc
nop
jb
xchg
xor
stc
nop
jb
enter
push
stc
nop
jb
xor
sarl
fsubr
add
inc
add
cmp
inc
and
nop
cld
jmp
add
add
lea
in
pop
pushf
clc
int3
sbb
mov
sti
add
and
cld
jmp
add
add
cmpsb
jecxz
test
dec
push
stc
nop
jb
add
pop
mov
push
stc
nop
jb
cmc
add
inc
xlat
cmc
add
dec
nop
cld
jmp
inc
mov
in
loop
push
mov
mov
push
mov
xchg
ret
mov
cmc
leave
xor
stc
nop
jb
add
jl
push
mov
xchg
ret
mov
adc
mov
add
add
add
or
icebp
sub
popa
add
mov
xchg
ret
scas
insl
mov
mov
mov
add
push
mov
xchg
ret
lock
mov
sbb
inc
add
add
inc
loopne
push
push
mov
xchg
ret
sbb
insl
add
mov
stc
nop
jb
xlat
add
arpl
mov
stc
nop
jb
add
mov
popa
add
mov
xchg
ret
pop
add
movzwl
stc
nop
jb
scas
mov
add
mov
dec
subl
push
mov
xchg
ret
add
nop
xchg
insb
call
stc
nop
jb
mov
mov
jmp
cmc
lock
add
mov
lea
stc
nop
jb
add
lret
push
mov
xchg
ret
mov
add
nop
jb
add
mov
lret
stc
nop
jb
addl
jne
dec
nop
cld
jmp
add
add
call
inc
add
aas
mov
add
ret
stc
nop
jb
add
xchg
add
xor
push
mov
xchg
ret
add
mov
nop
jb
mov
add
nop
cld
jmp
fisttpll
add
add
add
push
mov
xchg
ret
jge
add
sub
enter
xor
add
add
jne
stc
nop
jb
add
sub
in
inc
add
sarl
iret
pop
nop
cld
jmp
mov
mov
popa
push
jne
stc
nop
jb
fildl
and
add
jb
in
mov
xchg
add
jmp
rcll
jecxz
mov
push
mov
add
pop
sub
fs
add
cmpw
nop
cld
jmp
mov
mov
popa
stc
nop
jb
scas
sbb
add
lock
jne
stc
nop
jb
add
out
call
nop
cld
jmp
addb
iret
scas
mov
stc
nop
jb
add
rep
push
mov
xchg
ret
add
sti
nop
cld
jmp
in
add
adc
inc
add
xor
add
sarl
inc
pop
rep
stc
nop
jb
pop
mov
add
fidivrl
stc
nop
jb
out
xchg
in
cmp
push
mov
xchg
ret
mov
mov
mov
sar
nop
jb
inc
clc
add
call
stc
nop
jb
scas
add
nop
jb
add
pop
add
adc
je
stc
nop
jb
lock
mov
stc
nop
jb
add
add
add
nop
cld
jmp
pop
inc
jle
add
jae
push
push
mov
xchg
ret
mov
mov
jecxz
stc
xor
stc
nop
jb
add
je
add
stc
nop
jb
add
enter
push
mov
xchg
ret
popa
scas
add
mov
xchg
ret
add
add
mov
stc
nop
jb
jle
add
stc
nop
jb
in
loopne
mov
stc
nop
jb
mov
add
cmc
fs
push
push
mov
xchg
ret
add
mov
enter
cli
stc
nop
jb
mov
add
push
mov
xchg
ret
sub
cmpsb
fistps
nop
jb
cltd
loopne
mov
push
stc
nop
jb
inc
jle
imul
xchg
ret
sbb
add
nop
jb
add
loopne
cmpl
cmp
nop
cld
jmp
out
add
add
mov
xchg
ret
add
std
pop
stc
nop
jb
adc
add
add
add
mov
stc
nop
jb
add
add
and
push
scas
mov
push
mov
xchg
ret
mov
add
mov
stc
nop
jb
jecxz
mov
xchg
add
add
stc
nop
jb
add
push
ret
push
mov
xchg
ret
pop
add
add
outsb
mov
push
mov
xchg
ret
mov
jge
stc
nop
jb
add
lock
imul
sub
add
add
xlat
add
jge
outsb
call
stc
nop
jb
cltd
add
scas
cmp
add
add
add
out
dec
test
mov
stc
nop
jb
scas
out
pop
add
jge
stc
nop
jb
mov
add
add
nop
jb
jecxz
cmpsb
roll
add
leave
push
mov
xchg
ret
sarl
lock
add
add
add
add
add
pop
rep
stc
nop
jb
add
xlat
add
sub
cmp
incl
pop
add
add
outsl
add
stc
nop
jb
add
add
add
push
push
mov
xchg
ret
add
shlb
push
mov
xchg
ret
mov
mov
ret
nop
cld
jmp
cmc
pop
mov
sub
pop
mov
nop
cld
jmp
xlat
xchg
add
pop
mov
nop
cld
jmp
mov
add
call
stc
nop
jb
mov
sar
nop
jb
in
cmp
push
dec
adc
nop
jb
add
push
jae
nop
jb
in
jecxz
cmp
jb
push
filds
leave
cmc
inc
add
fcompl
lds
add
stc
nop
jb
xchg
iret
xor
jb
jecxz
add
xchg
fdivp
icebp
stc
nop
jb
mov
add
add
xor
push
mov
xchg
ret
add
inc
xchg
or
sar
nop
jb
add
popa
insl
in
mov
mov
cld
jmp
add
add
inc
adc
nop
jb
add
mov
call
stc
nop
jb
loopne
add
add
nop
jb
mov
xrelease
inc
add
sub
add
mov
loopne
stc
nop
jb
add
test
push
mov
xchg
ret
iret
jge
iret
pop
xchg
stc
nop
jb
cltd
add
add
add
ret
ret
xchg
stc
nop
jb
add
clc
add
mov
mov
xchg
ret
add
inc
or
nop
jb
add
loopne
or
mov
xchg
ret
adc
nop
cld
jmp
loop
mov
add
add
pushl
enter
dec
outsl
popa
fs
nop
jb
pop
in
push
dec
sub
stc
nop
jb
xchg
xchg
cli
int3
xor
push
mov
xchg
ret
add
add
int
add
add
nop
cld
jmp
inc
add
imul
dec
nop
cld
jmp
mov
add
add
addl
cld
or
dec
add
add
xchg
add
jb
add
lock
add
add
add
add
enter
push
dec
push
stc
nop
jb
cmpsb
mov
mov
stc
nop
jb
add
fndisi(8087
imul
shr
add
cld
jmp
mov
add
add
stc
nop
jb
mov
jecxz
add
xor
call
add
mov
faddl
inc
pop
add
stc
nop
jb
add
add
or
mov
add
stc
nop
jb
sbb
push
mov
xchg
ret
cmp
mov
cwtl
pop
stc
nop
jb
add
jle
add
inc
hlt
inc
add
add
push
adc
push
sub
jecxz
xchg
in
sub
nop
jb
mov
lock
mov
insb
add
mov
jnp
aas
lahf
fwait
dec
mov
stc
nop
jb
cmp
xchg
add
addb
add
stc
nop
jb
mov
add
mov
nop
jb
add
add
cmc
roll
cmpsl
and
add
push
mov
xchg
ret
add
add
pop
arpl
lret
and
stc
nop
jb
xchg
add
add
mov
xchg
ret
add
test
stc
nop
jb
inc
add
or
arpl
stc
nop
jb
mov
mov
stc
nop
jb
add
mov
add
jo
nop
cld
jmp
enter
jge
popl
jge
stc
nop
jb
pop
loopne
cmc
add
push
stc
nop
jb
enter
mov
rclb
lock
add
jle
jge
xor
stc
nop
jb
sub
add
das
xor
stc
nop
jb
add
add
xor
stc
nop
jb
add
mov
ret
nop
cld
jmp
pop
in
add
add
jge
ljmp
nop
cld
jmp
imul
add
push
lods
mov
stc
nop
jb
loop
movzwl
stc
nop
jb
adc
nop
cld
jmp
add
mov
mov
jne
nop
cld
jmp
add
mov
inc
push
mov
xchg
ret
add
xchg
add
push
arpl
mov
stc
nop
jb
add
stc
nop
jb
popa
add
add
loopne
hlt
xor
fs
push
push
mov
xchg
ret
imul
popa
push
mov
xchg
ret
cmp
add
ja
gs
add
nop
jb
add
fsubrl
testb
cmp
ret
push
mov
cmc
inc
add
pop
pop
jle
lods
ror
push
mov
xchg
ret
add
add
inc
jae
add
es
inc
or
nop
jb
add
add
xlat
xchg
pop
adc
jne
push
mov
xchg
ret
add
cmp
inc
add
add
add
push
stc
nop
jb
add
jecxz
mov
add
cld
inc
add
pop
add
sbb
mov
push
mov
xchg
ret
lock
in
dec
sub
stc
nop
jb
add
or
nop
jb
cmpsb
inc
adc
pusha
stc
nop
jb
add
cli
mov
add
or
in
pop
or
sbb
add
popl
test
stc
nop
jb
out
pop
jecxz
lock
nop
jb
addb
mov
popa
stc
nop
jb
mov
add
subl
stc
nop
jb
add
add
inc
add
xchg
jmp
test
in
call
add
pop
add
dec
add
mov
xchg
ret
add
mov
stc
nop
jb
add
loopne
mov
stc
nop
jb
jge
push
or
jb
add
push
nop
out
add
push
mov
xchg
ret
sbb
mov
inc
and
nop
jb
xor
mov
add
cmp
jmp
in
addl
add
ss
cld
jmp
add
loopne
add
sub
test
lods
lock
add
add
pop
jl
stc
nop
jb
add
pop
add
add
add
stc
nop
jb
add
fsubl
pop
popa
stc
nop
jb
xchg
scas
add
inc
add
jb
loop
xlat
mov
mov
stc
nop
jb
add
in
aas
loopne
out
imul
nop
cld
jmp
add
add
in
lods
pop
nop
cld
jmp
pop
add
push
add
add
jb
add
addl
add
leave
add
push
mov
xchg
ret
add
add
nop
jb
pop
add
add
mov
stc
nop
jb
cltd
lock
push
dec
je
nop
cld
jmp
adc
cmc
lcall
jb
add
pop
adc
cld
jmp
mov
in
fucomip
push
add
add
nop
jb
loop
in
add
stc
nop
jb
mov
add
fsub
scas
add
stc
nop
jb
mov
mov
sti
nop
cld
jmp
jge
pop
add
in
lcall
add
enter
jbe
cmp
nop
cld
jmp
iret
add
idivl
mov
stc
nop
jb
iret
loop
jecxz
in
push
push
mov
xchg
ret
add
pop
jle
cltd
rep
stc
nop
jb
fucom
add
push
pop
push
lock
sbb
in
inc
faddl
cmpsb
pop
add
push
nop
cld
jmp
jge
mov
xlat
inc
add
call
stc
nop
jb
cltd
add
sub
or
stc
nop
jb
scas
add
insl
lock
and
nop
jb
add
add
lock
call
incl
roll
add
pop
push
mov
xchg
ret
add
add
inc
inc
jbe
popl
stc
nop
jb
mov
or
mov
stc
nop
jb
adc
add
jb
add
add
mov
and
stc
movzwl
stc
nop
jb
add
lock
adc
popa
add
nop
jb
pop
add
and
jb
push
push
mov
xchg
ret
cmpsb
add
addb
add
cmp
jb
add
cli
stc
nop
jb
add
add
jge
fmuls
mov
add
cld
jmp
add
scas
add
or
cltd
add
add
nop
jb
add
insl
jno
pop
testl
nop
cld
jmp
jge
adcl
cld
jmp
add
xchg
popa
add
sar
jb
add
sbb
lock
jb
cmpl
nop
cld
jmp
add
add
sahf
push
push
mov
xchg
ret
xchg
add
iret
add
push
push
mov
xchg
ret
add
add
push
pop
push
mov
xchg
ret
add
in
add
mov
stc
nop
jb
xchg
add
xor
lea
push
mov
xchg
ret
cltd
add
ror
stos
stc
nop
jb
add
cmpsb
add
popa
jae
jmp
add
push
add
fiaddl
fucomp
inc
add
pop
inc
mov
nop
jb
add
mov
add
push
mov
xchg
ret
add
pop
push
inc
add
add
push
mov
xchg
ret
add
jg
stc
nop
jb
add
iret
add
insb
pop
nop
cld
jmp
add
xchg
rcll
jmp
nop
cld
jmp
add
out
out
and
adc
les
lret
mov
xchg
ret
fstpl
add
pop
addb
imulw
stc
nop
jb
loop
add
xchg
mov
cmp
jb
add
mov
popa
pop
addb
jmp
stc
nop
jb
mov
aas
mov
jmp
sub
incl
loopne
cli
add
lods
push
mov
xchg
ret
add
push
xchg
sub
cmp
cmp
ret
push
cmpsb
aas
add
dec
add
lret
repz
add
sbb
sub
and
cmc
pop
inc
add
ds
mov
stc
nop
jb
adc
arpl
mov
stc
nop
jb
mov
mov
nop
jb
sar
add
imul
stc
nop
jb
add
dec
stc
nop
jb
imul
sbb
nop
jb
loopne
add
adc
nop
jb
cli
add
inc
push
je
nop
cld
jmp
pop
push
mov
xchg
ret
add
push
add
insl
jne
stc
nop
jb
add
subl
incl
add
inc
add
jb
push
mov
xchg
ret
loopne
lock
aaa
sar
push
stc
nop
jb
add
add
cmpsb
fcoml
inc
imulb
push
mov
xchg
ret
and
imul
icebp
fisttpll
jb
fstpt
fildl
add
adc
inc
and
nop
jb
xchg
clc
add
in
add
enter
add
mov
add
mov
nop
jb
mov
loopne
in
movzwl
nop
cld
jmp
out
cmp
cmp
mov
xchg
ret
pop
add
push
lock
jne
stc
nop
jb
add
nop
cld
jmp
pop
aas
pop
enter
fmuls
jb
xchg
xchg
add
dec
add
stc
nop
jb
cli
cmc
out
add
or
cwtl
loopne
add
ds
popa
push
cmpsl
cli
push
push
mov
xchg
ret
pop
lock
loop
outsl
pop
stc
nop
jb
add
loopne
loopne
mov
pop
xchg
stc
nop
jb
mov
push
test
imul
stc
nop
jb
add
add
nop
jb
cltd
and
faddl
add
mov
nop
jb
add
xchg
add
add
stc
nop
jb
add
das
pop
stc
nop
jb
add
add
xchg
inc
mov
add
nop
jb
pop
add
out
push
push
mov
xchg
ret
add
add
addb
add
nop
jb
add
adc
nop
jb
adc
add
stc
nop
jb
lock
cli
iret
add
push
add
add
nop
jb
add
push
stc
nop
jb
add
push
outsl
push
stc
nop
jb
add
mov
ljmp
incl
push
sub
add
fsubl
and
adc
add
add
xchg
add
mov
stc
nop
jb
add
fucomi
mov
mov
cld
inc
add
mov
add
nop
cld
jmp
xchg
adc
ret
jb
push
push
mov
xchg
ret
mov
add
mov
les
mov
stc
nop
jb
add
test
test
stc
nop
jb
add
dec
je
nop
cld
jmp
cmp
jecxz
sbb
in
inc
add
cli
pop
add
mov
mov
push
mov
xchg
ret
add
add
mov
stc
nop
jb
imul
fisttpl
icebp
inc
add
popa
inc
add
mov
stc
nop
jb
add
pop
add
push
mov
xchg
ret
xor
push
insl
push
push
mov
xchg
ret
in
sub
add
xchg
pop
push
stc
nop
jb
pop
cmp
xchg
pop
adc
lods
pop
inc
add
add
stos
and
push
mov
xchg
ret
mov
popa
sbb
nop
jb
inc
aas
add
mov
shll
nop
cld
jmp
add
mov
sbb
stos
mov
stc
nop
jb
jecxz
add
loope
or
stc
nop
jb
xchg
ds
add
add
nop
cld
jmp
add
add
push
add
je
pop
es
stc
nop
jb
jb
shl
nop
cld
jmp
add
popa
cltd
add
int3
push
mov
pop
jle
stos
jbe
add
mov
in
repz
mov
cmc
imull
sub
add
cmp
xlat
xchg
jnp
fwait
or
mov
add
sub
mov
cmpsb
icebp
push
out
pop
adc
data16
aam
jb
push
stc
cwtl
mov
pop
repnz
or
and
gs
test
mov
in
rcr
rorb
push
dec
and
jmp
mov
pushf
sbb
fldl
xchg
push
add
fnstenv
test
add
iret
movsl
jne
add
mov
mov
add
add
mov
add
aas
cwtl
or
movb
mov
leave
out
jge
lret
jmp
mov
lock
push
push
sub
fsubr
popa
popa
push
bound
cmp
adc
and
lock
movsb
dec
inc
add
cmc
push
jo
nop
sbb
xchg
lea
stc
int
addb
sahf
xlat
stc
loope
xor
iret
test
xchg
mov
mov
lods
leave
adc
add
jmp
xchg
add
mov
add
dec
fdivrl
in
push
cmc
adc
cwtl
divl
cld
cs
push
sub
fcomps
mov
add
push
add
popf
lcall
mov
add
push
rolb
in
add
jecxz
push
gs
sbb
sub
inc
add
movb
repz
in
mov
in
movsl
pop
insb
stos
icebp
lahf
les
fidivl
cmc
arpl
or
add
lret
push
xor
add
mul
lcall
test
out
fldl2t
push
insb
cwtl
pop
lcall
rcl
push
fsubrl
imul
mov
outsb
es
adc
fldcw
ja
xor
mov
sub
xorl
cmp
xrelease
out
testb
inc
imul
fbld
jbe
cmp
rorl
jp
into
aaa
xchg
pop
stos
xchg
loop
inc
add
lea
cltd
dec
jae
ret
sbb
addb
adc
aaa
mov
add
push
stos
jp
out
adc
shlb
xor
ljmp
inc
in
movb
cmp
add
and
adc
add
push
xchg
cvtps2pi
add
jle
pop
push
push
xor
gs
dec
push
fistpl
push
push
jmp
shl
sahf
idivl
mov
pop
bound
or
jae
enter
or
mov
dec
pop
mov
add
and
jle
mov
add
jle
sahf
push
inc
add
lods
mov
sbb
or
add
push
add
pop
xchg
mov
add
popf
sub
cmpsb
mov
out
es
xchg
js
and
pop
test
std
jp
or
mov
es
out
test
cmp
and
movsb
add
xchg
jmp
xlat
dec
and
fbld
or
mov
xchg
xor
push
jnp
mov
lock
dec
in
mov
lret
jg
mov
insb
mov
sarl
cli
push
pop
lods
stos
mov
cmpsb
mov
iret
pusha
add
sub
insb
push
jbe
add
xor
add
imul
mov
cmpsl
jns
mov
inc
jns
pop
push
cs
or
ljmp
int3
int3
mov
outsl
pop
ljmp
hlt
and
into
xor
and
dec
push
dec
mov
scas
cmp
push
out
addr16
stos
scas
data16
add
ficoml
insb
nop
dec
loopne
testb
mov
xlat
and
fnstsw
lock
lock
std
sub
rolb
add
push
and
pop
std
push
xchg
lock
mov
adc
adc
and
cmp
add
iret
dec
les
clc
add
test
xchg
adc
xor
xor
bound
sub
jl
or
jb
add
dec
enter
mov
fldt
push
pop
dec
mov
adc
cmp
roll
call
cmp
jae
aam
jnp
rcrl
push
int
fisubl
add
mov
imul
sahf
xchg
and
rcrb
pushf
mov
test
aas
popa
inc
add
mov
pop
out
or
les
imul
jge
ss
cli
shll
cmp
call
sub
in
popa
jns
jmp
dec
in
outsl
jl
sub
push
push
popf
dec
les
popa
nop
ds
test
add
jle
or
mov
ds
ja
add
mov
gs
cmp
adc
mov
jns
add
sbb
test
mov
add
sub
cmp
adc
mov
aam
bound
punpcklbw
loop
hlt
pop
in
xchg
fnstcw
xor
jecxz
fisttps
jge
jmp
lock
pop
mov
mov
add
jns
mov
enter
movsl
test
sub
push
add
lcall
sbb
jb
xchg
xor
and
rclb
mov
add
sub
cmp
add
pop
xchg
jp
aad
jge
add
jge
xor
xchg
lds
int
pop
mov
and
aaa
sub
mov
mov
aad
mov
pop
or
imul
movb
pop
insb
fldt
dec
hlt
mov
jmp
pusha
add
inc
add
inc
add
xor
jb
xchg
fisttpll
mov
dec
sbb
mov
cmc
inc
add
xor
xor
cmpsl
or
add
movsl
test
sub
loop
xlat
lods
sahf
shlb
add
cmp
movsb
insb
cmp
inc
add
lock
and
cmp
cld
dec
add
adc
add
mov
mov
pusha
add
push
push
ja
test
add
sbb
xchg
xchg
out
sar
pop
shll
xor
imul
mov
add
lret
push
rorl
adc
les
sarl
push
sbb
mov
xchg
jmp
pop
cs
and
sahf
jno
bound
subl
repz
cmp
push
mov
scas
movsb
pop
or
mov
xchg
out
mov
in
fwait
out
push
fs
dec
inc
orl
mov
jb
ficoml
inc
jmp
test
sbb
aam
dec
ljmp
daa
inc
jb
test
incb
stc
mov
mov
test
sahf
dec
xchg
bound
mov
xchg
ljmp
add
mov
and
adc
arpl
push
sub
add
movsb
repz
ja
in
in
lods
jbe
cltd
dec
xor
add
mov
xor
xchg
lret
or
xchg
insb
sbb
imul
rorb
mov
loopne
pop
movsb
std
push
repz
xor
add
nop
in
adc
sti
mov
mov
pop
fisttpl
mov
add
push
mov
jecxz
js
xchg
dec
movl
sub
inc
add
mulb
scas
in
sti
cld
dec
repz
mov
cltd
push
sbb
in
adc
mov
cs
pop
adc
test
jno
repz
out
hlt
add
addb
mov
inc
jo
mov
mov
je
int3
xor
xchg
fisubl
mov
or
mov
cmpsl
iret
jno
in
lea
jl
cmp
fildll
test
stos
sub
in
mov
dec
push
lcall
xor
fadd
cmp
pop
dec
nop
mov
testb
inc
sub
mov
adc
inc
stos
fwait
add
add
jle
and
jmp
incl
daa
xchg
call
xchg
fwait
mov
mov
adc
add
and
jg
jmp
xchg
ljmp
sub
add
out
xor
jl
stos
pop
pop
outsl
or
sarb
jmp
loop
xchg
stos
mov
scas
rolb
addb
inc
clc
or
jge
dec
nop
movsl
addr16
in
push
out
inc
add
add
mov
mov
mov
add
jne
xchg
adc
ss
loope
dec
bound
dec
adc
pop
fs
dec
push
inc
mov
in
cmp
cmp
bound
adc
outsl
jmp
mov
sub
pop
rolb
sbb
stos
dec
adc
mul
add
cwtl
sub
inc
add
mov
push
push
imul
aaa
lock
dec
pusha
add
jno
add
enter
leave
out
sub
mov
aam
fisttpll
xor
mov
lret
add
mov
add
push
mov
leave
jo
mov
icebp
mov
add
xor
dec
mov
jmp
adc
insl
addb
jb
push
cmpsb
sbb
clc
mov
pop
inc
xor
data16
popf
insb
shll
addb
test
test
add
xchg
dec
lahf
jns
push
add
adc
jns
sti
mov
sbb
inc
add
push
dec
mov
dec
jg
ret
ja
leave
jo
and
in
test
iret
or
aad
xchg
xor
dec
fsubrp
or
push
jmp
in
mov
ljmp
add
out
ret
pop
add
clc
mov
ret
add
cmc
push
repnz
iret
jno
and
pop
xchg
dec
cmp
lods
mov
ss
popf
cmp
mov
pop
cwtl
inc
push
insb
mov
cmp
pushf
mov
adc
ja
outsb
icebp
push
add
adc
test
pop
into
fwait
daa
lock
xlat
dec
push
cmp
movsb
outsb
fbstp
lahf
mov
roll
das
and
add
cmp
call
fs
add
lret
aaa
out
adc
mov
shrl
xor
lcall
cmp
xor
add
add
push
jb
xchg
xor
bound
inc
add
push
jo
stc
xchg
xchg
add
xor
push
add
aas
icebp
and
test
mov
add
test
push
rolb
repz
ret
mov
push
push
adc
add
add
dec
xchg
mov
outsb
in
xor
jne
popf
mov
jns
mov
mov
fcomps
pop
inc
iret
cld
or
mov
adc
adc
testb
inc
stc
lcall
add
cli
pop
in
mov
xchg
pop
dec
sub
lea
adc
adc
add
addb
scas
xor
xor
ret
push
add
add
js
dec
sub
pop
mov
push
add
and
pop
jmp
je
fwait
mov
add
xchg
xor
add
movsl
xor
ljmp
jmp
movb
sbb
fsubrs
mov
pusha
add
or
mov
and
lahf
mov
ljmp
push
or
mov
sbb
dec
sbb
in
add
xchg
add
mov
cmpsb
mov
mov
loopne
in
or
in
add
add
add
mov
add
sbb
lds
add
mov
in
stos
addb
gs
fndisi(8087
pop
out
iret
ss
pusha
add
mov
xor
movb
rcll
in
inc
xchg
call
pusha
add
mov
sbb
add
jae
test
repz
pushf
mov
fs
add
mov
mov
add
cmpsl
addb
aaa
mov
add
sbb
and
aam
rorb
cmp
lds
out
cmp
cmp
ret
and
add
add
lret
pop
push
xlat
and
scas
fistpl
mov
divl
into
inc
add
mov
xor
pop
cmp
inc
iret
push
sub
dec
jecxz
mov
inc
test
inc
add
test
add
jmp
add
adc
ss
ljmp
xchg
sub
gs
insb
ds
in
mov
hlt
ja
fmuls
dec
xor
or
in
push
imul
add
or
test
lods
js
loope
fs
daa
dec
adc
jno
lret
jbe
pop
xor
jle
xorl
sub
stos
jnp
and
iret
daa
xchg
in
add
lods
insb
and
dec
dec
jmp
les
ja
xlat
sbb
xor
mov
dec
cwtl
int
sub
jecxz
xchg
add
and
jo
outsb
outsb
mov
ja
add
aam
lock
imul
arpl
xchg
lcall
xor
es
mov
shl
int3
jne
outsl
cmova
les
gs
gs
cwtl
lcall
xchg
aas
jl
sbbl
xor
out
out
inc
jle
loope
jns
mov
add
pop
shr
inc
sub
ret
push
insl
jg
sbb
andl
sub
pop
push
pop
pusha
add
and
push
add
lahf
mov
bound
divl
xor
stos
pop
das
cltd
add
imul
sub
mov
addb
lahf
or
loope
or
sti
mov
pop
loopne
xchg
test
repz
sbb
cmp
and
sbb
int3
jbe
dec
ss
in
es
icebp
lea
sbb
add
sahf
sbb
insb
addb
les
lcall
jns
and
mov
call
add
aad
jg,pn
rolb
cmp
fwait
repnz
push
inc
addr16
and
ss
inc
and
pop
or
dec
jl
push
fildl
add
add
push
cmp
cmc
dec
mov
or
sub
or
jg
add
jb
test
fdivs
js
sbb
dec
adc
imul
mov
xor
ja
fwait
push
xchg
inc
add
xor
xchg
jmp
add
mov
js
push
in
cmp
das
xchg
subl
lock
shld
jle
loope
add
daa
iret
dec
push
add
dec
xchg
dec
push
movb
dec
jno
jbe
js
scas
clc
cmp
jnp
inc
add
sbb
jns
push
inc
add
out
add
pop
aam
sub
sbb
add
mov
mov
idivb
fwait
rorl
mov
cmp
test
jge
arpl
hlt
fidivl
jo
ret
jle
test
sahf
les
push
pop
xchg
repnz
and
mov
rolb
pop
pusha
add
add
or
arpl
insl
mov
mov
xchg
sub
lock
sub
sub
pop
loop
in
cmc
inc
adc
dec
add
gs
xchg
inc
add
js
out
add
sbb
or
ljmp
frstor
out
pop
idivl
cld
xchg
movsl
pop
sahf
imul
add
cmp
dec
inc
jae
add
aas
dec
and
jmp
lret
stc
int3
cmp
cmp
pop
and
inc
aam
add
add
push
mov
push
xor
inc
jne
das
stos
stc
inc
ret
pop
insb
add
mov
dec
rcll
hlt
xor
pop
xlat
add
pop
test
xlat
add
fwait
push
cltd
pop
jle
daa
fidivrl
sti
adc
pop
mov
test
clc
ss
or
and
lods
mov
repz
loop
cmpsl
and
dec
jp
movb
lds
add
pop
push
add
mov
in
mov
addb
sbb
push
dec
rolb
adc
pop
mov
test
stos
mov
out
f2xm1
mov
or
dec
aad
gs
cmp
xor
repz
inc
add
and
dec
hlt
test
xor
xchg
decl
push
xlat
or
sub
xor
mov
add
bound
arpl
push
mov
std
shrl
test
lret
add
xchg
jnp
movsl
loopne
gs
sub
int
jl
in
data16
adc
jl
or
lcall
cmp
add
and
insl
pushf
mov
or
add
cld
ficoml
aas
add
out
fisubs
dec
repnz
stos
or
push
adc
add
iret
and
add
or
push
pop
repnz
add
int3
mov
test
movsl
or
inc
out
mov
pop
mov
pop
xor
sbb
and
mov
xlat
shll
popf
insb
inc
add
inc
cmp
add
add
mov
js
mov
cs
jne
xchg
lock
inc
outsb
cmpsl
testb
fistpl
push
inc
add
movsl
pop
adc
and
test
addb
iret
xchg
aad
jle
mov
add
addb
mov
xchg
push
les
clc
lock
stc
fcomip
rep
mov
pop
add
xchg
cmp
fwait
inc
add
mov
into
out
mov
inc
add
xor
enter
movsl
mov
pop
insl
mov
js
ret
cli
jno
mov
cltd
pop
mov
adc
loope
pop
ds
and
ret
testb
push
into
mov
test
mov
out
rorb
or
mov
sahf
decb
add
mov
enter
xchg
cmc
sbb
mov
sub
add
into
repz
cmp
in
daa
xchg
mov
in
lods
jmp
addr16
fsts
sbb
xor
xor
jae
aam
add
int3
xlat
jnp
add
js
dec
or
sub
ljmp
inc
pop
in
repnz
scas
rorb
xor
and
rcll
aaa
sub
and
stos
inc
add
outsb
call
outsl
daa
mov
sub
xor
jmp
mov
sub
inc
add
add
and
mov
add
ret
adc
jae
or
lock
std
fwait
mov
in
push
or
pop
xchg
dec
sahf
addb
lock
lret
pop
in
fdivr
rcrl
push
pop
fimuls
das
mov
jecxz
mov
mov
mov
test
push
inc
rcrl
add
lcall
shr
cmp
push
pop
jae
movb
or
xor
cmpsb
outsl
pop
adc
out
and
test
aas
mov
popa
ja
mov
add
lods
test
push
add
les
and
js
incl
sar
fistps
xchg
outsb
std
pop
sahf
loop
sti
bound
lods
lock
les
jge
sub
mov
mov
cwtl
inc
mov
mov
sti
fdivrs
mov
ss
fsubs
inc
add
dec
adc
ds
mov
fwait
in
mov
and
outsb
pop
pop
addr16
adc
xchg
push
stos
cmp
push
add
fldt
mov
iret
into
rcrb
aam
mov
pop
pop
cmp
cmpsl
cmp
in
jmp
test
add
call
comiss
rolb
in
aaa
lcall
or
int3
xchg
test
add
mov
aas
dec
je
add
adc
or
cmp
sub
cmc
or
adc
cwtl
jmp
push
add
push
push
xlat
jp
mov
add
xchg
stos
or
nop
xchg
shll
and
inc
add
pop
sbb
mov
mov
insb
mov
adc
cmp
pop
bound
out
adc
or
pop
jge
push
mov
imul
addr16
mov
addb
les
push
mov
jne
cmp
jge
mov
ds
mov
aaa
enter
pop
push
arpl
dec
rolb
outsl
cld
ret
add
xchg
xor
add
inc
xor
loop
data16
out
movb
xchg
notl
and
jecxz
xchg
das
xchg
dec
or
mov
mov
cmpsl
ret
repz
mov
push
in
data16
fst
lret
fwait
mov
rcl
and
adc
je
dec
lret
mov
aaa
clc
mov
pop
sub
jns
dec
rolb
aad
add
or
add
mov
inc
add
xchg
out
pushf
xchg
mov
imul
mov
jle
add
inc
pushf
dec
push
les
mov
mov
les
pop
jg
and
lahf
jmp
hlt
add
stos
out
adc
lods
sahf
ljmp
arpl
lds
xchg
pop
lea
jmp
add
orl
mov
idivb
push
dec
out
mov
add
push
outsl
les
inc
rolb
push
jne
lcall
sbb
int
add
mov
cld
push
add
std
pop
sbb
enter
add
xlat
pop
pusha
add
iret
jnp
adc
stos
fisubs
paddusb
dec
out
push
test
stos
jg
int
add
jg
push
ss
xchg
icebp
mov
add
add
addr16
fsubl
enter
push
xlat
faddl
notl
test
cmp
add
pop
clc
cmp
ret
jb
push
arpl
adc
bound
xorl
jno
mov
pop
or
dec
cltd
dec
cmc
jp
cld
or
lahf
xchg
sarl
movb
xchg
pop
sbb
scas
push
pop
fcoms
out
aaa
add
cmp
movsl
lods
shl
mov
inc
inc
add
cmp
pop
clc
pop
and
add
xchg
and
pusha
add
cmpsb
dec
jo
les
sarl
inc
xchg
xor
aas
mov
fwait
pop
stc
mov
xchg
cmp
ret
inc
adc
adc
xor
cmpsb
jno
test
pop
gs
push
bsr
xchg
cwtl
movsl
in
popa
mov
mov
xchg
inc
push
add
add
add
fcompl
pop
sub
xor
sub
add
xchg
jb
cmp
ss
lock
add
jns
xchg
fst
das
lods
push
dec
cli
movb
dec
fcomip
mov
stos
fists
lods
or
mov
pop
push
lcall
xchg
pop
imul
pop
sbb
icebp
daa
jae
popa
ja
scas
imul
in
lea
xor
pusha
add
icebp
addr16
push
ds
pop
sahf
sub
pusha
add
mov
mov
jne
jno
dec
xor
inc
ss
cmp
pusha
add
mov
ljmp
add
ljmp
fldcw
mov
push
sub
call
jns
jae
dec
shrl
mov
or
adc
mov
and
adc
push
in
xor
pop
ficoms
int
mov
jle
pop
in
lret
arpl
add
repnz
jne
fwait
popf
out
add
je
bound
movb
inc
scas
mov
push
test
cld
popa
decb
xor
xor
jmp
add
ljmp
xor
shr
and
pop
jbe
sbb
or
icebp
test
shl
jmp
ljmp
sub
xor
xor
sbb
add
ljmp
add
ljmp
addb
push
dec
loop
mov
lock
pop
pop
test
sbb
cmp
dec
cltd
lea
or
add
mov
lods
jb
push
movsb
sub
add
addb
stos
push
xchg
stc
mov
adc
sahf
dec
mov
movsb
rep
gs
mov
mov
stos
loop
enter
or
test
mov
icebp
dec
dec
faddl
popa
cli
jns
mov
in
or
xor
xor
add
jbe
movsl
repz
xchg
mov
fcoml
je
lcall
sbb
add
in
adc
jnp
mov
dec
jbe
sub
daa
jle
jnp
sub
pop
pop
repz
xchg
add
cmp
add
add
call
jnp
add
sbb
not
ja
mov
mov
jnp
jp
add
movb
jle
outsb
sub
push
xchg
scas
jecxz
ljmp
lret
inc
push
adc
pushl
mov
and
and
test
fwait
push
arpl
int
or
mov
push
ds
push
enter
add
jbe
dec
and
out
lcall
mov
fmuls
or
out
popf
pop
and
in
aad
hlt
sbb
es
add
xor
add
jmp
push
add
mov
jl
push
pusha
add
test
and
jmp
in
repnz
test
inc
add
add
int3
js
inc
add
mov
cmp
inc
fcmovnb
in
xchg
shll
add
inc
mov
push
clc
mov
mov
dec
jle
add
and
mov
add
adc
mov
xchg
fs
dec
addb
add
sti
fwait
mov
and
dec
in
std
les
adc
bound
and
lea
push
movl
xchg
fmul
testl
or
cli
imul
aad
cmp
pop
je
add
ja
loopne
mov
shll
out
insb
adc
xchg
mov
jge
int3
int
add
into
daa
and
push
cwtl
cmp
add
jmp
add
adc
popf
mov
inc
mov
ja
push
lea
jle
xlat
bound
fstpl
ljmp
repz
mov
add
add
sub
fwait
xorl
ss
cltd
cmpsl
ljmp
outsl
inc
shr
fucomp
lock
imul
xchg
ret
inc
add
ds
add
inc
inc
ds
loop
call
add
lds
push
add
adc
add
rolb
jns
leave
stc
in
cs
aaa
sahf
cmc
or
je
les
and
loopne
dec
add
pop
arpl
adc
popf
and
movsl
pop
mul
jbe,pn
setl
pushf
les
insb
dec
push
dec
cmp
jo
addr16
cld
jb
push
xor
addr16
jg
mov
xor
pop
aam
and
outsb
enter
add
pusha
add
push
aaa
mov
das
dec
dec
xor
jmp
add
call
lret
leave
lahf
sbb
sub
outsb
movsb
dec
jbe
inc
add
mov
mov
loop
lret
sub
test
mov
mov
or
aas
cmp
add
add
push
add
lea
movsb
mov
xlat
jge
fsubs
jo
sarb
js
call
loope
jae
push
add
lods
jl
mov
jno
loopne
fcoms
test
add
or
dec
sbb
aas
xor
sbb
imul
add
add
add
xor
jnp
adc
pop
sbb
aam
outsl
cmp
sbb
je
pop
mov
mov
fmull
xchg
ret
dec
mov
and
mov
pop
insl
dec
xor
pop
int3
cmc
cltd
inc
adcl
and
add
cli
lea
addl
movsb
inc
hlt
push
repnz
dec
sti
jmp
jb
mov
jmp
jp
imul
cmc
jns
push
mov
fcmovnu
shrl
scas
add
aam
pop
pop
aas
and
rclb
add
cmp
pushf
mov
mov
shrl
push
pop
xor
jmp
add
and
add
and
mov
xchg
mov
xchg
cs
data16
pop
cltd
repz
mov
fdivrl
mov
idivb
jno
xchg
mov
lret
add
test
xchg
sarb
gs
push
mov
mov
pop
stos
xchg
sub
sahf
jg
or
cltd
jmp
and
jno
int
add
in
mov
rcr
ret
mov
fnstcw
ss
inc
lds
int
sti
mov
xlat
das
idivl
loop
add
xbegin
movsb
or
lods
dec
and
mov
cs
ja
xchg
clc
jbe
cltd
insl
decl
lcall
push
sti
xor
xor
js
push
pop
addb
out
jl
xchg
js
inc
add
push
lret
aas
dec
scas
inc
fdiv
popf
push
popf
add
sbb
test
push
mov
inc
add
push
push
mov
stos
lahf
and
jno
dec
dec
and
daa
xchg
mov
iret
rcl
inc
add
mov
mov
add
dec
outsb
pop
and
std
dec
insb
pop
jnp
out
or
mov
mov
xor
addb
push
out
jns
scas
frstor
js
lret
std
sti
ret
daa
sti
fistpl
ja
jmp
push
scas
rcr
sbb
outsb
ljmp
mov
xlat
mov
aad
call
enter
add
and
lret
lods
adc
dec
sub
xchg
in
divb
faddp
leave
ja
adc
mov
push
xlat
mov
push
out
out
dec
sahf
lods
addb
cltd
mov
sti
pop
cmp
xchg
sti
enter
jmp
loope
push
fsubs
inc
push
xor
pop
push
mov
pop
mov
or
inc
add
in
mov
nop
adc
add
addr16
in
pop
imul
or
in
dec
hlt
dec
insl
lret
push
adc
loop
cli
in
repnz
sub
jns
push
or
dec
jbe
stos
push
xor
mov
pop
fsts
lahf
in
test
xchg
xchg
aam
pop
call
aas
inc
xchg
aad
shll
add
outsb
jg
ja
mov
test
test
rolb
pop
movb
daa
jno
xor
xor
call
mov
mov
fs
sahf
movb
cltd
lcall
add
push
in
lret
cmp
mov
mov
dec
popa
into
stos
mov
add
fists
pop
mov
push
mov
push
test
push
in
jecxz
jmp
jns
outsb
jne
dec
clc
lods
xor
or
inc
cmc
test
mov
test
insl
pop
mov
push
incb
popl
adc
add
pop
push
jecxz
mov
movsb
mov
add
sbbl
xor
imul
lret
adc
xchg
nop
fisubrs
dec
imul
jb
jns
xor
xor
inc
add
xchg
mov
add
dec
out
mov
and
fnstcw
addb
push
addb
add
push
add
mov
mov
pushf
movsl
loope
cltd
stos
scas
pop
daa
adc
stos
imul
adc
xchg
in
inc
sbb
sub
add
insb
je
pop
mov
add
and
dec
aad
jmp
pop
jecxz
mov
add
inc
add
loop
add
ret
cmp
std
mov
shll
xchg
std
out
push
int
bound
pop
mov
jbe
dec
popf
lahf
test
dec
ja
enter
sbb
sbb
out
xchg
movsl
pop
lahf
repnz
ds
mov
dec
and
add
inc
xchg
cmp
add
add
mov
inc
push
addb
shlb
jbe
fmull
pop
das
xorl
add
push
sub
ljmp
xlat
fiaddl
mov
and
jb
pop
jmp
add
dec
xchg
out
mov
iret
test
rcrb
cmp
mov
add
jo
cmp
cld
xor
add
or
mov
sbb
cmp
jb
enter
or
jno
testl
and
push
and
xchg
fs
mov
push
sbb
aas
pusha
add
cmpsl
test
outsb
adc
push
add
add
mov
jecxz
enter
into
mov
add
icebp
add
fldt
add
xor
jbe
out
adc
add
inc
jl
insb
inc
dec
inc
add
sbb
es
pop
pop
lods
mov
sbb
popf
aas
pushf
fcmovb
add
mov
mov
aaa
mov
add
aam
push
lahf
xchg
pop
mov
xor
nop
in
addb
jg
nop
dec
mov
add
pusha
add
jecxz
sub
out
shlb
xchg
rorl
pop
loop
xchg
roll
jmp
push
ret
xchg
das
in
pop
or
cmpsl
push
lods
jp
loope
xchg
sbb
add
mov
pop
insl
xchg
addr16
push
xchg
inc
add
inc
in
call
push
push
nop
lcall
push
mov
xchg
sahf
push
xor
mov
and
sbb
pop
mov
rolb
int
imul
inc
add
jecxz
insb
or
mov
add
inc
cs
fldln2
xchg
sbbl
cmpsl
outsb
add
std
les
shlb
add
inc
add
xchg
cmp
stos
loopne
std
jb
add
jmp
dec
or
mov
sbb
test
popa
out
add
or
inc
add
mov
insl
rolb
or
clc
decl
stc
push
movsl
xor
dec
xchg
jne
or
in
add
jecxz
pop
imulb
adc
add
push
fprem1
cmp
arpl
xchg
das
cwtl
xor
and
push
dec
dec
sbb
mov
popa
js
jle
insb
inc
and
movsl
adc
out
in
lods
into
addb
sub
cmp
inc
add
sub
loop
jno
pop
rcrl
cmpsl
test
inc
cmp
sbb
add
dec
push
fsubrl
mov
jb
addb
fcoml
fucomp
sbb
pop
nop
jo
lods
mov
and
bound
xchg
jecxz
sbb
xor
mov
inc
sub
jne
add
popa
pop
cmp
loope
ss
pop
popf
nop
sub
pop
imul
and
int3
inc
add
nop
jg
xchg
in
xchg
inc
mov
cmp
loopne
imul
cmp
dec
and
in
add
dec
add
shrb
jmp
cmp
rcll
inc
add
ds
add
mov
adc
fcom
mov
xor
and
into
mov
xchg
stos
push
xchg
rolb
pop
jb
fsubs
shl
rclb
add
jg
or
jmp
ret
les
cld
in
sbb
les
sub
add
arpl
jns
dec
cs
repz
sti
add
in
notl
int3
movsl
jmp
fisttpll
dec
popa
mov
ljmp
sbb
jmp
roll
lods
xor
add
fcmovnu
inc
add
orl
push
inc
add
pop
lret
test
sti
push
mov
je
xchg
adc
mov
mov
ret
push
daa
cmovbe
sub
jmp
pop
cli
rcrl
jle
push
aaa
pop
dec
adc
jg
cmpsb
inc
add
lahf
add
fcom
xchg
iret
mov
cmp
addb
push
addb
movsb
mov
mov
aam
scas
jne
sbb
stos
xchg
pop
jg
mov
push
jb
push
test
jo
add
sbb
mov
les
mov
add
mov
adcl
pop
cltd
dec
js
and
dec
adc
xor
inc
aaa
xorl
repz
add
icebp
aaa
add
hlt
jmp
pop
jne
rolb
lods
push
mov
out
mov
aad
test
or
sub
notb
sub
xor
push
mov
add
loop
xor
out
cmp
shrl
outsl
jecxz
movsb
xor
dec
cmpsb
sbb
sbb
xchg
cli
clc
or
std
cld
js
push
fcos
ja
hlt
addb
test
or
add
sbb
inc
pop
call
imul
jne
cli
lea
pop
aad
mov
inc
clc
push
test
xchg
xor
stos
or
inc
rolb
dec
mov
cld
test
fs
jno
aaa
in
ljmp
dec
cmp
xchg
sbb
jmp
stc
xchg
sti
out
mov
lods
sahf
movsl
aaa
adcl
rolb
add
sub
idivb
in
mov
daa
lods
push
jg
mov
adc
movb
mov
mov
in
pop
movsb
jmp
fildll
movl
pop
roll
add
leave
jmp
pop
loope
cmp
push
scas
dec
or
mov
add
pop
aaa
cmp
pusha
add
mov
cmp
add
inc
add
fdivr
sbb
xchg
push
faddl
add
lods
js
stc
cmpsb
xchg
fcoml
int
xchg
insl
jnp
ljmp
roll
je
add
adc
xchg
push
add
push
cmpsb
cs
repz
mov
sub
add
push
stc
push
jecxz
ficoms
clc
push
push
sbb
cli
insb
push
xchg
paddb
icebp
push
das
into
cmp
adc
add
pusha
add
or
out
or
jp
ret
jg
arpl
addb
pop
stc
adc
jp
inc
add
jl
mov
fists
daa
push
push
jmp
add
and
xchg
and
or
inc
add
hlt
or
and
mov
add
dec
cmp
arpl
xchg
jle
push
jae
out
in
daa
pop
fidivrl
add
aaa
movsl
or
add
push
add
aad
xor
adc
addb
add
fcoms
int3
pusha
add
add
movsb
dec
push
cmpsl
cmp
mov
lahf
movsb
cwtl
fcmove
mov
jb
pop
mov
or
pop
dec
sub
xchg
and
jp
loop
mov
and
cmpsl
addb
subl
mov
xlat
in
mov
int
les
sub
inc
add
jnp
mov
into
adc
movsb
and
adc
sub
mov
mov
fnstsw
leave
clc
insl
jo
xchg
adc
jge
and
fsts
pop
ret
and
enter
addb
ljmp
add
dec
addb
and
pop
and
inc
add
dec
shrb
inc
xor
loop
cwtl
daa
cmpsl
rorl
add
lret
fsubrs
ds
add
psllw
add
faddp
cmp
inc
add
addb
sub
add
mov
fstl
sub
push
cmp
cmpsb
sub
add
xor
xchg
xchg
xor
fcoms
xchg
xchg
in
mov
repnz
lcall
mov
addb
lods
cli
ret
jns
imul
add
jle
in
sbb
fdivl
add
dec
adc
shll
jecxz
call
aas
jnp
mov
dec
cmc
jne
ss
arpl
push
adc
test
movl
xlat
scas
sub
pop
cmpsl
stos
mov
or
and
or
fiaddl
and
ljmp
stc
fidivrs
and
jns
rolb
push
push
sub
xchg
nop
in
jns
pop
xchg
xchg
rcl
push
scas
out
testl
jge
lds
pop
adc
test
mov
int
sbb
sub
add
pop
std
inc
add
aam
add
xor
add
gs
mov
mov
pop
mov
scas
jbe
inc
lods
xchg
pop
inc
add
lret
xor
mov
lds
add
mov
in
xchg
jnp
pop
push
jns
push
mov
mov
jnp
pop
adc
imul
add
imul
cmp
je
inc
add
xchg
mul
push
adc
xchg
lods
jmp
pop
dec
addl
sub
pop
inc
inc
ret
add
mov
fistl
inc
shrl
add
in
sub
cmp
sub
in
mov
imul
push
adc
inc
movsb
lret
mov
test
clc
mov
sub
clc
mov
pop
mov
xchg
movb
ret
xor
xchg
mov
shlb
out
movsb
in
or
sti
xor
aam
mov
adc
dec
adc
std
mov
ret
iret
cmp
xchg
sbb
cmp
sub
xchg
jmp
add
inc
add
push
fcmovnu
cmpsb
xlat
xchg
xchg
mov
std
pop
arpl
jo
insl
fmull
mov
xlat
pop
cvtps2pi
add
stos
insb
push
lds
out
loope
notb
rcll
mov
gs
movl
outsb
jo
stc
lea
sbb
fst
sbb
sbb
sbb
loopne
push
jge
jb
pushf
jo
addb
pop
loop
pop
popa
out
and
lock
xchg
in
and
add
mov
push
xchg
mov
movsb
or
and
push
pop
push
jo
addb
mov
push
loope
or
mov
out
jle
xchg
sti
mov
mov
dec
mov
test
ret
stc
mov
lahf
into
lret
sarl
int3
push
add
jle
loop
in
ss
add
adc
leave
fwait
popa
inc
add
push
inc
add
sub
mov
sub
fadd
repnz
pop
jmp
xchg
inc
bound
adc
fnclex
das
pop
mov
sub
dec
addb
sbb
add
addr16
xchg
mov
data16
jnp
popf
cmpsb
stc
pop
testb
xchg
mov
mov
xor
aad
adc
pop
xorl
jp
and
loopne
mov
adc
dec
ja
int3
mov
adc
xlat
pop
in
leave
shl
and
sbb
leave
scas
or
outsl
inc
or
hlt
data16
jp
and
add
jno
dec
test
test
jecxz
gs
popa
fcmovbe
std
xor
mov
into
icebp
rcl
push
or
int
aaa
jmp
xor
add
jmp
arpl
fstpt
stos
cmpsl
cmp
jp
add
aam
fbstp
xchg
cltd
pop
mov
adc
out
add
fisttps
or
mov
sbb
loop
movsb
push
xor
or
mov
add
adc
and
out
inc
add
rcrl
add
pushf
lock
mov
fidivl
int
sbb
push
mov
in
and
stos
push
loop
js
clc
dec
scas
mov
mov
rolb
xor
add
fsubrl
jmp
sub
bound
imul
aas
push
je
stos
mov
sarb
xchg
icebp
dec
stos
dec
outsb
mov
mov
outsl
jge
sbb
pop
lock
in
dec
xor
shll
xor
js
imul
inc
add
out
and
jnp
jae
sub
jns
int3
add
es
add
xor
fisubs
dec
dec
stos
mov
mov
mov
pop
ret
stos
test
sbb
lods
cs
cli
jle
popa
push
das
lret
cmp
pusha
add
inc
add
adc
mov
add
cmp
pop
or
in
add
stos
sti
sarb
test
mov
lret
imul
and
aaa
jmp
xchg
or
int3
xor
ss
pusha
add
arpl
push
ja
push
jmp
mov
ja
jle
popa
adc
aad
inc
mov
push
inc
ds
inc
popf
bound
sbb
les
roll
sbb
cwtl
mov
and
pop
jecxz
or
repz
data16
mov
pop
inc
push
sub
push
icebp
cmp
idivl
jl
pop
movb
ficoml
flds
adc
and
lret
dec
popa
jecxz
dec
xlat
in
js
movb
imul
push
adc
and
pusha
add
cmp
xor
shrl
gs
repz
push
pop
mov
fsts
scas
mov
in
push
push
add
and
ret
mov
push
out
mov
pop
icebp
sub
repz
mov
fidivs
sbb
aam
sub
test
pop
inc
add
adc
lods
push
loopnew
shufps
add
sbb
inc
add
movsl
in
stos
nop
inc
add
push
add
xor
add
xor
xor
xchg
sti
jge
fwait
mov
hlt
mov
xor
out
or
add
mov
add
xlat
push
out
mov
mov
imull
sbb
push
push
push
add
out
mov
movsb
jne
push
push
and
movsl
addl
cmp
add
lods
xlat
cmpsb
sub
inc
add
popa
repnz
add
jnp
add
test
push
adc
cmp
imul
lcall
js
or
sbb
jp
cmp
in
fistpll
addr16
adc
iret
xchg
cmpsb
and
mov
add
xchg
mov
shll
push
ja
push
add
cs
cli
addb
mov
cmc
shr
xor
add
in
in
or
xchg
inc
add
sub
add
in
popf
xchg
lahf
ret
add
insb
imulb
sbb
and
xlat
sub
dec
push
in
jae
add
cmpsl
fistl
lods
movb
nop
pusha
add
add
adc
sti
lea
jne
fisubl
mov
or
imul
add
xlat
dec
push
dec
sbb
fwait
xor
mov
mov
and
mov
mov
sub
xor
sub
sbb
sub
and
pop
shrl
and
jmp
pop
scas
rorb
jl
add
add
add
mov
pop
gs
add
push
sbb
aam
jae
cli
inc
add
test
pop
pop
imul
inc
ljmp
mov
and
mov
xchg
pop
aad
add
iret
cmpsl
add
mov
aas
sti
jl
push
stos
in
adc
cmpsl
sub
add
jae
jge
xchg
lods
xlat
bound
jecxz
dec
ss
roll
add
pop
fisubs
inc
add
jg
or
lds
xlat
das
ds
xchg
hlt
int
ljmp
dec
mov
call
sub
inc
add
mov
jb
sub
xchg
leave
popa
testb
add
stos
dec
lcall
sbb
mov
and
test
pop
mov
mov
sub
movb
add
add
add
xor
dec
pop
das
mov
ret
mov
inc
add
hlt
and
mov
inc
call
sub
lods
xchg
jge
pop
mov
add
mov
test
insl
mov
dec
cwtl
ss
mov
addb
rcll
cld
cltd
fxch
sbb
mov
in
iret
mov
cmp
pop
je
lods
mov
push
push
fdivrs
sbb
les
jbe
scas
jg
xlat
sbb
aas
in
ret
out
adc
fcoml
test
dec
fsubr
mov
stos
push
sbb
mov
nop
les
mov
and
mov
in
sbb
pop
hlt
xchg
cmpsl
push
es
add
push
sub
ds
scas
les
add
outsb
andl
or
pop
push
xorl
pushf
int3
loope
into
dec
incl
dec
mov
add
addb
adc
ret
dec
fbld
aad
jl
cmpsl
leave
push
jns
addl
and
sbb
or
add
movsl
and
outsb
adc
clc
cmc
aas
sbb
and
dec
inc
add
lods
mov
movb
add
adcl
clc
lods
sahf
jne
jns
cmp
rcrl
aad
jb
sbb
add
fnstcw
bound
je
ljmp
add
out
pop
sub
mov
stos
outsb
repnz
fwait
xchg
xor
out
movsl
pop
jnp
and
cwtl
jns
sub
shlb
cmpsl
loopne
fcompl
pop
push
gs
cmpsb
sub
pop
mov
mov
pop
inc
jle
adcl
rolb
push
scas
lods
in
cs
add
xor
and
xor
add
fcomps
push
push
add
sub
cmp
cmpsb
js
cli
or
fcmovb
add
es
push
lea
add
mov
and
lahf
pop
mov
lret
es
addb
lret
lods
or
inc
add
addr16
push
push
jne
scas
repnz
fmuls
rcll
dec
sbb
lcall
and
shrb
nop
addb
icebp
xchg
sti
stos
sbb
sub
lret
stos
pop
pop
inc
add
pop
mov
lds
fildl
int
ret
mov
loope
insb
inc
icebp
mov
imul
or
dec
mov
inc
add
adc
add
push
jecxz
in
mov
mov
aad
add
fildll
push
xor
inc
add
pop
dec
and
add
cmp
lret
out
int3
pop
mov
push
stos
mov
jle
insl
xor
ss
sub
add
jmp
out
je
daa
push
loop
aam
insl
in
xor
aad
cmp
add
hlt
and
mov
sti
sub
ss
data16
jl
rorl
aas
lret
jmp
add
or
add
cli
pop
rorb
test
jg
or
mov
addl
mov
and
sarl
test
mov
xchg
mov
negb
sub
aas
int3
addl
adc
xchg
popf
jg
rolb
and
mov
inc
inc
sbb
sbb
mov
test
sbb
shll
mov
fcomi
shlb
outsb
pop
adc
xlat
mov
inc
ret
or
sahf
les
ja
add
xchg
xchg
repnz
mov
pop
mov
jge
add
popa
and
adc
nop
xor
iret
movsb
sub
xor
add
mov
add
loope
lods
dec
scas
push
pop
shrl
cmpsb
repz
mov
push
or
fcoml
mov
sub
jl
rep
xchg
rolb
movsb
loopne
add
daa
add
icebp
stos
enter
loop
test
add
ret
jp
add
mov
movsl
aad
movsb
adc
popl
out
cmp
sbb
push
lret
adc
lods
jmp
sub
sub
sub
add
add
xchg
movsb
adc
je
add
and
sub
aam
in
arpl
adc
addb
xchg
rclb
cmp
add
push
cwtl
arpl
out
sbb
push
adc
add
add
pushf
mov
std
push
lods
sbb
arpl
aam
mov
cmp
outsl
pop
je
xchg
sub
push
jnp
push
dec
inc
cmp
int3
repnz
cmp
cmp
sarb
mov
fisttpll
mov
mov
mov
jb
sub
dec
xchg
fdivrs
jns
sbb
das
cltd
adc
cmpsl
icebp
adc
mov
jg
pop
push
jmp
add
hlt
int3
mov
nop
into
in
xchg
js
data16
movsl
stos
and
ljmp
push
or
xor
pop
mov
xchg
xor
bound
xchg
fildl
pcmpeqb
divb
rep
mov
repnz
shlb
sbb
movsb
xor
imul
pop
mov
xor
add
gs
nop
add
push
xchg
scas
xchg
mov
testl
insl
pop
out
imul
loope
sarl
push
or
add
or
popl
inc
cmpsl
or
scas
fnstcw
inc
add
xor
add
dec
loopne
inc
mov
add
fstpt
out
movsl
rorl
movb
cmp
mov
inc
clc
inc
add
insl
add
js
xchg
cmpsb
inc
add
rolb
inc
bound
cmp
gs
shr
push
push
fmuls
sbb
arpl
add
push
jne
lahf
xor
sti
jb
add
jle
cwtl
mov
adc
jbe
sbb
hlt
mov
sti
push
fwait
inc
add
icebp
imul
in
jae
xor
mov
mov
mov
outsb
or
cmp
add
xchg
les
gs
sbb
dec
and
add
xchg
jb
aam
fmuls
jge
jmp
add
leave
inc
push
add
sub
and
xchg
push
outsb
jecxz
inc
cs
push
cmpsl
inc
add
dec
jo
lds
repnz
add
add
pop
adc
cs
lret
insb
int3
les
in
sub
fisttps
mov
mov
mov
sbb
cmp
movb
add
ja
out
jg
int
cmc
testb
pushl
push
pushf
cmpsl
push
add
add
push
add
pop
xchg
imul
in
add
add
jge
insb
cld
fnsave
loopne,pn
push
mov
fimuls
popa
test
mov
lahf
dec
outsb
mov
lds
xchg
pop
and
movb
mov
add
mov
add
addb
dec
mov
mov
add
mov
add
sub
std
xor
mov
add
cmp
lock
and
icebp
test
add
xchg
inc
lods
mov
add
outsb
out
mov
add
mov
xchg
iret
sbb
xchg
lret
inc
mov
pop
aas
cmp
sbb
jae
adc
sbbl
adc
add
shll
fwait
cltd
div
mov
out
bound
idivl
xchg
mov
fs
adc
gs
imul
inc
aam
add
mov
jge
inc
inc
add
jnp
movb
mov
cmc
push
sbb
add
push
daa
push
jne
sbb
btc
enter
in
imul
jno
dec
sub
loopne
lret
mov
sub
insb
mov
out
addl
sbb
lods
push
pop
mov
jge
insb
push
data16
xchg
pop
xor
test
mov
cmp
pop
adc
dec
sahf
fists
ja
add
fldcw
sbb
pushf
jbe
inc
add
ja
mov
add
rolb
decl
lock
cmp
xchg
jecxz
pop
aad
add
int
xchg
sti
loop
addr16
mov
add
pushf
sbb
enter
out
hlt
test
and
out
jl
push
mov
lcall
add
push
add
lahf
popf
push
add
add
or
leave
sbb
int
dec
call
ljmp
jae
xor
add
das
xchg
sub
in
imul
sti
add
mov
lea
xchg
cmp
out
and
insb
and
cmp
jle
add
cld
outsl
rcrl
mov
add
shrl
push
ds
cs
jl
xchg
insl
or
or
movsb
sbb
rolb
sbb
dec
push
xchg
mov
lahf
xchg
dec
adc
jno
inc
dec
js
cmp
in
mov
cmc
insl
popf
loop
mov
scas
or
add
push
push
std
dec
pop
adc
push
bound
sbb
into
mov
add
fwait
lods
push
outsb
addr16
inc
adc
addb
mov
sbb
out
push
push
and
cmp
addr16
adc
sbb
mov
in
adc
les
lods
je
dec
cmp
xchg
hlt
jle
jae
nop
loope
in
mov
popf
movsb
add
addb
in
call
cmp
loope
add
test
dec
aad
jnp
inc
es
xchg
xor
ret
cmpsl
cmp
mov
movsl
push
dec
mov
push
cld
outsb
shr
sbb
xor
imul
push
stos
adc
sub
add
test
xchg
adc
dec
xchg
adc
ja
insl
jmp
icebp
mov
push
add
add
jg
lock
dec
sbb
push
cltd
add
mov
fistpl
sarb
stos
pushf
sarl
rolb
cs
mov
jg
sbb
inc
add
in
call
mov
xchg
iret
scas
shl
push
xchg
jge
xor
add
adc
mov
xchg
stos
aas
xchg
js
popw
adc
jo
pop
mov
lret
test
add
cmp
and
and
pusha
add
enter
sbb
or
sub
sbb
pop
ljmp
xor
push
leave
pusha
add
xchg
es
lods
out
shrb
sub
sub
sbb
sbb
mov
jae
in
jns
push
push
push
add
mov
addb
dec
sti
add
scas
mov
and
lret
pop
lcall
jae
jne
mov
js
aam
add
push
push
or
xchg
fxch
mov
ss
inc
fs
scas
rcrb
mov
mov
daa
in
or
mov
scas
ss
xlat
cltd
add
popa
in
fisubl
add
add
divb
rolb
push
fiadds
sbb
hlt
cmp
fists
sub
mov
enter
sbb
mov
xlat
jae
in
lds
sub
pop
sbb
pop
dec
clc
out
mov
cmp
repnz
push
mov
mov
insb
mov
xor
movsl
and
ss
or
stc
push
sbb
mov
or
loop
push
addb
into
adc
mov
push
cli
jae
jnp
xlat
icebp
insl
lods
arpl
ss
lea
test
int
add
testb
ret
or
pop
and
push
icebp
adc
pop
enter
dec
cmovns
dec
not
xchg
mov
addb
xchg
and
imul
rorl
sub
cwtl
je
adc
aas
sbb
lret
sub
imul
shrl
jp
pop
out
jno
add
lahf
aas
mov
jns
stos
es
pop
jg
jg
xacquire
jbe
or
add
int3
push
add
sub
decb
test
and
inc
dec
fs
pop
inc
movsl
push
jo
lahf
sub
fwait
in
incl
sub
icebp
stc
cmc
ret
jo
stos
fs
xchg
pop
into
test
jl
pop
push
imul
mov
not
mov
stos
test
repnz
sbb
repz
push
hlt
insb
and
loope
pushf
loopne
ficompl
rolb
or
pop
inc
add
test
mov
jmp
cmp
lcall
cmpsb
inc
add
sahf
ficoms
fidivl
ret
mov
add
popf
xchg
sahf
xchg
jo
add
jb
inc
add
sbb
push
mov
add
and
add
daa
xchg
pop
test
jne
xchg
dec
aas
mov
enter
lods
lock
cmpsl
pop
iret
or
add
sahf
jecxz
fdivrs
inc
mov
les
popa
dec
shlb
xor
jno
lods
sbb
jecxz
jg
fldlg2
sbb
out
mov
nop
add
xchg
adc
loope
add
es
js
scas
mov
dec
sbb
gs
popf
and
mov
js
popa
push
insb
sub
aad
xchg
lock
and
mov
cmc
mov
pop
sub
ret
out
jge
fsubs
mov
push
rolb
lret
pop
dec
fcoms
rcll
jp
and
repnz
lcall
cmp
je
jnp
mov
jo
ret
xchg
mov
push
pop
sbb
mov
imul
xor
lcall
mov
cmp
out
and
stos
cltd
xchg
sbb
add
mov
loopne
test
mov
mov
pop
fidivrl
cmc
mov
add
je
dec
push
mov
test
jne
stc
xor
popa
divl
clc
mov
lret
outsb
or
addb
add
xchg
mov
cmp
repz
add
negb
add
mov
mov
pop
mov
test
sbb
add
scas
mov
out
push
mov
pop
fnstenv
mov
sub
pop
stos
mov
fidivs
jne
hlt
cmp
sub
add
add
pop
and
decl
push
cmp
sarl
fwait
sar
dec
int3
or
popa
iret
mov
sbb
pop
addb
or
sub
sbb
pop
sbb
insl
loop
test
adc
rcrb
dec
push
aas
or
sub
push
push
or
pusha
add
or
inc
loopne
rcrl
add
leave
xchg
cmp
pop
dec
or
xchg
test
int3
mov
rcrl
and
insl
or
sub
out
adc
cmp
push
sub
incl
xchg
jmp
or
add
push
add
inc
cmp
fwait
cmp
mov
outsl
mov
add
jmp
rorl
mov
es
adc
cltd
mov
adc
mul
pop
sub
loopne
outsb
mov
add
dec
adc
out
sub
outsl
fs
inc
jmp
xorl
loopne
data16
mov
insb
or
add
std
jmp
or
sbb
lock
xor
cmpl
add
sbb
xor
cmp
xchg
pop
adc
add
sub
sti
lock
in
adc
add
cltd
sub
and
std
fcmovne
mov
inc
xchg
dec
popf
add
lods
imul
jne
push
int
addr16
lret
mov
dec
push
sbb
inc
add
inc
add
push
notl
test
add
mov
add
jo
xlat
nop
pop
test
pop
mov
jge
add
je
add
adc
jmp
jae
in
les
test
filds
pop
out
and
stos
in
fwait
dec
add
loopne
add
stos
imul
pop
mov
inc
cmpsl
xor
xchg
fidivs
dec
hlt
lods
out
lahf
pop
inc
add
cltd
mov
arpl
mov
adc
pop
mov
xor
push
pop
loope
or
hlt
stos
sub
cmp
jns
in
sbb
inc
add
xor
jbe
sub
fdivrl
pop
jl
push
sub
jmp
xor
inc
add
pop
movb
pop
daa
mov
addb
or
mov
xor
das
cmp
scas
lret
push
inc
add
clc
bound
mov
cltd
mov
loope
sbb
fistl
add
xor
mov
mov
idiv
loop
dec
pop
and
mov
inc
add
jbe
lcall
dec
inc
jmp
xchg
out
add
xor
mov
loope
scas
bound
dec
ljmp
ret
cmp
lea
xlat
mov
cmp
cmc
adc
mov
add
hlt
fbld
add
loop
mov
test
ret
fwait
push
fisttpll
shlb
xor
inc
xor
cltd
jne
and
mov
lock
scas
push
push
ds
jmp
add
xchg
xor
add
push
push
mov
push
mov
pop
iret
pop
mov
jl
addr16
xor
shrl
jmp
add
xchg
dec
mov
dec
into
iret
pop
xlat
add
and
xchg
cmpsl
jl
add
sbb
decb
addl
loop
add
xchg
clc
sbb
xchg
push
jnp
jae
jle
dec
dec
repz
xor
addr16
int
arpl
repnz
hlt
test
repz
sbb
and
sbb
loop
insb
xor
sub
add
orl
pop
insl
iret
pop
ljmp
mov
mov
jns
fsubrl
sub
test
icebp
aad
dec
push
jg
cmp
mov
add
cld
xor
stos
jg
add
adc
cmc
add
test
mov
jns
add
push
arpl
cmpsb
sub
nop
pushl
xchg
mov
mov
andl
xchg
cwtl
sub
gs
dec
jg
adc
fildl
add
push
mov
arpl
in
push
mov
mov
xor
jae
add
mov
into
arpl
xorl
add
lret
pop
loop
mov
mov
es
fisubrs
add
push
or
ret
mov
and
sti
jo
sub
add
into
xchg
inc
add
or
or
leave
sbb
xchg
lods
clc
push
mov
out
out
icebp
adc
mov
inc
add
sub
out
test
int3
test
or
xchg
or
xchg
jmp
ffreep
sahf
xchg
lods
mov
sbb
mov
mov
mov
in
addb
pop
adc
and
add
and
add
lret
out
jne
pop
ficoml
scas
cmpsb
in
xor
outsl
jb
xlat
xor
sub
mov
push
sub
xchg
or
movb
mov
cmp
xchg
xchg
iret
mov
add
add
aam
int3
lock
xor
sub
pop
shll
add
test
cmp
jmp
int3
imul
mov
xor
xor
sub
repz
jmp
jns
dec
jle
ss
fldt
lock
rep
dec
adc
jbe
nop
arpl
and
mov
jge
movb
add
inc
data16
jbe
pop
jp
sub
outsl
mov
pop
push
sub
stos
inc
add
loop
mov
add
push
dec
xchg
loop
push
mov
addr16
fistl
add
add
or
cmp
jno
jle
outsb
les
push
fwait
sbb
sub
movsb
xchg
inc
loope
mov
test
ud0
adc
jp
add
mov
and
mov
pmaddwd
addb
stc
cmp
sbb
jne
mov
mov
add
fistpl
inc
inc
add
jno
cld
push
fwait
bswap
or
add
rolb
inc
adc
inc
jl
aaa
inc
xchg
ljmp
push
xor
add
inc
add
jae
popf
mov
pop
jl
add
cmp
inc
stos
mov
lods
lea
pop
jnp
in
daa
iret
out
mov
sbb
xlat
lret
mov
scas
enter
popf
arpl
sarb
or
mov
inc
iret
and
stos
les
or
lcall
add
faddl
add
xchg
or
call
xchg
int
leave
pop
lods
cmp
jg
add
repnz
add
lret
mov
xor
daa
inc
add
add
cmpl
push
cltd
adc
test
insb
sahf
dec
movsb
jmp
add
xor
cmp
sub
call
add
sub
fnsave
cmp
mov
rol
add
cmp
out
cltd
push
xorl
icebp
jo
add
add
insb
pop
inc
add
lds
jecxz
and
mov
enter
add
add
xor
xlat
cli
xor
sub
jl
mov
add
dec
pop
enter
mov
cmp
mov
jecxz
imul
mov
sub
mov
sti
push
add
add
xchg
clc
adc
mov
push
lret
js
addb
aad
aaa
rorb
loopne
in
mov
lcall
add
or
cs
xchg
sub
jle
inc
inc
je
in
outsb
rcrb
or
sbb
jbe
add
or
out
ret
pop
insb
out
sbb
rcrl
insl
pop
in
fidivrl
loopne
xchg
pop
xor
xchg
ss
lock
mov
push
sub
add
fildll
sti
mov
repz
shlb
mov
js
jmp
fnstsw
shrl
add
adc
add
fstps
std
addb
ss
add
fldcw
scas
scas
adc
add
rcr
movb
jp
mov
jge
cmp
jp
pop
pop
mov
out
imul
add
mov
insb
call
movsl
and
arpl
sarl
inc
add
mov
push
adc
xor
bound
inc
add
and
fldenv
test
movb
pushf
pop
test
sbb
cmpsl
nop
cmpsb
daa
dec
mov
cmpsb
enter
cltd
dec
xor
add
sarl
push
rcrl
movb
scas
jecxz
jg
cmpsl
daa
cmp
movsb
and
fbld
aas
push
ret
mov
das
mov
das
pop
mov
dec
jp
dec
sbb
pusha
add
sub
push
sub
rol
dec
nop
xchg
inc
add
stos
cmp
sbb
pop
jns
aad
sahf
rcr
sti
mov
insl
ror
xor
lods
add
xchg
inc
add
fisttpl
stc
in
xchg
mov
mov
jl
cmp
add
and
lahf
into
jo
nop
adc
push
push
in
push
push
jle
dec
mov
add
movsb
mov
xor
inc
jl
jne
push
adc
sub
cmp
cwtl
and
pop
arpl
or
in
imul
ja
iret
fs
dec
dec
mov
mov
cltd
jecxz
pop
mov
xchg
inc
add
mov
cmp
lods
xchg
mov
mov
mov
in
dec
ret
stos
mov
push
imul
std
and
push
fcoms
inc
add
dec
adc
enter
ljmp
lock
int3
cmp
or
cvtps2pd
mov
push
add
pop
fcmove
jns
inc
add
sbb
jg
data16
sahf
test
and
mov
pushf
test
adc
jbe
jle
cld
or
add
xchg
loopne
pop
stc
mov
data16
mov
inc
add
addr16
inc
shl
movsl
data16
fisttps
add
shrl
loope
add
sbb
orl
arpl
lock
out
mov
cmp
mov
jmp
cmp
in
psllq
stos
sub
outsl
adc
pop
mov
mov
jecxz
push
aaa
js
mov
roll
dec
mov
bound
lods
imul
in
popf
lfs
repz
add
pop
lds
mov
and
xchg
negb
pusha
add
movsb
pusha
add
pushf
jae
sti
push
iret
mov
dec
popa
push
aad
or
jecxz
push
rcr
popa
mov
mov
adcl
pop
aad
sub
xor
push
rcrl
add
popf
cmpsb
push
out
out
mov
jecxz
push
xchg
in
sub
push
sbb
pop
sub
pop
adc
fs
add
mov
pop
adc
scas
inc
push
je
dec
out
ficoms
leave
inc
in
int3
pop
daa
xlat
sub
push
dec
cltd
sbb
scas
dec
out
loopne
push
xor
adc
xor
std
bound
ret
idivl
rorl
push
add
adc
xchg
add
add
add
enter
addb
das
jge
rolb
dec
push
jb
fdivs
fimuls
push
push
sub
ror
xchg
aas
jnp
mov
cmp
mov
xor
pop
iret
xchg
xor
dec
xchg
dec
dec
lret
push
sbb
ret
push
insl
push
cwtl
cmp
mov
cmpsb
fmull
cmc
rcll
sbb
sub
push
jae
fwait
jle
je
add
add
nop
adc
pop
mov
jae
lahf
mov
fucomp
addb
add
in
je
mov
into
out
push
frstor
repz
popf
call
mov
popa
adc
ja
sub
or
adc
xlat
fiaddl
call
inc
adc
adc
add
ror
mov
scas
xor
add
cmp
pop
int
xchg
adc
rolb
or
push
push
pop
stc
mov
les
jnp
add
jb
xchg
lds
fnstsw
cmpsb
fbld
jge
pop
inc
addb
popa
jo
jg
add
push
rcrb
enter
push
sti
or
js
add
ja
ljmp
or
cmpsl
test
jp
push
call
mov
insl
hlt
and
inc
fiaddl
add
jo
cwtl
and
cwtl
bound
pop
jbe
fistpll
pusha
add
stos
leave
dec
mov
lcall
das
test
int3
jle
push
cwtl
lret
insb
in
mov
sbb
push
movsb
addb
popf
xlat
mov
cs
mov
adc
aas
in
cmp
stos
cs
push
xchg
pusha
add
xchg
insl
mov
push
push
push
cwtl
enter
stc
mov
inc
rclb
rcr
or
stos
aam
add
sub
add
sub
push
pop
test
or
imulb
pop
xor
ja
mov
add
push
push
push
xor
mov
add
sahf
mov
cmp
mov
push
pop
or
mov
ficoml
xor
add
add
pop
add
mov
jecxz
je
add
or
sub
fistpll
cmp
pop
leave
sub
add
xchg
testb
xchg
scas
pop
outsl
mov
cmp
pop
xor
fsubs
stos
loop
lea
mov
mov
pusha
add
aas
insb
xor
pusha
add
aas
xor
push
add
dec
lcall
jmp
ds
inc
add
bound
dec
jl
or
iret
clc
jge
jns
jo
pcmpgtw
adc
inc
add
xor
mov
cmp
inc
dec
mov
fs
add
add
bound
inc
jle
add
lea
inc
add
add
cmp
mov
std
pusha
add
lock
dec
mov
mov
pop
aam
addb
mov
mov
adc
jp
outsl
mov
add
in
aam
jns
lods
loope
pop
int
mov
jle
les
fs
pop
xlat
push
sahf
pop
icebp
mov
cmp
loope
push
aas
mov
sarl
fnsave
dec
and
fsubs
push
cmp
add
wbinvd
aad
sub
xchg
loopne
sub
and
imul
iret
lock
popf
insl
daa
movb
push
add
mov
cli
dec
inc
lods
jmp
mov
pop
sbb
inc
cmp
out
ja
mov
out
out
cs
mov
add
inc
in
rclb
add
cmp
bound
stos
das
imul
add
mov
ret
and
pop
sbb
in
push
loop
or
xchg
clc
int3
mov
jbe
mov
add
and
cmpsl
cmpsl
sahf
scas
test
in
push
pop
push
inc
and
stos
mov
repz
insl
xchg
dec
dec
test
in
xchg
movsb
mov
out
mov
outsb
jnp
dec
xchg
lcall
xchg
in
mov
jge
jp
mov
sbb
add
pop
push
dec
mov
aaa
subl
mov
lahf
xlat
cmp
movsl
mov
jle
add
add
popf
mov
lock
push
sti
out
fistps
add
jne
pop
call
xor
test
lret
in
sbb
pop
popf
test
mov
cmp
mov
dec
dec
je
xor
fstps
mov
out
xchg
lcall
lret
fstl
es
xchg
cmp
flds
pusha
add
shll
cmc
mov
or
call
arpl
addb
ret
icebp
xor
add
push
mov
jle
mov
call
cmp
addr16
ja
pop
psllw
mov
sbb
std
jbe
jbe
mov
mov
mov
pop
xchg
das
fdivrl
sahf
or
or
out
dec
push
push
adc
add
xchg
mov
jg
fwait
in
dec
movsb
loope
popf
jmp
add
shll
cmp
mov
sarl
inc
add
jge
sub
push
add
jnp
scas
pop
mov
mov
jo
cs
imul
or
les
movb
dec
out
repz
inc
movb
mov
add
pusha
add
add
loopne
mov
jmp
add
gs
dec
cwtl
push
sub
mov
rorb
clc
les
or
add
sub
push
ret
adc
jle
insl
mov
adc
cltd
sbb
aam
mov
pop
or
push
scas
out
jge
int
rolb
ljmp
mov
adc
jle
add
je
push
mov
lods
push
add
add
cmp
aaa
icebp
push
add
sub
scas
push
loope
lods
std
mov
jge
inc
fcoml
fdivrs
mov
or
cltd
pop
enter
stc
scas
push
rolb
pop
push
stc
cmp
in
push
iret
in
mov
add
pop
jbe
mov
lret
addb
mov
pop
nop
inc
add
aas
push
mov
test
lcall
adc
lcall
mov
in
or
rolb
or
iret
sbbl
and
ret
mov
mov
or
xchg
adc
inc
jmp
fsubrl
not
push
daa
icebp
cmpsl
xor
jo
cmp
add
sbb
inc
ljmp
pop
cmp
dec
mov
and
push
dec
xor
add
cmpsb
lahf
sub
test
xchg
stos
xchg
hlt
fucom
movsl
inc
add
or
outsl
or
inc
add
xor
in
pusha
add
push
push
mov
cs
mov
and
mov
cmpsb
in
stos
sti
mov
aad
add
scas
pop
jecxz
fucom
xor
add
leave
movsb
pushf
jg
decb
popa
pop
sbb
insb
sahf
sbb
idivl
add
adc
sti
or
insl
and
lret
pusha
add
add
mov
xchg
aad
inc
mov
enter
xchg
lret
loopne
add
fs
sbb
xor
mov
jae
jg
jecxz
pop
mov
xchg
xchg
dec
les
cmp
push
mov
add
cmpsl
jb
cmpsl
leave
xlat
pusha
add
mov
add
add
sub
dec
xlat
lahf
or
pop
xor
adc
pop
xchg
sbb
xchg
scas
dec
xor
les
cmp
aam
fisubs
scas
fisttpll
shlb
xchg
lret
jecxz
push
jmp
jns
add
push
es
push
test
fadds
loopne
inc
lea
pop
insl
test
addr16
push
fisttps
scas
pushf
jne
lods
pop
jle
xchg
testl
rorb
sub
mov
add
xchg
movsl
call
jo
shll
xchg
sbb
xor
cli
cmp
test
shrb
adc
add
in
mov
js
popf
mov
lods
scas
aam
cmc
stos
ss
mov
arpl
inc
add
xchg
stos
cwtl
inc
add
add
cltd
adc
frstor
pop
or
fmull
imul
pop
xor
dec
stos
sub
mov
push
pop
or
test
cmp
add
add
mov
das
fidivrs
imul
lret
xchg
jecxz
cmc
test
xchg
lcall
bound
nop
push
add
add
stos
dec
inc
add
cmc
imul
xchg
jle
lret
nop
dec
sub
or
add
mov
sub
fnsave
pop
mov
js
sahf
push
fadds
xor
mov
add
stc
in
push
cld
push
popf
cmpsl
add
dec
xchg
push
jecxz
call
cmpsl
push
push
add
test
out
out
in
xlat
pop
cmp
imul
jmp
sahf
and
fstpt
std
inc
add
jno
sti
aam
filds
pop
pop
pushf
lods
ljmp
sti
cmp
shl
xor
rolb
xorl
xlat
rolb
push
add
jnp
cld
mov
push
mov
xor
bound
jge
add
cwtl
push
and
add
or
int
push
sti
push
push
insb
xchg
xchg
test
add
push
je
cmpsb
lock
rep
jnp
addb
popa
mov
add
fnstsw
add
add
sahf
mov
bound
aas
add
jne
jne
sahf
cmc
inc
sub
iret
out
xchg
inc
js
sub
pop
mov
sub
xchg
mov
out
sub
ja
insl
scas
vhaddps
enter
xchg
push
sub
mov
bound
sub
mov
pop
lods
out
cmp
cmp
xchg
mov
cmp
cmc
sti
enter
inc
add
lret
xchg
sub
add
dec
cli
or
inc
add
jne
xor
mov
jle
add
pop
mov
inc
sbb
xchg
jge
push
mov
jp
sub
inc
jae
mov
dec
arpl
push
imull
xor
cmp
popa
jl
lods
inc
jp
pop
loope
mov
jne
call
jne
fcomps
push
add
daa
iret
pushf
jge
adc
iret
fimuls
xor
or
rcl
cmpsl
jp
add
aad
push
add
test
scas
jne
add
popf
fisttpll
mov
and
and
push
in
call
or
rolb
repz
cmp
or
add
pop
or
rolb
add
cmp
mov
ret
sbb
imul
add
inc
stos
sub
sahf
movsb
repnz
mov
sbb
imul
adc
and
dec
xor
das
pop
cmp
cmp
mov
aaa
cmp
inc
add
ljmp
adc
bound
inc
add
cld
add
cmp
xchg
rcl
push
and
sbb
xchg
and
sbb
and
push
bound
imul
adc
add
repz
add
add
bound
jle
stc
or
sub
lret
xchg
shrb
mov
out
enter
add
std
jge
arpl
xor
add
lret
cmc
adc
pop
out
mov
dec
hlt
imulb
movl
add
in
or
sti
mov
repnz
add
in
and
push
xlat
cmpsb
push
cltd
int
add
push
add
mov
sbb
cmc
mov
daa
dec
xchg
movl
outsl
clc
fsubl
out
pop
xor
or
add
cmp
fdivl
mov
into
sti
add
out
decb
xchg
mov
hlt
daa
and
mov
outsb
cwtl
mov
aam
xor
into
cmp
add
hlt
xor
adc
arpl
js
dec
fwait
test
test
cld
fwait
and
int3
fdivr
push
sbb
cmpsb
outsb
repz
xor
push
push
je
push
leave
outsb
mov
insl
ret
or
add
repz
lahf
sub
ja
mov
inc
add
stos
inc
and
inc
pop
mov
pusha
add
adc
mov
mov
add
addb
cmp
mov
xchg
jbe
mov
mov
addb
mov
js
jnp
cmc
push
adc
push
xchg
jl
xchg
jl
cwtl
or
adc
sub
pusha
add
cltd
sub
push
popf
mov
add
hlt
xor
addb
pop
inc
movsl
sub
add
sbb
nop
inc
add
rcrb
push
xor
bound
sub
and
dec
mov
mov
mov
xchg
das
jge
xor
push
add
leave
mov
add
cld
rcrl
jl
push
adc
xchg
push
int
mov
dec
imul
sub
mov
mov
push
cld
les
dec
movsl
jbe
ret
cmp
mov
ja
insb
pusha
add
cltd
addb
pop
shl
inc
pop
insl
daa
mov
adc
pop
fists
cwtl
hlt
pusha
add
mov
fidivs
bound
mov
lret
fwait
cmp
push
in
cmp
jp
jecxz
push
push
in
pop
jmp
sbb
popa
movsl
lods
push
pushf
into
stos
xchg
outsb
mov
popa
popa
push
jbe
andl
inc
add
mov
fs
cs
sbb
gs
mov
add
insl
dec
add
test
fisubrl
mov
test
lret
mov
in
rolb
cmpsb
shrb
xor
bound
scas
add
sbb
das
test
into
dec
cli
shlb
out
cs
notl
test
jno
insl
mov
xor
jecxz
ljmp
cmp
std
add
aas
pop
dec
pop
add
mov
push
mov
pop
popa
add
stc
pop
cmp
and
movsl
ds
leave
cmc
daa
mov
push
pop
jecxz
ficoml
mov
add
add
outsl
dec
push
movsb
repnz
in
call
mov
rolb
mov
repnz
push
das
and
inc
add
push
pop
insb
lret
lret
adc
addb
out
push
mov
mov
and
out
mov
adc
ja
inc
je
sub
pusha
add
mov
cltd
imul
add
push
add
xchg
outsb
js
add
adc
add
mov
lahf
movsb
call
clc
add
cmpsl
jns
into
mov
out
ss
add
xchg
arpl
add
and
add
ljmp
ja
add
sti
push
add
pushf
int
add
mov
mov
xchg
test
ja
fidivrs
sub
and
sub
mov
add
imul
flds
mov
shrl
roll
push
mov
ffreep
add
add
aas
jmp
and
rolb
adc
adc
mov
add
or
adc
pop
add
add
int3
pop
dec
inc
add
loop
cmp
dec
fiaddl
add
xchg
lods
sbb
add
sahf
repz
jge
inc
add
or
xor
push
gs
aas
mov
or
mov
fistl
and
add
push
pushf
and
scas
dec
movb
push
fldenv
faddl
insb
imul
push
ficomps
lret
lock
cmpsl
and
xor
xor
push
cli
mov
sbb
and
pop
push
push
out
lahf
jnp
mov
lods
insl
test
test
dec
add
orl
cmpsl
or
test
std
lds
dec
jbe
adc
imulb
dec
jbe
adc
xbegin
push
pop
rorb
cwtl
xor
jo
adc
fcmovb
addb
rorl
clc
lret
dec
fstps
addb
fnstcw
jmp
xor
mov
jnp
testl
add
push
pop
ret
out
mov
mov
int3
pushf
push
pop
and
sbb
lods
adc
loope
adcl
and
xchg
push
jns
cmp
xchg
data16
imul
dec
in
fsubrl
sub
addl
add
add
jno
test
clc
push
imul
adc
or
xor
int
clc
push
sbb
add
out
push
sub
out
xchg
mov
cmp
jmp
out
into
stos
iret
addb
xor
inc
add
rclb
sbb
sub
pop
push
add
shll
add
lahf
ffreep
inc
test
and
aas
addb
add
push
cmp
pop
ss
xor
test
xor
or
jb
mov
push
leave
scas
mov
add
dec
push
in
dec
xchg
sub
sarl
movsl
cmp
cmp
movb
addb
push
mov
fsubs
out
repnz
dec
push
mov
push
push
and
sbb
add
inc
add
jne
or
rolb
insl
inc
lods
mov
mov
adc
ja
add
call
neg
sub
inc
add
add
xor
add
loop
popf
popf
stos
shl
lahf
imul
pop
adc
add
mov
movsl
jl
jp
sbb
mov
cmp
add
cmp
pop
cmpsl
fidivrl
popa
mov
and
inc
xor
or
lcall
rolb
push
sub
xor
add
cmp
cmp
add
lcall
add
fidivl
jno
pop
sub
xchg
mov
idivb
mov
fisttpll
pop
add
add
push
add
sbb
iret
cs
insb
lea
lret
fnstcw
mov
and
pusha
add
sahf
rcr
je
or
lcall
arpl
mov
daa
in
iret
insb
xchg
fstpl
push
sbb
or
mov
mov
push
add
inc
pop
mov
cld
test
push
jp
mov
hlt
sbb
jmp
inc
ja
roll
or
and
or
neg
jecxz
push
add
pop
and
mov
pop
fidivrl
hlt
xor
push
dec
or
movsl
dec
enter
cwtl
js
mov
jmp
pop
notb
xchg
lea
mov
add
sub
add
inc
add
jmp
in
loopne
mov
pop
mov
jns
jb
or
cmp
stos
fidivl
sbb
mov
add
mov
lahf
and
mov
loope
js
add
hlt
xor
push
cmp
and
negb
aaa
cmp
sbb
stos
jge
inc
xchg
sub
mov
andl
shlb
loope
mov
cmp
sub
sbb
inc
add
outsb
add
jae
stc
pop
stc
inc
add
insl
jne
and
xor
pop
xchg
pop
dec
cmc
sbb
add
out
movsb
push
push
xorl
lret
sub
xlat
pusha
add
insb
jg
aad
roll
shll
dec
popa
icebp
mov
adc
movb
mov
fs
add
adc
addb
add
insl
mov
add
inc
and
mov
outsl
into
xchg
mov
mov
ficoms
in
jge
mov
inc
cld
movsb
inc
jnp
int3
fcoml
and
inc
add
popa
or
fcoml
mov
cmp
mov
int
sbb
negl
sub
xchg
jns
or
aam
cltd
lcall
adc
jno
sbbl
jle
add
inc
sbb
ffree
add
adc
and
out
dec
fisubrl
sarl
fildl
xchg
in
inc
loope
add
mov
add
xor
out
pop
aaa
xor
or
fs
inc
repnz
lods
movl
movsl
pop
mov
push
add
adc
popa
push
cmp
add
ds
mov
loope
lcall
movb
dec
movsb
int3
shll
or
leave
insl
pop
mov
mov
sub
pop
dec
xsha1
cmpsb
lea
add
add
mov
dec
stc
adc
add
leave
mov
add
add
shll
jg
push
stos
fiaddl
sub
sub
lret
loopne
arpl
fidivl
pop
cmpsb
lahf
dec
aad
jp
sbb
test
cltd
dec
adc
or
incb
js
inc
add
sbb
mov
add
xor
pop
mov
seta
fists
in
lret
adc
dec
sub
stos
mov
jge
addr16
out
mov
bound
jmp
mov
stos
adc
outsl
loopne
loop
add
sub
dec
dec
pop
test
xchg
jne
in
and
adc
aaa
cmp
mov
repnz
clc
out
mov
fisubrl
or
movsl
or
ffree
add
xor
lret
cld
dec
jg
jp
push
lods
add
imul
pop
jno
jg
add
add
xchg
push
sbb
xchg
and
mov
scas
jle
jne
add
test
jge
xor
orl
test
xchg
addb
add
fisubrs
mov
lock
sub
sti
fdivs
inc
push
inc
add
fsubl
cmc
mov
mov
push
into
cmp
push
insb
mov
xchg
adc
sub
addb
sub
or
add
jecxz
add
insl
inc
in
add
cltd
lret
mov
pop
loop
fstl
fdiv
pushf
pop
adc
movsb
mov
sub
loop
ret
mov
add
push
ret
or
and
mov
pop
cli
les
scas
sbb
test
mov
push
add
push
ret
in
js
mov
adc
sbbl
add
add
test
mov
add
js
add
fnstcw
xor
fndisi(8087
aad
addb
inc
add
inc
mov
mov
lcall
add
cli
shrb
xchg
dec
xlat
fisubrl
fs
bound
ret
ljmp
daa
push
add
rorl
repnz
cmc
adc
inc
xchg
inc
add
add
jnp
push
inc
add
sub
test
cmp
xchg
jae
dec
loopne
ret
mov
push
fnsave
cmp
add
adc
xchg
pop
adc
cmp
cmpsl
lret
cmc
fistpl
jmp
add
es
push
stos
insl
xchg
test
pusha
add
and
and
testb
add
insb
scas
in
psrlw
lret
lret
filds
fdivs
into
xor
in
js
aam
rcrl
out
fmull
xor
imull
add
test
dec
mov
xorl
add
mov
add
mov
int
movb
add
xchg
jnp
add
xchg
or
add
add
or
inc
daa
xchg
addr16
mov
xchg
push
jne
add
sbb
bound
movsb
inc
add
outsl
push
in
push
and
test
add
vmread
add
mov
jp
jl
fildl
out
mov
loopne
lods
xchg
fincstp
sbb
in
sbb
pop
hlt
cwtl
mov
adc
sahf
in
jne
lahf
jne
adc
dec
das
dec
negb
clc
dec
sub
add
mov
mov
aaa
sti
jne
addr16
push
jo
dec
mov
xchg
lds
xor
jl
sub
jle
mov
roll
inc
add
loop
push
add
jecxz
mov
std
inc
add
cmpsl
sarl
stos
mov
pop
lahf
pop
push
sbb
imul
pop
cltd
add
mov
push
test
mov
add
mov
pop
aas
fistpll
fdiv
add
jne
ds
jl
xor
push
or
imul
mov
mov
pop
roll
pop
insl
jmp
pop
rcrb
add
out
repz
adc
leave
notl
out
mov
int
add
push
fisttpll
jo
scas
int
ja
icebp
fnstenv
and
pusha
add
jmp
addb
in
mov
insl
hlt
hlt
add
dec
addr16
add
dec
aaa
and
int3
xor
out
arpl
mov
cli
cmc
repnz
mov
lahf
ljmp
mov
fldt
dec
inc
add
mov
fnsave
jp
jno
ja
dec
test
pop
add
xor
in
push
add
in
jl
add
add
jns
sub
sub
dec
popf
xor
jmp
add
xchg
xor
xchg
mov
mov
add
into
xor
pop
jb
ret
js
out
and
and
dec
add
ja
push
dec
repnz
or
sbb
add
add
dec
jae
lds
xor
push
das
fldl
in
into
xchg
cli
mov
xchg
pop
imul
movb
inc
add
mov
dec
loopne
lret
lret
mov
add
addb
lcall
scas
dec
mov
scas
sub
jnp
rep
adc
addr16
or
push
mov
push
out
cmp
out
sbb
jecxz
mov
jl
adc
jp
adc
or
sbb
aam
mov
repz
in
clc
stos
dec
insl
push
arpl
test
inc
and
add
inc
add
dec
jge
xor
add
fisubs
addb
jb
and
movsl
int
xchg
pop
adc
adc
pop
negl
fidivrl
push
pop
mov
das
sub
stos
call
xchg
outsb
inc
add
in
or
xchg
rcr
mov
push
mov
std
pop
test
pop
push
push
mov
sbb
jle
lea
add
addb
pop
mov
add
paddsb
loopne
aam
test
jge
out
popf
lods
fstpl
mov
push
test
add
mov
lcall
dec
jecxz
mov
in
mov
test
loop
push
cltd
aad
imul
rcrb
mov
inc
push
dec
push
pushf
push
push
push
add
scas
add
ds
clc
in
and
dec
adc
pop
add
pop
mov
out
aad
mov
push
sbb
in
lods
cmpsl
out
ret
call
leave
jl
add
loop
add
add
lcall
xchg
or
outsb
seta
les
or
mov
icebp
inc
add
enter
scas
cmp
jp
cwtl
les
push
ljmp
iret
push
mov
std
push
inc
mov
xor
push
repnz
in
repnz
hlt
mov
push
push
test
rorl
sub
fdivp
xlat
in
sub
or
ror
pop
cs
mov
inc
sahf
iret
divb
sbb
int3
ret
test
imul
mov
pop
push
push
cmp
mov
loopne
inc
pop
mov
clc
es
add
add
mov
mov
add
das
subl
std
sub
aam
test
inc
or
inc
add
push
movsl
ja
add
push
bound
or
cli
lcall
daa
mov
add
out
addb
dec
lds
gs
addb
mov
mov
repz
pop
sub
or
pop
lahf
pop
int
mov
mov
or
movb
pop
mov
adc
jmp
outsl
mov
fildl
js
aas
add
xchg
mov
popf
mov
cmp
in
addb
mov
scas
arpl
cmp
dec
pop
mov
in
xchg
add
mov
fsts
in
aas
aad
add
std
push
push
addr16
adc
jmp
add
add
xor
or
mov
js
jns
add
add
add
xlat
jmp
push
adc
addb
mov
xor
mov
dec
bound
je
fcomi
aas
dec
lock
jmp
mov
mov
cmc
je
mov
hlt
push
jmp
add
add
add
out
cltd
and
outsb
fstps
loope
dec
xchg
scas
test
movsl
push
imul
mov
ret
les
xor
lcall
int3
xchg
xor
add
or
pop
lock
add
lods
mov
enter
dec
or
and
fisubrs
push
xchg
lret
add
insl
sub
sub
push
dec
xchg
cs
or
jns
out
or
jle
add
mov
pushf
jl
int
inc
add
out
xchg
pushf
insl
push
add
movl
push
cmp
mov
mov
mov
xor
fisubrs
cmp
outsb
xlat
bound
mov
aam
or
ds
add
idivb
fcoml
add
mov
push
jecxz
add
pop
pushf
push
add
push
jnp
jno
adc
ljmp
je
cmp
jne
pop
je
mov
lock
mov
dec
negb
out
cs
jns
test
fidivl
xchg
jg
out
je
add
inc
add
rcll
shlb
loopne
xchg
jno
push
inc
mov
mov
pop
je
mov
test
sbb
add
dec
cmp
stos
fwait
dec
mov
mov
add
mov
push
sbb
pop
mov
mov
add
sbb
pop
jp
pop
fstps
fidivl
stos
mov
dec
shrl
pushf
nop
mov
xchg
lods
les
leave
icebp
jge
loopne
fcomi
mov
mov
xor
aad
add
dec
leave
and
push
out
lret
push
loopne
mov
insb
loope
sub
imul
jbe
inc
add
push
add
addr16
jae
aaa
adc
ss
pop
and
xor
push
pop
pusha
add
push
mov
inc
fistpll
jle
dec
pop
insl
xchg
dec
adc
int
inc
add
inc
scas
jmp
pop
testb
adc
lea
pop
add
ror
push
sub
push
xchg
fwait
jl
sub
loopne
rclb
sub
lea
filds
mov
pusha
add
test
push
add
insb
outsb
movsb
sarb
cmp
jge
jecxz
cmpsb
test
xor
cmp
negb
jns
and
and
dec
inc
add
push
ja
mov
dec
mov
add
sub
out
and
fwait
pop
sbb
dec
pop
xor
sbb
addb
or
add
jge
pop
jb
and
pop
push
lcall
adc
ljmp
ds
inc
add
adcl
hlt
sbb
out
je
add
pop
mov
pop
mov
fyl2xp1
inc
jecxz
popa
test
jge
inc
add
out
mov
scas
movsb
daa
sbb
adcl
and
jmp
or
test
aam
dec
xchg
xacquire
jnp
or
add
pop
sbb
and
popf
and
outsb
sub
sub
dec
lret
bound
jo
stos
es
xor
add
sti
xor
mov
inc
add
mov
xor
adc
mov
add
add
push
mov
aad
pop
jecxz
xchg
inc
add
pop
jecxz
addr16
mov
pop
add
lods
jge
int
in
add
mov
add
dec
dec
xor
and
fsubrs
add
cwtl
ret
cmp
xchg
fwait
or
cmc
fiadds
add
xor
ljmp
hlt
push
test
and
ja
ret
aaa
xor
mov
sub
add
lds
movsb
nop
mov
dec
sbb
sbbl
sti
aad
jmp
in
inc
jmp
fists
repnz
or
addb
cli
push
cmp
cmp
cmp
inc
add
das
mov
jbe
les
dec
stos
pop
jge
sub
add
mov
mov
xor
xchg
inc
rcll
cli
stc
xchg
das
imul
aad
mov
mov
jbe
not
mov
cmpl
cmp
xchg
and
or
jp
int3
pop
int3
lea
test
push
mov
pop
leave
and
adc
out
mov
mov
push
nop
rcll
lret
jae
pushf
shrl
pusha
add
add
mov
int3
pop
sub
mov
lods
hlt
jge
adc
dec
popa
xor
and
and
in
vpor
mov
jae
das
xor
jns
push
add
jno
add
fmuls
cld
mov
push
jne
add
loope
popf
pushf
sbb
cmpsl
jns
mov
subl
jmp
imul
sahf
cli
pop
or
cmpsl
mov
cli
jl
fwait
ss
push
loop
test
adc
push
xchg
mov
sub
adc
lods
aam
in
cmc
push
int
mov
out
mov
xlat
std
movsb
jp
jne
ss
add
dec
in
or
hlt
outsl
push
je
mov
jo
imul
cmpsl
mov
ja
sub
test
icebp
push
scas
shrl
push
ja
mov
xor
sahf
push
cmpsb
test
xchg
and
add
inc
mov
movl
idivl
cmp
xor
jl
jp
jp
loop
add
test
hlt
xchg
mov
repnz
pop
ds
xchg
xchg
mov
addb
fwait
mov
popf
or
ret
push
lock
outsl
sbb
adc
movl
adc
test
cmp
shrb
add
add
xor
fnstenv
jle
adc
add
push
jo
sahf
mov
addr16
or
js
lods
call
stos
jmp
imul
cwtl
adc
sub
mov
lea
dec
sbb
add
add
clc
xorl
cmp
jl
push
outsl
xchg
movsb
int3
bnd
add
add
fisttpll
popa
push
jp
aam
adc
fistps
fsts
xlat
push
pusha
add
adc
stos
pop
or
and
je
popf
and
pushf
hlt
ljmp
dec
push
sbb
fadds
cmp
das
jne
mov
sbb
push
insl
jle
sti
stc
sbb
add
dec
arpl
jo
sub
hlt
pop
jbe
mov
add
pop
rolb
movb
sub
rcll
ljmp
lea
lods
movb
jbe
loope
cmp
jb
push
add
cmpsl
enter
sub
mov
fcoml
in
jle
xchg
jg
inc
add
or
lea
fiaddl
xchg
jne
add
ljmp
movsb
mov
add
mov
pop
cmp
inc
add
aas
ljmp
pusha
add
movsl
inc
add
rorl
push
sub
push
in
xchg
xor
decl
bound
add
add
addb
mov
std
jecxz
adc
movsb
cli
push
add
add
fdiv
dec
lea
mov
add
add
bound
lahf
dec
loop
hlt
adc
add
mov
add
sti
cmp
add
bound
addb
pop
sub
or
fmull
ret
xchg
xor
push
mov
cld
ret
scas
stos
mov
or
imulb
and
test
or
xchg
movsb
mov
add
mov
push
mov
cltd
xchg
dec
push
sub
lods
jns
fucom
bound
test
mov
cwtl
lods
pop
xchg
in
das
push
repnz
dec
xor
jo
mov
push
ljmp
add
jecxz
aaa
adc
jg
push
xchg
pop
adc
jno
xor
in
roll
sbb
test
sbb
add
adc
push
pushf
mov
jb
push
ljmp
rorl
imul
or
lods
in
repnz
pop
out
inc
add
icebp
sbb
negb
fadds
scas
subl
in
les
daa
lahf
sbb
add
das
xchg
lds
cwtl
xchg
lds
jae
insl
scas
dec
push
outsb
jb
push
or
add
pop
loop
addb
and
xchg
adc
push
jge
add
add
add
add
xor
sarb
add
push
mov
add
cmp
aas
pop
fsubl
shrl
in
jno
sbb
mov
pop
movsb
in
addr16
inc
je
dec
mov
mov
mov
mov
rcll
jns
add
jno
mov
clc
dec
mov
sbb
mov
in
adc
into
mov
add
or
add
jl
push
inc
add
push
into
push
dec
sub
add
pushl
cwtl
pop
hlt
xorl
jg
and
rorl
addb
xor
xchg
jp
mov
mov
data16
sbb
lea
clc
cwtl
or
xor
or
sbb
cmc
add
mov
mov
mov
jns
push
adc
xchg
scas
add
cwtl
fiaddl
adc
es
lock
je
outsl
test
add
push
push
or
or
dec
enter
cmp
add
sbbl
mov
add
inc
add
mov
push
mov
sbb
sub
insb
jge
clc
cmovge
or
pop
lahf
pop
insb
lock
push
mov
add
fists
loope
sahf
jns
ja
lret
iret
adc
mov
adc
add
adc
add
mov
dec
cli
frstor
mov
out
out
cmpsb
push
mov
add
adc
and
pop
addb
mov
stos
repnz
scas
sbb
pushf
mov
loope
loopne
xchg
push
aaa
ss
stos
inc
fiadds
lods
mov
mov
cltd
inc
ret
adc
xor
mov
clc
add
xor
add
lahf
jo
repz
jns
mov
cmp
call
enter
cld
imull
jno,pn
insb
mov
lcall
test
xchg
fucomp
mov
fisubrl
jle
dec
aas
enter
ljmp
add
jp
add
pop
pop
rorl
adc
cmp
ss
enter
sbb
rclb
inc
push
pop
lahf
popa
dec
test
push
movsl
xchg
fldt
sbb
jmp
std
std
dec
dec
loop
xchg
mov
out
mov
dec
mov
push
xchg
sbb
movsl
test
mov
aaa
rolb
movb
add
add
xchg
ljmp
lret
or
adc
out
cmp
dec
adc
xchg
scas
iret
inc
bnd
mov
inc
ljmp
push
mov
mov
sbb
push
pop
pop
sub
or
loope
cmp
les
add
fs
cwtl
add
cli
pushf
and
imul
testb
sarb
call
fs
push
xor
test
inc
add
jmp
outsl
rorl
mov
add
push
push
orl
ds
rcll
aaa
xchg
mov
sbb
jmp
or
and
jp
add
pushf
adc
ret
psllw
mov
lcall
sahf
and
and
mov
push
add
xchg
dec
inc
fsts
out
loopne
dec
and
lods
add
testb
cmp
inc
push
nop
icebp
inc
sbb
enter
into
pop
daa
jge
mov
cli
sbb
inc
push
or
dec
dec
dec
adc
mov
imul
test
mov
add
cmpsb
mov
add
cmpsl
sub
or
add
push
addr16
test
lret
cmpsl
pop
lock
and
icebp
loop
jp
lea
lret
rorb
jo
add
add
adc
mov
stos
add
mov
pop
pop
push
mov
cmp
add
je
lahf
dec
pop
lods
mov
mov
inc
add
mov
dec
mov
insl
cli
xor
sbb
out
xor
add
lret
lods
mov
dec
dec
and
jbe
pop
inc
add
add
sub
ja
and
cmp
push
jecxz
mov
sbb
leave
loopne
add
push
jg
test
fbstp
test
jge
mov
adc
icebp
aas
mov
sub
xchg
jbe
fwait
xchg
xchg
mov
test
xchg
pop
call
imul
int3
add
cmp
pop
outsb
add
fisubs
leave
xchg
xor
push
mov
ret
stos
daa
popa
imul
mov
add
icebp
insl
xchg
and
stos
pop
movsb
out
adc
pop
sub
mov
push
add
push
inc
add
push
mov
jne
loope
gs
xor
sbb
add
mov
xlat
pop
ljmp
int3
sbb
jge
loope
pop
pop
into
lahf
movsl
mov
pop
fwait
je
addb
jne
addb
xchg
jbe
hlt
loope
sbb
out
int
cmpl
add
movsl
lret
jg
les
adc
or
insl
sbb
subl
lahf
xchg
cmp
mov
jle
xchg
sub
ljmp
adc
imul
fsubl
jp
fwait
in
jne
je
add
pop
mov
add
add
lds
add
xor
mov
cmc
jge
xchg
out
mov
inc
add
mov
sbb
leave
xchg
push
cmpsl
popa
pop
lods
movsl
lods
add
into
push
ret
and
jno
ja
shll
mov
add
pop
mov
add
test
mov
pop
dec
xor
fisubrs
enter
ja
fwait
mov
dec
sub
xchg
push
pop
mov
jnp
test
ret
movsb
loop
clc
mov
in
pop
dec
cmp
mov
sti
sti
dec
xchg
and
scas
dec
push
stos
loop
in
lret
mov
mov
pop
idivl
sbb
cmp
clc
add
and
push
xor
add
sbb
or
add
jmp
mov
scas
dec
adc
or
adc
push
aam
cmc
or
sub
sbb
lock
pushf
xchg
sbb
add
add
cmp
push
ret
push
iret
mov
add
insl
addb
adc
into
imul
lret
ljmp
add
add
lret
mov
xor
addr16
inc
rcrb
add
test
jns
jae
add
ja
sahf
jl
pop
dec
lods
mov
jo
add
ret
mov
fisubs
mov
pushf
mov
jno
imul
push
add
sub
mov
lcall
xor
fs
xor
push
imul
movsl
inc
add
sub
add
add
cmp
lods
daa
inc
add
fnstsw
shrl
movb
aam
add
mov
xor
xor
stos
fwait
pushf
and
pop
sbb
sub
arpl
add
add
hlt
mov
out
repz
add
mov
aam
mov
in
xor
rcll
add
cmpsb
mov
fstps
fiaddl
sbb
push
pop
mov
jp
pop
push
sbb
xchg
pop
stc
or
mov
cs
pop
nop
in
ja
push
mov
nop
push
fists
daa
sub
idivl
cwtl
out
jl
mov
in
fucomip
decb
jmp
mov
lahf
xchg
and
nop
fcomi
push
cmp
repz
in
out
xchg
ja
cmp
xchg
pop
int3
and
nop
push
xchg
push
in
daa
adc
cmp
int3
jmp
xchg
int3
arpl
arpl
mov
int3
fldl
mov
mov
hlt
xchg
ljmp
jecxz
into
movb
mov
mov
test
sahf
or
sub
add
out
les
addr16
mov
xchg
inc
add
cmp
add
cmpsb
mov
sub
test
clc
mov
les
push
sub
add
add
les
and
in
lret
aam
jo
movsl
dec
inc
mov
pushf
aas
sbb
add
pop
mov
movb
test
mov
sti
pop
mov
push
add
add
pop
fidivl
push
ds
mov
and
cmp
cwtl
push
mov
call
test
addr16
cmp
lcall
inc
or
scas
sub
andl
addr16
into
test
out
arpl
mov
push
int3
rorb
jecxz
mov
pop
add
cld
iret
lds
jns
mov
sbb
stos
dec
cld
in
lds
dec
lock
add
inc
add
stos
mov
call
inc
add
out
mov
hlt
mov
xlat
rcrl
jmp
adc
aas
and
out
int3
add
addr16
data16
fsubl
push
je
xchg
adc
int
stos
in
divl
add
mov
roll
pop
lock
jo
repz
les
pusha
add
mov
and
jge
in
xchg
fwait
rcrl
je
pusha
add
lds
add
lret
sub
pop
andl
sarl
adc
push
xchg
outsb
push
pop
push
sbb
cmp
das
adc
push
mov
clc
push
inc
rorl
cmp
mov
inc
add
mov
repnz
sbb
psubq
sub
ja
or
xchg
mov
insl
inc
pop
sbb
pop
sub
and
add
movb
repnz
inc
pushf
jle
fpatan
cwtl
push
int3
int
movb
mov
rcl
nop
into
aad
lea
push
and
lcall
add
push
fnstenv
pusha
add
sub
sarb
jp
jne
daa
cmp
aas
mov
stc
adc
scas
insl
cwtl
jns
pop
repz
sbb
jmp
pop
repnz
adc
add
cmp
pop
clc
dec
movb
pop
sub
xchg
dec
adc
mov
add
outsb
gs
jmp
dec
lret
out
add
push
add
stos
mov
sti
mov
mov
and
mov
gs
jbe
out
pop
js
mov
pop
dec
jo
cmp
popa
pop
das
ffreep
add
nop
out
or
mov
lea
cmc
cmp
sbb
jbe
clc
lcall
idiv
jp
push
jo
ja
ds
rclb
out
addl
pop
xchg
and
mov
add
add
addb
push
in
lahf
xchg
test
addb
pop
decl
adc
add
adc
jge
add
call
daa
xchg
js,pn
hlt
frstor
mov
outsb
push
xor
jge
mov
addb
les
mov
lea
add
loope
nop
lock
pushf
jmp
rcrl
dec
sbb
cli
lods
faddp
jae
aas
jns
add
popa
repz
mov
or
inc
lods
mov
scas
mov
add
mov
or
movl
ljmp
ljmp
jmp
fwait
insl
xor
loope
jp
add
inc
add
jbe
push
xor
aad
xor
jbe
mov
cmp
rorb
sbb
xchg
adc
sti
mov
add
test
vmovq
scas
sahf
hlt
push
daa
xchg
push
push
test
aaa
scas
xor
cwtl
fucom
cmp
fnstcw
icebp
xor
mov
mov
fbld
adc
and
rolb
mov
ljmp
jp
insl
adc
jo
add
cmp
mov
fbld
add
outsl
mov
sbb
push
movsb
jecxz
inc
jns
out
jnp
rorl
mov
xchg
cmp
inc
add
push
test
sub
aas
jg
sbb
dec
out
stc
add
lods
scas
dec
je
push
pop
clc
jge
sti
aas
sbb
inc
add
int3
mov
sbb
rcll
xchg
arpl
test
pop
pop
xor
cmp
mov
das
push
ds
jge
xor
enter
jno
inc
faddp
add
push
add
in
sub
add
lret
lret
std
jg
minps
add
pop
shlb
sub
outsl
jo
add
add
sti
xor
and
rolb
popa
adc
rcr
fisttps
cmp
mov
lods
inc
add
add
shl
inc
push
shrb
sbb
cltd
jg
jecxz
fistps
pop
jmp
je
dec
pop
icebp
addb
scas
bound
insl
sbb
fwait
mov
jle
test
mov
fidivrs
mov
nop
mov
mov
scas
lret
jne
jb
push
add
push
popa
adc
jns
cld
int3
lahf
test
xchg
mov
insl
std
ficoml
add
inc
cmp
add
sub
clc
in
repz
fisubrs
scas
cli
push
jbe
add
and
dec
ret
jecxz
movb
enter
cmc
addb
in
add
sahf
push
add
jecxz
add
jecxz
addb
pop
ljmp
push
scas
repz
pusha
add
cli
dec
imul
fsubrl
pop
bound
add
xchg
pop
jo
adc
push
and
xor
sub
jmp
pop
lods
hlt
xchg
sub
andl
and
adc
fistps
xchg
mov
add
mov
loope
rcll
jnp
cmp
add
nopl
insb
movsl
pop
enter
xchg
xchg
test
mov
repnz
lcall
loopne
xchg
into
aas
jb
outsl
dec
xor
xchg
adcl
mov
xlat
cmp
aad
jge
loop
dec
leave
enter
sbb
movsb
push
test
push
push
lret
dec
imul
xchg
inc
hlt
jmp
fcoml
ficompl
pop
fisttpll
pop
push
neg
mov
popf
cmp
sub
add
sub
xchg
insl
push
ss
das
pusha
add
mov
add
dec
xor
mov
int
jecxz
ret
cmpsb
ljmp
aaa
mov
imul
push
cmp
xchg
adc
mov
push
pop
imul
mov
movb
mov
mov
movb
ljmp
mov
xor
or
lods
and
call
popa
push
push
cmpsb
pop
ret
mov
xchg
stos
test
je
dec
out
movsl
outsl
pop
mov
xlat
fstl
jno
or
and
inc
add
jne
mov
add
arpl
notb
mov
jl
push
mov
shl
int
jl
movsb
sbb
ljmp
loopne
popf
cld
fwait
in
or
mov
out
xchg
inc
fstl
cmpsl
sub
mov
cmpsb
imul
jg
sbb
or
xchg
sbb
std
imul
in
test
popf
mov
add
and
sti
repnz
jnp
cmp
jg
mov
out
pop
call
aam
push
dec
add
push
xchg
in
inc
add
not
arpl
pop
push
add
or
imul
push
mov
loopne
scas
push
pop
jne
sub
jne
add
data16
xchg
js
add
jg
xor
push
std
mov
rcrl
sbb
mov
dec
clc
xchg
fwait
pop
add
sub
mov
loope
push
fwait
mov
cmp
outsl
jnp
xor
xor
push
lds
jle
std
out
push
les
jnp
les
pop
lock
mov
mov
adc
add
cmp
cmpsb
mov
sub
divl
sub
adc
xor
jl
std
pop
fcompp
test
out
and
xchg
push
inc
add
and
xchg
mov
add
xlat
fstps
insb
cld
rcrb
dec
je
add
fldenv
rolb
or
loope
sbb
add
add
sub
mov
lcall
adc
inc
add
cwtl
mov
mov
bound
or
and
in
in
jge
mov
in
pop
xchg
or
jmp
cld
shrl
lret
dec
aam
add
adc
movsb
dec
iret
add
js
inc
gs
jns
std
mov
scas
sbb
jb
in
jg
pop
mov
jl
mov
testb
add
xor
add
fldl
add
enter
add
add
pop
stos
mov
xchg
jl
add
aad
xchg
test
add
xor
scas
rolb
pop
mov
push
mov
stos
sti
loope
das
xchg
ret
je
or
popa
or
pop
sub
jbe
add
xchg
pop
js
scas
adc
repz
popa
ss
sbb
add
mov
or
imul
ret
xor
xchg
lds
clc
mov
pop
add
push
mov
scas
push
cmovns
adc
cmpl
mov
mov
xchg
pushf
mov
pop
movb
jmp
add
sub
lock
sub
sub
sub
pop
lock
bound
adc
hlt
fwait
bound
dec
adc
ja
popl
clc
or
les
sbb
mov
insb
add
jg
fwait
xchg
add
pusha
add
push
arpl
add
jbe
mov
scas
inc
add
add
sahf
mov
mov
shlb
pusha
add
sbb
sti
sbb
iret
cmpsb
inc
jecxz
xor
ret
sbbl
nop
jmp
push
popa
pop
or
cmp
add
cmp
and
arpl
xor
fsub
leave
mov
stc
lret
lahf
dec
test
stos
jns
movsl
jp
clc
ja
add
mov
out
das
jbe
outsb
mov
outsb
roll
int3
mov
test
pop
adc
add
into
mov
add
adc
add
imull
out
or
sbb
dec
pop
cwtl
addb
add
jmp
push
mov
ret
test
dec
mov
repz
xchg
outsb
sbb
add
sbb
jecxz
data16
or
stos
cmp
cmpsb
fdivrl
int3
sub
icebp
fisttpll
test
add
and
daa
dec
pop
push
comiss
add
mov
outsl
jbe
cmp
jl
jmp
xchg
test
add
sbb
cwtl
mov
pop
cs
sub
adc
call
push
xor
xchg
aaa
popf
push
movsl
jne
sub
and
mov
fiaddl
das
dec
mov
loop
add
bound
jmp
popl
fiadds
mov
aad
add
test
mov
daa
jmp
inc
inc
mov
out
addb
mov
pusha
add
insl
pop
dec
inc
cmp
and
mov
mov
clc
xor
ret
sarl
push
xchg
mov
lahf
fnstsw
mov
cmc
rolb
add
imul
mov
cmp
pop
dec
cmpsl
subl
xor
xchg
into
pop
fwait
insl
out
sar
dec
mov
jle
sbbl
lock
inc
add
jns
hlt
add
jecxz
ljmp
outsl
jno
add
xchg
dec
sub
dec
jb
ffree
add
movb
sbb
loop
mov
add
cmp
adc
push
mov
push
lcall
and
out
mov
xchg
jne
mov
add
jns
jecxz
sub
xchg
adc
fwait
aas
orl
test
enter
in
jmp
or
xlat
jge
bound
out
sbb
add
pusha
add
inc
add
dec
add
jae
jecxz
insl
pusha
add
inc
mov
jl
mov
xchg
mov
inc
lods
call
add
cmp
inc
out
addb
mov
jns
mov
jl
mov
xchg
push
adc
mov
repz
xchg
sub
and
push
orl
sbb
mov
dec
pushl
add
xor
test
cmp
mov
jp
inc
xor
rcrl
ficomps
in
xchg
mov
mov
push
push
loop
lret
xor
movsl
out
add
or
cmpsb
icebp
and
dec
fwait
lea
dec
scas
mov
jbe
add
outsl
jbe
cs
pusha
add
adc
push
aad
ror
add
scas
mov
out
mov
pop
ret
enter
rolb
imul
fadd
add
mov
sub
ljmp
sbb
add
mov
inc
add
xlat
test
xchg
push
add
cmp
xor
mov
add
mov
shll
push
inc
xor
cli
imul
jmp
jo
mov
mov
pusha
add
fwait
hlt
cmp
add
data16
pop
or
jecxz
xchg
push
or
mov
scas
push
leave
sbb
test
ss
xlat
lea
dec
loope
iret
inc
add
sbb
lret
addr16
fisubl
arpl
inc
add
and
cmp
test
add
cld
xchg
data16
fs
stos
mov
cmp
add
add
push
fwait
and
or
rcll
add
cmc
mov
sub
mov
add
inc
add
push
xchg
jb
or
lods
adcl
xchg
push
or
fmul
cmp
nop
addr16
stos
mov
shll
jle
fucom
nop
inc
add
js
adc
add
das
je
xchg
lahf
fbstp
cmpsl
fdivl
pop
inc
scas
or
push
loopne
in
jl
daa
jnp
add
add
sti
push
cmp
mov
popa
push
adc
push
loope
xchg
gs
inc
add
mov
push
sbb
cmp
cmp
and
into
out
jbe
add
mov
push
test
insb
lds
sub
lcall
pop
call
mov
fdivl
add
add
scas
cltd
pushf
jo
xor
mov
addb
sbb
sbb
das
jg
add
sub
leave
cmp
aam
cmp
adc
fbld
pusha
add
add
adc
xor
and
sbb
jmp
aaa
stc
loope
push
rcl
fwait
and
bound
js
in
jns
mov
sbb
insb
mov
test
movsl
es
ljmp
imul
inc
in
pop
lret
sub
vmwrite
add
data16
clc
cli
cmp
jmp
mov
mov
xchg
movb
mov
add
pop
addr16
mov
cmp
and
push
mov
or
cmp
mov
cmpsb
jbe
inc
add
clc
sbb
lret
sbb
mov
and
add
inc
cmp
jns
add
cmp
add
sub
adc
std
cmp
shrl
cmp
pop
push
mov
into
or
arpl
add
sub
or
es
das
jbe
cmp
cmp
in
add
jecxz
aad
lock
or
jno
and
dec
xor
ret
data16
lret
jns
es
das
push
pop
dec
mov
sbb
or
mov
jg
cmpsl
ret
test
outsl
fstpl
mov
adc
inc
fwait
aam
mov
dec
movsb
addr16
movsb
xchg
push
mov
sub
lods
sub
pop
and
sbb
or
ficoml
nop
lods
cmp
xchg
mov
sub
inc
jmp
addb
cmp
cmpsl
mov
popf
adc
rolb
mov
xor
popf
hlt
dec
stos
movb
xor
hlt
aaa
inc
or
add
jp
push
mov
mov
sti
jne
movsl
int3
data16
sbb
jno
mov
negl
add
je
add
in
std
daa
imul
rcl
jbe
jo
add
out
push
loop
cmp
fidivrl
jg
adc
aas
fucom
ljmp
pop
and
dec
lea
add
ficomps
jecxz
mov
jl
sbb
incl
mov
add
daa
jecxz
imul
add
pop
cmc
inc
add
or
jp
enter
lea
jecxz
sbb
testb
jmp
and
dec
add
push
mov
hlt
and
sbb
cmp
push
xchg
sti
cmp
add
sti
fcomps
xchg
cld
insb
test
mov
outsl
iret
lds
call
push
lcall
inc
add
mov
shrl
fldt
mov
cmp
je
cmp
mov
mov
scas
adc
loopne
sbb
into
iret
sub
jle
rolb
add
iret
and
jb
mov
rolb
pusha
add
and
inc
pop
je
test
xchg
push
xchg
mov
rolb
cmpsl
xchg
pop
adc
sub
scas
imull
lret
add
mov
push
jo
mov
cmp
xchg
out
incb
aam
cltd
or
cmpsl
push
jecxz
mov
mov
xchg
addb
es
jmp
mov
lods
fcomip
and
outsb
cmpsb
sub
shlb
or
adc
insb
dec
arpl
popa
sbb
cltd
rol
add
xor
imul
add
sahf
fldenv
jbe
add
xchg
or
add
xchg
xchg
decl
loope
pop
xor
mov
outsl
inc
add
gs
dec
fsubrl
push
xor
xchg
mov
cli
dec
filds
loop
outsb
cmp
cmpsb
push
push
test
sbb
mov
sub
lret
mov
data16
push
sbb
and
hlt
mov
cwtl
xor
sbb
inc
cmp
jb
mov
mov
sti
adc
push
jb
mov
xor
out
ds
test
adc
push
mov
dec
inc
add
dec
adc
pop
sbb
sbb
leave
mov
ret
fisttpl
fimull
jl
inc
add
mov
fnstsw
mov
cmp
add
xor
mov
xor
cmp
shll
ljmp
add
mov
daa
xchg
fimuls
shll
addb
add
push
jo
mov
cmp
js
adc
add
outsb
int3
popf
xor
hlt
xlat
and
jnp
mov
add
push
out
orl
add
jle
lds
stos
push
rolb
cmc
mov
add
cltd
sbb
sbb
fwait
jbe
lea
adc
outsl
fs
mov
jne
out
pop
test
leave
jno
pop
shrb
js
idivb
xchg
aam
mov
out
add
cs
and
mov
fcmovb
inc
mov
sbb
rorl
mov
pop
aam
add
jl
push
add
ljmp
xor
in
pop
mov
clc
xor
mov
ficoms
or
loop
mov
ds
jp
inc
add
mov
add
cli
fcoms
mov
clc
test
in
push
lock
int
jle
fs
xchg
sbb
lods
shl
and
adc
xlat
xchg
push
fildll
loope
lret
xchg
mov
pop
addr16
nop
add
add
test
dec
pop
cmp
out
sbb
jb
add
loopne
push
jl
add
outsl
lds
movb
inc
fs
call
xchg
inc
add
mov
lea
call
lods
pop
inc
xchg
push
addb
pop
cmp
dec
stos
shll
and
popa
jmp
mov
imul
ret
rcrl
mov
xor
test
jns
adc
clc
daa
rolb
dec
xchg
xchg
std
clc
mov
mov
insl
aad
jge
add
loope
arpl
push
jge
or
sbb
add
jbe
push
dec
sbb
cmp
jl
or
dec
sub
ret
jbe
imul
addb
repz
clc
sbb
stos
ret
sahf
sahf
int
daa
repnz
add
shl
sub
sub
adc
adc
push
xchg
xchg
jnp
mov
pop
mov
xchg
rorb
ss
xchg
sbb
fnstcw
ss
xor
aam
mov
sbb
cmp
add
in
enter
jnp
pop
jb
push
in
adc
je
loop
mov
aam
daa
dec
or
add
sbb
fistpll
stc
jmp
add
add
adc
repz
int3
popa
incl
les
pop
imul
mov
in
aaa
dec
fists
sbb
clc
and
inc
or
xchg
into
popf
xor
add
pop
std
sti
sbb
mov
add
test
fildl
lcall
add
stos
repz
pop
stos
adc
incb
push
dec
shll
jae
jo
inc
xor
inc
add
jb
mov
xor
push
leave
in
sub
mov
cmpsb
xchg
sbb
sub
pop
in
inc
and
outsl
inc
add
es
imul
fwait
jp
push
icebp
xchg
daa
mov
add
mov
loop
add
xchg
adc
xor
jecxz
push
add
lahf
or
nop
frstor
addb
add
pop
pop
push
sbb
mov
dec
movsl
and
mov
mov
nop
sub
test
mov
fcmovnbe
daa
test
pop
dec
push
enter
or
addb
movsl
test
push
mov
bound
stc
add
cmp
addr16
lods
stos
sbb
das
rolb
loop
call
cmp
inc
xchg
sub
xchg
cmpsl
jae
jno
sbb
imul
mov
lcall
popf
outsb
xchg
add
pop
and
test
lods
jecxz
movb
popa
mov
lods
mov
inc
add
mov
lods
movsl
xchg
jnp
bound
mov
add
fwait
cmp
xchg
dec
ret
std
icebp
dec
int
add
flds
ja
xchg
mov
imul
mov
lret
push
es
ljmp
aas
push
pop
fs
mov
cmc
pushf
cmp
adc
and
lcall
in
aad
enter
iret
pop
mov
mov
sti
xchg
mov
add
push
mov
cmp
mov
mov
movsl
sbb
leave
in
mov
out
jmp
push
mov
xor
arpl
fdivs
fwait
cmpsb
inc
cmpsl
mov
and
les
push
jae
add
jmp
push
add
push
repnz
add
cld
cs
aam
fs
cwtl
cmp
or
inc
add
xor
lock
mov
xchg
rorl
bound
cmp
sub
add
and
js
mov
cwtl
js
xor
mov
lahf
add
cltd
add
mov
xor
and
loope
jbe
clc
leave
lea
hlt
pop
cmp
iret
mov
js
test
cmp
aad
cmpl
cmp
inc
add
scas
das
test
scas
mov
cmpl
addb
and
mov
or
sbb
sub
or
pop
lahf
xchg
inc
add
push
lret
push
xchg
cmc
scas
dec
fistl
inc
bound
xchg
cmpl
lods
pop
outsl
fstpl
fs
out
test
lock
jmp
jmp
xchg
sub
clc
adc
mov
xchg
movsb
adc
imul
loope
and
mov
lods
movb
mov
and
add
or
add
add
sub
add
psubsw
je
add
fadd
add
into
jae
cltd
or
shll
sbb
xchg
test
insb
dec
lds
adc
faddp
mov
mov
sub
adc
mov
xchg
aas
idivb
pop
fcomps
fistpll
cmpsl
cmp
div
mov
mov
ret
es
repz
fadds
outsl
int
inc
add
or
push
add
add
sbb
or
add
add
or
icebp
int3
rorb
add
shl
xchg
out
in
imul
add
adc
pop
outsl
aam
ss
gs
add
divb
cmp
add
mov
cltd
je
sahf
in
stos
cli
aaa
xlat
ficomps
and
fsubrl
mov
sub
test
mov
addb
sub
or
add
sarb
xor
dec
lahf
icebp
mov
cli
mov
xchg
add
add
inc
add
push
bound
cmp
in
bound
scas
leave
pop
sub
arpl
mov
add
clc
stos
ret
test
mov
mov
add
sub
push
adc
add
and
add
add
add
int
push
fmuls
rolb
add
add
dec
xchg
push
ret
add
loopne
lahf
ljmp
cmp
dec
std
test
sti
xchg
mov
dec
dec
jo
push
and
movb
clc
push
call
add
mov
