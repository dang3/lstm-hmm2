jl
inc
push
orl
inc
add
xor
mov
jmp
cli
pusha
add
add
or
inc
add
cmpsl
es
int3
mov
fs
stc
not
aas
je
xor
pop
mov
lret
ds
mov
adc
and
cmp
inc
xchg
mov
ss
aad
movsb
aas
xchg
dec
dec
imul
push
loopne
imul
ja
movsb
out
push
cmp
mov
mov
sub
idivb
add
mov
add
add
pop
jl
xor
scas
xchg
loopne
jecxz
xchg
xor
bound
sbb
add
sub
shrl
cltd
sarl
data16
adc
dec
cli
cmp
lret
loop
push
dec
jbe
js
in
jno
add
add
cltd
cmpsl
sbb
inc
add
dec
fadds
inc
add
addb
or
addl
xor
rcrb
pop
clc
jns
scas
mov
xor
rolb
add
or
xor
ja
scas
loop
sub
nop
pop
scas
jle
add
shr
cmpsl
or
inc
add
dec
cmc
sbbl
mov
movsb
mov
mov
and
test
xchg
xchg
cli
leave
rcrl
push
push
xchg
loop
mov
lds
xor
add
int
add
clc
out
test
mov
cltd
cmc
std
or
pop
out
shll
add
add
mov
aaa
aaa
incb
add
jle
rolb
xchg
das
enter
xor
push
and
sahf
int
sub
sub
jno
add
arpl
lahf
arpl
daa
rcrl
or
sub
mov
inc
add
insb
jecxz
arpl
aad
lods
mov
js
and
repnz
fisubl
adc
add
add
imul
call
mov
dec
and
sub
add
inc
add
dec
jne
cmc
addb
ja
popf
mov
rcl
dec
and
xchg
fwait
mov
jmp
inc
add
int3
out
add
iret
sub
add
hlt
pop
mov
mov
dec
xor
adc
or
dec
add
mov
sub
add
sub
add
lods
xchg
cbtw
insl
pop
loop
icebp
mov
into
shlb
mov
add
push
dec
movsb
shrl
add
mov
icebp
mov
lods
out
es
mov
and
push
cmp
add
pop
adc
push
sti
push
mov
lock
sbb
sbb
sahf
rolb
lea
jg
std
imul
pop
or
push
arpl
jns
xlat
jae
cli
sub
sahf
nop
lahf
dec
dec
xchg
cs
add
sub
je
add
dec
xor
add
xchg
fisttps
in
lock
pushl
jns
mov
movb
stos
data16
rcl
test
negb
je
data16
and
test
push
clc
pusha
add
and
mov
sbb
xchg
add
mov
mov
sub
insl
test
xchg
stos
sub
js
iret
and
in
add
mov
data16
add
xchg
jg
clc
nop
inc
sti
dec
loop
sbb
enter
xchg
cmpsb
xchg
and
sub
mov
mov
in
punpckhwd
call
aad
addb
jp
orl
sbb
pop
pop
popa
fisttpll
enter
xchg
dec
and
push
adc
ljmp
xor
jmp
dec
stos
call
mov
inc
jb
ja
popf
jge
cmpsb
push
int3
sar
gs
gs
sahf
inc
mov
inc
rcrb
data16
inc
sub
add
mov
jbe
fistl
test
ret
add
lods
dec
sbb
add
jle
in
in
shrb
xor
add
lret
add
mov
xchg
andps
pop
sub
loopne
inc
outsl
jns
add
mov
ret
loopne
mov
in
rorl
jge
sub
pop
inc
add
add
sbb
loopne
adc
push
jle
mov
jae
push
and
jecxz
add
inc
add
cmpsl
shrl
mov
pop
push
and
push
int
cs
pushf
pop
add
cmp
push
pop
inc
add
add
aad
loope
jno
pop
lock
lods
and
call
and
lods
stos
push
repnz
cmp
ret
jge
lods
cli
push
jle
daa
mov
add
lcall
das
lahf
outsl
jo
enter
scas
shrb
jl
and
clc
clc
imul
add
cmpsw
shll
xchg
outsl
mov
adc
mov
cmpsl
in
shrl
imul
mov
sub
jg
cmp
dec
test
stos
xchg
or
push
arpl
imul
ucomiss
std
mov
stc
cmpsb
int
jmp
lock
int
call
inc
add
ja
and
out
outsl
test
push
stos
mov
sahf
ret
xor
ja
jecxz
sbb
jo
jmp
add
ret
pop
mov
inc
add
xchg
dec
movsb
movb
mov
jmp
add
xor
add
push
sub
in
inc
add
dec
sbb
mov
aad
or
pop
xor
call
fwait
cwtl
add
es
mov
movsb
inc
pop
js
rcll
ja
inc
add
loope
inc
add
mov
xor
lret
dec
movsb
stc
mov
add
push
icebp
in
lds
add
mov
mov
ja
lret
jecxz
add
pushf
mov
add
jmp
aam
mov
lea
repnz
or
add
pop
and
fadds
mov
sarb
pop
pushf
int3
xchg
stos
mulb
add
ficoms
jb
pop
scas
fwait
mov
add
add
ficoml
popf
imul
pop
je
vmovapd
inc
notb
ja
mov
xor
add
movsl
addl
pop
outsb
mov
xchg
loopne
scas
add
mov
xchg
js
jo
es
cmp
add
out
aaa
mov
push
jnp
and
cmp
outsb
xor
sub
movb
and
xchg
adc
mov
lods
or
sub
sar
call
jecxz
dec
addb
sbb
pop
fs
cmpsb
rolb
add
mov
stc
addb
xor
dec
mov
or
add
cmp
movaps
xor
mov
mov
add
jle
pop
ljmp
stos
addb
xor
lods
inc
add
addb
icebp
enter
xor
inc
add
addb
add
inc
add
add
pop
rclb
jae
inc
add
inc
push
cmp
ja
dec
jns
mov
dec
sub
cmp
int
jecxz
jns
scas
test
shll
add
arpl
lods
into
filds
jbe
outsb
push
bound
mov
push
fadds
add
out
stc
dec
push
lds
ja
fwait
jg
dec
in
adc
or
addb
add
leave
icebp
cmp
and
push
xor
jecxz
fcoml
iret
icebp
jmp
add
add
jg
fs
out
add
pop
cmp
xchg
and
stos
sub
xchg
and
fnsave
lods
das
cld
or
int
dec
stos
shlb
out
xchg
pop
pop
xchg
int
adc
pop
push
imul
mov
lock
sub
pop
lea
mov
stc
dec
out
test
adc
inc
bound
and
pop
subl
and
add
jg
push
aaa
xchg
in
inc
movsb
inc
or
push
push
add
jne
sub
add
test
bound
ret
cwtl
push
arpl
mov
aad
add
les
pop
andl
push
inc
sub
jae
add
fdivrs
pop
in
fcomps
jecxz
jmp
and
jl
rcll
sub
xchg
addr16
mov
insl
int
adc
add
movb
loop
fsubp
pushf
in
and
jbe
xchg
scas
mov
mov
in
add
jae
sbb
sub
add
mov
jmp
das
popa
movb
mov
das
stos
mov
hlt
xor
lea
inc
cmp
cmpsl
push
insl
fisttps
mov
add
shr
add
mov
je
or
call
jl
add
sub
jae
dec
cmp
mov
xchg
push
push
add
mov
imul
xor
add
adc
jnp
or
mov
repz
in
jo
push
mov
and
mov
jp
xchg
fildl
dec
outsl
ja
dec
hlt
imul
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
lret
add
add
mov
fwait
push
and
lea
jb
mov
push
xor
test
mov
xchg
enter
cwtl
nop
out
ret
outsb
or
std
mov
nop
sbb
cli
push
lea
push
jne
enter
scas
mov
aas
aaa
inc
shlb
adc
push
aad
xchg
jl
sbb
adc
and
stos
cmp
cmp
bound
outsl
inc
add
mov
clc
cmp
jg
frstor
jnp
xchg
leave
js
mov
pop
ds
xchg
push
inc
int
dec
cld
xchg
out
add
outsb
or
xchg
mov
add
push
aad
inc
mov
add
out
lret
cli
xor
xchg
xor
cmp
movb
and
mov
push
ret
idivb
sub
mov
mov
scas
sub
in
sub
test
push
and
sbb
cmpsb
mov
add
mov
pop
xor
lds
xchg
imul
mov
shrl
jge
add
lcall
aad
loop
push
lods
xor
adc
pop
xor
cmpsl
adc
sub
jl
jge
add
and
push
fdivrp
iret
aaa
clc
push
out
mov
xor
movsl
jbe
lock
xor
lret
inc
add
divps
icebp
fstpt
adc
mov
cmp
and
and
nop
mov
cmp
imul
jg
jecxz
inc
mov
in
pop
push
lock
adc
mov
mov
inc
add
in
in
jp
lcall
xor
cs
jne
arpl
aaa
cmp
cmp
add
push
ret
xor
add
jbe
xor
fs
stc
xor
popf
or
enter
push
inc
add
add
in
ret
mov
ds
mov
xchg
lcall
mov
xchg
add
hlt
mov
push
mov
push
sbbl
jo
xchg
lcall
cmp
xchg
movsl
pop
dec
jg
add
add
cmp
jge
inc
add
jp
pop
int
inc
loopne
mov
mov
mov
xor
fsubrl
movsb
or
xchg
or
fsub
adc
dec
cmc
lcall
add
int3
xor
mov
cmp
imul
add
lea
push
imul
repnz
add
clc
sub
adc
in
xchg
sarl
lcall
insb
adc
sub
out
mov
imulb
aad
mov
out
push
testl
call
adc
aad
add
ds
add
inc
pop
addb
shl
push
mov
xor
ss
mov
jno
add
adc
mov
jl
mov
add
push
mov
mov
or
and
sub
push
or
xor
add
lcall
movsb
cmp
and
outsb
pop
inc
xchg
inc
nop
jae
mov
mov
in
jo
iret
les
faddl
imul
test
xor
lcall
pop
cli
and
jp
fbld
xorl
mov
add
jnp
test
icebp
jge
les
mov
cmpsl
push
scas
hlt
outsl
icebp
in
and
add
mov
icebp
fistpl
jecxz
inc
inc
add
dec
adc
test
cld
inc
add
adc
xor
xchg
push
enter
icebp
in
dec
adc
mov
into
jnp
loopne
out
add
std
mov
pop
movsl
sub
push
add
movsl
mov
movsb
es
inc
add
jbe
shrl
test
lods
out
nop
xchg
lods
jns
mov
fcmovu
in
jns
rolb
movsl
jno
mov
cmpl
fmuls
insb
jb
sahf
xchg
cmp
icebp
sbb
arpl
mov
push
add
pusha
add
mov
addb
push
sar
mov
or
add
gs
psubsb
rolb
sbb
cmp
adc
jp
sti
shll
inc
add
dec
xor
aaa
jns
push
sub
push
xor
adc
sbb
sbb
push
or
movb
data16
dec
stos
sbb
loop
aas
inc
xchg
fbld
es
fadds
push
nop
mov
mov
push
add
pusha
add
push
fbstp
ret
sub
dec
cmp
or
mov
push
lods
mov
dec
or
out
xor
mov
sub
and
jns
fidivrs
insl
inc
ss
jne
mov
pop
cmp
movb
add
popf
cmpsb
xchg
adc
es
mov
cmpsb
sub
daa
pop
jno
add
out
xchg
mov
dec
mov
add
xchg
stos
or
stos
jecxz
xor
gs
cmpsw
ficoms
loop
add
push
add
out
in
mul
adc
dec
nop
lret
mov
jne
jne
sbb
inc
loopne
jbe
add
jns
inc
pop
push
data16
push
mov
fisubrl
imul
cmp
add
mov
xchg
in
and
stc
inc
add
add
cmp
icebp
push
jno
add
out
cwtd
push
mov
push
add
sbb
das
test
dec
cmp
sbb
aad
nop
pop
adc
mov
adc
fsubr
stos
pop
ja
cwtl
or
dec
dec
lret
lds
push
xchg
dec
inc
inc
sbb
jb
out
mov
push
mov
pop
inc
push
push
sub
cwtl
push
in
mov
add
xchg
cmp
add
cwtl
xchg
push
aad
add
mov
adc
rolb
jbe
xchg
jg
fdivrl
add
pushf
xchg
pop
inc
and
add
mov
movb
shl
fwait
sti
jbe
adc
add
out
pop
js
or
sbb
mov
nop
es
adc
xchg
xlat
push
push
rcll
jle
push
sbb
or
add
add
xchg
pop
repnz
insl
enter
jp
cld
cmp
jbe
ja
jmp
mov
das
push
push
call
xorl
out
inc
pop
mov
cmpsl
pop
pop
mov
nop
inc
add
cmpsb
arpl
jecxz
rclb
jbe
adc
jmp
add
cmpsb
dec
push
enter
sub
outsb
and
adc
and
or
cs
mov
mov
stc
imul
repnz
xor
add
cltd
stos
shl
es
dec
jae
or
sub
insb
ret
ret
cld
push
sbb
jg
fsubrs
adc
clc
push
add
test
add
jnp
add
fiadds
rcrl
xor
ffreep
add
ja
add
stc
adc
add
out
aam
clc
sub
jbe
js
mov
mov
rolb
push
das
sbb
sahf
aas
outsb
jecxz
cmp
test
lds
loope
in
rol
out
lret
outsl
push
mov
incb
sub
or
loopne
addb
imul
icebp
repnz
test
inc
add
add
sbb
call
stos
mov
and
int3
aas
out
mov
sub
sbb
adc
ss
fcomi
int3
xchg
dec
fs
cmp
daa
jns
xor
int
ja
sti
sub
in
add
loope
insb
dec
sbb
repz
cmc
mov
pop
fstps
push
add
xchg
outsl
xor
jnp
dec
cmp
gs
adc
push
mov
and
idivb
mov
cmp
cmpl
data16
js
ret
movb
mov
mov
sub
xchg
mov
dec
frstor
test
inc
mov
push
inc
xchg
outsl
je,pn
jns
mov
add
stos
dec
aad
repnz
fstps
inc
add
or
xor
sbb
add
jg
add
push
adc
addb
mov
sbb
ret
sbb
repz
mov
jge
sub
and
mov
imulb
mov
push
add
rcr
add
aas
mov
sbb
add
adc
inc
mov
in
je
push
jne
jl
dec
mov
add
imul
inc
jmp
les
js
out
or
movsb
pop
xchg
es
jo
push
push
add
xor
xchg
shrb
insl
pushf
ljmp
lret
add
add
pop
icebp
and
cmp
add
bound
adc
jno
push
roll
fnsave
dec
movsl
out
in
sub
dec
xlat
mov
nop
test
pop
push
mov
mov
in
mov
fnsave
xchg
mov
cli
push
out
pop
enter
sbb
mov
mov
pop
adc
leave
jne
fstps
dec
jge
add
nop
in
jb
adcl
daa
out
std
test
icebp
lds
jmp
ja
out
movsb
sbb
loope
sahf
loop
popa
xor
fcomi
mov
hlt
pop
cld
push
adc
push
add
pop
shlb
add
rep
add
jle
dec
mov
jbe
or
or
xor
jmp
das
roll
js
adc
addb
add
dec
imul
mov
add
xchg
outsl
rolb
mov
cli
adc
cmc
inc
add
inc
sbb
pop
and
sub
sub
mov
xor
mov
dec
push
lods
sub
inc
inc
add
ret
add
adc
sbbl
fstl
push
or
cmpsl
xchg
imul
out
roll
jbe
inc
jp
loope
add
stc
sub
jnp
imul
iret
and
imul
add
inc
dec
movsl
bound
sti
push
arpl
cmp
ret
ret
pop
dec
bound
data16
mov
addb
xor
aam
cmpsb
xlat
mov
ret
aaa
xor
addb
rorb
inc
dec
mov
ds
push
sbb
and
jmp
or
add
push
add
cwtl
icebp
sub
aaa
adc
leave
push
jne
jge
sbb
jl
add
cmp
cmc
and
cmp
adc
mulb
ja
cmc
push
xchg
setae
add
cmpsb
xchg
in
add
sub
push
add
jle
pop
xor
dec
dec
outsl
jbe
xchg
add
fisttpl
mul
sub
pop
int
fdivrs
loope
add
adc
xchg
aas
stos
pop
push
mov
push
pushf
outsb
pushf
cmp
xchg
in
cmp
das
xchg
bound
sbb
negb
xor
ret
negl
cmp
mov
je
in
std
mov
push
add
xor
stos
mov
aam
jae
in
xchg
clc
mov
aas
push
in
cmp
into
cld
jmp
arpl
sahf
int3
adc
add
xor
rcrb
push
ret
and
and
push
les
loopne
data16
out
add
jle
outsb
push
xor
cmc
mov
icebp
sbb
movsb
hlt
lret
push
test
or
add
add
xor
leave
xor
lret
sbb
cwtl
inc
cmpsl
addb
and
xchg
movsl
xlat
pusha
add
add
mov
adcl
into
sub
add
icebp
cmp
mov
cmp
push
mov
arpl
movsb
or
pop
pop
orl
add
fidivrs
inc
jg
dec
out
pop
mov
call
jns
sub
mov
arpl
aam
jle
jmp
add
sub
push
aas
pop
lret
inc
add
mov
sar
lea
sbb
cs
inc
xor
cmp
xor
shll
pop
das
pop
cltd
cmp
add
mov
add
dec
cs
jecxz
sub
add
xchg
outsb
fcomi
popa
sub
cmpsb
sub
punpckldq
inc
xchg
daa
cmp
mov
or
insb
nop
pusha
add
xor
add
jg
cmpsl
pop
and
add
and
mov
aas
ja
js
sahf
loop
cmpsb
clc
repz
sbb
jp
adc
push
jp
cmc
and
mov
in
movsb
add
lea
lret
hlt
bnd
insb
aas
dec
mov
outsl
leave
es
add
div
scas
insl
fwait
imul
scas
test
enter
insl
or
xchg
vxorps
pop
popf
loopne
and
jl
out
add
and
dec
xchg
lcall
fnsetpm(287
and
call
jl
or
mov
dec
xor
leave
dec
scas
xchg
xchg
nop
push
jbe
cmp
mov
adc
rolb
mov
add
adc
jo
fistpll
adc
aas
adc
push
mov
and
inc
stos
mov
xor
rcrl
push
aaa
dec
addb
loopne
out
lret
xchg
mull
aad
nop
mov
lret
dec
mov
or
arpl
test
jmp
xorl
add
sbb
sbb
hlt
out
cli
mov
push
sbb
mov
pushf
in
add
jl
cmp
mov
pop
xchg
clc
lret
lock
cltd
jmp
mov
les
imul
mov
test
inc
add
xlat
lods
push
pop
cmp
add
cmp
in
push
mov
or
outsb
shlb
movb
call
mov
or
push
mov
xor
fistl
jl
add
cmp
sbb
cwtl
xchg
imul
jmp
mov
es
add
push
add
mov
call
jns
negl
sub
and
sub
add
lret
xlat
lret
setbe
ja
and
addb
jnp
shll
xchg
pop
into
subl
lods
loope
stos
enter
loope
daa
mov
decb
mov
lcall
fstpl
sub
das
ret
mov
loope
enter
jae
out
adc
das
pop
mov
rclb
add
cmpsl
call
test
xchg
adc
and
mov
xor
mov
sbb
imul
mov
ret
out
sub
outsb
movsl
inc
repz
add
inc
add
adc
inc
add
push
jp
jae
add
mov
or
and
jns
sbb
add
jle
ss
sbb
nop
lock
rolb
add
xor
fimull
outsb
mov
xchg
pop
add
jo
jb
jnp
add
stc
pushf
pushf
repz
and
and
jge
adc
shll
xchg
add
adc
pusha
add
ds
out
nop
lret
leave
jns
xor
cmp
add
mov
mov
leave
sub
mov
test
inc
dec
in
outsb
pop
jae
test
test
insl
jle
push
cwtl
lret
and
das
imul
push
hlt
cmp
addb
aam
add
movb
jg
push
rorb
xor
push
and
xchg
es
hlt
add
ss
jno
adc
je
repz
jle
mov
or
mov
cmpsl
cmp
mov
ds
iret
aam
je
frstor
pop
sbb
in
xchg
loope
push
or
ret
les
jl
jmp
pop
sbb
data16
addb
mov
inc
dec
outsl
cli
push
add
pop
scas
fildll
jb
and
sub
adc
xchg
adc
push
popa
inc
dec
loope
scas
fbld
add
sub
add
outsw
pop
enter
dec
and
jne
push
add
add
test
xchg
enter
jo
mov
outsl
dec
cmpsl
push
add
call
mov
orl
loop
adc
cmp
add
pop
pop
adc
or
out
xor
add
rcrb
jge
test
fsubl
jns
mov
outsl
sahf
int3
push
addr16
adc
cld
out
dec
mov
mov
jp
add
out
stos
sub
pop
xlat
dec
cld
add
push
stc
sbbl
xchg
mov
faddl
or
push
insl
shll
test
repz
repnz
add
mov
add
add
mov
popf
ja
stos
addl
or
addb
mov
xchg
dec
xchg
in
ret
leave
add
lcall
inc
add
add
das
mov
fwait
push
imul
in
pop
xchg
xchg
mov
push
into
sbb
lock
sub
mov
adc
dec
adc
adc
jo
vcomiss
testl
testb
add
pop
sbb
in
pusha
add
sbb
xchg
cli
inc
add
cmp
add
cmpsl
lods
lods
push
add
jns
iret
jbe
add
movb
daa
inc
mov
push
xchg
push
and
mov
inc
add
cmp
mov
xor
outsb
cmp
cld
das
push
enter
pop
test
inc
add
mov
or
jae
xchg
xchg
outsb
test
adc
stc
lret
int
outsb
mov
ret
out
add
iret
out
cmc
scas
and
add
into
jns
fists
aam
ficompl
inc
xor
imul
js
das
push
ds
lret
cltd
fstps
aad
fsubrp
pop
pop
addb
xchg
adc
test
pminsw
neg
dec
mov
add
xchg
and
lret
xchg
rcr
pop
bound
out
mov
in
xor
lds
stos
js
lds
lret
mov
add
add
nop
popf
cmp
ret
repz
addb
sbb
xchg
shrb
xor
pop
addb
dec
pop
lret
push
mov
insb
fldenv
pop
add
mov
mov
aad
sbb
dec
clc
push
movb
add
mov
and
mulb
pushf
or
mov
dec
lock
aam
sahf
or
pop
xchg
or
fmuls
mov
add
clc
jno
and
jnp
clc
jmp
jge
sarb
sbb
add
popf
sub
add
xor
mov
add
addb
cmpsl
rcl
mov
add
jmp
aam
fs
push
es
movb
mov
jns
es
jae
mov
sbb
insb
cltd
lock
jne
inc
add
add
add
xchg
dec
inc
pop
pop
addb
mov
add
and
pop
add
rolb
loop
mov
sti
jmp
mov
mov
add
jns
sub
sti
in
xor
jecxz
js
decb
int3
imul
loopne
add
or
pop
inc
add
fcomi
mov
jo
push
ljmp
adcl
add
jbe
lahf
jae
cmp
push
and
jae
inc
cmp
lret
ljmp
and
std
add
enter
outsl
dec
push
pop
mov
cmpsl
addb
dec
push
and
lods
push
rolb
mov
insl
aaa
mov
subps
cs
addb
jge
dec
lret
or
mov
sub
aad
xchg
stos
call
jb
sti
push
jb
int3
sub
add
sbb
add
bound
test
call
lret
into
sub
inc
add
pop
xor
repnz
loope
movb
notl
or
pop
mov
push
movsl
test
pop
ret
and
xor
adc
mov
xor
dec
scas
scas
xchg
das
cltd
mov
mov
cmp
adc
jg
adc
adc
jnp
lods
cwtl
push
sbb
hlt
idivb
call
cmp
addb
fmull
or
loope
cmpsl
imul
out
out
push
jl
cmp
ss
add
xor
pop
mov
xchg
and
cmpsb
mov
xor
test
es
inc
leave
in
sbb
mov
sbb
xlat
and
lods
negl
in
mov
mov
add
lahf
arpl
inc
add
nop
fsubrs
div
add
mov
jnp
ret
xchg
mov
insb
or
ss
rcll
pop
jmp
lret
fwait
mov
jg
in
icebp
and
mov
fimull
sbb
fadds
cmpsb
mov
add
and
orl
xchg
push
or
push
shlb
test
push
add
scas
mov
mov
fistps
xchg
sub
and
aaa
mov
xor
add
addb
lret
jmp
mov
xor
test
cmpl
ds
push
add
stos
mov
and
add
aam
in
bound
fs
mov
add
cmpsb
inc
add
jo
cmp
incl
xchg
arpl
adc
jg
sarb
sbb
les
pushf
les
testb
sbb
sbb
int3
pop
push
imul
test
out
mov
js
xor
add
xchg
jl
scas
divl
xor
and
aam
shl
adc
pop
adc
add
mov
sub
xor
js
loop
dec
push
int3
cmp
jecxz
outsl
daa
lds
lret
pop
jnp
xchg
mov
cmp
sahf
cmp
std
mov
xor
notl
je
cmp
pop
sbb
cld
mov
imul
push
jbe
mov
insb
test
int3
js
mov
pop
aas
les
outsl
out
lds
mov
add
and
add
test
cmp
fst
jo
in
fdivs
jp
fistps
pop
cmp
insb
loope
cli
dec
and
das
sbb
sub
sub
add
xor
sbb
xor
daa
out
inc
jecxz
pop
scas
and
mov
xchg
inc
add
cmp
das
jns
sub
add
add
sti
mov
fwait
xor
add
test
sbb
push
add
push
xlat
cmp
leave
test
xor
sarl
fldl
out
add
jae
out
jbe
dec
mov
sbb
loop
and
lock
les
int
add
scas
push
mov
aam
cli
push
pop
xor
push
add
andl
scas
push
movsb
lods
lret
push
or
addb
jle
add
hlt
jp
jns
sbb
loop
sub
sbb
xor
pop
sub
repnz
cmp
add
push
mov
andl
cmc
jecxz
mov
mov
sub
fdivrl
xchg
icebp
or
iret
add
ja
pusha
add
add
dec
xor
int3
jmp
add
es
sub
bound
hlt
jb
stos
mov
imul
loopne
inc
or
dec
cmp
loopew
js
add
mov
scas
popa
jecxz
dec
push
add
addb
setge
xchg
sbb
adc
xorl
inc
cs
dec
jp
add
out
imul
mov
cwtl
mov
mov
add
mov
mov
dec
fwait
rcll
sbb
data16
dec
shll
mov
sbb
shl
xor
lahf
movsb
pop
add
and
jle
ja
add
pop
mov
bound
pop
dec
mov
ret
mov
add
daa
mov
xchg
lcall
inc
inc
add
divb
into
movsl
sbb
pop
or
sti
cmpsb
adc
shll
int3
das
sbb
mov
add
pusha
add
cmpsl
sub
in
aad
cmc
mov
xchg
rcl
std
push
bnd
popf
addl
sbb
jecxz
inc
add
std
mov
aam
inc
divb
mov
fimuls
xor
addb
repnz
insl
dec
lock
hlt
add
jg
add
add
cmp
xchg
nop
jne
outsl
std
out
movsl
xor
or
mov
orl
lcall
mov
pop
or
xchg
sub
sub
test
mov
add
add
aad
cmp
and
mov
add
pop
ja
div
and
enter
fidivs
cld
je
mov
push
popf
test
jb
sub
dec
mov
arpl
mov
add
scas
mov
xchg
out
mov
or
lret
dec
and
jmp
rcrl
fcoml
push
xor
sti
call
rolb
enter
in
mov
adc
cmp
lret
insb
insb
and
mov
repz
movsl
or
jbe
or
ds
push
jne
aad
ret
je
lds
movb
add
mov
mov
add
ss
test
add
xchg
sbb
cmp
add
lock
xchg
int3
stos
in
pop
incb
push
in
mov
jecxz,pt
lea
sbb
cmp
hlt
shll
outsl
xorl
add
mov
cs
or
adc
xchg
dec
push
add
pop
movsb
mov
mov
addb
cmpsb
hlt
cmp
movsb
lods
out
movl
mov
in
lds
mov
xchg
dec
and
rorb
add
rolb
mov
and
xor
jmp
icebp
xchg
pop
xchg
cmp
shll
dec
je
cmp
sub
cmc
mov
les
or
push
xor
adc
fstpt
mov
fdivr
clc
test
jno
bound
mov
mov
and
sub
imul
xchg
mov
jae
and
pushf
pop
jbe
sbb
inc
inc
add
das
fwait
or
je
mov
push
lahf
movsb
xchg
arpl
dec
xor
stc
pusha
add
add
repnz
pop
sub
push
insl
stos
xor
lea
mov
dec
and
sub
test
repz
in
mov
xchg
je
and
cmp
or
test
loop
jecxz
ret
les
add
cwtl
xchg
adc
inc
add
mov
aaa
push
daa
imul
mov
test
lods
dec
push
xchg
in
pop
jne
inc
cwtl
cmp
bound
and
adc
mov
ficompl
repz
stc
out
xor
fldt
lea
and
outsl
sarw
push
popf
frstor
jge
jl
add
shlb
out
cmp
cmp
hlt
mov
xlat
and
bound
enter
sbb
rcrb
mov
cmp
shlb
out
ljmp
dec
add
jp
les
in
out
orl
push
out
xchg
sub
aas
xchg
pop
imul
ficomps
cmp
fwait
mov
loope
lcall
pop
mov
jecxz
inc
add
pop
aam
call
add
sub
pop
test
daa
cld
mov
adc
pop
dec
test
dec
cmc
push
loope
jnp
dec
stc
test
add
outsb
ja
test
sub
pop
dec
in
repnz
add
and
add
fs
lds
dec
push
add
jg
pop
aaa
ljmp
and
stos
sub
arpl
pop
imul
mov
sbb
int3
pop
imul
pop
fmuls
jo
in
dec
test
sahf
fsubs
faddp
add
scas
mov
dec
xlat
push
bound
xchg
jmp
in
xor
cmp
add
jmp
mov
push
mov
bound
adcl
xor
cwtl
mov
ja
out
adc
xlat
mov
add
xchg
pop
std
dec
sahf
hlt
inc
cmp
or
or
pop
imul
inc
cmc
loope
test
fmuls
jae
ror
test
push
out
in
sbb
js
mov
movsb
xchg
flds
lods
aad
out
and
pop
adc
shl
mov
mov
xchg
sahf
outsb
lret
mov
mov
out
outsl
or
or
aaa
sub
and
les
imul
add
xor
test
mov
ljmp
jl
mov
ret
xchg
lods
xor
lods
add
arpl
add
push
clc
or
xlat
ss
stos
push
push
in
add
ljmp
pop
xchg
mov
add
pavgb
pop
or
add
cmpsb
jbe
add
mov
xor
mov
xor
lds
cmpsb
incl
mov
xor
xor
mov
outsb
in
inc
add
jne
iret
sub
sub
icebp
addb
aam
movsb
mov
mov
cmpsb
or
cmp
add
xchg
pop
dec
out
xor
movq
xor
mov
adc
rcll
outsl
and
dec
fs
fwait
aaa
add
inc
add
or
add
outsb
mov
or
test
dec
mov
add
addb
inc
add
jmp
clc
scas
adc
jo
notb
insb
mov
add
push
and
outsl
inc
add
ja
add
add
and
aaa
cmp
jle
stc
insl
mov
sbb
add
push
cmp
mov
dec
loop
mov
test
test
xchg
es
push
cmpsb
lcall
aaa
jg
pop
lds
mov
cmpsl
inc
add
std
mov
mov
sahf
sahf
fimull
sbb
cmpsb
adc
add
inc
bound
sarl
xor
push
jl
sub
hlt
fs
dec
xchg
outsl
mov
enter
aam
add
sar
jb
adc
xchg
gs
add
xor
sbb
mov
cmpsb
dec
mov
mov
lock
add
dec
sbb
mov
inc
add
mov
adc
jne
fisttpll
add
cmp
mov
in
jge
movsl
outsb
add
jmp
dec
xor
jnp
add
lock
mov
pop
add
pop
fiadds
add
adc
add
jne
xor
adc
dec
loopne
scas
out
add
dec
mov
adc
arpl
lock
inc
jae
mov
cli
pop
mov
shlb
test
dec
mov
rorl
bound
sbb
fxch
dec
imull
add
imul
das
xor
mov
dec
dec
sbb
jns
sbb
xor
cmp
repnz
lret
xchg
add
repnz
bound
xor
in
inc
scas
push
pusha
add
dec
sti
cwtl
fcomps
arpl
nop
push
cmp
cwtl
mov
pop
test
mov
test
daa
movsl
fdivs
push
jl
xchg
stos
jae
mov
idivb
sbbl
mov
in
int
mov
pop
sahf
sbb
mov
xor
push
xchg
cltd
addb
clc
and
arpl
addb
inc
ret
les
jge
jne
shrl
inc
aam
or
push
cmp
mov
mov
mov
rolb
pusha
add
enter
inc
add
pop
jnp
in
sub
cmpsb
ja
fisubrl
out
fists
sub
push
inc
add
sahf
xor
das
inc
add
dec
cmp
mov
mov
xor
pop
mov
test
nop
jbe
pop
ja
add
pusha
add
adc
mov
mov
sub
add
cwtl
gs
data16
mov
sub
mov
es
inc
add
rcll
jmp
cli
les
mov
and
xor
pop
insb
jmp
cmp
inc
add
aas
sub
pop
add
xor
addr16
data16
pop
imul
repz
cli
sub
in
jo
mov
insb
movsb
inc
sbb
pop
insb
iret
sti
lock
pop
shll
mov
popa
pop
mov
into
sub
adc
call
cpuid
je
inc
add
sbb
add
adc
clc
jle
aad
shll
push
xor
outsb
lahf
rcl
add
mov
push
adc
dec
pop
dec
mov
or
add
jp
mov
jle
addr16
repz
add
adc
lret
repz
movsl
adc
idiv
mov
pop
sbb
xchg
add
xor
add
std
aaa
mov
mov
aam
add
sub
aas
addb
ljmp
add
lcall
cmp
push
add
js
add
aas
or
fsts
mov
and
shll
cmp
add
xchg
ret
xor
call
dec
dec
pop
imul
pop
or
sub
sbb
add
add
pop
jns
aam
lcall
xchg
out
arpl
cmpsl
int
add
sub
fiaddl
in
jb
in
loop
lret
movb
std
mov
mov
hlt
pop
push
push
ss
in
fwait
test
sub
dec
inc
jg
jo
stos
aas
mov
add
pop
mov
xchg
adc
mov
movb
inc
add
movsb
das
jp
cmpl
push
jae
xor
test
pop
jecxz
adc
mov
addr16
sti
rcrl
jo
sub
add
fcompl
push
mov
add
insb
dec
fadds
cmp
push
sarb
jae
mov
push
ja
dec
test
fwait
loope
rolb
je
inc
add
adc
pop
std
xchg
mov
push
ja
lods
imul
pop
fistpll
sbb
mov
push
in
xor
fmuls
std
jne
mov
rorb
addr16
mov
push
mov
lret
inc
add
add
jge
in
or
push
dec
lahf
ja
adc
sub
and
inc
or
adc
fisubrl
mov
pop
fisubrl
pop
cld
sarl
shlb
in
xor
jae
lcall
and
cwtl
jecxz
and
in
fldcw
mov
sub
pop
inc
push
sbb
int3
imul
scas
cmp
xor
and
call
pop
sub
add
add
inc
into
inc
pop
mov
xchg
or
js
insb
pop
addb
addr16
mov
stos
daa
gs
aad
mov
xchg
es
adc
or
pop
adc
jle
dec
pop
outsb
sbb
xor
test
jo
pop
ret
push
adc
cmp
cwtl
push
jp
out
int3
in
daa
es
adc
in
inc
add
lea
call
mov
mov
jnp
push
cmp
jmp
fisubrs
xchg
repnz
movsl
mov
cmp
sbb
dec
out
popf
int
add
cmpsl
outsb
mov
xor
cmp
jo
adc
mov
jge
dec
push
icebp
pop
inc
or
sbb
stc
popa
mov
add
add
cld
add
adc
jo
pop
jne
push
add
and
dec
mov
dec
xchg
inc
cmp
mov
out
jno
mov
rorb
andl
cli
scas
iret
lcall
jae
repz
xor
in
add
addr16
and
sbb
mov
addb
add
add
aas
pop
pop
ja
add
or
pop
sbb
ljmp
sub
xchg
adc
mov
add
roll
dec
xchg
jb
addb
mov
out
xchg
adc
pop
sbb
and
addb
in
sub
arpl
and
idivl
roll
adc
pop
or
das
push
shl
jns
imul
add
xor
lahf
cmp
aam
leave
addb
pop
int
in
and
test
sbb
xor
ret
xor
add
dec
call
cs
lods
es
add
into
add
add
add
in
mov
mov
out
ljmp
adc
xor
pop
in
and
lea
dec
xchg
adc
filds
cld
cmp
and
ja
insl
cli
add
ss
and
cmpsb
or
mov
dec
stc
aaa
and
gs
jp
dec
dec
test
pop
fldenv
stc
add
movb
repnz
dec
adc
xor
std
sbb
adc
pop
pop
pop
jno
push
jecxz
add
ffree
add
add
sbb
mov
outsl
out
out
repnz
addb
out
and
std
js
xlat
adc
and
mov
test
cmpl
sub
pop
xchg
mov
dec
inc
testb
add
mov
xor
mov
icebp
je
in
in
fdivrl
hlt
jno
inc
adc
jo
pop
jo
pushf
mov
out
mov
roll
stos
das
popl
test
flds
jne
add
imul
mov
xor
adc
cld
xchg
push
or
stos
lds
cltd
xchg
sub
jle
add
add
xchg
dec
out
cmp
movsb
movb
loope
dec
dec
inc
add
data16
add
leave
popf
pop
addb
std
inc
orl
xchg
mov
sub
pushf
notl
movsb
cmp
pop
sub
test
in
fimuls
divb
dec
inc
add
push
mov
icebp
sub
popf
insl
xor
scas
sbb
lods
negl
icebp
orl
pop
dec
test
mov
jbe
mov
jo
jbe
out
adc
xor
jge
out
mov
lcall
dec
and
movb
pop
lods
movb
mov
mov
pop
adc
inc
add
clc
mov
add
rcrb
sub
outsb
ss
xor
add
cmp
scas
xchg
adc
inc
xor
sub
adc
and
xor
fwait
jnp
push
insb
popf
add
imul
loope
xor
nop
test
inc
clc
xor
sbb
xchg
jmp
das
push
imul
jns
out
addb
pop
dec
inc
add
mov
into
ds
sbb
fisubs
dec
nop
in
push
add
scas
or
add
sbb
leave
daa
jbe
stos
je
cmpsb
add
out
clc
shrl
pop
addb
imul
lods
jmp
dec
lret
lret
icebp
or
aad
outsb
ljmp
ss
add
adc
xchg
lods
sbb
add
sub
mov
js
std
out
outsb
mov
dec
fnstsw
add
insb
mov
push
daa
push
sbb
mov
mov
push
lret
cmp
popf
or
out
in
inc
rorl
lea
pop
mov
mov
jns
dec
mov
pop
cmovp
push
addb
jmp
outsb
lret
cmp
cmp
data16
jne
shlb
sbb
outsl
xor
or
bound
sbb
stos
std
loop
lods
insl
cmp
data16
fcmovnu
das
enter
and
ja
lcall
dec
mov
add
add
gs
ret
pop
movsl
xor
mov
adc
mov
popa
test
addb
dec
xor
arpl
hlt
mov
jnp
ds
call
stos
pusha
add
mov
sti
cmp
icebp
sub
clc
stos
inc
add
rep
sbb
ja
dec
aaa
pop
rclb
sbb
rolb
movsl
call
dec
pop
mov
lcall
xrelease
lock
mov
adc
enter
push
mov
pop
jg
rolb
cmp
lods
add
test
add
add
popf
mov
jmp
icebp
pop
push
addb
add
mov
imul
jbe
sahf
xchg
jmp
xchg
lods
inc
add
loop
adc
lds
jmp
push
mov
inc
add
or
push
add
push
and
push
pop
inc
sbb
fldl
mov
daa
pushf
cmp
add
xchg
lret
sub
and
pop
test
es
repnz
xchg
lods
adc
ret
mov
repz
sub
inc
cmp
add
jecxz
rolb
push
loope
cmp
rcl
jne
ret
scas
mov
and
inc
add
add
or
inc
into
movsb
bnd
mov
fildll
mov
shr
add
popa
fisttpll
add
pop
xor
xor
pop
aad
imul
sahf
mov
sub
mov
inc
add
rcr
ret
ds
push
add
push
js
int
lahf
adc
dec
cld
out
xchg
adc
sbb
add
and
and
xchg
shrb
add
add
add
stos
movsl
sub
fmuls
lods
sub
inc
add
mov
jl
push
add
inc
out
add
out
sbb
pop
xchg
lods
sub
mov
xor
push
jp
add
push
push
scas
das
fisubrs
add
mov
jle
mov
call
loopne
push
popa
push
ss
shrb
shll
xchg
cmp
mov
or
and
fdivrl
cmpsl
push
mov
mov
sub
fstpt
stos
push
popa
shlb
lcall
cld
out
xchg
add
popa
dec
ret
rcll
mov
sbb
ficompl
jnp
rolb
cmpsb
mov
inc
add
cmpsb
push
in
test
std
mov
das
fsub
arpl
cmp
and
sbb
ss
jnp
cmpsl
inc
adc
insl
insb
inc
add
add
sahf
cmp
mov
mov
xchg
push
popf
idivl
fbld
add
imulb
cmpsb
icebp
inc
add
pushf
lods
add
mov
jmp
sbb
mov
repnz
popa
xchg
scas
sbb
notl
jge
imul
out
sahf
cmp
or
rolb
dec
inc
add
mov
xchg
in
sbb
inc
add
mov
je
mov
dec
and
push
rorl
add
ljmp
jno
add
fiaddl
pop
and
sub
out
mov
movb
cmp
xchg
and
or
cs
add
nop
popf
mov
cmp
cmp
push
add
lahf
fdivs
mov
xor
aad
inc
mov
xchg
popf
adc
movsl
cmp
les
fcoms
mov
pop
scas
mov
xchg
lods
rorb
sbb
mov
push
js
inc
push
rorb
xchg
scas
push
push
dec
jmp
in
mull
sub
dec
xchg
push
mov
jmp
int3
mov
add
jp
jg
xchg
imul
sbb
mov
daa
mov
add
test
sub
loopne
loopne
add
jl
or
mov
fwait
int3
out
leave
aaa
and
adc
repz
nop
inc
pusha
add
inc
inc
fcom
mov
sbb
out
jl
mov
cmpsl
movsl
scas
enter
sbb
aad
test
and
repnz
or
aas
pop
jne
adc
mov
cli
jp
mul
fsub
stos
sahf
adc
loopne
sarb
in
add
jbe
jno
mov
sahf
sub
pop
xor
pop
push
pop
xor
inc
imul
hlt
mov
add
add
in
jp
cltd
sub
pop
and
mov
adc
push
mov
hlt
stos
jle
scas
std
mov
push
push
jb
insb
aam
scas
psllq
and
test
mov
movsl
sub
xchg
divl
inc
add
ret
incb
add
xchg
mov
pop
incb
movsl
xor
int3
xchg
fwait
lea
lret
or
or
xchg
je
hlt
mov
sub
adc
sarl
aaa
push
or
xchg
mov
add
rcll
adc
add
push
push
push
rolb
xchg
loop
pop
mov
jo
lock
push
or
imul
and
loope
dec
movsb
jmp
out
aam
pop
dec
aas
hlt
add
or
mov
shl
imul
pop
or
xchg
pushf
orl
cltd
mov
loop
lock
xor
add
xor
loop
sub
movsb
insb
stc
fdivrp
sbb
add
push
outsl
inc
add
jns
lds
rolb
mov
mov
pop
cmc
sub
add
cwtl
mov
pop
pushw
js
lea
dec
test
jno
add
xor
rolb
out
pop
ds
out
cmp
add
pop
pushf
jge
mov
add
push
fsubs
xchg
cmp
sub
in
es
pop
jb
addb
fwait
movsb
aam
addb
ds
mov
inc
insb
xchg
loope
ficomps
xor
iret
mov
aas
in
outsb
adc
pop
mov
imul
loop
xor
dec
rdtsc
in
fsts
jle
outsb
loop
addb
pusha
add
ficompl
cmp
cmp
movsb
mov
aam
dec
movb
popf
mov
scas
out
push
fs
inc
add
out
cmp
xchg
hlt
iret
dec
out
negl
mov
and
bound
icebp
imul
cli
pushf
mov
add
xchg
xor
addb
clc
and
cld
sbb
adc
addb
xchg
negb
xor
inc
add
or
in
addr16
daa
test
dec
pop
rcrl
inc
sub
xlat
sbb
add
popa
cmc
pop
sub
mov
push
push
js
mov
add
leave
inc
add
add
roll
add
scas
in
sbbl
mov
jne
lret
gs
mov
cli
dec
stos
mov
jne
sub
or
add
aad
add
add
push
mov
les
inc
pop
push
int
xlat
in
sti
inc
dec
xor
dec
loopne
stc
mov
into
cli
adc
jbe
insb
mov
repnz
lret
or
mov
aam
ret
cmovl
xor
mov
lret
mov
pop
or
mov
inc
add
jno
fwait
pop
mov
pop
mov
ss
les
mov
fs
repnz
dec
ss
add
inc
push
push
add
xlat
xchg
stos
fyl2x
scas
les
adc
decl
cmp
adc
sahf
in
jns
pop
jmp
push
or
mov
xor
cmpsl
cmp
add
fisubl
jne
dec
rcl
xchg
mov
mov
cmp
and
jae
push
cs
dec
jae
add
hlt
out
jns
sub
xchg
js
jl
mov
add
inc
add
pop
fsubl
mov
dec
fsubp
inc
add
xchg
shrl
add
xchg
outsl
mov
or
cmp
pusha
add
cli
fnstcw
mov
fwait
xchg
xor
pushf
das
mov
xchg
jecxz
or
and
cld
adc
push
push
dec
inc
add
je
jbe
jle
imul
loop
jae
push
mov
xchg
into
stc
fstpl
enterw
fnsave
inc
add
cmp
lret
fisubrl
pop
aam
pop
sub
aas
dec
sbb
inc
add
or
pop
mov
xchg
test
in
ja
bound
push
cli
xchg
or
pop
sahf
push
add
loop
insl
test
mov
sbb
js
xchg
adc
cmp
outsl
int
sub
xorl
jae
hlt
dec
lret
cmp
sbb
pop
movsbl
in
mov
imul
gs
mov
roll
test
xor
pop
or
sbb
sbb
scas
lahf
adc
and
lcall
pop
sbb
mov
xchg
mov
pusha
add
cmc
push
xchg
fcmovnbe
mov
inc
add
sbb
out
mov
negb
loope
adc
bnd
movsb
mov
gs
cli
sbb
out
sti
pushf
inc
add
lret
in
pop
bound
int
dec
mov
rcrl
push
clc
filds
mov
mov
mov
pop
fsubrs
insl
daa
jmp
repnz
mov
add
in
mov
pop
xchg
dec
fidivrs
add
es
shlb
shll
call
ja
jnp
and
outsl
insb
dec
or
out
insb
inc
scas
pmaxsw
stc
pop
jo
jmp
jnp
repz
pop
xlat
push
je
mov
xlat
sbb
mov
mov
xor
test
negb
lock
int3
pop
xor
pushf
pop
xlat
and
add
in
sub
int3
addb
push
mov
sbb
mov
daa
sub
add
gs
jno
xor
xor
adc
insb
sbb
cmp
sbb
dec
enter
mov
shll
dec
lds
inc
dec
inc
add
bound
push
adc
mov
xchg
stos
bound
adc
xchg
fstpl
add
iret
cld
push
ss
or
leave
aad
lds
mov
xchg
add
xchg
gs
stos
or
sbb
push
xchg
aaa
dec
jae
add
gs
add
loop
sub
scas
xor
pop
jmp
cwtl
fiaddl
sub
mov
push
fs
add
or
sbb
leave
mov
dec
sub
xchg
and
repz
xor
js
add
ret
inc
add
stc
aam
add
stos
pop
mull
xchg
in
mov
mov
imull
or
enter
add
xor
add
aaa
rolb
shll
mov
stc
push
sbb
sbb
dec
rolb
push
outsb
popa
test
sub
or
inc
add
add
mov
fwait
leave
mov
in
stos
adc
mov
xor
clc
dec
push
sarb
cli
jl
add
aas
repz
bound
sub
shrl
sbb
lock
call
xchg
and
sub
popf
jmp
add
add
and
push
je
lcall
sbb
int3
mov
pop
mov
fbld
inc
movsb
mov
xor
sub
addb
xor
mov
lds
aam
cmp
fst
xchg
inc
hlt
or
mov
add
lods
lret
inc
mull
sbb
mov
inc
add
pop
pop
shr
cmp
stos
mov
movsb
fldenv
aad
mov
xchg
mov
fcompl
movsl
shl
cmpsb
cmp
fiadds
leave
adc
jge
cmp
pop
bound
push
idivl
cltd
leave
sbb
adc
lds
fs
pop
xchg
and
jecxz
inc
jp
test
dec
sub
inc
add
pop
in
push
std
test
lods
roll
sbb
add
cmp
or
or
add
pushf
loope
rolb
add
stc
inc
add
pop
bound
loopne
repz
daa
mov
aas
cli
rolb
insb
cmp
sub
or
adc
lods
pop
repz
sub
cltd
les
cmp
mov
idivl
sti
out
movb
leave
mov
dec
mov
mov
add
jbe
addb
mov
lods
inc
add
inc
add
cmp
add
mov
cmp
jbe
lea
js
sbb
adc
fistpll
mov
sbb
mov
push
xorl
mov
add
outsb
mov
push
hlt
in
ljmp
add
mov
xor
add
inc
imul
push
das
cs
das
or
or
jne
adc
add
int
pop
repnz
int3
mov
add
push
xor
lret
cld
out
inc
mov
push
and
mov
pop
mov
jbe
mov
ss
hlt
aaa
scas
jnp
xlat
push
hlt
fiaddl
cmp
movsb
xchg
jae
test
mov
add
out
adc
insb
out
stos
out
sbb
mov
loop
cli
test
std
ret
mov
out
sub
fdivp
xchg
dec
adc
pushf
mov
add
imul
insl
sub
stc
jp
jb
lret
dec
pop
xlat
xchg
mov
loope
lds
dec
ret
xchg
add
scas
sbb
aad
iret
mov
repz
jp
add
add
into
hlt
idivl
cmp
add
mov
jnp
add
ljmp
mov
dec
inc
inc
add
push
addr16
scas
or
rolb
stos
cmp
fcmovnbe
test
or
add
dec
sub
add
add
mov
add
or
mov
cwtl
clc
mov
ljmp
and
daa
mov
mov
xchg
cmp
add
mov
jmp
xchg
dec
add
les
jb
scas
xchg
push
push
mov
inc
jmp
and
sar
add
stc
jb
stos
insl
sbb
in
push
mov
xor
lods
loope
cmp
lahf
test
into
and
clc
shr
push
fbld
mov
iret
jp
loop
pop
shrl
and
jb
movb
scas
pusha
add
lret
or
js
aaa
stos
dec
outsl
xchg
cmp
xor
fdivrp
aas
pusha
add
add
add
addr16
cli
arpl
mov
adc
repnz
sbb
mov
fucomp
mov
push
loop
test
stos
lea
int
fimull
cmpsl
imul
inc
add
xor
push
jbe
rcll
sbb
mov
adc
into
inc
add
push
gs
add
inc
add
mov
insb
dec
pushf
jmp
and
es
mov
jno
push
lret
mov
aam
arpl
loope
mov
or
clc
inc
add
ss
add
cltd
jmp
ljmp
xrelease
int3
or
push
add
jnp,pn
cmp
push
push
push
xchg
mov
add
movb
add
mov
jns
aas
rolb
mull
sbb
add
jb
in
arpl
es
movsl
sub
mov
add
je
jg
adcl
or
popa
jg
pop
fs
jns
fst
pushf
test
into
test
cs
mov
adc
es
mov
movb
out
addr16
mov
mov
cmpsb
cld
cmpsl
sub
jg
ficoms
jo
ljmp
jne
add
repnz
jbe
popf
adc
jmp
daa
or
cmpsl
inc
lret
int3
ljmp
mov
es
les
mov
mov
aas
ret
and
lods
pop
aas
daa
xorl
mov
inc
add
push
outsl
adc
test
mov
lock
hlt
mov
xchg
push
jo
sbb
pushf
add
mov
sti
mov
xchg
jns
into
add
and
add
push
push
lahf
inc
add
mov
rolb
cmpsb
cmp
fstl
xchg
dec
xchg
lret
in
shll
jnp
rcrl
mov
fwait
insl
and
dec
cmpsb
pop
and
loopne
add
orl
leave
cltd
lcall
int
bound
xorl
not
mov
lret
sahf
pop
dec
xor
ss
mov
mov
sbb
incl
jge
dec
push
cmp
loope
imul
sti
pop
test
add
cmp
adc
enter
mov
inc
add
xlat
cmpsb
and
add
add
add
dec
shl
cmpps
aas
repz
add
dec
lret
inc
pusha
add
pop
icebp
adc
or
pop
daa
jle
ss
popl
lods
divb
outsl
mull
or
daa
stos
inc
mov
and
add
dec
inc
add
jnp
jg
inc
neg
mov
add
inc
fsubrs
sti
not
insb
or
aas
inc
movsb
inc
add
imul
sbb
idivb
sbb
je
push
mov
addb
es
or
mov
stos
lahf
pop
mov
inc
add
mov
addr16
sahf
push
fmull
jle
scas
test
je
cmp
sahf
mov
jecxz
push
outsb
xchg
add
mov
addb
sti
and
push
test
or
push
add
lods
and
test
test
in
xchg
pop
cmp
in
in
inc
pop
inc
add
mov
sbb
add
pop
pop
rcr
push
adc
movsb
bound
mov
enter
into
inc
mov
cmp
dec
cld
imull
adc
pop
cmp
mov
rcrl
xlat
test
repnz
bound
jl
or
sub
add
imul
call
xchg
repz
popa
negb
inc
add
fxch
dec
in
jo
add
add
pop
lret
sub
lock
cwtl
mov
in
adc
imull
sahf
dec
xor
add
inc
les
push
outsb
mov
repnz
push
lcall
add
mov
in
add
add
xor
lods
lods
sbb
pop
sahf
pop
xchg
mov
and
call
ds
out
test
imul
mov
add
add
lock
ds
jecxz
xor
mov
insb
mov
add
add
add
mov
add
mov
orl
or
loopne
ret
lds
pop
mov
sbb
fs
cmc
and
jecxz
jnp
sbb
mov
mov
adc
out
test
test
fldl
jne
xchg
mov
pushf
mov
inc
add
imul
fstl
popa
loopne
scas
cld
mov
sub
fisttpl
sbb
cmp
xchg
mov
add
int3
xorl
pop
lret
adc
mov
mov
mov
aad
add
mov
mov
push
sub
mov
jg
mov
inc
add
cwtl
clc
and
push
jmp
addb
and
add
and
inc
xor
std
movb
dec
sbb
repz
loopne
scas
xor
addb
xchg
mov
test
scas
add
fstps
pusha
add
ljmp
lahf
xor
movsb
lahf
jle
sti
cltd
hlt
xchg
jns
xor
imul
repz
shrb
xchg
jmp
push
dec
repz
inc
dec
jnp
sbb
or
xchg
clc
sti
sbb
imul
cmpw
sahf
outsl
aad
sub
jmp
andl
pop
sahf
dec
pop
mov
mov
xchg
cmpsb
cmp
inc
rolb
mov
out
add
and
clc
repnz
xor
sbb
xor
jnp
sbb
push
mov
mov
repnz
lds
adc
lret
aas
seto
adc
arpl
cmpsl
pop
fistpl
fldcw
inc
addb
or
jp
ret
pop
dec
outsl
cmp
add
insl
or
adc
mov
dec
stos
jl
push
cwtl
lds
shlb
add
movb
xor
inc
popf
hlt
add
push
inc
add
and
pop
xchg
dec
pop
ret
jne
daa
mov
adc
jns
sbb
mov
out
inc
add
bound
pop
stos
loope
add
cmpsb
movsl
sbb
add
mov
sbb
or
insl
cmp
adc
adc
rolb
xchg
das
jns
dec
out
add
lret
outsb
adc
jg
xchg
mov
xor
pop
jae
outsb
dec
in
stc
push
push
mov
lds
add
adc
shl
xor
popf
sahf
cmp
sub
sub
enter
data16
fucomi
shld
movb
sbb
cmp
add
adc
pop
push
je
add
decl
ror
xchg
sbb
out
mov
jmp
add
inc
call
add
pop
mov
push
int3
mov
fidivrl
mov
add
lcall
mov
sarl
hlt
mov
mov
mov
push
pop
addb
or
xchg
dec
cmp
adc
pop
scas
push
cmp
outsb
pop
jp
mov
cmp
jmp
outsb
stc
shll
mov
inc
test
mov
mov
movsb
aad
sbb
fidivrs
xchg
push
fstl
stos
fildll
cmp
mov
loope
or
and
jbe
pop
imul
mov
lods
sub
into
fstpl
push
jge
movl
xor
push
add
inc
gs
mov
cmc
stos
sbb
and
xchg
rolb
arpl
leave
xchg
inc
add
ret
ljmp
out
or
jae
iret
rolb
cmp
pop
jbe
xchg
pop
divb
add
divb
pop
add
nop
fsubp
fdivrs
add
add
cmp
hlt
ljmp
push
adc
js
loope
dec
fimuls
dec
jl
cmp
arpl
add
dec
mov
adcl
or
and
mov
mov
into
mov
xchg
mov
add
in
popf
ds
repnz
das
mov
loopne
out
ds
mov
fnstsw
stc
jne
mov
ljmp
pop
aas
rol
addb
jle
int3
imul
ret
fldcw
es
xchg
mov
mov
mov
and
xchg
lcall
add
xor
add
mov
out
xor
add
jae
mov
cmp
mov
enter
sti
pushf
inc
xlat
outsl
xchg
test
repz
xchg
add
sbb
xor
fxch
enter
dec
dec
sbb
add
or
mov
in
addb
mov
cmp
jae
js
add
add
add
aam
mov
add
callw
in
pop
lcall
add
mov
jmp
ja
rolb
inc
xor
jl
add
test
mov
fistl
xchg
enter
inc
add
cs
insb
stos
dec
push
nop
push
add
sbb
negl
mov
iret
and
cmpsb
fldt
inc
je
and
push
movb
aaa
pop
xchg
mov
jl
inc
xchg
scas
and
popa
fwait
cs
mov
dec
pop
xor
sti
pop
and
push
int3
lret
outsb
shl
ljmp
lods
xchg
pop
dec
jle
stc
out
xchg
lret
lods
outsl
pop
jle
movsl
sbb
mov
pop
sbb
cmpl
push
arpl
pop
pushf
xchg
jnp
into
pop
inc
add
xchg
pop
das
das
mov
jns
stc
imul
out
mov
mov
out
or
inc
scas
xchg
dec
lock
pop
jmp
rolb
in
dec
push
pop
lret
rclb
adc
arpl
push
ret
fidivrl
clc
push
shlb
push
mov
jnp
xchg
push
lea
or
xlat
push
add
inc
add
inc
add
ljmp
mov
cwtl
ja
mov
lock
or
xchg
jb
mov
jle
jbe
adc
jnp
imul
pop
jp
mov
or
ficompl
and
test
ja
pop
or
iret
xchg
xor
mov
lcall
aas
repnz
xchg
in
pop
ljmp
and
adc
test
cmp
jl
pushf
test
add
fnstenv
push
xchg
or
outsb
mov
sub
jg
push
xor
cs
xor
fstp
mov
je
scas
enter
mov
mov
pop
push
clc
mov
aad
jg
mov
fildl
add
mov
inc
bound
xor
lcall
jl
xchg
sbb
fimull
add
loop
call
mov
aad
jnp
es
jns
loop
xchg
or
je
test
std
xchg
mov
mov
pop
jo
enter
sbb
sbb
add
fcomps
rol
incb
add
or
mov
inc
fadds
mov
scas
mov
push
adc
ret
int3
push
in
inc
add
jp
mull
fldt
out
jl
imul
out
add
test
pop
add
insb
jg
mov
cmp
sub
add
psrlq
add
xor
mov
nop
mov
rcr
mov
loope
add
mov
testb
popa
rcll
push
add
add
nop
mov
xchg
push
clc
pop
inc
add
fucomp
lret
cli
movsb
sub
test
mov
ficoms
mov
test
in
filds
push
dec
and
xor
add
cmp
xchg
lods
lret
add
fiaddl
test
push
dec
cmc
int
xor
add
repnz
loop
adc
lds
add
xor
add
cmp
cmpsl
popf
out
jnp
loop
js
add
inc
mov
cltd
xadd
and
adc
add
lcall
xlat
stc
add
inc
add
pop
lret
sbb
pop
mov
add
sti
jmp
pop
cmp
and
push
loope
and
add
mov
stos
cs
lahf
cmpsb
or
ljmp
dec
das
mov
fstps
in
jg
loope
mov
jns
or
js,pn
imul
leave
or
pop
mov
add
mov
lea
xor
jmp
ja
iret
imul
add
std
stos
stos
mov
mov
enter
cmp
mov
ja
clc
push
mov
out
movsl
add
into
mov
pop
push
fisttpll
jp
mov
cmp
inc
bound
xchg
es
dec
xchg
sbb
jne
adc
push
push
fisttps
outsl
rolb
lea
repnz
mov
mov
dec
movb
inc
add
push
clc
jnp
xchg
mov
fisubrs
lahf
xchg
inc
add
lods
out
add
pusha
add
mov
lahf
push
add
out
mov
mov
or
add
movsl
mov
scas
dec
jmp
adc
push
addb
adc
cmp
xor
aam
call
cmovno
dec
sbb
sub
add
xor
pop
push
pop
jnp
fcmovnbe
insb
sbb
add
out
mov
fadd
add
add
cmpsb
push
in
outsb
cmp
jp
add
cwtl
popf
pop
jmp
clc
sub
fildl
bound
scas
sar
jno
mov
pop
adc
adc
add
jns
mov
fidivrl
push
jnp
add
aad
ja
movsl
sbb
notb
push
push
jb
fidivl
xlat
outsl
data16
push
add
xchg
or
add
or
adc
add
pop
push
push
mov
sarl
pop
mov
fldt
xchg
negl
jbe
mov
rolb
cmc
and
mov
mov
jnp
out
notb
lods
xor
xchg
xchg
addb
repnz
leave
pop
jnp
pop
ja
sub
insb
pop
out
insb
lret
push
sub
or
lods
je
mov
aas
sahf
mov
xor
loop
pop
sbb
mov
mov
adc
and
and
rdtsc
out
adc
add
rclb
or
outsb
lret
loop
sub
or
int
je
sbb
movb
rorl
scas
movsl
push
pop
cmp
mov
aad
or
inc
add
loopne
add
adc
aas
pop
mov
loop
int
inc
add
jno
sub
jbe
xor
add
movsl
add
mov
popf
fisubrl
lcall
cld
cmpsl
movsb
popf
push
jo
test
adc
xchg
testb
push
adc
pop
aas
xchg
int
add
push
add
mov
es
mov
addb
add
mov
sbb
push
add
lret
stc
jbe
add
lods
idivl
add
xchg
rol
add
std
ja
sbbl
mov
bound
mov
lahf
jo
fs
jge
jecxz
or
insb
push
adc
mov
add
cmp
les
rolb
out
mov
xchg
adc
and
daa
das
repz
and
je
aam
or
das
icebp
mov
into
pop
dec
pop
push
jno
stc
adc
push
test
add
dec
hlt
add
pop
pop
scas
sar
cmp
push
mov
sub
loopne
call
push
popf
push
repnz
sbb
mov
jp
fiadds
js
jns
jo
gs
dec
and
ret
or
add
ljmp
stc
xchg
jns
sahf
out
js
add
jnp
ljmp
movsb
push
mov
add
add
sbb
int3
fildll
jecxz
outsl
and
rolb
jle
jno
ja
std
sub
add
fs
pop
out
xlat
add
addb
in
insb
std
dec
or
xchg
cli
push
mov
add
jo
mov
adc
jle
lock
hlt
xor
dec
inc
add
mov
addb
loopne
sbb
fwait
sub
roll
pop
lods
addr16
dec
insb
jmp
mov
jmp
adc
cld
fcompl
in
jmp
add
hlt
inc
add
jae
add
roll
mov
inc
add
add
subl
test
add
add
add
popf
sbb
cmp
fldl
dec
mov
stos
fs
lahf
jle
mov
xchg
sbb
push
add
jp
rcr
lret
mov
add
add
xor
icebp
aad
sarb
or
roll
arpl
js
pusha
add
fdivl
sbb
dec
repnz
xor
insl
inc
lds
jmp
add
jnp
outsl
adc
push
xor
xchg
jmp
push
mov
inc
add
add
enter
js
addr16
xor
or
out
leave
inc
inc
push
add
and
and
aas
ds
and
sar
lcall
fbld
inc
add
mov
popa
pop
rorb
out
jg
inc
push
add
sbb
jbe
xchg
mov
mov
dec
scas
push
xchg
insb
es
sbb
push
or
js
jle
add
adc
mov
dec
dec
dec
lcall
add
adc
mov
xchg
push
jns
pop
inc
add
stc
jne
and
jne
jno
addl
push
icebp
not
adc
negb
xor
lret
jg
shll
pushf
xchg
xchg
and
std
mov
in
sbb
mov
pushf
loope
xchg
xchg
iret
mov
jecxz
mov
mov
add
dec
mov
xor
pop
and
leave
iret
lock
add
sub
jb
shlb
push
mov
rol
test
loopne,pn
push
push
cmp
movsb
cmp
add
pop
nop
js
jmp
test
add
fiaddl
jle
push
inc
ret
ss
xchg
push
sub
ret
mov
lcall
pop
loop
add
fistpll
insl
dec
xor
addb
or
test
adc
in
addb
sbb
adc
inc
add
lret
jno
push
pop
ffreep
add
cmpl
add
test
dec
fildll
cmp
add
sbb
fisttpl
test
cmpsl
jne
subl
test
mov
loop
sub
out
cmp
daa
and
insl
mov
push
inc
add
or
dec
pushf
jbe
fbstp
add
fimuls
ror
dec
movb
lods
or
add
jecxz
sbb
out
dec
xchg
jecxz
add
sbb
mov
out
scas
clc
in
mov
popf
or
add
mov
adc
in
sub
dec
fs
movsl
movb
test
and
int
cmpl
lods
les
in
cli
bound
jae
jle
lods
mov
add
sbb
bound
call
dec
rol
add
mov
jnp
icebp
fidivl
sbb
int
add
xor
call
bound
mov
adc
mov
lret
call
insl
sbb
lea
outsb
movb
bound
in
rorb
push
add
js
add
add
push
fs
nop
mov
xor
sbb
stc
enter
add
push
stc
xlat
jle
out
imul
mov
add
sbb
mov
jmp
cli
lea
adc
pushf
cmpsb
je
fistl
and
adc
mov
adc
int
cwtl
imul
add
add
mov
aad
pop
fcomip
adc
add
push
and
test
imul
or
rcrb
mov
aad
dec
push
pop
sbb
jo
aaa
mov
or
push
add
test
xchg
int3
dec
cmp
cmp
loop
or
jo
ret
lods
lcall
add
aam
add
sbb
pop
ret
lahf
stos
cmp
es
paddd
add
add
lods
mov
movb
jle
dec
mov
cmpsl
inc
add
icebp
loope
adc
add
add
add
jge
addb
xor
adc
adc
jne
rcll
ljmp
add
and
imul
out
insl
stos
mov
rcll
pushf
push
cmp
xchg
pop
aad
push
jecxz
xlat
ljmp
add
out
push
mov
insl
jmp
xchg
stc
mov
xor
lret
mov
dec
jb
jno
push
mov
in
fwait
pop
jmp
je
vaddss
test
fidivrl
lret
lcall
xor
add
popa
cwtl
gs
jo
jmp
add
add
jle
fwait
xor
in
sub
int3
lds
repz
add
jge
pop
cli
shrb
cmpsl
xchg
fistps
sti
pop
xor
mov
add
mov
cmp
lcall
lock
pop
mov
push
push
inc
add
mov
pop
scas
lret
stos
add
push
cmp
add
aad
cmc
rolb
adc
shll
mov
add
xchg
cmp
stc
dec
test
add
cli
fidivl
loope
xor
iret
das
repz
add
add
ret
aam
test
fidivrl
lods
repnz
movsb
in
jnp
adc
testb
jg
gs
xchg
out
addb
dec
or
dec
stc
lods
insl
jbe
adc
sub
out
mov
gs
xlat
arpl
rolb
add
arpl
add
jle
aam
insl
movsl
sahf
sarl
jg
jg
pop
jmp
lret
idiv
data16
add
in
pusha
add
jp
call
lods
js
loope
clc
xor
push
gs
repnz
out
dec
insl
xor
adc
dec
xor
push
pop
mov
pop
xchg
jae
addr16
push
mov
jp
jb
mov
fyl2x
hlt
add
pop
nop
fldl
sbb
add
stc
scas
pusha
add
add
add
shlb
dec
inc
push
sub
dec
and
jne
sar
jae
popa
lods
sbb
jbe
aam
and
jecxz
add
cwtl
dec
mov
mov
pushf
jbe
addl
or
adc
rcrl
add
jno
or
stos
mov
push
addb
lahf
mov
aad
sub
std
out
push
cmp
cmpsl
cmp
js
push
sub
add
and
lcall
jbe
mov
jle
cmpsl
lret
jmp
mov
add
jg
orl
sahf
mov
int
pop
push
add
lds
mov
xor
sahf
inc
add
adc
repnz
dec
mov
cmp
les
inc
add
sub
std
xchg
arpl
dec
pop
addl
dec
lea
xchg
inc
xchg
mov
rolb
sbb
add
lea
jmp
imul
inc
or
or
add
jg
xlat
stos
adc
inc
add
and
dec
jle
or
sahf
push
jno
stos
int3
rol
add
pop
dec
mov
aad
cli
repnz
loope
mov
stos
pop
mov
ret
mov
scas
mov
cmpsl
hlt
and
out
aam
add
xchg
loope
je
xlat
mulb
rcll
add
sub
hlt
repnz
mov
in
sub
rcrb
mov
cmp
mov
inc
daa
cmp
es
cmpsl
sbb
add
jle
fisttps
ljmp
push
loopne,pn
out
mov
lods
pop
int
add
inc
add
fsts
xchg
cmpsb
xchg
test
add
add
sbb
ficoml
or
sbb
mov
cmpsb
out
xchg
cmp
xchg
xor
js
cmp
pop
pop
cwtl
mov
jp
pop
cmp
add
addr16
add
test
sbb
jb
addr16
filds
add
add
or
filds
push
mov
pop
jge
push
or
jecxz
movsl
ja
push
sub
cmp
add
add
add
notl
outsb
push
mov
mov
add
sub
mov
outsb
ljmp
push
jmp
add
aas
addb
mov
jmp
add
cmpsb
ss
lods
push
dec
out
mov
pop
add
inc
mov
lea
sub
xchg
jge
stc
dec
xchg
mov
shl
mov
cmpl
cmp
xchg
mov
add
jno
push
lret
xor
in
add
and
sub
xchg
frstor
mov
int3
les
dec
sbb
sub
mov
cld
inc
add
sbb
das
in
ret
push
mov
xchg
std
or
add
cmp
lods
in
push
add
pop
scas
call
mov
das
lea
mov
daa
push
repnz
scas
xchg
test
mov
pop
nop
dec
rorl
push
inc
lret
sbb
mov
sbb
mov
cmp
xor
mov
mov
addb
sahf
and
mov
mov
add
inc
dec
mov
arpl
push
in
pusha
add
movsb
sbb
inc
mov
pop
movsl
cmp
js
jl
and
es
out
cmc
mov
ret
lret
push
in
loope
pop
mov
cmp
sub
mov
push
fistl
adc
loop
scas
fdivr
sub
cmp
loopne
test
and
rcrl
je
add
add
int3
jnp
add
clc
fimuls
aam
sbb
xchg
or
aaa
inc
xor
dec
ret
movsb
pop
insb
adc
inc
add
inc
push
add
pushl
add
add
add
insl
pusha
add
mov
cmpsb
stc
and
adc
sti
push
movb
cmp
and
pop
jmp
dec
in
loope
mov
add
dec
std
rolb
jmp
mov
jmp
jb
mov
mov
addl
jg
out
sub
add
iret
and
xor
jnp
or
sbb
xchg
add
test
add
add
mov
addb
add
pop
mov
imul
mov
hlt
adc
add
sub
push
mov
jecxz
mov
jns
iret
cs
or
into
ja
iret
xchg
xchg
outsl
xor
xadd
imul
sbb
mov
mov
lahf
pop
nop
mov
inc
add
jp
xor
repz
add
jle
das
scas
lods
jb
mov
fbld
adc
xorl
movsl
das
lcall
pop
sahf
ja
scas
test
mov
repnz
pop
and
lea
mov
inc
insb
sub
adc
xor
add
pop
mov
movsl
in
out
push
xchg
dec
push
add
aas
paddusb
stos
mov
xor
push
add
mov
sub
addb
mov
test
aas
push
mov
adc
add
fidivl
sti
shlb
hlt
inc
xor
mov
push
cmp
inc
addr16
sbb
sysenter
in
leave
out
test
gs
add
jo
add
jecxz
inc
add
mov
xor
mov
pop
int3
data16
sub
sbb
pop
or
jne
push
inc
test
mov
mov
and
data16
or
add
add
add
inc
add
roll
add
gs
inc
add
add
mov
sarl
les
push
jecxz
dec
push
jge
int
cmpsb
data16
loop
inc
add
insl
add
add
mov
insl
and
or
loop
sub
iret
add
push
push
push
sbb
out
scas
xor
test
xor
jmp
test
mov
mov
xchg
xor
mov
dec
outsl
addb
pop
dec
jle
pop
cwtl
xchg
xor
adc
xor
pop
int3
add
pop
mov
mov
inc
loopne,pt
add
pop
daa
lock
outsl
sbb
mov
pop
jle
and
sahf
adc
fcmovb
adc
jne
xchg
push
rorl
add
inc
add
inc
test
cwtl
fwait
sub
push
shrl
bound
int3
pop
movb
mov
shrb
divb
jno
push
add
out
imul
add
mov
loopne
or
lahf
pop
psubd
and
out
cmp
lods
lods
test
mov
ret
xor
sbb
adc
or
fwait
and
cwtl
ldmxcsr
pop
cmp
mov
and
mov
in
pop
cmp
and
movb
sub
jecxz
rclb
mov
xor
push
add
je
cmp
xchg
aam
js
add
shrl
cltd
movb
mov
clc
mov
cli
cmp
icebp
xchg
xor
add
adc
add
rolb
cld
jne
filds
js
xchg
add
or
inc
add
mov
add
xchg
mov
ffreep
add
or
testb
stc
into
in
in
xor
js
aam
or
add
add
jo
lock
inc
add
int
adc
add
mov
adc
in
stos
rcrl
movsl
jns
sti
rcl
test
and
xchg
sub
bound
adc
add
fnstenv
lret
mov
insl
dec
xor
xor
add
cmp
push
adc
or
add
test
and
add
test
dec
shlb
push
loopne
sub
jecxz
adc
adc
pushf
and
ret
add
stos
mov
add
mov
adc
jmp
lret
in
add
inc
add
fildl
nop
mov
loope
std
aad
fistpl
pop
nop
mov
adc
sub
jle
pop
jmp
push
mov
add
ffreep
add
adc
add
scas
insb
out
test
movsb
xor
ret
mov
inc
sub
jo
repz
addb
outsb
loopne
add
jb
addb
add
shrl
pop
push
mov
repz
add
add
stos
outsb
xlat
aas
mov
cmc
adc
add
jge
addr16
jno
add
lahf
jg
jl
std
xor
in
pusha
add
push
jae
gs
mov
mov
icebp
cmpsb
inc
add
test
adc
lods
and
ret
and
cmp
out
cmp
stc
out
jb
jne
mov
sbb
nop
push
push
addl
insl
cmp
mov
add
xchg
or
cmp
mov
fildl
pop
int
sub
cmc
jg
fmul
in
xchg
xor
add
xor
adc
add
mov
pushf
xchg
mov
sbb
outsl
movb
add
pop
fisttpl
insl
sbb
xor
ret
ret
fs
cmp
add
and
clc
out
fidivs
sbb
dec
cltd
pop
int3
sub
daa
in
faddl
out
mov
lods
popl
pslld
xlat
pop
leave
sub
add
xchg
push
or
dec
sbb
ret
sbb
repnz
xor
mov
adc
enter
iret
jmp
add
es
mov
mov
sbbl
in
je
xchg
mov
sub
fcoml
mov
iret
outsl
rorl
cld
psadbw
sbb
bound
jo
iret
out
into
arpl
sbb
add
dec
sub
pop
xchg
xlat
fstpl
cmp
sbb
inc
add
or
add
sbb
jne
dec
pop
mov
dec
mov
dec
lds
outsb
dec
lahf
fdivs
lret
jno
dec
icebp
xor
shr
xchg
out
add
data16
ljmp
arpl
dec
pop
jne
jo
add
es
roll
mov
dec
jge
aad
mov
repz
mov
stc
jb
add
mov
ljmp
add
jb
inc
add
xor
nop
jmp
sub
movsl
jge
xor
add
out
push
stc
jb
xchg
add
dec
repz
and
loope
iret
dec
mov
mov
push
mov
xchg
ret
add
add
mov
pop
add
xchg
ret
ds
dec
jbe
push
push
mov
xchg
ret
add
test
add
stc
jb
jge
add
or
jb
dec
lods
add
push
sub
inc
loope
add
cmp
cmpsb
or
add
dec
cmpsl
push
in
dec
shr
nop
jmp
add
add
add
add
je
stc
jb
cmp
mov
in
jns
out
inc
mov
fcoms
enter
mov
add
sbb
add
lahf
add
addb
xor
push
mov
xchg
ret
push
pop
dec
add
push
stc
jb
ds
add
out
mov
nop
jmp
sub
sbb
add
pushl
stc
jb
mov
add
ja
push
repz
jb
add
iret
iret
add
add
add
jb
add
add
jb
mov
push
mov
xchg
ret
add
pop
push
stc
jb
jbe
add
cmp
cltd
xchg
shlb
aaa
mov
mov
xchg
ret
dec
add
icebp
inc
add
add
pop
add
sub
or
push
mov
xchg
ret
mov
add
pop
sldt
add
sbb
add
add
pop
mov
pushf
adc
add
filds
inc
ljmp
sub
jb
add
add
clc
repz
mov
stc
jb
add
jbe
sbb
enter
cmp
jb
add
flds
add
adc
adc
add
add
sub
dec
lahf
push
mov
xor
add
stc
jb
add
les
mov
xchg
push
cmc
mov
mov
stc
jb
mov
add
jmp
or
mov
add
add
add
stc
jb
add
mov
dec
testb
sub
ret
add
std
push
push
mov
xchg
ret
dec
add
add
stc
jb
or
or
add
stc
jb
add
cmp
add
mov
xchg
ret
add
jbe
mov
stc
jb
add
sbb
sub
jmp
add
add
filds
dec
add
jecxz
mov
push
mov
xchg
ret
mov
add
das
add
add
pop
mov
dec
xor
push
mov
xchg
ret
lret
lcall
sbb
inc
add
jge
mov
jb
add
lret
xchg
add
loope
add
push
mov
xchg
ret
add
rol
leave
les
stc
jb
add
lret
mov
jno
mov
stc
jb
add
lods
mov
ror
pop
stc
jb
enter
add
dec
add
inc
clc
mov
stc
jb
add
add
add
add
push
push
mov
xchg
ret
add
add
add
mov
jne
nop
jmp
lods
iret
add
push
mov
xchg
ret
flds
or
lcall
jb
add
add
lahf
clc
es
xchg
test
nop
jmp
clc
add
add
dec
add
add
cmpl
jbe
add
cltd
add
decl
push
mov
xchg
ret
add
pop
mov
mov
push
mov
xchg
ret
sub
sbb
add
add
mov
xchg
ret
ljmp
or
mov
xchg
ret
cltd
add
push
mov
rep
stc
jb
add
rcl
rcll
xchg
jae
mov
stc
jb
add
enter
dec
push
stc
jb
inc
sub
add
stc
jb
add
iret
xchg
jbe
addb
lods
push
stc
jb
cltd
iret
cltd
xor
pop
dec
nop
jmp
pop
add
add
add
repz
jb
cmpl
insl
mov
push
mov
xchg
ret
add
add
xor
add
adc
add
jb
add
stc
jb
dec
enter
fldenv
and
add
jbe
iret
add
add
fimull
rorb
add
pop
xor
ss
jmp
add
add
push
enter
dec
nop
jmp
data16
mov
rorb
push
mov
xchg
ret
sub
add
stc
jb
add
es
stc
jb
add
add
add
jb
roll
sbb
add
add
out
inc
push
mov
xchg
ret
jge
adcl
subb
add
jbe
dec
pop
pop
add
push
add
subb
mov
sahf
ret
stc
jb
push
iret
add
dec
add
ficoms
in
add
aas
inc
push
add
hlt
fiaddl
add
add
add
add
stc
jb
jge
iret
fimull
jmp
in
add
mov
nop
jmp
add
add
add
add
jnp
mov
jnp
add
push
imul
or
nop
jmp
add
enterw
js
nop
jmp
add
add
add
pop
push
mov
xchg
ret
cmp
add
lret
adc
and
add
jb
add
mov
pop
out
nop
jmp
add
iret
cmp
push
add
add
mov
nop
jmp
add
popf
dec
add
add
xchg
leave
mov
nop
jmp
add
dec
jmp
add
idivl
and
jmp
pop
xchg
lret
data16
xor
push
stc
jb
xchg
test
ljmp
jmp
add
ljmp
jne
stc
jb
add
mov
jmp
stc
jb
add
add
sbb
add
xchg
int
fdivrp
jb
movsl
in
add
add
scas
mov
stc
jb
add
xchg
add
adc
add
jb
dec
cmp
inc
mov
imul
stc
jb
sbb
mov
xor
cmc
outsl
add
nop
jmp
pop
xchg
xchg
enter
into
dec
stc
jb
add
xor
add
add
pop
mov
stc
jb
rolb
add
add
xchg
call
and
add
dec
pop
inc
add
add
mov
xchg
ret
add
xchg
cmp
adcb
add
add
add
mov
mov
adc
jmp
add
mov
add
mov
inc
push
mov
xchg
ret
mov
data16
push
push
mov
xchg
ret
rcrl
bound
call
nop
jmp
xor
clc
lcall
add
jb
data16
fwait
pop
stc
jb
sarb
lret
xor
mov
stc
jb
popf
mov
call
mov
xchg
ret
add
sbb
dec
mov
stc
jb
mov
popf
cmp
mov
stc
jb
pop
add
add
add
nop
jmp
add
add
mov
add
push
mov
xchg
ret
add
add
lea
nop
jmp
add
add
test
add
stc
jb
add
dec
mov
stos
notl
add
add
add
rep
push
mov
xchg
ret
add
dec
add
mov
xchg
ret
add
mov
mov
stc
jb
mov
add
sub
jb
add
mov
add
addb
add
popf
pop
cs
cltd
or
int
add
stc
jb
sbb
iret
add
call
nop
jmp
or
pop
lret
and
jmp
pop
add
add
add
popa
add
jb
add
inc
add
add
orb
add
lcall
add
cmp
or
jb
add
ds
aad
add
nop
jmp
add
jmp
fmull
orb
dec
add
add
jmp
nop
jmp
add
iret
filds
out
pop
pop
stc
jb
mov
data16
dec
push
or
adcb
add
dec
add
pop
pushl
nop
jmp
dec
lcall
mov
stc
jb
add
mov
push
test
add
mov
add
add
jb
pop
lods
add
out
push
stc
jb
add
lods
dec
jnp
dec
add
mov
xchg
ret
cmp
xorb
fnstcw
movsl
in
or
pop
stc
jb
or
add
cmp
pop
push
mov
xchg
ret
iret
pop
lret
inc
add
jb
sbb
mov
cmp
nop
jmp
dec
add
add
das
xor
push
mov
xchg
ret
add
and
jmp
add
sbb
rolb
sbb
mov
xchg
ret
add
jbe
pop
pop
int3
push
push
mov
xchg
ret
add
push
push
mov
xchg
ret
cs
sub
add
push
mov
xchg
ret
add
push
jne
stc
jb
movsl
jbe
push
aad
or
popa
add
mov
xchg
ret
add
push
sbb
movsb
stc
jb
xor
lcall
cmpsb
mov
cmp
nop
jmp
iret
add
mov
pop
mov
stc
jb
add
add
cmp
add
and
stc
jb
add
fisttps
add
jb
test
lods
cs
stc
jb
add
add
add
lock
push
stc
jb
xor
add
add
lcall
stc
jb
iret
add
add
stc
jb
add
add
roll
add
or
nop
jmp
add
add
pusha
add
mov
stc
jb
dec
movsl
xchg
pop
rolb
xor
sub
jb
jb
add
ljmp
dec
sldt
pop
cs
add
inc
push
adc
stc
jb
rolb
add
or
incl
xchg
ret
cltd
dec
add
add
add
jb
sbb
in
xchg
subl
push
mov
xchg
ret
rorl
sub
stc
jb
in
xchg
mov
add
shrl
add
stc
jb
add
inc
call
inc
add
add
push
pfcmpge
jmp
inc
add
xchg
pop
add
stc
jb
mov
cmp
jb
add
add
movsb
mov
test
add
stc
jb
inc
add
cmp
fcoml
add
iret
bound
add
fisubrs
popa
je
stc
jb
push
loope
add
add
jb
push
or
mov
call
stc
jb
data16
jbe
jae
adcb
incl
add
jge
push
mov
xchg
ret
mov
dec
push
mov
fs
dec
test
add
call
mov
xchg
ret
lahf
fldenv
mov
add
cmpb
add
add
add
or
mov
push
stc
jb
mov
inc
add
push
stc
jb
add
add
movsl
rcll
dec
mov
clc
inc
push
mov
xchg
ret
xor
add
adcl
add
fs
cwtl
mov
nop
jmp
dec
mov
push
mov
push
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
popa
stc
jb
add
pop
xor
add
push
mov
nop
jmp
add
dec
jmp
stc
jb
push
add
leave
nop
jmp
clc
add
add
push
mov
cmp
jb
data16
add
iret
add
in
jb
sbb
pop
shr
stc
jb
cmpsl
mov
inc
add
pop
push
mov
xchg
ret
dec
bound
sub
jge
add
add
stc
jb
inc
add
mov
push
mov
xchg
ret
dec
add
dec
mov
stc
jb
add
add
add
psubsw
cld
call
add
enter
jge
stc
jb
add
add
mov
sbb
adcb
add
add
add
lea
stc
jb
add
enter
dec
xchg
stc
jb
add
enter
add
test
add
add
jb
in
add
add
nop
jmp
data16
add
mov
push
mov
xchg
ret
iret
xchg
add
add
nop
jmp
add
add
mov
cmp
jb
or
or
add
rorl
add
stc
jb
jge
cmpsl
rclb
leave
push
mov
xchg
ret
add
xchg
test
add
add
jb
add
mov
faddl
add
nop
jmp
inc
jge
add
fisttpl
add
stc
jb
add
add
fiadds
xchg
ret
iret
add
sub
mov
jb
xor
clc
jge
mov
cmp
jmp
mov
xorl
stc
jb
add
add
xor
and
stc
jb
sbb
add
ljmp
adc
add
add
dec
add
shll
out
xchg
xor
xchg
push
add
add
lahf
add
test
movb
add
stc
jb
add
inc
add
stos
push
mov
xchg
ret
add
popa
repnz
movb
xchg
ret
add
add
inc
pop
add
cmp
add
or
xchg
cmp
pop
cmpl
nop
jmp
add
cmp
push
mov
xchg
ret
xchg
jmp
add
pop
mov
stc
jb
bound
jmp
adc
mov
xchg
ret
rolb
clc
dec
mov
stc
jb
add
add
jb
add
iret
mov
push
mov
xchg
ret
bound
add
add
add
or
incl
mov
iretw
insl
add
stc
jb
push
flds
outsb
mov
push
mov
xchg
ret
add
mov
nop
jmp
add
loope
out
mov
nop
jmp
add
add
pop
stc
jb
mov
clc
add
fimull
and
call
cmp
shrl
pushf
repz
call
in
add
sbb
add
add
cmp
add
adc
add
push
mov
xchg
ret
xor
pop
mov
jb
clc
data16
dec
ds
nop
jmp
cmp
dec
add
xor
dec
lods
push
mov
xchg
ret
add
add
mov
push
stc
jb
sub
cmp
das
push
stc
jb
mov
orl
mov
nop
jmp
iret
rolb
add
xchg
enter
sub
jb
data16
dec
pop
pop
bound
cmpsl
cmp
inc
stc
jb
add
add
inc
imul
rclb
add
stc
jb
add
and
movzwl
nop
jmp
add
add
add
push
stc
jb
add
movsl
in
add
inc
mov
adc
add
or
dec
add
data16
jb
stc
jb
add
add
push
out
mov
stc
jb
add
add
add
or
nop
jmp
add
inc
add
push
mov
add
add
jb
add
mov
stc
jb
add
add
in
cmpw
nop
jmp
pop
mov
mov
mov
jb
ds
xor
add
sbb
add
gs
jb
pop
add
push
add
and
push
mov
xchg
ret
roll
lods
xor
mov
nop
jmp
add
add
add
stc
jb
fldenv
add
push
push
mov
xchg
ret
add
xor
pop
stc
jb
add
add
add
jbe
adc
pusha
push
mov
xchg
ret
add
add
cmp
aas
push
stc
jb
add
add
add
mov
add
stc
jb
cmpsl
mov
add
or
jb
add
push
add
jmp
stc
jb
add
pop
sub
add
stc
jb
add
xor
mov
stc
jb
add
adc
jg
aas
adc
add
add
pop
enter
flds
add
add
jge
inc
cmp
mov
out
call
add
add
add
jmp
mov
sarl
mov
xchg
ret
add
dec
lahf
add
int
stc
jb
enter
lret
ljmp
mov
xchg
ret
sarb
add
stc
jb
ljmp
add
push
mov
xchg
ret
add
add
and
stc
jb
iret
enter
mov
add
add
jb
ds
inc
xor
in
incl
add
add
jne
stc
jb
add
add
mov
push
mov
xchg
ret
add
stc
jb
pop
loope
add
mov
movb
xchg
xchg
popl
add
jb
ljmp
jb
add
bound
inc
add
add
add
jb
add
add
nop
jmp
sub
jmp
add
add
add
add
cmpb
mov
add
adc
imul
incl
popf
lcall
add
call
add
mov
stc
jb
add
add
sbb
jb
iret
add
add
mov
adc
jmp
lods
in
jge,pt
inc
add
jmp
stc
jb
add
add
je
pusha
push
mov
xchg
ret
or
enter
pusha
stc
jb
add
lahf
cmp
push
jmp
cmp
loop
nop
jmp
inc
sbb
data16
add
add
stc
jb
xor
mov
push
stc
jb
add
add
inc
sbb
push
add
add
add
jb
add
sub
clc
stc
jb
add
mov
mov
xchg
ret
push
add
mov
add
add
sbb
add
dec
add
xor
nop
jmp
add
add
add
add
ret
add
je
stc
jb
add
add
nop
jmp
add
mov
add
stc
jb
add
xchg
jmp
inc
call
jmp
or
mov
push
mov
add
stc
jb
add
ljmp
push
mov
xchg
ret
add
add
add
rep
stc
jb
jge
add
jmp
popf
sub
popa
nop
jmp
add
add
sub
add
mov
add
cmp
add
mov
repnz
inc
add
or
dec
push
stc
jb
or
add
add
popf
loope
out
imul
sub
inc
add
xor
clc
mov
cltd
push
push
mov
xchg
ret
lahf
add
cmp
or
insb
inc
jb
stc
jb
add
add
mov
stc
jb
xor
add
add
mov
add
aad
add
add
stc
jb
popf
mov
add
jle
add
incl
add
cmpl
push
insl
mov
stc
jb
jmp
test
outsb
stc
jb
add
xchg
add
div
nop
jmp
mov
popw
cmpsl
add
mov
jb
jmp
mov
pop
mov
stc
jb
flds
in
add
out
rolb
and
mov
stc
jb
add
in
and
stc
jb
lret
add
jmp
fwait
mov
nop
jmp
lret
ds
add
add
jb
add
xor
push
add
mov
xchg
ret
clc
sbb
pop
jae
jb
cmpl
mov
stc
jb
add
push
or
adc
stc
jb
in
add
add
push
mov
xchg
ret
add
add
push
out
je
nop
jmp
clc
add
add
dec
outsl
popa
fs
jb
add
xor
mov
stc
jb
add
shrl
mov
mov
xor
nop
jmp
add
add
push
stc
jb
dec
add
xor
stc
jb
jge
add
loope
scas
jne
nop
jmp
cltd
add
ljmp
add
add
add
pop
or
dec
cld
stc
jb
pop
add
cmp
nop
jmp
mov
adc
sub
stc
jb
add
jmp
stc
jb
add
add
add
add
cmp
incl
add
sbb
ljmp
dec
out
incl
pop
jbe
push
mov
ljmp
add
sbbl
inc
add
add
stc
jb
pop
bound
ljmp
push
mov
xchg
ret
add
add
cmc
cmp
mov
add
add
mov
jne
mov
stc
jb
mov
mov
stc
jb
add
pop
pop
test
nop
jmp
add
add
add
cmpsb
fldl
xchg
ret
lcall
mov
nop
jmp
add
add
lret
jb
add
add
flds
add
xorb
jmp
add
push
add
jmp
flds
xchg
add
add
stc
jb
iret
bound
stc
jb
pop
iret
add
add
add
cmpl
nop
jmp
lcall
pop
jae
outsb
shl
nop
jmp
add
sbb
add
add
jb
add
add
push
pop
sub
add
incl
dec
dec
lret
mov
stc
jb
add
add
add
hlt
stc
jb
sbb
lods
xchg
cmp
jb
add
mov
add
mov
inc
add
cmp
pop
add
xchg
mov
stc
jb
add
test
add
stc
jb
add
add
rep
push
mov
xchg
ret
sub
add
sub
push
mov
xchg
ret
sbb
add
cld
std
stc
jb
add
add
rolb
or
call
jb
xor
mov
stc
jb
add
pop
mov
stc
jb
bound
lods
lret
addr16
push
mov
xchg
ret
add
ljmp
jmp
decl
iret
add
or
add
inc
xor
daa
push
mov
or
jmp
add
add
push
nop
jmp
add
mov
add
add
mov
stc
jb
jbe
mov
aas
mov
stc
jb
dec
pop
data16
pop
lods
push
push
mov
xchg
ret
sbb
add
fs
int3
ljmp
iret
sub
mov
stc
jb
add
iret
clc
out
shr
nop
jmp
rolb
sbb
add
jmp
jne
stc
jb
cs
add
rclb
roll
add
cmpsl
nop
mov
pop
push
nop
jmp
lret
add
add
add
add
and
in
add
je
push
stc
jb
add
inc
or
iret
add
add
add
jb
cmpsl
add
gs
ret
nop
jmp
dec
pop
mov
mov
nop
jmp
iret
ds
mov
mov
xchg
ret
add
sbb
lea
stc
jb
add
mov
stc
jb
mov
add
cmpsl
add
shrl
pop
nop
jmp
fxam
filds
flds
add
ds
xchg
or
mull
jb
add
mov
shrl
add
nop
jmp
add
dec
add
sub
ljmp
stc
jb
push
cmp
jg
stc
jb
subl
sahf
je
stc
jb
add
xor
mov
stc
jb
jmp
clc
movsl
cmp
jb
pop
push
mov
add
xor
adc
jmp
jae
lds
mov
stc
jb
pop
add
jmp
lret
iret
add
push
push
mov
xchg
ret
add
add
add
stc
jb
push
add
jbe
aam
dec
push
stc
jb
xor
cmp
cltd
jge
mov
stc
jb
add
mov
pop
add
stc
jb
add
add
add
stc
jb
loope
add
popa
add
jb
add
js
mov
stc
jb
add
je
stc
jb
add
rorb
inc
sub
jb
roll
add
sbb
adc
jb
add
add
fsts
adc
jb
mov
test
mov
xchg
ret
rolb
mov
stc
jb
add
lret
pop
mov
add
mov
xchg
ret
xor
sbb
sbb
mov
xchg
ret
add
inc
xor
leave
mov
stc
jb
rcl
cmp
filds
loope
xchg
cld
xor
push
mov
xchg
ret
add
sar
jb
cmp
add
add
stc
jb
add
roll
add
sub
addb
incl
add
mov
stc
jb
or
pop
add
loope
movzwl
stc
jb
dec
push
xchg
jge
pop
push
lock
out
mov
stc
jb
add
add
dec
imul
stc
jb
mov
add
testb
mov
stc
jb
dec
mov
movsl
sahf
push
nop
jmp
cmp
add
cmp
jge
nop
jmp
add
add
xchg
iret
cmp
test
jb
add
add
stc
jb
or
roll
add
movzwl
stc
jb
add
mov
call
stc
jb
add
clc
nop
jmp
add
add
call
add
add
add
jb
inc
add
lcall
test
nop
jmp
cmp
lahf
dec
add
add
add
insb
xor
push
mov
xchg
ret
clc
ljmp
iret
push
stc
jb
add
cmp
mov
jb
ds
pop
iret
add
in
daa
shll
jb
add
add
jne
nop
jmp
sub
add
loop
nop
jmp
pop
cmp
mov
push
mov
jb
or
add
mov
add
stc
jb
mov
add
mov
mov
xchg
ret
add
add
nop
jmp
add
add
add
cld
pushl
stc
jb
lods
cmp
cmp
add
test
stc
jb
add
loope
add
stc
jb
add
add
push
add
push
mov
xchg
ret
add
iret
cmp
mov
mov
xchg
ret
add
cmp
add
add
stc
jb
xchg
rolb
add
push
mov
xchg
ret
sbb
mov
push
push
mov
xchg
ret
add
add
test
inc
add
add
inc
and
nop
jmp
cmp
sar
xor
stc
jb
add
add
add
mov
add
stc
jb
loope
dec
dec
cmp
jb
rolb
dec
dec
add
add
mov
fwait
repz
dec
lret
movsl
cs
add
mov
push
mov
xchg
ret
xor
add
xor
stc
jb
add
lcall
add
or
mov
xchg
ret
add
inc
mov
rcll
in
inc
add
add
into
pop
stc
jb
add
add
push
add
fiaddl
sti
stc
jb
add
jbe
test
stc
jb
cmp
roll
sub
add
jb
add
add
add
mov
xchg
ret
add
sbb
dec
fimuls
andb
jge
add
call
stc
jb
add
add
jle
popa
add
jb
add
cmp
mov
inc
add
cs
jne
nop
jmp
filds
iret
add
pop
stc
jb
add
add
and
nop
jmp
add
pushf
rep
push
mov
xchg
ret
add
clc
in
pop
push
nop
jmp
sbb
add
pop
add
add
decl
stc
jb
add
mov
adc
stc
jb
data16
sbb
incl
dec
cmpl
or
test
adcb
or
or
subl
push
mov
xchg
ret
add
mov
inc
add
mov
nop
jmp
xchg
cmp
sbb
and
mov
incl
jge
sarb
add
inc
nop
jmp
inc
push
add
jne
nop
jmp
add
cmpsl
lea
xor
add
stc
jb
jmp
cmc
add
jne
or
nop
jmp
add
addl
sbb
jne
stc
jb
dec
clc
add
jge
mov
push
stc
jb
add
add
iret
add
cmpsb
inc
add
mov
mov
add
mov
inc
jns
popa
imul
add
add
add
add
cmp
mov
add
jmp
jmp
add
dec
xchg
stc
jb
add
iret
mov
js
jmp
jbe
jge,pt
mov
mov
sbbb
jmp
ljmp
add
add
stc
jb
add
lcall
in
stc
jb
inc
add
add
stc
jb
fxch
add
dec
dec
jbe
not
push
mov
xchg
ret
add
test
nop
jmp
mov
pop
popf
add
lods
push
mov
xchg
ret
lahf
or
add
pop
mov
stc
jb
enter
add
stc
jb
dec
add
mov
loop
push
mov
xchg
ret
xchg
cmpsl
add
add
push
push
mov
xchg
ret
mov
add
add
jmp
mov
add
mov
add
stc
jb
iret
sbb
mov
stc
jb
xchg
pop
xchg
rorb
add
sub
jb
add
mov
push
mov
xchg
ret
dec
add
mov
stos
pop
stc
jb
enter
cmpsl
add
add
pop
or
jb
bound
pop
pop
stc
jb
enter
add
test
stc
jb
add
insb
mov
stc
jb
dec
push
cmp
hlt
lods
dec
nop
jmp
mov
mov
call
nop
jmp
add
add
pop
push
stc
jb
add
add
pop
add
mov
jb
mov
dec
bound
dec
mov
stc
jb
add
add
sub
and
jb
dec
mov
jbe
sub
je
add
stc
jb
add
add
andl
mov
add
mov
xchg
ret
add
enter
jmp
incl
add
mov
ja
dec
nop
jmp
cltd
lods
add
add
stc
jb
add
add
stc
jb
add
jbe
mov
cmpb
call
enter
push
add
call
incl
hlt
cmpsb
repnz
int
test
stc
jb
pop
lods
mov
add
nop
jmp
add
add
pop
push
mov
xchg
ret
mov
mov
add
stc
jb
mov
movb
call
stc
jb
mov
mov
push
mov
xchg
ret
add
mov
sti
xor
stc
jb
add
pop
dec
add
mov
stc
jb
test
jb
popf
add
add
sbb
adc
jb
add
or
mov
mov
stc
jb
add
xchg
dec
add
stc
jb
add
add
add
lock
jb
xchg
rolb
add
cmp
scas
enter
out
repz
mov
loope
movl
fdivr
jb
add
add
in
cmp
incl
popf
test
add
pusha
push
mov
xchg
ret
add
dec
lods
inc
ret
out
pusha
nop
jmp
mov
add
add
cs
push
mov
xchg
ret
add
xchg
add
add
sbb
jb
test
lret
out
call
stc
jb
lahf
add
roll
push
stc
jb
subl
jno
add
fs
dec
nop
jmp
add
add
add
test
adc
mov
stc
jb
add
mov
lods
movsl
addb
sbb
xor
add
stc
jb
add
insl
mov
stc
jb
in
cmp
inc
pop
jb
lea
stc
jb
roll
add
dec
clc
ficoml
mov
xchg
ret
lods
sbb
mov
popa
add
jb
add
push
xor
or
inc
lock
stc
jb
add
inc
lahf
lods
mov
nop
jmp
add
xchg
cmp
mov
xchg
ret
add
mov
sar
addb
fistpll
jmp
add
or
mov
cmp
incl
add
and
stc
jb
mov
add
jb
mov
add
dec
or
orb
incl
add
add
bound
add
add
incl
add
jp
inc
adc
jb
clc
sbb
lret
add
xor
inc
add
add
sbb
add
xchg
nop
shrl
pop
add
add
add
cmp
ret
and
add
out
repnz
add
add
add
push
sub
insb
int
cwtl
aaa
cwtl
pop
js
sub
xchg
push
insl
shr
xchg
sub
fildll
xchg
pusha
add
push
outsb
popf
in
fnstsw
sub
aam
rolb
out
mov
adc
xchg
or
cmp
push
add
xchg
cmp
adc
mov
jne
push
andl
add
out
stos
fcomip
mov
addr16
mov
scas
inc
in
cs
sahf
and
xchg
mov
imul
add
push
add
jp
push
in
pop
dec
jb
ret
fmul
sub
push
push
add
lds
add
mov
insl
and
dec
scas
sub
sub
pop
cmc
or
jmp
lahf
and
insb
lds
es
ficoms
xor
jns
or
test
cs
mov
aaa
lods
and
ss
sub
and
sub
add
loope
mov
xor
sbb
inc
push
add
add
mov
mov
outsb
dec
popf
scas
inc
xor
mov
addb
rcrl
ficomps
add
std
sarl
pop
imulb
adc
pop
addb
add
xchg
mov
pop
sub
leave
repnz
ljmp
lret
jp
add
rolb
push
lods
stos
sub
jp
lea
add
dec
outsb
jns
jno
les
and
lret
cmpsl
in
mov
xor
mov
imull
jno
jb
sarl
xor
sub
aad
nop
in
cmp
lcall
and
das
in
enter
add
adc
popa
sub
in
sti
mov
xchg
scas
push
mov
addb
cltd
mov
int
add
sbb
push
mov
add
sbb
addl
test
push
and
xor
add
jb
fwait
jns
das
and
inc
add
add
cs
aam
lods
add
movb
fistps
xchg
or
sbb
adc
outsb
movsb
movl
loop
or
inc
test
fldt
inc
ss
dec
fisubrl
out
cmpsb
stos
cmp
jne
call
push
push
xor
nop
int
icebp
jg
sbb
mov
faddl
add
pop
movsl
push
in
cwtl
int3
xchg
mov
lahf
fisttps
cli
inc
add
pop
shl
mov
and
mov
sbb
xchg
sbbl
pop
gs
cmc
stc
xchg
out
mov
scas
rol
push
je
testl
jp
pop
pop
into
repnz
hlt
sub
dec
ret
aam
add
mov
in
sub
fidivl
das
test
adc
cmp
sbb
out
xlat
push
inc
add
cli
mov
jl
cmpsb
orl
jno
xlat
mov
ds
pop
xchg
sti
fistps
xchg
stos
jns
das
out
addl
pusha
add
les
push
pop
and
aam
mov
sbb
lahf
xchg
jl
add
mov
jne
aaa
pop
dec
repz
cmp
ljmp
stos
xchg
dec
repz
jl
das
sbb
mov
add
hlt
push
pop
and
vmaxsd
lret
repnz
test
xor
test
push
jnp
ret
cmp
aam
jg
fmull
push
addb
adc
inc
xchg
mov
xchg
insl
pop
pop
cmp
fcmovnb
adc
mov
addb
add
lret
repnz
rorl
xchg
dec
aaa
fdivrs
add
cmp
push
arpl
fisubrs
adc
lods
cwtl
push
push
neg
push
or
cmp
jl
add
xor
add
inc
add
mov
add
cmp
mov
sub
add
clc
inc
add
inc
add
cld
xor
aam
mov
mov
stos
loopne
jnp
dec
xor
sub
mov
hlt
cmpsl
es
fidivs
push
add
fcomps
es
or
add
xchg
lcall
dec
into
lea
inc
add
mov
push
cmp
lea
js
cs
add
dec
or
cmc
dec
push
pop
xor
xor
out
ds
mov
or
and
jle
jp
stc
jg
jg
sub
int
loop
iret
test
inc
add
fwait
bound
pop
imul
mov
or
adc
popa
imul
jp
je
mov
cmp
loopne
mov
lret
pop
cmp
jo
std
lds
mov
or
ret
stos
pop
imul
and
sbb
and
shlb
or
addl
iret
fdiv
test
rolb
add
mov
loop
je
inc
add
xor
repz
mov
loopne
cwtl
push
pop
lahf
jecxz
dec
fdivr
out
inc
dec
jmp
pop
incb
add
dec
cwtl
mov
cmpsb
inc
data16
pop
xchg
fwait
dec
icebp
iret
pop
gs
mov
nop
jg
jnp
cmp
icebp
or
pop
push
scas
clc
aam
clc
lahf
dec
and
ret
adc
jnp
rclb
add
add
and
mov
ljmp
push
cmp
mov
cmp
test
cmp
repz
jp
add
sub
mov
insl
and
pushaw
add
inc
adc
add
insl
and
int3
mov
call
sbb
sub
psrad
push
xchg
out
xlat
fdivrl
sub
push
lock
call
pop
inc
push
xor
test
xor
icebp
in
loope
jns
mov
push
add
pushf
mov
out
add
inc
jecxz
mov
lds
add
push
mov
mov
push
or
pop
sub
addr16
xchg
adc
xor
fwait
loope
inc
call
mov
cmpxchg
sbb
aas
adc
or
mov
cli
in
jo
sbb
jbe
pop
inc
add
pop
lods
jge
insl
test
repnz
pushf
push
mov
lods
lcall
mov
nop
nop
xor
add
add
add
imul
imul
test
dec
jecxz
mov
test
fmull
ds
sub
jge
jnp
addb
dec
or
fisubs
aad
dec
push
leave
inc
add
inc
mov
add
les
push
lods
or
add
push
add
jns
cmp
pop
cld
pop
testb
mov
enter
jns
inc
add
sub
adc
push
or
add
mov
mov
push
lea
inc
inc
addb
in
dec
dec
cmpsb
push
jge
add
mov
mov
dec
lcall
or
lods
popf
ret
mov
add
lods
lds
in
cmpsl
out
dec
fbstp
mov
cmpsl
inc
add
mov
ds
add
push
ret
add
mov
add
cmp
sbb
push
jnp
repnz
inc
inc
add
pusha
add
fiadds
pop
xor
ret
cmp
iret
pusha
add
cwtl
mov
and
lcall
imull
push
cmc
sub
mov
and
add
cmp
push
xchg
inc
add
in
cmp
xor
mov
inc
add
push
insl
shl
loop
stos
call
cltd
loopne
sub
shlb
fistl
adc
add
test
out
add
test
add
mov
inc
add
add
xchg
cmpsl
inc
add
or
stos
mov
lods
icebp
sub
sub
pop
inc
add
cmpsl
sahf
popa
loope
mov
cmp
add
add
mov
push
pusha
add
sbb
mov
fcoml
dec
sbb
cwtl
into
push
aad
jmp
ficoms
lcall
xchg
imul
notb
cmp
in
xchg
mov
xlat
cld
aas
add
jmp
std
or
iret
dec
out
dec
mov
cld
xchg
mov
sbb
adc
daa
dec
in
dec
lret
jp
jns
data16
ds
cmp
xchg
add
xchg
insb
lahf
mov
jb
inc
out
xor
out
filds
xchg
dec
mov
dec
loope
fisubs
add
fstpt
dec
outsb
xchg
bound
lock
stos
test
inc
add
cmp
ja
aad
dec
sub
mov
mov
pop
push
jnp
mov
lret
add
out
les
jmp
in
mov
loopne
xor
mov
cmp
add
stos
dec
pop
inc
add
jp
or
ret
pop
mov
out
inc
add
add
out
insl
decb
xchg
test
repz
data16
add
mov
mov
inc
add
iret
mov
scas
iret
jle
jmp
andl
mov
jmp
mov
das
je
pop
mov
and
xlat
out
outsl
xchg
mov
bound
mov
add
es
mull
push
jg
pop
mov
inc
aad
jne
sbb
roll
add
inc
add
aad
jae
les
scas
inc
lods
sub
push
sbb
add
dec
pop
push
inc
add
xchg
xchg
pusha
add
xor
lret
jnp
into
dec
jge
add
jb
lods
in
pusha
add
jb
or
fs
mov
add
cmpsl
mov
add
stc
pop
aas
pop
call
outsl
fidivrs
movsb
lret
dec
in
stc
in
movb
add
sbb
push
push
add
sub
and
fsubrp
repnz
xchg
mov
pop
pop
cmpsb
mov
pop
pop
mov
cmp
jmp
mov
jp
aaa
jo
jbe
imul
mov
or
dec
aaa
das
push
adc
sbb
scas
das
gs
in
pop
xchg
fisttps
rolb
test
mov
xchg
in
xchg
adc
movsb
mov
das
sub
jnp
push
push
jle
jo
jbe
int
jp
orl
lret
sub
test
inc
add
push
dec
rcrl
pop
rol
cmpsb
push
lds
jge
rorb
mov
inc
imul
xchg
mov
push
xchg
out
pop
mov
je
pop
outsl
or
scas
lahf
inc
lods
fcoml
out
sub
add
scas
mov
mov
xor
lods
push
ret
adc
mov
stos
push
xchg
xor
jmp
mov
icebp
in
jge
mov
xchg
pop
lahf
xor
testb
add
mov
add
arpl
cmpsl
stos
or
inc
adc
dec
push
fdivr
add
mov
mov
pop
jecxz
popa
adc
add
stc
test
and
sti
mov
lea
pop
push
jp
popf
pop
sahf
outsl
dec
movsb
shll
fisttps
inc
add
xchg
movsl
sub
mov
push
add
insl
pop
fnsave
push
push
sbb
roll
or
add
jmp
cmp
mov
or
hlt
dec
arpl
das
fdivrl
pop
test
jno
add
add
add
int
xchg
dec
cs
shl
insl
jnp
mov
mov
sub
pop
xlat
jae
cmp
nop
dec
pop
pop
inc
add
dec
fdivrl
push
ficoms
mov
shlb
cmp
or
jno
inc
push
add
stos
fnstcw
pop
in
shll
cld
push
jl
mov
out
out
fnstcw
add
or
fcmovbe
xor
pushf
test
not
add
add
in
add
out
add
movsl
pop
ja
dec
fisubs
imul
stc
xchg
jmp
mov
adc
imul
dec
negl
cmpsb
fdivrl
mov
mov
push
dec
scas
add
scas
addr16
mov
xchg
jns
addl
add
loope
push
mov
les
jb
clc
ljmp
pop
stos
leave
ljmp
add
cwtl
scas
out
add
gs
and
dec
data16
and
pop
mov
pop
inc
add
jae
push
out
jg
int3
add
aad
jl
mov
dec
mov
mov
mov
add
and
fadds
and
sub
dec
lret
mov
lods
inc
add
sbb
sub
cmp
fs
nop
mov
push
mov
test
push
out
clc
dec
mov
int3
dec
iret
mov
scas
add
pop
cmp
test
fidivl
outsb
rolb
inc
fcoms
xchg
sbb
ja
push
lret
adc
or
sub
test
loop
cli
mov
scas
nop
enter
ljmp
mov
jbe
mov
outsl
outsl
es
fs
mov
je
xor
mov
sbb
xorl
into
mov
dec
insl
jmp
gs
inc
in
mov
arpl
add
adc
add
je
ss
push
cli
sarb
sbb
adc
fs
jp
mov
add
nop/reserved
and
sbb
sub
repnz
xchg
sarl
cmp
mov
repz
inc
add
lods
je
negl
iret
pop
mov
mov
test
xchg
cmpsl
inc
cmpsl
into
sarb
jmp
push
pop
sbb
mov
pop
sbb
jo
mov
mov
dec
jnp
and
cld
mov
out
scas
insb
int3
mov
rorl
pushf
loope
jge
xchg
jle
push
mov
cmp
inc
jo
loope
daa
stc
or
mov
add
jle
xchg
shld
push
data16
sti
test
jnp
jg
add
mov
add
push
add
sbb
lret
stc
movsb
int
adc
movsl
ret
movb
adc
dec
jbe
add
movsl
stos
sbb
movsl
loopne
or
rol
fcmovne
mov
imul
sub
xchg
pop
or
or
cmp
jp
add
addb
pop
pop
xchg
fcoml
mov
mov
sbb
fisttps
bound
xchg
mov
pop
inc
fidivrs
and
push
lds
cs
mov
mov
ljmp
rcrb
js
lret
push
inc
xlat
popa
aaa
movb
add
das
mov
jmp
aam
test
mov
push
xor
adc
out
pop
or
mov
loopne
add
out
pop
jecxz
push
sub
out
xchg
shll
sbb
lock
iret
add
test
cmp
jp
icebp
rolb
adc
mov
or
mov
dec
mov
jl
mov
push
decb
in
fstps
dec
xor
mov
add
aas
jge
loop
xor
addb
add
rcrb
leave
push
mov
shr
sbb
push
sub
add
dec
mov
xor
and
cmp
cmp
push
pop
js
mov
push
mov
xchg
jp
inc
add
or
in
movsl
out
rorl
cmova
lods
pop
jo
jnp
xchg
dec
dec
leave
sub
add
jle
jecxz
and
jp
xchg
push
pop
out
mov
jae
add
insl
pop
pop
push
shll
in
mov
je
add
into
xchg
pusha
add
lea
add
mov
mov
hlt
jno
arpl
sub
mov
sub
push
movb
mov
pop
pop
aam
mov
or
inc
xor
inc
add
lods
pop
sub
test
sub
test
stos
movsl
pop
dec
jmp
xor
or
xchg
jl
push
clc
xchg
sub
nop
push
inc
sub
lcall
jecxz
push
repz
fistpl
sbb
cltd
enter
push
aas
adc
into
xchg
and
lods
shr
mov
pushf
ljmp
rolb
js
ret
cmp
adc
cwtl
cmp
add
lret
sub
and
icebp
sti
adc
push
outsl
dec
cs
dec
xchg
pop
cwtl
int3
xchg
cmpsl
stc
xlat
push
mov
out
jle
scas
fcoms
cmp
mov
mov
pop
xlat
push
jle
jns
add
jo
mov
or
inc
popa
sub
xchg
or
push
add
xchg
icebp
fs
add
aam
add
cmc
sbb
call
lcall
scas
pusha
add
lds
pop
mov
xor
xchg
sahf
das
sub
sbb
pop
xchg
dec
push
addb
lea
int
push
xor
add
jns
jl
ss
nop
sub
add
dec
scas
fs
cmp
add
test
add
addb
xchg
inc
pop
fstpl
mov
ss
jae
pop
shrl
call
mov
cmp
je
not
mov
testb
arpl
xchg
dec
out
ja
pop
iret
and
imul
cli
icebp
mov
imul
sub
jno
pop
xchg
out
inc
fs
xor
jecxz
pop
movsl
jo
mov
mov
notl
pop
sbb
test
repz
enter
fsubrl
mov
pusha
add
das
les
es
int
cmp
and
jge
add
add
aaa
loopne
imul
sbb
jg
mov
stc
jmp
test
inc
add
mov
jp
rclb
ljmp
adc
add
add
sub
sbb
std
xor
adc
push
push
adc
inc
add
cli
mov
ljmp
negl
cwtl
push
add
sbb
jp
pop
adc
aas
jge
jmp
movsb
je
insb
add
loop
add
dec
sub
orl
and
sub
movsb
imul
stos
lret
inc
add
xlat
pop
in
mov
scas
inc
cli
movsb
push
inc
push
push
outsl
cld
mov
add
and
jns
inc
add
mov
fs
testb
add
add
icebp
or
add
cmp
cli
or
hlt
jnp
sbb
dec
adc
daa
or
add
add
cmp
jl
hlt
fstpt
popa
pop
jbe
sub
jb
mov
pop
call
imul
mov
add
push
mov
sub
pop
fwait
cmp
mov
test
inc
mov
pop
sbb
fldenv
in
pop
lock
jge
add
jge
cmp
fcmovnu
or
in
gs
add
lea
xchg
test
xor
mov
or
and
fs
insl
es
add
rcr
add
xchg
cmp
mov
jns
addb
jle
jmp
add
data16
push
ret
fnstenv
add
jge
enter
jecxz
jae
icebp
rcr
lret
fdivl
ret
cmpsb
dec
or
add
movb
jg
add
mov
mov
dec
mov
leave
out
out
xchg
in
xor
fs
pop
pop
cmp
pop
sub
cmp
int
stc
adc
and
jns
rorb
fidivl
lds
add
push
cmp
sti
push
xchg
rolb
leave
insb
movsl
pop
out
fwait
cmpsl
pop
mov
xor
mov
stos
es
adc
jg
lcall
insl
shrb
add
loope
mov
pusha
add
aad
lods
out
in
pop
sub
inc
add
inc
add
scas
jmp
sub
sub
pop
mov
mov
adc
cli
jb
adc
dec
ja
dec
add
xchg
test
aas
mov
not
mov
cmpsl
sqrtps
movb
xchg
shl
add
out
sarb
sbb
test
jb
dec
push
scas
aam
add
or
ja
mov
adc
adc
sbb
adc
jle
int3
sub
sub
cmp
shr
sub
add
sarl
inc
add
mov
add
inc
inc
add
pop
xor
adc
pop
into
mov
mov
and
mov
int3
ljmp
pusha
add
sub
in
hlt
cli
push
xchg
add
jno
dec
rolb
addb
das
addb
nop
or
addr16
push
mov
testl
mov
test
ja
adc
mov
add
sub
or
mov
nop
pop
jo
adc
sub
paddusw
add
xor
sbb
push
ja
mov
inc
add
inc
add
add
dec
stos
stos
adc
mov
xor
pop
scas
cmp
aam
pop
mov
out
jle
int3
fbstp
adc
jmp
pusha
add
sub
icebp
mov
xchg
fsubs
mov
xor
out
into
outsl
push
repz
lods
loope
movb
test
mov
scas
loopne
xchg
cld
pop
cmp
xor
push
cmp
add
add
imul
sub
repnz
aad
int
jo
pop
cmp
add
ret
and
cmp
inc
cmp
pop
insb
movsl
sbb
inc
add
add
dec
push
add
pop
jecxz
scas
imul
sub
inc
add
negb
inc
ror
in
add
outsl
ljmp
scas
adc
enter
cltd
fwait
nop
pushf
xor
rorb
cltd
xor
mov
cmp
mov
jge
dec
stos
je
bound
out
add
daa
mov
or
add
fmull
daa
lret
js
pop
adc
and
hlt
lods
cmp
outsl
and
in
rorb
add
add
aas
sti
mov
add
leave
and
sbb
sbb
pusha
add
mov
jl
mov
mov
push
add
mov
sub
into
mov
fldcw
sbb
xor
sti
ret
add
cmp
leave
cmp
in
scas
cld
aad
add
repnz
fidivrs
inc
add
add
mov
add
mov
je
dec
cmpsl
and
add
int3
pusha
add
cmp
movsl
clc
in
nop
fsin
addb
add
int
mov
jne
arpl
js,pt
stc
xor
sub
rcll
cld
dec
push
insl
js
jmp
jo
push
push
xor
in
sub
inc
shl
lcall
aad
add
stc
mov
stos
bound
mov
mov
fcoml
add
inc
lock
fdivrs
add
std
inc
add
iret
stos
jae
leave
cmpsb
mov
push
ljmp
mov
cmp
add
push
pop
pop
es
mov
mov
sbb
aam
xlat
lret
push
cli
pop
dec
push
outsl
sbb
daa
pop
dec
adc
mov
push
sarl
pop
inc
add
push
repz
shll
add
loope
push
or
xor
jg
jmp
cs
push
test
xchg
pop
mov
pop
mov
sub
inc
pop
in
addb
add
ret
leave
fsubl
ss
fsubrs
loop
fwait
sbb
lret
scas
popf
mov
lea
xchg
inc
add
push
mov
add
cwtl
push
lods
and
lret
pop
xchg
dec
and
popa
in
xchg
enter
stos
pop
rolb
sbb
add
rclb
push
js
popa
lahf
rolb
jmp
add
fwait
xchg
popf
rcrl
cld
mov
rcll
inc
add
sbb
daa
aaa
sub
in
push
or
push
mov
add
mov
ljmp
sub
adc
jle
inc
add
stc
cli
pop
pop
dec
push
inc
add
ret
mov
mov
add
add
jg
lods
sbb
xchg
shlb
std
dec
inc
roll
add
inc
pusha
add
ljmp
pusha
add
rcr
jae
mov
ss
cld
sub
mov
dec
popf
cmp
stos
call
bound
pop
scas
mov
xchg
in
imul
arpl
es
pop
dec
dec
xchg
sub
jbe
out
add
outsb
xchg
sbb
stc
into
inc
add
faddl
add
mov
mov
xor
lods
ret
mov
rolb
movb
cmp
out
xor
add
xor
sbb
push
mov
mov
arpl
mov
jno
jbe
cmpsl
jb
ret
movsb
jne
push
ficoms
test
les
cld
sub
jmp
dec
push
add
mov
sahf
lock
mov
fwait
imul
inc
rolb
shlb
add
or
xor
mov
and
ja
xchg
sub
in
icebp
sahf
sahf
cmpsl
mov
adc
mov
cld
shl
out
mov
xor
add
sub
mov
dec
cmp
std
movb
inc
add
mov
add
xor
add
push
cld
orl
in
jb
cld
testb
cmp
cmp
sar
sub
mov
sub
loop
fiadds
rcl
cmp
fsubs
aas
ficompl
gs
mov
add
dec
sub
shrb
or
adc
addl
xor
mov
addb
in
jle
arpl
punpckldq
shll
nop
cmp
inc
push
add
scas
outsb
add
cld
sbb
mov
addr16
loop
scas
out
out
push
test
push
enter
add
lret
cmp
add
pop
sub
jg
inc
mov
adc
cld
cli
outsl
mov
ja
xchg
push
mov
mov
imul
addb
inc
push
out
fsqrt
das
nop
mov
add
cmpsl
mov
mov
lods
jl
jle
sbb
fidivrl
add
mov
fld
add
lcall
addr16
mov
and
add
movsl
les
aad
adc
fnstenv
xchg
cmp
cli
mov
and
mov
xor
inc
pop
push
jb
xchg
or
inc
add
mov
neg
or
insb
push
push
loope
xchg
mov
pop
rolb
scas
mov
sahf
inc
jb
add
popf
fadds
cmp
sub
add
aad
xor
inc
add
dec
jb
add
or
adc
addl
push
add
outsl
sti
lods
enter
adc
aaa
xchg
addb
in
cmp
aaa
cltd
mov
arpl
mov
jl
cmp
mov
cmpsb
mov
adc
int3
repnz
push
addb
mov
das
and
aas
push
and
outsl
push
addb
push
inc
add
mov
iret
scas
add
jle
jmp
and
mov
or
out
icebp
mov
shl
cmp
mov
cmp
add
inc
test
mov
jge
add
frstor
nop
mov
fisubl
jecxz
pushf
cli
icebp
and
dec
lods
mov
dec
fcompl
out
inc
loopnew
addb
js
jno
dec
inc
xchg
dec
pop
movb
stos
pop
jmp
add
movsb
jno
push
xchg
js
add
add
rcl
lret
adc
movb
aad
jecxz
aad
add
inc
add
and
lahf
inc
dec
shl
int3
sti
in
movsl
pop
repz
push
jb
mov
rolb
repz
aas
stc
movb
arpl
cld
sbb
pop
pop
mov
out
xor
pop
adc
or
or
fscale
fcoms
ret
push
test
cmpsb
push
inc
lcall
in
in
cld
and
ficoms
push
inc
icebp
dec
inc
adc
mov
rcl
sbb
inc
add
int
add
rolb
adc
push
push
and
shrb
ret
cmp
add
dec
cmp
cmp
mov
sub
and
mov
stos
push
rcrl
adc
lds
sub
sbb
xchg
push
pop
jmp
xchg
adc
stos
push
mov
xor
sbb
out
lods
or
aad
pusha
add
add
or
insl
out
add
shrb
addr16
mov
mov
add
int3
pop
sub
flds
add
jnp
add
lods
aaa
push
inc
add
out
pop
ja
add
cvtps2pi
mov
cltd
inc
stos
lods
mov
xchg
test
push
mov
stc
inc
add
js
add
sbb
push
xchg
mov
push
add
popf
mov
push
loop
add
daa
push
add
leave
test
lcall
sahf
jg
and
iret
into
push
and
fs
xchg
push
dec
fdivrp
mov
add
xor
xor
or
loope
sarl
leave
outsb
mov
insl
sub
mov
xchg
or
shlb
scas
jnp
cmpxchg
mov
sub
cld
shll
fs
adc
push
les
loop
mov
inc
add
jo
jg
pop
dec
lods
cs
dec
sub
mov
mov
adc
bound
lds
add
int
add
xor
lock
lock
in
addl
insb
push
rol
add
arpl
pop
shrb
cs
jmp
mov
pop
xchg
jle
in
sbb
call
cmpsl
adc
imull
pop
jge
cmpsb
psubd
pop
cld
ret
lds
js
data16
pop
jmp
cmp
iret
in
mov
mov
push
addr16
in
int3
out
push
jno
mov
not
cltd
and
mov
pminsw
push
out
fsubrl
popf
mov
repnz
adc
pop
push
movb
popf
or
pop
push
aas
sbb
xchg
sar
cmp
mov
add
cld
mov
cmp
jns
dec
aad
jecxz
insb
dec
scas
addr16
ret
dec
dec
pop
jne
stos
push
add
inc
add
pop
pop
inc
add
sbb
incb
ja
fidivs
and
push
push
adc
add
sub
pop
dec
addb
outsb
mov
xchg
dec
lea
stc
xchg
push
push
and
push
pop
es
inc
add
push
fistpll
adc
pop
adc
nop
jae
cmc
test
lcall
rolb
inc
add
imul
mov
mov
add
outsb
arpl
out
adc
pop
imul
mov
adc
in
pop
cmp
and
jo
xor
pop
mov
xchg
mov
cmp
lods
cmp
jbe
jb
or
sub
cmp
addb
lods
lds
adc
push
repnz
shll
aam
and
push
aad
inc
add
sub
cs
es
out
xchg
mov
push
push
enter
add
inc
dec
dec
addb
xchg
loopne
fwait
outsb
loopne
xchg
jbe
insl
lret
jl
pop
lahf
jnp
cli
ret
mov
xchg
addb
mov
addl
mov
ljmp
add
test
arpl
adc
mov
and
pop
rcll
leave
aaa
cwtl
icebp
push
stos
dec
sete
int
aam
dec
sub
ss
dec
aam
or
push
mov
lock
sbb
jge
mov
iret
lock
cmp
rcll
arpl
sub
xchg
popa
and
pop
pop
adc
out
inc
call
mov
add
mov
call
push
xor
std
nop
adc
movb
add
pop
jg
inc
add
add
add
mov
flds
mov
adc
movb
push
push
and
mov
add
or
cwtl
inc
dec
iret
rcl
aaa
roll
xlat
dec
sub
dec
dec
inc
add
lret
outsl
pop
jge
push
add
pop
stc
pop
repnz
push
sarb
jb
push
add
pop
xchg
xchg
pop
add
push
in
mov
aad
idiv
jecxz
cmp
cmp
xlat
ljmp
call
fwait
test
mov
clc
xchg
inc
add
repnz
push
add
push
mov
xor
outsl
adc
gs
dec
fwait
decl
sub
lahf
mov
outsb
test
xor
stc
movsl
sub
push
lcall
cmp
shrl
mov
sbb
test
pop
mov
add
mov
add
push
jo
std
jnp
jae
add
add
push
and
sbb
arpl
mov
add
imul
or
add
test
lret
roll
adc
es
sbb
push
add
testl
sbbl
xchg
add
push
add
add
inc
or
pusha
add
add
movsb
and
mov
jle
or
cltd
push
jo
adc
stc
mov
fidivrl
sbb
inc
add
xchg
and
sahf
add
mov
test
ret
pop
add
mov
jae
mov
adc
push
shrl
push
fidivrl
mov
and
mov
cmp
ja
add
add
lahf
ljmp
mov
shlb
ljmp
dec
icebp
call
vmovdqa
push
loop
sbb
stos
mov
inc
add
cmc
mov
in
std
sub
pop
scas
loopne
stos
dec
out
push
push
cmp
test
fstpt
inc
mov
shlb
sub
pop
mov
ds
cli
test
pop
and
adc
cmpl
xchg
add
pop
mov
xchg
adc
std
pop
adc
nop
jg
lcall
test
cmp
add
ja
int3
leave
and
cmp
test
lret
dec
in
mov
aaa
mov
sbb
scas
mov
sub
add
daa
mov
ret
jne
sub
or
push
icebp
test
ljmp
add
out
adc
andl
movb
jae
hlt
sub
inc
add
ror
lods
add
add
cs
add
cmp
push
cmp
ss
outsb
dec
jl
ljmp
and
aam
add
enter
ja
out
mov
pop
jg
imul
mov
xchg
fwait
test
cwtl
mov
fdivp
mov
loopne
fwait
out
lods
mov
pop
push
outsl
popf
cmc
mov
mov
and
mov
sti
fisttpll
arpl
fisttpl
add
mov
jbe
ja
dec
push
push
xchg
pop
dec
mov
mov
pop
pop
jne
add
xchg
mov
shrb
adc
stos
inc
add
pop
icebp
lea
sub
fwait
in
sbb
inc
add
sti
add
push
jl
inc
add
xchg
aas
pop
xchg
xchg
push
shlb
inc
pop
sub
ljmp
lds
cs
mov
push
insl
ja
mov
test
sbb
call
out
adc
push
add
pop
clc
push
jno
sbb
dec
jbe
inc
add
add
cmp
movsl
mov
rolb
repz
add
add
add
pusha
add
sbb
jle
mov
adc
shll
roll
arpl
add
pop
movsb
icebp
addb
in
pusha
add
xor
bound
and
outsb
test
mov
and
pop
adc
daa
rcll
stos
fs
xchg
pop
inc
iret
into
mov
mov
add
addr16
xchg
sub
aad
addb
add
add
fisubl
aaa
fwait
jecxz
pop
pop
lahf
inc
add
cs
jp
adc
add
adc
sub
rcrl
push
outsl
std
cmpsb
or
mov
pop
cli
cmp
add
sub
cmp
in
outsb
movsb
lods
pop
sub
in
icebp
and
in
mov
dec
adc
jbe
jnp
into
adc
out
mov
mov
push
add
push
mov
add
mov
sub
or
add
pushf
in
ret
dec
movb
scas
dec
lahf
mov
inc
aam
xchg
fwait
out
push
pop
push
inc
add
and
and
sub
cmp
mov
pop
push
jb
add
xchg
cltd
fisttpll
cltd
stos
addb
mov
movl
cmpsb
imul
lahf
pop
lret
sub
dec
mov
rclb
lods
cmpsb
pop
addb
jbe
xlat
pop
lcall
xlat
out
mov
add
pop
leave
mov
jb
loopne
xor
mov
hlt
or
add
add
jle
pop
aas
fldcw
loop
add
out
xchg
out
cmp
and
dec
push
or
mov
leave
or
and
and
pop
clc
fsts
add
movsl
scas
pop
gs
ror
imul
rorl
adc
clc
push
xchg
sub
pop
push
stos
cmp
and
sub
xchg
pop
mov
arpl
push
xchg
mov
xlat
jecxz
push
dec
mov
cmp
mov
data16
test
jmp
mov
mov
inc
add
lods
ret
gs
mov
test
bound
jne
cmp
push
test
xor
push
sub
cli
rolb
aam
inc
fucomp
mov
notb
xor
dec
jb
scas
sti
cmp
test
or
into
push
or
xchg
sbb
repnz
test
sahf
ficoml
fldl
add
leave
sub
fdivrl
push
push
and
into
ja
dec
jle
loope
jno
lds
dec
adc
or
addr16
dec
lret
pop
push
add
add
jne
fisttpl
xchg
cmc
sahf
mov
add
imul
test
in
add
add
fwait
xor
mov
mov
mov
int
add
data16
fldln2
mov
movsb
movb
inc
add
and
xchg
lods
and
adc
cmp
sub
pop
cmp
xchg
sbb
mul
daa
jge
xor
loope
or
jne
dec
mov
and
cmpsb
xchg
jno
fadds
mov
std
fcompl
cmpl
pop
rclb
dec
inc
add
pop
cmc
mov
cmpsb
std
fs
fdivl
out
test
xchg
scas
mov
fsubrl
ret
jl
out
push
add
outsb
cmpsl
fsubr
push
pop
sub
cmpsb
in
fsubrl
mov
pop
ja
mov
inc
add
pop
push
add
add
dec
adc
mov
sbb
out
add
les
mov
frstor
inc
add
filds
test
cmp
add
pop
mov
xchg
mov
out
sub
or
add
outsb
sub
cld
and
gs
addr16
mov
aas
xlat
mov
mov
inc
add
cmp
mov
xchg
icebp
mov
fs
aaa
mov
stos
mov
dec
add
das
loope
andl
cwtl
sub
mov
pop
mov
mov
mov
mov
mov
cmc
lods
ficoml
adc
sub
cmc
cmp
jbe
or
mov
rorl
in
mov
mov
add
decl
cmpsl
mov
xchg
icebp
cmp
sub
dec
ret
inc
add
outsl
mov
mov
mulb
pusha
add
in
xor
mov
xchg
jle
pop
jo
loop
cmp
je
pop
dec
xchg
xchg
or
fcmovnb
add
dec
dec
dec
dec
xchg
jl
gs
add
idivb
cmp
insl
pop
mov
add
push
imul
rorl
aam
ret
outsb
sub
lret
call
add
xor
jl
mov
arpl
cmpl
lock
mov
std
test
jno
test
add
in
cmp
stos
outsl
out
mov
add
fiaddl
sub
add
mov
fidivrl
movsl
xor
mov
add
test
ja
cs
pusha
add
jl
loopne
mov
adc
mov
daa
clc
call
xchg
popf
add
inc
add
outsb
sbb
pop
or
loope
xchg
ss
xlat
add
sbb
movb
fists
inc
add
les
insl
dec
sbb
fimuls
out
push
mov
sub
imul
push
iret
sbb
sbb
sbbl
mov
in
das
and
push
les
in
add
jae
mov
das
xlat
add
jae
add
imul
enter
popa
pop
adc
xchg
je
mov
popf
dec
sti
sbb
mov
add
cli
sbb
iret
adc
popa
js
mov
adc
push
jo
push
adc
pop
fistpll
push
push
pop
lahf
fmuls
add
xchg
mov
xchg
mov
inc
xchg
shl
jns
sbb
mov
add
popa
inc
add
outsb
int
and
mov
add
or
and
aad
inc
add
int
fsubs
into
fwait
push
loop
les
cli
mov
repz
fucomip
jo
dec
pusha
add
add
push
cmp
rcr
adc
pop
out
bound
jl
adcl
dec
dec
mov
jb
add
testl
mov
dec
add
inc
jns
mov
pop
inc
add
sti
les
jne
gs
push
add
add
pop
mov
les
ljmp
ret
mov
mov
call
jg
pop
xchg
out
mov
inc
aad
xchg
loop
and
insb
xchg
out
lods
out
lds
sbb
out
jns
xor
sub
push
out
inc
add
mov
xlat
arpl
mov
aam
cmpsb
repnz
lods
out
mov
jge
lds
add
popa
fimull
jmp
outsb
dec
sub
mov
int
test
clc
pop
pop
scas
sbb
cmpsl
sub
addr16
add
mov
jle
daa
fistpl
inc
add
push
add
aas
and
add
addl
out
imul
xchg
rolb
aam
das
lods
xor
fists
int3
add
shrb
add
ficoml
pop
out
aad
stos
mov
cwtl
lret
aaa
xchg
popf
cmpl
jle
add
sbb
aad
or
ljmp
shrl
push
bound
sahf
xor
jecxz
orl
shlb
lds
adc
sub
xor
lods
jo
es
out
mov
cmp
pop
sbb
rolb
addb
into
jbe
mov
stos
xchg
popf
sub
mov
adc
movb
inc
add
test
xlat
sub
pop
jecxz
lret
out
ds
fildl
fistl
out
cmp
stos
pop
aas
fisubl
cmp
pop
pushf
adc
inc
xor
jb
jbe
adc
loop
mov
mov
arpl
iret
lock
mov
mov
lret
mov
lods
xchg
inc
neg
addl
popf
inc
add
add
pushf
ljmp
mov
rcr
push
ret
mov
adc
mov
xchg
or
ljmp
pxor
jns
pop
scas
pop
test
enter
xchg
inc
add
into
or
xchg
dec
bound
push
dec
jbe
js
psraw
pusha
add
sub
lods
dec
popf
xchg
inc
shrb
jmp
loope
xlat
sub
mov
sub
mov
jecxz
sub
xchg
loopne
fwait
shl
cmp
shlb
cmp
sti
and
xor
inc
add
push
and
add
push
pop
pop
push
push
pop
push
mov
mov
mov
lret
adc
jg
mov
xchg
sbb
insl
sub
sub
push
gs
sub
rdtsc
pop
mov
pop
bound
jp
mov
loop
sbb
jecxz
fcmovbe
mov
sbb
push
in
xchg
or
daa
scas
xchg
inc
add
int
cmp
add
inc
or
cltd
xor
cmp
add
xlat
das
jns
insb
jp
add
ret
jmp
add
fwait
pop
push
inc
addb
ds
push
js
add
push
add
add
add
cmc
xchg
iret
jmp
sbb
xor
mov
mov
push
push
add
jmp
mov
nop
jecxz
iret
adc
sti
popa
mov
cwtl
mov
cmp
inc
setl
add
not
xor
jp
add
fnsave
dec
std
filds
fdivrl
dec
cmp
imul
lods
hlt
adc
lret
and
adc
into
outsl
jmp
sbb
aad
add
xchg
setnp
xor
addb
jno
data16
fcomi
sub
in
jp,pt
sub
sub
fldl
mov
repz
nop
lods
adc
pcmpeqw
cld
out
in
int3
pushf
lods
pop
movsl
fld
mov
jge
xchg
in
pusha
add
stos
mov
xor
jne
pop
out
in
cmpsb
mov
lea
push
call
inc
add
fimull
add
add
xchg
popa
int
leave
cmc
sar
stos
jmp
cltd
das
xor
xchg
add
cmp
adc
loop
pop
inc
xchg
xlat
mov
iret
sub
fidivl
repnz
fcoms
add
add
out
mov
or
add
cltd
xchg
neg
jnp
jb
xor
push
push
add
pop
mov
add
dec
in
mov
sub
xor
push
add
rcrb
lret
pop
lock
add
adc
pop
jge
xor
rolb
sub
sahf
enter
aam
cmp
add
int3
jp
out
ret
xchg
pop
lahf
push
mov
add
loop
mov
ljmp
jb
lret
rolb
fisubs
sbb
add
stos
test
imul
xchg
inc
pop
push
and
arpl
pop
push
add
cli
dec
addb
pop
leave
int
add
insl
cmp
aas
fdivl
sbb
movsl
xor
int
adc
jmp
adc
cli
dec
pop
rolb
movsb
aad
cmp
cmc
xchg
inc
lods
das
jp
add
add
or
mov
adcl
jb
mov
je
test
jo
in
leave
push
js
aaa
push
push
xchg
mov
add
add
out
rcrb
fsubs
jo
das
mov
jb
jns
lods
sbb
dec
loop
jb
test
mov
jl
sarl
push
int
and
pop
add
addb
loopne
mov
inc
add
scas
add
mov
and
loopne
mov
clc
adc
or
jecxz
test
mov
jae
divb
dec
mov
xor
add
arpl
cmp
ds
add
add
movb
jb
dec
pop
push
push
imul
in
jno
pusha
add
jmp
lret
push
jl
push
pop
adc
jmp
out
xchg
mov
adc
into
push
inc
out
sbb
shll
pushf
fcmovnu
inc
mov
jge
mov
pop
int3
pushf
mov
pop
stos
rcrl
jl
xchg
and
mov
ljmp
adc
push
out
xlat
imul
loop
inc
scas
out
mov
lahf
push
sub
xor
pop
pop
popl
add
ficoml
fwait
adc
dec
test
lods
fsub
add
add
test
cmp
adc
jle
in
or
add
pop
sub
xor
cmp
sbb
mov
add
fnsave
add
cmp
sub
sub
test
daa
cmp
in
in
push
outsb
ret
dec
lcall
pushf
rclb
fidivs
cmpsb
inc
adc
inc
inc
add
inc
add
mov
sbb
or
jge
mov
jo
out
idivb
movb
call
fdivrs
test
pop
push
aas
stc
jo
ret
push
adc
push
jmp
mov
sbb
cmc
dec
test
xor
xchg
push
add
or
ljmp
inc
fstl
in
lcall
loopne
sbb
add
inc
out
movaps
jle
dec
push
sar
das
sub
sub
jg
mov
pusha
add
jp
mov
add
cmpsl
hlt
mov
mov
add
outsl
dec
movsl
jns
fbstp
ss
fldenv
inc
fdivrl
add
daa
fmull
dec
in
je
sub
adc
add
stos
jmp
arpl
fs
inc
add
jnp
push
xor
inc
add
insl
incl
dec
loopne
das
sbb
xchg
mov
push
push
dec
lods
or
mov
pop
pop
jle,pn
lahf
mov
push
stc
mov
mov
fisubl
sub
lahf
shll
add
lahf
push
mov
add
test
add
jmp
pop
push
rolb
mov
out
fs
jmp
jge
in
add
das
or
movb
and
out
sbb
sub
pop
shll
add
inc
sti
imul
push
shlb
add
out
scas
sbb
jno
add
shlb
xchg
pop
rorl
and
clc
rcr
or
xchg
call
mov
jae
add
jno
aaa
push
ret
pop
push
lods
ljmp
mov
adcl
gs
jmp
adc
jne
fdiv
mov
js
cmc
std
xor
fwait
push
cmpsb
outsb
iret
pop
mov
std
inc
int
orl
into
es
mov
outsb
mov
xchg
ret
inc
push
js
sub
adc
bound
mov
test
je
mov
dec
xlat
div
mov
into
sbb
mov
insl
repz
leave
shlb
aaa
mov
and
insl
lret
add
and
xchg
adc
or
push
push
enter
outsl
jp
sbb
pop
pop
push
add
ds
lods
fldt
and
or
test
mov
movsb
std
daa
cld
jmp
out
and
cwtl
lahf
and
sbb
pop
aam
popf
test
or
daa
sahf
imul
int3
xchg
mov
xchg
and
push
sahf
mov
icebp
mov
mov
or
xorl
jae
sub
out
addb
add
inc
add
inc
push
xchg
push
lock
outsl
lea
jbe
sbb
aam
sub
and
sub
xor
jp
fnstsw
mov
pop
and
pusha
add
sub
xchg
leave
into
lret
pop
aad
xchg
hlt
ffreep
lods
jmp
cmpsl
dec
mov
cwtl
push
popf
clc
pop
add
sbb
adcl
mov
out
jge
enter
std
mov
sub
push
add
rolb
sub
cmc
add
dec
mov
cmp
sub
jge
imul
ds
enter
adc
mov
mov
add
inc
enter
ds
inc
add
dec
lods
mov
loop
test
sub
inc
loopne
mov
fwait
dec
loope
insl
and
ficoml
js
jp
lret
xor
mov
push
pop
into
and
sub
jnp
xchg
or
mov
dec
xchg
jle
int3
imul
pop
into
shlb
jb
inc
imul
dec
addb
xchg
cmpsb
sti
mov
push
inc
add
add
dec
movsl
inc
push
push
jecxz
test
mov
push
push
test
cmc
pushf
cmp
popa
hlt
pop
cmp
mov
subl
pop
and
add
arpl
add
xor
xor
mov
mov
mov
dec
movzbl
pop
inc
jmp
movsl
sub
mov
mov
fcmovb
add
or
xor
adc
loope
jbe
lock
adc
sahf
aam
xchg
das
fidivrs
xchg
pop
test
sub
add
jae
clc
ds
cmc
dec
in
mov
add
pop
pop
or
or
sub
xor
dec
xchg
mov
add
xchg
sub
add
add
dec
outsb
imul
push
mov
or
movb
mov
add
add
jno
pop
fisttps
push
ss
movsb
sbb
scas
fidivl
and
pop
adc
sub
popa
sti
scas
scas
xchg
je
or
idivb
push
addb
pop
scas
pop
je
lcall
push
and
in
mov
jmp
cld
push
imul
add
push
ljmp
mov
iret
or
jmp
scas
cwtl
xlat
scas
pop
jns
outsl
mov
mov
enter
or
fucomp
sub
popf
push
pop
jge
out
pop
adc
popf
in
out
stos
test
int
jle
jnp
dec
jg
shll
and
mov
bound
lret
pop
in
pop
add
dec
mov
jle
fs
inc
add
ret
nop
pop
push
xor
mov
clc
cmpsl
xor
fsubr
fwait
sbb
adc
add
aas
fwait
in
and
and
add
fwait
pop
sahf
sarl
pop
or
fdivrl
pop
dec
popa
incl
xchg
push
fbstp
pop
ret
lea
imul
loope
mov
bnd
icebp
xor
dec
sahf
lods
inc
add
jecxz
stos
cs
sub
cmp
add
push
pop
xchg
dec
sbb
or
mov
mov
add
mov
push
jg
cmp
cld
test
push
das
pushf
push
sbb
jmp
mov
jnp
inc
aaa
and
add
ds
sarl
mov
pop
jecxz
jo
cmp
inc
add
paddw
mov
popa
inc
add
pushf
dec
scas
xchg
xchg
dec
jns
add
test
cmpsb
adc
push
add
push
sub
add
dec
ss
mov
cwtl
xchg
cmp
mov
shrl
push
pop
xchg
sbbl
mov
fs
add
pop
ret
mov
int3
push
inc
and
cli
xor
pop
insb
ds
adc
add
add
inc
mov
sbb
sahf
lods
lcall
pop
mov
add
and
shl
outsl
xor
add
add
mov
add
test
das
ss
jecxz
mov
push
add
jno
sahf
clc
inc
pushf
and
add
mov
inc
add
mov
dec
pushf
push
lahf
push
scas
inc
mov
sub
sub
movsl
or
push
add
insl
stos
outsl
mov
pusha
add
rol
jecxz
mov
testl
adc
jne
mov
stos
pop
fs
addb
je
lret
dec
mov
xchg
mov
dec
lret
sub
dec
test
jnp
push
adc
movsb
dec
and
pop
sub
inc
mov
add
test
mov
stos
push
cli
xchg
cmp
adc
pushf
mov
pop
in
stos
sub
push
fs
sbb
mov
roll
add
iret
jnp
inc
mov
add
movsb
dec
sub
adc
sub
cmp
push
inc
sbb
pop
addb
scas
mov
add
cmc
mov
add
or
xor
ds
inc
add
add
ljmp
cltd
jbe
nop
ret
add
ret
cmpsl
adc
lret
fs
in
mov
add
cs
push
pop
ljmp
add
cmp
ficompl
pop
das
scas
pop
sbb
outsl
or
push
mov
and
pop
push
and
and
adc
lea
mov
add
mov
lcall
cmp
fsubrs
jnp
scas
jno
ret
and
mov
lret
test
in
pop
pusha
add
jle
adc
jns
fidivl
inc
and
push
jmp
aad
jecxz
fadd
add
push
add
fbld
les
xchg
or
push
jg
push
addb
xor
add
repz
pop
pop
sbb
adc
sahf
outsb
ss
xchg
imul
sarb
add
leave
jbe
xor
sbb
mov
add
arpl
cli
shll
add
lock
add
add
jo
add
mov
add
inc
add
mov
and
into
inc
and
loope
dec
mov
cmp
push
add
rol
in
xchg
lahf
addb
add
test
pop
mov
popf
pop
jb
inc
xchg
jle
mov
aam
lock
push
jmp
add
je
sub
jg
inc
inc
call
jae
xor
clc
xchg
adc
fs
inc
add
rclb
sbb
push
das
push
sbb
cmp
add
push
mov
lcall
mov
dec
mov
call
add
test
sbb
andl
dec
adc
add
shrb
scas
mov
dec
ja
dec
hlt
fcoms
add
push
add
fwait
imul
cmpsl
add
mov
mov
or
xor
lahf
push
inc
add
test
js
out
cmc
xor
aaa
mov
and
xlat
push
push
out
popa
inc
add
and
cmp
loope
push
add
jnp
cltd
les
repz
fcompl
sbb
dec
push
loope
sbb
lods
or
loope
mov
repnz
add
mov
lods
pop
int
loopne
insl
movsb
mov
or
cmp
popf
test
mov
adc
nop
pop
je
mov
or
cmpsb
xlat
sti
xor
sub
xchg
pop
fnstcw
push
mov
and
fstp
and
xlat
cmp
add
mov
sub
add
fisttps
loope
in
into
sub
pop
rolb
push
scas
mov
das
lret
push
and
stc
jae
adc
jns
fs
jg
push
add
xchg
add
mov
out
sbb
cltd
repnz
add
clc
add
add
inc
icebp
jne
shlb
imul
add
inc
mov
nop
mov
xchg
mov
push
cmp
je
mov
popa
xchg
mov
sbb
aam
adc
xor
adc
pop
stc
fstpl
xor
mov
or
in
add
xor
jg
dec
scas
lahf
xchg
mov
push
mov
and
sbb
and
rcl
fwait
addr16
add
into
sarl
scas
xchg
cmpsl
nop
sti
mov
pavgw
aas
insl
sbb
nop
arpl
xor
add
int
fiaddl
stos
lahf
dec
sub
adc
add
aas
xor
jecxz
test
hlt
inc
mov
loope
mov
dec
cltd
inc
add
and
icebp
sub
mov
popa
movb
xchg
jl
cli
stos
out
enter
or
stos
xlat
js
add
xchg
sbb
lcall
outsb
xchg
jg
fcmovu
cli
test
sub
and
mov
ljmp
scas
test
pop
and
pop
out
mov
jle
jle
push
aas
xchg
pop
pop
mov
insl
mov
dec
clc
pop
sub
mov
aad
jno
call
mov
inc
add
addb
sub
js
push
pop
xor
mov
aam
outsl
push
cmpsl
movsl
add
pusha
add
pushf
add
add
sbb
cli
fadd
mov
pushf
inc
add
fnstenv
add
inc
clc
push
mov
mov
sub
xchg
fimuls
adcl
and
test
movb
pop
ret
sbb
push
xorl
clc
iret
push
cmp
jo
push
add
add
add
cmp
shl
ja
mov
dec
and
stc
mov
sbb
mov
out
nop
movntps
les
mov
cmp
scas
hlt
inc
add
arpl
enter
xchg
sti
fcoml
push
lcall
and
inc
repz
mov
int
test
jno
and
clc
adc
xlat
pop
jmp
mov
aam
add
adc
or
mov
in
mov
jae
enter
loop
js
lods
iret
std
loope
adc
cmp
dec
cmp
arpl
mov
add
push
push
adc
xchg
cli
scas
sub
dec
mov
add
or
sub
add
mov
jb
mov
lcall
addb
dec
pop
add
jnp
sbb
sub
mov
leave
das
out
mov
out
out
cmp
or
sub
xor
outsb
int
imul
lahf
in
popl
push
mov
mov
in
push
push
jp
add
outsl
fninit
pop
push
fidivl
inc
je
pop
outsb
fstp
cld
push
xor
mov
repnz
sbb
sqrtps
mov
inc
add
fsubrl
imul
pop
imul
mov
out
not
stc
movsl
push
push
add
sbb
pop
inc
add
sub
add
mov
sbb
jecxz
jo
fabs
and
ljmp
push
ret
cli
mov
ss
int
xchg
jo
mov
hlt
mov
loop
addb
inc
add
sbb
add
cwtl
fstl
pop
movb
loop
push
repnz
xor
pop
push
inc
add
jno
sbb
dec
and
push
int
sbb
loopne
add
out
js
fstl
pop
xchg
rorl
out
lahf
or
add
sti
jno
dec
cmp
je
mov
pop
xchg
cmp
xor
std
and
addb
decb
push
jae
ret
daa
test
jle
loope
popf
pop
and
ret
cmp
add
iret
outsl
mov
fsubr
clc
or
inc
pushf
adcl
dec
push
loope
insl
mov
jae
jns
add
lcall
rorl
pusha
add
stc
lods
add
jle
lock
lcall
pushf
out
push
mov
jno
lods
stos
or
add
add
add
sbb
mov
inc
add
pop
sbb
mov
incb
scas
fdivrl
and
lahf
sub
scas
mov
mov
out
lret
jmp
aam
cmp
mov
cmp
adc
in
cmpsb
addb
push
mov
cli
adc
in
adc
ljmp
adc
fldt
pop
cli
cltd
outsl
and
add
testl
fs
int
imul
dec
inc
add
add
xchg
inc
add
lahf
fiaddl
pop
mov
mov
scas
jmp
rclb
and
pop
mov
and
mov
sub
xlat
das
mov
inc
add
jg
popf
jl
mov
xlat
ja
ret
rolb
cmp
scas
add
inc
add
mov
fiadds
into
shrl
in
inc
mov
push
inc
mov
in
pop
out
sbb
pushf
int3
hlt
inc
add
add
ja
mov
add
inc
lret
add
mov
mov
shll
rolb
add
cmp
mov
test
fdivrl
mov
ljmp
push
das
or
roll
xor
in
jge
push
add
es
cmpsl
xor
and
adc
addb
mov
int
call
dec
push
adc
repnz
dec
mov
jne
icebp
mov
xor
in
or
jle
call
and
fsub
js
shlb
sub
inc
add
shll
sbb
popa
popa
mov
mov
mov
add
arpl
jp
mov
cwtl
fildl
retw
cmp
loop
rolb
cwtl
test
das
jae
jo
leave
cli
jnp
or
jl
fimull
jge
cmp
jnp
mov
lcall
or
cmp
push
int3
jl
jg
dec
pop
aam
mov
js
push
rolb
jecxz
and
jge
add
add
test
cltd
mov
jp
mov
xchg
addb
mov
add
stc
lcall
and
xor
pop
dec
dec
lcall
and
sub
imul
popa
in
fs
xchg
cld
jge
hlt
decl
out
push
les
icebp
mov
mov
mov
adc
pextrw
lahf
test
cltd
xchg
xor
cli
cmp
fbstp
sub
jno
adc
jb
mov
xchg
rolb
mov
cmp
movb
pop
pusha
add
das
sub
lret
and
inc
add
and
iret
jns
add
int
add
xchg
jecxz
push
jge
sub
mov
or
fistl
rolb
add
mov
addb
test
addb
add
adc
adc
add
std
mov
sub
mov
ja
mov
inc
add
inc
add
push
xchg
pop
pop
dec
push
cmp
cmp
mov
ficoml
movb
int
movb
sub
addb
xor
movb
add
das
cmp
bound
sbb
mov
inc
add
add
sub
aad
mov
imul
push
mov
std
mov
add
sahf
cmp
sbb
inc
jg
push
mov
jp
inc
add
adc
ds
xchg
jmp
lret
jg,pt
popf
xchg
push
add
jmp
xor
popa
jns
add
mov
sub
in
jbe
lock
xchg
outsb
rolb
in
jnp
lret
out
add
mov
rolb
in
test
sbb
add
dec
addb
sbb
addb
pop
pushf
or
add
aam
add
bound
pop
bound
jnp
imul
loope
mov
imul
pop
dec
mov
lret
repz
movsl
int3
cmp
mov
out
push
cltd
test
cld
sbb
loope
add
mov
add
jg
shll
xlat
dec
pop
xchg
bound
mov
mov
lcall
mov
enter
push
sub
xchg
or
es
ret
or
imul
xor
sub
mov
ss
sub
xchg
sub
jecxz
lods
jo
inc
add
xchg
aas
mov
and
or
push
ret
and
icebp
stos
sub
std
ja
dec
outsb
vpsubd
sbb
fldt
cmp
ja
outsl
mov
xchg
scas
jae
in
xor
add
add
mov
jno
int3
push
add
fiadds
adc
lods
incb
jno
pop
sub
repnz
call
xchg
or
mov
pop
inc
add
dec
xchg
xchg
push
jo
add
loop
pusha
add
sbb
mov
push
add
cmp
cwtl
sub
xchg
hlt
mov
inc
add
inc
lods
sahf
lds
aad
push
scas
sbb
les
outsb
or
ljmp
das
nop
iret
test
pop
fcoms
sbb
xchg
into
mov
daa
pop
mov
int
lret
rolb
jl
pusha
add
sub
xor
andl
sub
je
cmpsb
lea
jp
lods
pop
pop
inc
add
push
xchg
bound
lods
cmc
lret
bound
jmp
cmpsl
into
out
fisubrs
lds
pop
jae
sub
cld
sahf
dec
bound
imul
cld
cwtl
pop
pop
jns
add
sbb
aad
leave
lds
in
mov
add
rorl
add
add
sti
arpl
pusha
add
xor
ljmp
js
cmpsb
jbe
jb
jg,pt
jg
dec
movb
mov
addb
cld
push
pop
insl
in
cwtl
pop
xlat
test
or
sti
push
pusha
add
les
sbb
sub
inc
add
mov
xor
jne
sbb
imul
imul
xor
dec
movb
cmp
test
sub
and
and
mov
call
subps
add
jne
sub
add
movsb
inc
add
xor
mov
cld
jg
mov
lcall
shll
cwtl
call
call
cmc
sbb
fnstcw
push
xlat
add
rolb
negl
ljmp
rorl
push
ret
push
push
jo
imul
mov
adcl
sti
icebp
stos
and
jne
jbe
jle
aaa
add
sub
xchg
clc
sub
push
std
push
aam
mov
add
movsl
pop
xchg
sub
and
mov
out
push
push
test
xor
pop
add
dec
jl
xchg
pop
pop
dec
mov
test
pushf
or
cmp
movsb
xorl
sti
bnd
imul
mov
add
mov
icebp
fldcw
pop
xor
cli
or
xchg
pop
lods
rcll
pop
dec
adc
sub
lods
in
dec
in
fs
jae
or
or
xchg
sbb
jb
push
mov
je
enter
sub
add
sub
push
push
arpl
data16
mov
out
cmp
and
mov
jae
push
add
pop
mov
adcl
and
loope
or
jno
xchg
adcl
lret
push
sbb
clc
in
mov
ja
jnp
mov
sbb
mov
adc
pop
das
mov
lods
in
addb
mov
jne
xchg
inc
add
andl
movb
les
bound
fidivrs
fcmovb
add
inc
add
add
leave
test
dec
scas
lret
out
scas
stos
jns
cmp
dec
jl
out
cwtl
pop
pop
jbe
xchg
loopne
inc
ret
mov
xchg
adc
add
jge
xchg
adc
call
outsl
rolb
add
mov
dec
test
jns
inc
add
sahf
xchg
aaa
mov
fadds
sbb
or
pop
nop
pop
inc
add
adc
mov
dec
jecxz
icebp
and
stos
enter
mov
lea
fs
add
rolb
fimull
push
adc
push
cli
out
enter
add
test
xor
add
inc
lds
add
adc
sbb
pop
arpl
dec
mov
jge
add
leave
xchg
dec
adc
dec
sbb
push
sbb
test
cmp
and
iret
dec
in
insb
and
sub
sub
dec
cmp
lret
flds
dec
fstpl
arpl
lcall
test
mov
mov
test
jmp
addb
popf
mov
jle
out
sbb
out
js
ljmp
mov
clc
xchg
xlat
pushf
inc
pop
imul
add
sbb
push
stc
fs
fs
add
jo
jae
fimull
int3
loop
daa
gs
pop
in
aam
daa
ss
or
icebp
jae
ja
lret
mov
aad
pop
mov
sub
ds
inc
out
jae
iret
cmp
xor
leave
mov
jnp
fmuls
jae
ficoml
jl
mov
inc
cmpsl
or
add
stos
enter
mov
aam
dec
lret
lods
pop
pop
out
aas
mov
pop
dec
push
pop
sub
or
mov
std
push
jbe
imul
jl
data16
sti
sbb
fucomi
xchg
inc
add
mov
push
inc
adc
in
fadd
push
adc
add
addb
fdivs
inc
add
mov
clc
and
rcll
xchg
cmp
cmp
lea
ficomps
pop
femms
xor
xor
dec
mov
jns
add
pop
mov
mov
mov
cmp
lock
in
inc
add
cli
ret
add
cs
rclb
push
pop
fisttps
fmuls
subl
rolb
loope
insl
lret
and
jecxz
loope
rcl
nop
arpl
rolb
adc
sbb
fstpt
xor
mov
cld
sbb
bound
mov
and
mov
sahf
jl
lods
mov
push
inc
mov
repnz
call
insl
pop
out
jno
jne
cmpsl
cmpsb
lods
cs
int
sti
cmp
clc
movsl
insb
rcll
mov
cltd
jle
sbb
je
fadds
sbb
addb
cli
outsb
mov
xchg
imul
fbld
js
push
fdivl
push
push
push
xchg
popa
jne
nop
je
dec
inc
jns
mov
dec
dec
das
jae
loopne
adc
mov
cmp
into
mov
and
scas
adc
outsl
pop
cmpsl
add
add
adc
and
insl
mov
notl
mov
jmp
clc
push
jno
outsb
sti
mov
les
mov
mov
adc
ds
pop
xor
push
inc
addr16
xchg
cmp
sub
add
jno
cltd
adc
sub
and
adc
aad
xchg
add
dec
xlat
jae
mov
aaa
lods
nop
jp
and
pop
pop
ljmp
nop
jnp
inc
add
bound
or
clc
arpl
add
add
push
jg
push
mov
mov
add
mov
loopne
mov
repz
stos
xor
std
loopne
add
and
jo
into
aas
xor
add
into
push
sbb
and
mov
mov
int3
push
mov
add
sbb
andl
add
cwtl
clc
bound
fnstcw
cmpsl
aam
iret
in
jbe
dec
dec
mov
sbb
xor
xchg
and
adc
inc
add
mov
sbb
mov
xor
jle
in
iret
fwait
cmp
sbb
xor
add
and
test
enter
fwait
mull
out
cmc
dec
jge
pop
mov
loope
data16
lahf
sbb
cmp
cs
and
sarb
addb
jmp
jecxz
mov
add
xor
xchg
lret
add
dec
pop
scas
cmc
cmc
lret
xchg
scas
loop
clc
movb
mov
pop
daa
mov
inc
cmp
test
in
lds
gs
jno
add
lahf
inc
add
add
pop
sbb
inc
add
xchg
pop
mov
cmpl
imul
and
add
pop
int
add
mov
jno
pop
int3
or
jg
dec
pop
aad
leave
jl
cmp
xor
out
push
pusha
add
movsl
mov
es
push
into
sbb
jmp
insl
push
mov
rcrl
lock
add
pop
pop
shll
push
insl
pop
ret
xor
inc
jae
dec
stc
mov
repz
push
pop
int3
cmp
jl
add
frstor
gs
push
ja
loopne
push
aad
aam
movsb
jno
cmp
das
adc
mov
mov
imulb
jne
cld
jle
fchs
pushf
push
inc
add
imul
mov
mov
mov
push
cmp
add
inc
add
push
sub
xchg
cmp
gs
add
mov
ds
stos
xor
and
inc
xlat
sbb
xor
mov
add
cltd
loop
ja
jle
movsb
and
fwait
or
pusha
add
jl
inc
add
push
dec
pop
mov
add
xor
cmpsb
mov
sbbl
cmp
mov
push
add
mov
lcall
jl
sub
pop
fsubl
fdiv
daa
mov
cmc
jp
mov
lahf
out
icebp
outsb
mov
mov
ss
fmull
add
dec
cld
jb
jge
add
jge
ljmp
lock
add
clc
push
mov
push
sbb
push
imul
mov
fs
js
cli
xor
dec
mov
mov
pop
fwait
ret
adc
pop
sub
es
in
adc
inc
jns
cmp
out
add
jp
in
pop
aaa
inc
add
fs
dec
std
lret
outsb
pop
jg
addb
scas
neg
psrad
lcall
icebp
cmpsb
ss
into
out
je
shl
xchg
int
cli
xlat
lods
loop
inc
dec
pop
inc
push
xchg
loope
pusha
add
cmpsl
cmp
ss
fisttpll
cmpsb
push
dec
mov
cmpsb
push
insl
stos
mov
adc
push
fwait
jmp
je
hlt
mov
mov
pop
sti
lods
push
loopne
repz
jb
jge
nop
xor
dec
push
out
pusha
add
add
jb
add
add
outsl
add
sub
inc
add
jmp
mov
pop
in
xor
and
or
cltd
aam
imul
imul
add
jo
pop
pop
sub
add
cmp
in
sbb
mov
lock
jae
mov
push
push
push
xchg
fsubrs
mov
add
shll
add
sbb
push
aas
out
addb
hlt
rolb
mov
out
sub
aam
add
xor
into
mov
lods
xchg
insb
bound
ret
mov
or
jle
bound
mov
out
fcmovbe
mov
mov
push
fldt
inc
jbe
mov
xchg
add
xor
mov
xchg
adc
jle
roll
jg
stos
mov
orl
lahf
leave
sbb
xor
jo
ret
xchg
add
or
add
out
add
addb
jmp
lret
orl
int
out
call
mov
mov
sahf
addb
inc
dec
cmp
inc
add
adc
bswap
xchg
and
push
iret
jae
sahf
pusha
add
or
or
fidivl
pop
xor
adc
jae
loopne
insl
fcoml
repnz
mov
pushf
int3
addb
xchg
push
mov
repz
jae
jnp
xor
aaa
jnp
inc
add
pop
shll
add
popa
adc
sarl
or
pop
in
scas
ficoml
jnp
mov
dec
into
jle
das
inc
add
outsb
mov
aaa
repz
jae
adc
rolb
push
sbb
sub
call
mov
mov
mov
add
data16
or
out
xchg
addb
jne
mov
lahf
xchg
dec
or
mov
ret
bound
call
mov
or
test
addb
loope
scas
push
add
idiv
inc
fs
xor
and
testl
xchg
mov
test
add
pushf
leave
lds
add
cli
mov
push
fbstp
adc
dec
xor
lahf
inc
add
and
adc
shl
dec
lahf
push
xchg
rcrb
push
adc
push
in
std
adc
addb
add
lds
pusha
add
pusha
add
sahf
adc
sub
out
nop
inc
gs
inc
add
add
add
movsl
cmp
or
mov
lahf
in
das
test
rcrl
pop
push
jbe
fdivrs
jle
test
mov
imul
and
add
sbb
and
cld
lock
and
rolb
xchg
push
push
insb
jecxz
xchg
inc
add
in
cltd
cltd
mov
dec
sbb
movsl
adc
shl
sbb
sub
add
insl
addb
rolb
inc
jecxz
test
push
addr16
jae
add
sub
fs
ja
test
pushf
lahf
scas
sub
aad
or
lock
pop
pop
jmp
mov
add
jp
imul
ucomiss
push
add
push
and
leave
push
enter
je
dec
sub
data16
mov
and
xorl
dec
cmpsl
inc
add
in
fsts
mov
addb
test
cmc
lahf
lock
addb
push
mov
adc
outsb
mov
icebp
jecxz
arpl
lret
jg
sbb
cmpl
lds
aas
inc
sbb
xchg
cmc
ss
ja
dec
fucomip
mov
test
xchg
fsubs
pop
data16
in
aad
pop
mov
add
inc
xchg
into
pop
xlat
cmp
jo
and
cmp
push
inc
bound
mov
or
jp
clc
and
inc
add
sub
stos
xor
sub
add
int3
mov
cmp
jnp
mov
jne
addr16
out
add
jb
fnstenv
push
jns
xchg
jp
push
insl
cmp
push
push
mov
and
adcl
fsts
add
jae
aam
mov
and
je
cmp
pop
jns
jl
pop
cltd
cld
jno
popl
mov
ljmp
stc
sbb
mov
sbb
inc
add
mov
pusha
add
add
nop
out
and
sbb
adc
gs
enter
cmpsb
inc
add
or
push
mov
mov
cli
ljmp
clc
inc
add
icebp
scas
ror
pop
mov
imulb
or
pusha
add
pusha
add
dec
pop
dec
jo
cmp
lock
stos
out
addr16
les
sahf
mov
pop
repnz
sub
movsl
ret
xor
add
movb
xlat
insb
loopne
mov
loop
add
mov
in
call
jnp
xchg
sub
rolb
push
in
pop
movb
jne
sub
inc
outsb
and
mov
lods
dec
ficoml
inc
add
inc
add
add
xlat
out
mov
add
mov
adc
fcmovnbe
outsb
cmpsl
inc
add
xchg
icebp
scas
ret
adc
mov
lret
jle
out
sub
mov
dec
fldl
mov
rcll
incl
and
jl
stos
lcall
xor
and
lret
add
adc
mov
mov
sub
mov
sbb
xchg
ret
fists
cmpsb
inc
pop
mov
push
xor
add
mov
add
data16
mov
add
jae
loope
pop
cltd
inc
jo
clc
rorl
jmp
push
add
fs
add
cmpsl
int3
fistps
scas
je
imul
dec
gs
add
add
dec
jae
pand
mov
int3
push
xor
or
add
imul
inc
and
pop
sub
sbb
add
jno
sub
xchg
daa
push
stos
movsl
mov
popf
push
inc
popf
inc
mov
sbb
or
fs
rorl
dec
mov
repz
movb
lcall
roll
aas
sbb
in
aaa
add
xchg
jae
clc
pop
pusha
add
int
movb
icebp
fwait
dec
cmp
es
fdivrp
stos
sbb
push
and
mov
fucom
dec
nop
mov
adc
sbb
imul
xor
cs
ret
aas
push
jne
xchg
mov
xchg
mov
mov
dec
pop
je
add
in
stc
xor
mov
pusha
add
adc
add
add
add
rcrb
pop
mov
xor
out
fisubl
loopne
in
mov
push
daa
jb
or
add
mov
lahf
sbb
std
pop
lock
pop
adc
mov
dec
adc
scas
cli
cltd
addb
fstl
out
jecxz
sbb
cmp
fwait
nop
or
aam
pop
and
ss
in
int3
cmp
mov
add
je
pop
add
push
mov
fwait
xchg
add
and
dec
inc
mov
xchg
insb
adc
mov
sbb
add
lahf
push
les
in
push
add
dec
sub
adc
dec
fcoml
ucomiss
add
pop
fsubl
fbstp
addr16
pushf
xchg
jl
add
xlat
mov
mov
addb
lods
jo
icebp
inc
add
add
xchg
notrack
popa
pop
lcall
leave
rolb
pusha
add
sub
sbb
inc
cld
clc
fsubp
arpl
repnz
or
sub
add
imul
addb
mov
pop
or
cmp
adc
or
add
icebp
and
fxch
jmp
and
jne
or
aaa
dec
dec
xchg
adc
loop
mov
add
mov
sbb
cmp
test
add
push
aad
fdivrs
add
sti
sbb
scas
js
push
inc
add
test
scas
andl
popa
inc
add
outsl
xor
pusha
add
add
mov
jb
or
jmp
jmp
test
pusha
add
addl
rcrl
xchg
loop
lahf
lcall
xchg
push
insl
pop
jecxz
shlb
xchg
arpl
movb
mov
test
add
dec
pusha
add
scas
jae
lds
sbb
jmp
add
addb
jg
inc
add
fcomps
xor
vpcomw
push
dec
cwtl
insb
or
xchg
and
and
lcall
iret
imull
rolb
add
mov
add
xlat
mov
sti
pop
inc
cmc
lcall
cld
cli
dec
adc
jb
add
mov
aas
or
jp
add
call
ljmp
test
aam
dec
fs
inc
add
mov
dec
sub
or
in
push
stc
pop
sbb
mov
sbb
div
lods
stos
repz
sbb
xchg
mov
or
in
out
lds
or
ja
add
mov
or
and
mov
and
mov
fbstp
addr16
sbb
adc
push
or
pop
gs
cmp
bound
fmul
xor
jle
je
push
iret
out
mov
outsl
sti
rolb
insl
jecxz
pop
jp
push
xchg
xor
xlat
ja
scas
std
ret
cmp
jbe
js
sti
jmp
hlt
mov
test
pop
or
inc
cmp
xchg
dec
cmp
or
add
add
pop
add
aas
xor
add
jecxz
jne
push
outsb
or
cmc
cmp
int
add
xor
and
sbb
jne
or
adc
add
sub
add
xor
andl
testb
icebp
sbb
add
mov
popf
mov
xchg
lcall
pop
aaa
sub
pop
sbb
popa
xchg
lea
dec
mov
add
test
fists
and
je
in
out
lods
inc
add
repnz
push
insb
leave
sbb
addb
cwtl
scas
dec
xchg
xor
add
movsb
lock
aaa
mov
lock
push
dec
push
jle
sbb
pop
sbb
and
lods
dec
push
call
adc
jae
pop
bound
jecxz
aam
jmp
add
movsb
sub
adc
fadds
aaa
mov
cmp
mov
lock
mov
add
data16
filds
add
mov
mov
int
fwait
mov
std
out
dec
fistps
mov
imul
js
popf
ret
cmc
cmp
jecxz
jp
iret
pop
push
js
adc
test
icebp
out
xor
or
xchg
xchg
adc
cmp
jmp
add
rolb
adc
jp
aaa
cli
push
xor
add
loope
sarl
push
add
aas
mov
xchg
sbb
mov
dec
repnz
cmp
lahf
scas
fbld
add
jg
jo
xchg
dec
cvtpi2ps
mov
add
leave
aam
add
cmc
xor
adc
aas
sbb
insb
push
mov
mov
mov
int
lock
les
mov
jle
mov
add
or
pop
scas
dec
ret
cmp
rorb
jg
pop
divl
adc
mov
add
sbb
xor
mov
pop
outsl
jg
inc
mov
xchg
int3
ljmp
mov
add
mov
mov
add
jb
push
lea
lcall
popa
add
pop
pop
sub
add
mov
cltd
push
lret
push
out
test
sbb
and
jg
pop
std
push
push
mov
add
add
push
mov
pop
xchg
je
fisubl
add
add
mov
add
xor
leave
cmp
inc
adc
jge
enter
xor
imul
jb
repz
addb
cs
loope
inc
add
add
adc
test
dec
sbb
pop
pusha
add
aad
fsubrp
adc
mov
push
mov
test
pop
jmp
movsl
sub
add
add
sbbl
cmpsb
mov
movsl
mov
es
testl
in
fisubrs
ljmp
imull
mulb
jmp
adc
stc
mov
add
add
pushf
sbb
shl
inc
add
out
mov
loope
lahf
lock
add
cltd
pop
push
repnz
les
mov
mov
mov
mov
cmpsl
outsl
dec
lods
push
pop
adc
fdivl
scas
jbe
pop
adc
add
jmp
lret
sbb
adc
mov
in
aaa
jbe
pop
es
pop
pop
or
cmp
lods
repz
add
adc
enter
mov
jmp
adc
pminsw
sbb
add
cmpsl
icebp
adc
sbb
add
shrl
fbld
add
stos
mov
rorb
add
lcall
xchg
lods
cli
lret
push
mov
adc
lcall
xor
jns
notl
and
mov
push
adc
adc
sbb
or
out
dec
sti
and
scas
mull
in
adc
fnstenv
cmp
jne
xchg
pop
jno
popf
pop
jle
mov
jp
pmaddwd
fwait
inc
or
jmp
ja
in
cmp
add
mov
mov
cs
pop
jne
jae
add
test
test
fstps
or
iret
or
xchg
xor
push
cld
testl
or
adc
add
cmp
jecxz
cmp
sub
test
jg
clc
fsubs
sbb
add
xor
in
cmp
divl
fs
mov
mov
mov
xchg
arpl
xchg
out
ja
sub
sub
push
or
add
push
add
jbe
dec
xor
fdivs
mov
add
sub
mov
add
add
sub
in
push
std
push
loopne
imul
or
das
xchg
iret
out
sub
mov
fcomps
xchg
or
mov
fdivrl
int3
insl
add
mov
cli
inc
push
enter
test
repz
outsl
mov
add
and
insl
icebp
push
hlt
out
and
fcomip
sbb
pop
mov
add
rcrl
sti
pop
sahf
pop
mov
mov
mov
add
in
adc
movsb
outsl
push
aam
das
test
lds
inc
add
sbb
ficoms
xorl
xchg
sub
xchg
daa
adc
add
dec
and
mov
mov
xchg
mov
lahf
test
sbb
add
outsb
push
sub
dec
test
mov
add
addb
and
jg
xchg
rcl
jnp
imul
pop
loope
sub
in
cwtl
sarl
jne
ds
add
inc
inc
add
add
sbb
xor
and
je
xchg
xchg
xor
add
push
popa
adc
int
jae
sarb
les
rolb
cmp
lods
aaa
xor
add
and
xchg
fbstp
dec
sbb
mov
jb
xlat
popa
stos
inc
and
repnz
jne
testl
lds
lret
push
lods
outsl
sahf
lds
pusha
add
xor
cwtl
and
cmp
mov
pop
sbb
mov
mov
jl
inc
inc
add
cwtl
pushf
cmp
xchg
aad
stos
f2xm1
lcall
mov
pop
xchg
stc
out
jp
adc
dec
inc
add
ljmp
push
xor
add
dec
push
push
adc
mov
daa
in
xchg
cwtl
add
or
daa
dec
cld
or
imulb
and
iret
shrl
outsb
jae
sub
push
sbb
cmp
add
iret
es
fistpll
pushf
xlat
test
and
mov
pusha
add
pop
dec
insl
lcall
jno
and
push
scas
xor
ljmp
fs
sbb
out
bound
push
or
mov
adc
mov
gs
movb
xlat
fidivl
push
dec
jo
mov
call
dec
sbb
sbb
std
push
jecxz
pop
ds
addb
sbb
inc
cli
sub
fimull
adc
add
fs
jo
mov
ret
push
ljmp
out
add
mov
dec
cmp
add
push
add
inc
cmp
add
add
pop
scas
inc
add
call
xor
mov
mov
xchg
jbe
add
loopne
xchg
dec
mov
add
into
pop
xchg
jo
jle
add
sbb
xor
pop
xchg
imul
out
les
adc
nop
push
add
mov
dec
sub
push
cmpl
repz
ja
or
out
add
dec
push
addb
mov
fsubs
dec
cmp
mov
add
sub
out
sbb
lds
and
es
fwait
ljmp
aaa
xor
cs
push
adc
out
mov
fstps
dec
and
pop
add
fistpll
repnz
mov
stc
pop
xchg
mov
inc
stos
aaa
fnstsw
jecxz
sti
stos
dec
scas
mov
mov
out
sbbl
insl
adc
push
jbe
loop
add
lahf
pop
shrl
shll
mov
fcmovbe
add
add
add
sahf
sbb
mov
inc
arpl
xchg
add
out
cmp
add
cmp
in
xor
mov
fs
and
fbstp
pop
inc
icebp
mov
movsl
sub
push
add
movsl
xor
loope
into
push
and
cmp
lcall
mov
cmpsb
repnz
fisttpll
fidivs
arpl
push
sbb
loop
adc
push
add
add
cmp
inc
insl
lret
fidivrl
lret
rolb
inc
add
mov
cmpsl
popf
xchg
mov
rolb
ficoml
push
loop
pop
jecxz
sbb
cmc
xor
cli
xor
push
xchg
out
filds
sub
insb
leave
xchg
pop
sbb
add
mov
add
enter
dec
mov
jnp
add
mov
in
aam
add
mov
fldl
insl
int3
repnz
sbb
xlat
sti
cmp
xchg
jle
lret
push
add
sub
into
popf
jne
cwtl
repz
push
cmp
dec
into
xor
addb
pusha
add
pop
and
imul
stos
sbb
test
add
cmp
add
dec
inc
xchg
loope
xchg
push
repz
adc
or
pop
aas
dec
cmp
push
cmp
into
fldl
cmp
ret
ljmp
mov
pop
mov
fs
cld
and
stos
and
mov
shll
rolb
nop
movsb
push
aam
ret
dec
sub
or
hlt
push
inc
add
cmp
sub
pop
and
jg
and
add
pop
add
add
jo
sbb
inc
add
cs
add
pop
pop
loop
insb
cmp
add
push
sub
xor
dec
dec
mov
pop
in
jbe
sarb
sbb
decl
cmp
or
aam
mov
jp
fwait
pop
push
cmp
add
or
dec
mov
xchg
inc
add
lcall
lcall
arpl
test
out
mov
sbb
push
outsl
and
cmp
call
stos
popf
xor
push
xchg
cmpsl
xchg
cmp
mov
cmc
push
or
jg
or
mov
outsl
mov
outsl
push
stc
inc
es
dec
movb
fwait
sbb
mov
mov
xchg
and
ret
icebp
ret
call
test
sub
inc
push
pushf
fstl
mov
push
add
add
xchg
shrl
push
inc
scas
sahf
inc
pop
mov
pusha
add
cmp
dec
pop
dec
or
lahf
mov
pushf
iret
lcall
lret
loopne
pop
ss
xor
and
jmp
adc
test
popa
mov
mov
fcoms
inc
popa
ffree
add
inc
add
in
add
pop
pop
lret
mov
das
jg
pop
sub
mov
daa
push
push
sbb
jbe
lods
ffreep
add
cwtl
jp
je
test
call
ljmp
call
push
cmpsb
inc
jecxz
hlt
les
and
add
fistps
mov
mov
loop
mov
sbb
fnstsw
jnp
xor
inc
add
jecxz
cmpsl
inc
push
mov
inc
add
arpl
neg
popf
fldcw
cmp
or
fisttpll
lea
adc
mov
mov
in
addb
das
pop
notb
shrl
push
aaa
clc
js
mov
mov
in
sbb
dec
rorl
inc
add
cmpsb
aad
or
add
int
push
jb
std
ljmp
add
push
into
and
add
and
test
dec
test
cmp
push
jo
sub
decl
cli
and
fcmovne
pop
push
sub
fstpl
xor
inc
push
add
and
xchg
inc
add
out
int3
xor
inc
add
add
pop
repnz
in
mov
addb
out
xchg
and
sbb
cmpsl
test
add
ljmp
mov
ret
xor
shrl
inc
add
pushf
cmp
std
sub
add
mov
xchg
mov
mov
ja
pop
xchg
and
xchg
or
push
or
ret
sbb
push
daa
das
and
stc
xor
inc
add
dec
mov
or
cmpsb
ret
aaa
loope
adc
mov
push
add
xchg
and
mov
push
mov
adc
outsb
stos
sbb
ret
jg
mov
push
bound
jp
push
sti
test
sub
pop
mov
mov
cmpsb
pop
inc
test
je
cmp
xlat
fstps
dec
add
adc
scas
mov
jmp
adc
cltd
xchg
dec
adc
in
fs
movb
pop
sbb
add
icebp
xor
or
push
xor
aad
add
and
stc
repnz
pop
and
mov
lahf
sti
out
jno
pusha
add
ret
inc
orl
dec
fwait
pop
test
ret
push
lods
mov
adc
sub
cmp
adc
aaa
int3
imul
lea
sbb
hlt
push
sub
add
inc
add
lods
ss
aad
cmpsl
jnp
sbb
ror
inc
jl
pop
fiaddl
pop
or
sti
aad
pop
inc
test
sbb
mov
add
push
addr16
hlt
iret
ja
popa
cli
lret
push
lcall
aaa
cmp
mov
pop
dec
imul
iret
filds
repz
cmp
push
mov
jg
or
ss
pop
subl
std
sbb
lcall
mov
testb
and
mov
xchg
cmp
cmp
test
cwtl
push
jge
mov
test
addr16
xchg
loope
sar
xor
pop
imul
jle
pop
xchg
jne
cmp
xchg
rcr
dec
mov
inc
add
gs
add
xor
bound
add
fidivrs
inc
add
add
cwtl
addr16
add
fistpll
ja
lds
xor
stc
stc
mov
hlt
xchg
adc
subl
mov
add
and
jb
and
leave
aad
mov
sbb
add
lret
cmp
add
mov
adc
fsubrl
lahf
mov
mov
cld
sub
popa
and
add
out
insl
sbb
mov
pusha
add
sub
add
outsb
sbb
mov
fdivr
push
mov
push
mov
mov
inc
jno
mov
add
imul
fistpll
fwait
and
add
jmp
call
fldl
out
or
dec
pop
sub
lcall
and
mov
or
adc
jnp
jecxz
jecxz
outsl
inc
add
pop
int3
orl
addr16
adc
lahf
push
mov
mulb
fsubrs
mov
loopne
sbb
add
repnz
add
jge
pop
dec
push
dec
stc
mov
mov
add
bound
subl
or
cmp
push
addb
test
sub
and
loopne
add
push
sbb
adc
push
out
add
cmp
jb
xchg
dec
and
sahf
sbb
das
jmp
add
int
mov
clc
incb
cwtl
pop
in
and
xlat
inc
add
sub
mov
and
out
aam
sarb
and
stos
out
lea
imul
ss
or
or
mov
sti
pop
sbb
xor
push
dec
inc
js
adc
jns
add
mov
out
add
sbb
cmp
sbb
rorb
hlt
fistl
add
cs
gs
les
jne
jmp
sti
shl
adc
and
add
out
push
clc
out
mov
adc
cld
pop
push
inc
add
mov
push
daa
mov
and
pushf
pop
inc
repz
stos
and
aam
xchg
dec
pushf
push
fwait
stc
enter
cmp
lahf
cmp
mov
hlt
aam
loopne
or
push
out
ss
inc
add
outsb
dec
add
outsb
cmp
cmpsb
ficompl
dec
xor
jo
mov
cs
lret
pop
pop
rcl
pusha
add
jae
jl
add
mov
aam
inc
mov
popa
push
or
add
mov
sub
leave
ret
shll
and
fsubrs
daa
ja
loope
pop
in
bound
stc
dec
int3
rclb
jmp
push
pop
cmp
enter
jns
fcompl
pusha
add
dec
aad
pop
xchg
dec
call
mov
test
inc
add
test
inc
mov
in
or
jmp
mov
push
mov
loop
dec
mov
dec
xchg
out
lods
sub
cmpsl
adc
xchg
fmulp
sub
xchg
push
clc
pop
jp
pop
loopne
lock
pusha
add
add
outsb
lea
or
lret
xchg
add
in
sub
sbb
std
and
add
in
loopne
mov
add
push
mov
add
daa
int
add
outsb
sub
neg
or
push
add
jae
std
or
fbstp
add
xchg
int
or
adc
pop
movsl
inc
add
push
push
notb
jnp
popl
add
mov
int3
rclb
loop
mov
pop
xor
add
in
test
test
in
insl
movb
xchg
fmuls
inc
mov
add
int
es
aas
sahf
addb
push
mov
mov
mov
push
push
fmull
movb
iret
outsl
fcmovnbe
dec
sti
iret
std
scas
jns
push
cmp
inc
add
rolb
add
je
xlat
in
repnz
cld
sbb
add
mov
jnp
sahf
push
and
aas
fdivrs
rolb
add
shll
add
or
int
push
add
pop
xor
lock
add
inc
add
xchg
sti
mov
and
jne
add
pop
cmpsb
cmp
lahf
adc
ds
fbstp
jle
ss
push
mov
das
cmpsb
or
add
mov
icebp
movsl
cltd
loop
test
xor
lret
mov
mov
jae
lods
mov
inc
add
mov
daa
aaa
pop
clc
dec
scas
movb
testb
jno
fstl
mov
and
pusha
add
pusha
add
xor
add
cmp
xor
inc
daa
lds
and
jbe
imul
xchg
stos
mov
test
stc
outsl
in
subl
mov
adc
add
pop
sahf
push
push
xchg
jge
imul
and
and
pop
jp
sub
movsl
call
xlat
out
pushf
lea
mov
inc
nop
adc
add
push
subl
inc
ss
imul
push
inc
add
push
lret
add
dec
fistpll
sbb
or
jnp
or
test
in
pop
insl
sbb
pop
in
rol
add
sub
push
adc
jmp
cmp
adc
imul
or
lret
mov
inc
add
out
ds
xchg
mov
ret
jb
in
dec
and
or
leave
mov
aam
inc
out
lcall
xor
sub
ret
mov
ret
dec
js
jae
fcmovb
add
cmp
sub
rolb
ret
in
dec
xor
sub
push
jp
clc
cmp
loop
std
stos
mov
sti
xor
sarl
mov
dec
loop
jmp
add
das
cmp
test
insb
ficompl
add
add
inc
add
mov
adc
mov
mov
sub
xchg
cmc
dec
cmpsl
push
mov
push
add
push
negb
bound
push
std
int
js
mov
outsb
sbb
sub
inc
or
sub
add
dec
mov
push
out
repz
movsl
sub
loop
add
pop
jnp
rolb
add
jno
sbb
sub
push
push
add
pop
test
cmp
push
add
sbbl
mov
adc
inc
add
add
addb
add
ja
dec
xchg
fwait
sbb
dec
adc
std
movb
notb
sbb
jecxz
adc
or
aad
and
mov
push
add
clc
sbb
pop
stos
mov
out
sub
add
xor
lret
clc
lea
cmp
xchg
add
enter
xchg
dec
push
fnstcw
sbb
imul
jp
rcll
test
mov
mov
mov
aaa
mov
push
aas
push
or
pop
testb
fdivrs
pop
mov
movsb
push
inc
divl
xchg
insb
push
add
ss
pop
addb
pop
ljmp
rolb
loop
cmc
test
sub
pop
jmp
scas
push
out
push
cmp
add
sbb
ret
cmp
imul
dec
dec
mov
cld
lret
popf
xchg
pop
inc
push
orl
adc
pop
test
xor
jge
out
out
push
add
in
jmp
jbe
inc
add
adc
push
fmulp
pop
addb
icebp
jb
ret
mov
mov
daa
rolb
mov
push
out
push
lds
test
stos
pop
adc
es
jmp
movb
mov
sbb
mov
cmc
test
inc
push
xchg
bound
lea
fsubrl
in
mov
daa
lds
cld
std
lret
mov
cmpsb
movsl
or
fs
sub
imul
mov
push
lods
adc
sbb
mov
inc
add
sbb
sub
arpl
sbb
sbb
xchg
outsl
adc
das
xchg
addb
insb
lret
addb
mov
rcrl
imul
xchg
out
cmp
test
fisttps
push
mov
mov
imul
fdivl
push
movsb
mov
lods
dec
ja
push
pushf
das
jecxz
popa
cmp
loope
xchg
mov
jp
rolb
ffreep
add
mov
leave
stos
push
dec
pop
ja
add
aas
or
mov
cmpsb
test
pushf
sbb
pop
push
out
fidivrs
push
mov
add
jnp
in
sub
add
inc
lods
pop
inc
movsl
and
cmc
adc
sbb
daa
mov
push
ljmp
pop
sbb
adc
xchg
cmc
lret
decl
add
add
inc
add
lcall
add
xchg
mov
xor
mov
cwtl
pop
xor
mov
sub
jmp
idivl
stos
aam
add
imul
cmp
pop
mov
push
lcall
inc
pop
jnp
or
in
insl
loopne
inc
sahf
dec
mov
movsb
ret
push
inc
pop
jno
lret
sub
dec
pushf
pop
sub
sahf
cmp
jbe
addl
adc
mov
or
mov
fs
jns
xchg
mov
sub
add
inc
mov
and
jo
mov
addb
iret
xor
lds
outsb
sbbl
insb
sahf
add
pop
pusha
add
into
div
pop
ficompl
pop
ljmp
xchg
inc
or
cmp
xor
or
aam
idiv
sub
sub
movl
sub
xchg
jge
xchg
popl
ret
test
out
push
add
mov
inc
loop
add
fsubrl
jmp
xor
das
roll
rolb
add
test
jns
jo
inc
add
sbb
fstpt
push
fisttpl
in
inc
inc
add
dec
rcr
push
add
sarl
jns
dec
sub
cmpl
cltd
xchg
lods
shlb
or
pop
push
aaa
xor
add
lret
pop
hlt
insl
mov
adc
sbb
out
xor
lea
in
fidivrl
mov
xchg
mov
cwtl
test
push
push
sbb
or
add
add
lods
test
fcmovbe
lcall
push
mov
mov
mov
mov
push
imulb
mov
fsubp
insb
dec
lret
ret
adc
dec
loop
push
inc
xor
mov
movsb
arpl
enter
or
loopne
icebp
testb
xor
bndstx
mov
push
pop
dec
push
push
mov
jp
xchg
or
sub
aas
pop
mov
loopne
lea
out
dec
xchg
adc
scas
and
mov
xchg
adc
in
mov
xor
mov
xor
dec
popf
pop
dec
dec
popf
pusha
add
repz
dec
mov
mov
pop
dec
mov
cmp
xor
stos
add
roll
cmp
and
push
add
xor
lcall
xor
add
mov
stos
cs
gs
mov
push
or
cmp
test
lock
cltd
je
jbe
std
mov
pushf
scas
loop
imul
inc
add
out
hlt
sub
or
cmp
in
and
jge
add
add
push
jae
insb
daa
or
stos
push
das
outsb
xchg
fs
fdivp
dec
loope
sbb
add
dec
mov
stos
loopne
push
dec
jnp
fwait
movb
lock
test
adcl
ret
pushf
lret
adc
add
add
ljmp
mov
aaa
ret
in
pop
leave
jl
inc
cli
pusha
add
imul
dec
xor
notl
testb
cmpsb
push
gs
nop
push
xlat
cmp
xchg
xor
mov
imul
sbb
jle
adc
jp
clc
insl
fs
xchg
adc
add
in
lret
add
mov
fisttpl
push
inc
imul
fists
stos
sub
pop
mov
xor
xlat
push
adc
add
loopne
call
fs
je
popf
out
push
adc
mov
xor
add
add
inc
add
test
add
xlat
scas
rcl
pop
and
je
xchg
shll
add
mov
add
imul
lock
pushf
mov
add
test
add
jmp
in
cs
cld
mov
rol
out
dec
and
sbb
aas
or
loopne
add
sahf
push
add
add
jbe
lds
sbb
fbstp
fdivrl
cmp
aas
jb
inc
add
out
xchg
mov
test
xchg
imul
mov
rolb
test
adc
xor
sahf
sub
ja
and
divb
adc
in
repnz
arpl
add
jnp
mov
in
sbb
ljmp
out
push
movsb
jns
push
jecxz
cmp
xchg
push
hlt
xor
sub
sbb
add
je
data16
jl
movsb
loop
addb
push
insb
xlat
aad
nop
mov
das
inc
add
jle
pop
adc
imul
fsubr
push
cmp
or
rcr
or
rcrl
ja
cmp
fwait
xchg
shll
mov
aaa
dec
mov
add
dec
jmp
pop
repnz
clc
bound
add
sub
jmp
cmp
cmpsl
out
dec
loop
stc
fstpl
xchg
std
addr16
cmp
pop
mov
aas
je
enter
mov
aam
jge
push
rolb
push
add
addb
loope
adc
sub
iret
jge
jl
add
frstor
adc
adc
push
sub
jns
push
jb
icebp
enter
push
mov
inc
sbb
mov
jne
cmp
xchg
mov
add
inc
out
add
jmp
ret
lret
out
jno
addb
mov
add
push
fisubrl
add
js
fldenv
addb
inc
add
inc
movl
dec
stc
lcall
mov
pop
test
pop
hlt
pop
mov
push
add
sbb
cmpsb
mov
add
and
dec
addb
add
fsubs
jl
mov
jb
aad
hlt
fldl
cli
movsl
xchg
repnz
xor
lret
addb
inc
add
push
push
dec
cmc
jmp
out
test
scas
sbb
xlat
mull
pop
mov
adc
shll
add
cmp
cmp
rolb
pushf
sub
outsl
filds
sbb
mov
adcl
cmpsl
push
out
mov
pop
int3
sti
cmpsb
push
push
movb
xor
sub
push
or
pop
pop
xor
enter
push
add
push
mov
jmp
cltd
jmp
movsb
ret
cmpsl
jmp
inc
sbb
arpl
cmp
dec
ljmp
jg
movb
add
push
movsb
xlat
shr
jmp
fsubp
adcl
rorb
or
and
pop
aas
dec
pusha
add
dec
jp
add
and
fstpt
rcrl
cmp
cli
in
aam
cmp
dec
add
add
xchg
dec
sbb
cmovbe
lcall
gs
mov
fisubl
inc
fs
pop
dec
adc
and
in
mov
mov
data16
cmp
mov
fwait
popa
jnp
add
aas
inc
add
movsb
fs
test
push
mov
ret
add
cli
scas
movsl
add
dec
push
js
xor
push
cli
repz
push
jl
into
loop
cld
ret
lret
xchg
cmp
push
outsb
add
rcrb
push
in
lods
enter
and
rorl
add
add
xchg
imul
sbb
pop
sub
add
cmpsl
std
imul
xchg
ljmp
mov
add
dec
pushf
dec
cmp
and
in
xchg
cltd
pop
js
cld
in
in
xor
add
push
mov
out
scas
lcall
fucomp
scas
jmp
add
dec
mov
jmp
xor
mov
das
scas
scas
and
push
pop
lods
hlt
movsl
sub
add
and
xchg
push
push
add
add
popf
jne
dec
push
xor
add
jmp
push
xor
mov
das
jge
out
aam
add
add
out
adc
imul
imul
arpl
add
gs
add
loopne
push
jbe
inc
es
test
inc
les
pop
faddl
jns
xchg
lods
adc
loopne
daa
aaa
addb
ret
xchg
mov
cs
mov
imul
scas
jmp
pop
test
adc
inc
add
xor
sbb
inc
dec
adc
ja
das
or
mov
fnstenv
nop
daa
or
pop
mov
prefetch
or
adc
adc
daa
pop
xor
add
jge
loope
nop
nop
push
popa
mov
and
push
mov
add
loop
lahf
jg,pn
cli
mov
jmp
fsubs
push
pmaxsw
xchg
cmp
or
sub
jmp
cmpsb
mov
mov
test
or
sbb
lahf
jecxz
outsl
stos
call
xchg
arpl
ret
mov
addb
sti
loop
rcll
cmp
call
xor
and
cltd
loop
xchg
ss
add
clc
mov
mov
push
pop
rclb
xor
cltd
mov
pop
mov
inc
add
xlat
incb
in
aas
in
adc
in
adc
popa
push
sbb
add
pop
jno
in
dec
dec
push
dec
adcl
and
sub
fbld
add
jle
mov
movsb
jge
lret
popa
mov
in
add
stc
sti
dec
fstpt
push
add
jecxz
arpl
dec
stos
stc
add
adc
adc
cld
inc
rolb
mov
dec
add
inc
cmpl
lahf
push
rorb
ror
xor
in
js
orl
roll
jge
sbb
lret
inc
add
cwtl
mov
add
iret
mov
fistpl
cwtl
and
sbb
add
add
mov
loope
pop
add
jl
das
pushl
sub
mov
or
cld
push
inc
add
mov
lcall
jecxz
arpl
mov
add
mov
adc
adc
lea
cs
imulb
xor
scas
iret
push
mov
pusha
add
hlt
xchg
fiaddl
sbb
xchg
mov
pop
xor
add
mov
add
xchg
fdiv
pusha
add
inc
add
in
mov
dec
scas
mov
out
inc
stos
or
pop
xor
pop
rcll
mov
add
dec
std
mov
test
sbb
fcompl
add
xchg
mov
sbb
jmp
lods
rcll
fsts
add
arpl
lds
push
pop
iret
int
mov
add
inc
pop
mull
sub
mov
pop
mov
test
out
inc
add
sti
and
ja
xor
sub
add
jb
jp
pop
xor
mov
dec
sarl
inc
add
imul
jmp
out
stc
sub
enter
lret
cmpsl
jecxz
sub
mov
and
inc
mov
std
test
add
add
hlt
rclb
xchg
movsl
jp
dec
xchg
scas
shll
dec
jg
insl
cwtl
inc
fdivl
xor
lods
dec
cmp
push
rolb
andl
sub
add
or
jp
dec
sti
mov
xchg
fisubrs
lcall
cmp
leave
inc
outsl
pop
lds
addr16
adc
std
icebp
dec
xor
js
inc
xor
cmp
jns
cld
cli
inc
loope
iret
dec
rcll
and
adc
pop
outsb
inc
xchg
adc
or
fnstcw
add
repz
push
mov
mov
ljmp
xchg
push
add
mov
add
mov
add
daa
mov
into
and
lds
and
gs
push
sub
add
mov
mov
loopne
imul
je
dec
push
inc
add
pop
dec
push
cs
arpl
lret
outsl
push
push
jnp
jmp
or
testl
dec
mov
stc
sub
mov
gs
popf
test
dec
cmc
mov
stos
and
sub
cmp
adc
add
insb
mov
xor
dec
hlt
addr16
inc
add
add
sti
push
mov
in
in
cmp
cmp
add
cmp
shlb
faddl
mov
dec
xchg
negb
dec
test
jo
cmc
lret
add
or
and
fcoms
aam
bound
lds
cmp
lret
je
das
out
mov
lods
aam
ud0
mov
nop
or
test
jns
xor
cmp
xor
add
in
adc
stos
push
sti
daa
dec
xchg
sti
js
mov
add
aas
ret
stos
or
xchg
jnp
fidivrl
mov
mov
add
push
cwtl
adc
gs
xor
mov
aaa
scas
fsubrl
push
add
cmp
xlat
movb
push
mov
xor
xchg
movsb
mov
add
add
roll
add
incl
dec
mov
add
fstpl
jp
and
sbb
outsb
jne
les
xchg
mov
ret
add
addb
inc
add
rcll
push
xor
pop
pop
mov
mov
or
add
mov
inc
add
sub
pop
xchg
push
out
addr16
push
xchg
bound
inc
movsl
gs
lahf
das
ret
xchg
mov
hlt
lret
in
xchg
mov
sar
addb
cwtl
cmc
out
inc
sub
sub
les
pop
push
out
pop
ss
mov
push
xchg
push
int
addb
mov
mov
xor
stos
shll
popf
jmp
add
fsubrl
std
mov
lret
inc
add
xchg
mov
push
dec
cmpsb
enter
mov
mov
cltd
mov
and
mov
sub
add
rorb
repz
rolb
cmp
mov
bound
in
test
gs
test
add
add
inc
sub
roll
enter
arpl
sub
in
ljmp
cmpsb
shr
fsubrp
sub
sub
add
add
xor
jp
test
xchg
mov
and
mov
mov
outsb
jle
inc
je
dec
cli
daa
test
loope
adc
and
fsubrs
add
