imulb
hlt
add
sbb
add
push
and
mov
xor
dec
rep
in
jne
fdivrl
fisubrs
outsl
jl
int3
adc
addr16
push
add
leave
ret
push
dec
mov
rolb
lcall
ret
push
add
add
out
adc
mov
repz
add
outsl
fisubrs
add
ljmp
add
cs
les
pop
clc
inc
add
inc
add
add
adc
addb
mov
or
nop
add
and
out
inc
jle
nop
add
addb
cmp
jle
push
repz
sbb
in
shll
sub
add
mov
add
ja
add
add
aaa
mov
push
add
push
add
gs
clc
jnp
add
je
movsl
out
inc
xor
xlat
ret
jle
add
xor
jno
popf
adc
fcomps
mov
lret
or
stc
push
add
mov
add
ret
add
ja
je
das
cltd
or
add
dec
movsb
add
lahf
fisttpl
inc
add
icebp
jle
xor
push
add
dec
out
int3
jmp
add
pop
fwait
sbb
add
xor
data16
inc
mov
add
repnz
jmp
dec
rcll
inc
push
add
xor
lret
outsl
sub
add
and
call
add
js
xchg
jl
fndisi(8087
jg
popf
fcompl
add
xchg
cmpsl
std
and
mov
aaa
jno
add
aaa
scas
sbb
aas
testb
dec
dec
jae
cmc
in
in
cmc
pushf
scas
xchg
inc
clc
les
lds
sub
mov
sbb
adc
rolb
int
mov
in
add
mov
add
les
or
mov
cmp
add
add
jns
add
add
and
push
jg
lcall
adc
jge
je
lods
mov
add
icebp
scas
fwait
jle
add
add
xchg
in
mov
shrl
xchg
add
jg
xchg
mov
lret
add
idivl
add
jb
push
ret
rorl
add
aad
add
inc
movsb
add
addr16
lret
mov
add
add
rcrl
push
add
inc
mov
add
ret
js
repnz
add
mov
and
in
mov
pop
jnp
jnp
cli
inc
add
mov
jae
ds
mov
movb
push
add
lods
push
add
loope
ret
pusha
add
sahf
sbb
js
ret
pop
movb
testl
jae
pop
and
or
fwait
jmp
pop
rolb
jmp
push
add
add
mov
jbe
fisttpl
add
sub
testb
push
add
add
mov
lahf
loop
dec
cmp
enter
std
mov
test
les
adc
ja
lods
pop
pop
scas
in
fs
add
mov
aas
cmp
cli
test
pop
or
sti
inc
mov
xor
dec
mov
addb
add
dec
and
xlat
int
add
scas
push
leave
lock
mov
adcl
out
xorl
jb
sbb
and
mov
add
jmp
push
aaa
lahf
cmp
mov
sbb
lahf
js
inc
add
add
call
or
std
add
xor
sub
add
int3
mov
sbb
nop
add
lahf
dec
pop
xchg
movsl
int3
push
jns
or
xor
mov
testl
adc
push
add
repz
lea
sahf
pop
and
and
outsb
xchg
cmpsl
les
aaa
push
add
add
rcll
mov
imul
add
add
mov
inc
add
push
add
cmp
inc
add
xchg
add
mov
mov
add
mov
push
jle,pn
push
dec
fwait
sub
mov
in
jmp
in
add
ret
push
mov
imul
mov
test
dec
xlat
mov
add
fistps
add
add
icebp
data16
mov
mov
or
or
or
dec
and
mov
lods
and
mov
add
fidivrs
sbb
lret
dec
xchg
inc
mov
or
add
cmp
add
push
add
sub
add
add
xor
adc
push
add
jae
mov
fcoml
cmp
mov
cld
add
mov
push
and
lock
insl
mov
movb
clc
sub
and
jae
aam
adc
add
mov
cwtl
lcall
add
pop
out
mov
sbb
add
add
cli
or
push
add
add
add
mov
ds
mov
jo
test
mov
into
add
sub
pop
js
add
sbb
add
mov
out
jnp
icebp
mov
add
icebp
stos
cmp
rolb
xor
sbb
jecxz
mov
and
popa
rolb
daa
mov
fildl
add
mov
int
iret
lea
jg
add
or
add
add
sahf
ja
add
add
fwait
xchg
add
mov
movb
mov
add
iret
xor
add
add
pop
lods
add
test
add
insl
xor
jae
cwtl
jl,pt
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
sub
add
call
cltd
xchg
out
xor
cmc
cmp
cmp
pushf
iret
outsl
xlat
jno
and
test
or
mov
cmp
subl
jmp
pop
js
add
lock
inc
dec
xor
insb
pop
add
repz
repnz
and
mov
add
xor
inc
xor
scas
scas
rolb
jno
xchg
stos
and
mov
inc
add
addb
dec
cld
imul
add
add
iret
and
or
ficompl
add
ret
or
sarl
cmpsl
mov
push
cmpsb
add
inc
add
add
and
mov
add
add
cmpl
add
add
insb
in
les
or
mov
clc
push
addb
cld
lea
loopne
in
inc
in
jnp
add
aaa
xor
add
or
xlat
lods
jae
fisttps
adc
fcompl
adc
mov
cli
test
add
jg
add
aaa
dec
xchg
add
jg
fistps
outsb
sbb
cs
dec
imul
xor
aad
rcll
das
cld
mov
and
xor
mov
add
add
jp
aaa
gs
sti
pop
mov
ds
add
mov
cmpsl
xchg
add
and
dec
push
mov
add
add
jno
add
xchg
add
add
jp
mov
lcall
push
clc
arpl
mov
add
rolb
jp
stos
repnz
add
into
out
outsb
lahf
and
xchg
ja
add
adc
add
mov
pop
js
add
mov
stc
push
add
cwtl
jo
into
jmp
test
jb
lret
mov
xchg
lods
and
mov
pop
pop
xchg
lahf
cmpsl
cmpsb
add
mov
les
jp
add
sub
cld
sti
cmp
jp
add
leave
jmp
jmp
push
outsb
mov
sbb
sbb
clc
mov
jns
add
or
mov
add
std
mov
mov
cltd
insb
stc
cld
mov
in
in
cmp
add
push
imul
mov
pop
inc
add
test
sub
shl
add
jl
add
add
cmpsb
add
adc
push
imul
cmp
add
jmp
push
lods
mov
add
dec
lds
in
dec
enter
add
test
into
mov
mov
fsts
jno
add
add
add
and
pop
pop
mov
push
mov
xor
les
fists
mov
or
out
cld
push
push
add
add
mov
jne
push
fidivs
mov
bsf
add
fs
push
add
mov
add
jle,pn
add
dec
push
icebp
xor
sub
mov
aas
lds
xchg
xchg
lods
inc
add
ret
pop
icebp
scas
pop
push
add
movb
xchg
add
add
sub
mov
incl
lret
mov
inc
add
jp
push
dec
add
mov
je
test
and
jne
jg
sub
inc
fdivrl
xchg
sub
aaa
xor
aas
daa
repnz
push
inc
leave
push
xchg
dec
xlat
pop
mov
movsl
jle
or
add
or
jno
lock
add
add
mov
movb
add
les
aaa
fmulp
in
inc
add
add
out
push
stos
dec
je
inc
add
add
xor
out
xchg
cmc
xor
daa
inc
add
mov
cmp
add
mov
dec
mov
mov
jmp
sahf
rorl
pop
jne
cmp
ja
add
icebp
push
add
xchg
sbb
add
add
inc
add
in
aam
xchg
arpl
stc
jg
addb
jl
lock
add
push
add
add
adc
repnz
add
cmc
jo
adc
iret
aam
cld
lock
mov
mov
gs
repz
mov
sahf
xor
cmovge
call
jge
add
pop
outsb
jb
sub
add
add
mov
add
push
mov
arpl
cs
popa
sbb
cld
inc
sysenter
add
dec
mov
js
add
mov
mov
jnp
iret
push
add
inc
push
add
out
or
add
incl
mov
add
xor
sbb
jecxz
jb
dec
imul
jb
addb
add
in
loope
pop
push
pop
popf
or
stos
call
cmpsl
ja
stos
addb
adc
jl
add
inc
lret
and
mov
bound
mov
push
inc
add
xchg
add
dec
or
and
mov
cltd
mov
mov
scas
pop
push
add
add
add
pop
add
dec
mov
in
addb
dec
cli
cmp
add
add
or
adc
ret
ffreep
clc
push
addb
add
xchg
or
inc
add
fsubr
xchg
xor
xchg
push
push
add
mov
jne
xchg
dec
mov
addb
push
add
add
mov
imul
pop
and
sti
outsl
test
add
nop
add
movsl
movsb
add
pop
aad
mov
add
repnz
inc
jg
out
pop
inc
add
or
and
mov
sub
movsb
add
add
push
mov
lods
xor
mov
je
ds
js
add
add
icebp
pop
push
add
add
add
add
pop
dec
add
add
in
add
add
mov
movb
popa
nop
add
das
cmc
insl
sbb
fistpll
ljmp
fdivrl
add
ret
shrl
stc
mov
jmp
add
mov
movsb
add
add
add
push
jne
add
dec
movsl
push
add
add
add
jo
cwtl
mov
test
mov
add
jmp
fimull
fwait
insb
rolb
pop
adc
sub
lcall
xchg
add
rcrl
add
inc
add
add
add
mov
loopne
ret
and
adc
xor
add
push
inc
push
jnp
pushf
sbb
jb
mov
add
add
out
xchg
mov
fdivrl
or
xor
loop
sti
mov
rolb
adc
sbb
lahf
jo
int
jecxz
mov
xchg
adc
jb
inc
add
je
scas
enter
xchg
add
lret
mov
add
subl
mov
cmp
dec
testb
add
add
mov
push
and
mov
das
in
jbe
mov
bts
xchg
into
in
add
add
add
xor
add
xor
add
sub
lea
add
inc
out
gs
add
mov
add
cmp
add
mov
mov
add
sahf
mov
cmc
cld
mov
dec
or
rorl
mov
add
mov
lock
out
inc
ret
mov
repz
lcall
cs
jnp
out
testl
xchg
lea
movb
and
rolb
insb
xor
sub
sbb
add
ficoms
sub
add
or
cmp
into
stc
adc
add
clc
add
cli
fstpt
and
mov
dec
add
ds
dec
stos
lahf
inc
add
aad
add
test
add
add
ds
or
add
pop
aam
or
add
push
add
cmp
or
mov
aas
lahf
sbb
test
jge
cmp
add
add
add
inc
cmp
add
clc
push
test
daa
add
add
clc
mov
push
add
mov
add
xchg
imul
add
and
add
mov
popf
fildl
cmp
or
nop
add
lret
xor
push
add
mov
subl
add
inc
add
sti
test
jl
mov
or
cmp
mov
xchg
add
add
add
imul
add
or
sbb
repnz
add
out
je
mov
push
add
add
ret
lahf
ja
add
pop
adc
push
mov
add
xchg
adc
pop
jmp
jle
add
int
mov
add
notl
rolb
push
add
add
xlat
mov
in
xor
xchg
loop
adc
add
mov
add
cmp
jg
xchg
add
loope
jne
test
add
lret
stos
les
in
and
mov
popa
aaa
loop
xchg
test
and
mov
add
imul
in
jne
inc
add
mov
test
out
add
add
pop
lods
loop
test
mov
add
mov
sbb
sub
loopne
filds
xchg
js
add
jl
adc
loopne
mov
add
mov
call
out
out
pop
fsubrs
dec
pushf
rolb
jns
les
dec
pop
mov
add
leave
pop
adc
xchg
sbb
imul
jecxz
add
jmp
addr16
adc
push
add
test
fucomip
int
in
lods
fdivrl
shrl
inc
push
add
ret
or
mov
add
addr16
in
add
dec
repnz
pop
addl
add
add
loopne
nop
add
movsl
js
popf
je
subl
fldt
push
jge
addl
add
fsubr
aas
xlat
scas
xor
daa
push
cld
scas
inc
add
add
popf
adc
add
or
mov
repnz
sti
cs
fcoms
ret
mov
add
daa
nop
add
ja
lret
or
add
loope
add
push
mov
add
xor
inc
daa
xchg
hlt
add
push
add
xchg
rcl
hlt
add
push
dec
push
add
mov
pop
push
add
fisubl
jge
ja
ret
and
mov
mov
push
add
enter
adc
add
inc
add
mov
add
in
or
add
stos
adc
add
call
push
inc
scas
mov
add
add
scas
addb
pop
out
and
inc
add
jns
add
and
push
add
add
xchg
add
dec
or
dec
je
and
mov
mov
add
cmpsl
xor
jle
jae
mov
mov
scas
xchg
add
xchg
add
push
addr16
stos
in
add
add
aad
icebp
jecxz
xor
data16
add
testb
mov
add
add
out
inc
sti
outsl
push
add
mov
add
shl
movsl
out
testl
jle
add
repnz
adc
jge
or
and
mov
push
pop
jle
rolb
mov
aas
mov
jno
jge
add
icebp
aas
rolb
ds
aad
loope
add
mov
add
add
push
jne
jge
sahf
call
mov
or
dec
in
aas
cmp
add
loopne
dec
mov
aam
ja
dec
cmpsl
xor
mov
notl
add
mov
add
adc
add
aaa
or
xor
mov
cli
popf
and
mov
add
rolb
add
or
push
add
add
cmp
mov
inc
addr16
xorl
add
or
mov
repz
add
repnz
sti
fwait
mov
stos
mov
adcl
mov
pop
test
rcll
add
ljmp
loope
lods
sub
sahf
jo
stos
fnsave
lret
repnz
dec
addb
mov
sub
add
popf
fwait
out
imul
frstor
mov
pop
icebp
stc
mov
and
add
add
fwait
std
jg
add
add
or
inc
add
add
daa
adc
add
add
jle
add
push
add
sub
add
mov
mov
nop
add
add
call
rolb
rolb
mov
aaa
movb
out
lods
inc
add
add
fdivr
dec
stos
stos
cmc
mov
or
add
rol
add
nop
add
add
add
rolb
in
mov
adcl
xchg
add
jns
cmp
add
sti
or
pop
xor
rolb
ret
jmp
testb
pusha
add
add
aas
sub
sub
add
add
xlat
mov
stos
cmp
lcall
movl
cmp
cmpsb
add
xor
mov
stos
fwait
push
add
aas
inc
and
sub
xchg
add
add
inc
add
mov
cmp
les
stos
push
add
add
jg
rolb
cltd
roll
mov
pop
rolb
pushf
mov
add
ljmp
add
or
push
add
cmpsb
add
cmp
mov
outsl
testb
mov
xlat
adc
fldt
add
js
add
mov
or
add
push
sub
adc
les
inc
add
rorl
cmp
add
insl
outsb
jb
cli
jb
test
femms
test
hlt
add
cmpsl
jecxz
adc
mov
add
dec
test
push
adc
pop
mov
fstpt
sbb
mov
fstpt
shll
mov
add
add
add
lea
add
ja
add
add
mov
add
mov
jle
mov
add
fisttpl
dec
add
rolb
add
or
loopne
dec
sbb
in
mov
xchg
add
add
daa
sub
les
add
pop
mov
add
adc
stos
mov
mov
ja
add
ret
xchg
out
ret
add
fidivrs
inc
xchg
push
add
inc
add
stos
add
shr
mov
dec
inc
add
mov
insl
xor
loope
add
push
rcll
inc
add
hlt
add
push
add
add
add
aaa
ljmp
add
cmp
xor
and
xchg
add
push
add
clc
pop
jp,pn
dec
leave
aas
das
in
outsb
mov
or
cmp
add
out
mov
fmuls
xor
dec
jp
mov
fwait
cmp
mov
add
add
test
inc
jl
ret
xor
sbb
or
ficoms
add
fdivl
add
jnp
xchg
add
ss
sub
xchg
add
add
adc
sub
dec
in
add
cltd
cmp
sub
add
sub
push
adc
adc
cmpsl
cmp
dec
cld
mov
test
add
mov
test
pop
jnp
add
mov
sahf
pop
data16
lret
les
pop
int3
jp
add
mull
jnp,pn
fwait
xlat
push
add
mov
add
fsubr
inc
pop
push
xor
add
out
dec
stos
pop
ret
sub
cmp
xchg
adc
mov
add
fdiv
add
fmuls
jne
mov
stc
push
jns
xchg
add
int
lcall
mov
addb
pop
ret
pop
push
add
add
cmpl
add
sbb
add
cmp
add
add
sar
lret
rolb
mov
xchg
mov
add
xor
or
daa
pop
xchg
push
dec
push
add
add
mov
es
jecxz
mov
les
ret
push
mov
adc
rolb
cmp
push
add
cmpsb
add
xor
inc
mov
insb
inc
add
je
inc
std
inc
add
hlt
add
cmpsl
pextrw
sbb
out
popf
leave
jg
mov
push
push
stos
push
repz
jb
mov
cltd
add
or
push
dec
dec
fisttpll
lods
ret
insb
and
mov
lds
sbb
mov
jno
jno
clc
sbb
bswap
leave
add
test
jl
add
add
jle
mov
filds
test
addb
add
xor
stos
xor
jecxz
rolb
das
sub
lcall
dec
inc
add
add
add
mov
xor
xorps
xor
rolb
pusha
add
pop
mov
mov
pop
mov
add
xchg
add
add
xor
add
repz
enter
inc
add
jmp
jbe
imul
mov
add
lcall
cmp
pop
je
outsl
xor
dec
dec
arpl
adc
aaa
in
jl
xchg
add
adc
sub
cmp
add
movsb
add
add
sbb
add
lock
data16
loop
inc
mov
add
ds
jne
popf
inc
add
add
add
inc
enter
test
add
pop
inc
add
xor
push
add
add
cmpsl
push
add
add
pop
movsl
out
ret
add
ficoms
add
inc
add
cmpsl
data16
and
adc
pop
ljmp
test
es
add
add
add
test
cmpsb
add
addr16
mov
mov
arpl
jle
add
mov
push
add
and
sbb
addr16
pushf
mov
add
sub
jae
ljmp
add
addl
xor
fldl
mov
dec
push
sahf
rorl
test
mov
and
add
add
inc
add
lcall
add
xlat
leave
xchg
dec
fcomip
mov
dec
mov
and
jp
iret
sub
mov
cmpsb
add
pop
ljmp
and
xchg
push
sbb
cmp
add
add
mov
je
lock
and
fucompp
and
mov
cwtl
jle
mov
cmc
adc
jle
add
mov
cmpsl
loop
std
in
jnp
adc
add
pop
mov
add
xchg
pop
xchg
add
pop
pop
std
ret
xchg
mov
pop
out
outsb
test
xor
dec
or
inc
lods
js
add
add
add
stos
xor
fstps
rolb
inc
push
add
hlt
add
mov
aad
cmp
add
scas
and
mov
push
add
xchg
add
cmpl
mov
rolb
cli
test
cmp
mov
es
add
fucom
add
cmpsb
add
inc
addr16
hlt
add
add
sub
repz
add
add
loope
xchg
std
aam
jns
out
cmpsb
add
add
add
or
inc
jnp
jecxz
add
add
leave
lods
and
mov
int3
iret
add
xchg
js
xor
dec
inc
adc
imul
xchg
aas
mov
data16
loop
in
add
fisubl
add
pop
and
mov
lret
xor
dec
mov
shrl
adc
loopne
ja
xchg
jns
out
jne
rolb
bound
mov
add
sbb
pop
push
add
dec
popa
cmpsb
add
lds
push
xchg
hlt
add
jmp
and
add
add
call
mov
add
add
mov
xor
or
add
lods
pop
pop
in
dec
rolb
sbb
roll
add
adc
movsl
negl
pop
daa
mov
xor
xor
add
nop
add
add
mull
add
and
ret
leave
jp
lea
mov
add
jle
adc
inc
add
clc
mov
add
testb
add
pop
aam
sub
fdivl
in
pusha
add
add
add
add
mov
out
jp
out
mov
add
imul
sti
sar
sar
adc
sub
xor
fsubs
mov
add
shrd
jmp
pop
movsl
xor
add
or
sub
mov
add
sahf
nop
add
xchg
add
addr16
add
push
add
jle
cmp
add
add
jle
dec
ljmp
popf
mov
pop
lds
test
mov
add
aad
inc
stos
pop
lea
mov
and
movl
push
add
sub
sahf
jg
leave
testb
pop
mov
stos
xlat
les
ret
pop
lea
add
add
add
and
cmp
outsl
or
cwtl
daa
and
mov
sti
cltd
lods
fiaddl
add
cmp
inc
stos
jb
jae
lret
add
push
add
lods
mov
add
hlt
add
add
ret
dec
fwait
pusha
add
add
fstpt
rolb
lea
movd
in
testb
push
add
stc
into
cs
add
add
add
add
mov
lret
icebp
mov
add
inc
add
mov
cmp
add
jnp
sub
int3
cmp
in
std
daa
stos
pop
loopne
and
mov
xchg
add
or
std
les
add
inc
data16
mov
add
add
push
jg
adc
repnz
sbb
movsl
in
jecxz
scas
roll
filds
mov
add
xchg
add
stos
adc
stos
add
dec
call
add
inc
add
mov
add
sub
mov
test
xchg
add
pop
cmp
jl
jle
xchg
adc
lret
mov
push
push
add
add
cs
hlt
add
mov
add
and
in
push
sti
sbb
mov
mov
xor
mov
pop
sbb
mov
add
daa
fsubs
mov
add
loope
call
addb
fcomps
icebp
popa
inc
xchg
scas
int
aaa
cmpsl
popf
dec
push
add
imul
cmp
add
rcll
push
loopne,pn
lods
inc
cmp
add
mov
pop
pusha
add
push
pop
in
popf
fimuls
pop
pop
testb
arpl
add
cmp
dec
mov
addb
dec
pop
dec
jle
add
add
add
or
mov
cmp
lds
add
test
ret
mov
mov
les
adc
stc
or
xchg
add
jp
fnsave
push
jmp
testb
push
dec
stc
cli
push
mov
sub
mov
xchg
and
lret
mov
inc
repnz
lods
inc
add
loopne
mov
add
xchg
jp
jo
mov
imul
cwtl
mov
pop
xchg
clc
add
or
lea
shll
push
add
pop
sarl
push
push
std
mov
addb
cwtl
fmuls
into
dec
movsl
xor
cmp
add
push
mov
add
loope
mov
bound
mov
rolb
rcll
cltd
test
popa
xlat
xor
rcrl
sub
mov
push
into
stc
outsb
jne
leave
and
mov
mov
add
add
or
aad
mov
imul
sub
sti
or
jo
stos
daa
push
pop
jl
add
mov
add
xchg
add
add
push
add
push
enter
loop
fistps
cwtl
std
mov
imul
sub
add
add
fiadds
add
sub
stos
scas
mov
lea
shll
inc
add
lods
scas
movsb
add
mov
xor
sub
mov
xor
loopne
scas
or
add
popf
xor
adc
sub
jne
pop
xlat
add
mov
pop
mov
add
add
outsb
int3
sub
int3
adc
fmulp
jmp
inc
test
add
adc
xor
rol
push
add
sbb
add
data16
add
mov
iret
jl
popa
testb
fdiv
movb
pop
nop
add
scas
repnz
dec
inc
add
inc
adc
jns
out
repnz
lahf
data16
mov
sub
shl
loop
pop
sahf
pop
inc
ret
push
mov
cmp
add
add
add
out
add
insl
xchg
add
push
add
test
lock
jbe
push
add
iret
jmp
add
add
dec
lock
pop
xor
sbb
xchg
add
aam
push
les
in
add
pop
out
stos
js
or
loop
adc
or
std
add
add
mov
jg
movsb
add
or
dec
dec
clc
and
mov
sahf
push
add
mov
addr16
lcall
sub
sbb
cmc
pop
mov
add
jp
pop
adc
xchg
add
add
adc
push
add
add
xor
subl
add
stos
push
lcall
negl
mov
in
xor
ljmp
jo
xor
push
add
add
add
std
shr
sbb
rcrl
jne
adc
sahf
in
jo
cltd
cmp
lcall
lret
and
outsl
enter
data16
sbb
mov
rolb
data16
cmpsl
mov
add
add
sub
in
sti
adc
mov
pop
or
sbb
xor
movsb
add
add
lods
sub
dec
push
sarl
fcomp
fistpl
ds
xor
shl
fldenv
inc
add
pop
iret
out
leave
out
sahf
add
mov
add
add
inc
xor
out
data16
push
jl
xchg
mov
dec
cmp
loopne
lret
mov
in
aaa
cwtl
push
add
add
push
cmp
enter
add
pop
lds
arpl
add
add
add
sub
out
dec
cmpsb
add
data16
add
add
add
jno
call
dec
add
xlat
lds
mov
add
jl
sbb
add
in
js
jmp
add
dec
cmp
test
push
mov
mov
mov
mov
inc
or
dec
mov
add
ljmp
sbb
iret
sub
mov
mov
add
xor
jae
add
add
addb
movsl
add
mov
imul
repz
add
add
js
cwtl
sbbl
add
psrlq
add
dec
cmp
bound
mov
mov
mov
movsb
add
add
xor
add
add
inc
test
insb
data16
jae
popf
sbb
xor
lret
pop
jno
add
push
mov
mov
jnp
add
adc
add
inc
xor
add
add
sbb
add
scas
pop
add
cmc
test
mov
pop
dec
push
add
or
clc
cld
fucomip
xor
add
sub
notl
aaa
popf
pop
push
add
icebp
mov
icebp
lods
lea
call
add
mov
repz
rolb
xchg
add
add
add
mov
scas
push
add
sub
fadds
add
sub
rolb
stos
or
mov
jnp
ret
pushf
cmpsb
add
lods
xlat
js
push
repnz
ret
jb
push
cld
nop
add
test
repnz
movsl
loop
mov
mov
iret
xor
scas
jmp
pop
cli
decb
out
sub
into
or
in
inc
inc
test
xor
in
lds
xor
and
mov
movb
int
add
and
lods
mov
in
lret
add
mov
lods
testb
mov
cmp
add
add
xchg
dec
adc
pop
adc
fbld
movsl
daa
loope
rolb
popf
ds
add
inc
sub
les
fmull
pop
push
add
in
push
add
mov
or
call
add
push
dec
sub
adc
sub
mov
add
adc
or
data16
test
lcall
cmp
roll
jb
and
mov
addb
dec
push
mov
popf
cmp
add
add
fnstsw
mov
xchg
and
pop
mov
enter
lcall
sbb
add
add
xchg
fcoms
dec
test
push
add
add
add
addb
pop
lds
mov
mov
add
mov
cwtl
add
mov
or
add
xchg
pop
mov
aad
add
int
add
imul
add
mov
and
add
popf
xor
mov
fldt
mov
and
rcrl
add
add
adc
pop
pop
jae
clc
jo
idiv
mov
clc
in
pop
test
xchg
add
cmp
xchg
xchg
jle
push
mov
add
rolb
scas
sbb
aaa
rcll
inc
xlat
mov
movsl
and
adc
shll
stos
les
popf
mov
fs
add
xchg
add
adc
insl
push
stos
inc
cltd
fwait
daa
mov
mov
add
jns
sbb
add
fcoms
add
add
add
js
mov
jns
fwait
pop
mov
inc
add
add
jp
add
popa
mov
sub
xlat
push
xchg
mov
add
mov
xchg
stc
fiadds
mov
add
test
jmp
in
push
add
and
cmp
add
rolb
add
fldl
mov
xor
inc
add
add
bound
mov
add
add
fidivl
add
fnstsw
mov
pusha
add
mov
xchg
loop
or
movsb
add
add
hlt
add
mov
mov
shl
in
in
xchg
add
sub
push
add
add
add
sarl
add
imul
dec
aas
ds
mov
add
dec
rolb
rolb
dec
movb
add
add
pushf
mov
add
mov
leave
push
test
jns
add
add
paddd
dec
pop
cmpsb
add
adc
sbb
test
add
jnp
push
add
loopne
lahf
dec
lods
cld
dec
insb
cli
and
and
mov
pushf
sbb
push
mov
add
add
add
add
fcomps
dec
cltd
into
pop
js
add
repnz
or
push
pop
add
add
or
jg
cmpsb
add
jnp
push
cmp
pop
mov
sbb
add
add
and
ficompl
mov
stos
mov
mov
call
and
push
aaa
ret
bound
mov
loope
ret
fldt
sarl
hlt
add
xchg
push
add
leave
dec
data16
or
push
add
jge
adc
mov
push
add
xchg
mov
std
jp
inc
or
or
and
sub
sbb
add
fidivrl
add
sub
data16
xchg
add
push
or
add
add
add
and
test
add
add
sub
add
push
add
or
mov
add
das
insl
xchg
mov
xorl
mov
das
jne
add
add
sbb
jb
adc
lahf
insb
mov
mov
mov
data16
inc
mov
pusha
add
cli
sahf
adc
pop
add
decl
inc
add
pop
imul
aam
rorl
das
add
out
rolb
inc
add
add
mov
add
pop
fidivl
ret
sub
add
jns
mov
lret
faddl
iret
movsb
add
add
add
mov
std
mull
loopne
in
ret
jns
dec
sbb
push
cmp
add
add
and
aaa
int
pop
inc
cmp
data16
jle
sti
xlat
pop
jle
sbb
add
sub
sub
xor
xchg
loope
sti
sub
and
pop
rolb
out
add
int
push
add
add
lret
jb
mov
mov
jp
add
inc
add
test
rol
add
in
outsl
sbbl
add
add
data16
add
mov
add
hlt
add
outsb
filds
add
les
jecxz
pop
popf
or
push
add
sbb
ret
xor
dec
ds
fistl
xor
pop
jne
add
dec
add
into
ljmp
and
dec
push
add
add
push
add
insl
adc
pop
xlat
xchg
add
dec
repnz
insl
push
add
pop
sub
je
jno
popa
aas
rolb
dec
and
call
or
std
dec
or
test
fdivr
ja
jne
mov
add
scas
mov
or
pop
mov
imul
add
add
add
add
shll
add
iret
push
inc
add
loope
fcmovu
addb
movb
add
and
xor
loopne
add
mov
add
pop
sub
add
outsb
ljmp
xchg
add
cmp
push
in
movb
mov
mov
add
xchg
inc
xor
mov
in
lahf
ja
add
mov
cmp
mov
push
call
sub
sbb
add
xchg
mov
into
or
add
test
mov
jbe
cmp
popf
loope
add
add
lahf
sbb
add
cs
in
pop
mov
mov
add
mov
add
std
lahf
add
add
addl
xor
add
inc
add
cmc
fmull
sti
iret
dec
add
mov
mov
pushf
daa
jl
ja
pusha
add
test
cmp
movb
and
mov
or
ret
in
mov
pusha
add
add
filds
pop
stos
mov
addb
lahf
or
andl
push
dec
inc
lods
cmpsb
add
ds
clc
bound
mov
add
add
adc
xor
scas
cltd
fstpl
add
push
adc
sahf
fwait
repz
add
sub
subl
in
data16
add
add
add
imul
xor
jecxz
scas
jmp
add
sub
lret
pop
push
add
es
cmp
pop
pop
idiv
lods
mov
fwait
jne
addb
sub
add
jo
gs
adc
ljmp
add
insl
test
dec
jge
in
mov
sbb
add
xor
add
test
mov
mov
push
add
add
jl
add
add
inc
add
aad
loope
add
add
mov
iret
cmp
mov
xor
pop
jb
test
sub
dec
pop
jo
addb
out
int3
pop
addr16
shll
mov
push
cmp
icebp
data16
mov
push
add
push
add
pusha
add
les
jmp
out
cmpsl
jmp
clc
xor
or
fiaddl
pushf
lods
xchg
test
xlat
shll
add
in
aas
test
add
push
xlat
loop
fwait
jae
es
xchg
add
add
loope
add
add
scas
add
rorl
daa
fmull
icebp
adc
jmp
pushf
lret
pop
or
bound
mov
xchg
xor
jmp
rcrl
add
je
mov
add
add
insb
and
mov
add
xor
aam
xchg
add
mov
out
xchg
mov
cmpsl
mov
add
add
pushf
test
xchg
and
clc
in
pop
pushf
dec
neg
sub
stos
enter
cmp
adc
xchg
ja
add
add
je
jnp
and
xchg
add
mov
add
test
jmp
pop
std
outsl
repz
add
add
test
jb
inc
dec
mov
jno
lock
cmpsl
popf
rolb
ret
pusha
add
xor
or
adc
mov
js
cmp
add
sbb
sub
popa
lret
mov
add
xor
add
lahf
data16
gs
sub
int3
arpl
add
push
add
test
das
dec
addb
add
add
pop
aaa
mov
add
rolb
push
add
add
jns
xchg
add
dec
adc
sub
add
flds
mov
sub
add
add
cmp
mov
add
das
mov
mov
or
add
add
jo
rolb
xor
cmpsb
add
jl
add
testb
xchg
add
faddl
fcomp
adc
add
add
scas
cmpsl
pop
add
jl
add
aam
inc
add
mov
add
add
adc
cmp
shrl
and
push
xchg
add
inc
add
add
rorl
sbb
mov
dec
xor
leave
iret
mov
repz
lret
jmp
add
icebp
cwtl
jl
mov
mov
add
mov
mov
lcall
and
mov
addb
add
cltd
push
decl
scas
push
imul
mov
add
add
add
fisttpl
jecxz
add
add
mov
dec
push
xchg
sbb
aas
scas
fdivrs
add
add
jmp
add
je
add
mov
dec
data16
rorl
add
scas
xor
dec
xchg
addb
add
ja
rolb
rolb
add
test
jae
cmpsl
scas
cwtl
insb
ljmp
add
add
dec
inc
add
add
xor
ja
add
lcall
add
inc
cmp
mov
add
insb
inc
loope
mov
cmpl
add
aad
add
jle
add
jp
lret
inc
add
xchg
mov
inc
add
xor
cmc
popf
xchg
dec
or
add
loop
mov
insl
push
add
mov
fimuls
add
mov
add
into
push
out
xor
das
push
daa
std
push
loopne
xchg
dec
cli
pop
jp
pop
lahf
fstl
cli
jp
add
mov
push
call
add
cmp
fdivl
dec
mov
jl
ja
dec
in
movsb
add
cli
enter
add
fidivrs
push
dec
adc
push
data16
fsubr
mov
pop
jmp
mov
xchg
add
aam
and
adcl
add
add
dec
inc
add
enter
les
testb
cltd
cmpsb
add
insl
insl
inc
add
mov
pop
pop
push
add
xchg
add
mov
out
data16
add
cld
or
out
cltd
ljmp
outsl
mov
fs
mov
add
jns
push
addb
sbb
xor
add
in
test
xchg
add
inc
add
lods
mov
in
jne
add
add
testb
add
movb
mov
mov
adcl
mov
add
sahf
inc
rcrl
push
xchg
add
inc
inc
add
mov
adc
mov
jbe
les
lret
stos
jge
inc
add
jle
add
adcl
add
add
add
loopne
push
out
les
xchg
add
dec
sahf
push
add
add
add
jnp
xchg
add
inc
xchg
cs
add
movsl
adc
inc
add
add
mov
mov
push
and
pop
nop
add
mov
push
cmp
mov
outsb
jnp
pop
inc
inc
inc
fisttps
dec
aad
sbb
mov
jl
pop
mov
jns
add
pop
jmp
add
test
adc
enter
push
add
add
add
add
mov
idivl
addr16
stc
leave
cmp
add
dec
rolb
add
out
fwait
je
dec
mov
add
aas
add
add
fs
push
add
adc
fdivrs
mov
push
mov
add
add
add
mov
add
cmp
and
add
test
add
test
pop
sahf
dec
push
popf
adc
insb
jecxz
add
add
push
popf
test
in
or
in
ffreep
add
add
cmp
sbb
rcrl
xchg
add
cmovl
movb
add
add
push
sbb
xor
mov
add
int
mov
add
add
mov
add
loop
decl
lock
add
push
sbb
add
add
push
add
outsb
insb
outsl
cmp
add
mov
popf
addr16
xchg
stc
xor
xlat
outsl
push
add
cli
ljmp
adc
add
pop
js
insb
and
fiadds
shll
rolb
add
pop
xchg
mov
push
xor
jecxz
rcll
add
xchg
add
and
fcmovu
mov
icebp
mov
mov
push
add
xor
rolb
ljmp
cwtl
lods
jae
in
sub
sbb
add
add
add
mov
add
mov
mov
push
mov
sub
mov
jb
ss
push
add
mov
bound
mov
jno
add
xor
jo
push
add
add
rolb
loope
mov
pop
outsb
jmp
push
add
add
les
xor
fmul
adc
add
xchg
add
cmp
add
xor
out
clc
jns
add
ret
add
cmpsl
cmp
pop
push
xchg
xor
push
pop
imul
cwtl
int3
fmul
dec
je
arpl
mov
pop
scas
inc
add
push
mov
insl
add
int3
xchg
xchg
sbb
push
push
jb
adc
add
add
add
add
jmp
fildll
add
add
mov
std
test
mov
jno
add
add
mov
add
mov
mov
adc
or
inc
add
out
add
mov
scas
std
jp
add
jge
in
mov
icebp
lret
push
add
nop
add
repnz
and
add
or
add
mov
int
subl
add
mov
outsb
push
add
add
cmp
mov
add
mov
add
mov
add
dec
scas
sub
add
rorl
add
out
and
add
test
cwtl
sahf
mov
xor
mov
lea
mov
repnz
test
jne
add
mov
lods
jnp
add
add
sub
add
rcll
jo
test
out
out
fidivl
add
movsb
add
add
sahf
add
jnp
jno
jne
mov
int3
test
add
jge
stos
leave
xor
stos
nop
add
jno
adc
aas
and
mov
ljmp
add
mov
jmp
mov
pop
lcall
jno
inc
sub
aam
out
data16
stc
push
add
mov
xchg
add
clc
in
xor
test
add
or
sub
add
adc
add
stos
and
sub
inc
add
xchg
rolb
mov
mov
add
add
add
mov
mov
popa
inc
rcr
fcmovu
inc
add
cld
gs
add
lods
inc
add
negl
outsb
push
add
add
nop
add
mov
add
sub
popf
and
add
add
addb
add
pop
shll
cmpsb
add
stos
jae
sub
hlt
add
add
pop
pop
enter
jns
jo
mov
ret
js
in
add
pop
fistpll
into
call
lods
stos
lods
std
ljmp
rcll
inc
add
ljmp
repnz
mov
movsb
add
test
or
les
lret
addr16
sub
add
push
test
mov
xchg
out
cmpsl
xchg
add
pop
push
dec
loopne
push
add
loope
add
dec
stc
xor
add
rorl
les
daa
sub
in
fwait
outsb
sub
pop
or
add
outsl
cmp
add
sub
adc
rolb
mov
xor
pshufw
adc
add
in
mov
clc
cli
sahf
addb
xchg
aad
cmp
out
push
xor
inc
add
add
jbe
ljmp
in
inc
mov
add
enter
sbb
add
orl
mov
jns
inc
mov
jp
lahf
cmp
add
inc
mov
movsl
gs
or
mov
ss
jns
lods
mov
mov
add
mov
mov
jmp
stos
adc
outsl
fwait
and
mov
lods
ret
inc
add
test
int3
scas
outsl
xor
dec
pop
ret
jbe
cmp
add
aaa
push
add
add
add
ja
jg
add
dec
icebp
and
add
add
fisubl
mov
hlt
add
add
ret
lahf
addb
add
in
inc
xchg
shll
or
add
ljmp
add
std
das
loope
xlat
add
mov
add
cmp
add
imul
add
dec
rol
add
xchg
add
notl
add
fldt
add
jae
cmpsb
add
inc
add
mov
insl
dec
sbb
xor
sbb
push
movsl
pop
lock
data16
add
in
sbb
push
sbb
nop
add
outsl
stos
add
in
xchg
add
add
mov
add
push
add
add
xor
outsb
in
int3
jne
in
sub
sbb
cmpsb
add
jo
jb
dec
mov
cs
outsl
fcmovnu
xchg
and
jae
adc
dec
xchg
addb
adc
repz
add
popf
xor
sbb
movsl
out
jl
add
or
add
add
add
rolb
movb
cmp
int
lret
stc
jl
jne
sbb
rolb
pop
add
add
cld
negl
add
pop
mov
mov
imul
add
add
mov
add
add
int
add
add
add
stc
arpl
add
add
adc
add
fldl
cmp
movb
add
sahf
push
add
dec
test
adc
enter
add
add
outsl
sbb
sbb
adc
xchg
xlat
orl
inc
add
add
xor
dec
mov
add
mov
sbb
pop
aaa
shrl
outsl
cwtl
das
aas
cli
cmc
push
out
add
push
subl
nop
add
sbb
mov
mov
pusha
add
arpl
adc
mov
mov
mov
push
or
add
mov
adc
imul
sub
xor
sbb
add
add
add
add
mov
mov
lahf
cli
jmp
add
cmp
push
outsb
xchg
push
add
push
add
add
cmp
mov
add
add
push
add
dec
sbb
stos
jmp
cmp
add
mov
sahf
xor
pushf
je
mov
into
jo
loop
aam
jno
inc
add
in
jecxz
aaa
mov
sub
cmp
add
in
jnp
dec
daa
cmp
add
jno
testb
inc
add
add
jle
sub
add
mov
add
addb
sub
inc
add
add
outsl
dec
xchg
hlt
add
leave
dec
mov
scas
sbb
push
mov
mov
jg
cmp
pop
adc
add
add
mov
add
mov
aaa
js
arpl
xlat
movsb
add
add
adc
add
add
jns
dec
jbe
mov
imul
add
lods
pop
mov
mov
mov
xchg
xchg
ret
bound
mov
add
xor
aas
jecxz
sub
sub
nop
add
mov
push
add
xchg
add
push
sbb
and
mov
icebp
push
hlt
add
mull
cmpsb
add
pop
cwtl
and
fisubl
add
jne
add
mov
push
add
add
ds
out
negl
adc
insb
mov
outsl
imul
add
lods
shll
stos
stos
fwait
cmpsb
add
insb
into
xor
sbb
andl
add
add
jl
and
xchg
add
add
subl
jge
mov
dec
mov
push
push
xchg
add
fisubrs
xchg
add
cs
add
jmp
xchg
mov
xor
cwtl
ja
or
dec
cli
push
test
add
jl
loop
adc
mov
mov
in
sahf
mov
mov
aam
push
pop
xor
lea
add
aad
sub
add
add
add
add
outsb
mov
add
xchg
xchg
ret
push
jae
rcrl
pop
decl
mov
cld
call
bound
mov
addb
cmp
into
or
add
cmpsl
jle
add
mov
aaa
in
xchg
xlat
dec
loopne
repnz
add
xchg
or
iret
pop
inc
add
mov
lock
mov
add
outsl
mov
jno,pt
cmp
fmulp
bound
mov
add
add
ret
or
mov
je
incb
or
xchg
call
add
mov
add
frstor
sahf
sti
push
push
icebp
popa
xchg
and
mov
sub
clc
add
mov
pop
xchg
push
add
cmp
dec
jmp
and
mov
addb
testb
add
iret
and
cmpsl
xor
mov
inc
add
sub
sub
stos
rolb
movsl
mov
lahf
xlat
repz
cli
mov
inc
pop
add
mov
jp
and
lods
aaa
sbb
xchg
xchg
add
sub
enter
fcoml
mov
add
xor
add
add
mov
cmp
bswap
sub
add
aad
or
loopne
sbb
add
mov
dec
cmp
add
jns
sub
add
shll
mov
adc
andl
mov
lret
jbe
outsl
mov
add
movsl
add
mov
add
mov
fldcw
aad
add
ret
add
add
mov
jbe
ds
xchg
add
add
mov
lea
cmp
into
cmpsb
add
mov
test
push
add
pusha
add
add
scas
adc
add
sub
add
jl
jb
sub
rolb
xchg
add
mov
add
inc
popf
hlt
add
cmp
add
stos
push
xor
aam
je
insl
add
mov
lahf
xchg
add
add
testl
imul
movb
xchg
daa
jg
fmull
sbb
mov
addb
test
pop
xor
imul
sbb
xor
or
fstp
jae
icebp
cmc
lods
jo
imul
aam
fnstcw
adc
dec
push
dec
push
add
or
add
or
lahf
mov
loopne
push
add
ret
icebp
pop
sub
and
pusha
add
add
add
addb
add
add
adc
bound
mov
push
sbb
add
dec
dec
jnp
jo
popf
add
adc
mov
and
stc
sahf
cmp
mov
add
add
pop
mov
add
add
pop
fcoml
add
pushf
mov
add
dec
and
aas
mov
and
scas
cmpsl
adc
push
les
or
add
xchg
je
addb
xchg
jnp
add
mov
add
xchg
jmp
daa
jb
rolb
movsl
add
movsb
add
jnp
add
add
add
and
add
add
xor
jae
or
add
fmul
hlt
add
or
data16
add
popa
aam
arpl
add
ds
inc
xchg
add
jnp
add
lret
add
fisttpl
cmp
add
loop
mov
jg
xor
jle
out
mov
or
adc
nop
add
add
dec
rolb
addb
pop
fcompl
push
add
add
call
aam
out
mov
add
add
add
mov
lcall
sbb
add
sbb
add
add
fwait
ja
call
add
int3
imul
add
add
clc
sub
mov
ret
xor
jns
add
add
xchg
fcomps
testb
jnp
fcompl
call
mov
add
add
mov
les
lods
inc
rolb
dec
repnz
movsb
add
testb
add
add
sbb
add
mov
ffreep
push
add
adc
add
add
outsb
xor
dec
push
add
add
xor
push
mov
jae
add
add
scas
mov
test
dec
in
add
insb
add
push
fdivl
jne
xchg
sbb
leave
bound
mov
jb
addr16
clc
xchg
add
mov
add
inc
add
xor
and
adc
xchg
add
add
ficomps
aaa
in
das
aas
pop
addb
dec
dec
push
add
mov
les
jns
push
cmp
cmc
push
pop
icebp
testl
ret
pop
fistps
add
mov
addb
add
push
add
add
mov
aas
rolb
inc
ss
stc
add
lods
cmp
or
cmp
cli
fsts
int3
cmpsb
add
xchg
or
adcl
push
add
xor
mov
test
adc
jno
sub
cmp
dec
pop
rolb
push
push
add
sbb
xor
int
jl
add
mov
stc
inc
sub
scas
insl
loopne
lock
lret
jge
mov
daa
shl
add
in
add
mov
pop
push
add
jnp
push
sbb
mov
add
mov
loop
add
mov
mov
inc
add
push
add
dec
stos
add
mov
mov
sbb
jecxz
add
add
popl
mov
out
leave
xchg
iret
xchg
cwtl
pop
stos
test
add
mov
gs
mov
push
ret
icebp
fbstp
sub
push
mov
mov
jle
mov
add
dec
push
movb
push
aam
cltd
hlt
add
xor
push
fstl
add
mov
lock
add
mov
jae
pop
sbb
inc
add
jge
adc
add
inc
add
xor
sbb
add
movsl
push
jp
fsubrl
or
mov
add
xor
push
jo
test
pop
cmpsl
popf
rolb
sbb
and
loopne
and
mov
add
lret
xcrypt-cfb
cmpsl
movsb
add
add
add
mov
incb
add
into
in
add
into
imul
add
sti
clc
rolb
leave
lcall
jg
add
leave
add
jns
loopne
jmp
xchg
dec
cmpl
add
fsubl
frstor
adc
int3
popf
sub
ficoms
mov
adc
dec
in
push
add
add
test
add
add
add
jecxz
add
add
cmpsb
add
pop
adc
dec
hlt
add
sbb
aad
pop
push
add
add
mov
dec
pop
adc
add
add
xor
les
aad
cmp
xor
xchg
in
pop
dec
push
add
xchg
add
loop
or
add
mov
bound
mov
xchg
aam
scas
xchg
add
ljmp
lods
jns
into
std
mov
jg
add
jp
lods
add
add
xchg
add
movsl
dec
add
sub
push
lods
addl
mov
scas
aad
pop
push
add
xchg
icebp
cmp
jne
add
mov
test
add
add
mov
popa
jmp
mov
add
mov
outsb
in
mov
jno
xor
xor
add
jo
mov
sbbl
add
fsubrl
or
cltd
lret
add
pop
xchg
add
stc
ja
sbb
add
mov
add
mov
popa
xlat
xchg
loope
add
xchg
iret
xchg
inc
mov
lods
add
mov
add
fwait
test
imul
xor
cmp
test
xchg
push
add
test
popa
sub
jbe
mov
pop
stos
lods
ja
add
sarl
add
movsl
pop
std
addl
add
add
push
add
add
sbb
add
daa
push
push
rolb
xchg
fwait
adc
loopne
push
add
enter
add
add
add
test
iret
cli
lods
and
mov
movb
add
add
inc
iret
addb
pop
aaa
in
xchg
xor
and
mov
imul
pop
jne
inc
adc
mov
movsl
fisttps
std
sbbl
jae
add
fdiv
add
jmp
dec
adc
ficoms
int3
jb
das
jmp
mov
xor
cmp
cmp
add
add
add
sub
pop
lock
mov
dec
jecxz
aaa
add
mov
add
icebp
outsl
dec
movb
add
in
stos
scas
xor
cmpl
xchg
add
add
jle
add
add
mov
loope
cmp
movsl
xor
leave
loope
ljmp
add
movsl
push
add
mov
lock
jg
and
xor
loopne
sbb
xor
pop
std
jmp
xchg
int
fsubl
add
shrl
mov
call
out
rolb
lods
inc
jp
mov
hlt
add
inc
add
repz
and
or
jb
lea
sub
dec
bound
mov
data16
or
sbb
dec
mov
push
xchg
fldl
add
add
pop
in
cmp
nop
add
add
jns
mov
xchg
iret
mov
jge
in
ljmp
add
sub
jp
and
jle
movb
arpl
stos
pop
sub
rolb
mov
add
xchg
add
mov
add
and
mov
xor
add
int3
jmp
mov
add
add
add
pusha
add
push
add
add
inc
fstpl
push
add
add
add
add
ja
add
sbb
aaa
in
mov
sbb
cmp
les
inc
add
jle
dec
pop
int
adc
cmp
and
or
mov
inc
add
insl
inc
add
mov
movsb
add
mov
dec
sbb
mov
pop
cs
sarl
in
xor
mov
xchg
data16
mov
jge
mov
sbb
popf
cmc
lcall
add
cmp
cmp
cmp
and
dec
hlt
add
add
jnp
add
addr16
orl
lea
jb
mov
mov
add
lea
in
jb
inc
lods
add
add
mov
dec
mov
add
repnz
stc
cmpsl
xchg
add
stos
enter
mov
add
dec
outsl
dec
xchg
js
test
xchg
repnz
add
add
cwtl
bound
mov
mov
and
mov
incb
int3
in
adcl
les
mov
cmp
addb
add
inc
rolb
and
xor
aad
and
mov
add
sub
insl
sbb
fdivrl
add
or
dec
fwait
call
pop
aas
loopne
mov
xor
adc
inc
push
mov
rolb
add
sbb
add
loopne
pop
add
mov
out
pop
in
cmc
mov
nop
add
add
xchg
add
mov
in
adc
add
insl
lods
pop
jb
data16
std
jae,pt
cmpsl
add
add
aas
orl
insb
testb
jae
test
push
add
sub
rolb
loop
xor
dec
or
dec
mov
mov
add
sbb
in
fbld
xorl
sub
movsl
fidivrl
add
xchg
inc
popf
sbb
rolb
lcall
add
jle
add
repz
in
cltd
lahf
inc
add
or
add
sub
lahf
push
add
add
mov
xchg
bound
mov
sti
fnstsw
xlat
stos
add
mov
push
popf
fcompl
add
lret
inc
jecxz
stos
data16
scas
test
mov
add
daa
lret
sarl
nop
add
mov
lds
mov
rolb
adc
xchg
mov
or
jno
add
test
loopne
int3
movb
add
add
aam
data16
out
cmc
add
add
push
add
pop
adc
cmc
and
rcrl
shll
push
sbb
add
sahf
adc
add
mov
hlt
add
xor
in
jno
push
jno
fistpll
mov
call
daa
mov
ljmp
cmc
pop
xor
loop
dec
fdivs
add
add
std
push
ljmp
add
add
movsb
add
fldenv
add
add
cmp
push
test
mov
add
add
mov
add
lret
mov
mov
add
in
sub
dec
xchg
inc
add
clc
ds
fldenv
xchg
lock
cltd
push
repz
push
add
cmp
std
add
mov
add
dec
xchg
add
movsb
add
mov
mov
cmc
testb
cmc
add
dec
rcll
repnz
testb
add
add
mov
add
scas
pop
call
add
inc
add
sub
xor
bound
mov
imul
add
fiadds
add
test
add
xchg
add
stos
dec
idiv
mov
pop
popf
lods
add
and
mov
je
sbb
addl
add
insb
pop
imul
add
jne
add
add
inc
mov
movb
out
in
sub
add
cmpsb
add
add
bound
mov
add
push
add
add
add
repnz
or
xor
lock
jge
stos
jmp
mov
ss
mov
rorl
stc
paddusw
xchg
cli
push
int3
outsb
cmp
inc
jae
pop
jg
inc
scas
nop
add
decb
and
add
pop
arpl
sbb
testb
ds
add
xchg
add
aas
out
xchg
add
into
add
mov
repnz
inc
add
ljmp
fstl
mov
push
add
inc
add
adc
dec
jb
or
jp
push
das
add
mov
cmp
mov
cltd
ds
add
aaa
jo
outsl
je
icebp
xor
insl
cld
push
add
mov
mov
enter
sub
scas
sbb
es
add
add
cwtl
loop
inc
adc
and
mov
xchg
add
iret
sub
test
add
add
sub
rolb
jbe
pop
sub
sub
popa
pop
dec
push
add
xchg
add
mov
push
leave
js
int3
push
cmp
xor
hlt
add
nop
add
sti
sbb
adc
xchg
add
and
and
add
cld
mov
sti
sbb
add
xor
out
mov
push
pop
xchg
add
sub
sbb
jno
add
ds
adc
mov
add
or
or
xor
js
add
in
mov
jp
mov
in
stc
mov
fdivs
add
add
in
dec
nop
add
stos
sbb
add
add
add
scas
into
nop
add
mov
inc
cmp
xor
movsb
add
pop
sub
das
or
add
jne
testb
add
add
add
add
call
ja
xchg
add
fisttps
add
mov
inc
outsl
add
bound
mov
add
cmp
jne
cwtl
xchg
add
sbb
ret
pushl
das
dec
jns
cmp
rolb
adc
cs
inc
add
add
add
scas
aaa
fiaddl
add
repnz
mov
jecxz
sbb
stos
adc
inc
add
jp
pop
pusha
add
add
cmp
sbb
popa
mov
add
popa
call
inc
jmp
add
outsb
outsb
add
add
xchg
mov
inc
add
jg
enter
fnstenv
subl
fwait
lds
mov
mov
mov
add
cltd
leave
insl
sahf
outsb
inc
add
xchg
add
fdivrl
sahf
mov
stos
std
xchg
mov
add
fidivrs
add
add
andl
add
or
add
test
adc
cmp
add
jne
out
adc
cmpsl
in
idivl
push
push
add
add
daa
and
mov
jbe,pn
sahf
aaa
dec
or
add
testl
add
mov
lds
add
mov
sub
mov
out
into
repnz
add
push
add
add
add
add
add
mov
sub
add
icebp
or
inc
test
int3
push
add
sub
jl
add
add
dec
xchg
add
add
pop
pop
or
add
jne
add
cmc
addb
add
and
mov
or
pop
fwait
and
mov
add
push
iret
or
mov
sbb
cmpps
add
inc
add
test
dec
cmpsl
lds
imul
mov
gs
mov
rcl
push
enter
pop
pop
imul
push
push
test
add
mov
outsl
mov
xchg
add
or
lods
lahf
add
mov
xlat
dec
push
dec
lock
in
fbld
inc
daa
mov
sbb
add
or
pushf
movsl
add
mov
or
adc
incl
add
push
add
push
sub
dec
fcoml
sub
jbe
inc
sub
jp
add
add
jmp
xor
add
and
mov
add
stos
add
xchg
mov
bound
mov
ret
aas
xor
mov
add
mov
and
mov
dec
pop
arpl
add
add
add
add
xchg
addb
cmp
imul
add
gs
mov
adc
mov
inc
call
ret
xchg
jns
cmp
mov
add
jno
push
add
pusha
add
adc
pushl
adc
or
sbb
cmp
add
mov
sub
add
add
add
add
in
or
add
sub
sub
mov
int3
lea
add
mov
mov
sub
popf
das
test
and
mov
sahf
lods
add
push
int3
int3
mov
ror
out
sbb
pop
repnz
popa
mov
add
bound
mov
adc
mov
loope
addb
hlt
add
loop
inc
add
sahf
aad
add
fildl
push
add
jge
loop
add
out
insl
adc
incb
inc
xor
les
int3
and
ret
jecxz
aas
scas
leave
cltd
out
loopne
mov
add
xchg
hlt
add
add
add
push
adc
roll
lods
add
jns
add
cmp
add
scas
fmuls
jo
test
add
rolb
sbb
add
cmp
addb
rcrl
sbb
xchg
inc
add
mov
add
movsb
add
mov
xor
or
bswap
xor
lret
fmuls
testb
adc
jne
add
outsb
lahf
jo
fwait
push
mov
pop
dec
mov
sahf
adc
or
inc
pop
mov
pop
xchg
add
lahf
adc
ja
testl
test
dec
scas
mov
add
stc
std
testb
and
repz
shrl
lods
mov
rolb
xor
inc
jnp
mov
mov
adc
fstpl
mov
or
add
call
addr16
xchg
add
aam
ret
xor
push
add
inc
inc
add
push
or
scas
std
mov
xchg
les
mov
cmpsl
adc
push
add
jo
sahf
jle
dec
stc
gs
add
into
sahf
push
add
add
add
pop
sbb
add
dec
push
pmulhw
pop
aam
lds
clc
insl
push
sbb
arpl
popa
and
mov
push
add
jecxz
add
sub
std
push
ret
aaa
jle
lret
or
add
bound
mov
pop
and
add
int
add
push
fwait
aad
ljmp
inc
push
sbb
stos
js
pushf
jg
icebp
adc
xor
jb
test
add
mov
leave
cmpsl
xor
pop
cmp
push
add
jbe
mov
jns
mov
inc
stos
pop
lods
popf
jmp
add
mov
pop
fnstenv
add
add
mov
lea
sbb
push
popf
lock
jmp
and
mov
add
push
cmp
add
aam
mov
ja
sbb
add
add
pop
cli
jae
add
addb
cmp
adc
or
push
add
sbb
add
out
cld
stos
outsb
popa
cmc
bound
mov
add
cmp
add
addb
and
mov
pop
and
mov
rolb
insb
sub
or
mov
fidivl
lret
mov
mov
and
mov
mov
arpl
add
jge
into
imul
repnz
sub
sbb
gs
add
pop
ret
test
mov
add
addb
fsubr
mov
and
add
add
ja
aam
lea
add
or
add
cmp
xchg
cld
out
test
mov
and
mov
jae
pop
daa
in
out
cmp
push
add
and
mov
add
mov
add
add
ja
add
mov
fisttpll
jne
adc
lods
adc
mov
sub
inc
mov
bound
mov
add
or
andl
add
xor
push
movb
in
push
add
or
add
jno
dec
lea
repz
rolb
pop
add
cwtl
clc
sbb
add
adc
add
add
xchg
into
bound
mov
int
movsl
sbb
imul
aas
mov
fwait
pop
or
dec
inc
add
pop
cmovae
add
loope
add
mov
pop
sub
lods
or
adc
add
mov
add
adcl
add
add
out
jmp
jns
push
jae
xchg
js
add
pop
push
add
add
add
or
dec
rolb
push
add
add
int3
mov
add
jecxz
add
add
js
jbe
movb
idiv
nop
add
jmp
lods
pop
fs
nop
add
mov
in
xor
mov
jg
add
add
xchg
add
lcall
std
xchg
aaa
bound
mov
dec
test
in
sub
xor
cmp
add
mov
movb
insb
clc
cmp
add
mov
jg
add
enter
insl
mov
add
pushf
xorl
enter
add
mov
add
mov
imul
push
add
jo
lahf
or
outsb
subl
add
sub
add
test
movsl
dec
inc
add
mov
imul
add
mov
push
add
sub
add
add
xlat
test
add
jno
adcl
daa
fiaddl
add
add
inc
add
pop
or
add
and
jp
idivl
add
mov
push
add
add
add
outsl
mov
add
xor
xchg
add
add
adc
pop
mov
movsl
ljmp
lods
inc
test
or
sub
pop
jmp
and
mov
add
fildl
mov
mov
push
clc
pop
dec
xchg
bound
mov
jl
movsb
add
adc
dec
test
inc
add
lret
push
dec
movsb
add
xchg
cmp
xchg
add
mov
push
inc
pop
and
cli
cmc
mov
fstl
pop
cs
add
mov
mov
lods
xchg
add
or
cwtl
pusha
add
xor
or
hlt
add
and
mov
iret
add
jns
out
outsb
push
and
mov
fiadds
add
dec
test
fadd
inc
lock
data16
and
ficoms
jns
jle
dec
xor
mov
jg
add
mov
enter
adc
add
lock
add
sbb
add
add
mov
push
jp
pcmpgtd
cmpsl
ja
push
aad
stos
cmpsb
add
in
add
out
xlat
shr
or
imul
add
add
lods
cltd
mov
insl
call
ret
mov
xor
xor
add
leave
xchg
cmp
lods
in
mov
addr16
lods
std
mov
movb
movsl
fcmovu
jmp
dec
mov
jge
add
inc
mov
mov
add
push
iret
scas
push
add
mov
std
lahf
mov
sbb
or
mov
ret
mov
add
jns
sarl
add
out
jmp
cmp
jecxz
data16
mov
add
jbe
pop
dec
dec
repnz
adc
mov
add
inc
add
dec
mov
and
jno
rolb
cltd
and
mov
mov
jmp
jne
mov
and
in
pop
xor
jg
aaa
mov
add
sbb
add
std
xor
dec
cs
rcrl
imul
mov
sub
xor
mov
push
add
push
mov
icebp
gs
or
loopne
clc
std
jne
add
lahf
sbb
adc
je
das
mov
or
xchg
pop
fwait
and
xor
inc
add
out
enter
sub
pusha
add
vphaddubq
adc
inc
ret
rolb
popf
and
jmp
add
lods
loop
out
outsb
adc
cmp
add
add
xchg
jmp
add
lret
add
mov
pusha
add
ljmp
add
dec
push
add
jmp
jp
add
rolb
lock
das
cmpsl
and
add
jle
add
cmpsl
frstor
lods
dec
data16
mov
add
aaa
in
scas
movb
add
dec
lods
imul
fiaddl
lcall
mov
jg
add
cld
inc
push
ds
cmp
add
data16
out
adc
add
das
or
lock
movsb
add
xor
ficoms
jns
aaa
repz
add
dec
jmp
inc
cmpsb
add
add
sub
js
lahf
mov
mov
das
ret
lcall
mov
add
mov
rolb
xchg
add
popf
xchg
add
add
add
int
add
ss
bound
mov
and
mov
movsb
add
pop
push
pop
jnp
push
add
popa
popa
push
pop
adc
jo
xor
scas
sub
cmp
scas
icebp
lock
mov
add
cmp
add
add
add
lret
stos
xchg
jno
add
int
lods
out
adc
pop
loop
jae
addl
add
add
cmp
pop
sbb
lods
sbb
aas
jle
add
mov
cmpsl
dec
xor
xchg
pop
lcall
add
add
sbb
mov
mov
mov
add
mov
add
jbe
pop
dec
xlat
push
inc
add
ljmp
jne
add
inc
iret
mov
movsl
mov
mov
enter
xor
jecxz
mov
add
xlat
jno
jl
push
add
mov
mov
xchg
push
add
add
jns
pushf
cmp
sbb
add
lret
lret
or
cld
sbb
sub
add
movb
xchg
lea
lds
lea
gs
jmp
and
add
loop
add
mov
lods
scas
sbb
mov
movsb
add
mov
adc
daa
arpl
pop
movb
and
mov
push
add
imul
cld
sub
fadds
into
pop
sbb
jne
add
add
inc
add
mov
add
add
add
add
mov
add
fmuls
jmp
dec
imul
push
mov
cmp
aas
dec
jbe
push
aad
push
jmp
mov
add
dec
cli
out
add
mov
daa
pop
adc
pop
xchg
sub
xchg
add
push
add
add
hlt
add
add
mov
cmpsl
rolb
or
inc
add
xchg
add
lods
or
add
adc
pop
fbld
add
add
gs
mov
add
add
repz
ficompl
jnp
sbb
cmp
in
addl
push
add
mov
xchg
jo
repz
test
fidivrs
imul
add
pop
sbb
xor
inc
xor
add
cmp
mov
insl
xor
add
setle
addb
and
pop
enter
add
add
mov
push
test
sbb
out
stc
ljmp
pop
and
add
adc
sub
cltd
mov
cli
xchg
add
in
or
add
mov
add
repz
add
pop
jmp
add
movb
mov
dec
pop
nop
add
adc
sbb
adc
daa
out
imul
popf
cwtl
pop
jbe
jbe
pop
iret
or
add
dec
clc
and
lcall
filds
add
mov
sbb
in
sub
add
add
mov
sub
call
push
jecxz
add
add
jbe
mov
inc
sbb
in
jns
jnp
add
mov
mov
pop
rolb
mov
add
js
mov
sub
jnp
or
add
lahf
jge
das
jle
ret
paddusb
frstor
jecxz
lock
sub
add
add
add
add
add
add
mov
xchg
add
daa
out
dec
stos
inc
add
ljmp
les
repz
add
push
add
add
mov
add
mov
imul
add
mov
add
jo
push
mov
inc
add
movl
mov
adc
into
adc
inc
movsl
or
add
jle
sub
ret
jnp
add
add
add
add
add
add
add
add
add
sbb
add
mov
mov
les
addr16
inc
add
xchg
add
mov
dec
rolb
adc
and
adc
out
push
add
add
push
add
addb
je
movb
sub
lea
add
or
adc
data16
mov
add
addb
sbb
add
add
dec
int
add
dec
lcall
out
inc
add
adcl
les
pushf
data16
adc
sub
pusha
add
add
inc
add
push
sbb
mov
outsl
push
mov
jne
jge
add
testl
add
repnz
add
pop
add
mov
add
leave
insl
add
add
cmc
jecxz
sbb
add
add
add
add
cmp
inc
add
add
add
sbb
add
jp
inc
xchg
add
add
imul
add
js
mov
cmpsb
add
add
inc
add
add
mov
outsl
push
add
add
pop
mov
cmp
add
fdivrl
add
addb
mov
add
inc
add
pop
arpl
add
mov
add
and
mov
push
add
mov
clc
repnz
jae
add
add
push
arpl
cld
nop
jmp
imul
inc
dec
call
jmp
add
add
jo
movsl
push
add
sbb
push
mov
xchg
ret
out
add
add
inc
add
repnz
jae
ret
sub
clc
repnz
jae
sub
add
add
add
add
push
mov
xchg
ret
sbb
add
movsl
add
mov
xchg
ret
add
sbb
nop
jae
add
mov
lret
out
add
add
cmpsb
dec
add
push
push
mov
xchg
ret
ss
add
add
jg
dec
adc
jmp
inc
add
add
addb
mov
clc
repnz
jae
inc
mov
clc
repnz
jae
add
xchg
add
fwait
cld
nop
jmp
dec
inc
add
lods
add
cld
nop
jmp
xor
push
sbb
xchg
mov
dec
mov
push
mov
xchg
ret
add
push
push
mov
xchg
ret
filds
xor
add
aas
clc
repnz
jae
mov
sbb
mov
lea
fwait
cld
nop
jmp
daa
dec
lret
add
add
test
sbb
add
repnz
jae
jno
add
inc
and
push
mov
xchg
ret
int
addb
add
jae
cmpsb
inc
add
pop
lret
add
jne
call
clc
repnz
jae
add
lahf
add
nop
jmp
cs
cli
lahf
add
mov
or
clc
repnz
jae
filds
xlat
arpl
loop
add
nop
jae
add
add
add
push
nop
jmp
add
xor
movsl
pop
and
add
push
clc
repnz
jae
inc
hlt
add
pop
push
mov
xchg
ret
int
add
mov
repnz
jae
add
loope
add
popf
jne
fwait
cld
nop
jmp
add
add
jl
push
or
cld
nop
jmp
add
add
push
inc
popf
test
fwait
cld
nop
jmp
movsl
add
xlat
lods
mov
clc
repnz
jae
lret
add
add
add
mov
xchg
ret
cmpsb
add
add
add
add
fwait
cld
nop
jmp
lahf
add
dec
xor
incl
fwait
cld
nop
jmp
push
ret
add
add
dec
or
repnz
jae
add
mov
ljmp
ret
add
daa
std
ja
add
fwait
cld
nop
jmp
add
adc
cmpsb
add
mov
fwait
cld
nop
jmp
mov
sub
jne
clc
repnz
jae
add
std
add
add
xchg
fwait
cld
nop
jmp
sbb
xor
movsb
add
lret
mov
mov
add
sbb
add
lea
nop
jmp
dec
inc
mov
cmp
add
clc
repnz
jae
inc
jo
imul
add
add
repnz
jae
or
mov
mov
xchg
ret
daa
ss
xorb
add
jne
clc
repnz
jae
inc
add
ja
mov
fdivr
jb
push
mov
xchg
ret
inc
add
add
in
push
clc
repnz
jae
add
mov
mov
xchg
ret
ss
add
or
add
jmp
movsl
add
sub
dec
add
xor
sub
inc
add
ss
add
add
popa
add
mov
xchg
ret
push
add
add
ret
cwtl
jne
clc
repnz
jae
jno
daa
out
add
fwait
cld
nop
jmp
ja
add
sbb
or
jg
insb
inc
jb
clc
repnz
jae
add
sbb
mov
add
clc
repnz
jae
int
add
pop
push
mov
xchg
ret
lods
add
bound
mov
decl
test
add
clc
repnz
jae
sbb
fcomps
pop
add
add
add
movsl
add
ja
mov
push
mov
xchg
ret
add
add
addr16
add
push
mov
xchg
ret
std
add
add
movsl
pop
mov
push
mov
xchg
ret
mov
in
ja
clc
repnz
jae
xchg
ss
xchg
xor
xor
cmp
repnz
jae
add
mov
sub
fcoml
repnz
jae
ja
jno
ja
add
cmpsb
loope
add
inc
or
add
add
cmp
repnz
jae
add
add
xlat
filds
pop
mov
fwait
cld
nop
jmp
add
lods
dec
add
mov
clc
repnz
jae
xchg
add
add
add
sbb
add
loope
add
add
cmp
repnz
jae
ss
mov
push
aam
add
add
xor
cli
mov
clc
repnz
jae
add
lret
loope
es
clc
repnz
jae
lods
fs
mov
jae
xlat
add
add
or
add
and
nop
roll
xchg
ret
add
int
sub
add
clc
repnz
jae
add
add
cli
add
jae
cmpsb
xor
movsl
movsl
add
add
add
lcall
add
add
ja
add
push
mov
xchg
ret
ret
sub
cmpsb
pop
add
push
clc
repnz
jae
mov
add
mov
jae
add
ja
imul
mov
xchg
ret
lods
ja
xorb
mov
cld
nop
jmp
add
xor
add
out
add
clc
repnz
jae
pop
jo
add
add
jnp
jg
clc
repnz
jae
adc
add
xchg
pop
push
clc
repnz
jae
add
add
lds
add
clc
repnz
jae
add
add
add
cli
adc
daa
dec
pop
push
mov
xchg
ret
lods
ss
inc
lods
std
mov
fcomi
inc
add
add
mov
add
fwait
cld
nop
jmp
ss
add
add
das
push
clc
repnz
jae
add
add
add
add
clc
repnz
jae
sub
dec
add
jmp
repnz
jae
movsl
adc
mov
pop
arpl
pop
push
mov
xchg
ret
add
lahf
add
clc
repnz
jae
fbld
mov
test
add
add
jno
mov
add
les
clc
repnz
jae
addb
ja
add
mov
nop
jae
inc
movsl
mov
mov
cs
fwait
cld
nop
jmp
dec
add
push
clc
repnz
jae
add
add
int
imul
mov
xchg
ret
xchg
lods
add
arpl
imul
add
repnz
jae
imul
jb
and
mov
adc
repnz
jae
add
add
add
xchg
pop
je
clc
repnz
jae
sub
movswl
clc
repnz
jae
add
dec
push
add
mov
shr
clc
repnz
jae
add
add
loop
push
mov
xchg
ret
push
ja
mov
arpl
add
fwait
cld
nop
jmp
adc
data16
add
shr
sar
add
add
mov
add
add
adc
sbb
repnz
jae
add
dec
add
add
loope
add
je
clc
repnz
jae
xor
jno
mov
clc
repnz
jae
out
lods
mov
sbb
inc
add
and
lahf
and
push
mov
xchg
ret
lods
add
add
push
add
mov
ret
mov
xchg
ret
cli
add
fmuls
jnp
inc
add
imul
jge
clc
repnz
jae
add
add
add
repnz
jae
xor
std
add
lods
std
mov
push
mov
xchg
ret
add
add
mov
jae
mov
cli
add
add
add
stc
fwait
cld
nop
jmp
std
add
add
xor
pop
lods
clc
repnz
jae
add
add
test
je
sub
repnz
jae
cli
sbb
sbb
in
mov
jb
jmp
repnz
jae
add
add
add
clc
repnz
jae
add
inc
mov
add
push
clc
repnz
jae
ja
xlat
xor
add
add
nop
jmp
add
jp
add
xchg
and
dec
add
mov
xchg
ret
loop
int
and
mov
fwait
cld
nop
jmp
xor
adc
clc
push
fwait
cld
nop
jmp
std
inc
filds
daa
add
les
mov
xchg
ret
add
dec
add
rolb
ret
add
ja
lcall
fadds
xchg
ret
add
add
loop
dec
pop
push
mov
xchg
ret
xlat
jp
add
jbe
xor
jne
clc
repnz
jae
int
add
and
clc
repnz
jae
imul
lds
mov
adc
inc
add
add
daa
lods
out
mov
clc
repnz
jae
lret
ja
push
push
mov
xchg
ret
ss
add
sbb
sbb
cld
nop
jmp
ja
imul
or
repnz
jae
cs
add
add
xor
jae
cld
nop
jmp
add
add
lods
sub
clc
repnz
jae
lahf
add
std
out
pushf
add
fwait
cld
nop
jmp
add
cmc
insb
mov
clc
repnz
jae
pop
cmpsb
mov
add
clc
repnz
jae
add
loop
mov
add
add
clc
repnz
jae
add
inc
inc
jge
rclb
movl
jp
cli
add
lods
lock
xlat
mov
pushf
mov
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
cli
out
add
mov
add
repnz
jae
add
lahf
jo
add
xchg
out
push
clc
repnz
jae
add
hlt
imul
call
add
add
push
add
addb
push
clc
repnz
jae
push
add
add
shr
push
mov
xchg
ret
add
add
or
cld
nop
jmp
add
addb
add
cmpl
ja
add
add
jecxz
cmp
push
mov
xchg
ret
push
add
add
add
inc
add
jmp
add
add
mov
add
ss
add
int
add
pop
add
add
aad
add
mov
clc
repnz
jae
and
fildll
pop
ja
shll
and
jns
nop
jae
add
pop
sub
add
push
fwait
cld
nop
jmp
add
add
xlat
lahf
jp
push
clc
repnz
jae
pop
add
imul
add
pop
mov
push
mov
xchg
ret
add
cmpsb
add
pop
xchg
sbb
mov
xchg
ret
imul
jl
clc
repnz
jae
add
mov
add
jo
add
imul
push
mov
xchg
ret
arpl
xlat
lret
int
sbb
lods
pushl
lret
add
add
lret
add
and
inc
add
enter
jmp
add
arpl
add
nop
jae
add
add
jp
add
jmp
cs
add
clc
repnz
jae
add
ret
imul
clc
repnz
jae
and
xor
fcoms
repnz
jae
xor
movsl
inc
xchg
add
add
add
repnz
jae
add
lea
clc
repnz
jae
add
mov
dec
mov
clc
repnz
jae
add
xor
add
sldt
clc
repnz
jae
push
out
add
repnz
jae
cmpsb
add
add
call
mov
xchg
ret
add
add
add
xor
fwait
cld
nop
jmp
dec
jp
jo
add
pop
mov
clc
repnz
jae
filds
add
add
add
add
mov
ss
or
mov
clc
repnz
jae
sbb
inc
stos
lea
push
mov
xchg
ret
xchg
push
lret
movsl
aas
mov
clc
repnz
jae
add
add
push
clc
repnz
jae
cmpsb
add
sub
pop
cmp
repnz
jae
sbb
add
xor
clc
repnz
jae
add
add
push
push
mov
xchg
ret
sbb
add
rorl
jae
add
mov
call
clc
repnz
jae
add
add
clc
repnz
jae
cmpsb
mov
add
add
jae
add
inc
arpl
add
jge
inc
add
push
imul
add
clc
repnz
jae
loope
lahf
add
xor
cld
nop
jmp
imul
imul
repnz
jae
movsl
add
cmpsb
mov
mov
add
fwait
cld
nop
jmp
add
ja
mov
mov
xchg
ret
pop
mov
add
clc
repnz
jae
add
ss
add
xor
lock
mov
stos
push
clc
repnz
jae
add
jno
cli
push
add
add
clc
repnz
jae
add
inc
add
dec
addr16
fcmove
inc
add
cli
add
sbb
xor
push
mov
xchg
ret
add
add
xor
add
clc
repnz
jae
add
lahf
mov
clc
repnz
jae
add
push
fwait
cld
nop
jmp
add
jp
jo
add
add
add
clc
repnz
jae
add
sar
nop
jae
xlat
cmpsb
cmpsb
mov
add
je
clc
repnz
jae
add
arpl
clc
repnz
jae
dec
add
add
movsb
add
cmp
mov
xchg
ret
cli
add
fwait
cld
nop
jmp
add
add
xlat
lret
dec
ret
add
test
add
add
in
push
or
icebp
clc
repnz
jae
xchg
imul
cmp
xor
add
clc
repnz
jae
mov
add
clc
repnz
jae
xor
cwtl
mov
clc
repnz
jae
add
add
clc
repnz
jae
add
add
adc
repnz
repnz
jae
dec
add
add
lret
add
push
mov
xchg
ret
xchg
or
adc
test
sub
popa
add
repnz
jae
inc
add
add
into
jne
fwait
cld
nop
jmp
ss
inc
add
mov
clc
repnz
jae
imul
outsl
mov
push
mov
xchg
ret
mov
add
in
pop
mov
push
mov
xchg
ret
add
hlt
add
add
scas
push
push
mov
xchg
ret
sbb
add
stos
mov
push
mov
xchg
ret
sbb
movsl
insb
sub
clc
repnz
jae
xor
and
inc
add
add
clc
repnz
jae
add
hlt
lods
inc
add
mov
lret
add
add
ret
ss
add
nop
jae
addb
add
add
add
nop
jae
xor
add
add
rcrb
add
pop
add
add
ss
std
xchg
sbb
sti
loope
add
arpl
cli
addr16
mov
add
clc
repnz
jae
add
add
add
add
rep
clc
repnz
jae
add
add
mov
imul
sbb
add
int
pop
add
add
repnz
jae
add
add
insl
mov
clc
repnz
jae
ss
add
add
mov
clc
repnz
jae
xor
add
add
xchg
add
or
add
repnz
jae
xor
sbb
je
clc
repnz
jae
add
push
cmc
or
nop
jae
inc
add
add
sbb
mov
xchg
ret
add
lahf
std
add
jo
mov
clc
repnz
jae
pop
jp
lret
addb
jmp
repnz
jae
xor
mov
or
repnz
jae
add
add
mov
add
add
clc
repnz
jae
add
ja
add
bound
mov
xor
clc
repnz
jae
mov
add
add
inc
clc
repnz
jae
fcomip
add
cmp
aaa
add
mov
add
add
hlt
push
lods
imul
add
clc
repnz
jae
add
add
jno
sbb
out
lcall
stc
jmp
add
adc
test
push
mov
xchg
ret
add
lret
sub
add
mov
fwait
cld
nop
jmp
add
add
div
fwait
cld
nop
jmp
and
sbb
and
repnz
jae
add
pop
ss
jno
add
xor
clc
repnz
jae
xor
add
loope
add
mov
clc
repnz
jae
movsl
add
pushl
fwait
cld
nop
jmp
movsl
sbb
lods
lods
add
jae
push
add
add
movsl
cmp
mov
adc
cld
nop
jmp
add
add
add
sub
xorl
add
add
xor
cld
push
clc
repnz
jae
add
lods
lods
ss
dec
add
clc
repnz
jae
lods
add
xlat
jno
add
imul
clc
repnz
jae
xor
int
cli
add
adc
repnz
jae
add
add
add
sub
jae
inc
sbb
cli
ja
stos
push
mov
xchg
ret
sub
dec
mov
clc
repnz
jae
mov
ret
sub
add
clc
repnz
jae
add
mov
movsl
add
add
nop
jae
add
add
jp
lods
das
add
clc
repnz
jae
add
pop
inc
hlt
aaa
push
popa
add
lods
incl
add
and
add
sub
repnz
jae
add
ret
add
add
xor
movzwl
clc
repnz
jae
or
add
push
clc
repnz
jae
add
add
lods
push
add
mov
push
mov
xchg
ret
inc
movsl
jo
mov
repnz
jae
mov
add
mov
sub
sub
inc
add
add
add
inc
pop
jmp
add
add
add
or
subl
nop
jae
add
lock
loop
movsb
clc
repnz
jae
or
add
mov
loope
repnz
jae
jo
lret
add
adc
clc
repnz
jae
imul
sbb
stos
clc
repnz
jae
int
add
xchg
xchg
xchg
add
fstps
mov
xchg
ret
sbb
pop
add
add
mov
roll
xchg
ret
add
add
add
xor
and
push
mov
xchg
ret
add
add
add
repnz
jae
sbb
mov
clc
repnz
jae
add
add
sbb
nop
jae
dec
add
add
pop
push
mov
add
xor
and
pop
in
lahf
add
mov
add
mov
fwait
cld
nop
jmp
add
add
lock
repnz
jae
addb
mov
adc
repnz
jae
mov
adc
in
loope
push
clc
repnz
jae
add
cli
jp
movsl
add
jne
clc
repnz
jae
lahf
add
mov
add
dec
push
clc
repnz
jae
add
sbb
dec
cmp
repnz
jae
lods
daa
add
add
add
repnz
jae
xor
add
or
clc
repnz
jae
lods
arpl
mov
jne
clc
repnz
jae
xor
add
add
push
fwait
cld
nop
jmp
lahf
add
sbb
add
add
das
add
push
mov
xchg
ret
std
add
xchg
add
mov
sub
repnz
jae
add
ss
sti
jmp
add
mov
add
add
adc
mov
xchg
ret
lret
lret
mov
mov
jne
fwait
cld
nop
jmp
int
xor
stc
mov
clc
repnz
jae
xchg
sbb
add
rcl
inc
add
add
add
mov
clc
repnz
jae
sbb
add
popf
call
clc
repnz
jae
mov
add
enter
nop
jae
add
dec
cli
add
addr16
and
addb
add
mov
repnz
jae
movsl
add
add
jge
nop
jmp
add
cmpsb
sbb
mov
clc
repnz
jae
add
les
and
mov
push
mov
add
xor
imul
add
aam
sub
ret
push
mov
xchg
ret
add
rolb
daa
inc
add
mov
add
add
pop
adc
add
repnz
jae
add
jae
push
clc
repnz
jae
mov
add
leave
add
jmp
add
add
jno
mov
or
add
add
cmpw
fwait
cld
nop
jmp
loope
add
pop
or
pop
and
repnz
jae
add
hlt
inc
add
push
mov
add
fistps
jae
add
inc
mov
sub
push
push
add
add
mov
clc
add
ljmp
mov
add
mov
push
mov
xchg
ret
add
dec
movsl
data16
fwait
cld
nop
jmp
add
int
add
pop
mov
fwait
cld
nop
jmp
add
add
push
xchg
daa
adc
inc
add
call
clc
repnz
jae
add
hlt
mov
push
mov
xchg
ret
add
add
dec
ss
fwait
cld
nop
jmp
add
jo
xchg
testb
mov
push
push
mov
xchg
ret
add
inc
jle
test
or
add
or
add
lods
add
test
push
mov
xchg
ret
pop
sbb
add
sub
clc
repnz
jae
inc
add
or
fwait
cld
nop
jmp
xchg
lret
int
je
fwait
cld
nop
jmp
push
add
sub
repnz
jae
xchg
add
lods
mov
aas
adc
ljmp
add
dec
push
mov
xchg
ret
add
add
or
add
clc
repnz
jae
add
add
add
bound
mov
pop
clc
repnz
jae
add
add
arpl
imul
clc
repnz
jae
xor
ret
xor
outsl
sub
fwait
cld
nop
jmp
add
add
cli
xlat
sub
adc
add
add
jno
mov
ja
jp
push
mov
xchg
ret
add
mov
cmp
repnz
jae
mov
hlt
pop
ja
and
addb
dec
mov
push
mov
xchg
ret
ret
xchg
add
add
inc
add
push
fwait
cld
nop
jmp
add
ja
hlt
xlat
fists
mov
xchg
ret
xor
sub
add
clc
repnz
jae
imul
mov
jg
inc
add
add
add
or
repnz
jae
dec
add
add
add
movzwl
fwait
cld
nop
jmp
add
xchg
fwait
cs
clc
repnz
jae
add
ja
daa
add
add
clc
repnz
jae
add
dec
mov
mov
inc
add
add
add
sub
xor
add
out
add
add
movsl
dec
add
movl
mov
movsl
jp
jbe
push
add
adc
repnz
jae
lods
add
or
repnz
jae
add
add
add
movsl
push
shl
fwait
cld
nop
jmp
add
movsl
cmpsb
movsl
mov
repnz
jae
add
add
pop
and
push
mov
xchg
ret
add
inc
orb
add
mov
push
mov
xchg
ret
add
xor
add
lcall
add
add
dec
add
push
sbb
hlt
inc
add
movsl
mov
add
push
mov
xchg
ret
jno
hlt
add
lock
adc
repnz
jae
add
sbb
add
gs
clc
lcall
sldt
cmpsb
add
add
insb
insb
clc
repnz
jae
add
movsl
ja
push
mov
add
inc
mov
add
mov
add
push
clc
repnz
jae
add
add
xlat
xchg
add
clc
repnz
jae
add
ss
add
mov
je
fwait
cld
nop
jmp
sub
jo
and
add
fwait
cld
nop
jmp
lret
mov
pusha
clc
repnz
jae
xor
add
fdivrs
clc
repnz
jae
add
xchg
add
cmpl
nop
jmp
add
lods
add
dec
xor
fwait
cld
nop
jmp
lods
ss
add
sub
clc
repnz
jae
add
add
cmp
add
repnz
jae
add
lahf
or
clc
repnz
jae
inc
add
add
ss
add
push
mov
jge
add
test
test
pop
push
mov
xchg
ret
add
add
add
rolb
pusha
add
nop
jmp
filds
add
add
mov
inc
or
cld
nop
jmp
add
lret
in
xor
clc
repnz
jae
pop
add
sbb
xchg
cmpl
in
pushl
lret
add
mov
nop
jmp
add
pop
xor
add
ljmp
jae
add
add
adc
inc
clc
repnz
jae
add
mov
int
or
dec
or
clc
repnz
jae
lods
xor
fbstp
mov
call
clc
repnz
jae
inc
out
add
add
add
add
add
xor
push
lea
clc
repnz
jae
add
icebp
popa
sub
clc
repnz
jae
add
inc
loop
imul
add
push
mov
xchg
ret
add
jo
add
or
cmp
ret
add
add
add
jno
add
add
subl
clc
repnz
jae
add
ja
inc
popf
and
push
mov
xchg
ret
mov
add
sbb
add
mov
clc
repnz
jae
add
mov
mov
inc
cmp
repnz
jae
movsl
sbb
add
lods
decl
or
inc
add
inc
add
adc
popa
fwait
cld
nop
jmp
xor
add
movsl
adc
dec
sub
jmp
cmp
ret
out
xor
cmpsb
xor
or
jmp
inc
dec
xchg
and
add
je
pop
jmp
add
add
sbb
xor
add
popa
add
mov
xchg
ret
add
add
pop
mov
clc
repnz
jae
lret
sub
lea
cld
nop
jmp
add
sub
stc
xchg
clc
repnz
jae
mov
add
cmp
fwait
cld
nop
jmp
ret
xlat
daa
add
inc
add
sbb
repnz
jae
ja
add
out
into
pusha
push
mov
xchg
ret
pop
xchg
std
std
add
cs
ret
push
mov
add
add
stc
add
add
add
inc
leave
mov
clc
repnz
jae
lods
jo
add
add
push
push
mov
xchg
ret
mov
mov
repz
push
push
mov
xchg
ret
add
add
add
add
mov
adc
repnz
jae
jno
imul
or
inc
add
inc
add
mov
cld
nop
jmp
add
mov
jae
xchg
add
add
lods
arpl
add
push
clc
repnz
jae
mov
add
mov
mov
xchg
ret
add
add
add
cmpl
fwait
cld
nop
jmp
add
add
xor
push
mov
xchg
ret
add
add
add
add
add
push
mov
xchg
ret
filds
add
dec
xor
clc
repnz
jae
loope
movsl
ret
jp
movsl
mov
adc
jmp
mov
cmpsb
loope
cmpsb
hlt
add
movsl
adc
mov
xor
clc
repnz
jae
inc
mov
cmp
add
jmp
jmp
add
sbb
xabort
nop
jae
int
add
add
clc
repnz
jae
jno
add
xchg
add
xchg
fwait
cld
nop
jmp
inc
imul
add
sar
repnz
jae
add
cli
xchg
adc
enter
mov
inc
add
add
add
out
add
add
sti
fwait
cld
nop
jmp
cli
add
add
xchg
mov
jae
clc
repnz
jae
addb
mov
fpatan
movsl
clc
repnz
jae
add
add
movsl
sub
xbegin
movsl
add
add
add
add
cmpsb
out
addb
inc
add
clc
repnz
jae
movsl
lahf
sbb
add
les
add
add
repnz
jae
add
pop
or
clc
repnz
jae
dec
add
sqrtps
repnz
jae
add
add
add
add
clc
repnz
jae
add
cli
or
add
mov
xchg
ret
ja
add
ss
mov
repnz
jae
adc
add
sbb
push
clc
repnz
jae
add
add
mov
mov
adc
repnz
jae
add
add
cmpsb
add
clc
repnz
jae
mov
mov
add
add
nop
jae
sub
sub
arpl
add
repnz
jae
add
add
add
mov
mov
clc
repnz
jae
out
loop
lahf
add
cs
clc
repnz
jae
add
imul
lcall
cmc
incl
xchg
movsl
daa
cli
imul
fwait
cld
nop
jmp
int
sbb
int
or
push
mov
xchg
ret
add
or
lods
inc
cmpsb
add
clc
repnz
jae
add
sub
add
push
clc
repnz
jae
add
cmc
mov
xchg
clc
repnz
jae
cmpsb
jo
add
xchg
add
fwait
mov
fwait
cld
nop
jmp
imul
out
push
push
mov
xchg
ret
add
add
add
and
cld
nop
jmp
jno
jp
add
ja
mov
clc
repnz
jae
imul
add
pusha
clc
repnz
jae
cmpsb
add
xchg
adc
std
fisttps
movb
mov
xchg
ret
arpl
lods
xor
repnz
jae
movsl
add
add
add
idiv
repnz
jae
add
add
add
mov
clc
repnz
jae
sbb
add
sub
out
and
push
mov
xchg
ret
add
xor
clc
repnz
jae
add
add
cmp
repnz
jae
lret
inc
add
add
clc
repnz
jae
add
add
int
loope
cmp
jo
add
xor
filds
add
add
mov
xor
add
xchg
ss
ss
add
sub
add
add
pop
mov
push
mov
xchg
ret
add
je
mov
repz
repnz
jae
mov
filds
adc
add
and
fwait
cld
nop
jmp
add
ret
xor
add
repnz
jae
add
sbb
add
add
push
mov
xchg
ret
sbb
out
jmp
add
xchg
inc
and
add
repnz
faddl
repnz
jae
add
adc
add
ja
call
clc
repnz
jae
out
add
jmp
add
add
add
add
jp
inc
inc
add
mov
clc
repnz
jae
add
call
clc
repnz
jae
add
add
push
add
mov
xchg
ret
add
inc
and
adc
clc
repnz
jae
ss
add
add
add
call
fwait
cld
nop
jmp
xor
ret
or
rolb
jo
js
push
mov
xchg
ret
hlt
ret
add
add
jo
in
je
clc
repnz
jae
add
or
repz
repnz
jae
dec
sbb
add
call
clc
repnz
jae
sbb
mov
add
jg
fwait
cld
nop
jmp
sbb
pop
push
mov
xchg
ret
add
add
inc
push
mov
xchg
ret
add
imul
add
push
clc
repnz
jae
inc
hlt
jno
add
clc
repnz
jae
xor
push
push
mov
adc
repnz
jae
ret
add
mov
negl
fdivr
call
add
repnz
jae
add
add
add
lods
popa
clc
repnz
jae
dec
add
adc
nop
jae
arpl
jo
sbb
push
xchg
addb
add
and
clc
repnz
jae
ss
mov
add
ljmp
jae
add
add
dec
add
add
and
repnz
jae
cli
or
mov
sbb
repnz
jae
or
add
sub
add
lods
popa
clc
repnz
jae
ja
ja
lahf
add
mov
clc
repnz
jae
or
add
fs
add
add
loope
andb
mov
push
mov
xchg
ret
loope
xchg
add
mov
xchg
ret
dec
add
xor
xlat
or
sti
jne
fwait
cld
nop
jmp
add
imul
repnz
jae
add
xchg
jp
xchg
add
ret
fwait
cld
nop
jmp
loop
std
dec
xor
add
repnz
jae
add
mov
add
mov
nop
jae
add
daa
xor
pop
ljmp
adcl
incl
imul
jae
push
lret
add
add
xchg
jg
clc
repnz
jae
adc
add
push
mov
sbb
mov
sahf
mov
or
jle
arpl
cmpl
fwait
cld
nop
jmp
add
ja
adc
xchg
in
clc
repnz
jae
pop
xlat
and
sbb
jae
add
xor
ret
cwtl
mov
push
mov
xchg
ret
xor
add
add
push
mov
xchg
ret
add
sbb
ja
lret
hlt
add
add
clc
repnz
jae
add
lret
xchg
add
das
in
lcall
fdivr
incl
jo
ja
and
mov
sub
repnz
jae
mov
loope
add
rorl
clc
repnz
jae
add
add
add
xor
fwait
cld
nop
jmp
cmpsb
add
ss
add
mov
mov
clc
repnz
jae
add
and
cmp
fistps
dec
movsl
movsl
add
pop
pop
fwait
cld
nop
jmp
add
add
fisttps
clc
repnz
jae
add
sbb
push
movsl
ret
mov
jne
clc
repnz
jae
arpl
scas
push
jmp
jmp
add
jo
or
add
or
clc
repnz
jae
xor
push
pop
jno
add
add
inc
add
add
and
add
sub
clc
repnz
jae
push
add
add
test
nop
jae
lods
add
mov
add
out
pushl
add
inc
add
nop
jae
add
add
fists
add
and
mov
jmp
ss
add
add
add
add
clc
repnz
jae
push
add
add
jne
je
repnz
jae
add
add
xchg
cltd
shl
fwait
cld
nop
jmp
lahf
add
imul
add
add
fwait
cld
nop
jmp
or
mov
sub
repnz
jae
add
adc
push
mov
xchg
ret
lret
xchg
jno
mov
lods
inc
clc
repnz
jae
add
add
add
ja
dec
fwait
cld
nop
jmp
add
ja
add
lret
add
and
mov
push
clc
repnz
jae
add
add
adc
add
jo
sbbb
jp
pop
fwait
cld
nop
jmp
mov
mov
jo
cmpsb
adc
inc
stos
call
clc
repnz
jae
add
ja
push
stos
shl
push
mov
xchg
ret
xchg
add
movsl
mov
pop
mov
fwait
cld
nop
jmp
add
add
add
add
repnz
jae
lods
imul
sar
repnz
jae
mov
add
pop
dec
nop
add
push
clc
repnz
jae
arpl
lods
mov
add
nop
jae
arpl
add
add
clc
repnz
jae
pop
imul
pushl
push
mov
xchg
ret
add
call
clc
repnz
jae
add
daa
add
cmpsb
add
add
jp
mull
repnz
jae
xor
or
fwait
cld
nop
jmp
add
add
add
repnz
jae
add
clc
repnz
jae
xor
add
icebp
sbb
or
add
sbb
js
push
mov
xchg
ret
ss
push
movsl
add
push
mov
xchg
ret
xchg
push
inc
or
add
repnz
jae
xor
add
imul
subl
pushl
push
add
xor
lcall
call
sbb
add
sub
aad
add
add
and
leave
jne
clc
repnz
jae
add
or
mov
xchg
ret
lahf
mov
add
out
inc
add
add
add
xchg
imul
and
incl
loope
cli
add
add
mov
clc
repnz
jae
fisttps
lret
ja
rcl
imul
nop
jmp
ja
lret
add
add
repnz
jae
add
add
loop
adc
rclb
sub
inc
add
lret
add
push
cmp
mov
xchg
ret
add
sbb
lret
add
adc
lock
incl
std
pop
ss
jp
push
clc
repnz
jae
ss
jno
add
sbb
or
repnz
jae
add
adc
pop
push
push
mov
xchg
ret
mov
sub
mov
mov
add
or
add
repz
and
mov
stos
xor
mov
xlat
sub
cmp
dec
rolb
or
mov
call
adc
or
jmp
icebp
lahf
lods
movsb
add
sub
lock
stos
lods
movb
dec
xor
in
xor
xchg
add
add
decb
add
mov
testl
jnp
cmc
xor
or
int
ja
test
fcompl
and
dec
pop
loope
jl
mov
in
fdiv
add
add
mov
fidivl
in
notl
setle
sti
jae
or
xchg
add
add
add
cmp
add
xchg
iret
push
iret
ds
jae
add
imul
add
loope
dec
cltd
sbb
push
add
push
add
add
and
mov
in
mov
pop
wrmsr
add
cmp
add
inc
int
jge
stos
test
add
mov
shr
sub
sbb
add
mov
add
rcr
pushf
data16
test
lcall
nop
add
aad
out
push
and
call
cmpsb
add
mov
test
int
add
lods
lods
push
add
lock
xchg
test
imul
push
add
add
xchg
add
add
and
mov
add
jle
add
xchg
add
lock
leave
mov
insl
xchg
test
fmull
loopne
ljmp
lcall
dec
scas
xor
and
jg
movb
hlt
add
add
jne
push
add
imul
mov
insl
dec
inc
dec
jp
jb
sub
add
out
ret
add
ds
clc
fucomp
dec
push
jne
jb
insb
mov
xchg
add
sbb
out
incb
and
mov
add
add
jae
adc
out
rolb
inc
mov
aas
mov
or
enter
repz
add
cmp
shrl
dec
les
jo
jnp
ret
dec
inc
add
andl
xchg
add
add
jae
popf
dec
or
add
add
add
pop
jb
movb
add
sbb
sub
add
add
fucompp
out
and
push
add
add
add
add
add
add
xchg
jae
les
jmp
test
mov
add
outsl
pop
or
and
add
les
mov
inc
add
pop
into
daa
pop
jnp
cmpsb
add
xchg
in
inc
add
push
add
sub
pushf
mov
add
testb
mov
scas
xchg
scas
std
out
add
sbb
jnp
add
arpl
mov
inc
cmpsb
add
in
fcomp
adc
pop
jno
loopne
mov
add
dec
stos
push
ljmp
add
loop
mov
mov
xchg
add
xor
jo
or
in
adc
cli
rolb
mov
add
cltd
inc
add
add
inc
ds
jns
pop
mov
scas
xor
inc
loopne
dec
jns
ret
jl
pop
xchg
mov
shll
adc
iret
pushf
bound
mov
mov
lods
imul
mov
adc
mov
insb
push
mov
test
and
xchg
movsb
add
js
stos
dec
call
sbb
or
add
sbb
dec
sbb
mov
jl
or
outsl
mov
mov
sbb
cmp
test
iret
pop
call
xor
test
add
fisttps
add
push
lret
sbb
xor
add
add
mov
add
mov
push
add
xor
and
ljmp
jne
xchg
add
rolb
and
mov
sub
fists
test
in
and
xlat
rolb
inc
rol
outsl
mov
cld
jne
inc
das
pushf
fidivrs
lods
enter
push
add
lods
sahf
add
sbb
out
or
mull
add
sti
sti
mov
icebp
inc
add
add
xchg
add
add
add
jl
add
icebp
add
add
mov
outsl
dec
mov
pushf
fidivrs
sub
add
add
ffreep
adcl
in
in
stos
pop
cmp
lea
add
add
lods
movsl
in
out
ret
push
add
mov
adc
addb
movsb
add
add
or
mov
mov
outsb
hlt
add
cmpsb
add
inc
leave
mov
add
and
add
lea
add
fstl
add
add
jmp
pop
or
lds
add
mov
sbb
add
fdivl
pop
dec
out
sahf
int
push
mov
add
add
sbb
push
add
add
cld
aas
decb
add
inc
add
inc
add
cmp
or
fucomip
addb
add
add
testl
or
pop
imul
add
in
mov
mov
add
add
arpl
add
or
mov
cmp
or
jbe
sbb
movsl
adc
incl
mov
jecxz
popl
sbb
ficoms
lds
xchg
add
in
push
gs
add
outsb
lods
add
add
add
push
ret
lods
int3
adc
rorl
sahf
bound
mov
add
add
inc
pop
movsb
add
outsb
push
rolb
pusha
add
add
push
add
mov
xor
jns
add
inc
add
inc
add
insb
mov
add
add
push
mov
pop
pop
dec
or
sbb
test
add
add
mov
mov
add
xchg
add
test
pop
mov
push
in
call
jnp
add
xchg
add
dec
testb
add
adc
xor
or
xchg
add
mov
enter
adc
ss
or
add
inc
test
test
repz
and
push
jl
pop
addr16
movsb
add
ljmp
add
ret
and
data16
dec
dec
push
add
rol
cmp
int
sub
bound
mov
rolb
lea
xlat
js
add
lcall
out
xchg
add
flds
fstl
dec
or
movq
fstpl
les
xor
fdivrs
fistpl
add
add
xchg
add
lds
cld
add
fwait
lcall
add
ret
shll
je
push
add
aam
repz
into
andl
mov
dec
jae
add
add
inc
add
add
sbb
add
add
mov
insb
out
inc
add
add
mov
sub
pop
pop
fidivrl
dec
xchg
clc
xor
rol
add
repnz
xchg
stos
cmpsl
and
push
ds
mov
dec
sahf
mov
pop
dec
cmp
add
movsb
add
movsb
add
push
add
xchg
add
xchg
and
add
push
mov
mov
cmp
add
add
add
fmuls
sbb
add
in
and
gs
mov
add
fists
ss
dec
outsb
push
jno
in
addb
mov
lods
dec
or
in
xlat
mov
add
xchg
add
or
mov
sbbl
repz
aam
xor
int
js
iret
mov
fstpt
mov
add
add
mov
xor
adc
rolb
cmp
inc
jmp
loop
movsb
add
push
add
pop
or
cmpl
push
pop
add
rolb
loopne
xchg
test
mov
add
dec
xlat
scas
subl
test
mov
insl
add
mov
add
add
ss
call
lea
jo
fbld
mov
push
mov
mov
add
add
add
add
or
add
inc
push
add
add
push
mov
push
add
pop
push
push
xor
lcall
pop
pop
push
add
stos
xchg
add
leave
mov
daa
push
andl
or
jo
and
mov
push
add
add
mov
in
in
cwtl
and
mov
mov
inc
add
inc
add
clc
jns
add
jns
jg
test
add
cld
and
dec
rep
loope
inc
xor
add
pop
les
pop
popf
cmp
rolb
adc
add
stos
movb
std
stos
call
ffree
add
adc
add
js
lods
arpl
int3
into
pop
push
add
add
out
add
daa
lcall
add
push
adc
data16
ljmp
add
and
data16
inc
add
call
add
mov
bound
mov
sbb
or
add
push
add
push
add
and
mov
cmpsl
inc
imul
out
mov
or
add
mov
sub
sub
xchg
add
cmp
add
adc
xor
add
mov
arpl
pop
push
add
add
add
xlat
xchg
add
xchg
add
mov
rolb
pushf
lcall
add
add
adc
sub
in
xor
mov
cld
push
pusha
add
add
fsubs
add
add
mov
xchg
push
pop
rolb
mov
stc
repz
icebp
push
xlat
in
lea
add
add
lret
xchg
aam
inc
inc
jns
xchg
add
fstpl
mov
data16
add
add
imul
fildl
push
fsubrs
mov
mov
xor
add
das
into
rolb
push
xchg
test
push
add
inc
nop
add
jmp
test
add
in
mov
mov
jb
mov
lods
push
iret
dec
loop
outsl
scas
rep
test
movb
add
xchg
addb
ljmp
add
data16
add
std
lock
cmp
scas
gs
push
add
imul
mov
dec
lahf
sbb
add
add
add
imul
add
add
pop
les
adc
and
inc
add
add
mov
jne
outsb
cli
jecxz
add
dec
inc
and
cmpsl
xlat
in
bound
mov
fildl
add
add
loop
mov
mov
push
add
mov
loope
inc
add
dec
int
jno
test
lds
mov
or
add
dec
dec
inc
fxch
mov
les
pusha
add
sahf
jne
lods
jg
popa
fldcw
sbb
cmp
mov
stc
stos
ficompl
sti
xchg
das
data16
out
mov
addb
xchg
add
jns
add
cltd
sahf
pop
mov
scas
jae
addb
jae
mov
lcall
cmp
add
mov
mov
add
sbb
add
mov
stos
jo
lret
les
add
mov
xor
mov
add
rolb
pop
xor
mov
inc
add
xchg
loop
mov
popf
repnz
sub
ss
sahf
push
add
mov
sbb
push
add
add
mov
mov
jp
add
inc
add
mov
loopne
add
add
test
ret
rol
add
je
popf
lods
push
nop
add
add
imul
mov
sbb
xchg
stos
je
push
add
xor
rolb
inc
int3
push
add
enter
fidivs
add
add
rolb
lds
add
cmp
add
xlat
jns
test
jle
jp
add
rcl
dec
movsl
sub
mov
add
bound
mov
jmp
add
add
cmp
leave
mov
add
inc
add
add
add
jp
mov
lret
addb
mov
add
pop
cmp
iret
push
test
add
push
xchg
or
mov
push
add
sbb
addr16
jns
inc
add
cld
out
pop
mov
xchg
mov
add
pushf
sub
into
push
add
add
dec
inc
mov
mov
sarl
lock
xor
mov
add
sbb
stos
pop
lahf
jle
jae
or
mov
in
scas
mov
mov
xchg
mov
add
or
add
popa
hlt
add
mov
fwait
adc
test
mov
in
call
ret
inc
add
jbe
pop
fwait
bound
mov
inc
mov
je
or
popa
into
and
mov
imull
insb
stc
popa
xchg
push
add
cltd
addr16
push
mov
cs
sub
std
cmpsb
add
mov
lods
mov
out
lea
add
dec
dec
hlt
add
add
add
push
scas
cltd
jbe
ss
add
adc
daa
stc
mov
sbb
cmp
lods
and
jb
jecxz
rcr
cmpsl
sbb
inc
test
mov
mov
mov
add
mov
jge
sbb
testb
add
inc
add
inc
fucomi
sub
or
add
mov
add
jnp
mov
add
add
js
add
bound
mov
lods
fildll
mov
add
popa
push
add
adc
sub
cmp
add
mov
jge
addl
movsb
add
xchg
sbb
pop
cs
aaa
gs
mov
popf
out
into
test
loopne
fcomip
rorl
sub
pop
cmp
mov
fstps
cmp
test
clc
std
sub
add
ja
add
pusha
add
push
push
add
addb
and
test
pop
cmp
int3
out
push
arpl
mov
cmp
fwait
jnp
pop
jp
fldenv
add
movsb
add
mov
jmp
je
add
add
daa
dec
mov
add
mov
or
mov
jns
add
mov
dec
xchg
xlat
push
jo
cltd
mov
add
clc
jl
out
mov
repnz
loopne
arpl
jmp
push
pop
adc
pop
adc
es
lods
xchg
xor
and
xor
jecxz
add
je,pn
addr16
xor
pop
fcoml
mov
add
add
xchg
add
sub
sbb
lock
push
cmp
outsb
repnz
addr16
inc
add
add
cli
ljmp
add
add
fidivrs
mov
movsl
popa
jmp
leave
mov
inc
xor
data16
add
fists
add
sub
test
cld
mov
out
fsubl
inc
add
pop
cmp
test
push
inc
add
xor
aas
imul
cmp
xor
add
sbb
pop
pop
mov
inc
lods
or
fiaddl
add
daa
mov
pop
adc
mov
xchg
add
xor
push
aaa
ja
cwtl
and
mov
add
cli
je
adc
and
rep
adc
les
cs
insl
add
sub
cmc
pop
inc
add
pusha
add
add
sub
mov
add
add
or
jl
add
arpl
add
push
imul
or
xchg
xchg
inc
add
jge
add
fidivrl
jae
xor
imul
pop
loopne
jns
jne
add
les
cmpsb
add
loopne
test
stos
les
mov
add
cwtl
xchg
into
sub
xchg
add
or
xor
mov
inc
add
cmc
inc
add
imul
jne
adc
in
push
push
add
insb
and
mov
fsubrl
je
pop
push
dec
sub
add
mov
mov
add
lahf
mov
and
mov
xor
jne
into
cltd
inc
add
add
mov
into
push
add
add
gs
rolb
add
aaa
xor
pusha
add
cmpsb
add
fsubr
jmp
mov
add
jle
add
ror
pop
sahf
mov
xchg
adc
push
and
mov
add
sbb
xchg
add
add
mov
std
jmp
sub
add
notl
jbe
push
add
add
add
add
js
cmp
icebp
pushf
clc
jb
mov
fwait
mov
xchg
mov
mov
dec
and
mov
pop
sub
add
add
mov
dec
repnz
movsl
cmpsb
add
pop
data16
in
fsubrp
pop
push
add
lods
push
add
add
add
pop
add
mov
lret
xchg
pop
cmp
xchg
add
in
inc
add
mov
nop
add
add
sbb
hlt
add
add
xchg
cmp
rolb
or
add
pop
ja
leave
movsl
inc
add
pop
cmp
mov
sbb
imul
dec
les
mov
test
out
cmp
cli
test
mov
add
das
movb
dec
js
dec
or
jmp
rolb
repz
pushf
add
or
stos
add
add
push
add
pop
adc
push
push
rolb
aam
and
mov
movsl
mov
movsl
jb
out
outsb
mov
les
add
shll
call
fldcw
lods
mov
add
add
or
push
inc
sbb
dec
addb
int3
sbb
mov
jle
xor
int
add
adc
mov
out
arpl
add
imul
cwtl
jb
lock
jg
mov
add
mov
xchg
addl
std
sti
mull
add
cmp
mov
in
add
add
int3
mov
dec
fisubrl
enter
hlt
add
pushf
ds
sub
lock
test
pusha
add
add
sub
add
push
or
add
xor
add
add
add
and
je
fidivrl
inc
andl
sti
out
sub
les
sbb
pop
arpl
sbb
shrl
add
mov
add
shll
ja
push
rolb
lret
jle
fdivs
inc
add
lahf
xchg
add
int3
xor
add
sub
jg
insb
fcmovbe
xlat
cmc
lock
loop
sahf
aad
pusha
add
add
add
add
add
jmp
loop
xchg
add
in
add
mov
adc
mov
nop
add
dec
mov
push
clc
out
out
add
call
mov
add
cwtl
xlat
fmul
pop
xchg
add
pop
scas
push
fstpt
add
mov
inc
add
add
and
mov
loop
ret
pop
scas
int3
enter
movsb
add
insb
scas
pop
int3
pushf
add
fwait
mov
out
je
add
mov
add
add
add
add
add
in
or
or
inc
js
push
add
jmp
add
testb
add
add
out
cmp
cli
pop
jge
and
mov
lods
mov
add
add
sub
add
xchg
js
fisubs
add
repz
add
sub
daa
in
stos
and
or
cmpsl
mov
icebp
xchg
xchg
lods
push
add
mov
mov
pop
out
and
add
lret
add
add
add
add
mov
add
mov
adc
dec
push
add
adc
push
xchg
cli
sbb
pusha
add
jle
pop
sub
mov
add
add
mov
test
xchg
cltd
mov
call
daa
sbb
add
daa
add
in
cmp
add
add
in
add
mov
movb
add
add
movsb
add
add
mov
aaa
or
add
push
sbb
mov
cmp
add
inc
jne
xchg
add
inc
add
add
add
insb
push
add
mov
mov
movsl
ljmp
mov
repz
add
repz
xchg
mov
fmul
cltd
pop
out
mov
add
jnp
add
ljmp
add
mov
cs
add
sbb
add
add
add
push
idivl
jecxz
xchg
add
mov
lods
lcall
add
fdivs
add
xchg
add
add
add
sbb
add
add
add
mov
push
xchg
add
popa
adc
ret
mov
std
fadd
add
ds
push
add
add
or
sub
cmp
in
leave
bound
mov
mov
cmp
jge
push
add
stos
mov
aas
adc
pop
data16
dec
push
mov
sbb
cmpsl
push
add
xor
push
add
jmp
addl
jb
addb
and
inc
push
jp
dec
adc
add
aas
inc
add
mov
cmp
add
pop
add
mov
mov
movb
int3
mov
je
dec
shll
add
pop
xchg
push
cs
mov
inc
add
add
push
add
xor
mov
fdivrp
push
sbb
add
add
add
add
cmp
ljmp
test
out
adc
ja
push
lods
mov
cmp
fdivl
push
push
add
pop
cmc
and
mov
addb
mov
add
xor
add
pop
cltd
addb
cmp
cmp
add
push
ret
xchg
aaa
iret
cmp
add
inc
pop
lcall
adc
cli
inc
test
mov
sub
loope
sahf
adc
or
add
movsb
add
pop
push
dec
or
add
add
std
dec
imul
push
pusha
add
roll
add
add
add
xchg
fsubr
dec
lods
movsl
lahf
cmpl
add
jecxz
int3
sahf
idiv
shll
jg
add
inc
jbe
cmpsb
add
call
pop
mov
xchg
xor
imul
xchg
add
add
push
add
or
and
cs
xchg
imull
mov
data16
mov
add
mov
mov
add
mov
add
pop
jne
push
add
xor
les
outsb
and
mov
and
mov
daa
rorl
out
pop
adc
dec
pop
sub
push
cmpsb
add
or
xchg
and
sbb
stc
aad
add
jg
scas
gs
lock
rolb
in
add
add
fstl
nop
add
mov
idiv
mov
int
add
mov
add
jecxz
jne
add
jg
add
add
cs
ret
shl
add
mov
add
add
popf
and
std
cmp
inc
add
stos
adc
lahf
xchg
push
lea
xchg
xchg
add
leave
scas
in
ljmp
and
inc
add
and
out
sub
jg
sub
mov
cmp
ret
jb
lret
add
in
xor
and
dec
xor
jg
fcmovnbe
add
mov
fdivl
js
xor
loopne
push
add
nop
add
imul
or
jns
sbb
and
mov
xchg
add
add
dec
lock
add
pop
addb
rolb
mov
incb
or
lock
add
inc
neg
dec
xchg
inc
add
add
add
add
cmp
xchg
jb
and
sub
ret
test
rcrl
add
xchg
and
mov
or
add
add
mov
aam
pop
bound
mov
cmp
add
add
fcmovnu
rolb
cli
xchg
mov
add
cmpsb
add
addb
mov
jae
xor
scas
add
popf
pop
push
sbb
add
outsb
sahf
or
sbb
cmp
mov
dec
lock
pop
add
jmp
add
arpl
add
add
jmp
fstpl
or
inc
mov
mov
mov
les
insb
jecxz
add
ljmp
add
jns
std
mov
testb
adc
pop
std
inc
mov
dec
mov
add
jae
gs
sub
repnz
sub
into
in
pop
pop
xchg
call
add
mov
add
jbe
idivl
push
mov
add
push
add
and
cs
fistpll
fwait
and
aaa
je
mov
push
add
fcompl
add
mov
popa
pop
movsl
movsl
je
das
add
jmp
dec
mov
adc
sub
add
adc
addr16
nop
add
sbb
and
jl
add
mov
roll
add
push
lods
mov
ja
psraw
hlt
add
add
shll
push
data16
inc
add
enter
or
pop
cmp
xchg
xchg
add
mov
mov
jne
pop
dec
add
push
add
incb
iret
mov
test
ret
add
imul
mov
loop
xchg
add
lea
sub
jbe,pt
dec
mov
lcall
lds
jp
add
lret
mov
add
inc
add
pop
xor
leave
push
push
add
add
jns
add
addb
cmp
add
cmpsl
jecxz
xchg
jo
pop
addb
rolb
ljmp
add
mov
rorl
popa
adc
add
shrl
repnz
xor
out
loope
leave
sbb
jp
cmp
or
add
mov
sahf
jnp
add
add
aad
mov
test
je
mov
mov
push
add
jmp
push
lock
stos
xor
bound
mov
add
ficompl
lea
out
mov
lret
add
mov
into
push
les
pop
push
fwait
inc
add
add
add
fildll
pop
sub
push
add
push
insl
jo
movsb
add
push
dec
fdivrp
loope
pushf
bound
mov
test
loopne
into
adc
mov
mov
adc
fwait
movsb
add
push
or
in
gs
les
mov
mov
pop
mov
add
add
repz
fdivrp
and
mov
fldenv
add
movsb
add
push
add
dec
pusha
add
add
xchg
stc
pop
das
outsl
jecxz
fwait
mov
pop
imul
pop
push
popa
pop
sahf
cmp
inc
add
pop
fmul
jecxz
dec
daa
movb
lret
add
add
rorl
add
mov
pop
sti
int3
sbb
jmp
mov
mov
sbb
faddp
add
pop
push
add
jo
gs
add
je
or
add
loopne
mov
rcrl
push
add
cmpsb
add
int
push
add
xchg
inc
add
mov
add
add
add
add
xchg
add
add
xchg
add
add
sub
mov
lret
jbe
push
push
mov
and
cmc
cmp
data16
testb
mov
and
mov
add
mov
add
jmp
je
ljmp
insl
icebp
lret
push
add
fwait
lock
add
mov
push
add
push
add
and
xchg
add
xor
jl
je
inc
add
jecxz
mov
push
add
and
insl
jno
dec
mov
add
stos
test
add
rcrl
iret
inc
add
push
add
add
scas
popa
pop
add
nop
add
add
mov
adc
lds
add
lea
add
add
fisubl
add
les
popl
cmc
call
add
mov
add
add
dec
in
xor
sahf
dec
inc
int
in
stos
push
push
add
add
addr16
cltd
mov
xor
jns
add
or
repnz
frndint
arpl
daa
jp
add
loop
mov
mov
out
add
sub
paddd
fwait
pop
cmp
in
and
add
pushf
mov
std
aas
inc
lea
les
insb
sahf
ret
fldcw
lods
cmp
add
and
sub
lret
xchg
add
enter
add
xchg
fstl
dec
ret
add
add
into
adc
add
push
add
in
xchg
fadds
and
inc
add
inc
lods
std
ljmp
add
adc
ret
cli
testb
stc
push
in
or
cmc
int
inc
aad
add
faddl
mov
insb
sub
pop
cmpl
shll
mov
addr16
data16
push
add
add
ret
adc
test
add
fcoms
clc
add
rolb
repz
movb
inc
add
ljmp
add
pushf
sti
cmp
add
lock
add
sub
ja
add
lret
cld
out
or
inc
sbb
mov
add
add
lods
or
mov
icebp
mov
in
cwtl
in
aas
mov
mov
add
add
add
in
add
mov
add
fxch
arpl
mov
mov
add
push
push
add
add
pop
fidivrs
add
testb
sub
fwait
or
add
cwtl
outsb
inc
add
add
add
cmp
push
add
push
lods
xchg
add
add
push
add
addr16
dec
xchg
add
pop
ljmp
push
xlat
dec
mov
add
mov
mov
push
push
outsl
test
pop
pop
push
dec
xchg
add
es
add
pop
xchg
out
cmc
cli
test
dec
leave
add
popf
ja
arpl
mov
imul
divl
cmp
and
xchg
add
add
dec
xchg
add
mov
add
sarl
add
dec
jecxz
add
addb
add
lret
std
mov
pop
pop
mov
mov
movsl
scas
sti
addb
add
add
addb
mov
add
js
add
cmpsb
add
mov
adc
lahf
add
addl
fiaddl
add
jmp
je
gs
add
push
sbb
jl
xor
xor
mov
add
mov
adc
add
mov
add
add
jmp
cmp
pop
add
or
add
or
sub
add
add
sbb
mov
adc
push
add
xor
jmp
mov
mov
add
fwait
jp
add
pop
loopne
imul
xor
out
mov
jb
fadds
mov
add
add
adc
cli
hlt
add
add
adc
pop
ds
pop
popf
lahf
mov
sbb
add
in
jbe
inc
repnz
aad
xor
cmpsb
add
mov
add
adc
mov
mov
lock
popf
movsl
xor
adc
add
push
les
mov
add
sub
adcl
js
add
xchg
data16
cli
test
out
sbb
faddp
xchg
or
fcom
pop
inc
add
inc
add
and
add
daa
imul
sahf
cli
cmp
cmp
push
leave
je
arpl
add
cld
orl
add
lods
adc
testb
add
mov
in
hlt
add
pop
stc
outsb
nop
add
xchg
testb
mov
sub
add
pop
jg
add
xor
add
mov
sub
addr16
data16
mov
mov
pop
jmp
mov
jge
add
add
pop
mov
dec
rolb
jge
add
leave
ret
xchg
add
lds
inc
lret
bound
mov
sar
adc
cs
cmp
and
jb
mov
loop
dec
insb
or
xchg
sbb
leave
mov
add
add
add
add
loope
push
pop
sbb
xlat
rolb
clc
adc
sti
or
add
sbb
mov
jmp
add
scas
popa
mov
das
adc
push
add
mov
mov
mov
pop
cmc
fwait
mov
add
mov
sub
je
rolb
push
ficompl
imul
mov
xor
gs
mov
add
loop
insl
mov
pop
adc
mov
xchg
cli
mov
call
cmp
add
mov
push
add
push
add
mov
add
ds
add
mov
mov
mov
call
add
add
jmp
xchg
ret
jecxz
imul
add
add
mov
testb
int
mov
addr16
or
aam
sbb
add
jbe
in
xchg
ret
ja
iret
sbb
shll
lea
test
cld
xchg
add
add
fbstp
xor
adc
mov
adc
xor
add
inc
dec
jmp
adc
inc
add
pop
adc
mov
cltd
outsl
stos
inc
add
add
sbb
lret
addr16
add
xlat
rcll
jbe
mov
add
add
push
add
addb
cmc
ret
xor
stos
pop
jmp
gs
mov
inc
sub
mov
addr16
jecxz
add
ljmp
add
sti
xlat
adc
lahf
cli
mov
addl
add
add
popa
leave
and
lret
mov
pop
lret
xor
inc
popa
pop
addb
pop
inc
imul
ds
add
add
add
add
bound
mov
les
pusha
add
add
stc
fildll
nop
add
add
pop
jbe
mov
cmp
fiadds
out
sub
mov
add
jnp
add
fisubrl
lds
jl
xchg
add
push
add
push
addr16
and
add
add
jecxz
lahf
cmc
pop
add
dec
and
mov
add
adc
fidivl
xchg
add
add
popf
push
add
js
mov
sbb
hlt
add
add
push
outsl
jno
ljmp
inc
ds
nop
add
popf
xor
loopne
lret
pushf
and
sbb
add
add
add
ret
inc
jle
pop
add
inc
imul
xchg
jge
mov
mov
lods
jae
add
xchg
mov
add
jno
jno
add
sbb
push
add
xchg
add
add
add
lret
mov
mov
dec
add
jge
in
mov
push
out
push
inc
add
imul
sub
adc
add
adc
hlt
add
add
add
or
ja
adc
faddl
push
add
add
push
xchg
add
inc
out
jno
jnp
int3
sbb
testb
aaa
inc
add
ret
and
mov
add
cmpl
in
rolb
add
mov
add
call
xchg
addb
out
mov
scas
mov
or
addb
add
add
add
add
add
mov
add
ss
push
add
inc
adc
stc
pop
mov
and
add
scas
adc
mov
add
add
sti
idiv
mov
sbb
inc
add
add
pop
lret
push
add
add
inc
add
mov
add
mov
mov
mov
test
inc
clc
jmp
cmpsl
add
add
je
mov
add
addb
or
push
int3
rorl
or
sbb
add
add
test
push
or
xlat
js
pop
adc
xor
mov
add
lods
sbb
adc
addb
movsl
rolb
rolb
mov
add
mov
in
jp
add
jecxz
add
mov
cmpsl
or
xlat
into
inc
add
stos
sub
addb
add
mov
mov
fistpll
lret
push
addb
xchg
rcll
push
add
insl
std
cld
xor
push
add
enter
sub
push
pop
add
fldl
rsm
mov
cmpsb
add
mov
cwtl
loop
add
fiaddl
add
call
dec
lods
or
pusha
add
add
call
sahf
push
add
cltd
outsl
sti
testb
xchg
add
divl
add
add
add
mov
add
pop
insb
mov
xor
or
jle
add
ficoms
dec
jcxz
add
inc
add
insl
adc
add
add
mov
add
cltd
push
loopne
iret
orl
ljmp
add
pop
sahf
mov
jne
or
jge
add
sbb
push
mov
cmp
add
mov
mov
cmc
jp
orl
dec
or
packuswb
push
add
jb
push
inc
sub
jmp
std
in
or
xlat
test
lret
add
sbb
cmp
add
mov
and
mov
add
inc
sub
fldcw
add
pop
add
gs
testb
add
fldt
scas
push
push
add
faddp
dec
or
lea
jl
cwtl
movb
mov
stos
ljmp
and
or
mov
add
and
sbb
add
xchg
jmp
add
insb
lea
jb
dec
inc
mov
hlt
add
mov
add
pop
insl
adc
pop
loop
cmp
mov
leave
ret
ja
movb
add
and
or
add
xlat
test
adc
pop
popa
xchg
rcl
add
pop
jecxz
fsubl
mov
add
jbe
xorl
add
orl
in
je
dec
data16
inc
addr16
mov
je
push
lea
push
jb
mov
loop
lods
loopne
stc
xor
outsl
cmp
mov
jae
jo
push
fwait
loop
movb
add
add
add
pop
mov
add
jo
pop
mov
shll
sbb
jge
push
mov
rolb
ljmp
adc
add
js
add
or
mov
mov
aad
add
test
in
scas
rolb
aaa
daa
jmp
test
xor
sub
add
add
leave
stc
sub
add
call
stc
jg
add
insl
pop
sbbl
pop
notl
inc
add
and
mov
sbb
enter
mov
lcall
jae
push
fstpl
add
mov
in
sbb
xor
mov
dec
lret
jge
mov
aas
loopne
jb
xchg
add
jnp
and
mov
fildl
push
mov
ja
cs
out
loope
dec
push
add
lret
adc
sub
add
nop
add
pop
xchg
test
insl
inc
add
loop
sbb
das
mov
stc
and
mov
test
inc
add
or
inc
mov
jg
add
inc
add
add
loope
mov
iret
aam
xchg
cli
in
call
jno
mov
scas
xorl
mov
add
jnp
push
jge
lock
cli
lods
sub
jge
sub
mov
out
push
inc
add
adc
fcom
add
sub
adc
dec
jmp
add
push
pop
sub
add
inc
add
xor
addb
aad
add
sbb
mov
into
les
inc
add
mov
add
add
call
and
mov
adc
rolb
xor
pop
jb
add
jne
aaa
jbe
jl
popf
stc
je
mov
xor
movsl
adc
daa
fmul
pop
idivl
icebp
icebp
add
add
push
cmpsb
add
js
add
jae
add
mov
pop
pusha
add
add
pop
loopne
and
and
add
insb
adc
mov
arpl
add
jbe
test
out
pop
pop
movsb
add
add
jae
add
cli
scas
mov
push
add
fucomi
std
push
add
push
pop
call
mov
add
ret
stc
cmp
mov
fldl
aas
mov
add
add
xchg
fdivrl
hlt
add
gs
rolb
add
add
fcompl
jb
lea
pop
outsl
sub
or
aas
xchg
add
les
in
add
add
add
mov
add
add
jmp
testb
add
add
outsb
lahf
pop
xor
fwait
aas
pop
inc
add
test
int
sub
sbb
rolb
jg
ds
fdivs
popf
add
cld
jmp
mov
sub
mov
jns
je
test
in
cmpsb
add
add
adc
mov
or
cli
xchg
mov
add
mov
pop
xor
loopne
push
cmp
dec
mov
mov
dec
add
push
ret
pop
pop
cmp
ljmp
jp
add
add
aad
dec
repz
cmp
fists
mov
je
cmp
jge
sub
or
mov
push
add
fisttps
inc
add
cltd
mov
int3
dec
mov
add
add
mov
incb
add
mov
in
add
pop
push
push
add
push
jmp
insb
pop
pop
mov
into
addb
addl
add
mov
add
jns
dec
jno
inc
add
mov
out
add
and
mov
lret
push
cs
add
das
sbb
inc
add
jb
frstor
pusha
add
add
add
adc
ret
and
mov
mov
dec
out
jno
mov
testb
pop
jmp
push
add
add
fld
add
js
push
rolb
add
push
add
sub
add
cmp
add
mov
subl
add
mov
lret
lret
out
or
lods
push
add
add
cmc
fstpl
dec
jbe
jecxz
or
xlat
add
jg
add
nopl
mov
inc
add
jne
out
add
out
decl
dec
jo
out
ds
add
or
cld
mov
lret
add
sub
lahf
sub
add
jecxz
xor
push
add
add
or
mov
pop
int3
lods
adc
mov
ss
add
add
add
push
pop
daa
cmpsb
add
int3
add
insl
sahf
and
mov
add
out
lret
scas
pop
insl
das
cmpl
testb
nop
add
fisubrl
icebp
lret
add
add
stos
pop
push
adc
xchg
xlat
jbe
addb
filds
daa
popa
repz
jp
fdivl
out
aad
in
je
xchg
jbe
stc
rolb
pop
testb
add
sub
mov
arpl
mov
add
xor
aam
in
rolb
add
outsb
xchg
add
adc
arpl
out
mov
add
and
and
add
repz
add
add
add
xchg
fdiv
adc
movb
add
mov
or
add
xchg
add
add
mov
adcl
outsb
pop
in
cli
inc
add
push
mov
add
and
add
addb
testb
add
sti
add
pusha
add
add
cmpsb
add
xor
cwtl
jno
pusha
add
sarl
roll
mov
pop
pusha
add
cli
sub
and
fldl
int3
mov
add
add
shld
dec
icebp
pop
iret
jecxz
ret
scas
lcall
mov
cmp
or
add
add
xchg
add
add
dec
mov
addb
ss
add
adc
push
dec
dec
cmp
add
mov
add
ficoml
adc
add
and
das
sub
mov
and
mov
das
rolb
lret
pop
inc
xlat
xchg
add
sub
add
add
inc
cmp
iret
mov
push
adc
dec
std
outsb
jns
add
xchg
add
mov
xchg
lcall
out
test
push
add
movsl
or
data16
or
add
pcmpgtw
dec
jbe
movsl
add
adc
rolb
add
mov
mov
mov
fimull
or
dec
and
movsb
add
push
pop
push
add
mov
and
in
xor
mov
add
mov
clc
jmp
bound
mov
mov
add
add
lea
test
leave
pop
add
ficompl
add
ret
faddp
dec
rcrl
mov
mov
shll
sub
enter
pop
dec
pop
cmpsl
sbb
push
mov
cmc
in
jl
inc
test
add
scas
dec
sbb
add
hlt
add
mov
sub
and
mov
mov
je
outsb
fsubl
xchg
add
pushf
sbb
add
add
and
jl
or
mov
shl
pop
iret
push
add
add
add
mov
mov
sub
mov
jp
ret
lods
dec
push
add
add
add
fimull
add
mov
mov
lcall
mov
pop
cli
pop
cmp
loop
fnstcw
lea
clc
popf
jae
jge
mov
jle
or
add
pop
add
mov
lods
and
mov
repz
push
aam
fwait
shll
add
sbb
add
add
daa
and
mov
add
loopne
push
sbb
cmpsl
lea
in
jge
insb
test
in
jae
add
mov
insb
js
add
add
add
dec
inc
add
add
xchg
add
jle
sub
xchg
cmc
ret
adc
outsl
mov
mov
xchg
add
test
cmp
aaa
jne
fnstcw
mov
sbb
mov
sub
and
sbb
sbb
add
testb
fwait
jp
ret
add
mov
xchg
out
sbb
add
cmpsl
sub
xor
insb
sub
addr16
push
testb
adc
jge
mov
mov
sbb
add
mov
add
push
add
add
or
pop
call
enter
add
hlt
add
add
test
icebp
or
cld
andl
lods
and
test
mov
inc
add
pop
add
mov
cmp
testb
add
pop
fdivrs
add
or
xchg
add
xor
mov
jb
hlt
add
lea
xor
cmpsb
add
int
pop
loopne
xchg
out
add
cs
fstl
adc
rolb
das
test
mov
add
add
add
or
xchg
add
or
rcrl
push
add
xor
movsl
jl
push
fldcw
mov
add
stos
jbe
cmp
add
add
mov
pop
dec
xchg
ret
gs
add
mov
push
add
loope
mov
aam
repnz
arpl
adc
rolb
and
mov
clc
mov
xchg
add
sarl
pushf
jecxz
cmp
add
and
mov
xor
lods
mov
push
add
and
and
xchg
add
shll
enter
add
add
push
std
mov
adcl
ret
ret
add
jge
ret
nop
add
pusha
add
mov
push
inc
aaa
cmp
adc
cmpsb
add
add
jno
jp
in
add
sti
push
add
jg
add
and
mov
cmp
jle
xchg
add
mov
add
gs
add
jge
or
test
mov
add
and
rcrl
add
cltd
adc
xor
add
add
add
mov
inc
xor
pop
jp
mov
cli
test
or
jno
addl
add
mov
jmp
mov
add
pop
addb
loopne
lahf
testl
add
adc
add
movsb
add
leave
cmp
add
or
fnstsw
mov
popl
xor
js
ljmp
add
dec
jmp
pcmpgtd
lea
addb
rolb
add
inc
jno
lret
sbb
xchg
or
add
sbb
xchg
add
lock
testb
cs
sbb
mov
push
adcl
repnz
add
add
xor
jle
mov
push
add
add
cs
add
mov
clc
jb
test
add
ret
loope
into
mov
hlt
add
add
mul
sub
add
mov
fidivrs
adc
push
jns
jbe
mov
add
int
add
add
add
outsb
insl
add
add
adc
imul
or
add
xchg
inc
add
add
loope
cmp
inc
pusha
add
mov
mov
sbb
xor
stc
add
cld
sub
adc
call
mov
popf
sarl
lahf
fistps
xor
fcompl
iret
popf
sahf
bound
mov
push
lret
popa
ret
test
out
mov
push
js
add
jno
add
aaa
sbb
add
repz
int3
in
add
mov
add
sahf
cmp
sub
mov
add
in
inc
and
mov
in
cwtl
push
lahf
xchg
add
add
sub
addb
out
fwait
xor
mov
jb
inc
stc
sub
les
mov
mov
jecxz
sbb
add
dec
sbb
cmp
or
add
add
add
add
add
add
mov
dec
cmp
mov
mov
inc
int
in
lret
mov
cmp
add
add
jb
pusha
add
call
add
dec
adc
mov
lahf
push
pop
fwait
movl
testb
ret
xor
add
add
inc
add
push
sub
sbb
push
and
mov
xchg
add
add
mov
adc
bound
mov
mov
add
data16
push
pop
in
mov
stc
sbb
add
je
xchg
incl
imul
xor
fincstp
cmpsb
add
imul
add
add
add
dec
push
xchg
add
xor
fsubrs
sub
mov
mov
add
jne
pop
popf
idiv
aas
xchg
add
mov
or
dec
mov
add
imul
jl
push
add
push
movb
out
loopne
dec
mov
pop
cmp
add
dec
lcall
add
fimuls
popa
inc
add
xchg
add
add
add
or
icebp
sbb
sbb
mov
lods
push
add
sub
cmc
cmp
pop
xlat
cmc
movsb
add
add
pusha
add
xor
add
fcmovnbe
add
mov
ljmp
xchg
scas
push
scas
stos
mov
add
xlat
rorl
add
and
mov
add
xchg
mov
add
sub
mov
cld
fsubr
test
testb
and
add
add
xchg
mov
or
xchg
add
add
in
mov
add
xchg
add
cmp
add
icebp
sti
or
add
add
rolb
xchg
sbb
add
pop
ret
cltd
pop
jl
add
mov
add
add
popa
aam
in
jne
add
add
int
add
mov
aaa
inc
add
ja
jo
enter
sbb
mov
and
mov
mov
in
push
add
scas
mov
mov
outsl
cmpsl
rolb
mov
add
add
add
testb
mov
data16
rolb
sbb
xchg
add
aam
adc
lcall
mov
rolb
add
mov
inc
add
add
pop
sbb
sub
inc
add
add
aaa
cmp
fsubs
add
sub
push
add
add
add
mov
repz
jno
pop
into
outsb
add
lret
lret
jl
add
add
mov
xor
mov
hlt
add
xor
stos
clc
imul
addb
arpl
ret
add
rolb
adc
inc
std
sbb
xchg
add
scas
or
pop
and
adc
inc
fwait
jp
cld
sbb
add
mov
add
mov
push
lret
adc
mov
jb
cld
jb
push
add
fimull
or
mov
cmpsb
add
mov
add
movb
add
imul
dec
pop
aas
xchg
cmc
or
add
inc
add
lods
stc
inc
cmp
add
add
add
add
outsb
inc
mov
aam
loope
xchg
outsb
pop
pop
mov
test
mov
outsl
imul
push
movb
mov
sub
add
aad
add
mov
and
add
fadd
push
add
lret
movsl
inc
add
divl
aam
stos
mov
cli
rcll
dec
imul
imul
cmp
dec
int3
inc
add
int
add
add
push
add
and
mov
add
lcall
movsl
ficoms
pop
inc
push
add
movsl
sub
mov
mov
jo
xchg
fsubs
mov
sub
and
pop
cli
movsl
jae,pn
test
arpl
mov
dec
xor
add
xchg
push
add
cmp
cmc
inc
scas
pop
ds
add
shl
add
dec
in
mov
add
add
pushf
inc
les
xor
cmp
add
jae
movb
cmpsl
mov
add
push
loop
testb
xchg
pop
jo
popf
pop
ljmp
dec
inc
add
add
add
sbb
pop
in
xor
sahf
xor
push
xchg
cmp
ja
add
scas
les
push
jp
add
lea
fidivl
cmp
mov
jb
push
je
mov
sbb
push
add
fneni(8087
add
mov
into
hlt
add
pop
repnz
jecxz
mov
jo
dec
or
dec
xor
add
daa
xchg
xor
pop
sbb
and
je
mov
add
ja
sbb
jne
and
add
add
clc
or
adcl
sub
mov
add
fstp
and
test
cmp
adc
scas
in
aad
inc
mov
imul
rolb
repnz
in
mov
jecxz
imul
pop
or
testb
mov
call
add
mov
lea
and
add
xchg
jle
add
push
add
push
add
jmp
pop
enter
add
add
add
jecxz
and
mov
add
loopne
xor
inc
xchg
outsl
out
jg
lret
bound
mov
add
mov
add
add
out
add
mov
and
xchg
mov
in
testb
add
and
mov
sbb
mov
sahf
mov
mov
fcmovu
xor
lret
out
lahf
mov
add
loop
pop
fnsave
and
lock
popf
mov
sub
add
orl
push
add
sbb
adc
insb
add
ds
add
sbb
and
add
int3
js
imul
pop
xchg
jae
jnp
push
je
cmc
cld
jae
int
add
pop
inc
bound
mov
add
add
mov
add
add
add
stos
inc
add
icebp
dec
mov
sub
inc
add
fbstp
jbe
imul
xlat
mov
fcompl
mov
in
push
lods
inc
add
xchg
mov
jg
jne
xchg
pusha
add
inc
daa
mov
repz
mov
add
add
add
pushf
jbe
jmp
add
mov
cmpsl
cmp
add
cltd
dec
and
out
mov
add
add
add
dec
cs
pop
lods
mov
mov
fisttpll
cmp
testb
or
repnz
add
add
addb
jbe
fwait
ret
data16
pop
in
sti
lock
inc
add
ret
adc
movsb
add
sbb
fcoms
mov
sti
xor
or
icebp
xorl
test
jnp
inc
add
lahf
test
or
add
add
cltd
sbb
add
mov
add
add
mov
lret
push
push
add
add
or
add
sbb
ret
addl
stos
fimull
push
add
add
push
add
add
jecxz
lcall
lods
pop
adc
into
mov
data16
data16
and
mov
mov
cltd
leave
push
add
xor
scas
and
adc
and
dec
sub
add
out
jns
add
add
mov
sub
add
add
or
in
add
mov
add
add
pushf
test
push
add
xlat
adc
inc
add
fdivl
int
rcll
push
jmp
stos
pop
add
rol
add
in
xor
push
add
add
jne
xor
cmp
push
out
outsl
lods
mov
mov
push
mov
xchg
add
add
fistl
add
scas
aad
add
daa
inc
cwtl
outsb
inc
push
mov
clc
pop
lea
cld
lret
mov
adc
out
and
mov
xchg
imul
add
add
xor
push
add
and
mov
insb
shll
add
add
sti
push
into
js
xchg
test
icebp
inc
lret
add
sub
orl
add
add
add
fildl
fbld
test
lret
clc
test
pop
in
rolb
cmp
add
int3
or
add
jg
add
mov
mov
push
sbb
add
jne
leave
test
add
push
jnp
std
rolb
mov
data16
data16
pop
xchg
add
sub
push
add
lret
enter
and
mov
adc
andl
sbbl
hlt
add
repz
sbb
lahf
outsb
lock
in
ja
add
cmpsl
mov
add
call
cmp
cmc
or
add
imul
add
xor
add
xchg
loope
fidivl
bound
mov
add
pop
xchg
add
daa
sbb
fdivl
cmc
add
mov
pushf
add
add
mov
jnp
pusha
add
pop
jp
add
and
dec
xchg
add
jecxz
add
mov
jns
ja
mov
add
inc
add
mov
rolb
lods
adc
mov
and
mov
xchg
add
lret
ret
xchg
out
adc
rolb
fsubrl
dec
lds
mov
add
hlt
add
dec
jns
push
add
faddl
add
lods
out
rolb
out
mov
movb
jbe
test
dec
stos
cmp
dec
xchg
add
fiaddl
add
add
outsb
cmp
add
add
pop
addb
data16
insl
xchg
stc
dec
ret
ja
xchg
or
lods
xchg
add
add
add
add
add
add
lea
dec
pop
popf
jb
xchg
mov
pop
aam
ret
cmp
es
or
add
shll
jb
pop
aam
cmpsl
mov
xchg
add
add
add
add
mov
lcall
cwtl
cld
cltd
dec
xchg
cmpsl
mov
test
inc
ret
and
add
inc
and
mov
bound
mov
jns
add
cmpsl
sbb
add
lods
cli
pop
mov
int3
mov
fstpt
add
add
fistpll
add
dec
mov
jl
add
rolb
test
xchg
inc
add
fsubp
add
or
and
inc
dec
push
push
add
sbb
mov
scas
rcrl
dec
fisubrs
sub
gs
mov
push
add
int
add
xor
movsb
add
dec
add
mov
mov
add
mov
mov
into
lret
out
mov
sub
cltd
or
sub
int3
aam
cmp
or
ss
add
add
outsl
cmp
cmp
imul
jnp
les
jle
iret
dec
shll
xchg
das
in
cmpl
cmp
jmp
decb
jae
iret
push
add
int3
pop
jecxz
lock
bound
mov
add
push
cmp
add
add
add
add
popf
test
add
push
add
jne
movb
add
xor
push
add
jo
in
add
mov
fldt
adc
sbb
add
jo
push
test
testb
add
in
push
push
pop
and
rolb
mov
insl
or
add
movb
lret
lret
pop
lea
outsb
mov
lret
fstl
rolb
out
add
scas
insb
and
add
insl
movsb
add
repnz
pop
rolb
adc
inc
add
add
add
loopne
or
in
add
subl
je
adc
cmc
test
std
add
jecxz
rolb
mov
aaa
clc
rolb
add
stos
xor
mov
cmpsl
add
mov
int3
stc
and
push
add
add
jmp
push
pop
test
add
add
test
negl
cmc
bound
mov
fistpll
repz
add
jb
push
fldt
dec
jg
js
hlt
add
outsb
outsb
insb
nop
add
add
rolb
cmpsb
add
std
je
mov
fwait
std
ljmp
mov
xchg
leave
adcl
add
sub
sbb
add
add
add
fidivrs
add
push
add
adc
ljmp
add
cmp
add
xchg
sti
movb
outsl
out
cmp
push
inc
add
xchg
add
mov
push
add
or
add
and
mov
add
rolb
cmp
mov
pop
push
add
add
sahf
jle
jae
in
sbb
and
or
jecxz
in
or
sbb
data16
add
popa
or
stc
insb
ja
lods
repnz
addb
or
add
mov
add
add
hlt
add
add
push
add
dec
std
add
cltd
inc
das
push
add
add
lock
add
fildl
push
aad
cmpsl
lods
cmp
loope
mov
pop
jb
jl
cmp
fisubs
add
insb
add
mov
cmc
cmp
pushf
jl
or
push
add
pmaxub
mov
xlat
pop
daa
mov
mov
orl
add
sbb
leave
xchg
adc
mov
mov
fsin
push
add
add
add
mov
loop
jae
leave
mov
decl
pop
test
sbb
lods
mov
sbb
add
xchg
add
shll
mov
mov
inc
add
add
xor
in
pop
adc
push
sbb
xchg
rolb
sub
and
mov
sub
rolb
test
xadd
aaa
mov
das
das
js
xchg
add
addb
push
or
xchg
popa
sbb
stos
testb
add
add
jb
insb
rorl
add
add
jnp
popf
out
add
add
inc
out
jl
lss
mov
addb
pop
push
add
decb
xchg
in
mov
je
nop
add
cltd
adc
adc
xor
and
mov
loope
imul
mov
xor
mov
cs
xor
loopne
cmp
add
ret
in
call
mov
pushf
or
or
and
xchg
xchg
adc
adc
repz
add
mov
add
add
push
xchg
add
in
cltd
sbb
scas
adc
or
adc
iret
sbb
mov
sub
cs
call
cmpsb
add
add
movsb
add
bound
mov
mov
aad
mov
pusha
add
pop
clc
adc
inc
xor
outsb
adc
pop
mov
xor
sub
pop
jp
data16
scas
xor
add
add
add
add
add
add
add
data16
add
dec
roll
xor
add
add
decl
sub
add
repnz
pushf
xchg
add
add
rolb
lods
xchg
pop
test
inc
dec
das
xchg
add
cmp
and
mov
loopne
cmp
neg
mov
lods
or
cld
popf
inc
add
fcompl
rolb
cmp
add
add
jle
add
xor
testb
add
add
jmp
and
add
data16
add
add
mov
mov
clc
aas
pop
lods
cmp
add
add
jecxz
add
lret
mov
ljmp
addb
hlt
add
add
test
cmp
loope
add
add
mov
fimull
sub
ret
sub
rolb
ret
jp
jecxz
add
mov
cld
jae
add
cmc
sahf
and
mov
xlat
cmp
mov
mov
aaa
fsubrl
ljmp
add
outsl
imul
inc
jl
scas
pop
dec
add
enter
adc
mov
pop
movb
add
mov
add
add
add
repz
leave
insl
jmp
or
mov
xchg
add
inc
add
cmc
add
sub
pop
imul
push
add
adc
mov
add
out
jns
add
mov
negl
mov
pop
mov
enter
scas
fnstsw
lods
xor
mov
into
xor
call
add
idivl
mov
int3
pop
xor
pop
fstl
add
add
add
sub
add
in
cltd
cli
sbb
sbb
stos
cmp
testl
rolb
ja
repnz
xchg
add
mov
in
jno
pop
xor
fnstsw
mov
lret
lret
cmp
test
cld
pop
mov
xchg
add
test
xor
add
inc
cmp
in
inc
add
std
push
lods
mov
add
dec
cs
add
sbb
add
lds
and
mov
imul
rolb
ljmp
add
insb
sbb
sbb
sahf
fucomip
addr16
sti
sub
inc
addb
pushf
jno
sbb
add
je
mov
sbb
add
nop
add
sub
lds
pusha
add
addb
jnp
jge
dec
repz
xchg
adc
data16
add
mov
in
rolb
dec
mov
pop
jmp
lods
or
rolb
test
mov
cmp
jno
and
test
add
add
out
mov
add
arpl
pop
ljmp
pop
ret
lods
adc
mov
pusha
add
fbld
add
add
cmp
rolb
shrl
adc
dec
cmp
imul
pop
jmp
lret
pop
movsl
std
dec
adc
jno
lahf
cmc
xchg
sti
ss
imul
inc
add
adc
loop
adc
push
mov
fcomps
roll
mov
add
movb
add
mov
pop
aam
mov
ss
add
dec
pop
jl
and
dec
fwait
hlt
add
inc
scas
nop
add
add
nop
add
sub
mov
add
push
add
cli
sub
lea
test
cli
jnp
leave
xchg
xchg
xor
xchg
add
add
das
sbb
add
bound
mov
dec
and
mov
in
add
cltd
leave
pop
pop
pop
movsb
add
add
add
xor
add
movsb
add
push
add
cmp
rcrl
pop
inc
mov
popf
pop
jmp
add
inc
mov
mov
add
and
or
push
or
xchg
xlat
and
int
or
mov
mov
mov
mov
add
in
dec
das
or
dec
jle
movsb
add
add
cmp
mov
mov
daa
pop
movb
add
bound
mov
adc
jo
pop
xchg
add
mov
add
cwtl
cmpsb
add
subl
js
add
rolb
rolb
sbb
ret
out
aaa
and
mov
add
xchg
add
divl
or
aaa
rolb
cwtl
or
add
mov
mov
mov
pop
and
mov
inc
xor
cmc
push
xor
lods
shll
add
add
add
or
add
cmc
outsl
inc
arpl
in
rolb
les
push
and
mov
add
loopne
cmpsb
add
add
add
out
ljmp
add
jecxz
enter
lcall
adc
xchg
loope
pop
mov
xchg
add
ds
and
pop
js
sbb
add
sbb
add
mov
adc
xchg
add
mov
inc
mov
fdivl
lea
rolb
add
mov
sub
add
add
mov
or
sti
xchg
add
mov
mov
add
in
push
mov
mov
es
aaa
pop
pop
testb
add
pop
sbb
aas
stos
jecxz
add
test
add
testb
leave
loop
jecxz
fdivs
push
mov
add
mov
add
rolb
mov
into
clc
pop
mov
add
add
push
adc
cmpsl
loop
rolb
roll
scas
stos
testb
add
xor
fisubrs
testb
inc
jno
add
xchg
add
sub
and
rolb
xor
into
pushf
fwait
xchg
add
push
add
xchg
jnp
cwtl
addb
mov
in
jno
jle
jno
bound
mov
mov
cwtl
adc
fsubrl
lea
out
add
xor
mov
cld
mov
mov
aas
dec
aam
and
add
cltd
xchg
dec
push
pushf
lods
les
je
cltd
test
add
cmc
jge
add
mov
push
sbb
scas
lea
add
cltd
adc
dec
addb
push
add
add
std
aaa
cltd
push
adc
pop
mov
testb
jbe
mov
std
in
pusha
add
add
add
mov
aad
add
mov
icebp
cmc
sub
push
push
fcompl
or
icebp
cmp
push
es
rolb
inc
das
ret
fwait
push
add
lods
shll
add
add
into
cwtl
xor
add
jno
dec
inc
inc
add
add
stos
push
add
cli
shl
add
outsl
scas
push
jno
push
sub
add
add
and
mov
in
push
add
mov
push
outsb
loope
adc
inc
pop
pop
loope
add
add
mov
mov
add
sub
popa
adc
sbb
loope
test
outsb
mov
xor
pop
mov
or
sbb
and
add
les
xor
dec
mov
addb
add
inc
add
add
decb
fcmovne
roll
or
dec
repnz
fldt
push
addb
mov
add
or
inc
add
add
cmp
fwait
cmp
dec
sbb
imul
sbb
rolb
int3
out
jbe
outsb
js
fdivl
add
int
push
dec
sti
call
mov
add
in
mov
aas
aas
jmp
or
add
shll
xor
aad
add
aas
les
in
xor
imull
mov
add
add
inc
add
mov
bound
mov
adc
mov
pop
pusha
add
mov
rcll
adc
subl
xor
out
lock
add
bound
mov
adc
add
pop
neg
mov
dec
in
pop
out
int3
mov
add
add
aas
hlt
add
pop
inc
add
add
cmp
negl
add
pop
dec
cmp
scas
lahf
add
add
std
add
ja
add
add
add
adc
std
aaa
inc
add
add
icebp
fldcw
dec
or
add
add
add
mov
dec
or
add
outsb
in
and
mov
xor
mov
cmpsl
jne
ret
mov
xchg
add
xchg
add
mov
cld
cmp
push
add
add
add
add
ljmp
xchg
add
jp
add
mov
add
and
enter
add
clc
ret
push
inc
add
add
add
mov
fnsave
in
mov
fcomps
add
cmp
sbb
jnp
mov
int3
scas
adc
xor
enter
in
mov
inc
add
add
test
xchg
adc
mov
leave
out
push
add
in
add
inc
add
and
mov
dec
add
gs
test
push
in
in
out
mov
push
jbe
push
or
xlat
mov
mov
add
add
add
lea
cmp
in
and
mov
sahf
pop
imul
jge
add
popf
sub
mov
add
into
cltd
pop
mov
or
aam
lock
adc
jae
add
add
fdivl
outsl
loope
add
cwtl
aas
dec
clc
pop
sbb
add
add
addb
adc
test
add
popa
fstl
add
add
xor
js
daa
adc
mov
adc
add
lret
ret
xor
incl
fs
pop
ljmp
shll
mov
stos
xchg
rolb
cmp
fwait
push
mov
mov
jnp
push
add
into
add
mov
mov
sar
add
testb
add
pop
sbb
mov
fsubrl
jg
leave
push
adc
lods
into
rcrl
add
add
lods
jns
cmp
shrl
iret
push
pop
stos
mov
pusha
add
add
pop
mov
addl
add
add
ds
add
add
add
imul
rcrl
loopne
push
add
jecxz
mov
rolb
mov
add
add
or
lods
faddl
mov
add
add
rcl
in
nop
add
cmp
cld
scas
or
sti
sub
cmp
pop
add
mov
jae
jmp
add
testb
add
push
add
sub
add
mov
std
repz
mov
mov
jae
cmp
xchg
pop
std
add
mov
test
orl
add
jns
sub
add
xchg
xchg
add
add
mov
rorl
add
dec
sub
cmp
push
add
xchg
add
push
add
popf
inc
add
push
add
mov
add
loop
repnz
ret
jo
mov
movsb
add
mov
adc
lret
or
adc
mov
daa
leave
rolb
lret
sub
fisubs
inc
and
mov
add
add
cmp
sub
idivl
cli
mov
aad
mov
xor
fcmovnbe
add
scas
rcrl
mov
scas
fisttpll
aas
pop
lds
pop
mov
jle
add
leave
inc
xchg
add
add
add
xchg
leave
or
lods
and
add
out
add
in
out
add
mov
fnstsw
rolb
mov
dec
push
addb
addb
add
imul
movsl
test
sbb
fmuls
ret
jl
lods
push
in
addb
jmp
mov
mov
xchg
scas
in
mov
cmc
rol
add
add
enter
cmc
push
add
mov
pusha
add
mov
mov
mov
add
sub
add
mov
scas
push
inc
add
add
push
add
ror
sub
testb
repz
addr16
int3
add
add
jg
add
add
sbb
roll
add
je
ss
add
jne
add
mov
repnz
jns
add
add
notl
lahf
repz
mov
mov
add
and
and
mov
cltd
call
pop
push
add
ret
jg
clc
cld
inc
add
adc
xor
and
cwtl
test
arpl
add
xchg
pop
or
call
stos
push
add
add
mov
xchg
addb
inc
add
lahf
pop
pop
xor
add
mov
add
test
sahf
pop
sub
dec
add
popa
mov
cmp
icebp
inc
jmp
jae
add
sub
lret
insl
loopne
lods
test
or
fst
add
mov
add
add
sub
add
xlat
movb
xchg
add
or
xchg
loop
repnz
or
movb
add
add
mov
rcrl
ljmp
mov
jns
and
add
lcall
mov
in
repnz
or
add
dec
pushf
imul
lock
sahf
enter
add
in
aam
mov
testl
jecxz
movsl
sti
dec
lods
xchg
test
mov
pop
test
orl
add
add
mov
fisubrl
push
add
pop
add
rolb
fcoms
add
jo
sub
add
mov
add
add
es
add
andl
or
in
jl
and
mov
add
insb
cmp
scas
cmp
push
lods
sub
lock
add
add
push
sub
xchg
add
add
lcall
add
lods
jge
add
clc
loope
mov
add
add
mov
jg
fwait
push
add
sbb
add
int3
loop
sub
sahf
mov
add
sbb
add
add
rolb
je
fistps
scas
in
pop
fidivl
mov
in
test
or
and
mov
and
mov
mov
lods
dec
repnz
lock
sub
add
add
xchg
add
add
sub
mov
lahf
addb
add
nop
add
push
enter
add
add
inc
test
or
mov
mov
xchg
rcrl
jo
test
mov
or
push
sahf
jne
stos
call
add
add
dec
sahf
pop
or
add
mov
cmp
adc
ret
arpl
add
stos
sub
mov
add
nop
add
mov
inc
out
rolb
xlat
notl
pop
insb
roll
repnz
dec
mov
aad
cmp
add
add
mov
popf
add
and
nop
add
lcall
add
xor
clc
clc
and
out
inc
push
add
mov
xchg
pop
xor
mov
les
add
mov
add
test
bound
mov
mov
out
jge
add
lcall
out
mov
xor
mov
arpl
push
add
add
add
movsl
mov
mov
lds
hlt
add
enter
add
sub
jae
icebp
jg
gs
fucomp
mov
jge
int3
sbb
std
popf
dec
and
push
mov
imul
popa
cmp
xor
xchg
and
mov
or
or
jle
dec
mov
add
or
dec
xchg
cli
xor
and
mov
push
add
jno
loopne
movsb
add
enter
cmp
xchg
out
loop
pop
push
aam
push
add
in
and
add
add
and
add
or
add
mov
add
addl
push
mov
add
mov
enter
mov
add
test
sub
jg
add
popl
pop
and
inc
add
and
mov
add
je
pop
jle
mov
jle
mov
mov
add
insl
mov
jnp
add
clc
inc
add
add
out
add
pop
push
add
xchg
add
mov
add
sbb
out
adc
add
inc
and
mov
lds
jnp
icebp
mov
inc
inc
sbb
add
cs
add
or
mov
push
add
push
mov
ficompl
in
in
and
adc
adc
ljmp
add
call
add
add
cltd
aas
rolb
bound
mov
out
fldt
xchg
pop
pop
ror
dec
mov
je
sub
loopne
jl
dec
dec
popf
mov
cmp
xchg
add
add
mov
xor
cld
test
lahf
mov
stos
lods
sub
add
adc
sub
insb
mov
iret
ficomps
iret
sub
add
in
add
mov
in
xchg
add
cmp
or
mov
scas
mov
add
xchg
add
test
jo
sub
adc
loop
call
insl
js
mov
add
add
add
add
iret
enter
ds
ret
mov
mov
add
sub
push
jmp
add
add
add
mov
add
les
xchg
addr16
sahf
push
sbb
push
mov
mov
or
add
ret
out
xchg
add
dec
call
dec
fistl
push
add
or
inc
push
add
mul
add
add
lods
ds
pushf
stos
test
add
pop
xchg
pop
mov
add
mov
and
mov
add
or
insl
or
push
add
add
add
fs
mov
pop
pop
mul
fmulp
mov
imul
xor
inc
add
rorl
lahf
pushl
jmp
add
mov
int3
mov
add
add
rolb
add
jb
aas
and
and
xchg
add
outsl
int
add
jae
add
add
add
sbb
adc
dec
dec
dec
gs
pop
ss
sub
add
pop
dec
sti
je
jne
add
gs
repz
out
pop
cli
pop
and
inc
enter
add
push
add
mov
loopne
push
add
mov
inc
dec
pop
movsb
add
xor
aad
dec
xchg
add
xchg
filds
push
sti
sbb
imul
inc
sub
push
add
fistpl
inc
push
add
add
rolb
out
cltd
nop
add
cwtl
imul
mov
inc
stos
pop
mov
mov
add
add
sub
add
add
mov
cmp
add
and
dec
bound
mov
add
add
dec
xchg
xorl
fidivrs
mov
leave
mov
repz
push
add
jmp
gs
mov
cmp
ljmp
mov
add
sub
adc
sbb
insl
subl
mov
mov
cmp
push
push
add
fcmovnbe
test
add
add
add
rol
add
add
pop
cwtl
fdivrs
jo
inc
adc
pop
aad
in
push
sub
inc
arpl
jo
repnz
or
add
int3
and
mov
dec
mov
inc
sub
mov
inc
add
inc
rolb
loope
fwait
inc
sti
sahf
inc
add
testb
pop
pop
push
test
sbb
add
dec
xchg
adc
addb
cltd
add
mov
das
inc
adc
es
inc
add
insl
jmp
mov
push
pop
lret
cmc
cmp
decl
jg
xchg
add
jg
inc
add
hlt
add
pop
in
add
stc
mov
pushf
xchg
add
add
pop
stos
sub
push
add
pop
xchg
add
mov
add
mov
xor
das
mov
or
add
bound
mov
dec
adc
add
mov
nop
add
mov
ss
jno
add
lcall
les
in
pop
mov
push
add
pop
nop
add
rcll
pop
cs
add
addb
add
add
pop
xchg
add
cltd
push
xchg
add
loopne
out
pusha
add
add
repz
add
fwait
dec
data16
cmpsl
cmp
pop
adc
inc
add
xchg
add
add
push
mov
inc
add
pop
mov
xchg
out
repnz
loopne,pt
adc
jl
pop
add
mov
add
lock
sbb
mov
les
aaa
xchg
mov
cmpsb
add
cmpsl
push
pop
sub
dec
leave
aaa
ja
add
add
add
add
xor
mov
data16
in
cltd
xchg
fisttpll
push
push
add
sub
xchg
mov
mov
mov
jnp
mov
loop
push
add
pop
int3
popa
int3
cmpsb
add
lea
outsl
cmp
aam
xor
dec
into
pop
jl
add
or
add
add
sub
add
scas
mov
add
scas
lock
add
xor
addb
mov
out
dec
ret
mov
cmp
push
add
add
iret
ror
pop
adc
sbb
mov
popa
aad
push
xor
add
cmp
je
lcall
mov
mov
add
jmp
add
arpl
dec
adc
dec
xor
popf
fwait
jo
movsb
add
cmp
add
add
xchg
add
mov
popa
add
add
addb
add
xchg
add
testb
inc
add
add
movsl
mov
aad
or
add
dec
addr16
add
add
add
jmp
add
xchg
cmp
dec
cs
dec
push
add
add
fwait
jae
add
test
and
pop
rolb
inc
add
data16
add
cmp
movb
cmp
or
fildll
loopne
fs
mov
inc
add
or
sbb
rolb
pop
cmpsl
outsl
sarl
pop
loope
sub
add
cmpsl
or
mov
imul
mov
adc
rolb
test
add
add
add
insl
adc
loop
mov
js
jl
mov
dec
loope
adc
fnstcw
popa
popf
aas
int
and
mov
add
cmp
mov
sub
into
inc
add
add
add
addb
add
cs
add
add
cwtl
add
jmp
popf
add
lods
call
add
jp
testb
add
sbb
imul
sub
add
dec
int
inc
add
cmpsl
ljmp
add
loope
insb
rolb
mov
rolb
add
xor
or
cltd
pusha
add
cmpsb
add
add
mov
fwait
inc
lcall
test
sub
inc
je
icebp
or
sar
les
pushl
add
les
std
mov
cmpsl
lahf
stos
mov
adc
lcall
add
data16
add
push
add
add
add
mov
call
imul
push
add
pop
xor
add
mov
add
push
add
cmp
mov
dec
or
addps
mov
add
fistpll
clc
into
call
out
jae
add
add
jge
add
mov
in
or
push
movsb
add
add
xchg
jnp
and
mov
and
out
addl
push
add
xor
cmp
in
clc
das
shl
add
fwait
mov
add
add
mov
xor
lcall
jae
add
aas
fidivs
fldenv
pop
test
xchg
cmp
in
aaa
mov
mov
popf
lea
jp
aaa
lahf
fmull
or
adc
int
adc
add
lock
add
push
add
push
cli
aam
jns
add
jo
mov
addr16
rolb
jle
mov
arpl
sahf
xor
add
add
add
daa
jns
adc
mov
lock
add
xchg
lea
inc
aaa
jns
cmpsb
add
add
ljmp
mov
ret
clc
in
dec
or
lods
and
mov
push
add
add
add
add
cltd
repz
mov
fcoms
jecxz
add
gs
or
or
add
jns
stc
jns
push
addb
mov
add
mov
add
mov
mov
or
xlat
addb
cmp
dec
bound
mov
jne
add
aad
cmc
ljmp
jno
add
addb
add
aaa
pop
or
add
sub
out
and
xchg
add
pop
loopne
icebp
cmc
pusha
add
push
stc
lods
outsl
aam
and
mov
fsubp
add
add
cld
mov
xchg
add
int
inc
jnp
add
mov
rcll
jb
inc
add
xor
scas
call
add
push
add
rolb
scas
pop
movb
cli
int
xchg
testl
mov
mov
pushf
fs
jp
sub
lahf
cmp
and
pop
mov
test
mov
pop
xchg
add
rolb
xchg
insb
xor
mov
add
bound
mov
in
pop
mov
xchg
loop
rcll
xchg
cmp
add
out
or
iret
add
jp
inc
add
add
lcall
cmc
sub
add
dec
movsb
add
add
popf
repnz
mov
lcall
outsl
xlat
mov
nop
add
add
mov
or
push
outsl
sahf
incb
sub
add
sar
popf
fs
add
scas
ja
mov
mov
lahf
push
xchg
std
idivl
add
lret
inc
mov
fldz
jecxz
cwtl
scas
mov
aas
jbe
jg
xor
push
out
add
ret
cmp
add
add
add
add
lods
adc
add
adc
adc
mov
add
sarl
add
mov
rolb
ljmp
mov
mov
out
sti
jns
mov
mov
add
mov
adc
mov
adc
mov
in
jmp
add
push
leave
or
add
ja
xchg
add
add
lret
xor
mov
add
add
in
or
push
add
clc
in
cmc
lock
jecxz
add
add
and
data16
fstpl
xchg
add
add
and
lret
in
add
add
and
leave
insl
push
lar
mov
in
add
add
mov
bound
mov
add
adc
lret
fistpll
mov
add
xchg
lret
out
add
adc
addr16
xor
jp
insb
sub
add
cmp
jnp
rolb
ret
xchg
clc
js
xor
inc
add
jb
add
mov
cmp
xor
dec
cmp
pop
outsb
jnp
je
in
fisubrs
add
add
js
loop
fwait
xor
add
and
push
mov
mov
sti
outsb
std
jo
mov
push
add
orl
cmp
inc
jnp
lea
add
cmp
cmpsb
add
addl
in
mov
lea
pop
jb
inc
mov
mov
les
rorl
mov
add
add
dec
js
or
jne
loopne
call
add
add
and
les
fucomp
out
add
or
bound
mov
add
push
add
pop
xor
lods
push
and
mov
add
add
addr16
or
inc
iret
addr16
aas
adc
repnz
add
add
xchg
dec
push
add
add
add
aad
mov
movb
inc
add
rolb
adc
cli
sub
repz
add
mov
add
inc
adc
xchg
or
lock
addb
inc
dec
addb
les
and
fadds
mov
fcomi
pop
in
xchg
sti
popa
mov
add
add
cmpsl
outsl
push
add
mov
add
cmp
dec
pop
inc
add
rolb
insl
jns
das
ret
xchg
add
inc
pop
mov
dec
add
mov
xchg
and
mov
jecxz
add
loop
cs
add
js
push
add
ljmp
testb
add
add
fs
mov
rolb
add
add
out
sbb
or
jg
out
inc
add
rolb
pop
push
lods
jp
aam
data16
imul
add
add
repnz
mov
cmp
out
or
add
xlat
fcomi
in
push
add
stos
mov
fwait
and
data16
scas
cli
sti
push
add
jns
and
push
mov
mov
hlt
add
mov
aad
adc
stc
xchg
add
pop
jb
popf
int
add
es
xor
mov
mov
lahf
xor
mov
add
js
inc
add
mov
aad
add
int3
sub
scas
add
mov
lds
add
dec
add
add
or
mov
push
adc
adc
jne
stos
lahf
mov
add
loop
addb
lcall
xlat
sbb
add
sub
add
xlat
pop
add
mov
inc
in
jnp
xchg
jo
push
inc
add
pop
sbb
insb
mov
cmp
cmp
les
mov
jnp
cs
push
add
mov
pop
scas
ds
add
mov
imul
fsubrs
mov
arpl
add
push
add
pop
pop
mov
adc
popa
in
mov
add
push
loope
and
add
add
add
call
dec
out
stos
xchg
add
cmpsb
add
sbb
push
add
lock
mov
icebp
out
fnsave
add
cmp
fsub
add
outsb
pop
into
shl
add
push
add
scas
and
fadds
add
mov
add
add
add
into
in
mov
add
adc
add
add
movsb
add
ja
aad
cmpsb
add
mov
mov
xchg
aad
mov
cmc
or
push
add
xchg
add
jmp
add
fbld
add
sti
jmp
sbb
push
add
jno
dec
out
jl
add
add
mov
add
jae,pt
ret
outsl
add
and
fdivrl
add
inc
add
add
push
add
add
inc
add
add
sahf
mov
adc
imul
hlt
add
add
mov
add
add
out
adc
rolb
add
cmp
jge
dec
fldenv
mov
add
in
pop
inc
add
add
and
ret
add
mov
inc
add
test
arpl
cmp
add
jns
rolb
mull
add
cld
inc
xlat
mov
add
das
fwait
lods
jecxz
add
push
push
dec
xor
add
jne
iret
add
mov
ffreep
add
bound
mov
add
xor
jo
out
out
pop
sbb
add
pop
dec
push
mov
mov
sub
jge
into
mov
inc
mov
pop
cmp
mov
inc
add
add
mov
add
xchg
jg
mov
sbbl
lds
add
add
add
add
jge
stos
data16
add
movsb
add
sub
add
add
add
add
add
out
movb
stos
fs
push
add
leave
push
add
fmull
ret
add
jbe
fcoml
add
add
sub
ds
mov
add
outsl
enter
mov
jo
pop
jne
add
add
out
pop
fdivs
add
cmpsl
adc
repz
ret
popf
out
push
add
mov
inc
add
movsb
add
mov
add
std
ucomiss
add
add
mov
dec
jp
add
dec
mov
dec
pop
je
cs
mov
add
or
jnp
add
pop
outsl
adc
or
fmull
add
sub
leave
iret
cli
test
inc
add
mov
xor
and
mov
add
lcall
add
mov
add
add
add
loop
adc
mov
pavgw
add
dec
std
xor
bound
mov
add
aam
pop
mov
and
mov
add
jmp
cs
add
push
add
add
add
add
popf
xchg
repnz
add
rolb
and
mov
adc
cmp
leave
xchg
add
add
inc
add
fists
xchg
inc
add
cmpsl
addb
push
inc
mov
xchg
inc
loope
add
jb
push
add
ljmp
mov
aas
or
test
jecxz
add
mov
add
add
push
inc
add
inc
add
sub
imul
pop
mov
leave
rolb
add
add
add
add
adc
sbb
in
fidivrs
mov
jl
jb
xchg
dec
stc
aam
mov
add
aaa
icebp
fisubrs
test
stos
push
mov
test
xor
mov
lods
sub
pusha
add
add
mov
leave
ljmp
add
mov
add
xchg
push
add
js
add
mov
lds
add
dec
addr16
stc
pop
mov
into
inc
add
or
add
imul
push
add
adc
inc
add
jle
fwait
cmpl
or
add
jbe
mov
fs
int3
call
jge
sbb
add
out
push
add
pop
popf
xor
add
jne
inc
add
add
mov
addb
mov
xchg
or
push
add
add
pop
or
das
call
add
add
add
lods
mov
lret
mov
mov
andl
add
add
adc
shr
mov
cmp
lods
testb
pop
sub
sub
ror
decb
sub
add
outsb
pusha
add
add
mov
push
sub
and
add
or
add
push
aam
out
insb
gs
repz
push
add
test
fdivs
mov
add
leave
cmp
add
and
mov
add
add
add
and
mov
cmp
adc
les
mov
in
xlat
push
js
add
cld
clc
outsb
imul
add
mov
add
mov
xchg
dec
mov
inc
add
add
add
add
add
and
mov
add
enter
inc
add
mov
adc
xlat
mov
or
fists
add
push
add
or
add
push
add
inc
add
inc
cmp
test
les
mov
add
add
sub
aas
add
cwtl
sub
sbb
lods
lret
xor
and
adc
xor
cwtl
stc
bound
mov
mov
inc
jmp
hlt
add
cmc
mov
das
sub
push
or
add
lcall
add
repz
popa
cmp
push
sub
mov
repz
mov
add
mov
loope
jns
mov
push
add
dec
loop
pushf
push
pop
jbe
mov
dec
mov
imul
je
cwtl
jle
cmp
dec
cwtl
xor
in
mov
mov
cmp
add
ljmp
mov
mov
inc
hlt
add
data16
cltd
movsb
add
cld
jno
repz
sbb
xchg
add
leave
jp
add
dec
pushf
and
xlat
xchg
add
data16
lock
add
xchg
add
cmp
add
sub
rdtsc
add
mov
outsb
cwtl
sbb
mov
mov
fucomi
sbb
stos
sub
add
add
sbb
sti
pop
jecxz
xchg
add
into
add
mov
sti
fdivrp
mov
add
xchg
add
jbe
inc
fildll
sub
leave
jge
mov
mov
aam
aam
ljmp
repnz
mov
add
clc
leave
outsb
cld
sub
sbb
icebp
fsubl
mov
aam
push
add
xlat
jg
pop
inc
add
dec
fisubl
cmp
int3
mov
dec
pop
push
add
into
jno
add
into
adc
cmp
pop
bound
mov
xchg
add
mov
add
dec
jl
pop
lds
rorl
fldcw
push
sbb
dec
rolb
add
divl
add
add
popa
jge
insl
sub
rolb
adc
mov
mov
and
mov
jle
sub
mov
add
push
add
adc
stc
loope
pop
bound
mov
pop
add
aad
popl
push
push
sbb
fwait
mov
jno
add
add
jecxz
add
add
add
clc
inc
add
add
push
sbb
mov
decl
jl
popa
into
or
add
add
add
sbbl
add
push
jns
rcrl
inc
or
and
mov
add
test
or
mov
enter
jae
or
add
pop
sub
nop
add
sub
cltd
xchg
sbb
les
or
hlt
add
mov
jb
rolb
cmpsl
call
in
push
xchg
sarl
jl
fidivrs
push
add
add
add
mov
sub
add
das
addb
rolb
ret
jnp
adc
test
leave
in
nop
add
scas
adc
mov
jl
mov
outsb
imul
add
stc
adc
pop
mov
mov
or
std
xor
enter
jl
xchg
add
jo
mov
insb
fimuls
fstp
xchg
add
fisttpl
data16
add
mov
pop
cmpsl
outsl
repz
repz
mov
lcall
cmp
movsb
add
in
pop
and
mov
rcl
out
std
ja
add
dec
ret
popa
or
pushl
add
addr16
add
subl
add
cmp
add
les
pop
sub
loopne
sub
push
rcrl
dec
popa
sbb
and
loopne
mov
cli
clc
ret
lcall
mov
std
mov
sbb
mov
pop
cmc
in
mov
sub
pushl
or
or
inc
sbb
test
jb
and
aaa
testl
inc
enter
xor
xor
adc
cmp
flds
fisubrl
add
movsl
cmpsb
add
pop
mov
lods
pushf
cmpsb
add
push
add
push
cmpsl
pushf
fisttpl
add
test
in
add
in
sbb
add
push
daa
sbb
add
fisubrl
pop
mov
add
mov
add
dec
fdiv
popa
mov
add
bound
mov
jmp
pop
jmp
popa
loopne
rolb
pushf
push
cmp
cmc
mov
ja
add
add
add
jno
inc
add
mov
add
lret
xchg
add
imul
mov
mov
add
add
ljmp
push
push
inc
dec
jae
cmp
push
add
add
add
add
js
jp
add
push
add
sbb
addb
cltd
cmp
ficompl
jns
push
push
add
jnp
std
mov
or
add
push
add
std
iret
das
sbb
stc
push
push
lea
fsubl
mov
mov
add
mov
and
int3
cli
jmp
decl
cmp
arpl
dec
movsl
adc
out
xor
addr16
fisubrl
cmp
fs
ret
push
jae
add
xorl
add
add
iret
sbb
cwtl
out
dec
incb
je
xchg
add
add
add
add
cmpsb
add
dec
movsl
xchg
add
repnz
add
add
add
hlt
add
xchg
add
jo
inc
add
idivl
clc
hlt
add
add
add
rcl
clc
icebp
arpl
nop
add
movsb
add
add
add
repnz
push
add
xchg
add
das
lret
out
idivl
mov
xchg
mov
pop
fsubr
adc
daa
cwtl
outsl
aad
negl
add
add
sbb
push
add
mov
jge
add
cmp
add
add
les
aam
test
xchg
xchg
sti
mov
mov
mov
mov
add
mov
add
mov
mov
cli
enter
push
mov
cmp
sahf
popa
push
jp
dec
ret
jns
add
xor
addb
out
nop
add
add
cmp
pop
jmp
dec
test
add
add
int3
pop
or
push
lcall
add
jb
sbb
add
mov
loopne
decb
aaa
neg
or
sub
add
in
testb
rolb
hlt
add
add
in
cmpsl
adc
sti
sub
sub
mov
add
xor
jns
or
in
loope
out
bound
mov
sbb
pusha
add
testb
pop
rolb
movsl
ret
mov
icebp
in
or
insl
jno
add
xchg
sbb
add
add
add
add
add
mov
push
mov
stos
mov
test
and
mov
int3
xor
aam
and
mov
add
add
add
add
add
add
push
rolb
xor
in
jl
and
test
jl
push
adc
mov
sub
jp
cmp
add
bound
mov
cmpsl
push
movsl
xchg
jbe
lahf
mov
and
mov
add
add
add
ds
sbb
sub
out
lret
add
lcall
iret
lret
xchg
add
and
push
mov
das
mov
hlt
add
sbb
cmpsl
int
push
daa
push
shll
stos
jge
lret
xchg
add
fmuls
loope
add
add
push
mov
cmpsb
add
test
mov
mov
sbb
jns,pn
add
add
pop
sbb
in
test
dec
xchg
insl
faddp
cli
push
add
std
inc
mov
stc
cmc
stc
hlt
add
mov
pop
fldt
insb
and
and
mov
mov
movsl
pop
cmpsb
add
cmc
adc
add
loopne
scas
rolb
add
mov
push
add
and
sub
add
add
cld
mov
jl
add
stc
pop
addb
add
stc
in
cmp
add
add
mov
pop
test
movsb
add
mov
add
test
loopne
repnz
scas
popf
movb
stos
and
adc
movb
loop
add
ret
out
jp
insb
add
fsubs
add
sub
add
add
mov
jg
add
ljmp
add
or
add
mov
jg
sbb
in
cmp
mov
fwait
mov
adc
lret
and
pop
scas
pushf
add
push
add
inc
xor
jo
stos
insl
cmp
add
sbb
add
in
and
insl
clc
add
fcoml
testb
add
fisubs
out
add
test
outsl
mov
push
ret
jo
pop
push
add
add
fildl
add
pop
jo
addb
in
xor
push
insb
push
push
aam
add
out
lcall
add
add
ja
test
sub
loop
adc
movsb
add
add
add
inc
add
loopne
aaa
imul
add
rolb
scas
repnz
mov
add
or
fmuls
or
pop
addl
mov
outsb
sbb
add
mov
rolb
arpl
dec
jno
push
mov
pop
fcmovb
jl
out
mov
add
data16
repnz
add
add
add
jno
inc
add
add
add
add
add
jge
add
cs
js
fwait
dec
and
into
je
or
add
add
mov
dec
ja
pusha
add
mov
push
sub
add
and
mov
add
testl
cltd
add
repz
add
sahf
sbbl
cmp
add
negl
add
inc
add
loopne
jle
pop
sbb
imul
dec
sub
scas
or
sahf
fcomip
add
add
cmp
scas
and
mov
jbe
lea
and
mov
mov
add
cmc
push
add
sub
aam
clc
push
outsb
popa
jl
clc
sti
mov
pop
test
xchg
dec
shll
dec
outsl
movsl
xchg
jno
jb
jae
testb
jno
inc
or
jae
jo
or
add
xor
or
pmuludq
xchg
push
mov
sub
inc
add
shr
jg
add
add
jg
xchg
add
xor
xchg
sub
inc
jne
lret
out
imul
scas
cmpsl
inc
add
int3
dec
push
add
rolb
imul
dec
mov
addb
add
add
ljmp
cmp
add
mov
inc
sbb
std
mov
test
xchg
add
pop
xchg
add
add
dec
imul
nop
add
outsb
sbb
nop
add
add
add
nop
add
add
fcoml
mov
sti
lret
stos
dec
add
mov
inc
or
add
andl
adc
or
mov
xchg
test
push
int
xchg
add
add
add
jae
out
pop
cwtl
pop
add
cwtl
sub
sub
add
mov
cmp
pop
psrlq
dec
ds
xchg
fcomi
add
add
jnp
fs
bound
mov
add
mov
popf
lea
jo
jbe
push
adc
add
sub
add
pop
jge
xchg
nop
add
mov
pop
adc
ficoml
mov
gs
dec
cli
xor
mov
add
mov
add
cmpsl
mov
mov
add
sahf
lods
les
cmp
insl
fsts
jns
sbb
jg
fsubr
push
xchg
mov
push
or
xchg
add
lods
jecxz
pushf
mov
xchg
btrl
adc
cmp
mov
mov
mov
addb
xchg
popf
mov
mov
sbb
push
fidivrl
add
out
xchg
add
add
daa
or
pop
lock
add
jbe
sti
cmc
popf
pop
rorl
scas
mov
mov
loope
movsl
mov
jge
cmovo
mov
icebp
bound
mov
add
jg
mov
add
sbb
sub
outsl
xorl
add
lcall
imul
add
jae
inc
add
inc
add
add
inc
sub
add
test
xchg
out
add
add
ljmp
add
add
jne
mov
xlat
mov
pop
jae
std
xor
add
in
cmp
fidivrs
out
nop
add
popf
add
mov
bound
mov
add
repnz
add
mov
xorl
add
cli
jne
push
xchg
inc
jo
js
and
mov
add
mov
jb
sbb
out
repnz
int
test
and
dec
ret
push
xor
add
in
xchg
sar
sahf
imul
add
mov
dec
dec
lret
jo
adc
lea
xchg
push
add
imul
add
dec
push
add
add
in
xchg
or
xchg
fnstsw
add
add
and
add
mov
sub
inc
add
cmp
push
aam
gs
shr
jo
je
cmp
mov
push
xor
imul
add
add
repnz
movsb
add
inc
add
xor
pop
jbe
lock
sub
add
add
hlt
add
sbb
cli
repnz
or
add
sub
add
or
faddl
fidivrl
hlt
add
sub
inc
add
dec
sub
notl
out
xchg
add
add
jmp
sbb
add
testb
add
stos
and
into
inc
add
mov
adc
xchg
inc
add
aas
loop
jge
add
add
and
mov
nop
add
push
add
mov
mov
or
sahf
dec
rolb
xor
add
add
cmp
inc
add
add
into
adc
sbb
cmp
inc
xchg
add
sbb
mov
aas
lret
in
cmp
mov
mov
push
pop
dec
stc
jp
aam
lcall
mov
out
leave
dec
outsb
addr16
mov
out
xor
nop
add
xchg
loopne
fsubp
push
jb
ja
in
push
add
pop
pop
sbb
inc
add
add
int3
xor
in
add
sbb
dec
inc
cmp
lock
shll
iret
inc
add
shll
adc
in
jecxz
aam
out
outsb
push
xor
ret
add
adc
sahf
mov
jb
add
ret
lods
es
and
loopne
add
mov
test
add
jle
add
incl
mov
in
push
insl
mov
mov
add
add
add
xorl
xchg
ds
sbb
in
jmp
pop
fadds
ffreep
shr
lods
dec
xchg
das
lea
cmp
pop
enter
add
add
loopne
int
add
xchg
add
lea
mov
nop
add
add
sahf
mov
jae
adc
getsec
gs
add
add
addb
add
mov
add
testb
push
add
mov
ljmp
xrelease
jns
out
fwait
out
or
add
add
add
push
add
add
into
insl
loopne
cmp
mov
add
sub
and
mov
fisttpll
cld
push
mov
dec
fstl
sub
testb
faddl
cmp
lods
mov
addr16
test
add
lcall
add
xor
xor
enter
add
push
add
jge
xor
add
test
insb
sbb
add
sbb
outsb
fcompp
imul
mov
add
mov
xor
das
jns
sub
sub
add
jge
adc
add
mov
fdivrp
xor
out
out
mov
or
jae
popf
or
add
pop
mov
xchg
out
mov
lea
js
add
push
add
and
mov
add
jnp
pop
push
add
imul
cli
cs
add
jae
push
add
add
mov
add
adc
jmp
inc
add
add
and
mov
mov
ret
dec
movsl
in
or
jp
sub
jl
xlat
adc
add
add
fsts
add
aaa
ret
adc
xlat
ja
sbb
aam
push
stc
ja
add
add
mov
mov
xchg
pop
push
add
jle
cmc
data16
testb
add
add
mov
jb
pushf
orl
mov
scas
adc
xor
into
sub
addr16
test
or
add
mov
and
mov
push
int3
pop
jne
add
add
add
int
add
sbb
jnp
mov
mov
dec
or
xchg
add
cmp
pop
xor
lock
testb
add
add
int
add
jge
jbe
outsl
movsb
add
add
nop
add
push
add
mov
cltd
sbb
mov
insb
mov
call
pop
clc
fistps
mov
add
mov
cmp
out
xchg
add
jno
sbb
testb
and
mov
testb
jmp
lods
outsl
xor
sahf
lahf
push
add
add
insb
scas
in
gs
mov
add
insb
pop
cmp
sbb
or
inc
testb
adc
add
pushf
add
mov
xlat
mov
add
pushf
push
add
loopne
mov
mov
add
add
add
add
in
gs
ret
jg
mov
mov
xchg
jp
icebp
pop
cmp
inc
ret
mov
add
hlt
add
inc
adc
inc
add
fnstcw
lds
addb
dec
fnstsw
and
mov
add
repnz
mov
nop
add
xchg
xchg
jb
mov
push
add
push
add
mov
aas
fwait
lret
fadds
xchg
add
inc
add
xor
push
bound
mov
gs
xchg
movsl
aas
jne
in
ljmp
jg
mov
jmp
data16
xor
stos
mov
jle
jno
adc
cvtpi2ps
test
popf
inc
daa
xor
pop
fadd
or
int
dec
bound
mov
add
xchg
add
mov
push
add
test
rolb
dec
ret
push
movsl
mov
mov
das
xchg
mov
add
inc
add
nop
add
testb
add
add
cmp
iret
cmpsl
dec
shl
pop
les
pop
jb
sub
adc
ret
loop
aam
or
add
int
add
inc
add
cmp
sbb
popf
fcompl
push
add
xorl
xchg
add
add
or
push
js
rolb
jge
add
lcall
add
flds
xchg
mov
dec
test
les
rolb
jl
add
testb
add
jecxz
add
scas
mov
jg
shll
add
sub
push
sbb
add
jle
xor
add
add
aad
mov
jne
xchg
add
popf
mov
mov
cmpsb
add
pusha
add
fwait
pop
js
add
push
clc
sub
cwtl
dec
add
add
mov
sub
add
lods
fmuls
cwtl
xor
pop
lret
add
add
add
scas
sti
inc
add
pushl
dec
push
add
mov
mov
dec
cmpsl
ret
stos
adc
jns
das
hlt
add
add
add
mov
fcoml
scas
mov
xchg
push
add
popa
lds
add
fdiv
add
mov
jne
cmpsb
add
add
add
std
adc
scas
fadds
push
sti
aaa
jne
push
add
add
mov
jecxz
mov
in
xlat
xchg
fsub
mov
mov
add
insb
mov
fistl
test
ljmp
setle
mov
movb
mov
add
cmpsb
add
xchg
pushf
pop
sbb
cmpsb
add
fisttpl
test
add
dec
loopne
lret
sar
sbb
lcall
add
mov
add
xor
test
call
add
jo
add
popf
imul
dec
das
mov
add
jg
and
jae
add
mov
scas
stc
mov
add
mov
dec
pop
pop
jns
fmuls
or
and
mov
cmp
pop
in
addb
mov
mov
into
jmp
fdivrl
nop
add
ret
jo
xor
and
mov
add
ljmp
add
add
add
push
add
dec
jno
rolb
sbb
add
add
mov
and
mov
add
sub
fwait
hlt
add
leave
jns
add
aad
add
aas
jg
add
mov
data16
and
pop
lea
add
and
sbb
or
add
out
mov
mov
add
call
mov
bound
mov
xchg
add
lcall
dec
xchg
mov
sbb
add
push
add
cs
add
mov
ja
add
dec
xor
add
mov
scas
rolb
sti
mov
aaa
bound
mov
shrl
jbe
push
add
mov
js
jno
add
aas
lret
sbb
enter
addr16
dec
jnp
scas
lods
jmp
mov
xchg
js
and
int
or
jo
in
movsl
loope
add
add
cltd
aaa
inc
add
lret
or
jb
mov
aam
xchg
add
in
rcrl
add
sbb
add
insl
pop
add
ljmp
dec
sub
xor
mov
jp
add
jp
push
add
sbb
push
add
or
popa
pop
sbb
add
popa
cmp
add
in
add
imul
mov
dec
test
subl
add
shll
fadds
int3
in
in
dec
push
lcall
pop
cmpsl
sub
addb
add
test
out
gs
xor
jmp
sub
add
add
mov
mov
fucomi
sub
cs
gs
loop
push
add
add
cmp
lea
add
mov
insb
dec
testb
jb
leave
sbb
add
repnz
xor
outsl
rolb
ds
adc
adc
mov
out
out
or
add
add
jo
sbb
add
call
scas
ret
out
push
add
mov
leave
pop
jbe
xor
push
add
int3
cld
and
mov
jb
push
arpl
add
mov
xchg
add
data16
mov
mov
mov
or
cmp
add
mov
mov
add
xor
popf
cmp
push
inc
es
adc
cmp
mov
icebp
cmp
mov
jmp
pop
push
add
dec
add
mov
hlt
add
cmpsb
add
loopne
cmp
lret
fnsave
pop
inc
add
pop
adc
add
add
cmp
imul
add
aas
stos
push
add
aad
cli
arpl
add
rolb
mov
add
jbe
xchg
dec
mov
testb
add
hlt
add
mov
xor
fildl
add
mov
cmp
xor
jmp
imul
adc
add
mov
mov
add
loop
fiadds
mov
add
int
ds
mov
mov
add
push
aaa
pusha
add
mov
pop
xchg
sbb
outsl
xchg
add
add
jmp
add
cmp
sbb
js
mov
sar
fistl
add
mov
sbb
add
jae
scas
lds
sub
lds
adc
push
add
dec
mov
mov
push
add
dec
sub
add
add
addr16
pop
xor
and
add
pop
inc
loop
xchg
xchg
lcall
add
xchg
add
dec
or
pop
pop
pop
xchg
mov
add
test
clc
cmc
cmc
neg
xchg
jge
sbb
push
add
adc
jge
add
mov
or
pop
ljmp
mov
add
add
add
aaa
out
mov
pusha
add
roll
mov
aad
add
jno
imul
aad
jp
xchg
add
popf
jle
add
add
bound
mov
add
push
adc
adc
add
add
scas
dec
push
add
mov
jns
cmp
aaa
dec
and
mov
or
cli
lcall
ret
dec
in
xor
in
and
mov
fsubp
movsb
add
pop
into
xchg
cmc
xchg
xchg
sarl
movsl
cmp
mov
cmpsb
add
add
add
add
scas
in
loope
add
sbb
addr16
fisubs
add
cltd
mov
or
addl
add
mov
dec
pop
ss
cs
mov
add
into
and
mov
pop
push
fisttpll
add
lret
repz
pop
mov
add
add
movsb
add
ss
add
cmp
ds
loopne
jecxz
add
push
add
les
add
jle
ljmp
outsl
push
xor
mov
jo
cmp
add
in
add
aaa
sbbl
add
jo
sub
jbe
ret
mov
add
add
add
inc
call
sub
out
jae
sbb
add
push
add
add
pusha
add
out
mov
add
adc
scas
mov
add
fmul
mov
ret
inc
add
repnz
dec
inc
add
add
add
add
jmp
es
outsb
push
add
jmp
fsubrs
iret
ljmp
adc
sbb
jne
mov
cwtl
dec
xor
mov
dec
add
int3
jle
add
or
jo
push
add
cld
xor
cli
push
mov
loopne
jmp
push
out
push
rolb
dec
dec
nop
add
mov
mov
add
add
push
add
mov
add
int
add
pushf
popa
cmp
add
adc
fwait
imul
repz
sbb
sub
add
mov
add
es
add
mov
loopne
mov
ljmp
jle
out
add
adc
insb
xor
jge
pop
sti
fwait
nop
add
out
mov
add
add
inc
add
and
js
add
mov
jle
and
lcall
xchg
clc
adc
pop
push
add
push
and
cmp
jl
add
mov
bswap
stc
xor
xchg
testb
lds
sub
xor
add
mov
add
mov
dec
lret
in
push
lahf
addb
iret
mov
xor
mov
add
add
jne
movsb
add
sub
bound
mov
nop
add
mov
add
push
add
or
xchg
add
mov
bound
mov
add
add
addb
leave
jmp
and
mov
add
mov
add
mov
int3
or
testl
addr16
add
push
add
cltd
and
or
fsts
bound
mov
mov
cltd
pushf
cltd
mov
inc
add
lods
bswap
cmp
inc
xorl
ljmp
mov
xor
pop
push
sbb
inc
mov
fs
add
add
mov
add
hlt
add
mov
mov
mov
or
addb
add
pop
repnz
and
cmp
mov
and
push
add
popa
fld
jle
xchg
add
addb
xor
pop
pop
ljmp
mov
mov
add
add
mov
fistps
mov
add
xchg
add
add
add
scas
push
pop
mul
mov
test
add
and
mov
add
add
fistpll
jmp
fimuls
push
add
mov
add
add
rolb
testb
and
mov
fimuls
inc
outsb
cs
push
jno
cmp
adc
pop
sub
add
cmp
jle
jnp
jno
inc
stc
add
into
xor
add
std
xor
fistpl
fwait
out
xchg
mov
sub
add
ljmp
pop
pop
adc
jmp
loopne,pt
rolb
or
mov
mov
cld
fcoml
add
add
pop
mov
jl
ss
stos
imul
add
or
jnp,pt
push
add
pop
imull
lock
mov
inc
add
lods
xchg
add
xor
pusha
add
cs
add
fbld
mov
mov
ret
xchg
add
add
jmp
adc
add
test
test
inc
addb
adc
lret
jle
sahf
out
ja
add
add
jae
mov
daa
pop
fdivrp
sub
addr16
add
mov
pop
shr
mov
pop
adc
add
mov
mov
add
add
ds
add
jae
add
sbb
dec
xor
mov
jmp
mov
nop
add
lods
mov
add
mov
add
mov
add
mov
inc
xor
mov
pop
jg
jge
cmp
add
xlat
mov
dec
mov
add
add
add
mov
add
lds
add
test
dec
sub
add
sbb
add
dec
scas
ret
jb
out
add
test
testl
lock
add
pop
pop
stc
inc
add
stos
dec
