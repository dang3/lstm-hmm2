add
add
aam
dec
dec
dec
dec
dec
mov
push
xchg
xchg
xchg
xchg
xchg
add
aad
aad
aad
aad
aad
cs
add
xor
add
lret
lret
lret
lret
lods
cli
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
pop
xor
xor
add
pushf
daa
in
add
add
add
add
add
inc
inc
inc
inc
inc
addr16
add
jmp
test
addl
add
add
arpl
or
addr16
mov
mov
adc
adc
ret
jl
fs
addb
adc
lret
lret
addr16
pextrw
es
push
push
push
push
push
or
or
or
or
or
rol
add
jne
jne
mov
mov
add
add
add
divb
jo
jo
insb
insb
insb
insb
insb
into
into
into
into
into
decb
dec
dec
add
cs
jb
mov
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
cmpsl
cmpsl
jae
mov
mov
mov
mov
mov
ljmp
rol
rol
rcll
test
mov
mov
mov
mov
div
into
test
adc
adc
adc
fcmovnu
fildl
add
add
ret
add
sbb
sbb
sbb
and
rol
mov
mov
mov
mov
mov
mov
stc
stc
mov
add
push
push
push
push
push
add
popa
popa
popa
add
fwait
fwait
fwait
fwait
fwait
fwait
in
in
in
in
in
in
in
in
in
jge
jge
add
add
add
addl
cld
cld
cld
cld
cld
cld
cld
cld
mov
clc
clc
clc
clc
clc
clc
clc
clc
mov
das
rol
rclb
push
push
push
push
push
push
push
push
push
add
xor
mov
mov
mov
mov
mov
xor
xor
xor
xor
mov
ret
ret
ret
ret
ret
jge
jge
out
out
mov
fcmovnu
fcmovnu
fcmovnu
cmp
cmp
js
or
xchg
imul
div
std
std
std
std
xor
xor
xor
sub
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
sub
sub
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
xor
xor
xor
xor
xor
dec
dec
push
push
push
push
push
push
push
push
add
add
pop
pop
pop
pop
pop
pop
and
cmp
cmp
add
jle
jle
jle
jle
jle
stos
stos
stos
stos
stos
add
add
add
imul
mov
mov
add
and
add
add
incb
add
add
aaa
aaa
aaa
aaa
aaa
test
or
addl
addl
addl
add
add
add
add
adc
adc
adc
adc
adc
cmp
add
add
push
push
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jl
jl
or
or
or
or
or
or
loop
loop
cmpxchg
sub
mov
mov
mov
mov
mov
mov
mov
mov
xlat
xlat
xlat
cmp
cmp
cmp
cmp
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
xlat
xlat
xlat
xlat
addb
addb
mov
mov
mov
and
and
and
and
and
and
ret
data16
xchg
xchg
xchg
daa
daa
daa
daa
daa
push
push
push
push
add
in
jmp
jmp
jmp
xor
xor
xor
xor
xor
xor
xor
push
push
push
push
cmp
cmp
cmp
mov
and
and
inc
inc
inc
jmp
add
add
ljmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
push
push
push
push
push
add
inc
inc
inc
jecxz
aaa
pushf
pushf
pushf
pushf
pushf
add
and
add
add
leave
leave
leave
push
push
push
push
push
push
push
push
mov
or
js
js
js
js
js
dec
dec
dec
mov
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
lret
sub
mov
sbb
add
gs
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
push
push
push
push
push
push
push
push
fisttpl
addl
adc
jmp
jmp
jmp
jmp
or
or
or
or
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
mov
jbe
jbe
jbe
jbe
ljmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jge
jge
adc
adc
adc
adc
adc
adc
adc
adc
add
mov
in
in
in
in
in
pop
pop
pop
mov
mov
mov
pop
into
into
ljmp
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
aam
push
push
out
push
adc
mov
mov
and
and
and
dec
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
add
jno
jno
jno
je
outsl
outsl
outsl
outsl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
add
mov
mov
mov
daa
daa
or
or
or
or
mov
mov
add
cmp
arpl
dec
dec
dec
dec
dec
add
popa
popa
push
push
div
test
les
dec
dec
dec
and
and
lret
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
dec
dec
in
in
in
rcrb
add
add
add
add
mov
jg
add
push
push
push
push
jge
outsl
outsl
outsl
cmp
loopne
loopne
loopne
loopne
loopne
loopne
loopne
popf
or
or
or
or
mov
jmp
jmp
add
addb
add
add
mov
mov
arpl
arpl
arpl
rcl
rcl
rcl
rcl
rcl
rcl
shrl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
fwait
fwait
fwait
xchg
add
mov
mov
jns
jns
sbb
sbb
sbb
mov
cmp
push
push
push
adc
adc
adc
adc
add
pushf
pushf
pushf
insb
insb
insb
aad
aad
pushf
pushf
pushf
add
or
or
addl
rcl
rcl
jle
jle
jle
sbb
sub
sub
sub
sub
sub
push
push
push
push
lret
lret
lret
lret
lret
lret
lret
lret
lret
and
and
and
insb
insb
insb
insb
insb
insb
insb
insb
ds
and
add
add
add
lsl
loopne
cwtl
cwtl
out
out
out
sub
sub
sub
sub
sub
sub
sub
sub
sub
xor
es
jae
jae
ret
ret
ret
ret
ret
cmp
sbb
sbb
add
add
add
add
jmp
jmp
push
push
push
push
push
push
push
push
push
push
push
push
push
insl
insl
insl
insl
insl
insl
insl
insl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
and
and
and
and
and
and
and
and
mov
add
add
add
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
push
std
std
std
hlt
hlt
xor
adc
adc
adc
adc
out
out
out
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
add
add
add
add
add
add
add
add
xchg
xchg
jp
add
add
add
das
das
das
inc
inc
inc
inc
inc
inc
inc
inc
add
popf
popf
popf
imul
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
mov
mov
lret
lret
lret
lret
lret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
mov
inc
inc
inc
mov
ss
daa
daa
daa
daa
daa
daa
daa
fcmovnu
fcmovnu
fcmovnu
lea
mov
mov
mov
mov
mov
mov
mov
mov
adc
adc
in
in
in
in
in
in
in
in
in
in
xor
xor
insl
insl
insl
insl
insl
sub
ds
pop
lahf
lahf
lahf
lahf
lahf
lahf
lahf
in
in
add
add
push
ds
sbb
sbb
sbb
sbb
add
enter
jns
xor
xor
xor
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
adc
add
std
std
std
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fcomp
fcomp
fcomp
fsubrs
test
test
test
mov
mov
add
add
push
push
push
push
jbe
jbe
jbe
jbe
jbe
pop
pop
mov
fwait
fwait
fwait
fwait
addl
sti
sti
sti
sti
sti
sldt
add
inc
inc
inc
inc
inc
inc
mov
les
add
and
loopne
mov
jns
jns
in
in
in
in
in
in
in
in
in
in
les
and
add
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
add
push
push
push
push
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
rol
rol
or
or
or
imul
dec
dec
dec
aas
jl
jl
jae
jae
jae
adc
add
add
ds
imul
imul
add
and
and
and
and
cld
cld
cld
xchg
xchg
xchg
xchg
add
outsl
outsl
outsl
xchg
xchg
xchg
mov
repz
sbb
sbb
sbb
pushf
pushf
pushf
pushf
pushf
pushf
into
into
into
into
into
push
cmp
loopne
loopne
loopne
loopne
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
or
loopne
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
int
int
pop
push
cmp
cmp
aad
aad
aad
incb
inc
inc
inc
mov
mov
mov
mov
mov
stc
stc
stc
stc
stc
stc
stc
movsl
movsl
movsl
movsl
movsl
or
or
or
add
add
add
ds
jmp
fnsave
adc
adc
adc
adc
adc
div
div
mul
out
out
out
out
out
out
out
push
push
push
push
push
push
push
push
push
or
or
or
mov
add
cmp
xchg
xchg
xchg
xchg
xchg
addl
add
fcmovnu
fldt
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
fcomp
fdivs
xor
xor
xor
xor
xor
xor
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shll
dec
dec
dec
dec
dec
dec
dec
dec
add
add
xor
mov
lods
lods
lods
lods
lods
lods
lods
lods
pusha
pusha
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
dec
dec
dec
dec
jg
jg
jg
jg
jg
mov
repnz
out
out
out
out
out
out
out
out
out
out
out
out
pop
pop
pop
ss
mov
gs
push
push
push
push
loopne
jecxz
jecxz
jecxz
push
push
sub
sub
sub
sub
aaa
aaa
aaa
test
fcmovnu
fcmovnu
ds
stos
stos
stos
stos
stos
xchg
xchg
add
add
add
add
jae
jae
stos
stos
stos
stos
stos
stos
dec
dec
add
add
cwtl
cwtl
inc
inc
inc
scas
scas
scas
cmpsl
cmpsl
jns
jns
add
add
add
add
addb
push
pop
pop
pop
cli
cli
cli
add
add
loope
jmp
jg
pop
pop
pop
pop
pop
and
and
and
and
and
and
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
sbb
out
imul
push
push
push
push
push
push
push
push
popa
popa
popa
popa
popa
popa
popa
xchg
xchg
fistpll
lcall
inc
inc
inc
scas
scas
scas
mov
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
add
add
add
mov
mov
pushf
pushf
pushf
pushf
cltd
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
and
add
add
add
add
cmp
cmp
loope
loope
loope
stc
stc
stc
stc
stc
stc
stc
stc
stc
adc
adc
pop
xor
xor
xor
xor
push
push
pop
pop
leave
leave
leave
leave
leave
out
out
out
stc
cwtl
cwtl
cwtl
cwtl
in
in
in
in
in
in
in
in
in
in
pop
pop
pop
pop
pop
pop
dec
dec
dec
inc
jns
jns
jns
mov
mov
mov
cwtl
cwtl
test
jmp
jmp
jmp
jmp
pop
pop
pop
int3
int3
rcl
ss
mov
lods
div
div
div
div
div
div
div
inc
out
out
addr16
jne
jne
jne
jne
jne
ja
adc
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
add
adc
dec
dec
dec
dec
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xlat
xlat
xlat
addl
in
in
in
in
mov
mov
mov
mov
mov
mov
pop
pop
pop
sbb
and
pushf
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
xchg
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
enter
mov
mov
add
ds
add
nop
nop
nop
jnp
jnp
stos
add
inc
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
mov
sbb
sbb
sbb
sbb
sbb
sbb
bound
bound
iret
iret
iret
inc
inc
inc
jmp
xor
movsb
movsb
movsb
movsb
add
aas
aas
aas
inc
inc
inc
inc
inc
inc
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
bound
enter
data16
or
loopne
loopne
adc
adc
adc
adc
adc
aas
aas
aas
aas
aas
stos
stos
stos
stos
stos
cmp
cmp
cmp
mov
mov
cltd
cltd
cmp
pushf
pushf
sbb
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
add
ss
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
or
or
jae
jae
jae
push
push
push
push
push
push
push
push
add
add
pop
pop
pop
pop
pop
pop
out
out
out
mov
sbb
adc
adc
adc
adc
adc
adc
mov
mov
mov
mov
mov
lret
lret
lret
lret
lret
lret
mov
mov
mov
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fs
fcmovu
insb
sub
sub
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
add
add
add
xor
xor
xor
xor
xor
xor
xor
inc
inc
inc
inc
inc
inc
inc
jmp
jmp
push
push
push
pop
imul
imul
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
mov
mov
mov
mov
fcoms
push
pop
pop
pop
add
add
div
div
div
div
div
div
testl
pushl
xor
fs
sbb
and
or
or
push
push
shrb
sub
sub
sub
sub
ss
xchg
xchg
xchg
mov
mov
mov
mov
mov
in
in
in
in
in
in
in
mov
pop
pop
jmp
jmp
jmp
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
repnz
mov
pop
pop
pop
pop
mov
mov
mov
push
push
push
push
push
out
out
out
out
out
decl
js
js
js
js
pop
pop
jae
jae
addb
add
add
mov
or
or
or
or
or
or
or
mov
sahf
sahf
sahf
fsubl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
rol
rol
rol
pop
pop
pop
pop
fldenv
and
add
add
pusha
pusha
xor
xor
and
cmp
add
add
add
add
add
add
add
add
add
add
add
and
xlat
xlat
xlat
xlat
add
mov
mov
add
add
add
add
rol
roll
add
xchg
xchg
xchg
xchg
test
mov
mov
mov
imul
sub
loope
rcl
rol
rol
rol
rol
add
add
add
mov
xchg
xchg
push
push
push
push
jno
jno
loop
loop
loop
loop
loop
loop
loop
lcall
lret
lret
lret
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
ds
testl
ljmp
add
add
add
lods
lods
pop
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
loop
test
test
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sub
mov
inc
inc
inc
inc
jns
add
add
add
add
add
add
add
add
add
movsb
movsb
movsb
movsb
movsb
mov
adc
mov
mov
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
insl
insl
insl
insl
insl
insl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
roll
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
out
cs
or
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
int
int
int
int
int
int
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
mov
add
aad
aad
add
ljmp
ljmp
pop
pop
pop
outsb
outsb
fstp
fstp
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
jg
jg
jg
jg
jg
jg
jg
jg
add
add
add
add
sub
sub
sub
aaa
aaa
aaa
aaa
aaa
aaa
adc
adc
adc
xor
inc
scas
scas
scas
scas
scas
scas
inc
inc
inc
inc
inc
add
add
add
call
mov
mov
mov
dec
add
cmp
pop
pop
add
add
add
adc
adc
adc
adc
adc
add
add
bound
bound
rcl
rol
rol
rol
jbe
jbe
jbe
jbe
fcmovu
fcmovu
fcmovu
cmp
cmp
and
and
and
and
and
and
and
into
into
into
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
popf
popf
popf
popf
popf
popf
popf
popf
packsswb
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
or
or
or
or
or
or
or
repz
test
test
test
and
bound
bound
add
cs
add
outsb
outsb
jl
jl
jl
jl
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
insb
insb
ja
ja
mov
push
push
push
push
push
push
push
push
push
push
mov
push
mov
int
fstp
fstp
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
jl
inc
inc
inc
inc
inc
inc
inc
inc
inc
and
and
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
leave
leave
leave
pop
pop
addl
les
ja
ja
inc
inc
inc
inc
mov
mov
mov
mov
add
add
or
inc
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
in
in
pop
pop
add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
sub
sub
sub
mov
add
add
add
add
jge
jge
cmp
cmp
cmp
cmp
cmp
cmp
movsb
movsb
movsb
movsb
movsb
rcl
shrb
outsl
outsl
outsl
outsl
outsl
outsl
outsl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
fs
and
mov
mov
mov
call
jge
jge
jge
jge
jge
add
sbb
cmp
cmp
and
adc
adc
adc
adc
adc
adc
out
out
out
jnp
jnp
add
jge
add
add
add
pop
add
add
or
or
or
push
push
push
push
push
push
push
add
add
xchg
xchg
xchg
xchg
add
enter
outsl
outsl
outsl
outsl
rcll
push
push
push
push
push
push
push
push
push
push
push
push
push
lock
xor
xor
add
add
pop
pop
pop
inc
inc
inc
inc
inc
cld
add
dec
dec
in
in
in
in
push
push
push
push
fs
pop
jb
jb
jb
je
add
add
jle
sub
sub
fcomp
fcomp
fcomp
fmuls
test
test
test
test
test
pusha
pusha
pusha
pusha
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
push
push
push
push
push
add
stos
jb
jb
jb
jb
add
add
mov
mov
pusha
pusha
lods
lods
mov
mov
mov
popf
sahf
mov
mov
mov
mov
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
test
add
add
push
push
cld
iret
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
jnp
pushf
pushf
pushf
pushf
add
addl
jno
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
sahf
add
add
add
add
loop
push
push
push
push
push
push
push
adc
adc
adc
adc
adc
mov
mov
cmp
mov
rcl
add
add
jmp
jmp
jmp
jmp
dec
dec
dec
dec
dec
dec
dec
cwtl
test
and
lahf
les
push
test
gs
add
push
push
push
push
push
push
mov
mov
inc
jae
jae
jae
jae
jae
jae
dec
dec
mov
mov
mov
repnz
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
xchg
xchg
fs
testl
dec
dec
dec
dec
dec
rolb
es
insb
insb
insb
add
add
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
es
add
add
add
xor
xor
mov
mov
les
add
addr16
push
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
dec
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
inc
inc
out
out
out
out
cltd
xor
xor
xor
or
or
or
inc
arpl
arpl
arpl
cmp
or
push
push
push
add
add
out
and
and
xor
xor
cs
jmp
aam
test
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
arpl
mov
dec
dec
dec
dec
add
mov
lea
test
add
cmp
cmp
cmp
arpl
pop
pop
pop
pop
in
in
in
in
in
in
in
in
in
in
in
add
add
add
add
jb
lret
lret
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
add
js
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
adc
pop
mov
add
add
add
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
loope
fs
mov
mov
movsl
cltd
jge
jge
addl
mov
mov
loop
loop
sti
sti
sti
arpl
arpl
lret
lret
scas
scas
scas
scas
scas
scas
scas
scas
scas
lea
or
add
adc
adc
adc
adc
fcompl
cmc
fadd
mov
pop
lahf
lahf
lock
das
add
add
xchg
xchg
xchg
addb
add
decb
popa
aas
aas
aas
aas
aas
aas
pop
pop
pop
div
mul
loop
loop
loop
addb
addb
sbb
sbb
ss
pop
inc
inc
add
add
jbe
jbe
jbe
jbe
jbe
jbe
jp
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
fcmovnu
fcmovnu
cld
cld
cld
cld
cld
cld
cld
cld
dec
dec
dec
dec
jmp
jmp
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
or
or
or
or
in
in
in
in
in
add
add
add
dec
dec
dec
jne
add
add
add
add
femms
push
push
push
push
scas
scas
scas
mov
mov
add
xchg
xchg
xchg
flds
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
movsb
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
adc
adc
adc
dec
dec
pop
pop
pop
pop
ds
aas
aas
aas
aas
aas
aas
jb
jb
sub
sub
sub
mov
mov
mov
mov
test
test
push
push
xchg
xchg
xchg
xchg
xchg
xchg
lahf
lahf
and
jb
jb
jb
add
add
or
or
add
in
in
in
in
mov
mov
out
out
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
stos
mov
mov
mov
add
inc
add
icebp
icebp
stc
stc
stc
rcl
or
or
or
or
or
out
out
ret
ret
ret
ret
stos
stos
rol
rol
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fistpl
add
add
in
in
daa
daa
decb
or
and
and
add
pushf
bound
dec
dec
dec
mov
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
adc
push
push
push
xorb
add
add
clc
clc
clc
clc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
je
je
dec
dec
fcmovu
fcmovu
fiaddl
add
add
or
or
add
mov
inc
inc
inc
inc
inc
cli
cli
add
add
add
test
mov
mov
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
cmp
cmp
cmp
cmp
cmp
add
inc
inc
inc
inc
inc
sub
sub
sub
sub
sub
fldt
pusha
pusha
pusha
pusha
or
add
sbb
sbb
sbb
add
mov
mov
mov
mov
mov
dec
dec
dec
mov
dec
movsb
movsb
movsb
add
add
dec
dec
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
cltd
cltd
cltd
cltd
lods
lods
lods
lods
lods
lods
aaa
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sti
sti
sti
sar
popa
popa
popa
popa
popa
jb
jb
jb
jb
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
mov
mov
mov
dec
dec
dec
and
nop
stos
stos
stos
sbb
sbb
inc
inc
inc
inc
inc
inc
inc
inc
test
fcmovnu
and
and
and
and
and
loopne
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
aaa
aaa
aaa
aaa
mov
mov
mov
mov
rcl
rcl
rcl
roll
add
mov
mov
mov
rol
rol
repz
mov
cli
cli
cli
or
add
add
out
out
adc
adc
push
push
push
push
push
in
in
outsb
outsb
outsb
aad
aad
aad
aad
aad
aad
push
push
push
decb
add
push
push
imul
imul
leave
add
add
cmp
stos
stos
stos
loop
loop
loop
loop
xchg
ss
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
arpl
arpl
or
cmpsb
rol
pusha
dec
dec
dec
dec
dec
dec
dec
dec
ret
mov
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
fildl
inc
inc
inc
inc
inc
inc
jno
pop
pop
cs
add
add
add
inc
inc
inc
jno
jno
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
sub
sub
sub
sub
sub
sub
sub
dec
dec
dec
dec
jo
jo
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
push
push
push
push
push
push
loopne
loopne
arpl
add
pop
pop
pop
pop
pop
sub
loopne
loopne
loopne
loopne
xchg
xchg
xchg
xchg
std
std
std
push
push
push
sarb
iret
iret
xor
xor
fs
movsl
movsl
movsl
xor
push
push
push
push
push
push
push
push
push
add
add
add
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
jp
xlat
xlat
xlat
xlat
xlat
xlat
add
out
out
out
out
xchg
xchg
xchg
mov
inc
add
aaa
inc
add
in
in
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
or
mov
mov
mov
jno
jno
jno
jno
mov
arpl
repz
rcl
rcl
rcl
roll
add
add
pop
pop
rol
adc
adc
adc
jge
jge
aas
aas
aas
aas
aas
aas
arpl
arpl
arpl
jbe
jbe
jbe
jbe
int
mov
mov
mov
push
push
push
push
push
push
push
push
addl
addl
addl
sbb
sbb
mov
fnstcw
cmp
cli
cli
cli
cli
cli
add
add
add
add
inc
inc
inc
inc
add
add
mov
mov
and
add
test
cmp
push
addb
xor
add
mov
mov
push
aas
xor
jno
and
loopne
test
xchg
dec
xchg
bound
and
add
leave
lret
aad
push
inc
inc
rorl
push
mov
pop
or
cmovnp
jb
std
and
out
adc
mov
aaa
sbb
rcl
insl
insl
pop
cmp
push
ljmp
int
addb
add
dec
test
loopne
inc
inc
and
gs
out
jns
add
shlb
xchg
and
and
mov
mov
jo
push
rol
cmp
loopne
xchg
jmp
add
and
imul
repnz
pop
mov
shl
pop
addb
rolb
and
lret
add
in
bound
popf
int
jge
jno
lock
mov
push
xlat
lahf
icebp
shlb
or
fsts
add
mov
and
add
in
push
sub
mov
pusha
pusha
out
sarl
call
lds
scas
and
add
loopne
pusha
orl
cmp
push
arpl
add
loopne
sbb
rclb
in
fisttpll
imul
inc
movsl
mov
dec
push
jecxz
fwait
cs
inc
iret
mov
dec
test
ror
cmp
andb
popf
rcl
adc
addb
xchg
pusha
pusha
push
addb
jge
mov
sub
loopne
scas
nop
leave
test
add
cmpsl
vpunpckhwd
xchg
fwait
test
loopne
movsl
pop
mov
push
cld
lret
inc
sub
lahf
imul
mov
and
xchg
mov
push
pop
cmc
jg
and
cld
inc
inc
xlat
les
shll
out
xchg
mov
test
xorb
sub
jecxz
fs
dec
fiadds
loopne
adc
add
inc
inc
mov
in
gs
addb
mov
mov
scas
jbe
testl
xchg
fs
cmp
add
movsl
test
cs
inc
popa
addb
cmp
js
loop
adc
and
add
in
xchg
add
gs
inc
mov
dec
out
xchg
ret
add
insb
inc
mov
int
xor
lds
loopne
sub
inc
and
ja
fisubl
sbbl
sahf
cwtl
sbb
cmpsl
jbe
addb
inc
xchg
insb
jns
in
cmc
mov
fcomip
xor
lods
and
mov
add
repz
adc
xchg
rcll
push
jmp
adc
add
jbe
add
lds
fdivrs
bound
pusha
pusha
in
xchg
clc
mov
loopne
loopne
mov
lret
inc
roll
or
loopne
inc
pushf
add
pop
daa
add
shrb
add
sbb
pusha
aad
xor
xchg
jo
inc
scas
add
hlt
inc
pop
mov
mov
fisttps
add
in
mov
loop
pushl
push
fisubl
rol
pusha
pusha
inc
jmp
fimull
out
and
lds
pop
loopne
fcmove
xor
inc
add
pusha
pusha
out
cli
xor
jo
sbb
aad
testl
and
addb
mov
sarb
rcr
push
xchg
cli
sbb
addb
ss
sub
cwtl
sub
lock
xchg
and
rol
int3
inc
push
mov
add
push
add
pop
sarb
loopne
sbb
jns
test
mov
mov
inc
shl
push
repz
iret
lcall
loopne
and
lahf
lahf
adc
mov
mov
mov
movb
jl
ss
inc
inc
mov
sub
and
adc
mov
sbb
sbb
out
ljmp
add
inc
movsl
out
adc
inc
pop
cltd
mov
cltd
pusha
xchg
push
cli
punpckhdq
loope
icebp
pop
inc
nop
idivb
push
and
shrb
xchg
stc
add
loopne
aas
loope
sub
lods
pusha
pusha
rorb
cmpsb
and
pop
adc
shl
jmp
pusha
mov
mov
ror
or
or
loopne
mov
enter
add
inc
sbb
in
add
and
aas
repz
add
in
repz
jl
jle
dec
stc
inc
adc
add
loopne
jmp
xchg
aam
in
sbb
ss
test
and
mov
fistl
cmp
popf
idivb
arpl
inc
insl
dec
sub
fwait
and
add
fsubp
popa
xchg
incb
ret
ret
push
lcall
inc
inc
stc
push
mov
aas
or
dec
popa
popa
jp
pop
xchg
xlat
sub
callw
fxch
fucomi
fsub
fdivs
iret
jnp
loop
sbb
inc
push
adc
xchg
aam
int
les
mov
fsts
pop
sti
sbb
sbb
stc
bt
jp
adc
mov
jns
addb
loopne
add
loopne
xor
mov
or
decl
pusha
pusha
or
loopne
mov
adc
lea
addb
notl
pop
out
fidivrs
mov
aaa
pop
cmp
sbbl
pusha
pusha
push
jae
pushf
hlt
dec
sbb
pusha
lcall
mov
fisubl
adc
cwtl
jl
dec
cwtl
jmp
test
jnp
pop
push
lret
or
add
mov
push
loopne
stos
rol
ljmp
and
xchg
mov
inc
adc
jmp
mov
lret
push
and
xor
sub
jns
rol
cltd
loopne
negl
loopne
mov
cmp
cmp
lds
int
gs
jge
shll
sub
addb
leave
mov
add
dec
ror
or
test
and
lods
add
sub
rclb
addb
mov
test
push
shll
fildll
fsubrl
fnstenv
inc
inc
fwait
jne
cmp
inc
es
adc
and
mov
loopne
mov
jmp
and
mov
pop
mov
push
into
stos
mov
pusha
pusha
rolb
jmp
pushf
cmp
xor
testl
fildll
inc
mov
mov
mov
and
arpl
int3
loope
andb
mov
or
loopne
dec
mov
clc
testb
loopne
hlt
andb
inc
ret
sub
add
loopne
lcall
push
dec
adc
hlt
mov
or
fsubrp
push
call
mov
or
push
and
test
ja
add
call
popf
mov
and
jno
nopl
rclb
stos
mov
and
mov
inc
sbb
int
js
std
xchg
fcomps
sub
rcrl
sar
arpl
jae
xor
adc
or
jp
add
mov
jle
loopne
cwtl
sti
fldcw
lods
mov
mov
and
and
inc
inc
das
cltd
ja
jecxz
popf
xchg
loop
fidivs
sahf
test
loopne
mov
shll
maxps
and
idivl
jge
cmp
rol
jecxz
and
shr
cmp
pop
scas
and
pop
push
sbb
add
sbb
add
test
andb
mov
in
sbb
dec
xor
fldenv
aas
push
ret
pop
fists
fildl
inc
pop
aad
add
loope
ljmp
arpl
std
xchg
add
rol
and
add
jmp
pusha
pusha
popa
add
int3
lods
addb
addb
das
push
mov
dec
ds
popa
inc
je
xchg
cmp
push
jne
mov
add
mov
mov
outsl
mov
loopne
or
rorb
shlb
dec
xlat
loope
jae
jmp
mulb
stos
mov
dec
in
mov
mulb
mov
daa
into
push
clc
push
cltd
in
iret
aad
mov
push
pop
inc
stos
in
pop
mov
add
loope
mov
sbb
add
mov
and
loopne
test
pusha
outsb
inc
shlb
frstor
adc
jg
mov
xchg
test
xlat
fcoms
and
and
out
outsb
xchg
stos
sahf
lods
xor
insb
or
int
loopne
cmc
add
out
mov
nop
sti
lea
arpl
ret
or
or
mulb
bound
loopne
fcom
or
and
jg
cmp
push
jo
push
in
and
and
mov
in
adc
mov
inc
fucomp
xchg
sti
add
push
inc
daa
stc
xor
pop
dec
or
mov
dec
or
out
rolb
and
cltd
shll
or
mov
fcom
mov
pop
jnp
sub
and
std
rcl
inc
stc
inc
in
dec
and
push
dec
ja
stc
pushf
pop
push
add
aas
and
dec
adc
fisubrl
aas
xchg
lret
jge
dec
push
out
pop
jge
sub
xchg
std
js
push
xchg
push
rcrl
jl
andb
int
ljmp
add
cld
mov
movsb
add
sti
sub
cmp
popa
mov
sahf
mov
ret
dec
test
cmp
and
pop
jb
lcall
sbb
shlb
mov
shr
sbb
mov
in
push
pusha
pusha
adc
nop
lds
into
pop
adc
into
test
lds
popf
jmp
sahf
ret
fadd
pusha
xor
inc
aam
xchg
mov
shlb
add
add
in
into
in
shl
push
imul
mov
mov
pusha
pusha
cli
dec
lcall
fsubl
into
stos
hlt
push
jge
rolb
inc
loope
and
inc
xchg
sbb
mov
cld
in
cli
xchg
mov
mov
xchg
jge
push
pop
push
mov
mov
int3
out
pop
jmp
adcb
stc
std
push
rol
add
iret
insl
xor
repnz
loopne
jb
gs
in
push
ds
out
xchg
ss
xor
and
jle
sbb
pop
in
mov
cwtl
mov
notl
popa
push
lret
sarl
jl
in
and
mov
mov
and
inc
jns
inc
inc
pop
nop
icebp
mov
aad
adc
mov
lock
rolb
adc
std
imul
cltd
push
jno
push
mull
nop
lret
sub
movsb
mov
add
pop
cli
pusha
notb
loopne
jmp
inc
cmp
iret
outsb
bound
push
and
mov
aas
jne
pop
mov
mov
pusha
pusha
js
imul
pusha
pusha
inc
int
add
sahf
jl
insb
int
loopne
pusha
fisubs
iret
xor
shrl
arpl
aad
pop
addb
mov
jl
add
addl
test
movsb
addb
or
rolb
pusha
push
icebp
adc
shrl
mov
and
in
push
addb
and
and
in
dec
xor
mov
xchg
and
xor
das
xchg
and
and
rcrb
pusha
jb
mov
inc
aaa
cld
in
add
inc
or
add
inc
cmp
and
loopne
daa
ret
xor
pop
jg
mov
pop
pop
sub
jmp
call
sti
cmp
inc
inc
and
loopne
rol
fsubrp
and
arpl
dec
aad
les
fadds
scas
pusha
pusha
in
lcall
loope
and
pusha
mov
rol
ja
mov
loopne
jmp
add
push
fisttps
mov
add
mov
xchg
fst
popa
cmp
ja
mov
fldt
test
sub
addb
in
add
jl
mov
arpl
inc
shl
in
mov
cmpsl
mov
and
loopne
jnp
jle
fsubrs
hlt
and
lret
push
mov
cmp
sub
mov
inc
inc
loop
xlat
stc
aaa
sahf
dec
in
sbb
lret
add
andb
das
adc
push
pop
enter
mov
aaa
pop
fmuls
inc
fistl
mov
mov
jp
rol
xchg
sbb
hlt
dec
xchg
inc
bound
pop
arpl
mov
add
div
dec
push
iret
mov
mov
cmpsl
mul
inc
cmp
cmp
mov
aad
cli
aaa
test
rclb
loopne
mov
mov
mov
xchg
mov
mov
sbb
loopne
repnz
in
xor
add
pushf
push
addb
inc
fsubrl
test
cmp
outsl
push
jl
mov
fildl
loop
xchg
cld
mov
pop
cmpsb
pusha
pusha
aam
in
dec
inc
cli
repz
addb
and
add
or
adc
int3
add
shrb
pand
xchg
loopne
push
loope
bound
roll
addb
or
repz
shrb
test
daa
scas
cmp
repz
pusha
enter
xchg
imul
sbb
mov
bswap
loopne
iret
mov
sub
inc
adc
inc
mov
dec
and
and
jmp
insb
repnz
aam
mov
pop
xor
orl
dec
or
mov
hlt
mov
sub
and
xor
cmp
rol
fisttpll
addb
adc
dec
push
inc
inc
add
sub
and
sbb
mov
aam
and
inc
ja
out
mov
mov
scas
add
xchg
add
inc
ret
imul
mov
add
lock
pusha
pusha
inc
imul
out
dec
ja
sub
mov
dec
push
push
addb
cmp
lret
mov
ljmp
inc
inc
jmp
loopne
mov
mov
addb
push
lea
fiaddl
out
enter
loopne
cli
fldcw
mov
hlt
out
fidivl
dec
lret
mulb
push
add
and
or
pusha
jg
aam
sub
mov
daa
push
jno
rcrl
lret
mov
loopne
sub
cmpsb
addb
inc
cld
push
mov
inc
ret
mov
ss
add
shlb
add
mov
shlb
stc
outsb
pop
add
jnp
mov
ds
clc
mov
icebp
cld
scas
add
imul
add
add
push
push
pushf
jg
lahf
jbe
mov
jae
divl
rcr
push
cmc
ss
pop
cmp
sub
add
pusha
pusha
daa
imull
scas
pusha
pusha
add
fs
loopne
in
dec
dec
jbe
pusha
pop
xchg
cmp
and
ret
pop
fistpll
out
out
mov
push
or
add
loop
sub
and
cs
pusha
pop
jno
inc
pop
aad
mov
outsb
cmp
divl
jae
sub
rcl
fnstcw
pusha
pusha
and
add
mov
cmp
jo
mov
dec
rorb
inc
into
fstps
test
push
mov
rcrl
mov
mov
ljmp
xor
xchg
jmp
add
loopne
andb
int3
or
or
lret
lea
sub
cmovne
pusha
pusha
out
mov
push
dec
inc
adc
aam
test
shlb
dec
xchg
data16
fstps
in
call
loope
mov
jne
adc
clc
mov
push
mov
pop
jmp
punpckldq
mov
dec
data16
and
and
sbb
add
add
mov
mov
popa
xchg
pop
jecxz
fldt
loop
xor
push
rorb
icebp
fdivrs
incl
je
dec
add
loopne
mov
movsl
fisttps
or
sbb
jp
ljmp
andb
xchg
jl
pusha
pushf
mov
xchg
add
adc
mov
xor
in
rcrb
sbb
and
mov
add
jmp
out
movsb
rol
cmp
daa
lret
add
jb
sub
lods
addb
xchg
jge
jge
mov
mov
inc
mov
loopne
jno
mov
and
xchg
popf
inc
loope
js
mov
and
and
cmp
loopne
shlb
mov
in
icebp
add
or
not
fsubrl
inc
xor
or
subl
jl
inc
inc
call
xor
popa
mov
adc
push
xchg
test
es
inc
pop
sbb
aad
loopne
add
add
inc
stos
rol
movsl
roll
push
int3
sbb
sub
sti
jg
inc
inc
lahf
and
add
inc
cmp
mov
cmp
enter
push
push
aad
inc
dec
movsl
sbb
jp
addb
pop
pop
das
mov
out
mov
inc
inc
cmp
loopne
gs
mov
pusha
pusha
lahf
xor
jae
pop
xor
sub
pop
shrl
push
andb
wbinvd
and
and
packsswb
loopne
cli
cmp
jmp
mov
mov
or
add
cmc
or
pusha
loope
ja
test
mov
loopne
data16
mov
test
or
sbb
pop
mov
loopne
out
pop
daa
mov
aaa
sbb
gs
jmp
adc
jns
nop
fstl
jp
push
cmpl
loopne
jg
jae
mov
lret
add
mov
inc
mov
popf
sub
outsb
pusha
jmp
test
rcrb
cmp
or
out
enter
dec
jl
pop
mov
cmpb
dec
pushf
clc
jmp
dec
fs
and
xor
cld
mov
dec
sub
mov
inc
or
jecxz
xchg
cmc
in
jo
popa
or
loopne
rolb
pusha
inc
sub
shll
and
lret
inc
xor
repnz
hlt
mov
cmpsl
cmpsl
mov
popa
jmp
adc
sub
and
aaa
adc
sbb
imul
mov
test
mov
dec
addr16
movsb
and
into
jl
rorb
dec
mov
movb
mov
mov
pusha
pusha
icebp
call
add
and
loopne
fiadds
in
ret
cmp
inc
inc
fwait
mov
and
pop
sarb
leave
and
fwait
fwait
dec
inc
ss
cmp
inc
inc
jle
ror
imul
add
sub
loopne
jmp
loopne
push
sub
mov
rol
mov
pop
nop
fisubrs
loopne
xcrypt-cbc
cmpsl
adc
in
push
or
sub
and
rorl
push
mov
or
das
lods
addb
jb
dec
mov
and
or
push
inc
and
sbb
and
aas
aaa
sbb
ror
xchg
xchg
stc
outsb
or
or
jb
ljmp
sbb
sarb
mov
sti
pop
shrd
adc
mov
aas
and
add
mov
fcompl
and
dec
frstor
mov
sti
aas
js
and
and
add
addl
fcoml
add
repz
addb
pop
push
sbb
out
push
xchg
pop
aaa
mov
in
das
push
xchg
rolb
xor
enter
mov
push
ret
cmp
cmc
and
rol
loopne
pop
fisttpl
pop
repnz
scas
pusha
pusha
add
add
sub
inc
shrl
dec
dec
ds
out
mov
insl
test
and
rcrb
xchg
add
out
negl
mov
xchg
imul
test
push
add
inc
push
mov
into
int3
or
stos
rol
sbb
in
popa
xor
scas
push
push
and
mov
lock
loopne
daa
or
in
mov
inc
lret
insb
repnz
pusha
mov
add
mov
add
push
outsl
and
cmp
ja
push
in
in
jae
sbb
adc
lcall
test
aad
shrl
mov
in
mov
loopne
lods
loopne
push
inc
mov
cmp
cmpsl
ss
sarb
ret
jne
enter
aas
lods
add
add
scas
xchg
out
addb
loopne
scas
mov
addb
pusha
test
mov
xor
xchg
in
add
orb
lods
add
push
push
and
mov
mov
or
fildll
pusha
pusha
xor
rorb
insb
push
das
jbe
inc
out
das
and
mov
add
shlb
out
inc
pop
add
out
dec
inc
subps
addb
mov
dec
aaa
int
je
sbb
fnsave
movb
mov
pop
push
push
rol
push
pusha
pusha
lret
shlb
add
and
rcrb
sbb
movsl
ss
cmp
in
dec
jo
out
pop
sarl
and
jge
push
loopne
andb
pusha
pusha
hlt
pop
push
icebp
leave
sub
and
iret
adc
in
jecxz
call
jno
test
and
or
les
rol
cmp
mov
push
mov
and
int3
or
inc
andb
sbb
pop
rcl
jge
pop
jb
jmp
std
jae
nop
cmp
scas
cmpsl
enter
jns
in
mov
movsl
cltd
dec
sbb
arpl
mov
mov
add
rorb
adc
addb
mov
loopne
pushf
or
and
mov
insb
jbe
stos
inc
inc
mov
loopne
jg
or
pusha
pusha
xlat
xor
cli
nop
andb
and
fcomps
add
push
jmp
cmp
push
jl
adc
and
cltd
or
in
xor
ret
jns
movsb
pusha
pusha
cmp
mov
inc
fwait
or
inc
jbe
mov
nop
inc
into
and
jae,pt
insl
mov
cmpsb
mov
mov
add
das
mov
mov
imulb
lea
dec
ds
addb
lods
in
inc
jnp
cmp
xor
dec
jns
mov
sarl
add
jae
push
leave
xchg
fwait
popa
xchg
mov
mov
jge
and
pusha
sbb
dec
dec
mov
and
xchg
sbb
push
mov
pop
or
inc
insb
and
mov
insb
jg
cmp
lods
dec
ret
es
inc
mov
and
lods
add
pop
pxor
clc
imull
out
leave
mov
and
pusha
pusha
pop
stos
inc
insb
shll
add
scas
addb
rol
jno
ds
scas
mov
jecxz
xchg
cmc
iret
rcl
stos
jl
push
xchg
sahf
arpl
es
inc
mov
sub
add
mov
and
jbe
orl
scas
add
insl
mov
jg
imul
shl
inc
push
sahf
xchg
dec
dec
add
dec
les
or
and
out
mov
cmpsb
mov
rclb
data16
dec
leave
div
imul
cmp
loopne
in
sbb
cmp
dec
lret
xor
add
repnz
leave
movsl
in
mov
rcr
int3
adc
mov
rorb
pop
pop
mov
mov
pusha
data16
add
mov
xor
pusha
mov
add
repnz
xor
add
insl
aaa
aaa
jae
mov
loop
mov
insl
mov
rclb
out
nop
sbb
inc
xchg
in
sub
addb
inc
aad
adc
test
stos
mov
mov
loop
xor
lcall
ljmp
cmp
mov
shll
pop
sbb
fdiv
insl
mov
aad
mov
and
and
add
add
lretw
inc
inc
lock
or
pop
scas
mov
jecxz
mov
loopne
mov
ja
retw
mov
subl
in
inc
inc
int3
add
cld
out
sub
rclb
fsub
rolb
bound
and
sub
jle
sub
add
adc
rol
loopne
sbb
mov
inc
pmullw
cwtl
loope
test
or
sbb
xor
inc
aaa
ficoml
enter
addb
or
mov
jnp
push
sub
jb
ljmp
bound
iret
hlt
mov
add
in
sub
push
outsb
sub
inc
lret
dec
jnp
sub
push
mov
push
xchg
jecxz
stc
out
or
jge
inc
inc
ss
lods
jle
push
jo
pop
movsb
pusha
pusha
fimull
or
loopne
sti
mov
leave
icebp
stc
cmp
rol
inc
inc
push
pop
pop
and
mov
imul
adc
je
mov
xchg
sbb
mov
jle
jp
mov
adc
and
repnz
mov
and
push
into
inc
shll
clc
lock
loopne
pusha
pusha
pop
dec
pop
insl
data16
push
add
loopne
lods
enter
mov
jnp
pusha
fnstcw
push
das
xchg
das
dec
js
ja
inc
sbb
fbstp
xor
mov
outsb
cmp
push
popa
push
test
xchg
fsts
inc
xchg
fidivrl
dec
loope
outsl
or
bound
out
aad
mov
and
addb
xor
push
add
pusha
pusha
rolb
add
popa
cmp
cmp
rol
enter
movsb
and
and
loopne
mov
pushf
ret
sti
fdivr
xchg
pushf
jp
inc
inc
adc
and
and
pusha
inc
fdivrl
jge
loopne
sub
imul
dec
ljmp
pop
pop
add
mov
sub
add
testb
aam
mov
inc
inc
push
pusha
pusha
cmpsb
addb
mov
push
stos
inc
inc
cmpsl
jp
stos
sbb
dec
popf
leave
mov
scas
inc
inc
movsl
cmp
jmp
subb
and
xchg
ds
mov
sub
push
push
push
mov
pushl
xor
pushl
mov
push
mov
mov
call
mov
cmp
jne
mov
test
je
mov
lea
cmp
jb
mov
mov
lea
push
pushl
pushl
call
xor
add
inc
pop
pop
pop
leave
ret
pop
add
dec
add
push
add
add
pop
add
inc
add
add
push
add
pop
add
inc
add
inc
add
add
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
mov
mov
test
je
mov
test
je
cmpl
jl
test
je
cmpl
je
test
je
cmp
je
cmp
jle
mov
test
jne
mov
and
dec
and
test
jne
mov
and
dec
and
test
jne
test
je
lea
mov
mov
and
mov
mov
cmpl
je
cmp
mov
mov
jg
mov
lea
mov
mov
mov
and
dec
movb
mov
jne
movb
lea
lea
lea
mov
mov
mov
and
mov
mov
and
mov
mov
and
mov
mov
and
mov
mov
lea
and
andl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
movzwl
mov
test
jne
mov
mov
movzwl
lea
mov
mov
cmp
jbe
mov
xor
cmp
jne
cmp
je
mov
movzwl
mov
mov
shr
mov
mov
lea
mov
add
mov
cmp
jbe
cmpl
jne
cmpl
jne
mov
mov
inc
add
add
add
mov
nop
push
push
call
orl
xor
mov
pushl
call
mov
xor
inc
mov
mov
test
je
lea
push
pushl
call
test
je
testb
jne
pushl
push
pushl
call
mov
andl
movl
call
mov
cmp
je
call
ret
nop
incl
add
add
incl
add
add
incl
add
add
out
jbe
add
add
push
jbe
aaa
push
jbe
nop
nop
nop
nop
pushl
call
ret
mov
lea
push
lea
push
push
pushl
pushl
call
test
je
cmp
jne
push
push
pushl
call
mov
test
je
jmp
nop
nop
nop
nop
nop
mov
push
mov
mov
test
je
test
jne
mov
pop
ret
nop
nop
nop
nop
nop
push
push
call
andl
mov
cmp
jae
mov
movl
mov
call
ret
nop
nop
nop
incl
add
add
add
ljmp
push
jbe
fcoml
loop
push
jbe
nop
nop
nop
nop
push
push
call
xor
mov
mov
mov
mov
xor
inc
mov
pushl
call
mov
cmp
je
pushl
call
mov
cmp
je
movzwl
mov
mov
lea
push
push
lea
push
push
pushl
call
push
call
mov
mov
call
movl
mov
test
jl
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
incl
add
add
incl
add
add
push
cmp
or
push
jbe
add
add
add
add
push
jbe
nop
nop
nop
nop
pushl
call
pushl
call
ret
nop
nop
nop
nop
nop
mov
push
mov
push
pushl
pushl
pushl
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
push
push
call
mov
mov
xor
mov
mov
cmp
je
movzwl
cmp
jb
test
jne
cmp
je
mov
add
mov
cmp
jne
mov
and
jne
cmpl
jne
push
push
mov
jmp
mov
lea
cld
decl
dec
neg
sbb
not
lea
and
push
lea
push
lea
push
mov
dec
neg
sbb
not
lea
and
push
mov
dec
neg
sbb
not
lea
and
push
push
pushl
mov
neg
sbb
lea
and
push
pushl
neg
sbb
and
push
xor
push
push
push
push
push
push
push
push
call
cmpl
mov
je
testb
jne
push
call
test
jne
test
jl
cmpl
je
mov
mov
mov
mov
mov
testb
jne
mov
test
jne
push
lea
mov
push
lea
push
lea
push
xor
push
lea
push
movl
mov
movl
mov
mov
call
mov
cmp
jl
movl
push
pushl
call
test
jne
orl
push
push
lea
push
lea
push
pushl
call
mov
test
jl
mov
mov
mov
mov
mov
mov
mov
testl
jne
lea
push
call
mov
test
jl
xor
cmpl
jne
cmpl
jne
xor
cmp
jne
cmp
je
pushl
call
cmp
je
cmp
jne
lea
push
call
cmp
je
cmp
je
pushl
call
pushl
mov
mov
mov
push
pushl
call
mov
mov
cmp
mov
je
cmp
jne
mov
mov
mov
mov
test
je
xor
mov
mov
xor
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
mov
test
ret
out
or
inc
inc
sub
mov
leave
test
and
or
inc
inc
jo
mov
and
add
add
or
addb
or
inc
or
loopne
cmp
addr16
xchg
adc
sbb
dec
dec
andb
loopne
xchg
sti
fldl
pop
inc
stc
addl
and
frstor
je
fnstcw
jne
inc
or
inc
mull
push
pop
adc
mov
movb
and
movsl
cli
insb
sub
addr16
add
cmp
adc
scas
rol
inc
inc
aaa
lcall
jno
pusha
pusha
aaa
pop
sub
cmpl
pop
insl
sbb
stc
icebp
lea
js
and
xchg
pop
cmp
sbb
sbb
lds
stos
pop
call
xchg
push
mov
fucom
out
jbe
sbb
fisttpl
mov
xor
test
inc
or
and
jge
push
repnz
inc
leave
cmpsb
loopne
add
add
cmp
fbstp
addb
jmp
cmp
das
pop
loope
icebp
cmp
loope
sahf
dec
xchg
hlt
ss
sbb
push
cmp
cmc
ja
mov
icebp
mov
jl
mov
sbb
imul
add
push
mov
pop
sub
jne
ja
popa
sub
mov
xchg
push
addl
add
push
sub
mov
or
rol
xchg
or
push
or
lahf
jno
leave
mov
xchg
rcrl
dec
lahf
lret
mov
sbb
stos
cltd
lea
add
gs
xchg
sbb
addb
imul
sub
add
jp
mov
push
adc
add
test
ficoml
mov
push
lea
pusha
pusha
mov
insb
xchg
stos
and
pop
push
sahf
pop
mov
addb
and
sub
pushl
jae
rol
daa
push
jmp
rcr
aas
xchg
mov
mov
push
imul
adc
cmp
jo
rol
jg
rol
rorb
shrb
pop
xor
repz
bound
pushf
lret
add
dec
push
into
mov
inc
or
lcall
mov
jp
or
loopne
sub
adcb
test
mov
inc
xor
dec
in
xchg
lea
add
bound
pop
or
and
push
and
les
cwtl
popf
xchg
jecxz
cmp
cmpsb
loopne
outsl
ljmp
out
data16
aad
cs
inc
adc
mov
mov
add
mov
pop
outsb
sub
inc
clc
cmp
cmp
aad
clc
lret
dec
aam
xlat
das
jns
addb
addb
xchg
mov
aad
adc
enter
ret
repz
or
insl
sbb
sbb
inc
pop
ret
addb
shl
je
fdivr
push
jnp
xchg
push
xor
jno
add
loopne
pushf
rol
das
dec
in
xchg
enter
pop
ficoms
and
nop
mov
add
xor
xor
mov
xchg
icebp
push
and
xor
mov
pop
mov
cs
inc
cmp
mov
and
pusha
pusha
pop
jmp
mov
and
rol
scas
in
je
adc
lods
and
mov
ljmp
mov
cmpsb
addb
outsb
sbbl
cmc
push
das
in
mov
and
add
and
xchg
enter
pusha
jg
jp
mov
subl
imul
sar
dec
push
scas
loopne
insb
scas
push
insb
stc
cmpsl
adc
out
sbb
lods
mov
mov
add
aaa
mov
jl
filds
lahf
cmp
xchg
add
mov
addb
mov
mov
cmp
aaa
scas
inc
inc
pop
pop
pop
jo
or
add
and
add
stc
aam
xor
sub
out
dec
xor
mov
sbb
insb
sti
rcll
ret
mov
sub
mov
shlb
lahf
push
xor
dec
adc
sbb
and
in
pusha
pusha
imull
or
subb
mov
xor
add
mov
and
loop
aad
jge
sar
fiaddl
int3
jbe
sub
loopne
xchg
and
icebp
fsubrs
test
and
loopne
pusha
mov
cmp
pop
pusha
ss
mov
add
je
pushf
adc
xchg
mov
fdivrp
test
add
scas
shlb
pusha
inc
mov
and
nop
mov
sub
fstpl
jmp
loop
jecxz
pop
xchg
sbb
addb
jl
pusha
pusha
sub
ret
mov
jae
fwait
lret
jecxz
sub
pop
xor
and
dec
push
add
enter
dec
pop
mov
push
jmp
adc
mov
xchg
xor
es
xchg
jge
sub
or
mov
loopne
jno
inc
inc
js
push
mov
lret
mov
push
or
sti
lods
addb
mov
xchg
mov
add
rol
xor
lret
fildl
xor
xchg
add
insb
xor
push
dec
dec
sti
std
dec
nop
mov
leave
subl
mov
dec
mov
movsb
pusha
pusha
jb
mov
jmp
cmpl
pop
test
rclb
loopne
mov
jb
add
jp
enter
push
jp
push
scas
loop
call
test
and
mov
loopne
mov
rol
pop
int3
pop
mov
mov
imul
xchg
pusha
cmpsb
loopne
shll
or
add
xchg
sbb
cmpsl
or
pop
add
cmp
jmp
jge
inc
inc
jmp
sbb
cmp
hlt
cmpsl
jne
loopne
fneni(8087
mov
push
cmp
loopne
jns
push
and
movl
add
clc
or
add
push
pop
add
sbb
xor
mov
pop
add
repz
xor
mov
inc
xchg
fiadds
rol
aad
adc
or
fcomip
pop
jbe
sbbl
pop
dec
and
repnz
pop
jp
inc
inc
cmp
call
int
fcompl
dec
xor
or
inc
aad
test
mov
das
or
xor
push
inc
mov
mov
imul
jge
int
cwtl
mov
mov
scas
pusha
pusha
aam
dec
push
mov
push
addb
pop
adc
das
lods
pop
cmp
cmp
clc
loopne
fidivl
mov
shl
adc
inc
inc
rol
stos
pusha
pusha
xor
ljmp
pop
adc
pop
jb
lret
outsb
xchg
outsl
sbb
loope
mov
add
je
sbb
pop
add
pusha
sub
test
pusha
gs
mov
ja
pop
cwtl
aas
icebp
inc
outsl
xor
stos
addb
mov
xor
xor
jge
call
shll
inc
inc
movsl
cld
add
shl
mov
cmpsb
pusha
pusha
add
rclb
lods
xchg
es
pusha
add
stos
inc
cmpsl
out
adc
xchg
adc
xchg
and
icebp
in
outsb
lret
xorb
push
test
cltd
jp
pop
imul
jp
sarl
pop
jnp
pop
mov
and
xor
pop
mov
mov
out
cmpsl
sbb
fucomi
dec
push
movsb
rol
repnz
push
loopne
popf
push
out
and
inc
sbb
sub
shl
lds
pop
sub
xchg
pop
data16
add
inc
lock
addb
fldl
add
inc
js
popf
and
sub
add
mov
rol
out
add
loopne
enter
push
stc
fidivl
aas
push
icebp
mov
adc
and
pusha
addr16
int3
fildll
mov
jge
and
xor
adc
sub
inc
inc
xchg
sbb
lods
out
cmpsb
mov
jmp
push
fcmove
pop
daa
push
into
adc
clc
ret
iret
stc
sbb
aad
rol
inc
inc
adc
jno
loope
mov
maskmovq
mull
mov
add
mov
gs
mov
movsl
jp
inc
mov
adc
inc
inc
lahf
out
and
and
rol
cli
add
sbb
cmp
sub
add
mov
sub
add
cwtl
test
jae
aad
loope
push
dec
clc
pop
test
push
xor
loopne
cmp
call
and
out
mov
push
jns
xchg
icebp
add
rolb
push
pop
sbb
into
add
lret
hlt
inc
mov
and
sub
shr
add
mov
mov
mov
andb
hlt
out
pop
or
imul
and
in
cmp
dec
aad
add
adc
inc
dec
cmp
fisubrl
add
pusha
pop
push
pusha
pusha
test
rorb
or
adc
mov
addb
and
or
loopne
lcall
out
rclb
fidivrs
jge
inc
fildll
and
andb
xor
enter
stos
addb
push
repz
xor
mov
imul
ljmp
cwtl
jle
cmp
push
inc
inc
inc
mov
repz
and
shlb
les
jb
push
test
test
out
xchg
popf
xchg
out
in
xor
addr16
test
jo
mov
sbb
mov
das
inc
loopne
sbb
pusha
stos
cmp
xadd
stos
rol
pop
and
inc
popf
and
adc
mov
addb
fstl
negb
sbb
pusha
fildll
loopne
push
mov
xor
sub
loopne
ret
jmp
fnstenv
out
rclb
rorl
movsb
and
popf
movsb
rol
pushf
cmpsl
ja
int
xchg
dec
mov
jae
jp
pusha
pusha
sub
addr16
xchg
mov
add
int
pop
and
pusha
pusha
xchg
mov
and
inc
repz
or
add
ljmp
fldl
stc
shrl
mov
outsl
cli
popf
cmpsl
test
shl
lcall
adc
jge
and
add
xor
int
icebp
cmc
je
pop
inc
and
addr16
loopne
mov
popa
push
push
lcall
adc
adc
add
sub
rol
add
loopne
sub
mulb
xorb
call
push
notb
and
or
mov
add
shlb
or
pusha
cli
xchg
xor
pusha
sub
xor
cmp
aas
xor
stos
or
shl
or
pop
sbb
out
daa
ret
add
inc
and
outsb
or
orb
cwtl
sbb
add
shlb
rcr
sbb
jae
pop
mov
dec
cmc
in
imul
shll
stos
pusha
pusha
das
jnp
xlat
sbb
orl
pusha
mulb
cmpb
jmp
cmp
arpl
loop
mov
loopne
add
out
jnp
andb
add
aaa
nop
cwtl
testb
les
mov
pop
xor
jb
mov
dec
xor
out
jbe
inc
inc
lcall
inc
punpckhwd
sub
pusha
shll
mov
inc
das
cwtl
add
adc
rclb
bswap
xchg
loopne
fidivrs
fsubl
jbe
push
pop
push
add
dec
ljmp
enter
push
ljmp
pop
out
jne
lahf
add
inc
or
stos
rol
mov
xor
mov
inc
pop
outsl
out
test
push
pusha
adc
xor
sbb
orb
mov
add
xor
inc
mov
mov
and
popf
sub
loopne
mov
nop
lods
pusha
pusha
mov
outsl
mov
test
jge
cmp
jb
cld
lret
out
push
mov
aad
dec
add
add
inc
fdivl
cld
dec
or
and
mov
loopne
movsb
rol
sarl
loopne
movsb
pusha
pusha
mov
stos
or
cmp
add
add
stos
xchg
repz
mov
adc
inc
cltd
int3
int3
and
shl
cltd
lds
and
rorb
add
dec
sbb
and
inc
inc
in
rol
xor
loopne
jge
pusha
pusha
aas
cmc
mov
loopne
fdivrs
fbld
add
lods
mov
xlat
inc
rcrl
lret
shl
jbe
jns
jne
sbbl
add
xor
ja
add
xor
mov
into
jne
push
cmc
mov
iret
add
shr
xchg
mov
shlb
pusha
pusha
xor
sbb
xchg
stos
and
add
pusha
add
inc
inc
mov
fsubs
rorb
mov
andb
and
scas
test
jne
lock
daa
push
xchg
les
xor
dec
lcall
loopne
shrl
add
add
aad
xor
test
and
js
fnstsw
popf
jno
pop
lds
fprem1
cmp
loopne
fisttpll
rol
jle
addb
popf
andb
jns
into
insb
xchg
arpl
dec
ds
mov
pop
xchg
cmp
sbb
or
add
out
fldl
and
stc
dec
fsubr
adc
jns
mov
repnz
andl
adc
inc
lds
loopne
mov
adc
repz
and
push
movsl
fnstenv
and
loopne
fwait
cmpsl
mov
jl
test
rol
addl
jp
gs
sbb
loopne
and
or
aam
out
and
cmp
shlb
out
stc
mov
enter
ds
lcall
shrb
mov
loopne
mull
arpl
adc
aaa
imul
mov
nop
cld
jae
add
mov
ret
add
mov
nop
clc
repnz
cld
jae
inc
inc
add
mov
nop
clc
repnz
cld
jae
xchg
call
mov
outsb
sub
repnz
inc
add
add
add
inc
jg
push
inc
push
dec
nop
clc
repnz
cld
jae
inc
add
call
repnz
cld
jae
scas
scas
xchg
out
repnz
and
shlb
nop
push
mov
leave
nop
jmp
add
add
jne
nop
clc
repnz
cld
jae
pushf
sbb
mov
clc
repnz
cld
jae
or
add
sbb
sbb
clc
repnz
cld
jae
out
scas
add
jg
add
incl
nop
push
mov
leave
nop
jmp
call
data16
inc
add
add
add
lea
nop
clc
repnz
cld
jae
inc
pop
adc
and
dec
jbe
pop
push
mov
xchg
ret
scas
xor
inc
add
adc
pop
rep
push
mov
xchg
ret
pushf
mov
int
pop
pushl
nop
clc
repnz
cld
jae
add
add
ret
inc
inc
mov
nop
clc
repnz
cld
jae
add
add
add
mov
add
nop
clc
repnz
cld
jae
add
es
mov
nop
clc
repnz
cld
jae
aam
pop
cmp
inc
sbb
test
clc
repnz
cld
jae
dec
aaa
add
cmpb
mov
xchg
ret
push
add
and
in
leave
nop
jmp
jp
dec
add
add
call
nop
push
mov
leave
nop
jmp
add
add
bound
nop
clc
repnz
cld
jae
add
add
inc
adc
das
call
nop
clc
repnz
cld
jae
addr16
sbb
dec
add
nop
clc
repnz
cld
jae
add
inc
add
push
imull
push
mov
xchg
ret
add
add
xorl
nop
push
mov
leave
nop
jmp
test
mov
nop
clc
repnz
cld
jae
add
dec
add
fdivp
in
xor
push
nop
clc
repnz
cld
jae
add
dec
test
add
das
fistpl
nop
clc
repnz
cld
jae
aaa
add
add
sbbl
add
add
int
ja
nop
clc
repnz
cld
jae
add
push
aaa
int
andl
in
leave
nop
jmp
pop
add
rorl
nop
cld
jae
addb
pop
push
mov
xchg
ret
mov
add
cmp
je
inc
add
add
add
int
push
mov
xchg
ret
jl
add
and
cmp
inc
push
push
mov
xchg
ret
mov
inc
aaa
add
nop
clc
repnz
cld
jae
sub
mov
inc
nop
clc
repnz
cld
jae
addr16
add
mov
jmp
pushf
inc
add
adc
or
mov
pusha
pusha
popf
mov
nop
clc
repnz
cld
jae
ret
jl
pop
movsb
scas
pusha
pusha
in
jne
nop
clc
repnz
cld
jae
add
push
int3
jg
adc
clc
repnz
cld
jae
inc
add
add
add
mov
xchg
ret
add
in
xchg
fdivr
push
nop
clc
repnz
cld
jae
inc
add
sbb
add
lret
nop
push
mov
leave
nop
jmp
aad
cmp
cmp
stos
mov
nop
clc
repnz
cld
jae
add
popa
push
nop
clc
repnz
cld
jae
add
add
pop
add
xchg
pop
nop
clc
repnz
cld
jae
inc
add
add
sbb
xlat
push
push
mov
xchg
ret
add
in
inc
add
jp
data16
or
jae
add
cmp
add
and
inc
add
add
add
add
xchg
push
sqrtps
jae
add
add
nop
clc
repnz
cld
jae
pop
pop
add
dec
pusha
dec
jnp
sub
and
add
mov
mov
loopne
add
pop
add
add
inc
add
test
push
cmc
add
lea
clc
repnz
cld
jae
add
jp
call
push
adc
add
push
add
mov
sbb
inc
add
mov
inc
add
push
nop
clc
repnz
cld
jae
add
inc
add
mov
push
mov
xchg
ret
pop
add
adc
sub
loopne
mov
push
mov
xchg
ret
or
add
add
mov
clc
repnz
cld
jae
jne
inc
add
add
add
mov
add
add
push
sub
call
add
pop
nop
clc
repnz
cld
jae
add
mov
add
ljmp
nop
cld
jae
add
clc
nop
clc
repnz
cld
jae
pop
pop
add
add
cmc
add
nop
push
mov
leave
nop
jmp
pop
jp
add
cmc
mov
nop
cld
jae
inc
jp
pop
add
add
mov
push
mov
xchg
ret
inc
inc
add
shr
dec
adc
add
jae
add
add
call
mov
xchg
ret
inc
add
add
xchg
nop
clc
repnz
cld
jae
add
pop
sbb
add
xor
loop
push
mov
leave
nop
jmp
sbb
add
inc
pop
popa
movswl
nop
clc
repnz
cld
jae
add
movsb
int
cltd
jmp
xchg
add
cmc
add
pop
fistpl
nop
clc
repnz
cld
jae
add
add
dec
popf
shr
nop
clc
repnz
cld
jae
add
xchg
mov
nop
push
mov
leave
nop
jmp
cmp
xor
add
add
clc
repnz
cld
jae
add
call
pop
nop
push
mov
leave
nop
jmp
addb
dec
add
dec
pop
pop
mov
nop
clc
repnz
cld
jae
inc
inc
aaa
or
jp
leave
mov
nop
push
mov
leave
nop
jmp
aaa
in
pop
add
pop
dec
shrl
push
mov
xchg
ret
scas
add
inc
pop
add
loopne,pn
inc
mov
push
mov
xchg
ret
xchg
add
jbe
pop
nop
clc
repnz
cld
jae
in
add
and
add
nop
cld
jae
add
and
add
out
stc
push
nop
clc
repnz
cld
jae
test
in
pusha
nop
push
mov
leave
nop
jmp
sbb
pushf
add
add
nop
clc
repnz
cld
jae
xor
roll
in
fwait
push
mov
xchg
ret
add
or
add
add
dec
repz
nop
clc
repnz
cld
jae
lea
fwait
nop
clc
repnz
cld
jae
pop
repnz
call
ret
nop
clc
repnz
cld
jae
repz
roll
add
inc
push
add
rorb
nop
clc
repnz
cld
jae
addb
add
mov
mov
xchg
ret
add
add
int
add
push
mov
push
mov
xchg
ret
sahf
fiadds
mov
push
add
nop
push
mov
leave
nop
jmp
repnz
ret
rorb
mov
adc
clc
repnz
cld
jae
inc
movsb
sbb
jne
pop
push
mov
xchg
ret
aaa
add
add
aam
inc
cld
js
mov
nop
clc
repnz
cld
jae
add
add
inc
add
js
add
adc
pop
in
or
nop
cld
jae
add
inc
add
add
ficompl
add
nop
clc
repnz
cld
jae
mov
add
clc
repnz
cld
jae
add
jne
call
enter
mov
xchg
ret
jl
add
sbb
add
add
addb
add
nop
clc
repnz
cld
jae
add
leave
nop
clc
repnz
cld
jae
jl
add
aam
add
add
add
jae
inc
ret
add
std
add
nop
clc
repnz
cld
jae
add
dec
mov
je
nop
clc
repnz
cld
jae
addr16
in
cmp
push
mov
xchg
ret
pop
inc
push
add
mov
nop
clc
repnz
cld
jae
add
xor
es
pusha
sub
add
and
xchg
imul
and
add
jl
add
negb
add
add
aam
pop
lcall
inc
add
add
add
or
roll
test
push
mov
xchg
ret
pop
pop
jp
add
aad
xlat
outsl
add
nop
clc
repnz
cld
jae
add
add
repnz
add
nop
clc
repnz
cld
jae
testb
scas
sub
nop
clc
repnz
cld
jae
test
add
imulb
inc
inc
xchg
xor
nop
clc
repnz
cld
jae
add
add
add
je
nop
clc
repnz
cld
jae
add
push
nop
push
mov
leave
nop
jmp
add
add
add
add
into
cmpsl
sub
push
mov
xchg
ret
roll
add
xor
add
nop
clc
repnz
cld
jae
add
repz
mov
mov
mov
xchg
ret
add
sbb
call
add
inc
fwait
nop
clc
repnz
cld
jae
add
inc
add
xchg
add
loopne
nop
clc
repnz
cld
jae
add
add
add
out
lahf
call
nop
clc
repnz
cld
jae
jl
add
add
add
add
nop
jmp
xchg
add
or
add
nop
clc
repnz
cld
jae
add
nop
clc
repnz
cld
jae
xchg
dec
xchg
test
popl
nop
clc
repnz
cld
jae
inc
add
inc
add
pop
jne
nop
push
mov
leave
nop
jmp
add
add
jae
or
scas
add
mov
push
push
mov
xchg
ret
repnz
add
pop
inc
add
add
push
push
mov
xchg
ret
dec
lea
xchg
xchg
add
repnz
push
mov
leave
nop
jmp
mov
inc
dec
jp
decl
nop
clc
repnz
cld
jae
add
movsb
mov
or
sub
and
add
int
add
add
repnz
cld
jae
pushf
mov
add
add
nop
clc
repnz
cld
jae
lea
add
adc
repnz
cld
jae
add
add
cmc
addr16
inc
add
sbb
add
xor
add
lods
mov
nop
push
mov
leave
nop
jmp
add
rcr
push
nop
clc
repnz
cld
jae
add
nop
clc
repnz
cld
jae
add
out
add
jae
dec
inc
add
push
mov
leave
nop
jmp
add
add
pop
int
mov
and
nop
inc
add
roll
xchg
add
add
push
mov
xchg
ret
xchg
add
inc
cmp
leave
cs
nop
clc
repnz
cld
jae
movsb
add
sub
add
js
je
nop
push
mov
leave
nop
jmp
shll
mov
jne
push
mov
xchg
ret
add
add
mov
add
nop
clc
repnz
cld
jae
add
add
mov
pop
or
add
jae
add
sub
pushf
push
js
mov
xchg
ret
jae
lea
pop
movsb
sub
push
mov
mov
nop
clc
repnz
cld
jae
mov
dec
add
nop
clc
repnz
cld
jae
pushf
or
add
add
inc
fstpl
push
mov
leave
nop
jmp
repz
scas
aam
dec
add
nop
push
mov
leave
nop
jmp
sbb
xchg
add
je
nop
clc
repnz
cld
jae
add
add
jmp
int
dec
out
add
jne
add
add
or
xor
nop
clc
repnz
cld
jae
inc
addr16
add
mov
nop
push
mov
leave
nop
jmp
int
mov
aad
push
mov
xchg
ret
dec
cmp
add
add
jno
mull
clc
repnz
cld
jae
add
push
mov
leave
nop
jmp
add
testb
add
add
pop
test
nop
push
mov
leave
nop
jmp
or
xor
push
fwait
nop
clc
repnz
cld
jae
addb
add
add
xchg
xor
repnz
cld
jae
jl
add
int
add
mov
clc
repnz
cld
jae
dec
add
add
and
clc
repnz
cld
jae
cmp
add
add
leave
sub
nop
clc
repnz
cld
jae
inc
roll
xor
loopne
push
push
push
mov
xchg
ret
lea
add
out
add
pop
ret
nop
clc
repnz
cld
jae
add
pop
dec
or
add
sbb
push
mov
xchg
ret
scas
aad
add
add
and
loopne
shrl
sub
jae
sbb
add
nop
push
mov
leave
nop
jmp
roll
add
add
repnz
add
push
mov
xchg
ret
sub
add
movsb
sub
push
mov
nop
clc
repnz
cld
jae
add
xchg
or
mov
clc
repnz
cld
jae
test
mov
mov
nop
clc
repnz
cld
jae
mov
push
mov
leave
nop
jmp
add
aam
add
add
sub
nop
cld
jae
mov
sbb
inc
inc
shll
push
mov
xchg
ret
jne
sbb
add
add
rcll
repnz
cld
jae
or
pop
add
roll
add
ja
nop
push
mov
leave
nop
jmp
add
int
popa
nop
clc
repnz
cld
jae
dec
add
add
nop
clc
repnz
cld
jae
sahf
adc
add
rcrl
clc
repnz
cld
jae
pop
jae
fmulp
add
pop
push
push
nop
clc
repnz
cld
jae
add
or
inc
inc
int
fs
push
push
mov
xchg
ret
pop
cmp
mov
sbb
rol
pusha
pusha
insb
jmp
push
mov
xchg
ret
inc
add
add
add
add
push
push
nop
clc
repnz
cld
jae
add
inc
inc
inc
add
add
clc
repnz
cld
jae
mov
add
lea
or
push
mov
leave
nop
jmp
rorl
add
jecxz
adc
jae
add
sub
sub
pusha
les
sbb
add
nop
clc
repnz
cld
jae
pushf
scas
adc
inc
mov
push
mov
xchg
ret
in
cmp
call
cmpsl
push
push
mov
xchg
ret
add
add
lea
add
or
rep
nop
clc
repnz
cld
jae
add
aaa
pop
pop
add
push
nop
clc
repnz
cld
jae
int
repz
add
jp
sar
add
nop
clc
repnz
cld
jae
inc
cmc
add
add
mov
in
leave
nop
jmp
push
sahf
add
sbb
fistl
jae
dec
cmp
xchg
int
mov
or
nop
clc
repnz
cld
jae
add
add
add
nop
clc
repnz
cld
jae
add
mov
sbb
pop
or
inc
add
add
add
add
nop
out
das
pop
nop
clc
repnz
cld
jae
repnz
add
pop
nop
clc
repnz
cld
jae
inc
mov
sahf
add
in
sbb
mov
leave
nop
jmp
int
xchg
dec
jne
adc
sbb
nop
clc
repnz
cld
jae
inc
pushf
sbbb
jne
rclb
xor
call
rorl
dec
cld
nop
clc
repnz
cld
jae
sbb
add
dec
push
push
mov
xchg
ret
mov
inc
add
dec
mov
pop
sahf
scas
pop
push
mov
xchg
ret
add
add
pop
aad
jl
out
push
mov
xchg
ret
test
add
ret
mov
inc
add
mov
add
add
jae
add
aam
jb
addb
mov
sub
nop
jmp
xor
pop
add
add
add
pop
test
nop
cld
jae
add
push
cmc
cmp
add
pop
push
mov
xchg
ret
dec
out
add
add
jne
cmc
mov
nop
clc
repnz
cld
jae
pushf
dec
xchg
add
add
sbb
nop
clc
repnz
cld
jae
cmc
add
add
imul
add
jae
repnz
addb
rorl
mov
xchg
ret
add
add
xchg
aam
add
jle
lret
mov
nop
push
mov
leave
nop
jmp
add
sub
adcb
rol
je
nop
push
mov
leave
nop
jmp
addr16
add
mov
rclb
jae
or
add
clc
repnz
cld
jae
add
xchg
add
fwait
inc
add
add
xchg
test
sbbl
add
nop
jmp
sbb
mov
push
mov
leave
nop
jmp
add
push
or
add
add
rorl
imulb
add
add
add
add
incl
inc
testb
xor
or
xchg
clc
repnz
cld
jae
add
sbb
add
add
nop
clc
repnz
cld
jae
add
add
cmc
add
dec
sub
movsl
ja
add
inc
add
add
dec
addr16
nop
clc
repnz
cld
jae
add
add
cmp
in
leave
nop
jmp
add
sbb
pop
cs
inc
mov
jne
push
mov
xchg
ret
add
add
pop
ret
adc
out
nop
clc
repnz
cld
jae
movsb
add
int
add
nop
clc
repnz
cld
jae
add
add
add
mov
nop
clc
repnz
cld
jae
add
sbb
add
mov
add
nop
clc
repnz
cld
jae
adc
add
fisttpl
popa
mov
xchg
ret
repz
push
add
test
icebp
nop
clc
repnz
cld
jae
or
add
shll
inc
hlt
cmc
add
nop
clc
repnz
cld
jae
dec
repz
cmc
sbb
repz
nop
push
mov
leave
nop
jmp
inc
cmp
add
out
mov
sbb
mov
xchg
ret
add
add
add
nop
push
mov
leave
nop
jmp
add
add
dec
sub
clc
repnz
cld
jae
aaa
inc
inc
dec
add
add
inc
inc
fcmovu
xchg
shlb
inc
inc
lret
add
add
nop
clc
repnz
cld
jae
repnz
add
loope
push
mov
xchg
ret
call
add
pop
or
mov
movb
mov
xchg
ret
add
aaa
jp
dec
sahf
icebp
popa
nop
clc
repnz
cld
jae
pop
add
sbb
inc
mov
nop
clc
repnz
cld
jae
add
inc
fld1
nop
clc
repnz
cld
jae
jne
pushf
xchg
inc
cmpsl
xorl
nop
push
mov
leave
nop
jmp
in
imul
add
or
push
add
jae
idivb
push
mov
leave
nop
jmp
add
int
add
push
nop
clc
repnz
cld
jae
or
cmp
pop
inc
lea
cs
push
and
mov
and
jae
add
add
cmc
add
mov
nop
clc
repnz
cld
jae
push
add
lea
clc
repnz
cld
jae
add
aam
pop
pop
lahf
subl
push
mov
xchg
ret
add
or
add
mov
call
jae
or
add
in
leave
nop
jmp
jp
sahf
inc
add
add
and
clc
repnz
cld
jae
cmp
mov
add
add
loop
jle
jmp
nop
clc
repnz
cld
jae
cmp
testb
in
push
push
mov
xchg
ret
inc
mov
add
dec
dec
push
mov
xchg
ret
add
add
add
add
cmc
mov
nop
clc
repnz
cld
jae
sub
add
aaa
ret
add
add
sbb
out
inc
sbb
add
rclb
popf
inc
add
add
add
add
add
pop
nop
clc
repnz
cld
jae
add
repz
add
int
lcall
mov
cmp
ret
add
int
adc
clc
push
mov
xchg
ret
test
pop
pushf
add
inc
pushf
rorl
nop
cld
jae
add
add
add
call
leave
nop
jmp
scas
add
sahf
inc
mov
push
loopne
mov
xchg
ret
mov
int
ja
xor
nop
clc
repnz
cld
jae
push
fiadds
dec
aaa
add
inc
jmp
inc
pushf
cmc
add
test
add
addr16
call
inc
add
xor
testb
add
xchg
pop
xchg
xor
nop
push
mov
leave
nop
jmp
add
inc
out
inc
add
push
mov
xchg
ret
inc
add
dec
add
xor
clc
repnz
cld
jae
add
add
add
clc
repnz
cld
jae
add
add
xor
add
jae
sbb
int
mov
jmp
incl
inc
repz
int
add
pop
add
loopne
sub
mov
xchg
ret
add
add
repnz
call
nop
clc
repnz
cld
jae
add
add
or
clc
repnz
cld
jae
add
add
nop
clc
repnz
cld
jae
or
add
add
clc
repnz
cld
jae
inc
in
cmc
add
add
mov
in
nop
clc
repnz
cld
jae
jae
xor
cmc
repz
cltd
mov
push
mov
xchg
ret
sbb
add
add
sbb
pop
push
mov
xchg
ret
and
push
addr16
pop
cli
enter
pop
push
mov
xchg
ret
add
add
sbb
sbb
rorl
mov
nop
clc
repnz
cld
jae
shll
insb
or
mov
and
repnz
cld
jae
add
int
in
pop
dec
cmp
clc
repnz
cld
jae
or
cmc
add
out
stc
fld1
push
mov
xchg
ret
cmc
add
int
add
aad
mov
nop
clc
repnz
cld
jae
add
jne
dec
test
in
sahf
xchg
ss
mov
push
mov
xchg
ret
add
scas
add
or
addl
jne
add
add
xchg
pop
push
mov
xchg
ret
add
sbb
int
sahf
or
or
loopne
mov
mov
xchg
ret
add
xchg
mov
and
inc
insl
jne
nop
clc
repnz
cld
jae
add
jb,pt
nop
push
mov
leave
nop
jmp
add
add
call
push
nop
clc
repnz
cld
jae
add
add
add
sbb
fdivl
sti
push
mov
xchg
ret
add
ret
inc
add
add
insl
add
nop
clc
repnz
cld
jae
add
xchg
add
xor
nop
clc
repnz
cld
jae
dec
add
loope
lret
mov
leave
nop
jmp
add
add
pop
nop
clc
repnz
cld
jae
add
add
add
xor
dec
or
pusha
sbb
scas
add
loopne
ja
sti
call
jae
sbb
add
loopne
jne
test
add
add
jae
cmp
jnp
nop
clc
repnz
cld
jae
sbb
add
pop
sub
nop
clc
repnz
cld
jae
sbb
dec
add
push
inc
inc
push
loopne
lret
mov
push
mov
xchg
ret
int
scas
inc
add
jnp
nop
push
mov
leave
nop
jmp
inc
repz
sbbb
adc
clc
repnz
cld
jae
in
pushf
add
add
es
push
inc
inc
push
nop
clc
repnz
cld
jae
add
xorb
mov
add
mov
xchg
ret
mov
or
add
pushl
push
mov
xchg
ret
and
add
xor
clc
repnz
cld
jae
add
addr16
add
or
and
push
mov
clc
repnz
cld
jae
add
jae
pushf
add
ret
dec
jnp
push
or
clc
repnz
cld
jae
inc
add
mov
movsb
nop
clc
repnz
cld
jae
add
inc
jl
add
push
nop
clc
repnz
cld
jae
add
add
lds
nop
clc
repnz
cld
jae
dec
jl
pop
div
add
push
push
mov
xchg
ret
dec
add
dec
and
add
add
repnz
cld
jae
out
add
add
add
pusha
pusha
mov
nop
clc
repnz
cld
jae
inc
add
add
and
adc
push
mov
leave
nop
jmp
add
mov
aad
fbstp
call
out
inc
add
sub
add
add
aad
lea
xchg
inc
add
cmc
xchg
pop
inc
sbb
mov
sti
mov
nop
clc
repnz
cld
jae
add
cmp
add
push
mov
xchg
ret
cmp
xchg
mov
and
and
push
add
push
or
int
jnp
nop
clc
repnz
cld
jae
pushf
sbb
inc
cmp
test
nop
push
mov
leave
nop
jmp
add
int
inc
add
stos
movzwl
nop
clc
repnz
cld
jae
add
add
and
mov
xchg
ret
add
mov
rolb
loopne
and
pusha
scas
pusha
pusha
inc
jne
nop
clc
repnz
cld
jae
out
add
arpl
xorb
add
nop
clc
repnz
cld
jae
mov
shlb
mov
leave
nop
jmp
add
jbe
cmp
nop
push
mov
leave
nop
jmp
jae
mov
call
inc
add
add
out
add
add
loopne
test
in
leave
nop
jmp
add
xchg
add
add
or
and
mov
xchg
ret
add
fiadds
and
lea
add
jae
dec
cmc
add
mov
nop
clc
repnz
cld
jae
add
out
add
add
mov
clc
repnz
cld
jae
add
add
add
ret
jge
sbb
nop
clc
repnz
cld
jae
mov
aad
mov
nop
push
mov
leave
nop
jmp
add
sbb
hlt
inc
pushl
nop
clc
repnz
cld
jae
aam
add
add
nop
clc
repnz
cld
jae
add
add
lea
dec
fistl
mov
xchg
ret
sbb
cmp
sub
clc
repnz
cld
jae
dec
int
add
repz
scas
pop
nop
clc
repnz
cld
jae
sub
dec
add
jmp
addr16
add
pop
addb
mov
inc
mov
xor
call
jae
repz
call
nop
clc
repnz
cld
jae
add
xor
or
icebp
call
nop
clc
repnz
cld
jae
inc
add
add
push
nop
clc
repnz
cld
jae
pushf
dec
out
xchg
sbb
add
popa
pop
push
mov
xchg
ret
sbb
add
add
call
cmp
nop
push
mov
leave
nop
jmp
add
add
nop
cld
jae
add
or
add
movzwl
nop
clc
repnz
cld
jae
or
jae
fisubl
repnz
cld
jae
add
add
roll
pop
and
nop
push
mov
leave
nop
jmp
repnz
cmp
sub
push
mov
xchg
ret
inc
add
add
add
dec
mov
fs
push
nop
clc
repnz
cld
jae
add
sub
sbb
mov
leave
nop
jmp
xor
xchg
add
negl
mov
xchg
ret
add
add
in
addb
push
mov
xchg
ret
or
inc
add
sbb
mov
in
add
ljmp
add
mov
testl
nop
push
mov
leave
nop
jmp
jl
in
mov
nop
clc
repnz
cld
jae
add
dec
ret
in
cltd
or
nop
clc
repnz
cld
jae
sahf
add
add
nop
push
mov
leave
nop
jmp
add
xchg
test
push
mov
xchg
ret
add
add
add
pop
xor
nop
clc
repnz
cld
jae
add
or
add
push
dec
rep
nop
clc
repnz
cld
jae
inc
xchg
in
inc
mov
fildl
repnz
cld
jae
add
inc
pop
out
mov
mov
adc
clc
repnz
cld
jae
add
add
das
sub
nop
clc
repnz
cld
jae
fiadds
add
imulb
fld1
nop
push
mov
leave
nop
jmp
movsb
add
lret
mov
nop
clc
repnz
cld
jae
mov
add
jne
nop
clc
repnz
cld
jae
out
aad
nop
clc
repnz
cld
jae
add
add
or
sbb
pop
push
nop
clc
repnz
cld
jae
add
add
add
add
clc
repnz
cld
jae
add
scas
add
call
clc
repnz
cld
jae
cmp
ficoms
or
mov
xchg
ret
add
add
add
mov
xchg
ret
add
or
add
nop
clc
repnz
cld
jae
cmp
inc
stos
mov
push
mov
xchg
ret
sahf
add
mov
push
mov
xchg
ret
ret
in
jne
add
cmp
xor
mov
xchg
ret
dec
add
or
jp
add
xchg
inc
adc
clc
repnz
cld
jae
add
inc
add
ret
aad
arpl
leave
nop
jmp
in
sbb
aam
sbb
pop
and
clc
repnz
cld
jae
add
add
add
mov
nop
clc
repnz
cld
jae
repnz
add
mov
jmp
add
add
xchg
push
mov
add
fists
jae
add
jne
add
add
or
and
push
mov
xchg
ret
add
cmp
pop
fld1
nop
clc
repnz
cld
jae
inc
add
add
add
loop
jmp
add
inc
add
add
dec
testb
js
push
nop
clc
repnz
cld
jae
xor
add
repnz
stos
addb
in
leave
nop
jmp
addb
dec
add
add
nop
clc
repnz
cld
jae
add
sbb
clc
repnz
cld
jae
sbb
inc
add
mov
add
clc
repnz
cld
jae
pop
ret
dec
add
push
add
push
mov
xchg
ret
add
add
xor
add
nop
clc
repnz
cld
jae
add
add
clc
repnz
cld
jae
jl
inc
and
shl
in
rclb
inc
jle
add
add
add
mov
and
push
mov
xchg
ret
add
jl
add
pusha
nop
clc
repnz
cld
jae
mov
add
xchg
dec
xchg
pop
nop
clc
repnz
cld
jae
add
jne
and
clc
repnz
cld
jae
add
pop
add
inc
pop
adc
loopne
lods
addb
push
mov
leave
nop
jmp
jp
add
add
pop
push
nop
clc
repnz
cld
jae
jae
dec
jp
sbb
add
fldcw
rolb
nop
clc
repnz
cld
jae
inc
cmp
test
call
jae
test
inc
sbb
fistpl
push
mov
xchg
ret
inc
and
inc
or
add
repnz
cld
jae
and
rorb
sub
sbb
push
mov
xchg
ret
add
repnz
add
je
nop
clc
repnz
cld
jae
sbb
dec
xchg
loopne
fld1
push
mov
xchg
ret
inc
add
sbb
int
repnz
sub
stc
insb
inc
add
add
add
sbb
clc
repnz
cld
jae
add
xchg
repnz
cld
jae
xchg
and
add
add
loopne
rolb
mov
nop
push
mov
leave
nop
jmp
cmp
pop
mov
test
mov
mov
nop
clc
repnz
cld
jae
mov
or
sbb
add
arpl
nop
clc
repnz
cld
jae
and
pause
push
mov
leave
nop
jmp
add
add
add
or
add
xor
das
xchg
inc
add
lea
movsb
xor
aad
xchg
nop
push
mov
leave
nop
jmp
xor
ret
pop
icebp
mov
nop
clc
repnz
cld
jae
ret
adc
add
call
nop
clc
repnz
cld
jae
xor
fdivrl
mov
xchg
ret
add
add
sbb
add
inc
mov
cmp
clc
repnz
cld
jae
add
aam
outsb
aas
push
nop
clc
repnz
cld
jae
add
sbb
pop
add
dec
add
jle
nop
clc
repnz
cld
jae
add
add
add
seto
repnz
cld
jae
add
add
and
inc
cmpsb
loopne
push
sbb
test
clc
repnz
cld
jae
add
testl
xchg
ret
add
jae
add
scas
mov
clc
repnz
cld
jae
xchg
push
sbb
movsb
mov
repnz
cld
jae
xchg
inc
add
add
push
mov
xchg
ret
add
scas
add
add
mov
dec
push
nop
clc
repnz
cld
jae
inc
add
add
nop
clc
repnz
cld
jae
add
inc
ret
dec
add
and
in
leave
nop
jmp
add
inc
add
add
add
or
sub
jae
add
inc
inc
call
add
push
mov
xchg
ret
movsb
add
fiadds
push
add
add
nop
push
mov
leave
nop
jmp
add
add
test
call
inc
add
add
int
add
movsb
lea
add
jae
cmc
add
nop
push
mov
leave
nop
jmp
add
add
sbb
inc
dec
push
mov
xchg
ret
movsb
add
inc
xchg
add
add
clc
repnz
cld
jae
inc
add
add
add
inc
xchg
ficoml
push
add
nop
clc
repnz
cld
jae
add
add
sbb
push
mov
leave
nop
jmp
add
add
add
mulb
repnz
cld
jae
in
or
dec
adc
nop
clc
repnz
cld
jae
push
aad
add
repz
aaa
mov
int
fistl
jae
jae
ret
add
lea
call
jae
mov
add
mov
mov
clc
repnz
cld
jae
mov
cmp
jae
clc
repnz
cld
jae
add
add
cmp
nop
push
mov
leave
nop
jmp
add
add
scas
add
nop
clc
repnz
cld
jae
or
fld1
nop
clc
repnz
cld
jae
shll
add
add
push
xor
nop
clc
repnz
cld
jae
add
sbb
add
add
nop
clc
repnz
cld
jae
add
int
push
dec
mov
nop
clc
repnz
cld
jae
add
add
add
add
dec
nop
push
mov
leave
nop
jmp
repnz
add
adc
cmp
mov
leave
nop
jmp
roll
or
sbb
push
mov
xchg
ret
add
xchg
call
mov
add
nop
clc
repnz
cld
jae
adc
add
mov
nop
clc
repnz
cld
jae
add
add
pop
add
rolb
nop
clc
repnz
cld
jae
sbb
dec
add
pop
push
mov
xchg
ret
add
add
add
add
insb
cld
push
mov
nop
clc
repnz
cld
jae
addb
sahf
add
pop
nop
clc
repnz
cld
jae
int
add
mov
pusha
nop
clc
repnz
cld
jae
xchg
inc
not
or
iret
add
nop
clc
repnz
cld
jae
fimuls
sbb
add
int
nop
push
mov
leave
nop
jmp
add
inc
add
xor
cmp
mov
adc
clc
repnz
cld
jae
mov
pop
push
nop
clc
repnz
cld
jae
add
dec
add
add
jnp
push
mov
xchg
ret
sbb
add
mov
mov
and
clc
repnz
cld
jae
add
add
jmp
in
leave
nop
jmp
scas
jne
add
sbb
jne
nop
clc
repnz
cld
jae
add
add
dec
nop
push
mov
leave
nop
jmp
cmc
or
sbb
fistpl
push
mov
xchg
ret
add
inc
jo
cmpl
nop
push
mov
leave
nop
jmp
jae
add
cmc
add
add
add
dec
add
add
sahf
lahf
add
nop
clc
repnz
cld
jae
add
add
add
push
mov
xchg
ret
add
aam
add
add
sti
nop
push
mov
leave
nop
jmp
in
ret
ret
xor
add
mov
nop
clc
repnz
cld
jae
mov
call
mov
xchg
and
aaa
mov
add
add
pop
divb
nop
push
mov
leave
nop
jmp
push
ficoms
cmc
pop
into
leave
push
nop
clc
repnz
cld
jae
out
add
dec
add
popa
nop
clc
repnz
cld
jae
pop
pop
add
pop
add
xchg
push
addr16
push
mov
xchg
ret
add
add
icebp
fwait
nop
push
mov
leave
nop
jmp
add
aad
add
lea
push
nop
clc
repnz
cld
jae
add
mov
dec
std
mov
nop
clc
repnz
cld
jae
add
add
in
add
push
mov
xchg
ret
add
jp
addb
mov
xchg
ret
test
add
mov
inc
add
test
xchg
jne
ret
add
aaa
pop
movsl
mov
nop
clc
repnz
cld
jae
inc
add
movsb
mov
mov
clc
repnz
cld
jae
mov
pusha
imul
repnz
cld
jae
add
sbb
scas
addb
lret
lods
nop
clc
repnz
cld
jae
add
add
int
push
add
clc
repnz
cld
jae
movsb
pop
xchg
adc
pusha
pusha
push
addb
clc
repnz
cld
jae
add
sbb
add
nop
clc
repnz
cld
jae
add
add
add
fwait
push
mov
xchg
ret
add
roll
add
xchg
sbb
icebp
nop
clc
repnz
cld
jae
push
test
add
add
nop
clc
repnz
cld
jae
cmp
jae
add
mov
xchg
ret
add
inc
mov
sub
movsb
nop
clc
repnz
cld
jae
repnz
sbb
pop
add
push
nop
clc
repnz
cld
jae
dec
add
sahf
int
add
aas
sub
nop
push
mov
leave
nop
jmp
or
inc
xchg
mov
push
mov
xchg
ret
adc
mov
inc
lea
nop
push
mov
leave
nop
jmp
sahf
inc
add
dec
xchg
in
and
mov
nop
push
mov
leave
nop
jmp
scas
add
shr
add
push
mov
clc
repnz
cld
jae
cmp
inc
add
push
mov
xchg
ret
add
add
testb
and
nop
clc
repnz
cld
jae
ret
out
inc
addb
xor
jge
nop
clc
repnz
cld
jae
add
subb
clc
repnz
cld
jae
or
xchg
inc
add
clc
repnz
cld
jae
xor
add
and
dec
inc
xor
nop
push
mov
leave
nop
jmp
cmc
push
sbb
imul
pop
call
repnz
cld
jae
xchg
cmp
xor
push
mov
leave
nop
jmp
in
mov
call
push
mov
xchg
ret
sbb
push
cmp
adc
inc
dec
lock
insl
inc
add
add
lea
inc
call
nop
push
mov
leave
nop
jmp
ret
xor
add
fidivl
ret
call
jae
xor
sub
dec
aas
add
nop
push
mov
leave
nop
jmp
sbb
add
pop
aad
adc
xor
push
mov
xchg
ret
add
mov
inc
inc
add
andl
repnz
cld
jae
add
add
dec
or
repnz
cld
jae
add
add
add
cwtl
adc
rclb
hlt
mov
xchg
ret
add
movsb
add
push
mov
xchg
ret
add
ret
add
add
jp
pushf
test
add
push
push
mov
xchg
ret
mov
add
mov
dec
sbb
nop
clc
repnz
cld
jae
xor
add
add
dec
cmp
clc
repnz
cld
jae
add
xchg
mov
push
mov
xchg
ret
sub
add
inc
out
add
add
nop
clc
repnz
cld
jae
add
mov
pusha
mov
nop
clc
repnz
cld
jae
add
in
push
mov
xchg
ret
add
add
xlat
call
nop
clc
repnz
cld
jae
add
int
xor
nop
clc
repnz
cld
jae
ret
add
sbb
addb
jae
push
mov
leave
nop
jmp
add
roll
pop
nop
clc
repnz
cld
jae
add
add
test
clc
repnz
cld
jae
add
int
sub
add
loop
nop
clc
repnz
cld
jae
pop
add
jne
mov
push
mov
leave
nop
jmp
sbb
cmp
pop
in
lcall
jo
je
nop
clc
repnz
cld
jae
inc
add
pop
pop
nop
clc
repnz
cld
jae
mov
fiadds
jae
add
leave
nop
push
mov
leave
nop
jmp
xor
jp
add
into
scas
inc
inc
jb
addb
nop
push
mov
leave
nop
jmp
add
add
add
pop
ret
nop
clc
repnz
cld
jae
add
int
xchg
mov
test
call
jae
add
pushl
nop
clc
repnz
cld
jae
sarl
pop
push
push
mov
xchg
ret
add
add
cmc
sbb
xlat
mov
nop
clc
repnz
cld
jae
and
add
add
jle
add
nop
clc
repnz
cld
jae
pop
add
mov
nop
clc
repnz
cld
jae
mov
add
fstps
inc
add
cmc
add
int
add
nop
clc
repnz
cld
jae
movsb
add
add
nop
clc
repnz
cld
jae
repz
mov
rclb
jae
aaa
add
cmp
add
cld
sti
sub
nop
clc
repnz
cld
jae
add
sbb
jno
nop
clc
repnz
cld
jae
rcll
jl
add
aaa
arpl
nop
push
mov
leave
nop
jmp
in
or
jns
nop
push
mov
leave
nop
jmp
push
sub
add
xchg
add
jmp
mov
xchg
ret
int
and
or
mov
nop
clc
repnz
cld
jae
out
int
inc
add
jmp
jg
nop
clc
repnz
cld
jae
inc
push
ret
inc
add
add
add
leave
add
push
mov
xchg
ret
sbb
jne
push
push
mov
xchg
ret
pop
int
inc
add
add
nop
clc
repnz
cld
jae
add
lea
add
dec
and
sbbb
xchg
jecxz
call
nop
jmp
add
add
out
inc
je
nop
push
mov
leave
nop
jmp
int
repz
loopne
inc
add
inc
sahf
pop
add
add
add
nop
clc
repnz
cld
jae
add
inc
add
in
push
push
mov
xchg
ret
add
xchg
add
out
pop
cmp
mov
inc
nop
clc
repnz
cld
jae
add
add
add
add
add
nop
clc
repnz
cld
jae
inc
xchg
fiadds
add
inc
cld
push
mov
xchg
ret
add
aad
inc
movsb
add
iret
mov
nop
clc
repnz
cld
jae
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
mov
push
mov
xchg
ret
cmp
add
add
add
neg
sbb
nop
push
mov
leave
nop
jmp
add
out
dec
add
rep
nop
clc
repnz
cld
jae
ret
pop
sbb
sarb
dec
imul
cld
jae
add
pushf
pop
bound
stos
nop
clc
repnz
cld
jae
aaa
sbb
add
aad
add
rol
jmp
jae
add
adcb
mov
sar
fwait
call
nop
clc
repnz
cld
jae
sahf
add
mov
xor
nop
clc
repnz
cld
jae
or
add
add
nop
clc
repnz
cld
jae
xor
repz
add
nop
clc
repnz
cld
jae
xchg
push
repnz
add
add
or
shrb
and
nop
clc
repnz
cld
jae
pop
xchg
inc
xchg
rep
nop
clc
repnz
cld
jae
sub
int
add
xor
repnz
cld
jae
dec
pop
out
test
or
int
sub
add
pop
jno
add
dec
testb
or
test
nop
push
mov
leave
nop
jmp
add
add
add
push
nop
clc
repnz
cld
jae
jl
aam
add
add
test
xchg
inc
add
pop
dec
in
movsb
add
add
repnz
nop
push
mov
leave
nop
jmp
add
pop
lea
nop
clc
repnz
cld
jae
add
sahf
sbb
test
rorb
repnz
cld
jae
mov
pop
and
leave
nop
jmp
jae
int
xchg
add
fiadds
clc
dec
inc
nop
clc
repnz
cld
jae
xchg
add
xor
add
leave
incl
add
add
int
pop
add
cld
pushf
push
mov
nop
clc
repnz
cld
jae
fidivs
mov
add
sbb
nop
push
mov
leave
nop
jmp
roll
xchg
inc
sbb
dec
cmp
nop
jmp
sub
int
rorl
push
mov
leave
nop
jmp
inc
jl
xor
imul
nop
clc
repnz
cld
jae
and
add
int3
fmulp
push
nop
clc
repnz
cld
jae
add
out
add
in
jp
jbe
nop
clc
repnz
cld
jae
sbb
add
dec
mov
nop
clc
repnz
cld
jae
jne
inc
add
push
push
mov
xchg
ret
add
or
cmp
sbb
mov
leave
nop
jmp
dec
ret
call
testl
clc
repnz
cld
jae
add
movsb
add
jmp
pause
push
mov
leave
nop
jmp
add
sub
jmp
in
leave
nop
jmp
add
aam
xor
mov
sbb
leave
nop
jmp
aad
xchg
std
mov
nop
push
mov
leave
nop
jmp
lea
dec
int
add
icebp
test
subl
cmpsb
add
xchg
push
scas
bound
idiv
xchg
xor
in
push
shlb
popf
jne
ljmp
mov
add
rorb
adc
xchg
icebp
faddl
pop
lock
arpl
mov
sub
xchg
push
loop
inc
inc
cmp
and
rcl
cld
or
mov
xlat
clc
sti
adc
sarl
pop
fdivrl
mov
shl
repz
jnp
mov
testl
dec
add
and
icebp
call
fs
scas
mov
pop
fisubrl
loop
stc
cmovl
inc
mov
rol
xchg
sahf
jl
in
pop
sub
adc
jle
add
add
cmp
dec
cltd
aas
sub
pop
test
loopne
nop
std
repnz
lea
dec
sub
mov
mov
push
nop
aad
addb
mov
lcall
jns
in
jae
rol
dec
jnp
jle
repz
outsb
push
sub
addb
pusha
std
and
addb
add
ss
adc
je
mov
mov
add
add
insl
je
push
mov
shrb
inc
push
mov
pop
add
mov
jae
mov
add
faddl
mov
movsb
addb
pop
xchg
addb
std
repz
adc
leave
divb
cmp
loopne
or
mov
mov
loopne
out
or
cwtl
lcall
imull
les
cli
ljmp
inc
xor
out
sbb
addb
dec
and
xchg
dec
dec
outsb
mov
adc
out
lcall
int
mov
and
addb
shll
adc
aas
mov
loope
jno
push
xchg
sti
pusha
sbb
or
pop
shll
inc
mov
inc
push
and
scas
mov
and
dec
push
movsl
mov
push
in
mov
cmp
add
int3
mov
and
cwtl
xchg
adc
cmp
icebp
outsb
ret
shrb
lret
inc
inc
push
pusha
pusha
mov
or
inc
cmp
pusha
mov
mov
fistps
push
lret
insb
subl
mov
aam
es
pusha
pop
jge
pusha
pusha
js
and
dec
out
pop
jne
scas
and
in
lds
add
sbb
mov
addb
out
repnz
and
ljmp
inc
shrl
mov
dec
sub
mov
pop
pop
cmp
enter
enter
out
ja
js
inc
inc
add
repz
cmp
add
mov
push
aad
and
xor
mov
add
mov
mov
mov
popa
into
mov
pop
push
cli
jne
ret
inc
cmpsl
pop
movsl
cmp
mov
cmp
dec
or
or
loopne
jno
cltd
adc
inc
mov
mov
mov
out
mov
and
mov
movsl
cmpsb
loopne
or
jnp
push
mov
mov
in
dec
or
and
mov
sbb
mov
jmp
loopne
cld
les
push
jl
inc
inc
andb
add
sub
add
popa
jmp
dec
lcall
sbb
lea
sub
mov
pop
test
and
out
xor
push
or
add
andb
loopne
popf
lret
out
into
fimuls
mov
dec
cmp
mov
sub
or
test
fstpt
xor
stos
pusha
pusha
ljmp
xchg
cmpl
xor
sahf
fmuls
clc
dec
mov
add
cltd
adc
mov
rol
cmp
cmp
ss
mov
or
inc
sahf
push
mov
leave
jns
mov
sbbl
add
adc
jns
push
pusha
pusha
pop
scas
jecxz
jns
std
insl
cmp
dec
clc
dec
jle
test
xchg
pop
hlt
cmc
fdivs
call
inc
fldt
and
inc
jnp
add
jle
rorb
pusha
xor
push
ficomps
adc
sub
test
add
pop
ljmp
mov
xlat
cmp
lds
movsl
adc
insl
je
int3
movsl
jge
dec
or
test
inc
rcrl
es
pusha
sub
loopne
pusha
shlb
and
push
jp
ss
pusha
pusha
cmp
int3
inc
outsl
imul
mov
mov
lock
mov
bound
outsl
imul
mov
cltd
xor
fsubrl
xchg
aaa
outsl
aam
std
cmp
fdivs
rclb
mov
mov
pop
jl
loopne
clc
or
loopne
call
adc
shll
pusha
call
mov
cmpsl
cmp
icebp
xchg
xchg
adc
adc
push
inc
je
lahf
shlb
and
out
call
add
mov
ds
fisubl
mov
imull
dec
test
pop
pop
dec
mov
adc
jbe
cwtl
add
addr16
jmp
xor
and
stos
and
or
or
jno
mov
aaa
fists
cmc
lods
push
jne
popf
cmc
inc
push
rcrb
push
pop
sub
ret
inc
ja
ret
int3
push
and
int
int
repnz
loopne
loopne
add
inc
cmc
sbb
inc
and
jns
test
out
and
out
and
sbb
xchg
je
jns
rol
stc
cld
addb
rol
push
mov
and
add
fnstsw
xchg
lcall
aam
cmpsb
loopne
add
pusha
sbb
outsb
jns
shll
pop
or
inc
imul
jle
and
repnz
and
std
cli
shll
int3
inc
pop
lcall
sub
add
stos
loope
and
and
into
cmc
lock
push
push
adc
xchg
pop
dec
pop
sub
cmp
cmp
jnp
scas
pusha
pusha
icebp
ret
pusha
mov
pop
and
mov
xor
cmp
testl
bound
sbb
inc
out
call
cmpl
jns
pop
lahf
xchg
insl
sahf
jns
add
inc
mov
loopne
cwtl
pop
ret
gs
inc
cmp
loope
sub
mov
xchg
inc
xchg
sbb
adc
and
push
addb
cltd
dec
jae
cld
sub
add
jmp
pusha
pusha
sbb
cmpsl
cltd
sbb
les
mov
pop
fisttpll
loopne
and
loopne
pushf
inc
adc
jb
sti
xchg
and
or
xchg
pop
inc
mov
mov
aam
add
icebp
sub
hlt
sbb
mov
sub
jbe
lock
loopne
fnstenv
mov
daa
das
xor
and
cmp
inc
lods
mov
rol
icebp
leave
inc
mov
rol
xor
sbb
out
in
dec
stc
xor
push
in
sub
jg
inc
dec
out
arpl
xchg
mov
das
xchg
mov
aam
jecxz
fldenv
mov
pusha
pusha
xlat
orl
mov
mov
inc
insb
jmp
les
mov
addb
bound
jle
cmpsl
int3
cmc
rclb
clc
sub
mov
and
sub
inc
inc
cmp
push
outsb
mov
adc
stos
addb
add
mov
fiaddl
pusha
cli
adc
xor
addb
enter
mov
bound
pop
loop
mov
ljmp
int3
jge
and
call
popa
push
inc
or
add
out
scas
and
xor
sub
test
fimull
push
shlb
sarb
cmp
xchg
pop
jecxz
rol
ljmp
movsl
adc
cmp
adc
outsb
mov
addb
out
lcall
push
push
insb
mov
movsb
inc
inc
adc
cmp
push
outsb
ret
cmp
mov
push
loope
insl
mov
add
pop
jle
lret
rol
out
dec
push
lea
xchg
stc
inc
mov
push
cmp
inc
jecxz
mov
and
test
push
xlat
or
data16
mov
lret
xlat
add
sbb
or
inc
inc
cmp
xchg
stos
je
inc
inc
mov
add
cwtl
and
sub
and
and
add
xor
inc
inc
scas
repz
ljmp
inc
pop
push
movb
inc
push
mov
addr16
enter
mov
loopne
xor
scas
dec
xor
sbb
add
or
add
and
fwait
or
in
jp
or
inc
mov
mov
into
insb
push
pxor
cmp
mov
or
cmpsb
pusha
pusha
add
push
add
loopne
xor
push
stos
daa
ret
mov
addb
inc
repnz
stc
mov
in
dec
dec
and
aam
cli
stc
lahf
xchg
outsb
mov
out
and
mov
add
add
pusha
dec
adc
xchg
sbb
call
push
jne
xchg
sub
and
mov
inc
adc
inc
rsqrtps
loopne
add
xchg
into
sbb
xor
jge
icebp
mov
sbb
mov
shrl
ds
pop
jmp
xchg
and
pusha
sti
mov
cmp
test
andb
mov
sub
lret
imul
mov
jp
xchg
sub
add
and
mov
sahf
cmpsb
addb
inc
inc
xchg
mov
test
loopne
lret
popf
sbb
mov
xor
and
jle
test
rol
sbb
and
inc
inc
leave
pop
scas
push
push
ficomps
xor
mov
jne
add
scas
addb
sbb
pop
pusha
dec
fistl
push
mov
and
pop
lret
in
inc
movsb
rol
mov
xchg
sahf
lods
loopne
out
xchg
jb
or
mov
push
aas
cmp
and
push
fldcw
loopne
movups
loopne
pop
nop
xchg
mov
xor
mul
int3
sbb
in
ret
add
std
sub
jecxz
imul
arpl
adc
fdivl
xor
add
add
and
daa
xor
lret
add
inc
cmpsb
and
push
sub
and
jg
repz
sar
rol
scas
mov
cmp
mov
addb
xchg
jo
mov
add
pusha
pusha
push
and
dec
mov
dec
les
cmpsl
adc
icebp
js
movsl
mov
rol
or
iret
lret
pusha
stc
push
sti
lret
xor
and
push
add
jmp
mov
addb
aam
mov
add
and
repz
loopne
mov
sahf
in
shrl
and
and
ss
addb
sar
mov
push
test
rcl
jge
inc
jo
xor
add
inc
stc
dec
int3
sbb
push
rol
dec
mov
jecxz
dec
sbb
fidivs
popa
push
in
ja
mov
and
inc
push
xchg
sub
add
xchg
sbb
call
jmp
mov
clc
or
pusha
fsubrl
inc
inc
mov
jge
inc
icebp
push
or
add
sbb
push
xor
mull
adc
and
aaa
ret
push
xlat
cmpsl
stos
loopne
xchg
hlt
jns
loopne
addb
in
jne
xchg
or
shr
and
and
pushf
push
in
sbb
and
and
mov
and
cs
repz
ror
adc
mov
loopne
adc
jae
adc
mov
rol
lock
stc
mov
inc
mov
inc
jne
loopne
in
pop
stos
add
ret
mov
xchg
jmp
jo
scas
in
cld
adc
bnd
and
and
rdpmc
jne
xor
sbb
mov
lea
rcr
pop
mov
add
inc
inc
lcall
pusha
pusha
call
lods
sti
stos
rol
mov
loope
test
test
pop
mov
xchg
stc
repz
xchg
and
push
inc
push
xor
rol
pop
inc
inc
or
loopne
sbb
fs
jae
and
out
inc
inc
ds
dec
inc
add
cmpsb
loopne
sti
rcrl
xlat
mov
jb
notb
outsl
mov
lock
xor
or
daa
enter
mulb
loopne
mov
ja
xor
stc
sbb
cmp
push
mov
adc
lcall
loopne
fldenv
fwait
icebp
mov
test
mov
iret
shlb
enter
inc
jae
mov
sub
cmp
adc
xchg
cmpsb
pusha
pusha
cwtl
add
mov
push
gs
push
pop
push
pop
ret
lods
jle
push
repz
sahf
insl
repz
lods
rol
push
cmpsl
xor
repz
sti
lret
mov
sar
or
pusha
cmp
out
fldenv
mov
push
lret
inc
insb
mov
pop
pop
js
sub
orb
mul
xchg
out
iret
sub
addb
jl
sbb
outsl
add
push
rcr
sub
and
add
addb
pusha
cmp
mov
lea
inc
inc
push
rol
jp
xor
pop
stos
push
cmpsb
loopne
adc
loopne,pn
mov
add
std
scas
rol
fmul
push
ficoms
pop
lret
cmp
inc
inc
out
mov
std
cwtl
mov
and
inc
dec
adc
and
pop
push
pusha
pusha
or
mov
mov
or
lods
add
fisubrs
rol
and
ds
or
test
rol
adc
jmp
ja
cmp
mov
aad
rcl
shlb
jmp
sbb
test
ffreep
xchg
fidivl
pop
pop
andb
je
inc
or
pusha
dec
push
xchg
lock
enter
rclb
inc
and
rolb
push
loopne
xor
xchg
loopne
adc
ljmp
in
clc
sbb
mov
sub
rol
adc
movsb
addb
mov
shr
out
push
fdivs
xchg
sub
mov
mov
hlt
test
insb
sbb
out
mull
mov
push
jecxz
mov
outsl
xchg
rol
cld
loopne
mov
inc
stos
aas
cmpsb
mov
cmp
mov
mov
repz
adc
insl
xlat
stc
jge
pop
pushl
push
mov
rclb
rorb
sbbl
loopne
pop
mov
push
scas
jbe
xchg
aad
enter
ret
xor
fsubs
lods
jl
pop
gs
mov
arpl
addb
loopne
and
mov
push
mov
add
dec
lcall
jae
divb
cmp
popa
stos
mov
mov
je
inc
inc
lds
ljmp
xorb
outsl
mov
add
das
mov
mov
push
pusha
pusha
add
clc
jnp
jle
mov
mov
mov
xchg
dec
add
loopne
push
pop
fcmove
push
pusha
movsb
addb
pop
arpl
pop
jb
jnp
mov
cld
sbb
rcll
mov
jb
xor
lahf
push
addb
and
mov
insl
jg
data16
fstpt
in
cmpsb
add
sahf
and
shlb
decl
and
mov
nop
and
jne
push
call
andb
pop
cltd
xchg
cwtl
cmp
cmp
or
add
dec
ret
pop
aaa
clc
lea
stos
push
or
mov
repz
ljmp
pop
cmc
jns
out
ds
fdivr
add
aas
out
add
inc
or
push
iret
sarl
and
cmc
adc
push
out
lcall
sti
fchs
and
sbb
xor
lahf
ds
pushf
shrb
add
add
sub
inc
cmp
imul
clc
fldenv
add
cmp
div
dec
jnp
out
fsubrl
addb
frstor
cltd
adc
pushf
mov
add
cmp
nop
inc
nop
cltd
cmp
push
andb
mov
xchg
lahf
jecxz
mov
dec
mov
add
pop
xor
jp
jo
mov
pusha
pusha
mov
in
cmpsb
add
fptan
jle
repnz
and
mov
jmp
mov
cmp
daa
adc
and
loopne
and
dec
mov
repz
popa
gs
rolb
shlb
pusha
pusha
cmp
add
pusha
sub
and
jno
clc
loop
pop
sub
addb
mov
ret
add
mov
sbb
daa
jns
scas
rol
arpl
push
lds
hlt
pop
mov
and
call
cmp
and
pop
sbb
mov
push
jne
jo
sub
out
sbbl
arpl
imul
add
pop
jne
repz
mov
mov
imul
test
in
xor
lock
mov
popf
repz
pusha
mov
sbb
jno
push
push
pusha
pusha
adc
dec
pop
cli
adc
jo
icebp
jno
arpl
mov
xor
add
pusha
pusha
mov
lods
jmp
js
push
rol
push
dec
push
push
outsb
or
pusha
sub
mov
or
add
out
push
add
cltd
sub
mov
xchg
fildll
testb
sbb
or
shlb
add
loopne
cmp
sub
cmp
adc
orb
inc
addb
fwait
movsl
aaa
into
jle
pop
or
incl
pop
scas
jb
xlat
dec
outsl
or
jge
or
loopne
xchg
cmp
push
addr16
sbb
jae
test
loope
ret
and
call
idivl
and
xorb
mov
and
lret
fnstsw
mov
js
loop
xchg
addr16
ds
sub
jl
je
pusha
pusha
dec
leave
fiadds
jae
icebp
and
rorb
push
arpl
insb
inc
call
jp
adc
sarb
outsl
add
rclb
cmp
xchg
std
mov
jmp
dec
or
mov
loopne
xchg
popf
mov
sbb
pop
stos
rol
and
rolb
sub
add
mov
jmp
shll
rcl
addr16
and
ret
rol
pusha
pusha
xor
xchg
add
imul
lock
or
mov
scas
and
push
mov
sub
and
add
gs
mov
jae
jmp
mov
jl
das
push
push
idiv
iret
stc
push
push
pusha
pusha
cltd
add
orb
stos
inc
inc
mov
push
into
or
repnz
mov
fsub
stos
inc
inc
cmp
rorb
pusha
pusha
xchg
fs
out
and
movsl
push
xor
rol
faddl
aad
inc
inc
imull
inc
inc
in
out
lods
addb
into
enter
cmpsb
inc
inc
push
inc
xor
mov
test
inc
mov
inc
je
rcrl
or
fcmovbe
js
xor
xchg
pop
out
pusha
pusha
imul
xorl
cli
nop
xor
push
push
popf
andl
stos
and
jae
sbb
cmp
pusha
cmp
pusha
pusha
mov
or
addb
adc
pusha
pop
mov
pop
jae
lcall
ss
xchg
mov
sub
fimull
loope
pusha
pusha
addb
lret
nop
xor
stos
add
and
jge
adc
pop
jmp
sarl
inc
xchg
jle
rorl
add
stos
or
and
mov
sub
adc
addb
jne
mov
add
loopne
pop
ret
pop
xor
das
loopne
inc
sub
jb
mov
test
fdivs
cmpsb
addb
inc
arpl
rol
adc
subl
incl
and
mov
xchg
mov
add
mov
lods
shlb
daa
xchg
mov
popaw
or
sbb
loopne
popa
mov
jb
jno
xchg
push
cwtl
add
and
mov
cmp
mov
in
push
inc
or
test
das
xchg
pop
jno
imul
xor
add
and
pushf
ret
andb
mov
jbe
aam
cmc
sbb
mov
and
lret
cwtl
lea
addb
mov
fscale
shll
ljmp
lcall
mov
mov
enter
lods
and
nop
push
cmp
xor
dec
test
add
loopne
aaa
xlat
adc
dec
mov
or
and
cmp
clc
add
add
xchg
addb
mov
rol
xor
and
xor
mov
add
push
cmc
das
repz
and
imul
adc
inc
mov
std
test
rcl
aas
cld
lds
inc
add
sti
leave
mov
cmpb
data16
xchg
shlb
outsl
in
imul
mov
mov
mov
shl
and
nop
adc
lds
mov
mov
negl
xor
jmp
cmpsl
fcoms
std
and
add
mov
pusha
loop
xchg
loopne
shrl
and
sub
pop
dec
mov
addr16
stos
out
fs
mov
addb
and
jo
dec
jl
inc
inc
scas
mov
rcrl
mov
cwtl
rcrl
into
hlt
sub
cmp
or
sbb
fwait
pop
cmp
or
push
out
jg
mov
imul
cwtl
imul
push
add
loopne
mov
dec
mov
lahf
ja
out
fildl
mov
and
push
xchg
in
add
sbb
mov
movsl
in
int3
iret
pusha
es
std
jno
iret
pop
in
add
inc
jge
mov
inc
inc
stos
rol
not
xorl
mov
cmpsl
pop
test
push
rol
inc
or
cwtl
ret
sbb
adc
pusha
pusha
or
inc
xchg
pop
jno
xchg
inc
in
mov
or
rclb
bound
jnp
mov
push
addb
pusha
pusha
pop
int3
xchg
cmp
and
orb
mov
loope
stos
loopne
and
loopne
stc
sub
inc
dec
stc
inc
sub
movsl
adc
and
pushf
ret
jbe
add
sub
loopne
or
and
xor
cld
push
out
push
lahf
fisubrs
mov
jmp
add
insl
cmpsl
rorb
xchg
add
cmp
aad
addb
cmpsb
and
rorl
pusha
outsl
dec
int
ja
pop
test
cmp
rol
xchg
xchg
push
rol
sbb
out
add
lahf
sub
std
jecxz
or
inc
std
dec
or
out
fcom
cmpsb
rol
adc
and
sbb
mov
shlb
push
jmp
rol
popa
arpl
push
fsub
fnstsw
add
sbb
jno
jg
sub
push
loope
pusha
pusha
and
pusha
imul
fdivl
or
shrb
fwait
add
jnp
out
cmpsl
mov
mov
add
mov
jl
jl
push
and
loopne
test
mulb
add
inc
inc
shrb
xor
aam
aam
pop
imul
mov
gs
int3
stos
loopne
dec
dec
mov
dec
lret
mov
jne
jle
add
shlb
mov
insl
aad
in
das
js
inc
inc
cmp
inc
inc
cmp
addb
sbb
and
lcall
jbe
xchg
dec
int3
imul
add
xlat
xchg
sub
into
icebp
pop
mov
rclb
jae
sub
int3
xlat
xchg
and
mov
inc
lods
addb
shlb
mov
inc
jl
jne
stos
cwtl
add
pop
lahf
or
dec
mov
andb
out
fildl
sti
fs
ljmp
loop
sub
and
lds
inc
js
add
xchg
mov
pop
test
xchg
mov
add
mov
in
lret
cmc
jmp
cld
dec
push
test
and
mov
add
lods
rol
imul
aad
pop
mov
inc
inc
xchg
sbb
push
fcompl
pusha
adc
aam
xchg
out
pop
mov
push
and
in
fisttpll
xchg
loopne
das
sbb
loopne
xor
inc
ret
sbb
dec
xchg
adc
movb
lahf
or
out
shlb
push
pusha
pusha
adcl
aaa
cmpsl
popf
add
movsl
aad
dec
dec
shlb
test
loopne
dec
aam
test
add
mov
sub
or
pusha
push
sti
rclb
cli
notb
popf
cltd
cmp
adc
inc
mov
pop
pushl
and
xchg
fildl
divb
jnp
push
repz
mov
pusha
rcl
and
loopne
cmp
mov
sub
loopne
repz
add
xchg
leave
inc
push
jg
fildl
addb
inc
aad
inc
lret
outsb
push
lock
mov
and
or
sbb
and
add
mov
jo
sbb
mov
and
into
fwait
jae
aad
xchg
aaa
or
rorb
loopne
dec
cmc
jb
add
inc
cmp
outsl
push
test
or
add
rcrb
sub
and
fidivrs
xchg
rclb
inc
mov
and
add
dec
rolb
mov
mov
mov
add
mov
and
xor
cli
xchg
cltd
and
inc
mov
movsl
jg
mov
pusha
push
inc
inc
comiss
inc
jno
mov
adc
mov
in
loopne
fisttpll
push
sub
addb
addb
not
jle
xlat
ffree
shl
addb
pusha
pusha
xchg
xchg
jl
pusha
pusha
adc
mov
add
push
cmp
and
sub
and
and
mov
push
ds
jge
data16
fwait
add
push
ss
jge
and
sub
loopne
cmp
mov
shrb
add
mov
movsl
mov
xchg
pusha
mov
push
dec
adcl
adc
inc
aas
fnstenv
ljmp
mov
push
loop
xor
jns
jg
addb
loopne
pop
add
adc
cltd
cwtl
jecxz
jmp
mov
pusha
jp
jo
lret
xor
add
movl
mov
clc
or
js
mov
hlt
push
imul
lods
mov
or
and
aad
mov
xor
mov
sbb
das
jmp
imul
jg
ja
addr16
cwtl
inc
push
outsl
loop
xchg
pusha
in
mov
xorl
xchg
call
in
out
mov
sub
cmp
push
add
mov
cli
fisubl
adc
rol
add
pop
adc
addb
and
hlt
inc
addb
cli
scas
mov
cli
pusha
and
mov
and
sbb
loopne
add
test
loopne
jnp
rol
imul
lock
mov
leave
ss
xor
lret
adc
loopne
addr16
jo
sbb
fiaddl
or
shlb
mov
or
add
add
mov
xor
sub
lahf
mov
mov
pop
shr
jbe
cmp
sti
cmp
dec
lcall
fs
and
dec
inc
nop
rcrb
addb
mov
test
loopne
addl
testb
and
adc
lock
lods
mov
mov
daa
mov
jae
lea
cltd
push
jmp
insl
ds
leave
dec
icebp
lret
orl
out
lds
pop
mov
dec
sbb
shlb
dec
push
addr16
test
inc
xchg
fidivrs
jno
inc
sub
fmulp
sti
cmp
or
rorb
and
inc
inc
sbb
out
scas
in
insb
ds
fildl
add
gs
and
aaa
jno
loop
add
cli
lods
loopne
scas
sbb
cld
out
pop
pop
jns
jmp
loopne
pop
mov
and
andb
addb
scas
enter
xchg
insb
and
cld
mov
pushf
sub
bound
shll
movsb
and
fdivrl
loopne
dec
andb
mov
out
imul
rol
jmp
loopne
jb
rol
inc
inc
addb
fstpl
jmp
popa
in
dec
inc
divb
dec
xor
fsub
xchg
leave
dec
sbb
and
mov
or
sbb
or
pusha
adc
mov
into
inc
nop
add
loopne
xchg
cwtl
sti
aam
sahf
aaa
std
ja
pop
pop
pusha
ds
sub
xor
pusha
filds
jle
xchg
mov
test
jae
stc
pop
lds
mov
ljmp
sarl
test
shlb
outsb
rolb
or
stos
mov
and
and
sub
mov
push
pop
in
dec
mov
loopne
sub
jae
fucomi
pushf
add
jae
mov
dec
inc
xchg
leave
ret
mov
dec
popf
inc
inc
jo
insl
subl
pop
mov
jbe
jne
or
mov
sub
add
mov
shrb
addb
and
loopne
push
aam
shlb
dec
pop
xor
push
jnp
cs
pusha
xchg
xor
pop
lret
lods
mov
leave
cmp
fldt
sarl
dec
push
faddp
mov
dec
leave
and
xor
mov
add
jnp
jmp
mov
in
sbb
jns
lea
pushf
inc
aad
ficomps
cmc
scas
mov
sub
and
mov
cmp
nop
cli
pop
imul
jmp
hlt
xor
jg
or
shrl
dec
insb
push
test
loopne
mov
and
or
negb
sub
adc
push
pop
or
loopne
clc
mov
inc
inc
mov
fnstsw
lock
loopne
or
addb
add
inc
inc
sub
push
mov
sub
rolb
dec
cmc
inc
jb
lock
stos
rol
and
pop
sbb
push
mov
enter
fisttps
rorl
mov
test
pusha
shll
mov
jp
pusha
pusha
lea
adc
mov
and
das
cmp
pusha
pusha
jne
adc
add
scas
outsb
cmp
jecxz
adc
ret
inc
into
cmp
adc
jnp
dec
pop
ja
xor
rol
enter
inc
jge
sub
cmp
pusha
inc
ljmp
mov
xchg
sub
insl
mov
and
fsubs
add
fcoms
js
lahf
je
loopne
mov
les
pop
movsb
rol
xor
sbb
xor
cmc
jge
jge
jmp
fcomps
je
jno
popf
and
and
ret
out
pop
pop
mov
add
mov
fistpl
cmp
stos
add
lret
pop
mov
lds
xchg
push
mov
mov
rol
rol
push
outsl
xor
popf
mov
test
and
inc
inc
dec
dec
out
ja
push
lock
dec
xchg
hlt
andb
ss
jns
lds
rol
and
pusha
dec
cmpl
cmp
rcrb
and
cmpsl
add
or
jo
and
rol
rol
rcll
mov
xchg
jno
xchg
loopne
rol
mov
sub
sbb
scas
mov
rcrb
and
adc
add
rol
mov
sarb
aad
mov
sbb
mov
rorb
pusha
pusha
xor
mov
addb
in
xor
es
dec
jns
ja
xchg
ret
sub
test
add
ret
pop
mov
pop
ss
sarl
daa
mov
jo
pop
mov
xor
mov
cmp
aam
bound
inc
inc
lret
push
jl
add
xor
pop
test
loopne
pusha
mov
jecxz
rol
xlat
sbb
aaa
sbb
pop
out
divb
xchg
lods
scas
rcl
add
and
in
popf
xor
out
aad
mov
mov
ficompl
jge
add
test
loop
into
mov
jmp
push
stos
loopne
xor
or
stos
rol
hlt
fstpl
xchg
adc
aam
pop
cli
cmp
mov
loopne
or
adc
jae
out
loop
add
pusha
or
shlb
shlb
sub
out
and
and
lods
loopne
stos
sti
push
rol
sbb
pusha
pusha
xor
rol
xor
and
addb
ret
imul
or
out
sbb
andb
roll
addr16
push
and
jo
ret
xor
sub
loopne
addr16
aam
cld
cmp
stos
xchg
jg
pusha
pusha
mov
cltd
fbld
sub
sub
adc
sub
push
fimuls
xor
cld
jmp
mov
fsubrs
das
mov
xor
adcb
push
adc
sub
mov
popa
pop
inc
ret
loopne
mov
loopne
adc
add
rol
cmp
jae
addb
aas
mov
rcl
mov
leave
sub
loopne
xchg
cmp
cmc
imul
mov
and
add
jnp
sbb
fdiv
andb
jmp
stc
insl
out
jbe
xchg
outsb
pushf
int3
or
inc
sub
adc
mov
add
mov
jg
cmpsl
push
imul
push
shlb
mov
inc
in
mov
xor
dec
stc
filds
add
add
add
adc
loopne
xchg
sub
rol
test
loopne
lock
bnd
out
jp
js
aas
xor
lock
cmp
sbbl
mov
mov
fwait
outsb
mov
cwtl
sub
loopne
xchg
ljmp
test
jno
addb
jl
hlt
in
loopne
push
je
addb
rol
aas
jmp
mov
xchg
fildll
dec
jbe
stos
lcall
pop
adc
popa
push
inc
adc
andb
pusha
pusha
in
inc
pop
hlt
mov
in
rol
repnz
mov
shl
add
out
xor
mov
cmpsb
inc
inc
dec
shrb
and
mov
and
aad
ficompl
mov
addr16
mov
js
loopne
push
mov
das
test
cmc
pop
pop
xchg
in
or
loopne
or
andb
mov
and
pop
push
inc
inc
mov
mov
pusha
in
and
subb
rol
sarl
dec
jmp
ja
ss
imul
xchg
pusha
rcl
stos
pusha
pusha
clc
lea
addb
and
mov
rol
ljmp
push
mov
lret
cmp
sub
test
jle
mov
hlt
test
mov
mov
add
add
mov
and
xchg
pop
sbb
mov
and
mov
and
inc
inc
movsb
add
or
inc
inc
mov
xchg
mov
rorb
xorb
in
outsb
scas
push
addb
mov
shl
xor
sbb
and
mov
ja
les
lahf
pop
imul
sti
jmp
loopne
adc
pop
mov
fmull
add
adc
gs
loopne
insl
push
add
sbb
inc
fs
xorl
test
outsl
cmp
mov
xchg
mov
dec
lea
loopne
fsub
call
pusha
pusha
clc
push
aaa
jbe
pop
xchg
dec
add
add
iret
inc
mov
and
rolb
push
and
andb
or
rolb
jb
imul
jae
inc
fdivs
loop
aam
xchg
rol
inc
xchg
xchg
add
mov
lret
jg
inc
fstps
jl
mov
ss
add
rolb
shl
pusha
pusha
mov
mov
cld
jl
sub
xchg
adc
jne
or
shlb
add
pop
call
enter
mov
xor
pop
bound
jne
cmpsb
pusha
pusha
jg
test
and
pop
xlat
in
imul
or
loopne
xor
pusha
js
inc
iret
notb
pop
and
mov
ja
test
and
subb
jl
mov
pop
clc
sahf
mov
rcrb
loopne
aam
mov
loopne
lods
loopne
sbb
mov
pop
add
xor
aam
insl
mov
jne
scas
and
stc
add
inc
enter
adc
xchg
cmp
lcall
push
inc
inc
and
shlb
mov
add
loope
addb
jnp
jbe
and
mov
add
adcb
fistl
add
rorb
in
push
test
loopne
aam
sub
ds
add
out
mov
pusha
pusha
pop
lods
inc
inc
mov
outsl
sub
xchg
out
insl
dec
xchg
and
loopne
mov
lods
mov
and
jle
inc
inc
fidivl
addr16
cltd
and
add
add
mov
repnz
sub
loopne
push
in
jne
addb
pop
xchg
xchg
bnd
shrl
pop
add
scas
loopne
shll
jl
add
rorb
pop
addr16
loopne
leave
and
cmp
jecxz
sahf
loope
in
addb
add
aam
push
cmpsb
rol
out
fbstp
jl
pop
hlt
mov
movl
jl
bound
add
fists
rol
cmpsb
pusha
pusha
inc
cmp
cmp
sbb
adc
mov
shll
mov
xchg
xor
inc
inc
dec
outsl
sahf
je
jb
inc
inc
xor
jp,pt
data16
std
into
push
mov
pop
arpl
mov
xchg
xor
andb
mov
ror
addb
push
push
lds
cmpl
sub
and
subb
in
in
mov
clc
push
in
rol
mov
in
jl
push
addr16
pushfw
xlat
cmp
addb
pusha
pusha
mov
je
dec
fstps
sub
mov
leave
sbb
lret
in
adc
or
fwait
repz
outsl
repz
loopne
xor
ds
rorb
inc
push
and
pusha
inc
pushf
popf
mov
xchg
loope
inc
in
and
outsl
ss
loopne
neg
imul
andb
addb
pusha
pusha
aam
mov
ja
ljmp
xor
cltd
add
imul
cli
xchg
cmpsl
mov
jno
mov
xor
out
xchg
xor
push
inc
inc
inc
adc
dec
sub
shrb
xor
mov
addb
and
and
ret
addb
sarb
loopne
fwait
lds
out
bound
mov
mov
jb
stos
and
dec
data16
clc
jae
mov
test
mov
ficomps
popa
jl
xchg
scas
mov
cmp
add
mov
loop
ljmp
pop
cmp
je
in
mov
mov
pop
pop
add
and
inc
sub
bsf
dec
addb
je
and
add
movsl
nop
xorl
mov
jo
into
fcompl
lahf
mov
repz
leave
idivl
insl
rolb
pusha
pusha
ja
push
nop
jae
pop
lock
repz
add
add
add
and
push
cld
adc
scas
int3
ja
nop
rolb
shld
add
lds
out
xor
mov
and
mov
xchg
popf
jo
mov
mov
pop
ret
retw
pusha
pusha
mov
dec
enter
inc
inc
out
popa
mov
in
add
iret
lods
and
scas
inc
inc
mov
addb
xor
rol
add
test
loopne
outsl
push
mov
fisttpl
mov
xchg
add
xchg
rcrb
rol
mov
inc
inc
cmpsb
pusha
pusha
std
fs
dec
pop
push
addb
and
jno
add
inc
or
pusha
out
xchg
fisttps
and
sbb
sbb
and
or
mov
adc
and
jae
das
cmp
outsb
in
or
dec
addr16
insb
pop
pop
andb
sub
jl
ja
sub
loope
dec
adc
xorl
push
jb
aam
js
jo
and
cld
inc
sbb
adc
lret
popa
pop
sub
loopne
clc
movq
pop
ja
pushf
rcr
lods
mov
dec
lods
and
cmpxchg
lahf
shr
iret
ret
hlt
xchg
push
lock
add
in
shlb
add
shl
jmp
and
aam
mov
adc
or
and
xchg
or
lret
das
mov
loopne
fstpl
aaa
pop
lods
and
and
loope
push
xchg
loopne
icebp
lahf
dec
imul
push
nop
push
inc
inc
push
mov
das
mov
xchg
shrl
repnz
div
mov
inc
in
xchg
push
inc
inc
pusha
dec
aad
mov
fs
stos
out
jb
inc
xor
mov
mov
lahf
xor
cmp
inc
inc
mov
fs
sar
or
inc
faddl
hlt
add
rorb
addb
fldcw
rol
imul
xor
push
mov
and
fldt
mov
lret
stos
std
aam
in
in
int3
xchg
cmp
fcoml
pusha
pop
popf
aam
dec
lret
pop
or
mov
rorb
movsl
dec
rcr
push
test
scas
loopne
daa
outsl
add
and
addb
add
pmuludq
lock
bswap
push
mov
inc
scas
daa
inc
cmc
stc
add
rorb
add
mov
aad
xchg
out
xchg
xor
fucomip
arpl
lret
jge
rcrb
in
fwait
daa
cmp
or
cmpsl
jae
addl
enter
mov
fldcw
addb
pop
daa
mov
and
loopne
mov
or
lea
addb
inc
or
and
addb
gs
loopne
jge
insl
roll
push
cmpsl
enter
xor
pop
xchg
shl
arpl
fisttpll
dec
and
add
shl
loopne
cmpsb
rol
mov
es
mov
scas
mov
rol
sbb
fstpt
or
arpl
and
rcl
imul
push
adc
loopne
mov
push
mov
mov
xor
popa
gs
call
test
pusha
pusha
or
jecxz
adcl
cmp
xor
jbe
addb
repnz
adc
inc
dec
in
popl
pusha
pusha
adc
out
pop
xchg
pop
out
dec
repnz
dec
fucom
pop
int
jbe
and
mov
repnz
mov
int
rorb
jo
sub
cltd
loop
lods
push
rcrl
add
js
cmp
sarb
jne
pushf
and
mov
addr16
mov
aas
mov
xchg
daa
jecxz
scas
je
dec
orl
jp
push
out
fmuls
lods
pusha
pusha
sbb
pop
jb
and
or
add
shrb
shlb
ljmp
lret
pop
jge
rol
cmp
or
pusha
mov
and
lods
xchg
add
mov
push
and
imul
fsts
jns
rcrb
inc
inc
rcrl
divl
mov
imul
popa
xor
mov
rorl
hlt
stos
lcall
gs
and
loop
in
or
in
in
xchg
into
inc
add
mov
loopne
addr16
and
and
subb
pusha
pusha
adc
and
inc
inc
test
outsb
sahf
xchg
mov
and
out
jecxz
cltd
aam
and
sub
addb
shl
ret
fiadds
mov
xor
adcl
loopne
dec
shrl
jne
fldcw
mov
addb
sar
pop
sub
add
movsb
addb
jno
mov
aam
lcall
jl
lret
cwtl
jg
jbe
shlb
sbb
repnz
mov
loopne
into
repz
pusha
outsl
ficompl
sarb
je
dec
lret
movsl
lret
fcmovnbe
popf
xor
stos
ja
rol
ljmp
xchg
sti
lcall
pop
jmp
mov
in
lods
addb
mov
loopne
jno
adc
mov
sbb
in
repnz
jg
sbb
xchg
stc
std
scas
lret
jae
lcall
add
jns
decb
mov
fs
data16
movsl
xor
jg
cwtl
in
rol
nop
or
rcl
xorl
or
mov
cwtl
or
addb
pusha
pusha
das
jg
mov
test
or
and
xor
loopne
shl
mov
rcl
sbb
in
or
and
addb
frndint
jb
mov
sbb
shrl
inc
ja
or
push
mov
pop
ljmp
adc
dec
insb
pop
pop
push
leave
clc
lds
pusha
fstps
rol
popf
popa
lcall
lret
xchg
mov
pusha
pusha
fsubrs
mov
sub
jge
and
mov
out
push
rol
xor
out
xor
iret
leave
cltd
push
test
mov
mov
loopne
mov
repz
fwait
jb
and
scas
xchg
adc
jne
in
mov
addb
mov
and
push
lods
mov
loopne
cmpsl
ficompl
xchg
add
neg
jnp
pop
scas
add
jnp
out
dec
std
dec
imul
sbb
pusha
les
mov
and
and
push
rol
mov
fdivs
in
fimull
xchg
cmpl
imul
push
rol
mov
sbbl
clc
or
cld
call
addb
int
mov
inc
dec
cmp
mov
inc
mov
adc
rol
pusha
pusha
jmp
test
pusha
adc
test
fwait
popf
xchg
outsl
dec
sbb
int3
jo
dec
jns
dec
mov
inc
lods
xor
mov
addb
mov
mov
add
pusha
dec
dec
lret
sbb
push
dec
adc
inc
mov
outsb
cld
push
jmp
and
aam
adc
scas
mov
jns
mov
add
loopne
jecxz
daa
jle
std
xor
pop
mov
add
dec
push
pop
add
jo
rol
mov
pop
add
roll
enter
mov
loopne
cmpsb
add
shll
mov
xor
roll
inc
ja
rol
imul
xchg
jno
addb
je
push
sbb
loopne
mov
rcr
xchg
cli
push
push
jns
sbb
cmp
enter
add
lret
hlt
and
ror
addb
sarl
fmuls
mov
psrld
loopne
aaa
repnz
movb
sub
pushf
aad
cmc
pop
cmpsl
ja
sbb
inc
gs
sbbl
loopne
aam
lods
mov
icebp
mov
aam
out
gs
lret
mov
fs
xchg
pop
aaa
pop
movsb
and
mov
inc
inc
lret
outsl
pop
and
push
sub
dec
jmp
adc
rol
int3
je
ret
sub
and
leave
in
insb
aaa
addb
lahf
add
xchg
loopne
ljmp
sbb
add
jo
mov
push
movsb
loopne
and
add
pop
movsl
loopne
mov
dec
hlt
adc
inc
inc
idiv
arpl
or
xorb
push
cmp
cli
xchg
xchg
cmp
mov
imul
iret
inc
push
jle
add
mov
mov
pop
xor
test
inc
inc
push
movsb
add
popf
or
pusha
cld
and
add
pusha
mov
rcrb
cwtl
push
les
loop
xlat
jnp
or
add
rcrl
xor
rcll
xor
sbb
loop
out
scas
addb
mov
mov
shlb
xchg
mov
loopne
pop
xor
rorb
pop
into
mov
add
scas
pusha
pusha
push
mov
adc
leave
mov
rcrl
je
jbe
cli
pop
xor
sub
nop
dec
test
jle
cmp
pop
sarb
addb
push
test
loopne
aad
sahf
or
lret
push
add
imul
mov
push
divb
fistpll
xchg
xor
and
lock
and
xor
add
in
cwtl
and
arpl
adc
sbb
jne
jecxz
lcall
pop
cmpsb
addb
adc
sbb
in
mov
enter
in
mov
gs
mov
rolb
inc
inc
ja
dec
in
loope
adc
mov
and
sbb
lret
adc
rolb
cs
inc
pop
aad
inc
inc
mov
and
mov
sbb
sbb
push
out
inc
sbb
iret
fistpll
dec
dec
mov
adc
sbb
fcomps
inc
inc
and
xor
push
ljmp
cmp
cli
loop
sahf
or
add
ja
xor
outsb
in
stos
inc
inc
add
and
fldcw
ja
pusha
pusha
scas
sbb
and
gs
sbb
sub
jnp
jae
test
mov
inc
inc
popf
mov
int3
mov
push
movsl
inc
popa
push
mov
mov
mov
adc
push
sarb
xchg
inc
mov
and
in
pushf
mov
jnp
add
jecxz
dec
lods
rol
mov
rol
fisttpll
add
mov
mov
test
rcrb
mov
inc
inc
gs
int3
pop
dec
xor
rolb
rol
stos
repz
mov
movsl
push
and
scas
call
cmp
shlb
push
or
loopne
pop
stos
stos
xchg
lret
popf
in
mov
es
mov
rorb
inc
inc
nop
repz
and
and
push
pop
jp
movsb
addb
cmc
push
addb
pop
sub
push
and
or
pop
je
pop
xchg
cmp
add
inc
stos
inc
inc
addb
aad
and
lea
jo
jge
fdiv
stc
lds
push
and
jb
or
and
mov
test
add
dec
pop
daa
xor
stos
addb
test
and
addb
rolb
adc
std
push
loopne
sub
pusha
sub
and
ljmp
shlb
jge
dec
push
push
nop
mov
sub
repz
xchg
cli
sar
outsl
pusha
sbb
cmpsl
push
inc
inc
and
sarb
mov
pop
push
rolb
add
loopne
dec
sbb
mov
cmpsb
add
fisubl
inc
mov
jp
push
add
stc
fbstp
dec
mov
rorb
pusha
rclb
mov
clc
icebp
mov
test
outsl
popl
xchg
mov
loopne
out
loopne
aam
and
js
scas
add
and
xchg
aam
mov
stc
ds
and
loopne
or
inc
push
lcall
and
das
leave
inc
enter
add
cmc
jge
addb
rol
push
addb
pusha
pusha
loope
xor
pusha
pusha
lcall
fiaddl
test
pop
cmc
repnz
in
jae
cmpsb
loopne
outsl
imul
and
aas
aad
adc
cmpsl
adc
call
xchg
or
stos
mov
and
cmp
aad
icebp
jge
shl
rolb
adc
std
addb
pop
dec
inc
pop
push
sub
loopne
jl
bound
addb
fistps
mov
push
xchg
jmp
push
dec
jg
test
push
mov
and
shr
enter
add
push
js
into
sar
loope
addb
jno
movsl
xchg
and
sbb
xchg
xor
mov
fstps
pop
rorl
stos
in
mov
cmc
jae
xchg
imul
ja
ret
addr16
mov
addb
adc
pop
scas
loopne
cmp
nop
dec
mov
lahf
cmp
pop
shrb
pop
mov
and
ja
inc
inc
out
icebp
daa
inc
inc
lea
aam
xor
inc
inc
pushf
ja
mov
and
inc
mov
je
fwait
sub
scas
hlt
shr
sub
sbb
and
sbb
leave
adc
repz
mov
jbe
xchg
loopne
push
and
cmp
in
cltd
sar
out
push
mov
xchg
adc
sub
loopne
xchg
lods
sbb
test
loopne
or
add
and
sub
loopne
push
loopne
jo
mov
rolb
lock
fisttps
loop
sub
ds
aam
loopne
xor
sbb
mov
mov
adc
adc
shrb
cmp
leave
dec
xchg
mov
loopne
sub
and
and
and
pop
arpl
popa
adc
lret
loope
push
pop
enter
mov
and
mov
and
cmpsb
inc
inc
mov
mov
pop
xor
cltd
add
mov
push
jno
into
or
fisubl
mov
sbb
mov
rol
or
stc
or
mov
adc
into
shrl
add
pop
scas
loopne
inc
mov
cmpsb
addb
inc
inc
cmp
pusha
pusha
lock
fs
in
inc
lret
mov
push
inc
inc
into
cmp
sbb
repnz
mov
mov
or
pusha
pusha
xchg
mov
inc
inc
add
push
jle
incl
xchg
faddp
stos
add
lds
pushf
cwtl
jp
std
sbb
cli
jmp
jle
jle
mov
and
jbe
inc
inc
lahf
push
or
sbb
dec
out
xchg
sbb
loopne
cs
inc
adc
es
xchg
pop
daa
push
test
and
dec
ja
cld
jbe
rol
mov
pop
scas
mov
lahf
adc
fisttps
orb
nop
pushf
add
and
or
addb
xor
cmpl
cmpsb
addb
loopne
sub
mov
fwait
pop
mov
push
loopne
pop
inc
or
rolb
out
xchg
xchg
mov
add
lahf
mov
and
loopne
aad
xor
cmp
lods
test
xor
mov
loopne
stos
pusha
pusha
mov
inc
dec
sub
rcrb
mov
aas
in
xchg
call
jnp
jp
clc
lahf
lods
rol
fwait
jle
sub
scas
sbb
pusha
mov
xchg
mov
add
addb
and
js
outsb
dec
mov
loop
clc
xchg
pushf
sbb
and
arpl
cmp
addb
imul
das
in
cli
movsl
rcl
loop
add
dec
gs
pusha
inc
push
and
jl
fwait
pop
test
sbb
jb
inc
mov
addb
out
loopne
sbb
adc
add
and
cmp
mov
je
lret
inc
shll
test
mov
icebp
arpl
push
xchg
mov
xor
je
les
andb
rorl
pop
outsl
sbb
insb
cmovp
push
and
or
out
fnsave
mov
shlb
or
loopne
jecxz
jbe
mov
and
xlat
bound
leave
cltd
out
sbb
addb
push
les
daa
mov
xor
arpl
inc
fldt
pop
pop
mov
jno
sub
inc
rorb
scas
mov
outsb
xlat
mull
mov
imul
sbb
ror
jl
ljmp
in
add
add
mov
mov
stos
addb
leave
jns
mov
mov
pusha
fdivp
icebp
sub
jecxz
jno
add
andb
sti
mov
fiadds
pusha
pusha
mov
test
loopne
call
testl
orb
popf
push
movsl
mov
adc
mov
sti
and
imul
rol
addr16
xchg
mov
xorb
mov
pusha
add
cmp
sarl
pop
push
adc
loopne
fwait
loopne
inc
inc
push
pop
fbld
adc
sahf
jae
rolb
not
mov
push
push
stos
inc
inc
jmp
and
mov
adc
mov
mov
loopne
add
loopne
negl
inc
inc
pop
pop
add
mov
sub
add
sbb
mov
add
lods
inc
inc
push
add
cmp
fs
push
fildll
sub
add
jno
out
lods
ja
sub
add
addb
pusha
fnsetpm(287
mov
imul
ja
push
lods
jg
shrb
loopne
push
int
jp
inc
ds
data16
popf
mov
cwtl
sbb
cld
jle
mov
lret
cmpsl
sub
fcmovnb
xchg
movsb
addb
xchg
add
add
mov
icebp
add
dec
repnz
lahf
xchg
jns
inc
inc
sub
mov
and
sahf
shlb
cltd
test
lods
jmp
inc
inc
out
cmp
in
add
sbb
hlt
cmpsl
cmpsl
pusha
fwait
xchg
jnp
outsb
jno
cli
xchg
lds
filds
xchg
xchg
arpl
jbe
out
int3
inc
into
pop
mov
shlb
push
inc
mov
popa
lcall
dec
inc
in
stc
sub
pusha
addb
push
add
subl
in
stos
bound
je
add
adc
inc
daa
jecxz
and
ret
repz
jg
mov
enter
mov
dec
fists
shlb
ljmp
repnz
mov
nop
addb
add
ret
push
pop
arpl
scas
pusha
pusha
jg
add
lea
fistpll
mov
pusha
push
pmaxub
lcall
das
mov
test
pop
jno
add
mov
adc
jns
jb
mov
add
arpl
jl,pt
fstpt
cli
pop
in
jl
mull
inc
inc
cli
imul
movsb
add
mov
in
ljmp
lret
stc
les
popf
xlat
mov
test
rcrb
loopne
fisttpll
add
cmp
test
in
loopne
rcl
xor
push
pop
daa
clc
push
xchg
sti
jle
repz
xchg
jle
aaa
pop
or
ljmp
cmp
lds
cmp
rcl
rol
loopne
or
and
ds
test
ja
jb
arpl
loopne
mov
addl
adc
pop
xor
fs
jae
jno
inc
dec
push
push
scas
mov
rcrl
mov
ret
xorb
loopne
xchg
pop
imul
bound
or
test
les
aad
imul
fisttpl
int
or
and
fisubrs
add
cmp
mov
pop
cmp
fsubs
test
mov
movsb
addb
mov
sub
int3
aas
dec
mov
int
js
out
ss
push
rcll
adc
mov
aad
ucomiss
loopne
mov
lds
pop
xchg
pop
xchg
rcr
xor
outsb
xchg
rclb
pop
pop
repz
sbb
loopne
cmp
rcl
ret
sarb
add
popf
mov
lea
std
lock
rol
jecxz
xchg
sub
or
leave
mov
mov
addb
xor
cli
mov
pusha
pop
ret
and
leave
stc
jnp
rcll
movb
xchg
inc
xchg
push
push
pushf
mov
sbb
rorb
and
shl
inc
mov
test
fimull
pusha
push
jg
mov
fimuls
mov
repz
jae
mov
xchg
fmulp
mov
pusha
pusha
and
add
add
inc
dec
scas
rol
and
rorb
and
aam
fs
fldl2t
add
and
cmc
fildll
push
jb
out
push
fisttpll
lcall
inc
pop
stos
addb
sbb
push
gs
pusha
pusha
cli
scas
mov
loop
in
loopne
pusha
mov
inc
inc
dec
aaa
or
and
mov
adc
ficomps
inc
test
jne
mov
rclb
inc
in
lods
pusha
pusha
div
adc
pop
or
mov
mov
movsb
add
in
rol
pop
push
lcall
mov
mov
inc
cmp
les
jbe
call
sub
cmpsb
rol
and
mov
push
and
shr
test
push
cmp
and
test
add
imul
add
out
loop
add
add
imul
cmp
cmc
repnz
mov
sub
xchg
and
add
hlt
div
and
add
mov
inc
fstps
dec
fimuls
cmp
push
lahf
dec
jl
fistps
push
hlt
jmp
push
call
and
rolb
addb
inc
xor
xor
test
mov
jle
mov
and
mov
scas
and
push
xor
inc
in
sbb
add
out
scas
in
add
loopne
addr16
stos
push
incb
xchg
shl
pop
and
and
xor
leave
lds
cld
out
xor
pop
mov
in
int3
insb
inc
leave
push
in
adcl
inc
xorl
jle
jle
lock
loopne
mov
nop
jns
push
mov
and
popf
movsl
out
lods
inc
inc
or
loopne
add
mov
sti
cmc
scas
pusha
pusha
and
fwait
pop
fcompl
xlat
mov
nop
xchg
scas
loopne
cmp
aam
pusha
pusha
mov
xor
pop
push
js
je
inc
push
sbb
mov
shlb
popa
cmp
mov
imul
rol
add
dec
add
loopne
cmp
jb
movsl
lea
inc
cmpsl
cmp
ss
pushf
mov
mov
out
pop
mov
mov
push
pop
xor
hlt
out
test
add
adc
push
push
icebp
push
sub
mov
add
jno
xor
sub
loopne
loope
mov
sub
inc
cmp
rol
loope
push
jne
icebp
adc
mov
loopne
sbb
int
jbe
jb
inc
adc
dec
push
out
and
cmp
inc
sub
add
jge
mov
and
mov
scas
add
fidivrs
mov
out
sti
lea
rol
rol
mov
sbb
setno
lcall
mov
out
adc
sub
rclb
adc
dec
or
and
add
addb
hlt
ja
dec
dec
inc
jg
lea
adc
dec
xchg
pop
nop
arpl
stos
mov
jno
adc
lods
cltd
insb
mov
and
popf
lret
dec
xlat
int
push
and
inc
daa
jnp
pop
je
inc
add
sbb
mov
sub
addb
loop
mov
out
inc
ss
or
loopne
repz
push
inc
inc
insb
jmp
popa
mov
add
insb
push
add
cmp
addb
rorl
int3
mov
inc
inc
movsl
icebp
clc
in
lret
add
mov
xor
pop
inc
negb
and
aad
xlat
push
test
jbe
mov
mov
sbb
roll
inc
inc
adc
dec
in
fisttpll
rol
or
and
mov
sbb
enter
jmp
out
fmull
in
and
or
jae
pop
xchg
mov
rcl
adc
cmp
dec
pop
pushf
je
cli
mov
and
and
mov
or
loopne
pusha
pusha
mov
cli
pop
mov
or
and
jl
push
pusha
pusha
je
popa
mov
imul
ret
popa
sbb
scas
push
push
mov
mov
mov
pusha
pusha
pop
xchg
js
or
and
adc
and
outsl
ffree
dec
jp
pop
mov
cmpsb
and
lds
ret
cmp
int3
pop
pop
dec
jae
in
orl
pushf
fistps
and
clc
popl
fs
rol
mov
or
jmp
insl
mov
gs
dec
cmpsb
inc
inc
mov
cmp
cmp
mov
push
arpl
and
add
loopne
pop
adc
xor
mov
and
add
imul
nop
jecxz
push
stos
cld
popf
sbb
int
sub
and
dec
sbb
movsb
inc
inc
ret
inc
cmp
xchg
lcall
xor
es
pusha
xor
loopne
lock
xor
inc
and
rolb
mov
dec
data16
and
mov
mov
mov
cld
xchg
cmp
addb
jg
xchg
sarb
push
out
inc
test
pusha
xchg
insb
or
shrb
in
mov
push
inc
test
rorb
in
sub
jne
addb
dec
daa
add
add
pusha
loop
mov
orl
jnp
scas
mov
pusha
xchg
shll
mov
shlb
dec
fidivrs
mov
adc
stc
dec
mov
push
sub
xchg
lea
std
adc
loopne
push
fld
add
loopne
daa
shl
jp
pop
sti
mov
add
xchg
push
pusha
pusha
ja
fs
push
loopne
loopne
xlat
ret
sbb
adc
iret
mov
in
addb
mov
inc
push
pushf
arpl
sub
pusha
xor
imul
dec
add
addb
jns
aad
dec
push
rcrb
pusha
pusha
push
loopne
iret
inc
push
ret
and
clc
stos
mov
lcall
adc
jae
in
loopne
jmp
leave
and
jmp
or
mov
xchg
xchg
popa
cltd
shlb
loope
xor
icebp
cmp
cmp
andb
pop
add
rolb
lods
dec
ss
push
jno
xchg
and
loopne
pop
scas
and
pop
stc
lods
loopne
push
pusha
pusha
fistpl
gs
jge
addb
mov
xor
fwait
mov
enter
int
pop
into
in
enter
xchg
or
mov
push
rol
pusha
pusha
push
popa
addb
xor
pusha
nop
jbe
leave
sarb
in
pop
jno
jl
cwtl
daa
popf
scas
addr16
add
add
jbe
and
pop
and
shrb
rol
addb
inc
inc
lock
out
bound
in
xchg
stc
mov
addb
or
mov
mov
stos
inc
inc
bnd
jne
mov
loopne
repz
rol
mov
das
les
pop
in
insb
jge
xchg
and
cli
cli
lock
lds
pop
adc
pusha
inc
fldl
pop
mov
mov
cmpsl
fsubp
xor
scas
adc
adc
iret
xor
inc
xor
cmp
ss
and
inc
es
inc
stc
loop
and
inc
in
shl
or
cmp
add
mov
pusha
scas
pusha
pusha
fcoms
mov
leave
jno
xchg
pushf
fwait
sahf
mov
jmp
sub
shr
rol
lods
or
loope
mov
outsl
lahf
ljmp
add
shlb
sbb
xor
mov
fisubs
addb
push
push
cmpsb
pusha
pusha
sub
loopne
mov
lods
sbb
xor
push
jae
rol
mov
add
add
push
test
rcl
cmp
sub
mov
pusha
pusha
or
push
outsb
lret
repz
xchg
push
inc
data16
aad
mov
xchg
mov
cld
inc
jb
pop
sbb
sbb
scas
pusha
pusha
in
adc
inc
inc
mov
sbb
rol
out
icebp
addr16
mov
cmp
rol
add
inc
cmp
ds
addb
mov
jecxz
mov
loopne
movsl
sahf
loope
sahf
sbb
addb
inc
inc
inc
iret
repnz
inc
jge
loopne
cli
push
or
add
loopne
add
and
jnp
and
rclb
and
outsb
or
sarb
rclb
and
push
out
and
xor
js
das
sbb
shl
out
sub
test
loopne
sub
jecxz
cli
lahf
xchg
sub
mov
cmp
ret
adc
js
sahf
xor
inc
inc
popf
sbb
mov
hlt
insl
lahf
mov
ljmp
pusha
pusha
addb
call
pop
jne
js
xchg
ret
inc
repz
adc
inc
xor
adc
rol
push
jmp
mov
jge
mov
add
rol
mov
shll
and
fisubl
repz
jne
adc
loopne
subl
push
or
ror
pop
ljmp
push
xchg
lcall
notb
adc
ds
repnz
in
aas
push
loopne
and
dec
lcall
adcl
pusha
andl
bound
lock
pop
mov
shrl
add
jp
dec
mov
jp
pop
mov
mov
or
sub
loopne
inc
xchg
jne
push
ja
inc
sahf
ror
jecxz
addb
inc
cltd
xchg
cmp
sarb
loopne
inc
repz
shlb
mov
movsb
mov
inc
test
loopne
call
ljmp
rol
lods
notl
pop
adc
xlat
xor
fcmovu
add
in
movsl
and
and
mov
pusha
pusha
bound
or
popf
push
repnz
inc
and
xchg
push
mov
test
incb
add
pop
push
lods
mov
insl
xor
ret
shr
jmp
push
and
adc
out
xchg
addb
jae
mov
sub
push
and
mov
or
and
stos
push
enter
loopne
in
fistl
add
shlb
out
mov
add
add
mov
mov
dec
lods
inc
inc
add
xchg
ret
pop
xchg
xchg
add
fs
jp
mov
jbe
xchg
jle
and
and
and
inc
ljmp
ljmp
std
sub
and
add
movsl
xchg
fbld
mov
ds
pop
adc
les
das
push
addb
repz
inc
add
add
add
rol
out
icebp
mov
and
lock
or
add
mov
stos
addb
loopne
pop
xchg
adc
mov
and
shrl
dec
inc
jg
lcall
add
mov
mov
data16
jno
cli
add
loopne
adc
mov
pop
nop
mov
sti
mov
fs
push
repz
xchg
and
mov
dec
iret
add
addb
mov
and
or
rolb
lea
dec
jne
ret
rcr
roll
iret
scas
loopne
fisubrs
scas
sub
jp
inc
inc
or
add
nop
test
shlb
inc
pusha
mov
adc
aas
cmc
push
pushf
out
ljmp
cltd
or
shrb
xlat
push
pop
sub
aad
mov
cli
mov
in
or
and
notb
scas
mov
inc
inc
jp
add
and
pop
xchg
inc
inc
push
fwait
ds
int
push
sub
cmp
or
in
sbb
inc
xor
jecxz
popf
enter
or
jl
lret
and
xchg
or
dec
pop
mov
xchg
je
sub
adc
mov
pop
sbb
lds
jp
cmp
fistpll
adc
movsb
addb
loopne
jnp
pusha
pusha
js
repnz
mov
popa
add
xchg
ds
and
or
and
pop
dec
xchg
push
push
in
inc
loopne
imul
mov
mov
rorb
dec
cmp
dec
repnz
add
loopne
push
inc
inc
test
inc
push
lock
fdivrs
stc
sbb
inc
mov
push
out
push
add
add
dec
cmp
xchg
fdivrs
xchg
lods
dec
arpl
mov
push
or
loopne
jne
out
loope
test
mov
repnz
loopne
addb
push
fists
jle
iret
sti
xchg
mov
jmp
rol
hlt
gs
dec
std
sbb
jmp
iret
mov
rclb
imul
sub
and
adc
enter
jp
push
dec
movsl
loop
mov
repz
clc
bsr
mov
rol
loopne
adc
mov
adcb
mov
inc
lea
pop
dec
sahf
mov
jl
addb
xchg
adc
and
loop
pusha
pusha
repnz
xchg
adc
add
rolb
push
fld
mov
cmp
and
mov
cwtl
js
cmp
mov
mov
movsl
mov
add
cmp
filds
add
cld
orl
mov
nop
pop
push
xor
mov
inc
cld
cmpsl
mov
sub
add
pop
mov
jns
cmc
dec
mov
push
outsb
xor
sub
shlb
sbb
mov
out
add
add
fs
jmp
cltd
insl
adc
xchg
dec
stos
repnz
push
aam
inc
push
pop
aas
iret
stos
add
iret
pop
in
push
mov
xor
scas
cmc
loopne
or
add
addb
xor
xor
push
lcall
jno
sub
rol
rol
popa
add
xchg
mov
shlb
inc
push
add
scas
in
ret
scas
mov
mov
dec
insl
out
or
fiaddl
xchg
ds
and
mov
xlat
xor
mov
push
out
push
and
add
shlb
repnz
rolb
addb
pop
lock
and
rol
jle
test
and
inc
xchg
ja
pop
jmp
jnp
out
sub
and
lret
mov
shlb
xchg
jo
xchg
and
add
dec
icebp
mov
pop
or
mov
pop
xor
sti
fiaddl
push
lret
loopne
sub
cmpsb
loopne
or
mov
fiadds
and
fadd
mov
aad
pop
in
push
hlt
push
sbb
jnp
pusha
adc
lock
fyl2x
int3
inc
mov
pop
pop
jbe
inc
inc
pop
lahf
jae
scas
loopne
dec
arpl
test
jmp
fidivrs
fs
xchg
mov
or
loopne
sub
and
addb
int
rol
outsb
pop
sbb
dec
cli
cmp
mov
lret
dec
popa
ss
cmp
or
and
and
lcall
out
movsb
addb
mov
xchg
bound
push
scas
rol
mov
movb
sub
and
mov
insb
jmp
imul
mov
pop
addr16
inc
add
lahf
inc
pop
inc
dec
inc
xchg
xor
pop
mov
aaa
ljmp
mov
pusha
pusha
sub
loopne
dec
xor
ss
shrb
pop
stos
les
fmull
push
and
inc
jbe
mov
popa
sub
and
xor
add
inc
adc
mov
jecxz
sub
and
and
repnz
fldenv
pusha
pusha
js
and
sub
add
pushf
or
add
rol
shl
loopne
sub
jmp
inc
stc
mov
rol
gs
adc
ds
das
ljmp
add
mov
mov
mov
cmc
je
aam
js
in
adc
imul
add
xor
mov
icebp
loop
pop
jno
or
imul
mov
cmp
test
cltd
mov
mov
aad
addb
mov
inc
loopne
xor
add
clc
and
jns
and
ret
mov
and
inc
push
ja
add
aam
aas
or
lods
mov
gs
mov
mov
jecxz
mov
in
xchg
xchg
sub
and
dec
pushf
pop
push
cmp
xchg
iret
loop
jns
mov
pusha
pusha
das
mov
rclb
sbb
lock
inc
inc
push
in
and
pop
add
pusha
andl
loopne
inc
ret
loop
addb
xor
mov
movsl
outsl
ffreep
fdivrl
mov
rolb
ret
add
add
std
cmp
rol
cli
notb
pusha
pusha
or
loopne
sbb
lret
aas
jg
or
mov
mov
jp
cmp
rcrb
and
push
loope
mov
jo
mov
cmc
or
add
test
add
imul
and
mov
and
pop
jnp
movsb
rol
add
cwtl
xchg
push
cmpsb
rol
sub
cmpb
data16
loopne
add
std
xchg
outsl
sbb
imul
inc
pop
mov
addb
dec
xchg
pop
cld
stc
jp
popa
xor
mov
jne
inc
inc
xchg
leave
arpl
jne
sbb
aas
jl
jl
sub
sarb
mov
sbb
mov
and
xchg
ss
mov
shrl
into
push
fmull
jge
pop
pop
push
pop
in
inc
xchg
lret
popf
lea
xor
push
das
nop
iret
enter
add
pop
push
shrl
cmp
repz
popf
inc
jmp
rol
and
jo
cmp
push
jg
jnp
mull
lock
lods
lods
rol
mov
andb
sbb
sbb
gs
pop
cmp
add
jp
aam
iret
sub
xchg
xor
cmp
movsl
dec
xor
gs
pop
outsb
pop
or
call
push
dec
cli
fisubrs
adcl
cmpsl
scas
mov
add
outsb
repnz
add
fdivs
pusha
pusha
cmpl
add
rol
outsl
push
rclb
jb
mov
mov
and
loopne
popa
jecxz
loopne
jnp
sbb
loop
arpl
mov
add
insl
jne
mov
cmp
scas
leave
xchg
sub
cmp
popf
mov
inc
inc
mov
sbb
dec
xor
call
xchg
ljmp
addr16
jle
xor
and
inc
inc
push
cld
stos
rol
push
mov
xor
clc
mov
std
push
incb
add
pop
cmp
scas
push
adc
dec
lret
loopne
inc
popf
add
dec
and
cmp
push
inc
xchg
xchg
addb
insb
sarb
loopne
stc
int3
and
mov
popa
add
jle
sbb
lea
addr16
jmp
jge
imull
add
addb
xor
jl
xor
xchg
inc
and
add
inc
loope
jmp
movsl
xbegin
dec
push
jb
in
mov
and
in
hlt
adc
inc
inc
fstpl
fwait
jp
jp
inc
mov
adc
mov
data16
mov
gs
negl
inc
icebp
insl
adc
clc
rcll
sahf
mov
adc
and
mov
mov
push
sbb
and
mov
add
add
loopne
pop
xchg
sbb
stos
push
push
mov
inc
mov
cmp
int3
jno
inc
inc
std
lret
push
jns
cli
jne
nop
jge
inc
inc
dec
adc
or
jle
mov
loopne
mov
and
add
add
xor
lock
rol
jle
inc
dec
mov
das
aam
incb
push
mov
xor
out
loop
dec
xor
fcoms
shl
inc
inc
in
les
cmp
ret
dec
and
dec
cmpsb
rol
outsb
stos
shlb
inc
sbb
es
inc
jo
add
dec
hlt
sub
loopne
or
and
add
mov
lahf
andb
or
loopne
mov
mov
loopne
fnop
push
cli
jno
jnp
setb
repz
stos
add
jl
insl
loopne
mov
mov
loopne
sbb
pop
mov
mov
pop
or
add
sub
and
inc
and
and
mov
sbb
rcl
inc
frstor
cmp
jecxz
inc
inc
pop
mov
pusha
pusha
inc
pop
sbb
ret
fisubrs
and
inc
out
loopne,pn
add
pop
aas
ret
imul
addb
sahf
or
push
cmp
repz
scas
add
cmp
add
shr
mov
rol
out
pop
and
into
and
cmp
sub
add
xchg
lods
and
ljmp
sti
popa
fwait
adc
inc
cmp
inc
clc
movsl
mov
mov
add
xchg
mov
dec
and
pusha
aas
sub
outsb
sub
loopne
sub
lret
xlat
push
movsb
loopne
fisttpll
xchg
jl
push
sub
pusha
pop
add
jno
lods
mov
xorl
call
jns
and
add
pop
shr
push
push
xchg
mov
inc
lods
pusha
xor
andb
fcmovne
dec
fs
xchg
ret
loope
mov
or
push
movl
cmp
inc
arpl
je
push
xchg
data16
pop
lcall
add
sbb
sbb
mov
scas
imul
cld
xor
xor
cld
push
mov
add
xchg
mov
mov
shlb
in
jg
pop
mov
popa
sub
mov
add
int
xchg
fildl
loope
and
out
fsubr
and
mov
mov
adc
inc
inc
adc
add
int3
fsubl
mov
xor
cmp
aam
xor
shlb
and
and
dec
dec
inc
je
out
xor
jns
stc
or
pusha
lods
or
and
in
inc
cli
nop
push
int
xchg
ret
sub
rclb
out
fwait
sbb
loopne
jge
cmp
inc
inc
xor
popa
inc
dec
add
inc
in
out
shrb
sub
pop
mov
or
add
cmp
int3
pop
dec
lods
cld
xchg
push
arpl
push
sub
mov
mov
stc
popf
bound
cmp
fidivl
scas
mov
sbb
addb
sub
rcl
std
sahf
and
shr
add
js
stc
ret
push
mov
push
dec
push
add
shll
pop
inc
into
jmp
pop
int
loopne
fsubr
shrb
movsb
loopne
in
pop
arpl
out
cwtl
fwait
cmc
add
cmp
and
into
ja
sbb
xor
and
rol
mov
in
loop
adc
pop
fcmovne
add
lret
jecxz
seta
cmc
mov
ret
dec
mov
popa
xchg
imull
es
pusha
icebp
inc
mov
shlb
and
sub
pop
cmpsb
inc
inc
mov
mov
rol
sbb
jl
faddl
subb
loopne
nop
call
add
in
bnd
sbb
jns
jp
lods
dec
push
sarb
pushf
aam
add
dec
add
inc
imul
and
aam
mov
mov
jns
jb
or
insb
add
xchg
sub
add
push
jne
cmc
sub
mov
sub
and
add
lds
inc
lahf
inc
mov
in
or
loopne
rol
push
addb
xchg
loopne
pop
adc
push
mov
cwtl
pop
sbb
add
add
inc
mov
loopne
jns
mov
inc
and
ror
addb
mov
jae
pop
push
and
sbb
xorl
and
nop
xchg
cmp
imul
rcrb
or
insb
adc
sahf
adc
scas
in
sbb
mov
cmp
xchg
out
ja
jne
inc
test
dec
ljmp
fidivl
testl
xorb
jne
inc
inc
dec
sbb
mov
ret
pop
imull
rol
jecxz
mov
stos
pop
jne
xchg
mov
jg
lret
rol
sahf
inc
mov
loopne
pop
popa
ljmp
aad
add
rcrl
addb
cmpsl
sub
mov
add
andb
xchg
rcl
ror
mov
fwait
push
jmp
jecxz
imul
mov
inc
inc
adc
jo
movsl
and
sub
loopne
ret
jne
popa
xor
icebp
and
call
adc
or
sbbb
mov
or
sarb
and
dec
add
and
inc
inc
cmp
repz
add
mov
outsb
out
sbb
dec
add
and
cmp
add
sarb
jl
pop
lods
xor
mov
dec
xchg
dec
add
xor
mov
mov
inc
inc
out
push
mov
movsl
or
mov
add
addb
or
lock
std
ffreep
cmp
add
mov
arpl
addb
inc
aam
lds
shlb
int3
fistpll
movsl
push
jmp
add
add
jae
cmpsb
addb
pop
xchg
mov
cmc
testb
xchg
ret
or
xor
mov
loopne
dec
sbb
push
icebp
mov
loopne
mov
movsl
jo
lea
jg
xlat
enter
inc
adc
dec
jb
arpl
adc
jbe
adc
push
dec
xchg
scas
mov
xor
cld
mov
push
sbb
roll
push
ljmp
add
ficompl
adc
test
loopne
push
inc
inc
loopne
clc
push
mov
pusha
test
inc
pop
sbb
add
mov
jb
fnsave
pop
rol
xchg
out
addr16
cmpsb
pusha
pusha
mov
jmp
mov
call
add
inc
inc
lods
inc
inc
jmp
dec
lcall
sub
imul
addb
push
mov
jns
adc
or
cmp
popf
aas
mov
pop
add
dec
jae
push
and
stos
xchg
jmp
jmp
rol
pusha
pusha
fdivp
push
hlt
jecxz
pop
leave
mov
pusha
pusha
and
add
mov
andb
mov
mov
and
add
aam
mov
dec
sahf
mov
mov
xchg
xor
jge
mov
and
push
in
cmpsl
inc
or
xor
jo
pop
popw
sub
gs
sub
std
mov
pusha
pop
cmpsb
add
mov
mov
shlb
sbb
aaa
mov
loopne
mov
scas
addb
adc
cmp
pop
sub
fstpl
and
add
dec
imul
addb
lods
and
out
bswap
mov
nopl
jae
jle
and
add
rolb
push
movsl
xlat
stc
xor
call
sahf
sbb
daa
inc
xchg
mov
mov
in
dec
cmp
or
out
jp
mov
stc
repz
or
shll
cmp
dec
movsl
add
pusha
xlat
outsb
dec
mov
lods
loopne
sbb
call
insl
push
cmp
loop
icebp
add
jb
dec
cmp
mov
mov
addb
push
jno
roll
rol
sub
andb
mov
mov
sarb
mov
aaa
xor
xor
push
stos
cmc
out
ret
call
addb
lds
lock
nop
push
adc
jbe
ss
aaa
std
push
stc
cmp
call
pusha
xor
pop
icebp
jecxz
inc
punpckhbw
pop
fidivs
xor
inc
inc
mov
mov
mov
or
shlb
xor
and
fdivl
into
int
inc
cmp
out
scas
sub
sbbb
add
cs
inc
push
lods
daa
negl
jmp
sahf
iret
xchg
icebp
inc
jp
jecxz
cmp
dec
push
rol
pxor
andl
add
rol
decl
pusha
jne
sub
jmp
mov
add
pusha
dec
mov
mov
mov
cmp
scas
addb
mov
and
inc
dec
mov
dec
adc
sbb
and
and
cld
pushf
ret
dec
out
mov
and
fcoml
das
in
or
addb
jmp
lock
popf
sub
jecxz
add
popa
out
cld
call
mov
arpl
sub
cmp
andb
into
out
or
and
mov
stos
lcall
push
daa
xchg
add
cmp
and
jmp
test
enter
add
loopne
mov
icebp
or
out
rcr
sub
and
push
movsb
loopne
xchg
stos
rol
popw
arpl
mov
rol
mov
cli
bnd
out
leave
jge
std
inc
inc
test
add
or
add
mov
loopne
fs
dec
push
cmp
loopne
fsubrs
imul
xor
cmc
inc
push
pop
jne
enter
cmpl
dec
lret
popa
les
jecxz
loopne
enter
push
jp
push
sub
rcll
mov
andb
rolb
jae
xor
inc
inc
ljmp
rol
lret
and
mov
lea
bound
push
stc
inc
mov
cmp
add
arpl
ja
cmpsl
sub
jmp
sub
or
loopne
out
fistps
sarl
rclb
orl
push
mov
lods
mov
mov
mov
test
mov
jb
scas
adc
in
ss
pusha
pusha
andb
mov
sti
sub
pop
dec
outsb
fcomps
cmpsb
inc
inc
cltd
xchg
jbe
repz
je
or
jne
out
scas
jecxz
rol
sarl
jns
jb
lret
subb
faddl
push
and
cmp
sbb
std
adc
addb
shll
fstpl
test
movsb
and
or
loopne
mov
pop
or
add
xor
sti
xor
hlt
mov
cmp
aad
lcall
nop
shrb
addb
iret
iret
mov
add
repnz
push
pusha
pusha
stc
addb
imul
sbb
fildl
pop
iret
leave
fwait
add
lahf
mov
jmp
or
addb
mov
addb
mov
gs
addb
push
push
cmp
leave
outsl
or
and
loopne
enter
inc
inc
stc
and
sub
and
xor
or
inc
inc
data16
negl
inc
adc
out
mov
sbb
loopne
movsl
pop
cmp
add
add
divb
pop
paddw
lahf
mov
lcall
mov
jp
inc
jmp
inc
aam
das
and
rol
pop
cs
insl
and
loopne
push
adc
cwtl
aaa
cli
rol
pop
sahf
stos
add
sub
ds
mov
xlat
push
shlb
cmp
loopne
push
popa
les
arpl
jns
lods
pusha
pusha
ljmp
jbe
ljmp
mov
inc
push
rol
bound
push
cmc
ret
add
push
pop
test
inc
push
pop
lret
pusha
and
and
fs
xor
mul
dec
fidivrs
js
cmpsb
pusha
pusha
inc
inc
mov
add
dec
mov
push
mov
ror
push
mov
adc
mov
test
imul
jns
repnz
mov
or
pusha
shrl
jno
push
and
in
out
in
add
pusha
push
das
ds
xor
fwait
rol
jg
adc
scas
dec
inc
outsl
aam
mov
scas
loopne
loop
cmpsl
int
xchg
and
rol
addb
call
dec
pop
scas
add
loope
movsb
and
stos
add
loopne
mov
inc
adc
add
xchg
jl
pusha
pusha
xchg
rclb
fbstp
mov
rol
jbe
inc
mov
mov
orb
sub
add
imul
and
addb
jno
roll
shl
cmp
adc
and
stos
das
nop
cmpsl
call
mov
jns
pushaw
loop
cmp
dec
mov
subb
loopne
fistps
es
inc
adc
mov
leave
into
lahf
pop
aaa
dec
mov
addr16
dec
pop
cld
data16
std
mov
mov
mov
in
mov
inc
sub
mov
jbe
rol
loop
xchg
pushf
iret
or
imul
rol
aas
fsubs
shll
push
and
loopne
pusha
pusha
mov
cmp
or
mov
cmp
add
and
push
addb
mov
loopne
loope
mov
in
jns
pop
add
loopne
mov
mov
addl
dec
ds
orl
addl
rcl
sub
add
into
out
inc
adc
lcall
and
fwait
mov
roll
scas
pop
xorl
sbb
xchg
jno
adc
and
xor
gs
add
sub
mov
pusha
pusha
sti
aad
sbb
lcall
dec
addb
or
data16
std
pop
in
and
sbb
and
lods
or
pop
andb
jecxz
jns
fimull
addb
add
out
adc
and
hlt
insl
lods
add
repnz
rol
leave
cmp
pop
ss
cld
andb
test
loopne
enter
pusha
pusha
mov
lock
test
inc
cmp
lcall
movsb
loopne
mov
adc
andl
loopne
sarl
loopne
xlat
cli
enter
push
mov
loop
push
js
mov
pop
icebp
scas
xchg
xchg
cwtl
outsb
fscale
test
shrb
pop
cs
inc
sbb
cli
add
push
popf
lods
inc
inc
loope
das
and
and
mov
shlb
test
sub
xor
xor
jl
xchg
mov
rol
jle
outsl
sub
shl
mov
xchg
sub
loopne
push
mov
push
jae
aaa
fwait
and
rol
dec
out
icebp
mov
rol
pushf
mov
mov
scas
addb
inc
rorl
bound
push
jecxz
mov
aas
dec
push
mov
lcall
stos
inc
stos
sarl
addb
dec
xchg
jle
mov
add
sub
outsl
mov
cmp
inc
inc
pusha
xor
or
add
movsl
mov
adc
pusha
cmp
dec
sbb
fmuls
cs
pusha
outsl
fstl
jbe
and
xor
add
aas
pushf
lret
cwtl
ja
dec
jge
movsl
lods
loope
pusha
pusha
popa
inc
mov
cltd
lods
fisttps
push
and
push
loopne
sbb
mov
andb
mov
nop
hlt
or
loopne
sub
cwtl
fsubrl
sbb
jl
rolb
sbb
mov
sub
sbb
int3
in
in
je
pop
push
andb
sbb
mov
in
adc
aam
mov
rclb
scas
rol
jl
add
addr16
jmp
cmp
shl
cmp
or
mov
test
and
xchg
maxps
jnp
add
cmp
fnstsw
add
cwtl
push
aad
dec
push
inc
xchg
inc
cld
or
pusha
pusha
popa
icebp
cmp
addb
add
push
fwait
dec
sarl
and
hlt
xor
lret
adc
dec
aad
dec
push
jge
push
inc
inc
testl
repnz
dec
mov
adc
add
ror
push
out
jge
fidivrl
mov
adc
les
addb
imul
dec
push
jnp
and
not
js
push
rolb
jecxz
mov
jle
ljmp
sbb
or
add
cmpb
add
pop
mov
sbb
and
pop
push
sub
sarl
ret
aam
and
js
int
ret
jge
jle
or
loopne
sarl
out
jge
ljmp
lods
mov
mov
pop
test
add
testl
push
stc
jg
repz
pop
pop
and
ds
fsubl
xchg
loope
jnp
push
lahf
and
imul
add
cmpsl
mov
into
lahf
xchg
aas
std
popl
push
pusha
pusha
fcomi
mov
fistpll
data16
xchg
sbb
jb
jle
pop
cmpsb
add
inc
pushf
lcall
xchg
jmp
das
adc
mov
shr
ja
subl
lds
add
inc
insl
xor
bound
mov
aaa
out
scas
pushf
cli
imul
je
xchg
cmpsl
jle
addr16
hlt
push
jae
fldcw
iret
mov
loope
or
inc
cmpsl
jo
fcoml
jge
in
mov
cmp
ss
rol
addb
jb
popa
cmp
xor
vmovsldup
int
push
loopne
mov
sub
addb
push
stc
push
push
push
jle
cmp
rorb
mov
dec
mov
rolb
fldl
ret
add
lods
add
cwtl
jge
jp
int3
xchg
cmp
jmp
js
rcrl
lahf
pop
xor
or
mov
fwait
sbb
mov
sbbl
lods
rol
mov
imul
sbbb
inc
mov
xchg
mov
cmp
or
and
shlb
lret
cmp
sub
pusha
jl
fiadds
pusha
add
and
cmc
aaa
nop
popf
fisttps
mov
enter
and
jg
inc
mov
mov
aaa
mov
pushl
xchg
or
je
movsb
add
ja
loopne
bound
xchg
lret
cmovp
jo
pop
lods
lock
cld
cmp
push
and
shrb
inc
in
cmp
fidivs
loopne
rol
xor
rolb
and
fnstsw
icebp
jl
jl
cwtl
pop
pop
pop
insb
sbb
jecxz
int3
je
loopne
xor
out
ljmp
sbb
aaa
arpl
push
daa
lock
jmp
and
pusha
pusha
push
xchg
pop
aam
ljmp
mov
xor
das
pop
mov
xchg
mov
ja
inc
scas
rol
rol
addb
mov
addb
inc
inc
icebp
push
outsb
mov
jecxz
mov
and
loopne
and
andb
mov
les
sub
aaa
or
loopne
sahf
outsl
pop
adc
xchg
push
mov
adc
ret
push
mov
loopne
std
mov
std
test
sarb
xchg
cmc
nop
lcall
rcll
fwait
pop
pop
test
shl
jmp
xchg
lahf
push
pop
das
xchg
aam
and
aad
jo
dec
lods
fisttpll
inc
inc
add
loopne
fiadds
inc
push
mov
pop
lock
xor
roll
pop
dec
pmaxub
mov
add
mov
rol
mov
xchg
loop
addb
pusha
sub
mov
mov
xchg
dec
cld
sbb
lds
repnz
add
loopne
ror
xlat
inc
sbb
add
rcrb
aad
or
push
adc
int
scas
and
mov
sahf
jmp
out
jne
add
cltd
dec
mov
sub
jecxz
cwtl
stos
mov
in
add
cld
lock
mov
lret
jo
pop
push
jecxz
imul
aaa
jl
pop
outsl
push
add
leave
mov
pusha
pusha
ret
mov
inc
cmpsb
inc
inc
ret
jp
fistl
inc
inc
adc
fisubs
aam
fildll
add
cmp
xchg
pusha
hlt
or
cs
pusha
mov
lock
add
inc
adc
lock
es
jae
iret
js
sub
into
out
inc
mov
pusha
dec
pusha
xchg
pushf
mov
push
xor
adc
pushf
push
pop
dec
ret
fildll
xchg
mov
mov
loopne
dec
jno
dec
pop
pop
and
and
and
lret
xchg
and
inc
inc
sarb
pusha
cmp
push
pop
out
inc
xchg
mov
add
jo
cmpsb
loopne
scas
add
into
push
push
pusha
pusha
cmpl
loopne
shrb
fwait
jl
rol
pop
je
and
loope
inc
lea
test
inc
js
loopne
fsubrs
lea
adc
je
cmp
add
addb
push
jae
cmp
pop
loop
out
xchg
jp
movsb
and
ret
sub
xchg
clc
jne
inc
inc
xor
xor
push
cmp
add
jecxz
andl
into
gs
pusha
and
add
add
inc
pop
and
pop
and
and
stos
addr16
pop
insl
jecxz
dec
jns
fdivrl
sub
or
mov
mov
out
cltd
inc
cmp
and
fs
inc
pop
cwtl
fdiv
addr16
dec
sub
mov
rclb
push
lret
sbb
and
nopl
jns
add
stos
shlb
add
cmp
neg
out
cmc
lods
pop
lret
sub
dec
and
add
sbb
popf
faddp
pop
mov
cld
mov
sub
cmp
or
nop
fstpl
jmp
rorb
dec
ja
mov
mov
and
add
loopne
mov
fistpl
mov
xor
cld
out
aaa
or
outsb
roll
rolb
test
arpl
sbb
and
inc
outsb
rorb
fldcw
out
add
pusha
inc
cli
jae
lcall
and
dec
ljmp
testb
daa
std
xchg
push
cltd
pop
mov
jae
lods
add
mulb
out
notl
pop
sub
loop
mov
add
add
pusha
push
and
jecxz
loopne
jl
push
mov
lret
xchg
imul
inc
sub
inc
push
pop
pop
fsubr
push
cld
push
xor
icebp
dec
push
rol
mov
add
push
add
mov
test
add
loopne
dec
or
aam
mov
arpl
dec
repz
inc
lret
xor
movsl
or
stc
cmove
arpl
inc
mov
jl
jge
repz
aam
ja
addb
inc
mov
add
pop
fcoms
lea
in
push
pusha
pusha
jmp
addb
mov
loopne
cwtl
jnp
inc
inc
jp
repz
mov
push
xor
xor
les
pusha
pusha
sub
and
adc
pushf
scas
xlat
or
add
test
sarb
rol
xchg
push
dec
scas
ja
hlt
call
scas
xchg
xchg
orl
mov
and
das
lret
xlat
adc
push
mov
sbb
loopne
lea
addb
ss
ljmp
pushf
arpl
roll
pop
addb
mov
movsb
mov
dec
adc
pop
cmpsb
and
jnp
inc
in
int3
mov
pusha
test
mov
pusha
pusha
jmp
aad
add
loopne
adc
sbbb
repnz
adc
add
loopne
test
and
inc
inc
adc
sbb
push
fildl
jl
cltd
test
out
out
inc
mov
add
loopne
inc
aas
imul
stc
sbb
addb
les
mov
hlt
imul
ss
sti
mov
ja
and
test
adc
out
or
pusha
sub
and
pusha
jmp
lahf
clc
jne
mov
inc
ja
ds
lds
xor
popa
dec
js
pop
ss
repz
stos
js
sbb
ret
adc
push
cmovle
leave
fwait
aam
add
rol
leave
outsl
je
in
push
loopne
xor
mov
or
and
outsl
imul
add
push
and
pop
out
inc
outsl
pop
testl
and
jle
lods
out
sbb
push
mov
pop
lods
inc
ficoms
push
lea
addb
lods
jg
rol
inc
jp
push
jecxz
test
add
sbb
sbbl
stos
pop
push
fmull
fdivl
movl
and
andl
loopne
rolb
inc
mov
clc
paddw
push
add
insl
cld
lret
rcl
pusha
pusha
cmc
int
mov
out
addb
inc
and
and
pop
mov
inc
popf
mov
addb
out
mov
push
and
and
loopne
fwait
std
push
and
mov
mov
cmc
fmuls
sahf
aad
mov
repnz
mov
je
shll
test
loopne
sbb
mov
xor
into
push
rol
inc
inc
adc
sahf
in
cmp
fildll
aas
jp
outsb
lret
dec
and
jbe
add
loopne
loopne
pusha
pusha
pop
adc
xor
es
dec
addb
ja
mov
mov
ret
dec
outsl
ljmp
ret
aaa
xor
rcr
aad
fldcw
shll
je
out
or
mov
leave
call
cld
add
or
add
stos
push
sarb
sub
in
fneni(8087
lret
cmp
dec
movsl
mov
loopne
cmpsl
add
sbb
dec
mov
stos
inc
push
loopne
mov
sbb
sub
xchg
rclb
mov
pusha
pusha
cmp
mov
sbb
mov
sti
mov
mov
add
pop
stos
mov
add
lret
mov
xchg
push
adc
loopne
inc
lcall
inc
mov
clc
ja
jmp
loopne
in
add
pusha
cmp
data16
xor
adc
dec
sti
shlb
xlat
mov
imul
mov
jg
pop
imul
adc
addb
mov
add
inc
mov
cmpsb
rol
fcomip
inc
dec
push
cmp
je
jno
pop
cmp
inc
inc
adc
fsubrp
adc
ds
mov
cmpsl
psubsb
xchg
push
xor
pop
push
rol
test
inc
into
mov
in
pop
rcrl
rcrl
sarl
in
test
loopne
cli
loop
xor
mov
fsts
inc
jns
cmp
sub
mov
sbb
push
cld
or
fidivrl
jno
sub
test
rcrb
rclb
sub
aaa
xchg
mov
xlat
fsts
imull
pop
fs
sbb
push
jle
xchg
add
rclb
movsl
shrl
and
cmpsb
inc
inc
pop
je
pusha
inc
mov
push
push
leave
pop
xor
xor
push
xchg
pop
pop
add
mov
adc
cmp
xor
cmpsl
and
clc
ljmp
rol
or
and
jno
fbstp
lods
test
pusha
xchg
cwtl
add
rcll
mov
and
inc
sbb
mov
aam
hlt
sbb
sub
loopne
fimull
in
mov
test
jo
in
mov
inc
mov
add
jmp
loopne
repnz
rol
inc
inc
gs
fs
shlb
pop
jno
jo
pop
gs
ljmp
cmc
sub
or
loopne
out
inc
les
dec
mov
inc
inc
outsl
push
repz
xor
xor
adc
dec
jb
sahf
fwait
jp
dec
lahf
sub
push
xchg
fisubs
inc
insb
mov
dec
stos
and
rcl
inc
mov
insl
pop
arpl
jp
cld
imul
outsb
ja
push
fs
dec
lods
cli
cmpsl
lret
ret
mov
dec
lods
rol
mov
loopne
lods
mov
cwtl
lods
cwtl
pop
xor
cmc
xor
or
js
das
xor
xchg
or
push
call
rol
and
test
add
loope
add
or
dec
data16
sarb
inc
jno
xchg
adc
aaa
dec
add
and
addb
push
repnz
mov
cmc
adc
or
fsubs
lods
in
inc
je
sub
mov
and
and
mov
lcall
inc
xor
jp
inc
notb
xchg
mov
and
daa
imul
mov
popf
lds
inc
inc
fstpt
mov
loopne
mov
mov
fs
addb
dec
jp
movsb
add
sbb
loopne
scas
add
addr16
loopne
data16
testb
xlat
cmp
and
mov
outsb
imul
mov
sbb
pusha
pusha
addb
subl
aad
inc
dec
sbb
addb
inc
sarb
push
and
xor
push
or
xchg
jae
lods
sub
add
mov
pusha
cmp
add
incb
out
mov
in
aas
pop
push
xchg
add
pusha
jae
xor
mov
dec
out
jmp
and
aad
js
fiadds
cmp
mov
test
and
push
adc
pop
test
loopne
leave
inc
add
mov
add
cmp
or
mov
inc
inc
std
pop
arpl
cltd
enter
push
and
sar
mov
and
shlb
enter
jge
push
jp
xor
shlb
and
and
add
jne
jmp
pusha
pusha
mov
and
add
xor
lcall
sbb
inc
jnp
aad
jns
bound
popa
stc
push
or
add
and
xchg
sarb
dec
and
aam
repz
cmp
loopne
popa
in
movsl
xor
sub
rol
and
jg
pop
std
inc
hlt
incb
pavgw
nop
out
cmc
scas
out
xor
leave
ss
cmp
fs
and
lea
fs
add
fmuls
loopne
mov
sub
mov
movsb
mov
pop
sbb
fldt
shr
cmp
jle
mov
jbe
xchg
stc
pop
pop
and
dec
inc
cli
and
rol
pop
outsb
sbb
decl
mov
loop
push
add
out
ret
and
inc
xchg
cmpsb
add
or
add
insb
cmp
popf
mov
out
xor
xor
and
push
das
icebp
mov
loopne
jle
mov
icebp
sub
mov
inc
cmp
and
push
dec
gs
mov
and
jge
sbb
dec
dec
jae
cld
sbb
inc
inc
mov
push
sub
cltd
add
inc
fstps
stos
mov
cmp
mov
loopne
lock
gs
xlat
scas
or
rorb
xchg
lahf
std
mov
rclb
andb
and
stc
mov
cwtl
popf
xchg
pop
into
enter
stc
lcall
das
mov
je
dec
lods
loopne
adc
mov
mov
pop
inc
iret
add
orb
mov
fistl
pusha
pusha
dec
sbb
jg
or
adc
xchg
icebp
shlb
movsl
mov
xor
lret
mov
iret
sbb
pop
inc
int
add
mov
icebp
mov
dec
or
shlb
cld
loop
adc
and
in
lcall
scas
addb
inc
inc
out
fildl
jne
outsb
mov
rolb
mov
rep
push
cmp
dec
dec
out
lds
inc
mov
cwtl
dec
testb
pushf
mov
add
jb
inc
inc
cmpsb
mov
mov
mov
loopne
xchg
add
loopne
aaa
xor
add
jno
pop
dec
shlb
inc
dec
xor
mov
cli
inc
rcr
loop
lods
mov
and
xchg
ja
dec
scas
loopne
mov
pop
mov
mov
mov
aam
sub
pusha
push
mov
xchg
loopne
cmp
inc
cltd
lret
test
sbb
addb
ljmp
inc
adc
fld
ds
daa
and
adc
mov
loopne
cmp
add
dec
and
pusha
mov
dec
pop
add
inc
inc
sti
je
stos
and
repz
lds
mov
mov
add
pop
cmpsl
push
adc
and
add
dec
rolb
and
mov
and
repnz
push
outsb
pop
add
xorb
sub
stos
mov
dec
sbb
inc
das
loopne
xor
call
imul
mov
ds
repnz
pop
aam
fs
mov
shll
daa
pop
rcll
xor
pop
ss
cwtl
xor
mov
xorb
xor
cmp
cmp
xor
loopne
negl
insl
sub
popf
pop
inc
sub
jae
mov
clc
call
ficomps
push
xor
fsubs
jns
jb
fcomip
ffree
fists
add
jg
out
and
add
dec
mov
push
iret
sub
sbbb
mov
fcoml
imull
and
push
callw
inc
inc
xchg
sub
pusha
int
cmp
push
rol
inc
jecxz
data16
and
mov
int
jae
repnz
xchg
jle
lock
add
pusha
pusha
mov
mov
mov
add
shl
adc
stos
jg
cmp
push
jp
jne
movsl
pop
call
xchg
sub
pusha
pusha
or
pusha
ja
adc
clc
mov
sbb
adc
mov
cmpsl
mov
inc
inc
jbe
xchg
adc
loopne
mov
mov
addb
xor
pop
pop
mov
pusha
pusha
shr
shrb
ja
ret
bound
sahf
movsb
pusha
pusha
hlt
es
pusha
inc
jns
cmc
push
sub
shlb
mov
xor
dec
push
loopne
jl
jno
inc
enter
ds
sub
xchg
pop
fs
jo
loop
shlb
fcom
shrl
dec
lret
imul
loopne
or
add
cmpsb
and
mov
aad
cmp
jne
xorl
inc
mov
sub
add
mov
jae
sub
add
mov
pop
pop
test
and
add
arpl
add
cmp
cmpsb
pusha
pusha
ljmp
es
dec
push
dec
pop
idivl
inc
cs
jg
loopne
je
fldl2e
pop
xor
pop
fwait
repnz
mov
mov
orl
dec
cmc
dec
jnp
imul
add
mov
sbb
and
add
mov
sbb
shlb
mov
sbb
push
enter
lods
mov
or
pusha
sbb
inc
scas
loopne
jl
sbb
cli
sbb
dec
scas
add
pusha
test
cmp
xor
pusha
pusha
xchg
mov
jno
add
jns
lds
xchg
imul
push
mov
std
dec
je
pop
int
scas
add
cmc
adc
pusha
xchg
movb
sarl
dec
or
in
dec
push
jae
mov
fldcw
idivl
pop
negb
xor
sbb
loopne
sub
add
mov
sub
and
ja
mov
shlb
and
push
push
std
test
and
and
dec
in
pop
inc
je
mov
jb
stos
add
scas
add
inc
pop
shr
mov
jb
lods
jb
out
xchg
mov
sbb
mov
and
int
add
sub
and
add
loopne
in
adc
in
mov
movsl
addb
inc
pushf
pop
cltd
ds
vmread
int
mov
add
jecxz
and
in
xchg
inc
shll
inc
cmpsb
rol
addb
pop
jnp
lea
push
loopne
xlat
sahf
lahf
and
push
int3
add
mov
cli
std
jns
movsl
cmp
sub
pop
and
xor
test
cmp
adc
cmpsb
inc
inc
test
loop
inc
inc
jb
imul
adc
xor
fsts
lock
cs
inc
mov
pusha
pusha
stos
pusha
pusha
push
dec
sub
sub
push
in
xchg
test
loopne
repnz
mov
jmp
cmp
shlb
add
rolb
movsl
pop
dec
imul
iret
imul
pusha
pusha
pop
jle
pop
lret
shlb
jnp
es
pop
lea
addb
call
imul
or
jge
loop
sbb
and
jno
xorl
sbb
cmp
inc
nop
pop
out
popf
mov
lea
das
pop
sti
push
sub
fisubrs
fwait
sub
add
pop
or
pusha
cli
fdivl
call
repz
mov
sarb
popa
test
cltd
adc
pop
push
fstl
mov
fistps
fisubs
sub
test
shlb
add
ljmp
icebp
in
loope
mov
pop
leave
pop
xor
xchg
leave
dec
sub
mov
sub
addb
sbbb
jns
and
push
pusha
pusha
daa
inc
lods
imul
andb
outsb
push
mov
xorl
test
mov
cmpsb
add
jne
mov
mov
ljmp
mov
addb
in
cwtl
int3
mov
ficoms
test
fpatan
mov
addb
pusha
mov
sarl
pusha
pusha
push
mov
rol
adc
addb
rol
xchg
scas
addb
rclb
or
rorb
rol
and
fnstsw
jecxz
repz
cmp
aam
cmp
mov
shl
sarb
rol
mov
dec
add
shlb
rolb
and
pop
outsb
fsubrs
pusha
dec
push
les
mov
and
gs
add
and
repnz
cltd
sbb
pop
mov
jno
add
out
jg
mov
jnp
pop
leave
loope
sbb
je
popf
pop
outsb
jg
adc
lock
std
outsb
and
inc
leave
test
inc
scas
pusha
pusha
enter
or
clc
jae
ret
cli
xor
push
shll
shlb
lock
sub
and
xor
sub
mov
mov
jge
rol
pop
mov
cmp
and
inc
test
and
mov
in
mov
sbb
or
dec
popf
scas
std
mov
sbb
mov
sub
mov
add
or
nop
push
out
mov
pop
xor
test
and
cltd
jecxz
add
dec
nop
adc
into
pop
shrl
inc
or
and
inc
inc
mov
or
mov
mov
sbb
xchg
push
pusha
pusha
lea
add
sbb
inc
inc
lods
mov
inc
inc
xor
mov
dec
cmc
and
add
xor
xchg
aas
subl
pop
push
push
add
mov
sub
mov
movsl
xchg
or
shlb
imul
and
add
clc
or
jl
cmp
add
subb
mov
loopne
fisttps
cmp
in
or
loopne
and
jne
jne
dec
insl
or
mov
cmp
jno
adc
xor
jmp
push
inc
inc
sar
aam
dec
inc
pushf
dec
test
rcl
int3
jle
push
ret
aas
xlat
mov
xchg
adc
inc
fnstcw
outsb
dec
aad
dec
lods
mov
fiaddl
pusha
or
mov
cs
loopne
rol
call
inc
jb
stc
and
cmpsb
loopne
xchg
and
or
pusha
mov
push
test
inc
push
inc
inc
or
loopne
cs
mov
int
nop
sbb
inc
mov
fisubrs
std
sbb
xor
xor
add
pop
jbe
mov
push
pusha
pusha
or
mov
shl
push
cmpsb
add
pop
mov
stos
pusha
pusha
pop
popl
out
bound
or
add
pusha
pusha
fwait
in
mov
or
inc
mov
addb
xlat
repz
hlt
in
xor
jae
andl
sbb
dec
sbbl
adc
mov
cwtl
retw
aaa
pop
mov
adc
mov
into
xchg
test
in
inc
jge
and
insb
mov
jge
add
mov
std
or
rclb
lret
fcomps
shrl
rol
gs
lcall
and
pusha
inc
or
and
xchg
and
mov
inc
rcrb
lret
sarl
push
ss
inc
test
pusha
pop
xchg
and
call
push
add
dec
push
test
rclb
les
xchg
inc
out
lock
repnz
xlat
lods
add
icebp
sti
aaa
pop
inc
push
loopne
sub
rcr
iret
testl
sub
rclb
addb
std
lea
into
pushf
std
packssdw
cmp
jno
fldt
fidivs
push
sub
push
add
mov
je
mov
pop
xor
sbbl
pusha
pusha
rorl
in
mov
inc
inc
push
cmp
ret
sbb
push
pop
jnp
mov
pushf
inc
mov
add
nop
jmp
xor
loopne
add
insl
mov
push
or
add
mov
inc
inc
das
gs
mov
test
and
or
inc
adc
push
rorl
and
rorb
and
mov
ret
or
scas
inc
inc
xor
dec
mov
mov
mov
aad
test
fmul
mov
loopne
push
jnp
mov
mov
xor
adc
fiaddl
or
shl
divl
es
pusha
movsb
pusha
pusha
in
ret
jecxz
sub
gs
pusha
pusha
mov
push
sahf
ficomps
cwtl
push
and
push
lea
sbb
loopne
push
mov
xchg
addl
dec
test
and
cmp
and
mov
pusha
jle
pusha
pusha
jp
cmc
int3
stc
call
fldenv
loopne
popl
jbe
fs
aas
xchg
scas
fldt
cld
sub
sarb
rcll
mov
cmp
bound
fldt
popf
pop
into
scas
pusha
pusha
andb
or
adcb
outsb
hlt
jnp
push
mov
mov
in
lahf
sbbl
cmpsl
xor
sbb
lock
add
sti
xor
inc
inc
or
jns
dec
cmp
adc
cmp
stc
loop
clc
jg
sub
imul
loopne
mov
lcall
fisubrs
inc
lock
mov
imul
xchg
ja
adc
shl
mov
sar
push
or
and
dec
ucomiss
add
inc
inc
mov
insb
or
and
mov
xor
and
lods
inc
inc
ljmp
xorl
ljmp
xchg
push
pop
scas
pusha
pusha
js
jb
pop
cmp
addb
int
adc
dec
pop
inc
jae
xchg
push
or
nop
xchg
ret
xchg
sub
rorb
test
loopne
inc
loopne
clc
bound
packssdw
or
je
loopne
xor
mov
scas
setae
jbe
push
icebp
out
or
pusha
cwtl
test
mov
jmp
cwtl
xchg
enter
rol
sub
adc
leave
cmc
or
inc
test
sub
stc
ja
rol
flds
inc
and
stos
dec
aam
ficompl
mov
les
pop
aaa
jbe
dec
pop
loopne
test
int
mov
loopne
loope
sbb
pop
das
mov
loopne
dec
push
add
or
jle
mov
pop
cmp
ljmp
pusha
pusha
push
or
loopne
cmpsb
loopne
sbb
inc
inc
movq
dec
lds
xchg
push
in
sub
loopne
outsl
adc
mov
loopne
mov
xchg
push
loopne
dec
test
inc
jae
inc
pop
push
add
loopne
jp
jnp
pop
fcmovnbe
adc
add
fildll
jno
out
sub
or
lock
aas
stos
inc
inc
imul
add
dec
lock
xchg
loopne
mov
rol
xor
shrb
inc
cmp
jns
cmp
mov
and
and
loopne
xchg
mov
sbbl
lcall
loope
rcll
add
pusha
pusha
fcompp
jp
adc
lods
addb
sub
and
jecxz
mov
in
pmuludq
aad
and
outsb
push
rolb
lods
sub
and
aas
mov
xchg
lcall
daa
add
jle
decb
sub
stc
mov
pop
hlt
les
decl
push
popf
idiv
fs
cmp
loop
inc
dec
sub
add
inc
movsb
inc
inc
nop
pop
push
lock
loopne
movnti
cwtl
xchg
and
loopne
xchg
ret
push
std
neg
ret
mov
dec
jnp
int
mov
and
addb
aad
rol
addb
enter
test
loopne
jno
leave
sahf
xchg
adc
push
inc
xlat
iret
in
loopne
shrb
mov
addb
pop
inc
jo
mov
mov
mov
lret
mov
aaa
es
fcoml
mov
loopne
rol
pop
sub
rcrb
add
psllq
rorl
add
mov
mov
dec
jge
pop
roll
mov
mov
sub
lea
add
push
mov
add
add
negl
into
mov
jecxz
nop
jecxz
pusha
pusha
pop
insb
dec
test
mov
sahf
jmp
push
out
sarb
mov
and
mov
test
add
icebp
shrb
js
out
andb
std
mov
jbe
xchg
jnp
cmpsl
repz
dec
dec
frstor
sub
add
lcall
outsb
mov
mov
cltd
pop
jne
repz
rcrl
jno
and
scas
and
stos
ret
fdivs
hlt
push
scas
bt
loopne
pop
jne
sahf
adc
pop
mov
movb
and
adc
jle
mov
stos
inc
inc
mov
inc
pop
add
loope
imul
add
pushf
adc
mov
add
mov
aam
pop
cmp
xorl
push
mov
mov
addb
cmp
das
push
jne
repnz
in
cmp
xorl
mov
in
cmp
adc
dec
push
aas
or
repz
mov
inc
sti
push
mov
pusha
pusha
xlat
lcallw
and
cmp
adc
xor
xor
jae
and
dec
mov
cltd
xchg
lods
push
dec
fdivrs
fwait
cmpl
mov
pop
xchg
add
loopne
daa
divl
fstp
iret
mov
pusha
push
and
cli
mov
pushf
shrb
jmp
mov
jns
pusha
pusha
xchg
and
fistpl
inc
jb
add
notl
pop
mov
stos
inc
adc
rcll
jbe
add
push
stos
pusha
pusha
scas
loopne
js
iret
int
jecxz
insl
ret
sbb
adc
add
xor
inc
out
xlat
mov
xchg
inc
sbb
mov
out
vaddsubpd
sbb
addb
inc
inc
pop
pop
fmul
jecxz
dec
stos
imul
les
xor
jo
loopne
shr
jb
js
jg,pt
call
out
pusha
pusha
sahf
or
add
addb
in
jb
stos
scas
loopne
pandn
rol
cmp
add
insb
sbb
xchg
or
es
insb
lahf
cmp
add
in
fdivrl
fldt
lcall
cmp
jnp
negl
std
ret
xchg
adc
jno
pusha
pusha
push
jo
mov
and
dec
add
sbb
lock
sub
mov
inc
fdivs
popf
mov
and
es
pusha
xorps
es
inc
pop
pop
dec
scas
std
bound
lds
add
inc
jle
icebp
sarl
or
add
mov
push
xor
and
inc
push
mov
jle
and
test
cmp
mov
adc
mov
outsb
xchg
xlat
adc
hlt
popf
loopne
xor
mov
test
sarb
addb
push
scas
jmp
movsb
inc
inc
movsb
rol
popf
cmc
cmpsl
pop
sbb
mov
pusha
and
add
rol
cmp
das
xchg
ds
mov
and
pusha
scas
rol
divb
mov
mov
fbstp
lret
cld
sub
xchg
loopne
inc
pop
xchg
sti
cwtl
dec
fldenv
lret
in
pop
inc
mov
rorl
mov
add
xor
sub
jbe
push
and
fiadds
and
loopne
sub
pop
mov
rol
psubw
nop
jno
mov
inc
mov
pop
inc
cwtl
mov
or
xor
add
and
ds
addb
jge
pop
jne
movsb
mov
dec
push
push
mov
fsts
inc
mov
shll
lods
idiv
push
xchg
pop
cmpl
jle
cltd
jl
add
inc
mov
in
test
jge
add
and
in
inc
cld
jae
mov
inc
shll
leave
inc
icebp
sub
and
or
loopne
xor
ljmp
fucomip
push
pop
test
pusha
shrl
rcll
sahf
pusha
cmp
loopne
repz
lock
rol
dec
les
dec
sub
fistps
fistpll
add
jns
xchg
sbb
xchg
fcmovbe
aam
xor
and
divl
inc
mov
add
rolb
inc
inc
dec
aam
pusha
xor
mov
adc
jbe
adc
aad
or
jp
sarb
dec
add
or
fisttpl
and
cli
push
mov
and
loopne
xor
jecxz
and
syscall
xor
jl
cmp
insb
andb
lea
push
mov
int3
or
add
lret
lcall
mov
jmp
pusha
in
push
jmp
stc
sub
jae
enter
js
sbb
testb
rorb
jns
xor
cmpb
scas
rol
push
mov
sbb
jnp
push
inc
inc
lcall
mov
arpl
je
cmp
out
push
dec
adc
mov
mov
clc
sbb
repz
adcl
mov
jne
andb
jge
jno
fisubrl
dec
loope
inc
inc
pop
inc
jbe
int3
and
iret
dec
add
shlb
pop
jns
or
adc
rol
mov
shrl
roll
xor
adc
sbb
add
iret
and
popl
and
icebp
jae
mov
mov
mov
jecxz
sarl
addb
lds
fildll
pusha
pusha
push
int
mov
test
inc
test
movsl
inc
sti
or
rclb
xchg
addb
sar
int3
mov
pop
mov
aad
loopne
ret
adc
loopne
xor
dec
and
arpl
cli
test
or
ret
enter
filds
lods
add
xchg
iret
stos
out
cwtl
pop
dec
aaa
mov
jbe
or
mov
add
jnp
mov
rcl
daa
ljmp
insb
stos
dec
mov
call
ror
mov
sub
inc
popa
pop
push
mov
cmp
mov
mov
addb
movsl
pop
cmp
lahf
loope
test
addb
loop
nop
pop
dec
loope
xchg
out
mov
pop
sub
into
in
sahf
lea
xor
mov
xchg
add
jo,pt
mov
inc
inc
push
lock
leave
mov
jne
and
nop
xor
lods
add
in
sahf
das
aaa
in
loopne,pn
xchg
or
and
pop
add
inc
cmpsb
mov
addb
nop
in
xchg
aaa
adc
ret
mov
jo
and
inc
or
or
test
pop
movsb
rol
adc
mov
jp
jecxz
call
lret
insl
and
hlt
xor
and
and
loop,pt
add
mov
mulb
xchg
and
sbb
jbe
mov
ror
pop
sbb
mov
aam
sbb
adc
cmc
int3
pop
dec
fldcw
lds
mov
and
pop
idivb
mov
ret
dec
cmc
pop
mov
mov
mov
and
aam
lahf
cmp
jnp
das
or
pusha
shll
mov
pop
jle
jmp
mov
std
xchg
dec
adc
bound
add
shr
ja
pop
pushf
jo
pushf
loop
aad
mov
add
sub
and
lock
popf
test
add
loopne
add
repnz
adc
or
mov
add
repnz
push
ja
aaa
mov
pop
xchg
sub
mov
fildll
rol
or
and
push
in
or
jo
add
sarl
lcall
addb
ds
orl
xchg
test
pusha
pusha
mov
xchg
in
cmpxchg8b
iret
dec
add
push
andps
xor
dec
or
bound
xchg
rcrb
and
and
dec
push
mov
push
out
or
push
xor
addb
iret
push
sub
add
pop
std
cli
mov
inc
repz
xchg
sbb
pop
out
push
dec
scas
inc
inc
shll
jecxz
mov
mov
dec
aas
inc
xlat
mov
jns
cmc
and
and
std
xor
mov
out
or
cmp
jge
je
out
xor
xchg
inc
adc
jns
inc
inc
incb
popf
repz
mov
imul
shrl
inc
inc
out
sbb
jne
sbb
loope
xchg
sbb
leave
lret
js
pop
icebp
jl
pop
sti
mov
stos
loopne
addb
pop
push
push
std
enter
and
mov
das
mov
mov
xor
rclb
or
add
addb
sub
and
rclb
jmp
addb
adc
mov
loopne
push
and
mov
loopne,pn
shrb
add
mov
pop
aas
in
insb
xchg
ja
jmp
fmuls
add
add
and
std
add
inc
xchg
loopne
push
mov
pusha
nop
cmpsl
push
imul
and
xlat
popf
sub
mov
in
push
lock
inc
add
cmp
inc
and
jne
sub
pusha
lods
pop
sub
dec
lds
addb
decb
ret
ss
push
loopne
inc
sahf
addr16
mov
and
jl
fldcw
loopne
cmp
out
mov
mov
xchg
xchg
inc
mov
imul
inc
add
pop
cld
jl
jno
and
dec
nop
xor
push
push
cs
pusha
ja
in
mov
pop
pop
movsl
xchg
andb
add
lock
out
add
mov
out
pop
fcomi
aaa
pop
jmp
or
push
mov
imul
addb
and
fcomps
inc
in
xchg
sub
jnp
inc
or
add
loope
loopne
and
xchg
cwtl
add
jns
insb
xchg
lcall
cmpsb
add
fsts
and
or
rol
mov
push
or
jmp
fistpl
scas
add
daa
push
pop
arpl
cmp
or
sahf
adc
jne
aam
pop
and
adc
loopne
sub
add
popa
aad
jns
scas
loopne
pushf
or
mov
rol
jl
fstl
mov
shrb
mov
adc
push
call
xchg
addb
pusha
pusha
dec
adc
loopne
cmp
add
jmp
roll
loopne
mov
loopne
fmulp
hlt
inc
adc
ds
add
cmpsb
mov
mov
push
repnz
arpl
mov
imul
pop
add
sbb
push
mov
hlt
mov
jp
enter
dec
push
loope
sub
and
pop
dec
lods
dec
out
dec
in
mov
add
jae
jno
sbb
test
scas
inc
pop
pop
sub
and
je
jne
sahf
imul
add
xor
sbb
mov
cmp
xchg
into
je
xor
or
leave
xor
fidivl
cmpsb
addb
and
cwtl
andb
xchg
jmp
rol
xchg
clc
daa
sbb
loope
stos
add
jns
addb
icebp
or
mov
and
jbe
call
xlat
sahf
xchg
ret
pop
xor
icebp
idivb
mov
stos
ds
add
fdivs
sub
push
addr16
sub
mov
add
rclb
and
outsb
add
dec
cmp
xchg
rolb
add
cmp
int3
mov
add
mov
add
imul
pop
imul
jge
mov
dec
add
clc
inc
test
pusha
push
das
inc
xchg
jg
jb
adc
out
cmp
fcmovne
mov
aaa
and
shrb
ss
adc
test
dec
cmpsb
and
pop
hlt
cmpsb
add
rcrb
inc
in
mov
and
ss
sub
jae
pushf
add
adc
nop
pusha
pop
in
lcall
adc
iret
or
loopne
test
shr
jae
push
inc
and
inc
cmc
test
addl
cmpsl
pop
test
push
or
mov
repz
sahf
fiadds
jae
jb
aad
lahf
push
add
pusha
or
inc
inc
ljmp
push
test
cmp
pushf
jg
stos
inc
inc
mov
xor
cs
pusha
lock
add
cwtl
sbb
mov
addb
addb
xchg
xchg
or
mov
add
fwait
rorl
pusha
pusha
add
stos
add
sbb
add
test
sbb
lock
inc
jno
xlat
les
call
addb
loopne
push
pusha
pusha
adc
lret
call
pusha
insb
shr
mov
sbbl
mov
inc
push
bound
stos
push
mov
sub
xchg
pop
fsubrs
pusha
pusha
inc
and
sub
loopne
fdivl
sub
loopne
adc
mov
mov
shlb
in
popa
jl
in
add
scas
mov
decb
jecxz
pusha
pusha
roll
mov
jne
les
test
rclb
and
mov
ljmp
xchg
cmp
mov
dec
mov
stc
inc
adc
jmp
inc
andb
sub
rcl
filds
mov
and
xor
adc
addb
ljmp
pusha
xchg
insl
daa
fisttpl
mov
sub
and
and
rol
dec
lret
rolb
pusha
mov
mov
rol
mov
lret
dec
push
cmp
lds
mov
push
mov
andb
dec
test
aas
cmpsl
cmc
jmp
and
insl
andb
push
sub
aaa
jge
shlw
or
loopne
std
test
inc
inc
std
mov
jns
or
fcmovne
add
shll
pop
or
or
xchg
xchg
mov
flds
repnz
adcb
ja
inc
inc
cmc
xlat
das
out
das
jge
outsl
xchg
test
mov
sub
mov
rol
inc
xor
ljmp
dec
xchg
andl
and
lds
test
mov
inc
out
sub
ss
loopne
pop
mov
pusha
outsb
cmpsl
cmc
cmp
mov
jge
je
imul
lcall
mov
sub
mov
add
fcmovne
pop
dec
sbb
cmp
push
pop
je
dec
out
pop
lock
aaa
sub
addb
jg
xchg
add
or
shll
lea
add
adc
ljmp
xchg
lret
rol
pushf
or
loopne
cmpsl
loope
dec
js
xchg
das
mov
frstor
leave
inc
out
add
xor
es
mov
loopne
leave
in
push
aad
addb
pop
and
mov
sub
jge
xchg
inc
nop
mov
int
pop
inc
and
pusha
jo
inc
rcrl
pop
dec
insl
push
and
arpl
push
lret
pusha
jne
sub
mov
out
xor
jmp
add
jnp
lea
xchg
lock
and
mov
loopne
imul
sbb
xchg
or
ja
jp
mov
stc
stc
or
lds
lea
cmp
add
xchg
loopne
inc
popf
mov
nop
or
jb
addb
fwait
adc
aas
lahf
adc
pusha
pusha
pusha
idivb
maxps
push
sysret
push
ljmp
cmpsl
push
pop
int3
shrl
imul
mov
mov
addb
rol
and
sub
loopne
lods
jno
mov
rorl
inc
inc
mov
cli
xor
pop
push
pop
ljmp
ljmp
mov
or
jge
sbbl
iret
cmpsb
inc
inc
pop
xchg
movl
loope
push
xchg
mov
and
and
pop
push
arpl
dec
cwtl
fucom
sub
in
push
test
inc
mov
addb
jo
dec
add
loopne
adc
and
mov
int3
cmpsb
and
loope
mov
imul
mov
push
pusha
pusha
addb
lods
mov
push
cmc
cli
mov
xor
pusha
pusha
pop
sbb
loopne
mov
add
add
sbb
mov
fadds
pop
xor
and
add
out
dec
fs
mov
imul
inc
inc
push
dec
movsb
and
aaa
push
pop
dec
and
and
in
int
add
xchg
adc
mov
jb
dec
stos
rol
pusha
pusha
movb
shlb
jecxz
enter
push
pusha
pusha
or
and
repz
and
add
fcmovnb
lret
sub
pop
dec
mov
scas
inc
inc
pop
adc
mov
mov
mov
cmpsb
mov
and
shlb
mov
shll
test
loopne
fwait
adc
add
dec
repnz
cld
scas
cmp
mov
pop
inc
icebp
mov
pop
sub
cld
fmuls
out
mov
sub
stos
mov
xchg
push
or
lret
push
pushf
add
shr
scas
pop
pop
std
mov
xor
add
roll
loopne
mov
test
enter
cwtl
jns
inc
inc
aaa
ret
mov
addr16
push
into
into
or
lcall
and
lcall
shlb
mov
sbb
mov
lods
push
add
outsb
jno
out
hlt
add
cmpb
daa
xchg
loope
or
sbb
dec
jns
xor
addr16
test
mov
addb
mov
add
addb
pop
jmp
cmpb
xchg
push
imul
jae
sahf
inc
fldl
xchg
dec
mov
mov
out
adc
rorb
jle
nop
xchg
popa
gs
fisttps
pop
mov
or
pusha
xor
and
cmp
fildl
mov
jmp
jb
pop
xor
pop
jns
setae
inc
mov
andb
push
sub
mov
addb
and
subb
xlat
ljmp
cmp
mov
inc
daa
faddp
add
les
fiaddl
test
mov
pop
shlb
stos
cmpsl
or
loope
push
add
movsl
xchg
sbb
mov
xchg
fwait
inc
out
xchg
or
pusha
push
mov
ret
fdivrl
mov
jmp
add
mov
lret
clc
gs
repnz
clc
nop
inc
loop
std
jnp
mov
jp
cmpsb
rol
addb
ds
outsl
cli
sbb
loop
in
or
add
mov
aam
jle
inc
cmp
dec
call
xchg
xor
lds
sub
subl
loopne
push
xchg
aas
rcr
jecxz
or
and
rol
adc
mov
pop
je
inc
push
jge
inc
call
mov
mov
and
dec
mov
fwait
adc
xor
inc
ljmp
jo
stc
sbb
rol
addb
pushf
push
cltd
dec
xor
ror
js
and
loopne
loopne
or
out
xchg
lea
pop
mov
fldl
xor
and
loopne
scas
mov
pushf
jns
mov
test
enter
mov
add
addb
mov
or
xchg
jno
lret
mov
subb
xchg
loopne
outsb
and
jle
dec
das
mov
mov
jmp
inc
mov
dec
aaa
xchg
aaa
mov
mov
and
and
and
add
add
dec
out
xor
xor
add
mov
mov
pusha
add
sbbb
jl,pt
mov
outsl
lock
mov
sti
pop
int
ret
inc
rcr
repnz
mov
lret
dec
push
mov
add
rolb
loopne
jl
cmpsl
aam
lcall
je
jo
shll
cmpl
nop
sub
inc
loopne
cmc
in
imul
rcl
scas
inc
inc
hlt
jns
scas
sub
lea
std
xchg
ret
or
addr16
outsl
mov
xchg
xor
mov
in
jmp
imul
rol
add
imul
addr16
loop
icebp
enter
mov
fiaddl
cwtl
adc
das
in
lret
out
add
mov
test
repnz
dec
adc
xor
sbb
stos
pusha
pusha
mov
in
cwtl
pop
xchg
adc
movsb
pusha
pusha
scas
loopne
out
sub
pop
dec
dec
fsts
shrd
mov
cmpb
pop
ds
add
push
addb
mov
orl
loopne
lcall
jbe
sbb
loopne
cli
scas
addb
cmp
cltd
popa
js
pop
fildl
lret
lods
nop
xchg
in
mov
pusha
rcl
ficompl
cmp
fwait
cmp
mov
and
adc
rol
addb
sub
rol
fimuls
and
jbe
lret
and
loopne
lret
in
and
xor
jge
push
and
cmp
jecxz
cmpsl
push
mov
vpaddusw
xor
pusha
pusha
and
in
lret
push
pusha
pusha
sbb
shlb
nop
out
push
decb
sbb
or
shlb
ret
rol
out
cld
and
and
inc
sub
inc
out
cwtl
lcall
push
jle
add
rclb
and
shlb
shlb
jecxz
add
add
test
dec
dec
mov
shlb
imul
fs
cmp
xchg
lds
add
movsl
aad
inc
adc
add
fildll
ljmp
gs
cwtl
cmp
jge
es
add
stc
inc
incl
test
sub
and
mov
add
mov
rol
roll
add
fmuls
pusha
pusha
mov
inc
inc
test
xorb
jecxz
or
pusha
repz
push
testb
sbb
inc
sarl
push
pop
loopne
rcll
adc
or
out
ljmp
inc
mov
sarb
xchg
jno
les
xor
pop
ja
pusha
pusha
xchg
aam
lahf
mov
and
dec
addb
pop
in
dec
and
test
loopne
sub
add
test
mov
inc
inc
mov
leave
imul
push
and
mov
or
rolb
test
and
push
pop
mov
cmp
int3
inc
push
sbb
shl
decb
pusha
pusha
out
mov
jg
pop
mov
sub
pusha
add
dec
jnp
icebp
aad
xor
and
test
and
inc
inc
ja
repz
fwait
sbb
loopne
jnp
scas
pusha
pusha
stc
jp
and
jb
mov
loope
mov
mov
cwtl
and
pop
and
mov
rol
pushf
scas
into
and
fwait
out
add
xor
adc
and
push
and
dec
loopne
sbb
stc
adc
fbstp
pop
and
orb
jecxz
sahf
xchg
lods
lret
and
and
xor
jmp
sbb
adc
out
lds
jl
xchg
push
in
out
gs
push
pushf
imul
addb
jns
rol
imul
call
stos
and
popf
fdivrs
and
lods
lcall
sti
adc
clc
test
icebp
arpl
addr16
fstps
pop
sub
loopne
add
fisubs
add
dec
push
in
xchg
lods
rol
inc
inc
mov
mov
and
popf
push
pusha
pusha
cmp
and
lods
rol
stos
loopne
insl
idiv
xchg
inc
notl
lods
out
inc
inc
jp
inc
inc
ss
iret
pop
mov
adc
add
push
add
sub
mov
mov
and
addb
mov
dec
add
loopne
and
and
inc
jne
loop
or
sbb
push
push
and
mov
rorb
or
loopne
add
rclb
add
pop
arpl
in
into
and
mov
aas
jmp
rol
push
mov
dec
test
push
push
and
pusha
push
or
and
rcrl
and
add
add
lahf
mov
stos
inc
int3
jno
cld
fwait
iret
lds
sbb
fisttps
mov
cmp
andb
mov
sub
adc
dec
popf
mov
repnz
mov
loop
pop
sbb
sbb
test
xchg
into
xchg
xor
xor
aas
rcrb
xor
aad
push
inc
inc
mov
add
dec
je
lds
cmpsb
addb
xor
sbb
orb
stos
mov
lcall
mov
dec
out
cmp
inc
loope
mov
mov
rcrb
sbb
cmp
sarl
scas
outsb
iret
stc
pop
hlt
test
sub
pusha
pusha
sbb
mov
ja
dec
int
add
into
push
arpl
fcoml
lock
nop
fs
and
mov
sub
and
and
xchg
out
sbb
fcmovnu
cwtl
sahf
lahf
mov
rol
and
imul
sbb
lds
mov
and
add
xlat
rorb
or
shlb
int3
ja
rclb
ret
inc
adc
add
aas
xchg
inc
movsl
test
xchg
fimuls
cmpsl
bound
xchg
cmp
or
add
dec
mov
push
pop
jg
push
mov
push
xlat
sarb
data16
fwait
loope
add
mov
int3
jne
and
andb
je
shr
xchg
int3
icebp
sub
iret
andb
sbb
push
out
push
pop
sahf
adc
pop
jns
dec
in
lret
addb
sub
add
mov
sbb
mov
mov
mov
sbb
addb
sti
or
xchg
shll
inc
cltd
adc
pop
imul
sub
fadd
push
pop
stc
or
loopne
jg
neg
cmp
jp
or
loopne
cli
idivb
aas
scas
and
addb
add
cmpsl
pop
int
addb
rol
outsl
pop
scas
inc
inc
add
and
leave
pop
sti
sbb
call
rcrl
iret
decb
cmp
fdivrl
push
mov
add
sbb
inc
dec
mov
add
dec
push
and
pop
mov
lahf
xlat
mov
inc
pop
loope
jbe
hlt
sbb
pop
in
add
fs
add
pusha
cltd
ds
nop
jmp
lret
xchg
repnz
mov
jo
in
stos
mov
in
or
out
loopne
mov
cmpsb
loopne
test
add
pusha
or
ror
cmpsb
inc
inc
pusha
mov
cmp
nop
inc
push
push
cltd
inc
inc
lock
stc
push
adc
hlt
rcl
ljmp
mov
loopne
jmp
pushf
test
adcl
mov
inc
mov
imul
addb
mov
and
pop
insb
cmpsl
into
mov
and
nop
inc
insb
xchg
jae
xor
jb
test
add
movsl
lea
addb
loopne
aas
out
scas
rol
rolb
loop
sbb
rol
dec
jo
dec
outsl
shrb
xor
sahf
aas
adc
xor
mov
int
and
addb
dec
shlb
leave
stos
dec
xor
mov
jle
push
lods
addb
and
push
loope
stos
add
mov
mov
push
mov
aaa
mov
cwtl
es
mov
cs
pusha
pusha
fildl
and
sbb
int
mov
popa
sarb
cmp
ljmp
and
mov
add
inc
inc
inc
mov
cli
add
inc
jl
ja
mov
inc
xchg
pop
xchg
xchg
aaa
mov
cmp
inc
inc
out
xchg
xchg
das
scas
rol
inc
inc
jle
loop
test
sarb
test
mov
add
test
adcb
sub
mov
outsb
inc
mov
divl
push
jl
push
sbb
jbe
cmpl
xchg
push
cmp
stos
mov
sbb
and
mov
rol
pusha
pop
add
mov
js
test
and
mov
js
fidivrl
aaa
mov
cmp
xor
mov
sti
mov
mov
inc
das
mov
outsl
add
rclb
xchg
pop
push
add
rol
cwtl
push
sbb
lret
sbb
vcvtpd2psx
push
mov
popf
xchg
xor
and
daa
inc
mov
push
loopne
in
add
shrl
int
xchg
mov
jno
test
cmpsb
mov
cmp
rol
xchg
pop
jle
movsl
xchg
jb
testb
movsl
jbe
sub
mov
rol
addb
loopne
mov
test
cmp
das
addb
and
sbb
mov
call
adc
loopne
cmp
mov
clts
rol
mull
pusha
pusha
jp
repnz
pop
inc
pop
push
addb
loopne
rol
push
rol
insl
push
bound
add
test
imul
sub
mov
dec
sub
mov
stc
dec
mov
add
inc
inc
imul
fwait
in
incb
leave
lcall
jmp
inc
inc
jns
xor
pop
iret
fwait
mov
xor
xchg
loopne
out
fidivs
adc
out
mov
jecxz
sahf
cltd
xchg
popa
lea
aam
and
xor
sub
ret
das
rcrl
mov
adc
adc
push
mov
jecxz
cmp
inc
push
sub
mov
loopne
sbb
adc
cmpsl
ds
test
push
xchg
sahf
popa
pmullw
lcall
stos
mov
and
add
rol
adc
pusha
pusha
push
test
mov
pop
adc
add
pop
and
add
and
jmp
out
shl
mov
ja
inc
add
rolb
loopne
clc
sti
sti
mov
loopne
jb
add
mov
inc
push
pusha
pusha
ret
dec
and
aad
outsb
gs
dec
jnp
sub
sarb
mov
mov
cmp
sbb
into
loope
dec
inc
mov
int3
push
lea
add
iret
push
loopne
push
addb
pusha
pusha
pop
and
rolb
mov
pop
xchg
lods
and
call
divb
mov
rclb
or
add
pusha
xchg
add
inc
test
pusha
mov
dec
mov
mov
shl
addb
pop
mov
in
pop
fmuls
adc
rol
insl
jo
imulb
loopne
cmpsb
loopne
enter
ror
or
loopne
das
in
mov
and
mov
sub
mov
and
and
shl
xchg
pop
mul
in
mov
cmpsl
jbe
scas
loopne
push
sub
add
pop
fwait
adc
jne
inc
inc
out
and
jns
loop
cli
andb
sbb
mov
ja
dec
mov
sbb
imul
add
rclb
lahf
lret
fdivl
cmp
fsubp
test
loopne
mov
addb
jbe
xor
addb
aad
das
mov
ret
push
add
fwait
mov
dec
cmpsb
rol
mov
rol
loopne
int3
cmp
jns
jns
mov
cmp
mov
mov
inc
inc
mov
test
popf
inc
xchg
sub
rcrb
pusha
pusha
sub
sbb
pusha
mov
jb
dec
sbb
out
mov
test
add
loopne
rol
pop
or
and
adc
mov
shlb
jb
in
mov
aaa
ss
cmp
and
ss
xor
cmp
loopne
mov
and
inc
and
xlat
jne
cli
dec
add
add
pop
ljmp
fimull
pop
movsl
add
sahf
movsb
and
add
rclb
idivl
addb
movsb
add
into
and
mov
dec
ret
push
fmull
cmp
cs
inc
dec
xor
jo
leave
mov
and
and
and
sub
and
jne
inc
sub
and
add
sbb
in
push
and
jns
and
jae
rorb
pusha
xor
dec
sti
jl
cmp
mov
push
mov
daa
jns
adc
jbe
hlt
out
outsb
inc
sub
lret
rcl
pusha
pusha
andb
addb
jne
mov
xor
sbb
inc
inc
cmp
ljmp
inc
inc
inc
test
sbb
push
insl
enter
cmpsb
loopne
aaa
ds
jnp
mov
and
fmuls
xor
fwait
popa
mov
xchg
inc
or
out
outsl
mov
xor
cmp
mov
call
pushf
ret
sbb
ret
cmpsb
loopne
call
je
and
ja
jo
lods
push
fidivrl
xor
adc
jg
add
addb
sbb
add
shlb
mov
aam
jno
mov
pop
out
and
inc
aas
std
inc
popl
in
arpl
lds
dec
loope
ja
cmp
pusha
pusha
and
rorl
cmp
adc
mov
lods
rol
cmp
inc
jae
loopne
pop
dec
cmp
negb
pop
mov
sub
add
add
and
mov
loopne
fnstcw
lock
fildl
insl
pop
addb
mov
mov
push
ja
loopne
xor
push
sbb
pop
dec
push
push
pushf
sar
mov
loopne
and
pusha
push
call
jl
jle
data16
pusha
pusha
xor
ja
push
out
icebp
xchg
out
outsl
repz
adc
jp
and
dec
sbb
and
and
mov
mov
dec
push
push
xchg
add
jl
and
cmp
xchg
add
mov
stc
fidivs
fdiv
mov
js
inc
inc
aam
inc
ja
testl
adc
push
inc
inc
jecxz
cmpsb
pusha
pusha
in
out
test
inc
sbb
and
or
shlb
rol
ds
test
mov
push
ret
rcll
dec
mov
mov
shlb
loopne
sbb
jle
bndldx
sbb
mov
push
sbb
hlt
int3
sbb
pop
push
mov
shl
scas
mov
push
adc
inc
addb
hlt
cwtl
dec
imul
mov
inc
xor
xor
sbb
mov
ja
addb
cmpsb
rol
xchg
mov
adc
xor
adc
pop
test
add
pop
or
sahf
sub
sub
mov
add
add
add
cld
pop
stos
int
pop
aad
and
aas
push
cli
mov
xchg
gs
mov
jb
js
and
push
inc
inc
ret
mov
mov
pop
and
add
lret
push
jne
mov
addb
mov
pop
xchg
dec
test
test
inc
sbb
sub
ja
cmpsb
pusha
pusha
xlat
adc
loopne
push
in
pop
add
inc
dec
jae
xor
and
loope
mov
jg
xchg
hlt
sbb
cmp
cmpsl
shl
filds
mov
roll
mull
and
and
mov
loopne
add
jb
mov
or
adc
loopne
mov
add
pavgb
js
push
std
iret
cmpsb
inc
inc
jae
lret
sahf
cmpsb
inc
inc
cmp
loopne
lahf
inc
push
clc
sub
and
ret
pop
or
rolb
ret
push
sar
mov
outsl
rorb
out
inc
test
loopne
jnp
pop
into
enter
addb
loopne
or
mov
xchg
inc
pop
jp
adc
cmpsb
inc
inc
sahf
std
add
loopne
popa
clc
xorl
int3
jb
addb
sbb
jg
sbb
cltd
into
mov
xchg
xchg
push
and
aad
negb
scas
adc
inc
inc
je
xchg
dec
pop
ds
in
sub
xchg
sahf
fnstsw
mov
insl
inc
dec
andb
rcr
cmpsl
or
inc
fwait
add
sti
xor
push
xchg
loope
pop
cmp
inc
mov
xorb
mov
mov
mov
cmpsl
into
mov
xchg
and
mov
jg
out
in
push
bound
loopne
mov
fistl
in
scas
xchg
mov
add
lods
fnsave
dec
out
add
loopne
test
pop
stc
loope
out
cli
fcompl
addr16
or
mov
and
loopne
add
inc
inc
testl
sub
mov
loopne
sub
adc
dec
repnz
rclb
add
xlat
mov
ret
pop
shll
mov
loope
dec
pusha
push
call
xchg
push
xchg
and
sahf
out
add
add
add
lds
out
push
inc
inc
std
vminpd
sub
xorb
mov
cmc
mov
dec
jl
pop
mov
jmp
test
inc
out
and
mov
and
out
adc
pusha
out
pushf
testb
fdivrs
jge
icebp
cmp
rol
out
out
pop
fdivs
sub
add
push
test
add
inc
jmp
scas
loopne
xchg
movd
leave
pop
addb
scas
inc
inc
test
icebp
loopne
push
das
fwait
push
mov
mov
rcrb
pop
in
aad
pusha
pusha
and
inc
sub
pusha
pusha
mov
jne
xlat
jmp
rcl
aas
addr16
rsm
mov
and
push
inc
in
popa
push
pop
jne
mov
sar
daa
int3
inc
jb
sub
cwtl
jp
jmp
or
ficoms
aad
adc
loopne
rorb
pusha
fnsave
xchg
imul
adc
fidivrl
cmpsl
jo
jno
rcll
cmp
xchg
fnstcw
popf
push
lret
mov
and
xchg
cmp
dec
add
sbb
lods
mov
mov
mov
add
adc
jbe
cltd
xor
mov
add
out
fldt
pusha
pusha
mov
mov
loopne
mov
push
pop
jns
add
jb
cmp
pusha
jp
cmp
lock
pop
and
and
pop
insb
jb
addb
sbb
or
mov
rcrl
stos
add
pusha
add
loopne
mov
sub
and
pop
repz
loopne
mov
adcl
movsl
cmp
dec
mov
shlb
loopne
add
add
jno
jae
rcr
adc
inc
inc
cltd
rcll
sbb
sub
inc
push
loopne,pn
loope
mov
pop
clc
insl
ds
pusha
add
fbstp
out
hlt
sbb
sub
dec
or
add
lret
mov
or
cmpsl
test
dec
aad
push
int3
xchg
ljmp
ljmp
xor
jp
clc
aaa
enter
hlt
movsb
addb
and
les
mov
nop
and
outsl
mov
push
mov
stc
jge
sub
adc
cmp
outsb
mov
fldcw
mov
jmp
and
sbb
xchg
sarb
loopne
ficomps
rcl
adc
mov
dec
xchg
push
mov
xchg
mov
outsl
imul
mov
loopne
aam
movd
loopne
adc
add
pusha
loopne,pn
js
jg
mov
movsl
shr
jae
prefetchw
stos
mov
sub
mov
rcl
stos
mov
or
and
ja
dec
jge
or
and
add
jnp
stc
push
dec
cwtl
test
loopne
mov
aad
inc
inc
xor
loopne
aam
addb
hlt
bound
add
daa
cltd
xor
rcrb
icebp
loop
pop
add
inc
cmp
mov
pop
mov
and
xchg
loopne
pop
adc
in
ja
push
rol
ret
hlt
inc
test
cltd
mov
mov
data16
lret
push
sub
imul
sbb
repnz
and
inc
mov
cmp
or
loopne
xchg
inc
push
ds
test
lock
push
adc
popa
mov
sbb
dec
mov
inc
pusha
cmp
imul
lret
xchg
sbbl
lock
inc
inc
ds
add
data16
mov
cmc
mov
gs
pusha
pusha
adc
and
rcrl
cmp
dec
and
inc
rcll
push
dec
bound
mov
sbb
jecxz
cmpsl
mov
fadds
por
mov
jp
mov
int
inc
inc
out
les
bound
sbb
test
lods
pusha
pusha
and
loopne
jnp
aam
dec
push
jge
and
or
test
loopne
stos
mov
psubd
loopne
aad
cltd
daa
mov
addb
push
insb
xor
and
or
inc
jmp
add
mov
cmp
mov
call
leave
add
aam
pop
and
add
sbb
push
pusha
pusha
fsts
push
sub
loopne
push
loopne
insl
out
pop
inc
push
sti
xlat
and
inc
aaa
loope
pushf
adc
pop
mov
lds
mov
mov
cmc
mov
jl
xor
movsl
mov
pop
or
shlb
fsubl
das
pop
movsl
inc
cmc
pop
and
jg
xchg
loopne
xlat
inc
push
dec
inc
lret
inc
sub
inc
inc
icebp
aaa
scas
mov
insb
xor
jle
sub
push
xchg
cwtl
rep
shrb
shl
push
out
shlb
arpl
or
in
rorb
jae
rol
lods
mov
xchg
repz
dec
xor
and
and
adc
push
loop
in
pop
jns
loope
cmp
es
push
gs
jecxz
in
or
push
xchg
lock
loopne
mov
xor
stos
jmp
sub
sbb
jne
addb
pop
jns
push
mov
or
add
push
push
neg
lahf
ret
in
sub
mov
xlat
sbb
iret
mov
lock
inc
hlt
mov
loopne
addb
lods
cmc
xchg
int3
sahf
fwait
inc
mov
pop
add
and
and
xor
rclb
mov
mov
lret
test
adcb
inc
or
mov
loopne
rcl
mov
dec
insl
jle
add
clc
mov
inc
lea
inc
and
mov
sub
inc
jmp
sub
add
jns
xchg
shl
lods
loopne
clc
xorl
mov
neg
mov
add
xor
mov
push
push
out
dec
fisttpll
ret
sbb
out
inc
inc
inc
mov
pusha
pusha
mov
sbb
ror
pop
push
adc
loopne
daa
sbb
aas
ja
mov
imul
mov
rcrb
mov
pushf
aad
cmc
mov
repz
cmpb
and
xlat
fisubrs
add
mov
ljmp
test
cmc
sbb
fbstp
orl
jbe
imul
stc
and
sbb
and
xchg
stos
xor
in
notb
cmpsb
addb
test
and
and
int3
jae
mov
adc
mov
and
test
aaa
jmp
or
call
fistl
sub
loopne
sahf
stos
mov
stos
mov
mov
or
and
lock
or
rolb
loopne
xchg
and
test
adc
cltd
cmpsl
pop
or
xchg
jp
out
pop
aam
sbb
xchg
or
inc
jle
rol
cmp
adc
jne
push
lahf
aam
sub
shrb
mov
mov
loopne
or
inc
jns
imul
inc
cmp
rol
add
in
jb
shrb
imul
inc
ror
xor
scas
pop
fistl
andl
cmovle
or
pop
push
pop
jp
fwait
pop
sbb
gs
rol
movsl
int
inc
and
fcomps
pop
in
or
mov
cmp
inc
inc
insl
arpl
dec
daa
aaa
push
in
mov
inc
and
jmp
cmp
xor
fadd
in
rorb
cmpsb
loopne
mov
cwtl
sbb
jecxz
cmp
inc
inc
jbe
test
mov
sbb
xor
inc
jge
repz
push
and
fs
adc
es
inc
cmp
into
lret
and
dec
and
mov
and
add
mov
or
and
adc
push
mov
adc
or
addb
lret
into
cmp
fistl
add
lock
cmpsl
or
add
lahf
sub
inc
mov
aam
mov
out
add
in
addl
xchg
push
mov
xor
push
and
mov
mov
xor
test
in
cmp
jns
push
mov
xor
cltd
sub
rolb
mov
sbb
ljmp
cmp
jae
and
xchg
xor
dec
cld
das
call
mov
mov
jmp
add
loopne
popf
pusha
dec
inc
jae
pusha
lock
pusha
sbb
mov
pushf
cmp
push
test
pusha
add
and
in
or
mov
fwait
lods
pusha
pusha
mov
inc
push
xchg
jp
out
jbe
leave
imul
xchg
faddp
jp
mov
dec
das
xchg
mov
adc
xor
cwtl
mov
mov
iret
int3
shlb
lahf
fsubrl
jb
mov
iret
insl
or
add
mov
adc
das
mov
mov
cmp
xor
int
loopne
cmc
xchg
or
and
xor
fs
iret
mov
and
je
xchg
mov
add
in
insl
in
mov
stc
int3
xor
xor
repz
cltd
bound
ds
dec
pusha
adc
xor
and
lods
mov
and
mov
dec
imul
test
sbb
mov
insb
loop
sarb
aam
test
jnp
jp
fsts
call
shlb
inc
inc
and
insb
lret
push
mov
inc
mov
dec
xor
iret
mov
add
jecxz
popf
fnsave
and
mov
or
shlb
subb
movsb
mov
addb
xorl
inc
jno
fcmovne
push
and
pusha
pusha
ja
pop
scas
in
inc
xor
clc
and
imul
pop
cwtl
nop
sub
imul
ljmp
mov
sbb
jl
addl
adc
adc
mov
sub
loopne
std
mov
cltd
sub
xchg
loopne
xchg
loopne
dec
sbb
out
mov
loopne
add
jo
loope
push
stc
add
and
xchg
inc
clc
dec
fcmovne
mov
inc
mov
ret
mov
and
mov
addb
jle
mov
loopne
movsb
add
out
mov
add
pop
js
mov
add
stos
pusha
pusha
ja
repnz
idivb
je
jp
aam
es
jle
aam
sub
and
inc
xchg
xlat
ficoms
out
cmc
push
adc
jmp
cltd
jl
pop
mov
dec
cmp
lahf
dec
iret
loop
popa
ds
orl
loopne
popf
sub
and
iret
mov
add
out
and
mov
jb
pusha
pusha
clc
cmp
notl
insb
lds
inc
and
add
push
add
jecxz
push
movsl
and
pusha
xchg
fs
imulb
std
clc
inc
cwtl
test
pop
das
jbe
sub
sub
inc
icebp
cld
ficoml
into
mov
and
flds
addb
incl
ror
ljmp
cs
inc
jmp
mov
lock
pop
mov
rorb
pusha
mov
sub
fists
mov
cmpsl
aam
mov
addb
inc
mov
mov
mov
xor
pusha
xor
push
inc
add
or
pusha
adc
in
pop
mov
inc
shl
enter
xor
mov
adc
inc
inc
adc
inc
jge
pusha
pusha
add
dec
xchg
rol
ljmp
les
mov
in
or
loopne
mov
mov
dec
stos
rol
loopne
test
add
je
sahf
inc
rcll
movsb
mov
mov
and
rorb
and
inc
lds
in
enter
and
xorb
stc
jo
inc
inc
mov
or
addb
andb
mov
inc
inc
cmc
imul
pusha
cmp
hlt
jmp
xchg
fisttpll
addb
rol
xchg
iret
fmuls
adc
out
sti
push
loopne
lret
imul
les
testb
and
rol
insb
out
insl
xchg
ret
mov
mov
inc
push
xor
jns
jg
mov
pop
lcall
add
arpl
iret
mull
pop
test
mov
and
dec
pusha
pusha
rolb
add
clc
jp
shl
fdivrl
jae
addb
adc
add
sbb
push
pop
sbb
adc
xchg
mov
and
addb
add
rol
adc
pop
in
clc
push
inc
stos
dec
cmp
mov
and
and
mov
test
loopne
insl
xor
loopne
or
mov
add
and
add
shlb
ljmp
jge
in
push
mov
jecxz
fs
test
add
inc
jns
mov
jnp
imul
inc
adc
out
adcl
leave
or
into
xchg
addr16
mov
ljmp
sub
into
push
stos
adc
lret
add
in
fiaddl
jnp
push
test
and
dec
mov
in
cmc
out
mov
hlt
mov
push
aas
jb
mov
and
adc
pop
mov
insl
push
inc
add
mov
addb
xor
addb
mov
in
dec
ret
cmp
lahf
lret
arpl
insl
test
loopne
jmp
call
and
and
js
addr16
or
mov
loope
out
xchg
add
insl
add
xchg
inc
jle
test
pusha
inc
add
adc
and
jmp
and
pusha
mov
je
jl
mov
pop
xlat
jle
pop
xchg
outsb
mov
xchg
out
in
push
pop
xor
scas
ja
data16
in
jl
mov
and
inc
inc
inc
or
add
jmp
loop
ret
insb
test
push
test
inc
arpl
mov
icebp
xchg
xchg
stc
lds
das
lahf
dec
pop
ss
or
add
sbb
add
cld
das
shll
adc
jmp
pop
add
ror
into
cli
mov
fdivrl
inc
mov
lcall
rcrb
add
pushf
or
inc
fisubs
jmp
jl
or
xchg
nop
cltd
rorb
xorl
in
arpl
test
arpl
push
notb
mov
push
shl
mov
add
push
jg
fmul
test
sbb
pusha
pusha
lds
stc
inc
push
inc
fs
add
imul
cmp
xlat
inc
push
imul
pusha
adc
xor
jge
adc
fcmovnbe
jge
mov
out
or
dec
and
rcrb
sbb
pop
cmp
pop
add
nop
das
cmp
sub
xor
and
fwait
icebp
dec
inc
imul
addb
bnd
and
int
in
mov
adc
xor
out
insb
pop
add
add
imul
mov
and
test
adc
cld
rcrl
add
ficoml
or
stos
jg
mov
add
xchg
shlb
mov
addr16
test
cltd
xchg
loop
jg
add
pop
idiv
hlt
out
pop
xlat
cwtl
adc
shrb
and
jnp
add
mov
mov
cmp
adc
dec
aaa
dec
mov
xlat
xlat
fs
xlat
daa
data16
pusha
pusha
sarb
pop
ljmp
and
loopne
ljmp
loopne
stos
pusha
pusha
sbb
mov
es
inc
mov
add
inc
inc
inc
mov
xor
inc
inc
pop
imul
rcll
xchg
or
xchg
rcl
mov
jge
rep
adc
add
inc
sub
sbbl
lea
add
inc
pop
cmp
jae
xor
sub
xchg
cld
push
jecxz
stos
repnz
sub
mov
xchg
mov
ljmp
add
and
pusha
pusha
lcall
loopne
sub
mov
pusha
jecxz
xchg
push
dec
push
push
addb
rol
loope
mov
pop
rolb
in
jo
loopne
cmp
addr16
push
enter
movsl
cmp
mov
bound
mov
mov
addb
xor
pop
sub
sbb
lea
aam
sti
dec
and
loopne
fstpl
mov
loopne
dec
and
mov
add
div
in
pop
mov
dec
inc
and
sub
movl
divb
and
xor
sub
loopne
push
jo
add
or
and
in
aam
loopne
rolb
or
into
in
imul
mov
or
out
shll
ret
xchg
fnstenv
pusha
pusha
stc
mov
decl
xchg
loopne
lea
pop
fsubl
xor
mov
in
or
and
jns
addb
gs
repnz
cmp
sbb
jl
and
pusha
movsb
add
loop
addb
jae
mov
xchg
inc
pop
add
add
adc
push
rol
adc
neg
cmp
cmp
in
leave
outsb
pop
sbb
jg
cs
pusha
mov
dec
fstpl
scas
rol
outsw
mov
cmp
xor
mov
out
insl
pushl
loope
pusha
pusha
leave
pushl
mov
pusha
pop
in
out
outsb
js
loopne
rolb
mov
inc
mov
inc
mov
fwait
rol
mov
repnz
fisttps
push
addb
fwait
mov
lods
int3
insl
dec
and
lock
mov
sbb
pop
mov
and
jecxz
pop
fwait
jle
cmc
aam
dec
lods
fsubp
adc
addb
test
mov
mov
popa
inc
xchg
cmp
in
push
repz
jl
testb
icebp
imull
sbb
sahf
sti
std
jbe
je
sub
and
and
jmp
dec
addb
mov
inc
cmc
add
pop
test
ljmp
or
and
sbb
loope
lds
rcl
pminsw
add
stos
jle
add
add
add
pop
lock
loopne
and
call
mov
xlat
mov
fldl2e
jnp
cs
popa
jp
test
sahf
jo
pusha
pusha
adc
mov
loopne
test
pusha
out
adc
ja
std
fadds
pop
ret
adcb
rclb
clc
sbb
push
pop
jl
mov
jo
addb
loopne
mov
iret
sub
or
sub
pop
dec
jmp
pushf
mov
adc
add
pop
adc
xchg
jge
xchg
into
xchg
imul
lcall
push
das
rcrl
flds
je
mov
xchg
add
imul
pop
add
shlb
mov
call
and
add
aam
test
imul
sbb
pop
mov
loopne
inc
out
and
dec
pop
in
dec
inc
ret
pop
sbb
fistpll
shlb
rclb
cmpsl
iret
sti
push
sbb
and
in
dec
mov
jge
ret
int
in
jbe
lods
mov
rcl
mov
push
cltd
xchg
stos
rol
jbe
insl
insb
sbb
in
aas
lret
aam
adc
cwtl
dec
sub
dec
mov
mov
rol
add
or
rorb
pop
sti
xor
add
bound
inc
inc
addb
jge
enter
lret
test
loopne
rol
inc
sub
mov
mov
bound
or
sarb
lret
adc
mov
xchg
pop
lret
push
add
ret
leave
mov
inc
inc
jb
lret
lods
add
mov
cmpl
into
jnp
aas
jns
repz
sbb
inc
outsl
push
addb
sarb
mov
add
cmc
out
cmpsl
call
cmpsl
rcll
and
mov
sbbb
mov
das
or
pop
cli
adc
sbb
out
xchg
pop
cmp
loopew
jns
rol
pusha
pusha
dec
cmp
fidivl
loopne
dec
jo
lea
loopne
jmp
xchg
andb
xlat
xor
fildll
aas
mov
adc
addr16
aaa
fwait
mov
push
out
jns
add
and
aad
jl
inc
lret
ja
mov
iret
enter
inc
out
inc
inc
nop
xchg
shl
jp
xchg
out
repz
push
iret
out
dec
lret
shl
pop
cld
leave
cltd
lods
fisubs
pusha
pusha
lret
popf
sub
and
loope
pop
or
ds
mov
int
and
push
ds
add
in
fs
mov
sbb
sub
jbe
cld
aas
sarb
sbbb
and
pusha
xor
fdivl
pop
sub
stos
arpl
pop
enter
negl
inc
idivl
insb
dec
add
push
rol
ret
cltd
cmp
fucomip
push
mov
test
pusha
push
adc
dec
mov
and
add
imul
and
sbb
inc
sbb
test
loopne
or
shrb
fs
test
xor
push
addb
inc
jl
xor
jne
mov
mov
rol
mov
inc
inc
stos
rol
aad
addb
sub
incl
mov
mov
std
xchg
stos
popa
call
movsl
out
loope
repnz
les
push
push
repz
mov
xchg
jle
or
mov
fadd
lret
mov
mov
ret
fsubrs
iret
sarb
ljmp
add
lds
mov
pusha
movsl
fiaddl
and
jne
psubsb
inc
jg
jle
inc
rcrb
mov
cltd
pop
addb
jo
push
push
xchg
add
dec
adc
jno
adc
es
cmp
es
inc
loopne,pn
cmp
unpcklps
xor
mov
mov
ja
out
lcall
out
mov
and
mov
imul
lret
mov
and
or
loopne
mov
ja
pusha
pusha
fcoml
lods
and
test
loopne
lret
or
and
and
mulb
pop
pop
mov
cmc
movl
loopne
sub
rol
das
xor
lock
loopne
cmpsl
push
or
je
mov
mov
or
nop
add
pusha
in
adc
ret
or
add
jmp
out
fisttpll
jno
insl
sti
shl
mov
cmc
mov
ds
sarb
outsl
in
push
xchg
fucomi
repz
out
add
sbb
xchg
inc
cli
adc
or
and
pusha
pusha
mov
movsb
and
or
dec
jmp
in
lahf
push
xchg
gs
fadd
mov
ret
popa
movsl
jecxz
imul
dec
xor
and
xorb
push
push
bound
push
pop
sbb
rol
or
shr
adc
scas
inc
inc
lcall
inc
mov
cmpsb
pusha
pusha
xor
outsl
pop
pop
or
and
insl
and
push
div
and
or
xchg
mov
in
xchg
and
inc
inc
jo
xor
push
mov
xchg
loopne
dec
lods
test
push
mov
mov
rep
add
hlt
cld
jecxz
inc
mov
rol
loopne
and
xor
int
addl
push
cmpsl
lret
call
or
ret
mov
sub
sub
or
pusha
xor
sbb
pushf
cltd
clc
sti
push
mov
mov
pop
pop
out
pop
ljmp
add
cli
imull
addb
fwait
dec
pop
xchg
outsl
fwait
mov
cmp
pusha
pusha
xchg
jo
inc
inc
nop
outsl
lret
scas
addb
dec
es
pop
dec
add
push
mov
es
xor
xor
lahf
and
stc
push
fucomip
mov
mov
out
or
jnp
push
ja
loopne
adc
xor
or
sar
fwait
popf
scas
mov
and
and
bound
cmovns
data16
add
and
pop
loope
jns
xor
xor
lret
jge
addb
ficoml
xor
lret
xor
es
pusha
mov
insb
fimull
push
xchg
cli
inc
pop
adc
cmp
inc
inc
and
aaa
fwait
add
and
xchg
and
xchg
fisttpll
and
rol
push
xchg
iret
jno
imul
add
jmp
inc
stos
and
inc
mov
imul
loopne
cld
xchg
into
and
pop
filds
mov
adc
sbb
insb
adc
lret
sub
xor
inc
inc
adc
insl
mov
addb
aaa
rolb
xor
mov
adc
mov
push
mov
add
inc
inc
imul
xor
fcmovne
fstpt
xchg
sub
pop
add
jl
or
add
inc
testl
cmp
movsb
loopne
lcall
cltd
xlat
aas
imul
xchg
rol
cltd
rolb
adc
mov
add
cmp
bound
aam
mov
mov
lods
add
and
xor
xchg
pop
sub
add
sub
mov
jns
loopne
enter
outsl
sahf
sub
adc
fwait
jge
inc
out
andb
and
syscall
mov
rol
xchg
cmp
cmp
mov
inc
inc
shll
dec
test
or
add
daa
push
pop
nop/reserved
sbb
adc
add
mov
int3
dec
dec
cwtl
lods
inc
inc
add
rorb
andb
mov
xchg
xchg
inc
push
addb
add
or
out
outsl
sbb
pop
mov
or
add
sahf
js
cmp
sub
push
pusha
pusha
xor
lret
ret
lods
and
mov
add
and
mov
leave
in
test
in
ret
jecxz
jmp
arpl
cmp
pusha
sti
fwait
and
add
mov
cwtl
pop
mov
mov
loopne
inc
inc
ficompl
xor
sub
and
sbb
mov
mov
mov
push
mov
and
stos
rcrb
out
aam
inc
sbb
mov
mov
mov
mov
adc
dec
loope
cmp
pusha
das
cmp
loopne
inc
in
insl
insl
and
add
loopne
bswap
cmp
and
mov
inc
mov
cmpsb
mov
add
rol
mov
xor
or
inc
inc
mov
js
sbb
mov
inc
fnstenv
rcll
flds
mov
and
or
and
daa
sbb
loopne
mov
adc
or
adc
lock
pop
xchg
divb
xchg
shlb
mov
and
and
inc
inc
pop
cmp
rol
push
add
movsl
dec
fwait
int3
fs
shlb
ret
imul
inc
stos
rol
ja
pop
pop
arpl
dec
jo
cmpsl
mov
stos
and
lods
add
push
sbb
jns
lret
addb
push
mov
movsb
inc
inc
push
rol
pop
fcompl
into
mov
stos
rol
inc
pop
imul
jmp
inc
inc
sub
and
add
sbb
aaa
andb
cmp
sbb
insb
or
loopne
lods
and
mov
test
in
ja
pop
fcoml
xchg
int3
xor
in
jo
xchg
sbb
shl
sbb
into
dec
or
and
cwtl
cmpsl
mov
fidivrl
nop
sbb
add
pop
jp
inc
inc
adc
jg
out
into
and
fnstenv
hlt
stos
jmp
outsb
fwait
cltd
daa
ds
jle
xor
pop
pusha
outsl
pushf
addb
mov
and
add
pop
shll
rclb
mov
int
inc
or
add
loope
lock
jae
call
in
jge
sub
add
int
fiaddl
lods
add
mov
div
sub
ljmp
sbb
les
jg
icebp
ljmp
jnp
dec
sahf
xor
sahf
fwait
pop
out
xlat
mov
dec
xor
loopne
lcall
pop
js
xchg
and
pop
cmp
or
add
pop
imul
sbb
lcall
pop
mov
lret
add
lret
fwait
and
or
lods
pusha
pusha
push
mov
xor
jge
or
addb
out
iret
cli
out
addb
cld
and
loopne
sbb
fwait
and
and
imul
imul
pop
cmp
movl
pusha
push
inc
enter
push
repnz
add
mov
pusha
mov
xchg
aad
cmp
mov
shl
stos
and
loope
jl
out
fnstcw
mov
and
dec
xor
cmp
and
cli
or
pusha
pusha
sbb
mov
pop
mov
out
das
andl
mov
mov
loopne
test
mov
loopne
dec
or
sub
mov
mov
jmp
xor
or
and
jae
mov
inc
mov
rorb
mov
lret
cmp
sbb
sti
xor
sub
iret
ljmp
pop
bound
je
in
js
ret
xchg
sahf
lcall
push
pop
pop
and
and
mov
rol
jb
enter
dec
scas
insl
cld
int3
xchg
and
and
pusha
push
paddsb
inc
pop
into
mov
dec
in
shlb
add
add
cltd
cld
add
lret
popa
ret
mov
sbb
and
and
addb
popa
adc
cmpb
jnp
pusha
pusha
dec
leave
stc
push
adc
mov
add
push
pusha
pusha
loop
push
and
sub
and
int
addb
sub
jae
push
das
loope
pusha
pusha
mulb
jmp
repz
cmp
imul
jp
scas
fdivrl
stos
sub
or
adc
push
mov
call
test
loopne
jbe
lret
pop
adc
sub
and
nop
popa
mov
loopne
adc
push
out
pusha
mov
mov
push
xor
pop
jae
loopne
icebp
mov
rol
dec
lock
lret
rol
add
pop
xchg
cmp
cwtl
sbb
or
lods
insl
jae
jmp
xor
mov
and
push
inc
fdivr
add
loopne
fisubl
mov
mov
cmp
xor
and
enter
and
sub
movsb
loopne
addb
in
push
inc
into
in
and
loopne
mov
loopne
call
aad
sub
test
pop
jle,pt
add
adc
leave
inc
inc
and
and
inc
inc
sub
rol
inc
inc
jge
mov
mov
pusha
pusha
and
xchg
mov
ja
push
fistpl
push
mov
ficoml
xchg
or
rol
les
cmp
mov
mov
xrelease
and
inc
sar
push
push
sbb
das
sbb
fsubr
ret
jbe
imul
mov
and
ja
inc
inc
es
bsf
mov
cmp
xchg
fcmovnb
in
and
loopne
sbb
test
inc
fwait
mov
rclb
lret
sbb
in
mov
test
pusha
xor
mov
popf
or
loopne
pop
int
scas
loopne
sub
loopne
dec
aaa
or
loopne
inc
inc
mov
and
mov
loopne
decb
push
mov
gs
pop
stc
mov
ljmp
jge
cmpsb
inc
inc
push
and
mov
bound
cmp
inc
jecxz
xchg
enter
jbe
cmpsl
push
push
popf
mov
shrb
leave
jb
sub
xchg
insb
nop
inc
fwait
in
cli
mov
iret
stos
in
and
shlb
mov
inc
iret
push
cwtl
pop
in
add
jg
int3
in
repnz
loopne
ret
push
adc
push
hlt
dec
and
andb
inc
inc
aam
dec
adc
bound
add
and
out
shll
addb
rcrl
imul
add
fidivrl
mov
mov
fs
mov
and
and
stc
loopne
aaa
clc
sbb
pusha
pusha
add
xor
lds
inc
inc
jmp
shll
out
lret
lock
notl
mov
into
jge
ret
mov
nop
scas
pushf
scas
loopne
out
xchg
js
repz
jecxz
xchg
out
xchg
mov
test
jns
mov
mov
push
sub
out
inc
mov
inc
test
inc
pop
or
xchg
daa
jmp
out
sub
sahf
aas
sarl
movsb
and
mov
dec
fcomp
push
aaa
cmp
bound
movsl
sub
shrb
shrb
mov
xchg
push
mov
xor
mov
xor
pop
push
inc
loope
and
rcr
mov
xorb
sbb
aam
rcrb
and
add
lock
xchg
loopne
add
fidivl
mov
rol
adc
lods
pusha
pusha
js
add
in
ficoms
push
jbe
add
cld
insb
pop
ds
xor
cmpsb
add
clc
xrelease
fidivl
inc
push
lods
push
inc
inc
test
adc
sub
mov
xchg
add
push
mov
mov
inc
ja
dec
cs
sbb
mov
cmp
xor
push
int3
sub
add
bndstx
outsl
jmp
add
or
pop
mov
and
mov
pushf
push
rol
arpl
enter
movsl
inc
mov
les
mov
and
insl
add
xor
xchg
inc
push
adc
rcrl
imul
xor
sbb
sbb
and
and
mov
xchg
sbb
pop
or
add
jns
fcoml
pusha
pusha
or
add
pop
test
dec
push
in
pop
jbe
pop
rcr
movsl
and
dec
dec
sub
les
xchg
fs
xchg
mov
loopne
and
rcl
mov
loopne
sub
pop
and
lret
sub
lahf
movsl
das
aas
sub
mov
ja
das
mov
insb
in
mov
add
and
mov
sub
movsl
fnsave
mov
add
push
repz
stc
pop
sahf
cmp
pop
inc
sbb
call
xor
add
add
xchg
mov
inc
out
mov
cmp
mov
in
andb
inc
jbe
dec
rorl
addr16
jge
mov
imull
inc
mov
ret
addb
inc
sbb
sbb
insb
loopne,pn
stos
roll
scas
clc
mov
dec
pop
lret
mov
jg
test
out
mov
and
xor
xchg
sub
push
sbb
loop
ret
loopne
mov
fmul
jb
loopne
pop
cmp
xor
inc
in
sub
in
call
and
mov
rorl
pop
fnstcw
inc
fldl
out
and
and
ljmp
add
mov
cmpsl
bound
hlt
jnp
push
rol
sbb
rol
test
repnz
jne
rol
mov
es
mov
mov
jno
loopne
xor
loopne
in
mov
and
xchg
sbb
cmpsl
cmp
dec
lea
pusha
pusha
rcll
icebp
xor
pop
xchg
cmp
pop
daa
push
fwait
cmp
loopne
adc
fistpll
popa
into
arpl
add
add
shl
clc
in
adc
cwtl
sub
jl
rol
scas
addb
mov
lret
cmp
push
dec
out
lret
and
in
stos
mov
add
mov
mov
insl
roll
inc
xor
rcrb
lods
inc
inc
insl
mov
mov
icebp
bound
ds
pop
scas
and
inc
xlat
adc
jns
lahf
daa
xorl
shrb
push
dec
inc
std
cmp
out
fisttpll
inc
inc
jg
repnz
addb
mov
mov
push
addb
pop
jbe
xchg
xchg
dec
dec
cmp
and
shr
lods
rol
cmpsb
and
push
addb
inc
mov
shrb
sub
sarb
pop
test
xor
mov
inc
scas
addb
aam
cmp
and
sub
divb
loopne
mov
test
and
outsl
je
mov
xor
push
stos
loopne
inc
or
js
add
mov
sub
and
sbb
pop
mov
call
xchg
js
mov
imul
adc
inc
les
rol
outsb
lret
loopne
cld
jnp
xchg
sbb
add
movsl
and
arpl
cmp
adc
addr16
inc
ror
or
loopne
sbb
push
lahf
test
loopne
push
add
mov
add
pusha
push
push
out
mov
fwait
leave
or
add
ja
cmp
stc
imul
shlb
cmc
daa
imull
pushf
inc
adc
cmpsl
pop
xor
xchg
cmp
addb
pusha
mov
mov
ljmp
incb
cli
push
movsb
add
mov
lds
int
stos
jae
sub
lods
xor
shrb
mov
int
lret
cmp
dec
mov
loopne
test
loopne
inc
xchg
mov
loopne
or
out
pop
repnz
shlb
jecxz
mov
jle
int3
mov
sbb
lea
xor
jl
push
pusha
pusha
mov
sti
ret
idivb
cmpsb
mov
loopne
mov
adcl
fs
cld
add
loopne
sahf
sarl
insw
mov
sbbb
cmc
bound
dec
iret
sbb
adc
jae
sti
fildll
add
sahf
dec
adc
sbb
mov
daa
dec
pop
ret
addb
dec
fstpt
sti
cwtl
daa
into
fcoml
loopne
push
lret
dec
aam
rclb
aam
mov
sbb
sti
xor
rcr
cmpsb
and
and
test
ja
std
pop
mov
adc
loopne
mov
pop
jno
mov
lds
stos
pusha
pusha
cmp
addr16
pusha
fcompl
jle
cmpsb
pusha
pusha
mov
loope
xor
into
test
add
fsts
sbb
cmp
or
cwtl
jp
lock
aad
mov
add
or
push
rol
int
or
and
ret
push
pop
fst
jg
adc
icebp
adc
inc
cltd
inc
cld
sbb
out
mov
and
xchg
call
inc
mov
pop
sub
add
add
hlt
mov
stos
add
inc
add
loopne
divl
rclb
movsb
mov
scas
sub
pusha
pusha
mov
add
mov
adc
pusha
mov
sti
add
lds
lods
addb
aam
rol
mov
mov
add
insl
std
mov
inc
lcall
ljmp
sub
adcb
rol
es
mov
in
test
and
push
pusha
mov
popf
mov
rclb
jge
xchg
pop
jne
mov
mov
sub
inc
rolb
cltd
std
outsl
push
test
test
pusha
lahf
mov
xor
mov
loopne
daa
inc
push
es
orl
add
rorb
in
jbe
mov
rol
ret
in
mov
mov
push
jge
add
add
mov
mov
or
xchg
fsubr
jge
jge
repz
dec
ret
cmp
fsubp
mov
and
lcall
add
push
mov
scas
push
jne
addb
pop
and
loopne
pusha
pusha
push
fldcw
ja
pop
inc
rorl
inc
inc
mov
mov
addb
dec
sub
jo
neg
mov
push
rol
add
cmpsb
inc
inc
sub
or
push
popa
adc
aad
repz
les
mov
inc
inc
mov
mov
push
pusha
pusha
movsb
loopne
mov
jae
dec
push
outsl
inc
addr16
lahf
jp
lahf
xchg
sbb
lds
and
cmp
and
repz
mov
pusha
pusha
jns
pushl
mov
fucom
in
mov
xchg
dec
lcall
cmc
enter
mov
adc
and
pop
loope
jp
fwait
imul
stos
rol
jmp
jae
push
mov
mov
dec
inc
pop
sbb
push
xor
or
and
inc
inc
ret
mov
cwtl
sbb
xlat
sahf
inc
scas
call
add
sub
addb
addb
inc
gs
fucom
js
movhps
inc
mov
or
loopne
mov
jle
pop
dec
xchg
push
jecxz
sbb
subl
fsubr
or
in
cmp
ja
mov
mov
aam
scas
mov
or
flds
lods
pusha
pusha
mov
shrl
or
das
and
pusha
scas
addb
pop
cmpsb
inc
inc
ffree
jecxz
out
fwait
mov
das
lea
addb
int3
ret
adc
add
pop
sub
and
movsb
add
lea
pusha
pusha
or
or
shll
rorl
mov
sub
mov
mov
shlb
addb
mov
add
add
popf
push
add
popf
xor
imul
cmp
push
dec
dec
jecxz
test
mov
rol
addb
jmp
push
sahf
lea
inc
pop
inc
push
push
pop
out
fadds
mov
loopne
popf
lds
adc
xor
fwait
pop
std
inc
adc
and
adc
inc
sub
outsl
cmp
jae
push
loop
dec
aad
lods
ror
adc
xor
add
adc
andb
adcb
inc
inc
jno
out
lret
arpl
pop
ss
and
rol
mov
push
clc
mov
dec
or
pusha
pusha
inc
enter
fdivrl
loopne
test
shr
stos
rol
or
cmp
add
add
dec
push
inc
test
cmp
sub
inc
and
imul
pusha
and
cmp
pop
xchg
push
sbb
push
in
arpl
adc
add
cltd
in
punpckhbw
movsl
addb
or
cmp
and
shlb
inc
call
push
push
in
and
and
dec
lcall
jbe
rol
fsubrs
pusha
mov
out
dec
jecxz
or
adc
cmpsb
inc
inc
outsl
push
test
add
pop
inc
pop
mov
loopne
cs
inc
sbb
and
mov
cmp
stos
lret
pop
lea
mov
aam
das
xor
mov
mov
or
mov
stc
ja
in
bound
imul
rol
cmp
fwait
mov
inc
fimuls
inc
out
dec
and
loop
mov
call
mov
sub
movsb
pusha
pusha
into
add
push
popf
sub
std
int3
mov
stc
cmpsl
clc
je
mov
cmc
nop
and
stos
loopne
leave
into
mov
jne
mov
lea
lods
addb
rclb
out
imul
leave
mov
divps
test
lds
sahf
mov
addb
ljmp
inc
mov
in
inc
inc
xor
and
cli
pop
ret
pusha
gs
xor
addb
gs
and
and
mov
jae
aad
rcll
fsubrl
in
inc
movsl
aas
pop
pop
xor
add
in
incb
mov
rclb
and
sub
push
push
mov
cmp
fisubrl
mov
and
mov
sbb
das
jp
call
mov
and
inc
sti
adc
sbb
jnp
adc
popf
xchg
jno
inc
inc
aaa
addr16
adc
ja
push
loopne
dec
mov
lret
mov
dec
jae
mov
lock
lret
lcall
icebp
fidivl
or
push
and
loop
push
pusha
ds
sub
leave
pusha
lret
sbb
mov
fldcw
les
leave
push
icebp
int3
pop
ds
push
fldl
aas
pop
cmp
jl
aaa
jns
xor
sub
ds
ret
pop
fsubs
push
ds
imul
add
addb
incb
addb
and
cmpsb
mov
popf
es
pusha
mov
cmp
sarb
lret
ja
addb
pop
dec
xchg
fmul
int3
sti
shl
xchg
dec
adc
add
mov
or
loopne
push
xor
mov
or
jbe
sub
and
cli
pop
shl
pause
inc
xor
or
adc
mov
push
adc
add
mov
and
jl
or
mov
xchg
pop
mov
leave
and
loopne
or
cltd
mov
addb
pusha
ljmp
adc
jle
mov
mov
js
mov
fwait
xor
mov
pushf
call
mov
icebp
ljmp
sarb
sbb
fnsave
and
leave
movsl
les
sti
jge
movsl
mov
fiadds
jo
mov
pop
adc
pop
sbb
cld
jmp
jle
sbb
mov
mov
fwait
mov
jbe
dec
stos
cmpsl
out
ss
add
jbe
aas
pusha
jno
mov
inc
inc
dec
dec
mull
add
ljmp
dec
push
add
out
mov
cmp
fmull
dec
out
lds
sti
cmpsl
mov
leave
push
mov
test
arpl
inc
pop
xor
addb
pop
push
push
imul
inc
inc
xor
add
and
ror
jbe
xchg
cmp
out
sub
dec
aaa
mov
rcr
addb
mov
out
aad
inc
inc
inc
mov
sub
sar
mov
dec
shl
or
stos
add
push
adc
mov
shrl
loopne
jmp
add
and
pushf
sbb
inc
mov
fisubs
das
outsl
dec
leave
cmp
sti
dec
sti
mov
nop
add
out
cmc
push
in
out
lods
pusha
pusha
aas
cli
fnsave
mov
es
adc
push
and
cmp
hlt
mov
sbb
fwait
jno
fwait
mov
loopne
loop
rol
sbb
xchg
fs
sarl
lret
stos
stc
jl
xchg
jns
mov
jae
mov
daa
lods
pop
inc
pop
subl
rcll
in
inc
jae
or
push
pop
mov
shlb
sbb
mov
fdivrl
fadd
shlb
mov
cmp
jmp
xor
mov
incl
and
aaa
cltd
test
push
lea
add
push
mov
addb
lea
or
loopne
pop
sub
cmp
lcall
scas
pushf
js
testl
and
and
clc
addb
rorb
addr16
repz
push
lahf
shlb
and
mov
addb
enter
sub
iret
js
adc
popa
jo
mov
add
adc
jle
xchg
rolb
mov
sub
or
or
ss
and
bound
ret
sbb
pop
xor
into
and
loop
xchg
sbb
add
shrb
loop
adc
mov
ss
jl
mov
mov
inc
aas
or
mov
inc
stc
adc
movsb
add
mov
mov
int3
cld
out
jmp
mov
dec
repnz
test
adc
lods
inc
xchg
mov
lods
add
cmp
out
mov
xor
addb
dec
int3
lahf
arpl
popf
and
out
rol
jb
popa
mov
in
aaa
ja
xor
mov
aad
into
push
pusha
pusha
and
inc
out
sbb
and
movsb
mov
clc
scas
add
test
inc
inc
cmc
and
cmp
repz
and
xchg
out
jo
loopne
lods
add
jle
in
sti
adc
and
popf
leave
fildl
iret
push
lods
pusha
pusha
push
imul
mov
add
fwait
and
add
and
in
sub
xchg
xor
dec
sbb
push
shl
xor
push
nop
sub
rclb
call
repnz
leave
jnp
pusha
pusha
xchg
into
cmp
pusha
jo
ror
loopne
push
sarb
add
dec
sub
pusha
mov
fnsave
or
lods
jmp
fnsave
jbe
xchg
into
add
inc
jecxz
mov
mov
xor
xchg
call
dec
adc
bndstx
ss
addb
pusha
adc
xor
xor
inc
ljmp
mov
rclb
test
loopne
xchg
xchg
aad
outsb
pop
sub
fs
add
inc
pop
jne
cltd
sub
add
mov
and
sbb
cmp
pusha
pusha
xchg
mov
cwtl
je
cmc
and
rol
mov
dec
stos
and
add
addb
inc
push
and
lods
mov
insl
lods
addb
jl
sbb
daa
fucom
fcmovb
mov
cmpsb
and
add
in
enter
mov
rol
mov
sub
push
sub
and
inc
std
mov
orb
and
ficoml
sub
addb
dec
jmp
out
mov
mov
into
xchg
cmc
enter
inc
loop
dec
arpl
xor
cmp
push
inc
aad
insl
adc
jae
cmp
xor
add
loopne
lea
xchg
cmp
sub
loopne
test
loopne
dec
ficoms
in
mull
rcrb
mov
jp
and
mov
repnz
call
inc
cmp
pusha
pusha
xchg
stos
xor
sub
fisubrl
pushf
clc
ljmp
sbb
dec
js
pop
and
lahf
outsl
lock
sub
pusha
pusha
fwait
xor
subl
lret
ss
dec
adc
inc
xor
shll
lahf
adc
mov
sbb
pusha
pusha
add
pop
cmp
mov
jge
insb
xchg
fcomps
icebp
in
lret
jge
out
fidivrl
lods
add
shlb
das
outsb
jmp
sahf
xchg
clc
push
loopew
addb
xchg
sahf
mov
pushf
xor
pop
shrl
sahf
jmp
cltd
xchg
lods
loopne
lea
and
loopne
addb
mov
call
add
cmp
xchg
dec
scas
mov
addb
rol
inc
inc
pusha
pushl
popf
sbb
mov
test
mov
add
add
mov
dec
cwtl
aas
fwait
or
xor
addb
pop
lcall
rorb
pusha
pusha
add
push
fdiv
test
add
xchg
jp
jb
xchg
and
and
and
pusha
clc
aad
rol
pop
pushl
mov
enter
int
jle
inc
inc
cld
mov
add
roll
scas
addb
add
and
das
sub
push
dec
mov
push
fwait
test
out
pop
mov
jo
and
loopne
mov
test
xchg
loope
mov
add
inc
inc
mov
mov
popa
int3
aaa
push
xlat
add
jl
xchg
clc
arpl
int
sbb
sub
enter
daa
fimuls
int3
test
rorb
jle
cmp
sbb
jmp
and
clc
xchg
hlt
movsl
mov
addb
mov
test
rorb
pusha
fisttpll
xchg
xchg
and
and
lcall
inc
mov
jns
pushf
fstps
mov
lcall
addb
iret
imull
mov
mov
and
and
and
test
mov
pop
sbb
cmp
aaa
lahf
popf
cmp
cmpsb
addb
addb
mov
jg
popa
call
add
sbb
push
xchg
cmp
jge,pt
push
inc
inc
xchg
inc
mov
pusha
pusha
adcl
loopne
add
jmp
rcr
inc
and
rol
cwtl
out
in
aad
push
fnsave
mov
xchg
call
xchg
daa
scas
mov
test
xchg
adc
outsb
fisttps
notb
aam
iret
mov
add
or
call
pop
aas
sarl
lret
insb
adc
stos
mov
or
loopne
mov
pusha
pusha
adc
jecxz
jo
xchg
pushl
push
push
sti
hlt
fldcw
adc
leave
cld
jp
rol
sbb
jecxz
bnd
dec
cmp
and
add
xchg
pop
stos
mov
mov
lods
and
cmpsl
pop
repz
setae
mov
mov
mov
jnp
and
inc
mov
shrl
pusha
xor
pop
xor
outsl
mov
sbb
pusha
arpl
inc
in
test
add
je
sbb
pop
loopne
clc
or
cmpsb
rol
loopne
adc
xchg
insb
clc
and
push
out
adc
sbb
adcb
int
and
je
lret
inc
pop
cltd
add
loopne
out
lock
in
rol
rol
push
xor
pushf
mov
fmul
das
pop
sub
int
pop
or
loopne
pop
lret
sub
outsl
movsb
inc
inc
push
icebp
or
lods
insl
xor
aaa
xor
test
ljmp
cmp
leave
push
rol
add
and
mov
test
add
lods
mov
mov
jge
fwait
in
add
mov
cltd
add
mov
pop
cmp
xor
add
xor
cmp
addb
sub
femms
addb
and
out
adc
icebp
out
xchg
add
rolb
mov
jl
sbb
rorl
lea
adc
js
stc
insl
rcrl
mov
jge
decl
insb
xchg
add
addb
roll
push
sahf
sub
inc
pop
ja
cmpsl
inc
inc
jle
rol
push
dec
pop
cmpsb
loopne
add
pusha
adc
mov
pusha
pusha
mov
mov
sbb
cmc
add
rcrl
and
inc
cmpsl
push
xchg
sbb
add
outsl
mov
sbb
inc
fdivs
or
shl
out
jnp
mov
gs
ret
call
dec
pushf
mov
rclb
jecxz
mov
and
lods
out
andb
ja
loop
sahf
leave
mov
mov
scas
mov
test
xor
pop
js
dec
adc
or
iret
or
insl
or
loopne
and
cmp
loope
test
pop
hlt
lds
dec
inc
sbb
xor
or
pop
xor
testb
fistl
rorl
pusha
fmuls
pusha
pusha
mov
pusha
adc
arpl
cmp
call
and
pop
dec
cmpsl
and
add
pusha
pusha
ret
inc
pop
idivl
xchg
rclb
sbb
loopne
ljmp
fcomps
cli
fmull
pop
sbb
pusha
addr16
rol
shrl
mov
pusha
pusha
bound
and
cwtl
arpl
repz
rol
shll
cmp
pop
je
mov
add
pusha
popf
mov
incb
pop
insb
adc
test
and
pusha
pusha
add
dec
shlb
pusha
inc
cs
inc
inc
idiv
jp
cmc
bound
push
add
mov
push
loopne
je
in
cs
pusha
mov
cmp
dec
sub
xlat
cmpsb
addb
test
subb
fmul
jg
ret
mov
popf
pop
scas
cmp
repnz
notb
jns
cmpsl
jl
jmp
jl
les
in
cmp
cs
rol
in
jle
and
shlb
sbbb
lds
loope
jmp
pop
dec
mov
mov
shlb
outsb
in
in
adc
fnstsw
arpl
loop
fmull
push
mov
cmp
xchg
cmc
scas
loopne
int
lcall
inc
jno
and
rolb
and
mov
pusha
pusha
scas
loopne
aam
xchg
andb
cmpsl
inc
xchg
sbb
rol
mov
sub
scas
and
test
insb
aam
sbb
sub
sub
push
rol
xchg
jg
mov
xchg
insl
lahf
mov
xchg
sub
loopne
inc
inc
jns
jge
aas
imul
addb
popf
mov
out
and
add
push
cs
add
xchg
xchg
jns
or
xchg
mov
rorb
mov
mov
push
in
and
or
add
inc
xchg
or
inc
repnz
call
stos
jmp
pushf
lahf
mov
xchg
push
ffree
lret
fwait
mul
cmc
pushf
or
pusha
pusha
addb
sbb
nop
pusha
pop
aam
mov
out
int
sub
in
cmp
out
pusha
pusha
pushf
into
dec
movsb
pusha
pusha
fdivrl
loopne
mov
push
out
rol
xor
jp
inc
psrlw
stos
xchg
dec
push
jne
push
rcr
out
jge
dec
mov
je
pop
in
or
rclb
xchg
dec
sub
sbbb
mov
add
shlb
in
adc
aas
daa
xchg
scas
addb
sbb
iret
int3
loope
pop
test
and
inc
inc
and
sub
imul
jnp
stos
idivl
lock
pusha
pusha
inc
mov
cmp
les
pusha
push
mov
sub
lea
outsl
cmp
inc
xchg
out
mov
rol
and
pop
inc
aaa
lods
add
loopne
inc
inc
fsubp
cmp
testb
pop
out
or
inc
or
jae
jge
xchg
fbld
jnp
loopne
paddw
ja
mov
add
sti
pop
sub
inc
in
sub
mov
mov
cmp
int3
cwtl
fcompl
mov
loopne
and
and
add
and
inc
inc
add
mov
in
inc
div
xchg
data16
fldl
xchg
adc
cltd
and
xor
sub
stos
rol
and
out
loope
xor
or
loopne
add
sbb
mov
cmp
shrl
xchg
mov
pop
cmc
sub
rcr
and
xchg
je
dec
mov
sub
loopne
pusha
pusha
xchg
pop
or
repnz
test
loopne
add
and
mov
add
inc
lret
sub
add
and
xchg
and
xlat
push
pop
out
icebp
push
jmp
jno
rorb
fwait
push
xor
loope
cld
dec
cltd
jmp
dec
lret
sub
imul
add
int3
aaa
in
dec
imul
add
cltd
icebp
xor
rol
repz
mov
shrb
inc
and
rorb
or
fnstenv
jmp
and
add
pusha
jns
ds
repnz
xor
aam
imul
mov
mov
arpl
sub
adc
lcall
int
lret
scas
xchg
xor
add
mov
pop
call
imul
jmp
jne
and
jmp
shrl
imul
pusha
pusha
sbb
mov
mov
inc
inc
dec
in
jmp
loopne
jmp
jle
sbb
popa
xor
push
lods
sbb
pop
inc
sahf
push
cmpsl
pop
in
fs
enter
das
loope
or
and
cs
inc
dec
push
std
aas
pop
fcomps
stc
mov
add
pusha
push
mov
mov
push
popa
cmpsl
cmp
cwtl
and
push
and
push
lock
mov
add
stc
inc
in
push
addb
sub
fbld
inc
inc
jmp
adc
add
gs
shl
pop
lahf
loopne
inc
jo
cwtl
fimull
xor
testb
fdivr
repz
jb
mov
or
and
xor
addb
add
mov
addb
popf
cli
cmp
add
and
mov
add
add
and
andl
xor
sbb
repnz
lds
lds
arpl
xor
ljmp
lcall
addb
pop
out
cmp
std
fnstcw
push
mov
inc
inc
insb
pmulhuw
inc
sbb
mov
shll
inc
adc
sbb
mov
pop
es
out
inc
inc
addb
inc
dec
leave
out
pusha
mov
in
js
negb
mov
adc
addr16
xor
jg
xchg
push
inc
sub
dec
mov
imul
out
loopne
cli
jmp
mov
add
addb
inc
inc
out
addb
rol
pusha
pusha
fs
mov
out
xchg
fstp
in
add
hlt
mov
jmp
push
dec
add
rcl
test
or
add
je
or
addb
mov
rclb
sub
xchg
pop
loopne
out
stc
jmp
xor
pop
jg
and
addb
pusha
mov
dec
cmpsb
inc
inc
mov
pusha
adc
popf
out
mov
sub
loopne
loopne
fisubrs
test
mov
imul
cmp
pusha
loope
mov
mov
lret
sbb
mov
shl
push
scas
sub
cld
and
cs
inc
inc
xchg
and
shlb
imul
inc
inc
lods
and
and
xor
ret
or
loopne
xchg
mov
and
jo
push
push
jle
rol
stos
pusha
pusha
call
mov
add
sti
pop
mov
mov
jg
push
sub
in
les
loop
push
or
inc
xor
insb
lahf
mov
xor
mov
mov
das
dec
popf
mov
mov
jbe
cli
cltd
test
lods
rol
and
and
cld
sub
add
jne
pop
xchg
cld
mov
push
inc
inc
jae
mov
loope
mov
push
popa
cmc
adc
mov
std
fmull
pop
adc
xor
dec
xor
rol
ret
inc
inc
pop
out
bound
dec
dec
mov
stos
fistps
or
add
rclb
mov
scas
addb
jl
sbb
inc
inc
xchg
addr16
loopne
test
pop
adc
popf
pop
stos
and
and
mov
outsb
shlb
add
add
mov
mov
sub
add
or
jnp
inc
sarb
cli
fistpl
sbb
addb
pusha
pusha
push
and
stos
addb
mov
mov
shlb
jecxz
sbb
or
pop
cmp
scas
aaa
cmpsl
sbb
adc
addb
mov
cpuid
loopne
mov
ja
out
pushl
aad
inc
mov
iret
jnp
cmp
sahf
sarl
je
mov
pusha
je
fsubrp
sub
add
frstor
loopne
in
out
inc
inc
dec
adc
cmpsb
and
jnp
outsb
mov
pushf
jmp
cmp
xor
inc
xchg
rolb
fcmovne
sbb
and
rolb
leave
or
jo
and
add
shl
ds
aaa
lcall
loopne
jmp
add
adc
sub
jno
dec
ret
gs
push
pusha
pusha
enter
and
dec
ljmp
repz
or
pop
xchg
fimuls
movsb
rol
inc
shlb
and
daa
xor
xor
sahf
cmp
dec
fdivr
jbe
push
and
loopne
mov
loopne
pop
call
mov
loopne
xor
loope
aam
jb
addb
sub
loopne
andb
and
in
imul
lcall
cmp
mov
push
xchg
and
repz
in
xor
movsb
mov
out
pusha
pusha
scas
jnp
mov
push
mov
jo
in
fisubrs
rcrb
je
ljmp
rol
jmp
sub
adc
loope
ljmp
push
stos
and
xchg
gs
cld
lods
mov
js
rol
mov
push
out
adc
and
into
fistpl
pop
inc
and
inc
mov
inc
dec
nop
das
in
and
lret
fsubrl
ds
fcomps
testl
test
lea
out
arpl
dec
test
orb
or
int
jne
sbb
push
mov
add
or
and
mov
mov
dec
out
add
and
fwait
xor
mov
and
in
lcall
addb
and
mov
ror
cmp
int3
bound
pop
push
mov
or
jl
das
mov
jecxz
lcall
loope
or
pusha
dec
and
xchg
inc
sbb
xor
xlat
ljmp
xor
and
icebp
xchg
cld
fmul
mov
mov
push
shll
shlb
lea
addb
repnz
or
aaa
mov
rcr
test
jb
add
shrb
add
lods
add
push
push
adc
xlat
fnstcw
out
mov
das
call
mov
jmp
adc
pusha
add
imul
inc
mov
addb
pop
or
loopne
shrl
add
push
pop
icebp
mov
out
jbe
inc
xchg
pusha
mov
mov
cmpsl
sbb
push
ror
aas
mov
filds
add
fisubrs
mov
rol
sti
out
andb
int
inc
pop
scas
out
pop
adc
rclb
mov
fbld
sub
sbb
outsl
sbb
lods
hlt
loopne
mov
mov
cmp
daa
jb
pop
jmp
xor
lds
sbbb
push
lods
int
int3
mov
cmp
fdivl
lds
jl
and
js
inc
push
push
les
inc
xor
xchg
add
push
and
loopne
sub
pop
in
mov
push
cmp
mov
fs
fcomps
into
inc
push
popa
add
outsb
inc
out
ret
fs
bound
rol
jno
leave
icebp
imul
and
mov
fwait
jb
sbb
adc
jne
fstpt
or
leave
andb
jecxz
stc
movsb
pusha
pusha
insl
jno
cmp
ds
fldlg2
movsb
pusha
pusha
inc
dec
or
rorb
mov
rcrb
lods
add
jmp
movb
mov
inc
jbe
xchg
adc
call
pop
sbb
or
xchg
ffreep
jecxz
push
int
mov
pusha
pusha
into
xchg
fimuls
insb
add
shlb
push
test
and
rol
pop
push
jbe
cmp
adc
rclb
int
cmp
add
in
sub
jno
into
aam
mov
shll
push
and
ror
std
mov
cltd
xor
daa
rclb
sub
pusha
paddusw
cmc
push
hlt
xor
mov
int3
cmc
and
loopne
add
shrb
pusha
loope
cli
add
and
push
pop
sbb
mov
popa
shl
fistl
pusha
imul
int
scas
pop
movsl
shll
rol
out
sub
repnz
pop
das
adc
loopne
adc
inc
sbb
xchg
sub
shlb
jle
lret
push
adc
repz
inc
lds
hlt
fcoml
pop
mov
jae
out
or
rol
rol
cld
ret
jle
fnstcw
clc
or
pusha
push
and
insb
inc
add
add
add
scas
addb
ljmp
xchg
cwtl
scas
fsts
lahf
sbbl
mov
sbb
cltd
mov
mov
cwtl
les
pop
lods
and
fnstcw
push
cld
pop
jae
test
xchg
mov
push
pop
jno
xor
xchg
cli
jl
push
pop
test
inc
xchg
addb
rol
jmp
repz
loopne
insb
mov
sahf
insl
fistps
push
inc
loopne
sbb
shrb
and
nop
or
mov
mov
push
add
in
clc
jo
xor
push
mov
and
or
xchg
jg
pusha
pusha
jae
and
jnp
inc
mov
aas
push
js
xchg
mov
mov
mov
dec
or
add
fsubs
movsb
inc
inc
add
mov
int
xchg
dec
push
cld
add
mov
mov
push
xor
pushf
js
lea
out
lock
dec
add
add
ds
nop
stos
mov
das
shll
inc
inc
and
les
mov
iret
dec
mov
inc
inc
sub
sarb
pop
and
clc
addb
sub
xor
adc
rol
mov
cld
jns
push
scas
inc
cltd
mov
dec
sub
clc
inc
xor
mov
rol
sub
and
rorb
cwtl
int3
jae
lock
pusha
mov
inc
mov
sti
mov
inc
adc
addb
add
rol
adc
add
and
add
push
jle
adc
popa
popf
insb
xchg
add
repz
sbb
insb
sub
rorb
push
shrl
mov
mov
loopne
insb
in
jo
mov
and
lods
rol
lods
push
pop
add
mov
mov
inc
inc
std
cmp
in
fildll
adcl
or
pusha
shlb
cmp
mov
mov
cmp
add
add
ret
mov
pop
jle
pop
mov
mov
shlb
xchg
cmp
xlat
jae
xor
lods
loopne
call
mov
pop
rorb
jae
and
add
add
mov
add
mov
xchg
lods
in
sub
addb
push
push
mov
xor
add
and
out
inc
inc
aam
jno
inc
inc
popf
pop
scas
pop
push
sub
and
mov
add
push
push
xchg
cmp
xor
mov
sbb
or
loop
mov
dec
dec
push
sti
mov
rclb
ret
dec
sub
jns
daa
mov
mov
mov
or
fnstsw
or
pusha
pushf
test
sub
loopne
int3
pop
mov
adc
inc
fcmovne
add
inc
xchg
push
loop
mov
sbb
lods
inc
outsb
and
add
imul
mov
push
or
loop
pusha
pusha
sbb
rol
mov
mov
cmc
lea
push
jae
int3
xchg
pusha
sub
loopne
rorb
popa
bound
inc
and
inc
jl
imul
shll
mov
adc
sbb
and
stos
aas
fs
adc
mov
and
xor
xchg
and
pop
mov
stos
loopne
out
gs
push
mov
pusha
pusha
xchg
aam
loopne
loopne
daa
add
loopne
xchg
pop
adc
pop
data16
dec
or
mov
inc
loope
les
and
out
in
repz
addb
testb
andb
test
rol
repnz
pop
pop
mov
jmp
addb
mov
pusha
pusha
std
mov
mov
loopne
push
pusha
fidivrs
loop
add
pop
jns
aad
shll
fwait
sahf
xor
pop
mov
push
xlat
roll
ret
sbb
inc
jnp
fcmovu
pop
andb
daa
mov
bound
and
daa
xor
popf
imull
addl
xor
rol
stos
ret
cmp
dec
popa
addr16
lds
aas
jge
mov
sub
loopne
adc
and
sarb
sbbb
in
leave
fcoml
jnp
cmp
orb
inc
push
add
dec
andb
cmpl
push
sbb
push
loopne
xchg
cmc
inc
and
rol
fnsave
or
aas
hlt
lcall
fsubrs
subl
fistpll
sub
adc
mov
sti
rcll
in
movsl
aad
lret
incb
inc
lret
test
dec
dec
mov
jns
out
pushf
push
mov
lcall
mov
mov
push
fistps
fwait
cmp
push
push
dec
jns
gs
or
push
add
andb
and
repz
lds
jnp
orl
icebp
sbb
push
scas
rol
sub
rcl
inc
mov
clc
push
pop
fidivrs
and
inc
dec
loope
mov
xchg
pmulhuw
out
setnp
adc
daa
inc
sbbl
mov
ljmp
mov
lds
mov
daa
adc
pusha
pusha
ljmp
adc
sbb
inc
and
and
mov
jmp
pusha
pusha
pop
sti
ja
pop
and
aam
iret
lods
inc
rolb
xor
mov
sti
loop
mov
mov
push
dec
addb
add
loopne
lods
addb
fs
mov
iret
cmp
das
in
push
notb
cmpsb
addb
add
scas
addb
inc
pop
test
dec
xchg
loopne
cli
adc
outsb
push
andb
out
fidivrs
xchg
inc
sub
loopne
xchg
push
jp
mov
call
cmpsl
and
pop
lock
loope
push
cmp
lahf
xchg
fwait
mov
addb
cmp
jg
add
jns
dec
aas
sti
test
inc
mov
cli
aam
in
std
cltd
jns
mov
jnp
fisubs
sub
fcos
dec
pop
aad
sti
and
lret
andb
pop
fdivrs
mov
push
insb
xchg
shrb
sbb
cwtl
je
push
rol
repnz
and
aam
movsb
mov
add
jnp
cmp
imul
inc
cmp
jno
fs
pop
outsb
cwtl
notl
mov
shrl
dec
push
or
shlb
inc
inc
jle
mov
inc
add
rclb
mov
or
cltd
sub
and
sbb
jp
mov
aam
enter
loopne
pop
mov
mov
inc
nop
iret
mov
mov
loopne
sbb
inc
mov
fcom
clc
mov
lea
mov
mov
cmp
mov
in
fistpll
rol
frstor
and
arpl
rorb
jecxz
xor
pusha
cmc
movsl
push
lds
gs
cmp
mov
fsubrl
push
sbb
imul
imul
int3
push
add
int
mov
mov
mov
mov
xor
leave
subps
pop
mov
mov
loopne
leave
dec
pop
inc
imulb
lds
int3
sub
loop
and
dec
mov
js
lcall
push
pop
mov
sbb
push
mov
das
fcomps
and
into
decb
rol
push
rcrl
std
inc
pop
shrb
repnz
dec
push
or
shlb
into
adc
mov
aam
xchg
lret
mov
jge
jbe
sbb
out
add
fisubs
loopne
dec
and
adc
jnp
loopne
jle
rcrl
out
cld
push
loopne
xchg
cmp
jge
mov
dec
addl
mov
mov
adc
push
mov
mov
add
cmp
ficompl
xor
jb
inc
lock
out
mov
mov
push
ror
test
pop
add
and
mov
stos
jns
iret
lret
add
jmp
jns
sbb
add
sti
scas
loopne
daa
mov
loopne
push
dec
mov
inc
push
rol
add
pusha
je
aas
jle
shl
sti
mov
inc
inc
out
xchg
mov
pop
pop
gs
push
pusha
mov
std
mov
imul
jg
pop
adc
stos
loopne
mov
shlb
pmuludq
and
mov
inc
pop
push
mov
out
stos
sbb
lret
test
dec
mov
dec
jns
bound
pop
pop
adc
fists
popa
inc
cmc
negb
addb
loopne
inc
jae
in
sahf
fisubs
movsb
inc
inc
imull
jp
mov
pop
std
pop
pop
add
xor
movsl
popa
xor
add
sub
loopne
inc
jne
out
push
sahf
fimull
cmp
push
add
add
add
jae
pusha
pusha
fwait
push
movsb
add
mov
mov
fs
or
inc
jae
jns
ja
push
mov
inc
in
icebp
dec
out
jmp
adc
and
cmpsb
mov
xchg
int
inc
adc
mov
adc
dec
cwtl
mov
and
cmp
and
sti
dec
in
or
or
and
clc
mov
inc
mov
and
jne
sbb
xchg
and
pusha
push
inc
inc
test
shlb
cmp
inc
inc
jbe
inc
sub
dec
xchg
lock
js
rol
xor
add
jmp
popa
lods
xchg
aad
movsl
das
sbb
mov
rorl
pop
adc
inc
dec
cmc
rclb
test
cmp
nop
mov
or
sub
and
sbb
inc
inc
popl
and
xor
inc
dec
or
inc
jmp
sub
mov
pop
or
fmuls
addl
inc
fdivs
ja
out
and
loopne
mov
cwtl
and
out
mov
dec
add
mov
mov
mov
inc
ljmp
sarl
inc
inc
mov
add
dec
pop
sbbl
divb
cmp
dec
lods
fs
cs
pusha
outsl
add
push
pusha
and
pusha
roll
lods
pusha
pusha
mov
shl
in
aaa
inc
xor
or
loopne
add
shrb
popl
xchg
test
fists
pop
popf
push
out
dec
sub
loopne
mov
lock
aad
scas
push
mov
xchg
mov
push
xor
bound
aad
adc
xchg
int3
test
loopne
inc
xor
xlat
cmp
push
out
mov
and
xchg
loop
mov
cmp
jle
lods
or
and
inc
sub
loopne
loopne
cmpsb
pusha
pusha
add
xorb
push
inc
int3
adc
loopne
jnp
sbb
lahf
adc
test
adc
pop
sahf
or
rol
loopne
mov
add
add
pusha
sub
jb
push
test
jbe
inc
inc
imul
and
int
sub
add
pop
or
sub
and
add
shr
icebp
jbe
xchg
int
inc
inc
xor
jmp
movsl
movsb
rol
roll
push
dec
in
rol
and
xor
pop
int
pop
aas
fidivrl
xor
jge
inc
icebp
push
insl
shlb
icebp
andb
outsl
cmp
xor
mov
inc
jb
mov
jl
push
mov
dec
enter
ret
sub
std
jge
xor
ds
aaa
sbb
iret
test
loopne
test
inc
or
push
push
inc
inc
cmp
mov
and
cmp
add
ds
or
sub
loopne
or
and
mulb
and
dec
scas
adc
xchg
mov
test
add
xlat
into
pop
push
xchg
and
add
jp
pop
mov
pusha
pusha
sub
jno
push
xchg
enter
xchg
daa
repz
pusha
pusha
insb
xchg
hlt
jbe
xor
and
lea
jg
mov
inc
mov
sti
mov
inc
xor
sarb
jge
scas
leave
aad
inc
push
enter
add
add
loopne
roll
sbb
lret
add
cmp
jne
push
mov
stc
dec
and
and
outsl
push
sbb
and
inc
inc
mov
cli
xor
cmpsb
and
imul
push
stos
loopne
mov
call
addl
mov
into
clc
mov
inc
cmp
pop
bound
push
sahf
add
add
pop
das
jns
aas
adc
mov
rorb
test
stos
out
nop
stos
and
loopne
cmp
xchg
xchg
loop
mov
and
adc
outsl
cmc
push
inc
in
dec
xor
out
cmp
loopne
add
pop
sahf
xchg
and
fiadds
dec
sub
and
mov
adcb
int
pop
popf
push
aas
lods
rol
int
cmc
test
push
inc
inc
inc
cmp
cs
pusha
xor
rolb
dec
insl
jae
sahf
push
push
loopne
mov
mulb
add
pop
cmp
xor
in
es
inc
sbb
lods
out
dec
mov
xor
cmp
rol
test
mov
pop
es
inc
jle
rol
mov
cmp
push
lcall
xchg
dec
daa
inc
aad
punpcklbw
cmp
and
loopne
jg
popf
and
nop
dec
movsb
pusha
pusha
in
divl
push
xchg
insl
xor
pusha
ret
push
shll
dec
jmp
lods
pusha
pusha
inc
loopne
std
lock
dec
and
pop
mov
lret
mov
rol
sbb
push
ja
addr16
shr
mov
pusha
pusha
in
vminss
push
push
pop
rcrl
shrl
jle
iret
mov
add
sti
movsl
sbb
xor
xor
mov
push
sbb
fdivr
mov
jo
or
popa
cld
icebp
push
mov
test
inc
pop
and
add
bound
rol
pop
fbld
inc
hlt
popf
or
rolb
mov
sub
mov
loope
pop
add
add
sub
and
addl
lods
mov
add
addb
ret
lret
cmpb
sub
xchg
nop
jo
vmread
xor
push
loopne
mov
cmp
js
rol
test
call
dec
add
and
xchg
outsb
sti
test
sarb
loopne
add
lock
testl
into
aam
sub
mov
pusha
pusha
andb
addb
adc
fs
add
nop
ss
push
mov
push
sbb
pusha
in
mov
and
nop
ret
and
hlt
push
sbb
addb
jmp
lret
dec
add
shlb
fisubs
cmp
loopne
jo
aas
in
or
inc
inc
sub
and
sub
rorl
ror
in
fwait
cmp
test
adc
mov
sub
rcr
jg
mov
mov
das
repz
sbb
mov
mov
sbb
cmp
mov
adc
or
sub
loopne
cmp
mov
aam
andb
cmc
in
mov
add
imul
push
loopne
mov
stos
jns
and
push
popf
cmp
inc
inc
les
mov
imul
add
and
sar
cs
pusha
or
sub
fs
adc
je
xchg
mov
xchg
xchg
iret
or
rclb
and
jbe
addb
jp
mov
push
inc
inc
gs
mov
ss
lret
pop
gs
je
fwait
addb
mov
xor
data16
test
inc
inc
insb
scas
fnsave
out
push
addb
stos
push
inc
aam
add
and
mov
cmp
and
ds
push
cwtl
mov
sbb
mulb
push
sti
daa
adc
loopne
and
dec
daa
xchg
insb
cmpsb
addb
mov
fwait
xchg
scas
pusha
pusha
xchg
pop
adc
mov
add
mov
outsb
sti
xchg
add
xor
outsl
and
xchg
sub
add
and
loope
rcll
mov
lock
sbb
rol
pop
xchg
jb
lahf
mov
xor
fistps
addb
or
jne
add
test
in
fcoms
mov
jns
in
pop
mov
push
cmp
addb
xor
enter
jl
popf
mov
addb
les
inc
push
jle
loopne
shll
inc
xchg
sbb
push
and
rcrb
xchg
inc
test
mov
cmpsb
loopne
pop
inc
and
addr16
pop
notb
cltd
mov
adc
in
add
and
cmp
adc
add
loopne
loopne
xor
pushf
out
addb
outsl
sub
and
sub
arpl
xchg
add
add
inc
push
and
jle
lret
cli
mov
gs
clc
xor
mov
cltd
dec
and
mov
xchg
push
pop
dec
sbb
or
icebp
sti
mov
push
mov
movsl
mov
inc
addl
mov
in
mov
addb
inc
call
rolb
andb
add
lahf
in
pop
sti
pop
and
mov
mov
mov
mov
addr16
jns
xor
jg
test
and
jle
inc
inc
aaa
jp
hlt
je
inc
and
ja
cwtl
xchg
add
add
mov
in
adc
mov
in
out
mov
jo
sub
xchg
inc
lret
ds
imul
addb
mov
pusha
jb
dec
xchg
enter
fsub
mov
dec
iret
aaa
and
pop
jecxz
mov
inc
rolb
xchg
mov
and
inc
inc
shlb
gs
add
and
pusha
add
adc
dec
mov
sub
rol
out
or
fisubl
and
loope
fldenv
and
loopne
fldcw
loop
jne
enter
lcall
ds
inc
pop
jl
inc
call
mov
add
cmp
inc
mov
mov
addb
pop
inc
xchg
pop
push
mov
rol
cmpsl
divb
xor
roll
mov
mov
inc
dec
incb
aam
mov
fwait
pop
and
mov
xchg
cmp
rcrl
cmpsb
pusha
pusha
sarl
mov
adc
pop
mov
add
bound
jge
push
adc
mov
mov
add
push
adc
int3
in
add
iret
in
ret
hlt
lods
clc
arpl
mov
and
rol
add
xor
call
ret
call
push
jae
mov
inc
inc
xor
push
addb
out
daa
add
addb
shrb
mov
mov
push
clc
loop
jp
cmp
adc
insl
adc
fstl
or
inc
xor
dec
mov
or
dec
xlat
or
loopne
xchg
push
pop
loopne
fiaddl
cmp
xor
push
push
dec
sbb
and
and
movsl
dec
mov
sti
and
mov
mov
test
mov
flds
adc
push
add
cltd
jp
lods
and
mov
add
hlt
rclb
push
loopne
sub
outsl
ret
push
loopne
push
pusha
pusha
ja
adc
rol
lret
push
leave
mov
das
out
mov
cltd
cmp
addr16
mov
cmp
xchg
pusha
push
cmpl
fidivrl
addb
cltd
pop
sti
push
out
and
loopne
jecxz
ret
loopne
inc
fimull
lods
xchg
pop
jne
popa
or
in
repz
rol
adc
mov
and
shll
aaa
out
push
adc
imul
or
aaa
fldcw
jl
shlb
jle
lret
add
push
aas
mov
lret
push
mov
stos
add
in
inc
stos
inc
inc
pop
gs
and
mov
or
imulb
jl
inc
xchg
jnp
and
and
cmp
inc
lret
arpl
jp
fs
pusha
pusha
inc
sbb
inc
inc
jno
jmp
inc
xchg
jle
inc
inc
repz
jle
ljmp
push
repnz
cld
dec
cmp
mov
stos
ret
rcl
gs
xlat
adc
sub
test
and
das
je
negl
out
ss
mov
addb
addb
dec
cmp
add
xchg
outsl
sbb
mov
jle
cmp
push
lods
and
xor
mov
push
ds
sub
pusha
pusha
jne
ljmp
je,pt
clc
std
xor
or
in
cmp
lods
lods
popa
dec
mov
in
sbb
fsub
sub
xor
insl
and
dec
inc
test
xor
lock
cmc
mov
inc
stc
cmpsl
inc
mov
pusha
pusha
pop
ds
or
cmp
icebp
in
fcmovnb
inc
pusha
and
loopne
sub
pop
inc
out
inc
sbb
loopne
pop
aas
pop
fnstsw
addb
in
dec
cmp
cmp
loopne
xchg
mov
arpl
mov
mov
add
inc
aad
sub
stos
rol
je
and
test
pop
xor
lock
loopne
pop
and
and
sub
sar
adc
andb
sti
cld
fistpl
pop
js
sbb
mov
jl
inc
mov
inc
fisubs
and
pushf
xchg
ss
xchg
sub
and
sub
loopne
mov
add
xchg
mov
test
inc
leave
ret
jns
jb
ror
sub
into
mov
cmp
dec
add
bound
outsl
imul
mov
inc
or
sub
stos
pop
ret
mov
popf
dec
pop
jl
xchg
out
movsl
dec
pusha
jbe
add
and
jle
fiadds
jbe
pop
cld
cld
outsl
rcrb
adc
and
add
inc
or
loopne
test
add
inc
gs
sbb
push
mov
test
pusha
rcll
add
fwait
push
ss
mov
adc
pushf
lock
aaa
jl
ds
popa
push
push
scas
rol
sbb
pusha
loopne
into
movsb
addb
addb
jg
out
fdivl
dec
bound
mov
mov
je
jne
dec
inc
cmp
pop
jp
push
mov
pop
push
xchg
cmp
clc
xchg
mov
inc
inc
jbe
inc
stc
repz
dec
ss
gs
loopne
js
add
xor
or
shlb
add
adc
xor
lock
push
xchg
stos
and
pusha
sbb
lock
mov
jb
mov
pusha
add
sarb
inc
icebp
rolb
mov
pop
fsts
and
cmp
aad
cld
xchg
jmp
xlat
inc
js
addb
clc
mov
imul
pusha
pusha
or
loopne
or
cwtl
insl
mov
out
pushf
arpl
test
xchg
inc
imul
pop
push
mov
xchg
jl
push
lock
imul
cmpsl
mov
fldt
and
mov
and
in
ss
cmp
and
loopne
js
mov
idivb
ffreep
adc
into
xor
cmpsl
gs
dec
out
loop
dec
gs
lcall
andb
sbb
ror
push
and
outsb
inc
or
mov
test
add
mov
mov
rolb
jae
negl
mov
xchg
push
es
pusha
jmp
cmp
cltd
cmp
fwait
or
dec
jecxz
nop
out
addb
xor
push
addb
mov
cmp
push
sbb
rol
mov
cmp
and
aaa
out
imul
stc
xor
stos
imul
add
pushf
add
leave
test
pusha
aaa
fldenv
imul
leave
rolb
pusha
pusha
shl
cmpsl
aas
lock
xchg
or
mov
imul
mov
add
shlb
mov
xor
les
movsl
ds
pop
cli
ss
ds
cmp
insl
jae
cltd
jge
outsl
xor
adc
and
aaa
cmp
and
xor
rol
mov
outsb
sub
loopne
imul
or
add
into
pop
addb
das
test
loopne
push
add
or
add
outsb
cwtl
iret
popa
pop
xchg
or
push
sub
add
xorl
loopne
leave
test
add
mov
pusha
pusha
dec
in
ficomps
stos
pusha
pusha
shll
sub
loopne
ss
dec
cmc
sar
rol
and
jl
sbb
addr16
jno
jnp
sub
pop
loop
cs
and
jnp
ljmp
dec
test
loopne
inc
sarl
js
fsts
rol
enter
std
jmp
mov
pusha
pusha
fisubrl
jcxz
jo
mov
aad
icebp
cs
inc
push
sub
shlb
enter
mov
push
inc
inc
jb
test
mov
in
and
test
sarb
out
mov
aaa
inc
inc
nop
pop
pop
pop
loopne
mov
sbb
pop
xchg
or
loopne
loope
shll
cwtl
decb
loopne
jnp
pop
and
xchg
ljmp
jg
cmpsl
push
loopne
pusha
mov
add
insl
andb
jge
adcl
and
pop
mov
ljmp
dec
fsubrl
mov
and
and
daa
and
push
mov
stos
mov
pusha
pusha
or
and
cltd
subl
pop
and
pop
add
cmp
inc
clc
repz
in
and
lret
addb
adc
data16
pop
push
or
ja
out
pusha
pusha
stos
stc
daa
mov
clc
add
push
into
adc
out
xchg
rol
push
les
adc
mov
rol
stc
imul
ja
pop
lea
add
and
lods
and
jne
movsb
pusha
pusha
mov
rolb
addb
add
test
add
or
and
adc
jae
add
mov
shlb
inc
inc
mov
test
push
and
xchg
and
xchg
xchg
loopne
add
jb
dec
xor
mov
inc
inc
sub
test
rcrb
add
xchg
cmc
push
iret
lret
and
subb
in
xchg
scas
rol
cmp
out
dec
dec
mov
sub
pusha
jmp
out
sub
rclb
popa
pop
sbb
jnp
dec
jecxz
fstl
and
xchg
in
pop
inc
xchg
xor
loopne
mov
inc
cld
std
pop
insb
leave
jne
cli
addr16
push
xorl
outsl
lods
pusha
pusha
idivl
rorl
and
repnz
pusha
pusha
aaa
fmuls
add
mov
jno
sub
add
mov
fistl
pop
hlt
aam
fs
cmp
and
shlb
stos
test
loopne
mov
fstl
mov
and
or
xor
mov
mov
daa
test
jno
