pop
xlat
enter
pop
insb
push
enter
cmp
in
dec
test
jle
pop
mov
push
int3
and
daa
jp
addb
fistpl
fldcw
scas
dec
ss
mov
mov
adc
xchg
ljmp
jne
push
pop
in
js
adc
cmp
rolb
inc
lret
int3
jp
pushf
mov
or
ja
fwait
push
mov
mov
popa
sub
xchg
cmp
dec
mov
in
xchg
in
xchg
add
push
fxch
or
mov
cli
or
mov
pop
jg
lret
push
push
ljmp
xor
adc
add
jae
mov
xlat
sub
sub
add
add
add
jo
cmp
ret
shll
ret
inc
add
xchg
push
call
nop
sbb
and
jbe
and
add
lods
mov
push
adc
imul
jg
sbb
cmp
mov
sub
cli
imul
pop
or
push
out
outsb
fnstcw
push
leave
pop
jge
inc
add
arpl
or
jmp
cmpsb
jge
sahf
adc
aad
jp
aam
notb
icebp
outsl
push
movsb
add
aam
rolb
add
add
xchg
outsb
dec
pop
jne
dec
out
in
jp
inc
stos
pop
mov
loop
int
dec
mov
inc
add
loope
lds
add
cmpl
stos
jnp
mov
shlb
mov
add
stos
jmp
imul
lret
popf
dec
dec
add
and
imul
jl
push
fcomi
outsb
mov
imul
aad
cmc
fistl
push
and
lret
insb
cmp
jmp
push
add
das
ljmp
xchg
pop
arpl
xchg
mov
sub
loop
pop
flds
cwtl
adc
add
fs
shlb
and
into
mov
cmpsl
fs
test
push
push
and
cmp
clc
cs
fdivrs
dec
mov
add
add
in
pop
cli
dec
or
movsb
jae
add
pop
fwait
xchg
cmc
mov
dec
stc
cli
jno
outsb
xchg
mov
add
cmp
push
jg
cvtps2pd
mov
add
fcomi
hlt
mov
and
lock
call
sub
mov
sub
fs
loop
enter
mov
leave
xlat
mov
mov
insl
mov
jg
enter
lods
pop
cmp
or
mov
sub
add
add
mov
aas
pop
sub
decl
inc
mov
sub
inc
add
repz
scas
cmp
or
test
cmp
mov
xor
movsb
idiv
les
test
inc
add
pop
inc
add
jo
addb
mov
cs
call
icebp
cltd
push
fsts
out
pop
or
mov
pop
out
packssdw
fucomi
in
out
mov
daa
push
jns
mov
dec
add
jp
jo
xor
orl
add
pop
mov
push
iret
shlb
add
sub
insb
stos
insl
push
addr16
hlt
pop
mov
test
les
movnti
pushf
and
push
mov
loop
xor
push
cmp
jnp
js
push
cwtl
mov
sbbl
lods
movb
mov
cltd
sub
push
add
dec
insl
cmp
add
add
call
add
call
das
mov
mov
xchg
lahf
mulb
mov
pop
insb
dec
sub
push
xlat
jmp
jns
inc
add
mov
mov
mov
xchg
mov
sbb
cmc
sti
fdivr
sub
aas
xlat
lods
jae
repz
xor
xchg
push
xor
add
mov
call
jnp
or
in
add
ljmp
sbb
lods
or
daa
pushf
insl
jb
inc
add
inc
add
dec
and
ficompl
push
push
adc
std
scas
mov
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
pop
add
mov
cs
push
push
lret
jmp
add
add
pop
jge
jecxz
int
jmp
cs
mov
inc
addb
fmulp
xchg
or
sub
inc
add
add
pop
sbb
cmc
popa
nop
test
or
inc
add
jnp
fldcw
pop
test
or
mov
rol
add
push
cmc
sbb
ja
mov
insl
repnz
out
stos
enter
shr
insl
cmp
add
addb
aas
jo
fs
mov
add
add
dec
inc
add
lods
cmp
shll
imul
lret
addb
cwtl
lods
pop
scas
sub
inc
add
sbb
stos
rcrb
add
and
add
dec
jle
movsl
inc
add
lods
lcallw
mov
cmp
push
lcall
cmpsl
jno
jle
or
mov
and
mov
fildll
sub
pop
jb
cmc
jl
ret
xchg
loop
add
lcall
rcr
xchg
xchg
cltd
pop
dec
shll
cwtl
adc
push
dec
or
mov
loope
aam
pop
or
and
mov
xchg
add
in
movb
cld
aam
or
push
idivb
xor
stc
pop
adc
fadds
sbb
push
std
adc
jne
pop
sbb
add
add
push
adc
add
xchg
mov
add
out
pop
jmp
push
jl
imul
add
inc
add
add
shrl
pop
lock
push
std
cmp
adc
loope
sub
mov
sbb
int3
sahf
mov
fndisi(8087
and
mov
xchg
dec
in
add
xchg
fdivrl
cmc
sahf
rorb
or
in
adc
sbb
inc
inc
leave
pop
jne
xchg
imull
pop
lods
insl
jl
fimuls
movsl
jg
mov
cmc
adc
dec
xlat
jo
das
and
ret
rolb
mov
xchg
imul
shll
cmc
ret
mov
inc
movsb
adc
jbe
add
cmp
mov
bound
aaa
mov
jge
adc
ss
xor
pop
out
sbb
mov
jns
test
mov
mov
stc
push
push
jb
mov
test
das
or
cmpsl
push
pop
cmp
mov
dec
ret
mov
jmp
cmp
add
push
shll
scas
fistpl
push
sub
lock
repz
out
push
sti
adc
add
pop
test
pushf
in
sbb
mov
jg
xchg
cmpsb
ja
movsb
movb
lea
cwtl
insl
sub
mov
cmpsl
inc
add
sub
push
adc
add
add
pop
jecxz
mov
cmp
orl
adc
lock
xlat
out
cmp
out
into
out
lods
push
fists
gs
pop
mov
cmp
mov
test
mov
ds
ret
pop
rolb
out
pop
and
fisubrl
or
imul
xchg
push
add
pusha
add
jno
add
notb
sub
pop
popf
incb
cmp
loopne
jle
pop
mov
xchg
jo
aas
js
mov
jp
cld
aam
addb
add
aam
xchg
es
sti
icebp
addr16
jmp
enter
add
stos
pop
jo
or
scas
sub
push
fcmovbe
test
mov
add
xchg
mov
rcll
add
jne
inc
add
pop
fsubrl
in
dec
sbb
mov
inc
add
adc
lret
stc
std
cld
jnp,pt
fnstenv
xor
xchg
ds
aam
cli
in
fsubs
add
fcmove
jae
add
fdiv
loopne
adc
insl
loope
outsb
and
push
xor
in
mov
fld
cmpsb
cmp
fimull
push
lret
addb
fcmovnb
add
mov
pop
jb
out
std
push
in
cmp
or
push
jae
and
lret
mov
out
and
xchg
cwtl
into
int
dec
mov
pop
push
push
mov
add
dec
cmp
mov
sub
shrl
add
pop
sbb
pop
loop
xor
jae
lods
and
movsl
xlat
dec
mov
jne
leave
mov
mov
jecxz
sbb
inc
add
push
inc
add
push
ja
filds
cs
sarl
xchg
subl
shlb
add
dec
xor
loop
sbb
lock
xchg
ljmp
push
jl
xchg
pop
aad
icebp
mov
fwait
xlat
stos
mov
push
jl
out
fsubrl
cmp
add
int3
mov
fsubrs
ss
fsubr
pushf
mov
addb
shl
jno
push
mov
lahf
int
rolb
sarb
test
insl
stos
popf
or
cmp
rcr
add
xchg
vpmadcswd
imul
addb
outsb
inc
push
in
sbb
mov
adc
sti
not
pop
xor
add
jle
xchg
adc
addr16
inc
vunpckhpd
push
jle
inc
mov
lds
insl
lcall
faddl
add
push
jae
test
sbb
movb
push
add
or
daa
mov
or
pushf
dec
pop
jp
mov
loope
add
add
cmp
cmp
in
pushf
sub
cmpsl
xlat
in
mov
push
jno
add
push
ret
dec
sbbl
cltd
call
push
sub
sub
push
add
pop
nop
dec
jmp
inc
add
push
adc
xor
scas
sub
divb
mov
sbb
cmp
add
jecxz
stos
cmp
adc
add
add
and
cmpsb
add
push
adc
cltd
clc
xor
loop
stc
cmpsl
push
push
dec
jg
mov
jp
jp
pushf
repz
push
adc
iret
xor
popf
mov
in
dec
rol
pop
pop
repz
add
ds
jecxz
sub
mov
notl
dec
fiadds
add
cmp
add
jg
and
scas
pop
jno
test
dec
or
lret
je
cwtl
pop
frstor
xor
fsubrs
xor
lea
mov
adc
out
inc
add
xchg
adc
fs
xchg
shll
shlb
cmp
push
pop
stos
in
pop
jno
sbb
orl
loop
adc
adc
inc
add
cmpsl
mov
mov
pop
stc
std
and
and
xchg
addb
and
cmp
cld
xchg
sbb
cmpsl
test
test
loop
add
icebp
push
movb
loopne
push
sahf
aas
mov
or
mov
add
pop
mov
mov
add
addr16
jne
mov
xchg
sahf
mov
pop
ss
in
jg
pop
out
sbb
dec
jg
xchg
fs
sbb
mov
pop
xchg
jecxz
xchg
or
xchg
les
mov
hlt
fildll
add
cwtl
cld
cmp
std
jle
mov
bound
insl
pop
arpl
push
pushf
lcall
jnp
xlat
mov
int
pop
mov
stos
loopne
es
ss
jbe
xchg
and
add
mov
loopne
adc
dec
sub
in
fs
fnstcw
enter
add
in
inc
add
ljmp
lock
gs
add
inc
add
lods
fstl
xlat
fsubrl
fsubrl
inc
add
insb
lds
fldt
push
add
insl
sarl
bound
and
data16
mov
daa
ret
add
add
pop
aam
mov
ret
jecxz
test
fwait
add
dec
mov
jle
jmp
in
xchg
mov
or
mov
or
fstps
popf
adc
popa
into
ss
loop
clc
push
das
loopne
dec
or
ficoml
outsb
add
add
sbb
in
dec
xchg
subl
inc
jl
mov
incb
push
ss
mov
daa
xor
movb
out
outsb
pop
roll
sub
daa
ret
dec
xchg
cs
ret
inc
jae
inc
add
lahf
cmp
movb
jne
jno
clc
rolb
xchg
repz
bound
jnp
add
out
popa
std
push
cmp
aas
mov
xor
xchg
imul
add
add
sub
aam
xor
and
push
daa
jne
loope
das
sub
mov
lret
jecxz
push
mov
arpl
lds
test
inc
add
fucomi
hlt
int3
mov
jnp
ljmp
lods
mov
pop
aaa
les
pushf
ficoms
xchg
push
add
pop
rcl
rcrl
insb
jecxz
push
mov
dec
pand
add
outsl
pusha
add
jg
mov
dec
pop
jno
ja
jo
and
loope
add
mov
mov
ret
add
out
shl
imul
divl
fnstsw
rcll
arpl
idivb
sbb
fisttpll
rolb
lods
dec
mov
or
mov
xor
xor
aas
jae
andl
add
aaa
jb
xchg
mov
rclb
nop
sti
leave
sub
mov
xchg
inc
add
or
sbb
jp
inc
les
call
inc
add
add
pop
and
lods
mov
mov
mov
lock
in
jo
pop
daa
sub
clc
dec
pushf
xchg
pop
sub
cmp
mov
or
add
insb
cmpsb
pop
int3
xchg
add
push
fwait
aam
dec
cmp
or
shlb
push
add
icebp
rolb
add
test
push
xchg
push
addb
dec
les
sbb
jb
jno
add
push
aad
lods
out
emms
jecxz
inc
add
xchg
mov
sbb
out
rolb
pop
enter
sbb
cmp
add
dec
pop
mov
repz
cs
dec
push
mov
stos
fadd
add
cwtl
std
jecxz
aad
cmp
mov
lock
add
and
add
test
stc
sub
lods
or
add
pinsrw
xor
loop
push
jge
add
inc
shrl
jl
pop
jae
pop
jb
roll
dec
mov
mov
les
mov
fists
mov
or
lods
out
ret
mov
pop
aam
stos
mov
mov
push
xchg
iret
xor
mov
jmp
push
jle
xchg
aaa
orl
cld
stos
int3
dec
imul
outsb
dec
out
adc
in
mov
ret
add
pop
push
adc
jl
sbb
xlat
push
cmc
mov
out
or
sub
and
jle
cmp
mov
negb
fldcw
add
add
jb
aas
rorl
xchg
and
jg
add
ret
lret
pop
out
and
sbb
ljmp
sub
add
lcall
dec
xchg
shlb
hlt
cmp
inc
add
fadds
add
repnz
int3
xchg
rolb
addb
adc
shll
xchg
sbb
notb
add
std
icebp
mov
xor
lret
or
push
sub
sbb
lods
in
jb
mov
cmp
mov
xchg
mov
pop
sub
mov
aas
push
cltd
leave
dec
push
add
xor
loopne
rol
fimull
lret
jns
decl
mov
adc
clc
jp
and
out
inc
add
adc
add
inc
add
sub
add
ret
mov
test
or
pop
in
out
lret
lahf
nop
rclb
in
jle
or
imul
bound
scas
lea
or
int
faddl
shll
adc
fldl2t
into
mov
inc
add
ret
jl
addb
sbb
pop
ret
iret
inc
insb
stos
xchg
shrl
jno
popf
psubd
ss
dec
cmc
out
sbb
add
mov
aaa
std
aad
push
ds
adc
stc
int3
push
cmp
push
andl
add
add
adc
adc
xchg
mov
push
addb
sbb
stos
jp
inc
add
aam
push
int
pop
jmp
loopne
ss
pop
out
insb
fwait
das
push
add
xor
cmp
inc
add
cmp
mov
xor
add
out
shlb
addl
mov
mov
and
movsl
inc
mov
je
leave
lret
das
pop
cmpsb
scas
dec
mov
and
fstl
ss
add
lea
aas
inc
xchg
mov
add
enter
or
idiv
pop
mov
mov
add
addb
jnp
xchg
pop
mov
je
pop
pop
or
imul
ret
mov
inc
add
imul
mov
lock
and
add
lahf
out
xor
pop
fadds
fistpll
rolb
cmpsl
mov
jno
add
add
stos
mov
xchg
sbb
in
ss
imul
in
pusha
add
xor
rcll
jae
ret
cmp
cs
add
ja
dec
pop
clc
data16
pushf
outsb
mov
stos
jmp
fdivs
scas
xchg
pop
insl
push
hlt
mov
subl
lahf
inc
add
int
rolb
or
into
int3
into
dec
mov
push
movb
inc
gs
fldt
and
add
loop
repz
and
subl
add
movsb
popa
pop
gs
sti
ja
fld
sbb
outsb
insb
xchg
jae
mov
ja
push
lret
xchg
pusha
add
xchg
push
mov
mov
pop
or
aam
cmpsb
add
sub
mov
push
pusha
add
ljmp
mov
inc
mov
inc
push
and
adc
cmp
or
pop
lahf
mov
je
jmp
bswap
cmp
lods
je
out
or
fcomps
addb
out
inc
add
and
jno
cmp
jnp
pop
or
pop
cmp
mov
sbb
cwtl
or
add
mov
add
jo
incb
out
and
imul
js
add
sbb
scas
xor
mov
out
out
or
js
sti
cmpsb
inc
add
dec
cld
loope
fsubs
xchg
xchg
test
ds
int
or
dec
jns
test
sahf
daa
mov
lret
sub
cmc
les
sbb
iret
sub
lds
dec
in
adc
int3
cmp
rorl
add
aas
idivl
ja
je
push
mov
push
xchg
add
insl
push
ja
movb
sub
sub
outsb
push
sbb
cld
sbb
cmpsl
cmp
mov
add
ja
xchg
mov
pushf
scas
loope
sub
xor
add
popf
pop
inc
sbb
out
push
xchg
das
cmpsb
dec
int3
addb
push
dec
jne
arpl
mov
mov
pop
add
xchg
popf
ljmp
cmp
xchg
inc
add
sub
or
jnp
jae
negb
adc
xor
push
cltd
lahf
dec
xchg
rcrb
cmovl
loopne
mov
jecxz
dec
push
xchg
and
jp
jle
xchg
sbb
add
dec
or
mov
shl
cmp
add
fdivl
je
outsb
sbb
out
cmp
ret
dec
cli
sub
clc
mov
imul
adc
dec
mov
cld
push
add
mov
adc
xchg
xor
inc
add
into
jmp
in
jns
sarl
adc
sub
mov
mov
pop
fucomp
call
inc
in
out
movsb
ss
std
in
xor
lock
or
into
jo
mov
cwtl
mov
jbe
hlt
xchg
adc
xchg
mov
and
notb
pop
and
push
add
push
add
mov
push
addr16
cmp
mov
push
int
mov
cmp
dec
addb
addb
add
add
lds
icebp
shrl
rclb
pop
lret
or
outsl
test
shrb
jo
add
sbb
mov
add
dec
pusha
add
fistps
in
mov
adc
loope
ja
xchg
jns
cmpsb
pop
shll
and
mov
mov
into
sahf
inc
inc
add
and
pop
sbb
push
xchg
das
jo
jb
xchg
inc
pushl
addb
into
adc
cltd
inc
test
pop
out
and
and
add
jecxz
in
jg
jge
or
pop
shlb
push
mov
mov
test
mov
divl
add
mov
mov
push
push
mov
jns
cmp
adc
sub
add
or
pop
ds
and
stos
hlt
sbb
bound
test
sahf
test
or
inc
add
test
and
repnz
in
add
aas
or
mov
adcl
add
jp
or
insl
or
jno
adc
sahf
pop
movb
test
lahf
and
cwtl
lds
in
out
add
jns
inc
add
dec
push
lea
cli
fsubrl
sbb
xor
add
jne
fisttpll
push
lods
ret
pop
cmp
lcall
mov
fistpl
mov
lcall
xlat
and
lret
dec
adc
add
insl
popf
sub
cmpsb
je
sub
dec
call
jae
fdivl
jp
cmp
adc
add
add
sub
push
jns
add
dec
pushf
and
xchg
mov
sbb
xchg
lahf
shlb
adcl
pop
pop
push
cwtl
or
addb
sbb
inc
lods
leave
push
jns
stos
push
mov
fcom
cmc
push
int3
loope
jne
cmp
add
add
popf
cmpsl
jl
into
push
ss
imulb
mov
addb
aad
mov
mov
outsb
out
push
jg
sub
mov
sbb
add
stos
call
and
movb
insl
push
test
lods
lock
add
pcmpgtw
lret
xchg
xchg
jbe
mov
cmp
cmp
xlat
dec
fs
scas
add
rcrl
or
sbb
add
add
dec
and
add
add
das
dec
idivb
cmp
xchg
out
and
and
xlat
nop
addb
test
scas
adc
xor
inc
add
add
sub
push
sub
dec
aam
fisubrs
mov
out
cmc
clc
dec
or
push
repz
insl
jns
adc
lods
lds
add
pop
call
jns
dec
mov
jb
cmp
add
ja
scas
mov
int3
fdivrs
and
inc
dec
pop
xor
bound
mov
mov
int3
imul
cmp
push
add
fldl
push
ljmp
stos
arpl
loop
sbb
int3
fsincos
mov
rorl
xchg
arpl
test
fs
adc
ret
cmp
loopw
push
push
repnz
or
push
dec
stos
fldenv
add
clc
out
add
scas
imul
sahf
mov
out
pop
shlb
ja
sub
mov
add
push
and
mov
addb
das
movsl
loopne
int
add
jae
cmp
jnp
push
add
sub
arpl
add
inc
add
inc
add
fsubrl
push
xor
push
lret
cmpsb
mov
jo
fsubs
fmul
jp
add
add
daa
pop
or
add
int3
mov
mov
pop
xor
outsb
sub
add
in
sahf
hlt
stc
sbb
lods
xor
addb
scas
or
jb
xchg
push
int
pusha
add
mov
mov
jae
push
add
in
add
jp
scas
jne
shrl
leave
rcll
out
mov
sahf
lds
arpl
out
rclb
ja
dec
pop
xlat
rcr
out
rolb
inc
shll
cmp
xor
mov
xor
cmp
push
add
mov
jns
pop
jmp
cmp
dec
xchg
addr16
and
jl
xorl
mov
lahf
cmpsl
sbb
das
out
movb
adc
enter
or
add
imul
leave
imul
test
ret
pop
jecxz
fldl
out
add
pop
out
ja
scas
cmp
xor
fs
mov
fdivl
lret
lock
mov
push
add
pop
sbb
xlat
outsb
sub
pusha
add
fwait
bound
in
mov
add
lahf
push
cltd
fisttpl
pop
cmpsb
inc
push
xlat
push
add
add
leave
stc
jle
add
xor
sbb
mov
arpl
call
dec
and
fwait
push
cs
add
clc
pushf
mov
out
mov
fnstcw
jns
adc
xlat
jb
repz
out
sub
and
push
je
lock
arpl
movb
fnsave
lret
mov
ret
sti
sbb
mov
sub
stos
xrelease
cltd
je
sbb
add
pop
or
inc
add
cmpsl
leave
xchg
cmpsb
pop
dec
mov
cmp
ficoml
sub
ret
adc
push
inc
ret
xchg
mov
call
loop
fs
aam
push
mov
loopne
loope
les
push
add
add
and
sub
popa
add
mov
mov
pmaxub
orl
ret
mov
lock
xchg
pop
lret
pop
sbb
mov
test
nop
lds
add
pop
out
or
xchg
mov
add
mov
push
ds
addl
adc
dec
push
dec
cmp
pusha
add
adc
jle
adc
add
adc
adc
or
outsl
adc
add
mov
mov
mov
or
pop
or
jnp
pop
xor
sub
stos
sbb
lods
mov
pop
jle
and
movsl
outsl
insl
and
or
and
repnz
cmc
sub
nop
and
push
xchg
cmp
add
mov
test
js
mov
jnp
add
loop
es
imul
add
cmpsl
fisttpl
rolb
addb
pop
call
inc
add
divb
lods
lret
pushf
stc
ficoms
out
sbb
mov
ljmp
mov
mov
ret
fsubrl
je
xchg
mov
jl
loop
xor
adc
add
mov
jl
jmp
cmc
mov
cmpsl
call
in
gs
and
stos
int3
xchg
outsb
iret
cmpsl
mov
add
mov
sbb
loope
stos
and
in
sub
je
add
mov
add
xor
les
es
aaa
pop
pop
test
rolb
cli
push
pop
xchg
jp
add
ret
pop
inc
add
mov
mov
call
dec
adc
mov
bound
sbb
dec
mov
popf
fchs
xlat
fwait
push
das
pop
inc
popf
test
mov
sbb
mov
add
add
loop
or
fs
or
push
iret
nop
mov
shl
popa
sbb
jbe
movsb
add
mov
mov
xlat
mov
call
cmp
push
add
iret
push
stos
mov
mov
bound
push
dec
push
xor
loop
in
pop
popf
imul
xor
cmp
leave
lods
or
add
cmpsb
add
rcrb
ss
push
add
fwait
pop
dec
or
cmp
fdivrl
out
xor
lret
fwait
test
cs
cli
mov
icebp
dec
xchg
shll
adc
add
xchg
or
add
in
dec
cmp
fistl
sbb
mov
xchg
bound
fwait
mov
dec
sbb
icebp
aaa
jae
es
cmpsb
push
dec
sar
out
xchg
mov
movsl
jno
xor
add
mov
mov
cmp
inc
sahf
insb
ret
rolb
imul
inc
add
lcall
jmp
les
testl
mov
push
jmp
add
pop
push
je
lret
lahf
inc
and
je
fdivl
rolb
ret
lcall
repnz
out
js
jg
sbb
cmp
adc
fwait
addb
mov
add
dec
lods
adc
pop
fildll
add
add
mov
jo
aaa
jne
or
add
add
ret
pusha
add
jno
enter
mov
mov
push
sarb
imul
repnz
adc
out
hlt
sub
aaa
dec
test
movsl
int3
adc
cwtl
idivl
cmp
dec
and
lcall
int
ret
in
fistpll
pushf
outsl
jbe
jnp
in
arpl
xchg
aaa
stos
std
cmpsl
or
add
and
test
mov
add
dec
es
enter
scas
ljmp
sub
mov
push
push
lret
sbb
outsb
cmp
jl
sti
test
jae
xlat
ds
pcmpeqw
int
cmp
loope
jl
jae
or
loope
cmp
pop
pop
leave
pusha
add
pop
shll
xchg
pop
mov
rclb
call
add
pmullw
dec
xchg
sub
lods
mov
add
int3
mov
inc
add
and
popa
add
mov
insl
movb
sub
int3
push
xchg
mov
sub
mov
addr16
and
pop
push
mov
inc
jl
sub
xor
xor
stos
xchg
mov
and
xor
cmp
adc
std
roll
test
jae
pop
mov
mov
inc
add
dec
or
in
fs
and
outsb
cmp
in
sub
in
movsl
xor
mov
fwait
sub
adc
add
aam
lds
xchg
addr16
js
aad
inc
mov
les
jb
mov
mov
cs
mov
dec
push
movsb
dec
mov
nop
inc
add
inc
add
add
push
jg
dec
js
add
or
xchg
jp
pop
int
pop
push
sub
addr16
mov
lea
test
sbb
sahf
nop
stc
inc
jmp
jb
insl
mov
test
mov
add
add
adc
fs
int
popl
xchg
lcall
cli
pusha
add
xchg
inc
loopne
cmp
mov
pop
pop
cltd
cmc
test
add
cwtl
add
sbb
mov
xchg
and
test
inc
add
push
lcall
pop
daa
and
pop
in
insl
jmp
adc
imul
cwtl
and
sbb
jmp
add
jp
xchg
jge
outsb
push
mov
ficoms
xchg
jge
add
adc
jb
je
push
icebp
xchg
adcl
adc
push
adc
sbb
out
mov
loopne
movsl
ds
sub
xor
dec
lahf
and
jp
xchg
jbe
dec
pop
mov
pop
negl
inc
add
pushf
std
and
and
lcall
or
add
loope
ja
int3
data16
add
mov
lret
xor
adc
adc
xchg
pushf
sbb
movsb
xchg
arpl
stc
cmpsb
xchg
mov
jmp
in
pusha
add
cmp
add
or
daa
xchg
xchg
lcall
aam
lods
jbe
icebp
fiaddl
add
or
fucomp
ret
js
and
mov
repz
fstpl
mov
rcrb
and
lds
das
sub
mov
out
jae
sbb
mov
scas
idiv
out
loop
and
popa
test
mov
popf
mov
adc
dec
lret
add
add
inc
cli
test
shrb
cltd
sub
mov
fwait
les
outsb
movsl
adc
adc
mov
xchg
ja
add
jns
outsl
jns
cmp
xor
or
int3
out
sbb
cld
add
xchg
in
pop
popa
stos
mov
dec
imul
sti
jl
or
in
pop
mov
ret
movb
lret
dec
ja
add
lods
dec
fadds
push
addl
sub
test
mov
cltd
out
fnstcw
add
aaa
ja
push
lods
ficomps
mov
add
addr16
pushf
mov
mov
mov
pop
nop
jns
inc
loopne
inc
add
jns
dec
leave
rorb
mov
jp
dec
hlt
aaa
cmp
mov
mull
sbb
in
outsb
jmp
cmp
add
cmc
jle
stc
sub
outsl
jl
loope
add
aas
or
aas
or
cmp
jns
jmp
mov
jb
mov
ss
out
add
adc
loope
xchg
iret
jmp
or
stos
push
lods
frstor
aaa
loopne
inc
push
xor
add
push
rolb
stos
push
adc
add
mov
loope
clc
cwtl
push
mov
pop
sub
add
add
hlt
push
xchg
pop
xchg
sbb
mov
sub
sti
xor
jno
xchg
mov
jmp
add
xchg
cmp
add
fimull
dec
xor
sbb
mov
cmp
addb
xchg
cwtl
mov
xor
aas
les
in
add
pop
loop
mov
movb
sbb
adc
arpl
cmp
adc
pop
xlat
repnz
and
mov
movsl
in
nop
das
xchg
mov
lret
mov
add
and
dec
inc
add
jnp
stos
mov
and
push
jns,pn
add
lods
xchg
test
ja
movb
cwtl
xor
mov
add
xchg
mov
out
stos
std
fsubl
das
jmp
es
add
xchg
cmc
pop
jnp
inc
add
jmp
cmpsb
mov
adc
xor
sub
add
dec
into
jg
imul
aas
int3
lds
call
loopne
mov
xlat
mov
add
lret
adc
out
pop
dec
insl
push
sbb
aad
push
test
addb
das
xchg
mov
jbe
ficoml
bswap
jns
sub
stc
movb
scas
jno
lret
xchg
add
or
or
shll
popf
in
xlat
sub
xor
std
fwait
les
addr16
and
add
repnz
jp
push
fldt
jge
sub
add
push
mov
inc
add
in
mov
mov
cs
fidivs
imul
mov
xchg
cmp
clc
lcall
cwtl
fxch
shll
jne
pop
dec
jl
adc
imul
cli
xor
rol
add
test
xchg
dec
pop
adc
fwait
sbb
mov
addb
js
mov
aaa
aam
push
lcall
fimuls
and
in
and
jb
inc
rolb
mov
movsb
enter
or
cmp
repnz
addb
mov
dec
aam
sbb
mov
pop
scas
std
sti
imul
shlb
lret
enter
pushaw
add
xchg
sbb
xlat
loop
and
sub
fsubrl
and
mov
sub
cmp
aaa
xchg
mov
sub
movsb
push
adc
mov
dec
mov
inc
push
xchg
ds
nop
inc
add
pop
pop
je
cli
adc
cs
adc
sbb
pop
push
addb
xchg
add
dec
push
push
cmp
pop
movsb
fldcw
in
iret
call
jbe,pn
sub
xor
inc
jb
aam
add
sub
push
mov
push
sbb
enter
stos
mov
lock
xor
mov
cmp
sub
jge
lahf
int3
stos
jno
mov
add
add
add
add
popf
jnp
add
sahf
adc
nop
inc
add
and
mov
jmp
cmp
jnp
leave
stc
dec
clc
fcompl
add
mov
add
icebp
mov
jmp
push
arpl
popf
mov
sub
inc
add
add
sbb
or
int
lahf
scas
es
cmp
add
jne
rcrl
pop
and
fs
jnp
cmc
cmpsl
sbb
les
ss
push
mov
xchg
iret
fs
and
and
fisubs
pop
sub
jb
add
add
movsl
and
pusha
add
or
int3
jp
pusha
add
mov
sbb
ljmp
jbe
push
rcrb
dec
mov
pop
lds
add
add
and
push
pop
out
mov
scas
imul
add
push
cli
adc
push
sbb
loop
sub
scas
inc
dec
ss
addb
add
mov
add
and
sbb
sahf
pop
push
xchg
test
or
das
sbb
add
push
out
bound
roll
sbb
inc
add
sub
ja
add
push
pusha
add
icebp
xlat
push
add
add
mov
fisttpll
inc
add
mov
cmp
add
and
repnz
scas
scas
xor
scas
push
push
inc
add
iret
jmp
cmp
pop
mov
dec
fcmovu
inc
add
scas
or
cmp
pop
imulb
mov
push
push
repz
popl
xchg
ffreep
inc
cmovne
popa
stos
jge
lcall
xchg
fistl
pop
cltd
fwait
pop
cltd
mov
lcall
clc
push
cmpsb
add
adc
out
push
dec
cmp
in
mov
add
add
add
mov
sbbl
mov
xchg
adc
fdivp
call
jns
add
mov
in
mov
and
cld
bound
pop
shl
pop
div
jge
in
inc
mov
insb
or
adc
push
add
sbb
test
test
ds
add
cmp
adc
fstpt
xchg
mov
lods
fiaddl
push
stc
aad
dec
sbb
outsb
outsb
in
dec
aas
add
negb
dec
jg
pop
mov
in
add
jns
rorl
lahf
lea
add
add
xchg
cmp
adc
scas
and
jp
fistpl
fnsave
add
lahf
adc
stos
fiadds
sbb
stc
ret
jne
adc
or
inc
mov
fwait
in
mov
insl
inc
loop
jae
adc
sub
test
push
dec
push
xor
jmp
xchg
popf
insb
into
or
lret
inc
add
add
dec
pop
xor
push
cwtl
hlt
cwtl
push
mov
bound
jnp
add
sbb
add
pop
and
push
fnstenv
bound
mov
mov
add
mov
repnz
push
xchg
pop
daa
jmp
bound
xchg
loopne
sbb
test
and
les
pushf
mov
add
aaa
xor
int
rcll
push
loope
sti
sti
xor
fs
add
jl
fstp
icebp
add
mov
add
notl
mov
xchg
jns
xchg
jp
or
add
lret
mov
stos
xchg
sbb
xor
sub
mov
adc
das
call
jmp
gs
dec
push
pop
add
inc
je
fs
mov
mov
in
scas
xor
test
in
xchg
xor
dec
invd
jns
leave
jg
sbb
das
loope
push
lods
mov
pop
jo
pop
scas
popl
add
loopnew
lahf
push
mull
and
fdivl
jmp
es
xor
jae
sbb
lret
mov
sbb
adc
add
sbb
mov
pop
cli
inc
sahf
mov
or
push
or
mov
mov
outsl
out
cwtl
daa
push
and
adc
add
xchg
int
dec
loope
sub
int3
insl
jae
push
xchg
and
bound
cld
hlt
jmp
add
add
adc
mov
pop
into
in
inc
add
int
mov
xchg
fsubr
fcomps
std
adc
outsb
setg
add
push
dec
repnz
pop
xchg
pop
pop
sub
repz
pop
pop
fstps
scas
push
pop
je
add
jo
xchg
xchg
ja
push
add
outsb
cmp
and
sub
xorl
int
pmuludq
pop
xlat
lcall
mov
and
shl
test
sub
jmp
lea
rol
mov
fwait
rolb
test
js
dec
inc
add
nop
adc
sbb
mov
add
xchg
popf
mov
pop
push
jnp
rol
cmp
jle
and
out
dec
cmp
fisttps
aad
out
add
inc
add
pop
imul
filds
cwtl
icebp
and
pop
fisttps
scas
arpl
push
mov
pop
into
addr16
mov
fisttpl
cwtl
xor
jp
fisttps
cmpsl
pop
mov
mov
cmpsl
imul
xor
xor
pop
and
xor
das
mov
scas
ret
pop
enter
xchg
dec
call
mov
and
jl
sbb
push
enter
jecxz
pshufw
cmp
cvtpi2ps
imul
push
push
mov
rolb
add
lock
xchg
dec
push
adc
repz
and
in
adc
aas
sub
dec
icebp
mov
cmp
out
psrlw
call
sbb
loop
mov
shl
pop
ljmp
inc
in
bound
in
or
xor
outsb
mov
mov
cmp
adc
lret
adc
add
cmpsb
xor
cmpsb
fs
add
arpl
xchg
xchg
mov
enter
or
out
inc
lret
out
push
sbb
cli
xor
dec
ret
or
bound
sub
xchg
jo
push
pop
and
out
data16
icebp
fnstenv
xchg
std
xor
jo
movsb
repz
and
add
add
pop
push
mov
jmp
jp
daa
xchg
adc
inc
add
cli
int
ss
cmpsl
pop
ror
inc
add
roll
out
inc
mov
incb
add
lahf
mov
inc
add
out
add
jmp
shll
aam
add
add
add
cli
mov
notb
xor
xchg
movb
push
sbb
insb
lods
dec
mov
or
imul
outsb
dec
jge
cli
in
nop
imul
out
mov
push
outsb
push
add
rolb
jl
enter
jnp
add
mov
dec
std
sub
scas
shr
imul
dec
add
xchg
or
inc
data16
aad
push
dec
les
bound
bound
enter
scas
fs
or
into
xor
xchg
cmp
inc
mov
cld
pop
jo
add
xor
lods
pop
das
inc
jns
add
ja
mov
popa
cmc
cmp
rorb
lret
jnp
jmp
push
imul
popa
inc
add
and
mov
push
and
andl
mov
div
xor
leave
std
ja
jns
mov
adc
xchg
repnz
jbe
add
fimuls
mov
pusha
add
push
jns
and
sahf
addr16
mov
mov
addb
push
movb
add
dec
adc
add
cltd
mov
lods
dec
divl
xchg
pop
xor
mov
sbb
out
negb
cwtl
cmp
xchg
fsubrs
mov
ret
inc
iret
mov
lods
ja
sub
adc
inc
add
repnz
pushf
ret
pop
clc
inc
add
cmp
mov
add
dec
xchg
jne
lcall
cltd
pop
fs
addb
movsb
jbe
xchg
test
std
movsl
jmp
xchg
movsb
pop
lock
stos
sub
in
sub
cmpsl
mov
je
out
movb
add
add
inc
push
das
pop
shlb
mov
test
pop
adc
popa
aad
sbb
rcrl
addb
sbb
fnsave
int3
push
and
add
fidivrs
sbbl
mov
lret
jae
add
push
ficoml
xor
sub
ds
insl
out
xor
xchg
cmp
inc
add
clc
rcr
std
imull
or
add
push
imul
addb
inc
add
and
sbb
jp
or
and
sub
xor
pop
mov
add
imul
in
jno
add
add
lret
mulb
sub
or
lea
dec
je
lret
inc
clc
addr16
and
aaa
test
or
push
bound
inc
add
dec
jbe
out
xor
cli
loope
xchg
cmp
popa
xor
loop
imul
xlat
cmp
and
es
mov
fcmove
jno
clc
outsl
dec
add
lods
pop
push
jae
stc
jo
sub
add
add
sbb
push
imul
add
jl
or
aas
in
sbb
cmovg
call
xchg
inc
add
mov
or
ljmp
and
pop
bound
movsb
lret
sub
inc
jl
cmp
add
aaa
push
test
add
push
test
jl
lret
nop
xchg
mov
xor
xor
lret
movntq
out
jnp
outsl
out
cld
ret
dec
pop
pop
cli
popa
xchg
cwtl
fdiv
mov
int
cmpsb
daa
pop
stos
adcl
nop
cmc
js
fistpll
mov
xchg
cmp
pop
inc
dec
fmulp
jmp
cmp
mov
xchg
rorl
push
test
cld
mov
arpl
sbbl
mov
add
test
sub
addb
push
pop
pop
mov
jge,pn
jmp
fiaddl
rorb
add
jo
cmp
scas
sbb
push
cli
out
jno
rolb
xchg
movb
mov
add
pop
xchg
sbb
adc
lret
sub
jnp
push
push
jle
insl
rclb
jo
add
adc
movsb
xor
add
enter
push
nop
dec
lds
xor
outsb
scas
pushf
stc
and
xor
xchg
sbb
je
or
lret
jle
int
add
icebp
jo
add
add
add
xchg
addr16
inc
or
addb
pop
clc
push
cmp
add
mov
adc
dec
add
lods
and
push
push
push
xor
fwait
clc
aad
cltd
dec
imul
jnp
cmp
add
pop
push
hlt
je
popf
sti
mov
ror
pusha
add
pusha
add
lahf
mov
or
lods
inc
add
pop
inc
cmc
cmp
jge
faddl
sbb
mulps
mov
or
addb
mov
pop
mov
mov
add
in
dec
mov
mov
sub
mov
add
addb
fadds
mov
inc
test
add
sub
mov
add
adc
xchg
repnz
add
testb
add
push
les
xchg
xchg
xchg
sub
cs
mov
or
add
test
add
adc
cmpsb
push
sub
cmp
ljmp
inc
add
adc
pop
and
jne
loop
ret
movd
aas
mov
add
pushf
lcall
or
fistps
add
xor
dec
repnz
mov
push
pusha
add
add
loope
pop
pop
jl
mov
cmp
pop
decl
mov
or
movsb
sbb
iret
lret
arpl
mov
shrb
mov
add
jle
icebp
fisttpll
push
scas
into
shlb
ds
das
andl
jb
into
adc
add
mov
fsub
or
mov
cld
xchg
out
dec
fsubrs
fildll
mov
sub
xchg
mov
pop
fadd
add
and
lock
hlt
fldl
mov
out
mov
rolb
addb
add
jne
jbe
jmp
add
aaa
push
mov
inc
add
push
add
cmp
testl
or
pop
addb
inc
add
pop
fs
jg
stc
jnp
cmpl
adc
imul
aam
out
js
add
rcl
mov
inc
add
fidivs
add
sbb
dec
mov
cmp
pop
xor
int3
insb
ljmp
outsl
clc
xchg
pop
dec
mov
mov
out
sub
add
fsubs
lods
xchg
stc
or
adc
inc
popf
repz
xor
out
sbb
and
fists
rolb
fsub
loop
je
add
ljmp
mov
idivb
mov
pushf
in
pop
lods
popf
lahf
xchg
dec
xor
flds
add
push
movb
sbb
aaa
dec
fldl
in
jo
stos
sub
jae
add
fdivr
decb
iret
add
cld
repz
pop
adc
jnp
or
push
sbb
cmp
rol
add
lahf
mov
mov
ds
or
mov
add
and
jl
xor
inc
jnp
inc
pop
daa
push
add
xor
or
add
pop
inc
out
dec
sub
add
aas
adc
adc
add
gs
dec
inc
inc
mov
outsl
xor
jg
jne
test
jae
popf
lods
sar
sbb
adc
cmp
aad
jecxz
shr
mov
mov
popf
leave
inc
pop
mov
sbb
inc
popa
cltd
inc
add
adc
fisubrs
xor
int
sti
imul
fs
and
repnz
sub
movb
daa
adc
int
cld
aam
dec
loop
ja
add
mov
es
or
and
lret
pop
in
loop
cmpsb
jg
pop
mov
mov
fldt
cmp
mov
ja
sub
adc
add
clc
push
outsb
popa
loop
sbb
movsl
inc
add
add
mulb
and
stos
cmp
loopne
jno
aaa
jae
mov
cmpsl
rcrb
jb
push
out
iret
fldt
fstp
push
test
mov
mov
xor
jecxz
loopne
sub
repnz
fstpt
lea
adc
inc
inc
add
sub
out
and
insl
adc
lds
jmp
lock
aam
cmp
popf
jecxz
inc
add
addr16
push
fiadds
mov
mov
sti
lds
add
sub
mov
push
mov
push
repz
sbb
dec
or
inc
xor
add
cmp
mov
popa
push
addb
cs
out
fstpl
xchg
push
cmc
pop
pop
sub
rorl
fcompl
add
dec
rolb
bswap
xor
cli
mov
add
jae
add
pop
mov
sti
xor
or
aad
lock
je
jmp
or
push
pop
push
pop
or
fmuls
inc
and
test
and
mov
inc
ret
in
jnp
mov
arpl
out
sbb
cmp
mov
add
lcall
shld
jle
mov
sub
cltd
jmp
hlt
mov
and
cld
or
call
mov
mov
movsl
into
pop
pop
out
jmp
enter
cmpsl
aam
int3
cmc
jl
movsl
lods
add
ss
ja
inc
add
popa
sub
rclb
add
lods
mov
shrl
adc
cld
jnp
imul
push
pop
psubsb
clc
inc
add
arpl
aas
mov
fsts
mov
out
out
xlat
pop
mov
add
in
loop
lret
mov
cmc
mov
and
pop
jne
gs
stos
jge
scas
push
out
rolb
add
jo
add
or
push
mov
addb
repnz
pop
fisttpl
inc
add
call
xor
dec
sub
and
inc
add
bound
ss
xor
imul
mov
mov
sbb
push
cmpsb
jnp
mov
and
add
mov
cmpsl
sbb
in
xchg
movsl
dec
xor
scas
into
enter
jge
scas
dec
mov
rorl
xor
push
icebp
mov
pop
sub
add
fisttpll
adc
in
shll
js
ja
ret
pop
dec
add
ret
lea
mov
mov
add
dec
or
int
adc
pop
sub
aaa
push
add
outsl
lods
rolb
adc
mov
xchg
jo
mov
cmpsl
dec
addb
out
fwait
popf
rcrb
jmp
sub
mov
movsb
inc
sbb
xor
mov
mov
adc
pop
push
sbb
ret
aad
ja
shll
inc
add
fstl
jns
decl
movsb
outsl
clc
xchg
outsb
out
push
mov
or
xlat
incl
jae
out
cmp
or
xchg
mov
add
fisttpll
andl
xor
jae
bound
lahf
ret
outsl
inc
add
add
mov
add
jp
add
in
jb
mov
or
add
jne
adc
nop
aaa
stos
fs
dec
jge
push
add
inc
test
add
push
mov
imul
cmp
fadds
mov
pop
push
add
imul
jg
add
mov
add
imul
sbb
pop
dec
pop
inc
push
lea
jae
or
add
mov
aas
pop
jae
rol
cmpl
sub
jb
adc
jnp
adc
mov
dec
lcall
push
fcompl
addb
sbb
mov
lock
dec
stos
and
into
jbe
pop
inc
add
xor
push
inc
xchg
fistpll
das
adc
scas
sarl
fdivl
mov
mov
inc
add
loopne
aam
push
add
lahf
cmpsl
cmpsb
out
or
push
loope
push
mov
test
cld
ljmp
sub
fisttps
stos
or
mov
or
pop
pop
mov
inc
add
insl
or
dec
fsubs
or
out
mov
adc
aas
jno
mov
mov
dec
daa
test
mov
mov
push
dec
push
add
aaa
movb
mov
lods
cwtl
push
stos
xchg
pop
cmp
cwtl
and
add
dec
rorb
adc
jbe
push
sbb
sti
cli
and
loop
psubq
and
lahf
pop
sub
leave
shll
adc
sti
sub
adc
pop
mov
add
insb
jmp
test
sarl
mov
sub
insl
sbb
movb
pop
out
arpl
loope
dec
sbb
bound
dec
addb
mov
add
cmp
leave
mov
in
sbb
sbb
into
mov
adc
imul
mov
into
js
in
push
add
rolb
aaa
sbb
test
shlb
add
fisubrs
fstl
ret
in
mov
add
add
mov
in
mov
int
xchg
add
push
frstor
idiv
faddl
add
clc
pop
pop
add
push
aam
cs
adc
xlat
movb
or
jo
mov
shll
inc
loopne
xlat
lods
movsb
mov
xchg
dec
lret
jns
xor
loope
xchg
mov
mov
mov
add
mov
sbb
add
popa
sbb
das
inc
addl
add
jmp
dec
pop
mov
xor
dec
push
ss
out
ret
stos
inc
add
pop
shll
lret
stos
stos
add
nop
push
sub
mov
xchg
inc
add
and
xchg
inc
add
ret
movsb
and
popa
std
stos
push
test
and
push
lock
js
xor
mov
jne
dec
pop
int
std
or
mov
jp
dec
mov
or
bound
scas
int
in
cmp
adc
jmp
and
pop
pushf
incl
movups
or
shll
pushf
stc
pop
inc
add
addl
add
pop
es
or
xchg
fwait
test
pusha
add
movsb
sub
cwtl
mov
aad
sbb
xchg
add
lds
jbe
js
pushf
add
lods
mov
or
aam
aas
jmp
fidivrl
call
call
mov
cmp
daa
sbb
mov
fdiv
vpcomd
xchg
inc
lret
movsb
pop
sahf
lcall
addr16
scas
insb
shll
popl
int
adc
popa
push
mov
cmp
ja
fbld
add
add
inc
add
push
gs
rorl
pop
sbb
addb
push
mov
mov
and
push
jae
lret
out
mov
sbb
outsb
push
add
sub
mov
add
mov
inc
add
add
xchg
or
mov
cmpsl
enter
or
cmpsl
cli
sub
xor
mov
pop
out
pop
jp
cmp
cmpsb
sub
push
outsb
daa
ds
ret
movsl
lods
pusha
add
add
gs
in
insb
sti
ds
dec
jbe
mov
jbe
scas
push
fildll
mov
xor
xor
dec
in
aaa
jg
add
xor
pop
or
xchg
and
shrl
cmpsb
pop
mov
cwtl
shrl
clc
xchg
insb
mull
xchg
test
dec
pop
mov
fisubs
stos
popw
inc
sub
jae
mov
jle
pusha
add
add
jl
sbb
and
fwait
mov
out
pop
inc
or
addb
out
mov
std
sbb
inc
add
imul
mov
addb
mov
mov
sbb
xor
je
push
mov
mov
dec
pop
out
push
outsb
or
addb
add
inc
xchg
sbb
outsl
and
das
rolb
daa
add
pop
cltd
mov
scas
mov
inc
add
pop
movb
int
mov
mov
push
add
push
insb
shll
pop
jo
lret
rolb
sahf
xchg
mov
cmp
popa
lock
add
pop
test
ss
es
inc
add
insb
jbe
inc
add
push
and
or
dec
adc
pop
mov
xor
pop
mov
add
mov
test
mov
jno
fdivrl
pop
xchg
mov
add
add
ja
pop
movsl
jne
add
cltd
or
dec
aam
enter
cmp
test
out
sbb
add
popf
ljmp
sub
jne
in
aaa
enter
jg
fld
es
cmp
fdivrs
sub
pop
dec
mov
add
add
xor
fsubl
sub
pop
dec
insl
cmp
push
test
add
xchg
jb
mov
outsl
testb
jecxz
stc
aas
mov
push
and
push
lock
mov
or
movb
push
fs
mov
es
mov
sti
in
inc
pop
icebp
sbb
iret
add
gs
mov
iret
dec
add
ret
sbb
mov
sbb
or
jbe
mov
mov
adc
imul
adc
ficomps
test
test
test
adc
pushf
test
test
mov
js
pop
mov
dec
lods
sub
and
aam
xchg
jo
inc
imul
add
mov
push
test
inc
mov
push
mov
addb
add
ret
cmpsl
es
jb
fwait
mov
xchg
fmul
inc
add
mov
aam
inc
fists
or
fisubrs
popf
je
add
std
push
outsb
or
sbb
dec
andl
lahf
add
popf
xchg
pop
adc
in
inc
mov
xor
inc
add
je
fistpl
popa
bound
js
xchg
nop
roll
add
stos
test
out
add
inc
fcmovne
icebp
es
add
pop
inc
add
push
pop
mov
aaa
sbb
mov
push
mov
pop
adc
aad
sbb
jb
pop
repz
fwait
and
aad
xor
adc
aas
inc
jb
xlat
jmp
push
add
and
idiv
call
add
pushf
push
aaa
lock
clc
fs
pop
or
adc
sub
push
test
add
dec
push
push
sbb
bound
mov
lcall
mov
sub
cmp
shlb
and
dec
mov
or
rorl
jns
sub
repz
jecxz
add
rolb
add
outsl
imul
out
shlb
and
add
ljmp
sbb
push
iret
leave
or
int
js
add
mov
add
lahf
pop
addb
loop
lock
sbb
mov
inc
add
push
loopne
hlt
sub
lret
outsl
mov
jp
or
fcmovnu
sub
pop
cmp
roll
std
shrl
mov
sbb
mov
add
pop
or
jecxz
inc
add
dec
mov
fsts
and
xor
add
or
add
aad
imulb
push
stos
pop
sbb
add
pop
mov
and
cmp
add
cmp
push
push
cmpsb
fwait
addr16
pusha
add
and
push
aaa
xchg
xor
cmp
rolb
add
mov
inc
or
mov
insl
cmc
shll
cmp
sub
inc
add
rorl
sbb
repnz
fnsave
fadds
ret
inc
mov
imul
add
sub
or
push
mov
aas
pop
scas
scas
mov
add
inc
add
insb
add
int
xchg
sub
add
test
fs
rolb
movsb
ja
imul
mov
sbb
add
ja
add
mov
xchg
mov
sti
in
inc
popa
xor
imul
mov
daa
lods
add
pop
stos
xor
sti
mov
mov
add
movsb
inc
xor
mov
add
xor
sahf
pop
jno
push
or
jb
add
push
rolb
mov
rolb
mov
add
hlt
cs
mov
add
jns
jnp
add
push
pop
icebp
add
bound
ja
push
movl
stos
sti
mov
lcall
xchg
test
and
add
bound
jle
mov
fsubs
pushf
jp
pop
pop
loope
mov
lds
test
or
inc
add
shrb
mov
cmp
out
ret
and
push
fbstp
stos
out
push
add
ljmp
stos
adc
movsb
inc
cwtl
xchg
call
mov
in
mov
add
fnstcw
nop
icebp
outsl
out
iret
in
loope
cwtl
mov
push
fdivrs
add
or
sbb
das
and
jae
add
inc
cs
pop
test
and
sbb
jp
add
add
mov
mov
xchg
mov
int
fcmovu
inc
add
jno,pt
fidivs
pop
test
xlat
cmp
pop
add
jge
outsl
xor
sbb
jbe
mov
add
fldcw
cmp
sub
mov
data16
lea
cli
inc
add
add
fmull
push
movsb
pop
push
mov
add
cs
cmc
adc
add
cld
jno
mov
cli
push
sbb
inc
add
jmp
xchg
xchg
push
fst
sbb
push
push
add
xlat
aam
push
insb
arpl
in
add
and
std
clc
stos
jnp
je
and
push
or
loopne,pt
rcr
mov
sbb
add
add
push
cmp
add
jno
add
jb
imul
push
addb
or
mov
rolb
imul
xchg
xchg
clc
stc
shlb
add
xor
cld
cld
popa
inc
add
cmp
dec
mov
mov
lods
pushf
lahf
cmp
test
mov
jmp
inc
cmp
imul
xor
test
add
add
popa
test
lock
and
fildll
push
cmp
leave
rolb
xchg
adc
stos
jo
fs
add
lds
adc
nop
popf
mov
push
add
loope
mov
push
pop
pop
and
ja
or
add
xchg
icebp
inc
add
pop
out
cwtl
test
hlt
mov
lea
sub
sahf
std
sub
enter
or
mov
in
loop
push
leave
js
insb
nop
adc
in
inc
add
pop
sbb
xchg
add
mov
jecxz
cmc
pop
or
aad
aam
add
xchg
jl
gs
test
aam
push
adc
mov
sub
mov
shl
fistl
mov
xchg
stc
addb
dec
into
push
adc
rol
sub
pop
add
pushf
cltd
xor
inc
add
mov
aaa
jne
pop
int3
scas
fistpll
add
es
leave
gs
inc
ja
bswap
sub
loopne
sub
cmc
mov
mov
mov
out
sub
cmp
jnp
sub
addb
dec
add
add
dec
in
sub
incl
add
dec
outsb
inc
add
add
stos
cltd
aas
sub
clc
leave
call
mov
test
addb
jo
mov
adc
imull
mov
mov
cli
cli
minps
into
out
ds
call
push
adc
movsl
xchg
shrl
cmp
in
jb
pop
rep
add
mov
pop
cmp
cld
sub
inc
add
mov
push
dec
gs
xor
lea
add
mov
jecxz
push
add
mov
das
je
xor
add
add
out
or
push
fistl
xchg
cmp
insl
xor
repz
das
sbb
lods
enter
cmp
mov
fildl
xchg
or
mov
repz
ss
sahf
sbb
add
das
xchg
bound
sub
out
and
arpl
out
ja
rol
not
xor
mov
adc
push
mov
aas
jns
mov
notl
sub
aam
sbb
pop
and
inc
add
mulb
cmp
inc
add
xor
and
in
rolb
lock
push
ljmp
or
add
mov
sbb
jnp
dec
das
nop
stc
xchg
mov
jge
movsl
movb
xor
addl
and
dec
mov
cli
add
xor
stos
ficompl
jge
add
mov
scas
cmpsl
xor
add
movb
sbb
mov
cltd
cmp
stc
pop
inc
inc
add
mov
fsubl
cmp
jns
add
lds
inc
add
lds
stos
adc
lcall
add
mov
xchg
mov
add
add
pop
add
pmuludq
rolb
cmp
jo
jle
fwait
sbb
jnp
add
ljmp
das
loopne
or
das
imul
es
add
sarb
dec
or
imul
ret
fcmovne
insb
mov
in
js
ljmp
mov
jno
loope
sub
add
fistl
rolb
sbb
out
cmpsl
dec
int
test
pop
add
fsubrl
stc
xchg
cmp
cs
add
and
into
sub
sub
cli
insl
xor
and
jns
cmp
or
addb
lds
je
xchg
xchg
pop
mov
mov
std
addb
cli
std
std
inc
add
jo
push
add
add
test
enter
popf
lret
ret
mov
add
sub
pop
and
xchg
loopne
lock
xlat
dec
fstpl
dec
inc
sub
aad
xchg
cld
imul
test
sbb
rolb
add
fnstcw
and
and
add
jmp
adc
jns
xor
or
add
and
adc
dec
jge
pop
sbb
fwait
clc
int3
add
stc
mov
test
sub
or
add
mov
add
add
push
stos
aad
mov
cmpsb
inc
addb
push
add
addb
repz
pop
cmp
mov
and
sbb
or
add
cmpsb
inc
aad
rolb
daa
imul
jno
add
push
push
imul
divb
in
adc
add
cltd
pop
jle
add
rolb
test
sub
or
xor
cwtl
cli
jnp
call
sub
add
loop
add
add
sbb
inc
add
out
push
mov
fdivrl
xor
add
dec
cmpsb
mov
pop
push
sbb
xchg
sub
fdivs
ja
push
add
iret
jno
fs
sub
shrl
sarb
je
and
out
movsl
cmovae
into
pushf
sbb
add
add
mov
and
add
or
out
sbb
lock
pop
mov
pop
mov
int3
cwtl
movl
mov
mov
repz
dec
inc
add
cmc
push
cmc
push
insl
clc
mov
into
js
add
imul
mov
rcrb
add
hlt
or
lea
add
cmp
mov
mov
push
stos
mov
mov
mov
add
add
es
in
jmp
push
inc
or
js
push
sbb
jle
cmp
sub
jae
ss
pop
dec
fdivrl
dec
or
sub
mov
mov
out
adc
insb
add
aad
stos
jns
les
dec
orl
cmpsb
xchg
push
xlat
pop
pop
push
or
fnstsw
dec
loopne
les
jmp
ja
repz
mov
pop
sbb
ljmp
gs
hlt
scas
mov
sbb
xchg
sahf
mov
jnp
movsb
outsl
xchg
stc
lret
shrb
jae
js
sbb
xchg
aad
ja
loope
mov
test
sub
add
pop
bound
pop
sysenter
lret
ljmp
jl
sbb
out
sbb
sbb
xchg
shlb
jo
push
stos
int3
xor
lret
sub
mov
mov
xor
xor
leave
cs
pop
push
add
stos
sbb
cmpsl
inc
add
repz
add
mov
fldcw
xor
icebp
xor
cltd
nop
ja
cmp
add
inc
add
mov
mov
push
ret
add
sub
mov
mov
stos
and
push
mov
mov
outsl
adc
rolb
pop
push
mov
xchg
pop
out
icebp
mov
stos
jle
popf
cmpsl
inc
adc
pop
mov
xchg
pop
and
adc
mov
add
push
ja
push
xchg
aad
incl
pop
jbe
add
pop
fcmovb
movsb
roll
xchg
stos
lahf
fimuls
out
and
add
cmc
jb
xchg
aas
les
push
sbb
fcmovnu
leave
loope
inc
add
mov
cltd
jle
ljmp
cmpsb
fisttpll
push
add
push
mov
add
fimull
out
add
add
hlt
in
pop
popf
insb
cli
push
mov
cli
daa
mov
add
dec
pop
movsl
mov
loope
mov
and
data16
loope
stc
jnp
sbb
orl
js
loope
sarl
stos
mov
in
ret
adc
out
fldt
popa
mov
shrl
scas
jle
das
in
or
repnz
xchg
lods
xchg
mov
std
mov
addb
sub
outsl
dec
ret
jecxz
cmc
sbbl
daa
pop
adc
jns
ljmp
add
push
test
xor
nop
shl
das
inc
add
lret
jl
add
shl
add
aaa
xor
stos
sub
jbe
out
mov
loop
aas
adc
cmp
or
push
jge
popa
sbb
lret
icebp
mov
and
cmpsl
xchg
pop
cmp
addr16
movb
movsl
adc
mov
pop
sub
inc
add
outsl
movsl
repz
add
jb
mov
enter
cmp
lods
push
sub
mov
dec
fwait
addb
or
sbb
insl
xor
es
sub
add
pop
sub
test
add
ds
repz
aam
inc
add
mov
xchg
dec
test
xor
out
popa
jnp
addb
inc
add
push
outsw
stos
mov
bound
es
add
pop
aas
mov
aas
sbb
test
imul
js
or
xor
mov
jmp
lcall
mov
cmp
push
inc
or
insb
leave
shrb
in
xor
jg
jns
lods
xlat
mov
xor
lahf
adc
fdivs
push
movb
jle
dec
notl
movsb
pop
xor
mov
dec
popa
push
dec
or
push
pushf
loopne
sub
or
add
mov
add
test
jae
addb
mov
lods
scas
shl
in
xor
xor
add
add
in
ret
pop
and
fidivrl
ret
inc
add
add
in
repz
xorl
std
add
add
sbb
cmp
and
loope
sbb
mov
xor
repnz
add
movb
test
dec
out
orl
and
add
add
dec
lahf
shrb
add
data16
mov
insb
or
es
fisttpll
mov
outsb
push
movb
mov
imul
cmpsl
xchg
pusha
add
xor
cmp
add
js
sub
test
add
outsb
jo
cmc
into
call
sti
and
popa
dec
and
mov
popa
fcmovu
sub
stc
rcrl
cmp
mov
out
fisttps
call
mov
mov
adc
ret
and
shll
rorl
add
lods
sbb
mov
cmpsb
mov
mov
lahf
cwtl
icebp
xor
dec
pop
push
pop
xchg
add
or
add
add
sbb
add
mov
add
push
or
cmpsb
out
aaa
push
les
cltd
dec
push
add
cmc
add
and
push
xor
xor
nop
mov
aad
adc
flds
pop
shll
out
add
movsl
stc
push
xor
lret
bound
cmp
ret
shll
add
add
mov
xchg
jle
lcall
sbb
and
test
inc
cwtl
addb
in
arpl
shrl
and
rol
xor
sbb
add
mov
fisubl
pop
or
insl
fldt
pop
testb
xor
xor
add
imul
xchg
in
mov
cmp
cltd
xlat
sub
dec
popa
je
add
pop
sarb
pop
xor
mov
mov
push
add
mov
sub
adc
cs
push
rolb
inc
add
inc
add
sbb
xchg
cmpl
in
adc
jg
inc
add
add
mov
sbb
test
imul
sbb
inc
add
rcll
or
rorb
cmp
das
jbe
jne
add
xor
aas
sub
add
cmp
mov
add
inc
mov
push
mov
cmp
in
sahf
add
add
std
dec
and
pop
ljmp
fxch
jle
sbb
xor
ret
adcl
aad
enter
imul
jbe
cmp
in
jb
sub
lcall
sbb
add
mov
xchg
loop
std
xor
test
loopne
cmp
call
jle
aad
mov
fnsave
insb
stos
data16
popf
or
jnp
outsl
jecxz
mov
and
js
lret
pop
aam
jmp
shll
shrl
je
arpl
mov
rolb
ret
addb
jl
fisubs
add
dec
xor
lea
das
test
jb
dec
mov
cmp
mov
sub
jae
and
pop
add
sbb
push
mov
pop
add
rolb
clc
fildll
fs
mov
push
daa
test
rolb
add
data16
or
int3
adc
inc
les
mov
add
mov
mov
adc
mov
push
pop
pushf
xchg
rolb
sub
add
xchg
pop
pusha
add
mov
add
push
cmp
sub
add
pop
mov
hlt
mov
out
or
jmp
xor
mov
inc
add
hlt
into
mov
sahf
mov
lret
adc
pop
inc
add
and
xchg
ljmp
xor
movb
stos
daa
int
jnp
dec
mov
pushf
arpl
lea
pop
cld
sub
xchg
test
mov
negb
addr16
and
dec
sbb
add
rorl
xor
add
add
jns
sub
jbe
hlt
ret
add
out
stc
fisubrs
test
xchg
adc
bound
jae
mov
mov
fmull
jb
add
xchg
clc
inc
add
or
and
repnz
add
lahf
stos
movb
inc
add
add
xlat
loope
and
jg
xchg
xor
cld
jo
addb
and
pop
stc
enter
filds
add
mov
adc
mov
xchg
cwtl
rolb
or
add
rorl
es
rolb
es
add
fnstenv
out
stc
cld
cmp
outsb
mov
pushf
or
subl
pop
popf
divb
daa
jne
add
mov
dec
cmp
sub
add
mov
sbb
sahf
outsl
sbb
pushf
pop
mov
mov
test
ljmp
pop
jne
add
addb
add
aaa
add
dec
clc
mov
add
mov
mov
mov
cmc
in
loop
les
stos
cmp
lcall
int3
icebp
fmuls
sub
xor
insl
xchg
or
sub
sub
test
daa
sub
xor
sbb
aas
insl
jle
mov
and
xchg
xlat
movb
sbb
push
movl
rclb
stos
xor
dec
movb
mov
jmp
pusha
add
cmpsb
hlt
mov
addb
mov
add
inc
jno
int3
loop
ret
into
xchg
imul
lock
or
sbb
xchg
push
add
out
inc
mov
jno
jne
add
stc
dec
cmp
daa
mov
jl
out
xor
movl
xchg
xor
jle
xchg
cmpl
outsl
test
push
lods
lcall
sub
es
xor
fsubrs
or
mov
popa
mov
movsl
fidivl
mov
mov
add
cmp
dec
sub
mov
ficomps
sahf
inc
les
sub
fwait
mov
jecxz
rolb
pop
insl
or
mov
dec
mov
jae
add
andl
inc
stos
mov
cmp
or
out
rorb
cld
cmp
fs
mov
ret
int3
xor
test
outsl
cmp
sub
movsl
jb
xchg
xchg
mov
das
rcrb
mov
int3
out
pop
int3
out
add
xor
adcl
add
add
cmp
mov
scas
inc
add
cs
lret
push
cld
negl
fstpl
testb
sti
cmp
add
inc
inc
xor
and
mov
filds
xchg
jne
in
lock
lds
fadd
add
mov
pop
cs
or
sub
ds
nop
mov
in
pusha
add
cltd
cld
lods
dec
xchg
xchg
rcrl
xchg
sub
fcompl
addb
add
sbb
orl
mov
adc
js
cmp
sti
push
in
push
sub
xchg
mov
push
xor
adc
cs
sbb
adc
fsubrl
test
shl
pop
cmp
jo
add
add
mov
aam
lcall
fstps
movsl
mov
sbb
add
inc
add
xor
rolb
dec
test
dec
fistl
xlat
outsl
rolb
inc
add
mov
xchg
pop
and
out
pop
jle
adc
les
sub
ret
jle
insb
int
jecxz
sub
test
ret
push
mov
mov
mov
adc
add
nop
and
mov
pop
mov
cmp
pusha
add
jecxz
cld
fwait
dec
lods
sbb
fdiv
loope
ss
inc
add
and
or
popf
lods
cmpl
ds
adc
jo
lods
inc
xchg
push
inc
add
push
aaa
or
pop
cwtl
add
addr16
fs
push
xchg
dec
push
xchg
add
lret
mov
mov
jecxz
mov
pusha
add
dec
sub
add
repnz
cli
dec
sbb
xchg
sbb
xchg
addb
flds
add
xchg
scas
sbb
test
scas
jmp
int3
pop
cld
pop
push
lods
sbb
jno
pop
mov
jmp
add
ret
in
push
stos
arpl
int
sbb
out
clc
imul
jns
dec
mov
jge
aad
or
sub
cs
add
and
outsb
jns
ljmp
pop
add
mov
jae
xchg
or
in
add
cmpsl
mov
cmp
pop
xor
push
add
outsb
addr16
xor
sbb
ljmp
adc
add
mov
pminsw
mov
fnstenv
mov
ds
lret
cmp
sub
mov
or
mov
subl
xchg
test
mov
mov
rolb
jb
std
insb
movsb
pop
add
mov
into
push
or
movsb
mov
add
pop
xchg
add
add
sbb
add
enter
jnp
aas
daa
or
or
dec
icebp
in
lea
add
mov
or
pusha
add
adc
dec
aaa
cmpsl
pop
and
dec
into
jecxz
jmp
jl
add
or
jnp
sbb
icebp
call
dec
sbb
sbb
loopne
ds
aas
stos
jl
add
sub
mov
mov
mov
scas
push
jmp
notb
and
sub
inc
ja
push
add
sub
mov
pop
call
repnz
xor
push
mov
cmp
xchg
inc
dec
in
ret
xchg
push
mov
cs
sub
lret
sbb
adc
es
mov
xchg
iret
nop
push
dec
mov
mov
movb
mov
jl
sbb
add
shlb
add
hlt
inc
call
iret
es
dec
push
jnp
shll
pop
fildl
repnz
pop
or
mov
data16
popf
sbb
out
out
pop
or
sub
add
movsl
ds
add
add
bndstx
std
sbb
sti
xchg
test
mov
aas
or
and
scas
jge
push
mov
add
add
add
sub
add
jmp
cwtl
fcoml
push
mov
jmp
out
hlt
mov
jnp
mov
movsl
push
icebp
cmp
sbb
inc
lock
int3
stc
out
rolb
add
cmp
sub
dec
cwtl
xor
add
inc
add
jg
test
add
test
fneni(8087
xor
inc
add
push
bound
push
stos
inc
dec
and
popa
call
xor
pop
push
mov
jle
inc
add
inc
inc
aam
aad
imul
lea
fs
mov
mov
inc
add
add
xchg
iret
xlat
xchg
sbb
mov
in
lock
add
jl
jecxz
mov
icebp
cmp
add
xor
lods
lock
push
nop
mov
sub
sub
adc
xor
pop
pusha
add
mov
push
outsb
arpl
addr16
mov
jnp
xchg
das
mov
addb
inc
add
call
push
cli
jbe
xor
sub
pusha
add
ja
scas
int3
out
ss
xor
lock
fistl
stc
xchg
out
call
fwait
xchg
push
adc
movsb
sbb
pop
fdivrl
push
xchg
pop
jmp
adc
add
push
out
adc
ja
mov
push
int
push
shl
mov
in
rolb
enter
outsl
jne
add
dec
mov
jp
movsb
xchg
divb
ljmp
pop
or
iret
call
nop
and
movsl
inc
add
add
fwait
add
push
insl
in
or
ret
and
add
flds
repz
mov
xor
into
fidivrs
cwtl
mov
fstpl
scas
scas
xchg
inc
add
es
negl
movsl
sbb
mov
stc
imul
add
arpl
fwait
pop
or
cli
adc
xor
mov
imul
testl
icebp
loopne
adc
sbb
pusha
add
add
pop
xlat
pop
xor
lock
dec
jle
push
pop
sbb
repnz
stc
test
test
sbb
rorl
ja
daa
call
inc
jne
iret
inc
add
mulb
or
pop
sub
pop
cld
add
mov
test
add
sbb
das
or
or
das
mov
sbb
es
addb
add
shrb
dec
pop
xchg
in
dec
in
inc
cmp
fisttpll
addb
stos
mov
rolb
add
push
cmp
aad
or
xor
mov
imul
mov
dec
mov
pop
xchg
sti
insb
mov
ret
enter
push
fwait
inc
and
scas
dec
addr16
mov
add
pop
mov
lret
jge
int3
mov
adc
fistps
and
mov
fcoms
arpl
ret
mov
out
xchg
mov
out
mov
test
lods
rclb
dec
push
add
clc
stos
pop
sar
fstps
lret
xor
test
imul
in
test
scas
adc
popa
inc
add
push
rcll
fidivs
pop
loopne
pusha
add
outsb
cli
add
push
sbb
add
or
mov
add
jb
lock
xlat
mov
add
push
leave
dec
sbb
das
pop
leave
jp,pn
mov
sub
mov
sahf
cmpsb
pushl
add
and
xchg
loop
loope
sub
cld
aaa
imul
sahf
popf
adc
push
out
movsl
rcll
or
push
mov
push
push
add
dec
out
pop
mov
adc
mov
adc
shll
add
or
pop
cmc
sub
fidivl
lcall
pushf
call
loop
push
cltd
xor
sbb
pop
mov
test
add
inc
addb
mov
xchg
insl
lods
push
inc
add
and
lret
add
mov
addb
add
rolb
jbe
jg
add
or
add
int3
jle
add
ret
arpl
in
mov
mov
mov
push
xchg
pop
dec
into
mov
jge
xchg
dec
loop
out
jns
cmp
dec
xor
add
pushl
movb
push
fdivrp
adc
mov
add
std
out
mov
mov
push
lahf
lea
fstl
dec
cwtl
mov
popa
mov
subl
inc
add
add
push
movsl
aas
push
add
jp
inc
add
pop
jb
out
rolb
adc
fbld
add
addb
mov
lahf
pop
sub
add
mov
add
push
jb
rolb
pop
pop
or
call
lret
cwtl
stos
jge,pn
cmp
mov
adc
add
inc
add
movb
or
cld
pop
fsubl
sarl
addb
add
adc
sub
imul
xor
imul
jb
add
or
jp
cltd
imul
and
std
pop
lret
cld
mov
ficoms
jp
jnp
mov
bound
or
insb
and
movsl
lds
dec
mov
pop
add
nop
cltd
mov
add
lret
pop
fildl
add
adc
iret
imul
lret
outsb
repnz
iret
ror
or
pop
cmp
aam
lods
aam
and
mov
xor
add
jecxz
cmp
push
aad
add
and
in
cmp
enter
mov
mov
xchg
repz
fadd
mov
inc
xor
sub
sbb
adc
ficoml
call
or
jge
scas
addb
add
push
pop
mov
push
push
add
push
stc
or
add
adc
adc
inc
add
sbb
push
xchg
mov
jo
mov
lds
imul
les
jbe
daa
add
add
cmp
add
les
jg
sar
lret
gs
cltd
jb
mov
push
dec
xchg
mov
xor
adc
mov
nop
jmp
add
add
push
push
mov
xchg
ret
addr16
imul
pop
stc
jb
movl
add
stc
jb
inc
movl
add
stc
jb
add
hlt
xchg
cmp
movb
jo
inc
add
add
mov
je
stc
jb
xchg
stc
stc
jb
xor
add
pop
add
stc
jb
add
mov
stc
jb
jle
ja
add
mov
cld
or
sldt
add
stc
jb
addr16
pop
test
add
mov
jb
add
add
jge
pop
mov
nop
jmp
add
adc
add
add
popa
nop
jmp
lret
sahf
add
push
idivb
push
add
add
add
inc
pop
add
stc
jb
add
stc
jb
add
xchg
xchg
add
jmp
add
pop
test
push
push
mov
xchg
ret
add
add
add
jb
adc
and
inc
mov
std
mov
stc
jb
add
sahf
mov
add
jmp
inc
sub
imul
inc
add
hlt
fwait
and
fimuls
orb
add
mov
add
mov
stc
jb
add
add
nop
jmp
jno
movsb
pop
add
sub
fwait
cmpl
push
mov
xchg
ret
push
add
call
add
jb
testb
add
mov
xchg
ret
hlt
sahf
add
adc
add
cs
rcr
push
mov
xchg
ret
add
add
add
mov
stc
jb
add
add
jp
nop
jmp
add
lds
sub
jb
adc
add
jg
and
cmpl
clc
inc
add
inc
jno
or
shll
add
xchg
add
add
add
add
stc
jb
hlt
testb
add
mov
and
add
nop
jmp
xchg
add
add
int
outsl
loopne
jb
add
movl
add
add
add
sub
push
nop
jmp
cmp
ret
jne
test
pop
jb
stc
jb
add
add
add
stc
jb
movl
lea
push
mov
xchg
ret
xor
cltd
mov
stc
jb
testb
aaa
add
push
push
push
stc
jb
add
add
xor
stc
jb
xchg
add
mov
mov
stc
jb
and
add
out
push
add
jle
add
add
add
mov
cmpsl
mov
popf
stc
jb
data16
rolb
push
mov
adcb
jle
add
mov
xchg
ret
add
push
aam
push
cmpsl
scas
popa
stc
jb
push
add
add
add
jb
add
add
add
lret
stc
jb
inc
add
test
add
mov
xchg
ret
cs
add
call
stc
jb
jo
add
ja
inc
add
add
add
dec
mov
nop
jmp
testb
xor
nop
jmp
add
add
stos
stc
jb
xchg
add
add
add
shl
push
mov
xchg
ret
add
addr16
call
stc
jb
push
xchg
test
add
nop
jmp
jno
adc
add
nop
mov
mov
add
and
sahf
aaa
loopne
call
stc
jb
and
add
push
mov
xchg
ret
xchg
imul
xor
add
stc
jb
add
xchg
adc
add
stc
jb
add
and
and
jb
xchg
add
cmp
imul
nop
jmp
xchg
add
jb
inc
jg
nop
jmp
add
xchg
add
add
add
out
repz
sti
nop
jmp
movsb
add
add
aaa
sti
add
stc
jb
lds
fnstcw
and
add
lea
test
sbb
add
jb
add
add
inc
pop
or
jb
add
add
sub
data16
icebp
loopne
jmp
nop
jmp
fstpl
dec
nop
jmp
adc
add
add
jo
xchg
push
test
xchg
cmpl
and
add
add
gs
xchg
jb
add
sahf
cli
add
stc
jb
roll
push
aaa
ja
push
cmpsb
mov
mov
xchg
ret
jle
mov
push
mov
stc
jb
add
dec
nop
jmp
jle
cmp
add
inc
push
sti
mov
push
mov
xchg
ret
sub
pop
decl
stc
jb
test
add
or
call
faddl
xchg
ret
add
push
inc
jo
cmp
nop
jmp
add
mov
aaa
jb
sub
stc
jb
jle
add
push
sahf
decb
add
jb
mov
je
push
push
mov
xchg
ret
xchg
add
insb
sbb
mov
xchg
ret
add
fnstenv
xchg
shrl
push
mov
xchg
ret
add
add
sbb
jmp
xchg
add
add
add
pop
pusha
stc
jb
sahf
adc
add
push
add
mov
sar
adcb
add
add
add
dec
mov
stc
jb
gs
xchg
add
pushl
stc
jb
aaa
test
add
push
or
jb
xchg
imul
nop
jmp
jge
add
pop
jge
add
mov
cmpb
add
ret
add
add
jle
add
stc
jb
add
stc
dec
jnp
dec
clc
dec
inc
stc
jb
ja
adc
loop
stc
jb
flds
add
add
jb
add
add
add
add
les
stc
jb
ja
push
flds
pop
ret
stc
jb
push
xchg
add
cmp
pop
mov
stc
jb
add
aaa
add
push
mov
xchg
ret
add
lock
nop
jmp
test
add
add
dec
mov
stc
jb
test
flds
add
add
jb
or
les
push
mov
xchg
ret
push
push
add
add
xchg
sub
sbb
add
stc
jb
mov
pushl
stc
jb
add
add
xchg
stc
jb
test
add
dec
sub
les
ss
add
push
push
mov
xchg
ret
cmp
clc
mov
push
mov
xchg
ret
add
gs
inc
add
in
inc
add
push
add
add
jmp
nop
jmp
lds
movl
xchg
cs
nop
jmp
jg
or
add
lret
and
add
jb
xchg
pop
mov
cmp
nop
jmp
add
stc
popf
call
stc
jb
push
add
dec
test
and
push
mov
xchg
ret
add
mov
pop
add
add
add
stc
add
lds
add
add
mov
add
stc
jb
inc
cmp
cltd
and
stc
jb
cmp
cs
stc
jb
imul
movsb
jmp
stc
jb
adc
add
stc
jb
add
add
sarb
jb
ja
sahf
add
nop
jae
push
stc
jb
mulb
inc
mov
add
jge
stc
xchg
add
xchg
jle
add
int3
loope
add
mov
cmp
stos
stc
jb
add
sahf
sahf
add
jo
jbe
jmp
sti
add
add
push
sahf
add
in
je
stc
jb
add
add
cli
lea
stc
jb
add
add
xor
mov
jmp
je
sub
jb
imul
add
call
stc
jb
add
pop
and
jb
jle
mov
push
out
add
nop
jmp
add
add
and
in
push
stc
jb
jns
xor
rcll
jle
add
mov
nop
jmp
stc
data16
inc
pop
push
mov
repnz
add
popl
add
sub
test
jb
aaa
adc
jge
inc
sbb
inc
add
hlt
add
sar
jb
imul
add
add
sbb
add
jb
xor
pop
or
jbe
nop
jmp
add
add
out
mov
stc
jb
add
imul
add
mov
nop
jmp
lds
add
mov
stc
jb
insb
add
add
add
xlat
sub
jne
add
cmp
add
or
outsl
cld
incl
inc
pop
lret
stc
inc
push
add
push
mov
xchg
ret
sahf
add
xor
stc
jb
add
int3
xchg
stc
jb
movsb
and
jmp
xorb
call
push
inc
test
add
fbld
jb,pt
nop
jmp
dec
hlt
add
and
add
nop
jmp
ret
mov
mulb
add
mov
stc
jb
ret
sub
add
pusha
nop
jmp
adc
add
mov
mov
cmpb
add
add
add
add
mov
push
mov
xchg
ret
add
add
cld
push
stc
jb
add
add
adc
andb
add
add
adc
add
add
fnstcw
jns
sub
xor
stc
jb
jge
add
dec
add
ret
mov
push
mov
xchg
ret
lds
add
jge
incl
mov
add
push
mov
xchg
ret
sub
add
fwait
stc
je
stc
jb
shrl
adc
add
pop
call
add
add
in
push
mov
xchg
ret
ret
sub
rclb
in
add
sub
sbb
cmp
jb
xchg
inc
add
jmp
stc
jb
add
add
add
fs
insb
stc
jb
add
sahf
cmp
nop
jmp
movsb
fwait
add
data16
add
mov
stc
jb
aaa
jno
sahf
mov
add
stc
jb
mov
or
push
mov
xchg
ret
add
dec
add
add
stc
jb
add
add
jmp
mov
add
jb
add
xchg
add
mov
popf
push
mov
xchg
ret
add
mov
add
jb
add
test
jecxz
add
mov
stc
jb
add
dec
ret
push
mov
xchg
ret
or
js
clc
stc
jb
add
fstps
add
jp
nop
jmp
add
movsb
or
inc
and
nop
jmp
mov
add
mov
sub
push
mov
xchg
ret
add
or
add
dec
nop
jmp
mov
push
add
add
insl
popa
stc
jb
add
or
add
repz
jb
add
add
inc
xchg
add
add
jb
mov
stc
jb
jns
add
nop
jmp
sub
mov
ret
fucomp
add
stc
jb
xchg
add
jo
add
jmp
adc
dec
fildl
xchg
ret
jle
dec
mov
nop
jmp
movl
jne
stc
jb
pop
test
adc
jb
push
add
add
sbb
stc
jb
add
add
imul
stc
jb
add
jge
lahf
pop
add
ja
fldl
jle
mov
add
imul
or
incl
add
add
nop
jmp
jns
dec
add
stc
jb
and
add
mov
call
add
lret
mov
mov
stc
jb
xchg
pop
add
add
pop
jecxz
push
nop
jmp
add
aaa
mov
aaa
add
aaa
mov
jb
aaa
mov
mov
push
adc
stc
jb
add
add
add
nop
jmp
ja
add
add
add
add
test
sbb
add
jb
add
cs
jecxz
pop
stc
jb
inc
inc
add
aaa
mov
add
lret
stc
jb
add
add
xchg
add
popa
add
jmp
add
add
cmpw
stc
jb
add
add
jp
repz
jb
xchg
xchg
add
xor
lret
jg
stc
jb
add
add
test
popa
add
mov
xchg
ret
add
jg
push
push
mov
xchg
ret
xchg
sahf
pop
ret
pop
pop
stc
jb
add
jge
ret
xchg
add
push
push
mov
xchg
ret
jo
and
mov
xchg
ret
mov
popa
shlb
nop
nop
jmp
dec
dec
add
test
add
aaa
ficoml
mov
xchg
ret
add
add
mov
jb
flds
add
sahf
add
add
push
mov
xchg
ret
add
pop
push
mov
xchg
ret
add
add
cmp
test
push
add
stc
jb
insb
inc
add
and
push
mov
xchg
ret
xchg
add
and
stc
jb
mov
jns
rep
nop
jmp
add
add
add
stc
jb
mov
add
es
mov
add
add
xchg
mov
stc
jb
mov
add
push
stos
push
nop
jmp
add
add
add
ret
rolb
mov
push
mov
xchg
ret
aaa
add
add
jmp
mov
xchg
ret
add
add
add
add
add
jb
jno
lods
push
stc
jb
add
xchg
or
mov
hlt
push
add
hlt
add
add
add
adc
lods
mov
stc
jb
pop
add
xor
mov
xor
stc
jb
add
add
xchg
or
jb
add
add
inc
mov
add
stc
jb
testb
jg
add
mov
scas
add
stc
jb
add
imul
imul
or
add
jb
adc
xor
leave
sub
jb
movsb
pop
push
add
add
sub
add
jb
add
add
sub
pop
mov
stc
jb
add
add
push
leave
push
stc
jb
jle
mov
add
add
repnz
jbe
nop
jmp
sahf
add
and
jne
stc
jb
insb
add
icebp
jo
scas
push
stc
jb
stc
add
add
jg
add
movzwl
stc
jb
add
add
stc
jb
sub
add
sub
add
jmp
add
add
mov
stc
jb
aaa
add
add
ja
push
cmp
add
stc
add
nop
jmp
xchg
and
jae
jl
int
stc
jb
add
jg
fcomi
movsb
push
mov
xchg
ret
add
fldl2e
mov
nop
jmp
add
or
dec
add
mov
xchg
ret
test
mov
sub
add
adc
add
lea
push
mov
xchg
ret
add
add
mov
nop
jmp
adc
xchg
push
xor
inc
add
sbb
addb
add
or
dec
add
jmp
add
push
push
add
jge
pop
stc
jb
imul
jge
xor
popf
call
stc
jb
add
xchg
jle
mov
stc
jb
mov
sub
push
in
jmp
stc
jb
cmp
and
xor
stc
jb
add
add
fwait
mov
xchg
push
add
push
nop
jmp
xchg
jo
add
mov
andb
call
test
mov
sub
jb
lds
xor
test
aas
push
stc
jb
dec
ret
ret
hlt
add
cmp
or
stc
jb
pop
add
add
add
nop
jmp
push
jle
ja
ret
push
xchg
xchg
jne
stc
jb
dec
gs
and
add
jno
mov
stc
jb
add
xchg
idivb
jb
jge
testb
add
add
popl
nop
jmp
jno
shll
push
mov
xchg
ret
rorl
fisttpl
mov
xchg
ret
add
xchg
jbe
pop
stc
jb
jno
add
add
nop
jmp
add
add
jno
add
add
jne
ror
push
mov
xchg
ret
or
or
push
mov
xchg
ret
movsb
adc
faddl
sar
jb
addr16
sahf
add
jb
add
add
aaa
xchg
jns
lods
mov
stc
jb
ret
add
add
push
stc
jb
cmp
ret
add
cmp
mov
push
stc
jb
sub
add
ja
shr
push
mov
xchg
ret
cmp
sub
js
jb
dec
add
push
mov
xchg
ret
ret
imul
adc
stc
jb
add
add
add
mov
jb
add
add
mov
popa
add
jb
add
dec
mov
stc
jb
add
roll
fstps
sar
jmp
jno
add
cld
je
nop
jmp
add
add
stc
jb
gs
add
aas
mov
push
mov
xchg
ret
data16
pop
mov
stc
jb
adc
add
add
stc
jb
inc
ja
push
add
stc
jb
sub
add
jb
inc
sub
add
data16
movzwl
stc
jb
add
dec
imul
mov
jb
aaa
addr16
add
inc
imul
mov
add
inc
movsb
add
mov
jg
nop
jmp
jo
add
sub
push
stc
jb
ret
sahf
push
add
flds
add
xor
jb
mov
jge
push
addb
mov
stc
jb
add
pop
jle
or
add
ja
imul
movsb
push
jns
sar
jb
ret
add
add
add
cmpb
call
add
jmp
stc
jb
add
mov
cmp
mov
xchg
ret
insb
add
xor
push
mov
xchg
ret
sahf
imul
mov
jae
jmp
add
inc
add
gs
jle
mov
adc
jb
sub
add
je
nop
jmp
add
add
jb
xchg
mov
add
add
inc
loopne
mov
xchg
ret
insb
mov
fistl
mov
xchg
ret
add
pop
stc
jb
xchg
flds
add
add
inc
daa
jbe
mov
nop
jmp
add
movsb
add
mov
stc
jb
add
add
mov
xlat
or
add
adc
jae
add
fwait
mov
push
mov
xchg
ret
add
mov
stc
jb
adc
adc
jne
stc
jb
add
add
add
lret
sub
jb
aaa
mov
mov
stc
jb
add
or
stc
jb
add
stc
jb
add
addr16
or
stc
jb
add
hlt
imul
jge
stc
jb
mov
imul
pop
popl
and
inc
add
add
hlt
mov
vmovd
incb
add
mov
mov
add
jb
add
sbb
andb
mov
ljmp
andb
add
add
loopne
mov
stc
jb
pop
fstl
loop
add
stc
jb
add
add
add
xchg
dec
lods
stc
jb
add
pop
stc
add
test
adc
pushl
add
in
xchg
nop
jmp
add
aaa
jns
add
jno
movsl
daa
add
aad
mov
stc
jb
add
add
add
push
stc
jb
lret
xchg
lea
stc
jb
data16
add
push
push
mov
xchg
ret
add
flds
mov
lods
nop
jmp
add
add
ret
bound
aad
call
nop
jmp
add
add
inc
fs
push
push
mov
xchg
ret
xchg
stos
mov
stc
jb
jns
sahf
pop
add
mov
mov
push
mov
xchg
ret
insb
add
add
nop
jmp
inc
add
add
add
out
jmp
stc
jb
add
add
add
stc
jb
add
add
add
mov
or
add
jle
roll
pop
addb
sarb
movswl
stc
jb
xchg
add
add
jb
mov
hlt
shrb
in
add
jg
add
bound
add
rcl
inc
add
adc
fstp
and
cmp
push
mov
xchg
ret
mov
mov
stc
jb
testb
stc
jb
movl
mov
xchg
ret
add
sub
xchg
push
push
stc
jb
jno
add
add
add
adc
push
stc
jb
add
add
fcoms
in
or
es
add
add
push
stc
add
push
mov
xchg
ret
add
sbbl
inc
add
ret
add
add
mov
push
mov
xchg
ret
add
lock
mov
push
stc
jb
add
data16
jg
push
out
add
ret
add
movsb
cmpsl
test
sub
and
add
add
add
inc
cs
push
mov
xchg
ret
add
add
jg
stc
jb
cmp
mov
mov
push
mov
dec
jne
test
popa
add
push
mov
sahf
incl
jns
sub
inc
add
jmp
add
jns
pop
jle
ret
popf
push
stc
jb
cmp
jne
stc
jb
add
rcr
lods
push
mov
xchg
ret
add
flds
sbb
mov
xchg
lret
ret
push
nop
jmp
add
add
add
add
mov
xchg
ret
add
add
es
stc
jb
inc
cmp
xorb
lds
insb
adc
out
xor
stc
jb
add
flds
xor
dec
add
stc
jb
lds
dec
push
stc
jb
add
add
addr16
add
mov
stc
jb
add
add
ret
add
add
add
mov
std
out
stc
jb
add
add
mov
stc
jb
movsb
roll
xchg
add
or
jb
gs
add
mov
shr
stc
jb
xchg
add
add
pop
stc
jb
add
add
addr16
jle
js
les
jb
add
add
inc
xor
stc
jb
adc
add
addb
aaa
pop
add
stc
jb
mov
div
loopne
mov
stc
jb
add
add
inc
add
lea
nop
jmp
sub
add
add
pop
out
push
push
mov
xchg
ret
mov
call
out
add
xchg
div
nop
jmp
xchg
inc
pop
add
push
mov
xchg
ret
add
add
cld
pop
push
mov
xchg
ret
sahf
add
add
int
push
mov
xchg
ret
test
add
cmp
add
stc
jb
add
add
insb
mov
stc
jb
xor
add
jbe
stc
jb
add
add
ds
stc
jb
aaa
add
add
add
shrb
add
stc
jb
add
mov
test
nop
jmp
xor
mov
add
cld
stc
jb
add
imulb
test
jb
add
pop
xlat
std
sub
stc
jb
add
add
xchg
mov
jb
add
add
gs
add
add
push
mov
xchg
ret
add
sub
aad
push
stc
jb
dec
add
add
add
add
les
jb
add
adc
mov
stc
jb
add
add
ja
add
nop
jmp
jns
adc
adc
push
mov
xchg
ret
push
add
xor
adcb
add
add
lea
stc
jb
movl
push
sbb
stc
jb
add
add
add
xchg
shll
hlt
ljmp
add
add
ja
pop
icebp
rcrl
andl
out
idiv
incl
add
add
stc
jb
add
add
cmp
pop
xchg
stc
jb
add
add
adc
jmp
nop
jmp
insb
add
sub
stc
jb
sahf
ret
add
or
stc
jb
mov
or
stc
jb
fldl
add
mov
add
add
incl
add
add
mov
add
sti
push
push
mov
xchg
ret
ret
add
stos
stc
jb
add
add
mov
je
stc
jb
jge
fwait
add
mov
inc
hlt
inc
add
add
pop
add
add
jb
dec
add
add
stc
jb
mov
aaa
add
repz
add
add
xor
insb
push
push
mov
xchg
ret
add
jle
add
pop
stc
jb
adc
add
gs
jb
add
cmp
add
and
jmp
add
add
icebp
incl
xchg
add
push
mov
add
add
xor
pop
add
or
pop
pop
add
nop
jmp
xchg
add
fwait
push
jb
mov
nop
jmp
add
add
jmp
pop
jecxz
incl
jle
sahf
add
orb
xchg
add
add
mov
incl
add
adc
push
push
mov
xchg
ret
add
add
mov
xchg
ret
add
cmp
shl
lcall
adc
mov
pop
jae
bound
jne
add
add
xor
mov
xchg
ret
add
mov
out
pushw
subl
incl
add
aas
mov
stc
jb
mov
addr16
add
mov
stc
jb
add
sahf
ret
add
jb
inc
add
add
add
dec
or
jb
roll
adc
add
ds
add
add
add
add
adc
jmp
jmp
incl
xchg
add
add
cmp
jne
stc
jb
jle
sahf
flds
lret
push
mov
xchg
ret
add
imul
aas
cmc
inc
add
add
nop
jmp
add
dec
pop
push
add
add
and
push
mov
xchg
ret
ret
movsb
add
mov
add
jb
add
mov
stc
jb
imul
sub
xor
stc
jb
mov
ret
pusha
add
mov
cmp
stc
jno
add
add
push
dec
push
push
mov
xchg
ret
movsb
add
add
add
stc
jb
fwait
imul
cmp
stc
jb
add
jle
jo,pn
cmp
orb
add
test
pop
stc
jb
aaa
add
add
adc
movsb
test
push
mov
xchg
ret
add
add
add
and
nop
jmp
add
add
stc
jb
add
add
jno
push
add
lcall
jb
add
mov
add
jge
pop
idiv
jb
add
push
add
mov
jmp
add
add
add
test
adc
call
nop
jmp
add
add
xchg
mov
add
add
add
add
testb
bound
add
or
jb
add
data16
or
jb
add
add
add
add
mov
nop
jmp
add
push
test
add
jb
jo
add
add
pop
mov
nop
jmp
add
sahf
add
flds
inc
push
mov
xchg
ret
add
ret
movsb
insb
sbb
cmp
jo
add
pop
push
push
mov
xchg
ret
mov
in
mov
push
mov
xchg
ret
push
add
cmpsb
movsl
sbb
subb
ret
stc
and
adc
jb
aaa
adc
jns
add
pop
push
mov
xchg
ret
mov
mov
clc
stc
jb
movl
add
inc
and
jb
jns
add
sahf
add
subb
xchg
add
add
add
stc
jb
add
mov
xchg
push
mov
nop
jmp
ret
sub
push
ret
add
pop
mov
stc
jb
fstl
add
mov
stc
jb
add
add
mov
push
mov
xchg
ret
xchg
add
add
jmp
hlt
insb
fldenv
xchg
stc
jb
add
add
js
stc
jb
add
ja
inc
jl
add
add
add
add
add
push
shll
pusha
ljmp
rol
add
push
stc
jb
movsb
add
add
test
nop
jmp
test
jge
ja
add
add
rcrl
add
jb
sub
add
mov
jg
incl
add
add
add
jmp
lret
insb
and
stc
jb
jg
pop
add
stc
jb
add
cmp
mov
xor
das
out
jmp
add
jb
push
add
inc
adc
jb
add
insb
add
mov
jmp
and
add
add
stos
mov
stc
jb
add
mov
push
mov
xchg
ret
stc
fldl
inc
addr16
out
push
add
lea
test
stc
jb
movl
push
stc
jb
lret
add
mov
cmp
call
hlt
add
xchg
fwait
mov
jb
add
add
divl
cmp
inc
add
fwait
add
and
mov
pop
cld
stc
jb
add
addr16
icebp
and
push
stc
jb
dec
cs
jge
push
mov
addb
pushl
addw
stc
jb
adc
add
add
popa
out
mov
stc
jb
flds
add
or
stc
jb
or
add
pop
stc
jb
add
test
add
scas
popa
stc
jb
add
add
add
add
rclb
incl
add
add
xchg
addr16
xchg
pop
adc
add
stc
jb
add
push
mov
xchg
ret
add
push
add
add
stc
jb
adc
add
ja
dec
xchg
xor
lock
add
jb
add
adc
or
stc
jb
add
add
pop
lret
mov
xor
inc
add
add
fstp
mov
stc
jb
add
add
add
hlt
dec
mov
nop
jmp
test
sahf
fwait
in
add
jne
stc
jb
sahf
xor
divb
rcr
xchg
stc
jb
add
aaa
fwait
add
add
divps
jb
add
jg
gs
imul
stc
jb
jle
xchg
mov
adc
add
adc
inc
add
add
add
cmp
or
stc
jb
xchg
jno
add
jle
push
push
mov
xchg
ret
add
add
cmp
stc
jb
jle,pn
add
hlt
add
and
repz
push
push
mov
xchg
ret
jns
pop
inc
xchg
jb
adc
movsb
xor
add
mov
stc
jb
mov
cli
jne
stc
jb
inc
pop
jge
push
push
mov
xchg
ret
and
addb
push
mov
cmp
push
add
mov
push
stc
jb
add
mov
sahf
jmp
jmp
lret
mov
cmp
push
mov
xchg
ret
add
pop
push
pop
push
push
mov
xchg
ret
add
jle
add
mov
nop
jmp
add
add
stc
jb
add
insb
jl
stc
jb
add
add
jmp
addr16
aaa
add
imul
cmpsb
mov
xchg
repnz
outsl
add
mov
add
stc
jb
mov
add
mov
xchg
ret
add
hlt
add
add
repnz
add
in
and
push
mov
xchg
ret
add
xor
cmpl
nop
jmp
add
xchg
mov
add
add
stc
jb
add
testb
mov
stc
jb
add
add
mov
mov
xchg
ret
fst
lret
in
mov
stc
jb
add
fcos
jne
push
mov
xchg
ret
inc
jg
dec
mov
push
mov
xchg
ret
mov
stc
jb
add
aaa
sub
subl
stc
jb
add
hlt
add
cmp
jb
add
pusha
add
mov
stc
jb
add
push
ja
jmp
xor
add
stc
jb
and
push
mov
xchg
ret
add
add
fdivrp
fisubs
add
add
mov
in
add
clc
add
pop
add
pop
xchg
int3
jge
pop
lock
mov
ljmp
lret
sbb
leave
test
aad
aad
adc
and
push
xchg
ss
mov
mov
cli
addr16
into
xchg
mov
dec
inc
mov
jmp
test
or
add
sbb
jb
out
pop
mov
add
push
pop
or
pop
xchg
shlb
in
iret
les
push
dec
xchg
cmp
out
ftst
inc
xchg
mov
cmp
mov
sub
mov
cld
mov
aad
add
add
shl
xor
movb
daa
xchg
mov
popf
lret
out
adc
lret
dec
inc
add
or
stos
ja
ljmp
jb
in
jle
add
scas
add
cmp
nop
jo
idivb
inc
dec
lret
out
add
daa
shll
sub
xor
inc
xchg
sti
mov
shll
sbb
outsl
addb
jge
rcl
shr
adc
cltd
cmc
jno
daa
popa
push
add
movsl
into
push
mov
stc
mov
stos
pop
and
sarl
addb
add
insl
ljmp
and
negl
in
mov
test
sub
adc
scas
jo
xor
push
in
sbb
pop
aas
push
push
movsb
xor
gs
fistps
cltd
test
cmp
xchg
mov
mov
test
movsb
pop
pop
jle
sbb
lret
dec
add
mov
inc
add
push
add
add
loop
out
insb
je
dec
arpl
clc
adc
mov
cmp
push
roll
addb
roll
add
mov
push
sbb
cmp
fadd
add
jae
sub
outsb
dec
mov
xchg
add
inc
xchg
lds
mov
mov
in
push
fisttpll
addb
int3
pop
sbb
daa
mov
mov
test
cmp
add
aas
xchg
fiadds
add
rol
test
cmp
cmp
pop
into
scas
arpl
movb
sub
addr16
mov
sbb
outsl
and
mov
xor
aaa
add
fldcw
repz
sub
inc
add
sbb
rorb
enter
lahf
lods
stos
cmpsb
iret
fucompp
test
inc
add
dec
sub
cmp
rolb
add
data16
mov
mov
imul
das
mov
pop
lea
add
xor
add
sbb
je
xchg
fs
dec
and
out
inc
add
insb
fwait
and
xchg
xlat
ds
cmp
out
dec
push
gs
mov
mov
dec
ds
cmp
es
add
pusha
add
imul
inc
add
fstl
and
inc
xchg
cmp
fidivrs
xor
out
fistps
mov
ja
cmp
fs
addr16
mov
movsl
xchg
adc
imul
push
add
mov
ficoms
mov
xor
or
fs
sbb
mov
fwait
rol
aaa
jp
push
cwtl
adc
mov
cmp
add
aam
add
cmp
cmp
lret
jge
inc
add
dec
add
pop
pop
pop
loopne
add
adc
sbb
lods
jle
xchg
movb
inc
add
pop
sub
imul
shll
sbb
in
xchg
lds
fsubrl
outsl
mov
jnp
add
sbb
add
mov
pushf
cmp
sahf
cmp
mov
jb
or
xchg
aad
pusha
add
add
xchg
dec
lods
lahf
cld
popf
add
add
add
les
movsb
xor
mov
lret
dec
stos
nop
cwtl
fisubrl
and
mov
test
pop
mulb
add
mov
push
xor
xor
push
adc
push
add
sub
mov
lret
popf
xchg
test
js
bound
mov
paddd
dec
pop
decl
push
add
pop
sbb
jg
mov
mov
mull
adc
in
xchg
adc
mov
stos
adc
push
jecxz
cmp
add
cmpsb
or
addb
pop
push
mov
jmp
mov
jnp
inc
add
out
stos
les
lods
or
pop
pop
jae
nop
mov
inc
add
push
fmull
add
cwtl
pop
sub
jbe
dec
mov
leave
sbb
movb
pop
aaa
xchg
mov
add
pop
int
int
out
call
decb
fs
imul
jl
imul
and
dec
jno
test
lret
xchg
mov
inc
add
add
call
push
ficomps
or
sbb
rolb
leave
sbb
pusha
add
xor
cs
add
std
rcr
jle
jmp
fimuls
daa
lret
mov
cmp
adc
inc
add
add
std
cmp
pop
cs
mov
mov
jge
cli
cmp
mov
sbb
adc
and
xlat
and
add
scas
das
mov
lods
dec
pop
cli
cs
popf
aad
outsl
stos
rolb
std
paddd
sbb
add
dec
dec
sti
mov
jnp
lods
sbb
push
sahf
push
adc
dec
cmpsb
pop
mov
add
in
test
dec
jbe
push
inc
add
sub
fldenv
pop
dec
mov
cmpsb
mov
and
popf
mov
stos
mov
fistl
jns
std
insl
in
addr16
into
pop
sbb
jb
add
sbb
sub
inc
cmp
addb
ret
jmp
mov
int
push
fwait
out
rorl
add
dec
sbb
dec
or
push
sbb
mov
add
pop
shrl
sub
test
addb
pop
mov
lea
les
mov
add
mov
sbb
xchg
adc
addr16
push
mov
push
bound
inc
pushf
fisubrl
dec
mov
push
sbb
rcll
adc
cmp
popf
es
movsb
int
out
aad
shufps
pop
add
in
and
add
push
cmc
mov
dec
or
mov
mov
mov
test
addr16
test
stc
pop
int
imul
or
add
ljmp
inc
call
call
fcompl
in
add
ret
add
stos
in
mov
shr
sub
rcl
jb
pusha
add
loope
push
es
dec
and
or
push
repnz
incb
ss
sti
mov
mov
dec
cmp
or
mov
xchg
into
fwait
jmp
sub
mov
out
xchg
rcr
xor
jmp
mov
stc
insl
rolb
inc
add
movsl
stc
jns
fstpl
xor
sbb
into
nop
call
jg
mov
mov
jb
out
scas
inc
add
aad
pop
call
mov
mov
lahf
repz
mov
rcll
sarl
stc
pop
movsb
lods
idivl
in
loope
cli
icebp
mov
addb
repz
mov
mov
repnz
fs
inc
mov
out
sbb
mov
ret
dec
mov
jne
add
outsl
mov
movsl
fwait
int
xlat
dec
iret
divb
or
cmp
adc
mov
jg,pn
jl
xchg
or
push
addb
jle
out
pop
scas
dec
push
cmc
mov
or
mov
mov
pop
dec
mov
dec
xor
arpl
ret
stos
fcmovu
rolb
and
imul
fdivrp
das
mov
add
pop
jl
sub
ja
mov
cmpl
pop
rcr
mov
add
adc
cmp
inc
jbe
popf
jge
dec
or
in
lods
add
add
mov
lea
bound
sti
or
sub
jp
ss
loope
xchg
mov
jle
ds
sahf
sarb
inc
in
sbb
xlat
and
call
sbb
jbe
je
mov
mov
and
sbb
inc
add
rorl
jl
pop
rolb
mov
nop
mov
cld
sub
mov
add
jno
fnstcw
mov
adc
cltd
and
jg
fcoms
jbe
loope
btc
add
aam
mov
jmp
addb
xchg
dec
xchg
xchg
rorl
xorl
pop
jnp
jmp
cmc
pop
imul
mov
ss
fdivl
clc
jmp
xchg
xchg
sbb
add
pop
xchg
mov
sti
lret
out
imul
add
imul
test
dec
out
add
add
ficomps
into
xor
daa
movb
mov
push
mov
jno
xchg
jge
movsl
daa
inc
add
jb
push
rorl
add
add
jp
jmp
jl
cs
cmp
pushf
dec
xchg
mov
jecxz
lods
sarl
mov
mov
cmp
rorl
es
add
js
inc
ret
dec
pop
nop
jbe
fndisi(8087
push
sbb
movsb
xchg
ljmp
add
mov
jbe
fidivrl
andps
adc
fisubrl
or
cmp
std
lret
pop
in
add
and
jb
or
pop
push
jo
sub
iret
test
xchg
or
addb
stos
test
adc
idiv
pusha
add
fldcw
call
or
ljmp
pusha
add
add
idiv
push
sub
rcr
js
add
adc
jp
add
lea
sub
or
movsb
jb
or
addb
mov
mov
push
and
mov
add
mov
in
xchg
pusha
add
adc
mov
les
lret
mov
mov
cmc
jnp
in
sub
cmc
push
mov
test
add
call
jne
dec
cmp
out
mov
into
add
nop
popf
and
jge
xlat
imul
ret
insb
sub
loope
lods
int
xor
sti
addb
je
addr16
xchg
fists
mov
in
push
mov
out
or
sbb
or
div
leave
xor
and
and
pop
lahf
fadd
add
clc
xor
mov
adc
jle
mov
or
push
loop
insb
and
push
ja
mov
mov
fnstcw
pusha
add
add
push
add
cmpsl
ds
addb
test
dec
mov
pushf
sbb
xor
arpl
push
and
pop
xchg
xor
imull
punpckldq
arpl
cmpsl
sarb
loope
addb
dec
adc
and
out
pop
inc
add
mov
pop
xchg
add
xor
lock
xor
add
jo
pop
ret
dec
fstpt
sub
mov
rcll
adc
nop
lret
es
inc
add
dec
cmp
dec
cmp
cmp
jecxz
cmpsl
rol
add
add
mov
xchg
scas
mov
lds
mov
ficomps
cmp
repz
mov
mov
pop
js
pop
mov
sbb
or
jecxz
sub
sub
mov
jnp
or
sub
stos
xor
or
and
xchg
sbb
jmp
mov
mov
dec
int3
and
hlt
dec
mov
je
dec
jg
add
adc
lock
pop
rcr
xchg
movsl
es
scas
adc
iret
sbb
aaa
cmp
in
jp
xchg
scas
jns
mov
push
push
jle
push
sbb
push
jp
sbb
das
inc
jg
cltd
push
or
insb
leave
pop
dec
lahf
mov
jmp
xchg
jb
mov
dec
test
xor
push
dec
aaa
cmp
aas
and
es
mov
aam
dec
clc
shrl
dec
js
lahf
mov
fistpll
sbb
rolb
sbbl
sub
and
xor
mov
sub
popf
cmp
aad
mov
xchg
and
lret
pop
mov
shlb
pop
xorl
push
addr16
fldenv
jb
insl
mov
es
mov
ftst
or
jnp
add
add
mov
xor
add
pop
adc
or
iret
jbe
ds
in
enter
dec
fcomi
inc
mov
pop
dec
inc
add
jne
xor
fistl
jns
stos
leave
jge
int3
inc
add
dec
ja
push
or
adc
push
mov
and
jmp
mov
test
outsb
pushf
push
outsb
xchg
pop
sbb
add
fwait
sbb
test
aas
gs
add
cmpsl
xor
rcrl
sub
mov
pop
mov
jg
dec
cld
pop
out
lds
repz
out
pushf
arpl
lds
cmp
pop
push
pusha
add
push
add
sbb
xchg
aas
adc
jge
pop
rorl
fdivrs
bound
pushf
outsb
add
inc
add
add
test
sub
push
cmp
pop
sbb
push
jg
sub
fimuls
negb
fcompl
inc
push
add
dec
hlt
inc
movsb
sti
outsb
dec
fiaddl
sub
and
enter
incl
pusha
add
lods
adc
inc
add
fs
add
adc
cmp
sbb
xchg
movb
add
cltd
imul
addb
add
mov
inc
add
xchg
loopne
jg
pop
loop
sub
inc
pusha
add
pop
rol
add
fidivrl
push
pop
fwait
or
dec
jne
cli
jle
adc
dec
xor
scas
fisttps
mov
insl
les
loopne
lods
pop
add
xor
test
call
cmp
jns
add
push
cld
xor
jo
add
add
add
add
and
add
outsl
stos
cmp
dec
mov
push
dec
pusha
add
push
sub
add
shl
push
inc
mov
fdivr
push
frstor
test
js
ja
add
jge
mov
pextrw
lods
das
pusha
add
add
mov
mov
xchg
es
xor
push
add
shll
aaa
sti
scas
cmp
pop
rorb
f2xm1
jbe
pop
cmpsb
mov
mov
xchg
movsl
ljmp
scas
lret
mov
cwtl
mov
inc
add
push
popf
dec
jp
call
pop
push
mov
inc
add
inc
push
xor
add
gs
push
arpl
cmp
lods
cmp
xor
mov
into
insb
jno
mov
mov
mov
inc
add
cmpsb
stos
pop
inc
jle
mov
xchg
inc
mov
adc
fimuls
xchg
sub
mov
stc
fcoms
mov
aas
dec
jmp
add
push
sub
std
fadds
or
cmp
cmp
inc
add
pop
mov
shll
addr16
fwait
cmpsb
fs
es
mov
sti
jo
icebp
xor
insb
sub
ficomps
pop
insb
push
push
add
daa
outsb
push
add
test
daa
pop
push
mov
mov
push
pop
cwtl
loopne
mov
and
add
lds
imul
mov
jecxz
mov
fs
dec
add
outsb
test
add
repz
and
push
xchg
add
mov
inc
add
mov
movb
add
icebp
xchg
movsl
mov
xchg
push
xchg
sbb
addb
mov
add
add
subl
mov
fs
jb
jae
in
add
xchg
addb
out
add
call
adc
or
aad
fidivrs
mov
jp
push
add
push
push
leave
std
fisubrl
mov
pop
lret
push
mov
icebp
cmc
push
pop
cltd
fildl
sti
sbb
cmp
insl
fs
push
ficompl
iret
flds
in
add
stos
mov
add
ret
shl
dec
xchg
sbb
add
movsb
add
and
jl
add
add
fldenv
fstp
mov
xchg
jecxz
imul
ja
or
mov
int3
jo
enter
sub
push
mov
adc
add
testl
push
scas
pop
sub
add
mov
add
fs
gs
mov
fldcw
cwtl
and
sbb
add
mov
lea
dec
pop
dec
mov
fwait
ds
leave
xchg
arpl
mov
insb
fstpt
cmp
pop
mov
inc
lcall
cmp
mov
out
and
dec
fisttpll
xor
in
jecxz
jne
jecxz
jnp
jo
dec
fdivrs
test
jg
inc
add
nop
xchg
pop
in
fstps
push
jmp
push
xchg
inc
add
ss
add
aas
out
and
xor
xchg
push
dec
icebp
add
bound
nop
into
pop
inc
jp
stos
sub
pmullw
mov
sbb
add
out
addr16
xchg
sar
ja
cld
adc
ljmp
addb
jmp
out
cmp
movsl
adc
or
push
add
int
das
jl
pop
outsb
rolb
rcll
mov
add
xchg
das
mov
icebp
mov
shll
clc
or
test
mov
pusha
add
cltd
xchg
shll
add
daa
pop
inc
insl
es
or
mov
cmp
xchg
lcall
lods
daa
lods
mov
in
repnz
lret
push
mov
sahf
out
fidivrl
push
jnp
or
mov
outsb
pop
rorl
pop
add
add
shll
mov
sub
jbe
aam
lds
ljmp
ja
cmp
lea
je
clc
int
lret
mov
push
pop
pop
lods
stos
or
lret
adc
lds
xor
dec
inc
add
pushf
shlb
mov
mov
push
shrl
insl
adc
and
and
aam
call
add
call
push
mov
dec
int
les
test
clc
fcoml
add
popf
cli
dec
push
enter
or
movsb
mov
inc
add
or
add
jne
add
jp
movb
stos
imul
mov
inc
add
mov
cld
ror
mov
pop
fisubrs
xchg
adc
mov
outsb
or
add
dec
xchg
jmp
mov
add
and
xor
je
loopne
mov
dec
cmp
sbb
adc
xchg
ljmp
mov
inc
pop
popa
mov
dec
xchg
xchg
fistpll
inc
xchg
insl
out
xchg
adc
lcall
xor
xchg
mov
mov
test
data16
push
daa
mov
xor
sub
addb
adc
mov
mov
dec
mov
pop
push
dec
in
inc
xor
jg
cli
insb
pop
iret
imul
fbstp
les
loope
sub
add
leave
addb
mov
inc
int
outsl
int
add
jmp
mov
jnp
add
mov
dec
sti
test
divl
xchg
or
dec
dec
xor
add
mov
xor
rorl
cmp
add
loop
mov
subl
les
call
mov
in
sbb
out
xchg
test
mov
hlt
sar
add
pop
aam
scas
push
rolb
cmpsl
pushf
movb
jmp
mov
and
stos
mov
add
ljmp
inc
add
add
pop
bswap
fwait
jle
adc
sahf
in
lret
add
add
jne
jecxz
lds
jmp
pop
pop
push
and
sbb
pop
jbe
inc
add
lock
adc
xor
mov
xor
fcoms
push
ja
jecxz
push
mov
pop
push
mov
push
call
movsb
data16
mov
push
jge
mov
sub
sbb
and
call
cs
sub
add
jp
je
rolb
jp
dec
push
scas
shlb
sbb
dec
movsl
out
pop
sbb
mov
pop
sti
bound
jns
jge
and
mov
and
sahf
mov
dec
jns
pop
push
xchg
cmp
fcos
xor
xchg
std
aad
cmp
les
setae
pushf
mov
cmp
jae
lock
int
outsb
xchg
cmc
dec
pop
repnz
push
dec
mov
icebp
cmp
mov
test
jns
lret
xchg
pusha
add
addb
outsl
outsl
add
push
or
cmp
sarl
fisttpll
leave
lret
leave
addb
and
or
sbb
iret
ds
jnp
add
lods
xchg
popa
xor
xchg
jbe
xchg
fstpl
pop
or
outsl
cmp
xchg
mov
movd
sbb
dec
inc
stc
nop
es
xchg
ss
cmp
sbb
fnstcw
aam
cli
out
leave
movsb
dec
mov
mov
add
aad
ds
lock
jae
jae
and
outsb
pop
das
push
lods
decb
test
adc
xchg
add
add
mov
sahf
rolb
rcll
sub
lcall
push
mov
and
push
dec
or
dec
push
xlat
push
xor
stos
popf
inc
add
psadbw
mov
repnz
or
pop
mov
mov
push
fcmovu
jge
pop
push
and
inc
add
fcoms
fidivl
outsb
call
xchg
out
mov
fistl
xchg
aaa
fcmovu
mov
mov
xchg
popa
rcll
or
leave
pop
pop
inc
add
pop
lock
and
add
leave
lds
or
push
xchg
aaa
mov
add
jle
out
push
sahf
mov
outsb
aam
lcall
add
pusha
add
adc
or
push
outsb
leave
enter
fbld
add
sub
inc
xchg
lea
ret
sbb
push
sub
daa
movb
inc
jno
push
dec
shlb
xchg
xchg
pop
pushf
addb
inc
mov
sbb
pop
lea
add
sub
xchg
sahf
cmp
lods
xchg
push
jmp
xor
lret
loope
mov
cmc
inc
add
mov
repnz
xchg
jl
out
mov
leave
pop
pop
sbb
add
sbb
xchg
ja
push
pushf
cmp
sarl
rcl
sub
mov
into
fisttpl
stos
push
add
in
pop
push
fwait
mov
aas
inc
add
xchg
lock
outsb
popa
dec
mov
inc
punpcklwd
lock
bound
std
call
dec
adc
mov
xor
imul
cwtl
or
out
add
neg
push
add
lahf
add
cmp
xorl
clc
lods
test
cld
into
add
lcall
xor
or
sbb
ret
add
adc
add
lea
add
movl
mov
lcall
cltd
and
icebp
mov
add
or
or
cltd
push
imul
mov
or
xchg
gs
xchg
out
add
adcl
xchg
insb
scas
mov
adc
jo
std
push
cmpsb
shll
xchg
test
nop
iret
mov
fisttps
pop
mov
gs
bound
mov
inc
cmp
bound
or
movb
lock
aad
mov
enter
hlt
fisubl
mov
and
bound
sbb
jae
xchg
leave
add
add
add
and
mov
insb
ds
dec
mov
addb
push
aas
aam
lea
mov
push
sub
arpl
movsl
lret
es
add
mov
pop
push
xchg
jns
lcall
add
into
or
ja
adc
rcl
pop
xchg
or
push
rclb
xchg
or
ficompl
insb
in
nop
add
int3
sbb
sub
cmpsb
js
add
mov
jecxz
pop
imul
in
cmpsb
dec
mov
or
add
lahf
push
test
mov
fcomi
adc
push
xor
cmp
loope
repnz
mov
sbb
mov
sub
sbbl
mov
into
mov
lahf
xor
dec
outsl
dec
push
mov
jmp
lcall
adc
scas
xor
popf
sahf
adc
jo
cltd
jp
inc
nop
jmp
mov
notb
ret
push
mov
sbb
data16
push
add
aam
daa
ds
fs
ja
lock
xor
dec
adc
mov
pop
fcompl
push
add
dec
ret
insl
or
call
test
push
mov
popa
sub
sbb
out
adc
dec
ss
mov
jb
xor
roll
les
and
pop
mov
pop
sbb
rclb
lret
mov
add
add
sar
and
mov
lahf
adc
sbb
lea
or
test
sahf
adc
aas
sahf
push
inc
add
lock
cmp
push
mov
stos
pop
inc
add
inc
cmp
add
cmpsl
cwtl
sbb
add
popa
outsb
mov
push
movsb
add
inc
add
jns
inc
add
mul
sbb
jbe
add
jmp
add
mov
aas
mov
add
sub
add
sub
add
dec
rolb
cli
jle
jnp
mov
je
data16
popl
shl
je
sub
mov
cld
and
enter
in
sub
out
mov
dec
jb
mov
dec
push
xor
add
mov
mov
das
mov
cs
push
add
sbb
and
test
sub
out
mov
stos
popa
cs
fstp
and
xorl
cmpsb
xchg
mov
dec
jp
vpcmpgtw
and
add
int3
push
rol
int3
xchg
xchg
add
mov
inc
add
add
loope
loop
push
repnz
cmc
fs
insb
test
cli
push
scas
and
popf
cmpsb
fdivrl
add
add
mov
add
les
dec
mov
sub
cwtl
fldcw
arpl
xor
add
pop
aas
push
shr
add
jmp
sahf
ficoms
imul
out
jp
mov
js
pop
mov
das
cmp
dec
int3
mov
adc
test
loopne
aas
xchg
pop
bound
rclb
pop
or
mov
jecxz
inc
in
ja
push
add
xor
mov
pusha
add
xchg
repz
xlat
jl
hlt
or
inc
rcr
inc
add
cmp
sbb
mov
std
out
movsl
push
mov
imul
inc
add
gs
and
pop
sti
mov
fisubrl
shll
popa
mov
xchg
dec
test
into
push
and
pop
jo
xor
and
pusha
add
dec
jb
jle
imul
add
scas
icebp
cmp
add
inc
add
sbb
fistps
xchg
ljmp
xchg
xchg
iret
testb
nop
inc
test
jns
fidivrl
xor
add
hlt
movsb
imul
push
cmp
lretw
pop
add
inc
add
movsl
divl
cmpsl
cmpsb
ret
mov
pop
movsb
dec
ja
das
pop
pop
add
adc
fwait
es
jno
aad
addb
test
push
mov
inc
add
jne
adc
cmpsb
mov
inc
add
in
pop
mov
fmull
or
xchg
mov
add
cmpl
outsl
rolb
mov
or
shlb
lods
jmp
mov
incb
outsl
aam
sub
and
cwtl
aaa
pop
movsl
jmp
cmp
lock
insb
mov
outsl
clc
jecxz
pusha
add
sub
nop
and
or
push
test
popf
sbb
cmp
mov
sbb
dec
sub
test
push
sbb
add
dec
or
dec
xor
mov
into
sti
dec
sahf
cmp
jmp
jo
sbb
mov
sbb
inc
add
push
dec
ret
int
push
xor
jge
outsl
sti
xchg
loopne
outsl
jno
sbb
push
pop
out
mov
mov
push
mov
out
mov
ret
data16
outsl
dec
xchg
xor
pushf
xchg
sub
jmp
xor
cmp
dec
sbbl
enter
stos
and
arpl
test
insb
dec
test
cmp
ljmp
pop
xor
dec
popa
lock
cltd
push
dec
aaa
movsl
shll
push
and
cmp
loop
dec
bound
push
add
xor
divl
pop
cmp
mov
or
inc
add
pop
xor
add
cmp
dec
jp
mov
movsb
adc
sbb
sbb
int3
pop
aaa
add
add
push
rcrb
scas
push
add
push
sbb
icebp
loope
xor
das
in
mov
in
cltd
daa
adc
xchg
loopne
add
in
pushf
sub
mov
xchg
jecxz
sub
cmp
in
in
mov
lea
cli
xor
lea
add
sub
lock
fwait
scas
cld
imul
out
out
movsl
jae
mov
push
push
mov
xchg
add
rcll
sub
mov
pop
pop
and
shl
addl
cltd
je
sbb
mov
gs
mov
add
xor
push
in
mov
clc
jmp
mov
sbb
in
xchg
add
int3
out
test
rcl
ja
jle
repnz
dec
mov
jmp
std
and
pop
cmc
push
inc
add
ja
or
inc
pop
out
xchg
clc
in
ret
cmc
out
cld
inc
push
or
fstpl
imul
mov
push
bound
push
lret
psubsw
call
and
arpl
cmp
add
push
add
add
int3
cmp
cmp
cmp
push
notl
loopne
mov
outsl
jg
xchg
outsb
rcll
cmp
sbb
clc
mov
mov
sbb
and
mov
mov
cmp
sub
sbb
leave
dec
notl
add
push
dec
ret
add
pop
sbb
scas
mov
pop
push
stc
jno
lahf
fs
mov
or
pop
add
push
call
das
mov
add
inc
add
sbb
fs
add
jne
add
int
add
and
sbb
adc
rolb
mov
fstps
adc
mov
dec
and
jbe
jae
cli
sbb
shrl
insl
inc
add
push
gs
mov
imul
bound
mov
push
cwtl
cmp
es
call
sbb
pop
sub
hlt
out
add
pop
sbbl
shll
lret
outsb
mov
inc
add
xor
ss
add
inc
add
arpl
add
imul
push
popf
mov
addb
and
cmp
sbb
mov
or
mov
movb
sbb
mov
xor
mov
test
jno
mov
or
add
mov
mulb
stos
enter
movsb
cltd
rolb
add
cmp
addb
and
xchg
or
addb
stos
inc
jl
mov
arpl
fld
xor
lahf
dec
sbb
add
mov
lea
cmp
fnstenv
mov
lds
add
mov
icebp
push
outsb
or
in
les
xchg
stc
popa
fwait
jmp
insb
ficoml
xchg
dec
cmpsl
cmpsb
sbb
mov
sbb
add
enter
out
mov
idivl
stc
imull
xor
jl
dec
fbld
push
pushf
lods
mov
sbb
rolb
add
scas
stc
push
add
jmp
or
adc
lods
jp
add
or
adc
call
and
outsl
in
ror
xor
dec
inc
ret
lret
repnz
outsl
push
sub
shll
xchg
or
add
insl
sbb
or
stos
pop
jg
rolb
add
dec
adc
popf
push
add
movsb
cmp
incl
jno
or
bound
in
cmc
jne
filds
add
inc
add
cmp
dec
mov
dec
decl
add
daa
xor
push
gs
mov
bound
push
es
mov
dec
ja
add
sub
shrd
push
inc
adc
hlt
and
dec
outsl
add
adc
xchg
mov
mov
mov
movsb
jl
xchg
cmp
mov
gs
push
add
std
pusha
add
rolb
add
ret
xor
add
mov
std
and
in
push
mov
xchg
fldcw
stc
xchg
pop
cmp
xor
ljmp
fwait
mov
push
and
jle
cmc
leave
push
std
nop
popf
fldenv
aad
dec
in
push
ljmp
jne
xchg
cwtl
push
add
sbb
iret
ret
add
add
das
jle
imul
es
add
out
int3
or
sbb
xlat
cli
dec
adc
push
mov
pop
mov
sub
movb
cmp
out
je
fwait
jl
jmp
jmp
add
mov
test
sbb
rcrb
mov
jno
loopne
mov
add
test
aad
cmc
push
or
jl
insb
adc
fs
mov
sbb
lods
xchg
mov
push
sub
sub
shl
mov
clc
lahf
inc
mov
adc
mov
bound
mov
push
jmp
out
outsl
cltd
mov
imul
fadds
push
not
das
xor
ljmp
mov
pmaxub
aas
subl
dec
xor
in
push
popa
fcomp
pop
and
ss
xchg
cwtl
mov
data16
decl
rolb
push
add
ret
add
push
lahf
cli
jns
cmp
xchg
lret
adc
mov
mov
loopne
fwait
test
push
movsl
cmc
inc
rcr
aaa
adc
fadd
add
cmp
add
push
into
or
mov
xor
jne
imul
sub
daa
rcrl
dec
movsb
mov
and
jl
mov
add
cmpsb
rolb
pop
cwtd
xchg
mov
xor
add
push
sbb
mov
enter
inc
push
stos
pop
mov
faddl
sahf
out
sbb
jp
add
sub
ret
ja
mov
sub
cmpsl
or
or
out
hlt
cmc
mov
fwait
outsb
adc
mov
xchg
pop
fadd
xor
call
div
inc
add
fidivs
push
mov
call
inc
int3
into
sarb
sub
sub
inc
out
jmp
mov
rolb
or
dec
push
aas
int3
pop
pop
fisubrl
push
stos
lret
adc
shl
inc
inc
mov
stos
repz
dec
push
add
pop
mov
in
das
push
cmp
add
add
addr16
mov
clc
mov
add
push
fwait
mov
xchg
and
or
loope
mov
jbe
mov
add
into
loopne
lret
pop
daa
mov
ret
movsl
mov
dec
int3
in
stos
divb
fcmovu
mov
arpl
stc
decb
pop
stc
test
add
lock
cmp
push
mov
jmp
pop
icebp
inc
hlt
outsb
mov
mov
cmp
enter
cwtl
cmp
or
add
inc
xchg
call
test
fs
or
dec
mov
mov
loope
add
data16
sahf
xlat
mov
jnp
jmp
add
addb
and
add
test
xchg
movb
mov
pop
in
shlb
sarb
leave
fidivl
add
add
fcomps
aas
out
stos
push
stos
cmpsl
xorl
cmpsb
daa
stos
jne
bound
pop
pop
mov
mov
and
movsb
popf
cmp
jns
add
fcomp
sbb
pop
call
stos
icebp
mov
movsl
mov
and
ret
dec
mov
dec
test
psadbw
aaa
imul
or
jne
xor
mov
lea
xor
sub
ss
test
jecxz
push
mov
jno
data16
push
mov
jae
push
rcrb
add
add
mov
add
hlt
sti
xchg
cmp
jmp
sub
outsl
push
add
imul
jecxz
push
and
push
iret
xchg
adc
insb
ljmp
push
jecxz
fmuls
cltd
dec
jnp
sbb
push
dec
or
aad
ret
or
push
sbb
lods
adc
dec
jns
pop
cltd
flds
sub
or
lea
jb
xor
loope
test
jo
jp
xor
xor
movsb
mov
mov
std
add
mov
jnp
mov
bound
int
enter
push
add
cmp
aas
mov
jecxz
add
aam
adc
icebp
push
aaa
rclb
mov
rolb
add
mov
test
cmp
add
test
addb
test
fwait
dec
test
xchg
ret
pop
jg
cmp
loope
add
dec
fnstsw
or
xchg
inc
add
sub
into
enter
call
scas
mov
push
pop
clc
xchg
cmpsl
mov
add
repnz
jmp
add
push
pop
divl
in
xor
cmp
add
adc
push
cmp
out
lcall
cwtl
or
mov
and
or
mov
in
sub
icebp
out
cli
out
jbe
outsb
dec
xor
rol
mov
rcrb
add
test
insb
cmpsb
aam
sbb
add
mov
mov
call
std
daa
or
cmpsl
xor
add
aaa
pop
mov
in
insl
insl
cmp
mov
insb
addb
dec
jg
adc
inc
xor
xchg
jmp
test
or
adc
add
push
mov
aam
jne
add
inc
loopne
jge
add
jl
add
add
inc
add
jns
enter
sbb
test
sub
and
adc
movl
xchg
rolb
add
fstpl
iret
test
jb
pop
sbb
sub
addb
xchg
or
sbb
decb
add
mov
iret
adc
fwait
dec
loopne
rolb
inc
ret
js
add
xor
mov
jnp,pn
in
ret
jae
call
add
jnp
xchg
js
das
fwait
stos
cmp
mov
scas
push
bound
push
scas
sbb
les
aaa
mov
mov
jl
mov
jmp
popf
adc
repz
inc
xchg
fs
arpl
lods
dec
dec
iret
adc
adc
jne
icebp
jmp
mov
inc
add
mov
addb
jg
iret
pop
cmp
mov
adc
fiadds
add
mov
xor
pop
enter
add
push
pop
hlt
fwait
jle
push
mov
add
and
stos
arpl
mov
movsb
jmp
mov
in
pop
outsl
mov
out
scas
jmp
add
jns
adc
gs
mov
hlt
ss
adc
fstp
inc
add
lods
pop
xor
adc
lds
int3
jge
ja
insb
jo
mov
jge
sbb
mov
dec
adc
add
push
xor
out
dec
xor
mov
jge
icebp
adc
add
ret
rolb
movsb
shl
jl
add
add
inc
add
rcrl
pop
mov
mov
enter
lret
enter
push
aas
or
inc
inc
push
dec
push
xchg
outsb
push
cmp
mov
inc
add
das
je
clc
fnsave
fs
rclb
in
pop
nop
inc
jae
into
lcall
xchg
pop
jae
add
adcl
lds
testl
outsl
mov
clc
mov
dec
hlt
stc
lods
xor
cmp
int3
fdivr
enter
pop
imul
mov
and
adc
mov
adc
xchg
push
int3
int
lahf
add
sbb
loope
sbb
add
pop
cmpsl
or
xchg
cmp
scas
stos
bound
sbb
mov
add
adc
push
and
inc
add
imul
insb
loopne
ja
les
test
dec
adc
add
add
fcomps
jnp
hlt
dec
insl
aad
xchg
pop
mov
je
pop
pop
lea
sbb
stc
loop
setns
aas
xchg
push
enter
lret
cs
xchg
xchg
dec
xor
and
out
cmc
mov
data16
dec
mov
aam
xchg
sub
mov
loopne
dec
pop
add
add
pusha
add
pop
sti
push
mov
jnp
imul
ss
stos
aas
insb
sbb
cld
iret
fwait
xor
cmp
fdivr
jne
jge
mov
je
jge
add
mov
sbb
mov
xlat
rolb
aad
rorb
xchg
or
pop
nop
pop
or
and
test
push
add
jb
inc
fdivl
jge
call
sbb
enter
lret
jmp
scas
inc
loop
rcll
es
faddp
das
in
jge
out
jno
rorb
lds
lea
add
bound
and
shll
lock
add
cwtl
cwtl
add
in
mov
mov
pop
and
imul
or
xor
add
sub
je
jecxz
popf
test
jmp
mov
lcall
mov
add
add
loope
pop
mov
fwait
icebp
nop
push
push
lock
leave
lret
jl
mov
xor
pop
xchg
pop
in
data16
fs
cli
xor
inc
add
ja
jmp
mov
push
divb
or
in
mov
setl
adc
test
movsl
push
dec
es
dec
cmp
inc
inc
testl
sti
add
mov
mov
xchg
adc
gs
fstpt
sahf
decb
in
mov
push
bswap
stos
add
bound
or
sbb
cli
mov
scas
jg
push
add
mov
inc
or
push
fnstcw
popl
jecxz
inc
add
test
ret
lret
add
cmc
addb
or
in
xorl
push
pop
popf
sbb
cmp
mov
orl
movl
jecxz
in
or
inc
add
and
sbb
sbb
lret
add
cli
lret
add
mov
adc
mov
das
pop
ljmp
imulb
add
adc
test
adcl
jmp
ds
ja
sbb
int
fildll
mov
xchg
inc
add
jns
sub
inc
popf
jae
popa
or
mov
add
mov
add
or
mov
sbb
cmpsl
andl
xchg
dec
xchg
test
or
jno
out
sbb
mov
sti
aas
ja
cli
outsl
ficompl
pop
mov
enter
xor
adc
aam
inc
add
cmp
repz
test
adc
addr16
jne
pop
cmp
je
add
xor
cmpl
data16
cli
jo
fildll
add
int3
mov
out
xchg
jg
cmpsl
lahf
cld
jno
cmpsb
mov
add
jg
dec
mov
push
sbb
test
mov
add
gs
int3
mov
add
ljmp
adc
call
pop
pop
add
jb
add
inc
xlat
cmc
inc
dec
iret
gs
inc
add
jp
jp
push
popf
pop
in
addr16
inc
testb
lahf
data16
xchg
enter
call
add
or
jmp
push
stos
dec
jmp
push
ljmp
clc
popf
cmc
loopne
repz
add
fcmovu
cmp
or
jge
mov
xor
leave
pusha
add
add
mov
pop
imulb
mov
cwtl
nop
xor
fistl
test
and
in
loopne
pop
dec
dec
into
ret
add
xchg
xor
ss
push
jns
xchg
idivl
add
call
add
dec
cltd
inc
add
or
adc
xchg
or
push
jp
inc
add
push
mov
fwait
adc
add
mov
or
dec
dec
pop
in
test
stc
sub
lea
loop
add
popf
lea
divb
outsb
or
pop
shrl
stos
mov
pop
dec
data16
mov
xchg
jge
mov
fcomi
sub
mov
mov
push
movsb
and
popa
xchg
inc
add
test
dec
push
inc
pop
cltd
lret
mov
lock
out
mov
jg
add
aam
add
add
add
add
xchg
jns
cld
call
add
test
dec
cmpsl
dec
inc
popf
adc
lret
aas
arpl
pop
out
add
cmp
in
sbb
jecxz
xlat
xchg
cmpsl
xchg
cs
std
into
fisttpl
frstor
push
push
pusha
add
mov
aas
jb
decl
arpl
scas
push
adc
test
add
imul
bound
in
jne
icebp
cli
repz
dec
mov
nop
out
mov
xchg
jge
jge
add
movb
xchg
shlb
dec
sbb
int3
mov
mov
shrb
pcmpeqw
pop
shrl
pop
shrb
stos
dec
out
xchg
jecxz
xor
lret
lret
out
shrl
cmpsl
imul
mov
xchg
repz
inc
add
xchg
jl
test
xchg
addb
movsb
fwait
sbb
mov
add
call
pop
negl
xlat
or
fstps
ljmp
mov
std
popf
movb
aam
jmp
jno
cmp
and
sbbl
push
inc
add
lcall
sub
es
cli
and
jns
push
mov
test
pop
aad
lret
sarl
add
xchg
and
sbb
pop
ljmp
xchg
int
call
adc
nop
inc
and
aam
mov
sti
ds
push
stos
test
dec
fimuls
jns
mov
inc
xor
ljmp
lcall
jnp
aam
jnp
add
push
aad
daa
lods
mov
inc
test
loop
ret
mov
out
ficoms
pop
adc
jle
pushf
add
jg
cmc
sub
push
add
xor
in
jp
push
mov
pop
inc
sub
add
add
and
pop
fstps
mov
cmp
pop
mov
mov
mov
incb
add
xchg
std
xchg
loopne
push
adc
or
add
inc
shlb
mov
add
leave
out
faddl
adc
iret
mov
add
call
add
hlt
out
adc
add
add
and
stos
cmp
or
insl
stos
or
testb
movb
or
cwtl
dec
addr16
testl
lea
or
in
xor
addl
mov
outsb
jns
sbb
or
ret
aad
push
add
push
xor
jle
ja
fsubrl
ljmp
mov
add
xchg
jae
inc
mov
xor
icebp
sbb
inc
mov
xchg
loopne
scas
ret
fisubrl
jge
xchg
mov
arpl
add
adc
not
inc
sub
inc
lahf
mov
pop
scas
dec
movb
mov
mov
dec
cmp
test
pop
mov
popa
dec
jae
add
sbb
jns
repz
es
fs
jne
xor
add
lods
mov
ret
dec
mov
pop
scas
push
dec
stos
dec
mov
je
mov
aam
sbb
jecxz
lret
movsl
dec
mov
fsts
sub
add
inc
add
fld
cli
ds
cmp
scas
hlt
lret
push
das
mov
aad
jg
or
fisttpll
lcall
out
xor
stos
mov
movl
xchg
cmp
in
out
in
shll
push
or
imul
mov
add
sti
lea
jne
aas
sbb
pop
mov
repz
imul
push
popa
dec
dec
cmp
push
cltd
xor
in
push
add
movsb
loope
or
mov
jbe
pop
addb
cltd
mov
inc
or
lods
loop
es
insl
outsl
or
bound
jp
pop
cmp
in
xchg
sbb
add
test
icebp
in
aad
lahf
or
sbb
lds
inc
add
daa
cmp
dec
gs
xor
cmc
arpl
sbb
rolb
inc
out
lds
and
dec
mov
outsl
xchg
rolb
shll
jge
lea
inc
les
sub
add
adc
jle
jmp
je
dec
jb
shll
fmull
dec
add
pop
and
imul
add
add
xchg
fiaddl
pushf
mov
xchg
or
outsl
sbb
pop
std
je
pusha
add
pop
stc
push
add
loopne
inc
inc
mov
lret
or
mov
lahf
clc
je
jg
mov
add
scas
push
add
movsl
cmp
push
xchg
or
insb
jmp
pop
mov
add
pushf
xor
mov
cmc
cmpsb
pop
xchg
inc
sub
xor
je
push
ss
repnz
pushf
xor
xor
les
call
icebp
leave
in
cmp
push
popf
jo
addb
and
mov
mov
mov
pop
loopne
fimuls
inc
push
into
aad
mov
lcall
add
flds
loopne
pop
xchg
movsl
sub
test
mov
fnsave
adc
bound
mov
jg
cli
inc
lea
add
cmp
dec
pusha
add
fadds
daa
xor
add
mov
notl
insl
dec
add
mov
jbe
mov
js
jno
add
sub
or
push
std
pop
sub
xchg
jae
outsb
test
add
xor
push
aas
cmp
mov
lret
je
pop
pop
mov
push
jno
rorl
push
sbb
add
data16
mov
scas
pop
cmp
call
dec
push
or
out
pop
add
xlat
icebp
push
aam
dec
lahf
ret
cs
test
pop
pop
xchg
add
mov
fsts
mov
daa
xchg
and
sahf
aas
jae
push
adc
add
scas
std
push
jle
addb
incb
out
in
fbstp
cmc
add
pop
inc
add
mov
add
adc
sub
add
inc
test
push
addb
insb
dec
add
data16
mov
dec
in
mov
enter
mov
decb
stos
or
fdivrp
jecxz
stos
adc
add
add
cs
cmc
cld
iret
pop
cmc
ret
inc
xchg
rolb
incb
add
push
xor
add
add
addr16
add
repz
jbe
outsl
es
out
adc
push
mov
inc
mov
pop
leave
mov
inc
jno
ror
xor
jle
leave
dec
xchg
xor
insb
jno
mov
mov
xchg
mov
lds
testl
test
sub
mov
and
test
repnz
mov
lods
cmp
sub
leave
sbb
mov
jl
test
and
nop
pop
cli
es
adc
push
in
add
aaa
xor
xchg
push
lahf
rorl
fdivs
out
add
and
sbb
mov
xlat
pop
and
lds
add
xchg
lds
test
mov
and
roll
mov
iret
jne
push
add
fcomp
divl
sbb
bnd
bts
xchg
mov
arpl
push
icebp
push
inc
sahf
ja
int
insb
and
out
scas
push
repz
mov
dec
leave
into
idivb
cmp
dec
pop
or
in
add
pop
outsl
and
imul
and
and
or
mov
call
addb
mov
add
fldcw
arpl
push
xor
aas
mov
dec
repz
clc
fidivrs
dec
addb
nop
push
jno
sbb
inc
fidivrs
cmp
inc
js
ret
scas
mov
rcr
pop
inc
enter
fwait
cmpsl
xchg
xor
je
pop
pop
inc
add
sub
jp
xor
subl
inc
add
add
xor
pop
movsb
fucomi
or
fcmovnu
pushf
pop
std
lcall
js
pop
mov
adc
dec
push
je
sub
sbb
lahf
insb
xchg
add
adc
dec
and
xchg
ljmp
lret
and
mov
pop
add
push
mov
mov
xor
jmp
outsl
cmp
inc
add
outsb
stos
call
es
mov
es
out
outsb
arpl
push
rolb
add
mov
mov
push
mov
dec
adc
add
push
mov
cmc
jp
mov
xchg
and
and
cmp
mov
ror
out
hlt
icebp
pop
scas
adc
adc
jnp
jne
in
std
xchg
imul
add
xor
cmp
mov
test
out
mov
test
shlb
push
add
dec
jecxz
push
add
xchg
and
int
xchg
dec
and
call
movd
daa
xchg
jae
inc
lds
and
loop
pop
pushw
add
jge
mov
mov
popf
cmp
add
dec
xlat
popa
xor
pushf
out
xchg
mov
scas
cmc
cs
call
cmpsb
cmp
jnp
xor
jmp
out
add
add
mov
adc
notb
mov
out
hlt
jle
inc
dec
push
or
aam
push
imulb
push
lds
jecxz
cmp
inc
xchg
cwtl
cmp
nop
jno
lods
mov
outsl
sub
into
mov
mov
mov
sahf
add
cmc
and
pop
mov
and
cwtl
sahf
push
fmuls
call
mov
sbb
pop
jecxz
pushf
rolb
mov
xchg
sub
ret
and
les
mov
mov
in
pop
dec
xor
xlat
sub
fdiv
data16
push
ja
sbb
enter
out
xchg
push
leave
mov
add
mov
push
repnz
sub
pop
inc
add
outsb
inc
cld
data16
add
cmpsb
in
push
mov
es
insl
fadd
insl
aas
rolb
rolb
or
in
jo
jo
outsb
fdivs
mov
xchg
fsubs
sub
jle
cmp
push
sbb
sbbl
xchg
sbb
add
push
dec
push
pop
insl
out
sub
das
inc
add
test
outsl
rol
mov
pop
jg
xor
clc
mov
popf
inc
mov
add
dec
lods
neg
cld
mov
cmp
push
adc
pop
cmp
mov
mov
xor
lds
dec
leave
mov
mov
pop
push
leave
add
add
fldl
jmp
imul
and
imul
xor
xor
addr16
pop
das
adcl
or
xor
mov
cltd
jl
or
test
and
scas
cmp
les
sbb
xor
dec
scas
jmp
push
ret
add
sbb
add
add
test
mov
loopne
out
jl
xchg
xchg
or
lods
or
rcll
add
add
mov
add
lock
push
out
mov
movsl
sbb
dec
cmpsl
inc
add
inc
add
lods
inc
in
pop
xchg
mov
jbe
sarl
mov
out
mov
cmp
lcall
mov
movsl
cmpsb
pop
out
das
push
repz
jae
cmp
add
pushl
add
sbb
cli
mov
xchg
cmp
push
bound
aam
addb
lds
pop
lahf
dec
mov
sbb
test
fbld
add
inc
add
xlat
dec
hlt
test
notb
xor
mov
in
daa
push
notb
cmp
xchg
shll
jo
cmp
stos
mov
fwait
out
test
imul
or
ljmp
or
jle
mov
xchg
test
cltd
cmp
add
dec
in
inc
stos
fs
cwtl
mov
pusha
add
cli
sarb
and
and
aam
sbb
aas
outsl
bound
data16
add
fcomps
jg
jnp
inc
add
cmc
ljmp
xor
or
movl
popf
jp
lods
popa
xor
inc
add
xor
mov
addb
int
pushf
mov
pop
push
add
add
ss
jmp
dec
sub
popf
add
jg
pop
stos
xchg
cmp
notb
hlt
mov
push
mov
mov
in
imul
lea
lret
fistpll
repnz
lods
arpl
int3
insb
add
mov
jae
rol
add
or
imul
add
rorl
daa
iret
cmp
pop
std
rcr
jle
nop
fdivrs
cli
add
jecxz
inc
add
push
lds
dec
test
dec
out
pop
popa
inc
add
pop
jae
ljmp
loopne
xchg
sbb
pop
pop
pop
in
and
xor
mov
xlat
aas
adc
sahf
mov
dec
movb
cmp
add
xchg
es
push
lahf
gs
shl
lock
movb
xor
leave
cs
jnp
mov
movsl
or
jae
pop
jne
xchg
popf
sti
loop
pop
pop
jno
mov
repnz
jae
and
out
mov
rolb
xlat
mov
lret
popf
cmp
stc
test
lods
subl
ret
in
push
push
xchg
adc
sti
sub
mov
inc
add
imul
std
pop
insl
rcrl
mov
xchg
fidivrs
fxch
xchg
addb
sub
add
filds
pop
cmpsb
jb
movb
mov
or
xor
or
dec
lahf
and
dec
or
leave
pop
and
sbb
mov
andl
mov
leave
lods
fcoms
shl
test
jmp
add
jl
push
and
pop
xchg
jo
or
aas
sub
out
aas
jecxz
inc
add
stos
sbb
push
and
jns
pop
dec
jnp
mov
inc
jp
mov
sbb
mov
mov
xor
xchg
pop
mov
dec
pusha
add
pushf
mov
jne
push
addb
xchg
stos
inc
es
aad
or
add
movsl
jge
mov
add
add
rolb
in
call
push
sub
mov
mov
mov
add
and
insb
adc
out
cld
push
mov
sub
dec
and
xchg
add
xlat
mov
and
ret
inc
add
dec
imul
lds
inc
add
fstl
cli
stos
gs
movsb
call
js
mov
popa
inc
jle
insl
pusha
add
add
addb
inc
add
lfs
jecxz
fsubrs
add
dec
jnp
ds
daa
scas
push
bswap
push
in
add
adc
fstl
jecxz
mov
sbb
add
lret
mov
aaa
mov
sub
add
test
xchg
add
out
dec
mov
add
pop
call
add
add
push
ficompl
int
xchg
xchg
mov
out
push
idiv
addr16
sbb
sbb
push
bound
out
into
sbb
xchg
jl
add
into
clc
xor
adc
cmp
rolb
inc
add
jo
xor
nop
pop
std
out
rolb
es
sub
adc
mov
orl
es
daa
loopne
sbb
das
les
sti
fldl
jmp
inc
add
adc
imul
cmp
pop
or
cmpsl
adc
aaa
ror
sbb
lcall
add
pop
push
cmp
pop
and
push
xchg
jmp
enter
jbe
xor
add
add
lret
mov
add
dec
adc
sarl
cmp
mov
and
add
or
sub
pop
cmp
inc
or
daa
xchg
or
dec
fidivrs
cmp
add
cld
jae
cld
jmp
add
and
loopne
or
xchg
add
clc
ds
adcl
ja
icebp
add
dec
fs
int
push
xor
arpl
xchg
mov
mov
cmp
pop
nop
and
iret
sub
jae
sub
jno
loop
lahf
jo
jnp
xchg
jle
and
mov
js
jecxz
mov
add
aas
icebp
push
lret
add
add
dec
push
sbb
lock
lret
aas
or
cmp
mov
in
pop
xor
mov
sub
add
mov
mov
add
mov
cmpsb
adc
aam
dec
mov
cs
push
pop
jle,pt
rorb
sbb
and
push
std
inc
out
push
xchg
add
jb
ret
xchg
call
popa
xor
xor
in
lcall
add
add
ds
push
pop
mov
sub
mov
data16
cmpsb
sbb
add
jnp
xor
stos
addr16
push
lcall
inc
lret
dec
rcll
or
jo
and
repz
add
add
push
icebp
les
push
gs
mov
inc
add
mov
add
fldcw
sub
sub
push
negb
pop
and
jbe
inc
add
mov
sub
fstl
xor
movb
mov
movb
or
push
les
cmc
pop
pop
mov
out
cmp
outsl
add
mov
outsb
and
adc
mov
add
setns
repnz
sub
mov
mov
popa
and
mov
cmpsb
push
loop
push
call
clc
mov
rorl
jbe
and
dec
idivb
sti
leave
mov
aam
jb
cmp
cli
ficoms
sub
add
mov
jbe
mov
or
mov
rorb
xor
inc
add
sub
pusha
add
mov
dec
mov
inc
add
jecxz
mov
test
push
add
sbb
loopne
shlb
jl
xchg
test
push
dec
inc
outsb
packssdw
test
aam
add
and
mov
pop
mov
push
sbb
add
push
push
sbb
pop
icebp
fstl
sahf
jnp
inc
add
fcom
xchg
xchg
insb
enter
add
addb
sbb
lahf
into
out
lret
and
and
dec
clc
pop
mov
push
add
popf
or
push
and
add
cld
out
pusha
add
data16
jns
pop
and
add
stos
jmp
pop
xchg
push
mov
std
hlt
sbb
mov
cwtl
jl
jno
mov
add
jno
jae
or
pop
jae
inc
ret
jae
sarl
ret
cwtl
dec
push
push
xor
scas
and
jne
scas
test
jnp
insl
outsb
add
inc
enter
cld
cmp
rolb
or
cs
rorb
xchg
mov
add
lods
popa
test
push
jg
add
pop
dec
cmp
xor
lret
lds
mov
jnp,pn
outsl
pop
bound
data16
imulb
fnstsw
cmovg
add
sub
add
pop
sub
cmc
push
pop
push
movsl
dec
cmp
shufps
inc
lcall
fsubp
cli
push
lahf
fimuls
and
repz
add
enter
mov
cmc
jg
add
add
mov
jno
xlat
pop
jp
lea
ret
leave
mov
stos
fistpll
call
cs
subl
sbb
push
shll
add
addb
lahf
rolb
repz
aas
mov
hlt
mov
xor
jmp
sbb
mov
out
lahf
pop
test
add
sub
xchg
mov
jnp
add
inc
mov
mov
out
inc
add
push
jno
add
ficomps
dec
dec
lods
test
and
mov
xchg
mov
daa
mov
cwtl
fcmovu
cld
fbld
fldt
dec
out
out
lret
js
adc
and
insb
push
pop
mov
bound
nop
flds
out
jb
dec
sbb
inc
ds
mov
jne
inc
cmp
pusha
add
aaa
mov
mov
in
add
rolb
sub
adc
xchg
jnp
mov
loopne
movb
ljmp
add
outsl
data16
movb
mov
add
cwtl
adc
je
pop
ljmp
pusha
add
imul
xchg
jle
xor
jmp
addb
rolb
and
fcomip
daa
and
int3
int3
mov
scas
mov
inc
add
xchg
loopne
pop
clc
cmp
in
add
leave
dec
stos
dec
mov
popa
das
adc
mov
movsb
jmp
out
push
mov
add
mull
add
xchg
cmc
adc
test
repz
jae
add
add
adc
insl
push
cmpsl
out
xchg
xchg
pushf
fldcw
add
nop
rolb
mov
inc
add
and
idiv
icebp
dec
int
add
cmp
stos
cmp
cwtl
sub
lahf
fisubs
fstl
pop
xor
mov
lds
mov
mov
loopne
sbb
into
dec
mov
lea
aad
lret
gs
pusha
add
pushf
nop
cli
std
arpl
add
push
mov
and
or
and
stos
mov
pop
lds
sbb
ficoml
addb
xor
xor
inc
add
mov
addb
out
mov
mov
or
mov
imul
in
add
mov
ljmp
mov
adc
sarl
sbb
mov
pop
cmp
adc
and
jo
not
or
or
dec
sbb
xchg
xchg
insl
sub
inc
add
xchg
mov
roll
mov
popf
pop
inc
add
pop
pop
test
addb
out
xor
lret
push
cmc
pop
sub
shl
es
addb
pop
mul
pop
push
shll
sbb
outsl
out
and
and
mov
adc
add
sub
pop
jmp
test
nop
mov
push
dec
rorb
push
aaa
std
jns
es
dec
addb
or
data16
lcall
ljmp
inc
add
mov
das
fimuls
or
pushf
push
ja
cmc
mov
lret
scas
add
lret
jg
sbb
add
addb
dec
add
arpl
mov
add
mov
or
call
cmp
push
inc
testb
sbbl
ja
cmpsb
orl
add
add
ret
sub
add
or
and
subl
fucomi
insb
sbb
cmpsl
cmpsl
test
sub
add
xor
rcrb
push
data16
mov
or
cmp
push
in
stos
out
sahf
push
inc
xchg
add
and
or
test
lds
or
push
out
and
repz
xchg
shl
inc
out
mov
loop
aas
fcomi
in
push
repz
pop
clc
stos
icebp
jo
jmp
movb
mov
movsl
inc
mov
and
jno
arpl
cmp
sbb
in
je
es
sbb
fldl
rcl
cs
or
nop
adc
mov
sub
call
and
mov
jp
aas
push
add
aad
mov
and
addb
enter
in
mov
cmp
adc
dec
sub
je
add
xor
add
das
pop
sub
repnz
ja
push
scas
xchg
add
sarb
addb
ret
aad
fistps
pop
aam
xchg
jo
mov
mov
inc
add
ljmp
jp
test
pop
cs
mov
xchg
clc
pop
mov
cmpsb
sbb
and
lods
lret
or
and
pusha
add
sbb
jmp
jmp
fimull
in
fisttpll
js
outsl
xor
add
test
inc
outsb
and
dec
jne
add
lcall
data16
mov
dec
stc
arpl
adc
pop
dec
rcr
pop
sbb
xor
loope
jnp
push
imul
lahf
add
roll
cs
inc
cli
aam
es
sub
ljmp
add
mov
lea
iret
add
das
imul
testb
pop
fbld
inc
push
and
pop
mov
jl
jmp
fisttps
jno,pt
add
xorl
shrb
sbb
or
dec
cltd
movb
movb
lock
cwtl
cltd
mov
pop
mov
int3
fstp
dec
ljmp
lfs
sbb
test
scas
push
add
lds
and
xchg
sbb
cwtl
sahf
test
repz
shlb
inc
add
push
out
push
aad
icebp
sbbl
lock
push
push
imul
add
adc
mov
insb
imul
sub
dec
cmp
mov
lss
lods
inc
xlat
push
jge
add
into
dec
jg
cmpsb
lds
std
and
and
sti
jp
push
lret
test
fmull
adc
xor
mov
xchg
stc
mov
jle
xchg
call
fcoms
xor
inc
pop
test
fcomip
jp
add
mov
test
mov
xchg
push
pop
push
push
aas
cli
cmp
xchg
dec
cmp
inc
add
out
dec
out
add
lods
mov
jl
add
into
out
test
in
mov
inc
xchg
adc
fwait
mov
dec
out
jo
push
cmpsb
cmp
fdivs
fs
test
pop
ds
add
push
test
ror
shlb
addl
iret
add
lock
aam
and
adc
xor
mov
nop
push
outsb
das
stos
jno
es
add
testl
sub
out
imul
ret
dec
iret
pop
push
insl
pusha
add
addb
cmpsl
je
mov
add
add
xchg
push
and
push
fstpl
dec
ja
push
pop
cmpl
inc
add
in
mov
inc
mov
jb
dec
aad
mov
add
xor
push
fldenv
adc
imul
rolb
cvtpi2ps
sahf
push
add
inc
add
mov
mov
xchg
cmp
test
test
jge
xchg
sub
rcrb
ret
stos
xor
dec
add
or
push
enter
jb
arpl
ret
mov
add
mov
ds
loopne
add
pushf
cltd
call
fistl
push
aas
jb
aad
rcrl
repz
sbb
xor
out
lock
push
sbb
lahf
or
xor
jp
inc
add
push
arpl
fisttps
xor
adc
pop
loopne
aaa
test
mov
add
clc
mov
mov
add
mov
xchg
stos
aad
lods
xchg
pushf
cmpsl
fdecstp
dec
dec
mov
push
mov
add
sub
push
adc
daa
or
lcall
or
and
sub
cwtl
xor
mov
xor
sbb
add
sbb
std
xchg
es
cmpsb
das
cmp
cmp
test
out
lret
test
adc
cmp
add
cmp
add
sbb
icebp
shll
pop
mov
repz
sbb
push
and
dec
push
nop
inc
add
das
cmpl
xor
and
xorl
jge
nop
xchg
imul
dec
clc
in
aam
mov
adc
jle
lods
cld
iret
adc
dec
imul
mov
sbb
sbb
shlb
add
xor
jle
fistl
mov
clc
hlt
mov
adc
les
js
inc
mov
push
add
roll
sbb
dec
xor
pushf
adc
arpl
adc
imul
xor
shll
mov
add
cmpsb
xor
cltd
cmp
movb
mov
jge
divl
idivl
pop
pop
scas
in
call
cltd
fimull
cld
das
xchg
pop
inc
repnz
jno
enter
inc
movsl
popf
xchg
mov
xchg
clc
cmpsl
movq
mov
pop
mov
push
dec
stos
xchg
xor
push
adc
bound
jle
add
les
lea
ljmp
ja
sahf
or
add
xchg
std
mov
xchg
or
enter
mov
jmp
fs
fmul
sub
bound
push
in
hlt
cltd
stc
test
mov
lods
mov
pop
add
mov
add
pop
rolb
xlat
das
popa
mov
test
push
dec
loop
and
xchg
push
add
fs
fisubrl
dec
ret
lods
jmp
add
lahf
daa
pop
mov
das
xchg
loop
stos
xor
jl
lar
cwtl
stos
pop
mov
test
gs
or
push
push
imul
stos
dec
mov
dec
xor
in
xchg
aaa
xchg
cmpsb
shll
push
push
movb
mov
fcmovnbe
das
bound
lds
shrl
bound
loopne
repnz
lret
leave
lcall
ds
jns
ljmp
je
es
add
lahf
mov
inc
mov
jge
cmc
xlat
mov
xchg
adc
sti
fnstenv
out
fdivrl
scas
xor
fwait
shlb
mov
jo
inc
add
jb
sahf
push
add
bound
jne
mov
mov
add
mov
jo
xor
les
mov
movsl
xchg
add
adc
sub
add
in
mov
rolb
push
or
sbb
add
pop
add
pusha
add
jl
mov
sub
lea
repz
add
repnz
sub
jne
jb
xchg
push
movb
pop
adc
scas
or
aad
pop
xchg
ret
insl
into
jmp
push
addb
add
sarl
or
xchg
lock
mov
add
mov
add
movb
adc
dec
mov
add
add
mov
add
ds
mov
mov
sbb
add
add
in
mov
jge
mov
movb
jns
scas
add
cmpsb
je
xchg
inc
add
jle
popa
add
mull
outsb
jnp
popf
loope
add
gs
rcrl
mov
mov
fiaddl
int
cmp
jo
shl
fstpl
add
out
xchg
pop
stc
int3
jg
in
popa
ljmp
cmpsl
int3
movsl
xchg
pop
jle
mov
dec
andl
pop
and
movsl
jne
sub
pop
out
movsl
adc
sub
jl
add
lea
add
lods
and
sbb
add
lods
adc
mov
inc
add
cltd
and
cmp
dec
or
stos
imull
addb
xchg
repz
xor
outsl
cld
xchg
orl
jmp
push
pop
inc
add
push
fisttps
fimuls
xchg
enter
loope
pop
mov
inc
add
sbb
sahf
push
mov
push
sub
dec
fiaddl
add
mov
add
push
add
dec
dec
push
add
pushl
stos
addb
xchg
cs
popa
push
sub
add
cltd
iret
mov
aaa
fisubrs
outsb
sub
add
lahf
pop
mov
nop
outsl
push
shlb
add
mov
mov
loop
mov
xchg
sub
add
jae
and
sub
xchg
arpl
xchg
mov
xchg
adc
add
insl
in
xchg
mov
xorl
jmp
jg
lret
push
add
sub
fistpl
jl
inc
xchg
scas
dec
adc
loope
outsl
jae
mov
inc
add
call
leave
cmp
add
lds
fmull
add
paddusw
pusha
add
add
dec
dec
or
and
mov
push
mov
lds
mov
xchg
std
pop
adc
fldenv
xchg
fbld
inc
cmc
xchg
iret
or
into
mov
int
loopne
lea
std
in
and
mov
test
addb
add
mov
push
mov
cli
out
std
addb
inc
add
cld
mov
xchg
push
mov
sub
mov
hlt
imul
data16
xlat
cmp
pop
in
push
aad
xlat
out
in
push
jbe
rcll
xchg
add
in
xchg
sbb
cmp
pop
shr
dec
sti
ret
cmp
add
xor
lods
adc
ficoms
sub
add
shrl
add
pop
pop
nop
int3
and
or
mov
in
pop
dec
js
inc
xchg
push
or
jnp
repnz
pop
cmp
dec
jg
add
pop
ret
cli
xor
inc
add
mov
dec
add
loopne
rorl
les
cmpsb
adc
cltd
loope
in
push
data16
fwait
and
add
aad
mov
inc
adc
and
test
bound
adc
add
jno
pop
les
test
add
xchg
add
movsl
mov
in
in
int3
or
and
mov
add
adc
in
movsl
pushf
arpl
stos
dec
shll
mov
xchg
into
lds
jecxz
jmp
or
ss
push
gs
push
pop
xchg
jns
jmp
xor
jae
add
add
mov
xor
aaa
jg
ret
cmp
add
cmpsl
and
in
mov
pop
and
aam
xor
mov
push
lahf
push
test
data16
into
out
sub
sbb
call
mov
adc
mov
int3
outsb
mov
push
mov
std
outsl
aam
xlat
fisubrs
movl
push
sub
dec
xchg
xor
aas
dec
mov
jp
mov
arpl
mov
add
lea
aaa
mov
rolb
add
cmc
xchg
leave
pop
jno
pop
rcrl
addb
ja
sarb
mov
outsb
test
movsl
pop
xor
xlat
stc
push
sub
rolb
sahf
add
mov
je
add
jb
fstl
mov
push
push
xchg
sub
mov
dec
push
inc
push
inc
add
sbb
mov
fcmovnb
add
jecxz
loope
jge
icebp
xchg
xorl
push
jl
movb
mov
or
gs
adc
test
add
add
add
data16
xchg
ret
push
adc
lcall
dec
push
imulb
push
sbb
pop
push
add
stos
sahf
incb
xor
adcl
cmp
push
or
clc
xchg
fidivl
test
pop
dec
sahf
fstpl
repnz
sahf
loop
lods
fidivl
int
mov
mov
mov
in
jbe
cmp
mov
cmpl
daa
pop
xor
clc
adc
dec
push
out
sbb
imul
push
pop
xor
add
int3
movb
add
fcomps
and
add
pop
mull
test
mov
xchg
mov
popa
push
out
jg
push
mov
or
add
fidivrs
adc
xchg
ficomps
dec
stc
mov
and
mov
mov
lcall
push
repnz
or
jmp
daa
xchg
mov
mov
and
push
and
dec
mov
outsl
push
sub
dec
xchg
cmp
mov
push
cmp
inc
push
push
fisttps
call
sbbl
sbb
inc
cld
mov
lcall
mov
or
push
je
xchg
das
sarl
sbbl
stc
cmc
jl
mov
adc
xchg
xchg
fisubl
jmp
addb
loope
xlat
jnp
loope
repnz
sbb
scas
jecxz
add
mov
insl
cmp
add
dec
decl
add
add
scas
rol
add
sbb
xor
mov
mov
imull
out
test
pop
mov
inc
int
shll
out
push
mov
dec
aas
fwait
xchg
or
xchg
test
aaa
cwtl
stos
add
in
xchg
aad
mov
js
into
mov
or
jns
sbb
gs
shlb
xor
and
jmp
inc
add
shlb
ja
addb
add
adc
cmp
add
add
sub
cmp
or
add
pop
or
adc
loop
arpl
lods
fwait
jns
push
push
leave
mov
mov
mov
ljmp
push
pop
fidivrs
add
add
jecxz
das
out
lcall
lock
ds
jne
mov
inc
cmp
and
add
clc
xchg
sahf
outsl
inc
add
fisubs
rolb
int
iret
push
jg
jo
sbb
out
jge
sbb
adc
add
mov
sbb
jecxz
sub
xor
test
add
ret
int3
call
dec
or
sbb
xchg
pop
xlat
stos
add
push
movb
inc
add
inc
push
add
popa
push
mov
int3
pop
in
adc
stos
or
dec
jle
xchg
xchg
push
aaa
mov
and
cmc
and
int3
ret
add
add
push
jne
or
add
shufps
mov
mov
jle
add
in
xchg
or
push
aad
fistl
xlat
sub
jle
or
lahf
pusha
add
lcall
add
in
dec
sub
pop
sbb
inc
add
adc
fdiv
dec
add
je
mov
insl
inc
sub
xchg
idivb
sub
ret
mov
xchg
fcomps
mov
jp
sbb
fsubrs
inc
add
pop
dec
mov
in
or
pop
xor
int3
test
pop
inc
dec
addr16
fiadds
add
shlb
jns
jae
mov
add
add
pop
push
add
dec
rcrl
sub
add
mov
test
inc
lods
in
and
stos
sbb
xchg
xor
cmp
shr
xchg
pusha
add
mov
fists
push
int
in
ja
push
fwait
in
adc
jmp
out
std
and
mov
or
lret
imul
add
jg
pushf
cli
xor
add
mov
lret
inc
add
mov
lea
movsb
jg
mov
call
sbb
pop
and
popf
sub
scas
dec
ret
aaa
pop
lret
inc
add
and
add
jnp
add
xor
ss
lcall
cwtl
mov
xor
add
addb
jae
lret
mov
jno
and
add
aam
pop
into
mov
sbb
aam
jb
outsb
inc
add
add
bound
mov
xchg
or
dec
out
dec
or
xor
loope
cwtl
les
jne
or
addl
inc
pop
mov
push
cld
movsl
iret
xor
loope
jmp
ljmp
mov
add
cmpsb
stos
hlt
nop
cs
sub
add
mov
jo
ja
add
es
push
popa
int3
mov
xchg
push
into
popa
ds
mov
lds
cmp
dec
sbb
jnp
mov
fisubl
add
fwait
xor
push
sbb
adc
dec
or
cltd
mov
cmp
mov
dec
lahf
lods
leave
pop
add
xchg
xchg
rolb
das
insb
mov
cmc
adc
or
ljmp
xchg
sub
xor
nop
adc
imul
fisubl
ljmp
into
sbb
jmp
add
add
das
adc
addr16
jmp
test
sti
outsb
aad
push
mov
add
or
add
pop
pop
dec
cmp
push
neg
insl
and
dec
sub
jl
push
pop
mov
add
sbb
cmp
hlt
dec
jmp
xor
cwtl
popf
jecxz
lcall
jg
int
add
and
inc
xchg
out
xchg
aam
add
and
pushf
jno
scas
inc
jp
dec
addb
inc
addb
fcmovnb
and
loope
aas
aad
aaa
divl
jle
push
fimull
shlb
sbb
orl
jae
sbb
out
stos
or
push
dec
mov
jbe
fcomps
mov
mov
mov
push
insl
fwait
insb
xchg
pop
adcl
aam
daa
dec
xor
jb
loopne
rolb
idivl
cmc
push
ss
lock
mov
ret
cmp
movl
adc
or
imul
cwtl
xor
dec
flds
cwtl
gs
scas
test
mov
cltd
out
gs
add
lahf
inc
cwtl
mov
out
add
add
mov
inc
add
clc
ret
adc
cmp
ds
popa
popf
aas
fs
lcall
mov
scas
test
jo
add
push
jge
add
inc
add
icebp
outsl
je
fs
lds
clc
jge
mov
cltd
sub
pop
ds
adc
and
lret
popa
mov
mov
xchg
mov
mov
notb
imul
mov
push
add
pop
pop
pop
mov
arpl
mov
add
roll
xor
add
and
and
in
inc
clc
fimuls
sbb
cwtl
xchg
mov
add
add
or
mov
push
aad
mov
xor
jae
out
xchg
xchg
scas
addb
nop
cmc
pop
pop
dec
push
fdivrl
mov
jnp
mov
and
jb
cmc
rol
add
mov
mov
or
fldl2t
inc
add
push
mov
ja
jns
adc
lods
into
or
push
mov
or
mov
dec
and
faddl
push
add
lahf
enter
add
mov
lea
xchg
jb
repnz
inc
sub
je
arpl
sub
push
push
mulb
mov
lahf
cmp
inc
xor
lds
test
and
dec
dec
lods
fsubrl
rclb
int3
mov
aaa
inc
push
inc
outsl
xchg
data16
pop
and
jae
mov
xor
pop
sub
sub
cmp
ss
dec
mov
mov
xchg
jge
les
jb
dec
insl
xchg
aaa
cmpsl
mov
out
popa
or
sbb
jp
mov
imul
push
xchg
xor
call
add
xorl
imul
dec
test
pushf
sbb
pop
addb
arpl
push
movsb
push
ret
inc
add
cwtl
jne
sub
jae
add
in
add
pop
xchg
sbb
in
stc
inc
insl
jp
mov
jl
push
sbb
or
push
add
mov
rsm
inc
roll
stc
flds
into
push
push
cmpsl
sub
pop
adc
clc
fimuls
mov
jl
add
push
loop
je
cmpsl
leave
mov
gs
inc
add
inc
push
xchg
scas
xchg
xor
dec
inc
add
cmp
scas
sub
int
mov
sbb
push
rolb
sub
or
insl
mov
cmp
out
outsb
mov
cmpl
jg
add
sub
cmpsl
add
in
jno
pop
aaa
test
cli
sub
add
jle
dec
or
lods
addb
lock
addb
add
add
cli
adc
lret
mov
in
fdivrp
outsl
sub
sub
dec
adc
stos
aam
push
insb
ds
imul
xor
imul
roll
call
test
add
or
les
ss
jne
add
movb
hlt
mov
shl
rcrb
add
cltd
cmp
jge
das
fmulp
or
test
sub
test
mov
cmp
dec
push
idivl
out
inc
out
add
in
xchg
xor
add
xchg
and
aas
pop
pop
mov
in
mov
push
scas
fbstp
add
lahf
and
add
pop
dec
in
xor
pushf
test
pop
je
stc
mov
rolb
aad
push
insl
les
popa
pop
xor
and
add
jp
test
jp
int
push
clc
cltd
daa
aam
fidivl
xor
mov
les
sub
jno
mov
adc
fidivrs
mov
iret
js
add
cs
add
mov
xchg
insb
pusha
add
cmp
sbb
cmp
pop
mov
aas
jne
inc
add
daa
insl
xchg
or
add
add
add
pop
ficoml
adc
aam
loope
std
and
jle
add
lahf
xchg
mov
repz
add
test
in
xchg
in
sar
fcoms
movsl
imul
adc
pop
lea
mov
adc
std
sbb
xor
mov
jb
cltd
xchg
hlt
cmp
lret
or
inc
add
jg
dec
sub
das
movsl
jnp
repnz
and
les
or
mov
loope
stos
push
add
add
cld
in
push
push
inc
add
mov
dec
dec
cmpsl
pusha
add
out
sub
lock
repz
imul
ljmp
into
sbb
in
leave
test
inc
mov
push
xor
int3
insb
or
mov
fdiv
movb
ja
and
outsb
and
mov
mov
cmpsb
mov
sub
cmp
js
lcall
inc
add
mov
pusha
add
shl
lea
and
pop
xor
test
jmp
arpl
shlb
mov
js
jns
adc
lret
push
mov
shlb
mov
xchg
jns
nop
xor
dec
sub
ret
imul
xrelease
adc
ss
xchg
xchg
neg
jecxz
jl
or
sbb
adc
scas
je
inc
dec
mov
popf
sub
cmpsb
cmp
in
pop
pop
out
push
jge
iret
dec
inc
add
cmp
pushf
test
pushf
or
cmp
cwtl
and
jns
dec
jg
ss
mov
push
mov
mov
sbb
sub
pop
mov
dec
leave
out
sbb
repnz
mov
inc
mov
dec
in
mov
sbb
push
push
inc
add
out
mov
in
icebp
hlt
xor
push
lods
cmpsb
cmp
xchg
fdivrl
daa
lods
add
pop
outsl
and
fsubl
ficoms
push
inc
cmp
add
xchg
mov
dec
jo
incb
out
mov
loopne
add
push
push
sbb
xchg
mov
jnp
aad
add
cli
ret
jmp
mov
jae
cld
pushf
gs
jno
mov
and
dec
pop
add
and
sbb
xchg
cld
and
sahf
loop
outsb
cmpsl
and
mov
xchg
pushf
sbb
or
inc
add
mov
imul
cmc
popa
xor
sbb
popa
out
xchg
xchg
jge
mov
adc
movl
addb
sahf
push
addr16
lret
xchg
bound
dec
in
in
repz
sbb
xchg
bound
add
jns
sti
icebp
and
mov
cmp
push
inc
adc
in
dec
ret
dec
popf
adc
into
xor
add
push
js
pop
repnz
sti
mov
sbb
daa
xor
dec
movsl
cs
dec
jle
or
xor
xor
shr
xchg
lahf
or
lcall
or
mov
popa
pop
inc
add
mov
stos
inc
xchg
mov
loope
inc
add
push
mov
cmp
jns
or
jp
add
push
push
sub
and
cmp
fwait
mov
push
ljmp
add
xor
test
or
add
lret
iret
pop
faddp
add
loope
pop
inc
add
cmp
add
test
leave
int
enter
sbb
add
add
mov
xchg
inc
add
xchg
out
or
cmpsl
dec
or
push
addb
jo
jle
popf
push
ror
add
repnz
jp
negl
rolb
add
fidivrs
mov
add
jp
vmovsd
loopne
mov
sub
test
push
sbb
or
mov
jns
sahf
aaa
adc
xchg
jns
mov
add
das
fstpt
or
pop
rolb
fmul
mov
movb
in
inc
scas
sbb
mov
push
pushf
sbb
push
loope
sbb
pop
cs
adcl
in
mov
lcall
in
adc
add
pop
faddp
add
and
fdivrl
add
dec
sub
and
mulb
adc
mov
lcall
push
incl
movsb
clc
cltd
inc
add
push
testb
shlb
sbb
aam
xor
mov
lods
inc
add
in
les
mov
inc
add
inc
outsl
xchg
cltd
mov
or
jbe
cmp
add
jge
sub
push
and
cmp
addb
scas
arpl
gs
movsl
mov
xchg
push
dec
push
adc
popa
mov
in
test
cmc
jno
cmp
mov
cs
rolb
stos
or
inc
add
mov
add
repnz
ljmp
jbe
jo
lcall
ret
outsb
out
mov
arpl
xchg
leave
pop
xor
imul
mov
and
push
xor
push
lods
js
pop
push
lods
or
xchg
call
mov
or
add
call
mov
stos
dec
push
push
testb
test
add
inc
adc
inc
xchg
fbstp
xlat
adc
push
xchg
ss
jmp
lss
adc
stos
or
mov
aaa
jl
jne
stos
rcll
push
inc
add
lods
lret
and
vmovq
push
mov
push
arpl
pop
pusha
add
fisubl
movsl
push
mov
push
test
or
mov
add
je
call
mov
mov
mov
outsl
add
fidivrl
push
add
cmp
outsl
and
aaa
add
add
jecxz
repz
add
insl
lds
mov
push
adc
int3
test
add
out
popa
fidivrs
movb
int
movb
loopne
mov
lret
jg
lods
cmpsl
leave
pusha
add
addb
gs
fcmove
int
push
or
push
popf
dec
addb
out
insl
test
stos
mov
popf
into
or
push
add
outsl
das
xchg
nop
lods
cmp
add
clc
cmp
clc
or
imul
mov
mov
fiadds
lret
daa
bound
addb
popa
push
and
inc
add
jg
shll
test
popfw
inc
pop
adc
add
inc
es
mov
leave
xchg
lret
cmc
inc
add
and
call
sub
sbb
push
xchg
fmul
int
ds
cmpsb
in
mov
jne
int
cmpsb
push
or
popf
push
cltd
test
nop
add
in
lret
fwait
call
outsb
mov
jno
xor
and
mov
cmc
mov
pop
xor
icebp
fstps
jmp
test
sahf
icebp
scas
jne
popf
pop
inc
add
xchg
mov
call
ret
gs
popa
inc
rorl
dec
ret
mov
lock
loope
push
pop
sub
mov
add
pop
test
sub
add
add
xchg
xchg
shll
clc
mov
dec
sbb
lcall
ss
test
jne
add
mov
rolb
push
adc
mov
pop
test
js
mov
xchg
push
inc
add
addb
push
ret
add
mov
or
dec
xchg
hlt
sahf
cmpsb
movsb
sub
cmc
and
push
fimuls
test
repnz
fcompl
push
je
mov
mov
jle
ret
adc
adc
sbb
sbb
cwtl
xor
jnp
push
fcomp
cmc
sbb
sub
insb
in
push
jp
movsl
and
movb
push
testb
in
pop
data16
or
add
add
outsl
inc
push
inc
add
push
pop
fldcw
pop
mov
add
adc
add
add
add
insb
push
cmpsb
pop
cmp
or
int
add
pop
xchg
fstpl
add
or
push
out
xchg
into
and
xor
mov
xlat
mov
sub
popf
push
and
jmp
cmp
adc
mov
push
dec
inc
add
add
add
sub
lcall
das
push
aaa
les
push
out
out
lret
insb
mov
lds
stos
scas
pop
je
cs
add
int3
rolb
pop
xchg
mov
stc
jecxz
cmp
stos
dec
ds
std
bound
mov
daa
insb
popf
lods
enter
mov
in
stos
mov
test
jb
push
dec
jnp
aad
test
add
out
and
cmpsl
rorl
icebp
pop
cli
loopne
dec
xchg
loop
scas
pop
pop
lods
xor
das
mov
xchg
mov
frstor
jl
add
push
repnz
add
mov
rcrb
jecxz
mov
push
jne
add
mov
aaa
sahf
scas
dec
ss
into
sub
popf
push
sbb
insl
mov
pusha
add
sbb
das
lods
scas
jle
add
dec
mov
rcll
cmp
int3
call
movsb
push
or
leave
lods
in
and
out
addr16
nop
push
sahf
out
adc
stc
dec
adc
adc
roll
pop
and
mov
push
cmpsb
rcrl
sbb
test
xchg
jp
dec
enter
add
test
pop
lcall
sbb
cmp
add
add
das
js
lret
add
xchg
insl
mov
jb
jnp
rolb
aad
xor
mov
scas
and
shr
jae
jge
inc
add
sbb
inc
add
mov
push
xorl
adc
addb
push
sahf
add
lock
lahf
pop
xor
in
movsl
dec
enter
shlb
add
cmp
arpl
les
dec
fwait
jle
stc
inc
add
sub
add
adc
add
xor
call
stos
inc
add
add
mov
adc
cwtl
pushf
push
pop
sbb
cmpsl
test
rolb
dec
add
mov
icebp
in
mov
add
das
ja
sub
add
mov
sub
and
add
ja
aas
das
sahf
iret
call
mov
adc
pop
adcl
mov
fcom
or
mov
sub
cwtl
add
stos
mov
xchg
aas
mull
xchg
es
push
test
pop
lods
sbb
negl
inc
add
or
fldcw
fs
insl
sub
pushf
jo
loopne
fsubrl
mov
ja
ds
pushf
cltd
add
jnp
popa
jecxz
movb
pop
js
cmp
loopne
ret
push
out
enter
stos
shll
add
pop
jo
jg
out
mov
push
daa
pop
mov
paddusb
dec
mov
adc
rolb
add
jmp
mov
in
in
push
xchg
mov
sti
inc
sbb
push
lcall
pushf
jmp
add
es
dec
push
xchg
gs
aam
xor
pop
imul
mov
pop
cmp
bnd
rcrl
add
ds
in
adc
push
add
xor
adc
push
adc
cmpsb
aas
lcall
fildl
repnz
dec
test
cs
xor
jg
push
mov
dec
pop
sti
cmc
dec
mov
jge
cmpl
flds
mov
mov
adc
lods
pop
dec
jecxz
add
fcmovne
cmp
mov
cmc
es
das
and
aad
movsl
mov
shrb
mov
es
pop
jno
aas
aas
aaa
pop
mov
mov
push
push
xor
fsub
int3
mov
sbb
sub
in
adc
push
pop
push
push
inc
scas
out
fcoml
movsb
stc
mov
je
add
push
mov
rorl
enter
add
adc
cwtl
aas
into
lock
rcrb
and
lret
ds
pushf
nop
push
jg
sbbl
leave
into
andl
sahf
bound
aas
dec
pop
out
clc
mov
jmp
pop
xor
movl
mov
add
adc
imul
jnp
iret
xchg
shll
add
pusha
add
int3
xchg
push
insl
jle
xor
add
test
xor
push
inc
add
add
add
shlb
icebp
pop
dec
ljmp
dec
mov
inc
xor
add
mov
jmp
pop
lods
dec
or
xchg
les
mov
and
add
lock
das
fcoml
stos
sbb
mov
add
dec
inc
add
pop
sar
daa
jge
rcrl
loopne
addb
inc
jne
fs
xor
fistpll
dec
lods
inc
add
pusha
add
movsb
hlt
iret
daa
add
aas
xchg
add
std
jp
sbb
cmp
sbb
sub
jg
push
enter
mov
add
mov
cs
or
dec
out
pusha
add
ss
cli
outsb
pop
xchg
cmpsl
lret
stos
dec
subl
xor
cld
pusha
add
lcallw
hlt
xor
jne
addb
mulb
lcall
jg
decl
mov
push
loop
test
pushf
push
or
das
addb
test
test
ljmp
push
add
sahf
sub
add
xchg
mov
inc
stos
in
inc
fidivrl
mov
pop
movsb
mov
cltd
fdivrs
push
xchg
arpl
pop
mov
jne
push
xchg
add
jge
jp
xchg
outsb
popf
inc
add
inc
add
inc
outsl
add
xchg
push
cs
fsubl
sbb
or
xchg
mov
jp
inc
cltd
test
adc
and
clc
pop
mov
add
cld
in
inc
cli
xorl
xchg
test
imul
inc
pop
lret
push
sub
test
adc
test
mov
jbe
outsb
xchg
scas
or
gs
test
mov
rolb
add
fstpl
pop
repz
add
in
out
cmpsb
shll
and
cmp
rcll
pop
add
imul
xchg
test
jb
popa
mov
std
fstpl
push
mov
dec
jns
leave
aam
push
loop
or
add
mov
push
sub
popf
lods
enter
std
clc
xchg
sbb
mov
adc
sarl
stos
ds
movsb
aam
push
sub
push
jl
es
movsl
dec
mov
popa
xor
add
testl
and
add
pop
mov
cmp
loopne
add
mov
mov
sti
rolb
int
jle
xor
std
fsts
sahf
xchg
sbb
push
lcall
fcoms
cmpsb
repz
pop
mov
push
int
xchg
rolb
adc
roll
sbb
shlb
sbb
cmpsl
jae
sub
shll
je
out
pop
sbb
mov
add
iret
push
fidivl
aas
cltd
push
pop
call
mov
lcallw
test
adc
pop
sbb
pop
xchg
jg
movb
pop
rolb
movsl
popf
cld
mov
rolb
je
inc
push
rol
pop
xor
adc
add
addr16
enter
add
dec
pop
inc
xchg
jmp
arpl
xor
push
mov
movb
adc
mov
imul
orw
mov
mov
push
adc
cmp
xor
add
leave
jmp
xchg
cmpsb
nop
and
fbld
mov
add
mov
sbb
xor
and
sahf
push
insl
mov
lods
adc
inc
add
add
xchg
aaa
lock
sbb
jle
xor
mov
inc
mov
cmpsb
dec
jnp
add
rcl
leave
ret
imulb
mov
push
mov
xlat
cmc
js
jge
lds
popf
dec
push
fisubrl
inc
add
je
inc
fdivs
sbb
andl
popf
in
mov
inc
addr16
imul
ds
add
gs
cmp
add
loope
lock
xchg
pop
jl
pusha
add
nop
icebp
outsb
icebp
out
scas
fldenv
enter
xor
movsl
fiadds
fisttps
test
inc
fistpl
jnp
xor
fcomps
inc
aam
xchg
std
gs
sbb
pop
jmp
inc
add
sarl
mov
cwtl
int
jne
add
inc
add
jo
mov
dec
and
data16
dec
cwtl
xor
adc
and
lcall
dec
mov
les
jae
add
lcall
fs
out
sbb
push
into
push
xchg
sbb
lret
xlat
and
add
je
jecxz
push
stos
ds
out
and
sub
rolb
mov
add
js
out
jnp
or
or
or
cmp
jmp
mov
sahf
sbb
lods
jecxz
sub
fnstenv
ret
icebp
cmpsb
loopne
in
outsl
sub
insb
cld
sub
stc
mov
jne
mov
movsl
stos
add
repnz
add
or
mov
movsl
cli
cmp
cmp
imul
mov
cld
sub
leave
pop
cwtl
orl
nop
stos
hlt
ja
push
xchg
mov
and
push
push
dec
in
pusha
add
jp
add
pusha
add
lret
movsb
sbb
pop
jle
push
fwait
adc
inc
add
pop
add
add
pusha
add
sub
add
divb
xor
cmp
mov
add
fdivs
outsb
out
mov
fsubrl
aas
add
imul
aaa
scas
push
add
fnstenv
sbb
mov
pop
insl
in
aad
or
add
pop
pop
lret
loopne
add
cmovo
sahf
lods
outsl
sti
int
add
std
mov
pop
add
add
outsl
and
adc
or
into
or
inc
xchg
mov
stos
ja
lret
push
add
mov
and
mov
nop
sub
rcrb
in
mov
in
or
jg
add
jno
or
pop
sbb
or
scas
sbb
add
fisttpll
xlat
lods
std
imul
mov
lcall
iret
cmpsl
inc
aad
movb
out
pop
mov
imul
fmul
ret
mov
mov
inc
add
pop
aam
mov
bound
ja
mov
rol
add
add
xor
mov
add
push
imul
dec
ficoms
out
bound
jg
imul
and
imul
aas
insl
push
add
mov
or
add
orl
je
sub
xor
pop
aad
fsubl
nop
and
push
and
fistl
movsb
cmp
sarb
mov
repz
mov
sti
aaa
sbb
stc
fisttpll
clc
xchg
js
insl
in
push
dec
sub
fistps
cwtl
inc
add
fstl
mov
xchg
lahf
mov
insl
scas
insb
mov
in
mov
addr16
add
ss
adc
xchg
jae
fidivl
sub
outsb
mov
aad
sub
in
loopne
mov
clc
mov
and
cmp
loopne
and
sbb
dec
into
js
adc
push
cli
pop
jmp
nop
xchg
les
cmpsb
ljmp
mov
adc
insb
xchg
insb
mov
shrl
lods
push
push
add
mov
je
jb
lahf
pop
adc
mov
cmp
repz
inc
add
jmp
mov
add
xchg
mov
popf
xor
pop
jl
add
testl
jl
out
mov
das
cltd
push
hlt
testb
and
xchg
stc
hlt
add
iret
lods
das
shlb
xor
addb
jmp
out
aad
ss
cmc
ss
ja
inc
add
push
add
outsl
dec
out
ss
sbb
movsl
adc
cmpsl
or
lock
push
cmp
aaa
push
or
repnz
lods
xor
shr
int
push
leave
cmp
mov
mov
imul
in
dec
mov
inc
add
mov
ret
mov
insb
jb
pusha
add
test
das
xchg
dec
sbb
push
loope
jge
mulps
cmpsl
rclb
lcall
ds
ja
pop
dec
int
push
rol
es
popa
popl
and
faddp
add
inc
jae
imul
or
cmp
add
add
mov
fwait
inc
add
cmp
rolb
inc
add
cmp
xchg
imul
or
add
idivl
cmc
jecxz
pop
pop
popa
jmp
and
mov
push
cs
jp
cmp
shlb
sahf
aam
cld
sbb
mov
pop
je
scas
xor
add
add
fiaddl
dec
es
add
addr16
mov
movsb
add
data16
loopne
add
push
sbb
add
mov
loop
add
cmp
pop
das
mov
xor
cwtl
incl
dec
and
pushf
enter
add
xchg
xor
int3
jge
sbb
shrl
adc
fcompl
rolb
add
pop
int3
jbe
or
jo
stos
inc
add
stos
test
xor
mov
and
lcall
shl
and
rcrl
int
sti
xor
add
cld
or
xor
movb
mov
aaa
lret
mov
add
mov
lea
xchg
call
add
lret
add
aad
mov
add
movsb
push
add
addr16
addb
xchg
mov
in
pop
and
xor
mov
mov
jnp
inc
add
addb
pop
in
or
lds
lods
add
cmp
or
mov
add
push
enter
call
cmc
sub
in
push
push
inc
add
fidivl
jae
dec
fnstsw
sbb
xchg
jne
dec
xchg
cmp
inc
add
jl
xchg
mov
les
loopne
jo
in
add
xchg
mov
xor
rcrb
in
push
jecxz
nop
addl
xor
sbb
xchg
scas
push
push
into
rolb
sbb
mov
mov
into
stc
and
test
les
sbb
mov
cmp
mov
mov
inc
xor
push
pop
cwtl
flds
mov
std
adc
test
add
add
or
mov
mov
into
add
inc
mov
bound
and
pop
aaa
enter
cmp
jl
mov
mov
or
cmp
add
add
imul
cmpsb
das
les
leave
and
aaa
pop
aaa
dec
inc
add
add
out
xchg
addr16
add
add
add
unpcklps
mov
movsb
loope
jne
mov
xchg
jns
xchg
cmp
jno
mov
sub
pop
add
push
add
bound
adc
leave
or
dec
and
adc
fnstsw
pop
mov
push
mov
stos
mov
hlt
or
jg
pop
and
outsl
rolb
cwtl
sub
out
popf
ss
add
test
in
imul
jnp
js
add
add
out
inc
add
inc
aad
add
imul
mov
and
jnp
add
data16
fiadds
sub
test
adc
add
pop
jge
mov
sub
loope
add
fdivp
pop
lods
or
stc
and
imul
pop
pop
xchg
mov
add
out
inc
push
and
gs
add
stc
test
pop
sti
imull
add
fmuls
ljmp
pop
negb
loop
add
mov
popa
pop
jge
push
jo
jo
xchg
je
xor
jne
clc
push
sub
repz
push
add
xchg
sbb
imul
mov
jne
lds
int3
lea
sahf
bound
test
push
movsb
dec
jl
in
cltd
adc
push
es
pop
flds
aam
cltd
fcoms
pop
shll
add
mov
add
fisttps
ljmp
icebp
mov
cvtps2pi
adc
ljmp
int3
addb
sbb
jnp
movsb
flds
int3
aam
pop
push
add
insb
jns
leave
push
and
mov
data16
xor
addb
xchg
and
pop
jno
or
push
jmp
jbe
out
jbe
rclb
int3
adc
xchg
jb
adc
test
mov
fldz
sub
sbb
cmp
shll
add
add
pusha
add
ja
stos
int
push
call
in
test
test
in
add
adc
mov
push
js
addr16
out
add
lret
sarb
cmp
pop
ljmp
cmp
pop
lret
fists
add
jnp
ss
dec
lea
sbb
std
mov
and
imul
xchg
mov
daa
scas
mov
loop
mov
cwtl
xchg
shrl
ret
pop
int3
and
pop
or
jp
test
mov
add
cmp
cli
rolb
std
cmp
rcll
push
mov
in
inc
add
xor
xchg
mov
add
mov
test
sti
fistpl
add
fisubs
push
mov
push
movsl
pop
adc
mov
xor
push
jno
pop
pop
adc
iret
inc
add
cwtl
jmp
lea
mov
add
jb
ja
aad
xorl
mov
mov
mov
data16
scas
sub
sub
add
inc
add
sbb
ret
jg
lret
lds
in
add
mov
or
lea
xchg
stos
pop
cwtl
adc
cmp
loop
push
adc
cmc
mov
pop
loope
push
ffree
mov
mov
jne
xchg
shl
aam
pop
mov
dec
call
dec
jae
xor
popf
xchg
jmp
add
sahf
mov
jbe
in
aam
test
sub
test
mov
xchg
sbb
jne
int
ss
add
mov
fcomp
arpl
pop
jmp
ret
sbb
inc
in
fisubrs
and
shrb
vxorpd
out
lcall
in
sub
and
pop
or
xor
cli
sbb
data16
lcall
ljmp
xchg
fwait
movsl
sbb
inc
in
dec
int3
hlt
cmp
xchg
sbb
sub
inc
push
push
jmp
add
pop
mov
push
shll
popa
xchg
iret
xchg
testb
notl
mov
lret
adc
or
out
xor
test
cld
jle
mov
sbb
xchg
je
cld
cvtps2pd
pop
insb
xor
sbb
cmp
mov
or
jp
aam
lock
add
sbb
fidivl
hlt
outsb
xchg
adc
scas
inc
pop
jo
mov
cwtl
inc
shl
push
add
add
push
sbb
add
add
push
cld
cmc
enter
in
sahf
movb
lret
inc
add
sbb
inc
mov
add
testl
cmp
mov
xchg
jbe
add
mov
pop
and
adc
outsl
mov
ret
inc
or
addb
mov
add
lds
push
das
addr16
add
pop
stos
push
add
sti
imul
and
fxsave
repz
xor
pop
in
repz
mov
jecxz
ljmp
cltd
adc
add
push
and
aaa
popf
ret
mov
or
pop
mov
shr
jb
xchg
test
mov
sbb
push
addb
mov
addb
ds
cmp
xchg
out
ljmp
loop
sub
divl
inc
add
adc
std
lea
pop
fcomi
pop
scas
push
outsb
push
sbb
inc
add
xchg
ror
jl
arpl
pop
enter
ljmp
mov
push
enter
add
and
jb
cli
popw
inc
add
xchg
add
pop
out
int3
loope
int
pop
in
std
popf
xchg
sbb
adc
bound
scas
jp
out
and
cwtl
imul
push
and
add
xor
fwait
inc
dec
subl
stos
testb
lods
push
mov
adc
adc
push
dec
jnp
adc
add
arpl
dec
dec
out
fmul
cmc
test
in
push
mov
sbb
shll
ffree
add
add
das
pop
lods
movsb
mov
imul
inc
add
in
das
lret
xchg
jle
popf
daa
xor
pop
xchg
jnp
js
mov
mov
test
les
fwait
xchg
bnd
outsl
testl
or
ret
xchg
xchg
iret
or
movb
cmp
mov
addb
push
or
test
popf
adc
mov
test
addr16
pusha
add
inc
add
out
loope
pop
stos
in
sbb
dec
dec
add
xchg
in
add
lret
test
imul
or
fdivr
jb
and
fsubrs
push
aas
pop
fistpl
mov
adc
push
and
xor
push
xchg
rcll
pop
mov
mov
inc
add
cmp
in
aam
xor
cmpsl
inc
icebp
sbb
movsl
mov
or
pop
fwait
movb
pop
xor
mov
pop
imulb
xor
add
xor
and
add
aas
scas
sub
dec
sbb
cmp
sbb
add
cld
pop
or
aas
repnz
pushl
and
hlt
jl
mov
pop
ds
insl
popa
ljmp
cmp
mov
ret
ljmp
jg
fs
or
add
inc
add
lea
cltd
add
idivb
loope
mov
add
insb
das
sbb
mov
and
adc
cmp
shl
cmp
jne
cltd
mov
push
xchg
add
jecxz
mov
es
gs
add
outsl
push
fdivl
pop
push
mov
ret
lret
nop
roll
ficomps
std
in
fwait
outsl
insl
jp
xchg
cli
scas
xor
mov
jge
popa
cmp
adc
mov
mov
lods
mov
addb
push
mov
cmp
sti
xor
pop
mov
xchg
out
add
scas
xchg
repnz
jp
clc
mov
pop
pop
roll
add
adc
jno
add
test
arpl
add
mov
testl
cwtl
scas
pop
into
fimull
std
xchg
push
mov
add
cmp
stos
enter
arpl
adc
or
adc
add
cltd
jmp
or
xor
pop
pop
cld
fcomps
mov
or
in
sub
cmp
mov
mov
dec
mov
or
dec
pop
dec
mov
out
pop
enter
xor
add
test
outsb
lods
cltd
push
mov
xor
fstpl
bts
mov
jo
mov
mov
cmp
xor
repnz
les
jp
dec
pop
inc
ret
pop
dec
dec
daa
mov
add
add
test
aad
arpl
mov
add
sbb
sbb
or
mov
sbb
add
add
fisttps
arpl
negl
inc
add
mov
cmp
leave
pop
jno
add
pushf
pop
inc
add
pop
cs
add
mov
add
cld
dec
xor
xchg
lods
adc
push
mov
cltd
sub
push
pop
inc
shl
xor
int3
jle
add
pusha
add
mov
icebp
out
rolb
lods
imul
call
aad
scas
cmp
push
and
mov
popf
xchg
arpl
sbb
cwtl
xor
inc
add
mov
add
xchg
fs
cmp
rolb
mov
addb
out
aaa
mov
sbb
and
mov
test
inc
add
mov
fistps
cmp
bound
lods
or
leave
movsl
inc
add
xor
cmp
and
aam
add
cmp
rol
add
loope,pn
scas
add
test
push
addb
popa
stos
arpl
add
dec
and
and
rolb
add
mov
outsb
dec
add
mov
les
shrb
xchg
push
sbb
std
repz
mov
ffree
gs
arpl
pop
lods
cmp
add
js
imul
dec
sub
add
ret
lods
and
mov
add
add
repnz
add
sub
inc
add
fwait
imul
add
rcrl
add
or
push
add
xchg
scas
dec
sarl
ret
xlat
xor
cmpsb
and
jne
sbb
add
mov
data16
rclb
adc
mov
pop
data16
adc
sti
pushw
into
or
pop
int
fildll
ja
mov
pop
or
and
out
lea
add
imul
aam
inc
add
dec
sub
fldl
rolb
xlat
lret
pop
pop
repz
pop
or
cwtl
lahf
add
aas
and
mov
fmulp
jmp
add
add
add
adc
clc
sub
bound
jo
sti
and
jmp
add
xor
add
jl
daa
test
loopne
int3
in
std
push
or
dec
clc
pushf
xchg
mov
xchg
cmp
push
fs
int3
add
mov
adc
push
pop
rcrb
xchg
aam
xchg
arpl
mov
add
jo
adc
xchg
test
or
testb
or
add
shl
imul
addr16
pop
ja
pop
dec
sbb
push
stos
pop
adc
jle
loope
add
fisttps
test
xor
cmp
inc
add
loopne
leave
mov
adc
xchg
jbe
and
push
add
push
xchg
push
push
les
ljmp
add
sbb
idivb
add
xchg
rcrb
ja
icebp
push
push
mov
inc
jnp
add
sub
add
add
outsb
jo
pop
xchg
fwait
in
movb
repnz
das
mov
leave
pop
cmp
movsl
pop
push
mov
jno
lds
lret
outsb
mov
jecxz
mov
loopne
or
xchg
and
lods
ljmp
inc
add
jno
insl
test
fsubs
pop
gs
jmp
sbb
sbb
int3
or
jge
notl
loope
ljmp
jg
sub
xlat
movsb
fbld
or
sbbl
scas
mov
push
mov
or
push
mov
stos
or
lret
test
or
dec
and
add
ljmp
lock
test
add
pop
or
andl
in
imull
cmp
in
push
scas
popf
cmp
adc
adc
stos
movl
aad
nop
jno
push
cmp
and
out
cmc
pop
aas
adc
xchg
lret
into
pop
sbb
add
add
xor
stos
cmp
bound
arpl
inc
testl
insb
daa
call
add
add
inc
add
mov
add
mov
addb
add
add
add
xchg
std
inc
add
xchg
std
push
or
movb
add
cli
sbb
adc
mov
jnp
in
cld
lea
loope
jne
add
cwtl
shll
jo
mov
roll
add
aad
insl
jp
jb
add
in
pushl
popf
imul
pop
mov
mov
lock
loopne
xchg
repz
push
push
jp
add
sti
aam
pop
lods
sti
pop
les
dec
fisubs
cmp
jp
add
jecxz
mov
xchg
sbb
push
addb
pop
in
sbb
push
pop
lahf
xor
pushf
push
add
mov
mov
mov
pusha
add
jbe
fimull
inc
and
adc
mov
test
dec
jnp
xchg
lret
fdivrl
jecxz
mov
jl
cmp
clc
stos
aas
mov
fstpl
insl
out
push
or
mov
add
je
and
jle
fstl
imul
addb
ret
pop
push
cwtl
popf
inc
mov
sbb
std
mov
jae
pop
les
xchg
pop
test
jecxz
xchg
cli
ljmp
pop
add
mov
pop
or
pop
incb
jne
out
lock
pop
out
jl
dec
pop
jmp
add
jbe
xchg
xor
out
mov
and
pop
addb
and
pop
ja
jp
dec
outsb
jnp
push
pop
stos
add
pop
push
bound
mov
add
pop
mov
in
xor
xlat
incb
xchg
scas
lods
cmp
xor
sbb
mov
push
hlt
pop
dec
loopne
push
inc
add
cmpsl
stos
jg
jno
fistpll
fiadds
sub
addb
dec
mov
lock
call
pop
arpl
fdivs
cmpsl
test
daa
lret
imul
pop
repnz
adc
push
lret
in
sahf
out
notb
mov
rcrl
ret
insl
in
inc
add
outsb
jle
pop
cmp
adc
loopne
jecxz
ficompl
push
push
cmp
add
sarb
inc
add
test
ret
ljmp
int
test
mov
xchg
add
xor
scas
cwtl
movb
mov
std
div
jecxz
sbb
out
fisttps
out
xchg
out
lret
mov
data16
jo
aad
add
push
ret
ret
std
or
mov
xor
imul
add
rcr
mov
in
mov
cmp
fwait
ds
push
ss
mov
popf
aad
cmp
and
jge
mov
sahf
adc
cmpsl
ds
cmp
cmp
cmpsb
movsb
pop
sti
iret
insl
push
shl
subl
sbb
pop
add
adc
or
outsl
stc
dec
xor
dec
fsubl
jp
xchg
xchg
or
pop
cltd
pusha
add
out
or
and
mov
push
lock
lahf
pop
mov
sbb
mov
out
call
cmpsb
xor
out
mov
mov
xchg
jecxz
ret
mov
fs
inc
cmp
cmp
aas
frstor
push
ja
pop
dec
cmc
push
dec
mov
adc
stos
mov
inc
add
pushf
iret
fbld
pop
das
and
cmp
xchg
dec
into
pop
adc
inc
add
nop
adc
xor
or
fdivs
cmc
pop
pop
sbb
push
arpl
add
xchg
leave
cltd
inc
add
inc
push
das
aas
insb
lock
aad
pusha
add
inc
add
add
mov
add
pop
xchg
adc
xchg
jp
popa
xchg
xchg
in
comiss
pop
repnz
cmp
add
mov
or
push
lods
cmp
rorl
inc
add
rolb
or
loop
xchg
sub
test
in
loopne
stc
push
sub
pop
into
mov
js
or
jl
pop
scas
movl
mov
adc
addr16
pop
or
bound
and
fisttpl
out
pop
and
cs
lcall
fidivs
jp
dec
rsm
sub
stos
pop
cmp
cs
xchg
fucomip
lcall
push
adc
or
add
addb
mov
add
add
add
add
xor
clc
sbb
inc
cmpsl
mov
fdivl
jns
test
nop
cs
pop
cs
xlat
jne
add
mov
jno
inc
mov
jge
dec
daa
sarb
mov
add
inc
add
add
xchg
dec
sub
pop
fstpl
adc
addb
inc
add
cmp
lock
stos
out
inc
add
fucomp
pusha
add
xor
adc
add
pop
xor
dec
mov
add
sarb
add
pusha
add
xchg
xchg
jp
bound
les
inc
add
cmp
aas
aad
js
or
fs
xchg
daa
xlat
iret
into
jle
sbb
es
movl
out
add
addb
outsl
dec
shrl
pop
xchg
insl
push
xchg
mov
pop
scas
movsl
shll
sbb
pop
sbb
js
jmp
cmp
sub
sbb
pop
fidivl
inc
add
inc
jmp
fcmovnb
add
outsb
mov
and
shrl
out
gs
xchg
sub
int3
shll
cwtl
or
hlt
cmp
mov
pushf
adc
mov
pop
jecxz
movsb
and
xor
int3
popf
mov
and
push
sbb
add
sti
pop
js
jecxz
mov
mov
push
aad
aas
std
cmp
popa
adc
adc
test
insb
push
hlt
sub
pop
push
in
mov
sub
xchg
cmp
imull
pop
adc
cmp
inc
add
fisubrs
jl
xchg
cmc
ret
dec
sub
test
inc
add
push
add
js
jmp
lahf
fcoms
dec
dec
push
add
add
lcall
std
pop
mov
bound
out
stc
or
jg
test
mov
std
sti
cmp
clc
in
mov
dec
and
mov
jb
or
cmp
pop
outsl
adc
les
mov
add
add
mov
xchg
xor
push
push
fstps
add
outsl
cmp
mov
or
sub
ja
add
in
sbb
add
out
leave
lods
movsl
jge
int3
lahf
paddsw
and
push
sahf
dec
add
add
jmp
pop
pop
cmp
mov
inc
add
add
add
das
xchg
cltd
mov
fs
xchg
aad
inc
fcoml
lcall
cmp
push
sti
js
adc
adc
add
mov
pop
mov
jbe
mov
aad
pop
test
sbb
adc
adc
sti
mov
xor
add
sti
jo
testl
scas
cmp
mov
leave
xor
add
dec
leave
jbe
mov
rolb
jg,pt
xchg
sti
and
inc
outsb
adc
inc
js
int
pushf
repz
dec
adc
call
add
mov
add
inc
add
hlt
notb
add
add
mov
fs
mov
lret
aam
lds
outsb
loop
mov
add
jno
and
call
add
push
push
loopne
das
out
cmc
mov
out
stos
xor
and
mov
ret
pop
mull
mov
push
xchg
jbe
xor
add
decl
jbe
cmp
sbb
loope
add
xor
jl
xchg
mov
fiadds
ss
test
outsl
mov
mov
add
add
mov
jecxz
ror
iret
cli
mov
push
add
xor
jbe
mov
mov
popf
addr16
cmp
daa
mov
movsb
xor
add
test
mov
add
adc
fbld
jno
add
mov
or
dec
stc
inc
add
mov
pop
sub
xchg
jl
out
add
int
scas
je
mov
adc
ret
add
add
jp
je
movsl
push
sub
scas
jnp
push
jns
pusha
add
lcall
divb
std
sub
or
jbe
lea
repz
les
mov
jecxz
mov
jno
loopne
in
push
adc
je
jg
mov
call
pop
jne
pop
mov
les
repnz
push
pop
sbb
adc
sbbl
clc
imul
adc
and
and
out
mov
xchg
pop
mov
add
add
jmp
enter
adc
addb
icebp
xchg
or
adc
lret
aas
push
mov
mov
or
stos
adc
fmul
xchg
pop
popf
in
or
push
movb
xchg
cmp
mov
rorl
enter
adc
or
cmp
push
movsl
mov
lahf
call
push
icebp
loope
pop
fdivr
mov
fs
arpl
add
test
or
fisubl
fidivs
xchg
xchg
movsl
push
pop
shr
cmc
std
push
cli
push
mov
push
pop
cmp
test
imul
add
and
outsl
xlat
mov
jp
push
lahf
call
gs
addb
roll
adc
lods
ret
mov
sti
mov
fsubp
xchg
mov
jg
mov
jmp
fsubr
pop
adc
dec
sbb
mov
lret
fildll
mov
cmp
add
std
xor
rcrb
sbb
cld
jl
or
add
pop
push
rolb
popa
sahf
fcomip
clc
add
in
cmp
into
ss
mov
addb
or
aam
mov
test
sbb
adc
and
xor
pop
inc
push
adc
mov
cmp
sti
sub
lahf
sbb
sahf
pop
stc
iret
pop
adc
add
mov
movsl
sub
pop
arpl
jle
jnp
in
mov
insl
sbb
fs
movsl
je
stos
adc
adc
sub
and
leave
out
or
push
mov
in
mov
testb
add
gs
mov
add
sbb
cwtl
in
loop
jge,pn
outsb
mov
dec
insl
mov
popa
pop
jecxz
push
movsl
outsb
rcll
clc
mov
aaa
mov
or
ljmp
push
add
and
shrb
mov
jbe
call
jbe
loopne
out
add
add
mov
pop
inc
fmul
lcall
cmp
add
add
dec
jle
es
out
loopne
pop
sahf
jmp
or
sub
lea
or
mov
push
cmp
aam
in
addr16
jle
icebp
int3
testl
hlt
xchg
xchg
adc
mov
loopne
add
mov
bound
nop
fwait
ja
sbb
jnp
add
jno
cmc
cmpsl
adc
insl
sub
out
mov
leave
out
and
push
pop
and
repz
add
mov
ret
aas
int3
jno
cli
adc
sbb
xor
in
mov
fdivp
push
mov
push
xor
rolb
pop
stos
dec
iret
sbb
jp
inc
ficomps
add
cmp
call
add
add
xchg
mov
add
pushf
jno
cwtl
jns
xor
and
xchg
mov
jns
xor
push
mov
mov
sub
lahf
int
push
push
mov
test
iret
rcrl
bound
or
clc
inc
add
add
push
sub
stos
xor
inc
sbb
dec
ja
xlat
add
ret
int
lds
add
add
aad
or
and
bound
lock
push
dec
inc
add
inc
add
repz
dec
imul
mov
xchg
pop
pop
movsl
adc
fcompl
cmp
mov
rolb
inc
add
add
lods
es
inc
add
daa
fdivs
ljmp
icebp
into
iret
pop
adc
fwait
or
cmc
leave
or
sbb
movsl
adc
pop
xchg
lret
cmp
movsl
inc
repz
pusha
add
cs
add
add
sbb
cmp
pop
lods
sbb
rcll
scas
fs
inc
add
in
leave
push
loop
jge
mov
ljmp
or
cmp
jl
add
mov
lcall
add
adc
or
rcpps
fstl
and
decl
jae
add
mov
inc
loope
sub
divl
jb
sub
push
sbb
call
mov
data16
rcrl
sub
arpl
les
cmpsb
nop
mov
bound
addr16
jge
int
pop
call
push
lods
cwtl
mov
or
mov
mov
popf
mov
pop
mov
mov
or
xchg
test
cmc
repnz
add
loop
repnz
mov
sbb
and
clc
ja
push
add
loope
test
xchg
and
out
in
arpl
cmp
imul
test
std
icebp
push
mov
cs
pop
cld
js
rol
shrb
test
stc
push
push
mov
lds
outsl
push
push
and
cmp
aas
loope
iret
sbbl
sbb
dec
add
dec
out
ret
inc
icebp
mov
addb
rorl
ret
xchg
fmull
mov
or
jp
out
stc
mov
mov
xor
add
fsubr
inc
inc
cmp
aas
mov
jns
pop
cmp
scas
add
mov
test
push
add
adc
fsubrl
adc
outsl
aaa
hlt
gs
test
xchg
mov
add
xchg
jg
popa
cwtl
mov
inc
pusha
add
loope
push
sbb
push
nop
in
mov
cltd
fs
jb
dec
pop
adc
ret
mov
scas
cmc
scas
push
lods
xchg
call
in
jb
mov
movsb
mov
fwait
mov
jl
jecxz
mov
mov
xor
push
ret
cmp
add
cld
xchg
xlat
bound
daa
push
ss
arpl
hlt
xchg
out
enter
push
mull
stos
pcmpgtw
xchg
xlat
shll
addr16
xchg
push
push
jmp
add
loope
add
pop
mov
push
rcrl
aaa
test
and
loop
mov
leave
xchg
mov
xlat
sahf
push
mov
xchg
lahf
pop
in
rolb
pop
daa
cmp
jnp
sti
mov
mov
int
loope
test
adc
mov
addr16
pop
xchg
or
mov
pop
sub
dec
ret
inc
pop
pop
jb
movb
sub
mov
mov
xor
pop
add
jb
cli
pop
adc
xchg
jne
sub
xchg
sarl
mov
js
add
sub
inc
sbb
mov
dec
xor
add
insl
mov
out
sti
jle
adc
mov
inc
add
mov
push
jnp
and
adc
scas
stos
add
or
fwait
mov
stc
ret
push
into
movsl
cli
adc
int
leave
sbb
test
pop
xchg
xor
data16
xchg
popa
xor
int3
jle
mov
and
xchg
and
stos
aas
les
jnp
out
add
add
js,pt
arpl
sbb
jb
imul
dec
pop
xor
push
nop
sub
jno
jae
pop
jp
ret
lret
xor
iret
add
aam
ret
add
push
pop
pushf
jge
mov
loope
jbe
enter
or
fmulp
movsl
pop
pop
jns
dec
jns
enter
pusha
add
add
out
add
int3
fstpt
mov
xor
jb
out
dec
xchg
rcl
gs
sub
mov
gs
mov
and
add
mov
xor
cmpsb
xchg
push
mov
in
jle
scas
cmp
hlt
add
out
dec
sub
inc
add
mov
int
sbbl
imul
sub
mov
push
push
jmp
push
ffreep
stos
in
sub
out
mov
jns
rclb
cwtl
popf
dec
mov
repnz
lcall
out
mov
test
jl
cmp
xchg
lret
add
or
andl
ret
xchg
icebp
in
hlt
je
jae
movb
shll
adc
call
mov
push
pop
or
jbe
push
pop
shll
push
pop
pop
stc
xor
in
adc
jle
insb
lods
icebp
outsb
mov
cmpsb
mov
jb
add
and
jle
ds
add
xor
out
inc
shlb
ret
bsr
and
push
js,pt
roll
cmpsl
cmp
scas
or
pop
out
mov
lock
scas
inc
mov
pop
test
and
bound
fistps
xlat
fs
aad
add
cs
add
or
dec
loope
cmp
mov
dec
push
inc
add
mov
aaa
cmp
les
jnp
add
in
mov
shlb
lea
sbb
and
xor
cmpsl
and
add
sbb
push
sub
out
les
inc
sbb
inc
nop
movsl
and
cmp
leave
and
mov
icebp
xchg
loop
pop
in
push
fwait
mov
add
in
test
into
popf
sbb
jecxz
ja
ficoml
xchg
xor
ucomiss
jl
and
wbinvd
mov
test
es
adc
add
xor
rcrb
xchg
movb
shll
jmp
clc
inc
add
ret
cmp
loope
add
sub
inc
add
add
in
or
add
roll
out
push
shr
xlat
inc
imul
cmp
push
jb
xor
or
or
lods
jg
inc
loopne
insb
xchg
sbb
mov
pop
test
xchg
das
jbe
out
push
mov
add
xchg
push
and
addr16
adc
shll
jne
jmp
fstpl
push
test
dec
inc
add
aad
leave
lahf
and
add
les
dec
in
adc
arpl
xlat
jp
repnz
push
cmp
out
inc
call
loop
or
mov
pop
dec
jae
mov
enter
add
sub
add
jns
mov
mov
test
push
mov
cmp
push
jne
lods
bound
jl
dec
rol
add
cli
xor
mov
jl
cmpsb
out
ss
add
cmpsl
scas
add
bound
lahf
stos
or
neg
adc
lock
movb
repz
out
jecxz
push
jecxz
sub
aas
movb
or
bound
out
pusha
add
das
lret
mov
insl
xor
ja
lods
cmp
sub
lds
sbb
pop
addr16
insb
daa
jmp
fmuls
push
or
cwtl
movsl
xor
out
dec
mov
inc
add
shrb
cmp
cmp
icebp
test
roll
jg
push
adc
push
ret
rol
inc
add
push
add
sbb
push
je
mov
orl
add
cwtl
leave
pop
andl
inc
fsubl
pushf
ficompl
jg
push
jle
movsb
lods
rorl
insb
and
cmp
xor
stos
ds
sub
pop
cmp
xor
insl
cmp
fwait
xchg
dec
push
mov
push
pop
repz
sbb
adc
sahf
push
ja
mov
jnp
mov
add
cld
xchg
and
add
mov
jl
adc
fsub
lret
ss
push
inc
add
push
imulb
mov
roll
sbb
imul
int
cmp
and
je
sub
dec
cmpsb
and
or
fs
test
idivb
dec
add
sub
push
add
or
add
js
ror
mov
shlb
ljmp
setno
or
imul
out
adc
sbb
mov
in
mov
lods
push
adc
aaa
testl
pop
push
and
cmpsl
push
push
fisubrl
cltd
or
mov
daa
ljmp
loop
out
xor
dec
jg
inc
mov
mov
bound
sub
cld
sub
ljmp
dec
repz
aaa
lcall
call
push
pop
fiaddl
cmpsl
mov
push
popa
scas
mov
shll
jnp
mov
arpl
jg
add
in
arpl
pop
pop
fdivr
inc
jg
sarb
outsb
pop
addr16
jbe
call
dec
jns,pn
jge
or
popf
into
lods
xchg
adc
add
jbe
inc
add
ret
frstor
add
dec
pop
sbb
pop
test
add
jmp
xlat
mov
xor
mov
jne
or
sbb
addb
mov
movsb
pop
push
jl
mov
fnstcw
daa
daa
cmp
cli
push
les
add
addb
or
mov
jp
xchg
pop
mov
mov
sub
pop
add
dec
ljmp
clc
mov
lock
lea
in
aas
xlat
test
shll
std
rolb
add
enter
lods
aam
pop
jo
xor
xor
into
sbb
mov
repz
pop
jno
mov
in
jnp
add
imul
add
rol
add
fidivrs
lahf
je
nop
push
xor
add
and
es
stos
cmpsb
sub
jg
arpl
pop
adc
add
add
test
sub
lahf
cs
or
add
jb
mov
sti
push
cs
mov
fistps
xor
ret
hlt
cmpsl
pop
icebp
cmp
or
mov
mov
add
push
dec
int
push
mov
pop
and
pop
addb
sahf
inc
add
mov
fucomip
add
pop
cmp
push
push
or
ja
add
sub
mov
repz
inc
add
adc
and
mov
pop
pop
dec
es
test
out
adc
add
call
sub
cmp
outsl
cmp
test
adc
dec
in
sbb
sub
adc
std
dec
icebp
xchg
mov
addb
rolb
fdivrl
inc
or
dec
sub
stos
sbbl
jle
and
pop
inc
mov
aam
pop
cwtl
arpl
das
or
mov
lcall
xchg
in
out
stos
sub
fimull
in
xchg
pushf
mov
sub
sub
pop
pop
icebp
testl
in
dec
scas
mov
xor
aas
jmp
xor
mov
push
sbb
xor
mov
loop
dec
dec
lods
ljmp
jne
cli
data16
push
xor
pop
fisubs
adc
mov
jns
test
mov
add
jne
and
outsb
lcall
pop
clc
add
mov
add
jae
push
lahf
mov
sub
add
push
mov
out
add
fstpt
push
pop
sub
enter
pop
incb
rolb
jp
fwait
aaa
xchg
in
inc
add
mov
add
stc
outsl
dec
cmp
in
leave
mov
aad
int3
xlat
lret
dec
filds
mov
and
xchg
jle
hlt
pusha
add
mov
fsubr
test
sub
add
pop
sub
xor
push
sbb
shrb
mov
sbb
insb
shll
ret
add
push
sti
leave
xor
jp
pop
adc
adc
dec
adc
outsb
xchg
sahf
loopne
push
ja
add
add
jnp
jns
aas
sub
push
pop
mov
ljmp
jl
xchg
mov
mov
lret
push
mov
xchg
jae
pop
mov
mov
pop
ret
push
lret
push
and
mov
inc
mov
je
dec
sahf
sub
mov
in
aaa
cmp
mov
xor
lcall
pop
jae,pt
pop
shll
cmpsl
lock
or
or
lahf
push
pop
or
xlat
pop
xor
lret
call
add
out
mov
es
fwait
jns
sbb
add
jnp
mov
inc
pop
dec
enter
pop
imul
and
arpl
add
rolb
add
test
addr16
pop
xor
jns
mov
add
push
fsubr
cmc
sub
and
pop
les
add
add
rcll
into
adc
sbb
loop
mov
xchg
adc
jg
inc
add
imul
push
xor
test
mov
xchg
rorb
mov
incb
pop
js
jmp
pop
filds
add
or
add
xchg
dec
inc
add
sub
mov
flds
cmp
xchg
mov
xchg
icebp
shr
frstor
pop
push
add
pop
sbb
jb
call
ucomiss
and
jmp
cmp
push
push
jbe
cltd
lret
add
hlt
std
ret
inc
add
pushf
scas
cmp
mov
or
add
iret
sbb
jecxz
mov
or
in
push
shrl
sbb
sarl
daa
je
inc
xor
xchg
inc
add
pop
sahf
test
xchg
into
jecxz
mov
leave
sahf
mov
stos
jge
aam
pop
es
pushf
jl
xchg
rolb
fidivrl
mov
stc
scas
ss
xchg
mov
mov
cmpsb
pop
mov
push
cmp
mov
movsb
jg
outsl
cs
and
out
or
pop
and
jmp
lods
push
outsl
fbstp
push
adc
arpl
fidivs
add
mov
outsb
and
adc
or
jp
cmp
adc
add
push
stos
and
in
add
dec
jge
std
fwait
xor
enter
or
ss
xchg
ljmp
sub
mov
out
rcll
jnp
fcoms
mov
or
and
imul
push
addr16
xor
xor
adc
mov
lds
mov
mov
pop
cmp
and
or
orl
int
movsb
push
sub
jmp
xor
add
movb
idivl
rolb
gs
pop
pushf
jnp
mov
sub
xor
xor
outsl
mov
sbb
and
add
pop
std
or
inc
add
pusha
add
out
mov
pushw
add
xor
xchg
icebp
out
mov
in
fmuls
loope
nop
add
pop
hlt
mov
push
outsl
insb
and
movsb
stos
frstor
out
sub
or
test
stos
sbb
adc
std
push
sub
stos
pop
lcall
cmc
inc
add
ret
repz
xor
jl
test
xchg
stc
in
mov
pop
mov
xchg
lcall
mul
in
roll
lods
pop
pop
cmp
popa
ror
movb
xor
adc
cmp
push
out
ljmp
add
bound
xlat
arpl
es
divl
fistpl
rcrl
dec
addr16
loope
add
add
aam
addb
dec
cmp
rcrl
lret
fstpt
inc
xchg
mov
aam
sbb
xchg
outsb
pop
sub
dec
ret
call
mov
add
inc
add
add
jae
inc
add
out
addr16
int
iret
adc
sbb
fwait
jo
sub
mov
lds
add
out
jecxz
test
flds
aam
mov
rolb
pop
xchg
popf
adc
cld
push
bound
clc
inc
add
dec
leave
orl
xor
daa
inc
or
xor
fstpt
mov
or
scas
movb
hlt
add
lock
imul
lret
or
mov
in
enter
out
jo
rolb
pop
mov
cmpsb
sbb
add
jae
int
dec
sub
lods
fdivl
push
push
call
xchg
push
idiv
adc
dec
mov
sub
add
movb
rcrl
cs
lods
sub
sbb
cmp
mov
xor
dec
or
mov
sub
repnz
mov
rclb
lds
inc
xor
ficomps
xchg
ret
test
and
int3
pop
add
mov
jp
mov
mov
adc
inc
into
pop
dec
push
in
and
fisubrl
cmp
mov
push
insb
mov
xchg
mov
sbb
int
repz
and
jl
xchg
sub
mov
sbb
nop
shrl
enter
lods
jnp
add
mov
xchg
gs
lret
sarl
addb
aad
aam
inc
mov
or
wbinvd
lea
mov
sbb
xchg
loope
add
ja
push
jne
fstpl
mov
orl
inc
add
push
pop
xor
mov
movsl
shrb
jno
pop
push
test
xor
aad
mov
popa
inc
add
dec
gs
mov
fmul
std
jo
add
lret
cmpsl
leave
pop
jecxz
xchg
jge
jle
push
leave
push
mov
xor
or
std
dec
mov
adc
or
pop
xchg
jnp
mov
add
stos
insb
mov
cmp
cmp
xor
outsb
jnp
mov
add
sahf
jle
inc
insl
in
es
push
push
and
gs
add
adc
insb
xor
fwait
shlb
movsb
test
nop
pop
push
and
dec
cmp
std
dec
in
icebp
ss
insl
jp
addr16
std
xchg
lods
mov
add
mov
sahf
xlat
or
fstpl
mov
inc
add
icebp
mov
xchg
sti
mov
add
movsl
insb
dec
push
adc
les
leave
push
stos
test
add
mov
test
addb
pop
mov
lahf
jb
in
data16
mov
scas
xchg
xchg
push
xor
in
cld
sbb
mov
xchg
jo
add
add
add
