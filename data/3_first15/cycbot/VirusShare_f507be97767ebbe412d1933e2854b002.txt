inc
cwtl
into
dec
xchg
sbb
rcrl
repz
cmpsl
outsl
test
add
inc
add
movsb
daa
insl
dec
jg
mov
into
xchg
pop
or
addb
pop
test
movsl
loop
add
or
lds
sbb
mov
mov
dec
sbb
mov
mov
ret
imul
add
mov
sbb
out
mov
mov
add
jmp
idiv
push
int3
push
cwtl
sti
xlat
cmp
xchg
daa
adc
cmp
je
in
fsubs
movsl
add
and
testb
dec
sbb
or
fisubrs
and
fs
data16
rolb
add
or
int
adc
cs
das
cld
out
fwait
add
arpl
movb
popf
inc
add
fcom
pushf
outsb
imul
add
adc
call
loope
mov
lret
aam
leave
scas
sub
cmpsb
dec
push
insl
sbb
xor
and
adc
mov
fimull
arpl
xor
pop
lret
mov
insl
les
mov
or
es
adc
aam
add
out
mov
arpl
ficomps
das
mov
pop
dec
in
mov
add
jl
pop
cltd
mov
addb
pop
jb
out
cli
push
jae
jae
fimuls
leave
mov
mov
cltd
jb
adcl
xchg
pop
loopne
xchg
add
sahf
jp
add
add
jmp
lds
std
jl
lock
loope
cli
vcvtsi2sdl
add
fimuls
jno
cmp
idiv
xchg
mov
clc
cli
stos
fs
dec
es
dec
xchg
xor
sbb
arpl
out
mov
xchg
jle
add
icebp
addb
fbstp
add
add
add
dec
push
test
cmpsb
push
pop
cmc
imul
add
fwait
jl
sti
pop
out
cmpsl
int
shlb
cli
mov
repz
push
mov
pushf
scas
and
jns
push
adc
rcrl
and
pushf
icebp
sub
imul
mov
imul
add
aam
lock
add
add
lret
aas
sub
out
addb
xlat
fsubs
push
jle
push
push
add
mov
and
add
ljmpw
add
gs
mov
adc
adc
inc
add
aaa
push
test
cs
call
jp
lods
jmp
xchg
lods
inc
mov
dec
mov
add
mov
loope
add
jns
lock
add
sub
mov
push
xchg
loope
push
or
clc
add
mov
add
cltd
int3
addr16
ja
and
xchg
cwtl
add
incl
les
sub
jns
add
add
mov
or
nop
lcall
sahf
mov
xor
inc
add
add
lea
xchg
or
ds
add
inc
cltd
int3
lods
xchg
mov
xor
and
add
jmp
sahf
dec
jge
mov
sti
lods
sti
push
and
mov
sahf
and
cmp
dec
mov
add
lcall
adc
fwait
jbe
or
add
add
inc
add
push
push
punpcklbw
mov
mov
mov
add
jmp
jbe
pop
das
test
aaa
push
cli
bnd
mov
pop
xchg
or
sub
add
adc
cmc
cmp
fsubrs
jp
jb
push
mov
repz
jecxz
add
xchg
sub
movswl
add
push
add
jecxz
add
in
mov
rolb
add
testb
xchg
push
jp
cmpl
in
sub
jns
jb
jo
jbe
add
int
or
add
iret
fnstsw
cmp
add
lret
out
and
lahf
jmp
push
adc
add
adc
mov
cmp
pmaxub
dec
addb
lret
insl
sub
add
popa
push
and
dec
xchg
sbb
add
in
stos
std
or
fsub
mov
sub
cmpsb
xchg
mov
xor
and
pop
push
aas
jle
rolb
adc
das
test
data16
ret
lcall
inc
add
jnp
stc
out
xchg
movsb
ret
push
imul
adc
add
inc
add
dec
dec
cmp
sub
sub
mov
add
in
push
push
mov
inc
add
add
lods
add
scas
pop
enter
test
mov
add
add
pop
icebp
xlat
les
test
add
shl
lods
in
jle
lods
jge
dec
push
pop
nop
out
jmp
pop
add
sbb
add
out
jno
subl
cli
insb
cmpsl
xchg
ror
movsb
add
sbb
lcall
sub
add
icebp
xor
mov
scas
adc
and
pop
dec
movsb
cld
jbe
cmc
pop
test
or
or
inc
leave
mov
add
push
push
dec
xchg
movsb
faddp
add
xor
inc
add
jmp
add
mov
outsl
sub
push
xchg
mov
jecxz
mov
movsl
xor
push
add
insb
push
fnstcw
add
cmp
imul
cmc
xchg
mov
add
xchg
ja
add
in
push
lea
mov
lds
bound
stos
in
lret
sbb
les
push
iret
xor
dec
das
jg
outsb
in
lret
add
mov
inc
add
fs
add
imul
adc
lds
jno
and
xchg
inc
add
add
jae
inc
add
jo
push
imul
add
lahf
in
stos
mov
shll
xchg
dec
shl
sub
enter
mov
cmpsb
enter
mov
push
add
dec
and
lret
scas
jmp
popf
cmp
add
ljmp
inc
jnp
jg
add
inc
add
mov
fnstsw
cmp
add
bswap
mov
shll
fs
push
hlt
jbe
adc
jl
mov
in
xchg
adc
and
sbb
lods
cmove
adc
dec
es
add
cmp
mov
push
add
cmp
dec
imul
xchg
inc
mov
add
inc
add
adc
inc
ja
bound
inc
add
push
imul
inc
add
push
in
pop
aas
lret
adc
xchg
loopne
es
sub
push
jne
add
xchg
inc
add
or
cli
add
lret
movb
sbb
mov
xchg
mov
bound
call
sbb
mov
add
gs
into
xchg
lret
jns
jb
push
dec
leave
push
inc
cmpsb
imul
xor
pop
aas
sbb
jo
mov
dec
lcall
addb
jo
gs
nop
pop
dec
pop
adc
add
fxch
ja
push
mov
icebp
scas
mov
repz
inc
add
jbe
xor
jl
std
pop
add
imulb
pop
scas
pop
popf
mov
add
lahf
jge
sti
enter
cltd
fsub
bound
sub
inc
xchg
xchg
xchg
orl
mov
cmc
push
mov
cwtl
into
jb
ret
bound
das
ror
addr16
push
add
lcall
das
inc
mov
scas
ret
push
sub
fidivs
jp
fidivs
jp
dec
mov
outsb
push
xchg
mov
icebp
jbe
add
imul
mov
repz
fidivl
add
lods
cmp
out
pop
jno
add
popf
pop
jecxz
lods
out
and
add
insb
enter
stos
mov
mov
or
into
mov
rcl
sbb
insl
cmc
xor
dec
std
sub
add
outsb
insb
pop
mov
pop
sub
xchg
xor
pop
adc
dec
popl
or
pushf
and
mov
aaa
sbb
xchg
push
cmp
fwait
sbb
sbb
jae
push
add
add
jae
aam
movsb
adc
add
push
ret
mov
mov
inc
pop
xchg
jns
out
xlat
mov
fstp
xchg
add
xor
cmp
ljmp
add
mov
pop
pop
int3
push
add
ret
cmp
inc
orl
idivl
nop
sahf
movsb
icebp
mov
mov
mov
in
pop
cmp
mov
pop
in
fmul
addl
xchg
jecxz
dec
lgs
mov
push
mov
add
cmpsl
pop
dec
movsb
iret
inc
add
scas
inc
add
out
popf
inc
mov
das
mov
jbe
mov
inc
add
and
adc
mov
adc
pop
mov
sbbl
ret
das
pop
mov
pop
gs
jle
add
sbb
xor
ret
xor
sbb
sbb
push
cmp
popa
push
aas
stos
je
sbb
cld
jecxz
add
xchg
int3
popf
aaa
add
and
scas
sub
movsl
movb
shl
addb
aad
mov
in
pop
adc
add
popf
sbb
lods
pop
repz
push
mov
cmpsl
and
sub
lods
out
fldenv
addr16
out
jae,pt
xor
xchg
pop
addb
adc
jl
inc
ljmp
jp
ds
movsl
movsl
mov
mov
pop
sbb
jno
inc
add
es
movsl
mov
dec
sahf
add
popf
jge
or
xchg
xor
rolb
scas
pop
iret
or
fsubr
adc
and
push
or
sti
les
les
jne
stos
add
in
popf
xor
in
pop
ret
lods
push
dec
movsl
test
add
test
jge
sbb
adc
add
imul
std
in
cmp
int3
dec
add
inc
mov
test
add
test
add
imul
xchg
push
or
push
add
aas
int3
xor
stos
mov
xchg
jmp
call
jp
jmp
push
std
aas
inc
adc
cmpsb
cmp
mov
fiadds
adc
stos
in
int3
inc
mov
rolb
insl
pop
cmp
and
cmpl
push
fbld
rolb
sti
xor
mov
bound
addb
mov
dec
jae
pop
aaa
lahf
cmp
add
rcpps
out
insl
or
inc
adc
add
sbb
clc
inc
add
mov
fwait
mov
xlat
mov
into
pop
inc
add
adc
mulb
pop
in
push
out
cli
xchg
jle
popf
ss
cmp
add
xor
adc
aaa
repz
add
nop
addr16
sbb
shrl
add
stos
mov
adc
inc
aas
cld
or
cld
xlat
pop
cmpsl
ja
mov
ret
sub
jnp
insb
push
rolb
fdivr
jge
movb
fimuls
les
js
filds
inc
add
push
add
mov
pop
in
and
out
and
into
sbb
mov
insl
or
jp
loop
add
add
mov
add
pop
sbb
jecxz
mov
mov
adc
jp
aas
pop
mov
mov
add
rolb
das
imul
add
cli
ja
push
jne
cmp
stos
movb
jno
lahf
lahf
popf
scas
aaa
out
push
adc
add
sahf
xlat
scas
rolb
sbb
mov
shrl
mov
fiaddl
xor
mov
int3
cld
sbb
xor
cmp
push
inc
add
mov
inc
add
imul
aam
or
in
add
inc
add
sbb
cli
and
sar
movb
mov
lods
insl
ret
das
push
pusha
add
and
mov
cmc
xor
ffreep
add
add
jg
outsb
mov
mov
in
pop
bound
mov
sahf
scas
jb
pop
pop
lods
sbb
arpl
rolb
jecxz
fisubs
outsl
push
aaa
stc
leave
test
out
insl
pop
jge
inc
add
rolb
mov
movsl
fs
cmp
outsb
pop
jge
cmpsl
dec
xor
xchg
por
dec
loop
add
imul
add
mov
push
jae
ret
push
add
dec
cmp
lods
sahf
mov
mov
jecxz
les
pop
adc
dec
out
hlt
loopne
insl
xchg
jno
dec
and
jecxz
sahf
mov
pushf
lods
cmp
sub
les
cmp
popa
in
xor
ret
fnstsw
cmp
add
test
outsb
call
pop
fdiv
rorl
out
int
scas
outsl
ds
negl
pop
jecxz
nop
mov
xor
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
mov
adc
cmp
xchg
pop
mov
pop
frstor
enter
aas
inc
nop
adc
and
push
clc
bound
jmp
push
hlt
imul
dec
and
jne
cmp
jae
int
add
add
adc
ret
mov
pop
jne
xchg
or
push
arpl
cli
lds
movb
imul
push
shll
lret
sbb
pop
rcl
pop
pop
jmp
pusha
add
xchg
push
jge
xchg
jb
jb
add
push
add
mov
nop
scas
das
movsb
jle
push
jo
add
xlat
dec
jle
outsb
mov
add
lret
add
mov
rolb
or
inc
jge
fs
sub
sahf
cmc
lea
out
mov
mov
enter
mov
add
xor
jmp
lret
inc
ret
mov
test
xchg
lods
add
lea
cmp
rolb
testl
imul
xchg
mov
nop
mov
rolb
movb
dec
aam
aas
xchg
std
stos
movb
adc
outsb
in
scas
sbb
std
cmp
leave
sub
add
xchg
std
dec
or
mov
add
pusha
add
jl
mov
shl
cmp
and
nop
mov
stc
ret
lods
leave
lock
popf
cmp
movb
sbb
fimuls
gs
sub
ds
mov
push
int
jge
mov
cli
fstps
outsb
sbb
pusha
add
mov
pusha
add
cmp
xchg
loopne
adc
movsb
cmp
data16
pusha
add
std
sti
mov
rol
add
jb
stc
clc
adc
flds
add
xor
jne
sbb
insl
nop
imul
cs
xchg
lcall
cmc
sti
push
add
out
adc
pop
fisubl
subl
fadds
xchg
xchg
pop
sub
pop
mov
mov
das
test
ret
and
xchg
mov
sbb
fidivrs
mov
or
add
and
aaa
aas
sub
aas
mov
ret
movsb
ljmp
lret
fs
inc
add
jns
cmpsb
lea
cmp
aam
aas
inc
add
xchg
mov
add
cs
inc
insb
daa
in
xchg
pushf
mov
enter
mov
dec
xor
outsb
mov
mov
daa
jns
sub
jecxz
pop
je
push
add
add
sti
icebp
add
addr16
and
push
sbb
pop
ljmp
add
bound
sbb
push
int
cld
in
popa
cs
push
xchg
push
movb
adc
dec
dec
lods
addb
add
iret
int
in
jbe,pt
stos
and
xlat
ds
push
sarb
jecxz
into
mov
insb
imul
jo
aad
ret
insb
popf
mov
insl
addb
mov
add
in
call
push
movaps
add
enter
aaa
fildl
add
movb
sub
adc
pop
pop
add
fistps
jbe
bound
daa
xchg
inc
pop
into
int3
cmovbe
or
inc
add
nop
sub
mov
aam
inc
pusha
add
inc
add
cwtl
repnz
jnp
loope
push
push
sub
or
add
sbb
inc
fdivrs
push
cvtpi2ps
test
aam
jg
xor
es
mov
nop
pop
dec
lcall
push
cmpsl
pop
pop
sbb
xor
adc
xchg
dec
movb
dec
add
cs
aad
call
cmp
jnp
imul
ret
cmpsb
scas
divl
jo
push
pusha
add
in
add
xor
adc
mov
add
lock
fcoms
sti
xor
int
fisubs
bsf
add
outsb
push
lds
leave
push
repz
mov
cld
imul
test
cmp
dec
stc
insb
hlt
int
jbe
inc
dec
call
les
sub
cmp
mov
cli
sahf
iret
pop
jbe
dec
out
rolb
mov
dec
xor
imul
scas
add
sbb
push
loop
xchg
push
mov
jl
jp
inc
jp
adc
repz
out
add
int3
add
lahf
sbb
fsubrp
xchg
xchg
or
sbb
inc
add
mov
pusha
add
fwait
idivl
sahf
inc
add
lods
nop
flds
add
jge
das
test
pop
bound
inc
icebp
or
loop
sub
inc
add
add
sub
popf
push
sub
ret
adc
pop
packssdw
lret
add
into
sbb
and
pop
add
and
cmp
push
push
arpl
cltd
pop
in
pushf
mov
sub
mov
dec
mov
pushf
addb
daa
loopne
rorl
std
push
add
jge
push
imul
dec
in
icebp
aaa
cmp
adc
pop
add
les
or
movsl
and
jmp
dec
ljmp
aad
inc
add
popf
xchg
je
ss
inc
and
mov
add
mov
sub
xchg
jb
mov
add
mov
mov
and
jnp
sbb
inc
leave
fisubl
sub
ljmp
mov
xor
inc
add
outsl
stc
cmc
push
inc
add
rorl
sbb
lods
pusha
add
andl
jmp
inc
pop
mov
xchg
lcall
into
test
push
or
dec
mov
lahf
flds
aam
adc
lods
xor
add
movsl
addb
in
outsl
int
sbb
adc
aam
gs
add
mov
inc
add
into
stc
cwtl
lock
inc
sti
nop
popa
shll
pop
sub
ret
inc
add
cmp
push
outsb
xor
and
loop
or
loope
bound
push
or
dec
mov
push
adc
xor
inc
cmp
ljmp
push
cld
dec
js
dec
sti
fsubr
in
jo
clc
enter
stos
les
pop
mov
ljmp
push
pop
sahf
add
or
add
das
xchg
mov
inc
add
lret
negb
aas
movsl
vmwrite
jecxz
add
scas
sub
jae
xchg
in
mov
ret
addb
shll
repnz
scas
adc
fcoml
insl
int3
xchg
out
pop
outsb
pop
dec
outsb
insb
aaa
int
fldt
lods
outsl
and
sbb
sub
and
or
add
adc
add
sub
cmpsb
lea
push
mov
jo
jp
add
cmp
xor
hlt
cmp
sbb
loop
in
xchg
dec
daa
mov
push
jae
fiadds
movsl
jmp
adc
pop
mov
js
aaa
call
add
movsb
fnsave
mov
dec
xchg
mov
test
icebp
sbb
add
mov
pop
fidivs
jmp
mov
aas
in
sbb
and
dec
xor
mov
push
in
outsl
add
in
add
sbb
add
cmpsb
push
dec
mov
sbb
xor
fsub
mov
aam
adc
mov
jp
inc
dec
sub
fwait
inc
add
out
sbbl
xor
lret
push
add
sbb
test
push
add
pusha
add
lret
mov
fwait
push
sti
aaa
pop
cwtl
adc
stc
mov
jmp
jne
add
jb
fnstsw
pusha
add
stos
out
sti
subl
xlat
xor
pop
and
icebp
xor
mov
add
cld
push
cmp
ss
xor
adc
cltd
test
stc
pushf
sub
jl
xor
mov
dec
push
dec
movb
or
inc
outsb
js
decb
into
xor
aaa
mov
jl
aad
arpl
jae
or
aas
lret
mov
insl
sbb
sbb
add
add
cld
test
push
mov
stos
movsb
add
add
cmp
lods
std
cmc
push
mov
inc
add
pop
mov
jp
mov
aas
mov
iret
fcoml
leave
push
pop
push
xlat
fistps
push
enter
xchg
scas
adc
jae
fists
sub
in
out
or
ret
dec
insl
xor
add
or
mov
sbb
sbb
imul
add
and
pop
pop
scas
sub
add
add
movsl
ds
jge
inc
fwait
xor
addb
mov
cltd
fildll
outsb
jnp
dec
mov
pop
mov
push
mov
mov
push
rcr
adc
add
add
movsl
stc
movsb
popf
adc
fldenv
add
jle
loopne
mov
mov
fstpt
xchg
lea
bnd
mov
inc
sbb
dec
scas
fidivs
cwtl
mov
addl
pop
add
or
fidivs
stc
gs
add
int3
jg
in
or
pop
addb
fldcw
lea
adc
xor
mov
xor
and
in
data16
data16
add
popf
ds
xchg
adc
push
sbb
and
mov
xor
in
cmc
icebp
pop
adc
out
test
jbe
lret
lret
out
xlat
insl
mov
adc
add
add
pop
inc
add
adc
xor
ret
dec
sub
shlb
jle
stos
icebp
stos
push
sahf
mov
mov
jae
std
fldl
mov
les
sub
mov
imul
movsl
ds
imul
pop
lods
fisubl
popf
xchg
adc
xor
in
xchg
add
dec
cmc
push
add
addr16
mov
jl
mov
addb
inc
add
sti
test
fs
jl
sti
sahf
sbb
lret
dec
pushf
sti
jne
ret
call
pop
inc
std
and
mov
inc
add
cmpsl
in
sbb
mov
and
pop
js
jg
mov
add
int
or
mov
frstor
fwait
loop
bound
lds
test
gs
lock
add
fcoml
xchg
addr16
imul
sbb
mov
pop
cwtl
and
icebp
dec
imul
jne
rolb
xchg
cld
jnp
movb
dec
stc
repz
out
imul
sub
jno
inc
add
push
sbb
scas
out
pushf
fisttpl
or
mov
add
inc
add
add
lret
xchg
sbb
jg
ja
mov
xchg
js
push
push
dec
add
aas
mov
ret
fwait
lods
es
lock
add
add
es
jle
or
cmp
lret
pop
sub
sub
roll
dec
test
scas
adc
addb
aaa
int3
into
fldl2e
inc
add
jl
mov
add
mov
add
xchg
cmpsl
jne
jmp
aad
mov
and
mov
stos
and
mov
aas
push
jp
orl
mov
movsb
out
ficomps
mov
mov
dec
lret
ret
addb
jo
insb
and
fwait
pop
loope
in
repz
add
push
pop
add
dec
push
sbb
in
addl
movb
aam
add
mov
addb
sbb
and
add
jl
movsb
jae
clc
inc
scas
dec
daa
stc
jbe
adc
jo
int
jmp
scas
ret
mov
jmp
push
sbb
addb
shll
inc
xchg
cmp
add
add
ja
scas
add
xchg
push
cwtl
adc
mov
push
fnsave
mov
lret
xor
mov
adc
div
sub
sbb
jne
mov
fcompl
push
dec
ret
ret
adc
xor
test
cmp
push
in
dec
mov
pop
add
add
add
xchg
outsb
in
mov
add
add
rorl
xchg
inc
cs
jecxz
movsl
adc
pop
outsb
outsb
wbinvd
cli
mov
cli
sbb
mov
xchg
mov
push
mov
in
add
push
mov
push
sti
mov
add
push
dec
mov
inc
add
fidivl
call
push
or
push
push
mov
add
mov
push
scas
inc
xchg
xchg
jns
dec
lcall
out
gs
into
dec
fadd
add
mov
xor
mov
ret
mov
cmc
out
mov
cmp
inc
add
inc
or
in
pop
fnstsw
or
inc
pop
cwtl
nop
push
mov
dec
std
push
xchg
ja
mov
inc
add
adc
pop
sbb
mov
fsubs
xor
cmc
ss
inc
add
inc
add
rolb
aad
add
add
jmp
add
ljmp
push
add
adc
sbb
add
lock
pop
test
mov
push
push
jg
test
and
in
mov
lret
outsl
xor
fs
lock
inc
add
mov
add
fwait
imul
fstsw
addb
sbb
fists
rcrl
std
xchg
std
pop
push
xor
insl
mov
cli
cmp
addb
add
jns
dec
mov
mov
inc
lds
or
inc
pusha
add
imul
gs
outsl
mov
ja
inc
add
lret
inc
movsl
jp
ds
pop
jne
imul
adcl
xchg
mov
xchg
add
addr16
pop
subl
add
dec
stos
je
jge
jae
les
push
ja
fmuls
imul
mov
movb
add
or
add
jl
fucom
dec
hlt
xchg
rorb
fwait
test
add
lock
shll
inc
add
inc
add
add
mov
adc
loopne
xor
loop
and
cmp
imul
xor
ljmp
hlt
js
cmp
add
lahf
mov
add
lods
sub
xchg
es
sahf
add
mov
ret
lock
mov
add
ret
push
dec
mov
add
mov
std
inc
testb
lock
icebp
out
push
sbb
sub
inc
add
sbb
fstps
out
leave
stos
movb
movsb
cmp
dec
test
cltd
arpl
jo
addb
add
fdivrl
popf
lods
gs
pop
popa
je
cmp
sbb
sub
in
ret
mov
mov
pop
inc
addb
add
xlat
xchg
movsl
sahf
sbb
cwtl
xor
fistpll
xor
xor
fs
add
imul
daa
mov
ja
in
xchg
addr16
xchg
push
jae
mov
pop
stos
paddusb
cmp
mov
sti
scas
dec
in
mov
push
aaa
and
ja
lods
bound
mov
mov
mov
xor
dec
xchg
mov
lods
pop
or
mov
xchg
fnclex
stos
mov
bound
fs
mov
ror
aam
iret
push
mov
inc
cli
jmp
pop
pop
aam
xor
xor
pop
xchg
or
jo
add
or
movsl
mov
add
sbb
fs
decb
out
aad
adc
js
or
push
lahf
lret
inc
add
mov
and
arpl
add
inc
test
xor
in
int3
jecxz
push
cmpsb
aas
ss
mov
jnp
add
dec
test
lret
int3
sub
and
xor
add
add
imul
xor
mov
arpl
enter
jge
jg
or
or
mov
int3
dec
test
and
ljmp
push
rclb
mov
mov
lcall
adc
add
pop
sbb
mov
inc
mov
stc
dec
outsl
jmp
pop
lods
call
fistpl
jb
movsl
adc
das
jge
scas
adc
ds
loope
lock
hlt
add
dec
test
int3
dec
mov
cs
sub
pop
mov
push
outsl
insb
fidivrs
insl
mov
pop
mov
push
shlb
test
mov
jne
or
fildll
ret
jg
sahf
fcompl
cmpsl
xchg
jp
scas
out
dec
mov
and
mov
add
jno
fisubrs
ss
jecxz
add
notl
or
sbb
sbb
aam
rolb
sarl
test
mov
inc
add
cltd
pop
sbb
movb
sahf
push
pushf
lret
ret
pusha
add
pop
inc
add
xor
add
push
out
mov
dec
lods
and
loopne
push
mov
mov
pop
push
fidivl
sub
sub
dec
fmuls
add
lret
fcomps
xor
mov
inc
add
lods
xchg
xor
sub
xor
ret
xchg
sub
cwtl
das
lock
int
in
sbb
jle
add
jo
ret
mov
jo
push
jmp
xchg
cpuid
sub
xchg
rcll
cwtl
pop
adc
and
mov
jp
into
movb
and
mov
incl
aaa
pop
je
fs
add
stos
jle
xor
cli
jno
add
pop
pop
dec
dec
jae
adc
sbb
shll
imul
xchg
rcr
cli
frstor
add
clc
std
inc
add
insl
jecxz
add
push
cmpsl
sahf
fs
xor
xor
add
xchg
push
and
pushf
js
adc
jmp
scas
addb
outsb
scas
add
mov
xchg
enter
and
cmpsl
sub
xchg
jge
ficompl
movb
xor
mov
addb
es
pop
aaa
or
inc
add
call
sbb
int3
cmpsb
aad
mov
add
fsubrs
aam
sbb
add
addb
and
push
imul
pop
enter
inc
and
std
xor
cmpl
cmovbe
jle
push
push
dec
cli
adc
mov
adc
push
xchg
sbb
cs
mov
mov
sti
cmpl
ljmp
popa
addr16
mov
aas
in
pop
xchg
jnp
in
jnp
pop
jne
hlt
jbe
xchg
adc
mov
sbb
push
shll
mov
in
in
jmp
filds
add
les
fwait
pop
rcrb
and
ret
xor
loopne
inc
add
stos
sub
add
mov
ficoms
push
pop
sahf
cmpsb
inc
aad
loopne
push
lahf
xchg
xchg
add
nop
pop
push
mov
mov
push
in
mov
inc
add
mov
adc
movsb
push
test
cmp
cmp
lods
push
add
pop
repnz
add
out
xor
lods
into
xchg
repz
ficomps
addb
pusha
add
xor
push
test
add
jno
mov
incb
js
add
add
rclb
inc
mov
jb
fwait
or
mov
lock
aad
jns
sub
pop
inc
add
in
dec
aam
xchg
nop
jb
movb
stos
dec
sub
inc
movsb
lret
xchg
js
xor
int3
lock
das
addb
insb
push
inc
loope
sbb
stos
icebp
jg
inc
ror
imul
add
frstor
pop
dec
pop
jno
add
jmp
push
mov
pop
ljmp
push
xlat
out
mov
scas
dec
loope
cld
mov
or
rorl
loop
shll
pop
std
les
popf
cmp
insl
mov
and
rorl
out
xchg
push
mov
add
fildl
mov
bound
push
add
xorl
pushf
mov
mov
popf
sarb
clc
inc
add
jmp
lcall
pop
lods
pop
rol
or
jp
sbb
data16
xchg
sahf
jmp
jecxz
mov
cmp
ret
cmp
add
dec
and
xchg
adc
add
insl
call
pop
adc
and
jnp
add
fldcw
push
lods
in
dec
cmp
xchg
rcrb
jae
add
cmp
out
add
jge
repz
arpl
add
aaa
pop
fldenv
popf
push
mov
inc
add
mov
push
fisttps
pop
rcll
add
pushf
sub
xchg
call
repz
sbb
lock
push
push
sub
pushf
xor
push
push
add
sub
inc
addb
lds
mov
cmp
sbb
notl
add
out
cmc
scas
sub
imul
lcall
int3
int
je
movb
mov
and
scas
in
cmp
fistpl
nop
mov
mov
mov
add
mov
add
ja
mov
jle
sub
loopne
add
mov
icebp
aad
add
dec
pop
mov
add
movd
stos
pop
adc
jo
add
add
pop
or
mov
cltd
jnp
insb
mov
js
fisubrs
ret
ljmp
daa
mov
pop
les
jp
mov
rclb
push
aas
ret
mov
out
fildll
add
mov
jmp
test
mov
std
push
test
mov
xlat
movb
add
xor
out
cmp
outsb
movsl
jmp
inc
pop
pop
inc
in
jge
lret
add
out
cmp
test
outsl
xchg
inc
inc
add
loop
jno
pop
push
outsb
xor
dec
mov
loopne
pop
call
cmp
adc
movsl
aad
sbb
mov
add
pusha
add
aad
les
dec
pop
mov
ret
lahf
stos
sub
xrelease
pop
fs
jno
push
xorl
into
es
ret
pop
sub
mov
cld
aam
pop
pop
add
mov
or
fnstenv
std
movb
mov
popa
add
lods
aas
arpl
xor
add
jb
add
outsl
sub
mov
and
lcall
lea
push
cltd
sub
repnz
sub
fdivrs
or
bound
push
js
adc
data16
mov
in
shll
clc
mov
outsb
ret
int3
inc
add
jb
jge
inc
add
cld
adc
inc
add
cli
mov
outsl
mov
add
push
lahf
outsb
xor
arpl
scas
lret
push
fnsave
inc
or
dec
add
add
insb
loope
clc
xor
add
add
dec
jecxz
nop
sbb
inc
pop
enter
push
sbb
fs
in
sahf
jne
stos
out
pop
mov
outsb
nop
pop
fcoms
dec
test
push
push
pop
loope
lea
hlt
mov
mov
add
and
out
pop
lock
xchg
popf
mov
addb
fs
mov
cwtl
mov
pop
add
pop
addb
xchg
sti
add
movsl
loopne
pop
sar
lock
dec
pushf
out
outsl
mov
pop
mov
loopne
mov
in
or
lods
jp
add
loopne
dec
jo
mov
push
mov
iret
lahf
lahf
dec
mov
lahf
movsl
dec
sub
and
jge
push
jns
push
repz
add
dec
cmc
cmp
add
add
lock
popa
adc
cmp
xor
xor
dec
pop
cmc
jg
iret
aam
loopne
mov
test
in
xlat
les
jb
std
push
jo
insb
push
aas
addb
addb
jns
add
mov
mov
fildll
sbb
inc
add
out
ja
sti
and
sub
lea
mov
push
cld
movsb
shrb
push
test
les
mov
push
add
dec
test
push
fwait
pop
leave
push
sti
notl
mov
or
push
pop
aad
imul
pop
sub
mov
test
jns
arpl
ljmp
movsl
iret
pop
loop
dec
dec
pop
sbb
push
cmp
add
add
pop
lea
add
ja
fucom
lea
into
or
jle
add
lcall
add
ret
sub
sbb
push
sbb
xchg
bound
xor
outsl
hlt
push
and
jle
add
fwait
ja
mov
shll
cmp
int3
ja
sbb
mov
pop
or
and
call
inc
mov
insl
rolb
sub
xchg
inc
lret
fsubp
mov
movsl
mov
std
sub
arpl
inc
add
cs
add
jne
add
mov
in
out
jmp
scas
in
mov
push
loopne
dec
add
fstpl
repz
arpl
lock
les
xchg
jnp
inc
add
leave
mov
cld
ljmp
lds
add
aaa
adc
fidivl
cltd
fbld
int
outsb
out
addr16
add
push
pop
xchg
insl
dec
and
nop
imulb
icebp
pop
pusha
add
xor
add
pushf
lock
addr16
cmpsl
iret
inc
add
popa
outsb
cmc
sbb
xor
sti
mov
push
fst
cmc
push
ljmp
push
cli
sub
je
mov
icebp
and
outsl
sti
stos
inc
add
shl
mov
imulb
scas
inc
mov
add
data16
cmp
push
dec
imul
mov
add
icebp
fsts
adc
xor
les
push
pusha
add
in
mov
or
leave
sub
dec
out
add
outsb
scas
js
mov
xchg
add
inc
xor
pop
pop
icebp
lcall
cmpsb
mov
addb
mov
push
iret
mov
push
add
dec
xorl
push
aas
mov
add
sub
fcoms
addl
or
add
fcomi
jge
jge
dec
mov
inc
add
sub
inc
add
in
jns
vmwrite
rolb
enter
sbb
gs
mov
adc
xchg
or
pop
adc
fsubl
add
mov
xchg
scas
adc
mov
jno
scas
movb
add
in
jae
push
les
shlb
sub
sbb
out
insb
add
add
shlb
jbe
fnstenv
sub
dec
sub
out
cltd
test
jl
mov
rcll
add
push
sbb
cwtl
lods
lcall
std
hlt
imul
xchg
xor
add
out
cvtps2pi
add
add
add
jne
add
cwtl
fldcw
inc
add
cmpsl
jg
add
call
inc
jne
mov
es
cmc
sbb
xor
inc
loop
or
clc
push
test
ret
movsb
lds
cli
mov
adc
mov
push
scas
std
cwtl
xlat
sbb
sarb
pop
xchg
in
and
xchg
scas
rol
add
fdivs
pop
shrb
add
or
push
mov
iret
arpl
rorl
popf
rolb
cltd
lret
jmp
addb
and
sbb
outsb
cmpsl
push
fdiv
sub
push
enter
add
xor
and
loope
mov
daa
movb
sbb
jae
aam
cmp
add
push
sbbl
cmp
jbe
lret
loop
rorl
mov
xchg
add
mov
push
je
gs
or
lds
leave
jge
fwait
adc
decb
testl
add
jne
mov
rorl
add
adc
clc
call
jg
movsl
jecxz
scas
pop
imul
into
ret
jno
xchg
js
jnp
cmc
inc
aas
lahf
addb
fistpll
repz
shlb
daa
in
scas
add
pop
das
push
mov
mov
inc
add
push
add
inc
add
aas
adc
aas
lods
mov
jns
sub
dec
xchg
ljmp
fwait
xlat
stos
sub
lea
scas
imul
stos
sti
out
aad
or
mov
addb
dec
lock
out
aas
sbb
inc
decb
pop
mov
mov
add
add
mov
out
xchg
outsl
fnsave
lret
outsb
jnp
add
call
das
ljmp
add
js
xchg
and
outsl
lds
push
sub
sbb
pop
cltd
movsl
jnp
sbb
add
mov
add
push
pop
mov
mov
movsl
and
rorl
movsb
pop
push
cmc
mov
fcmovb
add
outsb
or
cmpl
ds
pop
test
test
xchg
and
push
imul
add
jg
jg
mov
fwait
int3
adc
movb
js
in
pop
lock
fcoml
rcll
fisubs
jbe
dec
sti
dec
cmpsb
iret
loope
add
pop
push
pop
fwait
or
sbb
jg
and
aad
sbb
mov
dec
or
add
adc
arpl
mov
add
xor
repnz
rorl
add
lret
pop
cli
or
or
pop
adc
ret
out
dec
movsb
les
scas
mov
push
mov
out
jb
aaa
in
inc
push
pop
xor
cld
cld
xorl
mov
iret
ret
loope
adc
adc
loop
cmp
push
in
mov
mov
pushf
push
popf
popl
fstpt
push
lret
cld
subl
add
mov
ja
inc
add
xor
ljmp
call
add
mov
adc
ljmp
add
jnp
mov
sub
dec
sbb
jo
add
bound
repnz
into
stos
pop
cltd
sti
inc
add
iret
mov
mov
cmp
pop
into
leave
stc
inc
out
xchg
stc
aad
mov
je
cmp
test
imul
add
pop
and
xchg
push
jb
xchg
loope
adc
mov
ljmp
and
mov
rolb
sbb
push
push
loop
dec
pop
iret
jmp
sahf
mov
imul
mov
sub
out
mov
cmp
ret
stc
mul
or
cwtl
mov
pop
sub
xor
push
mov
jbe
lcall
mov
in
push
and
mov
imul
out
ja
out
dec
insb
cltd
pop
mov
pop
rcl
sub
popf
and
out
push
xlat
adc
stos
data16
cmp
xchg
pop
cmpl
dec
les
jnp
das
ja
add
jnp
lret
cmpsl
mov
sahf
enter
adc
dec
rcll
fcom
insl
jo
push
inc
arpl
lahf
adc
pop
pop
adc
movsb
leave
bound
pop
roll
popf
mov
mov
pop
and
add
cwtl
imul
fs
inc
add
stos
insb
adcl
out
loop
add
call
cmp
jmp
aaa
and
mov
add
add
sub
jb
movb
hlt
mov
lock
inc
add
sbb
cmpsl
adc
push
gs
lret
jecxz
in
add
cltd
adc
push
popf
and
idivb
add
lods
xchg
cld
pusha
add
cmp
aam
sub
jne
push
pusha
add
aas
imul
sub
xchg
addb
fnstsw
daa
lods
nop
sub
mov
dec
sbb
jnp
stc
lcall
cmp
add
adc
xor
movb
push
shlb
adc
add
call
xchg
xchg
mov
jns
add
pop
jp
popf
scas
jmp
addb
cs
stos
jne
stos
jp
sarl
fsubs
add
sti
dec
gs
and
lcall
add
sbb
icebp
dec
mov
ret
dec
pop
insb
mov
insl
test
shl
insb
sub
jl
fists
sbb
push
outsl
sub
push
push
and
add
dec
xchg
outsb
movsb
lret
mov
push
sahf
cmp
cs
setne
fdiv
lret
decb
xchg
cli
xacquire
adc
cmp
mov
stos
mov
add
inc
adc
stos
xchg
int
pop
jl
cmpsl
and
ds
mov
xchg
fs
std
test
push
ret
jnp
ret
push
dec
es
jno
lock
bound
inc
xor
mov
stos
xlat
add
lods
sbb
arpl
jg
out
cmp
push
addr16
jb
push
mov
scas
and
call
repnz
mov
add
mov
into
push
sahf
sbb
out
addb
notl
pop
enter
andl
and
cmp
xchg
add
movsb
cld
lods
or
add
mov
fimull
cli
test
iret
or
and
xchg
into
sub
sub
sbb
add
movsl
mov
scas
cwtl
inc
add
aam
jae
je
pushf
loopne
xchg
jge
adc
outsb
jge
or
cs
or
xchg
or
add
fstpt
hlt
sbb
aad
addr16
push
loop
es
je
rolb
in
cmp
imul
jne
add
xor
cmp
and
inc
add
sbb
mov
add
xlat
dec
jo
jge
or
add
mov
mov
fisubl
test
mov
add
or
repnz
pusha
add
movsl
or
lea
cmp
add
sarl
add
ljmp
xor
mov
pop
call
jge
cmp
leave
push
pop
mov
dec
clc
xchg
pop
fisttpl
shl
lcall
xchg
les
mov
add
xchg
jns
pushf
dec
in
pop
iret
add
lock
fmull
shrd
repnz
mov
hlt
mov
push
shr
pop
psubusw
fcom
jbe
je
add
lret
test
dec
push
jmp
and
int3
aad
cs
mov
add
nop
loop
test
jo
orl
add
jb
or
outsl
sbb
iret
fsubrs
jmp
add
push
shll
mov
bound
lock
and
mov
adc
js
addr16
mov
add
lret
fwait
out
cmp
xor
sub
mov
jne
popf
stos
xor
repnz
and
sbb
add
sar
sbb
mov
mov
test
cmp
add
addb
or
scas
jns
dec
pop
enter
push
or
sub
push
iret
sbb
xchg
mov
mov
xor
sahf
jno
add
add
scas
xor
add
div
push
addr16
test
rolb
addb
add
add
ror
jb
add
pop
cmp
mov
fcomps
push
loop
add
xor
mov
push
adc
std
std
adc
jo
xchg
mov
das
dec
push
pop
mov
dec
divb
inc
adc
and
inc
sub
rcll
pop
cltd
mov
data16
xchg
adc
pop
pop
pop
sahf
xor
push
inc
sti
mov
and
in
inc
add
inc
adc
cli
test
adc
fstpt
sub
or
pop
ds
add
out
ret
mov
jp
push
mov
and
or
movb
loopne
push
pop
inc
cltd
xchg
cmp
sbb
jle
fs
cmp
add
loop
bound
lcall
fcompl
sub
pushf
fs
add
cli
ret
mov
dec
lcall
jg
lock
jbe
add
std
hlt
rcrl
dec
pop
into
xor
imul
jg
dec
jbe
sti
hlt
arpl
in
gs
in
adc
sti
iret
out
sub
inc
add
scas
ficoml
xchg
sbbl
outsb
pushf
sbbl
add
or
fsubs
int3
divl
ret
in
sbb
les
cld
mov
imul
aad
pushl
mov
pop
std
call
mov
mov
pop
ret
jecxz
std
rcrl
pop
hlt
jb
sarl
ljmp
mov
fwait
inc
add
jae
adc
hlt
xor
mov
lret
mov
lret
sar
in
cmp
add
cltd
cwtl
mov
mov
dec
xchg
nop
mov
lods
lret
pusha
add
add
mov
stos
loopne
push
lods
push
and
addb
out
in
fsts
sbb
ret
lcall
in
adc
add
mov
adc
xchg
cld
shl
jno
pop
sub
pop
pop
jp
out
pop
rcrb
add
pop
std
fcomp
dec
inc
lea
int
xor
add
insl
xchg
jle
inc
fcmove
mov
push
fisubrl
jbe
outsl
ficoms
add
iret
sbb
or
add
sti
push
or
fwait
icebp
dec
enter
xchg
adc
stos
adc
jg
or
jbe
push
dec
inc
lea
aad
mov
sub
mov
cmp
cs
addb
sti
cs
mov
roll
xchg
inc
sub
lret
pop
xor
aad
pop
shll
xor
sub
mov
jnp
pop
stos
pop
xor
add
inc
add
adc
xchg
insb
mov
and
sub
es
push
insb
jle
repz
add
dec
std
das
mov
sbb
mov
inc
add
aaa
adc
push
pop
jle
popf
mov
lock
add
or
push
mov
and
push
in
je
xor
addb
xor
jne
addb
loopne
cmpsl
mov
sub
cmp
mov
push
stos
cwtl
xchg
mov
xor
cli
fisttpl
cmp
cmp
xor
fistps
add
fnstcw
push
xchg
pop
stos
cmpsb
andl
out
movb
push
add
mov
ret
ljmp
icebp
or
pop
cmp
cld
enter
scas
fisttps
aaa
mov
in
mov
scas
out
int
inc
push
adc
sbb
les
mov
cld
mov
push
push
xchg
inc
add
mov
add
or
mov
call
ds
cltd
out
xor
add
es
mov
in
pusha
add
dec
daa
ficoml
push
cmpsb
jb
add
fwait
bound
cmpsl
cmc
daa
mov
js
out
and
xchg
xor
mov
jnp
push
mov
pop
fstpt
shll
jbe
xor
shlb
stos
push
jp
mov
hlt
pop
xchg
call
mov
in
subl
or
imul
pop
movsl
sbb
lock
xchg
lahf
cwtl
js
sbb
adc
mov
ss
call
inc
sbb
sti
pop
adc
lods
lahf
adc
dec
es
jae
mov
stos
ja
add
pop
shll
mov
dec
lcall
std
push
fcmovu
add
jmp
add
andl
push
iret
pop
jl
mov
push
dec
or
fs
mov
aam
push
add
movsl
mov
fwait
cltd
loopne
jg
add
xchg
mov
imul
sub
or
aaa
out
xchg
mov
pop
shll
jb
into
call
xor
push
fwait
outsb
mov
push
add
mov
or
sub
and
inc
add
jns
fimull
iret
in
fcomps
aam
cmp
pop
es
inc
leave
aas
fildl
add
mov
sub
add
int
mov
shl
data16
ficoms
popf
icebp
adc
mov
adc
or
stos
cmp
fsubrl
push
lret
mov
mov
add
rol
inc
xchg
outsl
xor
xor
add
or
sbb
push
xlat
test
fdivs
bound
lds
add
out
add
das
or
mov
add
mov
into
lds
add
mov
pop
ljmp
xor
xchg
add
mov
push
push
loope
jp
add
xchg
pop
mov
dec
imul
repnz
rolb
scas
arpl
ja
add
sub
lds
mov
mull
xor
add
pop
sbb
mov
addb
xchg
mov
add
add
fs
sub
js
fs
shlb
inc
add
mov
mov
lods
call
les
mov
jne
cld
sub
cld
pushf
lods
popf
jge
inc
rolb
pop
ficoms
test
and
out
add
std
add
or
ret
aaa
out
inc
xchg
pop
int3
test
nop
out
fs
jnp
add
decl
and
lcall
jb
jg
fwait
jns
inc
add
cmp
ret
mov
addb
std
arpl
lds
pop
cmpsl
or
clc
sbb
jge
pop
addb
xchg
pop
sbb
add
fs
lds
push
inc
jno
es
insl
stos
shlb
sbb
mov
cmp
jo
roll
mov
add
jo
loop
or
shll
xlat
cmp
cltd
iret
dec
xchg
pop
adc
sbb
jns
mov
lods
inc
xchg
in
stos
and
fstpt
inc
add
fisubl
add
outsb
addl
int3
cmp
loope
in
cli
and
loopne
ss
fcmovnbe
inc
cmc
dec
xchg
movb
movsb
sbb
xchg
clc
jg
pop
test
add
cmp
out
dec
subl
sbb
xchg
add
mov
push
stos
cmpsb
mov
data16
cmc
data16
add
outsl
mov
xchg
aaa
xor
adc
iret
insl
das
lea
ss
and
jbe
mov
jmp
mov
jns
add
aad
inc
add
add
dec
bound
hlt
sahf
call
or
xorl
call
xor
imul
lret
addb
inc
add
xchg
adc
add
or
cli
or
add
add
add
xor
or
popw
int
jge
mov
add
jmp
imul
cmp
pop
shlb
add
adc
dec
das
test
outsb
add
xchg
adc
mov
shll
rolb
add
cmp
cmp
lock
pop
fldt
shrl
mov
inc
or
fwait
sbb
mov
int
les
mov
mulb
fcoms
insl
pop
sbb
mov
jns,pt
fstpl
push
popa
mov
in
add
or
add
sub
add
lret
pop
sbb
ljmp
in
inc
in
aaa
testl
jbe
pop
push
xchg
popa
cmp
pop
mov
inc
jnp
cwtl
push
mov
push
add
add
push
add
pop
rcrb
and
mov
popa
cld
xor
add
arpl
fidivl
jnp
fcoml
inc
imul
mov
pop
arpl
lods
cmp
testb
arpl
add
andl
xor
cmp
ja
insl
sub
xor
sbb
jb
sub
and
add
cmovp
cmp
je
sbb
add
clc
xor
mov
jmp
add
push
out
int3
cmp
repnz
xchg
dec
push
jp
or
dec
popa
sub
inc
aad
pusha
add
and
inc
les
or
out
push
dec
push
fldcw
pop
mov
test
dec
cmp
cmpsb
and
cld
call
pop
push
fadd
add
or
mov
out
sbb
int3
sahf
or
add
leave
shlb
mov
notl
add
loop
adc
cmpsl
lret
aam
outsl
addb
orl
popw
sub
ljmp
rclb
test
inc
add
lret
xchg
psrlw
inc
mov
aam
or
xor
mull
rol
xchg
bound
xchg
subl
pop
mov
fstpt
sub
cmc
mov
jecxz
add
movsl
cmpsl
outsl
repz
push
xchg
mov
mov
pushf
mov
push
test
add
inc
fisttps
jo
pushf
repnz
jp
add
adc
std
cmpsl
or
and
stos
mov
imul
ret
dec
mov
stos
pop
outsl
insb
mov
popf
jb
lods
imul
add
dec
rcrb
xchg
sbb
pmaxub
and
push
inc
add
add
dec
mov
aaa
out
in
xchg
scas
inc
add
arpl
stc
jge
xor
roll
mov
ret
dec
cmp
adc
sub
cs
mov
mov
xchg
ss
mov
add
push
js
sbb
push
xchg
xorl
jne
add
test
add
add
ror
jnp
inc
add
stos
mov
add
cmp
mov
insl
daa
incb
xlat
std
aaa
repz
leave
jno
cwtl
test
enter
add
push
push
fisttpll
sbb
xlat
test
movb
and
sahf
mov
xlat
push
in
test
aam
jge
add
and
cmpsb
sub
daa
test
push
add
test
in
cs
pop
push
inc
add
mov
test
movsb
push
icebp
fidivl
lret
and
cmc
mov
pop
movb
inc
add
cmp
decl
repz
repnz
in
repz
pop
int3
scas
call
jbe
add
fiadds
mov
pushf
mov
add
cwtl
std
fisubl
add
idivb
and
cmpsb
aaa
cmc
dec
testb
addr16
into
mov
inc
pop
mov
popa
mov
movsl
sub
neg
lods
jb
lock
repz
jge
je
pop
out
sahf
jp
mov
mov
out
cmp
mov
jp
lea
jmp
mulb
add
push
mov
addb
xor
in
rcll
or
add
add
inc
add
xchg
sbb
cltd
pop
rolb
add
mov
cmp
xchg
xor
stc
xor
int3
insl
add
sbb
sub
mov
movsb
xchg
movsb
push
test
lods
mov
pop
lcall
sub
jl
adc
and
jecxz
add
xor
push
aaa
shl
cmc
mov
push
into
inc
add
adc
sbb
jl
cwtl
arpl
mov
loop
cmpsb
js
xor
outsb
jbe
iret
xchg
lret
out
pop
jp
sbb
out
fbstp
mov
movsb
xor
fildll
push
fdivrs
cmp
fmul
iret
ret
sbb
mov
jp
xchg
push
inc
sbb
je
lea
test
and
shrl
push
nop
movsl
out
and
test
shlb
test
ret
xchg
pop
arpl
iret
fcomps
test
aaa
and
cs
jmp
add
cs
add
xlat
xchg
leave
pop
fdivl
fistps
aaa
jnp
scas
sub
xor
jae
loopne
iret
mov
push
stos
addb
aad
pop
add
loop
cmp
pop
cltd
mov
sbb
shrl
inc
add
add
mov
push
dec
xchg
repz
call
popa
sub
or
add
add
icebp
mov
lock
sbb
add
cltd
and
stos
data16
xor
fbld
addb
cmpsl
test
cmovl
ret
js
leave
ljmp
fisubrl
ss
mov
test
jno
lods
sbb
jge
and
inc
add
dec
cld
pop
cmp
mov
sbb
inc
add
arpl
xchg
add
fcomps
adc
movsl
sbb
mov
sbb
fdivrl
mov
les
mov
outsl
and
xor
add
std
sbb
inc
add
out
lcall
out
add
repnz
cmp
mov
pop
into
nop
inc
add
cmpsb
mov
cltd
lret
mov
frstor
mov
sbb
cmp
pop
adc
add
jge
scas
repz
idivb
in
jmp
sbb
sub
xor
cmpsl
incb
push
dec
adc
hlt
xchg
jae
inc
add
push
xchg
push
insb
mov
sub
jo
iret
or
inc
popa
xchg
icebp
push
pop
scas
scas
imul
or
clc
cwtl
das
push
dec
mov
push
add
mov
or
pop
cmp
fists
pop
imul
inc
add
ficomps
pop
pop
insb
hlt
sbb
pusha
add
cmpsb
rolb
ret
test
icebp
xor
add
add
mov
and
psraw
or
mov
cltd
push
sub
ljmp
shll
push
rolb
push
add
jle
lods
aad
outsb
fcomps
scas
lods
cmp
add
xor
inc
add
cmpsb
lods
xchg
jge
or
adc
inc
repz
pop
sub
push
sbb
stos
inc
cs
jecxz
lock
clc
mov
pushf
loope
mov
lea
pusha
add
div
jmp
push
push
pop
outsl
sbb
lods
repnz
mov
xor
dec
cld
cmp
bound
mov
inc
add
add
adc
xchg
jb
jns
add
push
add
add
rolb
icebp
dec
cli
and
je
xacquire
fucom
cmp
jnp
push
mov
rolb
mov
jl
ret
lock
imul
or
sbb
add
mov
int
mov
fsubrl
xor
stos
sti
xchg
arpl
fists
sub
hlt
dec
mov
movsl
sbb
cmp
bound
add
add
cmpsb
adc
ljmp
mov
dec
sahf
mov
loopne
je
mov
or
scas
je
or
addb
sbb
push
pop
push
mov
pop
or
insl
push
out
arpl
test
icebp
leave
mov
adc
jmp
insb
fists
xor
or
fisttps
fwait
repz
fisttpl
and
ljmp
and
adc
push
lret
mov
pop
sub
sti
dec
xchg
les
in
lea
mov
outsl
ret
adc
mov
sub
pop
fs
add
xchg
xor
movsb
roll
ljmp
jmp
mov
push
roll
push
movb
pop
gs
popf
and
fsubl
pop
xor
insb
ja
mov
pop
rcl
jp
imul
mov
add
jo
sub
out
roll
xchg
adc
mov
jbe
cmpsl
adc
call
push
mov
inc
cwtl
shr
incb
xor
mov
inc
add
add
dec
js
inc
cltd
push
mov
sbb
cmpsb
sti
sbb
clc
jns
and
test
shll
jb
xor
mov
and
cmp
pop
in
nop
sarl
mov
ret
loope
lock
add
pop
ja
stc
std
adc
sub
mov
or
xchg
xor
aas
push
lret
out
mov
repnz
lods
jg
test
cmp
sbb
add
fdivp
divl
inc
adc
mov
cmp
add
aad
fidivrs
hlt
push
leave
cltd
jo
dec
rcl
scas
or
xchg
mov
xor
xchg
pop
aas
cltd
push
aaa
xchg
fst
push
adc
pop
pusha
add
into
stc
sbb
fstpl
pavgw
add
stc
cld
cmpsl
shll
mov
inc
pop
fidivrs
ds
jge
data16
push
es
jl
test
push
mov
add
mov
mov
dec
mov
inc
add
sbb
div
js
push
cltd
and
adc
add
je
testb
clc
or
mov
test
xlat
push
aaa
cmp
add
jnp
add
outsb
out
cli
rep
dec
insb
xor
inc
add
dec
je
xor
sahf
aas
ror
mov
add
cmp
or
cs
fldcw
ss
cmpsb
gs
nop
fdivrl
xchg
pop
inc
les
mov
rcrb
jo
inc
add
push
icebp
cwtl
mov
addb
sahf
aaa
jns
popa
outsb
mov
pop
in
push
das
les
mov
fstps
leave
in
or
rolb
test
scas
decb
xchg
testb
arpl
jmp
jl
aaa
add
inc
push
pop
and
mov
inc
add
mov
sbb
nop
addb
aam
hlt
push
mov
push
mov
daa
jo
in
pusha
add
mov
cmp
inc
add
add
js
dec
cmpsb
lods
gs
ljmp
xchg
sub
mov
dec
les
dec
adc
incl
push
mov
xchg
pushf
pop
jle
shll
das
jnp
push
mov
je
mov
pop
mov
xor
xor
addb
pop
filds
pushf
push
cmp
push
filds
add
mov
mov
xchg
in
insb
cmp
inc
add
inc
jle
and
pop
in
icebp
push
cmc
leave
addb
cli
mov
dec
sarl
mov
push
add
ss
arpl
daa
shll
call
rorl
add
aaa
jbe
push
aas
repnz
pop
sbb
add
imul
jg
ficoml
mov
jg
sbb
xchg
shl
popf
clc
jp
adc
inc
ret
jb
bound
sbb
dec
cmp
test
push
mov
add
jmp
lea
adc
mov
sub
clc
mov
and
test
loopne
stos
out
cmpsb
xor
leave
jecxz
test
in
les
aam
ret
jp
lods
and
bnd
loop
lods
into
mov
test
mov
dec
stos
cmp
xchg
sub
dec
jae
repz
les
in
sbb
and
add
add
push
cli
jecxz
add
or
psubd
cwtl
aad
loopne
aas
inc
add
cmp
mov
scas
shlb
add
pop
lods
gs
cmpsl
pop
stc
sbb
pop
out
insl
mov
scas
xchg
cmc
dec
inc
add
dec
pop
sub
push
mov
addb
mov
icebp
in
loope
popf
jns
inc
mov
fisubs
add
add
lahf
incb
add
jne
data16
jae
mov
lods
aam
jl
inc
add
push
fucomip
mov
sub
cltd
pop
aas
mov
add
add
add
loopne
repz
adc
push
jecxz
ds
inc
add
add
pop
add
lock
imul
add
adc
mov
pop
jge
iret
ret
xchg
movb
int
push
dec
ret
in
mov
mov
nop
xor
and
fwait
push
add
xor
dec
test
push
add
popa
pop
leave
cltd
fs
pop
sbb
xor
xchg
push
jl
pop
outsb
lods
push
test
sub
xchg
jmp
push
fcomip
pushf
adc
mov
daa
xor
dec
enter
pop
imul
sbb
push
lret
dec
or
sbb
or
add
xchg
pusha
add
rol
add
pop
inc
jb
dec
ret
arpl
clc
dec
and
sbb
push
sub
add
xorl
lea
arpl
cmp
add
and
daa
movsl
pop
add
jb
inc
add
xchg
add
insl
inc
sub
dec
xchg
pop
mov
xchg
in
das
adc
filds
and
mov
xchg
repz
ja
loop
and
mov
lds
pinsrw
fdivl
pop
cmp
fsubl
into
sub
add
mov
lahf
xchg
in
out
add
repnz
sub
add
xchg
inc
pop
mov
sbb
arpl
iret
rorl
iret
sbb
add
fwait
ret
mov
les
loope
cs
and
les
xchg
jno
loope
add
mov
or
mov
jle
add
ss
push
stos
lahf
sbb
add
add
and
xchg
pop
fistpll
and
movsl
push
repz
test
or
add
scas
ret
cmp
outsb
mov
ret
lea
push
mov
cmp
stos
idivb
fwait
xchg
ja
lret
stc
sbb
inc
in
shl
adc
add
addb
add
jmp
mov
add
js
out
xchg
mov
or
mov
add
add
push
neg
adc
add
sub
int3
cmp
es
addb
mov
nop
clc
clc
bound
repnz
out
inc
add
dec
inc
add
mov
or
mov
insl
and
test
sub
jo
stos
adc
cmc
pop
cld
or
adc
call
add
fs
gs
jmp
pcmpgtd
mov
xor
leave
fnstcw
dec
pop
cmpsl
pop
mov
or
sbb
lea
addb
mov
test
imul
mov
add
mov
in
xchg
or
xor
iret
nop
add
test
aas
xor
inc
imul
lea
inc
add
add
push
xchg
lcall
data16
or
ss
imul
add
mov
loop
adc
cli
iret
fsubrs
movb
sbb
imul
imul
jecxz
inc
ror
push
mov
je
daa
xor
aas
movq
rolb
jno
jo
in
movb
mov
cmp
pop
outsb
inc
add
fsubrs
jge
scas
cmpsb
repnz
jmp
sbb
inc
mov
into
aam
xchg
fisubs
rcrb
ss
cli
sbb
add
or
int
xchg
mov
xchg
mov
add
xchg
insb
pop
or
insb
repnz
cwtl
lock
jp
push
pop
orl
loop
mov
shrl
cmp
stos
push
pop
pushf
inc
in
push
pusha
add
scas
mov
push
push
bound
mov
add
scas
cmpl
dec
cmp
cltd
stc
in
sbb
add
xchg
cs
sub
shrb
pop
sub
pop
pushf
inc
add
fisubs
rolb
jle
nop
push
shll
aas
push
push
into
fsubr
and
ja
popf
sub
xchg
push
push
mov
inc
mov
std
adc
aas
rorl
fcoml
ja
add
lods
addb
std
mov
movsl
loop
lret
insb
push
add
data16
sbb
lods
jno
xor
mov
cs
push
rolb
xor
inc
add
repz
adc
sbb
enter
repz
add
test
mov
jge
mov
mov
shll
jmp
out
test
cli
inc
add
push
push
push
push
add
dec
xchg
and
daa
push
sarl
and
aad
jecxz
sbb
addr16
jns
push
mov
dec
lahf
call
fbld
aas
aas
mov
lret
push
fists
xchg
xchg
arpl
or
pop
xchg
lret
push
call
rorl
push
mov
int
lods
and
aam
adc
adc
aad
faddl
inc
add
sar
xchg
std
xor
outsb
iret
jnp
push
mov
repnz
enter
adc
dec
je
es
or
fdivs
mov
dec
test
mov
mov
out
insb
xor
call
mov
test
mov
cmp
cltd
xor
inc
addr16
dec
icebp
add
mov
mov
sbb
ja
sbb
xchg
cmc
mov
mov
popf
pmaddwd
push
loop
add
add
and
popf
es
loope
jg
ds
mov
or
add
xchg
sub
fistpll
push
jle
push
std
fcompl
dec
enter
mov
shlb
add
xor
outsb
test
add
fdivrl
mov
add
sahf
jb
insl
mov
jl
mov
cmp
loopne
or
push
loope
add
lods
xlat
mov
and
rorl
inc
add
lret
cmp
dec
rcl
ret
sub
outsb
popa
lea
lds
cli
dec
pop
ljmp
and
clc
outsl
fdivrl
out
mov
orl
fildll
test
add
push
pop
rcr
ja
xchg
cmp
fmull
push
mov
add
sbb
push
add
out
pop
cmc
push
sbbl
cmp
add
jg
adc
and
call
lret
or
lds
ja
mov
sbb
or
loopne
jecxz
xchg
rcll
jns
shrl
mov
xchg
xchg
scas
std
into
or
out
jge
popa
popf
scas
scas
movsl
sti
jno
subl
aam
xchg
cmpsl
test
out
add
xor
mov
add
add
int
mov
adc
add
data16
imul
mov
push
iret
addl
sahf
icebp
sbb
pop
jbe
mov
add
jb
adc
shll
popfw
imul
push
call
mov
loopne
shl
pop
mov
pop
mov
or
stos
xor
and
aam
aas
icebp
jl
fmull
adc
push
cmp
mov
loopne
pop
sti
out
jbe
mov
gs
mov
jns
sub
xchg
cwtl
xor
inc
xchg
dec
lret
push
loopne
out
mov
mov
push
js
inc
add
in
rorl
add
gs
push
outsl
mov
les
fs
dec
gs
out
iret
or
xor
aas
and
xchg
mov
xor
mov
add
xor
add
bound
enter
ror
inc
add
sub
sbb
aas
sbb
std
xchg
stos
or
add
outsb
push
out
mov
xlat
dec
sub
dec
sbb
shl
xor
movsl
fmulp
sahf
push
cli
xchg
adc
insb
inc
add
inc
jge
pop
fs
addr16
or
xchg
data16
cmp
mov
cld
push
rolb
mov
push
lods
xchg
sub
shr
insb
mov
xlat
out
sub
sub
movsl
xchg
imul
pop
xor
aaa
outsl
loop
jb
outsl
mov
cwtl
xrelease
sub
push
lret
cmc
cmp
arpl
pop
adc
or
pop
pusha
add
test
lods
repz
hlt
in
mov
adc
rolb
sub
popf
hlt
cmp
pop
out
pop
popf
adc
mov
inc
add
test
fsubrs
repnz
xor
add
stc
mov
lcall
les
push
xor
push
test
and
mov
aaa
mov
mov
aam
stc
add
sbb
pop
xchg
inc
imul
add
aaa
jb
xchg
lret
mov
sbb
push
aam
mov
pop
xlat
push
pop
jno
popf
ret
push
js
rolb
rclb
repz
insl
cmp
mov
push
ja
fisttpll
sub
stos
js
insb
push
movb
test
push
jb
add
dec
bound
push
outsb
mov
add
insb
decb
and
lea
inc
add
dec
sbb
push
jl
fisubs
add
or
ljmp
cld
popl
jb
xor
jb
popa
mov
xor
not
pop
add
pop
sub
dec
lret
mov
icebp
jns
add
xchg
fdivrs
js
adc
addb
sub
xchg
insl
sub
pop
cmp
add
jno
sub
mov
push
inc
cmp
or
pop
mov
push
lcall
sub
rcll
mov
pushf
jbe
or
sbb
pop
push
mov
xor
je
cwtl
sbb
cmp
add
pushf
hlt
test
and
dec
aad
add
insl
cmp
mov
push
push
rolb
fcomps
add
imul
add
add
fcos
xor
dec
mov
pop
jne
inc
add
sbb
mov
and
pop
sbb
pop
scas
adc
jl
dec
movsb
popf
xchg
sbb
or
inc
in
rcll
pusha
add
fcoms
daa
lret
push
and
decb
repnz
xor
adcl
add
mov
add
xchg
out
mov
jae
adc
enter
or
mov
xchg
xchg
decb
jne
pop
push
sbb
inc
test
pop
xchg
mov
jmp
add
in
push
pop
dec
mov
pop
rcll
lods
adc
xor
scas
loope
ss
test
mov
or
nop
mov
scas
ret
mov
push
mov
add
mov
lds
int3
push
jns
shlb
fidivs
fbld
add
outsb
sbb
mov
mov
lods
inc
cli
inc
jp
cwtl
adc
fwait
jg
mov
push
call
add
push
movsb
adc
jl
ja
add
add
add
mov
repz
push
cwtl
in
add
xor
shr
sub
jg
xchg
xchg
out
int3
mov
dec
aad
shll
cld
sub
shrl
mov
jnp
add
cli
popf
sbb
mov
jg
mov
sbb
rcrl
sub
shrl
sub
add
and
mov
and
cltd
add
jno
lcall
jge
es
ds
stos
mov
aas
movb
test
mov
lea
and
cmp
jno
push
adc
or
aaa
test
leave
je
add
add
pop
stos
fbstp
mov
cs
ret
add
js
ljmp
sub
cltd
push
add
pop
fs
inc
add
mov
jl
xchg
xchg
mov
push
pop
mov
test
add
inc
add
add
sub
imul
in
inc
add
in
adc
je
cltd
or
repnz
add
mulw
fbstp
cmc
in
nop
fsts
cmc
jp
cli
xor
or
inc
add
mov
les
push
sub
sbb
sbb
xchg
xchg
mov
lods
or
sbb
xor
out
negb
sbb
mov
jp
sbb
je
add
ret
adc
add
inc
add
mov
scas
jle
in
daa
mov
test
add
push
push
xor
mov
xchg
jae
or
rolb
popf
jb
pop
xor
shll
and
cmp
outsl
mov
sbb
cmp
fstpl
aaa
scas
pop
leave
push
idivb
rorl
cmpsl
ret
in
mov
add
adc
add
or
inc
add
out
xor
arpl
add
frstor
lods
push
clc
pusha
add
jbe
mov
xchg
imul
stos
enter
sti
aad
fidivl
adc
arpl
push
shll
in
mov
dec
inc
pop
jmp
pop
lret
pop
mov
int3
in
jns
add
dec
int
aad
inc
jns
test
xlat
shr
popa
fnsave
dec
cmp
xchg
rcrb
mov
loop
pushf
sub
mov
adc
sbb
roll
fstl
jns
xchg
leave
imul
xchg
lods
repnz
jne
sub
not
cmp
sbb
mov
push
xor
push
repnz
hlt
sbb
add
nop
jne
mov
add
inc
or
jg
cltd
ja
ljmp
lahf
xor
cmp
xchg
mov
mov
add
sbb
cmpsl
dec
dec
cltd
out
sahf
popa
cmpsl
adc
cmc
mov
add
cld
push
gs
ret
dec
and
or
repz
addl
mov
lds
mov
push
sub
jb
dec
ficomps
push
data16
jge
add
fidivs
xor
insb
les
mov
push
leave
aas
cmp
sbb
pop
inc
xchg
jmp
cmc
push
add
popa
dec
dec
fwait
push
sub
adc
xor
add
dec
aam
jo
add
add
out
and
mov
mov
pop
add
xor
mov
pop
lahf
jbe
das
je
add
push
sti
xchg
leave
mov
pusha
add
push
or
cs
mov
je
add
add
out
mov
ds
das
mov
repz
sub
mov
into
inc
add
mov
mov
pushf
cmp
in
jg
scas
sar
mov
call
sub
jp
push
mov
adc
movsb
xchg
mov
mov
inc
push
dec
xchg
jle
stos
lds
and
push
xchg
push
jbe
xchg
sbb
mov
mov
mov
std
jae
add
mov
add
cmp
xor
mov
inc
and
scas
cltd
out
aam
lcall
cmp
ret
jecxz
mov
mov
pop
push
pushf
cmp
sbbl
sub
add
out
cmpsb
sahf
or
jnp
dec
clc
add
mull
push
sarb
mov
std
and
pop
icebp
int
aam
cmp
mov
push
pop
push
pop
int3
push
add
jecxz
mov
int3
iret
mov
adc
dec
les
or
pop
in
sub
dec
sbb
loop
push
add
adcl
fwait
loope
or
add
inc
xor
mov
add
ss
xchg
std
incl
xor
adc
mov
add
repz
ljmp
outsb
adc
add
pushf
test
cwtl
popf
mov
ret
hlt
outsl
push
fistpl
insl
mov
ds
add
and
stos
movsl
dec
sbb
scas
int
jb
nop
lret
adc
add
xor
push
shrl
push
sti
lret
into
pusha
add
daa
cmp
inc
inc
add
mull
adc
aam
sti
inc
add
and
inc
int
leave
inc
add
out
jo
push
out
xchg
cmp
addb
add
in
fdivs
sub
lcall
add
jl
popa
push
jno
add
add
hlt
push
int3
dec
aas
clc
add
cmp
sub
push
push
out
inc
add
rolb
into
data16
fmul
dec
mov
push
mov
jecxz
out
jle
add
push
cmp
add
fisubs
ss
add
pop
pusha
add
js
repz
dec
sahf
mov
fsubr
xor
and
add
cmpsb
cmp
movsb
add
jbe
mov
lcall
push
fs
stos
mov
add
jns
adc
pop
cmp
fidivl
xlat
xchg
lahf
jmp
add
xchg
rolb
hlt
jecxz
mov
cmpsb
adc
add
ret
push
imul
mov
outsb
leave
pop
test
inc
imul
add
mov
imul
ja
je
mov
dec
scas
cli
pop
loope
les
inc
add
sbb
ss
mov
cwtl
fistpl
insb
stc
clc
addb
xor
in
push
sbb
cmc
jmp
jle
cli
popf
lock
sbb
xchg
and
push
and
xchg
dec
add
adc
jb
movsl
int
add
mov
lret
outsb
rolb
push
fdecstp
pop
aad
lea
scas
mov
add
xchg
pop
mov
add
jge
lods
push
out
mov
lahf
rolb
push
and
mov
std
out
sub
mov
lret
int3
jne
mov
cmpsb
cmp
pop
push
js
push
push
or
cwtl
movsl
addb
mov
push
out
xchg
inc
push
add
sarl
loopne
add
add
pushf
dec
mov
jb
jg
xchg
xor
pop
rorl
repnz
outsb
mov
adc
js
add
xchg
push
inc
sub
in
adc
fidivrs
pop
cmp
jecxz
ficomps
popf
lret
lods
sbb
or
test
fisttpll
pusha
add
and
loopne
cs
lcall
add
add
add
fidivl
add
jecxz
aas
stos
lea
fistl
sbb
sbb
xor
mov
cmp
mov
lock
pop
es
add
lock
inc
sahf
add
xchg
in
test
ret
popa
or
push
mov
popf
test
mov
mov
mov
push
std
addr16
xor
pop
push
sbb
out
mov
or
sub
stos
shll
sbb
sub
add
sti
rcrl
leave
gs
movb
inc
in
xor
or
fldt
xchg
jmp
adc
ss
mov
sub
loope
roll
cmp
addb
mov
test
add
out
fildll
add
adc
mov
mov
adc
fld
cmpsb
cmp
adc
or
add
mov
rolb
xchg
repz
cli
insl
xchg
cwtl
cli
pop
mov
movl
pop
pop
add
mov
and
xrelease
sbb
in
inc
add
gs
fdivs
add
mov
and
cli
decb
jg
sbb
mov
or
push
in
fbstp
mov
inc
jo
and
sahf
sbb
xor
fs
lods
ret
les
insl
inc
add
mov
sbb
xor
add
adc
jg
sub
pop
mov
lret
sar
jle
xchg
xor
xchg
jne
xor
mov
das
cmp
mov
pushf
adc
jg
push
addb
add
inc
add
ja
movb
stc
call
lds
mov
pop
mov
push
pop
fwait
mov
dec
pop
inc
add
aam
mov
mov
and
or
pop
cmp
shl
pop
jmp
fisttpl
xchg
shll
adc
aas
add
lods
and
add
clc
push
ljmp
or
stos
pop
int
lret
jno
mov
push
and
fldl
xor
jns
insl
push
jo
jne
xchg
dec
insb
mov
lods
pop
aas
push
push
add
loop
mov
and
ss
sbb
aaa
and
cmp
push
pop
push
lahf
add
clc
dec
cmp
lret
or
hlt
adc
mov
fwait
pusha
add
xchg
add
push
xchg
inc
add
addr16
in
out
xchg
btr
leave
arpl
aaa
lret
jb
rcl
and
add
ss
addr16
xchg
bound
cmp
add
sti
xchg
cmp
sti
adc
dec
addb
cwtl
cmpsb
ret
xchg
mov
call
ret
cmp
add
lret
dec
cmpsb
xor
dec
and
dec
andl
or
add
push
add
xchg
fdivs
sbb
addr16
movsl
jecxz
and
imul
and
dec
dec
testl
dec
lds
scas
mov
sub
and
push
add
ret
andl
js
int3
inc
add
jp
mov
repz
mov
cld
adc
xlat
aas
fadds
ljmp
mov
mov
dec
sbb
sbb
xor
sub
fwait
movsl
loop
add
mov
rcr
dec
or
stc
out
cmc
int3
jne
fiaddl
ja
dec
das
sbb
dec
xchg
lahf
in
fsubrl
lret
mov
dec
movb
mov
gs
clc
das
in
xor
and
jl
in
inc
dec
add
lock
imul
pushl
and
add
arpl
mov
repz
nop
inc
add
pop
push
add
sbb
xor
push
test
imull
and
hlt
dec
sub
xor
add
mov
ja
arpl
or
jmp
test
inc
mov
loop
lret
je
jno
jnp
or
inc
mov
xor
decl
repz
sahf
stc
add
or
cmp
adc
cmp
jno
pop
xlat
dec
jo
addb
inc
add
add
mov
or
ficoms
sub
inc
add
add
add
add
add
mov
mov
push
cmp
daa
push
xchg
adc
arpl
imul
dec
pop
sbb
add
adc
mulb
pop
sbb
push
sub
repz
mov
mov
pop
addr16
push
pop
test
sub
je,pt
sub
mov
lret
or
out
imul
add
fcomi
adc
stos
lea
movb
insb
jne
cwtl
insb
pop
out
inc
add
fidivrl
adcl
ss
mov
push
or
cmp
add
test
lea
pop
jle
shrl
dec
in
lea
cltd
pop
jbe
rcll
sbb
fnstenv
stos
pop
and
stos
jno
lds
inc
add
dec
pop
add
fldenv
xor
out
lcall
xchg
dec
icebp
mov
mov
and
cltd
and
mov
int3
mov
xor
stos
adc
add
cmp
bound
dec
cli
xchg
out
adc
test
pop
and
pop
daa
xor
divb
sub
add
sarb
ja
cmp
inc
int
cmp
outsb
cmp
sub
add
iret
jo
add
ret
inc
add
test
jno
or
add
add
adc
in
mov
and
lods
add
or
shlb
push
ret
mov
pop
dec
and
or
clc
out
or
dec
cwtl
ficoml
sbb
push
add
fisttpl
mov
pop
je
adc
push
push
inc
je
add
mov
mov
inc
adc
or
add
mov
movsl
pop
lcall
push
and
pop
or
pop
or
inc
push
fsubr
test
jb
loop
xor
add
lret
cmp
repz
cmpsl
add
bound
jo
xchg
jg
es
xor
out
popa
lds
ja
add
jns
and
xor
push
pop
sbb
or
test
pop
mov
das
cwtl
and
popf
sbbl
fucom
inc
add
test
adc
mov
mov
arpl
xchg
das
out
and
add
sbb
pop
sbb
pop
add
and
addb
jb
inc
add
cmp
cmp
xlat
clc
pop
imul
ljmp
call
mov
mov
in
jl
xchg
cmc
dec
mov
fisubrl
daa
mov
imul
adc
mov
mov
scas
pop
jg
cmp
decb
lods
inc
add
jmp
in
adc
in
movb
pop
pop
mov
add
mov
xchg
mov
xor
cmp
pop
jne
ja
cmp
mov
mov
jge
pop
dec
mov
outsl
rolb
push
sbb
sub
loopne
add
adc
push
jge
xchg
jbe
add
dec
inc
add
insl
lret
mov
mov
cmpsl
xchg
xor
sahf
mov
push
mov
sub
jns
in
rolb
mov
or
add
sbb
mov
repnz
dec
lds
add
add
mov
dec
setne
add
das
popf
adc
and
and
roll
bound
in
sub
push
sbb
aam
cmpsb
cmc
jbe
in
pop
push
dec
sub
push
test
imul
adc
dec
sub
or
flds
nop
mov
add
add
mov
add
push
mov
or
adc
inc
add
outsb
or
imul
xor
lret
lcall
or
xor
imul
jg
rolb
lock
dec
push
das
test
ds
out
ljmp
xchg
pushf
jae
fdivs
aaa
testb
popf
aas
in
jp
and
sbb
xchg
cmp
repz
mov
xchg
and
ffree
add
pop
fbld
fcompl
and
jg
adcl
bound
iret
cmp
cmp
in
aas
sub
and
lcall
fsubrl
cltd
dec
dec
out
das
pop
test
repnz
cmp
std
nop
sub
popf
add
adc
jae
push
mov
outsl
je
jge
scas
les
in
push
pop
add
das
xor
mov
mov
addb
fldenv
enter
push
mov
push
xchg
jl
cld
mov
in
sti
mov
addb
ja
sbb
fistpll
cwtl
sarl
mov
add
shl
leave
decb
mov
and
icebp
lock
jns
push
test
rolb
dec
cmpsb
aaa
cli
cmpl
sbb
xchg
and
mov
lock
jmp
fldenv
mov
xor
xchg
jb
add
jae
sbb
cmc
mov
mov
fdivrs
push
stc
ljmp
test
push
cmp
icebp
mov
xchg
mov
add
je
pop
pop
cltd
ret
mov
jo
add
push
enter
or
iret
adc
or
xchg
sub
pop
aas
fcomi
push
test
xchg
mov
lahf
adc
pusha
add
movb
or
mov
and
movb
aam
pop
xchg
cmp
xor
inc
add
in
ficoml
jl
popa
mov
lahf
add
in
ja
mov
sahf
imul
adc
and
and
add
out
mov
xor
add
clc
lret
arpl
popa
mov
aam
addb
enter
nop
adc
arpl
inc
add
sub
inc
add
jb
jge
mov
xor
in
mov
add
movsl
imul
push
and
sbb
push
jo
sbb
xor
mov
add
add
psllw
push
mov
fildll
or
js
sbb
shrb
popa
test
add
aad
shr
and
add
fdivrp
icebp
push
std
dec
fisubrl
mov
adc
ficompl
mov
mov
sbb
lods
mov
and
stos
rol
add
add
loopne
scas
es
lods
mov
or
jbe
stos
mov
push
lret
dec
inc
add
sbb
ljmp
add
jbe
cmp
cmp
dec
mov
adc
pop
into
add
std
xchg
je
fcmovnu
jno
insb
dec
out
cmpsl
mov
push
add
sub
cmp
push
stc
adc
mov
sub
insl
daa
lock
aad
jno
cld
mov
mulb
add
add
sub
mov
clc
sbb
ss
loope
jecxz
xchg
daa
add
xor
mov
jmp
mov
imul
lahf
cmpsl
xor
pop
inc
add
mov
pop
stc
mov
xchg
pop
mov
dec
icebp
scas
outsb
push
xchg
xor
pop
cmp
lock
cmc
mov
popf
bound
dec
dec
cs
jne
jle
jge
mov
ljmp
mov
aaa
push
cwtl
fisubs
adc
mov
addr16
sbb
mov
in
xchg
sbb
mov
aad
cltd
jecxz
in
in
hlt
add
pop
out
imul
int
ss
ss
sub
nop
daa
mov
imul
sub
pop
xchg
repnz
mov
fcoml
insl
hlt
jo
cld
cmp
ljmp
sub
pop
xor
jge
sbb
mov
pop
mov
ds
pop
lret
adc
ss
add
stc
jns
xor
mov
out
jp
add
les
aas
inc
hlt
insl
es
aas
es
lahf
jp
mov
in
enter
aad
jnp
push
jecxz
push
into
jmp
mov
aam
jl
mov
jbe
pop
pop
and
fbld
rcr
xchg
js
and
scas
pop
xchg
jge
pushf
jmp
repz
push
es
add
popa
jle
xchg
rclb
pop
loopne
scas
loop
mov
add
rcrl
xchg
jle
fcmove
mov
jno
add
test
cmpsl
mov
rorl
mov
int
push
fsubs
lods
jo
pop
into
stos
adc
xchg
add
sub
dec
fisttpl
add
push
jnp
or
push
mov
add
outsb
xorl
add
xor
movsb
sti
mov
add
mov
push
or
push
test
out
std
movsl
ss
mov
jne
cmp
jge
icebp
cmp
mov
jle
ss
stc
adc
sahf
lahf
adc
lock
and
xlat
or
int3
and
mov
rol
jne
aam
lret
data16
stc
ret
out
pop
xchg
in
sbb
add
add
ss
jnp
cmp
popf
lahf
sbb
add
inc
add
sub
add
lds
mov
js
popa
add
nop
es
add
mov
add
fisttpll
incl
xchg
ret
test
add
jbe
mov
stc
nop
es
add
add
add
cmp
nop
es
add
add
aaa
dec
mov
stc
nop
es
add
movsl
mov
mov
nop
es
adc
hlt
add
adc
cmpw
nop
cld
nop
jmp
add
pop
add
mov
shr
add
add
add
push
mov
sbb
sbb
dec
add
sbb
add
test
add
stc
nop
es
adc
mov
nop
jmp
jbe
add
test
ja
in
push
stc
nop
es
add
imulb
push
stc
nop
es
popa
sbb
inc
add
sub
nop
jmp
add
add
shrb
mov
add
stc
nop
es
div
mov
stc
nop
es
add
add
mov
mov
jmp
lcall
add
push
stc
nop
es
jmp
add
inc
push
mov
xchg
ret
das
xchg
cmpsl
add
add
add
mov
xchg
ret
jp
das
add
add
nop
es
iret
or
add
add
adc
add
mov
nop
es
add
add
sub
adc
nop
es
int3
cmp
add
aaa
das
scas
push
push
mov
xchg
ret
xchg
hlt
fsubp
inc
add
divb
mov
xchg
ret
test
add
add
add
mov
es
add
scas
hlt
add
stc
nop
es
hlt
sub
and
mov
cld
nop
jmp
sub
cmp
decl
push
mov
xchg
ret
add
add
cmp
jb
add
add
stc
push
push
mov
xchg
ret
sub
sbbl
adc
cld
nop
jmp
add
lcall
adc
dec
outsl
popa
fs
cld
nop
jmp
ja
add
mov
push
mov
xchg
ret
add
fiadds
add
nop
jmp
subl
add
es
std
aaa
add
add
push
fsubl
xor
add
stc
nop
es
testb
xor
stc
nop
es
adc
add
mov
ret
push
mov
xchg
ret
hlt
add
test
cmp
cmp
add
stc
nop
es
push
test
popa
and
xor
stc
nop
es
add
jge
popa
sub
stc
nop
es
in
xor
add
add
nop
cld
nop
jmp
ja
add
je
jne
nop
cld
nop
jmp
daa
add
add
and
xor
test
nop
jmp
sub
sub
inc
arpl
nop
es
xchg
add
std
out
push
push
mov
xchg
ret
in
iret
mov
cmpsl
add
inc
mov
es
cmp
add
inc
push
add
stc
nop
es
sub
add
xor
mov
stc
nop
es
sub
add
add
mov
stc
nop
es
popa
add
add
lea
test
nop
es
int3
add
push
push
mov
xchg
ret
add
std
add
hlt
jp
decl
push
mov
xchg
ret
fisubs
sub
mov
incl
nop
cld
nop
jmp
dec
cmp
xchg
jecxz
push
mov
add
daa
pop
add
dec
and
inc
inc
add
and
add
push
xchg
inc
dec
add
stc
nop
es
add
add
bound
outsb
mov
stc
nop
es
add
jbe
add
mov
fsubrp
test
xor
inc
mov
add
cmp
nop
cld
nop
jmp
sub
popa
pop
add
add
add
shl
nop
cld
nop
jmp
das
fisubrs
mov
hlt
inc
cmp
add
nop
es
mov
add
stc
nop
es
add
jmp
push
nop
cld
nop
jmp
cltd
add
int3
mov
push
stc
nop
es
dec
dec
add
int3
test
add
jb
in
mov
sub
mov
push
mov
xchg
ret
add
jmp
out
out
clc
stc
nop
es
je
scas
iret
adc
mov
push
mov
xchg
ret
add
and
add
mov
xchg
ret
xchg
add
inc
hlt
and
push
xor
jo
add
nop
es
add
add
hlt
mov
sar
nop
es
mov
in
add
stc
nop
es
in
add
stos
mov
push
mov
xchg
ret
add
push
movsb
add
cs
stc
nop
es
add
add
test
fs
js
stc
nop
es
add
das
add
in
add
jp
movl
add
jmp
add
nop
es
add
add
mov
add
nop
cld
nop
jmp
add
add
jmp
nop
cld
nop
jmp
sub
add
std
push
pop
dec
nop
cld
nop
jmp
cmp
add
add
inc
xchg
mov
movzwl
stc
nop
es
movsb
fiadds
iret
jp
mov
stc
nop
es
add
xor
inc
add
push
mov
xchg
ret
or
cltd
cmp
xor
mov
xchg
ret
add
mov
stc
nop
es
adc
std
pop
add
iret
or
test
add
stc
nop
es
and
add
je
stc
nop
es
add
mov
dec
add
push
mov
xchg
ret
add
add
sub
nop
es
xchg
dec
mov
add
ljmp
es
aaa
mov
cmpsl
pusha
add
es
add
add
cltd
mov
and
mov
xchg
ret
add
test
add
add
mov
add
ja
sbb
add
add
add
scas
add
out
add
jb
sub
add
add
std
mov
push
stc
nop
es
add
mulb
add
mov
stc
nop
es
add
test
sub
jmp
add
xchg
ret
sub
mov
stc
nop
es
add
adc
mov
xchg
ret
lds
sub
lcall
nop
es
add
test
mov
pop
stc
nop
es
xchg
add
add
push
sub
sbb
inc
add
lcall
push
mov
xchg
ret
add
sub
mov
in
push
stc
nop
es
add
sub
and
push
add
stc
nop
es
add
add
shlb
push
mov
xchg
ret
jmp
test
sbb
nop
es
or
testb
and
int3
push
push
mov
xchg
ret
shl
add
lcall
cld
nop
jmp
scas
add
cmp
add
inc
add
bound
inc
add
add
pop
add
add
mov
add
jge
add
add
aas
div
stc
nop
es
sub
jp
pop
adc
cmc
mov
nop
es
shlb
loop
fmuls
fwait
jecxz
add
lds
add
push
stc
nop
es
add
add
inc
popa
add
sahf
movzwl
stc
nop
es
cltd
add
jmp
clc
dec
inc
stc
nop
es
sub
mov
imul
stc
nop
es
add
mov
and
decl
push
mov
xchg
ret
add
in
add
mov
or
pop
in
inc
add
std
add
sbb
mov
jmp
jb
hlt
loop
mov
lds
jmp
jb
add
inc
test
je
inc
add
push
stc
nop
es
pop
test
loopne
lcall
stc
nop
es
add
or
mov
xchg
ret
push
add
aam
mov
stc
nop
es
cmp
mov
pop
daa
lcall
nop
cld
nop
jmp
xchg
mov
je
stc
nop
es
xchg
add
xchg
sub
cmpb
sub
mov
add
adc
sub
inc
pop
hlt
add
cld
nop
jmp
inc
divb
addb
je
stc
nop
es
add
add
rep
stc
nop
es
add
add
add
add
mov
stc
nop
es
xchg
int3
and
add
nop
es
cmpsl
add
aaa
mov
leave
stc
nop
es
test
je
add
mov
mov
nop
cld
nop
jmp
mov
or
nop
es
add
mov
jbe
sub
add
stc
nop
es
and
mov
nop
es
cltd
add
add
dec
mov
nop
cld
nop
jmp
daa
add
jmp
mov
push
mov
xchg
ret
add
aaa
jge
add
nop
jmp
aaa
add
je
movsb
add
outsb
pusha
stc
nop
es
add
add
add
push
mov
xchg
ret
xor
mov
stc
nop
es
add
add
add
add
add
nop
cld
nop
jmp
scas
sub
sbb
dec
inc
stc
nop
es
add
aaa
add
add
loopne
stc
nop
es
popa
add
in
mov
dec
add
inc
add
add
add
lret
xor
stc
nop
es
add
rolb
cltd
cs
push
mov
xchg
ret
test
aaa
test
mov
push
mov
xchg
ret
add
add
mov
add
mov
stc
nop
es
add
jbe
add
jg
stc
nop
es
in
add
sbb
inc
add
nop
es
movsb
add
iret
std
pop
push
mov
xchg
ret
sub
add
add
add
popa
add
mov
xchg
ret
add
sbb
add
cld
nop
jmp
xchg
inc
jge
movsb
xchg
jp
mov
push
mov
xchg
ret
xchg
add
scas
mov
int3
mov
stc
nop
es
xchg
add
shrb
mov
nop
jmp
inc
sub
add
add
aaa
addb
pop
push
mov
xchg
ret
or
add
int3
sub
mov
nop
es
add
or
sub
push
push
mov
xchg
ret
inc
jbe
add
add
popf
push
push
mov
xchg
ret
xchg
xchg
sub
fidivs
mov
stc
nop
es
add
or
scas
dec
rep
stc
nop
es
sub
test
and
add
add
sbb
add
push
int
add
repz
incl
xchg
mov
loop
lds
pop
inc
add
add
mov
stc
nop
es
dec
sbb
loop
hlt
ss
push
stc
nop
es
cmpsl
add
add
add
add
add
stc
nop
es
add
add
add
sbb
jle
stc
nop
es
aaa
add
add
subl
aad
add
pop
add
das
sub
mov
sub
nop
es
xchg
sub
sub
ja
add
push
mov
xchg
ret
ja
cmp
add
adc
push
push
mov
xchg
ret
add
sub
add
iret
mov
nop
cld
nop
jmp
add
sub
ljmp
jb
xchg
je
ja
add
push
push
mov
xchg
ret
add
add
sub
mov
in
add
xchg
add
inc
mov
out
push
push
mov
xchg
ret
mov
add
ja
popf
push
nop
cld
nop
jmp
add
mov
add
cmp
cmpsl
cli
call
idiv
fiadds
daa
pop
cmp
mov
stc
nop
es
add
add
xchg
nop
cld
nop
jmp
mov
add
test
mov
stc
nop
es
test
das
mov
mov
stc
nop
es
lds
add
inc
stc
nop
es
jbe
test
xchg
fisttpl
sbb
inc
add
add
add
xor
add
nop
cld
nop
jmp
sub
add
xchg
es
hlt
add
add
imul
or
add
add
add
fisubrs
dec
nop
cld
nop
jmp
add
add
xchg
aaa
jbe
sub
xchg
ficoml
pop
in
inc
add
add
add
insb
insb
add
stc
nop
es
int3
int3
add
mov
or
xchg
ret
add
movsb
test
jmp
stc
nop
es
test
add
stc
nop
es
add
imulb
push
mov
xchg
ret
jmp
add
pop
lea
stc
nop
es
add
add
out
or
stc
nop
es
inc
add
sub
add
push
mov
xchg
ret
inc
jbe
xchg
sub
cmpsl
sarl
es
add
add
hlt
jbe
jmp
js
nop
es
sub
add
test
lret
stc
nop
es
sub
mov
jbe
xor
stc
nop
es
add
mov
pop
push
mov
xchg
ret
int3
add
je
movsb
sub
mov
stc
nop
es
mov
stc
nop
es
add
movsb
out
pop
stc
nop
es
xor
rolb
seto
jnp
inc
add
popa
add
add
add
pop
stc
nop
es
scas
add
add
push
stc
nop
es
int3
add
xchg
push
sub
pop
sub
stc
nop
es
lds
mov
stc
nop
es
std
jbe
add
into
sbb
add
nop
es
sub
add
je
stc
nop
es
add
adc
cmp
test
stc
nop
es
add
stos
push
stc
nop
es
add
ja
mov
in
pop
mov
add
enter
cmp
nop
cld
nop
jmp
add
sbb
mov
add
nop
es
lcall
daa
pop
push
xor
nop
es
idivb
sub
daa
mov
pop
mov
stc
nop
es
adc
add
mov
xchg
ret
in
and
ret
adc
stc
nop
es
add
add
cmp
nop
cld
nop
jmp
mov
add
jmp
test
sbb
add
nop
es
xor
push
sbb
jl
xor
nop
es
inc
and
mov
lahf
sub
stc
nop
es
add
xchg
lret
stc
nop
es
add
add
add
cmp
add
nop
cld
nop
jmp
and
add
xchg
pop
add
stc
nop
es
jmp
dec
sbb
loopne
add
push
stc
nop
es
add
add
cmp
loope
mov
nop
es
xchg
add
add
add
add
stc
nop
es
lds
cmp
mov
push
mov
xchg
ret
and
add
pop
jbe
add
nop
es
add
add
add
add
stc
nop
es
adc
cmp
cld
nop
jmp
test
jp
add
add
jb
mov
loop
inc
mov
stc
nop
es
cltd
add
inc
add
sub
pushl
push
mov
xchg
ret
add
add
or
nop
es
mov
test
jbe
outsb
mov
nop
cld
nop
jmp
jbe
add
jo
mov
stc
nop
es
xchg
mov
and
int3
call
stc
nop
es
cmp
aaa
jp
xchg
jae
not
nop
cld
nop
jmp
add
mov
daa
add
cmp
push
lock
add
jbe
shlb
nop
jmp
movsb
add
test
int3
sub
add
add
stc
nop
es
xchg
add
loop
add
sub
popa
add
mov
xchg
ret
add
rep
nop
cld
nop
jmp
test
add
mov
add
add
call
stc
nop
es
mov
std
std
cmc
pop
inc
loope
add
push
mov
xchg
ret
add
pop
stc
nop
es
add
das
xchg
add
add
cwtl
mov
stc
nop
es
add
lcall
popa
add
mov
xchg
ret
test
mov
mov
add
nop
cld
nop
jmp
sub
add
mov
stc
nop
es
rolb
add
mov
stc
nop
es
iret
add
test
pop
add
stc
nop
es
add
repz
mov
xchg
ret
add
xor
jb
add
add
push
push
je
rolb
add
stc
nop
es
add
add
iret
add
sti
stc
nop
es
test
add
sub
add
and
stc
nop
es
add
mov
inc
mov
stc
nop
es
hlt
add
add
mov
push
mov
xchg
ret
add
mov
add
jbe
stc
nop
es
pop
mov
mov
add
push
mov
add
add
jecxz
scas
movsl
or
imul
loopne
mov
xchg
ret
rolb
jge
push
mov
stc
nop
es
mov
add
popl
stc
nop
es
inc
add
add
add
xor
stc
nop
es
xchg
add
jne
stc
nop
es
xor
push
in
add
nop
cld
nop
jmp
add
sub
add
sub
fsubr
add
add
stc
nop
es
scas
add
add
inc
test
xor
nop
cld
nop
jmp
add
add
sub
cmp
add
stc
nop
es
add
test
lds
movsb
data16
addb
push
xchg
jns
push
mov
xchg
ret
add
addl
add
mov
stc
nop
es
add
xchg
or
add
nop
es
mov
sub
push
mov
xchg
ret
xor
mov
and
push
mov
xchg
ret
add
add
and
sbb
test
stc
nop
es
add
lcall
add
stc
nop
es
jmp
insb
inc
jb
stc
nop
es
int3
cltd
das
add
sub
jg
stc
nop
es
mov
and
cwtl
add
add
or
add
xchg
lret
xor
stc
nop
es
add
add
add
xor
cld
nop
jmp
add
hlt
add
lret
add
adc
add
hlt
sub
aam
jl
ret
add
nop
es
add
add
mov
nop
cld
nop
jmp
add
add
add
add
cld
or
jmp
add
daa
add
xor
nop
cld
nop
jmp
inc
sub
je
stc
nop
es
loop
push
and
icebp
mov
push
stc
nop
es
add
pop
mov
nop
es
add
adc
add
add
nop
jmp
lcall
cmp
dec
push
stc
nop
es
add
xchg
pop
lds
rolb
nop
es
sub
and
mov
add
cld
nop
jmp
add
add
dec
add
add
add
nop
es
fiadds
add
add
movsb
add
mov
nop
cld
nop
jmp
add
movsb
fistpl
nop
es
pop
das
jbe
add
rolb
add
stc
nop
es
lds
cmp
popa
xchg
movsb
dec
push
push
mov
xchg
ret
add
sub
ja
cmp
add
push
push
mov
xchg
ret
add
sbb
add
fdivrp
nop
es
add
movsb
mov
cmp
push
mov
xchg
ret
das
mov
enter
es
add
add
add
pop
push
mov
xchg
ret
or
lds
add
dec
mov
stc
nop
es
add
int3
ja
add
or
add
lock
incl
sub
mov
adc
or
add
nop
es
hlt
aaa
add
loope
add
test
xchg
hlt
jl
nop
cld
nop
jmp
jp
xor
add
das
test
nop
cld
nop
jmp
mov
add
add
stc
nop
es
add
add
add
mov
xchg
ret
mov
loopne
ja
mov
jb
mov
add
pop
shll
cld
nop
jmp
cltd
add
add
call
out
incl
add
add
add
push
push
mov
xchg
ret
add
push
mov
mov
xchg
ret
add
sub
add
add
mov
nop
cld
nop
jmp
or
add
icebp
mov
push
push
mov
xchg
ret
add
mov
ja
popa
pushf
pusha
stc
nop
es
jbe
sub
popf
add
stc
nop
es
cmp
add
mov
jmp
cmpb
add
adc
int3
add
int3
std
stc
nop
es
cmpsl
sub
push
push
add
nop
cld
nop
jmp
daa
add
std
add
pop
test
out
test
es
popa
cmp
jg
clc
stc
nop
es
faddp
add
add
stc
nop
es
adc
push
stc
nop
es
fiadds
add
je
add
push
mov
add
add
mov
cs
add
test
dec
add
mov
xchg
ret
add
add
pop
call
call
add
sub
es
add
add
iret
add
add
test
icebp
stc
nop
es
add
jmp
nop
es
xor
add
xor
add
stc
nop
es
mov
add
call
stc
nop
es
mov
mov
stc
nop
es
add
add
stc
nop
es
add
add
add
dec
add
nop
es
std
or
sub
xchg
es
fistpl
mov
xchg
ret
add
out
mov
stc
nop
es
and
add
mov
in
mov
stc
nop
es
sub
sub
adc
nop
es
add
rcrb
call
call
or
xchg
jge
mov
stc
nop
es
add
cmp
test
dec
mov
stc
nop
es
add
mov
stc
nop
es
sub
add
add
add
ror
push
mov
xchg
ret
add
test
loopne
add
nop
es
add
test
mov
out
call
cli
jp
hlt
add
add
push
adc
add
add
movsl
add
out
cwtl
add
stc
nop
es
iret
add
add
lds
xor
ret
stc
nop
es
mov
add
add
test
pop
nop
cld
nop
jmp
or
xchg
add
test
in
add
nop
es
cmpsl
ja
add
sub
xchg
in
mov
stc
nop
es
add
pop
dec
je
jae
mov
stc
nop
es
jmp
popa
add
pop
sub
push
mov
xchg
ret
add
add
sub
mov
push
mov
xchg
ret
pop
test
daa
mov
jb
nop
es
add
ja
jg
add
stc
nop
es
sub
mov
test
test
pop
xor
push
mov
xchg
ret
scas
cmp
je
sbb
mov
nop
es
add
mov
nop
es
add
add
out
orl
stc
nop
es
add
add
jb
jmp
add
add
nop
es
add
test
sub
stc
pushl
push
mov
xchg
ret
test
mov
cmp
mov
stc
nop
es
add
pusha
add
pause
cld
nop
jmp
xchg
add
add
add
es
add
add
daa
add
mov
xchg
ret
jp
add
iret
add
sbb
es
jmp
fimuls
jg
stc
nop
es
aaa
add
mov
mov
mov
stc
nop
es
add
add
sub
dec
cmp
nop
es
xchg
add
add
int3
xor
pop
stc
nop
es
xchg
add
add
popa
stc
nop
es
add
add
mov
jb
add
add
cmpl
cld
nop
jmp
add
std
test
xor
popa
push
int
push
mov
xchg
ret
add
add
mov
stc
nop
es
je
add
add
push
stc
nop
es
jmp
lds
add
insl
pusha
stc
nop
es
add
std
xchg
or
add
push
mov
xchg
ret
sbb
inc
add
add
dec
or
add
mov
jmp
loop
nop
cld
nop
jmp
mov
add
adc
mov
stc
nop
es
test
push
stc
nop
es
dec
jbe
add
add
mov
insl
jmp
stc
nop
es
int3
inc
sub
mov
nop
es
add
sub
add
mov
xchg
ret
jmp
add
mov
xchg
ret
add
test
ja
add
adc
inc
add
add
jge
mov
cmp
fs
nop
es
cmp
out
mov
jb
loop
movsb
test
add
add
push
mov
xchg
ret
add
add
add
add
stc
nop
es
cltd
add
add
test
pop
adc
mov
push
mov
xchg
ret
mov
add
add
or
idiv
decl
sbbl
shrb
nop
es
add
inc
add
add
stc
nop
es
aaa
jbe
inc
loop
xor
rep
push
mov
xchg
ret
add
add
pop
add
pop
mov
inc
add
sub
inc
ja
push
stos
popa
stc
nop
es
iret
add
adc
sub
mov
es
testb
sbb
cmpsl
add
xchg
pop
mov
stc
nop
es
aaa
mov
add
aam
inc
add
lds
add
xor
sbb
es
add
push
and
test
popa
add
nop
es
mov
add
sahf
push
stc
nop
es
das
add
lds
add
push
push
stc
nop
es
add
add
xchg
add
add
cld
nop
jmp
mov
add
sub
iret
call
stc
nop
es
add
push
test
jne
nop
cld
nop
jmp
mov
add
nop
es
in
add
add
je,pn
stc
nop
es
add
daa
enter
es
add
ja
int3
add
cli
mov
stc
nop
es
add
int
inc
add
cmpsl
je
mov
add
stc
nop
es
add
add
call
stc
nop
es
hlt
cmp
nop
es
xor
add
cmpsl
pop
add
test
dec
push
nop
cld
nop
jmp
sub
sub
sbb
cmp
mov
xchg
ret
sub
testb
sub
nop
jmp
add
hlt
test
lods
movzwl
stc
nop
es
xchg
mov
jmp
jbe
stc
nop
es
jge
xchg
sarb
es
xor
add
imul
sbbb
jmp
adc
sub
nop
cld
nop
jmp
and
add
mov
sub
push
mov
xchg
ret
jp
add
add
and
int
mov
nop
cld
nop
jmp
cmpsl
add
mov
xor
call
sti
incl
add
add
popf
je
stc
nop
es
inc
cmp
xor
nop
cld
nop
jmp
mov
xchg
push
pop
mov
stc
nop
es
movsb
lcall
out
and
nop
cld
nop
jmp
sub
add
add
mov
es
lcall
jne
push
mov
xchg
ret
mov
add
popa
insb
mov
stc
nop
es
push
test
popa
add
nop
cld
nop
jmp
add
outsl
and
stc
nop
es
cmpsl
xor
test
outsb
test
nop
cld
nop
jmp
jmp
jp
add
jmp
push
mov
xchg
ret
iret
add
imulb
sar
nop
es
adc
fiadds
add
push
pushf
jne
stc
nop
es
add
mov
xchg
ret
add
add
add
nop
es
aaa
add
add
add
stc
nop
es
movsb
push
add
inc
pop
xor
inc
sbb
nop
es
add
add
jbe
mov
stc
nop
es
sbb
cmp
stc
nop
es
add
add
nop
es
add
cmpl
nop
es
add
cmp
adc
xchg
nop
cld
nop
jmp
add
add
cmp
ret
stc
nop
es
add
pop
add
sub
jg
nop
cld
nop
jmp
ja
add
jbe
mov
lods
je
stc
nop
es
add
cmc
pop
int3
lods
push
mov
xchg
ret
jp
sub
add
call
stc
nop
es
xchg
cmp
stc
nop
es
add
daa
jge
add
sbb
cld
nop
jmp
add
add
stc
nop
es
daa
sbb
mov
cmp
inc
lcall
jb
add
mov
lcall
jb
sub
add
pop
push
mov
xchg
ret
sub
add
loop
nop
cld
nop
jmp
add
add
mov
stc
nop
es
sub
add
inc
rcrl
cld
nop
jmp
sub
add
add
add
mov
mov
xchg
ret
sub
lcall
es
add
sub
add
sbb
add
nop
es
sub
add
movsb
push
mov
xchg
ret
add
add
je
inc
add
shr
stc
nop
es
add
cmp
addb
jb
stc
nop
es
add
add
call
in
ljmp
lcall
int
pop
jae
cld
nop
jmp
mov
mov
js
stc
nop
es
add
add
add
mov
jb
add
add
add
daa
pushf
rep
push
mov
xchg
ret
add
imul
cmp
nop
es
test
es
add
mov
add
nop
cld
nop
jmp
add
add
mov
push
mov
xchg
ret
xchg
jge
or
nop
cld
nop
jmp
add
sub
sub
nop
es
test
add
add
mov
cs
stc
nop
es
and
add
repz
stc
nop
es
mov
add
and
push
mov
xchg
ret
scas
add
push
adc
mov
repz
nop
es
adc
xchg
insl
xor
stc
nop
es
mov
popa
mov
rclb
repz
add
add
add
lea
stc
nop
es
aaa
add
leave
sub
add
add
in
cltd
loop
add
xor
stc
nop
es
add
test
lds
add
stc
nop
es
mov
mov
stc
nop
es
loop
xchg
add
mov
stc
nop
es
test
add
lea
stc
nop
es
and
shlb
cld
nop
jmp
cmp
add
add
cmpsl
scas
pop
stc
nop
es
add
add
shl
stc
nop
es
add
aam
mov
stc
nop
es
mov
mov
jmp
stc
nop
es
add
add
es
add
movsb
add
jne
stc
nop
es
xchg
mov
nop
lea
cld
nop
jmp
add
cmpsl
add
add
rclb
ljmp
test
add
inc
add
add
lea
nop
cld
nop
jmp
add
add
add
mov
xchg
ret
pop
add
lcall
mov
push
mov
xchg
ret
add
add
iret
add
es
stc
nop
es
add
enter
jb
iret
add
add
add
add
stc
nop
es
add
sub
jb
or
add
nop
es
sub
pop
dec
pop
push
mov
xchg
ret
das
add
mov
mov
stc
nop
es
add
stc
nop
es
mov
add
add
call
stc
nop
es
add
add
rolb
xor
stc
nop
es
add
add
ret
stc
nop
es
add
sub
push
iret
jl
add
add
addb
jmp
leave
add
nop
cld
nop
jmp
add
add
add
ret
loop
sub
push
mov
xchg
ret
test
xchg
add
add
imul
stc
nop
es
add
nop
es
add
add
scas
jge
int3
mov
add
test
aaa
mov
lret
push
mov
xchg
ret
addl
das
push
cli
movzwl
stc
nop
es
add
add
add
test
jb
add
add
add
stc
nop
es
add
mov
sbb
nop
es
add
add
add
add
push
push
mov
xchg
ret
add
add
add
sahf
pop
push
mov
xchg
ret
add
bound
in
add
push
mov
xchg
ret
add
daa
add
inc
and
cld
nop
jmp
add
mov
xchg
add
rep
stc
nop
es
add
add
add
add
add
add
stc
nop
es
inc
int3
add
xchg
popa
dec
mov
stc
nop
es
add
cmpsl
inc
mov
inc
jp
nop
cld
nop
jmp
add
and
stc
nop
es
add
mov
lea
push
mov
xchg
ret
push
lds
add
clc
test
nop
cld
nop
jmp
add
add
mov
add
stc
nop
es
and
test
cmp
mov
std
inc
add
add
leave
push
nop
cld
nop
jmp
addl
jge
sub
and
push
mov
xchg
ret
add
add
fisubl
cld
nop
jmp
add
add
movsb
add
pop
call
stc
nop
es
je
hlt
scas
mov
es
add
sub
mov
sbb
add
nop
es
add
aas
cmpl
nop
cld
nop
jmp
movsb
addl
mov
add
stc
nop
es
pop
test
add
sub
push
mov
xchg
ret
add
add
add
jbe
nop
cld
nop
jmp
sub
add
dec
adc
nop
es
add
push
push
je
mov
stc
nop
es
scas
sub
fimuls
leave
dec
nop
cld
nop
jmp
cmpsl
ja
push
add
add
add
es
add
mov
cmpsl
add
mov
jmp
jge
adc
add
mov
stc
nop
es
add
mov
jmp
pop
xchg
int3
adc
add
shrb
xorb
in
ja
test
sub
dec
mov
add
push
mov
xchg
ret
add
push
mov
xchg
ret
mov
lcall
lret
stc
nop
es
inc
mov
sub
fidivrs
out
mov
push
mov
xchg
ret
add
cmp
leave
sti
stc
nop
es
add
cmp
stc
nop
es
sub
dec
add
push
icebp
nop
cld
nop
jmp
scas
add
lahf
inc
push
mov
xchg
ret
test
xchg
ja
add
mov
inc
icebp
inc
add
lds
mov
stc
nop
es
mov
in
stos
add
stc
nop
es
mov
nop
cld
nop
jmp
add
add
add
rolb
inc
add
mov
nop
cld
nop
jmp
xor
aaa
add
es
cmp
nop
es
hlt
pop
loop
add
inc
and
stc
nop
es
add
add
jge
lcall
stos
hlt
pushl
add
ljmp
loop
cmp
add
xor
add
stc
nop
es
add
cmp
xchg
aas
mov
push
mov
xchg
ret
mov
add
add
jle
add
fdivr
jmp
add
inc
jbe
movswl
stc
nop
es
test
add
cmp
mov
add
add
add
jae
xchg
loopne
imul
adc
lret
sbbl
mov
popa
fcoml
call
add
int
dec
outsl
pop
sahf
pushf
mov
sub
cmc
pop
add
out
dec
icebp
call
add
push
lods
push
add
mov
lcall
arpl
std
idivb
pop
adc
sti
popa
out
add
mov
vmaskmovdqu
add
paddq
mov
add
jl
sub
mov
in
leave
les
sbb
lds
add
je
sub
icebp
movsb
scas
mov
in
scas
xor
cwtl
mov
testl
rorb
fsts
mov
in
leave
pop
lods
test
jge
add
xchg
mov
adc
shrl
sbb
popa
mov
out
inc
repnz
xchg
fwait
ret
jg
mov
add
addb
adc
dec
lods
mov
adc
sahf
repnz
mov
add
mov
xor
out
popf
sbb
rorl
and
add
aaa
std
stos
mov
and
jns
lcall
push
xchg
addb
out
sub
je
shll
jle
sub
vsqrtss
movsl
add
sub
addb
shr
push
scas
lock
push
or
add
mov
jae
sub
push
cltd
jno
lds
add
or
cwtl
fs
insb
mov
mov
movb
mov
iret
mov
pop
mov
cli
jmp
xchg
pop
lret
add
push
icebp
push
and
je
out
and
js
pop
dec
dec
push
cmpsb
inc
lock
inc
add
bound
cmpsl
icebp
inc
add
es
js
ficomps
mov
mov
sbb
add
ret
xor
and
push
fidivrl
or
jl
sbb
inc
add
imul
test
push
add
pusha
add
or
in
add
fnsave
mov
dec
pop
movb
mov
sarb
add
add
add
arpl
add
adc
je
in
fs
cmp
push
pop
lods
paddb
in
pop
push
push
jo
mov
inc
add
test
pushf
push
negb
cmc
jne
add
dec
or
push
add
les
rolb
cmpsb
dec
iret
push
adc
jmp
xchg
pushf
repz
fs
push
add
pop
fwait
les
jle
negb
sub
xchg
xchg
loope
add
rolb
dec
xchg
mov
xchg
push
mov
insb
jns
inc
mov
add
les
mov
inc
addb
subl
add
add
fwait
jecxz
out
bound
lea
insl
lret
add
hlt
outsb
dec
cmpsl
xchg
addb
in
aad
dec
mov
icebp
adc
sub
mov
adc
push
mov
imul
movb
xchg
mov
mov
test
mov
or
pop
jns
dec
sub
fisttps
push
cs
pop
jnp
xchg
add
pop
pop
pop
sbb
jg
sbb
movsb
imul
mov
clc
jle
or
les
inc
add
xchg
jecxz
add
add
test
jge
movsb
out
enter
pop
int
dec
mov
jp
lret
movsb
dec
scas
inc
add
or
js
pusha
add
insb
pop
pop
pop
dec
pop
stc
mov
cmpsl
add
aam
add
test
outsb
dec
sti
test
js
fs
and
adc
outsl
mov
cli
jle
xchg
push
rol
mov
add
xsha256
cmpsb
adc
ret
in
arpl
inc
mov
mov
sti
push
and
mov
icebp
pop
xchg
xor
repz
mov
movsl
insb
popa
cli
stos
fnsave
cmc
pop
dec
movb
add
mov
lret
xor
rolb
lcall
test
xchg
clc
sub
dec
rolb
cmc
cmp
pop
jbe
or
dec
and
repnz
pop
add
sub
add
inc
add
or
add
jg
into
outsb
sti
loope
xchg
xlat
sub
add
cmp
mov
aaa
inc
add
rolb
pusha
add
movsb
mov
pop
and
pop
pusha
add
mov
add
xchg
shl
xchg
sbb
and
fs
mov
mov
push
stos
test
in
scas
hlt
mov
clc
dec
ret
lahf
ret
cwtl
addb
imul
or
push
dec
pop
adc
lret
out
add
cmpsb
cmp
jo
jl
sub
add
add
lock
test
sub
aaa
push
mov
mov
insb
rcr
sbbl
push
sbb
in
push
inc
ss
or
sub
fwait
aam
and
jns
imul
mov
adc
mov
cmp
outsl
lahf
lret
in
in
push
arpl
add
scas
leave
sbbl
js
rolb
mov
jae
fsubrs
cltd
dec
loope
enter
and
cld
cltd
sbb
jecxz
movsb
push
out
and
jno
add
cmp
cmp
xor
xor
stc
daa
cmovge
in
jp
enter
add
jle
or
mov
push
mov
pop
push
fistps
add
repnz
js
mov
or
mov
adc
fs
test
enter
aad
ljmp
or
inc
add
and
sbb
daa
in
into
out
loopne
lahf
sarb
movsl
mov
pop
push
rcr
test
loope
inc
sbb
sub
ret
xor
aam
rol
add
and
test
imul
pop
push
mov
add
pop
movsb
lahf
cmp
mov
sbb
out
into
rolb
push
insl
imul
and
adc
loop
je
pop
aam
adc
xchg
aad
xchg
sub
mov
loope
xor
inc
add
stc
gs
mov
mov
sub
add
cmc
push
push
and
pop
sbb
mov
addb
out
dec
push
pop
pop
loopne
addb
lret
xlat
les
mov
out
das
daa
add
add
and
sub
test
ljmp
fwait
negb
ds
and
push
cmp
iret
sahf
jb
cmc
into
add
mov
lahf
stos
popa
lods
das
xchg
xchg
push
sti
xchg
cld
push
add
mov
test
iret
inc
add
out
push
pop
ds
jmp
scas
popl
bound
fdivl
add
iret
mov
aad
mov
pop
push
mov
dec
in
das
mov
lds
shrl
cmp
dec
push
andl
loope
roll
dec
and
mov
insl
push
add
mov
or
jnp
mov
iret
pop
sbb
adc
add
fsubl
add
cwtl
inc
cmp
sbb
or
scas
sub
rolb
arpl
out
imul
shll
repz
pushf
rolb
add
inc
cmp
push
lods
fstpt
outsb
inc
add
mov
adc
iret
hlt
enter
cmp
adc
dec
sub
sbb
sbb
test
roll
jg
sbb
xchg
sub
dec
test
mov
add
sub
adc
add
inc
add
mov
or
push
and
or
stc
loope
push
pop
jnp
jne
dec
je
inc
dec
cmpsb
aam
or
add
movsb
es
jne
jl
jns
add
insb
sub
push
jl
mov
add
or
hlt
lea
add
aad
call
scas
xor
aad
sar
inc
xchg
popf
jg
sub
stc
dec
mov
loop
dec
cmc
xchg
ror
imul
js
rcll
dec
scas
fisttpl
sbb
lds
add
and
sti
loopne
pop
and
sbb
lret
add
lods
leave
fiaddl
bound
hlt
mov
je
movsl
int
fwait
xchg
or
add
cmp
shl
lds
add
jecxz
inc
add
cli
scas
gs
inc
cmpsb
insb
mov
mov
cmp
es
and
push
int3
adc
sub
cmp
mov
add
cmpsb
out
adc
add
pop
cltd
ljmp
clc
xor
add
pop
ds
cmp
je
loop
dec
mov
or
xlat
and
mov
shll
jl
ljmp
js
imul
insl
xchg
enter
mov
pop
pop
cmpsb
mov
jno
add
movsb
stos
cmp
add
sbb
rolb
add
ss
jae
fnsave
push
sbb
push
movsb
mov
xor
iret
or
jb
push
adc
and
imul
add
pop
push
add
mov
in
cltd
cltd
push
add
mov
repnz
aam
mov
mov
or
add
dec
out
add
stc
pop
or
add
fprem1
ret
add
mov
aam
inc
add
leave
sub
jle
xor
rcl
pop
leave
ljmp
imul
push
sti
xlat
xor
mov
add
fwait
imul
add
xchg
add
mov
mov
jmp
and
jge
jo
pop
int3
les
pop
rcl
add
popa
xchg
jno
mov
bnd
dec
push
sub
xchg
or
nop
sarl
cmp
mov
add
adc
add
jg
add
pop
leave
cli
movsl
jle
cltd
jns
jbe
stc
leave
jno
in
je
into
sbb
add
cmpsl
cwtl
iret
pop
popa
mov
call
add
addb
inc
add
test
mov
mov
dec
mov
inc
add
mov
add
loope
mov
clc
cmp
mov
push
out
push
dec
cmp
add
mov
inc
add
icebp
ret
jbe
fiaddl
xchg
sbb
repnz
and
cmpsl
and
dec
pushl
dec
add
jae
and
mov
add
mov
dec
fwait
sub
and
fnsave
sub
loope
add
ss
pop
xchg
js
dec
test
out
adc
pop
jae
js
xchg
or
call
sbb
add
mov
push
mov
std
idiv
scas
cmpsb
std
pop
mov
scas
jle
sti
pushf
inc
add
cmpsb
jge
adc
je
add
jp
jno
jne
jecxz
repnz
sub
cmp
jno
int3
jg
or
out
sahf
out
popf
pop
mov
xchg
pop
shl
movsl
cs
test
je
iret
clc
in
cmp
fisubs
add
scas
xchg
add
jp
jg
push
test
add
add
shll
mov
add
sub
xchg
ret
push
testl
addb
clc
dec
lds
inc
add
push
push
xor
add
add
aaa
mov
add
add
scas
cld
jge
mov
mov
mov
or
dec
xchg
jg
lcall
cmpsw
jge
sbb
fcomip
mov
ja
sbb
add
mov
add
sub
ret
or
mov
mov
je
into
gs
inc
add
cmp
dec
pushf
and
stos
inc
add
aam
out
test
in
leave
aam
mov
push
xor
fcomps
add
jae
inc
add
cmp
jp
cmp
mov
movaps
mov
out
push
int3
inc
mov
cmp
cld
adc
pop
movsl
clc
fwait
dec
fcoml
xchg
xor
inc
add
jle
jecxz
adc
push
leave
jle
sbb
pop
cmpsb
scas
mov
add
mov
stos
mov
mov
sti
xor
mov
mov
xchg
sbb
mul
inc
int
js
inc
add
icebp
jb
negl
lods
daa
sbb
inc
add
imul
mov
aad
xor
xchg
adc
loop
cltd
jecxz
jg
aam
jecxz
mov
inc
inc
or
in
popa
mov
ljmp
pop
mov
add
mov
add
aam
jle
mov
pop
lds
out
add
mov
cmc
inc
add
add
fmull
adcl
add
outsb
lret
mov
hlt
in
lret
dec
negl
xchg
sub
mov
gs
and
jge
add
fcomps
xor
or
loop
sub
dec
adc
addb
out
mov
push
sub
fdivrl
enter
addb
push
lods
mov
mov
jge
add
add
mov
in
adc
mov
pop
sbb
push
ret
add
int
mov
jnp
lds
mov
dec
rolb
jle
adc
add
pushl
dec
cmpsb
lock
pop
neg
jge
cmp
popf
xchg
xlat
jecxz
pop
popa
bound
mov
popf
aam
cld
xor
jle
aam
lock
aas
arpl
add
mov
jmp
int
scas
addb
mov
jl
cmp
sahf
scas
je
add
dec
xchg
jp
and
rcr
addb
add
sub
addb
push
mov
add
stos
test
sub
out
mov
mov
cmp
aam
cmpsb
xchg
out
and
add
or
cmp
mov
loope
pushf
mov
xchg
cmp
test
int3
sbb
insl
addb
add
add
inc
cmp
ljmp
scas
std
mov
xlat
je
insl
repnz
xor
in
or
mov
inc
add
xor
dec
mov
and
inc
jae
dec
push
add
call
pop
mov
pop
dec
lret
test
mov
int3
test
cmc
xchg
jns
repnz
loope
mov
jb
call
add
and
insb
sub
or
vpextrw
lds
add
jg
mov
adc
mov
and
push
sub
pop
shlb
incb
out
sub
jle
sbb
pop
sbb
jmp
push
mov
mov
adc
sbb
lret
jne
imul
sub
stc
or
addb
sub
out
pop
xchg
sbb
jge
mov
call
mov
add
pusha
add
adc
daa
sub
aad
outsl
loopne
push
cmpsl
pushf
xor
lods
jbe,pt
add
cmp
push
cmp
jle
xchg
int3
or
bound
sbb
and
mov
outsb
out
lods
loop
pushf
cltd
lcall
ds
rolb
jns
adc
pop
outsb
add
jne
xor
adc
mov
andl
add
adc
push
andl
sbb
dec
add
add
push
jno
stos
sahf
pop
lock
cmp
sbb
mov
dec
or
movsl
adc
push
add
rolb
outsb
jecxz
rcr
pushf
jle
add
sub
ret
adc
ficompl
xchg
loopne
shrl
iret
dec
sarl
xor
test
aam
loopne
addl
ljmp
mov
jge
rolb
fidivrs
bound
or
sub
xor
xor
push
rolb
mov
scas
loop
daa
mov
sub
pop
fcomip
adc
and
push
sbb
jae
push
adc
dec
nop
dec
pop
adc
movl
cmp
sbb
lcall
jb
icebp
les
scas
pushf
push
push
and
push
xchg
jle
mov
pop
push
dec
rorl
xchg
mov
mov
pop
out
mov
cmp
add
leave
shll
adc
push
stos
les
add
in
into
push
mov
add
fadds
fs
jns
cmc
adc
cmp
mov
mov
ret
pop
cmp
and
xchg
mov
xor
mov
add
das
test
jo
add
test
enter
add
aas
push
fimull
sahf
push
sub
clc
shll
pusha
add
lds
lock
sub
scas
adc
daa
int3
jmp
xor
and
and
fistpl
add
call
insb
imul
xor
push
inc
add
pushf
add
vunpckhps
add
inc
aas
jb
fwait
daa
mov
jbe
inc
ljmp
mov
outsl
lods
pop
jg
add
xor
orl
repz
sub
add
add
nop
mov
push
out
scas
pop
and
pop
pop
xchg
lock
add
or
add
jns
bound
dec
ja
cltd
rolb
push
dec
inc
dec
xchg
inc
or
ja
test
mov
cltd
imul
testl
mov
add
add
mov
mov
sbb
add
sbb
xchg
jo
clc
sub
fcoms
xor
in
inc
add
add
mov
lret
sbb
or
jp
cmpsb
faddp
add
xchg
int
lcall
cmc
push
add
es
mov
add
mov
xchg
outsl
out
push
add
subl
pop
in
xlat
test
repnz
lret
push
add
enter
pushfw
hlt
lcall
enter
addb
xor
insb
jnp
mov
mov
xchg
ljmp
add
add
icebp
adc
adc
adc
dec
jmp
loope
xchg
pop
mov
xchg
aaa
icebp
jg
and
lods
mov
imul
mov
lcall
add
adc
or
lcall
and
mov
loopne
push
ss
adc
enter
jp
into
sub
rep
jne
xorl
or
or
decl
dec
lret
mov
xor
xchg
enter
mov
mull
cmpsb
stos
or
imul
or
sbb
sub
pop
mov
xchg
dec
dec
jbe
pop
xor
lods
int
inc
add
incb
xchg
push
inc
add
jo
mov
inc
add
jae
popf
pusha
add
xor
xchg
stc
sbb
pop
lcall
out
rcr
cmp
scas
push
movsl
jns
int
add
repz
dec
push
adc
out
jno
cmp
cs
push
jp
add
rclb
xchg
add
lret
or
push
mov
mov
xchg
mov
lea
inc
add
cmp
push
mov
xor
push
scas
and
pop
loopne
mov
xchg
mov
add
sbb
shll
inc
add
inc
out
fisubrs
pop
popf
dec
fucom
mov
inc
add
bound
cmp
pop
xchg
sbb
inc
sbb
xchg
mov
cmc
lds
lret
add
mov
sub
mov
mov
push
mov
mov
cs
sub
pop
movsl
into
or
in
or
sub
lds
mov
mov
xor
add
adc
add
pop
lods
pop
mov
xchg
add
test
xchg
jns
sbb
sahf
clc
mov
add
dec
mov
in
dec
dec
movsb
lahf
mov
add
bound
movsb
fwait
lods
shl
fstl
inc
ja
sarl
mov
push
clc
sti
sti
aas
enter
jns
leave
cwtl
xchg
mov
inc
add
arpl
add
movb
jno
lock
jnp
xor
mov
inc
test
mov
and
pusha
add
dec
lret
add
push
cmp
mov
cmp
sbb
loopne
addb
cld
xchg
mov
pop
imul
sub
ljmp
sub
les
jo
sbbl
in
jb
lret
push
popf
dec
daa
push
pop
scas
cmp
outsl
dec
xor
dec
sub
fidivrs
sbb
fisubs
imul
fld
in
mov
test
ljmp
js
mov
fdivrl
sahf
cmc
adc
add
add
stos
jecxz
and
dec
or
cmpsb
outsl
cmp
fiaddl
or
aas
dec
mov
pop
dec
push
movsl
stos
cltd
mov
dec
add
inc
add
xchg
div
aas
mov
add
push
add
rol
add
or
pop
loopne
push
dec
daa
into
js
pop
add
pop
fwait
push
cwtl
sbb
lret
jecxz
mov
mov
xchg
sbb
fiaddl
add
push
imul
jnp
lods
cli
ljmp
mov
adc
popa
push
scas
xor
inc
subl
mov
xor
add
pop
jbe
fstpt
and
sub
fcoml
xchg
rcrl
lret
mov
cli
js
xlat
xchg
xor
jbe
and
xchg
ds
scas
add
data16
xor
or
xor
imul
sub
fcoml
cmpsb
pop
mov
hlt
dec
aam
dec
gs
iret
jp
or
stos
mov
cld
inc
add
mov
shll
loopne
adc
shll
mov
nop
popf
ss
add
sbb
mov
cs
sub
lea
push
out
mov
aaa
rorl
scas
scas
out
adc
cmpsl
mull
push
lods
lds
inc
mov
addb
addr16
sbb
outsl
mov
lods
or
pop
lds
add
jno
cwtl
mov
mov
mov
mov
mov
scas
imull
bound
sbb
cmp
fisttpl
adc
out
add
sbb
lock
cmp
add
cmp
jno
sbb
mulb
shlb
add
mov
mov
adc
sub
pop
int
mov
jle
cltd
lahf
xchg
jo
adc
cld
mov
out
bound
pop
push
mov
test
pop
lret
cwtl
mulb
test
dec
pusha
add
xchg
inc
popa
stc
cs
ret
cmp
jmp
test
sbb
gs
repnz
xlat
sbb
dec
or
enter
pop
cli
pop
pop
ret
int3
ret
cmp
inc
add
add
dec
inc
sub
sarb
jmp
adc
or
popf
jle
mov
dec
inc
xchg
push
cmpsl
sub
inc
add
push
jp,pn
sub
xor
ss
jl
dec
pop
shl
sbb
imull
insb
add
sahf
pop
movl
mov
xchg
lods
arpl
movb
and
add
and
es
clc
loop
sbb
mov
imul
ds
les
jg
fdiv
and
lret
stc
mov
add
add
or
movsl
cmp
add
inc
add
mov
rolb
aas
jb
movsl
sbb
pop
fs
dec
out
inc
and
push
push
mov
add
xchg
xor
cmp
movb
add
in
cmpsl
je
lret
add
ja
mov
mov
popa
mov
dec
shrl
mov
pop
mov
leave
or
lods
stos
int3
ret
pusha
add
mov
in
data16
icebp
pop
in
fisttpl
mov
cmp
scas
nop
xor
fstpt
cmpl
mov
enter
and
or
jecxz
rcrl
xor
and
mov
dec
cmpsb
inc
add
jecxz
lods
mov
and
out
pop
scas
jg
imul
xchg
and
call
inc
add
pusha
add
cmp
xchg
push
rolb
leave
pushf
stos
xchg
std
cmp
jbe
std
movsb
lahf
lds
inc
add
leave
xchg
and
sti
pop
rolb
addb
xchg
cmp
or
inc
add
clc
jecxz
js
sub
pop
cmp
push
addb
mov
add
mov
cmp
add
and
lock
sub
add
ret
push
mov
add
sbb
hlt
iret
lock
pop
jecxz
xchg
into
xor
sub
in
add
pushl
mov
push
repz
lret
cmp
add
jnp
adc
inc
mov
add
and
jns
inc
add
ljmp
fadd
add
sbb
add
dec
mov
lods
pop
in
pop
mov
into
or
mov
cmc
divl
out
fs
sahf
adc
add
sti
movsb
cmp
addb
js
or
jmp
les
mov
mov
sbb
or
adc
add
add
adc
jge
pop
sbb
insl
pusha
add
add
sbb
pop
dec
sub
repz
adc
ret
scas
pusha
add
loop
add
lods
imul
jns
test
dec
imul
lods
sub
sar
mov
cmp
mov
inc
add
jbe
pop
mov
stc
fnstenv
inc
mov
int
insl
out
fs
out
cs
mov
dec
or
push
or
dec
test
add
add
mov
mull
add
mov
notb
push
xchg
push
mov
test
jecxz
lods
fwait
outsl
and
rorl
pop
mov
inc
popf
or
mov
aam
mov
mov
jecxz
cld
push
jmp
mov
inc
sbb
fdivs
cmp
and
add
add
or
add
repz
sbb
add
testb
lods
pop
pop
cmp
add
pop
or
mov
xor
aam
lcallw
add
and
add
push
lods
cmp
scas
ret
add
push
add
flds
add
sbb
cmp
sbb
xor
and
inc
testl
cmc
rcrb
hlt
xchg
test
mov
pop
push
je
movsl
or
and
push
add
mov
or
add
xchg
fdivr
mov
addb
add
data16
and
dec
int
dec
fstp
lock
pop
mov
add
addb
push
add
mov
pop
mov
sbb
fs
sub
mov
add
test
addb
imul
add
in
adc
cli
pop
dec
lcall
lret
addr16
int3
mov
mov
inc
add
push
cmp
std
mov
mov
inc
lret
adc
add
out
mov
inc
fiadds
mov
cmp
aaa
adc
in
frstor
fwait
addb
in
jne
mov
dec
sarl
add
int
mov
sub
rolb
lret
mov
add
mov
dec
int
jno
movsl
push
call
out
das
clc
mov
add
adc
jo
add
rcr
in
cmp
sar
xchg
jbe
jp
popa
in
mov
movsb
and
gs
nop
insb
divb
jecxz
mov
adc
mov
leave
movsb
jp
rorb
add
insl
std
out
push
shrb
pop
addr16
inc
add
lock
push
je
add
sbb
loopne
adc
lahf
addb
pop
mov
inc
add
add
aam
pop
adc
add
xchg
call
mov
jge
clc
movb
jl
frstor
lret
cmp
xor
clc
out
inc
ds
bound
sbb
in
jmp
push
jne
cli
lret
pop
out
in
xor
mov
pop
into
and
cld
jp
dec
mov
notb
ficoml
mov
imul
scas
dec
mov
push
cmp
js
iret
addb
cli
iret
mov
add
out
insl
mov
xchg
and
jle
adc
or
sbb
movb
add
sti
push
mov
mov
cld
jae
inc
outsl
add
lret
loop
jae
std
mov
push
mov
mov
add
jp
sub
jmp
repz
lcall
cmp
decb
sbb
and
push
xchg
fstps
nopl
jbe
push
addb
add
mov
add
add
shrl
mov
pop
adc
push
add
push
addb
add
in
add
jns
push
arpl
out
out
cmpsl
mov
pop
and
add
imul
dec
or
pop
lds
scas
cmp
push
mov
add
add
popf
sbb
and
mov
repz
mov
dec
clc
out
test
movsb
mov
pop
fs
and
mov
ret
add
rol
inc
add
ss
mov
mov
cmp
add
in
jns
push
add
add
jno
cmpl
push
je
sbb
push
jne
add
data16
dec
insl
add
pop
mov
out
bound
jns
mov
ret
dec
dec
cmpl
add
push
add
cmpsl
je
inc
add
addb
dec
cwtl
jno
and
or
xor
lahf
aaa
jge
test
iret
cmp
stos
xchg
sti
sub
pop
cltd
loop
fmuls
sub
fwait
cltd
mov
mov
ret
mov
addb
mov
inc
add
mov
cld
js
test
shll
hlt
shrb
push
jl
pop
jmp
jmp
sub
mov
cmpsb
or
push
or
loop
pop
and
cmpl
push
je
repz
mov
sarl
mov
sbb
hlt
jmp
jno
iret
sti
dec
shrb
jno
pop
test
push
cs
push
or
dec
pop
je
jp
call
mov
mov
movb
icebp
xchg
sub
push
cli
lods
mov
aas
lock
cmp
test
push
add
add
pop
fsubrl
mov
dec
xor
mov
std
push
pop
pop
dec
pop
int3
adc
test
inc
stos
test
popf
sub
add
stos
fs
imul
int
add
push
add
mov
sub
into
sub
add
ljmp
inc
sub
inc
add
dec
dec
arpl
push
mov
das
stc
push
pushf
xor
or
ret
or
inc
add
pop
add
lock
add
add
enter
inc
add
lds
aad
add
mov
ret
adc
or
xchg
xchg
xlat
mov
inc
repz
cmp
add
dec
enter
lcall
popa
jmp
and
mov
test
cli
std
popf
inc
cli
xor
push
or
movsl
jg
mov
iret
test
stos
dec
mov
push
les
js
shll
leave
xor
xchg
in
bound
cltd
mov
je
pop
mov
sti
xlat
mov
mov
cmp
lods
outsl
add
jb
mulps
cli
push
fbld
adc
and
iret
push
push
into
jo
dec
dec
ret
pop
dec
add
ret
and
pop
je
shl
ja
flds
fmuls
aas
pop
sbb
or
push
mov
jne
sbb
add
mov
cmpsl
xor
xchg
and
adc
scas
sub
aaa
mov
xchg
push
inc
add
mov
mov
add
mov
cmc
mov
lahf
or
test
cli
fmul
lahf
lods
fucomp
shrl
dec
pop
lds
outsb
jne
insb
out
jle
test
mov
mov
push
add
jns
pop
mov
add
lea
idiv
mov
pop
sbb
arpl
pop
inc
or
or
sub
sub
mov
add
daa
movb
negl
dec
ret
jo
mov
sbb
dec
cmpsl
add
mov
lcall
xor
in
mov
rolb
add
js
xlat
cli
adc
jecxz
fcom
cmp
add
add
jnp
out
jae
push
xor
leave
mov
int
cmp
sti
pop
add
fldt
popf
mov
and
jecxz
push
mov
pusha
add
dec
pusha
add
mov
mov
push
cmpsl
mov
dec
fisubl
pop
sbb
addb
jns
movb
add
dec
repnz
fs
mov
mov
lock
add
addb
and
jns
negl
fs
xchg
popf
pop
pushf
test
pop
bound
mov
add
jecxz
mov
rolb
outsb
shrl
movsl
mov
xor
shrb
push
adcl
bound
insb
adc
pavgw
or
xchg
bnd
sbb
add
or
push
mov
mov
jns
call
push
lret
out
and
xlat
insl
popa
leave
cmpsl
cld
addb
xchg
adc
movsb
push
cwtl
pushf
inc
add
mov
add
andl
xor
notb
mov
fnsave
mov
pop
lcall
fisttpl
inc
add
add
dec
addb
push
or
add
jbe
adc
adc
dec
nop
out
push
test
sarl
jle
fbstp
dec
pop
aaa
xlat
sub
inc
add
add
mov
repnz
dec
js
jne
jb
cli
mov
inc
push
pop
xor
push
adc
imul
add
and
aaa
jnp
mov
jge
add
fcmovnb
daa
scas
addb
and
adcl
loope
addb
stos
mov
fst
inc
push
pop
inc
pop
jmp
insb
mov
adc
gs
inc
testl
pop
outsl
fnstsw
pop
sub
lock
jbe
and
xor
ljmp
iret
test
dec
test
push
push
cli
push
in
xchg
jl
xchg
inc
subl
push
pop
mov
push
sbb
xchg
arpl
add
and
mov
sub
sbb
bound
cmp
js
std
jo
aad
dec
mov
int
cmpsb
pop
movb
sbb
addr16
and
pop
in
fcmovnbe
pushf
mov
popa
or
popf
int
mov
jnp
pop
lcall
pop
pop
dec
dec
push
push
add
scas
rcl
ffree
add
push
es
add
dec
cli
or
pushf
std
push
or
scas
aam
lcall
mov
iret
mov
mov
test
aad
pop
pop
mov
xchg
icebp
sbb
sbb
push
fbld
sub
loope
xchg
mov
mov
push
xchg
bnd
in
pop
pop
imul
dec
mov
add
jae
adc
mov
dec
fdivrl
iret
loope
jbe
stos
test
pop
inc
mov
or
sub
add
mov
pop
fidivs
daa
jns
sub
mov
nop
das
rolb
fs
sub
xchg
shlb
movsl
leave
jecxz
fidivl
sbb
incl
mov
stc
sbb
sbb
inc
add
inc
add
add
or
flds
mov
add
les
daa
xchg
jb
push
icebp
dec
js
jns
add
fcoms
imul
dec
lds
aad
js
adc
add
add
and
add
fst
movb
js
add
icebp
outsl
cmp
fdivr
pop
jb
mov
jbe
cmc
and
add
jmp
ljmp
fidivrl
push
add
dec
sub
add
fstp
aas
hlt
addb
aas
test
imul
test
dec
xor
es
add
addl
and
cmp
cwtl
or
cmp
jp
add
cmp
add
xchg
or
adc
mov
adc
xchg
add
js
mov
sbb
jnp
repnz
sbb
mov
or
ds
mov
leave
addb
cmp
sbb
sbb
pop
jecxz
push
inc
add
rcrb
fstps
in
jb
icebp
pushf
push
dec
in
push
add
jb
aad
mov
xor
xor
xchg
jle
push
sbb
scas
xor
ror
xor
scas
and
addb
push
test
mov
jns
add
inc
adc
cmp
imul
xor
add
dec
imul
test
or
outsb
lahf
cmp
out
mov
mov
and
push
pop
jnp
enter
in
jnp
popa
movsb
and
fs
dec
sub
insb
std
fldl
lcall
fcmovbe
test
aas
sub
nop
imul
shrl
sub
call
daa
xchg
pusha
add
leave
test
sub
inc
jb
add
or
cmp
outsl
jge
add
les
adc
add
xor
inc
loopne
pop
out
or
dec
jnp
bound
hlt
mov
stos
popa
mov
mov
push
add
dec
cltd
push
inc
xchg
pop
add
xor
add
enter
add
mov
int
or
out
pop
xchg
push
cmp
mov
push
push
lds
std
jns
xor
in
cmp
mov
dec
lods
xchg
inc
push
insl
lcall
xor
int3
mov
cmc
mov
cmp
aam
rcrl
in
cld
fwait
notb
jno
add
lcall
es
aad
enter
dec
lahf
loope
or
push
xchg
push
aas
outsl
jne
and
or
mov
rol
add
dec
add
add
add
add
xlat
sub
dec
mov
push
fwait
xchg
adc
addb
add
mov
js
into
icebp
pushf
xor
pop
push
and
mov
pusha
add
add
jno
icebp
mov
stos
loop
add
push
adc
das
cmp
push
call
insb
scas
cmpl
movsl
call
mov
xchg
sbb
sub
pop
push
and
mov
ja
mov
adc
xlat
jns
lds
add
je
sub
jne
das
jb
mov
mov
jb
or
push
pop
jb
insl
add
sbb
js
in
rolb
cmp
cwtl
or
cmc
sbb
add
cld
pop
addb
loope
fs
mov
adc
push
jle
mov
aam
push
jg
inc
add
or
sahf
and
lock
scas
push
xchg
jo
or
cmp
xor
cmp
cmc
xchg
mov
into
push
push
adc
pop
cmp
mov
mov
add
pop
add
lret
mov
jbe
arpl
mov
jmp
addl
push
inc
sbb
mov
and
inc
mov
mov
imul
es
cmpsl
cmp
or
shlb
add
add
add
cmp
cmp
adc
fmuls
and
cltd
inc
add
leave
loopne
mov
mov
movsl
loop
cs
xlat
inc
add
stc
aaa
jl
stos
xchg
cmp
jbe
mov
jbe
addb
xor
roll
add
sbb
jmp
enter
inc
add
add
sbb
pop
sbb
scas
movsb
in
add
lods
inc
or
movsb
cmpsb
add
loope
pop
cmc
sub
jb
pop
add
jbe
push
add
dec
mov
sub
pop
mov
xchg
jl
mov
pushl
popa
cwtl
adc
mov
adc
mov
inc
out
fisubrl
mov
cwtl
push
inc
inc
add
jmp
or
ljmp
movl
add
popa
fwait
dec
and
das
ss
add
popa
dec
jne
push
mov
push
les
jle
push
sarl
lcall
imul
rolb
add
fbstp
or
divl
leave
xor
inc
add
clc
fidivl
mov
mulb
mov
mov
jns
jg
jnp
and
out
dec
addb
fildll
in
test
xchg
mov
dec
mov
in
mov
cld
inc
add
rol
add
jne
js
add
jl
sub
or
sbb
sbb
xchg
xlat
sub
out
loopne
xor
dec
mov
imul
mov
adc
push
add
mov
iret
mov
push
frstor
cmp
stos
mov
outsl
mov
imul
stc
sahf
lock
add
ljmp
scas
test
pop
xor
es
pop
adc
int3
jmp
mov
push
je
sbb
addr16
xchg
add
lret
mov
add
jp
push
add
into
push
cmp
sbb
jo
lock
push
xorl
sub
imul
add
cmp
pop
push
xchg
pop
ljmp
loopne
ds
mov
popl
add
inc
add
add
ficoml
sbb
ja
lods
mov
out
hlt
into
in
pop
jns
push
sbb
mov
lods
stos
or
sbb
call
or
dec
pop
bound
stos
inc
adc
pop
mov
sub
add
cltd
jb
nop
add
xchg
xor
stc
sahf
jnp
test
jae
ja
add
iret
adc
mov
sub
lds
lods
pop
adc
cmpsl
std
arpl
pop
xor
mov
xchg
mov
jmp
sti
jg
popl
mov
rclb
pop
xor
mov
sub
add
cwtl
pop
in
pop
repz
and
fisttpll
or
push
xor
outsl
mov
mov
scas
inc
add
stc
in
fisubrs
and
fnsave
test
clc
jp
lcall
add
or
sbb
jns
addl
popf
pop
lret
daa
std
in
pusha
add
xor
in
add
ss
or
adc
ja
js
dec
pop
xchg
movsb
icebp
xor
stos
push
nop
roll
gs
fldl
das
cwtl
outsl
stos
ficomps
rolb
push
xchg
outsb
test
leave
addr16
mov
es
xchg
mov
mov
cmp
testl
idivl
out
pop
out
popa
std
xchg
add
jbe
popf
pop
xor
add
mov
cmp
dec
sub
mov
popa
pop
daa
out
jo
jo
xor
xor
inc
add
jmp
xchg
add
add
inc
add
cmp
add
push
out
bnd
test
add
pop
scas
ficoml
push
test
mov
jmp
addr16
stc
and
sbbl
add
decb
xchg
idivb
add
sbb
cmp
pusha
add
cli
nop
mov
outsb
jge
pop
mov
ret
mov
inc
add
xchg
mov
add
insl
mov
add
pop
xchg
test
fs
inc
add
out
cmp
addb
sti
add
xchg
push
imul
into
adc
cli
jbe
xchg
sbb
fwait
aaa
xor
add
daa
cmp
add
xchg
inc
add
cmc
stos
lret
in
jo
ja
push
jae
out
xchg
mov
rcll
add
and
mov
std
pushl
nop
and
add
adc
je
sar
shrb
insl
nop
inc
push
mov
addb
push
insb
xor
jbe
or
sbb
and
mov
xor
add
ja
pop
xor
add
or
xchg
sbb
pop
ror
mov
testb
stos
xchg
jle
movb
inc
cmp
pop
push
hlt
push
mov
add
xor
add
pop
add
leave
mov
cs
add
fwait
pusha
add
xchg
es
sahf
aas
fcomp
jl
ret
das
xchg
push
add
lret
cmp
mov
inc
add
pop
dec
mov
xchg
sub
pop
loopne
pop
push
out
sbb
fildll
sub
rolb
push
add
dec
std
xchg
and
inc
add
hlt
cmp
sbb
ret
push
pop
repnz
cli
rolb
test
xchg
cmpsb
push
fimuls
jne
xchg
inc
add
ficoml
pop
cmpsl
fidivrs
jae
push
sub
mov
int
or
add
aam
ficomps
ret
ljmp
fldenv
adc
cli
cmc
xchg
scas
dec
sub
add
rolb
and
in
je
ficomps
lds
aad
pop
sub
repnz
dec
cld
or
pop
pop
movsb
jl
cs
fs
cmp
push
or
packsswb
addr16
incl
add
rorb
or
push
xor
add
jns
addr16
pop
sbb
add
push
pusha
add
jmp
cld
sub
xchg
push
jmp
xor
mov
addl
xchg
mov
test
call
sub
sbb
add
stos
sub
inc
add
xlat
out
jns
add
ss
outsb
int
insb
jb
add
mov
jge
dec
jae
scas
arpl
pop
loope
sbb
inc
add
ror
cmp
push
dec
push
lret
test
ret
add
loopne
jnp
add
push
bound
clc
lods
repnz
add
dec
jne
shr
add
ror
mov
add
cld
mov
jae
je,pt
push
add
rcrb
popf
dec
cmp
mov
mov
cmpsl
dec
adc
adc
call
insl
fwait
into
sbb
lcall
int
daa
lret
mov
lahf
bound
clc
mov
add
dec
lea
mov
subl
inc
addl
out
aaa
pushf
fcmovnbe
aad
push
cmp
add
fwait
mov
and
mov
ja
pop
test
add
in
push
and
dec
xor
cmp
add
mov
inc
add
sub
or
sub
sub
or
adc
xchg
pop
cmp
sbb
and
push
or
mov
rolb
test
inc
add
adc
jne
push
int3
inc
mov
sub
jp
dec
xchg
inc
add
dec
lock
repnz
add
rolb
mov
lcall
cmpl
and
add
jecxz
addb
cwtd
add
insb
in
popa
mov
pop
inc
in
les
popa
xlat
sub
cmc
imul
adc
jg
imul
out
cmpsb
xor
lods
push
mov
pop
jb
cmp
movsl
sbb
aad
rcrl
jns
icebp
jns
or
jl
sub
cwtl
inc
add
pop
mov
pop
cltd
lods
js
fxch
scas
movsb
js
inc
shlb
js
pop
cmpsl
dec
cld
jle
jne
cld
add
mov
xor
gs
push
jl
mov
iret
jbe
cld
xor
lock
insw
dec
stc
sub
add
mov
pop
jo
and
push
lds
dec
adc
xchg
xor
cmpsl
cltd
cwtl
jl
and
cs
add
add
mov
movb
push
aas
mov
mov
push
into
aam
dec
test
push
sarl
add
sbb
jmp
and
lcall
les
fcomps
loope
jge
sarl
test
add
inc
mov
into
lret
out
jbe
repnz
icebp
sbb
loope
cli
inc
add
hlt
lret
shlb
adc
mov
lret
cli
bound
fstl
sbb
mov
sub
es
call
xor
add
add
add
and
xor
jno
add
into
mov
jecxz
cmp
adc
fisttpll
in
sbb
cmp
in
add
jae
pushf
call
sbb
outsl
jb
outsl
rcll
push
sub
pop
xor
lahf
or
int
inc
add
jecxz
add
adc
add
cmp
pop
je
push
or
shlb
jo
add
add
addr16
stc
pop
inc
sub
lahf
pop
dec
lods
mov
lcall
sbb
mov
adc
das
test
cwtl
repz
push
add
pop
sbb
xor
imul
sub
addb
movb
sub
mov
and
movsb
and
in
mov
jg
sti
mov
out
dec
in
sub
sub
add
mov
cmpsb
jecxz
add
fwait
cmp
sbbl
divb
pop
mov
xchg
mov
add
aam
add
push
add
fiadds
mov
mov
movsb
mov
add
dec
xor
xchg
xlat
cli
jmp
data16
xor
popfw
push
cmc
or
cmp
adc
sti
movsb
xor
cli
xor
push
lods
loopne,pt
jle
or
enter
jle
repnz
hlt
je
test
sbb
movsb
bnd
rorl
sbb
sbbl
std
bnd
pop
data16
mov
xchg
xor
out
cld
add
je
add
jne
inc
xor
push
xor
push
rclb
jecxz
popf
mov
ljmp
addb
dec
test
push
out
test
add
pushl
sub
lcall
movsl
cs
and
cmp
cmp
xor
ss
cmp
sub
bound
or
or
pop
sbb
mov
jb
sbb
add
add
jae
push
add
lcall
sbb
xchg
ja
jl
out
mov
add
pop
sub
adc
add
into
pop
mov
shl
hlt
mov
push
add
sbb
or
sbb
xchg
push
arpl
aas
mov
shrb
ret
or
mov
dec
into
xchg
jmp
pop
je
scas
cmc
addb
jb
xor
inc
out
out
frstor
addb
push
daa
fmuls
mov
js
dec
sub
sbb
int3
sbb
inc
mov
add
mov
xchg
scas
std
ret
add
add
mov
dec
xchg
xchg
pop
cmp
jle
inc
add
call
lret
xor
xor
inc
add
push
or
lret
into
ss
jno
or
and
and
and
xor
icebp
push
push
pop
dec
in
push
push
fidivrl
out
jecxz
pop
adc
sar
pop
hlt
push
dec
dec
sbb
sarl
rolb
cmp
ret
cltd
insl
xchg
push
xchg
aam
add
lods
dec
add
add
xchg
or
in
jmp
mov
push
movsl
outsl
push
arpl
mov
and
rcrl
inc
add
repz
or
cmp
jmp
aas
addb
lds
cs
pop
adc
bound
es
fwait
daa
mov
push
xlat
inc
add
add
cli
int3
adc
add
addb
scas
or
mov
xchg
adc
add
pop
sub
add
icebp
mov
into
insb
mov
add
add
arpl
test
sbb
iret
cs
cmpsb
xor
pop
add
addb
scas
out
mov
lahf
push
xor
and
popa
loop
insb
fwait
stc
notl
add
inc
add
stos
dec
pop
rolb
adc
add
out
jge
sbb
or
aas
aad
test
mov
jo
lock
xor
int
jp
fld
shlb
or
data16
test
mov
mov
dec
out
sbb
adc
cmc
push
imul
jg
imul
add
pop
mov
ret
add
pop
sbb
mov
push
mov
pop
mov
pop
incb
rolb
sbb
and
cmp
cmp
xchg
dec
jle
inc
pop
xor
jnp
fstl
pusha
add
in
fwait
repz
pop
repnz
xor
push
pushf
adc
add
adc
pop
push
xlat
dec
xchg
sub
add
insb
push
jnp
lds
add
adc
xor
repnz
in
adc
jl
pop
js
notb
ret
jo
add
leave
push
sub
and
movsb
lock
cmp
add
xchg
imul
fldenv
cmp
and
lock
jle
mov
pop
push
adc
dec
out
in
insb
aad
sbb
loope
lods
das
push
and
inc
add
int
rolb
into
sub
orl
test
sti
add
add
or
iret
dec
dec
rolb
pop
popf
pop
dec
mov
js
cli
cmp
mov
xchg
pop
pop
cmp
add
jmp
mov
add
fwait
jecxz
rcr
pusha
add
sti
insb
sti
pop
or
jl
fnsave
lea
xlat
adc
movb
pop
pop
sbb
scas
aam
inc
add
mov
outsl
inc
add
mov
fs
scas
jb
inc
add
cmc
test
dec
test
int3
rorb
add
test
jmp
pop
loopne
sbb
pop
sub
mov
rcr
loop
or
jmp
pusha
add
lret
mov
cmp
jmp
add
dec
in
xchg
or
sub
push
sub
add
lods
daa
push
add
aas
mov
inc
sub
imul
push
cmpsl
xchg
out
mov
cmpsl
into
es
xor
out
jns
loop
ficoms
add
jnp
in
insb
inc
lods
adc
addl
xchg
loope
jecxz
cs
inc
add
jo
or
add
daa
lds
add
and
jle
push
jne
fsubrl
push
and
dec
bound
les
add
mov
jne
sarl
mov
add
jb
mov
mov
jae
in
mov
mov
inc
add
ds
movsl
cmpsl
push
lods
movb
push
add
or
sti
cmp
bound
push
iret
mov
out
mov
dec
inc
dec
sbb
movb
mov
sub
adc
xor
out
push
add
adc
mov
dec
inc
add
cmp
out
inc
add
imul
and
jge
push
ficompl
or
cmp
push
and
cmp
cld
push
test
add
jns
lods
push
jbe
dec
cs
ds
add
push
cwtl
xor
add
add
and
inc
add
xchg
rorb
stos
lods
push
sahf
adc
cmp
jp
pop
jns
ljmp
lock
incb
cmp
js
pop
das
aam
push
mov
movsl
stos
sbb
pop
add
xchg
clc
xor
scas
adc
fwait
scas
xchg
dec
fdivrl
xchg
bound
pop
push
add
mov
jg
mov
rcrb
pop
out
stos
jge
fwait
dec
in
or
aam
add
aam
shll
jo
jp
fdiv
mov
repz
ljmp
por
mov
addb
out
nop
into
pop
mov
dec
push
les
outsl
leave
dec
aam
xchg
xchg
sub
mov
or
mov
push
addb
dec
addr16
lea
fildll
scas
cld
xor
aad
les
fimull
es
add
push
push
arpl
adc
jnp
cmp
or
cmp
sahf
pop
insb
push
rcll
loopne
mov
add
mov
cwtl
xchg
push
adc
add
pushf
xchg
std
xor
push
pop
lret
lcall
lahf
int3
jle
add
loope
lret
mov
add
repz
loope
sub
clc
ds
dec
jnp
push
inc
clc
xor
add
sub
aad
push
xor
jns
xchg
aas
inc
mov
cwtl
rcrl
lds
in
es
aas
jb
xlat
imul
loope
add
mov
repnz
into
lret
xchg
xchg
gs
mov
ljmp
add
movsb
sbb
out
repnz
push
add
add
inc
add
sbb
adc
test
push
dec
and
push
pop
int3
imul
add
jge
imul
sbb
push
fistl
xorl
in
rcrb
or
out
dec
mov
out
add
shrl
aas
enter
add
add
add
mov
fidivs
pop
fildl
mov
roll
mov
mov
call
add
das
loop
cmp
sahf
sbb
ret
xchg
in
mov
lcall
lock
pop
sbb
mov
add
stos
movsb
pop
sub
repnz
push
loop
pop
jle
add
mov
mov
and
out
mov
add
mov
dec
rcr
aam
mov
andl
mov
js
xor
movsb
loop
jae
adc
cmp
fdivrp
outsl
sub
es
add
addb
and
mov
mov
sbb
jnp
pop
stos
jp
loopne
mov
cs
adc
ja
mov
pop
das
mov
das
pop
xchg
addb
push
adc
test
aaa
cmpsl
or
sbb
inc
add
xchg
bound
iret
jp
mov
mov
xor
bound
push
mov
lcall
xchg
roll
testl
pop
out
lcall
fsubrl
mov
outsb
inc
jge
cltd
xchg
xor
mov
cmc
popa
enter
out
push
imul
push
imul
add
push
and
xor
daa
xor
les
ljmp
addl
dec
adc
imul
aaa
sub
and
inc
push
sbb
inc
push
xchg
aas
inc
add
jns
imul
cwtl
repz
mov
sbb
sahf
xchg
loop
pop
and
add
arpl
sbb
add
dec
ret
repz
lods
daa
or
inc
cmp
push
sub
dec
pop
jae
add
jmp
mov
or
js
mov
mov
mov
add
mov
mov
movsb
cmp
jmp
inc
adc
bound
pop
addl
test
add
ljmp
cwtl
cmp
imul
insb
insb
leave
xor
cmp
lock
js
bound
inc
add
pop
mov
leave
imul
add
xor
movsb
sbb
popa
jmp
in
dec
sub
fdivr
xchg
or
or
mov
jb
mov
leave
fisttpl
test
lret
and
add
xchg
leave
dec
addb
xor
pusha
add
cmp
into
out
xchg
jle
jno
mov
and
xlat
outsl
and
testb
fdivrs
dec
dec
push
or
and
and
add
push
xchg
outsb
sub
xor
addr16
xor
mov
mov
xor
inc
fisubl
insl
in
push
lahf
mov
mov
inc
add
dec
pop
push
xchg
jmp
add
dec
lock
popl
and
clc
scas
mov
adc
jge
adc
cmp
in
inc
gs
mov
js
add
in
push
dec
and
loopne
scas
addb
out
and
xor
add
int
scas
adc
push
or
fsincos
cmp
in
lds
je
in
imul
dec
lods
or
push
mov
jns
inc
xchg
and
add
hlt
js
cmp
add
xchg
cli
sbb
add
ret
hlt
mov
insl
sbb
inc
add
lret
nop
scas
cmp
leave
ds
pop
xor
filds
repnz
jo
mov
je
loope
mov
cli
adc
icebp
cmc
mov
popf
or
cmpl
mov
lods
popf
scas
fdivrl
out
lahf
jge
pop
jle
jne
addr16
lods
aaa
mov
int3
ret
xor
cmp
dec
sub
outsb
bsf
mov
add
jne
popf
rolb
aam
inc
in
into
jnp
ja
cmpl
mov
dec
arpl
lret
pop
dec
push
push
je
add
mov
repnz
xor
jo
add
add
and
push
add
mov
add
std
sub
pop
or
pop
dec
mov
inc
add
mov
jnp
add
add
cmpsl
add
inc
stos
mov
loopne
cli
loope
stc
dec
mov
add
jg
mov
into
movsl
pop
inc
xchg
jo
fimuls
cmp
sbb
call
clc
lods
addb
lock
shlb
mov
sbb
dec
in
cmp
add
ljmp
js
cld
test
hlt
lods
lfs
add
and
pop
sarl
add
das
out
jg,pn
jmp
mov
int
test
add
out
movsl
xlat
stos
dec
mov
fucom
icebp
xor
jecxz
cli
mov
add
xchg
cmp
push
adc
mov
add
les
inc
add
jo
dec
dec
loope
test
ret
cmpsb
sub
pop
rol
lods
push
shrl
je
cmp
inc
add
inc
lret
enter
add
dec
lods
add
dec
pop
dec
push
dec
or
addb
ret
pop
dec
mov
and
push
fcompl
jae
mov
or
stos
fsub
mov
rolb
mov
test
mov
add
repnz
add
fadds
mov
xor
mov
mov
repnz
add
scas
push
dec
aas
out
movb
imul
call
cmp
add
sti
pop
inc
add
insb
movb
insl
mov
add
lcall
adc
ficompl
push
js
sub
lock
loope
pop
mov
cmpsb
rclb
lret
adcl
mov
dec
jmp
and
js
xor
out
jecxz
or
dec
mov
fisubrl
loopne
and
and
xchg
add
jbe
lds
call
jmp
jmp
and
adc
addr16
test
sub
pusha
add
sub
inc
add
push
dec
shll
or
aam
scas
or
in
loop
adc
cmc
test
mov
xlat
push
jno
es
push
pop
movsl
stos
mov
add
sub
aas
imul
testb
or
sbb
aad
jno
mov
jg
add
dec
jo
add
cwtl
adc
fdivp
jmp
lret
cmp
mov
sbb
pop
pop
mov
jb
popw
fwait
lret
push
mov
mov
xchg
sbb
cld
xor
cltd
jmp
xchg
push
adc
icebp
repz
pop
dec
daa
dec
lahf
xor
sub
or
adc
ljmp
adc
fwait
out
adc
inc
sub
adc
inc
inc
repnz
and
gs
push
lods
and
push
cs
and
sub
cltd
add
negl
cmp
std
sbb
fisubl
into
fcoms
jmp
push
iret
mov
inc
add
dec
adc
mov
out
enter
xlat
dec
or
dec
jl
add
fisubrl
hlt
push
inc
add
push
faddp
pusha
add
sbb
push
add
and
and
sti
faddp
add
mov
es
and
fisubrs
sbb
stos
call
addb
add
fdivrs
out
xchg
shlb
js
jne
loopne
push
pop
adc
jo
aas
cltd
arpl
cmp
lret
cli
cld
or
mov
adc
lret
add
jns
pop
jns
out
mov
cmp
sub
add
add
jmp
xchg
imul
clc
xchg
cmp
and
jg,pn
dec
adc
dec
cmp
add
fsts
jl
int
add
frstor
mov
loope
sarl
paddb
push
inc
mov
add
hlt
xor
addr16
lret
je
mov
add
out
ficompl
movsl
lret
dec
bound
xchg
sbb
lds
pop
je
in
add
add
sub
std
jne
lret
mov
dec
add
std
dec
scas
add
imul
iret
roll
add
xor
jle
popw
lahf
fucomip
clc
lahf
cmp
sub
shr
or
gs
jo
adc
dec
and
or
mov
lcall
inc
sbb
inc
ss
xchg
xor
inc
cwtl
into
dec
imul
cmp
scas
mov
add
stos
shlb
nop
mov
add
test
popf
iret
mov
test
cmpsl
sbb
enter
dec
insb
stc
or
mov
sub
cwtl
sti
imul
sub
inc
add
sbb
or
inc
test
jnp
cli
add
fcmove
mov
mov
add
dec
orl
sub
push
jbe
mov
cmp
fwait
shlb
push
inc
add
jmp
push
in
mov
pushf
add
fwait
pop
addb
testb
cmpsb
xor
test
xor
jecxz
cld
jg
mov
cmpsb
mov
sti
sbb
lods
scas
or
les
into
loopne
mov
cmp
or
lret
test
jno
jmp
mov
add
movb
push
aam
movd
addl
fldt
dec
pop
push
mov
add
rcll
movsb
xchg
or
pop
fistps
imul
add
mov
insl
test
dec
jle
and
aam
sti
add
out
sub
sbb
dec
lods
add
add
mov
movb
pop
addb
xchg
pop
push
scas
in
loopne
dec
rcl
mov
xchg
test
dec
rcll
ret
mov
je
ljmp
inc
add
add
pop
shld
cmp
popf
repz
jbe
dec
mov
push
test
loop
les
adc
xor
adc
fs
add
mov
dec
psubw
dec
sbb
fiaddl
sahf
jns
rcll
mov
add
outsb
xchg
mov
bound
and
ss
cmp
daa
stos
xchg
add
cs
loope
jmp
add
xchg
int3
mov
fldcw
cmp
lret
adc
jle
mov
push
jmp
shl
xchg
pop
fwait
push
add
stos
and
jecxz
jmp
inc
add
add
lea
add
les
push
rcll
test
bound
dec
xchg
inc
jne
das
out
mov
aaa
fcoms
stos
repnz
push
xor
pop
and
aad
jmp
decb
mov
xor
arpl
ljmp
add
add
jle
xchg
es
aaa
mov
mov
lret
call
cmpsb
loope
sbb
mov
add
fsubs
add
dec
jmp
jge
and
or
movb
in
inc
cmp
pop
shr
ret
jp
ret
enter
or
imul
add
jp
hlt
inc
add
cmp
loop
insb
xlat
jle
add
push
aad
add
mov
adc
cmpsl
xchg
fildl
aad
negl
add
cltd
shlb
add
push
dec
or
out
in
int
lea
cli
fcmovnu
xor
cmpsl
fimull
cwtl
in
aaa
mov
fisubl
cmpsl
das
into
movsb
setae
enter
jno
movsb
cmp
and
and
xchg
xor
mov
or
mov
out
fdivrs
or
mov
cmpsl
cwtl
daa
push
mov
inc
cs
int3
insb
mov
jnp
xchg
int
pop
inc
add
add
jl
sahf
hlt
push
push
es
lock
imul
adc
lods
mov
cltd
and
sbb
mov
inc
add
pop
xor
lcall
adcl
addb
std
imul
ret
mov
mov
jg
xor
pop
loope
bound
jne
mov
jle
cld
mov
lcall
lods
mov
xorl
bound
mov
decl
pop
flds
cmp
add
jg
xor
into
sbb
das
out
lock
jne
bound
mul
daa
push
pop
xor
or
xorl
add
loopne
addb
pop
xchg
insb
aas
push
call
fld1
add
cltd
fs
xchg
or
inc
add
cmpsb
dec
ja
imul
into
arpl
xchg
setno
add
cltd
je
jb
inc
add
loop
add
jno
js
dec
cmp
sub
push
fstpl
xor
push
out
pusha
add
xchg
push
lds
arpl
nop
in
mov
mov
sbb
sbb
ljmp
cmpsb
stos
cmp
mov
or
pop
mov
mov
or
js
ficoms
test
push
inc
add
jle
adc
shlb
add
push
jbe
push
pop
lahf
in
xor
test
push
sub
mov
xlat
xor
add
push
adc
xor
in
mov
add
scas
xchg
mov
lahf
pop
xor
xor
xchg
add
fildl
out
loop
xchg
int3
rcrl
iret
clc
std
sub
fwait
imul
add
lahf
ljmp
fistps
dec
sub
pop
jb
xchg
xor
xchg
sbb
mov
movsb
neg
xor
sub
cld
test
cmp
adc
lret
lcall
imul
ds
popa
inc
add
xchg
pop
sahf
add
clc
jmp
ficompl
ret
movsb
push
test
in
scas
inc
add
clc
xorl
jne
int3
pushf
mov
pop
fs
shll
add
push
add
jmp
lret
pop
xchg
fdivrs
hlt
outsl
movb
mov
lds
jge
xchg
movzwl
test
xchg
adc
and
hlt
push
out
addb
xchg
aas
mov
cli
sbb
inc
add
xchg
fmulp
out
add
gs
icebp
pop
and
pop
mov
pop
js
inc
add
sbb
mov
cwtl
mov
pop
fs
jle
fwait
movb
mull
pop
sbb
jns
mov
sub
lahf
cmc
mov
sub
add
mov
fildl
lock
mov
sub
imul
sub
push
repnz
jmp
sbb
sub
add
sbb
stos
adc
add
les
and
sbb
mov
jo
out
jge
lret
or
mov
add
inc
add
mov
and
popf
popf
out
add
ja
pop
fwait
or
push
inc
add
cmp
sarb
sub
add
ds
add
ficomps
pop
push
in
repnz
ljmp
mov
or
jecxz
enter
in
jecxz
and
push
mov
push
jns
push
mov
jae
js
ljmp
xchg
mov
mov
mov
outsl
pop
dec
cli
cmp
add
stc
inc
fistpll
or
mov
and
add
lods
stc
popf
shrl
add
addb
out
xchg
pop
xlat
in
pop
ficoms
std
bnd
mov
add
in
fwait
aas
and
xor
inc
add
cmp
cli
scas
fdivs
mov
push
test
ds
add
inc
add
sub
pop
pop
or
mov
add
xchg
dec
adc
dec
rolb
ja
cmp
fsubr
int3
sub
mov
scas
aad
mov
dec
xor
lret
pop
in
in
and
mov
stos
fcmovbe
cmpsb
imul
push
cmp
dec
push
push
mov
or
shll
iret
aam
movl
add
mulb
enter
movsl
lock
mov
sbb
ret
pop
rolb
pop
aam
fs
fildll
xlat
and
mov
inc
mov
xor
jle
les
pop
insb
dec
xor
add
mov
add
sbb
add
jb
cmp
and
mov
les
sbb
ret
cld
and
sub
xchg
jnp
pop
add
out
add
movb
stos
into
repz
lcall
std
stos
fs
xor
mov
jbe
xor
testb
mov
std
mov
repnz
int3
or
cld
cmp
jns
jo
or
inc
test
adc
aad
lods
cmpl
sbb
cmp
out
xchg
mov
lea
mov
inc
add
inc
add
add
sub
ret
jne
das
mov
ljmp
sbb
push
inc
add
fs
and
cld
push
mov
pop
sbb
or
lahf
inc
add
lret
xor
fldl
inc
add
sub
add
add
lds
push
mov
rcl
fs
xchg
pop
imul
addr16
jmp
pop
xchg
into
dec
push
fxch
or
lahf
adc
mov
jno
in
lods
stc
sbb
and
and
les
pop
mov
xchg
aas
dec
js
mov
add
pusha
add
movsl
aam
and
push
movb
push
mov
loop
push
xchg
ss
add
mov
jp
mov
fsubs
stos
mov
out
jb
fmull
sbb
ja
cmp
jo
movb
cmp
aam
cld
or
enter
dec
stos
sub
out
fadds
stos
push
sbb
cmp
iret
test
sahf
icebp
and
lock
ret
pop
mov
inc
add
mov
ret
fbstp
or
add
add
out
xchg
gs
incb
movsb
push
add
stos
imul
push
std
movsl
cmp
das
es
lcall
dec
movsl
or
pushf
pop
rcl
dec
adc
add
shl
scas
loop
aam
mov
cs
lods
rcll
shlb
cmp
sub
mov
add
faddl
imul
and
movsl
shlb
jbe
mov
mov
fidivrl
add
xor
int
fcompl
push
mov
add
addb
mov
xor
mov
out
outsb
mov
test
andl
xchg
mov
add
push
mov
shlb
add
imul
lock
clc
xchg
aam
add
movsb
cwtl
add
xchg
ds
lods
xlat
xor
cli
xor
push
push
leave
inc
add
mov
add
jge
mov
lods
mov
in
data16
push
mov
js
int3
cmc
adc
pop
lret
cmp
add
jnp
icebp
pushf
jecxz
cmp
add
rcrl
dec
scas
push
inc
add
inc
mov
mov
add
aam
add
adc
cmc
maxps
push
add
add
add
cmc
push
xchg
test
adc
push
mov
ds
es
das
sub
cmp
push
xchg
jno
xchg
test
ret
jmp
sub
int
cltd
cltd
or
and
pop
aas
cli
jp
pop
rclb
add
add
out
adc
xchg
jbe
in
repz
mov
adc
test
mov
add
ss
sbb
in
roll
test
add
loopne
sbb
pop
sarl
es
push
pop
push
mov
outsb
mov
dec
mov
dec
jo
pop
mov
mov
sub
mov
mov
ret
stos
lods
cld
adc
inc
add
adc
mov
cltd
leave
xchg
jmp
push
inc
cmp
in
test
icebp
test
icebp
xor
imul
push
mov
insl
and
inc
add
in
loopne
and
loope
add
cltd
cmp
ljmp
xchg
adc
dec
xor
or
push
fcmovnb
add
push
std
dec
or
mov
or
push
lods
mov
outsl
test
enter
dec
enter
adc
fistpl
add
js
pop
scas
std
cs
and
add
sub
xchg
mov
cld
ds
add
int3
cmp
or
cli
xchg
addr16
add
mov
movb
pop
sbb
test
and
cmp
and
shll
movntps
inc
or
dec
sysenter
mov
pop
rol
and
xchg
xor
jge
pop
push
insl
out
sub
lods
cs
lds
fdivrl
fst
call
repz
mov
mov
ucomiss
arpl
mov
out
sarb
lret
dec
fsubrs
std
iret
loopne
xor
cwtl
lret
es
and
addb
add
add
sbb
mov
je
cmp
mov
das
in
fldenv
into
arpl
xor
and
addr16
cmpsb
sahf
push
mov
adc
add
add
mov
sub
inc
add
and
imul
mov
pop
out
push
add
xchg
cmp
add
inc
add
cmp
popf
lahf
xchg
lahf
aad
jecxz
add
xchg
xor
stos
xor
xlat
sti
mov
pop
bound
dec
daa
sbb
dec
stos
call
or
push
cltd
fstl
xchg
dec
and
and
inc
lods
sub
xor
jb
add
ret
dec
inc
dec
pop
shl
inc
sbb
sub
cmc
data16
add
mov
dec
es
mov
adc
pop
jmp
push
enter
mov
sub
push
jb
popf
xchg
int3
dec
ljmp
and
int
arpl
lods
popf
jno
push
sbb
add
loope
movsb
mov
loopne
lock
sbb
mov
testl
jo
adc
sbb
jecxz
jb
lret
imul
stos
test
push
adc
ja
jle
stos
pushf
cmp
iret
scas
pop
push
jnp
cmp
add
imul
in
push
inc
add
jecxz
and
out
insl
cli
cmpsb
fldcw
mov
cli
lock
repz
push
or
pop
mov
pop
roll
pop
loope
pop
scas
movsb
movsb
sub
sbb
stos
lret
adc
clc
dec
lret
movb
sbb
and
fdiv
icebp
arpl
add
inc
add
ret
push
sbb
add
jae
mov
mov
xchg
mov
loope
xchg
inc
add
mov
dec
sar
mov
xchg
fs
std
outsl
scas
dec
sbb
add
xchg
pop
cli
mov
mov
mov
push
daa
int
jg
cs
repz
add
test
push
add
inc
cmpsb
test
dec
dec
test
in
add
pop
cwtl
cmp
xor
mov
push
daa
out
xor
lds
add
bound
adc
and
inc
add
leave
mov
add
xchg
arpl
xor
adc
jecxz
scas
lret
sbb
daa
stc
je
pushf
inc
push
sbb
mov
shrl
test
sbb
and
jo
jle
xchg
mov
cmp
sub
inc
add
or
movb
or
into
loopne
ret
cs
add
mull
cmp
add
add
and
jnp
lds
jp
insl
mov
sub
sbb
or
lea
sub
jg
push
ficoml
mov
mov
jne
into
cmp
sbb
dec
mov
add
inc
call
xchg
add
in
xor
stos
jns
addb
std
hlt
pop
cmp
std
push
dec
aaa
enter
out
jg
xor
fists
add
mov
cmpsb
fistl
fisubl
and
jecxz
ss
fidivrs
sarl
ljmp
jmp
add
fsubr
fwait
and
add
fistl
xor
add
in
dec
icebp
scas
and
mov
push
xlat
xchg
and
add
lret
icebp
mov
push
ljmp
fildl
inc
add
jge
mov
lret
pop
mov
ror
adc
push
scas
lahf
pop
call
inc
psubsb
jne
mov
dec
idiv
xor
adc
add
stos
push
test
or
scas
add
fcoms
and
movsl
xchg
mov
adc
shll
lahf
jp
push
sahf
cmp
loope
xlat
test
pop
jno
popf
ret
sbb
ljmp
daa
sub
std
jnp
ljmp
dec
lret
inc
add
movsb
les
mov
mov
lods
push
pop
sbb
jno
jae
cmpsb
pop
iret
or
es
movsl
pop
dec
aam
add
pop
movsb
fcomp
sub
adc
add
add
jmp
lds
push
xchg
in
repz
xchg
dec
jo
push
jno
sahf
into
cmp
pop
insb
fisubrl
cmp
cltd
mov
push
stos
int
push
js
or
mov
repz
add
pop
mov
out
iret
cmc
mov
lods
sbb
add
call
add
ror
fistpl
lcall
je
lods
dec
xlat
outsl
xchg
and
test
pop
loopne
cwtl
test
cld
pandn
mov
xchg
pop
jmp
flds
add
add
cltd
sbb
addb
pop
cmp
mov
movb
mov
test
inc
sbb
sbb
add
xor
nop
cmpsl
push
mov
add
insl
outsb
add
aas
dec
rolb
add
mov
adc
pop
lcall
or
jecxz
cmp
jno
add
add
cli
std
lret
and
dec
sbb
jbe
fiadds
add
mov
mov
inc
sbb
mov
push
fsubrl
or
and
in
mov
clc
push
mov
pusha
add
rcrl
scas
xor
dec
xchg
addr16
in
cwtl
pop
or
mov
dec
insb
add
or
cmp
mov
jne
mov
push
subl
add
add
test
sub
in
sahf
xor
mov
jnp
movsbl
and
lods
or
out
fwait
sbb
add
pop
jbe
mov
sub
cmc
pop
push
or
add
gs
mov
cmp
scas
stos
ret
or
std
mov
xor
call
inc
add
adc
cs
in
inc
add
test
add
fisubs
add
sbb
pop
enter
stos
or
in
in
int
in
pop
push
xor
rcll
fnstenv
pop
daa
andl
popf
pop
mov
sbb
add
add
mov
mov
repnz
loopne
shrb
cmpsb
or
xchg
sub
xor
sub
inc
add
inc
mov
push
and
lcall
leave
sbb
test
xchg
idivb
xchg
jge
pop
hlt
fwait
sbb
addb
jmp
bound
add
imul
or
popl
es
adc
nop
mov
addr16
in
insl
repz
out
pop
jbe
in
rclb
enter
push
std
sbb
movsl
mov
imul
lds
pusha
add
cmpsl
cli
ss
add
mov
add
out
pop
cmp
jns
add
push
sub
out
aad
and
loop
shlb
loopne
cmpsl
fsubs
bound
nop
mov
fistpll
xchg
divb
movb
add
mov
fwait
push
rolb
data16
dec
dec
fcmovu
or
pop
mov
push
sbb
jns
xor
dec
dec
sbb
loopne,pn
lret
insb
loopne
mov
int3
repnz
xor
sbb
sub
push
shr
xchg
push
jmp
aaa
and
push
inc
or
sub
add
ss
add
and
sarb
cmp
or
ds
sub
jmp
mov
pusha
add
mov
cmp
add
add
sub
xchg
out
bound
dec
adc
jl
arpl
ljmp
and
cmpsb
cmpsb
aad
dec
jmp
pushf
jecxz
adc
out
insl
outsb
clc
ds
cmp
pop
pop
add
and
lcall
scas
mov
sub
add
sub
and
lods
jb
test
addb
stos
hlt
dec
sub
xor
mov
ja
mov
lock
inc
divb
fwait
stos
popf
pop
pop
ljmp
jl
dec
outsl
mov
stos
gs
dec
mov
adc
or
cmp
lcall
pop
jne
xor
add
add
bound
pusha
add
mov
inc
jge
push
das
cltd
dec
sbb
mov
pop
fldt
addb
xor
push
imul
fcmovnb
xor
cmp
inc
outsl
push
imul
loop
aad
enter
fidivrs
mov
add
cmp
fsubrs
inc
std
movsl
outsl
insb
dec
imul
mov
mov
pop
dec
push
add
insb
insb
xchg
stos
push
stos
addr16
fisubrl
cmpxchg
out
sub
data16
push
or
and
cmp
rcr
or
mov
sahf
pop
iret
in
pusha
add
or
dec
inc
inc
add
and
xor
add
clc
sahf
dec
xchg
push
bound
inc
xsha256
cmpsb
sahf
iret
lock
mov
cld
xchg
inc
mov
xor
push
aad
add
add
enter
mov
add
mov
addb
xor
aaa
inc
push
scas
sub
addb
lock
arpl
add
aaa
movsb
push
movsb
xor
in
cmp
test
jg
fisubl
jg
add
push
pop
cld
xchg
pop
dec
adc
imul
cli
into
sbb
push
and
inc
cmpsb
fnstcw
cmp
daa
lret
dec
jns
es
push
xchg
loope
inc
add
das
jl
add
sahf
cmp
pushfw
xor
add
jae
adc
repnz
lea
push
pop
mov
cmp
pop
mov
gs
sub
xchg
sbb
daa
push
pop
dec
sub
inc
add
xchg
lods
dec
aam
add
lahf
fcom
or
cltd
add
cld
xchg
push
ret
sub
sbbl
addr16
mov
ds
mov
in
addr16
mov
add
leave
mov
mov
stc
cmp
outsb
js
and
jle
add
in
push
std
test
inc
add
xchg
nop
test
cmpsl
pop
cmp
add
pop
jmp
ljmp
popa
stos
cmc
sub
xor
xor
pop
dec
nop
inc
inc
push
mov
push
icebp
xchg
aas
push
dec
mov
mov
push
add
es
lods
dec
pop
sub
imul
inc
add
mov
sub
cs
leave
sub
xchg
pushf
add
jg
jl
sub
sub
and
test
popf
outsl
rolb
stos
jb
cmp
sahf
cmp
mov
test
aas
add
fs
adc
fisubs
xor
pushl
into
imul
shrl
lds
fstps
or
jae
pop
insl
in
and
jae
add
es
add
fbstp
aas
addr16
adc
mov
repnz
jg
daa
cmc
fcmovnu
aad
cmp
add
test
test
adc
jmp
inc
add
push
js
popf
xchg
adc
xchg
scas
xor
mov
mov
sarb
lret
enter
lds
fnsave
sub
movb
mov
cmp
stc
leave
lods
dec
in
jmp
aam
mov
inc
add
xor
or
xchg
test
add
and
jg
jnp
add
bound
xchg
aad
stos
cld
sbb
movsl
dec
rcl
mov
push
ds
add
and
mov
cmp
mov
inc
add
dec
pushf
xor
lds
jmp
mov
add
fadd
cmc
mov
add
daa
movb
add
jecxz
inc
push
xchg
mov
jne
sarl
fsubl
add
addb
push
add
cmp
sbb
inc
iret
mov
pop
cmp
addb
sbb
lods
xrelease
mov
mov
push
adc
out
lods
fdivrs
es
test
push
test
sbb
aam
xlat
ss
or
sbb
jmp
xor
mov
gs
mov
cmc
pop
mov
js
pop
lret
add
push
repnz
push
xchg
mov
ja
gs
test
mov
add
push
push
xor
fiaddl
add
jmp
cmp
or
cwtl
or
add
cld
rorb
lods
sbb
enter
pop
les
ss
xchg
mov
cld
addb
les
stc
jmp
add
insb
xchg
test
add
push
jecxz
jno
xor
add
jb
add
pop
movl
ret
jg
sub
sub
or
adc
pop
rolb
inc
add
mov
clc
in
add
sbb
add
inc
insl
or
fadd
imul
popf
cmp
adc
xor
fstpt
jp
addb
add
adc
ja
jne
lret
mov
pusha
add
mov
popf
ds
mov
imul
fiaddl
imul
jo
mov
out
shll
stos
push
inc
mov
fiaddl
add
cmp
inc
add
bound
rclb
jbe
rolb
sarb
imul
xor
dec
test
das
sti
int
lods
lcall
or
std
into
sbb
negl
add
add
test
imulw
mov
xchg
sahf
shl
iret
addr16
enter
mov
mov
imul
call
aaa
push
iret
iret
push
or
xor
ljmp
insb
xchg
xchg
mov
add
mov
inc
or
inc
add
add
mov
mov
add
addb
cmp
adc
pushf
orl
sti
cltd
dec
and
push
dec
cmp
sub
lret
mov
repz
ja
add
add
jg
fwait
mov
mov
sbb
inc
add
mov
aas
adc
push
or
mov
icebp
scas
sbb
cmp
rolb
sahf
in
pop
bound
push
adc
jno
pop
enter
push
xor
add
addb
outsb
stc
mov
sub
iret
fisubrl
daa
bts
sbb
aaa
daa
xor
push
cmpsl
pop
sti
add
dec
jg
cmpsl
dec
inc
jmp
out
sbb
addr16
les
jo
mov
rolb
add
mov
movsl
rolb
mov
pushf
std
pop
clc
adc
shrl
stos
loope
add
nop
mov
push
lds
lret
jl
push
popa
pusha
add
cs
imul
or
add
mov
fdivrs
sarl
add
xchg
pop
test
inc
add
inc
add
pop
outsb
imul
mov
mov
mov
sahf
cltd
add
push
xchg
jb
cmpsb
hlt
fstpt
dec
inc
pop
mov
adc
push
roll
xor
cwtl
cmp
jo
pop
dec
dec
pop
inc
add
aam
lods
mov
cmp
call
ljmp
mov
and
push
jno
add
fldl
imul
pop
mov
mov
or
inc
mov
cwtl
repnz
push
addb
fsub
add
inc
jo
pop
out
stos
les
lds
cmp
xchg
divl
adc
or
add
mov
jb
test
int3
ds
mov
xor
xchg
push
sbb
sub
je
pop
dec
dec
pop
add
daa
clc
outsb
ret
xor
scas
jmp
push
in
jns
int3
or
sub
xchg
icebp
xchg
aad
cmc
repz
in
mov
xor
fistl
jp
les
push
aaa
cmp
mov
xor
into
and
pushl
inc
fs
call
loope
inc
arpl
lahf
out
sbb
sub
and
fs
push
sahf
mov
iret
sub
dec
cmp
pop
dec
cmp
add
mov
cltd
aam
sbb
or
addb
dec
mov
or
jae
and
mov
add
push
pop
jmp
add
add
lds
jno
mov
and
insb
add
xor
add
cmp
into
mov
popa
mov
dec
ret
pop
add
lds
fsub
clc
mov
push
lods
or
pop
repz
push
add
pop
push
mov
lods
inc
add
jl
xchg
inc
add
mov
clc
stc
in
insl
inc
add
adc
add
outsb
imulb
shrl
add
insb
or
rcll
push
push
mov
xchg
and
je
add
add
pop
jmp
or
mov
fiaddl
add
cmp
pop
mulb
mov
into
push
sub
inc
add
data16
bound
bound
mov
sub
int3
add
or
pop
ficomps
cs
jbe
cmc
and
add
fs
sub
shl
sarb
fidivrl
js
pusha
add
in
inc
add
or
push
loope
fsubs
cli
aad
dec
cmc
cmp
mov
sub
mov
mov
xchg
push
xor
mov
fwait
push
cli
movb
push
mov
aas
or
add
addb
add
mov
sub
add
inc
repz
imul
sbb
add
ret
mov
jmp
out
lea
push
imul
out
and
xchg
out
jg
sarb
outsb
inc
add
ljmp
xchg
jmp
sbb
add
xchg
icebp
mov
jle
mov
inc
xor
movsl
xchg
jge
add
xchg
mov
ljmp
lret
out
popf
lcall
jb
xor
xchg
test
addr16
sbb
je
test
cmp
dec
aas
and
pop
sahf
fiadds
cmp
xchg
and
xchg
jmp
lods
icebp
roll
jns
stos
mov
or
add
fidivrs
imul
pop
sarl
pop
sbb
add
adcl
les
mov
add
add
out
push
paddsb
enter
inc
add
scas
push
add
push
sti
mov
repz
mov
mov
pop
testl
pop
sbbl
enter
and
and
ja
decl
mov
dec
pusha
add
orl
cwtl
push
adc
inc
add
ret
shr
push
scas
jbe
movsl
imul
cmp
fs
mov
add
add
in
addb
pusha
add
addb
imul
out
jno
xchg
sub
int3
inc
add
arpl
push
push
pop
xchg
repz
stos
popf
dec
jp
and
cli
jp
fdivrl
je
add
dec
and
xchg
pop
je
xor
int3
sub
adc
add
enter
mov
jnp
testl
dec
mov
sbb
shlb
popf
bound
jl
push
pop
mov
xor
fstl
adc
mov
pusha
add
jle
xlat
roll
add
add
add
pop
fdivrs
lds
add
push
pop
pushf
lcall
pop
fidivs
hlt
mov
cmp
jo
into
ret
mov
pop
insl
mov
cmp
fsubl
imull
add
iret
mov
ja
into
cld
divl
add
fnstenv
mov
and
add
xlat
fsubl
pop
add
jle
in
jbe
out
xchg
test
jbe
push
add
pop
fwait
add
leave
mov
jb
xchg
fidivs
mov
add
movsl
or
fistps
out
jl
add
or
sub
add
stc
mov
lahf
push
aas
stos
add
cmp
nop
cmp
shl
aad
jmp
pop
push
outsb
mov
mov
lret
in
lcall
dec
movb
jmp
jge
mov
int3
cmp
fnstsw
popf
sbb
pop
and
outsl
pop
and
addb
jl
test
push
add
adc
mov
add
push
jl
stos
aaa
out
sbb
push
xchg
in
shll
inc
add
fisubl
cmp
orl
sub
inc
stos
test
dec
out
test
adc
enter
jmp
or
adc
mov
int3
inc
add
push
clc
addb
cmp
mov
add
push
add
inc
add
test
xor
add
outsb
lock
xorl
fmulp
dec
sub
test
int
xchg
inc
add
inc
adc
and
pusha
add
sub
inc
jl
aad
outsl
pop
push
sbb
mov
movsl
cld
ffree
add
or
pop
sahf
aam
add
dec
mov
inc
add
std
cmp
lods
je
int3
dec
or
push
shl
pop
lea
mov
in
push
dec
push
negb
inc
fldcw
fstl
out
test
jnp
cmp
out
inc
add
repz
and
arpl
jl
mov
mov
mov
inc
push
add
sub
bswap
imul
leave
sbb
mov
xor
pop
pop
data16
int
test
pop
mov
ficoms
cmp
cmc
insl
mov
adc
and
cmpsl
js
rcl
ljmp
cmpsl
cmp
pop
push
add
or
adc
cmpsl
out
add
popf
imul
add
mov
popa
ret
mov
inc
lods
mov
add
jne
ret
addb
jl
add
leave
shlb
bound
cmc
test
jne
adc
fcoml
jae
push
add
pop
or
in
and
sahf
cmpsb
xor
shrl
and
sub
pop
mov
lahf
lods
sbb
cmp
stos
insl
sbb
jmp
fldcw
in
std
dec
repz
add
into
pop
icebp
adc
add
adc
sub
aas
out
shr
ficomps
lock
adc
push
movb
movsl
pusha
add
mov
or
jl
es
jae
cmp
ret
add
mov
pop
push
ds
add
aad
cli
xchg
pushf
imul
mov
inc
add
xchg
leave
jbe
cmp
or
push
sahf
out
fsub
les
movsb
pop
jae
mov
lcall
insb
cmp
mov
aad
gs
pop
push
int3
aam
scas
sub
pop
fisubs
pop
incb
mov
int
imul
and
jl
das
in
xor
jb
es
repnz
punpcklwd
cld
cmpsb
movb
cld
fdivs
mov
test
push
push
add
push
add
fcmove
clc
mov
das
movsl
adc
sub
dec
push
shll
icebp
ljmp
mov
call
add
sarl
jb
lea
in
ja
pop
inc
xor
jg
sub
loopne
imul
jb
mov
jnp
jne
insb
sarl
sub
push
push
inc
add
movb
lods
les
push
mov
push
jl
repnz
sbb
add
enter
push
mov
lods
push
mov
sub
lahf
outsl
jge
mov
mov
inc
add
jns
les
pusha
add
inc
add
cmp
add
push
cmpsb
ficomps
push
stos
inc
imul
daa
cmc
lret
adc
inc
pop
xor
or
insb
ds
ja
frstor
out
sbb
mov
leave
mov
pop
in
dec
loope
stos
or
lock
mov
jb
cmc
add
mov
dec
fwait
fstpt
pop
imul
mov
push
mov
pop
mov
ret
rolb
pop
repz
jo
sti
push
in
add
cs
cmc
sbb
dec
push
dec
push
inc
add
setns
cmp
jg
loop
jg
dec
gs
cmp
push
test
jecxz
int
es
cmp
leave
and
cmp
repnz
push
movb
into
fisubl
movb
sbb
imul
sbb
jnp
push
nop
or
scas
stc
adc
cmp
clc
and
sbb
bound
inc
add
add
add
nop
mov
loopne
dec
lds
xchg
pushf
sub
xchg
sub
in
xor
int
sub
add
fincstp
xor
add
outsl
outsl
pop
jbe
je
pusha
add
jo
cltd
mov
das
xchg
scas
sub
gs
mov
popf
pop
rolb
js
mov
data16
jns
mov
jae
mov
jl
out
mov
jb
add
ja
xchg
test
mov
mov
inc
push
addb
and
dec
pop
out
jle
jp
rorl
mov
je
or
mov
sub
mov
xchg
pop
sub
repz
adc
mov
add
inc
add
repnz
xchg
cmp
mov
in
mov
xlat
outsl
jbe
insb
cmpsl
daa
xchg
pusha
add
into
cwtl
ja
movsb
xchg
subl
shll
mov
or
popa
ljmp
mov
add
add
mov
and
adc
sbb
push
lods
mov
xor
add
mov
out
outsb
dec
in
add
das
dec
loope
jge
pusha
add
daa
sti
imul
lret
fidivrl
add
leave
fnsave
cmpsl
push
movsl
dec
fldt
les
movsl
or
loope
pop
mov
push
xor
ja
jge
enter
add
pop
mul
dec
cmp
ss
addb
and
out
pop
mov
imul
cmpsl
insb
sbb
sub
int3
and
inc
add
stos
jo
xchg
sti
cmp
imul
inc
add
and
fldt
pop
std
lds
lods
dec
jbe
rcr
es
fcomip
aas
mov
xor
loopne
add
mov
dec
xor
aad
xchg
aam
aas
into
xor
mov
mulb
out
push
inc
add
sti
cmp
jmp
mov
icebp
mov
test
mov
cmp
lods
addb
int3
scas
clc
jns
pop
dec
adc
test
lret
xor
in
dec
dec
mov
jb
pop
xor
idivb
pop
pop
int
cmpsb
inc
add
pop
sub
mov
mov
dec
fadds
adc
add
xchg
lods
fs
or
push
ljmp
loope
fnstsw
ficoml
sbb
pop
je
lret
and
sbb
outsb
out
jb
out
scas
cmpsb
lret
mov
xchg
stc
sub
mov
repz
lods
aam
test
gs
popf
or
out
test
mov
mov
push
push
movsl
outsw
inc
add
fidivl
inc
add
dec
pop
cmp
cltd
in
pop
xor
or
jb
jae
insb
mov
aad
jae
sbb
fsubl
clc
sub
or
push
xchg
test
fsubrl
push
imull
dec
sub
push
fnstcw
les
js
add
bound
pop
push
add
jno
sti
lret
and
xchg
es
addr16
dec
mov
pushf
in
fidivs
icebp
cmpl
cltd
movsl
loopne
xchg
jmp
sti
hlt
pop
outsb
xchg
enter
sub
or
rolb
jne
movsb
or
movb
jg
add
imulb
movb
and
and
mov
pop
mov
adc
call
pop
pushf
lods
pop
mov
add
pop
jae
mov
push
popa
push
into
mov
push
ds
cmp
aas
and
orl
repnz
ds
lods
lods
dec
cmp
add
inc
test
xor
mov
pop
push
outsl
js
addb
and
cwtl
popa
jb
pop
ret
popf
xor
cli
faddl
jg
push
ss
xchg
push
push
mov
inc
add
leave
sub
insl
sbb
ljmp
add
and
cmp
mov
add
or
ljmp
jae
push
adc
xlat
push
mov
mov
sub
push
push
push
xor
push
addr16
adcl
xchg
and
add
push
and
dec
xchg
mov
int
add
hlt
adc
inc
add
add
xor
jno
ljmp
and
sub
jno
popa
push
inc
push
mov
pop
icebp
jg
inc
iret
fmuls
inc
add
mov
cmc
xchg
in
das
xor
adc
rclb
sbb
sub
jmp
mov
add
adc
add
inc
add
dec
lods
inc
add
jg
push
mov
js
ds
xchg
lret
stos
lock
lahf
xchg
pop
rep
cmc
lods
xchg
imul
pop
std
jno
dec
pusha
add
ss
push
stos
add
jle
movsb
sbb
cld
pop
mov
test
adc
test
sarb
jge
sti
inc
xchg
inc
add
push
cmp
add
sub
dec
imul
shll
add
mov
outsb
dec
jnp
jge
cld
aam
mov
daa
orl
dec
imul
adc
sub
fs
outsl
inc
add
mov
add
add
sub
add
stos
loopne
lea
mov
lods
inc
add
jp
or
add
pop
in
mov
jmp
repnz
dec
hlt
mov
xor
add
push
rolb
fmul
adc
add
or
add
or
mov
push
jno
push
sub
aas
je
into
out
push
movb
add
xchg
sbb
inc
add
add
jo
add
cmp
mov
outsl
test
ja
mov
int
decb
les
ss
add
cmp
inc
add
push
xchg
mov
rorl
cwtl
mov
add
cmp
addr16
das
adc
pop
test
subl
push
or
add
cld
int
clc
inc
dec
les
ss
mov
pop
push
or
cmp
mov
sbb
adc
or
add
add
mov
mov
ud0
add
jbe
dec
adc
mov
add
mov
lret
fwait
bnd
jecxz
xchg
shrb
mov
pop
pop
pop
movsl
sbb
add
aad
cs
ljmp
icebp
jo
loopne
cmp
jne
repnz
cmp
outsl
in
arpl
std
sbb
loopne
inc
in
movsb
and
addb
xchg
push
shl
xor
leave
and
ret
xchg
sub
ret
sti
lock
mov
js
in
mov
incl
addr16
jno
sbb
or
or
scas
rcrb
inc
add
les
ret
lods
inc
add
imul
outsl
and
xchg
fimull
mov
push
xor
push
mov
jae
add
sbb
add
xlat
and
sbb
imul
pop
adc
lds
mov
add
push
xor
cmpsb
and
add
scas
leave
out
add
mov
mov
add
fmull
pop
arpl
pop
inc
addr16
push
cmpsl
popa
jae
fldcw
fwait
mov
subl
and
push
ret
lods
jp
ljmp
iret
das
pop
mov
cmpl
loope
and
or
fwait
cmc
fdivs
cld
addb
in
and
pushf
cmpsl
mov
rorb
ljmp
mov
sub
cmp
sub
xchg
push
test
inc
add
push
push
jno
mov
ss
rolb
push
loop
inc
mov
sbb
movsb
push
add
mov
aas
xor
xor
dec
fldenv
movsb
aas
cs
pop
lret
jmp
dec
popa
lods
cmpsb
scas
je
push
lock
push
mov
mov
sub
cmp
call
xor
scas
jae
add
mov
ja
clc
xchg
push
add
push
popa
mov
mov
mov
int
in
mov
jmp
pop
aad
push
add
outsl
adc
add
jge
dec
pop
jne
mov
cwtl
leave
cmp
outsb
call
jmp
call
push
add
aad
loop
push
mov
add
and
pop
lahf
pop
mov
mov
xchg
cmp
outsb
movb
pushf
and
cmp
inc
sarl
or
push
mov
sbb
add
xor
sbb
imul
adc
in
daa
scas
xor
scas
mov
rclb
insb
jns
hlt
adc
data16
xchg
imul
mov
add
hlt
ja
lock
add
and
ret
push
add
xor
stos
mov
in
jl
lods
adc
movsl
decl
into
adc
rolb
sbb
adc
push
push
in
cmp
es
call
shrl
cltd
mov
pusha
add
enter
jne
xlat
mov
cmp
addb
ljmp
mov
adc
iret
add
mov
out
add
fdivl
jg
rolb
adc
sarl
sarb
out
enter
mov
movsb
inc
out
test
mov
mov
jecxz
cmc
adc
add
or
mov
hlt
addb
add
mov
dec
into
idiv
cmp
iret
push
lcall
push
inc
add
pop
and
dec
fistpl
rolb
movsl
jg
lahf
scas
test
mov
lock
sti
int
push
nop
and
inc
sahf
jns
mov
adc
xchg
std
pop
add
lahf
in
rcrb
mov
test
xor
mov
in
cmp
or
jge
out
in
clc
hlt
pop
jmp
outsl
adc
mov
repz
add
aaa
ljmp
loope
adc
jo
sub
fucomp
out
push
loope
add
dec
inc
push
jmp
movsl
xor
and
or
add
sbb
int3
and
mov
sbb
jmp
add
mov
and
ja
push
iret
ret
mov
pop
gs
les
dec
enter
inc
nop
jb
pop
movsb
shll
outsb
and
add
and
push
fwait
enter
stos
pop
sbb
add
push
adc
mov
das
or
divl
xor
arpl
pusha
add
sub
fs
add
aam
lock
mov
push
mov
pop
xchg
push
mov
pop
sub
xchg
mov
cmpsl
gs
or
add
dec
pop
add
add
testl
test
and
movsb
inc
cld
js
pop
xor
mov
jecxz
push
push
out
push
stc
clc
add
gs
test
out
fsubrs
in
ficoml
jecxz
movsb
xchg
pop
dec
aam
adc
sbb
mov
sub
aaa
and
push
add
inc
add
push
push
sub
mov
dec
mov
lret
push
jnp
dec
daa
es
lods
fadd
add
repnz
repz
out
mov
dec
je
test
inc
rolb
cld
pop
popf
inc
add
loope
jge
enter
add
add
sub
pop
sub
in
or
leave
dec
cmpsb
dec
mov
lock
popl
dec
jbe
ss
js
inc
add
mov
jle
pushf
js
shll
xor
or
add
mov
ljmp
lods
inc
add
hlt
pop
xchg
rcll
clc
scas
push
add
xlat
ja
dec
lahf
mov
popl
and
lahf
sub
cmp
pop
imul
out
movsb
jmp
xchg
push
dec
dec
jg
push
pop
stos
icebp
stos
call
jnp
jbe
movb
push
rorl
mov
lock
scas
in
lds
add
jg
and
or
out
test
mov
je
add
fimuls
cs
sbb
and
vrsqrtps
add
push
and
mov
mov
dec
and
orl
add
roll
mov
add
inc
into
jo
pop
lcall
outsl
push
xchg
and
icebp
push
test
fidivrs
ds
sbb
sub
fdivrs
xchg
out
cmp
add
jbe
cld
add
scas
je
add
leave
adc
rolb
mov
jo
lock
xchg
into
leave
mov
fwait
cmp
inc
sbb
ss
mov
sbb
jne
or
test
sahf
jmp
fbld
and
add
loop
jmp
adc
push
ja
and
mov
add
jmp
scas
fisttps
mov
cmpl
push
rolb
mov
addb
imul
mov
mov
mov
adcl
inc
bound
dec
addb
aad
add
test
or
or
das
hlt
scas
mov
ja
xchg
mov
sub
add
popa
cmp
xor
sbb
sub
sbb
or
pop
xor
hlt
jp
imul
push
std
insb
sahf
push
mov
inc
add
clc
loope
aad
daa
add
sub
add
fcmovb
mov
push
inc
add
gs
dec
mov
push
add
icebp
inc
mov
add
mov
out
test
dec
inc
aam
jl
movb
sbb
loopne
mov
fisubrs
push
add
sbb
add
loopne
push
adc
add
jb
pop
jns
into
je
jns
adc
xor
add
test
dec
cmp
clc
es
cmpsl
xor
inc
add
sbb
push
test
inc
mov
rorl
inc
insl
arpl
sbb
pusha
add
outsb
xchg
test
add
test
addb
rcrb
inc
add
pop
les
das
xchg
in
test
sti
pop
scas
clc
stos
test
lock
fcomps
cmc
adc
or
sahf
rep
clc
les
mov
sub
loopne
pop
test
jo
sbbl
jne
outsb
aam
add
sub
cwtl
or
fwait
jl
inc
add
sub
test
scas
pop
shrl
je
push
pop
mov
fstps
adc
rol
add
sbb
add
jae
aaa
push
in
add
es
aam
adc
dec
mov
ror
pop
int
out
daa
mov
dec
mov
lcall
outsb
insb
mov
mov
repnz
push
add
jge
iret
imul
adc
insl
mov
add
inc
imul
adc
add
add
mov
decl
stc
pusha
add
xchg
pop
arpl
ret
or
add
jne
inc
insb
sbb
push
push
imulb
add
add
jmp
mov
scas
mov
aam
dec
mov
push
js
aad
lods
adc
out
xchg
stc
ljmp
jns
ret
pop
int
mov
hlt
push
sbb
ss
xor
std
shlb
dec
or
mov
cmpsl
lcall
add
ja
test
add
jae
push
ret
mov
insb
das
fwait
xchg
xchg
push
fucomi
cs
mov
movsb
int3
imul
aam
mov
stc
mov
in
mov
push
fstpl
das
mov
adc
jb
ja
lret
aad
add
mov
mov
cld
dec
xchg
pop
jo
pop
iret
rclb
xchg
pop
test
jg
add
std
scas
xor
sub
outsb
cmp
ss
movsb
xor
pushf
push
add
hlt
fisubs
xor
cmpsl
and
mov
aad
jno
add
movsl
outsl
sbb
push
mov
mov
fdivr
lahf
cwtl
adc
int3
jmp
repnz
out
fnsave
movsl
cmpsl
hlt
push
inc
inc
rcll
bnd
add
xor
add
cmp
mov
jl
fwait
sarl
fiaddl
xchg
xchg
add
sbb
push
add
jb
jl
movsl
mov
ror
jbe
daa
lahf
add
les
or
imul
cs
shufps
out
add
negb
mov
leave
inc
and
xor
sbb
les
mov
scas
mov
adc
mov
stc
repnz
notl
or
pop
outsb
bound
repnz
or
xchg
xchg
ret
mov
and
pusha
add
and
pop
push
lds
lahf
dec
fsincos
bound
pop
cltd
xor
faddl
sbbl
mov
mov
popw
jns
in
pop
popa
fildl
add
add
addb
push
lds
insb
mov
stc
push
xchg
push
sbb
mov
mov
inc
add
mov
cmp
xor
mov
cmp
rcl
add
insb
sbb
add
mov
movb
insb
xor
out
pop
cmp
sub
xlat
add
inc
push
add
lret
xchg
dec
mov
lods
std
aas
insb
ds
imul
shll
repnz
cmp
xlat
ljmp
leave
cmp
add
jnp
sti
imul
jg
sarl
aad
sahf
pusha
add
mov
add
cwtl
leave
movsb
sub
popf
xor
jns
cmpsl
bound
xor
cmp
mov
cltd
cltd
mov
xchg
stos
aaa
jb
xor
fcoms
pop
mov
outsl
pop
sbb
jb
addb
sbb
das
out
aam
mov
adc
jbe
adc
jmp
and
add
jge
aaa
out
int3
or
mov
je
push
sub
dec
aaa
inc
add
out
stos
mov
ja
add
in
add
add
add
inc
fwait
out
pusha
add
inc
add
or
lret
in
dec
jp
mov
sub
sub
cs
cmp
add
xchg
std
sahf
mov
mov
out
test
sub
jp
pushf
leave
call
cmpl
cld
sub
mov
jl
lahf
hlt
stos
bound
push
stos
cmp
xchg
or
dec
lret
mov
fsave
aam
xor
leave
xor
aas
lahf
jne
adc
xor
fstl
fnstsw
ja
sbb
jecxz
add
lods
dec
dec
ror
lret
sbb
dec
shlb
out
adc
loop
inc
add
sub
add
insl
inc
jle
push
jne
xchg
jb
mov
xor
pop
xchg
sub
test
mov
cmp
push
sbb
fdivrp
dec
jmp
jle
cltd
lret
aam
mov
add
push
or
lret
mov
dec
fimuls
mov
hlt
mov
pop
cmc
cs
lds
sahf
xor
mov
add
js
cld
loope
and
add
pop
jmp
lods
imul
inc
add
push
dec
jmp
das
rorl
dec
pop
jle
outsb
int
add
test
or
pop
adc
shrl
out
sub
jb
and
int
dec
push
hlt
mov
add
pop
mov
add
dec
into
add
dec
loopne
pusha
add
add
mov
inc
add
int3
cld
push
jb
imul
lret
aad
sahf
sarl
jns
inc
add
cmp
mov
mov
push
and
mov
rorb
xor
outsl
arpl
inc
addb
test
mov
mov
imul
out
mov
repnz
cmp
add
xor
es
mov
pop
repz
jmp
pop
xchg
addb
pop
jmp
dec
xchg
inc
aam
out
sub
test
pop
insb
pop
pop
jnp
std
test
stos
insb
fdivrl
stc
in
lock
sub
jl
out
add
cmp
dec
and
add
les
lea
aaa
fistpll
add
add
lcall
push
idivl
inc
add
addb
mov
mov
add
sbb
pop
fdivs
cmc
cmpsb
jle
cmp
mov
pop
dec
jecxz
lds
das
inc
add
mov
mov
movb
les
fcomi
idivl
push
or
outsl
sbb
int3
dec
data16
pop
ror
icebp
push
mov
pop
and
in
adc
pop
arpl
lock
and
and
popl
iret
mov
popa
stc
and
mov
mov
and
pop
mov
cmp
inc
mov
add
dec
popa
test
jb
out
pusha
add
xchg
mov
mov
mov
or
les
addl
popf
orl
or
add
mov
xchg
arpl
mov
iret
mov
add
push
mul
fdivs
or
add
lods
jno
in
dec
add
aas
jae
xlat
jns
out
inc
sub
add
rolb
mov
cmpsl
shl
lret
sbb
mov
push
pop
ljmp
add
test
push
insl
sbb
scas
pushf
jo
pop
or
addb
mov
icebp
sbb
outsl
insl
stos
jge
in
fwait
jecxz
lea
leave
lock
add
es
mov
add
cmp
icebp
xchg
mov
mov
mov
push
add
jle
sub
pusha
add
lods
fcmovnb
add
cs
add
jp
das
push
or
add
or
or
lret
mov
cmp
or
insb
outsb
movsl
xchg
lea
jg
mov
in
jmp
cmpsl
jbe
add
std
sbb
stc
mov
in
loopne
jl
lods
int3
out
in
adc
orl
mov
repz
pop
mov
xchg
sbb
iret
orps
sub
cmc
cmp
ss
adc
pop
mov
xor
jp
ljmp
lret
mov
adc
cmp
stos
test
and
add
add
xchg
insb
mov
fwait
aad
pop
daa
xchg
sahf
loopne
cmp
insl
stos
xchg
in
ficoml
ret
or
jae
push
inc
mov
dec
and
jno
addb
jae
xlat
roll
outsb
mov
dec
mov
jbe
call
cmpsb
in
xor
push
data16
add
lret
fisttpll
in
lret
movsl
and
jb
adc
mov
das
imul
cmp
jne
lods
push
hlt
or
fs
imul
dec
jp
in
jns
cwtl
jmp
mov
bound
cli
push
add
aam
fimuls
mov
mov
loope
mov
cs
aam
int3
push
incl
adc
je
sbb
addb
mov
jne
or
mov
loop
fldcw
cmp
stos
int
data16
dec
xor
insb
push
add
sbb
sbb
xor
mov
ret
mov
es
push
movsb
daa
dec
mov
jae
inc
add
pop
enter
sub
push
test
lcall
dec
xchg
ret
call
shlb
xor
mov
sbb
adc
add
xchg
iret
push
add
push
cltd
addr16
add
shrb
mov
add
dec
xchg
out
cmpsb
push
popf
mov
cmpsl
push
and
sub
dec
mov
push
inc
add
xor
add
push
mov
dec
sub
bound
imul
jno
jne
mov
dec
add
rolb
add
ret
mov
rolb
repz
adc
fistps
sahf
jns
pop
cli
lods
or
and
mov
add
rcrl
mov
sub
add
sbb
xor
pop
or
push
sub
add
add
pop
out
xchg
frstor
xor
sahf
fstpt
xchg
cmp
add
pop
jg
cwtl
or
clc
out
movsl
or
inc
idiv
mov
arpl
aam
ret
pop
je
mov
call
mov
js
adc
or
call
es
lock
mov
or
scas
jno
add
scas
push
and
lahf
mov
ficoms
sbb
dec
mov
ror
in
pop
mov
ljmp
test
pop
pop
mov
loope
jbe
jno
or
dec
ds
mov
xchg
mov
mov
data16
sbb
test
mov
add
mov
scas
mov
push
aad
stos
dec
xchg
or
repnz
movsb
push
stos
js
lds
add
push
mov
mov
je
test
inc
mov
idivl
pusha
add
mov
mov
pop
dec
inc
add
push
mov
loopne
jp
pop
data16
inc
cmpsl
enter
dec
mov
fnsave
mov
mov
xchg
into
mov
add
push
cmc
jne
lahf
inc
add
dec
ljmp
cmp
aad
js
add
mov
stos
jb
cmp
pop
or
shll
add
les
stos
mov
enter
add
in
adc
pop
movb
add
and
or
add
arpl
fmul
xor
fistpl
or
lahf
mov
xor
out
fldl
repz
cmpsl
pop
ds
jns
add
mov
movsl
or
jmp
insl
lret
loope
add
mov
ret
jnp
mov
rolb
pusha
add
addb
xor
push
insl
push
bound
aam
imul
pop
dec
dec
xlat
fwait
cli
and
mov
int3
repnz
iret
in
jmp
adc
outsl
xor
mov
dec
lret
in
jb
sub
lea
pop
ja
sub
xchg
jo
rolb
add
out
inc
xchg
add
aam
into
jo
sub
cltd
mov
dec
adc
xchg
xor
test
add
jp
fdivr
in
int3
test
xchg
cmp
mov
add
je
xchg
je
or
mov
into
jmp
imul
sub
out
enter
mov
xchg
nop
jo
cmpsb
push
nop
mov
arpl
repz
dec
sbb
lock
xlat
movsb
call
mov
mov
add
xor
lret
movsl
cmc
xchg
add
add
test
or
and
push
pushf
and
xor
das
xor
xor
dec
repnz
add
push
add
out
imulb
insb
leave
xor
add
mov
add
ret
in
mov
call
cmp
mov
pop
pop
lock
sub
fistps
jne
dec
mov
add
push
aaa
sahf
daa
repnz
xor
mov
addb
test
rcl
sub
aam
push
repnz
scas
addb
mov
loope
pop
cmp
cld
test
jo
movl
fstps
pop
mov
and
add
adc
imul
loope
and
sti
mov
ficomps
pusha
add
push
mul
ret
mov
sub
push
push
push
jp
cmp
cwtl
mov
push
adc
adc
sub
movb
mov
lcall
pop
mov
sti
das
out
aad
add
xchg
jl
adcl
xor
adc
mov
ja
test
sbb
cmp
fstpt
add
mov
pop
pop
pop
repnz
jp
sub
sbb
push
add
loopne
mov
push
sub
fdivrl
add
pushf
jmp
ror
stos
jnp
in
and
daa
nop
inc
add
dec
sahf
pop
and
jns
in
sbb
pop
adc
jecxz
scas
xchg
cltd
mov
insl
hlt
push
or
ja
stos
outsl
mov
ret
add
add
aam
xchg
mov
pop
pop
out
das
cmp
add
jns
loopne
sub
mov
call
xchg
stos
jnp
pop
jmp
fnstenv
pusha
add
add
add
movb
add
cltd
xor
imul
call
lret
outsb
cmp
jnp
mov
sub
repz
sahf
lock
mov
pushf
arpl
sbb
cmpsl
dec
push
cmp
mov
dec
cmpsl
gs
push
addr16
cmp
out
call
aad
cmpsb
and
aas
in
roll
lock
mov
push
push
jno
jmp
xor
test
add
adc
arpl
subl
pop
in
les
addr16
mov
inc
add
cmp
arpl
inc
cmc
dec
mov
xchg
jle
mov
jb
repnz
or
add
cmp
cmp
dec
mov
mov
mov
and
lahf
xchg
mov
das
or
shl
enter
mov
ja
push
add
sti
inc
add
fisubl
cltd
xor
xchg
jle
add
test
lea
sti
cltd
jae
cmpsl
or
push
lret
lock
bound
inc
add
xor
pushf
push
mov
stos
push
and
add
dec
sub
jge
lret
adc
faddl
inc
add
fidivrl
add
movb
jb
dec
je
imul
dec
jno
testl
or
out
ficoml
or
cld
negl
add
fnsave
in
lcall
sub
push
xchg
or
mov
das
je
sarb
dec
or
jl
ret
jle
movsl
mov
xor
insl
push
cmp
sahf
loopne
push
inc
mov
adc
aad
add
pop
rolb
push
or
enter
es
dec
inc
popf
pminub
mov
lock
stc
inc
mov
sub
pop
daa
inc
mov
add
xchg
sbb
lcall
aas
imul
ljmp
roll
push
sbb
lahf
gs
mov
sahf
cmp
or
sub
dec
cmp
and
cltd
movsb
push
out
push
into
fucomip
out
scas
jl
cmp
adc
ds
lods
cmp
daa
mov
scas
lock
mov
pop
addb
inc
add
sub
in
insl
lods
cmp
rcll
pusha
add
imul
sbb
pop
sub
jg
push
imul
decl
cmp
mov
add
cwtl
inc
add
inc
add
pop
jo
add
aam
push
add
mov
cmp
mov
ret
lods
aaa
cmc
lret
add
js
dec
stos
repnz
xchg
xchg
mov
xchg
scas
xor
addb
das
icebp
mov
mov
cmp
fldenv
cmp
por
cmp
test
sub
or
jmp
jg
lret
rcrl
xchg
loop
cltd
fisubs
add
add
shlb
jmp
push
arpl
pop
mov
jbe
insb
adc
xchg
xor
fistpl
iret
ret
and
not
xchg
mov
and
adc
jbe
movsl
jno
cmp
dec
adc
jge
push
add
lods
sarl
js
sbb
sbb
add
mov
jnp
int
dec
movsb
xchg
ret
add
fsubl
sbb
sbb
xor
push
rorb
mov
add
shl
mov
push
movb
mov
out
sub
outsl
lahf
rorl
xor
inc
add
mov
ffreep
add
scas
stos
repnz
mov
out
je
cmp
cmc
addb
stos
push
inc
jge
add
rorb
jae
aad
jmp
lcall
sbb
push
test
mov
je
movsl
lret
repz
xchg
fbld
rcrl
mov
shrb
and
cmpsl
andl
paddsw
add
push
call
nop
stos
push
sub
addb
rcrb
adc
aaa
dec
mov
push
jge
add
test
and
sub
xor
int
enter
push
xchg
addl
les
leave
pop
cmp
mov
in
or
push
mov
scas
mov
add
call
mov
mov
add
insl
mov
mov
cmp
fucomi
aaa
popa
call
xor
test
dec
rcll
fsub
ret
add
sbb
iret
out
push
cmpsb
test
xor
add
rolb
or
add
outsb
fidivrs
test
loop,pt
inc
cmp
jecxz
add
test
imul
popf
test
add
loope
in
jg
sub
adc
and
imul
push
insb
gs
cmp
add
mov
xor
ds
jl
sbb
insl
and
cli
lret
push
inc
imul
outsl
sub
dec
imul
xchg
rcrb
repnz
add
add
jnp
sbb
or
dec
sub
stos
sbbl
cmp
add
imul
leave
iret
rolb
cmp
repz
int3
push
mov
sub
jl
mov
cmp
mov
call
sbb
inc
je
popf
fwait
stc
dec
ljmp
loop
je
test
in
adcl
mov
xchg
jbe
xor
add
fldt
jnp
in
mov
and
aad
push
outsl
int
adc
cmp
sub
sub
mov
mov
or
fnsave
imul
fsubrl
out
out
inc
push
fstps
mov
pop
test
add
fwait
cmp
push
or
sbb
xlat
out
into
cmc
daa
and
or
and
add
sti
jbe
les
or
jnp
xorl
rcrb
js
repz
push
popf
cmc
arpl
sub
mov
test
cltd
xchg
xchg
inc
add
add
add
cmp
pop
dec
sub
add
and
push
add
in
add
ret
inc
nop
add
testb
shlb
or
mov
pop
in
stos
clc
jl
mov
pop
mov
pushf
mov
cmp
out
int
shl
sbb
inc
add
mov
mov
dec
pop
sbb
daa
daa
adc
mov
xchg
