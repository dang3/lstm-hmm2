add
add
add
add
xor
inc
inc
inc
inc
inc
add
push
push
lcall
lcall
lcall
add
add
testl
add
add
addb
add
add
add
add
xor
xor
xor
xor
add
add
add
addr16
mov
mov
sbb
sbb
sbb
add
add
lock
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
addl
add
dec
dec
dec
dec
push
push
push
push
push
push
push
add
add
add
add
int3
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
add
sti
sti
sti
sti
sti
sti
sti
sti
add
cltd
cltd
cltd
cltd
cltd
cltd
inc
inc
inc
inc
inc
inc
add
or
or
in
in
in
in
in
in
xor
xor
xor
xor
xor
xor
xor
add
repnz
imul
add
pop
pop
and
and
and
and
and
and
and
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
gs
add
cmp
cmp
cmp
add
add
add
sub
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
add
add
add
add
add
movsb
movsb
add
repnz
outsb
outsb
repnz
int3
int3
add
aam
aam
add
push
push
push
push
loope
loope
loope
loope
loope
add
add
insl
add
mov
dec
dec
dec
add
add
add
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
addl
add
add
add
add
dec
pop
add
mov
mov
mov
mov
mov
mov
add
add
or
or
or
or
or
adc
adc
add
jp
jp
adc
adc
adc
add
pop
pop
pop
pop
pop
pop
add
add
add
jno
add
inc
inc
inc
inc
inc
inc
inc
adc
add
cs
faddl
add
pop
pop
pop
add
ss
add
mov
stos
stos
stos
stos
stos
stos
stos
stos
stos
outsb
outsb
outsb
outsb
add
add
add
add
add
add
add
sbb
sbb
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
pop
pop
pop
pop
pop
pop
mov
add
add
add
stc
add
cmpsb
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
out
out
out
out
add
arpl
arpl
arpl
arpl
arpl
add
add
fadds
add
add
mov
add
mov
add
add
sti
xor
xor
add
add
add
jg
jg
add
dec
dec
dec
dec
dec
pop
pop
pop
pop
fcomp
fcomp
fcomp
fcomp
add
add
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
cmp
cmp
mov
mov
add
add
jmp
jmp
inc
add
mov
das
das
das
das
das
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
jle
jle
add
add
add
sbb
sbb
cld
cld
cld
cld
add
sti
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
jnp
xchg
xchg
add
sub
add
add
add
dec
dec
dec
dec
dec
dec
dec
lods
lods
lods
lods
lods
mov
mov
arpl
arpl
arpl
js
inc
inc
inc
inc
inc
inc
inc
add
div
add
fiadds
add
add
add
movsl
test
movl
and
mov
sldt
add
sbb
sbb
sbb
add
addb
addb
addb
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
cmp
add
add
loope
loope
loope
loope
loope
loope
loope
cmpsb
cmpsb
cmpsb
cmpsb
add
add
clc
clc
clc
clc
clc
clc
je
je
add
add
mov
add
add
jae
jae
xchg
add
inc
inc
inc
inc
inc
inc
inc
inc
mov
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
add
add
add
jae
jae
jae
add
or
or
add
movsl
movsl
add
add
add
add
div
div
div
add
insb
insb
insb
insb
insb
insb
insb
roll
rcl
rcl
out
out
out
out
out
sti
sti
sti
sti
sti
add
add
add
sbb
sbb
ja
xchg
xchg
add
add
add
lods
sahf
sahf
sahf
sahf
sahf
sahf
add
addr16
out
aas
aas
add
push
add
add
add
addr16
xchg
xchg
xchg
xchg
xchg
add
cmp
add
sbb
sbb
sbb
sbb
sbb
sbb
loop
add
add
add
add
dec
add
add
or
or
dec
dec
dec
filds
add
add
xchg
xchg
xchg
add
adc
mov
cld
cld
cld
add
je
push
push
push
push
loopne
loopne
loopne
loopne
loopne
loopne
add
add
add
add
out
out
out
out
out
out
add
add
pop
pop
pop
pop
pop
pop
xchg
add
add
or
or
or
or
or
add
sbb
sbb
add
dec
dec
dec
dec
add
add
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
add
addb
ljmp
add
add
inc
inc
inc
inc
inc
inc
inc
mov
add
aam
aam
aam
aam
aam
aam
aam
aam
add
add
mov
add
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
add
pop
pop
pop
pop
pop
pop
xchg
cmp
cmp
cmp
cmp
add
adc
adc
adc
add
int
add
pop
pop
pop
pop
pop
add
add
rcl
roll
add
sub
sub
sub
add
add
rcl
shl
pop
pop
pop
pop
add
cmpl
add
div
div
div
div
div
testb
add
add
add
add
repz
adc
adc
push
push
push
push
push
push
push
adc
adc
adc
adc
add
add
les
inc
inc
inc
add
cmp
add
add
enter
cli
cli
cli
cli
add
mov
cmp
cmp
add
add
add
mov
mov
mov
add
add
mov
mov
addr16
push
jns
add
sub
mov
rcl
ds
xlat
xlat
xlat
xlat
xlat
xlat
add
add
rol
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
nop
add
add
mov
loope
loope
loope
loope
loope
loope
loope
loope
add
add
add
cmp
cmp
add
add
enter
in
add
out
out
out
out
out
rol
rol
rol
rcrb
pop
pop
pop
pop
add
add
add
push
push
push
cmp
sub
sub
xor
add
repnz
add
add
xchg
pop
pop
pop
pop
and
add
add
inc
inc
sbb
sbb
add
outsl
addl
add
add
lds
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
inc
inc
inc
inc
inc
add
add
and
and
add
repz
adc
add
add
add
imul
add
popf
popf
add
add
cltd
cltd
cltd
cltd
sahf
sahf
sahf
sahf
sahf
and
stc
add
and
and
and
and
add
add
add
out
add
nop
nop
nop
nop
push
push
arpl
arpl
arpl
arpl
arpl
add
add
mov
add
add
push
push
push
push
push
add
add
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
add
add
add
cld
ja
ja
ja
add
addl
mov
mov
add
rcl
roll
add
popl
add
inc
inc
inc
inc
inc
inc
inc
rcl
rcl
rcl
rolb
add
add
sbb
sbb
sbb
js
jne
jne
mov
add
add
add
add
add
add
push
push
push
push
push
push
push
les
add
sub
sub
sub
sub
sub
add
add
fs
add
xor
xor
lock
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
mov
sub
daa
daa
daa
daa
sub
add
add
gs
xchg
xchg
xchg
xchg
xchg
hlt
hlt
hlt
pop
pop
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
add
add
add
jmp
jmp
jmp
add
add
add
add
mov
cmp
xor
xor
xor
jb
jb
jb
jb
jb
jb
jb
add
xchg
xchg
xchg
xchg
xchg
xchg
add
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
mov
mov
add
mov
add
add
xchg
xchg
xchg
xchg
addb
dec
add
enter
enter
dec
addl
addl
addl
addl
sub
test
js
js
js
js
js
ret
ret
ret
ret
ret
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
dec
add
add
add
inc
inc
inc
inc
inc
add
addr16
add
add
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
in
in
in
in
in
in
in
or
pop
pop
pop
pop
pop
pop
pop
add
addb
addb
add
add
in
add
cmp
addb
rcl
push
push
push
push
push
push
push
push
push
push
push
push
push
add
cmpsl
cmpsl
and
and
and
add
add
add
add
add
lods
lods
lods
lods
add
add
loope
loope
loope
loope
add
pop
pop
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
imul
arpl
mov
mov
or
or
or
add
add
int
int
int
add
add
add
adc
xor
xor
into
add
mov
pop
pop
pop
pop
pop
addl
add
add
loopne
loopne
loopne
cmpsb
cmpsb
cmpsb
cmpsb
add
add
add
add
add
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
sub
add
add
inc
inc
inc
pop
pop
lret
add
add
add
add
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xchg
add
js
add
iret
iret
iret
iret
iret
add
dec
dec
dec
fsubl
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
sub
jecxz
gs
add
add
mov
mov
mov
mov
add
sbb
add
add
add
add
inc
inc
inc
nop
nop
nop
nop
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
dec
dec
dec
dec
dec
dec
dec
jo
add
jns
jns
jns
jns
jns
add
sub
sub
sub
and
and
icebp
icebp
icebp
icebp
icebp
icebp
inc
inc
add
ds
div
div
div
div
div
not
jbe
and
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
pop
test
test
test
test
test
sbb
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
addl
addl
scas
scas
scas
scas
incb
add
add
leave
leave
leave
leave
leave
leave
leave
rcl
rcl
rcl
rcl
add
cmp
cmp
div
div
div
div
inc
inc
inc
inc
inc
add
add
add
dec
dec
repz
add
add
mov
add
add
rolb
add
mov
mov
mov
add
add
dec
dec
add
add
fsubrl
add
add
add
cmp
add
add
in
in
add
add
adc
adc
add
add
jo
jo
jo
mov
mov
mov
sbb
sbb
inc
mov
mov
rol
xchg
add
add
add
popl
add
jmp
jmp
jmp
jmp
add
add
ret
ret
ret
or
sub
sub
sub
sub
add
add
faddl
push
push
push
push
push
push
add
and
and
and
and
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
xor
xor
xor
add
ss
lds
add
add
stos
stos
stos
movsb
movsb
movsb
movsb
movsb
movsb
add
fstp
fstp
fstp
fstp
fstp
addl
addl
addl
add
xor
add
add
pop
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
ds
and
and
and
and
and
add
add
sub
sub
loope
add
add
xor
xor
xor
xor
add
stc
adc
insl
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
mov
add
pop
pop
pop
pop
pop
pop
add
jno
jno
jno
jno
jno
jno
jno
jno
jno
add
add
add
add
add
arpl
add
add
jno
fcmovnu
fcmovnu
fildl
add
lret
xor
xor
xor
xor
xor
xor
xor
xor
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
addl
stos
stos
stos
stos
stos
stos
add
data16
xor
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
roll
add
das
das
das
das
das
das
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
je
add
add
add
add
out
pop
fcomp
fcomp
fcomp
fcomp
fcomp
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
push
push
push
push
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pusha
pusha
pusha
pusha
pusha
pusha
add
mov
mov
mov
add
xchg
xchg
xchg
xchg
xchg
add
add
dec
dec
dec
add
add
pop
mov
mov
add
in
in
in
add
mov
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
jmp
repnz
add
add
pop
pop
pop
pop
pop
pop
pop
add
les
add
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fldl
add
add
add
add
dec
add
add
add
add
add
add
mov
js
js
js
js
xor
cltd
mov
mov
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
xchg
xchg
xchg
xchg
add
mov
push
push
push
push
push
add
sbb
sbb
sbb
test
popl
add
add
add
add
test
test
test
test
test
das
das
add
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
rol
shr
imul
inc
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
add
int
int
int
int
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
test
sbb
add
or
or
or
or
or
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
dec
dec
add
xchg
xchg
xchg
xchg
add
add
add
or
or
add
add
add
rcl
rcl
shl
add
add
add
and
and
add
aad
add
div
div
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
jo
jo
jo
add
add
jb
cmp
add
add
add
and
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jge
add
add
roll
add
add
jnp
jnp
jnp
jnp
add
add
pop
add
mov
mov
mov
add
add
sub
sub
sub
or
jmp
jmp
add
add
in
in
in
in
in
in
in
in
in
in
in
in
add
add
add
add
adc
sbb
add
add
mov
mov
mov
mov
add
add
add
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
ret
ret
ret
ret
ret
ret
ret
ret
add
add
div
add
add
div
div
div
div
div
div
div
div
div
div
div
div
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
jge
jge
jge
jge
mov
add
add
into
into
into
into
into
into
into
add
add
and
and
and
and
and
rcl
repnz
loopne
add
cmp
add
add
add
mov
mov
div
div
testl
lock
mov
or
or
or
or
or
or
or
push
push
add
add
add
aas
and
and
and
and
and
add
add
aaa
aaa
aaa
aaa
cmp
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
adc
push
cmp
push
shld
and
add
add
mov
insl
xorl
add
xchg
mov
sub
add
add
movsb
add
xchg
push
add
ficompl
inc
shl
lods
add
pop
mov
mov
iret
pop
xchg
mov
call
fldcw
std
into
xchg
sbbl
fsubr
imul
jecxz
add
std
push
into
sub
add
add
add
sbb
add
outsl
xor
push
pop
or
and
outsb
jo
in
push
add
mov
ret
aad
sahf
sti
bound
shr
jg
xchg
add
mov
add
add
push
xchg
add
and
add
ja
fstps
add
addb
sub
add
xchg
sbb
push
int3
pop
xor
add
mov
andl
add
adc
aas
addr16
cmc
mov
dec
ret
mov
and
jge
nop
imul
add
pop
dec
push
or
add
lods
add
adc
push
movsl
xchg
add
or
add
lcallw
aas
or
dec
xor
cli
inc
lods
add
mov
mov
je
add
cwtl
dec
incb
out
jecxz
push
popa
pop
gs
sbb
pop
lock
test
insl
mov
addb
aad
add
sub
add
xor
add
sub
inc
add
cld
in
addb
sbb
movsl
mov
shll
add
dec
std
icebp
dec
loope
ja
and
in
mov
shl
lods
cwtl
mov
cmpl
mov
mov
add
xor
xchg
lret
das
scas
mov
adc
mov
add
out
enter
xchg
sbb
fwait
and
add
movsl
and
and
add
mov
add
repz
add
adc
call
fucomip
cmpsb
add
imul
xor
cmp
add
and
add
jmp
sahf
or
add
nop
or
add
xlat
in
jp
loope
mov
xor
pop
mov
mov
add
aam
divl
push
in
cld
cmp
in
call
lods
add
push
mov
test
jle
popa
mov
negb
scas
add
lret
jp
pop
and
arpl
outsb
pop
mov
lcall
ljmp
mov
push
mov
cmp
xlat
sbb
stos
add
push
and
out
cld
dec
push
shl
leave
dec
or
ljmp
and
jnp
mov
add
sbb
cmp
mov
imul
push
xor
aaa
test
or
push
test
push
push
xchg
repnz
mov
xchg
inc
mov
add
aad
mov
fldt
mov
adc
sub
add
add
add
sub
add
enter
mov
add
or
push
insl
in
inc
mov
add
jmp
xor
jb
les
int3
daa
arpl
sub
add
insl
cmp
mov
in
aas
in
mov
add
les
sbb
inc
sub
add
cwtl
mov
mov
dec
insb
jnp
add
insb
sarl
pop
adc
xchg
fcomi
ljmp
icebp
add
cmc
inc
jb
pop
and
pop
mov
addb
out
pop
cmp
pop
sti
cwtl
add
mov
addb
sarb
mov
add
sub
add
pop
push
daa
cmpsl
xchg
cmp
mov
and
add
xor
in
xchg
jb
andl
jle
lods
add
jle
rclb
out
and
add
scas
add
or
add
mov
or
adc
sub
add
imul
add
insl
cwtl
pop
cltd
xlat
insl
shll
mov
iret
loop
xor
outsb
xchg
add
xchg
add
or
add
add
movsb
add
or
sub
add
add
jge
jne
jle
fdivs
xor
add
add
or
add
push
call
add
fdivs
sarb
push
cwtl
ljmp
sbb
mov
imul
fcmovne
jl
addb
pop
mov
mov
sbb
add
pop
add
add
jo
popa
pushf
out
jne
sub
pop
loopne
fidivl
ret
mov
popa
fimuls
jmp
jg
xor
data16
add
xchg
and
add
test
subl
fidivrs
mov
inc
cmp
mov
cwtl
outsb
jl
mov
sub
add
jo
jno
in
les
loope
pop
bound
add
sub
add
gs
addb
clc
jbe
and
fmull
mov
push
add
jg
loopne
outsb
mov
add
lods
cmp
fdivl
pop
out
stos
addr16
stos
add
cmp
push
add
push
sbb
cmpsb
add
pop
out
cmpsb
add
std
into
or
add
add
add
cmp
clc
cmp
add
xchg
js
add
inc
fidivrl
shr
shll
or
aam
out
dec
pop
pop
xor
cltd
or
add
mov
jbe
push
daa
call
xor
aas
or
add
dec
mov
add
test
sub
jmp
push
adc
add
push
cmp
or
add
add
fs
cmp
shrb
add
sbb
add
cli
or
add
repz
add
sbb
ret
call
or
xchg
aad
adcl
cmp
popa
mov
in
loopne
dec
dec
sub
add
hlt
arpl
jne
sbb
jle
enter
les
call
sarl
add
mov
ficompl
or
std
sbb
mov
aaa
xchg
xlat
lcall
loope
in
test
add
add
scas
mov
addb
rcrl
or
add
add
pushf
fwait
mov
cmp
xor
or
add
les
cmpsb
add
fistps
cld
movsl
cmpsl
rcll
pushf
aam
jmp
popaw
cmc
lcall
imul
adc
movb
int3
jbe
xchg
insb
pop
add
add
sbb
movsb
add
psubsw
xchg
ja
push
loopne
sbb
cmp
and
add
insb
add
into
movb
jl
mov
mov
add
aam
mov
cmp
xorl
add
pop
sbb
inc
pushf
mov
out
out
clc
pop
bnd
and
jo
sbb
cmp
sbb
add
arpl
add
sbb
enter
fstp
add
add
push
add
add
mov
cmpsl
xchg
sub
add
cmpsb
add
push
dec
push
mov
and
add
xchg
adc
cmpsl
mov
xchg
add
movsl
sbb
or
rcr
mov
mov
add
out
pop
push
push
add
xchg
filds
popf
jg
fwait
mov
add
out
in
ds
sub
data16
add
mov
stc
sarl
test
cwtl
sti
das
mov
ja
add
cld
cmp
mov
xor
mov
add
orl
add
add
sub
add
cmp
add
jnp
rclb
or
bound
aad
add
out
add
pop
jno
add
xchg
in
and
mov
jns
je
into
les
cmp
mov
xchg
repz
pop
cmc
pop
scas
sub
add
mov
jge
xchg
je
stos
add
mov
add
pop
hlt
std
loope
loop
mov
test
add
out
mov
lahf
pop
jae
aam
add
xlat
pop
bound
xchg
sahf
gs
inc
imul
pop
incl
js
jae
xchg
movsl
int3
pop
std
push
fcomip
sarb
ret
dec
push
add
dec
mov
push
mov
pop
daa
repz
add
enter
jmp
or
aam
xchg
jae
add
repz
add
add
insb
xchg
rcll
add
mov
add
lcall
add
and
xor
cmp
push
fistpl
add
or
add
call
fisttpll
push
adc
gs
movl
add
mov
add
push
ds
push
pop
mov
and
sbb
and
add
inc
jle
or
add
xlat
pop
lods
inc
inc
gs
aas
in
xchg
rcrb
add
jl
pushf
dec
inc
in
int
lods
cmp
xchg
or
cmp
jecxz
je
mov
aaa
jbe
and
and
add
addb
xorl
daa
mov
pusha
cmp
popa
or
add
addb
and
add
xchg
push
xchg
add
adc
jns
mov
fwait
push
cld
enter
iret
dec
and
sahf
lcall
add
dec
frstor
fiadds
sub
add
mov
ja
popa
movsl
je
add
pop
and
add
or
add
add
lret
pop
loop
add
push
add
inc
jb
rolb
add
dec
int
add
push
cmpsl
fnstenv
int3
mov
push
sub
rol
daa
aaa
add
movsb
add
lods
add
and
add
sub
add
std
mov
repz
or
sbb
pop
imul
pop
push
or
add
push
das
mov
rclb
push
outsl
les
inc
mov
add
sub
jne
movsl
add
add
add
cmpsb
add
ljmp
dec
mov
outsb
mov
fimuls
cltd
mov
add
idiv
shrb
mov
std
xchg
add
cmpsb
add
scas
add
shrb
mov
add
mov
add
jecxz
mov
outsl
clc
xor
sbb
jnp
out
and
add
sbb
dec
icebp
jb
fmull
cmp
add
xor
push
shlb
popa
pop
rcrb
jg
mov
jge
xlat
cmp
add
mov
cltd
movsl
add
lea
add
add
xchg
insl
imulb
daa
push
lahf
rorl
add
push
pushf
inc
fwait
cmp
xchg
xor
out
adc
push
jae
lods
add
movsl
sbb
add
jne
lods
add
push
pop
leave
out
push
imul
add
mov
inc
fsubrl
fwait
popa
or
push
fcmovbe
lds
mov
mov
fwait
cmpsb
add
call
movsb
add
outsb
movsl
sbb
adc
aas
lods
add
adc
addb
rcrb
jnp
adc
and
add
add
add
jnp
add
mov
add
insl
mov
add
into
mov
in
add
jge
add
mov
jo
or
add
mov
int3
push
dec
mov
fsubs
add
fnstcw
jp
mov
jae
add
pop
loope
out
out
mov
fdivp
sub
mov
iret
fmulp
enter
mov
pop
xor
xor
jo
pusha
or
add
and
add
aas
in
dec
lret
sub
dec
inc
xchg
jbe
cld
mov
add
adc
inc
mov
jae
int
add
sti
mov
aaa
jo
xchg
add
xlat
adc
adc
dec
xchg
pusha
test
add
add
sub
pushf
je
add
mov
dec
cmc
xor
fcmovnbe
push
add
les
iret
stc
xor
scas
add
jge
pop
adc
mov
lea
add
lock
mov
add
pop
or
mov
xchg
popf
cli
jg
add
sbb
imul
jl
add
add
sbb
cltd
lock
js
inc
or
test
mov
sbb
dec
add
pop
hlt
cltd
cwtl
and
add
mov
sub
mov
add
rorb
cmpsl
mov
add
icebp
adc
add
push
js
js
lds
add
mov
add
jns
nop
mov
ror
sbb
fnstsw
sbb
push
adc
add
pop
xlat
sub
add
add
add
lret
xor
repnz
insl
out
dec
cmp
int3
out
push
hlt
jge
cltd
in
push
xchg
jle
outsl
jb
repz
add
bound
add
jp
test
pop
and
jge
addb
or
add
popf
inc
insl
dec
fdivs
dec
lods
add
or
add
nop
mov
gs
sub
insb
mov
fnstcw
push
add
data16
jnp
xchg
js
add
sub
gs
add
mov
and
add
shlb
mov
jmp
cld
push
add
jl
add
scas
imul
add
test
add
inc
mov
sub
adc
aam
and
test
add
inc
and
add
cli
das
dec
scas
add
call
stos
add
dec
pop
sbb
jns
jge
sbb
xchg
mov
add
jne
fldl
xchg
loope
jb
fisttpl
test
add
add
or
add
sbb
mov
add
adc
arpl
mov
addb
mov
add
fcomps
in
push
mov
out
add
mov
add
add
xchg
dec
pop
or
add
mov
and
add
xlat
mov
or
mov
add
dec
lahf
ljmp
aas
or
add
add
add
inc
das
jne
movsl
mov
add
mov
ret
loope
inc
fdivs
out
sub
add
and
js
out
sbb
imull
add
and
add
popf
dec
movsl
cltd
popa
fucom
outsb
aaa
mov
add
dec
mov
mov
sbb
jl
adc
add
jbe
xor
ficoms
cmpsb
add
mov
cmpsl
ljmp
dec
sbb
cmp
dec
mov
test
sub
add
dec
pop
pushl
js
and
add
adc
mov
call
and
add
out
jne
xchg
inc
repz
xor
add
fwait
pop
scas
add
cwtl
dec
fsubr
cmp
adc
lret
add
dec
das
das
cmp
cli
addb
enter
xlat
pop
pop
out
addb
pop
test
into
mov
and
push
out
add
mov
xor
ljmp
mov
ffree
movsb
add
fdivs
ss
jbe
imul
add
data16
ljmp
fiadds
cmp
add
repz
fstps
out
jmp
add
pop
jp
out
xchg
push
jmp
push
mov
add
rcr
xor
gs
lods
movsl
lret
mov
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
sbb
jb
jg
add
mov
rcr
add
mov
pop
inc
sbb
cmp
sub
add
add
inc
pop
aas
xor
sub
add
sbb
aam
xchg
add
add
jno
out
sti
sbb
aas
in
lahf
mov
add
add
nop
xchg
jle
in
jg
xchg
dec
push
cmpsl
mov
sub
imul
test
cld
sbb
mov
out
or
add
leave
sbb
add
dec
pop
dec
aas
jmp
je
test
je
shrl
pop
roll
add
rcr
add
xchg
sub
add
out
repz
dec
inc
out
movsl
inc
add
xchg
push
add
add
je
outsb
dec
adc
cmc
lcall
sbb
mov
add
mov
add
mov
repnz
pop
aaa
adc
popl
lret
outsl
addb
mov
xor
cmpsl
insl
or
fmull
jecxz
ficoms
jp
imul
add
addr16
aas
or
add
add
mov
mov
pushl
add
push
add
and
outsb
push
add
pop
movl
cmpsl
sub
fdivrl
lret
imul
add
lret
add
icebp
mov
add
imul
inc
mov
aaa
orl
mov
add
jle
push
cmc
cmp
bound
cld
mov
add
xchg
pop
mov
out
add
lock
xchg
and
add
sub
add
das
pop
adc
or
mov
add
push
mov
xchg
mov
loope
add
mov
dec
xor
add
push
les
sbb
sti
push
add
mov
add
mov
mov
xchg
mov
xchg
dec
jno
std
test
je
jecxz
std
sbb
ror
push
add
jg
add
test
add
rolb
inc
jnp
sti
jne
pop
movsb
add
sti
jne
arpl
cmp
cmp
pop
loop
outsb
mov
add
mov
pop
cltd
outsl
fldenv
scas
pop
repnz
xor
call
out
xor
je
imul
jno
inc
js
daa
mov
add
lods
add
sub
ja
adc
add
mov
adc
daa
aad
cld
add
add
jnp
cmp
movsl
cmp
sti
mov
add
fimuls
mov
xchg
add
dec
rcr
add
push
jne
aas
movsb
add
jge
mov
shr
and
add
add
xchg
sahf
fwait
mov
add
loop
add
fsubrl
adc
dec
enter
les
sbb
loop
shlb
int3
dec
cld
cwtl
jmp
xor
add
in
inc
push
cli
addb
dec
in
add
movsb
add
testl
shrl
add
xor
aad
pop
inc
scas
lahf
pusha
fsubs
add
das
scas
add
in
fildl
xchg
dec
or
add
xor
mov
add
mov
lock
push
add
out
fisubl
enter
add
ss
lods
add
mov
and
adc
lcall
imul
sbb
pushf
std
mov
call
jae
xor
into
clc
sub
add
add
incb
add
add
add
pushf
jnp
add
test
add
test
stos
add
push
fs
sub
add
fwait
sub
int3
pushf
subl
pop
inc
aam
jmp
hlt
inc
lock
repnz
add
jle
lds
cmp
jns
push
loope
adcl
sbb
cmc
pop
bswap
test
add
sub
jb
inc
mov
and
add
js
jecxz
jns
mov
add
cmp
insb
sub
add
aam
add
mov
lcall
dec
and
in
cmp
and
add
jl
push
and
add
lret
out
addr16
dec
in
ret
mov
add
lahf
mov
jge
add
sbb
dec
out
into
movsl
dec
loope
imul
add
jns
lret
insl
mov
jmp
cmp
add
push
xor
insb
mov
ficoms
cmp
dec
inc
movsl
adc
loopne
push
cmpsl
lea
mov
inc
fisubs
lods
shlb
les
in
push
sub
add
add
mov
add
xor
out
adc
loope
rorl
add
clc
jecxz
add
add
add
add
jle
jne
add
cli
jecxz
pop
mov
sbb
pop
hlt
add
dec
js
push
pop
cmp
add
nop
mov
inc
sbb
jg
mov
jmp
lret
mov
push
iret
adc
les
add
add
push
push
out
add
aas
add
mov
out
fcompl
and
mov
jmp
mov
add
dec
cmpsb
add
jae
subl
cmc
out
jge
xor
ret
mov
fwait
aas
mov
add
mov
mov
movsb
add
jge
cltd
sub
add
inc
incl
add
bound
inc
mov
push
xlat
xchg
mov
pop
aaa
ds
cmp
pop
push
enter
mov
sbb
gs
add
jb
aad
or
lret
mov
jae
sub
add
dec
xchg
push
xor
add
mov
add
add
cmp
add
out
mov
and
pop
fidivl
mov
add
mov
mov
icebp
jecxz
gs
add
add
add
add
cmp
in
or
add
rcl
repz
cmp
addb
pop
mov
add
inc
rorb
add
jecxz
add
scas
add
add
cltd
enter
add
sbb
iret
push
inc
pop
pop
and
add
test
add
xor
test
add
cwtl
je
jbe
mov
lock
add
xchg
aaa
rcrl
shrb
add
xchg
mov
add
repnz
leave
mov
add
or
add
and
add
fldcw
je
dec
fwait
lods
jge
data16
add
fdivrl
mov
out
jne
jl
dec
jae
add
inc
mov
leave
xor
inc
inc
pop
fwait
xchg
xor
gs
int
xchg
arpl
mov
in
xchg
std
sarb
lods
sbb
and
add
xchg
fstpt
loopne
out
mov
add
enter
dec
addb
mov
add
inc
jecxz
cltd
bound
jecxz
sbb
lret
lods
add
cmp
in
sbb
cld
lea
add
sub
lods
out
sahf
adcl
popf
idivb
dec
repnz
sbb
dec
daa
loope
stos
add
bound
mov
sete
or
add
cmp
add
cmc
lds
xchg
shll
stos
divl
scas
test
add
mov
add
sbb
pop
mov
jae
add
repnz
mov
ljmp
add
and
add
add
push
lds
add
lret
add
push
mov
fstpt
testb
xchg
and
add
sub
add
pop
cmp
or
add
add
jno
lcall
inc
dec
cmc
or
add
xorl
add
repnz
add
add
data16
dec
pop
insl
push
push
rcrb
inc
jb
mov
pop
xchg
les
add
jae
add
push
push
jbe
jl
std
call
out
in
cmpsl
sbb
or
adc
add
mov
outsl
les
out
push
jmp
mov
dec
bound
adc
lahf
inc
bound
js
add
mov
leave
pop
or
add
fs
js
adc
cmp
add
insb
aad
mov
setb
add
add
add
inc
sbb
add
loopne
hlt
mov
add
clc
and
ljmp
aad
fldl
cmp
out
add
cmp
add
add
add
js
adc
cld
jo
add
mov
pusha
ljmp
in
add
add
jne
jmp
add
cmp
std
int3
jbe
ss
lods
add
imul
mov
push
add
popl
add
repz
int
fmuls
xor
loop
mov
in
cltd
and
add
add
sbb
pop
mov
mov
mov
sahf
std
lods
push
push
cmc
icebp
inc
shrl
pop
pop
daa
aaa
repz
mov
jmp
nop
outsb
mov
dec
sbb
and
add
add
push
add
add
add
out
mov
xchg
add
add
insb
mov
stos
fnop
jo
inc
out
fistpll
ror
mov
push
add
jg
repnz
ret
aaa
xor
fucomip
stos
add
jo
add
add
add
fistpll
add
movsb
add
lock
rcl
mov
add
add
adc
js
lcall
add
ret
cld
mov
call
jecxz
add
mov
mov
xchg
roll
out
icebp
mov
add
and
mov
add
pop
gs
pop
popfw
pop
js
inc
xor
pop
jge
aam
dec
pusha
xchg
fdivrs
test
loop
enter
ret
rorb
jo
test
add
add
mov
pop
add
insl
mov
add
mov
and
loopne
adc
jns
add
dec
xlat
rolb
lret
shrl
scas
xor
loopne
sti
add
mov
stos
add
push
xchg
outsl
test
test
add
mov
or
add
sbb
mov
mov
in
enter
rcll
xchg
into
mov
add
xchg
rcpps
dec
pusha
idivl
ret
imul
add
sarb
add
movsl
xchg
add
test
push
lcall
pop
mov
cmp
sbb
gs
or
add
and
add
mov
sub
add
sbb
ret
xchg
ret
inc
fs
jno
ret
and
add
push
xor
lcall
jns
test
call
loop
add
mov
add
mov
add
push
je
addr16
ss
lods
xor
or
add
lret
and
add
lods
lret
lret
xchg
and
add
cwtl
add
rol
mov
punpckhwd
xor
pop
push
or
add
pop
sbb
add
out
add
test
add
adc
daa
ljmp
push
xchg
gs
and
movsl
jle
ret
cltd
push
add
repnz
mov
add
add
lds
leave
jge
xlat
daa
sti
call
jg
add
xchg
add
add
or
add
add
or
add
clc
jo
pop
andl
rolb
in
adc
add
mov
cmp
add
sub
add
stos
leave
addb
adc
jle
jnp
push
scas
daa
xchg
in
icebp
or
add
add
inc
aaa
fistl
push
add
add
stc
push
cwtl
cld
lret
repz
in
xchg
or
add
jmp
sbb
add
cmp
xchg
dec
adc
mov
pop
dec
fisubrs
jp
mov
jo
add
add
incl
xlat
xchg
xchg
in
and
pop
or
add
paddd
lods
enter
jle
leave
idivl
popf
pop
add
insl
mov
pop
inc
out
stos
inc
jp
add
add
xor
add
in
in
xlat
testb
or
add
adc
add
mov
xlat
sbb
loope
mov
mov
add
jns
adc
inc
in
mov
jp
jl
cld
push
jp
sahf
pop
neg
push
push
mov
add
shll
dec
sub
mov
or
add
pop
push
jae
data16
jo
ret
jl
jge
xor
pop
xor
leave
pop
sbb
xchg
mov
xchg
in
dec
sub
add
je
rcr
mov
pop
add
sub
add
sub
mov
jmp
jge
sub
add
add
dec
adc
lea
add
lods
add
lcall
add
int3
insb
fst
sbb
jecxz
jg
cmpsl
les
loop
add
pushf
int
rcrb
or
cmp
cmp
mov
add
add
test
add
or
inc
jecxz
insl
loopne
jb
fiadds
add
cmpsb
add
pop
mov
add
sbb
add
loop
push
sbb
add
cmpsb
add
xchg
pusha
fisubs
pusha
mov
xor
loopne
inc
fsubrl
add
addb
popf
xchg
add
mov
add
cmp
clc
icebp
cli
repnz
leave
out
movsl
outsb
and
add
cli
jno
sub
add
mov
add
sub
or
add
shr
sub
add
in
repz
sbb
mov
add
or
add
inc
push
pop
mov
sub
cli
cmpsl
idivb
hlt
jo
lcall
out
jp
addr16
das
jp
pop
pusha
in
jne
rorb
add
fwait
pop
mov
clc
ret
pusha
rorl
out
jg
iret
xchg
add
adc
rclb
faddl
sahf
gs
add
inc
mov
dec
fadds
add
or
add
and
cmp
mov
add
mov
add
sbb
test
mov
jp
sbb
or
add
pop
mov
add
add
cltd
sbb
push
add
sub
add
mov
add
mov
add
lretw
add
add
fidivs
add
pop
jge
scas
add
sub
add
cmc
fwait
repz
sbb
lods
add
imul
addb
add
pop
jb
mov
out
fwait
xchg
out
out
add
faddl
xchg
int3
xchg
inc
icebp
test
xchg
mov
mov
popf
iret
pop
sarl
mov
xchg
add
xchg
outsl
lret
ss
je
enter
mov
testb
add
aad
leave
add
adc
push
in
add
addr16
popa
pop
or
jbe
pop
mov
cmpsb
add
cli
mov
stos
ss
push
jo
test
movsb
add
mov
add
mov
cmp
push
xchg
int3
xchg
cmp
out
clc
repnz
nop
nop
jae
inc
cmp
or
add
inc
clc
repnz
nop
nop
jae
pop
push
pop
add
mov
add
push
push
inc
repz
push
mov
xchg
ret
pop
add
add
ja
mov
adc
repnz
nop
nop
jae
pop
sbbb
mov
mov
xchg
ret
insb
pop
add
add
add
push
mov
xchg
ret
add
cmpsb
add
add
movsl
nop
aad
test
add
add
nop
jmp
imul
xchg
fld1
push
mov
xchg
ret
add
add
sldt
add
pop
clc
repnz
nop
nop
jae
gs
inc
push
mov
bound
add
add
add
clc
repnz
nop
nop
jae
jae
cltd
nop
add
add
push
push
mov
xchg
ret
mov
adc
add
cmpsb
add
push
je
clc
repnz
nop
nop
jae
push
and
sldt
clc
repnz
nop
nop
jae
cmp
add
xchg
mov
nop
push
mov
leave
nop
jmp
add
add
add
xchg
cmp
jne
clc
repnz
nop
nop
jae
adc
add
add
xchg
add
inc
and
jne
nop
push
mov
leave
nop
jmp
sbb
test
add
divb
movswl
clc
repnz
nop
nop
jae
out
inc
out
daa
mov
push
mov
xchg
ret
pop
adc
pop
mov
in
dec
pop
push
push
mov
xchg
ret
add
out
add
add
repnz
nop
nop
jae
jae
jno
add
add
nop
nop
jae
mov
adc
add
add
clc
repnz
nop
nop
jae
add
push
add
aaa
cs
clc
repnz
nop
nop
jae
jae
add
push
add
mov
mov
repnz
nop
nop
jae
stc
test
clc
repnz
nop
nop
jae
roll
cmp
and
and
mov
xchg
ret
add
test
gs
imul
call
nop
jae
cltd
stos
cli
out
sbb
test
repnz
nop
nop
jae
pop
adc
add
sarl
clc
repnz
nop
nop
jae
add
add
add
imul
pop
inc
add
jns
add
je
xor
cld
nop
nop
jae
add
add
add
or
add
xchg
sbb
add
repnz
nop
nop
jae
jno
adc
jmp
clc
repnz
nop
nop
jae
inc
add
add
mov
xor
clc
repnz
nop
nop
jae
into
jge
repnz
nop
nop
jae
pop
mov
sbb
cmpl
nop
push
mov
leave
nop
jmp
daa
push
cmp
inc
lret
mov
push
mov
xchg
ret
cli
add
add
jno
addb
xor
add
repnz
nop
nop
jae
mov
add
clc
repnz
nop
nop
jae
stc
rclb
mull
repnz
nop
nop
jae
inc
rorb
test
push
mov
xchg
ret
cmp
add
add
clc
repnz
nop
nop
jae
sbb
mov
add
pop
add
lcall
mov
xchg
ret
pop
mov
lret
lea
push
clc
repnz
nop
nop
jae
pop
mov
add
mov
clc
repnz
nop
nop
jae
mov
add
add
cld
nop
nop
jae
inc
jae
add
mov
add
dec
and
push
mov
xchg
ret
add
pop
lds
add
add
cmp
add
push
mov
leave
nop
jmp
pop
add
adc
adc
push
mov
leave
nop
jmp
inc
lea
cmp
jae
clc
repnz
nop
nop
jae
add
jl
mov
shrb
push
mov
leave
nop
jmp
sbb
add
jae
shr
clc
repnz
nop
nop
jae
add
sbb
add
nop
push
mov
leave
nop
jmp
add
add
inc
add
inc
clc
repnz
nop
nop
jae
add
out
inc
out
mov
add
cld
nop
nop
jae
add
cltd
mov
pushl
clc
repnz
nop
nop
jae
add
call
repnz
nop
nop
jae
jae
pop
daa
adc
cmp
hlt
add
add
shr
clc
repnz
nop
nop
jae
add
movsl
add
ret
pop
clc
repnz
nop
nop
jae
add
add
add
add
lcall
cld
nop
nop
jae
add
ret
rclb
arpl
xchg
ret
jl
pop
lea
roll
add
mov
repnz
nop
nop
jae
add
jae
add
js
mov
clc
repnz
nop
nop
jae
mov
fwait
clc
repnz
nop
nop
jae
add
fiadds
sbb
add
push
mov
xchg
ret
out
jl
add
inc
mov
sbb
nop
push
mov
leave
nop
jmp
mov
movsl
daa
je
clc
repnz
nop
nop
jae
add
imul
js
clc
repnz
nop
nop
jae
add
stos
lret
cmpsb
cli
xchg
add
clc
repnz
nop
nop
jae
add
inc
addb
jae
sbb
mov
clc
repnz
nop
nop
jae
mov
mov
pop
nop
push
mov
leave
nop
jmp
cli
add
add
lea
adcb
push
mov
xchg
ret
adc
adc
add
pop
push
mov
xchg
ret
je
adc
add
stc
add
mov
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
sbb
js
push
push
mov
xchg
ret
adc
add
enter
sub
clc
repnz
nop
nop
jae
andb
test
add
nop
nop
jae
add
andb
clc
repnz
nop
nop
jae
pop
add
add
add
mov
in
leave
nop
jmp
stos
mov
add
xchg
lea
clc
repnz
nop
nop
jae
lea
and
mov
nop
push
mov
leave
nop
jmp
mov
shrb
mov
xchg
ret
add
mov
add
pop
decl
add
repnz
nop
nop
jae
add
mov
mov
xchg
ret
add
add
jl
add
mov
clc
repnz
nop
nop
jae
pop
add
add
cltd
dec
sub
dec
jbe
add
lea
lldt
inc
enter
push
mov
xchg
ret
add
lea
jae
add
loope
push
loopne
mov
xchg
ret
add
add
add
adc
mov
leave
nop
jmp
adc
adc
lea
clc
repnz
nop
nop
jae
add
cmpsb
add
add
clc
repnz
nop
nop
jae
add
push
add
add
clc
repnz
nop
nop
jae
and
and
add
add
repnz
nop
nop
jae
add
gs
mov
clc
repnz
nop
nop
jae
add
add
pop
mov
push
mov
xchg
ret
add
inc
add
insb
test
out
clc
repnz
nop
nop
jae
nop
inc
add
mov
mov
xchg
ret
adc
add
cmpb
aad
inc
add
lret
add
je
adc
and
repnz
nop
nop
jae
add
add
pop
add
cmp
add
clc
repnz
nop
nop
jae
add
inc
cltd
add
adc
insl
popa
inc
add
add
pop
rcrl
add
add
jle
mov
dec
imul
cmp
ret
add
cli
add
inc
loope
nop
push
mov
leave
nop
jmp
insb
add
add
cmp
daa
testl
nop
push
mov
leave
nop
jmp
add
dec
xchg
push
mov
xchg
ret
out
adc
mov
clc
repnz
nop
nop
jae
gs
nop
add
sbb
add
and
add
insb
jno
out
dec
fwait
clc
repnz
nop
nop
jae
add
push
mov
shrb
add
test
or
add
add
push
mov
nop
push
mov
leave
nop
jmp
add
add
inc
pop
add
inc
jp
nop
push
mov
leave
nop
jmp
add
add
add
stos
cmp
push
mov
xchg
ret
movsl
add
stos
pmulhw
ja
add
clc
repnz
nop
nop
jae
sbb
stos
and
mov
clc
repnz
nop
nop
jae
je
add
fiadds
push
adc
fwait
push
mov
xchg
ret
add
adc
inc
sub
push
mov
xchg
ret
inc
out
sldt
inc
psubq
cld
nop
nop
jae
inc
add
pop
lret
or
push
mov
leave
nop
jmp
cmp
mov
mov
pop
and
push
mov
leave
nop
jmp
sarl
pushf
add
movl
subl
insb
mov
add
add
test
add
in
enter
nop
nop
jae
stc
adc
add
repnz
nop
nop
jae
add
and
add
imul
clc
repnz
nop
nop
jae
cmp
mov
sbb
repnz
nop
nop
jae
int3
add
rcrb
lea
nop
push
mov
leave
nop
jmp
add
movsl
add
add
sbb
add
sysret
lea
and
add
leave
push
mov
xchg
ret
ror
add
add
stc
clc
repnz
nop
nop
jae
add
add
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
add
int3
fs
mov
cld
push
inc
sbb
nop
jmp
inc
cltd
gs
jmp
add
add
add
add
add
push
mov
xchg
ret
add
cmp
movsl
pop
add
push
push
mov
xchg
ret
lret
add
out
add
add
sbb
mov
leave
nop
jmp
movlps
add
add
jbe
add
call
add
clc
repnz
nop
nop
jae
pop
add
add
fld1
push
mov
xchg
ret
jns
cmpsb
add
add
add
cld
nop
nop
jae
push
cmp
lock
test
add
push
clc
repnz
nop
nop
jae
add
jno
add
fdivrp
mov
add
repnz
nop
nop
jae
inc
add
add
loope
cmpl
jae
add
add
fidivs
cld
nop
nop
jae
add
add
call
ljmp
ret
add
mov
gs
imul
add
add
test
nop
push
mov
leave
nop
jmp
out
jns
outsl
cmpl
nop
push
mov
leave
nop
jmp
sbb
add
in
cld
clc
repnz
nop
nop
jae
add
add
add
fwait
push
mov
xchg
ret
sbb
add
mov
fildl
daa
mov
xchg
ret
lea
add
add
scas
lods
push
mov
xchg
ret
add
add
pop
add
mov
push
clc
repnz
nop
nop
jae
gs
add
jno
add
add
data16
clc
repnz
nop
nop
jae
add
nop
into
lea
add
popa
mov
clc
repnz
nop
nop
jae
add
mov
add
nop
push
mov
leave
nop
jmp
pop
add
push
push
mov
xchg
ret
add
add
rolb
clc
repnz
nop
nop
jae
add
add
jno
lods
xor
clc
repnz
nop
nop
jae
sbb
mov
add
jmp
add
cmp
pop
movsl
pop
sbb
push
push
mov
xchg
ret
add
add
push
lea
add
sub
repnz
nop
nop
jae
add
add
insb
sbb
add
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
pop
mov
pop
pop
add
nop
push
mov
leave
nop
jmp
add
into
addb
je
clc
repnz
nop
nop
jae
add
push
and
mov
leave
nop
jmp
daa
insb
mov
add
clc
repnz
nop
nop
jae
insb
cmp
movsl
add
mov
repnz
nop
nop
jae
imul
mov
inc
je
clc
repnz
nop
nop
jae
add
add
mov
add
clc
repnz
nop
nop
jae
jno
add
stos
push
push
mov
xchg
ret
adc
insb
je
adc
enter
push
mov
xchg
ret
lea
add
add
add
cmp
sbb
clc
repnz
nop
nop
jae
jae
jae
imul
nop
push
repz
clc
repnz
nop
nop
jae
add
add
add
inc
pop
insb
jo
cmpw
nop
push
mov
leave
nop
jmp
lret
sbb
incl
in
leave
nop
jmp
sbb
adc
add
push
mov
xchg
ret
pop
jl
cmp
out
sub
addb
cmp
ret
inc
jae
adc
mov
lea
clc
repnz
nop
nop
jae
mov
daa
inc
add
clc
repnz
nop
nop
jae
add
into
add
add
lret
mov
leave
nop
jmp
add
add
add
rep
clc
repnz
nop
nop
jae
daa
jae
pop
nop
nop
cli
xchg
test
nop
push
mov
leave
nop
jmp
add
add
test
add
clc
repnz
nop
nop
jae
push
movsl
sbb
add
nop
push
mov
leave
nop
jmp
pop
add
push
add
clc
repnz
nop
nop
jae
out
mov
mov
leave
nop
jmp
lds
add
int3
insb
add
repnz
nop
nop
jae
gs
adc
add
mov
add
clc
repnz
nop
nop
jae
out
daa
cmp
nop
nop
jae
add
add
outsb
sbb
xchg
push
mov
xchg
ret
add
gs
or
add
add
add
push
mov
leave
nop
jmp
mov
add
lea
pop
clc
repnz
nop
nop
jae
inc
add
mov
in
fistpl
push
mov
xchg
ret
add
add
pop
out
jp
ret
add
add
insb
cmpsb
add
add
fiadds
rcrl
add
incb
mov
dec
push
add
add
ret
push
mov
xchg
ret
mov
into
sldt
add
call
cld
nop
nop
jae
inc
add
add
pop
add
mov
leave
nop
jmp
rorb
nop
xor
repnz
nop
nop
jae
gs
test
add
add
inc
fistpl
nop
push
mov
leave
nop
jmp
lds
push
cld
push
mov
xchg
ret
add
sbb
sbb
add
push
cmp
repnz
nop
nop
jae
add
add
sbb
clc
repnz
nop
nop
jae
int3
add
pop
imul
add
cld
nop
nop
jae
insb
int3
jns
push
clc
repnz
nop
nop
jae
vmovsd
adc
cmp
cmpsb
add
jl
or
add
add
adc
cld
nop
nop
jae
jl
add
add
lret
clc
repnz
nop
nop
jae
jae
sbbb
add
sub
nop
nop
jae
add
add
add
sub
add
fistpl
clc
repnz
nop
nop
jae
gs
pop
gs
fldl
dec
cmp
push
mov
leave
nop
jmp
add
sub
iret
or
nop
jae
mov
add
add
nop
push
mov
leave
nop
jmp
mov
add
inc
xor
cld
nop
nop
jae
add
out
add
nop
push
mov
leave
nop
jmp
nop
inc
imul
add
push
mov
add
pop
push
add
stos
and
add
add
std
mov
clc
repnz
nop
nop
jae
add
mov
lock
inc
pop
add
add
fiadds
mov
cmp
push
cld
dec
rol
push
mov
xchg
ret
add
push
adc
inc
dec
stos
clc
repnz
nop
nop
jae
add
cmpsb
add
cli
xchg
sbb
push
push
mov
xchg
ret
inc
jns
sbb
je
pop
mov
sar
repnz
nop
nop
jae
add
movsl
push
repnz
nop
nop
jae
add
sbb
sbb
jp
call
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
insb
jns
into
lds
push
mov
xchg
ret
lea
pop
pop
sar
bound
push
mov
xchg
ret
sbb
mov
clc
repnz
nop
nop
jae
roll
push
sbb
jae
cmp
add
push
mov
xchg
ret
out
add
je
jno
jl
and
add
repnz
nop
nop
jae
roll
mov
add
inc
lret
mov
clc
repnz
nop
nop
jae
mov
insb
add
clc
repnz
nop
nop
jae
add
add
add
jo
push
clc
repnz
nop
nop
jae
add
add
call
leave
nop
jmp
add
add
fidivrs
add
call
nop
push
mov
leave
nop
jmp
nop
add
imul
nop
jae
je
add
outsl
and
push
mov
xchg
ret
test
add
sub
add
idiv
repnz
nop
nop
jae
pop
lea
das
jmp
add
add
and
jl
int3
and
mov
mov
clc
repnz
nop
nop
jae
stos
rolb
adc
add
mov
xchg
ret
lea
add
inc
mov
clc
repnz
nop
nop
jae
pop
add
mov
add
nop
push
mov
leave
nop
jmp
adc
dec
cld
adc
cld
nop
nop
jae
add
push
adc
xchg
pop
pop
jno
inc
cmp
repnz
nop
nop
jae
mov
add
int
pop
jae
repnz
nop
nop
jae
jns
lea
push
add
clc
repnz
nop
nop
jae
movsl
stos
add
pop
add
jmp
sbb
nop
push
mov
leave
nop
jmp
add
into
adc
add
add
cld
nop
nop
jae
cmp
pop
cmpsb
mov
add
clc
repnz
nop
nop
jae
add
add
fiadds
cmp
cld
nop
nop
jae
add
jns
adc
push
nop
push
mov
leave
nop
jmp
add
lea
pop
cltd
add
mov
leave
nop
jmp
cli
lea
adc
add
mov
clc
repnz
nop
nop
jae
add
jl
add
clc
repnz
nop
nop
jae
mov
jae
arpl
test
repnz
nop
nop
jae
mov
and
repz
repnz
nop
nop
jae
sldt
nop
stos
jns
sub
repnz
nop
nop
jae
mov
inc
xchg
clc
repnz
nop
nop
jae
cmp
add
add
mov
clc
repnz
nop
nop
jae
mov
clc
repnz
nop
nop
jae
lds
add
add
out
add
xor
clc
repnz
nop
nop
jae
and
fiadds
cmp
cld
nop
nop
jae
push
lds
add
add
dec
sub
mov
inc
add
inc
add
mov
imul
clc
repnz
nop
nop
jae
add
add
stos
stc
add
clc
repnz
nop
nop
jae
add
jns
mov
scas
rep
clc
repnz
nop
nop
jae
pop
add
inc
add
add
inc
je
jmp
add
add
lea
add
push
add
push
push
clc
repnz
nop
nop
jae
inc
add
add
sahf
mov
push
mov
xchg
ret
push
push
pop
add
gs
push
clc
repnz
nop
nop
jae
addb
add
lods
clc
repnz
nop
nop
jae
movsl
pop
adc
cmpsb
adc
mov
add
add
in
lahf
pop
push
mov
xchg
ret
nop
add
add
add
dec
imul
nop
jae
jno
movsl
add
adc
add
nop
jmp
add
inc
fistps
mov
xchg
ret
add
cmpsb
nop
inc
add
jno
stos
add
clc
repnz
nop
nop
jae
add
sbb
add
mov
nop
nop
jae
add
add
pop
add
lods
push
clc
repnz
nop
nop
jae
cmp
adc
add
dec
sbb
add
jns
cmp
lds
lds
mov
xchg
leave
add
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
sbb
sbb
clc
repnz
nop
nop
jae
add
add
add
add
jle
add
push
add
jae
int
pop
jae
repnz
nop
nop
jae
cli
mov
roll
repnz
nop
nop
jae
and
add
jmp
nop
nop
jae
cmp
adc
cmp
nop
nop
jae
stos
add
mov
mov
clc
repnz
nop
nop
jae
add
nop
jae
das
rep
nop
push
mov
leave
nop
jmp
add
add
add
mov
nop
push
mov
leave
nop
jmp
nop
and
add
mov
clc
repnz
nop
nop
jae
add
daa
out
jb
lret
inc
adc
repnz
nop
nop
jae
sbb
add
fwait
push
mov
xchg
ret
add
and
add
std
call
nop
jmp
mov
add
clc
repnz
nop
nop
jae
add
lret
pop
add
leave
test
nop
push
mov
leave
nop
jmp
movsl
rolb
movsl
jae
mov
clc
repnz
nop
nop
jae
lea
add
add
out
add
jo
jmp
add
stos
add
add
pop
add
xchg
add
jae
add
nop
push
mov
leave
nop
jmp
add
fiaddl
nop
push
mov
leave
nop
jmp
mov
add
jb
loop
add
or
nop
nop
jae
and
nop
add
add
cwtl
or
add
test
clc
repnz
nop
nop
jae
mov
cltd
notl
push
mov
xchg
ret
lea
add
pop
add
add
mov
clc
repnz
nop
nop
jae
lds
jmp
nop
push
mov
leave
nop
jmp
add
add
lcall
nop
nop
jae
add
gs
add
add
add
into
xchg
je
mov
andb
nop
nop
jae
add
add
mov
add
repnz
nop
nop
jae
adc
stos
cmp
push
mov
xchg
ret
add
add
and
push
mov
leave
nop
jmp
fisubs
addr16
add
add
add
add
je
add
insb
movsl
mov
aad
inc
push
mov
xchg
ret
imul
lret
cmpsb
nop
adc
mov
add
push
push
mov
xchg
ret
add
pop
adc
mov
xchg
ret
add
add
adc
add
test
cld
nop
nop
jae
add
rolb
shl
nop
push
mov
leave
nop
jmp
out
add
pop
test
pop
clc
repnz
nop
nop
jae
fsubrp
mov
add
add
clc
repnz
nop
nop
jae
cmp
add
repnz
nop
nop
jae
je
add
add
add
dec
cmp
repnz
nop
nop
jae
add
add
inc
add
clc
repnz
nop
nop
jae
add
add
inc
xchg
pop
clc
repnz
nop
nop
jae
jns
inc
nop
add
add
lea
cld
nop
nop
jae
nop
inc
add
add
push
mov
leave
nop
jmp
je
add
mov
std
inc
clc
repnz
nop
nop
jae
add
push
out
add
add
lock
add
sar
repnz
nop
nop
jae
add
add
jae
mov
clc
repnz
nop
nop
jae
add
add
jo
mov
clc
repnz
nop
nop
jae
add
test
add
cli
sbb
jge
add
add
into
add
push
mov
xchg
ret
add
jl
mov
sbb
repnz
nop
nop
jae
int3
inc
add
add
add
pop
nop
push
mov
leave
nop
jmp
mov
adc
gs
str
push
clc
repnz
nop
nop
jae
jns
roll
cltd
add
movsl
lods
clc
repnz
nop
nop
jae
movsl
sbb
pop
add
add
stc
fld1
push
mov
xchg
ret
pop
add
adc
add
add
clc
push
mov
xchg
ret
add
movsl
fimuls
repnz
inc
add
cmp
add
mov
movzwl
clc
repnz
nop
nop
jae
add
add
cli
lea
nop
push
mov
leave
nop
jmp
mov
movsl
xor
aaa
and
clc
repnz
nop
nop
jae
insb
add
test
repnz
nop
nop
jae
movsl
movlps
inc
adc
add
cld
nop
nop
jae
out
mov
mov
add
add
jp
push
nop
push
mov
leave
nop
jmp
lea
jl
adc
add
mov
xchg
ret
add
jno
add
insb
mov
in
leave
nop
jmp
inc
add
adc
lods
je
clc
repnz
nop
nop
jae
mov
movzwl
clc
repnz
nop
nop
jae
add
nop
mov
pop
xchg
sbb
incl
pop
add
jae
sldt
mov
pop
push
mov
xchg
ret
add
add
jl
add
fbstp
sar
cld
nop
nop
jae
add
add
add
add
das
pop
clc
repnz
nop
nop
jae
mov
movsl
adc
movl
jmp
cltd
cltd
jno
movsl
mov
cld
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
mov
push
nop
add
add
outsb
sbb
clc
repnz
nop
nop
jae
adc
sar
jbe
jmp
add
mov
add
push
shrl
push
mov
xchg
ret
add
add
and
into
sbb
mov
nop
push
mov
leave
nop
jmp
jns
add
adc
repnz
nop
nop
jae
add
mov
jns
add
clc
repnz
nop
nop
jae
jae
pop
add
test
nop
nop
jae
adc
inc
add
jae
mov
mov
leave
nop
jmp
cmp
add
mov
or
mov
adc
repnz
nop
nop
jae
add
mov
mov
clc
repnz
nop
nop
jae
add
adc
insl
lea
push
mov
xchg
ret
add
adc
clc
repnz
nop
nop
jae
jno
add
add
add
push
mov
xchg
ret
add
cmp
lds
shr
and
sub
repnz
nop
nop
jae
insb
jns
sub
add
pushl
clc
repnz
nop
nop
jae
lea
test
add
mov
xchg
ret
lds
add
adc
cli
xor
repnz
nop
nop
jae
insb
add
jno
add
js
repnz
nop
nop
jae
cmp
cmp
clc
repnz
nop
nop
jae
lea
inc
mov
push
mov
xchg
ret
nop
add
add
popl
clc
repnz
nop
nop
jae
add
movsl
add
cmpsb
adc
sbbl
xchg
ret
jns
andb
out
dec
cmp
push
mov
xchg
ret
adc
nop
movsl
stc
gs
jmp
add
add
add
pop
add
mov
add
mov
repnz
nop
nop
jae
add
lds
roll
adc
mov
fld1
clc
repnz
nop
nop
jae
add
add
add
xchg
aam
add
testb
add
clc
repnz
nop
nop
jae
add
lea
div
nop
push
mov
leave
nop
jmp
adc
jae
jno
add
add
push
rep
clc
repnz
nop
nop
jae
mov
mov
mov
incl
roll
jae
add
add
stos
add
push
mov
leave
nop
jmp
add
lret
add
add
clc
repnz
nop
nop
jae
mov
add
inc
rep
clc
repnz
nop
nop
jae
add
into
add
add
and
push
mov
xchg
ret
add
mov
pop
push
clc
repnz
nop
nop
jae
inc
mov
push
clc
repnz
nop
nop
jae
add
cmpsb
mov
popa
push
push
mov
xchg
ret
addb
mov
add
fwait
clc
repnz
nop
nop
jae
sbb
add
lcall
pop
inc
add
add
mov
adc
addr16
clc
repnz
nop
nop
jae
rol
add
add
mov
push
mov
xchg
ret
mov
inc
add
repz
clc
repnz
nop
nop
jae
sbb
lret
add
stc
jl
add
jae
add
jl
testb
jns
clc
repnz
nop
nop
jae
stc
add
je
add
cmp
add
fstl
mov
xchg
ret
mov
out
add
adc
add
and
gs
repnz
nop
nop
jae
add
daa
nop
mov
add
xor
clc
repnz
nop
nop
jae
add
push
lea
repnz
nop
nop
jae
add
rolb
add
stc
adc
repnz
nop
nop
jae
int3
fidivs
mov
add
jne
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
pop
jae
pop
clc
repnz
nop
nop
jae
add
movsl
add
movsb
clc
repnz
nop
nop
jae
mov
jl
and
add
clc
repnz
nop
nop
jae
mov
imul
xchg
test
in
clc
repnz
nop
nop
jae
adc
add
lea
push
mov
xchg
ret
pop
add
notb
cs
clc
repnz
nop
nop
jae
add
je
orl
nop
nop
jae
add
pop
rolb
push
mov
nop
push
mov
leave
nop
jmp
cltd
push
cmp
push
clc
repnz
nop
nop
jae
pop
add
add
add
add
add
out
pusha
push
mov
xchg
ret
out
mov
add
movsl
cmp
call
clc
repnz
nop
nop
jae
stos
add
add
nop
nop
jae
lret
add
add
pop
add
or
repnz
nop
nop
jae
stc
add
add
and
add
subl
push
mov
xchg
ret
add
add
push
mov
clc
repnz
nop
nop
jae
daa
verr
add
pop
fwait
push
mov
xchg
ret
add
mov
jl
mov
in
leave
nop
jmp
inc
lret
add
insb
add
orl
nop
nop
jae
jae
add
add
call
clc
repnz
nop
nop
jae
add
add
popf
mov
clc
repnz
nop
nop
jae
add
jns
add
add
leave
nop
jmp
add
imul
add
repnz
nop
nop
jae
add
jno
dec
add
clc
repnz
nop
nop
jae
jns
stc
add
mov
add
xchg
outsb
add
dec
xchg
add
das
and
xchg
add
clc
repnz
nop
nop
jae
push
cmp
add
add
les
nop
push
mov
leave
nop
jmp
cmp
add
inc
add
mov
in
clc
repnz
nop
nop
jae
into
add
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
movsl
jae
add
cmp
repnz
nop
nop
jae
cltd
stos
add
add
pop
fwait
clc
repnz
nop
nop
jae
add
add
add
add
jb
clc
repnz
nop
nop
jae
adc
adc
clc
repnz
nop
nop
jae
add
stc
add
sbb
add
add
repnz
nop
nop
jae
add
add
pop
add
mov
clc
repnz
nop
nop
jae
adc
jns
add
jnp
clc
repnz
nop
nop
jae
add
lea
mov
pop
clc
repnz
nop
nop
jae
add
jns
push
fld1
clc
repnz
nop
nop
jae
cmp
add
add
lds
cld
nop
nop
jae
cmpsb
gs
je
daa
xchg
add
clc
repnz
nop
nop
jae
add
imul
add
add
nop
push
mov
leave
nop
jmp
add
add
mov
cmp
ret
insb
add
mov
push
push
mov
xchg
ret
mov
add
add
ret
xbegin
jae
add
mov
stos
mov
clc
repnz
nop
nop
jae
inc
mov
cmpsl
add
nop
push
mov
leave
nop
jmp
add
add
mov
out
sbb
nop
jae
push
add
cli
addb
addr16
push
mov
xchg
ret
pop
pop
imul
je
insb
push
pop
rcrl
repnz
nop
nop
jae
add
add
add
mov
repnz
nop
nop
jae
insb
insb
adc
clc
repnz
nop
nop
jae
cmp
add
add
gs
clc
repnz
nop
nop
jae
jae
stc
add
add
imul
push
inc
add
mov
cltd
add
lret
clc
repnz
nop
nop
jae
add
mov
add
popa
push
nop
push
mov
leave
nop
jmp
lea
adc
leave
push
nop
push
mov
leave
nop
jmp
add
gs
add
push
mov
xchg
ret
add
add
adcb
push
and
add
push
xchg
push
mov
xchg
ret
jns
shrl
adc
add
repnz
nop
nop
jae
add
add
gs
in
mov
push
clc
repnz
nop
nop
jae
and
add
sti
push
clc
repnz
nop
nop
jae
shll
add
add
mov
adc
clc
repnz
nop
nop
jae
insb
nop
insb
mov
push
mov
xchg
ret
adc
add
sbb
stos
gs
outsb
and
mov
xchg
ret
psubw
movsl
add
jl
xor
clc
repnz
nop
nop
jae
add
add
rolb
pop
bound
mov
leave
nop
jmp
out
add
roll
add
daa
je
clc
repnz
nop
nop
jae
add
pop
push
clc
repnz
nop
nop
jae
sbb
mov
dec
dec
adc
test
add
mov
add
add
nop
jmp
out
shlb
sar
repnz
nop
nop
jae
mov
cmp
lea
scas
enter
nop
nop
jae
lds
add
add
pop
clc
repnz
nop
nop
jae
cmp
cmpsb
add
jns
hlt
pop
call
clc
repnz
nop
nop
jae
lret
add
xchg
sahf
loopne
add
dec
clc
nop
push
mov
leave
nop
jmp
cli
add
add
add
add
add
push
mov
xchg
ret
add
push
adc
add
mov
add
lods
dec
nop
push
mov
leave
nop
jmp
add
adc
add
orl
nop
nop
jae
add
das
sub
clc
repnz
nop
nop
jae
add
stc
add
subl
clc
repnz
nop
nop
jae
inc
insb
push
inc
add
stos
clc
repnz
nop
nop
jae
lret
roll
add
adc
add
jle
inc
push
nop
push
mov
leave
nop
jmp
add
sbb
add
add
push
add
popa
mov
clc
repnz
nop
nop
jae
rclb
jae
cli
jb
push
clc
repnz
nop
nop
jae
add
adc
add
out
xor
clc
repnz
nop
nop
jae
push
add
add
add
outsl
ret
nop
push
mov
leave
nop
jmp
add
add
add
add
add
shrb
dec
push
clc
repnz
nop
nop
jae
add
ret
xchg
cmpl
nop
jae
add
add
rolb
sub
add
adc
add
fstp
add
mov
cmp
add
add
sbb
add
pusha
dec
repz
clc
repnz
nop
nop
jae
add
stc
add
pop
jno
addb
mov
nop
nop
jae
cmpsb
gs
jae
add
push
mov
xchg
ret
add
cmpsb
jl
mov
clc
repnz
nop
nop
jae
add
les
out
inc
add
insb
add
add
inc
add
cld
nop
nop
jae
fisubs
add
add
lds
hlt
decl
nop
nop
jae
add
jns
jae
lds
fadds
add
fisttps
fildll
add
add
in
pop
je
nop
push
mov
leave
nop
jmp
add
out
mov
push
mov
xchg
ret
add
add
cmpsb
add
dec
mov
lods
push
mov
xchg
ret
add
add
ret
inc
and
clc
repnz
nop
nop
jae
mov
out
sub
dec
sub
repnz
nop
nop
jae
pop
out
add
add
dec
je
clc
repnz
nop
nop
jae
jae
add
xor
adcl
repnz
nop
nop
jae
add
inc
push
push
mov
xchg
ret
push
lret
into
mov
add
add
jge
jmp
add
clc
repnz
nop
nop
jae
or
and
push
mov
leave
nop
jmp
inc
add
lea
imul
jae
add
add
mov
xchg
nop
push
mov
leave
nop
jmp
jae
sarb
stos
xor
push
mov
xchg
ret
gs
addb
mov
add
clc
repnz
nop
nop
jae
add
inc
add
mov
pop
ja
dec
or
add
repnz
nop
nop
jae
add
stos
adc
fistpll
clc
repnz
nop
nop
jae
lret
sbb
add
inc
add
add
inc
add
push
add
nop
add
in
leave
nop
jmp
sbb
mov
add
add
sub
notl
nop
jmp
add
rorb
add
nop
push
mov
leave
nop
jmp
add
push
add
icebp
mov
clc
repnz
nop
nop
jae
mov
pop
rcrl
push
clc
repnz
nop
nop
jae
add
add
add
inc
fld1
nop
push
mov
leave
nop
jmp
mov
add
mov
cmp
push
aad
clc
repnz
nop
nop
jae
sbb
jbe
clc
repnz
nop
nop
jae
pop
add
add
mov
cld
nop
nop
jae
adc
adc
add
lea
repnz
nop
nop
jae
lret
add
inc
addb
in
dec
xchg
hlt
dec
ret
pusha
clc
repnz
nop
nop
jae
add
add
pop
push
clc
repnz
nop
nop
jae
add
add
push
mov
leave
nop
jmp
jae
insb
adc
add
inc
xor
nop
push
mov
leave
nop
jmp
sbb
lea
mov
clc
repnz
nop
nop
jae
cltd
add
fisubrs
add
nop
push
mov
leave
nop
jmp
add
adc
pop
add
nop
push
mov
leave
nop
jmp
lret
add
jl
adc
fisttpll
push
mov
xchg
ret
add
add
leave
je
clc
repnz
nop
nop
jae
shrl
add
clc
repnz
nop
nop
jae
sarl
add
clc
repnz
nop
nop
jae
add
add
popa
movzwl
clc
repnz
nop
nop
jae
adc
add
hlt
cltd
mov
push
mov
xchg
ret
add
out
add
add
call
push
mov
xchg
ret
nop
cmpsb
adc
adc
cld
nop
nop
jae
jno
jae
into
addb
inc
or
push
mov
leave
nop
jmp
add
mov
add
repnz
mov
clc
repnz
nop
nop
jae
lds
add
cltd
add
clc
repnz
nop
nop
jae
add
pop
add
sbb
clc
repnz
nop
nop
jae
adc
mov
mov
out
add
add
cwtl
add
mov
xchg
ret
roll
mov
into
add
mov
xchg
ret
add
add
mov
nop
push
mov
leave
nop
jmp
add
mov
mov
clc
repnz
nop
nop
jae
xorb
add
mov
nop
push
mov
leave
nop
jmp
movsl
gs
add
and
add
nop
nop
jae
add
inc
add
add
add
xlat
add
clc
repnz
nop
nop
jae
add
test
cli
pop
clc
repnz
nop
nop
jae
cmovae
add
inc
fiadds
fmuls
push
nop
push
mov
leave
nop
jmp
add
add
add
inc
sbb
add
push
push
mov
xchg
ret
add
sbb
pop
gs
sbb
push
mov
xchg
ret
add
add
je
add
jge
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
imul
push
mov
xchg
ret
movsl
add
add
adc
clc
repnz
nop
nop
jae
pop
fiadds
jae
add
inc
shl
pop
mov
clc
repnz
nop
nop
jae
roll
and
lea
xchg
add
mov
xchg
ret
pcmpeqb
mov
inc
mov
push
mov
xchg
ret
add
add
int3
push
pushf
cmp
repnz
nop
nop
jae
add
add
adc
subl
push
mov
leave
nop
jmp
add
adc
jmp
nop
nop
jae
add
mov
pop
push
push
mov
xchg
ret
adc
mov
repnz
mov
clc
repnz
nop
nop
jae
nop
add
add
repnz
nop
nop
jae
add
pop
inc
add
adc
push
mov
xchg
ret
add
add
add
nop
adc
sbb
nop
push
mov
leave
nop
jmp
out
add
jae
inc
loop
pop
clc
repnz
nop
nop
jae
jl
jae
add
jl
inc
sti
pop
clc
repnz
nop
nop
jae
add
push
mov
icebp
call
clc
repnz
nop
nop
jae
add
adc
mov
mov
cld
nop
nop
jae
add
add
gs
call
cld
nop
nop
jae
adc
or
add
mov
nop
push
mov
leave
nop
jmp
jae
mov
nop
push
mov
leave
nop
jmp
jns
imul
lret
mov
pop
clc
repnz
nop
nop
jae
mov
add
inc
mov
nop
push
mov
leave
nop
jmp
jns
add
sbb
test
in
leave
nop
jmp
je
add
add
mov
aam
fld1
clc
repnz
nop
nop
jae
add
test
add
add
clc
repnz
nop
nop
jae
out
add
pop
adc
repnz
cld
nop
nop
jae
add
add
mov
add
push
push
mov
xchg
ret
jns
inc
add
push
lret
insb
pop
jo
pop
nop
push
mov
leave
nop
jmp
add
insb
out
add
jae
inc
inc
mov
cmp
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
add
adc
adc
repnz
nop
nop
jae
adc
je
add
jl
add
clc
repnz
nop
nop
jae
adc
push
push
add
push
mov
xchg
ret
push
mov
add
rclb
pop
inc
add
out
add
into
mov
jne
clc
repnz
nop
nop
jae
mov
add
adc
shr
dec
ljmp
nop
jae
adc
je
lock
push
clc
repnz
nop
nop
jae
add
mov
and
add
clc
repnz
nop
nop
jae
rolb
pop
adc
adc
repz
repnz
nop
nop
jae
add
add
add
test
repnz
nop
nop
jae
add
add
jl
ja
clc
repnz
nop
nop
jae
add
jae
int3
xlat
mov
push
mov
xchg
ret
cmp
gs
fistpl
push
mov
xchg
ret
add
pop
mov
push
mov
leave
nop
jmp
add
into
mov
push
push
mov
xchg
ret
add
add
jl
out
mov
nop
push
mov
leave
nop
jmp
mov
imul
and
add
jns
add
adc
add
mov
clc
repnz
nop
nop
jae
adc
mov
jns
add
pop
inc
xor
into
imul
mov
xchg
ret
add
add
movsl
shr
mov
clc
repnz
nop
nop
jae
add
rolb
lea
mov
clc
repnz
nop
nop
jae
cmp
mov
pop
add
mov
xchg
ret
daa
mov
gs
add
add
gs
push
mov
xchg
ret
mov
int3
push
fistl
repnz
nop
nop
jae
add
add
and
add
popf
rep
clc
repnz
nop
nop
jae
add
add
add
add
jnp
clc
repnz
nop
nop
jae
add
mov
nop
dec
xchg
call
clc
repnz
nop
nop
jae
add
sarb
nop
jae
cmp
cmpsb
mov
arpl
repnz
nop
nop
jae
inc
mov
add
clc
clc
repnz
nop
nop
jae
add
add
add
pusha
push
add
push
mov
xchg
ret
rolb
mov
mov
clc
repnz
nop
nop
jae
nop
add
jae
jae
add
clc
repnz
nop
nop
jae
add
cmpb
ss
inc
sub
mov
cmp
ret
add
add
and
clc
repnz
nop
nop
jae
cmp
stc
add
cmpl
nop
push
mov
leave
nop
jmp
inc
add
mov
add
mov
clc
repnz
nop
nop
jae
test
mov
add
fildl
clc
push
mov
xchg
ret
test
add
xor
mov
xchg
ret
add
insb
add
add
cmp
add
and
add
push
push
mov
xchg
ret
push
test
out
stos
movsl
add
xor
clc
repnz
nop
nop
jae
mov
xchg
add
mov
clc
repnz
nop
nop
jae
lret
add
add
divl
sar
repnz
nop
nop
jae
pop
jns
add
nop
add
pop
xchg
push
nop
push
mov
leave
nop
jmp
lea
je
add
popa
clc
repnz
nop
nop
jae
add
cmp
add
cli
pop
outsb
lcall
sub
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
cmpsb
jno
jns
add
movzwl
push
mov
xchg
ret
shlb
pop
add
movswl
clc
repnz
nop
nop
jae
jns
pop
sar
push
push
nop
push
mov
leave
nop
jmp
cmp
insb
mov
repnz
nop
nop
jae
jae
nop
add
orl
cld
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
or
stos
clc
repnz
nop
nop
jae
adc
inc
add
gs
mov
nop
push
mov
leave
nop
jmp
mov
je
add
clc
repnz
nop
nop
jae
jno
imul
add
or
add
push
mov
leave
nop
jmp
add
add
add
xchg
push
mov
add
add
nop
add
les
dec
add
add
sti
inc
jmp
addr16
push
jns
add
js
xor
add
outsb
mov
lret
add
mov
add
cwtl
or
add
xchg
pop
add
add
add
mov
in
js
add
dec
pop
into
fidivl
cmp
xchg
mov
jg
add
loope
pushf
push
je
add
loop
mov
pop
das
or
add
arpl
leave
sub
pushf
idivb
push
jecxz
fimull
xor
sub
pop
xor
xor
in
pop
fdivrs
mov
add
lcall
stos
add
mov
add
jno
add
in
test
decl
cmp
jge
cmc
push
jmp
add
xchg
mov
nop
push
push
cmp
in
cmp
test
out
ljmp
add
subl
mov
add
dec
cmp
xchg
arpl
sbb
add
xor
pushf
test
add
xchg
add
filds
dec
push
fdiv
movsb
add
xchg
jo
mov
sbb
mov
jle
sbb
xchg
ja
lods
push
mov
movsl
insb
sbb
orl
fsincos
jp,pt
pushf
loop
clc
cltd
adc
xchg
imul
rorl
cmp
sbb
push
test
or
or
add
dec
push
xchg
sub
std
and
add
add
cmpsb
add
push
add
jg
xchg
out
jnp
scas
add
cmpsl
mov
xchg
add
mov
add
inc
mov
add
mov
xchg
sbb
xchg
push
add
xor
je
add
and
cmp
mov
inc
mov
add
xchg
js
add
and
add
push
xchg
rolb
in
lds
pushf
mov
sbb
mov
sub
add
insb
push
fisttps
scas
sub
add
add
push
add
pop
adc
cmc
add
sbb
popa
clc
mov
add
dec
sub
add
lock
lea
sahf
cwtl
test
jns
or
pop
and
add
inc
xchg
add
cmp
add
pop
lret
xchg
add
add
lret
mov
mov
add
js
pop
decb
cmp
jns
dec
push
push
dec
or
mov
xchg
imul
add
in
lock
rclb
inc
loop
dec
add
imul
ror
outsb
dec
clc
jmp
lahf
dec
js
scas
cwtl
or
add
or
add
clc
ret
cmp
shrb
repnz
rclb
add
mov
aas
xlat
pop
inc
sub
test
enter
add
add
push
lds
add
lock
mov
imul
add
test
cmp
or
push
jmp
mov
add
out
test
popa
fbld
add
int3
mov
fimull
xor
lock
jae
add
in
fidivrs
lods
add
mov
clc
jbe
pop
xchg
add
test
mov
or
add
repz
add
test
add
lock
pusha
sbb
inc
jmp
dec
or
add
cmp
add
add
stc
fldcw
add
push
add
mov
add
add
add
add
les
stos
add
arpl
xchg
mov
data16
dec
in
sub
add
mov
repnz
cmp
and
add
stos
ret
or
add
aam
sahf
dec
loope
ja
fisubrl
add
pop
addb
xchg
xlat
pop
and
mov
test
add
test
jmp
xlat
add
fisttpl
lock
pop
xchg
mov
xchg
push
jmp
pop
fldt
add
xor
imul
add
adc
xor
inc
jb
dec
mov
insb
test
add
or
xchg
rcrb
in
mov
pop
test
add
push
sti
dec
leave
mov
add
rol
scas
add
iret
leave
lret
pop
and
ficompl
xchg
int
loopne
add
insb
insl
dec
add
add
add
adc
sbb
mov
xor
je
mov
addr16
jbe
mov
lahf
jg
add
xchg
loopne
add
mov
cmp
dec
or
aad
inc
and
scas
add
inc
cltd
popf
xor
fisttpl
jle
add
xorl
les
int
add
jmp
mov
pop
dec
cmp
jne
aaa
into
jnp
stc
cmpsl
adc
fs
add
add
repz
add
xchg
add
mov
jno
in
mov
add
pop
or
add
xor
pop
inc
pop
adc
mov
push
push
sub
jae
mov
daa
pop
cmp
jns
mov
mov
add
mov
ljmp
scas
vmread
add
add
add
mov
and
push
add
popf
push
je
jns
dec
push
add
and
js
frstor
sar
jecxz
mov
mov
add
xchg
push
lret
add
sub
add
imul
loopne
or
xchg
add
jg
fmulp
cmp
scas
rcrl
mov
out
push
push
mov
rcll
incb
pop
scas
push
add
xchg
inc
inc
icebp
pop
adc
cmp
jle
jb
std
cmc
loop
and
add
jle
pop
std
in
push
cli
push
sarb
add
arpl
add
fcmovu
sahf
mov
add
int
fld
cmpsl
nop
imul
imul
xor
negb
test
lods
add
daa
sub
add
popf
aam
ljmp
add
ror
dec
sbb
pop
ja
pop
sub
aaa
dec
lret
adc
add
inc
cmpsl
fisttpll
xchg
pusha
pop
or
add
ret
insb
ficomps
int
insb
stos
popf
xchg
add
inc
cmp
xchg
pop
stc
leave
inc
jae
imul
dec
fstp
ja
cmpsl
xor
mov
add
sbb
les
dec
cli
std
push
push
mov
add
cmp
push
jmp
add
or
add
mov
mov
push
add
pop
pop
and
sbb
pop
imul
iret
shl
jl
fmuls
cmp
add
sbb
mov
fisttpl
scas
add
mov
add
arpl
popf
out
fcomps
leave
dec
and
pop
add
add
sahf
iret
pop
cmpsl
add
xorl
add
push
add
daa
icebp
mov
mov
add
mov
in
mov
mov
add
inc
dec
lret
add
jnp
add
mov
icebp
test
ds
pop
sbb
add
add
xchg
sti
add
add
lret
jecxz
pop
push
in
out
add
and
add
jo
add
fst
mov
cld
scas
add
dec
dec
jge
cmpsl
xchg
fisttpll
adc
mov
add
xor
or
add
add
lcall
and
add
sub
add
sbb
inc
ljmp
iret
xchg
add
sbb
das
test
add
add
add
or
add
fstps
fldcw
add
cmp
fwait
xchg
mov
add
loope
arpl
add
lds
mov
outsl
pop
cwtl
shlb
fcompl
inc
addr16
push
add
sti
and
add
daa
adc
cmp
stc
lcall
sbb
sub
add
add
add
mov
jge
jae
sahf
jb
mov
pop
xchg
or
add
mov
add
nop
or
dec
add
add
fs
movsb
add
hlt
ds
xchg
inc
mulb
add
add
xchg
test
mov
inc
push
xor
add
push
das
scas
add
pop
mov
add
fs
cmp
sbb
push
xlat
adc
subl
mov
dec
pop
std
pop
enter
loop
mov
mov
test
add
pop
push
insb
jecxz
fdivr
in
push
mov
fisttpl
mov
enter
add
dec
sarl
sbb
sbb
lock
add
adc
add
xor
inc
sbb
in
dec
add
push
add
fwait
add
or
xchg
push
mov
sbb
sub
jns
fidivs
add
cli
jb
bound
lret
ficoms
adc
fnstsw
inc
jecxz
pop
lds
add
mov
add
aas
xchg
mov
add
add
add
fsubr
pop
or
add
mov
jl
add
add
aad
add
in
lock
or
add
mov
mov
or
lods
add
fisttps
test
add
pusha
mov
daa
jl
xor
popa
lods
add
sbb
dec
xchg
add
jge
sub
add
mov
add
ret
cld
xchg
mov
add
out
mov
faddl
mov
bsr
fwait
ret
nop
clc
sub
add
cmc
xlat
mov
mov
push
inc
jbe
rol
int
test
sub
add
add
iret
lods
add
out
sbb
add
xor
jmp
mov
xchg
push
repz
mov
shrl
aas
mov
add
in
mov
jnp
cmp
add
adc
pop
jae
rolb
mov
jle
dec
cmpsl
push
push
shl
dec
xchg
xor
sbb
movsl
and
add
push
pusha
daa
jecxz
jo
into
sub
add
lcall
pop
xchg
add
movsb
add
js
add
negl
icebp
push
and
jp
ds
mov
mov
testb
add
fisubrs
bnd
lret
add
test
add
add
daa
mov
mov
mov
push
jo
addr16
mov
add
xchg
adc
pop
xchg
sub
cmp
dec
cwtl
xchg
jge
stos
dec
add
cmp
add
lret
push
dec
das
loopne
push
mov
pop
and
cmp
mul
dec
mov
add
dec
out
jmp
mov
int3
mov
jo
popa
out
outsl
popf
pop
xchg
popa
mov
add
icebp
sub
push
xor
jg
inc
in
in
and
add
aad
ficomps
mov
mov
cld
pop
mov
pop
jge
fisttps
xchg
scas
add
aas
shll
iret
xchg
cwtl
and
sbb
in
pusha
aam
add
pushf
jmp
mov
add
pop
mov
jg
add
fsubrs
sub
add
aad
into
addb
inc
mov
inc
dec
pop
adc
push
outsb
lcall
or
outsb
jle
outsb
addb
mov
test
add
das
fwait
push
add
push
sbb
add
mov
js
add
mov
add
pop
mov
pusha
jg
mov
jp
sbb
repz
aad
pushf
daa
stos
fldt
cmp
hlt
js
add
nop
or
add
lods
add
mov
sub
add
add
xor
pushf
push
xchg
add
add
jecxz
push
adc
xchg
mov
add
add
add
add
std
inc
inc
mov
cld
pushf
mov
lret
stos
add
movsb
add
pop
jle
push
or
add
adc
into
iret
add
mov
add
push
xor
sti
lods
test
add
dec
call
or
add
dec
js
mov
jb
pop
cwtl
mov
mov
test
icebp
jns
lret
pop
shlb
add
jmp
enter
dec
mov
push
add
pusha
shlb
add
dec
lret
xchg
jl
and
add
out
scas
add
sbb
into
dec
sub
pusha
mov
xor
add
out
mov
inc
pop
mul
aaa
and
fdivl
pop
jb
mov
jns
add
xor
add
or
or
add
adc
add
in
push
sub
add
daa
mov
add
mov
xchg
adc
add
sub
add
add
and
stc
lcall
movsl
dec
or
add
pop
pusha
repnz
inc
inc
push
add
js
mov
andl
js
add
fidivrl
and
add
fisttps
or
ret
or
aaa
subl
je
jle
mov
jnp
jg
sti
into
daa
aam
mov
lret
xchg
inc
sub
add
ds
imul
add
mov
inc
jge
add
adc
add
int
add
ja
cmp
push
add
dec
enter
add
dec
testb
add
xchg
mov
fwait
stos
add
xor
jge
imul
ret
fs
and
add
jno
xchg
jmp
bnd
or
add
jg
fsubrl
icebp
cwtl
rorb
push
push
xchg
call
inc
insl
icebp
add
add
mov
xchg
movsb
add
icebp
loop
mov
sub
add
enter
xchg
std
adc
mov
add
adc
add
inc
repnz
jae
jb
xchg
push
xor
xor
test
add
fstpl
imul
popa
sub
add
add
pop
fildll
inc
sbb
inc
xchg
mov
add
pop
icebp
jmp
jno
cld
pop
mov
movsb
add
pop
inc
adc
sub
add
test
add
mov
jmp
jno
je
mov
dec
mov
pop
aad
sub
and
add
dec
jbe
add
add
adc
add
add
sub
add
add
dec
gs
dec
xor
push
add
push
jnp
test
adc
cld
mov
add
cmpsb
add
test
repnz
pop
inc
mov
add
add
call
test
add
or
jb
icebp
loop
mov
mov
add
in
add
std
mov
incb
shr
xchg
lock
add
sub
add
pop
ja
cmp
adc
addb
fsubs
pop
jle
mov
ds
mov
or
add
add
mov
push
fwait
pushl
pop
lods
fwait
rcll
fs
popa
mov
pop
dec
push
sbb
mov
out
adc
imul
mov
fmuls
add
clc
outsb
dec
dec
add
adc
pop
mov
jmp
mov
js
xchg
cwtl
int3
movb
xchg
mov
jae
movsl
movsl
sbb
jbe
mov
pop
movsl
mov
xchg
add
xchg
mov
add
test
add
xchg
mov
rcll
iret
into
pop
and
add
adc
aam
and
add
insb
arpl
in
popa
adc
add
add
sub
add
jb
inc
inc
add
lods
popf
xchg
lret
das
ret
jmp
mov
add
inc
lods
add
push
jle
inc
out
pop
leave
jecxz
inc
test
mov
add
xor
mov
test
and
add
lods
add
pop
pusha
xchg
xor
add
sbb
add
lret
push
push
addb
mov
add
add
xchg
pop
mov
add
out
or
add
pop
outsb
add
add
add
push
scas
add
jge
add
adc
xor
sub
add
push
add
movsl
shl
sub
ret
adc
add
xchg
add
add
test
add
shr
movq
mov
mov
stos
add
add
jnp
add
fs
adc
sub
mov
daa
test
add
push
in
loope
cmpsb
add
pop
mov
mov
inc
out
xchg
mov
lea
add
add
add
jp
add
cmp
jecxz
inc
fldenv
add
push
sbb
lret
jb
xor
xchg
repnz
addb
adc
add
dec
cltd
lcall
push
jns
test
les
add
sbb
test
xchg
dec
addb
pushf
icebp
fnstcw
push
push
pop
out
add
xchg
push
sbb
xchg
test
daa
xchg
xor
fldt
dec
loop
or
add
inc
inc
inc
movsl
add
add
adc
push
jnp
pop
mov
cvtps2pd
add
ret
scas
add
adc
cld
sub
add
jg
jle
or
add
add
add
dec
jl
in
mov
add
sbb
mov
add
add
outsb
inc
stc
mov
adc
add
add
int
ret
jle
pusha
lock
add
mov
jge
addb
ljmp
add
sub
mov
mov
dec
cmpsl
mov
std
mov
jmp
xchg
push
adc
fbld
add
add
add
jae
add
iret
cmp
add
fdivp
loope
addb
xor
add
call
gs
lcall
xor
mov
testb
cmp
add
mov
mov
add
xor
add
fisttps
std
mov
jne
movsl
lock
pusha
sub
add
inc
jmp
scas
add
sbb
add
add
cmp
adc
pop
mov
add
sbb
cmp
lret
fdivrs
add
in
mov
addr16
add
inc
pop
mov
addl
xchg
pop
fdivrs
sub
add
adc
add
enter
add
sbb
push
repz
add
and
add
lret
pop
pop
data16
daa
xchg
add
je
sbb
hlt
int
add
insl
or
inc
mov
add
mov
add
testl
cld
mov
add
loope
add
add
adc
add
mov
lahf
lods
add
add
addr16
and
scas
aas
push
jnp
add
add
add
incl
add
clc
dec
xchg
pusha
dec
outsb
movsl
nop
sub
add
test
mov
sub
add
sahf
fidivs
adc
mov
aaa
jp
lahf
lret
iret
xor
mov
add
or
add
cmc
mov
lret
mov
add
in
test
add
jg
jnp
lock
add
js
lcall
mov
add
mov
mov
daa
mov
dec
mov
add
sbb
loope
or
add
inc
cmp
out
mov
inc
cmpsb
add
data16
push
lret
stos
jmp
adc
add
xchg
add
pop
out
xchg
lods
add
addl
add
mov
jmp
inc
in
inc
ss
add
mov
mov
add
out
aaa
inc
pop
or
add
mov
add
loop
sbb
into
ret
adc
shll
mov
in
cmpsb
add
lret
popa
je
js
add
pop
scas
fistps
lret
jns
add
push
push
repz
jb
dec
mov
add
add
add
add
xchg
dec
aam
ss
cmpl
jle
ja
add
loop
sbbl
pop
push
dec
xor
leave
ss
add
arpl
add
in
idivb
add
push
loope
out
inc
std
push
add
xchg
add
inc
pop
test
into
mov
call
add
add
mov
popa
aas
leave
dec
leave
lea
loop
mov
add
mov
dec
push
pop
mov
add
sbb
pop
add
add
add
out
add
add
xchg
jb
push
ficompl
push
add
mov
sbb
adc
dec
jp
add
add
mov
mov
test
add
add
lds
cwtl
repnz
jmp
mov
mov
add
in
lret
add
sti
push
add
push
xor
or
add
ds
leave
sbb
pop
fs
mov
jmp
pop
fldcw
add
out
test
add
jge
sbb
into
stos
add
xchg
xchg
cwtl
in
mov
sbb
add
insl
sbb
xlat
and
add
ss
jno
ds
shlb
or
add
les
add
mov
push
push
pusha
stos
sub
add
jmp
add
hlt
aas
or
int
mov
out
sub
add
dec
dec
dec
imul
sbb
rolb
push
add
loop
push
pop
cwtl
into
mov
mov
cmp
lds
movsl
jo
jns
xchg
das
mov
mov
pause
in
xor
add
rorl
vmwrite
mov
add
jo
add
mov
test
add
adc
leave
clc
and
add
outsb
sbb
dec
hlt
sub
add
dec
inc
pop
insl
addb
aad
push
call
add
xchg
pusha
stc
clc
push
rcrb
mov
add
sbb
add
add
rcrl
xchg
scas
add
mov
add
add
add
pop
pop
mov
cmpsl
xchg
addl
dec
loopne
xor
add
mov
sbb
push
adc
add
add
add
push
add
dec
mov
add
inc
mov
out
ss
mov
add
push
add
and
cwtl
push
add
mov
mov
data16
lcall
aas
sbb
add
xchg
and
mov
lods
add
test
add
mov
aam
mov
cli
pop
jno
popa
les
stc
insl
add
add
add
push
add
sub
enter
inc
lods
add
cld
and
lahf
xchg
inc
cmp
out
mov
add
test
add
loope
into
fsubs
imul
add
add
movsb
add
jmp
cmp
addb
push
out
pop
cmp
inc
jne
xchg
push
dec
xchg
mov
adc
cmpsb
add
dec
aas
cwtl
mov
add
hlt
jb
jp
push
push
in
add
cli
loope
cmp
dec
mov
add
or
add
lret
pushf
gs
add
add
mov
movsl
int
mov
mov
add
mov
jge
sub
jb
sarl
test
jno
add
sbb
and
add
jne
xlat
mov
add
jge
popf
notl
out
sub
nop
add
add
mov
add
inc
das
daa
aaa
jmp
arpl
fisubrs
scas
add
fsubrl
or
add
pop
sub
add
mov
add
out
push
je
adc
add
pop
aaa
mov
stc
mov
nop
cmpsl
cmp
int
test
add
dec
out
leave
aam
and
add
add
nop
movsl
push
or
add
stos
add
mov
into
adc
push
or
ss
xor
testb
pop
ljmp
xchg
mov
add
icebp
xor
add
jmp
out
imul
dec
cmp
lds
rcll
fs
movsl
mov
sbb
xor
out
mov
flds
test
xchg
scas
xchg
fs
mov
mov
fdivp
sub
or
out
xchg
push
add
sbb
pop
shlb
add
aad
or
xchg
fmull
mov
popf
mov
ds
dec
int
add
add
call
add
clc
cltd
add
add
outsb
push
and
add
test
add
addb
sti
pop
aam
notl
or
add
scas
jae
repnz
add
frstor
out
add
outsb
add
add
lret
lods
add
shlb
xchg
insb
jbe
mov
ret
pop
clc
outsb
in
add
push
aam
xchg
sbb
add
xor
int
mov
and
mov
leave
dec
movsb
add
lods
add
icebp
jle
inc
cmpsb
add
pushf
add
add
or
add
add
cld
push
mov
addb
icebp
jo
adc
add
xchg
fmull
pusha
in
mov
add
flds
and
ud0
mov
add
sahf
lock
loop
add
mov
add
int
bswap
mov
add
and
add
add
in
xchg
add
add
data16
add
in
loop
pop
sbb
xchg
sub
add
xor
ja
in
dec
popa
addr16
dec
jo
stos
add
mov
push
out
add
inc
pop
cli
jns
push
xchg
in
imul
repnz
xor
iret
and
add
cmc
cmp
xchg
add
push
add
ud1
pop
pushf
cmp
mov
add
cmp
std
int3
jecxz
push
add
dec
rcl
mov
xchg
mov
in
mov
add
mov
add
and
add
or
popa
push
stos
add
sbb
scas
add
mov
add
pop
pop
imul
mov
add
add
and
add
mov
add
add
popf
repz
jb
xor
scas
add
inc
pop
test
add
adcl
cmp
insl
pop
jecxz
pusha
add
add
add
into
dec
ret
fdivl
inc
shl
adc
add
and
add
sahf
inc
mov
or
add
jecxz
sub
inc
sbb
mov
sub
loopne
lret
in
nop
inc
mov
jl
imul
cwtl
ret
add
jge
incl
add
xchg
mov
addb
xor
dec
pop
xchg
fs
addb
push
mov
and
xchg
mov
ret
sarb
ja
mov
cmpsb
add
xor
inc
add
rcr
adc
loopne
add
add
je
hlt
test
add
mov
push
xchg
decb
add
shlb
push
mov
orl
in
ret
pop
aaa
xor
mov
sarl
cmp
push
test
dec
jb
imul
rorl
sbb
sbb
andl
add
xchg
cld
mov
inc
imul
add
gs
fdivrl
imulb
stos
xchg
xor
add
enter
pushf
push
xchg
jmp
leave
mov
addb
dec
ljmp
sub
add
shll
add
cli
mov
call
loope
push
dec
mov
add
int
lds
add
pop
sub
or
mov
iret
or
xchg
jp
pop
ja
cpuid
add
mov
mov
aaa
fs
gs
jl
xchg
pop
in
mov
xchg
lock
in
sbb
xchg
add
add
cld
sti
add
imul
fldt
enter
add
mov
hlt
mov
pop
push
arpl
lods
addl
sub
add
add
cwtl
fsubrl
xlat
lret
add
add
add
add
dec
pushf
cmp
andps
stc
stos
add
mov
add
bound
add
testl
mov
adc
arpl
mov
xor
cmpsb
add
repnz
movsl
cli
inc
mov
ret
add
inc
dec
adc
das
pop
cmpsb
add
into
adc
jne
jecxz
int
add
mov
add
dec
jne
sar
jmp
adc
xchg
mov
dec
fmulp
push
add
and
add
mov
add
in
dec
xchg
addr16
add
in
mov
add
mov
add
add
loopne
mov
je
add
popa
arpl
popf
dec
jae
push
sub
add
add
jle
and
add
sahf
in
cmp
pushf
push
adc
mov
testb
ret
outsl
mov
add
cmpsl
sub
add
fistps
cmpsb
add
aaa
adc
loope
int3
out
rolb
add
ss
push
add
or
xor
lods
xor
add
inc
addb
jb
hlt
aam
lock
xlat
dec
aad
mov
add
cmp
and
or
fs
add
insb
add
add
mov
popf
sbb
push
add
inc
cli
shll
add
add
mov
add
outsl
xor
push
add
cltd
adc
out
mov
cmp
add
test
add
inc
push
dec
sti
scas
add
ret
dec
push
mov
fwait
outsl
and
add
push
outsb
cmpsl
inc
call
sbb
add
ret
in
push
loopne
add
xor
add
add
add
jno
add
loope
out
sar
add
mov
xlat
push
push
add
sbb
cmp
mov
add
in
addb
mulb
add
xchg
fwait
rorl
das
in
jmp
outsl
ss
sub
add
js
adc
or
add
xchg
je
add
inc
fidivrs
add
jle
add
fdivp
fisubl
mov
sub
or
leave
push
add
add
inc
add
add
sub
add
and
add
bound
dec
xchg
add
jae
add
out
arpl
pop
aaa
jae
push
add
inc
mov
inc
cmpsl
pop
inc
loopne
inc
mov
xor
loope
jae
cmp
enter
in
pop
fnstsw
sub
pop
add
add
add
push
add
adc
xchg
iret
jmp
int
cld
repnz
fcmovbe
cltd
rcll
add
cmc
sub
and
add
xchg
out
rcrl
cmc
cmp
cld
sbb
cmpsb
add
adc
pop
mov
mov
add
add
lods
add
jns
push
add
test
out
xor
insl
data16
add
pop
pop
mov
and
add
xchg
adc
pop
cmp
mul
xchg
iret
negb
dec
mov
adc
jle
lahf
testl
add
xor
jo
inc
movsb
add
mov
add
pop
rorl
cmp
jg
dec
inc
pop
orl
sub
hlt
sub
adc
add
or
add
xor
cmp
and
add
add
jne
jne
in
dec
add
add
stos
add
lcall
imul
cltd
jno
in
and
add
add
add
jle
jno
stos
add
push
jno
loope
or
add
dec
sub
add
inc
mov
lds
add
add
pmuludq
hlt
cmp
addb
nop
ja
ja
sub
add
int
pop
pop
jnp
or
add
in
scas
add
roll
std
les
jnp
push
fsubrs
cltd
sub
mov
sub
add
cwtl
sbb
bound
add
sub
in
stos
add
ss
and
add
rorl
push
cmp
hlt
pushf
mov
add
faddl
add
push
jnp
enter
add
jmp
mov
add
pop
mov
in
gs
xchg
cmp
pushf
sbb
push
mov
add
mov
add
pop
cmpsl
and
add
sbb
je
dec
ret
addb
pop
imul
mov
add
gs
les
add
das
mov
imul
add
add
repz
sub
add
jecxz
xchg
add
add
push
mov
add
add
inc
and
add
pop
cmp
das
cmp
mulb
add
xlat
ss
inc
adc
fwait
sbb
add
xchg
sbb
in
xchg
add
sub
out
lret
in
rorl
add
sbb
sbb
add
aas
jp
cli
lock
add
and
inc
jne
in
addb
out
idiv
out
dec
or
xchg
sbb
cmp
add
iret
in
add
sub
add
add
jo
inc
dec
loop
test
add
sub
add
bound
insl
rcr
or
add
mov
push
add
std
nop
adc
add
inc
aas
sbb
mov
sbb
cmp
pop
les
push
cwtl
sbb
push
push
mov
add
loop
or
add
mov
and
js
dec
shrl
add
mov
xlat
hlt
jecxz
jne
in
add
inc
xor
add
mov
outsl
sbb
add
cli
mov
push
aas
std
inc
sbb
adc
aas
div
popa
xor
cmp
add
pshufw
or
add
mov
pop
js
cmp
add
std
das
in
outsl
add
add
pop
inc
jmp
out
xchg
dec
mov
outsl
push
fldz
pop
pop
das
or
sbb
lods
add
pushf
icebp
pop
push
jns
add
mov
lret
add
cld
stos
add
pop
mov
cld
and
add
push
add
xlat
jle
pop
fcomps
repnz
lods
add
sub
mov
mov
add
mov
mov
add
jnp
xor
xchg
ja
push
add
push
setb
popf
aas
imul
add
add
pop
js
add
rcl
xorl
pushf
mov
enter
inc
or
add
or
mov
imul
cmp
fadds
lods
jg
out
dec
or
add
jge
jb
cmp
xchg
adc
ret
add
add
or
add
lods
add
addb
dec
pop
and
add
add
scas
add
dec
xchg
cltd
call
push
fs
xchg
iret
pop
push
pushf
cli
cmpsl
xchg
push
mov
in
xchg
dec
push
ret
add
rcr
and
jp
jo
nop
iret
and
add
fistps
mov
jg
push
jmp
jmp
add
pop
xchg
stos
add
mov
clc
jp
add
mov
aam
jo
inc
push
add
push
add
pop
int
add
int3
cmp
lods
add
adc
add
dec
or
add
mov
add
cmp
pop
lods
add
int
adc
mov
ret
xor
or
add
icebp
adc
add
cmpsl
inc
lret
scas
xchg
aad
mov
pushw
ret
shlb
xchg
insl
sbb
add
pop
popa
jo
sbb
pop
out
std
xor
mov
aaa
fs
add
push
and
test
add
add
mull
pusha
arpl
dec
cmp
cmp
add
add
pop
sar
jae
push
pop
pop
jnp
call
add
sub
add
out
jmp
inc
add
add
and
add
add
mov
addb
pop
push
xor
push
adc
inc
push
add
pop
mov
add
push
add
or
add
xor
mov
jl
movsb
add
loop
add
cwtl
jmp
add
sbb
nop
pop
push
add
and
add
enter
outsl
jmp
addr16
xor
mov
mov
repz
add
push
arpl
leave
jle
test
adc
add
mov
jmp
inc
xchg
add
ds
xchg
les
add
xor
pop
sub
fidivrl
add
stos
push
xor
sarb
add
cmp
add
xchg
mov
mov
add
les
mov
repnz
inc
inc
xchg
fcmovnu
dec
into
and
add
inc
lret
add
add
push
xchg
mov
sahf
shlb
add
mov
mov
cltd
jge
movsb
add
loop
subl
add
dec
aam
lahf
add
add
loopne
mov
pusha
enter
dec
mov
add
add
popa
int
js
aaa
cmp
mov
add
or
add
das
jne
mov
or
add
out
stos
adc
lahf
ds
adc
add
je
jg
fs
lods
inc
test
add
and
insl
inc
xor
mov
fdivs
aam
jbe
lds
add
repz
push
mov
xor
mov
add
add
jbe
pop
insb
add
cmp
sub
add
pop
cld
sub
add
call
add
mov
add
mov
sub
add
pop
enter
test
mov
pusha
pop
movsb
add
pusha
dec
dec
inc
mov
xchg
or
aam
mov
add
inc
insl
enter
xor
xchg
cmp
push
add
scas
add
cmp
xchg
ret
xchg
sub
add
dec
sbb
pusha
add
popa
aad
movsb
add
cwtl
enter
adc
fsubrl
push
dec
inc
ftst
push
daa
pusha
xchg
sub
add
add
adc
dec
insb
and
add
add
sbb
add
cltd
pop
dec
add
data16
add
xchg
in
enter
lcall
lods
add
rcll
mov
loopne
adc
test
add
adc
test
mov
jg
icebp
jb
add
pop
xor
in
cmp
jecxz
mov
sbb
incw
xchg
inc
psraw
inc
mov
pop
mov
lahf
jecxz
imul
add
sahf
jno
pusha
out
mov
fs
in
xchg
aam
int3
sbb
jl
add
ret
mov
add
mov
mov
jg
push
push
fcompl
inc
mov
add
push
add
addr16
sub
add
ret
aas
mov
add
or
add
mov
add
add
add
fwait
outsb
cmp
inc
mov
add
sti
nop
adc
xchg
addb
or
add
fildl
sti
jl
add
mov
mov
sub
xchg
mov
add
jnp
lret
stos
sahf
lds
add
adc
cmp
push
std
pop
out
mov
add
cmpsb
add
fadd
mov
add
clc
mov
repnz
add
add
mov
call
bound
push
sarb
lods
xchg
leave
jae
dec
cltd
mov
insl
pop
cld
xor
add
in
ret
inc
iret
xchg
sbb
cmpsb
add
fcoml
ret
in
out
lret
add
pop
sub
add
lret
aaa
xor
dec
aaa
fnsave
clc
pop
mov
add
ret
dec
scas
add
bound
aam
sti
cltd
fdivp
test
add
aaa
stc
push
aad
or
ss
add
sub
add
push
leave
fxch
pop
pop
sti
xor
add
mov
add
mov
adc
adc
mov
push
and
add
jns
lock
lahf
lret
dec
fnstsw
jo
cwtl
imul
push
cmp
ret
daa
inc
mov
add
ret
mov
ret
popa
imul
add
scas
jg
jne
add
xor
inc
insb
adc
adc
mov
shrb
add
ret
fsts
xchg
sub
test
test
sarl
mov
add
add
scas
add
and
add
xor
call
jb
push
add
mov
add
jge
imulb
jecxz
add
ret
jb
dec
mov
push
je
lods
add
jmp
add
add
movsb
add
jge
mov
push
js
int
jnp
add
xor
mov
add
gs
das
mov
into
push
lahf
popa
xchg
outsb
movsl
mov
lret
push
add
add
jl
dec
jo
add
ficoms
nop
inc
sbb
push
add
mov
or
add
add
xlat
sarl
test
add
add
add
add
dec
orl
iret
xlat
cmpsb
add
jbe
scas
add
aam
cmp
add
add
cld
or
add
hlt
and
cmp
popa
fidivs
cmp
mov
inc
mov
arpl
cmp
jne
adc
cmpsl
sbb
scas
daa
or
add
inc
pop
mov
arpl
add
in
xlat
jae
fucomip
push
add
ds
enter
add
add
dec
add
add
in
mov
sbb
cmp
fs
sbb
mov
test
add
add
pop
insb
jb
lods
jl
xor
inc
sti
inc
push
outsb
in
add
cmp
add
cmp
adc
movsl
pushf
or
ja
pushf
jnp
stc
clc
push
mov
sbb
adc
cmp
sub
add
stc
loope
sbb
pop
movsl
or
add
add
in
add
mov
cli
jo
add
add
les
addb
lods
add
jne
imul
jo
mov
jp
mov
add
adc
push
mov
add
add
insb
push
addl
xchg
mov
add
enter
add
add
push
in
fsub
sbb
push
lds
add
or
push
arpl
movsl
dec
clc
mov
add
add
stos
mov
add
addb
jl
and
add
pop
xor
cmp
add
icebp
mov
add
xrelease
add
icebp
push
ret
xor
xchg
mov
xchg
sub
add
arpl
movsl
les
popf
stc
scas
add
add
out
push
clc
pop
orl
fidivrs
lahf
ror
in
pop
push
dec
enter
das
add
add
add
loope
ret
jge
inc
pop
sub
add
adc
addb
mov
add
jbe
add
in
iret
sbb
add
mov
js
push
pop
jne
add
add
lcall
int
dec
xlat
subl
sbb
and
mov
add
jl
pop
imul
cvtps2pd
pop
test
dec
in
pop
push
hlt
and
add
inc
jo
addb
stc
xor
rcrl
in
jo
add
inc
test
add
int3
xor
scas
add
add
add
push
add
or
add
fstpt
int
push
inc
fstpl
scas
add
cwtl
mov
arpl
jmp
cmp
xchg
movsl
mov
add
add
aas
push
fisubl
dec
mov
or
icebp
les
mov
mov
add
mov
adc
out
jmp
add
loopne
jnp
testl
negl
cld
mov
mov
sarl
jnp
lods
add
cmp
xchg
adc
add
jp
cmp
adc
push
add
add
addb
ror
fwait
add
outsb
fldt
add
daa
bound
fistpl
das
xor
fiaddl
add
ds
lods
idivb
adc
add
xor
xchg
or
add
jmp
add
mov
fs
js
inc
add
popf
xor
add
out
cmp
test
add
jp
cmp
pushf
jmp
add
ja
add
xor
jmp
mov
ficoms
jb
aas
test
add
loope
pop
add
add
xchg
int
and
add
add
push
add
insl
jecxz
add
and
add
mov
jmp
adc
imul
mov
push
add
push
in
push
add
lods
push
in
hlt
fsubrp
jnp
fwait
mov
add
stos
add
add
je
pop
pop
movsl
sbb
pop
add
add
xlat
jle
sub
add
inc
mov
fmuls
push
ljmp
add
add
add
add
cmp
gs
nop
repnz
fidivrs
in
jge
push
mov
je
bound
add
fcompl
add
push
dec
adc
pop
push
add
xchg
daa
in
bound
add
jo
push
add
nop
push
arpl
movsb
add
leave
pop
mov
add
dec
mov
add
sbb
xchg
add
add
jecxz
cmpl
aad
or
add
sbb
xchg
mov
add
dec
pop
adc
dec
cwtl
inc
pop
xor
xor
push
ds
dec
xor
mov
add
add
out
loop
add
add
add
clc
jnp
xor
add
pop
dec
xor
lods
inc
sbb
add
add
or
add
pop
out
ret
jg
push
divb
inc
pushf
shlb
add
imul
cmp
lods
add
push
cli
xchg
cltd
push
add
icebp
add
add
out
stos
cwtl
aas
push
add
int3
shl
sub
add
add
popa
das
shll
mov
jg
cmp
mov
sti
xchg
shlb
cmp
leave
mov
jecxz
sub
add
adc
lods
mov
pusha
xchg
inc
adcl
xchg
xor
add
jge
sub
add
and
add
add
iret
lahf
lahf
ret
add
notb
adc
jp
cli
cmp
pop
popa
in
lcall
jnp
pop
xor
pop
icebp
fdivs
subl
lcall
rcll
push
movsl
test
add
add
les
cld
push
rep
inc
add
pop
xchg
add
sbb
sub
pop
lret
fbld
add
mov
push
jmp
add
or
add
pop
mov
out
stc
scas
add
mov
and
jbe
fsubrs
xchg
cmp
adcl
adc
adc
sub
add
sbb
add
add
fisubrl
jge
inc
adc
popf
cltd
in
iret
inc
sbb
jnp
stc
mov
aaa
mov
add
sbbl
add
mov
add
fistps
or
add
inc
shr
std
sub
add
add
sahf
adc
sbb
lret
xchg
lcall
test
add
ret
mov
sbb
add
imul
fisubs
push
xchg
mov
mov
int3
aas
adc
int
add
jmp
add
dec
out
sbb
daa
fsubl
mov
insb
xor
xchg
lock
leave
sub
add
add
in
pop
pop
cmp
add
scas
add
fistl
mov
mov
testl
into
insb
imul
fists
rcll
inc
jg
popa
pop
sub
add
rolb
dec
add
add
fdivr
jb
dec
stos
add
rol
xor
add
or
test
insl
fwait
mov
xchg
aaa
jle
stos
jb
subl
add
js
sbb
add
mov
push
incb
add
sub
add
add
movsb
add
rclb
push
cli
loope
or
add
and
outsl
outsb
stos
movsb
add
aaa
push
mov
jo
stc
or
add
add
icebp
push
add
mov
xchg
mov
movsl
mov
add
mov
add
test
mov
add
aam
and
add
ret
cmc
scas
add
inc
scas
add
cld
outsl
imul
add
pop
mov
ret
bound
add
stc
dec
cld
mov
sbb
mov
xchg
add
add
add
cmc
dec
test
aas
or
add
add
add
inc
push
mov
jl
pop
ja
nop
loop
add
add
add
jle
mov
add
add
pusha
push
fistpl
sub
add
jle
imul
rcrb
add
mov
cmpsl
in
xchg
pushf
ficoms
fsubs
addb
sahf
dec
and
add
push
cmp
inc
xor
add
cmpsl
pusha
mov
das
push
jecxz
mov
jg
test
add
ss
in
add
test
sbbl
adc
sub
std
push
jne
add
faddp
adc
aas
sbb
add
xchg
adc
dec
fsubrs
add
mov
add
movsl
dec
dec
push
pop
outsl
adc
push
add
cwtl
call
add
jp
pushf
fimuls
sbb
add
add
sbbl
add
adc
adc
xor
adc
movsl
mov
add
notb
push
or
add
lahf
mov
enter
jmp
in
sbb
jnp
add
test
push
pushf
pop
dec
cld
movsb
add
mov
add
shl
stos
or
add
push
push
js
pop
clc
addl
js
loop
xchg
mov
add
push
inc
jnp
gs
add
sub
cmpsb
add
cltd
adc
xchg
inc
pop
add
call
add
insl
ja
push
add
int3
fldt
xor
add
clc
stc
loop
jl
push
sub
mov
mov
jnp
or
add
xchg
pop
dec
jmp
sbb
add
add
jo
jbe
add
sub
aas
xchg
sti
mov
add
add
ficomps
call
lea
xor
sti
out
xor
xchg
add
addr16
lcall
lds
ljmp
add
movsb
add
rorb
add
bound
fadds
sub
mov
in
push
add
inc
inc
inc
ret
add
inc
dec
pop
mov
scas
add
mov
mov
mov
test
add
jp
dec
jno
out
pop
aaa
stos
test
cld
xchg
aas
and
add
xor
add
fldl
add
rorb
and
add
std
sti
das
rdtsc
or
add
push
dec
sub
add
popa
mov
clc
sbb
decl
inc
push
sbb
adc
add
clc
or
call
add
sub
add
inc
jbe
jnp
scas
jne
and
out
shrl
adc
add
mov
add
hlt
addr16
pop
inc
cld
mov
add
jmp
cmc
int3
jbe
mov
add
dec
add
add
mov
call
xchg
and
xchg
add
test
add
push
and
push
clc
and
add
dec
mov
adc
pop
inc
gs
adc
into
xor
push
fbld
sub
add
inc
add
add
inc
out
cmp
setns
add
adc
add
jmp
add
outsl
loopne
subl
cmp
inc
pop
xor
lret
mov
xor
adc
lret
jle
lock
push
add
inc
push
sub
cmp
add
add
mov
add
push
mov
add
out
xchg
dec
cmpsl
push
rolb
push
dec
sub
in
sbb
mov
add
mov
add
scas
xchg
inc
enter
out
cmp
daa
repnz
mov
lea
lods
mov
fldenv
add
cmpsl
xor
aad
add
add
dec
jl
das
push
cmc
push
mov
jnp
ja
int3
mov
add
das
sbb
add
adc
sub
imul
add
inc
pop
out
cltd
mov
mov
movsb
add
aam
xor
add
xor
mov
add
scas
sub
add
loope
out
xchg
pop
add
or
add
dec
aam
imul
jno
imul
fisttps
in
ss
lret
pop
popa
addr16
stc
mov
xor
sbb
scas
loopne
sbb
add
or
add
add
pop
dec
scas
add
int3
movsl
mov
ja
sub
add
push
sbb
xor
pop
push
add
push
scas
rcl
int3
idivb
jmp
sub
add
cli
and
add
and
pop
push
dec
cmp
cld
fcmovnb
add
fs
lea
test
add
add
imul
popa
call
jbe
add
leave
pop
cmp
xchg
add
and
add
xlat
mov
xchg
imul
movsl
add
push
add
cmc
adc
or
cmpsl
mov
add
divl
add
and
sub
mov
cmp
add
mov
cmpsl
jbe
mov
ret
loop
adc
add
imul
mov
add
adc
mov
aam
or
in
add
push
arpl
jne
addb
cmp
adc
and
aam
mov
add
fs
xchg
jae
inc
or
add
pop
fimuls
js
fstpt
sbb
add
add
lret
add
subl
cwtl
adc
dec
mov
test
add
pop
pop
into
sar
mov
sahf
mov
or
add
and
insl
push
cld
jle
add
and
add
add
cmpsb
add
jbe
push
mov
or
add
jnp
clc
jae
scas
rorb
add
add
dec
mov
xor
dec
dec
out
lea
sub
lret
lea
adc
add
xor
add
add
add
ds
shrl
xchg
cmpsl
dec
add
fdiv
mov
mov
dec
test
add
cmp
add
add
add
xor
daa
mov
rclb
cmc
mov
fimull
add
movsb
add
loope
pop
inc
adc
mov
mov
jnp
pop
aaa
mov
add
add
add
imul
mov
addb
std
jae
mov
add
add
in
int
jnp
and
cmc
leave
jb
add
sbb
jg
sub
add
dec
mov
add
push
xchg
or
add
and
add
push
pop
mov
add
xor
gs
fs
mov
and
add
mov
out
mov
sahf
cmp
addb
add
ficoms
push
add
mov
push
inc
add
rcr
add
add
cmpsl
pop
enter
mov
jl
add
mov
je
sbb
mov
add
lret
xchg
movsb
add
mov
add
or
add
and
outsb
ljmp
sti
scas
pop
lods
cmp
mov
jnp
pop
xlat
inc
xor
add
test
add
imul
xchg
push
fs
add
pop
loope
adc
add
mov
lds
js
nop
mov
notl
jb
mov
or
add
pop
cltd
cwtl
jns
scas
lock
in
sub
lds
add
add
sbb
mov
add
dec
popa
les
xchg
addr16
pop
std
hlt
dec
xchg
dec
add
or
push
xchg
fisttpll
add
pop
test
add
add
dec
lds
out
arpl
pop
outsb
jmp
mov
fs
mov
push
adc
in
xor
push
push
fnstsw
xchg
daa
gs
xchg
add
xchg
fiadds
push
pop
sti
dec
sub
adc
inc
faddl
jb
xlat
jmp
sbb
jne
add
std
adc
add
inc
and
add
jnp
xchg
xchg
imull
add
xchg
jecxz,pt
pop
negl
inc
imul
add
add
into
push
scas
add
out
movsl
cmc
sub
add
rcrb
lock
xchg
cltd
push
inc
and
add
jne
sbb
mov
add
add
add
add
arpl
adc
sbb
mov
add
jg
add
mov
outsb
xchg
fwait
ss
add
mov
add
mov
add
repnz
add
cmp
out
adc
hlt
sti
xchg
or
lcall
pop
loop
jne
outsl
inc
lret
sahf
call
and
bound
and
add
testb
inc
pop
ret
scas
add
xchg
lods
add
ljmp
loopne
lea
adc
cmpsl
mov
add
xchg
arpl
push
mov
add
das
mov
jne
add
popf
les
mov
add
sbb
cmc
mov
add
jl
stos
add
mov
data16
mov
das
loopne
add
pushf
out
add
aad
add
add
movsb
add
scas
inc
mov
add
rclb
ss
test
xchg
add
fildl
add
push
pushf
add
sbb
push
mov
cmp
push
je
add
pop
pop
stos
shl
mov
add
xor
aas
add
add
jbe
sbb
insb
aam
lock
adc
fldenv
add
sub
add
jmp
fsubs
adcl
ret
cmpsl
stc
jmp
loop
add
xchg
shr
je
add
fldenv
add
add
pusha
mov
nop
inc
aas
or
add
mov
dec
mov
icebp
aad
add
loopne
jmp
test
add
xchg
and
add
pop
jecxz
adc
addr16
or
repz
add
add
push
clc
mov
insl
cli
pop
movsl
aaa
les
or
pop
cmpsb
add
jnp
cmp
cmp
xlat
xchg
nop
call
mov
mov
add
sti
add
mov
add
mov
jo
xchg
fildll
mov
test
add
xor
add
add
add
dec
pop
aaa
mov
add
dec
repnz
sti
adc
les
cli
mov
lds
add
cmpsb
add
ljmp
add
ror
dec
hlt
inc
add
add
xor
push
xchg
add
fwait
loop
cmp
into
adc
pop
and
pop
test
add
addl
dec
jno
loopne
sub
cli
adc
push
add
fistpl
testl
add
or
add
sub
stos
add
xchg
add
mov
add
dec
das
mov
add
test
add
lods
dec
lock
cli
repnz
stos
mov
out
inc
testl
add
xor
loope
or
lds
testb
shlb
sub
add
pop
inc
repz
add
adc
gs
add
add
xor
cwtl
data16
aam
xchg
add
cmpsb
add
fsubp
pop
mov
out
iret
cmpsb
add
cmpsl
add
xchg
xchg
jns
add
or
mov
add
addl
out
jnp
add
jbe
and
add
inc
push
test
add
push
cld
fs
jmp
std
mov
add
add
cmp
ja
fstl
icebp
xchg
jns
addb
push
sti
int
or
imul
add
lods
rolb
add
add
jns
daa
cmpsl
xor
popa
xchg
push
adc
add
mov
add
or
add
add
int
add
imull
add
jmp
add
push
insl
adc
out
pop
out
int3
sub
add
sub
cltd
jb
mov
stos
hlt
jle
repz
add
jge
lock
inc
inc
mov
add
mov
add
add
int
arpl
and
xchg
mov
mov
lahf
push
popf
xchg
mov
add
mov
test
rcll
stos
jnp
sti
or
inc
icebp
js
add
sub
lret
mov
insb
mov
adc
add
repnz
add
stos
lret
jge
jp
mov
fstl
push
and
add
bound
outsl
and
add
sti
mov
repz
pop
insl
stos
xchg
sbb
and
add
rcrl
push
popa
mov
sti
loopne
and
add
jno
mov
shlb
fistpl
lcall
add
push
add
add
add
inc
mov
jl
testl
add
add
insl
sti
stos
adc
test
add
punpckhbw
popf
xchg
jmp
inc
bound
push
fstl
xor
cmpsl
aaa
pop
xor
sub
rcrb
int
outsb
inc
or
add
push
adc
movsb
add
push
or
add
incl
cmp
pop
ficoml
and
add
add
add
movsb
add
xchg
mov
add
add
bound
push
data16
xor
cltd
pop
scas
add
dec
xchg
add
inc
inc
dec
jno
subl
add
lock
aas
jns
jmp
or
add
push
stos
add
in
jo
outsb
shrb
stos
add
pushf
cwtl
jmp
add
popw
jns
xchg
mov
add
scas
push
aas
add
cmc
inc
mov
addr16
mov
in
add
push
test
add
xor
add
shlb
andl
in
add
in
insl
xchg
rcrl
in
push
js
mov
dec
inc
jmp
insb
jl
add
pop
into
xchg
mov
add
lock
iret
hlt
aas
dec
incl
add
into
sub
add
pop
lods
mov
xchg
cli
ljmp
or
add
add
mov
jg
push
sbb
xor
les
sar
mov
inc
pop
test
add
pop
std
sub
add
lea
outsl
rclb
mov
ljmp
pop
fstpl
add
pop
push
nop
add
add
addb
mov
add
addr16
les
mov
add
mov
cmp
pop
jmp
imul
or
aad
dec
pop
test
add
pop
push
loope
fistpl
add
in
pop
mov
outsl
mov
push
xor
mov
enter
mov
addb
jmp
sub
lds
out
fidivrs
add
push
pop
pop
shll
add
xchg
dec
lcall
addb
into
add
add
popf
cmp
inc
cmp
mov
add
sub
cltd
sbb
xor
sbb
add
inc
push
pop
clc
pop
testb
xchg
add
movsb
add
mov
add
add
add
dec
loopne
inc
sbb
jns
sar
add
hlt
push
add
pop
and
add
dec
insb
mov
push
adc
decb
add
mov
add
xor
add
push
sub
mulb
xchg
add
add
dec
leave
fstl
data16
add
add
ret
repnz
and
add
pop
xor
mov
testl
sub
add
shll
mov
movsb
add
enter
xlat
xor
add
lods
add
in
fdivrl
or
add
add
add
je
repz
fdivl
add
out
adc
mov
add
jle
imul
je
inc
xor
icebp
add
add
pop
jns
and
add
subl
lock
push
sub
jp
dec
jb
add
popf
add
cli
js
add
and
mov
pop
cli
mov
xchg
lcall
add
addb
mov
add
adc
daa
aad
cmc
dec
mov
push
push
out
mov
adc
pop
lods
xchg
add
adc
repz
add
call
jbe
sub
lret
cmpl
add
mov
xchg
fs
sahf
mov
aad
cmp
test
add
mov
xor
cmc
add
add
popf
mov
fwait
xchg
mov
add
pop
repnz
jbe
sbb
in
pop
fcoms
adc
outsb
paddq
cmp
in
inc
add
add
cmp
xchg
pop
sub
add
out
insl
test
and
loope
cmp
lret
cmp
pop
lods
add
jg
outsl
into
bound
addr16
cmp
pop
dec
sbb
add
les
add
jno
mov
aad
mov
add
add
pop
loop
mov
mov
push
add
lods
scas
mov
inc
lds
arpl
jmp
mov
add
and
add
das
pushf
sbb
jl
mov
add
mov
or
add
jns
aad
out
std
dec
inc
adc
add
mov
daa
notb
loopne
jbe
add
popa
sahf
inc
out
or
add
dec
in
addb
fs
sbb
shl
rolb
into
pop
fnstcw
xor
cld
mov
aaa
mov
sub
add
xor
mov
add
jecxz
adc
mov
adc
xor
lret
add
add
cmp
je
pop
aam
insb
mov
add
adcl
add
adc
cmp
pop
pop
fs
dec
sbb
call
fsts
or
add
and
mov
add
add
pop
or
shrl
icebp
ja
syscall
add
ficoms
shrd
add
insl
ret
idivb
dec
sub
add
sbb
popf
jp
add
jbe
pcmpgtb
loope
inc
xchg
pop
push
jp
sbb
sub
add
add
cmp
add
add
je
mov
cld
ret
sbb
add
push
add
inc
repz
pop
mov
aad
mov
pop
dec
addb
loop
xchg
add
lahf
addb
mov
inc
and
add
aaa
mov
add
mov
add
and
xchg
neg
loop
jns
inc
scas
add
xor
fadd
mov
add
ja
push
imulb
rcll
add
pop
insl
pop
mov
add
cmc
mov
packsswb
sub
add
and
add
mov
add
sbb
add
add
add
out
popa
pop
xchg
add
sbb
ja
lods
add
sbb
add
pop
mov
add
testb
arpl
sbb
repz
or
add
add
mov
push
loop
cmpsb
add
cli
xchg
mov
dec
mov
add
mov
add
jbe
or
in
addr16
in
jmp
out
stos
add
pop
jmp
adc
inc
jg
mov
push
mov
add
dec
mov
add
mov
add
inc
mov
add
add
xchg
loope
cmp
adc
call
add
mov
cmp
mov
add
push
outsl
adc
mov
add
jge
pop
jle
add
xor
dec
enter
pop
stc
jl
pushf
pop
mov
sub
xor
stos
xchg
adc
pop
movsb
add
arpl
push
adc
xlat
mov
stos
add
lret
push
inc
andl
movsb
add
sub
lcall
imul
add
lret
neg
sbb
sub
addb
pushf
pop
push
into
sub
add
mov
add
add
pusha
testl
mov
out
sub
scas
add
sahf
or
add
adc
rcrb
add
lea
add
stc
mov
cld
lock
iret
rcl
data16
dec
mov
xlat
mov
mov
sbb
clc
stc
xor
mov
add
add
imul
mov
add
add
push
les
or
add
int3
pop
add
dec
pop
push
loopne
fisttpll
add
fdivs
jno
push
aad
lcall
enter
add
out
mov
add
or
ret
add
test
and
add
rorb
or
add
add
add
in
insl
mov
data16
or
add
pop
lods
add
push
inc
test
add
lret
add
stos
into
lods
push
dec
xchg
mov
sub
cmp
xchg
test
adc
aas
icebp
fildl
add
or
in
xchg
add
xor
popa
pop
jge
aad
ret
sbb
ljmp
clc
push
sbb
push
add
dec
cld
in
mov
inc
jp
cli
jo
lcall
jecxz
push
add
lods
add
in
pop
adc
pop
aaa
in
ret
xor
dec
pusha
inc
sbb
enter
and
add
decl
push
adc
xor
fdivr
jbe
neg
jne
or
add
nop
jge
pop
sbb
adc
add
adc
mov
add
dec
icebp
jmp
push
add
inc
mov
adc
ja
ret
mov
movsb
add
sub
add
add
add
add
repz
push
rcrb
add
mov
mov
pop
xchg
push
insl
fchs
mov
cli
shrl
add
in
call
push
lret
push
add
inc
fidivs
leave
add
add
add
pop
cli
mov
iret
lds
add
cmp
rcrl
xor
imul
mov
fildll
jl
js
xor
mov
addr16
jbe
pop
mov
xchg
lahf
mov
add
mov
add
push
mov
add
mov
pop
inc
fsubs
add
ret
mov
inc
jmp
add
mull
xlat
lcall
rcll
lea
add
test
add
out
inc
les
loopne
sbb
xor
mov
xor
imul
scas
add
add
enter
insl
cltd
fcoml
lcall
insb
rcll
jg
push
dec
pop
fs
test
out
fs
xchg
xchg
cmpsb
add
pop
mov
add
fdivrs
loope
xor
test
sub
add
push
add
add
add
or
add
lods
add
sbb
in
lods
add
cmp
add
lcall
popa
xlat
cmp
test
add
add
xchg
jge
add
add
sti
jne
fcmovu
mov
add
pcmpeqd
addb
or
or
add
enter
repnz
clc
adc
mov
cmp
aaa
addb
cmc
daa
xlat
aaa
inc
gs
adc
in
add
cmp
inc
adc
test
add
add
dec
push
je
into
cwtl
je
jp
sti
repnz
out
movsl
jp
xor
mov
add
mov
cld
mov
add
fdivl
or
add
pop
mov
add
xchg
xor
add
xorl
and
add
aas
imul
dec
mov
jb
out
jae
sahf
xchg
in
mov
leave
pop
or
add
mov
jno
inc
cmpsb
add
shrl
xchg
test
adc
in
movsl
cmp
dec
cmp
add
xchg
add
add
pop
mov
add
jno
push
push
add
daa
push
fs
push
xor
in
add
push
push
cmp
or
in
or
add
or
sub
add
add
add
icebp
or
add
pop
shll
mov
cmp
inc
insl
je
daa
sti
shll
xchg
add
xorl
add
pop
or
add
cmp
in
push
add
push
mov
add
adc
call
decb
cmp
out
lcall
add
imul
add
add
jae
mov
push
fnsave
dec
xchg
or
add
sahf
mov
adc
add
push
adc
add
xor
add
mov
add
mov
loope
cmpsb
add
inc
push
scas
add
ljmp
push
out
int
xor
in
lret
push
nop
mov
jne
sub
add
mov
stc
shrl
add
sub
inc
addl
xor
adc
dec
lea
jp
in
movsb
add
call
ds
stc
inc
nop
sub
mov
add
lahf
mov
in
jg
in
wbinvd
push
mov
add
fcomp
pushf
iret
mov
add
push
addb
or
add
fiadds
mov
add
mov
cld
add
add
and
add
movaps
add
das
pop
fists
add
out
data16
popa
jo
add
push
test
push
cmovne
or
add
mov
add
mov
rcrl
add
inc
mov
push
adc
scas
sahf
popa
jle
add
adc
int
sbb
movsl
leave
stos
mul
push
fcoml
jmp
psrlw
add
xor
enter
jecxz
add
add
inc
pop
xor
add
or
and
add
repnz
mov
fcmovnbe
cmp
inc
sub
add
add
and
test
add
mov
shrl
jae
mulb
scas
add
pop
push
in
lods
test
add
add
xchg
add
inc
xor
jmp
push
sbb
fs
add
dec
mov
or
add
mov
add
add
imul
daa
pop
cwtl
mov
outsb
adc
imul
cwtl
repz
or
xchg
cmpsl
or
add
addb
loopne
jp
das
divl
mov
cmp
icebp
jbe
adc
push
xchg
push
or
addr16
xor
add
ficomps
lds
add
nop
mov
add
push
aam
cltd
jno
jmp
push
add
jnp
or
cltd
cmpsl
loopne
cmp
fisttps
add
xchg
add
add
jp
jge
push
fwait
add
push
hlt
aaa
sti
das
mov
cwtl
dec
bsf
fwait
mov
and
add
dec
add
add
ret
sub
jl
push
inc
outsl
addb
add
add
xor
jne
pushf
mov
popf
mov
add
xchg
sub
ret
sub
add
xchg
lea
pop
cmp
aad
cmp
add
add
dec
je
jae
test
add
mov
in
addb
mov
add
push
mov
out
cltd
imul
fsts
daa
adc
jbe
imul
and
ror
sbb
rcrl
mov
add
lods
adc
lcall
hlt
pop
mov
in
pop
stc
int
add
inc
test
in
mov
add
cmp
lock
mov
add
jecxz
add
mov
add
sbb
cmpsb
add
jecxz
add
pop
clc
add
sub
add
aad
fcompl
test
pop
iret
xor
adc
sbb
daa
jno
push
push
sub
add
add
add
push
push
push
shrl
add
push
testb
add
add
dec
divb
pop
pop
mov
adc
mov
add
xor
iret
out
fwait
jle
dec
scas
fnstsw
xchg
insl
sub
les
add
cwtl
jnp
push
adc
loop
pop
add
add
out
out
add
cmp
add
push
pusha
and
mov
add
add
push
jnp
inc
lds
cmp
pop
int3
into
loop
xchg
andl
add
xor
and
add
mov
repz
lahf
lahf
push
push
add
testb
add
lcall
jne
inc
cmpxchg
mov
add
sbb
vhaddps
sub
mov
movl
stc
push
sbb
mov
push
mov
insl
addl
fisttpll
in
fwait
xor
in
jl
add
dec
jmp
sahf
in
andl
push
add
hlt
dec
mov
test
push
add
and
add
rol
jns
jmp
or
add
in
dec
bound
xor
add
jg
das
cmc
daa
in
jecxz
or
inc
enter
test
add
lods
hlt
or
add
xchg
pop
sbb
jns
scas
push
add
loopne
jno
mov
xchg
insb
mov
push
test
add
lahf
or
add
insl
and
in
add
pushf
aaa
and
in
jo
or
lea
add
push
fimuls
add
lea
push
add
fxch
stos
add
out
pop
cli
sub
add
cld
fisttpll
push
pop
orl
cltd
dec
mov
mov
add
and
add
mov
add
add
add
pop
lock
scas
mov
add
and
imul
sbb
in
dec
addb
out
mov
add
pushl
xchg
pop
dec
ror
mov
add
adc
add
mov
push
sub
add
adc
dec
fists
repz
pop
arpl
cld
addb
dec
aas
cmpsl
clc
dec
pop
out
xor
add
adc
dec
push
pusha
mov
ds
jecxz
xchg
lods
dec
mov
ljmp
or
add
movsl
outsl
add
add
rorb
cmp
xor
add
cmc
sbb
add
aas
dec
fsubrl
lret
mov
add
addb
daa
outsl
push
pop
pop
jbe
mov
push
add
out
scas
add
nop
addb
mov
ret
shll
mov
dec
movsl
cli
jp
neg
mov
sbb
mov
div
xchg
daa
bound
sbb
sbb
xchg
ljmp
pop
mov
add
outsl
and
jo
dec
mov
add
add
cmp
bound
add
adc
fstl
add
lahf
push
cmp
add
mov
stc
repnz
inc
sub
add
out
in
cmp
cwtl
mov
add
dec
jnp
cwtl
add
add
sbb
sbb
push
lods
add
push
jb
add
xchg
add
ret
scas
add
arpl
mov
add
lret
mov
xor
xor
jbe
icebp
add
sbb
and
add
in
push
in
int3
mov
int
add
js
xchg
add
aad
cmp
in
bound
ret
inc
push
loop
sbb
arpl
cli
addb
pop
mov
outsl
into
jmp
jns
dec
dec
movsb
add
inc
dec
and
add
lcall
add
mov
add
repz
sbb
dec
data16
mov
and
or
add
cmp
js
int
lcall
pop
js
arpl
cmp
adc
add
jmp
and
push
shlb
cmp
jbe
pop
mov
sub
insl
or
scas
add
in
xchg
push
mov
daa
push
lds
jl
ds
pop
test
add
lods
add
cmpsb
add
dec
scas
inc
sti
dec
mov
add
test
add
bound
ret
cmp
test
and
xor
add
icebp
or
add
xor
mov
sahf
push
add
sub
add
push
add
stos
ja
gs
add
dec
add
or
add
lds
stos
mov
add
aas
ljmp
das
aam
xor
shlb
jp
mov
add
inc
push
add
dec
mov
outsb
pop
subl
add
cmp
dec
push
dec
addb
pop
iret
jno
add
add
mov
mov
sub
add
add
cmp
and
add
sub
fbld
lock
aaa
cmp
add
ds
or
add
jo
test
add
add
add
add
xor
stos
add
addb
test
add
lock
xchg
into
movsb
add
jg
xchg
rcr
push
ss
sub
xchg
cmovs
cmp
add
idivl
add
add
add
icebp
loopne
add
mov
add
les
jnp
add
les
gs
dec
jae
push
mov
jo
je
pop
inc
sbb
adc
mov
add
dec
sub
add
jmp
add
mov
sub
add
decl
add
test
add
mov
sti
cltd
push
loopne
jecxz
add
lock
add
lods
jo
add
pop
repz
pop
sahf
gs
fidivl
aaa
mov
sti
mov
into
pop
scas
add
lret
add
adc
dec
cwtl
inc
sub
add
sub
mov
loop
pop
push
in
loope
add
dec
jnp
sbb
lcall
add
mov
lcall
and
sub
fdiv
in
xchg
add
sbb
add
add
or
add
push
push
mov
pop
jae
mov
repz
xor
push
adc
xchg
jns
pop
push
jmp
fdivs
pop
sbb
sub
add
mov
add
or
add
and
add
and
add
push
pop
inc
sub
mov
add
add
add
ss
addb
icebp
cmp
add
add
mov
add
lock
ljmp
add
inc
les
out
daa
jecxz
cli
pop
push
add
jno
sbb
lea
add
mov
add
or
add
and
xor
and
mov
out
xchg
inc
clc
inc
xor
jns
into
stos
add
jge
xor
and
cltd
dec
adc
ljmp
cmp
add
inc
inc
and
add
adc
xchg
fsubl
add
mov
roll
push
fsub
ljmp
ret
test
test
add
jg
jne
or
mov
push
dec
inc
xchg
add
push
adc
icebp
fcos
in
mov
sub
add
add
loop
js
pusha
in
stos
push
jnp
stc
dec
mov
dec
cli
add
add
add
dec
cli
cmpl
fs
add
mov
add
add
jae
or
pusha
mov
add
mov
add
rcrl
add
pop
xchg
jl
fcoms
js
add
mov
add
fwait
and
push
cld
pop
sbb
or
add
addb
dec
jno
cmp
add
sahf
add
xor
gs
xchg
hlt
pop
cmp
add
loope
jne
add
loope
dec
test
ds
add
dec
movswl
lcall
mov
xchg
adc
add
mov
adc
mov
add
ret
in
push
loop
jl
cmpsb
add
aaa
xor
in
inc
imull
add
mov
add
mov
add
jno
add
lret
inc
popa
nop
je
xchg
jl
mov
xchg
cmp
sbb
add
add
pop
in
stc
iret
mov
pop
sahf
sub
add
sarl
add
push
aaa
outsb
pop
ficoms
jge
add
sub
add
add
add
std
sbb
add
push
cmp
mov
add
add
iret
mov
aam
notl
cmp
jecxz
add
adc
pop
push
and
mov
add
popa
mov
sub
mov
ss
ja
add
pop
int3
or
add
push
pop
mov
add
loope
inc
adc
fldcw
add
cmp
stc
ja
add
xor
mov
int
add
out
push
ret
mov
leave
lret
loope
jo
js
mov
cmp
pop
movsl
aaa
je
scas
add
mull
add
jmp
add
addb
adc
inc
mov
add
add
test
xorl
fidivs
xor
mov
jl
add
push
into
xchg
lods
test
add
das
lcall
insl
mov
add
add
std
lcall
add
sbb
add
out
push
add
xor
add
add
add
cmp
add
clc
xchg
inc
cltd
push
add
push
lret
add
jno
add
push
xor
inc
rcll
sbb
mov
push
mov
dec
xchg
movsl
mov
add
push
movsb
add
mov
cmpsl
xchg
dec
rcr
call
sti
aaa
add
imul
sbb
xor
add
cwtl
daa
icebp
imul
outsb
mov
add
pop
inc
pop
jb
je
sbb
cmp
mov
jle
sub
jg
or
test
add
shlb
jmp
sbb
adc
add
pop
add
add
imul
dec
icebp
dec
cmp
bound
add
jns
mov
sti
sub
add
mov
add
pop
and
add
or
add
aam
mov
addb
movsl
sbb
insb
add
and
add
popf
push
and
add
cwtl
add
add
out
xchg
cli
sahf
enter
sbb
xor
add
cmp
pop
scas
add
ss
add
xor
add
out
add
xlat
cmpsb
add
cld
shll
mov
push
add
gs
pop
add
in
push
pop
frstor
add
add
mov
add
add
in
xchg
inc
add
inc
jge
mov
lcall
add
xchg
mov
mov
dec
push
add
enter
sbb
and
add
add
mov
sbb
mov
fadds
add
mov
xor
add
xchg
xor
add
movsl
xor
cltd
xor
and
add
cmp
stos
add
and
add
cmp
ficoml
stos
add
lret
insb
add
adc
fsub
sbb
inc
push
xorl
inc
lds
stos
xor
hlt
mov
pop
in
das
lahf
sub
add
clc
mov
mov
int
and
add
jo
or
add
jmp
xchg
arpl
pop
sbbl
and
add
xchg
mov
mov
mov
dec
push
btc
lret
and
add
push
popf
shrb
add
jb
int3
adc
fstpl
outsl
cmpsb
add
push
cmp
add
popf
or
fsubrs
clc
sbb
xchg
add
xor
mov
sbb
jae
xchg
jmp
lret
xor
rorl
pop
sub
add
jle
das
rolb
add
xchg
dec
les
dec
pop
add
push
shlb
arpl
xlat
dec
out
xchg
jle
shlb
sub
add
lods
inc
mov
dec
inc
or
xchg
or
add
add
repz
stos
dec
hlt
mov
add
and
add
shlb
insl
stc
or
sbb
sarl
mov
mov
add
push
add
add
sub
add
imul
jne
outsl
lods
add
leave
lcall
add
dec
jecxz
cwtl
mov
sub
add
les
lea
add
add
mov
test
add
add
fildl
add
imul
add
pop
das
ficompl
cmp
pop
ss
xchg
add
and
arpl
jl
adc
lods
mov
scas
add
cld
adc
mov
sub
add
jns
int
loop
add
dec
mov
pusha
or
add
add
mov
fisubrs
stos
push
rcl
cmp
push
adc
loopne
add
dec
xor
sub
add
add
add
add
loopne
test
jle
sbb
add
adc
add
mov
add
bound
loope
sub
add
push
add
pop
jp
add
gs
ja
xor
mov
add
out
dec
jg
inc
pop
sbbl
ret
adc
or
add
add
enter
les
inc
cmp
sbb
add
add
pop
call
add
daa
ret
in
add
ss
bnd
xchg
push
inc
mov
hlt
mov
fstl
pop
inc
jmp
lods
and
add
fs
dec
mov
add
add
rorl
lock
sbb
push
add
dec
cmp
out
push
add
mov
fstpt
add
add
add
inc
add
add
lcall
test
add
negl
mov
imul
add
inc
pop
inc
sub
add
xchg
mov
add
int3
insl
idiv
add
add
mov
xor
stos
add
jge
test
add
jne
pop
inc
adc
cmpsl
dec
loope
inc
arpl
popf
lret
add
and
add
sbb
xor
add
pop
mov
xchg
test
fisubrs
add
push
add
jae
add
cmp
scas
add
aas
js
pusha
xor
inc
mov
test
inc
pushf
xor
iret
lods
test
add
add
mov
add
cmp
add
add
mov
pop
push
add
fs
outsl
loopne
das
sbbl
push
data16
repnz
add
mov
adc
sub
mov
mov
add
mov
jb
sub
add
xchg
mov
xchg
add
add
add
leave
addl
fucomp
dec
bound
jl
std
push
sbb
mov
add
xor
aam
in
rclb
movsb
add
insl
out
push
dec
mov
mov
pop
lahf
mov
inc
fdivs
js
sub
jbe
add
add
addr16
add
out
out
jne
out
xchg
lock
mov
push
add
je
xor
pop
test
add
aad
dec
inc
gs
clc
jg
add
stc
popf
add
jg
in
xorl
aam
add
add
int
mov
add
push
jmp
dec
sub
leave
xor
add
add
add
add
mov
test
scas
add
cmp
sbb
inc
out
sbb
mov
call
hlt
dec
mov
sbb
cmpsb
add
cmpsl
ss
and
add
add
or
add
sub
lahf
arpl
mov
add
add
mov
adc
push
into
lods
add
xor
pop
add
add
icebp
jp
jp
in
lcall
add
stos
add
inc
jnp
pushf
add
dec
je
add
mov
add
and
rcl
loope
into
or
mov
add
sahf
cmp
or
pop
insl
push
movsb
add
ja
ss
sbb
xor
das
inc
inc
pop
cmp
fcomps
add
jnp
sub
sub
add
insl
dec
push
test
daa
push
cltd
negb
jg
out
or
add
and
add
aad
call
mov
push
add
add
inc
outsb
add
add
inc
cmp
loopne
sub
add
enter
add
lcall
shl
outsl
cmp
inc
fdiv
pushf
cmpsb
add
cmpl
mov
push
add
push
sti
xchg
jns
xor
add
pop
fimull
add
cmp
add
add
sub
add
dec
dec
sub
add
dec
cmp
lahf
daa
lock
add
xor
jecxz
imul
add
jp
out
xorl
sarl
lea
lret
xlat
dec
and
mov
push
mov
add
mov
add
or
add
out
xchg
inc
jg
xchg
push
je
sbb
mov
add
add
je
imull
add
add
add
mov
mov
add
lcall
jbe
xor
insl
xchg
xor
jbe
add
imul
add
repz
xor
xor
cmp
add
mov
add
fdivrl
jmp
gs
jns
addr16
movsl
jle
movsb
add
shll
add
sub
add
hlt
xor
jne
jnp
jp
hlt
je
add
xchg
sub
repz
mov
xlat
dec
add
add
ja
jg
in
pop
and
add
xchg
call
enter
pop
mov
ss
dec
cmp
cmp
daa
push
lcall
add
or
add
xor
mov
sub
add
fnsave
xchg
loop
aam
imul
add
xlat
pop
dec
inc
scas
add
inc
sub
add
in
or
add
inc
sub
add
add
pop
push
dec
out
js
mov
add
rol
jmp
xor
push
das
mov
add
inc
add
stc
push
cmp
add
pop
inc
sti
sbb
add
inc
mov
xchg
out
aaa
lahf
lods
add
aam
in
sbb
imul
xchg
xchg
stos
add
add
test
add
aas
adc
add
int
cmp
sbb
cltd
lcall
fsubp
repz
mov
cmc
push
leave
daa
sbb
xchg
mov
outsb
pop
rcrb
stos
enter
add
xchg
add
lret
cli
mov
add
out
mov
mov
pusha
aaa
sbb
insb
aaa
jae
mov
fbld
adc
sub
add
pop
pop
inc
xchg
scas
add
mov
in
into
inc
adc
jb
lcall
ljmp
lgs
movsb
add
ret
add
jle
stc
mov
imul
adc
add
stos
xchg
test
add
add
add
adc
add
and
add
dec
cmpsl
or
fisttpll
ds
add
cmp
add
pop
aad
in
push
push
xor
add
inc
mov
and
xchg
movb
add
add
in
gs
xor
adc
mov
push
addr16
test
add
mov
add
dec
std
jb
imul
add
insl
fs
js
add
fimuls
push
add
movl
insb
cmpsl
imul
ds
std
sti
lock
add
das
adc
inc
subl
add
mov
add
or
add
nop
inc
insl
cmpsb
add
xchg
stos
add
push
push
call
stos
pop
or
stos
daa
add
add
jbe
mov
add
cmpsl
dec
and
pop
lea
add
dec
xor
dec
jae
mov
add
xchg
fsubl
cmp
ljmp
xchg
mov
add
fs
mov
xchg
repz
lea
inc
test
add
jbe
jge
popa
mov
lock
ret
xchg
mov
add
inc
aam
jnp
mov
xchg
add
pop
ljmp
add
pusha
cmp
stos
add
add
add
xor
add
mov
pop
cmp
cli
pop
cmp
jmp
decb
add
push
test
mov
out
or
add
addr16
jne
lds
mov
add
dec
or
aad
mov
add
push
add
nop
sub
add
add
pop
in
je
inc
out
test
add
mov
adc
sub
add
add
jl
dec
inc
xor
sub
add
dec
dec
fs
add
jl
andnps
add
out
adc
cmp
movsb
add
add
je
add
jg
outsl
xchg
jne
push
stc
sub
add
loope
add
int3
pop
loop
add
mov
jge
sbbl
add
pop
push
lret
out
call
fwait
adc
push
mov
add
inc
inc
orl
outsb
dec
fldenv
add
fisubs
add
inc
sub
add
add
sbb
addl
or
hlt
mov
or
add
enter
shll
cmp
add
mov
enter
add
adc
lret
lods
add
aas
mov
add
loope
imul
jb
add
nop
push
arpl
jbe
cmp
mov
inc
mov
sarl
shlb
fs
add
addb
mov
incb
in
or
add
les
adc
les
lret
mov
add
loope
mov
lods
push
add
add
lods
clc
jp
and
sbb
add
add
data16
iret
rcll
jae
scas
add
xchg
pop
inc
cmp
lea
dec
sahf
ret
pop
jmp
add
aas
pop
rcrb
jae
mov
add
mov
stos
add
dec
jne
lret
popa
addr16
into
push
fidivrl
add
fidivl
loopne
jnp
add
icebp
out
mov
add
add
inc
pop
js
testb
add
inc
aam
mov
add
adc
lcall
subl
cwtl
sub
and
add
jo
sahf
mov
add
xchg
mov
add
and
add
das
ss
flds
in
mov
xlat
adc
fisttpll
add
mov
push
xchg
xor
add
add
out
addb
sub
jo
das
sub
add
mov
mov
adc
lcall
add
pop
push
cmp
arpl
outsb
mov
addb
xchg
sahf
icebp
xlat
mov
add
loopne
jo
subl
add
add
daa
loop
mov
add
xchg
mov
add
call
add
jnp
decb
cmpsb
add
fldz
scas
add
dec
inc
adc
fcoms
je
movsb
add
test
add
test
mov
ret
and
add
das
add
cmpsb
add
insl
cmp
test
mov
mov
lea
add
mov
je
add
inc
inc
ja
mov
add
shll
push
je
cmc
push
xchg
decb
sub
add
jle
cmp
add
and
add
cmp
push
xchg
inc
cmp
add
and
data16
arpl
pop
stc
mov
add
in
add
pop
sub
sti
dec
cmpsb
add
jnp
in
sub
add
pop
ds
xor
push
jle
cmp
push
movsl
ret
insb
into
aam
in
inc
js
sti
push
sbb
stc
push
inc
inc
push
xchg
in
xchg
add
sbb
int3
cmp
add
mov
add
jmp
orl
add
jae
les
fidivl
add
push
xchg
and
mov
or
dec
sar
mov
loope
fwait
cmc
lods
add
xor
aad
gs
test
add
aaa
push
pop
subl
stc
mov
xchg
sbb
add
xor
in
sbb
add
mov
add
push
bound
add
add
inc
sahf
jp,pt
rorl
add
clc
ret
xor
les
and
add
cmc
mov
test
mov
sahf
xchg
sbb
add
mov
int
clc
push
sti
test
sub
add
mov
sar
xchg
lock
rolb
int
ja
popf
shrb
aaa
loopne
jmp
add
push
cwtl
in
add
sub
add
push
add
in
gs
inc
test
xchg
and
stos
add
lock
add
add
test
enter
cmp
dec
cli
mov
adc
adc
in
cmpsb
add
xor
add
mov
add
nop
sbb
push
xchg
mov
mov
add
inc
sbb
inc
addb
or
add
jl
mov
or
sub
loope
test
add
icebp
into
sti
mov
add
lcall
mov
call
lahf
xchg
xchg
movsb
add
xor
arpl
insb
push
push
add
xchg
push
cmp
add
add
arpl
add
or
add
scas
sarb
jnp
mov
xchg
mov
or
add
xor
sbb
add
dec
out
loope
js
inc
int
add
cmc
cmp
push
jmp
add
movsb
add
push
add
pop
out
or
xor
mov
jl
mov
loopne
sarb
add
add
xor
xchg
xchg
add
add
mov
add
ret
add
bnd
mov
add
lcall
jns
stc
les
mov
add
push
add
aam
cmp
test
add
fisttpl
add
add
pop
add
je
sbb
pop
je
out
pushf
aam
imul
dec
adc
jle
jl
je
fnstsw
mov
sahf
out
adc
shlb
fisubs
add
mov
pop
or
add
pusha
sbb
inc
xchg
inc
add
add
cli
divb
test
addb
shlb
sbb
xor
add
add
add
rolb
js
sbb
call
icebp
hlt
lret
xor
add
jl
mov
add
pop
add
leave
adc
add
fwait
xor
mov
add
and
add
push
data16
call
cmp
imul
aas
lock
sub
add
enter
in
inc
lcall
or
add
xor
mov
icebp
dec
sbb
xor
add
push
lret
inc
enter
call
fwait
mov
add
test
xchg
add
adc
xchg
xchg
aad
pop
push
xor
add
add
add
clc
mov
call
dec
daa
jg
add
call
adc
sub
add
mov
sub
add
mov
out
imul
mov
add
adc
mov
add
ret
mov
ret
ja
xchg
bound
std
aas
and
inc
mov
stos
add
xchg
jl
mov
mov
ds
and
add
scas
add
stos
dec
xchg
pop
inc
ljmp
dec
scas
mov
dec
jne
xchg
xor
inc
pop
pushf
push
int3
ret
mov
mov
mov
add
add
add
pop
in
dec
andl
add
dec
dec
sbb
cmp
ds
sar
cmp
hlt
aad
call
push
mov
sbb
icebp
or
xchg
add
stos
addr16
add
clc
adc
adc
push
fistl
lods
mov
add
mov
mov
sahf
push
sbb
add
add
add
or
add
les
dec
enter
mov
add
mov
add
mov
mov
pop
push
inc
enter
mov
add
add
jae
jae
pop
mov
mov
inc
sbb
add
xchg
sub
add
icebp
jg
and
add
mov
loop
cmp
fsub
pop
add
add
jns
add
cmpsb
add
sbb
and
add
arpl
add
addb
mull
push
movsl
pop
lcall
add
add
add
outsl
pop
mov
jg
pushf
and
add
add
out
inc
mov
jns
stos
add
jbe
ret
aam
and
add
push
xor
xor
les
add
into
iret
clc
xchg
out
lock
and
sub
add
add
mov
add
iret
nop
push
addr16
enter
add
dec
cmc
mov
aaa
cmp
xchg
pop
aad
mov
mov
add
sub
mov
add
jno
add
repz
inc
mov
std
xchg
adc
in
mov
or
add
add
inc
xor
jae
adc
add
and
add
stc
ljmp
dec
mov
add
and
add
mov
inc
lock
test
fisubrl
jmp
fs
jo
add
add
add
sbb
dec
aaa
loopne
sub
lcall
sti
mov
loope
cli
cmp
mov
add
dec
mov
add
mov
add
mov
bound
ret
sbb
negb
dec
xchg
ret
popa
aaa
mov
xchg
jbe
add
scas
add
push
mov
add
cmp
add
cmc
xlat
cmc
mov
add
lahf
rol
push
pop
adc
xchg
add
lods
add
or
mov
out
mov
fwait
mov
icebp
fistl
dec
int
pop
or
add
mov
jle
fadds
popa
stos
icebp
shl
bound
add
testb
lds
push
add
add
xor
hlt
adc
mov
xor
add
mov
mov
mov
fadds
sar
int
add
push
mov
mov
out
jo
fwait
sti
ret
out
cmp
bound
test
add
push
add
popf
sahf
xor
stos
xchg
rcll
inc
or
add
mov
dec
add
std
inc
movsb
add
inc
push
sub
add
jg
int3
cmp
bound
shll
xor
test
outsb
addr16
inc
fistpl
add
push
pop
xchg
jnp
push
repz
int
add
adc
addb
rcl
mov
sub
add
dec
and
add
add
aam
pop
jl
pop
rclb
mov
push
inc
xchg
stos
dec
mov
rorb
add
adc
mov
pop
pop
jbe
dec
pop
rorb
pop
mov
push
ss
mov
roll
fsubrs
add
lods
add
inc
sti
xchg
mov
mov
xchg
xchg
loop
mov
xor
lods
add
adc
jns
adc
repz
add
bnd
aaa
dec
cmpsb
add
inc
sub
adc
add
in
add
int
jnp
je
fisttpll
in
out
mov
add
filds
sbbl
add
dec
stos
add
adc
hlt
movb
mov
jbe
xchg
xchg
lods
add
in
cmp
ljmp
inc
jecxz
xor
sub
daa
inc
cmp
jbe
popf
jno
les
addb
fcoms
jp
roll
ret
add
lods
add
push
roll
add
inc
std
jns
xor
add
add
add
pop
lcall
add
jmp
test
popa
sub
mov
add
sti
lcall
int
push
mov
lods
add
fiaddl
jb
lret
stc
insb
pop
push
and
add
sub
sub
fprem1
mov
add
test
out
xor
ja,pt
mov
cmp
loope
fadds
add
mov
jp
clc
loopne
jg
insb
pop
test
add
insb
lcall
jmp
call
inc
in
pushf
mov
add
mov
test
add
hlt
lret
sbb
out
add
add
add
add
add
add
pop
adc
enter
add
add
pop
decb
xchg
cmp
shll
inc
xor
lods
add
out
fnsave
push
cmp
add
dec
or
shlb
sub
add
aas
xchg
xlat
mov
add
xchg
fldl
xor
jge
inc
inc
les
add
je
push
add
mov
aam
je
mov
add
sti
scas
cmp
add
call
cmp
push
add
int3
adc
pop
xchg
leave
out
xor
imul
jecxz
jns
rcrb
fisubl
shl
mov
sbb
push
arpl
aad
jecxz
push
mov
stos
pop
sbb
lretw
inc
push
inc
movsb
add
fs
sbb
add
cmc
push
gs
mov
in
pop
pop
in
and
popf
jne
add
decl
outsl
lds
mov
pop
jge
xchg
dec
mov
repz
add
inc
or
add
dec
jno
ja
pop
pop
mov
add
push
js
ficoms
ds
add
ret
outsb
test
add
mov
scas
xchg
out
call
popa
add
loop
add
cmp
mov
inc
adc
xor
jmp
add
gs
in
adc
jmp
fistpl
xchg
outsl
push
add
dec
jecxz
ret
inc
lods
add
xor
push
add
sbb
add
add
adc
shr
or
add
adcl
add
xor
dec
lods
mov
sbb
or
popf
xor
inc
pop
adc
pop
push
add
jge
push
popa
mov
bnd
jno
add
dec
iret
xchg
lret
iret
aad
or
jmp
or
add
lods
add
popl
adc
add
mov
out
cmp
mov
js
ffree
sub
add
decb
sub
daa
inc
xor
add
add
mov
sub
add
outsb
out
add
pop
pop
lcall
out
and
add
add
pop
fisttpl
dec
testl
in
pop
ret
mov
add
jle
jo
mov
add
rcrb
add
addb
sub
add
lahf
cmc
xlat
pop
push
mov
add
addb
sbb
cmpsl
xor
add
pop
mov
add
add
jl
enter
mov
add
sbb
aad
in
push
add
and
jno
sbb
mov
add
mov
add
fidivrs
loopne
mov
add
stc
sub
add
add
add
xor
adc
repz
sar
mov
add
add
jnp
mov
add
mov
add
mov
add
daa
and
add
out
loop
sbb
add
push
add
fdivs
add
aaa
icebp
sbb
add
add
adc
dec
js
das
xor
add
inc
and
out
outsl
push
add
popl
and
add
loope
icebp
fimull
add
pop
pop
jmp
mov
add
jns
loopne
sbb
dec
ret
aam
jbe
push
add
add
jmp
jae
mull
repnz
pushf
das
dec
jecxz
into
jl
in
lahf
fldenv
lock
add
stos
add
add
jg
lahf
add
add
mov
add
mov
add
mov
add
lock
test
sub
add
jecxz
mov
sub
push
dec
and
sub
mov
dec
shrl
add
fwait
cld
jmp
lds
movsb
add
inc
lods
jg
insl
shll
pop
movsl
repz
cld
cmpsl
sub
add
addb
dec
gs
scas
add
mov
add
and
add
xlat
pop
outsl
aam
add
insl
mov
add
push
add
mov
add
mov
rcrl
push
lock
add
das
add
add
adc
jne
xor
push
test
add
leave
mov
pushf
iret
shl
scas
mov
pop
and
add
test
jp
mov
add
addr16
lds
lods
add
stc
cmp
mov
push
add
bound
xchg
cmpsl
gs
negb
xchg
arpl
into
or
pop
jge
add
inc
xor
add
and
add
imul
sub
add
mov
add
pop
cmc
mov
pop
mov
mov
jne
cmp
ja
ret
adc
clc
pop
mov
ss
rorb
shrb
pop
cmp
push
jecxz
xor
jecxz
test
add
sbb
mov
add
cmp
mov
das
into
test
out
adc
mov
outsb
pop
addb
xchg
daa
insl
int3
mov
xlat
jl
pop
scas
add
jno
iret
sub
add
in
shlb
xor
roll
inc
fsubrl
mov
push
mov
mov
add
loop
push
enter
mov
add
mov
add
adc
dec
xchg
js
test
add
sahf
adc
add
mov
neg
mov
add
add
inc
or
loop
jge
mov
add
icebp
inc
scas
add
aaa
add
add
cmpsb
add
pop
cli
lcall
sub
add
cmp
add
ret
aam
xchg
std
push
inc
sbb
mov
mov
inc
outsb
lock
xchg
jl
test
add
test
data16
test
add
or
add
xor
cmc
rclb
ret
push
xor
inc
cli
movsb
add
push
add
or
add
pop
je
add
xchg
xchg
push
mov
and
add
aaa
popa
out
inc
pop
addb
lds
ja
ficomps
cmp
gs
cmpsl
mov
fcoml
jg
inc
sbb
popf
cmp
test
add
adc
jp
ds
cmp
push
adc
mov
or
insb
fisttpll
ja
jns
add
push
mov
push
add
mov
or
add
add
and
movsb
add
mov
push
jl
loope
lods
sbb
imul
pop
mov
add
cmp
pop
xchg
xor
test
add
addb
mov
scas
add
mov
add
add
addl
push
inc
xor
popa
sbb
les
add
scas
add
push
mov
pop
nop
push
sbb
rcl
cmp
aaa
dec
mov
inc
xor
fnsave
add
lea
into
scas
add
mov
popa
jmp
ret
add
fidivl
icebp
dec
mov
push
jns
add
pop
xchg
sahf
xchg
xor
add
mov
mov
mov
add
pop
icebp
sarb
sbb
jne
loopne
pop
and
jp
aam
addb
mov
pop
movl
lret
add
mov
arpl
int3
jb
xchg
mov
mov
add
push
icebp
lock
mov
sarb
mov
jecxz
scas
imul
fdivs
mov
add
jp
add
popf
xchg
fistl
jmp
add
jnp
shrb
fildl
add
iret
pop
cmpsl
xor
pop
test
add
add
pop
adc
adc
inc
shrl
mov
add
push
jecxz
add
mov
add
mov
add
adc
hlt
pop
lods
add
pushl
jge
and
add
mov
mov
movsb
add
jge
and
add
xor
jo
in
xor
fsts
pop
add
call
sbb
mov
std
cmc
lret
sbbl
xor
sbb
in
mov
add
in
mov
jl
sbb
or
add
stc
sub
add
add
push
shrl
imul
xor
add
lods
add
jl
iret
jne
cmpl
add
nop
sbb
add
add
adc
int
mov
add
jo
fists
or
add
ja
ficoml
jb
or
aas
push
lret
jae
add
add
push
ja
mov
fcmovbe
in
inc
cmpsb
add
scas
add
push
add
push
add
push
add
roll
add
jae,pt
je
xor
in
inc
and
je
xchg
and
add
nop
and
insb
mov
add
push
and
or
add
in
sahf
dec
mov
add
icebp
adc
fcomps
dec
mov
mov
add
mov
cmp
sbb
add
add
adc
jnp
out
mov
imul
sti
jmp
add
fstpl
mov
add
lahf
popa
imulb
add
in
add
icebp
imul
mov
jle
outsl
and
in
add
cmpsb
add
psubd
mov
add
jle
add
call
add
scas
add
jo
push
call
push
mov
add
adc
jle
icebp
rcrb
add
add
sbb
jge
xor
testb
outsb
fcmovu
dec
mov
jnp
add
movsb
add
xchg
movb
adc
addb
mov
xor
add
pusha
xor
std
or
add
mov
cmc
std
test
out
xchg
pop
scas
add
jmp
mov
mov
fsts
aam
pop
insl
xchg
add
add
mov
push
popa
jmp
jg
jae
jno
push
or
add
mov
add
add
gs
mov
in
rep
je
add
outsl
stc
jl
lea
add
lahf
pop
aam
mov
mov
imulb
sbb
add
imul
lahf
xchg
adc
sbb
xor
xor
mov
pusha
aad
add
adc
popa
cmpsb
add
js
popf
mov
add
pop
cmp
and
add
adc
sub
add
add
mov
or
add
mov
outsl
and
add
add
pop
or
fidivrl
mov
xchg
not
bound
add
stos
add
mov
lret
insb
mov
pop
xchg
inc
in
push
push
push
rcrb
sbb
inc
mov
test
ljmp
fs
add
movsl
jo
lcall
add
rclb
xchg
mov
mov
mov
or
add
aaa
cmp
test
add
les
jno
call
add
adc
data16
add
mov
jns
sbb
inc
icebp
icebp
aas
add
add
data16
add
aad
add
push
or
add
in
insl
std
pop
pop
cltd
mov
xchg
adc
xchg
int3
cmp
divb
add
mov
sub
add
or
add
mov
cmp
lock
sbb
add
pop
dec
cmpsb
add
repnz
loop
stos
add
inc
fdivrs
rcll
cld
imul
shll
dec
cmpsl
push
sbb
mov
popf
setns
xor
add
mov
inc
out
xor
jns
push
add
outsl
add
mov
inc
cmpl
add
fistpl
shrl
adc
sub
fstps
rcrb
adc
mov
xor
push
mov
aam
adc
ja
add
xchg
add
pop
inc
popf
and
add
mov
dec
into
push
add
or
add
add
add
mov
add
std
push
shrl
xchg
fs
xor
pop
or
add
gs
mov
add
imul
pusha
pop
or
add
in
push
insl
sahf
adc
add
adc
fbld
add
scas
sbb
fnsave
das
pop
mov
cltd
stos
add
sbb
mov
ret
push
stc
std
lods
unpckhps
push
ja
dec
shrl
pusha
ljmp
mov
daa
mov
add
add
add
lcall
pushf
imul
inc
adc
fsubrp
dec
jns
jae
loop
add
adc
mov
add
lahf
dec
add
adc
lret
out
cmp
jns
sub
add
or
jno
lcall
lea
aad
stos
add
hlt
cmp
mov
inc
mov
add
int3
sbb
or
add
inc
inc
mov
add
movsb
add
jnp
jl
stos
add
push
ljmp
and
and
add
or
add
rcl
movsl
sti
popf
fdivr
icebp
pop
sbb
mov
jbe
idivl
add
push
jo
decb
add
jb
cli
leave
push
add
jne
sub
add
or
add
jns
xor
lcall
sahf
mov
add
push
cmp
jge
jp
pusha
das
popf
sbb
sbb
std
popa
std
insl
sahf
sbb
add
adc
out
or
inc
daa
xor
mov
mov
pop
pusha
jmp
test
add
aam
pop
and
add
test
add
add
mov
lret
inc
cltd
lods
add
mov
int
mov
add
pusha
addr16
xor
test
adc
cmp
in
ja
mov
bound
scas
add
stos
add
xchg
pop
mov
jecxz
in
jecxz
add
add
clc
bound
fs
ret
add
ret
jg
xor
add
xor
add
subl
xchg
enter
dec
test
add
xchg
mov
push
test
sbb
jge
cwtl
test
add
lcall
fmuls
add
add
jo
lods
add
push
aaa
shll
add
xchg
sub
add
leave
jo
fildll
pop
fisubrs
xchg
and
frstor
jecxz
push
sub
insl
xor
pop
rclb
arpl
dec
iret
jg
test
add
or
adc
fwait
push
and
add
test
add
stos
add
and
pop
inc
movups
sub
inc
aas
mov
and
call
add
xor
inc
gs
cmp
jb
fwait
pop
cli
xchg
mov
outsl
jge
pop
dec
adc
lds
add
add
cmp
lret
xlat
xchg
mov
xor
push
loope
inc
stos
pop
lcall
mov
jg
add
cmp
fs
add
add
adc
rolb
add
pop
sbb
insb
adc
loop
cmpsl
in
push
fld
mov
add
cmp
shr
loopne
gs
add
cltd
and
add
shl
xor
add
mov
jbe
js
outsl
sub
add
js
jae
add
loope
shll
mov
add
mov
push
xor
xor
mov
sub
add
sti
jo
sub
add
pop
cli
sahf
dec
dec
jnp
loope
jecxz
inc
mulb
add
mov
stc
sub
add
inc
repnz
pop
cmpsl
clc
loopne
push
jnp
lods
jl
adc
ss
add
rcl
add
add
xchg
push
xchg
sub
add
add
int
mov
add
lds
jl
push
mov
xchg
add
movb
aad
xlat
mov
add
fwait
lock
addb
mov
cwtl
popa
mov
add
jnp
icebp
pusha
mov
addb
sbb
icebp
and
add
call
cld
jecxz
add
outsl
arpl
push
insl
fsubr
in
xchg
int
dec
jge
add
add
pushf
lcall
push
push
add
test
shrl
repz
mov
and
push
jbe
add
add
push
pop
mov
add
jecxz
sti
into
inc
push
cmp
pop
out
jmp
dec
cmc
push
add
imul
dec
add
dec
lcall
sbb
mulb
scas
lock
xchg
insb
cld
mov
and
push
cmpsb
add
push
ss
aaa
mov
add
add
test
add
int3
mov
push
std
js
mov
data16
add
mov
add
aas
xor
cmpw
add
call
push
fsubr
xor
je
insl
ja
call
add
das
or
dec
std
int3
pusha
add
or
add
jne
mov
ljmp
cltd
popa
addb
mov
xor
mov
cmp
stc
jno
mov
lcall
add
std
mov
loopne
add
out
push
aas
in
xor
add
add
add
xlat
mov
add
add
pop
jnp
outsl
rdtsc
ja
mov
ja
mov
add
js
mov
inc
stc
loopne
imul
add
and
add
add
mov
or
test
add
mov
loopne
add
aam
aas
leave
leave
ret
clc
inc
push
shrl
xchg
pand
sub
add
add
int3
cwtd
mov
jle
mov
sub
add
add
cmp
movsl
xor
inc
mov
int3
mov
push
add
mov
rolb
daa
sub
add
lods
sti
mov
xor
sbb
mull
add
scas
shrl
out
inc
fcmovb
pop
pusha
pop
shl
mov
insb
cli
adc
shr
arpl
pop
push
mov
add
out
test
add
push
mov
mov
mov
fcompl
mov
cmp
repnz
lds
jp
push
mov
pop
cmpxchg
nop
jnp
mov
pop
jnp
or
add
icebp
fidivs
pop
or
add
pop
dec
xchg
into
adc
push
jns
clc
mov
push
into
ja
jg
or
in
and
add
sahf
mov
jecxz
ret
push
imul
adc
pop
jae
fistpl
aaa
pop
imul
cwtl
fsubr
into
mov
add
pop
mov
inc
or
add
lods
add
push
imul
fdiv
dec
lock
add
mov
add
mov
add
cmp
cmp
ljmp
in
outsb
and
add
int
fcmovbe
popa
add
add
sub
add
add
shl
fdivrp
leave
loop
popa
loopne
outsb
js
jmp
jge
cli
cmp
js
inc
enter
add
fmull
stc
and
add
jle
inc
jle
lret
lods
jmp
mov
scas
add
arpl
pop
xlat
lods
add
pop
roll
sarl
popf
jp
jbe
stc
mov
add
nop
sbb
sub
add
shr
mov
add
add
xorl
dec
loope
sbb
cld
fstpt
jbe
inc
bound
aaa
jge
lods
push
insb
add
add
inc
lret
mov
out
leave
dec
or
add
push
sbb
or
sub
add
jne
cmp
and
add
push
hlt
popa
push
dec
push
in
ja
add
push
gs
lea
out
mov
sub
add
fmull
aad
addr16
sub
insb
push
out
add
add
shlb
cmp
push
ss
push
std
ja
adc
mov
add
jg
and
add
imul
sbb
shrl
lret
add
pop
clc
addb
das
jbe
dec
mov
rolb
add
rorb
add
lds
add
xchg
cmp
xchg
loop
xchg
loope
mov
loopne
inc
ds
mov
adc
fnstsw
int3
dec
mov
and
sub
ljmp
lods
call
add
inc
xchg
mov
push
adcl
in
jo
testb
add
add
dec
and
add
add
fcoml
out
add
xor
js
test
add
loope
outsb
push
cmpsl
mov
add
mov
add
fnstcw
pop
addb
mov
into
in
or
add
cli
cmp
add
mov
add
loope
or
inc
icebp
das
push
sbb
mov
aas
inc
popa
insl
cld
je
fwait
jp
mov
add
inc
movsb
add
fnstcw
add
xchg
or
leave
pop
xlat
xchg
add
jno
push
add
jo
jmp
icebp
cld
movsb
add
fimull
add
mov
pop
lock
jl
ljmp
iret
sub
push
lcall
dec
mov
add
mov
push
sbb
add
call
mov
xor
inc
sub
add
in
add
lret
add
shll
add
lret
mulb
adc
mov
or
jg
shrl
add
inc
daa
movsl
loop
add
xchg
add
dec
sbb
mov
aaa
add
xchg
call
lock
call
addb
jmp
jg
add
xor
add
addb
mov
mov
sbb
icebp
jns
add
mov
mov
mov
push
fs
add
pop
lahf
imulb
ljmp
enter
sti
pop
aaa
or
clc
xlat
xchg
inc
add
mov
add
add
int3
data16
sbb
addb
stos
xchg
add
subl
ja
xchg
jae
push
xor
cmp
cli
hlt
mov
pop
sub
add
add
imul
xchg
mov
sahf
roll
xor
xchg
inc
jmp
jmp
mov
add
or
jae
add
mov
add
sbb
push
dec
lods
cmpsl
in
out
lock
cltd
sbb
mov
add
lret
jns
addr16
mov
push
add
cltd
movsl
ficoml
add
add
roll
lock
add
scas
add
add
add
adc
mov
push
add
xchg
add
aas
inc
cld
scas
add
notb
mov
in
sti
inc
sbb
adc
int3
or
add
mov
fstpl
inc
mov
and
add
add
cmc
je
jmp
out
or
add
push
push
xchg
addb
outsl
movsb
add
icebp
std
hlt
shrb
add
lahf
sbb
cmc
mov
push
cmp
cld
jg
adc
sbb
xor
add
popf
ret
mov
cmp
cmp
repz
add
orl
mov
add
out
repz
popf
cmc
sub
add
push
push
jge
imul
xor
pop
jmp
xor
add
cmp
dec
icebp
leave
test
add
out
loop
add
sbb
inc
pop
call
lret
pop
fwait
das
cmp
inc
or
hlt
push
cwtl
dec
add
add
mov
dec
out
insb
insb
jmp
leave
mov
add
sbbl
mov
add
ret
dec
addb
insl
add
add
add
xchg
xchg
xor
jo
rcrb
push
jb
adc
mov
clc
fisubrl
add
xor
popf
sub
add
add
mov
nop
ficoms
pop
mov
jbe
sbb
jge
lret
add
rcrl
adc
aam
addb
test
add
test
int
unpcklps
push
sarb
mov
add
inc
aam
lret
shll
dec
test
xchg
jno
add
inc
lahf
daa
andl
in
or
push
test
add
stc
out
add
call
addb
xor
rep
sbb
fldz
insl
xchg
insl
std
lret
jmp
add
lret
sub
add
adc
adc
lret
add
shl
outsb
add
add
je
aam
call
in
rclb
das
lds
or
add
jae
lea
adc
js
mov
mov
nop
adc
xchg
aam
test
lods
add
sbb
mov
add
mov
daa
dec
fwait
inc
insb
pop
push
add
into
bts
je
pop
lock
insb
dec
jo
shrb
add
clc
or
add
das
out
inc
xor
mov
add
add
lar
add
adc
add
negl
cmp
inc
inc
cwtl
lea
add
test
add
add
mov
add
jl
pop
dec
dec
lock
xorl
sub
add
xlat
std
jge
sti
rol
and
cmp
dec
ret
popf
ds
shrl
and
xchg
fs
mov
add
add
dec
xchg
jecxz
sub
add
cmpsl
pop
addb
mov
popa
cmp
fdivrs
addb
jge
dec
scas
add
add
sbb
jg
push
lcall
addb
pop
jo
inc
inc
push
movl
jg
mov
push
clc
sbb
mov
gs
cmp
sbb
addr16
xchg
cmc
imul
sub
mov
add
add
ja
xchg
inc
sti
loopne
int3
dec
push
jge
lea
ss
lea
popa
sarb
inc
sub
int3
lods
mov
enter
je
push
shlb
out
inc
jns
mov
arpl
aad
iret
std
fldt
add
xor
leave
lods
sub
add
add
fnstsw
lret
mov
test
and
cmc
add
push
jbe
addb
dec
jnp
bound
lock
add
pop
dec
pop
jo
jl
fdivs
push
imul
pop
xchg
or
add
inc
cmp
cmpsb
add
pushf
mov
add
mov
mov
add
mov
test
add
pop
arpl
pop
xchg
mov
ss
xchg
sbb
or
add
pushf
pop
xchg
mov
sub
fwait
ret
scas
adc
add
aas
stc
sbb
mov
add
je
pop
xchg
pop
popa
in
imul
dec
cmc
fisttpl
dec
adc
pop
pop
ljmp
clc
cmp
add
add
add
add
lock
add
aad
ds
mov
loopne
add
movsl
jg
xchg
mov
add
outsl
add
or
add
add
out
addb
jnp
or
pushf
into
fiaddl
add
mov
ds
pop
and
push
add
leave
lea
add
out
fisttpl
push
clc
imul
adc
add
ljmp
pop
and
add
and
inc
adc
add
push
mov
js
dec
sarb
xorl
pop
jecxz
mov
add
mov
out
mov
add
imul
pop
loopne
add
sub
pop
cmp
mov
jp
pop
add
sbb
add
outsl
jae
fcmovnbe
dec
pop
mov
inc
push
lock
repz
add
ficomps
sbb
sbb
adc
bound
or
add
add
cwtl
push
mov
int
xlat
xchg
test
add
xchg
jae
cmp
and
inc
mov
cmp
dec
or
add
xor
cmp
mov
or
pop
fnstenv
add
add
aas
pop
push
movsb
add
pop
xor
add
xchg
stos
add
movsb
add
out
push
test
cmp
push
sbb
ds
adc
or
cmp
loope
sub
out
inc
addb
ss
out
and
decl
push
sbb
sub
add
add
xor
add
add
pop
psubsw
xchg
cmc
add
add
xor
dec
stos
push
jns
dec
repz
inc
push
lock
and
add
add
or
daa
les
sub
cmc
adc
cltd
cmp
andl
out
pop
call
xor
dec
loope
push
add
out
lcall
add
xchg
and
add
jp
add
mov
in
adc
pushf
cld
jns
ljmp
sbb
ds
inc
sbb
jns
add
add
loop
test
add
add
push
movsl
cmp
mov
add
push
inc
xor
jge
daa
adc
les
data16
add
scas
add
cli
mov
add
fldt
add
jle
pushf
or
add
add
sbb
jb
push
insb
cwtl
aad
sbb
jg
ret
cmc
imul
addb
push
and
cli
insl
faddp
xchg
jae
idivl
dec
enter
dec
out
jge
add
add
out
add
add
ret
sbb
push
add
insb
cmpsl
mov
add
jp
aam
add
iret
xchg
addb
pusha
js
inc
xlat
loope
jg
pop
dec
mov
sub
popf
test
add
imul
add
push
push
movsl
fadd
shr
cmp
jle
add
xchg
add
fcomip
dec
lods
add
int3
lods
xchg
aaa
lock
imul
add
negl
loope
xor
pusha
in
add
jae
out
and
call
ljmp
fcmovb
lods
add
movsl
ljmp
out
pop
mov
add
mov
adc
xor
scas
mov
sar
and
add
inc
js
mov
add
add
lds
add
dec
arpl
add
js
ja
cld
out
stos
add
mov
add
cmp
cmp
fnsave
add
fidivrl
xor
pop
cwtl
ret
mov
pop
push
or
adc
popa
sti
das
or
add
out
add
add
add
imul
cmp
in
xor
and
add
xor
mov
xchg
call
fucomi
ss
stos
push
xchg
loope
add
push
adc
xchg
pop
add
cmpsl
mov
add
xor
mov
jns
aas
push
std
pop
add
shll
add
add
cltd
fmul
lcall
in
mov
or
add
add
dec
xchg
insl
or
add
cwtl
or
xor
lods
add
push
add
mov
add
pushf
jb
insl
inc
sbb
out
outsb
into
add
shrb
rcrl
inc
adc
aad
cld
push
cmp
out
mov
xchg
js
fistpl
outsl
mov
and
jle
in
lea
mov
les
xor
mov
jmp
ja
loop
fadd
jb
out
sub
add
scas
add
decl
pop
mov
add
or
push
mov
mov
add
mov
jo
xor
add
cmc
mov
add
push
fbld
add
add
in
xlat
leave
cmp
xor
dec
push
add
mov
popa
ds
repz
lods
add
dec
pop
adc
pop
jge
sbb
in
pop
inc
xchg
ljmp
movsb
add
push
shll
add
popa
jmp
pop
int3
lds
mov
add
pop
push
dec
loope
mov
add
loop
lret
add
push
add
cmp
in
mov
sahf
cwtl
pusha
dec
mov
rclb
inc
ret
int3
push
mov
add
and
xor
repz
or
add
add
push
movsb
add
xlat
popa
mov
dec
dec
das
cmpl
lea
add
pop
mov
add
test
add
mov
fimuls
movsl
mov
addr16
loope
fcmovnbe
xchg
dec
mov
add
call
pop
outsl
daa
loopne
int
jne
lcall
inc
mov
add
adc
cltd
sub
lret
add
arpl
add
inc
fwait
addl
fxsave
add
testl
sub
mov
outsb
xchg
mov
inc
add
add
test
push
cli
cltd
into
jbe
add
rolb
add
stc
pusha
out
call
jae
and
add
add
adc
mov
mov
shll
add
add
into
xor
add
or
fiadds
mov
add
add
sti
sbb
dec
in
test
divl
sbb
add
or
add
pop
gs
add
push
stos
dec
ljmp
jbe
or
add
adc
shl
into
mov
add
inc
popa
popf
stos
adc
mov
inc
mov
test
push
jae
cmp
repnz
lock
pop
xor
movsb
add
push
xchg
sbb
jge
adc
add
lea
add
cmp
mov
sub
add
add
pop
rorb
add
push
pusha
push
mov
add
jbe
mov
adc
add
cwtl
dec
or
add
cltd
cmpsb
add
sti
cmp
push
sbb
out
or
add
dec
lock
sub
add
push
aas
jg
int
push
mov
outsb
mov
mov
into
mov
test
cltd
orl
add
pop
ffreep
and
add
popf
lock
add
cmc
mov
in
test
add
pop
jecxz
add
add
add
cmc
mov
add
imul
xor
pushf
pop
mov
aaa
xchg
popa
in
mov
insl
mov
les
add
mov
ss
nop
int
push
push
sub
add
add
aas
or
add
add
and
add
add
jae
aas
cld
jge
inc
cmpsl
or
shrb
add
outsl
adc
jno
dec
pop
xchg
adcl
cld
xchg
jno
aas
jnp
mov
add
push
add
mov
mov
inc
dec
cmp
jmp
push
cltd
jg
add
cmp
lahf
xchg
add
jno
push
add
add
jge
xchg
test
sbb
jmp
pop
movsl
int3
repnz
adc
push
dec
in
out
or
add
adc
add
repnz
sete
or
inc
xchg
ror
cmp
add
lret
add
into
xor
jnp
cmp
xor
cwtl
mov
add
insl
ja
push
xlat
inc
fimull
add
push
inc
or
std
pushf
inc
scas
add
outsl
dec
jno
ss
cmc
xor
add
mov
push
fdivl
cmp
jp
into
mov
mulb
push
mov
add
jmp
inc
xchg
jae
dec
cwtl
hlt
sar
cmc
lds
les
add
insl
cmp
mov
xchg
cmp
sub
insl
aad
addb
dec
loop
popf
ss
js
mov
ljmp
ret
inc
stos
and
add
add
std
ror
xor
xchg
inc
mov
add
add
or
mov
push
cmpsb
add
int
or
add
mov
pop
and
mov
iret
mov
add
cmp
je
movsb
add
jo
add
roll
mov
in
pop
add
add
add
sub
add
push
add
lahf
outsb
and
cmpsl
popf
xor
pushf
jae
cmp
dec
inc
mov
mov
add
add
mov
addl
mov
mulb
add
inc
daa
and
add
jmp
int3
push
sub
cmp
daa
movsl
xor
shll
pushf
dec
jb
pop
sub
add
popf
test
add
mov
ss
mov
add
jecxz
cmpsb
add
movsl
shlb
mov
add
jge
xchg
xor
jne
and
add
cmp
in
or
add
lods
xchg
mov
or
fisubl
cmc
into
mov
pop
sti
pop
in
imul
aaa
cmpsb
add
add
mov
aam
icebp
lds
add
push
dec
jg
add
cmp
xor
add
cmc
mov
aam
iret
mov
pop
ss
aaa
stos
add
imul
add
add
lods
add
fimuls
add
fidivs
sub
add
add
push
adc
imul
or
add
addl
dec
addr16
lds
addr16
dec
sub
mov
or
add
pop
insb
leave
sbb
lret
jnp
pop
in
and
add
sub
add
or
bnd
ljmp
jg
cmc
push
dec
push
dec
arpl
add
add
mov
add
push
add
xor
mov
stos
test
add
movsb
add
out
or
add
jo
popf
xor
xchg
jl
add
cmpsb
add
cltd
cli
movntps
or
xor
mov
add
cltd
adc
mov
mov
lods
add
xor
push
add
ljmp
push
jo
insl
add
test
test
xchg
bound
ds
stos
add
sub
add
imul
into
aam
lock
sub
add
jmp
movsb
add
data16
mov
inc
add
xor
add
lcall
add
add
dec
add
xchg
mov
addb
mov
push
test
adc
mov
add
mov
add
mov
add
add
add
push
bnd
pop
repz
add
adc
pop
pop
cli
jno
in
mov
stos
arpl
test
nop
jbe
out
dec
sbb
pop
outsb
push
js
mov
pushf
or
mov
stc
xchg
push
lock
js
movsb
add
mov
enter
xor
add
ss
into
cmp
add
add
add
push
add
lock
test
add
add
addb
mov
ljmp
add
push
cmc
adc
ljmp
iret
xor
ljmp
add
pusha
pusha
popf
popf
lcall
add
outsb
das
cld
sbb
add
js
sahf
insb
mov
add
or
add
js
mov
icebp
aas
aam
jmp
mov
add
ficoml
sub
add
rclb
int3
stos
add
and
add
mov
mov
mov
add
add
xor
adc
pop
stc
or
add
imul
fisttpl
lret
add
add
sti
cmpsl
ret
addr16
pop
dec
jb
add
insb
jle
lcall
add
pushf
dec
adc
mov
into
test
rcll
out
and
add
lods
add
xchg
movsl
ds
dec
ja
add
sub
aas
sti
sbb
popf
pop
cmc
pusha
insb
ljmp
lods
mov
dec
fwait
push
add
xchg
sahf
repnz
add
jl
sub
add
mov
jae
push
add
sete
arpl
add
add
add
sub
add
enter
xchg
pop
stc
stos
jp
pop
std
fcomp
pushf
add
and
add
cli
sbb
push
mov
inc
xor
pop
sahf
sub
add
mov
mov
inc
adc
jne
jp
push
add
add
add
ljmp
or
inc
call
sbb
adc
rcll
jecxz
inc
pop
sahf
int3
cwtl
push
inc
inc
or
add
sub
ja
stos
add
push
add
push
loop
pop
jb
push
ljmp
push
mull
add
push
ret
add
add
dec
aaa
and
fcmovnb
inc
cli
jmp
dec
dec
cwtl
loope
adc
pop
push
pusha
mov
pop
sbb
hlt
aad
push
fcompl
lods
cmp
and
add
xchg
icebp
mov
fistps
add
js
repnz
add
int
aas
cmp
inc
cmp
icebp
pop
and
add
pushf
xor
lret
and
add
mov
insl
jne
push
jmp
adc
popf
adc
cmpsb
add
inc
lock
call
push
adc
xlat
cmp
add
xchg
cli
inc
movsb
add
fdivl
push
adc
add
rorb
lods
sbb
in
aas
cmc
lret
jp
ja
push
xor
add
jmp
mov
les
nop
add
add
ljmp
pusha
adc
lret
add
aad
fwait
add
lock
addr16
or
popf
mov
add
pushl
outsl
arpl
out
stc
bound
adc
into
lcall
scas
add
daa
jb
add
cmp
clc
mul
push
pop
movsb
add
or
add
mull
orl
mov
add
dec
pop
mov
jb
out
leave
fcoml
mov
mov
add
and
add
out
cmc
bound
mov
int3
insb
cwtl
loope
xor
insl
jecxz
loop
add
pop
cmpl
mov
int
add
and
add
add
add
add
mov
xor
push
add
enter
pop
icebp
stc
or
add
mov
mov
xchg
add
shll
add
add
lret
push
fbld
add
and
add
test
add
xchg
iret
scas
loopne
leave
jb
add
popf
xchg
add
arpl
pop
xor
jbe
ret
ror
dec
fldln2
sub
cli
rclb
and
add
jno
int3
aaa
mov
inc
jb
add
ror
xor
shll
add
jne
pop
jo
pusha
gs
fld
repz
add
sti
mov
add
mov
and
add
xchg
add
int3
push
add
push
repz
mov
repnz
test
add
jle
mov
cmpsl
in
pop
fucom
sti
mov
xlat
and
push
pop
pop
lods
add
aaa
adc
ds
adc
loop
icebp
cmpsl
mov
jne
aad
add
pop
pop
into
jge
dec
adc
add
jg
push
dec
ja
stos
cmp
mov
or
add
add
mov
test
cmp
add
pop
jae
lahf
cld
in
cwtl
jg
imull
add
and
add
pushf
in
mov
add
jmp
inc
pop
xor
push
mov
mov
lods
add
mov
add
xor
dec
dec
xor
lcall
test
dec
add
mov
add
mov
mov
add
push
test
add
push
add
add
add
add
add
enter
adc
hlt
xchg
lcall
add
or
push
sahf
xor
aas
dec
jge
popf
mov
add
icebp
mov
lret
lcall
outsl
xor
inc
cmpsb
add
mov
add
xor
sbb
rcrl
mov
loopne
pop
sbb
mov
add
and
add
in
inc
jae
int
add
add
add
fdivr
popf
mov
add
jb
daa
jp
xchg
add
add
enter
pop
int
adc
aad
xlat
jb
push
add
ret
sar
cmp
mov
addb
jnp
addr16
adc
adc
inc
inc
repnz
or
add
fwait
xor
icebp
test
movsb
add
and
xor
fwait
mov
ret
mov
add
pop
sub
add
add
add
mov
scas
add
mov
dec
jg
add
push
dec
cmp
add
xchg
add
loope
add
add
popa
enter
add
xchg
lret
aaa
aam
add
add
cmc
aaa
mov
or
add
adc
jb
dec
mov
add
ds
xor
add
add
stc
frstor
bound
xchg
pop
popa
xlat
pop
xchg
loop
addb
addb
pop
add
imul
xchg
adc
add
add
rorb
addb
repnz
and
add
add
js
adc
mov
add
movsb
add
stc
push
jbe
mov
cltd
pop
je
dec
cmpsl
jge
out
push
jmp
add
jg
jmp
mov
dec
add
xlat
sub
enter
jno
das
and
xchg
mov
push
mov
sub
fidivs
push
push
dec
fsubs
das
fldl
addl
pop
and
add
xchg
rolb
add
ss
repz
add
mov
add
inc
jns
pop
or
mov
aaa
inc
mov
aad
jecxz
aaa
and
add
popf
mov
add
xchg
aad
xchg
mov
ljmp
sarb
je
add
mov
clc
fs
add
add
insl
imul
add
nop
add
fdivr
jg
adc
sub
sbb
sti
inc
shl
pop
dec
cmp
add
out
cmpsb
add
sub
add
add
push
push
stc
lret
popa
dec
fbstp
das
xor
cmp
mov
add
push
sbb
mov
jno
add
add
bound
mov
mov
add
sti
lahf
or
add
add
add
rolb
out
inc
fwait
shrb
fidivrs
add
jle
push
cld
or
stc
iret
aam
mov
ja
xchg
jg
mov
add
ret
add
addb
outsl
je
addr16
ficoml
push
mov
adc
cli
push
jno
stc
push
pop
dec
lds
add
xchg
lahf
add
test
push
movl
ljmp
mov
mov
add
stos
ss
and
mov
out
inc
jg
adc
shl
pop
and
add
fstp
shrb
add
push
cli
sbb
popf
ret
loope
lea
mov
inc
cmc
jmp
dec
int3
out
repz
dec
mov
add
call
jecxz
jp
add
pop
das
out
cmp
jge
or
into
ret
add
push
imul
mov
sbb
imul
mov
add
pop
jo
add
stc
pop
adc
in
add
outsl
outsl
aam
pop
jae
jne
jmp
lcall
out
clc
lahf
pushf
add
loope
and
add
outsb
pop
add
xlat
loopne
xchg
mov
fnstenv
pop
aaa
das
jp
mov
out
xor
xchg
add
mov
add
add
jmp
sti
adc
fs
outsb
add
add
add
cmp
rorl
add
cli
pop
xor
jne
ficoms
xor
scas
add
cmp
loope
out
out
je
fnsave
push
add
fistl
ss
decl
mov
pop
ljmp
add
das
imul
dec
daa
sub
in
int
adc
in
mov
and
fs
lret
pop
dec
push
mov
inc
rol
loop
leave
int
or
add
add
and
add
push
cmp
gs
jecxz
sbb
push
leave
scas
add
inc
jmp
push
pusha
rcrb
xor
std
pop
ret
mov
sbb
dec
pushf
xchg
add
add
xchg
je
add
int3
into
cmpsb
add
pop
push
jno
testb
sahf
jnp
fidivs
sub
cmp
cmc
sbb
push
jecxz
mov
mov
inc
xchg
pop
movl
pop
idiv
adc
xlat
lcall
out
js
add
ds
and
filds
pusha
in
ja
stc
xchg
cmp
scas
add
xor
mov
add
push
mov
mov
add
movzwl
aam
add
sub
add
sbbl
fcmovne
sbb
lock
pop
and
add
fs
xorl
mov
push
lock
cmp
push
push
loopne
add
ret
insl
xchg
xor
fisubs
xchg
lea
push
ret
xchg
pop
cmc
add
pop
incb
lods
add
fs
pop
push
add
jmp
sub
mov
add
add
sbb
outsl
stos
jne
or
cmp
dec
loopne
cmp
ljmp
xchg
imul
push
ret
inc
pop
out
leave
ret
add
jl
xchg
roll
push
adc
mov
in
loope
mov
add
repnz
inc
mov
lret
fldl
pop
fildl
add
in
or
add
add
jbe
aaa
aas
adc
pusha
lret
mov
push
sbb
xor
push
pop
fucomi
iret
cli
stc
ds
out
outsb
mov
cmp
mov
and
add
inc
icebp
and
add
pop
shll
inc
nop
fyl2xp1
call
pusha
out
sub
pop
jp
xchg
add
add
cwtl
add
fsubrs
xor
movsb
add
jecxz
sub
add
jno
pop
mov
add
gs
pop
inc
loope
fwait
mov
mov
pop
jl
add
push
frstor
add
push
sbb
mov
or
testl
add
adc
cli
sub
add
icebp
jle
mov
cld
out
addr16
mov
add
mov
pop
fidivrs
cmp
je
popa
push
pop
lods
xor
scas
mov
add
add
cmpsb
add
rcl
jno
sti
add
pop
jno
cmp
fadds
add
scas
fiaddl
daa
cmp
cltd
icebp
sub
add
mov
test
cmc
mov
adc
enter
add
bound
add
jns
pop
jmp
mov
add
aam
test
jo
mov
and
add
test
sbb
xchg
jbe
add
je
add
lock
in
inc
lret
test
add
cmpsl
mov
add
sub
add
add
mov
call
inc
addb
dec
xchg
mov
add
mov
cltd
or
pop
scas
sbb
icebp
sti
sbb
add
mov
add
add
fdivrl
jno
stos
sar
fwait
adc
lods
addb
jo
jmp
add
cmp
mov
adc
add
fwait
sarb
sbb
or
add
add
mov
add
adc
xchg
imul
cltd
cld
ror
and
into
jno
les
rcl
popf
mov
add
loop
mov
push
add
icebp
enter
je
push
add
inc
loope
add
dec
out
or
add
add
mov
add
loope
pop
push
addb
fsubl
add
pop
xor
int
push
jecxz
or
add
sahf
mov
sbb
loope
or
test
dec
lds
fst
movsl
push
nop
das
xor
xor
jg
test
xchg
jnp
and
add
add
popa
mov
addb
jg
jno
pop
push
fdivr
mov
dec
adc
nop
xchg
hlt
xchg
loope
add
and
add
mov
call
mov
idivl
enter
js
add
leave
dec
push
cltd
xor
mov
decb
cltd
aam
mov
adc
insb
pop
mov
add
push
ljmp
add
mov
add
pop
movsb
add
or
add
loope
dec
ljmp
scas
add
xlat
mov
xchg
stos
add
add
mov
mov
or
xor
push
jmp
addr16
out
aad
push
in
ret
in
pop
or
daa
int3
lock
add
add
add
negl
inc
sub
add
je
loope
mov
rol
ficoms
loopne
mov
das
in
add
add
mov
jb
dec
push
or
xor
ficoms
inc
lods
add
rcl
pop
das
jae
aam
in
movb
add
inc
xor
add
popa
stos
xchg
aam
subl
jnp
push
loop
fildl
xchg
add
hlt
in
jecxz
add
outsb
inc
xor
sbb
ret
mull
cli
leave
call
jmp
sbb
in
or
sbb
sub
add
add
adc
cmp
sub
add
add
pusha
popf
mov
push
push
adc
add
add
and
add
icebp
stos
dec
clc
xchg
addb
lock
add
inc
test
inc
outsl
mov
add
add
jne
jl
add
mov
add
add
mov
push
xchg
lcall
xor
outsl
outsl
xor
adc
add
and
xor
inc
xchg
sahf
xchg
movsl
pop
ja
sbb
mov
add
add
dec
insl
outsb
xor
jns
pop
aaa
or
and
add
adc
bound
jns
xchg
mov
lds
in
test
addb
pop
iret
sub
movsl
add
das
jno
add
mov
out
add
pop
mov
adc
add
pushf
fdivrl
add
xor
sbb
add
gs
cmpsb
add
pop
stos
outsb
sbb
jae
adc
add
test
add
adc
dec
ljmp
rcr
int3
push
add
mov
add
xor
and
sbb
add
daa
or
mov
add
call
sahf
bound
add
and
add
dec
fsubl
addb
in
jno
sub
add
jmp
pop
lods
mov
add
and
push
push
loope
add
adc
push
loopne
add
add
adc
rep
fisttpll
mov
movsl
or
add
add
loopne
mov
add
or
add
mov
xchg
or
dec
push
sar
fstpl
daa
push
fwait
mov
imul
add
push
outsl
pop
mov
les
daa
arpl
stos
lds
dec
ret
add
add
lds
pop
cmp
fmull
add
mov
sub
inc
push
lret
ror
daa
push
das
int
xorl
sti
scas
add
rclb
addb
mov
add
out
push
rorl
data16
cwtl
int
out
sti
inc
add
lods
add
jge
out
pusha
shlb
add
enter
jg
aas
or
add
add
dec
adc
and
add
xchg
xchg
pop
cmpsl
push
add
test
lret
clc
push
add
add
stc
sbb
mov
movsb
add
pop
rorb
hlt
push
jecxz
jne
and
add
add
mov
inc
adc
pushf
xlat
repz
pop
dec
cmp
add
pop
and
pop
jecxz
fldl
lret
add
push
clc
push
rclb
ja
xchg
jo
cmc
push
shll
mov
or
xor
push
inc
mov
add
addl
add
add
mov
add
inc
mov
add
ret
add
push
add
add
add
xor
mov
xor
test
add
add
arpl
add
pop
out
add
or
add
xchg
add
dec
cwtl
pop
add
add
notl
repnz
jne
sub
mov
add
add
repz
jbe
or
mov
scas
scas
add
jle,pt
out
add
lea
sti
adc
cmp
xchg
ja
pop
insb
out
sub
inc
push
or
jno
xchg
xor
xchg
add
in
in
fmuls
fwait
mov
call
and
shrl
xor
and
add
add
push
add
inc
cld
dec
cwtl
sub
push
sahf
inc
pop
mov
js
push
sbb
add
fldenv
jg
aas
jp
or
add
xor
imul
xchg
add
add
cmp
sbb
cmp
mov
mov
add
mov
add
test
add
cmpsl
jne
jo
bound
add
or
mov
gs
test
sub
add
jnp
ret
add
popf
push
xor
je
and
add
cli
lret
fsubs
add
mov
mov
test
add
push
add
mov
add
imul
aad
xchg
ret
sbb
add
lods
add
add
xchg
mov
outsl
jge
mov
add
ds
jns
dec
int
mov
jb
add
aam
inc
jns
mov
add
fdivs
sbb
xlat
mov
add
mov
add
cli
sbb
hlt
lcall
add
sub
add
fisubs
push
inc
mov
dec
adc
mov
and
rclb
and
add
adc
dec
in
fldenv
aaa
in
add
loope
cld
loope
add
jg
cmp
dec
add
out
rcl
popa
or
in
sbb
ljmp
imul
cld
ljmp
sbb
add
fsubrl
in
mov
pop
dec
xor
sbb
lahf
xor
sub
add
mov
mov
add
js
imulb
lcall
test
aaa
insl
sahf
hlt
inc
fs
inc
cli
mov
test
add
lds
add
push
or
out
mov
xlat
sbb
rorb
add
call
add
add
add
sbb
pop
pop
loop
fldl
add
add
sti
js
aam
add
pop
addr16
add
dec
push
lcall
add
cmpl
and
add
push
cmp
cwtl
xchg
dec
cwtl
dec
inc
mov
add
mov
lods
add
lcall
call
mov
add
jle
pop
add
add
pop
cli
mov
bnd
add
xlat
jae
add
ljmp
test
cwtl
cwtl
pop
mov
mov
add
add
inc
mov
inc
sbb
inc
mov
add
hlt
xor
or
pop
fadds
add
neg
jne
ljmp
add
lcall
and
hlt
push
in
in
outsb
movq
dec
mov
add
add
or
add
repz
jbe
data16
xor
addb
fisubrs
mov
cmp
inc
fmull
decb
rolb
push
push
test
add
add
mov
dec
in
lock
add
push
cmp
fwait
add
loopne
xchg
add
nop
cmp
sub
add
lcall
data16
xlat
cltd
mov
add
jp
pandn
sbb
pop
in
fldcw
add
mov
push
sti
add
add
cmp
mov
add
ret
mov
cmp
fidivl
mov
add
mov
xor
stc
lret
sbb
aam
mov
add
loop
addb
adc
jns
pop
cmc
adc
add
sub
jnp
mov
add
aam
push
aad
sahf
sbb
mov
add
andl
movb
add
sarl
fistps
add
nop
loopne
jmp
add
add
xor
add
mov
aam
dec
dec
jnp
bound
jmp
pminsw
addb
pop
out
lods
xchg
add
add
pop
add
add
inc
in
or
add
mov
mov
add
mov
scas
add
inc
loopne
pop
mov
je
add
xlat
adc
mov
mov
add
mov
add
lock
xchg
xchg
mov
pop
xor
cli
mov
add
add
out
dec
popa
das
movsb
add
stc
lds
inc
divb
jge
leave
imul
add
jl
add
xrelease
add
xchg
mov
pop
fcomps
jne
or
sub
and
jne
cmp
push
pop
xor
mov
add
cmpsl
cltd
shll
add
and
add
sub
add
stos
add
cwtl
subl
aaa
pcmpeqb
mov
mov
add
ja
xchg
fwait
push
add
mov
add
adc
adc
rol
lods
add
add
add
aaa
xor
mov
call
jae
add
add
xor
fcmove
lret
cmp
adc
fisubs
fnstsw
add
xchg
add
fs
cli
sbb
repnz
add
sbb
pushf
flds
mov
cmc
mov
add
test
add
lods
stos
add
daa
push
sub
or
xor
add
loope
add
movsb
add
daa
mov
arpl
add
add
rclb
lea
sub
mov
fldcw
addr16
jnp
add
push
sahf
test
pusha
xor
mov
add
addb
cmp
ret
add
and
and
insl
aas
cmc
xchg
and
add
adc
pop
xchg
or
add
daa
shr
dec
and
add
push
das
sub
add
xorl
add
and
add
je
add
and
jp
xlat
imulb
add
into
outsb
lret
add
push
faddp
mov
inc
pop
add
push
adc
lcall
add
dec
lods
add
fists
add
arpl
add
add
iret
pop
iret
push
fiadds
shll
add
xlat
cmp
cli
mov
aad
inc
out
outsb
call
jp
lock
mov
push
add
jo
add
ret
add
lds
idivb
mov
add
fstpt
add
jge
outsb
inc
stos
lock
pop
sarl
jmp
fdivr
or
push
add
imul
inc
aaa
cmp
add
or
add
push
adc
mov
cmc
sub
mov
xchg
inc
aaa
pop
and
add
call
add
shrb
das
dec
cmp
ret
xchg
fcoms
add
adc
cmp
add
roll
imul
add
push
data16
add
ficoms
adc
ret
cmpsb
add
adc
add
test
sbb
mov
pop
xor
pop
arpl
movsl
inc
stc
mov
je
push
add
inc
mov
add
push
cmp
fsubrs
add
fst
pop
jl
push
int3
dec
std
out
sub
aas
jns
pop
cwtl
bound
xor
scas
add
xchg
jg
add
jle
push
push
movl
xchg
jl
insb
sub
mov
in
test
add
fcmovbe
pusha
inc
insl
jbe
cmp
call
add
hlt
test
push
lret
add
or
jbe
cltd
int
dec
dec
pusha
out
nop
dec
add
push
add
push
pop
scas
and
add
jmp
push
add
inc
mov
add
cmpsl
jge
add
add
mov
add
scas
leave
cmp
add
add
add
idivb
mov
add
test
add
lret
rorb
loope
inc
sub
pusha
mov
ss
into
sbb
and
aam
pop
push
shll
insb
enter
add
add
mov
ljmp
or
add
arpl
bnd
add
pop
jb
pop
jl
mov
add
pop
scas
add
cmp
mov
mov
jbe
add
pop
add
add
fistpll
add
int
std
test
and
add
add
or
add
cmp
jns
imul
scas
movups
hlt
push
int
add
stos
lcall
add
xchg
sbb
icebp
loopne
xchg
hlt
lods
add
insb
mov
add
add
add
popf
jns
pop
dec
mov
xor
orl
mov
stos
sbb
lods
add
fsubrs
sub
add
add
test
add
add
mov
icebp
inc
mov
add
pop
inc
push
test
add
push
push
add
push
inc
push
push
add
or
lahf
push
sbb
jne
pop
xorl
iret
cmp
jp
sbb
cld
jo
bound
lahf
cmp
push
cmp
push
jne
inc
sub
addb
sarb
xchg
add
shrl
shrb
push
lcall
ljmp
pusha
cli
lret
test
add
push
loop
insb
sub
add
add
pop
lea
add
out
inc
mov
sub
add
mov
jbe
cmpsb
add
lea
shr
pop
cmpl
add
out
add
or
dec
imul
fcoms
lods
test
add
pop
gs
push
add
pop
js
add
lods
add
mov
cltd
aad
mov
add
jg
mov
mov
mov
outsb
gs
pusha
ret
pop
add
add
add
add
add
add
push
xlat
dec
loopne
aad
pop
negl
out
insb
cmp
test
pop
loope
inc
mov
daa
mov
sti
loopne
mov
arpl
jmp
add
aam
xor
cmp
cmp
add
add
push
repz
add
or
add
and
add
add
hlt
and
add
add
lea
add
inc
ror
notb
in
lcall
push
sahf
xchg
xchg
add
cmpsb
add
push
outsb
lahf
adc
sub
add
fwait
add
rclb
out
dec
mov
jb
sbb
in
push
add
xchg
out
lcall
sbb
and
add
ret
or
dec
jo
iret
pop
pop
cld
sti
push
negl
mov
aaa
inc
out
cmpsb
add
aas
xchg
sbb
dec
neg
and
mov
add
jg
adc
sub
add
mov
rcll
cwtl
xor
nop
add
add
icebp
or
add
or
add
rcll
add
pop
jno
add
add
inc
fists
lds
add
mov
add
jo
jg
dec
jae
push
faddl
adc
cmc
shl
ds
push
cmp
add
lods
daa
js
rorb
add
xor
mov
add
test
add
inc
or
jecxz
sbb
add
test
add
loopne
or
push
add
jnp
jne
add
jecxz
inc
mov
cmc
cmpsl
cmpsl
test
dec
sub
push
xlat
jo
scas
jecxz
ret
inc
mov
add
lret
inc
pop
rcll
and
add
stc
pop
test
add
push
jae
dec
pop
push
mov
iret
add
in
repz
rcrb
or
add
add
lods
add
add
jecxz
outsb
add
push
fsts
sbb
ret
ffreep
adc
inc
dec
and
add
mov
rcr
stos
add
cwtl
jp
aaa
sarl
push
sub
add
lods
xor
pop
ljmp
jge
int3
or
add
jo
or
add
inc
ljmp
dec
sbb
sub
add
xchg
add
add
jmp
add
dec
xchg
mov
das
dec
sbb
and
sbb
jecxz
movsl
std
repnz
push
rorb
add
aaa
pushf
negb
dec
enter
sub
add
mov
add
push
mov
add
add
mov
mov
mov
add
jmp
cmp
push
jge
fnstsw
mov
mov
std
in
pop
cmpsl
cmp
add
pop
mov
or
and
call
call
add
in
xchg
mov
pop
je
mov
into
stos
sub
hlt
sahf
xchg
jge
xchg
xchg
addr16
movsl
addb
fwait
stos
scas
jb
shl
sub
add
push
add
dec
sbb
outsl
loop
xchg
imul
cmpsb
add
mov
push
inc
dec
inc
xchg
pop
adc
add
pop
idivb
roll
out
jnp
notb
int3
or
add
add
data16
or
mov
imul
sbb
mov
hlt
les
sahf
mov
ret
xor
sahf
sub
outsb
rep
jmp
or
add
jl
push
pop
mov
add
xchg
add
outsl
inc
dec
int
insb
clc
pop
pusha
sbb
pop
xlat
add
int
lods
pop
decl
xor
add
ds
into
push
add
scas
add
rol
and
xchg
sbb
cmpsl
and
sub
add
push
fsts
xchg
add
sub
lods
add
jge
ss
dec
outsb
sub
add
call
or
jecxz
lahf
mov
or
add
sarb
pop
xchg
xlat
mov
add
add
push
sbb
bound
movsl
jmp
sub
add
insb
or
add
add
repnz
pop
mov
add
icebp
push
addb
bound
jmp
addb
add
movsb
add
xchg
mov
mov
adc
cmp
imul
out
cmc
incl
hlt
dec
fidivs
jge
addb
sbb
sar
add
push
pusha
push
cmp
pusha
nop
and
test
add
xchg
add
imul
lds
jmp
xor
mov
add
add
dec
xchg
jle
xchg
les
dec
dec
int
pop
aas
incb
push
movsl
test
xlat
bound
add
add
repnz
lret
mov
add
add
fwait
and
add
stos
mov
add
inc
data16
fists
mov
add
fistl
inc
leave
cmp
cmp
add
enter
ficoml
adc
bound
xor
fdivrs
add
pusha
push
xchg
cmp
adc
cmpl
mov
add
inc
cmp
dec
test
mov
enter
push
jle
test
push
pop
lods
std
cltd
cwtl
je
les
outsb
aas
sub
add
xchg
fcomi
sub
mov
inc
cmp
ss
sub
mov
xchg
cmp
dec
jg
rcll
outsl
call
aad
push
mov
or
add
mov
mov
add
and
pop
lret
out
sbbl
add
repnz
stc
adc
xchg
mov
jmp
fs
push
add
add
add
xor
mov
add
add
sub
insb
lcall
dec
pop
lahf
stos
add
add
add
cmc
nop
cmp
adc
outsl
mov
add
je
add
xchg
test
add
je
or
add
xlat
pop
daa
sti
fisubrl
add
jbe
neg
dec
fcoms
add
xor
add
addb
fsubp
pushf
push
add
sub
add
ret
mov
scas
pusha
iret
push
repz
mov
pop
rclb
fidivl
cmpsw
sub
add
pop
jg
pop
test
push
insb
clc
adc
iret
in
pop
imul
rcrl
out
mov
add
mov
add
bound
add
scas
add
test
add
cmp
pushf
mov
add
sti
shlb
mov
xchg
add
lcall
repnz
icebp
push
cld
test
add
adc
dec
in
push
add
or
popf
sbb
nop
stos
add
adc
add
push
pop
xlat
adc
mov
cmp
add
add
test
mov
add
stc
stc
or
add
pop
jle
fcmovbe
mov
add
add
mov
add
nop
fwait
fs
sbb
adc
and
add
mov
call
out
push
add
out
out
stos
add
push
jmp
adc
mov
add
push
add
dec
xchg
pop
rorl
add
jmp
lcall
add
cmp
add
xchg
int
repz
add
insl
inc
or
add
fistpll
pop
sub
add
sti
pushf
push
add
add
testl
add
jmp
in
and
add
adc
inc
hlt
pop
mov
addr16
pop
add
addr16
out
mov
jecxz
mov
pop
ja
jge
add
mov
mov
aam
adc
mov
leave
incb
add
scas
in
scas
iret
mov
cli
filds
push
add
jle
mov
push
je
inc
mov
xlat
adc
add
mov
cmp
add
add
jge
fimuls
nop
adc
ret
inc
xor
lods
mov
or
adc
addb
cltd
mov
add
cmp
add
mov
add
mov
dec
sarl
sbb
frstor
add
int3
mov
cmp
sbb
sub
add
xchg
pop
push
aaa
scas
add
pop
fldcw
add
pushf
shrb
add
sub
add
add
sbb
inc
arpl
sub
add
adc
add
leave
push
jl
ljmp
rorb
xchg
cmp
call
out
xlat
push
popf
inc
stc
fcmove
das
mov
out
nop
mov
lods
push
aas
push
add
push
clc
iret
cmp
cld
jge
push
add
push
jle
add
or
or
add
mov
adc
lods
add
mov
mov
dec
bnd
test
adc
add
sub
add
roll
lods
sub
adc
iret
pop
shlb
add
cmc
cwtl
ret
add
xor
cmc
add
sbb
lds
xchg
add
int
aas
jmp
stc
push
fldt
pop
jbe
dec
fcomip
pusha
out
sub
movsl
ljmp
add
cltd
jae
out
add
stos
data16
xorl
add
inc
mov
inc
mov
add
sub
sbb
mov
or
add
push
add
repz
add
add
xchg
cmpsb
add
mov
fwait
jecxz
jmp
add
or
stc
fwait
cmp
or
xchg
dec
dec
cmc
inc
push
std
movl
sbb
and
addb
dec
jo
add
nop
aam
ljmp
add
xchg
pop
int
mov
jns
aam
out
jle
into
cmp
mov
ja
cmp
fistl
sub
add
adc
enter
shl
or
add
mov
pop
xor
shr
add
mov
mov
add
cmp
sub
add
call
add
inc
loopne
stc
add
mov
add
fxsave
add
aas
or
add
xlat
mov
add
subl
mov
dec
or
ljmp
leave
adc
loope
test
xor
aad
xlat
repnz
fs
lahf
ret
inc
rcrb
jns
sbb
add
fucomip
jmp
aad
mov
in
add
jne
lds
cmp
add
lret
jmp
test
mov
imul
out
dec
das
fs
sub
add
ljmp
int
adc
dec
mov
mov
sbb
fdivrl
fcmovnu
ja
arpl
jl
mov
xchg
push
lock
add
aad
push
mov
add
push
bound
xchg
mov
mov
popf
mov
push
dec
adc
cmp
call
add
push
aaa
out
clc
jbe
idiv
inc
xor
lea
sbb
and
add
xchg
add
add
xchg
inc
ret
push
add
xchg
dec
fwait
ds
or
out
cltd
into
iret
das
scas
add
cmp
leave
ret
fs
out
sub
outsl
in
cld
pop
fcmovnb
hlt
mov
mov
ror
out
cmp
push
add
insb
cmp
or
add
mov
and
add
adc
inc
mov
mov
push
push
mov
add
fidivrs
xchg
out
je
add
pop
inc
pop
sbb
mov
insl
out
fstl
insb
addb
pop
xor
out
cmpsl
cmpsl
cmp
mov
xchg
push
mov
add
fisubs
add
scas
dec
cmc
rep
add
out
sub
sbb
xorl
add
mov
add
cmp
inc
imul
xor
shrl
cli
or
sub
arpl
sbb
add
jg
call
dec
das
sub
outsb
fisubs
add
or
xor
add
aad
add
push
fisttpl
cmp
hlt
xor
pop
addr16
mov
add
push
add
pop
and
sub
mov
add
imul
add
dec
jmp
dec
addl
jmp
pushw
add
in
lods
add
int
sub
das
mov
add
push
jo
shlb
enter
add
and
clc
push
les
add
sbb
add
mov
mov
add
add
add
js
pushf
sbb
mov
mov
inc
and
add
mov
add
mov
out
aam
and
rcll
out
repnz
add
enter
add
test
rcrl
sbb
in
rcr
dec
mov
jne
imul
pop
xor
push
pop
das
scas
lods
add
lock
add
sbb
jmp
stc
sub
add
add
and
and
add
cli
jmp
outsb
ret
add
add
mov
add
pop
arpl
add
cmp
insb
mov
add
push
add
add
rcll
add
jbe
dec
dec
arpl
push
adc
or
adc
adc
dec
movsb
add
test
testl
mov
stos
movl
sahf
cwtl
cwtl
dec
out
xchg
insb
jns
in
shl
add
ja
fwait
mov
inc
ds
mov
add
rcrb
add
add
or
icebp
rolb
scas
add
cmp
jmp
push
cli
xor
add
sti
pushf
gs
pushf
dec
sub
add
movsl
inc
push
call
pop
mov
or
add
popf
mov
cmp
or
add
xchg
mov
jo
nop
cmc
stc
pop
or
add
into
lcall
test
add
pop
sahf
shlb
inc
lret
cmp
add
push
push
xchg
pop
mov
add
outsb
cmp
adc
sbb
add
inc
jb
xchg
call
pop
scas
add
stos
add
or
add
mov
add
sub
add
add
mov
aaa
jne
mov
mov
add
mov
scas
add
sbb
jge
push
add
xor
jnp
jp
add
stos
add
xor
cmc
pop
cmpsl
sbb
in
aaa
test
add
movsb
add
inc
cmp
in
sub
pop
cmc
arpl
add
negb
addb
scas
add
gs
inc
enter
add
add
inc
lret
mov
fsubr
mov
mov
lret
add
add
in
and
add
sub
into
stos
addb
xor
add
mov
and
jae
or
cmc
add
add
xor
dec
jmp
inc
dec
jmp
ficoml
mov
lods
add
xchg
add
in
lds
add
call
shll
add
loope
inc
pop
enter
inc
pop
std
mov
add
pop
mov
shrl
mov
add
or
cmpsb
add
cltd
jae
xchg
mov
add
add
xor
add
add
inc
outsb
pop
lds
addr16
fcmovnbe
cmp
add
add
inc
adc
add
loop
add
or
dec
fstl
add
cmpsb
add
cltd
adc
leave
fistpll
das
inc
mov
cmp
jno
pop
jp
sub
adc
add
add
pop
and
lret
fistpl
pushl
or
add
push
jne
cmpsl
test
add
jne
aaa
cmpsb
add
inc
inc
cmp
scas
add
xchg
add
pusha
data16
pushl
adc
cmp
aam
popf
nop
addr16
and
bound
lods
add
insb
mov
out
into
js
scas
icebp
testb
add
add
pop
mov
add
push
add
jae
jmp
add
das
mov
jecxz
fsts
push
mov
fsubrs
cmp
dec
xor
add
add
mov
add
add
jno
bnd
mov
shlb
pop
cmpsb
add
out
xchg
scas
inc
cwtl
repz
inc
in
daa
lret
out
xor
add
cmpsb
add
shrb
scas
add
dec
jbe
pusha
repnz
jmp
add
das
dec
shlb
add
add
and
add
add
add
mov
add
inc
aaa
or
or
add
cmp
lret
or
add
add
pop
test
add
cmp
fistpll
orl
int3
ret
xor
add
xor
mov
in
inc
jb
push
add
push
in
mov
push
pop
sar
or
add
add
jmp
fadds
add
pop
out
add
jl
pop
jns
mov
and
add
or
mov
mov
repnz
mov
add
mov
add
or
cvttps2pi
add
cmc
or
add
das
mov
add
clc
jae
pop
negl
mov
xchg
dec
imul
insb
sbb
jl
inc
inc
cwtl
ds
adc
aas
dec
lcall
mov
push
adc
inc
mov
int3
add
out
add
call
add
pop
cmpsl
mov
jnp
out
stc
ss
filds
add
in
test
add
mov
aam
and
in
sarb
sub
add
pop
mov
jb
push
xchg
add
add
sahf
pop
movsb
add
and
add
in
mov
jp
imul
jno
add
push
or
add
cmp
int3
add
xchg
mov
add
out
out
scas
add
pop
push
sbb
inc
rcl
mov
jae
outsl
mov
shl
gs
xorl
mov
jecxz
mov
xor
inc
aam
xor
xchg
sarb
nop
enter
cmpl
add
pusha
fcmovb
mov
mov
lret
ss
add
xchg
add
popa
sub
add
or
add
add
inc
scas
add
jmp
and
cmpl
mov
pop
mov
shrl
lds
adc
add
out
jg
jo
into
pop
mov
test
add
cmp
fs
pop
mov
leave
shr
xor
add
ret
push
add
add
mov
xlat
add
mov
add
jnp
clc
add
sub
mov
ret
jne
or
add
adc
push
add
jp
fisttpll
add
jmp
jmp
sbb
add
stos
pop
test
scas
dec
int3
or
orl
push
inc
mov
add
sbb
or
add
scas
cmp
mov
imul
fidivrs
cmp
and
add
mov
loopne
movsb
add
xorl
push
iret
push
jne
dec
icebp
in
into
clc
std
loop
xchg
orl
adc
add
pop
cld
int3
imul
add
jp
cmp
orl
add
fsubrs
add
add
push
sub
add
dec
pop
xor
mov
add
rcl
mov
fsincos
and
icebp
dec
or
add
xchg
dec
sub
add
add
pop
push
lret
sbb
add
push
add
lds
ljmp
add
mov
ja
mov
add
dec
add
add
or
pop
xchg
aaa
cmc
andl
scas
add
out
xor
rsm
add
lock
add
pop
andl
ja
lds
dec
frstor
test
add
lods
add
xchg
rcrl
fstpt
ljmp
divb
cmp
jb
sub
add
xor
push
add
pop
cld
lea
fisttps
pop
addb
bound
pusha
dec
xor
xchg
shrb
sbb
inc
and
add
and
add
lods
add
ds
push
inc
clc
add
add
cmpsb
add
sub
add
add
cmp
popf
pop
or
pop
push
add
jo
push
xor
xchg
loope
add
addb
adc
inc
int3
shll
pop
jl
out
pop
sahf
add
add
je
adc
xchg
out
cmp
sti
xor
sbb
xor
jne
sarb
test
pop
imul
and
jne
pop
push
stos
mov
mov
insb
out
add
dec
pop
cmpsb
add
insl
sbb
jo
pop
in
outsl
arpl
movsl
or
add
aas
loop
pop
sub
add
rol
rorb
repnz
scas
add
inc
add
xor
mov
sub
add
and
out
push
mov
add
vhsubps
outsb
loop
add
jbe
pop
out
xchg
call
mov
div
push
jmp
pop
insl
lahf
add
add
add
int
negw
pop
sub
add
add
mov
cmc
pusha
mov
inc
iret
jb
scas
add
inc
decl
clc
cmp
adc
jg
jecxz
aas
lret
pop
cmp
mov
push
xchg
sarl
cmpsb
add
loope
aam
inc
nop
adc
dec
and
mov
pusha
fs
jb
dec
je
bound
cmpsb
add
push
push
xchg
sbb
pop
fwait
push
push
pop
mov
jae
add
pop
out
jae
add
xchg
call
add
ja
scas
outsl
xchg
inc
ss
ljmp
dec
pop
jb
lcall
cmp
cmp
daa
jns
pop
fidivs
dec
lods
push
add
cmpsl
addb
add
add
add
out
jge
or
inc
mov
xchg
fs
mov
add
add
sub
push
rcrb
add
dec
les
popa
xchg
add
shrb
or
add
xor
movsl
mov
add
inc
sub
add
out
jg
add
mov
jmp
add
cmp
arpl
adc
movsb
add
mov
add
dec
scas
add
loope
addr16
add
mov
push
insb
mov
add
add
add
cmp
xor
fs
add
xchg
loop
add
or
add
fistl
add
add
xchg
add
sbb
push
add
push
add
push
and
aad
into
lods
out
lret
cmp
in
add
pushf
sub
add
cmpsl
mov
int3
push
rorl
and
add
dec
in
push
jg
lock
fbld
pop
mov
cmp
inc
rcll
das
ja
insl
push
inc
xchg
pushf
cmp
mov
fidivrs
dec
pop
pusha
fildll
add
cld
test
add
cwtl
jecxz
lea
jmp
ss
test
add
adc
je
jno
jbe
lods
mov
mov
push
mov
lods
add
int3
pop
sti
xorl
mov
lahf
fimull
xchg
inc
adc
lea
enter
rorb
add
loopne
xchg
jnp
mov
add
inc
xchg
mov
into
xchg
sbb
shll
jmp
nop
lcall
sbb
jnp
bound
rclb
add
push
and
inc
shrb
add
loop
dec
int3
and
add
and
add
popa
jb
rorl
add
popa
popa
xor
pop
std
fisttpll
aad
mov
lods
add
add
mov
lods
add
aaa
aam
lds
out
push
cmp
add
dec
adc
add
out
call
dec
movsl
call
xor
fistl
mov
jge
add
loopne
push
push
fldt
add
mov
add
add
add
mov
add
xchg
testl
or
add
pop
xor
add
dec
cwtl
push
mov
insl
sub
sub
add
stos
add
pop
out
test
add
fcompl
out
faddp
dec
jecxz
cltd
sub
add
mov
pop
mov
dec
xor
cmp
cltd
test
add
push
add
inc
fcmove
stos
add
decb
mov
add
addb
mov
pop
dec
dec
imul
add
sbb
mov
test
and
sbb
push
jbe
xor
mov
cwtl
sti
fsts
inc
add
mov
shll
push
sub
add
add
stc
inc
add
fistps
xchg
shrd
add
mov
add
test
mov
sub
dec
adc
jo
xor
pop
adc
push
fidivrs
mov
adc
das
xchg
push
lret
cmp
add
add
out
ret
repnz
stc
inc
fdivl
lahf
outsb
xchg
add
fnstcw
sahf
lea
dec
in
and
sub
add
mov
dec
jl
test
incl
add
adc
add
xor
ficoms
mov
sbb
xchg
sbb
enter
mov
dec
mov
fwait
jmp
mul
mov
add
addr16
push
icebp
xor
pop
pusha
push
xchg
cwtl
xchg
add
add
fdivs
add
ret
fidivl
xor
in
aaa
js
ret
push
icebp
insl
and
outsb
lret
mov
mov
push
xchg
sbb
idivb
pop
aam
add
mov
add
push
int3
hlt
insb
push
or
or
mov
push
mov
add
test
add
add
loop
std
pcmpgtw
add
ja
rol
add
addb
xlat
ss
arpl
adc
ret
xchg
mov
lret
test
sbb
mov
clc
repnz
mov
add
inc
inc
push
mov
add
push
iret
cmp
adc
imul
add
add
dec
adc
arpl
add
xchg
mov
or
mov
add
xchg
addb
push
xor
add
sbb
nop
xchg
gs
sbb
cmp
jecxz
xor
loope
add
sarb
jle
add
test
add
scas
jo
jbe
jns
orl
pop
add
add
add
repz
cli
mov
add
popf
out
int
xor
pop
loop
mov
xor
mov
dec
fadds
add
push
into
insb
sbb
int
cltd
das
mov
add
or
sbb
bsf
xchg
add
add
xor
add
lock
mov
add
push
inc
sarb
sub
add
add
addb
sti
loope
mov
adc
fisttps
add
pusha
mov
xor
add
sarl
arpl
mov
add
or
les
jns
xchg
jl
xchg
movsb
add
lret
mov
mov
in
inc
xor
and
add
jo
add
adc
loopne
pop
sbb
jnp
mov
or
add
add
adc
inc
add
je
add
pop
lret
cmp
push
pop
pop
insb
sub
add
xchg
sbb
jle
add
inc
dec
xor
dec
xchg
sbb
scas
fdivl
mov
add
mov
add
test
add
shl
or
mov
xchg
outsb
js
inc
in
inc
lea
into
xchg
cmpsb
add
ret
and
push
sub
add
push
and
enter
iret
sub
push
xchg
loop
bound
scas
add
ljmp
add
mov
inc
inc
push
add
add
sbb
popf
cli
pop
xchg
jp
xlat
pop
test
mov
mov
or
add
mov
pop
cmpsl
sbb
stos
adc
add
xor
add
scas
add
push
dec
pop
mov
insb
fldl
loope
xor
lret
lahf
pop
mov
add
mov
add
jns
sub
arpl
loope
jno
pop
out
sub
add
xchg
ljmp
mov
add
xor
dec
sbb
add
repnz
cmp
aad
mov
add
add
inc
lcall
pop
xor
mov
xchg
push
out
mov
test
ds
and
add
and
add
pushl
or
push
adc
mov
push
fsub
setnp
pop
xchg
and
mov
int
outsl
stos
sub
add
mov
inc
jecxz
inc
ds
add
gs
sahf
rcrb
cmp
and
add
or
add
push
xchg
push
jge
pop
push
call
addl
stos
add
dec
les
push
add
in
mov
loope
pop
js
sbb
daa
popa
dec
pandn
push
jns
push
jbe
mov
add
push
add
das
scas
mov
cld
or
add
xor
or
push
push
xor
or
add
je
add
adc
scas
add
inc
leave
insb
mov
sub
add
shl
jo
sub
add
add
add
mov
add
jg
sub
add
mov
cmp
inc
push
aas
insb
sbb
inc
repz
fmul
inc
stc
xor
sar
jg
dec
movl
add
add
add
sarl
gs
push
loopne
cmp
cltd
test
mov
sbb
aaa
loopne
mov
std
xchg
adc
ds
ja
aad
push
xor
cltd
aad
inc
cmpsb
add
push
and
movsl
jecxz
push
outsb
lcall
xchg
and
add
aam
add
mov
pop
in
mov
shl
adc
dec
xchg
dec
add
add
pusha
dec
jno
out
cwtl
and
ss
inc
out
mov
mov
push
add
ljmp
popa
sub
add
add
inc
push
adc
add
addb
push
sahf
pop
pop
sbb
add
add
push
push
and
add
leave
jnp
cmpsl
scas
add
cwtl
test
add
shlb
adc
adc
add
add
sbb
cmpsl
push
sbb
add
rcrb
add
addr16
cmp
add
lock
adc
sub
add
cmp
aaa
push
fisttpll
add
pop
sub
add
lea
mov
pop
fildl
add
das
cmp
in
lods
add
clc
rcrl
inc
push
push
sbb
call
pop
lods
add
mov
add
pop
outsl
sbb
xor
add
aad
bound
int
push
insl
add
int3
pushf
rolb
add
add
repnz
out
or
add
add
lds
lret
fwait
xchg
aad
les
cmp
sub
lock
aaa
push
mov
add
mov
add
inc
in
js
push
add
popa
sahf
lret
jo
add
out
addb
popa
xchg
shlb
or
add
sbb
add
int
mov
jns
add
fisttpl
mov
je
mov
icebp
inc
dec
dec
dec
pusha
lea
push
add
movl
add
dec
jae
mov
jl
fiadds
add
icebp
lret
sub
in
icebp
dec
fimull
push
add
jp
jg
xor
xchg
inc
test
add
insb
jo
dec
push
add
pop
hlt
jns
dec
sbb
roll
add
int
je
xchg
jo
fwait
loop
adc
xchg
add
push
into
sbb
shlb
add
lds
jp
adc
mov
add
or
in
filds
add
mov
pop
in
mov
add
repnz
jp
add
lret
ja
mov
push
or
add
add
lods
add
cmp
outsl
push
mov
sarb
pop
mov
add
jle
aas
mov
add
inc
xchg
mov
jb
add
add
fildl
add
scas
add
or
add
add
cmc
pop
sbb
or
add
out
push
dec
pop
inc
cmp
jne
les
mov
cmp
addb
push
pop
adc
mov
adc
add
out
inc
sub
add
mov
add
mov
add
add
pop
rol
inc
xchg
or
add
ret
add
xchg
ficoms
inc
mov
aaa
test
add
add
loope
hlt
pop
adc
les
adc
and
add
xor
cmp
inc
add
lret
xor
into
sbb
xchg
stc
pop
je
ret
sbbl
mov
add
add
mov
add
aaa
data16
add
imul
jbe
imul
add
pushf
loop
push
cmp
xor
and
stos
add
incb
imul
add
jl
jo
ja
clc
xchg
clc
xor
push
add
aas
sbb
sbb
mov
rcrb
add
mov
fs
or
cmp
mov
xor
js
inc
and
aaa
xchg
xchg
add
ds
add
mov
pop
mov
sarl
add
cwtl
dec
ret
out
mov
add
pop
mul
les
xchg
sbb
or
nop
bound
mov
lea
js
xor
push
in
mov
lcall
frstpm(287
xchg
int
test
add
jge
les
sahf
daa
cltd
cmpsl
add
add
fs
les
lds
loopne
add
cmp
add
add
sahf
xchg
add
push
shl
leave
out
push
cmp
int
popa
sti
mov
enter
pop
nop
xchg
or
ja
pushf
repnz
add
cmp
mov
jge
bound
mov
jle
add
mov
arpl
mov
pusha
dec
stc
push
add
add
cli
stc
int3
jge
cmpsl
mov
in
rorl
dec
outsb
sahf
incl
push
or
lret
dec
sub
add
std
inc
sub
add
adc
add
add
add
jae
addb
loopne
lcall
sahf
adc
xchg
or
add
xchg
mov
add
add
xchg
int
adc
add
jmp
and
add
add
sarb
ja
add
add
mov
jg
fadds
pop
pop
in
aad
loopne
push
xlat
jge
fidivrl
movsl
inc
jmp
mov
pushf
xor
push
or
cld
sbb
push
add
repnz
int
xor
fsubrp
fistps
and
add
int
icebp
std
add
loop
imul
add
loop
loop
xor
jb
xlat
sbb
xlat
pop
test
add
ds
and
sti
and
or
add
jo
add
mov
mov
add
mulb
mov
add
jg
jbe
out
pop
xor
pushf
cmp
inc
jbe
mov
add
das
pop
ret
aas
xchg
sub
addb
jp
mov
das
dec
cmc
mov
add
add
mov
add
icebp
jns
std
xor
lcall
ret
push
sub
add
ja
dec
push
fcomps
pop
pushl
negb
push
dec
ret
pop
leave
mov
fidivrl
or
add
in
rorb
mov
add
push
mov
pop
outsl
rcrl
add
pop
rorb
inc
and
add
pop
jmp
call
mov
hlt
pushf
cwtl
fs
cmpsl
add
add
call
jno
shlb
add
addr16
add
and
hlt
pop
cmc
in
push
sbb
pop
dec
int3
mov
mov
cmp
pop
dec
daa
jecxz
xor
aad
sbb
outsl
jle
jl
add
mov
add
inc
arpl
add
add
out
xor
imul
cmp
sbb
pop
pop
mov
inc
inc
dec
jecxz
jnp
cmp
repz
repz
inc
inc
lahf
xchg
pop
cmp
jb
fninit
jne
xchg
add
cmp
jle
inc
pop
pop
jg
sbb
add
outsb
mov
sub
adc
cmpsb
add
faddl
or
ja
add
insl
jp
in
outsl
xchg
jns
out
out
popa
pop
fisubl
mov
add
mov
add
outsl
leave
push
pop
mov
cmc
cmpsl
inc
mov
fnstenv
xchg
add
cmp
inc
sti
push
or
imul
add
add
adc
add
push
mov
add
add
lcall
pop
cmp
rcll
cmp
movl
out
les
clc
mov
add
aas
push
add
movsb
add
js
add
lds
mov
fldt
xor
lds
iret
in
mov
add
pop
je
pop
mov
add
dec
sahf
jl
add
icebp
in
xchg
sub
xor
scas
add
scas
nop
mov
add
hlt
nop
pop
ja
push
add
sbb
and
add
fisubrl
add
dec
enter
adc
pop
inc
or
mov
push
sbb
cmp
add
lahf
mov
fistl
xchg
cltd
dec
clc
not
in
mov
add
add
xor
jmp
sti
aam
test
add
inc
out
inc
jo
add
popa
lea
or
add
sbb
add
push
rcrl
jnp
das
leave
mov
addb
jns
in
int3
xor
test
add
loopne
cltd
repz
add
add
lods
add
push
pop
ficoml
jl
add
addb
roll
add
adc
lret
adc
cwtl
into
gs
push
and
add
add
loop
js
push
ja
pop
test
adc
mov
add
andl
stos
jl
out
imul
add
mov
xchg
inc
out
inc
mov
shrl
mov
cmpsl
sub
pop
sbb
add
add
xchg
addb
ss
add
sbb
mov
loopne
xchg
and
lds
out
mov
add
gs
fbstp
jge
imul
adc
movsl
inc
xchg
jmp
add
pop
xorl
scas
xchg
add
arpl
mov
cmp
dec
jl
mov
cmp
xor
push
sbb
fsubs
xchg
rcrl
cmp
aas
push
mov
add
adc
adc
jmp
add
mov
push
jge,pt
jbe
sbb
int3
jb
add
add
add
inc
xor
push
adc
and
xor
addr16
add
jl
jmp
and
add
js
add
add
add
gs
add
fiaddl
inc
dec
fadds
add
jp
movb
aam
add
add
js
xor
js
stos
lcall
out
xor
add
cmp
fdivrs
enter
out
add
add
cmp
add
icebp
test
add
inc
push
xor
fisttps
pop
cmp
ret
add
call
add
test
or
xor
and
cmp
ljmp
nop
jle
movsb
add
or
add
sbb
jmp
cltd
mov
pop
ds
add
add
xor
loope
add
add
pusha
mull
lods
sbb
xchg
jl
iret
test
add
pop
sub
flds
add
clc
xorl
into
std
dec
hlt
lods
popl
add
stos
add
xor
inc
fldenv
xchg
mov
addb
mov
add
sub
add
call
and
test
push
shlb
mov
nop
ret
test
shll
inc
movsb
add
push
push
int3
xchg
fisubrs
add
pop
mov
add
add
fdivp
add
test
add
sub
mov
rcl
adc
aaa
addb
or
pop
add
loopne
add
repz
int
add
outsl
or
add
jmp
sbb
add
mov
or
clc
sub
add
push
add
test
add
sub
addb
rcrl
add
add
push
mov
lret
mov
xor
int3
ja
jbe
jnp
lods
add
sbb
sti
pop
dec
mov
xor
into
sbb
scas
cmc
cmc
and
add
stos
add
lds
add
mov
mov
add
mov
dec
mov
add
add
mov
jnp
adc
dec
pop
cmp
cmp
movb
lret
repz
rorl
add
sbb
sbb
mov
add
repz
ret
add
add
addb
add
add
mov
add
sbb
andl
mov
mov
test
add
fisubs
mov
addb
xchg
add
add
mov
add
das
inc
lds
add
mov
adcl
pop
in
adc
xchg
add
add
add
add
repnz
add
add
sbb
lods
xor
fwait
insb
and
in
add
jbe
inc
cmp
and
add
das
jne
cld
fcomps
add
add
sbb
add
push
arpl
outsb
sarb
mov
jo
jmp
add
rorl
sbb
add
addb
std
sbbl
xchg
add
insl
hlt
xchg
add
cld
adc
stos
add
mov
add
add
shll
xchg
and
add
lods
pop
xor
lcall
in
fbstp
sbb
inc
mov
push
leave
hlt
or
add
mov
clc
gs
pop
xchg
pop
inc
cmpsl
and
mov
dec
push
add
mov
bound
cli
inc
sbb
jp
pop
outsl
bound
mov
sbb
xchg
loopne
add
lods
pop
cld
stc
addb
mov
add
ss
pusha
mov
add
jmp
or
add
push
scas
add
fistl
shlb
add
fstpt
fucomp
clc
pop
and
sbb
insl
cmp
lahf
adc
fildl
add
dec
mov
inc
wrmsr
sub
add
xor
lahf
sahf
add
push
popa
mov
add
cmp
imul
xchg
cmp
fiaddl
add
add
out
push
mov
fstpt
push
in
adc
add
xchg
movsb
add
jbe
ret
movsb
add
sbbl
xchg
mov
sti
leave
bnd
fnsave
push
nop
mov
daa
jl
mov
cld
add
add
pop
in
cmp
call
add
jecxz
and
add
push
sbb
pushf
cmpsl
adc
int3
add
dec
or
jmp
loop
add
dec
mov
add
movsl
repnz
add
gs
movsl
push
add
push
adc
push
dec
insb
push
and
xchg
sub
popa
jp
jle
xor
fwait
pop
loopne
xchg
addb
cmp
jno
sbb
das
xchg
add
aad
add
add
cmpsl
adc
add
xchg
mov
add
add
and
add
std
call
and
adc
add
xchg
xor
popa
cli
jb
add
mov
call
mov
ljmp
add
push
add
inc
in
jne
jle
xor
mov
rclb
sub
add
mov
add
into
sub
add
xchg
imul
add
sub
add
loopne
sti
stc
cltd
cli
sahf
sbb
dec
stc
das
shlb
cmp
cmp
sbb
sub
add
mov
xor
addb
and
fcoms
repnz
add
xchg
mov
ja
inc
and
add
aaa
sub
add
pop
repnz
sahf
sbb
sbb
add
jle
pop
das
sahf
mov
add
aad
jmp
sti
pop
lock
insl
or
pop
popf
jne
inc
fimull
enter
mov
add
jge
push
add
xor
mov
jl
add
ljmp
push
add
clc
dec
data16
inc
jp
add
mov
add
pop
js
fwait
mov
add
cmp
xchg
fs
scas
add
sbb
addb
lods
add
rcr
mov
sbb
stos
add
pop
aaa
push
add
push
add
out
xchg
bound
add
add
mov
add
rcrl
add
outsb
outsb
mov
scas
add
jne
add
addb
xchg
push
xchg
insl
fwait
enter
xchg
xor
lods
add
cmp
in
or
add
add
addb
pop
pop
lods
add
xor
rep
add
mov
add
xchg
xor
mov
push
xchg
push
add
jne
xlat
and
add
dec
pop
lahf
mov
ljmp
lcall
testb
jle
push
xchg
hlt
addb
sub
add
inc
loopne
add
outsb
cmp
or
mov
lcall
je
cwtl
inc
sbb
cmc
cmpsl
pop
iret
dec
arpl
pop
insl
xchg
pop
xchg
gs
ljmp
jmp
add
outsb
inc
inc
icebp
and
add
test
add
cmp
imul
add
hlt
push
add
rcr
mov
add
add
nop
sbb
into
adc
mov
add
add
imul
add
imul
add
add
fsubl
sbb
leave
lock
sbb
add
add
adc
addb
jmp
sti
test
add
add
mov
cmp
aas
popa
mov
repnz
add
add
push
mov
lods
mov
imul
sbb
test
pop
fdivs
add
ja
adc
add
divb
ret
and
add
push
pusha
mov
popa
popl
add
cld
xor
iret
in
mov
jmp
cmp
cmpsl
outsl
jle
and
add
cmp
add
lods
cmp
arpl
mov
add
mov
or
add
and
cwtl
push
xor
and
add
outsl
loop
xchg
pop
inc
popa
rolb
add
flds
add
or
push
add
inc
arpl
pushf
dec
mov
add
mov
sbb
stos
sub
pop
ficompl
add
xor
adc
sub
rcll
pop
pop
push
clc
imul
add
add
pop
cwtl
jne
add
or
add
clc
inc
scas
add
mov
xchg
mov
repnz
pop
aad
jle
stc
sbb
lea
jnp
ljmp
mov
ss
insl
push
lret
iret
fwait
xchg
sbb
push
add
add
inc
enter
cmc
push
ret
pushf
xlat
icebp
mov
rorb
add
mov
xchg
shlb
add
push
pop
sbb
add
add
fs
add
xchg
pushf
sub
add
add
test
dec
pop
pop
test
add
add
pusha
seto
and
add
add
sub
sarb
in
or
add
fcoms
cltd
out
movsb
add
std
stc
pop
add
push
pop
ja
gs
out
xor
mov
add
test
pusha
inc
cld
sbb
popa
loop
pop
loopne
xchg
je
std
mov
sbbl
iret
or
add
testb
pop
outsl
dec
add
mov
js
mov
push
and
add
addr16
push
add
push
adc
push
inc
mov
iret
div
shlb
lds
xorl
test
ret
stos
shlb
mov
add
xor
loopew
xor
add
xchg
add
rorl
jecxz
inc
push
in
lcall
add
add
pop
loop
cmpsb
add
std
add
mov
add
push
popa
sbb
daa
cmp
adc
out
fs
xchg
sbb
jno
ds
clc
popl
in
xchg
add
cmp
mov
mov
pop
dec
dec
xchg
test
add
add
mov
adc
add
xchg
pop
mov
add
add
fstpl
imul
adc
out
push
pop
out
cmp
addb
ficompl
xchg
out
sbb
sahf
mov
popf
or
add
and
adc
jl
mov
add
adc
add
lods
dec
sahf
std
cmpsl
mov
lds
inc
pop
pushf
and
or
sbb
add
jmp
xorl
ss
add
or
add
lahf
inc
dec
add
add
add
int3
jl
add
fwait
sbb
fwait
js
jp
out
and
add
add
notb
in
xor
sbbl
dec
pop
rorl
loop
or
add
add
fs
in
sbbl
xor
fbstp
mov
test
mov
bound
in
fadd
jg
or
add
inc
stc
lahf
mov
add
add
sub
add
ja
add
out
cmp
pop
scas
add
add
imulb
add
xor
push
xor
xor
add
int3
xor
pusha
add
add
add
mov
add
sbb
clc
mov
add
mov
xchg
fidivs
cmp
mov
add
shll
jb
daa
mov
lods
shr
add
jp
mov
das
add
add
pop
or
aam
add
mov
loopne
or
add
sarb
adc
insb
rclb
gs
add
mov
subl
movsl
insb
or
add
mov
add
out
shlb
and
js
mov
add
shrl
add
out
rcr
mov
ljmp
test
add
or
jnp
add
add
add
add
mov
lods
jne
in
notl
test
add
adc
add
jge
stos
pushfw
movsb
add
jb
cmp
out
sub
add
inc
repnz
daa
clc
mov
idivl
sbb
mov
sahf
pop
fists
and
add
sub
add
mov
jo
add
xchg
xchg
das
scas
add
std
cmp
sbb
data16
add
nop
adc
lods
add
fcmovnbe
rol
fistl
inc
clc
arpl
add
enter
add
std
outsl
clc
mov
stos
add
jb
push
out
int3
push
xor
and
test
mov
imul
js
xchg
inc
add
add
inc
mov
loop
mov
leave
scas
addr16
or
add
mov
add
add
dec
push
xchg
cmc
fcmovne
inc
test
add
xor
jb
mov
cmc
pushf
mov
inc
pushf
addb
push
xlat
adc
decb
scas
lret
push
mov
pop
push
mov
pop
les
add
or
sub
add
push
arpl
mov
add
add
incl
sbb
mov
sbb
lods
ljmp
or
add
hlt
add
shlb
ljmp
and
add
mov
inc
test
add
mov
push
cmp
push
add
ret
aam
sub
add
hlt
js
mov
add
jo
stc
sti
xor
stos
push
inc
sub
add
adc
cmp
mov
mov
add
jge
shlb
push
fnstenv
loopne
add
push
popa
dec
addb
sarb
push
in
dec
lock
add
scas
add
add
xchg
lock
cmc
scas
mov
sbb
enter
stc
das
stc
mov
ljmp
xlat
int3
aaa
js
movsl
fcomi
cmp
faddl
pop
and
ds
and
add
outsb
clc
lahf
pushf
push
js
popa
jbe
push
add
into
mov
mov
adc
push
in
add
mov
repz
dec
push
std
shlb
ja
lods
scas
push
adc
add
add
add
push
xchg
insl
cmp
out
scas
add
mov
repnz
add
push
inc
cmc
or
push
and
add
stc
in
ret
add
in
add
imul
cmovp
add
jae
aad
aam
add
jno
jnp
mov
add
and
les
push
adc
into
jge
mov
mov
add
outsb
stos
xchg
sti
frstor
in
add
loopne
mov
add
movsb
add
ret
imul
mov
add
jnp
mov
mov
add
jl
push
rorl
inc
push
ret
cmp
mov
ret
outsb
roll
dec
in
add
in
int
add
lock
int
pop
out
xchg
inc
jge
in
sub
jle
dec
lcall
gs
repnz
pop
adc
aas
lret
rorb
std
cltd
stos
in
push
mov
mov
mov
add
int3
or
scas
add
hlt
shr
jge
or
add
aaa
xor
add
cmp
add
out
fwait
mov
lret
inc
or
iret
mov
push
loope
add
mov
repnz
or
add
ret
sub
mov
add
adc
data16
adc
xlat
sub
add
inc
aam
add
sar
xor
hlt
dec
incl
out
or
jle
mov
sbb
fistpl
cmpsl
shrb
or
je
daa
adc
add
xor
cltd
dec
mov
adc
add
outsl
addl
cmp
imull
mov
add
sub
add
aas
dec
cwtl
jg
add
fs
xor
sbb
mov
imul
add
jns
jb
sub
add
or
mov
dec
movsb
add
add
add
xor
add
test
stos
add
cmc
cmp
dec
add
mov
mov
dec
ss
incb
add
mov
add
add
pop
push
xchg
fwait
shl
jecxz
add
leave
decb
pop
shlb
push
xlat
mov
outsl
jp
sbb
add
cmp
mov
sbb
sahf
or
push
sub
xchg
mov
add
adc
mov
sahf
add
sti
xor
add
add
shl
xchg
cmp
add
add
add
pop
out
add
repz
dec
shr
lods
fbstp
dec
push
add
outsb
lret
xchg
adc
dec
js
cmp
pop
pop
ds
sahf
fsub
inc
cmp
add
jp
cmp
inc
or
add
std
insb
xchg
cli
mov
mov
cmp
add
and
add
in
js
or
add
inc
scas
test
or
icebp
jb
pop
xor
sbb
jns
ret
aas
jl
pop
or
rcl
inc
std
push
jmp
addb
pop
inc
in
add
add
mov
xor
test
add
mov
movsl
push
add
mov
xor
sbb
add
popf
popa
in
aad
xor
lea
add
push
push
mov
icebp
imul
xchg
icebp
ret
sbb
outsb
pop
shrb
adc
add
mov
mov
cmpsl
jge
xor
cli
dec
mov
in
test
add
cwtl
add
jb
dec
and
add
add
cwtl
call
dec
call
out
push
dec
sub
bound
add
out
xlat
addb
adc
add
jb
pop
mov
clc
mov
push
xor
push
mov
cmp
add
lods
pop
lret
nop
ret
ret
adc
sahf
aas
addb
cltd
add
call
xor
xor
jl
add
sub
jmp
mov
add
lock
mov
add
fldt
add
add
lock
int
add
mov
add
cmp
lods
add
add
add
sbb
cmpsb
add
lcall
ss
mov
push
gs
push
lea
inc
pushf
aad
movl
add
cmp
test
scas
add
dec
enter
add
addb
in
add
addb
jg
and
lds
add
pop
inc
sbb
hlt
add
clc
fs
cmp
add
sbb
add
fdivl
scas
pop
cmp
inc
addb
ljmp
add
jge
add
mov
add
or
add
and
add
mov
cltd
popa
out
pusha
sub
pop
and
add
push
mov
jle
sbb
xchg
stc
xor
and
lea
add
adc
stc
in
mov
add
add
je
xor
notl
fldenv
add
mov
add
aaa
in
jle
fimull
sbb
xchg
add
xlat
sti
mov
add
pop
pop
or
test
add
and
inc
mov
mov
add
xchg
test
inc
sub
add
pop
jmp
and
pushf
jg
sub
add
jecxz
add
pop
mov
xchg
popa
and
add
add
ja
and
add
add
addb
fdiv
pop
jns
jp
add
push
data16
inc
cmp
add
dec
mov
xor
sub
add
add
cltd
pop
pop
jno
push
add
xchg
leave
sub
sbb
mov
add
cmp
push
gs
nop
int
add
mov
add
icebp
fs
insb
out
jl
push
jmp
mulb
add
add
aaa
push
jmp
and
add
add
add
jg
rcrl
lahf
sbb
add
push
jb
mov
sbb
shl
push
push
adc
add
jle
adc
xlat
xchg
mov
stos
add
aas
inc
inc
pop
mov
add
pop
stos
add
xlat
jbe
jge
into
jp
dec
inc
iret
pmulhw
add
mov
js
aaa
repz
pushf
inc
adc
jle
push
sub
add
shrl
add
xlat
js
into
fmulp
dec
adc
add
mov
adc
jle
mov
add
loop
pushf
jno
add
or
cmp
sub
add
add
insl
and
add
add
in
add
fbstp
inc
mov
mov
or
add
sbb
insb
into
pop
add
add
fadds
add
stc
test
imul
add
add
test
add
mov
jbe
mov
push
lods
out
rcll
sub
add
jg
add
in
cmp
subl
add
mov
add
add
push
xchg
cmc
mov
insb
mov
add
mov
les
fmuls
add
or
ret
sub
add
add
orl
test
add
add
ja
stos
andl
xchg
cmpsb
add
in
sub
add
ret
add
add
add
test
movsb
add
mov
push
mov
add
in
pop
pop
pushf
jno
dec
and
add
add
lret
xchg
sbb
inc
push
add
outsl
dec
mov
pop
mov
pushf
jnp
aad
ss
ret
jp
mov
cmc
mov
add
hlt
mov
add
add
push
jmp
mov
stc
repz
add
movsl
aaa
cmc
das
inc
dec
push
data16
out
pop
addr16
ret
daa
adc
movsb
add
dec
cmp
add
mov
fwait
or
add
xlat
xor
xchg
push
fdivl
cmpsb
add
jbe
and
add
cmpsl
xchg
stos
sub
add
add
addb
out
rcll
xor
push
incl
stc
out
mov
and
add
dec
xor
add
and
out
dec
push
add
imul
add
cmpsb
add
jmp
xchg
test
add
mov
scas
add
inc
cmp
mov
dec
mov
add
fbld
js
xlat
and
add
pop
out
mov
add
mov
add
rorb
mov
call
add
cli
mov
add
add
iret
adc
dec
cmp
add
cltd
in
sub
cmp
xor
addb
inc
mov
jne
cmp
lds
fs
ja
lcall
inc
sub
add
push
inc
cmp
test
add
xchg
fcoms
fiadds
jl
movsb
add
pop
push
xor
stc
pop
xchg
push
xchg
add
les
lods
push
pop
gs
jl
and
add
mov
ficoml
add
test
add
and
add
add
add
jmp
jbe
aam
test
add
push
daa
mov
int
or
add
mov
add
add
out
.byte
add
