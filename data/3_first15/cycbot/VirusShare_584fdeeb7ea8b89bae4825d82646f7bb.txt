add
scas
mov
mov
add
sbb
mov
mov
add
pop
pop
pop
mov
movl
add
out
out
push
push
push
push
push
push
add
add
add
or
into
into
into
sbb
sbb
pop
hlt
hlt
hlt
hlt
sub
lahf
sub
sub
pushf
pushf
add
add
add
mov
mov
mov
mov
mov
addb
sbb
sbb
sbb
sbb
and
mov
mov
mov
mov
sub
sub
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
lods
lods
lods
lods
lods
lods
lods
lods
pop
pop
pop
pop
pop
pop
add
add
stos
stos
loop
loop
loop
dec
add
add
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xor
xor
es
rcl
rcl
rcl
rcl
xchg
int3
cmp
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
lahf
sub
cmpsb
cmpsb
add
adc
adc
lods
lods
lods
lods
lods
xor
xor
xor
fcmovu
fisubrl
out
ss
cmc
in
in
in
in
in
in
in
in
in
add
icebp
mov
mov
cltd
cltd
out
out
out
out
out
out
out
out
add
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
bound
bound
in
in
in
in
in
in
fcmovu
sbb
sbb
sbb
sbb
sbb
sbb
and
and
and
and
and
addr16
pop
sub
sub
adc
adc
adc
add
add
mov
mov
mov
mov
fstp
fstp
fstp
fstp
fstp
out
out
out
repz
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
push
push
push
out
out
in
in
in
add
add
fcomp
fcomp
fadds
shrb
imul
imul
pushf
pushf
cmp
imul
lahf
lahf
lahf
lahf
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
dec
dec
dec
dec
dec
popf
popf
popf
add
mov
push
push
push
push
push
push
push
push
push
inc
clc
clc
clc
out
out
out
out
out
sub
idivl
jp
jp
inc
adc
push
ficoms
add
add
add
add
add
add
add
add
loop
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
add
rcl
test
into
into
into
stos
push
push
jecxz
jecxz
jecxz
stc
rcl
rcl
rcl
rcl
dec
dec
dec
dec
dec
dec
dec
adc
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
adc
adc
adc
inc
inc
inc
cmc
cmc
cmc
cmc
mov
mov
or
addb
and
fcmovu
fcmovu
fcmovu
fcmovu
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
xchg
push
push
push
push
push
push
add
lret
sub
sbb
sbb
sbb
sbb
sbb
dec
dec
dec
inc
inc
ret
ret
ret
jno
inc
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
or
push
jg
jg
jl
jl
fucomip
mov
mov
jno
je
je
add
add
push
push
add
ret
ret
ret
ret
ret
ret
ret
mov
mov
mov
mov
addl
pop
pop
jo
add
rcl
rcl
rcl
rcl
add
add
inc
inc
inc
inc
inc
ss
clc
clc
clc
clc
clc
clc
add
stc
stc
stc
stc
stc
stc
mov
mov
mov
sub
sub
sub
sub
sub
mov
in
in
in
in
in
in
arpl
add
add
sbb
add
or
or
or
or
out
out
out
out
out
mov
mov
mov
jge
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
push
push
push
push
push
push
cwtl
mov
add
add
add
add
add
out
lret
sub
sub
sub
sub
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
jne
jne
jne
jne
add
add
das
das
das
push
push
mov
mov
out
add
add
jb
sbb
sbb
sbb
sbb
sbb
mov
mov
push
cltd
lock
aaa
aaa
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
inc
inc
add
mov
mov
test
loope
ljmp
ljmp
ljmp
add
jmp
rcl
rolb
add
add
imul
or
or
or
or
add
add
add
pop
xchg
dec
dec
dec
dec
stos
stos
stos
stos
cmp
cmp
jns
sub
sub
sub
sub
sub
sub
sub
sub
sub
jp
jp
fstp
fstp
fstp
fstp
fstp
fstl
add
mov
mov
add
add
xchg
mov
add
add
add
add
mov
mov
add
inc
inc
inc
inc
inc
inc
inc
inc
mov
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
pop
pop
pop
mov
mov
mov
add
add
dec
dec
dec
dec
dec
add
adc
adc
adc
and
xor
sub
sub
rdmsr
xor
inc
sub
add
add
add
cs
mov
add
add
stos
stos
stos
stos
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sarl
cmp
cmp
add
add
jmp
sub
sub
sub
sub
sub
sub
sub
sub
sub
jo
jo
fsub
jecxz
jecxz
jecxz
add
add
int
push
add
add
add
add
add
mov
mov
mov
push
lahf
lahf
lahf
lahf
lahf
lahf
scas
and
vpmaddwd
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
movsl
movsl
movsl
movsl
movsl
movsl
movsl
pushf
jb
jb
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
inc
inc
inc
aad
aad
aad
sub
aam
data16
cmp
cmp
lcall
pop
mov
add
add
add
sbb
aaa
aaa
aaa
aaa
aaa
jnp
jnp
jnp
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jl
jl
jp
jp
jp
jp
jp
jp
jp
jp
dec
dec
dec
dec
dec
adc
ret
add
lret
lret
lret
lret
lret
and
and
and
and
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
inc
inc
inc
inc
cmp
cmp
cmp
cmp
cmp
into
into
into
into
into
into
lea
jge
jge
fwait
xlat
xlat
xlat
xlat
out
in
in
in
in
in
in
insl
insl
insl
insl
insl
insl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
ja
ja
ja
jno
jno
jb
jb
jb
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
add
add
add
mov
mov
mov
mov
add
add
add
add
add
push
push
push
push
push
jae
jae
jae
jae
jae
jae
jae
push
push
push
push
push
push
push
push
push
push
push
push
aas
aas
aas
aas
aas
aas
aas
add
je
je
je
je
je
je
je
je
je
je
je
je
ret
ret
ret
ret
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
jecxz
jecxz
add
add
add
add
mov
sahf
sahf
sub
sub
sub
sub
rol
rcll
adc
sub
sub
popf
cs
aas
aas
aas
aas
jo
std
std
std
std
std
std
std
movb
mov
and
and
and
and
and
and
in
in
in
in
in
in
in
in
or
or
insb
insb
insb
insb
add
add
add
add
sbb
add
add
addl
faddp
rol
rol
rol
sub
sub
sub
sub
sub
sub
sub
sub
push
push
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rcl
rcl
shl
out
mov
mov
jo
adc
pop
cmc
mov
aad
aaa
test
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
add
xchg
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
test
test
pusha
pusha
add
add
add
or
or
or
scas
scas
scas
scas
add
add
jle
and
and
pop
pop
pop
pop
daa
mov
mov
arpl
arpl
xchg
xchg
xor
add
add
add
outsl
test
test
test
test
test
pop
daa
daa
daa
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xor
xor
xor
adc
adc
adc
adc
outsb
outsb
sbb
sbb
sbb
sbb
sbb
add
rolb
add
add
test
fcomp
fcomp
fcomp
sbb
lods
lods
lods
lods
lods
lods
lods
lods
pop
add
add
push
push
push
push
xchg
xchg
xchg
xchg
add
incl
addl
push
push
push
push
push
push
push
sbb
inc
inc
inc
inc
inc
in
in
in
aas
xor
xor
xor
xor
xchg
xchg
xchg
xchg
rcl
rcl
rcl
rcl
or
or
or
jle
jle
jle
jle
jle
jle
fstp
fstp
inc
inc
rol
and
and
xchg
xchg
xchg
bound
bound
bound
bound
bound
bound
bound
bound
nop
nop
nop
nop
ss
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xlat
lret
mov
mov
mov
mov
mov
ss
pop
pop
pop
pop
mov
mov
mov
mov
push
push
push
push
mov
mov
mov
xchg
cs
xchg
xchg
xchg
xchg
xchg
xchg
fs
hlt
std
std
std
std
std
test
test
mov
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
jns
jns
jns
jns
jns
jns
jns
add
add
or
or
push
ja
ja
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
loop
loop
loop
loop
loop
loop
mov
mov
mov
mov
add
add
iret
iret
iret
iret
iret
xchg
or
or
or
or
push
push
or
pop
pop
pop
adc
adc
adc
dec
dec
out
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
das
das
das
das
das
das
outsl
outsl
outsl
outsl
outsl
outsl
cmc
rol
rol
out
into
leave
leave
leave
leave
loope
je
scas
scas
scas
scas
scas
jbe
jbe
jbe
sbb
dec
dec
dec
dec
dec
dec
dec
dec
in
in
in
in
in
in
in
in
in
in
inc
in
cmc
add
mov
dec
adc
adc
incl
cmp
cmp
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
mov
cmp
cmp
cmp
cmp
cmp
xor
xor
xor
push
xlat
adc
adc
adc
lock
incl
push
push
push
mov
cmp
cmp
cmp
jge
jge
jge
movsb
movsb
add
mov
mov
test
test
lcall
dec
dec
dec
dec
dec
dec
dec
insl
insl
insl
cld
cld
cld
xchg
and
xchg
xchg
or
or
or
or
dec
dec
dec
not
aad
jne
addl
orl
mov
sub
test
sub
sub
sub
sub
sub
xor
xor
xchg
xchg
xchg
xchg
xchg
push
push
push
mov
xor
xor
add
push
push
jno
jno
add
pop
pop
pop
pop
pop
pop
pop
es
mov
add
fs
or
or
rcl
roll
add
mov
add
xor
jge
jge
jle
fwait
fwait
add
ret
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
addl
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
rol
add
div
div
div
div
div
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
dec
dec
dec
dec
dec
dec
int
pop
pop
pop
pop
pop
xor
xor
xor
xor
xor
xor
stos
stos
stos
stos
stos
stos
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
mov
mov
mov
pop
pop
pop
pop
pop
pop
xor
xor
add
add
js
js
rcl
roll
inc
add
data16
imul
imul
inc
inc
inc
inc
inc
inc
inc
add
ret
cltd
cltd
cltd
add
int3
int3
int3
repz
add
add
add
add
out
fcmovnu
fcmovnu
fcmovnu
inc
inc
inc
inc
inc
inc
inc
into
into
into
push
push
push
push
push
push
push
push
push
push
lods
xor
xor
xor
pop
pop
pop
pop
add
scas
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
call
call
add
dec
dec
dec
dec
dec
dec
dec
dec
add
cmp
cmp
cmp
cmp
cmp
cli
cli
mov
mov
mov
mov
jb
jb
jb
adc
adc
adc
adc
es
add
add
add
add
push
push
push
xchg
xchg
xchg
aas
aas
aas
aas
aas
aas
aas
into
into
into
jnp
jnp
sbb
sbb
test
test
test
test
daa
rcl
rcl
rcl
rcl
rcl
shll
sbb
sbb
sbb
add
adc
xor
out
out
out
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
ret
ret
mov
aad
jno
jno
jg
jg
push
leave
leave
leave
leave
leave
leave
and
and
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
movsl
movsl
movsl
movsl
movsl
ret
cmp
test
test
test
or
or
or
or
or
int
int
rol
rol
rol
and
iret
xor
arpl
pop
pop
add
mov
aad
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
inc
inc
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
jbe
jbe
push
push
push
jle
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
rcl
popf
popf
repnz
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
or
or
or
or
or
or
addl
addl
adc
imul
imul
imul
add
add
add
add
test
mov
lods
lods
lods
lods
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
add
add
add
and
and
and
and
and
and
and
div
negb
adc
adc
adc
jmp
jmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
imul
imul
imul
imul
imul
imul
and
and
and
inc
inc
inc
cltd
mov
mov
cld
cld
cld
cld
cld
add
add
inc
inc
inc
inc
inc
inc
inc
mov
loope
loope
loope
ss
or
or
or
or
or
or
int
int
int
int
int
leave
leave
leave
leave
leave
leave
leave
or
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcl
rorl
dec
mov
or
repnz
sti
sti
sti
xchg
xchg
xor
xor
xor
xor
xor
xor
inc
inc
inc
inc
inc
inc
inc
and
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xchg
stos
add
jecxz
jecxz
jecxz
jecxz
test
mov
mov
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
test
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lods
lods
lods
lods
lods
add
add
add
sub
sub
sub
sub
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
sbb
sbb
dec
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
repnz
mov
mov
mov
mov
mov
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
mov
add
adc
cmp
cmp
cmp
cmp
cmp
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
jbe
jbe
jbe
jbe
mov
mov
es
je
je
scas
scas
scas
scas
scas
scas
scas
scas
cmp
inc
inc
inc
inc
inc
fstpl
sbb
sbb
sbb
xchg
xchg
xchg
xchg
or
cld
stos
stos
stos
stos
inc
inc
ret
ret
ret
ret
ret
ret
ret
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
sub
push
push
push
cmp
mov
lods
lods
lods
lods
add
add
add
xor
xor
xor
mov
mov
add
add
add
jne
jne
inc
inc
inc
inc
inc
inc
xchg
xchg
icebp
icebp
icebp
add
pop
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
into
into
into
into
into
and
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
jbe
jbe
jbe
jbe
jbe
ljmp
imul
imul
imul
gs
jge
add
add
sbb
push
push
stc
inc
aas
aas
out
out
out
out
out
out
out
out
out
out
lret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
jge
arpl
arpl
or
or
or
or
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
inc
inc
inc
inc
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
out
loop
loop
add
call
mov
mov
jne
jne
jne
jne
jne
jne
jne
jne
jne
pop
pop
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
in
in
in
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
xchg
xchg
xchg
inc
xor
xor
mov
mov
mov
mov
lret
lret
lret
lret
lret
add
in
in
in
in
in
add
xor
xor
xor
leave
jo
jo
jo
movsb
movsb
movsb
movsb
movsb
sub
sub
sub
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
lock
push
enter
enter
jbe
jbe
add
sub
sub
out
out
out
out
out
out
out
out
out
pswapd
mov
mov
mov
mov
mov
mov
inc
inc
inc
lods
lods
lods
lods
lods
lods
lods
add
add
ret
ret
ret
ret
ret
ret
ret
ret
in
in
in
add
add
add
xchg
fcomp
mov
mov
mov
mov
mov
and
and
and
and
and
and
nop
jae
ret
ret
lahf
lahf
lahf
mov
mov
mov
mov
mov
adc
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
xchg
xchg
xchg
jle
jle
jle
add
int
add
push
add
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
and
and
add
add
add
add
cld
cld
cld
cld
cld
cld
add
add
pop
pop
pop
pop
pop
out
out
daa
daa
daa
daa
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
jno
jno
jno
mov
int
int
int
int
int
int
int
int
js
ja
ja
ja
ja
std
std
std
rol
rol
rcrb
sbb
sbb
sbb
add
add
add
add
in
add
add
mov
mov
mov
mov
mov
mov
mov
hlt
add
add
inc
inc
inc
inc
inc
pushf
pushf
pushf
pushf
jg
jg
jg
jg
jg
jg
jg
jg
dec
dec
dec
dec
or
scas
scas
scas
lock
stos
stos
stos
pop
pop
pop
pop
pop
pop
pop
ljmp
jle
jle
jle
jle
jle
jle
pop
pop
add
out
out
out
clc
clc
clc
out
out
jb
jb
jb
jb
jb
jb
jb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmpsl
out
out
fstp
fstp
mov
vandpd
mov
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
pop
pop
pop
out
out
out
sbb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
fcmovu
fcmovu
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
hlt
hlt
hlt
hlt
hlt
add
test
sub
sub
testb
add
add
add
xor
xor
xor
xor
flds
add
mov
ljmp
pavgw
mov
mov
jecxz
jecxz
xor
inc
inc
add
sub
cli
cli
cli
cli
cli
scas
scas
scas
scas
and
and
and
sub
outsl
pop
jg
jg
jg
jg
jg
mov
or
mov
mov
push
push
push
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fnstsw
cmp
add
add
add
imul
imul
push
push
push
push
add
xchg
xchg
xchg
xor
add
add
add
dec
dec
dec
dec
jge
xchg
xchg
xchg
xchg
xchg
xchg
dec
mov
out
out
out
out
out
out
out
out
out
out
out
out
fs
nop
nop
nop
jl
add
add
add
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
add
adc
adc
adc
aas
aas
aas
aas
aas
aas
aas
add
addr16
add
sbb
sbb
sbb
sbb
xchg
movsl
movsl
movsl
movsl
movsl
jg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
xor
xor
lods
lods
lods
lods
lods
mov
out
out
out
out
out
out
add
addl
popf
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
out
out
out
out
ja
ja
ja
ja
sahf
sahf
sahf
sahf
sahf
mov
mov
dec
dec
dec
dec
dec
dec
fildl
add
cltd
cltd
cltd
cltd
cltd
daa
daa
pushf
test
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
mov
add
add
add
insl
test
adc
add
add
lcall
lcall
add
add
add
add
fcmovu
fcmovu
fisubl
and
and
and
and
and
and
and
and
ds
push
push
scas
scas
scas
scas
scas
scas
xchg
push
push
push
cmc
cmc
cmc
cmc
cmc
mov
pmovmskb
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
js
popa
popa
popa
popa
popa
popa
popa
out
pushf
pushf
pushf
pushf
pushf
pushf
pushf
sbbl
mov
pop
pop
jge
jge
jge
fmul
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
lock
aaa
push
outsl
outsl
outsl
outsl
outsl
outsl
outsl
test
test
test
add
jle
shlb
and
and
and
and
cmp
cmp
cmp
js
cmp
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
mov
hlt
hlt
hlt
imul
cmp
cmp
into
into
into
into
into
ret
ret
ret
ret
ret
ret
ret
ret
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fldt
add
sub
std
std
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xadd
add
pop
pop
pop
pop
pop
div
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lret
lret
icebp
icebp
icebp
icebp
icebp
icebp
push
push
push
push
push
push
cltd
cltd
cltd
mov
adc
jb
jb
jb
nop
mov
push
push
push
push
orl
dec
dec
lock
add
jo
sub
add
add
add
add
add
add
lock
popf
shrb
xor
xor
cld
cld
cld
jge
jge
mov
addb
add
add
fsts
addb
addb
xchg
fs
into
into
into
into
into
into
into
into
into
into
into
into
mov
mov
ret
adc
adc
adc
and
and
and
and
and
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
addb
addb
arpl
arpl
pop
pop
pop
pop
cmp
cmp
add
add
add
add
add
add
pop
pop
mov
mov
outsb
test
xchg
xchg
filds
xchg
push
push
push
push
push
mull
es
pop
pop
pop
pop
pop
pop
sub
sub
fsubl
gs
cltd
cltd
cltd
push
or
or
or
or
or
scas
scas
scas
scas
scas
xchg
xchg
xchg
xchg
out
out
add
test
add
add
add
div
not
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
in
in
in
in
mov
add
cmp
cmp
into
into
into
into
xchg
xchg
xchg
xchg
outsb
outsb
outsb
outsb
outsb
outsb
adc
adc
mov
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
lods
lods
lods
lods
lods
lods
lods
lods
lods
data16
and
and
and
pop
pop
enter
add
add
std
std
std
std
std
std
push
push
sahf
in
in
in
in
in
in
xchg
xchg
add
lcall
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
add
add
std
std
std
std
std
std
std
push
push
push
hlt
hlt
hlt
hlt
dec
dec
dec
movsl
movsl
movsl
movsl
movsl
xchg
xchg
xchg
xchg
add
ljmp
bound
bound
bound
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
lods
lods
lods
scas
scas
scas
scas
scas
test
mov
mov
data16
add
add
in
in
popf
loop
loop
loop
call
call
in
in
in
pop
hlt
hlt
and
add
jmp
push
lods
lods
insb
insb
insb
insb
insb
add
add
add
add
add
add
repz
out
out
out
out
add
add
add
add
fcmovnu
fcmovnu
fcmovnu
pop
pop
pop
pop
pop
pop
adc
adc
adc
adc
adc
cmp
cmp
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lahf
lahf
lahf
add
add
add
add
add
add
lock
js
js
js
js
nop
nop
nop
nop
nop
nop
nop
jne
jne
jne
xor
xor
xor
xor
xor
xor
xor
jle
jle
jle
jle
jle
jle
jle
mov
inc
inc
inc
inc
inc
inc
inc
xor
xor
jne
jne
jne
jne
jne
jne
and
and
and
and
and
and
and
and
and
and
and
and
add
add
inc
inc
test
test
sbb
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
xchg
add
test
push
sub
sub
lret
sub
sub
sub
sub
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
les
add
addr16
sbb
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
jg
jg
insb
insb
add
leave
leave
add
add
add
or
or
hlt
hlt
hlt
hlt
aam
xlat
xlat
xlat
xlat
xlat
movsl
movsl
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
and
add
add
sbb
sbb
sbb
push
push
ret
ret
ret
jne
jne
jne
jne
jne
jne
jne
jne
jecxz
jecxz
jp
jp
jp
jp
jp
jp
jp
jp
jp
pop
pop
pop
mov
lret
lret
lret
jae
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
dec
lahf
lahf
lahf
lahf
lahf
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
cmp
cmp
cmp
cmp
add
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
mov
mov
jb
adc
adc
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
js
mov
mov
mov
add
add
add
add
fldenv
and
and
mov
mov
mov
mov
lahf
rcl
rcl
roll
xchg
xchg
xchg
add
add
add
loope
loope
loope
jp
or
bound
rol
rol
jo
jo
jo
jo
add
popa
popa
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
add
or
or
or
or
or
or
and
cmp
jo
add
add
sbb
sbb
pop
pop
pop
pop
addl
mov
add
add
scas
scas
and
and
add
inc
inc
inc
or
xor
xor
xor
add
or
or
or
or
or
or
or
inc
inc
inc
inc
inc
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cmp
cmp
cmc
cmc
or
or
test
add
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
jns
jns
add
add
or
or
or
mov
mov
dec
dec
ds
pop
pop
pop
pop
mov
stos
stos
stos
stos
stos
stos
fwait
fwait
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
xchg
xchg
jb
jb
jb
add
add
add
cltd
mov
mov
sub
stos
sub
sbb
incl
add
les
add
add
popa
popa
popa
popa
popa
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
in
in
in
in
in
in
or
xor
inc
add
out
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
cwtl
cwtl
cwtl
sbb
out
out
out
out
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
ret
ret
inc
add
cli
cli
push
adc
adc
adc
adc
adc
adc
adc
adc
notl
push
std
std
imul
imul
imul
imul
mov
add
add
and
and
and
test
rol
rol
icebp
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
or
or
cltd
cltd
cltd
cltd
sahf
sahf
sahf
sahf
sahf
mov
mov
jp
jp
jp
jp
jp
jp
mov
jp
ficompl
jbe
push
pop
or
mov
mov
fs
add
and
pusha
leave
add
add
aam
mov
xor
cmp
dec
mov
cmc
outsl
add
inc
daa
mov
in
and
push
dec
testb
sub
push
rolb
stos
add
mov
push
inc
inc
push
iret
out
insl
decb
leave
inc
stos
sbb
add
pop
cmp
mov
leave
test
push
mov
std
xchg
mov
std
xchg
and
loop
scas
add
out
dec
stc
scas
add
int
add
je
fimuls
add
jno
sbb
cmpsb
loopne
repz
fsub
mov
xchg
out
nop
or
stc
leave
pop
in
dec
xor
add
mov
and
and
add
mov
cltd
mov
cmpsl
das
stos
mov
fs
pop
rcl
sbb
push
add
fs
pop
lret
jl
inc
pop
insb
out
mov
mov
xchg
out
add
mov
lock
adc
mov
xchg
setns
pusha
xorb
xchg
sub
mov
and
xlat
and
cmp
pop
std
nop
cmp
loopne
or
rol
std
scas
mov
hlt
sub
out
sahf
xor
rcll
push
sarb
mov
jno
fcomps
push
sub
mov
xchg
aaa
sub
shlb
enter
dec
mov
adc
test
push
and
and
mov
das
add
loopne
leave
adc
hlt
add
or
rcrl
fimuls
sub
gs
outsl
push
pop
sbb
dec
pop
rcr
inc
test
imul
loopne
inc
js
push
testl
in
jne
stos
ds
sbb
add
test
and
jb
or
and
xchg
and
jle
mov
lret
rol
push
inc
popf
int
push
adc
addb
popf
cmp
rcl
nop
xor
in
lods
jb
test
ror
imul
filds
mov
fcmovb
add
add
iret
cwtl
cwtl
fs
repnz
jns
mov
jecxz
imul
mov
inc
popa
cld
mov
mov
cs
mov
pusha
les
and
add
cmp
push
xchg
aad
mov
add
and
mov
push
cs
push
stos
cmp
loopne
mov
xor
jp
imul
add
mov
sbb
cltd
add
mov
jle
inc
jne
scas
mov
mov
sbb
fdivl
lahf
cmc
insl
lcall
and
mov
loope
inc
subb
out
jo
sub
rcr
fcomi
jecxz
in
fstps
imul
aad
fstl
xlat
fildll
nop
mov
rolb
pop
pusha
inc
inc
fyl2xp1
clc
pop
aaa
mov
push
lock
mov
sbb
add
fsubl
test
shl
sub
inc
test
and
nop
cmp
mov
loop
int3
sbbl
arpl
ljmp
and
add
leave
scas
add
loopne
jno
mov
aam
pop
jg
loopne
in
or
mov
loopne
add
rol
jle
inc
iret
cltd
add
push
adc
inc
mov
lcall
jge
addb
adc
enter
pop
xor
call
ret
loope
cmp
insb
xchg
subb
ds
dec
dec
sub
loopne
xor
push
pop
mov
out
in
or
and
cwtl
pusha
jne
adc
mov
andb
jae
add
add
jb
cmp
adc
aam
subl
mov
push
mov
pusha
sarb
pop
cmpsb
add
add
adc
pop
jecxz
pop
fiadds
js
and
adc
lock
inc
add
icebp
pop
mov
xor
addb
jnp
mov
add
mov
adc
ficomps
lret
subb
sbbb
sbb
push
rol
jnp
mov
or
inc
push
sbb
lcall
and
add
loopne
outsl
xchg
and
rcl
imul
inc
or
xchg
pop
jne
aas
std
sub
and
cld
or
adc
inc
mov
cld
pusha
lcall
iret
out
sti
sbb
addb
inc
loopne
mov
xor
or
adc
daa
aam
lods
or
dec
and
mov
jae
pusha
inc
cmc
add
sti
ftst
addb
lret
push
dec
pop
cmp
jo
mov
mov
add
loopne
fnstcw
cmp
clc
je
in
inc
into
dec
jnp
scas
pop
mov
sub
gs
mov
sti
jle
add
mov
loopne
or
jg
inc
inc
mov
pusha
xlat
lcall
inc
jae
or
mov
stc
lret
push
hlt
daa
ljmp
or
add
loopne
lods
pusha
loopne
nop
inc
cld
mov
or
mov
jne
push
addl
rclb
rorb
in
mov
mov
repnz
xor
test
outsb
imul
mov
dec
shr
push
pusha
adc
call
or
xor
cmp
pop
sbb
fisttpl
cwtl
ret
xchg
sbb
shl
outsb
out
fiadds
push
mov
sub
loopne
pop
pushf
aad
fstl
push
adc
mov
test
loopne
popa
movsl
cmp
stos
shlb
jns
jo
call
mov
and
xchg
shrb
in
in
fcompl
push
andl
mov
leave
ja
xor
out
xor
pusha
pusha
lcall
add
add
fmulp
rcll
inc
pop
test
test
pop
enter
lods
and
and
and
inc
inc
shrl
loopne
outsl
sub
das
scas
inc
loopne
inc
subb
jmp
jle
scas
and
jnp
imul
pusha
loopne
cli
in
aas
jb
loopne
add
adc
and
mov
addr16
dec
or
xor
rolb
or
or
inc
daa
outsl
notb
cmpsb
loopne
repnz
loopne
xchg
inc
push
les
add
and
pop
and
fucomp
fcmovnu
adc
dec
fs
sub
mov
in
das
sub
orb
rclb
fsubrs
out
std
in
out
lea
pusha
jb
xchg
sub
bound
and
imull
repz
add
pusha
add
push
mov
and
pxor
inc
xor
xor
or
jbe
or
lods
pusha
inc
inc
jno
addb
pop
sbb
inc
popa
sbb
jle
add
pushf
repz
fimuls
loopne
clc
or
add
dec
pushf
cwtl
icebp
jecxz
push
mov
mov
sbb
mov
inc
and
inc
fcomi
lods
mov
ljmp
and
and
and
andb
add
jmp
dec
mov
outsl
xor
jge
sbb
test
inc
add
inc
pusha
sbb
fwait
dec
mov
inc
jle
and
jge
mov
fucomi
mov
inc
xchg
add
lods
and
pusha
pusha
add
cmp
cmpsl
pop
aam
add
cli
cmp
and
loopne
inc
repz
cmp
and
inc
outsb
push
into
aam
mov
add
inc
loopne
jl
sub
mov
or
leave
inc
clc
out
outsl
xchg
push
mov
loope
adc
fiaddl
fnstenv
imul
mull
andb
into
push
fldl
imul
fsubs
lea
shl
and
xlat
in
xchg
out
xchg
subl
loopne
pop
and
inc
ds
fwait
add
cmp
mov
addb
mov
lea
push
lret
sti
inc
icebp
adc
and
inc
les
mov
mov
and
int
add
or
sbb
add
loopne
imul
pusha
xor
scas
pushf
lock
and
adcb
mov
sub
push
ds
loopne
add
and
in
mov
mov
loopne
pop
sbb
pusha
and
ds
sub
orb
bound
or
mov
insl
push
shlb
mov
pusha
mov
inc
in
lods
out
jo
inc
push
push
or
addb
push
and
sti
push
xor
xchg
cmpb
and
add
dec
pop
call
neg
sbb
bound
test
pop
dec
sti
je
ret
test
adcb
xchg
cwtl
adc
inc
xchg
enter
leave
repz
add
daa
mov
lahf
cltd
pushl
fs
ficoms
add
and
mov
add
push
sbb
sti
movsb
add
cld
and
in
xchg
mov
test
add
inc
in
jg
push
add
shrb
inc
fisttpl
lock
pusha
inc
xor
and
mov
addb
xchg
adc
stos
add
dec
fldt
inc
ljmp
in
addr16
pushf
inc
sub
adc
dec
scas
nop
mov
arpl
push
jae
sub
inc
cmp
jbe
mov
out
pop
pop
insb
testb
mov
shlb
and
or
inc
push
popf
push
pusha
add
or
cmp
and
inc
int
and
sbb
sub
mov
int
ds
stc
popf
and
jp
and
mov
rolb
mov
jo
stc
mov
mov
test
and
or
loopne
push
sub
mul
pop
jl
sub
gs
jle
pop
xlat
and
pusha
mov
jb
in
fsts
mov
cmp
cli
lcall
jl
sbb
fsubrs
add
or
sbb
mov
sub
outsl
aas
imul
adc
scas
pusha
inc
mov
in
shl
dec
lret
pusha
fcomps
and
loopne
dec
mov
out
adc
add
sbb
mov
mov
fsubrs
add
notb
or
adc
xchg
hlt
adc
sub
and
adc
mov
pusha
pop
ficoml
loopne
icebp
or
inc
mov
sarb
mov
mov
enter
jnp
scas
add
dec
repnz
mov
sub
loopne
outsl
jne
sarb
notl
push
add
cs
loopne
insl
addb
sub
add
sbb
pop
mov
test
or
mov
jne
es
pusha
pop
cmp
jg
sbb
cmp
ja
jecxz
or
shrb
add
pop
cltd
mov
scas
jnp
dec
leave
push
clc
add
adc
dec
loope
and
std
push
outsl
xchg
push
jmpw
mov
and
fcoms
xorb
xchg
pop
jbe
jl
fnstcw
arpl
jle
addl
bound
cmp
es
mov
jns
xchg
cmp
and
clc
dec
push
adcl
sub
pop
lods
add
jb
sbb
sbb
or
pusha
rcrb
mov
nop
xchg
inc
xor
cmp
lods
rolb
push
push
pushl
pop
adc
mov
inc
sub
pop
mov
pop
add
pusha
xchg
and
imul
jne
movl
mov
jle
dec
shrl
and
jbe
adc
xchg
xchg
out
ds
inc
and
cwtl
dec
inc
push
add
pusha
xor
repz
out
inc
fiadds
int
xor
frstor
jno
mov
jge
das
pop
xchg
cmpsl
xchg
mov
addb
mov
or
stos
add
push
jmp
push
test
jmp
sbb
sti
repz
shlb
jb
sub
daa
stos
mov
pusha
out
xchg
push
les
inc
movsb
pusha
pusha
pop
decl
sarb
hlt
mov
and
out
mov
lods
add
dec
mov
movsl
mov
js
add
and
in
xchg
imul
adc
and
andb
push
dec
andb
mov
mov
pop
scas
mov
mov
mov
ret
mov
aas
sbb
sub
fwait
jbe
fdivs
dec
ret
mov
mov
iret
out
in
pop
js
mov
add
lock
mov
loopne
pop
push
popa
test
mov
stos
addr16
fwait
mov
mov
add
loopne
cmpsb
pusha
mov
sub
mov
mov
and
jge
js
xor
lods
add
pushl
xchg
pop
repnz
pop
jno
popa
xchg
je
int3
push
inc
int
push
push
out
aam
xchg
mov
add
stc
mov
xchg
scas
inc
and
or
out
in
enter
je
and
and
je
test
mov
mov
push
push
ljmp
and
pop
pushl
push
pusha
sub
inc
in
add
or
and
jle
inc
sti
addr16
sbb
and
lods
cld
popf
adc
rcr
movsl
ss
stos
fisttpll
fnsave
ds
loopne
inc
and
cld
int3
mov
dec
jl
shlb
and
rol
jecxz
iret
pop
pop
leave
push
clc
inc
adc
add
loopne
inc
mov
push
mov
inc
xchg
adc
mov
in
mov
inc
loope
pusha
xorb
loopne
cmp
int3
mov
push
sar
popf
imul
mov
dec
int3
push
loop
xchg
mov
fistps
faddp
and
shrb
ja
popa
dec
xchg
pusha
push
je
or
add
mov
cmpsl
mov
fs
aaa
and
popf
nop
mov
and
pop
mov
inc
outsl
dec
popf
adc
into
in
xor
jmp
sub
adc
push
call
mov
mov
mov
pusha
push
jle
imul
lcall
add
pusha
call
mov
jb
xchg
pusha
mov
mov
popl
fnstenv
loope
sub
sub
and
xchg
loopne
xor
mov
xor
pop
cmp
loopne
arpl
sbb
add
pop
mov
mov
les
test
inc
cmp
adc
and
loopne
dec
call
repz
cmp
mov
pop
fcoms
mov
add
mov
pop
int
loopne,pn
cli
insb
jae
stc
pop
test
rol
bound
inc
or
sarb
rolb
out
push
lret
mov
sarl
add
push
sub
add
shl
addr16
mov
push
mov
adc
and
orb
rorl
sub
fcmovnu
jmp
adc
sbb
sbb
push
out
std
mov
loopne
dec
fs
and
ja
xor
push
sarb
xchg
mov
mov
inc
cmp
xor
and
popf
out
sub
loopne
loopne
test
loopne
dec
inc
insl
push
rorb
jae
push
push
inc
andb
repnz
or
cmp
adc
fnstcw
xchg
js
and
pop
push
mov
xor
aad
pusha
add
jl,pt
sar
mov
aaa
adc
pusha
add
add
mov
cmp
and
ror
push
je
inc
sbb
icebp
scas
mov
rcrb
mov
xchg
enter
rol
fcoms
jnp
aas
adc
sbb
dec
cmpsb
loopne
mov
and
shlb
and
sbb
ret
enter
xorl
adc
out
das
xchg
cld
out
fmul
adc
push
sub
sbb
xchg
pop
mov
loope
add
inc
xchg
es
addb
mov
and
aam
mov
je
shl
and
shrb
inc
andb
pop
out
shl
mov
ror
aad
inc
or
loopne
cltd
js
scas
mov
imul
mov
jae
push
add
push
push
lods
pusha
loopne
push
dec
shlb
jnp
and
add
iret
pop
sbb
daa
ret
pop
jo
js
jecxz
dec
stos
inc
inc
add
inc
add
and
xor
jmp
push
enter
cmp
faddl
pop
lea
outsl
int
pusha
test
inc
inc
arpl
inc
pusha
push
pop
jl
sbb
jg
clc
ret
jg
scas
addb
mov
insl
psadbw
add
or
push
ja
adc
movsl
sub
rcrb
inc
andb
and
add
daa
mov
adcb
add
sub
add
add
mov
adc
sub
negb
loopne
rolb
rol
push
jne
mov
and
sub
add
bound
std
and
jge
add
lahf
aam
loopne
mov
and
pusha
xchg
mov
in
mov
mov
push
inc
loop
jae
ss
outsl
push
mov
imul
imul
and
rolb
cltd
sbb
mov
add
fndisi(8087
inc
or
adcb
jb
xor
jnp
xor
scas
xor
repnz
addr16
ja
mov
add
mov
xor
jb
loope
pop
in
and
fldenv
ljmp
xor
pusha
and
jge
mov
pop
addb
in
shll
inc
cmp
push
leave
fcmovne
adc
aaa
mov
loopne
ds
and
jge
and
lods
in
js
movsl
cltd
mov
and
and
adc
add
jns
lock
loopne
movsl
pop
mov
mov
mov
add
lods
add
mov
and
fwait
into
xchg
shlb
cli
ja
inc
sbb
push
div
pop
dec
icebp
mov
mov
mov
aas
dec
lods
arpl
fistpl
adc
in
adc
jnp
jno
sti
mov
mov
loopne
and
fwait
xchg
sahf
add
add
add
loopne
cmp
andl
inc
out
gs
pusha
rorb
fisttpl
mov
repnz
ret
mov
jno
ljmp
xchg
and
scas
andb
std
mov
loopne
ss
mov
and
ret
and
loopne
or
add
cli
mov
sti
adc
outsl
loopne
pop
dec
idivb
pop
in
loopne
mov
adc
loopne
mov
inc
push
mov
inc
mov
stc
inc
pushf
clc
insb
negl
jl
sbb
push
xchg
xlat
sbb
pop
bound
js
mov
lcall
cwtl
std
int3
dec
fsubrl
mulb
adc
lret
int
ljmp
jbe
mov
addb
addl
sbb
hlt
jl
mov
pushl
push
push
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
mov
cmp
je
cmp
je
cmp
je
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
pop
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
cmpl
je
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
mov
push
xor
sub
je
dec
je
dec
dec
je
mov
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
mov
push
mov
xor
sub
mov
je
dec
je
dec
jne
push
push
call
test
je
mov
mov
mov
pop
pop
xor
pop
call
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
test
jne
pushl
call
push
call
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
cmpl
push
mov
je
cmpl
jne
cmpb
jne
mov
mov
xor
pop
call
leave
ret
call
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
lea
push
call
test
jne
leave
ret
nop
nop
nop
nop
nop
mov
mov
lea
call
add
ret
call
test
jne
push
call
xor
jmp
nop
nop
nop
nop
nop
mov
mov
lea
call
add
ret
push
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pushl
push
pushl
pushl
pushl
pushl
pushl
push
call
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
mov
test
je
cmp
je
cmp
je
cmp
je
mov
and
push
cmp
je
call
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
push
push
mov
push
call
xor
cmp
sete
inc
push
push
push
push
push
call
mov
lea
cld
decl
dec
neg
sbb
not
lea
and
push
lea
push
lea
push
mov
dec
neg
sbb
not
lea
and
push
mov
dec
neg
sbb
not
lea
and
push
push
pushl
mov
neg
sbb
lea
and
push
pushl
neg
sbb
and
push
xor
push
push
push
push
push
push
push
push
call
cmpl
mov
je
testb
jne
push
call
test
jne
test
jl
cmpl
je
mov
mov
mov
mov
mov
testb
jne
mov
test
jne
push
lea
mov
push
lea
push
lea
push
xor
push
lea
push
movl
mov
movl
mov
mov
call
mov
cmp
jl
movl
push
pushl
call
test
jne
orl
push
push
lea
push
lea
push
pushl
call
mov
test
jl
mov
mov
mov
mov
mov
mov
mov
testl
jne
lea
push
call
mov
test
jl
xor
cmpl
jne
cmpl
jne
xor
cmp
jne
cmp
je
pushl
call
cmp
je
cmp
jne
lea
push
call
cmp
je
cmp
je
pushl
call
pushl
mov
mov
mov
push
pushl
call
mov
mov
cmp
mov
je
cmp
jne
mov
mov
mov
mov
test
je
xor
mov
mov
xor
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
mov
test
je
xor
mov
mov
xor
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
mov
test
je
xor
mov
mov
xor
mov
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
mov
test
je
xor
mov
xor
cmpl
mov
mov
mov
je
lea
cmp
jne
cmpl
jne
mov
mov
pop
pop
xor
pop
call
leave
ret
nop
nop
nop
add
loopne
add
jmp
mov
jmp
nop
nop
nop
nop
nop
jmp
pushl
call
mov
cmp
je
push
push
call
call
push
push
push
call
call
mov
call
movzwl
cmp
je
cmp
je
cmp
jne
cmpw
jae
cmp
je
push
call
push
call
push
call
mov
mov
push
cmp
je
push
push
push
lea
push
push
call
add
push
push
push
push
call
test
jl
push
push
push
push
call
test
jl
call
movl
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
cmp
je
cmp
jne
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
testb
jne
testb
je
lea
push
push
lea
push
call
cmp
jl
cmp
jne
mov
cmp
jge
mov
testl
je
pushl
call
test
jl
cmp
jne
lea
push
push
call
test
je
call
test
jl
mov
push
mov
mov
call
test
je
call
test
je
pushl
push
pushl
call
test
je
testb
je
lea
push
lea
push
mov
mov
call
test
je
jmp
nop
and
add
add
add
add
add
add
jae
jae
imul
jae
add
pop
add
imul
outsl
add
jae
add
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
xor
call
test
je
xor
pop
pop
leave
ret
cmp
jne
call
push
call
jmp
nop
nop
nop
nop
nop
push
call
push
call
test
je
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
mov
push
xor
push
push
call
add
movb
call
mov
mov
cmp
mov
mov
mov
je
cmpl
mov
mov
mov
je
cmpl
mov
mov
mov
je
cmpl
je
call
mov
mov
mov
mov
neg
sbb
not
push
and
push
call
lea
lea
push
lea
push
add
xor
jg
dec
sbb
jl
cli
or
andb
mov
add
in
fidivs
das
flds
or
xor
and
lds
jle
mov
shl
push
repz
out
xor
pop
mov
xchg
mov
add
orb
daa
int
aas
or
inc
sbb
call
rol
fidivs
or
add
fimull
adc
or
mov
cmpsl
pop
rcl
lret
and
fbstp
cwtl
popa
mov
mov
popf
mov
and
mov
mov
pusha
dec
cwtl
cwtl
loopne
xor
je,pt
test
shlb
loopne
add
mov
sarl
popa
and
add
lods
loopne
out
or
mov
and
std
jp
push
testb
add
and
inc
inc
int
js
cmp
push
and
jbe
pusha
jge
add
les
int3
add
xor
decb
fwait
into
fisttpll
adc
cmp
gs
cmp
stos
mov
stos
cli
cmpsb
shl
push
and
pop
sub
add
pop
lahf
xor
sub
add
out
ja
add
sti
mov
xchg
ret
shll
lahf
test
inc
arpl
add
or
rcll
and
mov
enter
add
jb
push
or
loopne
lods
xchg
addb
addr16
cli
in
pusha
sub
mov
dec
push
xor
mov
and
pop
cmpsb
pusha
mov
pushf
sbbl
pop
inc
imul
lcall
out
jl
add
out
enter
orl
sahf
les
loopne
outsl
jne
push
sbb
push
leave
pop
lahf
or
and
clc
lods
mov
push
fnstsw
add
pop
sub
mov
mov
xor
mov
adc
gs
loopne
gs
mov
stos
shlb
in
add
loopne
xlat
xor
xchg
decb
add
aaa
arpl
lcall
fidivrl
mov
ds
mov
sub
mov
pop
fsts
push
and
dec
hlt
sub
cltd
ret
adc
jmp
fdivrl
mov
xchg
loope
scas
arpl
dec
xor
hlt
mov
aad
loopne
bound
cmp
pusha
add
aad
mov
dec
pop
fmuls
nop
mov
rorb
pop
adc
into
dec
dec
test
add
popf
lret
cli
xchg
fildll
or
shl
lcall
xchg
add
inc
scas
mov
pusha
add
push
cmp
push
push
out
lret
movsb
mov
inc
aas
cltd
mov
shlb
jp
stos
jb
rol
add
loopne
add
add
mov
cmp
andb
pushf
test
and
loopne
mov
movsl
std
das
or
jge
shlb
mov
add
shr
mov
ja
add
hlt
pop
cmp
jle
sti
adc
pop
test
dec
cmc
or
add
aas
xchg
pop
mov
pushf
adc
outsb
hlt
int
mov
shl
xchg
pop
in
sub
mov
add
push
xor
jo
mov
scas
mov
ja
push
jnp
sub
rolb
inc
loopne
test
jp
inc
mov
adc
fidivrs
sbb
pusha
loopne
fnstcw
aam
cmp
push
push
inc
xor
xchg
mov
xor
inc
sarb
push
mov
adc
pusha
jg
add
push
jmp
xchg
and
inc
jge
pusha
mov
xchg
and
cmp
sbb
inc
jns
pusha
loopne
xchg
xchg
cmp
sub
pop
or
mov
bsr
jg
add
ja
push
mulb
jns
add
out
jp
gs
movsl
cmpsb
inc
inc
outsb
pop
jecxz
add
pop
pop
in
out
rol
out
xchg
pop
bound
jns
mov
mov
inc
mov
adc
mov
sti
fisttpll
aas
pop
mov
and
mov
mov
lods
pusha
sarb
shl
ss
xchg
pop
in
inc
loopne
mov
es
xchg
clc
mov
rolb
cmp
cli
pop
inc
xchg
cmpsb
rolb
cld
and
ror
pop
in
push
movb
mov
sbb
xor
das
mov
stos
shlb
repz
jecxz
shl
stc
inc
movsb
and
movb
sbb
push
shlb
inc
shl
inc
setge
shlb
pop
and
and
dec
daa
sbb
popa
or
pop
shll
loope
add
ret
loopne
movsb
loopne
sahf
sub
push
adc
sbb
dec
fidivs
sbb
fcomp
and
inc
mov
rcrb
shrl
cmp
repz
xor
insl
scas
rolb
mov
push
push
jnp
and
mov
cld
dec
stos
xchg
jp
arpl
adc
shl
add
sub
inc
pop
jb
lods
addb
test
jl
dec
loop
xor
add
loopne
out
inc
and
pusha
loopne
mov
cwtl
adc
addb
pop
xlat
jno
inc
fmul
push
daa
push
xorl
loopne
or
jbe
shlb
mov
sbb
lock
inc
fimull
ret
mov
addb
andb
and
jg
and
mov
cli
mov
ja
sbb
mov
inc
add
mov
testb
jl
mov
mov
inc
outsb
pop
mov
add
mov
xlat
xor
loopne
in
imul
mov
add
enter
in
scas
andb
bound
mov
pusha
inc
sub
rcrb
mov
outsb
cmp
outsb
nop
dec
leave
sysexit
inc
insl
push
add
cmpsb
and
fdivrl
ror
mov
and
adc
in
movsl
lret
adc
inc
mov
fsubl
jge
jecxz
stc
xchg
inc
push
inc
add
loopne
mov
jne
call
es
repz
dec
lret
addb
in
mov
out
jb
jno
clc
mov
mov
add
aaa
xlat
insb
in
outsb
pop
cmp
pop
cmp
push
sti
or
mov
addb
add
sbb
push
mov
cmp
jp
inc
iret
mov
pusha
jecxz
push
push
mov
lret
jmp
rolb
mov
test
xor
inc
rorb
add
stos
inc
xchg
jnp
push
aas
jns
cld
pop
jae
inc
call
cltd
stc
dec
sar
adc
add
icebp
mov
nop
cli
aaa
gs
movsb
mov
and
in
add
arpl
cmp
mov
inc
sbb
inc
pop
out
repnz
mov
popl
rclb
in
cmp
xchg
das
cwtl
out
das
inc
sbb
aaa
mov
xchg
mov
lret
data16
ret
dec
mov
xorb
movsl
or
pusha
cli
jle
outsl
mov
mov
xchg
cwtl
rcrb
add
xor
outsl
dec
and
loop
pop
testl
add
icebp
in
jne
sub
pop
lcall
xchg
arpl
sti
stc
shl
pop
sbb
insb
int3
outsl
sub
mov
cmpsl
lds
fistpl
push
inc
and
rolb
and
aad
add
shll
bswap
movsb
inc
and
jmp
adc
push
adc
stc
into
add
jp
pop
ret
imul
pusha
inc
iret
xor
push
pop
and
jb
nop
sub
pop
lds
cmpl
mov
jecxz
rol
mov
test
out
xchg
cmp
aaa
xchg
inc
leave
pop
scas
jne
shlb
and
sbb
mov
mov
mov
cmc
shll
lcall
xor
loopne
ficoms
repz
bound
repz
dec
sub
sbb
in
mov
xor
mov
mov
stc
cld
cmc
pop
lock
add
sbb
sub
cmp
pop
cmc
cmp
pusha
mov
pop
pop
jo
add
xor
ffreep
aad
dec
dec
enter
es
test
dec
add
imul
inc
loopne
cltd
xor
jecxz
fcoml
mov
or
and
insb
push
rolb
jecxz
push
jmp
cs
mov
cs
mov
shlb
pusha
adc
lret
or
loopne
or
in
ret
mov
data16
or
loope
in
insb
daa
add
pushf
lcall
adcb
xor
mov
add
sub
pusha
cmp
lock
mov
addb
xchg
sahf
pop
addr16
pop
loope
or
xchg
out
icebp
call
pop
jmp
mov
inc
xchg
shl
popa
sarl
sarl
inc
mov
sub
addr16
push
xchg
andb
pop
cwtl
jge
popa
add
inc
js
les
mov
pop
scas
sub
sbb
stos
inc
xor
test
sbb
dec
leave
cld
inc
je
or
rolb
loopne
add
pusha
add
mov
lods
aam
jle
inc
mov
into
filds
ja
xchg
mov
pop
test
add
adc
andb
ljmp
outsl
sbbl
add
xor
jmp
cltd
imul
jbe
mov
pop
lcall
mov
and
loopne
lods
incl
add
loopne
xchg
inc
cmp
jns
and
sbb
pop
int3
push
or
mov
pusha
rcrb
sbb
pop
xor
fiaddl
xor
aam
aaa
pop
xchg
inc
sbb
push
loopne
pusha
mov
cmovno
adc
xchg
pop
push
lock
fcomps
xor
pop
xchg
sbb
mov
lods
insb
js
arpl
adc
jns
push
jae
push
rolb
imul
xor
and
jno
popf
inc
out
lock
daa
pushf
dec
repnz
xorl
insb
stc
loopne
inc
in
cmp
movsb
loopne
mov
jmp
shlb
mov
popa
push
adc
xchg
cmp
imulb
inc
mov
inc
outsl
fidivs
lds
loopne
jg
mov
mov
cmpsb
mov
pusha
pop
movsl
rcrb
add
shl
inc
sbbb
pusha
mov
shlb
pusha
das
mov
mov
sub
xor
fimull
fs
inc
mov
das
lcall
cmc
xor
test
add
add
mov
and
mov
mov
out
jp
mov
cmp
out
add
adc
sbb
hlt
loopne,pn
xchg
push
and
inc
pop
and
int3
sub
add
popf
mov
and
sbb
test
and
and
cmp
push
mov
insl
and
rorb
sbb
push
lret
inc
mov
enter
cmp
in
cmp
push
popa
cmp
ds
or
loopne
stos
cmp
mov
fsubl
mov
stos
xlat
aam
jo
sbb
xchg
clc
ss
fsub
sub
mov
jge
pusha
inc
mov
dec
cmpsb
loopne
out
fsubl
sub
and
cld
lods
xchg
jp
rolb
imulb
jge
fistpll
sub
std
enter
inc
lret
lods
add
xor
or
adc
and
ror
sti
les
shlb
cwtl
mov
sbbl
ret
mov
fs
jo
push
mov
or
loopne
fcmovnbe
xor
and
inc
sahf
or
mov
lret
das
sarb
fimuls
lcall
pusha
sbb
fdivs
insl
setae
pop
lds
xor
movsb
add
in
lret
sti
inc
pop
sbb
mov
cmc
sub
nop
out
or
add
mov
sti
nop
inc
push
andb
add
jnp
lea
jb
cmc
push
add
inc
sbb
mov
xor
je
mov
pushf
jp
mov
sub
push
jge
or
rcrb
repz
shlb
ret
sub
jb
xor
arpl
in
push
fstl
hlt
test
inc
add
andb
or
inc
mov
cmp
add
push
or
loopne
andb
dec
loop
pusha
pop
jmp
xor
aas
jmp
sahf
out
lret
inc
and
mov
std
cld
int3
outsb
jnp
nop
popf
nop
adc
iret
and
pusha
clc
push
add
sbb
push
shlb
and
pusha
jle
add
and
lods
shlb
in
loopne
sbb
and
xor
addr16
pushf
push
dec
sarb
scas
pusha
rolb
push
mov
mov
imul
inc
and
adc
pusha
rcrb
dec
jl
lcall
add
sbb
pusha
movsl
inc
daa
sub
rcrb
lods
fstps
clc
int3
cwtl
inc
xor
pushf
js
pusha
pusha
and
xor
pop
incl
shlb
addb
clc
cmp
rolb
jmp
adc
out
test
mov
sahf
andb
rol
dec
jae
loop
xchg
mov
and
pusha
dec
lock
xor
lods
and
pop
push
mov
int
jo
xor
test
pusha
xor
mov
xchg
sub
arpl
cwtl
push
imul
aad
mov
and
mov
shl
mov
add
jle
add
test
lods
addb
mov
cmp
xor
loop
sbb
xor
fidivs
pusha
ljmp
add
adc
inc
push
nop
clc
repnz
cld
jae
add
add
push
push
mov
xchg
ret
dec
jno
add
add
sub
aaa
pop
push
mov
xchg
ret
in
adc
add
push
mov
leave
nop
jmp
add
ss
movsl
mov
ret
nop
clc
repnz
cld
jae
add
push
enter
insb
inc
jb
nop
clc
repnz
cld
jae
add
add
xor
nop
clc
repnz
cld
jae
add
add
push
mov
jp
sub
std
add
fsubl
add
mov
mov
nop
clc
repnz
cld
jae
add
stos
add
sub
fcoms
clc
repnz
cld
jae
mov
nop
test
add
nop
push
mov
leave
nop
jmp
mov
adc
loopne
in
call
leave
nop
jmp
shrl
add
ja
add
pop
push
mov
xchg
ret
mov
mov
add
add
nop
clc
repnz
cld
jae
aas
fwait
push
add
sbb
add
jae
add
add
mov
xchg
ret
add
add
add
add
test
call
jae
rcll
add
add
nop
jmp
adc
test
push
mov
xchg
ret
add
shll
cli
xlat
cmpl
nop
push
mov
leave
nop
jmp
adc
adc
arpl
xchg
dec
push
push
mov
xchg
ret
and
add
fwait
pop
cmpw
nop
clc
repnz
cld
jae
shrl
add
inc
lock
mov
xchg
ret
add
mov
std
lea
nop
push
mov
leave
nop
jmp
add
dec
and
rclb
pusha
rolb
add
outsb
fiadds
mov
nop
clc
repnz
cld
jae
add
add
mov
push
pop
mov
push
mov
xchg
ret
sub
add
add
movsl
in
rorb
mov
xchg
ret
in
add
movsb
add
mov
fcoms
nop
jmp
xchg
add
stos
add
adc
add
jae
push
rorl
out
add
nop
clc
repnz
cld
jae
hlt
roll
push
mov
xchg
ret
add
add
add
mov
jns
nop
clc
repnz
cld
jae
and
add
and
cmpsb
addl
adc
add
add
cwtl
inc
fwait
push
mov
xchg
ret
add
movsb
add
add
add
addl
nop
push
mov
leave
nop
jmp
add
add
add
nop
clc
repnz
cld
jae
add
adc
mov
nop
push
mov
leave
nop
jmp
je
add
ja
nop
fistpl
nop
push
mov
leave
nop
jmp
movsb
xchg
movsl
add
mov
loopne
xor
push
mov
xchg
ret
fwait
xlat
add
adc
add
inc
jo
xchg
push
mov
xchg
ret
add
jg
in
mov
pusha
add
adc
mov
nop
clc
repnz
cld
jae
ficoms
jne
nop
clc
repnz
cld
jae
add
add
pusha
in
add
nop
clc
repnz
cld
jae
stos
add
push
nop
clc
repnz
cld
jae
add
add
movsb
mov
xlat
mov
nop
clc
repnz
cld
jae
hlt
fidivrs
add
add
fwait
nop
push
mov
leave
nop
jmp
add
add
add
repnz
cld
jae
fwait
add
mov
jne
nop
push
mov
leave
nop
jmp
dec
arpl
push
lahf
mov
nop
clc
repnz
cld
jae
add
ss
jg
mov
addl
cmp
ret
add
mov
add
jno
push
sbb
xor
dec
ss
nop
push
mov
leave
nop
jmp
aas
ja
gs
nop
clc
repnz
cld
jae
add
add
fistpl
mov
xchg
ret
push
add
ficoms
aas
stos
nop
push
mov
leave
nop
jmp
add
jl
mov
add
add
cmp
push
mov
xchg
ret
add
add
adc
xor
nop
clc
repnz
cld
jae
add
add
nop
cld
jae
fwait
mov
inc
jmp
out
pop
nop
push
mov
leave
nop
jmp
roll
add
roll
add
in
addb
cmp
ret
add
add
add
mov
nop
clc
repnz
cld
jae
dec
add
pop
push
push
mov
xchg
ret
nop
ja
add
add
add
repnz
cld
jae
stos
insb
in
add
dec
pop
jmp
nop
clc
repnz
cld
jae
add
sbb
clc
repnz
cld
jae
add
dec
adc
ja
inc
loopne
movzwl
nop
clc
repnz
cld
jae
push
push
jl
xchg
xchg
movsb
add
aam
push
nop
clc
repnz
cld
jae
add
nop
and
rolb
cmp
nop
push
mov
leave
nop
jmp
add
add
adc
push
pop
nop
clc
repnz
cld
jae
add
add
add
mov
enter
nop
cld
jae
add
xlat
add
nop
clc
repnz
cld
jae
xchg
fwait
mov
push
mov
xchg
ret
in
ficoms
int
pop
jae
clc
repnz
cld
jae
std
fiadds
and
nop
std
testl
nop
push
mov
leave
nop
jmp
add
stc
sub
nop
clc
repnz
cld
jae
add
insb
outsb
sti
push
nop
clc
repnz
cld
jae
add
adc
add
add
and
push
mov
leave
nop
jmp
add
add
add
fwait
nop
clc
repnz
cld
jae
add
push
fiadds
add
ja
movzwl
nop
clc
repnz
cld
jae
std
add
cli
mov
push
mov
leave
nop
jmp
add
add
fisubs
jno
add
adc
sub
mov
mov
clc
repnz
cld
jae
jl
add
je
xchg
push
nop
push
mov
leave
nop
jmp
add
add
inc
dec
add
pop
call
nop
clc
repnz
cld
jae
in
adc
flds
test
and
add
dec
hlt
add
nop
clc
repnz
cld
jae
movsl
in
in
ja
pop
jl
test
rcr
call
cld
jae
std
add
jmp
add
mov
nop
clc
repnz
cld
jae
add
dec
add
jl
and
adc
sub
add
nop
clc
repnz
cld
jae
add
add
loopne
scas
add
mov
nop
cld
jae
add
add
fwait
mov
add
nop
clc
repnz
cld
jae
add
dec
add
mov
xchg
sub
nop
clc
repnz
cld
jae
add
je
add
ljmp
mov
xchg
ret
add
add
lea
nop
clc
repnz
cld
jae
rorl
je
and
repnz
cld
jae
fwait
add
add
fisubrs
lss
nop
clc
repnz
cld
jae
adc
clc
repnz
cld
jae
adc
add
insb
ljmp
loop
inc
add
jmp
xchg
add
add
mov
mov
clc
repnz
cld
jae
hlt
insb
ja
shll
push
mov
xchg
ret
add
add
add
imul
nop
clc
repnz
cld
jae
jg
add
add
cmp
push
mov
xchg
ret
inc
sub
adc
xchg
sbb
xor
nop
clc
repnz
cld
jae
movsb
add
fwait
add
fwait
push
mov
xchg
ret
cli
sub
cli
add
ja
push
mov
push
mov
xchg
ret
std
add
and
add
inc
and
adc
add
std
add
add
mov
add
nop
push
mov
leave
nop
jmp
mov
add
or
mov
call
nop
clc
repnz
cld
jae
je
add
jbe
nop
push
mov
leave
nop
jmp
fwait
add
xlat
or
inc
or
repnz
cld
jae
fwait
aas
adc
insb
add
fwait
push
mov
xchg
ret
in
sub
add
add
inc
pop
mov
push
mov
xchg
ret
add
fdivp
ds
and
push
test
test
clc
repnz
cld
jae
add
lods
pusha
cmp
pop
nop
clc
repnz
cld
jae
add
add
mov
nop
clc
repnz
cld
jae
add
add
je
mov
inc
cmp
mov
xchg
ret
add
arpl
rclb
cwtl
test
xchg
ret
fwait
add
add
mov
sub
addl
ficoms
add
arpl
push
push
mov
xchg
ret
add
roll
add
mov
ret
mov
nop
push
mov
leave
nop
jmp
adc
xchg
fld1
push
mov
xchg
ret
add
add
mov
nop
cld
jae
in
add
add
movzwl
nop
clc
repnz
cld
jae
dec
add
nop
clc
repnz
cld
jae
in
add
dec
dec
add
repnz
cld
jae
movsl
movsl
movsb
add
in
add
outsl
push
push
mov
xchg
ret
add
add
add
and
insl
xor
nop
push
mov
leave
nop
jmp
hlt
inc
mov
inc
scas
inc
mov
push
mov
leave
nop
jmp
add
sub
add
add
pusha
xor
mov
sbb
nop
cld
jae
push
mov
jmp
mov
nop
clc
repnz
cld
jae
add
dec
add
ss
jne
nop
clc
repnz
cld
jae
add
add
xor
clc
repnz
cld
jae
rcr
add
jle
stos
add
nop
push
mov
leave
nop
jmp
movsb
mov
dec
add
mov
repnz
cld
jae
inc
in
add
inc
sar
jne
nop
clc
repnz
cld
jae
fwait
push
ja
add
ficomps
add
fistpl
nop
clc
repnz
cld
jae
add
adc
ja
or
clc
repnz
cld
jae
add
jmp
test
sub
add
jae
add
adc
nop
push
mov
leave
nop
jmp
cli
loope
mov
sbbb
sbbl
add
nop
jmp
add
outsb
mov
mov
nop
clc
repnz
cld
jae
rcll
add
jl
mov
push
mov
xchg
ret
arpl
xlat
roll
xor
in
leave
nop
jmp
adc
js
mov
je
nop
push
mov
leave
nop
jmp
add
add
push
mov
leave
nop
jmp
add
xlat
fiadds
add
cmp
inc
xor
nop
clc
repnz
cld
jae
add
in
add
clc
repnz
cld
jae
fidivs
add
movsb
nop
clc
repnz
cld
jae
fidivrs
add
add
jno
push
es
jecxz
push
mov
leave
nop
jmp
adc
mov
sti
push
push
mov
xchg
ret
add
add
mov
mov
nop
clc
repnz
cld
jae
aas
add
jl
lahf
movzwl
nop
clc
repnz
cld
jae
add
and
stos
notl
nop
jmp
rcll
add
add
jae
add
mov
aad
nop
clc
repnz
cld
jae
in
ja
add
dec
mov
add
nop
clc
repnz
cld
jae
adc
add
add
mov
test
adc
jae
xchg
in
mov
mov
xchg
ret
add
std
ss
cmp
in
cmp
loopne
jb
add
nop
clc
repnz
cld
jae
aas
sub
movsb
add
add
nop
push
mov
leave
nop
jmp
xlat
push
add
adc
in
push
mov
xchg
ret
add
add
add
adc
clc
repnz
cld
jae
hlt
je
mov
add
nop
push
mov
leave
nop
jmp
ss
add
mov
inc
nop
clc
repnz
cld
jae
movsl
movsl
add
ja
mov
loopne
xor
std
add
nop
clc
repnz
cld
jae
add
je
and
and
add
add
jl
adc
jmp
mov
mov
enter
roll
mov
xchg
ret
add
add
ja
add
pop
nop
push
mov
leave
nop
jmp
add
dec
add
dec
push
mov
xchg
ret
add
add
add
add
push
push
mov
xchg
ret
mov
aas
in
dec
add
add
push
dec
jmp
xchg
xlat
add
mov
add
push
nop
push
mov
leave
nop
jmp
adc
add
add
inc
mov
clc
nop
clc
repnz
cld
jae
push
adc
sub
add
sbb
add
nop
clc
repnz
cld
jae
add
add
add
push
nop
clc
repnz
cld
jae
add
mov
rclb
jae
movsl
add
js
movl
push
nop
clc
repnz
cld
jae
mov
inc
ja
xchg
add
nop
push
mov
leave
nop
jmp
mov
ficomps
nop
clc
repnz
cld
jae
add
add
jno
orl
add
jae
movsb
ja
mov
add
nop
jmp
xchg
add
and
clc
repnz
cld
jae
fidivs
add
jp
inc
add
add
jg
loope
add
loopne
inc
jl
mov
clc
repnz
cld
jae
adc
fwait
nop
clc
repnz
cld
jae
add
add
add
mov
nop
clc
repnz
cld
jae
add
xchg
add
add
sbb
nop
cld
jae
ja
fwait
add
add
movb
mov
xchg
ret
add
rorl
sub
enter
adc
mov
xchg
ret
add
add
add
jg
div
jmp
add
hlt
add
add
in
add
shll
dec
sub
jae
fiadds
and
ds
rclb
nop
jmp
add
nop
add
add
nop
clc
repnz
cld
jae
add
aas
movsb
adc
notb
call
nop
jmp
adc
jg
mov
loopne
jp
xchg
popl
nop
push
mov
leave
nop
jmp
add
add
mov
adc
add
nop
clc
repnz
cld
jae
arpl
movsl
in
push
nop
push
mov
leave
nop
jmp
sub
add
stos
adc
xchg
nop
clc
repnz
cld
jae
dec
dec
je
call
push
mov
leave
nop
jmp
mov
loope
cmp
pop
nop
push
mov
leave
nop
jmp
mov
add
adc
or
clc
repnz
cld
jae
add
repnz
pop
pop
push
mov
xchg
ret
roll
add
adc
arpl
inc
mov
movsl
xchg
xchg
ret
mov
ds
add
jge
nop
clc
repnz
cld
jae
aas
mov
fistpl
clc
repnz
cld
jae
add
shl
mov
pusha
add
rep
nop
clc
repnz
cld
jae
add
add
add
nop
clc
repnz
cld
jae
nop
sub
add
push
sbb
xchg
nop
clc
repnz
cld
jae
adc
add
fiadds
add
jmp
fwait
add
fwait
mov
push
sar
adc
inc
add
add
nop
push
mov
leave
nop
jmp
add
xchg
add
std
add
nop
clc
repnz
cld
jae
add
roll
mov
and
clc
repnz
cld
jae
push
jmp
adc
ja
test
adcb
push
mov
leave
nop
jmp
add
cmp
nop
push
mov
leave
nop
jmp
adc
xchg
add
sub
loopne
rolb
aad
push
mov
xchg
ret
mov
adc
add
pushf
inc
add
mov
add
clc
cmp
pop
orl
jae
jno
in
add
nop
push
mov
leave
nop
jmp
push
add
roll
jmp
add
pushl
push
mov
xchg
ret
add
add
jne
nop
clc
repnz
cld
jae
shll
notl
jae
js
add
add
fisubrs
fistpl
push
mov
xchg
ret
add
add
adc
adc
mov
nop
clc
repnz
cld
jae
xlat
jl
jns
jge
nop
clc
repnz
cld
jae
mov
add
push
mov
xchg
ret
add
add
add
adc
ss
nop
cld
jae
add
fwait
js
push
nop
clc
repnz
cld
jae
add
mov
adc
push
push
mov
xchg
ret
arpl
movsb
mov
add
fidivrs
inc
add
dec
mov
push
mov
xchg
ret
add
adc
cli
add
nop
clc
repnz
cld
jae
mov
add
js
add
je
js
mov
xchg
ret
add
push
adc
push
push
mov
xchg
ret
in
push
dec
mov
je
rep
nop
clc
repnz
cld
jae
adc
add
cli
mov
out
fld1
push
mov
xchg
ret
mov
add
add
add
pusha
nop
push
mov
leave
nop
jmp
add
add
rcrb
add
inc
rcrb
inc
or
clc
repnz
cld
jae
fwait
add
sarl
cmpsl
mov
nop
clc
repnz
cld
jae
aas
add
sub
lea
rolb
add
jae
adc
add
xchg
sub
repnz
cld
jae
add
je
hlt
add
mov
push
mov
xchg
ret
add
xlat
add
add
into
mov
mov
leave
nop
jmp
add
add
add
mov
nop
clc
repnz
cld
jae
rcrl
jmp
mov
das
add
nop
clc
repnz
cld
jae
jno
mov
test
mov
xchg
ret
add
je
movl
add
nop
clc
repnz
cld
jae
loope
and
jmp
nop
cld
jae
fsubp
mov
loope
scas
push
push
mov
xchg
ret
movsl
or
mov
leave
nop
jmp
mov
add
add
ret
call
nop
clc
repnz
cld
jae
insb
nop
add
out
call
push
mov
xchg
ret
add
in
cmc
push
nop
clc
repnz
cld
jae
mov
xlat
add
pop
jmp
add
jmp
adc
stos
add
add
add
call
jae
add
nop
clc
repnz
cld
jae
add
add
aam
fiadds
add
add
cld
jae
hlt
xchg
sub
push
mov
nop
clc
repnz
cld
jae
add
sub
inc
je
nop
clc
repnz
cld
jae
add
dec
push
mov
xchg
ret
add
je
xchg
pusha
push
mov
xchg
ret
xchg
mov
add
je
nop
clc
repnz
cld
jae
adc
nop
clc
repnz
cld
jae
rcl
add
js,pt
loop
sub
nop
cld
jae
add
add
cs
xor
add
dec
in
sub
in
leave
nop
jmp
add
mov
movsl
add
and
call
jae
add
nop
push
mov
leave
nop
jmp
mov
fwait
xlat
add
je
nop
clc
repnz
cld
jae
adc
nop
clc
repnz
cld
jae
add
add
cli
add
ja
movsb
push
mov
xchg
ret
add
add
outsb
call
mov
xchg
ret
and
add
js
add
push
mov
leave
nop
jmp
dec
add
mov
pusha
and
push
nop
push
mov
leave
nop
jmp
movsl
add
nop
adc
sarb
add
nop
clc
repnz
cld
jae
inc
adc
mov
nop
clc
repnz
cld
jae
add
add
fwait
jg
sarl
mov
pusha
sarb
inc
add
fiadds
add
add
mov
nop
clc
repnz
cld
jae
add
and
nop
clc
repnz
cld
jae
add
pop
fwait
nop
clc
repnz
cld
jae
and
fwait
add
adc
ja
push
push
mov
xchg
ret
add
add
add
jno
jecxz
jne
push
mov
xchg
ret
add
mov
adc
jne
nop
clc
repnz
cld
jae
mov
add
mov
nop
clc
repnz
cld
jae
mov
add
mov
clc
repnz
cld
jae
dec
adc
ja
add
push
mov
xchg
ret
add
add
nop
xchg
loopne
fstpl
cld
jae
add
add
roll
xchg
mov
nop
push
mov
leave
nop
jmp
add
roll
xor
loopne
mov
sbb
cmp
nop
jmp
add
adc
test
sti
pop
push
mov
xchg
ret
movsl
add
jl
loope
dec
add
nop
clc
repnz
cld
jae
inc
add
add
add
mov
loop
push
mov
xchg
ret
add
xlat
nop
add
add
pop
nop
clc
repnz
cld
jae
add
fiadds
add
add
cmp
fistpl
nop
clc
repnz
cld
jae
and
push
add
lahf
ja
nop
clc
repnz
cld
jae
add
loope
add
nop
clc
repnz
cld
jae
add
movsl
movsl
movsl
insb
adc
rclb
adcl
add
add
xor
nop
clc
repnz
cld
jae
jno
add
aas
pop
push
mov
xchg
ret
add
adc
aas
cwtl
xchg
pop
and
push
mov
leave
nop
jmp
movsb
dec
movsb
std
fwait
stos
jns
les
add
add
jae
aas
js
cltd
push
nop
clc
repnz
cld
jae
add
jl
add
call
nop
push
mov
leave
nop
jmp
sub
dec
add
adc
push
mov
xchg
ret
add
add
add
add
andb
stc
jmp
add
add
push
add
add
add
dec
jmp
nop
clc
repnz
cld
jae
inc
adc
mov
icebp
lods
push
mov
xchg
ret
sub
inc
add
sbb
xor
nop
clc
repnz
cld
jae
add
jg
add
add
xor
andb
add
adc
xchg
nop
push
mov
leave
nop
jmp
add
add
pop
cmp
push
mov
leave
nop
jmp
add
dec
xchg
add
adc
jl
add
adc
fdivs
inc
mov
nop
clc
repnz
cld
jae
add
fidivs
mov
push
mov
xchg
ret
nop
add
add
movsl
jno
mov
inc
test
repnz
cld
jae
add
adc
add
inc
sar
cs
nop
clc
repnz
cld
jae
add
add
push
add
clc
orl
frstpm(287
incl
add
mov
cmp
clc
repnz
cld
jae
add
add
movl
inc
nop
clc
repnz
cld
jae
fidivrs
add
add
pusha
rorb
loop
push
nop
push
mov
leave
nop
jmp
adc
add
push
mov
mov
xchg
ret
add
add
movsl
fwait
add
cs
insb
nop
clc
repnz
cld
jae
add
movsl
add
pop
nop
push
mov
leave
nop
jmp
movsl
fwait
adc
xchg
or
lods
push
add
add
shrl
and
sti
nop
clc
repnz
cld
jae
add
fiadds
add
mov
call
nop
push
mov
leave
nop
jmp
add
jg
adc
repnz
cld
jae
add
jg
sub
loop
add
nop
push
mov
leave
nop
jmp
jg
add
adc
add
mov
nop
clc
repnz
cld
jae
add
adc
ja
add
clc
nop
push
mov
leave
nop
jmp
add
add
pop
nop
clc
repnz
cld
jae
add
js
add
pop
jmp
mov
mov
add
adc
call
nop
jmp
add
mov
push
in
nop
clc
repnz
cld
jae
xchg
movl
jmp
nop
cld
jae
sub
nop
add
add
pop
nop
clc
repnz
cld
jae
add
inc
ds
pop
nop
push
mov
leave
nop
jmp
add
mov
add
nop
push
mov
leave
nop
jmp
dec
fwait
add
adc
mov
nop
clc
repnz
cld
jae
mov
jno
movsl
pop
ror
push
mov
xchg
ret
add
xchg
add
ss
add
nop
clc
repnz
cld
jae
add
jno
add
nop
push
mov
leave
nop
jmp
adc
ss
fstl
cld
jae
add
je
add
add
xchg
nop
clc
repnz
cld
jae
add
nop
fists
clc
repnz
cld
jae
adc
adc
sub
rolb
mov
nop
clc
repnz
cld
jae
add
cmp
nop
clc
repnz
cld
jae
jg
add
inc
cmp
add
nop
push
mov
leave
nop
jmp
js
je
aas
add
cmp
daa
add
nop
clc
repnz
cld
jae
insb
dec
add
push
push
nop
clc
repnz
cld
jae
sub
stos
add
mov
xchg
ret
add
movsl
add
mov
push
mov
xchg
ret
add
ficoms
dec
cli
inc
dec
mov
push
mov
xchg
ret
add
add
fldcw
inc
push
dec
nop
clc
repnz
cld
jae
add
dec
add
clc
repnz
cld
jae
add
dec
movsl
dec
add
mov
xchg
ret
loope
add
ja
imul
nop
jmp
add
add
adc
add
nop
jmp
mov
mov
inc
nop
clc
repnz
cld
jae
hlt
fsubrp
push
add
nop
cld
jae
mov
mov
nop
clc
repnz
cld
jae
fwait
add
adc
add
nop
clc
repnz
cld
jae
add
ja
add
aas
leave
nop
clc
repnz
cld
jae
adc
adc
inc
pop
je
mov
les
nop
push
mov
leave
nop
jmp
add
add
add
push
mov
leave
nop
jmp
js
jl
add
push
nop
clc
repnz
cld
jae
add
movsl
add
adc
mov
inc
mov
push
mov
xchg
ret
add
adc
add
aad
nop
clc
repnz
cld
jae
push
fwait
in
fdivrp
add
repnz
cld
jae
cli
add
add
clc
repnz
cld
jae
add
add
or
call
jae
add
add
jo
add
add
add
push
sbb
cld
jae
adc
js
add
dec
in
test
shrb
jne
nop
clc
repnz
cld
jae
add
aas
jmp
fwait
mov
mov
leave
nop
jmp
add
adc
fwait
add
jmp
movsl
add
fdivp
fiadds
add
adc
add
and
clc
repnz
cld
jae
add
fisubrs
or
jnp
add
add
add
dec
mov
inc
cwtl
dec
mov
nop
clc
repnz
cld
jae
add
movsl
xchg
jg
test
mov
xchg
ret
add
ja
add
nop
add
push
mov
push
mov
xchg
ret
movl
dec
insb
xor
nop
push
mov
leave
nop
jmp
add
jno
arpl
mov
leave
nop
jmp
add
add
adc
roll
nop
clc
repnz
cld
jae
add
add
fwait
add
sub
mov
repnz
cld
jae
ja
add
adc
adc
repnz
cld
jae
add
add
add
add
jne
nop
clc
repnz
cld
jae
sub
mov
nop
clc
repnz
cld
jae
jg
push
add
push
nop
clc
repnz
cld
jae
add
add
add
pop
mov
nop
clc
repnz
cld
jae
mov
add
mov
adc
push
mov
leave
nop
jmp
jmp
in
fwait
inc
rclb
add
push
nop
clc
repnz
cld
jae
add
ja
sar
movl
nop
clc
repnz
cld
jae
push
xlat
add
adc
lea
nop
push
mov
leave
nop
jmp
in
add
add
nop
cld
jae
inc
add
add
add
out
sbb
cld
jae
add
ja
lret
repz
mov
xchg
ret
add
sub
add
nop
clc
repnz
cld
jae
add
test
add
nop
clc
repnz
cld
jae
add
add
outsb
adc
clc
repnz
cld
jae
adc
add
ja
shr
add
add
add
nop
jmp
js
nop
adc
je
dec
nop
clc
repnz
cld
jae
push
add
add
std
dec
nop
clc
repnz
cld
jae
fwait
add
cli
add
add
mov
sub
mov
xchg
ret
dec
mov
ja
dec
jp
fld1
push
mov
xchg
ret
sub
mov
testb
push
mov
leave
nop
jmp
jmp
add
add
add
pop
dec
ljmp
clc
repnz
cld
jae
fsubp
add
add
mov
orb
fistpl
nop
clc
repnz
cld
jae
add
xchg
add
xchg
inc
add
shl
add
fisubs
push
mov
xchg
ret
xchg
dec
adc
add
rcll
imul
cmp
ret
add
aas
add
pusha
addb
add
mov
nop
clc
repnz
cld
jae
add
in
shll
rclb
leave
cwtl
inc
add
add
add
inc
loopne
push
mov
leave
nop
jmp
add
add
rcll
and
add
in
add
insb
movsl
mov
call
jae
mov
dec
add
add
push
mov
xchg
ret
add
add
movl
mov
nop
clc
repnz
cld
jae
add
mov
nop
clc
repnz
cld
jae
adc
adc
movsl
add
nop
push
mov
leave
nop
jmp
add
adc
add
aas
inc
push
nop
push
mov
leave
nop
jmp
adc
mov
push
nop
clc
repnz
cld
jae
movsb
add
fiadds
add
pop
ljmp
cld
jae
movsl
nop
loope
dec
js
movsl
inc
into
sbb
add
sbbb
cmp
push
mov
xchg
ret
fwait
add
add
add
nop
clc
repnz
cld
jae
push
adc
sub
add
add
mov
xchg
ret
add
cli
adc
dec
mov
add
nop
push
mov
leave
nop
jmp
fidivrs
mov
mov
xchg
ret
rcl
mov
jmp
add
nop
clc
repnz
cld
jae
add
add
adc
bound
inc
imul
nop
clc
repnz
cld
jae
mov
insb
inc
mov
repnz
cld
jae
add
add
in
dec
popf
xor
nop
push
mov
leave
nop
jmp
in
add
movsl
je
nop
clc
repnz
cld
jae
add
add
nop
push
mov
leave
nop
jmp
add
je
fiadds
adc
das
mov
xchg
ret
adc
add
add
adc
nop
cld
jae
movsb
fwait
mov
add
aas
push
push
mov
xchg
ret
push
js
ja
add
add
lods
shlb
cli
nop
clc
repnz
cld
jae
roll
add
mov
std
add
nop
clc
repnz
cld
jae
shll
pusha
pop
or
shrb
add
clc
repnz
cld
jae
and
push
dec
pop
push
mov
xchg
ret
push
js
jmp
add
hlt
add
call
jae
add
out
add
nop
clc
repnz
cld
jae
add
add
push
mov
xchg
ret
add
sub
ficoms
adc
mov
loop
push
mov
xchg
ret
add
mov
add
fwait
outsb
jbe
add
add
nop
clc
repnz
cld
jae
adc
sub
nop
clc
repnz
cld
jae
mov
adc
lret
enter
dec
add
loope
fwait
add
add
add
add
stc
pop
push
mov
xchg
ret
add
sub
mov
nop
clc
repnz
cld
jae
adc
aas
add
push
mov
xchg
ret
add
add
stos
mov
or
pause
push
mov
leave
nop
jmp
adc
add
mov
in
leave
nop
jmp
fiadds
add
add
xchg
mov
nop
clc
repnz
cld
jae
std
add
add
popa
mov
nop
clc
repnz
cld
jae
dec
add
add
mov
xchg
ret
and
fwait
arpl
add
ficomps
mov
nop
clc
repnz
cld
jae
mov
mov
xchg
pusha
nop
clc
repnz
cld
jae
std
add
add
add
add
jae
ja
roll
add
out
and
pusha
aam
ds
nop
cld
jae
add
add
fidivs
mov
je
nop
push
mov
leave
nop
jmp
mov
pop
jo
test
nop
push
mov
leave
nop
jmp
sub
add
add
dec
push
nop
push
mov
leave
nop
jmp
nop
adc
add
clc
mov
nop
cld
jae
mov
dec
add
jno
rorl
loop
inc
add
nop
add
jg
jmp
push
add
inc
shlb
nop
push
mov
leave
nop
jmp
add
xchg
xchg
add
nop
clc
repnz
cld
jae
add
xor
push
mov
leave
nop
jmp
adc
add
add
loope
dec
cmp
push
mov
leave
nop
jmp
push
xlat
add
add
jecxz
scas
enter
nop
cld
jae
add
hlt
movsl
add
pop
push
mov
xchg
ret
add
add
add
loope
hlt
xchg
test
mov
je
add
jae
add
ds
push
mov
xchg
ret
add
aam
mov
sahf
push
shl
nop
clc
repnz
cld
jae
add
ja
fwait
sub
mov
push
mov
xchg
ret
add
mov
jmp
mov
leave
nop
jmp
movsl
inc
add
add
lock
inc
add
mov
js
xor
add
nop
jmp
add
ds
push
nop
clc
repnz
cld
jae
add
mov
add
mov
leave
nop
jmp
add
jmp
add
push
and
or
add
add
roll
add
push
lret
div
nop
push
mov
leave
nop
jmp
mov
fwait
add
nop
cld
jae
hlt
fisubs
add
add
add
xchg
clc
repnz
cld
jae
mov
add
dec
push
push
mov
xchg
ret
add
add
add
add
hlt
in
mov
repnz
cld
jae
insb
sub
add
add
pop
push
nop
clc
repnz
cld
jae
add
add
add
inc
add
nop
push
mov
leave
nop
jmp
add
add
nop
cld
jae
mov
add
add
icebp
add
nop
clc
repnz
cld
jae
add
add
mov
repnz
cld
jae
add
rcll
xchg
push
mov
leave
nop
jmp
sarl
add
mov
clc
es
xchg
cmpsb
addb
add
jae
je
fidivrs
pusha
nop
clc
repnz
cld
jae
add
movsl
mov
in
add
push
mov
leave
nop
jmp
mov
mov
add
fld1
push
mov
xchg
ret
mov
adc
dec
jl
add
repnz
cld
jae
add
xchg
xchg
lea
xchg
ret
fwait
dec
fimuls
add
adc
mov
nop
clc
repnz
cld
jae
movsb
roll
nop
add
xlat
mov
nop
clc
repnz
cld
jae
add
add
add
lea
rclb
addb
cmp
ret
add
add
pushf
imul
scas
aam
incl
in
adc
and
in
es
nop
push
mov
leave
nop
jmp
xchg
add
cltd
and
nop
clc
repnz
cld
jae
nop
shll
orb
adc
jae
adc
add
pusha
add
cmpw
nop
push
mov
leave
nop
jmp
add
int
pop
jae
push
mov
leave
nop
jmp
sub
xchg
add
nop
clc
repnz
cld
jae
add
jl,pt
sub
jne
nop
clc
repnz
cld
jae
movsb
add
push
nop
clc
repnz
cld
jae
add
fiadds
lcall
nop
clc
repnz
cld
jae
sub
add
jno
sub
add
je
add
add
arpl
nop
clc
repnz
cld
jae
mov
insb
add
andb
ret
pusha
push
mov
xchg
ret
fwait
add
add
add
xchg
jne
nop
clc
repnz
cld
jae
loope
dec
mov
nop
push
mov
leave
nop
jmp
add
shll
stos
add
call
jae
adc
fwait
sarb
sbb
push
mov
xchg
ret
add
add
jmp
rcrl
add
push
mov
xchg
ret
movsl
add
rcrl
and
push
mov
leave
nop
jmp
jmp
add
adc
jae
loope
add
cs
cmp
and
nop
push
mov
leave
nop
jmp
je
add
push
mov
leave
nop
jmp
movsb
arpl
xorl
nop
push
mov
leave
nop
jmp
add
jae
inc
adc
clc
repnz
cld
jae
jno
aas
add
push
mov
xchg
ret
add
add
in
add
mov
nop
clc
repnz
cld
jae
add
fwait
xlat
add
adc
std
pop
nop
clc
repnz
cld
jae
add
add
cltd
xlat
call
jae
add
mov
add
nop
clc
repnz
cld
jae
std
roll
adc
dec
jl
mov
push
mov
xchg
ret
insb
add
mov
cli
je
shr
nop
clc
repnz
cld
jae
std
mov
cmp
nop
cld
jae
xlat
add
in
rcll
lcall
add
add
std
add
movsl
shrl
dec
add
push
mov
xchg
ret
add
sub
push
add
add
mov
nop
clc
repnz
cld
jae
add
stos
mov
push
mov
xchg
ret
jno
add
je
add
fmuls
add
nop
clc
repnz
cld
jae
add
dec
nop
insb
hlt
xchg
add
push
mov
xchg
ret
add
and
add
add
jo
test
nop
push
mov
leave
nop
jmp
add
xchg
inc
popa
nop
clc
repnz
cld
jae
add
mov
ja
push
nop
clc
repnz
cld
jae
xlat
ds
jl
jl
xchg
clc
repnz
cld
jae
add
pop
pop
push
mov
xchg
ret
add
adc
add
add
ja
loopne
insb
adc
xlat
nop
push
mov
leave
nop
jmp
mov
popa
push
mov
xchg
ret
movsb
in
roll
add
loope
in
testl
jmp
jl
fwait
add
jno
scas
fld1
push
mov
xchg
ret
add
add
add
movsl
add
nop
clc
repnz
cld
jae
adc
mov
movsb
fiaddl
shr
push
mov
xchg
ret
add
inc
inc
cld
push
mov
xchg
ret
add
add
mov
aaa
push
nop
clc
repnz
cld
jae
add
jl
add
add
push
mov
xchg
ret
in
movsb
je
cli
jg
push
dec
rcll
clc
repnz
cld
jae
add
rcl
add
and
nop
clc
repnz
cld
jae
dec
mov
add
add
mov
jp
nop
push
mov
leave
nop
jmp
inc
add
add
add
call
nop
clc
repnz
cld
jae
in
movsl
add
mov
nop
push
mov
leave
nop
jmp
add
add
adc
add
imul
add
adc
jno
ds
add
nop
cld
jae
stos
adc
jno
js
add
sbb
nop
clc
repnz
cld
jae
mov
std
add
add
xor
push
add
add
add
add
add
dec
stos
add
call
nop
jmp
roll
ja
js
dec
fistpl
push
mov
xchg
ret
mov
aas
mov
inc
xor
nop
clc
repnz
cld
jae
mov
aas
add
call
jae
jl
sub
movsl
add
nop
clc
repnz
cld
jae
stos
add
ss
jmp
xchg
xchg
ret
adc
adc
mov
mov
clc
repnz
cld
jae
add
je
stos
cs
push
nop
clc
repnz
cld
jae
xlat
mov
ja
out
test
add
js
fdivs
push
mov
xchg
ret
add
jl
add
add
fisttps
mov
repnz
cld
jae
add
add
jle
xchg
stos
push
mov
xchg
ret
mov
add
in
cs
inc
nop
clc
repnz
cld
jae
sub
add
arpl
jl
jmp
nop
push
mov
leave
nop
jmp
xchg
add
stos
push
add
js
jle
mov
nop
push
mov
leave
nop
jmp
xlat
je
movsl
shrb
dec
cmp
add
js
mov
xchg
add
add
clc
repnz
cld
jae
add
mov
inc
mov
nop
clc
repnz
cld
jae
add
js
adc
and
push
mov
xchg
ret
fwait
add
in
add
mov
nop
push
mov
leave
nop
jmp
roll
aas
add
adc
xchg
adc
pushl
jmp
ljmp
add
mov
add
clc
repnz
cld
jae
mov
adc
jl
fwait
jp
not
push
mov
xchg
ret
add
ja
add
mov
shlb
clc
add
nop
jmp
add
add
adc
nop
clc
repnz
cld
jae
fwait
jg
xchg
movl
loopne
out
daa
jb
nop
clc
repnz
cld
jae
add
cmp
nop
push
mov
leave
nop
jmp
hlt
add
sub
push
mov
leave
nop
jmp
mov
nop
jb
mov
push
mov
xchg
ret
std
nop
add
mov
push
nop
clc
repnz
cld
jae
cli
nop
in
add
add
sbb
mov
xchg
ret
add
mov
test
inc
pusha
pop
lods
push
mov
xchg
ret
roll
add
add
add
sbb
addb
cmp
ret
cs
add
add
sub
lods
fld1
nop
clc
repnz
cld
jae
add
add
nop
fwait
add
jns
incl
add
fwait
jno
add
add
fwait
cld
andb
xor
push
mov
xchg
ret
aas
add
roll
add
xor
add
push
mov
xchg
ret
add
je
rorl
pop
rep
nop
clc
repnz
cld
jae
add
add
push
nop
push
mov
leave
nop
jmp
jmp
add
ja
xchg
in
leave
nop
jmp
fiadds
adc
mov
nop
clc
repnz
cld
jae
mov
mov
push
mov
xchg
ret
add
adc
ja
add
aaa
cld
nop
clc
repnz
cld
jae
add
mov
mov
out
push
nop
clc
repnz
cld
jae
in
add
add
add
push
mov
xchg
ret
add
add
cmpsl
mov
nop
clc
repnz
cld
jae
add
in
ja
rcr
imul
nop
cld
jae
add
add
ss
sbb
test
call
jae
jno
add
fwait
push
mov
xchg
ret
std
add
stos
adc
add
push
movsb
push
mov
xchg
ret
in
jg
adc
add
je
nop
clc
repnz
cld
jae
jg
add
lods
nop
clc
repnz
cld
jae
adc
add
mov
mov
and
inc
hlt
popa
ret
nop
clc
repnz
cld
jae
inc
adc
hlt
add
xchg
nop
clc
repnz
cld
jae
mov
ficoms
push
mov
xchg
ret
add
roll
ja
mov
dec
sub
jb
inc
add
adc
add
jne
nop
clc
repnz
cld
jae
add
mov
clc
repnz
cld
jae
fwait
add
rcrb
lcall
add
shll
aaa
mov
nop
clc
repnz
cld
jae
add
adc
rolb
add
jae
add
adc
loope
rclb
add
jae
mov
sbb
push
mov
leave
nop
jmp
push
add
jmp
push
and
clc
repnz
cld
jae
loope
fwait
fwait
add
hlt
call
jae
fwait
dec
insb
cltd
add
nop
push
mov
leave
nop
jmp
xchg
add
xchg
ficoms
into
aad
nop
clc
repnz
cld
jae
add
add
ds
push
push
repz
nop
push
mov
leave
nop
jmp
add
scas
jmp
add
add
add
adc
sub
push
mov
xchg
ret
add
shrl
rorb
ja
add
add
add
in
add
movsl
push
nop
clc
repnz
cld
jae
jl
add
add
add
xor
push
mov
leave
nop
jmp
add
adc
rcll
mov
nop
clc
repnz
cld
jae
hlt
add
movsl
adc
mov
repnz
cld
jae
je
add
outsl
add
nop
push
mov
leave
nop
jmp
add
add
dec
pop
mov
nop
clc
repnz
cld
jae
stos
jmp
fwait
insb
jg
push
nop
push
mov
leave
nop
jmp
fwait
add
add
loope
in
push
pop
fld1
nop
clc
repnz
cld
jae
add
push
add
rcll
xchg
jae
add
push
mov
nop
clc
repnz
cld
jae
add
add
nop
xchg
cmp
outsb
inc
add
cli
cs
add
add
hlt
dec
test
push
mov
xchg
ret
movsl
xchg
add
push
mov
mov
out
adc
add
push
iret
mov
sub
inc
test
shrb
test
loopne
mov
and
inc
mov
out
jl
and
add
addb
cmp
daa
mov
cmc
xchg
pusha
mov
loop
and
icebp
fstpt
sbb
or
pop
push
movb
iret
repnz
cli
imulb
and
lods
cltd
mov
and
hlt
adc
inc
mov
pusha
iret
adc
loop
in
add
cltd
and
mov
xchg
pop
and
rcrb
add
add
inc
and
adc
pop
lds
testl
loop
fcmovnu
fadds
push
mov
andb
int
in
xchg
cmpsl
ret
movsb
inc
add
jo
rcr
test
push
xchg
mov
out
sbb
jae
pusha
and
push
cmpsl
std
daa
xchg
inc
shl
sub
jle
mov
shll
aaa
lds
jge
push
bound
push
shl
add
fadds
cmp
mov
loop
push
popa
ret
outsl
fiadds
add
push
lret
cmp
pop
daa
push
into
inc
or
adc
mov
je
sub
pop
addr16
je
push
sbb
nop
mov
pop
invd
inc
inc
stos
push
push
add
jl
or
sti
push
lea
mov
ficompl
push
and
imul
jg
test
mov
jge
xchg
mov
push
adc
adc
cmc
stos
inc
add
scas
pusha
loopne
fimull
push
mov
pusha
adc
xchg
les
jbe
pop
outsb
xchg
pop
xchg
shl
shll
sarl
fdivs
addb
bound
daa
test
ficoml
or
mov
rorb
mov
add
daa
icebp
mov
pusha
cwtl
fistl
pop
push
cltd
sbb
jns
bound
loope
cwtl
stos
xchg
or
dec
and
sbb
stos
and
mov
fstps
loopne
push
mov
es
xchg
nop/reserved
dec
repz
sub
inc
lea
stos
pop
in
stos
pusha
and
mov
sarb
mov
cmp
cmpsl
add
xor
dec
or
inc
in
insb
mov
add
loopne
and
inc
call
xchg
icebp
cmpsb
shlb
bound
inc
lock
movl
fisttpl
stos
pusha
shlb
addb
inc
in
imul
outsb
lcall
pusha
mov
pusha
loopne
pop
mov
movsl
push
inc
mov
jg
mov
jnp
loopne
sbb
jns
push
mov
fstps
les
ljmp
aas
jl
jo
and
inc
test
and
push
movsl
mov
and
addr16
addl
dec
pop
shrb
rolb
clc
push
rolb
push
pcmpgtw
in
jbe
mull
mov
imul
add
sbb
cmpsb
andb
adc
jmp
add
pop
push
jns
lock
insb
sub
testl
rcrl
or
push
enter
nop
ljmp
push
xor
xor
loopne
jp
mov
enter
add
lea
repnz
ja
cld
mov
adc
bound
inc
mov
push
inc
mov
mov
mov
add
dec
lahf
scas
pop
aam
add
and
push
fcmovnbe
mov
in
add
into
push
push
xor
addb
push
adc
loopne
jne
mov
sbb
ficomps
addr16
pop
cld
sarb
ljmp
mov
and
or
inc
pop
mov
fsubp
ja
xchg
addb
test
loopne
stos
mov
rcll
jp
aaa
adc
pop
xor
mov
dec
adc
out
addb
shlb
cmp
xchg
aas
jg
jl
test
pop
inc
ds
sti
mov
sub
mov
cld
push
cltd
or
out
shlb
xchg
xor
xchg
mov
insl
iret
mov
rcll
adc
lahf
mov
or
cld
xor
xor
and
loopne
mov
push
pop
aas
movsl
in
andb
cmp
rorl
mov
ss
cmp
inc
lods
shlb
data16
data16
and
andl
leave
out
mov
mov
loope
or
shlb
mov
pop
mov
int3
pop
push
daa
mov
jae
and
stos
inc
adc
xchg
add
fbstp
push
xchg
mov
je
push
pusha
mov
xchg
les
push
ss
rcll
dec
mov
xor
xor
add
mov
inc
mov
pusha
loopne
inc
mov
ja
das
sbb
rolb
fwait
inc
sub
in
cltd
mov
adc
fdivr
inc
adc
test
push
loopne
dec
pusha
adc
inc
adc
addb
dec
pop
daa
insl
insb
inc
inc
stos
inc
add
mov
sub
xor
xchg
mov
ret
leave
push
push
xchg
mov
addr16
xchg
in
mov
pusha
and
dec
and
stc
les
lea
fnsetpm(287
pop
add
pop
ss
fcmovbe
std
pop
adc
pusha
stc
mov
and
fisubrl
cmpsl
push
add
or
ja
iret
sbb
add
arpl
jmp
jb
cmpsl
dec
fstl
stos
mov
sub
ja
sti
in
sub
or
xor
push
rorb
pop
xchg
sbb
sbb
sub
andb
lcall
mov
lds
mov
mov
or
inc
sarb
xchg
or
mov
insl
imul
stos
and
adc
sbb
xchg
mov
cmp
mov
shrb
stos
jns
mov
dec
xchg
out
ja
lcall
loopne
in
mov
and
mov
shlb
mov
scas
and
and
inc
xchg
das
push
adc
mov
arpl
in
pusha
and
push
and
ret
and
cld
mov
lds
lods
in
cmp
adc
pusha
rorb
sahf
cli
mov
into
scas
jb
and
outsb
push
scas
mov
sub
and
jmp
mov
or
jle
jmp
mov
aad
nop
int3
or
les
add
pusha
cmpsb
and
hlt
js
adc
mov
inc
out
push
bound
arpl
pusha
sub
loopne
gs
loopne
pop
mov
pusha
xchg
jb
pusha
and
mov
add
subb
or
xchg
popl
mov
shll
or
add
cmpsl
mov
outsb
sbb
xchg
xchg
xchg
sub
loopne
dec
jo
xchg
lock
mull
and
loopne
flds
dec
sbb
fiaddl
rolb
xorb
cmp
mov
mov
cmpsl
out
aas
sbb
xor
fisttpll
movsb
add
push
cltd
addr16
and
sub
xchg
inc
in
xchg
add
loopne
sub
add
mov
cmpsb
loopne
adc
scas
adc
or
jne
jp
hlt
sarb
xchg
lcall
inc
inc
push
mov
xor
ljmp
lret
mov
mov
xchg
imull
adc
inc
inc
jge
pusha
pusha
and
mov
sarl
rclb
popa
mov
xor
cs
add
inc
sarb
pop
ret
in
enter
movsl
gs
movsl
test
pusha
dec
ja
jmp
sbb
adc
mov
jb
repz
sar
push
add
mov
and
xchg
adc
je
inc
pop
and
cmp
lret
in
add
pusha
pop
out
sbb
xor
mov
cld
mov
std
xor
mov
mov
inc
out
and
bound
and
inc
rcr
mov
enter
or
pusha
add
and
lahf
xchg
sub
pusha
aaa
cmp
adc
add
lea
mov
loopne
mov
and
add
add
lds
cmp
pop
inc
imul
pop
movsb
inc
rorb
lcall
loopne
loop
addr16
inc
or
pop
outsb
or
mov
sbb
ja
jae
mov
cmpsb
and
and
and
xorb
mov
ret
jp
sar
andb
cmp
cmc
sti
dec
into
nop
aad
cltd
or
mov
lcall
pop
cmc
fs
loopne
pusha
add
cmp
fmuls
mov
ss
cmpsb
and
jns
and
xchg
mov
lock
mov
inc
orb
xor
mov
xlat
in
dec
mov
loope
mov
loopne
lds
sub
add
pop
push
jg
lods
andb
cmp
in
mov
adc
xor
mov
mov
push
push
or
sar
ret
mov
push
lock
mov
stos
mov
pusha
jmp
pop
xor
xchg
adc
inc
push
shlb
mulb
dec
std
in
add
test
mov
mov
add
mov
pop
subl
stc
xor
rorb
aad
outsb
and
fdivrs
andb
or
cmpb
loopne
cwtl
arpl
andb
jg
inc
fiadds
or
imul
rcrb
out
dec
sub
and
and
sbb
rorb
outsb
dec
aam
ljmp
aam
jg
add
pushf
cwtl
iret
arpl
sbb
cmp
xlat
mov
push
sbb
mov
pusha
nop
add
pusha
mov
add
pop
insl
jae
dec
fucomi
sub
xchg
and
and
mov
imul
shlb
mov
xchg
insb
das
in
jo
leave
lcall
imul
cmpsl
pop
push
cmp
orl
pusha
inc
adc
sub
loopne
in
inc
js
mov
sub
sbb
pop
cmc
dec
daa
ret
jp
jb
xor
loope
pop
pop
cwtl
xor
ret
imul
mov
loopne
cmpsb
pusha
mov
cmc
jo
mov
addl
cmp
cli
and
bound
jne
loopne
jmp
and
rol
inc
and
int3
loopne
or
add
push
jne
imul
sarb
inc
inc
pop
ljmp
add
and
rclb
cli
and
orb
hlt
ret
outsl
test
mov
call
inc
das
mov
inc
pop
adc
inc
loopne
popa
test
mov
mov
popa
fld
loopne,pn
into
in
push
imul
mov
add
inc
mov
rolb
aam
into
pusha
lahf
xchg
cli
jge
and
and
loopne
add
sbb
sub
bound
pop
xchg
add
jmp
pusha
loopne
notb
push
add
add
sbb
adc
int3
aas
add
or
fwait
mov
mov
add
loopne
inc
andb
sbb
or
xor
fdivs
arpl
scas
jo
add
rorb
push
pushf
dec
andb
pusha
pop
sti
cmpsb
mov
icebp
jbe
jl
cmp
mov
outsb
in
adc
hlt
inc
inc
mov
inc
loopne
mov
mov
dec
std
sub
fxch
or
sti
stc
add
les
rolb
xor
in
and
mov
fnsave
inc
sbb
inc
mov
add
adc
cltd
dec
les
shlb
outsl
stc
testl
mov
shlb
int3
outsb
fdiv
xchg
loopne
lea
mov
push
in
dec
and
scas
and
idivb
lcall
dec
aas
mov
aas
jbe
xchg
test
inc
mov
shlb
and
and
mov
sbb
jg
cltd
push
insb
and
add
insl
push
je
test
pusha
pusha
mov
daa
add
add
fidivrl
pusha
popa
mov
sub
sbb
lret
pop
mov
mov
lret
push
inc
mov
inc
add
inc
out
jle
add
inc
pop
cmp
ja
sbb
push
sub
insb
or
inc
test
fisttpll
mov
loope
in
icebp
mov
mov
pop
ds
ss
sub
ds
xor
dec
ja
push
mov
xor
sub
sbbb
loopne
inc
mov
mov
adc
int
inc
pop
mov
pusha
loopne
add
bound
loopne
xchg
nop
cli
fcomi
inc
ret
adcb
mov
andb
mov
xlat
bound
jnp
jnp
mov
mov
shl
inc
jmp
sarb
ret
stos
add
cmpsb
inc
loopne
inc
les
shlb
enter
filds
mov
mov
rcl
cmp
adc
add
xchg
lahf
sub
mov
pushf
gs
popf
and
add
test
and
cmpl
and
add
push
push
jg
iret
mov
aaa
orl
test
pusha
aad
cmp
mov
mov
sarb
and
aam
mov
sub
in
lea
ficoml
jb
lret
lret
popf
mov
inc
jns
je
pushl
pop
in
divb
and
lret
adc
mov
test
sti
into
xchg
pop
addr16
das
pop
test
pop
cmp
aaa
add
push
inc
push
fstps
inc
mov
repz
std
sti
add
push
inc
jge
jns
jb
sub
stos
loopne
mov
loopne
mov
lahf
outsb
in
cmp
ss
movsl
adc
lods
inc
add
test
xchg
aaa
push
sub
loopne
xor
adc
scas
add
mov
popf
loope
cmp
add
inc
loopne
in
dec
punpckhdq
or
sbb
inc
imul
jbe
sbb
fstp
lock
rcrb
jmp
jne
movsb
add
mov
inc
rcrb
shlb
mov
mov
mov
test
out
lock
jo
cs
mov
xchg
mov
push
in
add
loopne
add
xor
push
lret
push
xor
or
inc
data16
inc
mov
add
jp
addb
xor
push
pop
dec
sahf
jecxz
pushf
rcrl
daa
test
into
add
loopne
pop
sbb
scas
andb
ret
or
ljmp
cli
mov
nop
nop
cmpsl
lret
sub
add
hlt
fldt
mov
jb
sub
and
addb
add
inc
scas
add
push
sub
rolb
pushf
outsb
mov
adc
cld
out
loopne
decb
mov
sti
fistpl
sbb
cmp
faddl
inc
push
cmp
xor
loopne
xor
jg
rolb
mov
lds
pop
outsb
sbb
adc
mov
mov
pop
sub
mov
cltd
sub
and
loopne
adc
xlat
test
shl
push
test
addr16
pop
lahf
imul
pop
fistpl
lcall
loopne
and
add
mov
push
loopne
ficoml
pop
insb
xchg
fwait
xor
mov
fisubl
aad
loopne
imul
or
nop
and
mov
inc
test
ror
and
mov
xchg
out
add
fimuls
fcmovnb
aas
aam
jp
push
arpl
popf
jne
call
cmpl
lret
test
in
xchg
std
dec
loopne
xor
shlb
xchg
cmp
lods
add
xor
sbb
cld
dec
sub
test
cmpsl
adc
ret
rorl
stc
imul
js
ret
je
jmp
mov
cltd
sub
loopne
shlb
pusha
mov
sbb
pusha
xchg
dec
pop
mov
mov
stos
mov
call
pop
fcoms
jo
fstl
ret
mov
shl
inc
and
push
loopne
adc
bound
andb
and
xchg
jb
pop
popa
add
inc
push
mov
jae
or
mov
add
inc
lcall
insl
lret
mov
inc
push
sahf
mov
push
push
out
xchg
or
or
xor
scas
scas
inc
pusha
or
sarl
roll
sarb
sbb
cmp
and
out
mov
adc
and
pusha
addb
mov
into
in
adc
adc
aam
mov
push
add
je
in
jl
fistps
dec
push
inc
push
addb
loope
xchg
xlat
out
push
icebp
test
add
inc
sub
loop
inc
add
dec
ja
sub
shrb
loopne
sub
pusha
pusha
fdivrs
dec
xchg
jns
xchg
aad
sbb
scas
mov
repnz
pop
inc
adc
and
inc
mov
mov
or
jae
or
add
andb
mov
add
loopne
pushf
sub
lahf
add
mov
out
and
jmp
repnz
pusha
in
aaa
in
push
push
pop
jle
sub
test
pusha
addb
popa
dec
and
pusha
xor
call
mov
inc
stos
xlat
push
loop
sub
push
mov
ffreep
pop
incl
popf
mov
mov
cmp
ffreep
ljmp
adc
sar
scas
addb
rolb
inc
fstps
xlat
mov
andb
rolb
mov
xchg
push
fs
xchg
cmp
fsubrs
orb
mov
iret
test
inc
inc
addr16
xchg
jg
add
mov
cmp
jg
add
lock
out
test
aas
ret
dec
sbb
xchg
lods
addb
inc
movsl
ret
loopne
in
stos
lret
daa
jo
pusha
add
in
cmp
push
outsb
cmpsb
andb
and
sbb
test
pusha
jbe
loop
push
lods
mov
pusha
push
insb
mov
in
xchg
js
aaa
add
mov
lods
insb
popf
pop
jl
cmp
out
inc
add
and
push
dec
xchg
and
pusha
pusha
or
test
loopne
daa
jl
inc
rclb
xor
jge
and
xchg
clc
xchg
pushf
inc
and
sbb
dec
mov
dec
inc
or
shlb
loopne
or
xchg
mov
addb
jge
out
pcmpeqd
gs
and
add
sub
or
mov
xchg
dec
push
roll
sti
mov
and
inc
sbbb
add
mov
xchg
xorl
stos
es
and
jne
sub
addb
cmp
aaa
imul
add
out
xor
test
pop
pop
dec
into
inc
jae
push
sbb
add
inc
pusha
imul
mov
cmp
add
loopne
mov
cs
and
mov
or
pop
sbb
shlb
sti
adc
jge
pusha
inc
cmp
lret
mov
mov
loopne
shlb
cmpsb
loopne
jnp
std
imul
inc
inc
mov
pop
test
inc
mov
inc
rolb
pop
in
in
cs
inc
and
pop
loopne,pn
in
cmp
and
lcall
inc
rcrb
sbb
pop
and
ss
adc
xor
andl
add
fisubs
rclb
inc
sbbb
pusha
pusha
and
push
inc
addb
lock
sub
adc
pusha
dec
fdivrl
ret
cmpsl
mov
repz
pusha
jo
or
loopne
nop
sbb
je
push
mov
pusha
and
push
dec
std
icebp
icebp
jne
cwtl
xor
roll
pusha
andb
rorb
pushl
xchg
add
cmp
mov
shlb
pusha
mov
inc
aam
cmovb
scas
addb
loopne
mov
mov
mov
icebp
gs
sahf
inc
or
push
jbe
call
and
pop
insb
xor
and
shlb
mov
and
adcb
sti
push
pusha
add
daa
stos
pushf
adc
and
sbb
mov
mov
addb
xchg
js
mov
pop
xor
addr16
dec
in
mov
add
xor
fiaddl
inc
cld
stos
add
addr16
sti
mov
inc
pusha
inc
mov
or
pop
or
and
add
dec
fsubl
leave
adc
mov
outsl
into
inc
mov
fstpt
rcr
mov
inc
movsl
cmpl
sbb
insl
aad
mov
push
jmp
test
and
mov
cmp
cmpsb
inc
inc
in
xor
push
add
pusha
and
mov
inc
and
and
in
loopne
lods
andb
mov
je
add
orb
cli
aad
or
in
and
xchg
xchg
test
das
ds
dec
mov
inc
loopne
pop
dec
mov
adc
insb
pop
repnz
out
pop
push
mov
mov
orb
and
out
inc
rcrb
inc
pusha
in
push
in
mov
repz
push
and
shll
push
imull
push
add
ds
das
add
and
mov
aad
in
shl
jmp
loopne
cld
insb
insl
xor
add
mov
add
fwait
dec
andb
cld
icebp
aas
mov
jno
push
and
push
test
lea
and
fwait
enter
shll
mov
pusha
push
jmp
and
mov
and
xchg
out
mov
repnz
adc
pop
std
mov
pushf
sbb
in
and
mov
pop
movsl
or
inc
scas
or
rolb
add
rclb
daa
push
mov
mov
rolb
add
andb
add
mov
pop
add
mov
sti
arpl
loopne
hlt
sub
mov
pusha
ret
loopne
cmp
inc
lret
xlat
dec
fucomip
mov
add
test
test
mov
and
or
cwtl
push
ret
into
mov
pop
pop
mov
outsb
sub
and
cmp
fdivp
hlt
in
mov
sub
inc
adc
jo
xchg
cld
in
imul
ja
pop
ret
mov
int3
push
and
dec
push
std
popf
mov
popf
mov
pop
addb
loope
adc
or
inc
xchg
das
fidivrl
int3
sub
pop
dec
sti
or
sub
dec
cld
stos
out
ja
and
dec
pop
mov
shl
adc
xchg
mov
mov
arpl
push
test
inc
pushfw
arpl
dec
sub
pop
push
jl
mov
push
inc
stos
adc
outsb
inc
xor
clc
pop
adc
cmpsl
repnz
jl
xlat
inc
std
pop
push
jne
xchg
sub
add
pop
xchg
jg
sti
jp
push
cmp
test
adc
push
sarb
lods
pop
inc
dec
adc
mov
push
pop
xchg
pop
icebp
pop
sbb
adc
dec
call
andl
sar
sub
or
pusha
sub
mov
mov
ds
mov
icebp
fimuls
and
and
xlat
dec
cli
sbb
mov
xchg
fadd
sar
or
andb
popa
mov
xchg
andb
test
mov
bound
test
or
ljmp
loopne
push
movsb
mov
andb
pop
pop
or
adc
add
imul
in
sbb
aam
addb
inc
inc
sar
notl
out
jno
fnstenv
imull
and
sub
add
add
add
in
outsb
mov
inc
lahf
aaa
mov
add
clc
stos
xchg
in
aaa
gs
cmp
repnz
mov
bound
mov
push
add
jl
or
or
add
add
and
add
add
xlat
insl
jbe
push
xchg
test
add
sahf
shl
pusha
push
addb
mov
adc
add
stc
cli
push
push
add
sub
divl
bound
inc
insl
std
ret
mov
dec
push
mov
das
fldcw
loopne
cld
sbb
mov
movl
cmp
gs
mov
xchg
into
push
jnp
out
and
jge
push
rorl
aas
nop
cmp
jb
in
jo
mov
mov
mov
or
fidivl
lds
dec
ja
sub
inc
test
mov
push
jge
out
hlt
push
jnp
aad
pushl
imull
addb
ret
test
pusha
push
push
pop
lea
adc
push
xchg
out
mov
add
out
leave
fdivrs
dec
mov
jae
sub
dec
inc
sbb
loopne
rcll
xchg
mov
jl
std
jecxz
mov
mov
andb
push
movsl
iret
rolb
imul
test
and
cwtl
xchg
cltd
adc
mov
out
mov
push
arpl
pusha
and
nop
int
add
fwait
outsl
stc
mov
mov
jo
or
sbb
dec
sbb
mov
push
insl
andb
xor
pop
lods
and
rcrl
rolb
inc
call
ficoms
pusha
add
daa
hlt
adc
out
add
push
jne
lret
add
pusha
sbb
inc
rcrb
jno
rcrl
inc
pusha
gs
jecxz
repz
addr16
inc
dec
das
mov
dec
dec
add
and
adc
shl
jmp
imul
push
inc
daa
push
inc
xor
dec
fdivrs
or
fistpl
mov
inc
xchg
daa
push
add
stos
cltd
jl
imul
push
mov
inc
jbe
addb
in
xchg
jmp
ja
lahf
or
pusha
cmpsb
and
dec
mov
jae
mov
push
loopne
inc
add
enter
out
mov
jno
mov
sbb
inc
shlb
xchg
cmpsb
mov
push
cld
adc
jl
adc
inc
mov
js
mov
xlat
and
pusha
jae
and
je
lahf
jo
cmp
scas
shlb
xchg
push
mov
add
inc
and
inc
sbb
dec
lret
add
push
or
cli
aas
lcall
jo
in
or
add
cs
fcoml
in
mov
xor
or
dec
fnstenv
je
shlb
loopne
and
lea
out
dec
jmp
jb
cmp
pop
fsubrs
mov
mov
mov
lret
dec
mov
hlt
aam
dec
lock
ss
ror
subl
push
push
stos
fisttps
cmp
ret
cltd
push
test
or
and
mov
pop
xorl
pop
fisttps
or
inc
mov
sbb
std
in
popf
mov
inc
jno
cmp
inc
add
movsb
inc
rolb
xchg
iret
inc
cs
inc
nop
ret
rcr
sub
rcrb
sar
aad
or
sbb
call
push
inc
pusha
and
inc
and
dec
ds
push
pop
cmp
insb
sub
shrl
mov
rolb
popa
sub
lahf
loope
and
imul
cld
pop
inc
jo
inc
xor
dec
cltd
xchg
js
mov
lahf
cmp
faddl
pusha
pusha
jne
test
and
add
inc
jnp
sbb
mov
mov
out
pusha
pop
jmp
cmp
jecxz
ret
ja
call
inc
outsb
sbb
movsb
addb
loop
test
shl
leave
adc
xor
pusha
inc
dec
inc
stc
scas
jns
mov
lahf
adc
cmp
pusha
pusha
xor
inc
add
add
dec
adc
xchg
out
divb
jns
ja
fmull
cmp
mov
cmp
je
mov
aaa
xor
mov
inc
add
stos
sbb
lret
ss
fbld
hlt
mov
mov
sub
add
push
shrb
sbb
pop
pop
aam
lods
jo
pusha
add
jle
add
jae
sub
and
scas
fisubl
add
inc
xchg
outsl
dec
sub
loopne
gs
mov
xchg
mov
cld
xchg
lahf
sbb
arpl
roll
loopne
mov
xchg
pop
pop
inc
sub
test
lret
cmp
lods
pusha
mov
in
test
cmp
loopne
sti
mov
rcr
lahf
mov
mov
aam
addr16
mov
test
mov
repz
pushf
insl
jg
mov
clc
sub
inc
mov
shlb
mov
rcl
pop
xchg
inc
fisttps
add
or
rolb
hlt
scas
adc
mov
cmpsl
fdivs
mov
ja
mov
sub
fcoms
orl
cli
cmp
mov
dec
push
in
icebp
jb
xor
out
cwtl
outsb
pop
xor
mov
mov
rolb
xchg
xlat
lock
inc
jb
loopne
outsl
pop
cltd
push
add
dec
ljmp
daa
sub
mov
jp
jnp
push
add
lahf
push
leave
scas
cld
and
and
ret
add
mov
int
shl
loopne
push
clc
jo
mov
or
loopne
fadd
add
insb
mov
pop
xor
and
inc
xchg
jmp
loopw
jno
lcall
aam
fcoml
dec
incl
mov
jge
stos
and
xor
shrb
mov
and
imul
lock
test
mov
roll
add
pop
xor
out
inc
dec
test
and
cmpsb
addb
cmp
xchg
jbe
inc
cli
dec
inc
push
adc
adc
inc
shlb
shlb
inc
xchg
mov
inc
sbb
sbb
or
shlb
adc
outsl
or
jmp
mov
dec
inc
xor
sbbb
jbe
loopne
jl
cmp
or
pusha
mov
pusha
xlat
fistpll
add
data16
lahf
xchg
cwtl
and
add
inc
xchg
mov
testl
mov
dec
xchg
add
and
icebp
cmpsb
mov
mov
push
add
jb
fs
int
dec
xor
add
push
test
and
push
mov
xchg
loopne
dec
add
andb
movsb
andb
mov
sar
jo
and
cmp
aaa
push
inc
insl
and
mov
lahf
pop
insb
sub
add
mov
jp
mov
imul
xor
shl
xchg
pop
pop
ja
xchg
fs
jmp
push
ret
scas
mov
dec
hlt
lcall
nop
adc
movsb
inc
shlb
inc
das
mov
icebp
int3
testl
out
mov
iret
in
add
out
xchg
in
and
xchg
addb
push
dec
aad
add
shl
pusha
and
and
andb
xchg
fiaddl
cltd
mov
dec
mov
lret
jmp
call
xor
inc
push
lods
pusha
and
sbb
push
test
call
dec
ret
dec
mov
push
addb
dec
inc
mov
and
jne
shl
call
add
add
test
inc
stos
aaa
dec
das
add
insl
testl
pushl
cmc
push
ljmp
rclb
mov
shlb
popa
ss
loopne
mov
mov
dec
inc
fidivs
sub
inc
test
add
pusha
loopne
or
add
aad
jo
call
mov
xchg
dec
mov
sub
popf
pop
cmp
dec
sbb
pusha
loopne
and
sub
js
dec
shlb
push
adc
loopne
jbe
adc
test
pusha
test
mov
gs
add
data16
das
xchg
or
push
scas
add
and
pusha
rorb
pop
stos
loopne
incl
jb
pop
insl
push
mov
aad
dec
test
jmp
adc
xchg
xor
push
popa
das
testl
lcall
out
xor
rolb
xchg
xor
fmull
push
outsl
cwtl
pop
aam
addb
jbe
arpl
andb
pop
mov
ret
es
je
mov
ret
dec
cmp
jbe
shlb
sarb
test
and
test
and
adc
push
and
mov
fdivl
shl
mov
pop
sbb
lret
and
rcll
or
sbb
add
adc
pop
xchg
mov
or
iret
jno
or
cmc
inc
jns
lcall
xor
rolb
inc
loopne
loopne
cmpsb
pusha
or
loopne
ret
pop
hlt
in
les
adc
callw
fimuls
xor
cs
orb
inc
rcll
dec
lahf
faddp
pop
sub
push
clc
out
data16
fcomi
ss
cmp
lods
andb
push
insl
sub
popa
iret
or
cmp
and
pop
inc
popa
sub
loopne
lret
sbb
enter
fwait
pop
repz
shr
imul
cs
mov
test
mov
mov
enter
cmc
addr16
ret
insb
rcll
sbb
sbb
iret
outsb
js
fcmovb
lods
xchg
pop
push
push
mov
add
test
inc
add
xor
shlb
sbb
add
test
mov
push
xor
or
in
test
and
loop
jbe
mov
add
loopne
mov
sub
xor
add
loopne
into
loopne
mov
mov
nop
or
and
shlb
cmpl
mov
add
sub
mov
push
test
mov
push
mov
loopne
mov
in
fistl
repz
fwait
mov
cmp
into
jae
repnz
leave
pushl
hlt
loopne
dec
sarl
pusha
xor
push
jno
in
add
add
rorl
mov
loopne
mov
sar
dec
jo
addb
inc
add
xchg
and
sbb
pop
dec
and
loopne
and
mov
divb
fs
nop
cli
lods
addb
mov
cmp
xchg
iret
xor
pusha
std
add
loopne
cmp
cld
fdivrs
out
pop
mov
shl
hlt
in
sub
mov
sub
pusha
inc
add
mov
jnp
lods
pusha
pusha
pusha
adc
mov
pusha
mov
add
push
das
inc
popa
cli
push
adc
adc
in
dec
pop
push
cmpsl
add
xor
xor
sbb
mov
stc
pusha
sub
ljmp
loopne,pn
jb
mov
or
sub
and
mulb
push
mov
nop
hlt
add
mov
mov
sbb
dec
in
jecxz
test
inc
push
scas
ds
sbb
loopne
popf
mov
jbe
lock
xchg
ret
clc
xor
mov
adc
sbb
mov
add
inc
sarl
or
pusha
cmc
xor
cmp
mov
loopne
lock
loopne
cmp
pop
fcoms
xchg
into
cmp
cmpsb
loopne
out
js
mov
cld
mov
add
daa
pop
inc
dec
mov
dec
xor
lcall
fldl
rolb
add
inc
ss
and
mov
inc
add
mov
add
rolb
in
jl
fisttps
mov
rolb
mov
out
movsl
mov
jg
pusha
iret
arpl
nop
push
mov
orb
xor
mov
mov
and
jg
add
cld
addr16
bound
lods
add
aam
xchg
and
rolb
imul
mov
sub
or
clc
dec
pop
stc
rclb
iret
dec
push
or
pusha
outsb
xchg
or
mov
pusha
xor
das
test
add
dec
js
stc
sbb
das
dec
push
sbb
rcrl
or
loopne
fdivr
xor
addb
cli
xor
popf
or
movsb
add
out
add
shlb
ret
adc
fbld
loopne
fs
adc
cli
sti
xor
or
add
ljmp
decb
inc
jns
jl
aam
loopne
shlb
pusha
inc
pop
mov
jecxz
add
inc
arpl
in
or
pop
imul
mov
loopne
js
dec
test
mov
stc
xchg
adc
mov
mov
lods
rolb
inc
xorb
cmc
inc
mov
mov
xor
nop
ret
cld
xlat
imul
mov
std
inc
push
popf
xor
ret
cld
add
shlb
ret
imul
xchg
xor
jns
xor
sahf
repz
testl
test
inc
fucomip
rcl
and
rclb
sbb
add
aad
cmpl
mov
pusha
loopne
ljmp
sub
xorb
mov
addb
data16
fisubrl
out
inc
je
lods
inc
addb
adc
lcall
push
or
nop
lahf
add
in
popf
testb
andb
jecxz
dec
ja
ret
mov
mov
xchg
or
and
idivb
xlat
fwait
lret
das
je
add
mov
mov
incl
addb
xchg
arpl
and
push
in
andb
mov
xchg
add
mov
xor
mov
jcxz
popa
jno
pusha
add
add
add
mov
mov
push
mov
cmc
adc
pop
mov
or
pusha
fwait
nop
rorb
shlb
shlb
movsl
mov
imul
push
mov
subb
cmp
mov
fst
loope
dec
shrl
inc
push
mov
and
dec
scas
add
inc
daa
and
sti
push
and
inc
rolb
lock
loopne
addb
jb
clc
cmp
pop
ja
mov
cmc
xlat
pop
xor
and
orb
sub
shlb
and
sbb
jns
jge
outsb
fsubrs
sub
inc
jmp
loopne
cmp
mov
adc
insb
imul
insb
push
pop
mov
popf
loopne,pt
sbb
test
insb
mov
fwait
call
mov
pusha
addb
pusha
scas
popf
inc
xchg
mov
leave
xor
or
and
dec
clc
push
mov
mov
add
divl
push
in
cmp
adc
adc
add
jo
mov
rolb
sbbl
sti
rcrb
gs
pop
adc
or
and
push
inc
pusha
in
fwait
std
xor
or
into
lea
xor
xchg
mov
xchg
scas
and
popf
xchg
aam
jb
rol
shl
rclb
divb
cwtl
mov
inc
rorl
loopne
outsl
jmp
jl
lods
and
pop
jle
xorl
ret
sub
add
xlat
inc
dec
adc
inc
rclb
cs
loopne
into
xor
ss
std
leave
adc
sbb
push
xchg
mov
pop
pop
dec
mov
dec
fs
rcrb
xor
je
and
mov
add
aam
test
scas
add
inc
push
dec
incb
ja
pusha
cmp
mov
shrb
add
jnp
out
push
and
int
iret
inc
into
andb
jo
test
mov
test
inc
cmp
pusha
add
orps
add
jge
call
in
cwtl
inc
inc
and
sti
ljmp
dec
jp
iret
or
shll
push
mov
aam
loopne
pusha
scas
inc
sub
int
lock
inc
loopne
add
xor
add
push
dec
lret
enter
cmp
loopne
inc
imul
sbb
jp
das
add
mov
xor
pusha
loopne
mov
jb
loopne
out
ja
pop
das
sbb
loopne
mov
inc
shlb
sub
inc
lea
clc
out
pop
mov
xchg
es
fadds
cmp
mov
mov
and
inc
adc
xchg
test
ja
inc
mov
dec
sub
icebp
sub
and
sub
add
xchg
insl
clc
mov
mov
imul
cmp
aad
xchg
and
cld
clc
dec
dec
add
in
and
fsubs
insl
sbb
dec
dec
xchg
rorb
sub
sbbb
shr
xchg
sub
pusha
xorl
mov
lcall
lret
pusha
xchg
mov
inc
ror
fistpll
xor
and
mov
cmp
mov
cmpsl
mov
mov
out
inc
inc
adc
add
andb
addl
xchg
add
loopne
out
pop
jbe
dec
xchg
jl
inc
cmp
jmp
and
and
dec
jae
cltd
int
lods
pushf
jle
mov
sbb
push
mov
inc
inc
sbb
stc
loopne
aaa
or
inc
and
pusha
push
sub
shlb
and
push
mov
inc
lods
jp
jecxz
sbb
loopne
sbb
shlb
rcrb
inc
and
mov
cmp
into
and
push
jp
sti
mov
call
roll
and
mov
shl
pop
push
mov
push
mov
loopne
or
xor
enter
sbb
jnp
mov
or
xlat
loopne,pn
jae
repnz
mov
test
and
ljmp
jno
lods
loopne
int3
rol
test
fisttpl
sbb
push
add
je
mov
dec
shr
scas
mov
inc
pop
mov
or
bound
add
in
inc
das
jmp
ret
imulb
and
jno
pop
or
pop
mov
jne
cmp
mov
int3
cmp
mov
and
icebp
dec
call
pop
pop
sar
sub
sbb
and
sbb
mov
push
aas
lds
adc
inc
fisttpll
add
add
inc
lcall
cmp
inc
shl
dec
jecxz
inc
loopne
mov
cmp
lret
loopne
idivl
xor
cmp
pop
xor
andb
sbb
lea
sub
inc
movsl
stos
rolb
inc
test
pusha
adc
shr
arpl
mov
std
lds
insb
sbb
mov
xchg
sbb
jge
jg
nop
adc
loopne
mov
loopne
push
cmp
mov
nop
push
dec
iret
imulb
mov
out
push
lock
loop
popf
cltd
sbb
fxam
pop
mov
fisubrs
sbb
dec
addb
dec
mov
add
aam
push
mov
into
dec
pop
mov
je
sbb
cli
lret
mov
inc
and
xor
sbb
mov
in
pushf
adc
mov
test
and
add
jbe
aad
dec
cmp
mov
lret
cltd
pop
imul
push
mov
xor
add
mov
loopne
mov
push
mov
rcrb
andb
push
push
mov
or
fisubrs
or
mov
pop
inc
mov
push
or
and
ljmp
mov
and
or
push
pop
popf
jg
lock
mov
xorl
and
sbb
into
sbb
and
jmp
xchg
mov
cmc
push
xor
xchg
jno
pop
cmp
nop
sub
cmp
xchg
popf
dec
cmp
push
scas
pusha
loopne
fcomip
mov
inc
outsb
das
xchg
and
xor
and
jge
dec
jno
ds
push
pop
or
and
and
pusha
xor
add
pop
jg
jecxz
mov
pop
push
addb
ss
icebp
cli
or
rorb
mov
xchg
clc
js
sbb
shlb
xor
movsl
pop
mov
subb
xor
sti
std
mov
jmp
sbb
sbb
and
add
ljmp
sub
fdivs
pop
jmp
push
jns
mov
jnp
cmp
inc
jno
pop
es
mov
mov
stos
and
mov
rclb
xor
shl
xor
cli
mov
mov
stos
mov
mov
mul
mov
hlt
std
push
sahf
mov
mov
hlt
cld
aad
rol
iret
cmp
xor
dec
xor
enter
xor
push
xchg
mov
cli
ja
mov
and
push
bound
inc
adc
and
mov
pusha
inc
jmp
cmpsb
shlb
inc
inc
cvttps2pi
imul
and
mov
shl
lret
jl
std
iret
adc
push
mov
mov
sub
add
inc
inc
xor
aaa
into
rep
xchg
xchg
in
stos
loopne
insb
insl
in
ljmp
roll
mov
xlat
push
les
hlt
out
add
pushf
movl
inc
cld
mov
int3
hlt
repnz
shrb
sbb
mov
scas
loopne
loop
mov
jecxz
into
clc
movsb
shlb
jb
mov
ja
xchg
scas
mov
and
sub
pusha
loopne
jmp
je
cmpsb
pusha
mov
popa
and
repnz
inc
rorb
adc
mov
lret
mov
sti
push
scas
loopne
sub
stc
push
addb
lret
sub
jle
pop
leave
jg
mov
add
jg
popa
sbb
add
add
inc
inc
pop
sbb
jae
addr16
inc
mov
jecxz
lahf
mov
hlt
push
scas
mov
adc
inc
adc
add
mov
stos
cltd
sub
or
and
or
loopne
loopne
pop
adc
rol
nop
inc
mov
push
sahf
push
dec
xchg
mov
jns
add
xor
stos
jnp
ficompl
pop
pusha
xchg
mov
out
movsb
mov
push
mov
mov
arpl
testb
shrb
jl
imul
and
popa
aaa
lds
clc
xchg
idivl
lods
sbb
mov
mov
shlb
mov
add
push
cmp
sub
and
loopne
or
pop
aas
popa
scas
inc
add
stos
and
jl
icebp
jno
frstor
addb
inc
call
adc
incb
push
mov
pusha
fldcw
jo
jle
mov
adc
ret
or
into
call
imul
pop
test
inc
div
sub
mov
insb
sub
xorb
call
sbb
mov
out
sub
subb
loopne
xchg
add
or
mov
imul
mov
js
add
mov
add
leave
fstpl
test
and
push
lret
into
xchg
call
fdivrl
mov
sar
adc
push
pop
enter
int3
cwtl
mov
inc
xchg
stos
test
pushf
xchg
xchg
sarb
add
mov
data16
pusha
pusha
mov
pop
sub
add
mov
ja
inc
mov
shl
bound
ds
loopne
pusha
orb
shr
jmp
pop
shll
rorl
dec
jno
test
pusha
and
fstl
mov
sub
and
inc
sub
add
or
int
fistpll
pop
push
push
jae
mov
push
pop
loopne
decl
mov
test
add
aas
cmpsb
rolb
mov
mov
lea
insl
jnp
fldenv
sbb
xor
frstor
lds
incl
push
cmc
bound
pusha
and
and
in
cmc
out
in
jnp
cmpsb
pusha
subb
imul
inc
loopne
scas
add
push
inc
and
inc
imul
notl
imull
pusha
xor
sbb
stos
mov
loope
rorl
mov
pop
cmp
loopne
loop
cmpsb
inc
pusha
sbb
add
loop
movsl
test
and
sbbl
jae
pusha
adc
fs
dec
push
in
scas
leave
js
sub
cmpb
shlb
out
mov
and
and
outsl
imul
test
pop
lods
add
pop
cmpsb
loopne
outsb
mov
jmp
fildll
sahf
popf
jb
jo
adc
and
lods
pusha
sbbb
and
shrl
or
popf
mov
loopne
mov
xorb
shl
jge
test
and
cmp
push
ret
jo
fmuls
add
pusha
lds
shlb
inc
sahf
stos
inc
inc
ficoml
pusha
dec
mov
add
xchg
cmp
outsl
cmp
sarl
sub
jg
xchg
mov
sbb
jecxz
xchg
aas
cmpsl
push
add
jae
andb
setne
sbb
loopne
dec
xlat
xchg
and
dec
faddp
sar
jnp
bound
push
bound
jl
out
out
int
lods
add
inc
sbb
loopne
scas
add
scas
sbb
push
pop
pop
push
sbb
add
stc
add
pusha
stc
mov
dec
pop
aas
fisubrl
and
cmc
mov
ss
mov
cmp
nop
loopne
lea
cmpsl
cmp
mov
inc
les
scas
jmp
rcr
adc
ficompl
cmpsb
add
mov
call
lcall
int3
cmp
lcallw
add
and
xchg
sub
mov
data16
lret
push
stc
inc
pop
cmp
pop
lcall
push
xor
sarb
mov
int3
iret
dec
push
pop
sbbl
rclb
cmp
loop
add
adc
sahf
vmovaps
pop
sub
rolb
lods
dec
cmp
rolb
pextrw
jp
pop
or
adc
adc
test
or
out
insl
mov
mov
push
dec
leave
or
loopne
jnp
pop
int3
ss
loop
inc
filds
out
movsl
and
rcrb
popa
lret
add
enter
andb
xchg
repnz
rorb
mov
mov
adc
mov
rolb
cmp
outsb
out
popa
orl
mov
pop
test
mov
mov
push
add
add
add
loopne
pusha
mov
test
add
fld
sbb
jb
sub
inc
call
add
bswap
std
int
or
push
sub
pusha
mov
and
sub
inc
je
sbb
outsl
subl
mov
out
test
loopne
push
adc
sbb
sbb
push
rcrb
sub
inc
inc
mov
and
add
xchg
pop
sbb
or
addb
dec
in
xchg
and
dec
rcrl
lret
andb
fstpt
inc
inc
out
mov
sub
mov
outsb
movsb
loopne
push
inc
rcll
call
mov
push
jno
inc
shrb
loopne
push
sub
test
in
and
lods
loopne
ret
mov
jb
ret
sti
mov
mov
or
and
and
mov
icebp
fwait
fwait
jnp
mov
adc
insl
cli
inc
xor
mov
faddp
ret
sub
sub
aaa
movsb
inc
rcrb
adc
or
loopne
sbb
pop
cmpsb
pusha
rcrb
sbb
aam
scas
loopne
pop
push
pop
cltd
mov
mov
rorl
add
mov
xor
cmp
pop
adc
or
andb
rolb
push
push
js
jbe
icebp
mov
add
add
xchg
stos
and
ljmp
shl
std
fldcw
adcb
dec
jge
mov
loopne
push
js
adc
mov
add
shll
inc
cli
adc
ljmp
or
push
cli
test
and
pusha
mov
cld
push
fstl
push
out
or
inc
pop
push
mov
push
pop
imul
xor
jmp
cmp
aam
roll
andb
shlb
add
stc
jb
repz
lock
jne
out
mov
sub
cmp
xchg
and
mov
mov
in
jp
jmp
sbb
xchg
pop
lret
mov
test
xchg
cmpsb
inc
pusha
call
sarb
push
in
add
int
push
xchg
ss
adc
les
add
sti
lea
pushf
es
loopne
xchg
adc
mov
pop
sub
mov
push
sbb
andb
daa
jns
test
loopne
lds
push
and
addr16
and
loopne
jle
inc
mov
xchg
outsl
xchg
adc
adcb
sbb
shlb
test
out
mov
or
mov
inc
out
dec
out
imul
xorb
mov
xor
test
mov
adc
andb
dec
leave
xor
add
add
shlb
insl
mov
jl
xchg
dec
or
inc
mov
loop
mov
lds
lock
add
addb
mov
jo
fdivl
adc
xor
jecxz
cmp
mov
andb
pusha
fidivs
aad
mov
popf
ja
dec
mov
loopne
xor
inc
orl
shl
pusha
pusha
sub
mov
inc
fimuls
lret
ss
lods
add
sbb
inc
add
adc
addr16
arpl
and
add
clc
test
add
mov
fidivs
daa
dec
mov
subl
loope
out
bound
pusha
shll
or
jb
jecxz
in
or
add
and
mov
pop
and
pusha
pop
and
dec
inc
mov
xchg
repz
sub
pop
movsl
in
rol
inc
push
addb
xchg
ret
and
inc
dec
and
orb
flds
add
pop
stos
icebp
outsb
das
sub
loopne
in
and
imul
rcrb
rclb
pop
ljmp
dec
mov
ficoms
jl
sub
fidivrs
add
cmp
ds
movsb
add
dec
jae
loopne
mov
pop
idivb
cmc
jp
sub
inc
lds
lock
add
mov
test
mov
inc
mov
mov
adc
mov
adc
cmp
jg
xchg
cwtl
das
in
ret
dec
fmuls
loopne
and
inc
addl
loopne
cli
mov
dec
hlt
iret
and
jno
not
sarl
push
insl
movsb
add
xlat
sub
xchg
pop
andb
loopne
loopne
mov
std
adc
aas
xor
test
mov
pusha
lret
shlb
and
add
push
inc
jb
es
xor
insl
inc
daa
aas
push
negl
ja
mov
fidivs
clc
ror
mov
or
fsubs
adc
pop
dec
lea
add
fdivl
sbb
test
mov
sub
inc
mov
mov
out
enter
mov
mov
iret
pop
dec
and
ja
lock
mov
fcomps
mov
in
enter
in
push
idivl
je
popa
sbbl
in
add
and
pusha
inc
xchg
inc
add
shlb
arpl
icebp
mull
adcb
sbb
ja
movsb
loopne
mov
addb
cld
adc
pusha
mov
fisttps
adc
jmp
fcmovbe
mov
sbb
push
xchg
push
xchg
and
sub
shlb
mov
loopne
ret
lea
addb
stos
and
dec
push
pushf
dec
inc
js
jno
push
jno
arpl
push
and
fbld
pusha
xchg
add
inc
sub
dec
addb
leave
mov
fsubl
outsb
loop
nopl
bound
sbb
add
cmpb
popa
xchg
add
mov
test
sub
mov
mov
xorb
jle
add
inc
bound
pusha
inc
jge
mov
popf
push
jge
inc
mov
and
sub
pusha
fcom
mov
test
aaa
aaa
scas
fisttpll
push
dec
mov
or
push
jmp
pop
mov
pop
jmp
mov
addb
mov
mov
cli
das
bnd
inc
inc
scas
add
sar
movsb
pusha
pusha
xor
bswap
xchg
fs
xor
loopne
push
test
jp
push
jle
dec
out
xor
adc
add
pop
pop
pop
dec
fcomps
and
mov
test
pusha
test
xorb
jbe
cmpsl
arpl
and
into
mov
outsb
xlat
pop
lea
xor
sub
aas
push
sub
add
inc
fisubrl
mov
push
inc
add
pop
xchg
repnz
mov
lds
mov
cmp
jg
gs
inc
and
adc
movsb
mov
pusha
aam
rorb
or
xchg
das
int
dec
pop
or
loope
lret
pop
imul
push
jo
pop
inc
add
loopne
mov
fisubl
shl
mov
add
xor
andb
push
scas
rolb
mov
mov
xchg
mov
movsb
inc
pusha
and
shrb
adc
cld
push
pusha
add
push
add
push
cmpb
mov
andb
out
inc
pop
inc
addl
jmp
shll
mov
ret
enter
and
push
and
pop
pop
mov
and
add
jl
lock
jg
stos
mov
mov
sahf
inc
mov
and
xchg
mov
and
xor
lea
add
aad
aas
mov
imul
addb
mov
mov
fs
sbbb
jb
pusha
and
in
xor
addb
mov
lret
inc
and
cmpsb
and
dec
fwait
push
xor
out
shll
inc
inc
das
nop
fisttps
jmp
in
xor
and
int3
mov
pop
js
repnz
and
fwait
push
data16
test
inc
stos
dec
push
sbb
pop
hlt
xchg
sarl
or
add
lds
adc
jge
rol
sub
out
and
ficoms
loopne
inc
sbb
inc
shl
cmp
loop
and
push
mov
add
jp
push
addb
shlb
jne
jecxz
add
addb
xorb
or
jl
mov
roll
aaa
rorb
mov
cmp
mov
xchg
lea
fisttpl
push
dec
dec
iret
addb
mov
mov
mov
mov
test
pusha
test
aam
inc
imul
test
pusha
inc
pop
lret
cmp
lret
push
cmpsl
push
lds
mov
and
ret
pusha
inc
cltd
popf
in
push
rolb
mov
mov
scas
mov
mov
addr16
es
sbbb
inc
xchg
or
cld
iret
xor
hlt
xchg
mov
sti
mov
and
jmp
stc
cmpsl
sub
loopne
int
std
lret
and
es
out
fwait
jnp
sub
jmp
call
aas
mov
dec
outsb
xchg
data16
sbb
mov
or
and
lret
lret
movsb
pusha
inc
out
nop
fs
sub
shlb
pop
insb
and
and
fdiv
mov
sub
add
mov
mov
and
bswap
add
add
idiv
les
ficompl
add
sbb
call
loopne
jnp
fs
mov
add
outsb
psubq
mov
jo
rcl
jno
imul
sti
adc
inc
test
inc
jne
pusha
loopne
mov
adc
out
rcrb
add
mov
shl
inc
mov
add
add
jne
andb
add
add
addr16
inc
cwtl
shr
stos
sarl
mov
push
cli
into
xor
loopne
loope
mov
clc
xchg
mov
mov
add
pop
dec
fisubs
pop
cwtl
popf
or
jle
pop
jp
addb
add
cmp
ljmp
pusha
push
adc
loopne
loopne
out
stos
push
cwtl
mov
add
pusha
jns
das
adc
adc
mov
xor
add
dec
push
push
jecxz
and
pusha
subb
inc
mov
jo
adc
sub
lds
push
push
xchg
sahf
dec
push
fsub
jae
push
adc
mov
adc
mov
mov
xchg
push
daa
mov
or
rorb
add
mov
sub
repnz
jb
mov
dec
or
sbb
xchg
adc
cmp
and
inc
xor
inc
stos
loopne
cmp
and
loopne
mov
rorl
or
sti
cmc
lcall
test
out
pushf
jnp
mov
inc
test
add
or
and
pusha
jo
imul
or
add
push
cwtl
stos
ljmp
mov
dec
insl
inc
and
mov
lds
adc
mov
mov
push
adc
loopne
xor
movsl
daa
sti
gs
aad
xor
mov
and
addb
cmp
and
jb
andb
inc
mov
inc
cmc
movsb
loopne
sbb
sarb
push
xchg
and
cli
push
andb
push
mov
mov
pusha
inc
notb
inc
jnp
xor
popf
iret
and
in
or
pusha
add
sbb
aad
push
pusha
mov
xor
push
andb
sbbb
push
push
mov
out
iret
cmp
xor
xchg
sbb
imul
add
mov
andb
jecxz
xchg
in
push
mov
aam
in
cs
and
leave
mov
repz
mov
inc
cltd
insl
out
addb
call
addb
and
push
xor
pusha
mov
pop
rol
mov
add
inc
and
sbb
mov
fs
popf
mov
xchg
lds
gs
bound
frstpm(287
leave
in
sarl
subl
cs
sarb
or
jmp
push
cmpl
enter
sarb
pusha
shl
pop
push
mov
pusha
pop
in
jp
lcall
push
loopne
fists
cmp
mov
rcrb
xor
sahf
rorl
sub
inc
dec
dec
mov
jge
mov
mov
pop
pop
out
sub
mov
test
inc
fmuls
pop
aaa
mov
xor
stos
pop
cs
loopne
pop
lods
loopne
cmp
imul
ret
add
inc
push
sbb
les
pusha
or
pusha
push
push
call
outsl
push
movsl
mov
ja
insl
mov
loopne
in
hlt
dec
sbb
push
test
rcl
outsb
adc
div
add
and
test
add
fiadds
and
repnz
lahf
fs
adc
popa
data16
popa
insl
cwtl
lret
jg
mov
push
icebp
jmp
sub
push
stos
lock
lcall
sub
push
fisubl
sar
and
cmpsl
push
out
or
inc
pusha
jne
mov
and
and
nop
xor
push
shll
andb
subl
sbb
cmpsl
jne
and
es
sub
das
or
mov
inc
xor
xor
rsqrtps
fldenv
inc
loopne
bound
addb
sbb
xchg
push
aaa
imul
test
cli
adc
arpl
push
adc
loop
cwtl
int3
pop
and
inc
sbb
mov
addr16
inc
add
jecxz
xor
lds
cmpsb
andb
mov
andb
cmpsb
pusha
loopne
cmp
add
cmp
push
and
jb
mov
insb
pushl
enter
shlb
out
or
inc
push
scas
loopne
lods
addb
inc
fsts
cltd
sub
sub
loopne
fs
mov
add
inc
jle
mov
test
mov
cld
mov
shl
es
and
cwtl
pop
xchg
dec
pop
fstps
lret
sub
pusha
shrl
ret
and
adc
push
cmpsb
rolb
and
outsl
sub
inc
xlat
faddl
cmpsl
mov
add
ljmp
mov
lret
add
add
add
sbb
je
xor
mov
pop
jo
stos
pop
push
les
mov
loope
insb
repz
add
jecxz
out
dec
inc
inc
pushf
xor
jb
push
sbb
lds
ljmp
scas
scas
add
rol
test
adcb
loopne
lea
push
mov
pusha
add
rorb
loopne
and
inc
enter
mov
or
inc
imul
dec
add
loopne
cmp
fwait
enter
add
and
fdiv
fs
xor
aam
fsub
jp
pushf
in
inc
jb
flds
movb
iret
outsb
fbld
aam
addb
cmc
insb
mov
sbb
shrb
add
addb
loope
int3
daa
dec
inc
cld
leave
call
sahf
jl
jg
fdivr
sub
and
mov
pop
in
add
movsb
and
mov
js
lock
and
mov
add
rclb
ret
jo
aad
or
pusha
dec
outsb
mov
movsl
lds
or
and
push
adc
iret
andb
movb
shl
mov
aam
push
shlb
lods
mov
in
xor
shlb
cwtl
jns
push
loopne
js
and
mov
mov
jle
test
lea
jnp
int
aad
lods
mov
rorb
imul
out
push
fimull
pushf
pop
in
dec
cmp
add
jnp
jge
add
lret
dec
repz
jbe
pop
lret
sub
loopne
xchg
lds
xor
jle
dec
dec
pop
xor
pusha
mov
ror
or
pusha
xchg
subb
shl
mov
jle
pop
xor
scas
aam
testb
inc
jns
mov
jecxz
rclb
out
mov
insb
leave
push
loopne
shl
pop
xchg
loop
je
xor
iret
sbb
mov
mov
ss
leave
xor
or
xor
mov
ja
or
push
push
adc
imul
add
add
xchg
mov
sbb
or
shlb
pop
stos
mov
lock
lds
inc
loopne
xor
cmpl
xchg
xchg
outsb
pop
cmpl
lret
scas
pusha
add
fnstcw
addb
rcrb
and
push
push
ret
dec
es
loopne
jno
mov
and
inc
add
jns
ss
jbe
call
sti
icebp
dec
inc
jle
pop
inc
push
loopne
adc
je
dec
lcall
out
dec
aas
dec
inc
cmp
cmpsl
les
xchg
movsl
ret
fs
in
jg
out
movsl
adc
int3
js
xchg
sbb
inc
xor
test
mov
add
nop
sub
hlt
cld
addb
loop
sub
add
shlb
and
xchg
shlb
mov
xchg
jnp
loop
pop
mov
rorl
loopne
ret
loopne
and
add
add
pop
dec
or
inc
test
inc
lods
mov
mov
push
add
inc
loopne
movsl
jmp
imul
push
addr16
sbb
push
rcl
fildll
sbb
cld
fwait
pop
xchg
jnp
faddl
enter
and
and
loopne
xor
rcrb
inc
cmp
pusha
dec
fdivl
and
loopne
sub
mov
decb
pop
ja
and
inc
and
mov
mov
shll
and
xchg
fisubl
movsb
add
sbb
jle
jge
cli
xchg
addl
rolb
dec
lret
popa
lea
jg
das
rol
cmp
nop
sahf
xchg
fmul
add
in
xchg
pop
and
mov
or
xchg
out
cmp
mov
sub
and
ljmp
dec
insl
xor
dec
add
and
cmpsl
movsb
and
jbe
addb
daa
mov
arpl
xchg
cmpsl
mov
mov
dec
mov
insl
dec
jb
mov
pop
jae
mov
imul
test
popf
mov
inc
pusha
ljmp
mov
movsl
addb
pop
dec
imul
call
sub
daa
data16
enter
loopne
popa
popl
xchg
int3
and
cwtl
add
jns
rclb
cltd
imul
jnp
loopne
adc
and
out
and
inc
pop
arpl
xchg
and
leave
dec
mov
mov
movsl
and
and
ljmp
push
sahf
xchg
cs
inc
push
je
dec
loopne
jb
insl
or
loopne
push
jnp
cltd
jl
mov
mov
push
pusha
and
jo
int3
push
inc
pusha
jmp
stos
add
adc
loopne
fidivrs
leave
mov
mov
jge
push
and
pop
shrb
jle
cmp
shlb
xchg
imul
pop
inc
icebp
iret
daa
outsb
enter
pop
jo
inc
adc
sbb
dec
pushf
arpl
loopne
out
mov
or
mov
loopne
inc
popa
jecxz
add
jno
xor
pusha
mov
sbb
mov
leave
fstp
sub
mov
ror
mov
ja
sarl
pop
jl
inc
jo
das
pusha
outsl
enter
jne
in
jmp
mov
cltd
mov
inc
data16
inc
imul
rorl
aas
lea
aas
bound
push
sbb
or
xorl
movsl
arpl
enter
mov
inc
and
jns
dec
inc
dec
dec
je
repz
addr16
sbb
and
cmp
mov
add
mov
mov
sti
aad
out
dec
pop
mov
and
dec
sub
and
dec
sbb
mov
adcb
inc
jl
or
add
push
orl
mov
jl
mov
jae
xor
push
mov
arpl
push
add
push
inc
loopne
ljmp
and
and
repz
inc
cmp
xchg
mov
xor
mov
sbb
jmp
xchg
rclb
repnz
pop
cmpsl
lcall
add
scas
pop
nop
inc
jmp
sbb
mov
addb
sub
mov
cmc
rcr
push
pop
in
add
mov
loopne
dec
arpl
dec
dec
in
mov
pusha
add
pop
xchg
pusha
cmp
stos
adc
inc
loopne
jl
push
inc
mov
repnz
fistl
jb
inc
loopne
int3
pop
addl
inc
jo
test
and
pop
push
shlb
loopne
add
adcb
loopne
cmp
sahf
jl,pt
faddl
in
pusha
add
rclb
addb
mov
mov
loopne
out
cmp
mov
insl
jb
rorb
add
sub
mov
or
pop
lret
push
or
orb
sbb
mov
shlb
mov
in
pop
inc
and
nop
andb
jmp
mov
xchg
add
push
mov
jnp
hlt
push
lret
mov
dec
push
sub
mov
fnstenv
ret
push
mov
clc
pop
aad
inc
pusha
aam
xchg
fdiv
adc
out
push
jae
jge
jae
push
lcall
repnz
imul
xchg
shrb
and
in
push
sbb
aam
mov
sbb
xlat
stc
xchg
shl
jo
xor
scas
add
inc
and
orb
repz
fistpll
sbb
mov
jecxz
pusha
mov
inc
inc
xchg
arpl
rcrl
jbe
add
cmc
jecxz
inc
xor
mov
pusha
mov
mov
xor
arpl
cmp
cmp
loopne
xor
scas
jg
or
inc
leave
push
jp
sub
and
scas
out
clc
data16
mov
clc
pop
mov
rolb
inc
popa
decb
and
sub
in
mov
icebp
ret
popf
aam
inc
das
mov
pop
pusha
xchg
mov
loopne
sub
inc
sti
xchg
or
xorb
cmp
push
mov
mov
sahf
nop
shl
aas
stos
and
bound
add
popf
out
push
jg,pt
cmp
xchg
call
inc
fcoml
mov
shrb
pusha
testb
addb
or
mov
in
stos
inc
loopne
fcoml
jp
jae
push
xchg
cmp
and
or
movsl
mov
inc
sarb
stos
rolb
sbb
mov
sbb
mov
adc
shlb
inc
rcl
push
loop
and
push
cli
stc
rolb
add
stc
push
mov
and
add
xchg
inc
push
mov
adc
shll
out
jae
push
pusha
rolb
mov
imul
popa
test
addb
test
sub
inc
lret
lret
jbe
andl
sbb
cmp
or
mov
push
lahf
aas
and
and
out
outsl
fimull
rorb
scas
push
jnp
jp
push
aas
cmp
loopne
fimuls
loopne
mov
or
ss
lret
loopne
mov
adc
mov
cmpb
iret
mov
jno
and
cmp
mov
das
sbb
push
loopne
hlt
mov
pushf
lea
dec
push
lock
loopne
jmp
test
shr
mov
or
mov
fldenv
xchg
shlb
pop
sbb
loopne
rol
cmp
xchg
out
into
xchg
sub
pop
jge
jle
cmp
xchg
testl
cmc
push
sahf
test
inc
test
xor
push
pop
or
or
add
pop
add
sub
pusha
pop
pop
mov
xchg
inc
push
ljmp
xchg
roll
xchg
jne
push
scas
or
pop
mov
jmp
inc
in
inc
imul
xchg
imul
aas
xorl
inc
lock
loopne
test
mov
jp
jmp
in
std
addr16
xchg
orl
sub
push
icebp
frstor
jmp
inc
inc
dec
inc
rcrl
leave
dec
and
cmpb
loopne
mov
add
adc
xchg
adc
add
xchg
mov
xor
std
and
sbb
add
imul
iret
int
and
in
inc
add
mov
loopne
cwtl
gs
xor
pop
jne
cmpsl
dec
cwtl
fadd
push
mov
in
inc
adc
lods
and
cmp
xchg
pop
mov
inc
mov
addb
mov
dec
pop
or
cmp
sub
imul
mov
shll
loopne
lods
add
daa
lret
sub
loopne
leave
adc
adc
pop
or
inc
cmp
cmp
or
jne
fimuls
and
pop
push
cmp
pop
push
movsb
add
xor
lret
and
mov
jno
sti
pop
data16
pop
jle
and
and
and
ja
or
mov
mov
jg
sti
and
inc
mov
add
sbb
out
sub
iret
bound
xchg
add
stc
mov
movsb
shlb
movsb
and
std
push
mov
leave
mov
mov
push
mov
and
loopne
movsl
push
rolb
add
push
out
add
push
inc
lods
loopne
pop
mov
std
jo
mov
andb
fs
movsl
pop
rclb
sbb
cld
push
mov
outsl
mov
adcb
xchg
pusha
xor
pop
add
and
dec
mov
xchg
aaa
mov
pop
pop
lret
pusha
and
add
gs
xchg
ss
jae
inc
push
out
inc
push
loopne
jbe
clc
cmp
aaa
ficompl
pusha
rclb
sarb
and
pusha
xchg
ror
and
add
andb
sub
add
fld
sti
sbb
fistpll
pusha
pusha
cli
fwait
sbb
js
mov
and
test
and
addb
loopne
rolb
sub
sar
push
xchg
inc
push
pusha
mov
inc
inc
outsl
idiv
sbb
pusha
cmp
shlb
and
add
pusha
push
sar
adc
nop
movsl
in
bound
rol
add
jmp
push
and
rorb
add
mov
test
adc
inc
sub
and
ds
jg
mov
add
out
mov
ljmp
repz
das
push
adc
fdiv
push
push
mov
xor
add
cmc
pop
jbe
fldl
out
jg
roll
push
xor
out
fistl
or
aas
bound
popf
shll
sub
addb
mov
push
inc
rorb
gs
cmpsl
mov
push
out
addl
hlt
outsl
mov
xchg
loopne
xor
cwtl
jbe
push
xchg
xchg
or
sub
jecxz
mov
sub
rcrb
xor
inc
into
shll
test
and
xor
mov
inc
loopne
enter
sbb
les
add
xchg
jecxz
movsl
sbb
cld
shlb
cmp
andb
insb
movl
repnz
ret
aam
out
xchg
mov
inc
stc
or
loopne
cmp
or
add
cmp
loope
aad
and
xchg
inc
xor
add
aaa
push
sub
icebp
mov
arpl
fcoms
push
jg
shll
iret
xchg
jge
push
and
cmpb
add
out
lcall
fildl
loopne
icebp
sub
shr
test
repz
enter
and
xor
add
mov
inc
mov
in
sub
shlb
hlt
mov
jo
push
icebp
pop
hlt
sub
orb
add
mov
pop
out
sti
mov
iret
dec
xchg
cmp
mov
mov
mov
test
inc
inc
mov
and
out
dec
push
jae
outsb
mov
dec
call
inc
imul
inc
mov
les
jl
push
inc
loopne
lea
mov
lods
push
loope
add
and
cmp
lods
and
pusha
and
xchg
ss
sbb
call
jns
repnz
out
dec
push
xchg
fidivs
add
mov
outsb
inc
mov
ss
leave
mov
pop
add
mov
mov
sar
iret
mov
pushaw
push
xor
mov
ljmp
add
lahf
aam
nop
pop
xor
add
push
xchg
sub
sahf
pop
mov
aas
cli
or
repz
sub
mov
xchg
test
addb
push
add
push
out
mov
movsb
add
sarl
imul
dec
adc
aaa
adc
cmpsb
inc
orb
scas
loopne
adc
add
xchg
adc
pusha
pusha
push
fdivs
and
andb
jle
mov
lds
loopne
jmp
std
mov
or
inc
xchg
sub
and
jle
loopne
js
call
inc
xchg
inc
repnz
movsb
rolb
dec
cmp
push
mov
mov
inc
cmpb
inc
mov
leave
roll
jbe
add
loopne
andb
xor
jle
mov
ret
sub
ja
clc
add
loopne
adc
jg
sub
pusha
out
fsubs
mov
rcrb
cwtl
pusha
mov
cld
inc
adc
inc
fxch
js
mov
mov
cmc
aaa
dec
mov
lea
insb
inc
lock
loopne
andb
xchg
cmp
mov
xor
pop
xchg
push
pop
jge
inc
fildll
and
arpl
cmp
xchg
jns
mov
pop
pop
mov
cltd
push
adc
cmp
testb
subl
adc
xchg
mov
adc
shlb
add
inc
notl
add
and
sbb
andb
mov
test
sahf
push
push
mov
inc
inc
popf
cltd
pop
mov
dec
inc
pop
lods
pop
std
cwtl
repz
in
adc
daa
cwtl
leave
mov
dec
or
loopne
lcall
inc
and
inc
in
rolb
dec
shrl
pusha
pop
mov
bound
mov
lea
inc
jg
jbe
rcrl
icebp
jo
sbb
mov
loopne
xor
mov
mov
add
loopne
mov
rcrb
or
shlb
ret
scas
ret
icebp
mov
xchg
inc
lret
fadd
pop
aas
jg
mov
mov
mov
lret
loopne
pop
aam
rcr
push
cmp
add
xor
pop
into
xor
push
cltd
shlb
pop
cmc
hlt
cltd
popf
cmpsl
clc
das
roll
inc
or
gs
notl
and
mov
shlb
sub
cld
pop
adc
sub
andb
and
pusha
and
mov
outsl
stos
imul
loopne
ret
push
jns
lock
loope
push
mov
pusha
ljmp
rclb
xchg
ja
int
sbb
dec
out
pop
movsb
pusha
pusha
test
stos
loopne
sbb
test
mov
ret
nop
call
or
inc
dec
mov
push
sbb
dec
or
pusha
incl
test
mov
xchg
fists
out
add
inc
iret
pop
loopne,pn
test
cmpsl
dec
loope
and
ret
sbb
and
inc
push
daa
arpl
jecxz
jns
loopne
and
test
add
cmp
dec
inc
insl
cmpsb
loopne
mov
pusha
and
inc
lds
loopne
sahf
pop
mov
test
and
decb
add
loopne
es
inc
lds
mov
addr16
push
shr
scas
cmp
pusha
mov
inc
adcb
addb
pusha
loopne
push
int3
daa
pop
xor
add
rcrb
add
es
cmpb
inc
xchg
and
sbb
pusha
loopne
xchg
sub
sub
addb
lahf
insl
jbe
jecxz
pusha
add
lret
pop
xor
out
scas
inc
test
lods
and
loopne
mov
sti
add
clc
rcrb
loopne
and
push
fadd
lahf
leave
fstpt
rorl
scas
mov
movsl
xchg
out
xor
pop
mov
subl
mov
jbe
add
inc
icebp
adc
inc
aad
ret
cmp
rcrb
jae
fdivrl
addb
pop
cmc
gs
push
jne
inc
imul
mov
lcallw
lret
out
fwait
add
pusha
dec
out
sahf
ret
xchg
and
cmp
jnp
mov
pop
movsl
in
popa
mov
mov
or
add
xchg
out
lods
xchg
jne
sub
push
dec
das
adc
fidivs
xchg
cld
inc
icebp
loopne
clc
in
ret
es
push
xchg
push
sub
inc
xor
adc
mov
call
pop
loopne
or
mov
and
addb
leavew
in
sbb
cmp
out
and
add
shrb
fidivrs
mov
pusha
push
loopne
arpl
andl
jg
popf
push
ss
js
sahf
call
mov
fbstp
jns
cmp
lahf
mov
icebp
test
inc
xchg
test
inc
shrb
inc
inc
adc
out
dec
push
push
and
loopne
xchg
addb
add
shlb
add
cli
mov
jge
inc
and
xor
notb
das
and
mov
adc
repnz
inc
add
out
outsb
jbe
mov
xchg
stos
cmpsl
leave
andl
ret
lock
xchg
lock
cwtl
dec
push
fdivs
lods
add
sub
cmpsb
loopne
andl
jb
and
sbb
mov
adcb
test
into
sub
jmp
loope
pop
cmp
in
dec
inc
mov
push
xlat
adc
lods
xlat
mov
mov
pop
outsl
gs
jp
dec
rorb
test
sub
and
aaa
and
cli
adc
mov
ret
data16
mov
jno
nop
fmull
sub
imul
loopne
imul
fwait
cmp
add
sti
mov
pushf
xchg
mov
sbb
loopne
popa
ficoms
pop
sub
aam
shll
pop
ret
inc
leave
push
and
pushf
mov
scas
loopne
repnz
pop
mov
mov
clc
imul
fsubrs
jmp
xchg
movl
mov
data16
shl
cwtl
xorl
cmp
rolb
and
dec
addr16
mov
cmp
rcll
loope
mov
inc
pop
outsl
sub
in
test
cmpb
pop
xor
jg
mov
jmp
mov
jge
jb
call
mov
xor
mov
add
inc
pusha
ficoml
loope
andb
pop
idivl
outsb
ret
lods
or
pusha
xchg
ja
push
jbe
scas
fiaddl
fidivrs
iret
pop
adc
push
sar
add
fnstsw
xor
sbb
daa
push
and
rcll
mov
inc
xor
shl
js
pop
sub
or
lcall
lea
push
pop
pop
aad
xchg
sbb
loope
inc
loopne
pop
jle
jle
gs
add
pop
fsubp
push
mov
inc
pop
xorl
push
mov
cmp
scas
mov
cmp
cmp
adc
mov
mov
andb
and
xor
sub
lds
inc
xor
mov
je
repnz
add
lods
shlb
add
cltd
mov
pusha
sbb
mov
hlt
hlt
pop
call
cmp
jo
sbb
hlt
push
inc
aad
add
pusha
ficoms
sbb
jmp
jle
fsubs
mov
lahf
cmp
jp
pop
mov
lret
nop
or
inc
xor
arpl
cmpsb
inc
and
inc
sub
bound
push
icebp
rcrl
outsb
or
testl
adc
push
int3
aas
sub
ficoms
jbe
loopne
loop
sbb
mov
sbb
sub
mov
lods
and
lret
cmp
daa
jno
cmp
shlb
loopne
fdivl
and
addb
cmp
cwtl
xchg
sbb
cld
leave
pop
cltd
mov
add
mov
push
xchg
mov
popa
jle
jo
add
add
pusha
in
repz
or
cmp
fdivrl
andb
in
mov
loopne
test
pusha
ffreep
loope
bound
mov
inc
hlt
aad
mov
stos
shlb
inc
imul
negl
nop
mov
mov
add
xchg
mov
add
pusha
or
cmp
loopne
mov
cwtl
xor
xchg
xlat
mov
scas
loopne
loopne
add
jp
fwait
or
es
mov
lret
negl
or
and
scas
pusha
subb
test
fwait
mov
test
loopne
sarl
xor
xor
inc
es
shrb
loopne
and
lea
in
or
mov
shlb
cld
pop
rcrb
lahf
xchg
lods
shlb
shlb
push
add
xchg
lea
ljmp
mov
inc
inc
into
jl
inc
test
sarb
adc
pop
leave
dec
mov
mov
dec
repz
jne
addb
out
std
or
sti
sbb
loopne
bound
pusha
and
xlat
add
add
jg
lahf
add
pusha
movsl
jbe
jl
add
mov
movzbl
clc
dec
cmp
ret
movsb
mov
push
add
sbb
addb
cmp
pop
test
adcb
and
shlb
add
inc
cmpsl
push
mov
out
fwait
adc
cli
fidivs
addb
and
cld
insb
imul
inc
mov
int3
pop
jno
jbe
mov
nopl
push
js
xlat
push
imul
mov
sub
and
mov
sub
add
or
and
sarl
mov
adcl
in
mov
xchg
or
mov
loopne
cmc
mov
add
pop
jo
aam
adc
mov
das
push
mov
cmp
jge
pusha
add
imul
add
jmp
jl
fwait
imul
xlat
nop
add
push
fsubp
adc
add
pusha
je
sti
js
jmp
add
push
popa
xor
aam
push
and
sbb
lea
inc
dec
stos
add
mov
and
add
testb
sbbl
pusha
sub
inc
mov
ljmp
lahf
and
fwait
mov
inc
mov
jl
imul
pop
jp
popf
sbb
ss
andb
das
fnsave
pop
adc
test
add
mov
sbb
pusha
jmp
add
aaa
xchg
test
and
loope
add
mov
sahf
rolb
mov
inc
xchg
push
test
add
lods
xor
xchg
jo
loopne
sahf
jmp
aaa
fs
adc
loopne
add
inc
insb
dec
fdivr
cmp
sti
lds
and
shlb
push
in
pusha
mov
loope
add
cmp
mov
inc
cmc
dec
xchg
xchg
mov
shl
sbb
pusha
loopne
out
and
cmp
inc
xchg
add
inc
rcr
and
and
ljmp
add
cmpsl
cmpsb
shlb
sub
and
or
pop
adc
mov
add
nop
jae
push
pushw
add
pop
adc
scas
rclb
inc
pop
inc
enter
inc
inc
ljmp
mov
addb
and
hlt
out
lods
and
sbb
or
mov
xorb
fwait
inc
dec
xlat
aam
pop
in
les
rorl
stos
andb
and
mov
cltd
call
and
lret
test
inc
int
stc
mov
xchg
jg
pop
fcmovu
and
mov
push
mov
fwait
movsb
and
mov
andb
and
pop
movsl
jne
movb
lret
add
adc
adc
shlb
popa
aam
xchg
cmp
and
lock
jne
push
mov
rclb
leave
inc
push
mov
loopne
mov
and
rolb
es
adc
sub
pusha
lock
insl
or
and
andb
repz
into
call
les
outsl
fimuls
fiaddl
addl
add
add
mov
inc
sarl
sub
pusha
inc
lret
pusha
mov
push
test
pusha
idiv
mov
ss
cmpsl
sbb
ljmp
pop
outsb
sub
pusha
loopne
in
fcmovbe
or
popa
out
shlb
mov
and
rolb
mov
pusha
and
call
dec
push
dec
fs
test
enter
dec
cmp
or
xchg
add
push
cmp
mov
repz
jp
bound
pusha
mov
shlb
fidivs
int
xor
mov
or
cmpb
movsb
and
jne
add
sub
push
push
lock
jp
push
push
out
and
out
push
addb
cltd
sbb
dec
sub
enter
mov
jge
insb
out
sbb
inc
adc
rcrb
cmp
inc
inc
xchg
ror
test
inc
js
mov
mov
mov
inc
std
push
xchg
inc
aad
in
sub
loop
test
inc
adc
sarb
gs
rcll
mov
inc
dec
sbb
scas
les
dec
daa
inc
push
pusha
sarb
add
das
push
mov
cmp
mov
push
dec
inc
jl
int3
pop
inc
pop
addr16
imul
orl
cmp
and
inc
je
inc
andb
jg
jge
andb
cmp
das
mov
xchg
cmpsl
dec
imul
inc
shrb
leave
roll
movsb
rol
stc
xchg
push
rol
mov
mov
loop
pop
xor
mov
cmc
jne
sub
inc
aas
mov
cmp
or
in
inc
test
rclb
push
sub
rorb
adc
pusha
pusha
imul
pop
jns
sbb
dec
lods
sub
push
loopne
cmpsb
add
mov
pusha
add
pop
add
xchg
aad
stc
mov
loopne
out
testb
mov
sbb
dec
fidivs
notl
jnp
adcl
movsl
cmp
cmp
add
push
adc
or
addb
jl
jl
inc
push
adc
cmp
scas
loopne
jbe
aaa
pusha
out
jecxz
pop
mov
out
jne
pushw
dec
imul
shrb
loopne
pusha
loopne
add
dec
xchg
cmc
into
lods
xchg
lea
add
push
push
jmp
xor
add
sbb
dec
bswap
push
and
xchg
lds
mov
dec
lahf
lret
jp
xchg
mov
andb
xchg
loopne
loopne
mov
cli
mov
adc
pop
imul
cmpsl
jbe
jnp
scas
inc
mov
xchg
dec
sbb
xor
push
xchg
jmp
add
shlb
add
daa
xor
test
xchg
add
and
inc
shrb
push
add
pushf
adc
xlat
pop
or
add
and
testb
sbb
inc
adcb
movl
xor
push
mov
lock
jnp
sub
and
dec
pop
push
and
lcall
inc
inc
lahf
add
mov
dec
sub
fildl
adc
jle
lods
std
loope
out
loop
fadds
lret
mov
and
fstl
mov
shrl
inc
and
mov
add
pop
out
mov
lock
mov
xchg
andb
sti
sahf
mov
push
mov
stos
inc
or
add
mov
push
mov
fildl
insb
mov
lcall
ret
sbb
lods
sbb
cmp
pop
fnstenv
rorl
shlb
mov
das
jo
sbb
adc
ret
add
insl
cwtl
out
or
shlb
lds
jae
xor
shll
scas
xlat
add
scas
shlb
cli
mov
adc
negb
jle
clc
sarl
aas
fiadds
mov
push
inc
andb
loopne
imul
stos
rol
sbb
cmpsb
loopne
sub
ret
out
sti
hlt
insb
and
scas
pusha
and
inc
add
pop
fmuls
stos
mov
jae
jo
adc
pop
popf
imul
lods
pusha
sarb
push
in
test
rol
push
popf
aas
mov
ds
loopne
in
inc
push
dec
mov
mov
cmpsb
shlb
or
inc
lock
pop
clc
aam
pushf
lea
xchg
mov
mov
rorb
add
xchg
lods
and
test
scas
push
mov
scas
mov
subb
push
xchg
dec
add
jecxz
sub
loopne
fnsave
loopne
jo
orl
fsqrt
jae
into
jnp
int
pop
test
inc
insb
sub
imull
pusha
rcl
or
mov
cwtl
add
mov
dec
mov
jo
cmc
mov
shll
mov
mov
mov
aam
add
fisubl
adc
cmpsb
pusha
loopne
loopne
inc
cmpsb
rol
jmp
adc
mov
stos
fdivl
sub
inc
ja
cmpsl
mov
rorb
out
xchg
dec
pop
pusha
inc
jg
or
add
and
sbb
loopne
jno
add
inc
xor
adc
pop
gs
lahf
std
aaa
jmp
sub
sub
pusha
fdivrp
push
mov
xor
icebp
hlt
cmpsl
mov
xor
mov
lds
dec
pop
dec
pop
clc
imul
add
push
inc
pop
lea
mov
movsb
addb
jns
scas
pusha
pusha
das
xchg
call
jne
jb
ljmp
or
pop
jae
jge
inc
mov
cmpb
inc
xchg
stc
out
add
xchg
lock
and
in
fiaddl
and
rolb
movsl
mov
fiadds
scas
aaa
add
pusha
scas
fwait
mov
fsts
push
lahf
jmp
inc
xor
movsb
inc
adcb
out
inc
mov
cld
cmp
dec
pushf
inc
test
rcrb
daa
lcall
jae
xor
xor
aad
add
loopne
mov
test
fcmovu
out
add
subb
sub
add
xchg
mov
loopne
cmpsl
pop
out
aad
cmpsl
and
xorb
addb
add
or
inc
or
inc
adc
or
stos
dec
sbb
and
into
inc
punpcklwd
xchg
sub
inc
cmp
in
imul
sbb
mulb
stc
andb
jne
loopne
push
in
in
fld
shll
sbb
sahf
and
mov
movsb
mov
and
push
mov
pop
sub
sbb
arpl
sti
inc
lcall
pop
call
inc
mov
xor
stos
jl
jno
add
addr16
xchg
inc
mov
lds
adc
mov
xchg
xchg
add
pop
out
data16
dec
or
xor
pusha
add
mov
mov
sub
call
mov
inc
inc
cmp
add
mov
mov
fmull
loop
jno
jmp
adc
and
rolb
pop
fwait
cwtl
ret
cltd
mov
cli
add
pusha
shrb
das
sbb
sub
inc
dec
jle
pop
cli
dec
sbb
aam
and
lods
andb
jle
js
test
and
mov
add
add
test
add
xchg
add
rolb
fdivrs
jo
inc
mov
mov
inc
jle
sti
mov
fwait
jnp
cmp
or
inc
sbb
inc
add
stos
and
scas
dec
in
mov
movl
xor
and
je
jge
outsl
push
mov
aas
jns
mov
push
and
nop
rolb
pusha
sti
xchg
sub
add
push
je
loopne
and
mov
cmp
rcrb
and
loopne
xor
cmpsl
cwtl
in
xor
inc
je
pusha
pusha
inc
jle
adc
add
aas
jecxz
and
int
add
mov
pusha
adcb
and
pop
jae
dec
ja
cmp
sbb
dec
mov
cmp
fld
xchg
aas
jae
jecxz
add
sub
cs
pusha
int
inc
sbb
pop
mov
add
xchg
sbb
or
xorb
sbb
xchg
sbb
shr
insb
jmp
shrl
outsb
cmp
and
in
inc
inc
sub
pop
stc
iret
pushf
adc
cld
cwtl
push
pop
ret
or
cmp
adc
shl
xlat
mov
sbb
push
jg
std
stos
jnp
or
mov
bound
idivl
lock
jg
cwtl
cmp
rol
cwtl
push
xchg
cld
dec
pop
movsl
cmp
inc
lods
in
out
mov
jns
cmpsb
loopne
add
inc
inc
lock
inc
pusha
filds
stc
enter
pusha
push
testb
nop
push
mov
mov
mov
add
add
jb
shlb
pop
sbb
push
mov
cs
cmpb
xchg
inc
push
and
shl
lds
and
bound
icebp
repnz
and
add
and
lcall
push
imul
mov
mov
dec
nop
sbb
and
pusha
mov
push
sub
inc
lret
inc
and
loopne
push
ljmp
lret
stos
and
inc
add
je
dec
loopne,pn
dec
mov
mov
and
push
sarl
mov
pushf
push
or
inc
std
movsl
stos
rolb
mov
inc
loopne
push
push
mov
in
fwait
cmpsb
addb
pusha
lock
push
push
pusha
loopne
mov
loopne
daa
into
mov
mov
cmp
add
mov
and
jle
or
mov
inc
loopne
pusha
lock
into
push
mov
push
mov
arpl
mov
fmull
rol
out
rcrb
je
add
add
pusha
lds
xor
pop
addr16
repnz
push
mov
jmp
aas
insb
addb
call
pusha
and
inc
jnp
cs
inc
out
insb
cmc
outsl
ja
andb
jns
cmp
push
jo
bound
loopne
andl
lods
inc
pusha
jae
lea
mov
inc
pop
arpl
outsl
mov
loopne
pop
mov
mov
mov
sbbb
jns
push
dec
push
rolb
inc
fs
cmp
mov
add
loopne
jns
pop
inc
push
mov
ror
mov
and
mov
sarb
out
shlb
ds
sbb
enter
sbb
add
shrb
and
test
jmp
xchg
xchg
fisubl
subl
or
adcb
or
rol
push
and
sbb
test
loope
mov
lock
sbb
sub
loopne
in
ljmp
shl
imul
jnp
adc
nop
xchg
in
adc
mov
inc
cmp
inc
push
fnstsw
inc
sub
out
push
jno
daa
dec
push
rolb
pop
adc
adc
sbb
cmp
cltd
lods
inc
sarb
adc
mov
inc
mov
mulb
loopne
mov
and
lret
push
scas
adc
loopne
adc
fstpl
mov
loopne
pusha
and
shr
nop
test
inc
ljmp
ret
adc
xlat
out
push
dec
test
mov
inc
jmp
and
or
or
push
push
inc
nop
insb
into
inc
decb
mov
mov
or
rclb
and
cli
cmp
push
jns
faddl
sbb
dec
push
dec
inc
fbld
loopne
mov
ss
add
ss
fnstenv
sbb
mov
add
out
sub
xchg
and
test
rcrb
mov
mov
cmpl
call
shl
fs
notl
outsl
fisubs
inc
add
pushf
adc
jno
loopne
jae
dec
dec
push
andb
xchg
sub
jl
sub
loopne
punpckhdq
mov
ljmp
andb
and
add
add
cld
shl
adc
or
inc
pop
cmp
sbbb
outsb
jbe
jo
and
rorb
rcrb
cmp
xchg
std
push
add
outsl
test
andb
mov
test
fwait
out
dec
lods
andb
jnp
loopne
je
outsl
jge
xor
or
aam
fwait
mov
imulb
rolb
nop
push
cmp
and
in
push
and
sbb
fxam
push
sub
andb
jl
popa
ja
cmp
add
adc
jl
adc
xchg
std
daa
sbb
jp
cs
lods
andb
stos
sbb
jge
ja
sbb
pop
or
rol
jno
mov
cmp
push
mov
scas
pop
in
mov
jae
mov
lock
xor
addb
fst
pop
mov
jnp
add
inc
lahf
push
in
loopne
pslld
push
cmp
mov
push
aaa
or
pop
loop
and
rep
adc
mov
inc
push
lret
xchg
test
add
ss
shlb
in
mov
loopne
add
pusha
rolb
jb
or
sbb
pop
push
jnp
sub
xor
mov
repz
xor
in
ja
dec
adc
fidivrl
xor
and
inc
sub
jp
adc
and
imul
es
fisttpl
pop
hlt
ret
repnz
xor
lret
dec
xor
and
push
imul
push
andb
pop
hlt
jnp
xchg
andb
and
sbbb
aam
pop
cli
pop
mov
xchg
add
jecxz
adcl
hlt
ret
and
xor
add
fstpt
jle
insl
cmpsb
loopne
daa
push
popf
mov
add
rol
cmp
sbb
je
jne
push
pushf
mov
and
loopne
insb
sub
mov
clc
push
mov
cltd
mov
mov
filds
push
mov
out
push
or
mov
andb
insl
movsb
mov
jmp
stc
add
mov
aam
roll
test
dec
decl
cwtl
sti
int3
insl
rclb
add
addb
mov
xor
popf
test
mov
cmp
and
jp
ffree
and
jmp
daa
and
movsl
leave
sbb
popf
mov
lea
sub
imul
adc
shlb
mov
or
inc
shll
cmp
mov
loopne
and
loopne
movsl
cli
bound
jnp
xor
lahf
push
add
inc
shl
xchg
xlat
je
and
cmc
es
and
fildl
mov
xchg
xchg
mov
pop
mov
stos
inc
sub
inc
mov
and
andb
mov
flds
mov
stos
sbb
mov
mov
leave
cs
add
mov
rol
popa
lods
andb
shl
lret
iret
dec
push
adc
andb
loope
xchg
icebp
jno
andb
ret
ffree
sub
cltd
mov
push
outsl
js
jb
cmpsl
stc
fisubs
js
mov
out
loop
pop
rclb
sub
mov
mov
sbb
or
xor
add
loopne
in
inc
push
xchg
in
jecxz
lret
rorl
mov
in
and
add
or
xorb
sub
jmp
lret
push
pusha
inc
ljmp
mov
mov
and
fwait
outsb
inc
addb
inc
jb
sbb
sub
sbb
mov
mov
out
lods
mov
pusha
cmp
loopne
daa
cld
into
es
mov
xchg
pop
or
pusha
lret
mov
aas
and
xor
cmp
lods
mov
sti
loope
sarl
xchg
mov
add
mov
cltd
jg
sti
sbb
ret
ret
xor
test
stos
mov
inc
lock
lock
and
fidivl
sbb
inc
pop
mov
iret
jbe
push
inc
add
mov
icebp
lock
mov
sbb
and
rcll
and
inc
or
adc
jo
addb
ja
out
pop
je
lret
rcrl
stos
mov
cmpl
enter
imul
mov
popa
mov
push
inc
xchg
and
in
dec
std
mov
fnstcw
xchg
adc
mov
sbb
add
imul
pop
out
dec
lret
mov
cmp
or
popa
pop
ret
jbe
fwait
jle
jg
lret
ds
clc
int
in
decl
loopne
and
out
adc
and
push
sahf
les
inc
les
fldcw
stos
xor
pop
imul
mov
fistpl
push
mov
mov
and
aas
scas
pusha
add
xor
xor
frstor
int3
mov
shll
inc
ss
mov
inc
jge
pusha
mov
mov
in
int
les
add
dec
mov
and
inc
in
mov
cmpsb
and
inc
subb
lds
dec
lods
mov
loope
adc
fldt
out
and
loopne
ja
les
pushf
notb
jg
jl
loopne
push
loopne
fstl
jp
cmpsb
loopne
enter
repnz
add
mov
sbbb
rcl
into
mov
pusha
pop
sti
cmp
rcll
mov
lods
push
pusha
inc
push
sbb
pusha
loopne
ljmp
lahf
or
sbb
loopne
adc
in
cs
add
dec
and
pusha
jp
inc
xchg
pop
jg
aaa
pslld
hlt
outsl
pop
add
cwtl
jo
push
insl
add
pop
push
shlb
push
mov
mov
inc
push
fwait
in
in
lods
pusha
inc
test
cmp
shr
loopne
mov
addb
cld
xchg
pop
pop
aad
push
cmp
pusha
subb
inc
loopne
lea
mov
sub
mov
jns
pusha
loopne
jle
sbb
inc
pop
outsb
jo
andb
pop
scas
xchg
jo
mov
outsl
mov
cli
lock
mov
inc
sbb
pusha
fildll
jmp
add
jp
bound
jecxz
leave
gs
pop
dec
fsubr
adc
stc
mov
sbb
loopne
sbb
aad
stos
mov
add
es
loopne
bound
loopne
test
pop
pop
push
repz
adc
mov
rolb
in
sub
sbb
mov
icebp
negb
adc
jp
ljmp
and
add
pop
dec
and
jp
or
fistpll
dec
jnp
jbe
aam
xor
push
iret
sbb
adc
and
cmp
je
cmp
dec
dec
cltd
xor
and
in
inc
mov
pop
jns
cmp
jl
ss
xor
add
out
incl
and
sbb
adc
pop
dec
dec
bound
mov
fldt
and
add
iret
jno
fidivs
iret
or
in
jle
pop
dec
mov
push
loopne
jmp
and
xor
into
add
xor
pusha
loopne
int
adc
cwtl
push
pop
mov
loop
pusha
and
sbb
push
out
add
loopne
addb
fwait
rcl
iret
add
test
shrb
mov
and
cli
lods
mov
and
loopne
lods
loopne
push
mov
mov
inc
dec
mov
std
movsb
add
popa
std
iret
dec
fidivrs
push
rolb
addb
shlb
fldcw
cmp
dec
mov
sbb
movsl
les
in
push
xor
in
cmp
cmpsb
shlb
test
and
repz
jo
stc
enterw
pusha
mov
loopne
mov
mov
add
rorb
mov
add
mov
pusha
test
sub
pusha
push
push
inc
imul
mov
and
mov
sbbb
cltd
mov
or
sbb
fdivrl
xchg
push
or
jae
aam
mov
mov
out
cld
and
lahf
mov
pusha
loopne
cmp
jp
mov
xchg
fisubrl
or
stc
push
jns
outsl
repz
cmpsl
subl
fsubr
jne
mov
leave
jmp
rolb
andb
in
ret
mov
inc
inc
inc
mov
add
inc
pop
cmp
das
bound
mov
clc
and
loopne
push
testb
je
adc
mov
push
cli
pusha
je
shl
mov
hlt
in
mov
mov
fisttpll
daa
scas
inc
in
xchg
les
test
mov
jmp
xor
push
arpl
pop
lahf
or
loopne
mov
sub
aad
cltd
out
jb
inc
insb
pop
loop
xchg
insb
sub
cmp
rcl
add
ret
pusha
mov
int3
out
push
pop
icebp
adc
cmp
jmp
add
notl
xor
cmp
mov
sub
mov
inc
push
push
mov
outsb
sub
insb
push
sbb
inc
popf
test
sbb
andb
mov
adc
lcall
ja
test
add
mov
and
lret
loopne
in
and
push
or
daa
pop
bound
lret
mov
cltd
fadds
lret
fdivrp
int
repz
shlb
cmpsb
add
push
sbb
stc
nop
ljmp
pop
stos
stos
punpckhdq
pusha
loopne
fldenv
icebp
loop
aaa
sub
pop
repz
addr16
pusha
pop
fwait
dec
stos
cmp
subb
fists
inc
inc
sbb
or
mov
loope
int3
xchg
cmc
sti
scas
add
and
add
test
and
xchg
ljmp
mov
out
into
add
pusha
shll
inc
pop
xchg
mov
daa
dec
sahf
rol
xor
rolb
loopne
jns
cmp
ja
addb
and
inc
inc
pop
push
cs
mov
mov
sbb
push
hlt
test
arpl
fmulp
or
sub
dec
enter
arpl
rolb
mov
adc
xchg
sti
int3
pusha
jmp
and
xorb
stos
and
shl
outsl
fdiv
push
ficomps
adc
push
insb
dec
add
ret
je
ljmp
mov
dec
xor
cmc
cmp
push
pop
xchg
push
mov
cltd
lret
cltd
inc
jg
cmpsl
mov
xchg
bound
arpl
andb
stc
stos
mov
xor
pusha
lahf
cmpsb
and
lock
lods
jns
adc
add
mov
lock
jns
sub
add
mov
fidivl
popa
jnp
cmpl
xchg
lahf
shrb
pop
data16
or
adcb
aaa
add
mov
lods
xor
pusha
push
in
and
inc
adc
rolb
and
pop
cs
inc
fwait
mov
ret
mov
sbb
popf
lock
inc
pop
adc
mov
dec
cli
loopne
fwait
repz
scas
pop
xchg
jae
call
daa
sub
inc
mov
inc
loopne
shlb
cmovl
push
sbb
dec
fs
xchg
jecxz
push
in
icebp
loopne
test
bound
pusha
imul
and
fdivs
addr16
movl
add
andb
add
and
movsl
and
inc
bnd
addl
loopne
push
pop
dec
loopne
dec
shll
and
loopne
and
lods
rcrb
sub
and
and
shlb
ret
lret
adc
cmp
cld
sahf
in
sub
and
mov
push
push
sbb
mov
pusha
repz
push
jns
cld
jns
fdivrs
idivl
jae
out
into
shlb
mov
adc
in
jb
mov
mov
lods
add
shll
pop
fidivrs
loop
andb
pusha
stc
shll
shlb
jo
loopne
push
and
inc
imul
jmp
out
lahf
into
mov
mov
or
loopne
inc
fucomi
out
sub
push
loopne
sub
inc
orl
call
add
pusha
js
adc
jnp
andb
aas
test
pusha
and
outsb
mov
pop
out
ret
jnp
ficomps
insl
xor
popf
ret
movsb
and
loopne,pn
test
mov
imul
cmp
add
aad
push
pushf
adc
mov
jecxz
les
add
jle
add
subb
or
push
mov
mov
sbb
dec
fcomip
add
loopne
enter
repz
sub
call
test
xchg
js
jae
jne
in
dec
popf
out
push
scas
push
add
and
andb
inc
mov
fists
in
or
loopne
mov
mov
add
sub
mov
or
subb
inc
pusha
fldl
mov
push
cltd
cmp
jns
push
inc
cmpsl
insl
inc
movsb
pusha
add
test
inc
push
push
pop
dec
xor
pop
or
cmpb
and
pusha
xchg
pop
jnp
rep
mov
in
rcll
pop
inc
loope
loopne
and
mulb
add
add
and
mov
push
mov
pusha
fsqrt
aam
ficomps
jge
outsb
mov
mov
arpl
xor
jns
or
sub
clc
enter
cmp
add
push
jno
pop
aaa
mov
shlb
mov
scas
pusha
shlb
jmp
add
cmpsl
mov
mov
out
dec
mov
add
xchg
divb
cmp
sbb
mov
jecxz
jmp
adc
bound
xor
inc
xor
stos
add
pop
jmp
lret
mov
rol
xor
std
cld
loop
cmp
inc
adc
pop
idivb
inc
add
jg
scas
mov
fiaddl
cmp
sti
cmc
pop
mov
ret
and
mov
mov
push
and
xchg
sbb
cmc
movsb
pusha
and
jb
mov
mov
add
jge
jge
pusha
xchg
push
fwait
imul
jmp
mov
cld
ljmp
jmp
cmp
sti
scas
add
and
test
cmc
push
mov
lret
in
push
lret
lret
jecxz
mov
pushf
lods
inc
cmpb
adc
lret
and
jns
ret
pop
jns
mov
dec
dec
lahf
push
pusha
and
and
pop
cmpsl
mov
adcb
pusha
leave
xchg
cmc
pop
add
or
jnp
dec
add
imul
add
sarb
mov
mov
sarl
pusha
subb
add
int
popf
and
push
mov
adc
sets
pusha
scas
xchg
out
pop
xor
xchg
pop
jmp
rclb
hlt
dec
mov
pusha
arpl
addb
loopne
push
in
mov
popa
shll
push
test
push
rol
mov
mov
xorb
rorb
aas
mov
mov
out
rcrl
mov
lods
add
inc
ret
lahf
inc
rcl
push
das
pop
add
xchg
jae
xor
jl
cmpsl
mov
cmp
sub
outsl
ljmp
int3
jnp
test
andb
outsb
fadds
inc
into
ja
lods
and
pop
andb
sbb
ret
out
shlb
mov
mov
fsubrl
enter
pusha
loopne
mov
mov
cmp
mov
jle
mov
inc
xor
stc
pushf
popf
inc
mov
inc
and
mov
jnp
adc
pusha
or
adc
xchg
mov
pusha
std
add
loopne
repz
mov
jl
adc
pop
jbe
add
inc
addb
fistpll
add
andb
pusha
sbbb
inc
adc
bound
mov
and
jmp
pop
aam
int
jae
and
int3
inc
into
jl
andb
xchg
mov
jno
dec
mov
subb
imul
loope
pop
shl
scas
std
sub
pop
fwait
leave
fwait
cmp
aas
leave
testb
sbbb
mov
test
lds
aam
mov
sub
mov
pusha
mov
sbb
and
lret
add
pusha
push
jno
inc
shlb
or
mov
test
rolb
xor
and
and
sarb
lret
adc
loope
push
rcrb
fnstcw
sti
cmpsl
sub
andb
and
sub
hlt
xchg
pushf
je
in
fs
adc
pusha
addb
mov
mov
jg
inc
push
xchg
loopne
jecxz
cmc
add
sub
bound
push
dec
push
into
inc
insb
pop
lret
sbb
cmpsb
loopne
js
sarl
rolb
cwtl
sub
andb
repnz
lock
dec
mov
lret
int3
ss
cwtl
push
dec
pop
pop
xchg
xorl
rolb
fisttpll
aad
cmc
ds
sub
cmp
fsubl
ret
and
sub
add
mov
addb
mov
add
shlb
scas
loopne
subl
sbb
adc
pusha
mov
orl
pop
sbb
fwait
scas
add
addb
adc
loopne
sti
mov
mov
mov
push
mov
fwait
ret
sbb
jecxz
and
pop
je
add
je
addl
and
shlb
leave
out
ja
ljmp
xchg
sahf
jmp
arpl
int
stos
push
pop
xlat
fildl
rolb
inc
pop
mov
mov
repz
mov
pusha
add
and
pop
bound
lret
andb
jle
xchg
push
mov
rol
cld
daa
mov
mov
pusha
push
push
push
addb
inc
loopne
adc
xchg
inc
lcall
loope
inc
xchg
in
mov
inc
shlb
loopne
mov
fidivrs
xor
test
xchg
les
inc
mov
lock
sub
push
xchg
jle
xchg
mov
test
inc
jns
cli
xor
in
sti
push
and
das
cs
rolb
xchg
jg,pt
lahf
add
add
loopne
xchg
inc
sub
pop
mov
rolb
pusha
rolb
cmp
mov
pop
lock
addr16
and
dec
push
dec
and
andb
mov
sbb
into
outsl
nop
std
scas
mov
scas
and
pop
popf
cmpsb
pusha
mov
xor
xchg
notb
push
nop
fs
aas
mov
imul
cmpsl
rcrb
inc
inc
cmp
pop
movsb
add
outsb
add
psrlw
cmp
test
mov
lret
jae
add
negb
lock
jae
mov
inc
shrb
mov
sub
cmpb
xchg
inc
adc
rol
pop
popf
cmc
sbb
push
fidivrs
xchg
add
data16
pusha
inc
and
and
andb
das
fs
cld
jg
and
mov
mov
or
inc
imul
pop
push
faddp
push
mov
mov
sub
inc
jge
xchg
dec
dec
adc
add
jp
inc
mov
and
add
or
and
xor
shrb
push
mov
loopne
xor
out
xchg
pop
arpl
jo
push
pop
or
adc
rcll
in
mov
pusha
fwait
andb
pushf
adc
sarb
insb
jbe
xchg
jp
and
mov
sbb
daa
outsl
push
add
or
pusha
adc
fsubs
mov
inc
fsubl
and
mov
cmp
addb
bswap
flds
mov
repz
daa
sahf
jg
inc
stos
inc
addb
add
mov
push
sub
cli
daa
loopne
out
mov
or
inc
movsl
bound
sbb
in
popa
jl
inc
pusha
sbb
fs
mov
push
nop
pop
adc
clc
push
in
jae
sub
andb
or
add
sbb
xchg
mov
mov
inc
push
pushf
hlt
leave
fdivr
xchg
push
into
ja
mov
rolb
mov
or
push
jo
lods
fwait
sahf
xchg
nop
insl
andb
sbb
je
outsl
imul
inc
inc
mov
js
and
pop
das
mov
dec
ja
lcall
cld
mov
inc
add
xchg
add
sbb
and
fcomi
ffree
jecxz
fistl
iret
mov
loopne
shlb
loop
jecxz
push
sbb
inc
pusha
push
cmp
xchg
xor
leave
mov
inc
mov
lret
lds
arpl
xchg
ja
cmp
shlb
and
mov
jo
jl
rolb
xor
test
inc
divl
imul
xorb
mov
mov
leave
inc
push
out
xlat
inc
sarb
shrb
inc
scas
andb
ror
out
push
imul
jno
xor
sbb
fstpl
loopne
aaa
mov
push
insl
ficoms
leave
pop
inc
jo
pusha
loopne
inc
bound
rolb
dec
enter
sbb
and
test
inc
lea
add
inc
rorb
lahf
mov
flds
cmp
and
popf
stc
dec
icebp
sub
and
lock
mov
rolb
inc
iret
jl
jl
and
mov
inc
rcrl
lods
in
jl
sub
and
jmp
fucomip
js
shr
sbb
cmp
or
inc
rcrl
mov
and
loopne
loopne
out
loop
sbb
insb
add
mov
jg
lahf
jbe
xchg
adc
js
les
loopne
and
sub
subb
mov
rcrb
xchg
pop
imul
push
shrb
and
nop
repz
stos
xor
mov
cwtl
add
pusha
iret
cmp
push
sbb
mov
fbstp
push
mov
shl
adc
xor
loopne
push
addb
pusha
sti
add
and
xor
pusha
or
mov
fwait
testl
sarb
sahf
insl
add
loopne
xchg
popa
jmp
mov
pop
pushf
inc
dec
mov
dec
das
mov
mov
and
jmp
push
aaa
dec
mov
out
lret
fwait
outsb
shll
call
pop
fcmovne
outsl
lret
lock
jle
fsubrl
and
and
loopne
and
jns
pusha
mov
push
xchg
dec
dec
and
sar
dec
sub
xlat
push
inc
push
sahf
scas
pusha
sarb
aas
enter
es
mov
pop
lods
loopne
iret
xchg
lahf
and
shr
or
mov
mov
adc
dec
add
rolb
pop
or
and
pop
cmpsb
rolb
add
mov
cltd
mov
loopne
jo
jp
add
mov
pop
mov
add
xor
loopne
push
add
ret
push
mov
movsl
and
shrl
cli
outsb
pop
push
sbb
lret
add
pusha
mov
sarb
andl
mov
ljmp
and
sub
popf
adc
inc
mov
cwtl
mov
xorb
sbb
int3
cld
pop
dec
ret
in
adc
mov
shl
loopne
inc
mov
and
inc
hlt
or
rclb
mov
inc
mov
shlb
sub
and
jl
mov
add
sahf
in
icebp
xchg
dec
pop
stc
jecxz
jnp
xchg
out
xor
and
aaa
push
and
mov
sub
shrl
adc
je
mov
mov
mov
xor
dec
xor
lock
cli
adc
inc
jae
addb
loopne
jns
xchg
out
xor
std
sbb
movsb
pusha
loopne
and
mov
iret
add
or
cmp
and
pusha
iret
dec
jns
mov
push
in
fcoms
movsb
mov
push
rorl
das
add
pop
test
shlb
add
pusha
loopne
inc
dec
sub
shlb
mov
aas
nop
movsl
inc
push
aas
mov
repnz
loopne
fs
mov
xchg
push
loopne,pn
mov
repnz
jge
inc
pusha
test
push
mov
cwtl
repz
and
js
loopne
lahf
inc
lods
push
push
xor
mov
inc
shrb
pop
je
aas
movsl
aam
jb
ret
jp
inc
jp
ss
mov
cmpsl
xor
pop
dec
jno
sub
orb
loopne
shr
jecxz
push
or
push
in
mov
add
mov
dec
add
outsl
pop
mov
out
add
rcl
mov
sbb
mov
pusha
rolb
and
and
arpl
inc
pusha
fdivrl
mov
or
shlb
add
pusha
cmp
icebp
loopne
iret
xor
mov
test
push
add
jp
pop
subl
insb
xor
mov
push
inc
dec
push
pusha
pusha
pop
push
pop
arpl
mov
add
shll
cli
sahf
int3
add
cmp
adc
xlat
and
or
push
jno
add
loopne
pop
ss
or
mov
ss
xor
stc
mov
mov
inc
xlat
push
push
test
enter
and
pop
inc
sbb
and
pop
mov
pop
sbb
sub
sbb
adc
bound
stc
insl
add
inc
outsl
rcll
or
jnp
dec
mov
pop
pop
sbb
rol
aaa
dec
lea
add
addb
shlb
dec
ja
pusha
add
fsubs
xor
mov
and
lds
mov
inc
cmp
mov
sbb
adc
mov
test
add
jge
push
and
sub
inc
enter
sub
jmp
clc
loop
jmp
mov
out
push
movsl
cmp
insb
and
mov
push
push
inc
inc
sub
and
and
lock
pusha
fisttps
out
and
pop
dec
dec
fs
push
lret
hlt
xchg
addl
and
sbb
mov
pop
imul
and
fidivrs
xchg
mov
mov
pop
testl
subb
cmp
scas
add
jp
imul
lds
inc
mov
sub
adc
push
push
xor
call
mov
inc
popa
pusha
lock
lock
push
enter
mov
and
dec
xor
mov
push
loope
lcall
les
imul
data16
test
xor
dec
or
inc
xor
mov
lods
rolb
mov
inc
cwtl
push
out
mov
stos
cmc
inc
adc
pop
addb
dec
outsl
cmp
adc
lods
inc
mov
shll
mov
orb
stos
in
jmp
mov
inc
cmp
sti
jg
mov
or
push
inc
dec
adc
jge
mov
andb
or
fstpl
mov
jae
mov
rcll
xchg
adc
cmpsl
stos
and
push
cmp
adc
jge
je
add
mov
push
aad
jae
and
mov
bound
add
sarb
pop
jo
inc
shlb
rclb
mov
andb
orb
push
js
in
or
popf
sbb
inc
inc
int3
les
and
jne
outsb
sar
xchg
iret
pop
pusha
adc
jge
movsl
fs
and
or
inc
bound
push
push
xor
dec
lods
pusha
add
loopne
sbb
pop
push
mov
fwait
das
mov
xchg
push
pusha
shlb
loopne
or
push
sbb
push
addb
and
jns
cmc
push
or
ja
pop
fdivrp
add
shr
shll
ds
pushf
mov
shl
cmp
clc
mov
inc
shll
cmp
xor
sahf
jecxz
xchg
jo
rol
lds
leave
pop
divb
test
addb
push
inc
mov
cmpsl
mov
in
popf
xlat
sub
pop
iret
roll
sbb
push
push
ds
mov
imul
push
xor
pushf
adc
add
inc
sbb
loopne
sub
mov
push
or
insl
call
mov
or
jecxz
cld
shl
shlb
inc
shl
je
insl
repnz
adc
fstpt
mov
test
addb
rclb
and
cmp
fiadds
inc
cmp
and
stos
insl
sub
inc
test
cmp
push
por
rolb
inc
fs
sbb
push
fistl
and
insl
test
push
xchg
add
movsl
stc
mov
sbb
test
pusha
adc
dec
inc
xchg
xor
cli
cmp
mov
pop
jnp
add
sub
das
adc
inc
sbb
mov
lahf
test
inc
into
add
xchg
mov
mov
adc
lods
ret
push
and
push
xchg
cmp
pop
jge
jg
scas
xchg
movsb
shlb
pop
pop
lea
call
mov
arpl
fs
xchg
mov
pusha
xchg
roll
das
cltd
ds
xor
in
addb
sbb
fst
xchg
mov
fcoml
in
push
inc
rclb
pop
xor
add
jnp
mov
loopne
xor
add
shll
dec
cmp
rcll
mov
outsb
les
fsubs
mul
lret
push
fimuls
int
scas
shlb
mov
mov
mov
add
loopne
inc
push
divps
cmp
jl
cmp
push
jmp
add
jge
shld
inc
mov
fs
cmpsl
dec
sarb
push
and
mov
ljmp
cmp
inc
popa
pop
popf
add
nop
out
nop
push
cld
dec
xchg
hlt
jp
cmp
imul
or
rorb
loopne
loopne
mov
cmp
sub
cs
rclb
add
inc
inc
mov
icebp
mull
and
loopne
sbb
add
call
ret
jb
mov
addb
inc
pusha
dec
inc
mov
das
mov
icebp
xchg
fsubl
or
orb
test
loopne
in
mov
lods
mov
lea
js
xchg
scas
sbb
and
xchg
int
sub
shll
notl
xor
jb
adc
cwtl
aam
nop
mov
dec
inc
inc
and
adc
add
nop
dec
push
popa
sbb
or
pusha
sbb
and
xor
jg
addb
lods
add
push
mov
rcrb
loope
out
shl
adc
insb
adcl
test
es
imul
stos
dec
mov
lods
iret
pop
mov
and
mov
scas
mov
movsb
and
push
adc
mov
loop
clc
cmc
js
loopne
cmpsl
mov
xor
cmpsb
pusha
mov
and
xchg
jle
popa
pop
shlb
sub
loopne
andb
mov
pop
dec
and
loopne
in
sub
shlb
cltd
or
push
jbe
aad
mov
orl
iret
insb
push
and
loop
lods
add
add
shr
and
and
outsl
incb
rolb
inc
outsb
mov
inc
mov
jne
mov
and
jne
popf
dec
cmpsl
cld
pop
mov
inc
mov
pusha
mov
loopne
loopne
popf
test
sarb
pop
xor
add
cmp
mov
test
pop
sbb
ds
add
push
je
test
xor
add
cmpl
inc
loopne
pusha
and
inc
pusha
call
dec
scas
rolb
push
pop
mov
gs
inc
out
mov
and
mov
mov
inc
ficoml
movl
cwtl
in
cmpsw
inc
out
iret
pop
movsl
iret
or
rolb
add
or
mov
imul
aaa
sub
inc
mov
xchg
fcomi
pop
xor
fwait
mov
adc
and
andb
mov
clc
and
shlb
pusha
inc
imul
movsb
mov
outsb
into
aas
inc
xlat
sar
add
iret
xor
pusha
cmpsb
add
add
pusha
je
mov
hlt
sbb
pop
push
int
and
and
add
popf
stc
in
cli
js
and
scas
ret
xor
shlb
adc
inc
inc
jb
lods
mov
or
cltd
stc
in
jmp
push
out
das
cmp
push
inc
cmp
push
mov
stc
stc
sub
filds
pusha
inc
pop
jbe
ss
adc
lcall
cltd
mov
fcomip
rclb
lret
mov
sbb
pop
jnp
inc
and
sbb
pusha
rolb
ss
fwait
arpl
mov
loop
shlb
aam
push
sbb
mov
loopne
shll
outsl
sbb
add
loopne
dec
jecxz
xchg
xor
fdivrl
push
inc
ss
pusha
push
push
mov
repz
ret
jg
mov
test
scas
loopne
aaa
mov
orl
rorl
mov
int3
iret
jae
add
xchg
and
mov
into
inc
mov
sub
cmc
xchg
fidivl
dec
sbb
fdivp
out
mov
int
pop
call
mov
hlt
pushf
shrb
xor
cs
inc
dec
lock
jo
fisttpl
inc
shrb
dec
out
mov
add
mov
xchg
pop
jle
loop
mov
or
loope
jae
dec
pop
cmc
dec
daa
cld
loop
rolb
enter
pusha
pop
xchg
aas
fidivl
neg
push
xchg
cmpb
inc
loopne
pushf
stos
aas
cmc
fadd
stos
jo
and
fwait
bound
sbb
repz
add
loope
shlb
jne
fsubs
cmp
adcl
test
pusha
in
sbb
scas
xor
sub
lods
fimull
loopne
cmp
push
xchg
jge
dec
add
in
mov
xchg
cmp
ror
xor
pusha
and
repz
mov
xchg
adc
push
pusha
pusha
clc
xchg
add
pop
jp
faddp
into
cmc
lret
and
orb
loopne
pop
js
lcall
stos
andb
lret
xchg
and
int
addb
cmc
xchg
add
push
pusha
shrb
add
jo
call
pop
xorl
mov
inc
repz
daa
adc
into
es
inc
mov
cmp
add
les
jmp
xor
lock
dec
sub
sbb
and
pop
jbe
pushf
and
inc
cmp
inc
and
and
mov
jns
outsl
icebp
aaa
sbb
andb
sti
xchg
outsl
les
and
loope
sbb
or
bndldx
add
push
xchg
fbld
cwtl
movsl
mov
xchg
fstp
or
mov
lret
push
or
pusha
sbb
das
insb
rorl
popf
movsb
and
ret
inc
cmc
arpl
andb
pop
sbb
cmp
jg
popf
inc
int3
dec
mov
movsb
and
test
int3
mov
std
mov
loopne
fdivs
sarl
rolb
pusha
addb
hlt
fwait
pop
pop
sbb
pusha
shlb
push
mov
cmp
cli
jnp
sub
lds
inc
sub
mov
mov
cmp
xchg
xor
add
and
push
add
and
xor
xor
add
and
rolb
ss
mov
mov
pop
push
mov
sbbb
cs
sarb
ss
and
iret
adc
les
inc
movsl
mov
and
sub
imul
and
pusha
add
pusha
loopne
int3
sahf
xchg
pusha
icebp
ja
jnp
add
add
mov
pop
addr16
and
inc
pop
cmp
pop
mov
call
xchg
in
sbb
aaa
adc
mov
add
push
and
jnp
dec
repnz
loope
jmp
shrb
or
mov
ss
enter
inc
xchg
dec
rcll
andl
rcll
or
mov
rorb
cmpsl
les
adc
addb
xor
and
cli
or
subb
push
jecxz
inc
cmpb
pusha
js
mov
fwait
loopne
xchg
pusha
pop
mov
push
inc
loopne
inc
aas
pop
int
add
sub
loopne
call
mov
mov
or
inc
pop
stos
enter
push
mov
add
cmpsb
mov
imul
sub
add
pusha
out
jmp
ljmp
outsl
cmpl
std
aad
inc
testb
jo
mov
aam
mov
into
cli
enter
pop
das
mov
lahf
or
lods
and
inc
fadds
loopne
or
lock
icebp
fsubp
push
jp
jbe
inc
cmc
test
andb
mov
sbb
ret
mov
mov
addr16
push
movsl
push
xchg
and
shlb
pusha
add
push
adc
imul
cmc
js
sbb
pusha
out
shlb
mov
add
fsts
mov
aam
pop
stc
cmp
inc
jg
adc
mov
das
mov
mov
lcall
push
dec
or
pop
adc
mov
and
mov
in
dec
ljmp
mov
inc
mov
pop
lods
add
fabs
mov
test
sahf
je
push
jno
sbb
rolb
push
test
pusha
icebp
mov
mov
pop
mov
mov
xor
addb
inc
mov
aam
ret
sub
sbbb
jne
mov
and
cmp
in
rcl
ret
jle
push
loopne
add
in
daa
inc
jne
mov
mov
xor
adc
and
xor
call
mov
movsb
add
fwait
mov
rolb
inc
leave
mov
imul
pop
ljmp
adc
frstor
jl
xor
mov
sbb
stos
and
call
mov
js
push
jle
cmpsl
or
add
mov
aad
cmpsb
inc
inc
dec
jle
sbb
call
or
add
sti
mov
bound
adc
inc
inc
or
popl
add
mov
dec
adc
shlb
outsl
push
ljmp
scas
idiv
inc
add
cmp
mov
lock
and
pop
enter
outsb
lods
push
sub
push
cmp
in
mov
add
test
sbbb
or
and
enter
inc
push
pusha
rclb
jbe
push
xor
mov
inc
and
mov
add
idivb
mov
scas
in
push
test
or
out
xor
sbb
jle
mov
sub
loopne
in
lret
and
adc
pop
cmp
in
lods
repnz
sar
outsb
test
mov
mov
xor
mov
cmp
addb
dec
std
loopne,pn
mov
shlb
mov
push
js
mov
stc
jl
test
repnz
out
rcl
xchg
push
dec
and
xor
std
xor
scas
addb
sti
popf
sbb
sti
in
ficoms
xor
inc
loope
pusha
pusha
outsb
or
sub
addl
xor
and
addb
es
jge
stc
push
cmp
pop
sbb
sarl
mov
sbb
add
test
adcb
fcoml
scas
mov
mov
fwait
iret
test
xor
or
pmulhw
repz
jp
lods
loopne
and
rorb
mov
loopne
jg
pop
mov
mov
test
jae
inc
inc
andb
add
pop
lret
pop
sbb
movsb
and
int
andb
mov
pop
cltd
outsb
dec
push
and
pusha
adc
sbb
dec
mov
sbb
push
jp
add
and
mov
mov
xchg
cli
pop
mov
adc
pop
lret
sub
imul
mov
in
sti
pop
jae
cmp
jg
mov
adc
adc
xorb
jbe
andb
pusha
lcall
inc
inc
pop
xchg
xchg
pop
or
hlt
js
inc
enter
mov
loopne
inc
repz
adc
mov
pusha
sti
add
and
cwtl
or
cmpsb
addb
mov
enter
test
inc
ss
sahf
mov
cmc
loope
push
jnp,pt
mov
aas
mov
inc
mov
pop
adc
inc
add
inc
mov
flds
xchg
pop
psubd
add
pusha
push
mov
adc
shlb
insl
lea
fldt
and
inc
mov
mov
test
rolb
call
in
loopne
cmp
pop
mov
mov
ret
aas
jae
in
lcall
pusha
shlb
push
mov
dec
dec
insl
pop
popf
in
and
shlb
sub
roll
add
nop
jne
fwait
jp
lea
ja
mov
cmpsb
and
bswap
mov
insb
xchg
push
sbb
mov
and
into
je
dec
sarb
dec
shlb
mov
jp
out
jnp
adc
add
xor
lahf
xor
leave
and
add
ja
mov
mov
rorb
mov
je
rolb
jmp
adc
xchg
push
push
enter
inc
pop
clc
xchg
iret
stos
pusha
andb
mov
andb
mov
sub
xor
loope
jl
aas
out
and
mov
aam
pushf
inc
repz
aad
in
andb
out
or
vpsllw
and
dec
add
in
sbb
inc
rorb
sbb
icebp
jb
les
mov
and
sbb
sbb
xchg
cmp
cmpb
repz
mov
inc
pusha
arpl
or
and
mov
inc
incb
xor
adc
mov
lret
adc
and
js
adcl
enter
mov
add
xor
ficomps
lea
lret
mov
and
daa
jne
scas
addb
inc
xorb
pop
jmp
mov
das
jbe
sti
add
add
add
fnstcw
pop
and
push
mov
lahf
data16
mov
inc
sub
movsl
data16
push
jne
push
out
aas
xor
mov
sub
pusha
mov
adc
mov
mov
pusha
aas
dec
sahf
pop
mov
je
cmp
cli
mov
mov
pop
sbb
dec
mov
bound
aaa
xchg
inc
xor
js
call
inc
xchg
push
das
mov
mov
jp
pop
cmp
sub
andb
in
mov
adc
out
xor
pop
mov
rorl
and
out
or
pop
imul
lods
shlb
aas
mov
cmp
sub
sahf
popa
loopne,pn
imull
sbb
xchg
xlat
aad
jp
add
xchg
test
mov
inc
iret
sti
and
call
pusha
repnz
pop
lock
jecxz
and
add
insl
dec
lds
and
jl
loope
xlat
movsl
nop
iret
repnz
sbb
jecxz
nop
push
fsubl
lods
lahf
xchg
enter
jp
nop
test
add
adc
addr16
mov
sub
mov
andb
fmuls
sub
loopne
jns
call
loop
shl
pop
mov
clc
and
mov
inc
loopne
inc
jae
or
push
mov
cwtl
add
pusha
xchg
shlb
iret
je
aas
in
shl
aam
jae
mov
jle
fildl
cmp
cmp
xchg
and
roll
repz
cwtl
push
xchg
add
pusha
adc
pusha
mov
popf
xchg
pop
cmp
popf
mov
jnp
mov
lcall
lahf
push
mov
iret
add
mov
fs
push
test
inc
jmp
jae
xchg
nopl
cmp
add
mov
push
push
fadds
sub
inc
and
shrb
xchg
aaa
mov
lahf
and
add
mov
pop
lock
add
or
add
jne
shlb
sub
int3
jp
shlb
cwtl
les
fcmovnu
andl
add
addl
xchg
xchg
popl
inc
loopne
mov
adc
push
jne
sbb
shrb
loope
dec
mov
cmp
adc
in
bswap
xor
pusha
add
inc
xor
aaa
lret
sub
jb
out
mov
dec
pusha
shr
loopne
fcomps
xor
addr16
ret
mov
lods
js
movsl
jbe
mov
ret
add
add
mov
mov
test
int
inc
sti
jnp
addr16
or
mov
fdivl
sbb
inc
insb
and
loopne
push
and
mov
loope
jl
addb
and
xor
out
andb
add
shlb
cmpsb
add
mov
inc
jg
test
cwtl
lods
add
inc
sbb
mov
mov
andb
shlb
inc
orb
inc
rcr
sbb
jne
enter
cltd
dec
inc
mov
addr16
ret
enter
add
xchg
lods
pusha
pusha
mov
or
mov
and
loop
mov
cmp
outsb
xchg
add
pusha
aam
add
mov
xor
je
mov
popa
sub
mov
mov
jnp
mov
decb
push
lret
mov
dec
inc
lea
inc
rcrb
arpl
dec
dec
or
addb
inc
mov
das
scas
rolb
pusha
add
add
xor
roll
addr16
push
jp
sbb
enter
incb
lret
or
loopne
std
call
inc
rcrl
push
popf
repnz
in
movsb
and
inc
stos
xorl
xlat
rcll
dec
test
xor
jle
add
sti
mov
and
or
mov
loopne
pusha
loopne
and
mov
lods
mov
aad
or
mov
or
pusha
add
mov
jae
push
out
mov
fiadds
inc
inc
scas
rolb
mov
or
js
mov
out
lods
shl
dec
cmp
loopne
shl
mov
imul
pop
add
imul
mov
add
xor
ds
pop
jg
add
sbbl
mov
test
std
xchg
nop
stc
cmp
mov
inc
clc
mov
and
imul
mov
inc
mov
fbld
icebp
aaa
movsb
rolb
cmp
xchg
and
jecxz
rorb
pusha
push
das
fbstp
lahf
sub
mov
pop
bound
add
or
mov
jg
and
cmpsl
mov
mov
sub
pusha
inc
lods
andb
fsubrs
sub
and
addb
andl
hlt
sarb
or
or
imul
nop
sahf
aas
xor
mov
lock
push
shlb
xchg
push
fmull
and
test
xor
ret
xor
fisubl
ss
pusha
mov
and
call
or
pop
fsubl
into
sub
pusha
pop
pop
and
pop
push
dec
pop
shrb
push
repz
sub
into
xchg
loopne
out
div
jg
andl
inc
adc
mov
jmp
jl
push
xlat
movsl
aaa
lcall
shrb
cmpl
add
add
mov
ret
clc
mov
jl
mov
push
rolb
add
clc
xchg
repz
pop
es
mov
and
mov
pusha
inc
jmp
test
rclb
incl
lea
pushf
jb
stos
jo
in
leave
inc
clc
add
and
push
shrb
inc
inc
add
or
loopne
jae
rclb
out
imul
sub
call
les
lcall
add
std
xor
jno
loopne
mov
inc
add
lods
loopne
out
jl
jbe
inc
rorl
and
jbe
stos
pop
loop
addb
xchg
mov
xchg
stos
pusha
loopne
push
addr16
and
push
rorl
push
dec
add
loopne
mov
mov
pop
fmuls
inc
mov
pushf
push
rolb
hlt
enter
enter
xor
lea
icebp
and
xor
sub
add
repz
iret
test
mov
sbb
add
push
or
loopne
pop
es
pusha
movsl
jmp
lea
inc
andb
xchg
sub
pusha
data16
and
sub
nop
jge
icebp
mov
imul
lret
inc
loope
and
cmc
or
and
aad
fimull
imul
pusha
inc
bound
and
call
ljmp
fnstenv
or
mov
inc
adc
pop
clc
add
inc
sbb
jg
fs
inc
mov
push
div
push
ds
inc
aam
adc
mov
mov
mov
andb
hlt
dec
add
loopne
out
ds
xchg
pushf
mov
inc
mov
and
mov
shl
jecxz
mov
mov
fstps
mov
orl
xchg
pop
subl
ret
lret
lea
xchg
xchg
test
orb
stos
or
xchg
jns
jp
sub
jns
cmp
dec
test
addb
sub
pusha
and
rcl
mov
and
ja
daa
cwtl
mov
daa
push
sahf
test
lods
shlb
add
mov
movsl
mov
loopne
out
jmp
imul
cmp
loop
jmp
adc
or
pusha
les
andb
aam
push
pusha
loopne
cmpsl
dec
and
mov
push
stos
mov
inc
shlb
nop
push
test
mov
jbe
pushf
or
add
int
gs
lods
push
pushf
repz
je
mov
daa
bound
das
mov
sarb
xor
imul
or
loop
test
movhps
rcll
or
pusha
cmp
add
inc
loopne,pn
push
mov
add
out
inc
imul
das
repnz
or
loopne
sub
pushf
sbb
pop
fs
lcall
push
into
out
pop
sub
add
push
and
js
ljmp
divb
fxtract
xor
pusha
inc
stc
stos
and
lret
jecxz
mov
xchg
mov
test
cmp
rclb
cmp
pusha
loopne
push
pusha
shlb
scas
loopne
mov
loopne
mov
lcall
ja
jno
push
xlat
pop
into
clc
test
ljmp
dec
add
cmp
in
fs
je
int
jb
pusha
mov
clc
or
add
loopne
xchg
cmpsl
push
push
cwtl
and
xchg
jno
dec
add
and
and
inc
xor
maskmovq
negl
push
testl
lcall
fnstsw
add
xchg
cmc
xor
add
sbb
jl
mov
in
lcall
or
push
pop
mov
rolb
notb
mov
cmp
xor
add
mulb
mov
jnp
andb
push
mov
and
loopne
test
mov
dec
outsb
inc
jbe
leave
push
xor
lcall
pop
sub
loopne
or
mov
ds
xchg
inc
push
outsb
mov
scas
and
mov
jb
dec
popf
testl
ljmp
mov
mov
outsb
xor
mov
bound
leave
sub
lahf
add
shlb
push
enter
adc
jb
or
inc
xor
mov
outsl
cmp
jae
push
mov
pop
sub
push
add
sub
add
data16
sahf
cltd
ror
test
inc
punpcklbw
add
rcrl
iret
pushf
lea
js
popa
adc
addb
or
inc
inc
push
pusha
inc
cmp
loopne
cmp
pusha
mov
rol
cmp
inc
out
sbbl
lods
in
fwait
jp
dec
jp
scas
cmpsb
and
jge
aaa
mov
adc
les
jno
mov
repnz
in
imul
sbb
push
xor
shll
fisttps
loopne
aaa
or
pusha
jns
lds
add
mov
add
add
xchg
sti
mov
cmp
add
add
popf
test
mov
mov
inc
lods
addb
loopne
adc
je
andl
sub
and
and
shr
inc
data16
pusha
icebp
or
cmp
jp
mov
loopne
in
jbe
fcompl
sub
inc
and
push
rol
push
negl
mov
leave
int3
jnp
test
fdivl
js
mov
mov
xor
cwtl
jae
mov
rclb
pop
push
and
mov
add
test
lds
loope
arpl
pop
pusha
leave
sub
aad
pusha
shl
and
loopne
mov
outsl
test
rolb
andb
addr16
push
pop
add
pop
mov
cltd
xor
scas
shlb
dec
repz
fcom
push
lods
inc
loopne
gs
and
xchg
das
addb
pop
andl
xor
jns
add
cs
pop
mov
mov
enter
iret
xor
movsl
xchg
push
ror
sbb
push
dec
push
add
pop
xor
call
mov
cltd
lahf
dec
mov
testb
rorb
outsb
cmp
cltd
movsl
rorl
pusha
add
xchg
movsl
loope
stc
mov
fwait
ja
xchg
and
jp
mov
inc
es
aaa
sbb
jl
mov
xchg
imul
or
inc
sub
xchg
push
mov
inc
test
inc
xchg
loopne
inc
les
sti
adc
xor
test
pusha
sti
ja
ja
cmp
or
and
ret
jo
imul
shlb
shlb
pop
adc
pusha
pusha
adc
push
cmp
shlb
adc
icebp
loop
lcall
cmc
fstl
add
fistpll
add
into
addb
and
mov
or
cld
push
je
sbb
adc
mov
cmp
cmp
andb
xchg
ja
pop
pop
or
and
lahf
sbb
cld
sub
addb
call
add
movb
leave
notb
mov
pusha
test
inc
mov
in
and
xchg
xor
sub
rolb
lock
fcmovbe
sub
loope
subl
adc
sub
js
inc
ds
je
xchg
dec
and
pop
jg
mov
adc
push
and
sbb
rorl
inc
inc
cmp
sti
cmp
inc
cmp
xchg
or
andb
add
outsl
adc
cmp
jno
add
add
adc
cwtl
xchg
test
pusha
adc
push
cmp
mov
int
sub
pusha
inc
out
int
inc
scas
inc
in
and
div
or
loope
outsb
adc
mov
sub
inc
and
pusha
jne
iret
jne
pusha
loopne
fwait
push
push
pop
mov
or
inc
pop
or
push
jno
jo
xchg
sub
imul
jb
rolb
rcl
xor
mov
pusha
pusha
mov
mov
sub
loopne
and
adc
lds
lea
sti
into
mov
pusha
add
out
sub
addb
mov
iret
fwait
sbb
push
mov
ljmp
sbb
add
stos
and
and
mov
mov
pusha
loopne
add
scas
xchg
insl
iret
popa
xor
or
andb
out
pop
jno
adc
inc
rclb
fwait
mov
andb
cmp
outsb
cltd
push
arpl
and
repz
mov
pop
ret
adc
js
push
add
pop
in
jg
out
icebp
repz
sub
sbbb
sbb
add
rolb
xlat
dec
mov
mov
cltd
push
iret
xchg
and
pop
mov
inc
addl
ret
jecxz
and
mov
insb
loope
scas
mov
pusha
pusha
fldl
enter
and
pusha
loopne
ficoml
fldl
add
daa
xor
xchg
dec
in
fldenv
cmc
xor
test
fidivrs
insb
repz
inc
push
sbb
cmpsb
pusha
sbbb
enter
addb
fs
fucomi
cli
sbb
pop
jno
jb
push
insl
sbbl
xor
andb
fstp
mov
mov
push
movsb
rolb
or
push
jle
das
cmp
and
mov
loopne
ss
jns
pusha
shr
jmp
adc
cmp
add
and
loopne
aaa
out
sarb
jle
add
shlb
pop
pop
sahf
fiadds
add
adc
adc
add
repz
add
mov
and
or
add
fmulp
dec
mov
cmp
call
mov
push
test
pusha
imul
sub
iret
in
loopne
mov
fs
xor
insl
insb
nop
add
rol
and
add
addr16
add
or
rclb
and
sbb
mov
or
lret
sahf
inc
push
pop
push
repz
sbb
inc
cmpb
inc
and
int3
xor
adc
adc
xchg
cmp
xchg
test
mov
mov
and
adc
icebp
dec
fdivrs
pushf
adc
or
shl
cmc
pop
mov
sub
pusha
andb
pop
mov
jne
dec
and
pop
sub
shl
stos
mov
mov
mov
pop
dec
dec
sbb
and
and
rclb
icebp
rorb
cmp
popf
stc
fucom
into
data16
cmp
test
stos
scas
shlb
cmpsb
and
adcl
inc
add
in
ffree
dec
push
add
mov
test
subb
xchg
sub
aas
pushf
sbb
add
sub
and
imul
int3
add
adcb
ljmp
loopne
mov
inc
test
pusha
popf
ds
hlt
push
mov
mov
jo
int3
mov
add
xor
int
insl
mov
daa
sub
loopne
jl
test
xchg
adc
insb
fiaddl
push
ret
sbb
loopne
int3
inc
dec
mov
ja
push
loopne
xor
insb
inc
cli
push
dec
jp
rolb
mov
ds
inc
test
pusha
and
mov
pusha
enter
hlt
std
xor
lret
mov
ljmp
mov
loopne
mov
addl
adc
mov
shlb
stos
addb
cmp
mov
push
jecxz
xchg
loopne
pop
repz
js
into
push
push
popf
je
shlb
push
add
mov
enter
cli
lret
aam
and
aam
or
pusha
not
dec
jne
call
cli
mov
jns
rorl
jne
shlb
lahf
enter
push
or
pop
fisubrs
mov
push
xor
sub
out
and
and
mov
adc
jp
and
andb
mov
dec
pop
pop
cmpsb
and
out
cmpsl
jb
xor
iret
pop
cmp
movsl
cld
jb
loopne
sub
loopne
imul
rolb
idivl
insb
test
mov
ds
lret
cmp
and
pop
scas
and
adc
andb
add
sarb
popf
mov
int3
call
mov
sub
shrb
sarb
inc
and
add
iret
inc
lret
adc
jl
push
push
dec
sbb
push
lret
std
mov
and
popf
rorl
add
mov
dec
push
mov
shl
pop
mov
pop
movsb
mov
add
gs
push
pusha
inc
add
ror
and
xor
push
cmc
movsl
push
pusha
and
xchg
xor
push
shlb
popf
cmpsb
and
sbb
aam
mov
dec
jge
inc
mov
fs
call
and
or
inc
mov
push
popa
rcll
push
xor
cmp
inc
xor
jg
cmc
and
loopne
mov
push
mov
add
mov
jl
outsb
stos
or
cmp
adc
mov
xchg
xchg
inc
cmc
mov
lea
nop
arpl
mov
push
dec
and
loopne
mov
push
and
cmp
xor
lahf
xor
rclb
popa
outsl
fdiv
imul
add
arpl
inc
lods
mov
mov
push
cmpsl
jb
call
lods
shlb
stos
add
pop
push
inc
sub
shlb
and
in
pop
outsb
hlt
add
addb
add
mov
test
inc
cmpsb
inc
shr
les
loop
addr16
fwait
sub
jp
inc
pusha
lret
xor
cmp
int
inc
add
add
jb
jne
add
mov
pop
fstps
dec
lcall
sub
jle
mov
subl
js
add
add
and
sbb
and
xor
sar
lods
xchg
addb
add
lret
arpl
dec
inc
mov
jle
aad
mov
loopne
mov
add
mov
mov
mov
pusha
aaa
mov
xor
lock
mov
scas
and
stos
das
sbb
and
and
pop
mov
pop
jmp
or
jle
cwtl
lods
mov
in
aaa
data16
inc
pop
pop
fdivrs
add
js
xor
xor
or
movsb
and
pusha
mov
loopne
aam
loope
push
fwait
scas
les
rorb
cmp
add
rolb
pusha
sbb
inc
sub
mov
shlb
gs
push
rolb
mov
pop
testl
pusha
cmc
jl
shr
test
and
cmpl
loopne
fwait
or
xorb
cmp
adc
add
popf
push
jg
pop
mov
aaa
pop
push
call
and
and
adc
es
add
popa
jns
mov
mov
add
in
shrl
add
out
cltd
sbb
cld
push
push
and
out
stos
pusha
sbbb
pop
mov
mov
pop
ljmp
jns
pusha
and
movlps
cmc
or
inc
lret
orl
loopne
adc
ret
inc
mov
sahf
jp
mov
dec
lret
sub
or
jmp
mov
jge
data16
pop
jae
das
xchg
push
xor
jge
mov
je
adc
out
out
loopne
cmp
inc
sti
in
sub
test
subb
push
rolb
jle
xchg
and
cltd
xor
add
mov
sub
in
or
add
daa
aam
mov
xor
push
mov
adc
adc
and
out
ljmp
jl
lret
out
icebp
stos
test
push
fmul
push
mov
icebp
inc
daa
dec
test
inc
std
push
add
pusha
mov
inc
aaa
adc
loop
xchg
cltd
stos
or
loopne
mov
iret
xor
sub
add
popa
push
sub
sbb
popf
loopne
add
add
or
ror
in
fistps
inc
addr16
pushl
filds
or
sbb
jb
push
xor
andb
cmpsb
shl
push
xchg
jmp
mov
and
pop
add
jno
mov
mov
orb
adcb
adc
loopne
or
inc
mov
or
cmp
addr16
andb
push
inc
sbb
mov
test
pusha
cltd
add
andb
enter
cmpsb
rol
add
out
jp
clc
cwtl
iret
scas
push
or
pusha
call
imul
in
cld
and
and
loopne
stos
and
push
and
pop
jb
rolb
daa
mov
push
rorb
or
arpl
push
mov
js
movsb
shlb
inc
movl
stc
and
cmp
std
mull
or
addr16
in
sbb
sub
inc
in
nop
lcall
out
pop
stc
addr16
add
cli
imul
xor
loopne
cmp
adc
aaa
jns
jo
ret
jecxz
pop
pop
stos
loop
ja
bound
sbb
call
push
add
scas
and
mov
push
mov
add
jno
cmp
sbb
pusha
std
clc
orl
popa
jbe
imul
loopne
pusha
mov
dec
arpl
dec
and
add
hlt
das
stos
mov
mov
shrl
js
stos
and
loopne
data16
pop
lahf
test
rolb
xchg
mov
inc
or
rolb
aam
and
mov
std
mov
add
cmp
fcoml
shlb
outsl
enter
clc
lahf
jb
mov
hlt
and
xchg
add
aas
push
push
xchg
addr16
sbb
sub
xorb
sbb
std
inc
lock
and
add
andb
push
inc
dec
or
xor
inc
mov
loope
lods
and
imul
mov
in
popa
dec
xchg
inc
xor
int
mov
mov
cltd
in
push
pop
stos
cmp
loopne
lret
cmc
push
sti
lret
xchg
adc
add
jns
mov
or
shlb
pusha
xchg
rolb
subb
cmp
pop
lret
ja
scas
popf
sub
adc
mov
leave
jo
push
inc
inc
push
sbb
and
loope
int
mov
fdivs
or
sbb
inc
fisttps
pusha
and
mov
sub
add
jne
cmp
es
adc
mov
push
fs
and
pop
loopne
mov
adc
cmc
shrl
popa
addb
in
sbb
pop
testl
addr16
rcll
mov
daa
inc
ret
out
xchg
in
out
xorl
add
mov
out
push
in
js
pop
mov
or
mov
fcompl
dec
or
mov
sbb
faddl
enterw
push
shl
pop
inc
push
adcl
fdivl
mov
pusha
out
loop
addb
mov
mov
shlb
sbbl
mov
add
xorb
and
xlat
jo
test
pusha
sub
xorb
rclb
jbe
push
and
stos
push
mov
pop
mov
lret
push
repnz
mov
rol
test
scas
inc
or
addb
popl
push
xchg
mov
jo
test
pusha
out
popl
imul
and
out
in
test
call
lret
mov
jbe
mov
inc
hlt
mov
jmp
gs
dec
addb
mov
sub
add
inc
inc
mov
test
rol
aad
inc
loopne
mov
aam
jl
jge
pop
clc
inc
dec
jmp
sbb
push
aad
push
pusha
and
mov
mov
dec
les
subl
call
popa
cltd
and
mov
xchg
lret
ficompl
testl
adc
xchg
orl
sub
ljmp
sub
test
sahf
or
out
sti
in
gs
int
pop
push
mov
mov
loopne
stos
mov
sub
divb
or
mov
inc
and
scas
sbb
shlb
fadds
mov
in
ds
loop
int
test
xchg
loope
xchg
pusha
shr
test
loopne
addr16
incb
shr
mov
loopne
pop
rorb
adcl
test
adc
in
jmp
adc
push
inc
adc
shl
push
and
std
xor
jo,pt
jo
ss
imulb
lea
xchg
lods
adc
daa
ljmp
add
ret
mov
mov
jbe
mov
fcomp
movsb
add
lret
xlat
pusha
lret
sub
pop
fdivrp
mov
rcrb
and
mov
scas
mov
popa
in
andb
mov
cmp
mov
push
test
loopne
loopne
pop
stos
sarl
mov
shl
test
add
pop
xchg
add
mov
pusha
enter
lds
sbb
or
mov
sarb
sar
in
xchg
in
addb
xchg
fwait
push
repz
cmp
and
loopne
mov
mov
pushf
insb
xchg
lcall
aaa
adc
pop
icebp
mov
dec
cmp
cmp
imul
jl
lds
add
add
pop
jb
cwtl
jno
xchg
ja
add
andb
mov
shrl
andb
mov
push
fwait
xor
pusha
push
jns
mov
push
xor
iret
fdivs
dec
and
or
and
add
rcl
sub
loopne
stc
dec
shll
fcomp
add
andb
xchg
cmp
and
mov
hlt
push
add
mov
lods
pusha
and
xor
cwtl
sbb
pusha
mov
add
xchg
call
int
sbb
jmp
aam
lea
adc
mov
mov
loopne
and
rcl
sub
pusha
je
dec
cmp
inc
mov
jecxz
mov
rolb
in
test
jmp
ss
xchg
pop
sbb
rcrl
push
outsb
jp
push
je
test
sub
popa
mov
movsb
add
adc
out
and
mov
mov
pusha
add
jp
jbe
inc
pop
xor
rolb
fimuls
xchg
fisubrl
js
xor
clc
sub
loopne
std
sbb
adc
add
adc
inc
fs
negl
push
mov
lods
inc
pusha
aaa
fstpl
and
or
and
and
jns
pusha
loopne
repnz
insl
dec
add
cld
cwtl
jb
ss
sbb
subl
adc
add
and
jge
rorl
push
scas
or
inc
in
jecxz
in
push
mov
inc
mov
shrb
add
adc
loope
inc
or
ficompl
xchg
sahf
mov
fstpl
filds
mov
inc
and
orl
pop
hlt
jl
inc
pushf
insb
rclb
movsl
sbb
int
fwait
test
ss
les
add
add
xor
shrb
loopne
orl
cs
aaa
adc
xchg
sbb
lcall
insb
sbb
pop
xor
lods
rolb
popa
ds
pop
imul
mov
pusha
mov
xchg
cmpsb
mov
pop
and
add
inc
mov
sbbb
test
mov
pushl
mov
jbe
dec
aad
filds
shlb
lret
andb
push
xchg
add
test
cmp
shlb
rcr
add
inc
sarl
in
sahf
sbb
shl
jns
mov
shr
divl
dec
lret
push
add
and
fbld
and
sbb
cmpsl
movsl
fs
cwtl
mov
jno
cmp
pusha
pusha
test
addb
out
lcall
sub
pusha
fcom
out
xor
cmp
lret
add
fs
cmp
mov
adc
sarb
fildll
pop
rorl
and
leave
jns
notl
add
mov
and
aaa
jge
xor
sarl
int
inc
mov
jge
std
lcall
pusha
inc
rorl
pop
js
loopne
or
out
out
aad
out
shl
lea
xchg
or
sarb
rolb
dec
stos
out
shrl
xchg
test
out
sub
popf
sub
test
rolb
outsb
mov
and
outsl
mov
inc
cmp
ret
test
ds
and
and
jnp
inc
and
cmp
jle
enter
pop
xchg
sub
xor
mov
xor
orb
dec
testb
jnp
popf
repz
mov
sar
jl
into
out
xor
mov
cmpsl
inc
mov
cli
and
pop
leave
sub
andb
cwtl
xor
test
mov
and
jbe
inc
push
loopne
dec
mov
andb
gs
jmp
mov
add
jnp
aam
xor
and
rclb
addr16
fists
sub
push
pushf
hlt
and
rorb
add
push
in
pop
jg
sub
scas
mov
push
inc
rorb
add
mov
stos
ds
mov
or
mov
pop
lret
ret
rcrb
or
inc
cltd
in
sub
out
xchg
shlb
pop
shr
and
sarb
add
jl
cmpsl
dec
xor
jp
and
insl
xchg
add
cmpsl
mov
mov
rcrl
fstps
xchg
mov
iret
xchg
stos
addb
rcrl
hlt
inc
aaa
shll
rolb
cmp
popl
mov
bound
xor
pushf
inc
dec
inc
jge
add
add
adc
int
or
into
and
or
adc
inc
icebp
mov
cmpsb
addb
or
popa
mov
add
pop
xchg
dec
mov
in
xchg
in
sub
je
add
or
inc
mov
and
mov
pusha
xor
fisttpl
xchg
pushf
add
lock
mov
pop
mov
fsts
inc
cmpb
pop
icebp
imul
push
mov
or
orb
test
mov
sbb
inc
adcb
xor
adc
leave
sub
add
cmp
adc
dec
iret
ljmp
mov
push
sbb
cld
add
inc
pusha
iret
xor
and
dec
pop
mov
xchg
test
add
mov
ror
pop
out
xlat
sbb
imul
inc
mov
and
xor
test
and
mov
fcoms
fisttps
aam
rorl
aas
mov
dec
mov
leave
sbb
xor
movsl
cmp
bound
enter
mov
push
aam
sbb
dec
mov
push
lret
ljmp
jne
insb
rcrl
jg
mov
pop
mov
mov
xchg
cmp
lcall
cli
fsts
js
mov
mov
xor
and
pusha
and
stc
mov
call
add
pop
inc
outsb
outsb
dec
sub
cmp
imul
inc
in
cmp
arpl
in
sbb
add
shl
add
test
ja
clc
rcl
cli
divl
js
dec
cwtl
ret
inc
loope
sbb
mov
mov
sub
dec
mov
adc
inc
pusha
addr16
bound
and
add
loopne
aaa
fcmovb
adc
sbb
dec
aaa
mov
daa
fidivs
mov
sbb
sub
pop
divb
cmpsl
fs
xchg
pusha
ficompl
test
pop
addb
and
mov
jne
cmp
and
sbb
inc
loope
js
and
hlt
dec
cmpsl
cmpsl
jns
imul
or
sbb
frstor
ret
idiv
js
and
mov
fistpl
clc
out
mov
sub
loopne
pusha
pusha
pop
mov
fisttpl
sbb
mov
shlb
add
and
inc
mov
add
shrb
aas
xor
out
mov
ror
loopne
jbe
cmpsb
inc
add
inc
mov
xchg
mov
sbb
cmpsl
insb
add
adcb
jnp
ja
pusha
push
mov
pusha
das
not
fldenv
loopne
icebp
lretw
roll
inc
rorb
mov
inc
sub
scas
and
andb
sahf
cli
jo
xor
jecxz
add
repz
inc
cmp
call
ss
and
mov
fnsave
pusha
adcb
sahf
mov
push
mov
inc
call
enter
mov
aad
mov
mov
xor
fwait
and
addb
fadd
jge
inc
and
rcrb
sbb
in
xchg
mov
addb
fstps
test
or
lahf
inc
or
or
test
add
scas
inc
inc
decb
xor
cmp
data16
xbegin
stc
push
lahf
sub
add
loopne
out
xchg
cmp
add
add
js
add
sbb
cmp
mov
loopne
push
in
mov
loopne
push
stc
insb
xchg
add
pop
xchg
mov
sbbb
push
mov
adc
repnz
mov
mov
adc
insl
pushf
test
add
loop
ficompl
mov
add
imul
xor
cli
adc
test
pop
aam
lods
imul
fstpt
mov
and
mov
push
sub
loopne
sahf
cmp
addb
shrb
adcb
and
pop
pop
icebp
pop
pop
fnsave
fwait
or
loopne
mov
xor
lea
xchg
xor
loopne
roll
cmp
push
mov
in
dec
cmp
negb
xlat
mov
bound
add
mov
and
aam
dec
mov
and
and
shrl
fwait
jl
addb
add
pusha
adcb
les
pusha
mov
addb
insl
ds
jbe
cli
out
ds
and
rorb
mov
cmpl
shlb
test
and
or
xchg
test
into
mov
add
and
push
xor
cmp
and
or
jb
cld
inc
ror
sbb
push
aaa
jle
stos
pop
les
loopne
stos
mov
inc
loopne
push
icebp
lret
and
jmp
pushf
es
mov
sub
bound
pop
xor
loopne
sbb
rolb
fs
fcoml
pusha
sarb
popl
rolb
loopne
jnp
inc
shlb
jne
scas
loopne
mov
push
sub
lock
cltd
div
mov
loopne
and
test
pusha
push
ss
leave
stos
pusha
pusha
cmp
xor
inc
sbb
add
mov
idivb
ss
sbb
repz
stc
add
sbb
pop
mov
adc
dec
mov
pop
push
mov
aam
imul
je
out
rclb
dec
scas
and
mov
sarb
fdivrl
adc
lahf
mov
in
shrb
fmuls
lret
pop
add
jecxz
shll
aaa
push
sub
loopne
push
jno
inc
movsl
push
or
sysret
cmp
inc
xchg
mov
mov
fidivrl
popf
out
cli
fists
popa
xchg
rcl
add
rolb
xor
shlb
and
lea
pusha
mov
or
ret
add
rclb
push
pop
std
lock
enter
enter
inc
mov
inc
inc
push
jp
jmp
dec
pop
push
and
add
add
mov
das
loopne
push
and
mov
dec
and
mov
pusha
or
cmp
fbstp
inc
add
xor
push
cmp
cmpl
and
dec
stos
loopne
mov
sbb
push
push
or
insl
mov
sbb
push
mov
movsb
add
rorb
jbe
lcall
addb
andb
dec
popf
lret
pop
jno
inc
sbb
push
rcr
and
mov
cmp
dec
lret
in
and
mov
mov
mov
pusha
fdivrl
shlb
add
lock
cmp
arpl
inc
sar
lret
xor
shlb
shll
mov
sub
add
push
ds
pusha
mov
sbb
in
inc
and
aam
inc
and
xchg
cwtl
jle
ja
inc
orb
add
andl
in
push
mov
jno
loope
ljmp
in
pop
or
mov
pusha
cld
mov
jnp
mov
push
ret
mov
jo
int3
popf
xchg
mov
ja,pt
pop
or
rclb
xchg
sahf
fs
add
inc
push
push
mov
mov
andb
xor
sbb
lds
xchg
adc
lret
mov
jecxz
lods
mov
lret
out
std
cmpsl
cltd
stos
rcll
push
dec
push
adc
xchg
hlt
icebp
adc
pop
inc
mov
and
into
lds
and
je
mov
add
fs
add
mov
mov
in
out
or
mov
imul
mov
xchg
and
xorl
mov
mov
cmpb
andb
pop
out
aaa
repz
pusha
dec
call
add
pusha
cmp
popa
dec
call
cmpsb
add
cltd
shll
mov
rcrb
cmc
mov
data16
arpl
mov
sub
jnp
andb
adc
inc
mov
imul
mov
fstl
push
sub
mov
cmp
jns
sarl
shrb
stos
mov
cli
mov
adc
rol
addb
jg
mov
lods
pusha
add
jno
push
fnstenv
mov
and
jle
push
mov
push
into
ds
and
and
mov
loopne
inc
pop
add
adcb
jmp
inc
mov
add
sbb
out
dec
repz
loop
mov
cld
cmp
mov
dec
jnp
les
inc
rclb
push
cmc
andb
dec
lods
rolb
repnz
push
sub
jbe
mov
and
leave
xor
cld
mov
adc
andb
dec
in
cmpsb
inc
pusha
mov
les
or
fs
ss
xchg
cmp
or
pusha
pop
jae
inc
add
adc
pusha
jae
push
fists
call
add
add
popa
out
and
add
push
cmpsb
and
mov
mov
inc
xchg
push
and
adc
jno
cmp
push
in
scas
out
div
mov
cmc
fwait
pusha
or
orb
add
inc
rcr
divl
sub
and
movsb
pusha
mov
or
xor
adc
and
sbb
xor
mov
mov
mov
loopne
repz
and
rolb
rcr
lods
push
fisttpll
ljmp
or
sar
pushf
dec
jmp
xor
push
je
pop
int3
sbb
xchg
insb
dec
in
xchg
loopne
xor
mov
push
xchg
pop
icebp
pop
inc
cwtl
test
mov
xchg
shl
xor
push
and
and
adc
int3
jne
jo
push
andb
imul
out
push
add
gs
dec
mov
sbb
scas
loopne
mov
and
jp
inc
mov
pusha
dec
add
sub
repz
imul
aad
mov
add
jmp
xor
mov
rclb
push
aaa
shlb
dec
test
pusha
or
mov
add
andb
sub
and
js
mov
mov
xor
jle
cmc
scas
loopne
outsb
stos
and
mov
and
inc
xchg
lds
loopne
icebp
out
test
xor
int
xor
into
addl
and
pusha
rolb
and
adc
loopne
pop
add
filds
sarb
adc
cmpsl
push
cmp
xlat
decb
out
fmul
andb
inc
xchg
into
mov
add
and
mov
xchg
popa
mov
inc
and
mov
adc
movl
mov
outsl
cmp
jnp
popf
or
rorb
stc
mov
cmpsl
ja
stos
loopne
cs
inc
inc
or
and
pop
dec
adc
pushf
arpl
mul
or
mov
add
add
xchg
movl
push
sahf
xor
xlat
xchg
dec
and
mov
pusha
sub
mov
dec
test
popf
roll
stos
and
add
and
cwtl
jb
add
scas
call
int
mov
ds
daa
std
testl
in
and
sbb
cwtl
lea
shl
mov
fistl
fadds
cmpsb
and
loopne
outsl
and
sub
dec
gs
loopne
sahf
fsubrl
pop
pusha
mov
mov
roll
jecxz
jg
pushf
push
adc
jge
adc
dec
addb
fnstenv
rclb
add
and
iret
mov
inc
add
dec
mov
add
ljmp
inc
sahf
pop
cmpsl
sub
add
pusha
dec
sbb
push
sub
int3
mov
arpl
pusha
add
in
sbb
push
and
inc
nop
cmp
jbe
rorl
lods
loopne
inc
xchg
xor
das
push
cmp
pusha
push
add
enter
pusha
sub
pop
mov
pusha
fldl2e
push
pop
mov
data16
mov
and
jno
clc
in
xchg
loopne
inc
push
loopne
mov
jnp
push
rolb
and
in
push
ffreep
fstp
adc
into
jnp
fcmove
dec
hlt
pop
mov
cmovno
jne
or
fsts
andb
jecxz
sbb
sbb
add
inc
outsl
xor
or
pusha
movsl
aam
cmovo
mov
mov
inc
cli
push
and
jecxz
stc
adc
pop
or
daa
push
mov
in
mov
and
ret
inc
aaa
lret
fsubrp
jg
jecxz
andb
push
push
out
cld
sbbl
orb
addb
ljmp
push
and
es
jo
test
jmp
loope
stc
or
or
cmpsl
adc
das
fbld
inc
add
sub
mov
inc
je
dec
jl
fcomip
pushf
adc
dec
imul
scas
js
add
xchg
imul
inc
movsb
mov
fsubl
jbe
or
xor
inc
xchg
mov
das
inc
into
leave
movsb
loopne
sub
and
in
ja
cs
ror
xor
xchg
in
jecxz
js
push
cmp
sub
sub
mov
loopne
lock
in
jb
popf
and
cmp
xchg
cwtl
pop
pop
xchg
mov
xor
mov
inc
in
sub
add
mov
sub
push
add
nop
setle
and
loop
mov
loopne
push
jp
cmp
or
je
pushf
mov
rolb
pusha
and
loopne
je
adc
test
rcl
pop
or
or
mov
loopne
mov
mov
mov
jbe
xor
sub
pusha
std
and
and
xor
lods
add
fadds
mov
shrb
pop
or
xchg
add
push
jbe
pusha
loopne
in
adc
mov
mov
negl
cmp
xor
inc
cmp
popa
in
gs
pop
mov
test
and
push
and
and
mov
mov
cmc
lods
and
pusha
mov
push
inc
cmp
ficompl
or
and
mov
mov
loope
and
shlb
jne
sub
xor
lea
xchg
incb
into
xor
mov
jb
loopne
cwtl
mov
mov
xlat
movzbl
dec
mov
rorb
nop
mov
xor
lahf
lcall
sahf
pop
lcall
shl
inc
push
cmp
jno
mov
mov
loopne
mov
shlb
sti
xor
imulb
popf
jne
ljmp
test
pop
xor
loop
mov
add
call
loopne
jo
mov
loopne
imul
jge
stc
fs
jmp
es
lea
and
flds
add
test
pusha
rcl
mov
test
mov
pusha
lods
rolb
imul
stos
andb
dec
adc
and
shrb
pusha
orb
nop
mov
ficomps
pop
cmpsl
mov
repnz
adc
outsb
aad
mov
loopne
jp
mov
pusha
inc
pop
shrb
inc
xchg
sbbb
jmp
inc
std
push
mov
rolb
repz
gs
mov
pusha
loopne
rolb
cmp
lods
js
shlb
add
cmp
pop
xchg
pop
iret
dec
mov
or
shlb
int
inc
add
add
lock
rcrb
mov
push
pop
mov
push
add
mov
sub
mov
inc
inc
repnz
push
shl
lods
into
pop
mov
mov
das
xor
pusha
mov
dec
mov
mov
push
fsubrl
test
ja
fwait
std
enter
subl
and
insl
sbb
imul
pop
and
inc
imul
inc
data16
inc
enter
add
addr16
divl
stc
addr16
cmpsl
mov
mov
and
add
mov
mov
ret
mov
mov
ja
mov
push
fcmovne
mov
xchg
mov
sub
aad
xchg
das
push
out
out
je
mov
shlb
pusha
or
sbb
adc
test
ss
fisubrs
outsl
fwait
cwtl
dec
sub
scas
shlb
lret
cwtl
icebp
mov
loopne
ds
popf
mov
inc
pop
daa
jns
push
xor
and
test
add
inc
dec
dec
jg
je
xlat
or
inc
out
mov
test
cmpsl
inc
aas
cmpsl
dec
add
orb
mov
mov
shl
das
sub
add
xchg
ja
repz
fs
jp
in
ss
and
add
hlt
mov
repz
mov
or
loope
bound
dec
dec
fildl
call
pop
xchg
sub
lea
pop
insb
xchg
jecxz
xlat
jno
stos
inc
dec
jle
inc
clc
xor
adc
inc
add
cmp
pusha
sarb
out
push
shlb
rcr
in
jbe
rolb
xor
mov
imul
and
cmpsl
mov
pusha
aad
repz
subb
add
mov
rcl
sub
loopne
xor
loopne
pop
mov
das
mov
mov
dec
rolb
lahf
xchg
dec
pushf
ret
add
in
or
iret
mov
jno
test
sub
mov
pop
mov
notb
add
aad
fs
repz
mov
sbb
inc
and
aam
outsb
inc
push
and
xchg
mov
and
push
cli
pushf
mov
and
xor
jnp
cli
mov
arpl
jp
pop
incl
mov
ret
and
sbb
or
pusha
sahf
inc
mov
or
loopne
andb
add
clc
pop
mov
fadd
pop
sti
mov
push
pop
xchg
inc
mov
pusha
ret
js
lods
inc
inc
or
mov
xchg
dec
cld
out
xor
adc
xor
push
loope
data16
push
into
mov
popa
add
pusha
shlb
and
or
inc
dec
imul
jno
test
mov
jno
ss
adc
xchg
push
loopne
js
mov
dec
jno
rorb
fildl
andb
xchg
ds
mov
pop
fnstenv
rcl
mov
loopne
dec
pusha
out
mov
xor
sub
inc
mov
pusha
shrb
fistps
andb
add
inc
lods
aas
aas
cli
or
addb
mov
iret
adc
push
shll
dec
fisubrs
xchg
xchg
or
add
shl
lret
notb
fstpt
jl
ret
push
adc
jg
jns
mov
scas
xor
sbb
ja
mov
int3
push
mov
das
inc
mov
pusha
xchg
fidivs
scas
mov
add
imul
cmp
inc
ja
adc
sarl
adc
xor
inc
pusha
mov
inc
add
and
leave
icebp
sub
js
outsl
pop
mov
loopne
mov
rcrb
add
inc
pusha
pop
dec
add
aaa
pop
pop
and
lds
or
ret
aaa
push
add
and
movsb
mov
js
push
pusha
xor
sbb
mov
insl
addr16
out
shlb
aas
das
xchg
ror
repnz
rorb
imul
jne
jo
sahf
jns
out
sbb
fldt
mov
fsubrs
adc
loopne
jo
inc
mov
ss
or
dec
inc
add
rolb
mov
mov
fwait
and
mov
fs
loopne
aam
sub
mov
pop
int
inc
and
test
add
inc
add
jmp
add
imul
jnp
arpl
cmp
add
cmc
adc
push
cwtl
pop
jnp
addb
and
fwait
sbb
mov
addl
aas
add
loopne
div
lahf
aaa
dec
shlb
fwait
jl
push
xchg
mov
loopne
add
subb
fldcw
xchg
rorb
shl
mov
test
and
andb
jle
cltd
sub
inc
pusha
ret
and
mov
mov
add
inc
aaa
or
rcrb
icebp
sbbl
sub
pusha
mov
fs
data16
sub
and
std
lea
inc
mov
in
lcall
pusha
loopne
ficompl
leave
into
fwait
pop
jecxz
and
xchg
aaa
adc
mov
xor
adc
and
insb
adc
mov
pusha
loopne
je
and
dec
loope
add
push
jle
xchg
and
sbbb
icebp
xor
mov
rolb
cmp
add
inc
pop
loop
and
sbb
out
rol
dec
fwait
aam
xor
mov
mov
scas
es
rolb
mov
loope
and
mov
lcall
cmp
dec
xchg
gs
mov
fdivrl
mov
addr16
xor
idivl
fisubrl
shlb
aas
xor
mul
iret
hlt
xor
iret
adc
jae
pop
rolb
das
addr16
out
xchg
jo
ret
adc
xor
js
jno
andb
or
pusha
adc
jmp
sbb
add
add
inc
das
bound
std
cmp
sbb
xor
mov
test
rol
sbb
fistps
xor
test
inc
mov
mov
popf
lods
fildl
jge
es
subb
mov
mov
fwait
push
loope
mov
das
movsb
addb
pop
dec
lods
sbb
jne
or
pusha
pusha
js
push
lahf
add
mov
xchg
shll
filds
js
in
add
add
shlb
or
add
pop
stos
add
test
call
jae
add
das
xchg
sub
pop
and
push
lret
lret
mov
and
jns
xchg
cmp
lock
enter
jno
or
sub
ret
and
cld
add
repz
pusha
jb
add
scas
ja
ss
adc
fisubrs
loopne
xchg
mov
pmaxub
scas
std
adc
xchg
jnp
jo
shlb
mov
push
lock
cmp
add
dec
rorb
cs
sbbb
out
pop
lcall
lods
cmp
in
out
pushf
jnp
fcompl
cltd
movsl
or
add
les
jle
add
pusha
fst
xchg
out
pusha
pop
mov
inc
and
cmc
cli
int
pushf
push
sub
pusha
mov
mov
imul
mov
fsubl
pusha
sub
fnstcw
vpandn
fisubrs
mov
or
pop
int3
movl
cwtl
repz
btc
xchg
inc
stos
addb
sub
pusha
test
imul
pop
loop
dec
inc
rol
ret
dec
mov
add
dec
in
cld
mov
inc
mov
mov
rorb
daa
mov
pusha
clc
popf
mov
stos
xchg
in
sahf
ja
xor
ret
jbe
popa
jnp
pop
dec
out
cmp
sub
add
imul
pop
push
ret
rcrb
and
inc
scas
and
pusha
and
pusha
xorb
mov
pusha
push
inc
pusha
adc
aad
or
mov
add
rclb
cmpl
rol
jp
adc
test
shrb
add
mov
pop
pop
xchg
rorb
or
outsl
lods
dec
mov
out
outsb
add
popa
in
cwtl
hlt
ljmp
rcll
sub
loopne
loopne
jecxz
adc
cwtl
in
ljmp
push
inc
and
jg
cmp
scas
and
mov
mov
inc
add
inc
iret
pusha
or
push
addb
jge
ret
cpuid
and
lock
pop
nop
and
pusha
sbb
fstl
and
lret
pusha
call
shlb
loopne
nop
clc
shll
jl
and
jno
push
mov
and
loopne
xchg
and
aad
ret
lcall
rolb
shrl
xor
pop
lahf
loop
mov
and
in
aaa
mov
lods
mov
popa
xchg
adc
aaa
xchg
out
insl
sti
test
loopne
cmc
sarb
and
clc
out
pop
mov
or
mov
addb
test
mov
mov
inc
loopne,pn
inc
or
inc
ss
popa
repz
leave
pop
out
shll
leave
push
lods
inc
and
xchg
cli
xor
push
push
and
pop
mov
out
repnz
sub
mov
imul
xchg
aam
mov
add
pop
push
cmpsl
pop
fmull
inc
mov
clc
bound
mov
and
push
loopne
pop
in
cmpsb
add
loopne
imul
mov
mov
mov
add
and
inc
lahf
push
int3
leave
mov
ds
mov
enter
pusha
or
addb
mov
pop
lcall
pusha
popf
movsl
sub
jae
cmc
lret
loop
push
pusha
inc
imul
inc
ret
icebp
sbb
mov
xor
mov
insb
xchg
adc
leave
jg
add
push
inc
loopne
adc
loope
jne
and
xchg
mov
and
pop
mov
cmp
and
addb
popa
add
sbbb
mov
add
fcom
fstpt
in
cld
hlt
into
adc
and
loopne
jbe
shll
and
pop
aad
mulb
and
and
dec
test
inc
andb
and
loopne
sub
jns
loopne
pop
and
xorb
and
and
xchg
pop
mov
push
sub
xor
pusha
pusha
mov
es
sbb
adc
enter
jge
leave
mov
ret
pushf
scas
loopne
iret
insl
sub
mov
fs
adc
sahf
ficomps
jl
pusha
xor
and
ret
xor
pop
sbb
std
mov
test
inc
jecxz
mov
loopne
push
sbb
addb
popa
mov
mov
in
or
xor
and
sahf
xor
jecxz
daa
es
pusha
popf
dec
jg
mov
mov
xor
pop
jnp
mov
orb
rcr
jbe
adc
cmp
cmp
test
pusha
rorb
pop
add
inc
test
inc
xorl
jbe
mov
cli
fldenv
pusha
mov
push
dec
and
jnp
sbb
or
xor
es
add
add
and
xchg
xor
mov
sbb
jno
addb
lods
add
pusha
xchg
popa
call
cs
sbbb
and
inc
popf
enter
shlb
andb
out
push
mov
cmp
mov
gs
and
sub
pusha
and
stos
mov
add
sbb
add
test
mov
sbb
cmp
pop
movsl
sbb
fdivp
scas
lret
mov
pusha
and
mov
fldt
mov
mov
cmp
add
mov
add
fiaddl
loopne
iret
sub
sub
and
xchg
or
and
lcall
sbb
inc
add
inc
andb
mov
dec
xor
jns
aam
notl
jl
addr16
in
push
aad
inc
leave
cmp
data16
loope
xor
shl
add
pusha
in
mov
pusha
jnp
or
lock
and
and
into
ja
jl
in
sub
pusha
pushf
jp
shl
xor
xor
sub
test
shl
sub
dec
mov
xor
addb
or
icebp
into
push
mov
scas
pusha
mov
mov
xchg
or
inc
add
adc
movsb
and
arpl
adc
and
push
in
xlat
sbb
fbstp
cmp
xor
int
shlb
sbbl
shl
and
outsb
and
or
dec
sub
loop
and
mov
pop
out
xchg
mov
pop
mov
jnp
rolb
add
jmp
popa
sbb
add
fwait
push
push
mov
add
and
test
push
aaa
dec
mov
inc
mov
mov
mov
andb
repnz
add
inc
xorb
shlb
cmpsb
loopne
xor
add
sub
mov
inc
jl
ds
xor
inc
cmp
mov
mov
adc
push
movb
cli
stos
loopne
fstpt
dec
cmp
cmpsl
dec
fwait
inc
int
pusha
loopne
pusha
inc
pop
xchg
xchg
aas
popa
mov
loopne
pushf
pop
add
add
adc
test
shlb
xchg
rcrb
and
or
inc
dec
push
jmp
lret
mov
call
out
cmp
int
pop
xor
fsubs
mov
shrl
lock
or
inc
leave
lea
and
push
xor
lret
out
fbld
mov
inc
rcl
call
rcl
sbb
adc
jnp
jae
lods
addr16
or
mov
rcr
stos
aas
push
inc
and
add
ss
or
rorl
push
pusha
mov
inc
dec
aam
inc
in
push
push
sti
add
andb
xchg
outsb
out
push
out
add
pop
xchg
mov
push
adc
rorb
xor
mov
add
ss
hlt
nop
or
add
dec
mov
aam
mov
pop
ss
insl
stos
loopne
leave
cmc
in
pop
sbb
and
loopne
mov
add
pusha
imul
pop
pusha
test
and
mov
mov
sub
and
jmp
mov
stc
or
pusha
inc
icebp
addb
sbb
and
ret
pop
jge
cli
pop
lret
mov
addb
inc
pusha
jp
add
jne
testb
pop
pop
sub
loopne
shlb
and
xlat
add
shrb
mov
mov
pusha
popf
jbe
jae
mov
idivb
mov
mov
jmp
add
mov
dec
out
shrb
rcrb
or
or
and
pusha
loopne
dec
and
inc
fxch
push
push
loopne
movsb
and
cld
andb
sbb
mov
repnz
aaa
insb
sub
loopne
jo
lods
inc
push
loop
jb
and
loopne
scas
in
mov
mov
loopne
out
inc
hlt
es
jnp
mov
jns
or
fmul
mov
sbb
and
add
cmp
jg
inc
cli
imul
mov
je
push
adc
outsb
sub
shlb
push
in
sti
push
stos
lahf
aad
mov
xor
mov
test
and
or
dec
in
push
add
in
jmp
add
nop
lock
cmp
inc
loopne
mov
shlb
add
loope
mov
add
inc
dec
and
sub
int
cmp
out
sub
xchg
call
push
pusha
inc
cmp
outsl
sbb
rcl
ret
and
shlb
dec
and
sub
cmp
shll
loopne
sub
vlddqu
cmp
nop
xchg
movsl
push
push
clc
pop
or
pushf
and
pusha
cmp
pop
dec
push
inc
jnp
sub
pusha
jle
movsl
mov
mov
add
and
sahf
out
dec
inc
dec
pop
pop
arpl
inc
lahf
dec
cmpsl
inc
addb
jb
or
loopne
fisttps
movsl
xor
out
adc
dec
outsb
xchg
jbe
fstps
data16
xchg
and
add
push
and
mov
add
iret
in
mov
inc
jle
pop
xor
ret
mov
pusha
mov
mov
andb
sbb
fdiv
arpl
xchg
cltd
xchg
popf
mov
mov
in
jl
sub
loopne
mov
js
push
push
push
scas
xchg
addr16
popa
je
dec
fisubrl
stos
push
lods
sbb
fistpl
mov
mov
andb
and
xorb
inc
stos
inc
loopne
imul
mov
popf
roll
repnz
subb
or
adc
loop
mov
inc
loopne
fiaddl
jecxz
xchg
sbb
lds
xor
sub
sahf
sbb
jge
adc
outsl
insl
in
in
jle
pop
dec
mov
pop
in
adc
and
in
xchg
bound
outsl
jmp
loop
push
mov
xchg
repnz
inc
inc
stos
repnz
adc
or
mov
icebp
xchg
jl
inc
add
aas
jb
xorl
jne
pop
xor
in
xor
insb
in
scas
add
add
mov
push
popa
cmp
loopne
scas
fldl
or
mov
dec
push
ja
dec
sbb
fs
inc
pop
cmp
addr16
sbb
insb
mov
mov
push
add
push
repnz
mov
xchg
gs
dec
xor
sbb
adc
stos
mov
cli
pop
ret
cmp
pop
cmp
jnp
and
hlt
push
sub
je
jl
mov
out
lea
andb
jecxz
je
jecxz
hlt
fdivp
inc
shrb
and
stc
test
and
jp
loope
imulb
shl
dec
jae
cs
mov
test
rclb
pop
sti
mov
aad
xchg
mov
pop
stos
cmpsb
shl
pusha
cltd
mov
or
fldt
pusha
inc
jg
mov
cltd
repnz
and
shr
addb
clc
aad
add
inc
push
push
mov
push
leave
jb
and
test
arpl
mov
adc
inc
popl
pop
inc
xor
inc
mov
xchg
in
and
mov
loopne
fldenv
pusha
and
cld
sub
mov
imul
jecxz
and
pop
aaa
wrmsr
ljmp
inc
inc
and
loopne
popf
addb
pop
push
sbb
push
and
or
and
icebp
dec
test
add
pop
cmp
loopne
fists
bound
fstpt
add
jg
mov
add
std
pop
push
jnp
orl
or
add
inc
cltd
fucomi
jg
mov
inc
add
cld
adc
rorl
mov
push
pop
fnstcw
cld
xor
shl
or
xchg
push
sbb
ud1
xchg
clc
test
sar
adc
inc
mov
dec
push
out
stos
iret
popf
mov
inc
add
in
pop
dec
xchg
push
pop
mov
je
mov
mov
movsb
rol
sub
cs
cmp
add
int
xchg
addr16
or
and
cmpsl
cltd
std
add
xchg
mov
jb
mov
nop
lret
hlt
mov
scas
mov
sbb
loopne
outsb
andb
push
inc
loopne
imul
decb
repnz
sbb
and
jno
adc
cmp
push
xor
xor
xchg
in
mov
jl
out
out
out
jb
ret
arpl
jmp
out
arpl
cmp
and
iret
and
imul
pusha
loopne
imul
loopne
shlb
xchg
cmc
loopne
mov
add
orb
pusha
mov
cltd
xchg
mov
fisubrl
add
loopne
pop
mov
and
mov
jns
sbb
enter
rolb
add
mov
xchg
or
and
sbbl
ret
fistps
addr16
push
lcall
jmp
fsubr
cli
test
loopne
xchg
outsb
inc
cmp
dec
pop
push
icebp
in
clc
xor
je
imul
pop
icebp
jae
and
rolb
sub
pusha
cmp
and
inc
fildl
jle
dec
xchg
popa
sbb
cmp
mov
ficoms
ds
add
inc
shlb
dec
mov
mov
rolb
push
push
loopne
push
lods
loopne
pusha
repz
mov
lret
cmpsb
loopne
bound
ret
inc
jp
mov
push
adc
mov
jne
ret
stos
shlb
pop
jnp
mov
jbe
mov
and
sbb
nop
sti
outsb
lea
cmp
pop
negl
cmp
push
lret
outsb
andb
adc
xlat
add
movsb
shlb
out
mov
mov
mov
dec
push
pushf
in
dec
cmc
pop
xor
xchg
mov
bound
pop
mov
gs
out
call
sbb
pop
popf
fcompl
gs
or
adcb
out
push
inc
add
and
jl
out
bswap
ja
loopne
mov
cmpsb
mov
lret
rcr
jge
nopl
mov
loopne
mov
sbb
loopne
jle
lock
adc
mov
jae
sbb
jle
sbb
push
movsl
ja
add
in
mov
push
lret
stc
imul
jge
push
cltd
jae
and
aam
push
fisttpll
leave
xor
outsl
outsl
jmp
dec
push
or
inc
test
or
pusha
inc
out
in
pop
mov
gs
pop
sbb
loopne
cld
stos
insb
push
cmp
aaa
or
call
int
mov
fdivs
test
and
inc
cmpb
and
and
aam
inc
pusha
sbb
popa
push
shlb
sahf
ja
jmp
lret
les
and
sbb
mov
inc
adc
inc
inc
out
jo
loopne
rclb
lods
mov
fidivl
scas
shlb
cmp
mov
js
movsb
inc
add
xchg
jl
mov
in
pop
mov
inc
es
sub
mov
call
les
lods
loopne
mov
mov
jns
push
sti
daa
push
and
ljmp
out
loop
pusha
std
mov
sub
cld
jle
mov
mov
inc
gs
movsb
pusha
and
loopne
test
fldcw
mov
inc
daa
lcall
adc
ljmp
xchg
stos
add
sbb
rolb
out
cmp
adc
sahf
jb
cwtl
jecxz
add
inc
pop
adc
pusha
mov
loopne
lods
pusha
mov
addb
addr16
xchg
imul
inc
movsb
pusha
and
adc
out
je
clc
pop
push
in
inc
arpl
inc
mov
inc
pop
inc
pop
pushl
loope
sub
pusha
andb
mov
pop
loop
jg
xchg
push
sub
mov
loopne
cmpsb
add
inc
mov
and
js
push
jp
jo
data16
mov
rcrl
mov
test
shl
cmpsb
inc
loopne
mov
add
ret
sub
fwait
jo
inc
sbb
push
push
xor
add
sbb
inc
mov
pop
insb
xchg
cmp
cmp
ret
into
lret
xlat
inc
iret
pop
lahf
sbb
cli
mov
add
in
stos
lods
loopne
les
push
mov
dec
sbb
fiadds
xlat
loop
addb
pop
sub
inc
rcrl
lds
or
ret
repz
cmp
aad
and
int
inc
sub
xor
filds
cmp
jbe
in
scas
loopne
repz
test
test
xor
arpl
inc
loopne
xor
pushf
std
xor
outsb
inc
popf
pop
push
popa
fcomps
dec
xchg
jae
pop
sbb
or
rcr
mov
out
pop
and
add
daa
dec
mov
or
bound
jnp
stc
push
popa
push
iret
scas
mov
std
mov
arpl
loopne
js
jnp
inc
stos
add
arpl
cltd
outsl
inc
enter
jne
mov
push
loopne
into
xchg
fisttpl
stos
inc
cmpb
test
mov
sub
adc
in
daa
ret
jns
lret
mov
cmpsb
pusha
xorb
mov
push
add
adc
shl
adc
sbb
imul
fcoml
ret
add
jae
lret
inc
loopne
cmp
enter
neg
dec
mov
out
aas
mov
shl
sub
and
mov
and
add
mov
iret
pop
enter
out
cmp
shl
mov
loopne
popa
test
mov
or
jg
inc
lret
push
pusha
aaa
lcall
ja
repnz
add
jns
jb
jg
sub
cmp
rcrb
add
das
in
in
sub
inc
test
shll
mov
rol
jb
inc
inc
movsb
add
dec
xlat
mov
out
or
push
push
dec
daa
test
inc
fiadds
adc
lods
and
int3
pop
les
aaa
mov
jle
pusha
rolb
mov
add
cmc
imull
inc
inc
jbe
dec
loopne,pn
mov
and
rcrb
inc
add
pusha
out
retw
cmp
push
mov
and
test
mov
pusha
inc
mov
and
rclb
cmpb
andb
cmp
xor
rcl
cmpsl
pop
pop
andb
and
and
mov
shlb
push
sub
inc
xor
pushf
adcl
out
iret
xor
arpl
shlb
shlb
lahf
jg
outsb
xchg
mov
aam
mov
scas
scas
sbb
jnp
cmc
xchg
pop
aad
insl
cld
xchg
mov
xor
rdpmc
repz
rorb
jl
addb
push
inc
add
dec
cld
popa
cmp
cmp
loopne
adc
pop
es
cmpb
xchg
add
sti
movsl
mov
add
inc
sbb
xor
mov
subl
lcall
ficomps
andb
mov
pusha
sbb
loopne
dec
dec
xor
inc
dec
stc
xor
push
mov
dec
cmpsl
xor
mov
repnz
scas
pop
jns
cmp
mov
rclb
add
daa
xchg
loopne
imul
and
imul
gs
inc
xchg
xchg
aaa
sbb
lods
arpl
dec
gs
mov
jo
xchg
in
xlat
scas
mov
inc
and
dec
les
in
or
repnz
xchg
fildll
mov
andb
ret
inc
popa
loopne
rolb
mov
jno
or
mov
mov
and
add
bound
inc
pusha
cmp
arpl
dec
and
cmp
xchg
mov
rolb
dec
shlb
xor
pop
rclb
aam
and
push
shlb
pop
out
imul
jmp
je
addb
mov
or
add
jns
pop
andb
mov
and
call
mov
add
xorb
xchg
sub
loopne
xchg
clc
push
imul
add
dec
cs
and
jp
or
add
test
mov
test
add
rcrb
repz
fistl
xchg
addr16
incl
dec
std
nop
bound
into
mov
ret
bndstx
ret
nop
fcoms
aas
repz
mov
inc
pop
xchg
insl
daa
and
mov
shlb
out
arpl
rorl
or
add
or
pusha
cmp
fldcw
add
loopne
mov
aam
mov
inc
pusha
add
pusha
sub
push
arpl
test
ss
lcall
es
imull
rcll
cli
addb
dec
mov
ja
mov
stc
push
scas
inc
adc
arpl
sub
out
jbe
pushf
test
sbb
push
adc
mov
andb
hlt
sar
push
pop
movsb
inc
inc
pop
sub
and
sarb
rcrl
add
mov
and
in
jp
shl
push
pusha
mov
ds
shrb
pusha
and
stos
xor
and
ss
dec
rcrl
sub
inc
movl
mov
inc
mov
and
push
ljmp
mov
push
lea
mov
ljmp
jnp
shlb
mov
pop
andb
outsl
or
and
xchg
rclb
and
iret
fidivs
sub
xchg
out
xor
aam
cmc
imul
xchg
adc
xor
lock
push
cli
ss
pusha
inc
loope
jno
loopne
test
fisubrl
clc
fldt
xchg
mov
and
inc
xor
mov
inc
mov
shlb
mov
mov
jne
ss
mov
hlt
jecxz
mov
mov
loopne
mov
and
push
cmp
int
jbe
mov
pusha
rorb
addl
gs
xor
int3
outsb
xchg
mov
inc
lock
jns
pop
sbb
xchg
sub
inc
xor
out
push
sbb
lock
sub
sbb
push
sbb
add
sarl
push
popa
inc
les
loopne
mov
sbb
inc
sbb
movsb
mov
pusha
jo
mov
xchg
push
lcall
xor
lods
inc
out
lea
lods
mov
xor
divb
and
loopne
imul
orl
enter
mov
jle
and
mov
clc
pop
test
inc
sub
popa
jbe
shl
out
js
push
fwait
int
add
push
out
push
mov
mov
fnstcw
jg
repz
roll
mov
sbb
out
stos
pusha
mov
inc
add
and
and
pop
and
mov
mov
jmp
stc
pusha
es
loope
and
rolb
inc
inc
aaa
mov
daa
pop
pop
test
xchg
rol
xor
xor
jae
mov
xchg
in
insb
pop
lret
int
adc
hlt
stos
mov
mov
dec
rol
inc
jmp
and
mov
mov
push
dec
bound
add
shrb
add
vpunpcklwd
xchg
ljmp
pusha
add
mov
or
test
mov
or
shr
jg
negl
sub
mov
pusha
dec
and
and
andb
loopne
cli
cwtl
repz
sbb
cltd
jae
inc
mov
shlb
push
cmpl
mov
or
pusha
mov
js
rol
xchg
nopl
jbe
sahf
xor
xchg
out
cmp
cmp
addb
add
and
mov
scas
dec
mov
cmp
loopne
push
mov
dec
cmpsb
mov
cmp
out
mov
dec
ljmp
pusha
rolb
rol
and
inc
stos
into
push
loopne
xchg
push
mov
and
mov
push
or
mov
inc
iret
ss
mov
add
xchg
pop
lret
sbbb
fimull
rolb
inc
loopne
mov
fcompl
leave
ret
pop
mov
loopne
mov
gs
xchg
xchg
in
mov
pusha
cmpsb
add
ret
dec
sbb
sub
loopne
fisttps
out
in
loope
sbb
fucomp
je
test
cmpl
stos
andb
in
in
faddp
dec
movsb
inc
inc
scas
jo
cmp
loopne
aas
pop
cmp
cmp
add
fisttpll
dec
jbe
mov
push
add
shl
mov
orb
add
add
in
iret
lahf
push
rep
loopne
and
loopne
mov
xor
or
and
hlt
int3
insb
jno
xor
jne
cmc
loopne
repz
and
bound
inc
jmp
addl
add
data16
sub
mov
fsubrl
test
enter
stc
repz
arpl
mov
test
and
lds
cmpb
and
rcrb
loop
xor
pop
push
adc
stos
nop
mov
or
int
and
pusha
fnstcw
ds
mov
icebp
addb
add
call
dec
xor
sbbb
outsl
mov
and
pusha
and
jbe
or
das
sbb
sbb
sbb
xchg
pop
int
mov
daa
test
add
jmp
sbb
jo
add
cmpsl
out
or
fs
xchg
lret
aas
cmpsl
push
movsl
std
cmp
adc
pushf
test
loopne
in
jg
inc
rorb
add
add
pop
pop
es
rorl
loopne
or
sbb
sbb
scas
pusha
subb
mov
mov
xor
popa
sbb
cmp
stc
mov
xor
ss
pushf
and
add
shl
out
sub
out
leave
adc
je
inc
shl
xchg
pusha
loopne
hlt
aad
popa
mov
cltd
int3
jecxz
or
cmpb
lods
mov
pusha
out
jno
lods
pop
clc
xchg
sti
mov
xchg
and
imul
xchg
addb
xlat
stc
test
rcrb
adc
imul
pusha
jg
stos
inc
pusha
xor
andb
jge
fcmovnu
sub
pusha
and
or
inc
and
push
scas
addb
cmpsb
rolb
xchg
or
xchg
popa
dec
pop
ds
jbe
shrl
loopne
pop
cwtl
ret
push
test
loopne
popf
push
inc
neg
push
js
movsb
inc
add
pusha
sbbb
scas
addb
and
or
insb
or
pusha
jb
add
inc
notb
movsl
mov
loopne
not
dec
test
lcall
lods
pusha
add
xchg
les
stc
movsl
cmp
addb
negb
aaa
stc
add
jmp
shll
xchg
xor
ljmp
sbb
mov
jge
mov
pusha
fdivrs
xchg
cld
outsl
pop
rep
xchg
push
jb
mov
add
mov
pusha
mov
add
pusha
rcrb
mov
mov
sbb
movsl
pop
pop
add
lret
rolb
mov
inc
shlb
cmp
enter
push
mov
cmpl
inc
shlb
xchg
sbb
mov
sbb
dec
ret
rclb
sarb
pusha
jns
and
mov
decl
mov
rolb
ja
dec
sbb
add
loopne
test
inc
pop
inc
gs
jecxz
jns
loopne
lds
in
shrl
shlb
int
xor
push
cmpsb
add
stos
lds
pusha
and
xor
and
add
scas
pop
inc
test
jno
pop
leave
mov
out
pop
pop
jne
mov
pop
push
jno
test
outsb
cmp
icebp
xchg
and
loopne
add
push
add
cmp
jno
sub
or
andb
pusha
jno
inc
xor
cmpsb
inc
mov
insl
lret
add
cmp
sarb
pusha
add
sarl
and
ja
mov
lods
push
sub
loopne
insb
push
test
xchg
mov
fs
pop
imul
add
inc
aad
lock
dec
andl
insb
data16
jnp
jb
je
push
shl
pusha
sbb
pop
adc
add
mov
or
xor
roll
mov
add
push
call
inc
xlat
fdivs
scas
loopne
andb
popf
mov
ds
loopne
xchg
scas
hlt
add
cmpsb
mov
or
int
lock
std
imul
or
sti
into
lods
and
sub
and
mov
fbld
in
pusha
loopne
lods
xchg
xchg
mov
push
das
fistps
mov
xchg
icebp
mov
sbbl
pop
dec
push
mov
adc
shlb
and
std
mov
fiaddl
mov
loop
adc
nop
jae
and
sbb
shrl
jnp
jne
out
push
out
and
loopne
mov
mov
insb
or
scas
loopne
fdivrl
add
sti
jl
cmpsl
into
popf
fcoms
rorb
mov
in
adc
and
push
pop
or
inc
jge
add
mov
jle
aad
add
and
in
xor
inc
add
mov
out
mov
add
ret
jmp
daa
inc
or
add
or
inc
and
test
idivl
jbe
rcrl
cwtl
fs
mov
stc
push
loopne
cld
das
cli
mov
sbb
addb
and
loop
inc
das
lods
repz
xor
lods
add
fwait
mov
rcll
sub
stc
orl
inc
adcb
scas
add
leave
aaa
pop
dec
roll
inc
int3
cmovne
fcmovbe
out
mov
add
add
lods
mov
sysenter
movb
add
inc
add
pop
andb
inc
pusha
dec
movsl
push
rolb
cld
and
add
and
cld
aam
jb
icebp
stos
add
pusha
cli
jle
xor
loopne
je
mov
jge
pop
aad
sbb
rolb
cli
pop
fistps
movsl
loopne
dec
mov
xchg
pusha
pusha
negb
mull
call
icebp
aaa
sub
mov
ss
pusha
loopne
mov
and
xor
fisubl
and
jns
mov
shlb
inc
dec
insb
inc
and
xorb
repz
out
out
push
pop
jl
in
dec
out
fldenv
sub
cmp
inc
and
shlb
pusha
int3
mov
dec
lret
ss
mov
add
arpl
shl
and
cli
fdivl
push
mov
cs
loopne
push
test
and
mov
mov
xchg
and
shr
fildl
fstpl
test
add
icebp
cltd
push
stos
fisubl
stos
enter
mov
add
adc
sub
and
pop
insl
mov
add
jecxz
mov
fwait
leave
fisttpl
mov
scas
cmp
inc
xchg
dec
addb
sbb
jmp
add
std
stos
rolb
dec
in
in
loopne
std
xchg
test
data16
loopne
xchg
lea
enter
filds
inc
inc
dec
add
in
pop
dec
sub
lock
shlb
shl
fsubs
cli
fsubs
adc
aam
jae
andb
pop
divb
sbb
pusha
orb
mov
pop
jne
fnstenv
inc
test
rorb
push
and
add
call
icebp
push
fwait
hlt
xor
repz
movsb
andb
pusha
and
std
lcall
dec
adcl
inc
idivl
mov
loop
scas
sbb
mov
dec
stc
movsl
fcmove
dec
or
aad
ja
mov
loopne
test
add
insb
out
add
nop
jb
push
fmuls
pusha
addb
insb
cmc
call
cmpsl
daa
or
rclb
sbbb
jl
mov
test
loopne
mov
rol
pop
cmp
adc
in
mov
and
loope
ret
cmp
jl
rol
shll
and
cmp
dec
dec
push
ja
popf
cltd
jmp
js
push
adc
mov
xor
and
mov
xchg
pushf
pop
or
arpl
pusha
mov
cmp
inc
addr16
or
push
push
mov
and
mov
shl
aaa
mov
pusha
mov
aaa
xchg
cmp
and
add
and
divl
lret
push
mov
addb
jno
mov
mov
inc
add
addb
add
fs
pop
prefetch
rolb
int3
add
adcb
cmp
xchg
mov
loopne
push
daa
ret
arpl
pop
cmp
rorb
rorb
mov
sub
pusha
loopne
mov
jb
inc
loopne
loopne
mov
lret
pusha
mov
sbb
push
sub
rorb
mov
mov
shlb
inc
xlat
jecxz
mov
clc
daa
jge
dec
insb
jmp
xor
push
add
std
addb
inc
mov
sub
andb
addb
fildll
ret
inc
add
rcl
inc
pusha
add
testl
add
pusha
jg
test
jno
aaa
enter
lea
notb
shll
shl
aad
shll
mov
aam
xor
sbb
ret
ret
and
jle
xchg
sbb
pop
or
pusha
repz
add
andb
inc
mul
icebp
mov
and
add
or
mov
out
arpl
roll
inc
fistps
div
xchg
xchg
inc
adc
test
and
jle
jbe
pusha
test
rclb
ret
dec
mov
pop
xchg
sub
mov
cwtl
mov
sub
pusha
cmp
stos
loopne
or
jl
dec
cld
pop
imul
pusha
daa
cli
ret
in
push
andb
xor
fistpl
and
into
mov
loopne
insb
popa
xor
cmc
mov
in
jbe
arpl
leave
inc
fimuls
pop
shll
mov
and
adcb
inc
and
pusha
push
lcall
addr16
fs
push
fwait
push
idivl
mov
aas
std
adc
popf
and
outsl
push
hlt
jbe
xor
aad
data16
inc
ret
jne
stos
pusha
subb
ror
ljmp
mov
add
or
mov
and
lds
jp
push
mov
sahf
and
inc
cmp
mov
outsl
dec
inc
rorb
imul
mov
dec
clc
jns
test
pusha
pop
lods
addb
test
pusha
je
sbbl
fldenv
fisttpl
push
outsl
dec
sbb
dec
ret
pop
imul
mov
mov
loopne
enter
pop
stc
popa
nop
addl
test
and
mov
inc
pop
cwtl
je
and
mov
stos
mov
inc
in
imul
or
mov
jb
addr16
jge
pusha
loopne
ret
mov
lret
addb
filds
pusha
loopne
pop
adc
clc
int3
cmp
or
inc
and
fistpl
inc
push
mov
inc
mov
ds
scas
loopne
insb
add
add
loopne
xchg
lret
jo
jle
das
in
mov
xchg
cmp
mov
shl
aad
int3
sub
or
and
jge
inc
mov
jle
jle
fcmovne
sub
mov
cld
jecxz
xor
sbb
fidivrl
lods
sbb
push
add
andb
mov
jnp
and
push
aad
out
mov
aam
adc
and
in
pop
inc
mov
adc
inc
loopne
pushf
xlat
mov
and
pop
call
add
jp
inc
push
and
shl
sbb
movsb
andb
mov
cmp
mov
xchg
push
popf
push
sbb
andb
mov
and
and
out
rol
inc
das
add
inc
pop
adc
push
cli
sub
pop
inc
bound
add
data16
adc
push
push
inc
pop
pop
xchg
imul
pusha
xor
adc
jno
loopne
and
inc
xchg
mov
and
into
xor
hlt
xchg
mov
and
push
and
lret
mov
test
loopne
lock
int3
les
mov
mov
addb
mov
add
adc
cli
js
cmp
dec
pop
mov
dec
scas
pusha
and
xchg
shll
cmp
pop
push
popf
fidivrl
sbb
loop
inc
pusha
shrl
or
rclb
xor
push
scas
jno
sbb
lahf
cs
imul
into
add
pusha
dec
insb
jns
adc
or
hlt
cmp
mov
jne
cmp
mov
dec
or
aaa
incl
mov
scas
loopne
test
loopne
xor
mov
add
cmp
pusha
shlb
ret
xor
inc
cltd
mov
fmuls
gs
adc
gs
inc
xor
add
or
into
jl
mov
stc
into
dec
add
mov
mov
dec
mov
std
scas
dec
fisubrl
pop
mov
rcrb
loopne
sbb
mov
xchg
push
or
cmpsb
loopne
pusha
std
pop
adc
in
dec
push
and
xchg
outsb
fnstsw
mov
mov
or
push
mov
sub
addb
sbb
inc
je
adc
rolb
or
inc
and
cmpsb
add
ror
idivl
mov
push
jecxz
xchg
cmp
xor
aas
mov
ds
xchg
inc
incb
lock
mov
lcall
aaa
loopne
jmp
daa
push
andb
mov
xchg
ss
addb
mov
cltd
es
push
addb
adc
orb
ret
sbb
div
fldcw
pop
mov
and
and
and
ljmp
sarb
lock
outsl
cs
push
push
popf
cmp
lock
jb
out
dec
sahf
invd
inc
shlb
inc
roll
inc
xchg
mov
add
arpl
pop
and
rclb
cld
dec
faddl
inc
jbe
dec
mov
xlat
fsubr
imul
cmp
adc
mov
inc
or
and
rorb
inc
and
mov
sbb
cmp
mov
rolb
shlb
fnstenv
ja
je
jbe
lret
cmp
outsl
scas
inc
loopne
filds
inc
mov
and
loopne
mov
aaa
popa
or
inc
mov
push
add
mov
jl
cmpsl
data16
sahf
xor
mov
cmpsl
mov
push
inc
loopne
loop
hlt
je
mov
push
addb
mov
inc
and
movsb
and
arpl
loopne
das
cmp
push
mov
push
dec
mov
stos
mov
xchg
jge
mov
or
inc
sub
sbb
lret
into
jecxz
mov
jne
call
ja
lcall
add
call
pop
mov
loopne
adc
out
mov
mov
andb
scas
shlb
fwait
pushf
das
mov
mov
add
xor
das
fstps
sbb
pop
mov
loopne
inc
cmp
out
mov
repnz
sub
fadd
mov
push
lods
shlb
lods
mov
fldenvs
inc
ret
push
dec
shr
in
mov
andb
sub
inc
das
repnz
mov
addb
mov
inc
jle
dec
movb
push
cmp
adc
les
int3
cwtl
cmp
add
or
loopne
cltd
loope
jno
stos
andb
clc
mov
imul
pop
cmpsl
push
push
cmp
shrl
scas
bound
in
jnp
ret
xor
js
pop
cld
xor
pop
stos
and
loopne
pop
iret
xchg
mov
jns
idivl
das
mov
dec
push
lret
sti
add
sbb
inc
add
int
xchg
loop
addb
mov
pop
in
out
pusha
and
arpl
and
inc
inc
xor
dec
sbb
hlt
cs
and
pop
rolb
sub
jo
test
loopne
and
mov
addb
mov
and
mov
mov
pop
inc
jo
cmpsl
sub
shll
inc
bound
fistpl
mov
and
loopne
loope
xchg
call
mov
mov
mov
repnz
or
fdivp
and
and
loopne
xor
test
and
gs
dec
cmp
jg
sbb
dec
xchg
and
cmp
add
sbb
cmpsl
pusha
icebp
cmp
fwait
xchg
out
xchg
sub
pushf
dec
lods
rolb
insb
sub
add
lock
pop
into
dec
pop
sbb
inc
fs
xchg
sti
push
mov
rol
jp
cmpsb
and
xor
add
outsl
nop
sbb
ja
push
ds
fimuls
arpl
pusha
loopne
push
inc
or
loopne
mov
loopne
adc
jo
sbb
mov
pop
add
pusha
mov
mov
outsl
sahf
imul
lock
inc
xor
rol
mov
cmp
sub
and
pop
rorl
movsb
and
push
sub
and
pusha
shlb
inc
mov
cmp
mov
or
add
adc
pop
push
das
add
dec
xor
imul
add
xor
iret
add
loopne
sub
jae
and
movsb
pusha
add
cmp
rolb
inc
mov
in
fwait
mov
out
das
in
jp
and
add
lods
pusha
pusha
leave
in
dec
and
jae
or
shl
out
fdivs
addb
pop
test
inc
andl
inc
daa
xchg
mov
sbb
xchg
fs
mov
add
les
and
incl
xor
nop
lds
add
pop
clc
cmp
inc
xchg
stc
add
inc
cmp
push
inc
cmpb
loopne
push
dec
lods
jle
add
and
or
inc
mov
or
pop
sub
sbbb
pusha
inc
in
loopne
mov
clc
popa
clc
shl
and
inc
in
mov
pusha
mov
rolb
ret
mov
inc
pop
rorl
mov
or
inc
push
gs
pusha
sarb
adc
mov
cmpsb
pusha
mov
je
mov
dec
stc
or
fwait
outsb
sub
add
jmp
pop
mov
inc
inc
lock
fwait
out
sbb
add
addb
in
orl
pop
adc
sub
fstpt
in
addb
mov
mov
dec
xchg
pop
sbb
cmc
mov
sbb
in
or
shlb
flds
mov
pusha
dec
jb
icebp
addb
loopne
add
mov
pusha
pusha
push
mov
sub
add
lods
bound
pusha
addb
nop
mov
loopne
mov
scas
loopne
mov
jmp
xchg
test
arpl
pusha
pusha
sbb
test
adc
paddsw
sub
sub
and
call
insb
aaa
in
movsb
loopne
sbb
jno
cli
push
cmp
jns
dec
sub
adcl
aaa
inc
add
sbb
push
push
and
dec
dec
rcrb
rolb
cmp
bnd
cmp
mov
push
lret
dec
lods
mov
cmp
push
inc
leave
mov
loopne
arpl
lret
dec
mov
in
pushf
add
pop
jmp
push
lret
ds
inc
inc
sub
dec
insl
lret
sti
mov
pop
aad
repnz
cmp
xchg
xchg
dec
in
out
mov
mov
loopne
xor
and
das
shll
mov
jno
jmp
pusha
and
pop
xlat
iret
xor
aaa
or
lods
aas
xlat
jecxz
and
out
into
loopne
mov
xor
adc
inc
add
test
fmuls
push
ds
out
mov
cmpsl
or
movsl
dec
pop
sub
jmp
stos
mov
ds
iret
pop
pushl
fidivs
mov
lock
push
test
and
ds
divb
cmp
loopne
outsb
das
test
call
or
rcrb
sbb
lret
jmp
mov
pusha
pushf
mov
or
pusha
sbb
rcr
mov
pop
xor
pop
jmp
mov
fnstenv
ret
gs
xchg
and
add
add
add
daa
mov
jp
imul
inc
enter
xchg
loopne
adc
xor
faddl
add
icebp
or
loopne
decl
inc
inc
add
insl
push
jns
lock
cld
push
shll
push
pop
xor
shlb
loope
aam
and
xor
ljmp
stc
dec
push
addb
or
or
inc
add
push
inc
scas
imul
subb
test
mov
hlt
enter
dec
lcall
fidivs
lahf
fsub
push
add
mov
push
hlt
adc
adc
pop
icebp
test
fiadds
pusha
mov
add
dec
mov
add
xadd
cmc
fmuls
out
aad
pusha
inc
adc
dec
lods
and
and
adc
inc
loopne
or
xorb
and
xlat
inc
clc
pop
sarl
xor
lcall
mov
push
mov
push
dec
cmp
push
sbb
jge
mov
loop
xor
bnd
push
insb
ja
lcall
mov
loopne
mov
pop
or
mov
loopne
int3
jmp
mov
and
xor
sub
mov
add
pop
pop
mov
test
mov
adc
rclb
ret
and
andb
jno
mov
aaa
je
pop
clc
fdivl
bound
sub
aas
sub
mov
adc
addb
and
mov
push
mov
std
popf
sbb
jbe
lea
add
cmp
pusha
lret
stos
sub
dec
sbb
mov
xchg
lret
and
xor
or
pusha
dec
adc
mov
lock
test
shlb
inc
out
jge
sub
add
mov
cmp
test
jae
jae
push
pop
aam
jo
rorb
addb
and
mov
or
xorb
in
aas
repnz
adc
add
pop
pop
xchg
andb
jnp
mov
and
inc
sarb
inc
pusha
jae
inc
shrb
arpl
cmp
insb
lret
mov
clc
in
mov
xchg
ss
and
mov
negl
addb
test
shl
iret
and
inc
mov
dec
add
mov
jecxz
add
adc
leave
push
iret
lret
ror
lret
mov
lahf
mov
xor
rolb
ret
xchg
addb
lret
out
rolb
outsl
into
lods
sub
mov
mov
push
inc
add
call
and
int3
pop
cmp
mov
stos
insb
sub
and
ss
popa
jl
mov
cmp
adc
xor
pop
out
inc
jno
out
jne
loopne
inc
xchg
out
loop
jb
or
inc
dec
insl
aaa
ljmp
stos
jnp
rcrl
aaa
add
pusha
mov
loopne
pop
out
and
push
inc
loopne
fisubl
sbb
cmp
fmul
push
aaa
jl
loopne
add
pusha
add
inc
out
fs
mov
subb
and
sbb
out
cmp
add
mov
or
lret
movsb
and
xchg
add
mov
mov
adc
nop
adc
mov
je
adc
and
sbb
add
lret
xchg
lret
pop
mov
cmpsl
insl
ds
iret
dec
push
inc
iret
push
clc
movsb
loopne
inc
pop
aad
sahf
pop
inc
and
mov
push
mov
mov
add
xor
pop
cmp
ljmp
adc
fistpl
adcl
mov
inc
mov
xchg
loopne
popa
and
add
dec
dec
pushf
imul
xlat
mov
cmpsl
xor
cli
jo
or
add
movsl
push
pusha
and
add
jl
and
cmp
add
cwtl
fistpl
pop
nop
dec
mov
jae
lods
inc
add
addb
fldl
mov
clc
loopne
push
andb
hlt
push
lds
mov
out
jae
fisubrl
and
add
add
push
ljmp
xor
pop
mul
ja
lock
or
sarb
dec
pushf
and
add
add
into
cwtl
daa
xor
and
mov
pusha
lock
jne
jno
xchg
mov
insb
test
xlat
sub
loopne
in
mov
pop
repnz
jle
mov
jbe
aam
mov
loopne
int3
mov
inc
enter
and
xor
outsb
imul
fprem
scas
add
fcmovnu
mov
inc
imul
or
add
int3
stc
adc
mov
dec
scas
xchg
mov
and
push
loop
repnz
es
inc
cmp
sbb
mov
sub
loopne
push
fstpt
shl
push
inc
inc
sub
sbb
out
insl
arpl
loopne
jnp
fsubrp
jg
push
add
int3
push
outsl
sbb
ret
and
push
mov
les
push
add
loope
fwait
jnp
stos
pusha
repz
lock
jnp
jae
lahf
fs
pusha
loopne
rol
cmp
xor
dec
out
and
popf
fstps
jae
enter
adc
loopne
addl
add
xor
mov
pop
push
pusha
mov
push
rolb
inc
pop
fcomi
xor
pusha
xchg
add
add
and
pusha
dec
data16
inc
add
les
je
stos
xchg
xor
inc
inc
je
mov
inc
sarb
adc
mov
jae
xchg
shll
xchg
mov
and
or
inc
mov
adcl
mov
clc
lods
and
rolb
adc
sbb
test
and
mov
imul
mov
add
and
enter
inc
mov
rclb
fidivrl
rcll
cmp
jns
mov
mov
ljmp
adc
loopne
lods
andb
mov
and
cmp
aaa
enter
mov
mov
pusha
inc
xchg
add
lods
shlb
mov
or
jo
jo
mov
add
cmp
pop
repz
rorb
xor
mov
mov
lock
outsb
xchg
inc
dec
pop
cmp
sub
dec
push
sarl
pandn
loope
inc
imul
mov
xlat
push
mov
jo
jmp
dec
gs
mov
push
xor
mov
out
jnp
mov
xchg
mov
add
sbb
and
mov
out
outsb
and
shrb
xor
sub
loopne
mov
mov
inc
aam
sbb
popf
dec
jle
out
push
jne
inc
pusha
out
add
mov
jl
jmp
push
mov
sbbb
mov
or
and
mov
inc
add
pusha
jbe
les
inc
shlb
out
fwait
add
loopne
inc
sti
cmp
dec
fcomip
cli
lahf
dec
pop
out
dec
insb
ret
pop
cmp
xor
fisttpll
and
movsl
dec
or
rolb
fs
cli
jo
cmp
inc
xlat
fdivrs
ret
rolb
lock
loopne
add
fld
cmp
test
pop
js
adc
add
lahf
outsb
mov
adc
loopne
ljmp
stos
inc
add
fistpll
mov
and
loopne
addb
jne
gs
mov
pop
fdivrl
rol
ret
loopne
lret
popa
cmp
add
fisttpl
pusha
pusha
dec
loope
cmp
ficomps
push
mov
mov
les
shl
jecxz
test
and
and
xchg
sub
in
adc
loopne
in
fs
mov
inc
or
testl
sbb
call
and
and
and
and
and
aas
test
loopne
jmp
or
xchg
das
inc
inc
sbb
or
and
shrl
pusha
orb
movsl
ficoml
imull
mov
pusha
scas
push
xchg
repnz
loop
dec
mov
add
dec
test
dec
out
mov
outsl
and
hlt
xchg
test
inc
jne
imull
dec
mov
jecxz
je
dec
xchg
mov
mov
stos
loopne
mov
push
fwait
sti
push
lret
lods
cwtl
ret
push
cli
negl
mov
addb
fs
sub
add
rolb
mov
outsb
push
inc
jecxz
pusha
orb
push
inc
add
or
pop
sbb
xchg
call
and
push
inc
adc
loopne
or
outsl
adc
pusha
add
es
inc
mov
push
jno
jne
fisttpl
cmc
fstpt
mov
add
pusha
inc
lock
mov
sbb
mov
sahf
jno
sarb
rolb
shrl
outsb
or
shlb
xor
jg
lret
push
dec
or
sarb
mov
adc
push
xchg
jle
sti
push
lds
add
or
add
sbb
loop
inc
mov
xor
inc
pusha
popf
mov
inc
mov
pop
jg
stc
and
shlb
andb
sbb
inc
insb
int
loopne
cmp
stos
inc
inc
dec
aas
mov
gs
push
repz
mov
pop
lods
ja
mov
lahf
fucomip
ret
cmc
mov
ret
fiadds
out
in
std
add
and
daa
nop
pop
ficoms
imul
arpl
shlb
adc
mov
mov
adc
ja
mov
and
mov
inc
negb
dec
outsb
outsb
jno
test
shlb
xchg
lods
andb
das
fbstp
and
andb
xchg
jo
jecxz
mov
xchg
xchg
pushf
cmp
dec
loopne
xor
mov
or
xor
pusha
fstpt
int
je
or
loopne
xchg
popf
adc
jb
push
outsl
or
addr16
add
inc
inc
mov
dec
scas
mov
add
or
pusha
jmp
add
pop
and
and
push
push
or
iret
inc
aas
lret
and
popa
adc
test
sub
shr
or
add
push
loopne
popa
rorl
adc
add
adc
push
mov
fs
movsl
sahf
lods
js
stc
cmpsb
and
sub
ss
ljmp
loopne
xchg
outsl
cwtl
addl
jecxz
lock
dec
lock
insb
xor
add
fwait
shlb
push
fistpll
dec
xor
add
aas
sub
push
nop
cmp
pop
test
add
pusha
add
shr
insl
addr16
pusha
pusha
dec
fdiv
cmpsl
lods
fstl
inc
mov
mov
dec
jo
sarb
nop
mov
inc
or
and
loopne
and
fadds
inc
sbb
test
push
pusha
loopne
mov
loopne
jmp
mov
cli
movsb
add
jae
mov
xchg
je
xor
mov
lahf
adc
das
shl
push
subl
and
mov
addb
mov
stc
imul
mov
popf
in
lds
movsl
mov
loopne
rolb
sub
idiv
inc
mov
loopne
lods
pusha
loopne
mov
add
and
and
imul
in
inc
fstpt
inc
inc
lock
inc
imul
pop
and
and
aaa
jae
jp
mov
loopne
pop
fcomps
rcrb
addb
xor
decb
adcl
push
dec
enter
mov
add
mov
inc
test
shlb
rolb
loopne
stc
in
outsl
mov
insb
cmp
inc
in
or
xorb
add
movsl
mov
testb
pusha
inc
push
aas
hlt
inc
rcrb
pop
pop
fmuls
pop
cld
dec
loope
sub
repnz
loopne
sbb
xchg
push
adc
mov
add
pushf
and
mov
or
sti
andb
sahf
sbb
inc
dec
add
or
loopne
push
movsb
and
roll
pop
xor
push
pop
cltd
scas
loopne
adc
sahf
stos
and
fwait
add
cmpb
mov
pop
or
add
or
loopne
mov
filds
test
into
call
shl
mov
and
rolb
rcll
fdivr
mov
lea
shl
pop
xchg
jo
out
mov
andb
adc
shlb
and
add
and
adc
scas
fwait
jmp
inc
sub
jbe
mov
or
pop
fucomp
dec
jl
test
mov
mov
sarb
xor
in
in
xchg
push
mov
loopne
sbb
pop
ret
mov
out
gs
aam
lret
pop
mov
push
pop
push
inc
loopne
std
nop
addr16
push
xor
loop
les
repz
test
mov
sahf
jecxz
jecxz
cmc
push
out
orl
jb
sub
andb
pop
inc
cs
pusha
push
movsb
loopne
fidivs
scas
pop
dec
dec
jg
test
and
arpl
mov
and
popf
push
xor
iret
and
sbb
jno
loope
xlat
jbe
bound
and
push
icebp
add
addb
addr16
les
and
lcall
pop
fcmovnbe
sti
sub
mov
and
cld
outsb
xchg
movb
and
cmp
and
jg
push
mov
andb
pusha
test
loopne
push
jmp
mulb
mov
mov
insb
jne
test
mov
rorb
pop
mov
mov
dec
mov
lret
push
pusha
mov
pop
and
mov
xchg
adc
imul
shlb
and
cmp
mov
mov
sahf
je
pop
hlt
cmp
icebp
rorl
and
push
push
push
inc
and
and
inc
rcll
lea
lret
mov
sbb
adc
cmpsl
cmc
out
xchg
ds
imul
stos
loopne
jne
mov
and
arpl
shll
cwtl
add
int3
cmp
inc
dec
movsl
or
mov
ffree
int3
mov
xchg
mov
mov
and
mov
pop
scas
inc
and
cmp
pop
mov
sub
sbb
stc
sbb
gs
mov
xor
sbb
popa
mov
and
pusha
nop
add
mov
pusha
inc
pop
call
and
loope
inc
mov
loopne
in
pcmpgtd
jge
scas
int
idiv
setne
mov
pop
mov
cmpb
lret
cmovae
push
pop
lahf
in
cmc
aaa
push
adc
or
and
enter
add
lcall
mov
cmpsb
rolb
xchg
dec
fadds
das
or
sub
add
sub
add
xor
pusha
adc
rclb
loopne
inc
loopne
xor
inc
scas
loopne
stos
xchg
out
dec
xchg
dec
mov
jo
test
cld
mov
adc
repnz
cli
push
lcall
incl
lret
inc
add
jnp
jb
xlat
xchg
pop
and
subb
add
test
mov
imul
stc
and
sub
jbe
out
add
cld
aam
and
andb
nop
loope
aad
pop
flds
adc
pop
or
mov
mov
or
xor
add
and
pusha
xchg
pop
xor
shlb
push
pop
sub
xorb
jg
mov
dec
add
std
cmp
cmp
mov
loop
sbb
add
sbb
fcmovbe
movsb
mov
lahf
fcmove
push
sub
add
jmp
icebp
clc
mov
loopne
fcmovne
orl
add
xor
aas
std
out
jnp
xor
and
and
cmpsb
addb
and
push
inc
dec
loope
pusha
mov
insb
fstpl
mov
js
loopne
ret
pop
xor
sarb
fs
xchg
add
jno
mov
inc
xchg
sub
lcall
jg
jmp
ffree
fdivl
je
cmp
adc
inc
adc
in
xchg
push
loopne
andb
mov
movl
imul
mov
sub
jae
cmpsl
sub
pop
xor
addb
andl
pop
push
test
and
rorb
lret
outsl
xchg
mov
cmp
rcl
jecxz
mov
dec
push
add
and
and
pop
pop
cli
add
movsb
and
pop
les
gs
mov
inc
inc
scas
add
dec
sbb
mov
sbb
shrb
rorl
loopne
decl
xlat
xor
pop
adc
adc
and
push
sub
pusha
movsb
rolb
outsb
xchg
xchg
aas
out
add
jno
or
and
testl
jg
pusha
inc
xchg
mov
ja
scas
jb
adc
add
mov
mov
out
movsl
pop
jl
cld
cmc
scas
pop
addb
addb
enter
xchg
insl
mov
pusha
rorb
cltd
ljmp
pop
fdivr
adc
inc
roll
inc
movsb
and
xchg
jns
cmp
mov
and
addb
jge
jno
mov
and
mov
add
push
rolb
xchg
xchg
xchg
mov
jecxz
mov
add
test
jecxz
and
sbb
adc
out
nop
xchg
and
mov
fbld
icebp
sahf
loopne
lods
popf
push
ds
jns
fldl
loopne
scas
rcr
xchg
jge
inc
lds
imul
pusha
and
mov
inc
inc
jnp
in
mov
push
aad
test
rorb
lods
mov
dec
or
inc
fldenv
andb
lea
mov
dec
je
inc
pusha
xchg
loopne
add
pusha
pop
rol
sti
xchg
pop
mov
xchg
scas
loopne
mov
fldl
std
xlat
testb
imul
xchg
nop
mov
loop
push
pop
mov
sub
dec
pop
mov
loop
sbb
and
push
inc
sbb
call
scas
loopne
jnp
in
lret
dec
loope
mov
add
loopne
stc
jb
pusha
and
icebp
cmp
in
pop
push
push
pmuludq
and
mov
sbbl
test
addr16
aaa
jne
or
insl
mov
iret
test
push
arpl
movsl
or
adc
fsub
inc
sti
xor
pusha
add
bnd
mov
mov
daa
sahf
pop
repz
xor
imul
subl
pusha
ret
call
sti
mov
inc
leave
in
movsb
pusha
mov
xchg
addr16
incb
mov
inc
repz
adc
mov
mov
push
push
and
and
inc
lock
inc
mov
fucom
cwtl
adc
and
and
inc
sub
icebp
push
lods
loopne
fistl
clc
out
mov
add
add
in
sbb
mov
loop
jecxz
andb
dec
outsl
das
ret
out
mov
adc
jl
int
ret
sbb
addb
int
stos
fstps
adc
mov
inc
je
or
pusha
out
test
sub
inc
push
shlb
clc
xchg
mov
inc
sarb
sub
jge
jecxz
rol
mov
dec
loope
jp
pusha
loopne
push
pop
cltd
jg
jne
xlat
rcll
out
sahf
fwait
and
call
adc
cmp
lods
addb
shlb
mov
lea
cmpsb
add
push
and
mov
rclb
pusha
arpl
pop
fwait
dec
sbb
loopne
inc
jp
cmpsl
push
je
jmp
ja
daa
insl
cmp
in
ss
in
xlat
lahf
sbb
mov
cltd
sbb
inc
cltd
adc
jecxz
lods
and
fsin
sub
dec
xor
pop
mov
mov
insl
sub
pusha
lahf
dec
mov
inc
sahf
xchg
push
push
shlb
sbb
in
loope
mov
addb
xchg
dec
cmp
shlb
and
lcall
mov
push
loopne
jae
push
sbb
in
dec
les
inc
movsl
lds
andb
lret
fcompl
inc
lcall
dec
cwtl
mov
and
rol
shr
pushf
and
movsl
sar
aaa
xchg
fsubs
pusha
and
pop
idivl
push
push
popa
jbe
nop
push
lret
xor
movb
rolb
dec
shll
addb
inc
aad
xlat
std
and
mov
inc
pop
xor
xor
add
jle
mov
out
or
jecxz
and
jmp
xor
and
popf
fadd
cmp
cs
mov
xchg
lret
and
lretw
push
movlps
pusha
dec
int
cmc
popf
or
xor
aaa
sbb
lea
and
aaa
leave
cmc
inc
les
xor
cmp
loopne
ror
insl
add
inc
pusha
xchg
lea
mov
cmpb
jne
push
or
and
orb
test
test
mov
adc
imul
sbb
dec
ss
and
add
in
test
aas
push
jecxz
and
in
popl
cmp
popf
into
sbb
loopne
addb
je
or
cli
mov
inc
inc
test
cmp
add
or
dec
loopne
mov
pop
bound
mov
lods
mov
pop
adc
or
xchg
fwait
lods
loopne
adc
out
fstl
xor
inc
add
pusha
repnz
push
repnz
xchg
jbe
push
addb
inc
movsb
addb
inc
add
loopne
test
pusha
add
fdivrs
xor
cmc
push
jg
mov
lcall
and
test
xchg
and
or
leave
pushf
daa
out
cltd
mov
addr16
daa
fistpll
das
test
outsb
loop
pop
addl
leave
ss
ret
shrb
and
sub
int
add
loopne
xchg
inc
mov
sarb
push
adc
arpl
sbb
pop
mov
mov
sbb
in
sbbl
add
loopne
lods
rol
pop
cmp
xchg
cmp
fs
add
cmc
fildll
sub
cld
jne
out
lea
push
mov
inc
push
adc
mov
mov
push
pusha
or
sbb
inc
mov
rolb
mov
clc
mov
mov
jge
in
or
add
ret
xchg
xchg
or
mov
cmc
sub
insb
adc
in
loop
pop
lcall
andb
lret
add
pop
mov
ret
add
pop
adc
stos
pusha
and
int
std
outsl
mov
dec
cmp
dec
inc
in
pop
scas
xchg
xor
insl
pushf
xchg
inc
stos
xchg
add
push
bnd
push
in
in
inc
aam
xchg
xor
add
hlt
es
add
adc
mov
fisubs
adc
or
mov
icebp
xchg
test
add
add
test
mov
lods
loopne
loopne
out
lods
loopne
jp
add
pop
test
shlb
mov
xchg
leave
mov
stc
xchg
mov
fnstsw
ss
add
xchg
jmp
jmp
push
fcmovnu
stos
mov
out
addb
inc
test
ljmp
sub
loopne
cmpsl
sub
pusha
xchg
andb
jle
push
jp
loop
rolb
push
lods
rolb
sbb
cmp
add
add
fdivs
mov
lahf
adc
test
inc
out
lcall
rcrb
and
inc
scas
int
lds
lahf
push
add
xchg
mov
insl
fisubl
inc
lret
pop
inc
loope
xchg
mov
rolb
rclb
add
and
pusha
inc
lret
xchg
push
andb
andb
in
loopne
sub
push
pop
add
sbb
sub
cmp
cmp
mov
movsb
and
jnp
mov
js
add
andb
pusha
and
pusha
loopne
fistpl
cwtl
jle
xchg
out
jmp
inc
and
dec
push
sahf
xchg
js
pop
pop
negb
inc
push
push
leave
or
sahf
mov
pop
mov
insl
inc
add
and
xor
dec
xor
adc
inc
mov
pusha
mov
je
push
cmp
lock
shlb
idivb
data16
mov
sahf
call
std
fldz
or
mov
mov
les
or
and
out
xchg
push
mov
push
push
loopne
sub
ror
sbb
sahf
outsl
add
lret
iret
push
pop
add
shlb
xor
mov
int
repnz
jp
xor
inc
std
fildl
pop
pusha
loop
ficompl
mov
mov
faddp
push
vpaddusb
mov
hlt
fscale
mov
mov
fwait
adc
pop
jne
loopne
sti
lea
inc
rolb
push
sub
sbbb
std
aas
push
xor
cmp
pusha
shl
iret
jne
cmp
fimull
mov
inc
test
mov
mov
xor
push
mov
inc
loopne
mov
and
repnz
or
or
xor
shlb
jp
jl
cmpsl
mov
cmc
jl
