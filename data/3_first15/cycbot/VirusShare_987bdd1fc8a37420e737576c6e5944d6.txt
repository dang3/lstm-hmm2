add
add
cmc
sbb
sbb
sbb
sbb
sbb
pfcmpge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
nop
nop
nop
nop
nop
nop
nop
nop
ljmp
ljmp
ljmp
ljmp
cltd
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
xlat
xlat
xlat
inc
je
je
je
je
je
je
je
je
je
je
je
je
rcl
rcl
rcl
rcl
rcl
rcl
rcl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
addb
addb
repz
repz
rcl
rcll
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
test
test
test
test
out
out
out
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
das
das
das
das
das
das
das
das
das
addb
andb
bound
bound
bound
bound
bound
bound
bound
bound
pushl
ja
rol
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
bound
inc
inc
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shlb
mov
mov
mov
mov
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
out
out
out
fs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
aam
aam
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
scas
scas
scas
ljmp
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
stc
stc
stc
in
in
in
in
in
in
in
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
bswap
iret
iret
iret
iret
iret
iret
iret
iret
iret
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
imul
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
nop
nop
nop
nop
nop
nop
nop
jl
jl
jl
jl
nop
nop
nop
nop
nop
nop
nop
jl
jl
jl
jl
jl
jl
jl
loopne
loopne
loopne
loopne
loopne
mov
mov
nop
nop
nop
nop
nop
nop
nop
cmc
cmc
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
das
das
das
das
das
das
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shl
out
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
cmp
cmp
cmp
cmp
cmp
cmp
or
or
or
or
or
int
int
int
int
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
or
or
or
or
or
or
or
or
or
or
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
jns
jns
fcmovnu
fcmovne
into
into
into
into
mov
or
or
or
or
or
or
or
or
or
or
or
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
jbe
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
sub
sub
sub
sub
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
ficoml
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
ds
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
and
and
and
and
and
nop
nop
nop
nop
gs
gs
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fistl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
or
or
or
adc
rcl
rcl
rcl
rcl
shl
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
xor
nop
nop
nop
nop
nop
nop
nop
nop
lret
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
add
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
jbe
jbe
or
or
or
or
or
or
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
addb
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cmp
cmp
cmp
cmp
cmp
cmp
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
loop
loop
loop
loop
loop
loop
loop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jne
jne
jne
jne
jne
jne
jne
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
xchg
xchg
xchg
xchg
xchg
xchg
xchg
imul
imul
push
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
mov
mov
mov
mov
mov
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
jnp
jnp
jnp
jnp
jnp
jnp
jnp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
push
push
push
push
push
push
push
push
push
lods
lods
lods
adc
adc
adc
mov
mov
mov
mov
mov
mov
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
nop
nop
nop
nop
nop
nop
nop
call
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
inc
inc
inc
inc
inc
inc
inc
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jg
jg
jg
jg
jg
enter
nop
nop
nop
lea
lea
lea
lea
lea
lea
lea
sbb
sbb
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
jle
jle
jle
jle
jle
jle
jle
mov
mov
nop
nop
nop
nop
nop
nop
mov
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
aaa
aaa
jle
jle
jle
jle
nop
nop
nop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jnp
jnp
jnp
jnp
jnp
jnp
nop
int
int
int
int
int
int
int
int
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
mov
mov
mov
repnz
repnz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
rol
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shll
and
and
and
and
and
and
and
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
inc
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
mov
mov
mov
mov
pop
pop
pop
outsl
add
in
in
in
in
in
in
in
in
in
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
je
je
je
je
je
je
sbb
mov
and
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
hlt
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
cli
cli
cli
cli
cli
cli
cli
cli
cli
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
nop
nop
nop
nop
nop
nop
nop
nop
nop
lock
nop
nop
nop
sub
nop
nop
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aam
aam
aam
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cmpsl
cmpsl
cmpsl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
sub
sub
sub
sub
sub
add
es
stc
stc
mov
mov
mov
mov
mov
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
bound
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
jg
jg
xorl
int
int
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
push
push
add
nop
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
add
add
add
add
add
add
add
nop
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
sub
sub
sub
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ljmp
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
clc
clc
clc
clc
clc
clc
clc
clc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jo
jo
jo
jo
jo
jo
jo
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
cmc
cmc
cmc
cmc
cmc
cmc
xchg
xchg
xchg
xchg
xchg
jg
jg
jg
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lcall
repnz
repnz
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
jge
jge
jge
jge
in
in
in
in
in
test
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
mov
and
and
and
and
and
and
and
and
and
and
and
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
addl
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sub
sub
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
nop
nop
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
nop
fs
fs
fs
fs
push
push
push
push
push
push
push
push
push
xchg
push
push
push
rcl
rcl
rcl
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
lea
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
push
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
inc
inc
inc
or
or
or
or
or
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
mov
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jae
jae
jae
jae
gs
gs
mov
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
mov
addb
addb
adcb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
fcomp
fcomp
fcomp
fcomp
fcomp
aad
aad
aad
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
sahf
sahf
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
sbb
push
push
push
push
push
push
cs
fmul
lret
lret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
or
or
or
or
or
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcoms
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
dec
dec
dec
daa
daa
daa
daa
nop
nop
nop
nop
nop
test
test
es
es
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ds
ds
popa
popa
popa
popa
popa
cmpsl
cmpsl
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
lret
sbb
sbb
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
out
out
out
out
out
out
out
out
nop
nop
nop
nop
bound
bound
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aam
aam
aam
addb
addb
addb
addb
addb
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
cmp
icebp
and
push
into
xor
add
add
add
sbbb
sbb
jecxz
iret
cmp
ffreep
jno
sub
cld
inc
add
sbb
and
movsb
push
daa
xchg
and
push
mov
call
imul
sbb
pop
stos
fistps
inc
add
add
xor
and
cmp
adc
ljmp
fiadds
add
adc
mov
in
insl
lea
mov
pop
add
mov
mov
add
clc
push
add
push
add
out
xchg
xor
mov
add
add
mov
add
add
add
sub
inc
sub
imul
addr16
add
cld
lcall
add
imul
aas
roll
cmp
iret
loope
div
or
dec
add
or
xchg
lret
fldt
dec
add
popa
cmp
cmp
xor
sub
enter
lods
movsb
cmp
push
ret
pop
imul
dec
mov
lahf
mov
push
jae
add
xchg
mov
rclb
add
mov
insb
add
jecxz
inc
and
add
rcrl
pop
add
add
add
push
mov
mov
inc
lahf
repnz
pop
add
stos
js
sub
jmp
addr16
add
add
add
pop
add
adc
movsl
orl
mov
add
pop
add
inc
add
pop
add
and
into
or
mov
inc
repz
stos
jl
pop
repnz
xlat
sbb
add
scas
add
fsubs
scas
adc
xchg
xor
test
add
mov
mov
frstor
cmpsb
push
add
mov
push
stc
test
add
rcr
or
pushf
into
sbb
sub
sbb
add
lahf
push
add
add
adc
add
sub
sbb
inc
add
cmp
out
out
ja
add
repnz
mov
add
add
lods
adc
fdivs
repz
jns
shrl
int
add
mov
add
or
popf
cmp
jae
add
and
mov
add
and
shrl
outsb
add
mov
test
add
add
jecxz
add
add
sub
cmp
jmp
xchg
mov
cmpsl
psubusw
lahf
mov
sbb
cmp
rcrl
add
jne
jecxz
insb
add
hlt
test
int3
hlt
and
aam
push
dec
jb
mov
rclb
xchg
inc
add
mov
add
imul
roll
lods
into
pushf
adc
sbb
sub
add
and
cld
adc
test
add
lods
mov
add
je
sub
push
mov
nop
xchg
and
fldl
pop
add
shrl
inc
add
add
iret
into
sbbb
cli
movsb
cltd
ja
add
sbb
movsb
lods
fisttpll
pop
int
sarl
add
pop
or
xchg
pop
add
mov
adc
idivl
ret
invd
add
add
dec
add
pusha
add
add
add
aad
mov
add
in
sbb
add
mov
leave
fwait
and
xor
call
pop
add
jns
xor
push
add
inc
je
lods
decb
add
mov
insl
movsl
or
push
add
push
add
dec
loope
add
or
add
mov
add
and
add
cmp
xor
cld
push
loope
jecxz
jecxz
sbb
insl
int3
pop
shll
stos
xchg
sahf
sub
cmpsl
test
jl
js
insb
add
jp
add
imul
cmp
bound
inc
push
add
fnstcw
add
sbb
mov
add
aas
rcll
cs
mov
add
add
mov
xchg
divb
popa
mov
add
ljmp
xchg
sub
add
jo
mov
dec
mov
pushf
fbld
add
into
add
das
loop
add
sahf
xchg
cmp
jle
je
xchg
mov
sub
decb
fs
mov
scas
fcompl
add
add
pop
add
inc
pop
inc
add
arpl
add
jg
call
cmp
in
and
add
dec
test
jo
subb
add
push
fcmovnbe
jg
sub
add
add
popa
push
add
jecxz
fmuls
add
add
xor
jmp
mov
insl
out
jns
pop
add
in
xor
mov
dec
cmp
push
add
add
push
add
add
add
dec
add
fdivl
sbb
shll
mov
insl
loope
add
push
add
mov
add
dec
add
mov
jno
shll
scas
cltd
xor
adcl
ja
pop
add
bound
mov
add
notb
and
std
mov
or
mov
sahf
cmpsb
jl
into
scas
and
xchg
push
add
jmp
add
sub
leave
pop
mov
add
add
mov
mov
cmp
fsubl
add
dec
clc
dec
add
cs
test
jecxz
add
xor
xchg
xor
sbb
test
add
pop
add
add
cltd
mov
clc
data16
dec
add
mov
mov
add
mov
push
jns
ja
jb
sti
jns
add
add
xchg
std
mov
mov
les
outsb
add
push
add
stc
cmp
cltd
insl
add
fdivs
push
sbb
in
scas
sahf
repnz
testb
xor
mov
data16
dec
in
dec
add
inc
and
test
dec
add
and
push
cmp
push
add
add
add
xchg
inc
add
frndint
add
sbb
jb
lret
cmpsl
mov
jp
adcb
in
add
daa
dec
and
lahf
shlb
add
adc
add
adc
push
add
push
add
fcomps
mov
fmuls
add
rcll
mov
add
or
repnz
imulb
cmp
push
jo
lea
add
testb
scas
aam
fdivrl
jl
or
add
add
pop
add
dec
add
xor
dec
insb
add
dec
add
xorb
shlb
pop
xor
jb
xchg
push
add
sub
fidivrl
add
les
add
or
add
sub
iret
rorl
dec
add
add
mov
add
add
add
lahf
dec
sbb
xchg
cltd
add
mov
or
aas
into
js
outsb
add
adc
add
add
jle
mov
addr16
add
add
jmp
xchg
add
add
shl
ret
sbb
int3
inc
mov
cmp
xchg
jb
mov
bound
das
xor
fcoms
inc
add
and
sbb
shlb
popa
fists
out
int
add
add
inc
lea
pop
add
sub
rcl
in
cmp
add
movsb
add
xchg
js
sub
mov
add
mov
mov
mov
jg
and
sbb
cmp
adc
sbb
out
add
lods
clc
mov
xor
push
sti
arpl
fidivrl
add
ljmp
xchg
jmp
scas
jo
imul
js
jae
mov
add
je
sti
scas
idivl
pusha
add
jne
clc
mov
add
mov
and
aam
icebp
mov
sub
inc
add
sti
push
push
add
arpl
or
lcall
xchg
jae
mov
xorl
sub
inc
cmp
lcall
pop
add
jnp
in
push
xor
das
cli
gs
push
add
or
sti
dec
add
sub
push
lock
xlat
pop
sub
pop
xchg
xchg
dec
sbbb
mov
add
call
and
add
xor
cld
push
add
add
imul
add
aad
add
test
popa
movsb
jl
out
cwtl
fbld
sbbb
add
jecxz
xchg
ljmp
sarb
add
and
in
push
test
add
xor
je
cmp
incl
ret
or
sti
push
test
add
nop
iret
cmp
icebp
xlat
lcall
jge
es
mov
aaa
sub
dec
lea
rolb
jge
xor
inc
add
pop
int3
jno
add
xor
add
add
or
popf
sbbb
pop
cld
jb
scas
arpl
inc
clc
mov
pop
stos
inc
add
fdivr
xor
out
aas
inc
add
je
adc
je
xchg
xchg
notb
mov
add
scas
inc
lret
mov
add
add
dec
add
je
dec
shlb
stc
aam
xor
mov
add
pop
add
insb
add
add
xchg
cmp
jecxz
xor
cmp
js
aaa
mov
add
stos
mov
add
xlat
aaa
icebp
data16
mov
add
inc
mov
xor
add
add
xor
fmul
jnp
andb
xor
stos
mov
add
add
data16
adc
sub
add
or
sbb
cmp
jne
fcmovnu
lods
mov
xor
aad
add
stc
xor
rcrl
add
add
or
add
add
lret
mov
add
repnz
fmuls
add
mov
add
inc
cmp
and
add
mov
imul
add
jmp
add
add
mov
mov
push
aad
int3
ljmp
add
loopne
inc
ret
sahf
fisttpl
hlt
subb
xor
pop
add
aas
and
add
testb
rcl
adc
add
or
movb
adcb
inc
inc
add
hlt
rcrl
std
add
leave
and
bound
es
push
push
and
jo
out
add
add
sbb
sub
sti
mov
push
add
and
add
sahf
dec
add
push
lods
add
inc
add
in
imul
adc
mov
add
add
mov
push
add
pop
add
jmp
imulb
add
push
xchg
leave
mov
testb
add
inc
repz
sub
out
add
aam
add
add
bound
push
das
cmpsl
lret
mov
mov
and
das
jne
add
adc
and
inc
push
arpl
add
xchg
push
add
cmc
mov
inc
bnd
or
or
fisubrs
pop
add
xchg
dec
add
jge
add
push
enter
add
test
add
negl
imul
add
aaa
mulps
jecxz
push
dec
mov
loope
lds
add
fdivr
push
add
add
xchg
cmp
add
sti
xchg
fldenv
add
add
add
jbe
ljmp
mov
jl
inc
xor
pop
push
xor
dec
popa
dec
add
fidivs
das
popa
sbb
mov
cmp
adc
sub
loop
cmpl
hlt
bound
dec
add
add
add
inc
add
mov
add
sbb
sbb
xchg
and
add
pop
and
cli
dec
add
pop
mov
aaa
push
add
dec
add
adc
or
iret
pushf
mov
lahf
jmp
add
rol
mov
mov
insb
add
popa
ljmp
jmp
mov
add
clc
mov
add
add
addr16
push
add
shl
loop
stos
jecxz
pop
add
leave
dec
add
mov
negb
sub
cmp
or
cmp
add
mov
add
jno
pop
fisubrl
insb
add
shll
jmp
repnz
mov
add
in
stc
test
add
push
add
pop
add
ljmp
sub
clc
pop
add
lds
pop
inc
add
add
xor
jl
ror
clc
jg
pop
pushf
jle
mov
add
cmp
mov
lret
outsb
add
adc
xchg
pusha
add
xorb
add
test
inc
add
lds
pop
add
mov
add
outsb
add
pop
cli
inc
add
xlat
jns
push
add
sbb
cmp
fcoml
lret
rorl
sbb
jbe
test
mov
lock
aam
and
xchg
pop
add
sub
sbb
add
test
add
jecxz
push
add
popf
adc
or
add
add
das
mov
pushf
mov
mov
dec
add
fstps
or
xchg
ret
jo
mov
xor
rclb
jne
outsl
je
jecxz
add
scas
iret
and
clc
xchg
mov
sub
jno
test
xchg
aad
mov
add
add
lret
call
add
add
cmpsl
xchg
jmp
daa
dec
add
hlt
dec
sbb
clc
sbb
sub
mov
xchg
add
add
add
add
and
adc
cli
cmp
adc
stc
test
fucomp
adcl
movsb
mov
cmpl
inc
mov
add
and
inc
arpl
aam
and
xchg
aam
sti
mov
add
add
add
repnz
mov
add
add
test
add
adc
xchg
lods
mov
cmp
add
mov
sahf
cmc
adc
add
sub
pop
xchg
and
add
add
jns
add
or
in
add
add
cmpsl
lock
jp
fbld
add
pop
sbb
add
movsl
lret
js
pop
imull
xchg
ficoml
add
sbb
add
cmp
idivb
mov
push
add
lods
xorb
repz
mov
pushf
data16
add
roll
add
int
add
push
add
mov
stc
jecxz
jle
xor
add
cmp
push
orl
jno
mov
cmpsb
ret
sub
jae
mov
add
loop
add
dec
test
scas
jo
push
add
add
cmp
cmpsb
lds
add
xor
inc
pop
add
xor
movsb
jbe
xlat
push
add
clc
stos
int
add
test
mov
ret
lds
test
cmc
sbb
lock
leave
sub
out
add
and
add
inc
add
cmp
and
scas
push
push
add
or
pop
and
adc
jae
push
add
push
add
ficoml
sbb
add
add
pushf
ds
push
cmp
pushf
add
inc
mov
mov
mov
inc
add
imulb
mov
add
add
add
sbb
add
jmp
mov
or
xor
ret
cmp
lahf
mov
pop
add
in
enter
cmp
outsl
push
add
sub
push
add
or
inc
data16
add
add
add
jo
nop
jns
pushf
out
sti
jl
hlt
scas
sbb
mov
add
decl
insl
add
add
idivb
into
xchg
mov
add
add
add
pop
add
inc
add
xrelease
add
lock
add
clc
push
add
push
add
sub
dec
adc
imul
cltd
adc
in
mov
or
add
dec
add
add
bound
add
add
mov
add
pop
pop
add
aad
inc
iret
pop
push
add
imul
adcl
sub
outsl
mov
mov
mul
mov
popa
aad
add
add
cmp
mov
pusha
add
data16
add
cli
jmp
xchg
pop
jecxz
ljmp
and
xchg
adc
xchg
mov
or
in
mov
jmp
mov
dec
xor
add
add
sub
testb
icebp
cmp
push
cli
mov
xchg
push
fnstcw
cmpsb
push
xlat
inc
mov
add
add
ffree
and
or
ficoms
push
add
xchg
push
add
add
xorb
ror
lahf
mov
mov
add
fidivl
fidivl
ficomps
jmp
addr16
sbb
aaa
repz
mov
in
or
xor
dec
sbb
mov
adc
push
add
pop
push
add
pop
push
add
pop
add
adc
and
push
add
add
cli
dec
mov
sub
mov
cmc
xchg
add
add
mov
movsl
loop
insl
sub
jmp
ret
jecxz
sub
test
and
mov
in
pop
add
nop
pusha
add
test
add
add
xor
and
aam
cli
mov
jb
popa
dec
cmc
mov
or
or
push
add
lret
add
shrl
ss
pop
add
mov
mov
add
aaa
cmp
mov
inc
add
in
add
fs
in
adc
loope
inc
sbb
loope
bndldx
lea
sub
add
int
lock
add
js
das
dec
popa
fadds
cmp
outsl
aas
addb
jmp
mov
scas
sub
inc
add
das
push
add
addl
rorb
xchg
pop
sub
mov
add
fs
push
mov
inc
cs
aad
add
and
push
add
dec
add
pop
add
add
add
sti
add
lds
lods
pop
ret
flds
mov
add
aas
pop
add
mov
add
scas
mov
add
stos
popa
add
ret
pusha
add
or
aad
add
mov
mov
mov
or
add
jl
not
rorl
sahf
dec
sub
cli
stos
push
sub
xor
add
add
add
out
xor
or
xchg
pop
add
sahf
popf
cmpsb
andb
pop
push
cmc
xchg
stos
dec
loope
lods
inc
pusha
add
mov
cmp
imul
adc
ret
xchg
xchg
icebp
mov
add
add
test
adcl
pop
jp
in
mov
add
add
sbb
add
xchg
adc
fisubrl
add
lcall
cmc
stos
adc
mov
or
jbe
in
out
dec
testl
add
add
add
inc
add
mov
in
sbb
add
mov
lods
sub
add
loope
add
cmp
xchg
add
add
inc
add
fadds
add
sbb
add
push
add
sub
push
add
fucomi
lret
sbb
sti
fsubrp
lods
jb
xchg
or
lcall
xchg
mov
add
movsl
fwait
sbb
xor
ljmp
not
shl
popf
cmp
mov
add
add
jb
pop
add
pop
cmp
ffreep
sub
data16
cmp
add
scas
xchg
add
inc
jg
add
pusha
add
dec
add
mov
add
add
pop
add
dec
add
sub
adc
jbe
fwait
pushl
int
jbe
xchg
sub
test
cld
imull
add
add
pop
xchg
sbb
inc
add
aaa
mov
xchg
jl
push
add
add
repnz
mov
dec
add
fcoml
xchg
push
add
rclb
bound
andl
jno
popf
mov
out
pop
dec
add
or
in
outsl
cwtl
subl
cs
lcall
and
jl
cmp
inc
mov
mov
test
push
jns
fsubs
pop
fistpl
into
gs
stc
sub
mov
cmp
fcmovnbe
das
jne
add
add
push
add
les
inc
aam
sbb
add
add
insl
xlat
mov
test
clc
mov
adc
hlt
mov
add
or
add
pop
add
push
add
sbb
test
nop
and
fldl
add
xor
push
add
add
add
sub
clc
dec
add
add
sub
and
jmp
inc
jp
insl
adc
fsubrs
sub
lret
ja
mov
add
add
mov
or
add
stc
mov
add
add
mov
cmp
test
pushf
mov
enter
push
xchg
xchg
add
add
push
add
jg
sbb
int
add
call
inc
add
pmuludq
adc
stc
dec
add
int3
int
pop
mov
in
mov
push
scas
decl
fsubrl
mov
out
push
xchg
fwait
popf
inc
add
add
add
lret
frstor
shrb
ret
div
sbb
or
fstpl
dec
dec
idivl
add
add
add
xor
and
sub
dec
jne
cmp
xchg
insl
in
daa
inc
add
test
add
pop
add
mov
cmp
add
or
mov
out
loope
push
add
xor
das
aaa
js
mov
adc
add
aam
add
add
adc
add
xchg
pop
pop
add
add
ss
fiaddl
mov
mov
incb
pop
add
pop
test
xchg
push
add
pop
mov
add
xchg
call
push
std
pop
dec
cld
push
mov
mov
sub
movl
lea
push
clc
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jne
and
iret
or
bound
into
test
add
add
int3
sbb
aad
add
push
add
shrb
xor
inc
or
stc
incb
sbb
jle
roll
out
pop
add
mov
jns
nop
icebp
pop
scas
repnz
add
adc
add
test
jno
jb
add
pop
je
stos
xchg
cmp
scas
incl
add
add
xor
dec
clc
sti
jo
jl
sahf
xchg
out
lds
add
imul
aad
outsb
add
lods
jp
int
and
ficoms
rorl
mov
jmp
cmp
enter
add
and
and
xor
jbe
ffree
nop
shlb
lods
fldenv
add
add
pop
add
dec
add
add
sbb
out
ret
cwtl
mov
repnz
jle
push
and
movl
mov
add
add
mov
add
movsl
inc
add
jae
pop
inc
movsl
insl
mov
pushf
mov
xchg
sbb
sbb
imul
test
xorb
add
sarl
add
mov
dec
je
pop
insb
add
mov
add
adc
mov
xchg
insb
add
add
insl
lea
add
mov
data16
jne
jno
xorl
mov
adc
ljmp
add
pusha
add
enter
add
popf
leave
mov
mov
nop
push
inc
or
mov
mov
jge
ljmp
ds
or
cwtl
addl
icebp
nop
add
pop
or
sbb
in
add
xor
pop
shr
test
testl
hlt
out
push
add
push
int3
jge
or
push
add
add
and
popf
data16
add
inc
add
add
in
push
pop
pop
inc
sbb
stos
pop
add
lds
add
push
add
dec
add
add
add
idiv
add
xorl
inc
add
ja
add
add
mov
mov
xchg
dec
add
aas
pushf
insl
mov
add
sar
les
ja
push
add
push
sub
stos
or
add
push
add
rcl
push
add
insb
add
hlt
and
nop
or
stos
xchg
adc
stc
mov
add
mov
in
in
adc
xchg
push
loop
xchg
jp
gs
sub
scas
jle
sbb
mov
mov
add
add
ret
mov
add
add
mov
and
imul
or
xchg
jbe
add
add
add
shlb
movsb
hlt
pusha
add
jbe
mov
mov
add
icebp
dec
add
add
aad
andl
add
mov
add
adc
data16
adc
sbb
xchg
xchg
arpl
ljmp
mov
cmp
inc
fadd
in
mov
fsubrl
aad
sub
mov
cmpsb
mov
add
mov
loop
add
cmc
subl
jne
add
add
fcmovnb
hlt
xor
cld
mov
addr16
lahf
imul
mov
add
std
daa
lahf
sar
and
jbe
mov
sahf
jns
test
jp
xchg
mov
xchg
adc
popa
lock
iret
ret
add
add
add
push
adc
jbe
push
xchg
xor
cmpb
cmp
inc
add
pop
add
add
add
decl
add
pop
add
add
jg
imul
inc
ret
mov
aam
out
cmc
scas
rep
add
add
push
add
je
push
add
add
fisttpll
iret
push
add
data16
sub
shlb
mov
jno
xchg
adc
mov
add
add
adc
jo
div
push
cli
in
xor
push
add
fists
outsb
add
dec
add
push
add
add
addb
mov
sub
cmc
jl
lret
add
and
mov
add
jnp
add
xor
mov
enter
pop
test
add
pop
add
xchg
cmp
adc
add
movl
sti
lock
cmp
cmp
ljmp
push
add
add
add
repz
add
clc
push
add
movsl
jle
jnp
add
add
rclb
add
add
mov
lcall
add
pop
add
dec
cmpsb
jle
fldt
add
dec
add
mov
jbe
mov
not
out
fdivs
mov
add
xorb
jae
sub
add
pop
add
fwait
push
add
scas
jmp
adc
outsb
add
push
add
jb
pop
js
inc
add
daa
fcom
sahf
or
pushf
sbb
fsubrl
dec
add
stos
pop
jl
push
mov
add
add
insb
add
sbb
xchg
rorb
inc
imul
vsqrtps
fucomi
xchg
lret
mov
mov
add
std
xchg
out
mov
dec
push
add
jmp
inc
add
cld
mov
ljmp
scas
lret
sub
fsubr
insb
add
sbb
fwait
stc
out
fdivrs
cwtl
sti
decb
add
add
sub
js
in
jnp
aad
sti
int
pop
loop
jno
sti
add
add
sub
in
or
mov
mov
push
scas
lcall
add
add
mov
xchg
pop
mov
insl
xor
xor
in
lods
and
add
fldcw
mov
inc
add
imul
loope
in
shll
add
push
add
and
lods
sub
imul
add
repnz
push
add
xor
cmp
fdivs
add
mov
xchg
jb
shll
inc
add
pop
mov
add
inc
add
cmc
sbb
sub
jae
add
push
jecxz
jmp
jl
xchg
in
add
xchg
les
add
repz
add
pop
lods
and
call
sbb
ss
sub
outsl
xlat
movsb
in
repz
fildl
pop
add
fdivr
cwtl
and
call
repz
in
out
adc
mov
add
aaa
das
or
add
add
jp
push
add
xchg
sbb
add
add
pop
mov
mov
add
enter
add
add
jmp
mov
inc
add
add
shr
shl
jne
add
mov
add
int3
push
pop
mov
add
add
xor
aaa
or
int
inc
sti
pop
add
das
jg
cmp
add
pop
outsb
add
add
add
jno
dec
inc
aas
mov
add
sbb
cmpsb
mov
pop
mov
sub
je
pop
add
iret
pop
add
cmp
fcomp
les
mov
stos
push
add
mov
mov
dec
fnstcw
sti
dec
cmp
mov
dec
add
stos
aad
xor
std
mov
mov
pop
add
fwait
stos
mov
icebp
outsb
add
aad
add
pushf
mov
test
add
ficomps
lods
leave
pop
add
test
add
cmp
ja
js
push
rcll
add
cmp
data16
adc
in
or
mov
add
add
add
into
push
jbe
add
sub
add
leave
and
pop
add
enter
xchg
pushf
jae
in
dec
add
scas
adc
int3
pop
jp
ja
add
push
aaa
push
add
lock
je
mov
push
add
daa
inc
add
sahf
jge
add
dec
add
add
movsl
push
add
shrb
mov
add
pop
add
cli
out
or
cmp
jecxz
mov
pop
xchg
in
jge
add
sarb
push
out
inc
imul
fwait
cmp
repz
mov
jp
cltd
jne
fdivl
jbe
jns
testb
add
neg
jae
ret
pop
add
dec
add
jb
xor
or
xchg
inc
add
jbe
push
data16
cmp
push
add
mov
or
movsb
dec
add
add
outsb
add
add
leave
or
or
aas
nop
lahf
inc
add
add
jge
cmp
dec
aam
add
fists
or
jae
les
imul
mov
add
sarb
xor
push
add
add
sbb
sbb
jno
add
test
mov
mov
clc
mov
add
test
in
cmpb
add
add
cmpsb
pop
rcrb
mov
sub
add
lods
subb
add
add
xchg
imul
add
adc
ljmp
pop
add
dec
add
add
data16
mov
out
push
into
mov
jg
add
sbb
pushl
sub
mov
rorb
in
and
gs
add
inc
pop
sub
add
sub
and
push
add
add
xor
sarb
add
test
sub
or
cld
pop
int
xor
shl
pushf
jbe
mov
mov
push
add
pop
jns
mov
insl
pop
add
cs
mov
push
add
xchg
mov
add
sbb
and
jecxz
add
rol
sbb
jecxz
cs
push
mov
add
inc
aad
sub
cli
testb
fsts
enter
add
add
adc
or
sub
xchg
sahf
popa
add
scas
mov
inc
add
rolb
push
add
add
cltd
add
push
add
add
loopne
dec
arpl
pushf
and
mov
add
inc
movsl
pop
cmp
add
call
pop
add
cmp
negl
mov
xorl
jb
ja
add
dec
add
aad
mov
push
xor
sub
ret
and
push
stos
xor
cmc
add
xor
pop
pushf
stc
pop
add
mov
and
stc
pop
add
add
fidivrs
add
jno
mov
push
xchg
jmp
lcall
add
pop
cmp
je
push
xor
mov
lods
push
subl
out
and
enter
xchg
or
cmp
mov
iret
push
add
outsl
outsl
outsl
loope
aam
inc
add
int3
push
mov
arpl
das
imul
mov
gs
adc
insb
add
dec
xchg
jle
mov
add
add
push
add
sub
cltd
call
or
in
mov
add
add
add
fstpl
add
or
mov
mov
xor
je
push
cld
repz
or
in
add
push
add
mov
inc
add
mov
xor
jecxz
add
test
dec
add
xchg
pushf
inc
scas
sub
lea
rolb
adc
cmp
xchg
xlat
int3
xchg
and
mov
jle
cmc
sub
push
aam
dec
notb
fisttpll
add
add
mov
mov
add
add
add
push
pop
bound
imul
or
sbb
mov
les
xchg
sbb
push
push
sub
push
add
cmp
dec
push
add
lods
jmp
iret
jns
fs
jl
xor
xor
psubusb
sub
enter
add
mov
push
outsb
add
out
stos
dec
add
add
out
repnz
imul
xchg
adc
and
andb
pop
dec
dec
popf
aad
add
sub
xorl
adc
mov
loopne
push
add
add
movsb
xor
xlat
cmpsb
xor
les
fimull
add
add
jmp
add
sub
add
add
nop
ja
scas
cmp
xchg
jnp
aaa
or
mov
add
add
add
aam
imul
dec
add
add
addb
cmp
in
ret
outsb
add
sub
rcr
xchg
add
mov
test
sti
lret
out
lods
push
add
or
addr16
add
insb
add
sbb
adc
add
add
add
dec
popa
divl
sahf
adc
push
add
pop
fwait
xchg
pop
add
sbb
and
and
dec
add
lret
int
add
add
sarb
jecxz
pop
sbb
cmpsl
shrl
mov
test
adc
add
pop
add
pusha
add
aas
adc
add
icebp
cmc
inc
add
sbb
jl
incb
clc
stc
hlt
std
dec
adc
shll
out
rcrl
sub
sahf
clc
jg
add
push
jae
cmp
push
add
xor
sub
in
mov
xlat
andb
imul
mov
shl
add
inc
push
add
stos
pop
add
mov
cmp
jne
add
xchg
xchg
scas
inc
add
ljmp
jne
ljmp
add
or
out
pop
adc
mov
add
and
and
lock
mov
jg
add
sub
push
add
fldenv
pop
mov
add
mov
jl
or
cmp
jmp
pop
jns
mov
pusha
add
fs
cld
dec
add
dec
add
add
ja
scas
lret
mov
inc
pop
add
sbb
test
movsb
mov
mov
xchg
add
xchg
outsl
imul
add
aas
push
clc
repnz
nop
nop
jae
mov
fwait
clc
repnz
nop
nop
jae
push
mov
repnz
call
nop
push
mov
leave
nop
jmp
add
push
add
repnz
add
clc
repnz
nop
nop
jae
das
lahf
mov
lss
clc
repnz
nop
nop
jae
push
and
add
nop
jmp
add
nop
push
add
adc
incl
in
leave
nop
jmp
add
add
add
or
shlb
repnz
nop
nop
jae
add
add
add
cld
nop
nop
jae
arpl
xchg
push
das
add
insb
add
pop
sbb
cld
nop
nop
jae
dec
add
push
mov
xchg
ret
add
or
movsb
or
jge
add
dec
mov
clc
repnz
nop
nop
jae
add
add
add
mov
push
mov
xchg
ret
out
nop
add
add
or
cwtl
xchg
jl
clc
repnz
nop
nop
jae
sbb
add
jmp
add
add
and
add
outsb
outsb
push
add
add
repnz
nop
nop
jae
xchg
sbb
push
mov
das
int
cmpl
jae
out
add
add
pop
add
cli
enter
add
repnz
nop
nop
jae
add
nop
add
sahf
xchg
or
jne
ss
add
mov
add
mov
sbb
mov
xor
add
nop
push
mov
leave
nop
jmp
or
push
scas
xor
nop
jae
add
jb
mov
leave
clc
repnz
nop
nop
jae
je
add
add
jne
push
mov
xchg
ret
sbbl
jle
or
push
clc
repnz
nop
nop
jae
sbb
add
add
lret
movsb
xchg
fwait
push
mov
xchg
ret
add
add
add
add
inc
push
push
mov
xchg
ret
adc
out
jge
adc
push
push
popa
clc
repnz
nop
nop
jae
add
add
add
mov
xor
add
repnz
nop
nop
jae
sbb
lahf
push
push
push
mov
xchg
ret
xchg
add
sbb
pop
add
aaa
gs
clc
repnz
nop
nop
jae
add
add
stc
pop
clc
repnz
nop
nop
jae
and
add
shlb
pop
jne
clc
repnz
nop
nop
jae
add
lock
push
xchg
inc
add
push
and
add
push
mov
xchg
ret
mov
push
data16
pop
clc
repnz
nop
nop
jae
push
out
mov
mov
dec
inc
nop
push
mov
leave
nop
jmp
outsb
out
add
test
push
mov
xchg
ret
add
inc
fwait
stos
mov
clc
repnz
nop
nop
jae
add
mov
pusha
clc
repnz
nop
nop
jae
dec
sti
add
add
push
mov
add
ret
cmp
jl
arpl
incl
sar
repnz
nop
nop
jae
lret
daa
add
pop
add
fld1
nop
push
mov
leave
nop
jmp
dec
add
jne
clc
nop
push
mov
leave
nop
jmp
dec
add
sbb
sbb
xchg
jge
add
add
fwait
notb
enter
nop
nop
jae
lret
add
add
fistpl
clc
repnz
nop
nop
jae
andl
add
add
push
mov
xchg
ret
add
push
add
xchg
add
jno
test
repnz
nop
nop
jae
pop
add
dec
add
mov
clc
repnz
nop
nop
jae
jbe
or
add
sbb
sar
cld
nop
nop
jae
outsb
add
add
js
sub
repnz
nop
nop
jae
mov
add
add
add
clc
repnz
nop
nop
jae
and
inc
adc
add
nop
nop
jae
nop
add
xorl
out
push
add
push
mov
xchg
ret
add
ret
icebp
clc
repnz
nop
nop
jae
jge
repnz
clc
repnz
nop
nop
jae
add
pop
add
inc
push
mov
xchg
ret
add
add
mov
push
add
add
dec
add
repnz
lea
inc
cmp
push
mov
leave
nop
jmp
add
add
push
or
repnz
nop
nop
jae
xchg
or
aaa
add
sub
nop
push
mov
leave
nop
jmp
add
push
add
add
add
clc
repnz
nop
nop
jae
add
out
pushf
ud1
or
clc
repnz
nop
nop
jae
enter
rep
nop
push
mov
leave
nop
jmp
add
dec
add
mov
add
stc
push
clc
repnz
nop
nop
jae
add
add
add
or
cld
nop
nop
jae
add
add
push
push
mov
xchg
ret
add
je
cmp
nop
jae
movsl
popa
add
add
add
push
push
mov
xchg
ret
add
push
add
int3
xchg
add
clc
repnz
nop
nop
jae
add
add
add
nop
push
mov
leave
nop
jmp
sbb
mov
lahf
fistpl
clc
repnz
nop
nop
jae
add
add
and
mov
push
mov
leave
nop
jmp
add
add
mov
mov
push
shl
clc
repnz
nop
nop
jae
sbb
add
lret
add
subl
je
xchg
dec
inc
gs
add
sbb
jge
mov
push
mov
xchg
ret
andl
add
push
enter
ja
pop
clc
repnz
nop
nop
jae
add
add
nop
nop
jae
and
push
add
jmp
push
mov
xchg
ret
pop
add
dec
add
mov
add
add
nop
push
mov
leave
nop
jmp
or
push
add
cmpsb
pop
fld1
clc
repnz
nop
nop
jae
mov
add
lret
addb
cmp
ret
je
das
sbb
mov
rep
push
mov
xchg
ret
and
pop
mov
daa
add
clc
repnz
nop
nop
jae
addl
mov
pop
add
push
add
or
mov
add
clc
repnz
nop
nop
jae
lret
add
enter
add
add
nop
push
mov
leave
nop
jmp
push
add
add
cmp
nop
push
mov
leave
nop
jmp
add
cmp
pop
cmp
nop
push
mov
leave
nop
jmp
add
add
aad
sbb
clc
repnz
nop
nop
jae
pop
add
add
loope
andl
nop
nop
jae
add
add
push
add
mov
xchg
ret
out
data16
add
or
add
nop
jmp
data16
sbbl
jae
add
enter
add
stos
mov
nop
push
mov
leave
nop
jmp
inc
add
add
add
clc
repnz
nop
nop
jae
add
add
inc
or
je
clc
repnz
nop
nop
jae
add
leave
push
push
mov
xchg
ret
add
in
add
sti
add
add
adc
test
mov
clc
repnz
nop
nop
jae
add
add
push
add
into
sub
mov
leave
nop
jmp
add
jbe
xchg
outsb
add
je
nop
push
mov
leave
nop
jmp
xor
clc
push
mov
xchg
ret
sbbl
push
add
push
js
mov
xchg
ret
add
test
add
mov
xchg
ret
lret
out
dec
xchg
notl
nop
jmp
sti
dec
add
jbe
add
jne
clc
repnz
nop
nop
jae
add
add
movsb
pop
daa
jmp
add
lahf
test
sbb
xchg
add
add
add
lret
call
inc
add
add
add
dec
les
mov
xchg
ret
mov
enter
int
pop
jae
push
mov
leave
nop
jmp
push
pop
xchg
hlt
inc
pop
push
mov
xchg
ret
adc
add
xchg
add
push
dec
mov
clc
repnz
nop
nop
jae
gs
push
arpl
negb
fdivrp
repnz
nop
nop
jae
das
and
add
pop
nop
push
mov
leave
nop
jmp
add
repnz
add
pop
movsl
test
je
sub
repnz
nop
nop
jae
jb
mov
clc
repnz
nop
nop
jae
add
inc
add
fwait
push
mov
xchg
ret
jb
mov
mov
push
clc
repnz
nop
nop
jae
lahf
jb
inc
and
xrelease
clc
repnz
nop
nop
jae
das
movb
jle
xor
push
mov
xchg
ret
nop
push
xchg
fwait
add
div
clc
repnz
nop
nop
jae
or
gs
add
mov
xchg
ret
add
or
test
sbb
add
add
add
arpl
jecxz
inc
add
aaa
movsl
movsb
fwait
sti
add
fs
je
clc
repnz
nop
nop
jae
add
test
repnz
nop
nop
jae
addl
add
popa
in
xchg
jbe
pop
add
sbb
push
mov
xchg
ret
add
sti
lret
jle
add
in
leave
nop
jmp
push
add
mov
xchg
ret
add
inc
add
pop
daa
add
nop
nop
jae
add
add
sbb
gs
nop
nop
jae
inc
add
jge
add
adc
mov
clc
repnz
nop
nop
jae
in
add
mov
leave
nop
jmp
mov
gs
data16
sub
clc
repnz
nop
nop
jae
push
push
dec
or
add
and
jmp
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
daa
add
push
xchg
ja
movsb
clc
repnz
nop
nop
jae
mov
and
xor
clc
repnz
nop
nop
jae
push
add
cmpb
fdivr
repnz
nop
nop
jae
dec
add
rcll
cld
nop
nop
jae
lahf
xchg
sti
mov
add
push
push
mov
xchg
ret
in
add
push
nop
add
movsl
add
nop
nop
jae
add
add
mov
add
add
add
sti
push
movsl
gs
mov
cld
nop
nop
jae
data16
mov
push
clc
repnz
nop
nop
jae
add
enter
stos
call
clc
repnz
nop
nop
jae
or
sbb
push
add
test
add
nop
push
mov
leave
nop
jmp
add
add
add
xchg
inc
add
add
push
add
add
clc
repnz
nop
nop
jae
add
sbb
sbb
jns
push
mov
xchg
ret
mov
pop
add
push
ret
mov
add
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
lahf
add
movsl
addl
xchg
xor
fsts
repnz
nop
nop
jae
ss
in
add
add
jecxz
clc
repnz
nop
nop
jae
add
add
or
outsb
add
jg
clc
repnz
nop
nop
jae
add
data16
andl
movb
mov
xchg
ret
in
add
fld1
clc
repnz
nop
nop
jae
pop
add
mov
cld
nop
nop
jae
add
adc
add
clc
repnz
nop
nop
jae
xor
add
add
repnz
nop
nop
jae
add
add
pop
clc
repnz
nop
nop
jae
pop
adc
inc
add
daa
fld1
push
mov
xchg
ret
add
add
out
sbb
mov
sub
push
mov
leave
nop
jmp
add
add
add
movsl
mov
clc
repnz
nop
nop
jae
add
push
lahf
pop
add
push
clc
repnz
nop
nop
jae
add
mov
movsb
push
mov
xchg
ret
jle
mov
add
clc
repnz
nop
nop
jae
and
xor
pop
cmp
repnz
nop
nop
jae
add
add
mov
test
push
mov
leave
nop
jmp
pop
lret
add
add
nop
nop
jae
add
add
int3
ja
mov
add
clc
repnz
nop
nop
jae
outsb
push
add
js
or
cld
nop
nop
jae
push
dec
add
pop
add
push
mov
xchg
ret
add
das
add
enter
gs
clc
repnz
nop
nop
jae
add
add
add
mov
loope
inc
add
enterw
add
add
clc
repnz
nop
nop
jae
add
add
and
mov
xchg
ret
mov
andl
push
mov
xchg
ret
push
xorl
pop
add
cltd
call
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
push
repnz
outsb
add
xor
negb
jne
push
mov
xchg
ret
add
nop
xchg
fwait
add
nop
push
mov
leave
nop
jmp
add
sbb
das
movsb
ss
add
add
push
mov
leave
nop
jmp
add
add
add
mov
roll
repnz
nop
nop
jae
lret
pop
add
out
cmp
inc
add
clc
repnz
nop
nop
jae
add
outsb
pop
add
push
add
repnz
nop
nop
jae
add
add
mov
lock
clc
repnz
nop
nop
jae
add
xbegin
jae
push
add
ss
shll
push
mov
leave
nop
jmp
ss
add
add
push
orl
inc
add
xor
popa
add
add
clc
repnz
nop
nop
jae
das
add
add
sar
repnz
nop
nop
jae
data16
add
jle
repz
nop
push
mov
leave
nop
jmp
add
mov
dec
nop
push
mov
leave
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
mov
add
push
add
shlb
add
imul
cld
nop
nop
jae
jbe
dec
add
push
out
pushl
clc
repnz
nop
nop
jae
add
add
add
insl
jnp
add
add
data16
data16
pop
push
mov
xchg
ret
add
push
out
arpl
daa
add
and
clc
repnz
nop
nop
jae
nop
push
add
add
push
mov
adc
cmp
add
fldl
cmp
add
iret
or
leave
nop
jmp
push
add
int3
cli
and
repnz
nop
nop
jae
out
push
add
lcall
push
mov
xchg
ret
test
mov
sbb
mov
xchg
ret
pop
das
add
mov
pop
clc
repnz
nop
nop
jae
lret
add
add
add
add
clc
repnz
nop
nop
jae
add
js
dec
ret
nop
push
mov
leave
nop
jmp
pop
add
add
pusha
push
mov
xchg
ret
add
push
add
popa
lahf
add
aas
mov
clc
repnz
nop
nop
jae
add
or
sub
fistl
sub
and
add
add
push
add
sub
clc
repnz
nop
nop
jae
out
mov
clc
repnz
nop
nop
jae
add
push
adc
sti
inc
add
push
sub
push
add
lea
push
mov
xchg
ret
or
add
add
jo
xlat
push
push
mov
xchg
ret
inc
add
add
xchg
xchg
push
clc
repnz
nop
nop
jae
add
fwait
add
add
cmpl
nop
push
mov
leave
nop
jmp
out
fwait
add
sbb
add
clc
repnz
nop
nop
jae
mov
add
fcompl
push
data16
mov
xchg
ret
nop
add
mov
out
loop
add
add
movsl
cmpl
lahf
add
add
mov
clc
repnz
nop
nop
jae
add
add
sahf
lcall
fisttps
mov
leave
nop
jmp
push
add
lret
inc
add
pop
clc
repnz
nop
nop
jae
aaa
mov
add
push
push
push
mov
xchg
ret
or
add
add
add
xor
add
test
mov
xchg
ret
xchg
daa
add
add
into
scas
lret
pop
clc
repnz
nop
nop
jae
add
add
push
add
outsl
fistpl
clc
repnz
nop
nop
jae
xor
push
lret
jne
clc
repnz
nop
nop
jae
sbb
mov
add
out
adc
push
mov
xchg
ret
push
mov
push
mov
xchg
ret
add
add
jbe
inc
add
add
add
nop
data16
push
mov
xchg
ret
lahf
add
or
dec
mov
mov
mov
mov
xchg
ret
je
pop
add
add
or
cld
nop
nop
jae
add
sbb
and
sub
nop
jmp
lret
pop
jb
lret
push
clc
repnz
nop
nop
jae
mov
add
add
add
sub
clc
repnz
nop
nop
jae
xchg
add
cmp
loope
andl
in
leave
nop
jmp
fwait
jbe
push
mov
xchg
ret
outsb
jbe
lahf
add
adc
movsl
pop
clc
repnz
nop
nop
jae
outsb
push
fwait
xchg
sarb
and
mov
xchg
ret
das
sbbl
add
clc
repnz
nop
nop
jae
add
popa
add
add
push
mov
push
mov
xchg
ret
add
jb
add
lds
push
mov
leave
nop
jmp
push
add
aaa
out
add
push
add
mov
movl
add
add
add
xor
mov
clc
repnz
nop
nop
jae
add
mov
repnz
nop
nop
jae
add
sti
jle
add
ret
xchg
clc
repnz
nop
nop
jae
add
or
add
lahf
jb
mov
clc
repnz
nop
nop
jae
movsl
push
sti
push
clc
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
aaa
popa
push
out
xor
dec
push
push
mov
xchg
ret
add
add
add
push
daa
mov
aad
inc
add
or
daa
dec
lahf
or
dec
add
mov
in
leave
nop
jmp
add
and
add
pop
jg
and
add
repnz
nop
nop
jae
jbe
xchg
xchg
mov
adcb
add
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
sbb
addl
add
push
nop
push
mov
leave
nop
jmp
data16
add
repnz
test
nop
push
mov
leave
nop
jmp
push
arpl
jbe
add
push
push
push
mov
xchg
ret
add
popa
addl
add
mov
xchg
ret
add
add
push
and
mov
xchg
ret
mov
aaa
dec
jno
roll
repnz
nop
nop
jae
lret
add
mov
clc
repnz
nop
nop
jae
dec
add
dec
add
jl
fucomi
adc
incl
jbe
add
sti
movsl
add
add
add
repnz
nop
nop
jae
inc
add
subl
nop
push
mov
leave
nop
jmp
add
add
add
add
nop
nop
jae
or
add
dec
sbb
push
mov
mov
add
clc
repnz
nop
nop
jae
jge
jle
dec
add
add
lea
clc
repnz
nop
nop
jae
movsb
das
xchg
mov
mov
push
mov
xchg
ret
add
add
add
dec
or
mov
adc
repnz
nop
nop
jae
pop
add
add
notl
in
sbb
insl
add
lcall
movb
aaa
add
xchg
pop
add
dec
mov
clc
repnz
nop
nop
jae
daa
lahf
push
cmpl
push
mov
leave
nop
jmp
pop
and
add
add
pop
fld1
push
mov
xchg
ret
add
add
add
nop
push
mov
leave
nop
jmp
add
dec
add
add
clc
repnz
nop
nop
jae
movsl
add
pop
add
add
sub
push
mov
xchg
ret
add
sti
pop
add
clc
repnz
nop
nop
jae
add
sbb
and
out
test
nop
push
mov
leave
nop
jmp
add
add
cld
nop
nop
jae
add
lret
sti
lret
push
xlat
fld1
push
mov
xchg
ret
add
inc
adc
pop
xchg
adcl
jmp
mov
add
add
clc
repnz
nop
nop
jae
push
add
mov
in
mov
clc
repnz
nop
nop
jae
in
lahf
push
add
mov
clc
repnz
nop
nop
jae
add
add
enter
or
add
repnz
nop
nop
jae
add
repnz
nop
nop
jae
outsb
add
add
add
pop
add
lea
clc
repnz
nop
nop
jae
push
add
mov
xchg
ret
mov
add
popa
add
add
clc
repnz
nop
nop
jae
add
call
clc
repnz
nop
nop
jae
sti
add
jae
inc
adc
mov
xchg
ret
add
add
enter
add
pusha
add
xchg
mov
clc
repnz
nop
nop
jae
add
add
repnz
xchg
inc
add
mov
add
in
cmp
vpsubsb
std
je
add
add
add
add
mov
add
test
jb
add
leave
nop
jmp
push
push
add
js
xchg
js
call
rorl
mov
xchg
ret
add
add
das
add
pop
mov
push
mov
xchg
ret
inc
push
add
imull
sar
cld
nop
nop
jae
repnz
add
daa
jge
in
mov
push
mov
xchg
ret
out
mov
iret
shr
nop
push
mov
leave
nop
jmp
das
add
add
lret
sbb
cltd
push
push
mov
xchg
ret
xor
add
adc
add
nop
push
mov
leave
nop
jmp
xchg
and
mov
adc
repnz
nop
nop
jae
add
add
add
cmp
sbb
mov
jne
nop
push
mov
leave
nop
jmp
mov
lret
clc
repnz
nop
nop
jae
mov
add
rolb
mov
clc
repnz
nop
nop
jae
add
push
repz
clc
repnz
nop
nop
jae
jb
mov
cmc
add
push
mov
xchg
ret
add
lret
data16
dec
cld
push
mov
xchg
ret
dec
add
add
pop
inc
adcl
je
nop
push
mov
leave
nop
jmp
add
arpl
dec
pop
push
mov
xchg
ret
add
push
add
add
movsb
decb
movsb
jle
add
mov
add
dec
mov
push
mov
xchg
ret
jbe
test
movsl
push
jecxz
incl
mov
mov
push
add
into
rcll
mov
xchg
ret
add
add
inc
popf
push
clc
repnz
nop
nop
jae
xchg
jb
add
push
mov
adc
add
aaa
add
add
add
add
add
insb
dec
add
jmp
nop
nop
jae
add
outsb
mov
mov
cld
nop
nop
jae
xchg
add
scas
push
push
mov
xchg
ret
enter
add
and
nop
push
mov
leave
nop
jmp
gs
enter
rol
clc
repnz
nop
nop
jae
add
mov
dec
add
push
mov
xchg
ret
push
mov
add
mov
nop
push
mov
leave
nop
jmp
xchg
mov
inc
jb
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
lret
add
mov
add
add
repnz
nop
nop
jae
add
lahf
push
arpl
add
clc
repnz
nop
nop
jae
nop
sbb
add
sti
clc
repnz
nop
nop
jae
outsb
add
add
pop
push
mov
xchg
ret
xor
data16
arpl
add
clc
repnz
nop
nop
jae
in
pop
add
and
clc
repnz
nop
nop
jae
or
mov
mov
add
add
repnz
nop
nop
jae
add
add
push
mov
dec
add
push
cmp
adc
data16
push
add
push
push
mov
xchg
ret
movsb
lahf
and
cmp
jb
push
mov
xchg
ret
mov
jge
ja
outsl
arpl
add
repnz
nop
nop
jae
push
add
add
popa
fistpl
push
mov
xchg
ret
add
arpl
add
jle
sbb
repnz
nop
nop
jae
lret
add
je
add
add
mov
nop
push
mov
leave
nop
jmp
push
add
push
mov
leave
nop
jmp
add
push
sti
add
and
clc
repnz
nop
nop
jae
and
add
jp
lahf
mov
push
mov
xchg
ret
add
add
repz
nop
push
mov
leave
nop
jmp
add
push
mov
xchg
ret
add
add
dec
sub
repnz
nop
nop
jae
fwait
add
add
andl
int
movb
decl
and
lret
lret
adc
jge
ss
add
jp
mov
cld
nop
nop
jae
pop
pop
add
add
inc
or
repnz
nop
nop
jae
add
add
push
data16
push
mov
xchg
ret
add
add
add
sub
add
in
add
add
daa
daa
xor
add
add
cld
nop
nop
jae
or
sti
sbb
add
mov
or
repnz
nop
nop
jae
add
add
mov
xchg
ret
add
test
add
add
dec
add
nop
nop
jae
add
push
subl
test
ret
enter
xchg
push
add
call
clc
repnz
nop
nop
jae
repnz
lret
add
xchg
mov
or
add
add
bnd
push
pop
faddl
subl
jmp
xchg
push
sbb
add
add
clc
repnz
nop
nop
jae
push
in
nop
popa
out
dec
orl
nop
jmp
push
add
lahf
add
push
push
mov
xchg
ret
pop
sbb
xchg
add
jge
jb
lea
clc
repnz
nop
nop
jae
add
or
add
daa
lods
push
mov
xchg
ret
fwait
add
add
in
inc
push
clc
inc
ret
clc
repnz
nop
nop
jae
out
lret
je
and
mov
test
add
roll
repnz
nop
nop
jae
add
mov
add
ret
push
nop
push
mov
leave
nop
jmp
add
add
add
sub
add
repnz
nop
nop
jae
add
sti
add
addb
push
mov
xchg
ret
jb
bnd
jb
out
mov
push
mov
xchg
ret
push
xchg
xorl
scas
push
clc
repnz
nop
nop
jae
and
mov
negb
mov
xchg
ret
add
or
jp
add
add
sti
inc
enter
push
xor
push
mov
xchg
ret
add
add
xchg
add
repnz
nop
nop
jae
add
daa
push
add
xchg
jmp
mov
add
add
add
lahf
data16
repnz
nop
nop
jae
add
sbb
movsb
insl
mov
clc
repnz
nop
nop
jae
add
data16
mov
push
mov
xchg
ret
mov
dec
add
mov
clc
repnz
nop
nop
jae
mov
xchg
repnz
nop
nop
jae
add
add
add
data16
mov
xchg
ret
pop
sti
add
movb
pusha
add
addb
cmp
ret
mov
add
add
call
clc
repnz
nop
nop
jae
mov
add
xchg
sbbb
add
add
mov
pop
and
push
mov
leave
nop
jmp
add
add
add
stos
cmpl
nop
push
mov
leave
nop
jmp
jle
add
outsb
add
jp
and
in
leave
nop
jmp
add
add
add
add
div
nop
push
mov
leave
nop
jmp
repnz
add
add
jmp
mov
xchg
ret
add
add
fisttpll
test
cli
clc
repnz
nop
nop
jae
push
add
pop
clc
repnz
nop
nop
jae
push
add
fwait
inc
add
adc
movsb
clc
repnz
nop
nop
jae
or
movsb
pop
data16
mov
xchg
ret
or
lahf
mov
push
das
add
clc
repnz
nop
nop
jae
add
xor
pop
push
mov
xchg
ret
add
add
xor
clc
repnz
nop
nop
jae
add
xor
mov
nop
nop
jae
add
add
jbe
add
cmpl
cld
nop
nop
jae
add
pop
add
rclb
out
ja
add
lahf
or
add
add
enter
lret
clc
repnz
nop
nop
jae
enter
push
add
nop
sub
inc
and
repnz
nop
nop
jae
push
lret
add
sub
int3
mov
push
mov
xchg
ret
nop
add
add
jle
push
call
nop
jmp
outsb
push
add
push
mov
xchg
ret
add
add
add
sbb
shlb
test
xchg
ret
add
mov
add
pop
clc
repnz
nop
nop
jae
mov
data16
mov
nop
nop
jae
fwait
add
add
cs
clc
repnz
nop
nop
jae
dec
data16
add
popa
clc
repnz
nop
nop
jae
and
add
sti
add
and
js
clc
repnz
nop
nop
jae
pop
arpl
arpl
call
cld
nop
nop
jae
add
add
movsb
add
sub
nop
nop
jae
outsb
add
mov
add
call
inc
add
push
add
and
add
mov
clc
repnz
nop
nop
jae
arpl
add
add
nop
nop
jae
pop
add
push
push
shr
push
mov
xchg
ret
mov
and
mov
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
outsb
mov
add
push
push
mov
xchg
ret
data16
das
add
push
mov
xchg
ret
outsb
in
dec
nop
sbb
das
add
inc
add
fwait
nop
push
mov
leave
nop
jmp
add
jbe
push
lret
push
pop
test
nop
push
mov
leave
nop
jmp
add
add
add
or
repnz
nop
nop
jae
push
add
and
xchg
add
nop
push
mov
leave
nop
jmp
in
xchg
add
push
clc
repnz
nop
nop
jae
in
dec
lret
inc
daa
add
xchg
push
clc
repnz
nop
nop
jae
or
add
push
add
adc
mov
add
add
fwait
clc
repnz
nop
nop
jae
add
add
add
add
stos
clc
repnz
nop
nop
jae
repnz
add
mov
out
clc
repnz
nop
nop
jae
out
add
lods
repnz
incl
add
add
add
or
add
or
cltd
push
nop
push
mov
leave
nop
jmp
and
add
xchg
movsl
mov
clc
repnz
nop
nop
jae
add
fwait
add
or
repnz
nop
nop
jae
xchg
mov
mov
inc
lock
mov
xchg
ret
movsb
add
movsb
push
outsb
add
xchg
sbb
jne
push
mov
xchg
ret
add
add
out
sbb
loopne
jne
clc
repnz
nop
nop
jae
dec
enter
push
mov
xchg
ret
mov
add
repnz
inc
add
addl
addl
decl
in
push
nop
push
mov
leave
nop
jmp
add
mov
cld
nop
nop
jae
add
outsb
pop
or
ss
jns
jle
push
mov
xchg
ret
daa
add
lahf
add
das
mov
nop
push
mov
leave
nop
jmp
mov
add
movsl
push
clc
repnz
nop
nop
jae
add
add
add
les
push
mov
leave
nop
jmp
test
and
adc
push
mov
leave
nop
jmp
add
arpl
add
xchg
push
mov
xchg
ret
add
add
push
and
mov
add
push
mov
leave
nop
jmp
outsb
or
sbb
sub
add
add
add
repnz
mov
add
clc
repnz
nop
nop
jae
das
lret
pop
add
add
test
add
repnz
nop
nop
jae
movsl
sbb
dec
add
jnp
add
add
aaa
or
mov
push
nop
push
mov
leave
nop
jmp
enter
sbb
movsl
data16
push
add
pusha
inc
add
jle
add
lahf
push
and
call
nop
jmp
sbb
mov
cmpl
nop
jae
aaa
lahf
in
pop
inc
pop
push
mov
xchg
ret
add
mov
add
push
mov
leave
nop
jmp
das
sbb
adc
in
jmp
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
out
enter
pop
and
rclb
rorl
and
add
add
dec
or
mov
repz
repnz
nop
nop
jae
add
add
jg
clc
repnz
nop
nop
jae
lret
add
add
je
clc
repnz
nop
nop
jae
push
mov
add
pushl
nop
push
mov
leave
nop
jmp
push
add
mov
dec
add
xchg
xchg
ret
add
add
dec
and
mov
nop
nop
jae
or
mov
xchg
cld
nop
nop
jae
add
add
mov
lods
push
mov
xchg
ret
add
push
add
add
cmpl
cmp
loop
mov
loop
nop
push
mov
leave
nop
jmp
add
out
and
nop
push
mov
leave
nop
jmp
add
add
xchg
lods
mov
clc
repnz
nop
nop
jae
outsb
nop
xchg
push
movsl
nop
add
xchg
xor
inc
add
push
mov
xchg
ret
out
add
ret
clc
repnz
nop
nop
jae
add
sbb
dec
add
lea
mov
xchg
ret
lret
add
add
add
movsb
and
add
repnz
nop
nop
jae
lret
add
jmp
jg
clc
repnz
nop
nop
jae
add
mov
aas
clc
repnz
nop
nop
jae
lahf
das
xchg
mov
push
pop
push
mov
xchg
ret
add
and
data16
repnz
nop
nop
jae
push
mov
pop
push
bnd
sbb
inc
push
clc
repnz
nop
nop
jae
arpl
add
add
add
nop
push
mov
leave
nop
jmp
push
xchg
adc
xchg
mov
leave
nop
jmp
add
add
add
pop
clc
repnz
nop
nop
jae
movsb
and
jb
inc
add
jne
nop
push
mov
leave
nop
jmp
sti
movsl
add
add
cmp
mov
insb
add
bound
xchg
xor
clc
repnz
nop
nop
jae
push
add
inc
jp
nop
push
mov
leave
nop
jmp
pop
sbb
add
add
repnz
nop
nop
jae
add
addl
push
add
cld
push
inc
sbb
repnz
nop
nop
jae
enter
mov
add
add
push
push
mov
xchg
ret
add
add
add
repnz
nop
nop
jae
mov
push
sbbb
inc
add
add
arpl
add
push
test
jne
nop
push
mov
leave
nop
jmp
xchg
add
cmp
nop
push
mov
leave
nop
jmp
push
add
add
cmp
repnz
nop
nop
jae
xchg
add
push
das
cmp
nop
push
mov
leave
nop
jmp
jbe
mov
call
clc
repnz
nop
nop
jae
in
outsb
add
add
popa
cmpl
nop
push
mov
leave
nop
jmp
add
movb
xchg
jne
jo
jns
clc
repnz
nop
nop
jae
add
movsb
movsl
out
push
push
mov
xchg
ret
dec
add
add
xchg
sbb
add
pop
insb
inc
add
push
or
add
das
mov
shrb
push
mov
leave
nop
jmp
add
or
movb
adc
repnz
nop
nop
jae
push
add
add
or
call
leave
nop
jmp
jbe
add
add
adc
repnz
nop
nop
jae
add
popa
add
xchg
or
je
mov
movsl
push
jmp
incl
pop
add
add
dec
add
add
add
ret
add
data16
outsb
add
enter
ficompl
lods
push
mov
clc
repnz
nop
nop
jae
add
or
add
test
mov
xchg
ret
jbe
popa
add
or
add
loop
cld
and
xor
clc
repnz
nop
nop
jae
add
addr16
mov
sbb
xor
faddl
nop
sbb
xchg
add
add
dec
bound
nop
push
mov
leave
nop
jmp
add
add
cmpsb
inc
dec
nop
push
mov
leave
nop
jmp
in
add
mov
mov
cld
nop
nop
jae
push
out
mov
push
push
mov
xchg
ret
adcl
add
repnz
nop
nop
jae
add
add
mov
mov
add
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
add
jbe
add
clc
repnz
nop
nop
jae
add
lahf
arpl
add
fldl
xchg
jbe
add
or
xchg
add
in
sahf
bound
jl
inc
mov
clc
repnz
nop
nop
jae
add
add
lds
cld
nop
nop
jae
add
add
add
jg
mov
push
clc
repnz
nop
nop
jae
and
lods
js
mov
adc
repnz
nop
nop
jae
inc
add
add
nop
push
mov
leave
nop
jmp
jbe
add
xor
clc
repnz
nop
nop
jae
add
iret
ds
clc
repnz
nop
nop
jae
and
add
add
mov
nop
push
mov
leave
nop
jmp
push
out
add
add
out
push
add
sar
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
repnz
jle
push
add
sar
repnz
nop
nop
jae
add
add
pop
inc
dec
jns
cmpl
mov
leave
nop
jmp
push
add
push
add
imul
clc
repnz
nop
nop
jae
jb
aaa
sbb
add
mov
clc
repnz
nop
nop
jae
nop
add
movsb
jno
inc
loopne
mov
xchg
ret
add
lahf
jb
add
mov
cld
nop
nop
jae
out
movb
outsb
add
add
add
loopne
clc
repnz
nop
nop
jae
add
loope
incl
jge
add
or
add
dec
add
add
cmp
repnz
nop
nop
jae
add
add
insl
ret
clc
repnz
nop
nop
jae
add
lahf
push
sbb
xor
add
repnz
nop
nop
jae
sbb
xor
fistpl
clc
repnz
nop
nop
jae
add
jb
dec
notl
push
mov
leave
nop
jmp
jbe
dec
push
jg
jns
clc
repnz
nop
nop
jae
inc
mov
fistps
nop
jae
add
add
sti
jbe
in
mov
clc
repnz
nop
nop
jae
pop
pop
xchg
daa
dec
imul
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
add
ljmp
nop
jmp
aaa
jle
aaa
test
int3
adc
rcrl
adcb
ret
add
das
data16
jle
je
nop
push
mov
leave
nop
jmp
jb
add
sub
repnz
nop
nop
jae
xchg
add
add
clc
repnz
nop
nop
jae
gs
add
rorl
cld
nop
nop
jae
outsb
add
add
add
add
add
clc
repnz
nop
nop
jae
adc
je
sbb
test
cld
nop
nop
jae
add
arpl
add
add
repnz
nop
nop
jae
add
push
xchg
or
repnz
nop
nop
jae
in
jle
jb
outsb
ljmp
clc
repnz
nop
nop
jae
mov
inc
add
repnz
nop
nop
jae
add
adc
popa
inc
add
sti
data16
popa
lret
add
repnz
add
sub
mov
clc
repnz
nop
nop
jae
movsl
or
pop
adc
fistpl
clc
repnz
nop
nop
jae
add
nop
add
add
dec
push
nop
push
mov
leave
nop
jmp
add
jge
add
call
nop
push
mov
leave
nop
jmp
mov
lahf
add
test
call
nop
jmp
sbb
add
inc
mov
clc
repnz
nop
nop
jae
push
popa
add
adc
in
leave
nop
jmp
add
add
add
and
jge
clc
repnz
nop
nop
jae
xchg
add
out
push
add
lea
clc
repnz
nop
nop
jae
add
je
mov
add
xorl
clc
repnz
nop
nop
jae
ss
mov
xor
adcl
repnz
nop
nop
jae
jge
mov
cld
nop
nop
jae
add
add
add
fwait
push
mov
xchg
ret
add
in
push
jbe
push
push
dec
xlat
push
clc
repnz
nop
nop
jae
jle
add
dec
push
or
xor
mov
leave
nop
jmp
add
add
add
out
scas
js
dec
add
fistpl
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
gs
add
movsl
sbb
test
nop
push
mov
leave
nop
jmp
sti
add
pop
xchg
gs
mov
add
add
mov
lods
xchg
call
clc
repnz
nop
nop
jae
add
add
add
add
cld
nop
nop
jae
push
lahf
nop
add
add
sub
mov
xchg
ret
pop
add
or
movsl
add
clc
repnz
nop
nop
jae
movb
add
fdivs
adc
rcrl
inc
add
arpl
sbb
add
add
jg
test
xlat
clc
repnz
nop
nop
jae
add
fadds
jne
nop
push
mov
leave
nop
jmp
xchg
add
in
leave
nop
jmp
add
and
add
mov
clc
repnz
nop
nop
jae
add
enter
push
add
clc
repnz
nop
nop
jae
add
xchg
push
add
and
cld
nop
nop
jae
movb
push
jle
jg
add
clc
repnz
nop
nop
jae
add
push
and
push
mov
leave
nop
jmp
push
add
or
push
xor
sarb
add
push
add
lods
clc
repnz
nop
nop
jae
add
arpl
out
jge
mov
clc
repnz
nop
nop
jae
add
add
pop
and
sbbl
add
add
add
add
push
mov
leave
nop
jmp
push
xchg
xor
mov
mov
nop
push
mov
leave
nop
jmp
add
nop
push
add
sub
xchg
ret
add
dec
lret
mov
push
add
cmp
adcl
mov
leave
nop
jmp
nop
data16
add
pop
add
test
xchg
repnz
nop
nop
jae
outsb
fwait
fwait
inc
add
repnz
nop
nop
jae
das
dec
data16
add
inc
not
jmp
add
add
mov
jle
call
cld
nop
nop
jae
add
push
add
add
test
xchg
mov
leave
nop
jmp
add
add
mov
cmp
push
mov
leave
nop
jmp
add
mov
xchg
add
add
outsb
nop
add
lahf
add
add
nop
push
mov
leave
nop
jmp
mov
add
clc
repnz
nop
nop
jae
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
add
dec
push
clc
repnz
nop
nop
jae
xchg
inc
lret
mov
nop
push
mov
leave
nop
jmp
add
add
data16
dec
push
mov
xchg
ret
add
jge
adc
add
push
mov
xchg
ret
add
add
add
cmp
cmpsl
pop
clc
repnz
nop
nop
jae
data16
sub
add
popa
pusha
clc
repnz
nop
nop
jae
adc
mov
and
mov
leave
nop
jmp
add
andl
add
xchg
add
clc
repnz
nop
nop
jae
xchg
aaa
sbb
enter
add
nop
push
mov
leave
nop
jmp
out
add
push
add
and
repnz
nop
nop
jae
outsb
pop
dec
adc
mov
clc
repnz
nop
nop
jae
pop
nop
xor
mov
push
mov
xchg
ret
add
add
mov
les
or
mov
xchg
ret
test
fwait
add
jo
loope
sar
cld
nop
nop
jae
add
add
rcrl
cld
nop
nop
jae
add
add
repnz
nop
nop
jae
add
add
add
xchg
cld
push
mov
xchg
ret
add
push
outsb
xchg
dec
clc
repnz
nop
nop
jae
sbb
push
xor
lret
mov
clc
repnz
nop
nop
jae
add
add
add
add
sbb
clc
repnz
nop
nop
jae
je
popa
and
push
mov
leave
nop
jmp
jbe
push
xchg
add
add
inc
jecxz
repnz
nop
nop
jae
add
jb
add
pause
push
mov
leave
nop
jmp
add
add
add
sbb
mov
leave
nop
jmp
daa
add
push
nop
flds
nop
push
mov
leave
nop
jmp
dec
add
cmp
repnz
nop
nop
jae
out
movsl
dec
sbb
outsl
xor
clc
repnz
nop
nop
jae
add
push
jp
fcmovnu
sbb
push
mov
xchg
ret
add
add
nop
nop
jae
outsb
lret
add
das
add
push
mov
xchg
ret
inc
add
add
aaa
repnz
je
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
lahf
add
add
in
leave
nop
jmp
add
or
lret
add
mov
test
cld
clc
repnz
nop
nop
jae
enter
pop
clc
repnz
nop
nop
jae
ss
add
lahf
call
nop
push
mov
leave
nop
jmp
pop
out
pop
add
movswl
nop
push
mov
leave
nop
jmp
mov
jecxz
push
mov
xchg
ret
add
je
out
pop
arpl
ja
mov
fcoms
mov
rolb
das
add
in
mov
add
add
xchg
add
filds
lea
pop
add
es
fisubrl
into
arpl
mov
or
sub
rclb
jne
mov
add
and
test
add
pop
add
out
add
add
mov
jne
add
add
int3
and
xor
les
clc
jge
add
bound
or
inc
xor
jle
add
std
jbe
rcl
xorb
xor
aaa
ret
mov
pushf
dec
add
add
andl
xchg
into
xchg
push
add
addr16
push
repz
es
mov
test
in
xor
inc
add
gs
add
mov
add
stos
into
dec
add
loopne
add
push
add
outsl
or
mov
les
sbb
loopne
jno
fstpl
lods
sbb
and
pop
add
jo
enter
adc
inc
fucomp
mov
lcall
jo
cmpsl
repnz
je
dec
add
sbb
sbb
push
dec
into
fsubs
lahf
stos
jae
add
push
add
ret
inc
push
fimull
or
mov
sbb
cmp
std
movsl
lret
mov
faddl
stos
fisubs
add
add
rcr
adc
testl
sahf
mov
ret
mov
pushf
jae
dec
add
or
and
sahf
aam
xor
test
ljmp
add
push
add
or
adc
xlat
sti
add
repz
inc
add
adc
jle
push
sub
cli
test
xchg
ja
repz
outsb
add
mov
int3
mov
das
cmp
sub
sbb
sti
std
sti
inc
inc
add
add
ret
adc
mov
mov
pop
add
add
pusha
add
sub
loope
add
sub
xchg
inc
and
call
add
loopne
xor
push
and
sbbl
xchg
pop
int3
sbb
and
add
aam
addb
xchg
fistpl
add
scas
adc
sbb
add
sub
lock
dec
add
out
mov
add
outsl
mov
add
or
mov
add
inc
add
jp
and
ja
add
mov
pop
add
add
in
outsb
add
sub
add
add
xchg
stos
mov
aad
cmp
xchg
repz
push
add
add
pushf
push
cld
stos
mov
add
add
push
ficomps
sbb
aad
rorl
xor
mov
add
add
add
int3
push
rorb
xor
dec
mov
bound
rcll
dec
add
std
ja
call
mov
add
add
add
push
add
ss
scas
xchg
hlt
adc
sub
and
repnz
jbe
pop
mov
int
add
aas
in
imul
cmc
nop
xor
test
add
movsb
outsb
add
cmpl
add
add
push
add
movsb
sub
and
sbb
sub
sti
lret
add
jle
lret
das
mov
add
adc
sub
pop
inc
add
rorl
sub
pop
pop
movsb
xchg
data16
mov
and
xchg
lock
lock
stc
arpl
stos
aas
pop
add
hlt
jle
xor
mov
adc
aaa
sahf
popf
in
mov
mov
xchg
in
out
jge
xchg
stc
push
add
jb
aam
add
mov
add
cmpb
sbb
addb
or
add
inc
add
add
mov
add
mov
sub
and
add
sub
add
jo
imul
stos
addr16
ja
in
mov
cli
imul
inc
add
dec
dec
or
add
add
add
and
xchg
dec
add
sub
fnsave
add
add
stos
mov
add
add
mov
pushf
out
lds
lret
aaa
mov
inc
loope
mov
test
jg
sti
adc
insb
add
dec
add
and
add
add
xchg
mov
lock
add
add
jle
bound
pop
cmp
dec
push
adc
in
add
add
adc
add
jns
mov
push
add
add
and
adc
add
add
test
add
add
xor
test
add
xchg
or
dec
jl
loop
mov
mov
mov
xchg
push
sub
loope
sbb
sbb
mov
pop
xorl
add
mov
mov
js
add
int
and
rcr
or
lret
cld
or
lret
flds
adcb
int
jno
lods
sbb
jecxz
pop
adc
cli
js
push
push
add
sbb
push
push
add
add
sbb
mov
xor
fpatan
xchg
inc
add
jl
jl
xor
popa
mov
add
in
lahf
adc
add
lahf
mov
cmp
mov
ret
rcll
lret
add
cmpb
xor
fs
xlat
mov
push
add
add
out
xchg
add
add
xor
jle
push
add
in
xor
outsb
add
loop
xor
faddl
and
out
scas
push
pushf
jg
and
test
in
mov
add
cmc
mov
mov
mov
add
es
mov
add
jns
add
mov
add
jo
sbb
inc
ljmp
stc
sbb
inc
add
dec
add
outsl
push
add
add
incb
leave
and
pop
mov
adc
adc
pop
add
add
add
add
mov
add
dec
and
sub
mov
sahf
out
movsl
or
int3
ljmp
add
add
iret
incb
mov
cmp
mov
das
out
xchg
popa
enter
add
lcall
add
aas
popa
imul
add
pop
add
add
add
add
stc
sub
mov
adc
pushf
jmp
icebp
cmc
sahf
mov
gs
out
mov
jne
jae
pop
bswap
sarl
sub
clc
push
add
out
lret
out
cltd
jl
aaa
mov
xor
sbb
dec
add
adc
add
add
dec
add
out
sti
add
lods
xorl
xor
add
stos
ret
jns
add
ret
inc
pop
add
add
push
add
repnz
pop
hlt
rorl
pusha
add
int3
and
in
add
add
sahf
dec
add
sub
push
add
les
add
pop
add
mov
test
cmp
sbb
in
lea
cwtl
in
dec
add
jnp
pop
add
jae
jo
out
mov
add
add
mov
pcmpeqd
es
fiaddl
add
xor
and
add
add
push
add
add
int
lock
pop
mulb
pop
adc
add
add
jns
in
jo
out
inc
add
jecxz
jle
xchg
mov
add
xchg
adcb
rorb
je
loopne
add
sub
popf
sub
sbb
mov
adc
dec
add
mov
add
fimull
cmp
add
imul
sub
lods
add
das
pop
lahf
cld
pop
sub
push
add
subb
add
xchg
clc
or
add
call
pusha
add
inc
test
cwtl
imul
ret
dec
add
addr16
leave
std
dec
scas
or
repnz
ja
add
mov
push
add
ret
or
push
add
jbe
add
mov
mov
mov
fsubrs
or
add
sahf
into
test
rcll
push
add
xchg
jnp
mov
cmpb
add
jmp
emms
mov
add
xor
jb
inc
mov
cmpsl
jns
add
xchg
add
loopne
pusha
add
imul
add
fucomip
adc
data16
mov
das
imul
push
xchg
data16
repz
mov
add
xor
aam
lahf
xchg
movsl
dec
add
sbb
fstl
add
stc
repz
dec
test
push
add
dec
add
stos
xor
jle
pusha
add
in
mov
dec
add
mov
hlt
pop
add
pop
xlat
adc
sub
imull
sbbl
and
xchg
xor
shl
mov
add
pop
add
addr16
clc
popf
fsubrl
pop
dec
add
and
mov
inc
mov
push
or
shr
push
push
add
add
cmp
add
leave
mov
adc
fs
mov
or
fwait
mov
mov
mov
ljmp
dec
inc
add
xchg
push
add
cmp
add
add
test
jg
add
dec
add
lods
jbe
push
arpl
add
mov
add
mov
inc
in
shl
mov
mov
enter
mov
add
add
xor
add
push
add
jns
imul
add
xor
inc
add
imul
add
fsubl
push
add
mov
pushf
popf
pop
adc
add
cmpsb
push
add
popf
cmpsb
fisubrs
push
add
dec
in
or
dec
mov
dec
add
add
add
adc
outsl
xchg
call
add
add
mov
jae
outsb
add
mov
add
into
jmp
les
das
test
scas
or
in
xor
or
dec
add
add
lods
cmp
stos
in
test
pop
int
mov
add
or
repz
push
or
incl
xorb
cli
scas
adc
add
add
ret
mov
push
pop
test
add
int3
jmp
pop
add
imul
subl
push
ret
add
test
add
push
add
push
fwait
sahf
das
cltd
mov
add
add
jno
add
inc
add
add
scas
test
sbb
mov
xlat
jmp
mov
insl
mov
xor
cmp
mov
xchg
adc
fists
add
lds
loopne
adc
add
pop
shlb
sbb
dec
add
add
pusha
add
add
cli
neg
xorl
push
cltd
outsb
add
sub
nop
aas
jo
leave
jo
cmp
stos
out
xchg
ret
inc
add
pop
add
dec
add
daa
xchg
add
add
add
out
stc
iret
cmpl
pusha
add
mov
into
fmull
je
sub
mov
out
or
mov
add
into
and
cli
cmp
sub
pusha
add
add
add
jb
push
fdivl
add
push
mov
or
or
js
mov
cld
xor
mov
sbb
add
aaa
dec
data16
lea
xchg
add
add
push
add
gs
add
lea
ret
pop
jne
sbb
add
inc
inc
add
popf
pop
nop
lahf
adc
mov
test
mov
loop
push
add
add
cmc
pop
in
dec
cmp
lods
int3
pushf
lahf
sbb
mov
add
add
stos
mov
add
add
jae
mov
pop
or
mov
jae
add
cmp
add
add
fcomps
mov
dec
add
lahf
xchg
sahf
mov
jmp
rorb
xchg
add
rorl
or
jo
adc
add
sbb
add
pop
xchg
sahf
scas
cli
cwtl
mov
stos
push
cmp
dec
sub
mov
add
sbb
test
fstps
adcl
or
add
and
dec
add
into
subb
cmp
add
lds
add
shrb
adc
data16
add
push
adc
or
dec
add
xchg
outsb
add
xchg
pop
adc
leave
mov
jg
cld
or
ljmp
add
sub
imul
out
popa
or
dec
add
push
add
add
inc
repz
outsl
xchg
cmp
add
push
add
push
add
rcl
pop
add
add
hlt
add
dec
rolb
sbb
mov
xor
jne
add
pop
add
pop
add
out
or
pop
push
mov
add
push
fsts
hlt
push
add
add
add
mov
add
test
ja
fsubrl
add
movsl
gs
pop
add
sbb
inc
xlat
andb
mov
data16
inc
add
add
add
add
mov
icebp
adc
daa
iret
jecxz
fbstp
pusha
add
test
add
and
dec
push
dec
add
and
push
add
lea
cli
dec
jmp
xor
test
add
popf
mov
add
cmp
mov
push
mov
orl
jecxz
mov
lock
xlat
xor
or
loopne
pop
add
cmp
jns
dec
les
add
and
add
pop
mov
stos
dec
add
or
mov
add
inc
inc
ficoml
dec
add
xlat
push
add
nop
and
add
add
pop
add
not
inc
add
add
test
jno
dec
add
sub
jle
mov
xchg
inc
add
scas
scas
out
add
add
cmp
add
add
iret
stc
mov
out
rcrl
lcall
add
gs
xor
dec
or
aam
scas
jb
or
das
adc
push
cmc
dec
add
out
xchg
add
popa
js
adc
neg
aas
outsb
add
add
and
and
mov
add
xor
add
pop
add
cmp
and
repz
add
notb
lret
xchg
ljmp
arpl
inc
leave
pusha
add
add
data16
int3
jp
mov
add
add
test
aad
pop
mov
push
add
test
pusha
add
enter
cltd
adc
sti
rcr
jbe
test
xchg
sarl
or
add
stc
call
add
ja
mov
push
add
add
popa
jle
push
dec
add
adc
dec
add
pop
add
jle
mov
add
adc
fcmovnbe
iret
cmc
nop
xor
xor
dec
lods
jg
mov
sub
nop
aaa
and
dec
add
sub
add
jno
dec
pop
data16
lret
ja
jnp
pushf
push
add
test
scas
ficoml
mov
ror
gs
add
add
js
adc
add
add
add
fnstsw
cmpsb
les
inc
movsl
xchg
dec
es
in
adc
push
add
das
cmpsl
add
leave
sbb
cltd
push
pop
add
pop
lret
test
pop
cld
ja
push
add
xor
cmpsb
lods
inc
add
sbb
xchg
mov
add
mov
add
lahf
jl
into
pop
add
jg
neg
fstpt
add
push
daa
dec
dec
add
cmp
add
mov
aad
adc
mov
andb
mov
sub
adc
mov
inc
repz
fs
mov
in
xchg
push
add
add
lds
add
mov
shr
and
mov
xchg
add
lea
sub
int
dec
jbe
insb
add
push
add
add
imul
add
scas
add
sbb
lock
cmp
cmpsb
loop
add
jns
adc
and
add
jns
imul
jg
loop
push
cmp
jns
add
imul
add
or
pop
mov
les
add
cmpsb
loop
push
add
pusha
add
mov
mov
add
push
add
fwait
lcall
mov
mov
mov
ror
mov
add
add
scas
test
mov
add
cmp
mov
add
sub
shll
add
dec
add
xor
add
add
inc
add
and
add
xchg
fimull
and
loope
rorl
add
stc
movsb
lret
pop
inc
sbb
sub
negb
sub
mov
add
mov
test
arpl
cmp
cmp
sub
cltd
fcoml
call
inc
gs
add
cmp
data16
add
testb
add
add
fistl
sub
sub
dec
add
add
insl
std
cmp
cmp
shl
fdivrl
add
sub
add
or
mov
cvtpi2ps
ja
pop
add
mov
in
test
add
jno
lahf
push
add
pushf
fcmovnbe
fmulp
push
add
xlat
sar
pop
add
adc
mov
inc
jp
pop
inc
add
out
aas
test
add
leave
xchg
pop
add
cmp
adc
es
or
fadds
cltd
enter
test
adc
dec
jne
or
mov
shrb
add
mov
sub
jo
xchg
adc
push
add
or
add
ror
jle
rcrl
lahf
iret
jp
adc
test
inc
push
add
fdivs
psrlw
xor
add
cmc
js
fwait
lret
xor
pop
add
jge
jns
dec
add
inc
add
mov
or
cmpsb
adc
syscall
sbb
push
add
movsb
xor
dec
add
jo
movsb
sti
or
xchg
xor
dec
add
dec
add
add
add
cli
sub
cmp
jge
movsb
repnz
add
jmp
ja
stos
mov
cmp
xor
push
add
jae
mov
add
add
add
es
les
lods
out
push
add
xchg
stc
addb
sbb
sub
out
add
daa
insb
add
nop
daa
fisubs
inc
add
popl
add
or
push
add
add
shll
add
inc
xor
jnp
add
pop
clc
fcmovu
sub
mov
add
divl
add
xchg
and
into
mov
add
icebp
out
add
add
push
insb
add
sahf
rorl
add
scas
cmp
lea
dec
add
jmp
ljmp
ret
jle
or
insb
add
aam
movsl
in
das
pusha
add
add
call
scas
test
dec
push
add
les
aas
mov
adc
pop
inc
add
test
pop
push
add
pop
add
xor
cmp
xor
arpl
dec
es
jno
lea
mov
nop
sub
xchg
xor
cmpsl
inc
test
jbe
imul
push
add
scas
cltd
out
int3
cmp
insl
adc
mov
add
out
mov
mov
sbb
aaa
pop
add
sbb
xorb
and
xor
fiadds
cld
enter
in
sbb
pop
aad
push
add
add
mov
cmp
dec
and
mov
add
fistl
imul
add
sbb
mov
push
decl
lds
daa
mov
adc
dec
dec
add
mov
std
mov
jns
push
add
stos
cld
jecxz
push
add
sbb
sub
sub
rolb
add
pusha
add
inc
sahf
rcrl
outsb
add
push
add
xchg
sarl
sahf
adc
loope
pop
jmp
int3
cmp
add
add
pop
add
aam
xchg
adc
sahf
or
cmp
jg
add
pop
dec
popa
aam
add
cmp
imul
pop
jecxz
pop
add
and
and
cld
push
add
sub
mov
xorl
add
into
xlat
sub
pop
add
mov
xor
push
and
xchg
ret
add
popf
inc
add
inc
sub
lcall
das
das
jge
add
add
inc
add
mov
add
shl
dec
or
lret
cli
sub
rorl
xor
inc
add
cwtl
popf
and
sahf
js
pop
mov
and
scas
cmp
xor
add
push
jmp
mov
push
add
dec
push
add
dec
aam
cs
lods
int3
addr16
sarl
sub
cmp
jecxz
add
mov
imul
pusha
add
stos
push
leave
pop
add
jmp
mov
mov
dec
xchg
and
pop
add
add
pop
jg
cmp
cwtl
xor
cltd
out
xchg
ja
das
js
je
adc
add
fdivr
dec
xor
push
add
outsl
lock
sub
sub
outsl
in
fsts
sbb
add
ja
pop
add
cli
insb
add
insl
js
inc
add
int3
pop
outsb
add
add
int3
jl
leave
jmp
cmp
sbbl
fisttpll
push
add
inc
mov
add
adc
pop
xor
mov
add
add
sbb
add
aam
add
shr
add
xchg
outsb
add
add
adcl
add
mov
dec
std
add
mov
add
aad
cltd
cli
xchg
add
in
xor
add
pop
add
les
lods
fsubp
cmp
sbb
cli
push
pushf
pushl
insl
lcall
add
adcl
pushl
jg
add
outsl
cmpsb
xor
add
push
dec
sti
shrb
push
add
jo
mov
xchg
jns
pop
add
xor
pop
inc
add
xor
lret
add
scas
pushf
lods
pop
add
or
sbb
loop
fs
dec
mov
sub
mov
hlt
mov
sbb
lret
cmpl
add
outsl
inc
mov
push
add
add
out
incb
add
insl
stos
push
ret
ret
data16
push
add
movsl
movsl
jp
mov
add
pop
add
mov
sbb
pusha
add
xor
rcl
adc
pop
ret
push
orl
sbb
add
clc
jb
xchg
out
and
push
mov
add
shll
pop
mov
xchg
insb
add
xchg
and
mov
push
add
cmp
mov
stos
inc
add
dec
jne
inc
add
add
dec
jmp
inc
testl
enter
sbb
xchg
repnz
push
dec
inc
mov
adc
mov
stc
ds
dec
lret
push
add
dec
roll
dec
add
add
dec
or
add
movb
and
add
add
add
addr16
mov
daa
and
dec
xchg
xchg
int
or
sub
add
xor
mov
mov
leave
fs
mov
add
add
add
xchg
mov
fldenv
pushf
pop
pinsrw
test
aam
add
add
dec
int
xorb
add
stos
sbb
dec
add
sbb
imul
xor
add
jge
addl
push
negb
pop
add
lahf
call
bound
mov
add
add
inc
sub
cmp
insb
add
jp
dec
push
add
fwait
stc
popf
push
add
sub
cli
adc
mov
mov
add
jne
add
mov
sbb
inc
add
lcall
add
in
push
dec
adc
dec
add
push
add
jg
add
cli
adc
mov
sub
or
inc
add
jb
lods
mov
sbb
repz
scas
dec
add
add
add
add
and
add
push
add
sub
stc
xchg
xchg
lret
outsl
cmpsb
sbb
add
push
dec
add
leave
in
add
and
stos
lods
push
add
sub
ja
jmp
add
in
js
mov
pop
add
sub
lahf
ljmp
add
jmp
jbe
addl
add
ja
dec
add
add
mov
mov
in
dec
dec
add
shr
test
lret
int
pusha
add
hlt
xchg
ret
add
adc
rol
pop
jecxz
out
mov
movsl
push
add
push
ds
not
cltd
mov
jmp
repz
cwtl
cli
cmp
jb
bound
imul
add
mov
mov
add
rcrb
stos
ret
pop
dec
add
cmpl
mov
jg
pusha
add
add
sub
mov
aad
call
add
add
jno
jmp
sub
shr
mov
add
cmp
popa
loop
mov
inc
add
add
add
add
cwtl
add
add
add
movsb
in
add
push
adcl
test
insl
mov
imul
add
cmp
ss
dec
add
push
add
sbb
adc
fldt
rorb
mov
nop
das
xor
dec
add
jbe
add
lea
adc
jno
add
testl
adc
ja
add
push
outsb
add
shlb
lods
xchg
ja
push
add
add
add
mov
cmp
setb
popf
adc
loope
aaa
add
das
fldl
cmp
add
mov
pop
xchg
mov
xlat
sbb
add
inc
data16
inc
mov
fisttpll
into
stos
fsubrs
sti
insl
sbb
inc
add
std
mov
lds
add
add
inc
add
add
arpl
push
aam
enter
rcll
daa
jmp
add
aam
add
and
dec
loopne
jns
add
dec
add
xrelease
add
mov
or
aam
out
add
aam
xor
cwtl
cltd
xchg
pop
add
add
add
jmp
in
and
lock
in
inc
imul
stos
pop
pop
outsb
add
jae
add
jg
add
loope
add
jb
ja
adc
jecxz
flds
out
xor
dec
add
add
fidivrl
mov
imull
dec
add
cmc
inc
lret
int
add
add
add
pop
jbe
lahf
push
add
add
add
xchg
call
test
mov
movsb
pop
orl
pushf
out
or
dec
test
loopne
add
xor
scas
clc
adc
das
push
add
add
ljmp
divl
add
int
mov
imul
add
jo
mov
pop
add
add
cld
cld
dec
movsl
push
add
add
sub
cmp
xlat
loopne
push
add
add
pop
jp
rorb
jecxz
cmp
xchg
jae
add
iret
in
push
add
add
or
hlt
mov
scas
mov
mov
in
and
pop
xor
push
add
push
add
lret
fstpl
inc
add
mov
jle
push
add
jae
cltd
je
mov
add
lods
sbb
scas
xor
pop
add
into
cmpsb
add
xchg
add
push
push
pop
add
jl
in
inc
adc
adc
test
in
cli
ss
test
mov
adc
add
add
push
add
jo
out
xchg
fcoml
add
loopne
add
push
add
out
jbe
mov
add
add
fwait
popa
sbb
outsb
add
sbb
dec
add
call
hlt
inc
fadd
xchg
jmp
add
xchg
mov
xor
xchg
mov
stos
inc
lock
cwtl
mov
jnp
adc
fdiv
xchg
sub
push
aam
add
aas
push
mov
add
andb
add
add
add
icebp
push
jmp
pop
mov
out
dec
add
sub
and
mov
push
add
jae
add
or
dec
and
and
add
push
add
dec
lret
xchg
loop
insb
add
test
mov
sbb
movb
add
daa
testl
jmp
insb
add
add
jl
fcoml
clc
cld
push
add
add
and
imulb
int
lret
mov
xor
mov
add
or
rcrl
aas
stos
lods
lcall
jp
adc
fidivs
lcall
fs
js
xor
pop
add
add
lods
jns
jae
nop
inc
add
or
xor
cmp
inc
add
int3
cld
lods
outsb
add
jb
cmp
add
rcrb
add
add
mov
xor
add
add
add
out
leave
mov
xor
jno
xchg
into
in
inc
xchg
dec
fdivrl
pop
iret
cltd
sub
add
jnp
repnz
outsb
add
ljmp
popf
in
loopne
das
xor
pop
pushl
mov
hlt
pop
popa
sti
and
sub
mov
add
loope
add
gs
test
add
inc
aaa
imull
pop
cmpb
add
dec
into
cmp
xchg
pop
int3
and
and
jmp
outsl
xchg
xchg
mov
add
iret
sub
flds
cld
loop
out
add
add
pop
or
cli
and
repz
or
add
cmpsl
in
sarl
jnp
dec
add
add
movsb
sbb
add
xchg
jg
xchg
jno
lret
out
or
add
xchg
or
add
add
add
fdiv
xor
dec
outsl
pop
jecxz
mov
dec
pop
dec
add
add
in
jne
add
stc
pop
push
rclb
jo
icebp
xchg
data16
jae
sub
dec
add
imul
nop
clc
pop
add
add
add
loop
add
rcll
pop
add
push
add
add
enter
test
sub
mov
insb
add
xchg
push
add
das
sbb
test
aaa
jnp
stc
sbb
add
push
add
popa
testb
lahf
test
inc
add
mov
add
stc
cmp
lock
xchg
sbb
sub
ret
inc
add
fdivr
test
add
push
add
test
add
or
js
add
and
inc
add
jbe
adc
xchg
push
add
inc
jmp
jle
lock
cmp
mov
cwtl
roll
mov
mov
stos
cmp
test
add
or
pop
adc
and
xchg
rorl
iret
ret
and
jb
add
hlt
std
fcoms
jl
inc
add
ljmp
add
add
les
or
add
inc
add
loopne
cmc
data16
add
lods
mov
add
add
xchg
cmp
add
movsl
ja
pop
loope
add
add
fcomps
pop
add
cmpsb
flds
je
jg
add
pop
add
mov
popf
in
push
jg
cld
and
sub
mov
add
inc
jbe
jo
push
add
jle
jne
add
add
loopne
les
lock
xchg
rcll
xor
insl
fisttpl
mov
js
icebp
lock
jno
or
mov
lods
add
push
add
insb
add
rcll
add
lret
sbb
ret
dec
stos
lods
jge
fldcw
add
jg
ficoml
adc
push
or
xor
dec
mov
ficoms
inc
add
outsb
add
add
mov
push
or
enter
or
add
xchg
dec
push
pop
add
xor
hlt
cmp
jge
xor
cltd
sahf
jecxz
cmp
jns
inc
add
add
push
push
add
adc
inc
adcb
add
add
test
repnz
and
sahf
loop
push
daa
les
sahf
push
xlat
lock
cld
mov
mov
loop
test
js
dec
add
aad
fst
xchg
dec
repnz
leave
jb
into
mov
add
jne
mov
int
push
add
hlt
mov
shll
add
mov
stos
int3
mov
pop
and
add
jae
sbb
ret
cs
sub
mov
cmp
mul
push
jae
add
jbe
add
mov
push
fdivrl
imul
add
sbb
push
in
es
sub
cwtl
inc
add
inc
add
add
les
sub
leave
cwtl
test
add
add
mov
inc
fdivrs
add
stos
cmp
inc
add
div
pop
lcall
add
add
fimuls
push
pushf
xor
hlt
inc
xorl
aas
cwtl
cmpsl
mov
add
ret
outsl
mov
gs
push
add
rcrl
sbb
int
insb
add
add
add
add
cmp
int3
lods
dec
add
add
std
sti
and
xlat
mov
add
jmp
jnp
les
add
mov
rcll
xchg
int3
sbb
add
roll
notb
mov
repz
push
data16
pop
stos
xor
mov
xor
pop
shll
mov
lcall
in
add
mov
enter
add
sub
sub
popf
cli
out
dec
outsl
dec
add
add
test
mov
jp
and
aam
add
cli
push
jge
add
add
icebp
ret
std
inc
add
dec
add
add
add
cmpsl
call
inc
jl
or
mov
sbb
mov
add
xchg
repnz
hlt
pop
push
add
add
adcl
add
rcrl
mov
add
pop
jne
push
enter
dec
ror
add
add
lock
lahf
cwtl
xchg
int
mov
or
sbb
jno
add
cmp
js
push
adc
and
inc
jnp
pop
add
shr
data16
and
xchg
out
xor
call
fdiv
xor
push
add
cmp
dec
lods
inc
add
sbb
mov
add
repnz
add
add
orl
xor
add
test
mov
pop
add
loope
push
add
pop
add
imul
mov
push
add
add
movsl
mov
movsb
add
call
lcall
cmp
cli
xchg
jg
add
daa
outsb
add
xchg
add
add
mov
enter
lret
inc
add
or
and
push
add
push
add
jge
jmp
add
pusha
add
idiv
jns
shll
jg
add
xchg
xchg
in
pusha
add
hlt
sbb
std
jp
stos
test
orl
or
lea
add
xchg
and
out
add
add
dec
xor
dec
sbb
mov
lret
cmpsb
push
add
add
add
sbb
pop
add
add
jnp
add
ss
add
xlat
mov
jbe
and
lods
push
add
add
cltd
mov
data16
into
scas
adc
inc
add
out
pop
dec
pop
xor
jl
in
add
add
add
adc
in
add
add
xchg
stc
add
orb
cli
cwtl
adc
int3
push
lds
mov
add
add
adc
lret
add
dec
ds
dec
add
pop
or
das
dec
add
dec
pop
jl
int3
mov
add
scas
lds
fwait
jecxz
mov
jno
ret
popa
or
ljmp
add
cmc
inc
add
add
lret
das
xchg
jge
add
loop
inc
sar
add
icebp
lods
into
in
mov
fdivr
movb
jb
mov
data16
jl
mov
ljmp
add
sub
adc
mov
mov
inc
adc
add
jmp
and
out
rorb
add
movsb
in
add
add
shlb
aaa
lret
add
jbe
mov
add
popa
je
out
daa
inc
add
mov
daa
lret
and
fimuls
pop
add
add
sub
add
mov
add
sub
ror
inc
add
adc
jns
in
shl
rorb
jmp
adc
xor
add
roll
adc
sub
mov
add
mov
add
sub
subl
fiadds
add
dec
add
test
cmpsb
in
push
add
pop
mov
movsl
pop
std
inc
cmp
xchg
add
arpl
data16
fucomip
jae
cmp
add
jne
adc
pop
xchg
scas
leave
testl
shll
add
add
loope
dec
add
add
add
add
cmc
sub
stos
fistl
fsubs
add
push
add
add
add
jbe
push
add
inc
frstor
mov
nop
mov
hlt
pop
cld
ret
dec
sub
mov
std
repnz
cmc
jg
mov
inc
add
cmpsb
inc
add
xchg
mov
sub
push
dec
mov
pop
add
xor
sar
cld
jle
inc
add
out
add
add
inc
mov
cmc
mov
sub
shl
mov
cltd
pop
fwait
push
add
jbe
mov
stc
pop
add
and
add
push
add
add
lods
insl
out
jl
xor
and
sub
add
xchg
iret
lods
mov
sub
lret
push
add
add
sahf
pop
sahf
push
outsl
loop
mov
add
lret
and
ja
add
leave
addr16
jg
ret
loopne
adc
leave
mov
xchg
in
nop
sub
cmp
cmc
add
int3
cmp
cmp
loopne
cld
add
xor
mov
add
arpl
jbe
in
adc
sub
repz
add
fs
add
xchg
xlat
pusha
add
add
xor
and
add
stos
call
sti
loopne
fldcw
mov
div
push
adc
lods
ret
jo
mov
pop
sub
ret
push
and
into
ret
lock
inc
add
fcoms
xchg
or
ret
aas
stos
mov
dec
clc
fwait
sub
aas
aad
add
mov
call
sahf
pop
add
pop
add
add
mov
push
add
test
sub
mov
add
pop
outsb
add
add
adc
add
add
add
add
subb
xor
dec
add
inc
add
add
pop
add
inc
dec
dec
add
movsl
xor
pop
cmpl
loope
test
shlb
cmp
cwtl
and
loopne
out
int3
sub
jnp
scas
mov
xor
scas
in
add
add
shr
xchg
dec
add
scas
inc
jb
int
adc
jno
sub
mov
xchg
popf
pop
jl
xchg
clc
xor
jo
mov
mov
cmpsb
cs
rcr
js
mov
adc
push
add
mov
add
mov
push
add
icebp
pop
leave
jo
xor
add
jmp
xor
push
bound
fisubl
pop
roll
cmc
lods
mov
xchg
add
cmp
add
add
jo
push
aam
add
mov
sub
pushf
gs
add
add
push
add
push
pusha
add
add
shl
jecxz
repnz
lcall
pop
inc
add
out
cmp
lods
sti
add
call
inc
cmp
add
lret
sbb
dec
add
jp
ret
stos
test
loope
icebp
rcr
lods
push
sub
add
inc
add
test
lea
add
popf
enter
add
add
adc
mov
notb
add
mov
enter
pop
add
bound
imul
xor
ret
fidivs
pop
cmp
popf
cmp
aaa
hlt
inc
mov
js
sti
adc
add
add
adc
sti
int3
add
inc
jb
jmp
jmp
aam
loop
add
cmp
push
add
in
add
pop
add
add
gs
mov
sbbl
push
add
sbb
add
or
lcall
pushf
clc
sub
in
ret
add
or
int3
or
jle
test
add
mov
add
push
add
push
add
mov
pop
in
and
movsl
jnp
mov
add
add
xchg
xchg
push
add
les
sub
into
pushf
jl
inc
add
int3
leave
int
add
xchg
xor
cwtl
mov
lods
pop
add
mov
add
jg
add
push
add
leave
push
add
xchg
nop
outsb
add
add
add
inc
add
add
xlat
cmc
pop
pop
add
stos
xchg
inc
cltd
dec
xchg
mov
mov
loopne
mov
leave
adc
ljmp
jmp
add
mov
dec
add
push
add
or
mov
int3
add
pop
add
jae
cwtl
add
fisubl
dec
add
cld
sub
repz
add
jmp
leave
or
add
divl
lcall
push
add
loope
push
add
fnstenv
add
mov
add
xor
jecxz
enter
add
dec
jmp
das
and
adc
add
add
lcall
int
lods
push
xchg
sbb
add
mov
dec
xchg
sub
or
adc
xor
mov
pusha
add
push
aaa
xchg
add
movsl
insb
add
add
in
jg
fwait
or
jb
sbb
mov
add
add
add
cmc
push
add
sub
add
push
add
and
cmp
mov
sbb
popl
loope
cmp
push
pushf
stos
pop
add
add
cmovno
lea
add
add
jecxz
add
bound
ljmp
mov
lret
lret
mov
add
push
dec
add
test
mov
cmpl
add
push
add
cltd
jne
cmp
xchg
pop
add
adc
in
sub
ljmp
mov
add
cmp
add
les
push
add
je
out
xor
fdivs
adc
push
cld
add
jecxz
dec
nop
movsl
xor
xchg
ljmp
rolb
jbe
imul
pusha
add
ficomps
add
rorb
dec
lods
aad
add
pop
add
lret
cltd
xchg
add
push
add
add
into
xlat
inc
add
add
and
add
loopne
loope
jae
je
sub
add
xorl
xlat
xchg
imull
pop
imul
sbb
adcb
dec
add
and
data16
lcall
mov
add
cmpsl
test
xlat
mov
xchg
sarb
mov
enter
cmp
int3
inc
add
ja
aam
in
in
or
sbbl
jge
pop
add
pop
inc
add
add
mov
enter
add
xchg
mov
add
add
dec
sar
add
jp
pusha
add
push
add
lods
add
and
sub
ret
scas
pop
sbb
loop
add
scas
iret
fwait
andl
js
mov
stc
xor
rcr
mov
add
stos
repnz
add
adc
test
mov
jb
cmpsb
lock
clc
popa
and
add
xor
neg
or
push
std
xchg
out
cmpsl
push
add
push
movsb
cmp
mov
add
sub
jp
add
add
jmp
loope
add
imul
hlt
fdivrs
mov
push
add
pop
add
aam
jmp
enter
xchg
std
cli
mov
add
jns
add
add
add
mov
add
dec
pop
nop
and
scas
dec
fcoms
xchg
ds
scas
jnp
popa
nop
or
lods
mov
add
push
and
add
out
dec
sub
xchg
push
add
sub
dec
lcall
add
add
push
add
pusha
add
push
add
or
rclb
mov
popf
std
xlat
fwait
popl
jnp
adc
scas
and
or
jmp
loope
dec
add
mov
jg
and
xchg
dec
call
mov
cmpl
mov
cmp
in
in
push
add
pop
cmp
mov
packsswb
mov
stos
mov
in
insb
add
mov
sub
add
pop
rcrb
test
insb
add
push
add
mov
fdiv
aas
out
xor
adc
add
sub
nop
clc
incl
add
rcr
inc
add
testl
mov
add
sbb
mov
call
ret
in
xchg
aas
jo
dec
fbld
aam
add
pop
push
cmp
mov
or
jbe
jp
pop
ucomiss
sub
or
in
sub
add
jbe
cmp
lret
pop
lcall
loop
fildl
add
pop
add
lcall
jl
or
lds
xchg
mov
add
das
iret
ret
jne
rol
add
add
test
dec
add
add
add
add
jbe
mov
int3
out
insl
or
jg
leave
pop
or
ret
clc
mov
mov
arpl
fdiv
mov
sbb
cmp
insb
add
movsb
ljmp
jle
ficoms
add
mov
add
enter
cli
pop
add
shrb
mov
dec
add
cmpb
inc
add
push
and
movb
pop
inc
add
cld
sbb
push
add
or
sbb
xor
call
add
ljmp
jmp
test
cmp
or
lea
andb
andl
add
dec
add
add
add
add
xor
inc
sub
dec
add
inc
add
add
mov
add
or
fwait
cltd
insl
mov
bound
sbb
dec
sub
imul
outsb
add
cld
pushl
add
add
das
cmp
ss
lret
in
dec
add
add
add
pop
add
mov
mov
andl
jns
enter
add
and
lahf
cmp
add
test
xor
in
add
lds
add
adc
mov
add
mov
sub
sahf
insb
add
add
mov
inc
in
out
dec
add
pop
jbe
or
sub
or
add
subl
mov
adc
ret
std
mov
add
add
add
add
push
or
xchg
roll
add
pop
add
inc
add
and
pop
add
add
cmp
xchg
jno
and
pop
in
pop
adc
sbb
adc
movsl
mov
jmp
jl
cmpsb
out
add
sarb
mov
roll
sub
das
sbb
lret
inc
add
loopne
inc
add
pusha
add
add
or
repz
lods
xchg
lock
ss
iret
jle
jl
mov
pop
add
in
jecxz
fcomp
mov
pushf
in
aam
mov
pop
rorb
popa
push
add
iret
cmc
icebp
inc
add
xor
mov
in
sarb
test
mov
orb
xchg
sub
sbb
add
add
stos
pop
add
add
adc
adc
sub
add
add
cmc
inc
mov
arpl
mov
mov
pop
add
cmp
pop
add
mov
add
sub
mov
sub
out
push
add
scas
adcb
adc
icebp
scas
cmp
add
jo
or
xchg
xor
idivb
adcb
add
add
mov
and
or
lds
add
xor
add
dec
add
jne
into
clc
xor
outsl
imul
mov
add
push
add
icebp
movl
jp
outsl
nop
inc
push
inc
std
adc
adc
push
add
insb
add
fistpll
add
aaa
sub
and
insb
add
shrl
jb
hlt
mov
pop
add
scas
aad
popa
ret
jle
mov
outsb
add
add
sbb
mov
sub
pop
push
add
add
push
inc
adc
andb
add
gs
mov
or
inc
in
xchg
arpl
jle
movsl
xchg
sub
xor
cmp
mov
add
pop
or
jge
add
mov
out
or
scas
sbb
mov
add
mov
add
or
add
sbb
jae
mov
add
add
stos
push
add
add
and
decb
xchg
mov
push
and
add
bound
out
fdiv
mov
insb
add
mov
pop
add
or
bound
xor
or
fldenv
addr16
add
sub
jecxz
xchg
mov
xchg
or
pop
add
jnp
push
add
leave
push
add
dec
add
daa
xchg
xchg
xchg
faddl
test
ficompl
mov
add
pop
pop
add
arpl
dec
mov
xor
and
into
addr16
add
pop
push
pop
add
cmp
mov
pop
ret
pop
inc
ds
inc
pop
pop
lret
int3
dec
add
aaa
out
push
andl
mov
pop
jg
pop
cli
out
sub
add
adc
mov
and
add
cmp
enter
dec
int
dec
add
bswap
scas
out
add
sub
ret
jmp
mov
test
add
jl
rorb
pop
add
fsubs
outsb
add
jl
aaa
jl
shll
mov
mov
test
stos
jb
xchg
loopne
lcall
in
add
ja
nop
push
mov
cmpsb
fcmovnbe
das
dec
in
add
or
xchg
jnp
add
daa
rorb
and
inc
add
repz
push
fadds
lods
fsubrl
add
inc
pop
add
pop
cmp
add
push
add
jns
inc
add
add
pop
add
add
mov
add
sti
jmp
jb
leave
mov
cmc
mov
sub
subb
mov
add
fcomp
ret
xor
cld
shll
xor
mov
dec
sub
jp
add
adc
or
scas
sarl
cmp
add
imul
dec
out
mov
test
mov
imul
add
xchg
or
jmp
mov
int3
mov
clc
dec
call
inc
add
xor
add
rorb
out
lahf
leave
shl
mov
jecxz
add
sub
mov
cmp
add
add
inc
or
cld
and
jg
inc
and
jmp
dec
popf
pop
clc
clc
mov
roll
push
add
xor
add
shrb
in
sub
xchg
xchg
nop
cmp
adc
cli
jmp
mov
outsl
fwait
mov
adcb
adc
xor
pop
jne
sub
aas
sub
add
push
add
bound
test
add
aam
mov
mov
add
cs
mov
add
fldcw
add
push
cmc
adc
add
decl
pop
adc
shll
add
lea
jae
add
data16
cmp
les
mov
les
lret
cmp
lds
add
add
mov
xchg
popf
jl
movsb
cltd
adc
lcall
push
add
add
xor
add
mov
enter
lds
lret
or
aas
rcl
push
add
add
mov
add
movsb
mov
add
add
cltd
out
xchg
add
sbb
add
xchg
out
sbb
imul
jb
std
ret
jnp
add
cmpb
xor
and
add
cmp
pop
add
mov
dec
add
rcl
push
add
add
cmp
sbb
scas
or
or
xor
xchg
mov
mov
xchg
pop
clc
lods
scas
jnp
xor
out
pop
out
push
stos
xchg
aaa
test
cmc
fldl
mov
icebp
das
orb
test
repz
test
add
iret
push
add
or
push
add
sbb
leave
inc
add
xor
add
cmpb
add
lods
push
add
add
andl
mov
inc
outsl
jle
daa
sbb
mov
add
inc
add
add
or
inc
add
sbb
inc
es
push
add
loop
xchg
add
leave
adc
mov
fnstcw
add
sub
imul
mov
add
imul
ret
test
fidivs
dec
pusha
add
add
add
push
add
or
pusha
add
add
nop
add
shlb
in
or
cltd
imul
and
mov
cmp
add
clc
and
std
out
imul
cmpsb
js
dec
cmc
xchg
sahf
incl
rep
lret
shlb
fdivr
push
add
add
add
push
add
mov
fmull
sbb
cwtl
subl
ficomps
add
xchg
cmp
or
jp
jnp
xor
or
dec
lahf
or
add
subl
inc
data16
int3
jge
sub
and
ja
loope
sbb
rol
dec
add
data16
aad
scas
dec
add
dec
iret
rclb
subl
add
dec
mov
mov
pop
add
xchg
add
jne
test
fdivl
std
mov
add
out
add
lods
dec
fnsave
out
iret
bound
ficomps
jmp
xor
ss
add
xor
aaa
bound
xor
add
pop
add
jl
gs
add
add
jne
sbb
insl
in
add
add
gs
add
add
mov
add
adc
mov
add
add
mov
jg
add
add
je
stos
xlat
out
in
stos
sbb
mov
mov
sub
add
cld
rcrl
push
add
add
push
ret
shlb
loop
sti
and
mov
enter
xchg
jno
mov
add
dec
add
bound
jg
mov
add
sar
pop
add
jg
add
sub
pop
fnsetpm(287
pop
add
add
push
sbb
add
hlt
push
add
push
push
adc
add
sbb
add
icebp
inc
insb
add
sar
sbb
int3
sub
fdiv
jns
xor
notb
add
add
sub
xchg
ja
inc
add
testl
add
add
mov
and
mov
pop
leave
push
add
mov
cli
jnp
add
cli
cmpsl
adc
negl
ss
popa
call
stos
out
push
add
mov
add
add
add
sbb
fisubs
or
jb
mov
inc
out
jmp
add
push
add
cmp
fnstcw
add
sbb
mov
dec
add
sbb
add
loopne
sahf
mov
sbb
popf
cmp
jbe
xlat
nop
cmp
dec
add
or
add
fsubrl
add
pop
add
add
dec
loopne
jbe
push
fdiv
sbb
add
popf
xchg
add
add
sub
and
pop
or
xchg
pop
insb
add
mov
lds
dec
mov
add
add
add
test
mov
loop
dec
in
add
add
add
mov
out
cmp
dec
sub
insl
pop
mov
xchg
mov
add
cmpsb
sbb
add
clc
scas
jmp
jbe
cmpsb
lret
leave
inc
andb
fdivr
ret
adc
inc
add
pusha
add
stos
repnz
stos
push
add
mov
add
and
sbb
lods
mov
add
pop
add
add
shll
add
int3
sbbb
add
nop
push
add
add
dec
add
mov
push
or
dec
fwait
jnp
sti
sahf
push
add
sbb
jl
les
inc
cmc
lds
or
add
add
std
movsb
movsl
ret
pop
jg
fisubrs
add
add
repz
in
push
add
push
and
xchg
outsb
add
and
add
push
xor
mov
gs
jle
mov
fisubs
adc
cmp
int3
lock
movsb
inc
shlb
rorl
int3
or
add
push
pushf
push
inc
add
sbb
testb
mov
pusha
add
out
insl
and
push
dec
xchg
xchg
icebp
jne
fwait
ds
adc
hlt
dec
add
adc
mov
add
pop
add
sbb
or
sbb
ficoml
and
pusha
add
jmp
lahf
add
sarl
movsl
add
xchg
sub
out
xor
mov
add
int
mov
sbb
xchg
lcall
clc
cmp
mov
mov
mov
add
sbb
mov
in
mov
fldcw
add
cmp
std
mov
mov
dec
jae
loope
loopne
add
lahf
mov
add
fistpl
push
cmp
push
add
inc
add
add
xchg
aad
add
icebp
in
inc
add
add
sbb
pusha
add
add
mov
ljmp
mov
add
ljmp
int3
or
add
cli
out
repnz
pop
pop
add
dec
pop
dec
add
add
or
out
xchg
stc
loopne
add
lahf
and
add
stos
adc
mov
daa
jbe
inc
test
cltd
test
adcl
cmp
cmpsb
push
add
dec
aad
xor
inc
xor
adc
shl
dec
pop
add
int3
mov
inc
in
dec
insl
push
rorb
mov
add
and
mov
bound
jge
mov
or
insb
add
mov
pop
add
cld
jge
dec
sahf
mov
jne
add
jg
fcomp
or
fcoms
xchg
xchg
fdivl
sarb
add
add
rorb
jge
add
adc
push
push
add
test
add
cltd
and
push
js
adc
add
mov
xor
dec
aas
inc
dec
add
adc
stc
sbbb
repz
insl
pop
inc
dec
add
lret
test
add
cmpsb
lods
test
fmuls
add
and
add
cmp
mov
fists
scas
pusha
add
add
xor
jnp
cmp
stos
scas
push
fstl
jecxz
loope
js
xor
add
cmp
jne
arpl
jp
outsb
add
push
stos
pop
in
cmpsb
in
enter
in
add
ret
test
jae
call
icebp
mov
add
pop
add
add
add
mov
push
add
sub
mov
mov
cmp
or
pop
add
test
add
jo
and
add
mov
adcb
enter
jmp
mov
mov
lret
add
add
pop
lret
repnz
rcr
arpl
inc
and
mov
or
and
push
add
adc
push
add
mov
cmp
inc
dec
add
push
gs
add
das
out
loop
jmp
repnz
mov
adc
std
stos
pop
add
data16
mov
pop
sub
push
add
ret
cmp
dec
add
mov
xor
add
adc
mov
rorl
mov
xchg
mov
add
add
mov
lods
out
ret
daa
xchg
sbb
jge
hlt
lcall
jmp
xchg
push
add
mov
inc
sbb
cmp
pop
add
dec
add
pop
add
add
add
push
add
add
add
daa
and
dec
cltd
lahf
aam
inc
rorb
inc
iret
in
sub
popa
jnp
test
dec
sbb
add
rcrl
add
add
add
add
outsl
mov
add
rolb
pop
mov
mov
add
sub
adc
add
and
jno
add
add
pusha
add
dec
add
cmpsb
push
add
lret
add
nop
lods
sarb
pop
cmc
loop
bound
insl
jp
aas
call
add
add
add
dec
add
imul
add
popa
aas
sbb
push
add
outsl
dec
sbb
mov
jp
push
and
fisubrl
shll
xor
sti
mov
iret
in
add
lods
stc
dec
or
and
cwtl
cmp
shlb
add
add
jnp
add
inc
add
add
addr16
mov
in
push
out
sub
sbb
scas
pop
or
fneni(8087
out
test
shll
in
cmc
out
and
cmp
push
add
cmp
xor
ja
dec
push
add
add
mov
adc
aad
add
les
cmp
push
add
aaa
dec
add
mov
jmp
xchg
dec
xor
das
jmp
add
add
add
gs
add
jmp
mov
add
push
add
add
lret
add
rcrl
add
add
sahf
sub
aas
xchg
in
dec
add
out
int
fiadds
aam
inc
sub
pop
add
in
sub
mov
loop
add
and
xor
or
cwtl
jmp
aad
cmp
lock
pop
mov
mov
imul
add
ffree
test
add
mov
pusha
add
pop
add
sbb
decb
add
add
add
ljmp
inc
loop
fstpl
add
cmc
pandn
xor
mov
adc
and
adc
test
add
cli
sub
push
popa
cmp
cld
ss
cld
push
add
orb
add
and
sub
and
adc
push
rcl
jmp
add
and
or
into
jle
pop
add
add
add
add
add
add
icebp
in
cltd
jns
lret
and
add
push
loopne
mov
add
test
addr16
shr
into
inc
test
xlat
lods
fsubs
pop
dec
mov
mov
push
add
mov
lret
mov
mov
mov
js
enter
add
lret
mov
or
xor
in
mov
adc
js
mov
push
add
clc
ret
pop
add
mov
xor
notl
add
add
cmp
je
sbbl
ret
add
add
mov
add
cmp
sbb
adc
addr16
push
imull
push
add
in
add
jb
arpl
lcall
adcl
js
cmp
push
adc
sub
scas
mov
mov
pop
mov
clc
jae
or
andb
les
mov
es
mov
xor
push
cli
rorb
js
repnz
insb
add
add
icebp
aas
inc
add
cmc
inc
adc
fdivrl
mov
dec
add
cmpl
lods
das
jns
sbbb
mov
adc
out
sbb
xchg
jb
dec
cmp
add
sbb
clc
jo
mov
imul
add
xchg
subl
add
dec
add
lock
add
add
push
add
xchg
dec
inc
add
mov
add
add
add
subl
ja
out
cli
jecxz
push
add
mov
mov
push
add
sti
and
pop
add
xchg
push
add
ds
adc
mov
jne
add
adc
insb
add
and
add
add
jns
enter
out
or
sub
mov
xorl
hlt
or
jo
daa
mov
jns
add
outsl
xchg
jbe
mov
sbb
or
sub
inc
add
mov
cltd
pop
mov
scas
shrb
bnd
mov
xchg
mov
jo
gs
mov
lea
xor
xchg
ret
shr
jge
add
dec
add
clc
aaa
lahf
mov
sarb
add
inc
add
add
push
add
pop
jmp
loope
sub
cmp
pop
add
mov
popa
imul
jne
sbbb
add
fsubs
pop
movsl
nop
jle
aad
icebp
fistl
add
lahf
cld
mov
popa
pop
out
inc
add
lahf
jne
sarb
repz
push
add
add
mov
and
sbb
sub
mov
xor
fdivs
add
mov
add
clc
popf
das
dec
rcr
lcall
stc
cmp
aaa
cli
mov
inc
scas
mov
jns
int
add
lock
add
jae
xchg
nop
or
add
or
add
mov
add
shll
movsl
xchg
cmp
xor
out
adc
xchg
test
jno
dec
test
xor
mov
add
add
sub
jle
daa
rolb
jmp
add
add
out
mov
mov
js
loopne
add
add
add
add
add
xchg
int3
scas
in
mov
or
jne
add
and
movsl
pop
add
lahf
lret
jg
xor
stos
ret
push
add
in
add
or
insl
scas
inc
mov
add
jno
cmp
push
add
in
add
ja
popa
insb
add
add
mov
andl
cmpsb
adc
popf
sub
xorb
xor
xor
pop
add
lret
add
adc
lock
sub
add
popf
sahf
out
loope
repz
js
bound
cmp
add
sbb
add
add
sti
fnstenv
stc
in
shlb
pop
add
jmp
jb
jp
movsb
dec
sahf
xchg
movaps
lock
xchg
cmp
xor
cli
mov
jecxz
leave
push
add
scas
sbb
add
add
mov
add
data16
pop
add
add
jns
cltd
or
pop
mov
xor
sbb
ljmp
add
test
jmp
xchg
jne
add
add
sbb
jmp
xchg
mov
decb
push
add
mov
add
xlat
sbb
nop
xchg
mov
pop
push
lea
add
xorb
or
outsb
add
sub
mov
aas
xchg
add
add
sub
stos
xlat
icebp
in
fincstp
incl
add
enter
pop
add
add
das
inc
add
cmpsl
iret
in
sbb
add
or
add
sbb
and
out
jns
je
dec
add
add
out
daa
mov
imul
add
fstpt
fdivs
or
sub
fnstenv
cmp
mov
adcl
test
cmp
loope
jbe
test
rorl
add
add
std
push
andb
bound
bound
pushf
add
add
cvtps2pi
push
lcall
add
inc
add
add
cmp
pusha
add
addb
mov
int3
adc
jmp
pop
fnstenv
cmpsb
jb
pushf
mov
push
add
push
add
imul
jl
xor
dec
add
fiadds
add
cmp
add
add
dec
add
arpl
jmp
call
sti
cld
popl
dec
pop
add
mov
pop
add
add
cmp
jmp
add
add
dec
add
add
push
call
add
clc
and
bound
aas
adc
bound
xchg
or
call
jno
cmpsb
out
add
and
subb
testb
add
add
add
lds
add
push
add
add
adc
push
add
sahf
mov
add
add
xchg
ret
mov
stos
cmp
add
stos
xchg
xor
cmc
stos
sbbl
pop
cwtl
les
mov
ljmp
add
add
lret
mov
mov
data16
adc
add
cmc
inc
add
arpl
scas
sbb
mov
lea
cltd
std
mov
dec
add
add
jo
push
add
int3
mov
nop
ret
lods
orl
jo
push
add
sahf
mov
mov
push
and
adc
fstpt
add
sahf
rorl
inc
add
inc
ret
outsb
add
mov
dec
add
popf
xchg
jnp
mov
or
out
add
sti
xchg
add
add
and
shlb
lahf
sbb
out
cmp
test
out
and
adc
aaa
je
ret
mov
jle
add
outsl
add
pop
shl
cmp
adc
pop
add
into
xor
add
fwait
setns
into
mov
cmp
push
add
add
or
jge
xchg
and
add
add
add
cmp
xor
outsl
movl
insl
shl
iret
inc
jg
cmpsl
js
je
adc
add
scas
pop
xchg
fidivs
inc
add
stos
lods
into
mov
imul
sub
pop
add
xchg
xor
sahf
sbb
cmp
jmp
add
push
add
enter
int
shll
cmpsl
popl
in
add
add
jl
mov
imul
test
add
mov
jle
or
xor
cli
sbb
or
add
pushf
pop
push
call
cmp
add
cld
cmp
lods
daa
shlb
add
scas
push
add
fucomip
mov
pop
clc
scas
sub
das
jge
sub
add
add
lds
dec
add
add
or
fisttps
add
xlat
lret
xchg
pop
add
add
outsl
int
xchg
out
arpl
add
lahf
xchg
or
out
add
push
add
cmp
jge
add
scas
push
xchg
sub
mov
jae
sub
sbb
dec
dec
add
sarl
add
lea
push
add
bound
lods
cmp
cmpsl
iret
dec
add
sub
add
pop
jo
stc
mov
into
std
fwait
pop
mov
add
test
dec
icebp
push
add
push
add
or
decb
add
cmp
mov
cmp
push
add
add
add
mov
add
leave
jle
jl
pushf
xor
insb
add
add
add
add
mov
test
bound
ret
mov
jb
inc
sbb
shrl
add
or
add
lret
in
mov
dec
add
in
sbb
test
cltd
pop
jecxz
mov
add
mov
pop
add
add
xor
jne
mov
cli
ret
jecxz
add
mov
lock
pop
add
add
push
scas
xorb
fldl
add
or
pop
add
jbe
aaa
adc
enter
dec
movsb
mov
xor
jl
add
inc
adc
stos
push
add
rcrb
pop
adc
fadds
inc
add
addr16
sub
or
imul
or
repnz
pop
add
jnp
or
popf
xchg
cmpsb
inc
inc
add
add
out
dec
add
repnz
push
in
add
sbb
cld
cld
ficoms
scas
inc
add
push
add
inc
add
add
movsb
int
add
add
test
data16
xor
add
dec
jmp
mov
add
pop
add
mov
in
dec
hlt
nop
cmpb
dec
add
lock
cmpsl
xchg
inc
add
add
add
cmp
stc
xlat
into
adc
mov
mov
leave
jp
dec
add
dec
add
mov
out
add
scas
mov
sahf
shrl
jmp
jle
iret
adc
cmp
popf
arpl
movhps
dec
add
or
push
mov
add
jle
gs
lcall
fstpl
jecxz
mov
adc
arpl
aas
mov
cld
xor
pusha
add
jbe
add
popf
lret
outsb
add
mov
mov
cmpsb
cmpsl
adc
mov
adc
add
add
and
add
xor
in
lock
jmp
xchg
and
mov
push
add
into
aas
js
adc
mov
xchg
or
leave
std
add
ror
xchg
mov
add
call
loope
sub
das
jl
fcomps
test
add
inc
pop
pop
push
add
call
add
jmp
dec
add
rol
jo
nop
and
xchg
add
sbb
jno
jns
xorb
push
add
jge
in
adc
movsb
xor
movsl
or
inc
add
add
add
and
sub
sahf
xchg
and
out
or
or
mov
cwtl
jnp
xchg
call
stc
cmp
cmp
lea
sbb
cwtl
adc
or
dec
or
sbb
movb
push
add
pushf
jns
fcmovne
leave
dec
rol
mov
mov
and
xorl
inc
add
sbb
clc
xor
outsl
jmp
and
in
divl
add
add
ret
jle
clc
mov
or
dec
add
add
add
lret
out
jl
loope
ds
xchg
clc
pop
add
mov
add
fcomps
add
add
sub
sbb
add
add
int
add
add
add
scas
data16
dec
add
add
add
add
sbb
fmull
movb
add
add
add
shll
add
scas
inc
add
cld
push
add
push
xor
xchg
cmp
into
mov
add
add
add
add
xchg
mov
sbbl
sbb
xor
push
mov
pop
add
add
movsl
adc
mov
and
dec
add
mov
lea
add
push
pop
add
mov
add
pop
jbe
out
sub
cmpsb
push
add
aam
adc
loope
and
mov
sub
daa
push
add
mov
nop
jno
add
mov
int3
xor
add
push
add
out
cli
scas
dec
addr16
insb
add
frstor
loopne
outsl
lahf
sti
cmp
add
clc
bound
clc
xchg
fimull
je
sbb
xchg
add
movb
pop
dec
mov
shl
jo
add
mov
add
inc
loop
jns
or
add
aad
and
and
inc
add
jns
mov
dec
add
add
add
or
int3
sub
push
mov
pop
add
pushf
popf
or
add
mov
xchg
cs
dec
add
mov
xchg
push
add
add
jns
xchg
dec
scas
pop
add
xchg
cmp
aaa
sbb
pop
add
adc
stos
mov
add
lea
add
mov
sbbl
in
adc
movsl
xchg
add
lea
imul
jnp
gs
xchg
filds
or
adcb
add
jge
add
xchg
lcall
jnp
scas
jne
mov
pushf
ds
jns
add
and
gs
notl
and
loope
pop
divb
daa
fwait
arpl
in
out
shlb
add
push
add
sub
dec
rorb
add
pop
add
add
sbbl
sbb
sub
mov
add
add
and
mov
add
and
and
dec
sbb
add
mov
add
ja
add
shrb
test
mov
gs
imul
push
fwait
das
imul
add
mov
pop
add
adc
sbb
add
dec
add
nop
xchg
pop
int
xchg
fmull
xchg
mov
cmpsb
fidivs
loopne
pop
shr
repnz
cmp
jnp
xchg
add
jbe
push
add
lret
cld
pop
add
adc
add
fdivl
add
xor
mov
add
ja
xlat
cmp
neg
lret
rcl
jb
repz
lock
pop
popa
loop
push
inc
add
lret
fwait
jecxz
rcl
loope
pusha
add
outsb
add
mov
ret
lods
cmpsl
push
add
xchg
add
add
dec
add
mov
rcr
add
mov
jle
js
mov
int
add
popa
xchg
adc
adcb
sbb
mov
push
add
lea
subl
add
mov
out
shr
andl
push
add
mov
arpl
push
push
add
add
cmp
jo
popa
dec
add
mov
cmp
lret
cmp
inc
mov
cld
shrb
fsubrp
mov
add
or
jg
mov
fisubl
inc
add
sub
insb
add
xchg
pop
add
aaa
pop
add
cmpsl
punpcklwd
add
add
pop
add
pop
sub
sbb
pop
add
test
imul
adc
mov
push
add
cld
sub
adc
add
mov
add
mov
enter
xchg
and
add
jbe
or
andb
add
sbb
add
add
int
and
lds
pushf
fnsave
sti
es
or
mov
add
sub
cs
add
jne
sub
add
push
add
popf
xchg
cli
ja
sub
mov
add
add
out
stos
adc
lret
sub
mov
push
add
add
add
repnz
in
stos
in
add
mov
add
out
adc
dec
add
iret
lret
xchg
fistpll
in
pop
add
or
jo
pop
add
testl
mov
push
mov
sbb
adc
outsb
add
jae
enter
add
and
add
data16
jnp
inc
icebp
and
inc
add
push
add
add
adc
xchg
mov
dec
add
or
daa
insl
sti
lahf
sbb
movsl
mov
bound
test
and
push
add
mov
iret
and
pop
in
inc
jb
rclb
add
add
sbb
and
mov
loopne
or
push
mov
mov
push
add
add
adc
add
jmp
add
mov
add
mov
fwait
and
lahf
jg
add
mov
push
add
push
add
fldenv
mov
ret
add
mov
fidivrl
add
mov
jl
pop
cmc
pusha
add
add
jl
cmp
mov
xchg
xchg
add
sub
xchg
roll
int
add
add
add
add
arpl
mov
aad
sbb
pop
jecxz
xlat
and
addr16
sbb
aad
add
nop
mov
imul
in
jg
sbb
fistpll
mov
aad
mov
xor
data16
popa
sti
aaa
cmp
jp
push
add
hlt
push
add
jmp
add
iret
adc
sahf
pop
and
pop
out
lret
int
dec
add
mov
add
shrl
imul
int3
add
add
mov
inc
add
fisubrs
mov
mov
stos
xchg
ljmp
xchg
add
lea
or
xorb
push
movl
jno
rorl
jmp
add
add
add
inc
add
jmp
add
add
loopne
mov
sub
add
push
add
mov
jb
push
add
ret
cmp
pushf
xchg
xor
add
mov
repnz
mov
add
add
add
subl
adc
xlat
jl
jle
add
add
mov
mov
inc
add
aaa
jne
cmp
sub
xor
aaa
int
hlt
adc
cmp
data16
repnz
fmul
pop
dec
add
pop
add
and
mov
xlat
sbb
rclb
xorb
aaa
pop
jle
cmc
test
xchg
cmp
lock
dec
jo
jp
aas
lds
icebp
push
add
add
lock
add
add
add
inc
and
in
dec
add
aas
pop
xlat
lods
adc
mov
test
je
sub
enter
xor
add
add
push
add
repnz
add
jb
andb
add
add
add
lcall
mov
shl
sbb
inc
add
push
inc
add
add
loope
cmp
push
pop
sub
dec
add
push
mov
sbb
add
push
push
add
pop
mov
test
sub
stc
fcmovbe
fldcw
lcall
or
sub
fists
add
lret
inc
rcrb
push
add
xor
std
icebp
shrl
sahf
or
lock
cmp
js
mov
icebp
repnz
mov
xchg
add
mov
ljmp
into
xor
mov
test
aam
add
dec
add
add
call
add
dec
add
outsl
nop
adc
jns
mov
pop
add
out
xchg
sbb
mov
vmwrite
add
add
jecxz
mov
mov
pop
add
fcmovnb
aam
add
jge
add
mov
xchg
and
cmc
mov
mov
jno
add
and
lea
cmp
inc
add
add
jbe
in
arpl
or
in
push
add
in
and
sub
outsb
add
imul
add
add
gs
dec
add
or
jecxz
adc
add
adc
sub
cmp
ret
jmp
add
adc
arpl
add
add
add
out
das
cmc
and
lds
add
push
add
mov
add
sub
xor
sahf
cmc
push
add
mov
roll
fstpl
not
lock
cli
add
repz
jmp
out
jnp
lods
jge
add
inc
add
cmpsb
xlat
jge
flds
shl
jno
loop
pop
cltd
lock
dec
xchg
ljmp
jb
jmp
dec
add
nop
js
xchg
scas
xlat
or
std
xor
shll
in
push
pop
add
push
add
add
push
add
add
xor
andl
and
add
cmp
pop
add
inc
add
add
imul
mov
add
adc
pop
daa
sub
shrb
in
add
jg
push
mov
xchg
adcb
xchg
jbe
and
add
inc
popf
dec
out
mov
add
push
add
mov
pushf
sub
outsl
sbb
jecxz
pop
add
push
add
xchg
lahf
xchg
push
mov
xchg
jp
mov
add
xor
js
mov
add
pop
adc
add
sbb
das
sti
jb
sbb
cmc
mov
xchg
js
push
add
fiaddl
subb
cmpsl
sbb
xchg
cltd
loopne
add
fisubrl
jno
pop
adc
xor
push
or
add
cltd
int
mov
pop
sbb
mov
call
add
fisttps
sub
sti
dec
add
push
mov
push
add
add
mov
xchg
ret
mov
dec
mov
and
in
add
cmp
mov
idivl
add
adc
jns
arpl
mov
push
xchg
push
dec
out
mov
add
push
dec
les
pop
add
add
add
std
mov
or
dec
add
add
mov
imul
ds
out
add
popa
adc
adc
aam
inc
add
loope
jge
cmp
cmp
stc
outsl
xchg
jns
add
cmp
ficoml
add
or
jle
mov
jbe
push
loop
movsl
inc
add
mov
sub
mov
ror
bnd
mov
cmp
mov
mov
xor
jne
sahf
adc
imul
add
inc
add
add
add
test
add
scas
push
add
add
adc
add
jl
ja
push
add
add
inc
pop
push
add
push
add
fistpll
sub
add
add
dec
add
mov
xor
int3
subb
repz
add
xor
fdivr
pop
fldcw
add
mov
pop
hlt
mov
data16
add
sbb
arpl
add
lahf
outsl
cli
mov
jns
mov
cli
sub
dec
add
divb
add
add
mov
fidivl
xchg
scas
inc
fs
and
lahf
mov
lea
xchg
lahf
dec
mov
imul
cltd
cmpsb
push
cwtl
mov
add
mov
add
popa
int
cmp
add
cmp
lock
push
add
xchg
adcb
xchg
mov
add
inc
add
sub
add
sub
jbe
ljmp
ret
jno
add
testb
add
add
pop
add
add
lock
and
add
cmp
arpl
jb
mov
add
dec
add
cmp
sbb
cmp
add
and
adcl
in
jno
mov
add
cmc
daa
leave
fidivrs
mov
or
sub
enter
sbbb
jae
pop
add
enter
and
dec
push
add
sti
cmp
fildll
imul
adc
mov
sub
imul
add
loopne
mov
test
cmc
cmp
outsb
add
insl
lret
pop
add
test
mov
in
enter
add
add
ja
lock
add
jmp
nop
dec
jmp
dec
pushf
fdivrp
lock
in
dec
add
add
add
push
add
add
outsb
add
jae
lods
leave
dec
add
fistpl
add
into
movsl
js
jg
add
mov
inc
add
pusha
add
fwait
inc
add
shll
add
add
cmp
sbb
inc
add
shrl
adc
ljmp
adc
mov
inc
add
add
gs
mov
push
add
push
add
test
add
fstps
add
and
add
fidivs
push
add
add
add
adcl
lahf
mov
int
xchg
sbb
cli
fwait
data16
push
int
add
out
mov
jnp
pop
cmp
out
adc
dec
add
mov
movsl
dec
dec
add
aad
xchg
cmp
notl
add
fbstp
insb
add
sbb
pop
add
inc
aaa
xor
add
cmpsb
bound
sbb
dec
add
xor
mov
xorb
dec
test
xchg
mull
mov
and
add
cmc
pop
add
push
add
and
fucomp
mov
add
add
add
call
adc
je
xchg
xor
add
add
xchg
inc
cmpsl
lds
stos
incb
shll
xchg
sbb
sarb
add
and
pop
out
mov
mov
mov
fisttpll
add
popa
add
sbb
clc
and
aaa
xor
dec
add
scas
jl
dec
cmpsb
mov
mov
lahf
std
out
out
outsb
add
add
add
negb
and
add
dec
add
stos
mul
or
pusha
add
mov
add
int3
jb
scas
movsl
inc
xchg
add
mov
stos
mov
scas
std
addl
fsubl
push
add
int
dec
add
and
cmp
int3
pop
jecxz
add
bound
ret
aaa
jo
dec
add
sti
cmp
add
inc
mov
rorb
sbb
test
and
add
add
inc
dec
xlat
mov
mov
shr
push
mov
add
sbb
fstp
jl
add
mov
cld
iret
cpuid
push
fdiv
mov
pop
push
add
in
mov
add
dec
add
cmp
fldcw
add
enter
cmpsb
jmp
cmp
sbb
push
in
push
add
add
mov
add
cmpl
mov
add
sub
cld
cltd
clc
pop
and
mov
adc
cmc
or
and
loopne
add
mov
mov
add
xchg
sbb
dec
das
pop
add
add
jp
xchg
cmpl
add
scas
and
iret
jg
aam
add
add
add
jp
and
mov
add
push
add
xchg
sbb
sbb
add
adc
add
popa
repnz
cmp
jno
loopne
xlat
sub
add
mov
mul
mov
add
mov
pop
add
es
xchg
and
das
ror
shrb
repnz
rolb
mov
jnp
aam
cli
cli
loopne
add
insl
movsl
mov
pop
stc
xchg
fsub
mov
add
add
mov
sbb
add
sbb
sub
out
add
pop
add
addr16
clc
dec
add
add
or
lock
push
add
movsl
imul
add
and
aas
test
mov
add
sbb
add
das
popa
push
add
add
outsb
add
jbe
push
add
lods
jmp
or
ror
pop
in
add
sub
or
cltd
je
aas
pop
mov
loope
add
xor
icebp
add
add
pop
pslld
add
into
sbb
mov
popf
sub
jg
add
dec
add
pop
bound
adc
pop
or
fwait
sti
jb
push
dec
pusha
add
push
add
add
push
add
addl
sahf
clc
xchg
push
add
add
fmuls
jl
adc
add
rolb
push
add
movsb
mov
jo
dec
add
inc
stos
mov
jp
push
add
fisttpll
add
xor
bound
rolb
or
add
cmp
or
leave
imul
add
jmp
xchg
testb
add
enter
add
mov
add
shrl
mov
add
mov
adc
in
adc
aaa
jb
xor
xor
popf
pop
add
add
pop
add
cld
in
in
mov
cmpsb
mov
push
add
dec
add
sbbl
out
inc
add
jbe
shll
add
push
add
add
add
push
add
dec
add
add
jns
shll
ret
add
add
inc
add
mov
adc
add
add
push
add
add
inc
push
add
sub
shll
imul
insb
add
or
js
aam
add
add
and
sbb
data16
mov
in
mov
data16
mov
cmpsl
js
xchg
nop
mov
mov
pop
add
cmp
jl
xlat
mov
daa
add
ja
jg
ror
add
add
add
xor
idiv
fbld
jns
adc
lcall
add
mov
sub
add
adc
mov
rorl
andb
test
lods
mov
aas
mov
push
int
push
add
sbb
add
popf
mov
push
add
les
pop
pop
add
stos
out
or
add
add
loopne
add
or
inc
mov
add
fimuls
add
cmpsb
add
add
add
push
add
jne
mov
sbb
xchg
test
enter
mov
call
into
sti
ljmp
mov
sbb
pop
add
hlt
addl
add
add
add
lock
in
cltd
jnp
add
add
xlat
fildl
adc
aas
jle
fdivr
cltd
insl
lock
cmpsl
mov
insb
add
sarl
decb
xor
fisubrs
mov
ljmp
xor
pop
add
adc
into
out
cmp
call
mov
add
or
push
sub
add
arpl
loope
xor
mov
fwait
pushf
aas
in
push
shlb
add
sbb
and
jmp
add
push
lcall
in
pop
arpl
add
mov
add
repz
or
jp
dec
add
inc
add
adc
ja
test
add
add
add
cmp
ret
jl
add
add
mov
xchg
ret
add
mov
sti
jne
add
or
pop
add
add
ret
or
lret
add
adc
jo
or
mov
dec
nop
lods
jns
popa
sbb
pop
fidivrs
inc
ret
out
add
or
aaa
out
cmp
push
add
data16
mov
pop
jg
pop
add
fwait
cmp
mov
aam
sbb
orb
sahf
std
xor
inc
add
mov
add
cmp
in
adc
add
mov
pop
sbb
xchg
xchg
imul
cmp
mov
add
inc
push
ret
sub
add
aad
shlb
add
mov
mov
mov
push
cmp
test
sbb
int
jne
mov
jg
xchg
sti
dec
add
add
add
inc
add
mov
bound
test
stos
popf
lcall
das
mov
xlat
adc
repz
add
push
add
cmp
cmp
mov
loopne
mov
add
roll
jg
imul
decb
scas
imul
sbb
scas
fdivl
and
add
cmpsb
xchg
and
add
subb
xchg
cmp
add
mov
and
aad
test
push
add
fstpt
xor
shl
add
rcll
mov
push
add
outsb
add
mov
aam
in
cmp
add
add
xchg
or
inc
mov
sbb
dec
into
rcll
jg
jge
add
add
mov
add
add
push
sub
add
pop
jnp
imul
add
jbe
sub
lcall
add
mov
sbb
hlt
sti
fcoml
add
add
nop
inc
add
add
sbb
or
cmp
test
or
or
sub
adc
mov
add
imul
cmpsl
popa
in
mov
cmp
repz
xor
sub
popa
ret
add
pop
add
insb
add
add
add
jecxz
inc
add
mov
add
dec
add
and
sarl
test
add
add
add
sti
or
je
sub
xchg
fbld
add
icebp
inc
add
push
out
add
xchg
fsubl
imul
mov
repnz
add
das
stos
push
add
inc
add
add
xchg
arpl
jmp
mov
mov
cmp
out
popf
mov
pusha
add
cltd
push
vmread
mov
jbe
shll
add
add
add
sbb
add
std
dec
pop
add
and
scas
jb
sarl
dec
dec
add
pop
push
mov
add
sbb
add
mov
ret
cmc
push
add
lcall
xor
hlt
add
add
xchg
data16
add
add
add
iret
mov
scas
mov
into
mov
inc
jmp
jo
mov
sbbl
xlat
mov
cmp
movsl
jae
add
add
std
daa
add
mov
sti
and
js
mov
inc
add
xlat
mov
push
sbb
mov
add
mov
push
add
push
jg
in
add
mov
inc
add
sarl
add
movsl
cmp
je
je
jecxz
cmp
mov
push
add
xchg
cli
add
lcall
xchg
xlat
push
add
push
incb
loop
xchg
add
jecxz
dec
add
bound
mov
lds
or
cmp
add
in
cmp
push
add
add
inc
add
sbb
pop
hlt
imul
sub
in
and
jp
sbb
stc
sbb
add
repz
sbb
sbb
or
and
imul
add
jp
adc
sti
mov
fistl
add
pop
cmp
sbb
mov
push
shll
std
push
add
add
ficoms
add
add
loopne
add
call
scas
add
enter
add
iret
and
pushf
push
add
add
mov
into
nop
pop
add
push
add
sahf
imul
add
mov
xchg
dec
stos
inc
data16
and
fsts
xchg
mov
pop
in
add
flds
addr16
pop
dec
lret
mov
or
dec
add
mov
nop
adc
sahf
jge
mov
call
add
jnp
jne
popf
push
add
fists
imul
cmpsl
mov
cltd
dec
lods
mov
adc
sarb
repnz
adc
add
pop
mov
pop
sbb
sbb
add
inc
inc
pop
das
sub
cmp
add
data16
add
outsl
adc
add
arpl
data16
inc
jns
add
add
sub
sub
fbstp
push
and
add
insl
cltd
daa
push
add
fbstp
xchg
mov
inc
add
add
inc
xchg
loop
lret
mov
imul
dec
xor
add
into
addr16
mov
pop
adc
lcall
sahf
mov
jp
mov
jmp
roll
lock
add
and
push
or
add
push
add
xor
xor
stos
jecxz
fidivrs
and
enter
add
cmp
jno
shl
add
outsl
js
jg
bound
stc
orb
add
sti
add
adc
lea
add
hlt
call
sub
lods
inc
jle
lods
out
add
adc
outsl
or
mov
xor
pop
and
add
push
add
shrl
or
rcl
jmp
out
dec
add
mov
pop
fsubrs
add
jecxz
cmpsl
and
fsubr
nop
arpl
mov
mov
cmc
fimull
jo
out
push
add
add
and
add
or
add
dec
add
add
into
fistpll
aam
add
pop
mov
in
pop
xor
mov
testb
test
add
dec
mov
add
mov
sub
lea
les
outsl
xor
jp
jbe
mov
add
add
add
inc
add
add
add
cltd
xchg
test
mov
gs
or
pop
inc
add
movsl
insb
add
pop
filds
dec
add
lds
jb
xchg
mov
add
test
add
cltd
or
push
mov
add
testl
add
or
jle
jo
cmp
repnz
cwtl
out
push
add
add
add
mov
lret
into
cmpsb
rolb
rorb
lret
add
push
add
add
add
faddl
shrl
fisttps
sbb
xor
pop
add
bound
stos
add
setle
or
inc
add
int
je
and
add
pop
add
and
int
adc
sbb
popf
icebp
fwait
push
aaa
fnstsw
jno
add
push
add
cmp
sub
dec
add
sbbl
and
out
dec
add
sahf
xor
cwtl
add
add
jmp
inc
add
add
add
test
add
enter
add
sbbb
mov
add
inc
lahf
xor
and
add
pop
push
je
adc
cli
pause
sub
repnz
orb
lret
jecxz
add
shll
repnz
lahf
out
mov
aas
mov
add
mov
out
fimuls
and
push
push
stc
inc
xchg
sub
addr16
add
add
add
add
out
add
mov
std
xor
sub
fcomps
pop
add
push
add
add
mov
lods
add
in
xchg
sbb
bound
and
mov
xchg
setp
xchg
mov
add
mov
inc
add
jle
flds
pop
add
popa
add
xchg
test
mov
mov
js
push
add
push
pop
or
mov
dec
pop
add
add
lds
jno
xchg
sbb
mov
pop
add
jnp
dec
cmp
mov
jno
lret
inc
add
jle
mov
mov
xor
loopne
mov
arpl
aam
xchg
test
jle
adcl
pop
push
add
js
jbe
loopne
or
jb
repz
ret
add
mov
fwait
stc
cltd
jb
push
add
cmp
lcall
mov
das
fisttpll
add
push
andb
shrl
mov
mov
ss
iret
add
mov
fdivs
add
or
rclb
adc
test
xor
lret
dec
nop
fisttpll
inc
add
cmp
in
std
ret
fsubl
inc
les
add
cmc
pop
add
or
add
insl
lds
ret
cltd
repz
xchg
pop
lcall
xor
dec
cmp
and
and
add
std
xor
lcall
add
cwtl
mov
dec
in
into
mov
add
add
add
add
lock
jmp
add
add
test
in
shl
adc
mov
mov
lea
dec
ja
mov
jge
add
adc
mov
push
add
push
loop
lock
mov
add
add
push
push
xor
aam
sbb
cmp
mov
mov
test
jne
in
xchg
adc
in
xchg
add
pop
sbb
push
push
add
int3
add
mov
fdivrp
popf
inc
add
add
and
movsl
lods
add
movb
add
jne
popf
cltd
popa
mov
adcb
cmp
sub
test
in
add
add
inc
pop
jmp
add
dec
mov
add
lock
xor
add
add
adc
mov
sub
xor
repnz
pop
add
add
and
add
repz
lahf
cmp
sbb
sub
enter
in
sub
inc
push
add
movsl
leave
outsb
add
lcall
jmp
and
jne
and
add
mov
pop
popa
out
hlt
adc
inc
fwait
lds
icebp
in
jp
repz
repnz
and
fcmovu
jbe
loop
js
mov
add
jg
stc
data16
imul
fcmovnb
aaa
sarb
jg
add
insl
jo
inc
add
cli
cwtl
dec
mov
test
add
das
mov
dec
add
add
add
cltd
add
int
aad
add
add
or
or
dec
add
add
add
add
sbb
mov
push
add
pusha
add
cmp
cltd
mov
dec
add
test
imul
jnp
add
popf
dec
add
jg
dec
add
push
fmull
ret
iret
sub
push
add
jae
push
add
sub
push
xor
jg
jle
add
std
jb
adc
iret
mov
xchg
add
pop
pop
mov
lret
jmp
xchg
mov
shrl
add
inc
inc
out
bound
mov
add
add
add
arpl
and
add
push
add
add
add
mov
push
add
add
repnz
push
rcrl
or
enter
popf
adc
stos
aas
jb
movb
xor
add
dec
cli
rcll
xor
arpl
out
je
imul
add
in
add
push
add
mov
add
add
data16
stos
mov
add
or
sbb
mov
add
add
mov
pushf
or
cmpsb
sbb
pop
add
add
or
das
imul
loop
mov
dec
push
push
add
push
xor
mov
xchg
les
rcll
add
add
shlb
inc
mov
add
aad
lock
movsl
xchg
fwait
dec
jbe
xchg
pop
rol
sub
mov
mov
add
insb
add
push
add
pop
cwtl
inc
add
test
lock
add
mov
xchg
pop
add
sub
test
add
jbe
xor
test
pop
add
add
aas
movsb
lods
add
add
add
jns
jno
mov
mov
in
adc
ror
rorb
add
add
jo
leave
jp
cmpsl
in
inc
rorb
or
cwtl
and
add
cld
mov
cli
ja
add
add
jne
add
xorb
lds
mov
std
ja
lock
icebp
or
shlb
stos
xor
or
add
add
lahf
xchg
into
sahf
scas
pop
add
xchg
pushf
jns
xor
lahf
dec
jne
dec
xor
add
lret
sub
push
add
lock
and
xor
in
divl
loopne
mov
xor
cmpsb
adc
rcr
xor
lock
dec
xor
lods
pop
add
jb
aad
nop
inc
add
add
rcrb
loopne
jno
add
sbb
cli
fs
psubw
insl
sbb
xor
lds
ret
pop
add
add
add
imul
orl
add
insl
pop
add
stc
stos
mov
add
add
jmp
mov
add
cmp
mov
add
mov
and
icebp
loopne
add
add
add
add
jg
add
mov
add
mov
mov
jnp
mov
jo
push
ja
mov
outsl
out
jae
add
cli
fwait
mov
rorl
and
inc
add
add
add
cli
add
hlt
dec
sub
xchg
sub
cmc
jb
les
push
add
jg
push
add
add
arpl
pop
add
mov
add
je
xor
add
and
pop
sub
push
movsb
int
add
enter
into
sub
xchg
push
add
xchg
mov
cmp
sub
xchg
xor
add
dec
cs
or
icebp
shl
rcrb
add
dec
add
mov
add
push
imul
bound
mov
push
add
adc
xor
sbb
sbb
std
xchg
jle
lcall
shr
icebp
inc
cmc
lods
out
add
bound
out
cld
cmp
negl
xchg
mov
add
imul
jbe
in
testb
sahf
pop
sbb
lcall
ja
inc
test
push
add
inc
add
insb
add
sub
test
imul
ja
adcl
adc
push
sti
jg
adc
sbbl
insl
mov
add
add
add
add
dec
add
test
add
in
ja
aaa
mov
and
sarb
stc
arpl
add
jle
or
ret
xchg
mov
iret
add
fcompl
fs
xchg
jns
inc
add
outsb
add
pop
out
and
dec
jmp
icebp
dec
add
sbb
cmp
movsb
and
push
add
mov
ror
xchg
cmp
pop
movsl
pop
sub
icebp
scas
ret
rol
mov
scas
xchg
mov
mov
add
lds
mov
add
je
or
shlb
aas
shll
pop
pop
lahf
or
mov
inc
movsl
dec
add
jl
jecxz
xchg
add
add
sbb
movsb
repz
xor
or
repnz
mov
jnp
mov
jmp
mov
xor
lds
pop
inc
add
sbb
cmp
mov
pop
mov
add
jmp
imul
dec
data16
fstps
sbb
iret
jne
add
cmpl
mov
lcall
inc
add
mov
lods
adc
movsb
fimuls
mov
xchg
and
cmc
outsb
add
inc
add
testl
add
dec
jg
push
stc
dec
ret
pop
add
and
dec
mov
xor
shrl
add
xchg
notb
and
inc
add
add
shll
add
out
xchg
cld
inc
fsts
fmulp
push
or
sbb
movsl
outsl
mov
pushf
adc
inc
add
or
cmp
add
cmpl
add
sbb
clc
out
add
xchg
pop
add
rclb
xchg
sarl
add
jae
scas
out
sbb
clc
xchg
je
xchg
aad
jns
add
xor
dec
add
stos
in
pop
push
add
mov
cmp
pop
jge
adc
mov
adc
cwtl
jb
lock
jne
fstpt
inc
imul
xchg
into
scas
or
lahf
negl
call
ret
sbb
imul
lcall
xchg
adc
mov
add
cmpl
cmpb
add
add
add
add
pop
add
lahf
stc
test
pushf
mov
mov
rcrb
psubusw
and
pop
jno
or
shlb
add
cmp
adcb
ljmp
xchg
add
fsubr
xor
xor
stos
das
add
mov
xchg
sbb
mov
rorb
jge
test
add
and
add
add
sub
mov
push
add
add
in
cmc
loopne
out
xchg
add
mov
lahf
add
add
roll
sbb
aad
movsb
mov
xor
loope
push
add
shl
adc
mov
sub
sbb
in
cmp
jecxz
add
add
push
xchg
cvttps2pi
stc
cmp
cli
add
pop
add
add
arpl
sbb
xchg
imul
fimuls
mov
test
push
mov
mov
mov
mov
insb
add
imul
mov
add
imul
add
sbb
call
bnd
popa
ficompl
add
add
andb
repnz
add
add
mov
out
sti
cli
adc
cmp
add
lcall
dec
or
pop
xchg
aam
inc
scas
cmpl
or
in
push
add
add
stc
movhps
dec
call
inc
add
sub
jno
add
push
add
add
dec
sub
and
xchg
xlat
stos
jmp
insb
add
enter
mov
jbe
sbb
jo
leave
cmp
or
sub
push
add
add
mov
and
fists
aam
mov
add
add
mov
int
sahf
bound
repnz
stc
add
add
or
mov
jb
sub
jnp
xchg
mov
inc
add
ret
add
or
jnp
insb
add
iret
dec
add
cltd
fdivl
xchg
gs
cmp
add
cltd
incl
movsb
ja
add
add
fistpll
cmpb
add
jno
mov
aaa
incb
insb
add
add
add
add
jo
sbb
in
adc
mov
orb
add
add
aam
pop
inc
pop
add
add
inc
add
jbe
lcall
test
mov
sub
stos
xchg
subl
add
pusha
add
add
sub
and
pop
add
adc
adc
sub
aaa
add
or
xchg
inc
pop
cmp
mov
mov
sbb
cld
xorb
push
and
inc
lret
sbb
mov
pop
scas
data16
outsl
lods
jmp
jo
iret
push
int
and
add
cmpsl
sbb
popf
lret
xor
loopne
lods
mov
add
mov
fadds
and
add
call
lods
in
sub
and
add
jmp
in
adc
repz
out
stc
loopne
add
insl
sbb
dec
add
jno
mov
add
nop
inc
mov
subb
fwait
outsb
add
ljmp
add
in
stos
mov
add
pop
add
add
ljmp
mov
jge
jmp
stos
lock
leave
gs
xor
add
out
xor
sbb
sub
mov
pop
add
dec
mov
fstpt
add
add
insb
add
shl
int
scas
inc
push
add
dec
add
lock
push
add
fnstsw
test
lret
pop
nop
push
stc
or
cmp
cwtl
sub
js
jg
mov
sub
in
xchg
add
fld1
lcall
test
add
and
push
xchg
aas
push
add
shll
jnp
out
inc
jno
in
jae
adc
xchg
mov
mov
add
add
add
add
clc
fwait
inc
add
scas
mov
add
sub
add
sub
mov
push
add
inc
add
mov
sub
add
add
xorl
adc
lock
sub
lds
xor
or
sub
stos
test
test
add
add
add
sti
pop
add
ret
add
mov
add
jns
mov
adc
fidivrl
shll
loopne
fwait
cmpsb
test
xchg
sub
sbb
inc
loope
push
add
fs
test
cmp
add
push
lret
jl
loopne
add
add
add
add
add
pop
stos
into
out
and
pop
add
fcoml
add
add
mov
cltd
and
add
xor
add
dec
add
shlb
inc
add
inc
mov
add
jae
add
scas
inc
add
add
add
xor
lds
in
pop
scas
lea
testb
jge
cmpsl
data16
ret
insb
add
decl
add
add
add
xchg
inc
add
add
ljmp
mov
cld
adc
jmp
pop
loope
add
cmp
mov
in
mov
bound
aam
add
add
add
xchg
fwait
call
xor
cmp
lock
jp
cwtl
insb
add
sahf
jo
add
inc
clc
mov
loopne
add
add
adc
jb
add
add
add
out
dec
add
add
sbb
dec
call
fadds
add
cs
jo
in
mov
imul
mov
imul
add
fstps
ljmp
fwait
in
imul
stos
repz
cltd
and
push
add
add
jbe
jg
test
sbb
jbe
push
add
add
or
popf
xor
sti
mov
cld
out
hlt
sub
add
ds
dec
add
or
pop
lret
test
js
mov
adc
mov
mov
cmp
inc
add
lock
add
cmp
lea
loop
jnp
add
xchg
or
add
jmp
add
pop
jecxz
add
mov
stos
and
movsl
rcrb
push
and
test
dec
dec
add
add
test
jmp
add
and
into
sbb
mov
add
gs
add
add
push
add
sbb
out
push
add
notb
push
add
xchg
xchg
jmp
imul
mov
lods
daa
adc
sahf
and
mov
jmp
add
add
mov
imul
add
xor
ljmp
add
daa
call
xchg
jae
idivl
add
add
mov
pop
outsb
add
lret
je
cmp
decl
into
mov
xchg
inc
mov
inc
stos
shlb
mov
xchg
hlt
ja
es
inc
dec
pop
add
imul
test
stos
and
mov
add
lods
fnsave
fwait
aaa
pslld
aam
ja
subl
xor
repz
adc
jns
bound
test
clc
fldl
xchg
test
add
add
inc
inc
dec
mov
ljmp
sub
mov
add
mov
test
add
dec
addr16
nop
dec
and
push
add
adc
mov
aad
add
cmp
add
add
enter
add
movsb
scas
xchg
add
movsl
and
adc
dec
notl
add
adc
dec
add
xor
add
pop
add
sbbl
cmpsl
in
mov
movsb
repz
add
add
add
in
lahf
repnz
fisubl
add
or
scas
xor
add
add
pop
add
push
add
xor
sub
int
add
insb
add
pop
test
sbb
add
dec
xchg
push
filds
add
add
adc
add
add
outsb
add
add
js
icebp
dec
rcl
test
daa
aaa
pop
cmp
or
xor
icebp
pop
push
xchg
jle
add
lcall
cli
add
or
inc
add
les
inc
jg
add
popl
outsb
add
sbb
loopne
into
and
inc
add
add
add
add
add
stos
fstpl
imul
fwait
out
cs
adc
stc
add
mov
inc
add
outsb
add
mov
add
pop
add
add
jb
lahf
xchg
pusha
add
push
fcmovne
pop
pop
add
outsl
cmp
shrl
xor
rorl
and
inc
or
lcall
or
movsl
inc
into
xchg
inc
xor
in
push
add
stc
inc
icebp
sub
jle
movsb
sub
rolb
and
loop
inc
enter
fnsave
jmp
test
add
add
cmpsb
and
loope
add
pop
add
bsr
add
jae
leave
nop
pop
mov
or
or
mov
push
scas
cmpsl
cmp
add
shr
pop
sbb
repz
int
fistpll
inc
add
sbb
aas
mov
add
push
stc
adc
mov
aam
add
dec
add
add
pop
ret
bound
xchg
fists
cld
push
fbld
push
add
in
cltd
popa
xchg
xorb
xor
out
daa
icebp
push
cmp
xchg
cmpsb
pop
call
add
mov
mov
add
sbb
pop
add
flds
jecxz
mov
inc
pop
pushf
pop
dec
add
push
sbb
or
add
add
gs
inc
add
sbb
add
stc
add
adc
push
insb
add
xchg
push
add
cltd
pop
mov
add
add
and
adc
dec
inc
add
mov
push
add
add
pop
dec
or
jbe
aas
std
sub
sub
add
call
xchg
mov
loope
add
out
mov
dec
add
mov
dec
add
or
push
add
pop
and
or
mov
mov
add
sahf
xchg
dec
push
cld
loop
sbb
add
in
call
add
nop
outsl
movsl
imul
lcall
les
mov
dec
add
sbb
into
sub
fmull
add
test
inc
add
andl
call
add
add
and
add
add
int3
shll
add
aaa
mov
mov
push
add
add
cmc
mov
push
add
add
fsubrs
add
lods
xchg
mov
icebp
int3
inc
add
cli
dec
add
shrb
add
inc
jbe
mov
imul
hlt
ss
add
and
mov
fisubrs
sar
mov
in
or
fidivs
fistpl
pop
sbb
loope
add
in
or
insl
lret
insb
add
add
arpl
jl
xchg
mov
dec
add
cmp
cmp
rcr
ret
arpl
in
movsb
and
inc
add
into
push
repnz
in
cli
call
inc
add
outsl
sub
movsb
pushf
stos
movb
pop
add
add
add
add
fdivp
xchg
addl
xchg
push
add
add
dec
sub
add
cli
cmp
xor
aad
add
add
add
fiadds
jne
add
negb
lret
into
sub
add
mov
fiadds
push
add
lret
sub
jl
cwtl
xor
repnz
out
rolb
imul
push
lret
data16
and
fistpl
mov
add
cmp
bound
ljmp
cli
test
and
inc
add
stc
inc
scas
or
pop
loopne
shlb
pop
call
or
add
add
mov
mov
in
push
add
pop
fnstsw
enter
stos
loop
mov
sub
bound
out
lods
dec
int
pop
mov
iret
mov
aas
cmpsl
roll
ret
xor
xor
push
add
cmp
add
movl
stos
call
add
lock
mov
ret
fldcw
addl
sub
in
jle
or
push
add
add
or
lods
test
xchg
add
sbb
cld
call
add
in
and
push
add
push
add
enter
arpl
mov
dec
std
push
add
cli
js
push
js
mov
sti
jmp
enter
xorb
mov
mov
xchg
mov
mov
ret
mov
aad
add
adc
adc
add
xchg
xchg
cmp
sub
add
test
out
add
jne
pop
xchg
lahf
repnz
xchg
jae
xor
jg
hlt
mov
add
jmp
jle
add
ficomps
movsb
data16
and
mov
add
add
jno
add
push
add
add
arpl
add
push
add
add
in
or
cmpl
cmpsl
jo
test
add
into
mov
dec
fwait
cmp
adc
xor
loope
sub
jne
outsb
add
mov
add
hlt
dec
lcall
in
xchg
rolb
mov
jmp
jg
add
add
add
cwtl
or
pop
add
mov
pop
scas
shlb
pop
add
dec
add
sbb
movsl
adc
out
sub
adc
add
adc
adcl
lods
or
scas
fdivr
add
jg
add
add
lods
shl
pop
add
sbbb
popa
mov
or
dec
push
add
push
sbb
push
add
jb
daa
loope
or
addr16
pop
add
pop
add
add
adc
loop
sbbl
push
add
bnd
mov
add
xlat
dec
add
add
jb
loope
sbb
mov
add
mov
and
pop
add
into
ds
pop
mov
cwtl
sbb
ja
and
out
nop
xlat
movsb
gs
adc
sub
fucom
pop
fistpll
lsl
add
mov
addr16
clc
add
ffreep
nop
add
into
push
add
gs
cltd
add
movsl
arpl
mov
cmpsl
inc
std
loopne
add
pop
call
add
dec
leave
dec
data16
mov
add
or
add
add
ljmp
add
xor
push
add
pushf
cmpb
add
dec
add
clc
pushf
int
loopne
movsb
call
mov
inc
push
adc
add
sbb
adc
add
mov
adc
cld
clc
xchg
jmp
cli
pop
add
add
sbb
push
add
jae
push
add
add
mov
and
sbb
dec
out
add
mov
dec
add
add
mov
add
loope
jp
cmpb
fbstp
add
xor
stc
adc
add
add
out
and
add
iret
hlt
jge
in
and
adc
ja
add
adc
gs
bound
enter
push
adc
dec
add
cmp
add
xchg
xor
je
cs
rcll
cmp
gs
cmp
xor
addr16
dec
add
or
dec
sbb
add
pop
add
loopne
loop
cmp
loope
mov
lret
das
xchg
add
mov
add
jmp
sub
loop
rcl
aad
add
cld
sbb
mov
add
add
addr16
andb
rcr
stc
dec
jp
push
add
pop
add
aam
add
inc
add
or
in
xor
xchg
addr16
ret
mov
gs
fldl
add
add
stos
pop
add
cmp
rcrl
add
xor
ss
cltd
pop
dec
dec
or
imul
int3
std
dec
sahf
neg
addr16
das
sub
jmp
lock
add
jno
inc
add
test
xlat
pop
cs
xchg
out
push
add
aad
mov
add
add
or
push
add
jno
add
popf
mov
add
add
repz
dec
or
cmpsb
xlat
add
int3
mov
xor
cmp
add
cmpsb
sub
test
or
test
dec
add
sbb
sub
dec
pop
add
call
add
jae
sub
jp
out
cli
xchg
lods
lods
sbb
dec
popa
pop
add
push
add
movl
cmp
jo
push
mov
sbb
xor
mov
pop
mov
jge
inc
jns
add
sar
or
push
add
mov
dec
pop
sbb
add
pop
pushf
mov
popf
jge
lcall
frstor
mov
add
add
aam
push
add
add
js
cltd
int
add
inc
pop
add
push
add
add
add
ret
loopne
pop
push
add
add
xchg
xchg
sbb
clc
adc
cmp
xchg
adc
ljmp
push
inc
or
or
add
sub
inc
add
add
cmpb
or
cmp
sbb
loope
aas
mov
outsl
nop
inc
sub
js
loope
fsts
xchg
ret
mov
jmp
add
daa
sub
pop
add
add
rclb
fisubs
ja
mov
iret
add
incl
add
clc
sbb
cmc
ret
mov
add
mov
mov
ror
lcall
add
add
mov
xor
pop
int
jae
movsb
mov
lds
push
add
push
add
xchg
jge
or
dec
gs
shlb
add
adc
shl
xor
add
jo
iret
int
add
mov
data16
out
test
fadds
add
add
sbb
repz
rol
pop
iret
xchg
xor
scas
jge
lods
rolb
add
aad
sti
dec
add
call
ficompl
subb
add
jo
xchg
test
pusha
add
add
pop
mov
xor
add
jle
and
mov
sbb
sbb
sub
dec
test
adc
add
leave
jb
jmp
mov
lret
test
add
sbb
test
sbb
add
pop
add
and
lds
add
lcall
mov
push
add
and
iret
add
push
or
add
loope
add
push
mov
xchg
mov
add
add
add
fnstenv
das
xlat
push
mov
aam
jne
mov
adc
out
scas
pop
dec
mov
dec
add
shrb
pop
add
add
dec
add
loopne
mov
add
lods
cmp
add
sbb
outsb
add
rcrl
add
add
jl
push
add
add
mov
push
add
data16
sub
jg
cmp
loop
fnstsw
add
cmc
pop
add
add
pop
in
adc
mov
or
adc
add
add
add
stos
xchg
inc
add
add
mov
add
sti
fxch
lahf
aad
insb
add
add
push
add
fldt
ficomps
insl
lods
aaa
inc
add
addr16
push
add
mov
repz
add
inc
add
mov
inc
dec
rep
ret
out
add
add
add
add
add
adc
add
push
add
pusha
add
std
sub
inc
add
xchg
mov
shr
inc
repz
icebp
mov
sub
ljmp
jle
loope
pop
cli
adcl
imul
test
stc
fucomi
pop
mov
add
jg
push
mov
xchg
loop
test
mov
int3
cmp
ja
lds
add
add
push
mov
stos
in
jb
imul
add
add
add
jmp
sbb
jno
add
enter
daa
dec
add
addb
sbbb
test
add
or
rol
loope
inc
add
outsb
add
add
pop
xor
sbb
add
je
inc
in
add
jo
xlat
or
dec
add
std
mov
fwait
pop
lods
and
pop
sti
lahf
mov
xor
mov
add
inc
add
lea
add
sub
imul
neg
mov
add
repnz
aaa
add
inc
add
jge
cmpsl
mov
mov
data16
cmpb
push
add
in
aad
cmp
xor
jo
adc
dec
push
add
je
jge
daa
lahf
and
add
jb
xchg
sbb
mov
sarb
cmc
shll
insl
mov
mov
sub
xor
adc
dec
add
add
pop
int
add
adcb
jmp
pusha
add
jno
movsb
adc
sub
lock
cmpb
pop
inc
insb
add
add
std
add
outsl
pusha
add
add
xor
mov
lret
test
push
add
xlat
sub
das
add
mov
data16
jmp
aaa
aad
sub
add
xor
dec
add
add
dec
add
add
daa
jno
std
loop
mov
cwtl
movsb
mov
add
test
add
jp
adc
jnp
inc
add
arpl
inc
dec
bswap
icebp
jg
jge
out
adc
add
push
mov
xchg
pop
popa
fimull
sahf
pop
add
mov
scas
xchg
les
rol
sti
rcrl
add
add
add
push
add
bound
and
add
add
add
inc
jg
movsb
sbb
push
mov
and
loope
dec
add
cmpsl
or
fcmovnb
mov
add
xor
sub
add
add
adc
mov
add
cmc
mov
push
add
add
add
add
xor
inc
movsl
push
sbb
fistpll
add
sub
rcl
inc
cmp
outsb
add
add
inc
add
add
enter
pop
sub
lds
pop
add
xlat
jle
xchg
jae
jb
ljmp
loopne
lock
repnz
lock
shlb
add
push
or
mov
dec
xchg
sub
and
or
cld
inc
mov
add
ror
jg
add
adc
leave
mov
inc
fwait
scas
xor
inc
dec
xor
nop
and
ret
add
mov
sbb
insb
add
stos
outsl
add
mov
popa
mov
jge
or
ret
mov
insl
add
cli
and
dec
rclb
jns
add
or
mov
adc
add
add
add
cmpsb
icebp
imul
add
inc
jp
pop
out
out
mov
in
mov
xor
mov
inc
xor
or
loop
sahf
roll
mov
jnp
cmp
in
mov
xchg
negl
gs
add
add
sub
jne
hlt
add
sub
into
insl
cmp
pop
or
pop
out
movb
aas
aas
dec
add
daa
jp
mov
rorl
out
lret
lahf
ljmp
xchg
into
insl
lods
inc
add
dec
add
jbe
add
sbb
ret
xor
fiadds
andb
pop
inc
add
push
cmp
out
mov
push
add
and
popa
std
inc
inc
into
mov
mov
js
mov
add
jo
test
lea
and
cmp
inc
add
and
es
orl
lock
add
loop
inc
add
pop
add
out
je
xchg
fdiv
adc
stos
sbb
outsb
add
lock
xor
add
ficomps
add
jbe
push
add
add
add
cmc
mov
sub
lods
xchg
jecxz
add
inc
mov
add
add
std
mov
add
les
add
rorb
add
add
inc
add
add
jbe
jae
stos
aad
loope
mov
add
inc
add
add
add
add
cmpb
idivb
add
imul
fidivrs
mov
aaa
xlat
gs
iret
loop
icebp
mov
adc
gs
mov
jns
add
add
xchg
hlt
mov
leave
sbb
add
outsl
mov
add
push
mov
movsl
adc
pop
sbb
sar
jbe
cmc
xchg
hlt
jmp
in
jb
rcrb
mov
inc
add
imul
cmp
add
rorb
loopne
add
push
add
or
mov
pop
add
stos
mov
in
mov
aaa
cmp
add
dec
xchg
ret
add
add
pop
add
sbb
and
repnz
dec
mov
mov
add
add
add
or
jge
pop
add
out
push
add
or
cmp
das
mov
mov
sbb
fdivrs
bnd
inc
add
pop
pop
stc
loop
lods
nop
sub
sub
stc
add
dec
cmc
into
push
add
addr16
cmp
sub
int
add
cmpsb
push
xorb
add
inc
add
lds
dec
add
mov
mov
add
jmp
add
sub
jno
add
add
lods
push
add
or
jae
pushf
or
sbb
ret
or
fimuls
add
sbb
lods
loope
add
adc
xor
insl
xchg
je
mov
sub
stos
add
add
xor
jp
or
xchg
sbb
and
or
add
jno
sbbl
inc
in
jecxz
adc
add
and
push
add
add
lock
jbe
push
add
add
icebp
pop
in
test
inc
add
add
pop
and
or
xchg
hlt
mov
inc
imul
pop
sub
add
cli
test
data16
data16
adc
ficoml
xchg
ds
rcrl
leave
inc
push
add
xchg
divb
cli
push
add
sbb
jbe
insl
cwtl
clc
lods
cmp
lcall
and
push
mov
add
jp
int
pop
call
clc
pop
add
or
jo
or
pop
divb
icebp
int
imul
fldcw
jg
inc
add
shrl
outsb
add
xchg
fldt
jge
adc
add
xchg
adc
les
rclb
add
and
into
cmp
mov
add
xlat
dec
add
add
or
pop
mov
dec
add
mov
sub
insl
out
fisubl
add
repnz
xchg
testl
sub
add
iret
add
sbb
sub
outsl
mov
fst
dec
add
cld
xchg
jns
add
in
dec
add
data16
jle
rorl
aam
pop
add
add
decl
add
add
add
xor
repz
inc
add
xor
add
add
add
inc
push
add
outsb
add
bound
loope
insl
add
cmp
lea
add
add
push
add
mov
in
dec
add
push
jge
add
testb
jnp
mov
or
das
inc
add
adc
add
mov
sub
ret
mov
add
jae
xlat
adc
add
add
and
mov
add
data16
lret
stos
xchg
ja
pop
add
add
int3
push
add
add
and
sbb
add
xchg
add
enter
mov
sbb
push
jmp
xchg
add
leave
popa
mov
adc
xchg
decb
and
rcr
adc
inc
ja
jecxz
add
pop
add
push
gs
insl
jb
fists
sub
add
add
movsl
adc
inc
mov
sbb
data16
sub
aam
add
pop
fnstsw
mov
add
xorb
add
add
fsubrs
add
outsb
add
repz
sahf
xor
push
add
add
add
xchg
mov
add
push
push
add
add
jle
xchg
xor
add
or
xor
cltd
roll
lods
cmp
mov
stc
mov
add
add
and
add
stos
nop
lret
fldl
outsl
rcll
push
add
add
jmp
sbb
repz
outsl
movsb
add
pusha
add
imul
or
add
mov
stos
adc
add
or
fstp
add
add
sub
xor
mov
or
xor
pop
jb
fwait
inc
mov
dec
add
add
cmpl
clc
xchg
repnz
push
add
jne
add
add
pop
aad
stos
xchg
ret
sbb
iret
cltd
rcll
mov
add
xchg
jl
xor
push
in
fisttpl
xchg
pop
add
ljmp
jbe
add
sbb
inc
add
mov
js
dec
add
fdivrs
mov
lods
out
les
push
add
pop
add
repnz
xchg
arpl
std
pop
add
add
imul
jge
or
fadds
lahf
sub
std
xor
lods
or
inc
xchg
cld
mov
dec
and
scas
pop
jns
add
add
aaa
loope
add
out
shr
clc
and
inc
testb
xchg
js
dec
test
push
add
cmpsb
and
mov
and
ficoml
xchg
push
in
inc
add
push
movsl
jecxz
inc
mov
add
or
test
add
add
popa
ret
xor
ror
mov
add
nop
out
neg
add
sbb
imul
pop
add
xchg
lds
add
in
push
add
xor
mov
add
pop
xor
xchg
ss
imul
sub
add
fsubrl
cmpsb
xchg
int3
test
add
insl
xchg
aas
sub
out
jmp
cmp
xchg
imul
loopne
jg
push
popf
mov
and
sbb
adc
add
shrb
pop
add
imul
jmp
and
imul
add
mov
jb
popa
enter
add
cmp
dec
add
fdivrp
repz
add
add
sbb
adc
dec
pop
add
jp
lods
mov
sbb
adc
cmp
sub
test
std
sbb
jb
jecxz
outsb
add
pop
hlt
add
pop
ret
mov
data16
vpmuludq
int3
jbe
pop
add
loopne
in
dec
add
dec
cli
addl
loop
add
cmpsl
and
call
jo
xor
aaa
aad
add
lods
or
add
mov
mov
xchg
or
les
add
push
add
cmp
cmp
jmp
ja
add
jne
mov
lcall
push
rcr
adc
mov
add
ja
mov
fcomps
add
movsb
sbb
stc
mov
dec
add
mov
push
xchg
adc
add
mov
js
popf
jle
clc
sbb
push
add
add
insb
add
aam
inc
pop
add
stos
or
pop
add
and
add
or
add
jl
fdivp
push
add
add
add
insb
add
add
add
or
call
add
pusha
add
insl
dec
add
hlt
jge
or
nop
sbb
in
imul
loopne
int
les
arpl
fsubs
lahf
and
enter
adc
pop
add
mov
add
leave
popf
cwtl
pop
add
imul
loop
inc
add
add
add
add
xor
jns
sbb
mov
xorl
mov
cmp
fldt
hlt
lods
inc
add
incl
dec
add
andl
adc
imul
push
add
addb
dec
add
fdiv
rcll
ret
add
xchg
mov
jns
ja
les
add
mov
stos
loopne
mov
jecxz
add
add
xchg
add
mov
add
mov
push
es
mov
loope
or
dec
mov
mov
insb
add
aam
add
fcomi
shrb
sahf
test
cmp
mov
add
lret
cmp
xor
loope
add
add
adc
mov
push
add
cmp
das
mov
cmp
add
dec
lds
sar
inc
rorl
or
int3
dec
add
xchg
repnz
mov
nop
scas
sahf
popa
adc
lret
sbb
add
push
add
repz
pop
add
xor
add
cmc
int
add
add
xchg
lret
adc
add
stc
push
add
and
add
add
mov
xchg
add
fidivl
sub
dec
mov
lret
cmpsl
je
movsl
push
add
dec
dec
add
loop
ja
fistpl
push
add
enter
int
add
mov
add
test
add
gs
adc
xchg
xchg
fs
pop
call
add
mov
push
add
add
movsl
daa
rcr
sbb
pop
inc
mov
add
fcomps
jmp
repnz
mov
add
mov
push
add
mov
mov
sbb
mov
cmp
jmp
xchg
inc
add
add
mov
sarl
fcomps
rorl
bt
sbb
insb
add
xchg
inc
add
add
add
rolb
sbb
mov
add
pop
add
add
mov
inc
insl
mov
out
pushf
xor
add
add
add
and
add
loope
add
sbb
sbb
add
add
sti
std
out
add
xchg
add
aad
ja
scas
jo
popf
nop
daa
sub
push
xchg
push
xchg
mov
bound
adc
cli
fisttps
adc
dec
add
repnz
add
mov
mov
ret
ja
add
sbb
mov
rcrl
imul
fdivrs
inc
jns
add
add
adc
adc
orl
xchg
inc
pop
add
add
scas
insl
das
aad
sub
pop
rcrl
into
xchg
das
jae
add
stos
test
sub
lock
lret
sub
add
add
push
add
push
add
inc
add
xchg
div
add
xor
insb
add
call
add
cli
add
inc
xor
jne
and
mov
add
add
fsubrl
jmp
pop
dec
clc
lret
push
add
push
rolb
test
add
ficoms
push
add
add
out
stc
jb
movsl
xor
into
mov
add
add
adc
mov
push
add
repnz
cmp
add
rorl
imul
add
add
add
add
sbb
mov
add
aad
das
ret
inc
add
mov
cmp
aad
xor
enter
add
add
add
jbe
loop
add
jae
add
lret
push
add
test
roll
outsl
aad
push
add
mov
mov
cwtl
mov
mov
and
add
add
dec
add
add
add
mov
lods
jge
xor
repz
test
mov
xlat
xor
shlb
pop
aas
lcall
add
sbb
jnp
add
pusha
add
cmpsl
pop
xchg
sub
imul
movsb
aad
lcall
sub
jge
add
dec
cli
jge
inc
sahf
add
and
inc
add
pop
push
rcrb
gs
add
add
xor
sub
aaa
mov
insb
add
add
jae
jnp
test
xor
dec
jb
jecxz
inc
or
pop
add
mov
scas
jge
lret
add
add
add
sub
notl
mulb
add
jae
xlat
fsubs
mov
lock
xor
jo
rcll
repnz
sbb
stos
cmc
movsl
push
in
add
or
pop
add
addr16
lods
add
add
lds
add
inc
in
add
fsts
cmp
jmp
fdivrl
movsb
jns
push
add
add
out
ret
das
mov
sub
sbb
xchg
mov
inc
add
loop
daa
inc
dec
cmp
add
add
cld
push
add
in
sub
add
mov
incl
add
mov
xchg
add
sbb
sti
mov
ds
lock
jae
add
testl
cmp
fwait
inc
jnp
push
add
xor
xor
pop
jg
add
xor
daa
push
add
xlat
mov
bnd
cmp
out
sarb
cmpsb
inc
jno
fwait
jae
xchg
fnstenv
pop
xchg
sbb
add
sub
xchg
decl
and
je
ret
subb
add
cmp
data16
jns
addl
xor
adc
mov
sub
add
add
cmp
add
adc
popf
mov
xor
int
test
mov
sar
outsl
into
xchg
push
add
jo
ss
rorl
adcb
mov
scas
adc
dec
add
xor
dec
add
mov
fwait
xor
ret
xadd
push
xchg
mov
js
cmp
inc
mov
fwait
adc
mov
add
les
add
mov
add
adc
and
dec
inc
add
add
inc
adc
stos
jle
push
add
add
cmp
out
out
ljmp
jo
jb
dec
jne
mov
add
pop
sbb
enter
lea
add
push
add
add
xorb
addr16
dec
add
cli
xor
inc
add
jge
add
scas
jg
fistl
test
pop
add
xor
inc
add
add
jnp
push
add
jle
add
add
sub
mov
add
mov
dec
into
pop
add
pop
addr16
mov
and
jg
cmp
cltd
int
add
add
xor
push
add
lock
and
mov
lahf
aaa
test
cmpsl
xor
out
ret
lea
add
fisubs
hlt
sub
pop
xchg
bound
es
jbe
mov
add
xor
mov
push
cmp
xchg
sub
add
xchg
pop
dec
add
xchg
sub
pop
add
jb
sbb
inc
add
push
call
mov
int
jge
add
add
pop
add
add
and
dec
imul
aam
add
sbb
mov
add
inc
enter
sub
jne
mov
push
add
sub
les
pop
add
add
mov
cld
pop
aam
leave
stc
les
les
pop
stos
in
dec
add
sbb
arpl
mov
jp
sub
add
stc
xchg
pop
addb
xlat
popf
fwait
pop
fistl
outsb
add
add
ret
lock
and
xchg
dec
lds
sub
aaa
in
add
add
add
add
jp
movsb
xchg
cld
rcrl
and
lret
mov
lock
and
clc
testb
xor
loop
add
adc
inc
mov
lahf
add
xlat
mov
push
add
xor
add
popf
push
lahf
rclb
scas
out
sbb
fisubl
add
sbb
mov
xor
jle
fimuls
stos
ficompl
jmp
add
fldt
lret
mov
add
fsts
add
xor
xchg
push
enter
inc
std
aad
imul
add
fnstsw
add
adc
js
or
add
repz
adc
lds
add
lods
dec
clc
icebp
mov
jns
aas
xchg
mov
xor
addl
xor
xor
ljmp
std
mov
add
and
or
ja
popa
notl
hlt
bound
pop
and
sahf
sub
addr16
bnd
add
out
ja
add
add
add
pop
stc
or
cltd
arpl
push
add
add
mov
inc
outsl
mov
mov
sbb
add
add
fmull
push
add
pop
jae
mov
jg
add
pusha
add
aam
add
jmp
test
lret
fmul
ret
clc
adc
in
mov
inc
add
pop
add
or
add
inc
add
movlps
pop
add
add
sub
movsb
add
insb
add
sbb
xor
xor
ja
add
out
jmp
out
sub
xor
sbb
in
mov
or
add
push
add
cmp
dec
add
ret
insb
add
pop
aad
int
dec
add
cltd
xchg
lods
push
add
scas
adcl
and
popf
mov
inc
add
jns
cmp
add
shlb
add
and
xor
test
pop
fdivs
sahf
out
fwait
add
dec
push
add
lds
jno
inc
add
iret
jmp
pop
add
cli
lahf
lea
repnz
add
add
add
leave
data16
jns
sbb
call
pusha
add
mov
add
ficompl
cld
jbe
in
arpl
test
push
add
jl
pop
iret
xchg
ret
dec
add
outsb
add
addl
jmp
add
mov
lods
jg
add
fwait
or
jb
pop
outsl
scas
jmp
push
jmp
ljmp
add
xor
outsl
sbb
enter
add
push
sub
mov
insb
add
loope
add
add
cmp
adc
cmp
loopne
fdivrl
add
adc
sbb
push
jnp
sti
push
add
into
mov
fcompl
add
add
dec
add
leave
push
add
jg
ja
popf
mov
enter
add
shrb
mov
dec
mov
lods
cmpsl
or
add
dec
add
int3
loopne
add
pop
or
fwait
push
add
xchg
add
mov
fnsave
popa
push
add
cmp
sub
xchg
push
add
cmpsl
dec
jmp
sub
lds
gs
fisttpll
out
add
jbe
pushf
sbb
sbb
push
add
add
inc
je
dec
mov
pop
xchg
jbe
or
jmp
stc
lret
xor
cltd
push
add
add
push
add
je
add
cmovne
fnsave
fwait
test
sub
les
add
pop
add
inc
or
mov
push
sbbb
lods
movsb
push
push
add
add
pop
adc
mov
imul
pop
shl
loop
xor
xor
inc
shrl
add
xchg
mov
bound
lret
pop
add
push
iret
cmp
icebp
cmp
xchg
mov
add
or
pop
add
test
shrl
mov
add
jns
pushf
xchg
out
in
cmc
and
js
loope
cmpsl
add
sub
add
mov
sub
std
aam
adc
scas
mov
add
fcmove
ss
mov
cs
jecxz
add
std
xchg
push
jo
cmp
jl
push
add
xor
out
jle
data16
sbb
int
add
js
push
add
bound
out
add
mov
in
or
clc
lret
add
jns
or
sbb
dec
add
xchg
xchg
shlb
add
pop
in
rolb
add
sbb
cltd
cmc
xchg
fbld
add
aam
addb
pop
xchg
add
add
add
and
mov
mov
pop
add
or
jmp
pop
mov
and
pop
in
add
loope
add
add
fcmovnu
in
add
sub
add
xor
sahf
sbb
ret
das
sub
mov
add
xor
sub
add
loope
push
or
lods
lcall
add
js
cmp
fyl2xp1
and
ret
push
add
dec
add
ficompl
add
test
andb
pop
movsb
or
push
add
stc
mov
out
pop
add
roll
mov
add
mov
pop
repnz
cmpsb
call
and
insb
add
fldenv
gs
add
add
js
cwtl
inc
add
xor
or
xchg
fimull
aaa
dec
add
dec
add
add
aad
add
sti
loopne
add
inc
and
add
and
jl
imul
aaa
popf
sub
outsb
add
push
jno
movsb
imul
jae
pop
add
mov
xchg
hlt
inc
add
sub
cmp
adc
test
add
into
or
ftst
sub
popf
leave
push
add
cmpsl
into
pop
add
shll
push
add
sbb
add
cmp
add
add
adc
pusha
add
add
add
add
add
int
in
xchg
jnp
rcrl
push
add
push
add
add
lret
adc
add
fwait
jle
fdivrs
stos
icebp
inc
add
add
add
jne
movsb
mov
inc
and
sbb
xchg
add
adcb
add
dec
aad
add
mov
add
xor
pop
mov
aaa
push
subl
test
adc
lahf
call
add
add
jae
sbb
bound
mov
adc
js
xchg
jno
jnp
add
push
add
add
lret
or
rep
add
add
sbb
jbe
dec
or
inc
add
pusha
add
inc
jb
mov
repnz
ja
call
lods
xchg
sub
hlt
pusha
add
push
add
cltd
or
nop
xchg
sbb
add
arpl
and
push
add
mov
das
inc
inc
add
insl
out
test
out
addb
fcomps
mov
add
cmp
cmpsl
lahf
inc
add
std
add
dec
add
or
add
filds
add
push
add
xor
add
add
sbb
cmpsb
fsts
aas
adc
jg
pop
mov
shlb
mov
jl
loopne
dec
loop
fcmovb
add
jne
add
setb
add
or
jl
dec
adc
pop
add
out
mov
fisubrl
cmc
pop
add
dec
cmpsl
jl
pop
out
test
add
add
and
sub
add
dec
add
add
add
dec
and
cmpsb
ret
and
sbb
shrb
jo
xorb
test
pop
add
les
call
inc
add
xlat
sbb
cmp
add
in
add
mov
in
loop
add
lahf
mov
cwtl
add
pop
add
sti
jp
or
mov
jb
xor
bound
xor
ljmp
add
add
lcall
js
and
push
add
out
mov
ja
mov
jae
outsl
mov
call
cltd
jmp
aad
jb
lea
popa
test
cltd
das
sub
xchg
add
sbb
pop
add
filds
xlat
imul
pop
push
dec
push
add
pushf
sbb
lea
add
test
enter
movsb
or
mov
cmp
out
inc
add
gs
adc
repnz
and
add
cwtl
enter
add
sahf
xchg
cwtl
fcmovu
add
insb
add
dec
add
cmovge
add
lds
fstpl
and
xor
icebp
dec
add
addr16
jb
sub
shlb
in
mov
pop
add
in
xlat
aaa
imul
int
mov
popa
jbe
cmp
dec
add
mov
popa
shlb
mov
cmpsl
push
add
mov
pop
dec
loopne
daa
xchg
push
add
push
add
sub
mov
add
add
call
jnp
ss
xor
lock
add
push
add
push
xchg
mov
pop
inc
add
add
sub
clc
lods
in
jmp
or
popa
out
repnz
xrelease
sub
adc
shll
imul
add
xlat
xor
lods
rcrl
add
or
aam
dec
add
sbb
sub
fldenv
sub
mov
scas
pop
add
fstpl
mov
dec
and
or
cmc
add
pop
mov
add
mov
movsb
movsl
add
ror
aad
inc
add
mov
add
call
les
mov
repz
aam
mov
pop
aaa
mov
pop
dec
xor
repnz
data16
adc
xchg
mov
add
add
add
cmp
push
add
clc
popf
push
cmp
add
add
pop
cld
aas
push
xor
scas
xchg
push
add
add
jae
add
or
mov
xor
in
dec
out
lea
mov
shlb
sbb
ficoms
add
xchg
xor
xor
imul
adc
push
add
jo
mov
add
push
pop
add
add
mov
mov
add
shl
cmp
adc
mov
cwtl
ja
mov
or
jecxz
scas
sbb
add
add
jns
add
inc
add
test
test
sti
sbb
jae
push
and
and
add
add
mov
in
add
xchg
rcrl
iret
inc
add
ret
push
add
add
outsb
add
lods
pusha
add
outsb
add
mov
add
scas
pop
and
add
lds
jo
movsl
aad
add
jnp
jnp
add
adc
and
add
iret
loope
add
cwtl
lods
add
lods
dec
add
inc
add
cmp
aaa
xchg
scas
repnz
dec
add
jns
add
out
add
xchg
add
or
sbb
add
notl
cli
lret
sub
rcll
aad
into
lahf
xchg
xor
add
add
add
scas
test
das
enter
or
add
and
mov
add
add
cmc
bound
sbb
mov
dec
int
mov
jbe
aas
pop
add
push
or
mov
add
data16
add
xchg
je
dec
add
sub
loopne
jecxz
fxtract
pop
jb
scas
sbb
addr16
push
add
std
inc
add
cli
daa
and
test
xor
mov
pushf
pop
call
add
out
mov
clc
push
add
lods
mov
add
add
repz
cmp
dec
ja
enter
xor
enter
sub
add
ret
loop
lea
push
add
pop
mov
in
pop
xor
adc
push
push
add
mov
add
xor
int3
movsl
ffree
les
add
add
dec
in
bound
mov
xchg
push
mov
jecxz
hlt
sub
add
dec
add
mov
lcall
data16
jne
cmpsb
movsl
loope
rcr
popf
divl
xorb
mov
add
dec
push
test
out
push
add
test
hlt
scas
ficoms
call
fldt
add
add
add
add
add
gs
test
mov
in
outsb
add
push
add
add
sbb
add
daa
adc
pop
jns
ds
mov
adc
cmp
loop
inc
sbb
pop
add
int
adc
sbb
push
xchg
loopne
loop
mov
cmp
push
add
out
add
cmp
add
cmpsl
cli
ret
mov
add
sbbl
pop
add
add
fwait
fwait
push
add
aas
daa
lods
sbb
ficompl
add
add
mov
fnsave
and
outsl
add
add
xlat
das
nop
imul
mov
dec
movsl
and
xor
int
cli
push
in
aam
jb
push
add
dec
add
add
iret
mov
mov
and
or
mov
add
and
rorl
add
in
add
adc
sbb
test
push
add
add
add
add
add
les
sbb
addb
xor
jne
mov
in
sbb
adc
and
les
fnstenv
mov
add
lret
mov
and
lcall
ficompl
add
mov
add
add
mov
add
daa
test
xchg
dec
or
xchg
lods
lods
sub
ret
mov
mov
add
stos
mov
into
pop
add
pushf
xchg
xor
add
mov
nop
rolb
and
shrb
add
jp
xor
out
add
adc
cmp
mov
xor
jns
jmp
add
lods
xor
inc
add
add
add
mov
mov
mov
dec
add
fwait
cwtl
mov
aam
add
mov
adc
int3
ds
sub
repnz
add
dec
mov
fmuls
add
ret
mul
pop
jnp
stos
ljmp
xchg
xchg
icebp
xor
sbb
adc
sub
mov
add
rclb
add
int3
daa
lods
jmp
popf
xor
orb
push
add
add
shll
add
add
daa
xchg
call
test
pop
je
add
imul
xchg
inc
inc
add
lea
xchg
lods
xor
loope
sarl
cld
jbe
ja
popa
add
lret
add
mov
xorl
fstl
add
add
add
movsl
enter
push
add
pop
add
push
add
sub
fcompl
lea
mov
pop
xchg
mov
fsub
bound
mov
movsl
mov
inc
add
add
mov
jb
push
add
inc
push
sbb
sub
fisttpl
add
loope
add
or
fadds
add
add
jge
pop
add
leave
xor
and
add
add
mov
add
out
lea
movsl
sub
cwtl
and
add
inc
add
xorl
add
lcall
jne
mov
add
cmp
dec
add
inc
add
jecxz
in
daa
mov
in
add
add
lods
mov
cmp
add
xchg
xlat
mov
add
lds
in
stos
roll
jl
scas
sti
mov
xor
sub
jle
xchg
bound
and
mov
jb
imul
jmp
adc
mov
jle
and
mov
inc
adc
dec
add
xor
xor
adc
pop
adc
pop
mov
rcl
push
fcomi
enter
aas
bnd
and
mov
xor
daa
sub
jo
hlt
movsb
pop
push
add
mov
xchg
dec
add
add
lret
add
aas
adc
jp
filds
sbb
push
add
add
add
add
xchg
fidivrl
mov
add
jnp
add
add
orb
and
int
add
loop
mov
sub
and
enter
add
or
add
pop
push
add
clc
inc
gs
daa
cld
icebp
add
in
inc
adc
aam
cwtl
push
jmp
mov
lods
jbe
in
nop
add
xor
cmp
mov
gs
pusha
add
jb
popa
push
add
inc
fnstsw
sub
sub
sti
jl
and
cmp
fsubs
insb
add
aaa
cmc
sbb
addb
add
je
insb
add
dec
add
sub
arpl
inc
add
lret
push
add
stos
popl
out
int
add
iret
insb
add
movl
dec
add
dec
add
add
sti
stos
cmc
mov
add
push
lahf
xchg
leave
int3
or
inc
add
pop
push
add
add
jae
xchg
stos
sti
in
push
mov
imul
hlt
fidivrs
mov
call
les
stos
stos
jp
bound
pop
fimull
pop
aam
xchg
ret
xchg
das
mov
add
gs
std
gs
add
mov
add
daa
int3
dec
add
and
inc
add
mov
add
push
mov
add
jl
test
pop
add
sub
push
cli
cmc
sub
add
xchg
jge
flds
add
push
add
add
pushl
aam
test
aaa
or
add
push
add
add
sub
aad
call
adc
clc
cmp
push
out
ret
idivl
add
cmp
ja
jne
icebp
cmpl
cli
xor
add
outsb
add
adc
sbb
sub
rcrb
cmc
pop
add
or
push
repnz
ljmp
ds
ficoml
cmpsl
add
add
lods
test
rol
stos
mov
ss
imul
sbb
mov
out
add
std
in
dec
add
add
out
and
dec
icebp
pop
add
fwait
ja
jmp
add
inc
cmp
sub
insl
mov
pop
dec
add
add
add
push
scas
push
add
lret
or
and
jno
add
jp
mov
inc
push
and
in
dec
mov
das
jp
pushf
mov
jnp
lock
test
add
add
add
inc
add
inc
adc
cmc
mov
inc
add
ficompl
lret
or
test
loopne
add
cmp
sti
cmp
adc
cmp
or
push
add
add
in
fsubrl
add
sub
add
inc
add
add
out
jno
test
pop
jno
add
pop
and
pop
push
ja
testb
in
mov
adc
lret
shl
push
add
fiaddl
fsubl
add
mov
mov
add
and
int
ja
mov
add
imul
mov
pop
add
lret
mov
add
fcmovu
sub
mov
fiaddl
add
dec
addr16
cmp
xchg
dec
sub
add
xchg
or
or
inc
add
lret
iret
sbb
xchg
aad
fwait
pop
std
or
mov
inc
add
add
add
sub
fcmovnb
scas
or
add
mov
in
add
add
in
jp
add
dec
add
data16
pop
mov
sub
xchg
xchg
mov
mov
jmp
int
sti
flds
add
jmp
daa
ret
sarl
push
add
insb
add
jecxz
add
inc
aad
push
add
mov
inc
mov
push
add
mov
adc
popf
aam
xchg
jae
cmp
mov
das
push
jnp
xchg
jge
stc
mov
adc
in
daa
add
mov
mov
add
add
fsubrs
or
add
lea
add
add
add
dec
lret
add
jg
xor
inc
add
or
lcall
add
inc
add
push
add
add
mov
xchg
mov
and
lea
and
aam
int3
mov
add
pop
fidivs
data16
iret
sub
add
push
clc
in
adc
dec
add
enter
or
into
cvtps2pd
pop
add
add
pop
adc
push
add
add
clc
jecxz
cmp
psubq
add
sub
inc
and
fmul
fwait
sti
pop
add
mov
dec
add
pop
xor
leave
cmove
insb
add
add
test
js
and
add
mov
add
test
add
fwait
nop
cli
cmp
xchg
rorl
sub
bound
mov
call
sub
mov
repnz
add
add
mov
inc
sbb
cld
jns
sbb
add
dec
add
in
test
jp
dec
add
cltd
mov
pop
das
xchg
mov
fndisi(8087
fsts
xor
cmp
negl
push
add
add
add
sbb
mov
in
sbb
bound
ret
dec
add
movsl
mov
fdivl
add
rorb
add
dec
cmp
cmp
xor
cmc
mov
inc
pop
lret
xchg
jne
and
mov
xchg
xor
jb
movsl
add
js
adc
add
pop
add
scas
push
add
test
mov
sub
sub
jge
loope
addr16
fcomps
add
or
mov
push
lcall
dec
add
pop
add
add
inc
mov
mov
test
xlat
or
lcall
adc
cmp
subl
lret
jecxz
mov
add
push
xchg
add
sub
jbe
fwait
into
xchg
in
imul
mov
add
pusha
add
sti
mov
sti
out
das
adc
inc
add
add
fdivp
movsl
sub
int3
stc
insb
add
add
xchg
dec
add
pop
add
add
jne
add
cmp
mov
mov
add
fcmove
xor
ficomps
cmp
sub
cmpsb
fldl
cmpsb
in
xchg
pop
add
je
push
add
add
sbb
cmp
add
add
bound
aaa
push
add
das
les
or
sub
and
mov
mov
mov
aad
add
pop
or
stc
and
lds
fdivl
add
ljmp
shrb
sbb
and
add
and
leave
int3
into
mov
or
lds
push
add
pop
and
mov
cmp
pop
shld
jmp
mov
or
add
fsubr
std
inc
lcall
push
add
ret
or
mov
add
xlat
add
mov
stc
rcr
out
sahf
cmc
and
xor
mov
push
ret
cs
call
add
add
add
add
insb
add
sub
in
add
mov
in
add
pop
add
cmpsl
ljmp
add
dec
fcmovnbe
ret
dec
in
add
mov
inc
add
adcl
test
cmp
insl
in
dec
add
dec
mov
xor
fucompp
sub
inc
add
ucomiss
sbb
mov
push
dec
iret
orb
pop
add
add
add
iret
jae
push
add
mov
add
loope
add
in
mov
add
add
dec
add
pop
add
adc
add
pop
int3
dec
add
add
cltd
fdivrl
add
dec
dec
add
jnp
xchg
inc
add
and
jno
in
add
or
lcall
push
add
add
cltd
popa
xchg
cli
movb
add
ljmp
add
jp
add
add
fcmove
mov
inc
jns
add
daa
shl
dec
add
stos
lods
ljmp
add
add
xchg
add
mov
leave
sbb
sub
xor
pop
arpl
xor
xor
aaa
inc
add
jmp
cmpsb
sub
inc
das
test
add
outsl
jge
in
repz
mov
cmp
add
pushf
sub
jnp
cmpsb
add
cld
repz
sti
int3
and
xchg
popa
sbb
push
add
lcall
add
add
sbb
rolb
call
dec
add
std
adc
and
sub
sbb
add
inc
or
mov
dec
add
das
jno
imul
dec
dec
cs
daa
dec
cmovne
int3
push
add
mov
add
test
addr16
add
add
add
mov
xchg
das
lock
add
sub
daa
lcall
in
iret
sahf
pop
in
xor
adc
adcl
hlt
out
add
loopne
add
add
add
arpl
mov
popf
cmp
push
add
or
xor
add
cmpsl
inc
add
push
add
popf
xchg
test
and
add
sti
aas
or
jle
ret
mov
lahf
push
add
movl
movsb
xrelease
out
add
aam
add
mov
push
std
pop
add
or
add
pop
lret
sti
lcall
add
ljmp
imul
add
mov
add
call
add
jecxz
add
lods
mov
ljmp
inc
lcall
add
lds
pusha
add
cmpsl
or
pop
add
rcl
push
add
inc
mov
xor
add
movsl
push
mov
test
jae
fcomip
pop
bound
insb
add
sbb
add
int
push
add
add
push
add
pop
aaa
sub
test
mov
push
cmp
les
cmp
sarl
arpl
add
mov
mov
jne
clc
outsl
clc
mov
add
push
fstp
popf
push
add
icebp
mov
add
add
inc
add
xchg
sti
roll
popf
xor
push
add
popa
addr16
xchg
es
jle
mov
test
imul
cmpsl
rcrb
add
jne
pushf
in
leave
pop
mov
add
mov
or
xor
or
mov
add
add
add
in
repnz
add
add
inc
inc
cmp
popf
xchg
aas
mov
test
lods
lea
add
xchg
and
add
lock
adc
test
add
push
lock
add
lret
add
jmp
push
add
ret
adc
add
add
test
cli
pop
xor
add
cmp
inc
add
add
ljmp
fwait
push
mov
inc
test
nop
fwait
test
sahf
jge
inc
xchg
pop
sub
cmp
sub
in
cmpsb
sahf
repnz
in
inc
adc
sbb
add
add
add
mov
pop
add
mov
add
test
xchg
add
ret
inc
inc
and
xlat
sti
inc
or
pop
data16
or
sti
dec
jae
gs
add
add
and
repnz
add
cld
mov
lods
jecxz
or
popl
mov
inc
add
hlt
adc
mov
xchg
add
xor
imul
xor
jp
jmp
outsb
add
decl
dec
call
sti
inc
add
add
or
mov
sub
add
add
data16
test
lahf
add
xor
jo
sbbl
xor
xchg
lea
outsl
in
pop
add
add
push
add
inc
add
mov
push
mov
add
lods
decl
and
inc
add
ret
aad
imul
add
add
add
add
or
sahf
cmpb
or
repz
jge
push
ficomps
pushf
jecxz
add
fwait
inc
sub
hlt
xor
add
sbbb
mov
cmp
or
int
bound
adc
and
mov
sbb
add
sbbl
push
add
add
loope
add
pop
inc
xor
xor
add
shlb
pop
arpl
inc
movsl
mov
mov
add
jg
add
insb
add
mov
xor
and
leave
inc
add
push
add
arpl
jmp
sub
add
push
movsb
pop
add
aas
xchg
mov
aad
add
add
adc
pushf
push
xchg
sub
shll
mov
dec
add
add
icebp
mov
xchg
cmc
add
pusha
add
add
pop
shrb
ljmp
pop
inc
adc
or
xchg
add
or
ficomps
and
ja
inc
add
add
lcall
pusha
add
pusha
add
cltd
fdivp
aaa
cmpl
xor
cmp
sub
cmpb
inc
add
add
add
les
pop
push
sub
lds
add
mov
xchg
leave
jo
insb
add
data16
xchg
mov
or
or
add
mov
and
mull
fistpll
push
add
add
jae
xchg
sbb
adc
jbe
leave
and
test
and
add
int3
xchg
push
add
push
add
out
cmp
add
adc
jecxz
fdiv
lret
hlt
imul
mov
dec
xor
mov
stos
inc
add
lahf
in
repnz
sbb
lcall
sbbb
popa
xchg
dec
add
xchg
mov
ret
repz
add
jp
cs
or
fildll
repz
add
sahf
xchg
push
add
sbb
fidivs
sub
mov
lahf
inc
add
test
loopne
dec
push
cmp
add
mov
sbbl
xchg
add
and
rorl
add
mov
or
bound
add
loope
push
mov
add
cmc
xlat
cmp
int3
pop
rcll
jbe
jnp
or
add
add
jns
inc
add
cmpl
mov
mov
clc
scas
jecxz
lock
xor
add
add
cmp
stos
push
into
mov
add
add
orl
add
les
add
mov
cmc
sbb
mov
add
loop
add
std
sub
dec
add
out
mov
data16
out
add
lret
push
add
cmpsl
leave
nop
gs
lret
cltd
loop
ljmp
mov
in
add
dec
add
repnz
or
xchg
fstpl
add
sub
pop
add
cwtl
fxch
cli
loop
add
xor
lds
add
inc
add
adc
lods
mov
imul
mov
xor
pop
lret
cmp
out
add
stc
imul
mov
jno
add
ja
add
stos
cmp
xor
rcrb
ret
add
ret
push
xchg
jmp
add
bnd
fsubl
push
add
mov
icebp
in
push
dec
add
inc
add
je
ljmp
in
jp
jb
cmpsb
rcrb
and
jle
mov
call
in
lahf
leave
or
addl
xor
stos
les
andb
xor
out
addr16
add
pop
rolb
mov
sbb
testb
filds
add
xorb
jle
cld
mov
call
add
pop
add
imul
add
and
cmp
div
fwait
jno
dec
add
fwait
rorb
lahf
inc
add
fcoms
pusha
add
inc
add
lds
ljmp
aad
jl
out
push
repz
pop
in
cmp
xor
add
in
add
inc
or
ja
aad
add
cli
sub
xorl
mov
jno
mov
add
adc
or
cmpsl
dec
pusha
add
mov
dec
add
pop
sti
int3
movsl
fildl
clc
ljmp
add
add
add
adc
call
loope
inc
sahf
pop
add
add
stc
inc
add
je
jle
sbb
loope
aam
mov
xchg
cmp
jp
jo
cli
push
add
frstor
imul
jns
add
or
enter
pop
adc
cld
pop
add
add
sahf
sti
ds
aam
mov
add
ret
subb
xorb
add
popf
ss
xor
xor
mov
add
xlat
cld
and
add
jne
sbbl
out
jp
int
frstor
dec
out
mov
add
push
add
add
fnsave
mov
jmp
mov
add
outsl
fcompp
in
lret
sbb
push
xor
imul
subl
or
mov
xchg
mov
sbb
aas
popf
movb
mov
jl
enter
xchg
mov
out
and
add
rcll
xorl
in
push
add
jnp
push
add
mov
add
sub
dec
add
mov
push
add
js
shll
add
flds
add
aaa
xchg
aad
add
mov
add
stc
nop
or
add
nop
pop
adc
jb
sub
jns
jo
jbe
filds
stc
jecxz
out
add
add
out
in
mov
cmp
sub
adc
add
mov
add
add
adc
daa
stos
xlat
dec
add
mov
add
dec
push
add
fistl
sub
rcrb
leave
dec
add
xor
sub
call
fcompl
or
push
add
sbb
add
jp
lret
jg
add
add
adc
mov
mov
mov
popf
mov
add
mov
add
aam
push
add
jo
mov
add
jmp
jne
je
push
jo
mov
add
jl
lahf
movsl
lret
add
dec
add
pop
push
add
mov
push
add
jle
and
add
mov
add
hlt
dec
ficoml
pop
pop
test
int3
icebp
out
add
test
or
shrl
add
add
dec
add
cli
add
add
xchg
inc
in
fidivrl
sub
push
test
add
or
cmp
jo
mov
add
cmp
lcall
lods
xor
mov
shlb
or
add
jg
imul
add
fwait
mov
adc
pop
xchg
cmp
lret
add
imulb
xchg
and
add
and
in
stos
push
add
add
add
mov
test
js
testl
clc
icebp
sub
loopne
add
imul
xchg
lods
bound
push
add
or
aas
ja
adc
xlat
cmp
repz
add
mov
leave
inc
push
add
mov
add
sbb
add
sti
idivl
push
std
scas
loopne
mov
add
roll
or
data16
jmp
sub
jle
or
ja
and
cmp
xchg
movsl
jne
imul
mulb
lcall
mov
push
loop
dec
mov
push
mov
push
test
add
out
sti
ret
xor
mov
add
add
jnp
sbb
jbe
mov
xchg
push
add
add
daa
out
inc
add
lock
in
out
sbb
test
stos
in
cmpsl
pop
xchg
clc
insl
jo
aas
add
inc
rcll
add
mov
push
add
leave
in
and
jb
subl
bound
mov
add
bound
dec
add
add
fbld
testl
jae
iret
sbb
push
fneni(8087
popa
pop
add
xchg
mov
decl
add
adcb
xor
sbb
adc
add
jl
xchg
add
add
jb
xchg
movsl
pushf
xchg
push
add
pop
mov
pop
add
pop
mov
add
and
out
pop
add
repz
fisttps
add
or
int
enter
cmpsb
mov
call
add
lret
xchg
lret
cld
jbe
outsl
lods
add
or
add
add
xchg
movsb
mov
mov
dec
or
jne
and
add
jg
add
leave
sbb
fistps
cmp
add
add
ret
pop
add
push
and
xor
push
add
add
add
mov
add
shll
add
pop
pop
sub
sbb
in
dec
add
fistpll
inc
add
add
hlt
rep
into
pop
fwait
mov
push
or
adc
xor
dec
test
mov
cmp
xchg
push
add
in
pop
mov
sbb
pop
aaa
inc
mov
cltd
xorps
xchg
inc
rolb
add
push
add
or
psllq
fstpt
or
adc
loop
push
add
add
enter
add
sub
sbb
mov
add
mov
jmp
add
mov
add
test
jbe
cmc
xchg
add
idiv
xchg
push
add
add
fmulp
add
xchg
mov
cmp
insl
pop
add
and
push
add
cmp
test
mov
mov
add
daa
dec
les
pop
test
or
lret
pop
add
movsb
ds
mov
lahf
insb
add
scas
test
cmc
and
and
jbe
fldt
or
pop
add
adc
push
add
add
push
jae
mov
pop
add
sub
mov
fisubrs
mov
xchg
faddp
fnsave
hlt
xchg
loopne
pop
and
fildll
jo
repz
pop
add
pop
push
add
stos
dec
or
pop
out
dec
lods
mov
push
les
dec
rcr
add
cld
lahf
call
sahf
pop
add
push
add
popf
jle
imul
fstl
imul
push
out
cmpsb
mov
lods
inc
jg
fdivrs
mov
es
jmp
dec
add
pop
add
inc
inc
add
notl
jge
and
xchg
add
popf
xor
push
add
and
sbb
or
xor
in
add
fidivrl
fsts
dec
add
xchg
push
add
add
pushf
rorb
add
mov
insb
add
add
add
mov
fsubrs
jbe
sbb
jno
jns
sbb
imul
push
and
iret
jmp
push
repnz
cmpsb
xchg
outsb
add
mov
inc
add
in
add
scas
rolb
add
add
pop
sub
xor
leave
data16
xor
mov
mov
add
testb
ja
mov
jne
add
xor
xor
imul
aas
pop
add
mov
fucom
push
mov
daa
jg
dec
dec
add
sbb
int3
out
add
mov
fldl
dec
jne
mov
add
lret
arpl
and
add
and
dec
rorl
test
jbe
nop
add
adc
clc
sub
fcomi
pop
dec
repz
mov
daa
mov
dec
out
xor
cltd
xor
decb
add
mov
lods
add
cmp
std
push
sbb
sbbb
pop
mov
mov
add
fldcw
js
pushl
mul
in
mov
add
xor
popf
js
sub
push
add
mov
add
lret
stos
loop
inc
in
popa
mov
movsb
in
or
jge
imul
jbe
mov
mov
decl
sti
add
clc
int
push
sub
lods
shll
mov
and
outsl
sbb
push
sbb
sub
andl
add
outsb
add
mov
mov
add
notb
out
test
add
mov
add
add
sbb
lret
cwtl
push
add
add
mov
fwait
lret
fnstcw
jge
test
lahf
add
add
jae
xlat
loop
dec
mov
mov
mov
lods
adc
push
add
push
popf
fcomip
push
jno
insl
leave
pushf
mov
ret
add
dec
add
lret
jge
add
mov
xor
in
sbb
add
inc
cltd
sub
sahf
mov
push
add
pusha
add
push
cmp
jmp
xchg
leave
dec
add
add
mov
add
mov
add
sahf
adc
add
xchg
fstps
pop
xor
fistpll
fldenv
add
add
loope
add
jae
add
add
add
std
sti
sbb
add
add
mov
inc
add
cmp
push
sti
sub
push
add
add
imul
add
add
add
lods
pushf
jp
test
stos
cmp
ficoml
push
xchg
stos
add
hlt
mov
loope
add
pop
pushf
aaa
addb
add
add
xor
imul
add
or
mov
xchg
adc
jb
mov
shlb
and
clc
sbb
add
add
js
or
and
call
add
bound
or
fmull
sub
dec
cmp
aam
icebp
leave
dec
add
mov
sub
les
int3
nop
and
add
add
mov
add
push
add
push
add
add
cmp
in
out
mov
cmp
adc
or
leave
cmp
mov
iret
sub
add
scas
xchg
fiadds
adc
lds
add
adc
jb
cmp
pop
call
pusha
add
pop
push
add
xchg
add
sub
dec
leave
loop
test
xchg
mov
add
add
jne
sbb
call
loop
outsl
inc
add
stos
movsl
out
mov
mov
leave
xchg
pop
int
test
add
dec
add
loopne
cli
pop
pusha
add
fwait
and
and
out
sub
sbb
mov
adc
xchg
hlt
fwait
xchg
cmp
enter
lahf
mov
inc
add
sub
adc
jno
add
enter
sub
stos
adc
gs
add
xchg
add
cmp
mov
add
xor
pop
add
cltd
push
mov
mov
add
scas
add
fnsave
scas
out
add
cwtl
insl
daa
mov
lods
mov
and
cmc
sbb
movsb
cmp
adc
je
addr16
add
push
add
jno
pop
add
add
mov
xor
cmpsb
dec
add
mov
add
test
xorb
les
daa
imul
stc
lret
in
scas
mov
add
add
iret
notl
pop
cmp
or
xchg
lcall
and
out
push
jle
in
punpcklwd
push
mov
adc
add
cli
sub
inc
les
add
add
mov
push
dec
add
sbb
mov
jbe
mov
adc
inc
sbb
xor
out
jo
subl
js
call
push
add
xchg
xlat
ret
jb
xlat
and
fbld
add
jnp
lret
das
lods
sbbb
and
inc
add
add
cmp
pop
shll
cmp
jnp
inc
add
jmp
inc
pop
sbbl
dec
and
jp
add
inc
add
add
cs
pop
or
aam
add
je
mov
stos
add
das
repnz
push
add
xchg
int3
mov
adc
jl
sbb
add
xchg
jle
push
add
add
xor
pop
bound
int
add
mov
add
add
cltd
das
adc
icebp
sub
sub
pop
repz
inc
jno
or
inc
add
jbe
stos
roll
in
test
add
cmp
pop
arpl
sub
scas
mov
bound
xor
add
fdivr
sbb
fxch
sbbb
xchg
or
pushf
jb
jp
sbb
push
add
icebp
popf
mov
mov
mov
fbstp
xchg
lret
jge
xor
jge
add
je
ret
test
dec
add
cmpsb
mov
dec
mov
jmp
or
outsl
xor
sub
cltd
ja
or
jno
push
add
xorl
xor
xchg
add
add
mov
sub
jb
fs
mov
add
insb
add
imul
mov
add
ffree
call
add
fadd
or
aas
fidivl
inc
add
jne
lea
add
push
add
add
xchg
jmp
adc
mov
data16
sub
mov
adc
pusha
add
clc
loope
sbbb
rcl
add
add
mov
repnz
mov
fistpll
pop
js
aas
pop
add
in
lods
out
std
lea
pop
add
push
add
cmc
cmpsb
add
pop
add
or
dec
add
sub
pop
repz
adc
repz
add
inc
add
add
jecxz
add
repz
jp
adc
lods
jae
cli
push
add
loope
clc
imul
add
mov
scas
xchg
xchg
sbb
repz
lea
jmp
and
std
jg
and
cli
mov
in
fists
pop
add
mov
xchg
jae
es
shll
jp
jno
sbb
pop
add
add
insb
add
add
test
sbbl
inc
movsl
xchg
lret
fwait
adc
scas
sub
pop
add
bound
pop
add
mov
psrad
lret
in
sub
ret
loop
aad
sbb
setns
sub
fdivs
mov
push
xor
lret
mov
stos
and
jmp
lock
xchg
push
add
xchg
xor
repnz
mov
je
subb
xchg
shrl
add
xor
add
mov
add
icebp
sbb
mov
sub
sub
cmpsb
stos
xor
add
outsb
add
aad
adc
cmp
fldt
outsb
add
jno
sarb
push
add
test
add
push
add
add
sbb
enter
add
cs
je
inc
sahf
fsubrs
dec
xor
aad
add
adc
sbb
mov
out
add
mov
cmp
cmp
popa
in
movsl
pop
add
mov
lahf
mov
add
add
test
mov
mov
inc
loopne
out
lods
adcl
pop
add
add
add
test
dec
add
pushf
jo
and
cmp
and
add
add
lcall
adc
push
je
jecxz
inc
add
jmp
add
add
in
pop
mov
scas
mul
cs
add
jp
mov
imul
add
inc
js
inc
add
add
jecxz
add
test
cmpsl
inc
push
sub
ja
mov
add
enter
in
adc
add
mov
xorl
shrl
and
sbb
jmp
dec
add
in
loopne
add
jmp
ret
jle
ret
mov
pop
add
mov
loop
mov
jbe
cmpsb
xchg
bound
hlt
ret
add
xlat
xor
nop
push
dec
add
add
and
mov
imul
into
shrl
fldenv
add
stos
jnp
add
add
xchg
dec
add
lcall
dec
add
jns
add
mov
xchg
cld
aas
in
inc
xchg
dec
add
daa
or
inc
add
rclb
cmp
sub
iret
dec
add
add
xor
cli
mov
mov
sub
cltd
xor
lock
add
sub
ret
push
add
add
xchg
adc
mov
dec
add
inc
add
or
inc
add
test
nop
cmp
cmp
loop
loop
adc
mov
add
add
pusha
add
and
xchg
scas
and
scas
lods
mov
xor
jmp
add
mov
stos
mov
push
add
add
add
iret
add
add
add
add
inc
add
aas
or
sub
mov
add
mov
add
add
mov
add
mov
xor
add
pop
lret
push
mov
das
pop
test
cmpsb
icebp
movl
sub
in
mov
add
pop
mov
iret
ficoml
stc
jge
pop
add
push
add
xor
mov
pop
cmpsb
jmp
inc
add
cmp
in
je
add
scas
sbb
lds
jb
jnp
imul
mov
int3
sub
imul
dec
ds
push
push
add
add
imull
xchg
lock
add
xchg
adc
mov
dec
xchg
or
ja
add
mov
pop
xor
jg
inc
cmp
push
add
fdivrp
insl
pop
aaa
lock
add
jnp
add
cs
fwait
dec
add
pop
dec
add
outsl
pushf
mov
add
add
notb
sbb
mov
mov
add
inc
add
push
jecxz
popa
jnp
fnsave
add
push
add
mov
push
add
add
xlat
sub
cld
mov
daa
jp
push
add
sbb
pop
nop
popa
jns
aam
sub
mov
imul
or
xor
fidivl
daa
jo
push
add
mov
add
enter
icebp
movb
cld
or
mov
dec
iret
jmp
insl
outsb
add
loopne
add
ljmp
adc
add
mov
xchg
mov
add
stos
push
add
add
inc
add
pop
mov
xor
ret
dec
add
lock
stc
imul
add
adc
lret
clc
bound
ljmp
and
push
daa
xchg
jno
pop
ljmp
pop
xchg
sub
xchg
dec
add
mov
jne
inc
add
fstpl
add
out
cmpb
xchg
push
add
scas
mov
ja
pop
add
mov
add
popf
icebp
out
imul
add
movsl
mov
cltd
jl
dec
add
xor
sub
add
dec
mov
inc
mov
jo
push
stos
push
add
add
pop
jmp
or
pop
mov
add
add
mov
cmp
stc
lret
cmp
jmp
jns
add
outsl
aad
and
add
mov
jg
push
add
and
and
je
hlt
pop
add
sbb
dec
cmp
scas
jno
mov
add
int3
mov
or
fwait
dec
add
add
push
add
push
add
add
bound
movsl
xchg
mov
add
add
and
gs
mov
lods
jno
jge
mov
add
and
pop
push
add
insl
inc
add
cwtl
aam
fistl
movsb
sbb
adcl
pop
add
add
fnsave
add
dec
add
lahf
lds
add
push
ss
hlt
xchg
sub
test
call
add
sbb
out
stos
add
call
cmp
add
add
add
daa
cmp
fsubs
repz
inc
add
add
incl
aam
add
add
add
je
inc
inc
mov
add
popf
mov
data16
fsts
push
daa
ss
mov
add
add
xchg
divps
repnz
data16
stc
cmpsb
add
sbb
xchg
adc
test
outsl
stc
aaa
fs
mov
loope
mov
testl
rcrb
fistps
add
jmp
lret
fsubl
mov
push
add
mov
imul
add
inc
mov
ds
cmp
push
add
inc
add
jle
xor
test
insb
add
cmpsb
mov
xchg
mov
in
loope
mov
int
hlt
xchg
pop
sub
cmp
pop
add
rcrb
add
add
add
add
add
bound
dec
add
add
lods
xchg
and
ret
pop
sbb
pop
sub
dec
add
jle
or
pop
sqrtps
xchg
repnz
mov
stos
dec
rcrb
mov
xlat
pop
test
cmc
cwtl
sbb
dec
add
fsub
enter
and
loope
xchg
pusha
add
add
add
data16
jns
jl
mov
sbb
jns
xor
bound
jne
add
mov
add
out
or
insl
push
add
add
pusha
add
leave
adc
dec
add
mov
lret
test
dec
or
add
add
in
std
cld
std
adc
lret
int3
jns
add
pop
pusha
add
xor
pop
jno
adc
subb
or
and
dec
add
cmp
add
mov
mov
sbb
inc
add
add
inc
add
bnd
add
jp
sub
orb
cli
sbb
adc
stos
sti
scas
insl
dec
clc
sbbb
xchg
je
mov
add
imul
xor
mov
jg
out
rorl
add
repnz
cs
cwtl
mov
sbb
sub
repz
js
js
cmp
or
push
add
add
add
shr
repz
scas
out
pop
cmp
outsb
add
xlat
pop
bound
pop
scas
adc
lcall
ret
push
add
add
add
add
sbb
and
add
add
popa
fstpt
add
add
loop
jg
add
dec
add
and
popa
add
lock
jp
mov
les
jp
fildl
rorb
add
out
test
xchg
aaa
outsb
add
add
dec
add
mov
cmp
add
cmpsb
jo
loopne
fwait
inc
cmpsl
hlt
rclb
mov
fistps
add
ret
mov
add
mov
mov
dec
add
out
xchg
pop
jno
jb
push
add
das
pop
add
pop
add
add
scas
jnp
data16
sub
inc
add
push
mov
bound
imul
pop
add
jg
test
jnp
add
add
pop
psrlw
add
add
arpl
mov
mov
mov
add
add
mov
push
pop
add
cwtl
arpl
nop
jge
fstpl
xchg
fidivs
fnsave
add
pop
mov
pop
lahf
mov
add
das
cmp
lea
add
jl
scas
xor
cmp
add
add
rcll
mov
add
push
add
aaa
repnz
add
ljmp
add
add
add
fldl
or
add
in
stos
add
popa
dec
add
add
jmp
repz
fisubs
adc
cmp
add
data16
mov
pushf
je
notb
push
pop
add
add
mov
xchg
shlb
pop
cmc
in
and
clc
or
dec
add
xchg
leave
mov
iret
jae
and
mov
inc
lret
bound
mov
popf
jmp
sub
inc
fsubrl
add
jne
insl
jo
jbe
mov
xlat
orl
inc
mov
mov
cltd
pop
add
je
bound
and
pop
jg
sbb
add
and
add
leave
push
push
mov
dec
sub
das
pop
push
add
mov
add
cltd
lods
and
mov
jmp
push
add
adc
aam
cmp
movsl
inc
add
lret
add
std
stos
pop
in
xchg
andps
cmp
daa
aaa
in
add
orl
add
add
stc
pop
lods
push
add
divl
add
xchg
mov
and
jl
jae
xchg
rclb
add
sub
bound
mov
add
pushf
mov
sbb
jbe
imul
xorb
fwait
inc
add
jp
inc
add
add
add
cs
sub
pop
les
movsb
dec
add
negb
or
mov
adc
cwtl
push
add
jnp
bound
addr16
add
pop
mov
popa
sub
sbb
cmc
cmpsl
js
pusha
add
xlat
lret
add
pop
add
ja
add
add
push
add
cli
cmp
inc
add
leave
ja
test
add
inc
add
push
dec
or
pop
xchg
add
add
add
push
add
je
mov
sbb
and
cli
stos
add
add
add
add
sbb
std
adc
adc
sbb
shlb
add
sahf
sub
pop
ja
cld
js
lds
in
sbb
stc
aad
add
bound
jmp
add
push
add
test
lret
pop
add
mov
popl
add
add
insl
add
fimuls
add
les
add
add
fisubl
xchg
fwait
push
push
je
lods
add
mov
mov
add
mov
dec
add
mov
pop
xor
xchg
mov
test
add
xor
mov
add
rcll
add
lret
shl
aaa
adc
call
stos
xchg
xor
faddp
lcall
pop
add
push
add
lods
cltd
ljmp
dec
add
add
arpl
out
in
repz
sub
xor
jg
mov
das
les
add
popa
mov
imul
and
inc
add
mov
add
es
xorb
iret
cmp
dec
jns
push
fistl
add
jge
mov
sti
popf
rcrl
jge
add
int
or
xor
std
adc
pop
imul
sbb
add
add
add
nop
xchg
test
add
dec
stos
xor
add
ja
add
push
add
add
iret
jmp
pusha
add
iret
or
mov
int
add
add
sbb
shrl
sldt
cli
pop
add
inc
add
fwait
mov
out
sbb
cmpsb
negl
ret
add
jno
xor
clc
mov
push
add
adcb
cmc
jle
cmp
inc
pop
int
ljmp
add
or
mov
and
dec
aam
aas
hlt
mov
add
andl
cltd
std
dec
add
add
inc
sub
movsb
js
jecxz
fs
lods
cmp
ret
sub
add
add
jge
add
add
add
out
mov
inc
add
add
scas
scas
test
stos
popf
xor
add
adcb
add
add
xor
mov
enter
jle
hlt
push
call
add
aam
in
mov
xchg
xlat
test
outsb
add
loop
add
push
add
pop
lcall
add
cltd
mov
and
pop
add
pop
xchg
shr
push
add
lock
in
scas
inc
inc
add
test
lret
add
fmull
movsl
mov
xor
fnsave
ss
in
add
add
inc
add
add
add
xchg
lret
repz
rcrl
cli
fwait
jmp
frstor
push
xlat
bound
jge
test
sbb
aaa
mov
mov
xchg
out
aaa
cs
push
push
adc
mov
add
repz
xchg
sbb
xor
push
add
cmp
mov
xchg
mov
xor
adc
out
push
add
push
add
imul
or
adc
sub
fsubr
ja
add
mov
add
add
add
xchg
in
push
add
outsl
outsb
add
add
mov
adc
mov
lret
mov
add
adc
test
sub
xchg
xchg
pop
add
jns
mov
mov
hlt
popf
push
mov
dec
int3
mov
fucomp
jge
cmpsl
xchg
inc
add
cmp
insb
add
add
adc
add
or
out
add
leave
shrb
mov
popf
aam
jecxz
leave
cwtl
or
mov
sti
mov
ljmp
pop
add
and
xchg
adc
add
mov
jns
add
prefetch
insl
pslld
and
xchg
arpl
add
add
lea
movsb
cmc
push
add
inc
mov
cli
xchg
xchg
scas
cs
jg
pop
lds
add
ret
jmp
mov
popf
into
mov
mov
mov
pushf
das
push
dec
mov
add
int3
add
inc
sbb
and
fistpll
add
add
add
jl
test
add
jo
sub
mov
adc
sahf
mov
add
add
and
xchg
insb
add
cmp
outsl
and
add
push
jb
jno
lcall
add
add
push
add
adc
add
rcrb
pop
add
add
sub
sub
fisttps
popf
mov
not
xlat
mov
lcall
orl
add
inc
add
leave
push
jnp
add
add
jnp
add
mov
add
add
popa
pop
add
enter
dec
add
add
leave
xchg
add
popf
push
loopne
xchg
sbb
add
lret
xchg
and
incb
insb
add
cmpsb
movsb
jb
popf
stc
std
iret
fs
insl
lcall
inc
add
lock
mov
xor
add
cwtl
jg
jg
iret
jb
cmc
xor
add
add
outsl
cmp
mov
pop
imul
pop
add
cmp
fists
add
add
sub
add
test
ljmp
insb
add
lret
push
add
icebp
cmp
pop
ljmp
leave
mov
add
add
add
add
cld
sub
inc
out
add
add
divb
shrl
add
scas
sbb
scas
lahf
dec
daa
or
in
add
add
divb
stos
bound
and
lods
adc
rcl
insl
scas
and
lods
dec
jg
push
add
clc
pop
xor
lahf
push
ss
dec
add
fisubl
outsb
add
jne
pushf
push
add
andl
add
push
test
sbb
add
add
jo
mov
add
aam
add
outsb
add
mov
add
add
enter
add
and
xchg
mov
arpl
fsubl
repnz
add
incb
inc
push
add
add
xor
dec
out
adc
insl
repnz
pop
fsts
push
and
out
sbb
adc
and
add
xorl
push
add
add
cwtl
in
es
jmp
daa
movsb
cmp
shll
fidivs
push
add
add
add
scas
xor
add
sub
adc
mov
nop
mov
mov
mov
les
repnz
push
add
addr16
jnp
mov
add
icebp
lods
out
call
insb
add
add
add
push
add
sbb
mov
je
adc
lock
test
mov
popa
and
add
sahf
inc
add
dec
aad
add
loop
js
mov
pusha
add
ja
add
adc
std
add
pop
mov
rcrb
sbb
jp
mov
fwait
push
add
add
sub
add
add
fadd
cmpsl
cmp
in
shlb
add
adc
pop
add
jo
xchg
xlat
xor
sti
xchg
xchg
mov
add
xchg
aam
lods
inc
add
cmpsl
mov
sbb
adc
push
add
shl
sbb
add
into
in
jle
idivl
adc
cmp
out
pop
xor
add
mov
add
nop
sbb
out
gs
scas
xchg
bound
add
aaa
int3
clc
shll
jnp
add
addr16
add
add
mov
rep
jge
iret
fwait
cmp
xchg
xorl
out
lret
sub
xlat
mov
loope
jle
sysret
sar
jne
jae
add
or
mov
sbb
xor
pop
sub
ficompl
fistl
xchg
xor
xlat
cltd
add
cmp
rcl
inc
add
shrb
loopne
dec
add
scas
lea
mov
iret
fwait
cmp
cwtl
or
mov
sahf
mov
add
add
jo
pop
add
add
shrb
and
xchg
fists
xlat
fcomps
add
clc
pop
push
add
aas
std
ljmp
add
pop
add
inc
xchg
push
add
add
add
or
add
inc
add
push
inc
pushf
pop
enter
xor
mov
push
xchg
jg
mov
add
outsl
fpatan
mov
or
std
sbb
outsb
add
iret
imul
add
daa
adc
sub
stos
jg
mov
cld
and
or
pop
add
fimull
push
lret
arpl
fwait
inc
add
sub
xor
xor
je
scas
movsb
lcall
nop
pushf
nop
lcall
mov
push
jno
cmp
xor
push
out
add
dec
push
add
sti
cmp
mov
sbb
jg
and
add
mov
inc
ss
rorb
adc
addr16
jbe
sbb
add
pop
cwtl
cmp
loopne
stos
hlt
mov
gs
inc
loope
aaa
stos
dec
add
push
add
jo
jbe
lods
push
pushf
and
jno
dec
in
add
fsubrl
sub
ja
jb
out
scas
adc
cmp
add
xchg
outsl
add
add
add
insb
add
or
xchg
xor
fsubr
test
int
add
push
add
rorb
jno
xor
dec
adc
aaa
fstpl
add
arpl
inc
add
lret
in
mov
add
pop
rorl
fiaddl
add
scas
sbb
call
data16
jae
ficoms
xor
ja
mov
dec
jl
out
xchg
scas
shr
mov
test
inc
loopne
add
jns
add
add
fnstcw
insl
repnz
pop
xor
movsl
daa
and
in
jb
dec
add
addr16
fcmovb
mov
pop
shl
inc
add
movsl
cmc
sbb
xor
mov
mov
popa
mov
sbb
jne
add
fsub
stc
mov
repnz
clc
ficomps
add
leave
popa
push
and
cmc
or
xchg
nop
movsb
repz
cwtl
inc
add
xchg
ret
fsts
outsl
and
push
add
add
lock
fucomip
add
add
xchg
and
push
add
aaa
mov
into
ficoms
jp
cmp
scas
stc
test
f2xm1
sub
add
push
sub
inc
xchg
test
jecxz
xchg
aas
stc
out
cmp
movsb
xor
and
cmovs
add
sarl
push
mov
dec
add
scas
or
enter
daa
int3
mov
pop
add
sbb
movb
cwtl
aad
add
scas
add
aaa
dec
add
pushf
add
aas
pop
iret
push
pusha
add
data16
inc
add
data16
lea
mov
add
lcall
add
add
add
add
lods
mov
mov
add
and
stos
xchg
lret
mov
push
mov
imul
and
add
jb
fisubs
repz
ja
add
mov
aas
cmpsb
lahf
lahf
jl
push
filds
daa
fs
scas
test
test
cltd
or
or
sbb
mov
add
push
ret
lea
int
dec
push
add
add
add
add
push
add
out
add
cmp
insb
add
add
add
xor
aaa
xchg
ret
mov
add
and
into
imul
mov
outsl
add
mov
es
adcl
add
add
inc
add
std
jle
xor
add
add
ror
int3
xor
xchg
cs
ja
cmpsl
push
add
jmp
adcb
das
int
das
aam
bound
xor
stos
call
add
cwtl
pop
fcmovne
mov
xor
mov
sbb
lods
ljmp
clc
cld
jp
shrl
mov
dec
add
call
add
adc
add
nopl
mov
inc
pop
adc
test
sub
add
push
add
xor
xchg
in
mov
jno
mov
add
ja
push
add
sbb
js
push
xchg
sub
add
adc
add
and
and
cmpsl
jno
add
call
jnp
lcall
xor
movsb
jae
andb
add
loopne
add
or
in
sbb
fnsave
cmp
imul
pushf
jmp
add
add
sub
mov
xor
outsl
shrb
or
or
push
add
cmp
adc
outsl
dec
pop
jle
test
xchg
xchg
xchg
or
pop
add
lods
xchg
lods
and
movsl
pusha
add
lods
mov
adc
lret
jp
pop
mov
in
mov
cli
jle
or
push
add
add
xor
adc
pop
adc
hlt
mov
sti
insl
jne
add
std
cmc
push
add
add
fmull
pop
repz
or
mov
std
xor
cmpsb
insb
add
add
xchg
out
int3
xor
dec
dec
add
pusha
add
add
add
jbe
xor
leave
movb
gs
push
shll
add
adc
add
mov
je
cmp
or
cmp
jle
in
loope
aad
add
add
add
insb
add
mov
cmp
xchg
sub
ftst
pop
jno
push
rcrl
dec
and
das
adc
push
mul
inc
jmp
arpl
sub
jmp
add
add
jae
add
and
fs
jns
push
add
add
mov
mov
movsl
add
pop
or
mov
add
mov
add
fwait
mov
add
add
lods
icebp
fildll
inc
pop
add
add
add
add
mov
mov
add
adc
xchg
mov
out
mov
pop
xchg
ret
cwtl
add
gs
jno
scas
sub
fimull
fimull
pop
mov
dec
loope
mov
nop
in
dec
add
sbb
mov
add
stc
xchg
leave
mov
jmp
xor
push
add
loop
jne
imull
vpsllq
jmp
enter
xchg
cmp
aaa
or
loop
sbb
loope
xor
add
out
push
add
das
jbe
popa
fstps
pop
pop
insl
sbb
js
inc
add
push
add
add
sbb
gs
dec
add
jecxz
xor
dec
int3
push
add
jns
add
bound
pushf
outsl
sub
jo
sbb
push
or
shl
add
add
in
or
scas
fcoms
add
mov
outsl
dec
and
add
jecxz
add
or
add
sub
das
fistpll
add
fistpll
push
add
orl
and
cld
sbb
push
add
xchg
xor
cmp
mov
add
xor
cmpl
iret
fdivrs
add
stos
or
sub
test
pop
fstps
iret
in
mov
jo
faddp
aad
js
into
add
lods
movsl
andb
sarl
push
add
add
cmpl
mov
dec
shr
xchg
and
add
add
ljmp
add
mov
mov
add
jle
xchg
and
push
add
sahf
in
add
movsl
inc
fwait
movsb
push
outsl
push
add
sub
mov
jne
je
dec
loop
add
int
xchg
cmp
push
add
jnp
mov
jecxz
pop
add
add
xor
add
push
add
mov
jno
push
add
push
notl
xor
add
lahf
push
add
add
pop
dec
cmp
add
jns
add
add
cli
hlt
scas
push
dec
pop
mov
jns
mov
dec
sub
insb
add
or
add
jp
mov
add
add
pop
add
jae
das
aam
jle
add
inc
add
jle
adc
and
insl
pop
sub
and
into
jbe
testb
sbb
add
adc
adc
xchg
sbb
hlt
jbe
dec
cld
cmp
ljmp
add
pop
sub
mov
adc
and
scas
jae
jne
add
add
aad
or
add
adc
or
add
mov
lea
std
std
dec
sbb
jmp
setno
add
inc
mov
jl
rorl
or
adc
loope
inc
clc
jae
add
sbb
data16
add
fsubrs
sub
out
jg
add
add
push
add
inc
add
and
lret
pop
ljmp
add
out
fisubl
fcoms
out
mov
or
mov
add
sub
stos
dec
add
add
repz
add
mov
pop
or
cld
cmp
stos
aam
lret
loope
add
insl
mov
sahf
lret
outsb
add
adc
out
cltd
out
push
outsb
add
mov
add
adc
add
add
std
inc
add
repz
add
and
icebp
add
loope
leave
sub
lret
fsubr
fucomp
int3
mov
test
sbb
addr16
jnp
rcrb
add
add
add
call
add
shl
sahf
inc
add
in
daa
ret
adc
add
xchg
adc
imul
lds
push
scas
pop
push
lods
outsl
jbe
xorl
add
mov
mov
cs
cmpsl
inc
xor
lret
jbe
cli
ret
rcll
fsubrl
add
loop
add
add
add
add
add
clc
jg
mov
shrl
data16
or
sbb
stos
dec
add
mov
add
dec
add
pop
loop
add
inc
add
test
jno
add
dec
add
add
add
or
dec
add
fistpl
and
test
inc
add
add
addr16
mov
adc
cmp
outsl
mov
outsb
add
add
negb
aad
add
xchg
fildll
jb
xchg
and
repz
aaa
call
jl
call
sub
movsb
fnstcw
xchg
mov
iret
ret
movsb
push
or
add
mov
adc
or
or
nop
les
sar
lahf
xor
ret
insb
add
cmpl
add
push
add
fldt
add
test
bound
out
fsts
test
outsb
add
add
or
add
test
add
dec
xor
mov
lret
daa
call
add
cwtl
mov
add
adc
add
mov
sub
int
pop
add
xchg
xchg
nop
std
imul
mov
cmp
add
mov
aaa
in
roll
mov
sub
shl
rcrb
add
add
push
fiaddl
sbb
aam
and
sahf
xchg
xor
lds
mov
in
inc
add
jg
xchg
bound
mov
add
jae
cmp
adc
outsl
std
and
pop
add
add
leave
rcrl
jge
cmp
push
add
lds
add
or
pop
add
add
jl
push
add
aad
xor
push
add
hlt
jmp
sbb
add
add
add
inc
add
add
dec
add
clc
es
push
add
jno
loope
adc
idivb
out
mov
jmp
add
add
call
sbb
pop
clc
in
cmpsl
fnstsw
add
add
push
inc
lahf
inc
add
add
jbe
jnp
add
mov
and
mov
add
cmp
add
adc
cmp
xor
xchg
aaa
ror
aaa
dec
movsl
cmc
dec
add
xor
fcompl
mov
mov
and
inc
add
adc
add
jae
lock
xchg
pop
cmp
dec
add
out
push
cmc
sbb
add
mov
add
add
xor
add
and
test
inc
add
jge
add
add
mov
add
xchg
pop
add
fwait
das
js
stos
sbb
popl
add
loop
mov
movsb
jbe
add
mov
push
xor
adc
stos
loop
add
imul
aaa
cmp
jne
rorl
andl
add
scas
lcall
mov
aam
push
add
add
xor
fsubs
add
dec
add
add
cmpsl
mov
add
stos
out
add
decl
or
push
lods
arpl
das
testb
cmp
xlat
mov
pop
add
and
xor
pop
add
add
into
add
adc
jmp
ljmp
js
scas
and
test
jmp
xchg
movsb
mov
xchg
popa
sub
cmp
repnz
adc
xchg
call
testb
push
add
cmp
dec
add
fidivs
add
call
inc
add
xchg
mov
fdivs
loop
add
add
xor
add
rorl
sahf
mov
pusha
add
add
jae
cmpsb
lret
push
add
out
inc
add
mov
dec
add
imul
mov
add
xchg
xor
mov
pop
ss
sbb
ljmp
add
insl
into
lea
out
mov
add
xor
adc
pop
add
add
xlat
sti
ficomps
add
cmpsl
mulb
xorl
dec
add
add
outsl
stos
push
add
ljmp
pop
shr
mov
add
add
add
loopne
leave
repz
xor
scas
push
add
and
push
add
imul
dec
add
xor
adc
les
lcall
aas
inc
inc
add
int
fcompl
inc
and
add
stc
adc
je
inc
add
add
cmp
dec
mov
add
inc
add
jmp
or
inc
rorl
inc
push
mov
add
out
jecxz
sub
sbb
dec
dec
add
add
push
add
jge
rorl
or
icebp
inc
add
repnz
add
int
add
scas
clc
jo
push
add
xchg
cli
sahf
shlb
push
add
ret
pop
cmp
cmove
inc
mov
add
push
add
or
jmp
ret
mov
mov
cmpsb
pop
in
add
add
add
sub
pop
call
insb
add
add
stc
jnp
mov
add
add
jbe
adcl
daa
or
mov
test
pop
add
mov
pop
and
jecxz
add
jge
cld
jl
sbb
mov
add
mov
add
pop
push
add
add
out
inc
add
cmp
add
xor
add
iret
clc
iret
stos
inc
cmp
jmp
daa
add
add
cwtl
xchg
adc
outsl
mov
pop
jns
imul
das
pop
add
test
and
sarb
xor
mov
bound
sbb
rcrb
repnz
rcll
lods
inc
add
xchg
fldcw
nop
add
rcl
mov
mov
pop
add
scas
push
add
xchg
inc
mov
jbe
jb
cmp
repz
stos
into
daa
movsl
js
imul
add
lcall
or
mov
add
xor
out
sbb
pop
add
and
mov
dec
add
xor
leave
movsl
cmp
push
add
xchg
ud0
add
add
mov
add
ret
js
stc
cmpsb
test
xchg
insl
scas
lahf
call
out
add
mov
mov
add
pop
jbe
movsb
add
mov
push
add
ja
sbb
push
xor
nop
dec
add
add
jno
add
add
or
sbb
in
rcr
in
xchg
outsl
sbb
lret
push
add
add
add
xor
fadds
jns
add
inc
adc
outsl
jg
add
test
add
lret
enter
lret
cli
test
jno
int3
sbbb
call
add
add
add
data16
inc
add
repnz
lds
add
mov
add
pop
push
les
ret
shll
add
pop
fstpl
add
movsb
andb
pushf
stos
xor
movsl
adc
setp
pop
incl
movsl
and
lods
sbb
cmp
jp
add
add
add
add
add
fstpl
add
cmp
push
add
cmpsb
add
jns
or
mov
add
mov
imul
pop
in
fildl
dec
add
out
mov
sarb
jge
xorb
add
adc
loopne
push
loope
out
add
mov
cmp
sbb
cli
and
and
into
shll
repnz
push
std
jmp
xor
push
add
hlt
sub
add
add
add
out
addr16
rcll
jae
add
inc
add
scas
sbb
scas
fldcw
xchg
jp
pop
lods
stc
icebp
push
loope
cmp
test
add
add
rolb
jle
lods
testl
xor
sub
test
in
sar
xor
int3
test
xor
add
jo
push
add
mov
adc
adc
xlat
xor
push
add
xor
add
add
sbb
add
sahf
push
add
sahf
inc
add
add
jmp
lock
mov
add
mov
xchg
hlt
fwait
push
hlt
jb
mov
dec
mov
add
xor
inc
add
pop
popf
mov
mov
add
out
jnp
loope
pop
lock
add
mov
or
push
fists
cmp
add
repz
dec
xchg
add
pop
add
adc
dec
jne
fsubr
sbb
jbe
sbb
inc
add
js
inc
add
xchg
loope
pop
into
mov
mov
cmp
mov
add
mov
xchg
pop
add
hlt
sub
nop
dec
loope
cmp
push
call
add
mov
add
inc
stos
inc
pop
add
add
leave
insl
cmpl
rcrb
and
add
xor
xchg
pop
add
jo
movsl
mov
les
popf
inc
add
mov
add
pop
jne
add
out
add
movsb
pop
jp
testl
dec
add
cmpl
in
xchg
call
daa
pop
xor
es
add
out
xchg
mov
sbb
les
dec
cmp
jle
aam
mov
pop
xchg
sub
add
stc
test
js
insb
add
leave
rcll
add
add
add
add
repnz
add
imulb
push
fsubrs
add
cld
int
dec
add
sbb
lds
add
sahf
adc
add
jno
push
aam
in
icebp
loopne
data16
fisubl
add
push
push
push
add
add
jnp
movsb
inc
dec
cmpsb
nop
adc
jecxz
add
add
jo
andb
outsl
push
add
iret
mov
add
test
or
ja
push
xchg
dec
add
bound
js
hlt
movsb
and
decl
mov
loope
sub
sub
cmp
push
add
sbb
pop
scas
jmp
add
pop
movb
faddl
mov
jp
mov
mov
pop
add
rcrb
add
push
add
add
cmp
xor
pop
add
inc
inc
add
insl
sahf
leave
add
push
mov
shlb
xor
sub
outsb
add
inc
jge
add
pop
add
add
sub
arpl
add
test
test
xor
cmp
push
add
sub
cmp
add
adc
mov
lret
xchg
roll
cld
dec
sub
test
push
mov
cmpsl
inc
add
std
shlb
add
sub
mov
call
xchg
notb
stos
inc
xchg
pushf
mov
push
add
bound
mov
out
add
gs
and
adc
lods
das
xchg
sbb
lods
push
inc
hlt
test
add
loopne
add
xchg
inc
add
add
mov
add
mov
add
or
jg
lods
adc
pop
jge
lods
scas
push
add
push
dec
nop
add
and
ret
add
mov
cli
mov
add
loop
jb
jecxz
add
sub
add
jno
and
xchg
enter
add
insl
jge
fld
int
add
data16
into
fistpl
jle
sub
mov
pop
cld
adc
nop
jp
aam
mov
clc
jo
repnz
hlt
dec
fldcw
jb
jne
pop
add
sahf
out
iret
daa
sub
jb
jb
bound
add
subl
add
in
rcll
repz
mov
xrelease
fisttps
add
add
lods
or
add
pinsrw
push
out
aaa
pop
push
add
mov
push
mov
fdiv
and
and
mov
cmp
mov
nop
lahf
jo
sbb
outsl
add
xchg
or
xchg
add
and
test
js
jl
std
cmc
insl
mov
add
lods
inc
add
out
or
fnstenv
and
or
jns
add
sub
jo
jbe
add
out
add
dec
inc
rcrl
add
test
add
loop
push
add
imulb
and
inc
add
lret
dec
loop
or
adc
outsl
jno
das
jg
jns
add
add
mov
dec
add
outsl
cmc
adc
pop
clc
sub
dec
inc
add
cs
or
add
adc
data16
pop
hlt
mov
fiaddl
add
add
push
mov
daa
repz
pop
leave
bound
mov
add
xchg
push
add
int3
imul
fbstp
add
cltd
ror
insb
add
cltd
test
pushf
xor
add
sahf
mov
jae
outsl
adc
xchg
push
add
jnp
shlb
popa
sahf
or
loope
in
stos
pop
and
scas
loop
push
add
cmpsl
jmp
add
inc
add
add
shl
jl
adc
ficomps
add
add
jno
add
add
push
add
aaa
and
addl
add
dec
add
mov
outsl
mov
jns
mov
pop
add
filds
add
add
das
subl
xchg
push
cld
dec
xchg
jmp
jne
mov
push
add
sbb
icebp
outsl
mov
negl
add
fcmove
add
pop
sbb
add
add
cld
inc
add
and
pop
add
add
add
push
lcall
pusha
add
out
add
fmuls
jmp
dec
add
out
fisubl
jne
add
lcall
in
sub
xchg
jo
mov
add
sti
xor
dec
add
lods
jbe
mov
std
adc
xchg
add
add
or
mov
jne
jle
xor
add
popf
lds
adcl
push
add
ss
bound
arpl
add
mov
loop
add
adc
add
or
sub
adc
jb
sbb
xor
stc
xchg
lahf
mov
mov
pop
rcrl
sbbb
ror
popf
xchg
xlat
xchg
loop
xchg
inc
pop
and
push
add
aam
imul
int
sbb
add
cld
jne
add
inc
xor
mov
inc
popa
jo
push
add
cmpl
jbe
add
add
pusha
add
test
dec
add
push
add
sub
jbe
cwtl
jmp
arpl
inc
bound
jp
or
xchg
xorb
add
add
add
xorb
xchg
sbb
mov
fyl2x
adc
add
fistpll
mov
add
jmp
add
add
inc
lds
aas
imul
idivl
jnp
mov
rcrb
mov
and
mov
std
in
add
ret
gs
dec
lea
push
imul
add
bound
outsl
jo
in
add
add
mov
iret
pop
push
add
ret
add
and
repnz
add
inc
add
lds
add
push
mov
cmp
repnz
push
lods
xorb
roll
flds
inc
add
jp
dec
add
stos
push
add
loop
add
xor
scas
push
add
popf
mov
xchg
int
scas
aaa
