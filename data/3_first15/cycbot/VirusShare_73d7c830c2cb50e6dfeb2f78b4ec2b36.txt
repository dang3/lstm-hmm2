adc
dec
inc
add
adc
loop
mov
aad
add
jecxz
add
jmp
mov
add
xchg
popf
dec
xor
jge
pushf
inc
add
mov
inc
add
ficoms
add
addb
lds
mov
cmpsb
add
addb
iret
xor
push
je
mov
rcl
loop
mov
jb
mov
pop
enter
cltd
push
fistl
add
stos
or
jge
add
mov
mov
je
mov
fs
push
push
or
jns
jns
inc
dec
insl
cmp
or
lds
adc
mov
test
add
inc
add
fbstp
das
mov
inc
sbb
mov
pop
rolb
cmp
ret
sti
std
leave
aad
or
loopne
mov
add
add
jl
adc
rolb
popf
cwtl
nop
add
add
mov
dec
inc
jmp
ret
xchg
test
test
or
jnp
int
and
mov
mov
pop
xchg
xor
repz
push
lea
out
push
cmp
add
add
push
add
mov
mov
into
add
gs
sub
add
mull
repz
call
in
adc
push
xchg
jg
repz
cmpsb
xlat
rolb
mov
add
push
fwait
dec
jge
or
add
and
roll
mov
bound
mov
mov
xchg
inc
push
sbb
add
xchg
dec
sbb
add
movsl
and
pushf
fimuls
inc
jmp
or
add
rcll
mov
mov
push
mov
jbe
psllq
stos
inc
add
add
out
pop
xor
push
pshufw
mov
push
mov
sub
push
push
push
push
push
push
cld
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
xchg
mov
jl
inc
add
pop
xchg
add
sbb
sbb
add
das
dec
mov
dec
in
repnz
ljmp
and
cmc
test
push
in
icebp
pop
dec
add
mov
push
in
pop
outsl
mov
jb
mov
jmp
sub
mov
add
out
add
mov
jnp
mov
cld
add
mov
or
pop
addb
jo
mov
cmc
jmp
mov
call
jbe
pop
dec
int
fnstenv
jae
add
xlat
cmpsb
std
fwait
roll
mov
add
sbb
rolb
mov
add
add
mov
flds
add
cmp
out
add
mov
mov
in
mov
ret
testl
nop
add
add
pop
and
out
shll
hlt
rolb
mov
pop
mov
push
add
dec
in
mov
xchg
call
addb
sub
addl
mov
sbb
ret
mov
add
cltd
cwtl
mov
mov
jmp
stc
test
sbb
inc
add
mov
loope
sbb
jg
add
add
fstl
mov
pushf
mov
cs
add
jne
mull
outsl
idivb
call
jae
punpcklbw
mov
inc
pop
stc
xor
mov
add
xchg
pushf
xchg
out
mov
cld
iret
jecxz
cmp
mov
jl
in
lea
add
inc
sahf
add
aam
enter
sbb
add
dec
stos
jge
and
and
mov
xchg
mov
adc
clc
xor
sub
in
jo
mov
add
mov
mov
test
push
addb
adc
sti
pop
pop
loope
dec
addb
ret
addb
lcall
out
and
mov
dec
leave
jae
push
push
das
sbb
loope
scas
stos
imul
addb
leave
gs
cwtl
xchg
cld
adc
pushf
shrl
jmp
or
add
insl
mov
mov
outsb
xor
jp
push
sti
popf
dec
pusha
add
xchg
insl
fcomip
sbb
pop
stc
std
lret
pop
jnp
sub
add
in
test
xor
xchg
xchg
mov
and
mov
loopne
mov
mov
add
or
jl
in
sub
fistps
add
sub
aaa
iret
mov
push
outsl
adc
mov
and
jo
mov
mov
add
add
imul
mov
cmp
nop
add
xor
add
jns
fs
mov
jecxz
add
adc
aas
scas
jnp
int
xor
mov
mov
sbb
repnz
test
cmp
in
outsb
jg
jge
and
mov
xor
mov
mov
mov
xlat
adc
les
mov
jp
add
test
movsl
or
push
add
dec
push
add
mov
sbb
imul
ja
mov
dec
add
cpuid
add
fiadds
js
bound
mov
sbb
add
xor
pusha
add
jae
add
adcl
mov
mov
lea
sbb
out
pop
push
nop
add
mov
dec
rolb
ss
loop
mov
test
xor
mov
mov
mov
sbb
add
cs
mov
cmp
lahf
mov
into
pop
cmp
insb
sub
jne
fistps
movsl
pop
jnp
cmp
cmp
loopne
mov
ret
aad
addr16
jo
mov
stos
addb
scas
adc
inc
mov
jo
mov
and
mov
mov
push
adc
adc
mov
fldenv
int
sbb
decl
xchg
int3
push
into
cmc
inc
cmp
fists
add
pop
repnz
orl
inc
or
sbb
xchg
jae
push
sbb
sbb
jp
add
xor
pop
adc
mov
std
pop
daa
jae
add
xchg
add
cmp
repz
and
mov
add
mov
sub
loope
mov
add
add
jns
add
out
ss
insb
hlt
jmp
add
cmp
pop
data16
add
lds
pop
adc
mov
add
pushf
hlt
cs
add
out
mov
lea
jnp
add
or
jmp
hlt
mov
xchg
add
int3
cld
xchg
and
add
ret
sahf
je
addr16
out
int3
xlat
clc
add
lods
andl
repz
xor
mov
div
jecxz
jg
je
inc
xor
add
xchg
mov
add
xor
mov
sbb
push
jge
or
gs
dec
aad
push
xor
aaa
pop
inc
xor
mov
in
sub
add
js
add
mov
pop
sahf
jbe
movsb
jnp
add
push
into
in
jge
or
dec
js
xchg
dec
push
cmp
ret
sbb
add
pusha
add
xor
mov
mov
xchg
clc
mov
stos
jecxz
dec
scas
ficoml
insl
mov
stos
sbb
cmp
ja
mov
aaa
add
in
push
jb
mov
lret
insl
jns
rolb
mov
gs
add
pop
int
add
pop
pop
mov
push
and
repz
fstl
and
mov
adc
xchg
cmp
les
push
daa
inc
cli
dec
rcrl
xchg
ja
mov
add
addb
dec
inc
add
mov
dec
push
add
dec
je
push
stc
add
sub
mov
add
adc
mov
ljmp
pushf
addr16
add
out
cs
add
mov
lahf
addb
cld
mov
ds
pop
jno
fnstcw
sub
add
stos
adc
scas
leave
jl
cmp
adc
mov
lds
add
xchg
xchg
inc
or
and
add
or
lret
pop
addb
jo
mov
cmp
mov
test
ret
mov
insl
cmp
mov
mov
and
mov
loop
mov
add
mov
jl
aas
cli
in
dec
cmp
sub
mov
push
mov
sub
pop
xor
cmpsb
pop
jmp
pop
jns
ret
cld
jle
lods
sbb
and
inc
add
xor
mov
nop
add
add
in
or
xor
mov
and
mov
test
mov
mov
adc
mov
stos
cmp
cwtl
dec
adc
mov
test
adc
or
mov
mov
das
sbb
add
pop
lret
iret
push
or
mov
mov
ret
mov
test
cli
lcall
cmp
testb
jmp
mov
xchg
fsub
pop
or
test
jo
mov
mov
jp
add
test
scas
pop
lret
lret
cmp
leave
pop
dec
daa
xchg
xchg
add
rol
add
data16
cld
inc
cs
loopne
mov
imul
fsubl
mov
out
sbb
sbb
in
call
cmc
push
in
mov
insb
sbb
add
add
mov
enter
mov
push
add
add
fimuls
in
aaa
test
dec
addr16
outsl
mov
rolb
xchg
or
and
lcall
jp
mov
mov
ror
push
add
gs
add
add
mov
stc
cmp
add
cmpsb
addb
cld
and
push
lret
jo
mov
and
repnz
mov
push
sub
mov
mov
mov
fprem
xchg
pushf
cmc
mov
hlt
int3
stos
test
xor
mov
outsl
bound
mov
mov
push
fildll
aam
push
push
sahf
sub
movsb
cmpsb
data16
mov
add
rolb
and
mov
add
mov
lea
mov
add
sub
stos
lret
dec
inc
cmp
add
mov
mov
js
jge
rolb
mov
test
push
jbe
lret
divb
jnp,pt
clc
sbb
mov
les
add
cs
je
lods
rcl
add
rolb
mov
mov
out
jl
cwtl
cli
cli
test
add
jnp
pop
jo
mov
add
adc
mov
mov
std
stc
pop
jne
cltd
out
pop
or
lret
xchg
fimuls
add
xor
mov
ret
cmp
add
repnz
mov
add
sbb
mov
mov
clc
addb
mov
stos
dec
sbb
mov
add
and
mov
adc
adc
mov
pop
sbb
mov
and
mov
ret
imul
add
rolb
mov
into
push
sbb
in
incl
lods
sub
pop
push
stc
mov
sti
mov
test
add
pop
ret
cmovs
sub
add
add
rcrl
in
or
mov
cmp
insb
lret
sbb
or
nop
add
mov
add
scas
adc
loope
addb
mov
lahf
rolb
iret
mov
jmp
cmp
repz
adc
inc
test
mov
jno
jns
adc
cmp
add
xor
mov
insl
or
push
jle
das
addb
add
mov
xchg
out
int
sti
jb
mov
fcomip
cs
jl
test
xchg
je
clc
int3
outsb
aas
lret
mov
mov
sub
xchg
xchg
mov
data16
lods
push
imul
add
push
and
iret
push
add
scas
mov
add
sub
and
ss
pop
ljmp
mov
and
xchg
leave
mov
add
pop
dec
inc
add
pop
dec
inc
push
fisttpl
das
pop
stc
sub
add
mov
add
pop
mov
mov
mov
mov
xchg
mov
rolb
mov
mov
outsb
push
jmp
add
outsb
or
mov
mov
into
and
mov
cmp
loope
add
inc
add
mov
adc
push
cmp
je
scas
xchg
dec
call
lcall
repnz
add
and
pop
test
xor
rorl
push
lret
mov
cmpsb
push
js
mov
insl
lcall
mov
xor
roll
int3
into
xor
mov
jbe
test
lock
push
xchg
sbb
lahf
jnp
sbb
add
clc
pop
orl
pop
pop
inc
mov
dec
clc
mov
mov
xchg
loop
mov
repnz
std
mov
pop
and
mov
xchg
jge
aad
pop
mov
ret
cmc
scas
pop
in
aaa
mov
rcrl
push
mov
test
mov
push
add
mov
xchg
add
add
push
movsb
dec
mov
and
fisttpl
das
aas
jae
scas
jns
test
mov
mov
inc
out
push
adc
pop
and
add
pop
xchg
and
retw
stos
bound
mov
pop
fs
daa
cmp
cli
enter
add
lds
fldenv
outsl
out
enter
not
add
lds
add
mov
out
xor
mov
mov
in
lret
sub
cmp
xchg
adc
jne
daa
jle
add
scas
mov
adc
push
add
mov
test
mov
sbbl
loop
mov
jb
mov
xchg
add
mov
mov
jmp
xor
mov
outsl
loope
dec
add
sub
sub
cmp
cmp
call
jmp
sbb
mov
add
xor
mov
lahf
mov
mov
add
mov
loope
inc
add
xchg
dec
ds
sub
sub
mov
add
nop
add
add
mov
stc
mov
outsb
add
mov
add
mov
sahf
hlt
pushf
sti
fstpt
pop
sub
pop
xchg
mov
fisttps
inc
popa
or
add
fidivrl
cmp
jl
dec
dec
orl
or
arpl
aad
pop
xchg
loopne
mov
dec
in
call
clc
xor
mov
jl
mov
add
scas
out
maskmovq
idivl
mov
dec
sahf
xor
stos
dec
aas
dec
sbb
les
inc
lock
out
lcall
jae
stos
add
ror
or
mov
sub
add
mov
mov
mov
push
pop
ret
push
xchg
aas
push
repnz
adc
clc
mov
sbb
jg
arpl
xchg
add
mov
jno,pn
in
pop
les
jno
nop
add
jno
mov
mov
push
jecxz
jno
rolb
mov
int
mov
ss
fwait
jae
push
add
add
dec
cwtl
lods
je
mov
mov
ljmp
mov
fcoml
sub
xor
dec
cmp
jbe
scas
sub
mov
mov
mov
and
mov
mov
add
dec
add
mov
lea
add
add
lcall
lea
pushf
jns
sub
icebp
lods
xor
das
mov
jae
fsubr
jbe
popa
mov
add
add
mov
stos
cltd
movsl
lahf
jle
sbb
roll
mov
mov
and
mov
add
xor
mov
mov
add
push
push
fucomip
cwtl
imul
add
dec
mov
add
cmp
pusha
add
hlt
test
int3
pop
push
add
mov
test
call
cmpsb
stc
inc
push
lock
mov
movsl
int3
arpl
fwait
mov
add
fs
sbb
mov
lcallw
aam
sub
pop
and
mov
mov
arpl
test
inc
sub
fdiv
mov
or
out
sbb
or
inc
mov
inc
mov
mov
mov
aam
out
add
and
vmovntdq
and
or
pop
push
add
icebp
jo
mov
or
adc
js
sbb
icebp
lods
ret
and
popf
ret
add
mov
test
add
add
mov
lock
inc
push
sbb
imul
push
rolb
pop
xchg
push
sub
add
xor
mov
xchg
test
add
fidivrl
mov
repz
sub
call
jmp
push
pop
mov
gs
out
pop
push
fnstsw
cmp
mov
and
add
mov
xrelease
mov
fisubl
add
dec
repnz
add
mov
roll
popf
cmpsb
inc
jg
popa
add
in
ret
and
add
cltd
aam
cltd
inc
mov
addb
mov
mov
or
ljmp
arpl
mov
jnp
ljmp
add
adc
mov
add
push
add
imul
add
push
pop
cmp
fdivrp
dec
movsl
jle
je
into
pop
loope
sahf
push
sahf
cmp
insl
fs
add
or
rolb
sti
pusha
add
xchg
add
rolb
and
mov
sub
mov
add
add
mov
add
sub
in
pop
xchg
sbb
dec
int
enter
mov
mov
decl
xchg
add
fiaddl
andl
jg
ss
xchg
mov
jmp
ficomps
pushf
in
jmp
sub
cs
pop
addb
mov
or
in
fisttps
add
jo
mov
add
mov
stc
sub
mov
fcoms
mov
mov
jb
mov
movsb
loop
mov
hlt
or
mov
jns
add
fs
rolb
mov
adc
sub
add
nop
add
mov
jb
mov
sbb
add
xchg
mov
pop
push
test
push
rolb
or
stc
movsl
ret
test
repnz
sub
into
mov
mov
cmpsb
imul
mov
call
mov
adc
mov
adc
cmp
es
and
inc
push
dec
fisttpl
pop
pop
out
movsb
xchg
jae
dec
out
in
adc
or
pop
sub
int3
inc
std
loope
loop
mov
xchg
inc
ljmp
ds
outsb
jecxz
repnz
jns
dec
bound
mov
addb
add
mov
popa
lea
mov
pop
add
lea
call
mov
in
add
repz
test
xor
mov
jp
nop
add
dec
mov
rcrl
push
fcompl
add
jns
sarl
cmp
out
mov
mov
lret
add
lret
jns
add
fadd
rolb
mov
xlat
jns
lock
mov
leave
mov
rolb
mov
xor
mov
inc
add
mov
jle
pop
imul
cs
clc
mov
cmpsb
gs
and
cmp
push
sahf
lea
add
cmp
fs
add
inc
sbb
push
dec
push
mov
sbb
add
pop
xchg
test
add
push
mov
add
mov
loopne
mov
xchg
or
add
add
mov
add
fsubs
dec
sti
adc
mov
mov
push
ja
fisttpll
add
lock
mov
push
pop
adc
mov
jp
pusha
add
inc
dec
lods
popf
test
rolb
rorl
mov
call
and
mov
outsl
pop
fs
inc
add
add
das
test
cld
xchg
addb
push
mov
lods
stos
sbb
jg
divl
repnz
dec
mov
jno
enter
enter
lahf
xchg
ja
cwtl
jl
divb
mov
jns
lods
sbb
cwtl
push
fucomip
mov
push
add
in
adc
hlt
insl
add
out
inc
add
addb
jmp
aaa
mov
addl
push
add
jno
adc
outsl
fildll
aaa
sbb
sbb
test
add
sbb
pop
lret
mov
add
mov
add
lea
mov
mov
or
pop
rcrl
mov
push
push
push
cmp
rolb
das
cmp
mov
ja
inc
add
loopne
mov
mov
add
pusha
add
add
add
in
movsb
mov
mov
loop
mov
dec
xchg
mov
mov
sub
push
add
add
mov
add
pop
xor
mov
test
add
inc
test
sarl
xchg
pushf
hlt
mov
mov
std
sub
ja
fnstenv
jg
jbe
addb
mov
mov
xchg
xchg
sbb
into
cmpsl
shl
mov
push
add
jns
pop
inc
add
mov
inc
add
outsb
sbb
and
mov
roll
jg
test
add
mov
mov
shrl
test
mov
or
mov
ljmp
push
mov
loope
test
push
adc
mov
mov
mov
repnz
add
add
daa
ret
or
cmp
mov
mov
jae
out
jnp
sbb
inc
jmp
add
mov
cmp
add
dec
push
adc
mov
addb
out
add
enter
rolb
mov
add
add
or
add
cld
pop
adc
mov
mov
test
outsb
mov
mov
xchg
pusha
add
mov
add
repnz
jmp
cmp
gs
xor
rolb
lahf
lret
dec
les
cmpsb
daa
pushf
jp
pop
outsb
mov
mov
mov
mov
lock
cld
mov
pop
shl
gs
mov
xchg
outsb
loopne
mov
adc
mov
add
inc
dec
xchg
std
xchg
loop
mov
mov
push
aaa
popa
push
aam
and
mov
push
mov
sti
and
mov
jle
lret
jne
mov
adc
mov
mov
idivl
cmp
into
je
das
pop
jns
add
fwait
cld
xchg
adc
mov
sbb
push
xchg
push
add
mov
pop
push
jge
inc
pop
fisubrs
lock
mov
call
out
in
cltd
fsts
and
sbb
and
add
mov
add
xchg
and
mov
add
fs
dec
sub
pop
xchg
and
xor
and
adc
loop
mov
cmp
rolb
mov
xor
mov
lea
adc
mov
mov
mov
mov
fcomp
inc
add
adc
dec
mov
jmp
jecxz
stos
loope
outsl
pushf
push
sahf
xchg
xor
mov
cmp
decl
sbb
cmc
pushf
cld
call
in
mov
dec
rcr
cmp
inc
add
mov
das
std
inc
push
mov
fdivs
insl
les
push
add
push
jecxz
call
add
add
push
lock
mov
add
mov
mov
mov
loopne
mov
or
jl
stos
mov
jae
sbb
jbe
rolb
mov
mov
dec
jg
or
cmp
add
xchg
push
loope
and
mov
sub
je
and
sub
add
std
rolb
mov
or
notb
out
cli
inc
xchg
pop
mov
hlt
cs
movsb
xor
mov
cmpsb
inc
movsl
hlt
sbb
dec
mov
cli
pop
dec
cmp
mov
pop
sbb
or
push
xlat
sub
jnp
or
scas
stc
fildll
pop
sbb
add
stos
jmp
loopne
mov
movsl
push
mov
dec
cmc
mov
mov
fisttps
iret
addb
sub
enter
pop
adc
mov
jg
pusha
add
and
mov
inc
test
xor
mov
add
adc
add
addb
sbb
add
mov
xor
out
std
movsb
add
mov
sahf
sbb
push
ljmp
sub
hlt
mov
outsl
xorl
mov
mov
cmpsb
scas
lods
cmp
mov
adc
mov
mov
ljmp
into
jl
cmp
and
add
cmpsb
xor
push
je
jb
mov
mov
add
sub
insl
test
icebp
mov
mov
mov
dec
mov
jl
or
ffree
jbe
xor
ficomps
inc
lods
inc
lods
enter
cmp
add
cmc
inc
and
mov
fchs
add
add
add
out
mov
in
loop
mov
mov
xor
leave
mov
mov
pop
xor
add
xchg
dec
outsl
mov
lods
xor
add
prefetch
les
sub
add
addb
fnstcw
mov
dec
imul
cld
fcmovb
cltd
sub
test
out
test
add
rorl
xor
in
ficompl
out
jns
jno
push
lcall
or
fidivs
add
jl
add
lods
addb
movsl
pop
loopnew
mov
add
add
gs
add
push
add
movsb
cmpsb
sbb
icebp
rolb
repnz
mov
dec
popa
xchg
jb
mov
pop
add
add
mov
add
fxtract
mov
daa
sub
out
jg
push
adcl
xor
mov
add
add
cmp
fwait
inc
cmp
xor
add
outsl
inc
mov
jns
in
mov
testb
sbb
ret
das
jl
lahf
jecxz
rcrl
add
or
jbe
cmpsl
rolb
mov
mov
sbb
ret
and
ljmp
add
dec
mov
jp
add
idivb
scas
pusha
add
scas
fsubs
sbb
jmp
stos
or
jge
mov
mov
xchg
popf
cmpsb
popa
sbb
inc
sub
add
inc
xchg
add
jno
jo
mov
repnz
loop
mov
sbbl
adc
fcmovb
loopne
mov
fwait
or
js
add
xchg
aam
xchg
sub
inc
test
sahf
xchg
loopne
mov
sbb
jecxz
out
cmp
mov
or
mov
fisubrl
add
dec
lret
add
add
sub
dec
add
insl
movsb
pop
add
pop
int
lret
ret
bound
mov
and
mov
mov
mov
daa
dec
leave
sub
inc
add
adc
mov
out
pop
stos
push
xchg
fimuls
rolb
mov
and
dec
mov
fwait
cmp
pusha
add
push
stos
pop
xor
mov
add
sub
add
outsb
push
mov
das
or
jno
mov
imul
pop
cli
cmp
add
mov
loop
mov
mov
xchg
sbb
add
dec
out
scas
xor
out
insb
leave
xchg
mov
bound
mov
push
add
cwtl
xchg
add
rolb
pushf
lret
mov
bound
mov
addb
stos
push
add
add
mov
add
add
sub
or
mov
mov
movsb
jmp
mov
cmpsb
and
ret
pop
scas
outsl
stos
loope
add
nop
add
add
push
clc
mov
dec
into
popf
test
add
mov
adc
mov
mov
aaa
cmp
add
cmp
ja
enter
cmp
push
add
iret
cmp
add
push
imul
inc
mov
lods
out
push
add
jl
jno
xlat
in
mov
lds
adc
push
jae
lret
add
mov
or
popa
sub
outsl
std
lahf
loopne
mov
add
add
sub
jo
mov
test
cmp
mov
mov
roll
and
mov
xchg
sbb
mov
mov
xor
mov
add
loopne
mov
in
inc
das
xchg
push
test
icebp
mov
add
mov
mov
pop
addb
rcrl
fs
add
stc
push
add
xchg
inc
or
jl
and
mov
cmpsb
rcrl
addr16
mov
cmpl
hlt
mov
sub
cs
cmpsb
outsl
jnp
std
leave
fstp
stos
loopne
mov
mov
cmp
xchg
outsl
iret
fmul
push
data16
scas
test
mov
ret
dec
add
add
addb
adc
inc
in
and
mov
stos
xor
mov
or
sbb
fidivrs
movsb
mov
add
add
or
xor
mov
mov
add
fdecstp
repnz
out
iret
ljmp
add
pcmpgtb
xor
mov
dec
xchg
mov
cmpl
int3
dec
decl
stos
inc
lock
cmpsb
pop
movsb
fisttps
mov
sti
imul
sbb
in
enter
mov
mov
xchg
aaa
cmpl
mov
addb
fidivs
je
mov
fstpl
arpl
test
add
icebp
mov
add
mov
cld
inc
ret
add
push
mov
add
mov
pop
icebp
fidivs
mov
add
notl
add
adc
scas
leave
push
mov
xor
cmp
movsb
out
pushf
je
add
xlat
stos
out
xor
mov
mov
es
xor
pop
xlat
pop
insb
js
dec
test
cmp
or
add
xlat
mov
int3
mov
and
mov
sub
cmc
pop
jae
adc
js
std
pop
xor
mov
mov
add
fstpl
cmpsl
pop
push
add
xchg
scas
pop
pop
sub
iret
adc
mov
add
cmp
or
in
mov
adc
mov
movsb
add
push
xor
stc
mov
cmc
jne
cmp
cmp
mov
add
roll
movsl
add
incl
add
xor
push
test
xchg
add
mov
mov
push
test
add
in
sbb
jle
mov
mov
mov
add
out
pop
push
pop
push
out
lds
xchg
xor
lods
hlt
sbb
daa
dec
sbbl
test
mov
push
jmp
fucomi
sbb
inc
bound
mov
mov
or
xlat
fs
dec
jns
add
clc
mov
push
push
cmpsl
notl
xchg
das
dec
xchg
orl
stos
call
ss
fcoml
mov
ljmp
std
fmuls
scas
sub
idiv
sbb
ffree
add
mov
mov
sbb
and
sub
cld
pop
fldcw
jne
and
xor
mov
mov
inc
add
mov
cmp
mov
aaa
jmp
aam
mov
xchg
call
sub
fs
roll
mov
sbb
xor
insl
jl
rcr
imul
mov
aad
pop
mov
ret
aaa
jno
adc
add
and
cmp
jnp
lret
mov
add
sti
push
mov
mov
rolb
mov
push
sbb
out
adc
push
cwtl
jmp
xchg
pop
ds
sbb
out
pusha
add
add
arpl
outsb
repnz
mov
mov
sub
add
mov
mov
sbb
inc
mov
aaa
rcll
subl
mov
repnz
lahf
ret
cmp
loop
mov
popa
jbe
push
imul
sbb
mov
int3
cmc
cmc
out
xchg
aad
mov
das
int
add
cmp
jns
mov
add
stos
jns
lds
cwtl
insb
lds
adc
mov
mov
xor
iret
xchg
ret
cltd
adc
push
mov
loopne
mov
call
shrl
inc
add
pop
inc
test
ss
bound
mov
mov
xchg
adc
xor
pop
xchg
imul
jno
daa
xorps
inc
push
inc
add
lcall
xlat
sub
add
lret
aad
lret
out
jo
mov
add
mov
mov
mov
ja
xchg
filds
add
mov
or
or
add
xor
mov
inc
int3
inc
sbb
pop
pop
bound
mov
pop
sbbl
nop
add
outsb
pushf
cmp
add
mov
add
shll
cld
pop
push
jge
loopne
mov
mov
mov
add
xchg
and
mov
lds
mov
fcmovnu
mov
fdivrs
add
jo
mov
jmp
stc
or
sub
add
mov
jecxz
add
mov
mov
jne
xlat
out
xchg
mov
push
add
mov
iret
das
rolb
mov
in
add
loope
test
or
adc
mov
sbb
mov
push
add
cmp
rcr
jp
inc
add
mov
mov
test
stc
adc
mov
jl
push
out
inc
add
mov
push
cmp
rolb
mov
in
sub
sbb
mov
test
aaa
adc
jecxz
clc
stos
mov
push
out
cmp
jmp
add
cmpsb
in
call
mov
inc
add
mov
mov
popf
sbb
bound
mov
add
push
lds
sub
push
add
and
movsl
insb
mov
add
mov
xor
add
mov
xchg
add
and
mov
add
leave
push
add
std
ret
scas
and
mov
add
add
stos
mov
int3
jne
add
daa
cmc
jbe
add
icebp
loop
mov
mov
ljmp
cmpsb
es
insl
xlat
mov
lret
loop
mov
add
rolb
push
jb
mov
add
jle
mov
mov
adc
in
mov
add
test
aam
add
add
test
jnp
add
bound
mov
cli
lcall
clc
jle
lahf
pop
inc
pop
mov
mov
add
add
popa
pop
jmp
add
mov
add
add
cmpsb
insl
jne
popf
sbb
mov
pop
lock
icebp
insb
daa
jmp
test
sbb
inc
add
pop
ds
daa
and
add
mov
add
mov
decl
add
push
add
scas
icebp
adc
add
pop
jae
fcmovnbe
xor
xchg
pusha
add
mov
addb
mov
sub
popfw
lcall
or
stc
mov
cwtl
ret
mov
icebp
out
icebp
movsl
les
add
add
inc
out
lret
lods
adc
mov
jl
xor
pop
repz
or
sahf
aad
mov
add
mov
jg
inc
mov
dec
and
in
adc
fstl
scas
mov
test
inc
xor
mov
add
xchg
stos
or
adc
add
xlat
xlat
mov
mov
add
add
xchg
add
mov
repz
lds
mov
aaa
mov
mov
dec
inc
add
mov
push
mov
add
mov
cwtl
stc
jge
sbb
push
ljmp
iret
pusha
add
mov
or
int3
mov
mov
test
lods
xor
mov
jecxz
sbb
add
mov
mov
add
outsl
pushf
xor
mov
jp
dec
imul
pusha
add
or
mov
and
mov
add
mov
sbb
stc
mul
push
lds
add
cltd
nop
add
fsubl
mov
pop
jle
loope
jae
es
enter
pop
shll
xor
and
icebp
or
mov
xor
out
sub
in
dec
gs
or
pop
add
xchg
lods
lods
xchg
outsl
sbb
mov
add
mov
lahf
or
cli
inc
in
ret
push
fnstenv
mov
dec
jae
jmp
xor
mov
mov
fnsave
cld
stc
mov
xchg
pop
fdivs
test
lds
dec
ret
sub
cmp
call
mov
cmp
add
pop
movsb
xchg
jmp
out
push
push
add
cmp
loop
mov
jge
pop
add
mov
xchg
lret
fistpl
mov
fsubrs
jp
insl
int
shr
rolb
mov
add
add
aas
ds
test
push
fisttpl
outsl
fcomi
mov
adc
push
iret
mov
in
jecxz,pt
push
inc
ret
mov
dec
ja
mov
xchg
and
dec
decb
add
mov
add
bound
mov
leave
test
mov
add
ljmp
test
inc
cmp
inc
fildl
add
mov
das
mov
add
out
fs
push
add
incl
jmp
xchg
add
cmp
mov
lcall
divb
add
fmuls
es
push
sbb
add
mov
addb
stos
ja
push
add
inc
dec
fildl
pop
push
mov
mov
add
aam
xor
mov
add
aaa
pop
mov
cltd
rolb
mov
mov
xchg
cltd
sub
mov
add
sub
in
scas
enter
in
in
lret
aaa
and
and
mov
push
clc
mov
inc
add
je
les
mov
sub
xchg
cmpsl
mov
mov
add
lea
adc
call
pop
out
sarl
icebp
cmpsb
insl
pop
rcll
pop
daa
cltd
jg
add
sahf
insl
sbb
loope
add
aad
pop
sub
sbb
das
int3
dec
sbb
and
mov
out
xchg
int3
mov
push
inc
add
push
fidivrs
stc
push
add
fwait
inc
add
mov
mov
add
jno
addb
and
mov
pop
bound
mov
cmc
das
jle
into
leave
lock
dec
fwait
mov
rcll
jl
rolb
mov
test
mov
cli
mov
mov
mov
push
xor
mov
xchg
mov
add
loop
mov
popa
or
cli
addb
out
imul
xchg
and
mov
cmpsb
ficomps
rolb
mov
add
iret
popa
lcall
ss
cltd
stos
insb
insb
imull
out
adc
out
cltd
ds
insb
mov
mov
xor
add
and
xchg
add
add
lret
xchg
add
pop
lret
insb
subl
cmpsb
xor
aad
add
add
push
push
es
mov
xor
push
add
fsts
add
add
xchg
add
cmp
xor
ret
xchg
sbb
mov
mov
call
dec
sub
jnp
outsb
cmovo
mov
or
notb
cmc
dec
daa
bound
mov
shll
mov
cmp
add
add
jo
mov
outsl
mov
jne
repnz
mov
mov
cmp
add
xor
dec
lods
mov
add
mov
mov
mov
loopne
mov
add
fucomip
cmp
rolb
mov
jp
push
gs
into
lcall
add
lcall
test
or
mov
add
call
in
pop
movsl
ret
lds
cmp
and
jge
sbb
fs
adc
mov
jg
cmpsb
sarl
mov
addr16
mov
mov
int3
in
ss
stos
dec
add
mov
inc
mov
add
cmp
add
out
dec
ds
xchg
call
add
add
add
mov
add
fidivl
add
lock
fs
add
dec
cmp
outsb
nop
add
xor
incb
mov
add
into
movsl
lret
jmp
ds
stc
aaa
sub
mov
int
insl
shll
mov
cmp
pop
insl
sub
push
and
mov
mov
stc
push
sub
add
mov
jg
pop
cmc
rolb
mov
sarl
mov
and
mov
add
pop
mov
push
cmp
or
dec
push
xchg
sbb
cmp
cwtl
sti
push
add
rolb
fsubrl
adc
jle
cltd
pop
jns
je
bound
mov
pop
mov
and
mov
jl
add
mov
or
add
mov
out
push
fnstcw
rcrl
out
adc
pop
stos
lea
mov
imul
testb
inc
call
jp
mov
add
mov
test
mov
adc
mov
mov
test
add
rolb
mov
imul
not
popa
mov
sub
arpl
add
jle
loope
mov
bound
mov
insl
xchg
fstpt
in
push
cwtl
mov
int3
xlat
sbb
sbbl
add
pop
mov
mov
testb
mov
sbb
jp
push
mov
addr16
push
push
push
xchg
cmp
jmp
test
fnstenv
add
icebp
sub
push
inc
in
jmp
adc
add
cmp
mov
add
fiadds
pop
in
push
add
addr16
daa
addb
xchg
add
mov
cli
pop
js
adc
sbb
pop
outsl
cmp
aaa
stos
out
je
add
add
add
sbb
mov
add
adc
mov
mov
in
pop
fisttps
addb
in
xchg
cs
cltd
cwtl
mov
fcom
sbb
jecxz
jp
inc
test
xlat
xor
and
mov
sub
push
add
inc
lock
icebp
in
insb
loop
mov
mov
add
decl
in
testl
add
mov
imul
mov
shl
jbe
pop
mov
sbb
ds
sti
or
and
mov
mov
outsl
mov
stc
xlat
loop
mov
mov
add
mov
mov
pop
push
or
sbb
add
mov
roll
mov
add
mov
sbb
add
inc
addb
movsb
sub
add
mov
xchg
addb
add
add
out
inc
jae
movsl
cmp
add
mov
sbbl
arpl
sub
pop
mov
add
or
mov
imul
push
pop
or
lds
mov
jmp
jp
add
jns
cmp
dec
call
push
pop
int3
push
bswap
clc
stos
fdivrl
mov
das
mov
stos
jno
mov
mov
gs
xor
scas
inc
add
sarl
and
mov
sbb
push
mov
sub
jns
xchg
mov
testl
cmp
add
loope
nop
add
int3
sbb
loope
pop
or
addb
lahf
cmp
add
stc
sti
xchg
aas
out
xchg
cmp
cmp
sub
mov
add
add
add
mov
das
pop
mov
xor
mov
cmpsb
repnz
push
mov
add
mov
hlt
mov
xor
mov
rcll
enter
add
in
es
incl
add
or
add
jecxz
inc
cmp
repnz
hlt
loop
mov
mov
dec
push
addb
les
movl
in
imul
mov
or
xchg
xor
mov
mov
addb
sub
mov
movsl
inc
add
scas
cmp
lret
add
pop
mov
mov
dec
sbb
les
dec
dec
xor
mov
addb
mov
add
test
mov
dec
or
jo
mov
push
cmp
inc
add
mov
movsb
out
int3
or
and
sbb
mov
or
out
cmc
inc
add
lret
jmp
mov
cmp
cmp
cmc
xor
mov
pop
scas
lret
jg
shrl
mov
add
and
loop
mov
mov
pusha
add
dec
jge
cmp
add
xchg
xor
and
xchg
xor
mov
dec
dec
daa
push
add
mov
xlat
loop
mov
shll
addb
sub
cli
or
cli
add
mov
and
into
stc
int3
jl
cld
and
jp
xor
mov
daa
imul
in
decb
inc
lahf
loopne
mov
fisubrs
dec
mov
pop
loop
mov
sbb
mov
lock
xchg
scas
das
fwait
leave
imul
inc
ds
xor
mov
daa
insl
inc
add
mov
jmp
add
popa
push
in
push
mov
pop
mov
sbb
mov
mov
add
xchg
push
add
adc
dec
xchg
pop
inc
xchg
sub
mov
mov
addr16
fsts
sahf
jae
fimuls
mov
jle
testb
ss
mov
nop
add
std
sub
cmpsl
fsubl
sbb
sbb
xchg
out
mov
std
inc
push
add
xchg
enter
and
inc
or
sbbl
ret
lret
xor
mov
add
jge
xorl
popa
add
mov
imul
lods
bound
mov
add
push
mov
adc
add
inc
mov
insl
cmpsl
fs
or
call
add
mov
mov
add
mov
push
rcll
maxps
sbb
in
iret
and
dec
daa
stos
outsb
imul
mov
jae
add
sbb
sbb
push
ss
mov
lods
xchg
stos
mul
add
and
push
push
sbb
out
push
cmp
add
outsb
inc
pop
inc
add
adc
add
adc
mov
jb
mov
mov
pop
and
mov
mov
pop
xor
mov
int
add
inc
hlt
cltd
pop
imul
jge
add
nop
add
add
or
dec
adc
mov
aas
ffree
out
popf
dec
push
sub
push
add
sbb
mov
push
add
shll
mov
add
mov
mov
mov
add
das
mov
pop
aas
inc
out
cli
xchg
pushf
xchg
add
mov
hlt
fs
ds
and
add
sbb
popf
push
outsb
sub
out
stos
stc
jns
dec
insb
cwtl
aad
xchg
add
ret
or
dec
ljmp
jne
pushl
icebp
or
lds
cld
in
dec
cmp
pop
scas
push
add
mov
out
adc
add
call
lret
mov
add
cli
sbb
cmp
mov
pusha
add
or
add
push
add
rep
out
and
pop
inc
add
test
mov
mov
mov
add
out
add
stc
shll
addr16
xchg
push
test
mov
pop
xchg
ljmp
mov
lods
cmc
ja
sub
mov
mov
dec
mov
add
out
movups
mov
lret
jo
mov
test
push
sub
enter
aaa
pop
mov
mov
jns
add
mov
add
add
test
adc
jl
add
out
sub
test
addb
daa
fdivl
add
mov
dec
data16
mov
mov
mov
int
scas
fdivp
out
in
jge
aaa
iret
repz
enter
mov
mov
add
sbb
inc
sub
dec
sub
std
and
mov
movsl
dec
jae
out
lds
ljmp
ja
or
push
cmp
add
outsb
stos
lahf
add
mov
mov
call
mov
aas
xchg
pushf
shll
in
leave
add
sbb
mov
mov
rorl
xchg
stc
or
add
add
mov
and
mov
mov
sub
mov
mov
aam
movq
jbe
sbb
out
ljmp
or
add
sahf
jp
scas
sbb
pop
mov
mov
pop
jle
mov
dec
aas
add
add
xor
xor
jne
int
test
mov
in
daa
out
orl
lret
mov
mov
repz
mov
out
and
mov
add
or
push
dec
iret
stc
in
es
push
add
rorl
push
imul
mov
loopne
mov
sub
mov
inc
mov
mov
mov
mov
inc
icebp
test
add
fmul
int
add
xchg
inc
int3
lds
jne
sbb
add
inc
enter
add
or
pop
pop
enter
xchg
add
push
pop
in
xchg
data16
bound
mov
jnp
ja
add
cli
repz
mov
lcall
mov
fwait
out
rolb
mov
nop
add
jb
mov
push
dec
sbb
rolb
jns
and
mov
mov
addb
push
and
mov
test
arpl
lcall
fisttps
imul
popa
xor
and
cmpsb
mov
xchg
scas
ds
lret
add
lock
maskmovq
scas
cli
rolb
mov
mov
ret
mov
aad
add
loope
xchg
or
add
sub
or
mov
mov
dec
pop
dec
movsl
mov
cmc
pop
aad
arpl
scas
fwait
sub
xlat
jp
sahf
sub
enter
sub
xchg
jbe
mov
popa
sbb
fdivl
notb
push
or
jae
jge
add
inc
add
push
xchg
pusha
add
pop
dec
cwtl
push
repz
rolb
mov
push
out
lcall
adc
mov
mov
add
addb
add
add
mov
xor
mov
rolb
fbstp
addr16
adc
into
mov
bound
mov
adc
sub
inc
jb
mov
mov
mov
add
xchg
sbb
push
xchg
bound
mov
push
add
add
bound
mov
imul
add
xor
ficompl
adc
mov
pop
pop
fisttps
mov
add
adc
jbe
and
add
movsl
add
mov
sub
daa
nop
add
push
add
jno
dec
push
in
inc
cmp
mov
push
aam
pusha
add
and
mov
sbb
add
les
mov
add
ret
xor
mov
sub
add
cmc
mov
mov
addr16
sub
push
sbb
bound
mov
mov
add
bound
mov
test
and
inc
hlt
aas
call
mov
int
out
stos
cmp
add
imul
mov
hlt
push
add
add
add
les
xchg
fdivrp
mov
mov
mov
xchg
cmc
mov
sbb
adc
in
mov
ljmp
add
cltd
push
inc
mov
les
jle
fidivs
ret
nop
add
push
xchg
xor
mov
loope
sub
je
mov
mov
and
mov
add
or
cmp
sub
lds
mov
pop
stos
lahf
inc
jae
rolb
mov
in
add
and
add
cmp
leave
dec
pop
adc
mov
mov
add
lods
pop
cmp
cmp
stc
sub
xor
add
pushf
push
ja
pop
mov
adc
mov
movsb
inc
stos
lods
lea
mov
add
mov
push
pop
mov
sub
fs
jg
pop
data16
pusha
add
add
or
adc
adc
mov
in
dec
mov
add
sbbl
outsl
pusha
add
mov
rcrl
rolb
jle
add
mov
and
mov
push
cli
push
call
mov
std
sbb
mov
mov
lods
push
jmp
add
mov
add
mov
fisubl
cmpl
mov
in
mov
int
sub
add
rcrl
mov
add
testb
xor
push
add
mov
leave
push
clc
push
in
xor
out
xchg
add
adc
mov
cltd
pop
nop
add
fwait
inc
pop
test
add
cld
or
xor
mov
pop
mov
mov
mov
inc
xor
loopne
mov
pop
pushl
add
mov
add
add
fldenv
sbb
test
xchg
add
cltd
stos
push
fs
mov
adc
inc
jae
pop
pop
jne
add
lea
and
pop
sub
and
mov
stos
and
add
pop
addb
imul
ds
sti
es
repz
add
int3
xchg
loopne
mov
mov
inc
sub
scas
fistps
add
popf
lods
lret
add
lret
fldl
xchg
test
push
nop
add
push
movsb
insb
cld
test
add
mov
fs
shll
mov
fimull
add
jnp
hlt
mov
add
and
mov
inc
clc
and
popf
pop
popf
pop
push
lret
add
jo
mov
adc
xchg
or
xor
mov
push
addb
or
negl
inc
enter
mov
mov
xorl
mov
xor
mov
rolb
jmp
stos
std
into
rolb
mov
pop
fcmovne
sahf
inc
jns
mov
icebp
addb
mov
mov
and
cmp
jg
xor
mov
add
negl
mov
mov
push
rolb
sahf
pop
xlat
fisubrl
iret
scas
jecxz
movsl
xor
mov
aam
xchg
xchg
roll
mov
xchg
add
mov
mov
push
cmp
ljmp
rolb
rolb
mov
xchg
lret
pop
fsubs
mov
push
cmp
push
pop
inc
xor
pop
mov
sbb
sub
hlt
pop
cwtl
stos
aas
outsl
lea
add
xchg
mov
jg
add
in
push
das
mov
push
inc
hlt
mov
outsl
push
mov
mov
add
dec
xor
mov
iret
enter
leave
mov
pop
fdiv
add
cmp
scas
aaa
push
add
mov
jp
aad
mov
imul
sbb
lds
push
ja
jnp
loopne
mov
jge
adc
jl
dec
lds
pop
and
inc
lods
xchg
and
scas
lret
add
in
je
inc
test
mov
add
iret
xchg
arpl
jae
fisubrs
fcoms
mov
jmp
rcr
jge
sbb
jmp
popa
pop
repz
in
sbb
push
xchg
jg
js
sub
add
gs
add
mov
push
xchg
push
cld
inc
and
push
add
in
adc
mov
outsb
fldenv
and
sub
add
sti
fwait
rcr
inc
add
sarl
fcompl
cld
mov
mov
rolb
lret
jl
and
add
push
and
add
testb
inc
icebp
test
pop
hlt
out
jne
sbb
cmp
mov
pop
sbb
cmp
fdivrs
inc
addb
cmpsl
movsb
mov
push
cmp
negb
pop
data16
or
pop
leave
push
push
and
add
popf
imul
movsb
sbb
pop
and
mov
add
addr16
int3
loope
inc
scas
aas
dec
pop
repz
add
sti
jo
mov
push
popa
xlat
xor
xor
daa
in
adc
xchg
int3
mov
sub
ljmp
or
dec
inc
les
adc
sbb
pusha
add
adc
in
sbb
push
cmp
xchg
inc
mov
loope
in
cmp
add
mov
popa
sbb
mov
inc
add
in
sub
or
ficoms
push
daa
in
or
testl
test
mov
xchg
xchg
in
fmuls
jg
push
add
mov
stos
jmp
cmp
add
adc
lock
mov
push
adc
jl
and
lcall
pushf
mov
xchg
out
insl
jmp
add
mov
inc
int
add
lret
add
add
lock
xor
add
pop
sbb
hlt
lret
cmpsb
int3
jno
push
das
jae
insl
mov
add
mov
push
pop
mov
mov
inc
xor
sbb
mov
mov
cld
xchg
or
push
jecxz
and
mov
push
sarl
pop
mov
add
pop
bound
mov
addb
dec
xchg
aaa
addb
ret
mov
mov
cmp
mov
mov
aad
pop
fsubrl
fstpl
mov
lods
xchg
mov
test
add
mov
dec
mov
arpl
dec
pop
nopl
inc
add
xchg
incl
mov
fwait
popf
stc
add
mov
xor
mov
test
cmp
mov
mov
lods
xchg
add
adc
add
jnp
cmp
repz
pop
lahf
jb
mov
pop
es
bound
mov
xorl
das
mov
inc
lret
fdivrs
loopne
mov
clc
sbb
daa
push
push
out
cmpsb
in
inc
add
ljmp
lcall
sahf
ds
xor
cmp
aad
and
mov
addb
cmc
pop
out
add
js
test
jo
mov
mov
pop
fs
ds
int
and
mov
mov
movsl
push
push
adc
push
pop
mov
sbb
jne
hlt
icebp
mov
push
push
add
out
imul
xchg
in
in
aaa
das
ljmp
mov
ret
or
mov
push
add
mov
sbb
add
imul
scas
xchg
rolb
mov
push
vmwrite
add
jbe
mov
mov
and
add
and
or
xor
mov
and
mov
add
cmp
xchg
add
mov
addb
jmp
repnz
addr16
jbe
xchg
mov
mov
outsb
sub
dec
in
sub
cmpsl
rolb
das
cwtl
addl
mull
scas
iret
or
popf
and
cltd
mov
add
cmp
mov
mov
sbb
add
push
pop
in
rolb
mov
ret
adc
xchg
add
inc
add
mov
aad
or
outsl
push
add
mov
sbb
cli
sbb
add
out
push
adc
add
insb
shll
pusha
add
add
add
mov
jecxz
adc
mov
mov
daa
int
mov
jae
in
pop
lods
add
js
cli
aam
stos
ret
dec
add
mov
lahf
push
iret
cmpsl
imul
mov
mov
add
mov
idivl
xorl
add
xchg
inc
add
mov
or
push
dec
inc
xchg
insb
sbb
add
mov
cmpsb
mov
in
add
mov
repz
xor
mov
cmpsl
insb
push
mov
xor
arpl
lret
popf
in
dec
cmc
xchg
add
push
adc
jle
add
ja
xor
dec
xor
sub
daa
sarl
xor
mov
add
jae
inc
loopne
mov
data16
fmull
xor
mov
jo
mov
filds
add
sbb
mov
mov
ret
sbb
xor
pushf
or
mov
ret
pop
pop
add
dec
dec
jbe
fdiv
popa
mov
sub
mov
aas
xor
mov
mov
and
pusha
add
fcompl
push
test
sbb
in
mov
std
les
scas
sbbl
dec
mov
sub
add
lds
in
rolb
aas
dec
adc
jle
jge
xchg
shll
push
popf
int3
or
insl
mov
mov
rolb
mov
in
xchg
add
add
cmp
mov
adc
mov
mov
les
mov
jecxz
dec
outsl
int3
mov
xor
sbb
push
add
daa
cmp
cmp
mov
movsb
cmp
and
add
add
and
mov
addb
inc
lret
cmp
incb
mov
into
jmpw
push
jp
adc
push
into
xor
mov
mov
inc
jg
nop
add
imul
in
iret
ja
outsl
xor
test
cmp
jbe
aad
repnz
mov
push
call
scas
jns
dec
mov
sub
popa
add
sbb
aad
je
jns
mov
pop
scas
push
add
push
xor
mov
iret
add
mov
add
data16
mov
addb
aad
cmp
add
mov
jo
mov
mov
dec
xor
mov
dec
int
add
add
lods
sbb
leave
rorl
jmp
cltd
xor
xor
add
push
pop
into
addr16
fnstcw
ss
stos
aam
divb
std
xchg
inc
jle
repnz
rolb
mov
add
mov
iret
out
sbb
cmp
lods
nop
add
es
or
pushl
call
clc
scas
lretw
ss
fwait
pop
lret
les
add
sbb
loope
sti
out
and
or
add
mov
fdivl
mov
mov
pop
je
je
mov
and
xor
push
mov
fisttpll
sti
stc
adc
add
add
iret
dec
out
sub
mov
mov
mov
jnp
cmp
ret
cmc
sub
mov
pop
cmpsb
push
hlt
push
cmc
lock
mov
jle
add
mov
cmp
add
mov
add
mov
shrl
fildl
xchg
insl
int3
lcall
mov
push
add
jp
jmp
inc
cld
roll
pop
xor
mov
dec
imul
push
mov
push
addr16
loopne
mov
int
xor
mov
xor
frstor
add
push
mov
push
pop
scas
xchg
loope
add
mov
mov
orl
sbb
outsl
jecxz
rolb
les
add
adc
mov
mov
add
loop
mov
jp
add
pop
push
push
cmp
lods
add
mov
mov
mov
pop
xchg
add
jmp
test
stc
in
mov
jmp
inc
jecxz
fidivrl
add
les
pop
cmpsb
dec
sub
outsb
and
mov
add
sub
jecxz
adc
je
aad
jge
add
test
ljmp
add
stos
push
sahf
int3
xor
sbb
ret
daa
mov
in
mov
pop
mov
out
mov
and
pop
stos
adc
rolb
mov
sbb
movsl
nop
add
cmc
add
mov
mov
fwait
push
popa
fs
jl
add
mov
std
sub
add
mov
mov
jo
mov
pop
mov
mov
jle
or
add
pop
add
mov
ss
and
mov
ds
sub
xor
mov
jne
daa
jne
add
repnz
test
or
cmpsl
cmp
push
mov
mov
add
mov
mov
pop
cmc
sarl
ret
dec
dec
or
test
into
das
shrl
mul
or
jmp
lcall
imul
or
xor
dec
jle
xchg
outsb
mov
add
add
mov
dec
add
mov
jg
loopne
mov
dec
xchg
xor
mov
push
pop
add
mov
adc
jnp
rcrl
sub
mov
divb
mov
xor
mov
mov
test
mov
into
sbb
add
rcl
mov
mov
ja
scas
dec
mov
mov
push
jecxz
lock
popf
push
add
push
inc
push
push
mov
addb
pop
pop
push
add
mov
add
pop
inc
fwait
inc
add
sub
icebp
sub
idivb
ljmp
loope
add
and
mov
cmpsl
cmp
push
or
add
add
sbb
movsb
jmp
popf
mov
mov
pop
xchg
ret
or
add
mov
imul
loop
mov
negl
xchg
ret
pop
call
out
sbb
add
imul
data16
sub
mov
movl
mov
add
mov
xchg
addb
pop
sbb
add
bound
mov
fcoms
and
mov
imul
in
lahf
gs
int
cltd
fst
jl
mov
add
insl
lahf
xor
das
mov
sbb
int3
out
mov
mov
pop
push
rolb
mov
mov
dec
sbb
fisubs
insl
sub
pop
je
fucomp
adc
pop
movsb
test
cli
nop
add
add
jbe
push
subl
mov
stos
mov
fwait
stos
dec
jl
out
rolb
pop
lock
scas
sbb
push
in
cmp
or
aam
sti
pusha
add
scas
in
fsubl
push
add
adc
xor
mov
mov
cmc
jae
das
dec
mov
aam
es
dec
push
lods
mov
xchg
add
xchg
pop
insb
leave
ret
call
rol
aaa
sub
addb
add
add
push
add
sbb
cmp
gs
jmp
sbb
cmp
push
es
sub
xchg
lret
das
and
out
adc
mov
and
lret
cmp
mov
add
and
dec
xchg
divl
dec
enter
imul
adc
js
dec
cmpsl
xor
mov
iret
mov
test
cmp
leave
jb
mov
aaa
mov
test
xchg
jae
cmp
int3
jne
jo
mov
mov
mov
cmp
pop
xchg
add
shll
push
sbb
dec
xor
mov
rolb
notb
mov
pop
fbstp
enter
fsubrs
mov
test
addr16
rolb
mov
jns
daa
stos
push
add
add
aam
test
mov
sbb
cmp
jo
mov
pop
or
mov
rolb
mov
add
mov
insb
and
mov
push
add
pusha
add
movsl
sub
mov
add
jno
ret
jnp
add
into
mov
jle
popf
or
and
mov
fsubr
mov
pop
test
inc
xchg
add
and
mov
xchg
sub
pop
sbb
pop
pop
jmp
sbb
test
push
dec
lret
mov
mov
sub
xor
xchg
ss
cmpsb
and
mov
icebp
push
aas
jle
bound
mov
mov
addb
sub
hlt
cltd
xor
popa
pop
rolb
mov
mov
lahf
mov
or
aam
lock
add
dec
bound
mov
add
push
test
inc
add
out
or
mov
or
add
enter
add
nop
add
test
add
sti
lret
sbb
push
jmp
mov
add
mov
add
push
sahf
dec
jnp
add
and
mov
daa
dec
push
mov
jg
out
or
idivb
mov
aam
insl
add
mov
add
push
aas
add
stc
loop
mov
dec
jg
add
mov
ja
mov
icebp
stos
dec
push
cmp
mov
inc
add
mov
mov
test
inc
pushf
je
sub
add
pop
test
dec
jae
cmp
add
addb
xor
mov
mov
ja
fcoms
or
push
xor
mov
mov
cmp
je
cmp
add
test
and
aaa
and
movsl
mov
mov
aam
sub
cwtl
sub
cmpsl
movsb
bound
mov
adc
imul
add
push
int
sbb
sub
sti
in
pop
jmp
xor
rolb
or
mov
xor
aas
jg
and
repnz
xor
clc
and
jne
push
adc
mov
paddq
sub
pop
xchg
fwait
addb
mov
enter
movsb
std
imul
mov
mov
mov
mov
mov
xchg
add
push
mov
ret
out
imul
sbb
xor
add
and
arpl
aad
jne
and
add
xor
insl
xchg
das
mov
mov
faddl
dec
sub
mov
jle
xor
repz
aaa
mov
test
movsb
jmp
in
icebp
jae
jno
mov
mov
pop
stos
in
cmp
sbb
inc
add
mov
stc
xor
push
xlat
cmp
sahf
popa
enter
call
dec
jge
add
mov
mov
and
imul
lods
js
mov
mov
sub
out
dec
nop
add
mov
and
push
add
mov
mov
push
jb
mov
inc
fisubrl
sti
jbe
add
fistpll
jmp
add
int3
repnz
mov
addb
sub
or
out
and
mov
jecxz
xchg
xchg
push
imul
mov
inc
add
add
and
iret
jno
and
movsb
out
sbb
lds
add
faddl
xor
mov
push
push
pop
xlat
sub
scas
push
add
cmp
inc
int
iret
sub
mov
mov
mov
add
popa
gs
mov
mov
es
xchg
sbb
mov
mov
add
fld1
movsl
mov
mov
push
mov
fcomip
add
adc
xchg
mov
jl
pop
cmc
repz
imul
push
mov
fwait
xor
mov
dec
and
mov
lods
xor
lock
loopne
mov
xor
push
jbe
mov
jg
cmp
incl
mov
add
mov
mov
mov
ret
mov
frstor
add
pop
out
mov
mov
add
sti
or
xchg
fisttps
jp
movsl
xchg
daa
jo
mov
xor
mov
nop
pop
sub
add
cmp
push
fnstsw
add
pop
daa
sbb
roll
xor
les
mov
push
adc
mov
pop
adc
mov
add
xor
add
dec
add
pop
mov
out
sub
mov
add
mov
and
xchg
push
repz
add
jns
pop
push
jg
pop
xchg
test
sbb
pop
out
add
or
fldl
mov
pop
jae
add
jp
ja
jmp
sub
jge
lods
popf
out
stc
or
or
add
mov
xor
add
test
jae
addb
aam
int
fdivr
and
sti
add
out
fdivrl
enter
mov
outsl
mov
jp
mov
outsb
std
sbb
add
lods
sbb
mov
or
add
xchg
lret
inc
gs
sbb
mov
inc
aad
out
mov
inc
mov
add
pusha
add
js
es
jg
jg
add
lret
out
pop
mov
pushf
mov
mov
cmp
in
sti
adc
mov
fnstcw
mov
cwtl
cmp
sbb
mov
adc
ss
fs
fistps
cmp
or
add
mov
mov
cmp
add
mov
repnz
jl
or
int
sub
imul
sbb
sbb
mov
mov
dec
sahf
push
lahf
xchg
add
jle
jns
dec
sti
lahf
ja
add
dec
lea
movsl
es
mov
sahf
cmp
add
mov
cmp
add
std
jb
mov
or
add
pop
insl
pop
and
push
xor
mov
add
incl
push
and
int3
leave
add
inc
xorl
push
pop
push
dec
sbb
mov
cs
xor
add
movsb
scas
les
mov
push
dec
orl
adc
mov
xchg
adc
add
jbe
cmpsb
jecxz
inc
mov
mov
sti
push
or
add
add
mov
ljmp
mov
push
add
pop
ds
call
pop
push
inc
in
pop
inc
add
add
pop
out
sub
insb
sbb
mov
push
insl
pop
xlat
addb
lods
lahf
push
repnz
imul
add
mov
jbe
adc
cmp
inc
adc
mov
push
sub
and
pop
mov
sbb
xor
fsubp
sahf
pop
cmpsb
mov
stos
dec
pop
inc
add
jge
pop
mov
mov
movsb
jns
test
jecxz
lret
ret
outsl
or
scas
xchg
aad
cmc
xor
in
sbb
or
out
sbb
push
mov
mov
jb
mov
int
ffreep
mov
fildll
repnz
add
cmpl
aas
dec
sub
sahf
fimull
dec
mov
fildl
ljmp
jl
add
sbb
rorl
daa
outsb
lds
pop
cmp
or
add
mov
add
repnz
insb
cwtl
inc
mov
add
add
mov
pop
mov
add
adc
mov
push
add
sub
push
dec
insb
dec
rolb
mov
out
add
mov
adc
insb
call
outsl
pop
xchg
mov
out
mov
loop
mov
xchg
mov
mov
sbb
and
mov
inc
mov
xor
inc
sbb
and
mov
cltd
enter
mov
add
and
mov
lock
lret
mov
mov
mov
jno
nop
add
cmp
add
lret
inc
cmc
loop
mov
mov
mov
sbb
pusha
add
sbbl
int3
xchg
imul
inc
stos
je
outsl
loopw
mov
and
mov
out
int
add
push
jmp
sub
add
mov
xor
pop
mov
push
repz
popa
ret
and
or
push
cwtl
jno
fsubl
jno
push
add
jg
sub
xor
add
pop
and
mov
jl
add
mov
filds
mov
mov
mov
loop
mov
add
xchg
add
mov
adc
scas
js
inc
mov
mov
nop
add
mov
mov
add
loope
arpl
aam
and
mov
dec
rolb
mov
xlat
jmp
sbb
xchg
cmp
mov
pop
insl
movsb
dec
jbe
inc
mov
ret
or
push
add
fidivrl
aaa
pusha
add
xor
mov
sbb
sbb
push
pop
pusha
add
addr16
int
xchg
add
ror
and
mov
scas
cmp
add
pop
cli
adc
mov
ljmp
stc
mov
push
or
in
addr16
stc
rolb
mov
and
mov
xor
mov
pusha
add
mov
mov
test
push
add
imul
mov
pushf
mov
jecxz
xchg
and
mov
adcl
outsl
aaa
jmp
inc
dec
test
enter
dec
pop
jg
and
aaa
push
add
push
loope
cli
or
rcll
add
jg
add
clc
filds
cmp
add
adc
mov
sbb
cmc
or
dec
es
and
mov
adc
cmp
mov
mov
dec
das
js
add
mov
push
ljmp
pop
mov
mov
mov
jl
out
sub
push
lret
nop
add
bound
mov
rolb
rolb
mov
out
mov
add
pop
in
or
xor
mov
out
fs
sbb
mov
sbb
mov
cmp
aaa
repz
dec
imul
fnstenv
fstpt
and
mov
pop
int3
sbb
xchg
mov
sahf
and
mov
ds
mov
mov
mov
cmpl
xor
repnz
out
mov
pusha
add
add
ja
push
cmp
repnz
imul
and
add
add
and
add
add
adc
jecxz
hlt
adc
pop
aaa
add
mov
mov
dec
imul
pop
mov
add
incl
add
xchg
lods
mov
inc
inc
add
add
jbe
xchg
add
sub
imull
repnz
stos
fld
pop
mov
std
arpl
gs
addb
and
add
mov
sub
add
xlat
shl
add
repnz
jmp
aam
daa
and
dec
push
imull
fnstcw
shrl
add
scas
leave
cmpsl
loope
pop
mov
clc
repnz
nop
cld
jae
add
add
test
nop
nop
cld
jae
push
and
xchg
loope
jg
mov
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
rorl
add
add
mov
clc
repnz
nop
cld
jae
xchg
imulb
pop
push
mov
out
stos
xchg
jne
inc
add
jb
add
nop
leave
jmp
xchg
add
add
add
clc
repnz
nop
cld
jae
mov
add
dec
mov
push
mov
nop
leave
jmp
mov
mov
mov
xchg
ret
add
rorl
fiadds
add
into
hlt
mov
mov
nop
leave
jmp
or
dec
sub
push
mov
xchg
ret
add
insl
adc
push
mov
xchg
ret
adc
nop
add
add
push
mov
xchg
ret
sahf
incb
add
add
mov
div
push
mov
nop
leave
jmp
mov
push
testb
into
add
mov
clc
repnz
nop
cld
jae
add
shll
add
add
add
repnz
nop
cld
jae
daa
mov
push
xchg
add
mov
nop
leave
jmp
add
add
add
add
jne
clc
repnz
nop
cld
jae
xchg
ja
cld
add
clc
repnz
nop
cld
jae
ret
add
pop
and
lea
clc
repnz
nop
cld
jae
add
loope
in
mov
and
push
mov
xchg
ret
jno
add
stos
mov
mov
fadds
xchg
ret
bound
add
test
jmp
mov
in
nop
leave
jmp
pop
add
dec
mov
rep
clc
repnz
nop
cld
jae
or
add
add
adc
movzwl
clc
repnz
nop
cld
jae
mov
sub
nop
nop
cld
jae
add
add
roll
push
cmp
in
nop
leave
jmp
daa
or
or
nop
nop
cld
jae
daa
xchg
add
pop
testb
push
push
mov
xchg
ret
add
ret
push
xor
push
push
mov
nop
leave
jmp
add
add
add
add
nop
nop
cld
jae
add
push
test
fcoms
clc
repnz
nop
cld
jae
add
add
add
add
jno
mov
push
mov
nop
leave
jmp
add
xchg
add
add
ja
add
clc
repnz
nop
cld
jae
mov
add
mov
push
mov
nop
leave
jmp
xchg
dec
adc
add
add
push
clc
repnz
nop
cld
jae
daa
add
add
add
cmpsl
dec
mov
push
mov
xchg
ret
insl
jbe
and
adc
cmp
repnz
nop
cld
jae
mov
add
jbe
and
mov
add
clc
repnz
nop
cld
jae
xchg
mov
mov
clc
repnz
nop
cld
jae
nop
add
add
dec
mov
clc
repnz
nop
cld
jae
jg
cmpsb
add
xor
add
clc
repnz
nop
cld
jae
xchg
add
sbb
clc
repnz
nop
cld
jae
add
add
add
jno
mov
nop
nop
cld
jae
bound
add
push
insl
pop
add
clc
repnz
nop
cld
jae
jno
xchg
add
jmp
repnz
nop
cld
jae
xchg
add
add
sub
sar
repnz
nop
cld
jae
pop
adc
jmp
inc
mov
pop
call
in
nop
leave
jmp
xchg
mov
mov
cmp
add
clc
repnz
nop
cld
jae
add
add
pop
mov
nop
nop
cld
jae
add
incb
adc
and
loop
clc
repnz
nop
cld
jae
testb
add
add
enter
nop
cld
jae
mov
add
add
cmp
mov
xchg
ret
add
xchg
jno
test
pop
add
clc
repnz
nop
cld
jae
adc
bound
mov
lea
rclb
outsl
out
inc
add
imulb
testb
add
mov
push
mov
nop
leave
jmp
pusha
add
loope
pop
add
clc
repnz
nop
cld
jae
xchg
jo
adc
mov
repnz
nop
cld
jae
insl
insl
stos
mov
fld
jmp
xlat
inc
add
add
and
mov
pushf
call
clc
repnz
nop
cld
jae
pop
add
add
call
clc
repnz
nop
cld
jae
add
in
out
add
clc
repnz
nop
cld
jae
fdiv
add
add
pop
mov
push
mov
xchg
ret
add
add
pop
insl
add
repnz
nop
cld
jae
add
jg
jno
push
in
sub
clc
repnz
nop
cld
jae
test
xchg
pop
add
add
cmpsl
flds
xchg
ret
add
add
add
jo
mov
pop
push
mov
xchg
ret
mov
pop
jg
into
fildl
add
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
add
add
add
cmpsb
xchg
cmp
mov
xchg
ret
cmpsb
cmpsb
and
daa
and
je
push
mov
nop
leave
jmp
add
add
push
jnp
add
shr
add
insl
add
xchg
cmp
rclb
nop
leave
jmp
jg
inc
loope
mov
cmp
nop
nop
cld
jae
in
add
add
negb
add
push
mov
nop
leave
jmp
and
add
xchg
add
nop
nop
cld
jae
add
insl
daa
pop
mov
jbe
sbb
mov
xchg
ret
add
add
pop
cmpsl
lea
repnz
nop
cld
jae
add
mov
mov
add
add
push
and
push
and
cltd
ljmp
jo
fiadds
add
repnz
nop
cld
jae
mov
inc
cli
pusha
clc
repnz
nop
cld
jae
adc
daa
fiadds
add
xchg
inc
add
stos
roll
pop
or
add
call
clc
repnz
nop
cld
jae
mov
add
jns
and
in
nop
leave
jmp
add
xchg
add
add
popa
clc
repnz
nop
cld
jae
test
ret
stos
pusha
rolb
lods
and
clc
repnz
nop
cld
jae
add
out
push
clc
repnz
nop
cld
jae
and
negb
add
jno
aas
je
clc
repnz
nop
cld
jae
pop
pusha
es
push
clc
repnz
nop
cld
jae
xchg
add
sahf
adc
sub
xor
add
clc
repnz
nop
cld
jae
into
sbb
nop
nop
cld
jae
sahf
mov
add
bound
push
mov
xchg
ret
daa
mov
cmp
mov
xchg
ret
push
movb
mov
add
daa
iret
mov
clc
repnz
nop
cld
jae
or
add
add
out
inc
add
mov
push
mov
nop
leave
jmp
dec
add
es
add
add
push
mov
xchg
ret
mov
add
add
in
xchg
rolb
mov
mov
xchg
ret
add
add
xchg
jae
add
clc
repnz
nop
cld
jae
add
or
cli
clc
repnz
nop
cld
jae
nop
add
push
xorl
push
push
mov
xchg
ret
or
add
daa
add
clc
repnz
nop
cld
jae
mov
dec
pusha
pusha
mov
stc
sub
clc
repnz
nop
cld
jae
pop
add
push
push
mov
nop
leave
jmp
add
add
outsl
push
clc
repnz
nop
cld
jae
pusha
mov
add
mov
cmp
add
add
repnz
nop
cld
jae
add
insb
add
push
mov
xchg
ret
xchg
add
and
add
or
rclb
testl
xchg
add
push
mov
add
push
mov
cmc
add
lahf
imul
add
xor
mov
cli
add
push
mov
nop
leave
jmp
testb
test
mov
repz
mov
nop
leave
jmp
xchg
nop
testb
pop
xor
mov
in
test
push
mov
nop
leave
jmp
nop
stos
mov
insl
xchg
and
mov
ret
loopne
mov
nop
cld
jae
add
add
add
add
pop
push
mov
nop
leave
jmp
stos
add
add
add
push
mov
xchg
ret
in
dec
mov
add
repnz
nop
cld
jae
jno
add
inc
add
movswl
clc
repnz
nop
cld
jae
add
add
inc
clc
repnz
nop
cld
jae
add
add
add
loop
clc
repnz
nop
cld
jae
and
add
jg
add
mov
call
clc
repnz
nop
cld
jae
test
add
aaa
jo
mov
adc
add
repnz
nop
cld
jae
es
xchg
in
mov
dec
sub
add
repnz
nop
cld
jae
add
nop
dec
mov
clc
repnz
nop
cld
jae
add
jno
add
nop
nop
cld
jae
add
notb
cmpl
and
mov
nop
leave
jmp
add
pusha
cmpsb
add
pop
jge
rolb
repnz
nop
cld
jae
insl
test
xchg
add
mov
push
mov
xchg
ret
negb
xchg
add
enter
nop
cld
jae
xchg
pusha
and
testb
xchg
push
xabort
nop
nop
cld
jae
insl
mov
pop
add
add
and
push
mov
xchg
ret
add
insl
add
daa
adc
nop
nop
cld
jae
mov
add
add
aad
addb
loopne
mov
jmp
add
jo
adc
daa
pop
add
repnz
repnz
nop
cld
jae
loope
add
add
and
notb
mov
iret
inc
add
mov
sahf
bound
add
daa
adc
jl
jbe
push
mov
nop
leave
jmp
add
and
push
push
mov
xchg
ret
add
es
add
add
add
xor
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
into
and
xchg
movsl
int3
push
clc
repnz
nop
cld
jae
jg
add
add
add
nop
cld
jae
loope
xchg
and
mov
inc
stos
dec
push
mov
xchg
ret
add
add
add
pop
add
rolb
mov
add
add
clc
repnz
nop
cld
jae
add
jmp
adc
repnz
nop
cld
jae
mov
push
add
mov
pop
push
clc
repnz
nop
cld
jae
mov
ja
add
test
xchg
push
add
xchg
add
add
insl
pop
movl
mov
xchg
ret
in
pop
add
bound
or
and
dec
add
mov
nop
leave
jmp
dec
mov
add
xor
push
mov
xchg
ret
insl
mov
xchg
jb
mov
mov
xor
repnz
nop
cld
jae
nop
pop
add
daa
and
sbb
nop
nop
cld
jae
add
insl
add
add
mov
add
and
add
add
movl
daa
xchg
pop
incb
and
je
clc
repnz
nop
cld
jae
add
outsb
push
mov
xchg
ret
loope
add
mov
mov
xor
add
clc
repnz
nop
cld
jae
gs
mov
add
in
nop
leave
jmp
add
add
push
push
mov
xchg
ret
add
mov
jmp
clc
repnz
nop
cld
jae
pusha
add
pop
add
xor
mov
adc
mov
clc
repnz
nop
cld
jae
and
sbb
nop
cld
jae
cmpsb
inc
and
scas
mov
clc
repnz
nop
cld
jae
and
add
sti
push
mov
nop
leave
jmp
add
add
add
and
pop
clc
repnz
nop
cld
jae
test
gs
stos
add
pop
clc
repnz
nop
cld
jae
add
add
ret
fdivrs
nop
leave
jmp
insl
add
add
cmpsb
add
add
repnz
nop
cld
jae
push
add
adc
and
fs
in
nop
leave
jmp
es
add
nop
stos
divb
push
dec
and
add
repnz
nop
cld
jae
add
mov
rclb
les
xchg
ret
add
pusha
pop
mov
add
push
mov
xchg
ret
add
jbe
adc
add
dec
inc
push
mov
nop
leave
jmp
mov
push
push
mov
xchg
ret
and
add
pusha
adc
mov
outsl
add
clc
repnz
nop
cld
jae
test
add
in
test
sub
int3
idiv
clc
repnz
nop
cld
jae
xchg
add
add
clc
repnz
nop
cld
jae
add
mov
pop
add
add
add
adc
stos
clc
repnz
nop
cld
jae
add
gs
add
add
add
push
push
mov
xchg
ret
add
es
add
add
mov
clc
repnz
nop
cld
jae
add
add
adc
mov
xchg
or
repz
mov
xchg
ret
mov
sahf
es
jne
clc
repnz
nop
cld
jae
add
jno
push
clc
repnz
nop
cld
jae
add
mov
pop
insl
add
push
mov
ret
xor
aam
dec
add
lret
add
add
jg
and
mov
push
mov
xchg
ret
insl
fiadds
add
add
add
add
ja
add
clc
repnz
nop
cld
jae
add
test
mov
jno
push
mov
nop
leave
jmp
insl
movb
nop
add
lahf
mov
clc
repnz
nop
cld
jae
jbe
add
test
push
mov
xchg
ret
adc
add
add
add
mov
mov
push
mov
xchg
ret
insl
add
cmpsb
add
mov
push
mov
xchg
ret
add
dec
nop
and
add
fcomps
mov
xchg
ret
dec
add
cmpsb
add
add
sahf
add
push
mov
nop
leave
jmp
jmp
add
mov
push
mov
xchg
ret
add
add
daa
add
xchg
mov
jb
clc
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
add
add
and
mov
mov
pop
add
popa
mov
fildll
sbbl
in
inc
add
nop
add
movl
sbb
mov
xchg
ret
add
xchg
jg
lret
or
add
clc
repnz
nop
cld
jae
test
xchg
pop
adc
mov
dec
testl
mov
into
add
repz
repnz
nop
cld
jae
add
and
jno
add
fwait
push
push
mov
xchg
ret
add
pop
add
add
insl
add
push
mov
nop
leave
jmp
add
add
jbe
jns
or
repnz
nop
cld
jae
pop
insl
add
cmpsb
add
cli
push
mov
nop
leave
jmp
bound
xchg
pop
add
add
push
or
xor
add
clc
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
bound
add
test
repnz
nop
cld
jae
daa
add
add
mov
xchg
ret
add
pop
jbe
test
xchg
push
mov
add
add
loope
add
add
and
rcll
cli
jmp
and
es
and
add
test
add
add
nop
nop
cld
jae
add
fcoms
jne
clc
repnz
nop
cld
jae
nop
jno
shll
pop
push
clc
repnz
nop
cld
jae
nop
add
add
ljmp
add
push
add
or
mul
call
add
in
nop
leave
jmp
add
add
pop
pop
rep
push
mov
nop
leave
jmp
add
mov
pop
add
add
std
dec
push
mov
xchg
ret
add
add
stos
mov
add
clc
repnz
nop
cld
jae
bound
add
add
push
mov
xchg
ret
mov
fadds
xor
mov
push
jnp
lret
add
xor
cmp
mov
cmp
push
mov
nop
leave
jmp
insl
and
and
nop
nop
cld
jae
ret
add
add
add
pop
pop
add
clc
repnz
nop
cld
jae
nop
add
add
mov
clc
repnz
nop
cld
jae
add
in
add
call
xchg
inc
add
push
test
add
testb
and
push
mov
xchg
ret
add
add
xchg
movl
add
clc
repnz
nop
cld
jae
add
test
xchg
outsl
mov
push
mov
nop
leave
jmp
mov
add
push
add
add
mov
clc
repnz
nop
cld
jae
pop
daa
mov
mov
clc
repnz
nop
cld
jae
and
test
movb
add
nop
nop
cld
jae
add
or
movzwl
clc
repnz
nop
cld
jae
add
add
jo
push
mov
nop
leave
jmp
insl
add
and
push
push
mov
xchg
ret
xchg
add
daa
jno
mov
sahf
mov
clc
repnz
nop
cld
jae
pop
or
fsubrl
jae
xchg
pop
add
pop
add
add
and
push
mov
nop
leave
jmp
xchg
add
adc
jne
rep
clc
repnz
nop
cld
jae
add
add
imul
clc
repnz
nop
cld
jae
roll
add
ja
jns
xchg
add
push
mov
nop
leave
jmp
mov
je
or
les
inc
add
add
xor
sbb
add
repnz
add
mov
push
aaa
dec
mov
clc
repnz
nop
cld
jae
or
add
push
fmuls
test
call
in
nop
leave
jmp
add
mov
add
add
xor
add
clc
repnz
nop
cld
jae
add
xchg
fnsave
sar
nop
nop
cld
jae
ficoms
insl
insl
add
fildl
nop
leave
jmp
add
add
insl
insl
add
jne
clc
repnz
nop
cld
jae
and
mov
hlt
clc
mov
clc
repnz
nop
cld
jae
add
movl
imul
and
incl
add
bound
add
popl
clc
repnz
nop
cld
jae
jg
loope
and
push
mov
nop
leave
jmp
add
add
add
add
aad
outsb
rep
clc
repnz
nop
cld
jae
or
add
into
add
dec
je
clc
repnz
nop
cld
jae
add
addr16
push
mov
nop
leave
jmp
jbe
adc
add
inc
clc
repnz
nop
cld
jae
add
ret
aam
cmpw
jmp
ljmp
pusha
xchg
inc
insl
add
mov
in
push
mov
nop
leave
jmp
pusha
add
and
add
into
mov
push
mov
xchg
ret
pusha
add
add
mov
fwait
lea
push
mov
xchg
ret
add
test
sub
nop
nop
cld
jae
add
dec
xchg
or
int
movsb
clc
repnz
nop
cld
jae
loope
add
insl
fdivr
popa
clc
repnz
nop
cld
jae
add
add
add
in
add
jbe
add
add
into
or
cltd
scas
pop
push
mov
xor
out
jmp
mov
add
lea
or
pusha
clc
repnz
nop
cld
jae
inc
and
bound
into
rcll
out
movzwl
clc
repnz
nop
cld
jae
pop
add
ja
fs
repnz
nop
cld
jae
daa
stos
add
inc
fldl
nop
nop
cld
jae
and
add
add
movzwl
push
mov
nop
leave
jmp
sahf
mov
insl
and
nop
nop
cld
jae
add
movl
inc
fwait
add
push
mov
xchg
ret
add
gs
repnz
nop
cld
jae
adc
and
clc
repnz
nop
cld
jae
add
into
xchg
testb
cltd
jmp
add
add
add
mov
pop
rolb
mov
pop
clc
repnz
nop
cld
jae
add
and
pusha
daa
xchg
lea
xor
add
push
mov
nop
leave
jmp
add
add
xor
clc
repnz
nop
cld
jae
push
stos
and
mov
add
add
push
mov
xchg
ret
adc
cmpsb
add
pop
pushl
clc
repnz
nop
cld
jae
add
mov
cmpl
in
nop
leave
jmp
add
add
add
hlt
push
push
xor
push
mov
nop
leave
jmp
pop
add
pop
push
mov
xchg
ret
or
jno
add
add
pop
push
mov
xchg
ret
add
add
mov
sub
clc
repnz
nop
cld
jae
or
add
je
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
nop
adc
jecxz
add
adc
cmp
push
mov
xchg
ret
add
add
mov
xor
mov
add
jno
add
in
xlat
add
add
mov
add
lea
push
mov
nop
leave
jmp
add
add
dec
add
add
mov
decb
jge
inc
add
incb
jo
add
push
clc
repnz
nop
cld
jae
and
loope
add
add
enter
add
mov
add
adc
add
mov
inc
inc
add
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
shll
add
add
ret
sub
repz
repnz
nop
cld
jae
add
add
add
in
or
in
add
dec
and
icebp
xchg
add
add
ficoml
aaa
test
decl
add
add
add
add
mov
test
push
add
clc
repnz
nop
cld
jae
add
mov
xor
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
add
mulb
movb
push
dec
mov
clc
repnz
nop
cld
jae
add
add
inc
xor
shrl
call
inc
add
add
add
push
clc
repnz
nop
cld
jae
and
and
add
fsubr
xchg
add
clc
repnz
nop
cld
jae
push
pop
add
bound
inc
push
mov
mov
push
mov
xchg
ret
ja
mov
add
jg
clc
repnz
nop
cld
jae
add
add
mov
inc
mov
clc
repnz
nop
cld
jae
add
or
stos
rep
push
mov
nop
leave
jmp
bound
insl
add
mov
fsubs
popa
add
mov
xchg
ret
add
fidivs
nop
add
mov
mov
clc
repnz
nop
cld
jae
and
add
jns
clc
repnz
nop
cld
jae
into
fsubs
mov
push
pop
int3
push
clc
repnz
nop
cld
jae
pop
movl
add
add
nop
nop
cld
jae
add
add
xchg
add
pop
testb
clc
repnz
nop
cld
jae
insl
add
rcrl
add
mov
adc
push
rolb
lock
mov
popa
fadd
xchg
inc
xchg
clc
repnz
nop
cld
jae
sahf
add
add
nop
adc
sub
jne
clc
repnz
nop
cld
jae
add
add
add
add
mov
nop
leave
jmp
jno
add
jbe
jg
mov
clc
repnz
nop
cld
jae
add
add
pop
movzwl
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
jo
mov
clc
repnz
nop
cld
jae
test
add
add
repnz
nop
cld
jae
pop
add
and
push
mov
xchg
ret
add
add
add
add
repnz
nop
cld
jae
test
pop
add
enter
mov
nop
leave
jmp
ja
mov
add
add
sahf
div
push
mov
nop
leave
jmp
add
pop
and
repnz
nop
cld
jae
add
and
mov
push
mov
xchg
ret
loope
es
add
add
push
mov
nop
leave
jmp
inc
notb
add
push
mov
xchg
ret
test
jo
add
mov
jne
clc
repnz
nop
cld
jae
add
add
mov
sbb
lret
in
nop
leave
jmp
add
add
in
daa
add
add
in
nop
leave
jmp
movb
xchg
insl
cltd
mov
clc
repnz
nop
cld
jae
mov
add
add
cmc
imul
adc
jmp
fdivrs
mov
xchg
ret
add
and
insl
cmpl
push
mov
nop
leave
jmp
adc
loop
push
mov
xchg
ret
add
jg
add
cwtl
call
clc
repnz
nop
cld
jae
and
add
rolb
sahf
lods
clc
repnz
nop
cld
jae
add
loope
add
roll
das
je
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
inc
jmp
nop
ret
repz
repnz
nop
cld
jae
fidivs
add
add
mov
mov
xchg
ret
add
loope
mov
nop
cld
jae
cmpsb
sahf
add
jo
inc
pop
xor
mov
jg
push
mov
nop
leave
jmp
or
pop
add
pop
jno
js
clc
repnz
nop
cld
jae
dec
add
dec
add
jmp
shr
push
mov
nop
leave
jmp
xchg
jno
add
test
jae
nop
add
enter
nop
cld
jae
add
add
pop
add
mov
xchg
ret
xchg
movb
add
add
add
add
rolb
mov
and
push
mov
xchg
ret
daa
add
add
mov
push
mov
nop
leave
jmp
add
mov
clc
repnz
nop
cld
jae
daa
add
movl
ret
add
in
nop
leave
jmp
roll
add
mov
push
mov
nop
leave
jmp
add
add
xchg
xlat
stc
mov
clc
repnz
nop
cld
jae
loope
out
nop
push
mov
xchg
ret
pop
mov
add
add
mov
add
pusha
push
mov
nop
leave
jmp
test
pusha
mov
jae
and
push
mov
xchg
ret
jbe
nop
movl
add
repnz
nop
cld
jae
bound
add
lods
add
push
mov
nop
leave
jmp
add
add
in
test
mov
add
add
clc
repnz
nop
cld
jae
mov
es
add
and
push
mov
xchg
ret
add
ret
pop
add
lods
clc
repnz
nop
cld
jae
add
add
adc
add
clc
repnz
nop
cld
jae
movl
dec
mov
clc
repnz
nop
cld
jae
insl
add
xchg
test
das
add
push
mov
nop
leave
jmp
add
add
movzwl
jmp
call
add
add
jno
iret
jmp
add
ja
add
add
daa
add
add
in
call
mov
nop
leave
jmp
adc
xchg
add
add
pop
clc
repnz
nop
cld
jae
jbe
xchg
add
add
or
mov
nop
leave
jmp
add
inc
movl
test
add
xchg
clc
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
add
fiadds
xchg
add
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
push
mov
xchg
ret
add
add
add
xlat
mov
mov
pop
push
mov
xchg
ret
insl
nop
add
or
add
pop
sub
mov
nop
leave
jmp
and
and
add
and
mov
cmp
into
cmc
inc
add
add
insl
mov
dec
mov
push
mov
nop
leave
jmp
insl
add
add
pusha
add
fbstp
rclb
jecxz
add
rol
add
add
mov
nop
nop
cld
jae
pop
add
add
mov
loopne
mov
sub
xor
add
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
push
pop
mov
andl
inc
add
bound
add
add
out
add
push
mov
xchg
ret
add
mov
or
push
mov
nop
leave
jmp
add
add
add
out
sbb
cld
jae
add
or
jno
xor
clc
repnz
nop
cld
jae
add
add
or
mov
xchg
ret
test
add
pop
inc
add
pop
insb
push
clc
repnz
nop
cld
jae
fadds
ret
daa
sahf
in
add
in
int3
inc
add
add
pop
gs
scas
add
push
mov
xchg
ret
nop
add
inc
mov
add
push
mov
xchg
ret
mov
adc
add
add
clc
xchg
add
pop
add
inc
add
jne
clc
repnz
nop
cld
jae
add
sbb
add
add
clc
repnz
nop
cld
jae
add
mov
jo
mov
nop
cld
jae
mov
add
add
add
repnz
nop
cld
jae
add
shll
daa
in
addb
mov
xabort
nop
nop
cld
jae
mov
loope
xchg
cmp
mov
xchg
ret
mov
add
add
mov
clc
repnz
nop
cld
jae
add
test
mov
pushl
clc
repnz
nop
cld
jae
add
insl
or
add
add
clc
repnz
nop
cld
jae
in
add
add
out
push
pushf
mov
push
mov
xchg
ret
add
add
xchg
add
nop
leave
jmp
add
fadds
add
mov
push
mov
xchg
ret
es
or
loope
xchg
or
mov
add
repnz
nop
cld
jae
and
or
sahf
add
push
mov
xchg
ret
jno
add
and
xchg
add
call
clc
repnz
nop
cld
jae
add
add
mov
add
repnz
nop
cld
jae
jmp
jo
pop
cmpl
push
mov
nop
leave
jmp
xchg
jno
xchg
add
mov
popa
push
mov
nop
leave
jmp
push
add
add
add
pop
clc
repnz
nop
cld
jae
add
add
stos
add
into
inc
add
add
add
out
movsb
and
mov
stc
call
in
nop
leave
jmp
add
jo
adc
mov
nop
cld
jae
add
add
je
clc
repnz
nop
cld
jae
add
cmp
clc
repnz
nop
cld
jae
xchg
ja
gs
jl
push
mov
nop
leave
jmp
add
mov
add
xor
push
mov
xchg
ret
nop
bound
jmp
push
mov
test
add
out
add
add
add
and
mov
ror
clc
repnz
nop
cld
jae
add
into
add
pusha
mov
mov
clc
repnz
nop
cld
jae
add
loope
add
mov
inc
add
add
daa
add
add
and
nop
nop
cld
jae
add
ret
mov
add
clc
repnz
nop
cld
jae
add
add
daa
add
test
out
clc
repnz
nop
cld
jae
gs
add
push
mov
xchg
ret
add
add
jne
mov
clc
repnz
nop
cld
jae
pusha
stos
mov
stc
pop
push
mov
xchg
ret
xchg
add
cmpsb
movl
push
mov
nop
leave
jmp
ret
adc
insl
jge
mov
clc
repnz
nop
cld
jae
jbe
jbe
or
mov
nop
leave
jmp
add
push
add
add
add
clc
repnz
nop
cld
jae
fcoms
into
adc
clc
repnz
nop
cld
jae
adc
pop
cmp
push
mov
nop
leave
jmp
and
nop
daa
add
pop
add
je
clc
repnz
nop
cld
jae
cmpsb
pop
bound
mov
aad
inc
add
add
stos
and
pusha
jo
xchg
les
clc
repnz
nop
cld
jae
insl
add
shl
push
mov
nop
leave
jmp
and
xchg
add
push
push
mov
nop
leave
jmp
mov
notb
insl
pop
mov
clc
repnz
nop
cld
jae
mov
and
push
mov
xchg
ret
pop
mov
testb
add
add
mov
nop
leave
jmp
pop
insl
add
add
or
repnz
nop
cld
jae
add
add
daa
pop
hlt
dec
decl
clc
repnz
nop
cld
jae
add
add
shll
clc
repnz
nop
cld
jae
add
xchg
divb
mov
clc
repnz
nop
cld
jae
movb
add
rcll
mov
add
clc
repnz
nop
cld
jae
stos
add
add
jecxz
lods
pop
push
mov
nop
leave
jmp
add
add
add
mov
mov
push
mov
nop
leave
jmp
negb
add
daa
xchg
arpl
push
mov
xchg
ret
mov
add
into
daa
add
test
clc
repnz
nop
cld
jae
faddp
add
add
add
push
mov
nop
leave
jmp
add
gs
add
add
push
mov
xchg
ret
add
daa
add
sub
clc
repnz
nop
cld
jae
mov
jo
push
aaa
nop
cld
jae
add
add
insl
add
add
in
nop
leave
jmp
add
add
imulb
call
push
mov
nop
leave
jmp
add
bound
xchg
sqrtps
push
faddl
xchg
ret
jo
jmp
repnz
push
mov
nop
leave
jmp
or
cmpsb
cmc
sub
mov
nop
leave
jmp
fimuls
add
push
out
add
push
mov
nop
leave
jmp
test
daa
and
cltd
cmp
push
mov
nop
leave
jmp
add
ss
repnz
nop
cld
jae
add
add
fs
mov
xchg
ret
add
cmpsb
fcoms
repnz
nop
cld
jae
and
sahf
bound
addb
adc
mov
hlt
lcall
nop
cld
jae
pop
and
xchg
add
mov
push
mov
nop
leave
jmp
mov
test
movl
out
inc
add
add
add
not
clc
repnz
nop
cld
jae
test
add
sbb
push
mov
nop
leave
jmp
testb
daa
add
fs
insb
clc
repnz
nop
cld
jae
add
dec
cmp
repnz
nop
cld
jae
pop
fadds
add
dec
push
push
mov
nop
leave
jmp
xchg
add
add
jno
mov
push
mov
xchg
ret
dec
and
jmp
mov
clc
repnz
nop
cld
jae
mov
bound
ret
mov
loope
add
add
add
arpl
jmp
nop
cld
jae
add
insl
add
insl
push
add
push
mov
nop
leave
jmp
mov
add
bound
mov
repnz
nop
cld
jae
add
test
add
cs
clc
repnz
nop
cld
jae
mov
pop
push
mov
xchg
ret
add
add
pop
lock
mov
push
mov
xchg
ret
add
add
mov
movl
clc
repnz
nop
cld
jae
add
loope
add
notb
mov
jae
repnz
nop
cld
jae
add
cmpsb
add
shr
clc
repnz
nop
cld
jae
add
mov
add
repnz
nop
cld
jae
insl
insl
insl
notb
clc
repnz
nop
cld
jae
daa
add
bound
leave
lea
clc
repnz
nop
cld
jae
add
jbe
mov
add
xor
add
clc
repnz
nop
cld
jae
mul
cmpsl
xchg
cmpsb
add
mov
cmp
push
mov
xchg
ret
roll
add
jbe
xchg
addr16
notrack
push
mov
xchg
ret
inc
mov
add
mov
sbb
repnz
nop
cld
jae
and
jge
inc
pop
add
clc
repnz
nop
cld
jae
pusha
add
mov
nop
cld
jae
add
mov
insl
dec
add
mov
clc
repnz
nop
cld
jae
add
add
ret
push
mov
xchg
ret
add
add
pop
pusha
insl
add
pushf
push
push
mov
xchg
ret
ret
add
into
loope
stos
test
push
mov
nop
leave
jmp
adc
in
subl
clc
repnz
nop
cld
jae
add
mov
inc
negb
clc
repnz
nop
cld
jae
nop
add
add
mov
nop
cld
jae
add
add
jo
mov
repnz
nop
cld
jae
and
jo
ss
repnz
nop
cld
jae
test
notb
sbb
ret
push
mov
xchg
ret
add
mov
insl
fcoml
mov
nop
leave
jmp
nop
add
testb
add
jno
push
mov
jl
sub
mov
lods
sarl
sbb
jp
push
mov
nop
leave
jmp
add
testb
cmpsb
add
push
pop
mov
push
mov
nop
leave
jmp
ror
xchg
imul
cld
jae
add
and
add
add
add
repnz
nop
cld
jae
adc
add
push
mov
xchg
ret
add
jmp
into
xor
push
mov
nop
leave
jmp
add
faddp
add
add
fildl
mov
nop
leave
jmp
test
add
loope
mov
mov
push
push
mov
nop
leave
jmp
add
fcoms
push
out
pop
clc
repnz
nop
cld
jae
add
bound
and
clc
repnz
nop
cld
jae
add
add
add
lret
in
add
pop
add
mov
xor
add
pop
dec
cmpl
push
mov
nop
leave
jmp
jno
inc
push
or
push
mov
xchg
ret
add
add
sub
clc
repnz
nop
cld
jae
add
jmp
je
clc
repnz
nop
cld
jae
mov
xchg
ret
std
add
push
mov
nop
leave
jmp
add
loope
stos
add
add
mov
call
clc
repnz
nop
cld
jae
add
mulb
imul
mov
cmp
ret
add
add
repz
jne
clc
repnz
nop
cld
jae
add
testb
inc
and
clc
repnz
nop
cld
jae
add
mov
mov
add
and
clc
repnz
nop
cld
jae
insl
add
pop
pop
push
push
mov
xchg
ret
inc
add
and
mov
shr
mov
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
mov
jbe
pop
add
test
test
sbb
cmp
in
nop
leave
jmp
into
or
decb
js
lret
clc
repnz
nop
cld
jae
gs
movb
add
jbe
shll
idiv
clc
repnz
nop
cld
jae
jbe
nop
fcmovb
clc
repnz
nop
cld
jae
dec
in
insl
mov
pop
clc
repnz
nop
cld
jae
or
sahf
add
push
mov
nop
leave
jmp
add
ja
add
into
cmpsb
add
dec
push
mov
nop
leave
jmp
add
xchg
add
add
pop
xor
clc
repnz
nop
cld
jae
pusha
add
data16
push
clc
repnz
nop
cld
jae
add
add
add
xchg
fisttps
nop
cld
jae
add
loope
jbe
adc
decl
and
inc
add
add
ret
and
mov
mov
mov
clc
repnz
nop
cld
jae
add
adc
cwtl
xor
push
mov
xchg
ret
push
add
bound
pop
add
repz
mov
nop
leave
jmp
pusha
roll
push
add
add
or
movsb
push
mov
xchg
ret
ja
add
insl
add
add
jne
je
repnz
nop
cld
jae
divb
add
les
add
clc
repnz
nop
cld
jae
fdivrs
subl
repnz
nop
cld
jae
add
mov
nop
add
sar
and
clc
repnz
nop
cld
jae
add
jge
clc
repnz
nop
cld
jae
mov
add
add
jmp
adc
repnz
nop
cld
jae
add
insl
dec
insl
add
call
clc
repnz
nop
cld
jae
jbe
test
mov
nop
cld
jae
and
add
sbb
repnz
nop
cld
jae
mov
add
mov
lcall
add
add
or
push
and
insl
add
paddb
repnz
nop
cld
jae
negb
add
aad
scas
mov
clc
repnz
nop
cld
jae
fdiv
xchg
add
loope
add
mov
clc
repnz
nop
cld
jae
add
add
iret
clc
repnz
nop
cld
jae
pop
mov
add
clc
repnz
nop
cld
jae
add
add
out
xchg
call
rolb
xchg
ret
mov
bound
mov
nop
leave
jmp
and
add
add
add
push
nop
cld
jae
insl
imulb
mov
add
xor
clc
repnz
nop
cld
jae
add
pusha
cwtl
mov
push
mov
nop
leave
jmp
add
add
add
mov
mov
clc
repnz
nop
cld
jae
add
scas
sub
clc
repnz
nop
cld
jae
add
cmpsb
or
push
mov
xchg
ret
add
add
add
xchg
add
mov
add
and
ss
clc
repnz
nop
cld
jae
and
mov
mov
clc
repnz
nop
cld
jae
add
push
addb
cld
ret
add
notb
add
add
testb
loope
movb
gs
mov
add
repnz
nop
cld
jae
jbe
add
add
push
clc
repnz
nop
cld
jae
add
cmp
nop
cld
jae
add
mov
push
out
jmp
clc
repnz
nop
cld
jae
mov
xchg
bound
mov
and
lret
add
mov
add
test
test
movsb
clc
repnz
nop
cld
jae
or
test
add
inc
in
and
clc
repnz
nop
cld
jae
add
add
dec
cmp
mov
xchg
ret
fiadds
add
mov
add
rclb
insb
jmp
and
gs
add
ret
clc
repnz
nop
cld
jae
mov
add
jmp
mov
xchg
ret
nop
add
add
add
mov
dec
mov
push
mov
xchg
ret
add
test
xchg
add
into
clc
repnz
nop
cld
jae
add
mov
mov
mov
xchg
ret
add
pop
test
add
add
clc
repnz
nop
cld
jae
ja
daa
jo
add
mov
push
mov
nop
leave
jmp
jg
nop
add
dec
test
push
mov
xchg
ret
add
mulb
and
pop
push
mov
nop
leave
jmp
add
add
add
jbe
int3
add
clc
repnz
nop
cld
jae
add
add
insl
add
push
shl
push
mov
nop
leave
jmp
add
add
pop
add
sbb
lcall
nop
cld
jae
add
cmp
sar
repnz
nop
cld
jae
insl
add
add
inc
clc
repnz
nop
cld
jae
bound
add
add
scas
mov
clc
repnz
nop
cld
jae
stos
add
adc
loope
push
mov
movsl
leave
filds
add
cmp
shlb
mov
jecxz
inc
jecxz,pn
lea
adc
adc
mov
adc
and
mov
adc
mov
mov
add
adc
push
dec
aam
and
add
push
add
jle
and
mov
cs
hlt
push
fldenv
mov
add
neg
mov
adc
xor
push
cmpsl
dec
or
mov
cmp
roll
mov
add
mov
test
cmp
out
mov
add
add
mov
lods
push
or
pop
ljmp
pop
dec
pop
subl
mov
mov
les
mov
inc
pop
push
test
dec
mov
cmp
inc
add
sub
mov
add
cmp
fsubs
lret
repnz
push
pop
decb
arpl
cli
adc
mov
daa
ret
or
and
xor
adc
adc
mov
push
inc
imul
xchg
loope
bound
mov
adcl
mov
add
shr
aam
jp
push
leave
out
cmp
mov
mov
add
int3
addb
jmp
lret
mov
mov
xchg
rolb
int
adc
mov
mov
mov
jns
add
pop
fiaddl
mov
add
das
out
repz
push
mov
movsb
arpl
pop
mov
add
ds
lea
jl
mov
mov
cmpsl
cmp
mov
adcl
mov
push
out
or
bound
mov
sub
push
fstl
mov
mov
xchg
push
repnz
cmpsb
out
inc
outsb
shl
lods
add
mov
add
jmp
stos
lds
test
sbb
mov
add
mov
add
add
test
in
adc
mov
mov
add
outsl
je
or
les
in
mov
mov
cvtdq2ps
out
cwtl
xor
xor
adc
out
gs
mov
add
mov
mov
ret
cmpsb
mov
add
push
lea
inc
inc
fsubr
adc
mov
sub
add
inc
aad
cmp
jle
fdivrs
push
rolb
mov
or
faddl
mov
test
dec
scas
mov
pop
rolb
in
add
mov
mov
add
inc
nop
add
jo
mov
fldt
mov
mov
add
mov
iret
test
in
dec
movsb
pop
jmp
sahf
mov
lcall
jg
adc
mov
mov
lea
hlt
dec
push
cwtl
movsl
outsl
das
xchg
mov
cmp
or
pop
repnz
cmp
add
loope
lea
add
fdivl
adc
or
add
arpl
adc
out
sbb
inc
outsl
pop
sub
mov
xor
mov
mov
jmp
hlt
movsb
sub
mov
push
push
lods
pop
pusha
add
adc
movsb
in
xchg
pop
rolb
mov
sub
inc
push
jno
cwtl
mov
std
popf
xchg
pop
push
mov
and
add
adc
mov
enter
mov
push
lds
aas
fucompp
xor
repz
outsl
jmp
add
outsb
scas
jmp
ljmp
add
push
add
mov
jae
pop
subl
mov
andl
xchg
add
cmpl
xchg
hlt
adc
into
fcoms
push
add
aaa
dec
es
jne
addb
xchg
xchg
mov
loope
test
in
clc
imulb
sub
rolb
mov
and
mov
fdivl
mov
pop
inc
add
mov
sub
icebp
arpl
sbb
mov
sbb
and
pop
bound
mov
dec
xor
cmp
mov
fidivrs
or
mov
inc
lods
mov
lret
mov
fbld
rolb
mov
and
and
xor
lret
xchg
inc
enter
mov
pop
xchg
push
insb
jae
cli
shrl
dec
mov
mov
mov
cmpsl
aam
sbb
arpl
cmpsb
or
and
mov
sbb
movsl
js
sbb
add
addb
jnp
js
xor
orl
xchg
add
add
addr16
ds
xor
lret
in
out
dec
call
inc
xchg
fucomi
cld
and
mov
jg,pn
mov
ljmp
mov
sbb
mov
jge
fiadds
add
inc
ljmp
sbb
mov
shrl
in
cmp
lcall
aas
or
add
sbb
sbb
cmp
push
add
cmc
and
test
cmc
mov
dec
pop
dec
loope
dec
xor
cs
lds
pop
cmp
mov
mov
mov
iret
jge
cmp
dec
xor
mov
sbb
test
in
push
loopne
mov
mov
js
dec
lret
add
lock
in
fldt
mov
scas
push
rol
add
int
int
add
icebp
addb
test
aam
out
repz
mov
lock
and
mov
cli
lods
or
push
stos
lock
out
push
pop
or
aas
into
sub
cmpsl
push
cmpsb
nop
add
enter
mov
jecxz
pop
xchg
ret
xchg
mov
cmpsl
lcall
mov
pushf
xchg
loope
in
aas
cs
mov
add
fwait
aam
jl
mov
pushaw
add
adc
ja
xor
xchg
aaa
je
push
add
lods
push
sub
cmpsb
rolb
mov
mov
adc
imul
mov
xor
mov
add
cli
jno
add
mov
mov
xor
shll
add
cmp
sub
add
mov
push
iret
sbb
pop
jecxz
add
add
push
lret
fcomi
add
mov
rorl
lret
push
push
dec
inc
adc
ret
sub
lcall
xchg
or
ljmp
call
xor
mov
mov
jns
inc
xorl
test
fsub
add
add
add
add
mov
mov
add
mov
add
lahf
or
les
into
and
mov
xchg
pop
mov
cld
sbb
or
add
jp
mov
jo
mov
pinsrw
push
addb
movsb
jno
sub
rolb
mov
cli
fbstp
out
subl
push
pushf
aaa
mov
sub
int
addb
mov
mov
pop
fnstcw
mov
in
and
add
fsubs
adc
jmp
mov
add
inc
dec
sbb
mov
add
or
add
add
hlt
shrl
xor
mov
push
mov
adc
mov
iret
push
mov
add
push
movsl
aaa
jle
add
xor
mov
pop
addr16
mov
out
int
filds
mov
test
mov
dec
push
add
es
push
test
jecxz
add
notl
mov
rolb
mov
outsb
jae
sbbl
fdivrl
fisubl
rolb
xlat
jo
mov
add
mov
cmpsl
sti
int
add
xchg
add
fildl
mov
pusha
add
ret
and
jge
pop
sahf
jg
add
ret
add
mov
jmp
scas
add
add
add
inc
add
add
stc
aaa
call
mov
test
pop
ficoml
add
subl
sbb
cs
xor
add
jb
mov
mov
mov
mov
mov
sar
loope
push
lods
mov
sub
rcrl
mov
popa
icebp
adc
scas
mov
nop
add
adc
mov
cld
xor
stc
into
add
test
add
mov
icebp
inc
or
dec
ret
rolb
mov
lret
aad
mov
xor
mov
cs
jb
mov
or
inc
cmp
add
sbb
and
lods
mov
add
adc
aad
pop
jmp
ss
cmc
add
mov
jp
mov
inc
push
aaa
fwait
sti
rolb
dec
leave
sub
dec
add
mov
add
adc
inc
inc
retw
into
xchg
lahf
out
and
rcll
pop
mov
fsubs
xchg
add
jae
xchg
jg
adc
mov
mov
rcrl
cmc
dec
mov
mov
pop
arpl
add
sub
add
mov
sbb
adc
mov
mov
or
add
mov
or
xchg
dec
ffreep
jne
call
je
push
add
outsb
test
repnz
mov
aad
jns
bound
mov
add
mov
add
out
mov
rcll
addb
adc
mov
add
mov
dec
shll
mov
out
dec
addb
fdivl
mov
inc
pop
fwait
cs
sub
push
add
mov
movsb
loope
jno
insb
mov
or
stc
push
sarl
push
xchg
add
add
mov
sub
sbb
mov
mov
pop
sub
xchg
fcompl
mov
push
mov
cld
push
dec
mov
fwait
mov
sbb
or
adc
add
aad
incl
add
into
ja
pop
pusha
add
inc
mov
jo
mov
add
loop
mov
pop
rcll
jno
jmp
addb
lret
mov
rep
insl
addb
lds
mov
addb
test
adc
mov
mov
insb
pushf
or
or
iret
mov
out
inc
jo
mov
add
add
call
add
jecxz
lcall
cltd
cli
les
mov
inc
sti
outsb
sub
scas
fwait
and
mov
xchg
cmp
cwtl
roll
mov
push
fstl
mov
stc
adc
mov
lods
push
mov
or
pop
pop
movsl
scas
sbb
jg
cmp
cld
push
xor
mov
jb
mov
andl
push
add
add
lea
fidivs
inc
out
cmpsl
leave
addr16
add
and
mov
rorl
mov
mov
add
gs
jns
lahf
cld
mov
xchg
out
cmpsb
addl
in
jge
ljmp
scas
ss
mov
es
test
sbb
ficompl
cmove
mov
mov
xorl
jae
stos
push
aad
adc
mov
sbb
arpl
xchg
fadds
adc
mov
add
sbbl
popa
jge
rcrl
pop
arpl
add
pop
cmpl
ja
add
cmp
out
add
loop
mov
mov
inc
cld
adc
push
sub
sub
lret
outsl
rolb
mov
xlat
daa
add
fwait
add
mov
sti
add
pop
bound
mov
add
dec
roll
mov
mov
mov
sub
cli
sbb
ja
xor
movsl
mov
lock
fdivs
push
fld1
sbb
mov
jecxz
add
aad
mov
bound
mov
cmp
mov
in
leave
mov
mov
and
add
add
outsl
xchg
pop
fsubs
leave
rol
lret
test
sbb
add
in
mov
add
pop
rcll
mov
mov
lock
fs
cwtl
push
aam
push
cltd
rcrl
test
movsl
out
addr16
pop
nop
add
mov
fcmovnb
sub
jnp
add
add
dec
and
push
outsb
inc
mov
mov
lock
xchg
lods
cmpl
fistps
mov
mov
sbb
imul
mov
out
lcall
jns
jne
mov
mov
rorl
add
in
mov
add
fldenv
sbb
sub
aam
xor
add
xor
push
popf
inc
add
xor
stos
push
ja
ljmp
jnp
add
es
jl
xor
addb
xchg
jnp
fmuls
push
add
xor
test
add
sub
leave
loopne
mov
insl
jl
adc
lret
add
mov
xor
incb
push
dec
inc
fs
leave
bound
mov
add
rolb
mov
xchg
fwait
lret
xor
mov
inc
shll
add
mov
jmp
outsb
aad
sub
fstl
sbb
mov
pop
jne
rolb
jbe
add
jb
mov
push
rcl
mov
out
insl
dec
sbb
add
add
das
pop
movsb
lods
ret
js
add
or
jl
daa
loope
add
xchg
inc
mov
sbb
js
jae
xchg
xor
jne
add
sti
cmp
push
push
xor
mov
das
pop
scas
pusha
add
sub
shll
mov
sub
add
lods
push
les
negl
jp
mov
test
hlt
add
add
pop
add
pop
sub
lods
dec
ss
mov
mov
rolb
mov
add
xor
mov
jge
scas
popa
or
mov
sbb
cmp
adc
loopne
mov
jnp
loop
mov
mov
aas
fsubl
xchg
jae
ficoml
mov
inc
insb
adc
fidivs
stc
push
popf
not
jne
mov
xchg
sbb
inc
xor
nop
add
add
and
pop
movsb
or
fcompl
gs
test
mov
into
dec
cwtl
sbb
rolb
mov
and
push
add
mov
es
sub
loopne
mov
popa
push
jb
mov
pop
je
add
pop
fdivs
fs
and
ss
add
inc
add
add
mov
lds
mov
in
lods
xor
add
out
mov
aad
aaa
idivb
push
in
add
add
add
mov
pop
lods
ja
pop
jl
loopne
mov
and
and
add
mov
add
add
inc
je
iret
call
add
mov
mov
lahf
mov
popf
or
ret
test
enter
add
push
insl
cld
mov
mov
add
adc
mov
sub
xchg
mov
in
add
in
bound
mov
lret
fld
test
fwait
aas
add
mov
dec
addb
shr
sub
scas
sub
mov
mov
stos
adc
add
addb
jno
je
jle
stc
imul
enter
lock
scas
mov
mov
sbb
aas
decl
adc
mov
add
jno
adc
imul
dec
push
arpl
dec
and
sbb
inc
add
out
mov
lret
popa
out
add
add
lret
mov
mov
mov
add
adc
out
cli
leave
mov
pop
xor
mov
xchg
inc
add
rol
pop
jmp
inc
lret
mov
mov
add
push
or
mov
mov
xchg
sub
rcrl
cmpsb
add
mov
in
push
fs
nop
add
push
sub
add
mov
imul
dec
hlt
addb
fnstsw
jg
out
lock
add
mov
pop
loope
cmp
jg
add
mov
add
or
mov
imul
rolb
push
stos
mov
or
mov
hlt
movsl
cmc
test
enter
mov
add
jo
mov
sbb
loop
mov
movsb
xchg
data16
mov
dec
push
or
jg
les
mov
mov
sbb
add
push
add
les
add
lods
ja
push
pop
icebp
inc
add
mov
push
fnstenv
mov
xchg
add
add
popf
sahf
push
add
lods
lcall
jl
lret
push
push
mov
xor
mov
mov
xor
mov
push
adc
out
add
pop
scas
icebp
lds
add
mov
jecxz
and
add
fildll
in
dec
imul
add
lahf
add
mov
cmp
mov
or
mov
leave
imul
add
in
and
jnp
add
mov
hlt
jecxz
jno
jbe
push
rolb
adc
daa
or
cmp
addb
mov
push
add
pop
lahf
inc
add
cld
ljmp
pop
repnz
into
push
add
dec
icebp
jns
pushf
outsb
lahf
push
jmp
mov
ficoms
jecxz
add
rolb
mov
mov
sbb
dec
pop
and
cwtl
aas
sbb
mov
outsl
jnp
add
out
ljmp
jp
setns
or
sahf
push
mov
leave
in
out
add
adc
mov
add
dec
fwait
sbbl
add
mov
outsl
mov
dec
or
leave
add
pop
das
insl
pop
lock
inc
add
pop
xchg
jns
cmp
add
imul
mov
loop
mov
dec
out
sub
sbb
adc
out
data16
pop
out
ss
add
sahf
mov
lret
pop
inc
jae
outsl
in
das
ds
push
scas
stos
jns
jmp
clc
sbb
or
es
pop
orl
sub
or
cmp
push
add
jg
sbb
imul
push
mov
add
push
xchg
pop
push
or
add
add
insl
jp
add
mov
hlt
fsubrs
mov
mov
and
movsb
push
add
and
mov
add
add
aad
pushf
jno
jge
cmp
inc
mov
push
cli
int
aad
cmp
xor
mov
stos
ds
push
stos
xchg
ja
lea
push
add
rolb
mov
dec
leave
sbb
rolb
mov
add
add
mov
dec
cmpsb
inc
leave
scas
nop
add
int3
pop
mov
mov
pop
pushl
mov
lock
mov
push
lcall
mov
shll
push
daa
in
sub
mov
sub
add
mov
cmp
mov
add
outsb
ja
xchg
cld
push
int3
fdivrl
jb
mov
stos
scas
inc
dec
scas
adc
or
mov
in
pop
bound
mov
add
loop
mov
fbld
add
int
pop
stos
nop
add
insl
push
add
imul
mov
mov
rcll
push
nop
add
add
push
out
adc
mov
mov
jnp
sbb
imul
pop
mov
mov
mov
popf
ficomps
sti
xchg
or
jg
add
xchg
push
lds
add
xchg
push
add
push
xchg
ljmp
xor
mov
pextrw
imul
imul
xchg
add
mov
push
cmc
jmp
in
lods
test
lcall
cltd
jmp
mov
add
jl
aad
lahf
rol
sti
outsb
adc
push
dec
fcmovbe
add
mov
inc
mov
mov
fldcw
mov
je
adc
xchg
sti
mov
decl
mov
mov
mov
fwait
inc
xor
imul
add
mov
insl
ret
roll
add
test
lock
mov
mov
pop
cmc
lcall
arpl
addb
pop
mov
and
xchg
bound
mov
push
test
insb
adc
mov
xchg
enter
das
pushf
xlat
ljmp
jmp
mov
cmp
add
jbe
jl
add
pusha
add
xchg
dec
sub
pop
lock
fiadds
mov
mov
leave
rolb
mov
add
jne
push
add
aas
popl
cltd
inc
mov
mov
mov
add
mov
push
cmpsl
dec
or
insb
in
xlat
repz
test
add
sub
repnz
jbe
add
pop
jle
xor
mov
mov
in
pop
add
mov
out
decl
popf
clc
leave
xchg
jmp
pop
mov
sti
xor
cmp
cmp
rol
add
lods
jg
ja
adc
mov
mov
mov
dec
adc
add
rolb
mov
rolb
mov
add
mov
mov
push
lods
sbb
popa
jl
pop
fimuls
fwait
nop
add
and
mov
test
cmp
popa
daa
fnstsw
adc
movsb
test
mov
inc
jo
mov
mov
cmc
or
adc
jmp
add
cmpsl
fisttpl
sti
leave
notb
add
es
and
mov
xchg
dec
or
in
adc
mov
jne
pop
jp
adc
mov
dec
jo
mov
sub
shrl
xchg
mov
cmp
inc
mov
pop
mov
add
push
add
mov
jge
popl
arpl
addb
adc
sbb
dec
lahf
sbb
mov
sub
int3
lods
in
add
sbb
mov
cmp
pop
loopne
mov
lret
ret
and
fcoml
sti
hlt
sub
push
or
mov
pop
lcall
add
mov
call
and
scas
pusha
add
stos
sahf
cmpsl
in
clc
outsl
aas
adc
xchg
xchg
in
mov
js
add
ja
lret
xor
mov
add
mov
mov
jmp
ds
push
jbe
data16
test
add
dec
bswap
mov
jl
sub
add
mov
sahf
jo
mov
addb
mov
mov
dec
add
push
add
mov
push
mov
and
mov
je
and
dec
xchg
lea
out
or
inc
addb
dec
mov
mov
mov
cmp
add
mov
add
lock
nop
add
rcrl
mov
loop
mov
mov
add
sub
cwtl
fnstsw
mov
out
add
mov
add
jmp
roll
stos
push
sub
add
add
inc
add
add
add
mov
mov
pop
adc
mov
mov
insl
les
mov
dec
sbb
or
add
fcmovnb
mov
mov
call
mov
sub
jg
add
mov
mov
add
push
add
and
adc
mov
mov
in
and
mov
dec
movsl
push
sub
es
imul
jns
add
pushf
clc
add
mov
and
mov
mov
sbb
xlat
pop
or
loope
add
cmc
cmp
adc
add
mov
mov
in
out
mov
mov
mov
mov
dec
repnz
popf
or
mov
adc
mov
mov
add
dec
es
fisttpl
ret
in
cmp
in
and
mov
xchg
xor
pop
data16
fidivrl
mov
fiadds
add
cmpl
mov
add
push
add
add
mov
or
add
add
sahf
jo
mov
jle
lods
rolb
mov
std
push
ja
add
cmpsb
les
add
les
mov
xchg
push
mov
or
sub
ljmp
test
inc
je
sbb
shll
inc
pop
dec
icebp
out
dec
test
push
cwtl
jge
dec
rcrl
test
pop
aad
inc
add
add
mov
add
scas
imul
add
outsb
outsb
mov
in
add
xchg
je
in
fdivrl
arpl
sub
test
mov
aas
dec
scas
push
imul
mov
cmp
add
mov
add
push
rcll
into
lret
and
mov
ds
jne
add
mov
test
mov
mov
add
sub
and
mov
add
mov
mov
dec
xor
mov
imull
mov
xchg
add
add
sub
jb
mov
add
in
mov
jp
mov
add
add
and
jb
mov
lods
pop
push
adc
xchg
popf
push
add
adc
cmp
dec
dec
sti
mov
and
add
sbb
pop
push
mov
aas
mov
xlat
pop
insb
scas
aas
push
pop
xchg
loope
pop
hlt
aaa
mov
addb
push
xchg
lret
loope
movsl
adc
mov
dec
imul
cli
sub
movsl
gs
inc
mov
mov
loopw
mov
jo
mov
mov
mov
mov
push
je
mov
pop
mov
mov
aaa
mov
pop
je
aam
lds
sub
jb
mov
mov
xchg
adc
add
mov
xchg
jmp
jecxz
ja
loope
mov
jmp
dec
inc
aam
and
mov
or
xchg
xchg
add
add
jl
mov
pop
das
push
insb
out
cmp
or
mov
loop
mov
or
inc
mov
sub
xor
mov
or
mov
cmp
fnstcw
bound
mov
inc
cmc
cmp
out
jle
mov
pushf
adc
sub
push
cmp
or
mov
mov
cs
xorl
add
pop
arpl
dec
adc
neg
mov
add
call
push
int3
mov
dec
inc
push
xchg
push
add
jle
dec
call
sbb
ss
and
mov
jns
add
push
sbb
sub
nop
add
lcall
mov
fsubrp
data16
fiadds
push
stos
int3
in
mov
lods
popa
and
mov
mov
jae
mov
adc
add
jns
add
jge
jmp
leave
xor
mov
xor
mov
mov
pop
pop
in
cltd
fnsave
adc
mov
jp
jecxz
cwtl
cld
loop
mov
enter
dec
sub
enter
dec
pop
fstpt
clc
aad
test
add
mov
and
mov
jp
xchg
adc
mov
push
push
dec
rolb
mov
jnp
test
add
and
lahf
mov
and
add
popa
xchg
add
push
add
imul
les
add
push
cs
add
pop
inc
lret
push
mov
mov
add
and
push
add
mov
dec
jmp
insl
pusha
add
stc
inc
xchg
rcll
movb
cmpsl
mov
add
add
jne
lahf
xchg
xlat
lds
cli
iret
and
mov
xchg
fidivs
mov
int
movsb
aaa
and
lock
inc
add
inc
xchg
scas
add
adc
popf
jl
add
mov
mov
and
jle
jmp
mov
out
mov
rorl
jns
idivl
add
xchg
sub
cmp
outsl
push
push
pop
mov
imul
int
lods
test
pushf
lcall
xor
mov
popf
mov
lods
sub
add
mov
push
add
xor
mov
movsb
mov
add
adc
mov
pop
pop
popf
mov
test
lcall
pop
shll
lock
addb
nop
add
roll
lock
mov
cmp
add
insb
icebp
add
mov
add
add
and
and
add
repz
outsb
loope
xchg
mov
mov
mov
xchg
cli
mov
mov
or
push
cmp
clc
and
mov
adc
mov
push
cmp
xchg
nop
add
rolb
mov
mov
jge
add
into
ja
fistpll
roll
cs
inc
add
or
pop
mov
ljmp
ret
dec
test
dec
pop
inc
gs
cwtl
js
cmp
add
inc
jnp
add
xchg
cld
and
add
aas
js
jl
arpl
ss
add
test
xchg
adc
movsl
popf
xchg
mov
add
xor
mov
mov
in
mov
mov
xchg
addb
push
mov
fidivrl
add
pop
cmp
inc
and
mov
push
mov
les
add
fwait
push
test
out
add
popf
cld
add
add
inc
add
pop
inc
sub
mov
testl
dec
xchg
mov
mov
dec
and
cltd
fsts
mov
mov
cmp
fsubrs
adc
mov
add
nop
add
add
mov
cs
subl
pop
xor
mov
mov
xor
mov
add
jo
mov
add
mov
mov
imul
or
pop
addr16
fsub
repnz
mov
mov
arpl
jg
movsl
xor
mov
mov
mov
xchg
jae
add
adc
and
mov
xchg
stos
lahf
cs
adc
mov
cmp
mov
push
mov
aam
lds
jae
ss
shll
lcall
sub
ljmp
jbe
add
sbb
mov
add
insl
stos
and
mov
add
addb
bound
mov
cltd
push
jno
jns
movsl
pop
lods
bound
mov
jae
or
add
fldl2e
in
movsb
outsb
loop
mov
sbb
cltd
cmpl
add
dec
loopne
mov
cltd
dec
loopne
mov
pop
cli
sbb
das
inc
add
push
lods
in
pop
and
mov
add
rolb
mov
pop
jl
add
xor
xchg
mov
jle
loope
imul
mov
mov
aas
xchg
add
mov
dec
inc
ret
rolb
or
out
sbb
push
sahf
sahf
push
repz
add
or
movsb
and
mov
lret
outsl
lahf
lahf
rolb
mov
adc
mov
sbb
int3
mov
mov
mov
pop
lock
and
in
mov
leave
out
iret
mov
addb
mov
xchg
and
add
mov
mov
inc
mov
add
lahf
adc
std
dec
lods
movsb
or
jae
pop
leave
adc
sub
add
push
imul
push
lods
mov
mov
sahf
sbb
out
inc
add
mov
roll
mov
mov
pop
push
sub
in
jecxz
push
push
aam
in
iret
xchg
adc
lea
out
lock
add
pushf
icebp
and
mov
or
cwtl
cmc
dec
cwtl
and
rorl
mov
push
mov
lahf
iret
pop
dec
daa
out
outsl
sti
push
addb
fstpl
fdivr
xlat
bound
mov
jne
add
add
mov
sbb
mov
sub
add
push
fcomps
add
pop
lahf
iret
add
int
scas
incb
inc
add
outsb
push
add
cmovnp
sbb
xor
add
mov
add
xchg
add
mov
pop
arpl
mov
add
sbb
mov
mov
add
out
ds
movsl
pop
rolb
repnz
shll
mov
xchg
out
adc
es
js
xor
cmp
call
push
add
aam
addb
addb
push
pop
outsb
sub
mov
mov
push
add
lock
jno
xbegin
add
mov
daa
jnp
mov
add
add
mov
and
mov
push
add
fstpl
mov
mov
add
mov
mov
add
mov
mov
pop
jge
add
test
push
mov
in
xchg
mov
xor
mov
push
add
mov
sub
mov
adc
mov
mov
outsb
jmp
decl
pop
cmc
clc
mov
js
popa
subl
sbb
mov
add
add
mov
mov
mov
add
mov
push
push
repnz
mov
add
mov
std
push
mov
add
scas
stos
imul
pop
int
push
lods
push
dec
dec
popf
push
popa
push
loope
aaa
ffreep
add
mov
sub
das
add
mov
mov
jp
cmp
mov
dec
or
call
mov
add
mov
adcl
xor
mov
add
clc
mov
test
mov
inc
nop
add
insl
pop
cmp
add
inc
pop
repz
dec
sub
inc
add
jnp
mov
and
mov
rorl
mov
cld
push
and
mov
jb
mov
fldenv
add
mov
aam
dec
ret
decb
iret
jle
test
add
sub
stc
push
pop
or
mov
and
fwait
daa
mov
mov
in
int3
stc
into
ljmp
cs
in
into
lcall
in
jle
add
xchg
dec
jno
sub
push
push
inc
loop
mov
fidivrs
push
fcoms
mov
add
imul
stos
mov
mov
dec
lds
xadd
mov
incl
aas
mov
mov
gs
aad
mov
cmp
sbb
mov
add
mov
xchg
or
out
xor
adc
cmc
pop
sahf
or
add
push
sbb
fnstsw
push
inc
add
push
add
aam
ret
xchg
fsubr
mov
mov
and
add
stos
add
mov
lcall
pop
adc
mov
js
out
sbb
cmc
xor
mov
mov
aaa
mov
mov
jp
loop
mov
inc
xchg
daa
loop
mov
inc
das
dec
addb
jecxz
dec
in
negl
sbb
adc
jo
mov
pushf
test
adc
mov
or
sub
add
add
popf
scas
add
mov
push
pop
mov
mov
repnz
and
push
mov
xor
mov
enter
rcrl
add
fcomip
cltd
mov
std
movsb
lods
cli
imulb
out
sub
sbb
cmp
add
fidivl
mov
lret
mov
mov
mov
jg
test
mov
mov
add
add
xchg
adc
add
imul
mov
sub
cmpsl
jbe
fisttpll
loope
or
pushf
adc
and
bound
mov
add
negb
fiaddl
mov
lds
cmp
pop
and
xchg
jae
shll
add
cmp
gs
mov
jno
addr16
cs
xchg
push
jno
bound
mov
sbb
add
dec
out
cmpsb
push
out
arpl
mov
sub
ret
adc
pop
aad
shrl
xchg
add
mov
jmp
mov
call
sti
pop
and
mov
xchg
std
or
ja
cmp
aas
lds
cmp
mov
xchg
rolb
imul
addb
add
mov
loope
add
cmp
and
mov
lods
push
test
sbb
xor
xor
jle
into
fs
mov
sbb
dec
loope
xor
add
hlt
das
xchg
push
stc
and
mov
adc
jmp
cld
pop
inc
ret
test
addr16
mov
mov
add
cmp
fstpt
fsubl
add
cmp
mov
mov
push
ret
push
scas
jo
mov
sub
addb
mov
add
mov
clc
lock
imul
add
mov
mov
jno
sarl
or
add
mov
xor
mov
rolb
mov
aaa
fdivrs
scas
rolb
mov
test
ficoml
push
xor
push
das
push
aaa
add
dec
fistps
fs
or
mov
stos
pop
fdivrp
iret
xchg
andl
add
lods
sbb
add
push
add
jmp
movsl
push
sub
ret
adc
mov
dec
dec
js
pop
dec
out
and
icebp
insb
dec
test
aad
inc
add
in
addr16
imul
xchg
lret
or
add
adc
mov
or
mov
add
add
out
sub
xor
mov
cltd
xor
sub
fucomi
mov
mov
sbb
fsts
add
mov
in
ret
stc
in
lret
dec
and
pop
fisubs
add
push
or
add
mov
cmp
scas
mov
test
pop
out
inc
das
rolb
mov
jmp
out
add
jae
xor
mov
mov
je
test
inc
adc
mov
sbb
mov
push
xchg
xor
push
jg
ret
popa
lock
pop
rcrl
rolb
test
pop
xchg
int3
popf
jae
rcll
mov
mov
ret
mov
mov
adc
jns
daa
mov
mov
mov
insl
or
inc
jge
xchg
ss
enter
sbb
addb
loopne
mov
xchg
fcoml
sub
cmpsb
mov
divb
pop
int3
nop
add
pop
and
mov
add
lret
mov
fucomip
add
mov
lret
mov
addb
test
mov
mov
cltd
jo
mov
imul
inc
add
aam
push
ror
push
rol
mov
call
rol
and
stos
pop
loopne
mov
add
cmpsl
jle
pop
repnz
sub
les
sahf
mov
das
xor
mov
jb
mov
sub
fistl
cli
push
add
mov
fldl
add
inc
add
test
mov
jnp
imul
add
xchg
and
xor
mov
test
ficoms
mov
jl
shll
add
mov
into
data16
cmp
in
push
faddp
js
cld
or
jmp
pop
lods
push
call
fs
jnp
add
mov
test
mov
jb
mov
jp
add
add
sub
add
fwait
bound
mov
rolb
mov
inc
add
dec
dec
cmp
mov
cmp
faddl
loopne
mov
sub
add
repnz
jl
sub
add
mov
or
mulb
xchg
add
movsl
mov
pop
out
in
movsb
cmpsl
stos
out
or
add
call
fisttpll
xor
mov
adc
daa
jo
mov
rol
jp
add
mov
add
mov
add
adc
sbb
mov
int3
push
sahf
cmp
push
add
hlt
pop
flds
add
jmp
mov
lret
pop
rolb
mov
add
lea
sub
mov
jg
dec
out
add
sub
lahf
jns
stos
push
sahf
adc
cmp
xchg
lea
cltd
pop
insb
inc
inc
add
rolb
mov
xchg
add
xchg
add
data16
jg
pop
mov
pop
pop
mov
add
lock
dec
mov
int3
movsb
sbb
xor
out
mov
sub
dec
lret
jne
xchg
inc
pop
lock
or
pop
cli
xor
lret
jg
mov
mov
fs
or
lea
jae
cmp
dec
mov
mov
add
call
cmpsb
mov
mov
pusha
add
push
add
scas
jbe
add
add
mov
into
iret
data16
into
movsb
cmp
inc
sbb
mov
adc
mov
sbb
sub
dec
lock
ja
dec
cmp
jne
push
sbb
mov
pop
lods
or
add
jno
arpl
notl
repnz
setp
addb
inc
add
filds
xchg
add
mov
dec
ljmp
jmp
popl
dec
adc
mov
inc
add
adc
fisubs
jp
xchg
cmp
sub
test
or
pop
clc
fwait
xlat
sub
push
sti
subl
inc
mov
push
inc
ret
and
cmpsl
icebp
subl
popf
gs
enter
jbe
mov
mov
into
or
add
mov
sbb
jp
add
adc
sbb
cmp
pop
test
aas
mov
fcomps
lret
jb
mov
adc
mov
mov
mov
in
popa
fidivl
jae
pop
mov
add
push
les
mov
mov
test
add
xchg
or
sub
add
lcall
mov
mov
sbb
add
or
lods
mov
add
mov
jae
add
jne
sahf
sbbl
inc
dec
or
or
rolb
mov
pusha
add
shll
cmp
dec
daa
sub
ja
or
jmp
or
add
mov
int
add
pop
dec
cmpl
aam
jmp
aad
addb
xor
add
mov
inc
add
push
iret
dec
xor
mov
addr16
fnstenv
mov
lcall
test
jmp
mov
in
xchg
loop
mov
add
fisubs
jge
inc
add
pop
dec
inc
int3
pop
inc
cmp
dec
xor
mov
jg
les
cmp
mov
mov
cmp
cmp
sbb
add
ds
addb
add
mov
add
data16
insl
cmp
cli
adc
mov
xchg
add
adc
neg
ds
mov
fldt
ret
mov
fidivs
inc
mov
stos
push
das
cmp
addr16
mov
cld
std
shll
int3
xlat
repz
mov
jbe
add
cli
cmp
add
add
fwait
mov
mov
fs
iret
inc
testl
and
mov
and
ja
dec
and
mov
repnz
xchg
jg
aaa
mov
mov
cld
xlat
xor
mov
mov
dec
adc
jle
push
dec
int
push
mov
loopne
mov
sub
js
jo
mov
add
add
mov
rcrl
mov
in
test
out
mov
jnp
out
inc
int3
out
mov
repnz
mov
hlt
xchg
mov
pop
pop
rolb
mov
add
pop
and
mov
adc
insb
cli
or
add
addb
and
mov
pop
dec
aaa
sub
int
mov
sahf
daa
les
loop,pt
mov
repnz
add
mov
mov
mov
pop
push
sbb
add
mov
cmp
lods
test
mov
add
lahf
int3
mov
mov
inc
adc
push
daa
pop
ficoml
sti
mov
js
daa
add
test
xchg
jbe
xchg
cs
les
dec
pop
jae
bound
mov
mov
xchg
mov
loopne
mov
mov
mov
xchg
sbb
inc
mov
mov
repnz
add
and
popa
add
ljmp
add
fstp
and
stos
enter
add
jge
enter
mov
mov
sub
fs
ss
xchg
and
mov
add
add
in
decl
jae
add
ret
je
adc
out
add
fsubrp
int3
inc
add
add
repz
lock
test
fcoms
mov
ret
roll
incb
mov
fsubr
insl
inc
add
and
add
xchg
or
dec
movsl
addb
enter
mov
mov
xor
inc
pop
xchg
jne
jae
or
xor
mov
pop
sbb
rolb
mov
add
inc
stc
jno
inc
in
lret
addb
mov
add
outsb
inc
sub
push
outsl
imul
xchg
mov
add
mov
push
add
mov
nopl
xor
jo
mov
ss
pop
xor
mov
xchg
add
pop
dec
jmp
and
movsl
nop
add
les
mul
add
rorl
add
lods
and
mov
fdiv
add
mov
add
test
call
jnp
cltd
cmp
rolb
mov
insb
in
xchg
and
mov
lea
adc
xor
xchg
mov
imul
pop
loop
mov
pop
lods
hlt
lret
imul
adc
mov
xchg
mov
sti
in
dec
leave
notb
jg
and
orl
mov
mov
outsl
inc
add
test
clc
xor
pop
push
add
test
repnz
add
ja
sbb
cwtl
add
mov
pop
je
cld
pop
mov
and
scas
pop
push
xor
add
xchg
inc
and
repnz
and
test
mov
arpl
jo
mov
push
add
rcll
mov
add
add
mov
adc
mov
mov
mov
mov
imul
es
mov
jl
pop
lret
mov
sbb
in
dec
fs
sub
jp
or
jo
mov
ss
mov
add
out
adc
pop
movsb
sub
aaa
dec
mov
rol
ds
add
out
mov
sbb
lcall
mov
repz
mov
lret
pusha
add
sbb
mov
add
scas
adc
sbb
cwtl
jno
bound
mov
mov
cld
mov
add
add
add
std
pop
outsb
sbb
add
incb
sub
stos
or
add
xchg
mov
fs
mov
add
add
xor
mov
mov
sbb
push
daa
sub
aad
repz
inc
js
orl
push
movsb
sbb
out
fistps
pop
xchg
cmpsl
popa
aaa
sbb
and
mov
add
test
mov
add
and
mov
add
mov
mov
ljmp
push
dec
xchg
add
mov
xor
jbe
dec
imul
mov
test
dec
jecxz
fwait
mov
pop
bound
mov
dec
ds
stc
mov
and
xor
icebp
test
bound
mov
mov
popa
mov
xchg
add
push
std
enter
fnstenv
ljmp
pop
pusha
add
add
mov
imul
xor
cmp
adc
adc
push
lods
fistpll
icebp
in
dec
dec
xchg
fsub
add
loop
mov
bound
mov
idivb
dec
lock
repnz
pop
fwait
pop
out
mov
sbb
add
add
test
xor
mov
add
add
xchg
add
mov
mov
mov
rorl
xlat
mov
sti
sbb
addl
fidivrl
mov
pop
push
fldt
rolb
mov
pop
xchg
cwtl
add
lea
mov
incb
nop
add
aaa
inc
add
mov
insb
sub
mov
rolb
mov
add
add
add
stos
cld
pushf
addb
sub
lea
popl
lret
movsb
rcll
jmp
pop
cmc
mov
sbb
shrl
mov
add
adc
xor
dec
rcll
add
scas
aad
mov
movsl
in
ljmp
jg
clc
push
adc
mov
outsb
roll
add
sbb
lahf
cltd
pop
lods
adc
mov
cmp
mov
mov
lret
sub
add
or
fisttpl
sti
xchg
in
aad
or
mov
push
aad
fmull
pusha
add
xchg
nop
add
loope
idivb
pop
sbb
or
scas
xor
mov
add
add
ja
fistl
jae
add
xchg
leave
add
mov
mov
add
xlat
dec
lods
and
mov
xor
mov
lea
mov
scas
jecxz
enter
mov
fs
out
rolb
mov
in
adc
mov
fadds
dec
pop
mov
xchg
mov
sub
jns
xlat
push
xchg
mov
loope
fsubl
xchg
popf
mov
adc
mov
ja
pusha
add
cmpsb
popa
addb
mov
aas
out
lock
add
shll
cmp
and
outsl
adc
into
rolb
ss
cmpsl
loope
inc
insl
sbb
add
mov
add
mov
fidivrs
pop
addr16
cmc
mov
adc
mov
std
dec
pop
inc
dec
stos
loopne
mov
sahf
nop
add
push
push
add
sbb
cmp
arpl
mov
imul
incl
mov
test
es
add
pop
push
mov
fidivl
stos
setb
mov
pop
stos
rolb
mov
dec
adc
push
jp
scas
mov
sbb
aas
dec
jecxz
insl
jge
shrl
add
add
mov
jno
push
lods
imul
mov
mov
int
cmp
cli
pop
int3
jmp
inc
loope
dec
push
add
mov
inc
subl
mov
mov
xor
addb
std
cmpsb
cmpsb
fcmovne
stos
fadd
roll
fimull
int
in
push
lcall
aaa
sub
sbb
add
mov
inc
adc
mov
outsb
mov
test
fadds
outsb
scas
rolb
mov
sahf
pushf
jge
mov
add
mov
in
jbe
inc
not
sbb
shl
jnp
or
sbb
rolb
mov
add
add
je
mov
jmp
mov
adc
mov
dec
lcall
mov
xchg
add
test
stos
push
push
jge
shll
add
stc
cbtw
xor
mov
adc
push
add
dec
add
jns
out
addl
aad
jge
ret
adc
pop
gs
add
jl
add
dec
push
mov
adc
mov
icebp
addr16
imul
clc
dec
xchg
lcall
push
sti
stos
mov
fstps
adc
mov
mov
add
mov
lods
stc
js
xchg
push
cmp
sbb
or
call
mov
in
ret
add
or
dec
movsl
cmp
js
mov
mov
fcmovne
and
mov
das
push
jns
hlt
cmp
ja
jae
testl
lds
fstl
dec
add
aam
add
adc
in
frstor
mov
add
imul
int3
inc
jp
into
xor
mov
xchg
outsl
in
add
test
rorl
repnz
testl
mov
lcall
sbb
dec
mov
cwtl
addb
mov
add
or
dec
add
add
mov
mov
add
mov
mov
xchg
mov
mov
and
mov
mov
stos
jnp
dec
mov
in
inc
dec
mov
add
mov
into
addb
pop
out
push
les
scas
ret
xchg
div
lret
xor
inc
sarl
ret
icebp
in
std
push
add
add
das
loopne
mov
stc
outsb
addl
in
add
or
jnp
nop
add
call
repz
add
xchg
fs
mov
out
xchg
cmp
cmp
add
and
add
test
outsl
or
ljmp
out
push
jl
mov
mov
add
mov
mov
ret
addb
mov
frstor
sub
imul
lods
add
mov
imul
mov
sub
in
xchg
mov
inc
inc
add
dec
cmp
stc
clc
xchg
add
add
add
sbb
xchg
addb
ja
das
and
sbb
push
std
and
rol
mov
jo
mov
nop
add
dec
push
add
sbb
das
nop
add
pop
aad
nop/reserved
add
test
adc
fwait
sahf
sarl
xchg
adc
adc
xor
mov
loop
mov
add
sub
xchg
repz
and
mov
leave
pop
inc
cmp
call
cltd
movsb
pop
or
pop
loop
mov
cmpsl
inc
inc
and
cmp
mull
mov
mov
xor
cmp
add
inc
je
inc
outsl
lock
jg
dec
pop
dec
shll
add
push
or
in
xor
mov
mov
add
ficompl
xlat
into
add
mov
push
arpl
sti
mov
mov
add
mov
push
dec
out
xchg
adc
mov
pop
test
jbe
fcompl
add
mov
xchg
imul
mov
mov
cmp
fsubs
cmc
fbstp
cmp
mov
mov
jl
fldcw
mov
in
sbb
add
mov
add
fldcw
ja
adc
pop
mov
dec
cs
or
int
push
pop
mov
add
jge
into
fs
mov
xchg
add
mov
mov
add
mov
or
push
add
mov
dec
bound
mov
add
mov
pusha
add
movsl
mov
inc
add
inc
add
and
cli
das
jmp
add
add
dec
stos
es
sti
sbb
push
les
out
shrl
cs
add
pop
loope
addb
movsl
mov
adc
rolb
mov
lcall
pop
pop
mov
mov
call
aad
lock
push
add
and
mov
add
push
daa
cmpl
sarl
mov
iret
xchg
and
hlt
sbb
add
add
xor
or
add
cmpsb
loopne
mov
cmp
and
mov
sahf
jg
in
mov
mov
pop
xlat
jo
mov
mov
add
and
mov
ret
mov
mov
add
stc
mov
jbe,pn
push
cmpsb
sub
mov
pop
mov
mov
cwtl
inc
add
mov
add
add
mov
pushf
push
cmp
ret
std
add
mov
cmp
add
outsb
mov
jmp
mov
and
ficoml
pop
or
sbb
mov
jp
mov
sub
push
sbb
add
jmp
xor
mov
fildll
insb
lods
outsb
lods
sti
cld
sub
pop
sub
fistps
cmp
add
add
and
push
int3
lret
rolb
mov
sbb
mov
sbb
add
int3
jb
mov
int3
addb
add
int3
pop
ret
addb
iret
dec
xor
outsl
xlat
and
mov
mov
add
inc
repnz
aam
and
pop
addb
mov
es
sub
jmp
mov
rolb
add
mov
add
out
fists
adc
rolb
mov
ja
cld
test
add
add
mov
sub
sub
cs
add
and
jbe
cs
ret
xchg
decl
pause
add
fimuls
mov
push
ret
xchg
add
cli
jo
mov
add
inc
jbe
dec
jns
out
mov
push
cmp
mov
jb
mov
lahf
mov
mov
pop
stos
and
mov
cmpsb
in
adc
jle
aas
aad
roll
jo
mov
mov
add
mov
pushf
je
xchg
cmp
add
jge
add
rolb
or
int
test
add
pop
outsl
insl
cmp
cli
decl
xchg
inc
rolb
rcll
stos
push
add
adcl
mov
stos
arpl
dec
test
mov
fwait
iret
fstl
pop
out
push
pop
xchg
test
mov
add
push
imul
push
xchg
pusha
add
imul
mov
je
aam
call
push
sbbl
mov
xchg
add
and
add
add
lock
fdivp
lahf
sbb
mov
cmp
sub
add
cmpsb
pop
ds
jp
ss
adc
fisttps
or
outsl
add
leave
rolb
cltd
stc
xchg
or
fxch
mov
fstpl
add
sbb
outsb
aaa
sahf
dec
movsb
int
add
std
adc
adc
stos
rolb
mov
fldt
xlat
inc
rolb
mov
or
imul
repnz
add
sbbl
pop
insb
fs
mov
ret
xor
mov
or
nop
add
rolb
mov
inc
xchg
out
cmpsl
and
inc
jo
mov
add
inc
add
jl
sbb
clc
mov
mov
ja
int
lcall
dec
jl
sbb
add
push
add
mov
xchg
movl
in
idivl
jns
jb
mov
cmp
add
push
cmp
call
in
ljmp
mov
mov
mov
aad
mov
aaa
lret
pop
fistps
lret
ss
jo
mov
jo
mov
es
sbb
pop
mov
add
mov
scas
push
mov
add
aas
xchg
add
dec
and
and
sub
bound
mov
fcompl
in
sub
add
out
push
insb
or
cmp
lods
xchg
je
insb
or
jo
mov
lret
jg
ret
dec
movsl
mov
ds
pusha
add
sti
sub
or
sbb
rolb
dec
push
mov
mov
int
or
add
add
mov
inc
add
mov
add
sub
add
repz
popa
das
por
gs
and
imul
mov
mov
cmc
cwtl
mov
mov
in
push
jae
xor
mov
in
lods
pop
fdivrl
cwtl
jmp
hlt
mov
mov
add
xlat
mov
int3
loope
add
mov
inc
mov
rolb
mov
cli
pop
mov
sbb
xor
mov
sub
push
imul
mov
push
pushf
call
int
mov
mov
add
repnz
sub
and
mov
pop
and
mov
cld
jo
mov
cmp
jo
mov
cmp
add
jl
adc
or
scas
test
sub
xchg
hlt
push
add
mov
imull
mov
xchg
movsl
mov
inc
ds
sbb
lret
test
mov
mov
popa
dec
inc
add
dec
adc
mov
sbb
rolb
mov
fdivrl
mov
inc
add
mov
lods
gs
fstp
out
scas
lock
shl
imull
fidivs
lahf
cld
xchg
lods
adc
pop
arpl
sbb
jecxz
pop
fdivrs
add
lea
add
inc
aam
inc
bound
mov
int3
mov
out
loopne
mov
mov
cld
into
and
add
mov
pop
insl
imul
daa
rolb
rcll
ss
sub
pop
je
lea
mov
push
test
cmp
testl
sub
fisttps
pop
sbb
cmp
pop
cltd
das
dec
pushf
add
mov
inc
add
adc
mov
ljmp
add
mov
rolb
mov
add
gs
fcomps
pop
mov
pop
dec
mov
inc
xchg
sbb
js
sbb
popa
into
sahf
jbe
out
pop
fisttps
mov
sbb
ja
inc
add
push
stc
ljmp
mov
mov
add
mov
adc
mov
js
sub
dec
addb
push
adc
mov
mov
mov
add
sub
sub
scas
stos
sti
pop
fnstcw
mov
mov
lea
dec
inc
xchg
ret
jns
scas
rolb
mov
xchg
jl
pop
jae
pop
mov
pop
jbe
push
aad
stos
push
clc
clc
sub
mov
out
xor
mov
int3
inc
xchg
sub
mov
add
add
mov
mov
pop
xchg
mov
ljmp
mov
lcall
call
add
mov
loopne
mov
sbb
imul
add
icebp
mov
mov
dec
push
iret
addb
cmp
negb
push
shll
add
repnz
push
push
dec
mov
ljmp
cmp
mov
xchg
out
lahf
dec
adc
daa
push
fisttpll
mov
pop
ret
ja
sahf
std
mov
and
add
loop
mov
push
push
or
lcall
and
pushf
xor
mov
sbb
mov
mov
call
mov
cld
push
dec
push
add
lcall
add
adc
mov
add
pop
repnz
add
loop
mov
icebp
pop
ret
push
xchg
test
add
cmp
add
fldcw
add
xchg
push
add
cmp
mov
mov
mov
add
aam
jb
mov
and
mov
lret
jge
das
push
add
push
sub
jmp
xor
mov
add
add
jl,pt
mov
add
aaa
xor
add
sbb
sarl
mov
add
or
xchg
and
add
or
inc
mov
add
add
cmc
lcall
mov
push
out
ss
stos
popf
cmp
out
mov
add
fdivrp
out
and
mov
mov
xor
mov
add
add
push
or
mov
jmp
lcall
int
add
scas
cld
pusha
add
jnp
ja
sti
jl
sub
sub
je
push
push
das
sub
aaa
cli
add
cmc
in
add
mov
xor
mov
stos
mov
in
push
lock
xchg
loopne
mov
dec
mov
mov
mov
push
loop
mov
adc
mov
xor
mov
test
mov
or
xchg
or
pop
in
mov
mov
add
mov
sub
add
jg
rolb
mov
pushl
fidivs
shll
push
ficompl
pop
cmp
lret
imul
add
xchg
arpl
in
enter
mov
mov
xchg
and
mov
xor
mov
cwtl
daa
push
rolb
aad
or
cmp
jecxz
add
pop
add
dec
call
lret
ljmp
scas
and
push
js
test
adc
mov
jns
inc
sbb
out
xchg
add
jp
jbe
mov
mov
dec
or
mov
and
pop
adc
mov
jnp
jg
sti
repnz
icebp
inc
dec
mov
aad
inc
mov
add
adc
mov
mov
arpl
pop
mov
js
push
add
rcr
leave
xchg
jl
fimull
adc
xchg
mov
icebp
repnz
mov
add
mov
cmc
or
xor
mov
add
add
add
rcrl
mov
mov
pop
jp
rcrl
cli
mov
push
jmp
mov
sbb
jp
mov
mov
stc
jnp
mov
add
mov
add
push
sbb
add
sti
scas
ror
jb
mov
loope
int3
into
test
call
mov
xchg
or
jo
mov
ret
ljmp
mov
mov
add
jb
mov
mov
add
lock
and
and
mov
pop
mov
pop
xchg
add
jb
mov
jl
add
pop
push
and
mov
stc
int3
mov
add
inc
xchg
sub
mov
ss
inc
outsb
test
push
sbb
add
cmp
fadds
and
incb
test
stc
cmp
add
sub
dec
cltd
outsl
xchg
sbb
daa
or
cli
clc
cwtl
xchg
in
jnp
rolb
lahf
in
pop
push
movsb
sti
mov
ret
jmp
sub
hlt
stos
push
add
add
inc
sub
lcall
in
dec
lret
ret
rolb
mov
loopne
mov
add
ja
sbb
add
mov
insl
xchg
dec
xchg
mov
mov
add
mov
fidivs
pxor
cmp
cld
clc
int3
push
push
dec
stos
mov
enter
test
or
lea
sbb
ret
add
push
add
je
and
rolb
cmovl
inc
stc
insl
add
aad
ret
ficomps
add
mov
mov
lahf
pop
xor
mov
nop
add
add
push
mov
add
iret
ja
jl
nop
add
push
push
add
cld
std
lret
mov
add
in
jno
add
orl
test
sbb
mov
sbb
xlat
push
lods
addb
cmp
rolb
mov
push
pop
mov
rcrl
mov
inc
add
lock
in
jae
mov
sbbl
mov
and
fldz
mov
gs
test
inc
add
xchg
cmpsl
in
add
add
js
enter
cltd
push
test
add
mov
jge
rolb
mov
inc
jmp
xor
add
lcall
jp
leave
incb
cmpsb
es
repz
test
add
and
lock
idiv
cmp
cli
mov
cmpsl
mov
jns
sub
inc
sub
add
adc
mov
insl
xchg
pop
or
and
add
sub
pop
pop
inc
jns
jge
lods
mov
push
pop
adc
mov
sbb
add
mov
arpl
ja
and
inc
xlat
data16
mov
pop
sbb
mov
add
gs
xchg
data16
mov
mov
push
je
out
arpl
mov
aad
loopne
mov
and
int3
sbb
jge
imulb
push
icebp
minps
mov
rolb
mov
adc
mov
inc
add
test
add
addb
in
dec
inc
add
add
add
in
sbb
cmp
stos
shll
xor
movsb
and
cltd
mov
mov
data16
fildll
cmp
add
mov
adc
pop
rolb
scas
jb
mov
out
dec
push
jg
popa
xor
mov
test
mov
std
in
or
add
imul
fcoms
scas
mov
cmp
xchg
add
mov
add
mov
adc
icebp
cmp
iret
in
xor
enter
add
fildl
push
movsl
test
fmull
xchg
cbtw
cmp
jg
int3
mov
cmp
inc
sbb
dec
hlt
xor
mov
call
and
mov
stos
movsl
faddp
arpl
loope
adc
cli
xor
mov
ja
lds
loope
adc
rolb
mov
ret
hlt
outsl
mov
or
inc
add
mov
repnz
add
add
mov
mull
aad
mov
add
mov
jp
dec
loop
mov
add
mov
xor
add
mov
or
xor
addb
cltd
jb
mov
mov
popf
push
add
cltd
js
add
mov
pop
ret
popa
je
push
add
mov
insb
pop
sub
addb
mov
mov
jo
mov
ret
lods
jo
mov
mov
mov
rolb
push
dec
stos
flds
daa
adc
mov
ret
or
add
ror
aaa
dec
xchg
sub
xchg
out
movsl
push
push
out
jno
sub
ds
sub
mov
rcrl
xchg
repnz
cmp
mov
add
push
add
cmp
mov
int
add
in
das
pop
pop
inc
mov
sbb
push
sahf
sub
ret
sbb
mov
add
gs
mov
aas
stos
and
stos
cld
push
std
popa
xchg
add
sahf
and
mov
jmp
mov
jno
sbb
out
push
nop
add
add
es
mov
cmp
mov
mov
or
rolb
jno
push
ret
addb
inc
call
inc
push
adc
mov
inc
ret
js
jmp
xlat
mov
test
cmp
cwtl
movsl
xchg
iret
idiv
cld
loopne
mov
pop
cmpsl
dec
xchg
add
lock
test
ret
repnz
xchg
mov
pop
jns
call
pop
rcll
xchg
cwtl
and
fimuls
stc
mov
or
add
mov
add
mov
mov
mov
loope
clc
loop
mov
jae
jl
add
xchg
jg
cmc
cmp
add
add
add
add
scas
dec
push
daa
mov
xchg
fsubrl
fisttps
daa
dec
in
add
mov
inc
add
das
inc
out
mov
int
icebp
push
inc
jg
addb
insl
adc
fwait
rcrl
les
loop
mov
loopne
mov
mov
pop
fs
stos
mov
dec
int3
clc
inc
sqrtps
mov
dec
or
mov
add
test
add
add
add
mov
add
add
add
mov
mov
add
movsl
loop
mov
lea
scas
push
jno
xor
add
mov
push
pop
in
imul
or
cmp
lea
jns
js
lods
in
add
jbe
add
mov
mov
push
add
test
out
adc
mov
xor
add
enter
enter
sub
dec
sti
fldl
lret
out
ret
mov
ljmp
mov
mov
lods
xlat
jecxz
xor
add
sarl
pop
mov
mov
push
or
sub
stos
sbb
push
out
cld
push
add
fsubr
repnz
mov
lea
data16
jae
sbb
add
dec
out
loop
mov
in
xor
mov
pop
bound
mov
mov
repz
mov
int3
mov
mov
repnz
mov
add
add
pop
mov
inc
pop
sub
addb
clc
pop
mov
pop
pop
insl
test
push
inc
btsl
jae
push
pusha
add
adc
add
ljmp
and
add
ja
lea
mov
inc
int3
sahf
xor
mov
adc
and
out
ret
dec
hlt
loopne
mov
mov
pop
pop
fnstsw
jmp
out
sbb
xor
sti
aam
ljmp
mov
cs
add
addb
stos
sbb
add
movsl
arpl
sub
jno
sbb
push
and
push
mov
mov
in
add
mov
pop
pop
xor
mov
lock
mov
jmp
sub
inc
add
add
dec
rcrl
mov
out
sbb
je
mov
sbb
add
add
add
inc
inc
cmp
rolb
mov
or
fsubrl
arpl
cmp
add
mov
sub
sbb
add
and
mov
cli
sub
mov
mov
mov
add
mov
mov
ret
sub
int3
lock
add
jns
into
fucom
loope
mov
add
mov
pushf
ret
mov
mov
das
or
outsl
pop
jge
sub
out
sub
xchg
mov
add
leave
addb
jae
jmp
shr
xchg
add
sarl
aaa
xchg
add
push
cmp
push
cmpsl
fdivrs
testb
test
mov
insl
ret
push
push
dec
pop
pop
or
sbb
mov
add
or
or
jne
add
cld
dec
js
sahf
xchg
mov
out
test
cmp
add
xor
mov
mov
outsl
sbb
jp
lret
jo
mov
mov
mov
mov
arpl
cmp
lea
mov
or
push
xchg
add
hlt
pop
repnz
shll
mov
sub
add
aas
sbb
fcomps
xchg
lret
fcomip
dec
rol
add
xchg
add
pop
addb
xchg
and
xor
mov
sbb
mov
mov
add
mov
adc
mov
pushf
dec
adc
mov
test
mov
xlat
cmp
add
js
fldenv
int3
and
mov
mov
pop
sub
add
dec
jae
adc
mov
mov
mov
push
inc
add
cli
cmp
mov
hlt
and
xor
sbb
out
cmp
sbb
in
scas
js
mov
das
jge
jmp
and
dec
pop
mov
dec
imul
push
mov
pop
lods
loop
mov
loopne
mov
and
xlat
inc
add
rorl
sti
in
add
nop
add
sbb
cwtl
add
mov
add
popa
jae
cmp
aad
dec
adc
mov
and
mov
mov
add
add
popf
stos
push
es
dec
out
add
mov
add
add
icebp
jae
jg
fsubr
ja
lret
in
addb
je
add
dec
and
mov
movl
filds
repz
callw
xchg
fldenv
xor
mov
add
leave
test
es
sbb
mov
enter
mov
mov
add
aad
test
leave
xchg
test
add
push
pop
push
pop
sbb
int
setb
mov
loopne
mov
jne
aas
mov
cmpsb
ds
cltd
daa
cmpsl
xor
push
icebp
add
mov
imul
xchg
mov
cmp
mov
push
jg
add
lds
mov
push
icebp
dec
add
cmpsl
in
push
add
xchg
add
ret
jne
add
add
add
push
jge
dec
push
sub
mov
rolb
mov
add
shll
jmp
jns
hlt
mov
mov
add
xor
mov
add
add
das
sub
arpl
arpl
sbb
mov
mov
repz
mov
stc
dec
test
push
jmp
add
pop
lea
imul
push
adc
scas
lret
mov
lret
dec
loope
add
dec
insb
pop
push
cmp
mov
add
push
nop
add
sub
add
in
and
mov
gs
or
fiaddl
sub
or
or
adc
add
dec
hlt
sbb
and
xchg
daa
add
mov
add
test
push
add
xchg
frstor
stc
js
loope
stos
adcl
add
pop
push
aaa
add
popa
scas
cmp
pop
out
cmp
lahf
and
and
push
push
add
add
mov
popf
push
add
and
pop
stc
idivl
jmp
adc
mov
lock
add
fstl
rolb
cmp
xchg
push
in
enter
mov
push
add
shll
add
mov
mov
fsubrs
sbb
mov
xor
sti
or
push
clc
rolb
mov
pop
inc
adc
mov
and
adc
mov
pop
arpl
cmp
or
in
ss
sti
pop
mov
xor
mov
dec
cwtl
je
add
mov
jge
pop
movsb
out
cmpsl
pop
jg
inc
aam
fildll
int
jbe
lds
add
fs
add
add
add
cmp
in
cmpsb
call
in
adc
mov
mov
add
adc
ds
add
mov
xor
mov
mov
mov
xchg
sub
xor
mov
adc
xchg
xchg
out
in
sbb
mov
fwait
cmp
insb
mov
lea
sub
sub
inc
sti
test
cld
ljmp
inc
mull
jns
mov
mov
or
clc
shrl
add
add
or
add
xchg
adc
insl
lret
out
mov
out
mov
out
call
add
adc
add
das
and
mov
mov
pushf
movsl
mov
add
addr16
and
mov
scas
sub
cmp
jne
cmp
dec
mov
rolb
mov
push
inc
mov
add
jb
mov
add
mov
jbe
jge
push
add
dec
adc
add
cld
cmpl
xchg
les
and
inc
mov
test
jp
xor
stos
mov
cmp
dec
movsl
shrl
or
out
ja
add
popf
pop
cmp
pop
sahf
sbb
lods
jnp
cmp
jecxz
mov
mov
daa
fs
or
or
push
add
jl
movsb
loopne
mov
test
add
cmp
inc
addb
movsb
add
lahf
add
add
push
jmp
mov
add
add
push
aas
lds
add
mov
mov
ja
and
add
fistpll
add
and
mov
iret
and
add
rolb
mov
add
mov
dec
aaa
test
les
or
dec
cmp
sub
add
rolb
mov
addl
push
sahf
push
push
push
mull
gs
mov
add
mov
xchg
in
and
cmp
add
dec
xchg
add
mov
nop
add
les
scas
push
inc
call
sbb
gs
pop
test
cmc
jne
sbb
test
rolb
mov
add
xchg
stc
cmp
pop
xor
xlat
into
inc
sbb
mov
adc
sarl
xor
and
adc
mov
push
xor
mov
xlat
push
and
add
jo
mov
fwait
xor
ss
lea
stos
nop
add
scas
div
add
movsb
ror
and
mov
mov
lods
mov
addb
cmp
cmp
add
jp
pop
jp
add
mov
adc
mov
dec
sarl
jl
push
nop
add
mov
add
add
outsl
mov
add
lds
add
mov
mov
and
mov
sbb
xlat
add
loop
mov
adc
jns
rolb
mov
addb
hlt
int
cmp
mov
lea
push
xchg
cltd
loope
addb
addb
movsl
in
pop
jno
adc
lods
stos
push
dec
out
add
out
imul
adc
add
mov
sub
daa
mov
mov
xor
mov
pusha
add
jo
mov
cltd
outsb
cmc
addb
mov
inc
xor
adc
mov
mov
mov
fnstenv
add
inc
test
pop
xor
xor
cmp
sbb
enter
sub
mov
push
xor
mov
push
mov
pop
in
rolb
mov
test
mull
inc
add
loop
mov
scas
fcoms
push
clc
das
mov
decl
jno
lea
push
in
add
mov
add
gs
mov
add
les
add
mov
mov
add
or
push
sub
aad
push
gs
cmp
cltd
add
ret
jg
pop
inc
ret
call
sbb
adc
mov
or
loope
into
hlt
cmp
add
mov
fsts
mov
mov
loope
cmpsl
outsl
aaa
cld
loope
push
stos
push
aaa
and
add
dec
pop
int3
rolb
mov
loop
mov
push
insw
push
cmc
pusha
add
cmp
cltd
push
mulb
in
enter
push
jmp
mov
mov
imul
das
or
pop
pop
sbb
test
mov
cltd
out
inc
pusha
add
stos
xchg
pop
sbb
js
jbe
xchg
jne
push
out
jne
jo
mov
inc
add
pop
pop
sub
mov
mov
sub
adc
mov
mov
xchg
sti
imul
xor
mov
or
mov
add
add
jnp
sbb
add
add
push
jb
mov
pop
data16
pushf
mov
mov
add
orl
in
out
add
sub
fwait
lahf
add
pushl
dec
dec
outsb
dec
rolb
mov
push
lods
mov
mov
int
xchg
lock
mov
pop
js
scas
xchg
adcl
ret
test
std
add
jle
cmp
sbb
mov
outsb
push
fdivl
scas
cmp
push
lahf
adc
mov
cmp
pop
xchg
outsb
es
add
pop
lret
std
test
push
sub
dec
adc
mov
arpl
mov
fildll
movsb
lods
push
add
mov
sub
dec
mov
mov
mov
dec
or
cmp
add
popf
pop
out
lods
mov
out
test
add
inc
jmp
lcall
movsb
cmpsb
inc
xor
mov
loop
mov
addr16
pop
mov
test
push
jne
xor
mov
or
insl
loopne
mov
mov
push
add
frstor
fnsave
add
fnsave
mov
mov
out
mov
push
pop
dec
outsl
outsl
push
fcmovnb
add
stc
dec
sub
add
das
cmp
push
xor
mov
pushf
mov
out
jecxz
push
sub
mov
mov
cmp
add
popf
lea
dec
rolb
mov
push
add
je
add
fcoms
add
sub
clc
and
jno
clc
sbb
mov
mov
hlt
inc
add
jge
add
dec
push
fwait
je
rolb
mov
pop
call
sub
imul
enter
int3
jp
sub
add
mov
mov
addb
pop
pop
rcrl
add
pop
mov
stos
psubb
mov
add
out
pop
push
aam
lahf
dec
ficompl
and
mov
mov
mov
roll
mov
jo
mov
mov
arpl
mov
neg
in
hlt
inc
add
inc
xor
push
xchg
mov
bound
mov
fadd
add
outsb
imul
data16
cmpsb
lods
mov
mov
addb
sbb
imul
dec
mov
sub
scas
loope
add
sub
xor
dec
sar
cmpsl
sub
fdivp
insl
movsl
ret
mov
lods
dec
xor
icebp
cli
fisttpl
inc
push
pop
lea
pop
fsubrs
mov
dec
cld
mov
sub
add
or
fistps
setle
addb
cmp
in
cmp
or
add
rolb
mov
shll
sbb
and
add
mov
push
iret
push
and
pop
mov
jbe
stc
cld
lcall
xchg
add
add
xchg
mov
fs
add
mov
into
sub
push
push
dec
xor
mov
add
dec
je
mov
adc
enter
mov
insl
cmp
jmp
mov
call
shrl
or
dec
cmp
lock
lods
daa
test
mov
ror
sub
mov
add
mov
add
mov
add
mov
rolb
add
scas
or
add
outsl
mov
push
xchg
xchg
in
add
add
mov
push
mov
and
insl
sbb
xchg
mov
mov
add
mov
xlat
xchg
add
iret
sbb
and
add
imul
std
pusha
add
test
mov
sbb
mov
fsubl
add
add
push
mov
sbb
xor
mov
and
loope
lret
add
or
mov
pusha
add
daa
sbb
add
das
aas
ja
int3
out
std
mov
clc
fcomi
inc
add
popl
sbb
lea
add
fwait
mov
mov
mov
dec
les
movsl
inc
sbb
daa
add
mov
inc
inc
add
mov
add
mov
or
imul
add
mov
pop
mov
inc
rolb
sahf
mov
mov
ret
sahf
cmpsb
xlat
mov
lahf
and
rolb
mov
adc
push
push
mov
sub
xchg
into
xlat
push
jle
dec
in
test
stc
popa
add
mov
das
int
out
and
cmpsb
movsb
jmp
add
mov
aam
push
sbb
mov
mov
add
xor
mov
jo
mov
imul
mov
sbb
mov
mov
shr
mov
jnp
add
push
add
fbld
mov
fdivl
outsl
add
mov
add
adc
mov
add
mov
lcall
mov
add
and
lret
mov
and
mov
mov
aad
and
add
in
inc
pop
repnz
cld
xorl
push
movsl
loop
mov
movsb
and
mov
pop
cmp
mov
and
mov
add
mov
and
mov
sbb
cltd
lahf
xchg
rolb
mov
rep
outsl
fstl
add
add
push
inc
add
pop
inc
inc
add
mov
add
loopne
mov
or
mov
mov
add
pop
and
mov
loopne
mov
lods
sub
add
mov
xchg
inc
mov
aam
ret
into
inc
int3
bound
mov
or
add
cltd
lods
mov
scas
aam
nop
add
or
mov
mov
add
adc
movsl
cmpl
sbb
testl
fnstsw
arpl
loopne
mov
popf
cwtl
pushf
xor
mov
pop
or
add
sahf
ud0
js
aad
subl
je
jle
add
scas
shll
add
push
cli
push
addr16
add
mov
mov
fstl
xchg
arpl
add
add
sbb
add
js,pt
xor
or
adc
jbe
inc
cmp
add
mov
rolb
mov
outsb
push
dec
push
shl
mov
dec
mov
add
xor
xor
mov
cmpsl
daa
pop
pop
inc
js
add
into
fisubl
add
mov
dec
push
add
add
mov
xchg
push
cmpsb
and
mov
dec
icebp
mov
mov
mov
addb
xchg
movsb
in
enter
scas
adc
insl
or
shll
pop
sub
insb
mov
mov
mov
mov
xchg
add
inc
add
fld
or
mov
mov
mov
add
mov
or
cmp
push
add
mov
call
mov
inc
mov
pop
data16
outsb
icebp
inc
push
aaa
movsl
add
movsb
jne
pop
lods
ljmp
xchg
xor
mov
add
or
test
movsb
in
out
xchg
scas
jb
mov
pop
inc
add
push
push
or
andl
adc
mov
inc
xchg
add
inc
cmp
add
push
stos
and
xlat
dec
mov
mov
and
add
push
into
xor
mov
add
cmp
push
fcoms
and
mov
adc
mov
sbb
add
sub
add
mov
iret
pushf
dec
cld
push
clc
stos
out
daa
and
mov
jbe
cmpsl
jne
testl
fstp
pop
sub
add
popa
push
lods
xchg
lahf
imul
mov
mov
movsb
sbb
lret
enter
gs
add
mov
xor
mov
add
stc
cmp
outsl
gs
xchg
mov
cmp
leave
xlat
xchg
add
pushf
or
pop
pop
enter
fiadds
dec
inc
add
leave
jns
rolb
push
dec
mov
sub
lret
push
or
dec
jne
and
mov
mov
popa
gs
add
scas
or
arpl
inc
add
mov
dec
push
mov
add
add
push
test
mov
test
adc
imul
aam
add
add
mov
add
inc
aam
sbb
inc
pushf
leave
mov
pushf
or
xor
sub
cmp
add
mov
sub
test
mov
in
scas
mov
add
mov
jle
jno
add
mov
cmp
jno
pusha
add
mov
dec
pop
out
out
or
mov
add
jno
add
sbb
mov
dec
adc
push
xor
mov
mov
xchg
rolb
mov
out
frstor
sbb
es
mov
add
jp
mov
cltd
insl
pop
lahf
inc
add
repz
js
push
add
cmpsb
jno
add
test
add
lret
add
ja
adc
mov
add
xor
data16
mov
push
ss
div
add
jecxz
divb
repnz
push
insb
dec
addb
lock
cmp
jp
add
and
mov
scas
jecxz
popa
pusha
add
lock
jle
jmp
xchg
add
or
inc
stos
addb
dec
aas
and
dec
xchg
dec
js
fsts
vandnps
mov
data16
mov
mov
in
ret
data16
and
mov
ja
jl
xchg
add
sbb
add
xor
xchg
leave
mov
mov
dec
pushl
mov
sub
xchg
jmp
mov
add
mov
cltd
lock
push
jecxz
adc
add
iret
mov
jp
mov
pop
xchg
out
std
nop
add
push
push
repnz
jae
add
push
and
mov
rolb
mov
arpl
fdivrs
lret
call
cld
add
ret
and
mov
add
js
pusha
add
out
xlat
ljmp
imulb
aaa
mov
mov
sub
mov
jb
mov
jl
add
repnz
sub
add
push
and
mov
dec
call
es
push
push
add
add
sahf
call
mov
mov
out
pop
stos
jmp
insl
fsubrp
xchg
jg
xchg
in
scas
mov
movsb
jl
lods
mov
push
nop
add
dec
push
add
adc
aad
dec
pop
sbb
inc
rolb
mov
pop
outsl
nop
add
sub
int3
jmp
xchg
mov
inc
imul
hlt
push
mov
add
jns
add
jae
jns
add
ja
inc
dec
dec
stos
mov
jne
insb
jp
mov
dec
pop
movl
mov
mov
xor
pop
addb
movsl
ja
or
jne
sbb
add
add
mov
mov
add
nop
add
movsb
mov
mov
mov
and
mov
mov
loopne
mov
loop
mov
mov
test
lret
add
sti
add
testl
add
cmpsb
dec
xlat
pop
addb
dec
push
sti
out
inc
fcmove
inc
push
sub
push
popf
and
mov
repz
sub
add
test
mov
jge
fisubrl
jb
mov
or
push
adc
mov
add
int
cmc
shll
add
iret
pop
call
test
repnz
mov
jnp
push
out
repnz
xchg
aas
cwtl
call
inc
xor
popa
mov
add
scas
add
cli
mov
mov
fildll
leave
insl
pusha
add
sahf
fwait
mov
mov
sbb
add
sarl
out
aas
mov
sbb
mov
sbb
add
mov
pop
push
rolb
mov
mov
or
aaa
clc
jbe
add
inc
mov
inc
add
test
add
negl
test
jg
sbb
pusha
add
sbbl
or
sub
out
xchg
cltd
mov
add
lcall
rolb
mov
and
mov
in
popa
test
bound
mov
das
mov
insb
popa
lock
mov
add
push
adc
mov
icebp
mov
mov
mov
mov
ds
je
sub
add
add
sbb
insb
and
int
in
ljmp
add
sbb
push
add
in
pop
scas
nop
add
mov
fisubrl
hlt
inc
pop
mov
inc
cmp
notl
insb
push
add
ret
ja
push
ss
outsb
ja
iret
mov
ficoms
mov
dec
add
imul
bound
mov
aaa
out
inc
psubd
in
mov
jmp
xorl
sub
movsb
xchg
std
aas
cli
jmp
add
pop
and
mov
pop
inc
rcll
in
mov
dec
dec
int
xor
mov
addr16
dec
sbb
jle
xor
mov
int
mov
add
sbb
sbb
add
pop
pop
adc
mov
fmulp
fiaddl
xchg
inc
xor
out
jg
adc
mov
mov
adc
les
clc
add
mov
push
xchg
add
add
repz
jge
dec
daa
cmp
jno
sub
sbb
inc
hlt
addr16
mov
push
push
jno
daa
push
inc
jmp
mov
and
stos
mov
in
jne
add
add
outsl
ss
outsb
xchg
add
lods
pop
ret
add
mov
mov
sahf
in
out
mov
add
in
add
add
add
lods
sbb
je
push
adc
jns
sbb
mov
jnp
repnz
add
fsubrs
pusha
add
sbb
mov
push
mov
push
mov
mov
cltd
cmp
gs
mov
or
push
add
stos
pushf
arpl
iret
insl
fs
sti
addb
jl
sub
add
mov
mov
add
loop
mov
push
testb
mov
and
jecxz
pop
das
or
add
cwtl
sbb
pop
ljmp
add
adc
jmp
inc
add
sbb
inc
lock
in
ja
xor
das
dec
xchg
push
cmp
add
icebp
imul
inc
jp
out
cld
cmp
mov
add
mov
inc
add
mov
mov
dec
sti
ja
aad
add
push
add
mov
add
scas
imul
pushf
dec
push
add
addr16
add
rolb
mov
aad
and
mov
add
jle
lret
fstps
add
lret
add
mov
mov
mov
add
mov
xor
sub
mov
mov
rorl
jg
and
pop
jp
adc
iret
pop
mov
mov
rolb
addb
sub
repnz
js
aas
es
xchg
jge
sub
or
ja
shll
testb
pushf
addr16
inc
lea
dec
or
add
add
mov
fiaddl
sub
stos
insl
xchg
cmc
popf
loope
insl
lcall
loopne
mov
notl
push
adc
scas
or
test
mov
add
mov
in
pop
mov
jge
ror
dec
mov
add
cmp
mov
in
push
mov
and
push
sub
add
fs
in
mov
mov
jmp
add
add
leave
popa
mov
add
xor
and
mov
pop
adc
inc
jbe
int3
rolb
mov
mov
cmp
mov
push
cmp
sbb
outsl
sub
sti
xchg
fsubl
inc
add
mov
je
imul
push
popf
sub
add
mov
xchg
aas
test
cwtl
fidivs
pop
call
cmp
mov
cmp
int
pop
stc
cmc
push
add
std
in
jno
in
push
add
rolb
mov
jne
dec
mov
and
add
out
xor
mov
xor
mov
push
add
fnstcw
add
stc
cmp
or
stos
je
lret
sbb
inc
out
add
add
pop
add
add
loope
add
dec
or
xchg
add
add
jecxz
inc
addr16
sub
mov
cs
in
scas
jle
add
arpl
push
sub
mov
add
add
pop
popl
mov
push
add
sbb
add
pop
add
addb
pop
pop
aad
dec
xchg
cltd
dec
push
sub
cs
fstl
dec
cmp
pop
out
mov
add
pusha
add
pop
fwait
scas
and
mov
loop
mov
pop
in
jmp
or
lock
fiadds
test
bndldx
stos
inc
lea
add
mov
or
jne
out
out
push
mov
add
stos
imul
mov
lcall
dec
lea
mov
scas
fisubrs
and
pop
xchg
int
jge
into
or
je
adc
xchg
stc
and
mov
add
icebp
fnstsw
aaa
jb
mov
std
addr16
mov
mov
add
fidivl
cmp
jae
pop
icebp
aas
and
mov
mov
cmp
mov
jbe
and
mov
and
pop
fisubs
add
ds
mov
jo
mov
daa
jg
xor
push
cmpsl
into
mov
mov
mov
addb
out
jns
push
daa
enter
lret
dec
pop
sbb
add
mov
dec
out
hlt
dec
lret
cli
addb
push
sub
mov
dec
imul
hlt
sub
xchg
rolb
mov
inc
dec
mov
mov
or
ret
rcr
sub
pop
in
stos
sbb
and
mov
jmp
repz
movsl
sub
dec
rol
mov
mov
fwait
xchg
push
and
mov
idivl
jae
add
pop
fisttpll
add
add
adc
mov
and
add
mov
outsb
sub
jp
mov
jl
add
icebp
fstpl
mov
in
cmp
addb
push
jge
sbb
daa
xor
sbb
cmp
add
mov
mov
and
jl
add
add
add
test
test
mov
add
mov
inc
cmp
lods
jbe
mov
or
repz
in
in
mov
mov
mov
scas
mov
add
pop
lea
mov
mov
enter
inc
inc
gs
push
or
sub
mov
mov
test
jmp
add
fidivrs
add
or
pusha
add
mov
mov
xor
mov
mov
add
mov
mov
mov
mov
mov
repz
mov
dec
push
add
mov
pop
lods
daa
jns
xor
mov
enter
mov
fwait
mov
add
int
fimull
jl
jbe
addb
sub
mov
mov
add
jge
add
cmp
fnstenv
addb
roll
adc
clc
mov
shr
out
cmp
imul
sub
popa
ja
idivb
xor
loope
add
add
mov
aas
jne
mov
add
sbb
sub
cs
jmp
pop
dec
jge
out
jae
test
push
lret
mull
das
addr16
maskmovq
jge
xor
movsl
arpl
addb
mov
add
cmp
add
rorl
add
call
jle
testb
adc
repnz
stos
outsl
push
inc
test
pop
dec
ret
mov
mov
push
addr16
push
add
jns
add
mov
out
ret
pop
outsb
jmp
mov
neg
mov
in
ljmp
repz
add
loop
mov
add
iret
mov
scas
add
sbb
fdivp
add
pusha
add
call
notl
add
int3
mov
in
bound
mov
add
adc
mov
lret
add
sbb
sbb
int
mov
sbb
in
mov
mov
gs
add
mov
cs
cmp
addb
mov
stc
pop
rolb
mov
add
lock
mov
mov
ficompl
add
mov
ds
inc
mov
adc
imul
sahf
jb
mov
popa
fwait
scas
popf
inc
inc
sub
rolb
mov
gs
jmp
mov
int
mov
add
cmc
fwait
cmp
mov
outsb
hlt
xchg
arpl
xchg
ljmp
lods
sbb
add
mov
jae
cmpsl
int
test
repnz
mov
cmp
adc
add
inc
mov
inc
add
call
mov
roll
sahf
aad
mov
push
add
cli
lcall
repnz
fwait
sub
in
mov
ret
lahf
xchg
pop
punpckhbw
sahf
repnz
dec
rolb
mov
aaa
and
das
jg
mov
aam
sub
mov
add
ds
dec
insl
into
icebp
fcom
add
mov
cmp
push
pop
push
hlt
xor
add
mov
add
xor
pop
or
adc
repz
pop
adc
mov
lret
add
shl
mov
aas
mov
mov
loopne
mov
add
mov
mov
int3
pop
data16
mov
add
adc
ffree
add
data16
dec
mov
mov
push
sub
imul
and
add
dec
jns
fisubrl
add
mov
mov
daa
mov
sub
add
clc
and
out
jge
insb
popa
or
add
mov
mov
adc
mov
jo
mov
ret
pop
jae
push
test
mov
add
fsub
test
add
xchg
aad
push
loopne
mov
add
imull
pop
mov
mov
icebp
mov
mov
mov
push
sbb
repz
xchg
dec
jo
mov
scas
pop
cmp
lcall
scas
sub
push
xchg
ret
and
mov
shll
lahf
adc
push
and
mov
sbb
fisttps
inc
add
add
mov
add
mov
xor
mov
mov
add
mov
mov
lahf
dec
xchg
mov
cltd
mov
inc
push
gs
scas
pop
xor
sbb
clc
testb
gs
fbstp
add
jno
mov
sub
das
in
inc
add
dec
push
loopne
mov
sbb
mov
mov
add
and
and
lock
or
push
pop
mov
mov
cmp
add
imul
inc
ja
mov
add
aam
icebp
fmuls
idivl
stos
lods
ret
mov
jmp
add
lods
mov
popf
xchg
lret
mov
fisubs
push
pop
in
scas
jp
add
mov
test
insb
xchg
jl
sub
push
mov
pop
sbb
in
or
mov
aas
sbb
dec
and
mov
sbbl
mov
popa
push
cmpsl
repz
mov
loopne
mov
push
ljmpw
push
add
mov
add
mov
add
lret
mov
mov
add
xchg
je
pop
xor
fnstcw
nop
add
or
add
rolb
popa
scas
jnp
in
jns
movsl
adc
mov
out
ffree
push
add
in
add
in
icebp
jl
pop
mov
mov
sti
popa
iret
push
add
mov
scas
je
xor
mov
sbb
sbb
push
add
or
add
inc
push
test
and
mov
in
cmp
sahf
imul
inc
int
jecxz
fmul
xor
mov
add
mov
adc
mov
imul
add
sub
insb
mov
mov
cmpsl
push
cltd
sub
add
test
ja
push
dec
and
mov
add
cmp
aad
add
aaa
mov
fidivrl
sbb
out
adc
pop
xchg
mov
inc
add
fwait
repz
xchg
pop
inc
sbb
sti
jl
dec
mov
addb
pop
dec
jb
mov
clc
scas
out
push
cld
push
ror
call
lds
add
add
je
fisubs
mov
add
push
jg
inc
scas
adc
mov
fidivs
or
push
ret
push
add
dec
pushf
fadds
lock
dec
sub
xchg
add
and
gs
inc
test
and
inc
mov
cmp
dec
lcall
add
popa
and
mov
stc
ja
jmp
cmp
sbb
push
in
pop
ja
imul
mov
or
push
mov
loope
sbb
lret
dec
pop
mov
bound
mov
or
aas
push
push
jge
cmp
adc
imul
add
add
negb
add
mov
repz
ficompl
mov
xor
mov
and
pushf
scas
adc
and
mov
mov
push
cmp
mov
lret
rcll
stos
or
add
mov
scas
clc
lea
icebp
out
std
daa
push
mov
outsl
mov
dec
stos
dec
mov
mov
add
in
into
pop
bound
mov
mov
cmpsl
and
add
mov
leave
icebp
popa
xlat
and
ret
mov
mov
mov
pop
xchg
dec
inc
cmp
add
sbb
mov
je
and
add
inc
add
rolb
pop
and
mov
popl
add
sbb
xchg
out
aam
icebp
in
cmpsb
cmpsl
cmpsb
les
mov
mov
mulb
add
add
mov
clc
dec
adc
addr16
test
mov
jle
jmp
add
mov
cmp
shl
jl
rep
mov
pop
sbb
add
cmp
outsb
int3
cmp
cs
movsl
push
cwtl
mov
inc
stos
clc
ljmp
test
decb
insl
sbb
xchg
loopne
mov
mov
es
mov
js
mov
or
xor
mov
mov
sub
ljmp
sub
lods
icebp
test
xlat
inc
mov
inc
aam
add
push
inc
fnstenv
mov
mov
je
add
sbb
cld
and
add
push
jmp
add
pop
loopne
mov
jge
add
mov
imul
pop
insb
insb
dec
push
jns
push
cltd
das
adc
mov
mov
and
jo
mov
or
push
adc
dec
roll
mov
stos
fdivl
insb
xor
mov
add
xor
cmp
std
std
xchg
add
add
add
mov
iret
nop
jge
cs
repnz
negl
enter
pop
ja
pop
or
sbb
lea
repnz
rolb
mov
out
add
lahf
mov
mov
pop
or
inc
add
lcall
mov
inc
push
js
adc
xchg
mov
mov
sahf
and
add
xchg
add
xlat
movsl
daa
or
xchg
push
mov
out
orl
add
rolb
dec
cmp
mov
sti
addb
pop
fstpl
pop
mov
lea
push
popa
xchg
xor
xlat
jmp
add
jmp
cmp
jns
imul
pop
mov
add
sub
out
mov
mov
add
nop
add
add
xchg
add
add
adc
mov
pop
xchg
and
jnp
bound
mov
jmp
mov
xor
mov
push
idivb
inc
aaa
jp
adc
push
int
pop
pop
daa
push
mov
test
jmp
test
or
xor
call
mov
add
cs
xor
mov
add
sub
jp
popa
xor
mov
sbbl
xor
cmp
xchg
ljmp
sbb
setns
ret
imul
add
mov
scas
into
jns
push
fwait
inc
add
add
add
mov
addr16
push
addb
test
popa
push
int3
loope
mov
arpl
pushf
cmpsl
mov
dec
and
push
add
cvtps2pd
add
jl
cmp
insl
mov
cmpl
mov
mov
xchg
mov
add
ret
in
mov
xchg
and
stos
cmp
mov
popa
push
dec
add
loop
mov
add
dec
cmp
mov
mov
cld
jae
nop
add
xor
add
mov
add
push
jb
mov
shrl
mov
adc
dec
push
xchg
stc
mov
mov
add
in
add
adc
mov
add
mov
clc
dec
fiadds
mov
add
and
mov
dec
jecxz
xchg
decb
and
push
call
push
sub
insl
and
mov
add
cmp
inc
pop
adc
mov
loopne
mov
add
push
dec
pop
sbb
pop
addr16
arpl
adc
mov
add
mov
rolb
mov
icebp
arpl
rolb
mov
hlt
mov
add
xchg
fistl
mov
imul
mov
add
pop
popf
sbb
push
add
adc
pop
pusha
add
mov
add
inc
jecxz
ret
outsb
fwait
test
add
and
and
mov
dec
or
adc
add
dec
cwtl
mov
iret
nop
add
pusha
add
add
or
loopne
mov
out
mov
in
add
mov
pop
mov
sub
add
dec
mov
test
lahf
loop
mov
push
push
add
mov
loope
outsb
and
mov
add
add
or
mov
cmp
mov
popa
pop
cmp
add
and
sub
lcall
cli
lret
data16
rolb
mov
xor
mov
movsl
fstpl
scas
fidivrl
dec
lods
lcall
adc
ss
or
iret
cltd
js
add
popf
or
mov
int
into
and
mov
xor
mov
add
fstpt
fwait
mov
inc
xchg
imul
mov
adc
mov
out
es
fbld
sbb
sahf
addb
jbe
sub
mov
sub
pop
dec
jb
mov
or
add
mov
jb
mov
jmp
mov
fidivl
mov
xchg
dec
dec
sbb
or
mov
mov
and
add
jl
add
in
sbb
ja
in
inc
pusha
add
add
add
dec
sbbl
lock
sub
adc
mov
rorl
das
loop
mov
cmp
add
jae
cld
int3
cli
push
test
mov
add
lret
adc
mov
pop
adc
lret
sub
push
dec
lods
cmp
fwait
mulb
add
xchg
sbb
icebp
pop
nop
add
lahf
out
add
dec
arpl
push
test
sub
mov
mov
repz
jnp
mov
push
push
lret
jae
dec
cmp
xor
inc
push
cmp
xor
mov
add
xchg
mov
add
mov
push
add
mov
mov
in
sbb
sahf
movsb
pop
icebp
pop
pop
clc
cmpsl
inc
cld
sub
cmpsl
sub
jp
mov
add
cmp
pop
inc
add
add
mov
xlat
jnp
or
push
inc
cltd
or
cmpsb
ret
xchg
dec
sti
dec
ss
push
cmp
jae
add
lahf
pop
push
sub
mov
repz
add
push
pop
mov
iret
pop
pop
fidivs
add
mov
add
pop
repnz
sub
add
lods
cmp
btl
ficomps
int3
cmp
sbb
pop
mov
mov
out
add
loopne
mov
cltd
je
add
lds
mov
mov
rolb
mov
jmp
push
add
mov
add
daa
dec
push
mov
loopne
mov
mov
cmp
ljmp
mov
and
add
cld
repnz
mov
sub
call
aad
pop
scas
jecxz
mov
lcall
mov
mov
repnz
push
add
movsl
addb
sub
cld
push
add
cmp
subl
in
imul
add
scas
cmp
dec
xchg
add
mov
cs
and
mov
fdivrs
cwtl
clc
stc
pmulhuw
mov
mov
mov
push
fcoml
add
inc
sbb
out
out
push
xchg
and
mov
add
pop
popa
popf
jne
push
add
adc
ds
adc
add
shl
int
cltd
sahf
daa
dec
mov
xor
mov
data16
gs
push
dec
mov
or
repz
add
mov
add
loope
notb
sbb
adc
out
das
xor
add
loop
mov
pop
cmp
mov
dec
stos
inc
orl
push
das
fildll
popa
xor
ljmp
add
mov
fcompl
add
mov
xor
add
jge
add
jp
adc
xchg
add
push
out
insl
push
add
dec
fbld
into
imul
hlt
inc
add
fisttpl
ret
call
mov
fsubs
mov
movsb
jg
cld
subl
mov
or
leave
xor
add
mov
push
cli
dec
jo
mov
addl
add
jnp
fcomip
shrl
stos
sub
loopne
mov
mov
add
mov
pop
push
or
sub
jl
stos
xchg
add
rorl
insl
push
repz
mov
mov
jbe
add
rolb
lock
cmp
cs
mov
outsl
jb
mov
clc
stos
int
bound
mov
push
add
sub
mov
dec
jne
add
js
fcmove
addb
jne
outsb
pop
pusha
add
mov
out
mov
mov
and
addr16
mov
mov
mov
mov
xlat
cmpsb
addb
les
dec
cwtl
sbb
xor
mov
aad
das
loope
movsb
add
movsl
xor
ds
add
loop
mov
fwait
les
jbe
or
mov
js
pop
pop
lahf
adc
cmp
sti
addb
push
filds
adc
lods
push
sarl
leave
cmp
jmp
mov
in
sbb
cmp
movsl
aaa
jb
mov
xor
mov
cmp
aaa
imul
jecxz
add
push
mov
adcl
daa
and
call
iret
iret
fsts
mov
leave
data16
call
xchg
mov
add
lret
lds
sub
add
mov
nop
add
xlat
xor
lret
fildll
fcoml
jo
mov
popf
pop
ret
into
push
add
push
mov
mov
mov
inc
add
movsb
add
add
dec
insl
std
pushf
enter
mov
add
cmpsb
scas
enter
popf
repz
imul
insl
sub
dec
jl
push
inc
add
xchg
xchg
push
push
or
scas
js
in
lret
scas
or
xchg
dec
push
add
inc
iret
jle
lret
sbb
sahf
scas
test
loope
out
mov
sbb
adc
mov
push
add
scas
or
mov
nop
add
pop
sbb
insb
mov
ja
add
add
int
add
and
jp
add
add
mov
bswap
out
sub
and
xor
mov
xchg
cmp
dec
pop
dec
sub
push
mov
or
lahf
loope
psubw
stos
jmp
add
mov
in
out
lock
jecxz
aad
fimull
addb
les
jecxz
inc
scas
leave
cmp
and
int
dec
sbb
xchg
add
jae
in
push
xchg
mov
xchg
insl
pop
xchg
cmp
add
xchg
test
add
jge
aaa
ljmp
xor
mov
pop
lcall
pop
aas
imul
sti
cwtl
icebp
int3
je
adc
out
ret
idivl
mov
iret
out
add
xor
mov
add
pop
inc
sti
lret
adcl
add
add
jl
lock
mov
fcmove
xor
mov
add
loop
mov
pop
outsl
mov
mov
ja
pop
jno
jae
mov
push
cmp
sahf
pop
jmp
and
mov
adc
and
sub
popf
repnz
mov
xor
adc
ret
cmp
push
scas
push
dec
imul
ss
out
xor
stos
jle
cmp
push
leave
add
mov
jmp
jl
rolb
mov
cld
int3
sub
add
push
ljmp
sahf
sub
mov
insb
out
scas
pop
mov
add
mov
push
mov
mov
add
popf
jmp
std
sbb
aam
adc
mov
mov
xor
rolb
mov
add
bound
mov
or
inc
mov
jo
mov
clc
mov
jge
lcall
jno
mov
mov
jl
mull
xchg
mov
fcoml
jns
mov
mov
sti
pop
push
add
ss
dec
push
das
shrl
sahf
ss
cli
loope
push
mov
inc
inc
icebp
cmp
adc
cld
in
lods
push
add
aaa
cs
jbe
int3
lea
or
xor
mov
call
cmc
cmpsl
movsb
test
leave
fscale
push
add
pop
or
add
mov
xchg
pusha
add
ficoms
mov
loope
pop
cli
xchg
in
imul
add
add
mov
dec
es
aaa
fbld
push
aaa
and
cmp
pop
jp
add
inc
push
inc
pop
sub
add
call
add
add
mov
add
lahf
les
or
cs
sbb
aad
lcall
mov
mov
into
popa
adc
inc
add
add
and
mov
outsl
adc
mov
sub
xor
mov
adc
push
ds
inc
mov
dec
iret
aam
iret
in
outsl
lea
adc
mov
push
add
lahf
xchg
call
mov
leave
jle
in
sub
xor
mov
add
loop
mov
xor
cwtl
leave
push
pop
and
mov
add
xchg
popf
sbb
mov
mov
mov
int3
add
pop
dec
out
mov
pusha
add
inc
cmp
add
mov
push
pop
ret
jl
mov
lock
repnz
mov
test
leave
jl
sbb
jecxz
and
or
inc
sbb
xchg
add
mov
and
lcall
je
pop
pop
jmp
mov
mov
ljmp
push
hlt
inc
add
es
add
lcall
mov
je
inc
jp
push
add
or
push
nop
add
add
aaa
mov
add
cs
cmpsb
cmpsl
dec
push
add
sbb
sub
mov
sti
add
or
cmp
and
lret
dec
jge
pop
mov
xchg
lods
jno
pop
xchg
and
mov
sub
mov
add
add
jmp
sbb
and
xlat
lea
fistpll
dec
enter
test
jmp
push
xor
into
sbb
popa
stos
pushf
out
add
dec
loope
jno,pn
add
sbb
fidivs
pop
loop
mov
cwtl
mov
jb
push
or
and
fistpll
or
cmpsl
and
mov
or
lret
scas
mov
faddl
adc
mov
imul
mov
mov
pop
inc
inc
mov
cmp
push
xchg
add
add
adc
insl
pop
fwait
jne
add
xor
xor
add
lock
imul
shr
mov
jp
jecxz
add
iret
sub
leave
or
or
fs
jl
ss
pop
mov
aad
cwtl
lock
add
lret
rolb
mov
cld
mov
mov
or
add
and
mov
jo
mov
sub
inc
dec
xchg
fdivs
cmp
sbb
rolb
mov
add
mov
rolb
mov
out
adc
mov
nop
add
add
dec
lret
mov
mov
add
sbb
lods
cs
inc
inc
add
popa
push
scas
inc
add
push
pop
jl
cmpsl
cld
inc
add
or
inc
sub
add
out
adc
mov
fisttpl
pop
mov
mov
xchg
dec
pop
mov
mov
add
in
xchg
mov
add
rcrl
mov
inc
rorl
lea
test
add
jbe
repz
add
push
out
push
pop
out
cmpsl
addb
scas
ljmp
mov
mov
push
test
and
mov
dec
adc
mov
push
data16
inc
add
add
or
sti
jecxz
xor
roll
outsb
addb
jge
add
mov
mov
cmp
add
pushw
stos
cmp
jecxz
pop
cltd
aas
nop
add
mov
lods
pop
insl
lret
fisttpl
cmc
sub
mov
in
mov
pop
popf
mov
repz
mov
mov
and
mov
xchg
fxam
jle
sbb
fst
aad
add
int
gs
les
loopne
mov
gs
les
pop
sub
sub
jg
int
aaa
pusha
add
cltd
push
adc
mov
aam
add
int
out
fisttpll
and
mov
cmp
mov
cli
mov
loop
mov
je
outsb
sub
and
ret
sbb
cmp
pusha
add
pop
into
addr16
aad
out
add
ret
ds
aas
in
dec
imul
ss
sbb
clc
or
push
xchg
add
mov
insl
cmova
mov
mov
and
mov
orl
add
insl
push
add
sub
in
add
pop
or
or
jb
mov
pop
mov
mov
mulb
mov
mov
pusha
add
mov
insl
jg
add
jmp
add
adc
sbb
dec
test
add
mov
test
jp
cmp
enter
xor
add
mov
add
test
mov
dec
inc
add
out
sub
imul
mov
add
xor
fsts
mov
xchg
enter
add
sub
repnz
mov
mov
sub
push
add
rcr
adc
mov
jb
mov
push
push
mov
push
mov
add
icebp
push
scas
int3
fcmovnbe
push
pop
xor
cmp
mov
xor
mov
mov
jecxz
add
filds
add
arpl
push
add
jmp
push
test
add
xor
xchg
pop
dec
fimull
arpl
stos
dec
js
scas
mov
mov
add
fs
or
add
mov
add
xchg
add
mov
mov
add
mov
hlt
push
add
imul
mov
mov
mov
inc
add
mov
mov
pop
shrl
mov
add
lcall
jns
test
mov
or
call
cmp
ja
aad
fsubrs
dec
movl
cmp
add
add
cwtl
inc
xchg
js
adc
xchg
push
fistps
add
cs
xchg
sbb
mov
add
inc
adc
mov
aaa
out
jno
add
mov
xchg
add
sbb
int3
lret
std
sbb
cli
xchg
add
enterw
roll
dec
mov
mov
mov
push
add
out
add
js
rolb
mov
dec
push
bound
mov
add
xchg
push
adc
mov
add
jl
pop
cltd
cmp
out
mov
or
shll
mov
add
mov
and
mov
xchg
popa
add
mov
rolb
pop
mov
xor
mov
xchg
jns
in
test
mov
repz
mov
pop
and
mov
pop
push
lods
mov
or
test
jle
dec
pop
outsb
pop
mov
sub
popa
shll
popf
lret
adc
mov
lea
adc
mov
mov
add
xchg
mov
add
push
inc
cmp
adc
fbstp
ret
in
js
mov
or
or
pop
shr
sbb
aam
mov
test
mov
jmp
aas
inc
mov
out
ss
mov
dec
lahf
xchg
add
mov
mov
nop
add
cld
scas
arpl
add
outsl
sbbl
loop
mov
xchg
aas
dec
stc
insl
stos
and
jmp
add
mov
mov
add
mov
push
add
mov
aam
aad
add
mov
int3
xchg
in
cmc
lds
lcall
add
addb
sub
bound
mov
mov
in
movsl
fwait
jp
testb
sbb
rcrl
les
add
cmp
sub
push
gs
jb
mov
lahf
inc
cmp
jmp
add
clc
xchg
add
mov
jbe
icebp
test
add
jae
sbb
repz
negb
popa
test
lcall
rcr
fwait
sub
pop
inc
jmp
add
add
inc
in
cmpsl
insb
dec
popf
aad
push
add
repz
negl
sbb
out
inc
add
inc
push
add
int
adc
mov
decb
xchg
cmp
mov
mov
scas
add
outsb
and
call
mov
xchg
call
ret
sbb
inc
jb
mov
insl
es
inc
xchg
repnz
cs
sti
sbb
rolb
mov
or
sbb
push
mov
sub
lods
rolb
mov
aam
add
ss
shr
push
xchg
jl
dec
ficomps
mov
add
adc
jae
add
test
and
mov
mov
mov
pop
pop
mov
mov
mov
mov
add
fimuls
call
mov
add
mov
mov
add
ret
sbb
mov
jae
out
pop
insb
neg
jno
sarl
mov
mov
icebp
mov
mov
aad
cmpsb
push
ret
ja
add
addr16
addb
mov
fisubrl
jle
sub
add
sub
ds
mov
add
mov
rep
fistpll
nop
add
xchg
add
pop
cmpsb
or
xor
in
mov
repnz
aaa
addl
add
int3
shll
mov
mov
lret
mov
mov
bound
mov
add
imul
pusha
add
add
fs
js
xlat
inc
icebp
jo
mov
xlat
mov
mov
add
in
push
pop
inc
add
mov
enter
add
mov
mov
lea
mov
adc
push
pop
and
add
add
fdivrp
fmuls
add
mov
push
outsb
add
mov
inc
add
adc
mov
mov
sti
rolb
and
jmp
xlat
mov
jecxz
sbb
jge
aad
cs
add
jge
call
mov
out
out
addb
adc
mov
add
mov
jae
mov
add
mov
clc
and
mov
add
test
pop
mov
inc
add
cli
add
enter
cmp
mov
popl
add
fs
jp
adc
pop
pop
or
add
imul
bound
mov
add
or
or
adc
add
mov
add
popf
add
sub
loop
mov
mov
mov
hlt
dec
outsb
jle
pop
mov
stc
mov
pop
loop
mov
int
add
outsb
push
cmpsl
add
mov
add
add
enter
add
loop
mov
fs
std
and
mov
jle
into
scas
jle
xchg
add
mov
or
cwtl
inc
add
mov
inc
lea
mov
push
cwtl
add
pop
mov
cmp
pop
push
mov
fs
gs
call
add
cld
sbb
cltd
jo
mov
call
push
mov
add
jmp
shll
or
stc
mov
pushf
cmp
cmc
cmp
push
adc
mov
mov
push
mov
sbb
fidivl
mov
das
cmp
test
add
lock
aad
sub
inc
movsl
push
loope
add
ljmp
inc
in
cli
cmp
or
iret
jne
mov
outsl
dec
inc
or
adc
mov
mov
ret
fs
loopne
mov
clc
push
add
shll
and
mov
xadd
mov
mov
stos
or
push
push
movsb
scas
and
mov
ds
pop
jp
data16
out
aaa
emms
stc
in
inc
push
adc
add
xchg
add
xchg
addb
call
jo
mov
fcmovbe
cmp
mov
push
add
xchg
mov
cmp
inc
jo
mov
and
mov
ss
mov
mov
and
mov
adc
mov
sbb
aas
mov
add
outsl
repnz
cwtl
rolb
mov
nop
add
xchg
inc
add
std
add
add
pop
addb
mov
add
pop
daa
mov
jge
add
out
enter
jge
imul
outsb
loop
mov
out
push
ss
add
mov
into
pop
jle
mov
inc
cltd
inc
leave
mov
mov
mov
add
add
push
inc
pop
add
inc
bound
mov
movsl
je
into
jp
test
rolb
mov
push
push
sub
jne
ret
popf
mov
inc
cwtl
xlat
rcll
push
enter
add
add
js
mov
mov
mov
inc
adc
das
ds
out
pop
mov
add
cs
or
pop
iret
aam
mov
inc
xchg
dec
arpl
add
scas
lods
ljmp
pusha
add
xchg
iret
in
iret
inc
daa
xchg
sub
lds
dec
outsb
push
addb
and
mov
fs
mov
mov
adc
mov
pushf
psubusb
push
adc
addr16
sbb
push
push
fs
rol
cld
loopne
mov
cltd
or
scas
add
mov
std
mov
inc
jmp
pop
add
out
mov
inc
inc
lock
xchg
xor
add
add
dec
and
jecxz
repz
mov
add
fs
mov
jl
loope
aaa
sbb
roll
add
add
addb
repz
in
mov
sbb
scas
xchg
pushl
jo
mov
ret
stos
out
adc
add
mov
mov
pop
rolb
and
mov
sarl
mov
pushf
and
cltd
addb
lock
mov
dec
scas
dec
adc
mov
test
sub
imul
test
mov
mov
pop
jmp
add
in
add
pop
repnz
repnz
mov
fs
repz
and
mov
sub
stc
decb
add
adc
xor
xor
mov
cwtl
jmp
sbb
add
add
mov
rolb
mov
loopne
mov
addb
lods
sbb
add
sbb
subl
mov
mov
dec
xchg
xor
add
mov
adc
mov
out
xor
xor
add
mov
sub
leave
inc
fadds
add
loope
sub
sahf
fs
mov
mov
mov
call
mov
popf
rolb
mov
fsub
add
add
dec
xor
mov
mov
mov
je
mov
xchg
add
pop
adc
or
pop
and
negb
inc
pusha
add
add
xchg
in
add
outsl
and
mov
ret
hlt
pushf
je
pop
ss
aam
add
mov
add
loop
mov
sub
cltd
jae
add
jno
enter
cwtl
xchg
leave
cmp
in
shll
add
cmp
stc
lods
cmp
inc
inc
add
ss
scas
ret
addb
movswl
inc
icebp
out
shl
adc
pop
cmpsb
dec
dec
lock
loop
mov
scas
jne,pn
cld
movsb
and
mov
pop
cs
test
mov
or
cmpsl
test
jns
xchg
ljmp
sti
mov
adc
iret
lods
xchg
sbb
inc
add
mov
lock
test
add
add
pop
pop
cmc
sub
and
add
inc
push
dec
rcrl
arpl
sbb
add
and
out
mov
data16
mov
out
stos
or
sbb
push
and
adc
add
outsl
bound
mov
or
xor
ss
jb
mov
sbb
add
xchg
push
and
adc
mov
lea
cltd
test
add
icebp
sbb
or
add
add
mov
clc
mov
mov
mov
out
push
jae
mov
mov
push
add
movsb
sub
add
xchg
inc
or
xchg
stos
fildll
sbb
inc
xchg
add
mov
mov
bound
mov
add
mov
clc
aad
inc
cltd
cmp
mov
mov
xchg
jne
add
ss
pop
push
add
push
add
ret
mov
xchg
push
inc
add
mov
xchg
ret
mov
push
cld
popa
pop
mov
stc
jge
rcl
add
add
fisubrl
mov
mov
rolb
mov
mov
ret
or
pushf
sbb
add
add
js
movsl
mov
adc
js
pop
fmuls
je
rcrl
insb
addr16
jb
mov
pushf
std
mov
mov
adc
repz
movsb
pusha
add
add
add
test
ret
andl
pop
push
add
mov
jmp
pushf
inc
scas
call
jno
dec
jge
add
stos
mov
pop
adc
les
lock
cmp
add
lret
stos
mov
rolb
daa
mov
add
cli
add
mov
scas
rolb
mov
out
mov
loopne
mov
add
add
and
mov
mov
mov
sbb
add
mov
mov
push
insb
sbb
mov
sub
add
lret
loop
mov
out
add
aas
inc
add
jno
pop
movsl
or
mov
mov
xchg
sahf
xlat
jae
int3
mov
aad
add
add
mov
add
xor
mov
pop
je
jne
leave
jg
add
stos
sub
and
les
popf
hlt
adc
stos
enter
xchg
mov
loope
add
cltd
lahf
lock
fs
int3
sbb
mov
test
mov
clc
cmp
cmpsl
jp
add
mov
jbe
lret
mov
add
test
stos
adc
mov
jnp
add
pop
in
loop
mov
add
insb
arpl
mov
inc
inc
lock
xchg
or
movsl
and
pop
or
mov
mov
sbb
pop
xchg
add
add
out
lret
cwtl
cltd
mov
mov
and
mov
jbe
ds
push
out
xor
mov
mov
pop
inc
sub
mov
mov
fldl
jg
mov
dec
push
cmp
mov
jbe
aas
rolb
fs
sbb
mov
jmp
bound
mov
jns
xchg
sub
add
add
mov
loope
add
daa
je
popa
sub
daa
imul
jo
mov
movsb
sub
cmp
add
push
pop
mov
add
mov
cmp
fs
add
mov
jge
fcmovu
addr16
sbb
add
adc
mov
mov
lock
test
push
movsb
sub
add
mov
fildll
ds
les
jge
dec
in
and
push
xchg
mov
std
xchg
dec
add
out
test
int3
test
pinsrw
add
mov
and
push
mov
mov
icebp
xchg
jo
mov
insl
shlw
jae
pop
jle
sub
add
jno
bound
mov
mov
aaa
xchg
imul
imul
push
idivb
add
jecxz
ss
adc
das
repz
mov
add
xchg
mov
mov
in
add
xor
cli
xchg
add
mov
add
loope
xor
sub
sbb
cmp
add
popf
pop
xchg
mov
cmp
loopne
mov
lahf
roll
pop
fwait
push
lds
mov
out
jl
into
lret
sti
mov
xchg
mov
push
add
inc
jecxz
cwtl
push
add
and
mov
sbb
jnp
lods
adc
dec
jne
scas
jo
mov
repnz
popa
inc
add
add
mov
mov
cmp
pushf
aam
repnz
mov
arpl
add
dec
fsubs
mov
jmp
scas
mov
mov
inc
into
mov
lret
sahf
add
aas
or
sbb
std
add
fistps
cmp
imul
test
xor
add
lods
jg
jl
add
mov
jne
pop
mov
movsb
gs
popa
dec
aaa
and
mov
mov
inc
lahf
addb
jmp
fadds
popf
sbb
cmp
add
mov
mov
add
push
add
sub
add
in
outsl
jnp
sti
mov
aaa
std
pop
mov
add
inc
lods
notb
jge
addb
mov
mov
mov
and
xchg
pop
addl
xchg
jmp
addb
sbb
fsubrp
mov
popa
mov
push
mov
imul
cmp
add
popf
add
mov
addb
insb
or
lret
mov
mov
mov
aad
cwtl
ja
lahf
or
pop
fstl
sbb
inc
xchg
repz
scas
push
mov
mov
dec
cmpsb
push
addb
movl
xor
xor
jne
iret
or
add
cld
xchg
scas
jbe
lock
mov
movl
and
aam
mov
jecxz
xchg
je
pop
cmp
add
ret
arpl
cli
leave
mov
imull
pop
outsb
jg
push
add
add
jge
mov
mov
push
add
aas
or
addr16
sahf
popf
push
roll
stos
imul
adc
insl
mov
and
test
add
imul
lea
iret
std
mov
ret
sbb
add
add
lahf
mov
int
add
inc
cmp
repz
cli
lea
inc
or
push
add
cmpsl
jae
mov
mov
repz
lret
push
rolb
mov
mov
xchg
mov
jg
jae
inc
add
adc
mov
add
cs
mov
pop
test
jb
mov
add
lret
xchg
add
mov
add
dec
cs
xor
mov
add
jnp
push
pop
lret
inc
adc
push
add
add
mov
add
dec
repnz
mov
add
cmp
ret
rorl
add
sbb
loopne
mov
stos
or
fldt
loope
jne
inc
mov
push
adc
or
cld
mov
fldpi
hlt
scas
int3
or
add
lcall
jmp
push
add
mov
ret
dec
lock
testl
add
push
and
lods
repnz
push
add
dec
jae
add
add
les
cmp
dec
in
insl
pop
iret
mov
add
mov
and
push
leave
xor
mov
movsl
mov
das
sbb
add
mov
test
add
mov
insb
cmp
mov
push
xchg
inc
fldl
and
add
mov
mov
add
mov
cs
jne
sahf
nop
add
xor
pop
cmp
push
pop
adc
mov
push
mov
test
inc
cld
and
mov
mov
les
iret
lret
test
mov
into
fmull
adc
lods
rep
loope
or
inc
add
pop
cmpsb
or
in
xchg
addb
inc
mov
aaa
xlat
sub
sub
ja
push
orl
mov
mov
mov
mov
add
aaa
or
add
mov
dec
xchg
add
cmpsl
cli
xchg
sbb
add
inc
xchg
addr16
pop
xchg
pusha
add
cmp
xor
pusha
add
cwtl
sahf
rolb
mov
addr16
add
mov
jg
add
mov
jnp
add
int
test
iret
loopne
mov
dec
jmp
xor
addb
push
mov
pop
lret
or
bound
mov
add
mov
mov
test
popw
pop
and
pop
push
push
out
jg
inc
xchg
add
jnp
push
mov
repz
dec
outsb
dec
push
pop
cmp
mov
xor
mov
add
mov
mov
add
mov
dec
rcr
and
add
or
add
arpl
mov
icebp
enter
test
lahf
hlt
cmp
out
add
cli
in
test
push
push
arpl
add
pop
mov
mov
scas
fadds
sub
fbstp
rolb
xchg
mov
inc
add
mov
mov
add
arpl
push
add
sbb
mov
into
mov
add
mov
divb
enter
insb
mov
inc
out
popa
dec
in
fimuls
test
jecxz
cmpsl
aaa
dec
popf
aaa
mov
mov
std
pop
repz
mov
out
push
cltd
dec
mov
out
out
inc
mov
xchg
jno
add
xchg
add
cmp
cmpsb
adc
sbb
add
je
add
mov
in
add
add
push
jl
add
outsl
rolb
mov
loop
mov
hlt
inc
pop
das
fnstsw
repnz
xchg
push
xchg
mov
and
das
addl
mov
mov
add
pop
or
xchg
jecxz
call
push
leave
imul
xor
mov
jb
mov
nop
add
lods
stos
xor
mov
push
and
mov
lock
imul
mov
dec
dec
lcall
stc
hlt
xor
xchg
in
adc
pop
pop
les
sbb
add
mov
dec
cmp
movhps
inc
test
add
xor
dec
xchg
mov
data16
jmp
jmp
pop
gs
xchg
jle,pn
lods
push
add
mov
mov
cmp
lock
adc
push
jl
lret
nop
add
test
jp
jbe
mov
mov
cwtl
in
xor
mov
dec
mov
mov
mov
add
insl
add
inc
add
mov
mov
add
add
adc
add
hlt
int
rolb
pusha
add
addb
and
mov
arpl
mov
test
mov
sub
mov
adc
add
cmp
stos
test
ficompl
push
add
jns
or
in
jo
mov
jb
mov
push
out
lods
or
clc
push
mov
mov
std
mov
mov
xchg
aam
add
or
pop
mov
sub
inc
jmp
xchg
in
lcall
mov
mov
sub
mov
mov
mov
xchg
movsl
lods
pop
loope
movsb
rolb
mov
add
jp
sbb
adc
add
sbb
imull
clc
or
add
xlat
or
pop
testl
test
jb
mov
pop
sti
or
cltd
pop
sub
in
add
outsb
add
jae
cli
repnz
movsb
lods
aas
add
xor
mov
mov
add
adc
sub
stc
fisubs
push
jmp
mov
jecxz
or
inc
imul
das
popf
in
xchg
xchg
insl
aad
sub
add
std
add
sbb
add
addb
lods
push
pop
call
std
pop
adc
mov
add
xor
cs
pop
movsb
nop
add
hlt
data16
cmp
fisttpll
pop
je
sbb
sub
and
or
or
ret
cmp
dec
filds
mov
pop
out
sub
add
or
movsl
jbe
sub
cmp
xchg
adc
mov
add
mov
add
push
sub
mov
mov
and
inc
cs
mov
jg
and
mov
iret
inc
and
stos
mov
mov
addb
add
add
mov
out
xor
test
popa
negl
push
and
add
mov
filds
add
jmp
inc
hlt
adc
mov
cmp
xor
dec
inc
add
mov
mov
clc
mov
mov
insl
test
cld
xor
pop
nop
add
xlat
jno
add
mov
cli
add
adc
xchg
in
xor
mov
cmp
adc
mov
inc
std
test
mov
in
jo
mov
pusha
add
out
rcll
and
push
add
xor
inc
movswl
sti
xchg
jo
mov
pop
xchg
inc
mov
or
add
cmp
xor
aaa
adc
jg
push
cli
fstpl
in
pop
shll
add
xchg
lcall
cld
jno
add
add
mov
mov
xchg
jbe
cmp
stos
sahf
adc
mov
adc
mov
nop
add
jl
mov
fcoms
xor
add
mov
add
push
orl
jb
mov
push
push
testl
mov
mov
pop
or
call
insb
jp
ja
iret
cmp
addb
cmc
sahf
insl
pop
or
sbb
aaa
pop
xchg
mov
fwait
and
imul
inc
andl
xor
mov
scas
fidivrl
inc
cs
add
jnp
je
mov
dec
imul
imul
cmp
cs
sub
aad
outsl
mov
add
testl
fs
mov
add
stc
lock
xor
push
and
js
dec
in
fs
add
and
divl
in
pop
pop
aad
and
rcll
push
aas
test
xchg
inc
adc
bound
mov
push
mov
sbb
inc
in
mov
mov
add
fsubrl
int3
fdiv
xchg
sbb
xchg
fisttps
add
outsl
ret
jg
jnp
fwait
mull
aas
loop
mov
loope
inc
and
mov
add
sbb
les
add
mov
xchg
add
mov
push
add
mov
popa
jns
jmp
fstpl
cmp
inc
add
dec
je
and
mov
add
jle
adc
mov
std
and
mov
in
test
add
mov
gs
jns
jl
or
fisttpll
sub
or
and
mov
xchg
mov
int3
xchg
out
stos
inc
sub
loopne
mov
addl
add
mov
add
mov
pop
push
movsb
dec
ja
mov
mov
jge
ja
add
mov
push
repnz
pop
or
push
add
mov
pop
dec
jmp
orl
mov
rolb
movsb
mov
repnz
or
es
aaa
mov
add
sbb
add
cmp
add
lahf
and
mov
mov
call
sub
mov
cmc
adc
ret
and
sti
insl
jmp
and
cmpsb
xor
ja
cwtl
xchg
jne
in
loopne
mov
jg
xchg
in
add
arpl
mov
loopne
mov
pop
mov
dec
std
or
lea
stos
data16
fldt
addb
fsts
add
sbb
pop
fs
out
rolb
pusha
add
jp
or
ja,pt
lcall
rcl
add
gs
outsl
and
das
sbb
fwait
rolb
mov
mov
lret
push
arpl
aas
push
jg
xchg
pop
xor
lret
leave
xchg
scas
aam
add
mov
mov
add
mov
aaa
faddl
movsl
or
mov
mov
push
inc
add
rolb
mov
adc
rolb
into
enter
cmc
or
add
mov
add
in
inc
mov
mov
fstp
push
or
xchg
mov
add
shl
out
popf
jo,pn
mov
push
add
leave
rcrl
repz
dec
or
cltd
pop
imul
pop
dec
cmp
mulb
add
and
mov
mov
stos
sbb
pop
std
xor
mov
mov
jb
mov
sti
or
add
push
scas
outsl
movsb
enter
mov
outsl
and
addr16
mov
pushf
pusha
add
xor
mov
mov
pop
fmuls
and
mov
add
xchg
pop
test
mov
sub
pushf
out
out
ja
dec
xchg
add
lahf
add
mov
mov
mov
mov
cmpsb
adc
mov
repz
inc
in
xchg
addb
mov
add
or
mov
push
js
xlat
jno
sbb
test
jno
mov
fiadds
add
rolb
push
mov
mov
jl
add
rorl
add
push
imul
outsl
sub
add
mov
clc
aam
dec
jbe
xor
mov
mov
add
xor
mov
lret
sbb
mov
adc
mov
mov
or
je
cld
dec
or
lcall
ret
imul
jge
cmp
xchg
leave
adc
xchg
xor
adc
mov
add
cmp
cmp
jmp
xchg
pop
scas
roll
and
mov
pop
mov
mov
jge
add
cmp
push
add
push
sub
bound
mov
hlt
mull
mov
add
inc
lcall
mov
xchg
in
xchg
int
add
fisubrs
sub
sbb
add
jne
and
mov
push
dec
lods
test
out
rolb
lret
lcall
jmp
pop
mov
mov
adc
mov
sub
daa
push
add
add
mov
add
push
xchg
lds
push
decl
push
and
fs
jne
inc
aas
jnp
loopne
mov
or
lahf
jnp
lock
mov
push
xchg
xchg
cmpsb
lds
or
sbb
fistpll
pop
cmp
les
add
add
imul
xchg
addb
daa
imul
in
lcall
arpl
xchg
out
add
mov
data16
add
cmp
mov
add
mov
int
mov
add
adc
je
push
iret
jge
test
push
mov
lret
jl
cltd
stc
sti
add
or
adc
xchg
addr16
mov
mov
mov
add
loope
loop
mov
push
mov
fwait
jns
push
ss
xlat
mov
xor
xor
mov
repz
icebp
mov
cwtl
cwtl
push
jno
cmp
scas
mov
inc
mov
mov
repz
stos
cmp
pop
insl
test
inc
add
fs
add
fdivp
push
add
push
mov
add
jecxz
xor
cli
xchg
sarl
pop
xchg
lret
cmp
add
mov
add
test
mov
imul
lahf
mov
fldt
clc
and
std
cmc
bound
mov
btsl
push
rolb
rolb
mov
inc
adc
mov
xlat
std
out
cmp
ret
inc
add
xchg
std
jnp
ljmp
adc
mov
add
push
add
xor
mov
xor
pop
je
div
popf
adc
adc
jnp
adc
pop
add
out
mov
fisttps
mov
xchg
lock
clc
scas
mov
jecxz
adc
sub
test
repnz
dec
sbb
jbe
xlat
cltd
outsb
lods
xor
sub
adc
mov
mov
fimull
jg
mov
data16
mov
cmp
add
add
rolb
mov
mov
lock
hlt
cmpsl
cmp
stc
test
dec
stc
cmpsb
loope
fstl
adcl
mov
pop
aam
hlt
lock
test
fs
xor
mov
lahf
int
jns
cli
pusha
add
jmp
jge
aaa
rcrl
out
ret
add
lret
addl
ret
out
addb
pop
enter
inc
pop
test
push
add
xor
leave
adc
pop
mov
imul
std
mov
mov
nop
add
fidivrs
mov
add
or
stc
call
mov
insl
stos
jecxz
rolb
mov
add
arpl
push
subl
daa
or
and
cmpl
rolb
mov
and
mov
sub
addb
fstps
not
test
addl
call
cmp
jl
xor
mov
rorl
and
mov
mov
inc
add
add
mov
pop
push
mov
mov
push
cli
cmp
es
sahf
jae
sarl
sub
add
mov
in
sub
add
add
lock
rolb
insb
movsb
mov
add
mov
adc
mov
xchg
gs
stos
into
xchg
push
cmp
xchg
mov
jnp
push
inc
ffree
pushf
or
jne
sti
xor
mov
inc
out
xchg
add
cmp
andl
mov
loopne
mov
movsb
mov
mov
and
stc
pop
dec
jg
xchg
or
mov
jl
ror
dec
lcall
push
das
or
sarl
sti
aaa
sbb
roll
xchg
mov
add
fwait
cwtl
cs
xor
add
mov
lret
popf
jmp
js
or
cmp
mov
sub
lret
and
jno
add
sub
add
mov
mov
jb
mov
sub
cmp
mov
add
or
and
mov
xchg
mov
jno
popf
loopne
mov
iret
nop
add
cli
jb
mov
and
mov
dec
ja
add
jbe
jno
frstor
les
mov
mov
mov
int3
fs
add
push
push
out
add
push
aad
outsl
fistps
and
lret
xor
mov
lret
addb
mov
add
mov
sub
daa
leave
add
xlat
push
xchg
dec
add
push
int3
and
mov
jp
aam
or
xchg
add
gs
imulb
repz
add
mov
mov
mov
and
pusha
add
sbb
fsubrl
pop
idiv
mov
mov
mov
add
mov
xchg
add
xchg
mov
xor
and
mov
add
ret
sbb
hlt
sub
or
addb
inc
icebp
mov
mov
dec
mov
mov
lahf
pop
inc
movsl
mov
push
adc
cli
insl
dec
imul
add
loope
sarl
in
pop
adc
add
stos
in
cmpsb
mov
jb
mov
push
sahf
pop
mov
outsl
pusha
add
push
cmp
les
add
xchg
add
out
outsb
cmpsb
mov
mov
fisubs
lahf
loop
mov
push
sbb
mov
adc
mov
lock
movsl
mov
test
mov
cmp
mov
push
inc
bound
mov
mov
ja
loope
hlt
hlt
mov
and
dec
sub
push
xor
mov
jno
dec
loop
mov
mov
add
lret
sbb
cs
out
movl
xchg
imul
add
mov
mov
sti
jno
outsl
add
mov
mov
stos
and
xchg
addb
xor
mov
hlt
mov
xchg
dec
pop
sub
add
fsub
inc
add
fisttps
and
push
lret
sbb
add
addr16
add
fidivl
outsl
push
stos
imul
sbb
mov
loope
pop
aas
fisttpl
sub
dec
xchg
arpl
cmp
popl
mov
pop
add
mov
dec
daa
ljmp
add
mov
push
xlat
add
fld
add
or
sbb
add
mov
add
shll
or
jbe
add
enter
mov
jg
inc
in
outsl
ja
mov
jns
add
mov
js
mov
mov
mov
lret
mov
add
outsl
inc
mov
shrl
inc
pop
loope
mov
push
mov
xlat
cwtl
xchg
clc
inc
cmp
addb
mov
out
in
push
xlat
or
imul
add
mov
push
dec
jo
mov
add
add
add
inc
rolb
inc
fcom
add
lock
inc
jns
out
dec
leave
xchg
pop
jns
fdivs
std
pop
test
movsb
inc
int3
mov
imul
lcall
push
scas
inc
jmp
pushf
ret
xchg
push
add
pop
sub
jns
notb
sbb
loop
mov
xor
repz
mov
leave
xor
daa
cli
dec
loope
push
xchg
dec
imul
into
or
jb
mov
fwait
jecxz
hlt
push
add
pusha
add
out
lcall
mov
jns
stos
shll
mov
sahf
mov
fwait
imul
push
mov
jo
mov
jae
mov
mov
int
mov
into
popf
and
mov
fsubl
add
rcr
rolb
mov
mov
push
loope
or
inc
add
add
add
mov
ret
in
lret
cwtl
mov
xchg
push
adc
add
movsb
inc
xchg
add
sub
add
fisubrs
mov
and
mov
stos
dec
hlt
es
in
lock
inc
mov
inc
add
adc
outsl
pop
adcl
inc
add
outsb
mov
inc
add
mov
jbe
popf
add
push
jle
mov
pusha
add
push
mov
dec
in
jns
add
add
xchg
insl
mov
test
lcall
insb
out
fdivs
mov
pop
aas
fistps
mov
outsl
dec
lods
inc
pop
cmc
jne
inc
mov
loopne
mov
loopne
mov
sub
adc
mov
test
add
pop
test
sbb
cmc
xchg
int
sti
stc
xor
mov
push
mov
pushf
repnz
or
jbe
fwait
mov
mov
add
ja
or
shl
jecxz
add
loopne
mov
inc
adc
push
cmp
add
jl
xor
mov
jb
mov
and
dec
pop
testb
or
ret
rcll
rolb
mov
cld
sahf
jo
mov
pop
or
scas
sub
scas
andnps
data16
add
adc
and
cmp
xchg
jo
mov
mov
sti
inc
and
clc
adc
mov
add
mov
mov
fcompl
stos
testb
mov
fmuls
xor
sbb
je
jle
movsb
dec
mov
add
push
nop
add
mov
adc
pop
adc
mov
jo
mov
filds
push
mulb
arpl
mov
mov
jno
push
outsl
xchg
mov
or
and
ds
add
xor
mov
popl
arpl
xor
mov
repz
pop
push
bound
mov
jns
imulb
sub
out
scas
aam
aad
loope
fidivl
add
or
movsb
mov
mov
mov
mov
repnz
pusha
add
jmp
mov
rorl
stc
out
out
adc
pop
imul
cmp
scas
pop
and
notb
rolb
push
das
cmpsb
fstpt
and
mov
xchg
mov
add
xor
cmp
pop
push
or
mov
sbb
lods
lret
imul
cwtl
mov
add
ret
mov
int
and
mov
jl
pop
dec
mov
mov
xor
mov
sub
mov
pop
aaa
pop
xor
sbb
mov
cmc
pcmpeqd
cmp
mov
add
icebp
mov
add
sub
dec
and
mov
add
mov
into
jnp
add
mov
cmp
sub
ljmp
inc
int3
sahf
jg
add
mov
adc
mov
cld
das
cmp
add
mov
inc
cmpsb
inc
and
pop
dec
lgs
mov
rcl
add
mov
mov
or
add
outsl
mov
cmpsb
mov
lret
out
inc
add
cmp
mov
xchg
jecxz
clc
xor
scas
insb
inc
cmp
and
add
in
add
lret
push
pop
hlt
and
jb
mov
cmp
mov
push
push
dec
outsl
js
adc
mov
aaa
jne
sub
arpl
jae
pop
cmp
rolb
iret
sub
jne
mov
loopne
mov
add
jne
add
adc
pop
pop
movsb
cmp
add
sbb
scas
in
xor
mov
faddl
mov
pop
mov
add
add
