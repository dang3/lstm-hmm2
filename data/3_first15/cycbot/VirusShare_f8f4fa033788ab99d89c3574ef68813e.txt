add
add
rol
rol
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
std
std
std
std
std
std
std
std
std
std
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
call
jno
jno
jno
jno
jno
jno
jno
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
ss
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
outsb
outsb
outsb
outsb
outsb
outsb
outsb
loopne
ds
sbb
sbb
sbb
sbb
sbb
sbb
test
test
test
test
es
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ljmp
stos
stos
stos
stos
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
mov
mov
mov
mov
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
or
or
or
or
or
or
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jg
jg
jg
nop
nop
nop
nop
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
cli
cmp
cmp
cmp
cmp
xchg
xchg
xchg
xchg
xchg
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
nop
nop
nop
nop
nop
nop
addl
out
out
out
out
mov
mov
mov
xlat
xlat
xlat
xlat
nop
nop
nop
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jo
jo
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
ffree
adc
adc
adc
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
bswap
int
int
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
into
into
into
into
cmp
cmp
cmp
cmp
cmp
repz
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lock
lock
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
stc
stc
stc
stc
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
ret
ret
ret
or
or
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
lahf
nop
rcl
rcl
rcl
rcl
sarb
jg
jg
jg
jg
jg
jg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outsl
outsl
outsl
outsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loope
loope
loope
loope
loope
insb
insb
adc
adc
adc
adc
adc
nop
nop
nop
addl
addl
addl
addl
addl
addl
addl
ljmp
stc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
xor
xor
xor
es
imul
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
jns
jns
jns
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rclb
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outsl
outsl
outsl
outsl
outsl
outsl
outsl
and
and
and
and
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
nop
nop
nop
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
inc
inc
arpl
arpl
or
or
or
or
or
or
or
or
addb
addb
ss
ss
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
or
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
sub
sub
sub
sub
sub
sbb
sbb
sbb
nop
nop
nop
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
decb
push
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outsl
outsl
outsl
outsl
outsl
outsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
nop
nop
and
and
and
and
rcl
rcl
rcl
rcl
shrl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
repnz
test
test
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
push
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
push
arpl
ficoms
xchg
es
es
es
es
test
jmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
add
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
or
adc
adc
adc
nop
nop
mov
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
cs
int
int
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
rol
rol
rol
fs
adc
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
fsts
jb
jb
jb
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
cmpsb
cmpsb
cmpsb
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
repnz
repnz
nop
nop
nop
nop
nop
nop
nop
ds
int3
int3
mov
mov
mov
mov
mov
nop
nop
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
int
int
int
int
int
int
int
int
int
nop
nop
xor
xor
xor
xor
xor
xor
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
movsl
movsl
movsl
addr16
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
nop
nop
nop
nop
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
nop
nop
nop
sub
sub
sub
sub
sub
sub
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
int
nop
nop
nop
nop
nop
nop
nop
mov
mov
sub
sub
sub
sub
nop
nop
nop
stos
stos
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
ret
ret
ret
mov
mov
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
push
push
push
push
push
push
push
push
push
cltd
cltd
cltd
cltd
cltd
nop
nop
nop
nop
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jb
jb
jb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
ret
ret
ret
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
icebp
icebp
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lock
stos
stos
stos
stos
stos
stos
stos
nop
nop
nop
nop
nop
nop
std
std
mov
mov
mov
mov
aam
aam
aam
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
je
je
je
je
je
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
jp
jp
jp
jp
jp
jp
jp
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
loopne
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
dec
dec
dec
dec
dec
dec
dec
dec
bound
bound
bound
bound
bound
bound
bound
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
lea
lea
lea
lea
mov
nop
nop
nop
nop
nop
lea
lea
lea
lea
lea
pfcmpge
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
daa
daa
daa
daa
daa
daa
daa
daa
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
mov
insb
insb
insb
insb
insb
insb
insb
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aam
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
movsb
sbb
sbb
sbb
sbb
sbb
sbb
div
div
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
fcmovu
fcmovu
fcmovu
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
jecxz
rol
rol
rol
rol
rol
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
loope
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
sub
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
imul
imul
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
loope
loope
loope
loope
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cld
cld
cld
cld
cld
cld
cld
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
je
je
je
je
je
je
je
je
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
nop
nop
nop
nop
addb
fstp
fstp
fstp
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
push
push
push
push
push
push
push
push
push
push
push
mov
mov
test
test
test
test
test
test
test
test
test
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jo
jo
jo
jo
jo
jo
jo
jo
jo
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
ljmp
ljmp
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movsl
movsl
movsl
movsl
movsl
nop
nop
nop
nop
nop
nop
rcl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
data16
cmc
cmc
cmc
cmc
cmc
mov
mov
mov
mov
mov
in
in
in
in
in
in
in
in
in
in
in
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movsb
movsb
movsb
movsb
movsb
movsb
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
nop
xor
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
nop
nop
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
mov
mov
sbb
sbb
sbb
sbb
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
sahf
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
cs
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
enter
enter
enter
enter
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
sub
sub
sub
sub
lock
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
lret
lret
lret
lret
jecxz
jecxz
jecxz
jecxz
jecxz
mov
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
lock
adc
jmp
and
and
and
and
and
and
and
and
and
and
lods
lods
lods
lods
lods
lods
adc
adc
adc
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
sub
fcomp
fcomp
fcomp
fcoms
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
call
call
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jl
jl
dec
dec
dec
dec
dec
dec
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
sub
sub
sub
sub
cs
cs
stc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
cmp
nop
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
out
out
out
out
out
sbb
add
in
in
in
in
in
in
in
in
in
in
in
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
into
into
into
into
into
nop
nop
nop
nop
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
nop
nop
nop
nop
nop
nop
nop
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
les
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
clc
clc
clc
clc
clc
clc
clc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
hlt
hlt
rcl
rcl
rcl
repnz
repnz
stc
stc
stc
stc
stc
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
imul
imul
imul
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
push
push
push
push
push
push
push
push
push
cmp
cmp
cmp
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
push
push
push
push
push
push
push
push
push
push
push
push
push
pusha
pusha
pusha
pusha
pusha
pusha
pusha
or
or
or
or
or
or
or
or
or
scas
scas
scas
sub
sub
sub
sub
mov
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
les
aas
aas
aas
aas
aas
aas
aas
aas
mov
mov
mov
mov
mov
in
in
in
in
in
in
in
in
adc
adc
adc
adc
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
repz
stc
dec
add
push
add
or
add
add
add
add
mov
mov
jb
lods
lea
push
add
xor
mov
cmp
shrb
add
jg
nop
dec
add
sbb
mov
push
fistpl
xor
and
dec
add
test
lods
mov
inc
sarl
js
jp
mov
mov
xchg
scas
lods
add
mov
mov
add
out
or
inc
lods
push
add
mov
lahf
sti
cwtl
jno
out
imulb
idivb
mull
dec
movsl
fwait
pop
test
pop
add
popa
testl
xor
mov
adc
mov
sbb
or
insb
add
ds
and
sbbb
insl
scas
out
add
shll
add
add
xor
idivl
sarb
xor
sub
and
lods
mov
test
hlt
cld
rcll
aam
add
adc
add
fwait
add
xchg
or
add
or
add
fmull
int3
aaa
push
mov
stc
enter
mov
push
add
dec
add
push
mov
jne
jp
xchg
jnp
xor
push
add
add
and
and
inc
push
pop
cmp
out
popf
and
mov
cmp
inc
pop
add
cmpsl
ja
leave
and
xlat
ret
fwait
jge
cmp
pop
add
sbb
mov
cmp
loope
and
add
inc
dec
cltd
ret
fmuls
xor
js
mov
mov
add
cmpsb
and
xor
mov
dec
add
and
sub
das
js
inc
add
icebp
andl
inc
in
sahf
push
adc
jae
inc
dec
add
add
mov
faddp
data16
adc
cli
mov
mov
mov
lcall
add
push
sub
dec
xchg
mov
mov
add
cltd
je
push
add
dec
pop
or
add
add
lcall
stos
pop
stc
pop
add
add
add
add
lea
jbe
fistpll
andb
adc
xchg
mov
loop
cwtl
nop
xchg
xchg
mov
add
jae
inc
int3
jecxz
mov
sub
sarb
add
add
push
add
xchg
push
add
add
aaa
pop
add
and
sub
and
push
add
sub
cld
pop
stos
out
add
add
add
push
add
add
cltd
scas
add
add
stc
pop
push
add
add
pop
add
add
jbe
push
adc
aaa
mov
mov
pop
add
mov
push
add
add
fdivrl
add
aam
jno
cltd
movsl
cmp
push
dec
add
add
test
inc
jbe
imul
inc
stos
mov
lret
jmp
int
hlt
insl
mov
add
add
pop
xchg
jnp
nop
ret
inc
add
push
fsubrl
cli
fistpl
loope
add
add
add
ljmp
inc
add
les
add
out
data16
add
rcl
push
add
add
mov
in
bound
arpl
add
arpl
out
ror
mov
sub
mov
in
push
pushf
jne
add
add
imul
sbb
sbb
xchg
daa
add
adc
shll
mov
in
in
sti
add
data16
fcoms
push
add
rolb
data16
cmp
mov
daa
mov
pop
cmpsl
test
add
cmp
adc
jns
or
pop
add
add
mov
lea
or
mov
and
movsb
imul
aaa
inc
repnz
sub
add
push
add
jge
rclb
mov
lea
adc
adc
sbb
jle
pop
mov
movl
add
in
add
arpl
add
jne
xor
dec
add
shlb
into
cmp
push
mov
sahf
stos
sub
lcall
insl
jge
or
add
jp
mov
pop
add
dec
sub
mov
in
mov
rorb
add
xlat
jecxz
cmp
sub
inc
pop
outsl
jnp
add
add
fcmovb
jnp
add
aas
cmp
and
arpl
add
adc
popa
or
sti
lods
lods
push
add
xlat
js
mov
adc
xchg
adc
mov
scas
cmp
fisttpl
add
add
and
add
or
mov
mov
cmpsb
jle
pop
gs
mov
add
add
testl
jg
xor
push
das
mov
add
movsb
cwtl
fs
aaa
pushf
mov
add
add
cmp
lods
sbbb
cld
fwait
push
cmp
stc
jge
add
and
add
cmp
add
xchg
jg
sub
pop
sbb
sbb
jb
cld
pop
add
imul
je
push
add
daa
outsl
rcl
pop
push
sbb
inc
or
xor
add
std
add
xchg
jg
filds
push
add
sbb
data16
adc
insb
add
xor
mov
adc
fildl
xor
mov
add
xor
int
add
pop
add
dec
add
and
mov
repz
std
cli
push
add
add
or
push
add
stos
rcll
add
shrb
inc
add
jl
outsl
lret
jnp
add
or
daa
mov
pop
add
pop
add
add
pop
ljmp
add
add
dec
add
repz
add
sbb
sub
and
popf
fiaddl
and
test
add
testl
in
movsl
or
lods
clc
add
sarb
add
inc
sub
out
nop
popf
mov
popf
cmp
sbb
add
add
push
std
jns
adc
mov
xchg
cmp
loopne
xor
or
pushf
imul
mov
mov
pop
add
fcompl
add
and
adc
add
bound
pop
and
mov
add
lahf
cmp
dec
add
push
and
add
std
jae
add
cwtl
lret
push
add
lods
mov
fdivp
push
add
add
imul
add
mov
aad
repnz
sub
add
inc
lret
jo
sub
cmp
jnp
push
daa
jl
lret
in
arpl
icebp
out
add
fadd
bound
test
add
pop
cmp
and
cmp
add
add
add
inc
add
test
add
mov
add
dec
add
movsl
stos
jle
and
xor
or
aam
test
lret
inc
add
add
int3
dec
mov
add
mov
add
mov
jbe
mov
sbb
test
add
loope
mov
lock
sbb
out
jecxz
cmp
push
scas
or
add
call
inc
lret
lcall
stos
inc
add
add
fs
aad
test
xor
mov
and
mov
pushf
jns
inc
outsb
add
mov
lea
gs
sbbb
add
or
adc
jle
inc
add
imul
clc
mov
add
add
jl
xchg
add
jecxz
scas
cld
or
mov
pop
aam
add
iret
pushf
mov
add
add
mov
fisubrl
add
aaa
add
add
cld
mov
add
test
xchg
xlat
mov
lahf
js
xchg
scas
out
dec
add
push
add
hlt
jl
push
add
mov
add
add
jo
jg
xchg
push
add
jmp
int3
rcll
cmpb
add
inc
add
pusha
add
shr
add
ljmp
fcomps
add
cmpsl
inc
add
xchg
js
scas
jg
jne
loop
add
into
jb
sbb
or
mov
bound
mov
add
jl
or
adc
or
push
add
and
mov
xor
cmpsl
pop
in
loopne
sub
cmpsb
pop
add
pop
add
add
jns
add
mov
mov
jns
and
out
cmpsl
add
pop
add
movsl
mov
outsl
xor
push
inc
add
mov
sahf
push
add
insl
xlat
dec
add
xorb
and
xchg
sub
xor
daa
and
push
add
imul
add
add
add
int
add
pop
add
es
xor
and
fidivrl
push
add
add
add
dec
jb
movsb
cmpsl
aas
mov
add
mov
cltd
lods
jno
add
inc
add
popa
ret
xchg
or
add
faddl
stos
mov
ret
pop
add
xchg
mov
and
ljmp
mov
fsub
das
mov
fstps
stc
and
cli
push
add
cmp
push
add
aam
add
test
test
pop
jbe
sbb
sahf
pop
xchg
mov
mov
push
adc
add
add
lock
idivb
cmc
inc
add
add
mov
add
pop
add
add
and
sarb
xchg
fwait
ret
mov
add
imul
xor
movsb
mov
inc
fisttps
add
mov
add
shr
add
movsb
call
xor
inc
add
pslld
decl
add
mov
add
xchg
outsb
add
pop
add
jbe
int
add
jp
push
mov
inc
add
add
fnstenv
xor
and
dec
add
adc
aam
fdivs
hlt
cld
sbb
dec
int
add
test
mov
add
add
mov
dec
add
fmuls
cltd
dec
xor
cmp
in
cmc
push
add
ret
jg
add
jg
sub
mov
xchg
scas
adc
xor
fstpl
hlt
cltd
sahf
inc
and
mov
in
push
hlt
cmc
inc
add
sub
and
or
sbb
pusha
add
dec
test
cmp
cmp
push
add
and
lds
add
inc
adc
add
shll
add
jmp
arpl
inc
add
add
push
add
cwtl
pushf
xor
dec
cs
add
out
push
add
fsubr
xchg
push
add
sti
push
ja
add
lret
roll
add
lcall
add
sbb
outsl
insl
cmp
inc
mov
mov
adc
les
push
add
rol
sbb
jo
sbb
add
add
add
pop
adc
jno
add
cmp
add
adc
shll
pop
aas
loop
pop
add
add
bound
cmp
add
in
in
stos
icebp
jp
mov
adc
dec
imul
lds
mov
add
add
pop
mov
add
cmc
xor
inc
mov
mov
imul
add
testb
out
inc
mov
les
js
jmp
pop
mov
mov
sbb
xchg
fdivrl
cmpsb
dec
add
popa
inc
cmp
xor
inc
pop
and
cmpsl
push
add
bound
iret
pop
les
inc
cmp
loop
adc
jb
pop
add
add
mov
cmp
cmc
pop
add
add
add
and
xchg
into
pop
inc
add
aad
push
add
add
pop
pop
sbb
xchg
xchg
xacquire
add
add
and
adc
scas
adc
and
out
pop
pop
cli
push
or
mov
cmpsl
mov
mov
aas
inc
xor
inc
jmp
sbb
shlb
add
std
push
add
xchg
das
out
ret
and
stos
aaa
mov
mov
pushf
pop
inc
add
cmc
cmpsl
ret
sub
sub
jmp
add
xchg
insl
jp
adc
pop
in
add
insb
add
fmull
mov
es
xchg
ret
imull
hlt
mov
rol
add
add
roll
pop
add
ds
ljmp
out
jb
nop
outsb
add
pop
in
add
and
add
sbb
sub
jno
mov
push
add
fwait
fwait
loopne
testl
add
xchg
cmc
pop
add
fsubrs
add
add
add
add
add
loope
push
pusha
add
gs
jecxz
xchg
in
xor
ret
mov
daa
sub
add
mov
sub
dec
add
bnd
stos
adc
mov
lds
fcompl
psrld
inc
add
push
mov
pop
pop
adc
push
and
add
aam
xor
stc
iret
jl
jno
jns
mov
xor
insb
add
and
or
mov
add
pop
add
add
leave
je
inc
add
dec
add
test
add
jmp
add
mov
movsb
xchg
mov
imul
aam
add
fs
stos
jecxz
or
push
add
iret
pushf
insb
add
adc
add
cli
jmp
cmpsb
enter
loop
fdivrl
cmp
add
and
pop
mov
add
call
out
add
jb
orb
mov
xchg
outsl
or
cmp
ret
jbe
data16
gs
aam
add
and
jae
sub
and
fidivrl
add
or
mov
add
add
int3
add
add
push
add
fidivs
add
add
add
stos
out
mov
js
pop
add
sbb
mov
popf
mov
mov
dec
add
xor
ret
lea
sar
jg
mov
pop
add
or
add
aas
push
xchg
push
cwtl
push
add
jle
fwait
and
xor
mov
in
inc
or
mov
js
movsb
in
adc
or
subb
iret
inc
add
aam
sub
aaa
push
cmpsb
data16
or
dec
lcall
add
add
push
add
pop
add
xchg
jae
add
add
pop
ret
pop
add
je
jl
pcmpeqw
add
cmp
add
jle
mov
add
add
add
cmp
inc
adc
add
push
add
pop
add
dec
add
push
repnz
fsubr
lock
add
mov
sbb
mov
inc
add
add
lods
push
scas
pop
cmp
mov
js
dec
add
in
sbbl
outsl
adc
push
add
add
pusha
add
icebp
loopne
xchg
ljmp
pop
add
add
in
movsl
fidivl
fldcw
inc
add
out
addr16
call
cmpsl
jns
out
lock
jo
pop
insl
les
repz
in
je
in
daa
clc
pop
dec
add
aaa
dec
fists
pop
add
add
aaa
test
aaa
outsl
or
sub
mov
add
daa
repnz
xchg
pop
fdivs
daa
inc
add
jnp
mov
sub
cmpsl
mov
movsb
push
stos
bound
shl
pop
xlat
mov
js
adc
movsb
dec
rolb
int
add
xchg
mov
mov
add
ficomps
push
add
aaa
xor
mov
pop
push
add
sbb
sbb
mov
ja
add
xor
aad
nop
repz
mov
and
sub
aad
xchg
adc
call
inc
add
add
push
add
rorl
add
mov
add
pop
adc
push
add
xor
jmp
leave
pusha
add
dec
sub
inc
mov
add
fwait
das
cmc
andl
pop
lods
in
push
cmp
add
push
add
jb
hlt
mov
adc
pextrw
mov
add
pop
mov
fucomi
dec
add
push
add
add
jns
add
addr16
rcrl
je
sbbb
shl
add
add
sub
sub
mov
enter
cmp
pop
add
push
add
add
mov
mov
add
push
add
sbb
fpatan
pop
add
fucomp
jbe
jbe
nop
subl
daa
mov
icebp
xor
cmp
out
inc
mov
jle
push
add
sub
sub
insb
add
jb
jne
add
gs
add
add
add
insb
add
xchg
inc
popa
ja
add
stc
mov
dec
mov
push
fdivrl
add
sbb
push
add
pop
add
mov
sub
sub
and
jg
pop
cmp
pop
pop
add
adc
dec
mov
in
jbe
fcmovbe
xor
add
add
add
shl
xchg
scas
jmp
test
add
add
mov
push
add
jne
add
sbb
add
ror
jmp
jne
xor
mov
jnp
or
and
lods
jge
add
add
dec
push
add
push
add
insl
add
movsl
inc
add
repnz
repz
jne
add
adc
jg
mov
pop
push
add
pop
loopne
mov
xchg
dec
cs
std
pusha
add
shlb
push
mov
imul
lret
js
inc
add
xchg
fidivs
adc
stos
inc
sar
xor
arpl
js
out
insb
add
or
or
ret
xchg
cmp
enter
inc
add
inc
inc
push
pop
add
outsb
add
mov
iret
add
add
out
fmulp
dec
add
inc
add
hlt
ja
push
add
lret
add
add
pop
add
call
and
sub
add
xchg
ret
jg
add
ss
rcrl
inc
add
pushf
inc
add
add
xchg
pop
pusha
add
sub
dec
add
inc
add
daa
psadbw
push
add
sahf
mov
sub
pushf
fcoms
test
add
call
xor
add
fldt
loop
dec
add
xchg
dec
add
xchg
cmp
push
add
shll
or
dec
popf
repz
sub
add
push
je
mov
in
push
add
add
xor
mov
add
adc
dec
adc
jl
daa
cmp
loope
add
add
into
sub
fwait
cmp
add
cld
addb
test
add
jno
bound
and
dec
lock
frndint
scas
out
out
or
adc
add
xchg
xchg
cmpsl
sub
xor
add
xchg
insl
jbe
cld
cmpsl
mov
repz
add
push
add
mov
sbb
cltd
nop
push
imul
add
addr16
add
cmp
mov
pop
add
data16
pushf
ret
push
cmp
sbb
shr
and
stos
lods
ljmp
add
test
out
cwtl
sbb
pop
add
hlt
mov
add
xor
push
shr
push
add
jge
mov
push
push
add
add
push
add
shlb
lock
xchg
jl
xor
mov
mov
jnp
ja
add
out
pop
sub
sbbb
dec
xchg
or
imul
xor
fidivrl
adc
xor
pop
add
xor
sub
add
scas
inc
xchg
cli
testb
jge
add
clc
add
xor
xor
stc
mov
add
int3
das
mov
add
iret
iret
test
dec
leave
movb
scas
mov
out
pusha
add
inc
add
lret
dec
mov
iret
add
add
in
pop
add
or
pop
jl
jb
shll
testl
add
dec
add
mov
add
std
jno
push
test
leave
fisubrs
lds
in
pop
pop
pop
bound
jb
pop
mov
add
fnsave
test
jbe
mov
add
or
arpl
lds
jmp
mov
mov
add
xchg
movsb
and
sbbl
mov
add
cmpsl
mov
sub
loope
or
pop
add
add
mov
test
adc
jle
loope
popa
lcall
add
int3
test
jg
add
popa
stos
inc
add
cmp
cmc
movsb
aas
mov
loopne
fwait
jo
mov
sub
and
xchg
lret
xor
add
mov
add
add
lret
jge
in
sarl
lea
add
fxch
lods
mov
add
push
add
add
in
xchg
xor
out
popa
sbb
mov
add
jns
std
stos
sti
mov
mov
add
leave
jle
dec
adc
push
add
add
hlt
jg
fistpll
adc
in
pop
sub
mov
push
add
jmp
sbb
cmc
cmp
add
aaa
cmp
add
outsb
add
add
shl
xor
jnp
add
out
insb
add
add
and
addb
imul
jnp
push
dec
add
add
pop
ljmp
push
add
push
fimuls
push
mov
mov
xchg
sbb
push
add
dec
add
add
out
or
add
in
pop
add
je
pop
mov
mov
xchg
bound
aas
incl
imul
rolb
insb
add
loopne
jle
mov
cmp
dec
add
add
lods
cld
cltd
les
xchg
cli
or
add
add
fmull
add
add
add
mov
nop
jle
test
in
xchg
inc
add
add
add
test
xlat
adc
call
add
pushf
sti
cld
icebp
lds
add
add
and
outsl
into
inc
lds
sbb
popa
js
dec
add
mov
cld
mov
cmpsl
into
xchg
or
mov
in
call
xchg
scas
mov
push
lret
jge
dec
mov
push
pop
pop
lods
push
add
das
in
in
jo
cmp
xor
add
add
punpckhbw
stos
push
fcompl
adc
add
xchg
inc
xlat
cwtl
xchg
dec
imul
add
add
add
decl
ljmp
adc
add
dec
add
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
push
add
jmp
add
mov
mov
adc
add
ja
data16
add
gs
movsb
ljmp
hlt
and
sbb
mov
add
outsb
add
add
scas
pop
add
push
add
inc
push
add
add
cmpsl
les
sub
mov
add
outsb
add
out
scas
das
cs
inc
out
cmc
mov
repz
cmp
aam
add
add
into
inc
adc
add
sahf
xorb
jle
leave
leave
sub
nop
clc
mov
and
popf
inc
fistps
in
mov
add
add
sbbb
jb
les
cmpb
mov
in
add
jp
pop
insl
int
sbb
push
add
sahf
xchg
mov
aam
cmp
add
add
add
add
add
add
adc
jae
cmpsl
insl
xchg
in
add
stos
add
out
pop
lds
add
pop
mov
mov
shll
sbb
jno
add
cmpsb
pop
cmc
add
in
add
push
add
jnp
and
fcmove
shlb
fcoml
add
push
add
adc
add
pop
add
roll
jne
inc
jle
mov
adc
and
add
mov
mov
mov
add
test
iret
cmpsb
inc
add
jecxz
add
add
cli
jnp
and
loope
add
add
les
jl
mov
add
out
mov
seta
add
sub
fistpl
lret
clc
lods
jge
xor
add
loopne
inc
bound
stos
inc
inc
add
in
fnstcw
dec
add
std
arpl
pop
push
add
dec
add
and
cmp
jge
push
insb
add
add
mov
add
add
test
jp
imul
add
dec
add
add
ret
inc
shlb
loope
ja
push
xlat
mov
mov
dec
mov
loope
sarb
add
xchg
out
enter
inc
scas
gs
jnp
mov
lcall
pushf
cmp
sbb
sbbl
and
scas
cld
dec
cmp
scas
fstp
gs
pop
fxch
and
pop
frstor
add
add
in
add
repnz
add
add
add
popf
mov
enter
add
add
xchg
loopne
outsl
or
add
mov
cmp
add
mov
pop
add
jg
mov
push
xchg
add
add
add
fwait
push
add
cmp
sub
sub
xor
xor
out
add
rolb
jle
fbld
add
adc
subb
out
mov
and
repz
add
xor
leave
lock
xchg
das
dec
add
xchg
sub
add
add
inc
cmpb
sbb
sub
dec
add
xor
or
dec
add
xlat
push
jg
and
orb
mov
mov
add
adc
add
push
add
fdivs
jle
mov
cwtl
loope
jo
daa
cld
jp
xor
add
push
xor
into
clc
shrb
mov
jl
xchg
inc
pop
add
jns
shll
nop
adc
pop
add
lods
sbb
and
in
push
into
xchg
lock
rcll
xchg
cmp
sbb
jle
adc
add
test
adc
add
lret
test
cmp
cmpb
loope
lods
arpl
jmp
cli
cmp
adc
shlb
sub
adc
jno
addr16
add
mov
xchg
aas
popf
lds
add
push
xlat
cmp
mov
ficompl
aad
add
jecxz
pop
add
add
stos
scas
pop
add
push
add
addl
data16
jno
out
and
pop
mov
add
inc
lods
add
and
add
pop
test
add
xchg
pop
add
add
add
add
add
add
add
fwait
jns
sahf
lret
mov
add
xchg
into
dec
add
sbb
lds
call
ficompl
mov
add
adc
xchg
dec
out
push
add
addb
push
add
push
add
add
movsl
inc
add
mov
add
add
fwait
xchg
aaa
int3
bound
mov
test
scas
scas
and
xchg
std
aad
rol
adc
mov
add
add
and
add
add
lcall
cmp
stc
and
push
xor
add
adc
sarb
or
sqrtps
test
add
xor
pusha
add
ja
add
add
aas
in
test
pop
lret
pop
filds
mov
mov
xor
push
add
aas
pop
add
add
jno
fsts
pop
add
mov
add
or
out
int3
sbb
add
dec
push
into
fbstp
add
add
pop
add
xor
cli
cmc
mov
add
add
dec
add
mov
pop
add
fmuls
cmp
in
aam
cmp
add
leave
mov
ror
rdtsc
popf
ja
add
add
xchg
add
sbb
outsb
add
push
add
push
cmc
pop
cltd
inc
add
test
xor
add
add
outsb
add
jno
add
add
add
ret
xor
sti
jns
jle
xorl
add
repnz
repnz
add
add
jnp
mov
add
data16
add
add
cwtl
sbbl
cmpsl
test
mov
add
add
in
inc
push
add
adc
sbb
add
pop
push
add
mul
cmc
arpl
loope
pop
add
xchg
dec
add
adc
in
add
outsb
add
mov
push
add
ja
add
jl
inc
add
mov
dec
mov
add
in
pop
add
add
popf
imul
jmp
lret
push
test
ja
dec
add
xchg
jle
enter
add
clc
xor
daa
sub
jmp
and
push
add
sarb
lds
mov
add
add
jl
sub
add
add
push
add
sbbb
add
xor
jae
adc
fadds
inc
out
sahf
in
jle
loope
xor
fadds
add
iret
into
and
mov
and
jno
push
add
cwtl
int
das
daa
pop
lahf
push
add
add
stos
xchg
mov
pop
sbb
add
fwait
std
ror
pop
cld
loopne
add
inc
daa
movsb
mov
add
adc
add
je
dec
add
addb
add
aaa
ret
push
add
jmp
sub
roll
test
repz
add
lock
push
add
loopne
adc
jo
mov
cli
hlt
sub
push
or
pushf
cmp
fsubl
lock
loope
testb
test
adc
iret
out
add
inc
mov
cmp
xor
ficompl
add
add
sub
add
inc
scas
add
repnz
add
lods
imul
sarl
inc
loopne
lds
mov
pop
mov
add
add
ret
and
popa
gs
into
push
mov
xchg
cmp
pusha
add
mov
ret
add
push
add
sbb
sub
jge
insb
add
add
arpl
add
xchg
xchg
ret
dec
ds
cmpsl
and
jo
stc
jo
int3
add
dec
add
pop
add
add
jle
popa
in
add
xchg
dec
add
add
les
xor
out
jae
ljmp
in
mov
cmpsb
scas
loopne
loopne
adc
add
enter
jbe
xor
ficoml
add
test
add
ja
movsb
and
push
pop
add
cmp
cld
or
add
mov
add
add
push
jae
add
jp
fwait
xchg
push
add
out
mov
push
add
add
mov
add
mov
add
stc
sub
mov
push
add
push
add
sub
sbb
add
add
rcll
sbb
sahf
rcll
add
add
and
jle
add
jnp
and
jl
xchg
add
xor
fwait
je
scas
int
add
pop
rol
mov
or
cwtl
lret
or
cli
add
clc
stc
ja
and
mov
inc
mov
xchg
add
jge
add
cmp
add
add
add
mov
ret
sbb
push
sbb
mov
sbb
xchg
pop
add
dec
push
add
data16
pop
add
aas
push
add
xor
aad
cwtl
or
fidivl
xchg
lret
je
push
add
pop
repnz
or
scas
or
in
xor
daa
adc
pop
lret
inc
pop
add
and
fstps
sti
mov
xor
adc
mov
add
outsl
sub
mov
add
add
in
jge
push
add
cmc
cli
test
ret
leave
adc
ja
add
jge
adc
pop
add
mov
out
mov
std
lock
movsl
mov
push
add
xor
mov
sub
jns
mov
add
and
push
add
lods
rcl
mov
call
add
add
add
bswap
addl
xor
and
inc
add
mov
add
inc
add
dec
loop
int
xor
in
lea
add
lea
insl
int3
aaa
xchg
add
fs
sub
and
fwait
pop
cmp
popa
sub
xchg
fcoml
add
mov
cltd
push
add
add
rcl
mov
ljmp
and
movsl
in
test
add
adc
add
add
rorl
fistpll
and
outsb
add
add
add
mov
test
outsl
mov
lahf
push
add
add
iret
out
mov
add
lods
adc
dec
add
lods
rclb
adc
aad
add
lds
in
pop
add
mov
add
xor
xchg
fcoms
add
and
dec
add
xchg
jne
xchg
popa
jp
xlat
daa
stos
push
pop
add
pusha
add
pop
add
dec
add
pop
adc
cmp
aaa
mov
add
negb
jmp
add
add
and
cli
cmp
lods
mov
add
jmp
jae
dec
add
cli
enter
gs
iret
jmp
dec
in
outsl
cmp
add
dec
add
add
add
add
inc
dec
add
mov
cmc
dec
add
imul
mov
pushf
xor
cmp
ljmp
add
xor
mov
add
mov
jl
xchg
jnp
mov
add
add
cmc
jns
push
add
jmp
add
xor
enter
mov
leave
stos
lock
fistpl
cli
xchg
into
inc
add
jg
adc
movsb
cli
cmpsl
mov
add
sub
adc
arpl
pop
leave
incl
dec
shll
dec
les
cmpsb
or
push
in
outsb
add
xchg
lahf
lods
lahf
cmpsl
mov
into
inc
add
add
push
add
push
sbb
dec
add
std
lea
xchg
jns
add
push
add
aam
in
pop
add
inc
xchg
call
add
cmp
aam
add
pop
lcall
imul
pop
adc
nop
xchg
jge
sbb
add
add
xor
mov
cli
jl
push
jbe
cli
add
add
add
jl
jl
mov
sbbl
add
sbb
and
add
add
outsl
iret
push
add
add
shll
out
xor
bound
insl
push
add
jp
jecxz
add
mov
pop
jmp
data16
inc
in
dec
add
add
inc
add
mov
inc
or
jbe
lret
pop
arpl
add
js
inc
or
stos
jmp
lods
icebp
cmp
add
test
sahf
mov
add
add
jl
imul
mov
mov
mov
xchg
xchg
adcb
fcomi
cmpb
mov
inc
mov
add
add
push
fbld
add
cs
inc
mov
shll
add
xchg
bound
addl
mov
add
movsl
jmp
shld
add
add
jl
cmpb
add
cwtl
ds
popf
data16
mov
bound
or
daa
pop
imul
cmc
lret
sbbb
je
gs
mov
pop
jbe
popf
xorb
xor
push
mov
add
push
cli
add
add
aam
add
stos
and
push
add
enter
cmpl
add
arpl
adc
scas
repz
mov
sti
xorb
adc
xlat
jb
cmp
out
loope
leave
aam
jno
mov
cltd
and
add
iret
lods
adcb
data16
adc
test
add
gs
fsub
xchg
jnp
add
mov
pushf
int
loopne
add
add
add
add
push
mov
imul
rorb
loop
add
inc
add
push
add
xor
scas
xchg
mov
add
outsb
add
dec
adc
cmp
inc
add
inc
add
cmpsl
xchg
addr16
xchg
loopne
add
sbbl
rcrl
xchg
lods
out
sub
sub
jno
and
js
int
mov
jg
adc
fidivrl
inc
add
out
clc
repnz
nop
nop
jae
add
add
lahf
mov
clc
repnz
nop
nop
jae
add
add
mov
call
xchg
and
add
or
push
add
mov
adc
out
add
retw
or
mov
je
clc
repnz
nop
nop
jae
adc
xchg
insb
add
add
push
push
mov
xchg
ret
add
add
sub
fsubs
add
clc
repnz
nop
nop
jae
mov
les
mov
push
clc
repnz
nop
nop
jae
bound
insb
cli
add
or
test
add
clc
repnz
nop
nop
jae
add
inc
push
push
mov
xchg
ret
cli
jb
xor
add
and
loop
jno
dec
cmp
mov
xchg
ret
roll
add
add
repnz
nop
nop
jae
ljmp
add
add
mov
mov
xchg
ret
add
push
xchg
into
insb
add
nop
nop
jae
and
add
ljmp
or
mov
leave
nop
jmp
inc
cmp
les
dec
sub
repnz
nop
nop
jae
add
add
add
lcall
nop
jae
movsl
roll
add
add
nop
push
mov
leave
nop
jmp
push
add
push
add
add
in
mov
add
add
add
add
add
mov
pop
mov
clc
repnz
nop
nop
jae
push
add
cmp
jle
subl
clc
repnz
nop
nop
jae
inc
data16
das
scas
add
push
mov
xchg
ret
add
mov
shr
clc
repnz
nop
nop
jae
inc
add
data16
push
add
add
mov
clc
repnz
nop
nop
jae
mov
add
xor
pop
mov
push
mov
xchg
ret
bound
add
and
push
nop
push
mov
leave
nop
jmp
and
add
mov
add
lods
dec
add
mov
and
pause
push
mov
leave
nop
jmp
add
add
add
jae
add
push
mov
xchg
ret
xchg
notb
add
sub
adc
nop
jmp
add
ret
pop
nop
push
mov
leave
nop
jmp
mov
add
add
mov
repnz
nop
nop
jae
mov
add
mov
push
mov
xchg
ret
or
add
inc
roll
jb
dec
movzwl
nop
push
mov
leave
nop
jmp
add
fiaddl
or
in
leave
nop
jmp
add
rolb
add
add
mov
pop
nop
push
mov
leave
nop
jmp
or
add
add
add
mov
clc
repnz
nop
nop
jae
mov
cmp
out
push
clc
repnz
nop
nop
jae
int3
ret
gs
mov
add
iret
pop
nop
push
mov
leave
nop
jmp
push
add
inc
add
mov
push
clc
repnz
nop
nop
jae
mov
ret
clc
repnz
nop
nop
jae
add
xor
jmp
clc
repnz
nop
nop
jae
mov
out
mov
jg
nop
push
mov
leave
nop
jmp
add
add
cli
mov
mov
add
ret
add
inc
add
hlt
add
jae
test
push
mov
xchg
ret
ret
mov
add
add
sti
nop
push
mov
leave
nop
jmp
add
add
jne
clc
repnz
nop
nop
jae
mov
out
push
push
mov
xchg
ret
inc
je
das
inc
and
push
push
add
clc
repnz
nop
nop
jae
mov
je
add
inc
inc
clc
repnz
nop
nop
jae
repz
xor
loopne
clc
repnz
nop
nop
jae
add
add
mov
or
arpl
addb
cmp
ret
roll
addl
fistpl
clc
repnz
nop
nop
jae
adc
daa
insl
add
mov
add
clc
repnz
nop
nop
jae
mov
add
sub
clc
repnz
nop
nop
jae
add
add
daa
loop
add
clc
repnz
nop
nop
jae
add
add
insb
xchg
daa
gs
clc
repnz
nop
nop
jae
add
add
dec
add
add
repnz
nop
nop
jae
les
add
mov
adc
repnz
nop
nop
jae
add
add
add
nop
push
mov
leave
nop
jmp
mov
add
pop
mov
clc
repnz
nop
nop
jae
add
roll
cli
add
mov
xchg
ret
cli
add
and
add
rolb
adc
pushf
lea
xchg
ret
add
ret
cmp
test
jo
add
mov
or
add
imul
repnz
nop
nop
jae
add
add
mov
ljmp
jae
add
add
adc
imulb
add
and
inc
push
ljmp
add
sbb
clc
repnz
nop
nop
jae
add
add
add
test
cmp
ret
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
add
pop
clc
repnz
nop
nop
jae
add
inc
ret
mov
push
push
mov
xchg
ret
add
add
repnz
nop
nop
jae
inc
jae
insl
subl
mov
clc
repnz
nop
nop
jae
add
mov
gs
ret
test
add
nop
jmp
jae
mov
add
push
mov
leave
nop
jmp
or
add
leave
nop
push
mov
leave
nop
jmp
add
testb
add
dec
push
mov
xchg
ret
mov
into
add
push
mov
xchg
ret
or
insb
add
mov
add
clc
repnz
nop
nop
jae
or
inc
xchg
mov
fwait
push
mov
xchg
ret
das
add
rorl
shlb
adc
mov
nop
push
mov
leave
nop
jmp
add
add
xor
dec
add
cld
nop
nop
jae
test
cmp
add
add
in
leave
nop
jmp
add
repz
fwait
clc
repnz
nop
nop
jae
sub
add
add
add
mov
clc
repnz
nop
nop
jae
je
mov
nop
push
mov
leave
nop
jmp
add
mov
jle
push
push
mov
xchg
ret
add
add
pop
or
ficoms
nop
jmp
repz
add
xor
mov
cld
nop
nop
jae
add
mov
add
sbb
lcall
inc
add
add
add
ret
add
add
nop
nop
jae
add
sti
add
add
mov
add
clc
repnz
nop
nop
jae
je
insb
add
ret
add
adc
repnz
nop
nop
jae
add
repz
add
shl
clc
repnz
nop
nop
jae
add
add
add
lcall
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
repz
insl
add
out
add
movb
cld
nop
nop
jae
push
add
adc
add
mov
push
mov
xchg
ret
add
add
xor
add
add
nop
push
mov
leave
nop
jmp
roll
inc
mov
add
clc
repnz
nop
nop
jae
add
adc
add
nop
sti
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
xor
add
push
bound
push
mov
nop
push
mov
leave
nop
jmp
data16
addr16
mov
adcl
xchg
ret
add
add
xor
push
mov
xchg
ret
add
add
out
sar
repnz
nop
nop
jae
add
divb
sti
mov
repnz
nop
nop
jae
add
xchg
add
or
add
addb
cmp
ret
add
into
add
or
rorl
imul
clc
repnz
nop
nop
jae
or
add
add
repnz
nop
nop
jae
add
roll
fistl
nop
jae
push
or
mulb
xor
clc
repnz
nop
nop
jae
movsl
cmp
push
cmp
cld
nop
nop
jae
and
ret
mov
pop
imul
clc
repnz
nop
nop
jae
add
roll
xchg
add
ret
clc
repnz
nop
nop
jae
add
ljmp
jne
nop
push
mov
leave
nop
jmp
ljmp
mov
push
mov
xchg
ret
shll
jae
je
push
add
shr
push
stc
clc
repnz
nop
nop
jae
or
push
push
mov
xchg
ret
add
add
mov
add
clc
repnz
nop
nop
jae
cmp
add
jae
repnz
nop
nop
jae
jle
add
add
push
jmp
or
add
add
add
jne
add
add
add
rolb
add
scas
pop
nop
push
mov
leave
nop
jmp
into
fiaddl
mov
push
clc
repnz
nop
nop
jae
fidivrl
cli
movsl
jecxz
movb
mov
xchg
ret
inc
add
add
add
push
add
dec
push
clc
repnz
nop
nop
jae
add
add
add
add
popa
nop
push
mov
leave
nop
jmp
cli
add
shll
rcl
mov
pusha
xchg
inc
add
add
add
add
sar
cld
nop
nop
jae
add
addl
int
les
repnz
nop
nop
jae
add
movsb
lock
add
jne
push
mov
xchg
ret
mov
add
add
ror
push
mov
xchg
ret
add
sub
add
push
mov
leave
nop
jmp
add
mov
add
nop
push
mov
leave
nop
jmp
add
mov
jle
xor
lock
mov
jo
nop
push
mov
leave
nop
jmp
add
ljmp
push
push
mov
xchg
ret
add
add
cmp
insl
gs
out
clc
repnz
nop
nop
jae
add
add
add
pop
lods
add
clc
repnz
nop
nop
jae
inc
je
je
mov
xor
clc
repnz
nop
nop
jae
add
add
push
add
inc
add
sbb
push
mov
xchg
ret
add
add
mov
idiv
repnz
nop
nop
jae
push
data16
xor
insl
jle
cmp
mov
xchg
ret
add
je
add
les
inc
popl
repz
repnz
nop
nop
jae
roll
add
add
adc
push
mov
leave
nop
jmp
sub
add
xor
clc
repnz
nop
nop
jae
add
add
rorl
sub
pop
xchg
clc
repnz
nop
nop
jae
add
push
add
repnz
nop
nop
jae
add
cld
gs
clc
repnz
nop
nop
jae
add
add
jns
subl
jae
pop
add
lret
clc
repnz
nop
nop
jae
xor
insl
add
sti
cmp
xor
clc
repnz
nop
nop
jae
sub
roll
pop
add
lea
xchg
ret
mov
add
add
add
insl
jnp
or
repnz
nop
nop
jae
add
add
add
daa
ds
push
mov
xchg
ret
or
or
add
or
mov
add
push
mov
xchg
ret
mov
gs
movsb
clc
repnz
nop
nop
jae
subl
in
mov
xabort
cld
nop
nop
jae
roll
xor
sti
addr16
pushf
add
push
add
inc
add
clc
repnz
nop
nop
jae
or
les
add
test
nop
nop
jae
xor
xchg
add
add
add
nop
push
mov
leave
nop
jmp
add
add
add
mov
nop
nop
jae
add
cli
add
xor
subl
push
mov
xchg
ret
add
add
int3
jb
push
nop
push
mov
leave
nop
jmp
mov
sub
mov
mov
xor
push
mov
xchg
ret
add
add
add
mov
sbb
das
add
clc
repnz
nop
nop
jae
shll
add
add
repnz
nop
nop
jae
mov
add
das
sti
xchg
mov
clc
repnz
nop
nop
jae
or
addr16
or
adcl
add
nop
push
mov
leave
nop
jmp
add
jle
add
clc
repnz
nop
nop
jae
repz
or
addr16
add
cmp
nop
push
mov
leave
nop
jmp
add
add
loop
push
mov
leave
nop
jmp
gs
add
xorl
gs
add
add
das
insl
add
nop
das
pusha
clc
repnz
nop
nop
jae
mov
roll
add
movzwl
clc
repnz
nop
nop
jae
mov
add
and
push
fistpl
clc
repnz
nop
nop
jae
add
mov
mov
add
repnz
nop
nop
jae
adc
add
or
repnz
nop
nop
jae
pop
add
data16
push
add
clc
repnz
nop
nop
jae
push
add
sub
jo
add
mov
add
add
xchg
push
mov
xchg
ret
int3
add
roll
push
rcll
ljmp
cld
nop
nop
jae
pop
xor
mov
clc
repnz
nop
nop
jae
add
movsl
aam
add
data16
sub
clc
repnz
nop
nop
jae
push
add
mov
add
je
clc
repnz
nop
nop
jae
jb
add
push
addr16
add
insl
out
xchg
mov
divb
add
pop
clc
repnz
nop
nop
jae
inc
add
add
cmp
nop
push
mov
leave
nop
jmp
mov
push
add
mov
leave
nop
jmp
add
rolb
and
into
outsl
pop
push
mov
xchg
ret
add
jb
imulb
mov
add
clc
repnz
nop
nop
jae
adc
mov
push
mov
xchg
ret
inc
sti
sti
add
repz
pop
add
je
clc
repnz
nop
nop
jae
mov
rorb
cs
xor
nop
push
mov
leave
nop
jmp
add
xor
push
shl
clc
repnz
nop
nop
jae
inc
daa
pop
or
or
repnz
nop
nop
jae
inc
out
out
add
push
clc
repnz
nop
nop
jae
xor
roll
sbb
repnz
nop
nop
jae
inc
insb
add
jb
add
pusha
push
mov
xchg
ret
add
inc
add
push
add
mov
icebp
nop
push
mov
leave
nop
jmp
add
inc
push
add
outsl
arpl
add
nop
jmp
into
add
lods
push
mov
xchg
ret
repz
xor
add
xor
cld
nop
nop
jae
add
add
add
mov
cld
nop
nop
jae
add
add
out
out
call
clc
repnz
nop
nop
jae
push
or
add
push
mov
xchg
ret
add
add
mov
movsb
icebp
push
clc
repnz
nop
nop
jae
add
mov
je
addr16
pusha
inc
add
jae
addl
add
push
mov
xchg
ret
pop
add
add
add
rcrl
mov
xchg
ret
add
add
add
inc
insl
add
push
lea
clc
repnz
nop
nop
jae
ljmp
dec
add
inc
add
add
clc
repnz
nop
nop
jae
inc
roll
add
iret
push
push
mov
xchg
ret
mov
add
add
add
add
pop
push
mov
xchg
ret
mov
add
mov
push
mov
xchg
ret
mov
mov
sti
pop
add
clc
repnz
nop
nop
jae
bound
xor
ret
pop
add
add
nop
jmp
add
insl
into
add
out
push
push
mov
xchg
ret
mov
add
add
cmpsl
and
push
mov
xchg
ret
add
mov
mov
push
mov
xchg
ret
cmp
add
xor
push
mov
xchg
ret
mov
mov
into
addr16
jp
sbb
clc
repnz
nop
nop
jae
add
add
shll
repnz
nop
nop
jae
or
add
cmp
inc
add
inc
add
add
ret
pop
pop
nop
push
mov
leave
nop
jmp
add
xor
inc
add
push
push
mov
xchg
ret
add
repz
add
jae
add
dec
push
clc
repnz
nop
nop
jae
push
inc
push
xor
add
lods
push
clc
repnz
nop
nop
jae
mov
cmp
jg
test
sti
clc
repnz
nop
nop
jae
add
je
call
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
add
push
daa
add
mov
repnz
nop
nop
jae
add
jae
add
nop
inc
add
mov
inc
push
add
mov
mov
imul
cld
nop
nop
jae
add
testb
data16
sbb
repnz
nop
nop
jae
cmp
je
out
orl
nop
nop
jae
int3
add
bound
cld
and
push
mov
xchg
ret
add
inc
mov
add
jne
clc
repnz
nop
nop
jae
add
cmpl
jae
or
rcll
add
test
cld
nop
nop
jae
pop
je
jg
test
sbb
add
repnz
nop
nop
jae
insl
roll
incb
cmp
pop
xor
push
mov
xchg
ret
insb
into
cmp
xchg
add
daa
or
cmp
mov
add
repnz
nop
nop
jae
ret
ljmp
xchg
pop
clc
repnz
nop
nop
jae
je
add
push
add
ret
clc
repnz
nop
nop
jae
mov
add
add
add
nop
push
mov
leave
nop
jmp
add
add
add
mov
nop
nop
jae
sti
divb
popf
rep
clc
repnz
nop
nop
jae
movsl
mov
add
roll
mov
jg
clc
repnz
nop
nop
jae
xor
data16
push
add
cld
nop
nop
jae
rolb
into
add
sbb
push
add
add
repnz
nop
nop
jae
sar
add
roll
aam
add
cld
nop
nop
jae
add
add
push
shr
sub
cld
nop
nop
jae
shlb
or
ret
mov
clc
repnz
nop
nop
jae
fiaddl
add
insl
int3
daa
mov
clc
repnz
nop
nop
jae
add
sti
inc
add
add
or
repnz
nop
nop
jae
add
mov
rclb
rep
nop
push
mov
leave
nop
jmp
push
mov
roll
into
add
push
clc
repnz
nop
nop
jae
add
gs
xor
add
push
inc
push
mov
xchg
ret
add
xor
repz
sub
sbb
cld
nop
nop
jae
cmp
insl
out
clc
repnz
nop
nop
jae
ljmpw
mov
add
mov
add
add
add
add
jne
xor
nop
push
mov
leave
nop
jmp
add
in
movzwl
clc
repnz
nop
nop
jae
add
add
adc
fsubs
xchg
ret
jb
add
add
into
add
add
clc
repnz
nop
nop
jae
xor
and
insb
mov
lahf
mov
clc
repnz
nop
nop
jae
add
add
into
insb
lret
add
nop
push
mov
leave
nop
jmp
xor
int3
mov
cmp
repnz
nop
nop
jae
add
fiaddl
insl
add
jo
add
add
add
dec
add
add
inc
clc
repnz
nop
nop
jae
add
inc
idiv
call
clc
repnz
nop
nop
jae
or
mov
clc
repnz
nop
nop
jae
push
shll
repnz
nop
nop
jae
sub
inc
mov
inc
add
test
idiv
clc
repnz
nop
nop
jae
int3
add
pop
imul
clc
repnz
nop
nop
jae
ljmp
fistpl
nop
push
mov
leave
nop
jmp
ljmp
add
clc
repnz
nop
nop
jae
mov
add
imul
add
jae
push
orl
clc
push
mov
xchg
ret
add
or
add
jg
add
add
mov
or
in
leave
nop
jmp
add
push
mov
push
clc
repnz
nop
nop
jae
add
add
add
add
in
js
add
add
add
add
add
repnz
nop
nop
jae
mov
mov
cmp
repnz
nop
nop
jae
add
add
dec
sub
nop
jmp
inc
add
mov
nop
push
mov
leave
nop
jmp
add
rcll
iret
fistpl
push
mov
xchg
ret
mov
add
or
aas
push
clc
repnz
nop
nop
jae
mov
add
add
shlb
popl
xchg
ret
mov
int3
daa
into
push
fisubs
dec
clc
repnz
nop
nop
jae
add
jb
add
inc
add
adc
dec
add
shl
push
clc
repnz
nop
nop
jae
add
add
sti
jb
xor
xchg
push
push
mov
xchg
ret
rcl
add
daa
push
push
push
mov
xchg
ret
mov
daa
add
add
and
push
mov
xchg
ret
and
add
adc
cli
pushf
and
shlb
repnz
nop
nop
jae
add
add
add
fildl
popf
nop
push
mov
leave
nop
jmp
cmp
xor
xor
stos
clc
repnz
nop
nop
jae
xor
add
add
into
pop
mov
nop
push
mov
leave
nop
jmp
add
insb
aaa
div
nop
push
mov
leave
nop
jmp
xor
mul
add
add
add
lea
nop
push
mov
leave
nop
jmp
into
add
add
inc
jb
dec
add
addl
add
add
add
add
push
add
push
mov
xchg
ret
shll
mov
addr16
mov
xor
and
repz
nop
push
mov
leave
nop
jmp
mov
add
add
repnz
nop
nop
jae
add
insb
xchg
inc
or
add
nop
push
mov
leave
nop
jmp
xor
aas
pop
clc
repnz
nop
nop
jae
or
mov
gs
lea
cld
nop
nop
jae
jae
add
add
push
clc
repnz
nop
nop
jae
inc
insl
add
inc
add
push
inc
jne
clc
repnz
nop
nop
jae
add
add
push
mov
leave
nop
jmp
movsl
add
inc
bound
cld
repz
clc
repnz
nop
nop
jae
add
insb
add
push
clc
repnz
nop
nop
jae
movsl
add
add
dec
add
mov
xchg
ret
add
add
incl
testb
mov
inc
jle
add
add
jg
or
clc
repnz
nop
nop
jae
add
xchg
push
clc
repnz
nop
nop
jae
cmp
insb
or
andl
in
leave
nop
jmp
add
or
insl
xor
clc
repnz
nop
nop
jae
add
mov
mov
fistpl
clc
repnz
nop
nop
jae
add
add
add
fistpl
push
mov
xchg
ret
add
add
roll
mov
jne
clc
repnz
nop
nop
jae
and
add
in
leave
nop
jmp
divb
insl
mov
ret
rorl
repnz
nop
nop
jae
add
das
add
sub
nop
nop
jae
insl
jb
add
mov
loopne
mov
xchg
ret
into
add
add
sti
inc
aaa
pop
push
mov
xchg
ret
mov
add
add
inc
pop
clc
repnz
nop
nop
jae
add
into
outsl
add
nop
push
mov
leave
nop
jmp
xor
les
clc
repnz
nop
nop
jae
or
add
add
add
mov
clc
repnz
nop
nop
jae
pop
add
mov
repnz
nop
nop
jae
and
add
inc
adc
mov
clc
repnz
nop
nop
jae
roll
sbb
push
mov
leave
nop
jmp
daa
fiaddl
roll
add
cld
nop
nop
jae
add
or
add
clc
repnz
nop
nop
jae
roll
ror
pop
mov
clc
repnz
nop
nop
jae
add
loop
pop
push
mov
xchg
ret
xchg
add
inc
add
cmpl
add
or
into
add
add
ficoms
addl
add
insl
add
jle
fsts
repnz
nop
nop
jae
add
add
add
add
in
dec
push
nop
push
mov
leave
nop
jmp
ljmp
add
add
clc
repnz
nop
nop
jae
xor
gs
clc
repnz
nop
nop
jae
add
mov
mov
xor
clc
repnz
nop
nop
jae
sub
nop
push
mov
leave
nop
jmp
cmp
add
or
clc
repnz
nop
nop
jae
add
and
into
add
les
add
repnz
nop
nop
jae
add
add
add
loope
aas
adc
nop
jmp
mov
add
insl
add
nop
nop
jae
mov
inc
gs
pop
add
rclb
pop
inc
add
das
add
jb
xchg
aas
add
clc
repnz
nop
nop
jae
add
inc
mov
add
fld1
clc
repnz
nop
nop
jae
roll
add
mov
add
add
testl
mov
jo
cmp
mov
clc
repnz
nop
nop
jae
insb
daa
add
mov
push
add
cld
nop
nop
jae
add
push
add
lea
repnz
nop
nop
jae
rorl
shrl
add
mov
xchg
ret
add
ret
add
jmp
add
into
add
jb
into
inc
add
insb
xor
mov
leave
nop
jmp
add
add
insb
add
cmp
clc
repnz
nop
nop
jae
add
data16
mov
clc
repnz
nop
nop
jae
add
add
data16
mov
xchg
ret
add
les
add
ret
cld
clc
repnz
nop
nop
jae
mov
add
insb
add
out
add
clc
repnz
nop
nop
jae
add
add
rcl
sub
insb
add
add
clc
repnz
nop
nop
jae
sti
inc
mov
add
push
mov
leave
nop
jmp
add
add
insb
add
scas
pop
clc
repnz
nop
nop
jae
insl
shll
add
je
in
mov
xor
clc
repnz
nop
nop
jae
movsl
sub
clc
repnz
nop
nop
jae
add
add
insl
mov
fists
in
ja
xor
inc
add
jl
dec
outsl
add
add
add
nop
nop
jae
add
repz
mov
add
add
nop
nop
jae
add
add
add
jb
mov
clc
repnz
nop
nop
jae
add
xor
add
int3
dec
mov
nop
push
mov
leave
nop
jmp
cmp
add
mov
clc
repnz
nop
nop
jae
add
int3
mov
add
inc
push
mov
xchg
ret
add
insb
add
addr16
add
push
mov
xchg
ret
gs
add
mov
mov
dec
add
nop
push
mov
leave
nop
jmp
bound
add
add
pushl
nop
push
mov
leave
nop
jmp
add
add
add
test
nop
nop
jae
add
add
add
jmp
data16
roll
mov
andl
add
cld
nop
nop
jae
or
add
shll
add
sbb
push
mov
xchg
ret
mov
add
add
repnz
nop
nop
jae
add
push
xor
pop
clc
repnz
nop
nop
jae
add
rorl
add
sbb
or
add
cli
add
add
repz
repnz
nop
nop
jae
mov
add
xchg
pop
push
mov
xchg
ret
add
mov
add
add
insb
je
mov
ficoms
and
add
add
inc
cmp
mov
xchg
ret
cmp
add
repz
shrl
nop
jae
insl
pop
ljmp
add
jmp
mov
add
add
maxps
mov
add
out
add
data16
or
push
mov
xchg
ret
pop
push
add
add
add
lret
push
clc
repnz
nop
nop
jae
add
add
add
pop
add
repnz
nop
nop
jae
add
add
mov
mov
xchg
ret
add
add
faddp
pop
pop
clc
repnz
nop
nop
jae
add
repz
add
mov
jb
add
push
push
inc
roll
add
daa
or
jo
push
add
jae
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
das
mov
add
hlt
in
mov
clc
repnz
nop
nop
jae
shll
push
add
clc
repnz
nop
nop
jae
insl
or
sub
push
mov
xchg
ret
add
mov
inc
insb
movsl
push
push
clc
repnz
nop
nop
jae
add
add
add
add
pusha
push
mov
xchg
ret
add
add
mov
push
add
jg
clc
repnz
nop
nop
jae
add
add
adc
push
push
mov
xchg
ret
mov
mov
cli
roll
add
inc
add
add
nop
nop
jae
add
add
rep
clc
repnz
nop
nop
jae
add
gs
cmp
adc
add
repnz
nop
nop
jae
mov
mov
xchg
ret
add
add
add
add
push
push
jne
clc
repnz
nop
nop
jae
add
addr16
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
addl
clc
repnz
nop
nop
jae
add
add
mov
jns
and
xchg
mov
testb
xchg
push
clc
repnz
nop
nop
jae
add
rolb
mov
push
mov
add
repnz
nop
nop
jae
cmp
add
add
add
pop
clc
repnz
nop
nop
jae
data16
enter
dec
push
nop
push
mov
leave
nop
jmp
add
movsl
roll
push
push
push
mov
xchg
ret
sub
add
mov
and
repnz
nop
nop
jae
cmp
xor
rcl
fmul
pop
clc
repnz
nop
nop
jae
add
add
add
push
test
stc
nop
push
mov
leave
nop
jmp
roll
add
xchg
add
out
push
mov
xchg
ret
roll
or
add
sbb
xchg
mov
push
mov
xchg
ret
mov
add
add
pop
nop
push
mov
leave
nop
jmp
roll
ret
add
call
mov
xchg
ret
roll
push
jae
add
add
rorl
nop
nop
jae
add
outsl
sub
clc
repnz
nop
nop
jae
inc
add
add
adc
loop
inc
add
add
add
add
add
add
repnz
nop
nop
jae
add
push
clc
repnz
nop
nop
jae
add
push
mov
xchg
ret
add
add
push
mov
xchg
ret
bound
add
cmpsb
in
add
push
push
mov
xchg
ret
add
cmp
rolb
ljmp
clc
repnz
nop
nop
jae
add
xor
nop
nop
jae
daa
daa
mov
xchg
or
push
add
jge
jmp
nop
push
mov
leave
nop
jmp
data16
mov
sbb
repnz
nop
nop
jae
xor
rcll
arpl
push
mov
leave
nop
jmp
ljmp
add
jmp
push
add
out
mov
rolb
jg
inc
push
mov
xchg
ret
add
xor
inc
sub
lock
repnz
nop
nop
jae
data16
or
dec
add
add
not
add
stos
rcr
fwait
clc
repnz
nop
nop
jae
add
mov
mov
ds
push
mov
xchg
ret
mov
fiaddl
add
push
add
das
fdivr
clc
repnz
nop
nop
jae
add
jle
mov
loope
repnz
nop
nop
jae
mulb
inc
jb
add
nop
nop
jae
mov
das
add
add
aas
add
clc
repnz
nop
nop
jae
add
mov
stc
stos
clc
repnz
nop
nop
jae
add
insb
add
add
andl
inc
add
add
add
daa
cmp
mov
fidivl
roll
rolb
add
add
mov
xchg
ret
add
and
shrl
sub
nop
push
mov
leave
nop
jmp
xor
xchg
xor
add
lret
jl
clc
repnz
nop
nop
jae
insl
ljmp
nop
nop
jae
add
add
data16
ljmp
dec
es
repnz
nop
nop
jae
add
jle
scas
push
clc
repnz
nop
nop
jae
add
add
add
add
inc
add
clc
repnz
nop
nop
jae
add
mov
cmc
pop
push
mov
xchg
ret
mov
fiaddl
add
int3
int3
stos
out
add
push
mov
xchg
ret
inc
add
rolb
add
lods
ja
clc
repnz
nop
nop
jae
adc
add
inc
xor
mov
add
addr16
push
mov
xchg
ret
je
add
add
jge
clc
repnz
nop
nop
jae
add
add
sub
and
pop
sub
repnz
nop
nop
jae
insb
add
adc
push
mov
xchg
ret
je
or
mov
das
ret
add
adc
repnz
nop
nop
jae
testb
mov
add
push
push
mov
xchg
ret
add
inc
or
mov
lock
lahf
add
clc
repnz
nop
nop
jae
insl
addr16
add
repz
clc
repnz
nop
nop
jae
int3
insl
je
cmp
push
mov
xchg
ret
add
add
les
pop
call
nop
jmp
mov
pop
cmp
mov
xchg
ret
add
add
das
movsl
and
add
pop
clc
repnz
nop
nop
jae
mov
shll
cmc
add
add
or
into
add
ljmp
mov
fmull
add
xor
repnz
nop
nop
jae
add
sti
add
add
add
and
mov
add
add
bound
add
add
aam
add
clc
repnz
nop
nop
jae
add
add
test
jne
clc
repnz
nop
nop
jae
mov
add
xor
sub
clc
repnz
nop
nop
jae
mov
cli
sbb
rolb
cld
nop
nop
jae
addr16
inc
shll
add
add
clc
repnz
nop
nop
jae
je
add
out
aad
add
add
nop
jae
les
mov
mov
xchg
ret
add
das
out
add
add
nop
push
mov
leave
nop
jmp
add
roll
add
testl
subl
add
adc
push
add
dec
nop
push
mov
leave
nop
jmp
add
push
add
add
cld
nop
nop
jae
add
add
add
add
sbb
mov
mov
xchg
ret
add
sbb
push
mov
leave
nop
jmp
add
add
add
mov
cltd
cmp
nop
push
mov
leave
nop
jmp
insl
int3
add
sahf
adc
std
clc
repnz
nop
nop
jae
repz
mov
adc
lret
add
rcr
fs
imul
cld
nop
nop
jae
rcl
xor
or
jo
flds
jne
clc
repnz
nop
nop
jae
insl
jle
add
call
nop
jae
inc
gs
add
fldt
nop
push
mov
leave
nop
jmp
sub
add
push
mov
xchg
ret
roll
add
add
add
add
repnz
nop
nop
jae
rcll
icebp
jne
clc
repnz
nop
nop
jae
add
add
mov
leave
nop
jmp
les
add
add
cmp
dec
cmp
repnz
nop
nop
jae
mov
adc
bound
mov
and
add
je
mov
inc
add
xlat
clc
repnz
nop
nop
jae
add
lea
nop
push
mov
leave
nop
jmp
ret
das
mov
mov
ret
nop
push
mov
leave
nop
jmp
jle
xor
int3
add
add
and
add
nop
jmp
adc
push
add
adc
add
add
repnz
nop
nop
jae
fiaddl
add
in
jl
scas
lret
push
clc
repnz
nop
nop
jae
bound
add
pop
fwait
clc
repnz
nop
nop
jae
add
das
sub
adc
repnz
nop
nop
jae
add
insl
jae
jle
loop
ret
loop
clc
repnz
nop
nop
jae
add
gs
sub
mov
xchg
ret
inc
add
das
push
xchg
add
add
add
bound
cld
repnz
ss
cs
clc
repnz
nop
nop
jae
add
add
add
mov
push
push
mov
xchg
ret
add
mov
out
mov
clc
repnz
nop
nop
jae
add
cmp
incl
push
roll
sti
les
mov
sub
je
add
jne
push
mov
xchg
ret
add
add
add
out
add
repnz
nop
nop
jae
mov
into
je
mov
clc
repnz
nop
nop
jae
add
aas
popl
clc
repnz
nop
nop
jae
mov
mov
push
mov
push
mov
xchg
ret
adc
add
or
inc
subl
cld
nop
nop
jae
push
adc
xor
repnz
nop
nop
jae
add
add
and
jae
push
mov
add
clc
repnz
nop
nop
jae
rcl
add
or
mov
leave
nop
jmp
add
rcrl
testl
jmp
movsl
int3
add
out
movb
loopne
inc
add
add
add
clc
push
mov
xchg
ret
add
add
and
ror
or
cmp
in
leave
nop
jmp
ljmp
lds
in
leave
nop
jmp
mov
add
outsl
mov
clc
repnz
nop
nop
jae
jb
add
add
repnz
nop
nop
jae
mov
add
mov
clc
clc
repnz
nop
nop
jae
xchg
insb
out
xor
in
mov
clc
repnz
nop
nop
jae
pop
inc
push
mov
insl
inc
mov
nop
push
mov
leave
nop
jmp
add
adc
jne
clc
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
movsl
add
or
addl
push
mov
leave
nop
jmp
add
add
xor
add
mov
mov
xchg
ret
sub
add
rcl
lahf
movzwl
clc
repnz
nop
nop
jae
mov
add
add
add
out
cmp
movsl
clc
repnz
nop
nop
jae
add
add
inc
add
xchg
xor
nop
push
mov
leave
nop
jmp
add
mov
mov
clc
repnz
nop
nop
jae
add
lea
cld
nop
nop
jae
xchg
das
add
insl
loop
data16
dec
cmp
repnz
nop
nop
jae
add
ret
add
pusha
push
mov
xchg
ret
add
or
les
push
mov
xchg
ret
roll
add
or
mov
clc
repnz
nop
nop
jae
add
roll
je
lahf
or
clc
repnz
nop
nop
jae
or
bound
insl
iret
popa
clc
repnz
nop
nop
jae
inc
add
mov
je
cmp
push
add
mov
add
clc
repnz
nop
nop
jae
inc
add
add
add
ror
sub
clc
repnz
nop
nop
jae
addr16
add
add
nop
push
mov
leave
nop
jmp
xchg
or
iret
push
mov
push
ret
add
outsl
mov
pop
add
add
rcr
and
mov
xchg
ret
mov
mov
add
into
jge
push
mov
xchg
ret
or
xor
add
insl
addr16
clc
repnz
nop
nop
jae
mov
mov
clc
repnz
nop
nop
jae
push
add
ret
add
enter
or
nop
nop
jae
or
les
adc
add
push
push
mov
xchg
ret
jb
add
add
add
adc
jbe
mov
jbe
add
mov
add
adc
add
in
xorl
clc
repnz
nop
nop
jae
jb
xor
outsb
add
add
push
mov
xchg
ret
roll
xor
add
test
sub
lahf
pop
clc
repnz
nop
nop
jae
add
daa
add
bound
rcll
add
add
inc
mov
sub
inc
fistpl
clc
repnz
nop
nop
jae
add
dec
add
add
jbe
sub
cld
nop
nop
jae
cmp
push
add
mov
repnz
nop
nop
jae
or
and
add
add
lods
fld1
clc
repnz
nop
nop
jae
add
push
xchg
xor
bound
pushl
clc
repnz
nop
nop
jae
movsl
add
add
add
sar
clc
repnz
nop
nop
jae
das
add
add
add
jns
clc
repnz
nop
nop
jae
add
add
mov
mov
add
xor
add
clc
repnz
nop
nop
jae
insb
out
aam
mov
push
mov
xchg
ret
inc
mov
add
mov
add
popf
fld1
push
mov
xchg
ret
add
insl
mov
sar
mov
clc
repnz
nop
nop
jae
insb
fiaddl
add
mov
clc
repnz
nop
nop
jae
add
cmp
push
xchg
mov
push
mov
xchg
ret
xchg
ret
add
push
repnz
sub
clc
clc
repnz
nop
nop
jae
jle
add
xor
mov
clc
repnz
nop
nop
jae
cli
ljmp
add
nop
push
mov
leave
nop
jmp
inc
sti
xor
testb
sbb
loop
add
mov
add
sti
add
xor
insb
add
mov
leave
nop
jmp
mov
mov
js
orl
repnz
nop
nop
jae
add
add
xor
and
mov
xor
clc
repnz
nop
nop
jae
fidivrl
add
clc
repnz
nop
nop
jae
add
int3
add
inc
push
lcall
push
mov
leave
nop
jmp
xchg
sti
xor
add
mov
nop
push
mov
leave
nop
jmp
cmp
mov
push
clc
repnz
nop
nop
jae
shrl
add
pushl
nop
push
mov
leave
nop
jmp
cmp
add
add
lea
push
mov
xchg
ret
add
ja
fld1
clc
repnz
nop
nop
jae
add
jae
inc
out
add
nop
push
mov
leave
nop
jmp
into
add
add
mov
nop
push
mov
leave
nop
jmp
rolb
add
add
ss
mov
fwait
xchg
xchg
nop
push
mov
leave
nop
jmp
mov
push
nop
push
mov
leave
nop
jmp
int3
mov
add
jle
mov
clc
repnz
nop
nop
jae
push
add
mov
add
add
outsb
add
repnz
nop
nop
jae
ret
insl
mov
je
push
clc
repnz
nop
nop
jae
add
add
in
repz
clc
repnz
nop
nop
jae
add
add
add
leave
nop
jmp
pop
add
inc
or
repnz
nop
nop
jae
or
add
xor
and
add
clc
repnz
nop
nop
jae
movsl
or
inc
add
xor
nop
push
mov
leave
nop
jmp
or
insl
out
insl
push
dec
mov
push
mov
xchg
ret
adc
mov
add
cli
test
imul
nop
push
mov
leave
nop
jmp
add
mov
shrl
test
mov
nop
nop
jae
cli
mov
mov
mov
add
adc
push
sub
nop
jmp
inc
das
jae
rcr
sbb
data16
clc
repnz
nop
nop
jae
add
xchg
push
clc
repnz
nop
nop
jae
add
add
mov
rcll
nop
jmp
or
test
add
add
call
nop
jae
add
or
add
rcrb
clc
repnz
nop
nop
jae
add
call
inc
add
roll
roll
cmp
aas
cmpw
nop
push
mov
leave
nop
jmp
add
inc
insb
scas
push
xor
nop
push
mov
leave
nop
jmp
add
add
roll
cli
adc
repnz
nop
nop
jae
add
add
addl
nop
nop
jae
add
jb
mov
jne
nop
push
mov
leave
nop
jmp
add
mov
std
fistpl
push
mov
xchg
ret
movsl
inc
insl
jle
add
out
clc
repnz
nop
nop
jae
add
add
inc
add
mov
bound
dec
mov
clc
repnz
nop
nop
jae
add
or
add
add
cmp
in
leave
nop
jmp
or
add
sbb
pop
inc
add
add
mov
nop
push
mov
leave
nop
jmp
or
cmp
movsl
add
call
add
add
cld
nop
nop
jae
mov
mov
cmpsl
inc
push
mov
xchg
ret
add
add
add
mov
add
add
clc
repnz
nop
nop
jae
add
je
mov
roll
repnz
nop
nop
jae
out
add
add
xchg
inc
add
jle
add
cli
xor
test
repnz
nop
nop
jae
insb
add
aam
clc
repnz
nop
nop
jae
mov
dec
add
cmp
mov
leave
nop
jmp
add
add
roll
ret
mov
clc
repnz
nop
nop
jae
mov
add
nop
nop
jae
add
movsl
bound
add
scas
repnz
mov
nop
push
mov
leave
nop
jmp
add
arpl
clc
repnz
nop
nop
jae
add
add
nop
push
mov
leave
nop
jmp
add
bound
into
fwait
mov
push
mov
xchg
ret
repz
je
add
clc
repnz
nop
nop
jae
add
add
movsl
add
mov
xchg
ret
add
add
push
mov
clc
repnz
nop
nop
jae
or
cmpl
mov
xchg
ret
cmp
jb
add
in
add
add
add
add
add
xor
test
jmp
out
lock
or
rclb
add
add
add
jmp
xchg
mov
fmull
add
mov
xlat
bound
dec
add
add
pop
add
fdiv
jmp
jg
push
add
mov
mov
mov
push
cmpsb
and
xlat
dec
add
and
mov
xor
adc
sbb
loope
lahf
scas
cmpsl
lahf
pop
jne
add
add
sti
jae
pop
fists
stos
mov
dec
add
add
sarb
mov
sysexit
jb
fsubl
add
pop
push
add
add
xchg
mov
push
mov
add
adc
cmp
push
add
add
add
insb
add
mov
or
push
mov
or
fwait
pop
add
orb
mov
add
add
mov
mov
dec
add
sahf
repnz
mov
mov
out
inc
idiv
lds
in
repnz
add
inc
add
add
pop
and
or
and
dec
add
dec
int3
sbb
cli
neg
xor
and
inc
in
nop
in
xchg
cmp
or
jb
fxch
aad
sub
xor
sbb
frstor
mov
pop
xorb
mov
pop
add
add
add
pop
add
add
add
in
add
inc
add
or
sbb
movsl
xchg
lahf
out
inc
out
pop
test
clc
rolb
test
add
add
mov
mov
enter
repnz
add
dec
add
pop
mov
mov
add
lahf
shrb
push
add
inc
add
scas
cmp
inc
pop
add
decb
jb
flds
enter
movsl
mov
pushf
rcrb
add
sbb
and
sbb
xor
xchg
add
pop
notb
add
inc
add
xchg
mov
xchg
cmp
imul
mov
js
add
pusha
add
add
fildl
pop
xchg
mov
dec
add
jo
fdivs
add
add
mul
lcall
push
add
add
push
add
lret
dec
add
shll
add
mov
add
enter
mov
inc
add
mov
push
pop
inc
bound
cltd
xor
sar
adc
add
daa
arpl
stos
scas
jl
mov
pop
js
xor
mov
lahf
or
in
incb
pop
add
cmp
or
add
sarb
add
inc
add
xor
and
xchg
cmpsl
mov
push
add
test
add
xlat
mov
loopne
das
mov
int
add
insl
add
add
in
add
push
mov
sbb
sub
lds
xchg
fmulp
addr16
add
jp
jno
outsb
add
cli
ja
add
into
cld
mov
and
outsl
push
add
add
imul
pop
add
sbb
insb
add
out
xorl
add
add
jg
fdiv
jo
and
adc
mov
add
dec
andl
dec
call
leave
xchg
bound
lods
jo
jmp
add
add
fcmovne
pop
jae
arpl
mov
dec
cmp
push
add
enter
add
cmp
inc
movsb
aad
test
lret
add
add
mov
lods
mov
add
cmp
add
mov
add
shl
gs
xchg
test
or
add
add
add
push
xchg
js
jno
add
fwait
cmp
pop
push
je
and
inc
add
sub
insl
mov
xchg
pop
dec
add
sbbl
fildll
roll
add
xor
imul
popf
daa
sbb
pop
cmpsb
mov
pop
add
add
test
cld
and
popf
sbb
push
add
in
out
add
pop
mov
xchg
cmpsl
pusha
add
aad
jmp
call
push
cld
adc
cmpl
hlt
sub
out
leave
syscall
std
out
mov
incb
inc
add
add
xor
lret
add
add
pop
push
add
jmp
iret
ds
and
fstl
add
movsl
scas
mov
enter
gs
add
sub
push
imulb
add
cmp
add
push
cmc
jbe
mov
incl
add
add
add
mov
inc
add
adc
push
mov
add
add
add
aam
adc
pop
mov
mov
addr16
add
outsl
out
stos
xor
add
xchg
fsts
loop
rcr
add
add
in
add
mov
repnz
aas
adc
loope
jge
lods
cmp
pop
inc
add
jg
xchg
imul
sub
mov
stos
adc
add
xor
xor
call
hlt
sarb
divb
fildl
add
ja
test
pushf
pop
and
daa
and
testb
add
cmp
insl
pusha
add
add
add
or
lds
scas
iret
mov
add
mov
push
lods
push
add
rcrl
add
add
add
popl
sahf
aam
ss
or
cmp
dec
out
add
fisubl
cmp
cmpsb
dec
cmpsb
ds
pop
add
mov
add
add
add
ja
mov
add
jecxz
cmpl
add
je
jg
hlt
lcall
add
add
xchg
lods
and
std
pop
add
cmp
xor
leave
lret
add
or
enter
lea
xchg
dec
aad
push
xchg
daa
in
add
xchg
mulps
inc
add
dec
add
add
inc
fstps
sub
aaa
cwtl
stos
jb
push
add
inc
data16
add
add
lcall
add
fdivrl
lock
aad
out
pushf
and
sbb
mov
scas
adc
arpl
xchg
mov
stc
insl
push
add
aaa
jmp
aam
test
xor
inc
add
lods
sbb
inc
add
add
mov
cmp
pop
test
add
ja
dec
add
jne
mulb
pop
ret
or
xor
pop
out
dec
add
dec
add
add
xor
add
jg
add
dec
add
or
adc
xchg
out
sub
and
inc
push
loopne
icebp
mov
jne
add
inc
cmpsb
arpl
add
push
add
xchg
iret
sbb
gs
cmp
flds
pop
xchg
push
add
fsubr
scas
mov
inc
add
mov
and
leave
xor
xchg
adcl
add
inc
add
xchg
popl
add
jmp
add
add
jmp
and
sahf
lahf
inc
mov
xchg
mov
jg
add
add
lcall
add
add
cld
push
cwtl
cli
rorl
add
mov
cmp
cmpsb
imul
jae
xor
hlt
fcmovb
iret
cld
in
std
pop
outsl
ret
movsl
jle
in
add
cmpsl
repnz
dec
mov
mov
cltd
and
imul
sarb
add
pop
add
mov
pushf
dec
inc
add
or
pusha
add
mov
sbbb
sbb
out
cmp
dec
add
xchg
je
and
rcr
and
test
sarl
das
fs
out
fcoml
add
add
add
js
sbbl
sbb
cmpsb
xchg
xor
add
int3
mov
add
or
lret
pop
add
ljmp
push
dec
pop
add
sbb
add
jns
out
aaa
and
dec
add
mov
jb
es
test
imul
add
je
push
inc
ficomps
movsb
and
mov
dec
call
add
sbb
push
testl
sub
sbb
lods
stos
out
lods
adc
inc
add
cli
push
sahf
mov
adc
inc
outsb
add
ret
mov
lret
sub
add
push
decb
pop
add
adcl
rolb
add
mov
xchg
add
shrb
movb
inc
or
and
jle
push
add
pop
pop
cwtl
int
movb
sbb
adc
push
add
faddl
mov
subb
add
push
mov
add
xor
xor
push
cmp
and
add
pop
in
sahf
arpl
xor
fistpll
in
inc
add
rcrl
push
add
cmc
movsl
jb
xor
push
add
push
add
jge
xchg
or
cmp
xor
aad
add
lock
add
mov
add
ror
xchg
push
add
add
pop
daa
adc
into
insb
add
mov
add
incb
add
cs
scas
pop
ret
pop
jne
adc
mov
xchg
inc
add
or
sahf
fstl
jge
rcr
or
push
add
repnz
sub
cwtl
inc
fsubrl
icebp
lods
out
add
add
arpl
xchg
mov
pop
sti
add
sarl
add
and
dec
dec
popa
mov
ss
jbe
and
xchg
lock
add
and
adc
mov
add
add
sub
and
mov
bound
jne
push
add
les
pop
add
fnsave
add
jecxz
clc
aaa
jae
dec
cmp
xor
xor
dec
add
add
fsts
add
inc
sbb
mov
aad
js
sbbl
mov
into
lock
add
inc
add
push
xor
pop
xchg
and
add
add
lret
hlt
mov
add
mov
leave
test
in
add
add
push
add
cmp
movb
les
xchg
sbb
mov
xor
push
add
mov
mov
add
inc
add
pusha
add
add
in
mov
ja
add
add
add
adc
add
rorb
xchg
cs
jl
xor
sbb
add
pop
add
xchg
xchg
fsubrs
add
add
add
mov
cwtl
lock
ror
sbb
add
sbb
mov
fimull
mov
jge
mov
mov
mov
add
add
cld
shrb
jp
mov
xchg
out
push
sbb
cwtl
push
add
je
insb
add
cmp
outsl
das
inc
lahf
mov
fnclex
jb
jbe
sbb
push
add
data16
adc
inc
add
or
sbb
fmulp
stc
out
jle
mov
push
add
or
add
mov
add
test
adc
data16
in
add
add
mov
add
cmpsb
jmp
in
cmpb
add
aas
rcll
add
add
push
add
ret
xchg
sahf
loop
add
leave
fdivr
and
aad
lds
pop
add
add
add
add
mov
add
push
add
cwtl
roll
add
mov
cmp
sub
call
std
cmpl
lds
por
aas
gs
add
filds
and
cmp
sbb
push
add
pusha
add
and
stos
test
mov
nop
ljmp
repnz
pop
rol
test
out
test
sti
pop
add
xchg
mov
add
repnz
push
shl
bound
mov
lret
add
xor
adc
xor
jne
out
leave
push
add
add
fmull
les
mov
add
in
lock
add
adc
xor
inc
nop
loope
test
add
cmp
push
js
adc
jno
add
cmc
mov
mov
mov
add
leave
mov
ficoml
sub
enter
fnsave
mov
cmp
hlt
push
lahf
or
popf
or
call
add
dec
xchg
or
jb
push
add
sub
loopne
add
andb
cmc
insb
add
adc
jp
mov
dec
mov
les
and
mov
outsl
insb
add
add
stc
ret
daa
xor
jno
add
leave
and
repnz
dec
push
int
add
dec
cmp
add
add
add
pop
add
adc
aad
add
sahf
mov
orl
add
ljmp
inc
icebp
call
xor
cwtl
leave
xchg
lods
pop
clc
in
dec
add
enter
add
test
add
mov
mov
add
or
bound
add
clc
pushf
arpl
or
jge
add
fstpl
mov
cmp
add
or
push
add
sahf
xchg
loope
dec
dec
add
jae
lcall
jl
sub
nop
xchg
cmpl
add
fcomi
and
jecxz
and
mov
sarb
xor
cmp
popf
in
sub
or
jbe
pop
add
add
sub
mov
repnz
or
add
mov
dec
add
xchg
add
nop
cmp
rorb
scas
or
inc
add
stos
pusha
add
cmp
pop
cmpsl
jo
movsb
jo
jns
xchg
xor
pop
push
add
add
fwait
mov
dec
inc
loope
jge
rcl
imul
jns
add
pop
imul
add
insb
add
nop
dec
rcrb
loopne
test
add
and
add
xchg
add
arpl
add
int3
fwait
outsl
dec
add
jne
pop
iret
push
add
add
movsb
pop
add
pop
add
stc
adc
xchg
jno
mov
movb
add
push
add
movsb
add
add
add
data16
clc
cmpsb
lret
fists
add
jp
dec
pop
ja
add
mov
adc
inc
dec
repnz
add
cmp
add
push
add
das
dec
in
daa
arpl
add
xor
push
add
stos
xchg
test
add
xor
mov
pushf
fcomp
xchg
lret
mov
cmp
fidivl
mov
lret
in
or
daa
pop
add
test
jae
je
idivl
add
ds
inc
add
add
add
add
lods
lock
stos
add
xchg
movsb
insb
add
popa
cmp
pop
repnz
push
push
and
dec
bound
scas
out
inc
mov
add
xchg
mov
pop
lds
pop
and
cwtl
ja
add
stos
shlb
add
ret
sub
addr16
add
insl
pushf
dec
xchg
mov
add
or
xchg
jle
sti
xchg
add
dec
add
add
and
sub
imul
loope
add
imul
mov
dec
add
adc
pop
cmp
lcall
mov
xor
add
add
test
inc
add
jg
cmpsb
arpl
outsl
cltd
outsb
add
mov
add
dec
adc
sbb
sub
addr16
adc
inc
sub
daa
popa
inc
add
cwtl
js
fdivr
or
popf
adc
add
ja
bound
sbb
push
add
jo
push
add
cmc
xor
xor
dec
fsubrl
add
stos
repnz
add
sub
pop
push
add
scas
bound
cmp
add
mov
pop
in
pop
sbb
fsubrs
add
mov
or
inc
sbb
jle
inc
lods
cwtl
nop
ja
mov
mov
loopne
add
sbb
fildll
dec
add
add
adc
mulb
dec
add
dec
or
push
add
mov
lods
jo
mov
movsl
push
movsb
mov
add
call
add
lods
popa
lret
or
loop
add
in
or
add
lea
add
sbb
jne
push
add
dec
add
sbb
hlt
sub
mov
int
add
data16
pop
lods
fnsave
pop
add
jno
add
ret
lods
fcmovne
gs
push
sub
inc
push
add
add
add
add
sub
out
dec
add
xchg
ljmp
movsl
int3
inc
icebp
mov
add
cmp
sub
jle
push
add
add
add
sub
loopne
adc
cli
pop
shlb
add
jbe
jne
cmp
dec
add
add
bound
and
mov
aas
lods
das
ljmp
loopne
pop
test
add
and
std
ret
add
add
add
outsl
out
bound
inc
mov
pop
mov
je
cs
dec
add
mov
pop
add
xchg
push
add
in
cmp
mov
mov
test
call
add
fwait
adc
or
add
sbb
mulb
sbb
add
xchg
test
dec
or
fisttps
add
push
add
stos
les
xor
sti
dec
iret
sbb
das
xlat
roll
sub
test
dec
add
orl
add
jmp
test
add
and
add
mov
aaa
icebp
imul
jecxz
sbb
mov
fisttpl
sbb
stos
nop
jns
shlb
les
dec
add
inc
dec
add
jnp
aas
out
add
add
adc
xchg
and
push
add
mov
mov
mov
data16
add
and
cwtl
push
add
jb
sub
add
cmp
add
add
add
out
gs
dec
xor
ljmp
push
jns
out
lret
adc
aaa
mov
sbb
std
and
shrl
pop
add
pop
test
fs
mov
add
test
add
notl
add
call
add
mov
add
insb
add
add
sub
xchg
bound
sbbb
add
add
and
add
cmp
inc
add
shrb
pusha
add
das
dec
add
sbb
sti
push
xor
adc
or
fwait
mov
add
inc
add
add
andb
jp
xchg
sub
repnz
jle
pop
add
int3
jmp
add
add
stc
pop
add
into
mov
add
add
pop
add
xchg
and
add
dec
add
add
xor
bound
push
add
add
sti
stos
cmp
mov
dec
outsl
inc
add
sahf
inc
add
mov
sarl
add
insb
add
negb
add
add
dec
loopne
rcl
leave
xchg
ror
inc
add
add
dec
pop
sbb
lock
inc
add
fnstcw
add
rcrb
add
pushf
and
xor
dec
add
xchg
insl
sub
sbb
out
xlat
sbb
adc
add
lds
add
int
ret
dec
add
out
shrb
ja
or
aad
ss
cmpb
cmpsb
push
nop
lea
pop
add
fisttpll
mov
out
jb
out
lea
add
stos
xchg
add
cli
push
xor
fbstp
mov
xor
add
add
add
add
mov
call
add
loop
inc
or
aaa
xchg
stos
cltd
stc
push
add
add
jl
lods
daa
inc
add
in
pop
out
inc
add
mov
add
fcom
mov
fwait
sub
xchg
sti
lret
xadd
outsb
add
add
add
out
pop
test
add
lret
stc
cmp
inc
add
cltd
add
mov
ffree
arpl
add
mov
aaa
notl
lahf
stos
jbe
cmpsl
jge
jne
or
xor
fistps
xor
mov
cmpsl
push
add
cmpsb
mov
add
popf
pop
mov
lock
sahf
fwait
sbb
push
mov
add
mov
xchg
test
out
xor
in
or
jbe
jb
push
rcrb
xchg
push
add
test
loop
je
mov
inc
push
adc
fwait
movsb
shl
incl
jg
mov
xchg
insl
push
sub
addb
add
add
pop
xchg
mov
jae
scas
imul
inc
out
add
cs
add
add
pop
dec
add
and
jle
xchg
loopne
add
and
pushf
or
testb
lods
int3
stc
add
adc
fwait
jecxz
jns
add
push
add
cmp
add
imul
push
test
add
push
add
fsubp
nop
xchg
sbb
mov
add
and
add
lahf
fmul
sbb
out
add
xlat
aam
add
gs
imul
sbb
mov
add
mov
mov
add
and
outsb
add
mov
add
stos
adc
imul
out
jle
dec
mov
dec
mov
xor
inc
adc
push
add
popa
sbb
add
add
mov
rolb
mov
sub
js
loop
jns
sti
pop
shrl
repz
lock
xchg
xchg
nop
sahf
cwtl
jne
int
adc
and
and
pop
fbstp
add
inc
add
out
xchg
test
das
add
or
aas
xchg
call
add
daa
movsb
inc
add
dec
add
outsl
push
subb
out
jl
push
add
cmp
in
cwtl
movsb
lock
push
out
inc
add
sub
add
add
orb
bound
sub
cmpsb
xlat
fiaddl
imul
add
les
add
add
xchg
imull
add
pushf
mov
jmp
jmp
insb
add
sbb
xchg
sbb
ss
je
add
mov
inc
aad
add
stos
pushf
inc
adc
pop
in
add
stos
add
pop
adc
adcl
add
add
add
add
sbb
inc
add
mov
ds
js
lods
stos
outsl
bswap
jg
mov
cli
aad
pushf
jl
test
adc
das
jge
add
add
sub
addb
jne
ror
push
repnz
push
add
inc
sbb
or
mov
push
js
add
dec
add
call
add
xchg
test
ljmp
scas
xchg
jg
rcll
and
or
fcompl
popa
pop
push
add
add
cmpsl
pusha
add
jle
xchg
adc
lcall
xchg
pusha
add
pop
add
xor
sbb
shlb
cwtl
xor
pop
lahf
push
js
sbb
cmp
dec
add
cmpsl
mov
fldz
cmp
inc
add
cmp
dec
add
and
push
add
add
out
cs
gs
add
jl
addr16
ja
add
inc
add
dec
add
test
xchg
add
xor
and
pop
add
add
js
mov
add
cmp
push
lods
jae
jnp
pop
add
mov
ficoml
add
add
dec
mov
in
cmpb
add
mov
push
add
mov
mov
scas
int3
lcall
leave
dec
mov
jmp
outsb
add
mov
sub
repnz
add
xlat
std
sbb
add
push
add
icebp
pop
je
aam
or
add
push
push
jl
in
inc
sub
lahf
pop
add
out
adc
and
into
loopne
add
add
pop
pusha
add
add
add
test
add
sti
adc
test
lret
aad
push
and
or
insb
add
add
inc
xlat
pop
add
push
add
add
pushf
movsl
xchg
addr16
add
cltd
add
add
sbb
nop
mov
adc
into
sbb
aam
add
test
jl
dec
nop
sub
jle
xchg
fildll
enter
sbb
add
xor
movsb
or
leave
inc
add
mov
add
add
mov
add
adc
add
aam
dec
push
add
popa
sbb
mov
cwtl
aam
add
inc
add
mov
outsl
mov
sarb
xchg
outsl
mov
loop
add
add
mov
dec
add
add
cmpsb
shl
mov
or
data16
data16
pop
adc
sti
ficomps
mov
lds
dec
add
dec
add
add
add
or
mov
in
xlat
pop
add
jbe
fwait
dec
add
pop
add
jmp
add
out
aas
pop
adc
int3
jp
cmp
test
shlb
sub
fdivrs
adc
add
imul
mov
inc
add
imul
adc
enter
push
and
mov
repnz
mov
in
add
xorb
and
out
in
pop
add
rcrl
pop
fstpl
cmp
out
lret
ds
cld
jno
add
add
and
lret
xchg
inc
jmp
loope
js
rol
cltd
xlat
fistpll
xor
pop
in
add
jae
rcr
xchg
je
js
mov
dec
es
dec
pusha
add
mov
add
lcall
add
jp
jbe
in
mov
mov
add
cmpsl
stos
test
add
or
ret
jmp
add
xor
jbe
adc
jge
add
xchg
insb
add
sti
aad
outsl
loop
add
pop
push
sub
mov
sti
ja
add
sbb
aaa
fwait
cmp
popa
movsb
push
add
add
add
inc
add
add
adc
push
add
push
cmp
inc
add
sbb
in
push
add
add
pushf
push
xor
sbb
xchg
into
stos
pop
add
daa
sbb
xchg
mov
mov
gs
mov
mov
add
mov
add
add
add
inc
add
addl
ja
lret
xlat
mov
ljmp
push
add
jne
fisubrs
add
xor
aam
xchg
jecxz
add
inc
js
loope
jbe
or
mov
sbb
lods
adc
push
add
xorl
mov
outsb
add
push
inc
add
in
push
push
add
jp
dec
add
mov
add
sbb
inc
add
pusha
add
iret
dec
in
lods
hlt
dec
add
outsl
jbe
jo
lahf
cli
sbb
outsl
fistpll
push
add
jb
xor
cmp
out
add
test
add
pop
pop
push
add
dec
add
jp
adc
and
lcall
or
cltd
icebp
mov
add
push
push
mov
sarb
movsl
shlb
out
jns
inc
add
outsl
push
aaa
xor
pop
add
add
fstpt
jge
aam
xlat
jp
andl
out
lods
sbb
jg
mov
cmp
pop
iret
push
add
add
jno
add
push
push
add
mov
dec
add
fdivr
fimuls
ds
jmp
add
add
clc
inc
jnp
lea
mov
rcr
mov
enter
add
add
pusha
add
pop
sub
lds
repz
pop
add
jg
test
add
inc
lods
daa
push
add
add
add
aaa
push
add
mulb
sbb
aas
icebp
adc
cld
inc
add
add
xchg
cmp
xor
out
ljmp
add
fstpt
mov
push
add
mov
pop
add
in
mov
add
fistpll
or
push
add
jno
outsb
add
jmp
sti
notb
mov
add
add
push
add
or
shlb
jecxz
add
add
pop
fsubl
sbb
fcomi
int
imul
test
lock
pop
add
add
pusha
add
add
add
sub
popa
data16
lds
mov
test
jecxz
and
pop
add
cmpsl
push
add
and
and
sbb
in
sbb
mov
sahf
mov
add
push
add
add
add
push
and
fwait
mov
sbb
rclb
push
and
dec
add
in
jp
pop
add
add
mov
or
aad
add
add
mov
mov
add
fidivrs
cmc
out
ret
sbb
push
add
stos
sti
jp
gs
dec
and
pop
insb
add
add
aaa
mov
lea
cmp
out
aam
add
roll
jno
add
xor
cmpsl
aaa
in
out
or
std
mov
cltd
mov
cmp
sbb
add
cmp
inc
push
add
add
or
loope
imul
add
sarb
add
push
add
add
imul
mov
xor
mov
ret
sbb
lds
sbb
add
shl
popf
in
xchg
add
dec
out
shll
and
sti
xor
xchg
xchg
out
push
add
adcb
sub
push
add
cmp
out
fwait
sbb
ficoms
pushf
adc
aaa
fnstenv
fdivl
add
add
jns
dec
add
add
repnz
add
adc
add
icebp
incb
and
add
add
pop
sub
pop
add
pop
add
add
setge
add
xor
jns
in
lods
test
push
add
loopne
jmp
jno
sub
fwait
dec
pushf
je
frstor
add
add
push
jne
test
add
add
cwtl
sbbb
movsb
xor
add
xlat
push
inc
add
les
jb
mov
sub
push
ficomps
add
stos
mov
pop
jle
mov
add
repz
bnd
mov
enter
repnz
cmp
or
mov
xor
insl
sbb
push
add
or
add
xor
neg
jnp
stos
out
add
adc
cmpsl
ret
add
enter
repnz
xchg
enter
out
clc
das
jae
add
and
cmp
mov
insl
shr
push
add
cmp
repnz
xchg
add
mov
add
add
clc
dec
dec
mov
sbb
mov
pop
add
adc
inc
icebp
shll
add
dec
inc
add
add
pop
popa
xchg
data16
inc
fldenv
mov
stc
clc
mov
insb
add
lret
lret
aad
imul
pop
jp
add
push
mov
pop
jbe
sbb
add
add
ret
imul
add
inc
test
add
daa
inc
scas
mov
add
pop
loopne
lods
leave
mov
add
add
push
add
les
mov
sbb
dec
add
mulb
popf
test
call
add
mov
out
xchg
mov
mov
jne
jle
lods
clc
das
mov
add
add
sbb
push
add
add
add
test
push
add
jg
add
add
push
add
out
sub
daa
mov
add
ret
andb
push
add
cmp
roll
shlb
lret
push
add
cli
and
andb
pop
cli
shrl
add
icebp
dec
pop
add
pop
sub
out
jl
mov
int
xchg
mov
or
pop
mov
add
add
push
xlat
xchg
xor
mov
pop
add
add
pop
add
in
shll
add
vmovdqu
fwait
mov
fists
jnp
cmp
int3
pop
ljmp
add
bound
popf
adc
add
push
loop
add
psrad
mov
test
add
jnp
addr16
jno
add
add
push
pop
add
mov
add
add
bound
jecxz
pop
add
mov
fadd
adc
and
aad
jl
jne
and
pop
xor
push
jo
lock
or
inc
add
add
dec
add
lods
mov
pop
sub
sahf
outsb
add
popa
scas
arpl
inc
add
cmpsb
jecxz
xchg
sar
add
or
inc
sub
add
add
inc
add
testl
ljmp
mov
ja
cmpsb
test
add
in
mov
add
or
ret
and
inc
fstl
add
add
frstor
sbb
add
add
xchg
jb
out
xor
movsl
in
add
stc
fildl
add
mov
add
ljmp
outsb
add
in
mov
leave
fmul
xor
mov
or
xchg
jg
and
arpl
jnp
fwait
jo
ret
fistpll
cwtl
push
pop
add
lods
jecxz
out
adc
jg
mov
and
sub
notl
das
add
jno
xchg
into
lods
into
mov
push
add
jae
addps
andb
mov
fwait
mov
mov
pusha
add
or
out
add
pusha
add
scas
adc
lahf
sub
dec
add
add
jmp
into
sahf
or
inc
add
mov
pushf
xchg
outsl
add
out
bound
pop
add
repz
ljmp
mov
add
pop
or
jmp
lock
sub
push
cli
dec
add
add
xchg
mov
sbb
mov
mov
test
call
add
add
inc
push
add
add
add
in
jno
add
mov
add
add
add
add
add
fnstenv
push
add
divl
pop
add
add
gs
iret
test
add
imull
push
rcll
add
in
dec
add
add
ret
xor
mov
scas
popf
sub
rcrl
add
push
add
cmpsb
mov
sbb
stos
push
add
idivl
add
leave
dec
add
sbb
stc
or
fmull
fdivl
setnp
xor
push
dec
adc
and
loop
andb
add
mov
xor
sub
xor
add
or
push
add
js
roll
call
or
and
les
insl
push
mov
dec
add
cmp
add
mov
add
loop
add
jmp
insb
add
dec
push
add
add
int3
mov
das
ror
add
add
les
sub
push
in
nop
lds
pop
xor
idivb
roll
ret
lcall
sahf
sti
mov
test
add
out
pop
inc
sbb
adc
ljmp
add
add
add
cmc
or
inc
add
jg
add
add
shrl
notb
mov
add
fsubrs
ret
mov
inc
jge
add
add
aam
sarb
jae
or
pop
add
add
into
pop
pop
dec
xlat
mov
fcom
out
add
rorl
lret
dec
les
add
mov
add
add
add
insb
add
pop
add
ljmp
clc
repnz
push
mov
add
inc
add
dec
add
mov
jecxz
add
jno
sub
cli
push
add
daa
mov
jo
sub
mov
call
mov
sub
das
push
add
and
mov
mov
add
dec
inc
aam
ljmp
and
lcall
mov
sbb
adc
add
cmp
jne
popf
mov
add
dec
add
add
aam
aam
push
mov
in
adc
add
and
fiaddl
test
cwtl
cmpb
imul
lea
fisttpl
add
push
add
aad
and
dec
add
mov
lcall
add
jmp
add
add
mov
push
add
push
add
fidivrl
add
lret
add
pop
sbb
adc
ret
in
loopne
add
push
add
mov
push
add
sub
jnp
dec
dec
xor
add
mov
push
add
or
insb
add
jle
iret
jmp
icebp
sub
sbb
data16
out
ret
mov
sub
mov
pop
add
add
test
mov
push
add
std
pop
cwtl
lcall
add
fcom
jecxz
add
dec
add
inc
mov
add
outsl
mov
cmp
out
adc
lahf
push
add
rorl
and
add
add
push
mov
add
sub
fxtract
pop
or
scas
sub
jnp
mov
cmp
xchg
mov
cmp
or
add
jnp
add
movsl
insb
add
je
out
hlt
stc
adc
nop
jno
call
jle
pop
hlt
push
mov
lods
insl
push
add
sahf
adc
int
jae
add
add
orb
add
add
hlt
mov
roll
push
push
sub
pop
push
add
cmpsb
lods
inc
into
xchg
roll
cmp
mov
add
add
pop
int
pop
std
scas
iret
and
and
sub
add
imul
sub
call
push
add
inc
outsb
add
add
xchg
xchg
pop
cmpsl
add
add
mov
mov
push
mov
popf
pop
xchg
add
stos
outsl
rol
out
add
dec
add
repnz
jl
adc
insb
add
push
add
xorl
push
add
shl
inc
add
jge
stc
xlat
cmp
mov
add
adc
push
add
and
jmp
jnp
rcr
int3
lret
int
add
pop
stos
sub
add
data16
add
or
jl
lods
sbb
mov
adc
cmpb
cmp
push
into
adc
jns
add
daa
mov
icebp
push
sbb
xchg
pop
jl
pop
add
add
add
add
sbb
jle
mov
mov
push
add
xchg
sub
cmpsl
pop
add
add
add
cmpsb
add
adc
lahf
jnp
je
in
adc
nop
or
sti
ficoms
add
add
add
add
sbb
sbb
jg
push
add
add
mov
mov
pop
lea
cltd
xor
inc
add
add
sub
sahf
bound
imull
add
mov
test
daa
outsl
cmpsl
dec
add
pushf
dec
mov
and
in
test
lret
lods
shlb
sbb
outsl
test
push
adc
mov
adc
xor
loopne
mov
rcr
mov
arpl
lea
orb
icebp
and
push
add
jno
add
add
add
jg
add
push
add
add
out
out
adc
push
add
add
mull
je
push
add
pop
mov
dec
add
add
add
outsb
add
xchg
add
xchg
aas
push
add
enter
add
pusha
add
dec
add
cwtl
or
fsts
push
adc
vmovntps
add
push
add
sub
ret
add
push
add
add
jb
mov
add
scas
das
inc
hlt
popa
sbb
insl
pusha
add
cmp
enter
out
out
xchg
nop
rcl
push
xchg
xchg
sbb
add
sbbl
inc
add
push
leave
sub
mov
add
pop
add
add
stc
lret
add
gs
testl
cmp
add
je
in
inc
fidivrl
loopne
add
and
sub
xor
in
out
or
cmp
mov
ret
sub
add
pop
pop
add
xchg
add
cld
stos
pop
add
fs
jns
add
push
cltd
imul
bound
adc
mov
add
lahf
cmp
std
aas
dec
rol
push
add
sub
add
into
sbb
xchg
add
int3
push
add
test
dec
add
add
add
fwait
push
pushf
adc
mov
add
mulb
in
add
mov
popf
jg
call
movsl
popa
sti
cltd
sub
add
dec
add
je
sbb
add
cmp
bound
loope
cmp
aam
fisttps
mov
inc
adc
mov
in
mov
sti
xchg
jns
add
and
outsb
add
dec
mov
cli
adc
add
sbb
add
add
and
mov
fsts
add
aam
pushf
lods
fxch
lahf
es
add
lock
add
icebp
dec
add
mov
add
pop
add
in
movsb
add
add
add
and
lahf
hlt
inc
sbb
jb
mov
bound
mov
out
adc
mov
and
xor
add
jecxz
mov
int
sti
sub
enter
cmc
mov
incl
in
add
stos
stos
daa
in
mov
cs
xchg
add
arpl
mov
inc
lea
xor
and
stos
in
in
add
cmp
inc
add
idiv
int3
xor
cmp
pushf
xor
add
sub
xor
add
ficoml
pushf
leave
lcall
add
jae
jnp
xor
pushf
mov
aaa
add
insb
add
notb
jmp
mov
bound
pop
pop
mov
cmp
xchg
int3
in
fisubrs
or
in
imul
mov
in
loopne
lret
aaa
pop
add
or
cld
enter
add
nop
enter
jp
xchg
jno
in
mov
pop
add
or
add
xlat
sbb
and
loop
add
jle
push
or
sub
jbe
mov
add
das
loop
imul
add
shlb
jl
test
jp
adc
call
sbb
mov
mov
add
sub
fnstcw
test
mov
addr16
cmpsl
lcall
and
js
inc
cmp
loope
add
std
shlb
ljmp
fistpl
jle
cmpsb
inc
add
jmp
add
gs
orl
cmp
add
push
ficoml
out
and
or
in
into
mov
xchg
lds
cmp
jne
push
add
daa
and
popa
cli
fsubrl
xchg
andb
jge
or
addr16
cmc
lahf
adc
sub
je
mov
sahf
data16
out
imul
mov
add
les
add
push
cmp
mov
add
inc
add
xchg
cli
sar
stos
add
js
adc
lods
xor
add
insl
cs
mov
add
add
cltd
inc
xchg
pop
test
ja
out
add
test
add
clc
sahf
xchg
int
add
outsl
adc
sbb
or
nop
in
lds
add
inc
add
adc
xchg
cmp
add
dec
add
icebp
xchg
inc
sbb
inc
add
addr16
lods
dec
add
and
add
orl
lahf
lea
add
mov
push
add
aam
bound
add
xchg
rclb
cmpsl
sub
sub
mov
mov
scas
adc
or
clc
scas
push
das
cmp
pop
mov
xchg
xor
jp
adc
aaa
inc
add
mov
add
insl
int
add
push
mov
add
add
sbb
add
dec
add
xchg
mov
enter
sti
sti
xor
xchg
sti
ja
mov
dec
popa
pop
add
fwait
mov
inc
test
or
ret
add
aam
inc
out
cmp
mov
mov
pusha
add
add
add
aam
enter
aad
insl
add
mov
pop
adc
std
movsl
ljmp
ds
push
mov
pop
or
xor
xor
mov
rcll
add
jg
add
and
and
mov
sahf
mov
add
adc
movsb
rorb
mov
cmpsl
scas
cmp
sbb
add
add
add
aad
int3
movb
adc
or
js
imul
push
add
das
rclb
or
adc
add
in
jnp
add
data16
scas
sbb
inc
add
imul
out
sbb
cmpsb
shl
and
add
sub
aam
and
ja
sti
sbb
dec
add
add
add
lds
add
leave
add
xchg
cmp
loope
into
dec
add
cmpsb
aaa
enter
add
xor
repnz
aam
imul
inc
in
into
pusha
add
add
sub
outsb
add
xchg
std
call
jp
adc
jno
lds
mov
int
add
test
inc
add
dec
add
push
lcall
fmul
add
shll
test
sbb
push
sub
add
add
iret
rclb
fcoml
add
add
push
add
add
movsl
rol
sub
mov
sbb
xor
arpl
repz
test
lods
xchg
mov
test
mov
add
add
add
mov
mov
data16
shl
adc
gs
repnz
jl
jns
add
sbb
lret
add
cmp
and
scas
repnz
pop
test
add
sub
je
lock
imul
mov
ret
add
add
scas
sub
add
add
bound
mov
add
mov
test
stc
and
loopne
pop
out
aam
hlt
mov
sbb
sbb
mov
shlb
out
pop
sub
leave
cwtl
add
dec
add
fidivrs
lods
out
dec
add
ljmp
and
popa
and
add
add
push
das
mov
dec
bound
jmp
jmp
pop
in
or
iret
mov
push
add
add
add
lahf
inc
add
add
add
mov
arpl
or
cmpsl
mov
lods
inc
add
in
dec
add
or
xchg
shrb
sarl
or
cmpsb
popa
cmp
rcrl
cmp
add
add
add
add
add
add
movl
sti
divl
pop
ret
inc
aaa
pusha
add
test
cmp
imull
add
inc
lea
and
add
jne
pop
cmp
add
add
mov
cmc
fstpl
adc
int
mov
xchg
jl
js
enter
mov
push
add
fst
in
push
orl
fistpl
data16
iret
cmc
inc
add
std
adc
and
mov
add
add
sbb
fcoms
add
mov
sbb
xlat
pop
pop
sbb
push
add
lods
std
xor
lret
mov
add
ret
add
leave
into
jge
add
stos
pop
add
push
jmp
add
aas
dec
mov
loop
jns
fwait
jg
push
add
arpl
add
jbe
add
xchg
cli
xchg
sbb
cmc
or
sbb
add
add
cmpsb
insl
jg
je
testl
into
int3
cmova
test
idivl
icebp
sar
iret
lret
jge
and
jae
fbstp
inc
adc
pushf
lods
bound
aad
aas
rol
add
rol
out
mov
add
dec
pop
add
lcall
imul
add
push
jnp
xchg
jl
jg
lds
cld
daa
pusha
add
lret
push
rcr
out
mov
add
mov
add
inc
add
add
push
roll
loope
test
sub
or
xor
push
mov
imul
dec
add
ret
add
dec
cmp
dec
add
imul
dec
add
fcomip
jo
in
add
jo
popf
pop
add
pop
xchg
push
add
test
jae
aas
mov
test
lret
jbe
pop
mov
add
arpl
gs
add
int
aaa
xor
sub
fstps
add
add
add
out
jb
and
add
or
mov
popf
dec
pop
add
loop
adc
jecxz
dec
mov
mov
xchg
mov
cmp
add
add
in
jge
test
mov
ret
add
and
fimuls
movsl
shrb
lock
fcoms
sbb
out
and
adc
out
add
repnz
pop
mov
idiv
jg
add
push
add
or
xchg
push
add
mov
lahf
mov
test
ret
rcrb
add
add
push
dec
loop
and
mov
sar
out
xor
das
sub
lcall
mov
add
jno
add
mov
xor
add
aad
sti
mov
pop
jecxz
out
add
mov
sbb
cmp
sbb
in
add
cmc
sbb
fcoml
xchg
cmp
into
or
add
xor
jbe
cmp
outsl
sahf
xchg
pusha
add
shlb
inc
push
into
push
add
add
mov
lock
mov
bound
stos
cs
cmp
or
dec
daa
jbe
fldcw
or
faddl
sti
push
lods
ret
incl
pop
add
fnstenv
sbb
dec
add
sub
add
dec
enter
add
bound
xlat
jne
pop
negb
int3
fidivrl
add
lock
lds
push
mov
add
clc
adc
xchg
push
add
push
add
aas
xchg
mov
add
loop
sub
hlt
dec
loope
push
add
cmpsl
in
xchg
insb
add
add
pusha
add
and
repz
jne
add
and
push
add
pop
in
loope
in
mov
sbb
cmpl
cld
lret
add
xor
stos
cmp
mov
call
cmp
js
ja
add
mov
arpl
dec
cli
out
dec
movsb
mov
or
push
add
hlt
adc
mov
mov
add
shlb
add
std
fists
pminsw
adc
sbb
mov
add
xchg
pop
add
add
pop
pop
insb
add
fucomi
jp
adcb
cmpsb
repz
adc
pop
dec
sbb
insl
cmp
into
movsb
add
dec
je
inc
add
mov
call
jno
cmp
imul
in
pushf
mov
out
mov
add
outsl
imul
add
jb
and
sub
add
movsl
fsubrl
add
xchg
inc
add
getsec
xor
add
mov
adc
push
push
mov
add
lods
add
outsl
pop
mov
pop
sbb
jecxz
jnp
inc
add
fiadds
xchg
repnz
mov
das
lea
fcomp
dec
les
sbb
cmc
movsl
xor
popa
xor
fildl
sub
add
clc
fisubrs
jl
sbb
add
add
jne
add
movsl
sbb
jmp
xchg
stos
loop
or
insl
cmp
aam
rcrl
mov
pop
add
call
imul
jno
aaa
scas
add
jne
pop
inc
add
push
add
add
sub
push
shlb
add
aas
xlat
xor
imul
add
lods
jmp
push
add
jecxz
add
jp
aad
loopne
mov
add
add
add
add
xlat
les
or
push
pushf
adcb
add
sbb
fwait
cmpsl
icebp
or
pushf
movsb
mov
xchg
xchg
mov
cmp
orb
add
inc
loop
dec
add
fisubl
add
sbb
cmpsb
xchg
xchg
inc
mov
dec
xchg
xchg
and
and
sbb
xchg
in
sbb
pop
add
adc
add
subb
push
add
mov
add
xchg
addr16
add
pop
push
add
add
jae
push
push
add
cmove
int
leave
insb
add
add
dec
sub
mov
push
add
mov
nop
rcr
add
push
add
in
add
inc
add
push
add
scas
mov
jp
adc
add
push
add
add
fwait
les
lods
xor
mov
sub
pop
push
add
add
insl
movsb
test
inc
orb
xchg
add
sub
mov
clc
insl
out
pusha
add
pop
into
out
ds
shll
add
sbb
mov
add
mov
or
adc
rcll
add
add
mov
pop
add
cmpl
inc
mov
mov
enter
mov
add
add
pop
scas
jl
clc
repnz
add
divb
sbb
adcb
insb
add
pop
pop
add
test
add
lds
add
fstpl
add
jge
push
mov
and
fdiv
es
insb
add
xchg
outsl
sbb
xor
sub
jge
cmp
nop
cmpsb
daa
mov
lahf
push
add
aam
add
add
sub
in
and
std
das
pop
add
sahf
xchg
mov
add
add
add
add
add
rcll
mov
inc
add
fsubrl
pop
pop
out
aas
push
add
jp
inc
add
into
add
pop
push
out
mov
enter
scas
fsubr
rol
fimull
add
add
sbb
pop
cmpsl
imul
push
add
add
loopne
push
add
cmpsl
or
add
add
out
dec
add
add
dec
movsb
add
dec
ret
jmp
cmp
scas
mov
add
add
and
mov
cli
das
outsl
in
inc
add
out
add
jo
inc
je
inc
push
add
add
clc
jo
icebp
dec
add
lret
loope
iret
bound
repz
dec
add
out
in
mov
jne
jp
loop
dec
add
das
dec
bsf
add
mov
add
ret
pop
add
add
popa
cmpb
jge
push
add
shrl
jb
loopne
insb
add
xor
add
ret
int3
jne
lods
hlt
stos
push
outsl
mov
add
inc
loop
in
xor
test
sub
add
inc
mov
fldl
add
add
or
pop
add
add
add
lcall
add
jmp
cmpsl
mov
add
cwtl
adc
push
sbb
add
add
xchg
push
add
add
pop
inc
fwait
sub
push
pop
add
inc
adcb
das
xchg
filds
or
xor
add
ja
or
movsl
call
dec
mov
sub
cli
cmp
add
filds
add
inc
lcall
das
xchg
pop
add
les
add
dec
push
out
xchg
ret
das
mov
pusha
add
or
add
add
push
add
add
and
mov
xchg
add
aad
insl
nop
add
inc
add
dec
fcmove
mov
adc
loop
sbb
shrl
fnstsw
add
xor
add
popa
leave
jl
push
add
bound
or
inc
add
in
inc
or
pop
stos
mulb
call
cmp
mov
add
test
dec
add
xchg
cmp
jmp
dec
imul
add
ret
mov
ficomps
cwtl
pop
add
sub
sub
jge
vmwrite
ret
add
outsl
jge
push
add
push
push
add
mov
aaa
pushf
insb
add
gs
inc
dec
sub
add
loopne
dec
add
dec
add
add
add
mov
add
jmp
add
jl
sbb
add
add
fists
iret
outsl
xor
sub
dec
push
add
add
pop
in
outsb
add
adc
pop
push
test
into
pop
xlat
loope
pop
cmp
aam
dec
add
lea
imul
dec
xor
ja
xor
and
push
add
cmpsl
mov
sub
or
aaa
dec
pop
push
outsb
add
addr16
add
outsl
jl
inc
movsb
rorb
jmp
ret
lcall
add
cmp
pop
add
pop
mov
push
add
es
sbbb
mov
add
mov
mov
lods
sarl
cwtl
jbe
sarl
xor
inc
add
in
lea
data16
add
fstpl
arpl
mov
sbb
aad
mov
inc
cmpsl
pop
cmpsl
imul
movsb
dec
add
daa
sahf
jg
push
add
jb
call
xchg
dec
add
mov
js
outsb
add
nop
add
stos
jae
push
cmp
push
idivl
cmpsb
jae
sbb
rorb
fwait
lds
add
mov
push
cwtl
sbb
pop
add
add
mov
test
add
leave
jno
rcr
add
add
add
bound
out
push
add
testb
add
shlb
push
add
cmp
rcrl
add
lea
lret
cltd
jecxz
sbb
or
xlat
adc
add
mov
add
jae
lods
hlt
fwait
xchg
and
or
in
pop
add
jg
popa
repnz
in
or
pop
add
movsl
inc
sub
js
mov
lods
insb
add
sbb
aas
pop
add
mov
add
cltd
cli
pop
sarb
sub
btc
add
dec
or
xchg
push
mov
mov
imul
push
add
add
ja
add
jge
add
add
lea
add
mov
jno
add
add
add
mov
pop
jecxz
movsb
sbb
pop
cmp
pop
popf
cmp
add
jno
imul
dec
add
push
and
add
ljmp
xor
add
add
xchg
cmp
mov
and
mov
add
push
mov
imul
andb
xlat
add
add
add
mov
adc
xor
in
aas
sbb
out
imul
mov
push
add
add
subb
rcrb
daa
mov
cmp
jmp
add
jne
fistps
add
add
lahf
rol
pop
imul
add
arpl
addr16
mov
out
push
add
mov
call
mov
adc
pushf
dec
pop
add
or
dec
add
jo
cmpl
fmull
pusha
add
test
mov
add
sbb
inc
add
push
add
push
cli
std
dec
add
jge
push
add
bound
mov
xchg
dec
fsubr
sub
mov
add
and
scas
xchg
xlat
fwait
and
addr16
test
and
faddl
gs
lea
lock
adc
add
and
std
mov
pop
loop
test
mov
add
adc
sub
add
cmp
sbb
lret
adc
or
cwtl
xabort
jge
leave
popa
insb
add
pop
add
test
je
insl
push
add
push
add
in
or
cld
mov
clc
ret
test
shll
negb
add
add
add
and
mov
xchg
dec
add
addr16
nop
or
rorb
add
repz
mov
aas
sbb
insl
adcb
add
add
fs
pop
add
and
in
inc
add
fisubrs
add
cli
add
pop
jecxz
jmp
add
sub
cmp
ja
loopne
mov
add
sub
shrl
dec
or
jl
in
jp
jle
nop
repnz
imul
cmp
jmp
pop
leave
xchg
test
outsb
add
iret
int
pop
jle
xchg
add
push
add
aam
in
add
aam
push
add
ljmp
in
data16
addr16
add
scas
lock
add
and
pop
pop
xchg
adc
out
xchg
xchg
out
sub
cmpb
insl
adc
xor
add
cltd
or
xlat
pop
dec
dec
add
movsl
mov
add
xor
cmp
or
outsb
add
pop
sub
ljmp
add
or
jns
sbb
push
cmpsl
or
mov
loope
imul
in
add
and
data16
xchg
mov
rcrb
popf
lods
mov
add
imul
cmp
jmp
pop
fsubl
mov
cmp
add
mov
cmpsl
xchg
das
sahf
pop
push
add
fdivrl
jp
jns
mov
aas
or
push
add
mov
add
xor
xor
mov
shll
cmp
inc
out
out
test
and
jle
loopne
insb
add
add
aad
xchg
ret
mov
and
ret
ljmp
mov
subb
add
out
add
shlb
add
xor
jnp
pop
lods
pop
mov
int3
jmp
mov
inc
sbb
cmp
add
xor
sahf
out
data16
jb
push
cmc
jmp
out
movsl
and
add
les
push
add
jo
sbb
mov
xor
xchg
dec
pop
add
add
fimuls
jns
add
shll
mov
test
add
sub
js
cwtl
bnd
sub
xor
test
frstor
add
mov
xchg
into
imul
sub
add
movsb
nop
xor
add
dec
add
jbe
adc
and
sbb
lret
sbb
mov
push
add
popf
imul
test
jg
mov
subl
je
fxch
sub
mov
adc
add
add
adc
mov
pop
add
add
sub
jae
iret
arpl
add
add
add
xchg
insl
insl
movl
aad
subb
inc
add
ficompl
add
mov
mov
add
test
jmp
mov
fcoml
sbb
mov
pop
add
popa
jg
xchg
mov
add
movsb
in
stc
push
add
sbb
add
out
movsl
jl
scas
push
add
ja
jg
add
bound
bound
gs
jno
pop
add
imul
adc
push
add
add
scas
and
jge
add
out
mov
cmpsl
dec
add
pushf
rorl
notl
andl
add
add
push
jp
out
repz
add
sbb
outsl
ja
sub
mov
mov
cmp
sbb
add
xchg
mov
mov
add
add
add
je
add
cmp
push
add
add
adc
filds
js
and
cmpsb
mov
in
jno
add
repz
cmp
add
add
lcall
add
add
aas
mov
add
les
add
add
stc
ror
dec
add
push
add
add
data16
sub
or
jg
add
add
mov
inc
and
pop
fstps
mov
jmp
add
cmp
popl
sub
bound
push
add
add
adc
ret
jecxz
loop
sbb
frstor
jecxz
test
mov
add
lcall
xchg
fs
xchg
inc
add
enter
scas
fldcw
add
pusha
add
inc
mov
hlt
jb
mov
add
mov
add
std
push
data16
add
push
add
jp
mov
mov
jmp
jl
fcoms
pushf
cmp
cmp
sbb
int3
lret
add
out
lcall
add
aaa
push
add
smsw
xchg
xor
je
es
arpl
imul
in
dec
jecxz
add
add
add
push
add
add
xchg
bound
pop
addl
ret
lods
xor
sub
hlt
pushf
jo
ljmp
stos
repz
jge
xchg
mov
adc
repnz
outsb
add
lret
adc
add
add
add
jle
mov
adc
mov
pushl
lods
and
inc
add
add
add
add
aas
mov
xchg
in
les
add
add
xor
mov
ds
inc
dec
add
daa
or
nop
add
enter
add
add
aas
cmpsb
or
jns
add
mov
and
or
add
add
add
sbb
jns
mov
or
loope
out
push
add
lret
bound
jge
in
sahf
in
call
add
add
mov
xor
inc
add
and
or
loopne
movsl
jo
xor
add
cltd
jl
dec
int3
xchg
loopne
push
add
sub
adc
adc
add
sub
icebp
call
and
push
add
jb
cmp
add
insl
loopne
rclb
pop
mov
push
add
loopne
pop
and
movsb
add
inc
add
mov
add
cli
add
xor
pop
insb
add
add
dec
sub
test
add
add
and
push
add
dec
aaa
sti
and
rcll
sub
mov
fidivl
add
sbb
add
jge
mov
mov
push
add
add
jo
fcompl
pop
rep
pop
add
adc
aas
xchg
pop
add
jle
cmpsl
arpl
mov
outsb
add
dec
xchg
lahf
hlt
or
in
aad
cmp
jl
mov
cmc
in
les
scas
cwtl
hlt
pop
add
cmp
movsb
adc
xor
sbb
inc
popf
jne
xor
add
add
mov
outsl
mov
jmp
or
adc
loop
decb
add
inc
popf
add
leave
int3
jecxz
inc
adc
add
jne
push
or
ljmp
add
loope
jmp
ja
add
idiv
test
ja
mov
add
loop
pop
or
xchg
lret
mov
xchg
or
dec
add
jp
shl
mov
add
in
sarl
movsl
add
sahf
push
add
stos
mov
sub
adc
nop
push
add
add
outsl
repnz
add
add
add
rcrb
rcrb
jb
xchg
mov
cltd
pop
cwtl
pop
movsl
out
inc
add
jmp
xchg
xor
inc
inc
add
add
fdiv
sbb
outsb
add
cmp
add
add
ljmp
push
add
pushf
mov
pop
data16
in
jmp
and
adc
mov
adc
mov
add
inc
add
andb
xor
inc
xor
add
mov
inc
add
add
mov
add
in
add
add
sbb
loopne
add
inc
iret
jne
insb
add
enter
sub
mov
test
sbb
pop
add
dec
add
sub
int
fsubp
xor
add
mov
adc
sub
call
pop
aam
sarl
mov
add
sbb
or
fnclex
push
test
pop
add
add
test
add
add
add
lahf
mov
add
pop
add
js
roll
add
cmp
xchg
xor
add
and
in
and
add
jecxz
stc
ret
pop
mov
scas
mov
int
add
xor
cltd
inc
add
add
scas
outsb
add
push
repz
add
push
inc
or
imul
add
add
out
ficoml
lds
js
pop
cmpsb
push
add
stos
adc
add
lock
mov
add
aam
add
pop
add
pop
jo
mov
in
xchg
int
or
adc
pusha
add
stos
icebp
xorl
lcall
adc
ja
xchg
loopne
add
mov
mov
add
add
data16
icebp
and
xchg
jg
cmc
sbb
pop
add
add
dec
icebp
ret
dec
add
add
icebp
sub
in
xchg
mov
add
sti
je
addr16
fwait
inc
add
pusha
add
mov
pop
add
add
aad
ljmp
xchg
cld
fsubs
pusha
add
dec
std
ficoms
xor
add
sbb
sbb
add
mov
cmp
popa
in
call
das
lcall
int
and
movsl
xchg
jns
add
and
sbb
in
lds
push
in
mov
dec
add
add
aaa
or
jp
stc
icebp
push
add
sbb
or
push
add
pop
add
push
add
and
add
cmpsb
loope
add
pop
lahf
iret
mov
movsl
adc
imull
fdivrp
mov
add
add
sbb
pop
lods
jno
add
add
add
out
sbb
arpl
add
add
add
cmp
popa
xchg
mov
outsl
sahf
shlb
and
mov
int3
and
cwtl
addl
in
jnp
add
dec
popa
movsl
mov
arpl
das
or
dec
stos
xor
add
mov
sbb
mov
repnz
icebp
sti
xchg
xlat
xchg
lods
add
call
xchg
pop
cmp
add
shll
add
mov
and
add
xchg
clc
mov
sub
jnp
js
push
gs
add
or
fst
lods
in
popf
in
outsb
add
rorl
cmc
adc
popa
aam
add
add
inc
add
lahf
dec
add
stos
jmp
add
popa
push
add
mov
subl
jp
add
add
xor
sbb
add
push
lea
mov
push
add
dec
add
stos
iret
and
sbbl
aaa
xor
or
loopne
add
inc
mov
test
xchg
inc
add
xchg
cmp
cmp
add
add
add
add
imul
cmp
add
mov
inc
pushf
rcrl
test
fucomi
jo
or
rolb
out
rorl
add
and
mov
add
aam
jae
add
mov
movsl
cmp
or
mov
xor
xchg
icebp
aam
insl
or
xchg
adc
or
add
jge
mov
pop
xor
lcall
cmp
push
pop
add
add
mov
mov
mov
pushf
dec
add
dec
add
testl
push
addl
ja
lods
inc
lock
sti
pop
push
add
lret
push
push
lods
out
add
cld
push
je
mov
cmp
jmp
push
sub
test
nop
jne
shlb
add
idiv
cld
lahf
dec
fnstcw
add
pop
add
add
add
add
addb
in
lgs
sub
gs
add
jmp
cmpsb
and
dec
jecxz
add
or
mov
lods
popf
add
adc
and
lret
ret
out
into
push
repnz
sti
dec
cmp
add
add
inc
push
xchg
add
xchg
mov
cmpsb
sub
jns
arpl
aad
or
add
mov
add
int
add
add
add
add
cmc
out
add
jle
movsb
lea
sbb
add
aad
daa
rorb
out
cmpsb
out
rcrl
shlb
ja
and
mov
sub
test
push
call
add
movsl
insb
add
scas
andl
enter
add
or
add
test
sbb
add
repnz
add
mov
mov
mov
insb
add
popf
cmp
inc
imul
pop
add
shll
outsl
pop
add
dec
add
mov
lret
add
add
jge
add
add
mov
pop
add
jg
sbb
xchg
aam
mov
je
leave
outsl
dec
loopne
outsb
add
insl
pop
add
into
mov
movsl
andb
mov
cmc
outsl
fstl
add
xchg
xchg
add
add
jle
fdiv
je
dec
add
add
in
loopne
add
xchg
and
lret
test
decb
add
ss
ja
or
add
and
rcl
jl
or
stc
and
push
sbb
adc
cmpb
mov
mov
aaa
fsts
int3
sti
jae
cmp
push
add
or
jle
jno
add
mov
add
stos
push
add
mov
or
fists
dec
add
test
jb
mov
add
cmp
lret
sbb
add
icebp
call
add
adc
pusha
add
bound
ds
jns
inc
mov
rcl
mov
add
mov
add
in
cmc
rorb
test
add
enter
lcall
cmp
mov
add
sbb
mov
mov
cmp
mov
jnp
imul
stc
cmp
rorb
orl
cli
mov
push
add
shlb
gs
add
cli
mov
iret
mov
jl
mov
mov
xchg
jmp
ret
shl
fdivrs
add
pop
subb
mov
add
icebp
inc
add
loop
pop
and
enter
dec
call
add
mov
sbb
cmp
cmc
push
lret
dec
mov
add
add
jno
xlat
in
add
push
add
add
sti
and
testl
add
mov
push
add
xor
sahf
das
lret
inc
add
push
add
bound
sbb
icebp
mov
ret
add
add
je
jns
mov
jmp
add
out
xor
add
or
mov
push
add
inc
iret
sub
lods
mov
add
leave
mov
lock
add
jb
and
out
in
sbb
xor
add
jl
xorb
adc
dec
add
add
add
cwtl
out
sti
pushf
sbb
sub
movsl
jp
push
add
pop
add
or
add
push
add
stc
cmp
je
insl
rcrb
jle
dec
add
ja
adc
outsb
add
out
dec
add
in
shll
jle
test
test
cs
ficomps
add
mov
call
add
mov
lcall
mov
add
inc
add
hlt
nop
loop
mov
add
mov
inc
add
dec
add
cmp
adc
into
pop
inc
nop
add
jp
lret
jae
push
add
fstpl
xor
add
mov
mov
into
cmpb
jmp
add
add
add
xchg
and
lcall
xchg
xchg
int3
mov
add
add
adc
outsb
add
pop
fimuls
repnz
enter
adc
fnstenv
dec
adc
imul
stc
dec
jb
inc
add
ret
xorb
mov
add
adc
push
xchg
inc
sbb
ja
add
jge
add
fstps
xor
lahf
lds
mov
bound
add
loopne
add
inc
add
add
enter
mov
add
cmp
int3
arpl
xchg
rolb
std
rcrb
pop
sbb
and
imul
add
add
add
mov
add
jge
xor
add
add
jmp
repz
pcmpeqd
outsb
add
clc
popf
mov
add
aaa
jne
xor
push
add
dec
add
adc
pop
bound
jmp
popf
test
ljmp
add
fwait
xchg
mov
xor
push
add
sub
push
xchg
mov
add
mov
das
les
out
fistl
lea
add
pop
add
xor
in
xchg
mov
pop
inc
repnz
push
add
pop
stos
stos
xchg
out
push
add
mov
arpl
mov
lock
jecxz
addr16
cltd
in
clc
sbb
test
mov
sub
lret
aam
inc
add
add
dec
cmc
nop
cmc
sub
inc
add
fs
sbb
les
adc
cmp
mov
mov
add
repnz
lods
push
add
add
sbb
pop
add
fsubr
sub
imul
sar
sub
ret
push
add
adc
aaa
xchg
or
imul
lds
add
xor
push
add
filds
daa
mov
add
push
fisttpl
adc
js
inc
add
xchg
mov
lret
lret
pop
fldenv
mov
sub
mov
add
cli
cs
jbe
cwtl
mov
shlb
jmp
adc
add
add
xor
hlt
addl
dec
sbb
dec
push
sbb
lods
in
inc
push
add
mov
ljmp
movsl
inc
push
add
mov
sahf
cmc
mov
add
clc
sub
in
inc
add
jl
push
je
fildll
andl
add
mov
dec
add
mov
xor
xor
outsl
shl
jne
cld
dec
add
outsl
jecxz
jle
mov
add
sub
add
and
rcrb
outsl
dec
add
xchg
arpl
add
inc
outsl
sub
ret
jg
push
mov
or
xchg
dec
add
add
push
add
negl
cmp
add
shrb
dec
mov
jb
push
subl
add
scas
hlt
loop
jnp
add
aaa
cmp
jp
adc
jle
pop
inc
xchg
xchg
and
dec
jge
cmp
add
jnp
sbb
outsl
fdivs
lahf
aam
add
add
mov
mov
add
xchg
fnstenv
inc
add
add
les
xchg
fmull
mov
arpl
aad
add
sub
inc
pop
add
jp
bound
repz
or
xchg
rcrl
test
add
sub
pushf
outsl
jmp
dec
add
test
xor
add
pause
leave
mov
adc
or
imulb
add
mov
inc
xchg
out
jl
add
movsb
test
lahf
test
add
add
or
mov
aas
jg
idivb
add
mov
add
cmp
mov
in
cs
add
push
int3
mov
add
inc
add
add
les
add
inc
add
or
movsl
stos
xchg
mov
add
add
xchg
arpl
incb
int3
cmp
cld
lahf
movsl
mov
loope
or
push
add
add
or
fildl
add
inc
add
add
add
mov
int
inc
add
add
fwait
aam
push
dec
add
jge
call
or
test
mov
or
sub
cmp
jb
out
adc
dec
sbb
add
fldt
dec
add
mov
dec
scas
inc
out
repz
push
add
divl
stc
pop
add
add
shrl
add
movsb
mov
push
add
cld
push
add
pop
xchg
out
add
fisttps
jg
add
mov
add
in
decl
adc
push
add
xor
mov
add
mov
imul
push
add
mov
insl
adc
and
fstps
pop
push
add
gs
push
add
outsl
sub
test
sub
add
dec
mov
adc
imul
mov
pop
add
adc
fimuls
add
adc
pop
movsl
pop
adc
xchg
int3
repnz
add
ficompl
ret
jmp
pop
fsubl
loopne
add
sub
inc
add
add
repz
jl
dec
add
fcomps
add
roll
add
add
loopne
add
bound
cmpb
mov
flds
mov
call
xchg
dec
leave
sub
sub
scas
loopne
gs
add
jo
xchg
cmp
add
loop
add
repz
mov
add
jmp
incl
sti
cmpsl
shll
stos
out
inc
add
xchg
cmp
imul
add
gs
test
push
add
add
pop
add
aad
add
iret
daa
lret
mov
add
ljmp
div
add
jo
fisubrl
das
xchg
pop
test
push
lahf
test
add
push
add
lret
mov
pop
dec
into
aam
pop
sti
popf
fcmovbe
rcll
push
cltd
push
fdivs
in
ja
leave
test
mov
sub
push
add
cmpsl
ficoms
inc
test
push
mov
xor
inc
cmp
dec
jl
mov
stos
mov
add
lcall
dec
add
jge
shrl
dec
add
xchg
out
iret
xchg
add
imul
pusha
add
pop
add
mov
add
push
add
out
dec
add
add
jl
xlat
js
mov
shlb
dec
add
jg
cmpsb
dec
add
int
imul
push
add
sahf
jbe
jmp
xchg
decl
je
xchg
add
push
add
add
outsl
jecxz
imul
or
shr
add
mov
add
test
add
jecxz
ret
add
add
or
arpl
pop
add
mov
jns
dec
popf
lcall
add
scas
mov
jmp
mov
pop
mov
add
add
jl
xchg
push
add
add
rclb
daa
jno
in
cmp
mov
in
jg
lds
add
rcl
lea
push
add
xlat
pop
add
add
stos
sbb
js
add
push
add
jle
sbb
add
mov
or
pop
add
and
imul
outsb
add
sbb
cli
popf
push
xor
push
add
adc
jbe
rol
nop
adc
mov
xchg
and
pushf
cmp
add
add
cmp
nop
cs
test
cmp
dec
fbstp
add
or
add
inc
popa
clc
xchg
xchg
dec
lahf
inc
sub
push
pusha
add
cmpsb
lcall
outsb
add
repz
or
cmp
mov
mov
mov
add
add
pop
push
lods
add
add
add
xchg
xchg
movsl
sub
mov
lcall
sbb
es
and
push
add
addl
jns
add
mov
mov
gs
daa
inc
add
cmp
mov
das
loopne
add
inc
add
mov
inc
sbb
gs
push
add
add
lret
test
loop
lret
sub
jb
outsl
and
enter
outsb
add
lea
xchg
sub
mov
mov
add
push
pop
imul
jnp
add
lret
push
xchg
movsb
out
add
rolb
add
in
jo
push
cli
jb
dec
stos
jmp
pushf
jmp
clc
sub
repnz
push
out
lods
out
loopne
mov
sub
dec
add
pop
add
dec
add
mov
scas
xchg
cs
cmp
xchg
xchg
sbb
adc
mov
push
add
add
hlt
mov
add
or
and
hlt
out
scas
jno
pop
ret
scas
popa
enter
movsb
jecxz
stc
ja
mov
add
push
add
ret
add
fbstp
add
lahf
sbb
push
add
ret
sub
jl
ljmp
das
inc
add
pop
lcall
add
and
popf
lock
les
ficomps
add
add
addr16
add
inc
add
add
push
addb
push
jle
movsb
mov
cmc
jae
xor
jae
push
add
add
sbb
adc
clc
fidivrl
add
pop
fsubs
aad
push
add
add
pop
add
adc
add
add
divb
sbb
adc
add
add
stos
cmpsb
in
std
lods
enter
xlat
notl
sub
pop
cmc
insl
das
out
add
rcrl
js
or
adc
movhps
lea
shlb
mov
shll
lahf
scas
daa
cmpsl
dec
add
add
jb
fdivrp
scas
cltd
clc
mov
add
add
shrl
imulb
add
sub
jnp
ljmp
cmp
pusha
add
add
add
pop
push
add
add
push
imul
mov
sbb
decb
add
add
in
mov
sbb
xchg
out
inc
in
roll
sbb
xchg
mov
pop
fldl
or
nop
outsl
cmc
add
sub
push
add
inc
and
popa
stos
dec
add
add
dec
and
andl
imul
ja
sub
repz
lods
xor
add
fdivr
add
add
xchg
mov
add
adc
leave
andl
test
inc
add
sub
mov
mov
pop
js
mov
cmp
mov
ret
loope
lret
ret
into
fisubl
add
ret
fidivrs
cmp
shlb
add
divb
arpl
add
jo
fs
add
add
lret
cwtl
mov
sti
pop
add
stos
or
mov
push
add
loop
movsl
cmpsl
mov
add
add
xchg
dec
xchg
out
lods
aad
mov
data16
lods
sub
sub
add
lea
jecxz
add
lahf
dec
add
and
inc
add
add
test
mov
cmpsb
adc
rclb
loop
inc
pop
dec
test
pop
jns
pop
jp
clc
outsl
pop
add
add
les
xchg
or
jmp
loopne
std
push
add
inc
add
add
daa
shll
add
add
dec
ljmp
mov
fisttps
pop
add
mov
add
pop
mov
cmp
out
push
sub
mov
ss
fstps
dec
add
mov
add
add
lds
hlt
aas
bound
movhps
add
mov
add
adc
scas
jnp
dec
sbb
add
mov
add
nop
sub
pop
stc
jecxz
add
add
mov
add
add
cmp
fistps
arpl
stos
dec
add
inc
inc
das
dec
or
and
push
add
add
aad
int3
push
sub
and
xchg
xor
movsl
ficoml
into
icebp
inc
pop
sahf
pop
sarl
mov
add
mov
add
ffreep
in
leave
xlat
lret
xchg
popf
xchg
sub
cmp
fists
stos
xorl
adc
das
lret
xlat
lret
or
data16
add
add
decl
xchg
lret
add
dec
add
sbb
mov
ret
add
testl
add
add
sbb
lahf
pop
add
add
mov
jo
sbb
in
pop
inc
add
jmp
das
sbb
push
add
push
pushf
aaa
xchg
pop
add
stc
test
add
mov
xor
call
fwait
dec
add
decb
sub
jg
mov
adc
cmp
add
push
mov
sbb
add
inc
add
add
andl
adc
mov
add
in
jnp
ret
js
xchg
sar
xor
ret
popa
xor
dec
add
add
mov
adc
xor
xlat
cmpsl
lahf
int
inc
jg
cmp
outsb
add
add
dec
insb
add
cmpsb
xchg
sub
std
or
dec
add
sbb
inc
mov
int
loop
or
ljmp
push
xchg
inc
add
push
scas
hlt
pusha
add
popf
xchg
pop
pop
add
push
add
shll
inc
paddsw
lahf
cltd
xor
dec
add
rolb
add
add
mov
mov
mov
xor
rep
mov
add
add
add
adc
xchg
not
push
add
xlat
mov
das
test
cmc
inc
add
dec
decb
pop
mov
inc
add
add
fdivrp
sti
inc
or
ret
dec
iret
mov
daa
dec
add
push
out
sbb
adc
add
add
jns
jl
pop
add
mov
xchg
or
push
add
das
ss
inc
add
pop
mov
test
add
mov
add
jl
out
pop
add
dec
add
scas
mov
hlt
adc
add
pop
in
hlt
sub
dec
pop
in
sahf
mov
or
ljmp
fsubl
cs
cwtl
aaa
xor
sarl
jmp
mov
push
add
bound
cli
movl
pop
iret
sub
loop
mov
xchg
cltd
push
inc
xlat
mov
mov
sub
dec
mov
and
dec
add
cmpsb
add
inc
arpl
and
xchg
jl
clc
cmpsl
mov
inc
add
mov
dec
add
cwtl
popa
aad
mov
jnp
sub
fcoms
ret
jmp
pop
add
aaa
jne
adc
add
mov
rcrl
xchg
add
add
idivb
data16
jp
mov
gs
xlat
imul
pop
cmp
cmp
sub
pop
add
into
fbld
xor
dec
jnp
add
rol
inc
add
add
pop
lds
mov
or
aas
int
add
add
or
inc
sti
mov
mov
push
add
insl
fdivrl
xchg
jmp
jo
sarb
xor
push
add
stos
pushf
xlat
push
add
sbb
add
or
outsb
add
jno
insl
add
scas
out
popf
inc
add
cli
cmpsl
aas
js
fsin
mov
add
push
add
dec
fs
push
add
insl
pop
test
ss
xchg
call
test
inc
push
and
xchg
push
add
int
mov
add
xchg
or
push
add
push
add
pop
adcb
add
add
add
xchg
pop
xchg
repz
pop
negl
jecxz
and
jge
pop
push
add
push
icebp
arpl
jp
adc
insl
sub
pop
fdivrp
push
add
sub
stos
or
das
movsl
jl
mov
mov
add
cmpsb
loopne
adc
test
lret
test
cmp
dec
bound
sub
jno
push
loope
sbb
out
out
hlt
test
add
data16
out
lcall
add
jne
aaa
fbld
out
fwait
les
call
xor
jp
adc
add
dec
fimuls
fsubs
lods
lods
dec
int3
lret
adc
push
add
arpl
sbb
and
mov
add
mov
add
insb
add
into
pop
add
add
std
jae
add
mov
jmp
push
add
pop
mov
add
test
jno
xlat
pop
mov
push
add
hlt
fistpll
add
pop
add
sbb
sbb
out
jge
scas
xchg
scas
sbb
mov
stos
inc
mov
xor
leave
xchg
mov
jge
inc
add
sub
out
sbb
bound
and
and
rcl
aam
pop
add
add
jg
mov
mov
add
lret
cmpsl
movsl
mov
add
fldt
add
lock
outsb
add
add
std
int3
inc
cmpsb
pushf
fsubrs
add
add
adc
je
pop
add
int3
dec
fst
pop
add
scas
mov
mov
add
xorb
inc
lock
bound
push
add
outsb
add
in
cmp
scas
push
add
add
lock
mov
xlat
ss
cwtl
test
pushf
test
sbb
aaa
mov
jns
lret
sbbl
int
add
mov
and
inc
scas
cld
lock
rorl
dec
lret
add
jo
adc
pop
jae
repz
js
sbb
icebp
sbb
add
int3
pop
add
scas
popa
inc
add
lods
jno
add
cmp
cmp
bound
aas
sti
icebp
jmp
add
adc
add
jbe
add
pop
add
add
jge
add
push
add
insb
add
idivb
pop
movsl
inc
mov
push
data16
add
gs
jb
add
inc
js
jmp
cwtl
cwtl
fmulp
stos
add
shll
cltd
pop
add
ljmp
ja
add
add
inc
or
add
test
and
loopne
mov
or
add
xchg
outsb
add
add
xor
jp
into
sub
dec
add
add
aad
pop
add
add
pop
add
lcall
cmp
xchg
lret
es
pusha
add
xchg
sub
mov
add
add
ja
pusha
add
add
jmp
test
fbld
add
aad
mov
mov
mov
add
sub
or
pop
aas
loop
add
bound
enter
inc
add
jno
mov
add
add
push
pop
fstps
adc
add
shl
sbb
mov
xor
push
ret
add
lock
ja
add
cli
jae
push
mov
stc
and
sbb
or
pushf
cmp
pusha
add
add
fidivl
and
jecxz
adc
cld
lahf
cld
xchg
les
pop
test
and
dec
add
push
add
pop
adc
call
pop
add
add
add
or
adcl
sub
push
add
je
and
in
out
add
inc
jo
mov
push
add
out
out
fsts
add
insl
lock
add
popf
jge
sbb
add
jecxz
add
into
mov
lock
or
and
ret
les
int3
arpl
fcomip
movsl
inc
add
dec
add
xchg
mov
lcall
xor
push
add
add
mov
dec
stos
or
add
pop
leave
test
sbb
sahf
ja
add
jle
or
xchg
xchg
lea
add
add
cmc
popf
in
cwtl
cmp
adc
lret
movb
outsl
add
inc
cmc
adc
or
arpl
dec
add
jle
andb
add
mov
ljmp
arpl
pop
outsl
and
xchg
inc
sub
lods
pop
add
add
mov
out
pop
add
sub
pop
cmp
dec
sub
or
test
jo
in
add
add
add
loope
sbbl
mov
or
adc
addr16
movsl
repnz
aaa
adc
add
in
add
das
iret
mov
stc
cmp
add
or
dec
add
add
xchg
or
pop
jae
dec
ss
jb
push
add
add
add
outsb
add
push
add
xchg
inc
mov
sbb
jp
ds
in
add
add
adc
ffreep
mov
int3
pop
inc
add
subl
add
add
add
sbbb
add
add
rorb
push
add
int
add
add
and
rcr
adc
add
and
sbb
pop
or
push
mov
add
push
add
lods
and
movsl
fdivrs
add
add
aam
sub
inc
add
or
jbe
xorb
repz
dec
add
mov
xchg
pop
add
push
int
shlb
add
mov
add
pop
add
add
mov
add
lahf
icebp
out
ja
loope
dec
add
ret
dec
clc
fldl
imul
push
add
cmp
arpl
add
insl
ficoms
add
cwtl
jne
lea
data16
cmp
imulb
pop
add
xor
in
mov
ret
add
test
mov
movl
mov
jbe
xchg
ja
in
fbstp
test
mov
push
add
pop
sahf
int
pop
div
in
add
jne
out
xor
xchg
loope
lcall
add
add
mov
adc
cmp
inc
add
xor
mov
add
jmp
add
add
out
out
lret
xchg
adcb
add
sbb
mov
std
sahf
xor
mov
add
fidivl
daa
and
add
dec
sbb
je
aad
add
outsl
pop
add
add
mov
add
cmpsl
outsl
pop
add
add
inc
add
add
xchg
add
mov
cltd
push
push
dec
add
or
and
arpl
addr16
add
add
lods
mov
mov
dec
add
add
jmp
push
add
pop
mov
add
add
add
scas
xor
jp
pop
add
rorl
mov
add
shrb
push
add
movsl
lcall
sahf
scas
std
test
add
mov
mov
push
add
inc
add
mov
add
cwtl
in
jg
mov
sbb
add
leave
mov
enter
add
insb
add
notb
xchg
movsb
cmpsb
int
add
adc
ret
jg
and
cli
mov
sbb
sub
push
add
push
mov
push
add
js
push
add
leave
ret
sub
imul
movsl
cmc
scas
popa
rcr
cli
nop
cmp
lret
add
sub
add
add
mov
out
dec
add
dec
enter
inc
add
sub
xchg
and
aam
add
inc
add
mov
inc
int
shlb
mov
scas
adc
cmp
jbe
dec
add
add
add
and
mov
loopne
dec
sub
jbe
jne
sbb
mov
in
xchg
cmp
sbb
add
dec
das
jge
rcll
add
das
hlt
in
cmp
pop
add
push
add
lret
in
add
add
nop
and
fildll
cmpsb
stc
jmp
add
add
out
movsb
jp
pop
push
add
add
jae
mov
stos
orps
pusha
add
add
sub
in
jne
jne
add
add
cmp
lock
add
add
into
mov
mov
dec
ja
sub
or
push
mov
jl
add
cmp
mov
sub
imulb
add
aas
or
xlat
movsl
push
add
add
sub
mov
lods
lods
fstps
add
lods
and
fwait
shll
test
addr16
lcall
cwtl
fwait
mov
cmp
sbb
add
mov
push
dec
add
popf
dec
jbe
sbb
mov
add
add
add
inc
add
aaa
fsubr
xchg
leave
sub
ss
pop
add
cmc
xchg
cmp
xorb
xchg
fmull
xlat
xor
mov
test
add
insl
imull
add
add
jns
mov
mov
aam
add
add
add
adc
jp
fwait
js
pop
sub
addr16
in
cmpsl
jge
fwait
lahf
out
fwait
mov
add
add
add
add
dec
daa
cmp
scas
jnp
bnd
add
div
mov
mov
fisubl
add
xlat
ret
das
enter
adc
xor
aaa
dec
and
add
mov
add
les
inc
mov
add
jmp
pop
add
int
add
data16
add
mov
add
sub
orl
xor
scas
rolb
sub
pop
lods
mov
add
mov
adc
icebp
xcrypt-ecb
cmpsl
push
add
stc
into
mov
push
es
or
push
add
pop
add
mul
mov
jmp
lods
test
add
push
add
or
cmp
and
jnp
sar
add
inc
xor
inc
add
rclb
add
dec
add
add
mov
add
add
pop
add
add
cvtdq2ps
ja
add
dec
add
fildll
add
jle
repz
mov
xchg
mov
lds
xchg
decl
mov
add
add
add
xchg
pop
sub
xchg
imul
das
shrb
insl
cltd
adc
filds
add
add
mov
push
xchg
xchg
arpl
sbbl
sahf
jle
addr16
add
add
cmpsl
cmp
add
xchg
or
cmp
xor
ljmp
add
sbb
lods
in
sbb
fisttpll
mov
in
stos
sar
add
jae
jo
popa
iret
out
add
sbb
les
outsb
add
sbb
sbb
add
je
daa
loopne
pop
add
std
insl
xchg
and
cmpsl
fstpl
pop
or
add
mov
testl
and
dec
test
add
cli
jg
xchg
test
shll
aaa
and
inc
add
mov
add
add
stos
jmp
in
xchg
pop
add
icebp
xchg
push
cli
jne
mov
adc
data16
or
add
adc
pop
add
mov
pop
add
stos
je
cmp
test
sahf
adc
mov
jnp
xchg
add
hlt
sbb
and
add
outsl
sub
mov
add
add
in
mov
sbb
dec
add
dec
add
xor
mov
add
xchg
enter
add
add
inc
mov
insb
add
sub
rcll
mov
jle
xor
ret
xchg
loopne
or
adc
sahf
cwtl
pcmpeqw
add
sub
jno
loopne
into
xor
jb
data16
add
pop
in
stos
iret
jecxz
rolb
fdivl
add
jl
cmp
mov
ljmp
pusha
add
or
ret
xchg
add
add
xchg
xchg
push
add
push
add
andb
add
out
cmpsl
dec
nop
jecxz
mulb
insb
add
add
add
out
add
addr16
jg
xchg
cli
out
repnz
ljmp
push
add
push
and
add
xchg
mov
repnz
lea
sbb
inc
add
add
sbb
imul
xchg
mov
jbe
sub
sbb
in
push
add
lods
add
mov
sbb
xchg
push
add
mov
sbb
cmp
sti
and
movsl
ljmp
push
fdivr
shl
cltd
sti
bound
adc
push
add
inc
outsb
add
lret
dec
adc
inc
push
add
add
mov
add
add
jb
push
aad
lcall
mov
dec
popa
iret
jle
and
movl
incb
add
add
bnd
add
inc
outsl
xchg
sub
xchg
mov
mov
leave
jb
dec
addr16
repz
add
add
cmp
mov
mov
add
add
jbe
cli
jns
fwait
or
add
ror
insb
add
or
sbb
add
cmc
push
add
push
mov
add
add
jmp
add
sbb
test
fmuls
push
mov
daa
fwait
xor
lock
sbb
jbe
icebp
out
xchg
je
ljmp
inc
add
pusha
add
jmp
js
aas
or
xor
insl
cmp
leave
push
pushf
out
add
clc
insb
add
mov
push
add
sub
repnz
fidivrs
test
pop
add
pop
fld
js
mov
inc
add
add
adc
sub
test
add
loope
daa
movsl
sub
inc
add
adc
daa
rcrb
inc
add
and
jnp
ljmp
cltd
cmp
cmp
dec
dec
mov
arpl
mov
jp
xchg
xor
mov
lods
jmp
add
mov
pop
add
add
inc
push
add
add
add
cli
push
add
pop
aas
pushf
jmp
mov
add
repnz
loopne
add
xchg
insl
add
pusha
add
add
add
jo
mov
add
and
or
pop
add
add
pop
test
add
rcl
mull
popa
addr16
sub
mov
mov
stos
stc
addb
mov
rcrl
add
test
cs
repnz
mov
roll
add
add
imul
inc
add
into
sub
dec
add
adc
add
xchg
rcl
xor
stos
lods
jb
bound
hlt
vmwrite
add
add
add
add
cmpsb
fldcw
add
sub
sub
add
and
push
add
pusha
add
scas
xchg
sub
adcl
pop
dec
add
fs
push
imul
add
or
cmp
mov
adc
call
cmp
int
mov
mov
or
out
std
decb
je
movsb
and
gs
add
mov
enter
add
dec
cld
repnz
mov
insl
movsb
xchg
pop
add
mul
cli
pusha
add
pushf
xchg
sub
lea
add
add
ret
add
inc
add
add
fcom
mov
push
add
adc
call
stc
mov
jnp
adc
call
scas
movsb
mov
mov
jp
dec
add
or
jle
loop
add
add
cmp
mov
jmp
arpl
xchg
cs
xor
sbb
jp
dec
xchg
insb
add
add
jl
sub
sub
push
add
enter
mov
add
fcomps
cmp
mov
cmpl
in
jmp
cmp
out
xchg
and
fisubrl
add
outsb
add
cmp
push
add
icebp
xor
add
out
ja
mov
add
mov
test
scas
sub
xchg
mov
jmp
daa
mov
and
xor
jae
in
jle
das
xor
add
add
push
std
sbb
add
and
push
add
into
idivl
in
nop
idivl
pop
test
loope
add
lret
loopne
and
mov
push
add
add
add
inc
mov
add
add
shl
mov
mov
aaa
movsl
stos
mov
mov
add
xor
lods
cmp
popf
sahf
jns
mov
into
jo
mov
out
dec
xchg
movsb
or
adc
hlt
mov
add
pop
and
ficomps
int
idivb
aam
push
cmp
jecxz
loop
dec
shll
jnp
pop
dec
sbb
add
add
sub
xor
add
das
jne
mov
jmp
cmc
data16
dec
add
mov
jecxz
mov
xor
mov
or
movsl
dec
lods
pop
idivb
add
arpl
add
add
cmp
add
add
dec
stos
jecxz
add
jg
stos
dec
add
sbb
insl
loopne
add
add
mov
add
add
test
mov
push
push
add
insb
add
jno
fwait
and
mov
clc
xchg
sub
sti
mov
add
ja
push
add
cltd
jmp
push
add
add
and
add
je
imul
gs
mov
lret
jns
jg
inc
lcall
xchg
sar
scas
aad
sbb
bound
xchg
shlb
push
hlt
ja
pop
sbb
addr16
push
ret
fidivl
pop
int3
rcl
add
adc
mov
stc
jae
mov
inc
testl
cld
add
pop
andl
stos
mov
fdivrs
cmp
xchg
jmp
arpl
cwtl
jecxz
pop
add
jmp
bound
sbbl
add
add
add
insb
add
inc
jecxz
adc
test
ljmp
test
dec
add
add
add
add
and
jle
pop
add
jg
ja
cmpsb
cmp
mov
xchg
add
neg
jl
movl
lea
add
dec
add
push
test
in
xchg
cli
push
add
jno
cmp
insb
add
add
pop
add
add
sbb
je
fildll
xchg
and
add
sbb
add
add
aad
lods
mov
sbb
imul
or
leave
ret
xchg
jp
shll
ss
sahf
xor
or
cmp
sti
enter
inc
dec
mov
out
fistps
cmp
xchg
int
outsl
add
add
xor
pop
out
xchg
daa
xor
pop
xchg
ficompl
cmp
mov
cmp
add
mov
mov
lea
sub
out
lds
xor
inc
lock
cmp
andb
mov
add
mov
fisttpl
push
add
imul
lcall
and
xor
pop
shr
inc
cld
call
outsl
fcomi
xchg
mov
add
add
add
add
add
sbb
das
sbb
xor
adc
in
add
sub
adc
fsubs
ret
pop
add
lret
sbb
sbb
cmp
mov
call
pushf
call
add
out
or
adc
adc
aam
pop
out
test
out
add
mov
out
mov
jle
push
add
push
add
les
add
xor
pop
add
mov
subl
or
push
call
add
inc
add
ret
lret
xchg
lods
cwtl
mov
aas
mov
iret
jbe
jne
add
mov
add
stos
aam
les
xchg
iret
push
add
inc
push
in
and
out
cmp
add
movsl
mov
and
and
test
orb
sbb
ret
mull
cmpsb
outsl
imul
lods
mov
push
fdivr
mov
jb
push
add
faddp
les
shll
mov
enter
int
pop
push
add
push
add
insl
inc
mov
add
jb
sti
ret
cli
add
cmp
xchg
ljmp
jnp
add
enter
add
jge
add
sub
iret
ret
add
fisubrs
je
sti
and
insb
add
loope
add
add
xchg
cmpsb
xchg
repz
stos
cmp
les
pop
add
and
f2xm1
push
push
add
mov
adc
jecxz
add
mov
push
add
in
cli
pop
add
movsb
push
add
add
ja
shr
pop
and
jmp
dec
fstpt
mov
sbb
mov
add
vpgatherqd
or
dec
add
sbb
and
add
jnp
jle
mov
pusha
add
mov
sbb
aam
add
xor
dec
add
ljmp
mov
lahf
lock
int3
loope
add
aam
mov
jns
mov
mov
mov
dec
xchg
adc
mov
add
jne
cmp
out
jns
xchg
ret
pop
dec
jle
cmp
add
add
add
push
add
add
push
add
add
insl
inc
adc
push
add
cmp
xor
add
sub
jg
movsl
sub
jmp
adc
les
mov
mov
mov
add
lret
mov
cld
fldl
lods
jne
add
adc
movsl
dec
add
stos
push
add
add
dec
add
add
jns
inc
add
xbegin
add
lods
pop
add
mov
add
icebp
aad
add
inc
or
leave
cmp
jo
xchg
adc
add
movsb
cmp
sbb
jge
pop
add
add
push
add
jbe
jmp
pop
leave
add
or
sub
test
mov
add
add
xchg
nop
xchg
pop
cmp
sbb
pop
add
adc
cmpsl
sahf
cmc
add
lock
cli
insb
add
out
pop
add
sbb
int3
fwait
sub
into
mov
leave
xchg
icebp
add
add
add
and
sub
add
insl
addr16
add
pop
add
and
xlat
sub
test
cmp
pop
xchg
ficompl
cld
add
insb
add
in
pop
add
das
movsl
ljmp
add
out
je
adc
add
add
xchg
dec
add
adc
out
popa
dec
add
and
jns
jl
dec
add
add
repnz
add
mov
dec
std
and
out
mov
je
push
add
add
in
sahf
adc
push
add
push
add
add
cmp
add
dec
cmp
add
cmp
movsb
jecxz
loope
add
xor
push
cld
jno
cmc
das
ret
push
add
add
fwait
lds
add
scas
dec
add
sarl
sub
jnp
add
adc
add
imul
push
add
add
sub
add
incl
cmpsl
pop
pop
jne
adc
push
fldenv
cmp
fsub
mov
movsb
push
add
mov
rol
and
incb
in
push
add
dec
mov
stos
sub
jno
es
push
push
out
mov
in
pop
dec
mov
mov
test
adc
jnp
xchg
sub
add
add
loope
add
jl
cmc
rolb
mov
pop
adc
stos
popl
add
adc
jp
mov
icebp
rcll
add
inc
add
add
jle
add
mov
repnz
stc
add
rcrb
and
cmp
add
add
add
add
pop
add
add
es
push
add
jp
mov
scas
pop
repnz
std
hlt
leave
push
add
add
repnz
mov
add
gs
mov
add
dec
xchg
inc
add
push
add
add
loop
and
xor
out
jbe
jnp
add
in
inc
add
xor
pop
lret
xchg
adc
sbb
shlb
push
add
add
add
jge
add
and
rol
jl
out
sbb
add
cmp
shrb
das
mov
cmc
rcr
in
popf
and
outsb
add
add
jp
scas
orb
push
hlt
fildl
imul
pxor
sub
inc
add
sub
jae
add
add
inc
add
fldcw
xchg
ret
rorb
add
push
add
imul
mov
mov
add
and
xchg
aad
lods
cli
mov
repnz
mov
dec
add
add
inc
add
flds
shlb
dec
in
add
push
icebp
lret
fnstsw
xlat
fsub
mov
add
pop
mov
out
rcrb
add
add
push
pop
cmp
add
mov
daa
pushf
lcall
add
add
movsl
adc
add
add
cwtl
inc
mov
es
ret
push
add
or
xor
xchg
dec
add
add
test
add
and
add
fldenv
cmpsb
jl
adc
xor
mov
je
repz
jl
out
movsl
movsb
dec
mov
inc
add
xchg
fadd
sbb
xchg
mov
leave
or
shrl
lahf
daa
cmp
aad
inc
add
sub
stos
out
pop
add
push
add
in
add
call
sub
cli
fimuls
push
rcll
add
xchg
mov
jnp
lret
add
pop
add
mov
ss
mov
push
add
push
add
bound
lods
add
daa
mov
mov
in
mov
movsl
push
mov
js
pusha
add
add
test
hlt
mov
add
add
out
leave
and
in
cli
popf
mov
lcall
push
add
push
je
adc
insb
add
pop
add
xchg
or
cmpsl
adc
js
ss
test
mov
add
pusha
add
in
or
ja
mov
adc
push
add
orb
sub
lods
mov
fmul
push
mov
add
mov
add
add
add
je
and
inc
add
xchg
pushf
mov
int3
repnz
lods
sti
pop
add
std
push
sbb
xor
add
ja
sub
xchg
icebp
mov
add
shl
adc
or
lcall
or
shlb
mov
push
add
mov
lods
or
xor
outsb
add
dec
and
add
inc
add
add
add
sub
adc
xor
add
das
mov
add
pop
add
int
dec
xchg
int
or
mov
std
adc
movlps
and
add
push
add
cmp
add
test
xchg
ja
sub
pop
add
lods
jno
hlt
xlat
notb
inc
xor
sarl
scas
adc
sub
adc
inc
add
in
xor
in
add
pop
repnz
je
sahf
mov
jp
push
mov
gs
sarb
cmp
icebp
push
andb
mov
das
sti
clc
push
dec
add
movsl
mov
sub
in
negb
adc
add
jmp
add
lods
xchg
xor
mov
xchg
pop
dec
add
add
xor
pop
add
add
mov
add
add
cmp
arpl
fdivp
sub
loopne
lds
cmpsb
sub
sub
jmp
out
dec
lahf
xchg
add
movsb
xor
pop
sub
add
and
sbb
push
add
das
inc
xor
call
add
sub
sbb
fsubrs
mov
adc
mov
dec
add
push
add
das
mov
mov
sbb
lret
bound
mov
in
movsb
push
add
jnp
stos
xor
lcall
call
stc
aam
repz
jne
mov
add
add
add
jmp
out
imul
sub
out
sbb
sub
cmp
xlat
icebp
cmpsb
repz
dec
fdivl
or
and
mov
sbb
test
push
add
je
cmp
out
xchg
pop
add
or
fiadds
add
jmp
xchg
bswap
stc
cmp
test
pop
add
and
fisttps
adc
mov
add
add
adc
dec
add
add
dec
add
sbbl
xchg
lea
add
out
popa
aam
xor
add
add
pop
add
inc
lahf
mov
add
cmpsl
dec
add
xor
sub
jb
adc
add
adc
sub
add
lock
or
jle
bound
fistl
jno
jno
jne
lahf
mov
push
add
add
adcb
push
add
and
add
mov
inc
xchg
cmc
xor
out
scas
sub
add
add
je
cmpsl
xchg
leave
jg
add
add
mov
jae
xchg
jns
stc
pushf
repz
and
mov
dec
cmp
mov
dec
js
or
cmc
in
test
in
add
addb
mov
fldenv
xchg
add
and
add
mov
push
add
add
repz
add
int3
out
add
cmp
hlt
fnstsw
sub
mov
cmp
jle
enter
add
add
add
add
mov
mov
add
rol
inc
add
das
fldcw
rcrl
rcrl
sbb
loop
add
jg
add
loope
add
aaa
orb
add
or
mov
cmp
jnp
add
movsl
add
jae
inc
add
inc
fst
cmc
or
call
popa
fs
jp
iret
aad
lds
add
cmp
mov
inc
add
pop
adc
jmp
lods
cld
or
add
sarb
sub
rorb
jbe
imul
cmp
hlt
out
push
pop
add
xlat
pushf
sti
addb
add
ficoms
xor
mov
add
add
add
cmc
inc
sahf
pop
add
fsts
mov
fmuls
add
mov
incb
push
add
mov
iret
rolb
push
imul
mov
nop
inc
add
ficoml
add
xchg
jb
gs
fwait
das
and
push
add
add
adc
sbb
aas
cltd
js
add
test
add
out
cmpsl
repz
movsl
inc
add
movsl
das
and
cmp
test
or
add
inc
add
xor
add
mov
xorb
stc
mov
add
test
in
popa
lret
jmp
shl
addr16
add
jle
xor
add
rcll
add
bound
ret
add
aas
aas
push
add
rolb
pop
add
lcall
sbb
mov
std
pop
fsubp
xlat
mov
out
ljmp
add
push
add
push
add
add
popa
cmpsb
jno
cmp
add
cld
sub
add
sub
fnsave
add
dec
sbb
jmp
add
in
lods
jmp
add
add
push
aad
cmp
pop
cmp
add
push
data16
mov
mov
cli
imul
add
aam
add
adc
aas
mulb
add
mov
lret
call
mov
pop
ret
and
filds
push
add
push
add
add
shlb
loope
inc
xor
cmpsl
cmpl
dec
xor
add
sub
imul
cmp
add
or
ljmp
xchg
mov
add
popa
in
or
mov
cmp
xchg
scas
shl
jmp
loopnew
add
scas
cmpb
out
xor
jb
push
mov
jle
jae
imul
push
add
cltd
clc
into
pop
adc
ja
push
fisubrs
add
jge
pop
in
je
dec
add
add
add
mov
stos
and
testb
aam
les
into
push
xchg
je
stos
mov
sub
int3
sub
sbb
into
in
fimuls
lds
and
jno
roll
jno
cmp
and
inc
cmp
andb
dec
add
pop
add
fidivrs
add
jge
mov
pushf
add
bound
xor
mov
daa
xlat
popa
or
negl
add
add
add
dec
outsb
add
mov
xchg
cmp
loop
stc
mov
sub
xor
jle
sbb
xchg
push
or
std
mov
add
add
add
lahf
shll
and
out
fwait
mov
mov
add
adcl
insb
add
mov
add
data16
stc
imul
in
leave
cmp
adc
mov
push
add
add
and
shlb
pop
xchg
or
xor
inc
in
and
pop
add
outsl
out
gs
sahf
sbb
add
stc
fnsave
xor
add
lret
fcomi
jnp
add
imull
adc
add
pusha
add
add
imul
adc
add
add
add
inc
sbb
rcl
add
push
add
add
mov
mov
ja
add
int3
xchg
xchg
push
add
daa
movsb
mov
add
jl
mov
add
push
add
lock
in
dec
add
add
add
add
pushf
push
add
pop
cmpsl
stos
in
adc
into
sahf
pop
mov
outsb
add
inc
add
push
add
stc
sbb
or
adc
push
mov
add
add
add
add
ja
add
add
or
jmp
rcll
dec
add
xchg
sbbl
push
add
push
add
sbbl
orb
cmpsl
push
add
push
xchg
add
xor
into
and
adc
add
in
sub
leave
pushf
insl
hlt
push
jo
repz
lods
pop
add
jmp
mov
add
add
repz
fbld
fistps
add
addr16
add
fsts
test
add
test
push
xchg
fwait
js
dec
add
add
or
add
testb
xor
das
pop
and
pushf
mov
insb
add
lret
adc
adc
mov
out
in
in
cmp
add
cmp
mov
add
xor
push
add
cmp
movsb
mov
add
add
mov
dec
test
adcl
add
xchg
xchg
xor
sub
add
lahf
movsb
scas
dec
add
xchg
mov
or
mov
cmp
pop
add
ds
push
sub
xor
add
cmp
inc
lcall
lds
pusha
add
xchg
mov
add
lahf
pop
pop
imul
sbb
fcomip
clc
jle
pushf
test
add
dec
add
popf
xor
push
add
in
push
add
fistpll
add
inc
mov
add
add
rolb
cli
pop
mov
add
clc
insl
js
cmpsb
or
lods
dec
cwtl
adc
repz
mov
add
add
jmp
js
xchg
loop
sub
add
add
pop
out
jno
sub
add
loope
lds
add
mov
adc
or
mov
add
jmp
mov
xor
add
mov
test
add
xlat
or
push
dec
xor
add
and
mov
addb
xchg
mov
add
enter
jns
adc
or
xor
push
out
icebp
add
add
sub
out
cmc
mov
or
xor
xor
jns
xlat
mov
divb
push
add
add
push
sahf
lods
aad
xor
sub
or
ljmp
sbbl
add
mov
add
add
push
add
add
scas
dec
adc
pushf
mov
stos
xor
add
arpl
add
ret
aas
xchg
add
push
add
mov
addr16
out
loopne
add
add
popf
fucom
adc
dec
add
add
inc
add
pop
add
daa
loopne
in
es
mov
cmp
xchg
lcall
inc
jge
add
mov
cld
inc
add
push
add
cmp
fldlg2
lds
cmpsl
jbe
mull
imul
push
add
mov
add
add
dec
add
sub
cmc
imul
cmp
cmp
dec
shl
aad
fcom
icebp
jb
rorl
cli
sbb
mov
in
enter
mov
jmp
xlat
stc
jg
add
nop
data16
add
and
clc
mov
add
push
out
cmp
insb
add
fnstenv
add
add
imul
xor
lods
dec
add
sahf
test
add
fidivrs
add
pop
add
add
add
xor
sbb
mov
sub
and
lods
sub
loopne
movsb
dec
add
mov
add
add
popf
sub
add
in
or
fadd
or
jne
fsubrs
mov
dec
add
sbb
cmpsl
add
into
mov
add
cmp
jns
cmpsl
arpl
xor
add
cmp
adc
ficompl
add
sbb
push
add
sub
xlat
in
shrl
jbe
add
jno
pusha
add
cmp
testl
aas
fstpt
aaa
inc
jecxz
push
add
add
xchg
dec
js
pusha
add
xchg
int
add
mulb
add
aaa
mov
dec
mov
insb
add
xorl
sar
sub
dec
roll
aam
add
sub
adc
sar
sahf
sub
repz
scas
jae
add
cmp
or
fistps
add
cld
aas
int3
lds
add
mov
push
add
add
dec
jecxz
jbe
ret
push
sbb
int
lods
xchg
andb
mov
add
mov
cmp
jp
mov
stos
cmpsb
add
cmp
xchg
cmp
mov
jbe
hlt
jg
jg
add
sbb
cmpsb
fisubrl
add
push
and
in
imul
mov
int3
cmpsl
lahf
mov
or
or
pop
push
add
jo
ret
mov
fsts
lret
add
cltd
mov
add
dec
xchg
add
xchg
sbb
xchg
addl
mov
lods
sahf
addl
lea
xchg
dec
push
add
add
je
cmp
andl
add
add
inc
add
add
out
mov
dec
add
fcoms
cmpsl
testb
inc
add
in
pop
add
push
add
add
movsb
mov
ljmp
sti
xor
pop
sub
sbbl
call
add
stos
or
aas
dec
fsubrs
fsubrl
cmp
and
add
in
xor
out
fdivrl
bound
mov
popa
jns
popa
insl
popa
pop
add
je
inc
add
sbb
jo
and
push
add
mov
popl
xorl
add
into
xor
add
dec
add
add
dec
pop
add
add
add
add
add
or
mov
or
sub
mov
xchg
mov
mov
in
add
dec
adc
mov
add
mov
and
negl
add
jle
jns
inc
addb
push
add
mov
sub
out
fcmovu
xchg
dec
push
add
pop
jnp
add
ficomps
push
sub
sub
fdivr
shll
cltd
pushf
lret
and
loopne
add
mov
add
mov
es
or
xchg
add
jp
dec
push
add
and
fucomp
movsb
inc
add
xor
mov
mov
ss
insb
add
cmp
ffreep
mov
add
dec
test
les
test
add
mov
add
xor
out
cmp
add
adc
loopne
add
push
add
xchg
mov
stos
sbb
js
push
fistpll
add
add
loope
add
push
add
push
add
xor
sahf
std
adc
loopne
lret
xchg
mov
fdivs
aad
subl
sub
lea
add
add
divl
add
jae
cmp
mov
adc
ds
pop
xchg
shll
loope
add
add
add
add
push
xor
cli
pushf
jmp
add
inc
add
in
repz
dec
add
add
and
add
or
xchg
sub
shr
add
add
lock
rcl
add
je
sub
out
push
xchg
shlb
add
call
stos
pop
xlat
sbb
sub
leave
xlat
push
add
add
mov
add
andl
cld
jmp
lods
jl
sub
test
xor
clc
lahf
outsb
add
mov
imul
and
sbb
pop
push
add
dec
in
scas
loopne
push
add
cld
push
add
add
shlb
cmp
pop
add
add
add
idivl
add
xor
call
add
add
add
add
fwait
repz
add
dec
add
add
add
sub
mov
jb
jmp
xor
push
add
xorb
mov
mov
add
gs
fimuls
mov
pop
inc
add
mul
or
jmp
cmpsl
or
add
mov
jb
fsubs
add
pop
ljmp
add
add
stc
sbb
int3
jmp
fwait
jl
push
add
add
xchg
int
add
adc
fwait
jno
add
aas
sbb
sub
xchg
call
addr16
add
pop
pop
mov
dec
cs
xor
sbb
add
jo
jae
add
out
aad
cltd
nop
pop
sbb
enter
add
loop
jne
cmpsl
addr16
add
cmpsl
iret
add
cmp
xor
out
scas
pop
add
data16
mov
add
add
cmpsl
lds
shl
add
xchg
add
jno
add
adc
dec
add
add
xchg
dec
add
add
xchg
pop
add
lahf
xchg
sub
test
icebp
out
test
stos
inc
fistpll
dec
add
in
push
add
sub
push
add
xchg
inc
add
sahf
ja
mov
dec
add
shl
into
xchg
dec
push
add
das
mov
add
lea
add
jecxz
push
pushf
mov
or
sbb
mov
out
pop
add
adc
inc
add
dec
nop
insb
add
out
fidivrl
add
loop
or
pop
add
add
add
data16
leave
mov
push
out
push
sub
stos
xor
out
pusha
add
dec
add
add
jnp
cld
mov
add
jbe
adc
test
sub
push
pop
arpl
loopne
jl
push
sbb
shrb
mov
out
shll
cmp
add
popf
inc
xchg
pop
mov
add
shll
in
orb
add
add
mov
add
test
adc
mov
stc
ret
add
out
push
add
add
add
add
add
out
pop
xchg
out
jbe
add
das
pushf
or
sub
mov
push
mov
add
adc
sahf
out
sbb
xor
sub
ret
add
fnsave
add
out
push
fwait
xchg
or
add
inc
add
lret
jns
cltd
lcall
or
pop
add
add
fsubr
in
ret
pop
add
jns
ja
dec
add
add
inc
dec
js
mov
add
mov
jl
push
add
jno
add
mov
jbe
sub
dec
cmpxchg
loope
add
mov
adc
ret
scas
cmp
rcrb
in
mov
add
add
xorb
sbb
adc
add
fs
test
push
insb
add
cli
pop
adc
mov
in
sbb
add
add
fidivrl
pop
inc
add
xchg
and
mov
add
mov
xchg
add
add
rcl
ljmp
push
add
or
lea
aaa
das
data16
cli
adc
bound
std
pop
add
fdivr
out
cltd
mov
call
add
dec
add
add
jg
pop
add
add
xor
dec
add
add
add
pop
add
sbb
xchg
add
add
leave
addr16
add
add
add
lret
stc
ret
adc
mov
xor
ja
add
add
add
rorl
mov
adc
stos
pop
xchg
scas
into
cwtl
pusha
add
jnp
and
pushf
mov
add
adc
and
lea
add
add
mov
pop
or
push
add
jp
movb
add
and
push
add
icebp
jo
scas
sbb
imul
pop
lods
cmp
cmpl
rcl
add
xlat
cmp
scas
ja
adc
mov
sbb
mov
ret
pop
add
insl
in
shrl
test
scas
xchg
pop
das
dec
mov
out
insl
dec
mov
sbb
sbb
int
lret
lret
or
push
movsb
out
mov
add
mov
fst
or
xlat
push
add
add
fdivrp
fucomip
pop
sarl
mov
xchg
cmp
sti
btl
add
add
mov
sub
sub
mov
xchg
imul
xchg
mov
add
dec
add
jge
add
add
xchg
inc
pop
out
xor
mov
mov
sbb
dec
add
movsl
addr16
pushf
fisttpl
and
sbb
rolb
xchg
int
sbb
ja
push
add
jnp
dec
add
sub
and
mov
mov
jle
mov
and
sub
adc
in
add
add
pop
add
insl
push
in
xchg
pop
outsl
outsb
add
add
test
mov
lock
xchg
ficomps
mov
add
add
and
daa
cmp
xchg
or
sti
jnp
or
ja
and
rolb
out
inc
sbb
cwtl
cmpsl
xor
add
add
jge
jmp
xor
cwtl
jecxz
add
cmc
dec
add
lret
sbb
cwtl
mov
xlat
jbe
rcl
add
lock
fsubs
add
inc
stc
popa
out
aas
xchg
xchg
or
bnd
add
add
pop
int
clc
jge
mov
xchg
cmc
ret
add
shrl
or
inc
imul
xor
add
hlt
nop
and
cli
ja
add
add
push
add
and
xor
cltd
push
add
add
add
add
push
add
js
ret
sub
xor
stos
movsl
mov
ret
jb
sti
int3
mov
or
loopne
xchg
cmp
pop
lods
mov
call
add
add
mov
mov
add
jle
scas
mov
mov
add
add
push
pop
xor
add
stc
in
pop
add
pop
add
pop
popa
int
fisttpl
and
cmpsl
jle
add
out
cmp
add
cmpsb
sub
dec
add
add
repnz
hlt
in
xchg
and
sbb
repnz
cmpsb
addr16
mov
add
and
cmpsl
nop
add
mov
add
add
shrl
popa
and
add
xlat
mov
add
cmp
icebp
test
ret
dec
add
xor
pop
mov
add
add
and
add
pop
sahf
dec
add
add
fwait
leave
stos
test
bound
pop
lret
int3
stos
mov
push
data16
sbb
std
lcall
add
add
and
sbb
add
arpl
add
mov
lahf
aaa
rcll
loop
jl
icebp
fisubs
add
push
add
ja
add
pushl
jmp
dec
add
jnp
add
push
add
sub
push
add
adc
push
test
add
mov
outsl
cli
sub
pop
int
ljmp
jg
cli
int3
int3
in
mov
adc
pop
add
add
and
jnp
add
add
sub
out
imul
fiadds
cmp
pusha
add
push
jge
jno
add
add
add
ret
xchg
xchg
repz
xorb
mov
bsr
gs
mov
mov
add
nop
pop
ja
add
and
rclb
add
in
xor
add
jecxz
add
add
add
mov
add
faddl
jp
pshufw
add
cmp
xchg
sbb
xchg
pop
fidivrs
push
add
cld
das
lea
add
jae
fnstsw
add
mov
xorl
cmp
mov
add
jle
in
mov
sbb
lds
imul
add
pop
int3
leave
fs
jb
sub
jns
icebp
std
adc
fimuls
add
add
add
lods
ret
adc
dec
and
mov
add
inc
xchg
mov
xlat
pusha
add
les
add
repnz
out
mov
in
add
add
add
notl
add
add
and
ret
adc
add
or
cli
je
ljmp
jmp
add
pop
orb
xor
insb
add
mov
fdivs
push
add
pusha
add
sbb
ret
xchg
cwtl
out
dec
iret
jae
into
dec
add
add
add
in
mov
and
add
cmp
mov
js
mov
rcr
adc
es
dec
inc
add
cmp
add
pop
add
xchg
jp
adc
sarl
push
add
add
cmc
dec
add
bound
inc
add
iret
lods
leave
fildll
mov
inc
add
add
inc
add
add
aam
adcl
test
inc
ljmp
inc
jecxz
adc
pop
out
ss
jno
sahf
push
add
push
add
addr16
add
add
loope
mov
push
add
add
std
pushf
clc
adc
pop
and
mov
and
add
add
movsl
adc
std
ficomps
xlat
daa
add
xor
sbb
jp
pop
test
add
cmpsl
mov
fsubrl
add
add
add
pop
scas
add
or
xchg
pop
pop
add
push
add
fwait
mov
jnp
add
outsb
add
cs
and
loop
in
out
bound
sbb
aad
lea
fmulp
std
jecxz
leave
outsl
cltd
js
add
clc
push
add
xchg
add
cli
pushf
dec
add
cmpsl
insb
add
push
ja
lret
xchg
shl
inc
add
mov
add
push
add
and
movsb
push
add
sbb
xor
add
js
dec
add
jo
sarb
add
pop
mov
mov
sub
outsb
add
add
arpl
lcall
lcall
popa
xchg
inc
xlat
int3
fwait
lds
xchg
inc
add
sbb
push
mov
add
add
test
add
xor
and
cmp
inc
add
add
jg
lcall
cmc
adc
mov
or
jmp
add
mov
add
xor
dec
cmc
cmp
std
lcall
and
dec
add
out
insl
push
cld
ffreep
loopne
cld
xchg
sub
ss
imul
cwtl
adc
and
mov
cld
addl
data16
shll
lret
pusha
add
aam
add
and
cmp
popa
lret
xchg
cmpsb
cmpsl
rorb
incb
frstor
mov
add
jge
or
scas
and
pop
lcall
sbb
sub
cmp
xor
pop
add
cmp
imul
add
adc
push
adc
jb
rclb
call
add
pop
aas
shrl
add
bound
pop
add
push
add
popf
mov
add
adc
sarb
mov
sbb
add
in
rorb
mov
dec
add
or
in
jmp
add
arpl
fsubs
mov
mov
xor
imul
add
movsb
aad
push
add
add
int
add
jge
mov
mov
in
mov
jbe
scas
jecxz
js
push
aas
cltd
loop
add
js
call
add
data16
push
add
out
inc
add
pop
in
adc
rcrl
pop
imul
xchg
arpl
add
push
rorb
mov
add
lcall
pop
inc
add
divb
sti
sub
sub
xor
pop
imul
lcall
data16
add
inc
add
out
jmp
aam
into
hlt
std
rcrb
add
xor
cmpsl
mov
add
cmp
dec
xor
rclb
mov
cwtl
mov
in
xor
push
sub
mov
or
fistl
aad
outsl
xchg
sbb
nop
sbb
sbbb
sbb
lock
cmp
scas
or
lea
dec
jns
adc
outsl
out
cmp
add
les
pop
jl
fisubs
in
cmp
inc
add
add
data16
mov
pop
test
xor
mov
add
adc
cmc
scas
shll
arpl
add
aaa
adc
xchg
inc
add
jg
add
push
bound
jae
add
lods
cmp
jge
add
add
add
out
cmp
xchg
xchg
sbb
add
add
push
add
lods
mov
add
mov
clc
lret
dec
cs
xor
adc
adc
pop
add
xchg
or
std
ret
adc
add
sarb
add
add
fistpl
add
ret
add
pop
add
dec
dec
jo
add
push
add
outsb
add
dec
fnstenv
xor
add
add
enter
cwtl
mov
sbb
cmp
sbb
loope
add
adc
jae
jae
add
sub
das
dec
add
add
data16
add
push
add
add
add
cmp
sub
lods
je
test
inc
sbb
and
inc
mov
add
pop
and
ret
push
add
add
and
ficomps
cmp
add
sti
xchg
lock
mov
in
pushf
pop
sti
mov
add
mov
xor
mov
jnp
mov
cmp
jb
or
iret
stos
enter
jle
add
sbb
shll
in
insb
add
add
fstpt
add
aad
add
add
add
jmp
lahf
xchg
cmpb
repz
cmp
repz
add
jae
add
addr16
movsb
in
dec
add
sub
mov
movsb
out
outsl
mov
mov
icebp
mov
xchg
add
mov
iret
xlat
add
add
inc
add
lret
and
inc
add
mov
data16
push
add
lods
loopne
add
xchg
lods
push
add
sub
aam
xor
test
sbb
add
dec
add
add
add
stc
pop
add
dec
xlat
test
lds
cs
insb
add
lret
xor
jecxz
mov
sbb
das
mov
jecxz
insb
add
xorl
push
add
fiaddl
add
and
clc
icebp
add
insb
add
sarl
add
and
add
add
dec
add
push
sbb
dec
mov
stos
push
add
lahf
sbb
jne
add
add
mov
mov
roll
mov
out
or
adc
add
add
xchg
push
or
fidivrs
add
in
sbb
jb
std
dec
add
add
ror
test
mov
sarl
insl
ret
adcb
push
add
add
add
add
xchg
bound
mov
loop
add
in
jp
xor
outsl
pop
jo
insl
push
push
add
mov
je
add
add
inc
add
rcrl
addb
test
dec
add
add
add
add
xchg
push
add
add
xor
add
cmp
push
add
fistpl
ret
add
int3
call
or
mov
push
or
test
add
int
divl
leave
int
add
mov
outsb
add
xor
add
add
insl
outsb
add
enter
test
inc
daa
or
add
push
out
mov
mov
adc
pop
add
push
add
add
rorb
add
bound
sarl
adc
add
add
ret
loope
xor
outsl
sbb
add
jno
add
add
jmp
repnz
pop
add
add
clc
lods
push
sub
pop
xor
mov
add
add
movsb
push
add
pop
or
cmp
adc
int3
lcall
add
adc
mov
loope
sub
add
ret
push
add
adc
add
sub
enter
adc
aam
add
pop
mov
fwait
mov
adc
stos
data16
add
add
stos
popa
test
and
cmp
je
add
pop
adc
add
add
dec
mov
es
pop
jle
mov
popa
adc
mov
add
das
adc
inc
add
pop
sub
aas
jmp
fisttpll
icebp
push
sbbb
ja
add
add
fnstsw
stc
mov
lea
add
or
dec
add
jp
push
mov
stos
outsb
add
fcmovbe
mov
xchg
xor
jae
xor
jns
icebp
lret
inc
mov
gs
xchg
loop
add
add
add
inc
pop
push
clc
inc
add
add
xor
push
add
add
add
imul
cmpsl
add
jno
add
xlat
loopne
sbb
pop
add
in
inc
fst
push
sbb
inc
ret
popa
mov
lock
add
mov
push
outsb
add
sub
add
add
inc
add
dec
add
shrb
dec
aad
pop
call
clc
add
sub
pop
add
xchg
test
push
dec
add
dec
add
aam
cltd
ljmp
add
jmp
adc
mov
add
lret
jle
out
or
xlat
shl
sbb
lea
add
repz
lea
push
inc
into
enter
add
mov
add
add
cmpsl
fldt
in
add
sti
add
int3
cmp
xor
sub
mov
fiaddl
aam
pop
cmc
loop
add
test
stos
adc
addr16
in
add
and
add
add
and
dec
mov
popa
or
pop
add
inc
add
in
pop
add
int3
cs
push
in
xor
xchg
jns
mov
adc
add
dec
cltd
scas
clc
lahf
pop
mov
add
xorb
dec
add
dec
lods
ds
popf
sbb
dec
add
pop
add
mov
movsb
pop
ljmp
inc
test
jp
xor
filds
add
xorl
pop
outsl
and
sub
cmp
adc
popf
sub
add
add
mov
add
lahf
fstpl
add
aad
jl
lahf
push
cmp
or
stc
or
lods
mov
add
add
les
mov
add
aas
shll
add
pop
in
addr16
inc
add
mov
movsb
xchg
adc
dec
add
out
into
fsubp
sbb
mov
add
lock
push
add
in
add
jle
add
out
adcl
ror
je
inc
add
jmp
dec
out
add
jg
repz
fwait
mov
add
out
mov
cld
push
add
xor
hlt
sbb
add
add
add
mov
fcmove
lret
imul
call
xor
and
add
add
push
add
add
aaa
mov
insl
sbb
addb
lock
add
nop
xchg
push
jae
add
cmp
pop
add
jmp
inc
add
enter
add
sbb
mov
and
fwait
lea
mov
imul
add
aaa
push
add
or
adc
and
jg
mov
cmp
jns
sub
out
loopne
stos
fimuls
loope
dec
push
mov
cmp
add
lahf
filds
arpl
outsb
add
xchg
in
mov
in
inc
add
sub
adc
repz
iret
outsb
add
enter
add
push
add
outsb
add
scas
ret
add
nop
push
add
jns
sub
testl
pop
xor
cltd
sbb
add
add
test
add
ret
notl
jb
xchg
fs
mov
push
add
pop
out
push
add
out
repz
leave
idivl
adc
stc
repz
es
lock
loop
mov
cmpsb
cmp
clc
add
pop
push
fldl
out
push
add
mov
mov
mov
adc
lret
add
pop
cmp
jb
pop
adc
and
nop
repz
add
jns
mov
pop
inc
add
adc
and
decl
outsb
add
mov
scas
adc
nop
imul
xchg
imul
push
decb
pusha
add
mov
inc
pop
iret
xchg
push
add
add
les
push
add
sarb
add
xchg
push
add
outsb
add
sbb
pop
inc
aad
sti
add
aas
adc
movsl
cld
out
out
ljmp
pop
mov
add
add
add
imulb
mov
push
add
aam
add
or
push
add
add
cmp
ret
mov
xchg
cmp
xor
push
add
dec
add
mov
cld
mov
fstpt
mov
pushf
lret
loopne
mov
in
fiaddl
add
scas
nop
imul
xor
mov
pushl
sbbb
push
add
stc
rclb
cmp
pop
add
fsubp
mov
or
pop
add
xlat
mov
xor
shlb
hlt
push
add
add
bound
mov
add
imul
push
add
inc
add
pop
cmp
add
add
push
add
addb
dec
add
add
scas
add
xchg
outsb
add
ja
add
int
incl
xchg
pop
cmp
popf
or
and
movsl
pushf
out
test
pop
add
jo
xchg
enter
add
mov
fwait
jmp
lahf
jb
test
std
xchg
ss
clc
mov
mov
cltd
inc
push
ret
in
pop
add
ljmp
daa
ficoms
add
lret
pusha
add
add
xchg
pop
stos
and
add
sarb
xor
sbb
pop
add
mov
mov
adc
add
lcall
outsl
xor
pop
mov
add
cmp
add
add
lods
adc
loopne
sbb
sahf
or
cmc
cli
cmpl
xchg
add
outsb
add
ljmp
xor
adc
add
add
push
add
add
push
add
add
das
gs
add
or
dec
iret
push
orl
mov
pop
test
scas
and
xor
cmp
mov
cmp
sbb
fimuls
pop
nop
jg
sbb
shll
add
and
pop
add
in
in
int3
jl
aas
in
push
add
outsb
add
fidivrs
add
sbb
and
dec
mov
aas
mul
mov
fnstenv
xchg
add
mov
dec
add
adc
add
pop
add
sub
add
sbb
lods
popf
in
repz
jns
push
add
mov
mov
dec
mov
add
cmp
fcmovu
enter
out
xor
xchg
and
add
pop
add
enter
add
add
sbb
in
add
stos
xchg
sbb
push
add
test
fisubl
adc
mov
sbb
fldt
pop
add
cli
std
or
ljmp
loop
mov
add
jae
add
adc
lods
les
sub
xchg
add
out
nop
sahf
in
lods
push
add
lret
popa
ret
stc
mov
add
add
add
jmp
jns
adc
clc
data16
mov
jp
add
adc
sbb
dec
push
add
cmc
lcall
add
addr16
ficompl
stc
rclb
sbb
jae
scas
push
add
xchg
add
scas
fisubs
add
add
add
bound
mov
jmp
add
push
and
out
jg
xchg
call
add
add
jbe
adc
imul
add
addr16
add
add
add
xchg
cli
adc
inc
pop
and
add
jnp
push
ret
adc
jg
jnp
mov
dec
add
add
pop
cmp
adcb
pop
call
ffree
pop
adc
adc
push
add
je
hlt
mov
cmp
inc
or
jmp
add
adc
sbb
mov
pop
add
mov
add
mov
pop
add
cmp
mov
add
test
add
sub
xorb
test
out
mov
ljmp
in
mov
or
add
add
jne
cmp
inc
add
dec
aas
clc
dec
jae
orl
jns
shrl
and
sub
mov
je
xor
sub
push
mov
dec
add
ds
add
pushf
add
xor
add
sar
jmp
pop
fldenv
add
and
cmp
dec
xchg
mov
rcrl
add
add
mov
scas
mov
frstor
daa
add
inc
push
add
rep
inc
add
in
add
sub
gs
je
dec
add
xor
insb
add
jecxz
stos
pop
add
add
xchg
inc
add
add
stc
pop
test
add
mov
add
mov
lods
test
push
adc
mov
repnz
ljmp
pop
pushf
pushf
leave
movsb
testl
push
add
dec
add
adc
out
cwtl
inc
add
fwait
add
cmpsb
loop
push
add
shll
cld
mov
pxor
add
inc
pop
jb
movq
lahf
std
mov
add
in
ja
add
add
sbb
ret
iret
adc
jns
add
xchg
add
add
je
lods
mov
inc
add
fwait
into
cwtl
cmc
into
sbb
add
add
cmc
ss
jno
add
add
sub
scas
fidivl
jns
sbb
loop
add
add
fistpl
pop
add
push
dec
add
sbb
mov
add
mov
mov
add
pop
add
aad
incl
iret
rcll
ja
sbb
pusha
add
mov
add
repz
std
inc
pusha
add
rclb
jae
mov
aas
fistps
or
cmp
add
xor
sbb
add
loop
pop
iret
mov
mov
hlt
scas
inc
add
adc
fisubrs
mov
icebp
sti
mov
rolb
add
pop
add
xor
mov
mov
fldpi
sbbl
add
fimuls
pop
lret
jbe
inc
mov
xchg
dec
add
add
sbb
cwtl
insl
xlat
jle
into
add
add
adc
xchg
icebp
test
mov
adc
cmp
add
add
in
rcr
adc
das
shl
add
mov
pop
add
add
popa
js
rcrl
mov
or
scas
jno
add
adc
dec
sub
stos
cwtl
pop
add
jns
add
or
or
sub
jo
outsl
iret
hlt
js
aaa
cmp
bound
add
les
rcrb
inc
add
add
pop
cld
fwait
cld
sub
bnd
xchg
aaa
or
test
data16
mov
pushf
xor
mov
shlb
add
adcb
iret
mov
repnz
leave
add
add
imul
add
or
inc
in
andl
sbb
sub
cmp
notl
cmp
push
add
jmp
pop
jb
and
in
xchg
cli
es
inc
rcr
cli
or
and
add
add
stc
shlb
in
repz
add
insb
add
and
bound
push
add
or
insl
push
add
pushf
push
add
into
pop
mov
lcall
negl
shl
pop
add
cmpsl
dec
add
or
jmp
shlb
lret
sub
adc
inc
add
add
out
add
data16
roll
add
stos
inc
add
stos
iret
push
add
push
shll
or
add
add
jl
ja
outsl
insl
cmc
pop
fdivs
push
add
lcall
mov
cwtl
or
in
add
call
add
push
add
add
insl
inc
add
lret
dec
adc
add
stos
adc
add
push
div
jp
mov
cwtl
pop
add
lods
outsl
xor
add
pop
add
add
add
mov
outsb
add
in
aaa
and
jg
or
leave
in
outsb
add
mov
loopne
add
add
and
clc
test
add
sub
xchg
bound
inc
sub
inc
add
popa
nop
and
cmp
inc
mov
arpl
add
lret
push
add
mov
cmp
add
jecxz
add
js
test
jecxz
add
sub
leave
icebp
lcall
mov
mov
add
arpl
mov
add
int
mov
mov
iret
out
pop
fdivl
sub
mov
icebp
fcoms
aam
mov
jge
dec
add
js
or
cmp
mov
in
pop
add
lods
mov
cmp
scas
cmp
lds
fdivs
cli
inc
jl
and
adc
sbb
add
sub
dec
xor
aas
loop
mov
cmp
add
adc
add
fwait
ret
add
add
test
add
push
outsl
arpl
repz
push
sbb
add
sbb
outsb
add
add
xchg
and
std
add
push
inc
add
or
cltd
sub
mov
add
push
popa
ret
out
xlat
xor
or
ret
pop
add
les
movsl
xchg
shrb
add
lds
loope
arpl
add
and
pop
jmp
es
pop
inc
add
add
and
add
adc
movsl
jne
enter
sub
mov
pop
sbb
adc
fisubl
in
add
adc
add
sub
mov
add
mov
or
inc
lea
xchg
mov
popf
adc
cmp
add
adcb
jno
sub
insl
xchg
mov
sarb
dec
add
mov
sub
repnz
and
add
xchg
add
pusha
add
out
fwait
mov
sbbl
lock
dec
mov
add
call
les
add
add
mov
inc
dec
add
xchg
pushf
add
nop
push
add
jo
loope
movsb
pop
inc
add
jne
repnz
xor
sub
xchg
pop
sub
cs
jmp
jno
negb
and
jp
cmp
mov
ds
data16
add
mov
rcll
push
add
loope
mov
inc
add
cmp
mov
faddl
sbb
and
cmp
and
aaa
jle
addl
xchg
xchg
inc
mov
jg
out
sbb
cs
xor
sub
fisubs
rcrb
enter
cltd
and
inc
jmp
rcrl
test
inc
add
jg
push
add
inc
add
fldt
hlt
pop
mov
mov
add
jo
pop
add
js
or
out
push
push
add
lock
mov
rcrl
pop
int3
push
ja
push
add
mov
stc
cmp
add
bound
add
add
fwait
arpl
ret
repnz
ret
pop
add
cmp
dec
and
mov
jnp
adc
scas
cmp
cmpsl
cmp
insl
pop
add
add
push
add
add
xchg
leave
inc
push
add
std
mov
add
aas
jle
fistpl
repz
imul
pusha
add
add
das
sub
add
add
add
jbe
sub
lods
jmp
dec
out
adc
add
pop
add
popf
cld
xor
add
int
lcall
loope
add
lds
aad
add
cld
jae
shrl
outsb
add
jno
cli
mov
cwtl
ja
push
add
sahf
cmc
and
repnz
js
adc
insb
add
add
and
sbb
or
mov
add
add
and
mov
mov
push
add
cli
bound
cmc
dec
add
lds
jnp
cltd
and
add
push
add
jne
push
add
jmp
add
cmp
xchg
outsl
sbb
nop
push
add
add
pop
lods
inc
add
push
ret
xchg
mov
jl
cs
shl
jo
fld
jmp
xchg
push
jae
loopne
add
loopne
mov
and
rcll
fsubrs
lret
cmc
push
add
cld
shrb
and
int3
sbb
mov
fstl
sub
push
add
xchg
mov
jae
mov
pop
add
add
adc
pop
leave
pop
add
repnz
add
insl
test
xor
push
add
mov
cld
push
add
rolb
aam
add
sub
push
add
into
shrl
xor
jecxz
aas
cltd
out
add
jo
popa
add
mov
aad
add
jmp
out
frstor
add
dec
in
jae
aad
inc
mov
xacquire
push
add
or
adc
xchg
cwtl
das
jb
sub
push
sahf
js
push
add
adc
std
inc
jecxz
inc
mov
jmp
mov
add
add
mov
fstl
sar
test
push
add
rolb
push
add
cmpsl
in
add
xor
adc
mov
add
aas
push
add
add
sbb
sub
pop
add
cmp
cli
loopne
mov
pop
aaa
out
scas
xchg
in
fnstenv
add
or
lods
add
fistl
mov
pop
sub
jge
fidivs
std
mov
cmp
sbb
xorb
add
sahf
cmp
loopne
mov
pop
add
add
add
add
lods
arpl
or
je
jb
and
orb
aaa
sbb
cmpsl
mov
scas
imull
jle
adc
cmc
shrb
fidivrs
sub
add
iret
divb
add
leave
mov
jmp
hlt
sahf
dec
add
scas
inc
add
add
add
add
sbb
add
add
add
lods
cmp
das
add
gs
add
push
add
cmp
add
loopne
add
adc
add
clc
mov
pop
out
test
sbb
shrl
xor
push
add
add
aas
test
jnp
add
xor
sahf
bound
loopne
aas
idivl
or
pushf
test
add
xchg
ja
pop
add
popa
scas
mov
push
add
dec
add
mov
add
add
call
cli
test
add
push
add
cltd
scas
insl
adc
sub
jge
add
jbe
filds
add
push
add
fadd
cs
ret
jle
push
fsubrs
jo
xor
add
ret
add
outsl
mov
add
add
hlt
cltd
add
mulb
mov
add
mov
add
or
adc
arpl
pop
dec
les
pop
add
stos
inc
mov
testl
jecxz
lods
inc
add
add
ret
add
cmpsb
sub
xchg
mov
sbb
inc
and
xor
sub
mov
imul
arpl
add
aaa
cmp
cmp
xor
jae
addb
and
andl
push
lods
leave
mov
lahf
mov
cwtl
xor
push
add
packsswb
add
fsub
outsb
add
add
xchg
add
icebp
sub
subb
shl
sbb
bound
fcoms
add
arpl
pop
pop
add
inc
add
jns
int3
stos
std
lahf
xor
cmc
aaa
shll
orb
iret
mov
int3
outsb
add
cmp
lds
add
js
mov
inc
add
push
add
inc
lret
rcl
push
add
mov
lret
cs
outsb
add
or
out
adc
xchg
call
jno
and
scas
inc
sbb
mov
push
ret
lret
repnz
je
loope
js
pop
and
inc
add
add
dec
add
push
add
or
cltd
cmpb
or
sub
jno
add
div
in
push
add
adc
adc
push
add
add
add
jp
push
add
shll
push
xchg
jp
jno
out
sub
pop
pop
add
in
data16
mov
jo
mov
xorb
add
jp
in
add
adc
xor
and
add
dec
nop
and
cmp
and
add
add
fldt
add
mov
mov
adc
mov
cmpsl
pop
push
ret
pop
add
mov
add
mov
in
xchg
gs
mov
cmp
add
xchg
mov
mov
add
shll
jb
dec
pusha
add
popf
aaa
fadd
stos
xlat
aad
add
cli
fisttpll
add
push
adc
sub
pop
loopne
push
add
add
repz
lret
fidivl
bound
insb
add
add
add
mov
lock
and
cwtl
mov
add
xchg
hlt
jne
dec
add
add
xchg
xor
mov
sbb
pop
orl
inc
scas
xchg
sbb
push
je
cmp
push
insl
or
pop
cmp
add
add
lcall
push
add
add
add
in
in
push
add
mov
insb
add
xchg
pop
add
xor
or
jg
add
mov
in
add
add
dec
adc
pop
push
add
data16
cmp
adc
sub
fdivrs
nop
shrb
mov
add
add
aas
clc
cmp
xor
cwtl
outsl
test
add
pop
ja
xchg
pop
add
pushf
xchg
jmp
nop
das
xor
add
add
leave
frstor
out
add
pop
xchg
sbb
mov
repz
add
add
fdivrl
add
add
adc
stos
sub
mov
sub
leave
out
dec
add
jmp
jns
add
dec
add
add
movsb
sbb
rcrb
ret
sbb
sahf
xor
add
xor
test
fcoms
sahf
aam
sti
js
pushf
ljmp
das
mov
orl
mov
lcall
push
add
test
add
and
fwait
rcll
add
dec
add
lods
daa
push
mov
or
test
js
push
popa
xchg
sub
add
movsb
cmp
in
cmp
imul
in
ljmp
in
test
mov
adc
dec
dec
add
iret
mov
add
add
xor
cmp
mov
dec
fmul
push
add
add
add
xor
data16
stos
sub
inc
add
sub
cmc
mov
dec
ja
fwait
mull
mov
inc
mov
xchg
dec
movsl
mov
insb
add
xor
out
aam
xorb
push
add
push
add
add
cmp
rorl
nop
in
jmp
add
cmp
fmul
inc
add
sub
lock
add
push
gs
idivb
inc
add
add
dec
add
insl
ret
push
add
add
jp
subb
xlat
jno
jo
dec
add
jecxz
add
cmp
in
push
add
int3
pop
add
xor
lahf
push
jg
add
xchg
push
add
pop
cmpsb
rcll
shlb
frstor
add
sbb
loop
pop
add
subb
ds
leave
mov
loop
add
pushf
add
add
xchg
scas
or
and
inc
add
shlb
add
push
bound
in
add
add
dec
sbb
or
xor
sub
xor
mov
add
mov
mov
shrb
xor
add
jl
movsl
lret
lahf
aad
add
outsb
add
cli
orb
out
rorl
jne
add
cwtl
add
sbb
add
mov
add
jnp
push
add
add
es
sbb
andb
dec
or
jl
out
in
stos
pop
add
sbb
sbb
add
jns
sub
pop
pop
cld
daa
das
add
adc
into
xchg
mov
add
nop
jne
add
pop
icebp
je
add
out
add
add
addr16
push
add
dec
fiadds
aad
mov
sbbb
dec
sub
jns
add
inc
es
in
dec
or
aas
dec
add
sbb
clc
fwait
out
dec
add
xor
fsts
cmpsb
call
gs
add
mov
loope
aaa
inc
add
or
fwait
arpl
xor
push
idivb
es
add
dec
dec
jns
cmc
jmp
lahf
or
mov
pop
jecxz
mov
test
sbb
lods
test
add
cwtl
push
add
cmpsl
repnz
jl
mov
adc
lods
push
add
mov
stos
ds
pop
add
dec
cs
lock
data16
or
arpl
inc
dec
sub
xchg
xabort
xor
lods
fisttpl
add
ret
js
xor
fwait
add
dec
jns
call
dec
aad
inc
add
cmpsb
test
repnz
add
or
mov
add
int
add
das
loopne
ret
sub
mov
mov
mov
out
jnp
into
or
and
sti
movsb
push
in
add
movsb
or
clc
dec
lcall
inc
add
dec
add
pop
add
icebp
jae
cli
lods
mov
lods
nop
fwait
mov
add
cmp
inc
push
add
and
sbb
jle
push
add
rclb
jl
movsb
push
mov
fwait
movsb
jmp
cmpsl
sub
mov
adc
fxch
sahf
popf
adc
xor
add
in
add
add
cli
les
out
idivl
arpl
aaa
mov
subl
es
fidivs
sub
mov
in
push
dec
add
sbbl
jl
shll
xor
out
cwtl
gs
cmp
push
andb
mov
addl
hlt
rcr
clc
mov
cld
sahf
mov
pushf
repz
lcall
pop
add
add
and
fidivl
add
jg
sub
push
or
add
add
add
sahf
bswap
mov
mov
dec
sub
rolb
loopne
call
xchg
mov
sub
sbb
xor
outsl
mov
add
cmp
mov
hlt
imul
add
je
arpl
add
add
xor
or
and
out
xor
movsb
stos
xor
cmp
cmp
push
add
lahf
sub
inc
add
push
imul
nop
rorb
fidivl
adc
add
xchg
fldl
inc
add
mov
add
add
sub
imul
in
jne
addl
shll
jmp
add
adc
jnp
and
ret
pop
add
pop
add
sahf
sub
add
call
mov
push
add
out
add
add
ficoms
fsubrs
sub
imul
xchg
mov
or
fisubs
mov
mov
add
clc
jae
rcrb
sahf
inc
add
test
add
push
add
add
push
jns
inc
or
arpl
add
xor
sub
lret
out
notb
test
add
dec
sbb
sub
cmp
cmpsl
xchg
add
sbb
lahf
inc
add
in
cmp
lcall
aam
iret
add
out
sahf
xchg
dec
out
mov
cmp
xchg
mov
add
push
add
loop
lods
cwtl
add
add
arpl
xchg
jecxz
add
push
xchg
add
bound
push
add
pop
add
add
nop
sbbb
pop
push
add
pop
add
add
js
cmp
add
out
xor
in
ret
mov
loope
add
iret
and
add
sahf
test
add
inc
mov
add
daa
inc
add
cli
stos
jne
xchg
lea
and
pusha
add
pop
push
stos
pop
add
int3
cmpsb
pop
add
loope
add
dec
add
pop
add
push
add
cmp
dec
in
iret
in
jbe
cmpsl
mov
mov
add
lods
sbbb
stc
repz
add
push
add
int3
cli
rcrb
push
add
jo
and
sbb
xor
je
xchg
add
js
xor
add
dec
test
mov
fwait
in
inc
inc
sbbb
movsl
lret
gs
add
pop
add
add
and
xchg
push
add
lea
lods
lcall
sahf
imul
lret
out
mov
push
add
add
pop
mov
inc
add
push
add
movsb
cmpsb
mov
test
xchg
ljmp
out
cld
jb
pop
mov
jge
add
push
in
mov
add
adc
jae
add
sub
popa
and
ja
add
or
outsl
iret
scas
and
xchg
xchg
mov
andl
out
xchg
lds
inc
popa
pusha
add
sub
pushf
add
inc
add
in
push
out
cltd
jg
add
loop
add
push
add
fs
out
mov
add
mov
movsl
and
movsb
cmpsl
aam
cmp
add
ret
mov
add
add
inc
add
push
add
add
mov
rorl
add
add
dec
sub
add
dec
jb
inc
add
ret
ja
add
add
xchg
icebp
cmp
cmc
and
inc
add
fucomip
js
push
add
fucom
roll
lahf
pop
inc
xchg
cmpsl
out
add
pop
or
add
in
pop
sub
in
push
add
add
and
sub
icebp
inc
add
add
pop
add
add
xor
leave
jo
repnz
xchg
cwtl
add
jg
mov
add
sbb
dec
dec
fiadds
sbb
loopne
add
sbb
add
add
notb
jno
add
pop
sbb
mov
and
jl
push
or
fsubrp
sbb
mov
andl
cwtl
dec
add
fnstcw
add
mov
cld
add
add
sub
pop
cmp
push
add
mov
push
add
jo
loopne
add
add
in
xlat
dec
add
jae
test
mov
ss
int3
inc
add
adcb
in
add
in
push
xor
adc
lds
std
push
add
xchg
xor
sbb
sub
dec
sti
and
cmpsb
lods
jnp
mov
inc
add
lock
add
mov
add
ljmp
in
lret
pop
jmp
dec
add
sti
sub
sub
loopne
sti
icebp
mov
mov
add
out
jl
xchg
out
or
mov
pop
inc
mov
add
imul
jg
dec
scas
enter
add
sbb
fiaddl
add
in
call
mov
inc
imul
push
add
dec
add
rcl
rorb
add
add
xor
mov
insb
add
sbb
add
mov
mov
subb
lea
test
gs
sarl
sbb
and
adc
push
aam
add
movsl
xor
jb
pusha
add
xor
lcall
xchg
das
mov
add
pop
loopne
add
loope
add
add
add
xchg
lds
hlt
orb
add
adc
mov
add
adc
sub
test
rcr
into
daa
int3
into
and
push
add
mov
imul
loop
jl
add
xlat
jge
sub
in
pop
mov
inc
cmp
add
bound
dec
pop
jns
dec
add
das
cmpb
fisubs
sub
hlt
mov
mov
cmp
add
push
mov
stc
int3
adc
shll
sub
fwait
add
push
jg
xlat
scas
push
xchg
rcrl
add
add
repnz
fisubl
add
outsb
add
adc
ja
push
jns
lret
mov
jb
push
inc
pop
dec
add
add
popa
stc
cmc
mov
sub
sbb
fsubrs
pop
dec
add
add
fisttpl
sbbl
faddl
les
clc
negb
add
add
divb
add
cwtl
mov
add
pushf
daa
test
out
dec
dec
push
adc
adc
add
push
add
fdivrs
or
std
testb
add
in
adc
repz
push
push
add
in
mov
lds
cmp
cmp
sarb
movsl
das
stos
mov
data16
ret
int3
pop
add
add
or
add
mov
add
jge
push
add
pop
sbb
push
add
mov
add
add
add
mov
add
stos
lahf
call
sub
xor
add
add
pusha
add
pop
clc
dec
lret
cmp
sahf
rclb
add
aad
lds
cmp
fimull
ret
aad
into
mov
add
inc
and
and
aaa
shlb
ficoml
add
add
add
dec
sub
test
std
and
leave
loop
jmp
jno
pop
scas
cwtl
jo
add
mov
inc
add
add
repz
add
or
loop
add
insl
call
imul
sub
jmp
mov
add
add
sbb
ficompl
add
js
cmc
mov
add
repz
in
add
dec
add
mov
xor
and
data16
aas
or
fs
add
push
sbb
stos
or
popa
cmp
add
rcll
les
mov
icebp
mov
add
bound
leave
mov
dec
lahf
inc
sti
xchg
stc
loope
pusha
add
shrl
test
push
add
jo
in
and
push
add
xor
cmp
pop
add
mov
add
push
push
add
dec
add
add
xor
dec
add
in
pusha
add
sbb
push
pop
add
add
rclb
loopne
adc
push
add
xor
ret
iret
cmp
xchg
repz
or
insb
add
loopne
push
xor
ss
and
add
inc
add
adc
xchg
enter
add
dec
pushf
sti
mov
add
pop
add
push
add
subl
add
shll
push
rcll
sub
rcrb
enter
fucomip
mov
jp
xchg
cmp
mov
movsb
in
add
aam
and
lahf
lods
or
aam
add
cmp
leave
int3
leave
adc
xor
stos
sub
xchg
sbb
add
add
push
in
push
lret
xchg
daa
pop
add
fdivrl
add
aam
insl
sbb
in
push
add
dec
add
add
lcall
out
rol
outsb
add
add
cmpsl
xor
add
mov
in
add
jae
mov
data16
add
loopne
add
fsub
imul
add
repnz
add
add
lret
bound
add
add
sub
sbb
xor
outsl
and
out
inc
push
add
sbb
mov
add
push
push
add
push
add
add
jl
gs
faddl
in
add
rorl
rcll
add
inc
add
add
push
add
push
push
add
add
mov
fistps
pop
mov
xor
fldt
aad
add
testb
repnz
add
daa
xor
xchg
pop
add
rcrb
add
out
add
push
js
pop
add
into
ret
add
insl
pop
outsl
scas
jno
call
sub
rcll
or
add
lock
jge
add
add
add
jo
xchg
scas
mov
sbb
mov
jecxz
pop
out
pop
add
repz
add
bound
sub
add
inc
roll
dec
add
pop
or
add
jmp
pushl
add
nop
and
mov
fs
push
jo
cwtl
sahf
jmp
adc
add
sbb
sub
cmp
stc
mov
insb
add
insl
adc
fstpl
mov
add
cmpsb
push
add
add
mov
inc
add
add
mov
repnz
cmp
push
jns
add
mov
loop
int3
jnp
in
mov
and
xchg
add
stc
fisubrl
add
movsl
xlat
aad
lret
nop
inc
lods
shll
lret
add
subb
xor
leave
data16
xchg
sbb
scas
call
or
add
or
rcr
dec
push
or
ret
xchg
or
adc
sbb
jbe
sub
clc
cmpsb
ret
xchg
pop
aaa
mov
add
lret
xor
ficompl
cld
sarl
add
add
outsb
add
jae
mov
xchg
stos
xor
out
arpl
aaa
outsb
add
pop
add
add
lock
add
test
aad
fcoml
xchg
xor
add
xor
push
add
fisubrs
add
jl
or
add
mov
add
mov
push
decb
pusha
add
movsb
xor
or
rorl
std
fnstenv
xor
fnsave
jecxz
add
aaa
sar
mov
fsubrp
mov
push
add
inc
test
lret
fmul
mov
scas
mov
out
mov
push
add
push
das
xchg
aas
mov
xchg
test
mov
mov
xchg
add
das
aam
add
out
pop
sbb
push
xlat
jne
pushf
pop
std
cmp
decb
insb
add
add
sbb
or
mov
inc
push
dec
add
add
add
add
mov
add
xchg
add
daa
jae
fists
add
add
rorb
add
test
add
mov
cmpsb
stc
push
adc
in
stos
inc
add
idivl
push
add
add
cmc
adc
adc
out
push
add
inc
add
add
ror
inc
dec
cmp
aaa
gs
add
add
call
add
add
out
mov
data16
das
add
add
push
add
fldl
add
xchg
pop
pop
mov
enter
test
aaa
arpl
add
lock
cld
mov
or
push
add
cmpb
out
lret
or
call
mov
ja
sub
cmc
fmulp
jge
lahf
push
add
jnp
orb
int
addr16
add
add
add
pop
add
cmp
out
add
add
or
or
add
lcall
mov
jle
jg
add
scas
mov
dec
xchg
sub
aas
pop
ja
xor
dec
aam
add
and
sbb
xor
cli
mov
add
dec
add
push
mov
out
test
mov
das
arpl
and
add
ss
data16
sub
cmpsb
jmp
cmpsb
fisubrs
mov
fdivrl
add
sbb
sti
add
xchg
cli
sbb
jns
jns
cmp
add
scas
lret
add
push
add
xor
add
int3
xlat
sub
add
cmp
push
add
icebp
push
add
sbb
sarl
mov
mov
cmp
cwtl
cmp
add
xchg
push
add
jno
into
mov
test
pop
adc
cmc
cmp
add
cld
fwait
enter
pop
sub
add
add
add
pop
add
push
pop
rcrb
add
int
scas
lret
dec
add
cmc
mov
loopne
movsl
sbb
sti
jnp
add
cltd
inc
add
mov
mov
lods
pushf
mov
xlat
inc
xor
bound
xor
cltd
xor
mov
sub
add
add
add
and
int3
out
and
push
add
cmp
add
and
push
add
jg
sti
sub
jmp
sqrtps
inc
add
sbb
mov
icebp
pushf
jl
sub
imul
xchg
mov
dec
mov
adc
adc
popf
adc
jmp
add
pop
add
lret
sub
xor
sbb
sub
and
das
mov
add
xchg
jo
gs
insb
add
mov
jl
add
push
push
ljmp
lock
add
add
add
add
add
mov
divl
add
pop
add
add
or
fnstsw
out
jmp
pusha
add
add
icebp
inc
lock
and
out
jmp
pop
add
add
push
sti
les
in
pop
add
add
jb
fisubs
mov
stc
jnp
add
gs
pop
fstpt
add
scas
xchg
push
add
outsb
add
loopne
add
cmp
add
mov
add
cmp
mov
ja
jno
mov
gs
add
fs
xor
add
repz
mov
rolb
adc
push
add
mov
add
icebp
jae
pop
les
popf
xchg
push
mov
das
mov
adc
cmc
adc
add
ds
jp
mov
icebp
inc
and
lea
roll
imul
insb
add
adc
add
push
dec
add
nop
ja
clc
add
outsl
mov
sbb
scas
leave
out
mov
add
ja
out
add
add
lock
jge
pushf
stos
call
inc
add
or
lods
add
push
add
push
add
push
xchg
mov
imul
cli
or
out
movsb
std
add
cmp
inc
inc
add
fisttpll
cwtl
ror
data16
aam
mov
je
pushf
inc
jmp
addl
mov
leave
pop
mov
mov
add
adc
data16
out
fisubl
add
inc
add
xchg
sub
dec
scas
arpl
cld
decb
add
add
xor
xchg
add
cwtl
leave
cmp
mov
mov
add
insl
pop
pop
add
pextrw
cmp
push
add
add
cmpsl
xor
adc
xor
imul
cwtl
inc
mov
add
xchg
out
nop
ret
fldt
int
add
mov
push
add
push
in
add
pop
adc
and
mov
nop
sbb
adcl
add
jno
add
sbb
push
add
and
pusha
add
dec
pop
inc
adc
inc
add
js
sahf
mov
pop
cwtl
jo
add
push
add
add
pop
dec
jae
xor
mov
rorb
mov
aam
add
sbb
sub
sti
scas
into
and
add
scas
xchg
mov
mov
xchg
les
add
xchg
lock
cmpsb
out
inc
add
mov
pop
add
sub
test
mov
mov
add
jecxz
sub
js
xchg
dec
add
sahf
push
sub
or
lea
add
add
mov
mov
imul
add
scas
cwtl
je
jnp
addr16
mov
sahf
stos
sub
inc
add
add
cmpsb
add
add
add
int3
push
add
ds
cmp
cmp
loopne
add
orb
add
pushf
dec
add
aas
xchg
negb
add
call
add
pop
into
inc
add
add
xor
mov
push
add
jno
cltd
lret
add
add
add
sti
push
add
scas
mov
dec
ljmp
inc
dec
add
inc
add
test
push
adc
leave
out
push
and
inc
add
add
js
ja
fwait
ss
cmpsb
inc
pop
xor
jle
and
jbe
shll
mov
add
inc
in
push
add
ret
incb
add
add
add
cmp
daa
cmp
xchg
repnz
dec
add
mov
rolb
scas
aad
shlb
les
add
add
loop
repnz
dec
stos
dec
push
add
addr16
mov
add
or
add
add
mov
and
adc
inc
add
std
add
int
inc
add
es
mov
jmp
or
xor
adc
xchg
push
add
inc
repz
jae
mov
aaa
movsb
mov
out
aad
add
add
xor
enter
in
aaa
jb
fwait
or
add
add
add
scas
dec
pop
add
or
std
and
add
add
