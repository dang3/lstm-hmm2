add
add
add
mov
sub
sub
div
div
sbb
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cli
cli
cli
cli
cli
cli
cli
cli
cli
cmc
cmc
cmc
insl
insl
insl
insl
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
stos
stos
fists
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
cli
cli
cli
cli
or
or
or
or
or
or
or
or
or
scas
scas
scas
scas
scas
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
add
add
add
add
loope
loope
loope
loope
loope
loope
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
stc
stc
addl
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
sub
sub
sub
sub
sub
sub
mov
mov
mov
mov
mov
mov
div
mull
and
and
and
and
and
nop
nop
nop
push
push
push
push
nop
nop
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
xchg
mov
addr16
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
jl
jl
jl
jl
jl
jl
jl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
dec
dec
dec
outsb
outsb
outsb
outsb
outsb
outsb
outsb
movsb
movsb
fcmovu
fcmovu
fcmovu
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sti
sti
sti
sti
sti
sti
sti
sti
in
in
nop
nop
nop
or
or
pushl
mov
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
sbb
sbb
sbb
sbb
sbb
rol
rol
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
repnz
repnz
repnz
repnz
repnz
icebp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
popf
popf
popf
popf
popf
arpl
arpl
nop
je
je
je
je
je
je
je
je
push
push
push
push
push
push
push
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
sub
sub
test
jae
jae
jae
jae
jae
jae
jae
jae
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
nop
nop
nop
nop
nop
cmp
cmp
cmp
repz
repz
repz
cmp
cmp
cmp
cmp
test
test
test
test
test
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
jecxz
jp
jp
lds
sbb
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
aam
aam
aam
aam
aam
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jnp
jnp
jnp
jnp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
sbb
cli
cli
cli
cli
cli
cli
cli
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
loope
loope
loope
loope
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
jl
jl
jl
jl
jl
jl
jl
jl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
ret
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jge
jge
jge
jge
jge
jge
jge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
mov
nop
nop
cs
mov
mov
js
js
js
js
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
imul
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
scas
scas
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcl
rcl
shl
out
out
out
out
out
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
and
and
and
ss
ss
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cwtl
cwtl
cwtl
cwtl
cwtl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fildl
nop
nop
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
add
and
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
gs
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
mov
mov
inc
inc
inc
inc
inc
inc
inc
or
jnp
jnp
jnp
jnp
jnp
jnp
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
mov
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addl
addl
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovbe
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
movsl
movsl
movsl
movsl
movsl
movsl
ds
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
xor
xor
xor
xor
xor
test
test
cmp
cmp
cmp
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
outsl
outsl
outsl
outsl
outsl
outsl
outsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cs
cs
nop
nop
nop
nop
nop
nop
nop
nop
repz
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
and
and
and
and
and
and
and
and
and
enter
enter
enter
enter
enter
dec
enter
enter
enter
enter
enter
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repnz
jo
jo
jo
jo
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
adc
adc
imul
nop
nop
nop
in
in
in
in
in
in
in
in
in
adc
adc
adc
adc
adc
adc
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
loop
loop
loop
loop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
call
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
sub
les
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
insb
insb
insb
insb
insb
insb
insb
insb
insb
rclb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sarl
ds
ds
movsb
movsb
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
sahf
sahf
sahf
scas
add
add
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
rol
rol
rol
roll
inc
inc
inc
inc
inc
inc
inc
inc
inc
jno
decl
dec
dec
dec
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
std
std
std
std
data16
data16
call
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
cmpsb
and
and
and
and
and
and
and
and
pop
pop
pop
pop
pop
pop
pop
data16
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fnstcw
mov
in
in
in
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
repnz
repnz
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lcall
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
sub
sub
sub
sub
sub
sub
sub
sub
sub
adc
adc
adc
adc
nop
nop
nop
nop
addr16
pop
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
and
and
and
and
and
and
and
in
in
in
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
jp
jp
jp
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cli
cli
cli
cli
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
imul
imul
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
addl
addl
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
in
in
in
call
call
call
call
call
call
call
ret
ret
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
lret
lret
ljmp
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
add
add
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
imul
imul
nop
nop
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
repz
xchg
xchg
add
add
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
xor
xor
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
mov
nop
nop
nop
nop
nop
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
or
or
or
or
or
or
or
or
or
or
or
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovnu
fcmovnu
fcmovnu
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ds
ds
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
in
inc
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
je
je
je
je
je
je
je
je
je
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shl
repz
repz
cs
nop
nop
nop
test
test
test
test
test
test
test
test
test
test
test
test
test
addl
addl
addl
addl
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
nop
nop
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
aam
aam
aam
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
in
aaa
aaa
aaa
aaa
aaa
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
lret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
ret
ret
ret
mov
add
add
add
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
aas
aas
aas
aas
aas
aas
aas
aas
aas
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
nop
nop
nop
nop
nop
nop
nop
nop
jne
jne
jne
jne
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
test
test
test
test
test
test
addr16
add
inc
inc
inc
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
mov
or
or
or
or
or
or
or
or
popa
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
stos
stos
stos
stos
stos
stos
stos
stos
add
push
push
or
or
push
push
push
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
test
test
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
and
pop
add
rcll
enter
add
jno
inc
add
xchg
push
add
jb
ljmp
add
outsl
sub
sub
cmp
jmp
add
adc
add
xchg
add
add
add
repz
adc
push
adc
adc
add
bound
into
jb
inc
inc
add
add
add
aam
popf
inc
add
add
lock
sub
add
movl
xchg
inc
add
mov
jns
add
call
lock
frstor
add
inc
add
cmp
add
add
loopne
xchg
js
xor
pushf
popf
push
add
push
add
dec
fcompl
and
aam
rorb
and
cmp
push
add
add
orl
add
fdivl
jecxz
cmp
push
mov
mov
movsl
cmp
mov
out
push
mov
dec
add
push
add
sub
add
sbb
inc
add
jmp
add
adcb
repnz
outsb
add
scas
xchg
insb
add
push
add
sbb
xchg
dec
add
and
popf
inc
add
setbe
xorb
pop
sahf
inc
cltd
xlat
push
cmpsb
cmp
add
popf
mov
add
pop
add
mov
or
lret
add
int
add
add
rolb
xchg
in
out
fisubs
add
cwtl
mov
jmp
push
add
add
outsl
dec
add
add
pop
add
insl
fucomi
inc
push
pop
dec
add
outsl
in
adc
aad
outsl
leave
in
or
adc
add
ret
aaa
add
add
add
and
jnp
adc
add
push
add
jns
xchg
jbe
in
insl
cli
fbstp
xchg
xchg
push
add
add
jbe
jmp
sub
add
jo
and
inc
sbb
cltd
dec
or
data16
mov
lret
mov
or
push
add
pop
lods
loop
in
inc
add
ret
daa
fwait
mov
fstpt
pop
add
add
mov
add
pop
cmpsb
jno
and
das
sbb
fidivl
add
add
sub
fbstp
add
in
add
xchg
mov
push
add
movsb
aad
jge
jbe
and
cli
jp
pop
mov
int3
xor
jmp
mov
lea
add
je
lods
jmp
add
movsb
mov
add
dec
add
inc
adc
mov
add
add
mov
cmpsb
pop
adc
leave
mov
jg
add
xchg
push
add
cld
js
xchg
loope
push
add
fwait
jmp
lahf
dec
popf
ljmp
cld
icebp
jns
jmp
jo
jo
cmp
adc
rorl
aad
add
add
add
sub
add
testb
cwtl
in
sub
mov
push
add
xor
in
popa
jg
or
push
add
int3
rcrl
add
fisttpll
add
sbb
or
add
pushf
jmp
add
lret
sub
mov
daa
cmc
lret
add
add
popf
call
mov
jmp
sti
das
popf
out
mov
cmc
nop
out
jmp
add
in
subl
dec
jne
xlat
jg
arpl
xlat
cld
lret
fwait
out
lahf
gs
or
sbb
test
push
add
xorl
add
jge
add
add
dec
add
pop
push
add
test
imul
add
lret
enter
mov
mov
iret
mov
inc
add
pop
xchg
mov
or
ret
test
add
cld
cvtps2pi
lods
movsb
shrl
add
stc
fwait
adc
dec
inc
mov
add
add
faddl
add
mov
out
push
add
fdivs
cltd
movsb
add
push
add
data16
test
mov
test
xchg
mov
push
pop
and
add
add
push
add
cmp
jnp
mov
je
iret
pop
inc
lods
mov
stos
js
adc
mov
repnz
pop
pop
mov
xchg
and
add
stc
pop
add
inc
dec
ret
loopne
pop
add
ret
push
add
sbb
sbb
inc
add
movsl
jg
fiadds
add
int3
adc
push
cmp
sub
cmp
sub
add
xlat
mov
int
add
and
sub
cwtl
pop
pop
js
and
leave
push
add
sbb
stos
mov
add
add
xlat
xchg
fidivl
adc
pop
cwtl
mov
add
sbb
mov
lcall
out
xor
aaa
and
ror
jg
xchg
pop
add
lods
fisubs
add
movsl
and
inc
and
ret
push
add
mov
jp
inc
add
add
add
data16
dec
jge
add
pop
add
hlt
mov
add
add
fbstp
xchg
imul
adc
dec
call
stos
imul
dec
add
sub
add
cmpb
add
or
xchg
xor
imull
xor
mov
inc
xorl
lret
js
fcompl
inc
add
mov
add
sub
mov
add
fnsave
pop
add
shlb
and
popf
test
or
add
sti
mov
add
pop
dec
dec
add
xchg
jb
fadd
jo
clc
lret
xchg
shlb
outsl
push
add
add
inc
add
add
add
scas
push
add
add
iret
scas
jmp
insl
dec
add
add
or
add
jns
push
add
outsb
add
shlb
inc
add
jle
push
add
xor
or
hlt
ja
scas
mov
data16
add
clc
inc
add
xchg
and
fwait
xchg
cmp
lock
sbb
ficomps
xchg
pop
lds
dec
mov
iret
dec
xor
add
inc
adc
add
and
and
mov
xchg
xchg
xchg
loop
add
inc
add
test
mov
fadds
xchg
mov
or
call
sub
inc
add
pusha
add
call
sbbb
sbb
add
shr
popa
xchg
into
mov
movsb
pop
sub
loop
aas
out
jno
xchg
pop
cmovle
push
lock
bound
cmp
add
notb
add
dec
xchg
cmp
dec
shlb
add
mov
sbb
jp
sub
add
and
nop
ret
sti
cli
or
sub
add
adc
or
imulb
inc
ret
jb
popa
mov
add
push
add
fcomi
hlt
mov
lock
jnp
add
hlt
mov
mov
enter
pop
add
loopne
fldenv
add
das
cmp
fcomi
int3
and
rclb
add
add
int3
js
jl
mov
fcompl
add
mov
xor
sbb
push
loop
addb
cwtl
test
dec
add
mulb
push
loop
add
in
add
aaa
push
cltd
or
mov
add
lods
scas
push
int
add
cmp
aaa
out
in
outsb
add
cmp
das
mov
push
fdiv
sub
push
add
mov
stc
xchg
dec
add
dec
add
inc
and
lods
dec
mov
jbe
sbbb
ret
packssdw
ljmp
xor
push
add
adc
sahf
out
mov
add
repnz
imul
out
add
pop
jmp
xchg
and
pop
add
xchg
int3
dec
bound
mov
mov
add
add
mov
mov
xorl
sub
xlat
sbb
push
add
mov
sbb
xchg
rorb
sub
dec
add
inc
add
popf
scas
dec
add
add
sti
scas
mov
add
add
sbb
add
jl
dec
add
jo
sbb
pusha
add
dec
add
mov
xor
aas
lds
xchg
xchg
add
or
je
pop
push
jmp
jecxz
lods
fdivrl
push
xlat
inc
mov
jg
xor
cld
pop
add
rclb
rorb
add
and
adc
in
imul
and
push
add
add
adc
call
inc
add
xchg
push
add
add
add
xchg
push
push
add
pop
mov
test
add
cmp
iret
imul
repnz
add
bound
and
pop
push
mov
xchg
inc
push
jg
testb
negl
fwait
xchg
loope
pop
add
lods
pop
mov
add
xor
pop
push
outsl
rcr
add
add
add
jne
gs
add
add
xor
lret
cmpb
add
ljmp
add
xchg
cmp
add
js
ret
add
cmp
lret
push
add
push
add
add
inc
add
add
pminsw
scas
repz
out
sub
push
flds
rcl
cmp
and
enter
pop
pop
or
xor
fldenv
add
push
xor
xchg
stc
cmpsb
mov
push
add
das
sub
add
add
adc
add
add
add
bound
sbb
inc
jae
inc
insb
add
adc
or
fucom
fbld
add
xchg
pusha
add
xor
mov
add
mov
mov
add
setge
fsubp
sbb
xchg
data16
cmpb
dec
add
xchg
idivb
add
push
add
xor
out
repnz
movsl
fwait
bound
xor
adc
fdivrl
add
dec
in
mov
add
add
add
add
mov
insl
mov
pop
fistl
add
add
add
jns
add
xchg
add
add
and
cld
fsubrl
cmp
aas
fisubrl
aam
jne
sbb
inc
sbb
xchg
mov
loope
or
bound
adc
ja
jb
push
pop
add
add
js
cmp
addr16
add
mov
add
add
push
add
adc
popa
ja
add
add
xchg
xchg
mov
add
cmp
add
add
scas
stos
iret
cwtl
and
les
jbe
loop
add
add
test
bound
mov
lea
add
inc
clc
movsl
shlb
lea
je
mov
les
aad
rolb
cld
xlat
cmp
cmp
xchg
cmp
ret
mov
lcall
mov
outsb
add
sub
add
lods
mov
jl
pop
or
inc
jns
scas
pop
inc
add
add
sti
sub
adc
dec
add
add
jmp
add
imul
jae
cmp
add
add
sub
pop
rorl
mov
add
jmp
push
add
dec
add
mov
cmc
dec
stc
mov
xor
stos
loopne
add
add
jne
jle
or
or
mov
add
ljmp
cmc
mov
inc
add
gs
lods
sbb
test
xchg
dec
add
leave
sub
xchg
or
sbb
add
add
sbbl
add
add
cmpl
stos
les
cmpsb
push
add
dec
add
lcall
inc
add
pop
cmc
mov
push
add
add
jp
les
inc
fs
test
add
add
xor
sub
pop
inc
add
xor
inc
dec
add
add
movsl
fistpl
push
enter
jbe
mov
adc
mov
data16
add
xor
outsb
add
cmp
add
add
add
mov
pop
cmp
add
xchg
add
scas
mov
jge
xchg
mov
fidivl
faddp
and
sub
call
add
inc
push
add
lcall
decb
fnsave
and
jmp
mov
rclb
cli
and
sbb
inc
rclb
sarl
add
add
or
and
incb
add
pusha
add
add
pop
xchg
std
lahf
push
add
pop
fsts
ret
dec
hlt
sbb
int
push
add
lahf
jg
mov
roll
scas
inc
mov
add
rcrb
add
jle
sub
add
add
add
adc
lcall
add
cmp
push
je
push
jecxz
in
and
sub
mov
in
inc
add
stc
push
add
adc
subb
daa
mov
adc
sarb
iret
addr16
add
jg
pop
jae
add
cltd
fistpl
sub
mov
xor
or
aaa
cmpsb
sbb
adc
cli
shll
outsl
jo
test
jmp
js
add
mov
mov
dec
add
add
cmpsb
add
sub
mov
push
pop
pop
cmc
aad
inc
cwtl
adc
pop
add
inc
add
shlb
add
push
add
jno
subl
cmp
inc
dec
movhps
push
xor
scas
pushf
xor
inc
fwait
xor
mov
add
add
shl
enter
inc
add
or
fnop
fcmove
dec
imul
jmp
fisttpll
int
add
push
add
add
rorl
add
xchg
adc
cmc
data16
stos
push
add
les
pop
or
mov
lods
add
and
gs
mov
mov
add
ljmp
addr16
in
in
add
add
test
loop
movsb
lods
jl
cmp
cmp
loopne
add
add
lods
jno
inc
faddl
add
daa
dec
add
rcrl
push
add
add
pop
add
gs
dec
add
dec
add
jns
jmp
xchg
imul
mov
add
push
add
jg
jnp
mov
jecxz
movd
fldcw
inc
add
cmp
add
pop
repnz
mov
das
jb
call
xor
xchg
mov
jo
fnstenv
sub
push
adc
adc
mov
mov
sub
movl
lea
push
andl
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
xor
test
jne
call
ret
stc
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
add
shr
lock
sub
and
je
push
mov
jne
adc
push
add
addr16
add
mov
add
add
add
xchg
mov
pushf
in
add
subb
stc
lahf
out
mov
add
sub
add
add
das
jle
leave
ja
push
jmp
std
xchg
adc
movsl
inc
add
jmp
xor
sub
push
aaa
add
jl
into
push
push
inc
add
adc
mov
ret
loope
add
pop
add
add
push
add
add
add
push
data16
inc
add
jnp
outsb
add
push
xlat
daa
or
and
jno
add
dec
outsl
in
dec
add
sub
inc
hlt
mov
sub
inc
into
pop
add
add
xchg
mov
lock
dec
mov
test
dec
add
mov
add
jg
aaa
stos
mov
add
faddp
call
add
sub
jmp
jae
out
fwait
mov
dec
add
insb
add
add
mov
add
decl
loopne
or
lds
jno
add
adc
popf
push
ljmp
add
add
mov
inc
mov
xor
pop
in
cmp
add
in
pusha
add
pop
arpl
cmp
add
lock
or
jbe
imul
sarl
out
mov
add
hlt
sub
mov
add
mov
repnz
data16
sbb
adc
lods
cmpl
xor
repz
clc
pushf
and
inc
movsl
je
mov
jmp
add
out
icebp
cwtl
mov
jae
add
add
mov
inc
add
add
hlt
rolb
add
xlat
sbb
mov
adc
jns
cmp
test
dec
add
pusha
add
jle
lods
pop
neg
int
iret
pusha
add
fstps
add
add
xor
movsl
lcall
stos
and
stc
xor
mov
xchg
pop
imulb
stos
test
out
loope
push
add
add
mov
add
add
mov
cmp
inc
xchg
adcb
cmpb
rcll
orb
lock
frndint
push
add
inc
iret
cmova
push
sbb
xlat
jno
lcall
rcrl
adc
add
mov
cmp
add
add
pop
push
jno
mov
mov
xor
test
in
and
add
add
outsb
add
add
push
add
xchg
lcall
mov
add
cmpsb
loop
movsb
dec
or
cmp
jo
in
jmp
add
test
add
xlat
jns
imul
lock
insb
add
cltd
cmp
push
add
add
push
add
add
xchg
popa
inc
or
pop
pop
add
cmp
pop
add
add
call
add
outsb
add
or
lret
pop
add
lds
rorl
mov
sahf
stc
mov
add
add
mov
add
fnstenv
add
add
pop
out
jmp
xchg
jb
adc
push
add
pushf
leave
ds
jnp
add
push
add
add
push
add
std
adc
sub
or
xchg
movsb
xchg
pop
add
lock
jp
mov
pusha
add
into
hlt
push
je
mov
add
push
add
add
add
jg
and
add
add
repnz
adc
fnstsw
jo
cmp
push
add
mov
add
add
es
or
sbb
mov
mulb
mov
mov
jo
adc
in
pop
or
and
int3
fidivl
loop
dec
add
sbb
dec
pop
xchg
jecxz
call
pop
call
cmp
mov
aaa
pop
ljmp
je
dec
add
add
dec
xchg
xor
pop
repz
add
add
push
add
sbb
push
dec
add
add
add
add
add
or
aad
add
jl
scas
mov
push
add
add
add
test
xchg
add
add
add
mov
sub
mov
mov
cmc
xchg
sub
add
mov
xorl
in
mov
and
push
add
out
add
movsl
fsubrs
sbb
imul
mov
mov
add
pusha
add
add
add
sbb
mov
cmpsl
mov
cld
movsl
popa
mov
add
out
loopne
add
and
adc
pop
shll
add
sub
add
sbb
into
sti
cmpb
and
add
jp
push
and
xor
fbld
add
cmp
push
out
adc
xchg
push
out
mov
jno
add
add
pop
imul
lods
jb
test
sub
loop
popf
test
add
add
fdivs
add
ret
push
add
popa
inc
fs
add
xchg
jbe
pop
add
mov
add
loopne
add
adc
or
and
sarb
int
xor
stc
shlb
sub
js
cld
out
mov
out
add
mov
jmp
es
inc
addr16
add
idivl
rorb
add
jmp
repnz
mov
or
test
negl
pop
add
cmp
jg
add
lods
add
cmp
ret
push
add
jl
add
jo
adc
add
ja
add
and
fbstp
lret
xchg
push
add
add
mov
add
add
cmpsb
je
outsl
mov
bound
sbb
or
adc
sar
mov
jbe
fstl
add
sub
add
add
popa
dec
pop
mov
ljmp
add
sahf
or
das
cmp
into
mov
out
testb
add
cmp
add
push
add
cmp
xchg
pop
add
jb
dec
add
out
add
fwait
mov
add
jbe
rclb
cmpb
add
scas
dec
add
mov
add
cmp
push
mov
out
cli
mov
sub
adc
in
jb
pop
add
arpl
add
jbe
loope
add
xchg
iret
sub
leave
repnz
sbb
push
add
mov
cmpsb
les
add
mov
call
xor
out
pop
add
ficoms
lea
add
rcrl
add
add
int3
adc
sbb
dec
add
xor
adc
lret
add
push
cmc
fimuls
fnstsw
sarb
xchg
popa
popf
test
sub
push
add
push
add
imul
xchg
mov
add
add
sub
add
fbld
test
xchg
aas
cmp
repnz
push
add
add
and
xchg
cwtl
leave
hlt
lods
mov
repnz
push
ret
jmp
adc
cmpb
test
cmp
jmp
imul
fidivrl
mov
popf
je
add
lods
mov
sarb
or
rcrb
in
mov
add
push
add
movsb
mov
decl
add
jecxz
push
add
sbb
sti
mov
loop
shlb
pop
mov
sub
push
add
inc
in
iret
mov
add
out
pop
add
mov
adc
push
cmpsl
sub
mov
test
cmp
je
sti
mov
xor
cmp
mov
add
mov
xor
fstpl
outsb
add
push
mov
jmp
loope
mov
mov
int
enter
cmpsb
sti
mov
mov
in
add
add
add
push
out
mov
push
add
pop
add
add
add
add
pop
lahf
ret
add
fidivs
add
add
int3
ret
loop
cmp
ret
imul
and
test
xchg
in
movsb
jl
cmp
je
push
add
mov
xchg
jg
cld
jle
arpl
insl
mov
loope
mov
jp
xchg
adc
add
sbb
mov
pop
inc
add
pushf
sub
icebp
mov
ljmp
enter
cwtl
jo
movsl
int
add
add
add
lahf
call
push
add
fidivrs
mov
mov
mov
add
ljmp
pop
add
lock
add
sub
or
mov
in
xor
outsl
out
popa
out
push
add
push
ret
xor
and
rorl
add
fwait
sti
push
add
mov
test
dec
mov
add
jne
inc
and
mov
gs
das
imul
cltd
lock
pop
stos
sub
dec
add
adc
xlat
xor
test
jne
add
insb
add
add
repnz
adc
add
ss
inc
add
in
push
add
add
leave
jp
push
add
push
add
push
add
add
mov
add
sbb
ds
mov
add
mov
pop
add
jg
leave
adc
das
push
jmp
add
or
add
lret
movsb
int
add
imul
add
add
adc
add
mov
mov
add
sub
pop
dec
add
rorb
pop
add
cld
lahf
movsl
fldl
add
lret
xchg
loope
adc
add
lods
daa
pop
add
add
xchg
jecxz
add
push
add
out
sub
pop
sub
lds
jbe
xchg
inc
add
add
in
ljmp
add
imul
add
xor
add
icebp
sub
imul
aam
add
or
lea
add
bound
hlt
push
add
xor
pop
call
jne
add
mov
mov
add
mov
mov
jmp
mov
sbb
jmp
movsl
mov
test
vpsrad
add
xchg
push
add
mov
add
fbld
add
divl
cmpsb
mov
add
clc
dec
iret
aaa
cmp
add
rol
sarl
xor
lret
add
add
int
add
enter
jmp
add
mov
repz
mov
add
pop
add
add
lret
push
add
add
inc
add
add
test
add
clc
lret
bound
in
mov
fistl
loop
mov
add
add
iret
loopne
fsubrs
mov
add
repnz
xchg
leave
movl
stos
xchg
mov
add
dec
pop
bound
jae
test
cmc
in
add
mov
or
icebp
fisubl
popa
sub
xchg
xor
call
add
aam
test
add
jae
add
jbe
enter
mov
sti
outsl
or
fbld
add
add
sahf
movsl
fcmovnb
in
pop
scas
imul
daa
pop
jmp
pop
add
mov
add
xor
sbb
fisubrl
add
in
scas
push
add
push
loop
mov
add
les
or
adc
sbb
pop
lock
cmp
cs
cli
pop
add
add
mov
add
in
scas
int
add
ror
enter
clc
sub
add
stos
in
fists
jb
lret
mov
add
sub
add
pop
sub
or
cmp
and
mov
adc
mov
jb
bound
mov
pop
add
testl
rcrl
test
movsb
js
icebp
inc
xor
jbe
adc
loope
add
mov
cld
lret
push
mov
mov
add
xchg
rcrl
cmp
hlt
dec
lock
adc
mov
test
fstps
add
aas
sbb
push
add
xchg
or
lret
test
movsl
adc
inc
add
cltd
jae
jl
insl
pop
insl
lods
xchg
xlat
clc
lret
pop
in
cwtl
or
call
mov
ljmp
ljmp
ret
xor
insb
add
cmp
dec
flds
cmp
loopne
fdivr
adc
rcrl
add
lcall
fcompl
add
int3
lods
sbb
adc
lret
int3
mov
fsts
xor
or
xchg
xchg
cmp
xlat
inc
add
dec
add
lret
fsubrl
jecxz
pop
and
nop
mov
add
add
ret
jmp
add
imul
add
jmp
push
add
cmp
loope
add
stc
or
leave
roll
add
pop
add
daa
std
loop
lods
out
add
mov
add
lds
add
adc
and
iret
fbstp
sbb
mov
add
pop
xchg
or
dec
add
jmp
filds
imul
scas
mov
xor
lock
jge
lock
jb
mov
outsl
bnd
shrb
pop
add
icebp
inc
xchg
mov
in
or
dec
add
jecxz
pop
divb
xor
add
mov
jbe
and
jp
and
int3
add
dec
add
jle
ficompl
add
lock
and
inc
or
jle
outsl
mov
jb
iret
push
add
push
mov
idiv
mov
sub
scas
mov
add
add
or
ret
xchg
sahf
xor
add
add
add
imul
add
icebp
arpl
add
push
add
lret
popf
sub
add
add
pop
cwtl
loopnew
pushl
mull
add
dec
cli
adcb
adc
call
ljmp
add
lret
sbb
shll
sbb
je
sub
out
clc
repnz
nop
nop
jae
insb
add
add
and
mov
clc
repnz
nop
nop
jae
add
outsb
aam
lds
repnz
nop
nop
jae
add
add
add
or
pusha
add
mov
xchg
ret
cmp
add
add
pushf
add
jge
clc
repnz
nop
nop
jae
fildl
jbe
dec
add
clc
repnz
nop
nop
jae
add
xchg
mov
clc
repnz
nop
nop
jae
or
add
cli
clc
repnz
nop
nop
jae
pushf
add
aam
add
add
mov
add
clc
repnz
nop
nop
jae
push
sub
mov
add
add
nop
push
mov
leave
nop
jmp
mov
add
and
movzwl
push
mov
xchg
ret
add
add
add
add
mov
add
clc
repnz
nop
nop
jae
add
add
mov
imul
clc
repnz
nop
nop
jae
add
sbb
push
mov
mov
sbb
clc
repnz
nop
nop
jae
jnp
xchg
daa
add
and
push
mov
leave
nop
jmp
add
pop
cmp
movsb
lcall
arpl
mov
xchg
ret
inc
addb
add
mov
push
mov
xchg
ret
sldt
adcl
clc
repnz
nop
nop
jae
test
movd
and
push
mov
xchg
ret
lahf
add
add
fildl
add
add
repnz
nop
nop
jae
add
add
divl
add
clc
repnz
nop
nop
jae
lcall
add
push
clc
repnz
nop
nop
jae
gs
add
cmp
add
clc
repnz
nop
nop
jae
add
jbe
mov
pop
mov
clc
repnz
nop
nop
jae
pop
push
sbb
add
in
popa
or
add
clc
repnz
nop
nop
jae
cmp
out
adc
cmp
add
add
clc
repnz
nop
nop
jae
add
loop
add
add
cmpsb
add
lock
data16
movsl
push
clc
repnz
nop
nop
jae
add
cmpl
clc
repnz
nop
nop
jae
add
insb
test
add
push
add
clc
repnz
nop
nop
jae
lods
add
add
out
mov
mov
mov
xchg
ret
cmp
cmpsb
filds
nop
add
lahf
jne
clc
repnz
nop
nop
jae
bound
pop
add
add
pusha
add
push
add
add
sub
push
mov
xchg
ret
loop
add
bound
add
cld
nop
nop
jae
add
outsb
add
fwait
nop
push
mov
leave
nop
jmp
pop
mov
test
add
fld1
push
mov
xchg
ret
sbb
add
add
add
mov
xchg
ret
jnp
adc
lahf
add
add
add
push
pop
clc
repnz
nop
nop
jae
mov
and
add
pop
add
add
add
add
test
push
mov
leave
nop
jmp
add
add
push
repnz
nop
nop
jae
outsb
outsb
add
cld
jnp
lahf
cld
add
repnz
nop
nop
jae
push
out
add
add
push
cmp
mov
xchg
ret
add
add
add
loop
add
cld
nop
nop
jae
add
add
add
add
push
mov
xchg
ret
add
addb
filds
add
lcall
push
add
add
repnz
nop
nop
jae
add
add
add
in
leave
nop
jmp
add
add
adcl
mov
repnz
nop
nop
jae
pop
cmp
add
xorb
sbb
push
mov
xchg
ret
mov
mov
add
push
mov
xchg
ret
movsb
sub
lcall
mov
push
mov
xchg
ret
add
gs
fcomps
or
mov
xchg
ret
sbb
bound
mov
add
clc
repnz
nop
nop
jae
add
fisttpl
in
inc
add
cmpsb
add
add
mov
clc
repnz
nop
nop
jae
add
fisttpl
lret
xorl
clc
repnz
nop
nop
jae
loop
add
int
mov
push
clc
repnz
nop
nop
jae
sbb
add
push
push
mov
xchg
ret
and
add
mov
pmulhw
cld
nop
nop
jae
add
add
insb
daa
test
add
clc
repnz
nop
nop
jae
push
mov
ret
push
test
cld
nop
nop
jae
push
cmp
loop
sub
inc
push
push
mov
xchg
ret
inc
pop
add
or
sbb
addr16
add
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
nop
pop
add
addb
jbe
in
inc
add
jmp
repnz
nop
nop
jae
and
sub
add
push
sub
jle
inc
add
add
pushf
add
add
clc
repnz
nop
nop
jae
sbb
cld
and
add
fildl
xchg
cld
nop
nop
jae
loop
push
add
add
add
int3
fisttps
cld
nop
nop
jae
mov
and
movsb
pop
mov
clc
repnz
nop
nop
jae
add
add
inc
sbb
cmp
add
add
add
jno
inc
push
mov
xchg
ret
lcall
add
add
jne
push
mov
xchg
ret
mov
add
push
push
clc
repnz
nop
nop
jae
insb
add
sbb
add
add
push
mov
xchg
ret
add
add
add
xchg
mov
nop
push
mov
leave
nop
jmp
add
addr16
jp
and
add
sbb
push
mov
xchg
ret
push
cmp
add
add
sbb
iret
lea
clc
repnz
nop
nop
jae
add
add
add
push
lods
pop
push
clc
repnz
nop
nop
jae
insb
add
lahf
add
xor
push
mov
leave
nop
jmp
push
pushf
sub
mov
add
outsb
add
push
push
mov
xchg
ret
adc
inc
jbe
add
mov
or
cld
nop
nop
jae
add
sldt
add
dec
sub
repnz
nop
nop
jae
add
pushf
add
add
cld
nop
nop
jae
insb
lahf
mov
add
gs
push
mov
leave
nop
jmp
bound
add
dec
xchg
clc
repnz
nop
nop
jae
pop
add
popf
mov
fists
repnz
nop
nop
jae
add
add
movsb
add
sbb
loopne
clc
repnz
nop
nop
jae
add
adc
push
je
clc
repnz
nop
nop
jae
sub
add
pop
or
inc
pop
push
mov
xchg
ret
add
outsb
add
loop
xchg
insb
mov
mov
xchg
ret
add
daa
addb
add
pop
sbb
add
subl
jae
add
mov
jbe
sub
jb
add
add
mov
out
add
cmpsb
dec
add
xor
clc
repnz
nop
nop
jae
adc
in
and
lods
push
enter
or
repnz
nop
nop
jae
add
add
add
or
push
mov
leave
nop
jmp
sub
add
add
mov
add
rorl
inc
add
insb
adc
add
add
or
clc
repnz
nop
nop
jae
add
mov
add
nop
nop
jae
add
movsb
add
add
cmp
mov
leave
nop
jmp
add
add
cmp
pop
add
xchg
inc
add
add
add
pop
push
add
add
repnz
nop
nop
jae
add
cmpsb
add
seta
stc
add
pushf
bound
xchg
ret
add
insb
add
and
popa
mov
nop
push
mov
leave
nop
jmp
sub
add
add
add
adc
add
clc
repnz
nop
nop
jae
add
mov
div
nop
push
mov
leave
nop
jmp
aam
sbbb
jbe
enter
push
mov
xchg
ret
bound
popf
pop
movsb
add
add
push
mov
xchg
ret
add
add
add
add
push
fcomps
add
mov
leave
nop
jmp
add
add
add
andb
jb
clc
repnz
nop
nop
jae
daa
add
cld
popf
ret
test
push
mov
xchg
ret
xchg
pop
popa
loop
out
add
add
into
rclb
push
mov
jo
add
jae
or
test
dec
add
outsb
push
add
sbb
add
add
into
sub
push
add
pop
mov
clc
repnz
nop
nop
jae
add
lds
in
add
add
adc
add
add
or
push
mov
leave
nop
jmp
mov
add
jnp
fstl
repnz
nop
nop
jae
add
fbld
add
nop
nop
jae
add
add
add
push
mov
xchg
ret
filds
add
add
and
loop
clc
repnz
nop
nop
jae
pop
loop
add
and
push
mov
xchg
ret
andb
add
add
clc
repnz
nop
nop
jae
add
scas
mov
clc
repnz
nop
nop
jae
add
add
add
filds
add
fistpl
push
mov
xchg
ret
popf
add
add
insb
xchg
add
add
or
test
idiv
clc
repnz
nop
nop
jae
xchg
push
mov
rorl
jg
add
add
add
mov
pop
and
push
mov
leave
nop
jmp
add
add
sub
mov
pop
push
push
mov
xchg
ret
movsb
add
add
add
add
jbe
clc
repnz
nop
nop
jae
lcall
cld
pop
mov
clc
repnz
nop
nop
jae
add
fnclex
sub
add
push
mov
xchg
ret
xchg
add
add
or
movsb
add
repnz
nop
nop
jae
add
bound
and
repnz
nop
nop
jae
mov
nop
push
add
add
repnz
nop
nop
jae
add
or
popa
xchg
sbb
mov
call
clc
repnz
nop
nop
jae
add
pop
lods
mov
std
mov
clc
repnz
nop
nop
jae
sub
adc
add
test
call
nop
jmp
daa
add
sbb
fwait
push
clc
repnz
nop
nop
jae
popa
pushf
outsb
mov
lcall
ss
clc
repnz
nop
nop
jae
test
push
mov
leave
nop
jmp
lods
in
mov
add
lods
sbb
arpl
clc
repnz
nop
nop
jae
mov
add
add
clc
repnz
nop
nop
jae
mov
cld
movsb
sbb
adc
add
clc
repnz
nop
nop
jae
add
sbb
nop
add
dec
add
push
clc
repnz
nop
nop
jae
add
out
add
jne
pushl
clc
repnz
nop
nop
jae
add
movsb
push
and
jbe
fldt
sub
repnz
nop
nop
jae
ltr
add
movsb
add
repnz
nop
nop
jae
fistps
add
add
push
mov
leave
nop
jmp
out
add
add
cld
add
dec
fld1
push
mov
xchg
ret
sub
insb
add
add
cmp
and
rsm
push
mov
xchg
ret
add
add
add
adc
jne
add
jnp
jbe
sub
insb
add
or
out
xchg
inc
add
mov
add
pop
jecxz
add
nop
jmp
pop
out
add
xchg
sbb
repnz
nop
nop
jae
popf
add
cmp
add
add
add
sub
sbb
nop
nop
jae
sub
add
or
orl
add
repnz
nop
nop
jae
add
lods
add
add
nop
push
mov
leave
nop
jmp
cmpsb
push
add
add
mov
nop
push
mov
leave
nop
jmp
mov
add
add
jb
nop
push
mov
leave
nop
jmp
popa
add
push
push
mov
xchg
ret
add
add
or
orl
repnz
nop
nop
jae
add
add
add
fcoms
push
mov
leave
nop
jmp
add
imul
loop
add
arpl
nop
nop
jae
add
mov
ltr
add
mov
cmp
add
add
test
lods
xor
fld1
push
mov
xchg
ret
inc
lods
add
cmpsb
nop
cmpsb
add
xor
add
repnz
nop
nop
jae
orl
jbe
clc
repnz
nop
nop
jae
add
movsb
add
rep
push
mov
xchg
ret
add
push
add
add
add
xchg
stos
push
push
mov
xchg
ret
push
add
add
jbe
mov
add
nop
push
mov
leave
nop
jmp
add
andb
xor
nop
jmp
add
add
add
ja
add
add
add
jnp
add
clc
repnz
nop
nop
jae
add
add
insb
add
add
mov
nop
push
mov
leave
nop
jmp
test
add
add
repnz
nop
nop
jae
mov
out
lahf
add
clc
repnz
nop
nop
jae
add
mov
popa
test
imul
in
leave
nop
jmp
add
add
add
add
clc
repnz
nop
nop
jae
in
and
and
xchg
add
mov
add
clc
repnz
nop
nop
jae
add
daa
inc
add
add
push
mov
xchg
ret
in
mov
loop
adc
add
push
mov
xchg
ret
add
add
xor
push
mov
xchg
ret
pop
add
add
add
rol
push
mov
xchg
ret
jnp
pop
add
daa
movsb
fisttps
cltd
and
nop
push
mov
leave
nop
jmp
add
fistpll
inc
mov
cld
nop
nop
jae
loop
add
mov
sub
clc
repnz
nop
nop
jae
add
jecxz
rolb
repnz
nop
nop
jae
insb
add
jbe
add
mov
clc
repnz
nop
nop
jae
add
loop
pop
in
jbe
pop
lcall
clc
repnz
nop
nop
jae
insb
mov
stos
pop
push
push
mov
xchg
ret
add
cmp
add
dec
push
push
mov
xchg
ret
add
nop
add
in
sbb
adc
and
mov
xchg
ret
add
add
jbe
insb
aam
fwait
test
nop
push
mov
leave
nop
jmp
movsb
add
add
fidivs
add
nop
jae
add
xchg
popf
mov
or
rclb
jae
add
gs
add
add
add
push
add
les
jno
push
mov
xchg
ret
adc
mov
adc
add
and
mov
xchg
ret
add
pop
add
add
nop
push
mov
leave
nop
jmp
add
cmpsb
bound
jbe
add
clc
repnz
nop
nop
jae
loop
mov
mov
jbe
add
nop
nop
jae
mov
add
movsb
add
add
add
xchg
add
pop
fistpl
clc
repnz
nop
nop
jae
add
adc
mov
shr
clc
repnz
nop
nop
jae
add
and
pop
inc
add
mov
add
add
add
cld
nop
nop
jae
sub
loop
in
lcall
clc
repnz
nop
nop
jae
add
add
add
add
push
rcrb
popl
clc
repnz
nop
nop
jae
add
add
pop
add
mov
xchg
ret
add
add
add
mov
nop
nop
jae
insb
add
test
movsb
mov
xchg
push
mov
add
or
add
or
push
fcoml
pop
add
lds
mov
xchg
ret
add
test
cmpsb
add
nop
push
mov
leave
nop
jmp
lahf
andl
jbe
adc
mov
add
pop
push
mov
xchg
ret
andb
add
sbb
das
push
clc
repnz
nop
nop
jae
add
sub
and
xor
jl
mov
cld
nop
nop
jae
add
mov
add
add
or
cld
nop
nop
jae
bound
add
rorl
mov
adc
repnz
nop
nop
jae
loop
add
leave
nop
push
mov
leave
nop
jmp
andb
add
and
add
adcb
sub
add
repnz
nop
nop
jae
add
pop
andb
fisubs
mov
setbe
imul
add
add
add
cld
nop
nop
jae
add
adc
add
add
nop
push
mov
leave
nop
jmp
fildl
adc
loop
add
xor
call
nop
jmp
add
and
daa
mov
clc
repnz
nop
nop
jae
add
pop
add
add
jae
dec
add
repnz
nop
nop
jae
loop
jbe
add
add
or
cld
nop
nop
jae
fisttpl
add
add
cld
nop
nop
jae
add
add
add
push
mov
xchg
ret
outsb
add
and
loop
add
daa
in
add
mov
push
mov
xchg
ret
mov
xchg
movsb
adcl
cld
nop
nop
jae
popf
movsb
add
out
add
andl
add
mov
xchg
ret
or
in
push
pop
out
gs
faddl
mov
repnz
nop
nop
jae
add
test
add
jl
enter
inc
dec
es
repnz
nop
nop
jae
mov
mov
add
add
cld
push
inc
sbb
repnz
nop
nop
jae
sbb
add
add
fbld
push
mov
leave
nop
jmp
add
bound
add
test
je
clc
repnz
nop
nop
jae
sbb
bound
add
jp
jo
dec
jmp
add
nop
add
adc
add
add
add
test
mov
push
mov
xchg
ret
add
inc
cmpsb
pop
add
push
nop
push
mov
leave
nop
jmp
add
mov
inc
inc
clc
repnz
nop
nop
jae
loop
add
sub
popf
adcl
push
mov
xchg
ret
loop
add
add
clc
repnz
nop
nop
jae
add
add
sbb
add
push
push
mov
xchg
ret
add
add
push
fildl
cmp
add
push
push
mov
xchg
ret
and
mov
add
mov
pop
add
clc
repnz
nop
nop
jae
add
bound
inc
cmp
repnz
nop
nop
jae
addr16
add
test
pop
add
mov
push
mov
leave
nop
jmp
add
adc
clc
repnz
nop
nop
jae
add
lods
add
sub
std
push
mov
mov
add
push
add
xchg
add
pavgb
mov
xor
fadd
push
push
mov
xchg
ret
addr16
adcb
add
mov
xor
xor
imul
nop
nop
jae
insb
cmpsb
add
and
mov
bound
clc
repnz
nop
nop
jae
add
add
adc
add
rcll
repnz
nop
nop
jae
cld
mov
addb
fwait
clc
repnz
nop
nop
jae
push
test
add
sbb
loopne
test
nop
push
mov
leave
nop
jmp
cmpl
sbb
mov
xchg
ret
insb
loop
add
fdivs
clc
repnz
nop
nop
jae
push
xchg
pop
pushf
pushf
add
pop
mov
push
mov
xchg
ret
add
pop
add
push
jo
data16
push
push
mov
xchg
ret
fisttps
add
add
repnz
nop
nop
jae
add
add
add
hlt
mov
and
sbb
add
pushf
outsb
add
filds
add
add
sarb
lds
repnz
nop
nop
jae
add
add
add
out
pop
add
xor
ja
mov
adc
repnz
nop
nop
jae
lods
add
add
and
loop
add
add
out
pushf
inc
pop
push
mov
xchg
ret
in
mov
add
inc
sldt
mov
leave
nop
jmp
cmpsb
movsb
add
and
aam
loop
ret
pop
clc
repnz
nop
nop
jae
or
and
add
or
mov
nop
push
mov
leave
nop
jmp
xchg
and
repnz
nop
nop
jae
out
add
add
add
outsb
jne
clc
repnz
nop
nop
jae
add
add
add
xor
add
mov
leave
nop
jmp
jnp
movsb
add
jmp
repnz
nop
nop
jae
add
out
adcl
sub
repnz
nop
nop
jae
add
xchg
testb
nop
push
mov
leave
nop
jmp
add
sub
inc
clc
repnz
nop
nop
jae
add
out
outsb
add
push
mov
leave
nop
jmp
lar
add
imul
cld
nop
nop
jae
lahf
fbld
add
repnz
nop
nop
jae
add
popf
add
or
add
mov
clc
repnz
nop
nop
jae
paddb
sbb
mov
clc
repnz
nop
nop
jae
add
and
add
xor
lret
jmp
loop
add
movsb
cld
sbb
and
fistl
cmpl
jae
jbe
lcall
repnz
nop
nop
jae
gs
add
pushf
mov
ja
clc
push
mov
xchg
ret
add
verw
pop
cmpsb
and
pop
mov
xchg
nop
push
mov
leave
nop
jmp
add
mov
adc
clc
add
nop
jmp
add
sbb
mov
add
add
or
add
pop
add
sbb
add
popf
loop
add
mov
subl
jae
aam
addl
push
mov
xchg
ret
lsl
loop
add
jnp
or
dec
add
clc
repnz
nop
nop
jae
push
add
add
pop
lcall
test
cld
nop
nop
jae
cmpsb
add
lahf
add
add
repnz
nop
nop
jae
add
add
adc
cld
nop
nop
jae
test
add
add
popa
push
clc
repnz
nop
nop
jae
daa
insb
and
push
push
or
sub
clc
repnz
nop
nop
jae
add
add
mov
cmc
add
clc
repnz
nop
nop
jae
add
add
add
add
mov
push
mov
xchg
ret
add
add
add
xchg
add
dec
nop
push
mov
leave
nop
jmp
add
addl
inc
cmc
push
push
mov
xchg
ret
and
add
add
stc
add
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
daa
add
add
popa
add
add
mov
add
push
clc
repnz
nop
nop
jae
add
add
add
fisttpl
nop
nop
jae
add
and
and
add
mov
xchg
ret
cmpsb
add
add
or
fwait
push
mov
xchg
ret
insb
in
mov
add
add
stc
push
clc
repnz
nop
nop
jae
add
pushf
cld
cmp
and
lods
out
xor
push
mov
leave
nop
jmp
add
cld
gs
add
xor
clc
repnz
nop
nop
jae
test
fisttps
sar
cld
nop
nop
jae
xchg
add
add
add
int
clc
repnz
nop
nop
jae
add
add
loop
mov
xorl
nop
push
mov
leave
nop
jmp
sub
xchg
pusha
clc
repnz
nop
nop
jae
add
filds
nop
add
add
inc
dec
jne
nop
push
mov
leave
nop
jmp
pop
lahf
add
add
push
clc
repnz
nop
nop
jae
lods
add
add
mov
push
mov
xchg
ret
add
bound
insb
loop
popa
add
int3
out
repz
repnz
nop
nop
jae
add
add
sub
loop
add
nop
push
mov
leave
nop
jmp
add
pop
mov
add
xor
clc
repnz
nop
nop
jae
mov
sbb
movsb
sbb
push
add
mov
clc
repnz
nop
nop
jae
pop
pop
add
add
add
clc
repnz
nop
nop
jae
add
add
add
enter
nop
nop
jae
add
add
test
add
gs
add
add
add
cmpsb
add
orl
repnz
nop
nop
jae
add
sbbb
test
repnz
nop
nop
jae
and
add
pop
scas
js
pop
push
push
mov
xchg
ret
outsb
or
push
mov
mov
push
mov
xchg
ret
sbb
nop
pop
andl
mov
repnz
nop
nop
jae
popa
pop
add
add
clc
repnz
nop
nop
jae
add
jnp
add
pop
je
nop
push
mov
leave
nop
jmp
add
in
add
add
mov
scas
ret
clc
repnz
nop
nop
jae
pop
addb
lods
add
and
xor
push
mov
xchg
ret
add
add
nop
add
rcl
push
mov
xchg
ret
add
mov
cmp
add
outsb
add
bound
inc
add
ljmp
clc
repnz
nop
nop
jae
and
add
add
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
nop
jae
addl
in
add
mull
mov
xchg
ret
add
movsb
add
cmp
add
ret
movsb
push
mov
xchg
ret
add
mov
add
mov
clc
repnz
nop
nop
jae
and
mov
push
mov
push
mov
xchg
ret
add
add
push
clc
repnz
nop
nop
jae
daa
add
and
and
pop
addb
shr
clc
repnz
nop
nop
jae
push
inc
loop
insb
addl
cmp
repnz
nop
nop
jae
add
add
test
call
nop
jae
add
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
or
xchg
add
push
clc
repnz
nop
nop
jae
jnp
popa
movsb
add
add
leave
jmp
add
add
lcall
popa
add
add
mov
enter
nop
nop
jae
add
add
push
mov
leave
nop
jmp
push
add
lahf
or
imul
cld
nop
nop
jae
add
addb
jbe
ljmp
repnz
nop
nop
jae
or
pop
add
add
add
repz
clc
repnz
nop
nop
jae
out
add
add
add
clc
repnz
nop
nop
jae
add
push
add
mov
add
repnz
nop
nop
jae
cmp
add
out
jno
rcrb
repnz
nop
nop
jae
jnp
loop
adc
add
dec
nop
push
mov
leave
nop
jmp
jbe
addb
add
add
sub
add
inc
ret
clc
repnz
nop
nop
jae
nop
mov
sub
or
add
addb
cmp
ret
add
add
add
fucomip
push
clc
repnz
nop
nop
jae
add
cld
outsb
add
or
repnz
add
punpcklwd
adc
add
add
adc
add
fistps
add
shlb
add
mov
clc
repnz
nop
nop
jae
add
push
xchg
call
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
popa
add
add
jne
movb
push
mov
leave
nop
jmp
add
add
add
ds
adc
nop
jae
lods
mov
or
add
dec
add
das
test
nop
push
mov
leave
nop
jmp
popa
mov
add
ret
add
clc
repnz
nop
nop
jae
loop
add
adc
cmp
nop
push
mov
leave
nop
jmp
add
mov
nop
nop
jae
add
add
add
add
call
add
add
mov
add
add
jp
sbb
and
cmp
loope
repnz
nop
nop
jae
add
add
insb
adc
add
push
clc
repnz
nop
nop
jae
fildl
xchg
add
popa
sub
add
jne
clc
repnz
nop
nop
jae
add
jl
add
nop
nop
jae
and
add
add
mov
std
clc
repnz
nop
nop
jae
add
push
add
stos
movsl
add
clc
repnz
nop
nop
jae
add
add
lret
nop
push
mov
leave
nop
jmp
add
or
pop
and
scas
mov
clc
repnz
nop
nop
jae
add
fildl
add
add
mov
clc
repnz
nop
nop
jae
add
add
fsub
pop
jmp
movsb
mov
add
xchg
lods
jnp
add
popa
sbb
add
clc
repnz
nop
nop
jae
add
add
push
add
add
clc
repnz
nop
nop
jae
and
add
test
push
mov
leave
nop
jmp
jbe
or
fld1
clc
repnz
nop
nop
jae
push
sbb
pop
add
lahf
mov
inc
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
add
je
clc
repnz
nop
nop
jae
push
nop
add
or
push
mov
xchg
ret
or
xchg
adc
mov
lea
repnz
nop
nop
jae
and
addl
mov
cli
roll
clc
clc
repnz
nop
nop
jae
insb
xchg
add
add
pop
add
sbb
loop
inc
add
loop
or
pop
jl
inc
xchg
clc
repnz
nop
nop
jae
add
add
add
add
sub
cld
cltd
jmp
add
add
add
add
add
cs
clc
repnz
nop
nop
jae
add
add
pushf
cld
das
pop
nop
push
mov
leave
nop
jmp
add
add
pushf
add
add
and
repnz
nop
nop
jae
add
add
cld
fldt
add
xchg
popa
inc
add
in
or
add
xchg
in
jne
clc
repnz
nop
nop
jae
add
add
lods
push
mov
xchg
ret
xchg
lods
adc
pop
add
add
sbb
dec
fwait
push
mov
xchg
ret
add
and
add
push
mov
xchg
ret
bound
pop
lahf
adc
and
add
add
clc
repnz
nop
nop
jae
add
add
fisubs
add
out
push
clc
repnz
nop
nop
jae
mov
cmp
aam
add
nop
nop
jae
add
add
mov
add
xor
nop
nop
jae
mov
pop
call
nop
jmp
add
add
mov
add
repnz
nop
nop
jae
add
jne
clc
repnz
nop
nop
jae
mov
loopne
add
clc
repnz
nop
nop
jae
adc
add
movsb
pushf
xorb
repnz
nop
nop
jae
add
mov
lods
cli
vmovlps
add
clc
repnz
nop
nop
jae
add
dec
cld
clc
repnz
nop
nop
jae
add
movsb
add
add
and
add
repnz
nop
nop
jae
outsb
add
add
push
es
jecxz
push
mov
leave
nop
jmp
xchg
add
add
add
call
nop
jmp
or
xchg
add
or
push
add
cld
nop
nop
jae
add
insb
add
add
add
or
push
mov
xchg
ret
cmpsb
and
add
mov
mov
xchg
ret
add
add
loop
cmpsb
add
nop
nop
jae
loop
add
sub
add
push
subl
push
mov
xchg
ret
sub
adc
add
pause
push
mov
leave
nop
jmp
add
inc
add
add
and
rclb
mov
xchg
ret
add
add
add
add
out
mov
clc
repnz
nop
nop
jae
add
mov
test
push
mov
leave
nop
jmp
add
add
insb
addr16
adc
add
mov
sldt
add
lahf
add
add
push
mov
xchg
ret
and
add
popa
sbb
adc
scas
enter
nop
nop
jae
lcall
mov
clc
repnz
nop
nop
jae
and
add
add
or
bndstx
cld
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
jnp
fists
add
sub
add
clc
repnz
nop
nop
jae
pop
add
or
xor
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
push
add
add
in
lahf
shl
push
mov
xchg
ret
sbb
jbe
sbb
add
add
insb
add
add
mov
push
mov
xchg
ret
add
jnp
mov
mov
clc
repnz
nop
nop
jae
pop
fisttpl
loop
xchg
add
nop
jmp
aam
jbe
lods
add
mov
repnz
nop
nop
jae
add
add
add
addb
pop
add
push
mov
xchg
ret
add
lcall
out
push
mov
xchg
ret
pop
xchg
mov
or
dec
jne
nop
push
mov
leave
nop
jmp
add
add
gs
clc
repnz
nop
nop
jae
add
add
pop
sub
add
add
nop
nop
jae
pushf
pop
pushf
cld
add
popa
add
nop
lods
push
clc
repnz
nop
nop
jae
mov
or
and
mov
in
leave
nop
jmp
sbb
mov
and
add
lea
clc
repnz
nop
nop
jae
lahf
cmp
mov
repnz
nop
nop
jae
add
jbe
sub
ds
clc
repnz
nop
nop
jae
add
add
in
aam
pop
nop
push
mov
leave
nop
jmp
fistl
pop
lods
add
addr16
clc
repnz
nop
nop
jae
add
pop
cmpsb
str
lret
pop
clc
repnz
nop
nop
jae
add
mov
lods
mov
cld
nop
nop
jae
mov
lods
lods
movsb
add
aam
add
jmp
add
adc
add
add
and
add
add
jmp
add
andl
and
mov
inc
add
popl
xchg
ret
cld
add
sub
pop
jnp
add
cmpw
clc
repnz
nop
nop
jae
jbe
xchg
add
pop
cmc
pop
clc
repnz
nop
nop
jae
sbb
jnp
mov
pop
sub
inc
add
cmpsb
pushf
addl
and
loope
jne
clc
repnz
nop
nop
jae
add
insb
sbb
add
test
repnz
nop
nop
jae
and
add
lcall
stos
fistpl
push
mov
xchg
ret
add
add
movsb
faddl
repnz
nop
nop
jae
add
add
fwait
clc
repnz
nop
nop
jae
add
mov
add
sbb
jmp
decl
mov
mov
sbbl
lds
and
add
out
add
add
test
push
mov
xchg
ret
pop
jbe
add
mov
jo
nop
push
mov
leave
nop
jmp
add
add
add
add
dec
mov
clc
repnz
nop
nop
jae
pop
sbb
add
add
push
clc
repnz
nop
nop
jae
aam
add
add
add
cmpsl
lea
push
mov
xchg
ret
add
lahf
add
add
clc
repnz
nop
nop
jae
lcall
add
xchg
xorb
adc
repnz
nop
nop
jae
add
mov
adc
out
sbb
clc
repnz
nop
nop
jae
mov
aam
add
loop
push
push
clc
repnz
nop
nop
jae
mov
nop
pop
jnp
add
add
clc
repnz
nop
nop
jae
mov
sub
and
in
add
popl
push
mov
leave
nop
jmp
and
jbe
adc
adc
inc
add
bound
add
add
cli
mov
xchg
ret
push
test
add
add
clc
repnz
nop
nop
jae
add
push
sub
lahf
insb
add
add
mov
repnz
add
inc
clc
nop
push
mov
leave
nop
jmp
add
add
andb
ret
clc
repnz
nop
nop
jae
add
add
sbb
adc
cli
dec
cmp
nop
push
mov
leave
nop
jmp
and
jbe
add
out
int3
jo
enter
add
mov
clc
repnz
nop
nop
jae
daa
movsb
fildl
add
sub
add
clc
repnz
nop
nop
jae
add
nop
filds
not
clc
repnz
nop
nop
jae
add
sub
ljmp
jne
clc
repnz
nop
nop
jae
sbbb
and
nop
push
mov
leave
nop
jmp
add
sub
sub
mov
clc
repnz
nop
nop
jae
lods
add
add
sub
popa
loop
xchg
je
clc
repnz
nop
nop
jae
lods
mov
adc
sti
add
clc
repnz
nop
nop
jae
push
add
add
or
out
add
xchg
add
repnz
nop
nop
jae
filds
andl
add
nop
push
mov
leave
nop
jmp
mov
add
add
call
clc
repnz
nop
nop
jae
sub
add
fisttps
cld
nop
nop
jae
add
in
push
mov
push
or
add
repnz
nop
nop
jae
add
insb
jbe
movsb
orl
xchg
pop
add
add
xchg
setp
add
fwait
mov
clc
repnz
nop
nop
jae
add
add
lods
and
clc
repnz
nop
nop
jae
lcall
mov
push
mov
xchg
ret
add
jbe
add
test
test
nop
push
mov
leave
nop
jmp
add
add
repnz
nop
nop
jae
mov
cmpsb
popf
out
add
push
push
mov
xchg
ret
sbb
mov
add
testb
sar
cld
nop
nop
jae
sub
add
dec
add
add
stos
mov
inc
add
add
lcall
les
and
clc
repnz
nop
nop
jae
add
pushf
add
mov
clc
repnz
nop
nop
jae
pop
jnp
add
add
outsl
pushl
clc
repnz
nop
nop
jae
add
mov
jl
or
add
repnz
nop
nop
jae
mov
add
mov
leave
nop
jmp
add
add
mov
adc
repnz
nop
nop
jae
pop
add
push
add
add
repnz
nop
nop
jae
add
or
and
xchg
dec
nop
push
mov
leave
nop
jmp
insb
in
add
add
add
jnp
fistl
nop
jmp
in
lcall
mov
pop
add
mov
sar
repnz
nop
nop
jae
add
add
add
rol
out
clc
repnz
nop
nop
jae
mov
out
adc
mov
fld1
push
mov
xchg
ret
add
add
mov
add
mov
clc
repnz
nop
nop
jae
jnp
aam
add
add
stos
sbb
in
add
clc
repnz
nop
nop
jae
add
mov
mov
add
nop
push
mov
leave
nop
jmp
lcall
cmpb
clc
repnz
nop
nop
jae
adc
dec
mov
clc
repnz
nop
nop
jae
add
add
insb
push
mov
add
clc
repnz
nop
nop
jae
bound
add
add
daa
stos
jge
inc
and
repnz
nop
nop
jae
cmp
nop
mov
jl
sbb
repnz
nop
nop
jae
test
pushf
add
push
mov
leave
nop
jmp
gs
adc
add
rorl
mov
xchg
ret
adc
movsb
fstpt
mov
mov
leave
nop
jmp
or
add
add
push
inc
add
push
add
addr16
je
sbb
repnz
nop
nop
jae
insb
aam
add
mov
in
ret
add
nop
push
mov
leave
nop
jmp
movsb
fbld
cld
sbb
add
add
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
add
add
loop
add
movsb
add
incl
pop
nop
bound
add
add
bound
add
add
adc
loopne
push
mov
xchg
ret
and
lcall
add
push
mov
xchg
ret
add
mov
clc
repnz
nop
nop
jae
cmp
add
add
mov
dec
imul
nop
jae
or
aam
mov
clc
repnz
nop
nop
jae
or
jbe
stos
pop
clc
repnz
nop
nop
jae
adc
jnp
mov
push
add
mov
xchg
ret
push
add
in
pop
movsb
add
test
add
idivb
cld
nop
nop
jae
add
outsb
mov
add
sbb
cmp
repnz
nop
nop
jae
mov
add
sbb
mov
and
clc
repnz
nop
nop
jae
add
jne
movsb
clc
repnz
nop
nop
jae
add
push
mov
add
add
fwait
clc
repnz
nop
nop
jae
add
add
or
sbb
and
mov
xchg
ret
add
add
addb
add
adc
pop
push
push
mov
xchg
ret
cmp
add
add
add
fld1
clc
repnz
nop
nop
jae
in
mov
add
add
nop
nop
jae
addb
jbe
and
and
daa
jne
jne
clc
repnz
nop
nop
jae
adc
fbld
cmp
test
clc
repnz
nop
nop
jae
add
add
lcall
clc
repnz
nop
nop
jae
add
add
add
add
addr16
nop
push
mov
leave
nop
jmp
inc
add
add
ret
mov
clc
repnz
nop
nop
jae
add
lldt
rep
clc
repnz
nop
nop
jae
mov
mov
pop
add
push
mov
leave
nop
jmp
add
movsb
or
fists
jmp
cld
nop
nop
jae
adc
add
push
add
loope
push
mov
xchg
ret
add
add
insb
aam
add
add
clc
repnz
nop
nop
jae
add
add
add
mov
xchg
ret
xchg
mov
add
add
mov
cld
nop
nop
jae
add
add
aam
add
pop
nop
push
mov
leave
nop
jmp
and
add
fistps
add
out
sub
clc
repnz
nop
nop
jae
movsb
add
push
add
push
mov
xchg
ret
add
add
add
add
push
clc
repnz
nop
nop
jae
add
add
add
movsb
mov
add
add
sbb
clc
repnz
nop
nop
jae
add
add
lahf
loop
cmp
rcrl
repz
cmp
ret
and
add
add
sub
pushf
insb
psubd
clc
repnz
nop
nop
jae
mov
clc
popf
push
push
mov
xchg
ret
or
movsb
add
add
cmp
daa
add
add
mov
add
and
maxps
add
clc
repnz
nop
nop
jae
nop
xchg
add
and
jnp
sub
lea
clc
repnz
nop
nop
jae
insb
jnp
add
jnp
loop
add
repnz
nop
nop
jae
gs
and
filds
mov
pause
push
mov
leave
nop
jmp
popa
add
add
in
add
sub
test
add
test
fcos
call
nop
jmp
xchg
or
inc
or
clc
repnz
nop
nop
jae
sub
nop
nop
jno
jmp
xabort
cld
nop
nop
jae
loop
daa
add
add
cmpsb
add
nop
nop
jae
bound
mov
jbe
jbe
or
add
push
mov
xchg
ret
loop
push
add
push
add
lcall
clc
repnz
nop
nop
jae
cld
and
add
add
push
clc
repnz
nop
nop
jae
movsb
add
mov
add
adc
clc
repnz
nop
nop
jae
add
add
add
and
outsb
add
call
clc
repnz
nop
nop
jae
add
add
mov
call
clc
repnz
nop
nop
jae
add
add
mul
mov
clc
repnz
nop
nop
jae
loop
push
add
fimuls
push
clc
repnz
nop
nop
jae
in
add
add
add
mov
nop
push
mov
leave
nop
jmp
pop
jnp
adc
sbb
inc
add
dec
push
mov
xchg
ret
aam
cmpsb
and
and
add
lea
clc
repnz
nop
nop
jae
cmp
cmpsb
add
adc
mov
xchg
ret
movsb
mov
cmpsb
add
sbb
mov
mov
xchg
ret
fisttpl
add
add
pushf
mov
xor
jmp
add
add
add
push
fldt
lcall
clc
repnz
nop
nop
jae
add
bound
add
add
add
jmp
nop
nop
jae
add
loop
add
sbb
clc
repnz
nop
nop
jae
orb
add
sub
and
pop
push
clc
repnz
nop
nop
jae
add
lahf
pushf
add
movsb
loop
adc
mov
clc
repnz
nop
nop
jae
pop
mov
mov
push
mov
xchg
ret
in
add
adc
add
add
gs
mov
gs
repnz
nop
nop
jae
add
add
add
add
jmp
clc
repnz
nop
nop
jae
add
popa
insb
nop
add
add
roll
repnz
nop
nop
jae
jnp
add
aam
add
add
sti
nop
push
mov
leave
nop
jmp
cmp
add
add
add
jae
les
add
add
repnz
nop
nop
jae
cld
add
xchg
lcall
fbstp
sar
repnz
nop
nop
jae
in
and
adc
add
stos
clc
repnz
nop
nop
jae
gs
sub
add
add
clc
repnz
nop
nop
jae
movsb
and
add
push
and
push
add
pop
push
mov
xchg
ret
add
popf
or
add
les
movb
cld
je
add
push
and
add
add
push
clc
repnz
nop
nop
jae
add
mov
movsb
add
push
push
mov
xchg
ret
add
and
or
gs
sbb
movsb
sti
lcall
add
aam
in
insb
add
add
xorb
xor
sbb
repnz
nop
nop
jae
and
add
add
nop
nop
jae
out
shrd
mov
add
push
mov
xchg
ret
mov
add
push
add
repnz
nop
nop
jae
sbb
adc
add
insl
mov
push
mov
xchg
ret
add
add
sbb
dec
add
clc
repnz
nop
nop
jae
add
bound
add
clc
repnz
nop
nop
jae
pop
push
pop
add
add
push
push
mov
xchg
ret
outsb
and
fildl
adc
seto
in
leave
nop
jmp
aam
add
popa
add
mov
push
mov
leave
nop
jmp
add
pop
inc
add
outsb
addl
cld
or
in
leave
nop
jmp
loop
movsb
add
out
add
nop
nop
jae
add
filds
add
add
movsb
jbe
jne
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
add
popa
add
daa
jbe
xchg
add
mov
xchg
ret
add
add
add
add
repnz
nop
nop
jae
jbe
jbe
and
add
call
inc
add
add
aam
sbb
xchg
add
jne
clc
repnz
nop
nop
jae
outsb
add
add
leave
push
mov
scas
jmp
stos
add
icebp
roll
adc
stos
sub
clc
repnz
nop
nop
jae
mov
add
repnz
nop
nop
jae
andb
add
test
rclb
rolb
and
add
mov
adc
into
pop
add
and
js
adc
repnz
nop
nop
jae
add
popf
add
add
clc
repnz
nop
nop
jae
add
mov
or
clc
repnz
nop
nop
jae
add
mov
and
mov
xchg
ret
or
add
adc
adcl
cld
nop
nop
jae
fildl
add
jbe
add
xor
clc
repnz
nop
nop
jae
add
lahf
add
popf
cmpsb
mov
mov
xchg
ret
and
mov
pop
add
add
add
nop
jae
daa
sub
add
lahf
add
clc
repnz
nop
nop
jae
add
bound
add
add
cld
nop
nop
jae
add
add
add
add
sbb
push
add
clc
repnz
nop
nop
jae
add
insb
fistpll
outsb
nop
add
add
repnz
nop
nop
jae
add
and
sbb
pop
add
sbb
inc
mov
push
mov
xchg
ret
add
mov
push
jbe
add
add
mov
cld
nop
nop
jae
add
add
add
mov
repnz
nop
nop
jae
bound
add
movzwl
clc
repnz
nop
nop
jae
cld
pop
add
add
das
cmp
nop
push
mov
leave
nop
jmp
add
push
daa
aam
stos
rep
clc
repnz
nop
nop
jae
and
add
sbb
add
adc
ljmp
cld
nop
nop
jae
add
add
mov
add
repnz
nop
nop
jae
add
and
add
and
nop
nop
jae
lods
daa
lods
add
add
add
cld
nop
nop
jae
add
nop
add
add
push
mov
out
enter
jno
pop
das
add
mov
add
sbb
mov
add
add
insl
stc
cld
scas
sub
out
and
sub
lret
repz
add
daa
jb
aas
sub
aas
pop
mov
mov
mov
cmp
mov
sbb
jl
je
iret
add
aaa
mov
mov
mov
add
mov
and
mov
add
push
xchg
add
push
add
cwtl
lds
hlt
lahf
jge
add
sti
pop
add
pop
add
rcr
mov
add
data16
and
data16
pop
shrb
add
mov
lock
and
push
dec
xchg
add
pop
mov
add
rcll
repnz
push
out
cltd
mov
hlt
mov
or
lcall
xor
les
inc
stos
adc
pop
in
inc
add
leave
push
cld
out
es
adc
jno
xchg
mov
aas
test
div
daa
fisttpl
lods
shl
add
add
push
mov
mov
mov
add
rorl
add
xchg
xchg
jb
cmp
mov
adc
mov
lods
in
orl
pop
jl
popf
sti
lret
int3
adc
xor
mov
jle
mov
decl
add
daa
sub
lods
dec
inc
add
cvtdq2ps
xchg
test
loope
shll
jno
add
and
aad
and
pop
sbb
add
dec
add
add
cld
sub
nop
and
cmp
stos
in
lcall
gs
xchg
into
in
add
inc
add
arpl
add
xorb
add
faddp
rorl
add
add
xor
add
mov
mov
add
jne
add
add
mov
stos
add
dec
xchg
sbb
xchg
std
adc
mov
outsb
add
sbb
pop
mov
add
pop
data16
int
icebp
xchg
add
pop
jae
popf
xchg
mov
add
mov
imul
add
add
fcomi
cmc
arpl
hlt
push
pop
add
inc
shll
adc
je
jbe
fcoms
add
add
mov
add
mov
fcompl
lds
orl
add
add
xor
insl
std
lea
add
adc
mov
pop
add
cmp
add
xchg
ret
xchg
jae
push
add
xchg
sub
jne
xchg
ja
sarl
inc
cltd
or
push
mov
add
pushf
sbb
rorb
adc
jae
jbe
add
loopne
cmpsb
sahf
pop
aaa
sbb
icebp
in
imul
add
add
add
fisubl
js
xchg
int3
cmp
inc
sub
cmpsb
out
adc
add
push
add
mov
mov
add
jmp
out
not
ja
add
cmp
cmp
cmp
sub
dec
fstl
inc
pop
and
mov
xorb
insl
sub
mov
add
add
add
add
cmp
js
adc
loopne
add
add
cld
pop
add
inc
dec
add
push
cmp
cmpb
push
sbb
gs
in
data16
jnp
add
jge
int3
pop
adc
inc
in
fcoms
cmpb
inc
jns
fildll
popa
xchg
mov
mov
mov
rcrb
out
iret
popf
and
stos
xchg
rcl
push
and
inc
push
add
mov
rclb
sub
and
lahf
cmpsl
out
mov
je
fdivr
xor
inc
add
nop
fisubl
push
xchg
add
lret
add
out
mov
ja
mov
adcl
popf
out
aad
add
add
fdivl
fsubrl
pushl
adc
sub
nop
popa
js
jmp
ja
jb
or
cmp
and
add
pop
sub
and
cmp
test
shll
out
leave
mov
add
add
add
push
jl
sti
nop
movsl
hlt
cmpsb
mov
rclb
add
add
fsubrl
dec
add
cli
fidivs
out
ljmp
cmp
inc
xor
dec
push
fwait
scas
lock
add
add
add
lods
mov
add
and
mov
push
repz
pop
jge
add
test
test
add
jns
push
add
xchg
arpl
or
lahf
ret
add
cli
dec
ljmp
add
lahf
pop
aaa
cmp
sub
or
add
fst
push
jne
shlb
and
add
add
push
pop
sbb
out
outsl
in
aad
add
push
add
inc
daa
shrb
lods
xchg
jg
add
add
push
add
push
add
test
add
cmp
imul
add
mov
pusha
add
insl
je
jno
add
add
in
lret
jns
xchg
push
add
add
ja
or
in
call
mov
jae
fdivrs
stos
lock
fisubrl
add
add
adc
inc
add
les
add
cmc
push
add
mov
sbb
rol
out
lods
es
invd
add
ljmp
sub
jecxz
and
data16
add
add
popa
xchg
out
hlt
push
add
add
add
and
sub
icebp
call
add
xchg
push
add
jne
jle
xchg
push
addr16
mov
or
and
cmpsb
add
cmpsl
test
movsl
scas
push
add
rcr
stos
and
add
add
inc
add
mov
jmp
jmp
aam
fldt
mov
add
scas
xchg
subl
xor
loopne
add
pusha
add
sti
xor
lods
and
leave
sub
xchg
call
ret
jg
jg
add
add
add
cld
adc
add
sub
aaa
inc
pop
sti
add
push
add
jmp
mov
adc
fs
cld
cmp
fldcw
test
int
dec
dec
lods
push
add
cmc
cmp
add
and
jo
adc
xor
sub
addps
nop
add
add
ret
dec
add
movsl
mov
shrl
add
push
and
add
add
in
mov
xchg
cmp
and
push
jno
jno
shll
and
pop
movsb
mov
rcrl
test
pop
add
mov
add
add
sub
sbb
popa
pop
add
jne
add
aam
mov
add
pop
mov
ja
add
dec
inc
std
dec
add
movsl
data16
sub
cltd
movsb
inc
in
jp
or
add
lret
imul
and
push
add
xchg
jnp
sub
rclb
imulb
and
pop
or
add
jae
icebp
int
inc
add
xchg
fwait
dec
add
adcb
xor
cltd
xchg
jg
outsl
fwait
out
pop
add
mov
repz
mov
mov
loop
mov
xchg
lds
add
cli
and
or
jb
adcb
sbb
scas
xchg
inc
add
add
push
and
out
add
add
repz
and
push
add
inc
or
mov
add
push
add
pop
add
inc
add
add
push
add
add
add
mov
pop
xchg
dec
add
add
clc
xlat
ret
mov
inc
pop
add
inc
aad
mov
cmpsb
int
xchg
push
test
mov
jo
jb
out
fsubr
xchg
xchg
mov
pop
mov
sub
adc
add
sbb
outsb
add
sbb
mov
add
mov
or
aaa
or
and
hlt
push
add
sbb
jecxz
add
jnp
dec
out
sub
push
add
push
add
pop
add
add
push
add
stc
add
iret
sbb
dec
add
add
adc
add
aaa
push
pusha
add
mov
add
add
cld
dec
add
pusha
add
add
outsl
std
fstl
adc
jb
fsubrl
mov
inc
movsb
mulb
and
cwtl
cltd
or
xchg
jge
add
pop
leave
iret
repnz
dec
add
mov
add
test
add
add
sbb
in
cwtl
mov
pop
add
in
mov
xor
lahf
call
add
loop
jbe
cmpsl
jne
or
stos
xchg
lods
cli
pop
sbb
add
fisttps
sub
sub
add
popa
outsb
add
or
fwait
add
inc
xchg
cmp
mov
dec
adc
loop
popa
push
scas
dec
or
outsl
out
adc
lcall
shll
add
jne
mov
and
test
jmp
cmp
enter
or
lock
jb
xchg
test
aas
inc
add
push
add
mov
sbb
push
xor
fnstsw
jnp
add
lret
push
and
leave
dec
dec
in
xchg
sub
xor
loopne
sbb
jne
add
testb
mov
movsl
and
mov
push
add
dec
add
ret
pop
mov
jo
xchg
fxch
sti
mov
add
add
xor
cmpsl
ljmp
jb
jp
imul
push
pop
push
add
jp
or
and
and
mov
jb
add
cmp
add
add
add
outsb
add
push
xor
rdtsc
cltd
pop
add
scas
push
add
add
add
add
add
mov
movsl
fadd
jnp
mov
add
xlat
loop
pop
rcr
fwait
lds
leave
inc
add
add
sbb
add
add
into
jg
loop
inc
add
dec
cmp
jno
push
lds
add
add
add
add
or
add
add
add
add
add
mov
push
push
test
xchg
push
add
or
leave
cmp
inc
sbb
mov
jge
inc
dec
mov
inc
lods
xchg
jp
push
add
add
popa
pop
add
iret
xchg
cltd
mov
into
add
add
add
add
ja
mov
mov
repnz
aaa
aad
add
shr
sbb
ret
mov
add
sbb
or
xchg
sub
sbb
and
dec
inc
add
add
add
xchg
je
cltd
mov
lcall
add
mov
add
scas
scas
jnp
cmpsb
dec
gs
cmp
insb
add
lock
jl
mov
xchg
xor
inc
add
inc
inc
add
and
rcrb
add
inc
fdivrs
add
jg
test
add
insb
add
add
shlb
das
mov
mov
ja
push
add
mov
pusha
add
add
add
shlb
inc
movsb
cli
loop
add
dec
mov
sbb
xor
out
cmpsl
out
mov
adc
xor
jns
adc
add
test
cmp
mov
rclb
mov
loope
adc
adcb
push
sti
call
push
test
inc
push
into
sub
lahf
shlb
icebp
inc
mov
and
xor
adc
cwtl
lahf
daa
push
sub
or
add
cld
xor
mov
into
mov
pop
add
add
add
add
sbb
add
sbb
or
cmpl
add
outsb
add
dec
in
inc
call
nop
adc
stos
cli
out
or
add
rcl
mov
sub
pushl
jle
xor
stos
cld
mov
push
add
pushf
add
mov
add
add
lods
mov
jg
xor
sbb
sbb
add
out
test
adc
lods
adc
jne
sub
jno
outsb
add
dec
add
fdivs
or
xchg
add
push
pop
mov
sbb
xor
into
jp
not
test
sbb
jmp
sub
dec
arpl
push
add
lret
cmpsb
icebp
fbstp
add
cwtl
les
loop
mov
push
add
adcl
lods
cmp
stc
xchg
inc
add
add
add
add
mov
or
add
shll
inc
add
mov
mov
add
add
mov
or
xor
jo
psubd
lods
mov
or
push
add
in
pop
lahf
add
int
std
mov
add
xchg
out
clc
xchg
xchg
adc
divl
sbb
push
lods
pop
add
in
add
aad
add
in
pop
add
dec
mov
add
pop
sbb
pop
data16
inc
sub
lahf
lahf
pop
sub
jo
sbb
inc
rorl
icebp
imul
add
mov
add
test
leave
out
xor
cmp
add
enter
sahf
dec
add
aam
sbbl
add
fdivrl
rcl
xlat
or
movsb
xor
dec
add
adc
push
add
pop
nop
and
push
add
hlt
lret
int
scas
jo
lods
insl
hlt
mov
add
add
lds
add
cmpsb
fs
insl
scas
adc
push
add
inc
adc
repz
add
mov
iret
mov
add
xchg
mov
pushf
xor
loopne
add
jns
dec
add
add
push
add
pinsrw
mov
mov
test
repz
icebp
outsl
rorb
pop
adc
rolb
mov
insl
push
sbb
add
out
cmpsl
mov
ud2
mov
cmp
test
xchg
push
add
dec
mov
push
jmp
popa
push
das
divb
popf
cld
add
or
push
cmp
jbe
lahf
adcb
fwait
cmp
sahf
and
dec
add
xchg
fildll
aad
add
loope
add
add
dec
mov
cwtl
popa
push
clc
imul
nop
out
out
mov
add
jbe
mov
fldl
add
sub
ljmp
gs
add
xor
or
lods
inc
add
add
sbb
push
add
movl
sbb
lcall
add
scas
jb
xor
xor
add
push
add
out
outsl
mov
add
loope
add
add
add
int
add
and
or
jb
cltd
adc
test
add
enter
cmp
jl
pushl
das
sbb
add
loop
and
push
mov
jne
mov
das
or
lock
jb
aaa
jge
add
push
sub
jg
inc
clc
pusha
add
sub
xor
js
sar
int
push
dec
int3
mov
pop
xor
out
pop
xor
push
bound
inc
sbb
jo
imul
xchg
mov
imul
jp
mov
dec
inc
jg
sbb
add
xor
je
and
insb
add
adc
inc
jne
inc
add
xchg
fsubrl
add
iret
mov
add
push
add
add
jns
test
sub
ret
add
add
mov
shll
adcb
inc
add
test
nop
lods
stos
pop
jl
xchg
fsubs
aas
push
push
add
mov
xor
les
add
add
cmp
add
xchg
add
jae
add
add
jp
enter
jecxz
add
pop
and
outsl
xor
iret
push
out
ljmp
push
xorl
test
add
xchg
adc
in
xchg
pop
sahf
fimuls
jno
add
and
test
cmpl
popa
stos
aas
jbe
mov
add
cmp
in
push
add
aaa
dec
jmp
add
jge
jl
movsl
fwait
xchg
or
adc
push
add
jne
outsl
add
test
or
push
inc
add
fidivrs
add
mov
aaa
mov
int
lcall
sub
mov
add
add
jo
push
add
adc
dec
add
lds
daa
adc
add
out
repnz
lods
xchg
cs
adc
add
add
mov
inc
or
xor
jg
sub
mov
add
jo
pop
add
sarb
add
dec
add
outsb
add
jle
pop
add
into
push
add
add
and
mov
jl
pop
add
inc
or
shr
jae
pop
add
jl
lret
adc
jo
inc
or
lret
add
add
int
add
mov
add
lods
arpl
add
add
inc
xor
adc
jnp
push
mov
jnp
mov
dec
nop
test
add
add
adc
mov
add
inc
add
arpl
add
rolb
add
sbb
sbb
xchg
jl
pop
inc
add
or
test
add
jnp
add
and
mov
add
sti
add
add
dec
cs
and
fcompl
xor
ret
mov
popa
or
add
in
push
add
cmp
cmp
and
adc
inc
add
repz
sbb
loope
mov
xchg
out
cmc
out
neg
ja
cmp
out
mov
mov
add
flds
aaa
insl
inc
outsb
add
movsb
sub
and
mov
xchg
std
scas
or
repnz
lahf
pushf
xchg
in
or
dec
xchg
push
add
sub
dec
movsl
xor
mov
aaa
scas
pop
add
mov
lds
add
data16
add
sbb
add
sbb
push
inc
mov
mov
add
xchg
xor
call
pop
mov
call
lea
add
jb
sub
test
scas
imul
hlt
out
lcall
sub
cmp
sub
lcall
mov
sub
or
std
fwait
xchg
sti
aad
add
xlat
scas
pushf
cli
push
add
cltd
push
add
repnz
xchg
bndstx
mov
cmc
mov
mov
mov
add
stos
ja
test
adc
ja
jecxz
cmp
cmp
rsqrtps
xor
in
mov
out
push
aas
xchg
xchg
mov
add
add
mov
add
add
add
adc
xchg
cmp
arpl
add
xchg
je
fldt
data16
inc
das
nop
notb
inc
add
idivb
sub
sbb
add
mov
add
jecxz
stc
out
add
add
add
add
add
fsubs
mov
outsb
add
add
sbb
aas
test
mov
add
jae
add
fs
sub
pop
nop
sbbl
imul
rcrl
add
xorl
lods
jns
jns
xor
das
inc
sub
aad
es
adc
inc
add
sub
mov
pusha
add
sub
out
sarl
lock
outsb
add
pushf
adc
mov
dec
adcl
cmp
lods
cpuid
imul
xchg
push
add
xor
add
mov
xor
and
inc
cmpsl
mov
add
mov
es
cwtl
xor
xchg
pusha
add
add
sbb
add
xorb
add
sub
adc
cmp
loop
xchg
xor
add
fdivl
add
popa
jecxz
in
hlt
pop
add
cmp
push
fldcw
ja
or
dec
sbb
add
roll
mov
add
inc
add
add
lods
mov
jb
push
add
add
mov
outsl
cld
sti
mov
rorb
jne
adc
aam
xor
dec
add
loope
mov
popa
daa
mov
shlb
mov
sti
mov
hlt
repnz
ds
dec
push
add
pusha
add
push
inc
negb
cmp
add
mov
push
adc
test
divb
popa
stos
mov
shl
and
mov
adc
inc
fs
or
add
mov
loop
add
cmpsl
or
add
dec
add
push
add
adc
cltd
sbbl
fistl
add
cmp
add
add
in
dec
add
xchg
add
sbb
pop
outsl
mov
aas
lock
add
sbb
add
add
std
pop
add
add
add
data16
popa
cmpsl
pop
add
sub
xor
sub
out
data16
addr16
add
sbb
adc
pusha
add
popf
and
mov
push
add
call
cmp
nop
scas
xor
or
sbbb
repz
int3
pop
add
and
mov
pushf
in
in
loope
daa
scas
jbe
cltd
add
in
mov
data16
xchg
lods
hlt
xor
rorl
ljmp
push
cmc
cmpsl
cmpsb
neg
ret
jno
push
add
aad
add
arpl
nop
int
dec
add
ret
adc
mov
dec
add
sbb
mov
jge
add
add
je
lcall
add
dec
push
add
stos
and
in
ja
sub
and
xchg
xor
push
add
push
jp
lds
insb
add
shl
add
stos
xchg
dec
add
add
mov
add
rcrl
insl
insl
rolb
add
test
and
xchg
fucomi
add
xchg
jg
scas
aaa
inc
loopne
jl
xchg
or
or
loopne
add
mov
int
pop
mov
fisttpll
add
ljmp
jle
cmpsb
xor
add
lret
add
jb
sbb
mov
push
mov
std
push
add
cmc
ds
psubd
cmp
jp
jg
add
out
dec
inc
add
add
add
add
xchg
dec
mov
add
cmpsl
rorb
imul
push
add
pushl
fbstp
dec
add
popa
loop
xchg
pop
jg
cmpsl
out
cmp
adc
js
inc
add
add
xchg
ja
lock
push
fisttpl
jmp
add
mov
sub
orl
add
add
clc
jle
xor
pop
lret
add
sbb
div
addr16
pop
add
insl
mov
iret
mov
mov
cmp
pop
add
hlt
inc
add
fidivl
cli
fadd
dec
and
pusha
add
cmpsl
out
aad
xorl
sub
pop
add
mov
add
loope
test
stc
and
stos
or
call
mov
jne
add
add
gs
xchg
inc
add
out
addr16
push
add
notb
pop
add
stc
push
jmp
std
sub
loope
add
idivl
lahf
sub
add
xchg
pop
add
push
add
outsb
add
bound
sbb
cmp
add
sbb
pop
push
loope
dec
add
pop
aad
add
fcmovb
jmp
pop
cld
and
and
cmp
std
inc
rcrl
les
xor
cmpsb
sub
insl
add
sub
mov
add
not
xchg
sbb
xchg
add
outsl
data16
into
push
add
lret
lahf
pusha
add
outsl
inc
add
clc
shll
dec
cmpl
xchg
shl
and
sbb
loope
rclb
add
add
add
mov
inc
xor
inc
add
jmp
or
pop
add
sub
adc
push
add
scas
add
xor
fstp
add
push
add
loop
hlt
scas
jae
iret
adc
out
loopne
imul
daa
in
add
test
inc
dec
add
fmuls
dec
add
xchg
cltd
test
scas
push
add
pop
sub
add
mov
loopne
add
imul
rcrl
jg
or
leave
daa
scas
xor
add
add
add
out
out
loope
add
push
add
jg
add
push
rorl
add
and
xor
sti
adc
repnz
inc
add
adc
add
add
addr16
mov
add
loopne
dec
mov
pop
add
add
pop
fstpl
cmp
test
add
add
add
rcr
lods
or
push
add
ret
outsb
add
int3
xorl
test
jp
insb
add
add
add
nop
jl
dec
add
mov
clc
rol
push
add
test
add
add
inc
add
add
shrl
add
pop
add
mov
test
add
cmpsb
jae
add
xor
xchg
adc
pop
lock
adc
popa
sbb
fdivr
lods
or
divb
mov
shrb
mov
xchg
decl
scas
les
mov
add
add
xor
or
imul
adc
pop
add
pop
add
imul
out
mov
xlat
cmpsl
sbb
test
cwtl
test
fnstcw
cld
jge
add
imul
jg
sahf
fwait
adc
mov
jl
iret
jnp
mov
lods
arpl
add
xchg
mov
adc
or
pushf
mov
add
mov
add
cmpsb
ljmp
add
add
mov
lds
call
add
mov
sbb
push
inc
mov
cmp
insl
xchg
fisttpl
jne
xor
sub
stos
cmpsb
push
push
ret
rolb
push
aad
adc
popa
add
dec
add
data16
pxor
add
icebp
jge
mov
push
add
jecxz
je
mov
aam
mov
add
dec
daa
pop
push
add
imul
add
add
pusha
add
mov
add
xchg
loope
and
ja
jmp
sti
je
cmpl
add
pop
add
bound
scas
lahf
mov
add
mull
add
sub
call
lea
add
lods
push
add
add
ret
jne
orb
add
add
cwtl
adc
insb
add
add
adcl
and
add
sub
xor
inc
and
push
outsb
add
dec
or
data16
add
jb
repz
add
mov
add
and
push
je
das
je
pusha
add
inc
add
mov
add
cli
push
jns
add
jb
mov
xor
rorb
cmp
mov
add
sbb
aaa
ljmp
lahf
mov
add
jmp
shrl
pop
jge
inc
add
add
inc
xor
xor
pop
push
ja
sar
add
add
mov
ret
jmp
inc
add
sbb
xor
rep
dec
lock
push
dec
add
add
add
add
jo
fwait
mov
add
outsb
add
test
add
add
add
loopne
pop
aam
adc
xor
jbe
aad
rorb
rorl
xor
sub
test
lods
in
daa
pop
push
add
push
lea
cwtl
dec
fcmovnb
aam
gs
push
cmp
push
mov
add
add
fisttpl
add
push
add
inc
add
dec
jl
les
and
xchg
pop
imul
sbb
bound
les
sub
mov
or
call
add
cmpsb
inc
sub
popa
mov
add
stc
mov
das
jne
bound
call
sahf
ja
add
add
and
add
rcl
adc
add
jnp
jle
movsl
sub
mov
push
add
inc
add
push
and
add
push
popf
test
xor
add
add
sbb
or
sbb
ds
or
jl
js
sub
lahf
lock
rorl
add
cmp
clc
and
add
mov
add
and
and
repz
shll
jle
and
add
test
pop
lock
outsb
add
push
add
xor
lret
or
xor
jge
cmpsl
insb
add
add
xor
push
scas
in
cmc
dec
sub
jnp
outsb
add
fcompl
sub
add
add
loopne
pop
xchg
sarl
sub
aad
push
add
pop
fstp
mov
push
add
add
pop
add
adc
popa
push
add
arpl
adc
lods
aam
dec
add
icebp
jle
shl
push
jecxz
js
jge
repz
add
std
sar
xchg
and
add
or
jo
and
bound
sub
out
insl
aaa
mov
lods
in
ljmp
test
add
pushf
jns
aam
add
add
cmp
fsubs
out
mov
pop
add
pusha
add
ret
jg
add
cmp
in
jo
lods
sbb
jns
add
add
ret
std
call
mov
popa
divl
add
popf
jecxz
add
push
add
jno
push
add
adc
cmpl
add
mov
outsl
stos
mov
and
xlat
insb
add
add
data16
popf
mov
adc
lods
divb
clc
sbb
loopne
rcll
xchg
decb
sub
rorl
add
push
add
add
sub
add
add
cmp
jns
add
inc
mov
pop
add
mov
hlt
pop
mov
test
popa
mov
std
lods
add
dec
add
cmp
lods
or
add
shr
pop
pop
ret
fldenv
add
sbb
cli
adc
add
ret
push
cmp
lret
or
jns
push
add
mov
xor
sub
mov
jecxz
imul
adc
negl
lock
sarl
cmp
out
mov
and
sbb
mov
lahf
ljmp
ret
xchg
xor
int
push
add
mov
sbb
pusha
add
ret
inc
add
lds
add
lret
add
aaa
jnp
fwait
aaa
loope
loop
add
add
or
sub
stos
cmc
and
test
add
mov
push
lcall
aam
add
push
sub
test
repnz
add
add
push
inc
add
add
or
add
add
cltd
mov
dec
xchg
inc
push
in
repnz
das
outsb
add
add
popa
adc
rorb
adc
addr16
sub
je
jg
inc
add
add
jle
add
adc
xor
add
arpl
sub
pop
cmp
mov
add
jbe
incl
xor
rcrb
inc
dec
push
add
add
adc
dec
add
push
mov
add
adc
and
cltd
pop
lcall
sbb
xchg
xor
inc
and
xor
inc
out
lret
mov
add
ret
cwtl
mov
ljmp
insb
add
arpl
add
add
jle
jnp
je
pop
mov
std
xor
add
inc
fldt
add
add
add
add
enter
add
add
push
les
push
add
inc
add
lock
int3
push
add
or
ja
adc
push
add
int3
shrl
add
pop
push
add
cmp
and
push
lcall
sbb
sub
xchg
mov
aas
lea
ljmp
jge
add
add
push
out
add
pop
add
cmpsl
jo
mov
push
add
push
dec
out
dec
add
shll
je
and
jmp
fldln2
pop
dec
add
inc
add
roll
pop
push
add
in
leave
lods
xor
sbb
outsl
cmp
inc
mov
adc
add
shrl
inc
lret
test
mov
xor
dec
dec
add
mov
add
add
push
add
jp
and
add
jmp
push
add
lods
xor
orl
nop
pop
outsb
add
mov
lret
add
cli
mov
mov
mov
fdivrs
mov
rclb
push
add
and
add
inc
push
add
push
add
call
jle
std
jg
add
xchg
jnp
add
adc
mov
ds
push
add
mov
add
pop
test
dec
mov
mov
xor
add
add
aam
add
add
lods
sahf
sub
add
add
dec
insl
or
pop
bswap
dec
add
pushf
mov
mov
add
loopne
add
leave
jno
ljmp
nop
and
mov
arpl
shrl
aas
mov
adc
in
xor
sub
pop
inc
add
rcrl
ja
add
add
loopne
jo
add
adc
add
mov
ss
push
add
xchg
jg
add
iret
jle
or
push
add
int
xchg
cmc
inc
int
mov
jge
jns
dec
add
add
orl
sbb
insb
add
out
add
pop
add
imul
add
cmp
mov
xor
popa
push
add
xor
in
aad
add
jo
inc
push
add
arpl
add
and
xor
add
daa
push
test
add
scas
mov
inc
dec
xchg
mov
ljmp
xchg
sub
sub
xchg
clc
call
mov
add
fimull
push
add
sub
add
jns
lock
loope
cmp
add
cmc
faddl
addr16
add
xchg
mov
add
jo
fwait
xchg
xor
sub
or
dec
add
add
adc
mov
ja
add
add
mov
add
imull
sub
and
shll
add
pop
pop
imul
add
add
or
lret
mov
ja
nop
push
add
rcll
pop
add
insb
add
sbb
pop
repnz
mov
pop
and
pushf
mov
movsl
xor
addr16
int
std
test
fadd
test
or
adc
mov
divb
add
push
and
les
test
adc
add
out
das
in
sbb
and
dec
scas
mov
add
insb
add
daa
pop
popf
push
xor
pop
mov
inc
icebp
mov
fdivrl
out
ljmp
adc
add
daa
xlat
mov
add
fmuls
add
fsub
sbb
mov
add
add
inc
add
daa
pop
add
cmpsb
sub
mov
xlat
mov
sahf
shrl
or
xchg
jbe
aaa
fcomps
pop
ret
lea
add
inc
add
xor
add
and
aam
xchg
aas
fidivrs
fsubr
out
xchg
insl
fsincos
fadd
sti
xchg
push
xchg
or
test
add
movsl
movsb
mov
shll
add
xor
pop
add
cmp
add
push
xchg
ds
pop
inc
add
test
add
adc
dec
add
inc
cmpsb
jp
in
mov
iret
loop
mov
add
xchg
pop
les
and
pop
inc
or
add
stos
pop
jmp
lcall
leave
mov
aam
je
mov
add
add
cmpsb
or
add
adc
and
call
sbb
mov
add
test
aas
push
add
sbb
add
add
ljmp
add
jnp
add
add
add
pop
je
mov
fisttpll
insl
pop
loope
add
add
je
jae
xor
xchg
sub
cli
stc
test
add
add
inc
push
add
cltd
bnd
clc
jae
or
pop
jnp
insb
add
add
or
add
add
fidivrs
and
les
int
js
jl
jae
sbb
add
add
aaa
and
mov
lahf
jecxz
pop
add
add
push
add
cmpsb
cmc
in
add
and
sub
in
xorl
fisttpll
add
inc
cmp
out
add
sbb
dec
add
mov
add
add
mov
imul
or
inc
mov
add
add
rcrl
add
add
inc
add
dec
add
add
dec
add
add
push
gs
stos
lcall
jns
add
add
mov
mov
dec
add
stos
shlb
out
xor
cmc
mov
xor
aas
xor
push
add
add
xor
paddw
sbb
aad
data16
xchg
mov
add
dec
add
imul
and
lods
add
add
in
mov
jae
nop
mov
add
add
cli
fstpl
add
mov
cltd
std
inc
mov
popf
cmp
dec
add
pop
sbb
add
fs
faddl
nop
xchg
ljmp
fildll
add
or
push
add
add
jl
scas
ficoms
inc
add
mov
cmp
enter
pushf
adc
insb
add
fldl2e
mov
mov
add
call
stos
rorl
cmpsl
push
add
add
and
add
add
imul
add
add
cli
popf
ljmp
push
add
jecxz
add
add
mov
out
mov
pop
add
cli
pop
push
add
add
sahf
stc
jmp
xchg
xlat
popa
inc
add
add
mov
test
lcall
nop
add
pop
sub
inc
add
lcall
fs
adc
dec
mov
add
cmpsl
mov
and
adc
scas
adc
jmp
in
xor
inc
add
add
dec
xlat
pop
add
dec
mov
inc
add
mov
jmp
pop
jle
sub
cwtl
dec
add
clc
mov
insb
add
cmp
adc
in
cmpsl
add
add
xor
dec
jle
jge
std
dec
mov
mov
rolb
sbb
hlt
sbb
mov
insl
mov
sarb
add
xchg
mov
lcall
push
add
add
sub
mov
add
testb
pushf
adc
stos
pop
enter
add
sbb
lds
adc
push
inc
in
leave
mov
add
ret
adc
inc
add
add
add
add
lahf
pop
andl
aaa
scas
xchg
stc
sbb
nop
jl
adc
jns
repnz
flds
add
add
nop
cmc
or
cwtl
imul
pop
mov
push
add
mov
pop
add
out
push
rcll
mov
sbb
addr16
push
adc
fldt
xchg
mov
in
cmc
aad
fxch
lret
or
mov
or
add
add
cmp
add
dec
add
push
mov
cwtl
cmp
cltd
jo
jnp
add
add
sub
stos
sub
data16
cmp
add
jmp
cmp
cmp
bound
mov
sub
jnp
cltd
icebp
dec
dec
add
mov
ds
or
cmp
jl
data16
sbb
lcall
add
fstp
in
in
lea
push
mov
stc
jne
or
mov
inc
fisubrl
inc
add
fadds
mov
test
lret
and
ja
data16
add
sbb
lret
shrl
sub
loop
and
imul
jmp
dec
add
or
add
leave
adc
cmc
mov
daa
inc
add
je
sarb
movsb
mov
xchg
insb
add
std
mov
sub
add
add
fstpt
inc
cmp
iret
shl
mov
add
loopne
sbb
add
jl
sbb
in
sbb
in
add
fbld
xchg
mov
inc
outsb
add
dec
add
push
add
das
and
mov
xor
mov
xor
push
add
push
subl
aam
aad
or
add
mov
pop
add
vcvttpd2dqx
add
xchg
leave
jnp
mov
mov
mov
repz
add
bound
addr16
jns
outsb
add
add
mov
and
add
xchg
and
add
rol
test
add
cmp
xor
pop
xor
pop
xchg
or
js
push
add
jno
lret
mov
lock
in
mov
add
add
fistl
pushf
mov
push
movsb
xorl
add
fidivrs
repz
inc
add
test
mov
loop
pusha
add
pop
out
insl
orb
add
andb
add
add
fldl
add
mov
add
add
cmp
jg
pop
movsb
inc
add
inc
add
mov
add
add
inc
add
jb
cmp
adcb
or
int
arpl
cmp
stos
ss
out
fmulp
or
roll
push
add
jne
lds
cmp
add
xchg
loopne
add
fnsave
leave
fldz
pop
popf
xor
inc
xchg
mov
inc
in
push
add
inc
add
add
add
rcll
add
mov
ret
shl
sbb
add
cmp
add
out
mov
add
push
mov
add
add
xor
shl
insl
loopne
adc
or
mov
adc
sub
push
ja
jnp
add
push
add
lods
fcoml
add
push
add
stos
inc
cmpsb
inc
add
add
sub
adc
jle
outsb
add
adc
loope
add
arpl
add
mov
pop
lock
add
add
mov
adc
jnp
inc
fisttpl
popa
scas
adc
add
add
or
stos
sbb
sti
inc
pop
nop
sbb
or
jnp
std
pushf
mov
add
add
add
repnz
and
push
add
rcll
repz
and
ret
pop
fisttpll
cmpl
js
xor
mov
push
add
xchg
xchg
shll
out
add
push
xchg
add
lods
mov
dec
add
es
out
jg
mov
jmp
and
int3
inc
xor
xchg
pusha
add
sbb
add
xchg
nop
aaa
push
scas
roll
add
xor
into
popf
imul
shrb
add
test
sbb
das
sbb
pop
add
fidivl
cmp
xlat
addr16
dec
add
addl
scas
mov
xchg
xchg
ja
cli
ret
dec
add
cld
jnp
ror
cmp
aas
sbb
fistps
add
push
add
fistps
add
push
add
pop
add
sbb
cmp
imul
cmp
insl
sar
outsb
add
aaa
sub
popa
mov
sbb
or
mov
push
add
add
push
add
ret
jne
add
shr
fdivs
add
push
insb
add
fsubrs
lods
add
movsl
mov
js
jmp
rol
mov
add
sub
inc
add
add
dec
add
sbb
icebp
movzbl
fwait
push
add
xchg
mov
cld
pop
xchg
icebp
shll
adc
aad
gs
add
adc
ret
repnz
inc
add
jo
add
enter
xor
add
and
nop
mov
jg
data16
mov
pop
mov
mov
lods
mov
lock
out
lret
in
stc
ja
cld
ljmp
add
cltd
mov
add
roll
add
lods
mov
jecxz
inc
cltd
aaa
pusha
add
cli
sbb
add
mov
shrl
mov
inc
cld
inc
add
mov
or
add
or
inc
add
adc
pop
pop
movsl
es
pop
add
out
sbb
test
repnz
add
scas
mov
flds
xchg
mov
lcall
iret
lods
push
add
push
add
push
push
add
imul
add
cltd
or
and
sub
shlb
fidivrs
add
add
jmp
mov
jl
mov
add
or
or
ficoms
mov
xchg
and
sbb
add
add
pop
pop
add
pop
pusha
add
js
pusha
add
adc
ffreep
dec
dec
add
dec
add
sbb
rol
jnp
test
fisttpl
adc
pop
mov
rclb
pop
dec
add
in
in
lcall
repz
add
movl
icebp
ret
jp
or
pop
add
mov
push
pop
pop
add
jne
lret
push
or
sub
xchg
mov
and
sub
add
mov
aad
repz
mov
add
add
imul
inc
loop
scas
fsubs
adc
add
add
jl
xchg
xor
or
xor
dec
les
out
stc
clc
and
fdivs
sub
inc
add
arpl
adc
xor
add
mov
add
or
add
or
inc
add
iret
mov
add
add
add
cld
jb
fsubp
jns
les
add
ret
sub
jo
or
add
testl
add
pop
add
popf
pop
mov
mov
inc
add
imul
inc
jae
mov
cwtl
cmpsb
in
addl
pop
add
cmpsb
outsl
dec
xor
mov
jb
out
testl
scas
mov
out
repnz
mov
mov
call
xchg
movsl
and
xchg
ljmp
add
adc
inc
add
fisubs
in
add
hlt
cld
jnp
js
add
mov
add
loope
daa
add
mov
add
cmpsl
adc
mov
or
push
and
popa
inc
pop
add
pop
add
add
pusha
add
ja
sbb
jmp
das
xor
xchg
gs
rclb
or
dec
dec
add
popa
mov
pop
add
fcoms
add
add
out
ret
pop
shrl
add
lret
hlt
xchg
sti
and
lcall
and
test
mov
dec
add
movsl
sbb
lds
roll
dec
add
popa
xchg
add
stos
push
jp
mov
add
pop
das
jg
add
add
nop
hlt
add
add
add
add
aaa
xor
leave
sti
mov
or
sub
xchg
or
xor
mov
pop
xlat
jmp
xchg
add
dec
cmc
adc
add
cmp
sub
pop
fisubl
mov
out
xlat
inc
ret
and
loop
and
scas
iret
pop
inc
push
add
insb
add
xor
jae
xchg
add
adcb
fst
jmp
pushf
mov
adc
sbb
orl
add
lods
adc
jge
add
pop
add
stos
movsb
inc
add
jae
and
stc
fsubp
aas
mov
jl
mov
add
cmpsl
xor
adc
push
icebp
bound
ret
addl
jecxz
stos
imul
pop
adc
aam
out
popf
mov
popl
mov
mov
add
pusha
add
add
xor
and
jmp
mov
leave
sbb
and
add
int
dec
xor
jl
bound
sbb
xor
push
add
add
popf
fisttps
and
daa
cmp
ret
hlt
pop
lret
mov
add
jno
mov
add
dec
add
add
sahf
lret
gs
mov
xor
mov
repz
xor
xchg
mov
mov
rorl
sbb
add
cmp
rorb
in
test
add
push
in
add
lds
lcall
add
mov
add
add
sbb
jmp
jo
or
rclb
mov
aad
adc
adc
push
add
add
movsl
and
subb
xchg
iret
mov
xchg
cmp
pop
add
scas
out
push
add
sti
ss
and
pop
mov
test
push
add
in
movb
dec
stc
mov
mov
add
mov
popa
ficoml
adc
mov
add
insb
add
imul
add
fisubs
fistl
jp
xlat
jmp
ja
add
add
add
into
adc
sbb
lret
scas
mov
insl
add
cld
xor
lcall
xchg
mov
add
cmp
add
cmp
repz
add
movsl
imul
mov
xlat
imul
mov
loope
add
or
jbe
xor
fsubrs
adc
add
jns
lcall
negb
dec
add
cwtl
push
add
test
sub
sti
dec
add
push
cmc
or
inc
jecxz
pop
sbbb
add
add
mov
pop
add
popf
mov
xlat
daa
mov
in
xchg
dec
outsl
xor
dec
add
add
hlt
pop
add
mov
mov
ja
enter
push
add
add
adc
add
pop
add
jge
xchg
mov
add
push
or
mov
int
add
aam
xchg
movsl
into
inc
add
fmull
add
and
lea
cmpl
add
arpl
popf
xchg
jnp
add
or
loop
aad
jns
add
rorb
data16
xchg
push
add
punpckldq
jp
sub
add
mov
mov
xchg
add
mov
push
add
data16
sub
add
add
jbe
enter
div
jmp
dec
pushf
adc
inc
add
das
out
push
add
push
add
add
push
add
cmp
mov
add
xchg
es
adc
sub
aaa
popa
mov
test
js
push
add
add
out
add
push
addb
gs
aas
xlat
jle
scas
fcomps
leave
std
push
jo
aam
push
add
jl
jne
loop
add
shlb
add
add
mov
push
add
dec
gs
add
testl
jnp
lods
mov
loop
add
dec
add
ja
iret
xor
adc
stos
add
stos
insl
pop
loop
pusha
add
sub
dec
cld
les
cmc
loopne
add
add
add
pop
cmp
stos
lcall
mov
fidivs
xor
jnp
add
dec
pop
idivl
add
mov
cmc
mov
add
xlat
imul
add
mov
rcrl
add
pop
add
pop
cmpsl
pop
lahf
movsl
xchg
out
bound
push
add
add
xor
adc
push
add
pop
add
mov
adc
fbld
adc
cmp
movsb
add
xchg
lock
add
fldt
add
add
clc
and
imul
stc
jbe
pop
mov
dec
add
imull
add
add
sarb
lods
adc
lea
add
fsubrl
add
xchg
sub
dec
add
fwait
lahf
push
add
add
inc
mov
repz
xorl
enter
popa
jp
shl
stos
test
pop
add
xor
insl
adc
ja
add
out
popf
stc
and
es
scas
insb
add
pop
mov
xor
shll
rclb
add
pop
add
xchg
gs
pop
mov
fsubs
add
xor
stos
push
add
rcll
pop
pop
pop
mov
add
js
int
add
add
mov
push
push
add
mov
clc
jns
add
add
inc
add
lret
into
jno
xchg
dec
add
test
repz
mov
hlt
pop
or
cli
push
add
imul
lods
in
jno
add
mov
aam
rorb
jae
fcomi
insl
xchg
push
sbb
sub
mov
add
add
and
add
xor
mov
mov
add
add
cmp
xchg
jle
fwait
and
dec
mov
mov
add
and
add
xchg
rcrb
inc
stos
jmp
bound
icebp
nop
sbb
xchg
mov
outsl
movsb
jg
ret
test
dec
add
addr16
enter
imul
loop
jecxz
mov
out
add
push
add
fldt
add
je
sbb
adc
mov
inc
push
add
lcall
enter
popf
stos
pop
aas
mov
xchg
cmp
mov
js
das
cmc
popf
mov
out
dec
add
push
add
mov
icebp
push
add
add
stos
adc
jbe
mov
add
xchg
popa
test
xor
loop
inc
and
fldl
loopne
dec
add
ja
add
jnp
sub
mov
add
add
popf
mov
bound
xchg
arpl
dec
add
pop
lods
jge
loope
add
add
add
ret
call
les
add
jo
sub
push
cmp
loop
jmp
in
jg
add
sub
mov
or
xchg
cwtl
cmc
add
lret
add
add
insl
jns
jg
push
add
add
out
jg
xorb
out
call
shr
repz
lods
ljmp
loope
add
lods
pop
add
add
cmpsl
sti
cwtl
and
outsb
add
jg
add
jle
xchg
mov
jecxz
xchg
fwait
jb
sbb
xchg
call
jo
sbb
pop
cmpb
add
dec
push
outsl
test
push
out
cs
pop
add
aaa
add
call
cwtl
push
add
hlt
mov
leave
lods
arpl
sbb
adc
daa
addr16
test
xchg
jno
add
lods
xor
pop
ja
test
fdivrs
add
xchg
dec
fistl
out
push
add
or
adc
sbb
add
add
add
add
jne
lods
sti
push
add
out
inc
push
movsb
xor
aas
stos
fcmovnbe
push
mov
add
cmpsl
cmp
lock
xchg
push
add
add
cmpsl
mov
add
cld
fnstsw
add
mov
pushf
test
and
adc
pop
ja
add
add
sbb
cmpsl
hlt
out
ljmp
orl
cmpsl
lock
pop
xor
mov
add
add
mov
add
add
push
xor
add
cmp
daa
adc
xlat
jne
mov
xor
ret
insl
mov
ret
ss
sub
mov
add
sbb
add
pop
cwtl
fnstcw
add
mov
mov
add
mov
push
add
and
sbb
xchg
push
add
jne
push
add
mov
int
cmp
adc
mov
sub
repz
nop
fnstenv
sub
popf
insb
add
add
or
add
jp
push
ret
in
xor
out
push
adcl
pusha
add
mov
add
test
sub
das
xor
add
ficompl
in
das
xchg
push
add
inc
add
sub
add
push
mov
loope
mov
add
popf
dec
add
mov
push
add
sbb
stc
cmc
insl
mov
add
stos
sti
sahf
cwtl
clc
cmp
imul
pop
add
xchg
nop
inc
add
cmp
add
add
fcomps
lret
repz
jmp
xchg
repz
adc
and
subl
xchg
out
sub
lea
add
fmuls
add
add
leave
outsl
push
add
icebp
ret
pop
add
or
das
push
add
add
rcr
fldl
add
cmp
add
sbb
sub
psubw
pushf
jg
mov
add
scas
movsb
adcb
ret
push
add
mov
add
add
add
rorb
icebp
dec
inc
add
mov
test
mov
aas
inc
add
or
fstps
sub
add
mov
mov
clc
fidivl
add
jne
daa
ljmp
cmp
dec
add
jmp
add
arpl
add
fdivrl
stos
push
mov
js
add
sub
pop
mov
jl
sbbl
mov
ficoms
add
xchg
cmpsl
test
sahf
cmp
inc
add
xchg
mov
test
cmp
lahf
cmc
add
popf
or
inc
push
add
dec
add
sti
les
pop
mov
lcall
mov
enter
xorb
add
fcmovne
add
push
push
add
pop
add
cmpsb
dec
cmova
movsb
inc
add
sbb
add
test
leave
loope
add
mov
add
daa
push
adc
jp
add
movsb
mov
add
fmull
mov
add
pushf
mov
adc
pop
add
jecxz
push
add
xor
test
pop
add
jle
jmp
adc
ss
aad
adc
in
repnz
les
add
data16
in
cmp
in
add
add
add
dec
insl
aad
jno
and
adcb
add
mov
mov
pop
cmc
xor
data16
iret
mov
pusha
add
lock
cmpsb
lock
test
add
fnstenv
add
rcr
ja
add
sub
in
mov
add
add
mov
loopne
icebp
mov
and
shrl
lcall
hlt
sbb
mov
add
arpl
cmpsl
rcll
xor
call
ret
adc
jge
add
nop
addr16
add
cmpsb
lcall
jg
ret
into
pop
je
inc
push
dec
add
imul
test
cmp
add
lahf
jp
or
sub
repz
filds
add
stc
test
add
bnd
hlt
sbb
jg
mov
sahf
out
outsb
add
dec
add
sub
lock
add
testl
add
mov
mov
out
mov
sti
xchg
sbb
add
add
add
xor
mov
push
cwtl
repnz
ja
cmp
sub
mov
add
scas
cmpsl
mov
add
pop
lock
mov
pop
rclb
add
add
add
add
mov
add
test
in
xchg
push
add
jge
and
out
add
pop
jae
add
jg
loopne
cwtl
loop
adc
movsb
lahf
pusha
add
nop
dec
inc
inc
add
pop
xor
in
neg
cmp
jb
push
rorb
lock
sbb
lahf
inc
dec
add
jmp
adc
xor
mov
ds
scas
adc
nop
andl
add
push
add
mov
aas
and
lret
mov
hlt
arpl
andb
setl
popf
mov
or
xchg
mov
js
in
add
or
daa
cwtl
inc
je
jmp
and
leave
xor
out
cwtl
in
add
cmp
mov
xor
xor
icebp
dec
adc
repz
adc
arpl
mov
add
inc
add
in
add
mov
fwait
mov
add
add
mov
loope
test
add
sahf
test
and
pushf
js
fcmovnb
jmp
inc
add
mov
add
hlt
pop
and
xchg
jb
and
ljmp
cmp
add
add
add
cmp
add
outsl
jo
or
outsl
jae
jp
bound
test
repnz
repz
loop
add
sbb
jecxz
xchg
sbb
in
add
aad
mov
rorb
lahf
push
add
testb
adc
add
shrb
add
movsb
push
pop
data16
xchg
arpl
or
push
add
inc
add
out
jg
cli
les
xchg
ljmp
add
inc
int3
sub
adc
test
add
sub
mov
mov
add
push
add
pop
idivl
xor
in
fsubp
mov
xor
fisttpll
mov
mov
add
xchg
dec
out
add
adc
or
jp
pop
pop
insl
cmpsb
lret
jmp
jmp
lret
icebp
mov
dec
add
iret
mov
pop
enter
inc
notb
push
lahf
push
add
dec
add
pushf
out
push
add
mov
ja
in
fistl
pop
rorb
add
lock
inc
push
movb
sub
imul
add
int
add
add
sbb
jle
int
or
imul
jne
add
js
das
fadd
push
lods
mov
xor
mov
add
add
insl
dec
add
add
and
mov
add
push
add
ja
add
cmc
adc
dec
add
cli
scas
push
mov
jmp
add
pop
outsb
add
xor
ret
push
add
testb
jmp
jnp
add
add
jae
mov
dec
add
fidivrs
dec
add
test
shll
add
add
add
pop
add
and
pop
add
adc
int
das
in
test
add
scas
cli
pop
or
pop
add
je
push
add
and
add
sti
lds
jne
or
aad
add
scas
mov
dec
jno
sarb
xchg
mov
movsb
sub
xor
movsb
mov
add
and
add
or
add
jge
mov
add
rorb
cmpsl
aaa
test
add
add
add
adc
xor
sub
add
add
add
jl
pop
xchg
mov
xchg
add
cmpsb
inc
add
aad
aam
sahf
cltd
dec
add
add
add
scas
xchg
or
out
cmp
jecxz
or
add
add
add
xor
add
js
addr16
add
jno
adc
out
add
daa
cmpsl
scas
xchg
sub
fwait
aad
add
in
out
jns
mov
add
inc
enter
add
icebp
cs
test
sbb
icebp
add
xor
jecxz
out
push
add
int3
sub
xchg
sbb
push
add
add
outsl
push
mov
add
add
mov
add
add
loope
add
add
les
iret
out
add
and
lods
cmpsl
xor
test
rcrl
ds
and
add
sub
stc
inc
sbb
mov
cmp
scas
mov
add
jmp
pop
add
and
mov
dec
inc
add
xchg
jo
insl
cmc
cmp
jge
push
add
out
roll
adc
mov
push
adc
in
xchg
add
scas
das
iret
and
aaa
adc
aaa
faddl
pop
mov
lret
imul
in
mov
ljmp
xchg
pop
pop
in
gs
call
xchg
xlat
and
add
jo
stos
out
sub
add
cwtl
scas
lds
loop
xchg
sub
add
ficomps
sar
inc
add
pusha
add
test
push
add
pop
mov
mov
mov
movsb
mov
stos
sub
mov
loopne
cltd
lock
jno
add
stos
scas
daa
outsb
add
aaa
jle
push
add
mov
and
pop
bound
or
adc
add
pop
add
fisttps
ret
push
add
sub
pop
test
mov
mov
in
out
add
insb
add
inc
loopne
nop
inc
mull
and
mulps
or
inc
add
mov
add
inc
add
or
inc
add
pop
add
add
loope
add
jbe
push
add
pop
add
push
add
test
or
loopne
inc
add
pushf
insl
lods
add
movsb
lods
push
add
mov
es
and
icebp
xor
out
out
js
pop
mov
lret
inc
sbb
add
add
pop
add
or
add
int
add
push
add
jo
divb
add
addl
lods
adc
mov
or
cmc
int3
insl
incl
inc
add
stos
cld
pop
inc
addr16
add
aaa
push
add
imul
push
add
popa
mov
scas
popf
add
xchg
add
add
push
add
xor
mov
pushf
cltd
mov
jecxz
test
xor
xchg
pop
add
jge
inc
add
add
fnstenv
fwait
call
xchg
sbb
in
add
inc
add
add
test
pop
pop
adc
xlat
add
xchg
nop
xor
mov
inc
and
adc
xchg
mov
shll
insb
add
hlt
adc
lea
add
enter
insb
add
add
roll
xchg
dec
add
adc
xor
push
add
lret
std
inc
add
mov
test
add
xchg
adc
movsl
cmpsl
test
add
mov
hlt
test
jecxz
cmp
inc
add
add
jmp
lea
add
je
stos
sahf
mov
inc
add
mov
add
mov
jnp
mov
je
out
pusha
add
test
loop
mov
ficoms
cmp
mov
xchg
and
xorl
mov
addl
add
loopne
fistpll
stc
int
add
add
push
dec
add
mov
stos
add
shll
add
push
add
add
jecxz
sub
out
faddl
subl
push
add
daa
pop
jno
mov
dec
mov
add
daa
into
inc
adc
sbb
add
add
inc
add
push
add
add
into
fsts
add
push
mov
add
push
add
jae
add
adc
mov
inc
add
mov
aas
push
add
jb
mov
call
lret
and
adc
add
xchg
add
insl
mov
add
add
add
add
add
mulb
lea
movsb
push
add
add
sbb
cmp
or
inc
add
das
repz
pop
push
test
fmul
add
add
pop
icebp
push
add
fiadds
gs
add
cmpl
push
add
inc
or
lret
push
mov
lds
leave
aas
adc
mov
inc
ret
xchg
repz
xchg
call
add
add
push
dec
push
test
add
in
bswap
ds
js
call
add
add
add
add
out
xlat
aad
add
add
or
xchg
iret
bound
insl
in
rol
jns
xchg
adc
jp
push
add
push
xor
dec
add
dec
mov
mov
fcomi
imull
repz
add
add
xchg
or
lcall
xor
call
adc
repz
into
push
inc
push
cmp
jb
sti
pusha
add
jecxz
insb
add
add
comiss
negl
add
add
sub
call
xor
xchg
or
mov
adc
add
fistpl
pop
call
test
ret
test
jbe
mulps
sbb
dec
push
add
lods
out
jg
test
cmp
add
add
pop
dec
add
fnsave
jno
add
add
int
add
add
push
add
add
and
fsubl
or
xchg
add
mov
or
gs
pop
add
test
add
jecxz
add
test
lods
fs
int
xchg
inc
xchg
and
or
add
add
add
inc
add
jno
add
add
sub
cmp
and
fwait
and
shlb
push
or
idivl
add
in
add
fidivrl
xor
nop
sub
and
jmp
push
add
popf
nop
shl
insb
add
jbe
pop
adc
and
mov
mov
sbb
sbb
nop
dec
add
inc
add
dec
add
rolb
fdivrs
add
xor
xchg
cwtl
mov
test
mov
and
stos
hlt
fldl
add
and
fwait
pop
or
pop
xchg
pcmpgtd
mov
in
jb
fwait
mov
and
cmpsl
xlat
scas
push
push
imul
cld
push
addr16
add
add
ret
cld
ljmp
add
mov
iret
scas
inc
mov
add
pop
xor
ljmp
mov
add
enter
in
mov
out
cmpb
scas
call
and
add
dec
add
lea
or
movsl
test
add
lea
lds
add
fbstp
mov
mov
dec
inc
das
xorl
popf
mov
add
cli
fidivl
and
insl
sub
jl
std
inc
fs
icebp
movsl
loop
push
add
nop
mov
enter
add
push
add
ds
scas
cmp
iret
pop
xchg
mov
mov
lret
mov
dec
add
add
add
sub
dec
and
inc
add
leave
jne
or
shl
lret
andl
iret
xchg
xor
fs
js
testb
rorl
mov
mov
inc
add
outsl
jnp
add
sbb
add
jmp
xlat
sub
jp
je
js
mov
std
dec
fadds
push
add
cld
cli
cmpsb
cmc
sub
xchg
jne
dec
add
popf
imul
add
test
jl
push
add
lahf
add
shlb
push
fidivs
add
mov
jae
mov
mov
gs
add
add
sub
lock
push
cmp
sarb
jg
add
aas
mov
mov
push
ret
stc
dec
add
mov
add
pop
add
out
gs
add
flds
insb
add
pop
add
jecxz
sahf
shll
cmp
push
hlt
xor
nopl
add
sbb
xlat
pop
pop
add
mov
mov
add
inc
pop
test
push
add
dec
add
popa
xor
xchg
mov
push
sbbl
hlt
cmpsl
or
test
dec
add
rolb
add
add
call
sbb
and
add
inc
add
pop
add
sahf
push
add
rcrl
jne
rolb
out
aaa
mov
add
add
inc
adc
pop
add
lods
out
add
add
pop
add
add
add
mov
add
add
test
rcrl
mov
jge
add
lea
nop
pushf
xor
les
add
dec
add
pop
dec
add
xor
test
add
lret
add
add
push
add
notl
lds
mov
loope
aad
rolb
test
add
out
add
add
scas
jnp
xchg
cmp
pop
add
addr16
xlat
push
add
mov
add
loope
add
xor
inc
inc
add
pop
and
add
xor
and
add
push
add
sarb
add
sub
cmp
mov
outsl
add
add
pushf
sbb
sbb
add
gs
or
add
fsubl
add
add
xchg
adc
mov
out
aaa
das
sub
inc
cmp
dec
outsl
nop
hlt
cmp
sub
sub
ljmp
jno
add
mov
add
add
add
mov
sar
mov
xor
mov
jo
je
out
jo
nop
push
add
add
pusha
add
call
scas
mov
pop
inc
add
xor
inc
rcll
outsl
test
add
ret
daa
lods
jmp
add
jg
sbb
test
add
mov
jno
push
inc
add
add
add
add
add
add
mov
mov
loope
pop
sub
sbb
jle
lret
mov
pop
into
mov
fmuls
jae
add
sub
je
or
add
add
add
add
aaa
or
call
dec
jmp
cmpsb
scas
jne
das
push
add
ja
add
xor
add
add
fiadds
addr16
mov
mov
add
add
leave
mov
test
push
add
dec
add
imul
add
add
add
add
lea
dec
add
add
repnz
movsl
idivb
jge
add
or
jno
push
cli
add
jne
add
or
loopne
add
add
add
testb
mov
add
adc
add
and
pop
das
sub
cmp
inc
lret
movsl
cmp
and
jl
in
dec
lret
js
mov
xchg
pop
add
repz
adc
repnz
add
xchg
gs
push
add
jns
sti
mov
add
add
add
je
ret
mov
icebp
arpl
adc
jno
out
pop
mov
add
pop
or
adc
shlb
add
cmp
add
xor
and
inc
add
int
sbb
jl
js
add
inc
mov
fdivrs
fcoml
push
sbb
push
add
mov
rclb
add
add
add
out
outsb
add
sub
add
bound
push
int3
adc
sub
cmp
in
add
jbe
pop
add
dec
push
add
jecxz
push
add
shrb
loopne
add
inc
rcrb
jno
add
add
dec
mov
add
add
add
cmp
gs
pop
inc
add
add
cmpsl
mov
jecxz
in
inc
add
leave
imulb
pushf
out
add
push
push
add
push
add
out
sub
jmp
jns
imul
imul
mov
mov
pop
add
add
int
shlb
imul
lea
fdivrp
add
cld
push
ja
outsl
dec
aad
lret
ret
push
in
add
test
test
out
add
fimuls
push
in
out
out
pop
xchg
aad
add
icebp
mov
sahf
das
out
test
pusha
add
add
cmp
add
xchg
xchg
outsl
fdivrs
pop
inc
add
xchg
out
es
sahf
jno
dec
cmpb
cli
je
add
sub
les
add
push
sub
add
add
daa
lds
mov
out
leave
cmp
jo
lret
jl
pop
repz
loop
add
sti
push
add
mov
add
xor
loope
add
insb
add
aad
jmp
add
mov
test
rclb
mov
mov
add
add
jno
xor
mov
cs
cmp
insl
inc
jle
mov
add
scas
in
rorl
scas
sbb
add
or
jb
lea
mov
or
popa
inc
add
jge
add
insl
lahf
sub
cltd
xchg
repnz
adc
fucomip
hlt
mov
add
in
aas
les
scas
gs
lahf
mov
adc
cmp
je
xchg
ja
add
and
push
stos
aad
push
add
push
add
cli
sarb
and
iret
cli
add
inc
push
add
clc
dec
add
fldl
sahf
inc
shll
add
or
xlat
sub
lds
scas
stos
add
lods
rcll
cmpsl
lea
fldenv
add
mov
xor
xor
outsb
add
xchg
movsl
add
cwtl
imul
sbb
fcmovne
jo
bound
sbb
inc
add
fldt
add
out
pop
add
out
dec
add
mov
cwtl
and
add
push
mov
adcb
push
dec
add
mov
add
mov
or
adcb
bound
pop
add
popa
shlb
xor
les
sub
dec
test
or
jmp
dec
add
lds
ret
call
add
in
dec
scas
adc
mov
add
ret
add
fbld
sbb
mov
add
add
sbb
ret
xor
mov
or
dec
and
enter
add
mov
push
add
bound
push
add
sahf
xor
add
mov
add
mov
xchg
fdivl
add
popa
pop
out
pushf
icebp
pop
add
or
loopne
mov
or
and
add
jns
xor
add
inc
add
add
pop
add
sub
xor
add
int3
mov
lret
mov
pop
dec
add
sbb
xor
or
rclb
mov
cld
sbb
add
mov
mov
clc
xor
call
cmp
test
dec
add
add
adc
ret
insb
add
lock
pop
leave
dec
add
mov
dec
add
add
fisubs
out
add
lret
popa
jecxz
loopne
sub
mov
jne
add
leave
lcall
xchg
repz
add
xor
add
call
std
and
sbb
mov
add
fsubs
lret
inc
add
fldl2e
jp
inc
add
jmp
add
mov
test
push
add
jae
or
add
mov
xchg
and
xor
fistps
add
rol
mov
arpl
add
adc
push
rclb
cld
cwtl
fnstcw
ss
push
add
add
add
add
add
loop
xchg
shlb
add
sub
jge
add
inc
add
adc
jmp
push
add
mov
add
adc
mov
fdivr
fildll
add
add
imul
push
add
add
out
mov
inc
add
lods
push
add
xlat
xor
push
add
fiaddl
pop
add
xlat
iret
adc
or
or
pushf
pop
cwtl
jne
inc
add
lods
and
js
fidivrs
data16
add
cld
test
in
enter
ds
cld
mov
add
cltd
je
adc
mov
xchg
or
das
fwait
xor
pop
add
mov
aaa
ja
pusha
add
mov
fiaddl
lahf
rclb
add
mov
cmc
repz
add
cli
iret
fsubl
arpl
pop
cmp
ficomps
mov
cmp
add
mov
sahf
imul
lds
add
clc
inc
pop
je
js
int3
testb
rcll
rorb
cli
lds
movsl
add
cmp
dec
std
jecxz
sbb
lret
mov
loopne
xchg
mov
jp
loope
add
mov
test
add
cmp
rcll
add
add
ljmp
scas
ret
add
test
mov
sti
mov
xchg
popa
pop
imul
scas
shr
mov
bound
add
add
add
add
decb
jecxz
sbb
aad
inc
add
xchg
std
or
adc
mov
popl
pop
push
mov
add
mov
pusha
add
push
aam
js
xlat
lahf
xchg
fistl
mov
and
pop
cmp
cmp
out
cmp
add
aaa
iret
insb
add
add
or
lds
insb
add
mov
hlt
leave
pushf
mov
jle
cmp
idiv
pop
jb
mov
push
aaa
mov
jne
movsl
push
add
push
jnp
add
fwait
into
movsl
rclb
mov
cmp
jne
inc
fxch
xor
fnstenv
adc
add
jbe
outsb
add
dec
add
std
in
pushf
xchg
add
add
xor
out
dec
fstl
inc
cmp
and
je
imul
notb
loop
in
jns
mov
leave
push
add
add
jae
add
mov
pop
add
add
lods
icebp
stos
xchg
test
push
hlt
pop
dec
add
mov
stos
loop
add
adc
push
add
testb
testb
inc
add
add
add
mov
dec
pop
adc
and
fld
or
push
pop
and
add
stc
hlt
movsl
cmp
fistps
pop
add
loope
add
lret
inc
add
inc
scas
adc
xchg
sbb
mov
push
add
pop
add
cwtl
sbb
lds
add
xlat
or
repnz
stc
mov
add
and
pop
add
jno
mov
add
ret
jge
and
imul
adc
sub
fdivrl
push
add
mov
out
lock
clc
test
jno
sbb
push
add
and
mov
sarl
pop
push
call
cmpsb
orb
inc
add
dec
add
dec
add
subl
add
add
or
rorb
enter
jmp
mov
inc
add
mov
leave
std
test
cmpsl
and
or
add
add
add
jae
add
ret
pop
mul
cmp
inc
push
add
push
add
ljmp
jle
push
add
cmp
mov
dec
add
lcall
aas
ja
adc
fwait
mov
mov
sahf
cmp
add
add
jbe
add
popa
in
xlat
out
add
paddq
jnp
sahf
je
cwtl
testl
xchg
movsb
xchg
xchg
test
mov
pop
dec
mov
add
push
add
sub
xchg
inc
pusha
add
xor
add
sar
js
pusha
add
xor
and
push
add
push
add
add
pop
cli
sbb
adc
or
outsb
add
cli
xor
sbb
or
sub
add
add
add
add
hlt
sbb
shl
add
aaa
cmp
add
push
add
test
or
dec
add
mov
outsl
mov
dec
add
pop
add
mov
push
add
xchg
call
lret
cmp
mov
add
add
add
sbb
insl
gs
sahf
xchg
pop
add
and
inc
out
add
or
lcall
jnp
jnp
xchg
jmp
add
add
mov
add
sub
xchg
adc
adc
dec
add
adc
stos
dec
repz
loopne
loop
dec
cld
inc
add
mov
add
aaa
jl
rcrb
lcall
daa
outsb
add
idivl
add
push
out
xor
lahf
dec
test
cmp
mov
add
mov
add
jl
add
add
loope
ficoml
push
sub
in
out
ja
loopne
mov
add
dec
add
in
add
cmp
fbstp
loopne
or
inc
add
ret
movsl
mov
xchg
mov
pusha
add
imul
inc
test
ret
push
pop
cwtl
xorb
add
mov
add
and
sbb
xchg
loope
add
mov
xchg
jg
les
movsb
inc
add
pop
xchg
clc
in
je
fwait
je
jle
jmp
cltd
movsb
lcall
add
gs
adc
sbb
add
pop
push
add
fistpll
cld
sbb
xchg
js
or
sub
add
add
push
je
fmulp
shrl
lret
push
add
cmc
mov
add
add
hlt
enter
jg
aam
gs
testl
pusha
add
jle
mov
xchg
test
add
into
sub
pop
mov
mov
add
movsl
mov
sub
push
add
mov
jae
push
add
dec
stos
sub
add
add
sbb
outsb
add
jnp
add
add
or
adc
or
and
xor
int
scas
dec
pop
enter
or
mov
xor
or
popa
mov
sub
test
das
pusha
add
jb
shrb
add
pop
add
aaa
jg
jbe
xor
cmc
push
add
sar
mulb
mov
std
jl
insl
hlt
std
ja
and
jno
xor
sbb
mov
add
add
ret
sub
loop
xor
scas
jge
or
xchg
jge
lods
int3
cmp
pop
sub
add
add
movsl
jl
xchg
xchg
fs
sub
push
add
lahf
add
inc
icebp
int3
cmp
add
cli
mov
enter
and
sbb
xor
hlt
fadds
ja
gs
ss
inc
add
loope
lret
sub
xor
lcall
add
and
jns
mov
add
pop
imul
add
dec
push
add
add
sub
outsl
sbb
shlb
je
in
stos
lock
js
jae
cltd
outsb
add
and
sub
add
and
push
jg
mov
add
addr16
lock
push
add
arpl
jno
add
jl
sbbb
scas
ret
or
and
push
add
fists
movb
jnp
xchg
call
cmp
adc
and
les
add
xor
fistps
and
push
add
sarb
xchg
sbb
loope
add
xchg
fildll
pop
add
imull
add
or
daa
push
push
push
add
mov
idiv
mov
pushf
sub
into
cmp
in
push
add
add
xor
out
lret
out
add
inc
add
cmpl
adc
cmp
add
adcl
pop
sub
sarb
or
jmp
sbbb
out
xchg
dec
add
cmp
add
dec
or
stos
mov
xchg
mov
insl
cmp
int3
imul
stc
or
cmp
jg
add
and
and
loope
push
add
ljmp
mov
adc
stos
jg
mov
add
mov
fsubs
add
dec
add
shll
dec
sub
arpl
add
add
pusha
add
adc
or
aaa
mov
add
imul
nop
mov
fisttpll
add
jg
add
dec
add
frstpm(287
push
mov
repnz
clc
push
add
negl
insb
add
stos
ljmp
cmpsb
out
add
xchg
addr16
add
stos
add
cmp
js
stos
push
add
dec
sub
jb
adc
xchg
enter
mov
mov
mov
add
jo
lret
pop
mov
pop
pop
jge
and
sub
add
cmpsl
push
add
xor
add
fbstp
or
mov
add
add
add
add
adc
mov
jle
ljmp
ret
pop
cltd
pop
aad
add
cltd
xor
pop
add
add
add
andb
xchg
rcrb
jne
and
bound
jecxz
or
add
pop
loop
aad
nop
mov
add
xchg
je
in
mov
fwait
decb
add
add
sub
in
loope
daa
loop
add
test
or
gs
mov
add
cmp
or
cmc
add
cmp
lds
rorb
push
add
add
xor
mov
xchg
in
adc
add
outsb
add
add
fnstcw
add
sbb
jg
insb
add
add
mov
mov
push
sub
push
add
imul
or
mov
add
aaa
mov
pcmpeqb
imul
xor
inc
add
outsb
add
push
arpl
add
mov
mov
or
cmp
add
lea
movsb
mov
loop
sbb
faddp
je
push
add
pop
add
mov
inc
popa
in
popf
xor
test
ljmp
xorl
xchg
jg
arpl
pop
jo
popa
test
add
rcll
add
pop
add
add
dec
add
leave
js
xchg
gs
popf
jno
in
mov
add
out
xchg
jnp
sbb
bound
jne
add
jo
js
jno
lret
cmp
mov
subb
xchg
pop
add
sub
dec
jo
orl
add
push
mov
pop
add
add
test
test
rcrb
push
add
enter
pusha
add
shlb
loopne
gs
add
xlat
mov
xchg
mov
dec
inc
jae
repz
cmp
scas
sub
add
mov
push
mov
and
es
push
add
add
add
mov
mov
jmp
jmp
mov
mov
dec
add
sbb
or
lods
jno
add
vsubpd
popa
push
add
cmpsb
dec
add
popa
fldl
add
adc
add
add
xor
xchg
jo
xchg
mov
adc
mov
add
mov
xchg
pop
add
add
dec
leave
cli
jb
loopne
cmp
add
add
insl
xchg
add
add
add
add
or
add
je
inc
dec
add
add
and
pop
add
shlb
bswap
outsl
test
xchg
shl
cmp
mov
ja
jae
add
ja
fisubl
add
out
loopne
mov
test
mov
jmp
mov
add
add
cld
dec
add
inc
add
push
add
xor
mov
rolb
jmp
jge
add
adc
cmc
loopne
shlb
or
pusha
add
adc
mov
cmp
mov
pop
add
pop
loop
xor
testb
jb
mov
mov
out
or
add
jno
xorl
lock
dec
add
mov
xor
or
lods
add
inc
add
pop
dec
jns
repnz
xchg
jmp
sbb
xlat
push
bound
cwtl
ret
jne
sbb
add
add
add
add
pop
cwtl
insb
add
add
add
ja
add
jne
add
add
add
lock
inc
dec
test
sbb
add
mov
push
add
mov
or
dec
add
add
ret
fldl
cmpsl
cmc
cmpsl
shll
in
mov
call
lret
insl
sub
lea
pop
add
add
dec
add
add
test
xor
data16
jnp
add
sti
fstpt
in
ficompl
sbb
loop
sbb
fildll
mov
cmpsb
shlb
add
add
add
adc
xchg
sub
sub
add
ret
dec
xchg
push
add
shl
stos
in
cltd
fcmovnu
xchg
scas
stos
fcoml
dec
add
add
stc
xchg
mov
add
add
lock
add
shrb
cmc
popa
cmp
xor
inc
add
adc
aas
cmp
adc
jge
inc
add
mov
jmp
add
out
add
fnsave
add
cmc
xchg
adc
roll
mov
repnz
jmp
mov
add
add
sbb
dec
add
add
mov
mov
xor
int3
xor
pop
add
or
lret
mov
dec
mov
push
add
sub
jnp
out
shlb
push
dec
add
add
push
push
add
imulb
test
or
or
lds
pushl
add
lahf
loop
add
sub
xor
adc
cmpb
stos
out
stos
inc
add
push
test
das
mov
add
inc
jle
xchg
and
scas
sbb
mov
dec
add
add
add
cmc
lret
add
daa
xchg
and
jg
xchg
jnp
adc
ds
mov
aad
pop
add
shrl
jp
sar
jae
addr16
pop
add
add
sub
inc
mov
add
jg
data16
add
ljmp
add
lds
dec
add
jmp
jle
stc
outsb
add
add
adc
and
jmp
push
sub
add
sti
pop
xor
test
pop
add
add
in
add
push
add
inc
add
lods
daa
push
add
pop
xchg
mov
sahf
test
add
in
dec
ds
pop
add
add
add
add
add
add
push
xor
pop
add
add
cwtl
xor
jl
push
into
icebp
mov
mov
sahf
and
add
lea
mov
jmp
jp
dec
add
add
add
dec
add
add
push
add
add
xor
push
test
add
loopne
mov
mov
fsubrl
add
xchg
test
jbe
and
add
in
add
add
lods
adc
pop
cmp
mov
cmpsl
push
push
ja
lret
add
pushf
sbb
mov
jge
sub
jae
add
cmpb
add
js
aad
in
mov
ror
add
and
add
inc
add
popf
cld
data16
mov
add
xchg
mov
inc
add
test
mov
add
add
and
inc
add
add
ja
or
andb
addb
in
data16
scas
cltd
push
sub
push
add
subl
add
and
mov
pushl
add
cmp
jns
pop
push
add
add
lret
out
add
add
add
les
add
xor
js
lods
stc
or
sbb
mov
test
nop
pusha
add
and
lcall
lock
jge
test
mov
dec
add
push
xor
mov
mov
add
fimull
in
or
jno
add
movsl
and
fucomip
popf
and
add
cwtl
pushf
mov
add
pop
test
add
out
jge
xchg
xor
hlt
pop
jmp
stos
sbb
add
xchg
and
add
pop
mov
add
add
add
inc
call
je
add
add
outsl
out
add
pop
add
int3
insl
pusha
add
aaa
xor
pop
in
adc
add
loop
and
cmc
clc
xchg
mov
add
cltd
add
lea
add
mov
add
mov
ret
add
fwait
orl
mov
cmp
pop
add
mov
mov
push
add
bound
jns
xchg
addb
movsb
call
das
cs
xchg
pop
adcb
add
jle
add
sub
jl
cmc
mov
sub
or
ftst
sub
xlat
sbb
sti
pushf
psllq
out
lea
lods
add
add
inc
add
ret
lods
jl
aad
sbb
push
fcmovu
dec
add
add
jg
daa
sbb
push
jge
pusha
add
add
xor
lret
add
add
cmpsl
pop
dec
sbb
push
add
xchg
in
nop
inc
jecxz
dec
add
test
mov
int
icebp
jbe
add
fnstsw
add
add
add
shll
sbb
cmp
rorl
jmp
ficoms
add
push
add
nop
or
shll
inc
add
add
inc
cmc
pop
std
sub
call
push
add
inc
je
xor
adc
stos
stos
test
jecxz
add
sub
jnp
jle
pcmpgtb
aam
add
cmp
in
std
out
sub
xchg
sbb
bound
sub
add
and
pop
sub
xchg
lahf
mov
push
adc
cmp
movsl
pushf
fwait
sbb
sbb
popa
add
add
add
xchg
xchg
movsb
push
add
ja
and
lock
xchg
mov
decl
add
js
sub
cmp
in
push
add
sti
aam
aas
gs
sbb
jl
inc
add
mov
push
and
add
jg
add
add
shll
xlat
ja
into
fisubrl
sarb
cmpsl
insb
add
outsl
dec
test
push
or
cmp
cwtl
ljmp
xchg
popf
pop
lods
in
add
add
add
icebp
rolb
jg
adc
test
into
les
fdivrs
aaa
xor
add
add
add
les
add
mov
add
data16
add
adc
stc
dec
xor
icebp
lock
jecxz
add
add
mov
xchg
add
pop
add
push
add
add
adc
mov
adc
add
adc
push
add
add
repz
add
js
cmp
sub
aad
add
out
mov
add
jnp
xchg
sub
mov
jecxz
sbb
sbb
push
add
add
add
add
add
add
xchg
add
test
add
mul
int
sbbb
add
pop
add
inc
jb
pop
pop
add
adc
mov
xchg
xor
and
add
cmpsl
jno
aaa
aad
add
int
lods
ret
adc
mov
add
ds
dec
add
add
add
add
arpl
xchg
add
xor
xor
add
inc
mov
je
jo
mov
cltd
movsl
mov
mov
push
jmp
jne
fcomip
in
inc
add
add
cwtl
pushf
pop
xor
add
pop
add
jno
insl
push
repz
adc
test
mov
add
jle
cmp
dec
add
add
mov
jne
mov
add
movsl
sbb
icebp
pusha
add
mov
cmpsl
or
cmp
mov
pop
mov
adc
mov
sbb
idivb
mov
add
fs
jp
loop
add
cmc
mov
pop
scas
es
adc
lds
pop
popa
aas
push
out
aad
dec
add
xchg
add
mov
add
movsl
popl
lcall
sti
cvtpi2ps
lods
andb
inc
add
lods
xchg
bound
cmc
cmp
lods
xor
dec
add
mov
stos
cmpb
jns
xchg
add
add
mov
mov
pop
add
cltd
lea
mov
push
add
jnp
add
inc
add
xchg
adcl
add
and
sbb
cwtl
mov
and
rolb
add
add
and
add
xor
mov
adc
jp
dec
mov
sti
int3
and
dec
add
add
adc
pop
cmp
push
add
aaa
and
adc
inc
add
jp
and
xchg
repz
fisttpll
test
popf
sub
adc
mov
add
sbbb
add
bound
and
aas
pop
add
sub
sbb
adc
add
add
xchg
add
loopne
add
cmp
cld
popf
hlt
dec
pop
xor
sub
cmp
fsts
add
fsubp
push
dec
loope
sbb
clc
add
adc
in
mov
xchg
cmc
push
add
xchg
jns
xchg
xchg
jno
add
sub
ljmp
dec
add
add
mov
aaa
call
imul
icebp
or
xchg
dec
add
mov
mov
cmp
pop
lds
jbe
xor
xchg
cmp
ja
ficomps
sbb
xchg
mov
or
jo
add
xchg
push
add
or
add
jns
popf
sahf
adc
jle
xor
and
add
add
add
add
add
xlat
or
popf
xor
adc
mov
add
dec
add
inc
leave
aaa
loope
mov
or
sub
xor
jnp
mov
lea
out
pusha
add
lahf
pop
je
lret
and
ljmp
add
inc
add
jo
jne
stos
outsb
add
in
add
ljmp
add
lahf
test
mov
push
add
out
add
or
scas
adc
push
add
aam
xchg
sub
mov
sar
rolb
cmp
repnz
add
add
fbld
mov
addr16
and
sub
pop
add
insl
bound
loope
add
fadds
pusha
add
imulb
jnp
or
fisubl
add
out
adc
add
add
les
test
je
inc
lds
and
daa
add
scas
or
cmp
add
shll
add
xchg
push
sub
jnp
add
ret
add
test
add
jmp
add
stc
xor
cmp
adc
add
lods
cmp
xchg
push
mov
sub
push
and
xor
xchg
jne
jl
sub
std
jbe
iret
mov
cwtl
scas
cmp
xchg
lock
repnz
xor
dec
add
add
add
mov
add
out
adc
add
add
js
repz
add
mov
lcall
add
popf
adc
mov
lods
lret
leave
sub
das
mov
xchg
push
test
add
inc
and
addb
and
pop
lods
inc
or
mov
add
add
in
dec
xchg
push
add
pushf
xlat
mov
out
add
dec
jle
ljmp
lahf
pop
dec
std
push
mov
cmp
pop
add
push
add
sarb
ret
lret
jecxz
sub
and
xchg
xchg
xor
dec
jbe
ret
push
outsb
add
je
lahf
jnp
add
xchg
into
xor
fcompl
mov
leave
pop
popf
or
aaa
jle
out
mov
mov
hlt
xchg
inc
jbe
xor
add
jbe
xor
stc
mov
adc
into
xchg
into
xchg
mov
add
fcmovnb
cmc
ficoms
dec
xor
add
insb
add
xchg
add
inc
outsb
add
les
add
mov
add
cmp
push
xor
sbb
cmp
cltd
add
add
std
mov
outsb
add
pop
add
fdivrl
daa
mov
faddl
mov
lret
xchg
inc
push
cmc
test
add
data16
rcll
pop
aas
jne
sub
and
and
push
and
xor
mov
icebp
xchg
pop
add
push
fldcw
pop
mov
enter
add
and
mov
push
jns
andl
push
imul
push
add
mov
push
add
mov
add
inc
add
cmpsb
ds
or
add
jp
inc
dec
mov
jo
and
cmpsb
imul
cmp
pop
mov
add
out
enter
adc
and
add
scas
jo
add
fwait
add
add
movsb
push
add
adc
cmpsl
xor
mov
add
add
insl
int3
mov
jae
push
add
and
push
test
push
add
mov
add
add
pop
xchg
and
cmp
add
lods
xchg
mov
scas
outsb
add
push
add
add
add
add
lret
hlt
lods
dec
cld
out
outsb
add
add
imul
aaa
into
int
push
add
fucomi
adc
subb
mov
sub
leave
and
mov
or
or
movsl
inc
add
mov
add
shl
dec
add
loope
add
add
jp
aam
mov
mov
add
int3
push
add
add
add
insl
pop
push
filds
xchg
or
jle
gs
nop
sub
sub
fucomi
push
add
enter
hlt
rcl
push
add
push
sbb
inc
push
dec
test
pop
add
mov
add
add
inc
mov
add
les
mov
loopne
add
test
inc
sub
je
test
jnp
jno
in
out
insl
inc
add
add
std
mov
add
xor
arpl
cmp
xor
inc
push
add
aaa
sbb
scas
pop
es
or
sub
cmp
mov
notl
enter
loopne
add
movsb
scas
insl
adc
jns
das
dec
add
xchg
push
and
add
add
lcall
add
xchg
jno
je
mov
add
xor
xchg
int
xorb
xor
add
loopne
test
or
cli
and
test
fcoml
sbb
insb
add
mov
dec
outsb
add
jbe
inc
xchg
mov
add
xchg
cmc
ja
cmp
vmread
fistpll
popf
jle
int3
cld
shrb
mov
add
jp
sub
mov
mov
f2xm1
leave
mov
mov
mov
add
add
ret
test
xor
add
add
sub
insl
cmp
imul
xchg
lods
mov
rcrb
imul
dec
add
add
loopne
add
loopne
fistpl
add
and
in
imul
mov
into
test
andl
cltd
stos
stos
loop
cmp
add
mov
push
add
test
add
popa
xchg
xor
pop
add
add
add
add
fsubs
add
fiadds
inc
add
add
mov
stos
mov
add
add
pop
popa
dec
xor
mov
add
add
jnp
or
out
lds
add
xor
ffree
arpl
and
sti
les
add
ss
sbb
sti
popa
insl
xchg
or
je
mov
add
jp
pop
out
add
inc
xor
jp
inc
add
clc
pop
sbb
pusha
add
adc
loop
push
cmp
iret
insb
add
add
add
add
pusha
add
es
or
sbb
push
pop
ja
or
daa
inc
sbb
int3
stc
jno
mov
adc
movsb
test
mov
js
push
add
and
jo
sbb
cmpb
adc
mov
push
push
add
mov
testb
fsubr
repz
pusha
add
xor
jnp
loopne
add
ret
fldenv
add
add
jne
mov
rorl
aad
add
sub
shlb
leave
dec
movsb
dec
pop
add
popf
int3
loop
fcmovnb
xor
repnz
mov
pop
cmp
hlt
outsb
add
push
add
add
inc
add
add
xor
mov
repz
jns
add
add
jbe
mov
mov
add
add
sub
dec
add
and
popa
jle
adc
xor
test
mov
dec
add
jae
add
inc
scas
xlat
cli
mov
shrb
push
add
add
outsl
insl
jo
pop
daa
dec
add
add
add
fisubl
xor
inc
add
sub
push
pop
adc
aaa
sbb
aas
int
lcall
add
add
cld
add
sbb
mov
testb
xor
sub
add
add
ljmp
or
lahf
lock
mov
stos
mov
add
ss
rcrl
push
add
xchg
pusha
add
mov
fistpll
jecxz
jbe
adc
add
popf
sub
push
add
add
add
add
repnz
or
sub
pop
lret
push
rolb
fidivs
scas
and
add
sbb
xchg
enter
jmp
add
stos
bound
mul
push
add
add
add
jne
sti
fsubrs
add
stos
icebp
int
aad
add
cmp
push
add
lds
add
insl
aas
popf
ret
iret
arpl
sbb
scas
xchg
mov
rolb
sub
mov
mov
sub
jge
movsl
ljmp
inc
dec
add
add
test
test
add
push
add
testl
test
nop
ret
stos
cmp
and
dec
add
sub
push
push
add
add
cmp
xor
lea
or
cmp
mov
sbb
jae
leave
sub
addr16
dec
push
add
push
add
andl
add
dec
add
push
test
movsl
sbb
scas
fmuls
out
cltd
sub
iret
out
movsb
sbb
cltd
xchg
pop
lcall
push
jmp
sub
dec
and
in
mov
add
add
jge
sub
push
add
or
pop
in
xor
rorb
enter
add
repnz
sbb
mov
xchg
sub
das
mov
add
stos
jmp
mov
rorb
mov
adc
mov
mov
add
mov
pop
cld
fwait
push
add
xchg
add
jo
xor
pop
cld
movsl
sbb
cmp
mov
stos
int3
add
sub
add
fidivl
and
and
dec
data16
add
inc
add
add
js
jnp
add
fcomp
fildl
add
add
stos
rorb
mov
negb
lods
dec
add
mov
fistl
add
push
mov
iret
cmpsb
mov
or
int3
sbb
xchg
cs
push
add
lods
jae
andb
out
fstpt
mov
lret
mov
cmp
add
xor
repnz
dec
add
dec
jl
insl
cltd
mov
add
rorb
loopne
lret
jmp
das
add
push
add
cmp
pop
xlat
shrl
adc
out
aam
int3
and
add
add
add
icebp
bound
mov
jnp
add
ds
out
lods
fcomps
in
push
loope
adc
fdivl
outsb
add
jo
push
jmp
flds
jnp
sti
movb
mov
sbb
mov
popa
cmp
xchg
jns
dec
add
lock
sub
in
inc
dec
add
loopne
stos
sbb
out
lcall
add
xchg
add
pop
add
add
xchg
stc
popa
add
add
dec
out
push
add
add
add
sbb
cltd
xchg
and
mov
das
sahf
xor
icebp
lahf
cld
pushl
jo
pop
add
jmp
add
sbbb
shlb
iret
stos
jnp
mov
add
add
bound
add
mov
add
add
dec
scas
mov
push
jns
nop
dec
add
test
push
add
lock
dec
icebp
push
js
das
arpl
in
jmp
pop
pop
fsubl
ficoml
aaa
xchg
mov
jmp
adc
dec
add
adc
push
dec
aad
xchg
dec
sbb
add
test
fimull
add
addb
add
cmp
js
cmpsl
push
add
adcb
add
push
add
shl
insl
sbb
test
sti
cltd
out
lods
aaa
dec
jbe
xchg
pop
xchg
mov
add
xor
sbb
add
add
sub
lret
xchg
cmp
pop
sub
xor
cmpsb
cmc
cmp
jge
jmp
test
cld
ja
adc
pop
add
and
fwait
incb
adc
dec
and
xchg
test
add
add
add
add
cmp
xchg
mov
add
and
cmp
mov
scas
lods
pop
sub
lods
fwait
incb
lods
cmp
add
lock
and
mov
test
clc
stos
das
pop
add
add
mov
add
add
add
fcompl
jmp
jl
mov
add
dec
xor
lea
mov
scas
push
add
xor
int3
jns
divl
add
mov
add
add
jno
inc
add
xchg
mov
pop
xor
jecxz
mov
xchg
push
xchg
xchg
in
jae
cmp
mov
xor
add
add
mov
add
push
cmp
mov
add
fmull
inc
add
xor
push
les
imul
ficoms
lock
or
sub
push
add
add
fwait
push
add
cli
xor
mov
add
repnz
push
add
mov
incl
push
add
insl
fisttpl
in
pop
sbb
clc
pop
add
out
inc
call
mov
xchg
sbb
add
mov
add
mov
xor
dec
sbb
add
push
add
add
inc
repz
call
out
add
jp
incl
adc
inc
aaa
pop
pop
add
mov
or
sbb
mov
mov
inc
add
or
adc
sahf
fists
xor
mov
add
jle
sub
sub
scas
stos
push
add
aad
outsb
add
or
daa
pop
add
in
cltd
mov
add
popf
lods
add
add
xchg
mov
pop
add
outsb
add
jle
sub
cmp
adc
out
add
add
std
inc
push
cmp
leave
lret
add
inc
jb
mov
out
dec
add
add
push
add
inc
sbb
mov
add
dec
add
jnp
mov
add
cltd
mov
push
sub
xchg
sub
sahf
xor
add
mov
ljmp
and
xchg
add
mov
pushf
test
sub
hlt
stos
je
push
add
int3
inc
add
inc
add
lods
cld
fisubrs
xchg
cmp
add
add
fidivl
add
add
clc
ret
aad
jnp
push
add
jg
inc
add
ja
add
notb
inc
pop
push
add
cmp
shlb
test
in
dec
add
notb
pop
add
add
pop
in
sub
add
adc
and
fdivrp
jl
stos
or
or
iret
push
adc
push
add
jns
jg
xchg
add
aaa
jb
dec
add
loope
or
lock
cltd
add
jo
lea
hlt
rcrl
rcrb
adc
xchg
xor
call
popa
cmp
jp
lahf
cmpsl
pushf
rclb
jnp
or
bts
leave
pop
daa
and
xchg
stc
or
hlt
dec
add
fdivrp
xchg
push
add
add
xchg
dec
and
ror
shl
mov
mov
jmp
jl
cmp
inc
or
mov
add
cltd
in
xor
add
add
cli
std
and
add
lret
adcb
adc
repnz
cmp
add
and
inc
fwait
std
add
or
imul
xlat
in
mov
add
add
inc
fwait
or
and
imul
add
add
jbe
outsb
add
in
data16
outsl
cmc
popa
aas
push
add
add
xor
dec
xchg
xchg
sub
dec
xor
outsl
movsl
sub
dec
lea
nop
je
dec
add
decl
xlat
add
mov
jg
mov
push
sub
test
xchg
aaa
sub
dec
add
aaa
mov
add
add
xchg
pop
add
jbe
pop
mov
sbb
cli
scas
push
add
dec
imul
test
aam
add
movsb
lcall
add
add
dec
add
push
jecxz
hlt
lds
into
cmovns
inc
add
pop
mov
xchg
add
stos
stc
dec
ret
dec
outsb
add
lea
add
add
inc
xchg
ljmp
sub
repz
add
out
cli
cmp
add
data16
push
add
xchg
lahf
call
sub
sub
and
test
ret
add
repnz
cmp
add
nop
mov
orb
mov
or
js
rcrl
jge
add
jno
sub
gs
xchg
or
pop
add
enter
inc
add
add
insb
add
out
mov
mov
jle
popl
pushf
dec
add
test
jecxz
cmpsb
inc
add
sub
push
dec
add
xlat
and
fisubs
xchg
add
cmpl
gs
adc
jmp
sbb
dec
add
add
add
ljmp
shll
cmpb
test
shr
push
aam
add
add
or
rclb
add
and
stos
js
roll
out
or
aam
cmp
aad
jb
mov
cmp
sub
sub
mov
add
push
adc
leave
pop
add
add
sub
xorb
mov
add
mov
cmp
pop
add
sti
cltd
sbb
mov
leave
sub
dec
add
xor
jmp
in
mov
add
repz
push
add
add
add
or
pusha
add
add
cmp
std
insb
add
lods
repnz
fiaddl
add
add
dec
add
repz
mov
bnd
push
pushf
sub
mov
lret
push
add
test
leave
adc
add
cmp
mov
fnstsw
cmp
dec
add
add
imul
mov
add
add
push
add
add
rclb
cmpsl
mov
pop
inc
add
out
sbb
daa
rorl
add
add
push
add
add
pop
inc
add
cmpsb
sbb
add
add
add
ret
pop
jl
cltd
ficoml
sbbb
add
sarb
js
cwtl
xlat
or
rcr
add
dec
add
add
and
add
mov
mov
fwait
imul
inc
andb
pop
add
pop
cli
les
fdivrl
lds
test
add
cmpsb
cmp
ret
push
inc
add
cmp
mov
add
add
xor
shll
call
ficomps
adc
dec
jns
sub
dec
add
add
into
mov
push
jge
mov
and
cmp
fisttpl
add
int3
shlb
jo
jne
jbe
inc
add
aaa
dec
xor
jmp
inc
add
push
jno
int3
dec
shll
aad
in
add
fstl
add
insl
add
mov
add
shlb
out
inc
mov
add
lods
and
shrb
add
mov
dec
add
xorb
add
dec
es
shl
sbb
test
sbb
and
addb
add
mov
add
loop
add
xchg
xlat
xor
mov
push
js
lcall
add
push
add
cltd
sti
outsb
add
push
add
lret
add
or
cmp
ljmp
sub
or
mov
add
mov
add
add
pop
loopne
add
add
add
ret
add
add
add
fchs
push
add
fiaddl
shl
adc
stos
arpl
dec
int
add
inc
add
cwtl
push
add
add
cmp
lock
std
leave
sahf
jno
bound
fwait
pop
pop
loopne
jnp
add
fcmove
push
add
cmpsl
xor
xchg
cmp
imul
les
and
inc
add
add
iret
sti
inc
add
int
scas
cmc
mov
xchg
cmp
loopne
add
sub
sbb
pop
sub
add
add
fstl
add
add
fildl
add
push
in
aaa
inc
add
sbb
dec
in
pop
add
jmp
pusha
add
and
fs
sbb
out
adc
xor
dec
add
lcall
add
cmp
add
mov
int
stos
or
xor
imul
cmp
subb
xorb
pop
and
sarb
sbb
dec
jne
jo
in
ljmp
test
jp
icebp
les
outsb
add
orb
add
inc
push
add
in
out
add
cld
cmp
jmp
sbb
dec
add
add
cmpb
sub
jbe
mov
cltd
xchg
jne
bound
cmp
dec
add
pop
add
push
sbb
xorl
add
sub
sbb
mov
add
add
sbb
push
add
out
loope
and
sbb
cli
mov
int3
pop
cltd
and
mov
add
xchg
mov
xchg
jmp
iret
pop
xor
ret
mov
loop
cmp
popa
incl
into
out
imul
mov
fwait
dec
rclb
jo
mov
add
scas
jecxz
add
add
mov
stos
mov
lret
cs
popa
dec
add
add
popa
lret
add
add
add
std
and
lahf
sti
adcb
mov
xor
add
insb
add
inc
add
sub
out
lds
rcl
jmp
and
mov
add
dec
in
stos
xchg
add
enter
add
sub
sti
sub
les
add
add
xchg
je
pop
add
push
lahf
or
add
stos
outsl
add
iret
enter
sahf
mov
shl
add
pop
add
add
outsb
add
imul
aas
mov
xor
in
sub
xlat
loop
cmp
pop
jecxz
rol
inc
shr
inc
add
add
add
cltd
xchg
mov
xchg
add
add
dec
addr16
stc
or
das
addr16
sbb
push
imul
add
add
dec
add
pop
xor
lret
push
je
popf
sbb
call
push
add
add
push
add
add
clc
fwait
pushf
jg
add
add
mov
repnz
call
cli
dec
add
rcrl
inc
add
out
add
add
pop
add
and
or
add
rorl
add
int
aas
leave
jno
add
adc
test
mov
sub
xorb
inc
add
sbb
push
add
dec
add
add
add
fcoml
out
inc
mov
ss
jle
sub
add
imul
insb
add
xor
add
add
add
popa
and
mov
mov
add
outsb
add
aas
outsb
add
xlat
js
in
xchg
and
mov
dec
les
sbb
sbbl
cmpsb
mov
add
hlt
xchg
jecxz
stos
jg
popf
or
pop
add
or
xchg
mov
xchg
or
jnp
fists
sbb
add
and
add
add
in
add
pop
dec
add
xchg
jns
cmp
mov
sub
popf
insb
add
jbe
add
jg
insb
add
pusha
add
insl
xchg
rorl
daa
loop
mov
or
inc
mov
add
add
push
pop
mov
popa
cld
jb
mov
and
jg
movsl
mov
js
fidivl
add
fstpl
add
fidivl
insb
add
pop
inc
add
pop
add
add
mov
or
loop
mov
scas
test
add
add
mov
add
inc
int3
in
mov
push
jle
mov
stos
push
mov
add
inc
mov
add
into
popl
sub
adc
dec
add
add
lock
xchg
dec
add
in
xchg
sbb
mov
enter
add
cmc
jge
add
sahf
fisubl
frstor
cli
push
add
or
loopne
add
inc
add
add
add
push
lds
add
pop
add
cmp
dec
mov
mov
or
sub
pop
add
int
inc
add
movb
xor
xchg
add
mov
push
adc
jecxz
and
jle
mov
xlat
movsl
mov
add
add
add
add
add
aaa
hlt
mov
mov
imul
add
add
inc
cmp
mov
add
dec
add
int3
and
dec
add
mov
add
ljmp
mov
jg
jnp
mov
xchg
loopne
sub
mov
sub
sahf
scas
or
add
add
cwtl
add
xchg
cmp
out
orb
add
add
add
add
sub
mov
js
push
add
test
adc
test
in
out
cwtl
cmp
sbb
rorb
outsl
stc
fcmovne
clc
push
add
pop
jns
lds
mov
test
add
add
add
sti
jg
je
sub
sub
fistps
insb
add
jg
add
aam
xor
fldcw
add
jl
test
add
add
fldenv
mov
xchg
mov
mov
add
loope
add
stc
into
inc
add
cmc
lret
xchg
add
jno
add
add
fldcw
paddsw
loop
int3
dec
sbb
add
mov
dec
dec
loop
add
xor
ret
mov
add
mov
pop
push
add
sbb
xchg
adcb
add
adc
push
add
mov
add
out
jno
call
mov
jbe
gs
add
inc
add
add
iret
push
testb
pop
cmp
arpl
add
adc
cmpl
mov
xchg
movsb
mov
fsub
aas
in
loop
rorb
add
outsb
add
fildll
enter
dec
repz
and
add
aad
aaa
adc
jno
stos
les
add
test
stos
stos
jb
and
mov
fldcw
rorl
mov
out
xchg
and
pop
pushf
xchg
outsl
orb
mov
mov
aam
out
inc
push
add
lcall
add
xchg
add
lods
xchg
mov
std
pop
pop
add
subl
inc
add
inc
add
sbb
stos
pop
addr16
fnstsw
add
lea
and
or
sbb
xor
jp
jmp
push
add
push
push
add
push
xor
cmp
pop
inc
add
add
insl
xchg
cmc
test
add
sbb
test
mov
aas
out
mov
add
pop
push
add
stos
call
add
fcoml
loopne
je
test
mulb
add
xlat
xor
dec
add
and
jecxz
push
add
hlt
neg
aad
hlt
push
add
add
test
xchg
add
out
add
jno
add
aad
add
sbb
mov
add
cltd
sbb
popf
mov
pop
stos
rclb
icebp
xor
jb
scas
mov
xor
in
leave
xchg
lcall
xor
push
add
lret
add
out
gs
push
cmp
out
add
jge
ljmp
jp
pop
push
add
xchg
or
jecxz
jg
pop
lret
jl
inc
add
sbb
test
mov
scas
mov
dec
add
int
stos
push
add
scas
das
adc
pop
mov
ja
in
or
test
jl
lahf
aad
ret
arpl
add
shll
add
out
add
and
scas
int3
xor
fsubrp
jge
inc
add
lret
adc
add
add
cmc
ss
inc
add
add
add
and
push
add
xchg
insl
sahf
out
or
add
cmc
popa
or
jl
xchg
pusha
add
push
push
add
les
add
fidivrs
iret
xchg
jnp
mov
pop
loopne
arpl
push
sbb
int3
mov
sub
int3
cmp
imul
cmpl
ljmp
or
inc
inc
mov
pop
lods
sbb
ljmp
jbe
hlt
call
arpl
mov
xor
add
xchg
inc
cli
bswap
test
stos
loopne
add
xchg
dec
add
sbb
in
push
add
scas
xor
sub
add
add
add
outsb
add
adc
rcll
icebp
imul
or
add
adc
daa
and
add
mov
mov
mov
notl
ss
xchg
pop
add
mov
push
cwtl
out
fsts
add
pop
adc
add
mov
add
sub
imul
add
mov
mov
add
add
mov
add
or
pop
add
ret
sub
jne
mov
mov
add
add
dec
les
add
adc
dec
add
mul
sub
imul
ja
add
adc
mov
add
lret
lods
inc
scas
add
lret
cmp
lret
add
pop
dec
sub
mov
add
and
add
js
push
push
add
popf
add
mov
sarl
jo
in
mov
out
add
dec
mov
insb
add
add
dec
fildll
enter
mov
mov
pop
add
lea
cmpsl
fnsave
pop
add
daa
jle
stos
ja
in
ja
clc
scas
insl
xor
pusha
add
sbb
cmp
rcrb
scas
test
xchg
cmp
repz
lahf
and
push
outsl
xchg
shlb
add
add
pop
stos
jecxz
ja
mov
mov
icebp
outsl
mov
test
add
push
add
rcr
sbb
mov
sub
out
leave
lcall
add
popf
cltd
pop
or
leave
into
and
pop
and
add
add
scas
mov
sbb
mov
aam
add
jo
andl
add
sub
dec
push
add
inc
in
addl
add
add
fcmovb
pop
add
jecxz
push
add
or
jle
insb
add
sbb
push
add
add
clc
inc
add
scas
add
sbb
jns
pcmpeqb
lods
push
add
add
add
add
lds
stos
jle
imul
sbb
in
mov
fwait
or
sub
and
in
clc
jo
adc
leave
sub
adc
xor
push
add
or
add
jp
jle
jmp
add
outsb
add
add
aam
add
add
pop
and
mov
mov
adc
or
xorl
add
mov
pop
add
sbb
add
push
add
add
and
divb
je
ret
sub
fsubrs
add
into
ljmp
mov
insb
add
cmp
add
or
add
jmp
add
popf
cmp
or
pushf
adc
mov
add
add
and
add
xchg
pusha
add
lds
movb
dec
add
jecxz
and
ret
popf
dec
add
das
pop
add
das
push
add
xor
push
sub
add
cli
ret
stos
arpl
add
add
iret
mov
ret
lea
add
sti
aaa
xor
ficoml
andb
in
add
inc
xor
pushf
inc
push
xchg
icebp
or
imul
add
add
add
xchg
imul
inc
mov
pop
add
cmp
push
add
decb
in
jmp
add
add
hlt
imul
scas
sbb
mov
add
lahf
cmpsb
sub
add
dec
sbb
sub
cmp
jbe
push
add
add
add
mov
pop
das
sub
add
gs
add
add
or
test
js
sbb
cltd
dec
add
fsubrs
cmc
rolb
push
xor
mov
xchg
mov
pop
add
and
lret
nop
or
movsl
shll
pop
mov
aam
add
int3
cmp
xchg
pop
xchg
fdiv
mov
cwtl
loop
lods
inc
cmp
into
mov
add
mov
pop
addl
and
pop
outsl
insb
add
xchg
xor
js
adcb
mov
lock
inc
fidivrs
scas
js
das
mov
daa
push
jg
scas
test
out
mov
cld
scas
mov
and
lret
adc
lret
add
in
add
jg
int3
popl
leave
mov
cmc
rcr
leave
xor
call
mov
add
cli
add
add
divl
lods
cmp
out
hlt
jl
add
dec
add
add
dec
jmp
inc
mov
add
add
sbb
add
dec
aam
add
aam
movsb
frstor
cmp
push
testb
add
and
call
fsubs
push
dec
dec
adc
mov
xor
and
cld
adc
test
addb
mov
in
cmp
dec
mov
lret
cmp
xchg
icebp
inc
add
push
add
jmp
push
add
dec
add
add
movl
add
popf
test
mov
clc
and
ljmp
add
add
add
pop
add
inc
push
or
pushf
popf
jnp
aad
add
mov
inc
scas
mov
add
outsb
add
add
in
enter
les
cmpsb
in
dec
add
iret
push
add
xor
jg
add
test
xchg
insl
test
push
add
mov
xor
movsl
cmc
pop
jecxz
xor
aas
cmpsb
cmpsl
jge
je
sbb
iret
daa
rorl
add
sub
mov
aam
aam
add
add
pushf
xlat
lea
jmp
add
dec
mov
push
add
test
mov
add
or
mov
add
xlat
cmc
dec
add
inc
or
xorb
jno
movsl
lds
jo
add
movsb
lock
mov
stos
mov
mov
add
push
in
lahf
mov
add
add
adc
add
add
add
pop
add
dec
add
and
inc
xchg
mov
setp
add
add
add
test
gs
xchg
bound
add
dec
add
div
orb
mov
cld
lahf
loopne
add
push
add
and
js
les
mov
add
aam
add
xchg
mov
push
add
vxorps
xchg
add
jb
add
fwait
sti
jecxz
add
inc
add
or
adc
in
outsb
add
add
mov
fwait
add
lcall
or
popf
mov
mov
add
add
iret
pusha
add
sub
and
xor
sub
stos
xchg
rcrb
add
js
jmp
inc
add
cmp
add
add
jle
out
xchg
add
add
add
cmp
jmp
add
cmp
xor
add
xor
add
mov
mov
lcall
out
jbe
push
add
or
mov
adc
inc
add
int
or
imul
adc
pop
add
add
add
jae
add
xchg
loope
sbb
mov
aam
and
rcl
popl
pushf
adc
jb
xor
mov
jb
jb
test
add
mov
cmpl
adc
shll
and
add
push
shll
inc
add
pushf
int
or
mov
push
add
jbe
mov
js
repnz
sbb
mov
mov
mov
push
add
outsl
jl
add
repnz
mov
jmp
andps
push
fdiv
dec
add
add
and
scas
sbb
lods
lahf
sbb
movsl
outsb
add
loopne
add
frstor
push
add
add
fsqrt
pusha
add
mov
arpl
lret
add
aas
aam
add
jmp
pop
mov
add
mov
test
push
add
add
add
cmp
outsl
jg
rorb
cmc
jns
flds
add
add
out
pop
in
test
add
or
sbb
sbb
into
addr16
sub
lea
scas
lods
jb
sti
sbb
cmpsl
fcoms
mov
add
add
imul
mov
add
je
add
add
enter
add
fsts
add
cmc
push
daa
mov
ja
add
cmp
aad
add
inc
add
xchg
mov
xchg
pop
sbb
sbb
xchg
lahf
xchg
negl
add
add
aam
or
xlat
mov
jne
add
scas
sub
out
ljmp
pop
xchg
jo
repz
fwait
sbb
into
loop
cld
cwtl
push
and
dec
add
and
add
push
add
out
mov
inc
add
add
popa
inc
aam
int3
adcb
outsb
add
dec
add
add
add
push
mov
sbb
jae
push
add
pop
add
in
in
mov
ljmp
rcrb
ds
movsb
insl
out
xlat
mov
push
add
xchg
lret
mov
add
xchg
and
add
lret
adc
add
dec
add
mov
add
fidivl
inc
sbb
and
add
push
lods
sbb
loopne
rcr
aas
pop
scas
sub
lcall
jg
ja
imul
dec
add
lds
lock
rolb
mov
fstpl
dec
add
add
hlt
sbb
push
js
les
mov
into
lcall
je
mov
adc
push
add
hlt
cmp
add
aad
add
test
mov
inc
fnsave
inc
call
inc
pop
add
hlt
out
lcall
pop
pop
add
scas
mov
sub
push
mov
xlat
vsqrtpd
add
jmp
mov
add
push
add
leave
xor
clc
sbb
sahf
hlt
push
aas
mov
add
xchg
inc
add
dec
mov
and
mov
repz
test
add
mov
add
test
fidivrl
add
add
pop
add
add
mov
add
mull
mov
xlat
addr16
gs
adc
mov
add
out
dec
add
lods
xchg
test
pop
pop
add
add
mov
fldenv
add
add
xchg
cmc
or
adc
add
pusha
add
add
imulb
add
xchg
test
scas
adc
aad
aam
andb
fsubp
leave
xchg
push
add
add
add
shl
mov
ret
out
add
mov
jns
sub
sbb
or
out
push
xchg
jecxz
add
and
outsb
add
imul
add
lock
add
add
xchg
outsl
sbb
jl
scas
lret
hlt
push
add
sbb
or
jmp
loope
test
mov
dec
arpl
mov
jl
scas
stc
and
bound
ret
shlb
adc
stos
insl
and
sub
push
add
and
push
inc
add
xor
out
inc
iret
inc
in
test
pop
add
push
add
push
add
add
mov
and
scas
xchg
add
fisttps
add
cmpsl
pushl
add
add
mov
cmp
repnz
daa
out
or
sbb
add
sarl
add
jg
mov
in
pop
push
add
subb
fidivl
adc
and
jb
add
aaa
cmovle
add
xlat
stos
repnz
add
add
xor
cmp
add
cmpsb
mov
add
bnd
cmpsb
lods
add
ret
add
outsb
add
shlb
cmpsl
add
pop
add
add
testb
add
adc
scas
out
pop
stos
aas
gs
outsb
add
movsl
test
in
add
loope
add
out
int
shlb
xchg
out
sahf
test
mov
jmp
add
add
in
push
add
pushf
jl
cmp
add
lahf
call
neg
jbe
iret
popf
xor
out
sahf
mov
into
pop
add
add
mov
add
mov
in
and
loop
adc
mov
mov
data16
sahf
aam
imul
xor
leave
push
add
cli
jno
inc
push
add
outsl
and
sub
lcall
sub
cmp
in
add
add
add
xor
addl
cmp
dec
add
add
std
mov
sahf
cmp
add
add
add
push
add
add
add
sahf
ficompl
add
mov
xchg
jp
mov
pop
mov
jb
mov
add
add
movaps
testb
xor
lret
add
or
pop
cwtl
dec
add
mov
mov
add
add
mov
in
ss
push
sbb
add
xchg
mov
add
icebp
inc
das
jecxz
dec
and
test
idivb
mov
add
add
bound
nop
xchg
ret
das
inc
add
and
or
pushf
out
cmpsl
xchg
popa
repnz
add
sbb
in
lock
or
or
xchg
inc
icebp
pop
aam
adc
cli
adc
add
mov
mov
mov
inc
sarb
jne
idivl
mov
sbbl
lea
add
inc
add
jmp
stc
vmovlps
enter
cmp
adc
fnstsw
add
push
mov
add
mov
add
or
add
repz
cmp
mov
out
pop
dec
add
add
or
jge
movsl
xor
ljmp
xchg
mov
push
add
add
dec
pop
and
sahf
lcall
add
int3
shll
add
data16
and
pop
int3
xchg
or
mov
xchg
push
add
xchg
incl
push
add
or
add
cli
inc
inc
add
add
add
mov
pop
add
adc
jp
cltd
outsb
add
insl
xorps
mov
ljmp
add
pop
push
cmp
pop
sbb
add
cld
insb
add
test
ror
lret
div
insb
add
mov
and
mov
pop
add
dec
add
cmpsb
int
int3
call
add
je
fisttps
sahf
repz
add
gs
add
lods
add
cmc
lods
add
add
add
add
imul
ret
mov
mov
int
add
add
imul
ja
fstpl
pop
add
insl
sub
lret
add
imul
out
out
lret
les
dec
add
adc
nop
lret
add
sbb
mov
jge
add
xchg
shrl
jl
or
add
pop
add
add
pop
jl
or
lods
mov
add
clc
leave
add
add
jmp
push
add
add
mov
mov
sbb
jns
pmaddwd
push
add
add
xchg
add
out
xchg
add
pop
push
add
xchg
push
add
add
in
mov
insl
pop
cmc
test
imull
js
pop
adc
aad
push
add
aas
push
int3
inc
sub
lahf
adc
int3
outsl
incb
inc
test
add
pop
xor
outsl
push
add
mov
pop
dec
add
add
inc
add
ljmp
fildl
bound
ss
cwtl
mov
mov
add
xor
mov
pushf
or
jno
add
xchg
aas
jbe
or
add
fs
mov
sbb
pop
add
jecxz
cmp
or
jns
mov
fwait
imul
and
add
lea
jg
mov
mov
popf
lret
add
and
fdivrs
add
inc
nop
sarl
sbb
iret
jne
add
out
add
xchg
cs
repnz
cmp
xchg
jo
jae
rclb
add
sub
test
sub
inc
add
push
popa
cld
cltd
aam
add
in
popa
cmpsb
add
add
sbb
aaa
in
out
movsb
xchg
pop
add
and
add
add
imul
movsl
lods
mov
add
lret
insb
add
add
lds
jnp
add
jmp
hlt
popf
sbb
push
rorl
add
aam
dec
mov
adc
add
out
aad
pop
add
add
add
inc
lret
inc
add
jmp
data16
mov
cmp
pop
cmp
jp
push
add
add
add
xchg
xchg
xchg
jnp
jnp
add
aaa
mov
add
mov
roll
add
lock
das
mov
or
out
add
cmp
sub
mov
add
cmpsl
movsb
addr16
push
bound
sarb
sub
pop
push
add
pushf
pop
add
stos
dec
add
sub
xor
pop
mov
add
bound
ja
push
add
cmpsb
movsl
cwtl
mov
outsl
add
loope
xor
xchg
add
ret
add
add
add
add
adc
in
scas
dec
add
lods
or
dec
add
and
xor
movsb
out
dec
add
mull
movsb
ja
inc
add
cmpl
loope
movd
rolb
sbb
out
add
add
push
add
add
add
add
add
test
add
addr16
add
add
add
sub
cli
inc
add
enter
sbb
xchg
outsb
add
popa
cmp
xchg
lcall
jae
ljmp
mov
add
add
sbb
add
movsb
and
daa
gs
lds
hlt
sub
cwtl
out
mov
fwait
shrb
lahf
arpl
push
adc
repz
add
cwtl
pop
les
outsl
out
xchg
and
cld
jbe
mov
popl
mov
iret
ja
push
mov
mov
add
push
mov
pop
cltd
adcb
add
cli
sbb
rorb
or
loopne
xchg
mov
mov
pushf
mov
add
dec
add
lret
movsl
fldl
xor
add
add
sbb
add
add
loope
jne
add
or
in
add
xchg
test
xor
dec
add
add
je
jmp
inc
cmpsb
inc
add
add
jno
or
int3
and
dec
in
fldl
sbb
xchg
jne
push
add
jl
sub
or
iret
add
adc
daa
push
add
add
lods
dec
add
repnz
push
inc
add
adcb
add
mov
jo
mov
xor
int3
add
adc
iret
fldenv
add
push
jb
lds
add
and
push
mov
shrl
pop
add
test
add
lahf
mov
adc
pop
add
cmpsb
inc
pop
mov
add
fs
pop
cmp
inc
add
aas
iret
push
lret
daa
fisttpll
ljmp
add
add
insb
add
mov
dec
cmc
fisubs
add
ljmp
mov
pop
add
cmp
mov
add
add
add
add
mov
add
rolb
movsb
sahf
sbb
mov
jge
scas
inc
add
dec
jp
adc
inc
add
adc
add
mov
add
xchg
aam
add
dec
mov
mov
sbb
icebp
movsb
lock
cmpsb
or
or
xchg
inc
daa
popa
mov
add
enter
inc
add
jns
add
xchg
loope
sbb
mov
add
push
imul
or
ret
add
mov
mov
insl
sub
sti
cld
scas
mov
hlt
push
add
inc
loop
add
dec
xor
mov
add
xorl
mov
add
popf
imul
add
addr16
add
lret
ljmp
shrb
xor
dec
pop
add
add
outsl
mov
leave
imul
fisubrl
ficomps
add
add
add
jg
pop
hlt
sbb
mov
or
adc
add
push
add
and
jle
jl
jg
add
xchg
jb
push
push
add
bound
sbb
je
xor
add
add
add
xchg
in
test
lea
sub
add
loopne
arpl
cmc
arpl
scas
pop
add
mov
add
loope
add
jecxz
shll
add
add
push
add
jmp
jbe
sbb
jecxz
add
cli
pop
repz
add
mov
add
jle
sub
xchg
pusha
add
mov
xchg
mov
add
jp
sub
filds
repz
pushf
sub
movsl
popf
push
std
push
add
loop
adc
add
lods
jb
mov
xchg
or
data16
cmp
add
inc
add
mov
nop
shlb
in
adc
xchg
add
push
or
rep
add
fsubrl
add
add
mov
mov
js
fildl
jns
mov
adc
loop
xor
sub
cmp
cmp
dec
xor
into
push
sti
xor
mov
cmp
jl
mov
add
std
pop
data16
cmpsb
das
push
je
fsubrs
jno
add
ret
sub
into
shrl
rclb
sub
lret
mov
faddl
iret
sbb
mov
scas
push
mov
and
sbb
mov
scas
sbb
cmpsb
lret
inc
cmp
add
add
sbb
push
int3
dec
add
mov
and
add
pop
adc
inc
add
fistpl
add
dec
add
pop
add
add
rcl
add
xchg
jp
sbb
call
cltd
mov
repnz
add
mov
cltd
jo
xor
test
push
cltd
mov
add
clc
sbb
xchg
xor
jae
dec
jmp
mov
add
add
push
add
lret
push
adc
cltd
xor
lods
push
jle
int3
jb
add
sub
pop
add
clc
push
add
xor
lods
scas
iret
hlt
out
into
sbb
cmp
adcb
add
mov
xchg
fdivrl
sbb
jl
jo
mov
lret
inc
sub
loope
add
ds
stos
mov
out
xchg
icebp
push
jmp
add
add
aad
sub
add
jno
pop
mov
sbb
mov
je
cli
cmp
test
cmp
ja
mov
adc
insb
add
jle
jnp
add
jge
add
add
mov
and
cmp
and
rcr
mov
or
add
dec
add
add
mov
push
add
or
icebp
push
add
add
icebp
or
movsb
rorl
and
ljmp
add
xchg
int3
push
add
cwtl
and
iret
lods
mov
faddl
add
push
add
add
sbb
js
jae
add
pop
add
data16
add
icebp
cmp
out
loope
nop
cli
sub
pusha
add
push
out
pop
xchg
mov
jl
mov
shll
add
test
mov
ficompl
add
sbb
push
fiaddl
mov
add
pop
fildl
cmp
or
sbb
inc
add
dec
and
pop
add
mov
repz
inc
add
mov
icebp
faddl
add
neg
mov
mov
push
add
add
add
aad
add
push
das
xor
mov
push
add
and
ja
push
adc
push
add
add
mov
lahf
fistl
fdivr
in
xor
outsb
add
pusha
add
pop
arpl
fldenv
add
add
add
xor
add
call
or
sahf
into
mov
push
inc
add
jns
inc
pop
add
popf
lods
pop
mov
insl
lods
std
pushf
sbb
mov
or
pop
add
cmpsb
sub
sbb
add
dec
icebp
and
outsb
add
mov
data16
add
mov
arpl
enter
inc
add
fsubrl
stc
int
add
jb
pop
xor
mov
cmpsl
sub
dec
push
add
pop
pop
pop
movsb
subb
inc
add
or
lock
mov
and
fsubrs
cmp
pop
push
imul
sub
nop
and
aaa
nop
lods
iret
jmp
add
push
mov
cs
cwtl
jb
inc
add
and
or
push
add
sbb
mov
push
jbe
lcall
add
lcall
clc
mov
mov
aaa
add
mov
jmp
dec
jge
sar
int
adc
jne
das
clc
fadd
scas
andl
xchg
stc
mov
add
dec
stc
cmp
es
mov
jno
push
add
add
scas
sub
push
pop
sbb
cmp
dec
idivb
leave
loope
sbb
scas
ret
notl
add
lahf
adc
add
dec
mov
fldenv
and
mov
ret
jo
popa
jne
jge
add
movl
jnp
shll
dec
push
iret
sbb
roll
fnstenv
add
insl
jg
add
add
mov
pop
icebp
cmp
or
stos
cltd
imul
adc
sbb
sbbl
or
mov
add
add
mov
and
mov
add
ret
in
cmpsb
xor
xor
add
or
dec
div
insl
mov
test
mov
mov
add
lcall
loopne
mov
add
pusha
add
mov
jae
nop
lods
or
data16
jo
push
add
add
add
pushf
or
dec
add
stos
je
mov
adc
lods
pop
outsb
add
stc
lcall
dec
add
mov
add
movsl
adc
cli
imul
add
cs
xchg
cld
mov
push
add
jg
add
lret
dec
xchg
xchg
sbb
pop
ret
inc
add
lcall
shll
loopne
push
add
mov
add
xlat
xchg
mov
outsl
xchg
ret
add
imul
cmc
mov
lods
pop
ret
das
push
add
push
add
decb
or
mov
icebp
cmc
cmpsl
addr16
iret
mov
add
add
in
pop
add
and
dec
add
xlat
mov
cmp
cltd
cmp
inc
sbb
mov
add
sahf
sbb
int3
lret
mov
xchg
mov
add
adc
leave
loopne
imul
sahf
addb
dec
add
shll
add
pushf
sub
add
fwait
adc
and
lcall
add
or
xchg
repnz
rclb
add
add
add
add
stos
jecxz
cld
sahf
and
popf
lcall
testb
bound
push
mov
add
xchg
call
pop
add
add
out
pop
xchg
imull
mov
fisubl
add
mov
jne
add
cmpsl
push
add
cmc
sar
add
shl
mov
and
dec
ja
push
add
stos
dec
add
adc
test
outsl
adc
push
leave
mov
adc
push
add
inc
add
les
dec
cmc
lea
push
bound
or
cmp
fisubrs
sub
sub
ret
mov
dec
add
push
and
mov
add
add
fsub
mov
sub
pop
add
push
add
cmp
push
cmpsb
sbb
cmpsb
mov
iret
and
push
add
sub
add
subl
push
add
or
pop
add
mov
push
jge
das
lods
jg
add
jo
fisubl
andps
call
or
sub
xor
inc
jge
and
lahf
outsl
sub
pop
add
out
lock
sarb
fwait
out
xchg
pop
lahf
dec
push
adc
add
mov
add
lea
enter
icebp
or
sar
lahf
mov
pop
clc
jo
add
add
popl
cwtl
push
add
pushf
jge
lret
cmp
push
add
outsb
add
add
add
inc
push
push
add
push
sbb
sub
push
add
pop
out
add
sub
jle
xor
leave
out
add
add
and
sub
cmp
xor
add
inc
sub
loopne
jae
lea
or
je
call
out
add
rolb
push
add
mov
add
jne
add
loop
aam
add
fucomip
xchg
cmp
adc
add
icebp
dec
add
add
sub
insl
push
add
add
push
push
add
std
cmpb
xlat
pop
mov
mov
inc
add
dec
fwait
xchg
and
add
add
rcrl
inc
jg
mov
jae
sbb
jle
or
and
sbb
call
inc
mov
int3
mov
add
add
add
imul
add
xor
sbb
cli
out
cmpsl
cwtl
call
out
xchg
repnz
add
mov
aas
pop
add
js
cld
xchg
mov
mov
jle
insb
add
add
xor
movsb
shll
and
and
add
inc
add
jb
xchg
jg
js
adc
mov
sbb
add
lahf
xchg
add
test
add
stos
dec
and
fisubl
inc
bound
divl
dec
add
rolb
jnp
mull
jae
sbb
dec
add
pop
add
cmp
sbb
add
icebp
insl
or
add
add
fildl
add
push
add
call
sbb
enter
jno
add
add
mov
or
fsts
cmpsb
data16
adc
push
add
add
add
lret
sbb
das
adc
mov
pop
xchg
pop
add
adc
mov
cmp
add
xor
lret
add
aam
or
int3
sbb
lcall
dec
add
xor
sub
pop
add
pop
dec
sub
cmp
sub
mov
xlat
outsl
hlt
add
add
add
popa
cmp
ret
sub
adc
xchg
out
loop
add
in
inc
inc
xchg
cmp
imul
mov
int
aad
add
into
jge
fidivs
cmp
or
lea
enter
add
or
std
cmp
in
add
data16
add
jns
jns
test
add
xlat
adc
jp
xchg
pop
cmp
add
and
nop
push
add
and
or
jp
fiaddl
cmp
xchg
aam
xchg
pop
jae
mov
inc
push
mov
data16
test
or
in
add
add
add
pop
add
popa
jl
clc
add
enter
iret
rcrb
mov
loop
add
add
add
inc
add
add
mov
xchg
loope
add
dec
mov
pop
std
lods
stos
push
push
add
stc
cmp
call
pop
add
in
mov
add
dec
add
sub
mov
inc
add
add
out
hlt
scas
pop
cmp
dec
add
sbb
nop
push
sbb
mov
mov
add
jb
add
fnstsw
and
test
data16
testl
add
sbb
cmc
addb
in
sbb
mov
movsb
imul
add
xor
inc
add
push
add
jmp
vunpckhps
add
xor
sti
fisttps
pop
cmpsl
cmp
out
aad
add
add
add
add
mov
cli
push
add
pushl
add
cmc
xchg
add
add
push
in
loope
add
data16
rcrl
jbe
sub
push
cmp
shrl
mov
sahf
clc
lods
sub
scas
out
bound
inc
add
sub
or
ds
in
aam
lret
fstpl
add
leave
lcall
xchg
add
add
pop
add
cli
iret
int
add
sub
add
add
leave
loope
mov
cmp
adcb
sbb
sbb
cmp
cli
fildl
mov
std
adc
les
mov
sub
gs
aas
in
add
test
mov
ret
xchg
xchg
jnp
add
xchg
jnp
div
or
roll
jne
cmp
int
lods
mov
out
dec
add
mov
and
jne
scas
push
add
adc
add
add
add
sbb
stc
insl
shlb
add
push
add
mov
mov
repnz
daa
ljmp
pop
inc
mov
add
data16
push
push
push
add
in
out
into
ret
jae
add
push
add
loopne
cli
pusha
add
xor
mov
repz
add
pusha
add
or
jne
add
dec
lret
cmc
lcall
add
sbb
mov
cli
adc
xchg
into
outsl
into
insb
add
add
cmp
outsb
add
jno
aam
jl
sbb
push
add
cmp
push
add
cmpsl
repnz
test
add
arpl
shrb
cld
sahf
push
add
adc
add
push
je
pop
mov
push
add
out
and
add
bound
stos
fimull
les
test
ret
cmp
mov
test
cmc
frstor
inc
add
pushf
add
add
lods
pop
add
jmp
sarl
adc
pop
movsl
gs
jb
pop
add
add
xchg
push
add
bound
mov
xor
inc
add
jge
and
int3
lcall
inc
or
add
add
add
movsb
call
add
add
ror
push
add
rcrb
jbe
mov
mov
dec
add
jbe
mov
in
and
push
add
add
out
daa
push
add
rcll
and
mov
add
test
add
scas
sub
outsl
popa
into
pop
add
js
add
mov
mov
cmp
int3
in
add
mov
add
xor
add
in
pop
xor
mov
icebp
mov
adc
outsb
add
inc
jp
and
add
in
iret
out
add
pop
out
add
mov
pop
inc
push
add
push
push
add
fnstcw
roll
add
aad
or
ret
pop
add
jg
aad
add
jecxz
lods
add
jno
mov
add
add
repz
jp
test
add
mov
lock
divl
lods
sbb
fwait
fwait
leave
mov
mov
jno
add
add
adcl
add
loopne
add
mov
adc
xorl
iret
test
mov
add
lret
xchg
jbe
imulb
add
mov
add
jge
add
jne
aam
out
add
int3
push
add
and
add
add
push
inc
add
jmp
loop
xchg
data16
xchg
cli
push
add
add
mov
scas
and
ljmp
push
add
add
or
out
sbb
mov
adc
or
mov
jae
push
add
mov
jb
inc
sub
push
int
adc
lret
jge
push
add
cmp
push
add
int3
sub
hlt
ret
leave
push
jg
xchg
iret
bound
push
add
popf
fdivs
out
ds
aad
push
dec
inc
ficoms
in
mov
add
bswap
popa
in
add
out
cmc
cli
bound
xor
add
add
jb
inc
lcall
jns
and
push
cltd
insb
add
test
xor
loope
popf
push
outsb
add
add
mov
dec
jle
ror
fisttpll
and
mov
mov
jmp
jmp
mov
sub
inc
add
or
imul
rcrb
outsl
sub
sub
test
adc
test
xor
ljmp
mov
add
int3
push
add
sub
pop
add
push
add
add
mov
jle
loopne
add
or
mov
jg
add
jb
pop
add
cmp
pop
add
add
xchg
aaa
lds
or
add
jp
dec
add
xor
add
push
add
mov
mov
jno
jb
data16
cmpsb
lret
pusha
add
int3
movsl
push
add
add
in
add
mov
pop
shrl
sub
add
add
adc
inc
add
add
add
sbb
dec
pop
lahf
insb
add
sub
add
add
xor
xchg
push
stc
adc
pushf
lret
repnz
nop
pop
sahf
in
das
mov
add
das
and
add
jno
xor
movsb
xchg
cmp
fld
xor
mov
fldenv
or
add
and
call
mov
mov
sub
jne
sti
xchg
adc
stc
iret
jnp
add
add
add
inc
test
idivb
mov
and
in
mov
lcall
add
cmp
adc
add
jns
add
ljmp
add
pop
add
adc
aas
dec
xor
xlat
mov
pop
or
les
add
adc
imul
add
lock
add
add
add
push
cwtl
shl
push
add
stc
ja
add
mov
add
add
add
sahf
popf
add
add
cmc
mov
xchg
mov
add
sub
and
cmp
jmp
add
add
mov
add
clc
jecxz
and
add
add
add
repnz
cmp
jbe
stos
jge
pop
xor
mov
repz
add
jmp
mov
mov
or
add
and
add
xchg
mov
in
scas
ss
test
fs
cmp
decb
add
test
in
add
jmp
add
or
dec
jno
mov
ja
jb
and
aaa
mov
add
add
ret
xlat
jo
into
shl
add
leave
mov
sbb
cltd
lea
into
stos
sti
inc
add
int3
in
inc
add
ljmp
std
pop
add
sbbb
add
call
mov
add
stos
icebp
clc
or
mov
adc
pusha
add
mov
mov
fdivr
or
fldenv
add
test
inc
divb
inc
add
jno
aad
add
dec
add
mov
cwtl
pop
add
addr16
sub
pop
mov
jle
pop
dec
add
lret
scas
and
xor
xchg
add
add
int3
ja
mov
iret
movsbl
push
xor
fdiv
cmp
add
cmp
aad
mov
popf
daa
stos
xchg
mov
repnz
inc
add
jnp
cwtl
sbb
add
hlt
sbb
out
cmpsl
and
sbb
cli
inc
icebp
cmp
xor
push
add
fcmovnbe
loop
xchg
or
fmull
add
ss
je
mov
xchg
add
sbb
mov
push
add
cwtl
push
dec
xlat
bound
lcall
fnstcw
sbb
sub
subb
test
xor
jge
add
adc
int
lcall
clc
adcb
xchg
cmpsl
or
mov
jge
add
stos
jle
xor
pusha
add
ret
test
add
mov
test
jge
add
in
mov
jno
frstor
mov
add
dec
add
sub
scas
pop
sub
add
cmpsb
add
in
inc
scas
mov
add
int3
je
cmp
pop
push
add
jae
hlt
xor
push
sahf
and
mov
add
add
push
add
add
ja
ja
mov
add
add
add
add
add
and
mov
dec
xor
xor
xchg
stc
std
push
add
push
scas
adc
add
or
stc
sbb
add
decb
mov
rclb
loopne
xchg
sub
cmp
inc
in
mov
xlat
dec
add
add
mov
mov
pop
gs
test
add
add
cmp
add
pop
test
add
dec
dec
stc
cmp
imul
add
add
add
popl
outsb
add
add
out
mov
pop
add
add
aam
popa
inc
add
fstps
add
lret
stos
scas
arpl
lret
sub
mov
jns
add
test
or
sbb
ficompl
adc
inc
enter
mov
and
inc
stos
cmp
cmp
xchg
negl
sti
mov
sbb
lods
fisttpl
arpl
pop
add
imul
dec
lds
add
test
jns
in
cld
mov
push
add
jbe
fadds
and
filds
xor
add
add
adc
subb
hlt
cmpb
pop
or
pop
mov
sbb
pop
subb
cld
sbb
push
xchg
icebp
stos
idivl
add
popa
inc
add
or
xchg
dec
lret
jns
data16
inc
add
jp
jg
add
add
mov
stos
cwtl
dec
add
ret
adc
adc
sub
fwait
movsl
daa
lret
iret
mov
or
mov
jl
ret
gs
bound
and
inc
sbb
dec
add
sbb
cmp
add
xchg
in
xor
cwtl
pusha
add
into
rorb
fistpl
jecxz
add
cltd
add
aas
jnp
pop
add
or
mov
and
out
lock
add
add
sbb
xchg
aaa
in
cmp
add
xchg
pop
inc
add
cltd
push
xchg
sbb
mov
xor
add
sar
loop
test
cmpl
push
rorl
add
or
mov
and
mov
dec
add
add
pop
add
enter
inc
add
xchg
fdivs
stc
and
add
data16
sbb
dec
add
add
into
mov
add
shl
add
xor
adc
jmp
add
add
fwait
gs
das
loop
int3
test
xor
into
cmpsl
adc
test
add
fisubrl
and
mov
jge
pop
add
std
lods
pusha
add
xchg
sar
add
add
pop
lret
pop
and
lcall
add
outsl
gs
add
repnz
dec
add
cmp
jecxz
add
add
add
push
pop
xchg
jg
pop
test
mov
outsb
add
jmp
daa
cmp
aad
jmp
iret
sbb
rorb
mov
bound
rol
jge
fs
push
add
add
pop
cmpsl
bndstx
shll
add
and
add
xor
pushf
mov
add
shlb
push
add
cmp
adc
adc
jge
add
ret
jecxz
and
cmpsb
sbb
in
add
ljmp
add
lock
add
mov
call
pushf
push
push
sarb
pop
mov
ret
pop
push
add
cmc
lock
hlt
push
pop
or
nop
mov
xor
jae
add
add
int3
push
fwait
jb
jno
push
add
add
add
adc
mov
loop
add
mov
add
test
aad
add
mov
add
adc
add
pop
mov
add
add
cmpsb
sub
cmpsl
inc
add
je
fmulp
out
jnp
xor
inc
cli
in
add
add
push
add
push
add
rolb
jg
lret
xchg
add
loopne
cmp
mov
xchg
js
cmpsb
mov
out
out
mov
scas
out
adc
push
add
addr16
sbb
fists
in
dec
jmp
fnstenv
push
add
out
aam
push
add
inc
add
xor
add
add
add
add
add
add
xchg
push
icebp
xchg
cltd
loop
shl
add
ds
mov
jne
add
lods
outsb
add
jb
pop
add
add
inc
cmc
jnp
add
movsl
inc
mov
add
push
add
push
fwait
push
imul
mov
jmp
add
loop
mov
add
push
add
sbb
push
lret
lahf
idiv
shr
hlt
out
pop
dec
and
jecxz
add
lcall
mov
ret
push
jns
gs
enter
add
shlb
fwait
movsl
mov
add
negl
mov
cmc
or
cmp
imul
pop
add
xchg
inc
add
jb
je
ficoml
and
add
add
jae
dec
add
dec
or
out
add
mov
xlat
sbb
or
aaa
faddl
add
mov
add
jne
add
sti
roll
jo
mov
sti
loope
add
push
add
add
xchg
mov
add
outsb
add
stc
movb
mov
loope
cmp
xlat
sub
rorl
mov
gs
arpl
pop
add
or
sub
shll
pop
mov
insl
stos
jbe
mov
add
add
sub
fnstsw
bound
or
sub
sub
push
add
mov
cwtl
pop
test
add
lahf
shlb
xchg
cld
std
in
dec
add
sbb
int
add
add
clc
push
jl
xchg
rcrb
add
add
add
add
daa
jb
or
roll
push
add
in
pop
push
add
shll
in
add
dec
add
add
jmp
add
fcmovb
push
add
data16
mov
add
add
add
sbb
scas
ja
adc
call
shr
lahf
or
inc
add
sarl
repz
mov
mov
add
adc
pusha
add
add
fidivl
add
test
mov
loopne
or
add
and
push
add
or
xorb
jmp
inc
add
nop
or
add
xchg
leave
xlat
insb
add
pop
add
cmc
or
fcoml
add
fistl
add
aam
dec
lock
xchg
test
pop
add
add
ss
ficompl
add
and
icebp
test
sub
mov
add
cmp
push
push
add
leave
inc
sub
dec
movsl
sbb
pusha
add
cmc
fildl
push
bound
addr16
push
add
jle
push
add
inc
add
testl
add
add
jecxz
add
das
int
add
filds
cmp
and
xchg
mov
xchg
mov
ljmp
pop
xlat
and
add
push
outsl
jmp
cld
ret
test
jg
in
lahf
les
xor
add
mov
push
add
inc
mov
cmp
or
mov
mov
add
stos
outsb
add
pop
add
lock
add
mov
add
add
add
mov
hlt
stos
test
jne
stc
mov
jns
aam
add
add
mov
jae
addr16
movsb
cltd
je
add
test
cmpb
jns
add
cmp
popa
inc
add
or
iret
lret
add
push
add
enter
add
add
cmpsb
dec
add
mov
dec
add
in
iret
shlb
in
insb
add
cmp
sub
aad
add
clc
data16
and
lahf
je
or
lds
add
add
fbld
add
add
and
das
js
mov
mov
add
jmp
push
add
jp
add
out
ret
lcall
jmp
sub
sub
pop
leave
add
mov
add
sbb
cltd
insl
and
sahf
bound
xchg
cli
add
cmp
mov
pop
add
sbb
add
adc
cmp
xor
mov
xor
cli
adc
je
xchg
lock
fnstcw
lods
imul
add
data16
mov
mov
addr16
lret
add
in
add
dec
add
add
dec
cmp
subl
loope
inc
rsm
dec
outsb
add
fisttpl
add
testl
cmp
adc
cmpsl
lcall
add
add
test
repnz
in
hlt
cmp
ucomiss
adc
ret
add
cmp
sti
lcall
jb
xchg
jo
je
dec
add
add
jns
clc
ret
daa
jne
div
or
lea
xlat
loop
hlt
aad
add
fwait
push
add
add
cmpsb
push
add
sbb
inc
add
in
add
add
and
mov
loop
mov
and
cld
jmp
add
pop
push
add
je
pop
push
fcoml
add
mov
sbb
add
xchg
mov
lods
push
add
add
test
add
decl
add
iret
dec
push
add
dec
add
push
add
and
in
insb
add
add
add
inc
add
xchg
xor
push
add
mov
add
xor
pop
mov
mov
push
sub
add
nop
loopne
xor
xlat
or
add
test
iret
lahf
jns
mov
mov
dec
mov
mov
cld
mov
mov
add
shlb
imull
mov
mov
clc
in
xor
add
das
jle
imulb
add
push
add
adc
and
add
aas
les
jno
nop
mov
add
sahf
pop
out
add
dec
into
fisubrs
xchg
cltd
mov
test
stos
sbb
cli
sub
mov
push
add
add
data16
mov
cld
call
inc
add
add
add
jge
add
dec
add
fadd
mov
out
xor
xchg
cwtl
xor
sub
test
xchg
xchg
mov
add
dec
mov
add
jne
cmp
push
add
add
add
and
lds
std
jb
rclb
cltd
stos
mov
adc
sub
sbb
dec
add
jnp
imul
cwtl
jnp
or
mov
inc
cmp
pushf
mov
add
push
pushf
fs
sbb
add
add
jp
add
add
xor
mov
outsl
das
clc
adc
movsl
ljmp
out
xor
ja
push
jae
test
es
into
mov
popa
out
inc
fadds
mov
loope
push
xchg
sbb
lods
jo
inc
movsb
mov
mov
dec
mov
add
cmpsl
js
adc
cmp
jmp
rcll
add
mov
dec
inc
add
adc
add
loop
cmp
mov
lahf
in
icebp
bound
mov
mov
cmp
fwait
cmp
xchg
bound
mov
sub
mov
sub
mov
pop
ja
loop
stos
shl
add
test
add
jecxz
and
gs
add
and
push
ljmp
mov
pop
shlb
add
xor
cmp
mov
mov
or
lods
mov
aaa
sbb
push
add
add
lret
jle
and
or
push
add
pop
add
push
out
pop
add
ret
adc
adc
add
add
add
push
mov
jo
xchg
insl
nop
mov
punpcklwd
cmp
cmp
sbbl
dec
add
aas
mov
add
sub
jl
aad
inc
or
dec
add
add
dec
and
outsb
add
lds
push
add
insb
add
fstl
add
mov
push
add
dec
pusha
add
ljmp
stos
rol
dec
add
add
mov
mov
aas
xchg
push
lock
fldl
jg
add
and
out
test
adc
or
test
imul
test
add
lds
inc
add
out
add
mov
xor
rcll
fwait
mov
cltd
popf
xchg
or
cwtl
push
mov
cli
int3
jle
test
fsubp
cmp
negb
dec
sbb
push
pop
add
or
mov
stos
data16
xor
out
aam
mov
add
negl
hlt
in
xchg
mov
lcall
add
jmp
out
lcall
scas
lahf
sti
mov
xchg
push
or
subb
mov
clc
mov
add
add
add
add
pop
add
std
sbb
mov
mov
sbb
add
xor
add
clc
add
add
push
add
add
mov
add
push
mov
enter
movsb
rcrb
push
add
and
lret
stos
sub
sub
adc
inc
scas
imul
fstl
lcall
leave
or
testl
add
pop
push
cmp
add
add
mov
movsb
fwait
cld
les
add
add
add
mov
inc
shll
jg
shrb
xchg
cli
adc
add
and
pop
cld
and
adc
nop
add
movb
les
add
jae
decb
xlat
or
notb
mov
add
mov
xor
and
bound
or
inc
add
pop
lds
dec
in
sbb
and
les
add
lock
out
pop
jnp
add
loopne
sbb
gs
ret
add
loop
pop
add
pop
mov
add
xchg
add
add
add
test
out
mov
mov
or
fstl
out
xor
adc
dec
mov
or
int3
and
mov
inc
and
inc
xchg
sub
jecxz
add
xorb
adc
std
or
mov
dec
adc
dec
mov
subl
daa
push
stos
decl
mov
cmp
fldl
add
mov
add
arpl
movsl
mov
jbe
sub
movsb
mov
add
sbb
xchg
movsl
add
stos
add
jae
out
add
add
and
jo
xor
sub
orl
add
inc
add
add
add
pushf
jecxz
add
in
aad
add
or
popf
mov
pop
add
mov
cmp
mov
add
imul
mov
or
and
shll
inc
arpl
out
inc
dec
add
jmp
add
insl
shll
out
popa
dec
mov
add
test
add
add
add
testb
mov
fstpt
cmp
fsub
fidivrl
test
dec
add
push
jg
aas
imull
add
or
das
clc
push
add
mov
adc
dec
cs
push
imul
mov
pusha
add
iret
popf
adc
add
cmpsl
push
or
scas
das
push
add
lcall
jp
or
shll
add
xor
add
insb
add
inc
add
add
add
aas
push
add
push
add
mov
mov
stos
sub
and
inc
in
fisttpll
nop
scas
and
cmpb
add
push
add
mov
and
add
icebp
cmovle
pop
movsl
sahf
jmp
pop
add
adc
in
int3
pop
inc
jg
xchg
add
add
into
sarb
add
add
lods
jno
add
jae
lahf
insl
or
mov
sbb
pushf
push
pop
dec
add
push
add
mov
add
add
dec
add
pop
add
repnz
fbstp
mov
add
add
and
rolb
add
dec
add
cld
out
pop
fwait
nop
addb
add
cmp
mov
fwait
jge
mov
repnz
jecxz
xor
lahf
xchg
test
pop
add
xchg
push
add
dec
add
add
sub
add
lods
cmc
push
add
add
add
dec
add
lods
bound
adc
rcrb
adc
xchg
mov
add
add
add
xchg
sarb
lret
cli
cli
add
jb
sub
and
dec
add
add
xchg
push
in
lds
xchg
add
and
push
dec
lock
pop
test
add
add
shr
push
add
orl
inc
add
inc
add
add
dec
add
or
inc
push
add
add
add
inc
add
inc
sub
leave
bswap
aam
or
mov
icebp
jle
adcb
add
dec
adc
mov
sub
mov
add
add
add
add
inc
add
dec
adc
cmpsb
pop
jmp
add
fucomi
mov
out
push
inc
add
or
cmp
mov
loope
add
and
inc
arpl
add
add
xor
mov
push
add
mov
add
xor
data16
push
add
jne
add
dec
push
add
add
add
sub
shll
sub
outsl
lret
mov
ljmp
add
jno
add
xchg
hlt
mov
nop
push
add
inc
inc
mov
loopne
inc
cmpsl
fiadds
add
into
les
aaa
mov
sub
add
mov
push
add
add
dec
add
ljmp
add
mov
movsl
dec
add
xor
pop
scas
add
add
adc
add
loope
and
sub
pop
dec
add
jle
xchg
xchg
mov
mov
aaa
scas
or
mov
dec
add
js
ret
jg
add
push
add
outsl
mov
imul
add
xor
xor
push
inc
aas
adc
jnp
test
push
add
jae
add
repnz
scas
mov
mov
xchg
inc
pop
and
add
insb
add
pop
jmp
fs
fldcw
add
and
xor
mov
sub
inc
dec
and
add
inc
add
push
add
sub
jmp
add
stc
in
in
mov
push
ret
xchg
clc
xchg
xor
mov
add
add
add
add
movsbl
rcll
pop
pop
fldcw
xchg
cmp
cli
fisubrl
add
in
mov
push
add
stc
popf
scas
push
add
jecxz
sub
inc
add
movsb
aaa
test
add
adc
leave
inc
add
push
add
cmp
movsl
mov
cltd
add
cmp
inc
pop
push
sti
dec
stos
stos
dec
pusha
add
adc
push
add
lods
pop
add
add
push
cli
cli
mov
jne
push
push
fiadds
inc
add
cwtl
mov
mov
xor
add
inc
outsb
add
fs
dec
add
lds
flds
aad
push
add
lcall
je
test
clc
andl
ret
pop
xchg
aaa
insl
call
add
add
imull
inc
add
sahf
std
cmc
cmp
mov
pop
cwtl
loopne
test
add
sbb
sar
add
aaa
insl
leave
adc
repnz
hlt
xor
ja
xor
out
mov
in
enter
add
add
add
fildl
out
bound
iret
mov
add
or
inc
add
rolb
add
add
scas
imulb
add
xor
push
add
and
push
add
add
add
xchg
or
add
nop
loop
add
mov
movsb
fbstp
sbb
sti
in
cli
cmp
lret
pop
add
add
add
mov
into
popf
loopne
addr16
std
cwtl
pop
add
jo
mov
jg
add
push
add
jb
inc
inc
lret
loop
sar
push
add
add
or
les
push
add
mov
push
add
xchg
jae
js
jmp
imul
jno
fstps
add
add
aaa
sbb
rcrb
xor
cmp
add
shll
imul
mov
add
push
add
xchg
dec
add
mov
xor
add
pop
cli
jns
fsts
add
mov
daa
enter
adc
arpl
fwait
xchg
inc
add
add
shll
adc
push
add
andb
into
sti
and
pop
add
add
mov
ret
mov
add
mov
aad
nop
lds
pop
xchg
mov
add
repnz
sbb
add
int3
pop
add
cmp
and
mov
add
inc
arpl
jne
xchg
xchg
push
add
cmpb
jo
and
adc
xor
add
sbb
pop
mov
dec
add
add
mov
add
add
add
mov
pop
lcall
stc
sub
sub
movsb
pop
add
sbb
dec
stos
andb
dec
add
add
mov
mov
sub
add
cmpsl
test
js
xchg
sahf
aaa
stc
xchg
jp
shlb
sbb
push
add
sub
lret
lds
add
cmove
mov
call
add
xor
shl
int3
mov
add
decl
ja
add
fst
add
jl
lret
in
cmp
mov
add
and
insl
mov
rcll
mov
je
cmp
je
mov
add
pop
mov
outsb
add
add
rcll
in
dec
add
add
xchg
arpl
add
mov
movsb
loopne
jge
mov
aam
jbe
pop
daa
sti
mov
add
imul
arpl
lret
int3
ret
shlb
add
insb
add
aam
dec
mov
add
ss
mov
dec
add
add
add
adc
mov
pop
add
jbe
pop
add
orl
fsubrs
aas
aad
daa
xor
in
leave
or
cltd
out
das
cmc
or
inc
add
into
scas
add
pop
sub
mov
add
add
inc
add
mov
fucom
sbb
in
mov
orb
add
adc
mov
add
loopne
pop
add
ljmp
add
pop
add
insb
add
sub
pop
add
pop
jne
bound
shrb
add
add
les
add
movsl
hlt
pop
dec
add
hlt
std
fbstp
and
mov
add
or
std
lea
call
add
add
mov
ret
fmulp
or
sub
mov
xchg
and
pop
cmp
pop
les
jg
add
xor
hlt
jnp
les
sbb
push
and
inc
add
add
fstl
add
sub
xor
push
add
mov
push
add
pop
add
and
out
add
add
daa
cld
add
add
test
adc
add
shll
dec
insl
or
xchg
mov
es
movsb
lds
add
add
leave
mov
call
popa
or
mov
inc
add
ficomps
iret
xor
cmp
rcrb
pop
add
loope
mov
clc
rorb
add
mov
out
add
xchg
xor
sub
adc
jmp
popf
or
out
inc
add
fidivrs
stos
imul
in
xchg
add
insl
jl
mov
mov
out
rcl
mov
add
add
addb
mov
inc
mov
jno
nop
pop
add
mov
mov
add
add
push
add
jb
xchg
push
add
enter
add
in
call
inc
add
addr16
add
stc
add
jb
push
add
add
imul
add
add
jbe
imul
xchg
xchg
sbb
test
cmp
test
jno
mov
add
add
insb
add
movsl
std
pop
cmp
add
mov
add
sti
out
scas
add
mov
sub
sub
aam
mov
xchg
adc
cs
sub
int3
outsb
add
das
pop
cmp
lcall
add
add
jb
mov
into
popf
and
adc
in
push
rclb
and
jge
ljmp
cmc
loope
push
fs
dec
add
iret
shll
test
shrb
mov
add
push
cmc
je
cmpsb
test
cwtl
push
add
pop
and
xchg
lret
push
adc
add
push
add
jns
out
or
jge
daa
roll
jg
cli
sub
stos
jmp
and
pushf
cmp
mov
movsb
mov
add
add
adc
xor
mov
mov
jl
pop
add
jl
adc
repnz
add
add
gs
and
inc
add
add
xrelease
pop
add
push
add
cltd
ja
jmp
cs
call
cltd
inc
add
add
xlat
push
add
add
xchg
jns
add
stos
shrl
inc
add
cmp
je
faddl
add
inc
add
mov
push
add
dec
add
xchg
pop
xorb
push
add
push
add
scas
pop
add
adc
sbb
imul
push
jnp
add
add
add
pushf
loopne
mov
pushf
push
test
jno
js
std
pop
add
push
mov
add
arpl
push
add
lods
add
add
mov
xor
inc
add
add
cmp
sbb
pop
cmp
and
jmp
add
movsb
pop
add
xor
adcl
sbb
test
and
ret
cltd
cwtl
mov
fisttpll
add
xor
int
in
notb
pusha
add
xchg
add
mov
mov
pushf
fldl
popa
xlat
in
clc
mov
je
mov
stos
push
push
add
rcrl
add
add
mov
daa
icebp
data16
xchg
or
add
jb
inc
xchg
inc
push
add
roll
in
fcmovb
aam
or
xor
add
data16
xchg
sub
stos
ret
mov
jae
dec
add
test
cmp
mov
mov
cmp
inc
mov
fisttps
daa
js
xchg
and
mov
add
leave
mov
add
add
push
or
lock
add
adcl
fsts
add
push
add
sahf
jne
cld
cli
or
enter
sub
cmp
and
pop
lds
out
mulb
xor
sbbl
sbb
adc
arpl
pop
mov
add
mov
add
inc
add
ret
or
cmp
add
sbb
mov
add
add
add
dec
add
and
xor
mov
mov
and
fimull
sbb
les
sub
in
notb
stc
adc
xchg
outsl
xor
sub
add
xor
cmp
add
add
push
add
add
dec
cmp
add
xor
cld
cs
stos
xchg
cmp
cmpsb
mov
adc
sbb
and
cmp
dec
addr16
mov
into
mov
sbb
adc
add
icebp
imul
movb
insl
inc
add
fwait
test
sbb
out
into
push
add
ret
cmpsl
out
add
dec
pop
add
mov
in
in
xchg
int
jmp
or
inc
add
dec
add
outsl
mov
add
sbb
fimuls
sub
adc
add
into
stos
sbb
shlb
call
jge
add
jl
push
push
ja
fwait
or
mov
cmp
mov
push
add
add
add
js
pop
in
add
call
add
lcall
mov
inc
add
mov
inc
add
sbb
add
daa
imul
ror
js
mov
cmp
and
loop
or
notl
add
adc
dec
bound
cmp
into
mov
cmpsb
test
mov
add
mov
lret
xchg
xchg
xchg
fisubrs
imul
mov
add
add
add
add
rcll
fwait
xchg
add
sahf
daa
out
out
cmp
bound
pusha
add
pop
add
popa
adc
jge
sahf
push
add
scas
les
or
lret
sbb
inc
add
pop
add
xor
outsl
ficompl
outsb
add
pop
add
loop
dec
add
add
or
adc
add
lcall
ret
divb
stos
cli
aaa
pop
dec
pushf
clc
push
add
adc
cmp
inc
add
sbb
mov
add
push
add
and
pop
add
adc
ficomps
add
std
pop
add
insl
and
ret
addr16
sub
cli
add
mov
xor
ds
sti
ja
mov
jl
and
jmp
jns
out
adc
push
add
lea
add
push
add
inc
add
add
je
mov
xchg
mov
leave
ljmp
test
rcll
ret
adc
aas
push
add
cmc
mov
add
popa
lea
cmp
xchg
push
lcall
loopne
pushf
xchg
dec
add
mov
in
cld
mov
js
push
add
add
pop
mov
idivb
pusha
add
imulb
add
or
loopne
lcall
rcrb
add
push
or
insb
add
add
stos
data16
jecxz
repnz
add
add
add
inc
add
add
add
add
sahf
clc
ljmp
data16
sahf
movsb
mov
dec
add
push
icebp
aas
adc
add
adcl
outsl
fadds
pop
dec
add
ret
add
jbe
push
add
sbb
cmp
mov
add
lds
push
add
int
sbb
icebp
push
add
aaa
scas
add
sub
mov
loop
rcll
add
pop
aam
add
ret
sbb
add
add
outsl
cld
iret
dec
add
insl
cmpsl
mov
adc
sub
add
cmpsb
pop
sahf
xchg
mov
mov
inc
add
add
add
jmp
cmc
mov
mov
jp
outsb
add
cmpl
fcom
jp
cmc
stos
fbstp
mov
add
push
popf
aaa
push
add
hlt
xor
xor
jo
cmpsb
in
add
add
add
insl
int
add
mov
stc
int3
lods
push
add
loopne
add
mov
add
cwtl
mov
add
in
cmp
cmp
pop
xor
fstl
xchg
stc
roll
mov
in
dec
add
and
jl
lcall
out
stos
jae
sbb
adc
xor
add
mov
in
pop
add
inc
jo
adc
rcr
add
add
xchg
add
int3
adc
das
stos
push
add
add
je
jle
popf
mov
imul
mov
add
cmp
scas
call
add
scas
enter
lds
lcall
rcr
mov
daa
mov
shll
insl
mov
jb
cmp
and
andb
mov
inc
pop
add
sahf
icebp
cli
out
mov
pop
and
add
add
loop
push
inc
add
add
enter
xchg
xchg
pusha
add
add
cmp
out
mov
enter
pop
or
jle
mov
clc
or
adc
xchg
aam
add
rcl
cmp
data16
inc
add
add
jecxz
inc
add
sub
add
aad
add
mov
inc
add
add
push
pop
jne
ret
add
xlat
mov
fneni(8087
imul
xchg
scas
or
add
lcall
mov
sub
mov
arpl
add
icebp
jne
jle
lock
subb
aad
movsl
xorl
inc
sub
sahf
or
hlt
mov
cmp
or
das
incl
sbb
out
lods
mov
add
outsl
push
add
add
and
pusha
add
or
cmp
inc
rcrb
inc
add
fisubl
orl
add
dec
mov
xor
dec
add
push
pusha
add
fsubrs
pop
add
cmp
add
mov
dec
push
lods
cmp
stc
ret
enter
add
ja
mov
pop
lahf
js
push
movsl
insb
add
and
lods
or
mov
cmp
add
mov
add
xchg
dec
add
addr16
cmpsl
cmc
repz
sub
lret
aaa
ficoms
add
jne
add
and
mov
cld
mov
add
enter
mov
fdiv
sbbb
and
repz
cs
test
js
arpl
mov
sub
sbb
xchg
popf
pop
add
in
mov
jo
jbe
push
add
add
jns
add
adc
push
push
fcmovu
push
faddl
add
inc
sarb
add
or
adcb
test
pop
mov
add
cli
jns
std
dec
sub
sub
and
loope
sub
pop
add
ds
add
xor
jae
aaa
or
add
mov
andb
cmp
cmpsb
add
lds
dec
sbb
cmp
movsl
jbe
lret
jb
mov
fistpl
cmp
dec
add
data16
call
rcll
in
xor
add
aas
fmuls
loop
scas
add
and
cltd
sbb
xor
mov
jbe
int
mov
sbb
add
scas
fwait
sub
jnp
inc
add
ja
add
in
mov
add
or
popf
push
aam
jne
push
add
and
add
xor
test
pushf
into
add
inc
add
enter
fdivs
insl
push
or
add
inc
jp
push
mov
mov
cmp
add
push
add
or
jne
and
popl
shll
adcb
cld
pop
dec
add
mov
jo
dec
rcrl
movsl
and
add
add
add
call
mov
into
insl
xlat
inc
mov
stos
leave
cmp
leave
shl
sbb
add
call
xchg
mov
inc
jp
cmpsl
push
enter
test
inc
add
jmp
data16
fcoms
xchg
or
andl
add
mov
or
mov
lret
in
loope
xor
mov
into
clc
test
jno
icebp
dec
add
jo
aam
push
add
fwait
adc
pop
add
dec
stos
push
add
push
add
add
add
add
in
stos
iret
into
sub
scas
shrl
jge
jns
xorb
repnz
add
cli
xchg
daa
cs
test
add
addr16
out
ror
adc
mov
mov
sub
rclb
in
push
add
sbb
add
xchg
xchg
xlat
fmulp
loop
or
jo
xor
push
xchg
sub
dec
or
ficompl
sbb
fadds
jge
lcall
loope
stc
dec
inc
add
add
fisttpll
add
push
scas
ds
repnz
add
xchg
inc
add
jp
xchg
inc
add
pop
add
insb
add
sbbl
add
push
icebp
cmp
outsb
add
add
pop
mov
add
dec
add
sub
sahf
nop
inc
mov
add
mov
cmp
mov
dec
add
push
add
lock
sub
cld
adc
and
adc
add
aad
cmp
pop
add
sbb
add
bound
adc
mov
loopne
pop
add
and
mov
mov
test
jbe
sub
sub
std
js
popf
les
test
add
add
push
add
pop
add
subb
or
add
negb
and
mov
push
add
push
add
out
jle
mov
add
mov
aas
scas
sahf
nop
dec
add
add
add
or
lret
ja
cmpl
add
jmp
add
and
jmp
add
sahf
sub
cli
jp
cld
push
dec
add
mov
add
add
sahf
pop
jb
add
pop
add
add
dec
cmp
mov
roll
add
add
addr16
add
sbb
push
add
repnz
int
add
add
inc
stos
jmp
add
jne
or
insl
gs
shll
inc
add
jp
lods
add
cmpsl
inc
add
add
movsb
jg
xchg
add
pop
out
mov
jge
jle
mov
add
add
sti
jae
add
call
add
popa
int
test
mov
lea
inc
add
lods
jmp
add
ljmp
sbb
lahf
andl
add
pop
add
xchg
adc
clc
popf
or
fwait
inc
add
repz
je
cs
jp
jnp
popa
dec
add
jmp
xchg
push
add
cwtl
movsb
lar
in
add
add
add
sub
add
add
stos
int
add
add
nop
dec
cli
and
pop
add
jae
add
or
add
jp
jge
add
cwtl
add
add
movsb
cld
jge
sbb
mov
stc
pop
add
add
mov
jns
mov
cmp
pop
sbb
lret
lea
mov
sbbb
sbb
loope
add
flds
nop
xor
cmpsl
int3
pop
insl
into
mov
mov
push
add
and
xor
cmp
adc
xor
xchg
insb
add
push
add
cmpsl
mov
add
pop
add
sub
xchg
cmpsb
roll
mov
mov
add
fimuls
pop
add
dec
mov
mov
dec
add
jo
xor
and
dec
add
andb
aas
xchg
sub
movsb
push
add
insl
mov
push
add
dec
inc
fmull
ljmp
js
mov
das
jno
icebp
xor
lods
add
sub
adc
add
mov
push
test
incb
jbe
mov
add
mov
stos
scas
out
dec
daa
out
shll
pop
xlat
xor
xchg
xchg
add
and
and
js
and
lret
adc
push
add
mov
into
cmp
inc
mov
pop
jne
add
lret
mov
cmc
mov
fnstsw
and
push
add
inc
mov
scas
and
lret
rcll
add
out
add
cmp
add
adc
and
shll
clc
aas
leave
lcall
loope
pop
btr
cltd
mov
add
add
js
loop
sahf
xchg
mov
add
mov
add
dec
mov
add
add
add
loopne
add
insl
xor
leave
addr16
pop
addb
add
sbb
inc
int
dec
or
stos
mov
adc
dec
add
dec
pop
add
mov
lcall
pushf
sub
add
inc
add
sbb
add
sbb
aad
sbb
add
add
adc
arpl
add
popa
mov
lds
pop
add
aam
dec
pop
xchg
lods
push
add
add
clc
les
push
add
add
repnz
mov
scas
pop
add
jb
jg
add
jnp
add
add
movsl
push
add
add
xor
pop
add
shlb
mov
add
pusha
add
lods
pop
fsub
xor
xchg
cmp
cwtl
mov
mov
cmp
add
add
out
shrb
mov
add
jge
push
add
mov
pop
hlt
adc
dec
add
dec
fcompl
mov
add
pusha
add
dec
add
cmpsl
loope
stos
cltd
xor
jo
push
mov
test
jae
insb
add
call
add
popf
fwait
jecxz
and
je
hlt
clc
mov
add
stos
jp
jmp
sbb
dec
jg
ljmp
sti
mov
popf
bound
in
cmp
sub
lds
mov
roll
push
jno
adc
sti
jge
add
scas
jle
push
add
das
mov
mov
add
aad
xor
in
int
add
add
jmp
mov
lahf
call
push
add
into
loop
mov
dec
add
test
and
xchg
xor
int
jl
mov
lea
add
nop
pop
add
sti
jle
mov
sub
aad
and
add
and
jnp
add
dec
andb
jb
stos
insl
adc
inc
cmp
stc
je
movsb
pop
enter
ret
in
add
data16
jecxz
fwait
stos
test
add
add
add
add
out
icebp
add
sub
popf
mov
outsb
add
dec
ficoml
add
add
jnp
mov
xlat
cmp
mov
jns
ljmp
shlb
sti
pop
add
shll
out
testl
and
mov
out
xchg
cld
je
data16
mov
fwait
in
jecxz
push
add
dec
add
add
add
add
scas
cmp
or
and
dec
imul
push
add
add
jg
lret
add
add
cmpsb
imul
ja
fisubs
sub
and
add
dec
sbb
mov
add
sub
dec
add
add
int
add
mov
leave
imul
mov
push
add
or
inc
call
add
sbb
or
inc
add
and
int3
or
add
data16
jb
cmp
fsubrl
sbb
mov
add
cltd
adc
add
add
insl
adc
add
xlat
add
push
add
add
or
xchg
lahf
adc
dec
adc
jmp
mov
aaa
jnp
xor
add
hlt
and
dec
add
outsl
mov
add
push
add
fwait
out
leave
add
nop
bound
movsl
dec
xchg
negb
add
add
jle
jo
cmp
add
add
sub
cwtl
jp
imul
mov
rcrb
clc
mov
in
outsb
add
add
lret
mov
add
ficomps
pop
les
add
incb
std
insb
add
cmc
test
add
ret
add
lods
jmp
mov
add
pop
cwtl
adc
sub
lret
scas
aas
ljmp
clc
pop
in
jnp
add
aaa
sub
sar
scas
xchg
insl
push
mov
adc
xchg
cmp
xchg
lret
inc
ja
xchg
fwait
pop
add
call
cmp
ljmp
aaa
add
shll
mov
hlt
cmp
std
add
pop
jnp
cld
add
cmpl
mov
add
inc
mov
dec
add
mov
js
les
sbb
xchg
xor
jmp
jg
add
andb
arpl
add
inc
dec
cmp
inc
add
add
add
and
dec
inc
add
insl
lret
adc
add
repz
add
add
push
add
adc
pop
add
dec
add
xchg
mov
xlat
in
fcmovb
lret
enter
add
outsb
add
orl
jbe
and
cmp
push
add
add
icebp
sbb
cltd
shll
add
icebp
mov
sti
dec
add
mov
xorl
cmpsb
xchg
jl
xor
add
sbb
push
add
adc
push
add
daa
pop
add
mov
pop
xchg
imul
push
or
jno
pmulhuw
fnstcw
mov
add
add
add
mov
add
add
add
add
stos
inc
sbb
cmp
and
cld
gs
adc
cmp
mov
and
pop
aam
imul
popa
jle
out
cld
inc
add
lods
movsl
mov
add
outsl
adc
xchg
pop
pushf
or
inc
add
add
add
dec
mov
xchg
testb
cwtl
push
add
push
add
pop
add
les
xor
rcrb
jbe
rcrl
lds
add
cli
lcall
xchg
inc
add
add
cwtl
ljmp
add
add
add
add
dec
pop
jnp
add
enter
add
fnclex
jmp
inc
jmp
pop
dec
add
add
pop
jo
mov
jbe
lock
pop
fwait
dec
cli
cmc
repz
mov
out
xor
jp
jmp
sbb
arpl
test
add
rcll
add
inc
popa
ljmp
mov
sub
dec
add
add
pop
call
inc
add
stc
rol
pop
add
mov
xor
in
adc
add
movsb
cmp
sahf
push
lock
test
push
hlt
lahf
lds
push
add
jmp
scas
std
inc
fildll
add
mov
mov
mov
adc
mov
add
add
xchg
adc
pushl
add
mov
or
adc
push
add
inc
add
push
add
add
out
add
dec
or
jae
lahf
ljmp
cmp
and
adc
add
fadd
jmp
adc
stos
outsl
ret
imul
mov
mov
popa
mov
sub
out
sub
ret
inc
add
les
sbb
int
inc
add
rclb
dec
lret
and
movsl
sbb
inc
icebp
addr16
add
call
add
jb
shr
in
add
adc
adc
bound
sbb
adc
testl
ss
repnz
add
add
test
add
or
mov
stos
repz
add
jp
stos
and
dec
add
mov
add
and
jns
add
insl
or
outsb
add
jge
add
add
repnz
pop
roll
nop
jbe
add
data16
add
clc
jp
sbb
sbb
xor
fdiv
adc
mov
out
subl
mov
or
dec
sbb
in
jl
aas
inc
add
add
test
add
jbe
jecxz
lock
es
std
fiadds
add
gs
add
inc
xchg
xchg
pusha
add
in
adc
sbb
gs
out
in
add
js
pop
add
mov
cmp
cmp
loope
add
jo
test
adc
push
sub
lret
adc
enter
jge
popl
out
loopne
add
adc
cmpsb
loope
fisttpll
adc
adc
jmp
add
add
mov
sbb
dec
add
mov
fwait
mov
ja
pop
add
add
add
cli
sub
xchg
mov
ror
adc
cwtl
xchg
stc
popl
xchg
add
ret
cmp
xor
nop
push
cmp
or
add
lods
clc
adc
lret
fdivrs
inc
add
push
imul
xor
or
jge
and
xchg
mov
inc
sub
call
add
xlat
rcll
push
add
add
imul
rcrl
add
imul
into
lods
loopne
add
add
add
das
loopne
pop
add
xor
add
test
sub
add
sub
push
jmp
add
push
add
dec
add
jno
add
cwtl
pop
push
add
cltd
xlat
cli
sbb
add
add
ficompl
add
add
roll
or
add
mov
pop
xor
int3
jns
mov
or
add
sysexit
ds
inc
pop
add
add
push
add
adc
ja
push
mov
add
inc
imul
add
hlt
fcmovne
loope
pop
add
sti
dec
add
cmpsb
or
je
and
and
dec
cmp
mov
iret
lcall
jb
jae
and
add
int
add
movsl
pop
dec
add
add
sbb
mov
pop
add
add
addb
das
jp
insb
add
mov
add
neg
pushf
jmp
pop
arpl
scas
call
inc
add
cmpsb
icebp
sahf
movsl
pop
add
cmp
xchg
push
cwtl
gs
add
add
andl
dec
add
mov
add
call
add
sbb
xchg
mov
dec
add
add
lods
test
pop
push
add
in
or
add
sub
xor
or
add
add
sbb
test
icebp
sub
add
testb
outsl
imul
add
ljmp
je
dec
dec
enter
out
add
dec
mov
add
out
jns
add
mov
mov
iret
sbb
das
push
pop
add
mov
arpl
add
rcll
inc
add
push
add
mov
sub
push
add
push
add
pushf
inc
add
xchg
dec
jle
icebp
add
xor
and
and
xchg
lret
shll
add
addl
outsl
xchg
enter
mov
add
dec
ss
fwait
test
pop
and
outsb
add
add
fdivl
add
mov
add
fwait
fs
pop
add
dec
add
adc
mov
add
xchg
mov
add
pop
inc
add
or
in
jbe
mov
sbb
mov
mov
cmp
sub
add
add
das
mov
cmp
sbb
jae
xor
push
add
gs
iret
test
add
adc
out
add
and
icebp
cmc
push
add
add
xchg
orb
adc
jecxz
or
add
sbbl
push
xchg
clc
mov
loope
mov
out
add
sbbb
out
add
lds
add
push
adc
lahf
sub
adcb
jne
jp
dec
push
add
lods
sti
mov
xor
sub
fdivrl
mov
push
add
pop
jmp
cmc
ljmp
mov
cmpsl
mov
mov
cltd
jbe
dec
inc
add
mov
lock
add
test
lods
push
add
dec
add
and
mov
ret
dec
add
xor
mov
xchg
jle
mov
add
rolb
add
adc
add
enter
out
rclb
bound
mov
inc
add
or
cli
mov
mov
and
xchg
add
imul
lods
rolb
sahf
fistl
mov
add
add
add
add
jo
bnd
mov
jb
scas
sbb
hlt
mov
test
or
sbb
add
add
sub
fldcw
sbb
inc
add
add
dec
add
cmp
jge
add
ret
xchg
cld
cs
cmp
call
add
ljmp
subb
daa
cli
cli
lds
add
sub
lods
movsb
and
mov
divl
pop
jl
add
fldenv
sbb
adcl
lea
add
adc
std
jecxz
enter
int
or
jo
push
add
cmpsl
jo
mov
add
jns
fcompl
xor
jecxz
add
sbb
pop
jnp
mov
pop
add
add
push
add
add
mov
clc
adcl
jno
scas
pop
add
add
xor
add
fistpll
add
insb
add
sbbb
ljmp
jmp
xor
popf
mov
ss
mov
add
imul
ss
das
imul
add
je
adc
jg
xchg
call
lahf
mov
add
add
adc
aas
sub
mov
mov
adc
cmpl
add
ret
sbbb
add
cli
daa
mov
add
outsl
xlat
lods
lods
xlat
xchg
fcmove
xor
push
add
pushf
add
add
cmp
loopne
add
out
sbb
aas
add
jns
cltd
sub
add
cmp
pop
pop
add
pushf
lds
jbe
sbb
push
add
shrb
add
test
into
dec
idivb
add
or
push
add
mov
pop
add
scas
jae
add
add
add
or
add
repnz
jns
mov
xchg
push
add
add
int3
jg
jno
jmp
xor
aaa
mov
add
aas
and
cmpsl
movsl
jbe
push
mov
add
pushf
sbb
xchg
pusha
add
and
mov
insb
add
xchg
test
push
add
jle
rcr
inc
add
mov
arpl
add
outsl
sub
mov
popa
mov
aas
incl
cmpl
add
add
in
test
mov
dec
lods
outsb
add
sbbl
jp
testb
scas
add
pop
out
sbb
add
pop
add
fcmove
stos
add
xchg
idivb
cmp
or
ja
adc
inc
add
mov
add
add
xchg
mov
or
mov
add
int
add
mov
cmp
fdivrl
sbb
xchg
dec
add
add
mov
add
add
scas
xor
loopne
test
cltd
jbe
insl
movsl
cmpsb
out
rclb
add
add
add
xchg
data16
add
jnp
mov
add
nop
icebp
roll
out
les
cmp
leave
mov
add
fcompl
mov
lcall
into
mov
stc
test
pop
push
add
jbe
jno
push
add
xor
jne
cmpsl
jo
push
add
subl
mov
mov
push
add
jge
nop
nop
add
dec
cmp
and
mov
adc
dec
add
sbb
adc
ret
iret
push
movsl
or
mov
mov
add
and
sbb
fbld
lock
pop
pop
add
jns
sti
mov
outsl
rorl
pop
xor
add
or
movsb
cld
iret
out
xchg
pop
add
data16
jnp
call
and
add
enter
in
xchg
hlt
jno
ljmp
imulb
push
mov
push
add
add
or
mov
push
in
push
add
inc
add
imul
cmp
cmp
sbb
mov
push
add
aaa
cltd
mov
add
lret
adc
mov
add
pushf
test
fisttps
mov
sub
dec
add
test
jg
add
rorl
fisttps
mov
call
add
rorb
add
insl
jmp
int3
cltd
mov
repnz
mov
iret
inc
decl
iret
sarb
mov
pop
or
mov
mov
add
add
add
xor
loop
lds
lods
nop
jmp
push
add
add
xchg
shll
push
xchg
into
xchg
mov
sbb
push
xlat
fmuls
or
icebp
add
xchg
enter
add
movl
add
je
mov
std
test
mov
jg
mov
into
test
cmp
repz
add
jmp
add
stos
and
dec
push
add
jo
push
add
bound
dec
add
mov
daa
data16
add
sarl
add
mov
add
cltd
pop
into
pop
add
jno
add
bound
push
push
add
movq
aam
bound
and
jb
push
test
add
mov
pop
add
mov
cmc
push
jns
icebp
loopne
popa
les
fstpl
add
fptan
popa
push
add
add
xorb
cmp
sub
or
add
rorl
in
cmpsl
mov
lret
int
cwtl
nop
add
pop
add
xchg
lcall
pop
add
xlat
push
xorl
jecxz
and
popa
mov
out
ud2
inc
add
add
mov
movsb
jno
arpl
sbb
mov
cmpsb
xor
xchg
or
and
fsts
or
clc
pop
mov
add
mov
lret
jno
add
test
mov
fcoml
iret
jne
sub
hlt
in
add
es
sahf
fs
jge
add
in
lock
add
mov
jnp
add
add
cld
xorl
fwait
dec
out
lods
push
add
pop
mov
fwait
mov
mov
lock
int3
add
add
pop
add
mov
in
and
add
mov
fbstp
add
gs
jnp
add
dec
add
repnz
stos
push
add
add
inc
add
add
lods
jmp
add
push
add
add
data16
xor
sub
lock
pop
sahf
xchg
sbb
jne
popa
jno
cmp
mov
sub
subl
fidivs
mov
add
add
iret
jb
xchg
enter
mov
add
adc
push
add
add
repnz
add
xchg
push
add
add
push
add
repz
xor
cld
and
xor
test
jecxz
std
insl
sahf
cmpsl
jle
sub
push
lcall
or
cmp
mov
aaa
dec
jmp
pop
jo
jno
fisubrs
add
sti
ret
add
mov
add
fldenv
mov
mov
add
inc
add
pop
shll
mov
rol
mov
pop
add
insl
mov
add
in
cmp
out
pop
imul
pop
add
cmp
add
mov
jecxz
pop
add
int3
imul
cmp
cmp
lahf
mov
dec
or
add
adc
repz
ja
lods
sub
jmp
add
add
cld
sub
and
push
add
movsl
rcrb
mov
into
cmp
jo
mov
add
sbb
aas
cmpsb
rorl
nop
inc
add
push
add
add
outsl
daa
out
sbb
pop
xchg
mov
push
add
fiaddl
fidivrs
loopne
cmp
pushf
in
and
add
rcrb
add
add
in
sub
in
stos
fsubr
scas
and
nop
lcall
push
mov
cld
xchg
out
xchg
arpl
add
xor
xor
jmp
addb
xlat
hlt
mov
aad
lock
add
add
lret
out
or
add
fdivrs
add
and
mov
shl
pop
add
xchg
xchg
xor
ds
push
add
data16
add
fwait
cmp
lahf
xchg
xchg
shrl
add
and
fsubrl
and
add
ds
ret
mov
add
xor
sub
jnp
add
push
add
push
add
mov
stos
mov
add
xor
xor
pop
cmpsl
loope
dec
dec
add
sub
pop
push
add
inc
fcmovu
loope
add
xchg
mov
inc
add
lods
push
jle
fsubrs
mov
add
jp
cmpsb
adc
xor
les
ljmp
inc
add
add
pop
push
push
add
xor
xchg
pop
das
fistps
add
pop
push
data16
fisubs
cld
mov
mov
sub
cmp
lods
jle
mov
push
jne
lods
hlt
mov
dec
add
into
rcll
ljmp
or
mov
test
fldcw
add
push
add
jmp
stc
call
lea
add
add
or
dec
sbb
fiaddl
add
mov
cmpsb
jns
adc
pop
xor
mov
adc
add
add
hlt
dec
add
lret
mov
add
dec
mov
mov
rcll
not
in
aas
in
loope
add
add
shl
or
test
test
add
ja
add
pop
add
add
inc
add
add
xor
popf
dec
sbb
mov
add
mov
add
add
cmp
lods
daa
and
mov
sbb
jb
stos
push
add
add
jg
add
pop
mov
in
add
rclb
shr
xchg
cmp
call
lea
add
jp
xor
loope
add
mov
stos
outsl
nop
mov
shll
push
sub
aam
mov
sti
test
add
and
jl
mov
add
push
add
cwtl
xchg
or
ret
cmp
add
arpl
push
push
add
add
lods
jne
stc
jle
mov
add
call
add
pop
add
ret
pop
popf
popa
xor
out
cmc
jg
lahf
mov
add
xor
stos
xlat
mov
cmp
icebp
fwait
rcll
cmp
inc
pop
fcmovnu
jnp
add
out
aas
mov
add
jmp
cs
mov
add
mov
outsl
sub
lahf
cmpb
fdivl
into
insb
add
inc
push
std
xlat
add
jl
inc
add
push
add
or
add
add
mov
gs
mov
sbbb
push
add
aam
cmpsb
mov
ljmp
mov
add
adc
daa
dec
movsb
pop
inc
add
pushf
shr
push
loope
mov
aaa
adc
leave
cld
dec
in
mov
add
add
loopne
mov
add
mov
add
mov
std
sbb
and
or
sbb
push
mov
add
add
cli
and
xor
cld
je
shll
clc
out
filds
jns
mov
push
add
out
add
or
cwtl
mov
add
add
lret
add
std
xchg
sbbl
push
add
std
xor
add
psubsb
add
cltd
movsb
push
add
sbb
int
add
fs
and
test
add
add
fwait
in
dec
add
xor
adc
repnz
jmp
adc
lret
mov
add
dec
lahf
jbe
aas
add
add
add
in
js
xor
fstpl
mov
xchg
movsl
cli
loopne
jecxz
sub
stos
in
jecxz
xchg
or
scas
lret
push
add
loopne
or
fucom
push
add
and
and
cwtl
xchg
add
pusha
add
xorl
add
add
bound
arpl
pop
add
lods
adc
addr16
or
cmpsb
repz
repnz
add
dec
inc
add
stc
into
shlb
and
add
cwtl
movsb
sbb
aas
loop
popf
pop
add
mov
pop
push
ljmp
sbb
add
outsb
add
push
pop
lahf
xchg
sub
add
push
add
adc
ret
cmp
add
xchg
lcall
jns
sbb
add
insb
add
in
add
add
and
push
jg
push
add
add
bound
mov
pusha
add
add
push
add
pusha
add
dec
add
add
add
jl
push
inc
jge
or
mov
cmc
adc
push
add
data16
add
and
fimuls
add
add
push
add
add
hlt
mov
sarl
add
cmc
mov
iret
movsl
dec
in
xor
ret
jnp
test
add
sbb
sbb
movsl
pop
xor
dec
add
xor
mov
sbb
jl
adc
add
add
mov
sub
mov
jle
js
insb
add
fdivs
xchg
pop
add
fwait
loop
fiadds
test
repnz
mov
mov
subl
nop
addb
in
dec
add
add
add
xor
add
out
cmp
sbb
adc
inc
ret
and
cwtl
sbb
push
add
mov
add
add
stos
loope
add
xorb
stos
pop
in
fwait
bnd
xlat
shl
mov
add
jnp
add
daa
stos
adc
mov
jno
pusha
add
add
push
or
mov
outsb
add
aaa
aam
dec
add
scas
andl
or
and
cmp
into
add
xor
inc
add
add
icebp
cmp
mov
push
add
arpl
add
push
add
jne
frstor
mov
dec
dec
xor
frstor
loope
jg
inc
mov
jge
add
xchg
out
adc
enter
add
add
adc
add
addr16
ret
mov
add
sbb
xchg
fdivr
mov
add
aam
add
add
shll
inc
add
rcrl
stos
adc
inc
add
mov
push
fisubrs
insb
add
mov
or
daa
jg
add
add
stc
jle
or
ljmp
add
sub
loopne
ret
push
add
add
pop
add
in
cmp
out
and
mov
add
jns
fs
pop
std
cmp
or
xlat
insb
add
or
add
xchg
call
inc
cmp
rolb
iret
fistps
xchg
loope
test
pop
add
imul
jl
mov
xor
add
pushf
fidivrs
push
add
testl
adc
sub
scas
mov
add
in
int3
js
or
sub
adc
cmp
add
dec
add
mov
add
inc
push
stc
shl
or
xchg
lds
add
add
add
xor
cmp
xchg
adc
shl
pop
add
mov
xor
add
lcall
add
xchg
popf
mov
add
adc
lock
test
mov
repz
nop
popf
lret
push
xchg
mov
lahf
iret
inc
rorb
xor
add
neg
insl
mov
push
add
add
clc
jl
mov
fwait
cmp
add
sub
sub
loopne
add
add
mov
fwait
or
add
fisttpl
imul
push
add
add
jge
pop
add
and
add
rol
add
je
fisubs
inc
mov
add
add
inc
mov
jecxz
stos
scas
push
add
mov
adc
and
adc
push
jbe
push
xchg
movsb
or
or
sahf
lret
add
in
out
xlat
in
ret
shll
add
into
rorl
add
add
out
push
add
popa
rcll
outsl
test
and
add
inc
call
rcrb
jle
das
in
add
nop
out
int3
jmp
push
add
add
mov
mov
mov
add
iret
insl
ja
out
cmpsl
daa
cmp
ss
cmpsb
sub
cmp
and
test
add
mov
mov
fcomps
add
add
jle
in
out
adc
sub
add
jne
xor
icebp
dec
scas
sbb
add
xchg
add
xchg
pushf
test
add
add
mov
outsl
xchg
mov
pop
xor
inc
add
jo
sub
dec
add
dec
and
aad
jp
xor
sub
test
data16
push
add
