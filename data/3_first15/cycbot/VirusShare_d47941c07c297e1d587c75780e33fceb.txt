lds
pop
bound
mov
les
aaa
mov
push
add
popa
cld
out
incl
add
mov
in
xor
inc
add
mov
data16
push
add
and
mov
add
mov
outsb
mov
divl
dec
cld
mov
mov
fwait
push
inc
add
add
pop
jl
incb
add
add
and
mov
add
ja
add
add
and
sbb
aam
mov
cmpsl
pop
fldz
cmpsl
outsb
hlt
add
add
add
daa
adc
add
add
and
pop
dec
dec
and
in
add
movsb
add
add
or
add
add
dec
rolb
sub
add
adc
popa
clc
stos
sbb
add
add
mov
xlat
std
sub
pop
mov
xchg
add
data16
out
ret
addr16
xor
lcall
add
add
fidivs
fisttps
aad
sub
and
mov
lcall
daa
sub
pop
icebp
xor
pop
cld
cmpl
imul
add
dec
or
add
add
subl
sbb
sub
add
add
inc
add
inc
add
push
xor
mov
mov
mov
jo
cmp
int
xor
nop
add
add
test
xchg
fdivr
jecxz
add
fsubrs
xchg
dec
shl
jnp
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
cmp
jns
push
pop
xchg
mov
mov
movb
add
cmp
add
cmpsb
add
add
insl
aam
inc
add
and
stc
sub
add
mov
mov
mov
inc
add
cmp
addb
or
add
mov
mov
add
addl
and
pop
xchg
cmc
cmp
cwtl
xor
pop
jle
add
mov
add
add
mov
push
idivl
inc
add
add
add
xlat
add
std
les
xor
or
movb
mov
aaa
mov
jg
add
add
add
jle
mov
data16
jg
adc
add
mov
jg
movzwl
js
add
aad
dec
jg
add
mov
sbb
popl
add
add
mov
jmp
add
add
mov
or
addl
aad
add
fmull
jecxz
pop
add
mov
sahf
outsl
bt
pop
add
addb
add
add
mov
aas
loopne
subl
add
add
sbb
scas
cmp
add
add
or
jp
or
jg
push
and
or
rolb
add
mov
add
mov
add
bswap
jg
add
add
mov
add
mov
dec
push
add
jnp
pop
sar
imul
jle
add
or
test
or
fmull
jl
or
jp
or
add
push
mov
mov
iret
xchg
or
push
add
jg
or
enter
aas
rcpps
ret
add
out
add
or
mov
push
add
jg
push
jl
packsswb
sub
add
add
mov
add
jle
or
or
add
mov
or
jmp
add
mov
inc
add
mov
or
test
adc
add
decb
add
idiv
mov
stc
lds
jg
cmc
push
and
push
add
addb
push
or
test
pop
je
push
add
mov
std
mov
rcpps
add
dec
stc
fimull
push
neg
packuswb
jecxz
addb
incl
decb
mov
fimull
jnp
add
or
add
xor
jle
add
add
xchg
lea
add
addb
dec
test
push
push
add
inc
add
push
add
aad
jg
cmp
add
std
xor
or
cld
jnp
jg
add
mov
aaa
addb
add
mov
incl
dec
decl
mov
std
cltd
or
std
inc
add
jle
push
dec
cmp
test
mov
movsb
add
jg
add
add
add
jle
mov
data16
jne
mov
and
add
adc
jae
add
insb
addb
add
add
push
sub
add
sbb
sbb
add
add
add
cmp
add
mov
push
add
mov
add
sbb
inc
lods
push
repz
push
lcall
mov
add
mov
cwtl
fsubs
inc
shll
add
inc
xchg
or
cmc
cmp
imul
push
inc
add
add
pop
repnz
bound
mov
cwtl
jl
call
std
and
add
mov
insb
mov
ret
cmpsb
add
xchg
mov
or
mov
add
or
scas
sahf
daa
xchg
add
insl
add
outsb
pop
add
mov
add
jl
adc
adc
or
xchg
packsswb
dec
mov
add
mov
adc
sub
daa
push
and
mov
push
mov
lret
repz
push
dec
shll
outsl
pop
das
stc
lods
je
fistpll
push
add
add
leave
lock
push
idiv
cmp
mov
add
inc
add
pop
cwtl
fisttpl
pop
loope
jg
pop
scas
push
mov
testb
add
mov
add
rolb
mov
mov
pop
push
add
add
mov
in
incl
incb
add
std
sbb
out
icebp
inc
add
add
pop
mov
sti
jl
pop
inc
pop
cmp
enter
inc
add
jmp
mov
adc
adcl
call
and
xor
outsl
mov
push
jo
add
test
push
add
add
xor
call
aad
jnp
pop
cs
sub
add
ret
mov
add
add
mov
add
and
mov
cwtl
pop
sti
xor
mov
fisttpll
inc
mov
add
stc
jmp
mov
outsl
xchg
jb
or
out
cwtl
movsb
add
outsl
cmc
push
clc
js
and
sbb
or
add
dec
adc
fcoms
scas
push
add
pop
mov
add
and
mov
xchg
pop
addb
aaa
outsl
inc
add
add
add
mov
mov
dec
jge
dec
add
ljmp
int3
std
rolb
xor
mov
add
dec
sbb
sub
add
push
fistl
mov
jecxz
dec
xor
or
push
add
into
fcoms
push
add
add
mov
adc
dec
xchg
add
mov
sarl
nop
add
adc
pusha
add
shll
push
pop
adc
push
push
add
mov
mov
pop
dec
leave
jg
or
daa
sbb
xlat
add
add
in
loope
add
adc
imul
or
push
add
js,pn
pop
add
add
out
call
data16
jle
add
addb
test
sub
add
lcall
push
rolb
cmpsl
daa
jbe
add
mov
imul
mov
icebp
addb
dec
sub
add
pop
lahf
in
sti
add
xchg
popf
pop
inc
add
pop
sub
jae
adc
mov
out
add
popa
xchg
movsb
add
pop
out
lea
into
stos
pop
add
pop
sbb
ja
mov
das
cmp
inc
add
pusha
add
jp
lods
sbb
inc
add
mov
mov
andl
add
add
ds
or
add
test
mov
cmc
mov
push
cmp
dec
imul
loope
testb
test
lock
lahf
jae
imul
inc
add
ret
insb
mov
jnp
add
inc
add
xorl
mov
nop
add
shll
sti
adc
rcrl
rolb
mov
cli
btr
sub
add
add
mov
cltd
dec
scas
data16
jg
add
outsb
imul
add
mov
dec
leave
icebp
push
push
add
xlat
sbb
or
aam
ret
ud1
add
inc
or
loop
les
lods
or
loopne
xchg
add
pop
sbb
inc
or
mov
add
push
call
dec
dec
xor
pop
pop
daa
outsl
sbb
outsb
pop
clc
or
adc
jecxz
mov
inc
and
mov
gs
lcall
jecxz
push
add
add
push
pop
jle
inc
cs
mov
xor
pop
cmpsl
xlat
out
and
mov
push
add
mov
pop
outsb
jns
add
sti
or
inc
add
add
add
addb
cmp
insl
xchg
pop
mov
fwait
add
icebp
or
pop
pop
adc
mov
sbb
aaa
mov
pop
aad
movb
add
add
and
mov
add
in
ja
adc
add
inc
loop
add
sahf
arpl
das
pop
mov
jo
xchg
pmaxsw
mov
sub
movb
lea
imul
out
fidivrl
and
popa
xor
jne
cld
adc
insb
dec
mov
cmp
sbb
out
in
stos
sub
imul
add
dec
das
jns
rolb
dec
fisttpl
pop
pop
aad
pop
arpl
and
lods
add
add
adc
std
xchg
add
dec
xchg
pop
testb
add
std
out
mov
rolb
sbb
pushf
add
sub
add
nop
add
push
add
sbb
add
add
sub
scas
addr16
and
addb
lret
daa
add
mov
add
sbb
add
pop
cmp
sbb
xchg
ret
enter
adc
bound
mov
add
jo
mov
jne
adc
mov
add
add
add
ret
pop
xor
inc
pop
fsubrl
add
pop
fbld
pop
inc
das
xchg
add
add
dec
xor
sbb
daa
sbb
add
inc
pop
fistl
add
push
add
cmp
popf
cmpsb
add
testb
add
mov
add
movsl
inc
jg
add
cwtl
out
dec
ljmp
out
pop
sub
dec
sub
mov
les
and
push
add
push
lods
add
fisubl
and
mov
xchg
add
add
xlat
cmovge
mov
call
push
add
int3
fxch
in
in
cmp
jle
dec
les
mov
add
mov
dec
out
mov
pop
sub
xchg
inc
add
mov
ret
addb
stos
inc
aad
movb
add
push
iret
das
scas
mov
adc
add
std
adc
pcmpgtw
or
lahf
sub
mov
add
movsb
add
jg
add
fisubl
addb
jae
test
xor
cwtl
mov
fldenv
add
add
mov
lahf
daa
movsl
inc
ret
daa
std
addb
roll
add
add
inc
cmp
mov
add
add
ljmp
add
test
hlt
add
fcmovu
mov
add
or
add
mov
dec
lea
add
inc
add
arpl
add
jl
add
add
movsl
cmp
xchg
dec
adc
cmp
cmc
cmpsl
addb
lock
inc
add
add
leave
jb
rolb
cmp
add
dec
movb
cmpsb
add
add
add
sbb
cmp
addb
add
push
pop
inc
dec
push
add
dec
xchg
add
bound
mov
sti
dec
jns
jnp
shll
mov
mov
iret
jae
xchg
popf
sbb
add
in
add
add
clc
jns
add
adc
add
pop
mov
add
mov
add
add
das
sets
in
fnstcw
push
in
packsswb
mov
js
fstl
sub
pop
add
pop
imul
orl
popl
xor
add
add
add
cmp
lret
mov
add
lahf
adcl
xlat
faddl
add
stos
ljmp
add
in
out
or
and
xchg
lea
inc
add
lods
add
mov
movl
fistps
dec
sbb
add
cmp
cli
lock
add
add
mov
add
add
sbb
lods
push
add
bound
mov
in
add
add
adc
shll
vorpd
fisubrl
hlt
add
mov
add
add
test
add
add
mov
leave
in
aas
xlat
pushf
push
sbb
jp
add
orl
dec
cwtl
shrl
loope
push
cmp
mov
add
mov
aad
add
mov
outsb
mov
adc
mov
xchg
xor
push
add
inc
add
inc
add
dec
out
cmp
testb
add
gs
add
and
mov
add
xchg
add
add
lahf
jmp
or
cltd
stos
xlat
push
adc
and
orl
arpl
movb
push
add
jmp
addb
jge
lret
pushf
ljmp
add
xor
add
fwait
dec
lret
add
mov
mov
cmp
inc
hlt
add
test
test
and
mov
mov
enter
mov
add
ja
and
xlat
je
mov
lods
icebp
pusha
add
adc
rolb
add
add
add
add
test
jo
mov
add
int
sti
ret
mov
pop
push
add
add
pop
imul
add
mov
cli
cmp
xchg
out
rolb
and
mov
add
mov
sbb
and
fisttps
dec
insl
lock
mov
add
cmp
cmp
add
or
mov
pop
cmc
inc
outsl
pop
sub
aad
sub
add
or
or
ret
add
insl
xor
add
scas
dec
inc
add
insb
xorl
add
add
add
add
add
cmp
leave
add
in
mov
test
adc
xchg
inc
adc
and
and
add
dec
js
nop
add
add
pop
stc
aad
add
std
push
mov
cmp
lods
xor
mov
add
xor
mov
dec
mov
mov
repnz
nop
add
add
fdivr
and
mov
add
add
add
movb
cmp
dec
and
mov
xchg
or
addl
lods
mov
mov
mov
push
sbb
and
rolb
mov
add
xchg
add
mov
add
mov
popf
clc
add
mov
add
add
in
sub
xor
sbb
add
adc
mov
lret
aas
add
mov
inc
add
add
add
data16
dec
adc
rolb
jnp
add
mov
add
insb
call
fnstsw
cs
jge
sub
dec
push
lret
dec
inc
add
adc
fidivl
xor
pushf
xchg
icebp
fistps
add
and
mov
jo
mov
movups
inc
pop
xchg
add
xchg
xchg
sbb
jecxz
push
jo
out
jg
sub
push
add
add
add
ret
and
pushf
in
push
add
dec
lea
mov
add
cltd
mov
xor
sub
addb
lcall
add
add
add
jae
sarl
in
xchg
add
pop
sub
lea
push
add
add
add
leave
jmp
push
add
add
xlat
xor
test
sub
mov
push
add
mov
push
xchg
in
notl
push
add
movsb
add
adc
add
xchg
push
add
and
add
pop
cmp
addb
and
add
imul
lods
mov
xchg
add
push
cmp
sbb
add
add
add
jge
add
add
or
sbbl
xor
mov
cltd
mov
add
cmp
and
add
mov
mov
test
inc
add
and
movsl
xlat
push
ds
adc
sbb
pop
fcoml
mov
pop
lock
mov
xor
out
pusha
add
mov
add
fcoms
inc
jbe
and
push
add
push
add
adc
aad
add
repnz
add
and
inc
dec
outsb
fsub
add
imul
add
add
ds
cmp
mov
add
mov
mov
std
loop
pop
rolb
popa
add
add
add
cmp
add
shrl
jo
fistl
lods
dec
test
inc
add
dec
scas
push
sti
sbb
xor
pop
jmp
ja
add
add
push
add
aaa
iret
push
pushf
cmp
rcll
hlt
add
mov
pop
test
add
test
movsb
add
mov
push
push
lock
mov
add
jecxz
in
aad
dec
pop
test
add
add
lahf
push
add
pop
inc
pop
gs
test
les
movb
mov
xchg
push
add
cmp
sub
push
add
nop
add
mov
add
inc
mov
js
mov
add
lcall
clc
decb
out
adc
lret
test
cmc
push
add
pop
loop
sub
das
jp
add
add
push
arpl
adc
scas
outsl
andl
roll
fs
movb
aad
cmc
mov
fstl
add
mov
aas
lea
jp
pop
sti
or
sub
hlt
add
mov
addl
add
sahf
inc
jo
daa
addb
inc
add
jmp
and
push
add
add
lock
mov
xchg
push
movsl
xchg
add
mov
add
rorl
popf
or
xchg
insl
into
mov
in
lret
daa
add
jl
imul
add
mov
lods
xchg
xor
jg
movsb
add
in
cmpsl
aad
popf
mov
testb
sbb
test
add
mov
pop
cmp
add
mov
dec
jne
dec
add
and
mov
mov
lcall
add
add
dec
lock
xchg
add
ds
stc
pusha
add
sbb
in
out
jae
add
cmp
add
loope
jle
add
add
sbb
into
jmp
data16
test
push
ljmp
test
push
jl
rcrl
inc
lods
sub
loopne
sbb
flds
add
adc
jge
and
xchg
add
dec
movb
add
in
pop
repz
cwtl
pop
subl
dec
add
lock
mov
add
in
stc
out
out
lea
add
lods
je
and
mov
xor
ret
add
ss
mov
mov
dec
repz
pushl
cmp
jge
loopne
adc
inc
sub
icebp
mov
fisubl
ja
mov
sub
add
jno
lea
add
shll
ds
mov
xor
rolb
push
add
add
push
movsb
add
add
add
add
mov
nop
add
or
add
inc
add
add
or
fdivl
add
add
imul
cs
pop
push
add
inc
ds
movhps
aas
aaa
dec
and
out
add
rolb
and
sbb
add
lret
outsl
cmpsb
add
or
mov
in
xchg
inc
add
fldl
sbbl
xor
in
pop
mov
addb
idiv
stos
shr
push
add
xchg
add
gs
icebp
pop
test
out
pop
mov
into
arpl
push
push
add
add
jnp
sub
imul
in
imul
arpl
push
add
add
add
jp
cmp
add
or
mov
cmp
mov
sbb
xchg
add
add
add
mov
cltd
les
outsb
hlt
add
inc
ficoml
add
insl
movl
cmp
popa
pop
inc
outsl
jns
mov
sub
add
add
add
pushf
adc
lea
add
imull
cmp
jno
negl
in
pop
and
mov
push
add
out
dec
pop
aas
pushf
mov
fcompl
dec
jne
add
mov
arpl
in
imul
push
add
xchg
add
add
inc
aaa
cmp
and
lret
push
and
xor
mov
out
ljmp
addb
mov
xor
or
mov
loopne
mov
das
sbb
sbb
cmp
add
add
mov
push
mov
js
add
jbe
cs
xor
jne
add
add
loope
add
addb
andl
aad
cmp
pop
movb
nop
add
daa
loope
out
add
addr16
and
outsl
push
adcl
add
shrl
push
add
shll
jbe
xchg
add
add
mov
inc
lds
rolb
sbb
add
inc
add
in
scas
push
jg
add
jl
push
add
gs
add
xchg
or
mov
cmp
or
add
push
add
add
idivl
dec
or
mov
add
inc
add
add
and
cmp
popf
test
add
jecxz
out
pusha
add
test
mov
adc
pop
addr16
sub
sub
sbb
jb
rcrl
imul
popf
popa
in
xchg
int3
pop
lds
mov
pop
orl
mov
aas
pop
pop
mov
pop
cwtl
mov
test
jle
nop
add
mov
xchg
jp
add
pop
push
add
add
dec
movsb
add
mov
add
inc
push
sbb
xlat
mov
sbb
fisubl
add
and
out
lea
inc
inc
xor
imul
sbb
sub
addb
add
xor
or
add
fsubrl
mov
sub
add
add
rcll
mov
pop
add
push
add
add
add
xor
xchg
add
shl
adc
mov
push
sub
inc
adc
leave
nop
add
jne
add
jmp
mov
mov
lock
add
adc
or
cld
adc
pop
je
push
add
cld
pop
push
movsb
add
add
add
mov
add
nop
add
add
add
mov
stc
outsb
aas
repz
push
fisubrs
cwtl
push
add
add
add
add
add
jmp
mov
fisubrs
add
jg
add
add
loop
in
add
dec
or
add
mov
add
or
add
add
loope
pushf
ret
into
sbb
inc
add
add
mov
loope
insb
inc
movsl
push
add
bound
mov
insl
addl
js
add
les
jg
or
add
sbb
out
rolb
ret
ret
fisubs
xor
iret
fs
add
mov
add
test
lods
add
mov
add
add
stos
inc
add
and
add
add
add
popl
adc
inc
add
addb
and
mov
lcall
push
stos
and
push
add
js
push
add
jne
mov
jb
sbb
loop,pt
adc
add
daa
rolb
xor
loop
lds
ljmp
add
xchg
cmp
jge
dec
fcom
add
jl
add
loopw
add
or
mov
je
inc
add
add
mov
add
addb
mov
jg
outsl
std
pop
les
je
pop
cli
adc
add
add
lods
fwait
or
mov
aas
add
outsb
pop
sahf
cmp
add
and
add
and
adc
adc
and
and
test
add
add
or
js
xor
mov
adc
inc
add
add
jb
es
push
add
xchg
push
add
pop
adc
cmp
mov
add
or
adc
jbe
dec
lds
dec
fucomp
cmp
cmp
insl
pop
repz
add
add
or
jmp
fidivl
add
lods
push
xchg
add
and
cmpsl
bound
mov
add
fidivs
add
mov
xchg
add
cwtl
movsb
add
sbb
add
int
xchg
add
enter
add
rcrl
push
add
aam
test
add
test
push
cs
adc
add
mov
add
leave
push
add
add
mov
mov
pop
clc
push
clc
and
mov
mov
xchg
xlat
adc
ja
cmp
stos
or
add
add
add
and
test
dec
lret
cmp
movb
and
imul
movq
sti
push
adc
mov
add
push
clc
and
loope
add
push
sub
add
sbb
add
add
fsubl
add
leave
jbe
jns
fidivrs
int3
mov
mov
lods
data16
jl
xchg
mov
icebp
push
mov
jb
jle
mov
jnp
xor
mov
add
mov
sbb
jnp
inc
and
add
movsb
add
lret
xchg
dec
mov
cli
xchg
sub
xchg
jmp
mov
cld
sbb
and
and
mov
mov
mov
and
mov
mov
push
in
sbb
mov
xchg
and
cmpsb
add
add
lods
movsb
add
fbstp
icebp
wrmsr
add
add
in
rolb
into
ljmp
ret
pop
psubsw
add
cmpl
int3
sbb
add
insb
jae
jne
mov
mov
je
adc
dec
rorl
lods
mov
push
add
and
add
jge
jmp
lea
insl
pusha
add
js
lea
mov
xor
dec
popf
popf
sub
push
enter
add
mov
add
or
add
mov
or
decb
jecxz
mov
add
add
cld
bound
mov
mov
add
xchg
lret
cmp
add
pop
cli
cld
xor
add
addb
add
cmpsl
jge
add
add
lret
add
testb
inc
add
or
add
mov
jno
incb
dec
xchg
xlat
push
add
add
sahf
adc
jp
add
mov
rolb
jle
sbb
sbb
cmp
dec
pop
fdivrl
or
inc
test
add
bound
mov
add
pushl
lock
add
cmc
inc
dec
mov
pusha
add
add
inc
add
imul
daa
lcall
xor
add
add
cmpsl
inc
add
mov
or
adc
stos
rolb
int3
mov
pop
push
loop
in
jg
add
ja
or
lret
rolb
cmp
cmc
stos
adc
and
testb
add
or
mov
add
xchg
add
loopne
xchg
or
sub
dec
loop
inc
add
sub
pop
mov
add
mov
mov
mov
xchg
inc
pop
mov
add
jb
mov
jmp
xchg
xor
push
daa
xchg
mov
add
arpl
add
repz
mov
pop
das
mov
nop
add
les
icebp
daa
lahf
cmp
testb
add
mov
add
dec
pop
leave
sbb
fists
pop
out
lods
xchg
add
loopne
scas
cli
inc
js
inc
or
sbb
inc
jl
adc
mov
icebp
cld
adc
pop
arpl
mov
pop
xchg
frstor
imul
sub
lock
pop
movsl
int3
ret
add
mov
movb
add
mov
add
inc
add
cltd
stos
pop
in
mov
mov
adc
adc
xchg
popa
imul
add
rorl
mov
fcmovbe
add
lret
mov
add
add
xchg
mov
lods
push
rolb
mov
xchg
jecxz
add
leave
repz
aam
add
add
add
mov
pop
je
in
add
into
add
and
push
add
fsts
mov
jbe
pop
push
pop
xor
mov
jbe
sbb
das
es
inc
add
add
addb
dec
mov
mov
testl
add
aas
in
jg
adc
add
push
js
add
inc
jbe
movsb
add
add
push
outsl
pop
lods
repz
adc
pop
arpl
dec
cmp
fisubrl
mov
mov
rolb
add
xchg
xchg
inc
add
add
mov
add
mov
lahf
dec
dec
loope
add
std
push
add
leave
hlt
add
repnz
xchg
add
cmp
dec
vpunpcklqdq
or
dec
in
mov
inc
mov
ljmp
and
mov
cli
mov
add
lea
add
mov
imul
les
in
pop
sub
imul
mov
add
add
xor
adc
mov
cmp
out
add
mov
stos
xlat
insb
into
push
add
add
add
xchg
add
cwtl
fisttps
fidivrl
add
mov
inc
out
push
xor
add
add
stos
pop
inc
sub
dec
push
add
or
adc
out
sub
shll
xchg
add
sub
add
out
jge
xor
pop
imul
add
mov
imul
iret
add
sbb
mov
lret
add
add
add
rolb
or
movb
or
dec
adc
or
dec
pop
lods
movl
xor
add
pop
mov
add
mov
aaa
lock
iret
or
dec
clc
icebp
test
add
aam
or
dec
pop
into
aam
fstpl
bound
mov
jnp
dec
mov
out
adc
clc
sbb
push
add
cli
sarl
xor
add
adc
movb
add
add
pusha
add
inc
add
add
jl
jns
pop
sahf
decl
add
push
push
mov
cmc
stos
push
xor
pop
adc
outsl
movsl
inc
add
pop
pop
add
mov
dec
adc
or
pop
inc
add
pop
cmpsl
adc
arpl
sbb
add
mov
add
cmp
mov
ja
add
stc
mov
jmp
push
add
ret
fcom
mov
pushf
stc
mov
mov
cmpsb
add
mov
cmp
movsb
add
outsb
dec
sub
add
mov
add
testb
inc
in
add
or
addb
sti
jns
dec
out
enter
lock
add
imul
push
add
add
xor
enter
ja
cmc
je
out
inc
repnz
negl
lods
int
pop
or
mov
xor
xchg
xor
add
adc
and
mov
add
or
mov
add
pop
mov
sbb
fcompl
scas
fnstenv
push
add
add
out
inc
mov
mov
cmp
add
sbb
or
orl
add
jnp
mov
add
add
jle
rcrl
dec
sbb
addb
repz
int3
sahf
scas
rolb
dec
arpl
ljmp
pop
sti
xchg
add
add
add
mov
dec
xchg
and
mov
push
add
daa
repz
rorl
out
add
mov
add
xor
inc
pop
mov
add
mov
cli
dec
das
jmp
stos
cmp
ret
add
jns
add
add
cmc
movsb
add
pop
addb
sarl
push
add
inc
add
mov
lahf
cmc
aam
push
add
loopne
mov
add
add
push
add
test
jg
add
add
mov
hlt
add
pop
sub
add
xor
cwtl
fwait
jg
mov
push
mov
das
lea
add
add
sub
sar
roll
dec
xor
xchg
add
add
out
rolb
lahf
mov
push
push
inc
add
repnz
std
pop
sbbl
jae
add
add
or
jg
cmp
sub
dec
cli
lds
inc
sub
add
mov
add
mov
xchg
add
cmp
dec
fbld
mov
mov
outsb
cmp
or
testb
add
add
xchg
add
dec
push
add
add
mov
add
cmp
add
xchg
dec
repnz
jae
dec
xchg
js
xchg
lods
rolb
inc
adc
add
add
mov
inc
dec
xchg
mov
stos
dec
ljmp
xchg
adc
out
jecxz
add
icebp
sub
xchg
testb
push
mov
daa
add
inc
mov
add
adc
mov
cmp
push
adc
dec
cltd
cmp
fsubp
add
in
inc
in
add
add
fidivl
cmp
mov
add
enter
add
lock
pop
test
dec
std
and
test
add
add
pop
add
call
cmp
lock
imul
cltd
jo
and
fildl
cmp
mov
cmpsl
lea
xchg
in
int
bound
mov
pop
popa
adc
and
mov
add
xor
add
mov
mov
push
mov
outsb
shrl
xor
push
test
jne
pop
adc
push
add
xchg
xor
push
cmpsl
add
outsl
sbb
or
add
add
add
shll
push
add
stos
push
add
clc
lds
add
jb
in
imul
sub
aad
inc
mov
add
js
add
dec
in
add
push
add
es
movb
insb
cmp
pop
cli
sbb
add
faddl
push
jl
scas
jg
pop
movb
add
mov
add
push
fwait
aas
or
mov
push
add
inc
mov
fwait
js
sbb
and
jb
cmp
add
pop
mov
sub
out
loop
dec
aaa
pop
add
add
add
test
cmp
lods
pusha
add
add
mov
pop
jno
cmp
add
lock
add
and
mov
add
inc
add
add
jb
inc
add
mov
addb
mov
pop
les
jge
addr16
add
nop
add
dec
cmp
add
aas
les
orl
inc
mov
push
add
and
mov
add
add
add
sbb
inc
add
sbb
out
mov
add
in
call
jg
leave
xor
add
outsb
shrl
dec
cmp
jae
add
xor
jle
add
cmpsl
mov
add
imul
cmp
or
add
add
add
testb
bound
mov
stc
jns
add
mov
sbb
mov
out
sbb
rolb
push
add
psubsw
add
insb
testb
inc
add
int
ret
add
int
xchg
cmp
sub
xchg
add
clc
loop
mov
lds
add
pop
xor
repz
adc
iret
inc
rolb
xor
add
push
add
xchg
add
inc
mov
xchg
mov
or
xchg
sbb
test
lret
jnp
cli
je
cwtl
cli
pop
mov
add
add
or
gs
add
cmp
test
jmp
cmp
jge
or
sub
cmp
add
push
add
dec
sti
test
repnz
and
sahf
xchg
movb
ret
jns
nop
add
add
push
add
add
inc
add
scas
std
cld
cmp
jmp
inc
loopne
fsubl
add
dec
cmc
rolb
add
add
insb
mov
and
mov
push
loope
adc
mov
sub
shrl
test
add
add
cmp
jnp
add
imul
add
push
add
add
add
add
addr16
popf
les
subl
xchg
add
add
into
fstpt
sub
out
jbe
hlt
add
lcall
push
mov
movsl
sub
add
adc
add
sti
mov
or
add
std
mov
addl
add
pop
push
add
cmp
add
mov
add
jl
add
jbe
js
jge
push
xor
sub
into
jl
pop
loope
test
push
add
jnp
add
add
add
dec
lahf
in
int
add
add
aad
push
add
loop
aaa
and
add
add
xchg
int3
pop
enter
inc
add
xchg
xchg
mov
fisubrl
js
add
adc
dec
or
xchg
mov
fcmovnbe
push
add
mov
lret
cmpsl
lea
mov
repnz
dec
lods
aas
icebp
push
add
data16
fmul
clc
dec
shll
iret
mov
add
js
test
or
test
add
mov
adc
jbe
add
inc
and
rcll
add
fwait
sub
add
adc
sti
xor
mov
push
add
mov
add
cmp
add
xchg
add
add
out
sub
and
add
cmp
mov
leave
faddl
or
adc
and
out
in
scas
and
mov
loopne
mov
jg
imul
out
and
push
dec
sbb
subl
add
cmc
or
movsl
stc
inc
add
mov
sub
sbb
cmc
add
push
imul
cmp
xchg
pop
cmc
sarl
fucomip
imul
add
mov
xchg
pop
testb
xor
jnp
hlt
add
fisttpl
xor
leave
sbb
jmp
mov
or
push
add
add
xchg
loope
mov
cmpl
add
aam
dec
mov
xchg
addb
add
inc
add
add
pushf
and
mov
ja
bound
mov
dec
fstpl
push
xchg
push
add
jnp
sub
add
mov
add
mov
and
pop
push
add
add
add
add
xchg
movb
mov
add
cmp
add
lds
xor
inc
mov
movsb
add
mov
mov
mov
inc
add
add
or
xchg
add
addr16
or
cmpsl
lret
cmp
xchg
ds
xchg
push
add
lret
loopne
pop
frstor
add
jmp
add
mov
jno
cmp
add
inc
push
ret
fsts
xor
or
add
add
inc
add
pusha
add
pop
push
add
xorl
aaa
fists
mov
add
mov
add
shrl
leave
mov
push
adc
gs
mov
push
add
add
test
push
and
push
lret
sbb
mull
add
mov
imul
and
movsb
add
add
cmp
mov
mov
loope
add
es
adc
add
add
xchg
pop
sub
adc
cli
mov
add
add
popf
jmp
gs
movb
fstpl
mov
mov
mov
add
or
dec
aad
push
add
mov
push
add
and
mov
das
jl
sub
ja
add
push
and
mov
add
jg
into
or
add
add
stos
pop
or
add
fsubp
add
arpl
xor
dec
fwait
inc
add
push
add
call
push
add
scas
stc
jb
sbbl
testl
imul
shrl
insb
out
addb
sbb
sbb
mov
add
jns
jae
sarl
add
add
pop
ret
pop
jno
add
mov
fwait
sbb
imul
xchg
add
iret
jmp
add
pop
add
sbb
push
add
mov
adc
add
add
add
add
lds
add
mov
add
ret
xchg
mov
fptan
add
add
testb
std
sahf
addb
mov
add
add
or
sub
add
add
insl
out
movsb
add
std
xor
add
cmc
lcall
cld
shr
pop
mov
sti
das
movsl
add
fisubl
enter
add
fcom
mov
sbb
push
xor
notl
add
sub
in
rcrl
adc
push
lds
imul
xchg
cmp
das
inc
or
aam
inc
pop
pop
das
xor
scas
jmp
jg
add
xchg
pop
push
add
cmp
ret
aaa
mov
add
cmp
pop
pop
mov
aas
mov
jbe
dec
mov
movsl
hlt
add
adc
add
loop
mov
push
add
shll
inc
add
frstor
pushf
adc
pop
sbb
mov
lret
push
pop
inc
add
jle
bswap
cmp
loope
pop
sbbl
cld
xor
xor
adc
inc
or
add
insl
jnp
outsl
xchg
pop
or
lds
add
jo
and
mov
out
pop
or
add
jns
cmp
mov
add
jbe
add
xchg
add
pop
aam
dec
bound
mov
xchg
aas
mov
jmp
add
adc
popf
jg
add
fisubrs
inc
outsl
jne
ficompl
ja
aam
sbb
je
or
test
mov
add
or
sbb
add
add
sub
insl
cli
adc
cmp
imul
imul
push
add
pop
test
lahf
sbb
addb
es
cmp
add
shl
add
mov
add
lea
mov
add
dec
movb
add
mov
inc
cmp
sahf
das
add
add
push
add
add
add
push
add
cmp
add
jne
dec
or
mov
add
nop/reserved
add
icebp
int3
aam
sahf
es
add
ret
gs
out
or
je
sub
or
adc
xor
in
cmp
dec
cmp
jo
cmpsl
imul
cmp
dec
mov
cli
mov
push
add
add
dec
mov
bndstx
add
outsl
mov
jno
sbb
mov
mov
lahf
popf
mov
pop
add
mov
in
cmp
add
lea
xchg
dec
lock
les
loop
or
add
xor
mov
add
push
add
inc
je
pop
add
push
add
add
sbb
mov
and
dec
mov
jp
addl
xor
test
add
rolb
cmp
add
and
add
or
add
dec
in
aas
xchg
cmp
inc
add
add
lahf
mov
inc
add
fcoms
repz
insb
aaa
fsts
add
pop
jns
out
xchg
ret
out
add
mov
adc
adc
sti
lret
xor
xor
or
mov
xchg
add
push
shl
pop
and
mov
test
sbb
test
jo
xchg
add
jle
cmp
mov
int3
arpl
and
lock
adc
push
add
dec
sub
add
sti
sub
add
jno
sbb
fimuls
push
add
mov
xchg
mov
dec
and
mov
add
clc
push
pushf
lret
mov
xchg
xor
call
in
shr
cmc
mov
rolb
xlat
fdivrp
xchg
dec
arpl
rolb
scas
shrd
mov
rolb
jmp
roll
cs
add
add
shll
add
leave
cmpsb
add
dec
add
mov
mov
xchg
dec
out
push
arpl
pop
inc
add
add
ds
xchg
loopne
mov
add
inc
jbe
push
and
mov
add
addb
xchg
add
mov
push
add
sub
mov
adc
jne
add
push
push
add
mov
jp
xor
add
mov
pop
jbe
dec
push
add
aas
mov
adc
mov
iret
xlat
adc
test
push
leave
add
filds
aas
test
data16
mov
jl
xchg
into
jle
mov
add
shll
popf
push
sub
add
sti
mov
add
test
or
fnstsw
fmull
sti
rol
add
nop
add
pushf
mov
in
pop
in
clc
addb
push
add
mov
outsb
and
xorl
jl
add
add
add
or
inc
incl
pop
addb
add
add
xchg
add
lret
daa
push
add
adc
add
add
add
inc
pop
hlt
add
add
andl
dec
mov
jg
add
or
addb
dec
sbb
add
cs
mov
add
xchg
add
in
inc
insl
inc
add
pop
jg
loopne
mov
roll
add
push
add
add
add
inc
or
mov
arpl
add
add
xchg
add
popa
xchg
add
xchg
mov
setae
add
pusha
add
out
cmp
or
jne
push
add
mov
adc
out
add
add
iret
xchg
pop
insl
or
add
xchg
add
xor
mov
push
jge
adc
mov
jge
xor
test
inc
cmp
inc
pop
xor
inc
add
test
pop
insb
push
pop
ljmp
sub
add
add
rolb
add
jno,pt
add
scas
xchg
pop
lret
repnz
inc
add
aas
sbb
add
add
add
add
mov
popa
adc
add
dec
test
aaa
fisttpl
sub
fbld
add
daa
sbbl
imul
or
add
jmp
add
loopne
fcmovnu
push
addb
addb
incl
add
xor
jmp
lds
add
push
xchg
jo
imul
mov
lods
push
imul
sub
xchg
shll
std
pop
adc
sahf
inc
mov
xchg
add
add
fists
sub
push
add
mov
cmp
add
mov
fcoml
sub
and
add
rolb
add
xchg
rol
pushf
pop
movb
add
pop
dec
out
add
test
sbb
mov
add
add
jne
inc
js
test
mov
stos
cmp
insl
fidivrl
add
mov
add
add
rcll
add
add
rolb
mov
mov
inc
jg
stc
aaa
mov
jnp
add
lret
add
or
popf
push
xor
add
cmp
adc
mov
mov
lahf
jnp
cli
loop
add
mov
push
add
fcoml
add
mov
jl
je
stc
mov
push
add
mov
add
stc
imul
or
xchg
add
add
bound
mov
clc
add
pop
mov
stos
sub
in
and
movsl
push
add
add
ja
jnp
lret
je
dec
mov
rcl
xchg
add
pop
pushf
mov
inc
push
add
add
pop
sbb
add
sub
adc
cmp
adc
add
mov
add
cmp
outsl
into
mov
int3
jnp
nop
add
repnz
jle
out
arpl
popf
push
mov
das
xor
jnp
dec
inc
add
out
in
movsl
add
jl
pop
lock
push
add
xchg
add
leave
xchg
and
testb
aad
mov
mov
add
clc
aam
mov
push
mov
push
out
pop
mov
sub
int3
daa
aad
add
cli
xchg
add
add
add
push
jmp
jmp
or
add
icebp
das
fstpt
inc
rolb
sbb
loop
inc
add
movsl
dec
and
sti
cs
add
rolb
sub
adc
xchg
add
mov
adc
lock
cltd
lahf
fcomps
jl
add
pop
imul
lret
pop
in
mov
add
mov
or
ja
jle
xor
pop
push
test
push
ds
jle
push
dec
stc
addb
jno
dec
add
dec
xchg
jle
push
add
in
add
inc
test
add
jp
add
jmp
mov
mov
sbb
xchg
xchg
add
add
mov
add
add
testb
ja
jl
shll
loop
xor
int
add
int
add
add
test
pop
mov
imul
add
jae
cmp
add
jb
push
add
inc
xor
pop
sbb
shll
push
xchg
add
add
adc
dec
std
or
inc
xchg
add
adc
popf
gs
sti
xchg
add
lea
add
add
pushf
mov
mov
ja
cli
dec
push
data16
add
subl
add
push
pop
outsl
fsubrl
pop
cld
and
pop
fmull
sti
ds
add
or
mov
add
mov
loope
sub
pop
pop
mov
mov
aam
push
add
add
dec
sbb
mov
pop
fld1
mov
add
push
jno
mov
cmpsl
cmp
les
js
and
mov
xor
add
add
add
out
fidivs
testb
add
out
fdivl
mov
out
out
testb
outsb
or
push
mov
data16
repz
add
inc
add
pop
lods
ret
push
dec
push
pusha
add
in
sbb
add
rolb
xchg
pop
mov
dec
stc
ljmp
jg
add
and
mov
add
inc
movsl
cmp
dec
mov
js
xchg
out
jnp
lea
test
sub
mov
shll
cmc
cmp
add
ja
jg
arpl
cmp
add
out
imull
daa
push
add
dec
sub
cmp
cld
xchg
add
add
mov
sbb
jl
add
mov
mov
push
adc
add
add
add
push
ret
jle
add
adc
add
jb
jmp
add
push
add
adc
add
add
repnz
addb
add
add
adc
add
mov
add
movsl
mov
in
das
data16
add
outsl
imul
add
add
add
cmp
jle
fsts
lret
aaa
pop
scas
adc
mov
sbb
jl
adc
mov
add
rolb
push
or
add
add
sbb
cmc
cmp
icebp
inc
dec
sbb
push
add
add
int
subl
or
or
xor
cmp
add
mov
add
adc
nop
add
add
lret
addb
repnz
fdiv
add
loopne
loopne
push
add
add
sbb
xchg
add
add
and
sbb
rolb
xchg
imul
dec
dec
mov
mov
add
add
fbstp
or
add
mov
call
stos
lret
outsb
mov
out
mov
push
add
add
leave
repz
pushf
jge
push
ljmp
jle
add
std
mov
mov
pop
dec
mov
xorl
add
add
xlat
test
mov
push
add
add
add
jnp
add
lods
sub
add
add
out
xchg
xor
shrl
jmp
add
sub
mov
add
inc
add
dec
mov
add
jo
pop
jecxz
add
jmp
jle
movsb
add
add
add
dec
outsl
lcall
dec
ret
sub
push
arpl
loopne
dec
or
repz
mov
inc
cmp
test
add
add
mov
add
mov
and
mov
push
add
adc
pop
dec
ja
aas
jle
mov
add
sbb
mov
add
xchg
push
movb
and
mov
jmp
icebp
xlat
call
cmp
pop
xor
xor
out
outsb
dec
mov
je
push
add
jmp
pop
jecxz
add
lea
mov
lret
add
lret
adc
add
add
aad
or
sbb
add
movsl
sbb
mov
jo
pop
das
out
add
rolb
int3
add
mov
dec
or
fadds
add
add
sbb
out
pop
pop
int
add
pop
xchg
add
add
add
dec
jno
add
hlt
add
scas
xchg
inc
add
adc
dec
push
add
add
add
add
mov
add
mov
add
add
addb
add
add
add
add
adc
pop
dec
aam
add
add
icebp
jg
jp
pop
push
mov
xor
add
mov
add
scas
into
in
stc
mov
stos
push
add
add
movq
in
jmp
je
ds
insl
testl
repnz
add
pop
xchg
add
shll
add
cld
or
blcic
imul
sbb
add
add
dec
mov
mov
or
ret
out
sub
xchg
cmpl
jecxz
add
jbe
lcall
mov
xor
mov
rolb
das
das
pop
sbb
add
add
inc
and
scas
ljmp
rolb
push
sbb
add
andl
addr16
xlat
dec
inc
add
lret
mov
mov
mov
or
mov
rolb
xchg
pop
popa
jbe
push
les
add
and
mov
add
or
push
add
add
sti
enter
add
push
sub
movsb
add
fldenv
icebp
push
add
testb
add
fcomp
call
add
add
add
add
add
push
add
mov
or
loope
movb
fiaddl
add
sbb
sub
add
add
sbb
add
add
add
sub
addb
or
add
jp
cmpsl
lea
inc
add
add
add
mov
movb
sbb
jb
mov
add
add
push
mov
gs
inc
jle
std
jle
lret
xchg
add
cld
into
or
add
mov
add
add
testb
dec
mov
or
xlat
pop
dec
sbb
rcl
mov
xor
xchg
sub
sbb
imul
out
add
mov
call
in
mov
jp
push
mov
and
popa
int3
insb
cmp
jmp
jo
mov
add
je
adc
push
add
pop
clc
sti
fsts
mov
lds
pop
push
add
add
inc
dec
sub
rolb
sbb
iret
mov
arpl
add
add
outsl
imul
jae
xchg
add
jbe
pop
add
arpl
add
add
rolb
xadd
sub
mov
cld
or
rcrl
add
add
add
jae
jecxz
add
add
jne
jne
or
sub
adc
sub
add
adc
dec
sub
sbb
add
stc
mov
pop
icebp
and
int3
pop
cmc
addb
out
and
mov
add
add
add
add
add
jg
cmp
adc
bound
mov
sub
ja
xchg
add
jno
add
lret
sbb
add
rolb
add
dec
outsb
pushf
xor
add
ds
fdivr
jmp
add
add
push
add
mov
icebp
push
add
xchg
lds
mov
xor
iret
dec
add
push
xchg
pop
mov
mov
pop
xchg
inc
scas
pop
js
clc
outsl
lahf
add
int
xor
add
sar
in
jnp
stos
jne
lret
add
add
lret
filds
cwtl
dec
testb
add
shrl
pop
xor
add
mov
jne
hlt
add
in
sub
add
pop
movsl
add
xor
test
sub
add
sub
sbb
add
add
cmp
mov
add
mov
clc
fstl
sub
add
ja
push
add
movb
lcall
jg
add
add
lods
xchg
xor
mov
push
jge
repnz
mov
or
jbe
repnz
sub
and
mov
mov
add
jge
pop
jae
testb
mov
add
jb
jg
add
add
in
mov
or
push
add
cmp
insb
jnp
add
out
stos
pop
lcall
push
loopne
sub
jae
dec
push
add
push
push
jge
jge
mov
add
rolb
js
add
mov
xor
bound
mov
cwtl
sub
clc
xchg
mov
jae
fistl
nop
add
adcl
add
jo
pushl
leave
adc
lea
pop
fcomps
push
add
clc
movsb
add
add
mov
add
add
fwait
in
pop
outsl
push
push
add
out
and
mov
outsb
test
les
jae
add
sub
xor
adc
lea
stos
jb
lds
add
add
enter
jae
rolb
iret
imul
add
xchg
testl
js
add
pop
fimuls
icebp
mov
or
cmp
or
push
push
mov
xor
loopne
das
add
xor
nop
add
ss
xchg
add
add
cmpsl
cwtl
arpl
popa
daa
xchg
dec
cmp
push
add
add
push
stos
cli
adc
cmp
add
inc
add
cmp
pusha
add
pop
add
addb
add
add
int
adcl
in
add
push
insl
stos
mov
fdivrs
out
and
add
mov
jmp
add
lock
out
add
add
add
add
add
inc
add
add
sub
adc
out
insl
test
add
mov
xor
lock
add
in
pop
ds
push
add
inc
add
shl
xor
mov
add
mov
add
add
enter
add
add
popf
stos
mov
push
jecxz
pushf
push
add
popa
imul
cmp
adc
pop
sub
add
add
ds
nop
add
mov
add
repz
add
xchg
inc
add
movsb
add
addb
jge
test
add
lods
rolb
mov
adc
lock
aad
jns
pop
push
add
movsl
push
ja
xchg
sbb
cmp
add
addb
jg
mov
jge
add
add
test
mov
add
add
add
add
add
mov
add
lock
inc
push
mov
filds
mov
iret
in
out
mov
imul
add
add
sbb
pop
loop
mov
sbb
lret
lret
mov
push
add
add
data16
out
in
mov
pusha
add
dec
cmp
lods
jl
test
mov
bound
mov
test
add
add
xchg
add
add
dec
cmp
add
add
adc
sbb
add
push
add
add
add
xor
inc
add
add
call
in
jp
add
decb
add
xor
add
add
jmp
add
pop
in
adc
jbe
push
add
adc
sub
push
cmpsl
add
add
movl
pop
int3
dec
mov
mov
add
add
jno
add
fadds
add
loopne
outsl
stc
imul
in
sbb
inc
cmp
add
inc
sbb
sub
out
or
repz
sub
add
mov
cmpsb
add
mov
mov
adc
repnz
jl
cmp
add
rolb
adc
add
mov
add
add
ret
lds
mov
pop
roll
jb
enter
insl
add
cmp
add
dec
xchg
or
and
mov
dec
cmp
loope
dec
add
mov
aas
scas
mov
ljmp
out
ljmp
add
add
test
clc
push
push
add
or
int3
std
add
mov
inc
add
and
adc
add
add
data16
dec
test
lock
add
mov
add
and
imull
ljmp
fwait
mov
cmc
in
push
add
out
fistpl
push
add
inc
add
data16
add
add
mov
pop
cltd
insb
aaa
addb
and
repz
dec
xchg
add
pop
mov
repz
push
xor
add
lcall
add
pop
pop
in
subl
pop
mov
addb
ja
add
in
dec
ret
jmp
dec
sbb
sbb
inc
add
mov
data16
data16
rolb
scas
mov
adc
dec
into
cmpsl
push
loope
lret
pusha
add
inc
add
mov
pop
dec
add
xor
adc
xchg
add
mov
icebp
jo
pushf
xchg
add
add
inc
add
loop
push
add
inc
add
add
push
add
pop
sub
test
xchg
xor
test
sub
cmp
push
lcall
add
xchg
cmp
xor
inc
mov
add
jbe
arpl
loop
addb
sbb
xchg
add
mov
adc
pusha
add
add
and
pcmpgtb
jecxz
jno
add
sub
testb
imul
repnz
mov
pop
push
add
add
xlat
sub
add
ds
jns
pusha
add
add
leave
bound
mov
pushf
push
loope
mov
and
adc
popa
dec
lods
aas
cmpsl
sub
stos
inc
add
jbe
jae
xor
sub
pop
sbb
mov
or
add
mov
jl
add
mov
add
addb
fnclex
add
or
lcall
jecxz
int3
repnz
add
add
or
sub
stc
js
hlt
add
mov
lock
add
mov
loopne
daa
inc
add
sub
add
dec
std
sub
loopne
add
add
cmpsl
jl
push
add
in
pop
sub
add
jge
add
inc
dec
add
mov
out
inc
add
inc
gs
mov
sub
add
add
mov
add
add
sub
aam
dec
and
popa
cltd
fwait
incl
xchg
popf
push
add
add
mov
addb
dec
xchg
add
add
sub
add
fistps
popf
dec
pop
mov
lcall
mov
add
xor
sbb
pop
jmp
add
dec
adc
inc
add
mov
pop
fidivrs
add
loop
dec
push
add
and
mov
jmp
add
mov
add
dec
xchg
mov
mov
add
and
das
rolb
imul
add
bound
mov
sub
push
add
ret
out
inc
or
testb
inc
pop
sbb
dec
push
add
sti
les
gs
mov
movsl
mov
pop
inc
add
fidivrs
int
push
push
add
nopl
sbbl
cmpsb
add
inc
add
fstl
dec
inc
add
adc
loop
xorl
or
pop
pop
jns
add
add
add
cmp
mov
test
lds
adc
add
fistpll
das
ja
add
outsl
sub
add
aaa
mov
popf
cvttps2pi
push
int
pusha
add
mov
or
add
xchg
add
add
inc
push
add
inc
ja
jecxz
imul
adc
vunpckhps
out
mov
test
nop
add
adc
add
push
add
add
or
repz
fucomp
int
or
push
push
icebp
sysret
std
rolb
testb
or
add
add
iret
aam
adc
xchg
or
add
and
mov
rolb
loopew
pusha
add
das
mov
pop
nop
add
cltd
fdivrs
and
add
push
xor
or
and
mov
jecxz
std
cmp
and
add
add
adc
and
mov
xchg
add
add
sahf
add
mov
xlat
pop
dec
jge
add
addr16
mov
iret
sbb
cwtl
clc
xchg
or
add
pushf
adc
inc
into
jle
mov
mov
or
daa
or
xor
sub
push
add
push
add
dec
mov
cmp
fcoml
ja
or
add
lods
adc
dec
xchg
pop
lods
mov
lea
add
xchg
add
and
mov
push
dec
lods
jno
add
data16
inc
or
test
xchg
add
dec
fstpt
cs
sub
add
stos
adc
push
add
add
add
or
sbb
test
int
mov
mov
adc
inc
xchg
pop
jp
faddl
sbb
add
and
mov
ljmp
lcall
insb
jb
aas
jae
in
fwait
adc
fsubrs
jge
clc
cmp
add
dec
icebp
jno
add
add
add
add
add
mov
add
addl
xchg
js
add
add
out
dec
add
mov
add
sub
add
out
out
sbb
add
mov
movb
mov
add
add
rolb
je
or
rolb
cmp
lds
sub
sbb
add
addb
inc
ja
jg
add
cld
xlat
xchg
test
rolb
and
mov
in
or
addb
add
popa
in
dec
inc
cmc
pop
cmc
add
mov
inc
addb
adc
xchg
inc
rolb
loopne
jo
xchg
add
push
ret
mov
jmp
add
imul
cwtl
push
sbb
adc
lods
adc
mov
add
mov
pop
adc
popf
jge
cld
jg
jo
mov
push
jb
xor
xor
lods
clc
mov
and
mov
loop
das
xchg
xor
push
adc
sbb
test
xor
rcll
add
mov
mov
adc
mov
adc
dec
movsl
ljmp
xor
xchg
add
bound
mov
std
mov
and
ja
sub
fwait
js
dec
sbb
mov
add
add
cmpsl
or
sub
add
dec
in
daa
arpl
add
add
call
add
sbb
ja
roll
or
add
pop
mov
add
addb
fdiv
jne
add
mov
inc
add
loopne
jae
and
cmpsl
dec
or
xor
dec
cld
xlat
movb
sub
add
rorl
int3
mov
mov
add
add
pop
jb
rorl
add
xor
push
cmp
jbe
dec
pop
cmp
add
add
mov
add
add
pop
push
add
and
mov
pop
nop
add
mov
add
nop
add
add
add
mov
in
or
jno
mov
add
add
pop
into
lds
imul
push
test
cmpsl
sub
popa
fistpl
and
mov
cmc
mov
add
add
add
push
add
mov
xlat
pop
inc
add
mov
add
pop
mov
notl
lret
cwtl
push
add
dec
fildl
push
aas
xlat
add
mov
add
das
mov
addr16
jne
sub
pop
sub
and
mov
sbb
push
movhps
subl
out
pop
mov
scas
loop
dec
mov
mov
bound
mov
or
mov
dec
outsb
inc
add
add
aad
loopne
or
cmp
test
jmp
jle
scas
push
add
add
loop
sub
lds
add
in
add
fcmovnu
pop
cmp
sub
add
mov
adc
cmp
xchg
xchg
fidivrl
cmp
les
xchg
iret
xchg
shr
movb
add
mov
adc
add
rolb
add
mov
insl
sbb
jne
add
mov
add
addb
add
add
xchg
add
nop
add
and
mov
adc
pop
and
jb
adc
mov
loopne
cmp
xchg
add
dec
xlat
dec
add
add
add
movsb
add
or
enter
add
add
inc
add
jge
mov
mov
inc
add
jg
add
add
add
add
addb
loopne
pop
fsub
mov
add
pop
or
add
and
cli
mov
add
xchg
dec
sbb
add
data16
add
add
xor
mov
mov
ds
lcall
xchg
add
inc
jne
add
pop
in
sbb
sub
rolb
mov
jbe
or
rolb
je
add
mov
mov
imul
add
fwait
jno
pop
pop
aam
lcall
add
sub
add
mov
inc
add
in
pop
scas
add
mov
add
add
adc
push
add
mov
add
cmp
cli
jne
out
pop
and
mov
dec
mov
inc
cmp
push
add
lods
insl
icebp
mov
jmp
xchg
inc
add
test
add
pop
add
test
sub
ret
or
add
dec
jbe
fldl
lret
enter
clc
mov
nop
add
pop
xchg
cltd
mov
testb
iret
test
std
insl
mov
lret
or
or
add
add
ret
or
cmpsb
add
add
pop
xorl
jl
fldcw
sbb
add
aaa
push
dec
dec
inc
addb
push
add
repz
aas
aaa
ljmp
je
in
mov
mov
inc
add
add
dec
incl
add
adc
xchg
inc
push
add
in
sub
add
mov
add
mov
out
rolb
add
pop
sub
js
add
or
push
dec
cmp
xor
out
pop
inc
push
jae
xchg
add
dec
sbb
add
add
sub
add
jno
aad
add
mov
mov
int3
adc
mov
je
adc
sub
dec
cmp
add
pusha
add
ret
rolb
inc
add
push
add
xchg
jmp
jne
lret
rep
add
add
mov
fsts
add
adc
cltd
scas
inc
add
mov
mov
popf
push
add
popf
inc
add
add
cmp
neg
cmc
push
cltd
arpl
add
popa
sti
cmp
add
adc
add
cli
insb
inc
sub
daa
arpl
les
popf
add
push
add
cmp
adc
addb
cmp
add
add
add
insl
mov
fisubl
into
jg
iret
movsl
mov
fsts
mov
add
or
inc
dec
test
daa
cs
cli
loop
bound
mov
add
mov
inc
add
add
jecxz
fldenv
sub
pop
sahf
les
dec
mov
addb
pop
and
mov
add
add
in
pushf
add
add
mov
pop
mov
add
pushf
jle
inc
stos
leave
sub
out
xchg
add
cmp
inc
add
add
sub
add
ja
call
jecxz
dec
cltd
adc
aad
mov
mov
jnp
add
clc
aas
dec
or
dec
je
ja
add
sbb
mov
add
add
add
mov
push
add
mov
dec
enter
adc
fsubp
add
lods
out
add
mov
repnz
inc
pushf
sbb
add
adc
mov
xor
jno
jnp
add
movsb
add
fsubr
or
add
add
pop
dec
xor
fs
pusha
add
testb
push
adc
add
mov
leave
sbb
testl
cmp
xchg
dec
mov
add
or
add
mov
and
mov
lcall
jno
add
mov
aaa
pusha
add
push
add
rolb
and
add
add
push
mov
mov
add
out
add
sbb
rolb
out
sbb
movsb
add
sub
add
mov
mov
cmpsl
insl
ret
test
cli
mov
mov
and
mov
adc
daa
pop
mov
sub
pop
mov
leave
fcoms
and
xor
jp
add
xchg
push
add
add
inc
jp
mov
iret
dec
xlat
adc
fwait
pop
cwtl
pushf
mov
jp
mov
cmpsl
lea
ret
pop
lods
cmp
dec
cmp
pusha
add
ja
add
add
in
rolb
sbb
jge
add
fidivrl
mov
mov
inc
jns
mov
rcll
mov
add
adc
pop
or
add
push
xor
xor
or
add
add
add
mov
outsl
xchg
add
les
fwait
and
xor
rcrl
jmp
subl
push
inc
push
add
add
das
or
add
push
add
cmp
mov
add
or
pop
lods
stc
push
ret
add
add
or
push
mov
xor
lods
loop
js
add
pop
lods
mov
ret
fsubrl
jno
mov
aam
xchg
dec
clc
push
xchg
pop
mov
std
jae
xchg
adc
add
adc
add
add
mov
adc
add
push
pop
iret
loop
mov
add
sub
ret
push
cmp
cli
in
add
add
mov
lock
and
dec
jmp
out
stos
loop
dec
mov
in
mov
and
add
adc
push
add
add
xlat
je
push
mov
dec
and
mov
adc
inc
out
repz
movsb
add
aas
pop
push
add
or
add
inc
enter
or
test
mov
push
inc
add
add
cmpsl
ret
add
dec
mov
scas
dec
pushf
popa
incl
inc
add
leave
push
add
mov
lods
rolb
pop
adc
add
add
mov
rolb
lret
test
add
sub
incl
add
push
add
call
cwtl
push
add
xchg
adc
test
dec
out
sti
and
mov
add
sub
add
imul
add
mov
pop
mov
lahf
cmp
gs
or
pop
dec
xor
cmp
push
add
add
cmpsb
add
add
aas
imul
mov
mov
add
sub
jno
add
xorl
add
aad
int
push
add
add
mov
addb
cmpsb
add
mov
dec
xchg
dec
mov
movsb
add
add
jle
data16
sbb
add
xor
and
sbb
fisttpll
lock
mov
jge
jne
add
das
and
add
mov
xor
adc
add
add
jge
in
bound
mov
add
out
inc
add
cld
jge
mov
lock
add
xchg
out
adc
mov
das
add
popf
push
add
popa
stos
pop
repz
aaa
pop
fsts
repnz
fwait
out
test
adc
addb
test
xchg
push
add
add
cld
imul
pop
adc
scas
jge
add
adc
xchg
pop
cmpsb
add
cld
lods
jecxz
add
pusha
add
push
aam
popf
adcl
cmp
or
sub
push
add
add
or
mov
cmp
add
daa
pop
shrl
fistpl
add
add
cltd
pop
pop
xor
add
fidivs
out
add
repz
add
add
pusha
add
mov
mov
in
add
add
xlat
sbb
jle
add
rolb
stc
push
add
cmpsl
das
mov
jge
test
mov
add
add
mov
add
mov
repz
rolb
data16
movsl
mov
nop
add
sub
push
jb
lcall
aas
jbe
lea
add
rolb
cmpsb
add
push
aaa
outsb
les
sub
xor
imul
jno
jno
aam
iret
sbb
add
inc
cmp
jbe
roll
addb
sahf
mov
imul
add
add
add
adc
jge
loop
mov
jns
mov
add
stos
fldt
jl
sub
inc
jo
inc
add
test
mov
dec
mov
add
inc
add
push
add
push
add
mov
add
test
dec
movsb
add
mov
add
add
add
add
add
add
add
dec
pop
repnz
rcll
sahf
adc
xor
push
add
dec
mov
mov
hlt
add
lock
add
cltd
sbb
add
sub
mov
add
mov
sub
xchg
add
mov
lea
add
fwait
outsl
dec
and
add
mov
jae
in
lret
pop
roll
mov
add
add
test
out
lahf
mov
loope
aas
ror
sub
jge
pop
xor
aas
fmul
adc
outsl
mov
rolb
lcall
xor
daa
fistps
shll
cmp
pusha
add
add
dec
mov
data16
mov
mov
add
mov
xor
add
mov
push
mov
add
add
fnstsw
add
xchg
add
and
data16
add
mov
add
imul
rolb
pop
pop
cmp
bound
mov
in
loop
js
add
mov
mov
out
shl
xchg
sbb
push
rorl
or
out
add
es
pop
xchg
add
lret
jmp
mov
push
jbe
dec
pop
jle
add
add
jmp
add
testb
dec
add
fisttpll
add
lods
cltd
test
adc
push
das
sti
fildl
ja
in
out
cmp
addb
xchg
add
add
add
mov
add
add
add
fstps
lods
mov
add
stos
add
mov
aad
xchg
cmpsb
add
add
dec
cmp
mov
add
sbb
push
add
add
xchg
pop
inc
pusha
add
arpl
shll
aad
mov
xchg
mov
xor
xchg
add
add
sti
push
hlt
add
or
hlt
add
xchg
add
dec
sar
in
rolb
or
movsl
cmp
fwait
push
in
push
add
xchg
add
aad
ds
inc
add
cmp
xor
dec
cltd
jge
add
add
push
and
add
pop
rcr
les
cwtl
add
mov
mov
clc
repnz
jae
lahf
add
add
push
mov
xchg
ret
xchg
add
decb
test
add
clc
repnz
jae
cmp
pop
push
cmp
repnz
jae
add
add
pop
mov
fwait
cld
nop
jmp
add
ja
insl
decl
adc
add
add
add
add
add
nop
jae
add
add
movsb
add
dec
shl
clc
repnz
jae
add
pusha
add
adc
add
repnz
jae
add
add
add
add
mov
push
clc
repnz
jae
insl
cmp
cmp
add
mov
xchg
ret
mov
or
mov
mov
clc
repnz
jae
insl
mov
push
mov
mov
add
add
lret
push
or
dec
adc
repnz
jae
lods
add
add
iret
scas
mov
push
mov
xchg
ret
cmp
int
jmp
clc
push
mov
xchg
ret
xchg
adc
sub
xchg
xchg
add
add
clc
repnz
jae
int
fsubrl
jge
mov
adc
repnz
jae
nop
or
add
addb
mov
clc
repnz
jae
ja
xor
add
mov
nop
jae
test
insl
arpl
nop
jae
nop
ja
int
data16
push
add
push
mov
xchg
ret
testl
push
add
mov
fwait
cld
nop
jmp
jg
add
add
fistpll
clc
repnz
jae
imul
push
or
add
add
jg
jns
add
add
add
hlt
add
stos
push
mov
add
out
add
add
add
out
push
mov
and
out
add
les
xor
dec
add
push
mov
xchg
ret
popa
add
add
pusha
movsb
add
repnz
jae
xchg
incl
add
add
jns
fwait
cld
nop
jmp
dec
sub
lahf
xchg
and
testl
and
push
mov
xchg
ret
add
rolb
or
cmp
inc
add
add
iret
add
lea
sar
nop
jae
add
add
mov
icebp
clc
repnz
jae
add
add
add
test
jge
les
add
add
sub
add
je
add
popa
clc
repnz
jae
fsubrl
add
add
jns
testb
add
call
clc
repnz
jae
sub
ja
movsb
add
dec
movzwl
clc
repnz
jae
add
add
fistl
stos
ret
inc
add
or
jg
add
movsb
clc
repnz
jae
stc
iret
add
test
fwait
lods
push
mov
xchg
ret
and
arpl
add
mov
nop
jae
or
fs
mov
clc
repnz
jae
pop
add
sub
add
pop
push
mov
xchg
ret
add
add
mov
notl
add
mov
clc
repnz
jae
dec
add
add
add
pusha
clc
repnz
jae
or
add
lahf
add
or
xor
add
clc
repnz
jae
add
rolb
dec
mov
clc
repnz
jae
add
test
add
inc
nop
add
ja
outsb
lea
fwait
cld
nop
jmp
add
popa
add
lret
jecxz
pushf
mov
clc
repnz
jae
add
add
adc
jns
mov
push
mov
xchg
ret
add
add
or
add
mov
fwait
cld
nop
jmp
add
add
add
and
add
repnz
jae
add
add
insb
clc
repnz
jae
das
rorl
dec
push
push
mov
xchg
ret
add
add
add
call
push
mov
xchg
ret
incb
mov
clc
repnz
jae
and
add
add
mov
fisubs
popa
add
mov
xchg
ret
hlt
xchg
add
adc
leave
clc
repnz
jae
lods
or
mov
push
insl
add
fwait
cld
nop
jmp
int
add
or
adc
inc
add
loop
adc
add
mov
clc
repnz
jae
add
ds
clc
repnz
jae
adc
add
xchg
je
pop
cmpw
fwait
cld
nop
jmp
add
pop
clc
repnz
jae
je
add
add
push
mov
xchg
ret
arpl
add
add
xchg
pop
push
mov
xchg
ret
add
dec
add
add
add
cli
jmp
add
inc
push
rcrb
daa
add
cmp
jg
add
add
and
fwait
cld
nop
jmp
add
xchg
push
add
test
repnz
jae
popa
pop
add
add
add
clc
repnz
jae
mov
cmp
pop
fildl
jmp
mov
xchg
ret
add
mov
addb
add
ret
rcll
ror
mov
test
add
mov
pop
pusha
clc
repnz
jae
add
sarl
add
push
mov
clc
repnz
jae
add
das
stc
stc
lds
sub
add
xchg
inc
add
add
xchg
cmpsl
cmp
rclb
lods
jmp
and
add
lods
ja
add
add
dec
push
push
mov
xchg
ret
imul
or
clc
repnz
jae
adc
sub
jb
clc
repnz
jae
mov
add
lret
jne
clc
repnz
jae
adc
lret
in
ja
or
repnz
jae
rcrl
add
fbstp
clc
repnz
jae
arpl
add
add
pop
jae
repnz
jae
add
add
lods
cmp
fwait
cld
nop
jmp
jns
iret
add
rolb
sub
nop
jmp
add
add
jae
add
add
pop
push
mov
xchg
ret
add
subl
out
call
clc
repnz
jae
add
iret
add
and
mov
fwait
cld
nop
jmp
jns
mov
mov
dec
fwait
cld
nop
jmp
idiv
das
test
adc
push
mov
xchg
ret
sub
push
mov
cmp
ret
sub
add
int
add
push
mov
xchg
ret
add
stc
add
mov
add
fwait
cld
nop
jmp
nop
add
das
push
cmp
sar
repnz
jae
insl
adc
xchg
repnz
jae
mov
mov
clc
repnz
jae
add
or
je
mov
movsb
clc
repnz
jae
add
andl
mov
clc
repnz
jae
add
add
and
clc
repnz
jae
add
jle
or
out
mov
clc
repnz
jae
add
adc
add
cmp
lret
inc
add
sub
lahf
add
test
add
or
add
sbb
pop
jne
int3
push
fwait
cld
nop
jmp
add
das
lahf
iret
add
add
call
fwait
cld
nop
jmp
fs
mull
add
jl
and
stos
lret
xchg
ret
add
xchg
add
and
mov
xchg
ret
popa
adc
add
fwait
add
fwait
cld
nop
jmp
int
cmp
xor
adc
shll
add
nop
jae
add
add
add
stc
sub
clc
repnz
jae
into
push
mov
pusha
ffree
stc
and
add
add
push
testb
push
push
mov
xchg
ret
mov
or
pop
push
clc
repnz
jae
mov
cmp
testl
loope
add
nop
jmp
add
add
add
in
repnz
jae
nop
add
add
lret
lods
clc
repnz
jae
popa
xorl
mov
clc
repnz
jae
arpl
lret
add
add
clc
repnz
jae
xor
mov
pop
clc
repnz
jae
xorl
add
incb
out
dec
push
mov
xchg
ret
add
popa
cmp
fwait
cld
nop
jmp
je
add
pushf
add
add
adc
lea
clc
repnz
jae
add
add
shll
or
clc
repnz
jae
or
aad
add
outsb
and
repnz
jae
add
add
bound
fadds
xchg
ret
add
add
dec
add
add
jmp
mov
mov
add
or
add
add
lods
add
mov
xor
stc
xchg
bound
aas
push
fwait
cld
nop
jmp
add
dec
add
jg
dec
add
or
mov
xchg
ret
lahf
imul
adc
add
add
jns
shl
pusha
movsl
ljmp
inc
add
idivl
add
addb
das
mov
clc
repnz
jae
fmul
add
subl
or
add
jae
mov
add
clc
repnz
jae
add
repnz
jae
add
or
add
push
mov
xchg
ret
test
add
jae
add
pusha
sbbl
repnz
jae
add
pusha
hlt
jns
push
add
mov
mov
clc
repnz
jae
add
in
add
add
clc
repnz
jae
add
add
fwait
cld
nop
jmp
ja
add
jecxz
add
add
ja
add
clc
repnz
jae
adc
add
mov
push
mov
xchg
ret
sub
add
add
mov
jb,pt
fwait
cld
nop
jmp
test
add
add
cld
nop
jmp
sub
cmp
cli
push
clc
repnz
jae
or
or
je
clc
repnz
jae
add
adc
mov
xchg
ret
cmp
fs
cmp
add
clc
repnz
jae
add
das
pop
fwait
cld
nop
jmp
adc
das
das
add
cmp
add
push
clc
repnz
jae
dec
imul
sub
clc
repnz
jae
cmp
add
decl
fwait
cld
nop
jmp
add
insl
mov
int
mov
add
repnz
jae
add
add
ret
clc
repnz
jae
xchg
add
addl
add
push
add
adc
repnz
jae
add
icebp
fwait
cld
nop
jmp
add
jecxz
xchg
pop
mov
clc
repnz
jae
das
das
add
cmp
add
aad
push
push
mov
xchg
ret
add
or
add
sub
mov
xchg
ret
add
push
clc
repnz
jae
add
and
adc
jg
mov
add
add
dec
add
decl
mov
xchg
ret
mov
add
add
cli
add
clc
repnz
jae
xchg
xchg
dec
jle
add
push
lcall
jg
add
add
and
adc
repnz
jae
xchg
adc
add
mov
push
mov
xchg
ret
add
add
adc
fistl
cld
nop
jmp
arpl
roll
add
add
clc
repnz
jae
xchg
add
je
add
pop
xor
clc
repnz
jae
lahf
dec
add
add
int
mov
clc
repnz
jae
add
mov
sub
sbb
repnz
jae
roll
add
iret
shll
add
xor
clc
repnz
jae
add
cmp
and
repnz
jae
add
iret
sbb
out
fwait
cld
nop
jmp
incb
nop
add
and
repz
and
add
sub
sbb
fwait
cld
nop
jmp
add
je
add
push
add
mov
clc
repnz
jae
add
add
add
repnz
jae
add
add
fsubr
cmpl
fwait
cld
nop
jmp
add
xorl
outsl
add
clc
repnz
jae
mov
pop
iret
add
mov
xchg
ret
add
shll
cmp
fstl
mov
xchg
ret
int
add
pop
clc
repnz
jae
xchg
add
pusha
add
jae
adc
fwait
cld
nop
jmp
add
add
add
repnz
jae
pop
sub
add
les
cld
nop
jmp
add
add
pushf
add
cwtl
sub
clc
repnz
jae
imul
fisttpll
nop
jae
imul
push
clc
repnz
jae
add
jns
add
add
push
mov
xchg
ret
add
adc
add
repnz
jae
add
lret
jb
push
cwtl
push
mov
add
add
jnp
repnz
pop
jl
jmp
add
das
add
testl
fwait
cld
nop
jmp
add
pushf
add
nop
dec
add
add
fwait
cld
nop
jmp
testl
mov
fwait
cld
nop
jmp
stc
add
mov
cmp
ret
jae
add
shrl
stc
push
cld
pop
push
mov
xchg
ret
adc
pusha
lods
add
pushf
mov
clc
repnz
jae
mov
pushf
add
lea
fwait
cld
nop
jmp
pop
xchg
add
add
add
mov
clc
repnz
jae
add
add
add
dec
push
push
mov
xchg
ret
ja
rolb
cmp
add
add
mov
add
jae
call
fwait
cld
nop
jmp
add
add
stc
jns
inc
sbb
xor
inc
add
add
add
in
push
clc
repnz
jae
add
jg
add
push
push
mov
xchg
ret
call
add
add
repnz
jae
and
cmp
stc
loop
rolb
add
popa
add
repnz
jae
mov
popl
int
push
add
int
add
imul
mov
xchg
iret
inc
add
mov
jecxz
into
push
push
mov
xchg
ret
insl
xchg
jle
add
in
add
sbb
add
add
mov
push
clc
repnz
jae
popl
add
add
shr
clc
repnz
jae
add
add
addl
add
add
clc
repnz
jae
pusha
jns
add
add
add
cltd
and
clc
repnz
jae
mov
or
mov
xchg
ret
jae
add
and
or
repnz
jae
xor
add
add
jecxz
mov
nop
jae
add
add
xchg
add
mov
clc
repnz
jae
add
or
je
shll
xchg
nop
jae
add
roll
xchg
mov
push
clc
repnz
jae
or
add
inc
pop
call
clc
repnz
jae
xchg
add
add
repnz
jae
or
iret
jns
adc
cmp
add
add
jns
fdivrl
add
push
je
fwait
cld
nop
jmp
add
pop
xchg
repz
push
push
mov
xchg
ret
add
pop
pop
add
stc
dec
sub
fwait
cld
nop
jmp
cmp
lret
mov
ds
fwait
cld
nop
jmp
mov
fwait
cld
nop
jmp
add
add
cwtl
mov
clc
repnz
jae
rcl
lret
cmpl
fwait
cld
nop
jmp
add
rolb
clc
repnz
jae
add
add
add
jns
inc
fmuls
mov
adc
cld
nop
jmp
xchg
test
mov
shl
add
add
pop
push
mov
xchg
ret
fmull
test
xchg
bound
mov
add
pusha
add
fwait
cld
nop
jmp
cmp
or
movsl
inc
test
sbb
test
add
clc
repnz
jae
dec
add
clc
repnz
jae
add
andl
sbb
cmp
adc
add
push
std
push
clc
repnz
jae
add
add
mov
repnz
jae
add
and
rolb
clc
repnz
jae
jecxz
add
jg
out
xchg
clc
repnz
jae
add
stc
jg
add
clc
repnz
jae
nop
pop
add
int
hlt
add
clc
repnz
jae
shll
jne
clc
repnz
jae
iret
div
push
add
repnz
jae
incl
insl
add
add
add
mov
clc
repnz
jae
add
jns
add
or
mov
addl
add
fcmovnb
mov
push
clc
repnz
jae
add
add
add
add
pop
mov
clc
repnz
jae
nop
add
je
clc
repnz
jae
das
add
add
clc
repnz
jae
lods
add
add
lcall
or
add
insl
adc
add
repnz
jae
sub
test
add
call
clc
repnz
jae
add
nop
add
add
ret
push
mov
xchg
ret
add
hlt
add
mov
xchg
ret
je
add
cmp
fwait
cld
nop
jmp
add
add
addb
icebp
xchg
and
add
clc
repnz
jae
sarb
cmp
mov
clc
repnz
jae
mov
lret
mov
clc
repnz
jae
jns
add
cmp
test
push
push
clc
repnz
jae
add
add
int
add
add
add
mov
xchg
clc
repnz
jae
add
jg
add
aaa
mov
int
pop
jae
repnz
jae
imul
repnz
jae
arpl
int
sub
jae
add
and
lahf
add
add
and
repnz
jae
iret
jns
add
mov
pushf
push
clc
repnz
jae
or
je
sub
inc
add
add
rclb
iret
inc
add
add
mov
clc
repnz
jae
lret
add
add
push
add
mov
clc
repnz
jae
add
add
das
add
xchg
clc
repnz
jae
add
addl
add
testl
nop
jae
imul
repnz
jne
clc
repnz
jae
add
cmp
dec
cmp
repnz
jae
add
lods
testl
ja
fs
repnz
jae
sub
roll
js
test
stc
clc
repnz
jae
stc
add
jle
fwait
cld
nop
jmp
add
add
sub
nop
jae
add
xorl
mov
clc
repnz
jae
add
add
mov
mov
mov
fldl
clc
add
jbe
lcall
nop
jae
add
add
mov
push
mov
xchg
ret
add
stc
jns
scas
add
clc
repnz
jae
add
add
arpl
mov
repnz
jae
add
add
lock
mov
clc
repnz
jae
sub
add
add
cmp
lock
mov
xchg
ret
adc
addl
dec
or
repnz
jae
jle
pushf
shlb
stc
cli
inc
push
mov
xchg
ret
test
add
fisttpll
mov
xchg
ret
xchg
add
add
xor
clc
repnz
jae
add
add
add
lret
clc
repnz
jae
add
cmp
push
mov
fwait
cld
nop
jmp
add
sub
add
jmp
repnz
jae
fs
bound
mov
add
mov
clc
repnz
jae
addl
loop
push
mov
xchg
ret
add
je
sbb
repnz
jae
add
add
popa
out
outsl
rol
fwait
cld
nop
jmp
test
jns
add
or
add
clc
repnz
jae
add
iret
add
rcll
nop
jae
add
cmp
and
add
add
clc
repnz
jae
add
hlt
mov
push
mov
xchg
ret
pusha
add
mov
add
scas
adc
add
add
add
add
add
pop
push
add
clc
repnz
jae
add
lret
lret
clc
repnz
jae
add
cmp
in
imul
clc
repnz
jae
mov
add
add
add
xabort
nop
jae
shll
pusha
fwait
add
push
mov
xchg
ret
iret
add
mov
popa
sub
cld
nop
jmp
sub
add
add
pushf
add
add
inc
push
mov
xchg
ret
add
mov
push
clc
repnz
jae
test
add
add
jg
clc
repnz
jae
add
add
add
scas
add
clc
repnz
jae
popl
add
jle
lods
popa
clc
repnz
jae
add
add
add
push
add
jmp
push
mov
xchg
ret
add
add
mull
adc
add
repnz
jae
sub
xchg
addr16
push
push
mov
xchg
ret
add
iret
jae
add
and
mov
lds
lahf
je
fwait
cld
nop
jmp
add
add
jl
mov
clc
repnz
jae
xchg
add
add
clc
repnz
jae
xchg
add
iret
insl
dec
pop
mov
clc
repnz
jae
and
add
xchg
or
repnz
jae
xor
add
test
push
add
clc
repnz
jae
dec
cmp
sbb
add
fwait
cld
nop
jmp
jg
add
add
push
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
xor
add
bound
add
test
hlt
lcall
idiv
ljmp
add
add
cmp
push
mov
xchg
ret
add
hlt
xchg
pop
push
push
mov
xchg
ret
add
int
int
adc
xchg
xchg
jae
mov
bound
add
add
clc
repnz
jae
add
sbb
jae
pop
pop
iret
je
add
mov
subl
decl
das
add
ljmp
nop
jae
add
jg
add
hlt
add
jecxz
push
push
mov
xchg
ret
add
add
xchg
dec
rep
clc
repnz
jae
add
jecxz
add
add
nop
jmp
or
dec
jg
mov
jne
clc
repnz
jae
fs
iret
and
mov
clc
repnz
jae
add
add
add
nop
jae
incl
add
push
in
cmp
fwait
cld
nop
jmp
jns
adc
or
repnz
jae
int
sub
shll
dec
fwait
cld
nop
jmp
test
add
dec
xor
mov
fwait
cld
nop
jmp
das
add
mov
pop
clc
repnz
jae
xchg
imul
rorb
push
mov
xchg
ret
stc
jns
add
mov
dec
cmp
repnz
jae
int
lret
or
fildl
and
inc
add
add
test
jo
pop
mov
fwait
cld
nop
jmp
add
mov
pop
cmp
mov
xchg
ret
jns
add
or
lods
and
imul
nop
jae
sarb
rcll
add
mov
in
add
add
std
add
mov
jmp
jae
add
bound
pop
decl
push
mov
xchg
ret
or
add
dec
imul
clc
repnz
jae
sub
add
add
add
pop
ret
clc
repnz
jae
pop
add
imul
mov
xchg
ret
add
jns
push
mov
xchg
ret
add
add
xchg
je
push
clc
repnz
jae
lahf
mov
ja
add
add
clc
repnz
jae
dec
stc
add
popa
add
mov
xchg
ret
fs
shrl
jbe
jmp
out
out
clc
clc
repnz
jae
add
add
inc
lahf
rep
clc
repnz
jae
sbb
add
repnz
jae
lret
dec
fs
add
mov
clc
repnz
jae
subl
clc
repnz
jae
add
sub
mov
fwait
cld
nop
jmp
mov
add
xor
cmp
jae
adc
add
add
clc
repnz
jae
jecxz
jg
dec
rep
clc
repnz
jae
jg
pusha
roll
lcall
push
mov
xchg
ret
cmp
add
add
pushl
clc
repnz
jae
add
cmp
test
cmp
add
add
add
sub
mov
xchg
ret
nop
add
das
imul
mov
xchg
ret
and
add
pushf
bound
mov
add
add
pop
lods
leave
clc
repnz
jae
add
jmp
jle
jp
push
mov
xchg
ret
add
add
or
dec
add
mov
xchg
ret
add
testl
inc
dec
mov
clc
repnz
jae
stc
adc
incb
hlt
sub
add
mov
les
xchg
ret
xchg
stc
add
adc
add
fwait
cld
nop
jmp
stc
roll
add
jns
jns
cld
add
fwait
cld
nop
jmp
xchg
decl
popl
sbb
lds
xchg
ret
add
add
add
add
lcall
out
inc
xchg
iret
add
add
lds
sar
repnz
jae
add
fdivl
add
mov
clc
repnz
jae
add
add
cmp
mov
add
push
mov
xchg
ret
jecxz
add
mov
jo
pop
mov
clc
repnz
jae
add
imul
clc
repnz
jae
ljmp
aad
push
push
mov
xchg
ret
mov
sub
jne
clc
repnz
jae
add
stos
pushl
push
mov
xchg
ret
add
addl
repnz
jae
add
xchg
add
add
mov
clc
repnz
jae
add
add
push
mov
xchg
ret
arpl
test
rclb
mov
clc
repnz
jae
insl
add
pusha
add
inc
mov
ljmp
jae
add
das
add
jns
add
repnz
jae
imul
xor
repz
add
add
cld
repnz
jmp
jmp
enter
nop
jmp
jns
sub
add
add
mov
push
mov
xchg
ret
subl
rolb
cmp
jae
ja
add
movsl
mov
clc
repnz
jae
cmp
mov
popa
pop
pop
clc
repnz
jae
je
add
mov
jne
clc
repnz
jae
dec
arpl
adc
lds
inc
loopne
mov
xchg
ret
popw
jecxz
pushf
jmp
repnz
jae
stc
add
shl
fwait
cld
nop
jmp
je
add
add
add
push
mov
xchg
ret
and
add
and
call
clc
repnz
jae
xchg
add
rolb
pop
mov
clc
repnz
jae
add
add
add
clc
repnz
jae
test
add
mov
rep
push
mov
xchg
ret
jae
jecxz
insl
add
pop
pop
push
mov
xchg
ret
adc
arpl
stc
pop
lea
clc
repnz
jae
das
add
add
add
lods
mov
clc
repnz
jae
add
jae
jle
mov
clc
repnz
jae
add
mov
repnz
jae
addl
add
xor
dec
add
repnz
jae
xor
add
test
sub
fwait
cld
nop
jmp
sub
add
or
add
movzwl
clc
repnz
jae
sbb
icebp
add
sbb
jae
cmp
sub
add
add
clc
repnz
jae
add
add
add
sbb
incb
add
addl
data16
test
fimull
leave
inc
add
add
add
les
add
mov
add
add
clc
repnz
jae
add
add
sub
dec
sbb
repnz
jae
stc
add
test
xor
out
add
fwait
cld
nop
jmp
xor
add
or
xchg
out
mov
clc
repnz
jae
incl
add
mov
clc
repnz
jae
andl
add
icebp
push
stos
clc
repnz
jae
add
sub
add
add
cmp
fwait
cld
nop
jmp
add
add
repnz
jae
add
das
lret
and
repnz
jae
and
fs
add
push
iret
inc
add
dec
add
shl
xor
mov
xchg
movsl
mov
fwait
cld
nop
jmp
add
add
repnz
jae
add
pop
mov
fwait
cld
nop
jmp
xor
popl
add
push
mov
xchg
ret
add
add
add
xor
repnz
jae
shlb
add
addl
fwait
cld
nop
jmp
add
fwait
push
push
mov
xchg
ret
lahf
add
lret
mov
repnz
jae
popl
int
mov
or
repnz
jae
dec
adc
mov
xor
push
mov
fwait
cld
nop
jmp
lods
mov
push
add
mov
clc
repnz
jae
or
push
push
mov
xchg
ret
add
add
std
pusha
clc
repnz
jae
add
add
add
adc
jb
mull
or
nop
jmp
mov
add
add
clc
add
clc
repnz
jae
dec
jg
add
add
and
inc
and
fwait
cld
nop
jmp
pusha
xor
add
daa
sbb
sbb
repnz
jae
add
out
and
mov
push
fwait
cld
nop
jmp
jg
jns
add
add
add
push
mov
xchg
ret
pop
add
dec
add
ret
clc
repnz
jae
jle
add
sub
pop
push
clc
repnz
jae
sub
sbbl
add
std
add
clc
repnz
jae
sar
or
stc
test
test
rclb
roll
xchg
ret
testl
in
movzwl
push
mov
xchg
ret
add
mov
pusha
add
nop
jmp
add
ja
add
add
add
mov
xchg
ret
add
add
lret
mov
dec
push
clc
repnz
jae
iret
add
std
pusha
clc
repnz
jae
incb
jle
test
add
nop
jae
cmpl
das
jge
mull
repnz
jae
add
mov
xor
mov
add
clc
repnz
jae
das
ja
pusha
add
call
clc
repnz
jae
add
imul
add
test
add
pushf
add
add
jecxz
jmp
add
jle
add
adc
or
push
clc
repnz
jae
add
add
in
add
mov
cld
nop
jmp
or
add
sbb
repnz
jae
iret
add
jae
push
clc
repnz
jae
sub
subl
mov
xchg
ret
add
add
dec
imul
jl
cmp
stos
lea
clc
repnz
jae
or
add
xor
fwait
cld
nop
jmp
lret
stc
jae
jle
jnp
clc
repnz
jae
add
jns
sbb
repz
and
clc
repnz
jae
add
add
add
add
mov
xchg
ret
dec
jns
xchg
data16
add
clc
repnz
jae
sarl
and
out
clc
repnz
jae
add
test
repnz
jae
and
add
add
iret
div
clc
repnz
jae
add
add
imul
pop
inc
clc
repnz
jae
add
mov
add
xor
fwait
cld
nop
jmp
add
add
imul
xchg
add
repnz
pop
loope
lcall
cli
incl
jle
rcrl
aas
add
fwait
cld
nop
jmp
add
insl
mov
fwait
cld
nop
jmp
das
call
nop
jae
add
add
sub
cmp
iret
inc
add
stc
popa
or
nop
rorl
rolb
xchg
ret
mov
int
data16
pusha
add
repz
cld
nop
jmp
lods
or
jns
push
clc
repnz
jae
idiv
jle
dec
test
add
repnz
jae
test
add
add
repz
mov
clc
repnz
jae
add
shll
leave
mov
clc
repnz
jae
add
add
bound
cmp
cld
nop
jmp
add
add
add
or
push
mov
xchg
ret
and
or
add
nop
or
dec
cmp
repnz
jae
add
jle
add
outsl
ret
fwait
cld
nop
jmp
lods
sbb
das
add
js
rcrb
incl
add
imul
call
xor
add
add
mov
clc
repnz
jae
das
add
add
push
push
mov
xchg
ret
add
jns
jns
add
movsl
das
jmp
xchg
or
mull
add
jne
clc
repnz
jae
jns
cmp
add
clc
repnz
jae
add
inc
add
push
push
mov
xchg
ret
arpl
add
cs
clc
repnz
jae
sub
pusha
add
iret
or
adcl
shll
jecxz
in
out
call
clc
repnz
jae
sub
push
mov
xchg
ret
add
add
data16
mov
adc
repnz
jae
add
add
add
lods
clc
repnz
jae
add
add
add
sbb
adc
clc
repnz
jae
add
add
je
clc
repnz
jae
adc
add
mov
add
repnz
jae
add
add
decl
nop
jae
add
incb
jle
repz
shr
clc
repnz
jae
nop
cmp
roll
add
in
and
sbb
lds
xchg
ret
add
jns
add
add
popa
add
repnz
jae
add
cmp
repz
mov
xchg
ret
mov
out
add
fwait
cld
nop
jmp
jg
add
outsl
add
clc
repnz
jae
add
incb
and
xor
scas
pusha
push
mov
xchg
ret
sub
data16
xor
push
mov
xchg
ret
jle
add
add
push
fwait
cld
nop
jmp
incb
xorl
jecxz
sbb
fs
repnz
jae
add
incb
xor
leave
mov
fwait
cld
nop
jmp
xchg
mov
add
shrb
add
add
jne
clc
repnz
jae
popa
add
jecxz
and
fwait
cld
nop
jmp
add
adc
pop
hlt
mov
cld
nop
jmp
add
add
add
and
mov
add
push
mov
xchg
ret
mov
cmp
add
clc
repnz
jae
dec
add
push
add
mov
clc
repnz
jae
add
movswl
clc
repnz
jae
jg
adc
and
mov
clc
repnz
jae
add
add
add
add
jnp
dec
cmp
cld
nop
jmp
fsubrl
add
xchg
rolb
call
clc
repnz
jae
lahf
hlt
addl
repnz
jae
add
cmpsl
pushf
jne
fwait
cld
nop
jmp
rcl
add
push
push
mov
xchg
ret
add
icebp
mov
cld
nop
jmp
dec
jns
add
mov
jecxz
dec
je
fwait
cld
nop
jmp
add
add
lret
repnz
jae
jns
jecxz
lahf
nop
add
lret
xor
repnz
jae
incl
je
mov
push
aam
add
add
lret
test
and
push
mov
xchg
ret
insl
popl
sbb
repnz
jae
add
hlt
mov
nop
add
add
clc
repnz
jae
das
add
lods
inc
clc
repnz
jae
add
add
icebp
stc
lea
fwait
cld
nop
jmp
add
add
lods
mov
jae
clc
repnz
jae
nop
jae
add
nop
jmp
cmp
add
cmpl
add
sub
push
mov
xchg
ret
add
add
add
mov
xchg
ret
add
xchg
add
stos
call
clc
repnz
jae
xchg
add
push
daa
add
adc
clc
repnz
jae
add
stc
std
test
push
mov
xchg
ret
add
add
add
add
mov
xchg
ret
stc
bound
add
mov
fwait
cld
nop
jmp
add
add
add
inc
punpcklbw
repnz
jae
add
hlt
add
jae
add
fwait
cld
nop
jmp
add
mov
xchg
arpl
add
repnz
jae
jecxz
add
imul
mov
cmp
and
jg
dec
arpl
xor
dec
ss
clc
repnz
jae
lahf
add
add
clc
repnz
jae
add
faddl
add
in
test
fwait
cld
nop
jmp
cmp
mov
test
clc
repnz
jae
add
mov
popa
add
mov
xchg
ret
dec
add
add
jle
inc
rolb
add
incl
xchg
pop
iret
mov
add
fisttps
nop
jae
add
mov
mov
xchg
ret
add
add
clc
repnz
jae
add
rolb
fwait
cld
nop
jmp
bound
add
fwait
cld
nop
jmp
and
jns
lahf
add
mov
mov
xchg
ret
faddl
das
add
jmp
pushf
stc
xchg
or
xor
add
cmp
imul
and
repnz
jae
int
add
sub
clc
repnz
jae
jg
add
dec
mov
clc
repnz
jae
mov
pop
test
fwait
cld
nop
jmp
insl
add
out
push
push
mov
xchg
ret
xchg
add
add
add
rcll
and
mov
dec
pop
clc
repnz
jae
mov
add
add
leave
mov
lods
adc
add
cmc
push
add
jl
clc
repnz
jae
cmp
into
pop
clc
repnz
jae
addl
add
fwait
cld
nop
jmp
mov
jae
rorl
testb
push
clc
repnz
jae
add
add
add
add
add
repnz
jae
sub
add
add
clc
repnz
jae
add
jns
add
dec
mov
clc
repnz
jae
mov
roll
popa
insb
and
clc
repnz
jae
stc
xchg
add
or
pushf
xor
clc
repnz
jae
mov
add
shll
push
mov
cmp
and
cmc
in
loopne
add
inc
ficompl
add
roll
lea
nop
add
mov
add
in
sbb
rolb
push
xchg
mov
sbb
pop
out
push
dec
sbb
add
xor
testb
jp
mov
lret
mov
int
les
mov
add
js
mov
add
mov
data16
mov
mov
mov
add
lock
add
add
xchg
fnsave
repz
push
add
add
inc
add
lock
push
pop
mov
inc
fdivrs
add
add
jae
add
add
mov
sub
mov
cmp
mov
out
jecxz
jns
add
icebp
mov
xchg
xlat
mov
mov
sub
add
cmpsb
add
stc
stc
jl
dec
xchg
pop
jo
jb
addb
push
sbb
inc
add
iret
pop
aad
add
add
cld
xchg
nop
add
testb
outsb
icebp
out
push
push
add
mov
add
xlat
lcall
and
mov
or
aas
daa
mov
loop
sub
or
pop
jns
pop
lret
xchg
rolb
jb
and
add
das
arpl
add
mov
iret
xchg
push
jl
addb
inc
inc
add
inc
lret
lea
std
xchg
add
fdivrs
ss
int
adc
push
add
icebp
cmp
adc
add
and
mov
jp
scas
fidivrl
fisubrs
icebp
mov
imul
or
je
dec
dec
dec
inc
add
mov
or
test
js
loop
mov
jo
mov
pop
cmp
rolb
fnsave
fistl
insb
leave
fldenv
add
test
add
add
add
aad
pop
or
mov
xor
lahf
jne
gs
push
add
in
mov
sbb
jbe
jmp
xchg
out
xor
add
add
add
add
inc
testb
add
iret
sub
cmp
popf
cmp
les
xor
or
daa
popa
push
add
scas
lods
cmp
or
stos
sbb
jo
out
dec
mov
xorl
test
add
adc
lea
lock
mov
add
mov
add
mov
adc
fsubs
add
add
mov
dec
add
mov
mov
xchg
jbe
insl
out
mov
and
add
dec
arpl
mov
dec
adc
and
mov
mov
and
mov
mov
rolb
mov
add
scas
mov
mov
add
pop
cmp
ds
fcoms
add
mov
addb
and
mov
repnz
add
cmp
test
cmp
mov
xor
jo
mov
add
mov
add
out
jl
add
and
rcr
aaa
sbb
cli
movsb
add
add
add
push
add
imul
lret
daa
jnp
add
dec
adc
mov
pop
addb
add
add
push
jno
add
xor
adc
push
add
loope
add
xchg
jns,pn
add
pop
adcl
add
pop
imul
in
fimuls
mov
insl
pop
inc
add
xchg
mov
lods
and
rcll
add
leave
jecxz
mov
cmp
add
or
rolb
aad
xor
lret
add
push
lods
or
add
add
mov
mov
mov
dec
add
dec
mov
fwait
add
arpl
scas
mov
sbb
mov
lock
subl
rolb
jmp
cwtl
adc
test
add
out
mov
bound
mov
or
add
jo
jnp
add
xchg
add
cmpl
add
add
jbe
xchg
mov
add
mov
fildl
add
mov
int3
stos
jo
dec
xor
xchg
mov
add
fwait
adc
add
and
mov
add
into
push
add
add
ljmp
add
mov
add
outsb
mov
add
add
mov
inc
add
fcoms
ret
inc
add
cmpsb
add
mov
mov
sub
je
jle
movl
dec
movsl
ficoml
into
mov
add
popa
sbb
adc
mov
add
mov
addl
cmp
add
add
mov
and
pop
xchg
aad
sbb
lds
or
add
popf
jecxz
hlt
add
sti
imul
leave
mov
add
repnz
bound
mov
sti
frstor
sbb
add
add
inc
test
mov
aaa
xchg
add
add
adc
out
add
mov
loop
mov
inc
add
add
push
add
mov
dec
mov
add
add
and
mov
mov
fisubrs
xchg
mov
jle
add
imull
push
cmc
sub
xchg
add
icebp
mov
inc
add
fadds
mov
fld
add
mov
enter
addb
fucomip
jge,pt
add
add
push
add
repnz
jle
or
xor
mov
xlat
pop
xor
clc
cmp
or
lock
add
int
das
xchg
add
bound
mov
add
orl
xchg
push
add
mov
push
sub
cld
cmpl
add
aaa
aam
lcall
cwtl
jae
xchg
add
xchg
add
mov
cmp
add
mov
pop
aad
sbb
adc
fisttpll
scas
popa
lds
push
outsl
inc
xchg
dec
jb
jnp
faddl
jecxz
push
mov
add
add
aaa
mov
sbb
add
add
add
add
imul
xor
imul
add
adc
loopne
sti
sti
xchg
add
add
lock
imul
lret
data16
into
or
add
pushl
add
xor
scas
leave
das
push
add
mov
and
jae
xchg
add
add
dec
in
loop
dec
adc
cmp
clc
je
addb
add
adc
jno
add
imul
push
push
or
jo
fwait
adc
add
add
cmpsl
fisubrs
sub
test
add
subl
add
push
icebp
mov
lret
sub
pop
push
add
out
js
add
je
pop
jbe
stos
in
ret
fwait
cmp
push
add
popa
pop
in
and
stc
xlat
int
mov
dec
pop
bound
mov
inc
add
add
mov
jecxz
add
nop
add
cmp
loop
int
add
lds
in
add
cmp
add
and
mov
add
rolb
flds
cmpsb
add
add
add
add
aaa
dec
rolb
fildl
jb
or
sub
dec
jmp
pop
jbe
ficomps
xor
add
ljmp
mov
ret
add
mov
and
xor
add
clc
repnz
cs
ja
add
xchg
add
adc
sahf
mov
dec
cmpsl
mov
testb
loop
sbb
add
rcll
filds
add
adc
mov
clc
mov
std
jno
mov
adc
addb
lret
pop
movb
add
sbb
sbb
add
add
mov
mov
movsl
xchg
xchg
into
test
jns
mov
sub
sub
add
nop
add
inc
adc
fwait
xor
add
pop
test
add
jmp
std
lahf
add
mov
sbb
movlps
add
mov
sub
mov
gs
mov
test
add
add
rolb
sbb
adc
pop
pop
or
scas
das
jge
mov
jle
add
pushf
adc
sub
daa
fwait
daa
sbb
add
jg
add
mov
pop
adc
add
bound
mov
scas
sti
stc
or
add
mov
add
cmp
iret
aam
jns
add
sub
pop
mov
fucom
add
mov
mov
addb
mov
sub
addb
jo
sub
add
divl
out
outsb
mov
xor
imul
mov
jg
cmp
int3
das
rep
mov
pop
adc
push
fmul
loopne
cmc
or
xlat
cmpsl
inc
rolb
push
add
add
pop
out
cmpsl
mov
dec
repnz
movsl
into
inc
mov
movb
rcl
aas
mov
add
cmp
loop
les
mov
adc
add
add
push
repnz
rcl
xchg
test
inc
or
in
shll
add
add
dec
sti
adc
add
add
add
aam
enter
mov
xchg
jmp
in
cmp
and
mov
das
and
mov
add
lock
cmpsb
add
add
mov
add
insb
rolb
xchg
add
add
add
lods
stos
mov
xor
frstor
mov
add
mov
add
xor
add
clc
cltd
sbb
add
mov
mov
addr16
add
jl
add
rolb
dec
aas
pop
in
add
dec
push
add
sub
lea
clc
sbb
roll
icebp
sti
or
sub
stc
lock
fcoml
lea
xor
out
sub
add
hlt
add
push
add
add
stos
shll
pop
out
cli
mov
cmp
mov
push
add
loope
add
add
xorl
movb
add
mov
xchg
sbb
insl
jmp
sbb
loop
pop
out
or
mov
mov
add
mov
add
pop
hlt
add
je
popa
jmp
ja
or
push
mov
xchg
jp
cmpsb
add
sbb
ljmp
mov
les
pop
mov
cmp
ds
add
mov
and
mov
add
test
add
xchg
cmpsl
pop
sti
pop
mov
pop
xchg
push
add
add
dec
rcll
mov
cmp
adc
push
inc
hlt
add
add
xlat
mov
add
mov
mov
std
out
inc
push
adc
std
adc
push
push
add
xchg
imul
add
ja
mov
mov
cmpsl
dec
add
rolb
aas
scas
int
pusha
add
add
test
imul
add
add
pushf
xchg
mov
pop
dec
lea
jmp
cmp
cmp
add
out
push
add
popf
addr16
xchg
rolb
lock
mov
insl
out
add
push
daa
xchg
xor
icebp
jae,pt
add
pop
arpl
add
add
lret
add
lret
bound
mov
mov
mov
and
adc
cmp
mov
int
in
loope
mov
add
lret
rolb
or
jl
and
clc
mov
add
data16
add
add
add
mov
fnsave
insb
fistps
add
sub
inc
push
add
leave
xor
xor
lahf
in
movb
add
addb
add
shl
add
add
mov
inc
mov
push
sub
inc
jne
dec
xor
ret
mov
adc
pop
pop
popa
add
cwtl
call
cmp
sbb
sub
mov
sbb
xchg
adc
add
mov
repz
add
enter
add
add
cltd
mov
and
mov
add
add
cmp
mov
imul
add
add
add
icebp
xorl
mov
xor
lods
js
pop
mov
out
or
fmulp
inc
add
je
push
add
mov
add
mov
test
push
daa
sbb
cli
cltd
aad
add
sti
push
add
imul
add
mov
scas
and
cmp
add
add
or
rolb
add
add
std
out
in
fcmovnb
add
push
pop
popa
xor
in
addb
add
loope
add
mov
add
add
or
dec
out
icebp
add
scas
mov
jns
xchg
inc
test
leave
dec
in
jp
call
insl
outsl
mov
stc
add
mov
bound
mov
mov
fldl
lock
mov
and
mov
or
stos
nop
add
add
addb
jnp
add
mov
sbb
jae
sbb
shll
add
mov
add
add
arpl
adc
mov
xorl
jns
testb
testb
add
push
add
add
mov
xor
enter
or
cmp
mov
add
mov
sub
sahf
lods
push
adc
test
sbbl
std
test
push
add
stc
pop
repnz
addb
mov
add
mov
push
add
in
dec
xchg
test
in
pusha
add
cmpsb
add
add
pop
jns
lods
xlat
xor
fimull
fidivl
cmp
dec
in
xchg
insl
jns
inc
sub
and
mov
repnz
add
push
add
xchg
or
imul
push
jmp
mov
mov
pusha
add
sbb
movb
ss
clc
inc
add
add
add
add
lret
or
add
fsubrp
rolb
add
cld
xor
pop
add
in
gs
ja
add
pop
movsl
add
pop
repz
jle
add
push
mov
add
repnz
add
sub
xchg
shrl
mov
daa
repz
adc
rolb
add
and
lods
pusha
add
sub
mov
adc
adc
jg
add
or
testb
dec
xlat
out
repz
jl
sbb
add
add
jl
jg
add
and
push
aaa
push
and
add
ret
daa
xchg
add
sub
jb
xchg
movsl
or
and
mov
xchg
add
cmp
outsb
mov
mov
lds
mov
mov
addb
jge
int
pop
push
add
add
test
add
lret
iret
add
mov
aad
add
xor
or
addb
add
sub
xor
testb
jbe
xor
mov
add
in
add
add
add
push
test
mov
add
adc
out
xchg
out
inc
xchg
fildl
lock
mov
inc
add
adc
add
adc
testb
mov
pop
or
add
rolb
add
add
add
imul
ficoml
add
std
out
jns
ja
lods
adc
cmp
iret
cli
pop
or
cmp
add
push
add
into
mov
insl
mov
testb
inc
gs
lock
mov
mov
stc
jns
add
rolb
stc
sbb
inc
sbb
add
les
add
aaa
loope
enter
and
in
cmpsl
inc
shll
jle
mov
insb
clc
xor
adc
clc
pop
ficoml
mov
jg
add
mov
pop
aam
cmp
rcrl
mov
out
stc
iret
mov
out
and
adc
and
mov
or
adc
mov
pop
icebp
test
ja
mov
cmc
aad
cmc
jbe
ret
out
mov
add
add
out
add
std
loope
idivl
mov
ljmp
pop
loopne
push
add
mov
push
add
or
pop
andl
ret
push
rolb
add
mov
in
pop
and
out
mov
ljmp
mov
add
mov
aaa
mov
jmp
add
out
mov
xor
jae
mov
fcmovbe
fwait
push
ret
cmp
ret
data16
data16
adc
mov
aad
add
mov
test
fwait
jl
cltd
in
xchg
sbb
insl
mov
sub
rolb
pop
cmp
outsl
xor
dec
fiaddl
mov
nop
add
add
mov
cltd
aad
add
sbb
pop
loope
outsb
mov
fnstcw
test
mov
shl
fcmovnu
scas
dec
pop
icebp
les
jns
push
sub
add
and
cmp
add
imul
add
out
xchg
add
or
push
add
mov
cmp
add
push
add
add
add
sub
or
add
mov
aad
pop
pop
mov
pop
addb
pushf
pop
jo
leave
rolb
es
mov
adc
inc
cltd
and
mov
add
mov
mov
mov
rolb
push
push
enter
stos
movsl
add
mov
mov
jg
movsb
add
push
addb
add
outsl
or
jle
add
add
leave
pop
gs
jge
addr16
mov
shrl
add
mov
icebp
pop
data16
imul
fwait
cmc
pop
test
or
inc
add
popf
mov
sbb
add
mov
inc
add
ficoms
sbb
add
jmp
shl
add
add
add
push
outsb
mov
dec
lea
or
add
outsb
insb
insb
mov
add
mov
add
inc
sub
out
movsb
add
mov
stc
mov
add
dec
mov
inc
add
add
inc
add
mov
add
fldcw
dec
add
mov
js
xor
test
or
out
repnz
add
test
pop
add
pop
dec
sbb
fadd
mov
add
mov
dec
addb
jecxz
and
add
inc
add
movsl
xchg
add
and
add
jecxz
add
or
xchg
xchg
addl
add
scas
sub
sbb
data16
add
mov
add
bound
mov
add
sbb
add
mov
jno
mov
loope
rolb
nop
add
testb
add
out
adc
inc
clc
add
pop
into
jbe
mov
popa
and
mov
add
add
sub
add
or
sbb
add
pusha
add
and
mov
mov
adc
dec
addb
int
arpl
movb
push
add
ljmp
cmp
test
xchg
xor
testb
xor
xchg
dec
in
mov
add
mov
dec
addb
pop
iret
mov
mov
xchg
add
jnp
lahf
ret
pop
sub
push
add
xchg
rolb
mov
scas
loopne
sub
xor
inc
ljmp
add
inc
add
add
add
xlat
and
mov
in
cmp
addr16
dec
jg
add
movb
gs
xor
scas
cmc
scas
and
sbb
std
stos
imull
pop
dec
push
add
fsubs
add
mov
aam
sbb
fwait
pop
push
xorl
push
add
add
mov
data16
nop
add
adc
rolb
inc
les
daa
inc
sti
xlat
or
add
jns
testl
and
out
icebp
pop
sbb
push
or
add
leave
pushl
push
xor
data16
scas
scas
cltd
in
stos
call
add
jo
ds
das
jge
outsb
dec
test
adc
movsl
jg
shrl
rolb
popf
insb
imul
mov
jmp
add
pop
mov
mov
pop
dec
or
das
push
in
push
or
scas
ljmp
inc
add
add
rolb
add
cmp
add
add
leave
mov
mov
add
rolb
add
add
add
push
add
loop
jg
ja
mov
mov
xor
rolb
aam
out
push
icebp
add
mov
add
pop
pop
lea
fiadds
cwtl
cmpsb
add
or
add
subl
push
add
fadd
mov
push
xor
mov
mov
and
jns
aaa
mov
or
jbe
icebp
xchg
mov
inc
add
pop
add
jnp,pt
add
int
add
inc
add
insb
pop
idivl
mov
into
xor
rolb
ret
xorl
cmpsl
data16
add
add
imul
mov
and
or
lods
cmp
mov
ficoms
cmp
add
add
add
fstps
and
dec
jl
pop
pop
adc
insl
rolb
adc
roll
push
pop
or
add
icebp
and
adc
hlt
add
add
outsl
sbb
rcll
lret
or
add
push
add
push
add
add
cmp
add
add
mov
and
mov
lret
cltd
mov
sbbl
or
and
loop
add
dec
movsb
add
shld
hlt
add
mov
push
test
add
fwait
adc
inc
xor
push
dec
in
cltd
push
add
cmp
movsb
add
out
dec
bsr
add
inc
cltd
and
push
gs
int
add
addb
in
add
std
push
add
pop
mov
xchg
mov
sbb
push
add
add
add
add
cs
add
jmp
shll
add
cmp
xor
sbb
scas
mov
or
inc
add
out
sbb
and
mov
dec
add
xchg
jg
add
mov
adc
mov
ljmp
pop
in
xchg
mov
mov
sar
aad
add
mov
mov
ret
inc
mov
imul
dec
mov
repz
add
testb
les
jns
cmp
rolb
push
jmp
and
ret
sbb
pop
lret
lods
inc
add
fs
add
ja
push
movsl
inc
add
add
push
rolb
add
testb
inc
ficoml
add
add
movsl
in
scas
jl
xorl
data16
mov
pop
pop
pop
movsl
or
and
rorl
in
rolb
cmp
add
add
push
mov
push
add
adc
add
out
iret
sbb
icebp
out
add
mov
add
mov
not
add
sbb
add
mov
add
addb
je
sbb
jg
scas
jo
into
mov
add
add
sbbl
leave
adc
add
push
fcmovb
add
add
mov
mov
mov
xor
mov
push
popf
xor
add
pop
iret
insl
in
sub
add
add
inc
rorl
out
xchg
xchg
ja
aad
add
add
mov
cli
jecxz
icebp
movsb
add
add
mov
add
mov
sub
mov
stc
leave
movb
sub
add
lods
add
arpl
dec
inc
add
nop
add
ret
add
int
and
add
add
loope
incb
add
scas
mov
add
xlat
add
add
add
add
inc
mov
dec
sub
add
push
add
add
add
add
add
stos
test
add
add
in
jmp
dec
pop
pop
aaa
add
mov
jge
or
arpl
and
cmp
add
cmp
sbb
add
inc
mov
popa
data16
cmp
add
add
scas
sub
add
dec
cmp
add
add
pop
dec
out
je
cwtl
adcl
push
add
dec
repz
mov
inc
jmp
push
cmp
xor
sub
jp,pt
cmpsb
add
add
add
inc
add
scas
stos
dec
ficomps
or
je
loope
movb
rolb
aad
ret
jmp
mov
push
mov
xchg
mov
lock
movl
adc
mov
sub
mov
and
hlt
add
mov
add
or
jno
add
adc
add
clc
xchg
jg
xor
or
dec
stos
xor
cwtl
and
xchg
addb
or
push
add
dec
or
add
sbb
mov
or
xchg
add
push
or
loopne
push
add
fld
add
idivl
inc
pop
iret
xchg
xor
gs
sbb
dec
dec
push
add
sub
mov
lds
inc
add
aaa
mov
push
add
mov
mov
ss
sub
inc
add
movb
std
data16
inc
add
stos
rcrl
mov
mov
repnz
leave
add
mov
test
cmp
ret
cmpsl
nop
add
arpl
mov
dec
cmp
jae
inc
leave
movb
add
mov
dec
in
xchg
add
sub
pop
dec
lret
xchg
mov
mov
add
sbb
add
add
sbb
add
into
popa
inc
clc
xchg
mov
addb
or
les
xchg
add
add
add
adc
mov
add
dec
pop
push
add
add
stc
mov
add
add
clc
stos
subl
cli
mov
add
xor
or
mov
push
nop
add
add
stc
mov
mov
in
inc
inc
add
les
jb
sub
data16
cmp
sub
add
mov
andl
xor
lcall
xor
push
sub
mov
add
enter
dec
and
mov
mov
add
push
mov
inc
add
add
stos
lret
loope
jl
adc
add
add
mov
movb
iret
insb
iret
jb
adc
push
leave
push
add
adc
call
add
mov
pop
or
add
in
mov
enter
add
fnstsw
add
loop
stos
xchg
fwait
cmp
add
add
add
shll
stos
lret
data16
add
pushf
stos
pop
clc
adc
dec
dec
sti
jnp
add
sub
add
jb
add
add
mov
inc
mov
repz
std
push
add
divl
sbb
and
mov
add
add
pop
out
inc
add
mov
mov
mov
mov
das
adc
push
add
jl
pusha
add
add
inc
add
add
ds
sbb
sub
add
inc
or
push
add
jmp
xor
stos
lahf
mov
jne
add
arpl
iret
sbb
push
cmp
mov
repz
ljmp
add
mov
adc
push
mov
mov
and
sbb
or
add
mov
add
mov
movsbl
xchg
mov
mov
add
add
mov
add
lahf
adc
add
push
leave
sbb
test
into
arpl
add
add
out
inc
add
add
stos
mov
add
leave
sbb
pusha
add
add
add
vpminsw
adc
lcall
sub
sbb
jae
mov
dec
iret
fsubl
mov
cmp
adc
add
and
leave
mov
add
mov
in
xlat
stos
out
fxch
sub
fnstsw
add
js
sub
xchg
rcr
mov
mov
aad
add
sahf
jecxz
movb
add
out
dec
rolb
cmp
add
or
sub
in
xor
lods
mov
mov
popa
push
add
and
stc
or
gs
mov
or
jne
or
fistpl
add
fsubs
add
setb
test
and
push
mov
loop
stos
test
cltd
orl
ret
add
xchg
add
mov
sub
mov
add
fdivrs
jns
stos
into
in
int
test
add
jbe
js
push
add
sbb
sbb
add
and
mov
fcomps
jp
xor
dec
add
add
rolb
or
mov
jb
lods
repz
repz
icebp
pushf
push
add
inc
add
add
ja
inc
add
cmp
jle
fisubs
pop
mov
das
mov
subl
jo
pushf
sbb
mov
cmp
push
add
add
scas
jb
or
mov
repnz
add
mov
dec
cmpsb
add
testb
lods
cli
inc
add
add
xchg
pushf
out
testb
add
scas
add
mov
sbb
int3
stos
jo
cmp
add
add
cmp
clc
int3
mov
mov
scas
dec
push
data16
add
cmp
test
pop
push
mov
add
aaa
mov
pushf
dec
mov
xorl
or
cmp
xchg
push
add
out
dec
mov
addb
popa
inc
dec
mov
repz
repnz
jp
jne
add
lods
pop
adc
sbb
dec
add
sahf
jbe
or
les
sbb
mov
mov
push
into
or
pop
jl
or
cmp
lcall
mov
frstor
stos
add
inc
add
push
test
or
adcl
add
push
aam
jns
add
andl
scas
inc
add
add
stos
cmp
add
inc
add
addl
add
imul
add
mov
add
add
mov
add
sub
xor
push
add
outsb
jo
lahf
dec
rcll
int
sbb
add
mov
jmp
popa
stos
push
add
mov
adc
leave
in
xor
cmp
push
add
inc
add
xchg
mov
cmpsl
fisttpl
fucomip
dec
dec
sbb
lods
xchg
jo
cmp
test
pop
mov
stc
sub
add
add
inc
add
mov
add
xchg
insb
xor
lcall
add
adc
push
add
add
xor
and
mov
adc
inc
in
sbb
add
add
add
cmp
add
mov
sti
xchg
iret
xor
xor
cwtl
jge
add
rolb
arpl
les
xchg
add
mov
lret
fstpl
out
add
movb
add
fmuls
xchg
mov
add
das
cli
add
test
into
cmc
hlt
add
adc
loope
pop
mov
popf
xchg
inc
mov
cmp
pusha
add
add
add
mov
mov
pop
lret
scas
mov
xchg
mov
push
add
out
jge
add
add
lods
pop
or
add
dec
out
daa
jle
out
mov
jl
add
inc
cli
daa
fwait
or
inc
push
add
pop
mov
int3
and
fidivs
scas
xor
rolb
and
adc
xor
lea
add
add
add
pushf
stos
fucomp
xchg
add
add
jnp
add
pop
add
dec
add
movsl
mov
add
add
push
add
dec
xor
dec
inc
add
loop
pop
dec
jno
add
add
add
inc
add
and
mov
sub
mov
cmovl
repnz
add
add
ljmp
add
add
add
xchg
test
xchg
add
add
mov
sub
and
mov
push
jo
mov
add
add
das
loope
jp
pushf
jno
add
add
mov
cmp
pushf
arpl
add
in
inc
add
push
je
or
add
mov
mov
add
adc
add
ljmp
add
dec
orl
xchg
add
add
addb
inc
add
add
scas
sbb
add
add
add
decl
sub
ds
mov
ret
lods
push
push
imul
addr16
jne
stc
cmpsl
jmp
xor
mov
aad
xchg
add
adc
push
in
pop
inc
add
aad
add
cli
cmpsb
add
addr16
gs
adc
das
in
add
addr16
fucom
add
add
mov
jecxz
fwait
das
stos
dec
rolb
imul
addr16
push
sbb
xor
xchg
add
rolb
and
pop
xchg
add
mov
push
add
inc
add
sbb
sub
loopne
fst
add
mov
add
fisttpl
mov
add
add
fstl
add
adc
pushf
mov
fstpt
sub
xchg
je
mov
mov
cld
mov
add
add
add
les
enter
mov
adc
lods
push
add
adc
nop
add
add
mov
loope
xor
ret
mov
out
cs
in
sbb
add
rep
ret
add
pop
hlt
add
mov
add
pop
addb
add
add
xchg
xlat
dec
or
arpl
add
enter
push
add
push
pop
out
loopne
inc
add
popa
mov
add
add
adc
add
mov
mov
cmp
sub
add
ret
add
int
add
mov
xchg
add
xlat
cmp
or
loope
pop
mov
out
ret
mov
stos
inc
add
sbb
loope
outsl
lret
push
or
sub
ss
push
addb
mul
icebp
mov
jmp
mov
scas
add
dec
das
cmpsb
add
sub
add
xlat
xchg
add
jne
fisttpll
insl
sbb
lea
aam
add
mov
inc
fisubrl
add
into
pop
ret
pop
xlat
inc
imul
add
add
jmp
xchg
add
add
mov
pop
mov
movb
addr16
sub
add
push
add
add
sahf
in
add
add
out
lods
jno
add
sub
inc
add
add
add
loop
shr
push
add
lahf
clc
mov
repz
fisttpl
ret
out
jnp
add
add
test
mov
lret
dec
jg
add
outsl
out
or
add
mov
scas
add
int
imul
sbb
add
pop
aam
daa
push
js
mov
add
push
mov
fldl
and
mov
add
lods
dec
rcr
bndldx
dec
mov
mov
pushf
stc
mov
pop
sbb
mov
add
add
adc
dec
mov
and
mov
inc
add
cmpsb
add
xchg
les
add
push
addb
add
mov
inc
jmp
das
iret
add
add
xchg
or
ret
repz
mov
clc
loop
adc
lcall
mov
add
add
stc
test
or
mov
add
in
iret
and
inc
lds
pop
lods
xchg
mov
pop
cmpsl
jmp
and
cld
gs
cmp
dec
push
and
test
add
add
add
or
add
test
add
add
jle
stos
in
add
dec
cmc
mov
cmp
mov
add
sub
pop
je
push
xlat
add
add
add
mov
or
add
add
mov
aad
add
add
add
mov
fadds
mov
push
imul
mov
add
xchg
fcomps
les
cmp
shll
mov
clc
sub
lock
xchg
ret
or
adc
in
push
add
add
add
daa
mov
pushf
insb
leave
or
add
add
mov
out
add
add
xor
fistpl
add
add
add
aam
or
out
add
sbb
add
adc
out
repz
mov
push
jp
rolb
push
add
in
xchg
popf
push
add
push
pop
addr16
fcomip
cmp
loope
xor
int3
lcall
add
in
dec
sbb
add
lods
cli
add
in
cwtl
and
or
mov
and
stos
mov
pop
pop
mov
mov
sub
je
test
les
sbb
add
add
adc
fcoml
add
rolb
add
inc
dec
lds
and
outsl
mov
add
loope
das
daa
out
and
add
jp
jecxz
out
sahf
pop
sub
add
add
cmc
mov
add
pop
aas
adc
push
add
adc
addr16
push
add
add
add
and
mov
out
mov
push
out
jg
add
add
bound
mov
add
aam
insb
sub
out
pusha
add
clc
lods
mov
pop
fnsave
add
sbb
jno
add
add
mov
mov
add
mov
cmpl
add
add
xor
in
xor
sarl
mov
sub
aas
repz
add
mov
add
pop
mov
in
adc
add
dec
jns
add
add
mov
mov
ficompl
xchg
arpl
mov
inc
add
add
frstor
scas
mov
or
xor
popf
fdivrp
mov
addb
add
mov
jg
add
dec
or
pop
jmp
xchg
add
cmp
cwtl
cmp
fstl
int
cmp
add
andl
sub
sbb
add
int3
out
jae
lret
inc
lock
js
jo
out
das
push
add
add
add
mov
or
inc
in
add
sub
add
in
arpl
mov
sub
add
add
bound
mov
aas
lods
shl
add
in
and
mov
add
into
xchg
imul
sbb
dec
insl
mov
cmpsl
dec
jb
add
aam
sub
add
or
les
pop
cmp
lea
add
rolb
fidivl
jecxz
mov
inc
add
icebp
mov
das
pop
in
in
fwait
push
add
pop
rolb
sbb
cld
or
add
mov
movsl
dec
movsb
add
add
rolb
jl
mov
dec
push
add
mov
add
pop
mov
stos
jbe
lcall
sbb
lods
add
xor
inc
sub
iret
add
xor
adc
int3
les
inc
mov
data16
decl
jp
push
loopne
daa
aam
add
push
popf
mov
stos
mov
add
add
add
mov
addb
mov
mov
add
push
add
inc
imul
enter
push
rol
sahf
cmp
hlt
add
add
popf
inc
add
add
mov
mov
je
fldcw
out
mov
mov
jge
mov
add
or
add
test
mov
fidivrl
add
mov
add
jne
cltd
mov
add
pusha
add
jo
std
pop
ret
xchg
cmp
xchg
add
loop
dec
mov
xor
xor
mov
xchg
xor
add
mov
nop
add
aam
sub
das
sbb
add
leave
and
add
cltd
xchg
and
mov
add
cmc
or
xchg
lret
outsb
mov
add
dec
dec
movb
movzbl
cld
push
inc
add
stos
dec
lods
and
inc
popf
lahf
sbb
vpunpckhqdq
ret
repz
addb
mov
add
add
jne
add
sbb
aad
add
cmp
add
call
add
mov
and
push
add
addr16
arpl
xchg
fwait
pop
sbb
in
outsb
xchg
xchg
add
pop
add
lock
dec
fwait
nop
add
mov
add
mov
add
mov
add
mov
sbb
add
hlt
add
repnz
add
ficomps
les
popf
push
aad
xchg
add
or
add
sub
mov
js
les
test
lret
ret
call
add
jecxz
jl
add
pop
jno
push
add
loop
data16
in
or
aad
pop
and
mov
addb
xchg
xchg
out
and
sbb
lret
addr16
adc
add
add
add
sub
xor
arpl
add
mov
cwtl
fiadds
cltd
mov
shrl
xchg
add
pop
in
push
add
cwtl
arpl
int3
into
mov
and
add
adc
add
mov
sbb
cmp
ss
loopne
push
add
in
push
popa
out
sub
push
add
int
movsl
hlt
add
push
add
add
pop
lcall
jp
add
push
rolb
sub
lods
xchg
add
jo
sbb
push
popf
xchg
add
inc
add
add
rolb
lcall
dec
push
idivl
fabs
sbb
adc
iret
out
mov
outsb
mov
leave
add
jg
add
cmpsl
add
or
sti
dec
jmp
loopne
or
add
add
shl
and
inc
add
add
add
push
add
mov
out
jb
test
mov
aad
and
mov
add
dec
adcl
sahf
sub
jge
mov
add
mov
je
add
add
and
xchg
stc
jnp
adc
enter
add
inc
les
mov
add
pusha
add
xor
mov
inc
add
pop
pop
xchg
add
add
push
inc
add
pop
ret
ja
add
add
mov
inc
and
mov
sbbl
into
or
fildll
bound
mov
or
add
add
test
xor
fimull
pop
sbb
add
sti
jg
add
adc
cmc
or
add
push
add
cmpsb
add
mov
in
enter
dec
sbb
jns
and
mov
and
jmp
add
add
mov
add
cwtl
addr16
pop
dec
pop
imul
add
dec
shll
mov
jns
fwait
xchg
test
cld
test
push
popa
mov
bound
mov
add
add
jl
into
xor
leave
xchg
dec
push
cwtl
das
mov
add
jge
fmuls
xorl
add
lea
push
jnp
dec
int
aam
fstps
into
dec
ds
pusha
add
pop
add
xchg
add
adc
or
add
cld
add
add
add
testb
stos
or
data16
je
pusha
add
pushf
ja
add
addb
pop
xchg
add
add
add
test
movsl
mov
ret
xor
mov
orl
cmp
dec
inc
add
in
jae
pusha
add
add
lea
cmp
or
add
mov
es
test
add
outsl
ljmp
xchg
rolb
dec
loope
add
fsubr
add
shll
jb
mov
mov
dec
xchg
add
add
pop
sub
jmp
cwtl
sbb
xchg
int
add
xchg
jp
outsb
rolb
mov
lret
add
xor
add
sub
add
add
sbb
add
shll
pusha
add
in
sbb
mov
stos
movsb
add
mov
dec
jmp
outsb
nop
add
aad
dec
faddp
add
rolb
pop
or
mov
add
add
mov
add
add
xchg
add
bound
mov
cld
adc
test
into
clc
fstps
repnz
jge
add
insb
lret
sbb
test
or
sbb
add
in
push
add
add
add
pop
sbb
pop
add
mov
mov
mov
lods
xor
mov
sti
xchg
add
add
or
add
and
add
ret
jl
rolb
sbb
xchg
cmp
mov
inc
inc
adc
add
bound
mov
lock
push
in
mov
add
mov
aam
rolb
jecxz
push
movsl
repnz
rolb
mov
jecxz
jbe
hlt
add
add
sbb
sbb
in
popa
jmp
fs
add
mov
mov
lret
jp
dec
hlt
add
adc
in
and
add
data16
push
adc
inc
test
add
or
add
mov
sti
sbb
movb
add
pop
or
aas
ror
fwait
xor
mov
add
add
mov
insl
mov
sub
inc
cmpsl
jl
xchg
add
pop
xor
add
add
gs
fistl
movaps
add
and
mov
pop
rolb
lret
adc
frstor
add
out
and
insb
mov
mov
add
and
mov
mov
in
or
movsl
push
add
stos
push
add
rolb
push
pop
adc
sahf
cltd
or
pop
cmp
push
add
or
sub
loopne
popf
popf
cmp
add
xchg
push
add
push
add
add
push
push
jo
out
add
pop
lea
pop
mov
test
cli
sbbl
inc
add
inc
dec
loope
xchg
add
pop
xchg
data16
add
testb
jo
mov
adc
wbinvd
cs
mov
push
cwtl
or
add
or
lcall
inc
add
adc
leave
imul
sarl
adc
rolb
push
mov
and
mov
push
add
add
add
add
xchg
imul
mov
lcall
add
push
add
sarl
mov
pop
int
add
dec
mov
sti
mov
add
in
das
fdivl
mov
shll
sub
adc
sbb
in
adc
add
mov
jne
pop
pop
sets
push
add
daa
adc
add
add
jbe
cmpsl
in
orl
mov
adc
add
xor
or
xlat
or
clc
mov
add
push
pop
xor
add
add
in
dec
gs
add
add
mov
sbb
add
add
mov
mov
pop
adc
jns
data16
call
test
push
mov
push
or
sub
jnp
lock
mov
jbe
cmovp
in
std
lcall
add
mov
add
mov
push
add
subl
mov
add
gs
add
lcall
loop
xchg
add
xlat
ja
push
mov
push
add
mov
mov
cli
fdivrs
insl
mov
aam
adc
scas
ret
add
out
add
arpl
add
sub
xlat
test
push
add
mov
scas
testb
add
add
add
add
outsb
and
mov
add
inc
add
add
sbb
add
add
push
and
mov
add
add
mov
add
add
js
sub
add
add
lret
cmp
fadd
add
xchg
inc
add
mov
mov
add
shll
sub
add
repnz
dec
jne
aaa
pushf
aad
mov
add
jnp
push
lahf
cmc
xlat
jg
add
mov
mov
mov
jg
sub
and
pop
stc
add
mov
add
xchg
mov
add
xchg
add
jb
sarl
or
lcall
sub
add
call
loopne
std
aam
mov
fistl
pop
add
sub
imul
xor
lahf
sub
add
add
pusha
add
xor
add
mov
add
movswl
and
add
fadds
add
mov
out
add
mov
movb
jmp
bound
mov
dec
insl
lds
ret
in
ljmp
aam
addb
add
mov
push
add
add
inc
add
or
cmp
dec
and
mov
push
test
out
add
icebp
addb
pop
mov
jg
jmp
jg
xor
add
mov
add
mov
rolb
mov
and
mov
add
add
add
xor
ja
js
bound
mov
fistpl
fwait
data16
pop
xchg
adc
addb
shr
push
or
bound
mov
flds
add
out
sbb
mov
imull
add
js
add
xchg
add
inc
add
daa
mov
add
add
add
add
mov
mov
push
add
add
repnz
sub
add
fnstsw
mov
aaa
sbb
leave
test
add
enter
jns
add
int
fnstcw
sbb
add
cld
test
inc
in
add
pop
and
movb
dec
sbb
xor
lods
mov
adc
add
mov
test
ret
lahf
xor
jne
outsb
or
js
add
mov
jg
and
adc
dec
addb
or
and
mov
add
add
mov
std
testb
addb
repz
add
cmp
mov
movb
add
xor
mov
mov
stos
testb
add
add
mov
xchg
pop
lret
sub
cmpsb
add
or
ja
test
add
xor
inc
add
cmp
add
add
rcrl
and
mov
inc
add
add
mov
movsl
pop
ret
mov
push
in
fisubs
push
aaa
pop
mov
ds
cltd
subl
add
test
sbb
popa
mov
add
mov
pop
push
xchg
int3
fs
lar
mov
add
mov
mov
lods
jne
sub
fwait
ljmp
xor
ret
xchg
add
scas
xchg
out
inc
sbb
add
sahf
gs
call
mov
add
push
inc
cli
push
add
add
into
pop
inc
add
lahf
xchg
mov
cmpsb
add
dec
dec
add
mov
loopne
adc
cwtl
enter
imul
add
add
add
add
hlt
add
add
addb
add
add
xchg
rolb
pop
mov
jp
je
push
add
add
sbb
mov
add
loopne
addb
fsts
or
ds
mov
add
aad
add
xchg
cs
es
testb
add
add
add
and
sub
mov
xorl
add
jg
and
jns
add
mov
sub
xor
xchg
add
add
mov
sbb
ja
add
and
mov
addb
add
popa
pusha
add
push
pop
das
pop
rolb
fwait
into
out
pusha
add
and
or
out
dec
xchg
pusha
add
xchg
jecxz
adc
lret
mov
daa
mov
je
inc
mov
pop
adc
add
add
sub
hlt
add
clc
push
add
insl
repz
or
xchg
add
add
add
adc
pusha
add
add
mov
arpl
pop
orl
les
popa
sahf
pushf
mov
sbb
add
add
nop
add
xor
sbbl
inc
lcall
mov
lcall
add
lods
jmp
fdivrl
add
and
daa
dec
lcall
or
stos
inc
add
std
pushf
sahf
push
pop
icebp
jo
push
add
stc
popf
cwtl
jno
bound
mov
add
test
lret
data16
pop
lds
add
xchg
push
pop
fisttpl
jl
add
fwait
cmpsb
add
outsb
out
mov
std
fisttpl
pop
sahf
jmp
outsb
or
int3
stos
jg
imul
loopne
into
jle,pt
xchg
call
add
je
mov
or
imul
mov
and
mov
inc
add
popf
popa
les
cmp
mov
roll
mov
add
mov
jecxz
mov
testb
sahf
add
adc
add
fsubs
jb
xor
cmc
or
add
add
cmp
sahf
incl
enter
dec
nop
add
dec
inc
mov
or
add
movsl
clc
in
mov
cmp
cmc
addl
scas
test
out
lahf
mov
mov
mov
ret
xchg
je
ja
leave
out
hlt
add
fcmovnb
into
scas
jbe
xor
pop
pop
jmp
jnp
adc
dec
mov
add
insl
aam
mov
push
pop
xchg
add
aam
scas
les
test
pop
popf
gs
add
add
mov
push
add
or
lret
add
add
add
mov
fcomip
add
add
cwtl
sarl
add
fistpll
jo
pushf
jb
xchg
add
mov
add
test
int3
test
add
add
or
pop
outsb
pop
ss
fisttpl
add
jle
sub
cmp
add
fwait
mov
or
jmp
add
add
add
repz
mov
ffreep
mov
popa
adc
arpl
push
add
sub
and
movsl
iret
mov
push
add
hlt
add
sub
inc
or
add
fcom
lret
jge
mov
mov
lea
cmp
push
add
scas
add
push
add
add
hlt
add
dec
add
out
es
dec
nop
add
sbb
push
add
mov
sub
add
add
add
add
loop
movsl
ljmp
gs
ret
pop
cmc
pop
loop
mov
jno
add
mov
add
mov
mov
add
lahf
das
add
ljmp
add
add
dec
or
push
in
cwtl
pop
push
add
mov
add
sbb
cli
fwait
add
mov
mov
pop
mov
add
outsb
add
push
in
add
xchg
add
cmpsl
pop
testb
test
jle
jae
add
add
add
add
add
cmp
dec
aas
mov
out
pop
int
add
inc
add
fsubp
add
add
rcll
stc
push
add
add
repz
stos
arpl
add
xchg
add
loope
cmp
das
jmp
hlt
add
add
add
mov
xlat
sub
push
mov
int
add
add
add
add
addr16
cmp
sbb
add
dec
je
inc
add
rcl
add
add
int
iret
and
lret
ficomps
cld
arpl
insb
mov
add
loop
mov
xor
imul
xor
pop
cmp
mov
push
add
jge
dec
mov
dec
push
xor
insl
movsl
fidivl
push
sub
movsb
add
add
movsl
repz
int
add
add
dec
dec
jl
add
lret
xor
add
stos
js
add
lfs
xchg
insb
xor
add
lods
sti
daa
rolb
faddl
fsub
add
add
jmp
add
mov
xchg
fcomp
clc
xchg
and
mov
pushf
push
movb
add
add
fwait
jbe
mov
add
mov
pop
or
nop
add
add
outsb
outsl
push
jecxz
sti
test
pop
testb
lds
mov
stc
loope
inc
test
pop
push
add
xchg
mov
add
out
cltd
pop
add
sahf
das
push
add
pop
es
subl
movsl
dec
mov
fstp
mov
add
add
repnz
push
ret
out
rolb
jge
or
iret
push
add
add
or
mov
and
add
in
clc
add
add
rolb
inc
pusha
add
sbb
or
les
sbb
and
test
sub
daa
cmp
jl
mov
xchg
repz
popf
xor
and
mov
inc
add
add
adc
add
stos
fstps
push
adc
add
add
sar
sahf
sub
sub
outsl
push
add
sub
popa
das
stos
pop
insl
loopne
xor
add
xor
fwait
pop
mov
dec
mov
addr16
push
xchg
mov
icebp
xchg
add
add
addb
in
inc
push
out
daa
push
jmp
inc
pusha
add
add
scas
and
mov
inc
pusha
add
jno
test
jmp
push
add
mov
xchg
add
mov
mov
in
cld
mov
xlat
and
mov
add
push
add
add
jge
fstpl
add
mov
add
add
push
dec
xchg
add
test
adc
jae
bound
mov
or
addb
insl
cmp
add
outsb
push
inc
fstpt
add
movsl
dec
adc
mov
aad
cmp
add
mov
inc
add
daa
mov
xchg
aam
out
pop
insb
aam
pushf
ja
roll
add
inc
repnz
inc
out
jg
xor
cmpsb
add
movsl
jb
popa
mov
mov
idivl
xor
add
mov
int3
adc
in
and
mov
fidivrl
add
and
mov
outsl
xchg
mov
ficoml
add
add
js
cmpsl
dec
pop
je
jp
aas
and
rolb
sub
xchg
xchg
add
pusha
add
cmp
push
add
add
add
pop
adc
fistpll
pop
pop
fisubrl
out
sub
sub
inc
and
mov
lods
pop
xor
mov
mov
hlt
add
add
std
nop
add
add
push
add
mov
pushf
add
add
pop
lcall
add
lods
xchg
add
add
and
xlat
cmp
cmc
addr16
lahf
and
add
adc
xorl
sub
mov
mov
add
jns
icebp
cmpsl
cmp
jg
lea
cwtl
aam
fchs
add
dec
in
mov
mov
add
insl
xchg
sbb
loope
addr16
in
fadds
mov
add
repnz
pop
add
mov
jbe
loop
rcll
dec
or
add
not
add
push
add
add
cmp
pop
enter
popf
sbb
xchg
add
cmp
arpl
xchg
xlat
or
xchg
add
cmp
mov
xchg
cld
push
add
mov
mov
dec
fidivs
xchg
insl
inc
into
mov
loop
lods
test
xlat
adc
add
in
add
mov
push
add
dec
add
add
mov
adc
addb
add
movsb
add
add
addb
ljmp
ss
inc
add
data16
add
add
sahf
inc
add
sbb
clc
lahf
lret
add
fidivrl
js
arpl
fdivrs
add
inc
daa
clc
fmull
add
addb
add
add
add
add
jno
std
or
icebp
cmp
in
test
and
mov
add
mov
mov
add
add
add
add
push
add
lcall
add
scas
xchg
movsl
pop
and
mov
cld
mov
hlt
add
imul
add
add
shll
pop
in
cmpsl
push
shl
insl
nop
add
es
add
pop
mov
fadd
add
add
add
jmp
pop
rolb
xlat
ret
jecxz
inc
adc
mov
scas
mov
cmp
add
js
push
add
cmp
add
mov
cmp
gs
add
add
das
dec
xchg
add
add
lret
or
pop
add
pop
sbb
mov
or
jecxz
xchg
add
push
xor
out
test
add
cmp
rolb
jnp
stos
cs
insb
cmp
mov
sbb
jecxz
push
pop
xorl
mov
mov
loopne
xchg
js
add
adc
mov
into
lods
xchg
or
cmp
pop
mov
add
movb
subl
add
ret
popf
incb
add
add
mov
add
aad
mov
cld
fistpl
call
add
ror
pop
sbb
mov
add
cmp
test
dec
add
mov
push
add
imul
add
push
add
std
outsl
xchg
push
add
add
sub
iret
and
mov
lahf
xchg
add
xor
cmp
jle
mov
mov
mov
pop
fstl
mov
movsl
in
or
sti
and
ret
imul
add
add
dec
lea
add
add
jg
lret
jp
add
lret
add
add
mov
pop
cmpsl
ja
xchg
outsb
jmp
and
aaa
mov
aam
pop
insb
imul
fcmovbe
enter
xor
pop
lret
daa
addr16
add
push
mov
fstp
sbb
std
mov
jl
cld
cmp
pop
cmp
add
add
mov
add
pushf
pop
rolb
add
cmp
dec
shll
mov
cmc
pop
std
in
js
in
pop
ret
movb
pop
stos
pop
mov
test
cmpsb
add
push
sahf
arpl
sbb
popf
lods
sub
fldl
add
dec
movsl
mov
pop
lods
pop
add
test
mov
das
lcall
and
add
add
adc
add
adc
xor
outsl
jmp
ret
fdivs
add
pop
xchg
add
add
lods
xor
mov
add
add
movsl
add
mov
movb
push
add
add
scas
add
scas
add
mov
lret
dec
xchg
clc
push
add
mov
add
nop
add
lahf
sarl
add
lods
fsubrs
xor
fnstcw
xlat
mov
cld
sbb
push
add
cmp
add
add
inc
je
out
mov
add
sahf
fsubl
add
jmp
add
mov
or
insl
aam
xchg
fnstenv
adc
jge
aad
imul
add
mov
push
add
test
add
dec
cmp
mov
add
lds
add
inc
dec
mov
in
out
sbb
push
add
xchg
add
add
add
outsl
jmp
xlat
addb
pop
mov
jecxz
add
and
mov
cmc
mov
pop
jo
mov
add
adc
add
mov
add
xchg
inc
mov
lcall
add
mov
add
bound
mov
pushf
sbb
add
in
push
and
pop
shll
add
add
add
push
add
add
add
add
rolb
add
addb
xchg
mov
add
add
mov
add
leave
mov
mov
pop
pop
xchg
add
clc
inc
subl
or
ror
sbb
mov
fistl
add
sub
pusha
add
ret
sub
push
mov
add
sub
pop
fstpt
jg
add
loope
std
mov
inc
add
dec
jmp
add
call
out
push
mov
push
je
dec
movb
lds
lret
sub
clc
dec
dec
dec
inc
movb
outsb
mov
push
gs
dec
test
add
stos
xor
push
jmp
dec
rolb
push
jmp
std
or
movsl
or
std
out
ja
nop
add
jge
cmp
and
mov
add
inc
ret
popf
xchg
add
test
add
push
add
ja
cmc
lock
add
sub
add
add
add
dec
mov
mov
popf
pop
push
add
or
js
add
add
and
mov
add
lods
jle
mov
loopne,pt
aaa
roll
add
push
add
outsb
xorl
stos
addb
add
mov
adc
xor
jp
add
add
mov
adc
add
rolb
testb
fisubrl
aas
mov
jb
int3
addb
fsubp
loopne
mov
add
movb
add
scas
faddl
sub
sarl
mov
inc
and
mov
sbb
add
sbb
pushf
ret
pop
lahf
popa
push
xor
das
pop
jbe
dec
outsb
sub
or
xchg
add
add
lea
add
cmp
adc
mov
add
add
mov
add
add
add
mov
data16
sub
jle
or
xchg
push
aas
mov
or
les
lahf
pop
pop
jge
jg
arpl
jecxz
nop
add
pop
sub
sbb
imul
push
add
incb
add
xchg
movsl
add
mov
add
xchg
add
loope
add
mov
ret
xchg
enter
mov
xlat
scas
faddp
addb
add
enter
nop
add
fldt
push
add
add
fadd
jp
add
mov
aad
add
das
inc
add
adc
jnp
add
add
dec
fisttpll
lcall
ret
or
add
add
call
inc
int3
iret
addr16
sbb
out
jg
and
or
jb
std
popl
fistpll
or
add
add
add
inc
mov
adc
loop
imul
or
and
insb
add
mov
inc
add
addr16
xchg
mov
notl
or
dec
jg
add
add
addr16
add
add
iret
lret
lds
addb
add
and
xor
das
xchg
add
add
pminub
dec
rolb
shl
iret
pop
lds
jo
sti
or
xor
enter
loopne
mov
add
pop
or
or
mov
daa
rolb
push
add
addb
imul
add
divl
push
add
add
jp
sti
adc
mov
add
pop
stc
pop
xor
mov
inc
jge
xor
mov
loop
test
mov
mov
incb
xlat
mov
sub
add
add
pusha
add
push
arpl
cwtl
pop
mov
add
popa
and
dec
xchg
add
adc
enter
dec
push
add
add
mov
test
add
sub
mov
jl
add
sbb
push
mov
add
or
add
inc
add
add
fmull
push
add
sbb
push
add
mov
dec
fdivl
jmp
cltd
cmp
mov
inc
dec
sub
lea
jo
pop
mov
adc
data16
sbb
add
and
mov
int3
sub
cs
out
add
mov
sbb
add
add
mov
mov
mov
or
adc
dec
push
add
lock
mov
jp
adc
xchg
addb
mov
xchg
push
add
mov
or
addb
mov
add
mov
add
scas
inc
add
pop
bound
mov
in
push
add
add
add
mov
mov
inc
or
and
into
and
mov
loopne
fsubr
pandn
stos
add
mov
stos
loope
add
adc
gs
mov
fwait
xor
jbe
or
insl
add
mov
lahf
or
lahf
dec
sub
sbb
add
push
add
lret
add
into
scas
sbb
add
testl
dec
pop
jnp
testb
aas
addb
add
add
add
setge
aas
jecxz
cmc
imul
or
insb
loopne
sbb
adc
mov
fisttpll
decl
sbb
add
mov
push
adcl
xchg
scas
mov
insl
test
push
add
add
cmp
adc
out
jns
pop
pop
mov
in
jle
mov
addb
test
pop
inc
ljmp
add
add
cmp
mov
cld
mov
pushf
xchg
stc
jno
or
push
add
add
or
add
jae
mov
into
test
xchg
push
popf
mov
cmpsb
add
add
popf
jo
add
add
aam
imul
add
dec
inc
push
mov
sahf
mov
adc
pop
jmp
add
add
push
add
xor
ret
and
mov
mov
outsb
xchg
add
rolb
arpl
pusha
add
mov
cmp
mov
enter
test
arpl
ret
rolb
sub
out
add
and
mov
add
mov
add
add
add
mov
mov
stc
into
js
jbe
ds
add
xchg
xchg
adc
add
add
add
add
ret
xlat
push
out
or
add
and
mov
and
pusha
add
add
mov
add
mov
add
out
outsb
adc
mov
dec
lds
pop
addb
rorl
xchg
add
das
mov
lds
add
add
imull
xchg
and
in
pop
jl
sub
push
add
add
add
add
adc
sti
xchg
cwtl
dec
add
call
jb
cmp
cmpsb
add
xor
mov
mov
aas
push
xlat
sub
ret
rolb
rcll
add
mov
mov
add
xlat
nop
add
nop
add
cmpsl
sbb
mov
add
mov
add
mov
add
inc
add
testb
push
dec
outsb
dec
add
movb
add
fstpl
ss
xor
mov
add
mov
add
into
out
mov
dec
inc
add
cmpsl
xor
pop
repnz
add
or
cmp
xchg
add
add
mov
add
mov
adc
addl
mov
popa
xchg
add
adc
add
sub
add
mov
aaa
push
jge
push
mov
cmp
sub
jnp
jmp
add
enter
scas
fisttpll
arpl
fxch
or
jge
add
add
add
loope
or
fcmovne
int3
movsb
add
dec
sbbl
cmp
pop
mov
add
insl
mov
or
xchg
mov
stos
xchg
scas
and
fidivs
mov
or
add
push
out
scas
enter
add
push
xchg
add
add
xchg
add
repnz
pop
cmp
dec
insb
mov
add
add
movsb
add
mov
add
fdivrs
or
scas
dec
out
add
cmp
cmpl
out
enter
mov
jne
sbb
sahf
sub
outsl
jns
loope
dec
push
int
adc
pop
xor
xor
xchg
fdivrl
adc
stos
push
ret
add
add
les
cmpsl
mov
in
fistps
mov
imul
mov
ljmp
or
xor
push
add
add
add
adc
lock
add
outsl
xchg
stc
popf
cmc
movsl
add
mov
testb
and
mov
add
fdivl
jns
add
hlt
add
add
xchg
add
std
movb
fisttpll
mov
add
xchg
and
aaa
cmp
push
mov
testb
fcmovb
add
adc
add
adc
icebp
aam
dec
sbb
push
xchg
dec
les
or
add
add
cmp
adc
mov
cmp
add
hlt
add
hlt
add
mov
int3
jle
rolb
add
add
mov
out
leave
xlat
rolb
mov
cmp
iret
sbb
add
sti
jmp
add
test
adc
ja
out
push
or
add
ror
data16
jnp
add
aam
leave
fistpl
add
outsb
add
add
cwtl
jg
adc
add
mov
xor
mov
aaa
and
out
mov
inc
add
nop
add
add
dec
aam
cmpsb
add
dec
repnz
sub
popa
jge
or
sbb
bound
mov
cld
sub
push
out
clc
dec
test
xor
sub
cmpsb
add
sbb
je
shrl
or
add
add
add
ret
test
std
aad
fldt
add
xor
mov
mov
mov
add
out
pusha
add
loopne
adc
xor
xor
xchg
add
add
mov
add
pop
xchg
mov
add
lret
pop
push
add
add
mov
pop
push
xor
mov
addb
movsb
add
add
jecxz
add
mov
add
sub
adc
mov
hlt
add
ficomps
inc
dec
andl
push
add
orl
lock
pushf
rolb
lcall
add
pop
addb
sbb
add
bound
mov
jns
lcall
sub
test
or
cmp
and
xchg
sbb
inc
adc
xchg
in
ret
pusha
add
add
add
icebp
mov
add
in
add
mov
lods
data16
mov
testl
cltd
stc
rolb
lahf
rolb
pop
mov
inc
popa
inc
adc
add
add
add
and
lods
outsl
mov
lea
outsl
push
add
mull
add
fwait
and
push
add
sub
push
sbb
sub
dec
push
iret
lock
repz
mov
jecxz
add
mov
addb
sbb
in
hlt
add
sbb
sub
rolb
xchg
add
mov
popf
addb
pop
inc
jmp
xlat
cmpsb
add
lret
daa
mov
ret
add
add
data16
aad
pop
in
inc
pop
push
add
xchg
lea
shll
outsl
lcall
fcompl
nop
add
pop
adc
add
add
xor
add
out
inc
add
add
xchg
cwtl
ja
mov
add
mov
aad
pop
lea
inc
ret
push
data16
arpl
push
in
sahf
movsl
xchg
cmp
add
inc
add
adc
mov
lcall
add
movb
add
add
pop
les
or
into
pusha
add
test
loope
dec
loop
rsm
outsb
int
clc
jge
data16
imul
out
add
and
rcll
sbb
push
add
pop
jmp
int3
xor
adc
sbb
adc
insl
jge
and
add
add
cmpsl
iret
dec
push
add
add
mov
push
add
inc
add
add
pop
imul
mov
movsb
add
push
add
pop
dec
jp
ljmp
or
jo
adc
idiv
add
enter
je
adc
add
addr16
inc
jecxz
and
xorl
push
add
repnz
in
mov
add
add
mov
or
pusha
add
andl
add
rol
iret
add
push
rolb
inc
add
push
jo
cld
push
aas
mov
push
add
add
add
cmp
add
aad
pushf
loopne
pop
adc
jg
add
xlat
cmp
add
add
add
add
add
out
rcll
add
push
add
cmpsb
add
pop
jge
push
add
xchg
test
jp
pop
pushl
add
inc
clc
sub
outsl
call
nop
add
ja
inc
jne
repnz
iret
xlat
push
mov
mov
cmp
and
or
xchg
data16
fnstsw
stos
add
mov
add
outsb
and
mov
add
ja
mov
add
dec
sub
pop
sbb
add
adc
pop
lahf
inc
add
mov
push
sub
xchg
add
sbb
pop
aam
add
add
or
mov
testl
in
hlt
add
add
jle
out
nop
add
jle
pop
pop
rolb
rolb
push
add
add
mov
add
mov
or
push
adc
inc
sub
aad
ret
cli
add
or
add
mov
mov
ficoms
mov
mov
insl
lret
push
add
and
mov
dec
push
add
xchg
add
cmp
subl
mov
in
mov
xchg
or
cld
add
mov
test
inc
add
add
and
cmp
add
add
mov
movsl
sub
ret
loope
mov
mov
mov
icebp
insl
sub
inc
lods
add
add
out
jae
dec
push
add
test
lcall
data16
or
xor
cld
mov
add
mov
add
push
rolb
push
add
add
add
dec
lret
mov
pushf
and
cmp
out
loop
xor
xchg
lret
sbb
movb
jno
stc
add
mov
add
mov
sbb
add
loopne
fbld
add
add
pop
sub
lret
inc
add
add
shrl
sub
add
add
jno
aaa
mov
cmp
test
mov
rolb
add
popf
bound
mov
push
fbld
add
add
rolb
outsb
filds
adc
popf
cmp
add
add
mov
cmp
push
test
jns
imul
test
or
mov
jg
das
and
jle
add
add
add
add
pusha
add
jbe
push
add
add
add
add
addb
add
sbb
jns
add
lods
pop
jl
jno
add
addb
mov
addr16
xor
mov
add
cmp
test
adc
or
add
add
in
addb
cmp
les
outsb
push
add
add
popf
in
pop
mov
add
ret
dec
mov
addb
add
test
ret
sub
xor
xlat
pop
or
jg
out
xchg
cmp
cltd
cmc
setno
mov
outsb
daa
jae
xchg
ja
xor
mov
add
les
ljmp
sub
repnz
adc
add
mov
jp
setno
add
cli
out
push
scas
pusha
add
in
movb
scas
add
pusha
add
int3
xlat
je
pop
call
push
xchg
jnp
and
push
add
jns
add
add
push
add
mov
mov
xchg
add
test
add
iret
push
jb
daa
orl
fisubrs
imul
fwait
dec
andl
pop
add
pop
rolb
mov
cmpsl
sub
add
icebp
xchg
or
mov
addb
mov
inc
add
add
cld
addb
add
test
stos
inc
add
push
out
movsl
in
imul
add
add
addb
scas
or
js
push
add
mov
jnp
add
xchg
into
jae
test
and
aas
mov
or
movl
and
add
push
add
add
jnp
add
cltd
inc
add
loopne
dec
fs
add
add
enter
add
inc
add
add
add
lods
xor
push
lea
in
dec
sub
lods
jns
jae
and
fiaddl
push
cmp
and
ror
insb
lock
add
inc
pusha
add
bound
mov
add
jne
ja
negl
scas
lock
mov
sub
fimull
rolb
inc
add
jno
lods
mov
push
add
mov
sub
movsl
scas
mov
rcl
lahf
loope
inc
add
jbe
nop
add
add
pushf
xor
aam
cmp
sbb
push
add
lahf
inc
add
xchg
repz
adc
add
add
aam
or
cmpsb
add
mov
or
mov
arpl
repz
push
push
add
jg
mov
dec
adc
cwtl
test
or
push
add
fistpll
pop
stos
mov
stos
popa
add
daa
bound
mov
sbb
add
ret
cmp
xor
mov
psllq
mov
add
mov
mov
add
add
in
dec
sub
adc
mov
push
add
cmp
inc
test
cli
lahf
push
add
jp
add
mov
aam
test
ficomps
add
data16
mov
call
sub
imul
lahf
lods
ljmp
add
push
loop
shl
add
add
add
add
loope
orl
jmp
add
add
mov
pop
sbb
push
add
lcall
mov
or
sar
dec
inc
add
test
cli
out
loope
mov
add
add
jg
fcoms
out
pusha
add
add
sub
push
cmp
sbb
test
and
and
add
mov
iret
and
lds
xchg
add
pop
xor
lods
add
aaa
xchg
xor
sbb
add
jge
add
rolb
pop
xlat
cmp
movsl
testb
add
test
adc
cmp
adc
cli
cmp
dec
lcall
aas
fxch
enter
scas
xor
cmpsl
ja
movsb
add
mov
int
cltd
mov
pop
movb
idivl
mov
add
add
jo
add
inc
inc
push
stos
data16
cltd
dec
rolb
and
mov
add
lret
add
testb
xlat
aad
or
loope
push
cmp
dec
and
add
add
mov
out
test
lods
stc
jns
pop
sbb
jecxz
add
mov
add
add
add
xchg
add
ret
push
add
add
mov
loopne
inc
pop
ret
jg
jne
shrl
cld
lock
push
add
adc
add
add
movb
pop
jl
push
in
dec
loope
add
js
jbe
inc
add
shrl
add
add
mov
add
mov
mov
add
add
add
pop
insl
loope
mov
pop
push
add
les
xchg
sbb
mov
add
add
sti
dec
popf
adc
nop
add
mov
mov
add
xchg
imul
mov
sub
lea
push
xor
xchg
add
push
movsl
push
add
ds
adcl
add
lock
or
add
add
mov
sarl
cmp
xor
fwait
scas
jbe
sarl
les
cltd
pushf
test
adc
add
dec
popf
inc
add
mov
jecxz
and
aaa
loop
loope
mov
add
lret
jno
add
icebp
call
add
ret
jl
rolb
lcall
fisttpll
push
add
add
add
inc
dec
scas
scas
inc
loop
test
stos
ret
loop
pop
jae
add
mov
add
inc
add
popf
scas
testb
add
pop
adc
inc
jno
cmp
push
mov
sub
add
lock
mov
lret
mov
xchg
sahf
imul
or
add
das
cli
sti
sbb
dec
aad
fnsave
daa
dec
cmp
lret
jae
mov
test
fidivs
sbb
sub
add
shr
jle
add
mov
add
int3
push
and
mov
rolb
mov
ja
push
testl
add
in
pusha
add
jae
add
add
jmp
inc
add
mov
dec
cmp
ljmp
movb
fsubr
push
sbb
mov
sub
lret
xor
test
jbe
add
add
push
dec
repnz
add
mov
in
lock
add
or
add
lea
add
pop
sbb
cmp
shl
mov
dec
scas
lahf
pop
js
push
add
js
lock
rolb
call
sub
push
sbb
mov
xor
ret
cmpsb
add
add
jmp
xlat
sbb
test
sub
fnstenv
add
cli
arpl
iret
rolb
jmp
cld
xor
add
jp
add
mov
xchg
mov
mov
cmc
mov
fisttpl
pop
pop
or
sub
sahf
pop
aas
push
lcall
test
sub
in
pop
push
add
das
cmp
roll
xor
dec
push
mov
inc
lahf
sbb
add
push
add
jno
push
push
add
add
insl
out
jg
pop
mov
inc
loopne
outsl
dec
js
insl
mov
pusha
add
shll
add
mov
add
add
add
mov
repz
add
mov
and
push
push
xchg
pop
add
add
add
aad
jno
cli
out
adc
dec
xor
add
movsl
insl
lods
xor
cmp
testb
add
mov
addb
and
nop
add
addb
loop
movb
adc
lea
add
ficoml
enter
xor
ret
mov
and
sub
dec
iret
inc
add
mov
add
test
imul
mov
or
mov
xor
andl
mov
mov
aam
leave
daa
lods
or
xlat
out
or
and
mov
add
pop
add
and
mov
add
fnstcw
stos
addb
in
mov
push
negl
test
pushf
shll
add
mov
cwtl
pop
addl
outsb
pop
lcall
mov
sti
fnstcw
imul
add
pushf
adc
push
add
add
jecxz
or
add
push
push
add
pop
or
jmp
mov
inc
add
pop
mov
push
fisttps
pop
jbe
shrl
adc
add
add
push
add
mov
sti
lcall
mov
push
addb
cmp
shll
test
add
add
mov
inc
add
push
add
lret
push
icebp
rcl
xchg
and
mov
add
arpl
add
daa
and
add
fsubrs
add
mov
add
lock
mov
xchg
or
add
add
stos
sbb
and
mov
jge
mov
pop
push
decl
xchg
fisttpll
dec
mov
hlt
add
push
rolb
jb
icebp
mov
mov
inc
lret
xchg
lods
sbb
push
add
cwtl
lahf
nop
add
cmp
add
dec
pop
and
mov
jns
inc
push
jl
xor
rolb
imul
addr16
dec
inc
sub
inc
add
add
inc
and
mov
or
add
add
dec
mov
scas
or
daa
out
mov
mov
adc
add
pop
mov
add
mov
mov
mov
jle
add
add
jnp
add
add
adc
mov
xor
out
aad
pop
add
mov
push
add
add
scas
daa
jns
add
sub
add
pop
xchg
scas
jg
aaa
and
dec
add
add
add
add
add
add
add
inc
popf
popf
in
mov
mov
fistpl
shll
idiv
add
jmp
add
add
add
imul
ja
clc
mov
ja
pop
push
add
sar
xchg
nop
add
add
clc
or
test
lods
sarl
pop
shl
addb
mov
xchg
xor
xchg
add
out
call
sti
add
fsubrl
push
add
addb
mov
add
sub
add
and
push
add
add
sub
or
add
mov
lahf
aam
rolb
scas
aas
mov
or
or
int
cmp
add
add
add
add
mov
rolb
incb
mov
dec
mov
cli
das
jno
add
mov
pop
aaa
push
std
popl
add
mov
loopne
push
add
test
and
mov
xchg
nop
add
jp
stc
das
rolb
insl
imul
fcom
cmpsb
add
add
add
add
push
add
push
inc
add
sbb
cmc
lcall
leave
pop
iret
push
add
loope
addb
add
and
mov
aad
and
lcall
test
or
aas
arpl
add
lods
adc
andl
loop
dec
inc
inc
add
test
mov
pushf
lods
adc
add
mov
add
imul
sub
out
cmp
mov
cli
adc
xchg
les
ret
add
jle
repnz
mov
das
jg
push
adc
mov
pop
in
fldcw
xchg
and
add
rorl
add
or
mov
add
out
adc
jl
add
xlat
cmp
add
repz
rolb
fwait
ja
inc
adc
arpl
pop
push
or
mov
inc
sbb
xor
mov
inc
xchg
imul
xchg
add
add
add
and
mov
test
mov
daa
fbstp
decl
push
rolb
jnp
lock
adc
rep
in
rolb
mov
add
jne
sbb
into
les
or
pop
jecxz
push
add
in
inc
iret
or
cmp
push
add
inc
add
fmuls
pop
mov
add
mov
mov
or
das
mov
add
rolb
dec
add
add
pop
aas
cltd
neg
out
imul
shrl
in
rolb
sub
add
sar
std
cmpsl
dec
cmc
sbb
imul
add
mov
sarl
add
mov
mov
addb
stos
adc
add
add
adc
sti
mov
sub
add
into
push
add
xor
bound
mov
add
add
mov
sbb
int3
movsb
add
imul
sti
inc
add
add
or
add
cmp
imul
add
lods
push
add
jl
pushf
push
sub
dec
xor
ljmp
add
mov
mov
adcl
inc
mov
cmp
or
pop
fsubrs
js
mov
mov
lahf
xor
movsl
mov
lret
jecxz
add
xor
xchg
adc
std
fistl
xchg
out
fstpl
add
lret
mov
les
fwait
add
mov
mov
loop
lods
sahf
push
je
add
mov
jnp
push
add
add
test
push
pusha
add
fdivl
dec
jo
hlt
add
jb
jecxz
add
add
add
mov
push
sbb
cmp
pop
dec
aam
mov
addb
lcall
xor
dec
push
movb
add
push
add
add
add
add
sub
dec
repz
nop
add
add
xchg
add
out
fsubp
pusha
add
mov
add
cmp
add
mov
popf
stos
jne
adc
shll
xchg
pop
add
mov
test
adc
ret
cmp
add
fists
push
sbb
addb
add
rolb
mov
mov
adc
add
xchg
jl
insl
stos
cvtps2pd
dec
xchg
arpl
out
pop
movb
push
xchg
add
pop
dec
dec
movsb
add
add
dec
xchg
add
adc
fwait
clc
enter
xchg
mov
inc
addb
add
or
add
call
mov
cmp
or
aam
mov
cmp
cli
adcl
add
fcom
leave
addb
add
test
add
lret
dec
js
add
add
jp
add
loop
sbb
mov
xor
push
add
mov
add
cld
mov
mov
add
add
test
add
std
into
popa
inc
add
add
aaa
mov
cmp
jbe
orl
cld
out
ficoml
mov
clc
push
add
xchg
lcall
mov
add
sbb
xor
mov
movsl
int
iret
orl
aaa
ja
lret
or
insb
xlat
push
push
add
inc
add
flds
insl
aad
pop
sbb
add
push
jp
xlat
inc
add
cmp
jb
sbb
inc
add
jle
add
adc
xchg
jns
addb
add
arpl
dec
adc
cwtl
cld
out
mov
add
mov
sub
pop
push
pushf
push
add
add
aad
mov
add
add
mov
out
fiadds
mov
mov
xor
repnz
mov
push
rorl
add
adc
xor
dec
mov
add
inc
and
pop
nop
add
mov
mov
add
add
mov
test
mov
add
add
push
add
lds
add
dec
imul
add
lcall
pop
movsl
hlt
add
add
mov
add
xchg
mov
hlt
add
arpl
add
repnz
add
cmp
add
pop
popa
push
inc
add
cmpsb
add
inc
add
add
addb
add
or
add
xor
and
mov
pusha
add
cmpsl
int
jle
mov
add
cmpsb
add
pop
pop
jae
outsl
test
pop
adc
ret
neg
push
and
cmc
loopne
inc
add
nop
add
mov
add
test
push
test
mov
mov
xor
pusha
add
lcall
add
aas
lret
cmp
je
mov
add
mov
cmp
movsb
add
arpl
dec
outsb
push
add
add
add
add
movb
add
addb
call
add
fistps
popa
sbb
addr16
add
mov
and
add
mov
mov
push
je
add
add
hlt
add
and
je
lret
je
inc
mov
add
push
test
add
add
add
add
mov
popa
sub
add
jae
mov
inc
scas
sub
adc
jp
add
inc
add
and
add
add
add
scas
rolb
pmulhw
rolb
pop
push
xor
ret
lahf
insb
xchg
xchg
add
rcrl
rolb
xchg
add
or
ret
xchg
mov
leave
push
add
pop
movsb
add
and
fdivrl
dec
mov
dec
outsl
addr16
add
mov
mov
je
or
pop
and
push
add
add
push
or
psrad
mov
push
add
or
test
add
add
cwtl
mov
add
add
add
xchg
out
add
add
adc
inc
mov
enter
push
add
add
push
mov
add
dec
pusha
add
add
movq
xor
iret
sub
inc
or
repnz
xchg
stos
xchg
xchg
addb
push
xchg
add
ds
mov
jle
adc
add
jns
add
repnz
add
in
add
mov
mov
test
data16
sbb
mov
in
scas
ret
mov
push
add
lods
scas
aas
xor
dec
lods
add
mov
add
out
lahf
data16
lahf
daa
into
push
test
mov
pop
ffree
ss
xor
add
add
add
jp
jge
fwait
data16
add
ljmp
sbb
dec
rolb
add
mov
mov
mov
or
je
sbb
xor
inc
dec
movsl
pop
shr
in
dec
subl
jnp
imul
pop
stc
rolb
sub
jl
add
add
add
add
popa
push
xchg
cld
mov
or
add
call
mov
shll
ja
add
mov
in
mov
mov
or
add
jmp
jno
xchg
adcl
push
add
mov
mov
arpl
or
add
xchg
add
or
xor
mov
into
pusha
add
scas
add
aam
pop
ds
xchg
imul
add
mov
rolb
addb
sahf
fwait
add
and
mov
pop
jecxz
out
xchg
dec
push
add
add
pop
sub
add
pop
push
or
aad
pop
mov
add
push
add
stc
andl
push
add
popf
add
add
adc
jl
imul
test
mov
mov
loop
add
mov
xor
push
scas
jae
inc
add
add
add
jge
addb
add
add
test
pop
subl
sub
pushf
sub
jnp
or
stos
sub
xor
push
add
pop
mov
adc
sbb
add
adc
pop
into
aaa
ret
rolb
sub
add
loopne
mov
ret
add
add
mov
xor
sub
add
xchg
add
push
add
add
or
sub
add
add
mov
int3
mov
xchg
sub
jb
std
hlt
add
mov
jmp
push
es
daa
jecxz
add
mov
loope
add
or
les
xchg
imul
add
add
fnstenv
add
add
mov
mov
and
or
mov
cmpsl
stos
pop
cmp
adc
mov
dec
mov
cld
mov
or
push
jbe
insb
notl
add
and
add
add
xchg
roll
add
stos
ficompl
add
into
ret
out
cmpsb
add
pop
jno
mov
test
popf
fdivl
add
sbb
push
add
add
add
mov
jmp
scas
push
lcall
loop
sbb
repnz
jg
xor
jns
pop
cltd
rcr
add
mov
mov
ds
add
ja
add
add
pop
mov
add
jmp
inc
and
test
aas
jno
insb
pop
mov
das
xchg
add
add
lcall
xor
add
push
add
push
mov
mov
add
in
jp
and
incb
add
add
sub
lcall
out
add
mov
imul
add
lret
pop
insb
mov
push
add
or
add
ret
scas
push
leave
sub
and
mov
xchg
push
add
aam
xchg
data16
cwtl
push
add
add
int3
ficomps
out
xor
xor
push
jno
dec
sbb
mov
repz
cs
push
add
add
pop
push
add
ficoml
mov
add
mov
jae
pop
sbb
add
hlt
add
mov
add
add
add
addr16
sahf
in
cmp
mov
fsubrs
testb
add
cld
jb
push
add
pop
subl
jle
aam
mov
lcall
mov
pop
fimuls
ja
lock
xor
lret
jmp
insb
inc
add
cmp
test
int3
fstp
cmp
faddl
jo
add
dec
adc
push
std
mov
movb
add
add
add
pushf
cmp
mov
addb
sub
scas
rolb
test
rcrl
stos
ds
insb
mov
mov
xchg
mov
mov
add
imul
xor
mov
pop
and
mov
testl
in
shrl
add
mov
xor
das
cmp
dec
pop
sbb
jp
push
repnz
jno
add
repnz
sbb
mov
stos
lret
adc
add
add
dec
and
jge
cmpsb
add
scas
scas
jmp
data16
push
int
in
cmpsl
mov
shll
mov
sub
popf
jb
data16
add
add
add
mov
lea
sub
push
add
aaa
call
aaa
cmpsb
add
push
add
pop
jg
in
cmp
cwtl
sub
jg
mov
sub
sub
xchg
add
call
add
adc
and
add
addb
mov
xchg
xchg
add
jl
add
add
push
add
popa
xor
cmpsb
add
ljmp
rolb
dec
mov
sbb
add
cmp
lock
xor
shufps
out
mov
mov
pop
push
cmp
sbb
lret
xor
push
test
adcl
fbld
add
out
dec
inc
add
push
and
mov
iret
sub
pop
loope
loop
andl
add
mov
push
add
out
xor
inc
add
lods
dec
xchg
in
xchg
add
sbb
add
add
add
add
mov
add
fiadds
mov
mov
js
mov
pop
pop
sub
xor
in
lcall
mov
mull
das
stos
add
mov
add
lret
add
fsubrl
xor
add
cmp
add
call
in
fs
add
add
sbb
cmc
xor
lret
fmuls
dec
and
add
cltd
call
xchg
dec
cmp
add
cmc
dec
popa
les
mov
das
mov
adc
in
and
negl
mov
add
add
or
iret
mov
int
add
sets
scas
jl
outsl
add
adc
add
mov
lds
add
js
mov
stc
mov
mov
imul
add
add
mov
rolb
ljmp
adc
pop
out
or
mov
in
addb
cmp
pop
fadds
adc
clc
mov
nop
add
and
mov
push
or
sbbl
insb
movb
add
nop
add
and
hlt
add
fimull
fs
divl
call
mov
fmuls
jno
lret
mov
movb
out
rolb
add
adc
data16
mov
flds
add
and
mov
movsb
add
add
push
mov
adc
add
mov
add
add
add
outsb
xchg
ret
sbb
xor
sahf
sub
add
xor
repz
ret
mov
fidivl
int
jbe
pop
mov
inc
popa
pop
and
push
inc
add
inc
add
add
mov
jnp
adc
add
add
xchg
add
add
pop
push
add
in
adc
pop
push
xor
add
push
add
test
jmp
mov
add
mov
out
leave
inc
sbb
sti
sub
add
add
repnz
add
ret
jnp
adc
cmpsb
add
rolb
jno
clc
aad
addl
lea
cmp
inc
lahf
adc
sbb
add
pop
pop
lret
cmp
inc
testb
scas
nop
add
lahf
mov
sub
add
add
popf
xor
pop
xor
mov
add
mov
psubw
add
mov
add
jae
mov
sub
add
mov
adc
addb
push
aas
mov
mov
mov
rolb
add
mov
xor
rolb
dec
lds
push
scas
push
add
fcmovnbe
add
ficomps
add
jbe
sbb
add
inc
add
mov
sub
xorl
add
jp
add
add
add
push
mov
xchg
sbb
addb
push
add
add
cmp
add
mov
mov
dec
mov
addb
ss
add
add
and
fdivs
mov
sbb
push
add
add
orl
lahf
les
xchg
leave
pop
and
mov
pop
call
outsb
sbb
add
mov
lcall
out
mov
add
mov
mov
jbe
xchg
jnp
and
inc
or
xchg
add
add
in
mov
jge
mov
add
add
cmc
inc
add
out
addb
mov
jmp
stos
mov
test
jmp
dec
xchg
add
sub
add
add
add
add
and
lcall
nop
add
xlat
psrlq
push
add
add
add
sub
add
and
mov
fwait
mov
js
add
add
loopne
jecxz
add
mov
fsubs
xlat
and
aam
push
add
rolb
popf
cmpsl
mov
xor
sahf
inc
rcll
add
and
jno
xor
es
cmp
pop
xor
push
add
add
nop
add
mov
fxch
jmp
in
sbb
xchg
add
add
cmpsb
add
fnstenv
inc
xor
arpl
add
and
push
inc
inc
dec
pop
sbb
aad
mov
mov
inc
add
fs
sbb
out
popa
and
pop
das
xchg
popa
cld
rcrl
cmpsl
ficoms
mov
add
aad
xchg
add
or
inc
jae
add
loopne
xor
cltd
cld
push
add
fnstenv
fstpt
mov
or
adc
les
push
xchg
mov
jb
adc
add
popf
pusha
add
aaa
outsb
fcom
add
add
ja
xchg
jnp
xor
add
dec
pusha
add
add
mov
add
mov
inc
add
dec
mov
and
cmpsb
add
add
pop
sbb
xor
xchg
sbb
scas
mov
fldenv
cmp
mov
add
xchg
loop
in
push
popa
mov
clc
movsb
add
test
frndint
add
and
mov
xchg
and
lcall
add
cs
mov
mov
mov
xor
adc
stos
dec
ds
push
das
add
jge
repz
xor
mov
in
xor
imul
in
mov
push
add
add
bound
mov
inc
jbe
xchg
cld
bound
mov
mov
add
loop
push
add
roll
dec
nop
add
jmp
adc
xchg
add
insl
ret
cld
std
and
mov
xchg
add
pop
fs
sbb
add
aas
push
and
mov
or
and
mov
imul
add
mov
sbb
or
cmpsl
sub
adc
or
movsl
lret
or
add
mov
add
jp
in
xchg
jo
xor
enter
in
fisubrl
xor
sbb
dec
xor
inc
add
outsl
add
cmpsl
jg
add
inc
or
mov
add
cli
lahf
lods
cmp
add
iret
push
add
dec
out
xor
jo
push
add
add
push
add
pop
xchg
roll
pop
cmpl
add
rolb
mov
add
and
add
xchg
lret
mov
adc
cmpl
aam
pop
out
ret
xchg
fldt
into
mov
loope
xchg
dec
cmp
enter
jbe
in
add
add
frstor
cltd
cs
jge
inc
mov
add
cmp
add
fdivs
add
popf
jo
or
dec
cmp
add
jno
add
and
mov
mov
push
add
add
and
mov
addb
aam
rol
and
mov
add
jl
test
add
xchg
fcomi
inc
add
rolb
aas
mov
mov
add
mov
sbb
mov
and
add
leave
mov
xchg
cs
add
or
jbe
inc
add
adcl
and
add
mov
ficoml
call
adc
jmp
add
in
xor
dec
mov
inc
xor
and
mov
lods
pop
lods
mov
movsl
sbb
cli
ficompl
mov
mov
pushf
and
mov
add
push
add
adc
mov
test
mov
push
hlt
add
movsb
add
pop
and
lret
les
xor
or
xor
add
adc
lcall
inc
add
or
add
inc
mov
mov
lea
cli
mov
stc
int3
jne
add
fnstenv
add
jns
rolb
cltd
add
mov
stc
inc
mov
jb
inc
add
mov
add
pop
inc
add
mov
xchg
add
mov
or
sub
mov
mov
sti
push
add
xor
cs
dec
mov
jnp
add
mov
pusha
add
clc
imul
ret
xor
add
out
test
icebp
or
pop
push
add
add
shrl
test
insl
lods
scas
sub
mov
fcmovnb
add
ljmp
scas
or
cmp
popa
icebp
cltd
iret
cmp
add
add
stos
incb
add
add
add
mov
jp
cltd
xchg
and
out
and
mov
pop
adc
cs
arpl
add
add
fiadds
dec
xchg
add
repnz
push
add
add
add
les
cmp
push
andl
dec
sub
add
add
xlat
mov
and
mov
add
dec
inc
add
or
pop
mov
mov
xchg
add
out
pop
mov
loope
jo
data16
test
inc
lcall
mov
std
call
push
js
pop
pop
es
gs
out
nop
add
cli
xor
mov
xorl
ja
test
repnz
mov
jp
aas
or
popf
out
mov
add
mov
add
mov
adc
inc
add
int3
sbb
add
add
jno
fimull
jl
or
mov
pusha
add
movb
sub
jae
jge
xchg
push
add
in
insb
adc
add
jge
repz
push
loopne
or
add
imul
js
sbb
out
inc
pop
sub
add
lods
add
xor
push
add
nop
add
jg
xchg
mov
mov
add
mov
mov
push
xchg
add
mov
jo
orl
stos
addr16
inc
add
add
pop
push
sti
xchg
cmpsl
and
add
add
out
add
mov
test
add
sahf
xchg
jne
add
outsl
inc
pusha
add
ss
add
mov
push
add
mov
ja
add
push
add
add
xchg
mov
loope
aad
js
xchg
out
int
add
pop
mov
ds
int3
fsubr
xor
mov
add
dec
dec
fnsave
add
cmp
pop
mov
add
sub
test
fwait
cltd
push
add
add
repz
shr
sbb
int
popa
mov
in
rolb
outsb
sbb
add
add
and
mov
xor
add
add
or
icebp
xchg
add
add
js
pop
push
data16
lock
addb
dec
jo
and
cld
lock
mov
and
sahf
sub
rolb
add
push
ret
ficomps
add
add
add
add
add
add
data16
lahf
dec
sub
push
add
add
mov
addb
pop
sub
cmpsb
add
lods
addb
add
xchg
pop
fsin
xchg
add
mov
sub
add
add
not
mov
gs
cmc
addr16
sbb
jl
inc
jno
sbb
add
mov
insl
lea
push
rdtsc
push
add
xor
sub
mov
lods
and
mov
push
arpl
add
loop
and
mov
mov
lret
jl
or
call
rolb
jbe
js
adc
mov
xor
test
out
rolb
call
sbb
stc
add
scas
inc
insl
and
mov
jo
cld
mov
pop
repz
cmove
daa
pop
mov
dec
lock
sub
mov
add
mov
outsl
jmp
sub
sub
out
jb
cld
pop
hlt
add
test
add
test
pop
cltd
pop
int
mov
add
mov
dec
mov
mov
add
inc
add
add
adc
and
push
mov
and
mov
fists
leave
sarl
fucomp
lock
jle
add
mov
fildll
sarl
add
mov
aaa
push
xor
cmc
sahf
add
xor
push
xchg
add
mov
loopne
mov
add
mov
and
je
pop
adc
cld
push
dec
and
add
cmp
addb
add
and
scas
ds
add
cld
xor
xchg
add
repnz
into
xchg
add
jbe
cmpsb
add
or
jp
add
inc
add
fcmovnbe
add
cltd
popf
jnp
or
pop
rolb
xor
insl
cmp
jecxz
mov
enter
dec
sub
iret
aam
jo
mov
inc
add
add
jecxz
mov
dec
imul
mov
testb
mov
mov
hlt
add
loop
cli
dec
sahf
lock
mov
popf
xor
push
push
add
add
mov
cld
add
push
xor
and
pop
add
xchg
add
jno
add
out
xchg
mov
xor
ljmp
add
cmpl
in
and
add
add
mov
add
cs
aad
stos
dec
ret
lret
cwtl
pop
std
jns
jecxz
dec
push
add
pop
inc
add
lock
lea
outsl
cmp
add
call
loop
cmp
jmp
add
sti
cli
cmp
mov
pop
cmp
daa
cmc
mov
jg
adc
add
mov
jb
mov
lret
and
lcall
data16
mov
add
add
fcom
jns
test
outsl
or
mov
add
jnp
iret
pop
cmp
test
mov
xchg
push
add
jbe
pop
dec
cmpsb
add
popa
add
call
add
xor
in
ficoms
add
pushf
adc
add
sbb
inc
mov
mov
lea
mov
jno
mov
add
xchg
mov
add
push
xor
xchg
insl
shll
cli
stc
cmp
add
icebp
addr16
daa
xchg
into
movsb
add
cltd
push
and
mov
pop
sarl
push
push
into
inc
add
push
cmc
lcall
imul
add
add
add
add
ret
scas
push
add
mov
incb
sbb
push
pusha
add
add
mov
outsb
xchg
in
mov
rcrl
les
jae
loopne
clc
int3
fwait
add
mov
jge
inc
cmp
push
add
add
lret
insb
in
bound
mov
fcmovnb
add
pop
out
inc
add
icebp
sbb
add
xchg
add
add
jg
loop
add
addb
cmpsb
add
inc
add
add
add
add
pushf
ja
xchg
add
jle
fmul
add
mov
add
add
add
sbb
dec
sbb
mov
dec
inc
lea
mov
add
inc
add
add
cmp
add
add
pop
adc
mov
in
aam
in
push
add
dec
les
in
push
add
add
fsubs
add
add
xor
mov
inc
add
ja
add
mov
or
add
push
shll
or
pop
push
jbe
cmp
xchg
nop
add
mov
add
add
into
xchg
add
aaa
orl
inc
out
mov
inc
add
add
gs
pop
cmp
sqrtps
ret
adc
shll
mov
scas
inc
add
dec
pop
mov
jl
jmp
mov
out
movb
sub
mov
xchg
push
xchg
add
add
add
add
vpsubq
ljmp
mov
jne
les
push
fists
in
sbb
stc
fimuls
jnp
nop
add
ficomps
push
jne
popf
jns
je
pop
mov
xor
sti
test
cmc
jae
dec
pushf
sbb
mov
pop
or
mov
jae
add
pushf
mov
add
or
jp
mov
insl
and
loop
lcall
jecxz
cld
cmc
push
add
add
cmc
or
sbb
and
outsb
sbb
add
test
push
pop
mov
xchg
xchg
push
add
sub
add
adc
pop
mov
add
repz
cltd
cmc
pop
lods
popa
sub
int3
jb
cmp
mov
add
cmpsb
add
cmp
add
cmp
jl
adc
inc
add
add
mov
mov
add
sbbl
and
mov
add
add
add
or
adc
out
xchg
fimull
add
add
add
add
ret
push
add
mov
add
add
pop
and
mov
mov
mov
bound
mov
add
data16
cmp
xor
add
add
mov
lret
aaa
pop
cmp
add
add
cwtl
rcll
mov
or
push
cwtl
mov
dec
popf
jle
iret
or
add
add
add
in
negl
lahf
pop
lahf
cmpsl
pop
pop
lahf
fimuls
adc
ret
add
mov
dec
in
enter
push
add
hlt
add
ret
iret
cld
add
mov
dec
add
outsl
cli
cmp
add
sub
cmp
and
and
jbe
test
ret
sub
mov
inc
add
fwait
outsl
sti
imul
sbb
add
adc
rolb
pusha
add
addb
mov
add
inc
add
add
pop
pop
nop
add
int
add
adc
cwtl
inc
pop
ds
inc
jbe
lds
mov
jle
add
xor
in
cld
sbb
add
mov
stc
cmc
daa
test
xchg
add
pop
sahf
dec
addb
mov
mov
adc
sbb
push
sbb
xchg
xchg
in
add
cli
inc
das
inc
cmp
sbb
and
cmpsl
inc
add
icebp
and
add
mov
cmc
lods
sbb
add
and
add
add
xchg
add
std
int3
dec
fldln2
push
add
add
stc
dec
ja
add
push
add
aad
xchg
add
ljmp
cmp
dec
xchg
cld
fstl
add
mov
jle
add
into
rep
dec
dec
cmpsb
add
xchg
add
out
and
mov
inc
add
xor
jg
adc
loopne
ljmp
cwtl
xchg
addb
ret
loope
stos
sbb
addb
stc
cli
push
or
add
mov
jbe
in
jecxz
int
lahf
lahf
inc
push
add
push
add
loop
aam
pmulhuw
jp
stos
and
add
xor
xor
add
ss
add
jl
and
xor
add
test
arpl
xlat
push
cmpsb
add
out
push
add
cmc
outsl
pop
js
add
in
test
add
add
out
aad
les
out
imul
js
lret
mov
mov
or
inc
add
mov
pop
cmp
push
add
add
add
dec
cmpsb
add
cmc
cs
push
sub
push
add
push
add
add
scas
imul
cmp
testl
add
add
fldt
xchg
add
inc
add
int
mov
add
mov
add
mov
adcl
jg
add
gs
or
aaa
clc
or
fstps
jecxz
test
add
add
mov
add
ret
les
jno
add
pop
aad
into
mov
lret
std
std
cmp
push
inc
add
cmp
mov
add
add
fistps
jnp
inc
add
scas
ljmp
lea
dec
push
cwtl
out
dec
mov
pop
mov
add
jb
or
xlat
mov
ret
mov
add
movsb
add
jl
add
mov
lds
jns
add
rolb
mov
jl
add
mov
movsb
add
or
add
pop
add
xchg
dec
ficompl
mov
mov
testl
mov
push
or
jbe
dec
das
dec
aas
mov
lock
mov
add
add
gs
jl
test
inc
add
add
cmp
lea
rolb
jae
das
mov
xor
jmp
add
jmp
inc
add
push
push
add
jl
stos
stos
dec
push
bound
mov
cmp
stos
cmp
mov
add
or
push
stos
xchg
outsb
cli
adc
insl
incl
mov
add
rorl
and
rolb
mov
movb
je
es
hlt
add
or
lcall
je
repz
lcall
test
call
leave
mov
mov
addb
add
mov
mov
sbb
add
pusha
add
jo
mov
add
cmp
add
mov
movb
add
add
lock
pop
sbb
dec
mov
add
add
pop
add
ret
lods
and
jno
jp
popf
xchg
push
add
pop
arpl
fsubrs
lods
lret
stc
or
mov
gs
add
movl
add
adc
mov
xor
add
add
movb
pop
mov
add
inc
add
mov
xchg
add
add
push
add
xchg
add
add
add
mov
fbld
xlat
leave
add
mov
jb
mov
mov
icebp
mov
push
ret
cwtl
mov
add
add
xor
inc
push
add
lods
outsl
xor
mov
into
repnz
pop
int
add
test
out
jne
pop
pop
jmp
jmp
inc
int
nop
add
lret
or
cmp
ss
mov
jg
mov
cmp
mov
std
arpl
xlat
push
rolb
sub
stos
xor
cli
dec
mov
cmp
add
int
cs
mov
in
cmpsb
add
popa
adc
repz
or
push
add
add
add
add
pushf
push
xchg
add
add
jge
in
rcrl
xchg
add
sarl
cs
jb
sbb
addl
add
mov
add
jns
pusha
add
mov
mov
or
clc
mov
add
mov
nop
add
sub
push
or
push
add
and
cli
and
mov
add
imul
add
fmull
adc
lret
mov
add
aaa
cmpsb
add
ljmp
cwtl
mov
add
cmp
jno
rcl
add
jbe
jle
cmp
add
add
cltd
imul
jle
mov
sbb
addr16
add
add
add
jge
xchg
xchg
loope
stos
test
mov
sbb
jns
dec
mov
out
sti
push
add
test
inc
enter
lods
cltd
pushf
js
daa
jp
adc
daa
sgdtl
adc
add
jmp
or
add
sarl
add
inc
pop
inc
pop
dec
jnp
add
mov
add
add
fcoml
push
cltd
fdivr
sbb
fstpl
cmp
dec
repnz
push
mov
adc
mov
jge
add
in
cld
mov
jae
push
xor
ficoms
push
add
loop
add
pop
cltd
ljmp
aad
xor
in
push
mov
adc
mov
into
jns
mov
movb
add
mov
xor
or
mov
lcall
inc
add
stos
sbb
pushf
aam
xor
lcall
mov
jle
das
xchg
push
mov
add
push
shl
add
mov
test
das
stc
and
mov
testb
add
add
repnz
sub
add
cmp
int
add
cmpsl
mov
mov
pop
aaa
mov
mov
xchg
mov
xchg
sbb
xchg
mov
icebp
insl
adc
lea
xlat
inc
add
mov
cmp
mov
ret
pop
movsb
add
add
leave
aaa
dec
dec
dec
jecxz
and
mov
inc
sub
dec
push
add
data16
filds
mov
sbb
adc
outsl
add
shll
mov
add
add
stos
stc
xchg
popf
mov
add
mov
movsl
ret
addb
xchg
push
or
push
inc
mov
cmp
cwtl
push
sub
stos
cs
mov
xor
pop
pop
cld
ret
lahf
enter
out
rorl
add
loop
pop
add
adc
jecxz
add
mov
push
add
aad
add
mov
add
mov
add
or
xchg
mov
jle
xchg
mov
add
cwtl
shrl
xor
imul
loope
lds
loopne
pop
jg
loopne
stos
outsb
sbb
jg
sar
xchg
clc
add
push
mov
mov
lret
mov
adc
addb
add
push
add
jle
add
add
pop
pop
jno
add
push
mov
enter
sbb
add
add
add
mov
xchg
lret
outsl
mov
loope
je
lahf
mov
fldcw
add
mov
mov
add
sti
cli
faddl
mov
vmovntpd
add
mov
mov
cmp
add
paddsb
test
js
in
shl
or
stc
in
jbe
xchg
add
add
mov
dec
into
clc
pushf
test
add
add
aad
sbb
fisubs
add
pop
and
je
cmp
add
add
rorl
mov
dec
pop
jp
jle
push
bound
mov
add
test
xchg
jne
addb
xor
sbb
out
stc
inc
mov
insl
fisubrl
push
add
inc
add
add
mov
sub
pop
jp
mov
add
aad
in
and
pop
mov
pop
into
and
push
add
ljmp
add
mov
sbb
add
xor
or
sbb
add
mov
jns
add
sahf
dec
adc
mov
add
inc
add
aad
les
xchg
cli
cmp
jo
xor
adc
sbb
testb
shll
add
mov
cmp
aad
ja
inc
add
add
pop
rolb
leave
xchg
outsl
test
or
mov
js
repnz
or
push
loopne
mov
push
jbe
ret
add
or
mov
std
add
mov
lods
push
add
dec
mov
sub
fisubrl
pop
mov
aas
inc
arpl
add
sub
add
add
out
fdivs
add
push
add
clc
notl
lret
fdiv
or
mov
testb
add
rolb
jo
test
test
addb
mov
cltd
dec
add
adcl
inc
addb
add
mov
pop
jge
dec
or
repnz
add
add
movb
add
scas
inc
inc
add
jae
flds
add
add
inc
lcall
subl
add
add
loopne
lea
mov
nop
add
jb
mov
mov
sub
dec
push
add
mov
lods
addb
add
mov
fbstp
add
pop
mov
ret
push
jmp
add
out
add
add
addl
and
call
fsubl
stos
mov
dec
fnstcw
push
add
add
jmp
push
dec
add
mov
nop
add
add
add
inc
rolb
sbb
push
out
rolb
cmp
mov
add
aam
xchg
mov
popa
mov
mov
sub
adc
jmp
add
add
add
leave
and
inc
add
out
and
or
jo
addr16
dec
mov
mov
pop
jle
jnp
push
jno
pop
orl
stos
sub
add
inc
add
cld
insb
dec
xchg
add
mov
dec
mov
lock
aam
jecxz
cmc
push
orl
mov
fdivs
in
loopne
push
add
mov
add
cmp
les
push
add
add
add
pop
arpl
mov
psubw
mov
out
mov
repz
leave
mov
adc
testb
or
add
hlt
add
xchg
cs
add
mov
add
pop
ds
ret
inc
add
add
xchg
add
mov
jle
adc
popa
imul
mov
push
xlat
xchg
xchg
add
repz
add
add
sub
les
aas
sbb
lcall
rolb
jo
pop
inc
add
adcl
add
add
inc
das
push
add
inc
add
pop
imul
inc
add
mov
add
mov
mov
cli
ror
std
repnz
repnz
nop
add
add
and
add
adc
xor
jns
add
add
cmp
imul
je
fcmovbe
lock
leave
pop
dec
shll
mov
je
stos
and
sti
inc
xor
add
mov
or
add
xor
cmc
out
mov
lods
inc
cmpsb
add
push
add
add
testb
add
mov
add
addb
jo
out
repnz
inc
add
jecxz
xchg
add
jmp
add
add
gs
ficompl
repnz
dec
xlat
jecxz
out
aam
mov
add
mov
imul
xor
add
add
mov
mov
xchg
add
dec
inc
add
mov
fdivs
ret
xor
mov
add
mov
out
lods
into
sub
xlat
test
leave
movb
mov
jo
and
add
add
add
and
add
ljmp
add
aam
mov
jnp
lret
sub
add
add
add
push
add
sbb
add
mov
mov
ds
out
jb
filds
add
mov
test
or
dec
sbb
jnp
or
pop
push
add
testb
or
add
loop
push
add
add
stos
xchg
ss
mov
lcall
add
mov
pop
insl
icebp
ret
popa
xlat
cltd
or
add
and
sub
and
mov
pop
testl
ret
bound
mov
add
rolb
jp
add
ds
adc
in
aam
inc
add
mov
adc
cli
addb
dec
sbb
movsl
aad
sti
jb
add
dec
lret
lds
icebp
xchg
xchg
add
lds
add
aad
add
sub
add
xchg
cwtl
cli
stos
sub
aam
and
mov
inc
fmull
mov
xor
add
add
mov
xchg
add
add
push
add
popf
sahf
stc
lock
fwait
rolb
shl
pop
cmp
add
stos
daa
ja
sbb
add
popf
and
mov
adc
add
movsl
cmp
add
sbb
add
lret
mov
das
xchg
out
mov
ss
ret
ja
add
js
in
mov
cld
test
dec
push
repnz
addl
dec
jmp
dec
popf
mov
filds
lods
xchg
add
add
dec
enter
gs
cmp
add
sub
or
mov
jne
adc
add
add
xchg
add
add
dec
arpl
sub
insb
lcall
cli
fcomip
add
push
add
pop
movsl
xor
aaa
and
mov
add
add
scas
in
shll
fidivs
add
ret
imul
dec
stos
push
xor
out
jae
jno
aad
in
or
fstpl
mov
or
add
test
push
sbb
pop
mov
test
mov
adc
add
add
pushf
mov
add
fstpl
clc
or
and
jecxz
cld
push
push
fildll
or
mov
mov
pop
test
jno
cltd
adcl
js
aas
lods
dec
dec
sar
std
jecxz
stc
pusha
add
push
dec
in
les
fidivl
out
into
rolb
or
add
add
sub
fnstenv
addb
add
jg
push
add
mov
adc
adc
add
push
ljmp
xchg
lods
add
add
jbe
xchg
fisttpl
mov
lret
pop
push
mov
push
add
add
sbb
iret
stos
movsl
mov
mov
xor
pop
aad
cwtl
addb
add
add
and
inc
dec
pushf
xlat
sub
add
add
push
add
mov
add
test
inc
push
push
mov
adc
and
mov
out
push
add
jp
add
mov
pop
jb
popa
in
punpckhbw
mov
pop
and
stos
mov
lods
mov
pop
iret
lret
sbb
add
shll
xchg
sub
test
stc
jecxz
mov
add
mov
add
repnz
adc
adc
pop
mov
rolb
pop
test
add
sbb
fsubrl
inc
add
add
add
mov
lret
dec
jbe
cmc
and
test
pop
pop
xor
pop
ret
lds
lods
pushf
xor
add
jb
or
repz
test
addb
add
aam
and
std
and
push
int
add
add
inc
popf
xchg
mov
sub
mov
jbe
mov
mov
xor
add
push
add
cld
add
add
dec
sub
and
mov
inc
add
dec
sbb
lcall
decl
ja
repnz
into
jle
dec
cmpl
add
insb
sub
shll
hlt
add
adc
imul
movsb
add
pop
mov
add
add
add
add
les
testb
dec
out
sti
cmp
mov
or
test
push
cld
sub
pop
mov
add
aas
mov
push
add
arpl
add
add
mov
mov
add
add
pusha
add
xlat
add
cwtl
jne,pn
add
jb
lcall
xor
add
arpl
pop
ds
push
mov
rolb
dec
aaa
xor
jp
mov
call
or
add
mov
sbb
pop
add
loop
fstpt
call
mov
cmp
push
sub
add
mov
bound
mov
sub
xchg
idiv
push
add
idivl
add
sub
add
fsts
pop
add
addb
add
add
sbb
push
sub
or
pop
insb
dec
mov
and
mov
data16
mov
cmp
add
fiaddl
fldenv
add
cmp
jo
cmpsl
mov
add
nop
add
adc
dec
sub
adc
mov
and
mov
mov
add
mov
mov
fwait
sarl
dec
push
add
fdivr
int3
inc
insl
rolb
add
push
test
and
or
push
add
clc
mov
adc
or
cmc
and
mov
add
add
mov
add
adc
fcoms
sub
add
jg
jne
unpckhps
dec
shrl
aas
ja
enter
push
out
ljmp
mov
fidivrs
xchg
or
add
in
rolb
pcmpeqw
pop
out
pushf
mov
dec
jmp
add
add
xlat
inc
add
add
das
mov
pop
mov
xor
inc
mov
test
add
add
inc
add
insl
sub
add
cmp
add
clc
jl
lea
in
movsb
add
insl
mov
into
mov
mov
das
add
mov
lods
push
add
push
fwait
adc
aas
ljmp
push
ret
clc
imul
or
cmpsl
js
inc
inc
lea
ljmp
add
add
and
mov
or
pop
addb
mov
dec
mov
or
or
mov
and
mov
or
or
add
jmp
dec
pop
aaa
rolb
add
lock
add
push
add
mov
rolb
test
and
mov
cmc
stc
mov
pop
enter
add
jb
add
mov
sub
outsl
stos
mov
roll
mov
push
aas
adc
movb
add
and
mov
add
add
sbb
into
cmp
loopne
outsb
popf
xchg
lahf
inc
add
add
cmp
add
push
add
xor
sub
lcall
lods
xchg
add
pop
cmp
pop
mov
pop
rolb
cmp
cmp
sbbl
add
add
cs
scas
and
mov
add
mov
adc
add
mov
fcmovnu
jbe
adc
movb
dec
jmp
jl
add
push
data16
xor
add
aaa
xchg
rep
add
add
addb
lret
lea
fnstenv
add
cld
mov
add
add
add
icebp
inc
add
mov
mov
nop
add
add
fbstp
jl
add
add
imul
fwait
push
pop
aam
mov
addr16
push
add
add
xchg
add
rcl
add
xchg
push
add
in
repz
mov
push
add
loope
add
add
pop
outsl
imul
int
add
add
xchg
add
scas
movb
jecxz
popf
add
mov
jnp
add
movsb
add
lods
mov
xchg
addb
push
add
add
mov
xlat
pop
lea
or
push
add
int3
and
push
add
push
add
mov
add
add
xor
mov
nop
add
and
mov
test
push
add
mov
add
sub
out
add
mov
movsl
jle
add
ja
in
cmp
lock
or
mov
pop
test
cld
inc
lret
roll
aaa
pushf
xlat
andl
mov
rcrl
pop
cltd
or
ret
dec
aam
mov
rcr
out
insb
pop
xor
rolb
in
test
popa
bound
mov
jno
jg
ret
xor
add
insl
or
adcl
movsb
add
shrl
pop
jmp
aaa
pop
testb
data16
inc
int
nop
add
sbb
cmp
push
add
add
add
mov
mov
xchg
lods
lea
add
push
lahf
mov
arpl
add
mov
add
add
ret
out
mov
addl
push
daa
ret
cli
mov
xor
mov
add
push
xchg
push
repnz
mov
fldenv
lods
nop
add
xchg
add
adc
and
mov
add
lcall
cmp
leave
push
cli
inc
add
mov
addb
cs
outsl
xlat
jne
lods
in
pop
xor
and
mov
test
mov
icebp
xchg
testb
call
iret
in
xchg
stos
fidivrl
iret
sbb
cwtl
pop
cld
out
cmpsl
ret
jb
out
mov
adc
jb
ror
mov
int3
pop
push
add
cld
call
mov
add
add
movb
dec
sub
data16
sbb
mov
data16
mov
mov
ja
xchg
add
add
into
adc
add
icebp
adc
xor
xorl
xchg
add
out
push
add
mov
add
add
add
loopne
adc
xor
lods
paddw
rolb
jp
iret
xchg
add
add
mov
add
mov
ljmp
add
adc
push
add
in
mov
lds
inc
add
add
dec
sub
mov
pop
cwtl
inc
mov
add
call
mov
xchg
cmp
add
test
and
mov
add
mov
rolb
add
mov
xchg
fstpl
mov
add
pop
push
add
cwtl
loope
add
mov
in
dec
in
dec
out
add
adc
mov
leave
xchg
add
add
add
add
mov
rolb
inc
add
loop
pop
ds
and
mov
mov
mov
pop
cli
test
ja
add
movsl
cmp
add
mov
add
lds
lahf
xchg
push
outsl
jle
add
adc
pusha
add
adc
add
cmc
mov
and
add
add
shrl
add
loop
cmc
push
or
push
mov
rolb
add
jl
lahf
cmp
test
mov
xor
mov
add
mov
fwait
imul
add
lds
loope
jmp
xchg
add
xchg
inc
add
mov
cmp
orl
add
into
mov
add
movsl
pop
add
enter
add
imul
inc
dec
mov
pop
lock
sbb
jae
mov
mov
inc
add
rcll
data16
sub
add
mov
scas
jns
pop
lret
loop
addr16
add
add
sahf
pop
addb
rorl
adc
ret
leave
into
movb
add
add
add
adcl
add
cmp
pop
ret
dec
fidivrl
pop
adc
pop
insb
inc
add
add
sub
loope,pt
add
ljmp
add
add
stc
lods
aad
or
and
cmp
jge
andl
add
test
inc
push
xlat
inc
add
cli
into
inc
add
rolb
push
add
cmpsl
xchg
add
sub
lea
add
mov
or
mov
add
aad
out
in
fdivs
add
cmp
add
cmp
mov
add
sub
scas
lret
aas
inc
in
hlt
add
dec
pop
enter
add
nop
add
jecxz
pusha
add
jb
push
add
cmp
add
jns
stc
fidivs
xor
sub
lahf
and
sub
add
mov
push
inc
sbb
add
stos
pop
jno
and
jno
add
loope
add
and
shrl
sub
add
fcmovnb
cmp
or
jb
daa
rolb
add
pshufw
ja
add
adc
addb
dec
addl
nop
add
rolb
and
add
add
movb
repnz
add
ss
add
insl
popf
clc
sub
sbb
mov
add
mov
sbb
xchg
push
add
jl
add
test
mov
xor
inc
add
add
addb
aas
xchg
nop
add
add
dec
jle
stos
mov
imul
mov
ljmp
fwait
add
mov
or
lock
add
in
jge
add
add
add
xor
cmpsl
cli
jae
add
dec
cmpsl
insl
hlt
add
imul
xchg
add
add
movsl
sbb
add
mov
add
popa
cmp
xor
dec
movsl
rolb
xor
mov
xor
stc
mov
add
dec
push
add
add
ljmp
xor
push
add
stos
flds
rolb
imul
jnp
inc
add
popa
aad
or
lcall
inc
mov
filds
mov
mov
lret
fcoml
lods
insb
sub
dec
into
adc
add
add
add
loope
lret
std
bound
mov
outsb
cltd
mov
inc
add
add
sub
icebp
mov
loope
add
test
mov
loope
add
add
fidivrs
sbb
adc
loope
xchg
add
mov
add
adc
mov
jecxz
clc
test
add
dec
inc
add
add
sub
add
add
mov
mov
add
add
aas
out
cmc
rolb
test
repz
insb
add
add
int3
add
xchg
push
adcl
mov
mov
mov
cltd
jge
inc
add
add
das
push
push
testb
int
lods
xor
xor
mov
jg
aad
cli
pushf
dec
orl
mov
mov
xchg
add
scas
clc
outsl
mov
or
adc
add
repnz
dec
insb
call
lods
sbb
add
in
xchg
add
addr16
cmp
adc
push
add
test
dec
jno
mov
or
add
add
int3
mov
add
dec
mov
mov
arpl
add
add
add
cmpsb
add
sub
add
mov
mov
dec
xorl
add
add
mov
push
add
add
add
dec
testb
xchg
add
add
add
fldl
jnp
lahf
dec
sub
add
mov
sbb
sub
add
fwait
xchg
add
leave
sbb
or
add
add
repnz
pop
and
sub
add
xchg
das
test
push
add
add
add
add
insb
push
add
jne
pusha
add
or
sbb
movb
add
jmp
mov
pop
movsb
add
cmp
icebp
mov
rolb
imul
mov
or
mov
mov
movsb
add
inc
add
jp
add
sti
test
mov
add
mov
sub
mov
cmp
sub
pop
and
add
push
add
adc
xor
push
out
arpl
fiadds
cmpsl
add
mov
out
cmpsl
push
add
add
add
rolb
add
stos
inc
adc
mov
push
outsl
fwait
inc
jl
cltd
stos
sub
mov
sub
pop
and
mov
sbb
lcall
arpl
rolb
iret
jmp
add
mov
stc
arpl
rolb
adc
loopne
jno
dec
sbb
incl
loope
sbb
out
addb
add
dec
sbb
data16
dec
sub
movsb
add
mov
add
imul
into
nop
add
add
inc
mov
loop
addb
pop
aaa
mov
add
add
add
add
push
aaa
push
pop
mov
movb
popf
or
xchg
movsl
and
mov
ljmp
dec
daa
add
add
insl
lret
push
add
add
inc
mov
add
mov
push
jg
or
xor
dec
mov
add
mov
fwait
stos
mov
adc
add
add
add
add
inc
or
and
icebp
mov
xor
add
arpl
add
add
not
add
cmp
aam
ds
pop
xchg
in
pop
or
and
mov
ja
add
out
jle
add
xchg
add
add
adc
xchg
add
add
int3
test
add
idivl
rol
arpl
add
ljmp
cwtl
mov
xchg
daa
testl
dec
pop
mov
ja
and
mov
mov
out
jnp
gs
and
mov
fnsave
int3
xchg
shll
insb
outsl
ds
and
mov
mov
or
leave
mov
adc
add
inc
add
int
push
inc
pop
lahf
pop
lret
xchg
pop
sbb
mov
push
or
add
add
sti
dec
dec
ds
mov
add
cmc
push
mov
call
int3
mov
xchg
jl
insl
xor
jb
mov
data16
cwtl
mov
into
movsl
addb
sahf
jmp
daa
and
mov
mov
add
ret
rolb
fistps
mov
and
mov
mov
nop
add
inc
add
stos
test
ret
add
mov
dec
test
add
add
outsl
xchg
fnstsw
push
call
in
aad
or
add
cmp
icebp
pusha
add
add
pop
dec
add
mov
add
add
xor
jnp
outsb
sub
in
andl
add
sbb
ds
add
adc
mov
add
nop
add
jmp
add
add
into
movsb
add
gs
jno
adc
mov
movb
inc
or
add
lods
mov
add
xor
mov
mov
rcr
add
add
fldt
dec
sub
mov
sbb
cmp
add
and
add
add
add
add
add
rolb
test
add
rolb
test
or
mov
scas
inc
mov
in
fisubs
sti
bound
mov
lcall
add
jae
add
add
dec
xor
addb
or
add
aaa
push
add
xlat
fld1
mov
adc
cli
mov
lret
dec
stos
fistps
add
ret
cmp
mov
mov
call
add
add
fidivrs
mov
sbb
jmp
add
addr16
test
jecxz
lret
cmp
cmp
add
add
pushf
xor
mov
add
mov
add
addl
inc
ljmp
add
mov
std
cltd
mov
or
mov
xchg
test
push
add
mov
add
add
cmp
test
add
dec
inc
add
loop
incb
add
movb
rolb
add
sbb
jp
jae
add
mov
icebp
xchg
add
testb
xchg
pop
hlt
add
mov
test
lret
and
jno
mov
in
inc
shrl
xchg
sbb
divl
addr16
add
cwtl
movb
lods
xor
push
pop
leave
cmp
xchg
inc
add
roll
adc
dec
in
in
push
add
mov
add
int
add
add
rcrl
gs
inc
and
fidivrs
scas
rcrl
inc
stos
daa
pop
sub
mov
mov
mov
mov
add
push
mov
inc
add
fdiv
add
aam
xchg
dec
jmp
js
add
sbb
add
mov
and
fldl
leave
movsb
add
mov
sahf
jecxz
xor
add
fsubrp
lea
xlat
sbb
or
sub
add
stos
repz
xchg
cmpsb
add
stos
addb
add
pop
jmp
dec
cltd
mov
add
in
push
add
ret
xor
jno
add
jg
add
or
add
mov
in
cld
mov
inc
mov
or
sti
aam
push
add
add
mov
jno
mov
ds
aas
inc
pusha
add
jnp
andl
xor
int3
jge
push
scas
aam
movsl
pop
xor
in
xchg
inc
add
int
mov
push
jle
add
add
loopne
mov
mov
pop
xchg
sub
add
sub
stos
lcall
xchg
arpl
lock
add
data16
push
add
add
mov
xor
add
xor
add
push
repnz
push
and
jne
add
aam
mov
pop
dec
mov
scas
sub
mov
addb
add
mov
add
and
fistpl
jge
add
or
add
or
int
add
mov
insl
push
imul
stos
add
jmp
pop
jmp
pop
test
add
add
mov
adc
loop
test
mov
push
add
xor
inc
add
add
push
add
push
add
mov
xlat
xchg
add
addl
add
pop
xchg
add
pop
xchg
add
sub
add
cmc
jno
pusha
add
pop
les
imul
imul
add
jo
inc
add
pop
cmp
mov
add
pop
fwait
cmpsb
add
add
addr16
loopne
ds
jl
out
call
cwtl
lds
inc
insl
inc
add
add
pop
pop
mov
lret
ret
jmp
add
or
lahf
mov
adcl
xor
or
outsl
cmpsb
add
rolb
out
roll
or
testb
repnz
mov
push
add
xorl
out
mov
add
mov
mov
repz
std
sbb
add
push
xor
add
mov
sti
cmc
inc
add
cmp
cli
sub
mov
push
inc
add
push
xchg
add
pop
and
bswap
mov
inc
cs
xchg
jns
lods
pusha
add
add
add
fdivp
add
les
mov
add
popf
in
mov
sub
pushl
inc
add
lret
sub
add
mov
filds
add
mov
adc
mov
mov
inc
in
add
mov
add
add
add
add
jne
dec
in
mov
and
inc
pop
add
out
sub
mov
jecxz
faddl
ret
scas
sbb
xor
test
add
push
insb
jecxz
add
mov
add
mov
arpl
add
inc
add
fisubrl
xchg
cmp
add
testb
push
add
fsub
add
mov
mov
add
add
add
or
shll
cmpsb
add
add
repz
lcall
fidivs
mov
add
add
jbe
mov
add
gs
xchg
add
add
insl
dec
jo
test
movsb
add
bound
mov
out
adc
jae
add
addb
pop
bound
mov
add
lret
aam
mov
and
mov
outsb
mov
popf
daa
jb
sub
into
dec
addb
add
jg
add
fisubrl
pop
sahf
in
mov
mov
add
fwait
movsl
rolb
popa
aaa
or
gs
mov
repnz
ja
add
cld
push
and
add
adc
jbe
repz
stos
lcall
add
add
cs
adc
mov
mov
add
mov
jg
add
add
add
sbb
adc
pop
into
pop
adc
mov
fcomp
divl
dec
sti
inc
add
add
add
out
addr16
mov
mov
js
mov
sub
popa
xor
lahf
xor
repz
push
add
xchg
add
or
aam
mov
pop
pop
cmpsl
add
add
mov
sbb
addb
mov
mov
cmp
add
add
mov
add
icebp
xchg
pop
in
lret
add
mov
movb
add
add
mov
add
mov
add
add
mov
push
add
sbb
push
mov
ret
mov
adc
mov
push
add
add
fsubrl
add
out
pop
lcall
mov
add
mov
jl
add
dec
movsb
add
incl
popf
add
mov
out
enter
xchg
add
and
movsb
add
mov
lods
stos
lahf
andl
add
leave
push
add
imul
rolb
stos
add
add
add
push
insl
push
lret
xchg
and
mov
add
add
add
add
mov
add
out
adc
xor
add
sub
add
add
les
pop
fistps
adc
mov
rolb
bound
mov
iret
sub
jns
bound
mov
repnz
add
ja
imul
cmpsb
add
inc
enter
nop
add
or
add
mov
add
inc
adc
add
add
sbb
aaa
addb
rolb
adc
jl
dec
out
scas
addb
lret
and
popa
ds
xor
fisttpll
push
or
or
leave
mov
jl
add
jbe
nop
add
insb
dec
leave
stos
mov
addb
out
fistpl
mov
add
pop
out
lret
jb
fcoms
cmp
aas
outsl
inc
push
add
out
pop
or
ljmp
js
or
aaa
inc
dec
xor
repnz
out
sbb
add
add
add
add
add
add
add
scas
inc
add
jnp
lods
mov
mov
pop
daa
lea
arpl
enter
cmp
xor
std
mov
add
pop
push
add
pop
test
outsb
sahf
jae
xchg
mov
add
pop
pop
jb
fisubl
inc
add
repz
aad
fldl
sbb
xchg
add
cli
int3
inc
lds
sub
adc
mov
push
daa
test
xchg
add
add
or
push
pop
addr16
out
adc
dec
inc
add
or
testb
cmp
add
add
add
add
add
adc
xchg
add
fdivrs
scas
and
mov
or
mov
loop
mov
or
add
test
pop
loop
fsubl
add
sub
mov
cli
lods
out
leave
icebp
ficompl
ficoml
add
add
add
mov
mov
mov
lods
aaa
fdivrl
mov
pop
add
jl
inc
and
mov
rcrl
xlat
clc
popf
sbb
add
jno
lods
jg
add
fwait
add
sbb
fisttpll
add
sahf
mov
add
add
push
jae
add
add
add
mov
add
push
add
inc
add
lea
xor
mov
pop
jecxz
add
outsb
inc
sti
adc
pusha
add
sub
add
add
addb
add
xchg
inc
push
mov
mov
mov
and
mov
mov
add
jbe
dec
aam
rolb
add
ja
adc
add
mov
add
adc
cmp
test
movsl
add
test
jne
cmp
add
mov
ret
and
mov
scas
dec
cwtl
jecxz
rolb
xchg
xchg
add
cmp
dec
mov
add
push
add
dec
xchg
imul
outsb
mov
xor
cwtl
mov
add
add
pushf
mov
add
cmp
fcoml
add
lock
add
xlat
inc
add
add
push
add
ret
pop
mov
add
sbb
add
dec
add
mov
movsb
add
ffree
inc
add
das
xchg
dec
cmp
test
add
mov
jg
cmp
jle
mov
or
inc
enter
add
enter
mov
push
add
xchg
rcll
add
mov
sahf
cmp
in
dec
loope
mov
addb
add
pop
mov
xchg
add
in
in
test
stos
cmpsb
add
loop
pop
xchg
add
dec
mov
addb
cmp
add
add
pushf
sbb
push
add
addb
pop
fwait
xor
push
adcl
push
pop
ret
add
add
add
jl
add
mov
stc
out
cmpl
cltd
lcall
cmpsl
inc
imul
addr16
inc
icebp
inc
addb
add
mov
and
jmp
mov
cmp
add
add
mov
add
fimuls
adc
sbb
add
fucomp
testb
movsb
add
xchg
movsl
ja
in
mov
test
push
and
pop
push
xchg
ret
push
mov
add
mov
add
add
pop
in
add
ja
das
or
loop
adc
mov
shll
push
add
xchg
add
mov
add
or
ficoms
pop
xor
shrl
add
add
add
jecxz
add
mov
xchg
dec
lcall
push
decl
nop
add
push
mov
add
add
shl
cmp
push
mov
mov
outsl
es
xchg
pop
jno
lea
fwait
stos
push
add
imul
add
popf
lea
inc
xchg
add
filds
data16
mov
add
inc
add
pop
add
mov
xchg
add
mov
and
int
cltd
dec
mov
mov
call
add
xor
fdivs
mov
mov
add
hlt
add
adc
inc
xchg
mov
xor
sub
sbb
mov
add
pusha
add
xor
rolb
inc
sub
add
add
pop
lds
add
add
add
push
add
jg
movb
add
add
les
push
inc
add
movsb
add
add
add
repnz
pop
out
fcomp
push
add
push
loope
xorl
add
mov
mov
mov
mov
cmp
sub
add
add
repz
dec
pop
sbb
add
add
add
aad
add
mov
push
add
sbb
add
aaa
push
add
rcrl
push
mov
adc
rcr
addb
jge
call
add
lret
add
push
int
imul
aaa
popf
shll
add
add
push
add
jecxz
add
fwait
or
pop
xchg
subl
imul
fiadds
add
out
nop
add
rolb
mov
add
add
std
fistps
xchg
cmc
movsl
arpl
inc
add
add
mov
std
scas
dec
mov
test
cmpsb
add
in
cmp
add
fdivr
in
ret
cmpsb
add
pop
sub
add
dec
push
lds
dec
loope
add
cmp
add
pop
mov
add
mov
daa
jmp
add
insb
or
dec
fwait
cmp
sahf
jp
add
bound
mov
stos
jmp
sub
add
mov
adc
leave
xchg
add
add
jle
pop
loop
push
sbb
test
sbb
cmpl
jno
add
or
test
pop
or
mov
jns
add
sbb
test
cmp
or
jge
cltd
rcrl
jae
add
jbe
xchg
sub
jae
add
add
mov
mov
xchg
push
mov
add
xor
push
inc
add
adc
xchg
repnz
add
add
add
aas
pop
nop
add
add
inc
orl
stc
out
mov
push
lock
insl
add
imul
cmp
add
fldenv
dec
addb
test
les
inc
add
xchg
add
add
mov
mov
pusha
add
xchg
add
add
incb
ds
xor
add
js
call
cmp
add
mov
dec
ret
add
add
jbe
ljmp
dec
aaa
mov
add
rolb
repnz
leave
cmp
xchg
add
mov
lods
pusha
add
mov
add
add
fwait
arpl
pop
xor
mov
rolb
add
rolb
inc
add
imul
pop
rolb
jge
push
add
das
dec
cmp
pusha
add
movb
pop
or
fxtract
add
movb
pop
clc
jns
add
fmul
pop
pushf
xchg
add
add
stos
nop
add
and
arpl
mov
test
test
shll
pop
add
xchg
mov
push
add
add
add
xor
or
add
add
mov
add
jecxz
add
jno
ret
mov
insl
call
add
les
dec
fwait
push
pop
jecxz
idivl
adc
add
std
dec
mov
xchg
cmp
xor
outsl
cld
jp
mov
cs
add
stos
cltd
push
loopne
mov
add
add
in
adc
in
call
scas
cmpsb
add
push
lcall
add
data16
add
leave
in
dec
or
into
out
fsub
mov
shll
js
out
mov
add
add
add
outsl
out
cli
mov
adc
fwait
jne
addb
jge
jg
stos
or
cmpsb
add
add
add
ret
or
mov
dec
fscale
mov
rolb
ret
add
js
push
loopne
jecxz
add
addb
std
out
rolb
add
add
add
repz
mov
sub
mov
add
je
cwtl
dec
mov
outsl
pop
cwtl
mov
pop
outsl
aaa
lret
cmp
mov
jb
xchg
aam
adc
add
imul
jmp
add
xor
out
pushf
addb
add
into
jecxz
add
jno
jbe
in
aad
push
add
data16
sub
add
push
add
mov
add
mov
add
add
add
sarl
add
add
cmpsl
add
mov
jmp
mov
add
cwtl
mov
add
repnz
add
add
add
testb
add
fcmove
xor
dec
cltd
mov
or
rep
mov
nop
add
loope
add
adc
jns
inc
add
mov
dec
mov
in
mov
adc
bound
mov
cld
and
inc
add
addb
int
xlat
mov
cmpsl
jl
test
movb
push
add
add
add
lahf
adc
xor
pop
test
dec
lds
add
and
mov
add
sbb
mov
add
push
add
fmull
add
cmp
adcl
jo
cltd
push
add
jle
mov
lds
inc
add
push
xlat
sbb
xor
ss
mov
sub
cltd
fcomps
jae
xchg
addr16
mov
inc
add
mov
test
leave
loopne
inc
add
adc
int
add
xchg
jns
lock
add
add
testb
shll
add
jae
add
mov
outsl
push
xor
pop
fwait
js
xchg
add
lret
daa
call
test
mov
les
rol
fnstenv
inc
add
mov
add
sbb
add
scas
clc
enter
xlat
loop
xchg
lcall
add
add
ret
push
sub
stos
xchg
add
or
outsl
mov
pop
inc
arpl
add
or
out
xchg
add
test
out
mov
clc
movsb
add
xchg
stc
xchg
add
test
add
fwait
adc
cli
iret
or
inc
add
adc
cmp
dec
adc
adc
add
mov
cmp
mov
stos
pop
popf
xchg
add
add
xor
add
pop
insl
test
mov
push
ret
je
push
pop
mov
dec
add
inc
add
add
xor
jbe
jns
repnz
rolb
outsl
in
arpl
int3
inc
add
adc
inc
int3
insb
cmp
loopne
sbb
loope
addr16
inc
add
int
push
add
add
out
push
rep
adc
add
test
push
add
mov
inc
pop
leave
xchg
push
sub
gs
jmp
sub
add
add
add
pop
imull
sahf
gs
add
or
add
add
imul
adc
mov
add
mov
add
jbe
lcall
dec
lret
call
notl
data16
cli
jmp
inc
push
or
cs
adc
xchg
ret
mov
and
mov
mov
sahf
dec
xor
stos
rolb
jae
add
mov
fsubp
add
jb
mov
fstps
pushf
fadds
add
lahf
cmpsb
add
ret
push
add
loopne
jl
sbb
mov
popf
rolb
rolb
int
add
push
add
test
clc
insl
xor
out
push
add
scas
inc
add
add
xchg
jecxz
push
xchg
add
fucomp
jae
and
and
cwtl
arpl
or
cmp
test
cmp
add
add
fcmovne
shll
loopne
cmp
add
add
sbb
mov
mov
add
add
mov
add
lock
add
and
mov
pop
sub
add
mov
mov
aaa
sub
add
add
movsl
fsubrs
push
add
add
add
xor
aam
mov
loopne
mov
or
data16
jo
pop
mov
sbb
out
add
dec
imul
push
out
popf
xchg
into
and
mov
xchg
add
add
xchg
add
out
rolb
cmp
jl
dec
movsl
xor
jmp
add
xchg
xchg
loope
add
jmp
add
add
ds
push
add
dec
gs
in
insb
mov
jo
jae
test
cli
nop
add
mov
sub
arpl
ljmp
mov
push
loop
fldt
and
outsl
mov
int3
adc
mov
add
into
xchg
les
pop
in
jge
test
dec
hlt
add
add
int
add
pop
int
notl
into
pop
lods
aad
add
sbb
lods
loop
lea
add
inc
mov
mov
dec
mov
stc
dec
or
or
add
add
add
