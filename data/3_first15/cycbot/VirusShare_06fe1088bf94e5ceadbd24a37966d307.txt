scas
out
in
loop
in
out
in
out
in
call
loop
mov
loop
pushf
jecxz
in
out
in
loop
in
loop
in
loope
in
jecxz
in
out
in
call
loop
fsub
loop
inc
jmp
loop
insb
in
in
jmp
loop
imul
loop
push
call
loop
shl
loop
mov
loop
pop
in
in
out
in
in
in
loop
in
jecxz
in
in
in
in
in
loop
in
out
in
call
loop
push
in
in
call
loop
cld
out
in
in
in
call
loop
mov
loop
into
call
loop
jmp
call
loop
mov
out
in
jecxz
in
call
loop
sti
call
loop
pushf
jecxz
in
jmp
loop
mov
jecxz
in
loope
in
in
in
in
in
call
loop
clc
loop
in
in
in
in
in
call
loop
lock
in
out
in
out
in
loope
in
out
in
out
in
jecxz
in
call
loop
repnz
in
loop
in
loop
in
in
in
in
in
loop
in
jecxz
in
in
in
loop
in
jecxz
in
loope
in
out
in
jecxz
in
out
in
in
in
call
loop
or
call
loop
dec
call
loop
fwait
loop
in
loope
in
in
in
in
in
in
in
in
in
out
in
loope
in
call
loop
jp
loop
and
in
loop
in
out
in
in
in
jecxz
in
out
in
call
loop
inc
jmp
loop
mov
call
loop
imul
in
loop
in
out
in
in
in
call
loop
push
loop
or
loop
pop
loope
in
in
in
call
loop
dec
out
in
loope
in
out
in
jecxz
in
loop
in
call
loop
adc
loop
adc
loop
loop
inc
jecxz
in
jecxz
in
jecxz
in
in
in
in
in
in
in
in
in
loop
in
jecxz
in
out
in
out
in
in
in
out
in
loope
in
in
in
jmp
loop
or
loop
outsb
in
in
in
in
loop
in
in
in
jecxz
in
call
loop
mov
loop
pop
in
in
out
in
out
in
loope
in
in
in
loop
in
loop
in
in
in
call
loop
dec
in
in
jecxz
in
in
in
in
in
jmp
loop
push
jecxz
in
jecxz
in
out
in
in
in
in
in
out
in
jecxz
in
in
in
jecxz
in
loope
in
jecxz
in
jecxz
in
jecxz
in
loope
in
loop
in
call
loop
xchg
loop
add
loop
xchg
in
in
in
in
loop
in
jecxz
in
out
in
out
in
out
in
in
in
out
in
in
in
loope
in
jecxz
in
in
in
out
in
out
in
in
in
out
in
jecxz
in
jecxz
in
out
in
in
in
jmp
loop
jp
loop
test
loop
sub
loop
loop
call
loop
xor
loop
adc
loop
scas
in
in
in
in
out
in
jmp
loop
pop
call
loop
nop
call
loop
dec
out
in
in
in
out
in
out
in
out
in
jecxz
in
out
in
in
in
loop
in
call
loop
and
loop
aas
out
in
in
in
in
in
out
in
jecxz
in
loope
in
jmp
loop
ljmp
in
in
in
loop
in
out
in
jecxz
in
in
in
out
in
in
in
out
in
loop
in
in
in
in
in
in
in
out
in
in
in
call
loop
aad
loop
mul
loop
pop
out
in
in
in
out
in
jecxz
in
in
in
in
in
jecxz
in
call
loop
in
loop
push
in
in
call
loop
pop
loop
in
out
in
loope
in
in
in
out
in
out
in
out
in
jmp
loop
mov
in
in
in
in
in
in
loope
in
jecxz
in
call
loop
push
jmp
loop
in
in
loop
in
call
loop
push
jecxz
in
jecxz
in
in
in
in
in
call
loop
sbb
loop
ret
in
call
loop
stc
in
in
out
in
loop
in
jecxz
in
loop
in
out
in
in
in
out
in
in
in
out
in
in
in
loop
in
out
in
loop
in
jecxz
in
out
in
jecxz
in
jmp
loop
test
loop
sub
loop
dec
loop
in
in
in
call
loop
loop
int
loop
loope
loop
add
loop
mov
loop
in
loop
in
jecxz
in
loop
in
jmp
loop
fs
in
out
in
in
in
loope
in
jmp
loop
loop
in
loop
dec
in
in
out
in
loop
in
call
loop
and
in
in
in
loop
in
in
in
loope
in
out
in
jmp
loop
fsubp
loop
nop
loope
in
jecxz
in
jmp
loop
mov
loop
ret
out
in
loop
in
out
in
out
in
in
in
in
in
in
in
out
in
loop
in
in
in
in
in
out
in
in
in
call
loop
mul
loop
mov
loop
in
call
loop
out
in
loop
in
in
in
in
in
loope
in
in
in
loope
in
out
in
out
in
in
in
jecxz
in
in
in
in
in
loop
in
in
in
jecxz
in
call
loop
push
out
in
out
in
jmp
loop
jecxz
loop
loop
loop
xor
loop
xchg
loop
xor
loop
jmp
loope
in
in
in
jmp
loop
cmp
loop
daa
jecxz
in
out
in
call
loop
test
loop
xlat
out
in
in
in
out
in
out
in
out
in
out
in
jecxz
in
out
in
in
in
out
in
out
in
call
loop
daa
out
in
call
loop
mov
loop
loopne
loop
test
loop
push
jecxz
in
out
in
out
in
in
in
loope
in
jecxz
in
out
in
in
in
in
in
loop
in
out
in
loope
in
out
in
loop
in
call
loop
loop
fsub
loop
in
call
loop
das
jecxz
in
out
in
out
in
jecxz
in
jecxz
in
out
in
jecxz
in
out
in
loop
in
jecxz
in
jecxz
in
loop
in
call
loop
sbb
loop
jns
loop
xchg
jecxz
in
out
in
call
loop
jnp
loop
frstpm(287
loop
call
loop
push
jecxz
in
in
in
jecxz
in
loope
in
loope
in
in
in
call
loop
inc
in
in
call
loop
xor
loop
in
loop
in
jecxz
in
out
in
loop
in
in
in
jecxz
in
in
in
out
in
call
loop
and
loop
or
loop
cmpsb
call
loop
jecxz
loop
mov
out
in
loop
in
call
loop
fsub
loop
or
loop
shl
loop
int
loop
cltd
out
in
in
in
loop
in
call
loop
inc
jmp
loop
jmp
call
loop
and
loop
cltd
in
in
loope
in
loop
in
in
in
jecxz
in
jecxz
in
out
in
loope
in
in
in
loope
in
in
in
call
loop
jecxz
in
out
in
loope
in
in
in
loop
in
in
in
call
loop
arpl
loop
xchg
loop
inc
jecxz
in
in
in
loope
in
jecxz
in
loop
in
out
in
out
in
in
in
out
in
loope
in
out
in
in
in
jecxz
in
out
in
out
in
loope
in
loope
in
in
in
in
in
loop
in
loope
in
jecxz
in
jmp
loop
push
loop
in
in
in
out
in
out
in
loope
in
loop
in
in
in
in
in
out
in
in
in
out
in
in
in
loop
in
in
in
in
in
loop
in
loop
in
loop
in
loop
in
jecxz
in
loop
in
loope
in
in
in
call
loop
lahf
loop
in
out
in
loop
in
out
in
out
in
in
in
jmp
loop
ljmp
in
loop
in
in
in
out
in
in
in
loope
in
loop
in
loope
in
call
loop
loop
in
jecxz
in
jecxz
in
call
loop
fsub
loop
and
in
call
loop
or
loop
mov
in
in
in
in
in
in
out
in
in
in
call
loop
inc
in
in
out
in
in
in
jecxz
in
out
in
in
in
out
in
in
in
jecxz
in
out
in
loop
in
out
in
in
in
jecxz
in
out
in
in
in
out
in
jecxz
in
call
loop
add
loop
outsb
loop
in
out
in
out
in
out
in
call
loop
test
out
in
jecxz
in
out
in
call
loop
adc
loop
icebp
loope
in
out
in
in
in
call
loop
jbe
loop
jge
loop
mov
in
in
call
loop
dec
call
loop
stos
out
in
jecxz
in
jmp
loop
sti
in
in
loop
in
loop
in
loop
in
out
in
jmp
loop
mov
loop
stos
call
loop
and
in
loope
in
jecxz
in
out
in
out
in
out
in
loope
in
loop
in
out
in
call
loop
leave
jecxz
in
loope
in
loope
in
out
in
in
in
call
loop
and
in
in
in
call
loop
and
loop
push
out
in
call
loop
insl
loope
in
loope
in
in
in
call
loop
xchg
out
in
jecxz
in
jmp
loop
shl
loop
cmp
loop
shr
in
loop
in
jecxz
in
call
loop
lret
in
jecxz
in
jmp
loop
mov
loop
int
loop
arpl
loop
mov
jecxz
in
jecxz
in
in
in
out
in
out
in
call
loop
dec
out
in
loop
in
loope
in
loop
in
out
in
out
in
call
loop
inc
out
in
in
in
out
in
in
in
in
in
in
in
out
in
loope
in
in
in
jmp
loop
test
loop
mov
out
in
out
in
in
in
in
in
call
loop
movsb
out
in
out
in
in
in
call
loop
dec
out
in
jecxz
in
jmp
loop
cs
loop
push
call
loop
cltd
out
in
call
loop
cli
in
in
in
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
call
loop
test
loop
mov
loop
cmp
loop
popa
out
in
out
in
out
in
in
in
loope
in
loope
in
jecxz
in
out
in
loop
in
call
loop
sub
loop
cltd
loop
in
call
loop
mov
loop
mov
loop
cmp
out
in
in
in
jecxz
in
loop
in
call
loop
arpl
loop
sbb
loop
in
loop
in
loop
in
out
in
in
in
out
in
loop
in
loope
in
out
in
call
loop
dec
jmp
loop
mov
jecxz
in
jecxz
in
jmp
loop
xor
loop
repnz
in
out
in
call
loop
pop
jecxz
in
call
loop
xchg
loope
in
out
in
jecxz
in
jecxz
in
in
in
out
in
loop
in
call
loop
sub
loop
sbb
loop
out
in
in
in
in
in
in
jecxz
in
out
in
in
in
loop
in
in
in
jecxz
in
in
in
call
loop
loop,pn
in
out
in
in
in
in
in
jecxz
in
in
in
out
in
jecxz
in
out
in
out
in
out
in
loope
in
jecxz
in
loop
in
out
in
loope
in
out
in
jecxz
in
call
loop
dec
in
in
in
in
out
in
out
in
in
in
loop
in
in
in
jmp
loop
sahf
in
in
jecxz
in
out
in
jecxz
in
jmp
loop
adc
loop
jae
loop
cwtl
in
in
in
in
in
in
out
in
loop
in
out
in
loop
in
jecxz
in
call
loop
pop
loop
in
out
in
in
in
in
in
out
in
call
loop
and
loop
and
loop
pop
out
in
out
in
out
in
jecxz
in
in
in
in
in
out
in
loop
in
call
loop
mov
in
in
call
loop
add
loop
push
loop
in
in
in
in
in
out
in
loop
in
loope
in
in
in
call
loop
stc
loop
in
out
in
loope
in
loope
in
loop
in
out
in
in
in
loope
in
loope
in
in
in
out
in
loop
in
out
in
out
in
call
loop
lahf
in
in
in
in
out
in
loope
in
in
in
loop
in
out
in
in
in
in
in
in
in
out
in
call
loop
inc
out
in
loop
in
in
in
in
in
out
in
call
loop
xor
loop
dec
in
in
out
in
in
in
in
in
in
in
in
in
out
in
in
in
call
loop
jns
loop
and
loop
mov
call
loop
jae
loop
dec
loop
in
call
loop
ret
in
out
in
loop
in
out
in
loop
in
loope
in
loope
in
loop
in
loop
in
call
loop
and
loop
jne
loop
es
in
out
in
out
in
loop
in
out
in
jmp
loop
xchg
loop
in
loope
in
out
in
jmp
loop
arpl
loop
fsub
loop
jbe
loop
cwtl
loop
in
loop
in
loop
in
in
in
jmp
loop
dec
out
in
loop
in
jmp
loop
jmp
loop
mov
loop
ds
in
out
in
jmp
loop
fs
in
jecxz
in
jecxz
in
loop
in
in
in
jmp
loop
push
jmp
loop
mov
out
in
call
loop
xor
call
loop
mov
loop
in
jecxz
in
loop
in
jecxz
in
jecxz
in
loope
in
loop
in
out
in
in
in
loop
in
call
loop
loope
loop
sbb
in
in
in
in
jecxz
in
call
loop
mov
in
in
in
in
out
in
jecxz
in
loope
in
jmp
loop
sbb
loop
shl
in
jecxz
in
in
in
in
in
out
in
loop
in
in
in
jecxz
in
jecxz
in
jecxz
in
out
in
jecxz
in
in
in
call
loop
mov
loop
test
loop
pop
call
loop
cmpsl
in
in
in
in
in
in
loop
in
out
in
jmp
loop
call
loop
fwait
in
in
out
in
call
loop
lods
in
in
in
in
in
in
in
in
in
in
out
in
jmp
loop
ret
in
in
call
loop
sub
loop
and
loop
jecxz
loop
push
out
in
call
loop
xor
loop
mov
out
in
in
in
in
in
out
in
out
in
jecxz
in
out
in
out
in
jecxz
in
loope
in
in
in
jecxz
in
jecxz
in
loope
in
in
in
out
in
out
in
call
loop
aad
loop
aas
jecxz
in
jecxz
in
call
loop
loopne
loop
gs
in
call
loop
mov
loop
jmp
loop
jo
loop
je
loop
push
call
loop
scas
in
in
call
loop
and
loop
shl
loop
imul
loop
out
out
in
jecxz
in
jecxz
in
in
in
jmp
loop
stos
in
in
loope
in
jecxz
in
out
in
out
in
loope
in
in
in
call
loop
mov
loop
add
loop
or
jecxz
in
call
loop
loop
cli
in
in
jmp
loop
dec
in
in
out
in
loop
in
in
in
call
loop
xor
loop
cmpsb
loop
in
in
in
call
loop
dec
out
in
out
in
in
in
call
loop
cmpsb
loope
in
jecxz
in
out
in
out
in
out
in
in
in
out
in
out
in
in
in
loop
in
in
in
loop
in
jecxz
in
in
in
out
in
loop
in
loop
in
call
loop
jno
loop
arpl
loop
cmp
loop
lcall
in
out
in
jecxz
in
loope
in
out
in
loop
in
loop
in
loop
in
out
in
call
loop
cmc
in
in
in
in
out
in
loop
in
out
in
loope
in
in
in
out
in
jmp
loop
insb
loope
in
out
in
in
in
out
in
call
loop
pop
loop
in
out
in
out
in
call
loop
sti
in
in
call
loop
push
jecxz
in
loop
in
loop
in
in
in
jecxz
in
call
loop
add
loop
loop
and
in
in
out
in
in
in
loop
in
in
in
loop
in
in
in
out
in
call
loop
frstpm(287
loop
bnd
loop
gs
in
call
loop
jp
loop
jle
loop
cmp
loop
jmp
out
in
jecxz
in
out
in
loope
in
in
in
in
in
jecxz
in
loop
in
out
in
jecxz
in
loop
in
out
in
call
loop
xchg
loop
in
jecxz
in
loope
in
out
in
jmp
loop
push
loop
in
jmp
loop
xor
loop
in
in
in
in
in
call
loop
insl
out
in
in
in
in
in
loope
in
loope
in
call
loop
mov
in
in
jecxz
in
jecxz
in
in
in
call
loop
add
loop
repnz
in
jecxz
in
loop
in
loop
in
out
in
out
in
in
in
loop
in
loop
in
out
in
in
in
jmp
loop
je
loop
insb
loope
in
out
in
in
in
in
in
in
in
loop
in
out
in
out
in
jmp
loop
pop
in
in
in
in
in
in
in
in
out
in
jmp
loop
sahf
out
in
jmp
loop
mov
in
in
in
in
in
in
in
in
jmp
loop
jnp
loop
or
loop
in
out
in
jecxz
in
out
in
jecxz
in
call
loop
loop
sahf
call
loop
loope
loop
out
in
in
loope
in
in
in
out
in
loop
in
out
in
call
loop
jecxz
loop
mov
loop
loop
in
loop
in
jecxz
in
call
loop
inc
jecxz
in
out
in
loope
in
loop
in
jecxz
in
call
loop
dec
loop
in
out
in
loope
in
jmp
loop
push
in
in
call
loop
jo
loop
or
loop
mov
loop
inc
loop
in
loop
in
loop
in
jecxz
in
jmp
loop
lock
in
out
in
out
in
jecxz
in
call
loop
sbb
loop
lock
in
in
in
out
in
jecxz
in
out
in
out
in
call
loop
lret
call
loop
mov
call
loop
add
loop
push
in
in
loop
in
int3
xor
pop
xor
add
add
lods
clc
pushf
sbb
and
cmp
sub
clc
xchg
daa
clc
inc
clc
clc
jns
test
and
add
inc
add
sub
sub
outsl
ret
clc
clc
xlat
sahf
mov
iret
in
add
ret
inc
clc
mov
in
mov
jbe
cmp
or
add
jp
clc
and
add
and
add
gs
push
je
nop
insb
mov
mov
dec
scas
lock
xchg
movsl
clc
lret
bound
add
cmp
jns
loop
pusha
add
fs
loope
je
add
in
fiadds
adc
clc
mov
jp
clc
mov
add
test
data16
ret
pop
cmp
clc
cmp
cmpsl
clc
dec
dec
xchg
mov
jnp
jo
add
sar
popf
jmp
add
dec
outsb
jl
clc
fs
adc
add
dec
xchg
xchg
and
xchg
and
add
push
adc
add
add
mov
add
loope
adc
add
aam
dec
rcll
add
or
add
push
mov
xchg
pusha
add
xor
add
xor
add
jmp
pusha
add
rcrl
add
adc
mov
mov
clc
jmp
xlat
cltd
sbb
add
xchg
int3
mov
or
psraw
addr16
cmp
add
add
clc
sbb
add
or
clc
dec
cs
sti
xor
add
add
mov
or
shrl
add
test
xor
cmpsl
clc
pop
pop
jo
add
cwtl
aas
stc
lret
add
std
pop
xor
add
cmp
add
scas
and
clc
je
clc
push
add
jle
jl
clc
in
adc
add
outsb
insb
and
add
mov
ret
clc
ljmp
pop
rcl
and
add
and
add
add
add
testb
pop
gs
mov
sub
cmp
add
mov
add
out
adc
add
add
ret
ret
pop
rcrl
clc
xor
add
xlat
mov
mov
jl
clc
sub
stc
pop
sbb
clc
or
clc
xchg
sub
stc
addr16
xor
add
add
add
nop
dec
sub
add
adc
xor
add
pop
cmp
lods
in
bound
add
ss
sbb
mov
add
notb
stos
nop
jp
sahf
mov
inc
add
ret
clc
dec
sbb
jns
lods
in
mov
xchg
push
mov
or
add
xchg
push
add
mov
clc
mov
movsl
clc
xchg
cmc
xchg
imul
cmc
xchg
shll
clc
jo
add
or
vmovntps
stos
fiadds
pusha
add
jmp
clc
push
dec
fisttps
inc
clc
outsb
xchg
out
lock
and
add
clc
je
push
sbb
dec
js
imul
stos
int3
sub
pop
dec
sti
cmp
ljmp
jmp
add
cmpsl
clc
test
cmp
je
clc
mov
cmp
scas
dec
or
add
clc
lock
add
sub
fdivl
mov
dec
adc
add
sbb
loope
repz
adc
add
aam
jbe
jo
add
add
push
clc
sbb
pop
clc
mov
pushf
inc
clc
push
add
xchg
cmp
lahf
out
pop
pop
data16
enter
and
add
push
jmp
clc
test
clc
cmp
cmp
xchg
xchg
fsubl
add
shl
clc
ljmp
add
in
xor
inc
add
xor
clc
sti
sbb
inc
add
mov
clc
or
pop
loopne
xchg
aaa
dec
sbb
das
stos
push
stos
cli
add
add
ret
add
mov
fwait
and
fmuls
sbb
add
inc
add
out
in
sbb
out
cmc
lea
gs
inc
add
dec
lods
cmp
clc
dec
test
test
xchg
mov
cld
jecxz
leave
outsb
jmp
mov
lea
loopne
scas
movsb
clc
ret
divb
dec
xor
add
add
test
cmp
add
filds
clc
out
loopne
jnp
pop
or
add
hlt
pop
cmp
add
fwait
test
scas
pop
stos
dec
pop
popa
add
fildl
cmp
rcrl
pop
mov
cmpsb
clc
int3
sub
add
add
add
clc
dec
adc
pop
adc
lret
sbb
add
jecxz
sub
popf
aad
clc
adc
negl
xchg
xabort
testb
add
and
add
add
sar
clc
cmp
out
addr16
lods
inc
add
fisubrs
clc
mov
and
clc
add
add
add
imul
sahf
lahf
cmpsb
clc
enter
clc
jmp
add
sti
or
sbb
cmpsl
clc
into
jl
push
inc
clc
jno
add
cmc
xor
or
add
or
lret
push
sar
sbb
add
sar
jne
int3
cmp
xor
add
clc
ds
add
mov
clc
push
clc
mov
clc
mov
pop
das
cld
add
lahf
stc
pop
sub
in
jbe
or
add
in
xabort
fisubrs
add
xabort
or
add
out
nop
in
cmpsb
clc
dec
sub
daa
clc
push
pop
pop
mov
mov
clc
pop
clc
mov
mov
clc
push
in
imul
adc
add
stos
aaa
repnz
cmc
in
sbb
stos
xabort
cmpsl
clc
or
push
loopne
cmp
mov
loopne
int
sbb
stos
and
add
in
lret
cli
mov
test
add
add
loope
xor
add
clc
mov
add
add
clc
lahf
cmp
clc
cmp
fadd
clc
push
aaa
sub
mov
leave
ds
cmpsb
clc
addr16
mov
clc
cmp
and
add
shl
clc
add
add
mov
lock
add
jae
add
pop
push
clc
xor
fadds
bnd
in
mov
pop
mov
add
add
clc
jb
add
xchg
ds
add
into
dec
pusha
add
or
mov
clc
adc
add
mov
test
pusha
add
out
cmp
fidivrs
sub
cmp
clc
adc
add
add
xor
mov
mov
add
or
pop
je
pop
int
test
scas
mov
push
xchg
mov
cmp
ja
imul
sar
dec
jge
outsl
pop
gs
xchg
clc
lret
add
add
and
add
push
push
add
jmp
pop
clc
push
jae
add
xor
add
scas
jbe
clc
push
add
add
add
pop
cli
dec
test
mov
and
add
gs
mov
sete
add
xbegin
and
leave
inc
add
outsl
in
jo
add
cmpsl
clc
adc
add
clc
lods
cmc
xbegin
pop
pop
fistpl
add
xor
add
ret
pop
cwtl
mov
add
clc
in
je
clc
fimuls
and
add
add
lods
add
add
add
out
in
adc
add
loop
or
add
xlat
add
add
out
push
cmp
add
push
pop
add
and
push
sub
push
push
push
push
push
call
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
push
mov
push
lret
call
es
sbb
xchg
push
dec
ret
clc
sub
pop
mov
clc
lea
dec
xor
dec
scas
jno
add
clc
push
cmp
jb
add
leave
mov
cmpsb
clc
sar
clc
lods
sahf
cltd
ds
push
jno
add
out
cwtl
std
shll
add
add
data16
ja
clc
mov
pop
cmp
sbb
adc
add
packuswb
or
add
xchg
in
mov
shrb
push
add
imul
in
mov
daa
clc
mov
add
in
cs
xchg
xchg
addr16
xchg
jmp
add
negl
cmp
ret
clc
ds
dec
das
outsb
add
in
inc
clc
pop
cmc
mov
clc
inc
add
fdivl
add
cmp
mov
sbb
imul
add
xchg
mov
notl
test
faddl
add
xchg
xchg
push
add
ficoms
lcall
add
sbb
mov
mov
and
add
add
add
add
bound
add
add
inc
add
lods
loope
inc
clc
negl
cmp
stos
push
stos
xlat
and
add
int
clc
gs
push
ds
ret
clc
mov
enter
add
or
dec
cmp
add
jo
add
xbegin
test
inc
clc
inc
clc
sbb
jb
add
clc
mov
jns
adc
add
jge
clc
cmc
icebp
fbstp
add
push
push
adc
add
jmp
in
fldl
push
pop
xor
add
push
sub
jae
add
push
add
mov
clc
in
mov
int
mov
fldln2
cmp
aas
out
int3
fcoml
clc
jp
clc
xor
add
add
ficoml
fcomps
xabort
adc
dec
fistpll
clc
inc
add
and
add
jne
clc
xabort
add
inc
add
push
or
add
lock
ljmp
int
sti
pop
movsl
clc
jecxz
pop
adc
popa
add
outsl
or
pop
mov
add
rcl
bound
add
add
add
jae
add
pop
clc
dec
xor
add
int
dec
cmp
cmp
aaa
stc
jp
aas
lea
add
sub
dec
sbb
mov
mov
clc
test
pop
push
push
add
mov
out
dec
jne
add
jge
jnp
xchg
sbb
push
add
mov
push
dec
jnp
add
jb
add
clc
add
repz
insb
icebp
cmp
add
in
icebp
std
pushf
mov
add
add
ja
test
mov
cmp
add
imul
add
jl
add
add
mov
out
leave
bound
add
popf
cs
add
aas
loop
pusha
add
add
add
mov
mov
add
out
into
pop
sbb
add
aaa
or
add
lods
dec
cmp
cmc
jl
stc
jle
add
add
sub
xor
add
and
outsl
pop
loope
jp
sub
ljmp
popf
and
add
in
xor
add
ret
shrb
sahf
fistps
dec
and
add
fimuls
add
pop
mov
push
bound
add
add
xor
add
pop
mov
fstpl
mov
int3
movsb
clc
das
sub
push
add
xor
add
fiadds
sbb
fistpl
xchg
lret
xor
add
loop
add
inc
add
jl
cmp
pop
xchg
mov
popa
add
add
loope
inc
clc
popa
add
xor
add
clc
mov
and
add
pop
sti
out
sti
dec
fiadds
sub
clc
inc
clc
sar
jae
add
xor
add
lock
add
add
add
add
test
lods
dec
into
fsubrl
clc
cmp
mov
fldlg2
clc
push
fmull
jne
add
sub
clc
xchg
lret
pop
inc
add
push
add
pop
jb
add
ret
stos
gs
out
ret
add
add
popa
add
out
cmp
bound
add
scas
push
add
xabort
pushf
jecxz
clts
clc
std
movsb
clc
jnp
icebp
xchg
out
cmpsb
clc
sub
add
lea
add
xabort
clc
xor
sbb
add
dec
push
add
sbb
lods
and
add
adc
clc
imul
test
jle
lock
jns
add
push
xabort
inc
add
xor
add
clc
pop
clc
dec
imul
test
xlat
push
push
clc
push
fs
adc
add
add
or
jg
aaa
jb
add
sub
add
mov
and
add
lods
add
add
sub
add
clc
aaa
je
clc
rclb
inc
clc
cltd
lods
cmpsb
clc
call
add
into
outsl
sar
dec
xor
add
add
cltd
popf
push
add
jle
add
fimull
ja
push
inc
add
add
add
add
adc
add
clc
popf
mov
or
add
lcall
add
loope
mov
jns
clc
or
clc
aaa
call
pop
and
xor
ja
xchg
add
add
adc
add
add
jno
add
or
clc
std
fildl
repnz
add
add
enter
adc
add
clc
icebp
leave
nop
fisubl
add
cld
sub
ficompl
adc
add
fcoms
pop
js
clc
cs
add
pop
clc
ljmp
clc
sub
and
add
test
or
rcll
add
flds
scas
fsts
clc
jmp
imulb
add
add
add
lcall
daa
clc
ljmp
pop
pop
push
add
push
cmpsb
clc
xabort
clc
mov
int3
pop
xbegin
leave
push
clc
minps
pushf
out
cmc
in
out
jp
clc
aaa
inc
add
cld
mov
add
or
add
stos
mov
in
push
and
add
sbb
sar
clc
ja
loopne
adc
clc
clc
push
std
repnz
clc
arpl
add
add
push
push
clc
adc
add
push
add
ret
clc
shlb
add
and
add
clc
mov
clc
fs
jbe
add
sar
cs
int
add
cmp
dec
and
add
iret
ss
dec
inc
clc
jb
add
xor
add
ljmp
loope
sar
aam
in
sub
cmp
clc
add
arpl
add
movsl
clc
stos
clc
movsl
clc
push
jnp
out
push
jb
add
clc
jns
dec
ljmp
add
add
mov
add
sar
jo
add
add
push
push
imul
mov
clc
jg
ret
clc
add
add
clc
pushf
cmp
and
add
mov
pusha
add
idiv
ret
clc
or
add
cmc
add
dec
stc
daa
clc
xabort
xabort
dec
mov
sbb
stc
dec
inc
add
xchg
jae
add
loope
lods
mov
inc
add
cmp
test
sub
xchg
aam
clc
loope
or
add
divl
add
jns
pusha
add
cld
inc
add
sub
add
pop
out
adc
add
sar
cmp
push
cmp
add
cmp
in
out
fisttps
ret
clc
cmp
jae
add
clc
adc
clc
aas
push
adc
nop
adc
add
loopne
sbb
add
sahf
pop
je
dec
mov
clc
xbegin
lea
or
mov
js
clc
ret
clc
pop
or
jp
mov
stc
mov
add
insb
mov
add
add
pushf
fldl
int3
loopne
push
add
jno
add
mov
clc
sub
add
repz
insb
and
add
mov
add
add
clc
mov
cmp
add
adc
add
daa
clc
inc
clc
movsl
clc
push
rolb
clc
hlt
rcrl
clc
shl
clc
xchg
jle
clc
cmp
clc
or
push
mov
clc
mov
cmp
mov
add
add
add
add
and
add
insl
dec
mov
adc
popa
add
ja
clc
imul
add
add
dec
pop
ljmp
clc
into
cmp
clc
bound
add
mov
bt
in
call
mov
nop
push
movd
clc
shll
shrd
data16
sbb
add
mov
pop
shrb
sub
clc
dec
cmc
lods
rcll
mov
clc
dec
push
sub
clc
sub
ret
clc
jp
clc
ss
add
popf
mov
or
xchg
mov
clc
xchg
and
add
mov
clc
insl
dec
or
or
add
add
aaa
sub
fidivs
add
clc
cmp
push
add
fdivrs
and
add
add
dec
jae
add
pushf
mov
cmp
mov
leave
ljmp
sub
bound
add
clc
xor
add
inc
clc
data16
outsb
and
add
iret
xor
inc
add
add
add
repnz
das
fstp
jo
add
xchg
add
add
es
xbegin
add
or
clc
out
push
add
in
repnz
clc
shlb
add
add
loop
arpl
add
sarb
rcll
add
add
clc
pop
mov
loop
push
mov
add
mov
arpl
add
addr16
adc
add
cli
inc
clc
mov
add
sub
add
mov
mov
mov
clc
mov
clc
push
lods
adc
add
rol
clc
ret
clc
lods
and
add
mov
ja
and
add
cwtl
fwait
popa
add
pop
lods
lahf
sti
lods
and
add
pop
xchg
test
mov
add
std
iret
dec
jo
add
add
push
clc
push
or
cmpsb
clc
fs
call
add
xor
add
clc
std
dec
stc
in
pop
in
xchg
add
add
fs
or
sbb
xbegin
add
and
add
popa
add
dec
in
es
pusha
add
stos
sub
iret
fcoms
cltd
sub
clc
xchg
in
mov
add
push
clc
leave
popa
add
push
add
iret
mov
lcall
add
out
daa
clc
pop
fldl
add
ja
clc
clc
add
nop
clc
jae
add
clc
xchg
scas
dec
outsb
int3
mov
xor
add
add
push
lods
mov
jle
adc
insb
hlt
mov
clc
and
pop
dec
into
pop
fs
or
add
sub
add
and
add
add
mov
push
jle
add
add
or
add
add
test
add
pop
mov
jmp
add
push
add
push
or
xor
add
mov
push
add
clc
sti
inc
clc
sbb
clc
mov
mov
add
icebp
scas
and
add
add
int
clc
push
inc
add
xchg
pusha
add
cmpsb
clc
xchg
fstl
add
add
adc
add
add
pushl
add
fdivr
cmpsl
clc
sub
mov
add
aad
clc
jb
add
mov
add
dec
movsb
clc
lcall
pop
push
add
ja
and
add
cmp
mov
lret
bound
add
add
mov
cmp
ret
clc
jmp
add
mov
cmp
mov
das
or
push
inc
clc
gs
cmp
test
call
xchg
es
fbstp
ja
clc
jg
push
jbe
add
in
mov
xabort
add
push
or
loopne
scas
sti
mov
add
add
add
daa
clc
out
add
pop
insl
mov
ss
xchg
inc
add
jp
sti
ret
clc
mov
inc
clc
std
and
add
add
test
inc
add
push
fcoml
add
ljmp
jle
clc
mov
add
sar
add
ret
das
inc
add
jmp
add
stos
cmp
add
push
lcall
insl
ret
clc
mov
stos
cmp
sub
cwtl
xbegin
lods
xchg
push
add
mov
lock
xchg
mov
scas
ret
clc
shll
add
add
xchg
sub
clc
test
ljmp
sub
mov
push
shlb
clc
pop
jbe
insb
lea
add
bound
add
xchg
inc
add
add
jge
addr16
icebp
in
dec
push
push
push
and
xor
add
insb
jle
or
int3
movsb
clc
pop
xlat
ss
clc
jae
cmpsl
clc
lods
pop
xchg
pop
out
int
sbb
clc
das
mov
add
aad
ret
add
inc
add
seta
sar
xchg
fwait
ja
cmp
arpl
add
cmp
mov
clc
out
adc
and
add
add
fldenv
cli
jnp
add
jne
xchg
cmp
add
ljmp
add
xor
add
mov
test
inc
clc
dec
dec
dec
icebp
clc
xbegin
clc
loope
push
cld
aas
mov
fnstsw
add
jns
jb
add
clc
fistpl
outsb
jle
cld
mov
adc
add
pop
out
jge
clc
dec
push
add
movsl
clc
mull
pop
jb
add
jp
jns
insl
sti
cltd
mov
fstp
mov
clc
adc
clc
sbb
stos
sbb
and
add
cltd
nop
adc
jnp
clc
cmp
scas
sbb
sbb
clc
jns
clc
cmp
xor
data16
std
push
cmp
xlat
js
dec
cmp
add
idivl
add
pop
imul
push
bound
add
xor
add
clc
lea
in
sub
dec
cmpsl
clc
stc
sub
add
xlat
or
dec
clc
mov
cs
fistl
add
add
clc
roll
clc
insl
mov
sbb
cmp
and
inc
add
daa
clc
adc
add
add
cmpsb
clc
push
xlat
cmpsb
clc
loope
add
hlt
and
add
add
and
add
divb
hlt
test
clc
sub
add
or
mov
jno
add
sbb
clc
imul
add
lea
xchg
je
int3
divb
mov
scas
sbb
syscall
clc
mov
pop
cwtl
xchg
sbb
nop
mov
in
mov
call
add
add
mov
clc
sbb
fisttpll
clc
jle
clc
mov
add
popf
insl
stos
push
inc
add
lcall
out
adc
test
clc
es
xchg
shrb
add
add
or
push
xor
pop
cwtl
test
out
cs
clc
mov
push
mov
clc
jecxz
push
outsl
sbb
add
mov
out
mov
ret
clc
push
mov
clc
xabort
clc
sub
add
movsl
clc
cli
sub
clc
ret
mov
shrb
xor
add
sub
clc
ret
clc
cmp
add
add
test
cmp
js
std
into
push
lahf
adc
aad
add
aas
xchg
test
popa
add
in
mov
ret
clc
pop
clc
into
push
push
add
bound
add
add
dec
add
add
pop
inc
add
dec
in
fwait
lock
clc
cmp
cmp
sub
clc
push
add
dec
xor
and
add
nop
and
add
into
loope
pop
mov
clc
mov
mov
add
ljmp
cmp
clc
lahf
inc
add
mov
cmp
add
mov
add
sbb
clc
popf
mov
mov
add
call
icebp
cs
adc
add
inc
add
aaa
pop
xbegin
jnp
add
xchg
pop
push
inc
add
push
in
mov
test
or
xchg
fbld
add
or
daa
clc
inc
clc
dec
imull
jnp
bound
add
add
add
aas
jb
add
jle
clc
je
test
dec
dec
jl
nop
inc
clc
xabort
pop
popf
dec
push
jmp
clc
and
add
nop
xchg
scas
test
xor
add
lods
in
sub
add
rcrl
jl
add
dec
out
popa
add
mov
dec
jp
jg
clc
aam
and
sbb
dec
clc
adc
add
add
mov
clc
js
xchg
fnstsw
ss
aad
add
sbb
call
jg
adc
add
enter
mulps
cmp
sbb
add
inc
clc
sbb
mov
add
add
clc
pcmpeqb
add
push
add
and
add
add
sar
repz
mov
sub
popa
add
mov
loope
cld
add
add
clc
aas
xchg
aad
aas
mov
push
xchg
adc
adc
es
repz
loopne
adc
clc
bound
add
filds
add
sub
xchg
sahf
std
inc
add
pusha
add
pop
add
add
add
push
add
xbegin
adc
add
jns
dec
enter
and
add
xor
add
hlt
int3
adc
add
mov
and
add
clc
xchg
sbb
add
mov
clc
sbb
jns
cmc
leave
push
rcrb
add
add
cmp
clc
and
stos
repnz
cs
add
clc
and
add
movsb
clc
adc
add
clc
push
clc
scas
mov
jge
xchg
fdivs
in
inc
add
outsl
loopne
outsl
fwait
aas
push
pusha
add
xchg
loopne
fcoms
lcall
and
add
add
idivl
cli
jne
clc
or
jle
clc
push
psrlw
insb
aad
dec
sbb
clc
add
add
cld
cwtl
cmpsb
clc
cmpsb
clc
dec
std
inc
add
xchg
ja
add
sbb
dec
cmp
xchg
pusha
add
rcll
mov
or
mov
inc
clc
cs
push
add
add
outsl
mov
shl
clc
shll
push
xchg
sbb
cmp
xchg
fsubrl
add
data16
mov
sarb
xchg
jb
add
mov
mov
cmp
add
push
add
in
leave
add
cmp
add
xbegin
clc
push
or
imul
clc
sub
enter
jg
push
add
inc
add
icebp
jnp
movsl
clc
stos
push
and
add
or
add
es
outsl
lods
and
ds
clc
dec
mov
add
mov
clc
cmp
leave
fildll
popf
mov
mov
cmp
mov
xchg
bound
add
ljmp
mov
add
jg
add
jne
cmc
sub
bound
add
imul
test
fisubl
add
clc
sar
push
lahf
pop
sub
add
push
jbe
jg
add
jae
add
clc
daa
clc
cs
clc
int3
dec
out
add
add
rclb
clc
in
ljmp
or
clc
imul
or
clc
loop
inc
clc
inc
add
in
push
add
pusha
add
push
add
push
add
pop
sar
clc
xchg
xchg
fwait
mov
push
shrl
and
add
mov
imul
movsl
clc
dec
out
xabort
clc
pop
add
mov
test
push
push
add
call
sbb
bound
add
add
cmp
sbb
xor
add
movsl
clc
cmp
clc
jl
sub
stos
mov
xor
clc
or
xchg
data16
testb
filds
add
jae
add
sahf
notb
cmp
sar
push
add
addr16
sahf
insb
addr16
jno
add
push
clc
cmp
or
cmp
movsb
clc
imul
clc
inc
add
outsb
mov
add
xor
clc
mov
fildll
ja
add
mov
add
inc
clc
mov
lret
push
add
pop
clc
push
clc
cmp
clc
mov
mov
clc
add
pop
xchg
pop
roll
push
clc
mov
add
mov
outsl
lret
outsb
fwait
mov
add
mov
sbb
mov
outsb
mov
clc
fwait
aad
push
ljmp
dec
mov
xbegin
push
clc
mov
mov
clc
inc
add
cmp
push
mov
add
jne
jno
add
sub
mov
clc
neg
mov
mov
add
sbb
add
aas
movsb
clc
outsb
jb
add
clc
sub
mov
sub
add
or
add
add
add
cmp
add
mov
repnz
mov
inc
add
cmp
add
cmp
mov
mov
push
fwait
mov
and
add
clc
mov
clc
test
add
sar
pop
cmp
clc
ret
clc
cmp
pop
dec
pushf
jecxz
test
inc
add
mov
clc
fdivp
add
mov
jecxz
hlt
pop
clc
loop
or
xbegin
xchg
cmp
add
jl
add
add
add
add
add
dec
sbb
or
add
pop
push
ficoml
add
clc
mov
dec
loop
jb
add
jb
add
mov
clc
es
xor
clc
and
add
dec
loopne
jle
int
fcomps
add
mov
jge
pushf
xchg
push
add
or
test
add
cmp
mov
cmp
inc
clc
popa
add
push
clc
push
test
shlb
add
jl
jbe
cld
xor
add
repnz
ss
outsl
xbegin
xchg
out
mov
jp
mov
add
aad
add
fisttpl
xor
add
enter
add
jbe
add
pusha
add
stc
repnz
clc
sar
xchg
loopne
jl
clc
add
add
scas
sub
add
jp
mov
cmp
add
dec
dec
insl
in
out
xchg
ret
clc
iret
mov
add
add
add
clc
sub
xchg
sar
or
clc
in
inc
clc
xchg
sub
mov
dec
ljmp
cli
adc
cmp
clc
ficomps
add
cmp
aad
int
clc
movsl
clc
daa
clc
cmp
or
test
daa
clc
cmc
inc
clc
mov
sbb
lret
and
add
ret
clc
jae
add
dec
fcmovne
arpl
add
clc
popa
add
mov
ret
add
sar
clc
cld
out
add
add
xor
add
push
xor
notl
mov
clc
das
addr16
jmp
pop
lret
insb
add
sbb
aaa
jp
bound
add
clc
mov
clc
incl
add
aad
inc
clc
xchg
sbb
mov
and
dec
or
cli
mov
int3
and
add
mov
clc
mov
cli
add
pop
arpl
add
incl
add
outsl
add
add
xchg
inc
add
ret
add
out
mov
add
sub
jb
add
and
cltd
rcll
add
addr16
or
add
add
and
push
xchg
fwait
fwait
mov
mov
add
and
add
and
add
push
add
f2xm1
insl
add
add
call
add
sti
pusha
add
or
add
add
add
sub
inc
add
scas
mov
clc
add
add
cmp
clc
push
nop
push
add
insl
push
sbb
mov
lock
jo
add
mov
pop
xlat
loopne
and
add
in
mov
xchg
lret
addr16
xchg
lock
or
lods
cli
or
loope
push
stos
mov
add
add
mov
mov
mov
out
dec
fsubr
clc
test
and
add
lret
sub
enter
sbb
loop
cmp
clc
xor
adc
add
ficomps
jnp
stos
fcomip
pusha
add
pop
push
aad
inc
clc
inc
clc
hlt
cmp
adc
clc
push
jb
add
add
or
cmp
add
stc
or
loop
fiaddl
add
inc
add
fldenv
add
add
add
xabort
add
mov
clc
xor
add
je
sar
add
cs
dec
nop
push
add
cmp
clc
stos
xchg
das
pop
std
mov
cli
xbegin
imul
add
add
cmp
pusha
add
repz
mov
stc
add
add
add
cmp
clc
enter
aam
add
add
cltd
loop
jp
ret
clc
leave
fyl2x
xor
clc
lret
inc
clc
add
add
sti
loope
dec
lods
pushf
sahf
xor
add
outsb
ss
cmp
mov
mov
add
or
repnz
add
xor
add
clc
sbb
lock
in
mov
hlt
scas
psubq
clc
fscale
es
or
mov
stos
das
mov
sbb
mov
addr16
icebp
cld
data16
gs
popf
mov
clc
cmp
inc
add
and
add
clc
xor
sahf
sbb
cmp
out
gs
pop
push
add
decl
js
adc
and
push
clc
pop
bound
add
add
add
pop
test
in
pop
adc
add
add
clc
jne
vfrczpd
out
int3
or
ret
jecxz
and
add
add
pop
aam
push
add
fadd
clc
cmp
outsb
enter
pop
xor
add
stos
mov
add
lock
jns
pop
ss
jmp
add
out
insb
mov
jl
add
pop
repnz
xchg
das
in
sar
aaa
sbb
add
add
dec
jl
clc
rcl
je
outsl
fidivl
push
adc
add
add
mov
clc
stos
adc
add
mov
add
add
xor
sub
and
and
clc
sub
clc
cmp
ljmp
pop
xor
jno
add
pop
loope
jbe
add
daa
clc
int3
cs
add
insl
sbb
test
cs
add
or
mov
int3
fcompl
add
leave
in
popf
std
arpl
add
add
sbb
mov
add
mov
in
cmp
sbb
clc
stos
cwtl
jl
cmp
clc
aas
fdivr
cld
pop
cmp
clc
ret
clc
inc
add
pop
pop
arpl
add
add
mov
add
bound
add
loope
pusha
add
xor
adc
clc
xor
clc
mov
mov
mov
out
inc
add
xor
add
mov
mov
xchg
lock
add
clc
insl
xchg
fs
push
jb
add
hlt
dec
daa
clc
sahf
pop
pop
xchg
mov
cltd
fwait
sub
cmpsb
clc
mov
fsts
mov
test
cs
push
fstpl
fyl2xp1
pop
shrb
clc
int
rorb
adc
add
push
push
xbegin
push
inc
clc
repnz
add
cmp
xor
clc
in
pop
lock
clc
cli
mov
xchg
mov
dec
cmp
ja
test
xchg
push
movsl
clc
das
jae
add
dec
inc
clc
dec
xchg
scas
cld
mov
cs
clc
cwtl
pop
pop
dec
push
add
shl
clc
repz
xchg
shrb
or
sub
add
mov
mov
add
mov
dec
inc
add
cld
add
cmp
adc
jle
outsl
pop
je
cmp
clc
call
pop
inc
add
jo
add
add
xchg
test
cmc
xlat
push
add
fwait
push
add
loopne
repz
clc
xchg
fs
mov
add
aas
or
call
rcll
inc
add
insl
out
ret
clc
lods
xchg
push
adc
add
add
aad
add
daa
clc
int
add
sbb
sbb
add
and
jp
test
clc
test
push
mov
adc
add
cwtl
cmc
cmp
leave
div
pusha
add
xchg
dec
das
xchg
stos
iret
mov
movsl
clc
movsb
clc
cmp
into
js
add
std
dec
repz
into
pop
inc
clc
mov
je
add
into
divb
add
jb
add
clc
mov
je
jb
add
jae
add
pop
jmp
mov
clc
inc
add
mov
add
clc
push
and
ret
clc
decb
dec
sub
clc
rcrl
mov
fcompl
lea
add
mov
pop
mov
adc
add
clc
aad
clc
fsub
clc
and
add
insl
push
add
push
jno
add
stc
insl
outsb
push
add
sarl
es
idivb
pop
insb
cltd
adc
add
push
add
jno
add
dec
inc
clc
enter
sub
xabort
mov
dec
fistps
mov
or
mov
add
clc
mov
clc
mov
xor
add
add
add
adc
add
into
add
add
add
add
aas
dec
imul
clc
pop
nop
lods
sbb
add
inc
add
lods
shlb
add
jae
add
ret
clc
push
add
jne
mov
add
cmp
aas
mov
add
add
inc
add
sti
lcall
daa
clc
popf
xchg
shl
clc
pop
in
inc
add
or
cmp
add
add
lods
inc
add
mov
rclb
mov
mov
push
add
clc
out
jecxz
mov
sbb
or
pop
jne
aas
dec
mov
or
xor
add
ljmp
clc
push
sub
add
lcall
add
add
mov
out
mov
add
pop
clc
dec
sar
add
daa
clc
jns
clc
mov
inc
clc
pusha
add
mov
arpl
add
add
rcr
mov
add
hlt
js
push
add
dec
divl
add
sbb
daa
clc
cmp
push
add
gs
cwtl
jnp
xlat
xor
xchg
cltd
loopne
outsl
lock
sbb
mov
adc
add
dec
pop
jmp
xchg
sti
lods
stos
cmp
clc
push
lret
test
sub
pop
pop
mov
fwait
cmp
jecxz
lea
clc
in
fldl
add
pushf
sbb
dec
popa
add
lods
int3
or
add
push
pop
clc
inc
clc
push
sbb
clc
outsl
xchg
mov
call
imul
cmp
data16
xbegin
add
jns
fcomip
add
add
add
aas
xchg
xchg
adc
add
fstl
adc
add
aam
clc
and
add
ja
int
jg
or
add
clc
call
add
pop
adc
clc
xor
add
loop
xlat
int3
cmp
aad
ja
daa
clc
scas
push
add
mov
clc
aam
adc
add
mov
in
xor
add
clc
xchg
int3
jmp
lahf
xabort
cs
inc
clc
and
jmp
test
add
mov
cmp
clc
xchg
mov
add
sbb
jne
clc
jecxz
push
and
das
mov
pop
imul
cmc
bound
add
xor
add
pop
leave
pop
fdivl
add
mov
clc
mov
aad
clc
mov
clc
push
stc
mov
clc
and
loop
or
add
add
push
add
popa
add
cmp
clc
scas
test
dec
sar
clc
cltd
lret
add
cmp
int
clc
loope
pop
mov
or
xabort
add
dec
shrb
mov
enter
push
push
clc
mov
cmp
jl
clc
inc
add
jg
out
cmp
clc
push
clc
insl
scas
dec
mov
cmp
dec
cmp
call
jmp
fcmovnb
clc
push
or
fnstsw
mov
clc
lods
addr16
sub
add
shlb
clc
call
add
clc
mov
shll
clc
lahf
movsl
clc
out
into
leave
sahf
cld
mov
add
jge
cwtl
jecxz
outsl
ret
clc
loope,pn
scas
negl
mov
cmp
clc
xor
add
inc
clc
nop
jae
add
add
add
clc
pop
mov
and
add
clc
cmp
jmp
mov
inc
add
movsl
clc
push
add
in
adc
add
clc
mov
inc
clc
nop
dec
mov
clc
aam
add
repnz
dec
cmp
sarb
clc
mov
push
xchg
cmp
add
add
mov
and
add
adc
add
daa
clc
mov
stc
in
lods
imul
push
add
inc
clc
sbb
clc
stos
stos
fsubrs
sahf
pop
popf
or
sbb
mov
and
add
xor
add
clc
push
pop
clc
shlb
jbe
fwait
test
clc
imul
adc
add
clc
cltd
cmp
popf
or
adc
add
add
mov
jle
clc
sub
lret
sub
fcmovu
xchg
test
jp
mov
add
add
pop
sbb
add
test
es
add
add
inc
clc
fnstenv
dec
pop
loop
test
clc
fisubl
imul
add
mov
mov
loopne
cs
cmp
or
sbb
mov
lock
dec
out
lods
or
add
or
cwtl
pusha
add
in
jp
clc
sub
add
cmp
pop
clc
repz
xchg
mov
jae
add
xchg
clc
mov
sbb
mov
mov
cmpsb
clc
xchg
movsl
clc
push
clc
push
adc
xchg
out
popa
add
and
add
cltd
std
jle
cmp
pop
push
xchg
push
fstpl
inc
add
cmc
and
mull
xchg
cs
clc
sub
mov
mov
out
cmp
lods
inc
add
int
clc
inc
clc
decl
adc
add
fnstsw
loop
push
inc
add
lahf
fwait
push
add
jl
clc
cwtl
cld
cmp
aaa
jae
add
clc
test
test
aas
cmp
mov
clc
in
dec
mov
sbb
cwtl
std
outsb
mov
push
adc
mov
adc
add
sub
fcoms
add
mov
repnz
adc
add
fimuls
add
add
xchg
mov
lea
add
mov
movsb
clc
push
add
push
sbb
cmp
clc
fbld
add
inc
clc
or
add
out
insl
pop
cmp
imul
clc
jp
clc
popa
add
cmp
and
add
adc
add
jmp
ljmp
or
mov
add
clc
bound
add
mov
xor
add
ret
clc
jbe
dec
mov
push
jp
push
inc
clc
sbb
mov
add
mov
dec
ja
add
imul
clc
outsl
movsl
clc
cmp
clc
mov
into
adc
ss
pop
mov
mov
push
add
cwtl
aad
sub
bound
add
stos
pusha
add
jp
clc
cmp
add
mov
add
and
add
clc
xabort
and
jo
add
clc
fadds
clc
popf
mov
loope
xchg
xchg
sahf
pop
or
clc
dec
xor
cmp
add
clc
clc
nop
mov
jnp
ficoml
dec
sub
xor
pop
out
mov
add
mov
xchg
add
add
pop
ds
popa
add
mov
add
aas
daa
clc
jg
mov
mov
lea
sbb
add
or
clc
nop
adc
add
add
cmp
shlb
add
pop
and
add
mov
addr16
push
add
lods
jle
xor
add
clc
lods
into
mov
inc
clc
xchg
fwait
shll
push
or
add
mov
push
inc
add
in
mov
clc
push
add
arpl
add
ljmp
adc
call
add
add
arpl
add
add
cld
push
das
adc
add
sub
mov
aas
mov
add
add
sbb
clc
and
add
jmp
clc
and
mov
cmp
bound
add
aad
ret
clc
push
dec
adc
add
sub
in
push
add
fcmovnb
clc
aam
jle
por
cmp
clc
sar
and
push
adc
add
sub
cmpsb
clc
fwait
mov
clc
cwtl
inc
clc
bswap
mov
dec
fcmovnb
clc
xor
add
cmp
std
add
add
mov
inc
add
out
clc
aaa
into
xbegin
mull
xchg
cwtl
cmp
mov
add
shl
mov
add
sahf
je
clc
pop
add
add
add
int3
cmp
add
mov
clc
mov
xor
add
add
xor
add
push
add
test
push
add
jns
out
js
cmpsb
clc
push
jg
mov
clc
in
and
clc
pop
sahf
inc
clc
mov
lea
leave
or
push
sbb
ljmp
fcomps
add
gs
hlt
jp
dec
dec
lcall
outsb
mov
pushf
jg
add
adc
add
sahf
or
add
or
cmp
sub
es
jbe
sbb
or
add
xchg
cvtps2pd
jne
xchg
xchg
fwait
adc
adc
add
xor
imul
dec
mov
clc
addr16
dec
sub
lcall
jl
enter
jl
clc
and
add
cli
sbb
add
cmc
icebp
xchg
cmp
add
std
scas
daa
clc
js
add
add
cwtl
shl
clc
fists
add
mov
cmp
inc
clc
mov
cmp
mov
mov
clc
cmp
jmp
xabort
cmp
and
add
sub
clc
mov
sbb
push
and
add
add
xor
add
lods
sub
clc
inc
clc
popa
add
int3
mov
jmp
cmp
add
add
inc
clc
adc
add
sub
pop
test
add
jns
add
pop
fstpt
mov
clc
cmp
loopne
ret
mov
ja
adc
add
clc
jg
lret
add
data16
xor
clc
fstps
into
sbb
add
jne
clc
pop
mov
adc
add
test
xchg
mov
jp
mov
cmpsb
clc
mov
sub
in
int
rcrl
cmp
add
fs
icebp
and
lret
mov
cmp
dec
jg
clc
cmp
mov
fcomps
clc
lods
ret
clc
adc
xchg
pop
bound
add
out
push
dec
cmp
xor
add
imul
cwtl
fucom
clc
sbb
and
add
jbe
sar
add
inc
add
or
jbe
add
push
sub
movsl
clc
pop
call
add
push
push
add
or
jp
es
inc
clc
mov
add
bound
add
clc
rorl
aad
bound
add
or
add
js
mull
mov
sar
or
cmpsl
clc
xchg
cmp
clc
and
add
push
jbe
ljmp
mov
sbb
clc
lcall
mov
clc
push
add
call
sub
add
add
or
add
add
add
pop
adc
add
xchg
aad
jb
add
jecxz
push
mov
lret
loope
setnp
outsl
pop
push
add
loop
pop
pop
clc
cmp
add
in
mov
add
call
lahf
pop
xor
fnstcw
push
in
bound
add
clc
mov
xlat
push
add
jl
mov
data16
sar
xchg
icebp
xchg
mov
mov
cmp
add
add
add
or
add
data16
cmp
std
pushf
push
add
jnp
adc
add
imul
clc
sub
or
pop
jecxz
stos
push
clc
cmpsl
clc
pop
xchg
enter
in
mov
clc
fs
in
xor
sub
add
cmp
mov
add
fucom
clc
stc
mov
add
jge
pop
cwtl
adc
clc
adc
add
clc
dec
ret
clc
stos
xor
add
mov
cmp
add
pop
nopl
xchg
pushf
hlt
cmp
add
mov
sar
push
add
es
sub
cmp
clc
or
xchg
mov
rol
clc
sarb
imul
nop
stos
jns
cwtl
xlat
jle
clc
cmp
into
mov
clc
shrl
mov
jb
add
add
inc
clc
aaa
push
ror
jae
add
add
loopne
inc
add
mov
clc
push
add
push
mov
add
jg
fdivs
clc
mov
test
out
je
clc
hlt
dec
addr16
sar
fld
clc
mov
clc
ss
add
ret
loopne
loop
mov
dec
addr16
stos
daa
clc
mov
je
clc
sub
mov
add
das
adc
add
cmpsl
clc
cmpsl
clc
adc
add
clc
sub
ds
es
stos
pminsw
jle
add
fbstp
add
cmp
sub
cmp
clc
clc
cmc
fs
dec
pop
in
bound
add
and
add
rolb
add
repnz
test
fcoml
dec
mov
jl
clc
lcall
dec
adc
add
add
push
add
in
mov
aas
clc
xchg
push
pop
and
add
and
cmpsb
clc
std
fcmovne
out
mov
pop
sarb
sub
add
shrl
jmp
add
enter
sbb
add
jno
add
sbb
or
fstpl
dec
pop
sbb
int3
sub
inc
clc
xchg
in
icebp
aaa
sar
outsb
fdiv
data16
fwait
jle
clc
cmp
clc
sar
pop
xchg
jl
clc
popf
popf
lret
mov
inc
clc
aas
sub
jae
add
data16
icebp
lea
es
adc
in
aas
or
add
aam
clc
call
add
pop
cmc
mov
clc
cmpsb
clc
jnp
sar
cmp
add
enter
clc
lods
outsb
aad
pusha
add
int3
pop
clc
rcll
cld
add
add
add
pop
fs
add
add
mov
mov
mov
data16
cld
jb
add
pop
and
and
add
inc
add
rclb
add
clc
pop
cmp
add
add
mov
lahf
fdiv
sti
pop
clc
or
jl
dec
test
add
aas
int
lahf
cmp
inc
clc
xor
add
adc
add
into
push
stc
adc
add
mov
and
add
mov
and
or
repnz
divb
add
cli
add
add
mov
cmp
or
ficompl
adc
add
add
scas
mov
sub
mov
mov
clc
insb
stc
mov
xchg
stos
aas
dec
mov
add
cmp
imul
add
jae
add
lret
clc
xchg
jp
sar
and
in
cmp
add
insl
inc
clc
jo
add
insl
mov
fucomp
pop
clc
jle
add
fwait
adc
clc
sub
cmc
adc
add
mov
cli
je
pop
inc
clc
incl
test
daa
clc
jge
and
pop
clc
ds
xbegin
cmpsl
clc
xchg
mov
add
pusha
add
jb
add
clc
pusha
add
stos
movsl
clc
loope
xor
add
adc
add
stos
pop
mov
clc
mov
imul
sub
lahf
sbb
movsb
clc
lret
sub
sub
movzwl
clc
jge
movsb
clc
and
add
clc
sar
clc
imul
sbb
clc
mov
clc
push
add
pop
jp
ds
add
call
clc
add
or
clc
dec
mov
add
inc
add
pop
add
je
or
arpl
add
jnp
sub
dec
aas
aas
cwtl
mov
movsb
clc
pop
loopne
inc
clc
jmp
mov
or
add
loop
mov
sub
push
add
sahf
add
add
fwait
leave
out
mov
cmp
add
dec
sub
imul
mov
mov
inc
clc
cmpsl
clc
jne
in
shll
xchg
push
pop
xchg
lods
stos
fwait
push
lcall
xchg
mov
jo
add
add
cltd
sar
sub
mov
sub
lret
add
add
scas
adc
add
sahf
icebp
sbb
clc
fs
or
popf
fistl
cmp
cmc
cli
jbe
jp
hlt
mov
add
icebp
xor
add
leave
faddl
clc
outsb
sbb
sub
cmp
add
shlb
add
outsb
xchg
push
add
mov
mov
mov
clc
add
adc
add
jecxz
in
lcall
jecxz
cmp
clc
das
imul
es
push
add
dec
jecxz
cmpsl
clc
cmp
add
cmp
push
adc
clc
pop
jno
add
fimull
sub
add
add
mov
or
add
or
sti
mov
push
or
movsl
clc
cmp
add
faddp
clc
sbb
add
mov
xor
and
add
cmp
clc
xchg
out
cmp
clc
cmpsl
clc
in
js
inc
clc
pop
xabort
loopne
lea
or
add
cmp
pop
int3
xchg
sbb
add
bound
add
add
add
clc
sub
clc
stos
bound
add
sahf
mov
add
clc
es
push
clc
push
clc
xchg
out
cmp
inc
add
push
mov
clc
mov
arpl
add
fdiv
add
xchg
sahf
nop
cmp
clc
xlat
mov
clc
test
out
mov
inc
clc
push
into
mov
add
mov
clc
faddl
add
sbb
cmp
out
leave
inc
clc
shll
add
das
cmpsb
clc
imul
add
scas
xchg
sti
xor
add
mov
inc
add
and
add
or
fdivl
add
lcall
clc
cld
cmp
clc
pop
lea
data16
inc
clc
insl
lret
clc
mov
nop
xchg
adc
add
out
sar
clc
sar
cmp
push
add
es
push
gs
jne
mov
cmp
repz
cmp
outsb
fists
add
add
int3
pop
xchg
and
clc
jl
int3
xabort
clc
jg
dec
test
mov
pushf
aad
dec
cmp
cmp
mov
ds
aas
push
sub
clc
lods
fsts
pop
call
clc
inc
clc
jmp
fcomp
pop
push
pop
bound
add
js
add
or
sar
clc
push
clc
jle
add
pop
leave
adc
add
cmc
ret
clc
cli
sub
pop
mov
fdiv
das
out
inc
clc
adc
add
inc
clc
clc
cmp
add
movsl
clc
incl
js
movups
add
and
add
jb
add
clc
mov
clc
repz
add
add
cmpsb
clc
sbb
insl
cli
push
lock
clc
ret
xor
add
jge
jg
imul
or
jl
cmc
inc
add
loope
sar
mov
inc
clc
cmp
add
outsb
aad
aas
xor
add
add
insl
repnz
clc
sar
add
outsl
scas
es
sbb
outsb
getsec
int
pushf
sub
clc
cmpsb
clc
jae
add
clc
lahf
sahf
pop
dec
inc
clc
stos
inc
add
lret
fs
push
add
clc
jge
push
pop
data16
stos
ljmp
clc
test
call
add
dec
clc
xor
sbb
clc
inc
clc
loope
xor
xchg
pushf
pop
test
add
jp
pushl
sbb
adc
add
mov
inc
add
loope
cmp
clc
out
jb
add
add
jae
add
rcll
add
ss
into
xabort
arpl
add
add
add
fwait
push
add
jno
add
add
fnstsw
sti
ds
add
lret
xchg
aam
xor
add
mov
mov
stos
enter
pop
clc
ja
clc
xor
add
aaa
mov
clc
aad
mov
insb
dec
lods
lret
xchg
rolb
clc
jp
clc
arpl
add
add
clc
sar
add
sub
inc
clc
out
ficompl
mov
clc
aas
sbb
adc
add
clc
add
add
clc
xchg
jp
and
add
add
cmp
in
mov
clc
mov
clc
adc
add
add
clc
push
add
push
repnz
add
add
add
out
xchg
and
add
out
add
add
adc
clc
cmp
idivl
sub
imul
pop
sub
xor
add
clc
xabort
clc
adc
add
and
add
add
in
mov
pushf
rcll
clc
iret
xchg
sub
clc
loope
jmp
mov
push
clc
decl
loop
add
add
pop
lods
hlt
sti
cmp
add
push
add
add
add
clc
outsb
dec
mov
cmp
clc
imul
jo
add
mov
or
add
or
clc
sbb
xchg
adc
add
repnz
xchg
adc
clc
cmc
daa
clc
out
dec
std
dec
fwait
jge
clc
and
add
mov
clc
scas
cmp
add
js
clc
popa
add
dec
mov
mov
pop
xbegin
add
add
mov
pop
and
add
out
in
or
clc
push
clc
out
clc
gs
es
sub
clc
divl
sar
add
into
mov
popa
add
pop
repz
pop
clc
shll
and
add
xchg
icebp
sub
add
add
leave
outsl
jne
xor
add
mov
gs
in
ret
clc
out
sub
mov
clc
pop
loop
push
clc
mov
out
add
fs
jp
enter
rorl
push
mov
pop
pop
rorl
daa
clc
out
idivb
add
add
add
dec
push
add
or
fnstenv
clc
mov
clc
jle
add
hlt
mov
inc
clc
loopne
jmp
xchg
jbe
jg
add
add
add
lods
sbb
adc
add
clc
test
adc
add
add
add
mov
clc
mov
add
cmp
into
test
pop
test
inc
add
adc
add
fcom
test
xchg
ret
push
clc
mov
push
and
add
xlat
mov
test
clc
pop
rcll
clc
mov
xchg
popa
add
xchg
jne
clc
add
add
pop
lret
rcl
mov
add
cmp
sub
xchg
jno
add
or
jecxz
dec
and
loop
cmpsb
clc
in
xchg
lret
loope
jge
mov
clc
in
into
dec
shlb
inc
add
mov
mov
add
add
lods
mov
outsl
mov
add
out
std
mov
clc
add
add
cwtl
scas
jecxz,pn
dec
dec
cmp
add
icebp
aam
clc
jge
pop
test
cld
sbb
mov
fldcw
pop
clc
adc
add
and
iret
sub
inc
add
out
mov
clc
cli
mov
clc
push
imul
sub
clc
iret
pop
and
daa
clc
fdivl
mov
xbegin
mov
add
mov
sub
fwait
add
fisubl
xor
add
mov
push
or
ljmp
push
xbegin
mov
lods
das
scas
mov
pop
hlt
shrl
add
enter
dec
mov
clc
clc
hlt
jle
clc
jae
add
outsl
push
clc
outsl
js
movsl
clc
xchg
cmp
add
ret
clc
xor
clc
sbb
das
mov
clc
loopne
mov
push
cmp
clc
sbb
cs
clc
xchg
adc
add
leave
out
cld
ret
cmp
xor
push
mov
clc
int3
push
dec
psubq
push
xchg
movsl
clc
xchg
stc
push
add
sub
clc
ljmp
loopne
out
cmp
aad
clc
push
movsl
clc
xor
add
test
mov
clc
in
aas
cli
dec
test
add
and
add
or
clc
shrl
add
clc
daa
clc
sar
clc
cs
add
add
add
clc
add
add
clc
cltd
push
add
push
pop
clc
outsl
pop
lcall
clc
fxch
lock
clc
jbe
add
xchg
xor
add
cli
cmp
inc
add
mov
xabort
push
jle
add
xchg
xor
sbb
jge
push
int3
push
add
and
add
add
outsb
fwait
and
add
add
aas
cmp
iret
mov
test
add
push
add
lods
jg
rolb
ljmp
gs
arpl
add
clc
cmp
xchg
jno
add
pop
ja
clc
mov
repnz
add
sub
mov
je
add
pop
dec
sub
clc
cmp
fisubl
add
and
add
gs
jae
add
add
xchg
lahf
clc
fs
jo
add
add
lret
ret
clc
inc
add
fwait
call
add
add
je
inc
add
popf
test
push
and
cmpsb
clc
repz
je
clc
sahf
sub
sahf
pop
xbegin
sar
gs
ret
clc
in
xchg
das
xor
add
xchg
sub
mov
pop
add
add
test
clc
push
sub
clc
in
in
je
push
mov
cmp
adc
add
mov
jge
add
pop
push
sbb
xchg
ret
add
xchg
dec
or
add
daa
clc
cmp
clc
inc
clc
icebp
add
add
xor
add
out
loopne
pop
push
add
out
aas
mov
add
arpl
add
jle
cmp
push
xchg
call
add
add
imul
lret
fsubs
out
mov
lock
test
clc
aas
ficoml
add
xchg
sbb
sub
fsubrl
fadds
sar
add
cli
jne
mov
out
add
add
movlps
add
enter
mov
lcall
clc
jp
or
clc
aas
sti
scas
fldenv
add
xchg
push
sar
mov
cmp
mov
inc
clc
inc
clc
push
sahf
mov
mov
iret
xchg
pop
xabort
jno
add
jne
fsts
clc
dec
inc
clc
stc
xbegin
push
ljmp
ficoml
and
add
movsl
clc
lea
ret
clc
addr16
mov
and
add
pop
add
add
mov
cmp
clc
bound
add
jo
add
mov
imul
mov
add
add
sbb
dec
cli
cltd
push
jns
or
jg
clc
in
add
add
add
aad
inc
add
test
clc
out
inc
add
xchg
je
adc
add
add
cmp
add
idivb
sub
add
jns
pop
clc
cmp
jge
pop
clc
mov
adc
add
jmp
fisubs
sub
mov
clc
fcmove
cmp
pushf
dec
fs
pop
clc
icebp
xchg
out
adc
xor
add
add
test
rcrl
add
jne
clc
mov
add
rolb
cmp
clc
cli
mov
clc
mov
clc
push
add
testl
lea
clc
dec
xchg
mov
mov
cmp
insb
imul
add
dec
pop
dec
dec
in
cmp
clc
jne
out
test
xor
add
out
sbb
imul
sub
push
add
int
add
dec
je
addr16
add
add
sbb
clc
js
clc
pop
pop
data16
push
add
mov
ja
clc
clc
je
cld
es
lahf
cmp
add
sub
add
out
shlb
pusha
add
inc
clc
push
jge
add
add
mov
lahf
mov
add
xor
add
or
add
adc
add
clc
mov
cmp
xchg
sbb
add
lret
jb
add
clc
pop
stos
mov
add
sbb
xor
add
imul
and
add
clc
cmpsb
clc
pop
mov
data16
xchg
add
add
add
mov
stos
inc
clc
cmp
add
pop
clc
cmpsb
clc
ss
add
fwait
xchg
lods
jns
add
sti
hlt
movsb
clc
jg
add
test
lock
shrb
icebp
in
inc
clc
jle
int3
ds
clc
push
add
stos
in
sbb
test
mov
add
push
clc
push
add
or
daa
clc
mov
cli
mov
sbb
cld
pop
arpl
add
sahf
imul
mov
cli
jbe
clc
loopne
push
add
sarb
lods
pop
mov
jb
add
add
or
imul
add
sub
inc
add
adc
add
clc
inc
add
sbb
mov
jno
add
testb
xchg
imul
add
popa
add
cmp
out
pop
or
jle
add
mov
push
clc
test
xchg
mov
xchg
xabort
clc
xchg
add
add
clc
pusha
add
adc
pop
sahf
mov
clc
push
mov
in
sbb
sub
pop
xchg
imul
cmp
movsb
clc
jp
mov
sub
clc
mov
push
add
add
add
push
add
add
add
clc
and
add
mov
sub
clc
add
add
adc
add
fwait
or
sub
cmp
sub
clc
js
ret
lret
or
repz
stc
adc
add
adc
add
mov
fwait
mov
push
add
cmp
dec
jne
dec
sti
adc
dec
push
add
nop
sbb
nop
lret
clc
sbb
jl
add
jo
add
clc
icebp
pusha
add
ss
fstp
out
jp,pn
cmp
clc
test
jg
clc
roll
pop
mov
add
test
aaa
rclb
add
pop
xchg
int3
push
clc
adc
add
jns
clc
cmpsl
clc
inc
add
mov
clc
call
xchg
addr16
inc
add
xlat
out
mov
add
add
add
add
add
or
cmp
incl
add
add
outsb
lods
stc
fsubp
clc
xor
add
mov
leave
popf
inc
add
sbb
add
pop
fstl
inc
clc
push
sub
outsl
movsl
clc
cmp
cmp
clc
int3
jl
jmp
rorb
scas
sar
out
das
push
add
fistps
xor
add
clc
add
add
inc
add
sub
dec
push
mov
jmp
fnstsw
cld
jle,pt
sbb
mov
add
add
movsb
clc
sub
lods
push
push
jb
add
push
or
cmp
sar
ret
stc
xchg
cmp
clc
in
dec
lret
clc
std
mov
add
bound
add
add
mov
clc
mov
test
clc
fwait
cld
negl
add
add
scas
adc
add
add
or
clc
jns
loopne
fs
and
add
add
clc
jge
clc
mov
stc
and
add
int3
stos
add
xchg
jmp
test
push
add
pop
cli
dec
cmp
add
add
fs
xchg
jmp
and
add
js
clc
xchg
js
pop
push
and
add
fsubl
add
lock
add
add
jb
add
or
clc
clc
adc
xabort
sti
add
or
add
add
dec
jecxz
jmp
clc
xbegin
movups
add
push
add
pusha
add
adc
add
clc
shrb
repnz
add
xchg
test
gs
ljmp
lret
add
add
mov
sub
add
cmp
dec
jge
add
cmp
add
xchg
js
add
test
push
sbb
mov
mov
clc
je
add
adc
add
add
mul
clc
ljmp
mov
insb
add
add
js
mov
clc
or
clc
pop
jo
add
clc
int3
rcll
push
add
enter
and
add
inc
add
jno
add
dec
xor
jo
add
clc
cmp
clc
push
in
lods
mov
push
icebp
mov
pop
out
lcall
ds
xchg
sar
pop
iret
call
or
fnstenv
add
outsb
lods
mov
aaa
push
push
in
mov
clc
xor
add
out
mov
fdivl
clc
leave
xor
ret
add
in
mov
fs
dec
movsb
clc
sbb
mov
add
add
add
mov
scas
cwtl
xor
add
dec
xchg
mov
mov
std
mov
add
test
push
int3
or
mov
mov
out
dec
mov
imul
add
cmp
outsl
loopne
hlt
pop
clc
shll
add
mov
add
pop
iret
sahf
cmc
mov
daa
clc
bound
add
pop
jl
clc
call
mov
clc
sbb
add
xor
add
test
add
in
cltd
push
das
dec
pop
clc
gs
std
in
fnstcw
pop
sub
jae
add
xchg
arpl
add
add
dec
push
cmp
pop
xor
add
cli
add
add
add
add
outsb
inc
clc
sbb
mov
clc
pop
dec
mov
adc
add
or
clc
jo
add
int
push
lahf
push
dec
imul
add
pop
clc
adc
add
and
add
sub
clc
cmp
clc
adc
add
clc
jl
arpl
add
lea
xchg
cmp
add
pop
iret
sbb
je
xbegin
pop
clc
pop
cmpsl
clc
cmpsl
clc
div
in
xor
lods
fldt
add
scas
data16
leave
mov
jl
lock
addr16
pushl
pop
mov
out
mov
clc
mov
bound
add
add
in
push
jmp
clc
fldcw
sbb
xor
add
lea
clc
xchg
aas
ds
clc
shlb
add
cwtl
pop
clc
outsl
arpl
add
add
add
xbegin
add
rorl
clc
rcrl
hlt
pop
lahf
jno
add
xor
add
mov
add
push
scas
mov
mov
in
lea
add
add
sbb
add
hlt
lahf
sbb
icebp
jg
dec
jnp
aad
jnp
inc
add
jge
insl
inc
clc
fs
es
jae
add
out
pop
and
add
xor
add
add
lret
hlt
nop
dec
stc
jns
pop
into
mov
clc
in
dec
adc
add
clc
nop
jmp
clc
insl
je
pop
clc
jbe
clc
push
frstor
add
push
add
mov
jno
add
sub
cmp
push
xor
add
add
add
or
add
mov
jle
add
add
and
mov
xchg
inc
clc
mov
dec
clc
mov
adc
add
fidivl
add
ja
push
faddl
xor
gs
add
add
repnz
or
clc
lahf
hlt
dec
loope
jno
add
mov
nop
sti
movsb
clc
mov
or
push
cwtl
and
add
clc
sbb
add
add
xchg
cmp
push
and
mov
add
pushl
nop
sub
daa
clc
jl
loopne
pop
adc
clc
cli
popa
add
in
mov
clc
cs
sar
clc
sub
sar
imul
adc
add
dec
add
add
add
xchg
in
loope
adc
add
repz
add
ljmp
dec
or
sub
push
add
and
add
clc
adc
add
clc
lods
paddsb
add
clc
adc
add
pop
add
add
js
xor
add
loopne
fildl
add
into
adc
add
clc
adc
mov
add
pop
dec
stos
inc
clc
cmp
jne
clc
mov
add
cmp
clc
cmp
sub
pop
lods
outsl
mov
add
sub
clc
in
jmp
jns
add
outsb
hlt
ret
clc
jl
sahf
adc
add
mov
add
mov
add
cli
adc
pop
mov
scas
mov
add
clc
adc
add
mov
mov
icebp
mov
clc
dec
add
add
mov
fwait
cmp
mov
add
in
sub
clc
lock
push
arpl
add
nop
mov
pop
push
rolb
add
dec
in
arpl
add
xchg
test
int
hlt
dec
jle
clc
mov
loope
fst
mov
jbe
clc
js
dec
in
xbegin
sbb
add
add
clc
and
add
add
xchg
in
push
add
sbb
clc
aaa
stos
mov
dec
fsubp
clc
lret
pop
test
in
xchg
cli
outsb
into
add
add
add
clc
pop
nop
popf
xchg
and
add
pop
clc
jbe
or
sbb
adc
ljmp
mov
add
mov
clc
bound
add
xor
add
cmp
push
cmpsl
clc
and
add
clc
lods
loopne
cmp
clc
test
lods
faddl
int
clc
adc
add
add
jp
mov
enter
clc
data16
dec
cmp
clc
jp
icebp
adc
cs
rcll
dec
cmp
clc
ret
sbb
add
push
cmp
xchg
sbb
add
add
add
add
mov
shlb
add
movsl
clc
stos
cld
xchg
outsb
inc
add
popf
xabort
clc
scas
inc
add
xchg
ljmp
clc
jl
add
ja
dec
pop
jns
mov
and
add
xchg
insb
in
jg
pop
sub
shll
clc
inc
add
jo
add
leave
and
add
test
ja
lods
or
add
inc
add
cmp
out
sysret
clc
sub
add
sbb
inc
add
mov
xbegin
xchg
stos
dec
jp
insb
fstpt
cltd
inc
clc
dec
inc
add
in
pop
xchg
outsb
iret
or
aaa
mov
add
sar
in
mov
and
add
add
enter
add
inc
clc
fcmovbe
out
push
cmp
sub
sbb
clc
sti
loopne
arpl
add
xchg
cmc
mov
mov
in
js
stc
sbb
mov
clc
sbb
outsb
jb
add
add
imul
movsl
clc
stos
xchg
or
clc
push
mov
and
and
add
mov
and
add
outsl
push
add
nop
mov
out
adc
je
clc
push
cmp
cmp
mov
add
mov
clc
push
add
mov
add
mov
xor
add
lea
clc
cmp
jno
add
or
dec
xor
inc
clc
xor
add
add
mov
mov
das
sar
int
dec
test
mov
mov
fdiv
add
add
mov
add
loop
repnz
vrsqrtps
add
movsl
clc
rcrb
cmp
pop
inc
add
lcall
add
stos
xchg
int3
daa
clc
dec
push
fdivr
jo
add
add
add
data16
mov
jg
test
push
xbegin
xor
add
adc
add
clc
inc
clc
adc
mov
gs
mov
inc
add
xchg
dec
test
inc
add
mov
mov
add
int
nop
add
int3
mov
rorl
out
push
mov
mov
clc
xchg
popa
add
and
add
clc
in
icebp
mov
inc
add
sbb
sub
push
cmp
clc
adc
or
cmp
out
je
mov
mov
add
xor
add
add
ret
mov
add
mov
push
push
add
dec
movsl
clc
pop
and
add
add
add
cmp
stc
sbb
clc
ljmp
clc
call
pusha
add
mov
clc
xchg
test
enter
sub
jmp
repnz
add
add
mov
test
clc
leave
pop
pop
rcrl
clc
sub
push
cmp
stc
data16
or
add
add
pop
clc
xchg
push
in
inc
add
pop
pop
cwtl
jb
add
dec
xor
add
xchg
test
pop
in
xbegin
mov
clc
xor
add
sbb
inc
clc
mov
adc
pusha
add
cmp
clc
scas
lahf
xor
clc
or
mov
add
dec
cmc
push
or
clc
icebp
mov
xchg
daa
clc
mov
push
add
loop
cmp
mov
inc
add
push
stos
inc
clc
jo
add
jmp
lcall
adc
add
dec
mov
mov
je
clc
mov
lahf
xbegin
jno
add
inc
clc
cwtl
loop
pop
clc
lods
fdivp
pop
mov
sahf
ja
and
add
loop,pn
xchg
cmp
clc
push
pop
prefetch
mov
in
inc
clc
dec
xchg
fidivrl
dec
jl
pop
xor
clc
ljmp
add
loope
shr
fldenv
add
cmp
pop
in
pop
xor
push
shrb
aad
and
add
mov
sub
cmpsl
clc
and
xchg
fs
mov
aam
add
mov
jle
adc
add
out
cmp
cmp
arpl
add
add
pop
jb
add
dec
push
mov
cmp
adc
mov
clc
cmp
clc
cli
xchg
das
xor
fcmovnu
popa
add
push
add
mov
clc
aas
fidivrl
pop
fbld
add
jmp
clc
lcall
sbb
data16
dec
jne
test
jle
and
add
movsb
clc
pop
popa
add
int
clc
stc
add
add
mov
add
push
add
jp
cmp
cli
fs
lods
in
das
xchg
cmp
pop
repnz
test
ret
add
sbb
pop
scas
jne
clc
jnp
je
add
push
addr16
pop
int
clc
das
cs
dec
gs
lret
add
or
clc
push
add
pusha
add
clc
cs
and
sub
hlt
lods
adc
add
add
clc
sub
imul
add
in
mov
clc
cmp
mov
clc
jbe
je
clc
jb
add
add
clc
jae
add
inc
clc
jns
clc
jae
add
add
add
stc
enter
add
sub
leave
and
mov
add
mov
clc
call
out
xor
add
jge
mov
fadds
add
jnp
clc
cmpsl
clc
repnz
pcmpeqd
add
mov
clc
xor
add
add
rcll
add
sbb
add
ss
clc
adc
clc
out
call
sbb
inc
clc
inc
clc
xchg
dec
or
lahf
aas
or
divb
add
and
add
cmp
clc
xchg
or
cmp
and
lret
pop
push
clc
enter
test
scas
sub
sbb
mov
sub
mov
clc
inc
add
pop
repnz
lret
xor
add
add
clc
dec
gs
dec
xabort
and
clc
cmp
insb
mov
clc
bound
add
add
fldenv
jnp
mov
add
add
xchg
test
inc
clc
cmp
mov
add
testl
movsl
clc
mov
pusha
add
and
push
insb
sub
add
pop
clc
or
add
add
jo
add
clc
pop
mov
clc
clc
aaa
in
imul
add
clc
mov
mov
jno
add
add
out
fldt
clc
add
add
add
clc
jmp
outsl
daa
clc
int3
fistl
outsb
arpl
add
iret
dec
xchg
clc
sbb
and
sar
clc
outsl
mov
dec
adc
add
faddl
add
pop
push
add
mov
clc
sub
clc
out
in
jg
mov
pop
cmp
inc
clc
sbb
out
dec
cmp
add
pop
mov
push
xchg
cmp
clc
out
mov
clc
cmp
mov
stos
jg
clc
sub
push
stos
imul
out
lods
mov
clc
fidivl
and
add
sahf
mov
repz
and
rolb
mov
in
push
fsubrs
mov
add
pop
ljmp
push
es
addr16
test
gs
jo
add
test
clc
push
loop
bound
add
loope
insb
add
add
cmp
out
jge
add
leave
mov
add
clc
dec
data16
xchg
pusha
add
add
add
jp
pop
mov
icebp
hlt
out
enter
clc
aaa
jg
clc
stos
imul
loop
or
clc
test
mov
jmp
clc
push
push
hlt
pop
jb
add
clc
movsb
clc
jg
sar
xchg
data16
cmp
clc
sbb
cmpsl
clc
hlt
mov
jg
sub
mov
or
pop
cmp
clc
cmp
fcmovnu
jl
jmp
add
addr16
push
add
cli
iret
std
ds
push
add
vrsqrtps
add
dec
lea
lods
int
add
aaa
aad
clc
int
clc
push
cmp
add
xchg
cmp
add
aas
push
add
adc
add
jle
imul
add
pusha
add
stc
xchg
stos
test
hlt
jne
add
add
mov
lods
stos
inc
add
inc
clc
insl
out
inc
clc
lods
rcll
and
add
xchg
icebp
lods
call
cmp
push
popa
add
daa
clc
dec
jae
add
dec
add
add
cwtl
sub
cld
xabort
mul
clc
or
and
add
clc
pop
inc
add
sbb
testl
je
add
add
clc
stos
xchg
jecxz
icebp
jae
add
cmc
dec
cmp
clc
xor
add
sti
popf
and
jnp
xchg
add
add
add
mov
sbb
mov
pop
jo
add
push
sbb
push
add
add
add
mov
nop
jmp
testb
lock
packsswb
add
add
test
push
jnp
pop
nop
jmp
sub
mov
in
clc
enter
and
add
popf
cmp
sub
in
add
jmp
outsl
lea
sar
add
mov
fildll
inc
clc
xchg
cmp
add
rcrl
push
push
mov
xchg
ret
pop
jl
inc
clc
out
loope
inc
clc
mov
adc
add
push
xchg
add
add
or
pop
clc
sbb
stc
nop
jmp
add
xchg
pop
in
jp
loope
push
clc
clc
js
clc
jl
call
cmp
jle
out
xor
add
xchg
lock
fisubrl
clc
add
out
jmp
clc
outsl
jp
xchg
mov
add
hlt
push
xchg
nop
jmp
pop
lock
incb
pop
int
add
mov
nop
jmp
jecxz
rcr
lea
and
mov
loope
inc
add
sar
add
mov
add
lods
int3
dec
daa
clc
sub
clc
bound
add
push
nop
jmp
cmpl
test
jg
add
cwtl
push
add
insl
mov
cmp
jg
stos
cmp
add
add
add
jmp
leave
out
in
mov
nop
jmp
mov
cmp
add
mov
test
cwtl
or
addr16
movsb
clc
mov
xlat
leave
pop
clc
mov
pop
frstor
pop
xchg
mov
stc
stc
gs
pushf
xchg
das
push
add
pop
das
jno
add
lock
xor
add
add
fstpl
jmp
test
addb
nop
jmp
add
repnz
cmp
cmp
add
xchg
aad
mov
xchg
out
cwtl
aaa
in
jle
notb
add
clc
jae
add
ret
clc
out
sub
clc
in
push
dec
mov
and
add
add
clc
sbb
test
mov
xor
add
rolb
lret
jo
add
jno
add
push
jns
loop
pop
in
mov
add
add
jg
add
add
mov
clc
xchg
cmp
mov
ficoml
push
sub
lods
jns
add
adc
scas
xchg
lahf
add
add
ds
pop
clc
inc
add
xor
clc
and
and
push
mov
xchg
ret
pop
fists
loope
add
add
add
add
mov
add
add
in
xchg
mov
add
in
mov
xbegin
shll
bound
add
jmp
pop
add
sub
mov
clc
jmp
clc
adc
cli
lret
fsub
clc
pop
clc
mov
clc
sub
mov
mov
nop
jmp
sbb
xchg
cli
pop
lock
add
fmulp
mov
add
mov
clc
push
icebp
mov
lcall
add
and
add
adc
add
dec
xchg
cmpsb
clc
loope
push
add
mov
in
fcmovnbe
stos
xchg
dec
mov
pop
xlat
lods
adc
in
daa
clc
icebp
wbinvd
cli
jb
add
add
lcall
add
call
add
add
mov
nop
jmp
mov
sub
pop
mov
clc
cmp
add
jecxz
mov
decl
sti
inc
add
jl
or
pusha
add
cmp
enter
clc
loopne
mov
add
sbb
rclb
shlb
clc
jg
fcoml
ds
in
sbb
fstps
jp
insb
clc
movsl
clc
aaa
cwtl
push
loope
pop
stos
push
sbb
cmp
fmull
add
scas
cmp
jp
mov
lea
sub
add
cmp
mov
xchg
stc
clc
push
sub
nop
jmp
xor
fucomip
mov
jo
add
ficompl
jle
or
inc
clc
push
add
loopne
sar
mov
jb
jmp
or
push
add
call
pop
js
or
push
mov
nop
jmp
pop
std
sub
mov
clc
cmp
mov
cmp
cmp
add
icebp
mov
push
add
pop
dec
jl
clc
popl
pop
cmp
clc
leave
or
das
sbb
jns
ljmp
insb
js
pop
jo
add
test
or
cmpsb
clc
inc
add
ds
add
sub
xabort
xlat
addr16
mov
sub
add
out
sbb
sub
pop
fmuls
mov
dec
sbb
in
scas
out
xchg
fmuls
xlat
and
add
clc
jecxz
and
clc
sub
xor
ljmp
stos
mov
loopne
cmpsl
clc
push
mov
xor
add
fisubrs
pop
xor
clc
pop
pop
std
xchg
sar
adc
add
sub
xbegin
in
push
insl
int3
mov
add
adc
add
xor
add
sub
clc
mov
xchg
pop
test
cmc
mov
push
nop
jmp
xchg
repnz
outsl
sti
mov
add
push
mov
xchg
ret
ret
lea
insb
jne
test
clc
sub
out
pop
clc
mov
clc
outsl
push
add
mov
jnp
add
sbb
test
sbb
add
add
flds
mov
int3
cmp
add
icebp
and
jnp
push
in
push
pop
cmc
cwtl
adc
add
dec
pushf
cmp
cli
js
clc
xor
add
add
cmp
clc
cmp
xchg
sahf
cs
and
cmpsl
clc
cmp
sub
and
add
add
add
add
jbe
push
nop
jmp
mov
add
clc
jge
mov
popa
add
mov
mov
clc
inc
add
jecxz
sti
sub
add
sahf
inc
clc
repz
clc
mov
nop
jmp
and
jmp
add
aad
pop
rcr
adc
movsl
clc
push
add
mov
arpl
add
clc
push
mov
push
mov
xchg
ret
add
and
ret
clc
sub
popa
add
cs
outsb
aad
adc
add
add
inc
add
mov
clc
cmp
fcmovnbe
or
imul
clc
movsl
clc
push
mov
inc
add
and
add
inc
add
push
mov
nop
jmp
add
jl
clc
cmpsb
clc
jbe
pop
push
mov
inc
add
sahf
mov
cld
pop
test
pop
mov
out
scas
mov
clc
jne
clc
icebp
int
add
add
es
mov
cltd
ljmp
arpl
add
pop
bound
add
clc
gs
pop
and
mov
add
mov
clc
stos
in
dec
cmp
cmp
movsb
clc
popa
add
jmp
mov
xchg
ret
repnz
add
add
or
jno
add
add
sub
push
add
and
add
xlat
cmp
insl
aad
clc
push
xor
clc
insl
or
clc
xlat
pop
add
add
in
cmp
jae
add
mov
add
or
xor
add
push
add
cmp
dec
nop
jmp
jne
cmp
pop
or
pop
xchg
mov
mov
clc
mov
or
adc
add
pop
pop
xor
add
sub
movsl
clc
and
add
jb
add
clc
mov
add
add
clc
adc
add
jbe
clc
aaa
sbb
nop
jmp
jno
ficompl
fistps
push
add
mov
pop
mov
cmp
add
enter
add
push
add
mov
add
jo
add
fildl
shlb
add
add
mov
std
xor
add
cmpsb
clc
cwtl
call
fnstsw
mov
popf
add
pop
add
add
add
scas
stos
pop
incl
add
fnstenv
test
movsb
clc
or
repnz
clc
mov
cmpsb
clc
call
cmpsl
clc
out
or
clc
dec
pop
adc
add
dec
mov
pop
adc
add
add
dec
lahf
aad
repz
add
aas
push
sub
nop
jmp
sbb
xor
add
sub
add
push
add
nop
jmp
jne
fldcw
jo
xor
push
clc
pusha
add
loop
pusha
add
test
in
shll
add
js
in
inc
add
jae
add
in
test
lock
sub
inc
clc
mov
loopne
and
call
add
add
in
stos
cmp
clc
push
mov
add
clc
clc
in
xchg
into
cmp
jne,pn
ljmp
clc
jb
add
aas
dec
mov
sbb
add
xchg
es
cmp
add
loop
lahf
adc
clc
push
add
into
mov
add
add
add
lods
mov
xchg
stos
jmp
sbb
pop
sbb
adc
add
jnp
sub
test
nop
jmp
xchg
sub
add
inc
clc
push
pop
jns
inc
clc
rolb
lea
clc
add
aaa
adc
add
out
in
cmp
in
dec
mov
pop
xor
add
test
lret
push
xchg
repnz
add
push
clc
popf
push
add
xor
add
popf
jge
test
adc
add
add
data16
pop
jmp
out
and
call
add
pop
or
inc
add
push
jno
add
scas
mov
cmp
add
dec
adc
add
add
add
jmp
nop
jmp
aaa
pop
in
fld
clc
mov
mov
add
inc
clc
dec
fsubs
add
dec
jl
dec
mov
pcmpeqd
push
mov
xchg
ret
xorl
pop
inc
add
ret
add
mov
dec
notl
fimull
add
add
push
push
push
mov
xchg
ret
jmp
add
lret
cmp
clc
in
sub
add
sahf
add
add
clc
cmp
insl
negl
push
pop
mov
add
cli
adc
add
stc
cmp
es
fisttpl
cltd
xchg
jg
mov
clc
cltd
pop
and
sarb
fldcw
jno
add
add
xchg
test
jb
add
or
inc
add
add
add
lods
fistpl
xor
imul
mov
clc
xor
add
xor
clc
inc
add
jno
add
pushf
mov
pop
mov
inc
add
dec
and
add
scas
fiaddl
inc
add
enter
sub
clc
dec
adc
add
push
fwait
jecxz
in
sub
stc
pop
loop
incl
jne
push
mov
xchg
ret
std
div
jge
pop
and
add
add
enter
adc
mov
clc
aas
int3
sbb
add
add
out
sub
dec
sbb
mov
jmp
jecxz
fdecstp
sar
cmp
clc
test
clc
cmp
clc
ret
test
dec
dec
adc
clc
lock
sub
xchg
shlb
add
sub
psubsw
add
add
cmp
cli
inc
clc
cmp
sar
jg
add
cmp
clc
jo
add
mov
nop
jmp
filds
add
jmp
jmp
inc
add
pusha
xchg
mov
dec
cld
xchg
mov
insb
and
add
add
test
push
add
add
add
inc
add
cld
cs
test
clc
js
clc
popf
dec
sbb
insb
clc
pusha
add
pop
mov
clc
xchg
arpl
add
add
add
xlat
cmpsl
clc
add
add
rorl
jns
pop
sbb
clc
in
rorl
clc
decl
test
push
add
nop
jmp
negb
jno
add
je
nop
jmp
pop
add
stos
das
mov
data16
pop
mov
adc
add
sbb
jmp
testb
xor
test
insb
sar
add
lahf
mov
test
jl
insl
cld
pop
xchg
inc
clc
mov
outsl
cwtl
js
clc
lea
clc
mov
aas
inc
add
mov
movsb
clc
mov
sbb
xchg
push
loopne
int
fsubrl
clc
add
add
clc
cwtl
pop
pop
adc
add
clc
mov
gs
cld
in
aaa
inc
clc
mov
xor
add
add
inc
fiaddl
pop
push
xchg
mov
mov
add
fucomp
cmp
outsb
aad
sahf
mov
pop
xor
add
and
add
push
clc
sbb
add
jbe
sbb
enter
clc
xabort
xchg
out
ret
inc
add
xchg
adc
adc
add
add
clc
jmp
jmp
test
fidivrs
and
add
mov
sbb
xchg
ret
jl
shlb
loopne
int3
dec
mov
test
push
call
stc
mov
jecxz
dec
data16
data16
jbe
inc
add
pop
fcmovb
clc
daa
clc
mov
clc
fs
or
add
outsl
sbb
jae
add
decl
push
pusha
add
mov
negb
add
int3
sub
aaa
pop
mov
lahf
fs
cmp
add
out
lods
pop
sahf
test
mov
mov
add
or
in
add
add
push
add
mov
pushf
popf
adc
add
add
fstps
imul
loopne
push
add
bswap
cld
rol
clc
clc
cs
clc
aam
shrl
pushf
push
and
push
push
clc
add
add
cmc
add
add
mov
push
pop
clc
xchg
jecxz
sub
clc
fsubrs
leave
fistpll
aaa
fidivl
cmp
add
add
repz
add
mov
add
push
add
xor
add
jbe
or
addr16
mov
inc
clc
imul
jmp
lea
adc
add
xor
cmp
nop
jmp
fsubp
add
test
loopne
add
add
cltd
fstpl
pop
mov
cmp
clc
sub
lret
inc
clc
mov
cs
push
stc
xor
add
dec
inc
clc
sahf
hlt
imul
push
data16
mov
ds
push
add
lock
add
mov
clc
sbb
fidivrs
cmp
loop
mov
and
add
dec
clc
cmp
or
fstpl
mov
clc
out
jp
clc
cmc
pop
aam
addr16
jne
xchg
dec
mov
sbb
or
add
shl
fiaddl
out
rorb
mov
nop
jmp
add
pop
add
sub
loop
jmp
mov
clc
jno
add
pop
and
add
outsl
scas
clc
test
add
test
iret
dec
push
fadds
add
jp
pop
aad
clc
cmp
clc
mov
stos
pop
or
sar
mov
add
ljmp
fimull
in
arpl
add
add
bnd
add
imul
hlt
cwtl
movsl
clc
xchg
adc
add
clc
push
scas
xchg
fidivs
add
sbb
add
jge
in
jae
add
cmp
add
xchg
sar
clc
or
add
adc
add
cmp
xchg
cmp
testl
add
in
psubd
clc
test
cwtl
cmp
mov
jmp
cmpsb
clc
ficompl
lods
xor
add
add
ffree
clc
lcall
jge
add
mov
iret
lcall
mov
in
fisubs
clc
cmp
cmp
clc
adc
and
fadd
clc
xchg
mov
push
add
jp
pop
pop
mov
mov
inc
clc
sbb
add
add
add
movsb
clc
adc
add
add
dec
dec
hlt
insl
cmp
sarb
push
jne
nop
jmp
jmp
pushf
and
add
cmc
mov
clc
loopne
xchg
sar
data16
mov
add
test
clc
fistl
add
clc
or
insb
sub
and
mov
xchg
ret
add
dec
jae
add
add
inc
jmp
cld
fistps
mov
lock
pop
lea
dec
adc
mov
sub
ret
jne
cmp
fs
stos
and
cmpsl
clc
pop
je
xchg
inc
clc
mov
rcrb
xchg
dec
imul
aaa
push
jmp
in
pop
cwtl
add
movsb
clc
es
rorl
and
xchg
clc
mov
add
aam
mov
in
mov
mov
xchg
ret
add
add
fnop
pop
mov
clc
xor
add
lcall
fists
add
cmp
add
xor
add
std
sub
push
add
nop
jmp
pusha
pop
sub
adc
dec
jecxz
adc
add
dec
decb
push
clc
add
add
add
arpl
add
lret
cmpsb
clc
mov
mov
add
jl
rclb
stos
add
nop
jmp
jne
pusha
xchg
push
add
mov
cltd
xchg
mov
clc
pop
xor
add
jbe
cmp
in
mov
hlt
pop
clc
xchg
sub
add
cmp
inc
clc
mov
inc
add
scas
mov
outsl
fwait
add
xchg
mov
pop
inc
add
jne
ja
clc
and
add
clc
pop
inc
add
lock
clc
stc
adc
add
mov
in
inc
add
cmp
outsb
out
out
jne
div
nop
jmp
or
add
xchg
add
ret
clc
bound
add
mov
js
fs
add
and
add
push
scas
enter
data16
sub
add
push
add
cmp
add
push
add
sub
je
mov
dec
mov
cmpsb
clc
add
dec
cmpsl
clc
and
add
movsb
clc
cld
loope
ficoms
add
cmp
jmp
add
and
jecxz
lods
add
add
call
nop
jmp
jp
add
xchg
vmovntps
sbb
jo
add
add
or
clc
dec
and
add
add
loopne
scas
pop
adc
clc
and
add
push
mov
push
xor
add
outsl
lcall
mov
xor
add
test
sti
call
add
add
clc
test
add
add
add
jnp
cmp
add
js
clc
xchg
shll
cltd
add
jne
add
mov
clc
and
add
ficoml
add
cmp
sarl
xchg
test
add
popa
add
fidivs
add
cmpsb
clc
imul
dec
and
add
gs
sbb
add
clc
daa
clc
cmp
pop
mov
add
or
clc
fxch
cmp
cmp
clc
xchg
adc
add
clc
xor
add
and
add
adc
add
add
gs
inc
add
iret
push
dec
repz
pop
clc
stos
mov
loopne,pt
out
sbb
push
add
mov
sbb
adc
add
mov
push
add
add
mov
cmp
jle
mov
inc
clc
push
add
imul
add
mov
mov
pop
inc
add
test
clc
jmp
push
addr16
test
clc
adc
add
add
in
clc
xchg
pop
fs
xlat
leave
xchg
and
dec
jge
mov
nop
jmp
fcmovu
out
and
pop
cwtl
xor
add
clc
es
out
mov
clc
movsl
clc
xor
add
adc
add
clc
sub
jo
add
repnz
add
je,pt
test
clc
mov
cld
inc
add
cmp
sbb
mov
xchg
ret
jno
mov
in
lahf
icebp
xchg
and
add
and
add
add
out
cwtl
dec
or
clc
clc
xchg
mov
add
sbb
outsb
adc
add
jbe
cs
lock
insb
filds
and
add
add
loop
pushf
cmp
mov
outsb
xchg
rolb
sub
pop
bound
add
adc
add
in
jmp
jge
clc
sub
add
jmp
pop
xor
add
gs
arpl
add
push
mov
xchg
ret
jp
aad
lods
clc
in
or
repz
add
fwait
ljmp
ljmp
sbb
movb
div
outsl
jo
add
inc
clc
lcall
clc
push
add
pusha
add
mov
clc
push
mov
rcrb
inc
add
ss
add
sub
clc
int
mov
clc
mov
inc
add
pop
flds
push
adc
add
add
inc
add
sbb
push
add
inc
clc
sahf
xor
add
add
and
aam
sbb
out
add
nop
jmp
add
lock
leave
mov
add
push
mov
inc
add
cltd
pop
sub
clc
es
jnp
rol
clc
xchg
sbb
add
add
in
add
insl
sar
mov
pop
cmpsb
inc
add
jo
inc
clc
rorl
clc
fs
and
xchg
xchg
cld
pop
imul
xchg
ljmp
add
add
daa
clc
push
adc
jae
push
mov
xchg
ret
pop
lock
cmp
clc
jl
sub
push
mov
sar
clc
sub
add
jo
add
clc
sbb
pop
lahf
nop
clc
jo
add
ret
clc
xchg
int
clc
stos
mov
push
add
stc
xlat
cld
mov
and
imul
sbb
repz
add
adc
add
jb,pt
add
add
push
xor
add
cltd
jmp
fwait
cmp
sbb
in
and
add
add
xchg
sbb
ficomps
xchg
mov
cs
sub
pop
jecxz
js
adc
clc
and
add
clc
lock
cmc
dec
lods
pop
clc
fs
shll
add
clc
in
out
shrb
clc
mov
add
jnp
xchg
in
in
and
add
add
inc
clc
int
xor
add
into
negl
movzwl
nop
jmp
rolb
clc
jae
add
clc
push
add
adc
add
decl
mov
xchg
ret
inc
add
add
clc
pop
dec
sbb
xor
add
mov
inc
add
loopne
jnp
clc
jns
add
lea
add
push
mov
clc
out
sbb
lea
inc
add
out
mov
pop
mov
add
sub
inc
clc
pop
mov
clc
mov
cmpl
add
jmp
sub
into
loopne
mov
ret
clc
mov
aas
hlt
daa
clc
jg
clc
xchg
and
dec
ds
cmp
nop
jmp
pusha
xchg
pop
subl
clc
xchg
pop
push
sbb
clc
fidivrs
out
push
push
mov
nop
jmp
mov
add
xbegin
inc
clc
adc
add
clc
sar
clc
jb
add
clc
jo
add
decl
mov
pop
jl
mov
fisubrs
ret
clc
popf
testb
mov
add
sar
ds
add
fwait
aam
add
inc
clc
sbb
add
dec
dec
or
insl
xchg
loope
mov
in
pop
pop
or
add
add
xbegin
clc
cwtl
add
sbb
insl
dec
add
and
pusha
add
add
sub
xor
add
popa
add
out
pop
ret
clc
inc
clc
or
pop
in
and
add
test
inc
add
nop
jmp
mov
clc
mov
cmp
fwait
imul
pop
mov
xabort
movsb
clc
aaa
mov
inc
clc
inc
clc
inc
clc
loopne
jge
clc
lret
cld
hlt
arpl
add
clc
push
movzwl
nop
jmp
fistpll
fidivrs
xchg
arpl
add
sar
clc
fldenv
add
fisubs
add
inc
add
mov
clc
mov
xchg
mov
add
cmpsb
clc
shlb
xchg
sbb
clc
mov
clc
in
jp
clc
mov
inc
add
cwtl
pop
dec
inc
clc
mov
nop
jmp
in
add
jmp
add
pop
decl
fsubl
add
std
jecxz
jl
jns
lods
pop
fidivrs
int
clc
jo
add
add
mov
addb
nop
jmp
fcmovu
xor
cmp
pop
into
dec
pop
repz
enter
add
out
loope
nop
inc
clc
mov
out
arpl
add
add
add
lea
push
mov
xchg
ret
xchg
pusha
cmp
aam
clc
sti
sbb
clc
std
push
pop
cli
jo
add
add
pop
xabort
add
and
in
iret
in
jle
xabort
clc
sbb
add
mov
add
fcom
cmpsl
clc
fstps
pop
mov
clc
knotw
insl
push
xlat
std
arpl
add
clc
ljmp
clc
add
add
jo
add
add
mov
mov
and
add
dec
and
int3
xchg
fstpt
add
jb
add
xor
add
sbb
xabort
clc
pop
enter
sar
add
pop
push
add
cmp
mov
ret
add
and
add
clc
lods
jo
add
dec
adc
add
insl
daa
clc
inc
clc
jnp,pn
pop
mov
jle
rep
nop
jmp
and
add
clc
push
xchg
in
jmp
pop
out
xor
add
add
stc
jp
dec
lcall
mov
add
add
inc
clc
out
mov
add
in
and
add
sbb
js
clc
push
clc
insl
out
sub
jno
add
clc
int
clc
jl
lock
movsb
clc
loope
inc
clc
sar
clc
inc
clc
mov
arpl
add
out
out
loopne
xbegin
cmp
add
lock
add
add
xchg
pop
xor
add
add
dec
mov
add
nop
jmp
sar
out
test
cs
cmp
call
push
add
push
xor
add
jbe
arpl
add
clc
das
cltd
in
push
add
and
call
clc
xbegin
clc
mov
ret
aad
clc
cmp
pop
cmp
cmp
xor
nop
jmp
sub
stc
xchg
ljmp
add
mov
lcall
stc
ficoms
clc
rolb
jb
add
jno
add
loop
cwtl
fistps
pop
ss
data16
and
cli
xchg
xchg
add
add
add
es
movsb
clc
je
add
bound
add
ja
aaa
fimuls
mov
loopne
sub
xor
add
dec
mov
add
sub
push
outsl
nop
jmp
mov
sbb
sti
jle
mov
sar
addr16
cld
scas
mov
add
inc
add
test
sub
jle
in
fsubrp
adc
and
add
jo
add
xchg
clc
xor
add
inc
add
mov
clc
xlat
pop
mov
and
add
clc
sar
popf
fists
mov
xchg
ret
out
neg
lods
jns
xchg
mov
push
and
xlat
outsb
mov
inc
add
push
fldt
add
cmp
int
clc
in
inc
clc
je
clc
inc
add
xchg
fbld
mov
nop
jmp
jne
mov
cwtl
call
xchg
mov
xchg
cs
mov
add
inc
add
sub
sti
int3
dec
xor
xchg
fidivrl
clc
cs
push
jmp
aaa
addl
add
or
mov
ja
neg
aad
clc
add
test
imul
inc
add
mov
add
test
mov
lret
pop
xlat
addr16
add
scas
adc
add
mulb
xchg
pushf
cltd
xbegin
pop
cmc
sub
add
das
loope
sub
pop
stos
lret
jge
clc
daa
clc
stos
xchg
mov
add
xchg
loop
loopne
or
sbb
add
push
add
xchg
es
das
fs
je
sbb
fldenv
add
push
xor
add
push
add
xbegin
clc
lods
enter
pop
movsb
clc
push
addb
sbb
jo
ret
pop
test
enter
add
push
mov
xchg
ret
jne
jno
cmp
arpl
add
add
sbb
add
add
add
add
clc
jmp
jmp
jp
pop
std
sub
clc
lahf
int
add
jecxz
incl
sti
nop
jmp
lods
add
jno
sub
add
das
popf
mov
cltd
adc
add
dec
leave
adc
rolb
jbe
ljmp
ret
popa
add
arpl
add
hlt
arpl
add
jecxz
jl
test
adc
add
pop
mov
inc
add
repz
mov
scas
mov
ret
add
pushf
loopne
xchg
dec
inc
add
ret
daa
clc
int
lcall
pop
sbb
jb
add
fxtract
test
clc
push
clc
mov
clc
jne
add
fsts
mov
insl
cmp
jo
add
pop
fld
clc
gs
jl
xor
add
enter
dec
adc
add
mov
clc
pop
loopne
cmp
add
jp
das
cmp
fadd
clc
cmp
jae
add
clc
imul
clc
push
pusha
add
cld
pop
push
ffreep
clc
jne
add
mov
clc
adc
mov
nop
jmp
fidivrl
mov
stos
sbb
pop
push
mov
xchg
ret
pop
add
mov
add
xor
add
add
add
lock
push
add
push
add
aad
cmp
cltd
inc
add
cmpsb
clc
sub
push
ss
clc
push
notb
add
add
out
nop
pop
adc
add
pop
mov
clc
int3
xchg
jmp
xabort
mov
clc
ds
sub
push
sbb
loop
nop
jmp
add
fisubl
pop
out
dec
adc
add
add
add
xor
add
clc
and
add
clc
stc
mov
add
mov
or
cltd
mov
nop
jmp
pop
std
fiaddl
lcall
mov
xchg
ret
jne
mov
cld
shr
aaa
mov
hlt
scas
jg
push
add
cs
add
js
xchg
cmpsl
clc
cli
sahf
xbegin
adc
add
pop
ss
repz
push
nop
jmp
lea
repnz
jb
add
bnd
pushf
fucomip
sub
pusha
add
lods
jmp
xchg
inc
clc
add
add
clc
push
add
mov
mov
mov
lock
add
nop
jmp
jne
out
add
cmp
and
add
push
enter
and
add
sbb
clc
aad
ds
inc
clc
imul
clc
out
sbb
add
xchg
jecxz
pop
clc
test
clc
push
cld
push
mov
xchg
ret
test
xabort
jns
lock
loopne
xlat
lahf
dec
mov
add
inc
clc
sbb
movsb
nop
jmp
test
add
jl
shll
add
jns
lods
inc
clc
or
add
jo
add
ficomps
mov
jl
sahf
pop
mov
repz
mov
or
push
add
shll
pop
outsb
cmp
je
pop
shl
clc
dec
mov
xor
cmpsl
clc
fwait
sub
in
mov
inc
add
add
add
mov
lea
cwtl
fsts
pop
cmp
push
clc
pusha
add
filds
add
pop
push
clc
mov
icebp
aaa
pop
fldcw
clc
add
add
imul
add
xchg
lret
mov
add
cld
dec
push
xor
add
dec
xchg
cmp
add
jae
add
call
nop
jmp
mov
jne
inc
add
mov
mov
aad
clc
je
mov
clc
fwait
xor
add
cwtl
dec
fstl
push
add
into
add
cs
clc
fisubl
adc
add
push
mov
dec
lcall
jae
add
add
jb,pt
add
iret
xchg
divl
clc
inc
clc
cmc
xchg
push
add
insl
xchg
cmp
and
add
push
or
aam
xor
add
add
sbb
dec
sub
imul
ret
mov
clc
call
add
ss
test
add
push
add
xchg
jmp
sahf
clc
push
mov
add
in
fwait
adc
add
jb
add
clc
leave
inc
clc
dec
leave
enter
nop
jmp
ret
std
add
std
and
add
data16
push
pop
nop
jmp
filds
jmp
xchg
jns
mov
jle
je
nop
jmp
std
jne
jo
add
mov
fsts
add
inc
add
pop
negl
dec
aaa
in
jbe
jp
out
jns
xchg
push
pusha
add
sbb
add
push
outsb
flds
dec
adc
clc
data16
jne
int
jo
add
cmp
movsb
clc
stc
scas
jle
pop
js
sbb
clc
jmp
into
mov
cmp
je
dec
enter
clc
mov
gs
popa
add
add
add
add
pop
clc
popf
mov
push
fwait
mov
add
pop
xchg
rcll
clc
xbegin
sub
add
add
add
add
add
add
clc
sub
gs
adc
cmp
cmp
mov
xchg
fnstcw
fcompl
clc
jge
add
sbb
add
into
dec
dec
jmp
add
fldenv
add
arpl
add
push
clc
imul
add
sub
xor
add
add
mov
insb
dec
out
adc
mov
cmp
clc
adc
push
mov
xchg
ret
in
outsl
fiadds
add
xlat
add
add
sub
das
enter
clc
data16
jb
add
loop
push
xchg
rclb
add
add
cmp
mov
add
add
add
xor
add
add
cmpw
nop
jmp
mov
int
bound
add
clc
fisttps
cwtl
dec
sbb
adc
and
add
add
mov
sbb
or
mov
clc
mov
clc
sti
mov
push
push
mov
xchg
ret
jl
sub
clc
jns
in
dec
xchg
lret
push
sub
data16
lret
aam
mov
clc
ret
clc
inc
clc
lock
data16
push
add
sub
clc
xchg
xor
add
add
inc
add
inc
add
xor
add
add
add
or
xchg
mov
stc
inc
clc
jae
add
ret
mov
add
or
lcall
jmp
cwtl
repnz
pusha
pop
add
cmp
add
jmp
add
adc
add
clc
xor
add
pop
outsb
adc
add
cld
lea
add
add
push
mov
xchg
ret
cwtl
jno
clc
loopne
push
push
push
mov
xchg
ret
xor
pop
push
add
nop
jmp
pop
and
jo
ret
jb
add
push
call
add
not
loopne
push
sub
repnz
adc
add
add
add
add
add
ja
lret
add
jge
cmp
add
dec
push
addl
add
and
shlb
add
clc
cltd
adc
loope
repnz
add
xbegin
pushf
xor
add
adc
add
fstps
int
mov
call
add
add
clc
repz
mov
fmull
mov
add
pusha
add
mov
pop
jg
clc
or
nop
jmp
fidivl
sub
clc
jne
clc
jmp
push
push
sar
pop
nop
jmp
ficoml
ficomps
xor
in
jne
add
pop
pop
jae
add
add
add
int3
mov
xlat
and
and
ds
push
das
call
icebp
mov
add
nop
jmp
jecxz
fsubrp
scas
sar
add
xor
adc
clc
call
leave
jp
add
sub
data16
and
add
clc
xchg
push
adc
clc
adc
add
sbb
xchg
sbb
arpl
add
loopne
std
nop
sub
clc
or
add
inc
clc
cmp
clc
add
add
insl
rorl
xchg
adc
add
clc
xchg
cmp
pop
xchg
adc
add
aas
popa
add
cwtl
push
mov
push
mov
xchg
ret
pusha
flds
ja
je
nop
jmp
pop
out
add
add
clc
pushf
adc
add
xchg
jle
clc
push
pop
lret
clc
mov
and
pop
adc
add
lods
add
cs
mov
nop
jmp
repnz
cwtl
pop
clc
sub
out
cmp
clc
xor
lahf
add
sbb
nop
jmp
pop
fidivrs
arpl
add
in
cmp
dec
call
or
add
pop
clc
popf
mov
mov
and
add
insb
lock
clc
mov
add
push
aaa
stos
mov
jecxz
pop
fs
sbb
rolb
nop
jmp
aaa
jecxz
sub
add
lods
test
data16
mull
ds
mov
add
adc
sbb
repz
inc
clc
xchg
add
add
mov
mov
clc
jmp
into
add
add
xor
add
ljmp
fs
sbb
jle,pn
clc
xlat
xchg
jmp
std
test
sub
clc
mov
mov
sbb
xlat
jle
clc
fsubr
jp
clc
or
out
inc
clc
pushf
js
in
push
mov
nop
jmp
jne
and
hlt
sti
mov
in
mov
xchg
mov
pop
dec
iret
ss
cltd
inc
add
stos
dec
xchg
mov
add
gs
add
rolb
clc
je
test
cmp
and
add
jecxz
js
sub
mov
sub
lea
nop
xchg
mov
clc
xor
add
dec
nop
jmp
clc
pop
add
add
add
clc
xchg
sub
clc
pop
dec
nop
jno
add
add
nop
jmp
jne
std
lea
out
cwtl
pusha
add
fsubrp
aas
xor
add
xchg
add
add
xchg
leave
mov
mov
cmp
sahf
lods
mov
fwait
push
add
and
add
add
dec
sbb
scas
adc
add
add
cltd
lret
stos
dec
sbb
add
add
add
or
dec
repnz
add
clc
jecxz
and
add
add
mov
clc
cmp
sarb
clc
adc
lcall
and
add
add
and
add
push
gs
mov
ja
add
out
pop
jno
addl
inc
add
fimull
xchg
lret
enter
inc
clc
negb
cmp
stos
movsb
clc
in
out
fdivs
add
mov
add
cmp
ret
mov
mov
push
xchg
addr16
inc
clc
loopne
xchg
mov
inc
clc
mov
pop
xchg
push
add
clc
test
mov
nop
jmp
add
add
movsb
clc
test
xchg
repnz
xor
add
movsl
clc
inc
clc
das
mov
repz
dec
fwait
cwtl
mov
mov
and
add
add
jae
add
clc
inc
add
cmpsb
clc
int
add
std
push
adc
add
add
clc
pop
scas
and
add
xchg
loope
cmp
clc
push
add
mov
loop
loop
out
push
clc
sbb
push
inc
add
clc
add
add
xor
add
adc
add
add
test
xor
sbb
popf
dec
sub
aam
rcl
call
add
push
add
pop
mov
or
pop
xor
into
cld
mov
int
clc
xor
add
add
inc
clc
sahf
mov
inc
clc
stc
dec
addr16
pop
daa
clc
mov
mov
add
xor
clc
test
and
clc
pusha
add
cmpsb
clc
cmp
clc
push
sub
es
aam
leave
mov
mov
gs
or
lahf
push
mov
lea
dec
xchg
mov
in
jnp
stos
test
jle
add
mov
clc
lcall
add
cli
sbb
ret
clc
mov
dec
shrb
xchg
dec
movsl
clc
pusha
add
aas
imul
inc
clc
push
jg
clc
pop
push
add
cmp
mov
sbb
add
push
jmp
sub
shrb
jl
fstpl
jl
xor
add
clc
mov
add
pop
cmp
xor
clc
arpl
add
clc
pop
and
adc
mov
add
out
std
xchg
loope
xchg
jecxz
push
add
outsb
imul
inc
clc
adc
add
rclb
push
out
clc
and
repnz
push
mov
mov
xchg
in
gs
mov
adc
fs
fcompl
clc
cwtl
fldlg2
imul
jbe
clc
xor
add
test
gs
dec
into
push
clc
xchg
mov
or
xor
add
pop
fwait
cmp
cmpsl
clc
imul
das
int
clc
pop
int
clc
mov
add
xlat
dec
xor
add
enter
add
add
mov
clc
mov
fnstenv
mov
clc
mov
mov
push
mov
xchg
ret
add
add
icebp
mov
add
fstpl
cmp
add
add
add
nop
jmp
sbb
jne
repnz
add
clc
ret
clc
push
clc
mov
xor
add
fidivrl
pop
lock
imul
xchg
xchg
pop
mov
add
mov
clc
ret
jge
dec
cli
das
stos
mov
push
add
sub
scas
loop
lock
mov
xchg
mov
clc
je
add
xchg
cmpsb
clc
jmp
clc
mov
nop
jne
clc
jp
push
clc
inc
add
ret
fcompl
loopne
sti
dec
stos
cmpsl
clc
push
xor
fstps
out
mov
shrl
mov
and
add
xchg
aaa
mov
push
pop
push
mov
xchg
ret
sub
jp
filds
add
mov
into
pusha
add
clc
xor
add
lret
push
add
jbe
adc
add
add
aam
add
cmpsb
clc
addr16
sub
add
mov
xchg
jne
push
cmp
clc
ror
sbb
or
nop
jmp
sbb
or
stos
bound
add
jns
clc
roll
add
ljmp
cmp
mov
pushf
cli
pop
mov
loope
cmp
inc
clc
fidivrl
jne
clc
out
mov
dec
insb
and
add
in
push
mov
nop
jmp
pop
test
mov
aas
arpl
add
sarb
jo
add
add
in
in
jbe
clc
push
pop
push
cltd
jne
clc
test
fwait
adc
add
mov
int3
jbe
cmp
fs
jbe
pop
cmp
and
add
outsb
pop
pusha
add
and
add
pop
pop
lods
test
xchg
fists
mov
clc
cmp
add
sub
clc
mov
or
out
jmp
pop
stos
leave
jecxz
in
and
add
add
dec
xabort
xbegin
sbb
fs
inc
add
jmp
clc
pusha
add
cmpsl
clc
cmp
add
mov
call
call
rclb
add
push
rorl
clc
adc
add
add
clc
int3
lahf
sahf
adc
add
adc
add
clc
adc
add
jns
add
int
mov
add
sub
add
movsl
clc
jno
add
and
add
icebp
xchg
clc
dec
mov
add
mov
jne
nop
jmp
add
dec
push
cmp
cmpsl
clc
pusha
add
dec
dec
push
add
das
filds
add
cmp
adc
add
sti
jbe
add
insb
outsb
addr16
push
add
inc
add
or
pop
or
clc
dec
repz
mov
or
clc
add
add
in
pop
outsl
mov
popa
add
mov
add
jb
add
clc
dec
fisubrs
clc
sti
clc
es
test
rcl
out
jo
add
adc
clc
ret
push
add
in
aas
dec
or
popa
nop
jmp
mov
filds
lea
or
add
push
add
jge
addr16
xabort
cmp
push
xchg
sar
clc
sub
xchg
mov
add
xchg
clc
push
clc
popf
cmp
rorb
sub
add
push
mov
ss
dec
popf
cmp
add
cmp
mov
mov
and
add
clc
pop
adc
pop
loop
aaa
iret
pop
mov
mov
or
or
cmp
xor
add
psubusw
mov
loop
adc
add
mov
mov
mov
insl
and
add
or
aaa
mov
cs
and
add
xchg
scas
mov
add
cld
aad
clc
mov
clc
imull
add
add
xor
add
add
es
loopne
bnd
add
frstor
lret
out
cmp
push
adc
add
gs
mov
xlat
cs
and
add
clc
out
outsl
in
xchg
cltd
out
or
push
clc
rcl
adc
adc
add
arpl
add
daa
clc
jae
add
adc
add
clc
mov
add
daa
clc
xlat
pop
aad
add
xor
movsl
clc
hlt
jl
add
cltd
in
push
add
jmp
mov
xchg
ret
ds
add
cmp
add
mov
inc
add
jbe
mov
mov
dec
in
mov
cmp
or
add
lods
test
pop
pop
stos
popf
out
sahf
sub
sub
add
dec
or
into
sbb
rolb
stos
test
clc
add
jl
xor
push
mov
xchg
ret
lea
jmp
add
pushf
bsf
add
nop
jmp
add
mov
add
jl
outsl
jmp
clc
inc
add
xor
std
popa
add
mov
mov
int3
mov
jp
clc
mov
add
loopne
pusha
add
addr16
inc
clc
repnz
add
cmp
push
mov
xlat
jp
add
add
hlt
jg
mov
stc
jp
push
addb
sub
ret
in
fcmovu
sbb
add
nop
jmp
lea
inc
add
js
xchg
test
push
add
clc
sbb
mov
xor
add
dec
cmp
jmp
sbbl
mov
xor
add
clc
add
add
jb
add
leave
cmp
pushf
lret
clc
mov
aam
pop
ret
clc
mov
mov
das
push
push
add
dec
std
stos
inc
add
sar
clc
enter
xchg
sub
test
add
frstor
clc
mov
add
repnz
add
dec
jbe
imul
or
call
repnz
add
fiadds
clc
jle
insb
addr16
in
jle
pop
icebp
lods
xor
add
clc
push
clc
data16
test
sub
test
icebp
xchg
scas
in
mov
add
es
mov
jnp
stos
gs
fwait
lret
in
xor
add
mull
sbb
clc
pop
shll
clc
lock
clc
add
ds
mov
incb
add
cmp
lea
and
add
gs
popa
add
ss
gs
pop
push
decl
shrb
add
cmp
subl
cltd
int3
loope
xchg
inc
add
mov
or
cmpsb
clc
pop
roll
add
jge
repnz
mov
jmp
fisubrl
jl
pop
or
mov
push
add
outsl
imul
add
clc
bound
add
mov
clc
stc
pusha
add
mov
add
fwait
sub
xabort
test
cmp
cmc
sar
clc
popf
xor
add
mov
jmp
ds
inc
clc
mov
add
clc
popf
mov
sar
pop
loopne
add
add
add
adc
add
add
arpl
add
add
sbb
mov
mov
clc
jno
add
jp
xchg
cs
clc
jle
push
add
out
outsl
adc
or
sar
clc
mov
jl
clc
repz
icebp
in
cld
fists
shlb
pop
imulb
daa
clc
cmp
addr16
data16
cmp
lea
add
daa
clc
filds
clc
mov
dec
push
add
cli
sar
add
out
cmp
xor
int
add
popa
add
dec
pop
pusha
add
scas
pop
clc
in
arpl
add
fcoml
add
test
add
add
add
add
add
decl
jmp
or
add
pop
test
xor
add
pop
stc
loope
xchg
cmpsb
clc
jo
add
lods
std
adc
push
dec
enter
mov
nop
jmp
and
jno
add
pop
mov
test
xchg
data16
mov
gs
in
fs
int3
mov
aas
nop
jmp
add
pop
add
repnz
ja
sbb
inc
clc
sar
xlat
adc
add
mov
nop
jmp
jl
inc
xchg
mov
cmp
mov
clc
push
add
aad
xchg
aaa
xchg
movsl
clc
ja
shrb
sar
clc
loope
lcall
add
push
add
push
int3
add
add
cmc
or
add
repnz
in
mov
clc
sub
popf
ret
clc
mov
clc
pop
cmp
clc
testl
mov
xor
add
je,pn
add
xchg
rcll
add
add
and
mov
cmc
clc
dec
xchg
inc
add
movsl
clc
imul
fistl
add
add
or
add
jnp
pop
xor
add
jmp
lock
mov
adc
clc
jecxz
add
add
iret
push
add
jp
clc
lret
test
clc
pop
clc
repz
add
push
idivb
add
clc
cmp
cmp
sbb
push
mov
jb
add
mov
notl
add
clc
sub
clc
add
add
clc
jmp
push
add
jmp
sbb
mov
pop
inc
clc
clc
out
and
add
add
push
push
sub
clc
dec
int
data16
pop
jecxz
lea
add
imul
inc
add
ljmp
or
nop
dec
inc
add
xor
add
add
test
int3
mov
jae
add
pushf
jno
add
mov
xchg
xchg
mov
mov
nop
jmp
mov
sub
shll
add
clc
mov
mov
clc
cmp
add
nop
jmp
pusha
pusha
add
add
add
add
imul
mov
in
cmp
clc
cmpsb
clc
add
add
add
clc
scas
sbb
jbe
nop
jmp
and
or
xchg
xor
add
add
pop
cs
clc
jnp
add
loopne
gs
imul
push
add
nop
jmp
pusha
add
dec
daa
clc
loopne
rorb
mov
xabort
jae
add
clc
pop
xor
add
mov
sar
sar
clc
imul
dec
add
add
add
jecxz
add
stos
jb
add
je
add
aad
ljmp
add
std
add
add
jmp
clc
sub
enter
sbb
pop
push
add
pop
mov
out
sub
mov
clc
and
add
inc
add
push
clc
ja
cmpsb
clc
cmp
xor
add
jne
xor
add
pusha
add
and
add
out
in
stos
inc
clc
addr16
scas
push
clc
insb
adc
add
push
add
loopne
je
mov
popf
std
pop
sub
mov
clc
lea
mull
bound
add
push
lret
out
es
inc
clc
in
pop
dec
sbb
xchg
popf
js
clc
or
mov
push
add
push
clc
iret
xabort
pop
gs
pop
add
add
nop
jmp
sub
mov
mov
add
or
and
loope
inc
clc
mov
cmp
fwait
sti
clc
push
or
add
in
push
jmp
sub
add
pop
pop
movsb
clc
xlat
lret
popa
add
popf
cltd
shll
add
nop
sbb
inc
add
dec
repnz
mov
imul
rol
clc
sub
pusha
add
cmpsb
clc
lret
cmp
xbegin
clc
jae
add
pop
fs
test
scas
xabort
popf
jge
fidivl
xchg
mov
clc
xchg
fsubl
clc
mov
xchg
sub
xlat
push
icebp
cmp
cmovae
add
add
add
cmp
aad
call
add
pop
daa
clc
data16
sub
js
clc
ss
stos
mov
cmp
shll
add
adc
add
cmp
xbegin
call
add
jmp
out
leave
cmp
xchg
and
add
mov
mov
clc
fmull
jo
add
and
loopne
pop
loopne
stc
jecxz
cmc
jno
add
add
mov
and
add
pop
add
leave
inc
add
sahf
js
add
add
or
push
nop
jmp
jne
cs
loopne
xor
add
jnp
clc
add
add
add
or
clc
int3
push
cmpsl
clc
sahf
mov
lret
sbb
push
add
fsubrs
add
imul
add
cmpsb
clc
cmp
in
in
cmc
push
clc
sbb
icebp
nop
jmp
and
pop
jno
sbb
add
ss
add
add
aaa
mov
stc
insb
and
cmp
add
inc
clc
nop
test
out
xchg
lock
clc
push
and
add
cltd
mov
mov
add
ds
aaa
pushf
aas
mov
sar
push
adc
add
out
jno
add
clc
sar
das
mov
xchg
dec
xlat
xchg
aad
xabort
add
fnstcw
iret
stos
ret
clc
ss
fs
rorl
shl
clc
jns
scas
push
jle
mov
add
in
repz
jmp
add
add
sbbl
add
add
jmp
clc
jne
xorl
lods
int3
movsl
clc
adc
clc
push
dec
or
xor
push
mov
xchg
ret
fprem
mov
out
cli
in
sbb
add
sarb
pop
repnz
add
or
xor
cwtl
ds
jbe
xor
add
mov
push
add
pop
xchg
inc
add
fnsave
fs
jns
add
adc
add
addr16
pushf
push
xor
add
clc
jb
add
add
clc
dec
mov
mov
pop
pop
sbb
add
pop
sti
push
add
add
or
add
add
push
mov
push
mov
xchg
ret
jmp
lret
jne
sti
lret
jge
clc
clc
stc
sub
repz
add
add
cmp
clc
fisubs
loopne
mov
add
bound
add
add
jg
fisubl
mov
stos
arpl
add
cmp
inc
add
mov
mov
nop
jmp
add
cwtl
mov
clc
push
outsl
adc
add
pop
aas
pop
dec
fistps
js
sub
test
je
jl
daa
clc
sub
cmp
push
jne
stos
iret
xlat
or
jbe
xor
pop
pop
adc
clc
mov
rcrl
ljmp
jle
inc
add
pop
aaa
sub
mov
in
xchg
adc
add
sar
clc
punpcklbw
add
add
ss
push
add
mov
xchg
sar
sub
add
lahf
cmp
add
inc
add
fcmove
xor
add
icebp
mov
pop
xchg
call
inc
add
sar
pushl
nop
jmp
xchg
add
add
add
call
push
mov
xchg
ret
test
and
add
or
and
notb
dec
mov
push
or
mov
clc
out
inc
add
jge
arpl
add
and
add
jns
jnp
mov
cmp
mov
dec
cmc
decl
cmp
mov
adc
add
add
lret
and
xchg
pop
clc
shlb
add
and
inc
clc
pop
mov
loope
jne
add
das
cs
mov
add
jbe
add
arpl
add
jecxz
cli
gs
or
mov
clc
xchg
addr16
xchg
aas
insb
fmull
dec
into
insl
lahf
add
add
push
scas
xchg
data16
pop
fwait
jnp
clc
sar
sub
sbb
xchg
loope
cmp
xor
add
lahf
jl
inc
clc
test
sub
add
js
js
xchg
sar
imul
adc
add
stc
shlb
inc
clc
btr
popf
push
arpl
add
shll
inc
clc
adc
add
dec
mov
nop
jmp
add
sub
pop
test
rep
roll
add
scas
sbb
xchg
mov
clc
ret
clc
jbe
stos
imul
clc
sub
clc
imul
xchg
out
cmp
clc
sub
and
add
out
test
pop
stos
dec
idivl
mov
ljmp
lret
cs
cmp
mov
bound
add
jp
das
clc
fcmovnbe
outsb
enter
push
popa
add
sub
std
mov
call
cli
or
pushf
jo
add
jae
add
add
xlat
popf
clc
in
mov
lret
shlb
knotw
arpl
add
leave
pop
jo
add
clc
clc
inc
clc
add
add
fwait
push
add
sub
loopne
cwtl
movsl
clc
mov
pop
and
lret
sbb
out
sbb
add
add
add
add
and
dec
pop
clc
bsf
or
out
mov
dec
sub
call
cmp
clc
popf
in
cwtl
pop
insb
xor
add
clc
stc
push
fldl
cmpsb
clc
push
clc
and
daa
clc
test
lret
clc
xchg
pop
arpl
add
push
mov
add
nop
jmp
mov
pop
in
add
ds
inc
clc
add
add
clc
push
inc
add
nop
add
add
push
clc
outsl
and
add
cmp
cli
stos
fcomip
fsubl
add
fimull
into
sbb
clc
jnp
cmp
add
push
and
std
sub
add
pop
test
add
mov
push
clc
movsb
clc
lea
add
push
mov
xchg
ret
fstps
add
add
popf
imul
mov
cmp
clc
mov
add
pop
mov
test
movsl
clc
je
clc
dec
xchg
mov
clc
into
int3
mov
sub
sub
mov
inc
add
pusha
stos
out
jle
xchg
data16
cmp
scas
ja
scas
int3
arpl
add
pop
adc
add
add
test
dec
mov
add
movsl
clc
jne
add
test
push
stos
jecxz
push
add
lock
fisttpll
cmp
sbb
sar
add
daa
clc
ljmp
ret
clc
and
add
sbb
clc
loope
lods
aam
clc
ret
mov
ret
pop
jb
add
movzwl
push
mov
xchg
ret
pusha
mov
add
gs
iret
addr16
mov
and
add
or
add
loope
push
xchg
cmp
loop
into
mov
es
xchg
cmp
sub
nop
pusha
add
stos
adc
add
cmp
clc
aaa
inc
clc
popa
add
sbb
add
push
add
ds
repnz
shr
out
int
push
nop
jmp
inc
xchg
test
ret
mov
inc
clc
clc
sarb
mov
add
push
clc
in
in
sbb
clc
mov
add
or
scas
pop
add
add
clc
xabort
pop
pop
aas
inc
clc
mov
xchg
add
add
mov
leave
out
mov
inc
add
push
add
xchg
ret
pop
pop
pop
lods
shll
add
add
aad
loop
ja
pop
nop
jmp
add
xor
mov
add
push
add
sub
mov
arpl
add
add
sub
xchg
push
add
nop
jmp
ret
out
add
clc
pop
fcompl
out
inc
clc
jmp
clc
faddl
clc
mov
add
add
add
pop
sbb
clc
push
clc
fs
or
clc
pop
pop
dec
cmp
nop
jmp
repnz
pop
clc
jl
jbe
xlat
mov
inc
clc
std
sti
addr16
inc
add
and
lret
leave
out
movsb
clc
and
mov
and
cs
add
idivl
add
jl
in
cmp
mov
fistpl
cmp
je
clc
mov
jno
add
das
mov
out
push
mov
add
repnz
and
ret
clc
or
add
and
add
incl
sti
nop
jmp
lea
jne
add
clc
in
cmp
nop
fsubrs
add
xor
add
dec
push
add
dec
inc
clc
add
add
cmp
inc
clc
insl
stos
jns
add
add
add
add
icebp
scas
push
mov
clc
sbb
ror
roll
clc
in
call
add
test
clc
ljmp
int3
in
imul
mov
mov
add
jmp
push
or
testb
clc
rcl
cwtl
test
mov
adc
mov
outsb
rcrl
inc
add
inc
add
fs
gs
adc
add
dec
xchg
sbb
mov
push
nop
jmp
jecxz
and
in
sar
clc
cmpsb
clc
cmp
notl
add
sbb
jmp
adc
add
pop
repnz
sbb
add
add
add
in
jp
pop
jae
add
lods
add
add
pop
sbb
xor
add
cmc
ret
clc
stos
jg
xchg
or
or
outsb
shll
clc
fnstsw
repz
and
add
mov
cmpsl
clc
idivb
add
and
nop
cmp
xchg
dec
sub
clc
lods
lock
clc
in
sub
or
jmp
jbe
nop
jmp
sub
jecxz
repnz
and
enter
ljmp
ret
add
pop
jae
jmp
add
clc
ljmp
nop
jmp
cmp
incb
add
mov
jns
clc
mov
xor
add
mov
clc
adc
add
add
add
sbb
movsb
clc
jo
add
ret
clc
sahf
and
add
cmp
add
idivl
jnp
jge
std
jecxz
scas
loopne
cmp
add
adc
add
lock
js
clc
push
add
xchg
cld
add
add
icebp
fwait
pop
mov
pushf
jmp
add
and
add
mov
mov
test
xbegin
in
testl
push
call
add
mov
mov
add
add
into
jo
add
scas
sub
test
cmp
clc
popf
imul
add
mov
mov
and
add
add
jecxz
repnz
add
push
cltd
fdivrs
dec
scas
fldt
clc
data16
cli
or
and
add
pusha
add
js
clc
xchg
outsl
cmpsb
clc
loopne
add
add
clc
adc
add
clc
xabort
ret
clc
add
add
add
js
jne
in
or
mov
call
mov
xchg
ret
add
add
stos
ret
dec
ds
sti
adc
add
clc
xbegin
pusha
add
test
or
aam
and
add
push
mov
add
mov
add
inc
add
push
add
jne
stos
popa
add
xor
add
push
add
in
add
add
adc
add
mov
clc
out
cmp
clc
clc
dec
push
lods
ljmp
add
nop
jmp
test
lret
inc
add
cli
cmp
insl
lods
cmp
jno
add
push
adc
sbb
jge
sbb
ret
clc
jge
add
push
nop
dec
add
pop
or
flds
add
clc
pop
pop
gs
loop
mov
add
sbb
clc
mov
std
and
dec
inc
add
repz
add
mov
jecxz
push
add
push
lret
add
mov
xchg
add
add
and
int3
sar
clc
knotw
push
stos
test
call
mov
clc
shll
add
sar
in
xchg
dec
or
clc
out
push
nop
jmp
add
repnz
cmpsl
clc
clc
and
add
clc
cli
push
add
es
pop
cs
in
test
sub
xbegin
add
mov
ret
sbb
push
push
add
nop
jmp
std
pop
mov
sahf
aaa
scas
std
xor
in
cmp
sbb
rclb
call
repnz
mov
cmp
pop
and
add
pop
push
xor
fistps
rcrb
add
fs
mov
inc
add
add
add
imul
add
clc
fistpl
orps
sbb
add
das
call
add
add
clc
mov
insl
push
js
leave
popa
add
cmp
in
add
sub
add
xor
test
jb
add
mov
sub
add
jne
pop
add
pop
xchg
je
mov
mov
je
int
clc
das
daa
clc
or
rcr
mov
inc
add
dec
sbb
add
xchg
icebp
sub
clc
xor
add
add
cmp
std
adc
movsl
clc
repnz
clc
aaa
lods
cmp
clc
sbb
ljmp
lahf
movsb
clc
lods
inc
clc
adc
add
and
add
push
add
add
add
push
cmc
add
push
test
in
mov
aaa
push
test
nop
jmp
and
add
pusha
pop
iret
lret
add
es
pusha
add
and
add
clc
fwait
jno
add
mov
clc
dec
jge
loop
xchg
mov
xchg
repnz
cmp
push
add
xchg
bound
add
dec
dec
xchg
pop
in
or
dec
rep
or
test
shll
add
sub
jbe
ret
clc
lret
aas
in
stc
fcom
std
pusha
add
mov
add
rcrl
push
clc
das
inc
clc
nop
gs
popf
jo
add
adc
add
xchg
dec
pop
sbb
lods
cmp
add
clc
push
lcall
xlat
in
pop
sbb
jne
clc
jb
add
add
jb
add
mov
insl
iret
lcall
and
sbb
xchg
jbe
daa
clc
xchg
adc
add
mov
clc
xchg
or
push
fisubrl
add
add
incl
xor
mov
push
pop
pushf
loop
stos
pop
cvtpi2ps
clc
insb
lret
repz
clc
add
add
xchg
add
outsl
hlt
pop
jl
int3
ds
clc
cli
enter
clc
adc
add
clc
or
jp
add
sti
or
sbb
in
xchg
in
ja
clc
sbb
clc
pop
clc
inc
clc
pop
xor
add
add
and
jmp
add
cmp
add
sbb
gs
rol
clc
push
add
outsl
stos
push
cli
push
add
stc
inc
clc
pop
cs
add
pop
sar
rep
nop
jmp
pop
lock
cmpl
loopne
gs
jae
add
add
jmp
mov
insl
movsl
clc
mov
push
nop
jmp
mov
addl
in
imul
push
clc
lcall
add
fisubl
clc
inc
clc
clc
out
adc
inc
clc
clc
pop
iret
xchg
dec
push
jmp
nop
jmp
add
mov
inc
clc
push
add
mov
int
popf
fsincos
clc
into
push
adc
add
add
push
and
add
clc
sub
outsb
add
add
adc
ret
clc
das
cmp
jg
jmp
ret
clc
ret
jecxz
clc
decl
mov
adc
jmp
cwtl
pusha
xchg
fiaddl
cmpb
add
incl
pusha
cmp
add
rcrb
pop
clc
mov
sbb
cli
sar
jmp
push
xchg
enter
cmp
push
mov
xchg
ret
outsl
cs
push
clc
sub
clc
or
ljmp
xchg
fiaddl
add
shl
clc
notl
cmp
add
xor
je
jae
add
add
mov
mull
fstps
mov
roll
xchg
ret
add
add
add
add
pop
insb
or
rorl
loop
and
add
shll
mov
adc
add
clc
in
sub
mov
clc
xchg
cli
mov
mov
jb
add
adc
add
mov
nop
jmp
pop
add
icebp
xchg
add
add
cmpsb
clc
adc
add
add
nop
jmp
pusha
add
clc
pop
fildll
push
clc
popa
add
stos
loopne
adc
add
testl
fidivrs
add
inc
add
or
loop
stc
aam
push
imul
clc
xchg
sbb
add
imul
cmp
clc
hlt
ret
loope
pop
fstl
fcmovbe
pop
sar
add
data16
add
add
call
nop
jmp
add
lock
mov
add
imul
sub
xchg
nop
jmp
add
and
fistps
dec
out
cmp
clc
and
add
pop
clc
rorb
add
push
mov
xchg
ret
mov
inc
clc
mov
push
add
and
pusha
add
sub
add
std
mov
jmp
inc
clc
mov
lret
aaa
lods
sub
add
nop
and
add
clc
fistl
mov
sub
cmp
adc
add
and
add
add
gs
pop
movsb
clc
xchg
adc
mov
clc
cmp
push
add
rorb
add
lea
add
jmp
push
push
mov
xchg
ret
fdivp
pop
pop
push
clc
out
mov
adc
scas
sbb
add
xchg
cwtl
aam
or
add
stc
xchg
mov
xchg
cltd
and
or
add
add
sub
clc
pop
iret
and
clc
xchg
daa
clc
pushf
fildll
nop
jmp
add
xchg
mov
sbb
clc
inc
clc
mov
clc
sbb
fs
into
dec
adc
add
popf
shlb
stc
ficoms
das
add
add
icebp
inc
add
rcrb
mov
xor
add
adc
jnp
dec
fcoms
add
out
cmpsb
clc
xchg
mov
adc
add
pop
stc
xchg
or
add
pop
clc
lock
lcall
jnp
cli
inc
clc
test
stos
cmp
add
es
arpl
add
adc
add
add
xor
add
outsb
cli
ss
clc
xor
add
add
adc
add
jmp
sbb
in
mov
test
xor
add
add
data16
mov
mov
das
and
add
clc
or
add
clc
jl
outsb
cmp
outsb
xchg
jnp
xchg
into
test
mov
nop
jmp
xchg
and
sar
add
mov
add
call
lods
sub
clc
dec
mov
add
or
sbb
clc
pusha
add
jnp
clc
sbb
xor
clc
pop
xchg
cmc
in
sbb
lret
aas
inc
add
inc
clc
pop
cmp
clc
add
add
add
add
clc
inc
add
mov
mov
stos
cmpsb
clc
rol
clc
shl
clc
in
fsubs
fidivrs
clc
push
pop
notb
clc
xchg
je
push
mov
nop
jmp
fdivrp
hlt
pusha
add
stos
lods
xor
add
and
add
and
add
or
add
fiaddl
add
pop
add
gs
sub
push
mov
xchg
ret
xor
clc
stos
test
add
jnp
clc
pop
out
nop
or
add
lret
push
inc
nop
jmp
clc
in
addl
sbb
jecxz
xchg
lahf
aad
clc
pop
sar
and
add
add
push
jne
inc
clc
xor
js
clc
mov
in
jmp
clc
mov
add
scas
cwtl
xchg
xor
add
in
pop
rcr
test
stos
fisttps
nop
jmp
pop
mov
xchg
xchg
add
popa
add
push
add
push
mov
in
flds
flds
in
outsl
sbb
jmp
pop
lods
test
cs
add
in
inc
clc
ja
movsb
clc
cmpsl
clc
das
mov
leave
cmp
cmp
add
add
pushf
mov
clc
test
and
add
fwait
idivl
cs
sti
imul
push
sti
push
add
inc
add
lahf
pop
lods
dec
fwait
and
sbb
movsb
clc
cs
push
fwait
outsl
push
cmc
popa
add
cmp
sub
clc
mov
fimuls
clc
ja
or
add
adc
add
sar
ljmp
mov
push
add
cmp
cmp
mov
sti
dec
add
pop
testb
repnz
add
sar
clc
dec
mov
call
nop
jmp
pop
mov
lods
push
push
push
mov
xchg
ret
xchg
pop
add
in
in
jl
clc
nop
sbb
inc
add
repnz
push
add
arpl
add
xchg
imul
add
add
add
icebp
add
add
adc
add
outsb
out
call
jmp
outsl
cwtl
add
sub
add
clc
adc
add
add
je
pop
clc
pop
xchg
add
add
add
add
jne
add
add
add
xchg
lcall
adc
add
mov
nop
jmp
fiaddl
pop
cs
add
adc
add
clc
sar
sub
add
jle
clc
clc
arpl
add
clc
fsubr
in
mov
cmp
cmp
cmp
and
add
test
nop
jmp
pop
pop
divb
pop
jl
clc
sahf
scas
dec
or
push
fucom
clc
lea
popa
add
lea
add
leave
loopne
add
mov
fwait
repnz
adc
add
data16
push
add
lret
sbb
add
pushl
add
or
mov
cmpsl
sar
ljmp
add
mov
pop
cs
adc
add
jb
add
insl
sbb
push
push
mov
xchg
ret
pop
jecxz
pusha
int
mov
daa
add
xchg
lock
incb
jne
cmp
clc
mov
rcrb
add
jl
nop
jmp
sbb
aam
gs
outsb
fisttps
bound
add
clc
scas
mov
insb
cmp
add
mov
clc
loopne
rclb
add
sub
clc
xchg
jnp
sub
add
arpl
add
push
lea
fldcw
add
int
ret
clc
push
pop
in
mov
fstp
adc
add
int3
mov
add
or
cmp
clc
aaa
and
add
outsl
and
mov
pop
mov
addr16
test
sar
sbb
adc
add
call
sub
inc
mov
add
mov
sar
clc
cmp
add
clc
inc
add
sbb
mov
push
mov
xchg
ret
cmp
aaa
or
clc
add
add
cmp
clc
mov
lcall
nop
jmp
add
pop
add
pop
das
cmp
add
or
clc
insl
push
mov
adc
add
mov
loope
jne
aaa
mov
add
xlat
repz
push
add
adc
add
add
movsl
clc
mov
add
sub
mov
xor
nop
jmp
fiaddl
push
pop
fsubp
bnd
popa
add
fisubrs
out
push
cmp
push
nop
jmp
ds
jne
add
add
ficoms
not
jns
add
xor
cmp
clc
pushf
xor
add
add
mov
add
ss
xchg
je
jbe
and
add
add
mov
int
add
into
pop
push
sti
sub
mov
clc
xchg
xchg
jno
add
inc
add
call
pop
fcomp
push
pop
mov
jbe
add
mov
mov
xor
add
mov
pop
dec
leave
mov
pop
mov
mov
nop
push
add
mov
push
das
fnsave
clc
adc
add
add
and
add
in
cs
clc
and
add
and
add
add
outsl
es
jo
add
add
cmp
outsl
push
add
lea
sahf
xor
add
mov
hlt
or
add
test
jg
outsb
push
add
insb
out
push
add
pop
incb
clc
int
mov
push
push
clc
or
add
add
xchg
test
add
stos
outsl
inc
add
pop
mov
sbb
clc
sahf
cwtl
sar
movsb
clc
and
add
or
xchg
cmp
jne,pn
repnz
in
mov
sti
pop
clc
push
add
lret
dec
adc
add
or
leave
mov
push
addr16
inc
clc
and
add
pop
or
clc
pop
xchg
mov
add
pushf
xor
add
clc
popa
add
xchg
xor
add
push
repz
add
popa
add
lahf
push
add
adc
clc
incb
clc
fs
loope
mov
dec
mov
add
add
add
add
clc
pop
pop
xabort
mov
sub
xlat
bound
add
cwtl
ds
aam
add
int
push
add
inc
clc
data16
lret
lcall
mov
add
jo
add
sbb
in
mov
sub
add
add
inc
sub
add
add
inc
add
in
pop
into
notl
inc
clc
hlt
pop
clc
xor
add
sbb
add
jns
clc
sub
clc
das
fwait
ss
push
add
add
add
push
icebp
sub
test
push
mov
xchg
ret
fcomip
and
inc
clc
sbb
add
rep
lcall
add
add
clc
stos
ja
mov
clc
loope
pusha
add
jg
mov
sub
mov
clc
addr16
adc
xchg
lret
jnp
clc
aad
add
sti
in
insb
dec
repz
clc
add
add
xor
add
roll
aad
jle
push
add
stos
mov
fistps
stos
nop
jmp
out
fidivl
outsl
clc
pop
add
in
imul
enter
pushf
arpl
add
cmp
cwtl
movsl
clc
sub
xor
add
in
push
push
add
fsubrs
or
rorl
cmp
xchg
ds
jg
clc
rclb
add
jp
clc
pop
outsb
sbb
clc
fdivr
mov
clc
fidivs
add
in
out
xor
cmp
das
pop
cld
mov
add
pop
cmc
lret
add
dec
cmpsb
clc
out
movsb
clc
std
adc
add
add
gs
pop
out
aad
clc
or
leave
lcall
sbb
add
jno
fisttps
jl
into
jns
cmp
jecxz
enter
and
add
cs
test
clc
cwtl
in
jbe
stos
sub
clc
and
add
add
dec
xchg
adc
add
inc
add
sbb
addl
sub
ret
mov
jno
clc
addr16
cld
adc
in
fdivr
mov
push
cld
pop
lcall
sbb
call
add
push
push
cli
incl
add
add
add
in
mov
xlat
into
outsb
jb
add
clc
lahf
mov
test
dec
std
imulb
xbegin
clc
inc
clc
fidivrl
xor
add
pop
dec
mov
clc
mov
lods
inc
add
and
bound
add
clc
pop
es
push
data16
and
lea
mov
in
cs
clc
and
add
cmc
or
xor
add
cmp
std
into
sti
cmp
leave
js
mov
mov
outsl
xchg
outsb
xchg
jae
add
stc
sbb
jmp
cwtl
or
lea
pop
jecxz,pn
call
pop
out
loope
wrmsr
add
add
add
or
and
lea
bound
add
add
xchg
lahf
add
add
clc
imul
lcall
jmp
repnz
outsl
jmp
mov
es
xchg
cmp
idivb
outsl
fsubs
stos
push
clc
in
adc
add
jne
add
xchg
test
add
add
add
sbb
scas
fs
mov
add
out
fidivrl
or
add
add
add
add
xor
add
add
mov
lods
add
sub
adc
add
nop
jmp
clc
add
mov
clc
pop
iret
add
add
clc
xor
add
sar
aad
clc
ffreep
clc
add
add
ljmp
clc
in
jg
add
pop
aaa
and
add
and
add
mov
sbb
push
add
mov
sbb
dec
push
add
pop
inc
clc
lret
cmp
sar
clc
jne
mov
add
pop
cmp
jmp
sub
in
sub
cmpsl
clc
fs
loopne
in
pand
dec
inc
add
adc
mov
push
daa
clc
sub
add
cmpsl
clc
loopne
dec
test
add
cmp
int3
pop
jmp
add
xor
pop
inc
add
notl
inc
clc
adc
add
inc
clc
mov
cli
and
add
addr16
packsswb
add
xor
xchg
inc
clc
xabort
fs
dec
sub
imul
cmp
imul
mov
mov
jecxz
xchg
cmp
add
mov
jle
out
fcomip
mov
imul
adc
add
inc
clc
pop
pop
clc
and
add
clc
loope
pusha
add
fcoml
add
fidivs
add
dec
js
in
and
add
mov
ja
or
mov
pop
fst
mov
cmp
clc
test
movsl
clc
cmp
add
pop
xchg
or
clc
ficompl
add
shll
jbe
nop
jmp
sbbl
test
out
loope
or
shrl
pusha
add
xchg
push
loopne
cmp
rcrl
xchg
push
dec
addr16
dec
in
cld
rcrl
add
popa
add
jbe
fldt
stos
loope
lods
xor
add
hlt
xor
pop
inc
clc
jmp
cmc
jbe
push
mov
movsb
clc
mov
push
mov
xchg
ret
jno
add
push
xchg
test
add
lahf
adc
add
scas
adc
jl
xchg
or
clc
clc
out
stos
cwtl
out
in
pop
push
popa
add
lret
pop
lcall
rcrb
cmpsb
clc
dec
mov
add
add
pop
jmp
sub
jns
clc
sar
popf
cmp
add
add
add
sbb
mov
nop
jmp
faddp
and
jne
inc
clc
adc
rcrb
push
inc
clc
adc
add
clc
scas
popf
cwtl
hlt
js
clc
fucompp
insb
push
jmp
lock
std
mov
push
call
push
xchg
inc
cltd
test
jp
dec
mov
cmp
jnp
ret
clc
add
cmc
mov
add
jo
add
jae
add
clc
pop
ja
cmpsl
clc
stos
and
fsubrs
int
sbb
push
mov
xchg
ret
std
add
fs
sbb
out
mov
clc
add
add
add
pop
out
jne
pop
out
xor
add
mov
add
nop
jmp
inc
add
shlb
add
adc
add
clc
sar
clc
int
xchg
jg
clc
push
lea
push
add
icebp
scas
out
ret
clc
movsb
clc
jl
add
add
add
int
imul
add
add
clc
stos
mov
sub
mov
pusha
mov
js
clc
xchg
xor
add
cld
cmp
ret
das
fildll
add
add
add
clc
mov
and
add
outsb
jnp
xchg
into
cmp
mov
mov
aam
dec
dec
movsl
clc
icebp
xor
add
xchg
iret
mov
fst
movsl
clc
push
add
pop
xchg
mov
pushf
mov
adc
add
test
add
js
loope
stos
addr16
dec
fwait
pop
pop
loopne
xchg
inc
clc
pop
xor
add
lea
dec
jmp
add
mov
jecxz
cmp
nop
sahf
ret
fists
ficomps
and
add
add
mov
or
clc
aas
in
sub
add
dec
sbb
add
add
aaa
sub
inc
add
sub
jns
add
sar
cmp
add
nop
jmp
addl
lea
cmp
mov
call
cmp
jmp
ret
scas
inc
clc
into
xchg
adc
add
clc
dec
and
aas
sub
decl
mov
ret
sub
and
or
nop
fistpl
cmpl
nop
jmp
cs
cmp
jno
add
add
insb
xchg
jns
pushf
push
mov
push
mov
xchg
ret
cwtl
add
xchg
out
mov
add
clc
cmp
mov
clc
mov
add
imul
nop
jmp
fidivl
xabort
jbe
insl
push
fadds
add
jmp
add
jo
ds
sbb
add
nop
jmp
add
cmpsl
clc
ss
cmpsb
clc
pop
iret
cld
xchg
clc
jge
fsubs
clc
mov
out
inc
clc
push
add
jecxz
fucom
clc
xchg
into
sar
imul
add
cmp
clc
out
dec
inc
clc
sarl
dec
jns
sar
xchg
mov
clc
sub
add
push
pushl
jl
adc
add
clc
or
add
add
mov
repz
gs
or
and
add
test
dec
sti
cld
outsl
movsb
clc
outsl
adc
add
data16
mov
cmp
mov
add
add
xbegin
add
hlt
lea
outsl
aaa
icebp
lods
jo
add
clc
lret
test
clc
cmpsb
clc
insl
das
imul
cmp
push
ss
push
jmp
clc
jmp
xchg
xor
add
aaa
lock
jo
mov
insb
inc
clc
cld
loope
mov
cld
add
add
xor
add
repz
add
adc
add
fdivl
cmp
ret
clc
xor
nop
clc
mov
ret
out
scas
fisubl
clc
imul
clc
clc
stos
jle
add
dec
xor
jb
add
adc
add
rolb
add
aam
clc
fadds
add
ficomps
add
fsubrl
dec
xor
add
ss
nop
add
add
clc
dec
pop
add
add
ret
add
decb
add
push
mov
nop
jmp
filds
ret
sbbl
clc
enter
icebp
out
lahf
repz
clc
es
sbb
test
sar
int
add
push
sub
jg
sub
push
mov
push
add
jecxz
xchg
and
add
add
out
imul
inc
clc
mov
xchg
xchg
in
in
clc
lock
clc
mov
add
clc
xlat
outsb
cltd
jb
add
clc
or
add
pop
mov
pop
in
inc
clc
sahf
aaa
sub
mov
add
sub
sahf
in
mov
add
inc
add
or
add
bound
add
dec
clc
negl
jbe
shll
in
repnz
jl
test
add
nop
jmp
cmpl
jne
mov
inc
clc
outsb
push
loope
xor
add
dec
shll
push
inc
clc
imul
cmc
jg
clc
inc
clc
pop
push
add
add
add
lock
inc
clc
test
clc
imulb
xor
add
outsb
lock
mov
add
add
add
add
ja,pn
or
add
jo
add
mov
loopne
adc
cmp
clc
ret
clc
clc
sbb
clc
xchg
or
pop
fwait
mov
ljmp
clc
aas
mov
clc
mov
dec
lret
push
sar
pusha
add
mov
insl
add
lcall
cltd
cmp
adc
fcomps
cmp
clc
xchg
out
inc
clc
imul
in
fcoml
and
add
push
add
inc
clc
aaa
mov
clc
xchg
xchg
fcmovb
clc
jnp
or
mov
mov
clc
xor
inc
clc
mov
add
sbb
push
faddl
cmp
xor
add
xabort
sbb
cmp
clc
clc
mov
jno
add
and
dec
out
fildll
mov
or
mov
clc
xchg
adc
add
lods
cmp
inc
add
clc
or
add
inc
clc
pushf
nop
ljmp
add
jg
int
sbb
in
fs
push
inc
clc
or
sub
clc
jae
add
add
cmp
add
pop
cmpsb
clc
push
divb
push
ret
clc
jae
add
clc
cmc
daa
clc
sub
int
adc
sbb
clc
inc
clc
lods
xor
add
sub
dec
fsubr
mov
clc
in
xbegin
sbb
add
incl
mov
cmp
in
push
lcall
mov
jmp
ret
aaa
repnz
push
jno
mov
clc
addr16
jnp
add
sbb
clc
pop
dec
mov
xor
add
jle
lcall
in
fwait
jle
jno
add
xchg
sbb
lcall
push
add
jmp
rorb
adc
fistps
clc
lcall
add
sub
pop
push
add
jns
sbb
aam
add
sub
add
sar
pop
cmp
inc
add
add
cltd
pusha
add
mov
adc
clc
lret
mov
outsb
jb
add
nop
mov
jmp
pop
cmp
addl
test
jge
cmpsl
clc
mov
add
int
lods
pushf
xchg
neg
push
xor
nop
jmp
ds
xabort
loope
loopne
fdivr
add
nop
jmp
incb
clc
xchg
enter
clc
cmp
repz
daa
clc
cmp
outsb
loope
fdivs
adc
add
xchg
push
ds
sbb
push
adc
add
clc
sub
pop
push
add
adc
ret
clc
jle
add
xchg
jne
add
aas
inc
add
cmp
in
xor
add
add
add
mov
cmp
pop
cmp
mov
fsubrl
in
or
test
mov
add
mov
imul
add
dec
mov
or
in
sti
sub
add
movsb
clc
mov
add
bound
add
outsb
je
decb
iret
push
add
inc
add
insb
or
clc
adc
add
stc
enter
stc
adc
add
cwtl
fsubl
inc
clc
and
add
clc
cmp
add
inc
add
movsl
clc
loopne
roll
fs
cli
mov
mov
clc
pop
fcompl
imul
add
inc
add
add
add
add
sbb
sbb
mov
jle
add
add
jno
pop
inc
clc
and
fwait
jecxz
cmp
loopne
sub
sbb
clc
leave
pushl
nop
jmp
and
lods
push
test
nop
jmp
add
add
push
add
push
add
enter
clc
out
jno
add
aaa
jne
inc
clc
inc
clc
mov
pop
push
push
or
nop
jmp
push
add
pop
or
ds
sub
insb
jbe
xchg
jmp
cs
clc
stos
push
add
nop
jmp
jne
repnz
popa
add
inc
add
lcall
clc
ljmp
outsl
fnstcw
clc
mov
clc
add
add
clc
nop
adc
add
inc
clc
adc
dec
fdivrs
clc
test
pop
jp
dec
or
add
lret
mov
clc
mov
clc
clc
mov
mov
cmp
nop
jmp
add
fnstenv
mov
clc
imul
clc
adc
mov
inc
add
or
jg
bound
add
clc
scas
or
push
clc
idivl
adc
add
clc
das
shrb
cmp
out
je
sahf
in
pushf
mov
add
add
sar
add
or
xor
add
clc
and
add
clc
fucom
clc
sub
mov
clc
inc
add
loopne
xabort
xchg
xchg
xor
popf
push
cmp
sbb
sbb
repz
add
hlt
dec
mov
push
add
clc
std
or
sar
mov
nop
jmp
fldenv
lock
nop
jmp
pusha
fnstcw
fcmovu
gs
add
add
clc
enter
clc
push
add
pop
fstpt
sar
fs
iret
cmc
inc
clc
push
fisubl
and
jns
clc
jno
add
add
hlt
enter
add
xor
add
lret
pop
cmp
lret
fbld
clc
pop
pop
icebp
pushf
cmp
mov
add
pop
cmp
clc
jmp
ucomiss
jns
add
mov
clc
fwait
cmp
add
xchg
pusha
add
dec
leave
sbb
clc
test
lahf
js
xchg
sub
add
push
mov
xchg
xor
add
clc
je
in
rolb
lcall
fists
clc
rol
clc
cs
mov
out
out
nop
jmp
add
sub
push
clc
sbb
clc
sbb
nop
jmp
mov
sub
sub
xabort
mov
fdivr
pop
nop
jmp
add
pop
mov
xchg
lret
add
das
std
into
xchg
bound
add
cmpl
add
add
lock
clc
clc
fnsave
clc
mov
aad
push
sahf
push
add
nop
jmp
and
or
or
push
ja
clc
xor
add
pop
clc
mov
fldenv
imul
dec
cmp
jmp
add
mov
out
cli
int
jnp
clc
loop
out
mov
add
dec
mov
inc
add
popa
add
es
mov
xor
add
add
jb
add
add
stos
pop
mov
push
es
dec
dec
or
clc
stos
sar
or
clc
repnz
add
pop
xbegin
out
cmp
jmp
clc
mov
dec
std
mov
jno
add
pop
adc
add
add
add
mov
clc
rclb
add
xchg
pop
clc
adc
add
cmp
push
xor
nop
jmp
pop
pop
div
add
add
xchg
push
stos
outsb
clc
mov
data16
sahf
push
add
cmp
xchg
lahf
jmp
clc
xor
add
add
fdivs
mov
push
add
fmull
push
jmp
dec
push
clc
cmp
clc
jns
dec
push
clc
mov
ret
dec
fnstcw
push
scas
dec
filds
add
clc
sar
sar
add
cmp
xor
add
out
sub
shll
add
add
cmp
imul
clc
pop
inc
add
fdivrs
sar
pop
sahf
shll
add
leave
xchg
cmp
jmp
sub
jne
clc
or
add
mov
fisttps
mov
add
clc
loopne
push
call
nop
jmp
cmp
pusha
inc
cwtl
add
add
inc
add
mov
scas
adc
clc
aas
jne
sbb
clc
cmpsl
clc
xchg
fcoml
xchg
cmpsb
clc
sub
and
add
ret
clc
cmpsb
clc
movsb
clc
push
add
sub
xor
add
mov
xchg
mov
jne
add
in
dec
pop
out
push
dec
mulb
add
call
jmp
aaa
idiv
lea
clc
sub
mov
clc
hlt
shlb
add
lea
add
clc
inc
clc
scas
jnp
cmpsl
clc
cmc
fs
or
cmc
arpl
add
clc
test
cmp
clc
fs
ret
clc
jp
and
add
mov
jnp
cwtl
dec
and
add
clc
mov
push
fadd
clc
mov
cmp
iret
insl
cwtl
shl
clc
mov
or
clc
in
enter
add
add
add
add
pop
repnz
clc
fsubl
add
add
cmp
clc
lock
arpl
add
sar
clc
mov
cli
pushf
inc
clc
adc
add
aaa
scas
popf
pop
push
enter
clc
push
add
movsl
clc
push
mov
clc
mov
aaa
aam
hlt
mov
loope
sbb
clc
sub
add
addr16
adc
add
cwtl
stos
xchg
lret
add
jae
add
shl
clc
push
push
push
mov
xchg
ret
add
inc
xchg
pushf
cmp
add
mov
clc
rcll
add
xor
add
jl
or
add
iret
leave
daa
clc
push
sahf
enter
cmp
clc
mov
clc
popa
add
dec
dec
cmp
repz
sar
aam
clc
pushf
in
mov
clc
pop
fwait
fwait
adc
add
pop
clc
sbb
add
and
add
push
mov
insl
mov
lods
mov
clc
mov
nop
dec
lcall
xchg
popf
push
testb
inc
jmp
dec
add
lods
in
sbb
scas
mov
call
add
and
xor
add
daa
clc
ret
clc
xchg
add
sbb
out
ljmp
fistl
int
imul
xchg
enter
sahf
cmp
xor
add
mov
inc
add
jne
pop
lea
add
shrb
push
add
xchg
adc
add
clc
std
imul
out
mov
add
lods
lret
add
xchg
pop
clc
movsb
clc
test
jns
jns
movswl
add
insb
stos
xchg
punpcklbw
add
lea
add
cmp
add
pop
test
call
jmp
incb
lods
outsl
pop
jo
jne
clc
xchg
lods
inc
add
xor
xor
add
add
xlat
push
add
mov
clc
push
xor
or
mov
nop
jmp
cs
jmp
mov
fsubrl
sbb
clc
and
add
sub
add
fcmovnb
clc
daa
clc
xor
add
scas
out
dec
shll
add
push
push
clc
push
call
ljmp
stc
sbb
clc
jge
add
loopne
or
cmp
bound
add
add
add
add
cli
imul
pop
ss
push
mov
add
mov
mov
int
jne
mov
add
add
adc
add
xchg
cld
dec
and
add
dec
das
call
add
ret
clc
repnz
clc
jg
clc
jo
add
jg
clc
data16
inc
clc
negb
in
push
sub
nop
jmp
sub
pop
and
dec
inc
clc
cmpsb
clc
cmc
push
jmp
flds
inc
add
mov
push
add
stos
data16
incb
mov
clc
repz
fldt
pop
inc
clc
xor
push
pop
sbb
jmp
incl
jne
sub
out
sarl
clc
scas
pushf
xbegin
pop
cmp
clc
xchg
lret
inc
clc
xchg
loope
in
mov
gs
pusha
add
stos
dec
pop
cmp
call
add
clc
in
bound
add
clc
push
shll
add
add
add
add
mov
add
add
xor
xbegin
push
pusha
nop
jmp
add
jo
or
add
lock
cmp
add
ret
clc
sahf
pop
dec
jg
add
cmp
out
mov
add
push
ret
pop
push
adc
add
jne
nop
jmp
jno
pop
jae
add
clc
pop
clc
clc
jo
add
add
lea
in
arpl
add
add
in
adc
add
add
inc
add
mov
inc
clc
xbegin
mov
jo
add
testl
add
in
mov
inc
clc
mov
add
test
mov
inc
add
sar
clc
pop
lret
aad
fimuls
jns
push
add
add
mov
add
sbb
or
ret
clc
xchg
mov
clc
adc
add
inc
and
nop
jmp
or
jecxz
cmp
loop
or
add
into
dec
popa
add
xbegin
add
sbb
aad
ljmp
in
clc
inc
add
xor
add
mov
clc
and
add
cmp
mov
inc
clc
push
add
das
lahf
mov
cld
push
add
xchg
pop
clc
add
add
add
sub
out
addr16
enter
clc
push
lods
pop
aas
adc
add
insl
adc
add
xchg
cmp
add
or
add
fimull
call
clc
push
pop
xor
add
add
mov
and
add
add
jg
add
clc
cmp
add
clc
loopne
sbb
in
sti
xchg
sbb
push
add
adc
add
add
pcmpgtb
imul
popa
add
and
add
sub
clc
stos
sti
int3
bsr
pop
outsb
outsl
add
add
add
mov
push
xchg
mov
add
mov
clc
int
clc
jnp
clc
mov
jecxz
out
mov
jmp
pop
pusha
pop
add
jp
out
cmp
data16
inc
clc
test
jmp
and
add
xchg
outsl
xchg
daa
clc
sarb
nop
adc
add
clc
loopne
sets
clc
repnz
push
add
mov
adc
add
add
add
add
jl
mov
clc
arpl
add
scas
cmp
pop
xor
add
outsb
ljmp
rclb
out
pop
inc
clc
test
pop
das
repz
add
add
test
clc
add
xchg
mov
push
pop
enter
mov
inc
clc
rol
clc
dec
fsubs
add
pop
sbb
nop
mov
clc
loope
into
rcr
insb
cmp
add
push
add
inc
add
fnstsw
cli
call
call
mov
add
clc
push
xchg
in
ljmp
movsl
clc
adc
add
add
mov
call
lret
xchg
xor
add
mov
daa
clc
aas
cld
sarb
cmp
add
addl
xchg
xor
ljmp
es
repnz
dec
popa
add
testl
clc
cmp
popf
lret
clc
fwait
jl
clc
cmp
rdseed
push
xor
push
mov
xchg
ret
jne
repnz
add
xor
clc
ss
clc
sahf
pushf
and
add
mov
jmp
sub
add
test
gs
xor
add
clc
or
add
nop
jmp
xchg
jecxz
shrb
add
add
add
mov
sub
mov
lock
add
cmp
inc
add
xchg
mov
fs
insb
mov
add
stos
xlat
ret
clc
es
jmp
push
push
mov
xchg
ret
add
jne
cmp
add
pop
mov
aas
aam
add
cld
ljmp
add
add
inc
clc
aaa
inc
clc
negl
clc
mov
push
or
push
add
imul
add
add
and
push
dec
dec
mov
sar
fs
mov
fisttpll
repnz
xbegin
ret
clc
fnstcw
and
add
jecxz
jnp
add
arpl
add
sar
sbb
dec
cmp
jmp
add
mov
add
add
add
ljmp
nop
cmp
push
push
mov
xchg
ret
jno
mov
mulb
inc
add
stos
jecxz
out
mov
clc
clc
add
add
jle
clc
lret
xchg
sub
sar
cmc
fmuls
pop
ficompl
clc
xchg
add
aam
cs
mov
add
jle
adc
pushf
adc
sub
mov
clc
adc
add
sar
cmc
cmp
cmpsb
clc
int3
push
outsb
out
pop
xabort
push
add
addr16
push
add
and
add
mov
adc
add
push
add
or
fdivrs
loop
sub
sar
add
lods
add
add
add
pop
mov
add
clc
sbb
mov
ret
test
add
jp
add
lea
inc
clc
stos
nop
fadds
clc
int3
mov
add
or
cmp
dec
data16
xor
nop
pusha
add
add
add
lea
push
add
out
xchg
push
add
loope
mov
clc
fs
mov
sub
clc
scas
dec
xor
mov
add
sar
push
add
dec
out
sar
iret
inc
clc
push
add
divl
add
and
testb
mov
std
out
cmp
sbb
cld
sbb
push
call
jl
sub
inc
clc
cmp
clc
xchg
daa
clc
adc
cs
lret
sbb
mov
pop
filds
add
lcall
pop
mov
in
mov
fldcw
dec
out
test
or
or
add
clc
es
dec
cmp
clc
test
inc
add
add
add
add
add
sbb
jmp
add
mov
and
clc
or
clc
pushf
into
xchg
cld
sti
add
arpl
add
add
add
jecxz
mov
es
mov
xchg
test
movsl
clc
inc
add
sub
jp
push
add
xchg
insb
fsubr
scas
lahf
adc
adc
add
jge
clc
out
mov
lret
pop
jp,pt
mov
cmp
or
clc
addr16
cli
sarb
clc
jo
add
xabort
imul
jns
inc
add
js
push
mov
xchg
notl
and
cli
clc
lret
and
add
pusha
add
scas
mov
add
pop
push
icebp
push
jne
xor
clc
hlt
adc
add
hlt
out
xchg
das
add
das
pop
xchg
in
mov
xor
add
mov
sbb
clc
cmp
xchg
push
int
push
sbb
clc
add
add
inc
add
xor
add
add
add
pop
xchg
lret
add
inc
add
jecxz
fucomp
rolb
add
add
sahf
mov
clc
xabort
add
loope
xchg
and
clc
not
cmp
dec
cmp
out
aaa
push
add
into
sbb
test
lods
call
add
shrb
lods
mov
add
mov
in
xbegin
add
jno
add
mov
clc
in
inc
add
fsubrs
cltd
stc
jae
add
clc
adc
add
clc
cmp
clc
mov
cmp
add
xor
ja
add
mov
clc
xchg
repnz
clc
fidivl
clc
and
add
clc
inc
clc
dec
test
adc
add
clc
pusha
add
out
or
cmc
sti
test
clc
inc
add
sub
je
jecxz
sbb
add
mov
jp
imul
add
sub
add
push
push
push
mov
xchg
ret
fidivrl
add
jo
add
xor
add
enter
dec
mov
lock
repnz
cmp
add
add
dec
xlat
pop
fnstsw
popa
add
cs
and
add
add
add
jno
add
add
int
mov
das
jle
mov
clc
jb
add
incl
je
sub
add
jp
addl
add
mov
add
fstpl
add
cmc
daa
clc
jg
add
jno
add
cmpsb
clc
xlat
cmp
push
add
sbb
movsb
nop
jmp
jno
add
xchg
pop
lock
inc
clc
sub
sbb
clc
cmp
jge
stos
xor
add
into
divb
out
std
imull
add
xbegin
add
cmp
in
int3
clc
push
mov
xchg
arpl
add
add
inc
add
loope
pop
inc
clc
rorb
push
push
mov
xchg
ret
flds
in
mov
clc
jmp
clc
repz
or
add
nop
iret
shrb
mov
add
into
fwait
mov
mov
add
gs
mov
add
clc
in
cmp
lods
mov
data16
enter
xchg
lret
mov
clc
cmp
clc
jae
add
add
lods
push
add
mov
cmp
xor
or
clc
sar
add
sub
aad
dec
into
popa
add
ret
or
add
clc
cmp
dec
rcll
dec
aaa
into
push
popa
add
clc
add
jp
clc
cmp
add
nop
jmp
in
add
mov
arpl
add
add
ret
clc
mov
add
pop
mov
clc
cmp
clc
xor
inc
clc
mov
inc
mov
and
sbb
ds
clc
inc
add
push
add
and
add
pop
repz
mov
jnp
jne
clc
sub
clc
fdivrs
clc
mov
sub
add
fcomip
push
in
mov
mov
push
mov
xchg
ret
and
cmp
mov
pop
clc
stc
inc
add
push
pusha
add
or
imul
clc
mov
ds
cmp
jne
sub
xlat
pop
clc
flds
add
add
lcall
add
jb
add
pop
pushf
inc
add
jbe
cmpsl
clc
sbb
add
add
mov
mov
jg
xor
add
clc
and
add
add
jecxz
and
jl
ret
jp
push
add
stc
mov
clc
pop
scas
fs
mov
add
add
std
popf
popf
addr16
mov
std
xor
add
jno
add
lea
add
push
xchg
xchg
jmp
cltd
cmp
lock
inc
clc
cmp
clc
dec
fidivl
mov
add
mov
sbb
in
enter
add
stos
mov
add
add
add
lahf
imulb
clc
xchg
sti
insb
gs
sbb
in
pop
gs
sbb
add
nop
jmp
outsl
lea
add
add
clc
cmp
add
pop
mov
adc
add
repz
mov
xchg
ret
and
or
test
clc
sbb
mov
inc
add
add
jge
scas
ret
clc
sbb
movsl
clc
repnz
jno
add
lea
nop
jmp
mov
jo
add
mov
popf
jno
add
rcrb
sbb
clc
sbb
mov
add
inc
add
loop
mov
mov
idivl
std
mulb
add
nop
dec
cmp
hlt
aas
clc
flds
add
jecxz
jne
mov
clc
xchg
mov
mov
cli
add
push
arpl
add
pop
xor
add
jbe
clc
mov
inc
add
mov
push
mov
xchg
ret
repnz
lods
sub
add
bound
add
cmpsl
clc
fs
std
add
add
pop
aaa
stos
dec
lahf
mov
clc
xor
add
stos
cmp
clc
int
leave
repz
mov
arpl
add
clc
pop
push
add
or
pop
clc
fldl
add
icebp
mov
add
clc
jb
add
add
gs
decl
jmp
xchg
jno
jne
loop
pop
clc
mov
nop
jmp
add
scas
or
add
faddl
or
push
mov
xchg
ret
cwtl
lea
add
cmp
mov
cmpsb
clc
pusha
add
clc
and
aad
xchg
sbb
push
add
add
mov
fidivrs
test
add
pop
cmp
clc
sub
add
aas
adc
add
divb
add
add
add
addr16
jge
adc
add
push
loopne
movsb
clc
dec
aam
add
imull
clc
incb
bound
add
add
mov
jmp
pop
sub
pop
pop
repnz
mov
nop
jmp
add
add
cs
lock
add
mov
popf
ljmp
cs
insl
int
xor
add
fldt
sub
add
incl
ds
iret
jo
add
cmpsb
clc
cmpsb
clc
sub
add
jge
popf
addr16
xchg
jns
add
adc
sbb
mov
nop
jmp
mov
std
cwtl
and
add
add
and
ficoml
add
xchg
clc
xor
add
clc
mov
or
loop
push
add
mov
clc
cld
int
lcall
nop
jmp
repnz
add
dec
movsl
clc
fadd
clc
lea
add
add
add
pop
outsb
popa
add
loopne
mov
clc
mov
add
xor
add
in
adc
add
lcall
clc
inc
clc
ss
clc
push
add
stos
dec
xbegin
add
add
adc
mov
loop
fdivrs
idivb
jmp
jmp
sub
fadds
clc
sub
add
sbb
nop
jmp
and
repnz
clc
xbegin
inc
push
mov
xchg
ret
push
jp
xchg
mov
xor
add
add
clc
or
clc
xchg
mov
clc
pop
test
mov
clc
cs
and
add
lea
add
fs
cmpsb
clc
popa
add
es
jge
push
mov
out
ss
sbb
fldcw
xchg
cmp
insl
int
fmull
clc
and
add
push
add
arpl
add
inc
add
mov
pop
inc
add
ds
add
xbegin
sbb
nop
jmp
lods
sbb
lret
add
sbb
lods
dec
in
xchg
or
xchg
push
pushf
out
daa
clc
sar
fsubr
push
push
ret
sbb
mov
and
jmp
pop
xchg
div
cmp
mov
add
lret
push
cli
imul
mov
add
xor
add
jne
jl
clc
cmp
clc
push
add
js
jecxz
popf
out
enter
js
add
sbb
push
add
jl
pop
bnd
mul
clc
mov
add
out
or
add
add
aas
mov
add
ljmp
cmp
clc
test
or
fwait
ret
clc
or
add
dec
pop
movsl
clc
pop
clc
or
jg
or
fisubs
add
add
cmp
je
clc
sub
add
add
lcall
add
add
add
push
push
mov
xchg
ret
xchg
ficomps
lods
dec
cmp
or
add
mov
gs
out
push
add
in
cld
iret
shlb
or
mov
mov
repz
clc
push
clc
das
data16
mov
add
xlat
sbb
sti
divb
add
clc
pushf
xor
push
add
mov
aaa
fisubrl
jne
clc
cmp
data16
aaa
dec
jp
add
push
add
push
clc
imul
pop
aas
movsl
clc
arpl
add
clc
phsubd
xchg
mov
or
fsubrl
in
add
add
clc
fldenv
dec
mul
clc
sbb
cmp
or
clc
pop
cmpsb
clc
jmp
subl
clc
ret
pop
push
test
add
add
out
mov
lcall
add
add
test
jl
clc
aad
adc
add
pop
lahf
lods
fdivrp
test
cltd
push
clc
jmp
adc
add
ja
loope
and
add
clc
clc
push
add
sbb
jp
add
pop
fs
jl
daa
clc
mov
clc
leave
and
add
jmp
add
lods
jbe
loop
jmp
add
push
add
jae
add
and
add
clc
insb
xchg
mov
add
call
clc
mull
pop
clc
push
inc
add
add
testb
cmp
lcall
in
je
sti
pop
mov
push
inc
add
jp
xchg
rcl
fwait
add
popa
add
scas
in
sub
add
data16
sub
jb
add
add
clc
cltd
out
mov
fsubl
nop
mov
mov
and
insb
cmp
add
add
add
aam
clc
inc
add
lods
jnp
add
lock
into
int
pop
push
pop
clc
call
mov
add
xor
nop
jmp
add
xchg
clc
bsf
add
std
cli
add
add
stos
sbb
cmp
clc
push
push
add
pushf
mov
scas
mov
add
nop
jmp
cmp
pop
jno
in
clc
cld
popf
add
add
adc
add
clc
inc
clc
xor
add
lret
stos
dec
mov
add
add
add
add
add
aad
jno
add
sarl
fisttps
divl
clc
push
add
lahf
dec
mov
mov
fists
loop
jmp
add
scas
push
aas
aam
ret
clc
dec
inc
add
pop
fsubrl
add
test
or
clc
mov
popf
out
in
jl
push
adc
imul
adc
add
mov
clc
addr16
arpl
add
test
fisubrl
mov
mov
sub
sub
aas
xor
add
clc
int3
lods
sbb
cltd
jmp
mov
jmp
cs
inc
clc
lret
push
push
mov
xchg
ret
test
jne
loope
push
bound
add
jo
add
mov
lods
push
add
jmp
push
lods
pop
dec
xlat
xor
add
add
icebp
xchg
mov
add
add
lea
std
aad
shrl
add
clc
cmpsl
clc
add
clc
dec
clc
mov
fs
fldt
add
add
filds
add
sar
cwtl
in
mov
add
lock
in
adc
add
or
or
scas
movsb
clc
push
out
test
xchg
loopne
mov
add
clc
jp
add
add
pop
cmp
xabort
movsb
clc
sbb
xchg
int
pushl
add
clc
jg
dec
mov
mov
sti
inc
add
pop
add
mov
mov
xchg
ret
and
bnd
jbe
lea
push
add
add
add
mov
mov
nop
jmp
mov
aaa
jmp
push
add
fldt
inc
add
int3
in
pop
iret
bound
add
inc
add
inc
add
jbe
clc
and
ret
clc
inc
clc
sub
lret
loope
sbb
jmp
xor
add
push
mov
mov
sub
insl
mov
add
pusha
add
insb
sub
lret
sar
inc
nop
jmp
sbb
in
pop
bound
add
clc
xchg
push
clc
mov
clc
dec
data16
clc
je
clc
and
sub
div
fimull
add
add
scas
rcll
xor
add
add
add
repz
add
mov
push
pop
test
push
jmp
xchg
and
clc
loope
jmp
add
fistl
jmp
sbb
add
clc
ret
xchg
jl
icebp
scas
xchg
xor
add
jle
add
cmp
xchg
sar
clc
pop
jge
sbb
inc
clc
mov
adc
add
add
ja
add
arpl
add
clc
cmpsl
clc
cmp
pop
jbe
hlt
lods
jne
add
nop
jmp
ds
cs
add
cmp
clc
jae
add
fimuls
push
add
pop
or
and
add
in
sar
add
add
mov
add
rorl
call
rolb
aas
jp
in
out
shrl
clc
stos
xchg
cmp
inc
add
xor
add
mov
clc
and
xor
add
xchg
or
clc
inc
add
in
fsubl
add
adc
clc
jo
add
arpl
add
clc
cmp
fiadds
cs
imull
mov
jnp
movsb
clc
cmp
ficompl
add
rcrl
xor
cmp
clc
adc
push
nop
jmp
add
cs
ret
cmp
and
add
pusha
repnz
adc
nop
jmp
mov
add
int
cmpsl
clc
lock
adc
add
add
lret
push
add
mov
and
add
jl
dec
mov
out
jno
add
inc
add
rcll
scas
pop
mov
inc
add
xor
jecxz
xor
add
clc
pop
jge
clc
push
add
in
insb
push
lahf
test
adc
add
mov
cmp
rcrl
in
add
add
clc
insb
mov
add
incl
nop
jmp
add
sbb
cli
fimull
push
add
fstps
and
add
popf
icebp
jg
add
scas
dec
mov
xor
nop
jmp
jno
jne
inc
add
cmpsl
clc
mov
pop
nop
jmp
sub
inc
jno
pop
xor
push
add
mov
pop
sub
popf
aam
inc
clc
fnstsw
add
int
add
push
add
maskmovq
divl
fildll
testl
idivb
clc
call
add
jle
xor
add
add
add
jle
xor
add
jmp
fidivs
xchg
test
int
xchg
outsl
or
adc
add
inc
add
xor
add
loop
hlt
pop
int
repz
add
inc
add
outsl
sub
add
mov
pop
int
add
stos
push
add
add
add
popf
sub
cs
cli
lods
inc
clc
je
add
lret
int3
pop
sub
nop
jmp
jecxz
jp
sub
pop
or
cltd
mov
pop
mov
iret
roll
add
sbb
clc
add
add
sub
dec
fcmovnb
clc
inc
clc
jecxz
pop
push
add
incl
inc
cmp
jmp
sub
pusha
add
stos
sub
mov
fs
clc
testb
jp
mull
add
mov
mov
movsb
clc
sbb
addr16
stos
jae
add
repnz
stos
out
ja
add
dec
cmpsl
clc
bound
add
sub
clc
mov
cmp
add
jp
aaa
xchg
scas
cmpsb
clc
mov
addr16
sub
add
hlt
je
cmpsl
clc
mov
clc
das
cwtl
stos
insb
dec
ljmp
testb
sub
ret
pop
jecxz
add
cmpsb
clc
mov
lahf
popf
sbb
xabort
btr
clc
lret
jnp
das
or
and
add
add
lcall
jbe
cmp
add
sub
mov
clc
decb
outsb
cli
dec
mov
clc
mov
es
cmp
xor
add
lcall
test
clc
adc
add
clc
push
jbe
jnp
clc
sbb
adc
xbegin
mov
in
sub
xor
add
clc
inc
clc
mov
add
add
paddusb
leave
test
dec
cmp
daa
clc
add
add
clc
add
add
out
jp
add
aas
sti
into
scas
xchg
push
push
cs
mov
add
js
dec
jno
add
add
add
add
fsubs
and
add
clc
aam
add
cmp
clc
jns
addr16
mov
add
pop
insb
loopne
pop
clc
inc
add
repz
or
inc
add
add
lea
nop
mov
jno
add
clc
adc
add
inc
clc
imul
pop
jo
add
sub
xchg
pop
clc
xor
adc
add
aam
dec
fcomi
data16
inc
clc
sahf
pop
clc
sar
pop
xor
xor
clc
cli
int3
popa
add
cwtl
in
mov
int
mov
clc
dec
mov
imul
clc
pop
das
data16
punpckhbw
jmp
rcrb
fscale
repz
jbe
dec
sbb
clc
ret
xchg
dec
xchg
dec
xbegin
add
cmp
inc
clc
mov
add
movsl
clc
inc
add
jg
clc
repnz
clc
sbb
jg
nop
jmp
add
sub
data16
jae
add
jbe
or
clc
negl
add
xchg
push
inc
add
cmp
inc
clc
and
add
add
cmp
add
mov
add
xor
add
sub
clc
inc
add
pop
sbb
int3
jb
add
clc
pop
xchg
aad
movsb
clc
add
add
add
cltd
sub
sub
and
add
push
add
push
icebp
mov
mov
je
and
clc
sahf
cmp
add
stos
mov
out
inc
clc
iret
imul
call
xchg
xor
add
xchg
call
ljmp
add
sti
sbb
mov
add
sar
gs
and
add
shlb
clc
in
mov
ret
clc
movsl
clc
inc
clc
popf
adc
add
clc
mov
bound
add
test
clc
sub
mov
mov
scas
inc
add
add
add
cmp
cmc
or
inc
add
and
cmp
xor
add
loope
inc
add
fwait
adc
add
jge
add
divl
add
fdivr
add
nop
jmp
filds
test
xor
or
add
cmp
call
add
inc
clc
inc
add
or
add
clc
mov
adc
add
xchg
jecxz
pop
leave
push
and
nop
jmp
mov
mov
clc
pop
sub
push
mov
xchg
ret
jne
jno
clc
jl
add
and
dec
add
mov
lcall
fbld
in
leave
cmp
iret
pop
ljmp
lods
jmp
clc
out
pop
jmp
aam
clc
movsl
clc
adc
add
fs
iret
cltd
xor
add
xchg
gs
xor
addr16
push
imul
add
add
dec
inc
clc
movsl
clc
jns
loop
pop
stos
xor
add
push
add
icebp
icebp
dec
popf
dec
push
dec
test
decb
sub
call
pusha
out
pop
fdivp
out
aad
dec
inc
clc
into
data16
mov
pop
inc
clc
adc
add
lahf
dec
outsl
jno
add
push
add
xbegin
add
stos
lret
sti
adc
add
cmp
jb
add
test
shl
out
sub
add
jnp
iret
mov
add
xchg
adc
add
clc
into
daa
clc
adc
cmpsl
clc
jno
add
stc
dec
rol
clc
pop
lock
add
mov
sub
nop
jmp
incb
lods
rcr
or
add
add
leave
test
push
mov
xchg
ret
add
in
clc
insl
ss
testl
ficompl
and
add
dec
mov
clc
out
ss
add
nop
jmp
xchg
test
mov
rcrb
push
jmp
cmp
push
add
mov
add
and
add
clc
inc
clc
mov
xabort
arpl
add
clc
mov
add
cmp
insl
leave
fmuls
clc
or
add
mov
lcall
clc
scas
rcpps
add
cmp
cli
inc
add
jbe
add
cmp
fstpl
movsb
clc
inc
add
ss
clc
fs
cmpsl
clc
es
push
pop
nop
jmp
repnz
push
mov
add
dec
push
clc
dec
rcrl
sbb
lret
or
push
clc
push
or
add
add
int3
jp
clc
adc
add
cmp
add
inc
clc
cmp
add
dec
out
mov
sar
clc
aam
into
sbb
insb
dec
mov
jbe
nop
jmp
pop
pop
add
clc
fisubl
add
or
add
add
push
mov
xchg
ret
mov
cs
adc
cmp
xchg
out
push
clc
popa
add
jbe
clc
cmp
clc
in
mov
mov
nop
jmp
add
jp
cmp
int3
jb
add
add
add
push
nop
jmp
fiaddl
fisubs
movsb
clc
scas
mov
mov
add
mov
add
clc
adc
add
add
repz
sub
add
add
add
ret
clc
mov
clc
pop
pop
mov
clc
xor
add
add
rcrb
add
test
xor
nop
jmp
rolb
add
aaa
shrb
or
jns
add
jb
add
add
add
add
jge
das
jbe
clc
aaa
js
sti
mov
clc
xor
adc
add
sub
add
add
jae
add
clc
repz
add
clc
adc
xor
add
clc
sbb
add
push
clc
in
outsb
das
dec
shlb
add
add
pop
inc
add
push
add
movsb
clc
mov
mov
xchg
xlat
add
add
pop
mov
sar
adc
add
fcmovnbe
and
adc
add
subl
nop
jmp
mov
nop
js
or
add
cmpsl
clc
inc
clc
vmovlps
add
add
xor
add
clc
sub
cli
mov
clc
aad
add
mov
mov
push
add
sub
add
push
jnp,pt
ss
sub
sub
clc
push
add
lret
xchg
sub
clc
add
add
test
aas
mov
add
pop
xchg
mov
pop
test
jns
in
or
clc
inc
clc
pop
push
clc
mov
sbb
mov
xchg
ret
sub
sub
add
adc
clc
or
clc
xchg
sbb
add
mov
mov
in
das
stc
std
adc
add
das
int3
push
in
sbb
stos
inc
add
or
add
cmp
dec
lret
sti
jnp
push
add
nop
jmp
add
or
ret
mov
add
aad
pop
xor
add
test
fmull
cmp
push
mov
xchg
ret
add
imul
sbb
jmp
jp
xchg
in
add
add
xor
add
mov
aad
pusha
add
jne
add
clc
lods
add
add
xchg
xbegin
arpl
add
clc
mov
int
sarb
mov
jbe
and
add
push
mov
nop
jmp
pusha
jno
cwtl
add
mov
add
push
lcall
xchg
dec
cmp
and
clc
mov
fstps
add
push
jno
add
lret
dec
sahf
lahf
fs
pop
popf
insb
inc
jb
nop
jmp
add
add
mov
clc
push
cmp
mov
dec
je
mov
cmp
add
cmp
and
add
add
push
iret
sarb
clc
or
cwtl
int
mov
sar
scas
daa
clc
icebp
cltd
fcomp
push
add
sub
inc
clc
sbb
sbb
clc
mov
add
loop
sub
mov
jle
clc
test
push
nop
jmp
lods
jne
add
in
sub
clc
aad
in
lahf
shr
xbegin
add
push
add
sub
push
add
clc
mov
add
test
and
stos
shll
add
mov
sar
decl
test
cmp
ljmp
clc
imul
clc
cmp
fldenv
clc
aam
xor
add
add
iret
mov
clc
incl
inc
out
xorl
clc
sar
mov
jecxz
je
inc
clc
xor
add
in
jns
inc
add
inc
clc
iret
lahf
mov
fisubrl
jecxz
and
add
add
cmp
dec
lahf
scas
mov
add
in
cld
insb
aam
clc
add
add
cmpsb
clc
cmp
add
add
pop
aas
cmpsb
clc
idivl
ljmp
adc
add
nop
gs
adc
add
add
leave
lret
add
mov
or
mov
add
push
imul
add
jge
test
push
in
inc
clc
pop
pop
push
add
push
jmp
add
and
pop
jne
adc
add
add
push
add
rorb
and
add
clc
insb
xor
add
add
lret
nop
jmp
add
add
mov
out
mov
push
clc
ret
clc
negl
add
data16
push
in
pushl
sub
add
mov
insb
shll
add
loopne
fidivl
add
add
add
data16
inc
clc
dec
dec
ret
clc
pop
xchg
dec
pop
popf
fildl
add
outsl
hlt
fwait
xchg
mov
cmc
inc
clc
sub
clc
mov
mov
xchg
xor
add
clc
ja
clc
je
mov
push
mov
xchg
ret
add
mov
inc
add
and
add
in
loope
ljmp
mov
add
clc
cmp
xbegin
jbe
ss
cmp
jge
mov
arpl
add
add
mov
add
add
add
das
inc
clc
cmp
clc
push
add
or
clc
cmp
add
push
add
ja
fcmovne
cmp
clc
xchg
mov
add
add
add
repz
add
bound
add
jno
add
mov
jmp
add
sbb
jmp
fiaddl
add
cltd
sub
add
xor
dec
data16
das
add
add
add
add
and
lods
jecxz
fisubrl
inc
clc
and
add
pop
pop
fidivrl
sub
nop
jmp
add
out
jne
add
clc
ret
xor
add
sbb
mov
mov
clc
std
cmp
add
sbb
imul
add
xchg
push
sti
out
fucomp
cmpsb
clc
push
movzwl
nop
jmp
lods
mov
adc
add
xor
add
clc
push
add
sbb
clc
inc
clc
dec
out
sarb
test
idivl
add
push
add
or
pop
pop
add
push
xchg
outsb
pop
push
jecxz
dec
xabort
ret
pop
xlat
or
add
sbb
mov
out
fists
dec
fldcw
loopne
lods
call
mov
xchg
ret
fisubs
sub
mov
clc
dec
pop
inc
add
and
add
jne
inc
clc
idivl
pop
jnp
enter
add
cmp
clc
adc
add
and
add
cmpsl
clc
mov
clc
ret
add
and
add
sbb
pushf
aas
hlt
aas
int3
shrb
jns
inc
add
add
pop
dec
scas
pop
add
add
xor
push
add
sub
pop
incb
push
add
inc
add
int3
in
aaa
pop
cmp
clc
push
add
loop
pop
into
dec
cmp
clc
xabort
loope
adc
add
jmp
jmp
not
jbe
add
mov
mov
xchg
mov
add
add
aaa
dec
data16
add
add
clc
jl
xbegin
rcr
push
add
adc
add
lret
lods
mov
cmp
fnsave
aas
dec
adc
jl
sbb
jmp
clc
or
aad
out
std
bound
add
cmp
add
fdivrs
cmp
test
jae
add
or
cmp
mov
nop
jmp
add
inc
fiaddl
sahf
xchg
fwait
lods
push
sahf
pop
push
loop
iret
sbb
jmp
add
std
pop
mov
arpl
add
push
push
push
mov
xchg
ret
add
repnz
clc
movsl
clc
adc
add
or
idivl
add
daa
clc
jg
test
jae
add
jb,pt
add
add
add
jns
clc
jmp
icebp
lret
aas
sbb
add
ja
mov
sbb
clc
mov
mov
mov
popa
add
inc
add
stos
mov
pop
mov
xor
add
cltd
mov
ret
clc
xor
xor
add
dec
xchg
jge
add
arpl
add
lock
push
aam
in
insb
dec
jo
add
aad
clc
and
icebp
rcrb
inc
clc
adc
jo
add
enter
movzwl
clc
sbb
stos
inc
clc
cmc
cmp
scas
decl
test
mov
call
ljmp
in
movsl
clc
and
add
ss
cmp
mov
nop
jmp
or
subl
xchg
jb
add
pop
outsb
enter
aad
shr
aaa
xor
add
clc
sub
add
sub
add
add
arpl
add
nop
in
cltd
mov
clc
adc
add
sar
mov
pop
data16
mov
mov
add
call
jge
xbegin
jmp
testb
cwtl
repnz
sub
xor
add
mov
sbb
sti
lcall
add
add
das
and
add
add
jg
clc
jne
add
iret
xchg
add
add
clc
xchg
inc
add
inc
add
push
int
pop
cmp
clc
sbb
add
hlt
into
out
outsb
decl
jmp
cwtl
add
cmp
ficoml
pop
clc
lret
add
add
fs
xor
clc
imul
clc
jge
mov
shll
add
pop
adc
clc
pop
das
sub
add
out
jecxz
xlat
push
add
pop
sbb
clc
mov
clc
push
int3
push
add
mov
sbb
cmp
pop
inc
clc
push
pop
xor
add
sub
nop
jmp
jecxz
in
sub
add
push
cwtl
xlat
fnsave
clc
add
add
add
aad
xabort
pop
fcomps
fcmove
inc
clc
push
inc
clc
xchg
cmp
add
cmp
xchg
mov
clc
mov
clc
inc
add
test
in
or
and
add
jecxz
mov
bound
add
add
jecxz
int
add
dec
mov
or
adc
fs
rclb
xor
add
add
add
sti
in
xor
std
bound
add
loopne
test
stos
ficoms
add
and
add
add
pop
nop
jmp
ret
fsts
jmp
nop
jmp
add
fidivrs
add
xchg
aad
and
add
add
nop
push
jnp
clc
inc
add
mov
add
dec
jo
add
clc
in
sub
mov
rcll
add
int3
call
push
clc
add
add
loop
jno
add
add
clc
mov
add
pop
lods
es
in
sub
and
add
add
clc
xchg
xchg
xchg
mov
add
sbb
add
jmp
jecxz
sub
add
jg
add
pop
mov
cmp
xchg
fdivr
shlb
add
jo
add
cltd
mov
sub
clc
jle
add
jg
pop
fdivp
adc
clc
leave
int
add
shl
clc
push
add
sub
clc
and
add
clc
mov
add
sar
clc
jmp
sub
push
push
cli
push
ficomps
outsl
add
pop
fiadds
add
add
add
add
pop
getsec
mov
sbb
or
add
sarb
pop
sub
lret
clc
add
add
fwait
std
and
sti
incb
mov
pop
clc
lods
sar
sbb
inc
jg
ljmp
add
or
ja
adc
add
js
clc
fs
jb
add
push
add
mov
inc
clc
xchg
rorb
xchg
ljmp
es
push
nop
jmp
jp
jo
add
add
cmp
jle
pop
add
add
add
insl
faddl
jecxz
xchg
jns
jns
adc
out
xchg
jno
add
mov
mov
xchg
ret
add
add
sub
cmp
cmp
clc
stos
iret
test
add
add
sub
add
lods
mov
jno
add
dec
nop
jmp
sub
rcrb
or
lods
mov
xor
add
cmp
add
clc
ret
out
inc
add
in
push
pop
sub
dec
inc
add
mov
add
nop
jmp
lock
pusha
push
jmp
nop
jmp
add
jne,pt
out
fwait
mov
add
pop
dec
xchg
mov
xor
add
xor
mov
cmp
add
mov
dec
jno
add
add
add
lcall
and
add
clc
jecxz
push
stc
sub
add
sbb
add
add
add
xchg
xchg
cmp
dec
pop
adc
add
clc
int3
adc
dec
inc
add
leave
sub
xabort
pusha
add
mov
add
add
add
add
nop
jmp
and
xchg
imull
call
sti
je
cmp
add
leave
mov
mov
mov
add
test
ror
inc
clc
clc
jge
lods
mov
mov
or
aam
cmp
clc
jne
aam
add
add
jge
add
pusha
add
xlat
addr16
mov
insb
mov
fildl
clc
popf
repz
clc
push
mov
nop
jmp
lea
in
filds
pop
mov
jmp
clc
loop
and
add
iret
pushf
inc
add
inc
add
testb
pop
or
sub
add
cmp
mov
scas
xor
add
scas
shlb
cmp
clc
ret
mov
cmpsb
clc
ss
push
popf
loope
test
clc
and
push
add
test
bound
add
clc
roll
fmulp
mov
rolb
inc
clc
mov
add
clc
es
add
jo
add
xchg
cmc
or
clc
fistpl
lock
cmp
out
mov
test
add
add
clc
push
add
test
jno
add
add
loopne
push
add
test
test
arpl
add
sar
bound
add
add
add
jge
int
clc
cmp
dec
nop
jmp
fisubl
in
repnz
add
pop
movsb
clc
imul
jb
add
shl
push
mov
xchg
ret
add
add
clc
ss
gs
push
data16
jo
add
add
mov
jmp
mov
push
test
lods
test
sub
clc
fwait
cmp
add
xbegin
add
call
mov
out
bound
add
add
nop
jmp
out
repnz
add
nop
daa
clc
inc
add
mov
aas
add
test
inc
add
test
repnz
clc
sub
mov
rorl
lods
mov
clc
xor
add
add
cmp
add
pop
stos
mov
clc
sti
das
and
add
jecxz
icebp
adc
add
dec
pop
xor
clc
xchg
pop
insb
push
rep
nop
jmp
or
jecxz
and
insl
mov
cmc
clc
lock
in
xchg
out
jp
or
add
out
push
pop
nop
jmp
jp
add
repnz
or
idiv
mov
loop
cs
or
clc
pop
clc
push
jno
add
clc
cld
lcall
add
add
sub
clc
jecxz
in
repnz
clc
sahf
mov
mov
scas
xbegin
add
into
aaa
sub
mov
mov
push
mov
xchg
ret
add
xlat
push
add
sub
in
jns
or
cmp
push
add
dec
cmp
sarl
sbb
cmpsl
clc
out
arpl
add
mov
clc
aaa
loop
fisubl
clc
sar
clc
or
xor
add
sub
add
sbb
clc
clc
add
push
clc
loopne
scas
ja
clc
aas
iret
jp
or
add
jle
clc
push
sar
insl
mov
lods
or
ror
and
add
add
xabort
dec
jp
insl
lea
clc
lahf
mov
pop
nop
jmp
and
sub
adcl
and
add
bound
add
mov
add
add
add
outsl
aas
mov
pop
mov
adc
add
pop
sub
fmull
out
adc
add
loopne
cmp
or
sub
xchg
repz
lods
movsl
clc
dec
and
add
movsl
clc
in
test
add
add
lret
loop
adc
xchg
ljmp
ficomps
in
adc
add
clc
popa
add
sti
fs
cs
test
xchg
fwait
adc
clc
in
pop
sbb
or
jmp
and
mov
mov
nop
jmp
or
inc
clc
mov
scas
roll
clc
enter
sahf
sub
clc
jae
add
ret
clc
add
add
mov
clc
adc
add
and
jmp
add
add
aam
mov
aas
stos
data16
lahf
popa
add
inc
clc
jp
xor
add
lods
leave
sbb
and
into
sbb
nop
jmp
jp
shrb
add
mov
add
idivb
xchg
inc
add
mov
clc
mov
test
or
ret
cmp
and
add
mov
dec
add
clc
sbb
add
add
aad
pop
xor
add
xchg
cmp
imul
clc
loope
xor
add
nop
gs
pop
mov
clc
inc
add
hlt
pop
fs
sbb
and
add
jo
sbb
sysret
clc
dec
inc
clc
cmp
add
adc
add
add
dec
inc
add
push
add
cmp
add
in
aaa
and
add
add
sti
pop
push
add
pop
loope
mov
clc
out
xor
add
jmp
repnz
xchg
sbb
sub
lcall
data16
lock
mov
add
sahf
add
add
mov
nop
jmp
std
lods
lods
or
ret
clc
cmp
push
mov
xchg
ret
add
jo
add
dec
and
add
sar
aas
xabort
mov
enter
and
add
xchg
push
stc
fstps
push
add
ds
cmp
add
in
cmp
sarb
mulb
mov
add
mov
addr16
stos
test
mov
int
scas
dec
inc
clc
mov
add
xchg
sbb
cld
adc
add
push
cmp
add
add
jns
xor
add
xor
add
xchg
out
xchg
xor
add
ljmp
clc
and
add
pushf
and
add
add
add
clc
sbb
adc
add
add
in
test
push
add
scas
add
add
add
gs
mov
clc
test
push
add
mov
stc
pop
sub
add
mov
mov
add
cmp
add
addr16
aas
xchg
jb
add
pusha
add
cmp
std
jle
mov
clc
scas
cmp
mov
xor
add
inc
add
sub
in
out
fwait
jnp
clc
test
rolb
popf
repz
push
add
jmp
mov
mov
mov
jg
push
movsl
incl
add
add
ret
and
dec
pop
loopne
mov
jne
nop
jmp
and
pop
clc
adc
add
loopne
jge
movsl
clc
inc
clc
pop
lcall
inc
clc
loop
inc
clc
scas
iret
scas
sar
clc
scas
decb
inc
clc
pushf
aas
shrl
add
gs
sub
add
and
add
cmp
mov
add
icebp
nop
es
fisubrs
clc
xchg
jbe
jl
addr16
push
mov
add
dec
in
sub
and
add
js
add
in
and
bound
add
xchg
sub
push
mov
xchg
ret
xchg
jp
aaa
lret
push
add
sub
clc
inc
clc
cmpsl
clc
mov
mov
add
add
pop
inc
add
inc
add
xor
clc
dec
outsb
aad
add
lret
add
add
dec
xor
add
add
fs
push
stc
rcll
add
outsb
cwtl
sar
fnsave
inc
add
or
add
scas
sbb
jae
add
stos
lret
cmpsb
clc
mov
add
cmp
add
loop
das
push
out
pop
mov
clc
into
and
add
imul
jmp
jne
and
fldcw
fdivl
mov
loopne
cmpsb
clc
data16
mov
add
pop
fldcw
add
mov
add
call
and
jp
sar
jl
clc
test
call
insl
jp
add
mov
push
pop
jp
lock
idivb
movsb
clc
jno
add
imul
clc
lahf
icebp
cld
jb
add
cs
xchg
xchg
cmp
clc
call
jmp
cs
pop
add
and
repnz
jp
es
sub
bound
add
dec
sub
pop
inc
clc
pop
mov
clc
dec
sahf
mov
clc
jo
add
leave
inc
add
insb
js
dec
mov
std
rorb
mov
add
loope
test
and
add
jno
add
pop
cmp
inc
clc
push
clc
and
popa
add
jmp
add
add
jnp
clc
mov
cs
clc
jb
add
jmp
adc
add
add
loopne
xlat
ret
add
sbb
clc
arpl
add
mov
in
sub
sbb
nop
jmp
xor
add
testb
xor
clc
imul
inc
clc
xchg
mov
xor
add
clc
cltd
dec
dec
lock
test
clc
sub
cmp
nop
jmp
mov
xor
add
and
sar
add
aaa
int
mov
jnp
bound
add
add
xor
add
stc
or
popa
add
je
in
jne
mov
clc
xor
add
push
inc
add
pop
dec
stc
pop
xchg
sbb
aad
clc
cmc
push
clc
inc
clc
movsl
clc
gs
dec
cmp
fsubs
add
imul
clc
enter
aas
push
push
xor
nop
jmp
repnz
filds
sar
xchg
xchg
loopne
out
and
add
sbb
mov
clc
xor
add
push
mov
xchg
ret
or
in
loop
push
add
inc
clc
adc
add
add
xchg
sti
icebp
imul
mov
test
add
inc
clc
and
add
mov
pop
jno
add
mov
clc
fcompl
add
out
and
add
add
jnp
mov
sar
and
add
mov
sub
clc
stc
repz
dec
cli
in
mov
or
clc
xbegin
clc
sar
add
xchg
cmpsb
clc
mov
mov
cmc
inc
add
pop
clc
pop
test
imul
or
cltd
adc
add
fs
or
cmp
clc
shrb
sbb
das
loopne
aas
jge
xor
add
inc
add
and
add
fisttpll
loopne
pusha
add
and
add
cmp
adc
add
loopne
cmp
lret
mov
outsl
cmpsl
clc
loope
jl
lret
in
mov
jnp
out
pop
cmpsl
clc
pop
nop
stos
add
out
push
add
inc
clc
add
add
add
ss
adc
add
clc
mov
jge
je
out
lret
out
adc
add
mov
js
out
add
add
push
mov
clc
or
add
clc
add
add
add
pop
xabort
sar
ja
add
aam
mov
jae
add
mov
nop
jmp
mov
xchg
jne
imulb
adc
add
inc
add
loop
lret
adc
add
loopne
xchg
or
jbe
push
add
incb
inc
clc
fists
add
arpl
add
add
xchg
xchg
je
clc
mov
add
int3
cld
inc
add
sub
add
add
clc
sar
or
jmp
pop
pop
pop
mov
add
add
jmp
jp
add
flds
add
add
cli
aas
inc
add
mov
jecxz
push
clc
jg
mov
nop
jmp
jno
pusha
lea
int
add
mov
clc
cmp
cli
mov
clc
and
sahf
out
cmp
sti
js
aad
mov
mov
clc
add
mov
clc
ljmp
push
add
sub
data16
in
mov
clc
mov
test
lods
add
add
je
inc
clc
mov
jle
adc
add
inc
add
or
jne
clc
in
push
xchg
test
clc
push
mov
leave
push
inc
add
scas
xor
add
and
add
decl
shl
ljmp
insl
and
add
jp
cmc
inc
clc
push
clc
push
add
xor
add
clc
bound
add
cli
sbb
jmp
fbstp
add
add
inc
add
jg
aas
dec
jmp
add
add
popf
sti
aas
or
imul
add
hlt
or
add
sar
xor
add
fsubrl
jne
nop
jmp
inc
add
mov
clc
lods
adc
add
add
sbb
add
clc
sbb
adc
add
pop
clc
mov
add
sarb
mov
clc
outsb
fidivs
add
fldcw
and
add
cmpsl
clc
jns
clc
pop
loop
dec
mov
clc
test
add
lret
clc
repz
clc
xabort
clc
xor
add
mov
arpl
add
clc
loopne
mov
add
push
clc
pusha
add
pop
mov
clc
pop
jne
mov
or
add
and
and
add
add
dec
popa
add
aaa
test
jae
add
clc
ja
js
adc
add
add
add
int
in
jae
add
add
push
cmp
inc
clc
mov
cmp
add
cld
jle
xor
push
mov
xchg
ret
fcmovu
jne
pop
inc
add
adc
add
or
ds
mov
dec
mov
aam
ret
clc
pop
jno
add
add
xabort
out
add
add
xchg
iret
cltd
and
add
dec
mov
call
or
add
pushl
nop
jmp
pop
pop
add
mov
sub
sbb
and
add
clc
stos
push
add
inc
clc
inc
add
nop
pop
and
add
add
add
add
add
clc
jbe
mov
push
add
adc
add
je
mov
mov
dec
sbb
push
add
pop
outsl
or
add
cmp
xchg
push
lahf
mov
jmp
pop
xor
ret
add
add
jne
cmp
clc
pand
pop
clc
push
out
add
add
mov
push
mov
xchg
ret
ds
xor
clc
packuswb
call
and
addr16
pop
inc
add
fwait
out
inc
clc
jge
jecxz
das
pop
aas
addr16
or
push
imul
dec
dec
das
jno
add
push
mov
add
add
movsl
clc
scas
pushf
push
push
push
mov
xchg
ret
and
xabort
into
pop
jo
add
mov
mov
clc
lea
clc
cmpsl
clc
shr
mov
cmp
mov
clc
sbb
and
add
call
clc
and
add
clc
cmpsb
clc
or
inc
add
adc
add
cltd
jbe
push
add
out
fwait
int3
gs
clc
out
lods
cmp
clc
or
pop
cs
clc
jmp
add
dec
inc
add
and
add
xchg
ss
sahf
jp
fisttps
adc
add
dec
fnsave
add
clc
add
add
push
add
adc
add
iret
clc
popf
xchg
inc
add
pop
dec
pop
loop
shr
and
clc
lret
add
mov
mov
sbb
adc
jl
push
jmp
adc
stos
cmp
add
rorl
lahf
sahf
mov
add
add
add
and
add
cli
cmp
in
inc
clc
popa
add
xabort
add
shlb
fldenv
inc
add
ret
fistpll
repz
loopne
and
add
clc
dec
gs
mov
ja
jp
fcmovnbe
lfs
sub
clc
fwait
xor
add
clc
loope
enter
cld
or
pop
add
add
clc
scas
test
pop
jge
lahf
push
dec
stos
mov
clc
or
outsl
stos
rcll
add
addr16
jle
lods
out
inc
add
imul
add
clc
push
adc
add
sbb
add
sub
add
add
inc
clc
add
add
mov
sbb
sub
add
add
xabort
in
dec
outsb
negl
add
cmp
add
test
cmpsl
clc
popf
mov
clc
std
xlat
fsts
add
cmpsl
clc
adc
mov
hlt
adc
add
add
nop
jmp
fiaddl
add
fisubrs
dec
mov
clc
or
cmp
sub
scas
push
int
decl
and
shrb
clc
sub
add
clc
sub
clc
dec
pop
push
clc
add
add
lret
pop
mov
cltd
push
out
mov
clc
push
mov
nop
jmp
push
add
add
into
je
clc
test
popa
add
inc
clc
mov
add
in
idivl
xlat
or
out
addr16
inc
clc
adc
add
clc
incl
dec
cmp
jmp
ficompl
xchg
mov
add
add
add
das
push
pop
pusha
add
pop
lock
adc
add
xchg
enter
cmp
rcrb
pop
jecxz
adc
add
add
mov
xor
add
add
stos
clc
mov
clc
jbe
movsl
clc
mov
clc
dec
sbb
fisubrs
sbb
clc
test
lods
ror
sti
outsl
jno
add
dec
popa
add
movsl
clc
mov
cs
and
add
pop
clc
mov
clc
cmp
clc
mov
add
sbb
es
mov
test
mov
add
add
xor
add
lock
call
outsl
and
pop
sbb
clc
jo
add
add
and
add
loop
bound
add
lods
ss
push
clc
dec
lret
jno
add
push
stos
xor
fistl
mov
sub
ret
add
adc
clc
data16
or
clc
cmp
pop
xbegin
in
in
sbb
clc
mov
cs
int3
dec
stos
mov
iret
scas
cwtl
jae
add
add
mov
clc
movsl
clc
call
add
clc
mov
or
add
insb
xor
add
xabort
xor
add
dec
in
jnp
out
stos
or
add
add
clc
sahf
test
jle
jge
clc
mov
sbb
jle
clc
dec
test
fdivrp
jmp
js
mov
and
clc
or
imul
add
decl
int3
out
sub
pop
jne
add
add
sbb
jmp
sbb
cs
pop
clc
ljmp
mov
insl
sahf
and
inc
clc
mov
clc
jno
add
xchg
xchg
pop
lret
add
sbb
repz
mov
xchg
ret
add
jp
mov
jp
mov
and
inc
add
mov
xchg
pushf
inc
add
xchg
xchg
dec
push
lods
fsub
clc
call
dec
popa
add
ds
repz
popf
fmuls
lcall
xchg
inc
add
jmp
mov
jmp
mov
nop
jmp
add
add
test
xchg
into
xchg
xchg
pop
push
add
out
mov
jg
sar
jecxz
sar
mov
add
rcrb
or
cltd
scas
in
testl
popf
xchg
mov
call
clc
aad
add
cmpsl
clc
jne
fstp
int3
dec
je
clc
adc
jg
in
movsl
clc
mov
xchg
push
add
roll
clc
mov
movsb
clc
pusha
add
inc
clc
cmp
clc
sub
add
sar
cmp
negb
adc
add
clc
or
mov
inc
add
cmp
add
pop
cmp
clc
daa
clc
push
xchg
fwait
mov
clc
mov
xor
add
shll
add
loope
xor
aaa
ja
enter
in
test
aad
cmc
int3
fs
popf
push
mov
and
add
gs
pop
inc
add
pop
roll
gs
clc
add
add
add
int
clc
push
push
nop
jmp
add
in
jne
jno
adc
add
mov
clc
test
sub
in
enter
clc
xor
add
add
push
clc
clc
hlt
leave
aam
clc
aas
leave
mov
or
int
clc
aas
lods
stos
and
loope
repnz
sar
add
jns
clc
xor
add
in
xabort
clc
into
lods
std
fs
jne
dec
mov
negb
mov
nop
jmp
and
xchg
test
pushf
xchg
mov
clc
xor
add
test
data16
call
out
add
clc
mov
aam
clc
mov
add
mov
push
add
add
push
push
push
mov
xchg
ret
jecxz
add
inc
add
or
cmp
mov
add
sub
sar
scas
adc
add
pop
sbb
out
mov
mov
add
decl
test
jge
call
in
and
inc
add
loop
push
je
cmp
xchg
pop
mov
insb
adc
add
add
clc
sbb
clc
movsb
clc
out
lods
fildll
aas
cmp
fsub
clc
pop
push
add
sbb
insl
adc
add
push
nop
jmp
pop
add
add
out
ficompl
add
add
add
add
push
push
nop
jmp
pop
pop
add
jno
xchg
lods
jmp
add
push
sar
sbb
rcrl
ljmp
dec
cmc
push
test
adc
pop
sub
bound
add
mov
add
test
add
or
push
adc
add
cltd
lret
not
xchg
int
clc
pop
push
add
sahf
jns
clc
mov
add
aad
clc
jmp
jl
add
or
add
out
mulb
add
add
xor
add
inc
clc
mov
or
clc
incl
pause
jmp
jo
ret
filds
sbb
out
insb
lods
cmp
out
stos
mov
pop
pop
push
add
pushf
imul
fcmovnbe
ja
add
pushf
cmp
call
nop
jmp
add
add
and
add
jnp
stc
lret
adc
pusha
add
adc
add
pop
cmp
clc
in
xchg
pop
clc
jmp
add
scas
adc
add
add
mov
scas
sar
ss
add
inc
clc
ret
clc
in
xbegin
clc
arpl
add
cmpsl
clc
mov
das
and
cmp
add
xor
lods
add
add
mov
sub
add
xchg
test
add
jb
add
in
shlb
add
pop
lahf
dec
xchg
mov
jno
add
adc
add
mov
clc
fdivs
add
hlt
add
add
add
mov
fnstenv
add
dec
cwtl
cmp
dec
pop
call
aaa
pop
mov
or
inc
add
xchg
sti
mov
add
sar
cmp
insb
cmovns
dec
jns
clc
mov
push
add
inc
clc
cs
add
pop
aam
clc
mov
add
push
mov
add
clc
mov
clc
adc
add
xor
add
or
nop
jmp
clc
pop
in
and
add
dec
mov
clc
dec
nop
mov
enter
outsl
mov
cmc
jnp
xchg
paddusb
add
pop
add
add
das
icebp
xchg
fs
sub
clc
imul
cmp
jg
xor
add
or
add
into
xabort
data16
aaa
or
push
nop
jmp
jmp
lea
leave
sub
mov
push
xchg
jl
jne
in
add
nop
jmp
fisubrl
pop
and
ds
pushf
mov
inc
add
mov
add
mov
cli
dec
or
dec
frstor
fdiv
aas
mov
ret
fwait
sub
es
test
add
pop
mov
std
pop
xchg
adc
add
ja
mov
clc
adc
add
daa
clc
jg
inc
add
dec
add
mov
push
add
gs
mov
add
repz
jne
push
mov
xchg
ret
shlb
leave
lcall
add
add
movsb
clc
pop
mov
mov
fidivs
xchg
cli
mov
pop
mov
clc
mov
addr16
push
or
aad
in
pop
test
js
clc
ds
fidivs
add
sub
aad
clc
cmp
sub
jmp
mov
or
add
and
add
sti
mov
clc
inc
add
movsl
clc
sub
add
mov
outsb
jns
add
and
add
clc
push
call
jmp
mov
add
sub
push
add
je
js
clc
fisttpl
add
clc
dec
mov
in
or
lea
mov
mov
mov
pop
clc
in
aaa
aas
shr
insb
push
add
sub
sub
test
ss
clc
inc
add
cmc
test
jmp
add
add
pop
cltd
push
push
nop
jmp
aaa
add
add
stos
push
aas
mov
add
nop
jmp
add
jp
xor
add
jg
ljmp
gs
mov
aaa
outsb
cld
pop
into
rolb
add
cmp
pop
es
std
push
xor
add
pop
enter
in
mov
clc
hlt
call
jle
or
imul
jns
sbb
clc
sbb
popf
push
clc
mov
add
clc
dec
clc
mov
stos
xor
add
aam
push
mov
xchg
ret
add
add
cmp
push
clc
ja
lret
sbb
add
jle
mov
inc
clc
cmpsl
clc
daa
clc
push
add
out
clc
mov
mov
nop
jmp
lock
mov
dec
dec
push
aad
fistpl
rcll
add
ffree
clc
add
add
add
sbb
mov
clc
mov
add
bnd
and
cmp
in
ljmp
add
clc
ret
pop
xbegin
mov
jmp
add
add
out
mov
popf
std
xor
add
cmpsl
clc
cmp
add
nop
dec
cmpsl
clc
push
add
or
loop
dec
pop
adc
add
mov
icebp
push
jmp
nop
jmp
pusha
pop
fidivs
rolb
xor
add
clc
ds
clc
and
add
add
mov
add
inc
clc
sbb
add
sahf
nop
adc
add
clc
popa
add
sarl
je
clc
push
mov
push
mov
xchg
ret
lock
clc
dec
sar
mov
aam
add
and
add
inc
add
add
add
add
filds
add
add
repz
into
adc
add
add
push
add
or
mov
clc
in
stc
push
mov
nop
jmp
rcrb
mov
clc
add
add
add
gs
dec
lods
jnp
xbegin
mov
jmp
sbb
add
push
push
nop
jmp
outsl
addl
jne
sub
aas
dec
push
add
nop
or
add
clc
fs
mov
add
dec
mov
pop
jo
add
add
lods
sbb
jp
add
adc
sbb
mov
cwtl
cmp
sbb
add
insb
push
out
clc
and
add
cltd
xor
add
mov
movsb
clc
push
pop
sbb
sti
mov
clc
xchg
jmp
jmp
mov
add
dec
push
add
pop
clc
and
add
add
cltd
cmc
inc
add
popa
add
iret
add
scas
xchg
vmwrite
decl
jmp
clc
mov
sbb
pop
xor
add
add
add
push
testl
movsb
clc
movsb
clc
rcrb
add
inc
add
pop
adc
add
mov
jmp
sahf
jae
add
clc
js
clc
fldl
lcall
sahf
rol
clc
clc
cltd
jne
clc
xor
out
or
add
rep
mov
cwtl
fs
inc
nop
jmp
jo
in
add
sub
call
add
fdivs
clc
pop
inc
add
lret
mov
xabort
clc
and
out
rcrl
clc
mov
cmp
dec
push
add
ficompl
das
xabort
dec
sahf
sbb
out
jge
jmp
jecxz
lock
xchg
xchg
jae
add
add
add
lret
jle
add
jae
add
icebp
cmpsb
clc
sub
imull
test
mov
in
xchg
lock
clc
insl
inc
clc
test
sub
popa
add
gs
and
jle
adc
add
add
xchg
neg
jnp
mov
nop
jmp
fists
pop
or
fisttps
mov
clc
aas
daa
clc
cmpsl
clc
clc
rolb
adc
add
je
add
mov
push
add
dec
popa
add
aam
add
nop
jmp
jl
sub
pop
aam
push
out
aas
addr16
call
jl
jne
clc
leave
sbb
clc
fcmovnbe
pop
mov
and
add
adc
incl
add
clc
scas
pop
into
jmp
in
or
lods
dec
mov
fs
in
fisttpll
ja
ficoms
jno
add
add
adc
add
mov
clc
insb
push
outsb
push
inc
clc
das
push
es
daa
clc
xor
add
clc
xchg
testl
js
mov
call
nop
jmp
out
pop
pusha
repnz
mov
jne
clc
out
nop
cmpsb
clc
jle
jecxz
or
imul
sub
add
clc
hlt
sub
add
lret
cli
sbb
mov
clc
dec
cmp
add
nop
jmp
cmpl
sar
enter
cmp
clc
dec
cs
cltd
scas
mov
cmc
mov
clc
mov
mov
xchg
and
add
mov
fstl
jnp
adc
add
or
adc
jmp
push
add
mov
jne
mov
sbb
nop
jmp
jne
clc
cmp
iret
xor
clc
jno
add
add
inc
add
lcall
add
and
add
fbstp
pop
out
push
add
and
add
lods
mov
push
sbb
jb
push
mov
xchg
ret
add
cmp
repnz
decl
xor
ljmp
add
dec
add
push
fcmovu
push
add
xchg
mov
dec
dec
test
clc
or
cmpsb
clc
push
add
xchg
inc
clc
mov
icebp
pop
mov
add
clc
cmp
add
repnz
cmp
xor
jb
call
jp
add
fistpll
cmp
clc
xbegin
es
mov
xor
add
out
sub
mov
adc
add
cmp
clc
jle
stos
sbb
nop
jmp
fidivl
ficoms
add
mov
mov
add
push
cld
dec
fcom
das
dec
cmp
add
divb
clc
int
clc
mov
mov
sar
jecxz
cwtl
mov
mov
mov
inc
add
mov
data16
and
add
push
add
test
sti
pop
clc
pop
xchg
aaa
mov
clc
aad
add
pushf
sbb
xor
add
push
push
mov
xchg
ret
add
es
sub
out
xlat
ss
fbstp
ret
add
add
mov
add
and
add
add
add
add
add
add
add
pop
out
adc
add
dec
cmp
xchg
cs
pop
pop
pushf
cmp
test
inc
add
xor
clc
testl
add
adc
add
cmp
and
mov
adc
add
inc
add
clc
sbb
mov
xchg
ret
add
in
cwtl
pop
addr16
clc
jae
add
je
clc
push
and
add
sti
scas
mov
or
clc
fsubs
out
je
dec
pop
arpl
add
add
sar
clc
sbb
lock
clc
int3
pop
jp
dec
test
jp
fisubrl
clc
out
fdiv
cmp
scas
mov
inc
clc
sbb
mov
decb
push
xor
add
das
leave
cmp
fdivp
inc
add
xchg
movsb
clc
mov
mov
clc
or
clc
cwtl
push
insl
rolb
cwtl
push
jne
nop
jmp
pop
cwtl
notb
add
add
add
push
mov
add
add
sub
mov
xchg
mov
add
out
lret
clc
lods
data16
xor
add
add
clc
push
iret
fwait
sahf
sub
test
add
mov
into
leave
or
outsb
insb
sti
iret
xbegin
add
shl
clc
vunpckhps
clc
cli
je
loope
call
lods
test
stos
push
xchg
mov
loop
sar
cmp
add
data16
push
insb
xor
add
pop
adc
add
mov
mov
fs
xor
add
clc
test
clc
aam
add
mov
add
arpl
add
add
add
sub
dec
jmp
clc
fistpll
inc
clc
scas
clc
int
rorb
imul
mov
jnp
fadd
clc
not
pop
mov
xchg
daa
clc
mov
clc
pop
lea
aad
pandn
clc
push
cmpsl
clc
xchg
in
xchg
xchg
push
inc
clc
movlps
add
enter
dec
push
clc
mov
clc
mov
add
add
mov
clc
clc
and
add
fstpl
sbb
xchg
int
sar
add
add
sub
sbb
mov
mov
push
add
push
test
cs
jo
add
clc
shrb
int3
test
outsl
loopne
cli
sar
int3
dec
clc
fisttps
add
lods
and
add
cmc
jno
add
addr16
es
or
push
inc
add
mov
xchg
enter
clc
cs
add
xabort
fwait
push
aaa
dec
adc
add
clc
js
movsl
clc
lahf
cmp
mov
push
in
gs
mov
sub
mov
clc
or
sub
sub
xor
add
clc
sbb
clc
inc
clc
sarl
lcall
outsb
mov
loopne
or
mov
clc
pop
clc
inc
add
inc
clc
sub
add
push
mov
aad
out
inc
add
cmp
push
clc
pusha
add
jecxz
sbb
cmpsl
clc
loope
data16
imul
jp
xchg
movsl
clc
sub
push
roll
clc
mov
outsb
jg
aaa
loopne
jl
clc
pop
psubusw
mov
sub
ss
jno
add
cmpsb
clc
aad
sub
add
stc
js
xchg
loope
clc
int3
outsb
stos
mov
jbe
std
insb
repz
add
add
add
into
clc
add
add
into
lahf
mov
add
xbegin
clc
aaa
inc
add
mov
clc
aaa
cmpsl
clc
mov
clc
mov
or
add
add
nop
mov
pushf
mov
pop
and
add
dec
adc
add
outsb
pusha
add
adc
add
clc
xchg
repz
add
clc
outsb
mov
fs
sbb
clc
xchg
xchg
or
add
clc
sarl
add
jb
add
mov
clc
dec
fsub
clc
fldt
stos
repnz
clc
repz
clc
mov
inc
clc
sbb
clc
mull
mov
clc
sub
ja
clc
xor
add
and
bound
add
jle
clc
repz
add
add
fcmovne
mov
mov
pop
inc
add
jne
repnz
fs
xor
add
push
add
push
add
into
daa
clc
jp
clc
mov
add
add
xchg
lods
outsl
clc
rclb
cwtl
aas
fnstsw
aam
clc
bound
add
add
movsb
clc
loope
repz
add
clc
xor
add
jp
xchg
cltd
sbb
std
in
cmp
add
int3
sub
jbe
clc
call
sbb
es
xabort
clc
fbstp
clc
lret
sbb
clc
and
add
sar
aaa
sub
imul
scas
xor
add
jmp
sbb
mov
outsl
repnz
clc
push
add
cmpsb
clc
clc
inc
clc
fs
inc
add
dec
xchg
loope
xchg
jp
add
xor
clc
cmp
adc
add
jae
add
add
lock
xor
add
or
clc
xlat
sar
popa
add
aaa
xchg
clc
pushf
shlb
test
clc
fbld
xchg
mov
das
add
add
xchg
test
icebp
movsb
clc
lods
or
clc
or
ficoms
add
std
int
mov
pop
mov
cmpsl
clc
lods
stos
inc
clc
fnsave
add
jo
add
sub
cmp
sbb
popa
add
mov
push
add
xbegin
sub
fs
jbe
mov
mov
add
add
clc
adc
add
cwtl
gs
pusha
add
movsl
clc
xor
add
clc
aam
push
add
sbb
in
pop
enter
add
mov
add
fs
mov
clc
leave
fwait
xor
add
mov
je
jb
add
xchg
inc
clc
sti
jnp
cs
jmp
clc
inc
add
into
ja
push
push
add
imul
clc
fs
std
cltd
xlat
lock
add
imul
stc
popf
gs
sar
add
fscale
imul
add
sbb
mov
push
mov
xor
add
jns
in
inc
add
cmp
dec
das
and
mov
pop
gs
in
inc
add
xabort
push
add
jne
imul
push
add
mov
movsl
clc
clc
out
dec
push
clc
cmp
ss
clc
mov
mov
xchg
mov
mov
jmp
clc
add
add
add
clc
cmp
clc
or
mov
mov
pop
sar
sbb
icebp
dec
shl
inc
clc
xor
push
mov
inc
clc
inc
add
popa
add
sar
sti
test
jecxz
lret
mov
clc
in
mov
jg
add
push
sbb
cmp
clc
shlb
fs
test
xlat
adc
dec
xchg
lahf
push
add
sbb
scas
cmpsl
clc
add
add
fidivs
test
add
mov
mov
clc
push
add
jo
add
leave
sbb
xor
add
lcall
cli
pop
pop
out
mov
imul
das
jo
add
add
fs
divb
add
or
lods
enter
clc
jecxz
enter
lahf
mov
mov
out
call
add
add
inc
clc
cmp
sbb
add
add
clc
adc
mov
clc
lret
sbb
inc
add
jae
add
gs
mov
adc
add
sbb
add
cltd
cmp
stc
pop
fs
jnp
ss
sbb
clc
mov
sar
loopne
mov
or
add
adc
add
mov
adc
add
add
ficompl
clc
scas
cli
add
add
fisttps
inc
add
ss
clc
out
dec
mov
clc
outsb
or
add
sub
clc
out
dec
push
cmp
clc
mov
mov
add
adc
add
adc
add
add
pop
sti
sub
add
mov
hlt
repnz
clc
and
add
pushf
lea
add
jle
dec
lock
add
dec
int
clc
mov
ret
clc
add
add
jg
add
jge
add
fldcw
cmpsb
clc
data16
xor
clc
cmpsb
clc
mov
add
icebp
arpl
add
add
mov
clc
fsubs
add
dec
xchg
hlt
xchg
xchg
or
add
aad
jae
add
add
sub
aam
sar
clc
pusha
add
add
add
add
add
add
lahf
cmp
clc
int
sbb
mov
into
lret
xchg
xchg
cmp
cmpsl
clc
mov
push
cmp
cmp
xchg
sub
push
add
dec
jg
imul
xchg
or
cmp
add
xchg
sbb
and
add
xchg
pop
repnz
add
in
adc
mov
or
or
add
clc
push
fcomps
dec
push
mov
clc
cmp
add
or
add
aas
lahf
pmullw
imul
test
add
add
insl
shll
ds
adc
add
add
mov
add
mov
inc
clc
jle
cmp
push
popa
add
jmp
clc
push
add
dec
iret
hlt
bnd
add
data16
push
add
jnp
data16
jo
add
sub
adc
add
sub
mov
fstps
pop
inc
add
aad
mov
add
dec
movsl
clc
sub
add
pusha
add
mov
push
xchg
and
add
sbb
push
lahf
icebp
pushf
push
cmp
clc
cmp
push
or
insl
jb
add
and
or
addr16
cs
add
sbb
xchg
jmp
clc
adc
add
add
clc
or
cld
out
xchg
stos
pushf
outsl
cmp
add
xor
add
add
ljmp
xchg
into
sub
add
pop
clc
mov
ljmp
js
ds
ja
clc
cmp
push
add
test
sub
mov
mov
add
out
jp
add
and
add
imul
clc
or
add
xabort
clc
mov
add
loop
int
add
add
add
jl
xchg
pop
pop
loop
push
clc
das
push
clc
div
mov
lock
inc
add
lods
push
adc
add
add
adc
adc
clc
sub
aad
push
clc
push
clc
roll
aaa
cmp
clc
cld
insb
popa
add
mov
add
into
imul
js
add
pop
sub
push
clc
in
add
roll
clc
jb
add
add
clc
mov
gs
lea
sbb
clc
outsl
push
sub
sbb
lock
push
jne
lea
mov
add
jle
and
add
mov
int3
sahf
inc
clc
jae
add
adc
add
mov
add
add
aad
clc
jne
iret
pop
popf
xchg
mov
arpl
add
add
in
stc
loopne
aaa
test
sar
add
jno
add
int3
jmp
clc
mov
jns
add
pop
dec
sbb
mov
jo
add
add
ret
clc
push
add
scas
mov
mov
add
xchg
outsb
mov
add
into
sti
sbb
xchg
mov
clc
mov
jne
clc
xabort
leave
xchg
outsb
push
add
int3
push
enter
dec
add
add
add
stc
xor
add
and
add
in
pop
cmp
jl
sarb
fadd
clc
mov
pushf
pop
clc
xchg
lods
mov
es
fs
dec
add
clc
out
neg
psrad
adc
mov
clc
call
jle
clc
call
clc
test
add
sahf
xor
add
and
add
add
iret
mov
clc
sbb
out
cmp
add
movsb
clc
sbb
cmovl
clc
scas
cs
add
jb
add
mov
pop
stos
inc
clc
jge
push
add
loop
dec
push
add
int
mov
sti
jmp
insb
jmp
pop
fcmovu
fs
pop
loopne
jbe
inc
clc
imul
add
pop
push
add
sub
stc
test
int
add
js
ljmp
clc
xor
jae
add
add
mov
loop
sar
clc
rclb
repz
or
add
clc
adc
add
cmp
and
add
popl
dec
xor
add
push
clc
fnstcw
jge
mov
add
outsb
popf
lahf
gs
idivl
dec
cli
push
clc
sub
out
fnstcw
cwtl
outsb
mov
add
add
movsl
clc
cmc
cwtl
adc
clc
enter
data16
cmp
in
rorb
mov
xor
pop
gs
fiaddl
add
xchg
dec
fldcw
add
jg
xchg
call
xor
add
cmp
loopne
in
jb
add
add
scas
push
add
add
add
add
aam
add
inc
add
in
inc
clc
nop
lods
ror
mov
clc
sbb
iret
stc
movsb
clc
sub
clc
int3
insl
int3
pop
mov
clc
aaa
xor
add
add
roll
cmp
cwtl
shll
in
popa
add
pop
add
add
add
imul
cmp
in
mov
cmp
shll
clc
cmp
add
clc
push
and
add
jl
sub
into
fimull
cmpsb
clc
xchg
dec
popf
cmp
inc
add
adc
add
push
test
add
xlat
sbb
add
clc
mov
add
mov
sar
sar
clc
sar
add
cmc
sub
sbb
add
dec
mov
mov
jg
mov
cltd
gs
ret
daa
clc
add
add
add
clc
sub
add
lcall
adc
add
leave
in
rcrl
cmp
fcoms
add
nop
jl
clc
push
or
addr16
xchg
push
add
int
cmpsb
clc
xor
in
jb
add
clc
jle
push
jmp
add
jns
add
add
inc
clc
dec
xabort
mov
add
ret
cli
cmc
and
mov
lock
lahf
cmp
adc
cmp
movsl
clc
add
add
xchg
bound
add
cmpsb
clc
jmp
push
clc
sbb
call
popf
out
mov
in
push
add
mov
clc
fmuls
mov
inc
clc
imul
aas
clc
insb
mov
loope
loope
test
dec
push
add
ficoml
adc
add
add
cltd
sbb
dec
xbegin
clc
and
add
loopne
adc
add
pop
xlat
bound
add
add
or
clc
outsl
rcr
pop
inc
add
or
insl
cwtl
or
push
mov
clc
mov
mov
mov
add
xbegin
sbb
mov
jp
add
ret
idivl
shlb
adc
add
iret
arpl
add
bound
add
sbb
clc
in
std
data16
xchg
xbegin
fcoml
clc
cmp
jbe
adc
jbe
je
mov
clc
xor
add
add
add
aam
mov
clc
out
gs
aam
clc
add
dec
daa
clc
fdivl
ljmp
gs
cmp
add
in
xchg
cmp
xor
add
clc
xchg
test
repnz
clc
insl
inc
clc
and
mov
add
add
add
cli
lret
inc
clc
in
pop
sub
clc
pusha
add
pop
clc
xchg
imul
clc
sti
mov
sbb
inc
clc
cmp
push
push
dec
aas
out
loopne
gs
ja
add
rorb
xbegin
xchg
xchg
out
push
test
xchg
gs
push
add
test
or
movsb
clc
pop
or
loopne
outsl
adc
add
clc
sub
clc
push
push
pop
outsl
jns
clc
loope
sub
add
imul
cmpsb
clc
js
cmp
inc
clc
mov
jmp
in
shrb
add
mov
cmp
jmp
pop
std
cmp
add
add
xor
add
mov
mov
jge
add
pushf
push
add
mov
add
add
add
add
jb
add
repz
clc
push
sarb
add
clc
and
add
add
and
add
add
dec
xchg
mov
add
cmp
pop
mov
aas
scas
xchg
add
add
mov
add
and
add
add
jbe
and
add
dec
insb
sub
add
out
add
add
sub
repnz
aam
clc
ffree
clc
movsb
clc
lahf
shl
clc
sbb
add
lock
add
inc
add
and
pop
clc
cltd
movsb
clc
dec
fbstp
add
cmp
add
or
das
cmp
sub
add
add
sub
fwait
xbegin
clc
rcll
add
mov
int3
mov
mov
fxch
xchg
and
clc
dec
lods
mov
and
add
call
add
or
jb
add
xor
add
sub
add
repz
add
lods
cmpsb
clc
push
add
xchg
aam
add
jo
add
clc
mov
push
or
cwtl
pop
stc
inc
clc
cmp
clc
icebp
pushf
clc
imul
and
jbe
push
add
sbb
add
add
into
inc
clc
inc
clc
jmp
add
add
inc
clc
fimuls
add
shr
ss
scas
lret
fnsave
and
add
xchg
cmp
cwtl
sub
pop
push
fisttps
clc
jne
icebp
jb,pn
add
cmp
clc
mov
jnp
cld
rcrb
cmp
push
add
test
pop
inc
add
add
add
push
scas
mov
xlat
cld
out
ljmp
add
clc
cmp
add
test
and
add
dec
push
inc
clc
or
mov
sub
fisubrs
sar
add
push
add
add
dec
or
clc
out
ffree
clc
out
test
iret
popf
pop
push
clc
mov
scas
push
cmpsl
clc
stos
xabort
iret
jecxz
mov
mov
lcall
mov
cli
stos
and
add
pop
shl
clc
iret
cmp
sar
jge
clc
int3
sub
add
arpl
add
clc
mull
add
lock
test
pop
ds
out
jl
jae
add
clc
sub
sbb
test
cltd
add
add
add
clc
rorb
jbe
clc
ret
clc
sahf
int
sub
xbegin
jg
dec
or
xchg
xchg
sar
fcmovu
in
arpl
add
jl
jo
add
xchg
pop
mov
mov
xor
add
add
imul
clc
test
clc
mov
movsl
clc
ss
add
cmp
std
jnp
jbe
clc
imul
sub
add
pop
sbb
pop
pop
dec
rorb
clc
sti
cmc
push
clc
adc
add
mov
pop
fs
xchg
xor
inc
clc
sbb
xor
add
add
pop
sahf
movsb
clc
hlt
dec
test
mov
cld
mov
loope
xchg
aas
push
xchg
sbb
repz
add
push
clc
mov
out
sbb
add
add
ja
mov
add
add
out
rolb
clc
xchg
cmpsb
clc
test
fildl
add
fildl
add
clc
dec
inc
clc
aaa
xchg
xabort
clc
inc
add
and
add
clc
sar
sti
lea
sub
ds
dec
cmpsb
clc
mov
adc
add
clc
sar
push
add
push
or
adc
add
add
lcall
add
xor
add
hlt
in
lock
sti
adc
add
push
icebp
in
or
push
add
insl
jl
add
faddl
clc
push
add
cmpsb
clc
add
add
add
clc
je
adc
add
lods
adc
add
lahf
imul
out
mov
clc
lods
dec
out
push
clc
mov
insb
push
sar
dec
cwtl
sar
add
mov
clc
xchg
xchg
or
add
lods
test
sahf
movsb
clc
cmp
add
pop
xchg
cmp
clc
lret
xabort
add
xor
add
adc
add
clc
movsl
clc
fcoml
mov
push
pop
movsl
clc
push
out
xor
add
cmp
add
adc
add
jmp
clc
bound
add
lret
mov
pop
out
inc
clc
jmp
add
add
add
add
stc
sti
mov
clc
push
xchg
sar
add
ret
mov
es
pop
sub
clc
pop
mov
pop
ds
cmp
sbb
fldl
aad
clc
popa
add
loop
in
ds
clc
rclb
clc
xlat
imul
popa
add
addr16
cltd
dec
xchg
cltd
lret
cmp
and
add
scas
in
jne
fcmovnb
clc
aam
inc
add
add
add
xor
jno
add
clc
sub
movsl
clc
xchg
mov
sar
outsb
pop
pmaddwd
and
add
and
add
add
clc
pop
mov
clc
ss
adc
add
add
sbb
clc
dec
inc
clc
cmp
push
add
std
pop
cli
push
mov
clc
lcall
pop
icebp
pop
jl
int
jbe
in
jle
mov
push
add
xlat
mov
clc
inc
clc
aaa
fcmovnbe
xor
add
mov
clc
xor
add
jnp
addr16
aaa
mov
add
dec
ljmp
mov
xabort
clc
mov
clc
sbb
sbb
ds
clc
mov
add
mov
mov
clc
ret
clc
insl
gs
xlat
pop
mov
out
mov
clc
cmp
clc
dec
add
add
inc
clc
cmp
clc
pop
jmp
clc
push
add
cmp
push
popa
add
cmp
clc
fcmovnb
clc
and
add
mov
clc
out
leave
xor
add
int
insb
xor
clc
xor
clc
ret
clc
negl
jnp
clc
clc
ret
clc
mov
sub
xor
lret
clc
sub
add
add
in
lods
and
stos
xchg
inc
clc
or
stos
rorb
add
int3
cmp
in
dec
xchg
mov
jbe
dec
inc
clc
or
fucom
clc
hlt
divl
add
push
sub
pop
add
clc
sub
dec
daa
clc
dec
sbb
leave
dec
dec
ret
cmp
or
mov
adc
add
push
push
push
inc
add
or
clc
inc
clc
aam
jo
add
int3
stos
js
in
sbb
mov
clc
es
pop
fwait
push
imul
push
add
sub
lods
jae
add
clc
jb
add
xbegin
push
call
clc
pushf
mov
xor
add
mov
mov
lea
add
and
add
dec
clc
push
add
movsl
clc
lock
push
xlat
cs
adc
add
add
mov
pop
or
add
inc
add
xor
add
mov
cmp
mov
movsl
clc
add
jno
add
sar
add
insl
mov
cmp
add
clc
stos
div
sbb
clc
push
nop
push
jmp
clc
inc
add
mov
xchg
mov
add
add
sub
sbb
add
ret
or
ret
sub
add
and
xchg
pusha
add
sbb
xor
out
xchg
aad
shr
in
add
add
and
push
add
inc
add
aas
mov
popf
es
rorb
add
adc
xabort
enter
clc
cmp
sar
clc
lret
and
add
add
aaa
in
out
push
mov
sbb
clc
xchg
repz
sar
inc
clc
push
repnz
pop
je
dec
insl
ss
add
ss
int3
int3
and
add
pop
jno
add
add
stc
jo
add
or
loopne
pop
inc
clc
mov
clc
pusha
add
clc
adc
add
push
std
jmp
mov
sarl
mov
push
test
or
inc
clc
sbb
clc
rcll
clc
mov
cltd
inc
clc
ds
sub
clc
es
inc
add
xchg
arpl
add
cmp
clc
mov
add
xchg
hlt
jmp
popf
cmp
add
stos
jg
clc
sbb
clc
cs
clc
data16
popa
add
aam
clc
out
stos
cmp
clc
jl
clc
imul
add
add
ljmp
cmp
out
loopne
lahf
dec
sbb
cmp
clc
bound
add
mov
add
jb
add
clc
mov
clc
aaa
pop
dec
jnp
add
sbb
mov
mov
popa
add
lret
sar
inc
clc
into
mov
pop
clc
dec
pop
mov
inc
clc
es
push
add
add
add
clc
insb
incl
cmp
clc
and
add
add
es
stos
and
add
out
rorl
negl
jmp
leave
jmp
clc
mov
out
push
add
xchg
mov
push
pop
aas
out
xbegin
sbb
stos
fisubs
aad
clc
jne
add
push
add
rep
daa
clc
inc
clc
mov
idivl
and
add
add
add
mov
fisubrs
iret
loop
das
sahf
repnz
push
add
in
sti
mov
cmp
add
pop
gs
stos
scas
ds
mov
inc
clc
std
push
roll
jge
pop
scas
mov
cmc
fnstenv
pop
stos
xchg
fldt
test
dec
in
cli
cmp
clc
mov
add
lahf
lock
add
mov
icebp
or
loop
ret
clc
popa
add
adc
add
add
lret
add
push
add
xor
jg
clc
adc
add
cmp
loopne
jbe
sbb
ficompl
clc
adc
add
sub
testl
adc
mov
clc
dec
cli
mov
cmp
jne
ret
clc
fcmovu
or
clc
test
cmp
xchg
sub
add
add
push
add
push
xchg
test
cmc
push
fdivr
push
mov
push
add
int
clc
loope
xor
add
add
cmp
push
dec
mov
dec
xor
movsl
clc
add
add
jb
add
add
xor
cs
sti
cmp
add
add
add
lods
cmp
sar
gs
fldl
push
add
lret
mov
dec
or
data16
icebp
inc
clc
out
cmpsb
clc
bound
add
sub
in
sarl
pushf
xchg
mov
int3
lock
inc
add
sbb
gs
aam
insl
dec
hlt
sub
inc
clc
sbb
clc
sar
cmp
cld
jno
add
add
add
js
add
add
clc
or
clc
push
mov
dec
paddd
pop
dec
sub
stos
ljmp
cld
inc
add
hlt
shrl
add
sar
fsubrs
add
pop
dec
scas
push
add
add
add
add
into
xor
add
add
fwait
daa
clc
jbe
cmp
notb
clc
push
leave
push
clc
aaa
gs
jecxz
lret
adc
add
push
add
sub
dec
and
clc
pop
add
add
outsl
pop
jbe
add
add
mov
add
sub
add
fwait
int
sbb
clc
push
test
data16
aaa
cltd
add
add
clc
sub
add
push
ljmp
clc
mov
mov
movsb
clc
cmp
or
add
inc
clc
jne
clc
cmp
cmc
outsl
mov
add
bound
add
xchg
jge
push
repz
nop
mov
clc
loopne
push
add
or
add
cmp
add
icebp
pop
sub
add
test
pop
clc
inc
clc
jmp
out
lahf
ss
out
and
add
out
imul
xchg
or
clc
cmc
cmp
lods
sbb
xchg
inc
clc
mov
add
outsb
sbb
jle
out
clc
mov
jbe
clc
ds
add
sub
ret
clc
insb
jmp
clc
add
add
clc
ret
clc
jno
add
clc
test
inc
clc
icebp
or
add
xchg
mov
xabort
popf
in
js
mov
movsl
clc
lods
sbb
in
or
mov
mov
add
mov
jmp
add
sti
out
jns
fs
aam
jg
add
inc
add
xbegin
add
mov
cmpsb
clc
dec
pop
out
movsb
clc
adc
add
test
xchg
xchg
xchg
shrb
hlt
add
add
jbe
clc
mov
sahf
mov
add
inc
add
int
stos
ret
clc
pusha
add
lcall
adc
add
xor
dec
out
push
add
outsl
mov
mov
ret
clc
cmp
pop
cld
cld
push
enter
mov
pop
xchg
je
mov
mov
fs
inc
add
lret
cld
lahf
sub
inc
add
or
or
clc
mov
sbb
cmp
sbb
clc
xor
add
or
cmp
xor
add
or
adc
jg
aad
clc
stos
test
int
mov
xlat
iret
jle
add
cltd
ljmp
inc
clc
or
mov
clc
data16
adc
add
sar
js
add
inc
add
push
adc
add
xchg
int
dec
cwtl
cmpsb
clc
push
add
out
stc
stos
rclb
add
jp
dec
and
add
fwait
xchg
inc
add
decl
mov
dec
ja
add
xabort
clc
mov
mov
add
add
mov
pop
int
clc
push
movsb
clc
shrl
ret
clc
pop
imul
clc
stc
mov
add
add
popf
mov
int3
jp
mov
clc
mov
iret
and
add
sub
mov
repz
lods
out
imul
mov
outsb
fisttpll
and
add
add
push
add
push
arpl
add
xor
cs
mov
clc
sub
lods
pop
cwtl
mov
inc
clc
sub
adc
add
clc
jge
aaa
shr
xabort
add
xchg
sbb
add
pop
mov
ss
mov
fstps
jge
clc
cmp
add
jo
add
iret
dec
cmp
call
jg
ret
clc
test
cmp
clc
sar
clc
daa
clc
aam
mov
inc
clc
out
push
pop
pop
jno
add
clc
sbb
cmc
imull
repz
push
outsl
push
adc
add
add
clc
inc
clc
cmovne
ds
clc
xchg
cmp
push
add
sub
inc
add
pop
pushf
movsl
clc
xchg
jno
add
data16
mov
movsb
clc
sti
imul
add
add
xor
add
ret
add
jg
add
add
clc
sub
clc
jns
clc
dec
ss
in
jb
add
dec
mov
lret
jns
pop
cmp
clc
call
adc
clc
xchg
dec
mov
add
add
inc
clc
or
clc
adc
aam
clc
pop
int
clc
in
or
pop
jno
add
clc
mov
add
cmp
jo
add
stos
xchg
sub
xchg
jmp
xchg
mov
add
push
add
pusha
add
cmp
push
add
mov
jae
add
clc
ret
cli
lock
scas
aaa
aaa
cmc
ss
in
or
xbegin
add
data16
adc
clc
mov
arpl
add
int
inc
add
push
jle
xor
adc
add
xlat
xor
add
mov
cmc
outsb
xchg
and
add
fistps
frstor
xchg
in
xabort
cmpsl
clc
mov
sub
cmpsl
clc
and
add
clc
inc
clc
in
aaa
dec
inc
clc
push
add
inc
clc
fs
cltd
int3
dec
cld
jle
pop
dec
sahf
scas
push
pop
adc
add
add
add
add
mov
xchg
bound
add
aas
push
add
loopne
pushf
dec
and
add
jmp
outsl
adc
add
clc
cmp
add
mov
add
lods
fstp
lret
push
testb
push
clc
push
clc
fisubrs
jae
xchg
popa
add
data16
sbb
roll
clc
and
add
clc
sub
inc
clc
mulb
aad
clc
adc
add
add
add
sub
push
lock
clc
dec
cmp
clc
scas
out
dec
pop
cmp
xbegin
add
add
in
outsb
adc
clc
fs
aam
clc
test
push
enter
mov
nop
dec
xchg
in
sti
shll
add
mov
clc
pop
clc
cmp
add
add
add
jge
iret
icebp
adc
add
clc
pusha
add
data16
fcompl
out
lret
inc
clc
jg
fidivs
add
cmp
insb
pop
out
mov
push
add
loop
enter
stos
clc
add
ja
out
leave
xchg
mov
rol
clc
dec
pop
aas
xchg
out
jmp
push
je
jbe
clc
push
and
add
push
add
pop
in
cmp
stos
mov
jo
add
push
inc
clc
inc
clc
lcall
clc
jbe
add
fst
arpl
add
add
nop
push
dec
inc
clc
mov
out
jg
lret
add
clc
cmp
sar
clc
cmp
add
add
imull
call
das
xor
sar
add
jl
call
fs
fs
xor
add
xchg
mov
push
add
data16
pop
pop
adc
add
add
test
dec
sbb
pushf
pushf
mov
adc
add
popf
jo
add
sbb
jl
mov
or
daa
clc
fcompl
xchg
dec
inc
clc
mov
js
add
xchg
pop
fwait
pop
mov
clc
cmp
ficoms
lcall
xlat
inc
clc
xbegin
inc
clc
outsl
xbegin
add
int
mov
add
add
idivl
imul
inc
clc
mov
add
ljmp
clc
mov
inc
add
sar
adc
add
jne
outsl
testl
clc
xor
add
gs
inc
add
cmp
add
add
xor
add
clc
mov
jae
add
add
stos
dec
or
add
add
cmpsb
clc
push
add
addr16
lret
cld
cmpsb
clc
inc
clc
lahf
insb
aas
dec
cmp
clc
push
add
cmp
xor
add
clc
xor
add
inc
add
xor
add
clc
jne
stos
xchg
scas
mov
add
add
fsubrs
inc
clc
push
add
fwait
nop
sub
push
mov
mov
clc
lret
cmc
xchg
rcll
loope
or
ja
push
scas
sbb
clc
in
pop
ss
lods
fs
mov
clc
inc
clc
idivl
inc
add
es
popa
add
dec
adc
add
jl
sbb
mov
dec
aad
int3
popf
mov
jle
ljmp
clc
movsb
clc
lret
js
push
lahf
xor
add
lods
fstpt
push
add
pushf
sub
clc
jle
clc
mov
inc
add
mov
or
jg
mov
clc
imul
movsb
clc
add
add
outsl
cmp
lret
dec
in
data16
mov
cmp
scas
cli
cmp
mov
fcmovnb
clc
jge
add
je
clc
fiaddl
add
lcall
lcall
outsl
xbegin
and
add
jne
ds
cmp
mov
add
pop
push
enter
adc
add
clc
imul
lods
or
popa
add
jns
clc
mov
add
push
clc
pop
xor
add
and
add
clc
adc
add
add
xchg
fs
test
clc
adc
add
clc
push
add
dec
pop
push
add
scas
sahf
mov
clc
ret
into
or
xchg
push
add
mov
add
mov
test
mov
sti
ss
sbb
add
js
clc
sub
mov
add
and
jmp
add
add
push
add
adc
add
clc
inc
add
and
clc
or
clc
mov
push
add
mov
lahf
jle
sub
sbb
or
add
out
arpl
add
imul
sub
clc
test
cmp
int3
pop
lods
push
cmp
add
adc
aas
jmp
jnp
stc
push
add
push
cmp
clc
loopne
lcall
ficoms
jo
add
clc
mov
out
mov
fwait
adc
xbegin
cmp
pop
mov
xor
fs
rolb
clc
decl
add
sub
add
push
add
pop
dec
add
add
pushf
push
push
and
add
or
mov
clc
shrb
cmpsb
clc
inc
clc
out
movsl
clc
jle
or
lock
jecxz
ret
clc
mov
shlb
add
mov
cmp
push
add
push
sub
clc
in
add
add
xchg
fsubrl
add
pop
mov
pushf
xchg
pop
mov
push
pop
ret
xchg
mov
lret
lahf
inc
add
cwtl
cmp
loope
popa
add
xchg
ss
cmp
push
mov
clc
addr16
leave
cwtl
imul
mov
lea
push
add
jmp
sub
clc
push
dec
leave
pusha
add
ficomps
clc
pop
sahf
gs
pop
or
iret
push
add
adc
add
xor
add
and
add
jns
add
sar
push
sub
push
add
xor
add
add
and
add
add
or
loope
pop
mov
push
shr
dec
loope
fdivrs
mov
inc
add
rclb
add
lcall
mov
rorb
clc
movsb
clc
dec
test
cmp
nop
leave
mov
add
jmp
insb
jnp
fmul
mov
add
dec
push
push
add
or
push
xchg
icebp
mov
ds
clc
daa
clc
pop
add
add
xor
add
push
add
fs
sbb
xor
sar
push
add
jae
add
clc
xor
add
clc
jle
shll
add
or
add
fsubrl
kmovw
enter
lahf
int3
mov
pusha
add
mov
in
adc
xchg
cmp
push
fnsave
add
cmc
cmp
add
add
add
cmp
clc
pop
clc
imul
clc
hlt
mov
add
add
cli
fildll
pop
or
popa
add
imul
add
pusha
add
jmp
clc
lods
je
add
add
add
fcompl
xor
add
push
add
add
push
clc
es
cmp
add
cmp
add
clc
push
add
loope
iret
sarl
arpl
add
xchg
inc
add
xchg
jne
clc
repz
dec
in
xchg
in
sbb
add
or
add
es
in
ret
clc
mov
mov
mov
jns
sub
clc
dec
movsl
clc
fwait
push
add
mov
cwtl
sub
test
fiadds
add
inc
add
lahf
fists
add
add
mov
pop
cltd
dec
pop
mov
in
dec
pop
clc
jb
add
add
push
add
jbe
clc
cmp
repz
sbb
gs
loope
mov
mov
outsb
mov
push
rorl
push
add
add
add
mov
inc
clc
xchg
xchg
lea
movsb
clc
add
add
fwait
jecxz
adc
add
out
imul
add
mov
push
add
push
mov
add
add
addr16
loopne
scas
cmp
adc
add
add
push
mov
push
add
xchg
push
dec
sti
cmp
add
cmp
mov
popf
or
mov
out
daa
clc
fs
add
cmp
jno
add
mov
dec
insb
jns
clc
cmp
mov
adc
add
dec
data16
add
add
clc
or
add
cs
or
sbb
or
add
pop
movsb
clc
cmp
adc
add
sub
cwtl
xor
sbb
add
ficoms
add
ja
lods
movsb
clc
in
jbe
clc
adc
daa
clc
out
push
clc
push
cmp
clc
mov
scas
jne
or
mov
add
aam
clc
into
dec
add
add
std
imul
out
xchg
add
add
clc
xor
add
add
add
xor
mov
pop
cmp
or
in
fadd
clc
popf
lcall
ja
adc
add
add
in
push
repz
add
sub
add
rcl
aam
xchg
loopne
add
add
clc
or
sar
aad
mov
jg
add
mov
add
pop
clc
dec
sbb
movsl
clc
dec
xor
add
sbb
clc
loop
mov
repnz
push
cld
in
stos
push
add
popf
imul
in
xor
notb
jb
add
add
add
xbegin
cld
mov
mov
jbe
add
aas
notb
add
or
add
divb
shlb
jmp
out
inc
clc
and
ret
clc
sub
sub
or
add
cmp
leave
jno
add
clc
and
add
push
add
pop
lahf
fldt
dec
push
add
pop
sti
ret
cmp
add
or
clc
sbb
lea
clc
inc
add
negb
or
and
add
outsl
mov
pop
sub
add
jns
inc
add
inc
clc
push
add
push
sbb
fimuls
push
sbb
repnz
add
add
xchg
icebp
test
stc
pop
push
dec
xlat
fsubl
clc
imul
mov
je
mov
dec
add
add
jp
xor
add
stc
popa
add
mov
into
mov
repz
add
add
xor
pop
clc
xsaveopt
data16
fucomi
test
mov
mov
clc
mov
pop
loop
fsubr
xchg
sub
sub
mov
xchg
clc
inc
add
dec
outsl
ret
aas
jbe
mov
add
add
clc
mov
sub
clc
add
add
mov
add
clc
lahf
stc
and
add
clc
jge
adc
dec
std
cltd
push
add
icebp
or
cwtl
cmp
xchg
leave
xchg
pop
inc
clc
lods
ja
loop
pop
sbb
sbb
mov
add
add
filds
clc
ss
into
dec
push
stc
dec
ljmp
cli
icebp
fs
adc
add
add
add
add
adc
add
clc
ja
inc
clc
inc
add
arpl
add
jle
add
add
add
mov
imul
xlat
sbb
add
jo
add
clc
and
xlat
daa
clc
lock
add
rorb
scas
sahf
adc
add
xor
add
fidivl
je
in
jl
add
imul
mov
push
push
mov
and
add
add
dec
stos
shl
popl
jo
add
mov
clc
fsubrs
test
test
aas
insl
dec
push
clc
dec
loop
lret
add
test
mov
int
mov
push
jmp
xchg
das
sahf
fistpll
pop
call
add
xor
add
mov
add
add
in
popa
add
mov
add
test
adc
add
add
clc
push
pop
mov
stos
rep
inc
clc
repnz
mov
cmp
mov
aaa
ja
add
add
jae
add
ljmp
mov
sbb
mov
push
add
mov
add
mov
clc
test
mov
add
scas
adc
adc
insb
mov
out
mov
cmp
lahf
popa
add
popa
add
leave
lahf
and
add
clc
ja
mov
add
jnp
add
dec
pop
add
add
add
pop
cmp
bnd
clc
inc
clc
xchg
push
add
pop
jb
add
sbb
add
lcall
mov
clc
in
mov
jge
clc
xchg
sbb
lock
popf
pop
popf
push
push
add
inc
add
or
add
pop
cli
push
add
aad
clc
add
add
rorb
jae
add
clc
icebp
popa
add
gs
out
mov
movsb
clc
xabort
clc
lcall
add
fimull
insl
sahf
int
fwait
loop
mov
clc
add
add
pop
clc
test
in
jge
scas
cmp
cmp
xchg
push
add
scas
xabort
negb
mov
clc
cli
add
add
lock
add
daa
clc
cmp
push
rol
clc
call
cmp
xabort
clc
jmp
call
add
imul
add
iret
cmp
or
add
sub
clc
ljmp
sgdtl
add
add
sub
clc
mov
into
lea
clc
mov
or
sar
pop
sbb
clc
clc
bound
add
add
sub
clc
mov
clc
icebp
add
adc
add
lock
sbb
xlat
mov
add
sbb
add
outsb
inc
clc
fs
out
mov
clc
movsb
clc
data16
std
xor
adc
jns
mov
into
icebp
and
add
clc
aad
std
clc
and
add
add
std
sbb
clc
mov
dec
inc
clc
mov
cltd
out
push
rclb
add
pop
fsts
add
mov
add
jge
add
xchg
jno
add
or
loop
in
pusha
add
or
add
pusha
add
stc
stos
ds
and
adc
pop
leave
push
dec
sub
clc
nop
loopne
out
add
add
stos
dec
gs
mov
clc
push
movsb
clc
loope
cmpsl
clc
pop
jle
scas
cmp
inc
clc
push
out
js
mov
clc
dec
hlt
out
pop
clc
je
and
add
imul
ss
add
add
push
add
push
mov
dec
fwait
ja
in
clc
negl
sbb
clc
fsubl
push
xchg
inc
clc
movsb
clc
jb
add
divb
add
add
leave
push
clc
hlt
push
mov
aad
clc
cmp
add
clc
out
ja
sbb
clc
add
add
add
and
push
clc
cs
add
pusha
add
pushf
das
jl
add
mov
add
sub
xbegin
inc
clc
out
jmp
add
lock
lret
cmp
sbb
xor
add
fidivs
add
push
daa
clc
jle
sbb
clc
popa
add
insl
icebp
dec
jne
sbb
imul
add
mov
sahf
jg
and
add
add
mov
lcall
add
mov
jbe
jb
add
jnp
or
clc
and
add
clc
jno
add
add
in
adc
add
int3
out
scas
jae
add
add
sar
add
cmp
push
mov
push
mov
ds
push
clc
dec
mov
and
int
clc
test
cmp
add
pop
clc
cwtl
dec
push
add
adc
add
add
add
clc
dec
push
adc
add
add
cmpsl
clc
mov
faddl
add
movsl
clc
and
add
clc
cmp
clc
movsl
clc
or
add
pop
arpl
add
jae
add
sub
adc
add
jnp
add
jecxz
insl
std
xbegin
adc
add
clc
or
clc
mov
mov
pop
clc
xor
dec
sar
jo
add
clc
push
scas
adc
add
add
lahf
add
add
add
add
add
add
ret
push
pusha
add
push
add
jno
add
jo,pt
add
imul
and
aaa
scas
add
add
add
ds
clc
stos
test
int3
cmp
add
sbb
dec
vmovups
add
xbegin
popf
rorb
pop
out
xchg
ficoml
add
jo
add
clc
sarl
pop
aad
push
clc
call
clc
stc
bound
add
add
add
add
mov
dec
fadds
jl
xchg
add
adc
add
add
icebp
adc
clc
dec
mov
enter
das
xor
add
inc
clc
aad
clc
call
hlt
js
clc
test
imul
clc
mov
clc
cmp
add
push
popf
inc
clc
push
jg
add
sar
aas
pusha
add
out
mov
sti
daa
clc
fldl
aad
mov
add
sub
add
inc
add
stos
ljmp
add
fistl
add
cs
lahf
insb
aam
clc
sti
xabort
clc
adc
add
add
popa
add
sbb
clc
iret
mov
dec
pop
jmp
jno
add
icebp
neg
xchg
xchg
out
lea
add
sub
add
jno
add
and
dec
and
add
sahf
iret
jo
add
cmc
xchg
stc
pop
clc
xchg
adc
add
es
sbb
add
cmp
mov
mov
add
add
jo
add
mov
jg
es
add
add
clc
aas
pop
cmp
loopne
ret
clc
fidivrs
jo
add
outsb
sub
add
inc
add
dec
or
movsl
clc
push
add
imul
movsb
clc
jno
add
insb
or
add
dec
cmp
xor
inc
add
jmp
jb
add
clc
pop
xchg
xor
add
sub
lcall
mov
clc
xchg
inc
clc
push
stos
int3
cmpsb
clc
out
sbb
clc
push
jnp
add
mov
lea
add
cmc
push
lahf
sti
sti
add
add
aad
mov
cmp
add
clc
pop
movsl
clc
imul
data16
inc
add
xlat
movsb
clc
sahf
test
jb
add
clc
stos
mov
sub
and
add
xbegin
clc
es
ljmp
cmp
out
xchg
outsb
pusha
add
dec
scas
push
add
add
add
mov
leave
inc
add
divb
add
shll
add
add
clc
sar
clc
sbb
jno
add
frstor
clc
adc
add
imul
data16
inc
clc
mov
fptan
ja
add
mov
inc
clc
cld
fnstenv
ljmp
clc
mov
fisubs
mov
inc
add
idivb
daa
clc
and
mov
jne
fsubs
add
push
sub
clc
xor
mov
clc
lods
sahf
int3
loope
pushf
out
inc
add
xchg
in
ljmp
xbegin
adc
add
popf
xbegin
add
cmp
pop
aaa
dec
out
cmc
add
inc
add
int3
add
add
mov
clc
inc
add
cltd
xor
add
mov
add
clc
cmp
gs
or
inc
add
mov
add
jecxz
pop
idiv
inc
clc
sub
add
sti
pop
dec
int3
push
cmp
clc
mov
clc
jg
clc
notl
add
ror
push
add
out
fnstsw
cmpsb
clc
stc
pop
pushl
pop
add
add
cltd
int
clc
ret
out
sti
or
mov
pop
clc
mov
add
cs
mov
add
mov
clc
xchg
sub
add
mov
dec
es
stos
and
add
out
add
cmp
clc
cmp
lret
ja
mov
inc
add
jns
dec
pop
sbb
cmp
xchg
ret
clc
ds
sub
pop
std
mov
and
add
out
gs
xor
jp
imul
jecxz
inc
add
jbe
lods
mov
clc
push
clc
out
xor
clc
movsb
clc
adc
add
das
mov
add
xchg
mov
clc
mov
cmp
pop
sar
add
sbb
jl
clc
pop
jmp
pop
mov
ljmp
clc
cmp
mov
es
ds
or
xbegin
cmp
into
cs
mov
add
add
mov
cmp
pop
mov
xor
add
push
mov
imul
clc
dec
dec
push
add
adc
add
dec
mov
out
shll
inc
add
leave
inc
add
repz
jb
add
add
out
imul
push
jg
or
clc
cli
adc
dec
and
pop
mov
add
xor
add
xor
add
lcall
cmp
or
pop
mov
clc
call
and
add
fcmovnb
clc
mov
loopne
cld
lret
outsb
pop
stos
fcmovnu
dec
popa
add
clc
fcmovne
sbb
cmp
clc
sub
xchg
test
cmc
int
dec
dec
sub
add
fsubp
clc
call
add
xchg
cmpsb
clc
sbb
clc
jae
add
xor
inc
clc
mov
mov
clc
test
cmp
mov
sbb
clc
mov
scas
or
cmp
clc
jecxz
mov
and
add
clc
pop
inc
add
iret
add
add
test
sbb
xor
or
add
in
bound
add
add
add
add
add
mov
hlt
mov
clc
popa
add
pop
push
push
clc
bound
add
add
fcmovb
clc
data16
imul
push
popa
add
mul
clc
mov
add
add
add
add
pop
js
cmp
cmp
xchg
sub
inc
clc
push
arpl
add
add
clc
arpl
add
jp
test
clc
mov
or
lcall
cmp
or
add
ljmp
add
inc
clc
daa
clc
ss
add
add
or
sub
clc
mov
push
mov
add
cmpsl
clc
into
add
add
inc
clc
ljmp
add
sahf
sar
push
adc
add
sub
xchg
outsb
cmc
dec
fsubs
fldt
clc
xchg
decl
jb
add
imul
mov
sbb
sbb
int
add
cmp
xbegin
lods
sar
pop
into
cld
mov
mov
mov
test
push
fcompl
mov
pop
loope
addr16
aad
clc
es
jns
js
aas
scas
and
cmp
sarl
sub
add
loopne
ja
clc
mov
icebp
shlb
int3
pop
inc
clc
mov
xchg
mov
inc
clc
lea
leave
jae
add
add
inc
add
jae
add
insb
jae
add
fcomi
push
mov
add
ret
add
xbegin
add
lock
cltd
inc
add
mov
clc
cmp
clc
adc
add
sub
mov
add
xchg
sbb
add
adc
add
add
xchg
sbb
int
sub
pop
push
add
add
inc
add
js
ljmp
add
imul
inc
add
inc
clc
repnz
clc
ret
jo
add
inc
add
pop
out
add
add
add
add
push
add
js
push
scas
inc
add
sbb
ret
clc
push
pop
ds
insb
stos
add
add
mov
pushf
leave
inc
add
aad
imul
in
dec
cld
aam
add
xchg
jmp
stos
out
mov
jno
add
clc
outsl
call
cmp
add
add
jge
sar
add
lock
in
sub
es
out
repnz
add
icebp
into
cmp
sbb
aas
hlt
aam
mov
sar
in
out
jg
or
adc
add
aas
mov
aas
cmp
cli
or
and
add
mov
lret
cmp
add
icebp
and
add
mov
add
sub
aas
xchg
scas
stos
aaa
test
gs
bound
add
clc
in
jnp
rclb
adc
cmp
clc
popf
and
add
xor
add
adc
mov
clc
mov
loop
pop
scas
lahf
mov
mov
cli
inc
clc
data16
adc
add
js
cmp
or
add
jge
pushf
filds
sbb
ss
clc
xchg
cld
test
mov
repnz
add
ss
int
add
inc
add
sub
adc
add
add
cwtl
pushf
jnp
add
add
clc
push
add
cmp
clc
add
sarb
repnz
adc
xchg
cmp
xlat
mov
add
add
xchg
shll
add
mov
movsl
clc
shll
clc
xchg
dec
ret
clc
enter
cmp
xor
add
add
sarb
dec
ret
sbb
mov
and
add
clc
push
push
mov
clc
pop
mov
add
cmp
jbe
add
add
add
clc
jp
mov
push
clc
shll
add
loop
pop
xbegin
add
clc
push
mov
cmp
fisubrl
std
gs
xor
add
arpl
add
cmp
sub
push
push
add
test
ljmp
cmp
repz
add
clc
xchg
aaa
fidivrs
sub
add
mov
dec
mov
icebp
xor
add
clc
or
clc
cmp
push
add
loopne
or
clc
pop
jns
push
add
mov
je
push
fsubl
mov
add
pop
clc
idivl
pusha
add
loope
and
add
inc
clc
adc
add
clc
or
mov
clc
pop
outsb
fsubrs
clc
cmc
sti
stc
pop
gs
jbe
add
or
loope
lock
sar
mov
xchg
ficompl
idivb
mov
dec
ret
clc
jbe
xor
pop
fisttpl
shlb
add
test
inc
clc
lret
lret
inc
add
pop
add
add
out
jl
ret
clc
scas
insb
repz
ljmp
in
pop
pop
fdivrl
jno
add
clc
and
add
mov
fadd
clc
mov
mov
repnz
jae
add
cmp
add
mul
clc
loopne
mov
insb
lods
mov
clc
rcrl
inc
add
mov
add
jb
add
add
clc
popa
add
in
popf
rol
clc
add
or
inc
add
icebp
lret
xor
add
fst
ss
sahf
add
add
clc
adc
add
fiaddl
lahf
in
cli
ds
lock
aad
clc
lea
add
sub
inc
clc
ja
inc
add
mov
pop
lcall
ret
aam
clc
sbb
aam
add
push
sahf
mov
jno
add
mov
dec
mov
clc
and
add
clc
mov
fdivrl
movsl
clc
or
sub
pop
clc
dec
push
clc
cmp
clc
sbb
or
clc
jns
or
add
clc
cmp
add
imul
pop
xor
mov
mov
ficoms
add
clc
lret
push
mov
icebp
js
imul
scas
sub
add
clc
inc
add
loop
scas
sbb
xchg
sub
dec
pop
faddl
add
mov
xor
add
add
add
arpl
add
clc
lcall
std
cmp
adc
add
add
pop
aas
cmp
add
ret
popa
add
fcmovnbe
int3
in
jp
jnp
pop
xchg
inc
add
push
test
add
add
push
add
or
add
movsb
clc
lods
push
aam
adc
add
insl
popf
out
jno
add
sbb
push
imul
add
iret
mov
clc
push
add
mov
push
and
add
or
sub
dec
push
adc
add
jmp
clc
or
clc
loopne
roll
add
clc
jnp
clc
idiv
mov
add
add
add
add
cwtl
xor
add
jecxz
push
mov
and
add
clc
nop
iret
push
mov
clc
ror
fwait
mov
push
push
repnz
clc
xchg
xchg
jmp
imul
mov
add
add
add
add
xabort
dec
cmp
mov
insl
dec
out
pop
stc
ret
clc
mov
cmpsb
clc
hlt
or
mov
clc
test
jl
add
add
add
add
sbb
sub
adc
add
test
enter
add
icebp
cmp
das
sbb
clc
adc
data16
push
add
push
clc
sub
add
popf
mov
pop
cltd
xabort
pop
pop
or
aam
addr16
fwait
pop
inc
add
clc
xchg
addr16
mov
pop
or
test
cld
push
in
lret
inc
clc
xbegin
push
add
cmpsb
clc
add
add
sub
clc
sbb
and
add
add
lea
push
repz
mov
jle
inc
add
jbe
clc
dec
popf
sbb
mov
mov
clc
lods
and
add
add
sti
sub
add
add
add
test
lock
pop
lret
and
add
or
add
xchg
xor
add
mov
rorb
imul
lock
add
insl
bound
add
cld
mov
xchg
clc
mov
clc
jnp
push
pop
mov
icebp
sbb
loop
and
add
clc
fs
lods
test
mov
out
mov
fldenv
xchg
lea
add
or
testb
mov
inc
clc
jmp
inc
add
xor
add
mov
add
aad
clc
sar
lcall
inc
clc
or
mull
add
aaa
test
jle
pushf
shlb
clc
jne
clc
cmp
xchg
adc
add
xor
add
add
push
test
cld
std
mov
and
add
clc
movsb
clc
mov
pop
clc
mov
in
pop
adc
sub
add
add
add
ds
add
in
out
lret
clc
mov
daa
clc
bound
add
sub
add
sub
cltd
fsts
jno
add
add
push
or
jp
leave
xor
add
sar
outsb
xor
add
jp
clc
jno
add
xchg
cltd
jl
lret
xor
add
mov
sbb
adc
add
adc
add
cmp
clc
cmp
clc
xor
add
xbegin
clc
in
leave
push
shll
dec
popf
imul
push
mov
add
add
add
clc
add
js
xor
clc
pop
lea
ds
fdivs
jecxz
adc
add
inc
clc
mov
clc
out
cs
mov
dec
pop
lock
cmc
push
add
sub
out
and
add
clc
jp
push
add
pop
nop
cmp
mul
clc
ljmp
clc
inc
clc
mov
cs
or
add
add
mov
clc
js
add
pop
pop
cs
int
iret
aas
bnd
cmp
push
mov
clc
mov
xor
add
add
cs
clc
mov
add
clc
insb
ja
clc
inc
add
dec
inc
clc
xchg
or
pop
clc
jmp
inc
add
divb
out
mov
clc
cmp
jle
add
test
add
int3
dec
mov
pop
ret
sbb
aas
movsb
clc
std
icebp
mov
and
outsb
mov
clc
inc
clc
inc
clc
mov
add
add
test
push
cmpsl
clc
ret
data16
fxch
mov
and
inc
add
cmp
pushf
inc
add
mov
xchg
insb
aad
add
pop
stos
mov
xchg
frstor
add
js
dec
rorl
add
mov
add
mov
or
add
rorl
gs
in
cmp
clc
add
add
clc
sti
or
add
clc
add
add
lret
clc
fldcw
out
aad
das
mov
cmp
xchg
sub
ss
addr16
xchg
xchg
and
add
clc
lahf
mov
and
add
clc
cwtl
loopne
xabort
mov
sbb
clc
push
lahf
inc
add
mov
inc
add
outsb
aam
stc
cmp
cmp
scas
ret
daa
clc
xchg
imull
xbegin
add
cmc
lcall
dec
xchg
mov
mov
clc
in
int3
test
in
mov
test
cmp
data16
cmp
xabort
inc
add
sbb
clc
pop
clc
pop
or
mov
clc
or
sub
test
add
sar
push
fisttpll
clc
test
stc
je
cmp
add
sub
clc
repnz
push
lret
or
or
lret
clc
data16
jge
fistpl
nop
xor
cmpsb
clc
jecxz
roll
add
dec
mov
outsl
push
popf
mov
lret
das
cwtl
mov
clc
sub
loop
prefetch
sahf
jns
insb
jae
add
clc
repz
faddp
clc
test
inc
add
mov
xor
xchg
mov
xchg
mov
and
add
clc
xchg
dec
lcall
mov
clc
sub
xchg
jecxz
cmp
clc
xor
add
add
or
push
mov
dec
inc
add
xchg
and
add
clc
jle
clc
repnz
jmp
add
rorb
add
or
xchg
cld
inc
clc
sar
clc
repz
add
in
or
clc
fisubrs
clc
movsb
clc
jecxz
in
jnp
bound
add
mov
add
sub
sar
clc
nop
xchg
cltd
arpl
add
add
clc
test
jns
clc
sub
add
add
addr16
adc
stos
pop
out
sbb
clc
xchg
lret
add
test
stc
ds
es
mov
imul
stos
jnp
add
add
je
jb
add
add
clc
arpl
add
sar
enter
sar
clc
inc
add
data16
addr16
frstor
add
jge
adc
add
add
clc
cmpsl
clc
push
movsb
clc
jl
clc
in
cmpsb
clc
add
add
pusha
add
cmp
add
scas
lea
add
aad
add
mov
add
push
xor
cwtl
jo
add
add
in
pop
std
dec
fs
push
add
pop
clc
lock
lea
add
decb
jmp
clc
sar
pop
push
add
pop
and
add
jle
clc
xchg
mov
sti
call
pop
dec
cmpsl
clc
and
cwtl
inc
clc
xchg
pop
xor
shll
add
jecxz
adc
add
inc
clc
ret
clc
adc
add
or
add
out
or
clc
jns
push
push
add
cmp
fistps
add
add
add
imul
popa
add
xchg
mov
cs
or
lock
ror
mov
jne
pop
mov
clc
xchg
push
add
xor
add
mov
dec
dec
or
push
mov
cmp
mov
sarb
or
jp
ljmp
xor
jbe
xor
add
or
xabort
push
pop
push
add
movsl
clc
pop
and
add
or
lods
add
add
add
jne
clc
sar
negb
pop
clc
sub
clc
fldpi
xlat
xchg
adc
add
fldt
arpl
add
clc
xor
add
push
call
mov
add
daa
clc
sti
and
add
add
clc
aam
clc
bound
add
clc
or
mov
icebp
sti
mov
lock
cltd
adc
add
cli
cmp
clc
int3
into
xchg
jmp
shrl
js
and
gs
hlt
sub
add
add
clc
fidivrl
xor
add
test
fldcw
clc
xchg
jno
add
aas
adc
sub
inc
clc
aaa
dec
xchg
add
add
mov
inc
add
lret
xor
add
xchg
enter
loope
js
jp
cmp
and
add
and
add
popa
add
lods
add
push
jbe
clc
pop
sar
inc
add
jp
clc
cmp
ds
pushf
cmp
clc
jnp
lods
cltd
sub
and
add
aas
dec
add
add
cmc
push
inc
add
or
clc
ret
and
add
add
cmp
mov
add
inc
add
scas
cmpsl
clc
pop
push
fcmovne
mov
push
mov
add
insb
das
add
add
add
jecxz
loopne
inc
add
mov
sar
repnz
add
mov
nop
insl
aad
sar
add
fidivl
add
mov
bound
add
add
jae
add
add
mov
lods
push
movsb
clc
push
add
sub
add
cmp
add
sbb
clc
sbb
cmp
mov
aad
xchg
lcall
mov
add
jbe
mov
cmp
repnz
xchg
sub
out
loope
dec
push
add
xchg
cmc
imulb
adc
add
add
mov
inc
clc
jnp
add
call
pop
stos
nop
add
add
pop
fstpl
sub
ds
mov
and
add
add
pop
fimull
pusha
add
setle
ds
sbb
add
sar
adc
add
clc
repnz
cmp
inc
clc
push
xor
add
lret
lret
xchg
rol
clc
scas
mov
mov
add
fists
hlt
dec
xabort
sahf
in
insb
loope
divl
add
push
sub
push
jle
dec
inc
clc
es
sbb
js
mov
add
and
add
xor
dec
jae
add
or
insl
mov
clc
and
add
clc
cltd
ss
sar
sbb
add
cmovp
clc
sbb
adc
add
add
jne
cmp
add
imul
clc
cmp
xchg
clc
jb
add
cmp
fisubrs
and
add
mov
ss
ret
clc
push
or
cld
cld
push
xchg
cmpsl
clc
sahf
pop
ss
add
mov
test
cmpsl
clc
clc
repnz
stos
test
mov
mov
or
cmp
dec
jno
add
das
or
add
mov
inc
clc
bnd
add
leave
ret
clc
mov
pop
test
push
add
popf
ljmp
inc
clc
cmp
scas
ret
add
daa
clc
or
sub
inc
clc
xor
clc
arpl
add
and
add
sti
or
jecxz
jmp
outsb
adc
add
mov
add
cmpsl
clc
jnp
push
iret
jle
clc
push
or
xchg
ds
mov
lods
fyl2x
int3
pop
jns
sub
add
add
popa
add
rolb
iret
jle
mov
pop
or
iret
in
fistps
add
fistpll
xor
clc
mov
insl
fwait
push
sub
scas
hlt
add
add
das
push
clc
cltd
std
mov
lea
hlt
in
icebp
or
cmpsl
clc
int
and
cmp
jo
add
add
dec
call
mov
loopne
dec
icebp
sbb
adc
sahf
cs
mov
sbb
sbb
cmp
mov
clc
loope
add
add
clc
dec
dec
fnstsw
ljmp
mov
loop
mov
add
push
add
sub
clc
shll
add
gs
or
popf
out
pop
mov
add
push
fbld
add
repz
fisubl
add
add
sub
add
bound
add
cld
xor
add
or
add
add
je
clc
sbb
cltd
inc
clc
loopne
mov
scas
in
imul
xor
add
add
jl
xor
sti
nop
imulb
clc
cmp
cmp
add
add
adc
add
add
cmp
movsl
clc
inc
clc
or
xchg
cmp
clc
and
add
sub
clc
add
add
clc
mov
dec
lods
inc
clc
in
out
xabort
clc
xchg
fidivrs
add
aaa
into
cmp
clc
mov
mov
clc
aaa
int
add
push
add
lea
add
incb
aas
xor
add
push
add
ljmp
add
adc
add
adc
add
inc
add
sub
movsl
clc
push
add
cmp
je
clc
sbb
fwait
addr16
out
pop
pop
fistpl
add
fwait
sarb
imull
imul
add
shl
xchg
dec
xor
adc
add
add
cld
or
push
clc
jns
dec
cltd
xchg
daa
clc
pop
xor
jne
add
cmp
bound
add
add
xlat
insb
cmp
cwtl
dec
xlat
jmp
clc
jns
in
cmp
add
scas
scas
xabort
imul
gs
mov
add
or
loope
addr16
clc
fs
popf
xbegin
clc
arpl
add
add
mov
push
add
out
inc
clc
adc
add
add
dec
fs
push
add
xchg
adc
orps
add
mov
sbb
out
cmp
add
mov
icebp
xor
sub
in
xlat
xor
add
add
pop
clc
push
clc
jle
bound
add
push
add
ss
clc
sub
test
mov
xabort
clc
jg
jno
add
add
shlb
add
jnp
sbb
or
clc
xor
add
add
mov
lods
outsl
pop
aad
add
pop
negb
clc
pop
push
int3
xchg
fxch
ljmp
clc
cmp
sub
and
add
sub
lock
add
fistps
data16
pop
jne
or
xor
cmp
inc
clc
ret
clc
fs
xor
add
mov
mov
clc
dec
dec
aas
push
clc
data16
je
xchg
sar
and
jl
clc
sub
add
cli
lods
sbb
cmp
add
pop
in
icebp
pop
clc
or
clc
jmp
add
and
add
clc
mov
movsb
clc
repnz
inc
clc
push
clc
sar
pop
stos
xor
add
clc
sbb
cli
sahf
aas
scas
push
int
clc
fldenv
add
clc
push
lea
not
add
add
add
shlb
add
data16
and
add
testb
mov
in
pop
and
add
add
in
fs
imul
add
mov
sbb
mov
push
dec
and
add
pop
dec
inc
clc
sub
clc
and
add
js
jo
add
and
add
clc
mov
fists
add
clc
movsl
clc
aas
int3
pop
dec
push
add
imul
adc
add
pusha
add
jle
pop
clc
scas
xbegin
iret
movsl
clc
xor
add
ret
clc
push
add
imul
sbb
pop
sbb
and
add
pop
clc
push
jnp
mov
add
cmp
clc
imulb
out
lods
int
sbb
clc
sahf
cmp
dec
and
add
mov
aad
int
jg
mov
clc
push
test
movsl
clc
xor
add
pop
sbb
cmp
sbb
mov
sbb
jl
mov
insb
mov
clc
mov
fwait
cmc
mov
clc
sub
clc
int3
in
inc
add
mov
iret
adc
add
xchg
and
popf
btcl
adc
add
xchg
xchg
push
add
add
add
clc
daa
clc
out
mov
clc
mov
add
add
add
xor
add
and
add
movsb
clc
ljmp
and
add
aad
clc
ret
clc
mov
clc
cmp
xchg
dec
cmp
clc
cmp
add
gs
sub
mov
add
adc
add
add
pop
mov
clc
sbb
push
push
nop
icebp
add
ja
clc
out
ret
clc
ret
clc
and
add
clc
arpl
add
add
push
push
add
loop
popf
aam
xor
add
fnstsw
jnp
add
pop
jnp
int3
testl
adc
clc
pusha
add
jo
add
add
and
add
add
mov
add
iret
or
add
dec
mov
data16
cld
jg
fcoml
add
sub
add
or
clc
sbb
mov
out
xbegin
mov
aaa
pusha
add
inc
clc
mov
lret
push
add
mov
sbb
clc
push
add
mov
inc
clc
inc
add
sbb
data16
or
add
add
add
add
mov
into
xchg
mov
cs
mov
push
cli
mov
mov
rorb
fwait
and
add
nop
jge
aad
loopne
cmp
add
pop
mov
cmp
cmc
sub
mov
dec
xbegin
clc
sub
and
and
add
ljmp
pushf
lar
add
add
push
test
xbegin
cld
aad
xor
clc
xchg
loopne
std
clc
aas
inc
clc
sub
clc
popf
loopne,pn
jno
add
jmp
mov
pop
xor
add
mov
roll
clc
push
ffreep
clc
ret
clc
fldcw
mov
clc
ficoms
cmp
sbb
cltd
in
push
add
pop
scas
push
adc
js
mov
fdivp
add
add
clc
push
add
jno
add
pop
clc
sub
enter
clc
push
es
cmp
test
imulb
add
sarb
clc
clc
sbb
fiadds
add
xchg
je
cmp
test
add
dec
dec
scas
imul
loopne
add
add
stos
je
xchg
popf
sub
jbe
clc
rol
clc
lea
add
push
jmp
lods
mov
add
mov
lods
sbb
lods
iret
rorl
clc
mov
add
add
dec
pop
es
inc
clc
pusha
add
jmp
add
popf
into
mov
xchg
mov
add
push
adc
add
jo
add
fnsave
pop
jmp
test
out
cli
test
add
or
arpl
add
aaa
push
in
testl
cmc
loop
xabort
lcall
fdivs
add
test
push
add
ja
inc
clc
xchg
dec
fprem1
pop
xor
add
mov
iret
enter
add
mov
mov
add
xchg
inc
add
xchg
popf
or
add
arpl
add
mov
mov
add
mov
and
add
out
aad
pusha
add
cmp
ficompl
clc
scas
inc
add
repz
sub
pop
rcrl
jb
add
lcall
xchg
out
aad
pop
daa
clc
bound
add
dec
add
iret
icebp
push
arpl
add
xbegin
push
clc
mov
add
jecxz
add
punpcklbw
add
sub
ss
add
cmp
clc
das
test
add
mov
stos
push
inc
clc
inc
clc
pop
push
clc
pop
cs
cmpsl
clc
mov
mov
clc
je
add
adc
add
clc
hlt
mov
sub
cmp
pop
mov
clc
sbb
mov
push
add
push
jle
into
fcomps
or
add
inc
add
sub
insb
add
add
add
loope
xchg
pop
out
xor
add
pop
mov
cld
xor
sbb
adc
add
cld
fldenv
clc
lcall
inc
add
and
add
push
int
cmp
jecxz
mov
add
add
mov
clc
xor
add
insl
xor
add
xabort
add
call
in
pop
gs
jle
cwtl
filds
add
repnz
cmp
add
jecxz
pop
int3
sbb
clc
xchg
and
add
add
in
pop
in
sub
in
ret
clc
mov
mov
push
add
fdivrp
or
or
add
mov
pop
fstl
or
clc
mov
out
outsl
iret
clc
xchg
imul
clc
pop
jge
mov
inc
add
inc
clc
mov
out
sbb
sar
cmc
lret
jae
add
cmc
sbb
clc
or
add
hlt
insl
pop
outsl
pop
pop
push
cmc
xchg
xor
add
clc
dec
fidivrl
ret
sub
sub
and
add
mov
lcall
ds
clc
ss
clc
lret
rorb
sti
fists
add
add
add
clc
jo
add
add
xchg
sbb
cmpsb
clc
mov
fiaddl
clc
fnsave
add
jg
add
pop
clc
pop
ret
clc
or
clc
negl
mov
mov
push
add
jo
add
inc
add
rol
clc
xbegin
add
js
pop
sub
add
jmp
xchg
fwait
mov
clc
cmp
mov
jo
add
mov
add
aas
pop
push
or
add
outsb
and
add
add
cmp
add
or
clc
out
lods
int
aam
stos
popf
push
jp
cmp
rcrb
push
add
ret
clc
sub
lret
bound
add
clc
mov
stc
scas
jns
mov
clc
lret
ja
clc
sub
inc
clc
xchg
das
or
test
clc
cmpsl
clc
pop
jg
add
bound
add
add
arpl
add
or
aaa
js
add
rorl
clc
ret
mov
ucomiss
clc
mov
leave
sub
mov
pop
out
mov
test
mov
clc
xchg
in
pop
add
add
jge
sbb
add
out
and
add
or
loopne
cmc
push
add
mov
and
add
and
add
add
or
mov
fsubs
add
or
clc
or
and
add
fistl
scas
inc
clc
int3
jge
loope
outsl
mov
push
es
sbb
dec
and
add
add
mov
aad
mov
in
stos
and
add
add
mov
xor
dec
pusha
add
add
arpl
add
repnz
lret
lcall
clc
cmp
mov
clc
out
call
add
clc
adc
add
insb
in
xchg
pop
dec
iret
sub
push
mov
enter
mov
add
inc
clc
ffree
clc
jne
clc
movsb
clc
loopne
inc
add
add
add
clc
ret
clc
add
clc
lahf
jecxz
jl
clc
inc
add
lret
add
cltd
ds
jbe
clc
clc
inc
add
inc
clc
sub
inc
add
leave
pop
cmp
nop
rclb
clc
xor
add
clc
mov
add
cmp
add
imul
daa
clc
xchg
sti
int
clc
scas
mov
add
cs
fiaddl
clc
jle
mov
clc
add
add
outsb
fcomip
lods
iret
aam
pop
int3
sarl
sub
pop
pop
clc
xchg
dec
dec
in
xor
mov
mov
jp
mov
xchg
pop
add
add
pop
sarl
xabort
sar
clc
push
or
inc
clc
inc
clc
xchg
inc
add
pop
pusha
add
push
clc
stc
test
add
clc
jne
clc
push
add
stos
je
jo
add
dec
pop
add
add
shl
clc
xabort
clc
push
mov
mov
clc
adc
add
dec
cmpsl
clc
fimull
fwait
sub
mov
sarb
adc
add
cmp
clc
push
adc
fidivl
add
es
xor
add
and
add
dec
cmp
add
or
and
stos
mov
jg
clc
xchg
dec
movsl
clc
test
cli
rcrl
lods
loop
cmp
clc
fiadds
inc
add
outsb
gs
fsts
add
fxam
clc
sbb
cmp
add
and
add
mov
cmp
clc
jecxz
xor
add
data16
data16
movsb
clc
icebp
lods
xchg
xchg
pop
clc
js
push
data16
jg
dec
mov
clc
jb
add
cs
icebp
int3
test
cmp
jmp
clc
loop
sub
out
sbb
clc
roll
add
push
sbb
add
xchg
aam
clc
cmp
lret
cmp
sbb
jne
push
inc
clc
jl
add
bound
add
xchg
in
mov
add
or
add
out
push
adc
or
add
arpl
add
mov
add
fisubs
xchg
mov
inc
clc
movsl
clc
pop
fisubrl
cmc
push
add
add
out
js
lods
sbb
jne
clc
cs
gs
test
pop
das
sbb
and
add
negl
push
add
push
inc
clc
jbe
push
stos
pop
inc
clc
jecxz
add
lea
jns
jmp
clc
mov
sub
add
add
add
add
clc
mov
out
xchg
fwait
lock
enter
ficoml
clc
or
repnz
add
add
add
mov
loopne
fs
add
add
add
xabort
aam
clc
aas
or
add
adc
cmp
ja
add
dec
xchg
je
cmc
and
ss
clc
xlat
rep
stos
or
mov
clc
idivl
pop
pop
dec
xor
add
fmuls
or
add
add
stos
xchg
aad
jns
add
mov
clc
outsl
adc
add
mov
add
shr
xchg
out
negb
and
cmpsl
clc
das
xchg
fstpl
fpatan
pop
xchg
and
inc
add
and
add
inc
clc
loope
add
add
add
add
jl
mov
adc
add
cmp
cmp
push
fildll
clc
push
clc
clc
pop
scas
pop
sar
in
xbegin
mov
clc
xor
add
lods
sub
imul
add
clc
enter
clc
xchg
cmp
clc
pop
inc
add
fisubs
add
add
mov
jnp
add
nop
push
xor
add
clc
aad
mov
in
add
add
clc
cmp
add
lods
lock
add
clc
sub
in
and
add
and
mov
icebp
iret
mov
mov
movsl
clc
cmc
addr16
or
cs
push
add
push
cmp
clc
lret
and
add
add
and
add
std
mov
loop
cmp
xchg
or
add
xchg
cmc
popf
bound
add
xor
add
pop
out
dec
insl
sub
cmp
clc
dec
in
mov
cltd
ret
xchg
adc
add
add
dec
mov
clc
pushf
mov
clc
sub
adc
add
js
stos
and
add
lods
inc
add
bound
add
clc
repz
add
cs
cwtl
idivl
out
inc
add
cmp
cmp
sbb
sbb
add
and
clc
nop
sub
inc
clc
jns
clc
clc
mov
cmc
xor
or
das
cld
jmp
aaa
inc
add
mov
mov
arpl
add
test
cwtl
xbegin
int3
mov
sub
jns
clc
or
xbegin
lea
bound
add
add
call
pop
dec
mov
mov
imul
loop
repnz
add
outsb
stc
ljmp
clc
mov
clc
popf
pop
mov
test
xchg
popf
inc
clc
xchg
outsb
fidivrs
add
in
mov
mov
clc
lea
iret
fs
and
cmc
push
add
lock
and
add
clc
inc
add
push
xchg
pop
gs
push
add
mov
add
jp
fmulp
xchg
sbb
mov
sbb
mov
cmpsb
clc
inc
add
xor
add
add
push
and
add
popa
add
adc
add
xor
add
add
xor
ja
in
mov
add
clc
fs
push
add
sbb
add
cmp
jle
or
pop
mov
xchg
mov
shlb
cmp
add
add
ret
xor
and
add
cmp
in
scas
xor
add
jne
loopne
stos
sar
mov
push
add
fsubr
insl
xor
add
clc
stos
mov
clc
push
add
stos
in
and
add
add
loope
out
test
movsl
clc
js
pop
xbegin
jg,pt
repnz
xchg
ret
clc
scas
cmp
hlt
call
clc
push
inc
clc
adc
xor
add
clc
mov
add
jnp
inc
add
icebp
repnz
clc
rorb
push
inc
clc
pusha
add
gs
cld
xabort
mov
clc
mov
insb
add
add
add
call
sub
add
push
cmpsl
clc
lods
xchg
in
inc
add
cmp
cmp
clc
dec
push
clc
pop
popa
add
dec
xchg
ret
clc
cmp
clc
mov
mov
jecxz
adc
add
xchg
pop
sbb
fnsave
lcall
add
mov
inc
clc
imul
dec
inc
clc
cli
push
clc
and
add
xabort
nop
fs
das
sub
shrb
clc
pushf
leave
test
push
jb
add
imul
imul
add
cmp
clc
pop
and
or
add
ret
es
std
inc
clc
adc
push
add
dec
loopne
mov
mov
imul
in
fidivl
push
sahf
pop
pop
cltd
sbb
ss
jmp
add
stos
fistl
add
push
pop
lods
fstps
clc
rclb
and
adc
add
inc
add
sbb
xor
add
outsl
cltd
inc
clc
pushl
add
push
jecxz
aam
clc
mov
cmp
xor
add
cltd
inc
clc
out
mov
cmp
loopne
xor
add
cmp
add
mov
add
push
and
add
repnz
and
add
out
mov
aad
dec
stos
cmc
add
push
add
jmp
mov
enter
push
int3
lods
movsb
clc
aad
mov
add
jne
xchg
mov
clc
jecxz
scas
adc
clc
gs
sbb
clc
pop
test
or
clc
fcomi
std
movsl
clc
adc
add
clc
xor
notb
clc
lcall
clc
ds
add
adc
add
add
arpl
add
ret
clc
xor
xor
add
and
add
mov
and
clc
fcomip
sahf
ljmp
add
fdivrs
add
fstl
add
cmp
add
pusha
add
or
fildl
add
xor
mov
sahf
push
add
dec
shufps
adc
add
add
dec
lahf
pushf
sub
clc
repnz
imul
or
leave
int
xchg
in
clc
pop
pop
push
clc
movsl
clc
and
add
fwait
adc
jns
add
divb
add
xchg
jecxz
or
add
add
cltd
add
add
cmp
add
clc
mov
xbegin
add
outsl
sbb
bound
add
inc
add
cmp
add
or
and
or
clc
dec
out
and
add
repz
out
mov
clc
or
clc
jl
clc
xchg
xchg
or
jge
mov
pop
insb
cwtl
arpl
add
nop
int3
test
mov
and
add
cmp
fcoms
js
ret
das
pop
clc
push
aas
mov
insb
mov
add
fdivp
popf
jecxz
hlt
mov
add
mov
jmp
clc
test
xabort
clc
jbe
insl
stc
ds
jmp
clc
lea
stos
sbb
clc
mov
and
add
scas
into
outsl
xchg
out
dec
cmp
cmp
std
xor
add
push
mov
xor
sub
inc
add
mov
sub
vmwrite
add
in
xchg
cwtl
inc
add
insl
stos
shlb
add
cmp
mov
out
test
pop
fdivl
pop
lahf
push
jg
jp
clc
and
mov
aas
int
cwtl
daa
clc
mov
clc
scas
out
popf
es
clc
jge
push
adc
dec
jle
clc
shrb
push
add
xchg
xchg
fcoms
ja
clc
int3
push
loopne
popa
add
jns
jl
and
insl
fldl
into
and
add
test
add
jbe
add
add
inc
clc
mov
shrl
xor
ss
sbb
mov
es
push
insb
js
ffree
clc
push
xchg
inc
clc
cmp
or
clc
add
sub
push
jg
mov
xchg
mov
lret
jnp
push
clc
movsl
clc
rcrb
das
mov
cmp
inc
add
cmpsb
clc
jl
and
sbb
clc
pop
mov
add
add
xchg
cmpsl
clc
ret
clc
and
add
add
and
add
test
loop
xlat
out
adc
adc
and
add
sbb
add
xor
add
xor
add
rol
clc
cmp
pop
addr16
cmpsb
clc
popa
add
lods
movsl
clc
cltd
pusha
add
add
add
add
inc
clc
fsubp
clc
mov
daa
clc
xchg
xchg
movsl
clc
popf
scas
push
add
pop
out
stc
scas
psubsw
aad
sub
clc
or
fisubl
add
out
mov
outsl
clc
inc
add
xchg
cmp
int3
sbb
add
dec
jns
cltd
aaa
scas
mov
aas
xchg
call
imul
cmp
mov
pop
inc
add
push
cmp
inc
add
test
fsts
add
cmp
add
jno
add
loope
cmp
add
mov
lods
add
cmp
add
add
xchg
mov
add
sub
into
daa
clc
mov
clc
addr16
mov
add
imul
xchg
jae
add
jg
add
jg
clc
std
inc
clc
adc
add
add
lods
add
add
add
pushf
hlt
jo
add
pushf
iret
iret
inc
add
ds
lods
pushf
xor
sbb
clc
fcoml
clc
leave
decb
xabort
xor
add
xchg
leave
lcall
xchg
sti
call
pop
and
add
dec
pop
and
add
clc
mov
mov
clc
xor
add
add
add
add
or
xlat
sbb
add
clc
mov
sahf
xchg
pop
mov
inc
clc
imul
fisttpl
clc
outsl
mov
add
jns
clc
insl
add
add
clc
mov
fstpt
nop
pop
adc
add
clc
nop
jae
add
aam
clc
stos
sar
clc
repz
imul
push
lods
clc
fistps
push
add
cs
pop
cmp
sbb
cltd
nop
add
insl
pop
mov
jle
mov
xchg
mov
int
add
mov
add
cmp
clc
mov
and
add
jo
add
arpl
add
clc
add
add
adc
fs
jns
mov
push
push
nop
movsl
clc
popf
cmpsl
clc
sub
ficoml
add
add
fistpl
idiv
mov
je
ljmp
clc
or
out
mov
or
data16
jmp
add
dec
sar
lods
std
das
pop
jmp
sbb
cltd
int3
in
mov
jb
add
insb
push
add
fbld
clc
adc
add
jo
add
push
daa
clc
jae
add
add
and
add
xabort
clc
ret
clc
push
push
xor
add
sahf
enter
popf
push
pop
repnz
sub
insb
cmc
and
add
add
xor
add
pop
jmp
inc
clc
loop
adc
add
add
data16
mov
clc
cmp
test
lret
clc
cmp
insb
xchg
sub
mov
push
mov
leave
inc
clc
sub
ja
arpl
add
clc
int3
jl
das
push
sbb
lods
lcall
mov
clc
mov
add
outsb
inc
clc
out
jecxz
fidivrs
mov
arpl
add
clc
xor
add
clc
or
mov
clc
xor
xchg
mov
add
mov
insb
bound
add
clc
inc
clc
mov
cmp
clc
mov
add
xor
add
lea
clc
lahf
pop
sar
add
add
sbb
push
bound
add
clc
push
xor
clc
sub
add
imul
out
cmpsb
clc
aam
xor
add
xchg
mov
jp
add
in
sbb
add
xor
add
iret
lret
dec
ret
xor
push
add
adc
add
inc
add
seto
clc
lock
ds
push
cmpsb
clc
cmpsl
clc
jbe
cltd
xbegin
lods
cmp
add
outsl
and
addr16
push
add
or
add
add
fdiv
xchg
repz
or
add
xabort
add
xchg
adc
add
add
leave
dec
fwait
add
add
add
or
jnp
and
add
fadds
add
fisubs
fcoml
add
pop
imul
adc
clc
lods
xbegin
js
add
or
imul
dec
addr16
ljmp
clc
jge
add
and
add
xchg
daa
clc
and
add
clc
and
fbld
add
lea
add
insl
push
shrl
clc
mov
clc
sti
test
inc
add
push
ljmp
xor
add
mov
clc
or
inc
add
stos
flds
add
in
mov
out
clc
lods
add
add
push
daa
clc
je
clc
jl
pop
lret
add
ret
jnp
test
jmp
sarb
lahf
jl
imul
mov
clc
out
gs
mov
clc
xbegin
push
jecxz
add
add
clc
xor
add
add
scas
sub
add
in
pushf
adc
add
mov
dec
fmuls
neg
insb
push
add
aas
nop
ror
jl
jg
clc
xor
inc
clc
dec
dec
mov
add
outsb
sbb
add
dec
lcall
arpl
add
and
add
push
fdivs
add
in
push
xchg
inc
clc
sub
scas
cltd
jmp
dec
sar
xchg
mov
or
clc
and
add
inc
add
xor
clc
icebp
imul
add
add
leave
repz
addr16
mov
push
add
inc
add
pop
xbegin
add
jl
clc
and
add
xbegin
clc
add
add
add
add
xabort
push
mov
clc
cmp
jmp
hlt
out
xchg
push
xchg
mov
leave
sbb
in
stos
clc
ljmp
adc
add
inc
add
or
test
clc
cmp
push
add
data16
xchg
scas
pop
push
add
cmp
clc
imul
fisttps
mov
add
jl
clc
into
xlat
lahf
out
ds
add
add
sar
adc
add
add
test
add
addr16
adc
clc
cmp
clc
pop
imull
or
xchg
inc
add
jbe
insl
pop
adc
push
clc
fisttpl
adc
add
add
pop
lea
js
lock
mov
rcr
push
xchg
or
lods
adc
add
add
push
clc
test
mov
lea
mov
clc
rcll
pop
clc
adc
add
out
sub
jne
xchg
mull
add
add
jecxz
mov
es
jo
add
lcall
add
clc
adc
pop
sarl
enter
daa
clc
repz
cmp
add
add
mov
add
push
outsb
mov
fdiv
pop
xchg
xchg
inc
add
dec
std
fsubs
add
aaa
test
mov
xor
add
add
dec
loope
xchg
jmp
add
add
mov
notb
ja
adc
push
sar
aas
cmp
test
xchg
scas
xchg
push
add
bound
add
clc
push
stos
jmp
clc
shll
add
mov
adc
add
clc
pop
icebp
cli
in
mov
cld
and
add
clc
cmp
push
add
add
outsl
and
add
inc
add
repz
add
sbb
cwtl
inc
add
cmp
jle
xor
add
clc
jae
add
xor
add
in
cmp
add
push
add
xchg
adc
add
pop
mov
clc
inc
add
pop
stos
mov
jp
and
sub
add
add
ljmp
push
add
cmp
jno
add
clc
and
add
add
inc
add
and
mov
movsb
clc
fs
sbb
dec
mov
in
loop
mov
test
js
mov
lcall
sub
pop
in
pop
lcall
sar
cmp
movsl
clc
mov
insb
push
add
clc
pop
je
out
lock
jb
add
add
mov
mov
mov
iret
fwait
pandn
loope
push
ja
sti
fwait
mov
fsubs
add
mov
cli
mov
cmp
xor
add
jnp
inc
add
and
add
cmp
clc
mov
add
dec
imul
add
mov
push
cmpsb
clc
stc
dec
mov
add
or
add
clc
mov
jl
add
sub
int3
in
repz
clc
mov
push
add
maxps
jp
add
ds
clc
mov
push
clc
and
add
mov
xor
mov
std
loop
lea
add
jmp
add
clc
mov
fcoml
sbb
clc
cmpsl
clc
arpl
add
add
lret
stc
stos
pop
cs
clc
mov
add
test
je
add
out
frstor
add
enter
lods
pop
mov
mov
jl
add
shlb
pop
cli
add
add
pop
outsb
nop
inc
clc
cmpsb
clc
repnz
fcomp
inc
clc
mov
add
add
kmovw
clc
leave
decl
aam
pop
sub
arpl
add
add
push
sub
add
add
inc
clc
fwait
aad
clc
fs
jne
cmp
add
rcrb
adc
add
dec
xor
add
xchg
adc
add
xor
aas
push
lods
ret
clc
insb
bound
add
leave
out
nop
out
or
add
sbb
clc
icebp
repnz
or
popa
add
and
add
aas
sar
sar
cmpsb
clc
inc
add
jo
add
add
or
xor
add
lods
jmp
add
cld
filds
add
lret
in
mov
xor
add
clc
imul
std
push
add
or
clc
cli
addr16
loopne
adc
clc
imul
cmp
clc
bound
add
add
fsubrp
imul
sub
mov
clc
pop
fs
mov
insl
cmp
outsb
repnz
arpl
add
clc
fucomp
jae
add
xlat
mov
das
fsubrl
add
mov
xchg
stos
testl
add
fimull
jb
add
add
jno
add
sub
pop
sub
cmp
clc
xbegin
pushf
lret
mov
clc
in
sbb
dec
xchg
repnz
mov
add
mov
clc
or
mov
clc
test
add
mov
xlat
inc
add
je
jne
addr16
jnp
mov
clc
out
xchg
daa
clc
add
add
dec
repz
int3
pop
xor
add
jns
and
add
add
mov
data16
cmc
mov
clc
into
popf
gs
or
add
fldenv
clc
inc
add
xchg
cmp
push
add
int
add
cmp
es
push
mov
add
add
sub
add
pop
dec
fisttps
call
clc
scas
push
add
add
jl
cmp
popa
add
ret
clc
or
add
movsl
clc
mov
xchg
js
add
mov
mov
clc
cmp
add
add
pop
xchg
lret
and
add
clc
pop
push
movsl
clc
cmp
xchg
add
add
clc
mov
clc
mov
cmc
mov
push
clc
jle
enter
add
pop
popf
repz
or
lcall
add
jns
mov
xchg
cmp
out
mov
add
sbb
sbb
shlb
add
add
add
test
mov
loop
jne
lret
adc
add
add
clc
mov
repz
clc
inc
clc
iret
push
add
sar
add
clc
cltd
clc
dec
push
or
leave
and
jg
clc
lods
fmuls
jnp
addr16
push
clc
adc
add
sbb
imul
ljmp
and
add
divb
add
cmovs
popa
add
fmull
or
clc
cli
inc
add
rclb
outsb
or
clc
pusha
add
das
clc
mov
dec
pop
pop
xchg
add
add
out
mov
sub
xchg
fnsave
int
icebp
sbb
mov
sub
add
push
in
sub
clc
sarl
add
add
inc
clc
mov
movsb
clc
and
add
cmp
xchg
add
add
pop
clc
sub
clc
cmpsb
clc
pmuludq
push
add
adc
add
add
jae
add
cmp
fwait
ss
add
clc
scas
test
add
sbb
sub
add
xor
add
push
add
dec
mov
xchg
pop
sbb
clc
in
loop
scas
pop
xchg
add
loop
mov
fsubl
add
sbb
inc
add
xchg
jp
add
add
or
jp,pn
add
mov
movsl
clc
cmpsl
clc
and
add
scas
mov
add
mov
cwtl
dec
movsl
clc
inc
add
xlat
jecxz
fdivr
in
mov
add
ficoml
add
push
add
xchg
imul
add
repz
sbb
add
scas
sub
nop
jecxz
push
add
cmp
add
push
add
iret
mov
outsl
push
clc
cld
es
shll
aaa
cmp
clc
xor
add
add
add
lock
clc
push
clc
dec
adc
or
repz
jle
xchg
jmp
popf
mov
leave
shrl
mov
push
add
pushf
notl
mov
popf
mov
lcall
push
clc
stc
adc
add
cmp
clc
adc
clc
data16
shll
add
out
daa
clc
jecxz
xchg
adc
clc
jl
clc
xor
add
sub
or
add
add
add
add
popa
add
add
add
clc
fcompl
test
lahf
inc
clc
xor
add
xor
add
repnz
jnp
add
sar
jmp
aad
clc
popf
sub
clc
cltd
hlt
insl
adc
add
fsubs
add
pop
mov
mov
roll
push
iret
and
add
xchg
xor
add
clc
add
add
clc
out
ds
ret
clc
add
add
clc
lea
add
out
sbb
clc
mov
sbb
cmp
pop
or
out
cmpsl
clc
xchg
rorl
jae
add
loopne
pop
cmp
leave
loopne
daa
clc
pop
test
mov
add
push
add
xor
add
add
pop
in
cmpsb
clc
mov
cmc
cmp
clc
xor
add
add
clc
ret
clc
mov
add
test
jge
stc
mov
inc
add
xchg
dec
push
test
mov
mul
clc
xchg
pop
ds
add
clc
sbb
sbb
mov
add
adc
pop
clc
pop
xor
add
mov
add
pop
mov
add
mov
add
insb
es
push
lcall
cmp
es
pop
pop
mov
mov
add
add
cmp
add
pushf
or
inc
clc
out
lret
aas
enter
add
xabort
lcall
call
mov
adc
add
pop
outsl
cmp
clc
push
mov
cmp
add
mov
dec
jmp
cmp
out
add
add
popf
jnp
add
mov
clc
mov
and
sub
cmp
add
add
lea
ficompl
add
sub
xchg
sbb
push
add
in
fstpl
mov
stos
xchg
mov
cmp
add
fstpl
mov
add
sub
xchg
aad
stos
cli
xchg
mov
clc
mov
xchg
jns
pop
cmp
clc
cmp
and
mov
adc
add
dec
dec
mov
hlt
push
outsl
test
enter
clc
scas
sub
push
sub
clc
fildl
arpl
add
and
add
add
xor
add
sub
sbb
out
sbb
repz
add
jns
push
xor
add
clc
push
mov
add
jmp
pop
or
call
clc
fstpl
popf
cwtl
sbb
in
or
insb
shrl
clc
jnp
sub
xchg
hlt
sbb
cmp
clc
cltd
cmpsb
clc
scas
xor
mov
lods
insb
xabort
add
sub
cmp
add
imul
clc
mov
in
je
clc
divb
add
xchg
or
xchg
push
add
inc
add
lret
repz
dec
sub
pop
leave
cmp
add
pop
mov
jp
add
int
and
add
clc
popl
cmp
adc
adc
add
add
ja
xchg
jne
xabort
clc
js
jge
clc
test
sar
push
cmp
add
add
sub
cmpsb
clc
popf
inc
clc
pusha
add
imul
scas
dec
fildll
clc
fiaddl
popf
inc
add
push
int
aas
xchg
pop
inc
add
jecxz
or
in
repz
push
clc
cmp
add
clc
int
jl
imul
pushf
jle
in
mov
clc
dec
out
jae
add
clc
add
add
imul
test
xchg
xchg
leave
cltd
repz
stc
sar
adc
add
clc
mov
test
scas
sub
add
mov
adc
add
arpl
add
mov
fildll
xchg
jae
add
stc
gs
mov
clc
xchg
add
push
inc
clc
inc
add
sub
pop
lock
hlt
es
aaa
fcmovb
clc
xchg
movsl
clc
in
sbb
add
add
iret
adc
add
clc
push
jno
add
mov
xchg
xabort
nop
lock
xchg
stos
aam
add
add
jecxz,pn
push
add
sub
sbb
clc
pop
ficoms
push
daa
clc
jns
clc
mov
popa
add
outsl
mov
sar
clc
pop
clc
mov
mov
popf
bound
add
ret
jecxz
in
inc
add
shrl
and
add
arpl
add
pop
push
cmp
mov
dec
lods
mov
add
icebp
leave
xchg
xchg
add
add
mov
lods
enter
add
mov
shrl
lahf
rcll
add
sahf
inc
add
movsb
clc
pop
cmp
clc
inc
clc
jp
sbb
adc
clc
ret
sbb
add
mov
sahf
nop
add
add
add
in
sar
xchg
dec
adc
pop
cli
xchg
mov
mov
or
add
jne
lret
add
add
aad
mov
out
dec
mov
in
mov
clc
nop
mov
aam
clc
cmc
neg
hlt
vmulps
cld
mov
data16
mov
add
dec
je
scas
sub
cmc
popa
add
mov
adc
add
add
and
in
xlat
mov
xchg
popf
sbb
add
popf
inc
clc
mov
push
or
add
inc
add
out
adc
outsl
je
clc
test
loop
out
ret
clc
xor
mov
clc
shll
add
std
punpckhdq
jns
add
add
pop
sbb
fsubr
cmp
jg
clc
daa
clc
sbb
fmuls
add
mov
fwait
inc
clc
jb
add
sub
pop
clc
ds
clc
cmp
mov
push
add
sub
clc
mov
clc
cmc
adc
add
inc
add
into
adc
push
xor
add
imul
adc
add
clc
out
cwtl
sarb
add
xchg
pop
cmp
jo
add
fidivrl
and
add
loope
je
mov
addr16
xchg
loop
mov
add
xchg
enter
inc
add
das
inc
clc
sub
mov
mov
add
mov
mov
clc
ds
mov
pop
adc
add
add
mov
add
add
push
clc
dec
and
add
add
add
add
mov
jae
add
jge
fisubs
dec
xchg
fdivrs
adc
add
aad
repnz
mov
clc
add
add
movsb
clc
adc
add
gs
cmp
sub
mov
insb
pop
clc
fisubs
clc
out
roll
add
cmp
arpl
add
clc
dec
hlt
mov
clc
mov
cld
sub
xabort
add
adc
add
add
add
inc
clc
xor
add
into
and
mov
cltd
mov
add
fistpl
mov
add
enter
clc
nop
lahf
inc
clc
out
cltd
inc
clc
fdivl
call
mov
clc
xbegin
xchg
jmp
sub
add
stos
mov
faddl
cmp
mov
stc
fisttpl
push
mov
add
in
ljmp
sarl
int3
aas
inc
clc
cmp
add
lods
cwtl
xor
add
inc
clc
jg
adc
sub
xor
lea
ss
adc
add
push
arpl
add
fsts
push
pop
sbb
clc
ret
clc
call
fldenv
push
cmp
cmc
and
dec
mov
jbe
add
fists
mov
ja
clc
xchg
cmp
add
add
test
addr16
pop
push
cmp
pop
and
add
add
mov
out
or
jbe
add
sti
adc
add
adc
add
clc
in
fld
clc
in
fcomi
imul
add
push
or
sbb
dec
loope
push
add
lea
add
add
add
sbb
mov
sarb
clc
push
add
add
jb
add
clc
inc
add
dec
addr16
cmp
sbb
xabort
and
jl
mov
fisttpll
pop
sar
lea
add
pop
xor
add
jo
add
and
add
test
xlat
jp
mov
add
jp
add
adc
add
mov
inc
clc
mov
jl
clc
fsubr
sub
add
or
clc
into
jmp
mov
add
add
add
addr16
test
fwait
push
adc
add
add
or
add
stos
mov
in
out
add
add
clc
adc
add
pusha
add
sub
add
add
add
popf
and
add
dec
out
in
push
adc
lock
pop
mov
enter
leave
jbe
bound
add
add
dec
xor
pusha
add
cmp
mov
clc
cmp
mov
clc
lock
addr16
outsl
mov
or
add
pop
call
sub
sar
add
xor
add
lahf
add
add
add
add
xchg
or
push
cmp
add
lcall
add
pcmpeqd
jo
add
xchg
or
clc
pop
xchg
xchg
or
repz
fstps
pop
inc
add
cmp
in
sub
add
push
add
push
arpl
add
clc
mov
clc
jg
clc
mov
mov
clc
inc
add
jmp
int3
cmpsb
clc
fisttps
xor
add
shlb
sub
mov
jmp
add
addr16
aas
cmp
and
add
sbb
adc
cmp
jle
push
clc
shlb
add
or
stos
pop
clc
loopne
clc
into
mov
clc
fdivl
call
adc
add
sbb
clc
sar
mov
inc
clc
mov
add
push
add
insb
jecxz
push
or
popa
add
insl
jbe
clc
cmpsl
clc
cmpsl
clc
stos
jo
add
add
pop
cmpsb
clc
stos
or
add
out
loope
mov
mov
ret
clc
cltd
sbb
add
or
xchg
mov
mov
xchg
push
add
mov
jecxz
jmp
fadds
add
sbb
clc
mov
cmp
jne
add
ret
clc
cmpsl
clc
sub
sbb
mov
clc
ret
clc
inc
add
and
out
test
push
add
cld
lahf
mov
dec
in
fdivr
test
push
cmp
dec
sub
xor
add
and
add
mov
xchg
insb
mov
cmp
out
pop
sub
pop
mov
clc
jp
fs
jno
add
add
lret
add
pusha
add
pop
push
sub
insl
xor
add
je
add
pop
add
add
adc
add
clc
sbb
loop
call
xor
add
xchg
dec
or
add
ficoml
lahf
inc
add
fidivrs
add
mov
lods
ds
mov
dec
or
cmp
mov
mov
add
cmp
jl
or
add
jnp
and
add
or
in
aas
mov
and
add
leave
ljmp
clc
push
shll
add
ds
movups
add
jbe
call
or
in
rolb
sar
xor
pop
xchg
mov
clc
xchg
adc
add
out
and
add
add
sub
stos
out
xchg
mov
hlt
std
and
add
add
daa
clc
and
xchg
pop
das
adc
ds
sub
sti
daa
clc
cmpsb
clc
loope
or
pusha
add
xbegin
push
add
je
clc
mov
xor
scas
mov
clc
and
add
mov
dec
sub
shlb
add
add
out
pushf
cmc
or
add
pop
out
fwait
inc
clc
mov
clc
sar
mov
inc
clc
lcall
add
pop
clc
out
jo
add
clc
stos
int
clc
fsubs
clc
xchg
mov
adc
add
add
cmp
xchg
cltd
push
jle
mov
clc
out
push
fwait
in
ret
clc
sub
fcomps
clc
mov
imul
or
add
fsub
clc
xchg
sub
icebp
mov
add
jo
add
and
add
fistpll
shrl
loopne
mov
add
and
xor
or
adc
mov
add
cmp
pop
jae
add
rcl
push
add
add
add
add
push
cmp
inc
add
daa
clc
push
add
push
lret
fadds
dec
bound
add
dec
stos
jge
add
mul
clc
das
imul
add
lcall
push
clc
inc
clc
movsb
clc
repnz
add
test
mov
push
out
mov
add
add
xchg
cs
add
and
add
clc
jne
add
add
add
mov
pop
xor
add
js
add
test
jb
add
clc
int
clc
lret
add
pusha
add
and
add
mov
shlb
sub
push
add
push
lea
and
xor
add
clc
clc
xabort
jle
mov
and
add
enter
in
xchg
and
add
clc
xchg
pop
clc
mov
sub
cmp
inc
clc
xchg
xlat
lea
aam
sysexit
and
add
clc
pop
sub
clc
inc
add
call
mov
add
sub
add
dec
outsl
adc
add
add
popf
pop
out
adc
add
int
mov
clc
jo
add
imul
in
inc
add
cmpsb
clc
jg
add
sahf
shlb
add
out
arpl
add
clc
cmpsb
clc
aad
ljmp
add
out
push
clc
adc
add
addr16
cld
mov
xor
add
add
sub
push
clc
mov
sar
add
add
add
and
add
add
add
clc
int
arpl
add
add
jp
cmp
clc
pushf
and
add
ss
sub
clc
dec
xchg
js
clc
jo
add
aam
stc
sub
mov
clc
test
push
insb
mov
and
add
cld
ss
xor
add
pop
cmpsl
clc
gs
decb
popf
daa
clc
in
cmp
fwait
test
mov
add
cmc
sar
mov
mov
inc
add
cmc
xlat
jae
add
clc
stos
xor
cmp
add
mov
int3
and
ret
add
xlat
add
add
dec
push
add
dec
pop
adc
add
cli
xchg
cmp
add
cs
insb
cwtl
jecxz
mov
neg
sbb
add
inc
clc
sar
clc
and
call
jmp
iret
push
clc
mov
je
add
mov
mov
imul
dec
push
jp
shlb
add
stos
mov
sbb
mov
jo
add
cs
cmp
ss
cmp
mov
leave
jnp
movsl
clc
cmpsl
clc
fdivp
test
stos
inc
add
rcr
xchg
jge
movsb
clc
fwait
je
or
lcall
add
stos
std
mov
sti
lret
pop
into
push
mov
or
push
mov
sahf
daa
clc
lods
lret
nop
fwait
movsl
clc
nop
nop
push
out
cmp
vmovups
add
push
add
sar
stos
pop
int
fcoms
stos
or
clc
adc
adc
add
add
mov
clc
cmp
inc
clc
fists
add
clc
sub
dec
das
int3
test
insl
pop
stos
add
add
lret
pop
int
aam
add
gs
mov
loope
sub
add
add
and
mov
inc
add
lods
xchg
push
add
add
clc
loopne
ja
cs
in
adc
xchg
scas
mov
fs
inc
add
mov
add
clc
lret
mov
add
iret
adc
pop
loopne
mov
aas
imul
imul
add
add
testl
clc
fsubs
add
mov
add
das
xchg
and
add
clc
pop
rclb
clc
or
add
jb
add
mov
mov
das
out
mov
clc
ja
rorb
hlt
adc
add
inc
add
mov
ljmp
aad
jp
push
insl
adc
dec
rcrb
clc
push
add
add
dec
sahf
jbe
clc
xchg
daa
clc
cmp
jnp
mulb
jmp
das
mov
clc
inc
add
sub
clc
test
mov
dec
fiadds
add
ficoml
dec
adc
add
cmpsb
clc
jnp
jecxz
jb
add
clc
psadbw
xlat
test
push
mov
mov
mov
sahf
lods
ffree
clc
inc
clc
cmp
clc
stos
insb
mov
add
dec
imul
add
jb
add
add
clc
in
mov
call
add
clc
xor
add
clc
sub
test
add
clc
outsl
test
clc
jmp
add
clc
sbb
mov
and
add
add
add
sbb
clc
data16
jae
add
jmp
data16
sti
mov
test
xor
add
add
xchg
in
lcall
das
sub
clc
add
add
clc
lcall
bound
add
aad
clc
mov
add
clc
cmc
push
cmp
dec
insb
dec
clc
mov
cmp
xor
add
test
push
popa
add
sub
jmp
nop
idivl
scas
push
add
jo
add
into
xor
add
clc
lods
ljmp
add
cmp
popl
add
jle
clc
xabort
clc
clc
xchg
sar
pop
lods
cltd
mov
inc
clc
jmp
clc
adc
add
jb
add
pushf
nop
xabort
push
add
je
pop
aam
add
fs
cmp
clc
sub
add
fs
fnstcw
pop
and
or
add
dec
push
call
add
xabort
clc
arpl
add
gs
xchg
out
push
xchg
in
mov
pop
repnz
add
testl
and
add
addr16
adc
mov
add
hlt
pop
aas
mov
add
push
add
stos
fimull
sbb
aad
clc
jne
clc
in
and
add
aad
arpl
add
add
stos
pop
jnp
add
dec
sub
clc
sar
sar
inc
add
mov
add
mov
add
pop
in
test
and
repz
add
add
clc
push
clc
lcall
clc
loopne
out
mov
xchg
fs
mov
clc
out
push
add
sub
push
outsl
lret
stc
jmp
clc
aaa
outsb
aas
sbb
cmpsb
clc
jae
add
test
xabort
clc
dec
ret
clc
out
stc
in
cmp
int
clc
push
add
jecxz
fcmovu
adc
add
ds
mov
mov
clc
fs
xchg
adc
add
shrb
clc
mov
push
add
cltd
fstps
clc
arpl
add
clc
cmp
mov
clc
pop
rcll
lret
push
add
mov
pop
insl
mov
add
pop
clc
push
add
sbb
xchg
cs
jmp
jo
add
nop
pop
pop
kortestw
pop
ljmp
clc
enter
add
xchg
inc
clc
js
jmp
call
enter
call
add
ja
sar
add
mov
mov
int
bound
add
xor
add
das
inc
add
lahf
mov
clc
mov
inc
add
mov
jo
add
add
add
das
pop
xor
fwait
imul
sub
mov
inc
add
dec
bound
add
clc
mov
enter
mov
insb
rolb
add
movsb
clc
and
add
clc
jnp
ja
sti
fldt
add
or
insb
jle
cmp
add
pushf
pop
and
add
cmp
add
int
pop
or
fidivl
add
sbb
aam
cmp
add
jns
test
mov
xchg
rolb
clc
shl
clc
add
add
pop
xor
add
add
mov
std
movsb
clc
push
jb
add
mov
imulb
mov
push
lcall
push
jnp
jecxz
test
mov
clc
jo
add
add
out
lock
clc
inc
add
aaa
mov
add
test
clc
xchg
pop
push
adc
push
insl
lock
aad
std
bound
add
clc
xchg
inc
clc
cwtl
or
mov
test
push
inc
add
xor
int
add
bound
add
popa
add
cmp
jne
stos
or
jo
add
out
push
pop
sub
jb
add
xbegin
add
gs
mov
add
dec
in
add
or
add
pop
dec
loopne
cmp
add
inc
add
rcr
incb
add
daa
clc
sub
or
lcall
sub
aaa
mov
jbe
clc
inc
add
sahf
aas
aaa
push
clc
xlat
pop
jg
clc
inc
clc
sbb
add
xbegin
or
add
test
call
mov
add
xchg
dec
cmp
imul
push
pop
clc
inc
clc
cmp
clc
insl
adc
clc
sar
fwait
cld
stos
xchg
out
sub
fdivl
add
sbb
clc
sbb
sub
int
add
and
es
out
aaa
pusha
add
loope
mov
add
jns
cmp
xor
add
rcl
out
dec
xlat
sub
lahf
adc
add
mov
mov
sub
add
ja
addr16
ret
clc
outsl
mov
add
test
lret
adc
inc
clc
mov
and
add
pop
mov
jns
clc
and
add
ljmp
clc
push
movsb
clc
push
add
int3
in
sub
popa
add
push
test
clc
fldt
call
push
mov
pop
clc
mov
clc
pop
push
popa
add
cmp
push
add
outsb
push
add
rcrb
or
sbb
add
add
sar
push
sub
push
call
jno
add
add
and
add
mov
push
add
xor
add
clc
dec
std
aaa
mov
int
clc
sub
clc
insl
mov
clc
sub
add
push
or
dec
xor
add
mov
sbb
clc
mov
clc
scas
out
test
iret
or
push
testb
gs
roll
in
cld
push
add
scas
aaa
or
add
jnp
clc
pushf
je
add
jnp
movsb
clc
aaa
pop
shl
clc
xchg
push
shrb
movsl
clc
lahf
shlb
add
lcall
add
clc
ret
push
clc
xor
add
add
mov
mov
outsb
cmpsl
clc
jmp
add
xchg
mov
cld
mov
push
clc
loope
jle
clc
mov
clc
sar
dec
sahf
test
in
xchg
pushf
fmuls
ret
add
jecxz
mov
clc
mov
clc
test
jp
push
vminps
add
loop
fisubrs
clc
and
mov
loope
aas
cltd
mov
push
add
je
cwtl
dec
push
add
add
add
ret
std
mov
pop
clc
pop
cmp
clc
xchg
inc
clc
mov
mov
cmp
add
sub
cli
mov
mov
clc
ljmp
or
lcall
mov
iret
mov
mov
add
add
pop
daa
clc
popf
pop
pop
movsl
clc
push
clc
leave
fisubs
add
test
stos
outsl
sbb
clc
sbb
fdivr
push
add
outsb
ret
add
cmc
dec
addr16
arpl
add
add
push
es
stc
pop
fisttpll
mov
sbb
or
scas
ret
clc
cvtpi2ps
add
roll
mov
in
cmp
clc
cmp
clc
push
idivl
call
add
add
fs
inc
add
jle
inc
clc
xchg
xchg
lret
into
xor
add
clc
pop
xchg
sahf
and
add
aad
fidivrl
clc
mov
movsb
clc
cmp
add
cmp
dec
xor
cmp
addr16
fbld
add
clc
in
sar
push
or
add
nop
aas
xor
pusha
add
mov
movsl
clc
mov
clc
outsb
cltd
outsb
es
xor
push
fbstp
add
push
arpl
add
add
clc
repnz
inc
add
adc
add
add
rol
clc
and
add
clc
cmp
movsb
clc
sub
xchg
mov
sbb
add
push
adc
add
in
in
lods
pop
clc
mov
or
imul
mov
jl
sub
clc
xor
add
xabort
inc
add
pop
sub
add
adc
xor
add
popf
mov
shlb
add
fiadds
add
sti
xchg
stos
inc
add
ficoms
loope
xchg
into
aad
fs
inc
add
mov
add
imul
loopne
sar
sar
nop
or
dec
dec
mov
mov
mov
clc
inc
add
icebp
inc
add
fs
pop
pop
sbb
pop
or
add
lock
clc
pop
adc
add
xor
add
add
inc
clc
adc
add
add
jmp
add
adc
xchg
std
in
and
movsb
clc
clc
adc
clc
push
hlt
cld
xor
clc
movsb
clc
pushf
mov
clc
inc
clc
adc
jp,pt
clc
pop
call
dec
mov
int
add
add
adc
das
inc
add
in
push
add
add
add
fstl
scas
push
add
sbb
xor
clc
inc
clc
xor
add
es
cmpsl
clc
ss
clc
jp
adc
sub
cmp
cmp
rcl
jg
rcl
xchg
imul
imul
clc
mov
xor
clc
pop
stos
sbb
xor
add
clc
pop
clc
inc
clc
nop
rcrl
data16
cmp
inc
clc
push
add
and
add
jmp
out
fwait
sub
add
xchg
push
xchg
and
add
sbb
add
inc
add
inc
clc
mov
cmpsl
clc
out
enter
add
add
sar
adc
add
inc
clc
ret
clc
push
add
pop
movsb
clc
xor
add
mov
xor
pop
add
add
cmp
add
sbb
clc
mov
or
add
std
xchg
hlt
and
lods
decb
or
notl
add
lahf
inc
clc
mov
pop
fiadds
push
fs
jge
mov
mov
mov
sub
pop
sbb
clc
das
pminub
add
mov
and
add
add
add
subps
testb
clc
loopne
insl
push
clc
push
add
test
mov
xchg
mov
add
xlat
ljmp
hlt
mov
clc
push
mov
cmp
pop
cli
push
call
sub
xchg
lret
ret
clc
xchg
push
cmp
clc
cwtl
and
rorl
mov
clc
pusha
add
fwait
aas
sbb
clc
out
jno
add
lcall
jp
cmp
add
scas
pop
daa
clc
mov
xchg
xchg
pop
pop
dec
mov
stc
pop
ret
das
mov
add
fildl
add
sbb
sbb
sbb
clc
loopne
call
bound
add
add
dec
add
add
jecxz
and
add
push
inc
add
xor
add
adc
add
fsubrs
clc
sub
add
xor
dec
xchg
adc
add
sar
pop
jge
inc
clc
psubsb
add
cmpsb
clc
ret
clc
push
imul
mov
inc
clc
dec
and
mov
clc
in
loopne
sar
adc
add
adc
add
clc
das
imul
sbb
push
pop
das
incb
add
mov
mov
dec
sbb
clc
push
add
jno
add
int
imul
mov
clc
icebp
scas
sbb
in
cld
sar
out
mov
or
add
lock
push
dec
and
loope
in
imul
add
mov
add
dec
test
lret
xlat
sub
clc
sub
clc
or
dec
xabort
or
nop
mov
out
cld
fwait
push
add
mov
cmp
add
add
add
mov
bound
add
xchg
je
xchg
shrb
ja
jno
add
xor
add
add
out
pop
jle
add
sub
jmp
add
xbegin
clc
cli
xabort
xor
add
mov
cmp
push
fstps
push
adc
add
es
testl
jbe
loopne
push
into
out
push
add
push
clc
mov
cmpsl
clc
and
add
inc
add
loop
sar
ljmp
ret
clc
inc
add
mov
or
mov
sahf
into
cli
sti
jmp
dec
mov
adc
bound
add
mov
inc
add
xor
add
dec
push
jae
add
pushf
data16
imul
imul
lcall
clc
mov
clc
sub
sbb
cmp
enter
ficompl
adc
add
mov
clc
in
loopne
das
ds
xbegin
xchg
or
add
pop
repnz
out
pop
and
add
stos
pop
adc
add
movsl
clc
mov
add
dec
pop
xlat
mov
cmp
jae
add
das
cmp
and
add
add
ret
clc
arpl
add
jp
clc
adc
add
sub
xlat
inc
add
int3
addr16
clc
add
add
mov
xor
add
clc
or
es
sqrtps
add
add
inc
clc
jmp
xchg
sub
repnz
clc
fisttpl
mov
je
pop
ja
clc
jns
fistpll
mul
clc
xor
sar
neg
add
pop
clc
jge
xor
and
push
clc
sub
ret
add
jge
add
or
mov
xor
add
clc
test
loop
in
add
add
add
mov
or
cmp
icebp
xor
add
out
pusha
add
jle
icebp
mov
clc
fs
cwtl
clc
jge
clc
fisttpl
clc
lods
outsb
not
outsl
cmp
clc
ficomps
push
into
or
clc
das
add
std
mov
add
push
sbb
fpatan
sahf
adc
add
cwtl
cmp
clc
es
push
sbb
into
fsubrl
mov
clc
divl
add
xchg
cmpsl
clc
scas
lret
vxorps
jmp
and
clc
jno
add
add
mov
nop
xor
add
sbb
or
mov
lret
std
mov
add
push
dec
sub
sub
dec
add
add
clc
jmp
push
add
push
in
outsl
aaa
cmp
mov
pop
test
add
gs
sub
clc
lock
imul
add
jp
dec
fidivl
ficomps
jg
ret
add
add
push
add
ds
add
enter
clc
lahf
ja
clc
das
out
sahf
xchg
jp
jp
jmp
add
sbb
in
into
inc
add
cmp
fmuls
add
add
insb
xchg
inc
add
jae
add
cmp
ret
clc
out
jmp
pop
cli
int3
inc
clc
push
add
out
dec
movsl
clc
inc
add
cwtl
and
add
xchg
out
sub
mov
in
sahf
stos
cmp
clc
mov
pop
clc
adc
add
xchg
loope
jmp
add
add
sbb
negb
adc
add
mov
inc
clc
xabort
sti
cltd
sbb
xor
add
cld
int3
mov
mov
call
add
bound
add
add
mov
and
add
pop
sar
insb
dec
adc
add
push
addr16
dec
sbb
test
xbegin
add
mov
xchg
push
cmp
sbb
add
stc
mov
add
dec
mov
fs
inc
add
out
inc
clc
popa
add
jae
add
fmulp
jmp
add
sbb
add
dec
mov
addr16
cmpsl
clc
cltd
fwait
insb
dec
frstor
add
mov
fistl
xchg
into
cmp
aas
lahf
inc
add
mov
add
add
iret
pop
dec
loop
ffreep
clc
pop
inc
clc
dec
sar
stos
mov
mov
clc
and
add
xchg
movsl
clc
jecxz
ficoml
add
mov
add
out
lods
jg
fs
and
add
mov
or
repnz
aaa
je
clc
sar
clc
cmp
hlt
or
data16
sar
ljmp
cmp
clc
lahf
int
clc
dec
stc
mov
dec
jb
add
clc
xchg
or
add
lods
pusha
add
push
add
cld
add
and
add
clc
aad
add
xor
add
dec
jl
jb
add
clc
pushf
rorl
cmpsl
clc
mov
clc
int
sub
jno
add
sub
cmp
add
je
jb
add
popf
aaa
stc
mov
je
popf
jo
add
sar
popa
add
jb
add
mov
out
rcl
jns
push
add
mov
jg
mov
mov
add
rcr
popa
add
mov
clc
pop
pop
clc
push
jnp
clc
xor
mov
mov
cmp
inc
clc
push
clc
xor
add
xor
add
addr16
cli
es
mov
pusha
add
fwait
cmp
xor
add
loope
dec
push
add
add
add
pushf
cld
sub
fwait
cltd
dec
cmp
xor
add
clc
loope
add
add
test
jl
sbb
add
fbld
inc
add
xabort
scas
cwtl
push
push
clc
movsl
clc
vcomiss
adc
add
vmovntps
nop
std
push
pushf
pop
jno
add
std
sbb
clc
dec
push
fcompl
sar
jp
mov
pushf
xchg
dec
push
clc
cwtl
aad
in
sar
push
add
xchg
sub
or
add
inc
clc
xor
add
and
xor
adc
add
fnsave
clc
cld
in
sbb
clc
push
add
adc
clc
data16
sub
inc
add
xchg
xor
clc
movsl
clc
jb
add
cmpsl
clc
fisttps
movsl
clc
aam
clc
mov
mov
add
sti
pop
and
inc
add
push
add
clc
mov
loopne
std
test
iret
mov
mov
ret
clc
xor
xchg
push
clc
mov
push
pop
lods
data16
pop
xchg
or
and
add
jne
add
add
and
and
add
mov
clc
stos
sti
pop
mov
outsl
in
out
sarb
add
sub
clc
bound
add
dec
in
xchg
xor
clc
xor
add
ja
pop
xchg
and
ljmp
add
iret
mov
add
sub
sbb
add
xchg
sbb
clc
out
loope
sub
bound
add
clc
sahf
push
mov
push
add
ret
and
add
add
mov
shlb
add
push
and
add
clc
test
dec
push
cmp
pop
or
add
sbb
repnz
jecxz
push
add
push
add
mov
cwtl
dec
push
add
mov
add
pushf
push
push
pop
xor
add
loop
aam
push
pop
xor
add
loopne
adc
add
add
jp
add
or
xabort
sahf
movsb
clc
cmp
add
clc
mov
add
jmp
movsb
clc
pop
test
add
cmpsb
clc
fcoml
add
mov
inc
add
jbe
movsb
clc
cltd
clc
sar
test
sbb
adc
add
mov
sar
fsubs
clc
aad
clc
and
sbb
clc
push
clc
sti
jae
add
pop
pop
dec
xbegin
lret
aas
pop
clc
arpl
add
in
iret
cmp
mov
clc
xor
add
push
cmp
or
cmpsl
clc
out
in
xchg
cmp
clc
adc
add
sub
aas
add
add
sbb
add
mov
add
jo
add
push
mov
xor
add
aas
xchg
cmp
cmp
clc
ret
dec
sbb
aad
clc
cmp
jbe
mov
mov
clc
jb
add
aam
push
mov
mov
repz
mov
add
jns
clc
jne
jno
add
mov
push
clc
sbb
pushf
inc
clc
adc
add
hlt
adc
add
push
aas
into
stc
iret
pop
clc
push
mov
clc
ret
clc
loop
hlt
jle
addr16
or
cmp
lret
rorb
dec
sti
mov
repz
outsl
lahf
inc
add
sar
push
add
jne
lcall
rcll
clc
push
repnz
clc
and
insl
enter
mov
mov
clc
inc
add
mov
clc
fistps
pop
scas
push
insb
inc
clc
add
add
clc
aaa
arpl
add
jno
add
add
inc
add
sbb
out
mov
sub
addr16
and
add
add
dec
cmp
or
mov
clc
push
mov
aaa
leave
mov
call
sub
dec
push
and
lret
add
add
pop
jae
add
add
add
inc
add
unpcklps
and
add
add
pop
je
cwtl
inc
add
addr16
xchg
sahf
mov
clc
adc
add
add
add
adc
repz
clc
incb
repnz
add
clc
inc
clc
sbb
add
clc
and
add
add
test
data16
jno
add
add
jbe
dec
mov
clc
cmpsl
clc
adc
aaa
sub
and
ljmp
clc
into
loope
bound
add
cld
jns
outsb
insl
call
inc
clc
in
fildl
test
cld
jg
clc
icebp
dec
sub
add
add
int3
jge
movsl
clc
mov
fnstcw
xor
add
pop
das
push
faddp
clc
test
cli
fisubl
jmp
add
fs
jge
cli
gs
inc
add
xor
add
fdivl
sub
add
sar
cmp
int3
mov
stos
inc
clc
cli
lret
lret
mov
outsb
mov
or
cmp
dec
testb
add
arpl
add
clc
add
add
stos
inc
clc
sti
loope
or
mov
pop
sbb
adc
add
addr16
xor
jo
add
mov
add
cmp
cmpsl
clc
test
sbb
cmp
je
adc
add
mov
clc
pushf
cs
jnp
mov
fiadds
add
add
dec
xbegin
add
lods
repz
sar
clc
jg
in
mov
mulb
clc
mov
add
pop
mov
clc
das
shrl
adc
add
jo
add
lahf
and
add
clc
sub
inc
clc
dec
jg
xabort
outsl
dec
into
out
lahf
mov
aaa
data16
push
add
mov
add
pusha
add
or
or
ret
out
in
fsubl
mov
adc
clc
negb
sub
inc
clc
mov
fcoms
fisttpl
lock
jp
outsl
and
add
gs
pop
xor
add
mov
sub
add
mov
add
clc
xor
sar
fistps
add
addr16
fcom
nop
faddp
clc
jg
add
xchg
fistps
sub
xor
add
clc
aas
inc
clc
fstps
sub
daa
clc
lahf
adc
add
add
loop
sbb
je
clc
jnp
sub
or
xor
add
push
add
xor
sti
mov
repz
clc
adc
icebp
inc
clc
xchg
add
clc
sar
pop
add
add
mov
push
add
fisubrs
clc
xchg
sti
dec
sbb
clc
jp
rcll
add
out
int3
pushf
out
pusha
add
cmp
dec
xlat
push
clc
cmovle
loope
ret
add
cmp
xbegin
dec
loop
aam
jb
add
add
mov
and
add
clc
sub
add
add
add
scas
fsts
mov
inc
clc
ds
in
test
adc
add
addr16
push
loope
repnz
add
push
cwtl
xchg
mov
nop
xchg
jg
push
add
loopne
push
add
out
dec
push
add
es
aam
and
fdivrs
clc
and
outsb
mov
shlb
add
outsb
xbegin
clc
adc
add
clc
adc
add
add
pop
stos
and
xchg
rcrb
clc
repnz
cltd
test
mov
mulps
jnp
notl
inc
add
mov
icebp
cli
push
pop
aam
fs
test
cmp
add
movsl
clc
jg
and
add
lea
xchg
push
add
cmc
roll
std
mov
add
popa
add
out
and
adc
fsubrl
bound
add
inc
add
xor
add
in
sar
clc
pusha
add
and
mov
dec
nop
in
in
inc
add
popf
mov
dec
fnsave
mov
clc
arpl
add
sub
add
jle
pop
dec
xor
lea
lods
dec
xor
add
test
ljmp
fimuls
clc
inc
add
lahf
insb
decl
stos
and
add
lods
popf
mov
inc
add
lret
loopne
lea
cmp
clc
add
add
add
cmp
push
sbb
xlat
aad
push
rorb
xchg
adc
add
add
cmp
jns
sbb
pop
add
add
inc
add
sub
mov
inc
clc
mov
clc
loop
inc
add
lret
push
cmp
inc
clc
inc
clc
lret
xchg
jmp
sub
out
pop
aam
loop
jg
fwait
inc
clc
add
add
clc
mov
movsb
clc
and
fs
mov
loopne
and
mov
cli
add
add
clc
out
mov
lods
inc
clc
sarb
or
add
mov
repnz
add
push
add
fs
or
popf
and
add
add
jmp
inc
clc
std
dec
mov
add
push
add
out
into
jb
add
push
jge
mov
lea
add
xchg
cmp
roll
add
and
fidivs
mov
cmp
and
add
mov
clc
add
add
int
sbb
clc
pop
fwait
call
cmp
sub
adc
add
or
std
mov
enter
cmpsb
clc
inc
clc
cmp
sahf
adc
add
clc
add
jecxz
mov
clc
ret
aas
lock
xchg
mov
add
clc
and
add
cmc
xor
add
add
movsb
clc
int3
xchg
aaa
xbegin
add
push
add
jg
das
xchg
cmpsb
clc
aad
add
mov
jle
pusha
add
add
clc
mov
mov
add
fwait
lods
data16
data16
es
inc
clc
outsl
repnz
clc
mov
add
sar
lock
sbb
xchg
or
mov
jecxz
mov
sbb
push
add
jg
clc
mov
push
jae
add
fs
sahf
jge
fwait
in
or
cmp
mov
clc
ret
clc
mov
jns
and
add
mov
add
clc
pop
test
and
pop
mov
repnz
clc
out
jne
clc
arpl
add
dec
fcmovne
leave
in
cmp
clc
add
add
lods
test
fstps
cmpsb
clc
aaa
and
add
cmp
add
clc
jg
jae
add
aam
jno
add
clc
mov
add
lret
js
clc
sar
pop
jnp
repz
inc
clc
pop
pop
jp
and
add
jle
cltd
jp
clc
in
xchg
dec
mov
lcall
jl
in
cmp
pop
cmpsl
clc
cmp
clc
scas
jb
add
push
dec
movsl
clc
sar
dec
xabort
xor
mov
data16
mov
clc
add
dec
jne
scas
and
adc
add
imul
insl
sbb
add
sbb
clc
mov
cmp
add
push
lret
push
testb
ret
clc
xor
add
clc
pop
clc
mov
add
inc
add
call
bound
add
xabort
jns
ljmp
pop
inc
clc
cmp
adc
add
add
mov
add
add
jge
add
insb
mov
inc
clc
hlt
mov
pop
mov
clc
mov
sti
or
imul
add
in
lahf
ja
clc
cltd
xor
clc
cli
das
clc
mov
mov
dec
dec
pop
xchg
std
lret
lahf
inc
add
clc
daa
clc
cmp
clc
in
or
add
cmpsl
clc
add
add
cmpsl
clc
cmpsl
clc
mov
xchg
lods
dec
pushf
and
mov
xchg
arpl
add
out
push
add
sub
test
dec
imul
pusha
add
inc
clc
bound
add
cmp
sbb
push
iret
out
sbb
add
mov
mov
pusha
add
cmp
or
jge
clc
inc
clc
jns
clc
in
cs
fcoms
add
or
add
cmc
insb
mov
divb
test
add
and
add
clc
inc
add
lcall
jg
and
add
int3
lods
lret
or
clc
xbegin
clc
addr16
cmp
push
add
and
mov
cmp
add
int3
hlt
fisttps
sbb
mov
xor
add
clc
xor
add
mov
add
pop
push
add
leave
push
add
scas
mov
out
cmp
add
add
into
pop
clc
sbb
add
cld
notl
add
add
cmp
pop
adc
add
ret
clc
dec
mov
mov
gs
jnp
sub
mov
js
jmp
dec
pop
loope
xchg
idivl
out
cmpsl
clc
imul
enter
pushf
lods
popa
add
rorl
inc
clc
xchg
jae
add
mov
dec
and
add
test
jp
sbb
adc
add
sti
jmp
idivl
clc
bound
add
add
outsl
repz
je
add
cmp
jb
add
mov
out
sahf
ljmp
arpl
add
add
clc
xchg
idivb
mov
pop
in
aas
mov
clc
jno
add
xor
add
add
loop
sbb
div
adc
add
add
hlt
int3
cmpsb
clc
int3
xlat
lahf
shl
clc
insb
add
add
inc
clc
pop
daa
clc
sar
add
add
mov
fstpl
xchg
sbb
xlat
or
lods
xor
add
in
sbb
add
adc
add
add
jle
ficoml
xchg
add
add
clc
lahf
mov
test
add
add
add
push
push
hlt
mov
add
add
add
fwait
adc
add
leave
xor
add
inc
add
pop
adc
add
add
mov
test
daa
clc
xor
clc
in
push
pop
clc
jg
imul
add
roll
clc
stos
arpl
add
icebp
mov
clc
pusha
add
or
clc
push
xchg
testb
adc
mov
xor
add
add
sub
cld
iret
nop
and
es
xlat
sbb
mov
inc
add
ljmp
cmp
iret
stos
add
add
out
pop
dec
mov
clc
xor
add
dec
push
push
insl
mov
add
dec
or
xchg
test
lods
jle
add
sti
pop
dec
js
inc
add
in
add
add
in
xchg
mov
add
mov
clc
call
clc
ljmp
mov
add
arpl
add
mov
adc
clc
int
and
push
enter
mov
inc
clc
fisubrs
add
dec
sbb
add
je
add
rorb
lret
and
add
mov
pop
push
lahf
cwtl
or
or
clc
not
and
add
clc
fs
scas
add
add
adc
add
xor
add
out
sar
clc
sarl
rclb
mov
clc
mov
lret
clc
insl
push
add
sbb
mov
jne
rclb
ret
add
data16
movsl
clc
sub
leave
sbb
and
add
add
testb
add
clc
adc
add
sbb
mov
fsubrl
clc
data16
clc
jno
add
inc
add
inc
add
sar
cmc
repnz
sub
push
dec
mov
clc
rorl
add
add
es
fsubrp
sub
add
mov
xor
add
outsb
jo
add
xlat
xabort
clc
mov
inc
clc
xor
popa
add
loop
imul
push
add
out
sub
add
loopne
outsl
scas
xchg
fistps
clc
leave
sar
clc
out
mov
add
mov
add
add
clc
cmp
pop
movsl
clc
pop
clc
bound
add
sahf
sub
clc
sarl
add
mov
clc
cmp
call
adc
fisttps
sahf
into
mov
jle
add
movsb
clc
inc
add
push
pop
fldt
clc
jns
add
arpl
add
stc
xlat
add
add
clc
popa
add
movsl
clc
cmp
add
push
cld
cli
xor
add
add
int
add
xchg
push
add
push
add
adc
add
jno
add
clc
jmp
dec
mov
lea
sbb
cmp
sub
sub
xchg
ss
clc
repz
outsb
jle
int3
pushf
js
xor
add
and
add
add
add
fcoml
add
sbb
xchg
mov
pop
push
add
daa
clc
xchg
std
bound
add
add
mov
pop
mov
clc
pushf
push
add
xor
add
sub
dec
bound
add
sub
sbb
adc
add
outsl
sti
enter
add
out
adc
add
imul
clc
mov
int3
xchg
lcall
clc
adc
add
adc
lods
nop
xchg
sub
add
rcrl
clc
into
cmc
test
add
fadd
clc
push
cmp
sar
or
stc
aad
sar
add
sbb
clc
jnp
jecxz
ja
add
mov
clc
dec
repnz
ljmp
clc
xor
add
clc
ljmp
sbb
cmp
clc
cmp
in
or
int3
mov
lret
movsl
clc
divl
add
int
clc
in
push
sahf
gs
outsb
aas
ds
aam
add
arpl
add
add
stos
push
add
sti
cmp
add
insl
add
add
mov
clc
xchg
xor
mov
add
nop
and
clc
jo
add
nop
xchg
mov
inc
add
inc
clc
and
movsl
clc
xor
add
clc
fsubp
clc
test
clc
or
add
call
adc
add
sbb
clc
arpl
add
movsl
clc
mov
clc
inc
clc
mov
add
fwait
pop
jne
push
clc
mov
add
cmp
add
xor
add
clc
dec
cmpsl
clc
push
shl
mov
adc
add
shl
clc
adc
add
sar
xchg
fwait
push
mov
mov
pop
push
add
addr16
movsb
clc
inc
clc
and
add
clc
stc
popf
popa
add
leave
mov
clc
sahf
push
clc
scas
leave
add
add
decl
xor
add
dec
add
mov
inc
add
lret
cmp
add
mov
add
mov
scas
push
add
rorb
push
add
aad
clc
pop
pop
ret
clc
xchg
cmp
js
clc
lock
add
add
clc
testl
push
sub
clc
cmc
push
lret
dec
cld
xchg
sub
mov
leave
pop
rol
clc
pop
pop
lods
movsl
clc
pusha
add
out
cltd
and
add
das
or
jmp
add
gs
sbb
add
idiv
mov
add
add
add
pop
clc
jne
inc
add
xor
clc
add
add
add
hlt
ljmp
xchg
fisttpl
cmc
cli
sar
das
ss
cmp
clc
mov
mov
clc
cmp
dec
ds
add
stos
jo
add
test
add
mov
test
in
lods
cmp
jne
add
add
mov
xchg
daa
clc
pop
inc
add
cmp
add
add
add
stos
fldcw
out
xor
add
mov
clc
lret
hlt
xabort
clc
aas
idivl
sub
out
ror
adc
add
add
scas
lock
add
shl
cmp
mov
mov
push
clc
xchg
cltd
inc
clc
es
add
add
clc
call
jbe
clc
dec
cmp
clc
pop
xor
add
and
add
lea
dec
ljmp
push
add
adc
add
add
decb
sar
clc
sbb
pop
xor
add
add
jnp
lahf
sbb
push
add
out
mov
clc
std
and
add
popf
aad
add
sahf
adc
cmp
add
jl
add
jmp
loop
stos
jnp
clc
mov
add
hlt
push
cmp
mov
add
pop
push
cmp
mov
xor
add
lahf
popf
repz
add
call
pop
xabort
cmc
outsl
jb
add
add
jnp
lcall
adc
inc
clc
iret
pop
inc
add
sub
clc
jecxz
lods
dec
inc
clc
jnp
loop
bound
add
add
xchg
call
cmp
xbegin
add
mov
sbb
clc
loopne
fidivl
xchg
mov
clc
mov
xchg
inc
clc
mov
add
push
xor
adc
add
clc
mov
clc
clc
pop
pop
inc
clc
pop
shll
movsb
clc
inc
add
icebp
pop
sbb
gs
lret
push
pushf
leave
dec
cmp
scas
cmp
out
mov
clc
adc
add
xlat
rcrl
stc
dec
cmp
add
xchg
ds
add
fbstp
sahf
out
cmp
jns
clc
insb
sbb
repz
mov
mov
add
call
lret
mov
nop
popa
add
nop
sbb
add
add
add
mov
clc
mov
adc
add
loopne
mov
movsb
clc
arpl
add
add
loop
push
add
repz
cli
inc
add
cwtl
cmc
in
add
add
clc
popf
mov
cmp
call
mov
and
add
dec
xchg
mov
movsb
clc
leave
scas
push
test
icebp
jge
adc
clc
mov
gs
mov
clc
pop
fs
adc
add
clc
or
add
adc
clc
jge
and
add
imul
mov
clc
in
push
and
or
add
pop
jns
add
xor
clc
mov
add
add
add
xchg
or
addr16
cmp
jmp
ja
aaa
ja
out
mov
mov
clc
stos
inc
add
sub
mov
sbb
leave
push
adc
or
or
mov
add
stos
movsl
clc
cmp
call
ds
sbb
add
add
add
xlat
popa
add
cwtl
cmp
ss
jns
scas
pop
adc
add
add
clc
mov
clc
outsb
add
add
add
repz
add
add
roll
leave
fsubrp
push
dec
xchg
stos
in
xbegin
fimuls
mov
inc
clc
mov
add
cli
icebp
xor
add
pop
outsl
mov
xchg
xchg
add
add
push
add
mov
clc
sbb
clc
leave
out
loope
adc
add
clc
add
add
add
loop
and
add
add
clc
sub
sub
xbegin
mov
mov
inc
add
dec
mov
sahf
xchg
pop
inc
clc
repz
sti
out
outsl
pop
clc
sbb
fnsave
stos
xor
add
add
and
add
lahf
dec
fstps
pop
bound
add
add
sbb
clc
sbb
clc
stc
inc
clc
mov
fnsave
push
clc
call
add
inc
clc
sbb
cmp
xchg
push
add
sub
or
mov
sahf
out
clc
jle
jmp
clc
ret
clc
sub
add
lea
add
add
clc
adc
add
add
mov
add
call
clc
loop
push
add
popa
add
mov
clc
shrl
mov
int
stos
mov
rcl
repz
add
out
adc
add
inc
add
pusha
add
push
add
imull
add
pop
das
imul
repnz
xor
movsb
clc
shlb
clc
jns
cmp
loope
push
mov
add
add
fs
and
add
push
clc
std
mov
clc
popl
xchg
ret
clc
mov
mov
clc
jecxz
fucomip
cmp
add
lea
add
adc
add
push
jl
clc
xor
es
mov
push
add
pop
fsts
push
add
or
add
sar
movsb
clc
mov
add
xchg
lea
push
add
in
lret
dec
mov
add
inc
add
mov
clc
call
in
dec
test
cmp
clc
push
add
or
add
sbb
test
or
xchg
fmul
or
repz
adc
add
clc
loopne
out
out
ret
clc
adc
add
in
pop
rclb
push
jl
clc
rol
clc
mov
lods
push
dec
ret
insb
and
sar
jmp
enter
add
clc
cmp
out
mov
pop
clc
or
pop
mov
add
dec
inc
clc
mov
clc
in
mov
mulb
add
int
clc
cltd
jns
sub
vcvtps2pd
add
aad
clc
jnp
sub
cmc
or
add
mov
clc
lahf
jp
clc
jecxz
mov
add
cmp
mov
add
clc
imul
push
roll
outsl
jl
add
stc
dec
scas
mov
arpl
add
add
repz
ss
add
data16
jb
add
add
cmp
xlat
push
add
dec
int3
cmpsl
clc
inc
add
inc
clc
pop
insl
out
dec
int
add
test
fcompl
clc
adc
and
add
cmpsl
clc
fisttps
push
add
cli
data16
or
cmp
into
pop
xor
incb
add
sub
or
add
std
sarb
or
lcall
add
ja
mov
clc
out
xchg
rcl
push
into
mov
cmp
jb
add
add
add
add
adc
add
add
ror
jo
add
dec
jne
in
mov
fdivr
jno
add
out
adc
add
cmp
insl
mov
jg
sar
push
add
jecxz
xor
in
aam
add
jecxz
add
add
inc
clc
xlat
pop
incb
leave
movsl
clc
pushf
bound
add
clc
mov
ja,pt
add
ja
add
fcomps
in
fcompl
add
add
cmpsl
clc
int
cs
push
addr16
sub
dec
shll
add
push
clc
repz
clc
mov
clc
sbb
add
imul
fisttpl
pop
jnp
arpl
add
enter
cmp
movsl
clc
dec
xchg
cmp
clc
sar
clc
jg
clc
loope
shll
clc
je
es
outsb
popa
add
adc
in
ret
or
loopne
fidivs
add
stos
leave
cli
adc
sbb
xchg
fwait
adc
add
cmp
sti
clc
insl
jp
mov
lods
insl
clc
jo
add
xchg
mov
jns
sbb
clc
dec
lea
mov
add
inc
clc
lret
aaa
cmp
add
rorl
or
or
add
clc
mov
mov
clc
out
pop
clc
sbb
mov
cmp
add
mov
pop
jo
add
mov
mov
clc
mov
lods
mov
push
add
nop
dec
lcall
inc
clc
movsl
clc
pop
xor
add
mov
scas
jl
data16
mov
cmp
jge
clc
data16
sar
or
clc
jae
add
xchg
pop
push
fldl
dec
int3
hlt
adc
add
add
add
ljmp
add
mov
clc
jmp
jno
add
clc
push
and
add
mov
add
lret
or
jo
add
add
daa
clc
mov
add
sub
inc
add
test
pop
cltd
add
add
add
clc
dec
call
clc
fldt
or
cltd
ret
jmp
imul
xchg
fstp
push
aas
pop
repz
clc
loop
imul
xor
add
aas
iret
jne
add
add
push
clc
in
dec
sbb
repnz
stc
in
push
add
xlat
test
inc
add
mov
pushf
aaa
out
cmp
loop
frstor
clc
push
add
clc
or
bound
add
mov
test
jp
or
clc
ret
clc
xchg
in
in
cmp
clc
popf
cwtl
sar
aaa
inc
clc
jae
add
lock
repz
jp
sbb
cmpsb
clc
pop
in
repz
sbb
lods
mov
jne
repz
add
clc
popf
arpl
add
pop
movsb
clc
cmpsl
clc
pop
and
add
dec
push
add
ficoml
clc
rcll
pop
icebp
ljmp
add
clc
cmp
add
cmpsl
clc
ficoml
push
cmp
clc
adc
add
cmp
sar
clc
pop
cmp
fadds
add
repnz
pop
addr16
adc
mov
clc
jge
pusha
add
cmpsb
clc
dec
out
js
data16
sar
clc
jbe
inc
add
xor
add
clc
xor
add
clc
sahf
cmpsb
clc
mov
sub
into
js
pop
repz
mov
jnp
xchg
pop
clc
jns
adc
clc
dec
frstor
add
jp
arpl
add
add
out
out
sub
clc
rclb
and
add
clc
jle
and
jge
cmp
push
dec
je
sti
push
add
repnz
ret
lret
cmc
sub
add
push
pusha
add
xabort
clc
sub
cltd
popf
scas
out
outsl
int
dec
or
clc
in
cmp
jge
clc
mov
xchg
pop
mov
stos
pop
mov
add
je
dec
or
repnz
jb
add
xchg
and
add
lcall
add
add
add
adc
iret
mov
pop
jge
lods
xchg
movsl
clc
cld
insl
loope
into
lods
pop
push
cmp
cmp
call
add
push
add
mov
xlat
or
xchg
jbe
clc
sarb
push
fwait
pushf
addr16
clc
cmp
stc
xor
jnp
add
stos
fnsave
cmpsb
clc
jmp
inc
clc
dec
sub
clc
js
cmp
add
xor
add
pcmpgtd
jp
add
add
add
or
add
fdivrl
adc
add
add
jl
add
std
icebp
sub
clc
cmc
mov
std
push
push
add
bound
add
xbegin
add
add
lcall
clc
arpl
add
out
sbb
mov
add
add
sub
clc
fcoml
clc
js
ljmp
add
fcmovne
filds
jl
ljmp
jp
add
sbb
jmp
jne
add
movsb
clc
inc
add
insb
cmp
lcall
notl
add
lcall
add
bound
add
cmp
mov
and
add
add
repz
clc
mov
add
lods
imul
test
xchg
xor
add
mov
jo
add
loop
outsl
fwait
inc
add
das
aam
testb
jle
clc
pop
mov
imul
clc
inc
add
fdivs
pop
int
xchg
je
add
pop
je
ja
sbb
add
adc
add
add
sub
clc
jp
clc
pop
jle
clc
pushf
pop
data16
sti
adc
add
add
xchg
jo
add
clc
xchg
pop
cmp
jb
add
add
fldt
xchg
daa
clc
in
dec
pop
jp
cmp
cmp
mov
and
stos
cmp
mov
add
or
add
add
add
mov
cs
mov
clc
xchg
jge
clc
mov
test
mov
add
bound
add
aad
clc
adc
add
add
add
add
cmp
clc
mov
mov
or
cmp
xchg
test
push
cs
sahf
outsb
sub
add
jecxz
add
add
add
pop
xchg
fidivl
cmp
mov
xchg
fdivrl
test
dec
mov
clc
bound
add
clc
stc
push
add
cmp
sbb
add
jle
fdivrs
add
inc
clc
insb
arpl
add
clc
adc
add
push
add
pop
and
add
mov
sbb
sbb
dec
test
ljmp
cmpsb
clc
lahf
push
add
jb
add
add
clc
mov
add
inc
add
sti
ret
clc
xor
add
inc
add
push
movsb
clc
pushf
cmp
jge
es
test
das
push
pop
and
clc
pop
mov
push
adc
add
jbe
clc
daa
clc
mov
enter
fnsave
mov
add
jecxz
das
and
inc
clc
bound
add
dec
clc
ret
and
data16
cmp
fs
jp
push
inc
clc
dec
stos
and
insl
inc
add
inc
add
push
ljmp
lret
sub
sbb
clc
fdivrl
clc
fs
sbb
cmp
pop
add
add
sbb
fmuls
loop
inc
clc
in
mov
ret
inc
add
out
out
jmp
xor
add
add
pop
push
nop
adc
add
add
mov
adc
add
in
pop
je
dec
dec
mov
inc
add
nop
jp
sahf
mov
clc
sbb
movsl
clc
sub
clc
mov
add
add
add
cmp
mov
push
clc
xabort
cmp
xchg
mov
add
lock
add
jns
clc
adc
add
mov
test
pop
pop
sub
js
sbb
ds
mov
inc
clc
push
clc
or
stos
pop
pop
leave
fcompl
mov
aas
inc
clc
roll
add
movsb
clc
pop
sub
addr16
mov
mov
sbb
cmp
mov
mov
mov
rclb
clc
push
pop
cltd
in
add
cld
and
stos
into
loop
in
mov
add
clc
cmp
mov
inc
add
mov
clc
fwait
inc
clc
insl
jnp
clc
loop
nop
sbb
cli
mov
iret
cs
sbb
pop
sub
mov
clc
mov
clc
xchg
popl
xbegin
enter
add
xchg
fimuls
cmpsb
clc
cmp
sar
stos
sahf
stos
decb
stc
cmp
add
shlb
mov
clc
mov
mul
clc
add
add
and
add
dec
scas
cmp
clc
loope
leave
sbb
add
mov
clc
jle
clc
xchg
aaa
cmp
sar
clc
sub
pop
sub
add
ud1
lahf
and
add
enter
clc
mov
add
clc
in
pop
push
mov
cmp
xbegin
addr16
cltd
sbb
mov
jecxz
push
clc
dec
gs
mov
xabort
sub
and
add
std
bound
add
mov
clc
rclb
add
sub
cmp
test
mov
adc
add
out
repz
or
pop
pop
mov
and
lods
cmp
dec
inc
add
xchg
lret
pop
mov
scas
mov
clc
jae
add
fildll
insb
int
clc
xabort
inc
add
and
add
jmp
add
movsb
clc
push
xchg
cld
push
xor
add
xchg
out
or
iret
xchg
lcall
mov
out
pop
mov
add
or
clc
inc
clc
insl
mov
add
adc
push
add
gs
fisubl
xor
clc
fincstp
add
add
jbe
inc
add
mov
clc
call
and
push
int
clc
mov
add
cmp
add
movsb
clc
push
roll
add
out
stos
loope
xor
add
clc
cmpsb
clc
xor
sahf
sub
inc
clc
out
xor
add
cmp
add
clc
test
cltd
sub
clc
pushl
adc
add
js
add
mov
sar
add
fldenv
add
add
clc
or
pop
clc
mov
add
or
sar
clc
fldcw
add
push
xchg
sti
clc
xchg
lret
jns
xabort
daa
clc
in
mov
movsl
clc
push
mov
dec
or
pop
aas
ja
clc
mov
test
data16
xchg
or
fbld
add
fbld
add
cmp
xor
cmp
ljmp
add
mov
clc
push
mov
adc
add
add
sbb
add
jbe
in
int
loopne
adc
clc
shlb
xchg
mov
mov
nop
mov
ret
add
cmp
inc
clc
daa
clc
sahf
pusha
add
scas
movsl
clc
daa
clc
adc
add
clc
notb
add
gs
bound
add
add
add
or
clc
shlb
xor
add
mov
pushf
lods
lods
inc
add
mov
or
dec
repnz
data16
ja
clc
jmp
addr16
imul
pop
jp
ja
add
dec
jns
in
xchg
sar
nop
adc
add
divb
add
xlat
cmp
es
gs
push
jae
add
dec
pop
inc
clc
mov
add
add
mov
loope
aas
xchg
or
outsl
and
add
sub
mov
out
into
add
scas
sub
cld
xchg
push
xchg
mov
int3
insl
shll
jnp
lock
add
jl
xor
sbb
or
clc
push
add
and
cmp
add
insb
sar
clc
xchg
pop
jg
clc
sahf
rorl
xor
test
push
insl
inc
add
xchg
mov
add
add
out
xabort
clc
out
mov
push
clc
daa
clc
mov
cmp
in
xor
add
sar
clc
cmp
xor
add
dec
mov
add
sahf
ljmp
bound
add
clc
xor
add
xchg
fbstp
add
bound
add
mov
add
iret
push
fwait
mov
out
aaa
push
clc
pop
clc
inc
add
data16
mov
loope
xchg
cmp
jo
add
jl
clc
push
add
nop
push
insb
mulb
cmpsb
clc
add
add
addr16
bound
add
clc
pop
into
lea
pop
sub
cmp
jnp
cmp
clc
enter
sub
pusha
add
jl
add
addr16
fldl
xchg
cs
jns
adc
add
test
add
mov
clc
mov
inc
add
mov
jbe
push
clc
adc
add
cs
das
jne
cli
mov
dec
cltd
in
cmp
int3
mov
ds
iret
xchg
xor
add
add
add
cmpps
inc
clc
push
mov
cmpsl
clc
fs
ret
clc
outsl
add
clc
xabort
jo
add
add
pop
cmp
fiadds
add
xchg
test
enter
xchg
mov
xchg
fsubrl
inc
clc
inc
clc
in
mov
clc
pop
movsl
clc
push
rcl
and
add
sbb
cli
inc
clc
dec
jno
add
sbb
add
add
jb
add
clc
js
mov
adc
jg
add
pop
sbb
sbb
push
add
sbb
loop
test
and
add
cmpsl
clc
inc
add
xchg
add
add
xchg
icebp
out
push
ss
clc
add
clc
dec
pop
mov
ss
test
dec
cltd
adc
add
clc
in
mov
clc
pop
popf
aam
mov
cmp
clc
push
bound
add
mov
adc
add
cs
clc
mov
mov
add
clc
mov
mov
clc
pop
popf
pop
mov
arpl
add
add
cmp
jns
rorb
loope
gs
sbb
mov
xchg
fwait
dec
ss
clc
xor
add
mov
clc
jne
clc
fstpt
mov
enter
add
xor
or
sub
fwait
cmp
clc
iret
push
dec
jae
add
imul
mov
cmp
clc
es
vpmacssdqh
add
add
jo
add
and
add
fidivrl
add
xchg
jb
add
add
add
xor
add
scas
lods
stc
shrl
mov
add
lods
jns
out
sahf
mov
add
or
jno
add
mov
add
fbstp
popa
add
fcompl
fldenv
xlat
aas
sub
pop
xchg
xchg
ret
clc
xchg
mov
mov
jge
clc
loop
cmc
push
jnp
mov
push
pop
movsl
clc
sbb
cltd
aam
clc
push
repz
cli
adc
add
lods
jae
add
adc
add
mov
sar
add
data16
add
add
clc
inc
clc
call
xchg
mov
clc
push
add
mov
xor
insl
scas
jg
clc
cmp
add
xor
add
add
aad
add
jbe
cmpsl
clc
loope
mov
pop
xbegin
sub
add
mov
clc
cmp
fsubrs
clc
xor
add
mov
add
sbb
sbb
xchg
notl
add
and
mul
clc
xchg
clc
daa
clc
push
mov
add
clc
add
add
daa
clc
filds
add
aad
clc
or
aam
or
push
add
clc
cmp
pcmpgtb
and
add
mov
repnz
dec
push
add
jno
add
clc
push
ljmp
add
cltd
pushf
outsl
pusha
add
jno
add
lret
clc
push
mov
negb
push
sti
test
out
inc
clc
fnstenv
add
mov
add
clc
cmp
shrl
dec
lsl
add
fstpl
fstpl
clc
cmp
loop
push
clc
leave
sub
cltd
pop
out
jbe
clc
xor
clc
int
ret
sub
or
aaa
cmp
stos
int
and
add
add
insb
int3
jl,pn
jnp
ss
add
add
add
pop
jae
add
mov
add
or
clc
scas
cmp
add
add
add
rclb
cmp
pop
push
add
lahf
pop
sbb
xor
add
push
clc
in
cli
stc
jns
into
cli
inc
clc
out
and
add
clc
notl
add
pop
cmp
test
clc
cmp
in
xchg
test
pop
in
popf
mov
clc
repnz
pop
mov
xchg
xor
add
add
jns
clc
hlt
lods
mov
stos
repnz
ret
clc
out
cmp
add
dec
mov
add
mov
or
add
mov
cmc
aaa
cmc
repnz
mov
add
fwait
mov
test
inc
add
or
and
add
out
push
mov
add
add
add
cmpsb
clc
aaa
push
mov
and
add
or
clc
daa
clc
loopne
insl
lods
and
add
arpl
add
add
and
add
add
in
mov
add
call
add
add
mov
clc
xor
add
add
push
xabort
ljmp
and
add
fadds
and
add
loopne
pop
or
out
jae
add
and
add
jp
clc
sbb
sbb
add
into
dec
add
add
clc
out
xor
add
jae
add
bound
add
push
and
add
or
mov
int
jno
add
out
aad
inc
add
jnp
cmp
xchg
fcoml
add
pop
and
add
add
or
aas
fiaddl
cli
nop
sbb
ds
ja
sar
clc
cmp
lret
add
aaa
mov
clc
inc
add
dec
mov
add
sub
or
cmp
xchg
jl
push
fsubrs
data16
pushf
ja
push
lods
xlat
pop
int3
push
sar
clc
cltd
aad
xor
add
mov
sahf
insl
adc
add
xchg
xchg
cmp
xlat
cmp
lock
add
add
mov
sti
mov
fldenv
jg
add
push
inc
add
in
cld
cs
xor
ficomps
clc
add
cltd
daa
clc
hlt
int
add
push
sub
or
mov
add
rcll
add
es
clc
insb
fwait
jl
ds
clc
cmp
shll
add
ss
xchg
out
shlb
add
pop
ret
clc
in
ret
push
stos
mov
pop
loope
jo
add
add
loopne
mov
add
jg
clc
aaa
mov
cld
pop
xbegin
jecxz
aas
mov
outsl
xor
add
add
adc
add
clc
xlat
xchg
push
cwtl
dec
inc
add
imul
add
mov
imul
std
mov
push
shll
add
xchg
pop
dec
ss
and
add
push
rclb
clc
jne
clc
lret
es
mov
sub
icebp
mov
notl
add
xchg
jp
add
mov
adc
add
clc
mov
sub
add
mov
aam
test
add
lock
je
pop
es
mov
ljmp
pop
add
add
jge
das
cli
add
shlb
add
imul
add
imul
ss
clc
push
lahf
lahf
call
add
add
fsubrl
jo
add
clc
cmp
jl
clc
cmpsl
clc
int
clc
cli
xchg
and
add
imul
clc
cmp
push
add
and
add
mov
pop
repnz
clc
mov
shlb
clc
shll
aam
das
adc
add
cmpsl
clc
js
xabort
adc
add
jnp
imul
xchg
xor
add
clc
sub
clc
outsl
sbb
push
jns
popa
add
and
mov
and
add
stos
shlb
test
xchg
mov
add
push
clc
in
fdivrl
or
jno
add
jecxz
ret
clc
stc
sbb
out
xor
add
imul
add
sbb
clc
push
repz
and
add
mov
clc
fs
dec
cli
int
inc
add
insl
out
adc
add
imul
adc
add
xchg
and
fistl
pop
shlb
push
push
clc
xchg
sbb
add
cmp
or
add
add
xchg
inc
add
xchg
rcrl
mov
clc
mov
pop
jns
xlat
push
add
xor
add
add
mov
mov
repz
and
add
xor
add
clc
adc
add
mov
add
add
enter
clc
out
cmp
repz
clc
xchg
and
add
or
cmpsl
clc
mov
aas
inc
clc
sti
hlt
nop
or
add
add
fs
lret
addr16
pusha
add
add
sbb
pop
mov
clc
cmpsb
clc
sbb
pop
sub
jbe
div
cld
inc
clc
fs
jno
add
sysexit
sahf
adc
add
clc
lcall
sbb
roll
add
dec
sub
cmp
sub
clc
negl
jmp
clc
call
enter
add
xchg
pop
loope
sbb
outsl
mov
add
or
clc
xchg
bt
dec
pop
lret
add
add
cmp
add
jecxz
faddl
add
lcall
pop
in
ss
daa
clc
leave
clc
out
stos
insl
cmp
clc
sub
mov
add
clc
jge
push
add
jl
imul
mov
and
lea
clc
xchg
and
imul
clc
daa
clc
mov
clc
add
add
add
jle,pt
daa
clc
ffree
clc
aas
cmp
out
frstor
pushf
xlat
daa
clc
cmp
add
inc
clc
jmp
bound
add
add
addr16
add
add
enter
xchg
sub
push
jne
scas
inc
clc
sbb
enter
pop
lahf
lret
mov
adc
add
add
add
xor
add
add
adc
add
or
ja
repz
mov
inc
clc
lock
sub
xor
add
cmpsb
clc
or
clc
push
clc
xchg
cltd
xchg
fwait
and
add
push
add
jle
clc
out
scas
xchg
clc
das
push
clc
push
add
cmp
lods
sbb
push
outsb
cmp
add
rcll
rcrl
ficomps
mov
out
out
dec
fbld
add
inc
clc
cmp
ficompl
xbegin
clc
and
add
add
inc
clc
ds
imul
clc
je
pop
leave
jp
dec
adc
sub
lock
add
cmp
out
add
or
push
into
jecxz
mov
clc
fwait
xchg
test
mov
and
dec
push
push
add
ja
sahf
cmp
xchg
xchg
icebp
xchg
and
add
in
cli
jne
or
xchg
sbb
addr16
sbb
clc
pop
jp
add
sub
sub
and
add
das
daa
clc
imul
add
aam
fldl
cld
and
add
jnp
inc
add
int
clc
mov
cmp
movsb
clc
sub
add
sub
sahf
inc
add
add
mov
not
scas
inc
clc
pop
in
mov
add
xabort
clc
jns
and
or
lods
add
push
inc
add
sahf
inc
clc
fs
rol
clc
mov
cmc
fwait
adc
add
add
clc
outsb
mov
push
add
sar
clc
mov
clc
nop
test
xor
add
add
nop
cmp
test
sub
mov
cwtl
fdivs
sti
out
jne
imul
add
adc
xchg
sti
cmp
and
add
cli
test
adc
add
add
cmp
clc
imul
jbe
popl
add
sar
dec
fsubl
add
inc
clc
mov
adc
clc
push
mov
add
mov
ljmp
add
push
add
popf
sahf
xchg
enter
pop
mov
add
clc
inc
add
or
or
add
clc
mov
add
pop
add
add
cmp
dec
test
push
xchg
sar
clc
mov
rcrb
cmpsl
clc
mov
clc
sbb
clc
add
add
cwtl
jmp
das
cmp
clc
mov
call
xor
add
add
add
fldl
add
push
aam
xabort
pop
inc
clc
mov
test
jecxz
inc
add
pop
outsl
inc
clc
inc
clc
jp
cmp
add
add
nop
dec
gs
ljmp
clc
std
cwtl
outsb
in
inc
add
mov
xor
add
add
add
mov
push
add
push
call
je
add
jmp
mov
push
cwtl
adc
add
clc
int3
fstpl
adc
add
mov
leave
sbb
mov
clc
gs
adc
add
clc
xchg
fs
test
rclb
pushf
shl
cwtl
pushf
sub
scas
stos
stos
xchg
cmp
add
xor
add
clc
int3
sub
clc
fcmovnbe
fldenv
clc
shl
clc
cmp
imul
pop
mov
add
cmp
add
and
add
repnz
clc
adc
add
add
repz
add
loope
into
fsubs
add
add
add
cmc
cmp
arpl
add
adc
add
or
cmp
push
xchg
xbegin
out
or
jnp
push
mov
push
imull
movsl
clc
ja
clc
jge
pop
es
jne
add
jge
in
test
add
mov
clc
inc
add
lret
clc
sbb
clc
mov
jle
add
xor
add
clc
jl
add
add
xbegin
clc
arpl
add
clc
cld
sub
lea
ds
mov
add
push
mov
clc
push
js
adc
add
and
stos
notb
add
inc
add
std
or
add
fistpl
clc
mov
repnz
add
daa
clc
fidivrs
push
xchg
daa
clc
mov
add
cmp
je
add
pop
clc
mov
cmp
add
add
aaa
ss
add
mov
xchg
lock
push
sbb
mov
sbb
xchg
dec
push
add
mov
cwtl
jno
add
add
push
aam
aad
mov
or
cli
mov
pop
je
pop
std
stos
and
add
add
call
add
xor
add
adc
add
jae
add
clc
xbegin
add
add
mov
clc
es
test
fcomps
add
xchg
xbegin
fldcw
stos
outsl
and
add
add
data16
pop
push
add
sbb
clc
pop
clc
daa
clc
jnp
cld
mov
cltd
stos
js
lock
push
add
insl
inc
add
ds
fcmove
xor
add
shll
clc
fcoml
mov
pop
xor
add
add
pop
out
clc
out
inc
add
cmp
rol
clc
fwait
adc
add
xabort
clc
daa
clc
pop
sub
clc
xor
mov
and
add
stc
and
add
clc
loopne
inc
add
add
add
add
cmp
clc
jnp
mov
jne
xlat
popa
add
xor
add
adc
add
in
dec
add
add
icebp
mov
sbb
and
add
add
xor
add
clc
dec
fyl2x
push
add
add
add
mov
clc
data16
xor
add
test
out
push
mov
push
dec
and
add
add
or
clc
push
add
ret
clc
loop
cli
and
add
cmp
clc
mov
enter
add
clc
sarl
clc
sub
clc
js
pop
ja
in
pop
dec
ljmp
mov
clc
pop
je
add
mov
clc
jmp
fldt
add
jb
add
jb
add
clc
call
std
inc
add
leave
repnz
ss
cmp
clc
jl
push
movsb
clc
cli
mov
imul
push
clc
dec
popl
add
cmp
mov
mov
mov
and
add
jne
clc
mov
push
add
add
add
inc
clc
push
add
lea
cmp
je
clc
ficompl
cmp
push
clc
mov
call
xchg
addr16
mov
mov
clc
out
xchg
cmp
inc
add
add
cli
cmp
data16
stc
dec
mov
xchg
mov
xlat
jge
pop
or
lods
clc
and
add
add
mov
movsl
clc
sub
fnsave
add
lods
das
cmp
mov
push
add
xor
add
add
add
out
je
add
add
and
add
out
xabort
clc
imul
push
mov
fcomps
mov
cli
push
add
mov
add
decl
push
mov
clc
repz
add
add
jle
clc
or
inc
add
mov
clc
fwait
push
dec
outsb
pusha
add
fwait
cmp
imul
in
adc
add
adc
add
fs
ja
sbb
clc
ret
clc
jecxz
adc
add
add
adc
add
add
clc
jbe
add
push
out
repnz
mov
iret
dec
and
add
cmp
push
popf
sbb
shr
lcall
mov
addr16
in
pushf
cmpsl
clc
jbe
imul
nop
test
js
clc
es
bound
add
out
dec
cmp
inc
add
or
clc
loopne
movsl
clc
sub
jb
add
sbb
clc
cmp
sub
clc
sub
cmp
clc
fildl
add
clc
dec
aas
mov
jg
clc
xchg
dec
xabort
clc
and
mov
xchg
pop
clc
ja
clc
xor
add
int3
cmp
add
inc
add
sbb
clc
mov
repnz
clc
mov
clc
dec
xchg
jge
clc
jns,pn
ja
es
mov
clc
js
daa
clc
rcrl
mov
cs
clc
add
add
or
jbe
mov
jne
clc
pop
mov
push
add
pop
xabort
push
clc
ret
clc
add
add
mov
clc
lea
movsl
clc
stc
pop
sbb
push
pop
clc
jb
add
shl
icebp
enter
adc
push
add
add
clc
jb
add
clc
adc
clc
jmp
xor
mov
cwtl
mov
add
xor
add
xabort
add
stos
xabort
mov
mov
clc
xlat
push
fsubs
fwait
jp
sar
hlt
popf
cmp
inc
clc
push
add
add
add
arpl
add
out
xor
add
or
mov
data16
loopne
cmp
add
add
mov
in
stos
dec
int
add
xchg
outsl
ds
add
jge
or
or
push
clc
sub
ss
dec
sar
outsl
pop
clc
ret
add
sar
push
add
xchg
adc
add
xor
add
sahf
dec
pop
into
out
or
mov
pushf
ret
push
xchg
pop
insb
cs
hlt
xor
add
add
clc
jbe
clc
imul
push
clc
pop
negb
jl
lahf
imul
ds
shll
adc
add
iret
cmp
clc
inc
add
imul
inc
clc
das
loop
or
add
clc
push
sbb
xchg
inc
clc
push
lock
inc
clc
inc
clc
es
xchg
push
stos
fs
and
add
inc
clc
sbb
add
xchg
insb
arpl
add
adc
add
add
clc
insb
pop
cli
aam
jmp
es
mov
movsb
clc
jne
xchg
inc
clc
cmpsb
clc
mov
insl
inc
add
xor
add
scas
lret
cmp
push
cs
stos
or
cmpsl
clc
xor
add
or
add
mov
adc
cmpsl
clc
sbb
adc
add
clc
stc
mov
clc
mov
xchg
pop
pop
fs
sbb
jno
add
push
add
adc
add
xchg
sub
sti
mov
pusha
add
lcall
sar
dec
lret
and
add
add
lea
add
add
xchg
mov
clc
add
imul
add
adc
in
dec
cmp
sbb
add
push
clc
add
add
clc
imul
sar
clc
jae
add
clc
and
cmp
clc
lahf
xor
cmp
clc
lea
and
add
fcomp
adc
add
add
in
fistpll
add
xchg
adc
add
faddl
repz
movsb
clc
jg
cmp
out
cmp
shrl
mov
xbegin
mov
clc
mov
int
out
add
add
clc
jecxz
fs
xor
add
cwtl
inc
add
mov
clc
aam
mov
add
sub
add
add
add
ficoml
add
add
add
mov
jbe
add
movsb
clc
sub
mov
in
push
clc
es
sbb
jmp
inc
clc
push
xor
add
int3
and
add
mov
clc
and
enter
add
add
into
pop
nop
jl
clc
fmul
rcrl
sub
out
test
jmp
pop
inc
clc
jo
add
fld
clc
loopne
xchg
rorb
jg
add
mov
iret
adc
add
inc
clc
mov
sbb
inc
clc
add
add
add
sbb
xabort
clc
add
add
clc
mov
add
add
xchg
addr16
adc
add
fmul
or
add
scas
sub
jbe
pop
adc
add
xchg
jle
pop
idivb
fstl
add
and
clc
lods
cmp
ja
rcll
inc
clc
clc
fisubrs
sub
xchg
lret
pop
cmpsb
clc
mov
add
add
pushf
mov
sub
mov
mov
sbb
movsb
clc
or
jecxz
je
shl
clc
aas
jae
add
add
mov
jae
add
data16
nop
movsb
clc
test
stc
pop
lcall
clc
or
sub
dec
insl
add
add
call
add
insl
scas
movsl
clc
cmc
clc
or
imul
addr16
or
clc
fldl2e
xchg
gs
mov
adc
add
vmulps
clc
jne
clc
mov
nop
ret
clc
fnstcw
dec
inc
add
and
add
clc
push
xor
clc
popa
add
daa
clc
cs
or
add
jbe
clc
pusha
add
pop
icebp
mov
dec
push
mov
shl
test
test
sar
push
adc
add
add
and
add
add
sar
pushf
cld
lock
add
jmp
xabort
clc
cmp
mov
stc
lret
fists
rcr
mov
add
movsl
clc
cltd
cwtl
lods
push
push
mov
clc
jg
xchg
push
mov
add
addr16
popa
add
jmp
jne
clc
xor
add
sbb
add
pop
cmpsl
clc
js
out
mov
mov
clc
popa
add
xchg
sub
add
jns
push
push
add
inc
add
and
add
sbb
mov
clc
mov
xlat
and
add
clc
add
add
lods
ljmp
sub
clc
push
outsb
sub
pusha
add
out
popa
add
xchg
dec
xchg
sub
add
clc
xchg
sti
in
lret
push
clc
xchg
and
add
leave
lahf
test
sar
in
out
out
mov
clc
outsb
pop
clc
repz
and
add
out
nop
and
add
add
lcall
popa
add
in
insl
or
test
add
mov
jne
test
dec
outsb
dec
mov
sbb
clc
push
add
jg
push
add
sahf
pushf
iret
lret
cld
add
add
lcall
push
sub
or
lods
cwtl
sub
lock
clc
out
aas
cmp
clc
out
lods
cmp
fdivs
add
sbb
sar
pusha
add
gs
mov
add
clc
jo
add
and
add
add
add
mov
add
repnz
xchg
jle
sub
mov
clc
inc
add
inc
clc
inc
add
es
jmp
cmp
cs
xor
add
clc
lea
or
mov
loop
add
fsubr
pop
jbe
out
mov
jge
add
add
call
push
add
ret
clc
dec
iret
mov
clc
mov
arpl
add
fidivl
lret
jmp
add
jns
iret
or
clc
mov
clc
cmp
clc
shl
mov
pop
jle
sub
jo
add
dec
in
push
add
bound
add
add
add
fdivrs
inc
clc
insb
movsl
clc
mov
add
or
out
and
ja
pop
hlt
cs
sarl
adc
add
lods
leave
test
std
sahf
test
clc
pop
stos
mov
clc
lea
add
clc
popf
xlat
in
pop
clc
xabort
jb
add
cltd
insb
in
sub
bound
add
shrb
add
add
test
ja
rorb
xabort
mov
clc
inc
clc
xlat
lret
bound
add
lcall
push
mov
data16
leave
clc
push
add
jle
mov
clc
push
jg
ljmp
adc
add
sub
ja
add
sbb
mov
sbb
add
inc
clc
bound
add
outsb
ds
clc
loop
mov
clc
lcall
data16
js
out
jnp
in
cmpsb
clc
daa
clc
iret
clc
cmpsb
clc
pop
mov
push
xchg
scas
or
push
clc
cmp
popf
jmp
jle
clc
dec
movsb
clc
adc
clc
setnp
clc
mov
inc
clc
and
add
add
push
clc
add
add
clc
inc
add
xor
dec
lods
clc
ja
shlb
add
fcomps
ja
jns
inc
add
fs
lods
sub
push
add
push
lahf
test
cmp
stc
int
add
xchg
aas
xor
add
jbe
outsb
cmpsb
clc
test
insb
pop
es
cmc
leave
sub
add
hlt
inc
clc
mov
add
loop
push
add
cmp
push
add
and
cltd
sub
add
into
xor
mov
popf
xor
add
clc
sar
sub
add
neg
xbegin
clc
ret
add
jg
mov
pop
clc
cli
jle
xor
mov
add
add
add
cmp
cmc
and
add
clc
out
aas
mov
clc
cmp
clc
in
mov
adc
add
push
mov
icebp
xor
add
clc
push
daa
clc
fsubs
add
cld
sbb
push
sbb
clc
lret
xchg
sbb
sti
xchg
xbegin
out
sbb
clc
fstpt
push
add
in
mov
clc
call
add
mov
xor
cmp
add
xor
add
push
clc
inc
add
popf
lret
add
and
add
add
add
sar
in
movsl
clc
mov
pop
mov
lods
sbb
add
sub
cmp
test
add
add
sti
and
clc
add
add
in
hlt
mov
cmp
and
clc
ljmp
mov
adc
add
data16
data16
xor
add
jmp
clc
in
repz
cmc
je
or
movsl
clc
sbb
jmp
mov
pop
jmp
clc
push
xor
add
jbe
clc
push
or
clc
loope
in
stos
mov
add
jno
add
add
add
clc
pcmpeqb
push
ds
into
xchg
dec
mov
dec
lret
pop
ds
std
mov
jbe
add
scas
adc
add
sub
jne
jg
xchg
dec
clc
arpl
add
aas
dec
lret
cmp
rcll
push
test
clc
jnp
ss
add
lods
mov
mov
fld
clc
sbb
add
dec
int3
out
stc
mov
in
arpl
add
xchg
inc
add
fdivrl
add
sar
jge
xchg
push
test
clc
xor
add
out
add
add
clc
cmpsb
clc
cmp
sbb
cmp
xchg
mov
jmp
or
mov
clc
repnz
clc
dec
add
inc
clc
push
fstps
and
clc
fs
cltd
push
clc
dec
or
push
lahf
adc
inc
clc
fcoms
pop
clc
mov
xabort
mov
push
mov
fcoms
stos
mov
add
lcall
add
inc
clc
sahf
add
add
add
or
imul
sub
add
xor
sub
cmp
or
add
arpl
add
imul
clc
adc
mov
clc
ret
sti
insl
sub
pop
dec
xor
add
add
or
clc
and
add
pop
daa
clc
imul
mov
add
add
mov
clc
dec
lods
scas
bound
add
lret
aaa
out
adc
add
pop
clc
aam
jmp
add
ss
insl
pop
jecxz
push
sub
add
dec
mov
ftst
clc
shlb
add
add
clc
cmp
pop
mov
adc
add
add
aam
clc
popf
push
xchg
mov
push
jecxz
sbb
add
cmpsb
clc
dec
jmp
add
nop
dec
dec
xchg
cmp
xor
add
sbb
sub
cwtl
popa
add
cmp
pop
test
clc
xchg
push
clc
lahf
cmp
adc
clc
jns
test
cmp
xbegin
clc
mov
push
add
pop
in
sub
dec
xchg
out
xchg
xlat
cli
and
add
scas
fs
mov
add
push
add
hlt
loope
out
scas
xchg
add
add
sbb
es
mov
in
mov
clc
scas
or
add
jmp
fwait
pop
shll
inc
add
mov
clc
xchg
movsl
clc
xchg
cmp
mov
push
add
push
add
rcrb
mov
clc
stos
jl
mov
clc
xor
jg
add
mov
mov
clc
fdiv
and
add
push
add
jl
lcall
gs
enter
xchg
or
add
mov
xchg
aad
js
stos
cmc
insl
ret
cwtl
pop
inc
clc
jle
lea
mov
sub
clc
mov
push
add
cmpsl
clc
jne
cmp
movsl
clc
mov
in
sbb
add
xlat
jmp
aas
test
or
mov
add
in
inc
add
mov
movsb
clc
mov
clc
cmp
in
mov
add
jo
add
jle
push
add
pop
fistps
add
mov
ret
clc
or
clc
pop
pushf
add
add
mov
clc
mov
mov
add
add
jl
pop
push
add
adc
add
xchg
mov
add
clc
jmp
inc
clc
bound
add
repnz
leave
jne
ucomiss
loope
cmp
sarl
fstl
add
in
test
jnp
adc
add
mov
add
fstpt
shlb
clc
pop
in
lahf
iret
push
add
sub
enter
clc
cwtl
xor
add
fdivrs
xor
repnz
and
add
cmp
inc
add
pop
clc
sub
push
pop
rol
clc
mov
clc
scas
inc
add
cmp
mov
cld
xchg
xchg
xor
xchg
pop
inc
clc
aaa
mov
add
dec
out
es
cmp
cmp
clc
mov
add
out
push
leave
sbb
add
clc
add
inc
clc
std
out
jnp
jge
jns
iret
jnp
add
cli
add
add
pop
cmp
xchg
inc
add
fadds
add
clc
xor
add
add
or
data16
loopne
je
clc
xchg
fisttpll
clc
test
bound
add
push
lcall
sbb
xchg
into
cmp
add
mov
add
out
enter
outsb
ss
clc
pushf
add
add
add
clc
imul
fwait
pop
fldt
sub
mov
and
popa
add
dec
mov
jl
add
fiadds
out
add
add
add
sbb
xchg
ljmp
add
clc
dec
scas
xor
add
hlt
add
add
insl
push
mov
mov
jmp
clc
sub
jne
clc
scas
lock
sbb
and
add
add
xbegin
xchg
in
cmp
mov
ja
pushf
or
clc
add
add
cld
addr16
and
add
adc
add
popa
add
call
mov
sub
repz
add
fcmovb
clc
and
js
clc
lods
push
lods
ss
clc
gs
test
stc
mov
pop
or
push
clc
aaa
ret
clc
repz
sub
add
pop
adc
add
jp
add
pop
pop
jb
add
add
jae
add
pop
aam
clc
js
out
add
add
add
or
add
xor
add
mov
addr16
nop
lock
inc
clc
iret
es
xchg
and
mov
add
xor
clc
cld
sub
clc
sub
dec
dec
icebp
and
add
pop
add
push
clc
fildll
clc
cmp
mov
insb
rolb
add
pop
stc
mov
add
fcom
movsb
clc
mov
adc
add
xor
add
add
enter
sbb
test
cmp
add
add
add
cmpsb
clc
ds
push
imul
add
in
pop
cli
dec
pop
jmp
aam
clc
stos
in
pop
sahf
cld
xor
add
add
mov
push
add
arpl
add
mov
clc
repz
add
in
push
clc
into
and
push
add
cmp
add
add
clc
xchg
mov
add
add
mov
jbe
clc
mov
cmp
clc
sub
push
cld
xor
add
add
clc
into
addr16
mov
clc
stc
out
je
mov
js
add
dec
mov
decb
xor
clc
mov
sub
clc
enter
dec
cmp
fbstp
std
insb
into
cmp
add
dec
rcr
pushf
xchg
ret
xchg
lods
xor
add
jnp
cmp
repz
inc
add
fwait
push
scas
in
xchg
pop
mov
clc
arpl
add
sar
mov
add
xor
add
or
sbb
movsb
clc
es
or
add
xor
add
or
xchg
adc
add
add
add
pushf
dec
jg
adc
or
sti
jl
clc
mov
dec
jb
add
pop
jo
add
xchg
pop
data16
and
scas
shll
inc
clc
add
add
aam
push
add
cmpsb
clc
fdivrl
jge
push
mov
int3
rcll
add
mov
push
clc
add
and
add
add
xchg
push
and
add
mov
add
or
sub
lock
mov
ret
add
sar
and
inc
add
stos
xchg
out
lcall
loopne
cltd
out
ss
test
in
xabort
clc
mov
scas
mov
lahf
movsl
clc
out
cli
hlt
imul
cmpsl
clc
cmp
add
jnp
outsl
or
mov
clc
sbb
add
jecxz
movsl
clc
mov
jecxz
das
mov
cmp
clc
and
add
jno
add
clc
xor
add
add
clc
arpl
add
cwtl
pop
js
add
add
add
fisubrl
imul
add
add
xor
jmp
inc
clc
fs
jl
out
jo
add
clc
cmp
xor
add
dec
jnp
inc
clc
add
clc
and
data16
iret
inc
clc
or
hlt
pusha
add
mov
add
bound
add
add
fdivs
cmp
pop
dec
stos
aam
clc
mov
nop
lret
rcll
xchg
popf
sub
ja
add
cli
int3
lret
add
add
mov
push
mov
add
lahf
push
pop
mov
sti
pop
add
add
scas
addr16
xor
add
add
push
add
cmp
jl
clc
insb
cmp
data16
es
sub
data16
mov
push
clc
push
fildl
jecxz
bound
add
mov
cli
scas
outsl
scas
mov
hlt
cmp
adc
aaa
or
clc
jo
add
push
jecxz
pop
push
or
ficompl
jne
insb
fimull
add
clc
adc
xchg
ficompl
add
inc
add
insl
loopne
adc
add
sub
es
data16
adc
add
sbb
cwtl
dec
out
cmpsl
clc
test
stos
insl
cmp
add
or
cmp
jp
pop
jae
add
add
push
xbegin
mov
mov
xor
add
add
add
lods
fsubs
fcoms
add
repnz
pop
inc
add
xlat
pop
pop
lret
adc
add
clc
sahf
mov
add
add
pop
clc
jg
mov
clc
dec
mov
xchg
cmp
add
mov
xor
add
add
aam
cmp
clc
cmc
lret
add
movsb
clc
fs
popf
mov
jmp
xchg
jge
clc
mov
das
daa
clc
pop
mov
cld
cltd
popa
add
push
outsb
and
add
sub
movsl
clc
jl
cmp
adc
add
icebp
add
popa
add
cmp
dec
fisttps
js
daa
clc
cmp
xchg
jb
add
add
xor
add
jp
add
out
mov
mov
jge
lock
push
shrl
into
popf
cmp
lock
push
clc
xor
add
pusha
add
insl
cmp
clc
sbb
add
add
add
js
sti
xchg
xbegin
clc
xchg
and
xchg
ljmp
clc
leave
adc
add
clc
cld
out
mov
adc
add
in
ret
clc
lret
outsb
xchg
sub
add
ret
clc
inc
add
jge
scas
lahf
fidivl
mov
add
outsb
mov
add
add
shrb
dec
cmp
pop
je
outsb
lret
xbegin
add
and
add
lret
loopne
adc
add
stc
fidivrl
clc
adc
add
dec
mov
add
and
cmp
gs
adc
and
add
sbb
clc
xor
clc
lahf
xchg
sbb
clc
jecxz
inc
add
pop
add
add
clc
and
add
clc
push
add
lea
pushf
inc
add
pop
dec
movsb
clc
loope
test
out
lea
push
mov
clc
add
push
add
pop
inc
clc
pop
jns
call
clc
sar
xchg
test
clc
or
cmc
push
add
jb
add
stos
das
mov
mov
outsl
or
add
clc
addr16
in
test
clc
mov
xor
add
clc
fmull
sbb
mov
clc
cmp
add
push
add
ret
clc
mov
clc
xor
mov
lods
or
and
inc
add
jecxz
and
add
sahf
sbb
clc
dec
xlat
std
adc
add
cli
fadds
jo
add
clc
xchg
pop
call
xchg
sar
pusha
add
frndint
movsl
clc
xlat
inc
clc
pop
inc
clc
enter
add
in
fbstp
add
add
fs
repz
add
clc
cmp
add
push
jo
add
add
iret
cmp
xchg
inc
clc
mov
lret
ja
cmp
pop
or
clc
mov
lock
sub
add
and
add
add
pop
adc
add
sub
add
add
add
clc
nop
push
call
std
daa
clc
out
pop
mov
add
clc
popf
testb
add
sbb
clc
xor
add
clc
fs
xchg
push
fyl2x
scas
and
add
clc
adc
add
shrl
push
adc
add
stos
jg
cmp
popf
cmp
scas
mov
xchg
xor
add
clc
arpl
add
popa
add
mov
aad
add
rorl
clc
movsl
clc
inc
add
inc
add
mov
out
xchg
gs
push
jne
add
pop
dec
mov
je
pop
mov
add
scas
outsb
gs
imul
clc
scas
lahf
xbegin
add
mov
add
add
clc
ret
clc
pop
adc
ljmp
popf
cmp
clc
push
clc
insl
clc
clc
icebp
xbegin
sahf
dec
icebp
push
add
cmpsl
clc
loopne
push
sub
push
add
push
clc
mov
test
adc
clc
inc
add
mov
add
daa
clc
pop
mov
cmc
or
add
add
dec
std
fildl
add
stc
clc
xor
addr16
dec
mov
adc
add
clc
int3
mov
clc
leave
fmuls
push
xchg
ret
inc
add
pop
push
cmpsb
clc
pop
push
imul
fcompl
mov
out
popa
add
mov
stos
inc
clc
push
add
push
push
add
push
add
inc
add
outsl
rolb
in
out
pop
jnp
clc
aas
inc
clc
sub
fmuls
xor
add
add
addr16
popf
push
out
fildl
clc
bnd
bound
add
mov
xor
add
jmp
clc
das
loope
inc
clc
cmp
add
mov
ja
fisubrl
arpl
add
xchg
xchg
pop
jecxz
insb
mov
enter
iret
mov
clc
pop
mov
std
adc
add
cld
and
fs
jno
add
add
clc
cwtl
test
xbegin
lock
jo
add
clc
xchg
sub
add
aam
clc
ds
cli
inc
add
mov
stos
sbb
lcall
clc
mov
mov
push
add
gs
adc
clc
ret
clc
icebp
inc
clc
pop
cld
ljmp
sbb
pop
jmp
clc
rorb
xchg
xlat
push
and
add
add
outsb
aad
mov
inc
clc
add
add
shl
clc
addr16
xchg
stos
pop
clc
lret
cmp
clc
add
add
loop
jne
add
push
int3
pop
dec
sbb
add
mov
add
in
mov
clc
fs
arpl
add
clc
inc
clc
addr16
inc
clc
inc
clc
sahf
sti
cmp
clc
and
add
sub
fmul
stos
insl
ret
clc
adc
add
sbb
clc
leave
cmp
mov
mov
dec
sbb
clc
pop
icebp
dec
dec
mov
ret
aas
mov
clc
mov
pop
in
rolb
clc
cmp
adc
add
xor
add
inc
add
data16
scas
xchg
scas
jle
push
clc
out
inc
add
add
pop
pop
repz
sub
clc
dec
xchg
push
out
jno
add
sub
inc
add
mov
clc
bound
add
add
clc
stos
cli
lahf
or
cli
lock
add
ret
clc
stos
mov
std
out
inc
clc
jle
sbb
mov
movsb
clc
push
test
clc
inc
add
stos
push
clc
sub
push
add
dec
sbb
insb
inc
add
sub
clc
stc
push
add
mov
add
mov
test
dec
jae
add
clc
jne
add
aad
add
xor
add
gs
mov
clc
mov
roll
and
add
mov
jecxz
imul
push
clc
or
std
jno
add
add
rorl
jg
clc
push
xchg
jecxz
mov
dec
xor
fidivs
add
push
add
dec
mov
sub
sahf
and
add
movsb
clc
or
nop
mov
sub
push
and
idivb
dec
xor
add
push
add
pusha
add
push
or
fwait
aam
clc
xor
add
add
fcoms
add
insl
jp
add
xchg
jae
add
clc
jp
dec
dec
pop
loope
bound
add
add
and
mov
add
lahf
xor
add
pop
mov
js
dec
repz
out
push
add
pop
mov
lcall
rcrb
pop
sahf
pop
popl
pop
decb
clc
pop
enter
lods
out
fisubs
clc
cmp
cwtl
arpl
add
in
sbb
clc
xchg
and
pop
mov
out
push
add
jnp
lret
pop
push
add
out
sub
lret
clc
mov
cmp
dec
jl
clc
data16
sar
cli
dec
mov
inc
clc
stos
add
js
fxch
cmp
clc
xchg
inc
clc
movsb
clc
pop
sbb
add
mov
movsb
clc
stc
jo
add
xchg
in
test
lahf
or
add
mov
add
scas
loop
in
dec
cmpsl
clc
or
or
fisttps
fldcw
cmp
xor
add
add
hlt
fbld
add
repnz
clc
out
jae
add
ja
mov
pop
mov
jl
add
loope
mov
clc
mov
jne
clc
aas
sbb
add
add
clc
cmp
repz
mov
sbb
pop
xchg
pushf
sub
push
add
cltd
sti
outsl
out
decl
jmp
clc
sbb
xchg
imul
mov
cmp
mov
fsubrs
jl
inc
add
sub
sub
clc
lret
add
hlt
or
add
pop
mov
fimull
stos
in
arpl
add
ret
clc
lcall
js
add
pop
jge
or
inc
add
mov
add
cwtl
lods
jmp
dec
push
jno
add
mov
mov
push
enter
gs
sbb
jle
clc
fdivrs
add
clc
sahf
leave
xor
add
fst
mov
add
mov
push
clc
xchg
outsb
cmp
clc
in
xor
add
clc
out
push
mov
ret
arpl
add
mov
add
xchg
push
ds
or
data16
mov
outsb
push
add
dec
mov
push
jo
add
cmp
clc
push
mov
clc
int
push
clc
xor
add
mov
sbb
fwait
in
repnz
clc
inc
clc
mov
loopne
mov
add
ficoms
add
rcr
inc
add
aad
add
and
add
push
icebp
xbegin
clc
cmp
add
push
clc
stc
xchg
sub
mov
lret
add
push
ss
adc
add
push
lret
adc
add
jg
clc
aam
add
ficoms
add
xor
add
clc
movsl
clc
ret
mov
pop
push
iret
cmp
sub
lret
or
and
add
add
dec
paddw
ss
jle
add
add
jbe
add
test
clc
adc
add
dec
and
add
add
xchg
out
dec
ljmp
cmpsl
clc
pusha
add
and
sbb
insb
cli
xor
add
add
sti
and
add
clc
pop
push
push
add
lods
push
add
mov
ret
and
clc
mov
addr16
cwtl
call
pop
clc
xor
add
mov
sbb
hlt
lret
dec
scas
loope
loope
repz
lahf
jle
clc
xchg
push
insl
push
and
inc
clc
inc
add
pusha
add
mov
add
pusha
add
mov
xor
add
stos
push
add
inc
clc
scas
adc
add
add
add
clc
xchg
mov
add
clc
dec
xchg
fwait
jbe
add
add
ja
mov
add
and
int
mov
xchg
stos
and
cmpsl
clc
sub
clc
jb
add
xchg
cmpsb
clc
cmp
clc
pop
test
pop
cmpsb
clc
mov
clc
and
add
neg
inc
add
dec
jle
mov
jns
loopne
add
add
clc
sbb
push
mov
add
mov
cmpsb
clc
adc
add
add
insl
adc
add
clc
loop
movsl
clc
sti
test
leave
out
adc
add
mov
call
jmp
add
mov
jl
add
push
fisubs
cwtl
jb
add
xchg
push
or
clc
sbb
add
cmc
in
fdivrs
pop
fisubl
add
dec
push
add
insl
xchg
pop
std
outsl
out
push
add
mov
lods
cmp
mov
clc
inc
clc
jge
cwtl
and
add
add
add
xor
clc
fwait
xor
add
xchg
js
and
sub
pop
or
add
in
clc
xor
add
add
add
mov
or
clc
cmc
jae
add
fwait
push
clc
jge
ficoml
mov
clc
pop
clc
or
add
or
xor
add
leave
mov
nop
mov
clc
aam
mov
repz
clc
or
add
sub
and
add
ss
sbb
push
call
and
add
xchg
xchg
pop
rolb
add
xchg
lcall
repz
es
cli
cmp
push
or
mov
cmp
push
push
test
ss
mov
scas
gs
popa
add
add
scas
out
jmp
inc
add
xchg
lods
push
add
or
and
add
vshufps
clc
data16
mov
clc
jae
add
imul
xor
add
clc
pop
pop
add
add
add
push
add
adc
pop
add
add
add
add
add
mov
data16
ss
insl
sub
and
add
xabort
js
mov
add
add
add
push
inc
add
stc
sarb
jge
bound
add
add
fcmovbe
xabort
inc
add
testb
sar
loopne
clc
mov
and
add
cmp
clc
and
add
adc
add
add
clc
int
push
popf
loope
cmp
xchg
or
xchg
aaa
fwait
daa
clc
js
clc
pop
clc
mov
push
add
stos
inc
add
xlat
add
add
sbb
clc
out
push
add
popa
add
aad
sub
dec
add
loope
mov
jmp
add
dec
inc
add
and
add
call
add
shlb
add
clc
pop
ds
jae
add
add
and
pop
pop
mov
add
jae
add
cvtdq2ps
jns
push
clc
addr16
push
mov
movsl
clc
jle
add
aad
xchg
mov
push
clc
in
imul
repz
add
push
xchg
sbb
add
sub
clc
cmpsb
clc
in
inc
clc
loope
rcrl
add
mov
adc
add
sub
sub
adc
dec
loope
add
add
jl
clc
sar
cli
fadds
clc
cld
out
jno
add
pop
mov
clc
cltd
cmp
repz
add
cmp
ret
clc
or
add
fbstp
pop
cmp
push
push
add
fwait
outsb
or
insl
insl
xchg
add
add
and
mov
imul
out
jne
clc
or
add
and
clc
inc
add
shll
add
testl
pushf
mov
clc
sbb
clc
sar
cmpsl
clc
js
jno
add
xchg
dec
je
sbb
je
inc
clc
arpl
add
sbb
and
add
clc
pop
clc
push
clc
jne
clc
enter
clc
cmpsl
clc
xor
add
push
add
mov
aam
clc
dec
pop
aam
cmc
mov
sbb
loopne
add
add
or
add
and
add
popf
sub
scas
pop
shr
rcl
sbb
add
stc
dec
adc
add
clc
fadd
clc
cmc
notl
sub
nop
and
add
outsb
in
xor
clc
jg
jbe
jg
add
dec
pop
clc
inc
add
or
add
loopne
and
add
add
adc
add
clc
mov
push
cmp
idivl
gs
inc
add
mov
clc
mov
clc
xchg
jns
mov
clc
jge
mov
inc
clc
pop
dec
notb
dec
pop
push
add
and
add
xchg
mov
pop
into
jne
clc
cmp
push
add
sub
stos
cld
int
mov
add
sub
add
mov
jl
sbb
xchg
repnz
clc
pop
mov
mov
test
pop
pop
cld
test
dec
jno
add
clc
inc
clc
jnp
insb
mov
add
or
add
mov
add
cmp
das
ss
mov
nop
adc
add
outsb
loopne
mov
add
add
and
add
cld
pop
cmpsl
clc
mov
leave
dec
jnp
icebp
aad
mov
pop
or
stos
inc
add
adc
add
lcall
fwait
jb
add
add
or
scas
clc
cmp
cmp
dec
stc
sti
xlat
pop
jmp
inc
add
inc
add
mov
add
ss
add
add
pusha
add
and
add
test
dec
movsl
clc
sar
leave
dec
pop
mov
clc
pop
in
arpl
add
dec
cmp
clc
inc
clc
sbb
pop
lods
jb
add
add
add
fwait
adc
add
pop
mov
add
add
add
enter
add
std
fwait
aam
nop
daa
clc
and
call
lcall
add
adc
add
std
xchg
xchg
scas
loope
xbegin
xchg
out
mov
clc
pusha
add
mov
hlt
xor
add
cmp
and
add
add
cmp
add
or
sub
add
mov
mov
add
add
xchg
outsb
popa
add
mov
inc
clc
testb
or
add
out
loope
pusha
add
jl
add
and
add
push
ljmp
mov
sahf
loope
ret
cmp
clc
lea
inc
clc
movsb
clc
inc
clc
dec
fistps
add
add
add
sarb
push
dec
ret
pop
out
sahf
and
add
clc
in
sbb
push
mov
add
pushf
cmp
clc
movsb
clc
push
add
add
add
add
adc
add
add
xor
add
lods
lea
add
lods
fstps
hlt
js
add
add
lret
sub
adc
clc
imul
clc
xabort
clc
das
push
clc
cmc
mov
nop
and
add
jmp
clc
or
ret
clc
sub
xchg
mov
ret
or
mov
mov
movsl
clc
cmpsb
clc
clc
xchg
push
add
pop
add
mov
add
add
clc
cmpsb
clc
push
push
add
mov
clc
cmc
cmp
add
out
std
cwtl
fldl
clc
mov
push
dec
notl
cs
int3
jmp
add
mov
jo
add
jle
mov
hlt
xchg
lret
pop
pop
pushf
inc
add
cmp
xchg
out
pop
je
cwtl
inc
add
scas
xchg
dec
dec
mov
cmc
mov
leave
or
adc
add
add
add
repz
add
bound
add
dec
fsubrl
cld
jnp
inc
add
icebp
sarl
mov
push
add
dec
ret
clc
adc
add
add
add
add
in
inc
clc
cwtl
aas
aad
ret
clc
out
sbb
dec
scas
mov
movsb
clc
ret
mov
sar
cltd
xchg
cltd
movsl
clc
xchg
movsb
clc
pop
insb
cmpsl
clc
lock
push
add
ss
clc
fisubs
add
add
jae
add
clc
test
push
sbb
adc
add
mov
fstpl
popa
add
cmp
int3
sub
ja
ret
cs
add
cmp
popf
into
pop
ret
int
jmp
in
in
out
push
jmp
clc
pop
call
mov
add
jecxz
popf
lock
xor
add
inc
clc
fisttps
scas
gs
pusha
add
jl
add
xchg
cmp
cmp
cld
jb
add
cmpsl
clc
cmp
es
loop
fisubs
add
pop
cmp
clc
cwtl
push
cltd
mov
clc
mov
clc
clc
add
mov
fcomp
hlt
out
jae
add
jae
add
cmp
clc
mov
int
clc
mov
lahf
rclb
add
loop
test
mov
fs
inc
add
dec
jno,pn
add
clc
sub
and
add
clc
test
xchg
cs
insl
mov
sar
clc
and
add
sbb
add
and
add
add
shll
add
xchg
test
clc
adc
add
clc
or
sbb
test
in
xchg
xchg
sbb
add
fcmovb
clc
ja
clc
ss
add
leave
sarb
je
and
add
insb
jg
cmp
add
and
add
mov
clc
fsts
add
ret
movsl
clc
inc
clc
pop
test
fdivrl
and
cmp
clc
jl
sub
add
xchg
std
dec
pop
jno
add
add
add
add
add
in
fwait
addr16
mov
add
add
jae
add
ret
push
test
jl
mov
add
xabort
cltd
cmp
pop
pop
cs
pop
mov
idivl
popa
add
icebp
cmp
sbb
add
fldl
mov
add
pop
mov
scas
or
mov
loope
push
outsb
notl
add
add
mov
clc
sub
add
add
enter
push
pop
cmp
add
clc
outsl
movsl
clc
fcomip
push
or
add
xor
dec
flds
add
add
add
add
jbe
add
push
xor
add
xchg
das
and
add
add
clc
in
push
clc
bound
add
add
push
add
push
clc
fistpll
daa
clc
mov
mov
add
add
add
gs
push
rclb
add
add
add
mov
add
inc
clc
and
add
add
push
movsl
clc
dec
push
add
mov
dec
sbb
push
ret
cs
daa
clc
in
ficoms
iret
aam
clc
pop
mov
clc
test
add
add
add
rcl
sbb
clc
call
fisttpll
add
lahf
insb
adc
add
inc
add
into
cmp
cmp
add
jmp
clc
div
jmp
aas
mov
adc
add
or
clc
faddl
push
add
fidivl
pop
or
jo
add
add
jae
add
pushf
xor
clc
mov
data16
fnstsw
inc
clc
jno
add
add
lahf
movsb
clc
in
outsl
xchg
test
out
outsb
into
jecxz
je
clc
cmp
shrb
stos
mov
fs
icebp
add
add
add
ja
add
mov
aas
aaa
adc
add
add
test
add
add
push
shll
out
jecxz
adc
add
mov
add
add
sub
add
fisttps
sub
clc
fbstp
add
cmp
pop
test
aaa
faddl
add
sub
clc
jg
cs
fdivr
dec
jmp
xor
add
add
sbb
and
add
clc
jbe
stos
movsl
clc
inc
clc
add
add
cli
jb
add
add
add
adc
add
mov
imul
clc
mul
clc
clc
mov
adc
add
sub
clc
adc
add
or
add
xor
dec
mov
sar
jb
add
cmpsb
clc
pop
hlt
cmp
add
jmp
add
add
add
pop
mov
clc
dec
sar
ja
clc
sbb
inc
add
sub
rolb
add
test
cmp
jns
clc
int
add
xor
clc
dec
lret
jo
add
push
add
jp
mov
or
sarl
clc
and
add
inc
add
inc
clc
decl
addr16
out
or
sub
sbb
aas
es
call
jns
add
add
clc
repz
clc
enter
push
cmp
clc
inc
add
imul
add
sub
xor
pop
das
cmp
add
and
add
jnp
mov
leave
mov
add
mov
mov
sbb
scas
push
mov
mov
inc
add
bound
add
clc
jo
add
add
mov
mov
jp
clc
aas
adc
add
add
clc
inc
clc
pop
in
outsb
cwtl
dec
jecxz
fisubs
xlat
lret
adc
clc
test
aaa
mov
add
jns
add
mov
cld
fnstsw
fmull
add
lahf
into
sar
clc
out
jecxz
xchg
sub
movsl
clc
push
sub
fs
into
dec
xchg
push
clc
scas
pop
xor
add
int
xchg
fld
clc
call
bound
add
adc
add
inc
add
imul
mov
clc
add
add
in
nop
lret
fcoms
push
mov
adc
and
add
add
pushf
jmp
das
jecxz
and
cmp
xor
add
clc
inc
add
gs
cltd
daa
clc
std
and
add
int
xor
mull
xor
jns
mov
clc
enter
cmpsb
clc
cmpsb
clc
fcomps
clc
xchg
cmp
xchg
and
add
clc
cmpsb
clc
mov
or
add
clc
sub
add
clc
jg
dec
dec
or
out
xchg
leave
test
dec
lea
mov
stos
jp
inc
add
sar
or
clc
addr16
jne
clc
jno
add
fisubs
pop
out
mov
clc
mov
adc
add
add
out
hlt
stc
or
add
fs
add
add
clc
mov
pop
cmpsl
clc
xor
add
add
jns
adc
add
clc
fdivl
add
dec
and
add
cmp
and
repz
lret
clc
ds
mov
cmc
popa
add
mov
imul
add
cltd
fdivp
add
add
cmp
mov
jns
inc
clc
mov
add
add
and
add
jns
xor
add
add
dec
cmp
clc
inc
clc
cmp
add
scas
inc
add
push
pop
lcall
sub
add
inc
clc
jecxz
dec
mov
dec
daa
clc
cmp
mov
add
and
add
jbe
arpl
add
pop
aam
push
imul
cltd
cmp
clc
cmp
fsubs
cli
enter
sar
cmp
fsubs
add
sar
clc
addr16
push
scas
cmp
jmp
clc
fdiv
int3
jge
add
mov
pop
pop
insl
pop
inc
add
pop
sub
clc
mov
add
add
imull
adc
add
imull
clc
and
add
add
js
clc
cmpsl
clc
push
stos
das
lahf
pop
mov
adc
add
test
dec
or
add
dec
sub
mov
lods
jae
add
js
dec
adc
add
fnsave
xor
fcoms
xor
aad
hlt
adc
add
add
adc
add
add
fcmovu
inc
add
cmp
dec
pop
stc
leave
push
add
mov
add
xchg
cmp
clc
int3
mov
sub
movsb
clc
nop
mov
clc
lret
jae
add
add
inc
clc
sub
mov
negl
clc
xor
add
clc
test
pop
out
sub
add
push
sub
imul
clc
mov
jge
mov
int
add
mov
clc
cmp
pop
mov
iret
mov
dec
mov
jo
add
nop
xchg
pop
sbb
fdivr
push
add
lods
mov
clc
lcall
mov
cmp
clc
fdivp
hlt
movsl
clc
gs
aam
add
pop
fwait
mov
movzwl
add
lods
xor
add
add
js
pop
cmp
sub
outsl
rcll
add
push
add
cmp
clc
or
pushf
je
add
mov
cwtl
inc
add
gs
push
add
xor
aam
aad
in
aas
int
pushf
pop
scas
clc
dec
into
mov
lcall
clc
push
add
call
or
clc
lret
clc
add
add
fwait
xabort
add
filds
clc
repz
jnp
arpl
add
jl
add
loop
fistl
clc
inc
add
sbb
adc
add
xchg
in
fstp
inc
add
xchg
jo
add
add
ret
clc
mov
sub
clc
and
add
inc
clc
test
add
add
dec
and
add
clc
sbb
add
lahf
out
test
cmp
push
add
scas
ret
clc
test
lock
xchg
adc
add
call
sbb
pop
sub
daa
clc
fs
pop
clc
mov
sub
add
jp
std
xabort
or
inc
add
cmp
mov
add
clc
pop
or
clc
push
cs
add
in
pop
clc
gs
out
pop
jge
test
aam
mov
ret
push
mov
pop
ja
rep
sub
clc
pusha
add
mov
add
clc
aaa
push
add
aam
clc
or
imul
add
mov
push
clc
cmp
clc
mov
clc
popf
jl
jae
add
clc
fstl
add
clc
sar
add
movsl
clc
cwtl
xchg
adc
add
int3
cmp
pop
push
pusha
add
repz
lahf
shrb
xchg
leave
scas
pop
loopne
push
clc
or
add
lea
add
mov
inc
clc
inc
add
ret
clc
mov
clc
nop
push
add
jno
add
inc
add
inc
add
stc
popa
add
mov
mov
insl
in
loop
packsswb
add
es
inc
add
mov
lea
std
test
stos
sub
add
fs
lret
test
clc
inc
add
sti
bound
add
cmp
shlb
aad
std
adc
add
clc
lret
lahf
xor
add
shll
add
aas
push
mov
add
insl
stos
lea
lods
fnstcw
sub
mov
pop
sbb
add
int
clc
push
add
lock
sub
add
clc
push
jg
add
xabort
cwtl
xor
add
sub
cmp
clc
inc
clc
cltd
movsl
clc
mov
aaa
rorl
dec
xchg
pop
dec
int
or
mov
mov
mov
nop
testb
add
add
add
mov
clc
stos
dec
or
mulb
clc
pop
jl
stc
xchg
daa
clc
and
xchg
mov
mov
jnp
add
out
stos
and
add
add
add
jge
add
call
aam
lret
mov
pop
scas
scas
add
add
clc
sub
flds
clc
cld
das
test
imul
ds
push
xchg
and
add
add
dec
enter
add
adc
inc
add
mov
push
icebp
sbb
clc
mov
mov
addr16
cmp
enter
jg
mov
push
data16
dec
cmp
clc
mov
sbb
faddl
add
mov
xchg
sbb
add
add
or
cmp
jp
and
add
dec
popl
push
add
xchg
sbb
lea
pop
cmpsb
clc
sub
in
imul
push
addr16
mov
insb
pop
clc
xchg
mov
add
jl
clc
cmp
add
pop
push
mov
clc
inc
add
cmp
test
clc
jle
pop
jmp
xor
imul
cmp
lea
add
add
mov
add
xchg
insb
test
xor
jne
add
mov
cmp
push
add
sarl
add
icebp
sub
xchg
adc
add
pop
icebp
adc
add
clc
add
add
sahf
add
add
clc
sbb
or
jo
add
cmp
add
mov
scas
mov
mov
in
pop
mov
clc
jbe
push
jge
sub
add
outsl
in
sub
clc
out
push
adc
add
adc
add
psrlw
add
leave
or
mov
jle
clc
xchg
xor
add
add
scas
sar
outsl
adc
add
cmp
add
xchg
dec
pop
scas
daa
clc
cmpsl
clc
mov
clc
or
clc
cmp
sti
movsl
clc
jg
clc
je
mov
push
jl
xchg
hlt
push
cmp
add
aaa
sbb
aad
fdivl
fmuls
je
jge
inc
clc
cltd
mov
pop
test
add
add
add
test
dec
enter
jl
clc
inc
add
mov
inc
add
int3
sbb
adc
loope
mov
add
jg
jae
add
push
repnz
mov
es
cmp
xor
add
addr16
sbb
clc
cmp
and
mov
ror
pop
xchg
xor
add
clc
clc
xchg
sub
clc
imul
add
pop
inc
add
cmp
and
add
dec
into
add
ljmp
gs
jle
xor
add
add
sub
inc
clc
push
aas
adc
add
pop
inc
add
in
xchg
scas
movsl
clc
mov
xbegin
add
in
adc
add
cmp
fnstcw
sbb
clc
mov
adc
add
stc
int
push
add
push
into
inc
clc
cmpsl
clc
lock
add
clc
leave
sbb
clc
vmovups
add
mov
shrl
movsb
clc
test
add
push
in
fiadds
sub
sub
aam
add
sbb
test
inc
add
and
add
add
clc
dec
test
fistpll
dec
sub
dec
sub
clc
jp
clc
and
add
outsl
xchg
cmp
cltd
int
push
add
cld
pop
iret
lahf
xchg
push
std
stc
mov
add
mov
mov
clc
lret
sbb
data16
pop
call
clc
inc
clc
and
add
clc
rcl
rcll
add
jmp
pop
call
sub
pop
int
clc
cmpsb
clc
outsl
outsb
fmull
clc
xlat
push
xchg
pop
mov
clc
daa
clc
pushf
push
ss
stc
xor
dec
clc
es
xchg
outsb
mov
inc
add
rcrb
clc
add
add
and
mov
clc
pop
sbb
clc
dec
call
clc
gs
sar
add
pop
clc
aaa
mov
jno
add
add
cltd
mov
pop
clc
data16
and
add
cmp
clc
pop
add
xor
add
clc
pusha
add
lret
adc
add
sbb
inc
add
out
ljmp
sbb
add
lock
clc
ja
or
add
scas
pop
xchg
push
pop
aam
clc
fs
stos
hlt
cmp
clc
sub
add
aaa
xchg
clc
fnstcw
adc
add
mov
jge
add
sbb
cmp
xor
add
cmp
cwtl
pop
jle
add
fmuls
clc
xchg
cmpsl
clc
cli
aad
jae
add
clc
fbld
pop
std
cmc
pop
dec
push
xor
add
pop
push
lret
push
adc
add
sar
clc
pop
movsb
clc
das
mov
add
clc
and
or
lret
mov
sub
dec
mov
add
jle
jae
add
add
clc
arpl
add
adc
sbb
mov
add
cli
pusha
add
xor
add
cmp
scas
imul
loopne
jnp
xor
add
cltd
jo
add
or
in
jo
add
add
aad
lock
inc
add
js
add
push
cltd
mov
or
dec
push
mov
add
icebp
sbb
inc
add
mov
pop
clc
cs
lret
inc
add
add
add
loopne
push
add
movsb
clc
pop
sub
cmp
add
xchg
jo
add
inc
clc
add
cmp
inc
clc
notb
xchg
lret
add
mov
aam
add
scas
xchg
xor
add
push
clc
sub
pop
int3
or
out
movsb
clc
movsl
clc
jne
clc
hlt
xlat
ds
fnsave
aas
cmpsl
clc
push
clc
mov
clc
pop
jo
add
repz
add
mov
add
add
xchg
mov
scas
divb
add
sub
sahf
push
add
pop
pop
popf
fcompl
add
inc
add
xbegin
addr16
xchg
mov
adc
add
ja
add
mov
add
add
fucomi
stos
add
add
popf
cmp
cmp
clc
sub
xlat
or
pop
cld
pop
clc
mov
push
or
clc
jle
add
jns
jo
add
xchg
xchg
hlt
xchg
movsl
clc
movsl
clc
xor
add
and
add
mov
fstp
nopl
clc
cs
cltd
xor
add
sub
add
jp
push
insl
pop
clc
leave
adc
add
cmp
inc
clc
jle
rol
clc
mov
clc
add
add
clc
jo
add
xchg
and
mov
mov
clc
jnp
pushf
add
or
test
cmp
mov
add
or
xchg
cmc
inc
add
add
clc
add
add
arpl
add
pop
inc
clc
enter
notb
clc
push
pop
inc
clc
ret
mov
fiaddl
add
das
push
int3
popa
add
jae
add
icebp
pop
test
fs
add
push
test
fildll
je
add
dec
lret
pop
jne
xchg
fs
lahf
jo
add
clc
pop
test
not
cmp
add
xor
mov
and
add
loop
nop
mov
sbb
clc
cwtl
dec
aam
clc
hlt
xchg
cltd
add
add
clc
xor
add
cmp
add
xchg
xor
add
ret
clc
int3
in
adc
jns
clc
push
add
enter
add
adc
push
sti
loopne
inc
clc
lret
out
mov
jo
add
mov
ljmp
dec
cmp
cmp
push
add
stos
out
bound
add
add
clc
dec
cs
add
mov
or
std
cmp
add
cmpsl
clc
call
stos
xchg
test
clc
sar
push
imul
add
icebp
int3
arpl
add
in
sub
clc
and
add
loop
bound
add
add
roll
add
add
dec
cmc
ffreep
clc
xor
and
add
insl
jbe
clc
fisubl
mov
mov
jge
pop
das
mov
mov
add
test
inc
clc
mov
sar
movsb
clc
xchg
daa
clc
clc
arpl
add
cmpsl
clc
sub
sub
cmp
clc
mov
add
dec
aas
aaa
pop
outsb
sub
lods
lods
into
inc
add
mov
stos
dec
scas
pop
fildll
adc
cmp
jns
clc
movlps
add
add
dec
jno
add
addr16
hlt
out
addr16
daa
clc
fidivrs
clc
sbb
dec
mov
inc
clc
push
xchg
add
add
sub
mov
push
add
or
adc
xor
add
add
cmp
clc
popa
add
xor
mov
clc
pop
es
ret
dec
iret
and
add
sti
call
add
clc
adc
add
sub
jp
cmp
clc
inc
clc
clc
add
add
or
outsb
scas
dec
ss
add
mov
loope
inc
add
pop
pusha
add
and
add
add
lea
add
or
add
mov
mov
add
mov
es
lcall
xchg
cmpsb
clc
mov
fistpll
xabort
clc
clc
scas
mov
cwtl
sbb
daa
clc
fldenv
add
xchg
cmc
mov
jmp
clc
sar
add
fldenv
shrl
cmp
out
jno
add
jp
rcr
fdivrl
pop
clc
xor
fbstp
mov
roll
add
rclb
clc
xor
add
or
jno
add
stos
lods
mov
daa
clc
dec
shr
or
pop
or
dec
inc
clc
fistpll
fwait
xchg
imul
pop
repnz
hlt
outsb
xchg
scas
aam
hlt
sub
mov
out
mov
lret
sar
add
cmp
clc
out
loope
push
xor
add
add
mov
push
add
pop
rorl
mov
dec
int3
fmull
add
jecxz
sbb
shrb
add
cmp
add
fwait
pop
lods
sbb
add
mov
add
adc
add
clc
push
cwtl
sbb
and
add
clc
daa
clc
jp
add
mov
sbb
mov
arpl
add
add
lcall
sub
clc
mov
movsb
clc
sub
cmp
add
clc
pop
push
loop
aad
and
add
je
add
cmpsl
clc
fidivl
loopne
xchg
jecxz
in
push
scas
mov
add
xchg
mov
fmuls
hlt
mov
ret
inc
add
repnz
xchg
sub
add
stos
ret
clc
xbegin
pop
jle
loop
sahf
rep
clc
into
sti
std
or
add
imull
shlb
clc
pop
pop
sbb
arpl
add
outsl
mov
clc
test
rcrb
and
mov
mov
push
clc
out
mov
leave
and
inc
clc
test
cmp
add
stos
xchg
je
lock
add
add
sub
clc
jne
pop
or
clc
jp
arpl
add
das
xor
add
add
add
mov
add
inc
add
add
add
clc
insl
lahf
mov
add
mov
add
add
pushf
sub
clc
fldenv
add
jno
add
enter
add
add
and
add
cwtl
enter
adc
add
clc
inc
clc
jne
inc
clc
dec
loope
ffreep
clc
sbb
repnz
sbb
loopne
inc
clc
leave
lcall
clc
cli
sbb
in
or
call
repnz
aad
jmp
xor
add
rorl
add
mov
lea
mull
add
fsub
clc
shlb
add
add
add
mov
clc
nop
jae
add
in
cwtl
lret
add
sbb
pop
sub
fwait
sahf
jno
add
add
ljmp
add
fists
dec
cltd
arpl
add
push
cli
insl
sti
call
sbb
cmp
clc
pop
mov
loope
or
clc
dec
fnstenv
add
add
shll
clc
clc
push
sub
outsb
test
test
mov
bound
add
xchg
cmp
clc
cltd
xchg
mov
clc
outsl
fwait
dec
ja
sar
add
insl
inc
clc
gs
xchg
pop
decb
mov
jmp
aam
icebp
push
loop
aaa
mov
cld
fdivrl
mov
pop
dec
nop
jecxz
data16
mov
in
xchg
add
aam
lods
add
aaa
inc
clc
fsubl
add
addr16
cmp
mov
clc
cmp
lahf
ds
xchg
adc
add
add
inc
clc
into
and
clc
push
add
pop
inc
add
cwtl
aam
pop
jno
add
clc
dec
push
clc
ljmp
daa
clc
mov
adc
add
popf
fcmovnu
stos
dec
fcoms
scas
push
mov
cli
push
jbe
mov
push
add
or
clc
adc
add
push
clc
sbb
je
clc
cltd
dec
push
dec
pop
xor
add
sbb
dec
popa
add
mov
add
sbb
add
cwtl
imul
mov
loop
jnp,pn
inc
add
gs
fs
out
sub
mov
mov
mov
xor
clc
sbb
in
mov
testl
add
jae
add
emms
jns
mov
sbb
add
jnp
add
and
add
add
add
fwait
jbe
dec
xor
je
or
xor
add
lods
inc
clc
lods
mov
add
push
add
sti
dec
fistps
icebp
fiaddl
into
cmp
sbb
sbb
add
cli
iret
sti
sbb
add
xchg
push
clc
sti
lret
es
xchg
lret
mov
int3
pusha
add
ffree
clc
push
daa
clc
lods
dec
xchg
adc
add
add
in
es
imul
clc
sar
clc
mov
jl
clc
in
sbb
call
push
outsb
hlt
leave
insl
popa
add
int
pop
or
mov
add
mov
add
clc
mov
push
clc
mov
add
hlt
xchg
inc
add
cmp
sti
push
add
add
add
lods
pusha
add
sbb
mov
lcall
add
repz
in
dec
lcall
mov
push
or
push
clc
mov
clc
sti
insl
addr16
and
add
gs
pop
adc
xor
add
scas
insl
push
add
cwtl
jne
mov
jnp
clc
divl
ja
push
add
add
add
add
push
add
push
add
dec
mov
jno
add
stc
cmp
negl
aad
clc
jns
clc
cmp
xchg
mov
clc
mov
pop
cmp
mov
clc
out
xor
add
jae
add
add
test
xchg
push
add
popa
add
clc
shl
clc
xchg
push
clc
mov
clc
pop
stos
cmc
cmp
cmp
pop
sub
movsl
clc
sbb
add
sar
clc
mov
xchg
pop
jae
add
clc
outsl
bound
add
pop
or
clc
sahf
fisttps
test
clc
push
add
repnz
sar
sti
mov
cmpsb
clc
xlat
sbb
xlat
ret
clc
jne
sahf
jae
add
aam
clc
or
stos
jo
add
inc
add
fstpl
add
test
adc
dec
and
add
stos
in
push
mov
cmp
in
addr16
jns
inc
add
cmpps
rorb
mov
mov
sub
into
dec
fistl
add
insl
jge
out
mov
clc
fnsave
clc
adc
add
push
cmp
add
add
push
add
push
dec
jno
add
xchg
mov
ds
mov
add
mov
insl
push
sbb
fisubs
and
add
jae
add
clc
fwait
cltd
sub
add
das
and
add
jp
ds
mov
add
testl
clc
sar
pop
cmp
cmp
dec
shl
mov
mov
xchg
jae
add
add
push
dec
dec
mov
mov
testl
mov
xlat
sub
stc
and
clc
cwtl
cltd
inc
clc
pop
push
add
xor
add
mov
jb
add
cs
add
std
jge
clc
movsb
clc
inc
clc
test
sahf
mov
jo
add
add
clc
inc
add
pop
xchg
cmovg
add
ficoms
add
add
or
push
jle
mov
fstpt
cmp
movsb
clc
cwtl
inc
add
jl
clc
ret
clc
xchg
out
addr16
push
clc
mov
clc
das
mov
clc
add
add
cmc
pushf
xchg
cmp
and
add
add
ljmp
mov
clc
add
add
cmp
add
and
add
clc
and
imul
xchg
pop
push
std
mov
push
mov
add
pop
xchg
fnstcw
int
clc
xchg
cmp
aam
fs
pusha
add
add
add
sar
dec
jecxz
or
das
repnz
clc
sub
jo
add
jne
into
aam
xchg
test
in
stos
mov
bound
add
fs
xchg
inc
clc
lods
dec
inc
clc
sub
inc
add
lods
cmp
and
in
stos
add
add
mov
sbb
clc
cmp
jo
add
cwtl
mov
add
aas
int3
cmp
out
fsts
movsl
clc
fmull
clc
inc
clc
sbb
clc
pop
rolb
add
addr16
cltd
jmp
clc
jecxz
push
fadds
scas
sub
clc
mov
add
mov
pop
sarl
popa
add
xchg
sbb
pop
outsl
fs
mov
fcoml
ljmp
jle
xchg
xor
hlt
jae
add
add
es
adc
cmp
clc
push
cmp
cmp
sbb
sahf
clc
ja
push
jl
sub
add
dec
push
clc
ficompl
clc
sub
clc
rcrb
push
out
cli
test
or
mov
add
das
xor
add
add
add
push
add
mov
mov
clc
cmp
add
jno
add
pop
mov
clc
and
stos
call
mov
add
add
mov
lahf
ds
add
ret
clc
sti
scas
cmp
popf
cmp
adc
add
stos
pop
std
pusha
add
test
pop
es
sbb
movsb
clc
jmp
in
or
cmpsb
clc
push
add
stos
dec
push
dec
cltd
enter
add
repz
test
stos
xor
add
clc
in
je
notb
clc
bound
add
je
imul
mov
dec
inc
clc
mov
pop
cmc
mov
hlt
xor
add
add
mov
clc
mov
add
cmp
pop
or
nop
pop
test
push
clc
imul
es
cs
pushf
push
add
arpl
add
add
add
add
push
or
add
mov
add
jae
add
clc
push
add
mov
mov
clc
mov
clc
or
add
push
cs
clc
sub
popf
mov
push
add
fistl
add
cmp
add
mov
mov
pushf
decl
xchg
int3
outsl
insl
lcall
fs
jecxz
dec
and
clc
jg
clc
mov
sbb
add
pop
cmpsl
clc
inc
add
iret
or
ret
clc
ja
dec
movsl
clc
jp
fcomps
dec
nop
cmp
dec
push
add
cmc
push
cli
sbb
dec
sub
jae
add
add
clc
cmp
add
mov
or
add
push
or
fsubrs
sbb
clc
out
adc
add
xchg
adc
add
shll
loope
addr16
cmp
dec
sub
clc
ja
mov
fidivl
fsubl
add
scas
lret
cmp
add
jl
clc
bound
add
push
cmp
add
add
mov
inc
add
fstl
add
ds
clc
inc
add
mov
add
int
mov
push
add
sbb
mov
clc
or
add
and
add
push
sbb
jmp
inc
clc
negl
in
dec
test
clc
gs
rcrb
mov
jnp
add
clc
call
add
add
add
clc
jnp
add
out
adc
add
add
add
fildll
add
or
in
fiadds
add
clc
sbb
clc
je
jne
adc
add
jp
sub
push
sub
mov
sbb
ljmp
test
incl
add
xlat
inc
clc
mov
lret
and
add
add
add
xlat
pop
out
and
add
clc
jecxz
mov
and
add
dec
sbb
or
mov
aas
lcall
test
push
adc
add
add
mull
xor
add
add
clc
jnp
cmp
add
cs
add
push
add
mov
mov
in
std
stos
notl
or
inc
clc
mov
add
add
lock
xchg
cmp
add
push
mov
add
int3
add
sub
lea
sar
sub
add
call
clc
inc
add
cmc
cmpsl
clc
nop
lahf
repnz
cld
cmp
fcomps
cmpsl
clc
fidivrs
scas
inc
clc
test
jge
add
push
cs
or
jmp
xabort
sar
xlat
add
bound
add
adc
add
add
in
and
add
push
out
or
pop
loop
push
dec
dec
rclb
add
mov
pop
pop
xchg
xchg
add
add
add
clc
xor
inc
add
sub
add
sbb
push
push
add
push
add
dec
and
add
pop
xchg
mov
xor
add
testl
fmull
cmp
loop
das
cltd
out
idivl
jg
clc
sub
clc
cmp
jo
add
adc
add
add
out
out
add
add
mov
add
test
lret
clc
inc
clc
mov
out
inc
add
mov
cmp
sbb
clc
leave
mov
cmpsb
clc
in
mov
push
popa
add
xchg
cmp
add
mov
add
stc
stos
cmp
xabort
or
add
cmp
mov
add
outsl
fucom
clc
inc
add
push
rclb
mov
add
mov
test
add
clc
push
jb
add
pop
movsb
clc
mov
clc
add
add
add
push
clc
ret
or
add
hlt
inc
add
loop
stos
mov
js
mov
sbb
bound
add
add
clc
addr16
jl
clc
outsl
xabort
clc
mov
mov
ret
lods
cmp
jne
adc
add
aam
cmp
add
add
or
mov
add
adc
add
add
clc
mov
into
stos
pop
and
add
jne
clc
or
add
add
push
add
push
add
lcall
int
jecxz
gs
ret
clc
pop
cmp
je
add
data16
jmp
clc
mov
clc
inc
add
sub
xor
xor
adc
add
repz
add
add
clc
repz
add
dec
cltd
dec
inc
add
scas
dec
cmp
or
in
mov
data16
mov
inc
clc
jo
add
in
aam
mov
clc
cli
adc
add
clc
xchg
ds
clc
add
add
add
or
xlat
pop
pop
test
iret
jmp
inc
clc
add
add
jg
lret
lock
add
or
clc
push
jno
add
mov
add
test
push
jg
inc
clc
sub
add
mov
add
repnz
cmp
add
lret
sub
stos
lods
bound
add
sub
inc
clc
fsubp
clc
sar
or
stc
jl
ss
clc
mov
xchg
ficomps
jmp
inc
clc
out
cmp
clc
repz
sar
dec
xchg
ljmp
outsb
movsb
clc
sbb
xchg
insb
out
jae
add
add
fisubrl
sbb
test
sub
arpl
add
fwait
mov
loope
add
add
lret
add
add
push
add
ret
clc
std
xor
add
lcall
mov
mov
mov
addr16
and
add
cmpsl
clc
pop
incl
add
sub
clc
ds
jne
clc
sbb
mov
clc
fwait
inc
clc
movsl
clc
push
sub
test
mov
add
inc
clc
mov
bound
add
add
jno
add
pushf
mov
add
out
int
add
scas
sbb
pop
and
icebp
xchg
std
mov
mov
pop
out
scas
aam
clc
repz
mov
das
mov
add
clc
sub
add
inc
add
pop
xchg
jecxz
loop
cwtl
lahf
pop
clc
xchg
jae
add
lcall
xchg
mov
sub
add
dec
jmp
sar
test
hlt
dec
test
lahf
inc
add
aaa
and
insl
xchg
clc
sub
sbb
clc
push
jo
add
mov
clc
push
sub
mov
add
ret
clc
ss
clc
pop
clc
inc
add
mov
clc
aam
aaa
cmpsb
clc
loope
inc
add
jnp
ljmp
xchg
scas
push
cld
xchg
mov
add
mov
mov
push
clc
lods
clc
imul
mov
add
mov
mov
enter
or
out
fdiv
or
or
pushf
aaa
pop
lock
push
clc
mov
adc
add
jp
jb
add
pop
pop
daa
clc
jb
add
add
pop
xchg
adc
add
clc
adc
add
add
pop
int3
pop
sub
mov
clc
and
add
aaa
sub
fs
out
push
mov
inc
add
pusha
add
inc
add
std
jge
out
ds
int3
popa
add
mov
pavgw
mov
jl
xchg
mov
scas
cmp
and
add
cmp
clc
pop
clc
pop
clc
dec
data16
scas
testb
add
cmp
pop
cmp
leave
out
testb
add
add
add
das
in
fs
fists
add
out
adc
clc
hlt
imul
das
outsl
test
sub
sbb
or
cmc
jnp
mov
cmp
jo
add
pop
mov
clc
mov
insb
ret
sbb
mov
cmp
clc
popf
cmp
ret
clc
call
inc
clc
fnstsw
add
add
vorps
mov
sub
add
out
dec
and
std
pop
rcll
repz
add
add
dec
ljmp
jae
add
mov
clc
call
clc
cmp
adc
lods
lock
add
rcr
lods
iret
call
rcl
mov
add
in
enter
clc
lcall
gs
mov
clc
outsl
ja
clc
cmp
lea
clc
mov
add
lahf
ret
enter
add
cmpsb
clc
xchg
in
push
clc
sahf
movsb
clc
pop
sar
ja
sub
icebp
mov
clc
cmp
add
shlb
hlt
mov
cmpsl
clc
mov
xchg
lods
in
push
dec
mov
xchg
inc
add
mov
clc
in
test
add
and
add
xlat
imul
idiv
das
rolb
add
iret
push
clc
add
add
lods
mov
add
bnd
push
iret
push
fs
xchg
popa
add
movsb
clc
test
pop
mov
mov
frstor
add
add
add
xchg
or
jp
adc
add
ret
clc
cmp
add
out
addr16
jnp
jbe
and
add
and
add
es
cmpsl
clc
fs
ds
add
repnz
pop
adc
sub
je
add
pop
pop
mov
out
sub
mov
clc
inc
add
xor
add
add
or
add
xbegin
lret
leave
push
mov
sbb
in
in
push
add
in
push
mov
sub
clc
outsb
and
add
add
dec
or
jmp
xchg
cmp
lea
insl
jne,pn
sbb
adc
xchg
out
inc
add
mov
add
je
sbb
gs
cmp
jne
clc
mov
or
add
clc
jnp
outsl
jl
adc
add
inc
clc
and
jbe
push
in
sbb
add
add
mov
add
adc
add
add
clc
sbb
xor
add
leave
rcl
inc
clc
sbb
out
out
scas
pop
lods
dec
fisttpl
clc
pop
jle
clc
movsb
clc
out
mov
clc
insl
push
inc
add
cmpsl
clc
mov
add
or
loopne
lsl
add
xchg
mov
repz
cmp
lock
adc
add
popf
push
jnp
inc
clc
gs
fwait
lcall
gs
or
add
mov
xabort
jb
add
ret
clc
fs
pop
clc
pusha
add
pop
adc
add
add
jbe
clc
or
mov
das
lret
sbb
clc
xchg
xchg
adc
add
int3
dec
fcmove
notb
into
jns
mov
inc
add
adc
add
clc
sbb
ret
clc
jne
imul
add
xchg
js
and
add
xor
add
add
dec
mov
mov
xchg
sbb
test
dec
sar
into
mov
movsl
clc
fucomip
pop
aas
cmp
lret
or
notl
add
ret
cmc
sub
add
add
cmp
add
in
adc
add
mov
mov
clc
jge
push
cli
mov
or
mov
xchg
add
add
outsb
ljmp
test
clc
lret
outsb
outsb
xor
add
add
add
mov
mov
or
fwait
adc
add
clc
aaa
mov
clc
xlat
xbegin
cmp
add
or
add
add
push
clc
jg
icebp
mov
xchg
inc
clc
ds
inc
add
sahf
push
add
add
sub
clc
jmp
mov
mov
xor
add
add
clc
std
pop
cwtl
and
push
clc
or
repnz
clc
inc
clc
mov
add
out
xchg
pop
and
sbb
roll
add
mov
popf
cmp
push
and
add
jg
lods
lret
inc
clc
daa
clc
and
add
jo
add
pop
mov
in
mov
lret
leave
inc
clc
jg
cli
fdivp
and
add
xlat
in
je
clc
outsl
iret
jp
sub
clc
gs
cmc
dec
cmp
clc
xabort
mulb
pop
sub
add
lock
add
clc
inc
clc
push
add
push
add
sub
clc
in
addr16
cmp
clc
test
insl
jp
push
add
clc
xchg
mov
lods
fsubrp
sahf
push
jecxz
cmpsl
clc
ds
pop
clc
sub
clc
add
add
xor
add
inc
clc
cmp
add
push
add
fcompl
and
add
popf
popf
or
add
and
aaa
xor
ja
sub
rolb
clc
mov
mov
lods
mov
clc
jge
cmp
clc
or
insb
xchg
mov
add
add
cmp
sub
mov
clc
jmp
addr16
fs
cmp
clc
cld
aaa
sbb
out
ds
inc
clc
leave
scas
or
lea
add
es
pop
in
ret
clc
lcall
xbegin
add
cmp
clc
xor
add
cmc
aas
xchg
aas
and
in
cmp
clc
lock
clc
add
add
adc
add
xchg
fisttpl
clc
cmp
add
cmp
add
cli
xor
add
add
add
xbegin
mov
clc
test
xor
add
add
hlt
mov
repz
adc
add
mov
clc
shl
clc
stc
push
add
sub
cld
aad
pop
pop
icebp
pusha
add
addr16
imul
xor
outsl
dec
scas
xchg
cmp
add
test
aam
clc
nop
ret
popa
add
dec
outsl
cwtl
xor
sbb
decb
gs
pop
push
clc
js
mov
mov
cs
push
sub
aas
insb
fcompl
xchg
iret
je
cmc
sub
cmp
fwait
mov
clc
je
xlat
push
add
jns
js
add
jne
add
sub
aas
mov
add
add
in
or
stc
or
clc
outsl
push
add
setl
cld
pop
mov
mov
cmp
es
vzeroupper
test
mov
mov
pop
aam
xor
add
add
adc
jo
add
sub
add
cs
xor
jg
mov
xchg
clc
mov
clc
jg
add
mov
add
rolb
add
das
insl
je
add
repz
sbb
clc
cmp
clc
fnstsw
jp
aaa
daa
clc
cli
repz
repnz
xchg
mov
pop
xchg
arpl
add
sbb
shll
clc
in
mov
in
cmp
and
add
pop
jl
jge
fidivs
pop
push
test
and
add
or
clc
das
xchg
movsl
clc
and
add
ja
or
clc
hlt
aaa
push
rorl
dec
rcrb
jnp
aaa
jne
push
inc
add
and
xor
add
cmpsb
clc
push
and
add
rorb
add
es
lods
push
add
pusha
add
dec
sar
outsl
mov
arpl
add
add
add
clc
jmp
jbe
add
jne
mov
out
outsl
xor
add
xor
add
sar
add
add
xlat
adc
add
add
jl
clc
aas
cmp
mov
jns
clc
pop
test
outsl
fisttps
adc
add
clc
movsl
clc
mov
clc
repnz
insl
das
or
clc
adc
add
dec
pop
popa
add
lods
fnstenv
add
movsl
clc
in
insb
sub
add
xchg
sar
cmp
aad
clc
cmp
sbb
cmp
add
mov
clc
into
or
add
mov
inc
add
outsb
push
add
mov
xchg
cmp
or
clc
sub
or
add
movsl
clc
fabs
clc
data16
ljmp
add
mov
mov
xbegin
clc
dec
add
add
loop
clc
push
add
iret
lods
and
add
test
add
call
aad
add
mov
mov
or
clc
popa
add
lods
and
add
jg
ss
out
or
insl
fildll
mov
add
lcall
add
add
sub
mov
clc
cmc
push
popa
add
std
icebp
ss
dec
mov
add
sar
push
fstpl
adc
add
das
leave
fisubrs
into
add
add
test
outsl
adc
add
xlat
cmc
in
and
add
mov
mov
xchg
call
je
add
xabort
jae
add
aam
clc
xchg
xchg
lods
in
adc
add
pushf
fsubr
push
and
add
mov
add
fsubrs
lock
add
ljmp
clc
fisubrl
imulb
cmpsb
clc
popa
add
mov
add
push
lret
xchg
jns
xor
bound
add
inc
clc
xlat
add
add
mov
aad
clc
mov
lods
pop
stc
pusha
add
or
clc
adc
add
cmp
iret
jnp
pop
mov
iret
cmp
jb
add
sahf
and
add
add
add
xor
add
sub
clc
mov
add
movsb
clc
pop
clc
cmp
gs
fcmovnu
flds
jmp
clc
xabort
xchg
jmp
clc
shll
clc
cmp
cltd
xor
add
test
jle
add
lods
xor
leave
pushf
inc
add
lret
outsb
adc
push
add
cmp
xor
add
add
add
mov
jp
add
mov
clc
dec
loopne
js
clc
and
add
jecxz
push
clc
mov
loopne
leave
jnp
sar
adc
add
cmp
add
xchg
lahf
add
add
jae
add
add
xchg
sti
mov
mov
or
jo
add
add
sar
cmp
clc
stos
jecxz
out
lret
sbb
add
push
add
adc
add
cmp
clc
xor
add
jb
add
test
add
xchg
sbb
add
mov
scas
test
add
mov
test
sbb
loop
cmp
hlt
loop
int3
jno
add
sbb
leave
mov
clc
push
add
inc
clc
cmp
add
push
fs
or
add
fwait
in
mov
clc
or
add
push
add
cld
test
test
xchg
xor
add
dec
push
out
cmp
cmpsl
clc
lock
clc
fs
clc
ret
ss
neg
xchg
scas
dec
mov
cmp
sub
add
cmpsb
clc
imul
push
add
fadds
int
pop
mov
cld
and
out
imul
repz
notl
movsl
clc
gs
sub
sub
adc
add
add
and
cmp
data16
xor
test
bound
add
xabort
clc
lret
mov
add
push
stos
jno
add
in
and
add
dec
lods
sar
clc
out
sub
jl
clc
pusha
add
in
std
add
add
lahf
push
in
cltd
pop
jle
lock
add
mov
clc
repnz
add
add
pop
clc
dec
fidivrl
add
add
add
add
add
in
xor
add
clc
cmc
out
and
es
leave
inc
add
mov
outsb
xor
adc
add
pop
addr16
nop
sbb
add
add
cmpsl
clc
stos
cld
cli
leave
xchg
popf
dec
cli
mov
lods
xchg
push
cmp
dec
mov
leave
xchg
pop
clc
xchg
push
sbb
clc
cmp
add
sbb
add
cmp
dec
das
or
out
lret
inc
add
inc
clc
pushf
sub
aas
mov
add
add
popa
add
fwait
mov
clc
aaa
xor
sub
jp
xchg
mov
cmp
add
enter
dec
cmp
jl
clc
push
mov
xor
add
jl
in
cld
pop
push
mov
test
add
hlt
clc
stos
push
or
add
cs
dec
dec
cmp
clc
fmuls
xor
add
xchg
cmp
add
ret
clc
sub
in
popa
add
jmp
int
dec
inc
add
push
cld
mov
clc
call
icebp
jl
lcall
fadds
sar
or
clc
mov
sub
sbb
clc
inc
add
mov
add
dec
data16
sar
sar
mov
clc
rorl
out
pop
cmp
mov
push
cmp
test
jp
add
bound
add
cmp
sub
shlb
add
pop
test
insl
cmp
clc
imul
inc
add
andps
ljmp
add
pop
dec
dec
dec
and
add
stos
push
add
repz
lods
dec
test
enter
add
cmp
add
xchg
stos
cmp
add
add
jne
sar
adc
add
push
stos
xchg
js
mov
ja
inc
clc
lods
gs
inc
clc
fstpl
cmp
cmp
add
clc
cmp
and
add
sbb
clc
xchg
and
add
mov
enter
or
add
dec
mov
sub
push
add
ror
xor
add
fcoms
clc
pop
cli
add
add
add
mov
adc
add
aam
into
ja
clc
rolb
add
out
push
das
lods
inc
add
xchg
jl
sub
add
lods
inc
clc
mov
add
adc
dec
jp
and
add
add
arpl
add
add
clc
mov
clc
lcall
xor
add
add
cwtl
pop
ljmp
clc
dec
ret
push
pop
push
xor
add
xchg
test
add
add
cmp
bound
add
inc
clc
loop
mov
clc
aaa
jge
clc
add
add
cmp
clc
mov
nop
ficomps
loope
add
add
jnp
popf
leave
gs
jle
cmp
fstl
add
outsb
push
add
jnp
cltd
ds
ret
clc
jp
adc
add
stc
aas
outsb
inc
add
shll
add
lods
ljmp
mov
mov
int
push
ljmp
scas
in
push
add
push
add
pop
pushf
ja
sub
scas
pop
sbb
aas
fmul
push
fsubl
cmp
imul
xor
add
push
add
sbb
clc
cmp
add
xbegin
clc
int
add
cmp
inc
clc
pushf
incb
and
add
jp
inc
clc
dec
mov
add
pop
push
clc
or
cmp
xchg
mov
clc
xchg
mov
es
stos
dec
cld
pop
addr16
push
add
cmc
imul
clc
mov
clc
mov
add
mov
xor
adc
add
into
sahf
sti
pop
cmp
fcompl
xchg
lods
mulps
fldenv
and
idivb
es
out
mov
add
inc
add
lret
ficoml
clc
jb
add
lahf
add
add
dec
or
push
inc
add
mov
xchg
repnz
add
in
mov
adc
add
clc
lahf
cs
fmul
adc
add
mov
pop
clc
jne
clc
pop
in
adc
add
clc
cmp
add
dec
insb
pop
dec
sti
jmp
add
add
push
pop
sar
clc
jb
add
clc
inc
add
dec
pop
imul
test
clc
icebp
xchg
xchg
jp
add
and
add
clc
int3
lret
int3
ret
clc
scas
adc
and
jp
arpl
add
and
clc
sbb
add
int3
pushf
mov
xor
add
add
mov
xor
add
xchg
jle
clc
mov
add
clc
and
push
ficoms
clc
sub
mov
stos
sub
cmp
add
add
cmc
outsb
lods
jns
clc
lcall
lret
jmp
cmp
sbb
ds
xchg
cmp
fmull
add
clc
scas
sbb
mov
clc
mov
bound
add
fsubs
add
pop
insb
or
mov
sub
push
or
das
jl
push
mov
sub
aas
jmp
clc
pop
fbld
clc
mov
clc
mov
mov
xor
add
push
add
and
add
dec
mov
lret
cmp
loope
addr16
sbb
cmp
add
lcall
int
clc
lods
jge
clc
lods
xabort
fmuls
lods
jecxz
cmp
clc
daa
clc
loope
clc
clc
xchg
dec
push
out
enter
cli
fsubs
mov
add
add
add
dec
push
add
inc
clc
mov
cltd
arpl
add
cmp
add
add
or
clc
sub
xor
add
aaa
pop
cmp
add
rcrb
xchg
inc
clc
das
shr
icebp
lret
and
js
clc
xchg
xchg
dec
sahf
pop
sub
imul
clc
int
dec
push
inc
clc
and
sahf
cs
add
clc
jge
mov
test
dec
lea
xchg
xlat
sar
mov
mov
shr
add
add
clc
out
sar
add
add
or
adc
add
ret
sbb
add
push
adc
add
cmc
mov
add
and
add
out
pop
in
pop
add
add
add
add
out
incl
add
adc
add
clc
mov
sar
clc
daa
clc
cmp
clc
jne
xchg
je
sub
add
pop
fsubrs
clc
cmp
dec
sub
stc
pop
int
clc
cmp
in
ret
add
add
lods
negb
add
add
add
in
outsb
ja
push
mov
clc
bound
add
inc
clc
add
add
push
or
clc
jb
add
clc
push
out
sub
clc
pop
clc
mov
xchg
test
cmp
jo
add
clc
jg
jbe
mov
add
adc
add
xchg
pop
ljmp
or
clc
jbe
test
xor
ficoms
add
mov
stos
int3
call
add
clc
mov
sar
clc
inc
clc
aas
cli
scas
pop
cmc
dec
xor
add
inc
add
sbb
clc
jecxz
nop
inc
add
insb
mov
sub
test
clc
in
outsl
dec
mov
jo
add
clc
mov
xor
add
int3
or
clc
mov
call
out
pop
cmpsl
clc
cmp
mov
push
sub
cmpsl
clc
cmpsl
clc
inc
add
nop
mov
clc
jbe
testl
testl
insl
stc
xchg
int3
bound
add
push
xabort
add
cwtl
pop
jno
add
add
add
add
xor
add
jb
add
xor
add
adc
clc
pop
add
add
ds
mov
add
xor
add
jns
jae
add
add
clc
aaa
mov
add
xlat
push
mov
addr16
mov
clc
out
sbb
pop
xbegin
das
xchg
xabort
add
push
dec
clc
push
enter
mov
push
mov
mov
add
inc
clc
fldt
shrb
test
mov
dec
cmp
jnp
or
cmpsl
clc
test
xchg
cmp
add
and
add
add
bnd
add
clc
imul
outsl
xchg
xchg
fisttpl
mov
cmp
movsb
clc
jl
clc
inc
clc
or
clc
out
daa
clc
notl
cmp
mov
xor
add
sbb
add
mov
movsl
clc
add
xchg
std
fwait
cmp
clc
mov
in
ret
clc
or
movsl
clc
pop
xor
clc
cmpsl
clc
pop
jbe
clc
in
cmp
add
mov
aad
int
clc
xabort
mov
fildll
leave
push
dec
cmp
clc
sbb
lock
add
rolb
sar
fadds
lods
outsl
out
push
clc
jle
add
or
add
add
xchg
insb
sbb
clc
ret
clc
fisttpl
loopne
stc
ror
cmp
sub
lahf
add
add
add
ja
jbe
std
inc
clc
jmp
inc
clc
sbb
jg
lock
aad
hlt
cwtl
cmp
clc
outsl
mov
clc
mov
xabort
clc
xbegin
clc
loop
fcom
xlat
xor
add
add
add
push
cmpsl
clc
ss
clc
add
add
add
and
cs
or
add
movsb
clc
pop
sub
or
loope
sbb
insl
jb
add
adc
add
xchg
push
clc
repz
test
test
mov
aam
add
sar
clc
repz
push
cmp
push
jecxz
cmp
ds
pushf
xor
add
testb
jae
add
push
sub
add
add
clc
adc
add
mov
add
outsl
cmpsl
clc
push
dec
ja
adc
dec
shr
inc
add
dec
aad
fwait
or
popf
sub
cli
inc
add
dec
push
or
add
test
xor
loopne
fadd
clc
fsts
add
outsb
sub
push
aam
xor
add
dec
loop
mov
xchg
sbb
add
int
in
fwait
vaddps
test
insb
shlb
clc
aam
bound
add
fs
imulb
clc
sbb
dec
in
mov
lret
clc
test
adc
add
clc
push
mov
clc
outsb
or
jmp
clc
repz
xbegin
lahf
xor
ss
clc
jae
add
clc
push
int
clc
in
cmpsb
clc
xlat
xchg
aad
xlat
movsb
clc
aaa
repz
xor
add
cs
clc
stos
xabort
inc
clc
pop
xor
add
lea
not
ds
in
jmp
clc
cli
hlt
xchg
push
add
add
add
sub
clc
clc
mov
clc
jg
clc
hlt
data16
xchg
clc
sbb
or
add
mov
pop
add
add
sbb
adc
pop
xor
add
lock
add
cmp
clc
lret
add
in
mov
add
cwtl
clc
shlb
inc
add
fwait
jl
test
bnd
jle
add
out
lret
add
add
lcall
clc
daa
clc
pop
push
sarl
add
clc
fcoms
cmp
mov
xchg
inc
clc
out
aam
gs
addr16
out
scas
push
test
add
add
adc
add
clc
clc
sub
add
push
dec
je
fs
sub
and
add
add
push
add
jno
add
mov
aaa
inc
clc
and
jnp
add
insl
into
sbb
insl
test
movsl
clc
push
loop
jmp
mov
clc
sbb
clc
imul
add
mov
out
sub
ficomps
xor
add
repnz
mov
sbb
add
sub
xor
add
inc
add
inc
add
pushf
add
add
jle
fcmovnbe
sbb
rcrb
ret
clc
lret
test
clc
mov
div
adc
add
clc
inc
add
je
lods
jo
add
arpl
add
fstpl
sbb
loope
inc
add
clc
adc
clc
mov
rcrb
call
das
int3
cmc
aas
jns
add
lahf
pop
lock
add
test
cmp
sub
clc
mov
clc
fisttpll
jg
clc
sbb
clc
stc
addr16
sub
add
sub
add
pop
pop
clc
mov
and
mov
pop
xor
add
add
clc
add
decb
and
add
add
or
mov
clc
push
pushf
push
add
xchg
cmp
clc
popa
add
fdivl
add
movsl
clc
stos
push
add
xchg
ret
clc
cwtl
into
mov
adc
add
aad
clc
pop
outsb
rclb
add
xor
add
add
xor
add
or
cmp
add
clc
xchg
mov
xbegin
daa
clc
popf
jle
dec
jnp
ret
in
add
add
out
xor
mov
sub
clc
and
add
clc
jmp
add
add
pop
jbe
in
js
pop
dec
faddp
clc
jl
lea
mov
mov
clc
adc
add
xor
clc
stc
xor
add
add
jne
cwtl
movsl
clc
jmp
mov
mov
push
add
ret
insl
fcoms
add
fwait
stc
xabort
dec
aas
fisubrs
ss
inc
clc
daa
clc
int
loopne
test
xor
xchg
fwait
jns
jl
incb
imulb
mov
sar
loope
out
test
adc
add
and
add
mov
data16
mov
lods
xchg
mov
stos
mov
mov
cmc
sbb
call
add
pop
sbb
pop
mov
add
in
pop
clc
cli
or
add
add
loopne
mov
add
cmpsb
clc
out
inc
clc
nopl
add
push
push
int
out
jno
add
add
hlt
xor
lahf
imul
xor
add
dec
adc
add
in
add
add
call
mov
push
mov
repnz
xbegin
sub
insb
aaa
xchg
cmp
out
or
in
rolb
add
in
adc
add
scas
sbb
clc
in
sbb
adc
stc
adc
add
in
sbb
and
add
lret
xor
xchg
jno
add
mov
xor
add
clc
in
je
cs
mov
push
add
xor
add
mov
mov
mov
cmpsb
clc
mov
clc
aaa
fidivrs
sbb
mov
add
rorl
clc
cmp
add
push
in
stc
mov
inc
clc
mov
in
mov
add
mov
or
insl
xbegin
mov
or
test
clc
imul
pushf
xabort
push
add
mov
add
lods
pusha
add
loop
pop
dec
adc
call
add
add
fsubr
adc
add
add
and
add
cld
xchg
xlat
loope
aas
jnp
or
add
das
pop
clc
out
sub
xor
add
add
clc
js
inc
add
fiadds
add
icebp
xchg
inc
clc
dec
adc
clc
jae
add
clc
test
test
enter
push
xor
add
push
add
cmp
sbb
add
add
dec
mov
clc
lea
aaa
lods
xor
inc
add
clc
mov
clc
mov
sar
push
inc
clc
fcom
push
sbb
mov
cmp
mov
cmp
clc
clc
cmc
adc
clc
dec
mov
lcall
push
add
dec
cmp
test
xlat
fisubrs
clc
add
add
mov
clc
fdivl
cli
sub
aad
and
add
xor
add
ja
push
cmp
xabort
mov
add
sbb
sbb
mov
xchg
cmp
stos
mov
add
add
add
add
ret
clc
mov
jns
clc
stc
cmp
clc
scas
pop
clc
sub
clc
inc
add
lea
inc
add
cli
mov
add
push
clc
sbb
addr16
aam
sbb
clc
data16
push
add
push
or
clc
cwtl
cmp
xchg
inc
clc
aam
pop
clc
std
lods
repz
in
outsl
and
sar
inc
clc
and
add
clc
xor
add
repz
clc
loope
shrb
addr16
out
push
add
and
add
ficomps
xchg
cmp
add
lcall
clc
rep
adc
add
sarl
add
inc
clc
sbb
addr16
add
add
add
push
clc
arpl
add
mov
cwtl
pop
xchg
adc
add
sub
add
xabort
ljmp
add
mov
outsb
stos
sahf
in
xchg
xbegin
clc
mov
cmp
mov
mov
faddl
mov
mov
fsubrl
mov
mov
add
hlt
cwtl
imull
mov
push
daa
clc
and
add
fwait
mov
inc
clc
jbe
cmp
insl
fimull
add
and
clc
pop
cltd
dec
inc
clc
xchg
cmp
lea
add
insb
lock
push
add
jecxz
jp
popf
int3
mov
jno
add
or
xor
add
xor
inc
add
jbe
clc
xor
movsl
clc
cmp
xchg
xor
add
mov
dec
and
add
sbb
fisttpll
clc
mov
add
ljmp
sub
jo
add
add
add
aas
mov
testl
clc
jno
add
push
fistpll
add
stos
es
mov
mov
fisttpll
dec
lahf
rcl
xor
add
mov
mov
clc
imul
mov
pushf
jmp
popa
add
or
into
xchg
int
add
push
test
add
es
jae
add
xchg
out
arpl
add
popa
add
pop
dec
push
addr16
shrb
enter
sub
add
xchg
or
sub
add
inc
clc
out
inc
clc
out
dec
inc
add
xchg
adc
scas
lock
add
or
jle
pushf
popa
add
dec
mov
or
mov
clc
sbb
add
push
xchg
cld
ret
clc
cmp
clc
adc
ret
clc
vmulps
add
lock
adc
add
dec
out
jp
add
xchg
stos
call
in
hlt
out
int
add
add
clc
pop
clc
dec
prefetch
or
xchg
mov
cmp
clc
shll
add
mov
mov
push
add
jg
clc
shll
add
mov
outsl
cmpsl
clc
xchg
popa
add
inc
clc
mov
clc
imul
add
or
add
add
add
rcrl
or
clc
cs
push
sub
cmpsb
clc
loope
ds
clc
outsl
push
add
cwtl
xor
add
mov
dec
xor
add
test
xchg
and
add
int
imul
clc
loope
sub
cwtl
cmpsb
clc
loop
vshufps
clc
mov
mov
inc
add
cmp
lock
lods
sbb
and
add
notb
add
mov
repnz
add
rol
clc
mov
test
out
push
add
xchg
dec
adc
add
repz
popf
xchg
xor
add
jno
add
mov
add
aaa
push
fbld
popa
add
lret
stos
cmp
pop
adc
mov
dec
mov
loopne
in
sbb
mov
sub
clc
adc
clc
testl
clc
ret
mov
clc
loop
mov
clc
into
push
mov
ret
clc
cmpsl
clc
icebp
in
sarb
add
add
or
xabort
in
inc
clc
fistl
clc
cmp
clc
test
pop
pop
lods
aaa
xchg
cmpsl
clc
xor
cmp
fnstenv
add
push
add
sar
outsb
shll
scas
cltd
push
fcom
gs
roll
add
lret
add
daa
clc
xlat
das
int3
lret
xabort
mov
add
outsb
stos
pop
sub
add
arpl
add
add
clc
out
lods
or
push
add
popa
add
cld
mov
mov
push
fcoms
clc
sbb
and
add
inc
clc
mov
push
clc
sub
data16
jbe
popf
sbb
clc
pop
pop
ret
cld
or
mov
mov
clc
cmp
or
iret
movsl
clc
push
push
fcoms
pop
mov
pop
cmpsb
clc
mov
fwait
insl
out
movsl
clc
cmpsb
clc
mov
push
hlt
es
mov
call
xchg
or
lods
lock
pop
imul
stos
inc
add
dec
mov
das
cmp
scas
decl
or
pop
clc
xchg
jl
testl
loope
lret
add
mov
sbb
imul
xchg
mov
dec
enter
add
cmpsl
clc
sbb
clc
stos
je
mov
push
mov
es
in
clc
arpl
add
mov
mov
add
pop
pop
jp
inc
add
lods
or
add
pop
dec
shrl
clc
mov
xor
add
add
add
and
je
cmp
pop
cmp
dec
xchg
cmp
add
dec
jbe
sti
out
dec
fbstp
add
pop
ljmp
sub
mov
sub
lcall
clc
ret
clc
jl
cld
stos
jmp
loop
cltd
call
cmp
add
add
add
scas
adc
add
in
sti
cmp
clc
fistpll
frstor
fdivrl
add
pusha
add
jl
shr
data16
pop
ficoms
push
clc
jg
mov
adc
add
clc
add
add
add
clc
jecxz
movsl
clc
push
movsb
clc
scas
nop
dec
stos
sahf
jns
add
nop
mov
int3
cmpsl
clc
pop
rol
clc
pop
addr16
push
sub
sbb
add
lret
xchg
icebp
xor
lret
int
add
in
mov
sub
aaa
xchg
push
dec
inc
clc
xor
add
xchg
stos
push
out
mov
clc
sub
clc
sub
push
clc
push
sti
cmp
add
add
in
sar
daa
clc
fsubrs
add
fists
add
jnp
and
add
cmp
mov
xor
inc
clc
inc
add
loopne
sbb
negb
mov
mov
mov
stos
jecxz
mov
or
ret
clc
push
pop
stos
call
mov
push
add
mov
loopne
pop
and
add
clc
ljmp
clc
mov
add
add
clc
cmp
int3
lahf
dec
std
dec
sbb
sbb
add
aaa
xchg
mov
clc
pop
ret
fwait
lea
add
or
jne
add
jmp
clc
repz
clc
xchg
and
inc
clc
ds
clc
push
mov
and
add
aad
clc
sub
clc
push
hlt
jno
add
cmp
adc
clc
test
clc
aaa
std
out
ret
clc
movsb
clc
shr
xchg
push
faddp
clc
bound
add
push
add
xchg
and
add
add
push
add
sub
add
clc
xor
add
jns
and
clc
imul
loop
xchg
xor
mov
rorl
and
add
add
clc
mov
push
xlat
out
and
add
fists
add
sar
out
loopne
jne
add
mov
movsb
clc
clc
outsb
pop
mov
add
lods
imul
add
fs
xchg
push
clc
lahf
adc
add
outsb
pusha
add
xbegin
cmp
add
loopne
bound
add
clc
imul
shlb
xchg
sub
jle
push
mov
cs
add
cmp
clc
test
add
clc
scas
lcall
jl
and
add
dec
cmp
add
mov
push
clc
mov
clc
aaa
push
out
push
nop
int3
outsb
shlb
hlt
push
push
cmp
shl
sub
clc
fdivrl
insb
mov
add
lods
je
lods
or
push
fadd
clc
daa
clc
std
outsb
fiaddl
clc
lock
add
mov
clc
mov
imul
clc
dec
jnp
add
clc
rcl
ds
mov
iret
cmp
insb
into
nop
pop
clc
adc
add
ret
es
clc
lret
push
sar
mov
clc
jno
add
mov
push
sub
clc
mov
add
sar
mov
or
and
pop
mov
or
add
push
add
jno
add
mov
leave
incl
addr16
adc
add
or
xlat
add
add
add
imul
cmc
cltd
pop
and
add
clc
or
not
mov
cmp
clc
ja
movsb
clc
push
add
inc
add
adc
clc
fisttpll
outsl
fdivs
add
imul
and
fcmovnbe
sarb
add
clc
sub
clc
push
add
sbb
js
mov
pusha
add
pusha
add
cmp
clc
ss
sbb
cmp
add
add
int3
cltd
inc
clc
outsb
sti
pusha
add
in
jmp
pop
clc
sbb
add
fsubr
mov
push
xchg
in
or
mov
add
xchg
mov
push
cmp
clc
int3
xor
sbb
add
fdivrs
bound
add
add
add
sbb
sub
clc
push
mov
in
push
adc
clc
push
add
fstl
add
popa
add
cs
sub
add
movsl
clc
xchg
stos
lret
clc
adc
add
clc
sub
add
add
push
add
test
inc
clc
arpl
add
ljmp
imul
add
add
add
stc
xchg
hlt
lret
add
push
add
xor
xabort
cmp
mov
sar
dec
jno
add
test
add
add
sbb
dec
mov
lcall
add
clc
push
bound
add
add
add
ja
movsb
clc
inc
add
add
add
clc
out
aad
pop
fs
popf
mov
mov
mov
add
sar
xor
add
insb
leave
mov
fsubrl
mov
xlat
shlb
sub
add
lcall
insl
adc
add
clc
adc
add
cmp
add
mov
in
xabort
dec
cltd
sub
adc
add
pop
cmpsb
clc
mov
lcall
cmp
cmc
jno
add
fcmovb
clc
push
add
imul
add
clc
push
or
test
jle
jl
incl
mov
dec
sti
mov
add
insb
mov
cmp
add
sbb
xor
add
add
add
xchg
insl
dec
cmp
clc
sub
cmp
add
scas
pop
or
sahf
jb
add
sbb
out
iret
dec
or
pop
repz
xor
test
add
sub
xchg
loop
dec
rorl
xchg
ficoms
push
imul
popa
add
fsubrl
fwait
nop
cmp
adc
add
add
jg
call
loopne
jbe
jmp
mov
clc
popf
sbb
cld
out
pushf
negl
je
add
xchg
mov
clc
or
dec
mov
cmp
outsb
inc
clc
sbb
add
mov
call
add
pop
mov
clc
jne
push
clc
dec
jecxz
lcall
push
stc
mov
add
data16
cmp
xbegin
outsb
push
add
std
push
dec
xor
je
inc
add
dec
mov
jns
add
js
clc
cmp
jge
pop
sub
add
sbb
clc
sahf
sub
dec
inc
add
and
add
add
xabort
aaa
or
add
clc
add
add
inc
clc
repz
add
es
hlt
inc
add
or
ljmp
adc
add
mov
lock
insb
aaa
mov
lea
sbb
add
test
jge
addr16
xchg
sub
fists
clc
mov
clc
icebp
pop
clc
imul
add
mov
mov
cmp
add
add
leave
stc
push
lods
mov
mov
push
mov
add
clc
cwtl
jno
add
das
sbb
sub
xor
add
insl
loopne
and
add
stos
inc
add
rorb
popf
call
dec
dec
pop
cmp
loop
cmp
add
in
pop
sbb
inc
add
sbb
add
mov
ljmp
jbe
outsb
sbb
add
mov
loope
bound
add
inc
add
xor
add
out
pop
clc
fmulp
popf
or
adc
add
push
lret
stos
fmul
ss
lea
icebp
mov
clc
inc
add
das
push
add
frstor
outsl
out
ljmp
jns
xor
add
movsb
clc
jg
mov
add
add
pop
addr16
fdivs
clc
lahf
mov
pop
int3
push
or
scas
test
clc
clc
push
mov
push
add
mov
add
ret
clc
movsb
clc
call
adc
add
clc
jmp
negl
clc
xbegin
popf
arpl
add
test
push
add
call
add
add
add
dec
ret
clc
cmp
into
sar
fwait
mov
add
clc
inc
add
sub
add
lahf
sub
sub
push
add
daa
clc
jns
sub
mov
xchg
add
add
clc
mov
dec
jl
pop
pushf
cmpsl
clc
in
fwait
sti
stos
cmp
jecxz
lcall
mov
add
pop
test
jbe
pop
or
xor
add
and
add
cltd
pop
in
hlt
loopne
lahf
jg
add
sub
js
clc
push
push
icebp
adc
add
dec
mov
clc
aam
dec
xor
add
add
or
add
dec
bound
add
cld
sarl
clc
cmp
add
add
jns
push
jecxz
mov
clc
push
add
lods
clc
mov
add
adc
add
mov
bnd
add
clc
or
clc
jbe
clc
stc
je
ret
clc
cmpsb
clc
sub
xchg
pop
movsb
clc
jl
ss
sar
aas
cmpsb
clc
add
add
lret
mov
out
inc
add
sub
adc
add
adc
add
imul
clc
xchg
mov
adc
add
or
cmp
clc
mov
shlb
in
sahf
sub
add
mov
leave
add
add
add
mov
clc
mov
ds
int
cwtl
inc
add
sar
fisttpl
pusha
add
sbb
add
mov
sub
jnp
sbb
add
mov
add
dec
cmp
jp
call
clc
scas
arpl
add
inc
add
outsb
xchg
sar
jmp
clc
mov
add
hlt
clc
xchg
ljmp
push
int
and
add
add
jae
add
pushf
repz
add
add
sub
or
and
into
addr16
mov
clc
mov
or
clc
mov
stc
jo
add
xchg
sbb
cwtl
xor
add
add
push
test
inc
add
xchg
repnz
clc
and
add
mov
clc
fisubrl
fmulp
dec
mov
add
push
clc
pop
push
xchg
sub
jae
add
xbegin
clc
inc
add
cmc
int
vmovaps
test
dec
iret
xor
add
add
bound
add
add
clc
mov
loop
pop
outsl
mov
push
add
inc
add
ficoms
add
xor
add
add
enter
xor
add
dec
mov
sar
sub
xchg
and
push
add
add
clc
ret
clc
and
add
stc
add
add
setns
dec
ja
clc
sub
clc
ja
cwtl
push
and
add
ret
in
mov
xchg
jnp
clc
js
inc
add
and
hlt
movsb
clc
or
daa
clc
in
and
add
jmp
add
dec
negl
aam
inc
add
loopne
or
add
mov
clc
jmp
pop
aas
push
aad
clc
mov
mov
fsubrs
js
inc
clc
stos
insl
or
mov
mov
adc
add
add
insb
lcall
sahf
dec
push
add
in
inc
add
aaa
aaa
outsb
sub
add
add
clc
test
stc
xchg
scas
ret
clc
or
add
add
adc
add
aam
test
pop
push
mov
out
adc
add
jle
aaa
repnz
js
and
add
pop
leave
imul
clc
mov
fsub
clc
mov
cld
stc
push
clc
mov
and
daa
clc
mov
sar
dec
das
scas
cld
fs
iret
mov
sbb
add
cmp
fmuls
mov
pushf
pop
clc
insl
ret
mov
clc
insb
ljmp
add
add
clc
shlb
sbb
out
idivb
clc
daa
clc
add
add
add
xchg
xor
add
or
fstpl
xchg
fs
or
scas
sub
add
out
ret
clc
js
clc
xchg
daa
clc
adc
add
ret
clc
ljmp
sub
dec
mov
mov
clc
push
out
mov
sbb
add
add
cmc
inc
clc
ljmp
jp
clc
lret
clc
loopne
aam
push
mov
out
xor
add
clc
jp
add
jns
add
data16
inc
clc
push
jo
add
clc
xchg
add
add
pop
xlat
cmp
add
iret
stc
loope
dec
popa
add
mov
add
push
push
add
icebp
dec
fcoml
xchg
dec
jp
add
lock
jnp
clc
push
add
into
mov
add
ljmp
imul
add
clc
and
add
pusha
add
mov
xor
repnz
cmpsl
clc
notb
add
add
or
mov
or
add
loope
add
add
xchg
je
clc
daa
clc
xor
add
add
fs
or
mov
out
loopne
out
push
add
mov
outsb
jmp
or
cmp
stc
rorb
clc
dec
lock
into
and
add
add
push
mov
xchg
call
leave
pop
iret
dec
xor
add
add
outsl
xchg
fucomp
jge
aaa
loop
pop
xchg
cs
jbe
and
add
mov
xchg
mov
xchg
sbb
cmp
add
add
mov
stos
jnp
add
add
sub
pushf
in
es
cmp
lods
ja
adc
add
add
outsb
mov
and
add
lods
xor
add
out
sub
add
scas
inc
clc
cmp
in
sbb
jns
nop
jb
add
xor
add
xor
add
in
inc
add
sar
clc
aam
xchg
aam
xabort
clc
cmp
xor
add
sub
clc
mov
ficoml
add
insb
inc
add
pop
mov
insb
or
in
and
and
add
add
mov
pop
lcall
clc
out
xchg
sub
clc
xchg
mov
and
or
add
add
push
add
jbe
pop
mov
clc
xbegin
cmpsl
clc
inc
clc
stos
seta
jno
add
clc
sbb
push
sbb
clc
cmp
sub
jmp
mov
xor
scas
inc
clc
cs
fs
arpl
add
lock
clc
xlat
cmp
pop
inc
clc
rcll
xor
add
add
dec
xchg
adc
add
add
ljmp
add
sub
sbb
jbe
clc
lods
test
dec
xor
add
stos
loope
jbe
xchg
fisttpll
xchg
divb
cli
nop
mov
repz
lcall
dec
mov
cmp
or
add
mov
adc
add
out
pop
adc
cld
movsl
clc
xchg
gs
sbb
stos
xor
or
ret
clc
sbb
icebp
sbb
imul
add
xchg
fsubrl
add
add
adc
add
aad
clc
lods
and
add
jbe
clc
jg
and
add
dec
cli
cmc
lock
aam
sub
add
loop
jl
cltd
cmp
mov
and
add
dec
cs
pop
lea
or
sbb
xchg
push
mov
cli
xor
add
and
add
cli
push
clc
fs
mov
clc
cmp
rclb
xchg
add
add
or
imul
insb
or
clc
mov
cmp
adc
add
add
mov
ror
aaa
push
ja
in
cmp
add
or
add
add
add
bound
add
add
mov
cmc
movsb
clc
sub
clc
mov
mov
dec
jp
mov
pusha
add
fs
insl
addr16
push
clc
xchg
inc
add
sti
mov
push
sahf
jmp
lcall
clc
jns
dec
insb
lret
push
jno
add
sub
clc
cs
mov
adc
add
clc
cmc
cmp
mov
jbe
and
add
add
add
ja
sahf
inc
clc
sub
xbegin
add
mov
add
cmp
popf
mov
add
aas
fnsave
add
clc
cs
iret
negb
add
push
and
add
out
xbegin
add
add
and
add
cld
jl
inc
clc
adc
add
add
jbe
das
jbe
cmp
sub
add
xchg
push
lcall
add
xbegin
adc
add
add
mov
divl
jmp
add
cmp
call
add
add
add
add
cmp
insb
add
add
clc
mov
es
clc
pop
xabort
xor
add
cmp
addr16
add
clc
push
inc
clc
sbb
sub
in
fldl
add
cmpsb
clc
int
and
add
xor
add
add
lock
inc
clc
bound
add
add
xchg
in
mov
add
insb
repz
add
in
and
clc
adc
dec
inc
clc
stos
addr16
and
add
add
cmc
bound
add
add
jbe
mov
pushf
mov
dec
pop
clc
and
nop
sbb
add
add
cmp
clc
repnz
add
mov
and
push
add
adc
and
add
clc
fwait
sbb
add
xchg
sbb
mov
add
inc
clc
jb
add
mov
clc
inc
clc
sub
aam
jbe
mov
add
fdivrs
fsubrl
push
imul
add
jae
add
adc
add
imul
xchg
out
sbb
push
add
lret
mov
repz
lea
dec
push
inc
add
lret
xor
add
clc
je
into
rcrl
sbb
dec
cmpsb
clc
push
fisttpl
pop
mov
add
add
cli
cmpsb
clc
movsl
clc
lret
fs
inc
clc
xor
mov
aas
xor
iret
sub
ljmp
add
jb
add
add
mov
clc
outsl
int
stos
sbb
pop
cld
or
sub
and
add
sbb
cmp
mov
push
movsb
clc
inc
add
xchg
sbb
add
mov
add
leave
adc
mov
negl
sti
daa
clc
push
add
scas
sarb
inc
clc
pop
or
clc
add
add
and
add
clc
icebp
aaa
stc
sbb
lahf
sub
clc
out
out
xchg
xchg
mov
mov
aam
add
push
pop
je
sar
add
push
loopne
incl
add
cmpsl
clc
daa
clc
rolb
sub
mov
inc
clc
cmp
imul
xbegin
aam
push
push
dec
aam
movsb
clc
mov
into
xor
add
xchg
dec
jbe
mov
add
cmp
clc
movsl
clc
cmp
add
dec
sub
mov
imul
adc
add
add
and
add
aaa
int
clc
inc
clc
jns
int
cmc
cmp
clc
in
popf
int3
xchg
inc
clc
cmp
clc
outsl
sub
inc
clc
bound
add
clc
je,pn
xor
add
fldl
add
xbegin
clc
ljmp
clc
xchg
repnz
addr16
sub
sar
clc
js
jne
cmp
fld
clc
cwtl
iret
xchg
and
add
mov
mov
cmp
bound
add
xchg
pop
jo
add
push
lods
push
add
stos
add
add
outsb
fwait
or
clc
stos
pop
roll
add
xchg
xabort
in
cmp
je
dec
dec
adc
add
loopne
push
add
repnz
xor
add
inc
add
pop
clc
mov
out
mov
sub
ja
mov
mov
clc
ljmp
into
insb
cmp
out
pop
jo
add
fimuls
cmp
add
pop
int
jge
add
aam
popa
add
outsb
fldl
add
mov
clc
inc
clc
fisubl
add
and
add
push
push
nop
mov
push
add
je
xlat
add
add
dec
cs
add
out
xor
add
fidivrl
dec
pop
fisubs
loopne
ds
mov
xor
add
add
inc
clc
std
jg
xabort
add
cmp
add
scas
out
sub
push
insl
gs
xchg
sub
jmp
jne
mov
mov
pop
inc
add
push
pop
clc
sbb
clc
sbb
add
add
add
add
jmp
and
pop
adc
add
clc
sarb
add
push
scas
scas
fisttpl
clc
add
add
add
cmp
cmp
clc
icebp
pop
push
nop
scas
outsb
je
add
sub
hlt
jmp
or
clc
jle
xchg
fisubl
or
clc
std
dec
addr16
mov
add
add
push
jl
add
loopne
cmp
clc
jecxz
mov
pop
int3
add
add
xchg
ds
clc
scas
je
add
dec
data16
xchg
add
adc
clc
scas
mov
mov
pop
cmp
add
aad
xabort
sub
mov
daa
clc
xor
add
clc
lods
cmpsl
clc
out
xchg
jl
add
notb
add
mul
clc
mov
adc
add
clc
jg
mov
or
scas
jno
add
jns
clc
dec
test
xlat
fcomip
hlt
iret
pop
pushf
int
add
sbb
add
add
inc
clc
sahf
pop
test
push
add
imul
push
add
add
sbb
clc
xor
add
clc
lea
clc
push
cmp
add
add
cltd
out
mov
add
bound
add
sahf
xchg
cltd
in
jo
add
mov
jmp
add
sbb
mov
add
mov
cltd
cmpsb
clc
cmp
clc
call
imul
lret
adc
push
lahf
jno
add
push
and
add
fiadds
lods
jmp
pop
loop
nop
hlt
cmp
lock
fdivrp
sbb
add
add
ficoml
ds
add
test
cmp
clc
push
fstl
mov
fdivrl
push
xabort
add
sub
clc
inc
add
popa
add
icebp
cmp
out
mov
data16
imul
add
add
push
add
mov
add
cmpsl
clc
ret
and
add
cmp
rcl
sub
add
inc
clc
out
data16
inc
clc
xor
add
clc
repz
jg
xchg
inc
add
dec
pop
faddp
clc
ds
dec
ret
add
sbb
jmp
leave
int3
mov
mov
push
pop
add
add
lods
jne
mov
add
jo
add
xabort
clc
test
and
add
add
imul
test
sti
sbb
clc
pushf
or
bound
add
clc
lods
inc
add
adc
add
add
loope
test
aad
clc
push
lret
mov
jbe
je
add
adc
add
add
rol
clc
loop
outsb
ss
dec
leave
xchg
mov
clc
rcrb
in
iret
xor
add
add
dec
xchg
sbb
mov
cmp
add
cmp
clc
adc
add
sub
lcall
push
mov
cwtl
sti
outsb
jno
add
js
lods
in
sbb
add
mov
push
xchg
mov
add
mov
add
cli
inc
clc
xor
add
clc
loope
gs
sar
clc
sbb
push
add
iret
push
xchg
cmp
imul
mov
lods
lods
mov
int
fsubr
xor
add
push
clc
mov
add
cmpsb
clc
sbb
adc
clc
xchg
std
mov
add
mov
inc
clc
add
add
pop
cli
pop
out
cli
inc
add
push
add
es
mov
add
sar
add
aam
fsub
clc
leave
fimuls
push
add
shrb
pop
sub
mov
dec
adc
add
xchg
jne
jb
add
add
clc
into
mov
push
jo
add
je
dec
int3
jle
sbb
repnz
clc
cs
clc
sbb
jg
mov
add
push
inc
clc
enter
add
add
clc
mov
add
and
add
add
jp
clc
mov
je
dec
jno
add
pop
inc
clc
xchg
sbb
add
nop
fucom
clc
rolb
add
xor
add
inc
clc
sub
add
test
clc
mov
sub
int3
sub
clc
test
dec
xchg
mov
xchg
push
leave
cmp
stc
pop
clc
idivb
add
aas
and
add
cmp
mov
mov
clc
dec
jl
cmp
or
push
cld
xchg
pop
fsubrl
sub
add
dec
pop
xabort
add
cmpsl
clc
mov
or
add
clc
stos
lret
dec
leave
arpl
add
in
or
add
sub
rorl
add
add
ficomps
inc
add
and
add
xchg
imul
cs
scas
repnz
clc
inc
clc
movsl
clc
mov
sbb
add
pusha
add
daa
clc
or
xor
add
clc
fdivrl
xchg
lock
push
add
dec
clc
dec
and
add
xor
add
mov
clc
je
add
mov
add
je
add
adc
add
add
mov
leave
in
adc
add
fcompl
mov
add
std
mov
cmp
dec
push
cmc
add
add
addr16
xor
add
pop
testb
aam
jne
clc
mov
add
add
adc
add
roll
clc
faddp
clc
jnp
add
jle
clc
jg
dec
cld
sar
clc
or
add
push
mov
and
push
xor
add
add
add
add
test
popa
add
cwtl
mov
mull
ds
clc
sbb
push
inc
clc
push
add
aad
add
mov
mov
xchg
lret
add
add
add
add
add
cs
clc
dec
and
add
push
cmp
add
xchg
outsb
je
jle
das
mov
fists
int3
aad
or
add
out
xchg
lods
dec
push
loop
xbegin
clc
inc
clc
jp
out
ss
mov
or
add
std
outsl
dec
mov
add
loope
cmp
add
pop
mov
mov
add
add
add
cmp
enter
aaa
jecxz
pop
clc
adc
add
xchg
jecxz
cli
in
pop
loope
push
push
push
dec
stos
test
bound
add
inc
add
rcll
clc
mov
pushf
cmpsl
clc
add
add
add
mov
add
add
dec
outsl
inc
clc
pop
loope
mov
add
fs
sti
aaa
out
lret
jle
sub
das
mov
mov
push
add
sub
sahf
fists
xchg
jmp
xor
add
in
loop
pushf
dec
call
clc
push
jmp
add
mov
add
and
or
clc
cmp
xchg
inc
clc
or
clc
dec
ficomps
addr16
ds
clc
lret
pop
repnz
add
cmp
jmp
pop
repz
sbb
mov
cld
insb
stos
data16
into
push
adc
inc
clc
cmpsb
clc
push
out
inc
clc
cld
test
mov
int
lahf
in
cmp
add
xchg
mov
xchg
popa
add
pop
mov
add
sahf
pushf
clc
xchg
rcr
sub
sgdtl
add
add
push
std
mov
add
flds
add
xabort
push
pop
cmp
add
xor
add
lods
outsl
adc
add
add
inc
clc
xchg
ret
clc
pop
xor
push
adc
clc
inc
add
cmp
clc
dec
xchg
repz
mov
clc
je
fadds
add
clc
scas
inc
add
xchg
cmp
insl
inc
clc
mov
cs
add
int3
xor
clc
repz
fcoms
add
popf
xchg
inc
clc
jmp
clc
sub
add
lods
iret
daa
clc
fcoml
movsl
clc
icebp
mov
pop
clc
inc
add
mov
jge
jg
add
jg
addr16
jge
add
push
test
add
sbb
mov
out
mov
clc
cld
iret
inc
clc
call
add
mov
adc
add
nop
xabort
es
fs
icebp
xor
add
in
sub
sub
stos
icebp
das
jecxz
scas
xchg
fbld
stos
mulb
add
add
pop
xor
imul
sub
dec
mov
fcomps
call
add
xchg
pop
cmpsl
clc
cli
dec
and
add
js
jo
add
into
decl
insb
jle
clc
in
movsl
clc
data16
icebp
fnstenv
lret
cmp
add
add
and
add
sar
cmp
clc
pop
jbe
adc
add
gs
jmp
pop
aaa
movsl
clc
cmp
clc
sub
mov
jbe
inc
clc
lock
add
sar
movsb
clc
add
add
cs
add
fcoms
cltd
popa
add
push
out
shll
add
add
sbb
sub
inc
add
xchg
aad
xchg
cmp
clc
xchg
enter
sub
clc
jl
es
ds
xchg
mov
clc
and
fcmovnb
clc
xor
add
add
mov
pop
clc
sti
pop
pop
and
outsb
out
cmp
bound
add
mov
clc
cmpsb
clc
test
hlt
insb
pop
mov
and
in
stc
adc
add
push
clc
pop
cmpsb
clc
mov
clc
and
add
clc
fistps
xabort
clc
jno
add
mov
in
leave
pop
pop
add
add
or
add
jo
add
add
sub
flds
fbld
clc
pop
into
mov
popf
or
popa
add
inc
add
dec
cmp
clc
xchg
cmp
clc
data16
or
inc
add
jb
add
inc
add
or
dec
jp
fxtract
push
push
fsubr
jmp
rolb
add
clc
decl
in
sbb
out
pushl
fstpt
clc
push
mov
mov
or
sbb
mov
add
adc
add
cmp
add
sbb
rep
loop
sbb
clc
das
inc
add
push
cmp
xor
clc
sub
add
arpl
add
clc
and
add
add
std
mov
psrad
xchg
push
clc
or
add
ss
adc
add
and
inc
clc
jbe
arpl
add
mov
add
mov
clc
push
add
and
add
xor
add
push
inc
clc
test
clc
pop
cmp
jmp
aad
add
sar
cmp
sub
ja
scas
sub
add
clc
mov
clc
mov
gs
js
sar
arpl
add
cld
lods
xbegin
fdiv
or
fldl
imul
insl
clc
mov
clc
mov
or
clc
push
add
xor
lock
add
clc
dec
xor
add
or
int
clc
add
add
fcomps
mov
cld
outsl
shlb
add
out
leave
outsl
jl
imul
mov
mov
clc
mov
xor
int3
cmc
out
and
add
add
mov
cli
mov
lock
add
cmp
add
clc
popf
adc
daa
clc
pushf
mov
clc
mov
mov
cs
add
and
aaa
into
inc
clc
pop
clc
mov
adc
add
pushf
jns
sbb
and
add
clc
cmp
ja
mov
filds
mov
clc
mov
clc
cmp
sar
adc
add
add
popf
mov
nop
dec
or
push
add
es
ljmp
add
out
jns
ja
jno
add
and
aad
clc
push
fcomps
je
push
xchg
jo
add
aas
add
leave
ds
shll
rorl
xlat
mov
arpl
add
mov
xor
clc
sub
dec
push
add
movsb
clc
test
aaa
add
out
push
mov
mov
pushl
clc
cmp
ret
test
in
push
rorb
dec
mov
loope
pop
cmp
lods
out
cmp
mov
cmp
loope
iret
loop
repz
iret
pop
cmp
clc
dec
je
clc
ret
mov
inc
clc
cli
lods
or
lret
add
dec
clc
jmp
iret
cs
clc
cmp
clc
xor
clc
jb
add
xor
add
add
or
clc
push
inc
add
loop
push
add
mov
dec
pop
fists
add
and
add
clc
mov
cmp
mov
add
mov
je
inc
add
xchg
jp
sub
cs
jns
add
adc
add
lods
push
clc
pop
test
out
pop
mov
mov
idivb
fistpll
mov
fs
dec
adc
cli
or
clc
mov
lods
test
push
sub
clc
or
clc
push
clc
lahf
inc
add
jmp
ds
clc
push
clc
insl
and
add
jae
add
add
cmp
add
ljmp
ds
std
clc
aaa
or
pusha
add
cmp
push
cmp
add
push
shll
xchg
mov
sbb
bound
add
mov
add
sub
clc
mov
clc
xchg
lret
gs
pop
push
or
and
add
add
xor
add
clc
mov
pop
mov
and
mov
clc
test
push
test
add
add
test
shlb
clc
or
pop
inc
clc
es
fdivs
clc
test
clc
int
jnp
mov
cmp
aad
pop
push
push
add
add
jle
clc
in
test
mov
pop
mov
movsl
clc
enter
dec
jo
add
push
push
seto
add
in
add
insb
xchg
int
ja
inc
add
iret
mov
add
add
mov
lcall
xchg
ret
add
insl
xor
leave
inc
clc
shrl
loopne
sub
xchg
lods
pop
xchg
pop
pushf
es
adc
add
add
clc
cmp
mov
cmp
add
lahf
mul
clc
icebp
sbb
add
add
add
add
test
shll
push
add
inc
clc
mov
clc
cmpsl
clc
test
cmp
fwait
outsl
out
imul
clc
xabort
clc
cld
and
add
or
clc
fwait
cld
add
inc
add
out
fucomi
mov
addr16
inc
add
test
cmp
clc
inc
clc
cmp
leave
aad
mov
and
add
loopne
lock
mov
add
push
add
xor
add
es
cmpsb
clc
mov
jl
in
mov
out
in
lods
push
add
movsl
clc
jns
clc
mov
clc
and
add
dec
inc
add
mov
hlt
rclb
add
mov
add
cmc
in
lret
in
xchg
jbe
clc
stos
cwtl
xchg
mov
clc
jo
add
mov
clc
inc
clc
mov
loop
mov
clc
aaa
repnz
test
loop
pop
stc
out
xchg
cmp
xor
add
add
nop
cmp
add
jl
clc
mov
dec
or
xchg
xchg
cwtl
in
imul
add
clc
out
xor
add
add
add
pop
jp
mov
add
push
add
sub
dec
mov
cmpsb
clc
sbb
stc
dec
jp
mov
jne
clc
ss
add
push
popa
add
pop
addr16
xchg
roll
in
dec
outsb
fwait
mov
repnz
mov
xchg
sub
movsl
clc
mov
bound
add
filds
clc
out
cmp
sar
add
loopne
cmp
xchg
lcall
and
add
nop
dec
xabort
add
cld
dec
jl
cmp
ret
clc
nop
jae
add
lret
clc
test
xor
inc
clc
int
mov
add
clc
pop
insl
cmp
add
and
add
xchg
and
add
clc
add
add
clc
outsb
sub
insl
stos
fldl
fs
push
cmc
std
loop
xabort
out
lret
jmp
sar
inc
add
into
ss
cwtl
push
add
fildl
inc
clc
imul
sti
push
jae
add
clc
dec
or
add
pop
jg
clc
shlb
add
aaa
sub
sub
ss
ja
cmc
fs
mov
jg
mov
lcall
pop
stos
out
xor
add
mov
repz
add
add
cld
mov
dec
dec
aad
cmp
sbb
add
vdivps
lods
mov
push
push
sub
mov
xchg
add
enter
and
out
lea
clc
inc
add
add
add
in
xor
add
pop
push
add
lock
fstpl
add
xchg
cli
fisttpl
pop
insl
and
jg
jmp
clc
xabort
mov
push
add
loop
and
add
insl
and
add
add
add
int3
clc
pop
jl
mov
aas
into
ljmp
mov
lret
call
add
jns
add
add
int
clc
ret
clc
test
and
add
add
pop
adc
cmp
sub
js
dec
sbb
mov
sub
clc
jno
add
xbegin
shrb
stc
cmp
add
adc
add
fwait
add
add
adc
add
cmp
jl
mov
fistps
insl
imul
ret
sbb
add
or
movsl
clc
cmp
clc
pop
dec
out
out
in
lea
xor
clc
adc
jp
cmp
xchg
setb
sar
add
repnz
add
clc
pop
clc
je
push
jmp
ljmp
repnz
add
xor
add
cli
sub
add
lahf
add
add
lock
clc
loop
sbb
sub
add
js
shlb
je
add
sar
pusha
add
or
clc
movsb
clc
push
add
jns
mov
add
loopne
ret
clc
and
add
xor
add
clc
mov
add
fcomp
push
sub
clc
jecxz
sub
mov
dec
scas
fnstenv
clc
das
inc
clc
arpl
add
outsb
xor
add
into
push
mov
mov
add
xor
add
add
inc
clc
loope
inc
clc
call
add
cmpsb
clc
test
add
and
add
dec
dec
ljmp
sbb
add
add
adc
add
add
sti
aam
xchg
push
and
call
pop
addr16
aaa
fstpl
add
rorl
clc
jns
clc
adc
add
aam
clc
xor
add
cmp
add
add
add
ret
imul
inc
add
mov
add
iret
adc
add
add
sub
jae
add
cli
pushf
mov
mov
ds
shll
push
ss
test
jle
and
clc
out
or
add
xchg
ret
clc
mov
cmp
and
fidivs
iret
inc
clc
int
clc
in
fs
pop
mov
add
add
add
pusha
add
push
add
leave
data16
mov
add
mov
add
aas
sbb
adc
add
adc
add
mov
cmp
push
das
pop
clc
sbb
add
insb
mov
push
add
sub
push
xchg
fdivl
push
add
mov
push
add
sub
cmp
clc
add
addr16
xor
add
in
sub
add
ficomps
cmc
test
shlb
clc
popf
add
add
clc
fs
stc
fs
xor
xchg
pop
ret
clc
cmc
xor
add
pusha
add
mov
clc
sbb
or
xchg
inc
add
push
arpl
add
cmc
or
clc
inc
clc
mov
clc
mov
clc
popa
add
jp
jmp
and
add
clc
out
scas
jmp
push
add
inc
clc
in
lcall
fidivl
lret
add
clc
mov
add
out
jne
mov
test
insb
jns
clc
cld
aas
leave
push
add
popf
jp
das
inc
clc
movsb
clc
pop
stc
enter
jg
add
xor
add
pushf
test
shrb
leave
pop
insb
gs
aas
cmp
add
add
cmp
add
clc
pop
xchg
dec
xchg
gs
adc
mov
aaa
mov
ret
clc
imul
fcom
sbb
add
lods
inc
add
outsb
fs
mov
xchg
xchg
push
fsubs
xchg
adc
add
clc
lcall
daa
clc
outsl
enter
add
dec
lret
mov
add
mov
gs
flds
jae
add
adc
lahf
mov
out
push
add
cs
add
xchg
xabort
pusha
add
nop
mov
hlt
mov
pushf
jecxz
jbe
clc
and
add
mov
add
cmp
push
int
fimull
pop
test
jb
add
or
add
ret
push
jns
xor
cmp
loope
pop
clc
push
clc
jnp
mov
dec
jno
add
mov
lea
add
in
lcall
ljmp
pusha
add
mov
push
clc
leave
inc
clc
adc
add
mov
jecxz
popa
add
imul
add
icebp
sbb
fnstcw
cmpsl
clc
push
xbegin
test
fcom
stos
xchg
mov
xor
add
clc
movsb
clc
loope
js
inc
clc
hlt
xchg
hlt
dec
mov
add
ja
xbegin
add
add
add
out
pop
mov
jle
jmp
outsl
clc
xchg
inc
clc
xor
add
add
add
scas
add
add
mov
and
add
inc
clc
mov
mov
xor
add
jmp
add
loopne
push
add
fisubs
add
sub
mov
insl
cmp
xor
add
add
daa
clc
scas
stos
mov
add
xor
add
add
add
mov
jo
add
cmp
mov
jbe
jg
jo
add
add
add
cmp
out
and
add
add
in
add
sar
mov
das
push
jg
into
fs
xchg
lret
add
hlt
mov
movsl
clc
and
add
jbe
xor
add
add
and
add
inc
clc
sub
adc
add
xchg
test
jge
clc
and
or
add
fmul
stc
mov
jno
add
sar
add
push
nop
lods
gs
loope
outsl
lock
mov
add
sar
add
mov
push
cmpsb
clc
jae
add
inc
clc
shll
add
jmp
clc
ret
clc
pop
pop
add
out
cli
add
mov
scas
js
clc
insl
leave
or
jmp
clc
fistl
pop
xchg
lret
pusha
add
mov
add
xchg
mov
pop
in
sarl
mov
inc
clc
mov
pop
adc
add
jns
add
icebp
mov
clc
push
add
mov
push
test
call
test
clc
test
clc
xor
sub
iret
out
bnd
insl
push
mov
clc
das
cld
data16
loop
stos
scas
xor
add
clc
adc
add
cmp
push
add
jge
sbb
mov
inc
add
pop
daa
clc
push
add
lcall
add
mov
clc
icebp
push
add
sub
add
clc
mov
or
cmp
clc
cmpsl
clc
pop
decl
add
sar
lods
dec
xchg
xchg
out
lahf
and
dec
mov
push
mov
add
mov
mov
add
mov
sub
add
add
data16
xchg
aas
lods
lahf
and
fnstsw
add
push
xchg
cmp
cmc
ja
clc
jne
in
jnp
add
add
adc
std
cmpsl
clc
mov
add
sbb
clc
pushf
bound
add
aad
clc
mov
int3
mov
insl
pop
xchg
or
sbb
int
sub
clc
cmp
add
push
add
pop
in
pcmpeqw
add
xor
add
inc
clc
cmp
add
push
add
pop
lods
jo
add
clc
out
inc
add
sub
add
clc
lods
fwait
dec
popf
iret
push
xchg
push
cmp
add
mov
inc
clc
mov
jl
mov
jae
add
add
movsl
clc
push
cmp
aas
mov
in
vcomiss
clc
lods
sbb
clc
mov
sar
lret
in
out
inc
add
and
xor
add
pop
decb
clc
and
add
clc
or
and
add
mov
lahf
sar
jge
dec
fnsave
in
arpl
add
mov
clc
es
in
mov
dec
and
push
imul
test
add
jp
pop
sbb
mov
pop
jg
inc
clc
jo
add
pop
push
clc
inc
add
mov
xchg
mov
xchg
xchg
stos
mov
add
cmp
add
xlat
mov
sar
mov
fbstp
sbb
clc
clc
push
fisttpll
dec
lret
pop
xchg
push
jns
insb
mov
out
cmp
clc
dec
addr16
add
add
clc
push
repnz
add
mov
mov
clc
mov
cmp
loop
mov
pop
sbb
add
add
clc
mov
bound
add
add
jle
xabort
pop
call
xchg
lock
inc
clc
loopne
mov
clc
insb
movsb
clc
sbb
clc
jp
mov
sbb
clc
push
enter
leave
es
dec
and
add
inc
clc
cmp
add
add
clc
cmp
sub
jge
in
in
xchg
mov
add
mov
pop
push
add
and
add
jno
add
aaa
push
add
jbe
cmp
ljmp
pop
push
clc
cmp
movsl
clc
cmp
sub
add
clc
cmp
shl
iret
repnz
clc
or
clc
js
add
push
pop
cmp
clc
sar
ds
jns
inc
clc
lods
mov
inc
clc
inc
add
sub
clc
xchg
push
jmp
or
clc
mov
shr
dec
pop
push
add
dec
xor
add
and
add
add
xor
add
mov
inc
add
movsl
clc
xchg
mov
add
clc
cmp
jnp
clc
inc
clc
mov
add
add
mov
inc
clc
add
clc
cmc
dec
clc
rcrb
cmp
fstpl
add
movsl
clc
cmp
daa
clc
rcrb
clc
loop
int3
dec
int
aam
push
and
add
add
xchg
fsubrs
xchg
ljmp
scas
adc
clc
cmp
mov
fstpl
sub
loope
mov
rclb
clc
jmp
inc
clc
mov
repnz
insb
push
pop
clc
ret
clc
sbb
jle
and
add
sar
add
mov
clc
add
add
add
add
clc
dec
inc
clc
add
add
push
lret
xchg
popf
out
lcall
sar
or
mov
fmuls
clc
jbe
cmpsl
clc
jle
sbb
push
adc
add
iret
outsb
aaa
xor
inc
clc
pop
clc
daa
clc
sbb
das
push
push
add
incb
add
clc
mov
add
in
pushf
ljmp
inc
add
sti
mov
aad
js
clc
jns
scas
inc
add
es
insl
scas
imul
aaa
add
into
jne
add
jo
add
cmp
movsl
clc
and
add
sub
jp
clc
data16
push
add
and
add
add
clc
sub
addr16
push
decb
add
ljmp
clc
jb
add
clc
shlb
xchg
std
mov
add
add
add
loop
test
icebp
dec
xchg
int3
dec
xchg
ret
adc
add
clc
mov
xabort
insb
sbb
mov
jbe
shr
test
xor
add
push
mov
add
pop
add
add
clc
mov
inc
add
mov
ds
data16
sub
clc
jle
arpl
add
clc
jb
add
std
clc
and
jp
xor
add
fs
mov
clc
int3
mov
fcomps
pop
cmp
jge
clc
mov
cmpsl
clc
outsl
cwtl
mov
pop
sub
mov
dec
mov
inc
add
cwtl
or
push
add
insl
stos
ja
loope
jp
incb
add
mov
clc
dec
sbb
push
cmp
mov
daa
clc
das
pop
pop
xchg
ljmp
test
and
add
xchg
inc
clc
cmpsb
clc
rolb
add
jecxz
repnz
loop
dec
xchg
loopne
notb
aad
sar
add
push
add
jmp
pop
sbb
add
adc
add
lahf
and
fs
incl
add
idiv
jp
fisubl
xor
push
stos
sub
cmp
xchg
ljmp
cmpsl
clc
pop
clc
je
clc
std
lret
add
clc
imul
test
jo
add
add
pusha
add
mov
outsb
jmp
decl
xchg
jmp
stos
cmp
clc
push
aaa
leave
jl
add
aaa
shll
add
sbb
and
add
ror
test
dec
mov
add
adc
add
adc
inc
clc
sub
add
test
or
add
test
xor
mov
clc
fs
arpl
add
iret
in
dec
in
sbb
clc
xchg
pop
outsl
stos
or
cli
sahf
es
lahf
data16
cmp
add
adc
lock
out
and
add
sar
jp
cmp
dec
mov
add
mov
mov
fistpl
xor
insl
lret
add
inc
add
mov
pop
jecxz
fsts
clc
jl
clc
mov
and
clc
sbb
pop
xor
add
add
pop
sub
jno
add
clc
int
add
push
inc
add
dec
int3
js
inc
add
aas
pop
fsts
jmp
stc
movsl
clc
out
icebp
cmp
clc
cmp
cli
movsb
clc
fwait
dec
fwait
sub
mov
jns
push
add
cmp
fstps
add
imul
clc
or
movsl
clc
lcall
add
add
call
gs
in
adc
add
xchg
xchg
sar
xor
add
stos
push
pop
cmpsl
clc
aad
inc
add
lods
or
dec
pop
sub
fsubrs
cmp
and
clc
mov
mov
add
add
dec
ss
add
add
pop
or
mov
movsl
clc
lret
mov
xchg
or
xor
add
clc
lcall
add
mov
dec
ret
clc
sub
mov
add
xor
dec
vmovaps
jp
pop
fisubs
add
clc
jmp
imul
icebp
mov
loope
jecxz
and
add
mov
add
mov
add
add
clc
imul
jecxz
sarb
add
cld
jns
or
add
mov
clc
mov
clc
xlat
mov
clc
ljmp
push
out
dec
push
add
aas
insb
cmc
xchg
pop
inc
clc
pxor
cmp
mov
add
lret
jae
add
clc
cmp
or
xabort
add
lcall
pop
stc
inc
clc
sub
add
inc
clc
inc
add
jle
add
mov
cmpsl
clc
inc
add
xchg
lods
pop
jecxz
or
dec
lret
adc
out
sub
clc
lods
flds
clc
int3
pushf
inc
add
sub
mov
mov
inc
clc
mov
or
sbb
ss
clc
push
negl
in
loopne
bound
add
jns
clc
adc
add
punpckhbw
add
fcmovu
rorl
or
clc
cmp
outsb
ret
clc
jb
add
add
add
add
add
fwait
loop
int
xchg
mov
add
xchg
jl
pop
clc
sbb
movsb
clc
dec
dec
push
add
sub
es
dec
pop
mov
clc
mov
xchg
bound
add
add
mov
inc
add
ss
add
clc
decb
clc
xlat
mov
lahf
in
and
add
jle
push
into
data16
ja
jae
add
clc
xchg
fwait
popa
add
and
add
push
jns
clc
xbegin
mov
clc
fiadds
add
out
incb
add
adc
add
xchg
add
add
es
fimull
inc
clc
or
add
fs
das
clc
lods
bound
add
lret
out
dec
mov
clc
aam
clc
pop
push
sar
clc
mov
push
sahf
test
test
jg
pop
xor
push
add
aad
scas
inc
clc
and
add
clc
push
cmpsb
clc
adc
dec
inc
add
inc
add
xchg
int3
ret
clc
pop
inc
clc
imul
add
popf
stos
insl
popa
add
call
movsb
clc
xbegin
add
mov
add
add
hlt
mov
lret
sub
add
add
into
repz
or
add
push
xchg
cmp
mov
add
adc
leave
push
add
pminsw
es
mov
clc
push
add
or
dec
in
adc
add
jo
add
clc
sub
add
mov
adc
add
mov
pop
insl
fucomp
pop
shll
clc
mov
sti
xchg
aas
arpl
add
add
add
mov
mov
ret
clc
mov
clc
int3
in
xchg
cmp
aad
ja
pushf
mov
clc
ljmp
add
add
fstpl
cmpsb
clc
jle
push
cmp
dec
ljmp
mov
lods
insl
sub
add
pmovmskb
adc
add
sar
movsb
clc
mov
add
add
xor
add
sub
ss
clc
pop
sahf
xor
add
into
lret
aaa
pop
clc
and
pop
clc
lret
mov
clc
xabort
clc
sbb
clc
fs
jbe
cmp
clc
push
xlat
aad
into
or
aam
and
add
jp
or
clc
push
xchg
sub
xlat
mov
lahf
pop
shll
mov
mov
addr16
mov
clc
push
clc
sub
jno
add
daa
clc
add
add
sbb
fs
xchg
lret
add
cli
mov
add
xchg
inc
add
inc
add
jge
add
pop
imul
scas
lea
add
es
push
add
stos
mov
clc
push
add
mov
popa
add
sub
clc
jo
add
movsb
clc
inc
add
pop
es
inc
add
ficoml
clc
jmp
lret
mov
dec
int
add
push
add
out
out
xlat
push
pop
arpl
add
mov
cmp
outsl
aas
call
cmpsb
clc
and
add
clc
jbe
clc
lcall
das
test
jne
clc
test
insb
sub
pop
xor
add
lods
clc
mov
lahf
mov
clc
fstpt
clc
xor
add
lahf
imul
imul
dec
clc
add
add
clc
cmp
in
push
add
rcll
mov
add
adc
cmp
or
add
lret
rorb
ret
clc
mov
flds
add
dec
pop
clc
pop
clc
cmc
push
jbe
clc
sbb
add
add
mov
ficoml
add
lahf
and
add
add
add
clc
mov
adc
add
push
push
add
xor
add
clc
out
mov
clc
nop
push
jmp
adc
add
add
pop
outsb
mov
jl
stc
mov
addr16
rolb
jae
add
add
mov
in
stc
test
cmp
mov
add
scas
pop
sub
sub
add
outsl
xor
add
addr16
xor
frstor
add
mov
add
mov
out
pop
sbb
add
adc
or
adc
data16
mov
clc
cmpsb
clc
mov
pop
clc
xor
add
add
ja
pusha
add
pop
jns
add
fld
clc
fsubp
clc
dec
ds
push
add
or
clc
jb
add
movsb
clc
mov
add
add
clc
and
add
pop
xor
add
test
mov
dec
sub
add
pop
imull
clc
mov
adc
cwtl
fimull
xchg
fcoms
add
xchg
aas
cmp
xchg
cmp
push
test
clc
xor
sbb
cmp
add
dec
hlt
out
xbegin
xlat
jnp
jo
add
jmp
testl
clc
mov
scas
and
add
clc
and
push
add
push
ja
daa
clc
dec
jecxz
clc
jecxz
mov
sti
add
add
xabort
clc
out
pop
imul
cs
imull
add
mov
pop
jecxz
inc
clc
add
add
pusha
add
inc
add
sub
loop
jne
clc
mov
inc
add
outsl
into
dec
mov
repnz
xchg
mov
add
loop
add
add
add
add
and
clc
and
add
inc
add
and
add
test
jb
add
int
jns
mulb
add
clc
fs
notl
clc
fdecstp
mov
mov
test
gs
jp
push
add
push
add
push
lahf
pop
outsb
mov
xlat
ja
jge
mov
pop
clc
test
lcall
pop
mov
inc
clc
call
lahf
sbb
outsl
xabort
stos
sub
add
pop
out
test
push
add
cmp
and
add
add
mov
pop
mov
sub
add
into
cmp
clc
lea
clc
ffree
clc
es
inc
add
mov
out
jb
add
clc
add
add
mov
pop
pop
loop
out
mov
add
mov
fbld
add
scas
js
arpl
add
clc
outsl
out
sbb
clc
imulb
add
aam
add
mov
clc
ljmp
clc
cmp
add
add
ds
add
jmp
sub
mov
clc
inc
clc
in
dec
mov
xchg
insl
jb
add
iret
or
fcomps
hlt
jnp
pop
sbb
mov
aaa
test
clc
shr
out
mov
jae
add
sbb
xor
add
je
add
in
add
add
pop
dec
dec
or
clc
lods
cli
mov
xchg
nop
mov
dec
adc
add
aam
xor
add
add
popf
faddl
add
insb
push
sub
dec
in
and
add
clc
sub
and
xchg
add
add
pop
add
add
and
sarl
clc
mov
add
mov
shr
or
push
xor
add
aad
xchg
adc
add
fsub
clc
js
cmp
push
add
add
int3
stos
pop
add
add
sub
add
in
and
or
add
pop
push
cs
lods
cmp
clc
jecxz
add
add
lods
xchg
cmp
clc
sbb
clc
sub
cwtl
sub
add
inc
add
rdpmc
add
adc
add
mov
add
incl
sbb
cmp
push
aaa
adc
add
push
sub
testl
pop
fisubrl
add
test
icebp
adc
add
sub
clc
pop
pop
out
clc
out
add
jl
mov
popa
add
mov
sar
lods
cmp
cmc
aad
add
clc
push
add
fiaddl
mov
clc
inc
add
pop
xchg
ja
clc
pop
mov
push
push
jno
add
inc
add
cli
stc
mov
das
pop
jne
sar
or
out
lea
jmp
add
cmp
clc
lahf
mov
int
inc
clc
push
add
jl
add
mov
clc
ret
clc
in
clc
mov
xor
push
dec
fsts
add
sub
ds
add
add
