lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
outsl
outsl
outsl
outsl
outsl
outsl
outsl
sub
sub
sub
sub
jb
jb
jb
jb
ret
ret
ret
gs
gs
mov
or
or
or
add
add
add
add
add
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
in
in
in
in
in
in
in
in
in
in
mov
mov
rolb
addl
addl
addl
addl
addl
nop
nop
nop
nop
nop
loopne
add
add
add
add
data16
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
clc
clc
clc
clc
clc
clc
sbb
sbb
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ljmp
ljmp
ljmp
icebp
add
add
add
add
add
add
lcall
lcall
lcall
lea
lea
lea
lea
lea
lea
lea
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
jmp
jmp
jmp
jmp
jmp
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
insb
insb
insb
insb
insb
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
arpl
arpl
arpl
arpl
arpl
jo
jo
jo
jo
jo
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
mov
mov
mov
mov
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
call
call
call
call
call
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
inc
inc
inc
inc
inc
inc
inc
les
nop
nop
nop
test
test
test
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fmuls
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
inc
inc
inc
inc
inc
inc
inc
ret
ret
ret
ret
ret
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
test
test
test
xor
xor
xor
xor
xor
xor
xor
xor
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
sti
sti
sti
sti
sti
sti
sti
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
data16
data16
data16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lds
nop
nop
nop
nop
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
addl
addl
gs
gs
gs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
stos
stos
stos
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
push
push
push
push
push
push
clc
clc
clc
clc
clc
clc
jae
nop
nop
nop
nop
nop
nop
nop
pusha
pusha
pusha
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
gs
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
imul
jmp
jmp
jmp
jmp
jmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
mov
mov
mov
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
or
or
xchg
adc
adc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
out
out
out
out
out
out
out
fs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
nop
nop
nop
jae
jae
jae
jae
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
shlb
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
lea
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
je
je
je
je
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
xor
xor
jecxz
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
jecxz
jecxz
mov
mov
mov
mov
nop
nop
nop
fucomip
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
rcll
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
jns
jns
jns
jns
jns
jns
jns
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jo
jo
jo
jo
jo
jo
fs
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
nop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
nop
nop
nop
nop
nop
nop
nop
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lcall
lcall
lcall
lcall
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popf
popf
popf
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
ljmp
ljmp
ljmp
ljmp
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ljmp
lods
lods
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
nop
nop
es
es
xor
xor
xor
push
push
push
push
push
push
push
push
push
push
loope
loope
jno
jno
jno
jno
jno
jno
jno
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
in
ljmp
rcl
rcl
rcl
rcl
rcl
rol
ss
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
nop
das
das
das
nop
nop
sub
sub
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popf
popf
popf
popf
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
data16
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
sub
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
mov
mov
mov
mov
mov
mov
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ds
ds
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addl
cmp
cmp
cmp
cmp
cmp
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcl
rcl
rolb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
nop
nop
nop
cmp
cmp
cmp
enter
enter
lcall
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fstp
fstp
fstp
fstp
fstp
fstl
call
call
aaa
aaa
aaa
aaa
aaa
jae
jae
jae
jae
jae
jae
jae
jae
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
or
es
or
or
enter
enter
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
lcall
lcall
mov
xor
xor
xor
xor
mov
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sbb
sbb
sbb
sbb
sbb
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
xor
xor
xor
xor
xor
adc
adc
adc
adc
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
ret
ret
ret
ret
ret
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jo
jo
jo
jo
jo
jo
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
jg
jg
jg
jg
jg
jg
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lcall
lcall
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
bound
bound
bound
bound
bound
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jno
jno
jno
jno
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repnz
repnz
repnz
or
or
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
gs
nop
nop
nop
nop
nop
nop
nop
nop
nop
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
jge
jge
jge
imul
imul
imul
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
lret
lret
lret
lret
lret
lret
nop
push
push
push
push
push
push
push
push
push
push
push
push
clc
clc
clc
clc
clc
clc
clc
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
and
jp
jp
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
je
je
je
je
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
clc
clc
clc
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
push
push
push
push
push
push
test
test
test
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jae
jae
jae
jae
jae
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
add
add
add
add
add
add
add
add
in
int
int
int
int
int
int
int
int
int
int
int
int
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
out
out
call
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
shrb
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
ss
ss
ss
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
xor
xor
xor
xor
xor
xor
xor
xor
xor
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
loopne
loopne
loopne
loopne
nop
nop
nop
nop
nop
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
data16
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repnz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
test
test
test
test
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pfcmpge
test
test
test
test
test
test
test
test
test
mov
mov
mov
mov
mov
nop
nop
dec
dec
jns
jns
jns
jns
jns
jns
jns
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
js
js
js
js
js
js
js
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
xor
fs
nop
nop
nop
jae
mov
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
in
in
nop
scas
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
push
push
push
push
push
push
push
adc
adc
in
in
std
std
std
std
std
std
std
std
out
out
out
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cli
cli
cli
cli
cli
cli
leave
leave
leave
xchg
xchg
xchg
xchg
xchg
xchg
outsl
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
call
call
call
call
call
call
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz
repz
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
lret
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
addl
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
aad
aad
aad
aad
aad
aad
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
std
std
std
std
std
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
jle
jle
es
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
inc
lock
lahf
in
jle
add
add
add
pop
add
mov
jge
cmc
not
sub
xor
add
movsb
jge
jo
sarb
fdivrl
mov
mov
cli
cwtl
lret
add
mov
mov
push
add
xor
xorb
aas
lea
fsubp
and
push
add
push
add
sbb
mov
inc
add
xchg
cmp
cmc
mov
push
add
add
in
shlb
push
mov
push
out
test
mov
add
mov
in
and
sbbb
add
jmp
add
cmp
cmp
ffree
popa
dec
add
jnp
push
add
pop
add
pop
add
jmp
and
les
je
adc
add
add
shrl
imul
pop
test
add
sub
push
add
cmpsb
and
jmp
add
repnz
add
sbb
fnstenv
repnz
add
add
xchg
add
mov
test
popf
cmc
mov
inc
add
add
cld
mov
sbb
lods
test
add
leave
insl
lds
pop
mov
pushf
pushf
xor
inc
icebp
fwait
das
test
les
adc
dec
add
and
mov
xchg
mov
pop
add
int
imul
es
sti
rcll
popf
push
add
pushf
mov
jle
cmpsb
incb
pop
cltd
sbb
clc
xor
test
sub
repnz
into
popf
pop
mov
xchg
in
pop
add
add
xlat
sub
or
jecxz
and
inc
lahf
add
sbbl
push
fs
jg
xchg
xchg
mov
sbb
xchg
stos
dec
enter
add
sub
push
add
xor
fdivs
pop
jle
shr
fmull
sbb
cmovns
add
jb
pop
xor
ret
adc
aas
xor
pop
jmp
adcl
add
sub
pop
and
rolb
mov
add
push
stos
cs
iret
gs
cmc
push
add
stos
xlat
add
add
pop
add
add
cmp
mov
mov
push
xchg
mov
add
push
or
add
pop
cmp
loope
sbb
lret
fisubrl
das
lcall
into
mov
push
or
mov
add
daa
loop
pop
add
add
add
add
fisubs
push
scas
shlb
xchg
in
in
pop
cld
and
inc
add
popf
jno
sbb
into
sub
add
sub
xchg
jae
jp
xor
inc
add
add
std
arpl
mov
add
push
pop
add
mov
add
daa
xchg
iret
out
jne
add
jmp
iret
add
add
mov
stc
or
xor
mov
and
cld
mov
inc
add
xlat
dec
add
ds
cld
mov
fwait
test
xor
mov
fnstenv
int
add
add
gs
xor
and
insb
add
add
pop
jbe
out
add
movsb
lock
sub
pop
imul
test
in
lret
arpl
pop
add
add
lret
outsl
push
add
sbb
add
xchg
jns
rclb
add
dec
cmp
xchg
fsubs
add
lret
imul
std
shlb
add
add
add
add
mov
jnp
mov
xchg
mov
lods
lock
dec
add
mov
sbb
bound
mov
push
add
fstl
daa
cmc
add
call
mov
xlat
aad
add
add
sbb
cmp
mov
add
imul
add
pusha
add
fwait
xchg
add
jge
mov
iret
xlat
test
aaa
ret
loope
mov
hlt
jae
aaa
imul
dec
add
lds
lea
and
add
imul
add
scas
jnp
add
adc
scas
rclb
add
add
add
stos
cmp
aad
lds
add
push
aam
jae
mov
or
add
cmp
repz
add
bound
je
loop
lret
in
pop
andb
sar
sti
inc
shrb
popa
sar
push
add
add
mov
out
sbb
mov
add
popf
add
inc
add
add
lea
add
jno
add
or
push
mov
repz
add
add
mov
or
mov
add
mov
add
mov
jp
dec
add
cmp
lock
movsb
jmp
ffree
mov
add
adc
cmc
std
cmpsb
pop
pop
lret
outsb
add
outsb
add
add
loope
in
add
leave
sub
adc
pop
add
jmp
mov
add
mov
add
test
add
mov
add
mov
or
pop
jbe
icebp
pop
outsb
add
pop
add
pop
pop
and
mov
push
lods
add
jl
fxch
cmp
lods
jb
out
add
mov
sbb
add
xchg
fcomip
dec
fcomp
jb
dec
addr16
out
das
jns
jp
nop
aam
mov
cmpsl
pop
and
adc
jbe
inc
add
fidivl
add
push
mov
jnp
xor
dec
jno
push
pop
add
mov
or
jmp
pop
and
fistps
add
add
add
test
mov
xchg
sbb
pop
push
add
add
add
add
testb
push
and
add
rorl
xlat
loope
dec
cli
push
add
mov
mov
pop
push
pop
add
add
js
dec
mov
push
pop
loop
mov
fidivrs
add
pop
out
xchg
mov
repnz
mov
add
mov
loop
stos
movsl
dec
inc
mov
add
xchg
sub
or
aam
aas
xor
lret
sbb
add
jge
les
ljmp
adc
test
pushf
call
add
mov
add
lret
xor
sub
xor
popf
xor
push
add
adc
insb
add
add
mov
add
jge
mov
cmpsl
inc
add
adc
mov
mov
add
dec
scas
or
inc
add
inc
add
rorb
sbb
cli
xchg
pop
add
fdivr
jo
inc
add
add
rcrb
stc
adc
stos
jo
and
in
add
add
js
insb
add
add
jns
sub
cmp
pop
into
fwait
push
add
in
data16
xchg
rorb
inc
add
add
pop
mov
add
sbb
add
jl
inc
dec
add
mov
in
lods
stos
mov
cmp
into
add
cltd
iret
fistpl
sbb
mov
cmpsl
icebp
add
add
les
loop
into
jmp
add
cmc
shrl
repnz
adc
cmp
test
sub
fwait
aam
cmp
jnp
add
push
mov
add
xchg
mov
mov
outsb
add
xchg
push
add
add
jb
scas
cmp
add
jmp
add
add
leave
cwtl
mov
dec
movsl
mov
push
add
mov
add
gs
dec
push
pop
add
add
mov
inc
xchg
pop
add
mov
int
imul
iret
mov
aaa
dec
add
add
add
jnp
jg
out
sbb
lock
jbe
pop
add
adcl
sbb
add
push
add
bound
jg
lret
push
add
imul
add
add
mov
add
lret
loope
add
add
into
test
add
mov
add
sub
aad
addr16
add
imul
add
or
mov
pop
push
insb
add
jmp
add
add
int
mov
notb
add
bound
mov
out
mov
test
add
inc
add
pop
add
leave
cmpsb
loope
pop
add
add
push
add
insb
add
add
jmp
iret
xlat
dec
add
push
je
fcompl
sub
aaa
push
add
mov
jbe
pslld
inc
add
add
pop
sub
stos
insb
add
add
scas
push
add
add
add
lods
lahf
scas
iret
pop
out
sub
sub
cld
lods
incl
in
daa
xor
add
mov
add
es
mov
and
add
bound
add
sub
pop
sbb
cmp
add
fistpl
add
add
add
add
add
xor
pop
sub
jg
add
sti
jge
iret
xlat
xchg
mov
bnd
add
add
add
lret
inc
mov
mov
add
icebp
xor
fnstsw
rcrl
add
int
inc
rcll
out
jecxz
xchg
ljmp
fstl
mov
add
add
mov
ja
cmp
xchg
xchg
inc
add
mov
add
loope
add
mov
adc
add
mov
mov
mov
adc
in
pop
xchg
push
push
add
data16
xchg
leave
imul
dec
mov
sbb
add
hlt
push
into
mov
add
push
dec
add
roll
fldcw
roll
ret
sbb
push
inc
push
add
add
cmp
sbb
mov
fildl
xchg
inc
add
jl
or
popa
and
hlt
movsl
ret
les
pop
add
dec
inc
cli
addr16
cmp
daa
popf
cmc
sub
sub
lcall
ret
push
mov
pop
imul
add
add
cmp
push
test
divb
sub
and
into
jae
lods
jp
aam
les
jns
add
les
and
leave
mov
pop
das
pop
fisttpl
add
xchg
xchg
push
jne
push
add
fbld
sahf
sub
jge
add
test
stc
cmc
addr16
jmp
add
add
add
jb
mov
add
lods
stos
mov
fistps
cmp
fcoml
iret
mov
adc
or
mov
add
mov
cmp
outsl
test
xor
jmp
jp
movsb
lea
std
mov
adc
mov
xor
jnp
jnp
add
in
inc
xchg
int
sbb
je
mov
mov
push
add
pop
in
cmp
adc
sub
aaa
jle
scas
pop
add
add
mov
or
loop
add
mov
arpl
or
jae
fistpl
mov
add
push
add
pop
fstpl
xchg
mov
xchg
jb
test
ljmp
add
add
test
add
push
add
pushf
cmpsb
pushf
mov
pop
add
stos
scas
jbe
lcall
stos
movsl
ljmp
in
xlat
cmc
popf
aad
add
insl
loopne
add
inc
add
cmp
int3
dec
add
dec
movb
ljmp
vrcpps
add
add
ret
data16
add
lods
ret
jns
mov
push
inc
ror
outsl
mov
add
inc
repnz
add
int
fdivrl
xchg
xor
fucom
inc
or
inc
cmp
std
repz
add
inc
imul
mov
add
negb
or
stos
xchg
shll
cli
sub
stc
dec
add
fnsave
sarl
add
std
iret
cld
pop
inc
mov
lods
sbb
insl
sbb
pop
into
xor
hlt
cmp
cmc
pop
daa
inc
add
add
lods
mov
add
leave
cmc
mov
aad
add
mov
das
lods
hlt
sub
add
bound
pmaxub
loopne
xor
aas
mov
mov
xlat
popf
jmp
add
mov
lds
add
add
test
add
xor
mov
add
out
sbb
add
push
add
lea
add
push
add
jl
in
add
ficompl
sub
aaa
outsb
add
jle
add
add
cli
xlat
push
add
adc
push
add
jl
into
inc
add
pop
add
add
hlt
subb
pusha
add
push
add
cmpsb
add
je
mov
dec
add
out
ret
outsb
add
add
sbbl
shlb
add
test
shrb
adc
jnp
insb
add
add
lods
adc
sbb
sbb
jl
inc
aaa
out
scas
and
xchg
push
add
or
xchg
and
xor
add
cwtl
cmp
pop
sbb
stc
iret
jbe
stos
push
add
cmpsl
and
in
add
add
add
loope
add
dec
add
add
mov
loopne
outsb
add
and
cmp
or
imul
dec
add
add
nop
or
cmc
and
aaa
sub
out
in
stc
cmp
add
pop
out
repnz
adc
sbb
jae
add
dec
add
add
add
add
xchg
xor
cmp
cltd
sbb
cmp
add
add
add
add
in
inc
add
xchg
sahf
out
push
arpl
add
add
in
movsl
fsubrs
mov
pushf
lcall
icebp
fdivrl
jp
pop
push
dec
repnz
xchg
fidivl
nop
shl
pop
hlt
pop
add
into
jle
jns
and
xchg
mov
inc
add
iret
dec
mov
adc
add
xor
pop
jo
inc
add
lahf
frstor
xchg
xor
fnstenv
xchg
pop
add
add
jae
movsl
xor
jp
mov
jg
mov
add
add
add
lret
mov
addr16
leave
or
pop
pop
or
adc
pushf
out
and
lea
or
mov
add
add
jge
xchg
pop
add
bound
vmwrite
stos
roll
mov
mov
hlt
test
xchg
ret
dec
add
adc
add
add
xchg
icebp
cmp
add
add
pop
add
jb
adc
add
adc
addb
add
prefetchwt1
xchg
fidivrl
pusha
add
mov
loope
les
pop
les
add
in
loopne
movsb
aam
xor
mov
add
lock
add
sbb
cltd
lods
cltd
push
add
xchg
xlat
fnstcw
push
or
dec
add
cmpsl
loopne
popa
mov
rclb
push
jne
loope
jle
stos
imul
push
add
adc
fst
sbbb
add
imul
in
inc
in
loopne
addr16
cmpsl
int
jno
add
sbb
pop
cli
jns
add
add
ret
jb
mov
add
push
add
enter
add
pop
add
cmp
inc
add
test
lret
pop
add
int
test
add
lods
arpl
add
add
jle
aam
add
aam
scas
les
add
in
out
add
add
js
dec
in
cld
lcall
std
dec
add
add
push
add
add
add
add
test
add
cld
dec
add
dec
add
push
add
sahf
jne
iret
scas
test
dec
add
ror
jo
inc
add
add
push
add
jge
dec
movl
add
insl
adc
dec
jle
lods
shrb
mov
push
add
pop
imul
mov
add
addr16
jnp
sbb
add
xorb
add
jp
stos
jmp
xchg
mov
or
in
sbb
outsb
add
jbe
xor
cmpl
mov
scas
scas
rcrl
add
lds
add
into
xchg
mov
jle
fsub
repz
out
adc
add
add
add
lock
mov
add
cmp
sub
sbb
sbb
add
add
add
in
adc
outsb
add
or
add
jno
data16
push
lods
icebp
outsl
lods
pushf
jno
xchg
inc
mov
pushf
aas
out
enter
shll
add
ficompl
hlt
and
sbb
xor
inc
and
movsl
adcl
add
mov
add
imulb
xchg
movsb
icebp
push
add
cmp
mov
loop
add
add
add
dec
add
add
icebp
aas
or
push
pop
add
jns
push
out
inc
add
mov
iret
xlat
ljmp
sti
mov
or
or
jns
and
jb
jne
aaa
test
sbb
jne
pop
imul
xchg
in
bnd
and
inc
add
add
dec
dec
fistpll
jo
enter
movsl
mov
sub
push
add
pop
shrb
insb
add
add
filds
test
push
add
mov
out
sbb
mov
je
inc
ja
sbbb
ds
shll
pushf
lea
int
mov
push
ja
and
mov
xor
cli
mov
inc
std
and
int
xor
add
xor
stos
add
shll
cmp
push
add
fistpl
rolb
push
add
bound
int3
pop
into
push
add
add
add
or
mov
loop
sbb
orl
add
adcl
fisubrl
stos
or
add
jl
jnp
add
add
rcll
add
and
add
mov
push
insb
add
jecxz
add
add
add
js
lock
add
lahf
bound
adc
lcall
or
outsl
adc
sub
insl
add
lcall
lods
and
shl
and
cmp
out
add
add
add
jp
sub
jns
ret
adc
or
fcoms
add
mov
add
add
add
imul
rcll
xchg
fdivr
mov
lods
push
pop
add
scas
add
jne
mov
fiadds
add
pxor
add
shlb
mov
loope
add
jecxz
push
cmp
in
int3
inc
data16
shll
enter
scas
and
add
sub
add
mov
sub
xchg
jbe
push
add
pop
adc
add
rcll
mov
gs
ret
aaa
adc
add
add
stos
nop
addr16
or
add
xchg
data16
add
sub
add
jne
cmp
adc
daa
push
add
xchg
xchg
sti
lret
imul
or
ret
add
cmpsb
jp
dec
mov
inc
push
test
decl
add
add
add
decl
ljmp
adc
add
dec
add
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
in
lods
mov
sbb
int
iret
in
pop
gs
mov
add
add
popa
inc
add
push
add
test
lahf
or
lds
mov
aad
imul
add
inc
push
add
jnp
adcb
add
insl
ljmp
inc
add
push
iret
dec
add
xchg
lods
sub
dec
add
ljmp
xchg
cwtl
enter
add
add
mov
add
mov
pop
sbb
add
aam
cli
cld
inc
test
add
inc
add
dec
jbe
imull
xchg
ret
data16
add
cmc
jg
cmp
add
rcrl
add
add
icebp
int3
mov
add
mov
lcall
add
lss
lods
notl
fmul
mov
or
jmp
inc
flds
add
add
sbb
mov
or
mov
add
add
aas
mov
add
inc
add
ficoms
pop
push
add
fsubrl
xor
scas
lret
das
jns
inc
inc
add
sbb
jae
fldenv
pop
insb
add
push
add
add
or
mov
push
add
sbb
push
add
add
add
xchg
fcompl
hlt
inc
add
pop
insl
les
dec
cmc
jb
or
and
loopne
sahf
out
add
das
imul
dec
add
and
mov
cli
call
ja
adc
pop
cmpsb
push
add
add
pop
cwtl
mov
xor
fdivrs
mov
call
cmpsl
pop
ret
cmpb
popf
and
push
jmp
add
out
das
pop
push
add
pushf
cmp
jp
nop
add
insl
sub
mov
insl
sti
and
add
add
add
call
add
iret
or
mov
add
inc
add
aam
sub
out
push
aaa
ja
pop
mulb
add
adc
xchg
add
mov
dec
add
push
mov
adc
add
lahf
jae
sbb
push
add
add
pop
stc
mov
test
mov
repz
mov
add
add
mov
add
lret
popa
mov
sti
popa
pop
pop
insl
or
adc
push
add
loope
xor
mov
add
cmp
or
imul
fadds
out
and
in
add
sarb
mov
mov
add
add
shrb
dec
enter
add
adc
sbbb
add
cmp
adc
pop
mov
pop
lret
mov
add
dec
ljmp
mov
pop
add
push
push
add
in
add
add
xchg
push
movsb
add
cmp
cmpsb
add
add
fdiv
test
sub
loope
addr16
add
imulb
out
gs
add
sub
mov
rcl
adc
repnz
mov
add
in
pop
xchg
in
mov
insb
add
aaa
inc
add
add
pop
add
or
xchg
mov
add
add
stos
mov
add
xor
gs
pop
add
outsl
dec
add
add
add
adc
into
xchg
mov
cmp
mov
nop
stc
arpl
and
cltd
cmp
clc
inc
add
adc
add
test
pushf
jecxz
leave
lods
jmp
imulb
dec
add
xor
push
add
xchg
int3
cli
adc
faddl
cmpsb
sbb
xchg
add
pop
jns
add
scas
enter
mov
sbbb
dec
push
or
je
imul
sub
scas
insb
add
popf
xor
or
add
pop
or
das
std
jns
add
insb
add
add
cld
pusha
add
test
add
ljmp
sub
mov
add
loop
add
stos
add
cmpsl
lods
pop
add
nop
pop
mov
add
popa
mov
rol
int3
lret
fisttps
sub
adc
or
cltd
cld
sub
pushf
dec
into
push
add
add
add
lods
xlat
pop
cli
push
add
jl
sbb
popf
xor
lods
push
add
aas
inc
mov
sub
aam
add
lods
xchg
fsubrl
data16
mov
inc
add
mov
inc
clc
mov
addb
jnp
movsb
std
ja
add
or
setge
arpl
fwait
in
jge
add
add
mov
and
fidivrs
test
dec
imul
ret
cltd
or
data16
add
add
pusha
add
icebp
add
lods
imul
add
clc
and
imul
push
add
add
fadd
test
mov
push
jne
jge
mov
dec
add
lods
popf
add
push
add
jno
aaa
dec
add
testl
dec
lret
jge
out
lea
shll
add
call
add
or
mov
add
or
jbe
push
add
push
add
nop
into
xor
nop
lods
test
add
insl
ja
add
add
sbb
adc
imul
jno
dec
add
mov
add
and
lea
add
mov
xor
sub
int
lods
xor
dec
pop
add
jns
pop
shrb
dec
adc
pop
mov
mov
popa
stos
cmp
lds
repz
add
cmp
push
add
add
add
inc
std
and
out
fcoms
sub
xchg
cmp
inc
add
insl
or
adc
mov
add
dec
add
inc
add
add
pop
add
mov
push
or
push
add
jnp
mov
and
jge
inc
xor
sarb
leave
inc
add
dec
add
cmc
sarb
scas
insl
jae
popa
or
pop
push
add
in
mov
pop
add
adc
lods
mov
in
add
ljmp
mov
inc
scas
lret
arpl
add
add
add
lret
jb
shr
in
and
add
mov
aam
add
push
outsl
int
mov
mov
xor
xchg
pop
inc
cli
or
inc
movsl
mov
add
int
adc
adc
add
mov
jmp
jb
in
add
jg
push
add
in
cmp
jg
mov
push
add
into
fwait
jns
imul
xor
add
or
insl
popa
mov
insl
loop
xchg
lret
pop
lods
jp
xchg
popf
mov
add
addr16
cmp
test
sub
lcall
xchg
add
in
in
add
jnp
add
add
add
ret
in
movsl
inc
jnp
add
lods
mov
scas
arpl
call
add
stos
push
jns
int3
and
cmp
fidivrs
out
mov
out
pop
add
jo
in
dec
in
jns
cltd
mov
add
add
std
xchg
icebp
std
dec
sub
mov
add
add
cmp
add
pop
je
leave
loope
add
jecxz
add
jmp
add
add
mov
push
jle
adc
movsb
pop
in
mov
pop
hlt
fisttpl
jne
adc
pop
add
add
lods
out
add
and
xchg
push
add
cld
inc
add
add
scas
inc
add
pop
add
add
push
pop
mov
scas
cmp
sub
push
sbb
cld
mov
jae
xorb
add
add
xor
stc
cmp
adc
add
add
data16
add
add
add
shr
in
cs
pop
ret
int
add
cmpsl
imul
and
out
lcall
insl
xor
rclb
add
add
cmp
dec
mov
pop
es
neg
in
add
xorb
push
add
dec
add
add
xchg
dec
xchg
scas
mov
xchg
pop
add
add
or
mov
push
mov
and
sbb
xchg
nopl
add
jp
dec
imul
negb
add
xchg
popf
pop
mov
cmc
cmp
add
in
mov
in
test
ret
adc
and
dec
add
add
sub
jo
mov
aaa
mov
adc
jnp
lcall
hlt
add
lods
inc
xor
add
testl
scas
scas
xor
inc
dec
movsb
imul
mov
dec
mov
popf
scas
inc
add
dec
add
xchg
fidivrs
ljmp
sti
push
sub
xor
push
add
jnp
out
pushf
inc
int3
inc
out
pop
adc
jae
shr
push
cmp
dec
add
add
pop
add
aas
xor
and
adc
add
add
lods
xchg
adc
push
add
in
std
push
add
jno
inc
mov
iret
xorl
faddl
inc
add
or
lods
add
mov
stos
fdivrs
add
sub
xchg
inc
add
add
xchg
pop
xchg
xchg
xor
sub
jecxz
adc
stos
shll
inc
add
add
dec
test
mov
jge
add
mov
adc
add
stos
mov
inc
jne
add
pushf
movsl
gs
add
testl
add
pop
xor
into
pop
xor
add
jnp
leave
dec
add
jl
push
lds
ret
cwtl
and
iret
mov
xchg
lods
and
mov
xchg
mov
mov
mov
push
add
lds
jo
jg
jnp
iret
jle
idiv
jg
jns
daa
orb
mov
dec
add
and
gs
popl
add
rolb
add
xlat
xchg
add
push
inc
pop
add
jmp
add
in
repnz
add
and
mov
add
push
add
mov
add
add
push
add
adc
loope
add
out
daa
popa
jo
inc
add
add
add
add
push
add
shlb
pusha
add
mov
xchg
lock
xchg
add
adc
pop
add
add
cmp
sbb
lea
or
add
adc
and
jbe
insl
xorb
lods
scas
mov
insb
add
add
sbb
in
xchg
add
or
or
scas
cmp
xlat
cmp
aam
add
add
mov
add
sub
cmp
xchg
mov
add
inc
mov
pop
adc
sarl
or
and
jno
jp
fmulp
fwait
cmp
cmc
pop
hlt
in
push
mov
bound
insl
imul
sub
adc
cmp
or
shll
popa
jbe
loopne
add
jae
fisubs
mov
jbe
movsl
jns
add
aad
xchg
les
add
dec
add
test
jbe
inc
add
add
mov
inc
push
add
movsb
cmp
add
nop
rclb
add
mov
xchg
pop
adc
mov
dec
add
sub
push
add
jp
dec
add
add
add
lret
xor
and
and
add
pop
mov
dec
loopne
out
push
les
std
movsb
out
jl
push
add
push
add
cltd
push
add
add
xchg
add
or
add
add
lret
or
jle
jge
call
pushf
bnd
pop
mov
add
add
add
xorb
pusha
add
dec
xchg
popa
shlb
add
xchg
add
add
test
add
dec
add
aaa
jne
sub
fsubrl
mov
hlt
fst
jp
in
push
add
ljmp
add
jl
bound
fldt
mov
add
adc
and
ds
mov
push
add
leave
test
mov
scas
outsl
lock
add
add
xchg
add
enter
add
add
lret
jecxz
leave
int3
dec
mov
testl
stc
fs
lea
lock
insl
xchg
iret
aad
xor
out
or
jl
fsubs
inc
and
repz
pop
lahf
test
push
jge
bound
daa
movsl
out
add
inc
add
cs
mov
loopne
or
adc
jne
add
pop
insb
add
imul
jae
xchg
and
mov
sub
mov
pop
add
and
xor
sti
mov
insb
add
lds
pushf
insl
in
add
shll
sub
mov
add
add
push
add
xor
cmp
mov
push
add
fstps
ds
inc
scas
inc
add
add
pop
add
jae
add
dec
add
mov
add
pop
addr16
xchg
mov
sub
call
add
add
mov
fidivs
scas
push
add
or
loope
add
divl
xor
repnz
add
fisubs
mov
iret
lods
ffree
outsl
clc
inc
add
cmp
outsl
pop
pop
andb
and
sbb
sbb
push
insl
insb
add
add
into
scas
aad
mov
add
add
add
inc
add
mov
cwtl
pop
test
mov
push
add
mov
int3
push
add
fdivrs
or
sub
int3
adc
test
add
and
test
cmove
scas
push
add
add
ljmp
sub
scas
cmp
test
fwait
push
add
inc
ja
cmp
clc
repnz
nop
nop
jae
add
add
pusha
clc
repnz
nop
nop
jae
popf
mov
mov
add
clc
repnz
nop
nop
jae
add
sarb
repnz
nop
nop
jae
add
lods
add
add
push
add
clc
repnz
nop
nop
jae
add
dec
sbb
or
fs
fld1
clc
repnz
nop
nop
jae
mov
subl
nop
nop
jae
push
aas
add
call
clc
repnz
nop
nop
jae
add
ja
repnz
sub
add
clc
repnz
nop
nop
jae
dec
add
repnz
nop
nop
jae
add
add
or
pusha
add
clc
push
mov
xchg
ret
fwait
add
add
clc
repnz
nop
nop
jae
mov
add
add
cmp
nop
push
mov
leave
nop
jmp
add
add
add
add
adc
repnz
nop
nop
jae
or
mov
push
push
mov
xchg
ret
add
xchg
add
add
push
mov
xchg
ret
add
cs
add
push
push
nop
push
mov
leave
nop
jmp
add
test
pop
shl
lea
push
mov
xchg
ret
mov
add
add
add
push
mov
xchg
ret
add
sbb
add
fildl
push
push
mov
xchg
ret
addl
add
or
je
clc
repnz
nop
nop
jae
adc
gs
call
clc
repnz
nop
nop
jae
add
or
add
out
daa
add
nop
push
mov
leave
nop
jmp
inc
push
enter
cld
nop
nop
jae
add
mov
sub
xor
test
or
add
repnz
nop
nop
jae
dec
add
les
mov
clc
repnz
nop
nop
jae
add
add
jge
push
or
repnz
nop
nop
jae
add
add
popa
xchg
xchg
fistpl
push
mov
xchg
ret
and
add
push
add
add
clc
repnz
nop
nop
jae
mov
aas
sahf
xor
push
mov
xchg
ret
fwait
xchg
add
popf
scas
test
add
add
clc
repnz
nop
nop
jae
add
lea
ja
clc
repnz
nop
nop
jae
add
push
push
mov
xchg
ret
add
addl
jmp
inc
sub
repnz
nop
nop
jae
popa
popf
add
ja
push
clc
repnz
nop
nop
jae
add
or
in
push
mov
xchg
ret
add
sub
loopne
repnz
nop
nop
jae
or
clc
add
add
repnz
nop
nop
jae
inc
add
lods
mov
cmp
push
mov
leave
nop
jmp
add
push
out
fildl
mov
clc
repnz
nop
nop
jae
mov
xor
dec
lahf
pop
push
mov
xchg
ret
add
scas
and
inc
add
jge
or
clc
repnz
nop
nop
jae
popa
gs
test
dec
add
jns
add
fwait
add
add
add
mov
add
add
adc
call
add
push
mov
xchg
ret
add
add
sahf
mov
push
mov
xchg
ret
add
test
add
dec
add
add
cld
nop
nop
jae
add
jbe
add
xchg
add
clc
repnz
nop
nop
jae
popa
add
add
add
pop
fwait
push
mov
xchg
ret
add
xor
add
mov
add
repnz
nop
nop
jae
add
add
add
mov
pushl
clc
repnz
nop
nop
jae
dec
aad
add
mov
xchg
ret
add
test
push
add
mov
fistpl
push
mov
xchg
ret
popf
inc
sub
add
sbb
repnz
nop
nop
jae
dec
clc
xor
add
add
xchg
xchg
clc
repnz
nop
nop
jae
mov
xchg
mov
push
mov
xchg
ret
add
and
mov
push
mov
leave
nop
jmp
add
outsb
add
stos
out
cmpl
nop
push
mov
leave
nop
jmp
add
add
jmp
mov
push
mov
leave
nop
jmp
sahf
add
jo
and
nop
nop
jae
add
dec
add
add
jge
clc
repnz
nop
nop
jae
dec
dec
addl
icebp
inc
dec
es
repnz
nop
nop
jae
jbe
dec
lds
jg
clc
repnz
nop
nop
jae
ja
fwait
test
jne
push
mov
xchg
ret
add
adc
dec
push
mov
clc
repnz
nop
nop
jae
add
aam
pop
clc
repnz
nop
nop
jae
add
clc
add
add
add
gs
repnz
nop
nop
jae
add
mov
int
dec
cmp
repnz
nop
nop
jae
inc
add
inc
mov
clc
repnz
nop
nop
jae
mov
cs
mov
clc
repnz
nop
nop
jae
add
add
pushf
mov
call
nop
jae
out
lods
or
mov
fwait
push
mov
xchg
ret
or
addl
mov
call
clc
repnz
nop
nop
jae
add
add
and
sbb
push
mov
xchg
ret
add
push
mov
lea
add
mov
add
add
xchg
fdivrl
add
pop
add
add
repnz
nop
nop
jae
insl
sbb
mov
lea
nop
push
mov
leave
nop
jmp
adc
popf
jno
inc
call
inc
add
fildl
inc
lods
add
add
clc
sub
add
add
adcl
cld
nop
nop
jae
dec
addl
in
leave
nop
jmp
add
addl
pop
add
clc
repnz
nop
nop
jae
ret
mov
add
subl
add
mov
leave
nop
jmp
mov
add
add
fistpl
clc
repnz
nop
nop
jae
add
add
mov
pop
inc
add
add
aad
xor
int3
out
pusha
clc
repnz
nop
nop
jae
add
push
sti
clc
repnz
nop
nop
jae
addl
lods
add
clc
repnz
nop
nop
jae
add
xchg
push
nop
push
mov
leave
nop
jmp
sbbl
inc
outsb
dec
add
or
clc
repnz
nop
nop
jae
adc
add
and
push
in
add
adc
popf
inc
push
mov
xchg
ret
test
aas
mov
add
add
push
push
mov
xchg
ret
popa
add
clc
mov
jmp
push
mov
xchg
ret
mov
xchg
aad
add
mov
xchg
ret
adc
add
add
nop
push
mov
leave
nop
jmp
add
cmp
repnz
nop
nop
jae
add
add
add
push
mov
leave
nop
jmp
lods
out
add
jne
clc
repnz
nop
nop
jae
push
mov
repnz
nop
nop
jae
aas
add
add
popa
mov
clc
repnz
nop
nop
jae
addr16
or
push
mov
leave
nop
jmp
xor
test
add
repnz
nop
nop
jae
sahf
aad
mov
add
inc
lock
mov
xchg
ret
add
add
cld
nop
nop
jae
add
add
pop
add
shlb
mov
repnz
nop
nop
jae
add
add
mov
xchg
ret
scas
add
orl
sub
jle
add
dec
add
test
add
clc
repnz
nop
nop
jae
popf
mov
shlb
in
leave
nop
jmp
add
inc
popf
add
inc
popf
dec
movzwl
clc
repnz
nop
nop
jae
dec
jbe
add
inc
mov
push
mov
xchg
ret
lods
add
dec
add
ret
add
sub
repnz
nop
nop
jae
lods
inc
add
cmc
pop
push
mov
xchg
ret
fildl
add
add
dec
add
mov
clc
repnz
nop
nop
jae
add
add
imul
and
add
add
dec
cmp
repnz
nop
nop
jae
mov
inc
and
pop
mov
nop
push
mov
leave
nop
jmp
popf
inc
or
clc
repnz
nop
nop
jae
add
xor
or
push
push
mov
xchg
ret
sbbl
inc
clc
repnz
nop
nop
jae
add
lods
mov
add
call
clc
repnz
nop
nop
jae
add
mov
push
mov
leave
nop
jmp
add
or
xor
int
clc
repnz
nop
nop
jae
ret
mov
clc
add
add
imulb
cld
nop
nop
jae
push
add
clc
repnz
nop
nop
jae
add
or
inc
inc
add
scas
rep
push
mov
xchg
ret
push
dec
add
fstps
mov
xchg
ret
addr16
add
add
jl
ret
push
clc
repnz
nop
nop
jae
push
mov
add
add
cld
nop
nop
jae
ret
or
test
fld1
clc
repnz
nop
nop
jae
test
jbe
mov
mov
stos
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
call
add
mov
add
add
add
add
add
divb
cmp
add
repnz
nop
nop
jae
mov
add
into
mov
mov
leave
nop
jmp
dec
test
add
mov
xchg
ret
add
xchg
popf
add
add
add
repnz
nop
nop
jae
or
xor
popf
clc
repnz
nop
nop
jae
ret
add
fisubrl
mov
mov
leave
nop
jmp
or
scas
out
add
jno
clc
repnz
nop
nop
jae
jbe
push
inc
add
pop
add
cwtl
imul
add
scas
add
fld1
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
inc
mov
ret
add
lret
jne
clc
repnz
nop
nop
jae
add
adc
cld
nop
nop
jae
or
add
add
fcomps
xor
nop
push
mov
leave
nop
jmp
add
add
in
ret
push
mov
xchg
ret
mov
addl
adc
mov
xchg
ret
add
or
mov
clc
repnz
nop
nop
jae
add
add
mov
push
add
clc
repnz
nop
nop
jae
add
add
add
insb
add
dec
sub
push
mov
xchg
ret
xchg
fwait
add
add
add
stc
shl
clc
repnz
nop
nop
jae
add
jbe
add
je
test
ja
add
inc
add
add
popf
lods
xchg
stos
push
clc
repnz
nop
nop
jae
addr16
call
insl
mov
repnz
nop
nop
jae
dec
dec
popa
add
adc
repnz
nop
nop
jae
add
add
add
dec
add
mov
clc
repnz
nop
nop
jae
jmp
popa
xor
xor
push
mov
xchg
ret
add
add
aam
sub
mov
xchg
ret
sub
add
add
outsb
cmpsl
add
nop
push
mov
leave
nop
jmp
popa
push
inc
repz
push
mov
xchg
ret
add
add
add
inc
mov
clc
repnz
nop
nop
jae
add
add
je
loope
lock
mov
xchg
ret
jmp
inc
add
adc
repnz
nop
nop
jae
mov
mov
gs
nop
push
mov
leave
nop
jmp
add
inc
adc
push
mov
leave
nop
jmp
add
aad
test
daa
add
push
mov
xchg
ret
call
inc
add
push
mov
leave
nop
jmp
add
aas
add
add
fld1
nop
push
mov
leave
nop
jmp
inc
add
inc
xor
clc
repnz
nop
nop
jae
add
mov
push
mov
xchg
ret
add
popf
xchg
mov
add
dec
add
repnz
nop
nop
jae
mov
fwait
push
add
cli
mov
repnz
nop
nop
jae
add
test
push
mov
leave
nop
jmp
add
inc
add
ret
add
clc
repnz
nop
nop
jae
add
fcomi
jmp
leave
nop
jmp
add
or
add
add
nop
nop
jae
add
add
add
inc
add
dec
add
clc
repnz
nop
nop
jae
test
cmpsb
and
call
leave
nop
jmp
mov
add
test
add
je
clc
repnz
nop
nop
jae
test
ret
xor
clc
repnz
nop
nop
jae
add
add
or
mov
clc
repnz
nop
nop
jae
jmp
add
push
clc
repnz
nop
nop
jae
adc
insl
or
repnz
nop
nop
jae
add
add
test
js
bound
mov
mov
xchg
ret
scas
add
xchg
xchg
xchg
sbb
mov
jo
add
add
lods
jbe
add
mov
nop
nop
jae
mov
dec
aad
xchg
mov
repnz
nop
nop
jae
test
sub
add
cld
nop
nop
jae
test
add
mov
sar
cld
nop
nop
jae
addr16
add
popf
mov
cmp
push
mov
leave
nop
jmp
adc
add
add
push
mov
clc
repnz
nop
nop
jae
addl
dec
add
pop
pop
clc
repnz
nop
nop
jae
addl
popf
test
push
sub
bnd
add
add
add
sahf
mov
nop
push
mov
leave
nop
jmp
test
mov
shr
clc
repnz
nop
nop
jae
xorl
add
pop
add
repnz
nop
nop
jae
add
inc
add
sahf
add
incl
add
add
add
popa
add
scas
dec
add
repnz
nop
nop
jae
lods
inc
add
add
ret
fwait
movzwl
nop
push
mov
leave
nop
jmp
add
add
push
mov
leave
nop
jmp
add
add
fwait
add
dec
nop
push
mov
leave
nop
jmp
popf
or
test
mov
jp
aaa
add
clc
repnz
nop
nop
jae
add
or
lods
popf
in
mov
clc
repnz
nop
nop
jae
dec
test
add
add
push
mov
xchg
ret
add
and
aas
mov
nop
push
mov
leave
nop
jmp
aas
xor
test
sub
repnz
nop
nop
jae
add
add
call
add
jl
jp
xchg
add
nop
push
mov
leave
nop
jmp
add
add
add
push
nop
push
mov
leave
nop
jmp
addl
add
pop
sub
mov
mov
xchg
ret
mov
add
add
add
clc
repnz
nop
nop
jae
add
add
roll
sahf
jge
add
add
mov
add
add
add
clc
sahf
add
inc
cs
fildl
test
repnz
nop
nop
jae
add
add
add
jae
repnz
nop
nop
jae
aad
addl
sbb
test
add
rcll
cld
nop
nop
jae
lods
aas
add
add
push
clc
repnz
nop
nop
jae
add
mov
sbb
sbb
repnz
nop
nop
jae
aad
add
sbb
jae
test
adc
add
repnz
nop
nop
jae
add
sub
xchg
nop
inc
add
mov
dec
add
add
stos
pop
add
cld
nop
nop
jae
mov
pop
call
push
push
push
mov
xchg
ret
addr16
insl
add
sbb
popf
cmpw
clc
repnz
nop
nop
jae
ret
addr16
add
pop
push
push
mov
xchg
ret
add
add
test
nop
nop
jae
add
inc
add
jl
lods
add
push
mov
xchg
ret
mov
add
push
mov
mov
xchg
ret
addl
sbbl
push
mov
leave
nop
jmp
popf
dec
add
or
ja
inc
push
clc
repnz
nop
nop
jae
add
add
add
fwait
call
clc
repnz
nop
nop
jae
add
nop
push
mov
leave
nop
jmp
add
inc
add
add
clc
repnz
nop
nop
jae
add
test
pop
inc
add
dec
out
clc
addl
shr
push
mov
xchg
ret
mov
adc
test
cld
nop
nop
jae
xchg
aam
mov
inc
movsb
xor
call
nop
jmp
add
add
cld
nop
nop
jae
add
movsb
dec
add
xlat
inc
add
add
add
clc
popf
mov
xor
aaa
jne
clc
repnz
nop
nop
jae
add
dec
add
clc
repnz
nop
nop
jae
add
cltd
and
push
mov
xchg
ret
add
add
adc
pop
add
xabort
cld
nop
nop
jae
add
xchg
add
iret
mov
clc
repnz
nop
nop
jae
add
add
push
push
mov
xchg
ret
lods
add
ja
jbe
push
push
clc
repnz
nop
nop
jae
add
add
shl
nop
push
mov
leave
nop
jmp
add
add
add
repnz
nop
nop
jae
popf
add
add
mov
push
mov
xchg
ret
dec
cs
popa
pop
addb
nop
push
mov
leave
nop
jmp
add
inc
mov
push
nop
push
mov
leave
nop
jmp
xchg
adc
add
ja
xchg
mov
xchg
ret
add
add
fucomi
test
push
mov
xchg
ret
add
add
je
clc
repnz
nop
nop
jae
mov
pop
add
push
mov
leave
nop
jmp
add
iret
pop
clc
repnz
nop
nop
jae
add
add
xor
add
mov
test
add
clc
repnz
nop
nop
jae
add
mov
fld1
push
mov
xchg
ret
aad
add
call
mov
xchg
ret
mov
inc
add
jmp
mov
xchg
ret
dec
add
lods
add
xchg
dec
add
fistpl
clc
repnz
nop
nop
jae
add
push
inc
gs
sbbb
nop
push
mov
leave
nop
jmp
out
sbb
adc
test
repnz
nop
nop
jae
dec
add
leave
nop
push
mov
leave
nop
jmp
fwait
add
add
clc
repnz
nop
nop
jae
subl
inc
add
clc
repnz
nop
nop
jae
add
mov
and
in
clc
repnz
nop
nop
jae
add
lods
inc
or
add
ret
dec
sub
repnz
nop
nop
jae
add
dec
lods
sahf
scas
or
jb
out
add
xchg
xchg
ret
or
or
sub
aad
push
push
mov
xchg
ret
add
add
add
clc
repnz
nop
nop
jae
popf
add
add
mov
mov
sub
xchg
jbe
add
pop
aam
out
jbe
add
add
cmp
push
mov
leave
nop
jmp
dec
add
add
out
daa
stos
clc
repnz
nop
nop
jae
add
dec
fildl
dec
add
mov
clc
repnz
nop
nop
jae
or
fwait
nop
push
mov
leave
nop
jmp
test
add
add
push
push
mov
xchg
ret
mov
dec
add
add
nop
nop
jae
add
add
ret
inc
add
add
mov
clc
repnz
nop
nop
jae
push
add
call
repnz
nop
nop
jae
push
jmp
push
clc
repnz
nop
nop
jae
add
mov
add
pop
push
mov
xchg
ret
add
add
add
add
rol
push
mov
xchg
ret
lods
add
mov
test
cld
call
nop
jmp
add
add
pop
clc
repnz
nop
nop
jae
add
aad
mov
clc
repnz
nop
nop
jae
ja
add
push
push
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
add
outsb
call
pop
clc
repnz
nop
nop
jae
add
xor
add
popa
xchg
stos
pop
nop
push
mov
leave
nop
jmp
add
inc
add
mov
clc
repnz
nop
nop
jae
sahf
add
add
jne
clc
repnz
nop
nop
jae
add
adc
add
fistpl
push
mov
xchg
ret
add
mov
cld
nop
nop
jae
add
lods
orl
and
mov
xchg
ret
add
add
cmpl
nop
jmp
and
aad
sub
movsl
nop
push
mov
leave
nop
jmp
add
add
jo
mulb
dec
adc
repnz
nop
nop
jae
add
cs
dec
pop
fistpl
clc
repnz
nop
nop
jae
add
gs
dec
cmp
repnz
nop
nop
jae
add
add
dec
add
add
movl
jae
add
add
mov
xchg
ret
add
mov
inc
add
add
cld
nop
nop
jae
add
test
mov
cld
nop
nop
jae
add
add
test
test
push
mov
xchg
ret
add
mov
scas
popf
out
popf
outsb
add
push
mov
xchg
ret
add
popa
add
clc
repnz
nop
nop
jae
add
ljmp
clc
repnz
nop
nop
jae
mov
rolb
repnz
nop
nop
jae
mov
add
add
clc
repnz
nop
nop
jae
add
add
add
mov
push
mov
xchg
ret
add
xchg
insl
fwait
dec
add
mov
xchg
ret
add
popf
adc
orl
nop
nop
jae
add
add
add
fistpl
push
mov
xchg
ret
add
mov
mov
add
repnz
nop
nop
jae
inc
dec
add
add
jae
repnz
nop
nop
jae
add
test
nop
push
mov
leave
nop
jmp
mov
test
repnz
nop
nop
jae
test
add
popa
add
push
mov
xchg
ret
add
add
add
mov
leave
nop
jmp
addl
inc
add
mov
clc
repnz
nop
nop
jae
add
adc
add
inc
jmp
test
scas
add
add
add
test
nop
nop
jae
inc
add
mov
test
and
nop
push
mov
leave
nop
jmp
and
pusha
add
xchg
add
add
add
add
add
pop
add
outsb
add
popa
push
mov
xchg
ret
lods
jbe
add
inc
mov
inc
sbb
repnz
nop
nop
jae
popa
lods
add
sub
clc
repnz
nop
nop
jae
dec
ret
add
and
mov
repnz
nop
nop
jae
aas
aad
and
add
clc
repnz
nop
nop
jae
add
add
popf
add
nop
nop
jae
aas
or
test
add
add
mov
nop
push
mov
leave
nop
jmp
addl
mov
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
fwait
gs
incl
cld
nop
nop
jae
add
jmp
pop
sub
push
mov
leave
nop
jmp
adc
je
clc
repnz
nop
nop
jae
add
jnp
movb
repnz
nop
nop
jae
add
add
out
rorl
test
clc
repnz
nop
nop
jae
add
sbb
sti
push
clc
repnz
nop
nop
jae
sub
call
addr16
push
push
mov
xchg
ret
popa
add
add
clc
repnz
nop
nop
jae
add
sahf
test
or
cld
nop
nop
jae
add
pop
add
gs
clc
repnz
nop
nop
jae
xchg
dec
addl
add
nop
push
mov
leave
nop
jmp
add
or
mov
repz
add
lods
scas
add
call
add
popf
push
add
enter
cmp
repnz
nop
nop
jae
jmp
addr16
test
mov
push
mov
xchg
ret
test
and
daa
push
clc
repnz
nop
nop
jae
add
orl
push
mov
leave
nop
jmp
call
push
clc
repnz
nop
nop
jae
add
fwait
ja
mov
mov
clc
repnz
nop
nop
jae
xchg
inc
add
subl
add
lret
test
nop
push
mov
leave
nop
jmp
push
add
mov
repnz
nop
nop
jae
sahf
push
sbb
out
mov
ja
add
add
add
out
sub
sahf
push
add
mov
clc
repnz
nop
nop
jae
add
out
add
add
and
aam
popa
clc
repnz
nop
nop
jae
add
add
daa
jmp
add
add
add
adc
or
add
repnz
nop
nop
jae
test
shl
push
mov
xchg
ret
add
push
and
repnz
nop
nop
jae
add
test
add
jg
test
add
clc
repnz
nop
nop
jae
mov
jmp
jne
push
mov
xchg
ret
popa
aad
add
push
sbb
sub
pop
rep
clc
repnz
nop
nop
jae
inc
add
jmp
jb
clc
repnz
nop
nop
jae
adc
add
add
inc
clc
repnz
nop
nop
jae
inc
add
add
clc
aaa
imul
clc
repnz
nop
nop
jae
add
ret
add
aaa
add
push
mov
xchg
ret
mov
add
test
add
push
clc
repnz
nop
nop
jae
add
add
adc
addr16
jmp
add
dec
add
or
sbb
inc
add
mov
leave
nop
jmp
add
add
dec
or
fsubp
les
nop
nop
jae
test
inc
addr16
cmp
or
repnz
nop
nop
jae
pop
mov
or
test
call
cld
nop
nop
jae
add
add
push
nop
push
mov
leave
nop
jmp
sbb
or
popa
xor
add
add
pusha
push
mov
xchg
ret
add
fwait
jmp
add
clc
repnz
nop
nop
jae
inc
mov
addr16
gs
pop
cmp
mov
xchg
ret
scas
inc
inc
add
mov
add
pop
mov
clc
repnz
nop
nop
jae
add
ret
popf
fwait
add
add
add
nop
push
mov
leave
nop
jmp
add
addl
cld
nop
nop
jae
inc
add
add
and
and
nop
nop
jae
add
or
xchg
mov
clc
repnz
nop
nop
jae
lods
adc
push
mov
xchg
ret
aam
pop
add
add
add
jo
sub
mov
leave
nop
jmp
add
mov
fld1
clc
repnz
nop
nop
jae
add
add
in
fwait
push
mov
xchg
ret
test
add
pop
push
mov
xchg
ret
or
insl
sub
sahf
push
add
push
push
mov
xchg
ret
add
mov
push
js
mov
xchg
ret
add
add
jmp
nop
nop
jae
ja
mov
push
clc
repnz
nop
nop
jae
add
add
mov
add
andl
nop
nop
jae
outsb
popa
aad
iret
add
clc
repnz
nop
nop
jae
sbbl
cmp
loope
repnz
nop
nop
jae
addl
add
add
repnz
nop
nop
jae
outsb
dec
add
add
cmp
cld
nop
nop
jae
addr16
add
xorl
repnz
nop
nop
jae
add
lods
add
dec
pop
clc
repnz
nop
nop
jae
add
add
push
sub
insl
shlb
sub
cld
nop
nop
jae
aam
add
add
arpl
and
clc
repnz
nop
nop
jae
add
xchg
ja
dec
add
nop
push
mov
leave
nop
jmp
add
pushf
dec
push
clc
repnz
nop
nop
jae
xor
lods
add
push
mov
clc
repnz
nop
nop
jae
mov
add
add
push
mov
xchg
ret
add
lods
gs
add
lret
push
clc
repnz
nop
nop
jae
aam
mov
adc
je
clc
repnz
nop
nop
jae
add
add
add
nop
jae
add
out
jl
sbb
pop
push
clc
repnz
nop
nop
jae
add
sahf
test
add
repnz
nop
nop
jae
gs
addl
cmpl
nop
push
mov
leave
nop
jmp
add
or
xor
aaa
add
push
mov
xchg
ret
and
outsb
xchg
mov
xchg
ret
add
mov
clc
add
clc
repnz
nop
nop
jae
add
insl
jmp
and
repnz
nop
nop
jae
add
add
dec
into
mov
mov
clc
repnz
nop
nop
jae
or
add
add
test
inc
add
add
inc
add
popf
add
faddl
add
push
mov
xchg
ret
or
dec
add
inc
in
mov
xchg
ret
test
mov
add
adc
jle
stos
fld1
push
mov
xchg
ret
ret
inc
add
cli
push
add
pop
jne
clc
repnz
nop
nop
jae
add
addr16
clc
repnz
nop
nop
jae
add
sub
lods
movsl
sub
clc
repnz
nop
nop
jae
add
jbe
popa
nop
push
mov
leave
nop
jmp
or
add
into
fucomp
sar
call
add
add
add
xchg
test
pop
push
mov
xchg
ret
popa
add
add
popa
or
insl
pop
clc
repnz
nop
nop
jae
add
inc
add
mov
fistpll
clc
repnz
nop
nop
jae
or
mov
clc
repnz
nop
nop
jae
add
test
mov
push
mov
xchg
ret
add
mov
test
add
push
mov
add
test
lret
jmp
mov
jle
add
cld
nop
nop
jae
push
sbb
add
add
or
add
clc
repnz
nop
nop
jae
sahf
add
xor
clc
repnz
nop
nop
jae
ja
mov
push
add
jae
repnz
nop
nop
jae
dec
add
add
cmp
nop
push
mov
leave
nop
jmp
mov
test
imul
repnz
nop
nop
jae
add
mov
jge
clc
repnz
nop
nop
jae
add
out
mov
add
into
loop
mov
clc
repnz
nop
nop
jae
xchg
or
add
or
mov
clc
repnz
nop
nop
jae
add
lods
or
dec
add
add
fldl
add
repnz
nop
nop
jae
xchg
or
sbb
dec
add
nop
nop
jae
aam
fildl
add
mov
out
clc
repnz
nop
nop
jae
add
inc
or
stos
jnp
add
add
mov
inc
mov
add
push
mov
sub
or
mov
and
add
and
add
clc
repnz
nop
nop
jae
lods
add
or
jb
cli
jle
aad
pushl
nop
push
mov
leave
nop
jmp
add
ja
push
mov
xchg
ret
lods
add
inc
push
inc
add
push
mov
xchg
ret
add
inc
add
out
add
add
sub
clc
repnz
nop
nop
jae
add
mov
push
add
clc
repnz
nop
nop
jae
lods
add
popf
add
mov
repnz
nop
nop
jae
mov
mov
test
clc
repnz
nop
nop
jae
or
mov
nop
push
mov
leave
nop
jmp
scas
popa
addl
adc
repnz
nop
nop
jae
xor
sbb
add
mov
cld
nop
nop
jae
add
add
adc
mov
leave
nop
jmp
add
jbe
add
fincstp
rclb
nop
jmp
add
add
add
inc
pop
push
mov
xchg
ret
add
call
add
mov
mov
push
mov
xchg
ret
add
or
add
add
clc
repnz
nop
nop
jae
aas
add
fisttpl
xchg
push
add
nop
push
mov
leave
nop
jmp
fwait
or
push
mov
xchg
ret
add
lods
add
add
pop
push
clc
repnz
nop
nop
jae
add
lods
dec
or
adc
insb
add
mov
adc
repnz
nop
nop
jae
add
test
outsb
cmpsb
pop
add
add
repnz
nop
nop
jae
scas
dec
mov
jnp
add
push
mov
xchg
ret
add
aas
and
jo
stos
push
mov
fcompl
or
add
popa
into
dec
iret
ds
xor
test
push
add
clc
repnz
nop
nop
jae
mov
add
out
fidivl
xchg
fwait
clc
repnz
nop
nop
jae
out
mov
add
call
repnz
nop
nop
jae
add
add
add
inc
add
test
mov
leave
nop
jmp
out
add
es
dec
nop
push
mov
leave
nop
jmp
popf
mov
pop
add
add
div
clc
repnz
nop
nop
jae
jbe
add
clc
xorl
push
add
clc
repnz
nop
nop
jae
add
pop
mov
movsb
push
mov
xchg
ret
add
dec
mov
lods
cmpw
nop
push
mov
leave
nop
jmp
add
cld
movb
push
pop
lods
clc
repnz
nop
nop
jae
inc
add
test
fwait
call
mov
clc
repnz
nop
nop
jae
sbb
add
sbb
add
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
test
fwait
add
xor
jmp
push
mov
xchg
ret
add
add
add
mov
mov
leave
nop
jmp
add
add
popf
test
gs
clc
repnz
nop
nop
jae
add
pop
add
clc
repnz
nop
nop
jae
dec
inc
add
add
repnz
nop
nop
jae
add
add
add
add
pop
inc
add
add
scas
add
test
pushf
inc
mov
nop
push
mov
leave
nop
jmp
add
add
xchg
pop
inc
add
add
lods
clc
add
aam
inc
add
add
lea
mov
xchg
ret
clc
push
mov
aas
clc
repnz
nop
nop
jae
add
mov
aam
add
add
dec
jl
add
mov
test
sbb
in
stos
add
clc
repnz
nop
nop
jae
add
mov
add
leave
nop
push
mov
leave
nop
jmp
or
pop
add
add
push
mov
xchg
ret
add
xchg
aam
add
mov
scas
xchg
repz
nop
push
mov
leave
nop
jmp
add
nop
push
mov
leave
nop
jmp
add
inc
sahf
add
add
call
clc
repnz
nop
nop
jae
xchg
or
add
add
add
xchg
nop
push
mov
leave
nop
jmp
sbb
mov
out
mov
mov
clc
repnz
nop
nop
jae
add
popa
and
popa
pop
inc
add
or
add
push
clc
repnz
nop
nop
jae
add
inc
add
insl
add
clc
repnz
nop
nop
jae
add
add
pop
movzwl
clc
repnz
nop
nop
jae
popf
or
add
imul
cld
nop
nop
jae
add
mov
out
pop
xor
push
mov
xchg
ret
xchg
or
add
pop
clc
repnz
nop
nop
jae
call
add
fistpl
add
test
clc
repnz
nop
nop
jae
add
mov
cld
nop
nop
jae
add
add
popa
ja
xor
aaa
mov
nop
push
mov
leave
nop
jmp
add
mov
scas
add
clc
repnz
nop
nop
jae
ja
add
or
clc
repnz
nop
nop
jae
mov
out
add
mov
mov
xchg
ret
add
add
test
sar
cld
nop
nop
jae
dec
fisttpl
mov
add
fsts
repnz
nop
nop
jae
adc
add
add
fwait
nop
push
mov
leave
nop
jmp
jmp
mov
test
nop
push
mov
leave
nop
jmp
add
fwait
popf
fistpl
test
lea
xchg
ret
insl
add
add
jmp
clc
repnz
nop
nop
jae
mov
or
add
add
call
movsb
clc
repnz
nop
nop
jae
add
addl
add
jle
flds
ja
inc
add
add
add
add
pop
add
and
cwtl
data16
sub
push
fs
add
xchg
add
dec
add
or
in
leave
nop
jmp
add
add
notl
clc
repnz
nop
nop
jae
inc
and
aas
sahf
fisttpl
nop
push
mov
leave
nop
jmp
add
add
daa
add
clc
repnz
nop
nop
jae
sahf
add
lea
push
mov
xchg
ret
add
fwait
add
lods
add
dec
add
add
fwait
clc
repnz
nop
nop
jae
addr16
subl
pusha
clc
repnz
nop
nop
jae
or
outsb
push
sahf
mov
nop
push
mov
leave
nop
jmp
aas
popa
add
or
inc
xchg
push
mov
xchg
ret
dec
call
popa
add
nop
nop
jae
add
add
mov
add
pop
hlt
clc
repnz
nop
nop
jae
inc
add
clc
jns
mov
add
repnz
nop
nop
jae
add
add
or
add
pop
add
andb
push
mov
leave
nop
jmp
add
inc
add
test
movb
mov
xchg
ret
add
test
scas
xor
xchg
pushl
clc
repnz
nop
nop
jae
add
leave
mov
clc
repnz
nop
nop
jae
pop
adc
pop
nop
push
mov
leave
nop
jmp
fwait
mov
add
add
cmp
nop
push
mov
leave
nop
jmp
add
pop
and
repnz
nop
nop
jae
sahf
test
add
add
add
je
je
jmp
jo
add
fwait
add
ja
add
push
nop
push
mov
leave
nop
jmp
and
add
dec
add
pop
clc
repnz
nop
nop
jae
add
add
add
fldt
movsb
js
ljmp
clc
repnz
nop
nop
jae
add
add
cs
and
repnz
nop
nop
jae
popf
add
addl
hlt
pop
add
sub
add
repnz
nop
nop
jae
mov
repnz
clc
repnz
nop
nop
jae
test
xchg
add
test
nop
push
mov
leave
nop
jmp
popa
add
xchg
mov
nop
push
mov
leave
nop
jmp
add
sbb
mov
movsl
fld1
nop
push
mov
leave
nop
jmp
add
add
add
mov
clc
repnz
nop
nop
jae
aad
or
add
call
push
repnz
add
add
stc
pushl
push
mov
xchg
ret
lods
xor
add
test
add
clc
repnz
nop
nop
jae
sahf
insl
add
xchg
add
push
mov
xchg
ret
or
inc
add
or
nop
push
mov
leave
nop
jmp
add
or
jp
jmp
dec
sub
repnz
nop
nop
jae
add
jbe
mov
jecxz
clc
repnz
nop
nop
jae
sbb
popf
add
add
ret
clc
repnz
nop
nop
jae
add
ret
add
fistpl
nop
push
mov
leave
nop
jmp
add
ja
lods
add
xchg
mov
repnz
nop
nop
jae
add
dec
jmp
inc
push
adc
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
add
fildl
add
icebp
clc
repnz
nop
nop
jae
adc
add
pop
push
mov
xchg
ret
or
add
push
add
cld
nop
nop
jae
mov
add
xor
clc
repnz
nop
nop
jae
add
aad
push
clc
repnz
nop
nop
jae
add
add
dec
add
and
dec
imul
nop
push
mov
leave
nop
jmp
ret
add
addl
mov
leave
nop
jmp
dec
aas
add
dec
xor
push
mov
xchg
ret
fistl
lods
insl
addl
sub
hlt
pop
mov
clc
repnz
nop
nop
jae
add
popf
add
mov
leave
nop
jmp
add
popf
add
fistl
sub
inc
add
add
push
addb
inc
add
add
add
repnz
nop
nop
jae
mov
jmp
jmp
lods
fildl
insl
dec
add
mov
dec
out
lods
mov
clc
repnz
nop
nop
jae
add
add
add
addr16
jp
jbe
nop
push
mov
leave
nop
jmp
add
cmp
nop
push
mov
leave
nop
jmp
add
add
add
repnz
nop
nop
jae
aad
add
inc
add
repnz
nop
nop
jae
add
je
dec
add
nop
nop
jae
push
jbe
add
pushf
mov
mov
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
nop
jae
add
add
mov
in
repz
cmpsl
xchg
in
sub
fistpll
mov
ficoms
sub
nop
push
mov
leave
nop
jmp
add
xchg
ret
movsl
mov
clc
repnz
nop
nop
jae
scas
out
aad
add
adc
add
nop
nop
jae
insl
add
add
add
add
repnz
nop
nop
jae
add
pop
clc
repnz
nop
nop
jae
add
dec
add
nop
push
mov
leave
nop
jmp
popf
add
add
add
insl
call
clc
repnz
nop
nop
jae
add
push
test
push
mov
xchg
ret
add
add
add
add
repz
repnz
nop
nop
jae
add
aam
out
mov
push
mov
clc
repnz
nop
nop
jae
test
ret
add
add
pop
add
add
sbb
mov
push
mov
xchg
ret
mov
mov
push
mov
xchg
ret
add
and
inc
and
adc
mov
sahf
push
mov
xchg
ret
test
lods
add
in
add
nop
push
mov
leave
nop
jmp
add
inc
inc
or
cmp
nop
jae
push
mov
clc
add
cld
nop
nop
jae
fildl
test
mov
add
mov
mov
insl
adc
loop
test
lcall
jge
add
xor
clc
repnz
nop
nop
jae
add
add
roll
and
push
mov
leave
nop
jmp
gs
add
insl
int3
sbbb
popl
pause
push
mov
leave
nop
jmp
addl
mov
add
jns
inc
and
clc
repnz
nop
nop
jae
addr16
add
push
add
inc
sbb
repnz
nop
nop
jae
add
ret
mov
nop
nop
jae
ja
call
add
add
add
clc
repnz
nop
nop
jae
or
add
add
add
leave
nop
jmp
add
adc
rcll
mov
xchg
ret
outsb
inc
outsb
add
and
repnz
nop
nop
jae
add
sbbl
dec
clc
dec
inc
clc
repnz
nop
nop
jae
add
add
out
jg
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
jbe
popf
adc
mov
loope
call
nop
jmp
add
int3
in
clc
repnz
nop
nop
jae
inc
aad
add
mov
nop
nop
jae
add
add
or
add
pop
add
clc
repnz
nop
nop
jae
mov
add
sahf
mov
scas
xor
movzwl
clc
repnz
nop
nop
jae
add
inc
call
mov
nop
push
mov
leave
nop
jmp
mov
add
bound
repnz
nop
nop
jae
add
add
mov
adc
push
mov
leave
nop
jmp
add
mov
cmp
repnz
nop
nop
jae
add
add
add
jle
jns
clc
repnz
nop
nop
jae
add
add
mov
xor
push
mov
xchg
ret
add
add
xorl
nop
jae
aas
xchg
or
add
xchg
mov
pause
push
mov
leave
nop
jmp
add
add
test
mov
push
push
mov
xchg
ret
inc
mov
add
lock
mov
clc
repnz
nop
nop
jae
dec
sahf
add
ja
push
add
ja
iret
or
leave
nop
jmp
add
mov
pushl
push
mov
xchg
ret
add
mov
test
nop
jae
jbe
outsb
inc
add
add
clc
repnz
nop
nop
jae
jmp
fcmovnbe
lret
push
add
add
repnz
nop
nop
jae
inc
inc
add
outsl
mov
clc
repnz
nop
nop
jae
add
add
add
adc
add
clc
repnz
nop
nop
jae
or
push
push
mov
xchg
ret
outsb
test
mov
xchg
ret
ja
add
lods
test
push
es
jecxz
repnz
nop
nop
jae
add
inc
add
add
add
push
mov
leave
nop
jmp
add
add
cmpl
nop
push
mov
leave
nop
jmp
test
fwait
add
dec
add
mov
clc
repnz
nop
nop
jae
add
pop
cmp
xchg
ret
clc
repnz
nop
nop
jae
add
aam
mov
ljmp
clc
popa
or
insl
dec
add
adc
sbb
jmp
mov
xchg
ret
add
add
fcmovnbe
int
xabort
cld
nop
nop
jae
out
add
mov
xchg
call
add
jmp
scas
add
adc
sub
push
mov
leave
nop
jmp
add
add
add
je
test
mov
sbb
xor
lret
outsb
add
mov
pop
int
mov
ret
sub
xor
push
add
push
add
shr
data16
in
jns
or
leave
sbb
or
mov
repnz
jmp
or
mov
add
add
mov
mov
pop
sti
mov
mov
adc
dec
inc
lahf
out
dec
add
add
add
pop
push
add
mov
pusha
add
pop
xlat
out
and
lods
int3
mov
sub
sbb
add
mov
lcall
aad
push
xor
nop
cltd
arpl
mov
iret
and
xchg
ja
add
dec
add
add
mov
movsl
sub
icebp
sbbb
add
btc
sbb
hlt
cli
cwtl
out
push
add
add
lods
sbb
movsb
mov
ds
mov
push
add
inc
add
mov
mov
jmp
mov
and
pop
das
out
jo
add
push
mov
add
or
ret
mov
pop
clc
cli
mov
add
sbb
cmp
out
add
adc
adc
bound
aam
js
mov
fwait
or
push
add
das
lock
out
aad
rcrb
xlat
ret
scas
cli
mov
xor
arpl
jne
sbb
mov
loope
ret
and
enter
shrl
sbb
ss
jge
and
push
fldcw
add
xlat
add
dec
or
lock
xchg
iret
les
cld
bound
andb
add
add
pushf
mov
add
sub
cld
push
or
inc
mov
sub
loop
add
mov
or
pop
add
movsb
xchg
lods
aas
fsubs
add
lret
stc
push
add
add
int
hlt
bound
addr16
jecxz
add
popa
arpl
add
hlt
insb
add
xor
fisttps
push
cmp
imul
jecxz
jp
mov
fwait
lock
add
jmp
imul
xchg
mov
nop
popa
mov
sbb
scas
icebp
leave
fiaddl
add
add
sub
mov
add
mov
mov
fistpll
cmp
dec
sar
dec
add
mov
mov
enter
lods
add
test
push
add
scas
mov
add
add
addl
push
add
pop
add
add
pop
out
and
cmp
or
movsl
stos
push
stc
jae
adc
jle
fcmovu
shrb
add
xchg
add
cwtl
mov
sbb
pusha
add
ljmp
add
add
cmp
xlat
jae
and
test
jp
push
add
mov
and
or
and
mov
add
or
add
add
or
add
in
add
into
aad
sbb
xchg
inc
mov
scas
xchg
pop
sub
adc
sbb
test
add
add
daa
call
outsl
dec
std
lcall
gs
sbb
rcr
jo
subb
add
add
in
loopne
rorb
aad
mov
cli
fwait
add
or
bound
mov
fmuls
pop
add
stc
lods
cli
pop
push
add
xchg
or
push
icebp
aas
push
add
pop
clc
js
imul
addr16
lret
cs
and
add
push
add
add
enter
add
add
push
add
mov
xor
imulb
add
add
add
fwait
or
add
add
or
mov
xchg
push
hlt
test
push
mov
xchg
mov
mov
pop
add
scas
push
jnp
in
lret
add
in
pushf
mov
cltd
cmp
stos
cmpsl
imul
inc
add
mov
add
pop
sub
push
add
or
fidivs
add
fwait
into
sbb
dec
add
add
pusha
add
inc
add
push
add
loope
add
sbb
popf
cltd
xchg
or
movsb
clc
fists
push
add
cmp
xchg
clc
pop
add
add
rcr
fisttpl
add
gs
dec
scas
xor
fisubrs
fdivrs
inc
add
rol
gs
add
add
add
mov
jo
push
add
cld
push
push
test
push
add
lock
jbe
inc
add
popf
movsl
test
add
pop
add
mov
pop
mov
cli
mov
mov
scas
mov
imul
mov
cmp
add
sbb
add
dec
add
mov
xchg
notl
les
mul
sbb
ja
mov
int3
repz
nop
sub
add
add
stos
adc
dec
lods
push
cmp
add
add
push
mov
pop
add
jne
aam
add
add
add
add
int
pusha
add
jnp
add
test
loopne
add
and
add
push
adc
mov
fcomps
ljmp
or
sub
dec
xchg
nop
mov
push
add
in
push
imul
or
shl
dec
imul
add
sti
std
ret
add
sbbb
xor
leave
sbb
scas
aam
mov
stos
sbb
add
dec
add
testl
data16
pop
jae
mov
int
shlb
sti
fimuls
push
repz
xlat
push
add
imul
and
imul
les
loope
out
add
add
in
int3
lret
das
pop
movsl
mov
add
dec
add
or
xchg
sub
shl
nop
pop
test
scas
mov
add
nop
pushf
mov
fnsave
add
sub
lcall
fldt
add
add
add
pusha
add
mov
stos
inc
std
add
fistpl
inc
xchg
in
stos
aad
iret
daa
mov
mov
sbb
or
lahf
push
inc
aam
adc
add
or
mov
loop
adc
in
imul
add
add
pop
add
push
sahf
push
lods
lea
repnz
mov
xor
cli
mov
std
dec
add
out
mov
cmp
and
jle
inc
add
mov
fcmovbe
jge
add
add
cld
into
fistps
icebp
mov
fwait
enter
lret
fldcw
add
rorl
fcmovnu
mov
dec
in
inc
cli
ret
mov
adc
jne
call
cmpsl
cmp
inc
sbb
jae
dec
add
cli
leave
sti
inc
add
fwait
int
xlat
stc
cmpb
clc
xchg
test
pop
test
addl
cmp
out
out
fisubrl
add
icebp
das
lahf
adc
and
add
mov
dec
fcmovbe
jns
inc
add
cltd
dec
add
shlb
add
nop
sbb
xchg
andb
shrb
push
add
add
add
popl
gs
gs
out
pop
add
add
js
lea
add
adc
cmp
inc
cmp
fdivs
push
xor
jle
push
je
jp
mov
adc
push
cmc
in
add
cmp
movsl
jmp
bound
push
add
imul
and
ljmp
mov
inc
add
insb
add
data16
add
add
dec
add
cmpb
xor
test
xchg
mov
add
insl
test
fs
divl
in
and
add
cli
outsb
add
add
ret
or
xchg
pusha
add
add
insb
add
cwtl
scas
clc
aaa
addl
lock
inc
add
add
cmpsb
mov
sar
sbb
leave
cmp
in
scas
lret
add
pop
pop
loopne
sub
push
in
pop
dec
xor
xor
adc
fdivl
add
cmp
add
sub
add
orl
clc
xchg
jl
arpl
cld
movsb
movsl
xchg
xchg
fidivrs
negl
add
les
dec
add
cmp
mov
add
add
outsl
push
div
add
mov
add
add
aas
fs
sbb
add
add
push
lcall
xchg
stos
mov
orl
add
and
std
add
sarb
add
loop
xorl
xchg
jno
jg
mov
mov
push
dec
mov
and
pop
add
pusha
add
push
add
add
daa
pop
mov
fcoml
add
lea
cmpsb
xchg
pop
add
out
inc
add
mov
insl
cmpsb
repnz
add
ret
arpl
add
xchg
mov
ret
fists
add
and
insl
int
add
jmp
ljmp
jbe
lret
xchg
add
mov
cmp
in
in
mov
jns
popa
lahf
cli
arpl
push
add
and
call
add
and
scas
dec
jl
jl
dec
push
add
add
xor
mov
add
push
add
add
stos
or
xor
leave
push
add
loopne
push
add
jmp
mov
push
push
cwtl
aad
add
add
mov
popf
cmp
addr16
repz
aas
push
add
das
add
dec
and
cwtl
and
test
add
add
add
ja
add
add
mov
insl
js
sbb
jne
add
mov
jnp
pop
outsb
add
and
inc
mov
add
add
out
pop
add
outsb
add
sub
adc
repnz
push
add
fstps
out
cmpsl
and
stos
pop
nop
lods
lahf
xorb
mov
add
dec
add
mov
testb
jmp
mov
into
pop
add
push
mov
mov
add
add
test
xlat
add
inc
repnz
or
rcrb
sbb
dec
add
add
nop
xor
add
cmp
ja
add
loope
add
add
cmp
xchg
or
add
adc
cmp
add
mov
cltd
stos
xchg
inc
add
add
add
xchg
insb
add
sarl
add
push
push
add
fsubp
jg
cwtl
movsl
orb
add
out
addr16
movsl
sbb
add
imul
movsl
jmp
add
jb
gs
add
int3
xor
mov
jecxz
add
sub
fisttps
shl
pusha
add
mov
mov
shlb
add
add
pop
xor
aas
or
inc
add
add
add
add
cmp
add
add
test
les
add
imul
push
add
dec
aad
xor
add
pop
add
jae
aas
outsb
add
outsb
add
sti
add
daa
out
add
fucom
pop
add
aam
add
sub
dec
add
das
lret
pop
cmpsb
xchg
add
sub
xor
mov
jle
mov
add
cwtl
out
imul
xchg
fadds
lcall
push
add
mov
sbb
mov
add
add
mov
mov
add
sub
push
add
mov
add
into
stos
inc
add
add
xchg
data16
cmp
or
jne
pop
jbe
in
shrl
pop
data16
add
xor
add
add
ret
loope
inc
movsl
sub
sbb
adc
add
add
lods
out
push
loopne
push
mov
mov
mov
adc
add
add
mov
add
cmc
icebp
lods
and
lea
add
les
jno
les
add
call
sub
clc
dec
add
aaa
ljmp
mov
add
mov
mov
cmpsl
mov
addr16
lret
mov
mov
add
inc
loopne
push
daa
mov
in
pop
ljmp
gs
lock
js
cwtl
in
ror
sbb
mov
cs
add
add
ja
test
lods
int3
dec
add
daa
push
add
inc
add
xchg
add
aad
xor
xchg
int
and
bnd
dec
add
rolb
adc
xchg
out
sahf
push
repnz
adc
notb
add
add
add
inc
add
xor
aad
pop
aas
push
add
das
or
in
add
add
stc
notb
add
mov
add
sbb
mov
aam
data16
clc
cld
or
subl
outsl
fdivrl
pop
mov
or
rcr
lcall
div
cmp
xchg
inc
add
xor
data16
sbb
mov
movntps
or
add
xor
ja
xchg
clc
roll
adc
outsl
pop
push
in
js
bound
pop
sub
cmpsb
and
sub
add
fisttpll
add
std
loopne
jmp
xlat
inc
add
xchg
lret
or
add
popf
mov
sahf
lcall
xchg
pop
add
inc
add
add
lods
xchg
mov
repnz
cmp
jecxz
rcll
int3
jmp
jle
lcall
add
jl
insl
rcll
scas
std
dec
push
push
add
sbb
sbb
das
ljmp
add
arpl
shlb
mov
stos
and
sbb
push
add
out
sub
mov
inc
add
aaa
imul
and
jae
add
test
pop
add
add
out
xor
jne
add
sahf
cmp
add
in
dec
jb
iret
pop
add
sbb
cmp
and
lret
adc
add
add
xor
nop
loope
add
add
add
add
and
sbb
xchg
mov
push
pop
test
add
std
xchg
fcmovbe
sub
mov
add
add
mov
sub
fimuls
adc
and
mov
icebp
xchg
hlt
or
pop
cltd
rolb
pushf
sbb
add
pusha
add
shrd
add
pop
mov
xor
data16
sub
xlat
dec
add
add
and
add
pusha
add
add
cmp
and
out
inc
out
add
add
sub
add
repz
fistpll
pop
add
stos
mov
pop
xlat
jb
jnp
adcl
jp
mov
iret
popf
call
pop
xor
cmpsl
or
cmp
loop
adc
pushf
fnstsw
add
out
daa
aaa
stos
jp
or
sbb
adc
add
arpl
jmp
add
shr
scas
jl
xorl
add
stos
inc
cmpsb
std
jge
add
adc
in
imulb
imul
gs
pop
add
sub
stos
push
add
add
mov
test
add
xlat
lret
add
add
sbb
mov
xlat
leave
ret
jno
add
aas
push
add
add
jg
add
sbb
cli
adc
add
xchg
inc
add
mov
out
mov
sub
sub
dec
mov
stc
movsb
sbb
pushf
mov
add
sbb
xchg
jae
or
push
add
in
out
out
jns
mov
mov
mov
hlt
add
pop
fs
mov
mov
push
add
sub
sbb
cmpl
mov
lock
push
add
and
add
aad
jl
mov
fidivrl
repnz
push
add
mov
xlat
test
add
mov
dec
add
fnstsw
xchg
lods
shlb
add
add
sub
into
add
pop
fcompl
js
adc
xor
dec
add
push
add
ret
jmp
add
outsb
add
add
punpcklbw
in
mov
insl
mov
mov
sub
mov
jmp
loop
add
imul
clc
adc
cltd
push
cmp
mov
shlb
les
cmc
lcall
adc
pop
sbbl
cmp
cmpl
in
push
add
in
add
sahf
test
and
in
jl
lret
xchg
mov
pop
add
jbe
in
clc
fimuls
cmp
sar
and
mov
cmp
rcrl
mov
lock
xchg
jmp
iret
sahf
push
or
xchg
rclb
neg
xchg
fisubl
lcall
push
add
or
lcall
xchg
lret
mov
jns
rolb
add
sahf
xchg
scas
outsb
add
clc
adc
aad
add
bswap
negb
cmpsb
push
icebp
addr16
push
add
or
rol
push
add
imul
xchg
mov
rcll
and
add
cmp
push
add
sub
jnp
pop
ret
adc
cmp
add
inc
add
mov
add
pop
fbstp
dec
add
jecxz
pop
add
add
or
enter
add
add
clc
xcrypt-ctr
cmpsl
sbb
push
add
add
jnp
dec
add
sbb
xlat
sbb
das
cld
leave
xchg
mov
add
push
inc
pop
add
cli
push
inc
add
or
push
mov
leave
insb
add
pop
inc
add
mov
add
add
add
pushl
shl
jecxz
notb
fiaddl
ret
add
add
arpl
add
mov
add
jbe
cmp
mov
adc
push
data16
add
add
popa
add
jne
enter
in
insl
cmp
sbb
sub
add
pop
add
jmp
cli
add
add
pop
jecxz
add
push
sub
push
and
aad
inc
add
add
add
add
add
icebp
push
add
add
fnstcw
xorb
sub
jnp
xchg
dec
push
add
pop
fcoml
add
leave
mov
mov
pop
add
or
fsubrl
jae
add
in
outsl
cld
mov
pop
add
cmp
cmp
sbbb
in
and
icebp
adc
sub
cmp
add
sbb
adc
add
arpl
sbb
pop
mov
add
add
or
jo
jae
and
loope
daa
ficomps
movsl
cli
sbb
xchg
popf
roll
add
add
add
inc
push
add
in
mov
or
test
aam
mov
add
sub
out
lcall
mov
loop
xor
std
test
add
insl
nop
xlat
lret
mov
lods
cmp
and
adc
sarb
dec
add
add
dec
add
loopne
fbstp
add
lea
mov
imul
pop
sub
mov
mov
rol
outsl
addl
stos
into
stc
mov
fcomi
js
dec
pop
arpl
loope
add
jp
push
add
das
rcrl
loop
jns
scas
adc
imul
add
inc
mov
xor
mov
xchg
pop
cmp
add
out
xor
not
add
dec
push
add
pop
add
and
or
dec
lret
lods
arpl
add
fwait
adc
cmp
pop
or
in
aaa
shrl
add
lods
data16
pushf
pop
add
xchg
and
fwait
pop
add
or
cmp
jle
mov
ds
test
add
das
mov
sub
lds
nop
aam
je
mov
add
add
mov
push
pusha
add
add
add
add
mov
push
add
fwait
outsl
push
push
stos
and
out
push
add
add
fs
ja
add
aam
mov
cmp
loope
add
lahf
cli
loopne
aad
adc
mov
xor
xchg
mov
sti
into
mov
xor
add
pop
add
ficomps
movsb
shl
add
fimuls
cwtl
sti
mov
add
add
push
add
mov
into
or
mov
mov
adcb
push
add
add
cltd
xor
mov
add
nop
and
outsb
add
rol
add
or
lock
inc
pop
mov
mov
add
mov
in
add
pop
add
movsl
and
loop
add
jne
add
push
adc
test
add
and
add
sbb
and
idivl
mov
pop
jle
sarl
add
test
testb
cmpsb
insb
add
add
cmp
pop
add
pop
lret
xchg
mov
int
add
popf
pop
add
mov
addr16
shlb
xchg
mov
add
imul
lea
add
out
sub
punpckhwd
sarb
add
cs
imul
xor
popf
cwtl
pop
add
aas
pop
push
dec
add
add
adc
pop
into
mov
aas
push
scas
imul
add
bound
mov
mov
add
xor
pop
add
cmp
js
pop
lret
inc
add
dec
add
add
jno
add
pop
call
xor
adc
daa
sub
gs
movsl
or
fimull
into
lcall
sub
push
add
xor
mov
add
jne
add
add
insb
add
add
mov
add
cmc
xchg
sub
mov
in
cmpl
cmp
inc
add
dec
roll
add
mov
popf
or
inc
sbb
lss
push
add
dec
xchg
sbb
stos
pushf
dec
add
add
cld
enter
in
xchg
call
add
insl
jle
cmp
cld
or
inc
add
add
dec
add
pushf
xchg
jns
jbe
leave
cmpsb
cmpsl
inc
add
and
add
outsb
add
mov
pop
add
jp
aas
insb
add
mov
mov
push
inc
xchg
pop
add
imul
or
ret
jp
lret
add
gs
loopne
add
add
bound
repnz
add
push
adc
add
stos
cmp
cmp
repz
loopne
movsl
dec
add
pop
dec
add
push
out
mov
popa
jne
add
add
clc
jge
jmp
add
test
sbb
int
sbb
cmp
cli
arpl
xorb
jp
xor
mov
lea
mov
mov
stc
cmpsb
mov
idivl
sub
stos
mov
push
mov
testl
lods
push
test
jg
mov
pop
outsb
add
into
leave
cwtl
stos
push
out
divb
add
xchg
mov
pop
cwtl
imul
add
jne
into
adc
addb
pusha
add
add
push
icebp
sbb
imull
push
add
add
sub
push
mov
and
add
mov
add
add
bound
mov
add
add
fcoml
or
pop
add
repz
out
add
and
outsl
jae
pop
add
adc
add
aaa
xor
loope
add
bound
inc
add
mov
push
mov
lods
cmp
add
mov
repz
cmp
add
and
xor
add
xor
ret
jbe
push
dec
int
add
fisubrl
lea
cli
push
sub
xchg
add
mov
fsubp
jno
dec
out
mov
xchg
sarl
ror
add
add
mov
xchg
mov
add
fldenv
ret
cmp
push
pop
pop
push
add
cmpsl
pop
fincstp
jp
les
lret
in
fldl
pop
add
push
add
xchg
call
cwtl
imul
add
ficoms
mov
ja
xlat
mov
imul
ljmp
adc
mov
add
add
push
push
add
pop
push
add
add
daa
lea
add
punpcklwd
adc
popa
inc
add
lods
lods
out
pop
add
sub
sbbl
add
aad
arpl
cmpsb
and
sbb
insb
add
or
pushf
adc
xor
inc
add
pop
loope
add
add
fldl
jp
xchg
mov
cltd
push
inc
add
add
addb
aam
add
add
xor
inc
add
leave
inc
add
add
bnd
loope
mov
add
outsb
add
out
pop
fs
mov
adc
fadds
loop
mov
call
enter
mov
dec
add
jnp
in
add
sahf
sub
rcll
out
shl
add
inc
add
xor
inc
add
add
pop
add
add
jmp
jmp
cltd
mov
pop
add
xor
push
add
sub
imul
inc
cmc
dec
scas
aaa
mov
outsb
add
jb
push
mov
mov
push
add
mov
out
add
or
cmpsb
icebp
mov
xchg
insl
outsl
aam
std
cmpsl
adc
rorl
xchg
pop
add
and
adc
js
popf
shl
int
aas
jg
cmp
call
repnz
add
sahf
sbb
add
xor
add
jnp
dec
add
mov
add
jl
push
add
add
xchg
mov
inc
add
sahf
jno
mov
fdivrl
in
or
data16
push
add
push
imul
movsb
xchg
xlat
cmp
nop
jmp
adc
add
add
fldcw
pusha
add
mov
add
xchg
lea
add
inc
add
jb
add
lods
hlt
subb
add
out
imul
subb
adcb
aam
add
mov
push
xchg
pop
int
ret
inc
mov
push
add
add
lea
pop
test
idivb
pushf
mov
cmpsb
pop
or
xor
sbb
xor
dec
test
lahf
xorl
dec
add
jmp
nop
pop
push
sbb
adc
push
add
sub
pop
add
shl
and
push
add
repnz
mov
imul
rorb
ret
lds
shl
cmovs
xor
movsl
sbb
mov
pop
xchg
sub
cltd
ljmp
add
pop
add
lea
pop
add
push
add
lcall
mov
rolb
add
push
dec
fstps
lahf
testb
xchg
loope
sub
mov
imul
jae
add
icebp
inc
add
add
mov
mov
adc
repz
cwtl
sub
jmp
pop
add
mov
add
inc
pop
push
and
lds
add
inc
add
add
add
adc
mov
lcall
add
xchg
dec
fldl
sti
shll
ret
add
movsb
test
rcr
out
add
popa
iret
or
fadds
add
orb
cmp
in
mov
add
sbb
movsl
ljmp
mov
imul
push
jle
dec
lea
add
cmp
push
iret
pop
add
scas
in
roll
inc
mov
inc
lret
sub
in
sub
cmp
out
stos
and
out
jmp
test
add
jmp
lret
cltd
xor
mov
add
jl
jg
adc
sbb
cwtl
sub
add
sub
aam
test
pop
add
inc
loopne
and
mov
aas
mov
pop
xor
pop
imul
call
sub
and
jg
cltd
dec
jle
add
add
out
push
mov
cmp
add
sbb
imul
add
dec
scas
test
add
aaa
sub
mov
insb
add
lret
lret
pop
add
cs
push
add
pop
add
ficoml
add
es
inc
add
pop
cltd
lahf
dec
add
xchg
enter
xor
lods
mov
push
add
in
jnp
inc
popa
xor
mov
sbb
mov
sub
setp
add
enter
sub
mov
cmp
add
push
add
push
add
call
andb
xchg
jg
lds
add
sub
add
mov
lea
mov
add
iret
push
add
add
jns
add
push
lret
ret
cmp
fcomi
repz
inc
add
mov
adc
jnp
jnp
pop
shrl
jne
outsl
mov
inc
mov
push
sub
pop
sti
loop
mov
add
in
outsb
add
scas
movsl
jae
repnz
frstor
add
cmpsl
inc
add
sbb
fucom
push
sub
mov
mov
push
add
rclb
adc
sbb
aaa
cmp
cltd
lock
add
inc
add
push
mov
in
lret
lods
push
add
push
add
add
add
inc
sbb
jo
addb
pop
add
add
or
imul
jne
add
add
add
add
lret
jno
jmp
add
cmc
add
xor
hlt
mov
cmpb
add
pop
add
in
mov
cwtl
movsb
jg
mov
add
push
add
add
add
add
or
fildl
lock
pop
in
fwait
mov
movsl
cmp
mov
sub
out
add
std
sbb
shrb
add
add
hlt
ret
push
fisubl
imul
and
add
and
pop
add
mov
jmp
jg
add
mov
add
sbb
pop
movsl
popa
fsubr
mov
add
add
mov
add
xchg
subl
mov
insb
add
xchg
repz
jp
sbb
insl
mov
mov
mov
test
push
add
add
pop
adc
cmp
lret
add
mov
add
add
movsb
xchg
out
pushf
repnz
add
movsl
push
cmpl
adc
add
loope
cmp
pop
add
cli
pop
add
jg
add
jmp
pop
add
sbb
daa
push
add
hlt
out
inc
loopne
adc
sbb
lcall
fsubr
insb
add
xchg
jl
adcl
lret
mov
xor
or
adc
adc
add
stos
push
add
cmp
clc
fldpi
shll
push
add
sbb
jmp
push
sub
push
add
add
aam
lcall
int3
jl
arpl
mov
sbb
in
add
roll
add
aam
jne
cmpsb
cli
xchg
loop
add
popa
adc
and
xor
or
pop
add
push
push
add
shlb
add
xchg
pop
add
add
cmp
jmp
mov
dec
sahf
and
add
gs
add
jb
cld
fimull
in
inc
add
mov
in
lods
dec
add
add
push
add
push
add
lods
lds
mov
lcall
aad
sub
add
add
xchg
xor
add
imul
mov
add
mov
or
sub
mov
mov
xchg
add
mov
insl
movsb
sahf
jmp
push
add
mov
add
sbb
cmpsl
mov
dec
pop
mov
scas
ret
pop
add
mov
mov
add
fstpt
push
sbb
push
pop
pop
fwait
lock
cmp
inc
jg
sbb
pop
pop
sub
inc
scas
jne
pop
addr16
cwtl
dec
adc
leave
shl
in
mov
ja
add
dec
add
aam
in
movsl
sahf
pop
mov
xor
out
sbb
dec
enter
lods
cwtl
mov
add
add
vmovdqa
cltd
add
scas
test
sub
movsb
shrl
add
xor
mov
adc
ret
addr16
add
add
sub
imul
jno
pop
pop
add
add
dec
add
loop
int
add
jecxz
inc
cmp
add
pop
mov
cmp
add
outsl
js
clc
stc
sub
scas
sub
fildl
mov
add
shll
add
scas
sbb
leave
lahf
pop
dec
jae
aaa
xchg
repnz
add
inc
iret
pusha
add
xchg
in
inc
add
mov
test
xchg
icebp
fs
mov
add
adc
test
add
dec
cld
mov
sub
dec
add
push
push
add
xor
fiadds
stos
pusha
add
add
cltd
bound
loopne
xor
pop
add
pop
push
add
cmp
in
test
add
stos
lret
nop
cld
aad
int3
mov
or
cmpsb
mov
or
sub
jnp
mov
or
movsl
fmulp
push
add
in
cmc
jmp
nop
addr16
sahf
sub
or
cmc
es
mov
and
fnstenv
add
sti
fcoml
in
rol
or
xchg
inc
add
add
inc
mov
pop
add
push
add
and
xor
pop
cmp
push
add
mov
mov
add
inc
add
add
adc
orl
add
lods
push
add
enter
mov
cmp
sbb
data16
add
daa
sbb
lret
cs
jb
add
add
data16
rorl
outsb
add
add
das
mov
adc
xor
add
cld
fdivp
lods
ljmp
add
jge
add
jg
xor
push
add
xchg
inc
mov
push
sub
sub
cli
shll
add
pop
add
add
inc
add
add
mov
fwait
jnp
push
add
fsubs
cmp
fidivrs
jg
add
add
pushf
aad
push
add
add
lahf
jns
add
js
add
bound
inc
add
add
add
stos
mov
shrl
cmpsb
mov
into
cwtl
mov
jnp
mov
add
or
fmul
rorl
push
add
insl
mov
daa
addr16
adc
add
pop
add
test
mov
jle
inc
add
xchg
call
imul
out
xchg
jg
inc
fidivl
add
jns
cli
ficomps
add
add
add
and
out
push
add
mov
jmp
mov
sbb
addb
xor
aad
scas
and
add
lea
int3
daa
shlb
add
mov
aas
sbb
call
adc
rolb
jno
push
add
push
add
mov
add
add
cmp
pop
dec
sub
add
outsb
add
pop
add
add
add
push
lds
jae
inc
add
add
mov
jns
add
and
xchg
jo
movsb
xchg
add
fnstcw
push
out
pop
add
xchg
out
inc
add
xchg
and
dec
add
push
add
add
jo
loope
pop
les
xor
xchg
add
jg
add
pop
shll
adc
into
ljmp
loop
lahf
sub
cmp
add
leave
dec
add
add
xchg
inc
add
and
pop
andl
xchg
sub
test
push
add
xlat
rcrl
jae
adcl
inc
add
sbb
fidivl
outsl
hlt
xor
add
push
push
add
enter
or
mov
add
cltd
movsb
mov
cmp
jnp
test
xchg
out
add
add
push
les
orb
add
add
popa
fsubrs
sbb
inc
add
add
lods
inc
add
sahf
test
out
jmp
bound
dec
popa
inc
add
add
add
push
add
push
add
or
imul
add
rorb
add
das
mov
mov
icebp
sbb
mov
mov
or
test
xor
add
add
std
ss
push
add
loope
repnz
and
repz
or
mov
push
add
push
add
sub
jp
add
rorb
push
add
add
nop
les
cmp
push
add
cmc
pushf
int
adc
add
pop
add
dec
mov
add
imul
jno
add
and
add
fistpl
sbb
push
xchg
scas
stos
dec
add
xchg
xlat
xchg
dec
add
int
add
lds
imulb
repnz
add
xor
loopne
add
pop
push
add
xor
jg
loopne
jno
cmpsl
popf
sub
cmpsl
sbb
js
int3
insb
add
push
add
push
add
ret
jae
lock
xchg
rclb
add
and
add
in
loopne
add
es
jp
mov
lret
call
sbb
cltd
into
imul
add
mov
stos
rol
movl
dec
mov
roll
pop
stc
shll
add
mov
cwtl
fldl
jno
jg
add
inc
add
dec
add
and
mull
add
into
int3
outsb
add
sbb
jbe
sti
adc
and
add
add
lds
jno
add
add
data16
xor
cmpsb
or
subb
pop
add
inc
push
add
add
jg
mov
push
add
xchg
jp
sub
jbe
sub
jae
pop
add
inc
test
outsl
aam
push
dec
push
add
sub
pop
add
jae
xor
rclb
and
jne
push
add
into
adc
jo
cmpl
mov
loopne
shlb
cmpsb
bound
cmp
jbe
adc
sbb
add
push
add
notb
add
lods
mov
dec
insb
add
lret
jo
mov
rorl
stc
int3
push
push
xor
add
popa
pop
cmc
mov
push
add
pop
adc
out
orb
inc
add
adc
sbb
shll
popa
dec
add
sbb
lea
aas
fdivs
lock
mov
lret
cmpsl
loope
sbb
sarb
popf
hlt
mov
mov
and
dec
sub
lahf
fists
outsl
into
sbb
nop
jne
add
mov
add
add
and
in
jbe
xor
incb
xchg
addb
jmp
and
dec
xchg
and
add
add
or
add
mov
std
jge
xchg
dec
lahf
loop
out
repz
add
rcrb
bound
and
mov
fidivs
mov
stos
push
mov
push
arpl
add
rol
fdivl
ret
enter
jp
fisubs
mov
bound
in
pop
add
sub
cmp
jne
add
adc
andl
sbb
xchg
bound
out
xchg
in
jb
dec
add
inc
pop
cmp
mov
xor
dec
add
lea
add
out
bound
xlat
xchg
fcmovne
push
cmp
mov
lods
mov
pop
add
add
add
mov
mov
in
fidivrs
and
jbe
pusha
add
xchg
add
xorb
insl
in
add
jae
filds
jo
stos
xor
lea
outsb
add
mov
enter
test
pop
adc
scas
inc
fwait
sbb
add
push
add
stos
pop
fisttpl
mov
clc
adc
iret
inc
add
add
sub
mov
sbb
lods
lea
mov
pop
mov
bound
loopne
add
add
das
inc
push
xor
mov
and
inc
add
into
mov
add
sahf
loopne
mov
aad
sbb
lahf
jbe
ret
add
xchg
cld
mov
add
and
dec
add
push
add
add
mov
xor
mov
push
mov
mov
add
add
push
add
rol
dec
add
add
or
mov
add
add
cwtl
sti
call
mulb
add
out
jno
push
add
inc
push
xor
iret
data16
movsb
inc
add
push
ror
cmp
hlt
mov
sub
add
add
sahf
adc
push
jge
adc
and
push
add
add
or
and
pop
xchg
iret
cltd
dec
add
decb
add
and
jg
inc
add
add
lock
clc
fiaddl
add
leave
sbb
clc
popa
dec
mov
mov
add
and
test
add
js
mov
aad
add
leave
jne
xchg
inc
add
push
loope
add
add
add
and
cld
bound
cmp
add
sbb
dec
add
pop
jp
jp
cmp
add
gs
sub
je
sbbb
jns
cld
jns
add
add
add
mov
dec
add
mov
mov
les
cli
mov
and
lock
dec
add
dec
add
mov
ret
insl
push
jnp
fnstsw
movsl
add
stos
sub
sub
inc
loopne
or
pop
insl
lret
call
add
add
xchg
aaa
pusha
add
inc
sub
mov
fcoml
scas
repnz
add
add
cmp
lea
std
fs
cwtl
push
add
fsub
sahf
cmp
outsl
cmp
aaa
sbb
outsb
add
jne
out
pop
add
cmp
push
add
add
mov
dec
push
add
add
add
add
add
fiaddl
pop
push
add
xchg
lods
mov
add
ja
add
add
mov
lret
jge
xchg
cld
mov
cmc
pusha
add
mov
mov
jge
mov
clc
xchg
add
scas
xor
aaa
add
xchg
int
add
ret
push
add
add
pop
cli
inc
add
jmp
xchg
in
iret
mov
je
mov
mov
xchg
add
add
add
cwtl
outsb
add
inc
add
add
fnstsw
xlat
jnp
push
add
mov
add
push
and
pop
mov
xor
jecxz
add
xorl
add
adc
rcll
mov
pop
inc
shll
jnp
mov
adc
mov
push
in
jle
adc
rep
xchg
int3
mov
pop
add
sbb
ret
add
add
fwait
or
dec
lods
lret
shlb
ret
mov
outsl
divb
add
frstpm(287
inc
imul
or
add
or
scas
out
lret
push
add
adc
test
add
jne
ficomps
mov
stos
dec
iret
mov
push
add
out
add
fisubs
sti
jnp
add
jmp
pop
fcmovnbe
nop
adc
cmp
outsl
mov
popf
or
clc
mov
mov
fsts
popa
int
bound
or
mov
dec
add
fists
dec
sbb
and
and
sub
notl
add
add
mov
add
push
btr
xor
shlb
add
add
inc
add
arpl
leave
xchg
and
fnsave
add
inc
xor
out
out
cmpsl
push
add
adc
xchg
cld
or
cltd
sbb
insl
cmc
jmp
add
xchg
xor
mov
repz
push
add
fwait
movl
ja
mov
sbb
jmp
add
and
out
add
fcomp
int
add
add
add
sbb
push
add
add
jl
xor
stos
ret
popf
mov
sbb
in
sbb
mov
scas
jbe
adc
cmp
iret
int
sbb
adc
inc
add
or
add
loop
add
dec
add
add
add
sahf
xor
mov
cmpsl
sub
aaa
jne
add
and
mov
popf
xchg
cld
loope
mov
dec
add
xchg
test
xor
int3
mov
add
pop
xor
lcall
add
cltd
or
jge
loopne
add
add
fisttpll
add
cli
xor
dec
outsl
and
testl
mov
add
and
mov
and
add
add
and
mov
iret
loope
add
and
mov
mov
inc
stc
jno
inc
add
add
add
add
or
in
mov
int
add
imul
add
enter
add
dec
pusha
add
push
add
insl
jbe
nop
sub
imulb
lret
sbb
cmp
add
mov
add
fidivs
aaa
cmpsl
mov
xchg
into
cmp
mov
cs
push
add
inc
add
add
pop
repz
mov
add
add
nop
test
cld
sahf
sub
pop
add
pop
das
outsl
lcall
les
lock
jp
add
xor
fld
mov
add
js
push
add
add
cmpsl
ficompl
xor
mov
sub
bound
mov
add
test
add
jno
cmp
xor
add
add
cmpsb
adc
xchg
clc
daa
scas
jp
outsb
add
ret
lea
inc
add
cltd
data16
mov
add
das
lods
push
pop
mov
push
gs
loope
add
sub
outsb
add
mov
idivl
add
daa
add
add
sbb
inc
sbb
sub
sti
insb
add
add
movsl
gs
add
xchg
scas
inc
sbb
add
dec
add
idivl
lret
adc
ljmp
adc
cli
inc
add
mov
or
push
add
icebp
fcoms
add
add
fsubrs
add
pop
add
lods
imul
repnz
pop
add
insb
add
add
mov
mov
adc
sub
shl
fstl
inc
push
add
popa
add
sub
les
or
lods
call
jmp
add
pop
add
cmc
movsl
mov
add
je
out
add
add
xchg
sub
jbe
mov
push
mov
lcall
add
or
cld
push
add
pop
jns
push
add
add
data16
dec
add
jp
push
out
lods
dec
add
inc
add
leave
pop
or
pop
xchg
ljmp
pop
add
add
addb
aas
jmp
insb
add
jmp
negl
jae
je
aad
test
aas
dec
rolb
pop
lret
adc
add
repnz
mov
cmpsb
push
add
adc
add
cmpsb
in
sub
mov
inc
pusha
add
pop
mov
fnsave
push
add
loope
xor
add
and
add
clc
inc
add
add
rcrl
movsb
adc
jmp
add
cmpsb
and
add
mov
jl
cmp
xor
xchg
jb
add
pop
icebp
xchg
lods
leave
jecxz
jae
cmp
leave
jecxz
add
bound
push
add
xor
add
scas
dec
mov
push
add
stc
cmp
xchg
pop
add
mov
push
jecxz
ja
dec
add
mov
idivb
adc
pcmpgtb
pop
insl
push
fmul
outsb
add
arpl
sahf
test
and
test
add
mov
or
add
in
pop
add
pop
add
aad
add
add
and
sbb
ret
daa
xor
adc
xchg
sub
pop
add
inc
add
xchg
test
clc
lret
add
mov
mov
or
call
jo
pop
lea
dec
xchg
daa
scas
pusha
add
jmp
mov
or
sti
outsb
add
cmp
rolb
add
push
ffree
loopne
ret
inc
add
inc
movsb
mov
push
cld
push
add
jl
jnp
sbb
push
xor
xor
add
adc
or
pushf
cltd
xor
xchg
add
jl
sbb
add
sub
lcall
sahf
and
cmc
cmpsb
pushf
dec
pop
add
add
inc
pop
add
add
add
mov
sbb
add
or
fisubs
add
mov
add
jns
pusha
add
dec
push
add
cmp
dec
cltd
xchg
ljmp
sub
divl
jg
lock
fcompl
add
add
add
add
xchg
mov
jp
push
pop
add
add
into
mov
dec
add
lods
xchg
cmpl
dec
push
add
adc
add
add
mov
mov
add
add
add
jb
testl
jno
jae
add
add
add
lahf
je
sbb
cmpsl
shrb
ljmp
cmp
iret
loope
add
mov
push
nop
jns
add
dec
lcall
rcrl
or
mov
gs
ret
mov
mov
inc
add
nop
jle
add
sbb
andl
add
xchg
imul
int3
lret
mov
add
sub
add
out
int
aas
inc
push
packsswb
pusha
add
adcl
add
add
add
add
pop
add
add
mov
test
jmp
push
add
sub
hlt
stos
adc
repz
add
and
rcr
adc
jns
add
add
or
push
add
pop
jecxz
lods
data16
xchg
gs
movsl
movb
sbb
mov
int3
dec
pop
lds
sbb
or
shl
and
push
add
out
push
pop
add
pop
xchg
add
add
add
call
lds
negl
add
add
mov
push
inc
imul
inc
and
fmull
out
mov
fistpl
dec
add
cmp
push
clc
push
add
fdivs
pop
hlt
scas
pop
add
adc
xlat
shll
mov
rorb
add
xor
inc
add
adc
lahf
lahf
imul
jmp
sub
sub
mov
sub
or
pop
add
les
pop
add
add
add
mov
andb
add
jmp
add
add
int
add
sub
mov
scas
ljmp
add
jmp
add
xor
pop
in
xor
xchg
jae
mov
push
add
stos
jb
int
add
aad
add
jno
inc
adc
xor
xchg
pop
add
sbb
call
loopne
add
mov
push
add
test
pushf
xchg
scas
mov
add
lea
xor
adc
add
lret
mov
mov
hlt
iret
scas
jnp
daa
push
jnp
cwtl
pop
hlt
adc
sbb
xor
or
andl
mov
mov
add
dec
add
add
or
aad
push
add
pop
out
cli
enter
bound
xchg
leave
xchg
xlat
jnp
data16
or
int
push
add
inc
mov
mov
mov
or
cmp
add
imul
add
in
push
add
add
iret
int
add
add
add
jl
test
test
xchg
data16
add
lods
xor
cmpsl
and
add
fnstsw
push
add
cmp
push
add
shlb
add
mov
add
add
inc
add
add
pop
imul
fists
std
lret
insl
jnp
in
add
add
jbe
mov
loopne
mov
add
ja
add
add
mov
fldl
arpl
add
add
cmpsl
aas
movsl
jno
scas
movsl
xchg
jle
mov
or
enter
in
cmc
xor
push
add
xor
jbe
xchg
xor
loopne
dec
add
add
inc
jp
iret
lret
mov
mov
sub
jns
add
in
rcrl
ljmp
mov
xorb
dec
add
addb
arpl
js
test
test
xor
jecxz
push
add
add
sbb
insl
int
xor
mov
add
cmp
pop
mov
add
add
aam
mov
inc
add
push
add
int
add
add
movsb
add
xchg
or
notl
add
add
add
add
add
mov
add
xchg
loop
mov
inc
add
mov
and
or
mov
stos
or
adc
ds
test
sbb
add
mov
sub
test
add
add
xchg
cmp
add
xlat
inc
add
sbb
add
jns
lret
lds
xor
add
push
xor
cmp
jae
add
xor
adc
movsl
mov
add
add
sbb
xor
push
add
xor
test
jle
ljmp
stos
xor
mov
pop
add
add
jbe
inc
add
add
add
enter
clc
add
sbb
or
in
addr16
out
je
jl
cmp
cmc
cmpsb
ret
ror
into
fcoms
test
jp
pop
adc
add
pushf
iret
sti
mov
push
add
imul
cmp
out
add
int3
jge
add
fdivrl
add
add
add
add
mov
add
and
jmp
sbb
lcall
inc
sub
mov
cltd
je
fldt
popa
ret
iret
jle
sub
pop
add
xchg
pop
push
add
add
je
inc
add
movsl
in
push
jle
xlat
rcl
xchg
push
mov
out
cwtl
mov
je
push
add
add
adc
push
mov
sub
or
movsb
hlt
leave
inc
cld
cwtl
jp
adc
or
in
addr16
or
cmp
mov
add
data16
ret
lret
pop
pusha
add
arpl
aas
adc
dec
and
and
pop
push
pop
pop
add
cwtl
test
xchg
jge
fwait
jmp
add
into
imul
in
cmp
xor
mov
lods
data16
adc
pop
add
hlt
js
push
fsubl
jmp
inc
add
jmp
add
sahf
aam
sbb
fsub
test
pop
stos
mov
add
fcoml
shll
adc
into
or
pop
xchg
scas
xchg
and
adc
cwtl
aas
fists
xchg
push
add
mov
pop
add
cmp
pop
inc
add
push
add
xchg
cmp
roll
add
shlb
loop
shrl
ljmp
repz
or
lea
outsb
add
add
jne
add
dec
xchg
rcrb
add
sbbl
jmp
push
xor
dec
add
add
sahf
mov
call
daa
push
add
xor
mov
add
lods
test
leave
adc
mov
lcall
adc
adc
out
inc
add
daa
push
add
sub
insb
add
xchg
lret
push
add
add
add
push
add
add
and
add
add
pop
add
std
pop
add
iret
sub
jg
stos
fmuls
add
insb
add
cmpsb
pop
inc
add
add
insb
add
sub
std
mov
lret
jle
mov
jle
jb
dec
in
add
loop
lock
pop
sarl
inc
add
mov
fdivs
pop
add
enter
inc
add
pushf
push
sbb
push
cwtl
xor
std
out
xor
imul
mov
ficomps
add
in
add
sub
add
bound
jge
cltd
add
add
jecxz
jg
mov
xor
dec
in
ret
or
inc
daa
xor
adc
jle
push
add
arpl
add
hlt
push
data16
loope
jge
adc
mov
inc
add
push
add
xchg
add
add
add
xchg
jl
pusha
add
jl
shll
cmp
cmpsb
lcall
cltd
sbb
xchg
ljmp
inc
add
add
cld
xor
add
add
xchg
aam
sarl
dec
add
mov
add
fdivrl
inc
add
add
outsb
add
sbb
and
hlt
jle
les
add
xor
add
add
add
push
add
fsts
enter
mov
add
testl
add
in
out
daa
lret
jge
pushl
add
aam
imul
add
add
aam
add
or
add
sub
scas
adc
gs
sbb
pushf
inc
xchg
cmpsb
inc
fidivs
or
inc
add
adc
sub
sbb
outsl
lods
jns
sbb
or
mov
add
ljmp
or
ljmp
cld
push
add
aam
pushf
ret
lock
add
add
insb
add
push
es
mov
fsubp
jle
push
add
add
scas
adc
ss
cmp
pavgb
add
sub
dec
add
ljmp
xchg
imul
pushf
and
sub
sbb
rorb
xchg
bound
das
aam
mov
mov
sub
adc
add
jge
add
add
sarb
mov
cli
cwtl
sbb
add
jno
sti
sbb
dec
add
push
add
fwait
outsl
scas
cmovp
adc
addr16
jmp
dec
movsl
sbb
pop
int3
lods
inc
add
xlat
lods
scas
adc
jge
mov
add
sbb
push
add
add
sti
imul
dec
jae
lea
xor
jle
cmc
sub
pop
mov
mov
add
add
xchg
add
daa
pop
and
sahf
fucomip
int
mov
add
lret
xchg
mov
enter
sub
cmp
mov
out
jae
sbb
loopne
jp
out
pop
add
add
aas
mov
add
add
push
dec
add
cli
add
xchg
xchg
ss
cmc
jnp
mov
add
inc
outsl
push
add
and
push
add
add
hlt
std
cmpsb
adc
out
lock
mov
add
add
bound
std
cli
dec
mov
aad
enter
test
push
add
cmp
test
pusha
add
call
cli
and
lods
out
add
add
sbb
push
add
mov
ret
inc
add
imul
mov
mov
dec
mov
xorl
add
int
cld
sbb
aaa
out
icebp
popa
cltd
addb
out
xchg
xor
lret
xchg
cmp
jmp
add
arpl
addb
sbb
mov
inc
cmp
divl
lahf
xchg
add
aam
add
fsts
dec
xchg
add
fnsave
inc
in
add
jge
add
aaa
hlt
lds
and
in
pusha
add
xchg
rcl
xchg
aam
mov
sahf
std
clc
xchg
cmp
inc
add
and
adc
mull
dec
scas
enter
pop
add
mov
xlat
mov
mov
add
lock
add
stos
into
mov
add
idivb
jae
add
add
push
add
add
xor
in
mov
fmulp
cmp
xor
add
or
xor
cmc
and
inc
add
pop
add
je
imul
sahf
jecxz
adc
in
inc
mov
add
mov
nop
adc
fcoms
add
add
popa
jno
movsl
and
xchg
xor
adc
js
sub
test
daa
push
add
xchg
js
arpl
push
in
shlb
iret
dec
add
push
mov
lea
sub
les
popa
and
mov
mov
mov
xor
mov
add
add
subb
add
add
repnz
dec
das
mov
in
xchg
int
mov
sbb
add
cmp
bound
das
loopne
lret
xor
movsb
into
pop
pop
mov
add
jle
add
lcall
pop
add
mov
add
add
add
add
adc
jp
sub
add
jg
add
add
add
addl
gs
and
xor
and
shl
adc
adc
pop
add
add
pop
add
mov
lcall
test
cmp
sbb
sub
dec
add
imul
jp
xchg
add
sbb
in
dec
cli
mov
cmp
lea
test
cmc
arpl
lea
loop
pop
out
add
add
fcompl
and
add
and
dec
add
das
jmp
mov
vpshlw
add
sub
lret
add
add
aas
and
jo
push
add
mov
add
test
dec
add
add
push
add
xlat
repnz
add
jle
insb
add
loope
ja
sbb
xchg
out
mov
add
add
icebp
mov
xor
pop
add
add
add
add
dec
add
adc
fidivl
xor
movsb
stos
enter
pop
xchg
mov
add
in
mov
les
or
xchg
adc
add
std
and
add
xor
iret
pusha
add
add
jne
add
pop
push
add
sbb
lds
push
fistl
cmp
fsubrl
cwtl
loopne
dec
add
sbb
addr16
mov
ror
add
inc
add
nop
cmpsl
mov
add
add
out
hlt
cmpsl
mov
ret
test
and
movsb
popf
test
add
addr16
jge
add
add
xor
insl
mov
jecxz
add
add
mov
add
add
addr16
jo
movsl
clc
xchg
xchg
mov
jne
sti
xorl
mov
lea
xchg
or
repnz
adc
xchg
aas
jmp
cli
or
add
or
xchg
rcll
jae
fdivs
mov
mov
mov
dec
mov
adc
xchg
add
dec
add
mov
and
push
dec
fdivrs
dec
xor
stos
jnp
bound
dec
add
adc
xchg
push
notl
xchg
outsb
add
data16
push
pop
add
add
push
mov
add
es
hlt
cmp
dec
add
add
jle
xchg
fldenv
mov
leave
add
cli
push
add
ja
mov
add
pop
cli
into
je
dec
dec
test
cli
or
push
add
push
mov
dec
sbb
xor
gs
lea
loopne
add
mov
add
mov
outsb
add
jle
inc
adc
das
cmp
add
sub
aaa
je
push
and
jnp
daa
movsl
pushf
or
int3
push
add
outsl
sbb
or
xchg
hlt
movsl
leave
cs
ja
add
mov
add
mov
add
adc
loopne
ret
inc
loope
call
add
rorl
add
popa
pop
jnp
jecxz
es
push
add
outsl
sub
mov
add
mov
inc
add
fcoml
clc
dec
add
into
pop
add
hlt
mov
sbb
mov
add
add
jnp
pushf
pop
rcll
mov
fnop
xchg
fldln2
cltd
dec
add
add
icebp
fistl
add
jecxz
add
js
rcrb
adc
shl
into
data16
insl
jb
lds
add
bound
cs
xor
rcrb
add
and
sti
lock
fistl
neg
lock
xor
pop
mov
add
jns
add
sbb
push
fwait
dec
add
test
in
int3
mov
flds
and
pop
add
dec
mov
rcrb
lds
xchg
push
add
cmp
sub
out
out
pop
insb
add
mov
mov
mov
aas
inc
add
mov
push
add
cmp
lahf
pop
add
add
pop
popf
fnstcw
aam
add
add
pop
iret
pop
add
add
add
or
adc
add
push
add
lea
add
xor
adc
sbbb
cmc
fidivl
mov
sub
fbld
push
sti
in
pop
add
add
jo
lret
popa
aas
popa
pop
cmp
inc
add
rorl
adc
imulb
pop
icebp
aas
mov
xor
cmp
lret
not
mov
sbb
and
add
mov
add
cmp
jmp
push
cmc
lcall
xchg
int3
push
aad
add
outsb
add
add
repnz
test
lods
or
sub
adc
push
add
sbb
leave
stos
dec
repnz
add
ficoms
movsl
lret
xchg
xor
icebp
int3
jecxz
imul
sti
pop
idivb
jmp
mov
call
cmp
add
testl
popf
jmp
dec
add
mov
sub
lahf
call
std
xchg
adc
insb
add
jno
add
mov
and
mov
xlat
mov
arpl
andl
xchg
and
add
or
insb
add
and
push
add
add
aas
xchg
pop
add
fcomps
add
pop
add
hlt
pop
add
add
pusha
add
lds
repnz
or
bound
data16
inc
add
jp
lret
and
jecxz
add
bnd
mov
xchg
push
lock
add
inc
add
xlat
add
daa
push
and
mov
int3
pop
jae
add
inc
mov
pop
add
add
adc
loope
add
js
mov
adc
inc
add
xor
or
add
fsts
clc
addr16
jnp
inc
add
movsb
loopne
add
jne
subl
fsts
nop
xor
shr
pop
add
add
rcr
adc
or
push
add
lods
jns
das
test
lret
hlt
adc
mov
neg
mov
push
into
or
pop
or
stc
fstpt
and
xchg
mov
xchg
test
or
jno
adc
pop
sbb
enter
mov
add
aas
jg
mov
add
dec
add
pop
ficoml
add
add
clc
xchg
outsb
add
add
push
mov
add
pop
test
sub
inc
add
add
add
mov
and
pop
mov
add
add
outsl
cmp
aas
jge
add
mov
out
sub
ss
xor
daa
jle
pop
test
sbb
dec
pop
cmp
pushf
jno
scas
cmp
add
add
add
or
movsl
dec
xor
mov
add
fdiv
enter
rclb
add
adc
cmpsl
cmp
cmp
fldenv
add
cmp
mov
roll
adc
aaa
popa
sbb
aam
lahf
xchg
sub
add
movlps
add
add
xchg
xchg
fisubs
sarl
xor
mov
mov
repnz
jge
cld
insl
dec
add
add
shll
lock
add
outsb
add
add
ljmp
add
add
lahf
stc
add
test
pop
in
mov
cltd
sbb
jg
add
add
inc
enter
mov
mov
sbb
pop
add
dec
add
add
jecxz
jl
push
jmp
in
add
lret
shlb
sub
ret
movsb
fisttps
push
add
icebp
lds
stc
dec
sub
mov
xor
sbb
loop
imul
add
add
add
xchg
sub
add
and
ljmp
pop
add
ja
clc
pushl
add
cmp
cmp
jns
add
iret
sarb
insl
bound
imul
mov
cmpsl
push
add
test
icebp
ret
rclb
lods
aad
add
add
sub
jmp
mov
add
insb
add
repz
add
and
xor
pmaxsw
mov
mov
lds
add
add
out
add
add
cmpsb
pop
add
stc
iret
gs
mov
lcall
and
jae
add
das
inc
mov
cmc
movl
jns
mov
addl
in
movaps
into
outsb
add
call
repz
add
inc
add
add
xchg
add
add
pushf
jae
js
sbb
mov
cmp
xchg
fcomp
or
jo
ficoml
mov
add
insl
xchg
cltd
push
add
mov
cmc
lods
lea
add
adcl
xor
and
mov
add
int3
jns
pop
or
dec
add
mov
pop
mov
jecxz
pop
std
in
mov
jl
push
add
std
mov
mov
push
add
leave
mov
add
movsl
push
add
add
sbb
dec
add
das
cwtl
out
add
add
xchg
xchg
push
cmp
mov
sbb
ja
jb
data16
pop
pop
add
adc
add
sbb
add
add
lods
add
add
fs
mov
dec
add
jno
add
sub
add
xor
add
stos
push
add
lret
rcll
push
sbb
xor
pop
add
add
jno
sbb
or
dec
add
lcall
push
add
mov
xor
lock
sbb
add
add
fidivs
mov
add
fwait
scas
lds
xchg
sub
inc
add
roll
mov
add
inc
add
flds
dec
out
fstpt
aas
shlb
fistps
add
push
add
xchg
adc
xchg
fmuls
lcall
and
mov
nop
inc
add
mov
pop
pop
mov
add
push
add
lock
mov
mov
mov
jno
in
ja
push
cmp
jge
movsl
push
xor
repz
repz
out
cmp
pushf
inc
add
in
push
xchg
dec
add
jmp
test
add
push
iret
scas
aaa
cmp
outsb
add
popa
mov
add
jge
add
pop
add
mov
dec
jbe
iret
jbe
xchg
mov
mov
jbe
cmp
test
inc
sbb
add
mov
push
add
and
movsb
jmp
jae
inc
mov
sub
dec
je
scas
mov
add
int3
adc
out
jl
mov
jbe
shll
ret
cltd
rorl
in
sbb
in
add
add
add
iret
cwtl
sub
sub
pop
add
incl
add
sub
aam
add
mov
inc
add
mov
dec
dec
js
sub
jle
stos
mov
add
add
inc
add
stos
insb
add
idiv
sbbb
nop
push
add
add
repz
add
idivb
repz
stos
inc
add
cmp
add
xor
inc
adc
push
add
add
push
add
push
and
mov
in
jmp
lret
xor
cmpsl
fstpt
add
xchg
inc
add
push
add
fcomps
sub
mov
int
popa
inc
mov
repnz
mov
adc
sbb
dec
jmp
add
push
add
add
adc
jmp
mov
adcl
add
clc
pop
and
ficomps
jno
push
push
scas
and
imul
mov
and
jns
fdiv
push
add
enter
fidivl
add
repz
mov
add
add
dec
add
mov
add
and
enter
ret
sub
add
xlat
xchg
or
xor
jnp
cmpb
sbb
enter
add
cmpsl
push
add
arpl
aaa
inc
add
jle
mov
jmp
mov
ret
fistpl
add
add
outsl
lret
cmp
pop
add
add
add
repz
push
add
dec
add
vpcmpeqd
pop
sbb
lock
add
xchg
outsl
adcb
dec
les
sbb
add
dec
add
mov
add
ficoms
add
dec
pop
add
push
add
push
add
add
add
pop
frstor
pop
add
push
adc
pop
sahf
icebp
mov
pusha
add
mov
lret
aad
add
add
in
lcall
add
xor
mov
cmpsl
and
sahf
cmc
sbb
sub
add
lcall
popf
mov
mov
sbb
enter
lahf
gs
mov
add
iret
je
cwtl
divb
or
test
mov
into
mov
add
shlb
jmp
fstpt
add
add
mov
aaa
jg
mov
flds
add
or
fstl
pushf
xchg
xor
mov
fwait
ja
dec
add
add
mov
dec
add
loop
cld
inc
add
lods
jl
jns
add
call
add
inc
push
add
add
xchg
into
iret
sub
and
sub
mov
lcall
add
leave
inc
add
in
add
cmp
pop
add
dec
stc
pop
mov
fistpll
mov
dec
in
add
mov
mov
xor
int3
add
mov
hlt
mov
leave
in
add
add
lock
pop
pop
push
add
add
add
or
sbb
mov
add
out
cmp
and
sbb
cmp
adc
pusha
add
add
gs
adc
inc
ret
repz
add
adc
xchg
jb
lret
add
xchg
jnp
add
addl
xchg
lods
inc
repnz
add
xor
inc
add
sqrtps
add
add
enter
jle
add
pop
add
push
add
imul
jns
push
add
cmp
add
push
sti
int3
xorl
add
jb
and
inc
add
mov
add
cwtl
mov
add
add
add
adc
lds
add
scas
add
adcl
add
push
add
xor
push
add
icebp
jno
jle
push
mov
add
iret
push
jnp
push
lods
xor
stos
cmp
loope
int3
add
add
sbbl
jno
in
sbb
jo
jge
lds
fwait
mov
add
jae
leave
mov
mov
sar
movsb
fisttpll
iret
dec
aaa
out
leave
nop
and
mov
add
add
inc
add
mov
add
mov
shll
andl
int
add
or
cwtl
mov
xchg
add
dec
add
in
icebp
add
push
add
and
adc
shr
add
std
aad
add
nop
sbb
add
sbb
popa
xor
cmc
push
add
ret
mov
add
iret
mov
add
bound
dec
add
fcoml
inc
add
sbb
cmp
mov
mov
mov
shrb
loop
xchg
hlt
push
add
pop
add
add
mov
popf
dec
jg
push
add
inc
add
add
inc
add
mov
aad
lret
aad
popf
aaa
scas
add
mov
pop
jae
mov
shrl
push
add
clc
mov
imul
inc
imull
scas
push
add
add
les
add
popf
sub
add
pushf
js
or
adc
mov
add
lret
cmp
test
shlb
cmp
fisubrs
jns
add
sbbl
add
popf
jmp
dec
mov
mov
add
jge
pop
mov
lcall
sub
adc
add
push
add
add
xchg
popf
inc
add
add
sbb
fdivs
add
add
and
mov
je
mov
add
js
negl
gs
cltd
sbb
add
shlb
cmpsl
test
push
add
push
cld
dec
mov
cmpsb
stc
mov
add
sbb
pop
add
mov
hlt
mov
add
jbe
popa
xchg
int3
jmp
pop
add
leave
mulb
add
adc
sarb
dec
add
dec
add
add
sub
out
test
jno
add
sub
cmc
mov
pop
add
in
mov
cmp
add
daa
adc
loopne
or
add
mov
add
push
mov
add
jle
push
add
add
aaa
ljmp
pop
add
add
mov
cmp
cmp
addr16
cmp
inc
add
add
test
and
jg
data16
add
out
aaa
jo
cmp
enter
clc
cmpsb
and
inc
add
cmp
jp
fsubr
call
orb
add
test
call
lret
imul
add
add
in
mov
jmp
inc
xchg
sbb
sub
fimull
fnstcw
lcall
inc
adcb
daa
add
outsb
add
ljmp
lock
scas
ss
add
lret
arpl
add
cld
cmp
daa
add
xor
test
cmp
sbb
jecxz
ljmp
jae
add
add
add
mov
xchg
clc
dec
xchg
and
sub
push
cmp
mov
repz
and
cmp
add
mov
hlt
cmc
add
xor
dec
add
mov
adc
add
add
loop
dec
xlat
pusha
add
mov
mov
hlt
adc
jne
add
ret
dec
add
mov
add
add
and
mov
ficoml
add
add
add
push
add
add
push
add
shrl
call
call
cld
push
add
ljmp
add
dec
add
into
repz
fwait
adc
mov
push
add
decb
pop
lahf
addr16
add
add
repz
add
out
out
xchg
inc
out
jb
les
lahf
pop
popf
lods
loope
cmpsl
push
push
sbb
fidivrl
negl
add
add
add
aas
and
add
rcrb
push
mov
outsl
fldl
inc
clc
add
add
fbld
add
and
xchg
add
imul
mov
add
test
imul
cwtl
out
shrb
dec
add
push
add
add
in
aad
pmaxub
ljmp
sbb
into
insb
add
push
add
dec
add
cmpsb
xor
xor
hlt
adc
mov
out
jbe
pop
jmp
stos
xchg
jb
mul
add
shrb
fnsave
push
lahf
mov
add
pop
ljmp
cltd
xor
pop
cmc
jo
push
out
jle
and
jnp
scas
stos
lods
pop
ljmp
and
int
add
push
add
add
push
add
dec
push
xor
push
add
daa
mov
mov
jle
test
sbb
mov
add
jle
mov
sub
aad
add
add
mov
add
add
test
sbbb
xor
sub
mov
add
cmc
mov
in
add
or
stc
jecxz
adcb
add
shll
add
add
add
push
add
add
add
arpl
add
pop
xor
aas
add
add
repz
fcoms
loopne
dec
into
and
cli
and
lret
rcll
cmp
pop
dec
add
inc
add
dec
add
add
mov
loop
add
mov
mov
jns
xchg
sub
add
add
test
add
xor
rolb
in
out
mov
sahf
push
pop
adc
adc
cmp
xchg
sub
adc
clc
xor
xchg
testl
pop
pop
in
test
add
mov
mov
xchg
pop
add
mov
add
test
daa
les
mov
add
add
push
add
xchg
jmp
jle
adc
or
add
pop
mov
mov
jb
lds
lods
push
add
inc
add
stos
outsb
add
add
fs
mov
add
add
pop
add
add
add
loope
mov
xor
sub
aas
repz
pop
add
add
xchg
mov
ret
out
in
add
add
les
push
add
inc
add
adc
call
cld
stos
lret
shll
data16
jno
adc
dec
xchg
arpl
stos
movsb
aam
add
test
lcall
add
out
cmp
pop
and
call
aaa
dec
test
cmp
add
pop
sub
mov
inc
add
add
inc
add
dec
add
xor
push
jp
ret
and
jns
add
jp
add
inc
add
dec
mov
dec
pop
clc
adc
inc
test
cmp
add
add
push
add
add
mov
lahf
pop
add
add
and
mov
test
push
lret
bound
sbb
or
cmpsb
jge
cmp
movsb
ret
addr16
xchg
mov
bound
aas
adc
cmp
add
mov
cmp
insb
add
lret
xchg
sub
arpl
cmp
add
jb
out
loope
inc
in
mov
inc
mov
test
jo
nop
ljmp
mov
sub
mov
add
scas
push
add
xchg
push
outsb
add
addr16
sahf
call
jae
xchg
aaa
push
add
mov
data16
xchg
add
add
add
add
ror
add
call
mov
aam
movsl
mov
push
add
adc
shrb
ljmp
add
add
add
xchg
ret
and
cli
stc
mov
or
jle
jl
push
add
into
push
add
stc
sub
xchg
xchg
aas
xor
push
add
add
sbb
leave
sbb
mov
adc
shll
rclb
add
add
mov
sub
cmp
call
mov
arpl
sarl
dec
add
mov
outsl
adc
int
add
mulb
add
in
stos
out
sub
mov
add
add
mov
sbb
out
push
out
jl
andb
jno
ljmp
movsl
sbb
mov
and
inc
aaa
push
xor
clc
jno
mov
push
add
add
add
inc
add
inc
mov
push
add
mov
add
add
cmp
add
add
inc
add
repnz
daa
cmpl
push
add
fistpl
add
clc
testb
cmp
jns
jge
add
add
mov
stos
inc
add
add
sub
pop
lahf
stos
lcall
cltd
iret
inc
pop
xor
cmp
call
and
iret
outsl
pushf
outsl
cmp
and
cli
push
add
add
add
das
jmp
fisttpll
mov
lret
push
add
cmpsl
push
add
jecxz
adc
add
add
loopne
dec
lods
mov
mov
add
fwait
test
pop
aad
sahf
popf
outsl
cli
push
add
cmpsb
mov
add
push
add
add
mov
mov
idiv
mov
dec
mov
add
enter
jl
push
xchg
push
ret
cmpsl
ja
in
test
add
add
add
jmp
or
shlb
add
mov
jp
rorb
xor
das
xchg
fdivr
push
mov
add
add
shrl
aam
jp
ret
cmp
or
pop
xor
sub
xchg
add
xor
outsl
jnp
add
mov
jnp
cmp
ljmp
pop
mov
add
inc
add
clc
mov
add
add
lds
dec
push
add
add
test
sub
cwtl
xchg
jo
mov
daa
fwait
inc
jno
add
notb
fildll
add
cltd
and
popa
xor
jmp
mov
add
add
or
mov
xor
dec
add
add
flds
add
inc
add
jle
inc
adc
lahf
cmc
out
mov
inc
xchg
cmp
mov
cmp
xlat
xor
jnp
pop
push
bound
sub
cs
pop
je
sahf
popf
xchg
push
add
add
jmp
clc
jmp
add
sbb
add
add
jmp
cs
sub
fisubrl
lock
frstor
jns
out
mov
sbbl
in
out
pushf
or
shr
jne
imul
lock
clc
outsl
or
add
lods
and
cmpsl
jp
jmp
add
lea
std
dec
add
xchg
dec
add
fwait
int
add
shll
add
add
daa
jns
repz
jle
add
mov
in
fsubs
cmp
mov
add
mov
movsb
pop
jl
stos
pop
outsl
add
stc
cmp
push
add
cld
shrb
jle
mov
xor
in
in
loop
sbb
and
cmp
pop
add
pushf
rol
out
fstpl
int
or
popl
idivb
add
lods
aas
sbb
ret
xchg
cmp
lret
add
jbe
mov
jp
sub
ret
push
add
jne
test
add
add
call
pop
mov
int3
cmc
pusha
add
add
push
add
add
shll
cld
movsb
mov
adc
call
mov
add
add
rcrl
cmp
cmp
dec
xchg
mov
add
add
or
fimull
in
int3
push
add
xchg
imul
xchg
mov
add
inc
add
add
pop
add
xor
add
aas
push
out
lret
adc
cld
outsl
enter
in
mov
add
cmp
mov
adc
jns
add
adc
orl
cmpsb
sub
push
aaa
mov
add
pop
pop
sub
divl
xor
fisttpll
add
shl
fucom
xor
scas
out
in
push
js
push
sbb
add
cwtl
cmp
out
clc
fcoms
add
add
jae
mov
add
ljmp
dec
add
in
sub
in
mov
mov
dec
add
add
das
les
in
or
add
mov
jne
add
add
mov
roll
or
mov
cli
push
iret
fcoml
mov
mov
fisubl
add
add
mov
addr16
fadds
push
add
add
add
subb
repz
ja
add
dec
add
popa
sub
popf
jns
jl
mov
and
xor
inc
sbbb
dec
imul
dec
scas
clc
sub
add
stos
addr16
add
cmp
pop
add
jbe
inc
into
arpl
push
inc
add
push
mov
cltd
pusha
add
add
test
jne
push
add
in
pop
add
sbb
push
cmp
bound
sti
inc
add
push
add
loop
add
mov
nop
fists
lds
adc
push
fldt
mov
fucomi
xchg
pop
mov
dec
add
insl
fists
jne
inc
add
fildl
add
xchg
add
and
sbb
icebp
repz
inc
sbb
add
arpl
inc
add
jne
mov
jl
fwait
sub
and
inc
add
add
test
fistpll
add
movsb
or
scas
outsl
cmp
xchg
jno
sbb
stos
or
push
add
push
add
scas
imul
data16
rolb
mov
add
fcmovu
lds
pusha
add
inc
add
dec
and
add
xchg
in
fisubrs
add
stos
lock
cmpsb
mov
add
pop
test
pushf
das
or
jb
push
add
push
add
ja
gs
add
push
add
dec
fnsave
add
cmc
pop
insl
push
into
add
sbb
bnd
pop
dec
xor
add
inc
add
add
cmc
data16
test
pushl
add
xor
adc
mov
fcomps
add
add
xor
push
fiaddl
mov
add
je
push
add
push
jne
ret
rcll
shl
add
add
mov
xchg
shl
add
lahf
or
jp
dec
add
inc
add
mov
jae
rcll
sbbl
aam
add
add
and
mov
jmp
add
add
mov
inc
add
cmp
les
mov
jb
icebp
mov
add
call
add
cmp
sbb
and
outsb
add
add
lock
jecxz
add
add
jns
vpmaddwd
add
or
add
daa
sub
bound
xor
js
add
mov
cltd
std
mov
nop
dec
icebp
popl
mov
add
cmpsb
lcall
jg
out
lret
dec
mov
std
add
xlat
cltd
mov
mov
add
stos
leave
mov
je
ret
jb
cmp
js
mov
add
push
add
dec
add
lret
aaa
clc
testl
push
add
test
sub
cmp
push
add
add
sbb
cmp
jno
ret
adc
add
cmp
in
sub
dec
add
add
ljmp
add
add
or
jecxz
and
mov
js
hlt
add
add
add
int3
test
inc
add
add
icebp
adcb
fisubl
add
mov
add
add
or
add
add
inc
add
mov
frstor
and
stos
mov
add
add
sbb
add
dec
xor
pop
add
insb
add
clc
xor
lods
in
inc
add
sub
ljmp
and
and
and
popa
xchg
daa
jnp
push
add
add
cltd
mov
out
add
jmp
stos
mov
push
add
and
ja
push
int
add
add
xchg
cwtl
loope
test
jo
loopne
add
jl
mov
sti
or
lret
movhps
adc
nop
or
inc
add
mov
jo
in
nop
pop
add
add
aas
and
add
mov
add
add
cmp
xchg
add
lahf
out
pop
in
out
pop
add
aaa
pusha
add
std
jecxz
xorb
jne
popf
mov
imul
adc
or
xor
scas
das
mov
addr16
mov
add
inc
add
es
inc
add
cmp
mov
insb
add
mov
push
adc
sub
sub
cmp
sbb
das
and
push
add
andl
rorb
adc
mov
and
add
int
add
adc
add
xor
or
add
pusha
add
lcall
addb
enter
push
add
pusha
add
dec
xor
inc
add
mov
or
lret
call
push
int3
jno
rorb
add
out
push
add
out
imul
add
cmp
test
push
add
mov
fwait
jl
clc
les
push
add
add
sub
mov
roll
xor
out
fisubs
or
push
add
out
mov
sub
adc
add
jg
add
add
sub
popf
adc
xchg
xchg
cmp
loope
add
add
add
cwtl
cmpsb
jmp
movsb
push
add
adc
jecxz
stos
jg
sbb
shl
es
jmp
add
arpl
push
xor
add
mov
jle
push
add
mov
bound
in
mov
or
scas
mov
sbb
xor
gs
add
in
outsl
jae
fsubrs
add
add
mov
jg
push
add
add
add
shlb
add
jno
add
fists
add
inc
add
fs
mov
push
dec
add
pop
mov
inc
add
int
add
add
add
push
push
add
out
push
add
rorl
add
das
dec
add
out
mov
leave
dec
xor
fdivs
push
aam
pop
mov
notb
add
sub
fnsave
pop
lcall
add
jb
jb
add
add
add
or
test
das
out
sarb
repz
pushf
cmp
jae
insl
fiadds
fistps
cmp
pop
add
test
in
pop
add
add
add
add
out
inc
loop
add
sahf
out
xorl
jge
lods
cmp
or
adc
push
popa
xor
dec
add
add
int
shlb
notl
push
add
add
xor
sti
pop
loop
and
xchg
add
sub
pop
add
jp
dec
mov
mov
mov
data16
pop
cmpl
lods
cmpb
push
add
repnz
in
push
rcll
mov
test
cmp
sbb
mov
int
mov
enter
ss
mov
sub
in
add
pop
adc
and
xchg
pop
mov
loop
add
add
add
lret
cltd
cli
iret
das
xchg
shl
and
test
inc
ja
aas
push
add
add
pop
add
add
mov
test
mov
add
jp
les
pop
xchg
jmp
cmp
add
lcall
add
mov
push
add
add
add
add
pop
add
ljmp
stos
sbb
popf
lahf
nop
inc
add
ss
mov
add
add
pop
sub
pop
and
call
bound
hlt
sbb
lods
adc
fistl
and
mov
mov
ljmp
dec
add
xchg
stos
sahf
xlat
xchg
bound
clc
das
shlb
add
jg
in
ret
call
mov
fildll
cmp
cwtl
xor
add
or
lods
aas
movsl
test
leave
shr
adc
int3
pusha
add
mov
imul
jp
pop
add
call
mov
rcrb
jns
jmp
add
add
xor
or
lds
add
add
jnp
sbb
jne
aaa
lods
fistpll
add
xchg
iret
movswl
add
sub
add
push
add
fstpl
ljmp
add
add
add
add
jmp
cmp
fisubrs
add
sub
sub
xor
cmp
imul
add
xor
add
jo
mov
add
or
mov
cmp
in
int3
dec
add
add
adc
add
sub
or
scas
scas
jl
sub
sbb
pop
lds
add
in
sbb
add
add
scas
push
add
add
mov
add
dec
add
and
add
add
fdivs
gs
add
lret
daa
sahf
cmp
add
inc
xchg
lds
add
add
sbb
mov
out
mov
cmc
ds
add
add
mov
add
fldt
jbe
rcrl
scas
sbb
cmp
push
add
adc
adc
xor
mov
dec
mov
push
mov
ret
push
std
or
into
adc
adc
inc
add
shlb
mov
mov
add
add
push
add
xor
icebp
adc
test
add
daa
lods
push
scas
gs
out
add
pop
add
add
mov
fwait
aaa
jae
add
adcl
and
sbb
adc
popf
lahf
fldcw
inc
add
stos
inc
cmp
mov
xchg
mov
or
add
mov
insl
mov
insb
add
dec
lret
mov
pop
cld
test
add
into
pop
lock
pop
add
add
sub
dec
add
pop
pop
xchg
loopne
add
add
add
add
inc
add
add
imul
jo
cmpsl
cmp
pop
stos
cmc
and
int3
cli
aas
test
adc
add
cmp
and
popa
ds
hlt
sub
add
mov
add
push
add
arpl
xchg
jecxz
add
nop
fcoms
add
loopne
xor
xor
add
add
add
in
test
sbb
jae
add
push
and
mov
jns
inc
pop
adc
add
inc
add
inc
add
sub
xor
pop
test
add
add
mov
add
aad
enter
add
cmpsb
jb
push
shll
mov
add
add
loope
add
repnz
sbb
cmp
xor
mov
lods
xor
pop
add
pop
xchg
in
stos
push
add
popa
push
xchg
test
push
hlt
inc
add
sub
cwtl
pop
add
into
jno
pop
add
mov
pop
dec
add
stos
add
mov
mov
push
mov
push
add
add
cli
and
repz
add
xlat
iret
xor
popf
cmpsl
xchg
fs
icebp
in
add
sti
sbb
lods
bound
stos
loopne
outsl
scas
pop
iret
and
xchg
push
mov
enter
and
add
movsb
jg
add
jb
popa
push
iret
out
fidivl
add
cmpsl
mov
mov
pop
xchg
call
insb
add
int3
dec
add
insb
add
lea
add
fldl
dec
add
add
mov
cmp
sbb
add
mull
add
add
aaa
stc
pushf
lds
xor
outsb
add
dec
add
sub
ficompl
movlps
data16
inc
add
dec
xchg
test
mov
add
clc
jo
jmp
iret
pop
hlt
adc
xchg
mov
inc
mov
cmp
call
inc
add
add
popf
and
ret
add
les
lret
sarl
add
xchg
push
add
pop
outsl
dec
or
mov
jae
fwait
cmp
out
ret
repz
push
cmp
inc
jge
mov
add
jo
lock
push
cmc
dec
add
mov
xor
and
into
push
add
push
fistps
or
int3
std
or
fmuls
imull
out
imul
jne
add
or
and
xchg
push
sub
add
in
xchg
lret
pop
sbb
add
add
mov
lock
rcrb
jmp
add
add
push
out
in
sub
je
lret
mov
or
mov
jl
adc
mov
pop
pusha
add
pop
frstor
sub
add
movsl
mov
stos
sbb
add
add
add
inc
inc
dec
int
add
mov
add
sub
test
leave
movsb
insb
add
adc
fsts
push
imul
xchg
into
mov
cmpsb
stos
adc
inc
jecxz
add
jmp
jecxz
add
cwtl
cmp
add
pop
data16
lods
dec
add
add
dec
add
mov
insl
xchg
add
in
fprem1
lea
ror
sbb
insl
mov
scas
bound
divb
add
push
add
and
cmp
cmp
add
data16
mov
sbb
icebp
sub
adc
lea
mov
dec
pop
add
inc
xlat
mov
sti
dec
inc
add
add
mov
js
int
test
cmpsb
imul
adc
jg
jbe
mov
mov
cmp
loope
jle
inc
add
jb
fistpl
add
add
add
call
ret
stos
test
out
cmc
sub
pop
xor
or
enter
movsb
xchg
mov
mov
add
cltd
sbb
mov
lcall
mov
cli
test
cmc
mov
add
xchg
icebp
push
mov
add
xchg
fwait
loopne
sub
test
and
mov
testb
jnp
add
nop
jp
inc
add
outsb
add
sarl
insl
inc
lahf
sub
fnop
jnp
lret
sbbb
int
fsubrs
sub
add
adc
or
mov
add
and
add
or
push
add
add
mov
cmp
les
clc
mov
add
push
or
add
iret
fcompl
out
add
test
add
stc
cmp
test
dec
sbb
and
add
mov
xchg
and
xchg
outsl
jnp
out
and
add
sbb
movsb
sub
push
cmpl
add
mov
push
add
xlat
fstpl
rcrb
scas
cwtl
cmp
xchg
pop
ret
je
jns
pop
add
cwtl
add
add
mov
add
and
cmp
in
xor
push
add
add
add
pushf
xchg
imul
lret
enter
add
mov
aaa
rolb
js
mov
add
int
out
or
addb
or
sub
dec
add
bound
lcall
or
in
xchg
add
adc
add
add
adc
outsl
jne
add
dec
movsl
int3
repz
add
push
push
add
imul
pop
add
xor
sub
movsl
adc
adc
repz
pop
dec
add
lret
in
sarl
add
subb
mov
push
add
cmpsl
inc
add
pop
hlt
je
or
insl
in
sub
or
test
add
add
dec
cwtl
les
jmp
mov
add
sub
cmp
mov
sti
rep
cmpb
int
add
add
fiaddl
push
add
sub
jno
xchg
stos
jge
mov
jae
mov
fwait
add
or
imul
add
lret
andl
add
mov
mov
enter
add
jae
jo
sbb
mov
sub
adc
adc
enter
sub
xor
xlat
pushf
lods
movsb
insl
lock
add
lahf
xchg
lods
add
stos
ss
push
add
and
sub
nop
xor
sti
push
add
add
and
mov
cmc
add
add
fadd
cmp
lods
inc
add
xchg
icebp
arpl
mov
xor
add
xabort
or
add
add
movsb
mov
out
push
add
imul
arpl
je
mov
arpl
ret
mov
aad
add
xor
mov
add
lea
je
shr
fistpll
insl
xchg
pop
xor
add
ja
or
addb
xor
push
add
jnp
add
in
xchg
imul
add
lods
dec
aad
add
out
aas
add
add
orl
mov
shld
enter
repnz
incl
adc
sub
ror
add
xchg
add
loopne
add
jl
sub
add
mov
rcrl
into
sbb
scas
sbb
mov
repz
std
xor
out
sub
mov
aam
mov
add
push
dec
fcom
pushf
decl
add
pop
add
push
add
test
mov
mov
adc
xchg
cmpsl
jo
dec
push
popa
cmp
outsb
add
pushl
jnp
mov
fcoms
xor
fcmove
mov
jne
je
ret
add
jae
jb
stos
xor
jecxz
int3
leave
mov
push
add
jnp
pop
pop
repnz
add
lock
iret
sbb
add
pop
das
fs
out
movsb
cmpsb
decl
add
dec
repz
mov
ss
mov
xor
add
add
xchg
or
jp
jno
jg
adc
sti
cmp
push
sub
cli
addb
fcompl
add
cmp
shl
rolb
inc
insb
add
add
add
add
add
shlb
push
add
std
mov
iret
add
imul
add
popf
je
xchg
and
in
cmp
cmpsl
mov
movsl
jae
add
xor
sbb
lods
and
xor
mulb
add
lahf
loope
test
jbe
addb
adc
mov
cmp
inc
leave
cmpsb
mov
scas
cmp
mov
mov
xchg
sub
sub
rolb
inc
and
adc
je
add
outsb
add
das
cmc
push
push
add
mov
fcoml
scas
iret
pushf
add
add
add
push
add
dec
add
icebp
int3
mov
xchg
repnz
pop
cs
loopne
and
add
add
out
pop
test
add
aas
sub
addr16
push
add
or
xchg
and
dec
add
fwait
add
add
bound
jo
mov
out
mov
jg
add
push
add
jb
mov
or
pusha
add
xor
add
add
add
imull
cmc
pushf
pushl
icebp
cmp
xor
idivl
mov
int
popa
pop
xor
inc
add
mov
dec
add
out
add
loop
add
jmp
add
mov
je
clc
stc
sub
mov
add
add
add
add
push
adc
pop
add
in
xchg
rolb
adc
inc
testb
add
add
mov
add
add
dec
add
add
pop
add
aas
hlt
fiadds
inc
add
xchg
sub
mov
mov
das
jecxz
out
add
add
mov
mov
fadds
add
mov
iret
mov
inc
add
cmp
icebp
xchg
sub
jmp
add
add
das
add
push
add
push
add
jns
cmc
sbbl
mov
add
jle
fisttps
add
xchg
sub
fucompp
xchg
xchg
push
adc
push
add
xchg
pusha
add
lahf
shl
and
js
inc
add
and
push
add
loop
clc
pop
ljmp
lods
pushf
sub
rdpmc
cmp
add
dec
add
fidivrs
mov
add
cmp
pop
add
add
add
getsec
icebp
ja
int3
aad
add
pop
lret
mov
add
scas
and
daa
fidivl
push
call
xchg
cmp
lahf
repz
fdivs
mov
jge
push
add
fwait
add
jb
add
xchg
leave
mov
xor
jmp
lcall
sub
out
jno
leave
push
add
sub
mov
cmpsl
aad
test
fcmovnb
movsl
mov
js
movb
cmp
xchg
sti
sbb
add
int3
add
or
cmc
xlat
mov
mov
imul
les
xor
mov
movsl
xlat
inc
dec
enter
add
outsb
add
xor
inc
cmpsb
inc
outsb
add
sahf
mov
inc
add
mov
fwait
mov
testb
push
lods
jns
mov
sbb
add
push
add
add
add
sbb
cmpsl
xor
inc
sub
xchg
xor
jle
xor
add
and
in
mov
ja
dec
add
in
add
add
test
and
xchg
push
adc
mov
test
push
pop
add
ljmp
nop
cli
add
add
add
add
fildll
lcall
add
sub
lret
xor
jae
les
xor
sahf
cmp
mov
push
add
add
lock
xchg
shll
add
aas
aas
push
add
add
lahf
inc
add
call
push
add
add
or
sbb
add
mov
cli
mov
les
add
adc
push
add
cmp
dec
mov
add
sgdtl
jae
pushf
fnstcw
mov
lret
pusha
add
add
sbb
add
mov
ret
sbb
hlt
mov
sahf
test
pop
add
jge
subl
add
sub
sbb
daa
xor
mov
xchg
cmp
add
push
add
pop
pop
sbb
addl
ret
mov
daa
loop
add
add
ficoms
movd
aam
push
gs
roll
push
add
nop
adc
add
imul
fistps
daa
xchg
xchg
add
pop
std
and
mov
add
jle
imul
vpavgw
add
push
add
inc
add
add
in
lcall
add
aas
outsb
add
lret
add
add
inc
sub
xor
loop
add
add
mov
add
cmp
add
add
add
add
dec
stos
cmpb
dec
add
cmp
ja
add
les
add
pop
add
sub
jle
push
xor
jae
pop
cmp
sub
scas
pop
add
xchg
jns
cwtl
mov
add
mov
xor
jp
sbb
dec
test
sbb
pushf
sti
lods
imul
xlat
cmc
imul
cmpsb
dec
scas
outsb
add
jns
stc
adc
cmp
repz
les
adc
sbb
pop
add
add
pop
add
jno
adc
and
pop
add
or
scas
lcall
popf
or
cmpsb
popf
push
add
pop
add
push
add
and
cmp
daa
repnz
dec
add
add
add
add
add
ss
sbb
div
pop
add
mov
add
lahf
dec
push
cmp
pop
add
add
cmc
xor
sub
int
add
jecxz
jl
in
dec
add
mov
in
add
mov
mov
add
adc
leave
cld
lea
hlt
dec
pop
pop
push
hlt
pop
add
add
jecxz
sub
lds
aaa
dec
add
sub
inc
add
sbb
add
sbb
add
add
add
add
imul
add
lret
cmpl
add
add
mov
add
adc
sbb
dec
loope
pop
aas
aad
push
add
add
fsubrl
in
mov
mov
cld
and
scas
inc
xor
add
inc
add
pop
int
test
adc
xchg
addr16
xchg
push
add
pop
adc
shrb
add
icebp
aam
add
fldt
add
or
or
adc
mov
xor
add
add
pop
adc
rcrl
xor
in
cmpsl
jle
push
mov
add
ret
ja
dec
mov
mov
add
insb
add
inc
add
add
fwait
jg
ret
adc
clc
cmp
out
add
add
movsb
cmpsl
xor
add
ljmp
lahf
jp
xor
orl
add
add
iret
xchg
and
mov
mov
cmp
sbbb
jp
repnz
add
mov
xor
hlt
sub
dec
add
jp
mov
add
add
or
popf
cmp
out
in
inc
push
sbb
add
addb
adc
add
mov
sti
loope
pop
nop
mov
pop
std
xchg
fbld
aam
lock
or
hlt
scas
sbb
cmp
jge
jne
pop
add
pop
lds
add
test
pop
add
add
xchg
add
xchg
mov
push
add
fnstsw
add
xor
inc
test
mov
adc
rcll
mov
jg
add
add
loop
add
add
addr16
jl
mov
movsl
or
outsb
add
sbb
or
xchg
inc
xchg
dec
add
xor
rcrl
or
push
les
add
add
rsqrtps
sti
rorl
lods
sbb
loope
add
mov
lods
dec
add
add
sahf
add
les
clc
lods
sub
push
inc
add
push
add
bound
shll
or
add
test
add
mov
arpl
add
adc
stos
mov
sub
out
xor
cmpsb
rcrl
call
aad
test
adc
inc
repz
in
out
xchg
out
inc
lock
adc
iret
repz
add
sbb
cmpsb
call
add
add
stos
push
jp
fistl
scas
arpl
lret
pop
cli
arpl
decl
mov
mov
add
sbb
lahf
imul
add
ss
mov
cmp
sarb
in
cld
adc
jle
adc
cmp
xchg
pusha
add
cld
inc
add
std
mov
add
out
mov
out
and
fmull
shrb
or
cmpsb
ljmp
mov
out
add
sbb
lcall
add
testb
cltd
imul
inc
pop
add
jns
mov
cmp
adc
add
add
xchg
imul
into
pop
inc
dec
das
stos
jp
inc
add
dec
sbb
add
cmp
cmpsb
pop
add
add
add
sti
hlt
pushf
push
add
add
lret
xchg
mov
mov
mov
in
add
xor
cmp
scas
cs
jl
sbb
xlat
dec
add
add
cwtl
push
fbstp
bound
mov
imul
test
lock
pop
aaa
ret
push
push
and
xchg
cmovnp
add
add
xor
add
xchg
or
fdivl
mov
xchg
adc
arpl
js
das
xlat
mov
jo
js
data16
add
out
stos
iret
and
lret
fdivrs
add
mov
add
xchg
pop
sarl
js
test
or
mov
add
push
add
add
add
out
rorl
test
pusha
add
adcb
xorb
add
inc
add
js
mov
call
and
mov
jnp
adc
loop
push
add
mov
mov
xchg
js
insl
outsl
pop
add
add
push
add
add
or
lcall
dec
in
mov
inc
add
add
rclb
jg
ljmp
dec
add
add
push
add
mov
cld
ja
add
add
insl
mov
adc
ja
stos
fstl
add
clc
push
add
js
push
iret
jge
inc
add
add
jb
out
insb
add
std
mov
and
mov
fistps
inc
add
xlat
jnp
add
movsl
lahf
inc
add
add
adc
fiadds
mov
add
call
aaa
aaa
mov
mov
testb
in
nop
xchg
cmp
idiv
sahf
cld
add
or
lods
mov
add
sti
mov
xor
clc
and
push
jp
xor
mov
icebp
sub
add
cli
insb
add
adc
ja
aas
push
add
xchg
aaa
addl
mov
mov
add
sub
test
add
dec
add
das
inc
mov
mov
mov
dec
xchg
jge
and
in
mov
jp
push
add
add
add
push
mov
bound
adc
and
out
add
add
aam
mov
xchg
lods
cmp
mov
add
into
adc
hlt
rcrl
in
add
jecxz
add
push
add
add
dec
pop
add
dec
add
push
cwtl
xchg
icebp
push
push
add
inc
add
push
add
sub
imul
add
jecxz
add
out
imul
cmp
leave
mov
add
add
and
dec
int3
jge
pop
add
sub
arpl
shrl
add
add
jbe
sub
add
add
int
jmp
mov
add
add
dec
or
nop
pop
add
scas
jo
pop
cli
jecxz
inc
imulb
or
inc
decb
add
sbb
jnp
pop
orb
add
cwtl
xchg
das
cld
orb
mov
add
add
adc
in
mov
orl
mov
add
xor
xchg
inc
add
or
test
push
jle
testb
mov
add
mov
add
call
mov
xchg
xchg
mov
fs
in
xor
and
add
loopne
jl
loop
adc
mov
add
add
arpl
xchg
shll
add
fisubrl
add
mov
xchg
pop
add
sti
mov
pop
add
cmp
xchg
fpatan
gs
add
imul
add
add
sub
pop
add
bound
jnp
sub
add
jl
sbb
cltd
nop
add
add
std
push
add
mov
xchg
insl
enter
and
cmpsb
adc
adc
add
add
int3
pop
cmp
sbb
jg
pushf
test
add
std
stc
in
or
insb
add
loopne
sbb
aad
add
dec
pop
add
je
push
sub
fwait
out
clc
mov
int
ljmp
add
cmc
or
sbb
mov
sub
popa
push
mov
pop
xrelease
add
stc
push
add
add
mov
xchg
scas
lret
cmp
add
ja
sbb
loopne
mov
add
add
mov
cmp
sub
xchg
daa
fsts
addr16
pusha
add
jg
testl
push
jns
repz
add
in
jmp
push
mov
or
mov
jns
add
pop
add
adc
insb
add
into
jbe
data16
pop
add
sub
aad
inc
add
lea
add
mov
add
gs
sbb
inc
in
jne
add
inc
add
mov
data16
or
pop
orb
pop
add
sti
je
sbbb
xor
xor
outsl
cmp
and
out
xchg
add
cmp
imul
idivb
or
jecxz
add
inc
and
aad
cmc
dec
add
add
jmp
push
add
rdmsr
add
outsb
add
add
in
add
add
xor
sub
add
test
test
dec
add
or
shl
mov
pop
mov
xchg
inc
add
push
mov
add
sub
inc
add
cmpsl
cmpsb
add
andl
mov
fwait
xlat
adc
fcmovb
or
repz
jnp
add
incb
inc
add
rclb
cmp
popf
add
lods
stos
shr
imul
jp
lods
xor
mov
and
cli
mov
pop
add
mov
cmp
mov
add
cmpsl
sub
lock
stos
cmc
pop
test
mov
inc
add
jne
out
sub
lock
push
xchg
dec
add
add
pop
add
out
repnz
outsb
add
cmp
and
das
mov
add
push
add
or
mov
add
hlt
mov
sub
leave
stc
out
fisubrl
out
mov
add
dec
cmpl
add
jae
or
sub
stc
jbe
xor
xchg
dec
add
outsb
add
add
mov
out
dec
sarb
push
add
sub
mov
add
sahf
sahf
xchg
fnstcw
sub
add
add
adc
pop
push
add
movsl
adc
xlat
std
sbbl
inc
and
leave
loop
add
add
mov
add
xchg
inc
add
push
add
and
xchg
inc
mov
cmc
rolb
lods
mov
add
add
pop
int
mov
adc
aam
xor
add
ret
fstps
sbb
mov
aaa
xor
push
add
cltd
sbb
repnz
inc
add
add
dec
add
and
push
add
fwait
outsb
add
roll
pusha
add
push
add
jge
jp
loop
jb
nop
rcrl
sti
adc
mov
js
and
add
mov
lds
adc
addr16
sbb
daa
sti
pop
nop
add
mov
add
mov
dec
out
add
or
int
add
shr
jle
bound
ljmp
xchg
div
daa
lds
xchg
cmpb
add
sbb
dec
mov
mov
cli
cmp
add
mov
push
test
xchg
cmpsl
pusha
add
add
xchg
xor
dec
xchg
jne
outsl
xor
addr16
and
pop
add
adc
mov
add
xor
test
js
repz
sub
sarl
and
xchg
gs
pop
and
inc
add
and
push
add
inc
add
aam
add
pop
pop
add
add
loopne
cmp
mov
add
sbb
xor
jns
out
mov
pop
lea
jae
add
add
sub
inc
jecxz
mov
inc
fstpt
fst
cmp
stc
jne
mov
ficoms
jge
jp
out
fstl
fistpl
repnz
daa
add
cmp
inc
add
aad
jns
fdivs
stos
jae
add
add
mov
enter
lods
out
outsb
add
test
ljmp
add
add
add
add
add
push
mov
add
xor
sbb
sub
daa
imul
and
fbstp
mov
xchg
das
add
jle
or
ljmp
into
xor
jbe
fs
sub
roll
and
push
add
int3
xorl
xchg
cmp
stos
cltd
pushf
mov
inc
mov
mov
add
dec
add
dec
add
and
add
xor
add
imul
in
or
popa
sbb
add
cmp
push
fisttpl
add
add
add
add
imul
xor
das
mov
add
lock
mov
adc
outsl
movsb
loop
call
pop
add
insb
add
xor
fmull
sub
mov
add
sahf
mov
lcall
add
mov
add
sbb
stos
jo
in
cmpsb
push
add
data16
add
sbb
fldenv
into
out
mov
jb
sti
cmp
add
sub
int3
movsl
inc
add
mov
enter
or
stc
into
movsb
jb
lea
add
xor
add
adc
add
and
pusha
add
out
out
je
add
mov
dec
add
lock
xor
cmp
cmpsl
jnp
or
adc
add
sub
bound
js
and
or
inc
add
or
fmuls
add
jmp
daa
push
mov
pop
jp
lret
push
add
cmpsb
adc
js
fnsave
mov
stos
call
or
add
add
xor
loope
insb
add
jg
or
cmpsl
xor
lea
or
inc
add
lcall
flds
scas
adc
inc
add
mov
add
and
inc
xor
mov
sbb
je
xor
inc
hlt
mov
add
jp
out
xchg
xor
ss
movsl
scas
popa
hlt
adcl
cmpl
push
add
jp
clc
mov
dec
add
xchg
mov
add
add
mov
mov
arpl
sub
add
add
xlat
cltd
add
mov
mov
fwait
ja
sarb
mov
and
xor
sbb
add
push
add
ficoml
xor
les
test
sub
mov
gs
fidivs
cld
xchg
mov
mov
add
sub
cmpsl
sahf
add
xor
ljmp
and
out
lcall
mov
std
push
add
cmp
add
jecxz
ficoml
add
push
mov
add
lcall
add
add
inc
or
inc
fs
add
icebp
or
add
add
adc
cmpsb
lret
adc
repnz
sbb
mov
add
gs
sti
jbe
orb
movsb
std
icebp
add
iret
pop
add
add
jecxz
std
inc
das
xor
lcall
into
roll
insl
mov
add
add
inc
add
lahf
mov
test
les
add
cltd
dec
add
push
add
xlat
fidivl
mov
add
sbb
nop
push
icebp
subps
jno
mov
xchg
test
cmp
mov
xchg
push
pop
add
imul
jecxz
mov
mov
je
inc
add
out
push
xor
inc
cmc
repz
mov
jb
adc
mov
rol
std
xchg
add
es
insb
add
mov
sbb
sbb
int
adc
add
outsb
add
mov
add
icebp
or
sub
mov
add
cli
pusha
add
js
jmp
mov
add
test
jbe
jo
cmp
cmp
mov
cld
movsb
call
add
pop
add
add
add
in
call
add
ds
jecxz
mov
add
jbe
das
cmpsl
aam
sub
fisttps
or
int
mov
push
add
add
inc
add
push
add
push
add
add
push
push
cmp
bound
pop
int
xor
hlt
pop
add
mov
sarb
add
add
aad
insl
insl
jno
loopne
inc
add
adc
inc
add
add
mov
test
dec
cwtl
lds
add
outsl
insl
aaa
lods
jge
push
xchg
rclb
adc
cmp
iret
jb
loopne
add
aaa
sbb
add
xor
add
jne
pop
add
sbb
inc
jle
xchg
xor
loop
enter
add
pusha
add
add
xchg
cmp
push
add
jecxz
mov
add
testb
push
scas
test
add
hlt
cmc
je
sbb
push
mov
cmp
adc
int3
shrl
in
or
cmp
add
xlat
mov
add
add
pushf
inc
add
add
shlb
testb
daa
movsl
jae
sbb
iret
pop
add
dec
add
xchg
dec
ret
xor
stos
outsb
add
and
es
inc
or
push
add
add
nop
call
sbb
jno
cmpsl
xchg
mov
pop
xor
clc
mov
xlat
sahf
outsb
add
mov
cld
sbb
push
and
sub
stos
cmpl
mov
add
or
dec
add
fwait
daa
add
pop
add
iret
idivl
adc
mov
add
mov
repnz
adc
call
mov
loop
aaa
cmp
js
and
jbe
mov
out
cli
mov
adc
mov
call
add
aam
add
test
lods
mov
aas
xchg
dec
addr16
add
add
imul
adc
out
aas
daa
push
add
mov
add
add
pop
sub
imul
and
sbb
in
push
push
movsb
sarb
jno
jno
jle
loop
add
cmp
adc
cltd
cmp
sbb
and
inc
add
out
jle
sub
data16
push
add
test
mov
sub
add
gs
bound
sbb
movl
jae
dec
add
add
test
addr16
add
jg
add
or
pand
jo
xchg
jnp
and
add
shlb
in
stos
icebp
insb
add
fstpt
mov
dec
add
fisttps
push
xchg
bound
dec
mov
ficomps
add
test
add
mov
loopne
pop
rclb
or
jns
inc
xchg
dec
scas
les
cmc
jle
into
call
fwait
mov
or
dec
add
mov
and
sbb
inc
add
add
inc
add
add
push
dec
add
add
inc
icebp
mov
add
push
add
or
xchg
popa
add
add
jmp
adc
mov
mov
add
mov
inc
add
mov
popf
sahf
cvtps2pi
inc
add
repz
push
add
add
lock
shr
mov
add
ret
jecxz
stos
in
xlat
insl
mov
xor
out
testl
lods
add
dec
add
leave
pop
into
outsl
fmul
adc
lds
add
jns
xchg
inc
add
scas
sbb
scas
xchg
mov
add
xacquire
and
in
call
aam
fmul
movsl
cmpsl
insl
jnp
cwtl
sub
scas
push
add
fsubrp
dec
fnstsw
test
pop
arpl
or
in
xchg
inc
add
ret
sbb
and
xchg
mov
push
shlb
adc
pop
in
and
sub
sbb
pop
jae
lret
cld
decl
push
add
jne
sub
imul
fnstcw
mov
push
lret
jmp
jp
sti
mov
lcall
inc
in
ret
jmp
bound
sub
fnstcw
mov
add
xor
std
scas
cmp
lahf
jecxz
add
mov
ret
add
lahf
out
pop
add
add
add
dec
call
jne
cmp
add
add
xor
dec
fwait
pop
jge
add
scas
pushl
mov
outsb
add
push
std
cmpsl
movsl
sbb
in
mov
and
cmp
add
add
jno
pop
add
sub
mov
xchg
outsb
add
mov
mov
pop
aam
jmp
lret
adc
add
add
lret
add
jne
cmc
adc
mov
add
mov
pop
int3
pop
add
adc
jb
push
add
data16
push
add
loope
shlb
outsl
mov
lods
fwait
lret
add
pusha
add
rclb
dec
cmp
test
ljmp
mov
and
outsl
popf
data16
out
or
add
mov
adc
inc
fildll
pop
add
cmp
loop
mov
add
js
xchg
test
add
cmp
je
sbb
sahf
pop
sbb
daa
fsubrs
fucomp
cwtl
push
add
and
pusha
add
push
add
loop
push
xchg
cmc
dec
add
add
fisttps
stos
mov
add
adc
data16
test
add
push
imul
popa
jge
test
sub
mov
jp
or
mov
jb
imul
push
add
add
lahf
mov
mov
jno
push
add
sub
cmpl
call
ds
inc
add
add
add
dec
dec
vunpckhps
ret
add
ficoms
add
push
out
loope
add
lahf
notl
sbb
add
mov
call
cltd
les
add
jg
add
add
add
aaa
pop
add
add
add
imul
stos
mov
lret
int3
pop
add
jne
lds
inc
add
sub
fidivs
mov
inc
add
sub
adc
icebp
ja
jl
rorb
arpl
add
sub
mov
cli
xor
lea
dec
add
int
pop
mov
loop
scas
mov
dec
jecxz
push
add
fld1
add
add
jb
inc
adcl
cmp
push
enter
inc
pusha
add
jle
lds
adc
rcl
sub
mov
xlat
pop
cmp
jb
add
in
jge
repz
xchg
jne
adcb
aaa
outsl
xor
mov
push
add
int
outsl
cmpsl
jbe
out
cmp
xchg
jo
push
add
xor
sbb
jb
shrb
and
sbb
dec
add
add
fcomps
test
and
push
add
jns
sarl
add
jae
dec
add
outsl
and
ret
mov
dec
add
pop
aam
xchg
inc
pop
and
in
pop
push
clc
xor
aaa
fstpt
dec
xor
movsl
mov
add
mov
test
add
adc
decb
mov
aaa
or
les
dec
nop
out
or
and
jb
andb
add
jge
push
jmp
inc
scas
xor
test
scas
out
mov
addr16
or
and
sub
cmp
mov
add
xor
add
lods
stos
and
cmpsl
ja
outsl
mov
cmp
subb
cltd
cmp
gs
sbb
pop
add
adc
bound
mov
stc
ja
add
int3
adc
add
repz
mov
mov
add
sti
pop
lahf
loop
add
add
daa
add
stos
in
dec
pop
sub
and
mov
loopne
repz
jl
mov
and
sbb
inc
int
add
pushf
xor
fimull
add
mov
scas
jo
sbb
xor
xchg
aam
jecxz
out
xor
mov
jp
stos
mov
add
xchg
shll
stc
sub
add
mov
lahf
xor
loope
jne
dec
aas
shrl
add
or
push
adc
lods
inc
add
jp
push
add
add
shll
sub
add
or
dec
add
pop
mov
sbb
lret
mov
popl
test
push
mov
dec
inc
add
pop
xchg
xlat
inc
outsb
add
add
push
add
lock
mov
add
xchg
jbe
xor
test
add
sbb
adc
lret
in
add
add
pop
add
cs
fmull
in
dec
sbb
test
out
xor
lret
xor
divl
dec
add
adc
stos
icebp
cmpsl
jge
mov
mov
mov
and
ficoms
dec
add
jl
imul
jbe
out
ror
push
inc
cli
nop
addr16
jns
loop
or
jg
push
add
xchg
int3
out
int3
cmp
or
add
jmp
mov
add
mov
loope
add
adc
jne
pop
mov
pop
add
push
add
pop
add
add
fwait
and
pop
sub
pop
add
mov
add
enter
sub
add
pop
mov
das
aam
push
add
int3
pop
dec
loope
stos
lods
or
pop
clc
testl
push
add
xor
les
ret
add
test
add
loopne
add
sarl
jno
add
mov
popa
and
jbe
mov
jne
mov
scas
sub
cmp
adc
add
stos
jl
xor
xchg
out
adc
loop
rcl
cmp
add
add
rcr
push
add
gs
add
je
jp
inc
add
pop
aaa
sahf
enter
add
add
add
cmpsb
add
dec
add
pop
xlat
push
add
inc
add
push
add
pop
rclb
icebp
inc
stos
xchg
inc
lods
mov
adc
xchg
xor
fimull
add
add
adc
or
add
push
add
popf
fistps
roll
sbb
pop
sbb
add
sbb
cmp
xchg
outsl
ljmp
hlt
inc
je
mov
add
movsb
lods
inc
in
jp
jge
add
xor
push
add
xchg
test
add
clc
cmp
cmc
into
outsl
xor
add
in
push
add
out
arpl
andb
cltd
das
inc
dec
xorl
add
xor
sahf
js
push
add
add
dec
add
mov
adc
loopne
mov
sub
cmp
add
arpl
fisttpll
mov
rdpmc
jne
negb
add
add
add
sbb
in
pop
jle
idivl
shlb
rcll
jno
add
test
add
or
pop
shl
hlt
into
scas
adc
sub
or
push
add
sahf
sbb
daa
test
add
shl
jae
enter
add
movsl
mov
stc
cmp
and
pop
add
add
pop
xor
out
pop
icebp
mov
add
andl
add
mov
add
add
sub
dec
add
shl
imul
add
or
pop
jg
cmp
add
cmp
adc
stos
dec
add
daa
jnp
xor
movsl
aam
cmp
loope
pop
dec
and
push
add
add
cmp
mov
pop
mov
mov
add
mov
data16
stos
add
add
add
mov
add
fadds
push
les
add
movsb
ss
lret
in
xorl
add
inc
add
mov
add
inc
ljmp
add
addr16
js
test
rorb
shrl
push
add
bound
cmp
mov
fstpt
adcb
add
jnp
add
bound
mov
adc
push
add
lock
pop
dec
inc
or
dec
add
fdivp
xor
and
pusha
add
cmpsl
and
mov
add
iret
cmp
int
fwait
test
add
insb
add
lock
ds
jae
out
mov
xchg
repz
mov
les
lahf
jnp
add
add
dec
add
iret
mov
pushf
mov
das
jae
insl
lcall
mov
mov
push
ljmp
pop
stos
jnp
push
add
add
pusha
add
pop
add
jae
push
ljmp
and
add
or
jge
dec
popf
push
add
add
add
lds
add
or
mov
bound
push
add
fwait
test
push
add
add
imul
enter
faddp
sbb
mov
jmp
out
pop
adc
adc
dec
mov
adc
add
or
jl
gs
dec
add
sbb
fs
lea
mov
add
add
add
lret
ret
in
add
adc
mov
pop
add
add
add
int
in
xchg
pop
add
lods
mov
or
hlt
pop
sub
icebp
cwtl
lea
or
sahf
xchg
mov
sub
fstl
add
inc
add
movsl
jne
sbb
mov
data16
pushf
shl
fwait
loop
add
xchg
jbe
out
imul
push
add
mov
mov
mov
sub
adc
dec
iret
lea
jno
add
add
test
add
pop
xchg
ljmp
add
aas
mov
add
push
add
add
iret
lods
xorl
stos
pop
add
test
scas
cmp
sbb
push
add
xlat
mov
mov
decb
add
dec
add
hlt
mov
add
dec
add
add
jno
ljmp
push
popf
xchg
inc
add
rorl
add
fcomi
dec
add
inc
icebp
lea
add
adc
jp
xor
dec
add
adc
mov
pop
inc
sub
in
test
shl
cwtl
mov
std
or
xor
or
jne
lock
add
cmp
in
push
add
push
add
inc
add
add
sub
add
lahf
jecxz
add
out
dec
add
add
add
cli
pushf
jp
push
jg
xchg
imul
aas
loop
sbb
addr16
inc
sub
into
xchg
mov
add
popa
add
sub
mov
daa
pusha
add
mov
mov
add
pop
mov
arpl
outsb
add
add
test
arpl
add
aad
fldcw
xchg
add
mov
bound
add
daa
hlt
imul
or
in
xor
jae
gs
add
add
inc
add
and
in
fdivrl
sti
ss
cmc
jmp
adc
add
inc
add
add
push
add
fnsave
pop
add
xor
loope
insb
add
std
mov
ror
xor
pop
mov
push
loopne
add
sarb
xchg
popl
xchg
fidivs
pop
add
sbb
loopne
push
add
outsl
enter
cmp
outsb
add
sub
jae
add
stos
add
add
add
lea
add
or
pop
mov
jns
add
or
xlat
stc
lods
xchg
mov
mov
lods
test
hlt
add
lods
sbb
jnp
add
inc
sub
jecxz
dec
pop
sub
lods
pop
add
sbb
sbb
call
add
add
or
inc
add
add
add
add
bound
add
mov
test
add
notl
inc
add
sbbl
sbb
xor
fbstp
add
xchg
add
aad
add
add
pop
mov
shlb
add
sbb
out
sarl
and
add
add
xchg
insl
sbb
hlt
icebp
and
add
shrb
mov
cld
jns
je
nop
xchg
xchg
lods
xchg
jmp
add
into
adc
jmp
iret
data16
mov
bound
mov
add
add
push
add
add
add
les
bound
test
gs
lds
xor
add
cmp
repnz
lea
sti
mov
jnp
and
aad
pop
add
xor
adc
mov
add
and
les
insl
mov
mov
add
bound
std
push
cmp
push
push
add
cli
leave
mov
test
add
aaa
and
pusha
add
or
jno
add
dec
add
xor
add
inc
imul
inc
add
pop
add
fnstcw
add
add
int3
cld
enter
add
cmp
push
add
xor
fstl
pop
add
add
sbb
push
add
inc
mov
movsb
int3
add
sbb
lods
adc
add
mov
jne
scas
daa
push
add
je
sub
add
lahf
mov
sbb
sahf
ret
jno
push
or
popf
jno
js
pushf
mov
loopne
mov
ret
sbb
test
aad
subl
push
add
add
add
ret
imul
add
pop
add
add
xor
out
lret
add
add
add
mov
ret
in
pop
scas
mov
add
add
dec
ds
xchg
clc
inc
lods
ljmp
pop
cmpsl
fldcw
mov
lods
int3
add
push
fdivs
sarb
push
push
add
xor
arpl
pusha
add
add
xchg
arpl
add
pop
add
mulps
add
pushl
add
enter
adc
xchg
jl
scas
push
add
add
add
js
add
add
outsb
add
xchg
mov
pop
add
fimuls
jmp
aad
add
rcrb
jecxz
jp
add
pop
mov
sub
sub
inc
pop
hlt
add
bound
add
or
and
inc
push
add
cmovb
hlt
xchg
in
push
add
fdivrs
test
insl
jnp
pop
add
add
xor
jb
clc
jno
add
mov
ljmp
pop
lods
cmpsl
mov
add
data16
add
add
pop
add
adc
clc
gs
lock
add
add
mov
xchg
mov
xchg
cmpsb
loop
xor
test
pop
add
rcrl
add
sub
sub
shl
sub
add
ja
pop
aad
add
cpuid
jne
ficomps
mov
add
adc
enter
add
pop
jmp
shrl
jg
imul
int3
test
add
fbld
mov
add
mov
sub
mov
add
mov
cmp
xchg
adc
movsb
ss
adc
aad
add
adc
cmp
movsl
mov
cltd
sbb
xor
aam
add
push
sub
imul
inc
add
popf
mov
adc
push
and
mov
add
cwtl
ret
jl
cmp
or
in
add
pop
add
loope
add
pop
jne
add
fstp
or
in
mov
out
sub
add
add
fisttpll
xchg
jge
lea
add
into
lret
xchg
sub
popf
and
fildl
add
into
add
test
jae
lret
fldenv
add
xor
cmpsb
jo
inc
push
decb
pop
add
in
rcr
pop
add
add
add
lcall
movsb
jne
std
outsl
out
add
or
je
push
add
add
jg
cltd
xor
stos
test
pop
mov
push
add
ljmp
pop
ja
pop
add
insb
add
push
mov
add
cmp
add
cmp
mov
jge
add
add
fcompl
dec
add
xor
dec
add
push
add
negb
int
insl
stos
xor
int3
mov
add
jnp
add
mov
add
add
add
pop
push
add
fnsave
pusha
add
add
mov
add
mov
add
jecxz
loopne
inc
add
add
sbb
out
add
ds
add
mulb
lea
leave
push
add
notl
shll
push
xchg
iret
sub
shl
repz
mov
xor
out
add
inc
add
pop
jne
dec
imul
loopne
jp
push
mov
subl
xchg
arpl
pop
dec
jo
xor
cmpsl
lock
add
bndstx
adc
xchg
mov
xor
jae
cli
xchg
fnsave
mov
aad
cs
mov
add
cmp
add
add
fldl
sbb
add
repz
push
add
mov
scas
cmp
sub
gs
and
xchg
push
add
lock
pop
add
add
insl
adc
mov
lea
sub
add
inc
xchg
les
adc
mov
rcrl
add
ljmp
add
add
add
mov
lret
aad
or
add
sbb
push
push
int3
xor
cmp
int
movsl
add
sub
push
dec
add
sti
nop
ja
add
add
mov
jb
in
lods
sub
stos
xor
rcrl
ret
in
add
pop
hlt
pop
call
mov
xor
dec
add
add
add
pusha
add
std
cmp
xor
add
shll
insl
cmp
into
inc
xlat
lods
ds
pop
add
sub
add
add
and
add
cli
xor
push
add
cmpsb
fwait
jb
addr16
sbb
push
pop
outsl
cmp
push
add
nop
arpl
dec
fnsave
mov
or
popa
adc
call
pop
add
fwait
jl
lret
add
add
sbb
xlat
and
shr
int
and
add
cmp
js
out
ds
daa
das
inc
test
adc
arpl
add
push
xor
add
sti
cmp
std
xchg
adc
sarl
mov
fwait
and
cmp
pop
add
push
add
jp
pop
add
or
int
punpcklbw
or
add
add
imul
adc
cmp
add
test
dec
dec
dec
push
add
jecxz
mov
add
add
lcall
add
push
add
hlt
bound
movsl
out
call
add
fcmovu
push
add
xor
push
add
mov
or
jmp
cld
adc
and
int3
das
xchg
mov
stos
dec
dec
rorl
mov
adc
mov
dec
add
fcmovne
jno
mov
adc
inc
mov
inc
ret
add
pop
decl
add
rcr
cmpsb
pop
push
add
les
scas
daa
jne
add
add
add
daa
mov
or
mov
shrb
fnstenv
add
add
add
loopne
inc
add
push
add
push
add
add
mov
ret
shl
xlat
scas
inc
add
roll
add
jle
scas
inc
sub
add
push
cmp
add
add
mov
mov
dec
add
aaa
test
push
add
dec
daa
xor
cmp
add
add
int3
jmp
sub
sub
or
inc
add
aaa
pushl
mov
aad
jns
mov
in
mov
mov
add
cmp
cmp
add
pop
jecxz
push
inc
add
or
loop
mov
add
mov
fwait
popl
test
jg
lods
out
lds
movsl
lods
je
mov
lods
sub
sti
push
sbb
fcmovnb
incl
pop
add
aam
pop
incb
add
leave
xchg
or
or
jl
jl
sbb
pop
push
add
dec
add
add
movsb
inc
inc
add
add
into
cmp
sub
sahf
push
add
push
and
cmp
add
and
sbb
cwtl
lods
xor
adc
mov
sbb
mov
andb
push
add
push
add
fidivrl
pop
dec
add
rcrb
xorl
lea
xor
cwtl
pop
add
jl
jp
sub
mov
add
pop
sub
movsb
xchg
mov
cmpsb
jnp
stos
cmpsl
cmpsl
imul
scas
mov
add
sbb
cmp
cmp
arpl
adc
push
add
push
into
rcrb
add
mov
icebp
stos
ret
frndint
out
dec
add
add
xor
dec
add
test
add
pusha
add
sti
and
pop
add
pop
add
adc
lcall
and
into
dec
mov
xor
mov
add
jg
jae
sarl
int
cmp
xchg
jno
xchg
mov
and
mul
lods
mov
pushf
andb
add
xor
sub
in
dec
add
add
add
lea
add
and
nop
fistpll
add
stos
xchg
neg
test
sub
jmp
push
xchg
clc
push
add
push
fidivs
std
push
add
xchg
imul
add
dec
add
jno
add
adc
sbb
movsl
xor
mov
dec
add
add
push
add
rolb
stc
and
add
and
push
mov
shll
add
dec
scas
dec
stc
js
add
inc
add
ret
stc
sub
add
jbe
insl
ja
jmp
add
mov
outsb
add
outsl
adc
add
xor
aas
adc
enter
pop
add
pusha
add
fistl
mov
stc
movsl
es
pop
add
add
add
add
or
push
mov
add
mov
lret
add
dec
add
cmp
add
aas
dec
sarl
fmuls
add
or
push
add
and
and
sbb
mov
daa
call
scas
lods
aaa
dec
xor
pop
add
out
mov
cmp
xchg
daa
cmpsl
dec
add
movsb
push
or
xchg
int3
mov
add
add
in
add
hlt
push
add
add
mov
push
add
xlat
mov
in
scas
xchg
mov
sbb
aad
movnti
mov
iret
insl
add
imul
add
cmp
or
dec
add
mov
add
mov
je
std
lds
inc
add
add
clc
xor
fxtract
add
and
add
sarl
imul
pop
mov
add
or
add
stos
ret
and
cmp
cmp
mov
js
push
cmpsb
dec
add
add
sbb
mov
movsl
je
mov
pop
add
pop
outsb
add
out
or
daa
mov
sub
iret
jno
xor
push
add
add
scas
add
rcrb
add
sahf
mov
imul
das
hlt
mov
call
sbb
loope
pop
xor
and
add
cmpsb
mov
add
data16
push
int3
lret
pop
add
clc
mov
push
movsb
aam
add
ss
stc
jne
add
add
and
and
test
add
sub
adc
add
loop
shrl
jge
test
cs
call
addr16
pop
add
lock
add
ja
das
dec
mov
int3
ret
add
negl
add
lahf
add
mov
ret
imul
push
add
xchg
rol
movsl
cmpsl
imul
jno
push
arpl
add
pop
lahf
inc
add
mov
sti
add
ret
pop
adc
jbe
aam
call
sti
and
jecxz
mov
mov
aas
mov
xlat
inc
push
in
arpl
sub
movsl
push
push
add
add
sti
int
inc
add
leave
add
cmp
fnstsw
aam
mov
xchg
enter
ss
loop
add
std
dec
stos
iret
daa
jnp
dec
popf
inc
imul
mov
xlat
ficompl
add
aad
not
add
data16
add
add
lods
xchg
pop
push
add
add
xchg
pop
push
add
shll
and
add
sbb
add
hlt
xchg
dec
add
or
aad
inc
jge
pop
adc
mov
out
lock
mov
adc
movsb
add
sub
push
add
push
jmp
popa
lcall
aad
inc
add
fstpt
add
add
insl
xor
pop
rcrl
pushf
xor
add
les
sbb
inc
pop
in
xlat
or
jno
push
add
fs
add
test
sub
cs
sub
push
add
cltd
shlb
aam
sbb
xor
pop
add
xor
fucom
add
pop
push
add
dec
sti
xchg
dec
add
imul
bound
subb
push
mov
cmp
add
pop
repz
jl
pop
scas
leave
xchg
in
and
xchg
jbe
mov
mov
dec
test
std
das
dec
add
sub
negb
add
add
add
sbb
movsb
push
add
add
cmp
add
mov
xor
in
out
dec
add
ret
pinsrw
add
in
sbb
mov
add
dec
add
pop
add
pushf
stos
add
pop
xchg
sub
inc
inc
add
jno
add
push
add
sbb
mov
shll
mov
add
mov
sbb
js
mov
adc
and
or
rcr
xor
sbb
add
out
add
sti
in
scas
add
cmpsl
mov
enter
and
je
pop
mov
mov
add
add
add
push
jnp
add
add
cwtl
clc
xchg
sbb
push
call
out
dec
dec
shrl
mov
pop
or
push
add
push
add
cmp
out
movsl
pushf
or
push
lret
add
jae
add
push
fisubs
jb
mov
adc
jo
or
repz
add
loop
ljmp
test
add
movsb
sahf
stos
xor
aam
imul
arpl
inc
add
fcomps
push
add
enter
icebp
xchg
inc
add
jle
movsb
leave
shlb
nop
mov
xor
mov
add
pop
adc
add
mov
xchg
rorl
xor
pop
mov
add
add
jae
xor
sbbl
hlt
xchg
cmp
fimuls
mov
pop
sbb
movsb
add
add
add
stc
dec
add
add
add
int
add
xchg
and
adc
fadds
push
add
add
lahf
mov
cmp
je
mov
add
out
je
enter
add
popf
shrb
add
mov
inc
movsb
and
rclb
lcall
xchg
lahf
xchg
lds
add
in
adc
sub
aad
add
push
sub
xchg
push
add
pop
cmc
sub
stos
add
pop
add
push
add
pop
add
insb
add
icebp
bound
add
add
cmp
inc
add
aaa
pop
add
sub
sahf
fldenv
add
hlt
enter
pushf
sahf
add
xor
fs
loopne
inc
add
lods
or
or
add
dec
add
stos
stos
add
inc
add
pop
and
aaa
aam
jecxz
stos
ficompl
pop
cmpsb
add
add
clc
sbb
pop
inc
add
add
sbb
push
add
mov
xchg
jecxz
lds
loop
icebp
test
mov
pop
add
and
test
push
add
xchg
mov
add
xchg
xchg
rclb
add
fbstp
add
add
outsb
add
cmp
cltd
xor
sub
and
sti
ret
or
cmp
rcrl
or
pop
mov
adc
mov
add
adc
xchg
in
inc
orb
shrb
sarb
icebp
pop
inc
or
or
sbb
data16
inc
pop
pop
cmc
rcrl
test
pop
adc
cmp
xchg
jge
push
fsubr
mov
mov
ja
sub
add
and
and
movsb
cmp
data16
sbb
cmpsl
addr16
mov
add
stc
pop
add
nop
js
test
add
push
loop
enter
push
add
inc
add
fimuls
pusha
add
outsl
push
add
xchg
loope
add
add
xor
add
jg
add
push
add
mov
add
pop
add
mov
add
imul
dec
and
rol
iret
shll
mov
push
call
xchg
loopne
test
lahf
icebp
dec
add
mov
push
add
out
fcmovne
sahf
mov
or
xchg
lret
jns
dec
push
add
in
daa
hlt
xor
inc
mov
xlat
jne
jae
jne
add
add
jge
divb
add
add
push
add
int
in
fidivs
dec
add
pop
mov
sti
mov
lahf
popa
cmp
add
sahf
xor
addl
push
inc
add
add
jmp
or
mov
add
mov
jnp
popf
mov
inc
add
add
add
add
loope
add
mov
cld
sarl
adc
aaa
dec
add
or
add
dec
mov
pop
add
imul
add
mov
mov
jnp
add
loopne
add
push
add
cmp
sti
xlat
mov
dec
add
xchg
xchg
daa
mov
and
add
in
sti
or
mov
mov
xor
xor
test
stos
sarl
pop
xchg
cli
adc
add
cmp
mov
add
fmul
dec
add
jb
sbb
inc
cmp
jno
stc
push
lahf
jne
push
add
popf
repnz
add
enter
aas
hlt
jle
and
pop
scas
mov
add
add
popa
js
xor
mov
jge
add
out
cwtl
and
mov
mov
jmp
add
cmpsb
pop
add
and
add
and
test
add
xor
mov
xchg
sahf
inc
ja
mov
add
cmp
and
jg
add
and
ret
add
push
lret
add
int3
int
lahf
shll
lahf
jns
add
mov
imul
in
nop
arpl
jo
adc
gs
inc
add
fisubrl
add
loopne
outsb
add
test
bnd
mov
add
and
icebp
or
loope
idivl
add
inc
out
add
das
ja
dec
int
test
imul
rorb
xchg
pop
repz
push
xor
inc
add
int
mov
jmp
mov
jo
or
inc
lock
fcomps
add
add
pop
add
cmc
pop
add
add
add
test
test
ja
inc
push
add
cmp
add
fidivs
and
push
add
push
add
add
pop
jmp
ds
test
int
xor
fidivl
fmull
add
in
cmp
pop
fimull
mov
add
in
mov
add
or
add
jns
test
outsl
pop
add
sbb
dec
and
cmp
dec
add
pop
add
add
lret
mov
and
rcrb
inc
add
push
add
jecxz
add
and
xor
enter
out
xchg
fisubrs
rolb
add
or
stos
insb
add
dec
add
xlat
adc
xchg
addr16
repnz
add
add
nop
test
add
int
out
push
mov
ja
inc
add
add
inc
add
test
insl
xor
or
test
cld
fldt
movsl
dec
add
add
add
add
and
cli
xor
xchg
ret
leave
mov
cmp
push
add
xchg
lahf
sub
mov
add
rclb
xor
out
jae
add
or
test
add
or
movsb
xchg
xchg
pushf
imul
mov
test
dec
popl
mov
cmp
inc
cwtl
and
pop
sbb
mov
add
scas
stos
cmpsl
sbb
lds
inc
fstl
add
jae
ret
aaa
mov
pop
dec
sub
add
jb
in
jge
add
lahf
ds
and
xchg
call
push
inc
dec
add
add
orl
add
sahf
add
cmp
dec
jo
jb
pop
and
pop
add
add
daa
push
add
ret
mov
add
or
lods
sub
loop
dec
and
in
test
add
stos
cwtl
adc
jecxz
and
icebp
fildll
and
sub
add
shlb
sub
hlt
out
lock
dec
add
mov
add
add
imul
std
adc
test
mov
jns
cmc
jmp
and
sahf
loope
mov
mov
inc
jo
xchg
dec
dec
fildll
dec
add
add
pop
orb
testb
add
push
add
or
xor
push
add
add
jg
push
add
fidivl
sbb
fdivs
add
dec
add
cltd
cld
pop
mov
lahf
xor
fldenv
or
add
pop
dec
add
std
rolb
or
andl
add
insl
or
stc
adc
xchg
fistps
mov
enter
mov
sahf
loopne
add
add
aam
jg
and
jp
les
add
call
add
test
jmp
add
adc
push
add
and
clc
lock
loopne
adc
decl
shl
or
mov
add
inc
add
mov
pop
outsb
add
sbb
sub
or
sbb
cmp
cmp
inc
add
add
aam
cmp
lock
lock
mov
pop
std
popa
test
mov
ss
pop
add
adc
pop
add
stos
push
add
pop
add
add
icebp
mov
stos
in
and
aaa
bound
stc
adc
cmp
add
jg
add
imul
jns
or
add
add
mov
imul
rolb
add
adc
and
add
loop
inc
or
dec
fistpll
je
bound
jno
add
mov
sub
movsl
sbb
fsubr
icebp
cltd
ret
divb
mov
cmpsl
jne
sub
add
and
push
add
sub
lods
adc
add
mov
in
add
add
xor
mov
dec
pop
outsb
add
add
out
in
add
mov
and
fnstenv
cmpsb
mov
lds
cmp
xor
aam
movsb
push
add
jecxz
fwait
mov
sbbl
add
or
test
sub
enter
orb
xor
out
hlt
jb
je
sahf
lahf
mov
jb
pop
add
jge
imul
jmp
fiaddl
dec
aad
add
adc
jno
mulb
adc
add
push
mov
inc
xchg
mov
add
pop
xchg
mov
jmp
cmpsl
ret
mov
add
in
fs
jno
pop
add
rcrb
xor
clc
icebp
pop
jle
cmp
add
test
add
dec
add
add
pop
fisttpl
add
add
add
dec
shr
jle
jb
outsl
shll
add
lahf
push
subb
mov
movl
add
aam
fdivr
adc
ljmp
stos
icebp
xlat
adc
cwtl
mov
push
push
pop
add
cmpsl
stc
loop
add
xchg
lret
out
aaa
ret
imul
fwait
movsb
fnstcw
add
sub
add
add
dec
add
inc
fmul
add
fdivr
sbb
inc
lea
clc
nop
lods
imul
push
je
test
pusha
add
stos
adc
lock
cmpsl
inc
inc
add
aam
aam
cmp
xchg
aaa
inc
cmp
mov
scas
adcl
add
int
inc
or
xchg
addr16
add
out
xor
int3
jo
inc
insb
add
mov
sub
mulb
inc
add
incl
out
adc
mov
inc
add
fst
or
xchg
pop
jae
add
or
test
outsl
jge
add
test
sahf
fwait
lods
scas
adcb
mov
add
add
mov
add
add
sub
das
add
push
add
add
cmp
cltd
dec
in
xor
jne
enter
push
add
addr16
cmc
adc
mov
add
add
movsb
lds
fidivl
push
add
fsub
pop
add
adc
jno
add
nop
push
add
jno
insb
add
dec
add
in
xor
arpl
insb
add
arpl
xchg
push
add
hlt
insl
clc
and
add
out
mov
testb
add
fsubl
or
mov
pop
loopne
movsl
and
and
jnp
mov
jb
mov
daa
test
aam
or
jae
adc
popa
mov
add
outsl
jl
cli
jecxz
add
adc
dec
mov
add
mov
inc
add
test
or
add
dec
mov
sub
insl
xor
aam
dec
add
xchg
ljmp
out
mov
dec
add
xlat
test
add
dec
add
add
gs
rolb
dec
sbbb
pop
add
in
xchg
pop
add
lcall
inc
or
sbb
outsb
add
pop
add
add
add
stos
mov
out
loopne
mov
movsb
outsl
xchg
add
add
das
xchg
stos
add
mov
push
negl
add
add
adc
ret
pop
cmp
dec
pop
lock
mov
das
mov
ficoml
subb
add
pop
xchg
mov
add
fldcw
add
add
add
mov
stos
sub
add
add
sti
xor
jl
sbb
loop
in
data16
inc
rcl
and
cmp
jb
mov
ret
inc
jl
mov
adc
mov
xchg
push
add
aad
das
in
mov
pushf
push
and
iret
repnz
sbb
xchg
xchg
imul
jmp
add
add
popa
arpl
add
and
addl
inc
inc
imul
pusha
add
pop
add
pop
stos
sub
adc
sub
fisubrs
ja
add
stc
into
icebp
mov
dec
add
cmp
push
add
add
push
add
test
add
popl
popa
fimuls
icebp
sub
xchg
stc
bound
cmp
int3
bound
inc
mov
add
xlat
cmp
adc
mov
add
outsl
pop
add
add
loope
filds
int3
testb
cmp
adc
lock
add
mov
jno
shrl
add
pop
add
mov
ds
add
pop
sar
add
imul
add
test
sub
rcll
in
cmp
test
mov
mov
into
mov
addb
bound
sbb
adc
data16
sub
arpl
add
mov
sahf
add
rol
jge
adc
in
or
push
loop
insl
push
out
jae
add
fldcw
shl
int
add
and
sbbb
adc
add
call
mov
add
ja
add
add
pop
add
dec
add
sub
gs
sahf
pop
rcrl
cmp
jne
add
xchg
into
dec
fidivs
loope
push
xchg
jp
int3
cwtl
adc
add
inc
iret
add
mov
add
sbb
add
xchg
push
push
inc
add
adcb
jb
icebp
add
insl
add
in
stos
sti
sbb
inc
add
add
adc
jns
adc
mov
add
cmp
insl
pop
test
data16
test
mov
stc
stc
lret
das
cmp
dec
out
and
in
lcall
add
xor
mov
add
add
mov
fiadds
add
mov
add
or
adc
add
stos
popf
cmp
sbb
push
add
jecxz
inc
in
orl
add
lahf
pop
inc
xor
test
imul
dec
int3
sahf
shr
pop
outsb
add
shll
mov
test
mov
mov
sbb
or
push
aaa
flds
add
scas
rol
mov
add
in
mov
add
into
cwtl
fisttpl
add
dec
stos
sbb
xor
and
add
add
cmpsb
loope
add
add
shrb
jg
add
std
pop
mov
mov
insb
add
or
leave
test
test
loope
jo
pop
add
mov
add
inc
add
add
mov
or
pop
add
add
add
pop
add
pop
add
out
insb
add
push
mov
cmp
ret
or
scas
ret
mov
or
scas
cli
inc
add
add
fimull
xchg
add
cmpsl
lret
daa
mov
add
je
sbb
test
add
xchg
clc
or
outsb
add
or
xlat
jbe
push
add
inc
add
cwtl
icebp
ret
push
ficoms
fsubrl
jno
repnz
std
pop
stos
lds
sbb
sbb
ljmp
mov
fsts
add
pushf
pop
add
dec
cmpsb
mov
xchg
pusha
add
jno
add
add
bound
add
mov
add
adc
or
std
add
ljmp
push
and
divb
xlat
fstpt
aaa
inc
xchg
pop
add
cmp
add
push
add
pop
add
dec
add
shl
add
push
add
xor
cmp
add
fsub
xor
mov
add
imul
add
int3
xchg
into
cmpsb
sbb
in
fmull
lock
add
jnp
bound
jle
ret
add
xor
mov
add
gs
add
add
push
add
icebp
adc
ds
dec
mov
add
xchg
mov
add
mov
fcom
add
cld
dec
ljmp
xchg
mov
inc
dec
inc
add
lahf
inc
jae
lret
js
stos
jmp
ja
js
and
leave
adc
pop
mov
sub
lods
repnz
pop
add
add
rorl
cld
fisttps
out
xchg
jne
pop
inc
movsl
data16
mov
sbb
sbb
mov
add
cmp
add
add
add
push
xchg
arpl
pop
call
loop
fstcw
arpl
data16
add
shrb
jns
roll
add
push
add
mov
aad
xchg
insb
add
sbb
dec
add
add
sbb
add
cmp
or
add
test
cmp
movsb
lret
or
mov
add
pushf
int
push
add
add
jnp
adc
lods
fisubs
dec
sub
add
add
push
add
add
xchg
sbb
add
les
cmp
test
add
xchg
call
std
test
into
fcmovnbe
fcomi
cmp
pop
jg
out
add
push
add
stc
clc
sbb
int3
mov
js
dec
add
push
add
fstl
jnp
add
push
mov
mov
arpl
or
fcoml
add
cmp
add
call
lret
mov
dec
adc
mov
stos
jbe
rolb
sti
jp
mov
add
add
enter
add
sub
out
push
add
add
loope
inc
inc
add
mov
add
add
std
out
add
iret
pop
add
adc
testl
call
mov
cli
cmp
jbe
mov
add
add
outsl
mov
sub
mov
pusha
add
shrl
test
pop
add
add
addr16
imul
or
inc
lea
add
icebp
std
add
jle
and
xchg
mov
sbb
iret
jae
adcb
mov
xor
out
xchg
add
add
sub
xor
fxch
dec
xor
std
add
add
and
jns
xchg
xor
dec
mov
and
mov
adc
push
pop
add
add
dec
out
mov
and
push
add
push
add
inc
add
and
add
add
mov
in
into
adc
out
add
jl
adc
test
in
xor
add
loopne
inc
repnz
pop
pop
add
or
add
add
add
add
add
hlt
cmp
add
shrl
mov
xchg
push
add
adc
push
add
ljmp
add
and
jmp
add
inc
add
push
add
call
jmp
std
fstps
add
and
jle
aas
jecxz
jecxz
sub
add
add
and
pushf
pop
leave
sbb
mov
jle
mov
add
add
mov
mov
add
dec
lahf
push
add
add
sub
nop
mov
add
add
adc
int3
pop
mov
add
subb
jl
sub
ljmp
mov
in
aaa
mov
sub
rclb
data16
sbb
ja
add
mov
push
mov
mov
hlt
mov
jb
je
jge
xor
cmp
dec
scas
repz
pop
call
adc
jg
adc
mov
push
add
sub
scas
xchg
and
mov
mov
xor
filds
enter
test
add
in
dec
add
mov
sub
and
add
add
add
jnp
clc
mov
add
mov
add
or
xchg
outsl
call
xchg
push
add
dec
adc
inc
xlat
xor
fstpl
and
add
insb
add
add
add
cmp
add
cmp
loopne
add
pop
in
sub
push
pop
add
in
cmc
pop
inc
add
push
add
shlb
xor
xchg
push
add
xchg
xchg
aaa
and
xor
lods
cwtl
cmp
add
gs
xchg
cmp
frstor
add
shlb
and
push
loopne
mov
push
bound
pop
add
mov
xchg
ljmp
mov
add
mov
add
and
arpl
shl
pop
jle
ljmp
and
mov
into
push
add
gs
add
add
scas
mov
dec
movsb
pop
add
sub
ja
divl
add
sub
jg
add
incl
stos
movhps
add
mov
add
xchg
xchg
cmp
in
add
add
or
lds
cwtl
cmp
xor
inc
add
add
popa
daa
lods
aad
testl
aam
push
add
add
pusha
add
add
or
xchg
mov
das
mov
add
aad
xchg
xchg
adc
stc
mov
jno
add
jp
sbbl
add
les
add
push
sbb
add
add
fwait
out
jg
call
nop
or
testl
mov
add
add
jne
stc
add
scas
push
pop
add
adc
addl
cmpsb
xor
xchg
je
jb
inc
add
add
mov
cmp
inc
clc
repz
pop
or
jo
stc
stc
decl
push
imulb
add
jnp
add
xor
add
sub
add
inc
add
sub
sbb
add
bound
sahf
mov
adc
cmp
mov
mov
mov
or
imul
mov
call
jo
add
imul
cmp
fldt
dec
add
add
adc
cmp
pop
or
add
shlb
add
testb
add
scas
iret
rcll
push
add
outsl
test
sti
pop
mov
add
sub
imul
jo
mov
add
add
into
data16
sbb
and
insl
insl
test
push
add
xor
rcll
movsl
bound
and
add
inc
add
jnp
pop
add
cmc
sahf
lret
add
add
xor
jmp
ret
enter
rcr
adc
and
xor
std
outsb
add
add
add
push
jae
xchg
sub
loopne
pop
xor
test
jg
add
push
xchg
mov
or
inc
call
js
icebp
stc
adc
jbe
jns
movsl
inc
add
xchg
cmp
pop
sbb
add
add
add
insb
add
popf
data16
pop
add
std
test
xchg
jecxz
rolb
add
bound
fisttpl
out
add
mov
xor
add
add
fwait
sub
scas
jecxz
add
add
mov
nop
push
add
add
add
out
in
ljmp
add
outsl
pop
imul
mov
add
dec
add
and
movl
add
add
jg
mov
xor
lahf
ret
test
mov
popf
fiaddl
mov
sbb
mov
das
add
outsb
add
cli
imul
cmp
adc
test
gs
push
add
xor
pop
xor
sub
inc
add
aam
add
add
jmp
inc
cmc
mov
jo
sbb
in
insl
div
inc
mov
add
cmp
dec
pusha
add
add
add
pop
add
add
add
rorl
out
add
mov
repz
push
inc
add
add
pop
jecxz
pop
pushl
add
jo
lcall
add
adc
lret
pop
xor
fists
popa
jb
pop
pushf
inc
push
mov
out
xchg
loope
push
add
cmc
shl
lret
add
push
test
pop
push
dec
lahf
push
add
sub
fstpl
inc
add
out
lods
sahf
jns
pop
fldl
mov
bound
data16
inc
add
les
mov
add
or
adc
add
add
ss
in
add
out
add
jg
popf
mov
add
mov
add
aam
add
add
fmuls
scas
in
mov
push
add
xchg
xchg
shrb
add
movb
add
sbb
cmp
xlat
ja
add
mov
add
fisttpll
add
adc
mov
test
mov
leave
pop
jecxz
inc
add
add
inc
add
in
fsubs
add
pusha
add
ret
pop
adc
test
jae
add
repz
das
add
add
adc
push
xchg
dec
stos
sbb
mov
or
push
inc
insb
add
pop
js
cld
lret
xor
lds
sub
lea
inc
add
add
push
out
popf
mov
add
shl
cmpsb
xchg
rolb
clc
pop
sbb
xor
cmp
xchg
sti
jbe
xorl
add
xorl
popa
imull
xchg
test
dec
add
subb
fsubp
call
loopne
add
add
bound
push
sbb
lods
pop
fstpt
orl
push
maskmovq
testl
jbe
call
jecxz
int3
push
add
mov
add
mov
add
inc
and
push
add
add
test
adc
je
stos
adc
sub
scas
enter
add
sbb
cmpsl
ljmp
js
lock
add
sbb
mov
loop
xchg
jb
xor
adc
add
in
leave
pop
mov
push
add
xchg
mov
mov
out
mov
jg
add
add
push
add
sbb
mov
mov
add
mov
mov
cmpsb
aaa
ljmp
add
xchg
jmp
mov
out
mov
je
cmp
mov
outsl
aad
add
or
aad
add
add
add
lods
xchg
xor
pusha
add
mov
push
add
pop
sbb
into
mov
add
jae
sahf
jmp
pop
add
cmp
xor
test
add
mov
enter
shrb
mov
xchg
imull
inc
ror
mov
xchg
inc
add
xchg
cmp
cmp
and
inc
movsl
adc
into
push
adc
or
fldcw
in
fwait
add
into
cmp
das
shll
add
add
mov
pop
xor
dec
mov
cmpsb
mov
cmp
insl
nop
in
push
add
sub
or
outsb
add
dec
add
add
sub
add
add
sub
xchg
leave
stc
push
add
mov
add
or
jp
out
dec
add
inc
add
mov
add
pop
add
rdtsc
sub
inc
add
add
push
in
xchg
add
stos
mov
add
xor
xor
adc
pop
add
sbb
fwait
adc
add
pusha
add
push
ret
add
add
xor
push
insl
mov
pushf
clc
adc
sbb
add
sarl
pop
scas
push
sbb
xchg
jb
xadd
push
add
add
daa
inc
add
add
add
into
and
xchg
push
cli
inc
push
cmp
add
xchg
and
out
dec
into
mov
cwtl
push
add
add
test
jl
mov
push
sar
pop
ljmp
cmp
xchg
outsl
cmpsb
pop
cmc
fldenv
add
push
add
add
inc
xchg
jp
lret
and
or
mov
add
int
inc
add
test
lods
jp
and
mov
test
add
push
add
jno
test
jmp
add
mov
add
push
add
int3
jnp
mov
js
loope
dec
add
add
add
add
jl
cmp
xor
or
decb
inc
int3
clc
mov
inc
ret
insb
add
jle
dec
add
mov
iret
push
add
adc
cmp
xor
lock
mov
aam
aam
add
sbb
adc
lret
clc
fists
adc
xchg
insl
mov
jnp
inc
add
push
add
sbb
bound
leave
call
mov
xchg
bound
inc
mull
add
fidivrs
add
add
mov
inc
add
mov
jo
stos
inc
mov
cmpsl
std
neg
aas
add
xchg
out
pop
clc
pop
add
test
lods
ret
iret
aas
dec
add
icebp
inc
add
mov
add
jmp
push
dec
xchg
std
pop
mov
imull
xorl
ja
mov
cmp
cmc
insb
add
xchg
and
out
xor
jle
or
mov
dec
add
add
shrb
cmp
dec
daa
push
add
mov
nop
popa
sbb
add
inc
add
test
adc
icebp
fistpll
adc
enter
rcrl
adc
stc
push
leave
leave
dec
add
add
pushf
or
cli
rcrb
das
push
icebp
fidivrl
push
cwtl
pop
xchg
add
cmp
lret
jae
add
add
mov
mov
mov
lcall
add
ja
add
in
stos
or
sti
mov
xchg
rcll
jne
add
sub
mov
mov
or
cmp
movsb
lods
xor
inc
add
loopne
sub
or
and
aam
xlat
stos
xchg
cmpl
pop
add
mov
xchg
xor
add
add
sarl
loope
scas
mov
jmp
aaa
or
stos
inc
add
sub
mov
add
push
insb
add
adc
shrb
adc
push
lret
push
add
test
hlt
jns
pop
ret
je
add
lods
das
cld
push
add
add
push
add
add
cmp
add
xchg
into
into
aas
dec
add
mov
sbb
repz
mov
imul
xchg
sbb
lcall
add
idivl
lcall
mov
xchg
pop
push
mov
add
push
add
push
sbb
add
xchg
add
jns
cld
mov
and
add
icebp
add
xchg
rorl
adc
jbe
jmp
mov
loope
add
stos
imul
mov
repnz
ret
add
fld
dec
add
out
adc
push
add
inc
pusha
add
adc
lcall
add
push
out
xchg
add
add
aaa
dec
add
pop
loope
add
add
mov
cltd
sbb
scas
sbb
adcb
add
or
repnz
int
lcall
add
mov
push
add
sub
aaa
lret
js
clc
sbb
and
add
xor
dec
pop
out
shl
inc
fcmovnbe
mov
call
add
add
push
add
ret
pop
add
lret
xor
inc
ja
movsl
pop
add
fisubrl
mov
out
mov
sahf
and
sbb
mov
mov
add
inc
add
xchg
cmp
fwait
lods
jns
add
add
xchg
addr16
jmp
cmpsb
push
add
add
mov
mov
test
sub
mov
cmp
cld
fsubl
or
inc
mov
add
push
outsb
add
imul
das
out
push
add
add
add
mov
xchg
hlt
sub
jl
les
dec
add
je
rcrb
add
icebp
sti
push
sub
inc
in
out
sbb
int3
mov
out
aam
pusha
add
jmp
add
lea
add
stos
fsub
data16
mov
add
xor
lds
add
add
add
jp
and
mov
aam
push
add
xchg
sbb
repnz
or
lcall
in
jmp
outsb
add
dec
add
aaa
or
arpl
aas
push
add
imul
fstps
add
lahf
ljmp
add
lods
mov
addr16
push
add
movsl
adc
adc
fidivrs
movb
pop
in
lret
add
inc
icebp
bound
dec
cmp
add
ficompl
push
stos
ljmp
add
jmp
xchg
sub
jns
xor
out
mov
add
test
mov
cmpsl
mov
dec
push
add
or
push
add
loopne
add
adc
push
stos
sbb
inc
add
ja
adc
inc
add
xchg
mov
fildll
pop
add
sbb
je
cs
jne
loop
sti
test
in
add
add
fnstsw
cmp
pop
add
in
jnp
cwtl
movsb
ja
pushf
push
mov
and
pop
add
out
or
add
xor
lret
movsl
adc
jno
mov
add
sbb
inc
sbb
scas
out
and
cmp
mov
repnz
jne
add
scas
test
add
cwtl
test
outsl
sub
add
add
