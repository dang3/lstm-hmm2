imul
loop
es
in
in
in
in
in
jmp
loop
pop
out
in
call
loop
test
out
in
jecxz
in
call
loop
es
in
loope
in
out
in
out
in
in
in
jecxz
in
call
loop
adc
loop
jg
loop
in
loop
in
loope
in
in
in
in
in
jmp
loop
gs
in
jecxz
in
loope
in
loop
in
out
in
in
in
out
in
jmp
loop
mov
call
loop
loope
in
loope
in
out
in
in
in
jecxz
in
in
in
jmp
loop
shr
loop
in
loop
xchg
loope
in
in
in
jecxz
in
call
loop
test
loop
leave
call
loop
into
in
in
call
loop
ljmp
in
in
in
jecxz
in
out
in
in
in
in
in
out
in
in
in
out
in
loope
in
out
in
loop
in
loop
in
loop
in
loop
in
loop
in
in
in
jecxz
in
out
in
out
in
call
loop
or
loop
sbb
loop
movsl
call
loop
mov
in
in
in
in
jecxz
in
call
loop
and
loope
in
jecxz
in
in
in
in
in
in
in
out
in
out
in
call
loop
in
in
in
in
in
in
in
call
loop
repnz
in
in
in
out
in
loop
in
jecxz
in
loop
in
in
in
call
loop
pop
jmp
loop
xchg
in
in
out
in
loop
in
jecxz
in
out
in
out
in
loope
in
in
in
in
in
jecxz
in
loop
in
in
in
call
loop
xor
loop
and
in
out
in
in
in
call
loop
ss
in
out
in
out
in
loop
in
in
in
loop
in
call
loop
cmp
loop
cli
in
in
out
in
call
loop
ret
jecxz
in
in
in
jmp
loop
in
in
loope
in
in
in
jecxz
in
jecxz
in
in
in
loop
in
jecxz
in
out
in
jecxz
in
call
loop
adc
loop
call
loop
insb
out
in
loop
in
loop
in
in
in
loope
in
jmp
loop
es
in
jecxz
in
in
in
out
in
call
loop
in
loop
inc
in
in
jmp
loop
xor
in
in
in
in
jecxz
in
jecxz
in
in
in
out
in
call
loop
aas
out
in
jecxz
in
call
loop
sub
loop
loopne
loop
pop
jmp
loop
push
loop
mov
loop
dec
jmp
loop
mov
call
loop
pusha
out
in
jecxz
in
out
in
call
loop
repz
in
in
in
out
in
out
in
out
in
in
in
out
in
in
in
call
loop
in
out
in
in
in
out
in
call
loop
popf
loope
in
in
in
loop
in
loope
in
out
in
out
in
out
in
out
in
jecxz
in
in
in
loope
in
loop
in
in
in
jecxz
in
jmp
loop
call
call
loop
scas
loope
in
in
in
out
in
out
in
out
in
in
in
loop
in
in
in
jecxz
in
out
in
jmp
loop
adc
jecxz
in
out
in
in
in
in
in
out
in
in
in
loop
in
in
in
loop
in
jecxz
in
in
in
jecxz
in
out
in
out
in
loop
in
in
in
loop
in
in
in
loop
in
loope
in
in
in
call
loop
hlt
loope
in
out
in
loope
in
out
in
loop
in
loop
in
loop
in
call
loop
mov
out
in
in
in
call
loop
pop
jecxz
in
jecxz
in
out
in
out
in
out
in
loop
in
jecxz
in
loop
in
out
in
out
in
out
in
loope
in
out
in
jecxz
in
call
loop
insl
loope
in
out
in
call
loop
leave
jecxz
in
out
in
out
in
in
in
jecxz
in
out
in
call
loop
sbb
loop
test
loop
hlt
loope
in
jecxz
in
loope
in
out
in
loop
in
out
in
in
in
out
in
call
loop
out
loop
jg
loop
nop
out
in
in
in
jmp
loop
cmp
loop
out
in
in
in
in
in
in
jecxz
in
jecxz
in
in
in
loop
in
jmp
loop
xchg
out
in
jmp
loop
pop
jecxz
in
call
loop
repz
in
call
loop
jo
loop
in
loop
dec
out
in
out
in
call
loop
dec
in
in
out
in
out
in
jecxz
in
jecxz
in
jecxz
in
in
in
in
in
out
in
call
loop
imul
in
out
in
in
in
jecxz
in
loope
in
jecxz
in
in
in
out
in
loop
in
out
in
out
in
out
in
out
in
in
in
out
in
out
in
jmp
loop
pop
loop
in
in
in
out
in
in
in
jmp
loop
movsb
jecxz
in
in
in
out
in
in
in
loop
in
jmp
loop
mov
in
in
call
loop
mul
loop
out
out
in
loope
in
loope
in
out
in
loope
in
jecxz
in
in
in
in
in
in
in
in
in
in
in
loop
in
call
loop
movsb
loope
in
loope
in
out
in
in
in
in
in
call
loop
daa
out
in
loope
in
jecxz
in
in
in
in
in
in
in
in
in
jecxz
in
in
in
out
in
jmp
loop
pushf
call
loop
fwait
in
in
loop
in
call
loop
mov
loop
and
loop
sub
loop
shl
loop
xchg
in
in
jecxz
in
jecxz
in
out
in
in
in
in
in
jecxz
in
in
in
call
loop
push
call
loop
pop
jecxz
in
jecxz
in
loope
in
out
in
call
loop
add
loop
mov
loop
add
loop
mov
loop
test
loop
and
in
loope
in
out
in
in
in
out
in
out
in
in
in
call
loop
cmpsl
loope
in
out
in
in
in
jmp
loop
shl
loop
dec
jecxz
in
out
in
out
in
in
in
out
in
in
in
loope
in
in
in
loop
in
out
in
call
loop
gs
in
jmp
loop
sub
loop
fs
in
loop
in
loop
in
call
loop
add
loop
jecxz
loop
jnp
loop
jg
loop
mov
in
in
loop
in
in
in
out
in
in
in
in
in
out
in
jecxz
in
in
in
loop
in
loop
in
out
in
out
in
loop
in
out
in
in
in
in
in
out
in
loop
in
jecxz
in
call
loop
inc
out
in
jmp
loop
ds
loop
sbb
loop
pop
in
in
in
in
in
in
call
loop
pop
loop
in
in
in
call
loop
xchg
in
in
out
in
jecxz
in
jecxz
in
out
in
loop
in
loop
in
call
loop
push
call
loop
loope
in
call
loop
cmc
jecxz
in
out
in
out
in
loop
in
in
in
loope
in
out
in
loope
in
loope
in
out
in
loop
in
jmp
loop
lock
in
out
in
in
in
out
in
jecxz
in
out
in
loop
in
out
in
jecxz
in
call
loop
xlat
call
loop
sub
loop
xchg
loop
push
jecxz
in
in
in
call
loop
aam
loop
dec
out
in
in
in
loop
in
in
in
in
in
out
in
call
loop
cmc
in
in
loop
in
loope
in
jecxz
in
loope
in
in
in
loope
in
in
in
in
in
jecxz
in
call
loop
arpl
loop
jno
loop
cli
loope
in
loope
in
in
in
in
in
out
in
jecxz
in
jecxz
in
in
in
loop
in
jecxz
in
jecxz
in
in
in
out
in
in
in
in
in
out
in
jecxz
in
call
loop
out
out
in
jecxz
in
call
loop
inc
loop
in
loope
in
in
in
out
in
out
in
jecxz
in
loop
in
jecxz
in
jecxz
in
out
in
out
in
out
in
jecxz
in
in
in
out
in
loop
in
out
in
out
in
in
in
jmp
loop
ss
in
jecxz
in
out
in
jecxz
in
loop
in
out
in
out
in
loop
in
call
loop
mov
loop
cltd
in
in
call
loop
lahf
call
loop
sub
jecxz
in
in
in
jecxz
in
jecxz
in
call
loop
mov
out
in
in
in
out
in
out
in
in
in
loop
in
loope
in
jecxz
in
in
in
call
loop
jne
loop
daa
out
in
call
loop
mov
loop
imul
loop
jmp
out
in
out
in
loope
in
in
in
jecxz
in
jecxz
in
call
loop
cmp
loop
xchg
loop
in
out
in
in
in
out
in
call
loop
gs
in
out
in
jecxz
in
out
in
jecxz
in
loop
in
call
loop
stos
loop
in
out
in
out
in
jecxz
in
out
in
loop
in
out
in
out
in
loope
in
call
loop
loop
and
loop
pop
call
loop
lahf
in
in
loop
in
in
in
loope
in
loope
in
loop
in
out
in
jmp
loop
ja
loop
inc
loop
in
in
in
out
in
out
in
loop
in
out
in
out
in
jmp
loop
inc
out
in
call
loop
xor
loop
dec
in
in
in
in
jecxz
in
out
in
out
in
out
in
out
in
loope
in
out
in
in
in
call
loop
and
in
jecxz
in
in
in
jmp
loop
loope
loop
add
loope
in
jecxz
in
in
in
loop
in
in
in
jecxz
in
out
in
jecxz
in
in
in
out
in
in
in
call
loop
push
out
in
loope
in
in
in
out
in
out
in
in
in
jmp
loop
call
loop
jno
loop
and
loop
push
call
loop
ret
loop
in
jmp
loop
ja
loop
loop
dec
out
in
in
in
in
in
in
in
loope
in
out
in
loop
in
in
in
loope
in
jecxz
in
out
in
in
in
loop
in
loope
in
in
in
jecxz
in
loope
in
in
in
out
in
loop
in
out
in
in
in
call
loop
push
in
in
in
in
in
in
out
in
out
in
jecxz
in
call
loop
mul
loop
jl
loop
cmpsb
jecxz
in
call
loop
push
loop
in
out
in
call
loop
data16
in
in
in
call
loop
arpl
loop
sti
loope
in
in
in
in
in
jmp
loop
fwait
loop
in
loop
in
loop
in
out
in
call
loop
or
loop
leave
loope
in
loop
in
in
in
loope
in
out
in
out
in
call
loop
call
in
in
loope
in
out
in
jecxz
in
out
in
loope
in
in
in
in
in
out
in
loop
in
loop
in
in
in
call
loop
add
in
in
out
in
jecxz
in
jecxz
in
loope
in
jecxz
in
in
in
jmp
loop
jns
loop
mov
loop
mov
call
loop
dec
loop
in
loop
in
in
in
call
loop
loop,pn
in
in
in
loope
in
in
in
in
in
call
loop
mov
loop
loop
dec
in
in
loope
in
out
in
call
loop
shl
loop
xor
jecxz
in
out
in
loop
in
in
in
loope
in
loop
in
out
in
loop
in
in
in
loop
in
out
in
jmp
loop
sub
loop
lahf
out
in
jecxz
in
loope
in
jecxz
in
call
loop
mul
loop
cld
out
in
out
in
call
loop
mov
loop
mov
loop
or
loop
inc
loop
in
out
in
in
in
out
in
out
in
out
in
in
in
jecxz
in
jecxz
in
jecxz
in
call
loop
insb
in
in
loop
in
loope
in
in
in
jecxz
in
loope
in
call
loop
inc
loop
in
jecxz
in
out
in
loop
in
out
in
jecxz
in
in
in
jecxz
in
in
in
in
in
in
in
out
in
out
in
loope
in
in
in
jecxz
in
loop
in
jecxz
in
in
in
jmp
loop
pop
out
in
out
in
loop
in
out
in
jecxz
in
loop
in
out
in
in
in
in
in
in
in
out
in
jecxz
in
in
in
jecxz
in
in
in
out
in
in
in
jecxz
in
in
in
in
in
jecxz
in
loope
in
in
in
out
in
loop
in
loope
in
jecxz
in
jmp
loop
mov
loop
loope
loop
and
loop
pop
out
in
jecxz
in
in
in
call
loop
and
in
jecxz
in
loop
in
in
in
in
in
in
in
loope
in
in
in
jmp
loop
in
in
in
in
in
jecxz
in
in
in
jmp
loop
std
in
in
in
in
out
in
jmp
loop
sbb
loop
push
out
in
loop
in
out
in
call
loop
inc
in
in
out
in
in
in
out
in
in
in
jecxz
in
in
in
out
in
out
in
jecxz
in
in
in
in
in
loope
in
out
in
out
in
in
in
loop
in
call
loop
adc
loop
test
loop
js
loop
adc
loop
in
call
loop
xchg
out
in
out
in
in
in
jecxz
in
out
in
in
in
in
in
in
in
jecxz
in
in
in
out
in
jecxz
in
call
loop
mov
loop
std
in
in
loope
in
call
loop
nop
loop
in
loope
in
loop
in
loop
in
loope
in
out
in
loop
in
out
in
call
loop
mov
loop
clc
out
in
out
in
jecxz
in
call
loop
loop
sbb
loop
loop
xchg
jecxz
in
loop
in
loop
in
jecxz
in
out
in
loop
in
out
in
out
in
call
loop
sub
loop
xor
loop
leave
in
in
call
loop
inc
in
in
jmp
loop
in
call
loop
dec
in
in
loop
in
call
loop
dec
in
in
out
in
jecxz
in
loop
in
loop
in
loope
in
out
in
jecxz
in
call
loop
cmpsl
call
loop
iret
out
in
loop
in
call
loop
dec
out
in
jecxz
in
call
loop
cwtl
out
in
jecxz
in
in
in
loope
in
loop
in
in
in
in
in
out
in
jecxz
in
in
in
call
loop
jmp
loop
in
out
in
in
in
in
in
loop
in
jecxz
in
in
in
call
loop
add
loop
dec
in
in
out
in
loop
in
loop
in
loope
in
in
in
loop
in
out
in
jmp
loop
jmp
out
in
call
loop
test
loop
popa
loope
in
in
in
call
loop
cmpsb
out
in
call
loop
sub
loop
sub
in
jmp
loop
shr
in
jecxz
in
jecxz
in
in
in
call
loop
push
jmp
loop
loop
in
out
in
loop
in
out
in
out
in
loope
in
out
in
in
in
out
in
in
in
in
in
in
in
loope
in
out
in
jmp
loop
jmp
jmp
loop
and
loop
cmpsl
in
in
in
in
in
in
jecxz
in
loop
in
out
in
in
in
loope
in
in
in
in
in
call
loop
out
loop
in
jecxz
in
jmp
loop
xchg
out
in
jecxz
in
jecxz
in
in
in
out
in
loop
in
loop
in
in
in
call
loop
ljmp
in
in
in
in
in
call
loop
jge
loop
add
loop
sbb
loop
shl
loop
aad
loop
mov
loop
add
loop
xor
loop
popf
jecxz
in
call
loop
and
in
in
in
jmp
loop
in
loope
in
in
in
in
in
in
in
in
in
jecxz
in
out
in
loop
in
in
in
in
in
loop
in
in
in
loope
in
in
in
out
in
in
in
loope
in
out
in
loop
in
out
in
in
in
loop
in
out
in
loop
in
in
in
out
in
jecxz
in
out
in
in
in
out
in
in
in
jmp
loop
push
loop
shl
in
jmp
loop
pop
loope
in
loop
in
out
in
call
loop
inc
call
loop
in
in
out
in
in
in
in
in
call
loop
test
loop
push
in
in
jmp
loop
mov
loop
push
loope
in
loop
in
in
in
call
loop
nop
loope
in
jecxz
in
in
in
jecxz
in
loop
in
in
in
out
in
in
in
in
in
in
in
jecxz
in
jecxz
in
out
in
loop
in
jecxz
in
out
in
out
in
jecxz
in
loope
in
out
in
loope
in
loope
in
loop
in
jecxz
in
loop
in
call
loop
nop
loop
in
loope
in
in
in
call
loop
adc
loop
xor
loop
insl
in
in
in
in
loop
in
in
in
loop
in
out
in
jecxz
in
loop
in
call
loop
icebp
in
in
out
in
out
in
loop
in
loope
in
jecxz
in
loop
in
out
in
out
in
in
in
jmp
loop
xchg
out
in
loope
in
in
in
out
in
loope
in
out
in
loope
in
in
in
loop
in
call
loop
jnp
loop
insl
in
in
out
in
jecxz
in
jecxz
in
loop
in
out
in
jecxz
in
in
in
call
loop
gs
in
loope
in
in
in
out
in
in
in
loop
in
in
in
loop
in
out
in
out
in
jecxz
in
in
in
jecxz
in
out
in
jecxz
in
in
in
loop
in
in
in
call
loop
xchg
out
in
out
in
in
in
in
in
out
in
loope
in
out
in
out
in
jecxz
in
out
in
in
in
out
in
call
loop
cmp
loop
pop
in
in
in
in
jecxz
in
out
in
in
in
in
in
loop
in
out
in
loope
in
call
loop
push
out
in
loop
in
out
in
loope
in
loope
in
out
in
in
in
in
in
out
in
out
in
loop
in
in
in
out
in
out
in
in
in
jmp
loop
movsb
out
in
jecxz
in
jecxz
in
in
in
loop
in
jecxz
in
jecxz
in
in
in
in
in
jecxz
in
in
in
out
in
in
in
jecxz
in
jmp
loop
inc
add
mov
rolb
add
xor
call
ljmp
ret
add
in
fwait
xchg
sub
push
in
ret
add
out
jne
testl
xchg
pop
cmp
lods
mov
adc
call
pop
inc
add
cmpsb
add
add
movl
add
jecxz
daa
add
sub
mov
add
scas
and
incl
or
adc
sahf
ret
add
push
pop
jp
out
mov
add
add
add
lea
add
lea
daa
add
cltd
fmul
xchg
and
pushl
idiv
les
adc
lcall
loop
push
add
cld
xchg
add
add
lcall
icebp
out
mov
inc
add
mov
add
ret
add
mov
mov
add
std
mov
pushl
xor
jmp
add
jge
dec
fcomi
aaa
adc
push
lods
sub
aam
mov
add
sbb
adc
incl
ljmp
dec
pushf
js
roll
add
dec
push
add
pushl
loopne
add
dec
repnz
add
je
xor
inc
add
insl
push
add
aad
add
mov
fadd
add
jnp
loopne
cmp
pop
sahf
mov
lods
xlat
rorl
add
lcall
cmp
jb
call
add
add
jns
push
add
ljmp
add
adc
cld
cmp
inc
add
ljmp
xchg
lds
test
add
call
add
cld
push
add
and
lcall
jno
cmp
pushl
cmpsl
add
push
je
lods
mov
mov
bound
incl
imul
lock
jmp
add
mov
add
mov
push
iret
pop
sub
jl
add
mov
mov
add
xchg
pusha
add
aam
add
imul
add
imul
mov
test
add
and
ljmp
add
out
mov
outsb
push
add
fwait
dec
jg
dec
mov
incl
mov
add
call
mov
sub
cli
pusha
add
or
add
or
sub
into
mov
mov
add
ljmp
icebp
jmp
add
add
mov
dec
cli
dec
fiaddl
add
addb
lods
imul
push
add
mov
arpl
ljmp
mov
aas
into
adc
incl
mov
ss
or
dec
mov
add
stos
mov
bound
lcall
mov
pushf
data16
add
or
add
inc
add
xlat
shll
add
pop
mov
pop
test
add
inc
add
add
cmp
add
cmp
pop
add
decl
clc
int
fmuls
xor
pushl
add
sbb
pop
cmp
aaa
rorb
sub
add
fidivs
lcall
mov
pop
int
inc
add
fxch
sbb
call
or
cmc
jp
aam
push
add
imul
sbb
mov
push
test
push
inc
add
data16
push
add
and
ljmp
in
inc
add
and
incl
add
cmp
pushl
rcrb
dec
mov
inc
add
mov
in
call
add
test
test
mov
ds
bound
call
aam
out
cmp
adc
jmp
add
addl
adc
ljmp
das
jmp
cmc
inc
add
ljmp
add
dec
sub
pop
fsubrp
and
mov
test
add
inc
add
movsb
add
aam
addb
push
add
adc
dec
inc
add
sbb
lock
add
lret
nop
push
add
ljmp
roll
add
add
testb
je
inc
add
mov
in
pop
and
jmp
add
test
cmp
int3
mov
insl
sbb
addb
fstpl
call
add
dec
jb
fsubrl
add
add
dec
in
adc
mov
dec
cmp
mov
outsb
sahf
call
std
gs
dec
lea
decl
xchg
addb
add
aad
add
mov
jle
xor
call
and
call
add
cltd
syscall
add
shrl
add
popf
mov
aas
mov
addl
scas
repz
mov
clc
outsl
cltd
and
test
out
cwtl
insb
cmp
in
sub
push
push
push
call
test
jne
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
ret
call
cmp
xchg
xor
jp
or
and
call
fisubl
arpl
in
or
ljmp
call
mov
add
insb
xchg
scas
or
inc
add
xchg
call
std
and
jne
lret
adc
ficoms
sbb
or
add
mov
lcall
add
add
add
jmp
add
adc
lcall
pop
aaa
push
add
pop
scas
xchg
push
mov
bound
incl
or
add
xor
call
mov
add
or
push
pop
je
bound
incl
dec
inc
add
add
add
xor
incl
sub
addb
repnz
stos
jne
add
or
mov
push
mov
loope
jl
add
add
add
jle
pop
iret
jg
popa
add
repnz
sub
dec
or
sbb
mov
adc
ljmp
out
dec
lret
xor
add
mov
add
decl
add
in
push
lret
mov
incl
ss
mov
add
add
shll
add
ret
and
pushl
in
xor
cmp
add
sub
add
push
add
pop
or
jb
jmp
add
add
lods
jmp
pop
lea
insb
jp
mov
mov
add
call
xor
add
outsl
add
push
cwtl
push
add
pop
cmp
and
mov
sahf
hlt
fistl
call
imul
pop
xchg
out
inc
add
add
xor
ljmp
pop
hlt
imul
aas
das
dec
js
add
jbe
mov
sub
pushl
cs
scas
mov
lcall
mov
add
add
popa
add
inc
add
int3
ret
mov
mov
jo
pushl
into
into
mov
cs
add
add
fists
outsl
scas
addl
out
pusha
add
add
addb
add
mov
xor
mov
add
hlt
mov
cmp
add
mov
add
add
addb
not
mov
jmp
add
testb
adc
add
stos
aaa
rolb
add
add
add
or
mov
dec
mov
scas
xchg
pop
roll
pop
je
ljmp
add
jns
adc
ljmp
jno
add
add
cmp
add
popa
add
and
cld
add
decl
add
inc
add
aam
pop
push
add
add
mov
outsl
dec
sub
add
and
faddp
add
dec
mov
addb
xchg
femms
add
jmp
js
add
stc
jne
add
test
imul
call
add
mov
in
sbb
lock
inc
add
cs
add
int
mov
xchg
addl
bound
lcall
jg
mov
jp
addb
dec
ret
add
stos
jbe
imul
push
fcompl
jns
xor
inc
add
incl
xor
call
int3
pop
inc
add
mov
mov
add
jmp
add
xor
call
pop
add
push
mov
cmp
add
xchg
int3
sahf
adc
mov
decl
xor
jmp
add
add
popa
add
cmp
add
nop
addl
add
adc
cli
outsb
in
mov
adc
jmp
add
add
ljmp
addb
add
add
add
add
cmpsb
add
cmp
lock
add
pop
loop
scas
push
add
push
testb
add
add
dec
xchg
jecxz
fmull
add
mov
pop
push
add
lahf
jp
add
incl
add
mov
and
js
das
scas
scas
lds
inc
add
std
int
add
push
data16
add
dec
insb
rclb
and
dec
lret
or
add
lret
ficoms
add
icebp
add
cltd
test
jo
jg
and
lcall
add
pop
sti
mov
add
mov
push
add
ja
add
test
aaa
int
add
adc
jmp
add
add
insb
jae
jmp
add
lods
test
jne
add
dec
shll
imul
imul
popa
add
pop
add
push
arpl
mov
add
xchg
mov
mov
pop
mov
imul
cmp
mov
popa
add
xchg
jo
jmp
mov
add
fcoms
ljmp
arpl
in
ds
cltd
sub
add
ljmp
adc
ljmp
cmp
jno
ljmp
add
adc
jmp
shrl
je
fldl
lahf
jmp
cmp
add
or
add
add
sbb
add
dec
mov
cmp
xchg
dec
out
and
lcall
add
dec
pop
push
add
aas
mov
add
fwait
mov
outsb
popa
add
xchg
aad
xor
arpl
fmuls
pushf
sbb
sahf
add
add
mov
stc
movb
out
pop
push
mov
cmc
jb
lcall
ljmp
add
push
add
leave
test
add
push
push
add
in
loopne
sbb
aaa
dec
pop
hlt
jne
xor
push
hlt
add
loope
inc
add
pop
cmc
cmp
mov
xlat
mov
inc
add
lock
add
push
or
or
xchg
mov
ljmp
ds
xchg
xchg
out
cmp
add
jae
mov
mov
addb
add
add
push
add
popf
pop
pop
loop
dec
outsl
cmp
add
lcall
add
call
add
enter
cli
mov
add
xchg
mov
inc
add
fadds
add
sub
add
ss
lds
sahf
mov
jle
je
shld
mov
int
push
add
call
pop
push
and
dec
xchg
call
mov
daa
add
clc
stos
xchg
xchg
in
lock
call
packsswb
dec
sub
pop
mov
and
jo
jmp
add
or
std
rcrb
cltd
cmc
rcll
add
mov
push
add
hlt
addb
dec
insb
je
fsubs
incl
call
add
add
movb
mov
pop
adc
call
jb
lcall
call
cld
inc
add
mov
add
gs
add
dec
adc
ljmp
aaa
mov
add
mov
add
cmp
and
cmp
add
sbb
fistps
mov
outsl
sbb
add
stos
cmp
lcall
lock
addl
jnp
add
add
push
and
jmp
add
inc
add
add
xchg
push
add
add
mov
dec
push
add
movsb
add
push
mov
dec
and
call
adc
mov
scas
loopne
xor
add
push
adc
xchg
mov
hlt
xchg
outsl
loopne
repnz
add
mov
add
fstpl
push
add
and
pushl
ja,pt
bound
jmp
xor
pushl
sti
push
add
adc
pusha
add
call
adc
ljmp
aaa
call
ja
add
cli
and
add
add
push
add
push
mov
arpl
pushl
inc
add
gs
dec
in
sbb
add
push
add
ljmp
add
or
add
shll
enter
jns
mov
ret
add
xchg
ljmp
faddl
add
jp
add
leave
cmp
inc
add
pushl
jmp
lea
add
dec
xchg
out
movb
add
and
ljmp
jmp
in
inc
add
adc
adc
popa
add
sub
add
xchg
stos
mov
add
dec
ficompl
outsl
das
lods
and
nop
js
sub
add
scas
sti
push
pusha
add
push
add
inc
add
push
and
js
add
mov
pop
cltd
int3
sub
in
das
mov
add
pushl
jmp
add
add
add
or
sub
imul
add
add
push
add
jl
sub
sbb
mov
add
xor
incl
xchg
out
das
jbe
adc
jmp
add
xchg
test
mov
sbb
add
push
add
addb
dec
loop
ljmp
sbb
push
cmp
add
call
xchg
xor
decl
add
add
decl
fs
add
cld
cltd
cmpsl
add
lods
pop
icebp
data16
and
fxch
sahf
lods
cmp
add
add
decl
pop
les
push
add
lcall
push
add
push
pop
fldt
sub
mov
add
shlb
cwtl
aad
and
jo
pushl
add
jne
call
add
sub
jo
mov
bound
ljmp
mov
call
fcomi
cld
inc
add
pop
lahf
les
pop
add
fdivrl
shrb
add
pushl
ljmp
xlat
ror
inc
add
les
hlt
push
addr16
add
call
rcrb
mov
add
cmpsb
add
add
pop
in
inc
add
movl
negb
add
jmp
jl
add
dec
popf
sub
and
xchg
cmp
fisttps
xlat
les
je
cltd
xor
add
push
add
cmp
lcall
xchg
testl
pop
mov
add
add
add
jne
jns
imul
cmp
add
lret
sub
push
or
incl
lahf
mov
in
ffree
add
add
sahf
lret
jp
cmp
add
movsl
add
add
out
mov
arpl
dec
mov
add
lahf
fnstsw
jne
jne
xor
loopne
mov
dec
dec
pop
or
xor
incl
js
sbb
pushl
jmp
add
mov
inc
add
lret
in
test
add
or
in
and
call
sub
push
add
cmp
xchg
cmp
pop
mov
xchg
dec
pushf
hlt
cmc
sgdtl
lcall
popa
add
fmull
add
push
push
push
jnp
xor
call
incl
add
testb
and
jmp
add
decl
add
push
insb
pop
sarb
ret
add
push
roll
add
lods
push
sbb
mov
adc
jmp
add
pop
xchg
mov
mov
mov
rcrb
inc
add
jae
clc
rcll
dec
jmp
cld
insl
mov
add
lcall
mov
cltd
mov
and
push
add
xchg
jmp
addl
pop
xchg
inc
add
js
add
add
sbb
jge
add
cmp
mov
lcall
call
dec
out
lods
stos
pop
jbe
mov
add
dec
mov
jo
incl
insb
ljmp
ljmp
add
into
aaa
lods
cmp
sub
mov
addl
cmp
add
add
cmp
add
add
call
call
addl
rolb
add
lcall
addl
pop
jecxz
call
pop
and
arpl
call
add
pusha
add
addb
add
lock
int
add
scas
aam
add
mov
lea
pop
lahf
int
fdivr
out
jmp
add
or
mov
scas
cmp
add
ljmp
test
push
add
insb
lods
fmuls
dec
les
adc
jmp
outsb
mov
ja
add
addl
add
scas
data16
cmc
mov
add
push
movsb
add
mov
add
mov
lahf
dec
sbb
and
ljmp
addb
sbb
xchg
xchg
mov
sbb
add
mov
stc
adc
jmp
outsb
addb
fiaddl
add
roll
add
aaa
les
sub
decl
add
inc
add
loop
mov
or
popa
add
ljmp
or
push
add
add
lds
cmpsb
add
mov
out
and
jmp
push
add
xchg
movsb
add
or
adc
jmp
add
inc
add
les
inc
add
inc
add
je
pop
imul
mov
pop
xchg
ficompl
add
pushf
fidivs
add
movl
sub
and
lcall
lods
xchg
mov
int3
test
add
add
mov
dec
lock
add
add
aas
push
add
insl
mov
add
into
aad
scas
inc
add
xchg
or
add
mov
add
fistpl
add
cld
jmp
movsb
add
add
sub
pop
mov
xchg
out
xlat
mov
mov
push
add
jns
add
add
movsb
add
lahf
and
jecxz
adc
call
push
add
inc
add
add
sub
add
aad
fdivrp
scas
dec
sub
add
add
add
inc
add
sbb
add
or
jno
mov
jb
pushl
lcall
inc
add
int3
or
imul
cmpsl
add
mov
sub
sub
rolb
jp
mov
push
add
fisubrl
push
add
cltd
lods
mov
sbb
dec
scas
inc
add
movq
lcall
pop
add
incl
aas
sub
mov
fisttpll
add
fdivrs
push
add
lods
std
rolb
adc
ljmp
inc
add
push
add
push
cmpsl
add
imul
jmp
add
xchg
jp
xchg
movsl
add
dec
dec
mov
add
or
test
xor
pushl
xchg
mov
mov
mov
lea
add
add
add
fstl
add
pusha
add
repnz
add
rolb
addl
add
jge
sahf
gs
sahf
adc
add
mov
push
add
fsubs
lods
movsb
add
add
call
mov
sbb
add
rolb
xchg
mov
add
pushl
add
cmpsl
add
lret
decl
dec
je
add
lret
add
add
jle
add
imul
mov
sub
sub
inc
add
inc
add
adc
addl
sub
dec
mov
jb
pushl
mov
sbb
jns
fwait
dec
xor
call
inc
add
add
mov
mov
push
jge
cmp
les
mov
ljmp
pop
adc
lcall
inc
add
daa
add
sbb
pop
jp
add
lcall
add
pushl
sub
add
add
scas
push
push
add
mov
add
add
inc
add
add
stos
fwait
test
icebp
xchg
adc
movsb
add
in
add
xchg
pop
test
enter
mov
cmp
cld
cmpsb
add
add
decl
fdivl
mov
add
add
pop
xchg
push
dec
shrb
call
xchg
dec
pop
filds
cmp
and
mov
add
xchg
fs
add
add
repz
dec
je
add
mov
bound
js
ret
xchg
mov
add
scas
fwait
mov
and
pushl
add
arpl
mov
sbb
sub
add
incl
outsb
xlat
adc
inc
add
out
dec
sbb
and
pushl
add
push
mov
add
movb
xor
in
faddl
add
add
add
outsl
mov
mov
dec
out
pop
pop
add
inc
add
jns
cmp
xchg
pop
mov
cld
pop
add
add
add
mov
push
fldl
inc
add
add
add
scas
inc
add
sbb
addl
sbb
in
rolb
aad
mov
fstl
mov
out
adc
arpl
inc
add
popa
add
je
inc
add
incl
je
add
addb
in
and
push
in
addb
int
add
arpl
decl
add
mov
add
out
or
and
incl
add
add
mov
push
add
stos
mov
adc
call
add
call
jmp
add
jp
add
call
jle
add
xor
jge
in
out
out
int3
sbb
add
out
sbb
ljmp
add
add
nop
addl
ret
divl
js
xor
ficoms
add
movb
test
add
sbb
or
add
stos
mov
add
addb
push
adc
decl
dec
popf
jnp
add
add
push
push
pop
outsl
cmc
in
and
fsubl
call
cli
rcr
lahf
movsb
add
push
add
ja
addl
ljmp
xchg
cs
add
aaa
push
add
and
in
test
and
incl
and
decl
pop
sarl
imul
int3
add
add
jmp
add
add
arpl
pushl
pop
ret
add
pop
stos
xor
incl
add
pop
mov
push
add
enter
push
add
cmp
add
adc
lcall
dec
insb
push
hlt
stos
push
add
pop
add
add
or
sbb
call
movb
ret
add
fwait
call
add
sbb
add
mov
stc
cld
test
mov
fwait
enter
sbb
xchg
lock
add
addb
sti
int3
or
imulb
add
xchg
popa
add
stos
mov
add
or
jl
lods
shrl
call
lock
or
xor
pushl
add
jno
jmp
inc
add
add
add
push
bound
incl
jmp
and
ljmp
add
filds
add
xor
decl
add
imul
or
add
pushl
add
data16
add
call
inc
add
enter
sub
add
lcall
mov
jmp
add
pop
xor
decl
int
add
js
sub
mov
jmp
inc
add
lock
sbb
add
jecxz
adc
incl
call
cmp
fsubl
scas
xchg
jle
jp
add
mov
inc
add
add
jns
add
push
add
add
sbb
jbe
jae
lcall
leave
test
xchg
mov
add
mov
add
add
inc
add
jmp
add
add
pop
sahf
jl
mov
fmull
mov
lcall
add
add
addb
shll
je
add
dec
mov
add
add
sub
jbe
test
inc
add
fnstcw
insb
xchg
into
rorb
add
loope
lods
cltd
lods
ret
add
add
loope
pop
pop
add
lds
xor
jmp
bswap
jmp
push
jns
addb
add
addr16
add
out
lods
loopne
stc
xchg
sbb
mov
lret
inc
add
lds
jle
mov
stos
push
mov
adc
lcall
adc
mov
mov
add
les
out
mov
fsubrs
lods
fbstp
addl
add
fcmove
pop
push
mov
fldt
in
scas
sub
add
add
imul
test
hlt
lcall
loop
pop
mov
dec
xlat
ss
add
xchg
add
add
cwtl
mov
jmp
add
icebp
sti
out
lds
sub
mov
std
jbe
add
out
in
dec
lods
adc
call
movsb
add
add
jmp
daa
add
bound
push
cs
jge
push
push
ficoms
add
add
xchg
pop
add
int3
stc
rcrb
push
add
dec
lock
add
push
das
adc
dec
dec
les
and
lcall
dec
mov
add
mov
sbb
aas
out
jl
mov
sbb
add
pop
scas
into
daa
add
add
xchg
sbb
mov
add
hlt
fwait
cs
add
add
insl
jecxz
sub
mov
dec
jmp
addb
test
movsl
add
add
add
mov
or
mov
or
pop
out
in
data16
add
add
push
add
in
stos
dec
mov
pop
add
cmp
add
fwait
cli
std
in
adc
incl
test
add
mov
jne
jge
movlhps
jp
in
bound
decl
add
lcall
jmp
lds
sub
pop
pop
fstl
add
xchg
cltd
sbb
add
lods
sub
mov
add
std
push
mov
repnz
and
inc
add
push
mov
push
addl
adc
decl
cld
inc
add
aas
and
cmp
daa
add
add
xor
jmp
add
lea
insl
mov
lods
ret
add
dec
add
jle
add
xor
ljmp
add
push
add
sub
lret
inc
add
ljmp
push
out
scas
or
and
decl
cmpsl
add
arpl
ljmp
add
add
test
int
dec
or
add
dec
or
add
add
and
call
add
dec
addb
lods
mov
daa
add
or
lock
aaa
push
lock
pushl
mov
lods
fsin
js
jg
pop
add
jne
sub
lock
push
mov
add
aas
xor
jmp
pop
ret
add
pop
gs
add
xchg
inc
add
xchg
cmovns
add
add
jno
jmp
add
mov
add
mov
push
cmc
addl
fprem
cmp
addl
fisubl
movl
call
lcall
lods
xlat
rolb
add
outsb
addb
push
lods
out
xor
adc
jmp
out
xlat
pop
mov
push
add
inc
add
add
mov
add
mov
add
adc
inc
add
or
dec
roll
inc
add
popa
add
adc
lcall
xlat
add
lcall
add
xchg
xchg
mov
decl
add
lcall
add
lcall
rorl
imul
lock
jmp
add
test
jb
jg
sub
nop
adc
jmp
mov
ljmp
ss
add
loopne
add
mov
add
cs
add
pop
mov
xchg
loop
xor
decl
mov
dec
stos
incb
sbb
rclb
push
push
mov
push
add
insl
pop
adc
incl
jns
add
sub
movsl
add
add
rol
add
sahf
or
mov
add
add
xchg
arpl
decl
arpl
lcall
in
fstps
add
add
call
call
add
add
inc
add
pop
xchg
jecxz
stos
jne
fnstenv
cmp
add
or
mov
incl
or
fisttpll
add
adc
incl
ljmp
add
mov
dec
movb
add
leave
cld
mov
lahf
ficoml
scas
call
fwait
pusha
add
cs
mov
pushl
inc
add
hlt
les
mov
add
ds
xlat
cmp
imul
imul
cmp
add
pop
jnp
xlat
add
decl
ja
add
push
and
decl
out
jmp
dec
pusha
add
or
incl
cld
mov
add
cmp
xchg
lahf
int3
cmpsl
add
mov
mov
mov
ljmp
cmp
add
sti
push
incl
icebp
idiv
dec
jp
cmp
xchg
mov
add
inc
add
int3
in
mov
cmpsb
add
mov
out
addb
add
add
ljmp
pop
add
add
add
fisubl
or
xchg
cmp
add
jg
xchg
movl
int3
fwait
out
xlat
cmpsl
add
add
add
pop
add
jno
mov
add
stc
mov
jmp
ds
cmpsl
add
lcall
cmp
hlt
pop
inc
add
in
hlt
mov
mov
jmp
in
inc
add
imul
add
clc
adc
lcall
add
dec
adc
jg
addb
or
mov
mov
addb
les
roll
test
add
daa
add
add
add
movb
add
xchg
mov
or
cmp
ljmp
push
jne
cwtl
cld
add
dec
xor
push
data16
add
scas
call
and
call
decl
push
add
add
ljmp
insb
pop
lret
leave
lret
jae
jmp
add
add
sub
jb
jmp
add
incl
pushl
add
dec
jno
jl
or
add
call
mov
rolb
add
sub
inc
add
in
cs
loop
mov
call
add
sub
mov
add
fmulp
bound
pushl
add
mov
pushl
enter
add
dec
mov
rep
adc
clc
into
xchg
cmp
add
add
aad
add
bound
jmp
jmp
jmp
add
jp
fidivs
add
push
mov
ljmp
dec
inc
add
pop
jmp
add
add
dec
xor
incl
add
stos
add
mov
pop
push
add
mov
ja
inc
add
mov
add
jmp
lock
xor
dec
lds
and
lcall
enter
dec
and
ljmp
add
jns
add
and
pushl
add
cmpsb
add
add
jmp
add
add
and
decl
mov
push
lahf
mov
out
dec
xchg
nop
std
xor
jmp
add
push
push
add
aad
leave
pop
add
push
sbb
add
daa
add
jnp
mov
add
add
push
and
jp
sbb
add
add
pop
pop
push
cmp
mov
push
jbe
xchg
loop
jbe
in
out
sahf
icebp
cmp
incb
lea
testb
out
dec
ss
and
jmp
add
add
jns
add
cmc
pop
mov
jmp
mov
inc
add
xor
inc
add
ljmp
mov
test
add
lahf
jmp
add
fstps
jg
lds
icebp
inc
add
fldcw
push
add
lcall
movsl
add
pushl
dec
lock
jg
adc
lcall
add
ljmp
mov
pop
ffree
add
add
and
dec
and
jmp
mov
rclb
sti
pop
lods
add
jp
fdivl
and
lea
movb
xchg
xchg
fimuls
add
lahf
ljmp
lcall
icebp
push
rcrl
add
mov
aam
add
jmp
add
add
cld
fisubs
push
cmp
call
call
lcall
push
mov
push
add
imul
cld
mov
add
jnp
pop
cltd
push
addb
repz
ljmp
add
inc
add
add
add
fwait
pop
das
aas
inc
add
test
testl
add
bound
jmp
add
add
pushl
add
mov
outsl
pop
lods
in
dec
dec
fsts
mov
add
ljmp
lds
je
add
aas
sbb
test
lods
xchg
add
jle
add
pop
insl
adc
pushl
incl
stc
movb
lcall
add
in
lods
mov
ljmp
nop
mov
xor
lcall
add
lahf
dec
jp
add
pushl
dec
or
add
mov
in
jle
add
or
das
pop
aam
add
add
cld
add
fstpl
xor
dec
nop
stc
adc
incl
add
add
mov
add
mov
sub
add
push
push
adc
jmp
add
cmp
add
and
cmp
add
add
pushl
lea
dec
or
cltd
sbb
stc
jne
jecxz
push
add
cmp
into
push
fstl
add
mov
adc
in
rolb
adc
cwtl
or
xchg
ret
add
lea
jmp
jns
loope
bound
call
sbb
jp
repz
pushl
mov
add
add
add
add
ds
cmp
addb
add
pop
jbe
add
in
outsb
xchg
inc
add
jle
movsl
add
dec
sbb
dec
hlt
adc
fisttpl
insb
into
xchg
lcall
icebp
lods
enter
insl
or
ret
add
cmp
add
jno
jmp
xchg
lods
xor
jecxz
mov
in
push
add
push
add
movb
add
add
push
mov
add
and
call
dec
ljmp
add
in
insb
cmpsb
add
ret
add
scas
cmpsb
add
arpl
jmp
add
add
xchg
ljmp
int
fistps
add
stos
out
stc
data16
pusha
add
into
sbb
cli
cwtl
dec
and
call
ljmp
add
adc
cmp
lret
lret
loop
mov
cli
adc
icebp
sub
mov
addb
addl
enter
cltd
test
clc
or
or
addl
add
inc
add
add
add
clc
lds
add
add
cmp
loop
inc
add
add
movsl
add
pop
out
lret
cmp
pusha
add
pop
add
or
aas
dec
push
sub
pushf
testb
daa
add
or
mov
dec
ficomps
add
in
popl
xor
lcall
nop
pop
mov
add
movsb
add
sahf
fscale
cmp
add
push
in
cmp
fstpt
sub
mov
add
addr16
daa
add
sahf
add
cld
in
arpl
lcall
addl
mov
add
pushl
adc
test
movb
add
add
add
add
cld
in
jl
add
sbb
sub
mov
mov
xor
ljmp
dec
adc
push
repnz
mov
add
add
sub
add
jns
add
and
incl
add
lods
jg
add
add
push
inc
add
lds
pushf
out
cmp
test
cld
push
cmp
test
add
sbb
add
inc
add
and
ljmp
aaa
lahf
add
decl
popl
add
jmp
add
add
movb
popa
add
dec
jo
call
xchg
das
in
and
push
pop
mov
aam
aaa
jmp
mov
pop
cld
add
add
and
jmp
divb
aas
push
sub
sbb
into
or
sub
jmp
add
push
loope
add
add
push
in
mov
xor
lcall
xor
pushl
adc
push
daa
add
add
xor
incl
arpl
call
call
mov
push
add
ljmp
add
incl
add
dec
sub
add
movsb
add
xor
incl
ljmp
arpl
mov
add
dec
push
xlat
stc
pop
dec
add
ljmp
push
and
sbb
add
add
mov
jmp
add
or
mov
push
jnp
add
pop
repnz
or
add
xchg
int3
fwait
addb
add
jl
add
add
add
jae
pushl
lcall
enter
add
aaa
jns
rolb
outsl
sub
adc
cmpsb
add
jmp
add
add
adc
call
add
inc
add
cmc
jne
pop
mov
movsb
add
add
sbb
push
pop
movb
outsb
push
cli
or
addl
mov
sub
bnd
add
add
dec
or
add
add
jmp
std
mov
add
or
hlt
sbb
add
stos
daa
add
xchg
loopne
aaa
cmp
incl
add
inc
add
or
fbld
add
jnp
add
jne
or
mov
mov
imul
add
inc
add
ret
add
bound
lcall
lcall
icebp
call
add
sub
add
loope,pn
outsb
test
arpl
decl
insl
pop
fsubrl
mov
push
xlat
das
and
pushl
cmp
insb
dec
pop
add
add
lock
nop
lds
bound
jmp
add
ja
ret
movb
les
add
add
mov
sub
add
out
outsl
cmpsb
add
pushl
movsb
add
add
cli
or
bound
call
add
mov
dec
inc
add
cmp
add
jmp
add
in
rcl
in
bnd
xchg
daa
add
lahf
call
enter
incl
pushf
testl
add
sub
fisubrs
data16
ljmp
cwtl
mov
mov
add
add
add
and
call
add
mov
cld
jne
add
and
pushl
call
xor
add
test
add
int3
scas
movl
xchg
ljmp
add
xchg
sbb
add
jecxz
xlat
xor
incl
push
add
cmp
pushl
incl
add
add
or
add
add
pop
lock
pushl
call
fisttps
add
add
outsb
and
pop
pop
pusha
add
inc
add
sub
lahf
scas
in
shlb
add
mov
xlat
call
lcall
call
in
or
add
add
pop
pusha
add
je
and
ljmp
push
add
sbb
xchg
jecxz
sbb
insl
mov
add
jb
ljmp
mov
stos
sbb
ljmp
bound
lcall
jle
fwait
mov
add
daa
add
aas
loop
adc
push
outsb
mov
mov
mulb
add
add
mov
pop
mov
inc
add
arpl
in
fists
add
mov
je
add
pop
std
out
jbe
aas
sub
mov
add
jmp
sbb
imul
lods
aad
add
popf
jb
incl
add
stos
push
in
mov
aad
jno
inc
add
das
inc
add
roll
pop
shl
add
add
cltd
inc
add
sbb
aaa
and
decl
lods
mov
add
and
add
loope
mov
mov
pop
imul
push
movsb
add
bswap
pop
jae
pushl
add
add
ljmp
dec
out
jmp
call
add
or
add
clc
aad
ds
add
xor
call
mov
add
ds
outsb
push
addb
dec
cld
jmp
and
out
dec
je,pt
mov
add
jle,pt
add
pop
lock
add
add
xchg
js
add
movsb
add
jmp
add
jl
mov
push
sub
mov
add
add
add
movsl
add
add
lock
add
int
or
push
xchg
cmpsb
add
aas
mov
add
mov
testb
incl
jmp
and
add
nop
pop
adc
xchg
inc
add
dec
xchg
je
adc
mulb
sbb
add
add
add
add
lods
xor
fnstenv
mov
mov
jg
enter
adc
incl
inc
add
sub
pusha
add
cmp
pop
cltd
test
jbe
fs
jno
call
add
inc
add
add
jmp
add
fidivs
jo
lcall
shlb
add
add
mov
xchg
sahf
push
xor
jmp
js
add
aad
add
out
xor
decl
sub
pop
mov
add
pop
add
ficomps
jbe
sbb
iret
xchg
int
mov
pop
jbe
cmp
add
into
mov
fdivrp
sbb
xor
jle
add
movsl
add
insl
dec
imul
icebp
movb
add
add
jmp
add
xchg
jge
rcrb
jne
outsb
mov
add
enter
jb
cmp
or
add
adc
pushl
add
nop
addl
inc
add
dec
bound
pushl
add
js
sub
in
push
das
rolb
jmp
inc
add
xchg
adc
jmp
mov
nop
loope
fisttps
dec
and
call
add
test
outsb
pop
add
nop
add
jmp
jmp
add
inc
add
mov
add
add
fildl
cmp
or
test
mov
dec
lods
data16
mov
lret
add
incl
dec
addl
adc
ljmp
imul
mov
jmp
add
xchg
das
aas
ret
add
js
mov
push
add
add
add
xchg
mov
add
cltd
addl
int3
inc
add
cmp
add
stos
and
incl
dec
leave
roll
add
inc
add
scas
out
mov
xchg
sub
dec
inc
add
enter
sub
sbb
ljmp
or
outsb
sahf
gs
insb
add
ljmp
add
xchg
jge
add
add
sarl
aas
data16
mov
sbb
jno
decl
sub
jmp
add
jbe
add
jle
xor
pushl
add
je
xor
add
negl
adc
incl
add
ret
add
std
scas
movl
xchg
pop
ja
add
add
arpl
jmp
add
rolb
add
pop
cmp
movsl
add
push
cmpsb
add
sub
lock
dec
jbe
jne
sub
and
jg
add
outsb
lret
pushl
decl
cmp
out
or
test
mov
add
mov
xchg
dec
sbb
leave
ret
add
scas
int3
mov
add
scas
dec
jmp
add
or
mov
movsl
add
and
out
dec
jnp
mov
add
addl
mov
add
sbb
data16
sub
mov
inc
add
lods
lcall
xor
mov
je
outsb
aas
cld
dec
adc
mov
pop
add
cwtl
and
stc
cmp
je
and
call
dec
out
lds
push
das
stc
std
xor
incl
stos
outsl
repz
decl
jge
add
add
sbb
lcall
stc
push
cmp
push
mov
add
xchg
in
addb
mov
cmp
dec
mov
add
pop
arpl
ljmp
add
add
mov
add
pop
xchg
adc
fstl
lods
lds
btc
push
jo
jmp
add
mov
add
cmp
mov
aas
or
pushf
cmp
arpl
jmp
nop
adc
lcall
rcrb
push
add
fistpll
add
add
jne
add
sub
add
add
test
push
rolb
mov
add
imul
add
pop
add
aas
mov
enter
mov
loope
mov
jmp
add
pop
in
inc
add
jmp
incl
add
add
aad
dec
addb
add
add
adc
call
lods
jl
add
add
lcall
fidivrl
add
and
push
add
fadd
add
add
mov
fdivs
incl
add
add
inc
add
decl
add
jb
decl
inc
add
jbe
mov
test
add
add
idiv
lock
lods
mov
adc
aam
dec
push
add
nop
pop
add
add
adc
pushl
add
out
or
in
dec
or
adc
incl
cmp
jnp
dec
or
add
push
pop
sbb
add
loop
mov
mov
ss
lahf
xor
call
add
inc
add
lods
imul
add
fsubs
add
sbb
pop
pop
mov
add
iret
adc
mov
nop
mov
call
or
xor
gs
mov
add
add
add
cmc
hlt
dec
mov
add
ljmp
mov
mov
outsb
mov
lret
mov
fidivrs
movl
and
or
cmc
imul
dec
roll
lret
add
dec
ficoms
add
cmpsl
add
stc
addr16
add
adc
call
inc
add
and
call
dec
out
adc
dec
movb
add
xor
call
add
ds
mov
add
enter
movl
pop
loope
push
mov
add
bound
ljmp
xchg
das
or
pop
xlat
sub
push
add
sbb
add
pushl
lcall
add
bound
decl
mov
push
add
mov
dec
adc
cmp
cmp
add
jmp
add
add
ds
add
pop
adc
fsubrs
ljmp
dec
fwait
xchg
xchg
jg,pt
sti
jb
jmp
lret
add
dec
pop
adc
ret
add
xchg
push
add
jge
add
add
mov
inc
add
pop
lock
addl
mov
push
add
movsb
add
rcll
lcall
or
add
or
test
pop
arpl
call
xor
add
mov
leave
ret
add
out
adc
add
push
push
add
jge
jo
jmp
add
in
sub
pop
and
decl
stc
out
sub
stos
sub
mov
jbe
pop
sbb
pop
add
insl
and
ljmp
mov
jmp
mov
pusha
add
imul
add
and
dec
xor
add
add
cs
add
repz
dec
fildl
add
fsub
add
test
push
jecxz
jne
add
mov
rcrb
fiaddl
add
aaa
cmp
add
add
movl
test
add
movl
call
sbb
add
je
add
leave
pusha
add
mov
add
rep
add
add
mov
add
adc
incl
ljmp
xchg
cmp
cmp
xchg
lods
jnp
sbb
and
adc
jmp
add
add
call
and
outsb
fwait
movsl
add
cld
mov
add
push
push
add
and
pushl
lods
lret
pop
add
mov
add
lds
sahf
stos
in
movl
jbe
clc
jl
add
mov
add
clc
fnsave
pushl
lret
test
jp
add
add
into
jno
ljmp
add
add
add
mov
stos
jmp
add
sbb
xchg
mov
lods
jmp
lock
jmp
call
jecxz
cmp
ljmp
sbb
add
add
jmp
add
mov
add
clc
or
add
pushf
repz
pop
add
cmp
lea
rclb
add
movsb
add
add
loope
or
add
mov
adc
lcall
cld
push
mov
jo
ljmp
fisubrs
in
sub
mov
add
pushf
out
das
int3
or
fdivs
decl
add
add
out
mov
incl
add
mov
jnp
clc
and
call
add
xchg
sbb
push
mov
pop
xor
call
jl
cmpsl
add
jne
add
or
push
inc
add
add
or
add
sbb
out
add
call
inc
add
push
xchg
mov
add
adc
incl
movsb
add
cmc
idivb
xchg
add
and
aam
add
add
in
inc
add
pop
add
repnz
mov
xchg
xchg
pop
stos
cltd
loope
insb
cltd
and
lcall
ljmp
int3
jno
jmp
dec
mov
add
mov
add
add
xchg
sub
mov
add
fstl
lcall
clc
fs
pop
adc
add
scas
pop
sub
add
add
popf
cmpsl
add
adc
cmp
mov
inc
add
jl
sub
add
jns
test
add
jp
push
add
cmp
add
inc
add
inc
add
and
jge
add
aad
add
in
xchg
les
push
add
add
add
add
incl
or
add
jmp
adc
call
add
cmp
add
into
add
fdivrl
pusha
add
repz
add
add
add
jecxz
push
jo
lcall
push
js
cwtl
inc
add
pusha
add
lahf
in
mov
add
add
dec
loopne
mov
mov
jge
loope
and
dec
xchg
fsts
add
pusha
add
cmc
push
mov
addl
dec
add
cltd
outsl
mov
loop
mov
add
add
cmpsl
add
add
jge
inc
add
imul
addb
add
adc
std
pop
stc
push
or
add
dec
loop
xchg
dec
push
add
daa
add
add
add
cmp
add
sbb
fwait
decl
lds
push
add
lret
pop
cwtl
mov
outsl
shlb
add
jg
loope
bswap
clc
pop
add
fisubl
add
xor
decl
and
incl
mov
jne
add
xlat
sub
imul
jp
inc
add
add
jge
and
dec
jne
addl
push
add
pop
cmp
add
and
ljmp
inc
add
add
mov
stc
mov
rcrb
sbb
vmwrite
mov
add
sbb
fnstsw
mov
lcall
movb
add
fwait
lods
out
lea
insb
inc
add
mov
shll
add
add
decb
mov
call
xor
pop
mov
add
cmc
cmp
and
pushl
nop
aaa
int
add
lods
mov
add
inc
add
add
fldcw
int
mov
jb
mov
cmp
cli
insb
addl
add
sub
add
push
mov
movsb
add
ds
dec
jnp
jns
add
or
inc
add
sbb
push
aad
xor
adc
add
mov
or
add
sub
mov
lcall
or
jle
add
jmp
add
lock
push
jecxz
mov
lret
jb
mov
dec
xchg
shlb
call
ja
add
push
add
mov
add
scas
sbb
rol
add
add
add
repz
add
sub
add
and
icebp
in
and
add
add
cmpsl
add
cmp
stos
xor
dec
inc
add
xchg
test
add
pop
ficompl
add
ljmp
add
jg
jno
ljmp
aas
jmp
cmpsb
add
add
pop
nop
stc
icebp
mov
fwait
outsl
sbb
add
lcall
scas
cltd
or
je
outsl
push
fcmovbe
mov
in
ficompl
xchg
dec
xor
add
gs
rolb
add
push
add
push
pop
stos
add
mov
cmp
add
jnp
add
es
add
jbe
dec
xor
iret
insb
fcmove
lods
and
incl
outsl
and
mov
sbb
mov
add
xchg
jo
jl
add
xchg
dec
cli
addl
fimuls
push
in
or
add
dec
neg
jecxz
fmulp
lret
mov
mov
shlb
add
cmp
add
sti
sub
adc
incl
jns
add
movl
ret
add
sub
dec
mov
mov
popf
dec
data16
addb
push
xchg
pop
ret
add
pop
dec
sarl
sbb
dec
pop
mov
add
pop
aaa
addl
xchg
lods
push
or
out
fwait
pop
inc
add
aaa
fisttpl
call
xchg
add
call
add
out
inc
add
cltd
aas
push
add
in
into
mov
add
add
pushl
push
add
mov
and
jmp
add
mov
js
fcmove
jle
icebp
pushf
inc
add
cld
xchg
push
add
mov
arpl
push
or
mov
sub
test
das
roll
movl
mov
add
cmp
and
stc
sub
das
mov
mov
addl
add
cmp
inc
add
push
rcl
mov
cmp
cmp
jnp
movsl
add
cld
xchg
loop
fcmovnbe
and
pushl
rolb
adc
loop
cld
lods
sbb
add
add
jne
xchg
mov
cmpsl
add
loop
out
out
mov
popa
add
xchg
addb
repnz
data16
sbb
lods
icebp
add
or
pushl
fdivp
xor
cmp
call
jmp
add
stos
cmp
fidivl
lret
add
in
push
lds
je
add
add
add
add
mov
xchg
dec
mov
add
add
sbb
add
insb
filds
add
sub
add
sub
jmp
popa
add
out
hlt
mov
add
adc
push
cmp
add
fidivrl
add
fsubs
add
shr
and
call
unpckhps
lods
addr16
jge
add
jns
test
scas
mov
addl
sub
push
add
imul
add
sub
inc
add
sub
inc
add
push
add
dec
sbb
pop
adc
loope
mov
adc
pushl
add
divl
jge
popf
jo
jmp
sub
cmp
or
add
scas
out
and
incl
add
dec
mov
ficomps
inc
add
nop
scas
jp
add
push
int
xchg
cwtl
jmp
add
das
jecxz
sub
add
call
pusha
add
jno
decl
dec
sahf
jecxz
adc
lcall
or
add
int3
jo
ljmp
cwtl
filds
cmc
leave
add
dec
sbb
lcall
shrd
jp
out
popl
push
add
fsubr
in
inc
add
add
jmp
les
cltd
cmp
add
jb
pushl
add
fdivrl
fwait
adc
lcall
xchg
nop
into
adc
decl
daa
add
mov
add
leave
aas
sti
mov
push
push
out
lea
sbb
add
cmp
addl
push
lcall
xor
mov
xchg
aaa
jno
pushl
ljmp
arpl
ljmp
mov
mov
out
shl
add
adc
lcall
lahf
test
scas
pop
mov
and
ljmp
add
jmp
add
jmp
add
add
clc
push
add
dec
fidivrs
or
cld
imul
add
add
add
movl
xchg
loope
mov
add
push
ljmp
mov
or
add
inc
add
add
call
aam
jae
pop
nop
fmuls
lret
sub
lcall
imul
dec
les
enter
loope
lret
cli
push
add
or
add
and
decl
xlat
lret
add
lret
and
incl
add
dec
nop
adc
add
and
call
mov
add
mov
test
bound
incl
add
add
push
clc
leave
xchg
or
push
repnz
add
add
add
xor
add
add
iret
dec
xor
fdivp
lret
pop
addb
daa
add
mov
movsb
add
or
add
jmp
pop
icebp
pop
movsl
add
add
add
and
and
iret
sbb
add
push
xor
incl
add
or
inc
add
add
add
inc
add
int3
test
enter
add
hlt
addb
add
test
div
iret
jecxz
addl
jle
add
in
out
cmc
mov
icebp
daa
add
add
add
leave
xchg
stos
test
jecxz
dec
rclb
mov
jge
add
scas
sub
dec
sbb
dec
and
lcall
xor
dec
movsl
add
push
add
mov
call
jge
stos
stc
mov
in
mov
add
mov
inc
add
xchg
pop
jno
incl
shll
inc
add
sbb
dec
fbld
add
cltd
jle,pn
enter
mov
shrb
out
mov
addl
add
xor
add
call
add
fmull
fdivs
out
dec
popa
add
add
frstor
inc
add
aad
xor
cmpsl
add
add
add
add
ljmp
cltd
jo
pushl
incl
pushl
push
data16
xlat
cmp
add
test
and
pushl
ljmp
add
sbb
sahf
mov
and
jmp
ljmp
add
add
add
inc
add
stos
imul
xlat
pop
loope
push
and
movsb
add
sbb
cltd
mov
mov
add
addl
cmp
add
xlat
push
sarl
pop
cmp
jmp
add
je
addl
pop
and
pushl
add
xor
mov
inc
add
add
stc
lds
adc
jg
xchg
loop
fwait
mov
mov
jbe
cmp
shrl
aam
test
scas
jae
decl
loop
data16
add
push
rcl
addl
add
or
add
mov
fldlg2
xchg
cld
lods
inc
add
jo
js
mov
add
push
pop
arpl
jmp
call
pop
xchg
addb
add
add
or
add
xor
decl
loope
cmpsl
add
rorl
push
add
ja
pop
test
push
xor
call
dec
cmp
enter
mov
cmp
aam
data16
add
add
pop
xor
in
test
scas
sbb
jbe
add
dec
inc
add
or
add
movsl
add
add
and
ljmp
xor
inc
add
or
add
movsb
add
add
add
out
out
add
std
movsb
add
add
push
and
jmp
add
sbb
jo
ljmp
test
addb
xchg
arpl
decl
add
call
std
das
push
add
lahf
ss
jnp
adc
jmp
jle
pop
popf
sub
cmp
int3
lds
fstpt
fnsave
add
mov
sub
rolb
add
add
imul
lds
mov
test
or
add
lods
jnp
push
lods
roll
xchg
insb
add
decl
xchg
xchg
cmp
aad
js
adc
ljmp
add
lods
or
xchg
jge
repnz
shlb
add
add
pop
cs
add
push
add
bound
ljmp
add
add
add
shll
pushl
add
mov
mov
lds
mov
aaa
imul
sti
pushf
stos
jmp
roll
add
xor
decl
xchg
push
push
add
xlat
mov
dec
xchg
xor
addb
lods
fnstcw
dec
icebp
outsb
sbb
cmc
daa
add
aam
icebp
xor
mov
or
add
add
mov
push
sti
into
mov
and
dec
aas
jle
xchg
dec
push
inc
add
mov
add
mov
ljmp
pop
add
mov
inc
add
rolb
movb
inc
add
roll
cmp
pop
xchg
mov
incl
add
dec
pop
add
dec
inc
add
cwtl
inc
add
lcall
xor
rolb
leave
data16
sub
add
pop
pushf
call
or
jae
in
icebp
in
xchg
movsb
add
add
iret
pop
add
pop
push
pop
fistps
movl
add
add
je
cmpsb
add
add
or
add
xchg
icebp
adc
decl
lods
adc
add
incl
add
push
sub
inc
add
imul
or
mov
add
sub
lret
loope
cwtl
scas
into
inc
add
icebp
aaa
jle
push
push
add
xlat
add
add
cmp
add
test
loop
mov
repnz
popa
add
jnp
add
xor
incl
add
out
jno
incl
push
sbb
xor
decl
jg
lods
xchg
xchg
fiaddl
and
repnz
push
in
xor
jmp
lds
sbb
repz
add
lcall
movsb
add
ss
add
scas
xchg
bound
dec
das
mov
mov
in
cmpsl
add
cmp
cmp
add
add
cld
jecxz
push
nop
fwait
rolb
add
pop
addl
mov
mull
add
mov
fwait
mov
add
or
add
inc
add
arpl
incl
xchg
pushf
mov
and
dec
xchg
insb
js
add
pop
cmpsb
add
aas
pop
sub
enter
repnz
add
lret
imul
mov
add
mov
add
out
call
xchg
jge
les
cs
jge
dec
mov
ljmp
loope
fidivrl
lcall
in
push
mov
add
jmp
add
dec
stc
cmp
or
rolb
pop
mov
lcall
fists
add
dec
inc
add
add
pop
js
add
and
out
lcall
add
mov
add
add
jmp
add
mov
into
addb
add
pop
jns
mov
add
inc
add
add
sub
stc
nop
pop
imul
push
add
ficoml
jmp
incl
add
fwait
push
loop
repnz
addl
das
push
les
jno
incl
add
ljmp
jmp
mov
cli
popl
add
push
add
into
and
jmp
dec
adc
call
add
imul
mull
jmp
decl
cmp
inc
add
lcall
add
lahf
cltd
lcall
test
add
add
add
ret
add
ljmp
add
les
outsb
inc
add
dec
inc
add
test
add
fisubrl
add
mov
aad
call
add
mov
mov
add
add
mov
insb
and
ror
mov
or
push
add
rolb
xchg
xchg
sahf
add
mov
or
cmp
pop
cmp
loopne
add
cmp
test
jmp
add
aaa
rcrb
add
into
popa
add
out
test
jmp
xchg
out
lahf
into
cs
add
fisubrs
fld
add
fs
add
push
add
mov
pop
dec
jae
call
mov
lcall
push
pop
add
cmpsb
add
add
mov
les
xchg
xor
add
cmp
add
int3
int3
pop
ret
fcoms
pushl
mov
mov
aam
adc
dec
mov
push
add
mov
fildl
jp
mov
or
add
add
add
sub
add
es
add
adc
test
cld
pop
addb
adc
call
mov
adc
mov
mov
iret
dec
mov
jae
pushl
add
fnstcw
add
ljmp
iret
mov
add
lds
cmp
scas
push
decl
add
ja
movsb
add
jmp
push
pop
add
add
repnz
lret
ret
add
or
shrl
add
lcall
addl
divl
add
mov
sub
add
or
add
insl
aad
add
or
decl
sub
sbb
add
cld
xchg
imul
push
lds
jnp
add
dec
jb
decl
inc
add
add
adc
decl
pop
add
leave
ds
jnp
mov
call
add
pusha
add
jmp
add
jle
mov
push
pop
loopne
mov
lcall
jne
addl
pop
pop
flds
out
or
add
cwtl
mov
add
inc
add
adc
incl
add
stos
xchg
ljmp
or
mov
xor
jmp
add
inc
add
mov
add
pop
mov
add
inc
add
push
roll
les
pop
pusha
add
mov
add
call
mov
add
mov
push
add
in
lahf
inc
add
ret
xchg
ret
add
hlt
movl
add
push
das
les
rorl
lds
scas
pop
xor
lds
dec
sbb
add
nop
jo
dec
test
xchg
sub
add
cmp
sub
jns
cmp
loopne
fsts
pushl
add
popa
add
add
adc
jmp
jmp
dec
pop
and
push
ret
sub
sti
jo
incl
pushl
add
adc
outsl
add
call
incl
jmp
add
push
add
std
mov
fbld
call
cmp
add
inc
add
push
add
inc
add
mov
ja
add
add
xchg
stos
out
insb
in
xlat
movsl
add
jmp
add
ret
add
add
ficomps
cmc
cmpsb
add
add
add
cmp
cs
pop
pop
adc
insb
fistl
add
xchg
nop
scas
div
xchg
push
mov
xchg
negl
add
inc
add
mov
enter
add
inc
add
call
inc
add
cli
fiaddl
xchg
push
add
fcoms
add
pop
cld
pop
add
add
add
cltd
jns
lahf
add
out
xchg
add
pushl
add
ret
add
mov
inc
add
xchg
fidivrl
push
xor
addl
lds
and
ljmp
lahf
adc
jmp
sub
aad
mov
jge
int
add
add
xchg
cmp
mov
imul
xlat
mov
add
insb
flds
add
fisubl
lcall
and
add
jmp
inc
add
jmp
add
add
jge
add
add
movb
add
add
test
xor
call
sub
push
or
dec
cmp
mov
ljmp
movl
cmp
sub
pop
jg
add
cmc
clc
mov
push
in
pop
test
out
and
pushl
add
xchg
insl
hlt
inc
add
or
test
add
fstpl
add
cli
clc
idiv
add
push
add
daa
add
jl
adc
call
mov
add
add
lea
test
dec
add
add
cmp
ljmp
sub
add
lret
pushl
shll
jnp
add
pop
sti
rolb
lahf
dec
mov
add
add
mov
sub
cmp
mov
add
sbb
add
int
dec
xchg
and
call
inc
add
test
sub
add
add
cmp
insb
and
dec
jne
sub
loop
mov
add
incl
add
addb
scas
push
add
enter
add
outsl
mov
push
lret
bswap
dec
test
rcl
int
add
add
jmp
add
mov
inc
add
push
outsb
dec
fwait
jmp
mov
add
les
pusha
add
pop
ret
add
pop
test
mov
test
add
sub
mov
rorl
xor
pushl
inc
add
out
in
jo
lcall
xchg
add
adc
incl
cmp
add
add
pushl
add
push
adc
test
shrl
add
loopne
xor
call
movsb
add
add
js
xchg
pop
lcall
add
add
repz
or
add
pushl
int3
inc
add
test
movb
add
movsb
add
add
add
inc
add
mov
add
add
push
add
movb
das
popa
add
lds
mov
mov
addb
dec
cltd
or
cmp
jge
addb
add
ret
push
mov
ret
push
and
lods
inc
add
lock
stos
cmc
jo
decl
scas
sbb
pop
mov
js
in
dec
and
fbstp
push
mov
jno
call
iret
movsl
add
mov
data16
xchg
pop
imul
lcall
cwtl
loop
cmpsb
add
inc
add
or
nop
add
add
insl
cmp
inc
add
mov
inc
add
add
add
in
sub
ds
add
jmp
add
inc
add
test
scas
and
dec
pop
cmp
jle
fs
inc
add
push
add
jmp
add
add
cmpsl
add
push
add
add
adc
add
inc
add
stc
mov
pop
ja
mov
mov
mov
int
add
cmp
ljmp
addl
sbb
adc
call
mov
add
pushl
cvtdq2ps
or
sub
add
jecxz
and
decl
push
test
faddl
add
cs
jbe
mov
xor
cmp
add
inc
add
add
mov
aam
or
cmp
call
les
leave
add
mov
mov
add
incl
add
jp
aas
cmp
xor
addb
leave
addb
add
enter
sub
add
cmp
fsubrl
mov
add
add
or
test
inc
add
in
mov
pop
push
das
and
sti
sbb
adc
js
sar
add
jnp
jnp
add
push
add
arpl
jmp
pop
mov
imul
and
jg
add
mov
mov
packssdw
js
add
fcmovu
mov
add
cmpsb
add
add
shl
add
and
decl
sti
pop
add
call
inc
add
and
jmp
add
pop
add
lcall
pushl
sbb
and
pushl
ret
int
add
jp
mov
rolb
cmpsb
add
sub
cmp
mov
add
in
mov
jge,pn
add
jmp
mov
jle
sbb
push
dec
fnstcw
sbb
add
dec
xchg
xor
lcall
add
jno
call
lret
loopne
xor
decl
add
adc
incl
add
jb
dec
aaa
repnz
outsb
xor
jmp
ljmp
add
ja
add
cmp
cmpsl
add
cmpsb
add
add
test
xchg
cmp
add
testb
aaa
mov
add
mov
jmp
cvtps2pd
add
lcall
mov
movb
add
incl
add
add
test
pop
dec
outsl
hlt
xchg
loopne
pop
add
std
jns
lret
cli
out
pop
addb
dec
and
mov
bound
decl
sahf
jp
sub
call
jp
dec
or
outsb
or
lds
mov
add
add
cwtl
leave
int
jbe
mov
addl
dec
addb
adc
xor
addb
xchg
and
clc
inc
add
add
pushl
push
fsubr
dec
sub
test
add
ljmp
add
lcall
add
ljmp
clc
adc
mov
jecxz
inc
add
test
jmp
ss
add
jno
call
add
lcall
pop
inc
add
add
pushl
dec
mov
add
adc
lcall
or
insb
je
add
cmp
add
cwtl
jg
int3
sbb
add
jp
jle
data16
cli
bound
inc
add
push
lods
add
dec
leave
ljmp
pop
pop
das
dec
jbe
add
sahf
scas
sub
adc
ljmp
mov
jp
add
add
addl
out
push
mov
add
xchg
test
add
bound
out
jg
add
and
jmp
add
add
xchg
sbb
inc
add
add
jmp
pushf
ss
add
mov
pop
add
shrl
add
incl
add
and
ljmp
in
xchg
xor
call
rclb
and
call
adc
incl
add
add
jmp
adc
call
mov
sbb
out
mov
add
add
add
in
leave
pop
cmp
add
jg
clc
scas
popf
mov
add
lret
cltd
mov
loope
pop
sub
dec
sub
inc
add
jmp
add
add
fwait
xchg
xchg
jmp
add
add
add
pushf
pop
push
cmp
xlat
stc
mov
fsubr
stos
adc
ljmp
imulb
add
and
jle
mov
add
push
add
or
add
bound
call
add
pusha
add
xchg
xor
incl
xor
call
incl
pop
popa
add
jo
call
cli
loope
dec
test
and
lcall
adc
clc
push
add
add
push
pop
xchg
fwait
sub
add
pop
in
xchg
or
jb
jmp
add
xchg
ljmp
sbb
jmp
sub
dec
popa
add
dec
jnp,pn
mov
int3
cmp
add
outsb
enter
movl
js
add
push
in
adc
add
add
add
fnsave
js
add
call
add
sar
ljmp
adc
lcall
add
add
and
jmp
add
cmp
bndstx
adc
add
add
movb
sub
movl
add
add
and
incl
call
add
sti
lds
and
lcall
inc
add
cs
mov
add
add
ss
pop
jb
mov
add
scas
sbb
lcall
fwait
cmp
mov
popa
add
roll
lds
aaa
data16
add
mov
add
scas
jg
pop
fsubrl
xchg
loop
lret
mov
mov
stos
sbb
jge
push
add
push
add
movsl
add
ret
add
ljmp
mov
sub
and
decl
cmp
push
inc
add
mov
add
dec
movsl
add
add
cmpsl
add
imul
add
add
jmp
add
add
daa
add
jnp
add
push
or
call
ljmp
mov
in
xlat
out
xor
lcall
add
in
inc
add
lcall
or
jb
jmp
add
ss
add
push
add
in
leave
iret
mov
bsr
clc
xchg
test
sbb
add
jb
decl
add
or
sbb
mov
insb
dec
jle
add
call
xor
incl
add
xor
jo
cld
fwait
xor
ljmp
nop
dec
and
call
add
dec
sbb
add
rorl
add
xchg
sti
mov
xor
pushl
call
pushl
pop
dec
sub
idivb
xchg
pop
fimull
fldcw
pop
popa
add
or
popf
ret
inc
add
add
sbb
add
jo
incl
add
or
shll
add
outsl
dec
les
mov
cmp
cmp
ds
and
fsubs
jmp
pop
and
lcall
je
sub
jecxz
xor
incl
add
movsl
add
add
lahf
and
inc
add
add
push
test
ret
in
lods
push
es
icebp
les
push
adc
lcall
lahf
stos
add
adc
jno
ljmp
das
sti
xlat
loop
std
sub
add
bound
call
hlt
add
jmp
add
std
outsl
sbb
pop
cmp
popa
add
mov
and
mov
add
jecxz
js
xchg
fdivrs
pop
clc
fwait
jmp
iret
inc
add
mov
pop
dec
loope
sbb
add
icebp
fcmovne
cld
in
ss
dec
test
inc
add
cmp
jmp
sbb
and
incl
fdivs
dec
loope
sub
arpl
dec
add
jmp
add
js
xor
add
add
gs
clc
push
arpl
jmp
add
call
add
add
add
sbb
dec
jb
inc
add
add
rcrb
add
cmpsb
add
inc
add
adc
jmp
fldt
lds
test
add
sub
icebp
xchg
lret
add
mov
add
push
add
push
call
push
add
popf
jmp
push
nop
mov
nop
add
mov
push
add
addl
mov
add
insb
xor
lods
dec
out
add
xchg
dec
jno
jmp
add
add
adc
lcall
add
nop
sbb
push
xchg
push
sub
popl
xchg
dec
je
addl
sub
add
nop
jo
lcall
add
add
add
jb
pushl
mov
out
mov
add
addb
add
pop
pop
sub
jnp
push
lea
movsb
add
add
call
add
sub
jo
decl
mov
add
fidivl
jmp
add
test
lods
mov
popa
add
sahf
cmpsb
add
or
add
add
ja
mov
sbb
call
call
out
nop
and
xchg
rcr
sbb
stc
mov
fld
add
popa
add
movl
das
idivl
mov
add
stc
in
jmp
add
repz
push
push
arpl
incl
add
decl
adc
call
in
dec
dec
std
test
icebp
je
mov
dec
mov
inc
add
add
stc
pusha
add
xchg
nop
and
cmp
add
bound
incl
iret
roll
out
fisubrl
add
cs
sti
out
int
clc
inc
add
add
addl
add
push
addl
ja
rcrl
mull
mov
add
addl
add
cmc
adc
decl
jl
add
mov
add
dec
testb
sbb
in
dec
les
jp
xor
incl
call
add
xor
add
add
mov
pop
mov
stos
pop
xchg
fadds
add
data16
aaa
cmpsl
add
add
add
add
outsb
addb
je
addl
call
ret
add
mov
mov
push
in
cmp
add
rorl
dec
push
add
or
scas
xor
call
add
add
xor
call
fsub
add
rcll
mov
add
incl
add
call
xchg
insl
push
inc
add
xor
inc
add
push
shrb
dec
pop
add
add
inc
add
pushf
push
add
addl
add
pushl
in
sbb
add
add
sahf
cmpsb
add
sub
call
sbb
adc
jmp
add
outsl
addb
into
mov
or
or
push
add
stc
jl
add
clc
nop
fistl
decl
inc
add
add
pop
lret
or
jmp
xlat
push
jne
pop
and
dec
xchg
icebp
into
add
lods
push
add
inc
add
inc
add
add
js
std
sbb
pushl
sub
add
add
ljmp
add
inc
add
adc
dec
mov
sub
cmc
jo
jmp
dec
icebp
cld
bound
lcall
mov
xchg
jl
mov
push
or
jne
add
lcall
xor
decl
pushf
pop
sbb
add
add
aas
stos
jmp
das
repz
movl
add
inc
add
mov
enter
xor
pop
cmp
add
and
sbb
pop
dec
pushf
addl
aas
jle
add
js
add
loopne
movsl
add
mov
xchg
test
inc
add
xchg
ret
xor
add
test
lret
add
in
cld
repz
call
xchg
fisttpl
das
jns
xchg
cs
testl
jp
hlt
mov
ds
xchg
and
incl
add
movsl
add
add
in
inc
add
push
ljmp
push
jae
decl
or
dec
mov
fstps
add
add
mov
insb
test
sbb
cmp
add
add
les
and
sub
add
jno
lcall
movl
or
shll
xor
push
xor
add
addl
ret
add
pushl
add
ljmp
add
in
pop
loope
je
les
pop
inc
add
or
add
pop
aad
add
outsb
movl
loop
add
decl
push
jp
data16
daa
add
pop
mov
jg
add
mov
pushf
or
mov
fwait
add
push
test
js
add
loop,pt
nop
mov
ret
sbb
add
add
add
cmp
stos
or
jmp
add
scas
sub
call
bound
jmp
popf
call
add
push
movsb
add
ljmp
imul
in
mov
sub
mov
data16
in
pop
add
cmp
add
add
int3
leave
ja
mov
pop
add
pop
ja
mov
adc
call
add
in
cli
cmp
xchg
sub
ja
idivl
lds
ret
mov
mov
add
sbb
add
test
popa
add
faddl
add
lock
paddsw
xchg
repz
fmuls
jmp
add
test
and
aam
and
lcall
add
popf
push
ret
add
sub
mov
das
lds
roll
loope
cwtl
getsec
ret
pop
and
cmp
push
call
rolb
aaa
add
jmp
add
xchg
test
add
incl
mov
add
add
call
fldenv
add
jge
xchg
outsl
dec
and
or
xchg
das
push
add
add
mov
rcl
push
xchg
arpl
call
add
outsl
xchg
cld
push
add
adc
jae
call
lcall
xlat
jp
pop
movsl
add
test
adc
mov
fldt
xchg
loopne
adc
cld
lret
pop
addl
jne
add
and
ljmp
sub
movsl
add
push
add
and
pushl
cmp
add
pushl
ljmp
xlat
mov
roll
sbb
add
bound
inc
add
int3
push
push
fwait
addr16
lahf
enter
rcrl
movb
sbb
rcl
add
lcall
bound
jmp
add
ja
jge
add
testb
popf
add
ljmp
add
add
cltd
push
in
add
add
mov
add
sbb
cmp
mov
add
imul
add
incl
negb
push
add
or
jnp
inc
add
cmp
hlt
push
pusha
add
imul
les
add
jmp
push
add
sbb
rolb
add
jae
call
addb
add
lock
dec
outsb
test
dec
ss
es
push
jp
adc
fld
add
or
push
xchg
int3
mov
and
incl
add
xchg
lods
fildll
ds
add
cwtl
and
incl
add
addb
cmp
add
add
mov
pushl
add
jle
call
fcomps
cli
mov
jb
decl
and
lcall
lods
dec
nop
cwtl
in
lcall
dec
inc
add
dec
mov
inc
add
rclb
add
pcmpgtd
dec
addr16
adc
jns
mov
mov
add
add
add
add
mov
mov
xchg
aaa
and
incl
jmp
add
stos
xchg
push
movsl
add
add
add
add
pusha
add
into
and
mov
lods
pop
stos
dec
push
push
mov
xlat
cwtl
fwait
adc
fnstsw
addb
ja
mov
add
mov
js
add
test
and
fidivrs
addr16
sub
push
mov
mov
mov
add
call
add
cmp
add
fdivrl
insl
jg
pop
inc
add
add
add
incl
incl
add
sub
aaa
add
push
add
sub
ljmp
add
ljmp
xor
push
pop
mov
xchg
jp
nop
jnp
inc
add
das
sti
cmp
add
divb
add
mov
jb
incl
decl
cmpsb
add
jae
push
nop
xchg
fistps
mov
add
and
mov
js
add
roll
cmp
stos
and
ljmp
loope
pop
repz
pop
push
push
imul
lcall
es
int
dec
popf
std
xor
scas
sahf
out
frstor
add
fdivp
addb
add
add
les
push
addb
add
add
inc
add
test
push
lahf
lods
lahf
sub
jmp
add
add
push
adc
lcall
int
dec
xor
decl
pop
add
mov
fisubrs
push
xchg
outsb
mov
add
pop
push
roll
add
push
fisttps
add
add
add
xor
jmp
incl
jmp
add
call
ljmp
and
xor
add
stos
jo
incl
ljmp
fcoml
mov
mov
add
mov
aam
add
or
clc
sbb
add
pushf
loope
push
mov
in
sbb
add
and
lcall
out
imulb
add
ljmp
mov
add
jo
incl
add
jb
call
roll
add
xlat
loop
repnz
inc
add
sbb
lahf
mov
mulps
xor
imul
add
add
jge
add
lea
fwait
jle
cmp
mov
ss
incb
add
addb
add
add
inc
add
dec
pop
adc
inc
add
add
call
incb
imulb
cmp
lret
and
scas
mov
add
out
ds
fwait
mov
sti
shll
aas
std
test
in
test
lods
push
add
sub
sbb
dec
xchg
ss
inc
add
data16
cmp
add
leave
sbb
aam
add
cmc
lock
bound
mov
cmp
and
fidivrl
add
add
insl
imul
mov
add
out
xor
add
add
pushl
cmp
dec
ja
mov
fsub
add
cmpsl
add
add
sub
and
call
xchg
cmp
add
add
cs
add
and
lcall
mov
shrl
push
fwait
lahf
xor
jmp
cmpsl
add
aam
or
add
daa
add
add
jp
pop
add
push
add
fcompl
add
jl
dec
movsb
add
loope
or
test
aad
scas
scas
in
addb
mov
add
and
dec
aaa
adc
call
add
ret
and
call
jecxz
fldt
dec
movl
pop
mov
ljmp
xchg
lahf
adc
lcall
addl
mov
loop
in
outsb
movzwl
test
mov
jl
add
ljmp
dec
xchg
push
sub
add
jmp
jno
jmp
out
out
or
ljmp
ret
add
xchg
popa
add
negb
jecxz
and
decl
add
sub
add
pushl
imul
clc
lds
ds
push
cmp
add
sub
add
add
inc
add
add
add
add
nop
jmp
faddl
add
push
mov
add
add
jge
jmp
jle
jne
nop
jmp
aad
add
sbb
push
add
add
add
push
nop
jmp
test
pop
icebp
jle
dec
add
add
add
mov
nop
jmp
add
aaa
xor
add
push
mov
xchg
ret
adc
nop
jmp
add
add
add
addb
shr
nop
jmp
out
add
mov
nop
jmp
dec
add
mov
mov
mov
nop
jmp
sbb
aad
add
push
mov
enter
mov
icebp
out
add
imul
pushl
push
mov
xchg
ret
fucom
ret
add
push
xchg
inc
add
add
xchg
adc
jmp
add
add
push
mov
popa
add
test
test
push
add
nop
jmp
push
add
sbb
jne
nop
jmp
stos
add
add
mov
scas
inc
add
imul
xchg
ret
fstl
movsb
add
movsb
inc
add
add
and
push
push
mov
xchg
ret
adc
add
popa
nop
jmp
add
mov
add
ds
arpl
nop
jmp
add
imul
push
mov
xchg
ret
or
jno
incl
fbld
jmp
adc
lods
xor
add
daa
add
cld
or
pop
add
imul
push
mov
xchg
ret
fsub
cmp
add
nop
jmp
mov
aad
add
in
pop
push
mov
xchg
ret
sbb
add
stos
nop
jmp
loop
cmp
push
pop
add
sub
test
sbb
add
add
jle
adc
decl
push
nop
jmp
loopne
mov
add
nop
jmp
loop
jb
add
aas
add
icebp
nop
jmp
and
add
add
testl
scas
stos
add
ljmp
rclb
lock
inc
add
dec
xchg
dec
movzwl
nop
jmp
add
movzwl
nop
jmp
add
xchg
loop
add
imul
cmp
add
pop
add
aas
pop
add
sbb
nop
jmp
add
loopne
stos
mov
nop
jmp
stos
pop
mov
add
mov
div
nop
jmp
add
add
jnp
in
add
nop
jmp
add
xor
in
sbb
inc
or
add
and
jl
add
push
nop
jmp
aad
icebp
add
add
stos
add
add
mov
add
ret
nop
jmp
add
mov
loopne
js
movsl
add
mov
add
in
push
add
movzwl
nop
jmp
push
add
add
inc
add
push
add
out
add
add
pop
decb
int
add
add
loop
push
addl
inc
in
jmp
push
add
push
add
nop
jmp
fdivl
test
add
jmp
stos
cwtl
aaa
test
add
pause
jmp
add
add
and
sbb
sbb
mov
push
add
nop
jmp
aaa
add
mov
add
add
sub
jmp
faddl
add
gs
pop
loop
sbb
nop
jmp
adc
xchg
pop
pushl
nop
jmp
add
cwtl
loopne
add
pop
incl
js
xchg
add
add
adc
add
pop
inc
cwtl
loop
add
mov
mov
nop
jmp
adc
jle
add
and
call
ljmp
jmp
jle
add
jne,pt
nop
jmp
add
push
push
inc
add
jo
push
pop
add
push
mov
xchg
ret
mov
inc
imul
pop
add
add
mov
add
or
sub
and
fstl
out
pusha
push
mov
xchg
ret
add
aas
adc
add
add
add
call
nop
jmp
sub
add
sub
jmp
scas
add
fstpl
cwtl
push
add
push
mov
xchg
ret
add
pop
pop
mov
jae
jmp
add
loopne
ficoms
jmp
mov
add
add
add
stos
inc
add
add
add
add
jne
nop
jmp
add
add
add
add
xchg
movsl
add
call
cmpsl
add
jmp
add
or
add
inc
add
mov
nop
jmp
sub
aas
loop
add
lcall
ret
sbb
add
loop
jle
fwait
mov
push
mov
xchg
ret
add
nop
jmp
add
loopne
add
std
mov
nop
jmp
jnp
add
add
iret
pop
nop
jmp
call
js
add
je
nop
jmp
scas
stos
push
mov
add
fwait
call
nop
jmp
loop
add
cmp
jmp
add
icebp
jb
add
mov
nop
jmp
or
rolb
add
add
call
int3
jmp
nop
jmp
sub
add
nop
jmp
jb
scas
loop
add
imul
nop
jmp
pop
add
add
add
nop
jmp
cmp
add
cwtl
inc
mov
jmp
add
add
aad
xor
push
mov
xchg
ret
jl
scas
jmp
nop
jmp
push
add
add
xor
nop
jmp
inc
adc
xor
add
or
mov
xchg
ret
mov
add
jmp
and
pop
push
mov
xchg
ret
add
shlb
nop
jmp
add
add
pop
inc
jb
call
xlat
mov
sbb
add
loop
and
call
ljmp
jmp
push
adc
testl
movsl
inc
add
mov
add
add
add
jle
push
and
decl
add
mov
sub
movb
jmp
fldl
adc
lock
xor
nop
jmp
ds
add
out
sub
jne
call
add
add
add
cmp
add
inc
add
adc
pop
xor
nop
jmp
adc
loopne
jb
mov
add
nop
jmp
add
inc
add
or
add
add
add
nop
jmp
stos
js
cmp
push
xchg
add
movzwl
nop
jmp
mov
mov
jmp
add
add
or
jmp
add
add
jne
nop
jmp
add
add
imul
ljmp
js
aaa
add
fldl
jne
nop
jmp
xchg
push
aaa
mov
pop
mov
mov
add
add
stos
mov
ret
add
add
nop
jmp
or
add
jmp
add
jo
nop
jmp
loopne
jnp
add
adc
fld
nop
jmp
mov
add
adc
incl
add
sub
push
add
add
add
add
pop
mov
add
stos
sbb
inc
aad
add
clc
lcall
sbb
add
nop
jmp
add
loop
dec
mov
nop
jmp
cmp
adc
mov
lds
addl
nop
loope
jbe
mov
incl
stos
pop
add
fldl
stos
shr
push
mov
xchg
ret
ds
mov
nop
jmp
fldl
cmp
jne
nop
jmp
ljmp
push
push
mov
xchg
ret
xchg
xchg
lods
cmp
add
mov
nop
jmp
das
das
and
dec
push
nop
jmp
add
mov
add
imul
nop
jmp
popf
les
mov
ljmp
nop
jmp
test
aas
add
pushl
nop
jmp
add
jmp
call
incl
xchg
add
jmp
mov
and
jle
xchg
jl
add
inc
adc
add
or
mov
nop
jmp
stos
add
loopne
jl
pop
push
nop
jmp
test
add
add
lods
nop
jmp
jl
add
xchg
ljmp
push
mov
add
add
jmp
adc
pop
dec
lcall
incl
and
loopne
popa
add
and
loope
or
mov
xchg
ret
mov
adc
mov
add
nop
jmp
mov
add
pushl
or
add
add
seto
ret
call
jb
add
add
mov
add
nop
jmp
add
add
pop
push
mov
xchg
ret
add
adc
add
add
add
push
add
xchg
movl
mov
nop
jmp
mov
stos
das
pop
sbb
stc
call
add
addb
lods
nop
jmp
popf
xchg
pop
mov
mov
call
add
pop
popl
xchg
ret
add
add
xchg
cmp
and
add
call
add
add
pop
or
jmp
add
mov
nop
jmp
add
add
add
add
lock
jmp
add
mov
decb
jl
add
stos
ljmp
dec
imul
incl
mov
fstl
popa
fs
jmp
popf
and
xchg
inc
add
popf
adc
cltd
test
nop
jmp
ljmp
mov
in
adc
add
add
and
nop
jmp
add
fucomp
add
mov
nop
jmp
add
cmp
xchg
adc
nop
jmp
loopne
inc
add
add
inc
nop
jmp
out
xchg
ljmp
and
jmp
les
sbb
call
jbe
nop
jmp
js
mov
add
cltd
mov
nop
jmp
imul
nop
push
stc
push
push
mov
xchg
ret
add
jl
ljmp
add
push
xchg
xchg
add
add
add
nop
jmp
add
mov
adc
sbb
in
mov
add
pop
in
add
mov
call
incl
add
lea
push
mov
xchg
ret
add
jmp
add
fdivl
add
ret
shl
push
mov
xchg
ret
add
jle
add
add
nop
jmp
scas
add
gs
mov
nop
jmp
fucom
add
imul
inc
add
jnp
add
push
add
and
mov
xchg
ret
lods
icebp
imul
push
mov
xchg
ret
add
pusha
add
xchg
cmp
test
adc
add
add
sub
jmp
add
add
inc
add
stos
test
nop
jmp
add
add
rclb
push
nop
jmp
loop
add
aad
add
mov
nop
jmp
out
add
add
loop
ds
nop
jmp
add
adc
jbe
nop
jmp
sbb
aas
xchg
push
mov
inc
sbb
add
in
xchg
add
xchg
add
imul
adc
add
nop
jmp
add
add
aad
add
adc
push
popa
add
jecxz
mov
scas
enter
idiv
cmp
add
add
adc
ljmp
mov
or
jmp
add
xchg
add
das
or
jmp
add
add
dec
push
mov
xchg
ret
add
and
addl
sub
add
add
add
sahf
mov
nop
jmp
pop
add
xchg
imul
dec
nop
jmp
add
add
nop
jmp
add
jl
jle
add
xchg
scas
inc
add
in
sub
nop
jmp
xchg
lods
adc
push
xor
nop
jmp
and
loop
ljmp
jmp
and
jl
mov
nop
jmp
inc
add
add
nop
jmp
add
xchg
aas
scas
inc
add
add
pushl
mov
nop
jmp
stos
add
add
pop
ret
nop
jmp
loopne
add
jl
add
mov
add
add
add
lods
nop
jmp
mov
loop
add
and
nop
jmp
add
adc
jbe
nop
jmp
cmp
sbb
ljmp
nop
jmp
add
add
out
jmp
nop
jmp
out
loopne
pop
xchg
nop
jmp
loop
add
cmp
add
add
mov
nop
jmp
ljmp
push
mov
add
shlb
ss
ret
shlb
nop
jmp
add
add
mov
nop
jmp
add
add
nop
jmp
xchg
cmp
das
mov
push
mov
xchg
ret
pop
add
lsl
add
add
out
add
add
mov
xchg
ret
add
fiadds
popf
nop
jmp
fnstsw
add
cli
call
incl
mov
addr16
push
nop
jmp
xchg
aas
add
fadds
outsl
or
add
add
pop
xchg
add
jmp
add
add
pop
call
call
dec
mov
sub
movb
xchg
ret
aad
add
jmp
add
repnz
scas
mov
push
mov
xchg
ret
add
call
out
popa
add
enter
jbe
nop
jmp
push
imul
xorb
sbb
ljmp
jmp
sub
pop
icebp
pop
shr
nop
jmp
add
in
loop
mov
add
xor
nop
jmp
push
push
xchg
add
sbb
mov
add
add
and
add
add
jmp
and
add
add
add
add
jg
add
call
add
popf
dec
add
add
nop
jmp
adc
add
push
mov
xchg
ret
loopne
sub
mov
mov
xchg
ret
xchg
add
call
add
nop
jmp
add
adc
add
jns
cli
nop
jmp
sbb
adc
shr
nop
jmp
mov
add
jmp
imul
dec
add
nop
jmp
add
add
fwait
jne
nop
jmp
mov
adc
jmp
inc
add
lock
jmp
add
add
add
mov
xchg
ret
cmp
mov
and
call
add
add
add
scas
out
ljmp
jle
adc
add
dec
push
nop
jmp
add
mov
nop
jmp
inc
gs
add
add
push
add
and
ljmp
lret
nop
jmp
add
add
out
dec
lods
jne
nop
jmp
jl
stos
scas
decl
nop
jmp
add
sbb
aad
mov
pusha
nop
jmp
add
loop
add
call
call
add
and
add
nop
jmp
fucomp
add
add
je
nop
jmp
imul
movsl
add
add
add
nop
jmp
jle
add
add
inc
cmp
mov
xchg
ret
sbb
cmp
incl
add
sub
arpl
clc
lea
push
mov
xchg
ret
add
pop
add
or
adc
pop
fstl
add
cmp
nop
jmp
add
rolb
nop
jmp
adc
sub
add
add
aad
add
rorl
add
add
add
add
addb
mov
nop
jmp
mov
add
cld
incl
add
add
fucom
mov
add
jmp
jl
stos
arpl
incl
lcall
cmpw
nop
jmp
adc
popf
add
aad
add
nop
jmp
popf
cmp
loopne
push
add
nop
jmp
ljmp
add
push
add
loopne
stos
pusha
nop
jmp
add
inc
ja
mov
nop
jmp
add
ljmp
incl
sbb
inc
pop
mov
mov
nop
jmp
pop
add
add
push
xor
jmp
add
lea
nop
jmp
add
jnp,pt
push
nop
jmp
add
pop
inc
add
int3
xchg
nop
jmp
add
add
add
add
pop
nop
jmp
add
jb
add
mov
add
movl
add
nop
jmp
lods
fldl
stos
movsb
add
push
addb
add
nop
jmp
call
push
jmp
incl
add
das
aas
imul
sbb
incl
pop
mov
add
add
call
incl
add
cmp
movsb
nop
jmp
ljmp
mov
mov
nop
jmp
mov
push
add
adc
mov
and
and
add
nop
jmp
add
les
jbe
push
mov
xor
in
in
and
xchg
fwait
mov
nop
jmp
ds
inc
add
mov
nop
jmp
pop
sbb
out
xchg
repz
testl
nop
jmp
add
add
mov
nop
jmp
add
add
mov
nop
jmp
sbb
adc
pushl
push
mov
xchg
ret
xchg
add
add
push
arpl
call
mov
or
adc
loopne
add
lea
nop
jmp
add
js
das
loop
add
push
mov
xchg
ret
add
fistl
add
jle
add
ret
add
call
xchg
cwtl
adc
mov
nop
jmp
aas
cwtl
adc
mov
nop
jmp
mov
add
mov
nop
jmp
add
aaa
add
adc
out
add
nop
jmp
add
sbb
inc
lods
push
call
or
add
loop
sbb
adc
jne,pn
nop
jmp
add
sarb
test
jmp
add
add
mov
nop
jmp
ljmp
jae
jmp
add
push
mov
xchg
ret
adc
popa
nop
jmp
imul
pop
add
incl
incl
jmp
add
sahf
pop
nop
jmp
add
pop
push
mov
popa
lcall
add
lods
decl
push
mov
xchg
ret
add
add
xchg
not
sub
add
lcall
adc
add
add
mov
add
add
push
fisttpll
ljmp
loop
add
mov
add
inc
or
in
jne
add
push
mov
xchg
ret
add
pop
add
rep
nop
jmp
icebp
lods
add
scas
dec
test
add
add
out
shl
inc
add
jmp
in
add
nop
jmp
popf
mov
add
add
jmp
mov
js
adc
jg
mov
adc
jmp
sub
and
mov
jmp
add
add
add
test
imul
pop
clc
cmp
adc
add
popf
mov
nop
jmp
add
add
or
aas
fistl
mov
xchg
ret
mov
ds
xor
nop
jmp
add
cmc
push
push
push
mov
xchg
ret
xchg
push
add
in
cld
mov
nop
jmp
mov
mov
scas
add
mov
add
add
jmp
sbb
lods
lret
push
nop
jmp
mov
icebp
js
aaa
add
pop
push
mov
xchg
ret
add
add
jge
jb
add
nop
jmp
add
loopne
push
nop
jmp
add
pop
adc
add
jmp
test
add
loopne
cwtl
pop
pop
nop
jmp
or
mov
in
add
pop
addb
addl
add
add
adc
icebp
call
add
cwtl
jl
mov
nop
jmp
add
dec
jmp
nop
jmp
add
pop
addb
add
mov
push
mov
xchg
ret
add
add
ljmp
sub
add
incl
add
pop
add
incl
add
add
incl
add
pusha
nop
jmp
add
add
mov
fmull
pop
add
add
mov
add
inc
add
add
add
imul
push
cld
mov
nop
jmp
xor
loop
add
sub
push
nop
jmp
xchg
inc
loop
ds
add
sub
scas
incl
jnp
cwtl
add
add
push
nop
jmp
test
scas
add
cmp
nop
jmp
fucomp
scas
sbb
xchg
or
cmpsl
add
add
add
cld
nop
jmp
pop
add
add
das
pop
add
jmp
call
imul
push
mov
xchg
ret
add
mov
add
push
mov
inc
roll
shrb
add
mov
sub
nop
jmp
add
js
add
xchg
shr
mov
nop
jmp
cwtl
lods
add
cmp
aad
add
call
nop
jmp
loop
add
cmp
nop
jmp
js
xchg
xor
cltd
and
nop
jmp
mov
add
incl
loop
add
add
arpl
mov
or
add
call
outsl
cmp
push
mov
xchg
ret
call
nop
jmp
aad
scas
add
les
push
mov
xchg
ret
sbb
add
ljmp
nop
jmp
add
test
add
add
add
pushl
pop
and
incl
dec
push
nop
jmp
pop
add
fcompl
data16
ror
nop
jmp
adc
imul
pop
add
add
call
xor
inc
add
dec
add
nop
jmp
dec
add
popf
call
or
nop
jmp
pop
les
add
pushl
add
fwait
stos
nop
jmp
imul
add
sub
add
nop
jmp
add
cmc
lds
addb
mov
nop
jmp
jnp
jle
mov
cmpsb
inc
add
add
js
add
mov
nop
jmp
call
add
pusha
add
jnp
sti
nop
jmp
add
add
pop
sub
push
mov
xchg
ret
add
add
hlt
subl
nop
jmp
dec
xchg
add
dec
test
sub
push
mov
xchg
ret
icebp
test
adc
jp
nop
jmp
js
mov
add
pop
adc
add
test
lret
add
nop
jmp
add
add
add
add
nop
jmp
and
push
add
out
add
nop
jmp
call
rcll
ljmp
icebp
add
add
xchg
fmuls
jmp
mov
call
stos
stos
inc
add
in
out
test
nop
jmp
add
add
call
add
adc
add
xor
fnstcw
shll
loop
nop
jmp
icebp
mov
popf
add
push
inc
out
nop
jmp
cwtl
pop
test
call
jmp
cwtl
pop
add
gs
add
fiadds
or
add
add
pop
popf
add
add
nop
jmp
aad
fcoml
adc
ret
nop
jmp
add
js
add
mov
call
incl
les
add
pusha
nop
jmp
add
add
sbb
add
add
addl
add
call
ljmp
pushf
inc
add
inc
add
push
mov
leave
nop
jmp
add
add
mov
add
add
mov
push
mov
xchg
ret
add
adc
decl
mov
or
add
push
push
mov
xchg
ret
fldl
add
sbb
push
mov
xchg
ret
add
loop
push
mov
xchg
ret
pop
add
dec
mov
add
push
cwtl
mov
add
incl
add
add
add
sbb
nop
jmp
add
add
sub
add
inc
aaa
add
inc
add
lahf
jne
nop
jmp
aas
add
push
rclb
add
inc
add
add
rclb
add
call
jmp
add
add
mov
jmp
nop
jmp
ljmp
and
jmp
jl
push
js
mov
in
cli
incl
les
add
add
icebp
dec
shl
nop
jmp
add
test
lods
add
sub
push
mov
xchg
ret
push
adc
pop
add
push
nop
jmp
les
add
dec
add
sahf
inc
add
adc
jmp
xchg
inc
add
add
loop
add
push
mov
xchg
ret
mov
mov
add
adc
add
nop
jmp
cwtl
xchg
gs
inc
adc
jmp
jle
or
add
lret
inc
nop
jmp
js
add
add
pop
enter
jnp
incl
aad
jl
pop
add
test
jae
cmp
mov
sub
ret
call
jmp
sub
add
inc
add
aam
and
incl
adc
ljmp
add
push
push
mov
xchg
ret
add
in
push
push
mov
xchg
ret
mov
sbb
lret
jb,pt
nop
jmp
add
adc
pop
nop
jmp
add
stos
test
adc
jg
nop
jmp
add
test
jl
xchg
jo
lcall
je
nop
jmp
add
adc
add
jl
add
scas
inc
add
je
popa
nop
jmp
mov
add
jmp
nop
jmp
add
rorb
lock
jmp
pop
add
loop
add
add
sub
movb
mov
xchg
ret
lods
js
mov
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
dec
add
or
inc
xor
nop
jmp
add
out
lea
and
add
add
or
mov
push
mov
xchg
ret
add
arpl
inc
add
add
inc
add
outsl
add
push
mov
xchg
ret
adc
jmp
mov
pop
loop
mov
js
add
add
inc
add
add
adc
test
call
add
push
add
mov
nop
jmp
add
cwtl
fstl
push
nop
jmp
in
add
pop
push
mov
cmpsb
stc
add
add
add
inc
test
mov
je
call
pushl
add
call
out
lcall
dec
add
adc
sub
add
xchg
add
inc
in
call
incl
jle
pop
mov
inc
sbb
adc
add
nop
push
mov
nop
jmp
loop
add
push
std
add
push
mov
xchg
ret
pop
js
add
mov
nop
jmp
loopne
jb
ja
lcall
inc
add
jle
lea
nop
jmp
adc
test
loopne
call
incl
adc
sub
ljmp
cmp
add
jns
dec
add
push
cwtl
mov
add
add
das
add
add
pop
add
popf
mov
mov
jmp
les
pop
nop
jmp
mov
add
aas
jb
mov
add
jns
mov
add
add
testl
add
incl
add
les
call
call
incl
add
adc
mov
nop
jmp
add
or
mov
cmp
mov
popf
xchg
and
xchg
inc
add
cmp
nop
jmp
loop
or
icebp
xchg
pop
push
push
mov
xchg
ret
fnsave
sbb
mov
xchg
ret
add
adc
add
xor
inc
add
and
nop
jmp
adc
add
call
jmp
add
jl
loop
add
or
add
add
xchg
cmc
es
addb
push
nop
jmp
stos
aad
add
add
add
scas
inc
add
push
jle
jmp
jmp
das
add
icebp
mov
xchg
adc
inc
jb
nop
jmp
xchg
add
add
es
aaa
call
jmp
mov
stos
mov
add
add
nop
jmp
mov
add
loop
push
mov
xchg
ret
add
int3
je
nop
jmp
mov
aas
mov
add
nop
jmp
loop
add
add
push
imul
cmc
call
jmp
sub
push
nop
jmp
add
faddl
pop
pop
add
fimuls
hlt
jmp
sbb
pop
add
add
add
fucomi
mov
jmp
lods
add
or
jge
adc
nop
jmp
adc
push
push
add
mov
call
jl
add
nop
jmp
loop
add
scas
imul
sbb
incl
add
jb
bnd
inc
and
nop
jmp
xchg
add
dec
je
nop
jmp
imul
sub
sbb
lcall
add
mov
movsl
add
inc
nop
jmp
aad
loop
cmp
jmp
add
add
rep
nop
jmp
mov
call
add
nop
jmp
add
dec
mov
push
mov
xchg
ret
loopne
popf
popa
add
roll
push
push
mov
xchg
ret
add
mov
sub
pause
jmp
jl
or
pop
pop
xchg
adc
ljmp
mov
jmp
add
loop
push
add
dec
rep
nop
jmp
add
add
nop
jmp
add
add
jb
add
jp
lret
adc
lcall
add
add
jmp
jl
cwtl
add
add
add
incl
bound
decl
nop
jmp
mov
add
xor
jmp
cmpsb
add
jmp
js
add
add
call
cwtl
inc
add
mov
insb
push
nop
jmp
jl
fldl
xchg
add
add
jg
nop
jmp
mov
in
add
push
nop
jmp
add
fisttps
mov
scas
out
ljmp
sbb
nop
jmp
add
and
test
incl
add
out
push
add
add
mov
nop
jmp
les
add
imul
nop
jmp
add
add
movb
mov
ds
push
adc
jg
jmp
sub
sbb
call
shl
add
jmp
dec
sub
and
call
add
dec
push
push
mov
xchg
ret
scas
pop
add
mov
and
mov
mov
nop
jmp
add
push
iret
add
nop
jmp
add
add
rclb
jb
add
mov
stos
fsubr
push
loopne
call
ljmp
loop
xchg
inc
add
add
push
push
mov
xchg
ret
add
add
dec
cmp
jmp
sbb
add
nop
jmp
add
loopne
add
or
push
mov
xchg
ret
add
add
push
mov
xchg
ret
cmp
add
dec
stos
nop
jmp
pop
add
add
adc
pusha
mov
add
add
jg
nop
jmp
loop
popf
xchg
add
das
mov
nop
jmp
stos
add
mov
push
faddl
das
lods
adc
jl
jne
nop
jmp
stos
ljmp
les
nop
jmp
add
adc
ljmp
cmp
jmp
aas
mov
xchg
mov
pop
xor
nop
jmp
cwtl
add
add
incl
jmp
add
add
pop
add
nop
jmp
jle
add
add
dec
test
push
mov
xchg
ret
add
decl
jmp
jmp
add
aad
add
int
add
aas
movsl
inc
add
loop
pop
lea
nop
jmp
adc
push
add
jmp
lock
nop
jmp
add
add
add
dec
popa
nop
jmp
jl
add
add
add
jmp
add
dec
pop
nop
jmp
mov
add
add
mov
aaa
push
add
and
push
add
nop
jmp
push
pop
add
add
add
daa
add
sahf
inc
add
pop
adc
mov
call
incl
mov
loop
add
call
add
add
add
jns
rclb
stos
aaa
push
mov
imul
cli
movsb
rclb
enter
add
push
add
add
mov
ss
add
jo
pushl
rolb
add
pushf
loopne
jnp
add
decl
jp
add
sub
les
lahf
jo
pushl
add
shrb
in
sub
add
or
rcrl
jl
sahf
mov
xchg
not
repnz
cmp
add
sbb
sbb
add
xchg
test
add
push
add
add
jmp
add
daa
add
test
cmp
push
scas
jo
jmp
xor
jmp
add
sub
cmp
stos
enter
flds
cmpsl
add
icebp
js
js
xlat
daa
add
mov
out
mov
sbb
imulb
add
in
adc
ljmp
or
das
cmp
jne
add
adc
fxam
add
add
das
ret
add
adc
add
add
fildl
pop
dec
fcoms
ljmp
xchg
sub
call
add
and
decl
sub
jmp
add
pop
push
int3
xchg
lea
addb
mov
rolb
push
add
shl
sbb
incl
jle
add
or
cs
inc
add
pushl
decl
add
xor
incl
jmp
add
dec
add
cld
ds
lds
xor
pushl
decl
test
xchg
ret
add
call
push
or
push
add
mov
incl
ficoms
call
ljmp
adc
lcall
add
push
cmp
ss
mov
dec
das
push
push
add
jge
icebp
das
movb
add
mov
inc
add
add
sub
add
add
ljmp
pushl
jl
scas
mov
add
add
dec
mov
cmp
add
mov
addl
push
add
in
data16
add
push
pop
icebp
push
add
or
sbb
test
xchg
mov
jne
add
jl
lahf
sub
add
out
js
sub
lds
cwtl
cld
nop
ud0
fdivrs
adc
mov
add
add
lret
lds
xchg
movsl
add
add
add
mov
add
sbb
ffree
add
stc
mov
pop
push
add
xor
call
add
xor
or
xchg
adc
call
add
and
pop
push
xor
ljmp
sbb
loop
addl
aaa
roll
and
inc
add
inc
add
mov
add
xchg
add
sbb
sub
mov
fs
imul
mov
dec
dec
push
addb
or
jg
js
mov
add
add
out
dec
dec
insl
nop
stc
mov
decl
add
bound
pushl
inc
add
hlt
int3
nop
scas
and
jb
jmp
leave
xchg
mov
fsubrs
push
inc
add
loop
lahf
ja
inc
add
add
mov
add
inc
add
dec
aas
das
cs
push
popa
add
ss
loop
xchg
push
push
cmp
iret
add
rolb
jne
add
movb
aas
or
dec
call
sub
jnp
xchg
sub
ljmp
dec
mov
dec
movl
rolb
lret
add
incl
add
mov
sbb
rorl
xor
lcall
ficoms
xor
add
add
jmp
adc
aaa
arpl
jmp
decl
jae
call
roll
out
dec
xchg
or
inc
add
jae
jmp
add
push
or
pushl
ds
into
sub
pop
push
add
testb
add
ljmp
adc
ljmp
pop
add
xchg
mov
inc
add
dec
pop
jne
add
add
add
js
push
in
ret
add
pop
imul
add
jge
and
incl
jmp
ds
iret
mov
out
mov
add
sti
fsts
ljmp
test
sbb
cmc
jge
add
add
add
cld
mov
cmp
adc
lcall
out
jnp
xchg
dec
sahf
rolb
data16
out
repnz
pop
daa
add
in
shlb
inc
add
in
add
call
xor
jmp
add
lcall
cmpsb
add
aas
mov
add
add
mov
rcll
add
add
cmp
cwtl
inc
add
xchg
xor
ljmp
add
xchg
adc
rol
add
cld
or
dec
mov
or
movb
jl
jge
add
jge
add
push
les
mov
add
adc
sub
add
addl
add
daa
add
mov
add
pushf
sbb
out
add
jmp
add
add
pushf
sbb
fcmovb
add
outsb
inc
add
and
jmp
or
push
jmp
icebp
sub
iret
sub
or
repnz
push
add
cltd
stos
cmpsl
add
add
xchg
fistpl
inc
add
mov
add
decl
push
aad
push
add
mov
pushf
mov
cmp
mov
stos
xchg
aam
sahf
mov
pop
mov
call
xchg
and
lcall
add
add
out
test
nop
adc
in
add
and
dec
add
out
pop
xchg
add
roll
sbb
add
imul
pusha
add
dec
roll
and
add
jmp
xchg
in
sbb
add
loopne
loope
loop
dec
fildll
in
das
fmulp
loopne
mov
daa
add
add
push
add
xlat
roll
jmp
add
add
fwait
repnz
mov
add
stos
addb
or
sub
add
shl
divl
pop
push
add
pop
ja
add
add
add
lcall
mov
xlat
mov
lds
adc
jbe
out
jge
add
roll
add
and
jmp
add
xor
jp
add
add
aam
int3
or
fstpt
into
xchg
les
mov
mov
aad
add
fiaddl
xlat
fimuls
add
fimuls
mov
int3
inc
add
add
add
divl
incl
xchg
fwait
mov
push
jo
ljmp
lcall
movsl
add
jl
arpl
ljmp
jbe
add
icebp
fldt
jo
decl
aaa
mov
movsl
add
in
outsl
adc
call
add
out
and
jp
jg
add
add
out
rcl
push
add
add
in
int
dec
mov
xchg
pop
add
stos
mov
add
jle
push
shll
sbb
xchg
hlt
xchg
mov
add
out
test
fadds
add
or
sti
cmp
lods
pop
mov
sar
push
add
ja
add
xchg
insb
movb
roll
addb
add
xor
ljmp
or
pushl
movsb
add
lret
pop
jmp
movsl
add
add
xchg
pushf
xor
jmp
sbb
out
divb
pushl
add
inc
add
pop
imul
mov
add
xchg
cmc
cmc
pop
and
jmp
add
add
add
addl
add
sbb
add
inc
add
cs
adc
add
pop
shr
sahf
pop
iret
and
incl
mov
add
mov
add
add
lret
add
add
js
add
jnp
add
inc
add
add
pusha
add
mov
add
pop
mov
pushl
mov
loop
scas
mov
add
pushf
pusha
add
int3
insl
sahf
stos
dec
adc
add
push
add
cmp
adc
lcall
mov
jno
decl
sub
aas
rcrb
add
mov
cmp
cltd
add
mov
lods
out
sub
pop
jge
add
add
popf
add
call
add
nop
call
add
pop
movl
mov
cld
mov
mov
mov
ljmp
add
aad
loopne
in
add
adc
pop
stc
inc
add
icebp
insl
add
jp
fcomps
add
or
test
add
cld
cmp
jne
add
incl
add
jb
call
test
aaa
dec
roll
add
add
mov
add
add
jl
mov
dec
mov
popa
add
imul
daa
add
add
push
clc
dec
sub
add
outsb
and
ljmp
or
adc
jmp
sahf
inc
add
stc
ljmp
add
sub
add
push
leave
pop
lods
push
add
xor
jmp
add
dec
and
call
lcall
dec
mov
scas
imul
and
pushl
test
rcrb
notb
add
out
lahf
or
cmp
aam
xchg
in
dec
jg
add
incl
fisubs
cltd
xchg
push
add
outsl
cmp
add
fsts
test
cmp
push
add
mov
add
mov
add
inc
add
arpl
mov
aaa
xchg
mov
add
lret
icebp
sbb
add
lret
es
add
add
outsb
mov
add
rcrb
add
xor
push
in
mov
inc
add
stc
sti
in
testl
add
inc
add
hlt
out
shll
cwtl
jl
and
ljmp
aad
add
shrb
hlt
lahf
cld
adc
push
pop
pop
pop
add
jne
inc
add
add
outsb
xor
call
jmp
xor
jmp
cltd
mov
add
leave
lret
aam
cmp
push
add
aam
mov
and
mov
or
jmp
ljmp
mov
xor
call
adc
decl
add
ljmp
pop
add
jmp
push
sbb
jge
inc
add
fildll
add
lcall
arpl
lcall
add
add
add
add
mov
ljmp
push
clc
popa
add
or
enter
add
pushl
add
mov
clc
add
pushl
add
loope
sti
ds
add
jno
jmp
add
movsl
add
addb
mov
add
data16
mov
add
or
mov
jle
roll
nop
loop
pop
popf
add
inc
add
jmp
add
add
ljmp
push
movb
add
decl
popf
mov
addl
addb
push
cmp
adc
lock
in
pusha
add
push
cmc
testl
xchg
hlt
jne
lods
arpl
push
mov
add
push
mov
add
add
lea
xor
ljmp
cltd
lods
dec
std
mov
xor
add
mov
dec
xor
decl
add
sub
addl
cs
xchg
fwait
call
add
pushl
call
add
and
xchg
and
ljmp
lds
and
roll
ret
add
push
add
add
lret
add
ret
add
jp
mov
add
add
in
imul
add
sti
cmp
pushl
jo
call
add
lods
and
movsl
add
mov
lcall
mov
pop
outsb
jb
jge
fldl
jb
out
out
fcom
idivb
hlt
arpl
call
addr16
jle
fidivs
lcall
add
in
ljmp
ja
add
imul
and
jmp
add
call
jmp
pop
and
jmp
push
out
pop
sarb
addb
add
and
dec
sbb
addb
add
adc
jp
loopne
shll
enter
inc
add
repnz
sub
call
js
add
push
add
sbb
outsb
inc
add
add
les
pop
ss
setnp
addb
lock
ljmp
stc
data16
pop
add
add
ds
cwtl
mov
lahf
imul
add
adc
add
jae
push
xor
pushl
ds
popa
add
loopne
push
ljmp
ljmp
add
sub
add
fcmovb
add
cmp
mov
mov
test
push
add
cld
adc
jns
imul
ret
add
std
iret
mov
add
add
add
add
dec
insl
adc
decl
data16
add
inc
add
dec
mov
pop
mov
in
jmp
xchg
jo
jmp
add
decl
std
sub
shlb
add
mov
add
add
notl
lcall
call
xor
std
scas
jg
add
add
mov
addr16
sbb
mov
and
inc
add
mov
sub
add
cmpsb
add
xor
pop
pop
add
jmp
inc
add
cmp
pop
add
mov
call
ss
mov
add
fbstp
add
cwtl
test
jl
add
js
or
add
add
mov
repnz
add
std
rcrl
mov
frstor
add
stos
rolb
mov
loop
int
push
js
add
or
add
xchg
cli
jbe
push
add
loope
inc
add
fiaddl
add
mov
push
add
cwtl
adc
jmp
cmp
aam
pushf
sub
mov
lds
outsb
hlt
dec
pop
cmc
push
mov
mov
lods
loope
sti
inc
add
stos
insb
mov
push
add
clc
aam
add
decl
cmp
ljmp
xchg
hlt
aaa
int
add
loope
scas
dec
xor
decl
loop
mov
in
add
add
lcall
imul
dec
std
and
lcall
and
call
add
aad
push
add
gs
adc
cmp
xchg
push
add
mov
outsb
sbb
mov
xchg
and
incl
inc
add
je
add
push
cmp
add
je
mov
add
xlat
cwtl
push
pop
add
cmp
mov
lcall
add
into
mov
pop
add
cli
pop
adc
ljmp
add
sub
add
aam
iret
into
jbe
jle
dec
xor
call
add
or
into
xchg
dec
test
add
add
movl
addb
addb
inc
add
mov
repz
and
cmp
cli
cmp
jle
add
add
add
add
les
add
add
incl
imul
pop
jecxz
cs
add
jnp
dec
xor
decl
add
ss
adc
jecxz
ds
in
dec
aaa
int
leave
fsubl
add
pusha
add
push
add
je
push
mov
inc
add
jno
jmp
add
aad
add
movsb
add
dec
push
mov
or
add
daa
add
sbb
add
ss
xchg
jb
incl
ljmp
ja
inc
add
je
ret
pushf
addb
pop
add
addb
data16
push
mov
aad
jmp
call
fcmovbe
rolb
xchg
cli
add
or
or
jmp
add
ss
cmp
inc
add
mov
lds
inc
add
psubb
xor
jmp
add
lret
scas
jge,pt
js
repnz
xchg
int
add
add
cmp
push
push
addl
dec
fmul
repnz
aas
fstpt
ja
lret
mov
cmc
mov
jo
inc
add
add
jle
jnp
lahf
lret
mov
push
insl
adc
lods
lret
sub
mov
std
dec
mov
dec
mov
pop
push
push
or
add
ret
add
add
mov
xor
jmp
call
xchg
inc
add
and
je
adc
lods
cli
add
push
jg
sub
add
pop
into
xchg
adc
decl
call
ljmp
cmc
std
mov
add
mov
movsb
add
add
daa
add
xor
call
xchg
scas
hlt
push
xchg
add
add
out
popa
add
mov
add
mov
add
xor
lcall
mov
ljmp
add
xchg
fwait
mov
dec
test
clc
pushf
rolb
cmp
adc
decl
add
addl
add
addb
add
test
cmpsl
add
sub
stos
lahf
jge
add
add
inc
add
mov
sub
ret
add
lea
ret
sbb
jmp
and
jmp
add
mov
ja
add
or
imul
mov
mov
test
testb
mov
pop
jl
mov
mov
add
les
pop
scas
imul
pop
nop
inc
add
xor
cmp
inc
add
sti
and
dec
insl
add
in
xchg
jae
call
mov
add
jmp
push
dec
xor
ljmp
add
add
cltd
push
inc
add
add
movb
aas
cmp
add
sub
push
addb
xchg
jl
mov
cmp
decl
add
out
xor
jmp
sub
pushl
popa
add
fidivrl
xor
decl
add
add
dec
test
movsb
add
dec
push
mov
mov
add
mov
add
add
lea
nop
int3
sahf
xor
fnstenv
add
push
pop
ffreep
add
aaa
sbb
add
imul
or
add
add
jnp
testl
mov
add
movsb
add
sub
dec
lods
jns
sahf
testb
mov
add
pop
add
push
scas
sarl
idivl
minps
and
cld
bound
call
add
xor
inc
add
stc
add
fcmove
test
stc
lods
out
aas
clc
pop
add
add
daa
add
add
aas
and
jmp
add
sub
pop
add
out
insl
xchg
xchg
adc
lcall
inc
add
fsub
add
add
roll
add
xor
jmp
daa
add
add
mov
std
sub
cwtl
pop
mov
lahf
mov
add
jb
decl
lods
enter
add
pop
cmp
in
mov
stos
pop
stos
enter
sub
add
test
lcall
sbb
mov
adc
incl
icebp
out
fsubrl
cmp
xchg
sub
xor
lcall
add
dec
scas
insl
push
jge
pop
pop
add
lcall
add
aas
or
cli
sahf
jge
xlat
insl
stos
dec
xchg
fabs
add
aas
lods
cwtl
xchg
adc
incl
ret
or
jmp
cmp
jmp
add
dec
mov
ljmp
add
add
push
or
mov
call
mov
movsb
add
sub
dec
in
lods
and
dec
jae
incl
ficomps
stos
stos
negl
push
add
mov
mov
data16
mov
cmp
inc
add
ffree
add
add
add
lds
fsts
test
push
push
add
inc
add
rclb
dec
xor
add
inc
add
add
add
mov
mov
mov
sbb
and
call
add
int
add
add
add
aas
pop
inc
add
test
ja
add
fld
add
add
cmp
add
sti
ljmp
xor
lcall
sbb
add
dec
popf
gs
add
add
sub
insb
add
lcall
jg
add
in
lea
add
xchg
std
dec
mov
pop
jae
incl
push
mov
add
mov
jns
scas
jle
mov
push
sub
push
sahf
dec
popa
add
pushf
imul
js
pop
add
mov
add
pushl
or
rolb
call
add
jg
xor
jge
js
cmp
int
data16
ds
cmp
add
dec
leave
and
rolb
pop
and
add
lea
add
decl
movl
add
xor
inc
add
mov
add
js
add
add
js
mov
push
xor
fnstcw
add
add
fdivs
mov
adc
call
pop
outsl
sbb
xchg
nop
sti
rolb
cli
mov
les
loopne
pushf
into
pop
scas
jb
ds
mov
ret
add
add
mov
mov
add
lea
lods
not
and
xor
incl
add
mov
movsb
add
add
cmp
outsl
push
add
dec
adc
jge
pushf
addb
jns
lcall
int3
aaa
pop
mov
and
mov
push
add
rolb
sbb
decl
add
lret
add
xor
jmp
sub
mov
clc
pop
add
cmp
leave
stos
push
add
xchg
inc
add
out
lock
add
mov
addl
pminsw
push
aam
inc
add
add
pushl
add
call
add
test
add
push
mov
push
mov
push
push
inc
add
sub
add
dec
jge
mov
int
push
je
add
data16
and
fcompl
mov
add
xor
add
add
decl
inc
add
add
push
pop
mov
add
add
jmp
clc
mov
addl
mov
add
decl
add
pop
lods
sti
les
add
add
fsubs
cmp
add
ljmp
add
jno
jmp
add
ljmp
sub
decl
add
add
jae
incl
add
addl
insb
mov
adc
enter
add
cmc
cmp
pop
cwtl
jno
lcall
jg
add
in
loop
xchg
out
jle
ss
add
je
fsubrs
bound
lcall
add
and
ljmp
hlt
jge
inc
add
jge
cmpsl
add
repnz
add
xor
pop
sub
add
add
add
clc
xchg
cmc
icebp
or
add
add
mov
add
nop
push
fwait
addl
pop
loope
movb
add
in
jb
jmp
add
cmp
jmp
ja
sub
fistps
xchg
mov
add
enter
add
ljmp
test
sbb
and
inc
add
test
pop
add
push
cs
aam
add
mov
ror
imul
add
dec
jns
add
cmpsl
add
inc
add
sbb
ljmp
add
pop
add
fnstsw
fnstcw
add
add
cmp
mov
pushf
mov
add
movb
add
in
mov
add
movl
add
add
dec
loopne
xlat
jno
ljmp
fwait
jle
dec
sbb
aaa
pop
mov
jne
inc
add
scas
fwait
hlt
and
sti
movb
add
loope
outsb
pop
out
pop
push
clc
int
sbb
movb
add
add
adc
incb
dec
lret
pushl
fiadds
or
scas
aaa
pop
add
sbb
cmp
or
adc
decl
add
mov
add
xchg
movsb
add
inc
add
jl
add
ffree
add
fisubrs
add
add
mov
mov
add
lcall
add
sti
jg
and
pushl
fwait
pop
dec
inc
add
add
pop
sbb
js
add
std
push
adc
add
xchg
push
add
xor
cmp
mov
ret
add
add
push
aas
fcomp
jo
pushl
add
lea
add
pushf
dec
roll
add
adc
incl
js
or
movsl
add
add
adc
ljmp
sahf
xchg
nop
inc
add
mov
xor
jmp
ficompl
loopne
sbb
adc
push
movsb
add
fisubrl
mov
movsl
add
add
push
add
imul
gs
add
add
xchg
lea
add
adc
decl
ja
les
or
daa
add
add
lea
out
fldenv
mov
pusha
add
popa
add
sub
push
add
xor
jmp
pop
mov
rcr
cwtl
movsl
add
mov
push
add
inc
add
and
lcall
fstpt
add
addl
rorb
enter
ds
shrl
loope
fwait
int3
imul
and
lcall
and
dec
inc
add
test
cmpsb
add
add
mov
add
stc
dec
roll
sbb
add
cmp
mov
fsts
add
sti
add
sub
dec
or
mov
add
repnz
imul
rolb
mov
ss
add
inc
add
push
add
outsl
scas
insl
ja
mov
daa
add
add
xlat
sbb
je
aad
pop
nop
outsb
out
leave
jmp
add
add
adc
sahf
shlb
add
jge
and
lret
vpmadcsswd
mov
dec
dec
inc
add
cmp
mov
inc
add
imul
add
add
add
add
sub
dec
and
lcall
add
sahf
inc
add
sahf
mov
rolb
add
jae
cmp
lods
mov
push
push
inc
add
addl
jl
inc
add
test
add
or
push
mov
lods
and
mov
les
or
mov
sbb
in
jecxz
sub
add
add
in
jb
pushl
add
sub
xor
ljmp
or
roll
cltd
lea
cmpsl
add
add
add
jno
jmp
add
sbb
add
mov
mov
add
cmc
js
add
mov
pushf
dec
rcrb
les
or
leave
mov
add
jge
addl
addl
outsl
loop
mov
add
sbb
xor
call
int
xchg
mov
add
add
lret
arpl
cmp
add
add
out
mov
add
jnp
pop
jno
jmp
add
add
movsb
add
insl
push
dec
cmp
std
adc
xchg
loopne,pt
push
mov
add
aas
in
xor
jmp
add
pop
push
popf
jmp
add
pop
movl
xchg
sub
jae
pushl
add
fxch
and
mov
cmpsb
add
add
into
mov
mov
add
dec
sub
jbe
mov
xchg
and
incl
pop
xor
lcall
data16
test
sti
ljmp
ret
add
add
in
add
mov
ljmp
jp
and
ljmp
rolb
add
frstor
add
mov
add
ja
mov
roll
mov
out
xchg
ror
xor
jmp
add
jnp
add
frstor
add
lea
in
movb
or
aam
add
mov
mov
jmp
add
push
add
ss
int
loop
mov
push
push
add
jae
jmp
dec
sub
add
lods
jne
add
add
das
cmpsb
add
add
add
ljmp
sbb
stos
loopne
adc
sti
movb
add
roll
pushf
xchg
cld
cmp
lcall
dec
mov
cmp
jno
out
xor
dec
sbb
add
cwtl
sub
add
add
lea
in
dec
push
dec
mov
lds
jmp
add
dec
mov
add
popf
jg
stc
enter
adc
jmp
add
mov
mov
sahf
xlat
sub
pop
mov
add
add
add
cltd
sub
add
addl
add
dec
nop
dec
push
jmp
adc
jmp
add
and
jmp
add
jl
ja
cmc
xchg
addl
add
add
or
arpl
dec
pop
mov
add
mov
dec
fistpl
pop
jmp
popf
cld
pandn
add
xor
add
jmp
pop
jbe
dec
scas
ret
shlb
add
add
jmp
cmp
std
sahf
and
mov
add
daa
add
ljmp
push
add
xchg
mull
mov
adc
stc
xor
jle
add
add
add
std
add
jmp
mov
roll
aam
push
add
jmp
fcoml
add
mov
adc
or
push
inc
add
bound
call
mov
add
cmp
sub
add
and
pushl
ljmp
lret
shrb
add
mov
inc
add
add
call
jae
jmp
mov
mov
add
mov
pushl
add
push
test
dec
pushf
popa
add
mov
add
jnp
cld
mov
shll
xor
incl
mov
add
mov
out
xchg
jnp
add
inc
add
inc
add
add
mov
lcall
sbb
sub
clc
push
add
mov
inc
add
jg
and
mov
push
bound
dec
sbb
decl
xchg
and
mov
add
je
jns
out
loope
loop
test
jge
sbb
push
mov
fstpl
addb
add
push
inc
add
add
push
mov
fldenv
lret
add
lcall
add
add
imul
pushf
mov
dec
loope
sbb
add
fldt
ljmp
lcall
sbb
add
out
mov
fwait
sbb
add
mov
cmp
pushl
add
and
pushl
push
mov
adc
pushl
cmp
lds
and
call
scas
xor
mov
inc
add
jnp
pushf
mov
push
sub
jp
pop
movb
and
nop
mov
add
lods
push
add
lods
pop
cs
sbb
movsl
add
mov
xchg
push
and
jmp
add
mov
jmp
jp
pop
outsb
adc
call
cmp
add
add
and
decl
add
pop
push
xlat
sbb
mov
add
jnp
roll
dec
dec
aaa
add
lea
rcll
add
and
jmp
cmp
add
xchg
sbb
mov
nop
add
das
cmc
and
jmp
or
js
jecxz
sub
into
mov
out
mov
push
add
addb
add
bound
jmp
add
add
jl
test
sahf
jmp
out
add
movb
add
cmc
push
add
add
sub
inc
add
cmp
pop
add
sub
add
ja
mov
sbb
add
push
jecxz
push
pusha
add
mov
int
int3
mov
add
insl
jno
jle
inc
add
jmp
add
lcall
bswap
inc
add
iret
pushl
lods
mov
popa
add
data16
add
add
xchg
pop
test
add
jnp
add
ret
add
add
add
pushf
jge
add
in
xor
sub
jne
add
loopne
mov
adc
decl
ljmp
in
pop
jbe
xchg
push
add
rolb
jmp
cmc
or
and
ljmp
mov
data16
ret
add
add
fiadds
add
mov
sbb
incl
push
test
loopne
push
cmp
push
icebp
lods
lret
jecxz
mov
jmp
add
fwait
cli
xchg
pop
insl
addb
add
mov
add
jmp
add
push
cmc
test
in
xchg
daa
add
add
mov
fstpl
sub
inc
add
jecxz
shll
inc
add
xchg
lret
push
addb
add
add
jmp
imul
xchg
je
pusha
add
pop
das
mov
das
cmpsl
add
lret
dec
cmp
cmpsl
add
push
add
mov
jg
scas
movl
loop
scas
ficompl
int3
sbb
pop
add
incl
jne
roll
lcall
add
add
jmp
fimull
add
dec
cmp
pushl
add
push
add
lcall
dec
sbb
mov
dec
xchg
stos
adc
incl
add
sbb
add
push
add
add
cmp
add
jl
add
push
aam
sti
or
add
roll
add
nop
xor
lcall
jle
pop
and
decl
sub
add
fdivs
inc
add
add
pop
fucomp
fildll
jecxz
imul
inc
add
addl
fisubrl
jge
add
mov
aad
mov
dec
cmp
mov
sub
xchg
addr16
add
jbe
nop
aam
jns
testb
imul
add
pop
mov
add
jmp
add
mov
cld
in
add
mov
mov
add
leave
pop
jl
mov
mov
xor
call
add
xor
pushl
movsl
add
add
pushl
inc
add
add
movsb
add
cltd
mov
call
incl
adc
ljmp
pop
mov
arpl
decl
add
mov
mov
add
stos
fistpll
add
sub
cmp
ljmp
cmpsl
add
sub
push
adc
jmp
add
push
or
add
jge
fld
add
into
or
push
stos
icebp
mov
xor
add
and
movl
add
call
add
ret
add
testb
jae
jmp
call
adc
jmp
add
add
add
push
mov
testb
xchg
les
push
add
push
lods
jmp
in
mov
push
ljmp
test
xchg
sub
dec
scas
cltd
lret
jl
lods
mov
add
pshufw
cltd
adc
imul
js
add
add
pop
xchg
jge
add
add
cmpsl
add
jns
add
into
rolb
dec
push
mov
add
add
add
fildll
inc
add
mov
imul
bound
pushl
add
lea
je
add
add
add
pop
cwtl
sub
add
shlb
push
add
out
or
mov
fisttpl
scas
sti
sbb
add
popa
add
jle
add
dec
pop
pop
test
jl
cmc
sti
and
addl
sbb
add
sbb
ljmp
sub
cli
jmp
mov
add
mov
pop
mov
sbb
add
fcmovu
and
sti
cld
lahf
jno
lcall
addl
or
and
or
add
adc
pushl
mov
or
pop
add
fildll
je
lds
pop
test
inc
add
out
repz
sub
push
pushl
add
dec
test
hlt
or
cmp
add
add
xchg
pop
mov
mov
xchg
cmp
jbe
pop
add
mov
adc
cmp
and
ljmp
add
testb
incl
call
add
jb
call
cmpsb
add
dec
leave
inc
add
scas
in
mov
repz
add
add
out
addl
out
les
sbb
leave
dec
enter
in
repnz
nop
sub
enter
test
fs
test
cmp
adc
jmp
add
out
jbe
add
cmp
add
cmp
push
add
mov
data16
cmc
mov
add
mov
sbb
add
add
xor
fnsave
aas
lock
cmp
pop
mov
jp
add
rcrb
imul
mov
add
pusha
add
aas
mov
mov
add
inc
add
cmp
sub
add
push
add
xchg
jne
add
ficomps
dec
inc
add
loop
nop
adc
jmp
add
ljmp
into
je
and
decl
add
inc
add
icebp
movsb
add
mov
clc
call
cmp
add
sbb
fwait
test
or
lods
pop
jae
call
mov
mov
mov
dec
mov
shr
adc
add
sbb
add
add
add
mov
inc
add
inc
add
rep
sub
add
adc
call
or
out
les
and
jmp
jmp
test
add
sub
add
test
dec
stc
das
int3
add
jnp
add
addb
ret
add
inc
add
insb
xchg
mov
cmp
add
add
and
lcall
rcr
xchg
or
dec
arpl
pushl
add
fincstp
es
jg
add
jmp
inc
add
push
add
push
mov
push
add
and
cld
or
add
jmp
add
add
dec
xor
dec
sub
jge
add
repnz
fsubl
add
sub
add
push
jo
call
mov
add
loop
dec
xchg
and
ljmp
add
roll
cmp
cmc
add
add
call
fisubrs
js
add
test
cli
mov
mov
pop
dec
sbb
mov
add
call
add
inc
add
or
add
cltd
sbb
add
add
add
push
add
xchg
rcrl
in
sbb
add
stc
jge
add
movb
dec
xor
lcall
mov
fistpl
add
add
mov
pop
outsl
adc
rorb
aas
stc
pop
and
pushl
xor
incl
mov
pop
add
call
je
xor
call
fbld
sti
xchg
pop
pop
lcall
adc
xor
inc
add
incl
add
aad
add
jg
add
imul
add
in
in
dec
mov
xchg
leave
mov
imul
jmp
add
data16
js
and
push
sar
inc
add
add
xchg
clc
add
xor
inc
add
add
lcall
add
add
pushl
jmp
add
add
mov
in
fld
add
ss
add
cs
shlb
lods
leave
inc
add
sub
add
push
xor
lcall
add
jmp
push
pop
mov
ret
add
mov
adc
lcall
cmp
push
mov
add
lret
push
aas
icebp
adc
jmp
int
pop
jne
mov
nop
addl
mov
add
sti
dec
mov
in
aad
add
js
add
pop
cmp
add
dec
outsb
adc
dec
in
lock
dec
and
addl
add
or
inc
add
push
add
mov
inc
add
push
add
sbb
push
add
add
mov
add
jmp
in
mov
jl
sbb
xor
movsl
add
ficompl
fwait
arpl
out
jle
add
mov
stc
mov
inc
add
lds
out
bound
inc
add
sub
lds
pop
push
add
push
into
add
pusha
add
lret
adc
ljmp
mov
mov
ret
add
inc
add
ja
pop
imul
insb
pop
add
add
into
clc
and
mov
test
mov
out
mov
add
push
aas
inc
add
or
les
mov
or
push
int
sbb
add
add
call
add
inc
add
fwait
jle
jge
aaa
sahf
arpl
lcall
add
loopne
into
lcall
inc
add
sbb
add
xor
js
xchg
push
add
pop
gs
negl
lods
addl
add
push
es
out
pusha
add
je
cmp
decl
outsl
add
incl
aas
mov
rolb
add
xchg
sbb
in
fisubrl
mov
stc
dec
add
lcall
mov
insl
add
jp
add
jmp
add
test
stc
arpl
push
movswl
add
mov
testb
or
add
or
add
mov
add
cmpsl
add
add
cltd
into
xchg
and
movl
mov
add
jbe
out
mov
dec
pop
int
aas
xchg
movb
ficompl
stc
add
jmp
add
add
mov
or
add
xchg
cmp
xchg
pop
aas
pop
movb
adc
pushl
call
outsb
icebp
je
add
push
sub
addl
scas
iret
addb
pop
or
pop
dec
cltd
mov
add
add
decl
add
add
jle
add
add
add
and
inc
add
jge
sahf
rcrb
jge
xchg
imul
arpl
pushl
inc
add
repnz
ljmp
add
cmp
add
loop
mov
fwait
adc
decl
enter
add
lcall
add
jmp
add
add
scas
rcrl
lds
add
jmp
add
faddp
add
add
mov
pushf
xchg
mov
add
add
inc
add
pop
add
mov
add
mov
add
pushf
bound
decl
mov
mov
addb
sahf
ret
add
sti
in
lds
xchg
lods
push
testb
cmp
cmp
add
rorb
dec
pop
icebp
pop
or
add
add
mov
mov
mov
out
push
lret
roll
push
add
imul
inc
add
pop
int
scas
adc
call
cmp
jae
decl
jae
call
jmp
call
test
cmpsl
add
popa
add
les
imul
sti
xchg
movl
inc
add
jmp
jb
jmp
add
sbb
add
insb
jns
fnsave
dec
add
lcall
add
add
negl
incl
inc
add
add
add
in
pusha
add
bswap
in
push
add
lods
out
imul
mov
add
daa
add
add
addl
ficoms
mov
aaa
pop
aas
in
mov
enter
cmp
into
addb
add
xchg
movsl
add
cmp
inc
add
lcall
scas
nop
cmp
add
add
lods
insb
into
or
incb
cli
xor
lcall
ja
push
add
call
add
jl
add
neg
dec
dec
pop
addb
xchg
cmpsl
add
adc
add
movl
pop
cmp
iret
in
shll
stc
xor
add
or
add
add
mov
popf
adc
call
lcall
xor
fdivp
rolb
push
test
jmp
ficomps
cli
inc
add
add
jmp
add
pop
inc
add
add
call
in
bound
decl
push
add
push
add
mov
movl
incl
add
shlb
add
add
sbb
negl
mov
cs
mov
xor
add
jge
idivl
ljmp
mov
inc
add
ljmp
jb
incl
add
cmp
fwait
pusha
add
call
cmpsl
add
aad
add
mov
add
add
add
add
pushf
scas
push
xchg
in
mov
and
pushl
push
cmpsb
add
aaa
sbb
add
lcall
adc
jmp
in
sub
jmp
test
stc
pop
out
jge
add
dec
xor
jmp
movb
outsb
les
aaa
xchg
roll
stc
stc
push
add
decb
fnstenv
xchg
cli
mov
mov
add
cmc
pop
add
sub
add
push
xchg
mov
mov
sub
push
add
idiv
xor
pushl
add
mov
mov
lods
mov
ret
add
lcall
in
jmp
jnp
pop
jo
dec
mov
add
int3
insb
jmp
das
pop
push
add
xor
fnstcw
xchg
mov
add
pop
add
lret
push
dec
or
or
sub
out
out
sub
xchg
and
bound
jmp
clc
cmp
add
popf
mov
push
add
test
sub
add
add
sub
push
add
mov
cltd
or
out
insl
cwtl
rorb
sub
pushl
add
daa
add
add
sub
decl
cmp
data16
lds
outsb
mov
add
sub
call
leave
rolb
add
mov
enter
mov
add
in
mov
mov
loope
mov
inc
add
sub
add
cmp
nop
loop
inc
add
addl
outsb
jmp
sbb
loope
movl
inc
add
jae
ljmp
pop
pop
xor
add
cmc
ffree
add
add
sub
addl
repnz
pop
add
addb
xchg
mov
pmaxsw
fnstenv
test
dec
sbb
add
add
fstpl
insl
adc
js
add
push
dec
mov
add
add
incl
add
popa
add
fmuls
add
add
or
add
add
push
add
loop
push
hlt
xor
jmp
scas
add
incl
movsb
add
add
xchg
jne
add
ds
test
adc
mov
sub
dec
bnd
pop
sub
mov
jo
dec
mov
add
push
cmpsl
add
insb
aas
addl
xchg
jp
pop
add
sub
push
add
std
or
push
call
dec
roll
add
push
add
decl
mov
stc
push
add
test
add
call
add
lds
jo
call
jmp
dec
sbb
or
add
push
lds
repz
ret
add
stc
inc
add
cmp
ret
jne
hlt
insl
add
decl
add
add
mov
add
add
stos
pop
adc
decl
das
mov
add
add
jnp
add
jmp
add
lods
ret
add
jp
add
add
and
decl
add
cs
add
dec
lock
mov
cs
add
add
call
add
daa
add
add
mov
xor
dec
jle
add
push
fwait
jmp
pop
adc
ljmp
mov
jae
pushl
lds
push
push
dec
push
add
pushf
loopne
repz
in
push
add
sub
add
in
addb
ftst
add
repnz
data16
add
mov
add
pop
push
mov
add
filds
rcrb
add
fcoml
jmp
add
jecxz
push
dec
call
into
pop
push
add
sbb
scas
stc
or
pushl
movl
lods
xchg
imul
lds
out
lds
mov
loop
fsubrl
push
add
popf
cmp
adc
call
add
xchg
lds
mov
insb
data16
add
daa
add
ret
pushf
mov
add
ret
pop
push
popa
add
out
pop
xlat
sarl
pop
ficoms
ljmp
shlb
ljmp
push
aam
add
sbb
sbb
or
and
add
test
or
sub
lcall
in
jo
mov
dec
push
add
mov
mov
arpl
ljmp
mov
add
dec
ror
arpl
lcall
add
ficoms
std
xchg
jns
add
adc
incl
jmp
xchg
data16
into
mov
ljmp
jns
add
xchg
lret
sti
fucomi
sbb
mov
loope
adc
in
pop
and
pushl
test
out
jecxz
fsubrs
sahf
xor
cld
mov
add
addb
icebp
mov
out
pop
adc
add
xchg
leave
sbb
fs
repnz
add
push
push
add
jnp
xchg
jl
jne
mov
add
add
inc
add
sub
and
ljmp
movsb
add
cmp
das
sub
mov
add
jg
sbb
add
out
push
lods
addb
scas
sub
xor
popf
bound
pushl
cmc
sub
jb
in
push
mov
xchg
push
inc
add
lock
call
cmc
xor
push
cmp
add
xchg
icebp
dec
lds
ja
movsl
add
jno
jmp
add
mov
add
clc
push
inc
add
add
stos
jb
ljmp
or
pop
push
add
cltd
data16
rcll
add
sbb
add
cltd
fbstp
add
test
xchg
fsubl
add
cmc
lds
pop
inc
add
mov
sbb
shufps
xor
jp
add
add
cld
xchg
fcmove
push
add
jecxz
push
cs
inc
add
add
and
fsubl
inc
add
add
ljmp
push
fildll
loop
adc
jno
push
out
and
pushl
add
aas
call
in
sbb
mov
in
mov
lcall
jo
ljmp
call
in
xchg
cmc
push
pop
add
xchg
movl
add
iret
add
decl
add
addb
xchg
fistpll
pushf
daa
add
call
mov
scas
cli
and
jmp
hlt
fdivs
jns
cmp
add
inc
add
jle
addb
add
add
into
cmpsl
add
add
or
mov
sub
and
ljmp
insb
inc
add
fistl
std
imul
mov
push
inc
add
test
addl
popa
add
jle
js
rol
add
add
add
jg
in
mov
add
sub
cmpsb
add
add
fisttpll
ret
add
or
jmp
jmp
add
add
push
add
add
ds
movsb
add
jns
cmp
or
ljmp
or
push
leave
ja
mov
mov
pop
pop
mov
les
fadds
decl
jne
divl
call
aam
iret
cmp
add
jmp
rolb
ficompl
shrl
iret
std
enter
sbb
scas
xor
pushl
insb
push
lahf
jmp
js
add
cltd
stos
xchg
inc
add
cmp
mov
call
pop
jb
pushl
add
xchg
xchg
pop
or
pushl
into
les
push
add
add
add
sub
pusha
add
imul
repz
pop
mov
add
jb
jmp
add
std
aam
sbb
xor
jmp
dec
ret
add
add
xchg
fimull
add
std
or
push
lods
push
imul
add
add
mov
add
sub
pop
mov
or
add
sbb
xor
lcall
add
jecxz
in
xchg
pop
adc
call
ret
add
add
add
cmp
push
add
cmpsl
add
lods
into
sub
pop
xor
add
sub
add
movsb
add
out
mov
loope
lds
js
add
imul
ror
jmp
add
xchg
sbb
add
or
roll
add
push
add
add
movsl
add
add
jne
add
shrl
sub
add
jle
add
jns
push
seto
jge
inc
add
and
fimull
add
fidivs
roll
outsl
mov
jb
call
imull
add
insb
ljmp
int3
in
add
push
iret
inc
add
ficoml
add
add
add
aad
add
xchg
aas
mov
add
incl
ljmp
sbb
mov
pop
bound
decl
out
imul
mov
movsb
add
sub
xor
pop
movb
jne
ss
fadds
jmp
add
ljmp
into
or
addb
push
std
adc
sub
push
mov
test
add
mov
mov
add
incl
jmp
bnd
shrb
push
sub
add
mov
stc
jae
ljmp
fidivrs
jg
add
cs
adc
out
add
ljmp
aad
pop
cmp
cmp
add
jg
add
add
pop
xlat
mov
add
push
add
jbe
add
sub
inc
add
shlb
loopne
test
int3
sbb
add
lret
inc
add
jmp
add
hlt
pop
dec
add
jae
decl
add
or
mov
into
iret
xor
xchg
xchg
ljmp
fistl
lcall
fwait
push
add
mov
dec
mov
mov
add
add
int3
mov
outsl
pop
movl
incl
pushl
add
adc
push
xor
decl
and
jmp
add
fistpll
ret
mov
push
adc
fnstenv
les
jmp
ret
push
add
adc
add
add
sub
add
add
popa
add
inc
add
add
call
add
dec
shl
stos
movsl
add
jg
add
negl
add
add
cs
stc
imul
lods
mov
push
ficoms
add
sub
aam
loop
jns
dec
jmp
add
xchg
jp
add
add
repnz
hlt
and
add
inc
add
hlt
lock
add
push
dec
cmp
js
mov
add
pop
mov
add
movl
lcall
fildll
test
stc
movsl
add
adc
jmp
decl
mov
sti
inc
add
jae
decl
dec
adc
bound
call
lods
dec
add
mov
add
and
xor
call
add
pushf
test
das
int
add
mov
mov
sarb
add
pushl
outsl
mov
lcall
fidivrs
inc
add
dec
xchg
scas
shl
add
leave
fiadds
mov
add
mov
ret
add
int
pop
cwtl
push
add
bound
ljmp
cli
call
sub
push
out
sub
xchg
inc
add
sub
add
decl
jns
inc
add
mov
mov
xchg
sub
jg
data16
add
ljmp
shrb
add
add
ljmp
divb
call
jnp
and
jmp
pushl
rolb
add
mov
cvtps2pi
add
nop
stc
add
iret
iret
jge
add
bound
lcall
cli
lea
jne
movl
add
shl
add
mov
jns
punpcklwd
decl
mov
mov
add
mov
cmp
stos
ss
or
mov
movl
add
adc
incl
decl
add
lcall
mov
iret
ss
sbb
pop
int
adc
jmp
cmp
add
imul
add
rolb
add
pop
addl
addl
cmpsb
add
xchg
add
add
add
or
jae
call
add
xlat
push
add
mov
cmpsl
add
add
sbb
add
add
cmp
add
mov
jnp
add
add
jmp
add
add
sub
loop
test
add
mov
cmp
arpl
ljmp
mov
dec
aaa
arpl
decl
cmp
add
call
xchg
imul
aas
add
sti
fstl
inc
add
pop
pusha
add
sub
pop
int
cmpsb
add
loopne
cmpsb
add
and
mov
jl
mov
jo
call
add
testl
inc
add
les
js
pop
or
add
add
add
add
add
call
sub
mov
jnp
add
add
or
xchg
dec
movsl
add
mov
inc
add
data16
ljmp
idivb
add
add
sub
add
mov
add
add
in
addl
add
add
jo
call
add
addl
push
and
ja
add
add
call
add
aas
cs
and
jg
add
loopne
lahf
pop
outsl
loopne
xor
call
cmp
add
decl
sbb
add
dec
pop
and
call
je
jns
test
inc
add
roll
pop
mov
lods
dec
addb
enter
pop
aas
stos
jno
call
add
icebp
add
jmp
add
bnd
jmp
add
add
iret
incl
decl
pop
xchg
movq
sub
jmp
pushf
addb
add
sub
sub
add
pushl
add
push
pop
xor
push
add
adc
dec
aas
jmp
inc
add
push
mov
add
or
add
add
test
sbb
jne
add
mov
cmp
add
lret
dec
hlt
lahf
pushf
roll
add
xchg
push
fildl
add
rep
shlb
add
bound
in
lock
pop
jne
out
dec
xchg
addl
jmp
les
push
add
sub
incl
jle
push
xchg
dec
addb
nop
cmc
icebp
push
add
les
into
push
cld
outsb
rorl
jg
dec
mov
add
dec
mov
dec
xchg
mov
add
fisttps
pop
imulb
inc
add
ds
mov
adc
pushl
sbb
add
jnp
dec
jns
stc
repnz
pusha
add
mov
xor
add
in
cmp
jecxz
mov
add
jnp
scas
decb
into
lds
fildll
mov
add
jge
hlt
test
add
clc
ffreep
add
add
mov
out
mov
jae
pushl
pushl
sbb
hlt
push
jb
ljmp
add
mov
nop
mov
xchg
and
lcall
inc
add
stos
dec
mov
int
mov
fisttpl
add
lret
mov
add
test
movb
lea
add
inc
add
jnp
push
add
jmp
lcall
out
stos
aad
push
push
add
xor
push
jge
add
repz
sub
movb
call
add
popa
add
add
jp
into
loopne
mov
frstor
add
dec
inc
add
mov
jmp
jns
movl
add
in
dec
sbb
pop
fwait
xor
jmp
pushl
fisubs
mov
add
dec
lods
or
xor
push
add
out
push
xor
pushl
add
ljmp
jns
add
insb
dec
iret
test
jne
fwait
pop
or
add
pushl
jl,pn
mov
cmc
and
push
adc
call
add
jae
lcall
adc
jg
add
inc
add
push
cmp
pushf
movsl
add
push
adc
ljmp
add
cmpsb
add
inc
add
add
add
dec
jle
adc
add
ljmp
call
add
sub
inc
add
or
or
lds
ss
ret
ds
mulb
add
jns
dec
and
push
add
xchg
sub
stos
scas
cmpsb
add
add
nop
cmp
jle
add
decl
test
jge
add
hlt
pop
add
jle
add
sbb
add
mov
add
addb
push
add
loope
add
push
add
xchg
fnstenv
fs
add
add
inc
add
pop
inc
add
sbb
xchg
or
xchg
data16
mov
lret
push
add
incl
add
dec
jecxz
sti
mov
addb
add
sub
aaa
or
pop
mov
add
add
cmp
add
clc
les
xchg
cs
out
ret
fstpl
cmp
lcall
add
call
pop
push
mov
cmp
in
dec
jmp
in
cltd
addl
add
cmp
xlat
push
movb
addr16
add
stos
push
mov
add
xchg
mov
roll
dec
in
jb
call
call
add
mov
adc
pushl
fmuls
mov
bound
decl
fcmovbe
xor
decl
jmp
jns
add
adc
jmp
xchg
std
aaa
jge
add
inc
add
add
mov
incl
dec
cmp
jecxz
add
jp
popa
add
int3
out
dec
inc
add
int3
adc
lcall
pop
add
add
dec
loopne
xchg
or
sahf
xchg
xchg
inc
add
mov
fistpl
jg
test
pop
xchg
jns
fidivs
cli
sbb
xchg
sub
test
push
add
sbb
jne
movsb
add
add
out
cmp
and
dec
sbb
push
add
mov
add
mov
push
mov
dec
xchg
test
mov
sbb
add
lock
cmp
jmp
or
nop
add
out
imul
mov
push
add
inc
add
add
addb
fabs
add
xchg
xchg
loope
add
add
jecxz
out
arpl
jmp
xor
call
hlt
addl
leave
pushf
xchg
dec
inc
add
lret
cmp
test
mov
inc
add
call
inc
add
std
ss
pop
push
push
add
adc
incl
lea
pushl
test
sub
scas
jecxz
mov
imulb
add
js
push
push
mov
cld
mov
add
lret
add
pop
mov
add
inc
add
shlb
call
sub
dec
ss
add
inc
add
imul
or
aam
jge
repz
add
dec
lcall
or
add
sbb
add
pop
sbb
mov
lea
dec
inc
add
lods
addb
add
call
add
xchg
cmp
sti
cltd
pop
add
dec
push
add
push
rcll
les
lods
bnd
jmp
add
std
xchg
dec
scas
jnp
dec
mov
xor
ljmp
aas
jmp
jne
add
add
aas
fstl
dec
je
add
into
lcall
jb
mov
push
bound
jmp
add
sub
sub
pop
stos
xchg
mov
add
lret
and
call
fs
and
cmp
push
push
add
sub
adc
call
movsb
add
mov
lea
push
mov
clc
mov
aaa
cwtl
xlat
sti
into
xor
decl
aad
aas
lds
call
scas
cld
in
push
add
xor
xchg
mov
add
call
add
or
add
add
push
sarb
aam
add
sbb
jb
decl
jmp
call
jmp
cmp
sahf
fisubl
pop
lds
add
incl
push
xor
jmp
add
add
es
add
push
or
jnp
add
popf
aaa
bound
jmp
cmp
lret
lods
ljmp
inc
add
add
xchg
inc
add
jg
add
add
inc
add
add
add
lcall
mov
add
aas
arpl
jmp
add
insb
ret
mov
add
mov
in
scas
test
add
add
add
call
addb
push
add
cmp
add
ljmp
and
in
cmc
movsb
add
add
dec
push
repz
pop
pop
xor
dec
movsl
add
outsb
pop
data16
sbb
lods
inc
add
mov
rclb
lods
lock
add
incl
jmp
js
add
xchg
jno
decl
mov
addr16
leave
pop
xor
mov
add
pop
jmp
pushl
jno
fldt
or
iret
arpl
decl
add
jp
repnz
add
jo
pushl
add
cmova
fs
mov
pusha
add
addr16
mov
pop
and
incl
incl
push
mov
rcrl
add
push
jle
add
jmp
inc
add
rorl
push
add
mov
xchg
jns
add
pushl
add
add
lahf
push
xor
jmp
add
push
mov
add
add
popa
add
mov
jns
xor
pushf
movsb
add
push
xchg
aad
mov
jmp
sub
add
pushf
sbb
decl
xchg
cmp
jp
jne
mov
add
call
sbb
sub
mov
adc
decl
add
mov
pushf
out
xchg
iret
imul
icebp
pop
add
inc
add
mov
jmp
add
cmpsb
add
das
add
decl
adc
push
add
mov
daa
add
add
fisubrl
lcall
add
add
outsb
pop
add
add
or
sahf
std
insb
sub
add
push
add
pop
data16
adc
in
bound
pushl
ds
repz
decl
add
add
push
fcomip
xchg
cli
xchg
sub
sub
add
data16
add
push
add
ljmp
data16
lcall
mov
mov
in
insl
aas
sahf
or
dec
cmc
bound
pushl
jmp
add
clc
mov
add
add
jg
nop
sbb
add
sub
add
add
ljmp
pushl
add
shrb
lock
add
jae
ljmp
pop
push
add
shrl
dec
xor
scas
push
add
jle
add
addb
add
add
pop
add
decl
pop
rolb
addl
fwait
out
data16
mov
loop
add
jg
add
int3
cmpsl
add
add
ja
mov
jmp
xor
push
mov
pushf
fisubrl
addl
inc
add
pop
add
and
call
add
xor
decl
jge
rorb
add
addb
add
dec
mov
mov
add
jne
pop
loop
fsubrs
add
add
cwtl
jnp
enter
jl
add
jae
inc
add
arpl
incl
lods
adc
pushl
add
add
ja
cmc
cmp
mov
imul
stos
mov
out
inc
add
lods
inc
add
cmp
les
sbb
add
add
add
cs
push
or
decl
aad
cs
out
out
jae
incl
lahf
jae
decl
cmp
xchg
xchg
mov
jbe
outsl
scas
decb
fldl
add
jo
call
mov
add
add
leave
mov
in
ftst
add
outsb
jp
roll
mov
add
icebp
add
decl
adc
add
jne
sub
sub
cwtl
sub
movsl
add
ljmp
aad
xchg
adc
ljmp
push
add
in
mov
incl
inc
add
sahf
jl
mov
add
pop
mov
add
aad
and
pusha
add
sbb
addl
or
mov
add
arpl
inc
add
add
add
sbb
jo
incl
jmp
pop
and
ljmp
or
add
jp
addr16
add
jecxz
scas
xchg
insl
fsubrl
push
add
loop
mov
pusha
add
hlt
add
js
add
mov
add
pushl
add
jae
ljmp
sub
inc
add
dec
popa
add
and
in
outsb
lahf
add
dec
jg
mov
mov
xchg
adc
ljmp
or
add
jg
sbb
add
das
fimuls
add
or
add
daa
add
add
pop
pushf
mov
inc
add
daa
add
add
mov
push
add
push
addl
repz
ljmp
or
stc
out
nop
push
jle
add
and
mov
add
decl
mov
pop
add
inc
add
out
lcall
xchg
je
mov
inc
add
rcll
add
add
std
xor
sti
mov
push
and
lcall
add
pop
jge
push
add
stos
lcall
inc
add
add
mov
add
sub
call
roll
je
add
add
loop
adc
incl
add
mov
roll
add
push
add
je
ja
jo
decl
in
xchg
pop
rcll
inc
add
movsl
add
decl
dec
jecxz
in
cltd
stc
xor
pushl
pushf
test
xchg
imul
sbb
add
xchg
das
pop
lea
push
add
xchg
pop
xchg
call
cmp
pop
push
or
imul
inc
add
int
add
outsb
cmpsl
add
add
jecxz
cmp
push
addb
add
outsb
sbb
ss
incl
add
sbb
add
ja
inc
add
mov
mov
je
mov
add
aad
add
mov
add
das
pop
js
ret
add
add
imul
pushl
incl
add
ret
loopne
fcmovnu
dec
cs
add
push
cltd
or
add
add
sti
jbe
add
inc
add
mov
movsb
add
push
aad
fnstenv
mov
add
jbe
int3
mov
push
in
mov
movsb
add
imul
int
add
int3
bound
cli
ret
add
add
mov
pushf
hlt
pop
sub
lret
decl
pop
std
pop
add
mov
jno
decl
add
sar
pop
adc
lcall
mov
ljmp
movsl
add
aas
xor
add
cli
fsts
add
jmp
push
add
nop
jle
movsb
add
mov
add
add
sti
rclb
inc
add
add
pop
bsf
lock
jmp
add
test
or
add
fxam
add
add
add
loopne
jg
lahf
stos
clc
test
aaa
inc
add
sbb
add
test
sbb
addr16
mov
lahf
adc
incl
ret
add
lcall
sbb
xchg
sbb
jmp
daa
add
mov
mov
iret
cli
insl
xlat
cmp
cmp
lahf
or
out
aam
add
add
lcall
scas
pop
add
lcall
cmpsl
add
sti
cmp
ss
into
movsb
add
and
call
pushl
nop
dec
in
jbe
pusha
add
add
dec
repz
push
add
inc
add
push
jae
incl
add
xchg
loope
ret
loope
addl
jecxz
fdivrs
sbb
add
idiv
scas
pop
mov
jmp
add
add
lock
incl
add
movsb
add
mov
adc
mov
xor
cli
in
xchg
movsl
add
add
sbb
inc
add
scas
pop
js
nop
mov
adc
pop
nop
lret
jnp
add
cmp
or
cli
shrl
lcall
lcall
mov
cmp
add
add
push
push
pop
jns,pn
std
inc
add
mov
mov
add
xchg
xchg
and
jmp
add
dec
mov
mov
add
mov
add
mov
xor
decl
add
add
add
lods
out
int3
push
in
popf
jmp
add
push
roll
dec
popa
add
and
lcall
adc
inc
add
inc
add
inc
add
push
add
push
add
divps
push
push
add
out
addb
addl
add
or
divl
ljmp
in
adc
pushl
add
daa
add
int
les
mov
push
or
add
out
sub
movd
and
dec
in
aam
add
push
add
decl
jle
push
mov
cmp
add
imul
add
imul
jmp
xlat
sub
add
adc
incl
outsb
push
int3
mov
add
jae
call
mov
xor
decl
adc
add
sub
rcll
add
add
add
add
add
add
setl
add
stos
inc
add
js
arpl
call
jmp
add
cwtl
fdivl
mov
dec
cmp
add
mov
sti
xchg
jns
jno
call
sti
push
mov
add
add
pop
int
push
pop
dec
in
xchg
mov
xor
decl
jg
sbb
add
ss
adc
jmp
push
add
xchg
cmpsb
add
add
pop
add
add
das
js
mov
sbb
add
mov
pushf
xchg
or
add
add
xor
ljmp
push
scas
add
cmp
lcall
jne
inc
add
nop
push
add
add
add
jae
mov
fdivrs
imul
push
adc
lcall
sbb
jnp
mov
jne
add
push
add
icebp
dec
mov
jae
lcall
adc
incl
in
pusha
add
sbb
jnp
dec
lahf
cld
movsb
add
aaa
shrb
push
sahf
imul
add
scas
ja
sub
scas
xor
or
test
inc
add
inc
add
jle
ljmp
jbe
adc
add
out
rorb
loopne
cli
dec
dec
in
ret
add
add
notl
inc
add
jno
decl
add
jbe
xchg
adc
jmp
add
data16
jmp
sbb
cltd
out
xor
add
popa
add
inc
add
jno
incl
call
push
daa
add
fnstsw
or
sbb
push
add
add
add
or
xchg
jb
lcall
nop
dec
das
dec
xchg
movl
add
call
lcall
cmc
leave
rorl
xchg
mov
add
test
nop
mov
movsb
add
add
mov
or
add
fsubr
mov
adc
pushl
sub
inc
add
imul
int
cmp
mov
add
jmp
decl
lcall
mov
add
stc
rolb
pushf
and
jmp
mov
add
pushl
add
pop
jb
incl
call
add
add
add
cmp
leave
mov
add
incl
add
jno
incl
sub
add
sub
incl
add
push
push
jle
add
or
add
ljmp
add
inc
add
mov
decl
test
pushl
add
or
add
sub
inc
add
add
loopne
loope
insl
or
or
or
pop
mov
add
pop
add
decl
lds
lds
movsb
add
imul
pushl
and
incl
add
pop
in
int
add
push
xchg
addb
add
incl
push
daa
add
inc
add
ret
add
mov
incl
lret
fildll
adc
call
add
lods
sbb
sub
adc
incl
sub
sub
add
test
int
add
add
int
fdivr
bound
lcall
xor
fiaddl
decl
dec
push
mov
add
int3
and
push
mov
fistl
mov
popf
mov
add
lods
leave
sti
dec
push
add
divb
out
mov
jbe
loop
lock
pop
add
out
jle
add
jle
sti
cli
addl
imul
or
add
les
nop
addb
mov
mov
mov
add
mov
xchg
pop
add
add
dec
xchg
jp
push
sub
movsl
add
xchg
test
add
jg
icebp
sbb
add
push
fsub
add
push
std
xchg
inc
add
inc
add
push
add
push
add
pop
lfs
bound
call
push
add
addl
jg
nop
mov
add
bound
jmp
xlat
xor
lcall
sbb
hlt
adc
fcmovnu
rolb
repz
add
add
xlat
insl
fwait
jo
fmul
inc
add
outsb
loope
fcmovb
add
push
push
add
rolb
add
lret
pop
cld
mov
div
mov
add
mov
jb
ljmp
add
add
das
cmp
addl
lahf
and
jl
add
fimull
push
add
mov
push
je
add
add
sbb
addb
mov
lcall
arpl
pushl
sbb
add
nop
fnsave
movsb
add
adc
pushl
jne
aaa
pushf
mov
jne
add
sub
lcall
add
push
mov
add
pop
mov
or
in
test
test
add
add
add
aaa
mov
stos
mov
pop
mov
pop
push
jmp
add
add
mov
xchg
js
add
cwtl
cmc
jl
add
loopne
dec
lea
add
jge
add
dec
rolb
jne
aam
add
sub
adc
lcall
pop
dec
mov
adc
scas
into
pop
iret
ja
testl
enter
add
xor
ljmp
bound
jmp
fcmovnbe
mov
repnz
jmp
aad
add
add
fld
add
inc
add
add
in
jmp
sbb
pop
loop
mov
dec
scas
arpl
call
lds
xchg
mov
add
add
popa
add
in
imul
decl
push
add
popa
add
outsb
in
jae
call
outsl
imul
mov
add
add
push
cmc
loop
data16
add
dec
jge
js
cs
dec
dec
loopne
xor
incl
and
add
pop
mov
pop
pop
push
add
cltd
aas
lds
test
lret
push
add
repz
add
insl
dec
inc
add
addl
clc
test
add
xor
push
or
pop
stos
xchg
int3
movb
add
das
mov
add
pushl
pushl
push
and
ljmp
cli
mov
or
hlt
lret
ds
add
ds
jmp
sub
iret
sti
lea
add
not
fldenv
add
addl
jle
pop
stos
call
nop
incl
add
push
add
pop
mov
loop
xor
pushl
rolb
pushl
in
das
in
pop
js
add
jl
cmp
mov
pushf
sti
addl
clc
jg
add
roll
add
mov
loop
imul
call
cmp
mov
add
iret
arpl
call
pop
shrl
mov
cmp
add
add
jmp
aaa
aad
add
and
decl
add
add
repnz
and
pushl
push
add
and
dec
and
aam
add
cltd
out
push
add
sbb
add
and
incl
inc
add
ds
mov
add
aaa
fisttpll
enter
imul
nop
cmp
push
pop
cmp
add
add
jb
incl
xor
pushl
cmp
mov
mov
add
add
outsb
aam
ds
add
mov
adc
dec
fisttpl
movsl
add
das
push
add
push
add
cmpsl
add
mov
mov
movsb
add
cmp
or
add
sub
mov
sahf
mov
out
and
call
xor
jmp
int3
dec
lea
mov
add
pop
add
add
add
add
add
add
insl
cmp
repz
add
in
addb
enter
add
adc
pushl
add
add
lahf
mov
in
int3
js
mov
sub
fisubs
jo
jl
std
mov
xor
dec
roll
aam
or
in
fsubrp
cmp
push
add
mov
add
sub
add
xchg
or
pop
mov
add
jecxz
mov
ja
decl
push
add
mov
add
dec
jg
aas
movl
loop
mov
lret
pop
das
movl
movsl
add
in
xlat
out
arpl
call
roll
add
addb
xchg
pop
divb
lock
arpl
jmp
outsl
addb
mov
add
add
pop
cmp
cmp
add
addl
add
inc
add
stc
inc
add
xor
decl
enter
loop
nop
arpl
lcall
test
add
ljmp
mov
mov
mov
ret
add
add
jmp
add
jo
pushl
sub
inc
add
add
mov
and
daa
add
sti
loope
jl
add
out
lods
xor
add
push
xchg
mov
add
push
sbb
add
add
incl
decl
ds
mov
jmp
je
add
stos
inc
add
movb
add
lods
sti
jbe
xor
sbb
mov
jmp
add
in
inc
add
mov
add
das
data16
ljmp
mov
add
push
mov
imul
add
jb
cmp
popa
add
repnz
mov
add
mov
movsb
add
popf
inc
add
add
add
ret
add
jmp
add
sbb
int3
cld
xchg
popa
add
pop
add
add
xchg
sbb
cmp
mov
inc
add
adc
incl
add
or
mov
add
sub
cmpsb
add
add
insb
lcall
add
pop
dec
mov
add
in
pusha
add
xor
lcall
xchg
jb
incl
add
pop
xchg
sub
jnp
lea
mov
out
xchg
inc
add
add
add
mov
dec
pusha
add
or
add
xor
test
icebp
hlt
jbe
adc
jmp
add
sub
sub
sbb
test
inc
add
addb
add
loopne
lock
aad
lods
sti
xor
call
pop
mov
add
mov
arpl
incl
loope
or
add
sbb
add
inc
add
push
stos
xor
dec
test
add
sub
out
xchg
cmc
jmp
jge
add
xchg
arpl
pushl
adc
decl
add
loope
dec
xchg
push
add
dec
xor
jmp
test
cltd
flds
in
xchg
dec
xchg
popa
add
les
mov
inc
add
jecxz
enter
popa
add
inc
add
xchg
or
add
pop
sbb
pop
scas
jl
add
movsl
add
imul
divb
cld
jno
call
jmp
add
sbb
jmp
and
ficoml
jp
pop
test
jnp
jmp
lcall
ficoml
ljmp
pop
push
add
decl
int
lahf
sti
mov
add
add
xor
call
cmp
bound
call
add
sbb
add
sub
add
bound
in
ret
or
iret
xchg
test
or
dec
cli
pop
pop
repz
xlat
icebp
sub
test
scas
mov
mov
push
add
test
pop
arpl
call
add
loope
dec
and
mov
xchg
sub
inc
add
insl
push
add
stc
gs
push
add
jmp
add
mov
mov
adc
incl
int
sub
add
incl
and
cmp
testb
enter
lret
xlat
sub
add
add
lret
sub
add
add
decl
shrb
mov
add
fildll
sbb
iret
add
pushl
lcall
mov
pushl
faddl
ljmp
jo
decl
jle
scas
push
add
pop
add
dec
jecxz
dec
lret
fistps
add
cmp
xchg
sar
cmp
add
fidivrs
addl
adc
jmp
sbb
add
movl
push
inc
add
pop
fmuls
movsb
add
fimuls
pop
dec
add
nop
rclb
add
inc
add
add
add
mov
mov
xor
lcall
addl
sub
jl
movsb
add
movsl
add
mov
sbb
jmp
stos
pushf
and
lcall
cmpsl
add
add
addb
add
mov
add
addl
incl
dec
or
lods
out
mov
add
mov
stc
test
ljmp
imul
mov
add
sbb
ss
add
xor
pop
dec
movb
inc
add
sub
fimuls
idivb
push
pop
jg
jae
call
decl
movl
roll
out
push
call
xor
decl
add
or
jmp
sahf
push
xchg
pop
or
fbld
add
xor
jnp
add
push
data16
dec
cld
or
mov
lods
mov
add
clc
jo
ljmp
add
sub
add
test
add
mov
jb
jmp
sub
daa
add
add
lahf
add
add
dec
add
ljmp
inc
add
or
adc
pmulhw
add
incl
add
dec
rcll
mov
movb
rolb
add
addb
add
inc
add
cmp
add
popf
lahf
mov
add
sbb
cltd
int3
inc
add
jmp
out
cmp
add
mov
daa
add
rorb
pop
pop
stos
push
xor
incl
sahf
mov
loope
imul
and
call
rorl
loopne
mov
xchg
dec
ret
add
mov
add
xlat
mov
jle
add
add
add
add
stos
int3
mov
add
cmp
inc
add
outsb
dec
mov
mov
add
xchg
mov
int
add
lahf
pop
xor
incl
add
adc
incl
ljmp
push
out
popf
in
pop
or
dec
nop
arpl
sti
xchg
insl
aad
xor
adc
lcall
mov
add
add
mov
movsl
add
test
add
add
mov
stos
adc
push
test
adc
ljmp
add
fwait
imul
outsl
push
mov
add
xor
lcall
and
ds
jg
add
mov
add
add
add
or
bound
sti
lods
roll
add
adc
ljmp
popf
leave
mov
add
and
adc
decl
cmpsl
add
add
call
into
mov
incl
pop
mov
sbb
cwtl
insl
adc
inc
add
dec
dec
insb
push
or
add
les
lcall
xor
add
push
test
inc
add
sub
cmc
ficoml
imul
mov
leave
sbb
adc
fisttpl
add
rcl
inc
add
or
add
add
lret
packssdw
add
jo
incl
icebp
pop
arpl
lcall
mov
add
decl
cwtl
mov
add
addb
shll
scas
daa
add
push
cmp
add
and
push
inc
add
insb
push
add
addb
jp
addl
ret
mov
fsubrl
rolb
add
roll
add
jne
add
jbe
add
adc
lcall
add
jmp
add
or
lods
lcall
add
jecxz
je
add
daa
add
dec
add
xor
call
outsl
push
fdivs
add
incl
add
mov
mov
dec
shll
add
fwait
sbb
xchg
or
mov
movsl
add
movsb
add
outsl
hlt
jle
mov
dec
fdivs
mov
add
inc
add
fidivs
call
inc
add
call
pop
std
mov
loopne
jmp
sbb
add
pushl
add
movsl
add
xor
incl
add
adc
inc
add
mov
add
jns
jno
incl
add
sub
mov
call
pop
mov
add
je
add
push
lds
or
lods
jge
add
add
sbb
add
outsl
inc
add
ljmp
add
jbe
add
and
decl
add
les
scas
icebp
add
incl
jmp
decl
or
pushl
add
test
mov
mov
add
mov
add
add
sub
call
dec
aad
arpl
in
xchg
int
das
inc
add
add
gs
adc
cli
out
push
scas
ret
mov
ret
add
std
loope
add
fstpl
mov
int
add
add
dec
das
jno
call
nop
jmp
push
add
add
fcompl
lods
push
push
lds
roll
ljmp
test
dec
scas
lret
jge
add
and
decl
inc
add
push
jnp
add
add
inc
add
jecxz
aam
xor
incl
ret
add
decl
int
add
ja
jecxz
mov
outsl
into
xchg
pushf
add
addl
cmc
nop
and
call
iret
sti
test
nop
lds
cli
push
add
xchg
ret
add
call
adc
jmp
add
add
mov
add
shlb
add
mov
add
int3
jno
lcall
incl
add
mov
lcall
add
pop
mov
jno
jmp
add
push
add
add
cmpsb
add
call
add
out
pop
pop
dec
enter
jle
add
jp
icebp
std
add
mov
inc
add
add
mov
mov
aas
and
call
leave
adc
ljmp
push
xchg
xchg
add
fidivrs
push
add
addb
add
ret
add
int3
dec
shlb
add
add
mov
add
mov
das
imul
scas
ja
mulb
add
add
pop
imul
add
aad
push
add
lds
arpl
jmp
add
push
add
iret
jbe
add
add
ja
add
paddw
into
mov
fidivrl
call
mov
pop
push
add
jae
call
test
sbb
pusha
add
pop
ljmp
add
clc
lcall
mov
add
cmp
mov
push
mov
mov
ficoms
pushl
in
or
in
sbb
add
add
fwait
push
lcall
inc
add
hlt
cmpsb
add
sbb
add
incl
repnz
repz
and
jl
in
adc
jl
add
insb
fdivl
add
mov
add
mov
jmp
dec
inc
add
decl
add
cltd
jne
fisubrl
dec
icebp
addl
add
add
sub
add
add
lods
mov
iret
out
in
mov
rcll
xchg
sti
mov
incl
pop
xchg
fsubr
adc
cmp
mov
loope
mov
sbb
bound
cli
fisttps
add
cld
lcall
add
mov
stos
lods
scas
xor
sti
fadd
add
dec
sbb
dec
out
cmp
fnstcw
add
mov
dec
push
add
and
fidivl
sbb
addl
cwtl
insb
fbstp
mov
and
add
add
mov
call
pop
cmpsb
add
add
xor
mov
add
xchg
test
add
out
clc
xor
decl
sar
inc
add
data16
sub
add
xor
decl
inc
add
add
cmp
add
repnz
dec
cmpsb
add
add
pop
xor
add
aam
add
int3
adc
call
adc
call
incl
dec
dec
jbe
or
pop
daa
add
mov
add
add
jne
add
add
rcll
jbe
lds
out
fstl
add
add
call
mov
jmp
add
mov
incl
add
add
pop
jno
cmp
add
mov
decl
enter
dec
iret
lock
jle
add
add
push
add
in
mov
add
cmp
add
and
jmp
in
push
adc
mov
jmp
lcall
add
add
popa
add
xchg
or
add
add
add
insb
xchg
les
jmp
inc
add
add
jno
call
pushl
jns
add
ret
push
adc
test
out
adc
in
add
xor
jmp
call
data16
sbb
add
in
xchg
pop
ds
add
cmpsl
add
xor
call
decl
imul
mov
nop
mov
add
add
aas
pop
pop
add
into
jno
push
inc
add
fcmovu
inc
add
incb
pushl
add
frstor
in
mov
add
add
cmc
adc
dec
mov
sub
add
ljmp
add
incl
incl
out
xchg
jle
pop
rorl
add
scas
out
mov
add
mov
add
add
xchg
add
fcmovnu
icebp
fimuls
imul
ja
add
aad
lahf
jns
add
mov
inc
add
sub
call
sbb
add
aas
and
dec
out
add
lcall
dec
push
add
xchg
xchg
jno
incl
jmp
ljmp
add
cwtl
das
in
movsl
add
pop
dec
mov
pop
lods
push
push
add
out
mov
mov
aam
add
add
add
inc
add
incl
dec
sbb
sub
inc
add
pop
popa
add
inc
add
push
add
jmp
rep
dec
cmpsl
add
repnz
mov
lret
sub
add
cmp
jmp
add
imul
fldt
push
mov
xlat
add
add
add
cmp
push
add
iret
and
decl
fxch
push
mov
scas
mov
add
call
add
push
test
fnstcw
mov
and
cli
cltd
mov
add
call
sub
test
lcall
decl
add
adc
pushl
add
jl
add
gs
add
sbb
add
push
add
add
cmp
decl
out
sub
shrl
cmpsb
add
fidivl
in
lahf
enter
add
xchg
rorl
nop
mov
add
add
sub
add
aam
add
mov
jp
add
pop
mov
add
lock
sub
add
movb
push
popf
outsb
pop
jmp
add
add
jo
lcall
or
insb
addb
movl
inc
add
inc
add
mov
add
add
fdiv
cmp
add
cwtl
fs
in
loope
xor
ljmp
test
inc
add
or
popf
mov
add
add
pop
mov
add
std
in
and
decl
add
decl
add
mov
dec
cs
movsl
add
xor
call
add
mov
pop
rolb
dec
addl
sahf
dec
sbb
repnz
add
lea
loop
push
add
add
xchg
or
iret
jmp
add
jle
add
pop
and
jg
push
add
jnp
add
add
jge
aad
inc
add
xchg
mov
in
das
mov
or
jmp
add
fisttpll
lods
cmp
inc
add
jmp
inc
add
sbb
cmpsl
add
incl
mov
cmp
aas
btc
loop
or
jmp
add
or
pop
cmpsl
add
sub
add
add
add
in
nop
sbb
scas
sub
test
arpl
inc
add
mov
push
mov
dec
adc
mov
cmp
pushl
daa
add
into
fmull
mov
aas
stos
mov
mov
mov
data16
inc
add
push
pop
pushf
test
add
pop
icebp
mov
add
fimull
ja
cli
and
jmp
add
pop
add
jmp
add
lds
insb
inc
add
jecxz
jecxz
mov
out
dec
cmp
push
fstl
outsb
xchg
inc
add
or
lahf
fwait
aas
lcall
jbe
call
fmulp
frstpm(287
add
cmpsl
add
add
push
scas
xchg
mov
add
ds
jnp
add
jmp
add
sahf
ret
add
data16
fists
add
pop
cmp
mov
not
fdivp
mov
inc
add
jp
add
add
sti
adc
jmp
ror
int
add
add
movl
xchg
testb
jnp
add
dec
xchg
bound
jp
stc
pop
in
popf
movsl
add
add
mov
add
jno
jmp
push
test
shll
add
jecxz
outsl
push
add
in
sbb
test
insl
mov
add
fldt
test
adc
stos
xor
fistps
xor
mov
add
push
outsb
mov
icebp
xchg
gs
in
dec
addl
rcll
mov
add
mov
sahf
fiadds
add
push
add
icebp
mov
js
clc
and
int
pop
addl
mov
jb
fildll
cmp
and
lcall
movl
jecxz
mov
roll
jo
push
dec
xchg
sbb
aas
push
add
imul
cmpsb
add
add
incl
fnstenv
xchg
sub
add
pop
movsb
add
ret
push
add
lods
loop
rolb
xchg
into
pop
int3
mov
jp
add
test
sub
add
jge
in
fistpll
adc
dec
mov
jo
cmp
pushl
add
dec
cvtps2pi
cmp
addl
scas
mov
add
pushl
decl
pop
pushf
movsl
add
xor
or
add
addb
addl
leave
mov
add
pushf
mull
decl
lret
pop
je
xlat
add
fcmove
push
out
pop
je
mov
add
ljmp
pushf
mov
imul
sub
fisubl
add
js
add
pop
sbb
scas
cmc
notl
fmuls
and
jmp
add
addl
clc
xor
cli
mov
in
leave
inc
add
sub
inc
add
sbb
mov
jno
call
outsb
push
add
sub
add
add
into
aaa
mov
add
cmp
mov
add
mov
fcoml
add
pushf
cmp
add
jp
dec
add
lcall
add
inc
add
sub
ss
pop
sbb
add
mov
outsl
add
ljmp
loop
ds
ret
add
dec
pusha
add
loope
pop
dec
and
and
dec
jp
fcoms
mov
incl
sub
xchg
aas
jp
iret
mov
outsl
dec
bound
ljmp
xlat
xchg
cmpsl
add
add
jno
dec
in
mov
xchg
test
cs
adc
lcall
inc
add
add
push
add
ss
jbe
sbb
stos
jle
ljmp
push
std
xchg
add
jecxz
or
addb
rcr
fists
add
popa
add
push
inc
add
sahf
add
decl
add
jo
call
inc
add
jmp
push
add
dec
daa
add
dec
stos
inc
add
or
add
dec
cmp
outsb
aaa
out
lret
mov
repnz
sub
add
test
aam
add
fstpl
call
lret
addb
or
xchg
test
dec
push
aas
sbb
or
stc
lahf
enter
leave
sbb
add
mov
jecxz
insl
xor
ljmp
idiv
xlat
popa
add
xor
add
adc
add
or
add
add
mov
loope
nop
xor
ljmp
add
jmp
rol
add
add
or
mov
pop
push
add
mov
arpl
decl
push
mov
mov
pop
sbb
stos
sbb
add
xchg
xchg
jmp
jmp
add
sbb
aaa
sahf
adc
fidivrs
add
push
sti
add
add
push
add
push
sub
or
movsl
add
add
add
fwait
and
call
add
add
jle
int
add
lea
jmp
add
outsb
ret
or
clc
xchg
inc
add
push
add
scas
pop
mov
ja
push
dec
pop
fmuls
pop
jne
cmc
mov
mov
jle
add
jle
filds
mov
cmp
jo
mov
push
outsl
push
add
rcll
add
out
push
xchg
cmp
sbb
add
add
lcall
jo
jmp
add
outsl
jp
add
jmp
add
xor
add
fnstcw
add
out
pop
mov
jmp
addb
mov
addl
fwait
outsb
das
in
sbb
add
cld
stos
pop
loope
arpl
fisttpll
aaa
pop
in
popl
enter
sbb
add
add
or
push
add
popa
add
testl
incl
mov
add
adc
lcall
pushl
lcall
test
int3
or
addb
cmp
add
ss
mov
or
paddw
loop
pop
sbb
out
movsb
add
add
hlt
mov
push
aam
push
out
and
push
xor
decl
jne
add
mov
lahf
xor
lcall
add
mov
roll
add
jae
lcall
aam
mov
ljmp
add
inc
add
mov
les
pop
roll
fdivrp
mov
add
pop
add
rcrb
fcoms
add
fcoml
ljmp
lcall
pop
mov
fstpt
dec
jb
cmp
imul
decl
and
jb
jge
add
fwait
xlat
push
addl
leave
dec
xlat
jmp
xchg
fwait
mov
sbb
sub
add
cmp
add
jmp
aad
fmul
fsubl
add
add
decl
loopne
or
pushl
decl
pop
add
ljmp
mov
jge
mov
sti
scas
push
add
mov
insb
push
jae,pn
call
add
or
stos
fidivrs
int3
les
sti
and
call
sbb
sub
add
in
inc
add
fbstp
or
xchg
lods
addb
mov
add
add
adc
mov
and
sbb
mov
outsb
repz
add
insl
push
add
addb
add
fdivr
loope
jl
add
add
dec
scas
mov
or
pop
and
dec
scas
cli
test
std
lcall
incl
xchg
push
push
sub
add
insl
and
out
adc
sub
movntps
add
xor
pop
push
add
lds
mov
ljmp
leave
pop
pop
add
mov
dec
das
xor
ljmp
lret
jb
pushl
sbb
and
lcall
lods
mov
jp
mov
leave
mov
fcomi
mov
ljmp
mov
into
jecxz
sub
push
add
pushl
add
pusha
add
ljmp
push
add
dec
inc
add
add
add
add
add
mov
clc
pop
inc
add
add
mov
add
add
xchg
fistpl
jge
jp
lcall
sbb
dec
xlat
js
addb
add
xchg
repnz
xchg
pop
mul
add
pushl
js
test
pop
dec
es
dec
push
dec
jo
jmp
add
dec
xor
cmp
rorb
xor
sti
push
add
incl
outsl
push
mov
add
add
jnp
add
mov
add
add
add
js
add
mov
testl
leave
and
pushl
add
add
sub
xor
pushl
pushf
mov
jne
add
data16
pop
dec
cwtl
xor
lcall
mov
add
add
sbb
xlat
jne
dec
push
xor
push
jmp
pop
std
sub
mov
jmp
add
add
je
add
jmp
ljmp
rcll
add
push
add
jno
dec
mov
sub
incl
and
call
add
sub
add
movl
iret
outsl
dec
push
sbb
jp
add
add
aam
pop
push
pop
push
xor
jl
add
push
add
sub
add
xor
xor
lcall
outsl
sbb
dec
data16
add
add
mull
add
pop
or
add
scas
adc
decl
mov
add
movb
fwait
adc
call
daa
add
pop
test
add
incl
add
call
mov
and
mov
add
pop
add
or
add
stos
ljmp
push
sbb
jmp
add
cmp
ljmp
aaa
bound
stc
fldl
in
mov
lods
mov
mov
xor
ljmp
sarl
mov
cmpsb
add
psrld
add
push
add
in
call
jl
fnstcw
push
add
or
sti
imul
neg
adc
add
add
mov
add
cmp
add
adc
fsubr
push
jbe
mov
scas
rcll
add
sahf
repz
mov
push
jg
add
push
scas
lea
add
arpl
call
add
lea
add
xchg
jns
pop
add
add
pushf
out
mov
or
jmp
add
push
add
fcmovbe
cmp
dec
pop
jnp
add
add
add
pusha
add
dec
or
add
pushl
sbb
add
fwait
scas
adc
jmp
add
mov
dec
data16
rcr
testl
add
imul
pushf
sub
pop
hlt
jge
add
add
adc
ljmp
addl
addb
add
lcall
call
mov
popa
add
outsl
int
mov
loopne
faddl
add
push
ret
add
jmp
cld
pop
ret
add
in
pop
ss
inc
add
lods
sbb
pop
pushf
cmp
add
pushf
leave
xchg
lods
xchg
outsl
jae
jmp
test
pop
inc
add
cmp
shrl
sbb
mov
inc
add
and
call
sub
jnp
cld
daa
add
outsl
xor
pushl
testb
movsb
add
add
test
add
jmp
add
add
mov
jmp
add
int3
dec
out
sbb
add
pushl
add
sub
jmp
add
sarb
add
pop
lret
push
add
and
jmp
pushf
mov
pushl
push
add
pop
add
add
ljmp
inc
add
push
add
mov
jmp
leave
paddd
addb
add
push
in
les
sub
pop
xor
jmp
add
in
lret
mov
jle
add
add
call
mov
repz
aad
lret
jle
add
popf
daa
add
and
decl
add
cmp
add
mov
movb
jmp
add
xor
pushl
add
push
cmp
jl
scas
ret
add
fdivrs
and
aas
ror
addr16
dec
je
mov
add
cmp
add
lcall
insl
cmp
adc
lcall
mov
lods
getsec
and
call
jl
add
les
call
mov
mov
add
jo
dec
dec
add
call
add
aaa
das
xor
pushl
add
cmp
ret
add
add
test
xchg
mov
hlt
outsl
outsl
push
sbb
stos
icebp
pop
movsb
add
movsb
add
incl
push
dec
mov
jmp
add
push
mov
call
add
leave
xlat
ljmp
add
aam
add
mov
add
xchg
or
add
stos
xlat
data16
add
sbb
xchg
mov
and
pushl
lods
add
jae
incl
movsl
add
jg
push
add
push
inc
add
repnz
imull
lcall
adc
cmc
add
call
incb
add
test
xor
rolb
int3
filds
mov
lcall
fcoml
jmp
pop
and
inc
add
int3
rolb
dec
push
shll
inc
add
cmp
pop
add
pop
add
dec
or
pop
stos
mov
add
xor
call
lcall
in
lods
mov
test
dec
stos
int
add
incl
mov
repz
pushl
mov
mov
add
jns
add
xchg
xchg
xor
test
inc
add
leave
test
add
xor
inc
add
fidivrl
lret
pop
add
xchg
push
jecxz
jmp
nop
movsl
add
sub
jnp
icebp
cmp
add
call
jmp
add
mov
add
mov
sbb
in
mov
int
in
cltd
int
fstps
jmp
add
add
call
add
mov
flds
add
mov
jnp
add
scas
adc
cmp
in
add
push
add
pop
leave
imul
das
into
and
lea
add
lret
fisttpl
pop
and
decl
mov
or
inc
add
xchg
addb
mov
std
loopne
mov
and
mov
in
cld
sti
outsb
stc
jbe
pop
push
push
and
and
mov
jg
imul
mov
lcall
dec
inc
add
pop
mov
les
fsubs
add
jb
call
decl
hlt
sti
pushf
mov
add
call
xor
fidivs
add
adc
lcall
jmp
ljmp
stc
addr16
and
aad
add
xchg
addl
cmp
bound
lcall
add
addr16
xchg
addl
sti
in
sub
add
cmc
or
inc
add
cmp
je
test
add
call
sbb
data16
and
lcall
frstor
fisttpl
xchg
mov
add
add
cli
mov
int
add
fistpll
fwait
jl
out
in
scas
xchg
arpl
jmp
mov
add
loopne
lret
sbb
fadds
add
pop
jp
add
sahf
pushf
outsl
loopne
stos
not
repz
cmp
jbe
lcall
add
push
xchg
dec
loope
adc
inc
add
out
mov
lods
mov
ja
lcall
pop
add
add
push
inc
add
insl
jp
add
ljmp
xor
aas
stos
rclb
sub
xchg
rorl
ss
bound
jmp
add
mov
xchg
jmp
rolb
add
or
aad
aam
ret
add
pop
push
add
dec
lahf
mov
outsb
cmp
call
or
and
lcall
inc
add
add
into
jbe
add
outsb
xchg
mov
inc
add
jae
pushl
into
fimuls
test
jmp
or
int
sub
in
add
mov
les
jne
add
add
aaa
and
incl
add
mov
xchg
jl
xchg
scas
cli
sbb
lret
aas
push
add
cwtl
mov
add
and
mov
add
push
add
in
add
stc
cltd
into
loop
dec
addl
call
pushl
add
xchg
fsubrl
imul
pop
popf
pop
pop
add
inc
add
lret
add
mov
add
add
mov
call
add
iret
jnp
add
jmp
pop
add
push
inc
add
nop
push
icebp
das
dec
mov
push
add
and
add
add
add
sub
add
mov
add
cmp
aam
in
jmp
add
mov
cmp
adc
jmp
add
cmp
out
sub
lods
xor
test
cmpsl
add
shrl
decl
pop
push
lret
xchg
addb
add
sbb
add
arpl
jge
mov
mov
divb
add
push
add
pop
in
insl
mov
loop
inc
add
add
ds
add
dec
push
faddl
add
frstor
mov
mov
add
movb
mov
mov
inc
add
mov
add
jne
dec
addl
jbe
add
add
jmp
add
jecxz
xchg
out
movl
push
add
addl
add
add
call
jmp
add
xchg
and
incl
cli
out
ds
xor
arpl
incl
test
lea
xchg
jno
jmp
add
mov
add
out
movsb
add
add
out
cmp
or
iret
cmpsl
add
mov
sbb
add
pop
cmp
out
cwtl
jmp
add
mov
movsb
add
fxch
pop
ljmp
rolb
add
ds
mov
sub
aad
cmp
jp
aad
add
add
fisubs
repnz
add
add
lcall
or
xor
mov
jmp
nop
sti
jl
imul
in
fiadds
lcall
add
fcomps
add
jmp
sbb
add
fs
cmp
add
or
shlb
call
std
adc
pushl
jae
pushl
add
pop
adc
jmp
rol
add
sub
rcrb
addl
daa
add
add
push
repnz
incl
add
iret
bnd
add
add
ffree
add
mov
add
add
add
std
popf
movl
jmp
add
aas
rorb
inc
add
add
xchg
ja
add
add
aad
add
sbb
call
and
cmp
add
call
cld
mov
int
idivl
add
push
push
lods
push
pop
sbb
mov
pop
pushf
gs
jg
int3
adc
pushl
sahf
pop
sub
jecxz
mov
in
jb
stc
cli
dec
roll
pop
add
jno
aas
add
pushf
sub
iret
push
into
mov
add
mov
decl
mov
jmp
dec
mov
add
data16
sar
lods
test
incl
lcall
mov
insb
lret
fstl
jmp
pushl
mov
sti
push
add
dec
imul
dec
xor
lcall
rolb
add
hlt
addl
add
arpl
lcall
cld
loope
imul
sub
mov
add
add
cmp
lahf
cmp
cmp
or
push
lret
add
std
and
repnz
decl
out
loop
jecxz
xchg
push
pop
in
stos
sub
jne
xor
call
decl
inc
add
decl
decl
test
xor
addb
add
sub
hlt
jb
ds
mov
aaa
xor
ljmp
mov
rcll
incl
add
ds
sub
pushf
js
add
aaa
insl
jle
add
daa
add
add
mov
addb
scas
jae
ljmp
lds
fs
add
out
ret
add
cli
test
lcall
and
fld
add
sarl
ja
xchg
mov
ljmp
pop
push
add
outsl
add
lahf
cmp
out
cld
addl
bound
ljmp
call
cli
add
js
or
add
add
stos
imul
mov
dec
std
and
ss
or
add
decl
stc
mov
add
and
ljmp
mov
out
or
addl
push
out
jecxz
roll
popa
add
test
dec
xor
decl
addb
test
movb
call
inc
add
fldt
and
mov
xchg
popa
add
ljmp
push
add
outsl
sbb
add
add
mov
jge
les
fisubrs
out
or
push
je
test
ja
mov
mull
add
bound
jmp
jmp
add
pop
xchg
dec
arpl
call
lods
test
dec
push
cmpsb
add
add
in
push
scas
xchg
lods
xchg
fndisi(8087
add
add
imul
add
inc
add
arpl
decl
push
or
movb
aas
inc
add
pop
mov
repz
sub
ds
push
add
add
sbb
roll
sbb
fsubs
fisubl
jmp
add
shr
fistpl
xor
pushl
call
add
fadds
push
ret
scas
stos
lea
es
mov
les
adc
pushl
fidivrl
mov
add
mov
add
call
push
add
xchg
cmpsb
add
in
movsb
add
dec
jg
das
cli
push
add
bound
ljmp
or
repnz
fadd
add
cmp
dec
xor
inc
add
scas
repz
cmp
scas
jnp
add
out
test
fwait
aam
cmpsb
add
xchg
add
or
ljmp
push
add
jae
decl
and
call
jmp
ret
add
aam
sbb
ljmp
jae
decl
inc
add
add
cmp
ja
jb
or
movsl
add
leave
sub
cwtl
or
add
jl
push
add
sbb
lea
cli
outsl
sub
pop
or
add
add
mov
jle
lcall
aaa
ljmp
push
add
addl
fldt
adc
dec
test
dec
lods
xchg
xor
pushl
xor
add
mov
add
int3
das
pop
cwtl
mov
add
add
add
mov
cmp
dec
repz
sbb
cmp
faddp
add
add
push
add
lea
add
clc
add
in
aad
adc
lcall
push
mov
adc
jle
rcll
xchg
out
movsb
add
ja
add
add
les
in
out
sbb
rclb
sbb
add
xchg
inc
add
add
add
loopne
pop
xchg
sti
xchg
leave
mov
and
decl
add
fdivrs
roll
add
push
add
add
pushl
add
add
add
sbb
inc
add
add
add
lcall
stos
dec
cmpsl
add
mov
xor
lcall
jne
add
sbb
mov
push
ljmp
add
add
dec
or
or
into
loope
push
insb
movb
mov
add
push
pop
push
test
push
mov
cltd
jne
xor
aam
adc
lcall
cs
add
sbb
add
movlps
pushl
call
add
pusha
add
xor
pusha
add
lods
mov
lock
add
addb
outsb
outsl
mov
inc
add
pop
ret
add
pop
lcall
add
lret
pushl
add
add
jmp
add
xchg
sub
add
add
add
push
xchg
or
mov
jnp
add
jno
pushl
add
call
dec
add
decl
xchg
jae
jge
sbb
data16
sub
xchg
in
fnstsw
movb
dec
xchg
mov
add
roll
lcall
add
arpl
pushl
add
dec
dec
movsb
add
aaa
bound
pushl
add
in
xlat
xchg
jno
mov
pop
cltd
mov
add
add
jle
or
add
int
add
jl
push
add
nop
movb
mov
imul
add
add
mov
jae
ljmp
xor
lcall
icebp
test
add
std
adc
incl
jmp
add
incl
and
out
pop
adc
mov
cmp
movb
add
sub
add
add
jle
mov
xchg
adc
ljmp
sbb
add
int3
and
mov
jne
add
add
out
mov
add
sbb
mov
das
test
mov
in
sbb
cltd
je
add
add
fsubp
add
add
popa
add
sets
jae
ljmp
add
and
decl
fldcw
add
inc
add
pushf
lds
add
push
mov
aas
lcall
lods
in
jle
add
jg
pavgb
push
add
ljmp
jae
call
loope
sbb
add
gs
shll
add
std
addl
or
add
adc
ljmp
cmp
mov
add
add
mov
call
mov
lahf
mov
ljmp
filds
and
pushl
xchg
dec
and
lcall
add
inc
add
rolb
adc
incl
fscale
loop
in
clc
jae
jmp
sub
cmpsl
add
add
push
rcr
out
push
lock
mov
out
lret
sbb
imul
add
jo
pushl
out
sub
test
addb
test
add
stos
and
jmp
add
adc
fcoml
cmp
or
push
add
mov
add
cli
ja
add
add
jmp
pushl
pushl
add
add
jecxz
and
decl
pop
push
add
mov
add
cs
xor
pushl
decl
push
add
inc
add
pusha
add
stos
add
addb
add
sub
add
das
jecxz
lods
pushf
iret
rolb
add
xchg
test
jns
jl
add
add
std
mov
jg
cmp
add
ljmp
in
pop
das
and
cmc
jae
pushl
add
adc
lods
pop
cs
fisubs
xchg
hlt
movsl
add
sub
testl
popa
add
jnp
dec
imul
nop
pop
pminsw
add
movl
add
inc
add
test
roll
pop
fsts
inc
add
addr16
adc
decl
cmp
shlb
pop
ror
xchg
dec
sub
jecxz
repnz
or
movsb
add
or
add
lret
pushl
add
xchg
mov
mov
mov
inc
add
insl
mov
pushf
and
incl
add
mov
adc
lcall
jns
add
stos
mov
add
dec
fsubr
mov
inc
add
enter
inc
add
jp
add
dec
ljmp
or
lahf
cmp
add
add
jmp
add
repnz
add
pop
sbb
lea
add
decl
out
or
add
add
imul
clc
pop
addr16
pop
sti
pop
mov
addl
data16
add
mov
in
mov
addl
and
dec
or
push
dec
dec
jmp
add
push
ret
cli
mov
adc
mov
call
jmp
or
and
inc
add
mov
add
cmp
jne
cmc
rolb
sub
add
movsb
add
pop
mov
fcom
inc
add
data16
xor
call
or
pop
add
fcmove
mov
pop
add
cltd
mov
jmp
add
incl
call
decl
and
ret
add
mov
add
push
mov
adc
call
jno
ljmp
mov
aas
push
add
sbb
fimull
addl
add
movsb
add
incl
add
int3
add
cmp
jne
cmp
inc
add
jns
or
add
int
inc
add
out
addr16
cltd
lds
insl
lods
mov
ljmp
jae
call
insl
or
les
inc
add
push
js
add
push
ret
std
lock
xchg
das
jb
out
ljmp
ljmp
cltd
test
push
add
lds
mov
push
sbb
incl
add
mov
sahf
cmpsb
add
insl
data16
add
adc
pushl
add
loopne
cmp
scas
sbb
sahf
xor
jmp
add
add
xchg
lea
bound
lcall
shlb
mov
aad
mov
gs
dec
cmp
in
xor
out
lds
xor
repz
add
das
les
lds
xchg
mov
call
imul
pop
and
sub
add
adc
jmp
jge
add
add
addl
decb
add
add
add
lret
pop
sti
das
pop
sbb
add
add
rcr
fcompl
jno
inc
add
add
add
pushl
decl
add
pop
fidivs
xchg
testb
je
push
add
inc
add
xlat
jb
jmp
int
cwtl
mov
or
ljmp
add
cmp
add
mov
add
lods
loopne
fwait
adc
add
cmp
add
add
inc
add
sbb
stos
test
add
inc
add
push
dec
rcrl
mov
add
push
add
inc
add
insb
in
enter
mov
in
movups
lcall
or
add
lds
movsb
add
decl
ds
shlb
add
ds
je
pop
add
mov
add
push
add
lock
add
mov
add
or
mov
inc
add
jmp
add
jle
add
loope
js
or
add
cmp
add
lcall
mov
lds
xor
lcall
movsl
add
iret
pusha
add
dec
lcall
mov
int
and
inc
add
mov
jge
add
add
sub
xor
in
sub
push
cmpsb
add
incl
cwtl
mov
jmp
in
jb
ljmp
fwait
jns
sbb
add
incl
fwait
outsl
jmp
add
adc
incl
pop
imul
out
negl
and
incl
add
stc
rolb
add
jge
add
mov
test
add
decl
addb
addb
sub
cmpsb
add
push
pop
shl
cmp
cld
aam
add
push
rcr
pop
xor
fcmove
push
add
lea
add
aas
jle
add
add
call
imul
add
mov
jo
lcall
mov
dec
addb
add
mov
add
mov
jmp
add
cmpsb
add
aam
mov
push
push
xchg
scas
push
add
xchg
and
ljmp
inc
add
mov
xor
call
add
jnp
adc
and
fcoms
out
imul
add
add
out
cmp
cmp
inc
add
insl
aam
movsb
add
inc
add
add
pusha
add
stos
aad
push
std
jo
lcall
add
decl
rclb
imul
dec
inc
add
cmp
add
mov
dec
xchg
hlt
cmp
in
jmp
movsb
add
dec
roll
add
lods
lret
pushl
lcall
add
inc
add
jns
add
jo
decl
out
pop
and
decl
std
jp
stos
xchg
sbb
add
sub
add
mov
pop
ja
adc
test
xchg
arpl
call
or
das
std
testb
cmp
ljmp
in
mov
call
fsubrl
xchg
push
add
popa
add
rol
add
aas
cwtl
push
add
push
add
into
test
and
ljmp
cmp
repz
cs
add
in
jb
jnp
sbb
add
inc
add
pop
insb
mov
ljmp
push
call
shr
inc
add
dec
sub
and
push
add
cmpsb
add
ret
add
adc
mov
jp
jne
add
add
bound
decl
jmp
add
clc
dec
fwait
mov
sub
iret
and
mov
sbb
jle
pusha
add
lods
inc
add
add
ret
add
jno
pushl
dec
pop
in
movb
add
push
add
add
leave
jnp
pop
add
adc
incl
fisttpll
xchg
movl
lahf
xchg
sub
test
sub
xor
ljmp
ljmp
push
add
push
stc
ret
add
add
inc
add
sbb
push
shl
mov
mov
lret
xchg
xchg
pop
xchg
mov
in
stos
sbb
cld
push
loop
sbb
add
cltd
sbb
xchg
addl
mov
jge
add
and
ljmp
add
add
mov
add
arpl
incl
pop
jnp
fstl
addb
rolb
jbe
imul
dec
fsts
add
sbb
mov
add
add
call
call
lock
mov
add
add
mov
test
stos
add
incl
add
and
ljmp
adc
mov
or
add
popf
add
mov
adc
pushl
add
loop
arpl
call
add
add
jmp
add
fisubrs
stc
int
dec
jb
cli
imul
inc
add
add
jnp
call
pop
add
add
add
dec
imul
in
inc
add
outsl
imul
add
xchg
popa
add
inc
add
decl
imul
dec
in
rcrb
popf
xor
pushl
lea
incl
add
negb
add
inc
add
push
cmp
out
ljmp
ljmp
jge
xor
ljmp
or
add
or
mov
in
lods
push
add
adc
incl
int
stos
cli
addb
add
bswap
insl
incb
add
mov
int3
cmpsl
add
incl
add
mov
daa
add
frndint
add
pushl
int
add
add
dec
mov
pop
add
popl
int3
insb
push
add
pop
mov
loopne
cmp
add
add
and
incl
pushf
lret
jp
adc
call
jecxz
mov
jno
ljmp
add
dec
xchg
push
xchg
out
sub
add
push
movsb
add
add
adc
call
addl
js
add
enter
mov
jmp
bound
pushl
adc
add
addl
in
addl
push
rclb
add
movsl
add
add
add
filds
jl
add
popa
add
sti
fwait
dec
xor
call
add
or
jae
jge
decb
add
add
add
arpl
jmp
cli
inc
add
test
push
push
mov
add
mov
inc
add
jge
ret
add
xor
add
mov
add
sbb
mov
std
cwtl
sub
push
scas
rcrb
xlat
pop
in
push
add
inc
add
add
decl
incl
lea
ja
xor
decl
mov
cmc
loope
data16
xor
call
add
jb
call
jmp
add
outsb
inc
add
mov
lcall
lock
das
in
xchg
inc
add
jmp
lcall
in
sub
insb
mov
jle
add
pop
sbb
add
add
sti
mov
ret
add
lods
mov
add
iret
iret
xor
pushl
mov
add
mov
dec
pop
cmp
add
mov
dec
inc
add
sahf
movsl
add
add
mov
cwtl
lea
add
jmp
nop
arpl
decl
and
call
cli
fucom
add
or
add
sub
add
call
test
add
shlb
rolb
add
pushf
mov
nop
scas
jmp
popf
mov
int3
lods
enter
decl
add
addl
pop
xlat
or
add
sub
js
aad
add
js
hlt
jl
loope
ljmp
add
dec
insl
cs
pop
out
outsb
sbb
test
nop
mov
in
sub
nop
clc
call
testl
sub
jmp
leave
dec
popf
int3
push
add
or
or
mov
xor
call
mov
sahf
mov
cmp
aaa
sbb
or
add
adc
incl
call
mov
cli
das
into
add
xchg
cmpsb
add
stos
ud0
add
cmp
addb
dec
cmp
adc
add
bound
cmp
xor
jmp
or
sar
ss
imul
sbb
dec
inc
add
add
ds
add
add
ljmp
incl
add
jmp
add
add
add
or
and
lcall
jb
incl
mov
jge
sub
push
add
ja
add
mov
repz
xchg
push
add
mov
cmpsb
add
imul
sub
int
add
in
mov
sbb
add
incl
out
sahf
xchg
sbb
add
lahf
mov
sbb
add
outsl
dec
aas
dec
dec
mov
add
lea
push
add
in
jge
add
sub
sti
push
adc
sbb
push
add
test
decl
push
aad
rolb
inc
add
jp
add
or
arpl
lcall
add
dec
cmc
or
cmc
mov
jl
add
push
js
ljmp
stc
jnp
mov
fwait
and
add
xchg
sub
add
add
lods
push
popf
xchg
pop
xchg
in
das
cmp
mov
fcompl
add
sub
idivb
add
call
out
jne
or
add
jmp
dec
xor
pushl
add
add
add
data16
roll
add
push
lea
decl
inc
add
cmp
add
jb
decl
pop
adc
inc
add
dec
shr
ret
add
add
push
les
sub
decl
add
ljmp
cmp
push
push
fadds
add
out
dec
fmull
sbb
add
pop
scas
sub
ja
cmp
adc
call
aam
cli
je
add
call
jmp
call
add
loopne
xchg
fnsave
incl
add
jmp
xor
jp
shl
insb
lock
add
nop
xor
pushl
lcall
pop
leave
repz
aam
addb
add
sub
add
push
inc
add
push
add
adc
movl
cmp
jno
flds
call
add
mov
aam
sbb
arpl
call
add
nop
adc
xor
add
cmp
jns
cld
xchg
ficompl
movb
add
adc
ljmp
inc
add
loop
cmp
add
movsl
add
xchg
mov
lds
icebp
adc
decl
jb
pushl
int
mov
addb
dec
jge
fisttpll
ja
push
or
testl
cmp
cmp
add
mov
add
dec
fistpll
push
movb
lret
outsb
stc
push
add
pop
ret
add
add
or
clc
push
stos
jl
addb
adc
pop
mov
jl
test
stc
and
jmp
add
insl
out
push
leave
and
inc
add
repz
pushf
insb
cmp
ret
add
xchg
sarb
add
pop
loope
shrb
add
add
scas
mov
bound
lcall
lea
add
xchg
movb
inc
add
xchg
jmp
add
aam
aam
shr
cmpsb
add
clc
sub
add
mov
or
push
add
ljmp
test
add
ljmp
push
insl
jae
decl
inc
add
in
repnz
icebp
lret
lret
loop
cwtl
sub
xor
jmp
std
jl
add
push
add
cmp
push
sahf
aam
insb
mov
pop
inc
add
push
jmp
add
loope
sbb
add
das
fildll
inc
add
ret
mov
lock
add
dec
xlat
push
add
cmp
push
outsb
pop
adc
sbb
add
pushf
cmp
shr
bound
aas
cli
jmp
and
ljmp
rorl
lock
loop
jns
fwait
pop
sahf
mov
push
jno
dec
leave
and
pop
or
jp
or
add
ret
add
ljmp
add
popf
xchg
movb
faddl
add
jl
xchg
imull
mull
adc
clc
mov
insb
dec
rolb
sti
jl
and
push
mov
dec
insb
out
jmp
add
add
xor
int
add
add
and
inc
add
out
testb
pushl
jmp
inc
add
les
dec
jno
jmp
add
sub
addb
mov
mov
add
pusha
add
jmp
into
pop
out
out
jp
add
decl
add
mov
add
sub
sbb
add
out
inc
add
addb
add
jmp
mov
sbb
movb
mov
mov
add
push
test
daa
add
fisubrs
and
incl
add
stos
xor
pop
add
add
clc
out
test
add
add
sub
rolb
pop
add
jmp
fildll
inc
add
add
add
push
add
pop
add
call
and
pushl
add
pop
clc
mov
add
call
add
inc
add
add
add
fcompl
pop
mov
cmc
in
daa
add
add
icebp
int
arpl
ljmp
cmp
pop
adc
in
lea
inc
add
sub
add
add
add
mov
add
sub
add
sar
sbb
mov
add
loope
push
int
add
add
ret
add
inc
add
cmpsl
add
popf
pop
pop
adc
add
fmull
add
dec
fisubrs
add
or
sub
mov
pop
add
test
add
sub
xchg
mov
incl
ljmp
in
xchg
movl
fcmovu
add
adc
pushl
add
movb
movsl
add
mov
stos
jg
push
mov
fmulp
jl
add
push
push
sbb
arpl
mov
loope
sub
add
pslld
add
scas
aas
mov
jae
cmp
fisubrs
jno
inc
add
cmpsl
add
cwtl
mov
psrld
dec
addb
into
xchg
xchg
test
jnp
pop
add
incl
sub
add
iret
xor
lcall
lcall
out
aas
jo
mov
add
and
ljmp
cwtl
or
add
push
out
fidivrs
and
dec
rolb
cltd
pop
add
add
add
push
cwtl
ret
mov
mov
mov
add
scas
cmpsl
add
push
add
add
fxch
fidivrl
add
inc
add
pop
pusha
add
loopne
clc
pop
add
cmp
fisubs
ljmp
pusha
add
sti
rorl
add
pop
scas
xchg
pop
jbe
sbb
test
cwtl
inc
add
push
dec
das
repnz
pop
jae
pushl
add
and
jmp
add
das
stos
add
rcrl
repz
xchg
popf
nop
data16
cwtl
jge
test
rolb
pop
push
outsb
mov
in
or
clc
cld
fdivs
add
mov
add
inc
add
ds
outsl
fldl
add
mov
add
jo
lcall
clc
or
add
add
add
pushl
aas
out
pop
add
dec
lds
je
jbe
add
int3
dec
inc
add
add
lds
mov
cmp
icebp
push
addb
add
add
xchg
inc
add
dec
mov
roll
data16
outsb
jbe
add
fdivrl
cli
ljmp
push
add
push
dec
push
and
decl
jg
mov
decl
jbe
out
pushf
les
mov
test
push
add
fnsave
add
add
gs
add
push
xchg
sahf
pop
add
aaa
sar
xchg
add
inc
add
adc
lcall
decl
add
out
or
movb
add
clc
cmpsb
add
push
push
add
mov
jns
add
fcmovb
add
jge
add
cmpsb
add
push
add
ljmp
movsb
add
add
movl
and
ljmp
mov
pop
aam
add
add
mov
fisubl
add
jnp
add
add
push
push
xchg
in
inc
add
in
jbe
mov
cwtl
push
cmpsb
add
jns
in
cmp
pop
and
call
add
add
add
xchg
in
addl
stos
or
push
add
ja
movsb
add
fdivs
popf
in
roll
or
roll
fwait
mov
xchg
cmp
add
addb
add
jmp
cmpsl
add
add
lcall
imul
add
icebp
and
inc
add
popf
ljmp
add
inc
add
fnstenv
push
push
add
mov
inc
add
add
rolb
in
hlt
mov
ja
addl
xor
cmp
mov
add
xchg
add
inc
add
sub
aad
movsl
add
add
push
add
pushl
mov
sub
sti
jno
ljmp
notb
call
jmp
add
int
add
adc
lcall
fcmovbe
dec
int3
test
pop
mov
cld
stos
sahf
cmpsl
add
movb
add
jge
sub
lcall
and
mov
xchg
mov
push
or
cmc
push
add
jns
clc
fwait
add
add
out
aad
mov
add
add
fisttps
sbb
add
add
xchg
ss
push
ret
add
das
bound
mov
push
stos
or
shll
into
lock
add
fstpt
jg
les
nop
adc
jmp
add
dec
out
add
decl
and
jecxz
mov
mov
pop
mov
add
cmp
add
in
aas
out
or
cmpsl
add
jmp
loopne
loopne
std
in
cwtl
or
inc
add
mov
pop
cmp
inc
add
addb
and
decl
push
cltd
imul
add
add
in
pop
cmpsl
add
adc
mov
add
pop
add
inc
add
movl
insb
enter
and
call
call
mov
add
lcall
add
call
add
pop
sub
pop
jns
add
add
addl
pusha
add
mov
hlt
insl
sbb
cmp
test
add
outsl
push
add
inc
add
bound
inc
add
add
add
jle
add
xor
fcoms
cltd
mov
movsl
add
add
add
inc
add
dec
sub
sbb
add
das
inc
add
shrl
in
pop
push
jecxz
dec
add
jns
push
add
outsb
lds
jnp
inc
add
js
bound
cli
fwait
clc
add
stos
ja
add
sahf
jl
dec
std
jecxz
or
jno
decl
out
ss
lcall
sbb
add
jbe
sbb
fildl
ljmp
and
jmp
jmp
add
add
push
add
mov
xchg
sub
add
add
mov
ret
mov
icebp
jbe
push
add
xchg
mov
sbb
popa
add
lcall
adc
call
add
cmp
add
fiadds
mov
add
mov
add
stos
pop
xor
jp
cmp
sbb
add
dec
arpl
lcall
jmp
pusha
add
test
rep
add
lcall
nop
les
idivb
push
add
cmp
add
or
add
sbb
cld
adc
cmp
add
push
add
sub
mov
call
cld
pop
and
jmp
add
add
iret
cmp
jl
and
incl
add
mov
add
add
xchg
mov
add
leave
negl
add
ret
add
mov
add
stos
pop
inc
add
mov
ljmp
mov
add
add
sub
pusha
add
xor
decl
ljmp
test
inc
add
xor
add
sbb
nop
jecxz
jo
inc
add
cmp
add
jae
decl
sbb
mov
add
add
fidivl
add
mov
scas
movl
add
push
cltd
mov
add
fidivrl
push
mov
add
and
call
xchg
mov
cmp
add
shl
xchg
jbe
xor
decl
add
add
jno
cmp
addl
xchg
lret
sahf
adc
call
call
out
mov
decl
pop
mov
jp
add
mov
xchg
xor
add
incl
add
xchg
push
popa
add
mov
loopne
cmpsl
add
dec
in
dec
mov
add
rolb
add
leave
push
add
hlt
adc
jmp
pop
and
decl
xor
incl
incl
dec
cmpsb
add
add
test
add
lret
dec
in
mov
pushf
bound
lcall
iret
mov
mov
sub
add
movb
sub
add
push
add
push
mov
data16
mov
inc
add
or
fcmove
lds
ss
pop
add
incl
jmp
negl
imul
idivb
rep
sti
jle
xor
std
sbb
icebp
mov
in
lea
cmp
pop
add
stc
inc
add
pop
and
jmp
add
fidivl
pop
cmp
add
mov
push
add
sahf
dec
divb
cmpsb
add
ret
cmpsb
add
adc
jg
loope
int
push
add
stc
push
xor
fsts
mov
add
inc
add
cmp
or
lds
adc
or
add
jnp
cmp
add
movb
add
mov
outsb
mov
add
add
add
add
outsb
xchg
scas
dec
sub
out
sub
rolb
mov
add
in
pop
test
and
push
xchg
mov
add
dec
leave
xor
lcall
add
ja
adc
jl
add
add
add
adc
add
add
iret
loope
and
ljmp
cmp
add
rcll
push
add
ficomps
inc
add
enter
dec
and
pushl
mov
inc
add
add
jnp
add
and
inc
add
push
lock
add
cltd
outsb
aam
clc
lock
mov
add
mov
lock
lods
jae
mov
iret
mov
add
test
fimull
mov
call
cmp
xchg
or
in
popa
add
jl
add
and
decl
icebp
pop
dec
pop
sub
add
bound
call
add
outsb
adc
repz
or
mov
add
xor
ljmp
and
pop
add
lds
in
jns
fdivrs
cli
lods
add
in
call
add
stc
jle,pn
add
decl
add
icebp
xchg
lock
push
cmp
movsl
add
xchg
iret
cli
push
lahf
push
popf
mov
mov
pop
mov
call
add
push
add
pop
outsb
push
imul
and
ljmp
pop
add
addb
imull
cmp
xchg
add
fcompl
cs
add
fnstsw
in
fcomip
dec
pushf
adc
in
xlat
hlt
fiaddl
jmp
add
in
push
mov
cmp
xor
call
cltd
out
or
incl
loop
mov
add
fsubs
add
mov
jmp
sbb
add
add
out
out
push
imul
push
pop
or
sbb
add
loope
pushf
mov
sub
add
in
fstl
decl
push
insb
mov
dec
jl
test
cmpsl
add
add
and
ds
addb
rolb
jl
push
xchg
lds
push
add
daa
add
cltd
xchg
sarl
cmc
mov
mov
in
mov
addl
xor
jmp
cmp
imul
out
cld
xstore-rng
cmpsl
add
add
inc
add
dec
pop
lcall
test
mov
pop
mov
les
xor
out
out
ss
dec
aad
cmp
call
add
or
sub
in
scas
int3
adc
push
lret
lds
add
cmp
or
add
inc
add
fwait
xor
dec
push
dec
repz
sub
mov
daa
add
add
add
add
pop
fwait
mov
pop
adc
mov
add
roll
add
sbb
add
incl
stc
dec
pop
stc
in
xchg
dec
xchg
or
repz
stos
and
ljmp
fcomps
xchg
adc
add
add
sbb
outsl
pop
sub
pop
jmp
add
or
mov
idiv
and
ljmp
fcmovnb
add
jp
mov
add
add
ss
add
push
lds
popa
add
jae
call
add
xor
lcall
add
inc
add
decl
js
push
sbb
pop
sub
add
cmpsl
add
push
jmp
dec
mov
popf
sar
jmp
add
pop
mov
add
pop
sub
rorb
jmp
mov
inc
add
cmp
addb
add
jnp
add
mov
call
mov
addl
addb
xor
dec
cmp
xor
cli
pop
dec
cmp
jg
cld
movl
pop
adc
jne
add
add
add
pop
cs
mov
xchg
mov
add
sub
xor
addr16
sbb
add
dec
lds
jp
add
sub
lcall
inc
add
add
add
add
add
gs
jmp
addl
mov
ret
add
or
int3
fnstcw
add
ret
add
imul
and
push
sarl
push
add
sub
cmp
test
pushl
add
inc
add
cmp
xchg
insl
adc
add
xor
flds
add
popf
fsubrs
xchg
movb
push
add
js
push
loop
dec
cmpsl
add
hlt
cld
sbb
dec
push
add
and
sub
mov
add
add
add
cs
rcll
mov
stc
pop
test
lods
lock
mov
inc
add
dec
inc
add
lds
push
aam
add
incl
sub
inc
add
jl
pushf
sbb
cmp
cmpsb
add
add
fdivs
add
int
push
add
or
insl
pop
enter
add
add
add
pushf
or
mov
add
add
lcall
sub
mov
or
jle
movsl
add
in
addb
cmpsl
add
out
add
add
dec
aaa
sub
jecxz
pop
add
jne
sbb
mov
add
fucomp
out
test
int
jae
decl
test
addb
out
addb
add
and
lcall
je
mov
add
jns
insl
aam
sbb
xchg
add
inc
add
loope
call
adc
incl
movl
ljmp
xor
mov
add
add
add
cltd
pop
out
add
jmp
add
add
mov
mov
pop
addr16
add
lahf
xchg
ja
cli
loope
ja
mov
add
cmp
test
xchg
cmp
add
adc
pushl
add
fwait
lods
dec
icebp
mov
add
and
call
push
add
add
ljmp
addr16
pop
repz
xchg
je
ds
cmp
add
movsb
add
ljmp
insb
dec
adc
jmp
add
cltd
test
out
mov
jmp
add
cmp
add
add
cwtl
inc
add
push
in
jecxz
js
stos
jp
add
add
cmp
add
xor
call
add
les
das
rcll
in
or
add
or
mov
sub
xor
pushl
xor
lcall
add
shr
dec
and
push
mov
shrl
mov
jns
add
pop
sbb
ret
test
repz
decl
jl
add
inc
add
jnp
sbb
arpl
decl
addb
xor
and
call
add
push
add
movb
int3
sbb
mov
lret
lock
sub
stos
add
sub
add
ljmp
addb
addl
movsb
add
sbb
inc
add
test
das
das
addb
ljmp
mov
and
and
sbb
add
addl
add
test
sub
dec
cmp
jp
aam
mov
popa
add
cmp
mov
addl
add
movl
in
out
or
stc
cmp
cmpsl
add
ljmp
add
mov
mov
bound
pushl
test
xchg
enter
gs
xor
jmp
add
lods
cmp
ret
addl
mov
sub
add
insl
push
add
std
movb
sbb
mov
xchg
adc
push
pop
push
add
add
cs
or
pop
repz
lcall
mov
xor
pushl
add
add
unpckhps
add
nop
bound
call
add
add
add
outsb
mov
out
push
icebp
movl
add
cmova
mov
inc
add
push
mov
loopne
mov
push
add
decl
lahf
arpl
ljmp
xlat
and
dec
push
add
add
and
add
bnd
clc
jbe
data16
test
lahf
leave
cs
add
add
jnp
add
hlt
adc
push
add
js
pushf
lahf
add
bound
cmp
add
jmp
add
fwait
movsl
add
rclb
incl
pusha
add
xchg
pop
in
or
into
sbb
jmp
push
pop
add
xchg
dec
clc
lcall
dec
in
arpl
fcoml
push
shll
jb
call
cs
push
add
fmul
lret
insl
jmp
add
pop
xchg
push
add
push
add
loopne
jne
sbb
add
inc
add
inc
add
hlt
jo
pushl
add
mov
pushl
add
cltd
iret
jmp
sub
add
sub
ljmp
add
int3
jb
lcall
stos
pop
pop
or
dec
popl
add
add
ja
jns
idivb
jne
add
insl
push
add
sub
sahf
mov
ljmp
sbb
add
add
movl
loopne
pop
fsubr
jnp
pop
mov
inc
add
mov
add
add
mov
pop
mov
inc
add
xor
ds
add
mov
fisttpll
or
add
pop
dec
mov
jbe
add
in
and
inc
add
adc
dec
sub
add
outsb
pusha
add
daa
add
daa
add
add
push
cmc
sbb
sub
and
mov
pop
leave
addb
outsb
in
inc
add
inc
add
add
dec
dec
push
add
sbb
daa
add
add
add
mov
cmp
in
cltd
sbb
idiv
aam
add
push
push
xlat
cltd
aad
loop
adc
sbb
pop
add
add
add
add
and
lcall
or
add
js
xchg
cmp
add
push
add
fs
dec
cmp
add
dec
rcrb
outsl
push
add
leave
or
outsl
mov
outsl
cmpsl
add
fcmovu
out
mov
mov
lret
add
incl
addb
add
or
stc
mov
add
stos
test
out
mov
fwait
rorb
add
bndstx
cmpsb
add
jp
and
pop
fsubs
or
jp
add
cmp
pushl
mov
add
add
add
incl
fucomp
sub
pop
cli
xor
mov
sub
add
and
lcall
stc
inc
add
jmp
sbb
add
decb
das
mov
lea
inc
add
ljmp
lods
jge
je
push
add
xchg
inc
add
addl
pushf
pop
adc
call
inc
add
in
stc
dec
cmpsb
add
cmp
add
lret
clc
addb
add
mov
add
outsb
scas
enter
jle
add
pop
add
sbb
ljmp
ja
add
cmp
dec
addl
pop
adc
push
lods
inc
add
jecxz
add
decl
loopne
mov
add
je
jnp
add
dec
add
mov
add
cmp
aaa
repnz
xchg
test
mov
sub
jb
ljmp
add
sahf
jle
sbb
inc
add
and
mov
pushl
add
sub
test
add
mov
jmp
sub
stos
out
in
or
lods
movsl
add
add
in
push
add
popa
add
xchg
hlt
in
mov
add
fists
jmp
mov
xor
decl
lret
je
nop
inc
add
fisubs
inc
add
outsb
lods
adc
pushl
push
fistpll
notl
pop
add
shlb
xor
ljmp
jle
cmp
pushf
add
addl
adc
incl
add
loopne
insb
mov
mov
sub
or
add
or
add
mov
add
out
xchg
xchg
pop
mov
aam
stc
sbb
mov
imul
add
loop
xchg
fadd
add
shll
add
addl
or
ficompl
pushl
add
arpl
jl
add
ret
add
pop
jle
das
add
mov
sbb
xor
jmp
and
incl
clc
push
push
add
adc
incl
add
mov
dec
ret
add
addl
repz
lcall
jbe
add
addr16
rcrb
sub
sbb
jmp
xchg
aaa
adc
inc
add
rolb
in
mov
add
add
je
add
mov
add
add
roll
cmc
or
je
add
add
imulb
add
add
jl
add
cmp
jbe
repnz
push
data16
fs
add
add
push
add
mov
add
mov
add
add
aam
sbb
mov
mov
addb
mov
add
mov
pop
or
xor
incl
add
inc
add
shll
add
into
push
scas
lcall
test
sub
jmp
add
add
add
jle
add
mov
add
add
or
xor
in
stos
dec
inc
add
test
scas
xlat
aad
xchg
xchg
idivl
loop
ret
add
insb
stc
out
mov
lret
fsts
ljmp
add
push
push
ss
jnp
cmp
call
lcall
add
push
add
mov
outsl
rclb
call
add
fcompl
jnp
cmpsb
add
cld
xor
ljmp
decl
push
add
cmpsl
add
add
cmp
outsb
into
ljmp
add
int3
fucom
add
bound
pushl
jb
incl
incl
inc
add
add
ret
movsl
add
pop
mov
pop
sbb
ja
dec
out
and
cmp
add
rolb
jmp
paddsb
add
jo
ljmp
add
mov
call
add
in
mov
repz
addb
sbb
add
pop
das
mov
add
push
add
pop
mov
pop
pop
xchg
cmp
in
mov
add
add
mov
and
incl
pop
xor
jmp
mov
addb
outsl
cmc
jns
ret
add
cli
xchg
pop
arpl
call
add
pusha
add
jnp
add
stc
movl
roll
add
int
add
repz
xchg
hlt
cmp
add
jle
add
add
jo
ljmp
popf
dec
in
adc
push
sub
pushl
pushl
ljmp
add
mov
cld
jge
adc
incl
add
sub
arpl
pushl
add
push
add
xor
inc
add
outsl
sub
add
add
pushf
test
add
or
add
call
daa
add
loope
into
inc
add
ljmp
add
pop
mov
jge
add
cmp
add
call
jge
lcall
add
push
add
jecxz
dec
mov
shr
jo
incl
add
add
xchg
repnz
add
bound
call
mov
xor
call
xchg
xor
lcall
push
add
add
add
pop
xor
ljmp
add
gs
in
rcr
pop
rcrb
push
add
mov
bound
call
add
pop
mov
jle
add
add
insl
cli
or
fnstsw
mov
add
xor
decl
addl
clc
cltd
test
loopne
push
lcall
scas
or
xchg
sub
add
add
add
add
add
lea
add
pushl
or
bound
call
add
loope
or
or
add
addb
cmp
add
cmp
mov
xor
incl
or
add
mov
add
inc
add
add
in
scas
fnstcw
pop
pushf
pop
stc
rolb
addl
add
add
cmc
lock
dec
xor
add
jne
mov
pusha
add
cmp
fdivrs
push
loop
push
add
xlat
aad
call
jmp
add
add
mov
incl
decl
add
pop
int3
cmp
int
daa
add
add
add
loope
and
jae
call
rolb
ss
inc
add
sbb
push
rcrl
repnz
jmp
mov
add
push
sbb
data16
cmp
add
mov
sub
cmp
add
mov
test
cmp
loopne
imul
pop
add
into
test
add
fldenv
add
sarb
or
add
ljmp
sub
xchg
gs
jb
jmp
add
scas
stc
aaa
mov
add
inc
add
add
add
add
add
shll
roll
add
addb
fbstp
push
add
mov
insl
adc
add
inc
add
push
negl
data16
out
or
shrb
addl
test
adc
jl
add
ret
add
add
fsubrs
jnp
lret
aam
inc
add
add
data16
add
lcall
mov
add
int
adc
lcall
jns
add
fcmovu
ss
data16
add
add
pushl
add
in
dec
jmp
add
add
out
jmp
xchg
bound
jmp
les
ficompl
enter
rep
dec
fistl
rolb
add
push
pop
xor
add
cmp
jmp
add
movsl
add
add
sub
pushl
add
nop
enter
mov
add
cmp
add
cmp
add
sub
ret
add
incl
decl
jecxz
sbb
ljmp
add
add
in
rolb
add
jae
jmp
mov
mov
add
add
push
sub
test
adc
incl
lods
inc
add
mov
pop
cmp
xor
sub
jmp
add
sub
add
shll
inc
add
add
insb
scas
cwtl
adc
inc
add
fistl
add
das
out
lods
jmp
add
cmp
fnstcw
pop
movl
add
aad
mov
pusha
add
call
add
pop
push
out
ds
jmp
inc
add
add
out
rolb
gs
popa
add
shrb
loopne
adc
decl
adc
decl
add
out
sub
add
nop
push
sub
test
or
add
jecxz
pop
mov
jmp
sahf
mov
add
lea
out
adc
lcall
jmp
imul
add
mov
add
movl
or
pop
push
mov
adc
decl
add
jl
loop
enter
dec
adc
decl
jge
mov
add
push
and
pushl
mov
add
call
jle
and
pushl
dec
push
xlat
hlt
inc
add
add
add
fstl
ljmp
int3
push
sub
mov
cld
and
ljmp
add
cs
add
jmp
add
add
out
or
xlat
testb
fsubrp
loopne
xchg
mov
and
stc
test
sbb
mov
cmp
add
aaa
and
pushl
dec
xor
incl
addr16
int
jecxz
push
sbb
addl
add
cld
adc
pushl
ret
sub
mov
in
in
mov
lods
sbb
add
inc
add
sbb
xchg
push
add
roll
imul
push
es
lret
xor
xchg
sbb
outsb
xor
jmp
add
roll
roll
mov
add
inc
add
imull
add
lcall
push
inc
add
in
addb
mov
mov
mov
jle
sub
mov
add
add
pushf
ja
add
jae
call
int3
fldl
ljmp
add
lcall
mov
add
arpl
push
in
xchg
adc
incl
pushl
adc
call
mov
lahf
dec
dec
test
add
pusha
add
sub
add
loope
cmp
add
cli
mov
addl
add
jp
testb
std
mov
mov
pop
and
jns
cmpsb
add
add
call
add
pop
mov
mov
scas
out
iret
push
add
call
add
jbe
add
jae
fistl
add
fiadds
roll
js
add
mov
pop
aam
sub
sahf
sbb
rolb
add
add
pushl
fnstcw
push
add
mov
call
sub
dec
addl
lcall
test
iret
ja
add
decl
pop
loope
xchg
adc
dec
jle
mov
mov
add
dec
add
jmp
stos
and
cli
pop
scas
lock
push
fildll
add
mov
lods
pop
jle
and
xchg
sbb
xor
pushl
loope
sbb
add
cmpsb
add
out
ret
add
add
jmp
add
and
mov
push
add
xchg
and
decl
ljmp
int
pusha
add
sti
inc
add
adc
cwtl
xor
js
cmp
cld
add
mov
add
pop
scas
inc
add
add
add
add
add
sub
add
mov
and
decl
jmp
dec
pusha
add
in
addl
add
call
mov
les
cld
sbb
dec
push
push
or
add
add
icebp
aas
mov
enter
jmp
jae
inc
add
jmp
add
call
jle
ss
add
ret
add
mov
loope
push
add
stc
lock
inc
add
incl
add
out
sub
inc
add
in
xor
cmp
sub
clc
dec
cld
out
inc
add
add
sub
add
call
jbe
cmp
cld
fsts
sub
int3
and
loope
push
xor
incl
add
add
mov
add
divb
add
add
decl
iret
mov
add
dec
or
and
pop
xor
pushl
sub
add
and
jmp
add
mov
or
aam
add
add
fadds
add
mov
add
pop
mov
jne
add
push
cmp
das
jmp
mov
add
adc
scas
mov
add
shlb
add
fisubl
push
jbe
adc
dec
sub
out
popf
ret
add
pop
xor
int3
mov
add
mov
add
pushl
pop
or
add
add
inc
add
add
add
add
add
cltd
or
add
cmp
add
adc
jmp
push
mov
data16
bound
ljmp
jns
repnz
jle
add
cwtl
or
add
incl
add
mov
test
scas
jl
cmpsl
add
pushl
inc
add
add
add
add
add
test
dec
push
add
pop
stos
xlat
mov
fcmovnb
add
add
xor
call
lods
cmpsb
add
mov
std
lea
add
dec
add
xor
das
aam
xor
add
and
incl
add
test
push
sub
mov
add
ljmp
por
mov
pop
stc
add
pushl
mov
or
add
jb
cld
bnd
adc
fisubl
aam
sub
inc
add
add
decl
or
jmp
push
add
jns
jno
lcall
add
lcall
call
jmp
add
add
mov
mov
popf
aas
push
add
stos
add
lcall
add
sbb
add
pushl
add
fwait
push
pushl
lea
arpl
call
call
ret
or
mov
add
add
or
js
aad
pop
jae
cmp
dec
push
aam
sbb
add
and
call
pushl
shrl
inc
add
mov
pop
shll
or
add
jmp
push
add
imul
addl
ljmp
mov
add
cmp
add
je
adc
jmp
call
push
add
add
lcall
cs
mov
xor
push
mov
psadbw
mov
daa
add
xor
inc
add
fcoms
decl
dec
lret
fdivrs
ret
add
add
lods
scas
adc
incl
movb
dec
stos
dec
pop
insl
adc
decl
add
dec
adc
ljmp
adc
cmp
sti
aas
inc
add
call
daa
add
movb
lods
es
add
add
inc
add
out
xchg
mov
loopne
pop
push
clc
cmp
movsl
add
add
add
jecxz
fcmovnbe
stc
dec
mov
xchg
outsb
clc
rolb
inc
add
ljmp
add
push
add
int3
lods
mov
inc
add
inc
add
push
roll
add
mov
lods
data16
lret
mov
add
add
out
push
mov
adc
call
add
insb
jge
add
push
add
lcall
add
imul
jns
jecxz
jo
call
test
pop
cltd
sub
aad
inc
add
add
sbb
fstpl
add
popf
dec
push
or
add
jecxz
fidivs
pop
push
mov
add
mov
add
add
incl
cmpsl
add
inc
add
lahf
fisubrs
add
adc
jmp
cmp
add
add
mov
scas
push
mov
add
add
jbe
add
je
fildll
arpl
pushl
cs
cmp
add
outsb
sbb
leave
scas
pop
dec
sbb
xor
incl
cmp
loop
jbe
addl
cmp
das
jbe
enter
add
add
add
daa
add
inc
add
sub
fisttps
add
add
mov
add
test
fbstp
inc
add
push
cmc
gs
add
pop
mov
add
sbb
xchg
roll
cmp
addl
jmp
add
add
add
push
sub
and
lcall
fisttpll
adc
ljmp
inc
add
jl
js
data16
mov
rolb
add
add
sti
mov
bswap
mov
and
ljmp
xor
jmp
dec
and
pushl
add
jo
call
incl
fmuls
jg
mov
mov
cs
add
call
mov
add
bound
ljmp
sub
add
sub
add
pop
movsl
add
add
lcall
cmpsl
add
lea
fisubrl
add
sbb
add
add
add
inc
add
data16
push
pop
in
hlt
sbb
xchg
xor
incl
add
add
repnz
add
add
add
insb
mov
add
add
dec
imul
add
add
sbb
addb
je
enter
icebp
add
jmp
ljmp
incl
add
mov
les
mov
add
mov
repz
add
incl
add
adc
jmp
add
out
faddl
cmp
add
cmp
aas
aas
jge
xchg
dec
clc
mov
add
out
pop
mov
add
shll
decl
push
add
push
push
add
add
das
dec
sub
les
popa
add
insl
cltd
enter
sub
in
inc
add
data16
pop
test
add
jmp
cs
add
arpl
call
outsb
int3
pop
bound
incl
mov
add
adc
ljmp
jae
incl
pop
xchg
pop
mov
push
mov
cmc
clc
xchg
addl
movsb
add
ljmp
sub
imul
sbb
leave
xor
js
jmp
insb
jb
cmp
fistl
add
mov
addb
add
in
cltd
fidivrl
dec
ljmp
jne
add
add
daa
add
push
mov
jg
outsb
sub
lds
and
inc
add
add
mov
data16
lret
sub
mov
add
pushl
repnz
xor
add
roll
add
imul
xchg
add
inc
add
loop
sub
add
sbb
cmp
adc
decl
and
pushl
add
fsts
out
loop
add
mov
dec
fdivl
ljmp
sti
pop
es
and
rolb
add
push
stc
ret
sub
cltd
hlt
sbb
jp
add
add
xor
push
je
add
cmp
pop
jno
pushl
sub
add
movsb
add
add
or
add
push
dec
mov
add
call
out
js
add
ret
inc
add
das
bound
ljmp
int3
cmc
leave
div
ds
pushf
jecxz
rcrb
adc
decl
dec
rcrl
pop
mov
jmp
popf
mov
addb
stos
cmp
movsl
add
or
add
add
add
cmp
int
add
das
jnp
adc
add
call
sbb
shlb
add
shlb
pushl
add
pop
add
jmp
add
xor
test
or
clc
adc
call
jmp
add
inc
add
jo
call
xor
mov
arpl
inc
add
mov
add
decl
cmp
add
adc
push
in
mov
out
xchg
xor
ljmp
add
xor
ljmp
and
incl
push
cmp
push
dec
or
jg
mov
sahf
addl
push
mov
mov
test
pop
addl
pop
mov
add
std
es
iret
mov
int3
mov
aas
push
xor
jo
call
pusha
add
dec
dec
jg
sbb
test
aam
dec
push
push
sti
adc
jmp
inc
add
sbb
addl
push
inc
add
popf
push
nop
xor
mov
add
pop
or
loop
mov
in
movsl
add
lods
dec
cs
add
push
add
sbb
lock
add
inc
add
fbstp
sbb
add
add
pop
dec
xchg
ret
add
dec
pop
add
jb
decl
or
bnd
test
cmc
dec
and
pushl
add
push
or
dec
or
add
xor
or
jno
incl
jmp
add
jmp
mov
add
decl
jmp
add
jns
xor
pushl
pop
pop
push
rorb
add
xor
add
dec
sbb
add
test
enter
pop
add
incl
shlb
mov
lods
inc
add
add
cs
push
add
movsb
add
ljmp
add
into
push
add
xchg
mov
pop
fisttps
pop
sti
scas
cli
imul
mov
js
push
sub
fnstenv
inc
add
add
iret
movl
add
push
popa
add
fisttps
in
ss
mov
and
mov
add
sbb
add
pop
sbb
add
rolb
into
add
ss
xchg
loope,pt
inc
add
roll
stc
clc
dec
pop
push
add
into
js
addr16
add
fidivrl
adc
call
inc
add
jnp
out
dec
sub
add
add
fistl
ss
rolb
add
add
mov
add
ret
loopne
dec
repz
iret
jmp
add
add
addl
add
dec
out
rolb
add
and
inc
add
add
xor
call
and
call
add
jo
fistpl
add
into
adc
push
mov
mov
mov
into
pop
jl
add
pop
ret
add
jp
add
sbb
sbb
in
lret
addb
mov
push
push
jae
ds
stos
mov
decl
aas
test
repz
pop
jne
test
popa
add
jl
mov
add
jmp
add
add
mov
sbb
add
movsb
add
mov
incl
add
decl
push
add
adc
add
add
ret
add
mov
into
xchg
mov
push
add
out
ljmp
movsl
add
add
jge
add
in
movl
add
jae
in
add
add
sbb
dec
into
push
iret
icebp
cld
lret
and
arpl
call
repnz
adc
jmp
add
add
ljmp
ljmp
add
popf
mov
dec
inc
add
add
mov
pushl
cli
sbb
fwait
clc
xchg
std
add
stos
xchg
pushf
mov
add
jmp
add
mov
add
add
add
jae
jns
add
js
fcoml
xor
mov
ret
add
jo
aas
add
jmp
mov
pop
cmp
hlt
negb
xchg
xor
aas
ret
add
pop
or
add
pop
in
das
cmpsl
add
mov
repz
mov
jbe
sub
add
jno
call
add
in
dec
test
cmp
add
imul
add
lock
add
dec
lds
fcomip
div
push
or
add
mov
xchg
addb
push
add
add
repnz
add
fisubs
incl
pusha
add
jmp
add
add
incl
ljmp
sbb
mov
add
addl
add
sub
add
or
dec
sbb
in
and
decl
out
test
cmpsl
add
fldt
rolb
mov
mov
jl
int3
xchg
dec
imulb
pop
inc
add
inc
add
jmp
jl
xchg
mov
insb
loope
cmp
add
sub
mov
jno
pushl
test
add
add
add
add
lods
inc
add
mov
and
call
add
sub
incl
addb
popa
add
xor
add
clc
add
push
lods
insl
cld
rolb
add
and
ljmp
in
mov
mov
pushl
decl
movl
ljmp
jbe
addb
lds
enter
jns
add
sub
aad
mov
add
mov
pushf
cmp
leave
add
ljmp
stc
out
mov
mov
lcall
add
mov
incl
add
sub
clc
add
and
lcall
les
dec
jp
cli
aas
je
add
add
jae
decl
ror
adc
cmp
add
shll
inc
add
dec
nop
insl
or
push
loopne
push
add
jl
or
lcall
jne
cli
push
add
add
jmp
insb
mov
cli
leave
outsl
mov
mov
stc
sub
mov
add
loopne
int3
clc
dec
movb
add
xchg
mov
xchg
push
cmp
repnz
sbb
out
popf
lock
repz
test
addl
aad
loopne
movsl
add
add
out
xor
call
pop
inc
add
add
ja
mov
out
aam
pop
or
push
repnz
xchg
pop
sti
cld
push
rolb
mov
add
inc
add
jmp
mov
add
add
out
jbe
call
lods
inc
add
mov
xchg
mov
add
cmp
sbb
call
add
mov
mov
sub
add
movl
add
fisttps
or
cmp
add
sbb
cmpsl
add
pusha
add
mov
inc
add
push
pop
data16
les
dec
lret
loop
add
add
mov
mov
incl
pushl
add
frstor
xchg
out
xor
pop
jp
movb
add
add
out
inc
add
cmp
pushl
jo
incl
adc
sti
adc
pop
wbinvd
mov
call
xchg
pop
inc
add
jmp
add
add
roll
pop
jecxz
xchg
sbb
test
mov
push
add
inc
add
repz
fimuls
les
or
add
fistps
arpl
lcall
add
jmp
add
loop
mov
add
loopne
lahf
and
jmp
add
not
aad
pushf
jnp
out
aas
dec
jmp
jle
adc
add
decl
addb
cmc
add
jmp
call
leave
inc
add
jge
cli
movl
insl
movsl
add
sub
mov
loop
xchg
lea
pushl
aas
inc
add
add
lcall
add
lcall
jge
add
cwtl
dec
fisttpll
popa
add
movsl
add
add
leave
clc
ret
add
jge
jo
ljmp
aad
add
dec
aaa
sbb
incl
mov
insl
out
imul
pop
pop
cmp
add
ds
icebp
mov
jg
add
in
movb
lahf
push
inc
add
add
sub
scas
repnz
mov
div
loopne
and
push
test
xchg
sahf
jge
mov
insb
ret
fistps
insb
and
lcall
pop
xchg
bound
decl
push
sub
add
add
cmpsb
add
add
or
nop
stos
lahf
cmp
pop
and
push
enter
decl
add
fwait
sub
add
push
add
aas
mov
imul
roll
inc
add
lahf
mov
arpl
ljmp
add
add
pushl
xchg
add
cmp
add
pushl
add
outsb
out
mov
pop
pop
outsb
lods
jb
call
add
repnz
xor
out
or
lea
add
add
testb
add
popa
add
por
incl
lcall
mov
dec
sub
add
inc
add
arpl
ljmp
in
jecxz
inc
add
das
pushf
test
jecxz
fidivrl
mov
cwtl
cmpsl
add
int
push
sbb
nop
data16
sbb
add
add
jge
add
mov
sub
sub
jp
add
movl
dec
adc
incl
add
push
add
pop
add
add
xor
call
push
test
idivl
iret
dec
sub
addl
repz
add
mov
add
jecxz
xchg
cmp
add
add
daa
add
jo
fists
dec
adc
jmp
add
adc
jmp
add
rol
add
add
test
sbb
iret
fldt
out
insl
inc
add
lret
repz
jg
add
push
xchg
xor
lcall
out
sbb
jb
jmp
mov
cli
dec
pop
dec
shlb
add
icebp
clc
dec
sahf
movsb
add
xor
jmp
add
arpl
call
roll
aam
int
mov
arpl
incl
stos
lods
and
stos
mov
movl
jl
add
xor
out
pop
push
add
test
add
xlat
lret
mov
mov
add
ret
add
decl
aad
add
mov
jmp
call
loop
add
ljmp
pop
mov
das
sbb
fwait
add
call
lcall
fistpll
jnp
mov
pop
xchg
jbe
lods
mov
hlt
inc
add
int
loope
jb
call
lcall
clc
mov
cmp
xor
mov
add
add
add
and
aas
es
add
loopne
fadd
add
ret
add
push
add
mov
add
jl
add
add
mov
and
cmp
add
outsl
sub
add
jb
pushl
incl
add
adc
cmp
mov
nop
add
sahf
ljmp
jg
add
pop
mov
lea
add
lahf
mov
add
scas
sbb
add
stos
movsb
add
xor
cmp
push
add
cwtl
enter
dec
addb
cmc
lret
ljmp
dec
or
add
sub
add
arpl
incl
push
push
add
popa
add
add
stc
and
dec
cmp
xchg
push
add
sti
pop
jno
pushl
repnz
mov
add
lcall
add
add
add
movsb
add
add
add
addb
push
jno
jmp
pop
shufps
add
sbb
add
call
add
add
add
insl
pusha
add
inc
add
outsb
xchg
sbb
call
jno
jmp
nop
test
hlt
fldt
cmp
stos
ret
mov
add
test
imul
sbb
add
sti
or
pop
gs
popa
add
loope
mov
add
add
sbb
jge
add
aas
cli
cmp
int3
mov
add
incl
add
add
fildll
push
add
pop
pop
add
insl
add
add
pop
push
movsb
add
aaa
mov
mov
call
pushl
ret
add
push
outsb
les
mov
add
jmp
mov
jmp
pop
enter
arpl
lcall
jmp
data16
sub
dec
jno
jmp
jmp
add
roll
add
data16
mov
add
test
push
ffreep
add
roll
pop
pop
add
mov
add
lret
outsl
jmp
ds
add
add
cmpsl
add
dec
dec
adc
lcall
pop
xor
mov
xchg
imul
insl
popa
add
lods
lods
fs
mov
xor
sub
iret
in
out
adc
mov
add
enter
mov
xchg
mov
cmp
push
add
push
add
push
iret
adc
dec
jecxz
clc
xor
data16
mov
inc
add
or
add
xchg
cmp
add
stos
cmp
int3
aaa
lahf
dec
into
ret
shlb
pusha
add
sub
repz
add
xchg
ja
imul
add
xchg
stos
daa
add
loopne
insl
insl
lea
add
xchg
repz
add
lcall
mov
add
pushl
add
aam
add
xchg
repz
add
scas
xlat
jnp
add
pop
in
mov
rcrl
jp
in
pop
add
mov
shll
add
or
mov
fmul
dec
ficoms
cli
std
mov
add
les
lret
adc
inc
add
add
add
jns
lods
stos
scas
xchg
xor
add
add
xchg
std
sub
jmp
mov
das
pop
sbb
ret
repz
add
decl
out
in
outsb
jl
jnp
add
inc
add
gs
in
pop
cmp
pushf
hlt
and
call
add
add
or
in
cwtl
sub
add
or
mov
fs
lret
jge
inc
add
fadds
add
sbb
mov
hlt
imul
sub
addl
js
addl
add
add
clc
mov
inc
add
add
test
inc
add
add
sub
add
leave
xchg
movb
add
add
cmp
add
enter
aaa
mov
fdivrl
cltd
out
int3
pop
sub
mov
add
mov
add
cmp
rcrb
addb
aad
add
outsb
loopne
ja
add
std
ret
or
add
add
add
xor
addb
int
add
cwtl
xchg
leave
push
sahf
mov
add
add
push
add
dec
cmp
add
add
add
dec
jb
inc
add
xlat
ss
add
push
add
movb
adc
decl
add
pop
jecxz
std
pop
add
pop
and
call
ss
mov
movsb
add
add
push
pop
outsb
cld
or
imul
negb
sub
add
cld
push
add
stos
or
or
aas
mov
add
fstpt
push
add
decl
aad
mov
and
jmp
add
mov
add
inc
add
iret
in
xchg
sub
add
insl
mov
add
call
es
test
stos
xor
mov
shl
rolb
xchg
jle
add
add
in
ret
add
test
xchg
add
jmp
inc
add
lcall
and
enter
mov
mov
out
cmc
popa
add
cmova
inc
add
shufps
add
xor
add
mul
add
push
dec
stos
lds
pop
lcall
call
add
outsb
jne
jg
add
lea
add
in
loop
push
add
mov
push
add
pushl
pushl
add
call
push
fsubr
push
push
add
sbb
add
xchg
aad
push
jg
add
jmp
call
icebp
pop
sub
add
mov
add
pop
ret
jmp
insl
adc
jmp
add
add
push
add
mov
decl
add
call
add
ljmp
pop
add
or
jns
add
add
push
enter
lret
push
add
mov
add
cmp
xor
push
add
test
xlat
ss
les
enter
add
rcr
cmp
fisubl
aad
jnp
sub
mov
pop
cmp
sub
inc
add
addb
and
call
add
stos
mov
loop
cwtl
jle
sub
xchg
mov
xlat
rcrb
add
out
inc
add
inc
add
lods
cmpsl
add
ljmp
add
xchg
daa
add
push
add
xchg
xor
outsl
testb
add
inc
add
mov
add
negb
jnp
add
add
mov
add
adc
add
add
jnp
outsl
test
mov
aas
push
add
add
cld
ror
lea
add
mov
lcall
int3
cmp
loopne
xchg
cmc
mov
data16
add
add
xchg
pushf
jge
add
ljmp
int3
mov
push
in
dec
addl
rolb
add
xlat
xchg
lods
sbb
add
pushl
call
aas
or
addl
add
mov
les
pop
dec
push
add
pop
test
add
sub
add
call
jb
ljmp
add
add
out
movsb
add
add
add
out
xor
pushl
mov
inc
add
add
enter
and
inc
add
nop
mov
loope
ds
sbb
ficoml
lcall
test
lods
sub
jns
add
ljmp
sar
addl
or
loopne
jne
ficompl
mov
add
loopne
mov
test
sub
add
cs
mov
add
test
jo
pushl
lcall
add
aam
dec
mov
cld
out
mov
mov
call
add
decl
jmp
addb
add
sbb
ret
add
jns
add
int
popf
addl
pop
mov
or
pusha
add
xor
add
ss
mov
lods
and
jmp
inc
add
add
add
mov
sub
mov
jo
lcall
add
lcall
jbe
add
stc
sahf
loope
xchg
xchg
imul
add
dec
add
call
dec
mov
add
clc
add
call
add
inc
add
addb
jne
add
fwait
lcall
xchg
popf
xchg
divl
jl
fidivrl
jnp
add
and
mov
push
add
lea
ret
add
dec
xchg
bound
pushl
incl
lcall
scas
jb
dec
pop
inc
add
xchg
sub
add
cli
movl
movb
aas
mov
adc
call
xchg
push
dec
jg
lea
test
addl
push
add
xor
lcall
call
sahf
movsb
add
add
push
mov
mov
add
add
add
push
cmp
add
incl
pop
out
test
push
xor
ljmp
flds
decl
add
cmp
addb
add
jge
shr
dec
jne
pop
push
add
lcall
push
add
jl
jno
lcall
pop
jmp
add
push
movsl
add
js
add
mov
decl
inc
add
test
xchg
lock
movb
stos
imul
xchg
jno
inc
add
add
inc
add
xchg
movsl
add
add
xchg
lods
into
jmp
rolb
popf
ja
hlt
mov
pop
movsb
add
sub
and
fldt
roll
add
add
push
add
inc
add
ret
jne
scas
inc
add
inc
add
inc
add
mov
add
decl
shlb
mov
add
mov
add
and
call
mov
fidivl
addb
movsl
add
xor
jmp
mov
data16
add
stos
ret
sub
jno
pushl
push
add
push
pop
sub
movl
add
mov
mov
stos
mov
scas
sbb
sub
xchg
xor
pushl
cmpsl
add
outsl
popa
add
lcall
lock
xchg
repz
call
add
stos
mov
or
xor
call
roll
data16
xchg
sbb
add
lea
std
stc
push
pop
and
add
push
add
push
dec
sbb
jl
outsl
out
xchg
inc
add
and
incl
add
popf
out
and
out
mov
decl
add
mov
add
add
rorb
inc
add
add
decl
pushl
jnp
add
stos
mov
add
es
popa
add
inc
add
outsb
out
je
fstps
test
movl
fcoml
stos
mov
add
loop
test
add
pop
js
add
jle
add
out
pop
cld
stos
jecxz
jg
add
decl
lret
adc
dec
pop
add
add
add
mov
mov
mov
data16
add
frstor
cmp
out
bound
decl
jp
push
sbb
adc
add
sub
sub
or
out
lcall
add
add
call
xchg
mov
add
jmp
into
movb
add
insb
push
movl
add
add
xchg
stc
inc
add
adc
jmp
pop
pop
lock
cltd
imul
decl
add
movsb
add
ficomps
pop
shll
add
leave
adc
add
js
rolb
clc
jo
jmp
add
cmp
push
sub
insl
jnp
mov
ds
and
pop
add
fbld
add
xchg
jp
ret
add
out
and
push
adc
call
daa
add
mov
movl
rclb
push
adc
decl
outsb
pop
pop
pop
pop
lcall
das
push
add
into
jne
pop
out
cmp
cld
mov
leave
int
push
addl
sub
dec
pop
imul
popa
add
sub
unpcklps
add
iret
pop
sbb
mov
xchg
mov
inc
add
mov
lock
out
cmp
ljmp
fmull
jnp
mov
adc
incl
add
add
in
dec
mov
ds
lahf
lcall
icebp
jnp
lods
nop
out
inc
add
push
aad
add
mov
out
or
mov
sbb
mov
push
insl
mov
xor
call
lock
aad
aad
add
add
dec
sahf
fstl
mov
add
movsl
add
addb
add
mov
adc
push
inc
add
add
call
incl
xor
pushl
pop
aad
add
mov
add
jmp
fwait
das
push
add
in
lds
in
xchg
psrld
push
stos
mov
js
pop
mov
add
shll
ret
add
pop
les
add
jmp
lcall
inc
add
jp
add
loopne
or
jle
add
add
xchg
lea
lcall
and
daa
add
add
sbb
add
roll
ljmp
fidivrl
call
in
xchg
and
jmp
add
arpl
ljmp
decl
jmp
sbb
lcall
sbb
add
add
popa
add
fdivl
add
cmpsb
add
call
add
sti
out
popa
add
mov
add
ljmp
clc
test
mov
dec
adc
call
cmpsl
add
add
dec
fwait
push
inc
add
add
dec
jle
std
xchg
mov
insb
adc
fnstcw
loopne
pop
jg
add
lods
jecxz
imul
add
dec
sbb
pushl
xor
pushl
dec
jo
lcall
movsl
add
xchg
add
inc
add
push
add
inc
add
sub
into
fidivs
add
add
add
mov
dec
pop
mov
add
jl
mov
pushf
cmp
adc
inc
add
jmp
mov
jne
js
add
aas
sbb
add
add
jb
call
xor
fldt
inc
add
mov
filds
call
leave
and
ret
add
xchg
xchg
xchg
sbb
dec
inc
add
ss
outsl
push
mov
jp
outsb
outsb
mov
pop
and
pop
divb
pop
hlt
loop
clc
fs
mov
jg
add
ljmp
roll
jb
call
imul
mulb
in
or
add
mov
enter
add
data16
push
cmpsl
add
add
inc
add
add
xchg
addb
push
adc
incl
out
in
ret
add
dec
jmp
jo
call
jo
mov
push
add
addl
jno
mov
add
push
fisttpll
jae
fmul
jmp
jg
call
data16
or
movsb
add
xchg
jae
inc
add
call
jecxz
icebp
leave
mov
pushl
push
mov
add
jp
push
fcoms
adc
ret
insb
cmp
jmp
push
add
arpl
decl
add
add
xor
decl
and
call
inc
add
movsb
add
add
push
jns
dec
js
add
lcall
loop
mov
mov
add
push
add
nop
sub
cli
or
add
insb
stc
xchg
pop
xor
cmp
ds
movl
add
int3
and
ljmp
mov
jo
decl
pop
add
add
xor
in
inc
add
add
mov
add
add
jae
jns
cwtl
mov
add
mov
daa
add
decl
xchg
cli
int3
mov
add
add
jnp
xor
decl
call
push
add
lahf
mov
mov
add
add
add
jae
out
test
insb
js
inc
add
mov
stc
mov
test
adc
decl
xlat
das
mov
add
mov
mov
inc
add
mov
add
add
push
in
mov
addl
jle
mov
jmp
sahf
cmpsb
add
xor
push
addl
cpuid
add
bswap
mov
push
add
jb
call
add
ljmp
xchg
add
pushl
add
adc
incl
call
data16
popa
add
pop
outsb
inc
add
xor
incl
ljmp
ja
add
shll
add
dec
ljmp
jno
jmp
add
decl
sahf
popf
push
addb
xchg
cmovo
incl
incl
sarl
inc
add
ljmp
testb
cmc
pop
add
add
je
fdivs
lcall
xchg
loope
rcrb
cmp
add
add
add
jecxz
xchg
adc
decl
add
ds
add
inc
add
ds
icebp
test
xor
add
adc
ret
into
sub
in
pop
add
decl
addl
fmulp
pop
inc
add
sbb
decl
jne
push
mov
push
mov
add
sbb
mov
add
cmp
add
add
js
imul
mov
punpckhwd
roll
movb
or
movsb
add
add
adc
jno
decl
mov
add
adc
pushl
decl
adc
incl
icebp
testl
les
or
add
decl
add
mov
lcall
ljmp
addl
and
call
add
sbb
xor
jmp
call
int3
cmp
add
mov
pop
xor
add
pop
jge
icebp
xor
cli
addb
or
add
sbb
lahf
mov
and
lcall
inc
add
incl
add
jne
add
fwait
mov
pop
jge
add
inc
add
sbb
ljmp
dec
loop
push
add
add
dec
mov
stos
mov
add
jmp
adc
decl
test
dec
sub
add
rcll
add
dec
xor
call
nop
cli
rcrl
add
hlt
push
popf
loope
push
add
push
add
jmp
add
push
xchg
ja
add
nop
imul
jmp
rorl
add
call
adc
inc
add
add
mov
frstor
sbb
sbb
xchg
addb
mov
int3
xlat
jecxz
adc
call
test
aas
movsl
add
inc
add
add
add
lock
push
add
roll
add
push
mov
es
inc
add
push
add
add
sbb
add
add
aas
lahf
xchg
scas
inc
add
js
clc
imul
pushl
call
add
jne
dec
lock
rorb
add
inc
add
int3
mulb
add
lock
xchg
ljmp
adc
pop
in
mov
pushf
and
incl
push
xchg
adc
incl
add
stc
aad
add
adc
add
mulb
enter
popl
fadds
add
aam
sbb
in
ret
add
pop
add
stc
mov
das
xchg
sbb
popf
stos
sbb
add
mov
add
adc
cmp
xor
ljmp
add
mov
add
jno
pushl
pushl
add
js
add
lahf
jno
pushl
add
cli
inc
add
movsl
add
add
stos
add
decl
add
movl
mov
and
dec
pop
cli
dec
cli
inc
add
aad
or
aad
ja
cmpsl
add
jecxz
sub
fiadds
inc
add
xor
add
mov
scas
mov
add
add
cmp
mov
fadds
push
sbb
pop
push
lret
add
pushl
push
pop
pop
mov
popa
add
mov
add
outsl
mov
ljmp
add
ljmp
or
lods
out
pop
pop
inc
add
adc
ljmp
out
xchg
dec
jl
add
add
xlat
cmp
outsl
dec
mov
mov
incl
testb
inc
add
outsb
stc
pop
push
add
add
jno
pushl
add
adc
lcall
and
call
or
mov
mov
xchg
int
add
loopne
mov
in
mov
push
push
add
push
test
clc
dec
dec
and
jmp
add
lcall
add
xchg
mov
into
pop
shlb
dec
push
mov
iret
xor
inc
add
dec
mov
xchg
sti
mov
pop
adc
pushl
add
popf
aaa
jb
jmp
add
xchg
sbb
mov
add
into
pop
xor
call
add
pop
dec
adc
int3
dec
adc
and
dec
jne
inc
add
sbb
and
lcall
stos
pop
jo
inc
add
add
add
sub
xor
ljmp
cmp
add
out
or
add
je
add
lcall
addb
add
jb
push
mov
add
jno
decl
add
fimuls
sbb
add
mov
add
cmp
popf
adc
mov
outsl
or
add
call
lock
add
add
and
jmp
fnstsw
xchg
addb
aas
lret
in
and
call
incl
mov
add
loopne
cld
or
add
add
addb
add
call
jnp
add
xor
add
stc
cs
pusha
add
fildll
js
add
push
add
insl
add
sub
lods
roll
insb
dec
fwait
out
sti
add
push
jne
sbb
mov
cmpsl
add
aad
sub
add
iret
push
add
jmp
dec
roll
add
lcall
add
stc
sub
jmp
jl
stc
ret
add
jle
cltd
cmp
add
ljmp
add
lods
mov
inc
add
pushl
outsb
sbb
add
add
mov
pushl
add
leave
decl
add
mov
xchg
rolb
jbe
stos
dec
add
mov
call
add
mov
mov
xor
jns
inc
add
icebp
rolb
mov
and
pushl
and
pushl
add
pop
adc
fldl
les
addr16
and
stc
lea
add
mov
push
test
cwtl
leave
ja
inc
add
cmp
repnz
inc
add
dec
mov
lods
pop
leave
push
or
add
out
rolb
add
sub
or
shr
mov
roll
insl
outsl
inc
add
mov
add
add
icebp
loop
jp
add
rolb
sub
add
sahf
mov
call
inc
add
pop
pop
xchg
in
and
call
add
ljmp
add
aam
mov
sub
xor
ljmp
add
popf
fidivs
mov
add
lods
outsb
sub
jo
decl
push
movl
movsb
add
add
adc
call
call
jo
incl
add
add
add
loope
test
fisubl
lcall
incl
add
pop
dec
jmp
add
stc
dec
jecxz
jge
and
clc
mov
addb
addb
add
pop
fidivl
call
test
push
add
inc
add
dec
mov
arpl
ljmp
add
xor
mov
pop
push
scas
xor
push
fimuls
imul
add
pop
sahf
jg
sub
sub
add
out
loopne
addl
lahf
push
in
movb
addb
jmp
sub
cmpsl
add
mov
and
decl
push
add
inc
add
aam
loope
dec
sbb
scas
pusha
add
add
pushl
mov
dec
sub
xor
add
jmp
dec
sti
shll
add
addl
add
mov
addb
add
push
mov
add
inc
add
mov
incl
add
add
loop
mov
in
sub
add
addb
add
add
stos
or
add
jmp
ljmp
mov
push
adc
jmp
mov
xor
ljmp
cwtl
aam
xor
pushl
ljmp
aas
call
jp
movl
icebp
push
movl
fs
pop
jle
pop
arpl
incl
jge
aas
outsb
and
inc
add
add
lret
cmc
mov
mov
and
call
fucom
add
add
pop
sub
xchg
out
test
rolb
mov
xchg
daa
add
add
stc
lret
add
push
add
inc
add
push
pop
sub
add
add
incl
mov
adc
call
lcall
add
push
add
lcall
call
add
jne
movsb
add
mov
add
stc
mov
js
add
pop
add
mov
aad
sub
add
pop
std
adc
pushl
add
js
xor
pushl
jmp
ljmp
cmp
push
add
jae
call
add
cmp
in
inc
add
ret
xchg
jge
adc
lcall
xchg
add
das
xor
mov
add
jns
add
add
dec
stc
sarl
out
xor
pushl
into
out
divl
jg
cmp
xchg
pop
shrb
icebp
mov
add
inc
add
icebp
adc
decl
add
mov
add
and
call
add
js
int3
ds
mov
add
adc
call
add
push
divl
add
inc
add
cmc
pop
push
adc
jmp
xor
jmp
mov
cmp
add
arpl
lcall
filds
add
addb
sbb
outsl
inc
add
xchg
mov
add
xchg
pop
add
add
into
lods
xchg
repz
addb
cli
cmp
jp
rorl
aad
xor
dec
arpl
incl
add
dec
inc
add
cmp
add
decl
rolb
enter
loope
mov
add
add
dec
insb
xor
sub
int3
add
jp
lds
inc
add
add
xchg
sub
add
add
call
push
add
pusha
add
outsb
rcll
mov
xor
call
jb
inc
add
jecxz
rolb
sub
mov
and
rolb
int3
stos
jg
jmp
jns
add
jno
call
mov
lock
mov
ljmp
xchg
hlt
mov
add
xchg
sub
addb
add
jg
lock
mov
add
dec
aaa
mov
add
push
xchg
iret
fadd
add
mov
jb
call
mov
sub
stos
faddl
decl
fsubrp
sbb
popf
int
sub
add
xchg
jp
mov
jmp
add
add
into
sbb
add
or
add
js
add
lods
pop
fdivrl
add
cmp
incl
movsb
add
jns
imul
xor
mov
lods
mov
or
addb
jns
add
bound
jmp
add
cli
rorl
loopne
jo
jmp
pop
push
add
popf
add
push
sbb
dec
inc
add
cwtl
incl
xor
jg
add
jae
jmp
add
repnz
nop
xchg
test
sbb
movsb
add
addb
add
cli
sbb
scas
ret
add
test
and
decl
add
push
add
addb
leave
mov
pop
movsl
add
add
fbld
add
mov
add
add
sbb
cld
fldl
add
push
add
add
add
lret
add
xchg
mov
xchg
cmpsb
add
imul
in
mov
out
stos
jnp
xchg
add
add
sbb
cmp
jmp
mov
enter
roll
fcmovne
std
cmp
add
mov
jns
repz
rol
add
mov
inc
add
call
mov
add
jl
add
rsqrtps
jge
jo
decl
xchg
loope
les
aad
add
sbb
flds
or
mov
dec
aas
jle
add
ljmp
jae
pushl
add
push
stos
iret
push
add
nop
sbb
icebp
test
cmp
fistpll
out
pop
inc
add
stos
push
jno
cld
sti
mov
add
fstl
stc
fstpl
lds
xchg
lods
call
add
movsb
add
incb
call
add
das
aad
loope
addb
mov
out
lahf
add
call
lret
add
mov
test
sbb
add
sbb
incl
repz
ljmp
repz
dec
call
incl
add
add
xor
add
lea
or
outsl
pop
mov
jbe
faddp
add
adc
call
js
mov
jae
call
add
or
add
ljmp
dec
sbb
sar
stc
lret
ljmp
mov
add
mov
pop
push
add
and
add
sbb
add
adc
jne
lock
cmp
add
add
pushf
arpl
inc
add
outsb
call
mov
add
or
ljmp
pop
mov
mov
pop
mov
insb
jb
lcall
push
pop
xor
call
xchg
clc
fwait
cltd
xchg
mov
add
add
loopne
mov
pop
addl
add
add
lret
push
ss
add
stc
mov
xchg
icebp
sub
jo
pushl
iret
cmpsb
add
js
add
add
in
push
add
dec
imul
inc
add
push
add
outsb
jb
ljmp
ljmp
arpl
jnp
dec
sti
addb
ljmp
ljmp
neg
or
cmp
mov
bt
sub
jg
add
decl
sbb
ss
in
arpl
lcall
add
insb
iret
ret
add
adc
daa
add
ja,pn
lods
add
lcall
push
add
push
jle
xlat
mov
inc
add
mov
add
mov
shl
add
addl
movsl
add
bound
jmp
fmull
sarb
jo
decl
jl
add
cwtl
lea
dec
adc
das
push
les
pop
sub
mov
add
xor
adc
call
dec
mov
cmpsb
add
xchg
push
iret
ljmp
scas
xchg
and
xchg
sub
rolb
add
and
jmp
add
mov
cli
cmc
mov
mov
negl
add
mov
inc
add
bound
ljmp
sbb
add
notl
jp
add
push
add
push
movl
push
das
loopne
sbb
jbe
div
jbe
jp
add
into
in
cmp
add
xor
movsb
add
rorl
in
decl
pop
movsl
add
outsb
lret
lods
nop
loopne
jns
and
jmp
add
stos
lds
sbb
cmp
add
in
xor
decl
add
sbb
jecxz
aam
add
mov
push
xor
decl
scas
adc
lcall
add
adc
lcall
pop
inc
add
fcmovbe
pop
inc
add
push
add
lahf
clc
xor
mov
out
pop
movl
sbb
and
push
add
mov
dec
cmpsb
add
cmp
add
je
mov
and
nop
lods
stc
aas
xlat
cs
data16
add
call
add
mulb
ljmp
mov
push
add
fisttpll
add
xor
jmp
call
add
xchg
mov
pushl
cli
inc
add
cmp
add
add
cmpsl
add
add
add
stc
dec
std
add
lcall
cmpsb
add
sub
mov
jno
add
xor
incl
push
add
sbb
divb
jmp
add
mov
dec
outsl
pop
mov
or
mov
aaa
sub
mov
add
nop
pop
cmp
in
clc
pop
add
ret
add
pop
and
in
fldt
add
out
pop
push
add
clc
add
mov
loope
test
push
jbe
add
int3
lahf
movl
mov
cmpsl
add
xchg
aam
add
leave
or
lods
mov
xchg
test
rolb
add
dec
jbe
add
cmp
aaa
data16
add
popf
icebp
popl
leave
jb
ljmp
cmc
add
add
jmp
nop
stc
int
mov
adc
call
daa
add
stos
jg
cmp
jecxz
and
mov
dec
adc
pushl
add
sbb
add
test
xor
inc
add
add
add
aam
add
dec
rorl
add
lcall
scas
shlb
dec
imul
add
decl
test
cmp
add
jmp
divb
add
in
rclb
sbb
add
movb
add
add
pop
sbb
mov
inc
add
call
add
mov
add
or
lcall
inc
add
jne
add
push
push
add
loopne
mov
sti
call
adc
ljmp
add
ljmp
mov
or
add
mov
lods
and
incl
add
add
mov
loope
jmp
daa
add
rolb
add
add
call
incl
adc
mov
add
mov
mov
or
addl
adc
ljmp
scas
and
call
roll
lods
mov
push
sub
dec
adc
jmp
mov
out
js
add
jl
sub
test
data16
jg
loopne
scas
cvtps2pi
add
jo
incl
roll
add
ret
add
mov
add
call
lcall
pop
adc
dec
dec
jae
pushl
cmp
ljmp
fisttpll
xor
ljmp
mov
iret
fcom
sub
insl
imull
bound
jmp
js
lods
pop
add
bound
jmp
add
and
jmp
cmp
test
add
jmp
add
syscall
add
add
pop
jbe
add
xor
call
lcall
cmp
bnd
jmp
add
pop
les
imul
add
icebp
xor
add
add
add
out
mov
in
inc
add
xchg
shrb
adc
lcall
add
insl
cld
cli
addl
add
or
sbb
addb
sti
add
add
add
movsb
add
jecxz
or
pushl
les
imul
enter
scas
inc
add
add
fcoml
lcall
pop
add
add
mov
jmp
push
adc
pop
adc
jmp
add
in
movsl
add
add
sbb
add
jmp
add
sub
ja
add
roll
mov
add
cmp
adc
cmc
ret
add
mov
add
bound
ljmp
call
decl
nop
test
mov
addl
sar
insl
cmp
add
add
mov
decl
add
mov
add
add
push
sbb
push
test
sbb
cmpsb
add
add
incl
sti
jmp
out
mov
add
or
daa
add
add
roll
das
loope
mov
addl
xchg
xchg
push
add
pop
int3
push
xchg
cld
jl
xchg
incl
and
call
add
mov
das
push
add
pop
in
clc
push
add
sub
add
lods
iret
xchg
aad
mov
lds
and
movsl
add
and
pop
jmp
pop
add
xchg
ja
data16
nop
test
lods
scas
add
data16
add
mov
movl
sbb
xchg
push
mov
cli
push
add
xchg
imul
add
inc
add
xchg
push
lods
add
pushl
jmp
decl
sbb
add
push
and
ljmp
add
sub
add
add
dec
das
xor
addr16
lret
mov
std
dec
push
and
in
adc
pushl
add
iret
fsubl
sahf
adc
jmp
add
pop
add
add
mov
xor
je
movsb
add
mov
fsub
add
mov
add
push
movsb
add
and
out
xlat
xchg
jbe
push
jecxz
daa
add
in
ret
lcall
test
lea
in
pop
shr
idivb
aam
mov
add
ds
add
adc
add
add
ja
shll
pop
scas
cltd
xor
add
insl
movb
in
xchg
mov
ljmp
pop
inc
add
xor
aas
lds
push
stc
imul
sbb
add
divb
push
dec
cltd
adc
jmp
add
aad
lds
push
add
mov
cmp
ds
loope
fistpl
rolb
add
pushl
add
push
sahf
adc
incl
addl
pop
insl
mov
mov
add
sti
scas
cmpsl
add
add
lods
jmp
mov
test
xchg
stos
jmp
add
add
sbb
repz
decl
popa
add
or
jns
add
and
incl
add
jbe
add
cmp
add
add
and
ljmp
add
jns
cmp
adc
stos
jo
call
lcall
add
add
popf
sub
repz
lcall
add
dec
cli
lea
call
inc
add
stos
lock
push
movb
add
call
mov
add
lcall
xchg
pop
mov
dec
fwait
jo
dec
popa
add
xor
incl
fwait
jns
js
test
mov
clc
and
call
add
cmc
xchg
lahf
cmp
jmp
add
add
addl
mov
loope
push
push
add
inc
add
fdivl
mulb
jmp
add
add
lcall
inc
add
add
add
adc
icebp
pop
popa
add
cltd
push
add
adc
test
sub
adc
mov
in
fisubs
jns
int3
leave
sub
js
inc
add
pop
jp
add
sub
add
dec
adc
mov
push
lret
das
mov
add
add
add
aam
add
xor
ljmp
out
cld
addl
and
jmp
ds
add
and
incl
add
add
rolb
add
inc
add
call
push
movl
cwtl
pusha
add
inc
add
mov
add
pop
add
ljmp
movb
add
xchg
xor
jmp
add
add
add
add
adc
repnz
test
out
inc
add
mov
out
dec
ret
add
cltd
mov
and
fcoms
incl
add
aas
cmp
popf
incb
ds
add
mov
jne
jae
fadd
add
js
mulb
add
add
aad
cmp
add
add
inc
add
mov
addl
or
sbb
dec
sbb
add
cmp
add
test
dec
insb
pop
add
jge
daa
add
lcall
sub
adc
incl
xchg
mov
add
ljmp
daa
add
cltd
mov
mov
add
add
mov
push
add
mov
add
pop
add
pushf
addps
push
mov
out
jb
incl
or
add
xor
call
dec
fisttps
sub
sti
insl
addl
xchg
icebp
push
arpl
call
clc
push
and
dec
pushf
cmp
imul
add
scas
xchg
in
mov
add
cmpsl
add
add
add
fdivl
rcl
loope,pt
cld
js
sbb
bswap
sbb
xor
add
lcall
or
add
out
repnz
stos
sbb
add
xchg
addl
enter
add
repz
jg
sub
add
add
pushl
lret
add
mov
ret
popf
sbb
jb
lcall
or
or
ljmp
out
arpl
incl
rol
add
fidivrl
add
sub
xchg
push
add
add
rcrb
add
sub
incl
or
cmp
je
sub
add
fisttps
sbb
mov
add
jge
popa
add
les
inc
add
flds
add
lods
int3
cwtl
mov
fwait
sbb
icebp
adc
sti
jle
test
cmpsb
add
add
jno
call
cli
and
incl
js
add
cld
bound
ljmp
xchg
pop
jae
lcall
sub
add
cwtl
push
out
jb
ljmp
xor
jmp
pop
add
lcall
ficoml
add
xor
push
add
add
cltd
testl
imul
add
add
das
fdivrs
add
in
and
ljmp
add
incl
lcall
xor
dec
roll
decl
add
sub
pushf
push
cmp
add
mov
add
jo
ljmp
add
add
in
pop
push
add
test
jno
incl
add
xchg
lods
movsl
add
out
fisttpl
add
push
sub
mov
xchg
xchg
call
sbb
or
lcall
add
xchg
imul
add
cmp
add
call
pop
cwtl
pusha
add
pop
iret
pop
in
xor
movb
std
movsb
add
outsb
mov
push
in
scas
sti
sbb
add
addl
rolb
add
cmpsl
add
stos
sbb
and
pushl
add
aad
mov
xor
jmp
add
sahf
push
sbb
jmp
add
sub
inc
add
insl
cs
roll
cmp
leave
lret
pop
xor
call
add
cli
pop
fstpt
jl
add
sbb
xchg
daa
add
push
loope
lds
sbb
pop
jl
out
fstl
add
decl
push
aad
mov
mov
fmull
add
inc
add
hlt
clc
out
jle
add
lds
jp,pn
cmp
sbb
add
addb
add
jmp
add
sub
and
cmp
int3
fisttpll
mov
push
fiadds
pushl
in
addb
add
loop
sbb
add
mov
add
push
add
adc
add
jne
out
incb
xchg
cwtl
cmp
add
lea
pop
push
in
cli
and
adc
jmp
lcall
fildl
add
pop
adc
fistpll
dec
out
mov
add
lcall
add
cmc
adc
ljmp
jmp
add
fldenv
push
add
sub
mov
add
sub
ljmp
add
imul
pop
push
add
mov
sbb
add
call
clc
sbb
and
call
xor
decl
aas
movl
add
iret
lret
mov
insb
mov
add
ljmp
jl
adc
mov
add
int
les
cmp
add
clc
int
add
add
xchg
hlt
dec
out
jle
xor
incl
jmp
call
push
xor
ljmp
xor
repnz
mov
add
or
add
arpl
cmp
inc
add
fwait
sub
cmp
ficomps
add
add
add
loopne
cmpsl
add
adc
pushl
add
lds
leave
lret
xchg
or
mov
fisubrs
push
lock
cmpsb
add
add
in
cmp
ljmp
xchg
fstp
and
fldt
add
add
call
push
add
call
add
lods
pushf
sbb
mov
add
test
and
jb
incl
mov
add
nop
jno
ljmp
mov
fsubrs
jecxz
scas
adc
lcall
mov
push
add
jae
incl
pushl
rolb
mov
xchg
dec
ret
xor
inc
add
dec
jle
add
insl
push
pop
jne
sbb
add
sbb
and
add
add
js
add
jnp
add
ds
sbb
add
dec
sbb
cmc
push
add
cmc
push
add
pop
lods
cmp
xchg
push
add
dec
fwait
shl
movl
add
inc
add
add
int3
xor
ljmp
add
psrld
ljmp
add
push
add
sub
insb
scas
push
mov
xor
lcall
in
mov
loop
fistpll
add
rcll
add
loopne
cltd
cli
stos
and
mov
arpl
jmp
aaa
push
add
in
sub
fdivs
add
cli
dec
inc
add
enter
insl
pop
add
stos
outsl
inc
add
imul
add
ja
add
bound
mov
add
push
add
dec
xchg
hlt
sub
add
adc
daa
add
push
mov
aaa
dec
cld
push
pusha
add
enter
popa
add
test
add
pop
pop
lcall
pop
loop
aas
xor
pushl
jmp
add
fadd
add
inc
add
add
mov
add
add
mov
adc
cmp
in
stc
pop
pushf
jp
add
xor
ljmp
add
leave
adc
pop
nop
sub
cli
jb
lcall
lcall
add
aaa
idivl
mov
add
addb
sub
ja,pt
push
xor
cmp
stc
lds
test
call
xchg
ds
xchg
in
lret
movsb
add
jae
clc
and
clc
mov
cld
add
incl
add
sti
rolb
xstore-rng
cmpsl
add
daa
add
xchg
push
pop
call
call
or
add
in
pop
int3
insb
pop
test
add
dec
dec
mov
lcall
cmpsb
add
add
pop
xchg
ret
and
incl
add
lahf
mov
add
add
add
add
push
add
popa
add
stc
cld
aas
add
add
add
decl
sarb
cli
out
mov
inc
add
sub
add
filds
add
les
fldt
jnp
add
movsl
add
jmp
call
add
pop
insl
cmp
add
sub
in
mov
adc
incl
jmp
xor
xor
xor
add
xlat
mov
xlat
dec
movb
add
add
mov
add
data16
test
mov
pop
push
add
stos
add
add
add
daa
add
add
lahf
jmp
add
dec
outsb
cmp
add
push
cmp
add
xchg
add
incl
add
in
adc
ljmp
add
divb
aaa
xor
popf
enter
and
jmp
lcall
add
nop
ret
add
jmp
add
mov
ret
mov
out
and
jecxz
mov
and
cmp
or
add
and
out
jb
dec
adc
inc
add
out
mov
ds
add
insb
inc
add
fstps
add
cmpsl
add
xchg
push
jmp
jp
addb
jno
dec
stos
sbb
add
int3
out
jge
fsub
add
add
test
rorb
cwtl
les
int
mov
outsb
fists
ds
inc
add
and
incl
mov
jmp
mov
add
add
add
incb
dec
xlat
jae
pushl
mov
mulb
add
in
mov
xchg
movb
pop
pop
push
ret
cmp
popa
add
pop
cmpsl
add
ja
add
fwait
rclb
addl
push
test
xor
mov
fwait
xchg
js
add
addl
add
leave
dec
scas
les
ret
add
mov
add
lcall
dec
push
add
lock
into
sbb
add
call
fstpt
sbb
add
xchg
nop
ljmp
jno
fmulp
push
add
jne
outsb
aam
lock
cmp
push
add
ret
add
sti
adc
push
add
sbb
icebp
cmpsb
add
test
add
mov
dec
addb
ja
inc
add
out
out
ret
mov
jle
push
add
decl
dec
push
pusha
add
mov
add
inc
add
fcoms
add
out
mov
incl
scas
fadd
add
add
mov
add
adc
jns
or
add
add
add
loopne
inc
add
jae
inc
add
add
mov
cmp
add
add
add
ljmp
and
fdivrl
iret
add
push
ljmp
in
cmp
add
outsl
jg
add
jne
movsb
add
jle
mov
add
in
sub
add
ss
sbb
add
incl
outsb
mov
push
cmp
test
fsubr
jecxz
mov
add
in
in
dec
jecxz
and
jmp
add
in
pusha
add
mov
add
in
dec
sbb
jl
mov
in
or
add
incb
add
jno
ljmp
adc
dec
enter
aas
inc
add
movsl
add
push
push
pop
mov
lods
mov
inc
add
lods
add
jle
jecxz
jns
add
add
push
mov
add
add
ss
and
decl
jo
pushl
add
push
add
gs
push
popf
and
call
lcall
inc
add
jecxz
mov
add
popf
jno
decl
ret
add
ljmp
fs
and
call
add
aaa
aad
add
fldl
dec
hlt
xor
pushl
mov
add
sbb
mov
call
call
mov
movsb
add
call
add
sbb
xor
ljmp
cwtl
mov
add
call
outsb
fs
add
push
add
jg
add
notb
fisttps
in
out
xor
ljmp
out
arpl
jmp
std
push
add
idivb
cmpsb
add
add
lods
dec
push
add
mov
add
out
sbb
add
cltd
in
inc
add
pop
popf
sbb
stos
xor
sub
push
add
repz
inc
add
adc
ljmp
pop
fcmovu
lea
add
add
push
inc
add
adc
jmp
add
aaa
push
mov
inc
add
add
add
bound
fildll
xchg
mov
lock
add
add
add
cld
sub
sarb
out
test
imull
je
mov
add
push
nop
in
test
or
add
adc
call
mov
negl
data16
lock
enter
movsb
add
add
mov
add
scas
movb
mov
pop
xchg
mov
inc
add
ds
sbb
add
add
add
fwait
loope
addl
add
add
mov
add
add
ds
add
lcall
dec
adc
push
in
out
inc
add
or
das
in
test
add
adc
inc
add
add
add
mov
addb
cmp
push
stos
out
lret
leave
inc
add
cmpsl
add
add
add
and
out
inc
add
xor
mov
ret
add
add
pushl
pushl
add
and
call
cli
les
leave
xchg
cmp
outsl
mov
add
ret
adc
ljmp
test
dec
and
int
xor
pushl
daa
add
add
add
inc
add
mov
into
enter
xor
decl
add
jo
push
mov
sub
dec
ret
add
adc
sbb
add
nop
inc
add
jl
add
iret
ret
add
in
xchg
xor
xchg
or
leave
imul
in
push
add
addl
inc
add
sub
adc
dec
pop
outsb
pushf
cmp
add
push
sub
add
ljmp
mov
addb
add
xchg
adc
lcall
cmp
bound
call
add
mov
mov
mov
push
lods
ret
add
mov
movl
inc
add
jle
aas
movsb
add
dec
adc
fcomps
push
add
xchg
js
dec
mov
addb
sahf
and
push
out
addb
je
add
pop
and
fdivr
stos
sub
add
sbb
rcl
push
add
addb
cltd
call
addl
ljmp
add
jae
lcall
addl
out
and
incl
jnp
mov
add
sub
add
leave
data16
add
sbb
les
test
push
jne
int
mov
add
push
add
adc
incl
add
xchg
xor
ljmp
lods
jns
leave
movb
fidivrl
lahf
mov
outsl
movb
inc
add
jbe
mov
add
out
popa
add
cmp
jnp
add
addl
add
test
imul
pop
std
and
push
push
add
int
add
lcall
aaa
ds
outsl
hlt
addl
sbb
pusha
add
addl
jae
call
pushl
add
add
mov
ljmp
je
add
xor
pushl
add
inc
add
call
cmp
dec
fstpl
fsqrt
std
test
int3
push
push
xlat
mov
pop
mov
add
dec
rolb
or
add
sbb
add
arpl
lcall
jmp
xchg
mov
popa
add
mov
add
mov
dec
jne
mov
xchg
mov
movsl
add
add
sub
push
push
hlt
cmp
sahf
push
ds
add
xlat
fnstenv
add
jae
decl
bound
ljmp
xchg
bound
aas
mov
or
push
dec
in
addl
sbb
add
push
pop
inc
add
stc
js
lret
sub
incl
bound
pushl
add
das
cmp
add
adc
cli
cli
mov
add
pop
xor
incl
add
lsl
call
sti
cmpsl
add
and
jge
or
addb
sbb
add
add
loope
push
push
add
ret
add
rorl
mov
add
mov
popf
pusha
add
push
ljmp
sbb
dec
mov
add
add
add
ret
das
push
add
pop
loop
lods
stc
jno
jl
stc
stos
sub
cli
push
addl
add
jmp
mov
xor
imul
jge
inc
add
add
adc
decl
xchg
fisubl
add
sub
ljmp
cmp
add
jmp
jbe
add
xor
lcall
jbe
dec
mov
and
inc
add
jnp
add
dec
out
test
xchg
xchg
inc
add
add
fldcw
cmc
cmp
test
enter
ljmp
add
lret
roll
add
movb
add
ret
add
sbb
ljmp
scas
jp
add
mov
lock
test
dec
addb
testl
lcall
inc
add
mov
mov
ljmp
lods
lea
cmp
add
fnstenv
add
mov
dec
xor
stc
mov
out
in
mov
add
sub
mov
pop
add
xchg
pop
divb
pushl
decl
fisttpl
lods
add
add
mov
add
clc
addr16
add
call
pop
xor
fdivrs
fiadds
add
inc
add
adc
and
mov
pop
jno
jg
shll
call
pushl
cmp
lret
add
aas
xchg
stos
out
xchg
je
add
add
addb
add
push
mov
pop
or
add
or
movsl
add
dec
roll
pop
stc
push
add
and
jg
adc
std
repnz
sub
add
xchg
cmc
add
call
sbb
movl
push
inc
add
ljmp
push
mov
dec
nop
xor
ljmp
pop
mov
loopne
sub
and
movsb
add
add
add
dec
xchg
pusha
add
adc
loope
jle
lcall
mov
add
sahf
cwtl
out
and
rcl
lds
stos
push
add
sub
sub
je
add
popa
add
cmp
call
mov
dec
nop
xor
jmp
call
add
push
or
add
js
add
jmp
add
sub
cmc
popf
mov
and
add
add
adc
jp
and
mov
add
push
add
pushl
cmpsl
add
pop
nop
mov
inc
add
lea
decl
out
popl
add
cmp
pop
add
lahf
mov
negb
sub
mov
ret
add
sbb
out
jb
pushl
lcall
add
sub
pushl
add
xchg
sub
push
add
adc
add
test
or
jle
push
push
add
add
mov
ljmp
repnz
mov
fadd
add
add
xchg
lods
aam
add
add
pop
cmp
dec
dec
fldl
add
mov
add
loop
out
pop
add
add
mov
add
je
mov
jno
push
pushf
insb
popf
mov
movl
add
inc
add
jbe
in
lret
addb
test
nop
imul
add
add
test
add
data16
shll
sub
dec
inc
add
add
jmp
add
xor
decl
add
pushl
add
fstl
popf
jns
test
adc
ljmp
xchg
pop
add
fiaddl
push
push
add
add
mov
add
jmp
add
pop
shl
nop
clc
add
incl
inc
add
or
add
sarl
loope
adc
add
add
add
add
stc
adc
jmp
add
inc
add
sub
add
xchg
xchg
cwtl
pop
add
add
mov
vpshaw
aas
pop
cmp
add
lods
ret
cli
aaa
loope
sbb
test
sub
jl
add
call
pop
mov
dec
iret
roll
add
cmp
fiaddl
iret
or
mov
mov
add
lds
test
sbb
sbb
add
les
pusha
add
jns
mov
pusha
add
push
jge,pn
add
daa
add
aad
psrlw
cmpsb
add
cmp
add
lock
add
fdivrl
xchg
inc
add
cmc
push
add
rolb
add
add
insl
int3
xchg
add
lcall
jle
push
add
insl
hlt
outsb
mov
add
fcoms
pop
add
add
add
add
aam
rolb
inc
add
adc
ljmp
mov
aad
psllw
loopne
sub
add
jmp
add
add
add
push
add
lcall
mov
addb
add
pop
mov
add
mov
dec
adc
jmp
add
fimuls
xchg
pop
push
add
jmp
xor
decl
add
inc
add
add
aad
add
add
roll
add
add
mov
add
jecxz
mov
pop
addb
int3
loope
sbb
rolb
pop
jno
push
lcall
mov
je
lret
roll
or
mov
mov
pop
mov
rcrb
xchg
dec
lds
mov
xor
jmp
add
iret
fsub
add
insl
cwtl
dec
hlt
fwait
les
sbb
sarb
sub
stc
ss
add
adc
call
stos
aas
out
test
out
clc
sbb
jmp
add
mov
add
cmp
add
pop
fistps
add
out
das
ss
xchg
and
cli
popa
add
cmp
fsubl
incl
decl
sub
and
jmp
jae
decl
addb
jb
ljmp
nop
in
or
leave
add
call
add
repz
mov
ret
add
movsb
add
lret
roll
scas
xchg
lret
addb
add
xchg
jg
pop
les
xor
inc
add
data16
jo
ljmp
pop
inc
add
add
jecxz
pop
mov
add
add
aaa
daa
add
mov
dec
stos
scas
pop
leave
mov
add
lds
or
add
add
jmp
add
pop
fstpl
lds
mov
fdivr
loope
push
mov
dec
add
cld
ss
add
insl
leave
test
add
add
into
pusha
add
data16
push
push
pop
push
add
inc
add
add
push
add
mov
mov
aad
add
in
pop
jecxz
xchg
jnp
mov
pop
fwait
lcall
add
add
cmp
push
add
aaa
cld
test
add
add
rorl
xlat
fistps
rcr
xor
std
sbb
call
call
test
mov
jp
ss
enter
add
ljmp
jl
pop
out
ja
inc
add
mov
mov
add
loop
stc
push
add
imul
sbb
add
lock
repz
jmp
add
xor
test
movl
add
addb
fsts
add
aam
outsb
pop
cld
test
loop
jae
jmp
jmp
add
jmp
jecxz
inc
add
movsb
add
and
jl
add
mov
add
jecxz
sub
cmp
mov
pop
loope
es
rolb
aas
inc
add
pop
adc
call
repz
cli
rolb
jno
decl
add
or
ret
add
add
sar
lea
add
and
call
call
ljmp
add
add
jg
fstpt
push
add
iret
xchg
cmp
rcrb
mov
mov
addl
cmpps
add
fdiv
mov
stos
imul
push
int3
mov
leave
sbb
test
xchg
daa
add
add
sub
mov
pop
rolb
add
jb
decl
ret
add
fsubr
lods
lcall
and
pushl
xor
call
inc
add
mov
pop
push
inc
add
add
cli
mov
lds
lods
decl
test
or
insl
add
inc
add
xor
lea
add
add
lods
add
jmp
add
add
call
nop
cmp
sti
icebp
out
xchg
out
outsl
outsl
js
mov
loopne
movl
add
insl
scas
inc
add
xchg
aam
cli
mov
add
decl
xchg
add
repz
xchg
in
adc
pop
out
test
add
mov
mov
add
clc
push
ds
cli
arpl
decl
dec
dec
sub
decl
xchg
pop
dec
mov
outsb
sbb
add
daa
add
lret
pop
outsb
xor
popa
add
cmp
adc
jge
sbb
add
jno
push
xchg
pop
xor
decl
push
add
dec
inc
add
add
add
ret
add
add
ljmp
add
call
mov
add
jge
add
sub
call
pusha
add
xchg
hlt
ret
add
shll
add
add
inc
add
aas
pop
inc
add
dec
and
lcall
mov
repnz
pushf
addl
pushf
xchg
lods
mov
lods
inc
add
cmp
add
cmp
add
add
add
adc
call
push
add
add
add
pop
mov
dec
clc
inc
add
fdivrs
cmp
ljmp
out
insl
test
mov
mov
nopl
pushl
jmp
add
lods
and
pushl
inc
add
cmp
add
mov
cmp
pusha
add
xchg
pop
mov
imull
out
or
push
mov
ret
add
incl
ljmp
out
std
out
loope
lods
movl
loope
mov
lods
dec
and
inc
add
mov
xor
stc
xor
decl
add
sub
mov
add
in
fisttpl
pusha
add
and
ljmp
and
decl
or
pop
fsts
cmp
add
jp
xchg
dec
les
add
decl
testb
mov
lea
fidivrs
ljmp
add
add
cmp
xchg
mov
add
jmp
pop
loope
lds
test
add
arpl
incl
hlt
mov
mov
aas
mov
hlt
inc
add
notb
add
mov
push
xor
faddp
add
fistpl
add
cmp
pop
mov
cwtl
push
lds
out
movsl
add
add
lcall
add
sbb
repz
shll
add
pop
add
add
mov
push
add
lds
or
push
add
out
std
gs
add
mov
or
cmc
into
out
or
add
jbe
add
mov
mov
add
nop
adc
jmp
decl
push
pop
nop
test
mov
decl
jnp
add
in
cld
sbb
mov
clc
popa
add
dec
cwtl
rcr
pop
xchg
pop
cmp
out
mov
add
mov
addl
add
incl
test
add
add
sbb
bound
pushl
inc
add
dec
fmul
inc
add
ljmp
data16
add
or
add
pop
push
jl
popf
jl
mov
cltd
mov
addl
pop
repz
popa
add
fbstp
lret
cmpsl
add
add
call
add
dec
pop
jge
jne
inc
add
sbb
add
shlb
add
push
movsl
add
aam
pop
enter
lods
cmc
repnz
outsb
mov
js
add
dec
sbb
pusha
add
xchg
cmp
add
cli
sbb
daa
add
add
jp
add
add
cmpsb
add
add
inc
add
rolb
iret
push
add
test
jmp
ja
jno
pushl
add
inc
add
data16
add
out
mov
add
adc
decl
add
cmpsb
add
mov
xor
add
pop
xor
jmp
add
add
add
cld
lahf
arpl
decl
fidivl
add
fcmove
jnp
mov
add
add
and
add
add
pop
ret
add
jmp
add
test
sahf
out
and
push
daa
add
add
cmpsb
add
addb
add
add
add
mov
add
mov
mov
add
or
jmp
push
dec
xor
ljmp
add
add
add
cmp
out
xor
ljmp
mov
cmpsl
add
mov
jge
add
test
insb
mov
add
cli
mov
add
add
xchg
mov
xor
add
xchg
or
test
add
xchg
jg
add
mov
loop
dec
pop
arpl
call
add
test
cmp
mov
rolb
add
sbb
add
add
jge
add
add
cld
or
push
sub
add
jne
add
jl
jg
fdivrl
ret
lods
addb
imul
push
inc
add
mov
xchg
outsb
loopne
inc
add
call
stc
movsl
add
add
add
add
fisubs
xor
decl
stos
lea
add
rcrl
jmp
scas
and
call
and
mov
faddl
sbb
xor
jmp
add
inc
add
xor
pushl
cltd
ret
add
add
lcall
rcl
data16
add
sub
add
add
cmp
testl
test
inc
add
push
add
jmp
add
rolb
pop
lahf
test
out
addl
roll
add
or
cmp
add
data16
js
xchg
lods
shlb
mov
add
xor
add
add
and
pushl
add
rcl
xchg
stos
dec
repnz
sbb
lcall
push
add
mov
push
scas
out
sub
lcall
add
pop
ss
out
loope
imul
rcl
pop
mov
movsb
add
ret
add
arpl
ljmp
add
mov
fwait
outsb
add
ret
add
add
ljmp
add
add
add
sub
jmp
js
test
cmp
adc
push
push
add
lods
inc
add
add
fiadds
add
add
jmp
add
std
imul
add
add
pop
push
ret
nop
inc
add
add
jmp
test
fdivrl
insb
or
rolb
add
jl
mov
add
jae
lcall
pop
sahf
inc
add
cli
outsb
jb
inc
add
add
add
cmpsb
add
push
adc
mov
and
cmp
mov
add
adc
sbb
out
data16
cwtl
add
loope
addb
add
std
test
mov
mov
mov
add
add
mov
ljmp
add
ret
add
into
pop
repz
call
adc
cld
lock
add
add
call
sub
add
inc
add
cmp
or
jg
roll
add
or
add
and
mov
pushl
add
into
xor
incl
jp
shrl
add
add
add
ret
add
std
lahf
out
mov
adc
incl
ljmp
xor
add
aas
addb
add
mov
lods
jne
test
rcll
call
add
add
mov
add
int3
dec
in
lock
add
xlat
in
cmp
shl
addb
pop
aas
addl
scas
and
jmp
dec
dec
jmp
movb
add
sub
add
imul
call
sub
add
rcrb
sti
lds
jae
decl
add
mov
add
call
daa
add
push
addl
add
add
pop
aam
sub
add
push
add
insl
add
call
mov
add
sub
insl
int3
jge
ret
add
and
push
xchg
mov
add
add
data16
dec
push
add
pusha
add
imul
add
fs
add
pushl
cmp
xchg
imul
outsb
mov
add
xchg
cmpsb
add
ljmp
xor
insb
addb
jb
ljmp
push
repz
testb
add
pop
push
jb
lcall
or
dec
repz
dec
jp
add
and
incl
add
lcall
add
or
into
push
sbb
add
add
incl
sub
xor
jmp
frstor
dec
xchg
sub
movsl
add
add
mov
mov
mov
jno
jmp
add
add
lcall
pop
mov
adc
lcall
es
add
pop
sahf
jnp
add
ljmp
xchg
dec
push
add
pop
jbe
add
add
addl
add
add
aaa
stos
add
call
test
jl
pop
xor
dec
mov
push
add
add
add
push
xchg
push
xchg
ljmp
add
fcompl
test
add
stc
addb
add
cmp
push
add
addl
add
add
jle
dec
xchg
pop
add
sub
fsubrl
add
lcall
mov
push
cmp
push
shlb
push
adc
ljmp
test
add
push
dec
jns
add
fwait
negb
mov
dec
xor
incl
clc
lret
inc
add
jno
jmp
incl
jmp
add
jp
add
push
out
xor
dec
push
add
push
add
mov
scas
int3
dec
add
decl
shlb
incl
adc
jmp
jno
lcall
add
add
push
add
add
add
pop
push
cmp
lcall
int3
je
add
add
mov
mov
add
xchg
fld
add
add
add
jo
jg
mov
jmp
push
add
jbe
xor
add
jb
lcall
fsubrs
add
add
add
loope
mov
add
add
addb
aam
lret
jp
inc
add
decl
add
mov
push
add
in
sbb
dec
jne
push
add
pop
pop
add
clc
adc
inc
add
out
mov
popf
jg
add
xor
jmp
add
pop
jo
incl
jecxz
movsb
add
add
jle
pop
mov
push
or
add
mov
add
sbb
add
add
cmp
jp
roll
push
shld
sbb
pop
inc
add
jnp
add
or
mov
pop
pop
cmp
add
push
leave
int
add
daa
add
fstpl
xchg
cmovle
lahf
mov
pop
int3
mov
add
imul
mov
add
lret
add
jle
adc
ljmp
inc
add
decl
sti
jo
push
push
add
pushl
ja
push
jns
cmp
add
test
rolb
add
ret
add
test
div
xor
call
jmp
add
pushf
movsl
add
mov
cld
mov
xchg
cmp
or
inc
add
call
test
leave
jns,pt
add
add
outsb
and
add
mov
sbb
decl
or
mov
inc
add
lret
in
xor
add
pop
xchg
push
mov
lcall
add
push
add
testl
jg
or
cmp
add
add
push
orps
mov
loopne
cld
and
jmp
add
pop
aad
add
insl
test
mov
jb
jmp
cs
jmp
and
decl
add
add
pop
fdivrl
xor
add
call
add
add
jecxz
inc
add
adc
pushl
xchg
mov
inc
add
add
dec
or
dec
mov
jo
decl
add
sub
mov
fmull
push
add
cmp
cmp
inc
add
pop
push
or
add
add
addl
add
call
or
lds
pop
or
add
cmp
add
add
mov
add
sahf
jg
mov
jae
cmp
add
add
add
mov
popf
inc
add
add
call
add
xor
cmp
into
dec
mov
daa
add
xor
xchg
add
incl
incl
mov
movb
add
add
add
and
pop
jg
jmp
add
cs
add
cmp
incl
push
daa
add
add
movl
xor
incl
add
lods
cli
adc
lcall
pop
fidivl
lods
pop
cmp
add
insb
mov
add
icebp
mov
add
cmpsl
add
leave
leave
stc
dec
mov
add
iret
pop
out
aas
push
arpl
decl
cld
add
adc
dec
roll
add
add
mov
add
lcall
add
dec
das
cwtl
ljmp
aad
add
inc
add
les
les
sti
in
and
inc
add
call
mov
test
call
add
mov
add
add
hlt
and
pushl
add
js
in
neg
test
add
add
arpl
lcall
add
addb
or
pushl
add
test
shll
xchg
xor
jmp
cli
int3
stos
loopne
sbb
addl
mov
xor
jmp
pushl
pop
push
xor
repnz
inc
add
add
pop
xchg
bound
jmp
add
cld
fcomps
jge
xrelease
push
push
out
add
incl
pushl
add
dec
out
dec
dec
inc
add
add
ljmp
add
inc
add
ljmp
add
cltd
roll
add
lcall
mov
inc
add
sub
add
int
xor
ljmp
pushl
jge
mov
cs
jp
adc
pusha
add
or
pop
loope
dec
adc
pushl
fcompl
enter
add
repnz
add
push
xchg
mov
add
loope
sbb
clc
inc
add
and
push
mov
add
into
repnz
add
push
add
mov
stos
aad
xchg
aad
add
lock
add
das
int3
sub
add
cmp
add
add
in
cmp
add
jl
add
ljmp
add
jne
mov
scas
idivb
mov
xchg
imul
jb
ljmp
add
mov
fs
cmpsl
add
or
call
ja
rcrb
add
and
lcall
je
add
in
rolb
mov
ret
add
jmp
add
add
das
adc
xchg
dec
loop
addb
add
jo
incl
test
enter
mov
into
pop
insb
repnz
xlat
sub
add
sbb
pop
ds
stc
xor
int
imul
add
lret
adc
add
fwait
adc
add
and
incl
xchg
adc
ljmp
xchg
fisttpll
add
mov
rolb
add
jmp
xor
decl
lcall
sub
lcall
and
lcall
inc
add
add
mov
xor
incl
add
add
jo
decl
jb
cld
xchg
outsb
addl
popa
add
pop
push
mov
decl
add
add
les
mov
mov
or
add
add
incl
xchg
add
ja
inc
add
out
addl
cwtl
jae
in
out
pop
pop
add
call
add
in
imul
fsubrl
and
std
mov
and
dec
iret
std
or
sbb
or
add
jnp
and
pushl
add
push
add
add
movb
xchg
bnd
add
lcall
add
add
add
imul
sbb
sbb
jno
decl
leave
add
lcall
mov
cmp
mov
add
add
sbb
or
cmp
int
mov
xchg
addl
dec
add
dec
fwait
lcall
jo
jmp
add
add
cwtl
jbe
addb
cmp
add
and
decl
or
addl
add
stos
lock
outsl
push
add
lea
add
divb
cmp
add
jmp
add
ljmp
xor
ljmp
add
add
xchg
adc
push
std
push
add
push
outsb
jecxz
cld
sub
push
add
sbb
cmp
movb
ret
add
push
mov
inc
add
aam
jecxz
sub
add
test
out
in
ds
cltd
popf
xchg
dec
ret
add
into
popf
or
and
call
test
jge
int
out
jg
add
add
add
ja
roll
add
cmpsb
add
add
push
or
in
xchg
push
in
sti
mov
add
cmc
int
hlt
sub
test
xchg
pop
stos
mov
add
dec
mov
add
pop
xchg
push
add
fstps
pop
movl
add
add
lahf
mov
out
les
sub
sbb
push
loope
or
inc
add
add
imul
stc
cmp
add
add
dec
push
inc
add
dec
sbb
add
mov
push
add
jne
popf
push
bound
call
stc
roll
testb
ljmp
cmpsl
add
push
add
popa
add
mov
out
fcomps
add
ds
imul
mov
jl
add
xor
jmp
add
add
call
xor
jns,pt
xor
add
pop
call
sub
test
call
cmpsb
add
add
jns
add
add
les
adc
inc
add
push
push
add
addb
add
cmp
enter
aad
or
inc
add
rolb
cmp
add
iret
add
std
add
pushf
sub
add
sti
inc
add
aad
mov
push
add
roll
dec
dec
add
add
imul
cs
stos
push
movsl
add
xor
mov
pop
add
cs
lcall
sahf
dec
call
jb
push
call
mov
dec
dec
mov
lods
clc
popa
add
clc
jmp
add
popa
add
add
jmp
push
repz
xchg
scas
jge
shrb
add
popf
mov
push
push
mov
decl
decl
loope
iret
cli
iret
mov
outsb
hlt
call
nop
lret
rolb
aaa
adc
inc
add
add
add
addb
add
sbb
add
mov
ret
add
ljmp
xchg
mov
icebp
mov
out
ja
loopne
jge
loop
push
inc
add
xchg
pop
sub
adc
dec
das
cltd
pop
add
add
fldcw
mov
add
inc
add
rol
add
sti
hlt
mov
cmp
imul
add
addl
fidivl
mov
test
out
or
add
add
pop
sub
icebp
or
popa
add
les
sahf
aam
add
decl
push
add
push
add
dec
pop
divl
add
ljmp
or
or
mov
add
or
fmull
xor
lcall
mov
shl
jne
testl
mov
cwtl
mov
cli
int3
add
jg
movl
add
fbstp
dec
xchg
mov
add
nop
mov
add
enter
add
sbb
add
jmp
dec
and
incl
inc
add
mov
add
fdivrs
sbb
add
ss
mov
push
add
push
add
insb
mov
cmpsl
add
and
decl
test
hlt
xchg
in
pop
pop
stos
sub
cmc
sub
lret
das
add
mov
push
mov
add
std
or
fiadds
push
inc
add
jns
jmp
add
cmp
aaa
enter
mov
popa
add
sahf
negb
add
rolb
inc
add
stos
mov
and
decl
inc
add
and
incl
decl
mov
jb
mov
fisttps
aaa
or
cmp
add
push
mov
mov
lret
or
mov
int
jl
add
jp
xlat
dec
pop
repnz
add
add
sub
jae
dec
test
add
imul
cmpsb
add
add
popl
pop
insb
fcomp
clc
xchg
add
jmp
xchg
adc
fildl
add
data16
dec
test
jb
ljmp
jnp
inc
add
push
add
sbb
pause
test
add
in
sarb
testb
sbb
icebp
cmpsb
add
and
jmp
in
jl
jae
pushl
aas
xor
pushl
jne
pop
add
ljmp
movsl
add
scas
cmp
pop
adc
fdivs
ljmp
jb
fstpl
push
cmp
and
pushl
add
xchg
sub
add
mov
movl
inc
add
sub
add
mov
inc
add
add
lods
insl
add
jg
outsb
movsb
add
cmpsb
add
lcall
lea
les
dec
nop
xchg
inc
add
incl
inc
add
pop
loope
test
mov
adc
lcall
mov
inc
add
add
dec
enter
mov
adc
mov
push
add
add
add
cltd
ss
add
fcoms
push
push
push
add
jp
popf
xlat
lcall
inc
add
add
call
in
mov
js
sbb
add
add
lock
add
shrb
mov
add
mov
add
mov
mov
mov
roll
icebp
and
push
jae
ljmp
test
or
mov
test
add
fsts
inc
add
in
je
add
add
mov
add
add
jmp
repz
add
push
or
or
sbb
add
rorl
ss
add
add
data16
cwtl
cmc
hlt
jbe
xchg
or
cltd
jne
push
add
fisttps
xchg
hlt
mov
mov
and
decl
jp
gs
imul
lcall
xchg
jp
add
ljmp
jecxz
mov
cmc
xchg
iret
jbe
std
movsb
add
sbb
add
lahf
aam
jae
jmp
cmp
add
add
jae
call
add
sbb
cmc
cmp
add
add
lock
nop
pop
mov
cs
jecxz
ljmp
fdivl
jl
aad
addl
data16
inc
add
add
adc
ljmp
cmp
sbb
ret
add
lret
adc
fnsave
add
inc
add
inc
add
inc
add
or
add
adc
decl
add
sub
add
daa
add
pushl
add
add
divl
es
cmpsl
add
pushl
sub
bound
cmp
push
add
lcall
lods
mov
decl
inc
add
int3
add
loopne
and
decl
add
xor
pushl
push
imul
addb
add
adc
ljmp
add
pop
ss
sub
add
into
push
lock
addb
jb
call
inc
add
leave
cs
add
dec
pop
sub
add
aad
test
jg
mov
sub
add
movl
mov
add
jl
sbb
mov
add
fidivl
jb
dec
lods
int
add
inc
add
mov
out
movsl
add
add
cld
push
mov
add
jl
cwtl
aam
sbb
add
pop
sub
xor
lcall
add
lcall
icebp
clc
mov
decl
imul
mov
stos
scas
lock
add
and
leave
aas
mov
add
add
push
imul
ljmp
xchg
xor
mov
add
push
addl
add
add
inc
add
movsb
add
mov
sbb
lcall
adc
inc
add
rolb
mov
add
fisubrl
lods
push
add
lret
lret
aam
add
add
dec
pop
add
add
adc
jmp
jmp
add
pop
dec
lock
add
out
adc
call
data16
add
negb
add
push
int
je
add
hlt
jmp
or
in
rclb
imul
call
xchg
roll
push
add
push
test
or
and
sbb
in
mov
bound
lcall
add
cltd
push
add
add
lds
cmp
lret
in
loopne
xchg
mov
js
fwait
imul
add
add
push
mov
inc
add
pusha
add
fcmovbe
inc
add
loope
mov
add
ja
add
fisttpll
add
popf
push
mov
ljmp
repnz
movl
fwait
pushf
seto
inc
add
enter
mov
movb
dec
mov
sbb
ja
inc
add
mov
xor
lcall
or
dec
mov
add
mov
add
call
cmp
cmp
add
cmpsb
add
cwtl
outsl
push
or
incl
ds
add
ja
add
fistpl
cmp
mov
add
push
add
ret
add
call
pushl
xchg
push
in
sub
push
inc
add
loopne
repz
mov
add
ret
cld
jnp
and
lods
and
jl
imul
add
pop
add
pushl
aam
cmpsb
add
pop
sub
jle
add
jecxz
push
add
sahf
int
lret
add
por
add
decl
aaa
mov
or
imul
add
fdivl
add
ret
add
xchg
jp
push
add
mov
cmp
out
jle
dec
push
add
loop
or
add
int
mov
in
cmp
movb
xor
add
out
cmpsl
add
addl
movl
rolb
dec
cli
sbb
pushl
fsub
add
add
mov
sub
dec
mov
addl
movl
add
daa
add
add
cmc
aas
aad
faddl
add
jecxz
or
icebp
mov
add
xor
roll
test
rcrl
add
cmc
jne
or
push
add
adc
popa
add
bound
jmp
push
jno
incl
stc
dec
fwait
push
push
adc
incl
rcr
clc
jmp
fmull
add
cli
sub
adc
incl
dec
mov
iret
cld
aaa
jg
add
add
jne
add
add
int
mov
lds
sub
js
mov
dec
dec
popf
je
imul
add
pop
aad
std
clc
ljmp
icebp
sbb
cltd
fwait
pusha
add
lret
aaa
adc
add
pop
out
add
fcoml
js
ja
mov
add
and
push
rcr
sbb
cmc
shr
addl
jns
add
inc
add
push
fnstenv
in
punpcklwd
jmp
cmp
inc
add
in
push
add
cmp
ljmp
add
dec
lret
or
cmp
out
repnz
pop
add
add
ficoml
decl
lea
call
add
daa
add
add
cmp
decl
mov
test
add
incl
add
mov
jnp
lods
call
sub
and
mov
fildl
mov
push
add
dec
mov
test
fsubs
jmp
call
jnp
rcrl
out
pop
fists
jae
jmp
dec
movb
add
lods
mov
and
incl
mov
add
in
xchg
xchg
and
xchg
or
add
xchg
mov
add
add
aas
cmc
mov
add
adc
ljmp
xchg
js
dec
jmp
jns
xchg
add
xor
dec
push
mov
or
add
aam
test
popa
add
stc
out
fadds
add
inc
add
add
add
jecxz
sbb
add
add
clc
lret
jecxz
push
xor
clc
pop
pop
ret
js
add
mov
jbe
sub
add
add
in
rcrb
addl
sahf
in
addl
add
push
add
mov
decl
decl
dec
sub
add
sbb
add
cmp
add
jns
add
cli
addb
push
stos
ljmp
add
dec
incl
sahf
js
add
repz
fildl
decl
nop
loope
popa
add
inc
add
push
push
add
jg
rolb
add
add
and
pushl
add
inc
add
movl
add
sti
enter
js
jbe
add
add
mov
cmp
add
add
js
add
add
add
aaa
push
add
mov
add
mov
cld
mov
fisttps
test
ror
pop
lods
sub
movl
push
add
add
push
add
cld
inc
add
sbb
jp
mov
mov
jp
add
fmuls
fsubl
add
clc
jle
addl
add
icebp
out
into
movb
xor
jge
add
addl
add
dec
rolb
les
push
add
ret
push
inc
add
in
leave
imul
cmp
cmp
aaa
inc
add
popa
add
jecxz
loop
imul
cmc
add
call
add
in
push
jmp
add
jns
add
inc
add
mov
mov
je
loopne
push
add
push
add
inc
add
jge
pop
stos
out
xchg
jg
add
std
repz
cmp
addl
add
or
add
cli
dec
insb
inc
add
and
jmp
incl
inc
add
add
xchg
insl
pop
rolb
dec
sub
dec
mov
adc
jmp
add
rorl
xchg
les
test
mov
inc
add
jle
into
mov
add
sub
push
add
mov
repnz
roll
stos
add
mov
sbb
sub
adc
add
jnp
mov
movl
xor
push
xchg
or
gs
fmulp
add
jns
and
insb
inc
add
repz
mov
add
stos
and
add
lcall
add
lahf
bound
dec
inc
add
decl
insb
mov
add
jp
jle
add
cmp
add
leave
cmpsl
add
and
sarl
fisubs
lahf
push
sub
add
int
stos
push
sub
pusha
add
scas
lock
pushl
ljmp
add
add
cmp
sbb
loopne
int3
leave
arpl
lcall
fldt
cmp
add
in
out
imul
jo
decl
loope
rorb
mov
jle
dec
aad
mov
sbb
jo
push
jb
ljmp
das
push
add
stc
xor
incl
add
rolb
add
xlat
inc
add
mov
jmp
hlt
cmp
mov
xchg
js
rcrl
js
or
mov
jo
ds
add
in
icebp
lods
inc
add
roll
mov
sbb
add
aas
lds
cmp
dec
jne
add
sub
or
push
add
sar
cmpsl
add
cmp
call
push
add
incl
aam
test
xlat
in
jl
fsubrl
add
add
pop
add
add
icebp
xchg
das
jbe
clc
xchg
and
fstps
adc
fistpl
out
imul
pushl
dec
dec
add
incl
add
js
inc
add
sbb
sbb
loop
inc
add
and
cld
dec
inc
add
push
pop
in
jno
call
popf
fidivs
jmp
data16
mov
pop
movsl
add
add
rcr
xchg
push
shl
add
inc
add
mov
add
div
and
add
inc
add
imul
dec
mov
jg
movsb
add
add
xchg
lock
add
xor
add
push
into
xor
aas
mov
add
dec
js
add
cmp
add
out
in
pop
add
add
and
jmp
std
in
ret
mov
pop
add
jnp
add
adc
fcoml
add
stos
leave
je
xor
call
adc
sbb
mov
xor
add
sahf
popa
add
xchg
inc
add
add
lret
call
mov
repnz
inc
add
out
mov
add
roll
xor
decl
mov
add
ljmp
das
and
jmp
add
jae
jmp
add
mov
add
mov
add
add
pop
or
jg
sbb
popf
inc
add
cmc
sarb
add
dec
cmp
add
sbb
js
out
mov
leave
pop
jg
add
fistl
mov
movsl
add
add
out
nop
in
sahf
add
call
jno
lcall
jnp
add
mov
roll
decl
daa
add
inc
add
dec
mov
add
outsl
dec
mov
add
dec
cmp
popa
add
lea
sbb
decl
adc
pushl
shrb
or
iret
lock
cs
cmc
rolb
add
bnd
add
add
ljmp
hlt
or
mov
data16
cmp
popl
and
lcall
dec
sbb
add
test
xchg
test
xor
incl
loopne
cmp
sbb
add
scas
add
dec
push
icebp
mov
pop
xor
inc
add
cmp
add
push
leave
mov
cmc
jl
adc
call
fwait
xor
cmp
decl
repnz
jns
gs
add
push
add
jecxz
rolb
dec
stos
ret
add
mov
mov
mov
push
add
mov
cmp
stos
add
cld
xor
jbe
cmpsb
add
stc
cmp
jge
add
and
lcall
add
addb
aas
ljmp
and
inc
add
xchg
jmp
add
inc
add
dec
cmp
add
sbb
add
pushl
addb
adc
incl
add
jge
or
addr16
add
sub
add
add
dec
in
int3
ror
cmp
add
movsb
add
addb
mov
add
flds
add
fdivs
lods
movsb
add
add
mov
outsl
jg
pop
int
test
pop
dec
mov
add
mov
lcall
jge
lret
xchg
cmp
out
testl
js
dec
mov
dec
aad
addl
push
pop
dec
je
jns
add
sbb
movsl
add
roll
hlt
inc
add
mov
add
push
add
out
fistpl
add
incl
add
sbb
add
push
frstor
add
inc
add
add
dec
fimuls
adc
sbb
pop
stos
popf
addl
add
add
aas
ljmp
fcmovne
sbb
jmp
inc
add
aaa
mov
data16
into
daa
add
mov
inc
add
lcall
dec
ja
add
movl
scas
mov
imul
add
add
dec
sub
add
jecxz
cmp
inc
add
stc
cli
sub
add
add
lock
xor
dec
mov
cs
mov
out
and
incl
add
add
add
add
cmp
add
jg
mov
add
mov
sbb
test
push
add
jge
add
push
fiaddl
mov
add
call
arpl
decl
out
add
fiadds
push
add
call
mov
push
dec
xor
add
rolb
add
imul
add
lcall
lods
xchg
sub
out
mov
in
fisubs
add
lods
psubusb
iret
sub
pop
inc
add
add
loope
lcall
cmpsl
add
stos
cmc
insl
and
push
add
add
sbb
push
lds
push
in
xor
call
aam
or
dec
xor
fiadds
push
add
mov
xchg
cmc
sub
das
add
add
and
pushl
add
dec
mov
sbb
fwait
push
inc
add
lods
lods
cmpsl
add
out
int
mov
fisubrs
mov
add
je
cmp
cmc
push
xor
pushl
cs
outsl
das
stos
pop
jo
incl
add
enter
jnp
cmpsl
add
bnd
in
sbb
add
lahf
test
push
icebp
shr
filds
decl
add
push
mov
ljmp
xor
scas
test
lahf
add
add
add
sbb
xchg
roll
add
add
add
sbb
inc
add
mov
sub
add
jno
stc
and
or
pushl
add
ljmp
add
pop
pop
fcomp
cmp
ljmp
adc
mov
je
add
decl
jle
add
jo
decl
inc
add
mov
add
popa
add
test
add
repz
rolb
or
inc
add
fisttps
add
dec
pop
jbe
add
setnp
dec
push
addb
pop
add
cmp
push
add
add
push
and
decl
add
stos
cmc
mov
ljmp
stos
repz
add
push
sbb
and
pop
pop
insl
in
mov
pushl
scas
fstps
inc
add
fs
mov
dec
xor
decl
shll
int3
aam
loope
daa
add
add
in
loope
xchg
dec
push
in
push
mov
pusha
add
pop
pop
in
xchg
fsubrs
cmp
sub
add
inc
add
sub
sub
add
cltd
aam
add
add
mov
sub
push
jl
popf
je
add
mov
les
bound
inc
add
add
add
out
jno
ljmp
add
cmp
sub
movb
add
ljmp
mov
add
add
dec
and
ljmp
stc
adc
dec
addb
dec
gs
int
add
test
mov
jns
imull
add
lcall
cmp
add
add
enter
cmc
mov
mov
cltd
in
stc
and
cld
push
jmp
jmp
add
inc
add
dec
into
push
add
mov
out
dec
pop
xlat
divb
add
xchg
ret
add
arpl
fisubrs
lds
iret
mov
inc
add
jmp
fsubrs
sbb
push
add
addb
jmp
xor
jmp
add
or
jnp
or
add
mov
and
pop
mov
xor
decl
scas
int3
ss
add
add
aam
add
ljmp
add
push
add
les
xchg
sti
push
test
jle,pt
add
push
jno
ljmp
sub
test
pop
stos
je
add
inc
add
push
inc
add
add
or
ljmp
add
pop
and
jmp
push
jg
jne
and
mov
ds
add
roll
or
push
add
shl
add
data16
cmpsl
add
and
dec
rolb
jge
pop
jo
incl
add
xlat
sub
clc
fdivrl
xchg
xchg
icebp
ret
add
sub
add
fwait
rolb
add
js
add
xchg
and
decl
jl
mov
or
add
add
insb
movb
sub
aad
push
push
addl
sarl
addl
mov
add
cwtl
data16
aam
bound
call
add
push
add
aad
test
add
mov
movsl
add
pop
mov
add
add
push
push
mov
sbb
incl
xchg
icebp
jne
pusha
add
mov
arpl
decl
je
add
cli
mov
mov
xor
incl
rolb
adc
decl
sub
add
out
idivb
out
pop
fistps
add
add
lds
jns
add
add
add
addl
lds
add
add
arpl
incl
test
fstpt
jae
pushl
add
mov
xor
inc
add
insb
or
add
and
pushl
movl
mov
cmp
decl
cmp
ljmp
addb
stos
add
outsl
push
mov
nop
jne
add
mov
push
mov
enter
add
outsl
iret
testl
inc
add
lods
add
lcall
add
mov
add
pop
pop
fdivr
or
add
add
add
add
aas
cmp
out
cwtl
ss
iret
adc
ljmp
xchg
xchg
js
add
add
and
loopne
fnstsw
scas
mov
out
dec
ret
add
xchg
mov
add
fmul
lret
in
inc
add
mov
sub
dec
pop
xlat
xor
mov
mov
inc
add
pop
add
in
rolb
push
add
adc
and
lcall
inc
add
ret
dec
pushf
mov
nop
aas
jp
jno
lcall
add
add
add
mov
pop
ret
add
add
cmp
add
add
xchg
popf
xor
pushl
add
or
mov
push
xchg
mov
add
pop
push
add
loope
jno
mov
sbb
mov
jo
inc
add
call
incl
add
insl
mov
call
repz
rcr
movsl
add
dec
fstl
out
fldl
stc
mov
jns
add
aaa
mov
clc
jo
cld
xchg
int3
ja
imul
in
lds
out
les
cmp
pop
or
fidivrs
ret
add
xchg
aaa
shl
lcall
add
add
in
and
lcall
lea
pushf
in
push
incl
xor
ljmp
iret
cwtl
lds
xchg
and
incb
xchg
int
iret
scas
mov
sahf
pop
pop
in
pop
cwtl
cmp
pop
cs
jmp
add
int3
mov
jge
add
add
sub
mov
xchg
pop
out
push
add
adc
dec
dec
push
add
movzbl
call
adc
jl
bound
incl
add
add
icebp
rolb
add
sub
cmpsb
add
add
arpl
ljmp
add
imul
pop
in
and
fiaddl
repnz
add
add
mov
sub
mov
daa
add
jbe
mov
out
data16
dec
aas
addl
add
roll
or
scas
pop
add
sahf
hlt
or
add
movl
mov
fisubrs
aam
out
outsl
sti
aad
and
psubq
test
lea
lea
ljmp
and
pushl
sahf
mov
lods
sbb
std
cmpsb
add
mov
jns
add
aad
data16
add
mov
xchg
loopne
mov
addl
bound
ljmp
add
pushl
clc
loope
scas
ficompl
dec
std
jmp
add
jecxz
rolb
repz
adc
call
add
inc
add
push
xchg
clc
sub
jmp
mov
dec
ret
pusha
add
and
pushl
ret
add
add
xchg
in
jp
add
xchg
push
pushl
sahf
sti
inc
add
ret
sbb
pop
loopne
lds
cltd
mov
or
mov
push
add
push
add
jmp
fildll
add
scas
add
cmp
mov
cli
out
mov
std
or
mov
and
jmp
add
or
add
icebp
jp
aad
xor
or
add
lret
movsl
add
fidivrs
sub
add
arpl
pushl
rcrl
add
sbb
and
cld
xchg
movl
outsl
xchg
mov
cmp
sbb
add
or
xchg
jl
mov
add
pause
jne
mov
mov
ds
cmc
mov
add
popf
mov
add
pushl
movl
add
cmp
add
add
hlt
loope
mov
jmp
add
aam
jge
add
add
add
ljmp
in
mov
imul
add
add
add
dec
pop
add
add
pop
add
add
imul
adc
add
add
push
xchg
mov
mov
fwait
dec
sub
add
rcrl
cli
push
sbb
pop
mov
inc
add
data16
int3
leave
mov
jno
decl
pop
inc
add
sbb
add
jns
add
pushl
jmp
ret
add
adc
jmp
add
add
add
cltd
into
ror
pusha
add
sbb
inc
add
xchg
sub
add
cwtl
adc
call
ret
mov
mov
add
ret
add
add
add
leave
xchg
jo
inc
add
add
dec
mov
push
divl
call
in
jge
add
add
dec
bound
decl
adc
decl
jnp
add
push
add
adc
mov
push
add
sub
add
pop
cmp
or
push
pop
xchg
sub
add
add
xchg
or
in
rolb
add
inc
add
decl
data16
insb
sub
fisubs
add
or
aad
pop
jne
sbb
ficoms
call
sbb
add
lea
add
pushf
jmp
loope
mov
add
stos
xor
add
mov
inc
add
sti
xor
jecxz
jp
add
jns
jb
jmp
add
mov
xor
ljmp
xchg
insl
push
add
int3
add
add
addl
test
mov
adc
decl
addl
pop
add
ljmp
movsb
add
add
lcall
dec
les
ljmp
add
pop
pop
inc
add
mov
add
add
test
mulb
push
add
mov
inc
add
cltd
imul
pop
push
add
cmpsb
add
mov
mov
add
mov
test
lcall
add
test
add
data16
add
cmpsl
add
jp
outsl
pop
or
or
add
add
rcr
rclb
add
cmpsl
add
add
loopne
xchg
roll
add
pushl
pushf
and
testl
add
into
inc
add
jmp
into
mov
add
push
add
dec
addl
test
add
fistps
sbb
and
jmp
add
int
add
sbb
mov
add
dec
clc
jo
cmp
call
leave
push
add
imul
ret
add
mov
add
push
lea
mov
add
shrl
add
shll
sahf
loopne
into
jecxz
dec
jmp
dec
repnz
pop
in
fldenv
call
add
mov
daa
add
pushf
fsubrp
hlt
lods
sti
ljmp
push
lret
mov
add
add
push
sbb
inc
add
push
mov
add
xchg
cmp
add
movb
je
mov
xchg
jg
add
add
add
decl
lea
call
add
lret
jle
xor
call
es
addb
mov
test
negl
nop
into
sub
inc
add
sbb
lret
adc
js
add
in
adc
mov
jb
decl
add
xchg
cmpsl
add
jns
cli
jg
sahf
test
cli
sub
and
out
sbb
add
add
rcl
xchg
inc
add
lea
data16
leave
pop
addl
aam
add
sbb
ret
add
xchg
adc
jl
add
or
popf
lahf
sbb
addl
ljmp
scas
inc
add
popa
add
xlat
inc
add
jns
pop
stos
pop
mov
sub
jmp
add
sahf
xchg
mov
jns
out
mov
add
mov
test
pushf
in
inc
add
add
cmp
add
and
ficompl
fisubrl
pop
add
add
mov
jg
mov
lods
mov
jo
inc
add
add
inc
add
js
add
dec
mov
cmpsl
add
je
cwtl
jbe
add
inc
add
push
jmp
adc
mov
addl
xor
mov
jo
jmp
add
jbe
push
pop
imul
jmp
add
inc
add
mov
cmpsb
add
add
push
dec
out
lods
cmp
mov
sub
add
add
call
add
lcall
movb
outsb
xchg
or
mov
adc
inc
add
push
xchg
cwtl
mov
sbb
mov
pop
mov
call
test
ljmp
stos
mov
add
add
fisubl
add
mov
setns
jmp
arpl
lcall
shll
call
add
hlt
xchg
mov
xor
ljmp
add
in
shrl
jae
mov
fidivrl
add
lcall
jmp
add
inc
add
mov
and
pushl
add
cmpsb
add
add
out
push
push
inc
add
and
das
test
add
add
in
lods
aad
xor
add
mov
mov
add
test
add
jne
xchg
stos
xor
incl
add
movsb
add
jo
call
add
add
addb
adc
add
or
std
jbe
inc
add
sbb
add
add
sub
incl
scas
js
fadds
add
mov
add
pop
pop
mov
add
decl
push
adc
clc
hlt
lea
lea
add
fistpl
pop
push
add
pop
jo
ljmp
add
pop
xchg
push
clc
int3
ss
add
mov
adc
push
add
arpl
cmp
test
lret
cmc
xchg
push
test
int3
jmp
push
push
mov
jnp
cwtl
out
push
add
mov
add
mov
outsl
mov
rorl
add
sub
add
jbe
add
mov
mov
sarl
lds
mov
lea
repnz
ljmp
or
add
ljmp
pop
add
add
mov
add
xor
add
inc
add
sub
adc
out
outsl
jp
inc
add
add
xchg
arpl
call
xchg
or
cmc
mov
repnz
roll
add
mov
add
add
addl
mov
add
xchg
jle
add
sbb
inc
add
lods
adc
add
imul
mov
movb
add
cld
jg
dec
in
sbb
add
sahf
or
cltd
cmp
jmp
in
cli
jo
decl
sbb
add
xor
add
jo
pushl
add
js
add
xor
cmp
addl
data16
add
mov
pushl
add
and
push
ret
add
incl
jmp
mov
fxtract
jmp
inc
add
fistpll
mov
out
insb
pushf
jmp
lock
and
lcall
push
or
in
xor
in
movsb
add
add
repnz
aam
add
insb
cmp
add
sub
add
jp
add
aam
adc
lcall
add
push
aam
sub
add
xchg
fsubr
or
mov
cmp
lret
ljmp
sub
inc
add
or
add
iret
lds
jne
mov
call
cmc
mov
push
out
and
cmp
inc
add
or
xchg
xchg
push
add
pushf
or
negl
mov
scas
adc
incl
pop
add
les
sbb
mov
inc
add
push
add
in
call
ljmp
cmp
add
add
jp
lahf
sbb
fneni(8087
add
add
add
fiaddl
xchg
mov
inc
add
roll
sbb
jo
jmp
add
add
roll
add
add
cmp
int3
xor
ljmp
call
and
call
cmp
add
add
jb
decl
aam
push
ret
add
xchg
and
add
push
or
xchg
inc
add
call
ljmp
xor
ljmp
arpl
jmp
add
cltd
sbb
add
addb
mov
xchg
mov
iret
lods
addb
add
jmp
es
mov
jmp
add
adc
call
lcall
loop
push
add
lods
inc
add
add
dec
mov
stc
jnp
xor
sub
lcall
add
fidivl
jp
aaa
stos
mov
imul
movl
add
sub
add
shlb
cmpsb
add
out
lcall
sub
jmp
ljmp
and
push
push
add
mov
add
mov
adc
jl
pop
mov
jl
add
add
add
loopne
ret
add
jg
add
jp
les
enter
jmp
jmp
lcall
insl
aad
add
add
ret
inc
add
jbe
jl
add
add
xor
call
insb
xor
call
add
cmp
stos
dec
fwait
and
flds
add
dec
adc
pushl
add
mov
add
cmp
add
mov
pop
sbb
pop
out
and
incl
add
popf
push
loopne,pt
inc
add
add
js
test
mov
add
add
lds
addl
add
xor
dec
test
addl
mov
fcomi
xchg
loopne
xchg
dec
dec
push
xor
dec
in
sti
clc
pop
movl
sbb
mov
call
incl
xchg
loope
jae
decl
inc
add
ja
std
shrb
and
int3
js
add
sub
cmc
xor
push
iret
test
add
add
xchg
or
add
mov
add
add
imul
add
cmpsl
add
add
rolb
add
movsb
add
add
xor
decl
xchg
jb
incl
jmp
aad
add
push
add
add
das
xchg
xchg
movsl
add
mov
adc
push
insl
xchg
mov
lcall
dec
xor
push
or
add
outsb
inc
add
add
jmp
adc
lcall
jg
xchg
insb
sub
ljmp
xchg
and
decl
repnz
lds
sub
dec
and
loope
mov
dec
push
add
add
ljmp
pop
add
add
pop
mov
leave
adc
add
jmp
add
and
pushl
decl
jecxz
lds
and
fcmove
js
inc
add
aad
and
dec
movb
std
mov
pmulhuw
outsb
or
std
mov
inc
add
mov
pop
ja
add
int3
xchg
pop
or
xchg
test
lock
add
xor
pushl
push
das
cmp
fbstp
insl
and
ljmp
xor
call
push
add
addr16
or
xlat
push
ret
add
add
add
pop
mov
pop
or
adc
inc
add
fsubl
lcall
sub
mov
leave
pop
mov
and
jmp
cld
pop
call
pop
lret
xchg
loop
push
mov
fsubr
mov
inc
add
addl
insl
xor
call
add
sub
lcall
addb
in
enter
mov
add
cli
mov
add
sbb
add
cmp
add
or
loope
ret
add
add
add
add
add
inc
add
cmpsl
add
cmp
in
bound
cmp
ret
push
add
loope
and
lcall
xor
decl
mov
add
dec
sbb
add
jmp
cmp
aad
pop
clc
mov
lret
outsl
fimuls
mov
lahf
add
clc
mov
add
and
lcall
push
mov
add
mov
inc
add
call
ljmp
sub
jo
inc
add
jmp
add
cmp
jge
jl
add
stc
jne
int3
or
repz
std
add
decl
push
adc
xchg
add
add
pop
cmpsl
add
pop
mov
add
pop
cld
pop
sbb
jecxz
xor
addb
mov
add
add
incl
or
add
int3
cli
mov
filds
sub
add
in
and
decl
sbb
add
xor
add
xor
jmp
add
fisubrs
dec
push
jle
into
adc
push
jno
jmp
decl
cmp
pushl
pushl
add
idivl
jecxz
stos
dec
jecxz
mov
dec
cmp
in
push
add
or
int
cwtl
fidivs
mov
add
mov
hlt
sbb
xchg
stos
addb
bound
call
push
add
fcomi
bound
jle
push
adc
add
outsl
dec
out
shll
inc
add
add
pop
add
ret
add
pop
punpckhdq
fstps
add
push
sub
add
lock
aas
jmp
mov
insl
dec
mov
push
addl
jge
add
add
jo
ljmp
add
mov
dec
ja
cmc
inc
add
pop
pop
mov
movsl
add
add
iret
out
rclb
incl
insb
push
add
rolb
into
cmp
xchg
aas
jle
adc
call
call
sub
add
add
add
lcall
add
add
lcall
adc
call
add
movb
jbe
add
mov
loop
cmpsl
add
call
mov
imul
add
add
pusha
add
push
add
pop
scas
shrb
add
push
jbe
mov
cmp
add
xchg
int
jae
push
cs
jnp
add
pusha
add
xor
incl
add
insb
in
stos
add
xor
jle
scas
and
mov
fdivrs
pop
pop
add
add
fs
add
add
inc
add
jg
pop
insl
sub
add
fcmovnb
add
lcall
adc
bound
ffree
add
adc
pushl
add
xor
jmp
imul
cld
jo
jmp
call
das
inc
add
push
data16
add
std
adc
jmp
ds
jg
call
jge
arpl
push
int3
jb
pushl
add
das
ja
add
dec
fcomip
xchg
in
aas
int
add
cmp
scas
sub
sbb
add
sub
dec
loope
fwait
add
call
add
test
xor
pushl
call
add
add
jo
call
addb
add
mulb
push
sarl
sbb
push
addb
xchg
sbb
pop
push
xor
add
stc
pop
add
inc
add
add
mov
cmpsl
add
add
movb
div
out
mov
add
cli
popa
add
roll
or
add
add
xchg
xor
ret
add
out
rolb
add
inc
add
dec
jno
fnstenv
decl
into
add
call
fistpl
mov
add
clc
call
and
ljmp
jp
and
jmp
add
add
sbb
lcall
lods
cmc
xchg
xor
mov
jp
add
lcall
mov
fadd
add
add
fcoml
add
cmp
inc
add
je
push
sbb
add
lock
cmc
xchg
cwtl
pop
jge
inc
add
mov
mov
scas
inc
add
add
fidivs
add
incl
sub
or
add
and
add
movhps
out
roll
add
add
test
add
jge
add
mov
add
xor
inc
add
loop
pop
inc
add
popf
idivl
inc
add
mov
icebp
into
jl
fldcw
int
add
adc
pushl
add
out
lds
sub
enter
add
out
mov
iret
outsb
mul
add
xchg
stos
movsb
add
add
jbe
lock
pop
jmp
cmp
pop
movsb
add
cmp
push
add
cld
or
shll
jmp
add
stos
mov
lret
xchg
jns
add
fnstcw
push
movl
rorb
add
dec
aad
add
std
lahf
rolb
mov
jae
call
inc
add
push
mov
hlt
mov
add
cmp
push
add
jge
mov
pusha
add
cs
mov
stc
xor
call
add
pushf
sbb
cmc
or
add
out
addb
movl
add
add
loop
movb
stos
xlat
xchg
adc
incl
into
divb
xchg
sbb
adc
jmp
pop
xor
call
ljmp
and
jo
call
mov
dec
ret
add
cli
cs
add
mov
imul
daa
add
iret
into
sbb
lahf
cld
sbb
inc
add
sub
add
add
jnp
xor
ljmp
add
jecxz
and
call
out
cmp
lcall
inc
add
and
dec
dec
lret
add
aad
adc
push
scas
or
add
inc
add
cli
xor
decl
or
lcall
add
lds
fistl
add
xchg
into
pop
inc
add
add
call
push
testl
xlat
fwait
inc
add
lds
xchg
sub
add
xor
test
or
aaa
xchg
push
mov
inc
add
add
inc
add
xchg
add
fldcw
cmp
cltd
or
repnz
push
add
sbb
add
and
jmp
add
jne
pop
mov
les
sbb
push
add
dec
adc
incl
lcall
push
xor
lret
add
lock
jmp
add
and
add
xchg
sbb
add
mov
add
add
add
pushf
scas
sti
divl
das
insb
xor
lcall
and
push
add
mov
lds
movl
push
inc
add
addl
add
out
outsl
adc
push
adc
jmp
add
pop
xchg
jmp
loop
xchg
ret
add
pushl
or
sbb
add
ja
add
mov
add
addl
icebp
jl
stos
inc
add
mov
addb
add
add
sbb
add
cs
cmpsb
add
add
or
flds
add
add
push
add
add
pop
ja
adc
ljmp
fidivs
add
xor
mov
jle
add
add
ds
sub
fwait
mov
fstpl
add
add
adc
call
ljmp
lahf
loopne
add
add
sete
movsb
add
daa
add
decl
test
ss
in
arpl
lcall
pop
stos
xchg
je
jae
lcall
aam
movsb
add
add
into
mov
add
and
or
hlt
enter
pop
ljmp
filds
cmpsl
add
pop
cmc
dec
xor
decl
int
std
cmc
sub
scas
les
cmp
add
adc
and
sahf
out
outsb
addb
dec
and
add
add
inc
add
incl
inc
add
clc
jge
sub
js
lret
add
add
add
loopne
pusha
add
cltd
lret
out
jb
call
and
add
ljmp
mov
add
cld
shlb
adc
jmp
xor
incl
add
jmp
add
mov
add
popa
add
out
out
mov
stc
cs
jbe
addl
add
leave
push
sbb
mov
inc
add
jg
add
ja
int3
mov
int
in
fs
add
incl
add
dec
out
in
mov
add
add
addb
push
add
mov
mov
add
xchg
jne
add
scas
in
in
xchg
imul
pop
jp
fsubs
add
add
add
nop
ret
mov
add
pop
dec
inc
add
mov
add
ds
jg
popa
add
xor
fidivl
pop
add
lea
and
pushl
js
clc
fldt
mov
add
and
cmp
pushl
jp
insb
adc
jmp
jnp
outsb
bound
mov
add
fisubs
add
mov
aam
add
call
xchg
mov
stos
jns
fcmovnbe
int3
ss
xlat
sbb
mov
cli
addl
push
add
call
xor
call
xchg
dec
int3
add
jmp
add
add
jmp
decl
add
add
add
add
idivl
adc
pushl
push
pop
add
and
cmp
mov
add
add
jns
add
repz
push
add
in
nop
aam
hlt
je
add
fdivr
sub
stos
jbe
pusha
add
pop
les
and
add
lcall
add
pop
std
enter
jg
inc
add
js
loop
aam
push
in
hlt
in
iret
int3
loopne
xor
jge
add
jle
pop
mov
test
adc
xchg
arpl
pushl
jmp
sbb
add
push
or
pop
rolb
add
sbb
fsubs
incl
call
out
inc
add
adc
incl
scas
xchg
add
adc
ljmp
mov
mov
dec
in
lahf
stc
addb
stc
xchg
movsb
add
cli
stos
add
fldl
ljmp
mov
push
add
xchg
cltd
mov
pushf
int3
lods
lds
push
mov
add
add
add
push
add
je
mov
sub
scas
hlt
lret
das
sbb
add
daa
add
xchg
sahf
sbb
add
ret
stc
xlat
adc
inc
add
sbb
in
mov
in
dec
push
jl
aad
add
mov
pop
stos
xchg
or
add
arpl
jp
ret
add
inc
add
insl
inc
add
push
movb
hlt
stos
push
movsl
add
pop
add
jecxz
push
pop
add
add
inc
add
sub
loope
les
sub
and
inc
add
add
dec
lgs
add
push
xchg
xor
pushl
add
hlt
imul
jnp
add
inc
add
jbe
add
add
call
scas
je
xor
in
dec
add
jmp
or
add
add
add
in
nop
dec
xor
mov
inc
add
fdivs
call
rorb
add
push
mov
cmp
call
leave
xor
dec
fwait
int
repnz
inc
add
sbb
add
decl
test
xor
jmp
lcall
aas
push
cwtl
jno
mov
out
in
mov
and
popf
notb
add
jo
mov
loop
pop
mov
jge
dec
faddp
add
push
add
popa
add
push
xchg
test
xor
pushl
push
aas
xor
fistps
inc
add
mov
cmp
add
mov
cmpsb
add
add
mov
jnp
add
ss
pushl
out
mov
data16
add
invd
adc
add
inc
add
hlt
test
out
dec
iret
test
xor
mov
mov
sti
jne
add
ss
and
call
add
aas
movb
jmp
out
les
mov
add
lods
ret
add
dec
iret
sub
add
add
xchg
insl
in
sub
cli
fimull
dec
xlat
movsb
add
add
mov
adc
lcall
jnp
lahf
cmp
insb
insb
sub
push
and
call
add
sub
inc
add
add
inc
add
jae
jmp
add
dec
shrl
and
sub
call
gs
jo
mov
in
dec
scas
and
inc
add
adc
int
add
add
dec
aad
add
out
rolb
movsl
add
jmp
xor
cld
inc
add
js
leave
les
sbb
addl
lds
jnp
add
pop
lods
or
xor
fsubs
add
das
movsbl
inc
add
aaa
fistl
cltd
out
cmp
mov
lcall
add
loopne
out
das
shrb
loope
dec
and
incb
and
mov
add
add
add
pushl
shrb
repnz
jbe
add
dec
jmp
cmc
push
add
pop
call
add
ljmp
mov
add
sbb
xor
out
push
insl
pushl
add
cmp
into
sahf
movsl
add
adc
pushl
lcall
out
clc
push
add
ljmp
ljmp
add
add
dec
sub
or
add
in
popa
add
stos
mov
cmc
xor
pushl
add
dec
lds
mov
add
add
incl
add
loope
loopne
pop
adc
dec
aaa
xchg
and
add
lret
les
mov
test
jmp
inc
add
push
repnz
mov
xor
add
lret
sbb
add
aaa
sub
mov
dec
call
add
mov
jecxz
js
add
lcall
imul
inc
add
addl
outsb
and
jmp
add
fcoml
ljmp
call
xchg
push
add
jo
jmp
add
add
or
push
out
pop
roll
jo
jmp
sub
jge
movb
inc
add
sbb
xor
lcall
inc
add
out
adc
test
mov
add
lock
add
cmpsb
add
imul
call
addb
iret
and
pushl
add
lcall
fsubs
xchg
sub
add
mov
mov
add
mov
add
fiaddl
movb
push
sbb
inc
add
add
xchg
inc
add
add
dec
hlt
addl
add
dec
test
mov
xchg
ds
mov
add
inc
add
imul
sub
imul
add
je
aam
mov
sbb
ss
add
aad
sbb
mov
jp
rcrb
insl
outsb
rcrl
add
jge
add
adc
jmp
loopne
mov
add
roll
insl
fsubl
incl
jl
les
sbb
jbe
dec
cmpsl
add
add
movsb
add
add
fcmovu
adc
incl
add
adc
decl
dec
iret
add
jmp
dec
mov
test
mov
and
incl
add
cmp
cli
add
decl
add
or
xchg
xchg
pop
xchg
pop
add
mov
or
mov
mov
add
add
dec
xchg
add
pushl
aaa
dec
and
add
addr16
push
add
mov
add
add
pop
dec
xchg
jbe
arpl
in
add
scas
xchg
and
jmp
pop
mov
outsl
nop
push
ficoms
inc
add
inc
add
push
repnz
add
mov
popf
imul
pop
jge
sbb
add
in
enter
add
add
fucom
add
add
addb
int
add
ds
add
dec
movl
decl
add
adc
add
dec
cmp
js,pn
add
mov
mov
lds
xor
ljmp
test
mov
shlb
decl
lea
sub
cmp
lods
out
sub
lea
ljmp
outsl
mov
add
inc
add
push
add
jmp
ffree
add
sub
add
pop
adc
jmp
jmp
incl
sbb
add
cs
loop
jle
mov
sub
add
add
add
sbb
popa
add
lahf
aam
and
incl
call
loope
daa
add
add
icebp
adc
ljmp
jo
call
xchg
or
add
pop
aad
aaa
aam
fwait
dec
add
call
add
ret
add
jne
add
add
rolb
in
cmpsl
add
pop
add
jecxz
sbb
add
ss
out
iret
jae
lcall
add
jmp
add
jo
ljmp
fsubrp
cmp
add
dec
fidivs
add
fbstp
add
jb
jnp
add
pop
add
lcall
pop
inc
add
cs
jg
add
int3
aaa
lock
movsl
add
push
add
aam
add
jecxz
insb
cmp
sub
incl
add
or
call
add
shlb
add
hlt
xchg
jae
call
cmc
rolb
add
add
add
inc
add
fmull
add
shll
mov
add
cmpsl
add
cwtl
mov
icebp
mov
add
loope
sub
daa
add
add
cmp
add
add
fwait
stos
sbb
add
add
lahf
addl
xacquire
adc
jmp
push
not
cld
js
jmp
lcall
ja
add
add
inc
add
sub
cmpsb
add
inc
add
push
cmpsb
add
add
clc
add
call
ret
push
mov
ds
dec
sub
or
inc
add
sahf
stc
cmp
mov
push
rolb
add
add
pushf
dec
sub
or
dec
add
decl
lahf
xchg
jp
add
add
pushl
loop
jle
std
movb
add
leave
xchg
in
sbb
add
aad
add
stc
sub
cwtl
mov
add
xor
fcomi
imul
add
rorb
pop
add
pushl
arpl
call
mov
xchg
repz
ja
sahf
xchg
adc
jmp
call
pop
add
add
roll
cwtl
fsts
add
mov
dec
out
cs
aam
mov
arpl
inc
add
push
repnz
add
int
into
lock
add
jle
lahf
jne
imul
aaa
adc
pushl
lcall
jno
incl
decl
add
addl
mov
cmp
cli
xor
inc
add
add
inc
add
ret
add
add
add
dec
dec
cmp
add
jnp
add
add
sbb
lcall
add
push
add
and
jp
je
mov
cmp
add
add
mov
xchg
mov
add
out
pop
add
pop
jp
add
imul
sbb
ss
mov
repz
decl
cld
daa
add
add
jmp
shlb
xchg
inc
add
call
lret
jns
add
xchg
lds
js
shlb
scas
fcomip
xchg
xchg
mov
add
mov
and
call
add
int3
inc
add
or
add
jmp
call
inc
add
or
nop
jg
popa
add
jns
clc
gs
add
in
lods
lahf
fdivrp
cmp
add
mov
call
or
add
aas
stc
cmpsl
add
fprem
lahf
mov
fsubl
out
cltd
mov
mov
dec
cmp
sbb
mov
sub
push
arpl
call
popa
add
inc
add
add
dec
sbb
mov
hlt
jns
push
add
imul
stc
push
adc
mov
lds
sub
jbe
add
nop
or
mov
add
mov
ret
add
add
call
xchg
cmp
push
and
xor
jmp
pop
mov
and
fcompl
std
mov
add
pop
and
repz
xchg
xor
jmp
inc
add
ror
xor
lcall
negb
inc
add
xor
pop
lock
pop
pop
movsl
add
jne
mov
jb
ljmp
add
add
test
cmp
call
add
incl
mov
movhps
test
clc
xchg
and
push
xor
imul
jae
inc
add
movsl
add
or
incl
in
adc
decl
add
pop
xor
ljmp
lret
ds
xchg
stos
in
jno
lcall
and
ljmp
inc
add
mov
in
jmp
add
cmp
cvtsi2ssl
int
and
add
add
mov
incb
decl
cli
pop
mov
add
rolb
add
or
dec
and
hlt
ret
add
stc
fbld
add
mov
xchg
mov
add
cmp
ret
add
and
rcrl
inc
add
xor
incl
add
dec
outsb
xchg
loopne
outsl
fcompl
es
add
or
add
add
cmp
ljmp
sti
sarl
imul
hlt
movl
add
addl
in
movl
cmp
ja
push
add
lds
dec
pop
out
in
xchg
data16
add
and
dec
movl
divl
jnp
sub
add
push
add
and
push
add
and
push
fildll
or
mov
rolb
in
push
add
lahf
sub
add
xor
lcall
jge
add
push
popf
xor
jmp
add
xchg
lret
decl
inc
add
ljmp
add
jp
add
jecxz
movsl
add
pop
push
add
jnp
add
roll
movsl
add
adc
push
rolb
xor
ljmp
mov
add
add
add
call
stc
ja
add
push
add
sub
incl
add
scas
cmp
xor
lcall
fdivrs
aaa
push
add
ja
add
decl
xchg
add
frstor
dec
xchg
sub
pushl
pushl
dec
mov
scas
cltd
pusha
add
int
add
das
je
ljmp
add
mov
add
lods
add
mov
xor
jmp
add
add
or
add
dec
adc
ljmp
pop
sti
rorb
jmp
add
cmp
sub
jnp
mov
int
add
xor
jmp
add
jmp
ljmp
add
mov
inc
add
adc
add
mov
outsl
insb
cmc
cli
cmc
cmp
mov
mov
push
mov
push
add
dec
and
outsb
push
outsl
notl
add
out
pop
add
add
test
push
xchg
out
sahf
mov
add
xchg
adc
decl
xchg
testb
sysret
add
pushl
call
add
inc
add
cmpsb
add
mov
addb
xor
sub
push
add
in
lock
add
ljmp
out
fucom
add
pop
int
add
add
fcmovu
shrb
or
mov
ss
add
adc
cmpsl
add
add
add
add
addl
add
adc
decl
mov
aad
add
addb
add
add
das
lahf
adc
in
dec
add
lcall
jnp
push
or
and
call
or
popa
add
jg
inc
add
add
test
xor
ljmp
jbe
pushf
push
add
add
incl
inc
add
rclb
std
ds
add
pop
idivb
and
add
les
cmpsb
add
pop
cli
mov
popf
fsubl
pushl
mov
out
rolb
add
scas
mov
xchg
call
and
mov
les
add
push
sub
add
inc
add
or
add
mov
mov
into
inc
add
addl
add
or
add
add
addl
out
imul
decl
lahf
loopne
iret
mov
je
pop
jno
fcmovnbe
dec
in
xor
dec
add
add
mov
add
out
xor
jle
int3
adc
incl
bound
jmp
cmc
addb
add
sbb
add
add
mov
sbb
and
lcall
mov
push
dec
jb
call
dec
imul
jmp
add
pop
sub
jae,pt
cld
sub
jmp
mov
jne
ficoms
push
stos
xchg
addb
pop
sub
add
test
adc
add
popa
add
pop
jle
stos
jg
loop
inc
add
add
ret
cli
pop
fisubrl
add
and
call
addb
add
outsl
xor
incl
add
and
mov
sub
xchg
cmc
in
add
incl
mov
add
ds
lcall
ljmp
scas
pop
outsl
mov
inc
add
mov
xor
mov
clc
movb
mov
roll
lret
inc
add
xchg
in
xor
add
xor
incl
ljmp
mov
xchg
adc
call
mov
popl
jbe
add
add
or
add
add
push
add
ficompl
and
ljmp
add
daa
add
mov
addb
mov
flds
mov
fidivrl
add
stos
fistl
add
fstpt
jg
xlat
fnstenv
scas
mov
pusha
add
fdivr
adc
jmp
test
cmc
mov
inc
add
repnz
add
mov
dec
mov
xor
jmp
rcll
decl
add
add
mov
add
rorl
cmp
sub
jmp
incl
add
pusha
add
mov
add
fwait
xchg
inc
add
lcall
lret
fistl
push
and
sbb
sbb
xchg
jb
ljmp
add
and
decl
add
add
pop
xchg
push
add
xchg
lahf
jne
add
imulb
inc
add
aad
add
aad
in
xchg
enter
add
add
ljmp
les
fcomps
jmp
movsl
add
popf
lock
add
add
add
or
add
cltd
push
mov
add
add
lret
add
lock
jne
add
test
push
pop
push
lea
mov
add
or
cmpsl
add
xchg
aaa
mov
add
inc
add
cld
add
pushl
sbb
mov
add
add
pop
or
add
jmp
add
mov
daa
add
add
or
add
cmpsb
add
imul
add
leave
jecxz
bsr
adc
call
xchg
mov
jecxz,pn
add
pushl
sbb
outsl
adc
add
dec
imul
xchg
push
je
addr16
add
cmp
add
int
fwait
mov
mov
por
add
add
add
es
cmc
out
bsr
insl
pushf
incl
add
les
jge
icebp
aam
add
call
or
xor
incl
cmp
fcoml
xor
aas
pop
sahf
out
sbb
dec
pushf
mov
mov
popf
stos
lock
pusha
add
xlat
mov
add
mov
add
addl
jg
push
fidivrl
add
call
sub
add
out
mull
add
iret
mov
xchg
jo
jmp
dec
add
ljmp
jo
call
xor
decl
pop
fmuls
fldenv
int3
jmp
into
add
ljmp
cmp
cmp
mov
sbb
jmp
cltd
xchg
add
call
dec
hlt
in
insl
push
add
addb
and
mov
add
mov
add
in
pop
imul
rcrb
add
call
mov
addl
and
lcall
dec
insb
push
int
addl
lcall
lods
pop
idivb
dec
bound
pushl
jecxz
std
jne
insl
mov
add
lods
and
inc
add
call
cltd
addl
add
inc
add
add
cld
in
stc
lret
add
psllq
cs
add
pop
addb
jbe
lret
xchg
cmp
out
les
addb
cli
test
out
dec
add
jecxz
in
jno
jmp
adc
jmp
add
add
lds
sbb
add
out
roll
add
add
popf
mov
xchg
xor
push
add
sarb
add
cmp
adc
add
test
add
pushl
push
es
dec
xor
add
std
jle
add
add
xor
decl
rolb
and
decl
clc
scas
mov
enter
add
add
add
jb
cmp
add
push
pushf
xchg
jl
or
dec
movsl
add
add
sub
sub
gs
or
push
xchg
insb
pop
push
and
incl
inc
add
pop
add
int
add
movsl
add
add
pshufw
mov
mov
jge
hlt
movsb
add
movsl
add
mov
cwtl
in
addl
sbb
stos
loopne
mov
fmuls
add
decl
in
lahf
mov
push
dec
ja
push
add
data16
mov
cmp
add
cld
sbb
add
cmp
push
and
pushl
jmp
stos
test
cs
roll
add
addb
add
xor
xchg
sub
add
add
sahf
stc
and
incl
test
mov
xchg
xchg
xor
incl
and
inc
add
clc
lahf
xor
jmp
add
mov
scas
or
jg
mov
inc
add
add
xchg
pop
jae
jmp
dec
mov
popa
add
pop
nop
js
xlat
nop
fisttps
shrl
xchg
imul
dec
jmp
cmpsl
add
jns
add
addb
mov
popa
add
cltd
push
add
imul
rcr
jg
add
add
add
bound
lcall
jmp
add
rorl
add
out
pop
add
add
sub
lods
in
int3
xor
pushl
add
inc
add
and
jnp
add
outsb
xor
mov
ja
lods
flds
pushl
rolb
cli
xchg
xlat
jb
lcall
jbe
in
add
dec
push
add
xor
incl
add
sub
rep
scas
mov
popf
test
lock
add
ja
pop
test
add
inc
add
mov
or
add
or
roll
jns
fwait
mov
mov
add
adc
incl
add
add
jnp
int
test
add
cmp
push
add
add
movsl
add
cmp
pop
cli
xor
pusha
add
imul
sarb
dec
xchg
push
push
add
inc
add
push
add
outsl
pusha
add
insb
dec
out
or
add
adc
and
pushl
add
imul
and
pushl
add
enter
add
mov
in
xchg
roll
add
roll
add
jg
bound
decl
pushl
or
add
addr16
add
add
jge
imul
cmc
pop
aas
enter
cmp
add
lret
xor
pushl
stc
addl
cmp
dec
les
inc
add
in
jge
jmp
add
add
data16
js
adc
add
push
cmp
add
ja
mov
and
push
jbe
xor
pushl
add
mov
xor
call
add
clc
les
outsb
add
jmp
add
cmp
add
cmp
jb
decl
xchg
fcomps
mov
jno
jmp
pop
sti
in
das
xchg
push
add
mov
imul
hlt
lret
dec
mov
xor
call
sbb
jbe
add
add
daa
add
into
jmp
clc
lea
add
dec
sbb
lret
pop
roll
add
ljmp
add
jns
push
icebp
and
dec
std
outsb
add
clc
mov
incl
incl
add
inc
add
arpl
jmp
add
add
in
mov
add
pop
lods
addb
adc
jmp
add
repz
add
jno
stc
cmp
add
das
cmpsl
add
incl
lcall
add
inc
add
hlt
stc
int3
or
imul
sbb
add
add
push
jmp
add
jmp
iret
pop
xchg
insl
cmp
in
out
adc
add
cmp
and
lcall
pop
xchg
add
incl
add
lahf
mov
cmp
add
outsb
roll
testb
pop
repz
clc
xchg
ljmp
mov
xchg
fidivrs
add
add
add
add
xor
incl
add
pushl
add
inc
add
push
xchg
sub
fisttps
aam
lret
push
add
add
sti
fdivl
pop
add
movl
jmp
cmp
jbe
adc
inc
add
fbstp
add
scas
dec
pop
xor
ljmp
std
add
cs
add
xchg
out
dec
dec
loop
iret
add
imul
dec
lahf
scas
xchg
jl
push
fnstenv
in
test
dec
incb
add
add
mov
add
jecxz
mov
movl
decl
push
add
out
dec
lret
cwtl
adc
jnp
out
mov
add
add
sbb
decl
dec
and
fnstcw
jnp
lcall
loop
push
inc
add
cmc
mull
add
mov
mov
add
add
shlb
aas
mov
test
mov
pusha
add
add
decl
cltd
mov
jmp
jle
add
ret
add
cmpsl
add
pop
add
imul
hlt
mov
add
lods
popf
and
mov
lret
jo
call
push
lods
cmpsl
add
add
js
add
mov
mov
add
addb
not
jmp
add
dec
dec
fistpl
mov
add
out
lret
push
loope
jle
mov
push
add
popa
add
stos
adc
pushl
add
push
lods
mov
fmull
xor
jmp
push
sbb
adc
decl
test
stc
rolb
or
ffree
add
add
dec
push
add
inc
add
lcall
mov
cmp
dec
addb
add
add
cmp
mov
add
add
cmp
addl
or
add
jb
incl
sub
sub
push
add
and
movb
in
mov
add
mov
push
xor
call
add
rcr
mov
ret
add
add
jmp
add
incl
pop
push
add
mov
addb
add
fidivrl
mov
cmpsb
add
adc
decl
pop
jno
fmull
jmp
sti
jbe
inc
add
popa
add
cmp
call
sarl
adc
dec
daa
add
cmpsb
add
pushf
hlt
sub
add
out
pushf
xor
mov
add
pop
cmpsb
add
stos
sub
jg
fsubrp
nop
lahf
sub
add
outsl
insl
mov
add
add
pop
lock
add
push
add
loope
jl
add
mov
out
sbb
jno
push
pop
stc
or
imul
incl
add
sub
inc
add
mov
pop
inc
add
addl
push
add
lods
stc
and
cmp
pop
lods
ret
add
imul
movb
lock
pushl
mov
adc
add
inc
add
add
mov
leave
cld
fwait
xchg
movsl
add
xchg
bound
jmp
push
sub
sub
add
xchg
add
sbb
add
lea
imul
nop
leave
add
call
ljmp
pushl
add
inc
add
xor
dec
movl
jge
push
stos
jne
add
test
mov
mov
add
mov
pop
add
pop
adc
decl
jge
cmp
add
lds
push
add
add
jne
cld
add
pushl
add
sbb
cs
add
add
shll
adc
pushl
push
imul
mov
push
jge
rcl
into
cmpsb
add
or
sbb
adc
decl
iret
push
and
incl
imul
cmpsl
add
ja
popa
add
push
add
add
add
dec
int
push
xchg
and
insl
addb
outsl
movsb
add
das
inc
add
and
incl
add
pop
dec
sti
addl
add
adc
jmp
add
out
cmpsl
add
add
xchg
inc
add
addb
add
ljmp
lcall
jg
mov
pop
out
pop
mov
lcall
add
add
mov
add
dec
int3
add
jmp
add
mov
inc
add
roll
in
repz
dec
outsl
icebp
shll
jb
inc
add
push
das
cmpsb
add
inc
add
mov
insl
sbb
pop
loopne
mov
mov
leave
cmc
inc
add
call
repz
call
lcall
in
je
add
in
xchg
iret
idivb
pop
cmp
in
xchg
int
fildll
add
addl
push
mov
sub
decl
push
rcrl
dec
and
xor
call
lods
jne
add
jne
add
mov
mov
adc
decl
add
fwait
in
cs
call
dec
mov
dec
mov
adc
incl
xchg
pushf
push
jmp
call
jg
repz
decl
jmp
add
or
test
cmpsl
add
jo
pushl
fwait
loopne
or
add
jl
add
ret
push
fnstcw
in
mul
add
add
push
add
or
add
repz
sbb
add
dec
mov
test
data16
sub
mov
xor
adc
inc
add
push
fwait
ret
add
xchg
sbb
inc
add
cmp
cmp
mov
mov
out
sbb
add
mov
leave
cld
add
ljmp
test
xor
sbb
add
scas
adc
jmp
add
loop
in
jmp
sbb
cmp
add
add
std
sbb
add
cmp
scas
xor
add
sub
mov
add
pop
xchg
adc
jmp
mov
test
stos
dec
and
fwait
jno
jmp
js
add
fcmovnbe
out
mov
push
add
jl
adc
pushl
or
add
add
decl
jne
add
movb
add
adc
ljmp
jmp
decl
push
xchg
push
add
jbe
aad
add
inc
add
add
add
dec
mov
lock
xchg
jo
decl
jmp
dec
adc
jmp
incl
add
mov
add
mov
mov
add
cmpsl
add
shll
push
add
movsl
add
lcall
push
add
iret
jnp
lods
jp
xchg
aam
pop
and
lcall
add
inc
add
nop
stos
out
sahf
shrd
roll
fnsave
aas
cli
adc
jmp
jmp
cmp
push
add
add
decl
and
jmp
call
xor
lcall
xor
incl
add
jo,pn
decl
dec
movsl
add
ljmp
add
add
sbb
loopne
into
xchg
pop
leave
pop
cld
lds
inc
add
add
add
rorl
addl
insb
xchg
ror
outsb
jb
push
roll
or
mov
adc
inc
add
jno
ljmp
ret
add
add
xchg
mov
sbb
cltd
lods
or
incl
pop
cwtl
pushf
repz
add
cmpsb
add
sbb
push
data16
decl
out
inc
add
or
addb
push
inc
add
push
fmuls
cmp
add
ja
add
ss
sub
adc
push
push
add
call
outsl
lcall
push
push
add
add
ljmp
mov
jns
add
and
mov
outsl
xchg
mov
add
test
inc
add
call
xchg
push
add
mov
and
sti
sbb
push
push
add
add
cltd
pop
mov
add
push
addb
pusha
add
push
add
pop
mov
pop
push
mov
add
pop
lock
add
add
fldt
int
add
aad
pop
outsl
mov
dec
push
add
add
mov
into
push
add
stc
jb
ljmp
pop
pop
jno
cmp
frstor
add
xchg
add
clc
and
ljmp
add
pop
repnz
test
bound
lcall
adc
call
fcomps
add
jnp
add
cmp
add
fdivs
test
add
add
cli
add
pushl
decl
imul
or
add
cmp
cmp
jl
add
pop
mov
stos
addb
sar
dec
xchg
rclb
push
add
leave
mov
add
out
ret
add
sbb
mov
ds
and
stc
pop
adc
call
mov
jl
jp
mov
lahf
int3
mov
or
add
add
stc
fdiv
rcrb
xchg
stos
icebp
push
add
inc
add
xor
add
addb
add
divb
add
add
in
jbe
add
ret
jmp
add
xor
js
add
mov
hlt
test
dec
aaa
testb
add
roll
mov
add
call
add
fisttps
out
adc
decl
jmp
add
stos
cmpsl
add
add
mov
add
add
add
insb
das
xchg
fistpll
xchg
cmc
int3
test
mov
fsubrs
cmp
add
ljmp
arpl
jmp
add
out
jp
add
add
adc
call
add
add
jg
and
decl
insb
inc
add
ret
add
or
add
lcall
fxch
pop
and
pushl
xchg
and
loopne
aaa
add
js
push
inc
add
add
dec
adc
fdivs
add
xchg
mov
ljmp
jb
pushl
lcall
mov
sahf
ljmp
and
lcall
add
add
inc
add
bound
jle
cmp
call
mov
dec
pop
add
add
push
add
jl
sub
imul
pop
out
pop
jno
fadds
add
add
enter
xor
call
add
or
jmp
ja
add
test
loopne
mov
mov
add
mov
insb
add
ljmp
push
add
add
hlt
and
call
mov
mov
movb
stos
sub
mov
insb
mov
add
mov
add
fidivrl
incl
add
add
sub
dec
into
pop
mov
clc
or
rcrb
es
roll
int3
das
adc
ficoml
cmp
stos
ret
add
add
lret
fstpl
push
add
mov
add
add
fsts
add
add
mov
fidivrl
inc
add
adc
pushl
scas
cs
add
add
mov
add
movsb
add
sub
or
pusha
add
jle
add
cli
addr16
iret
xchg
jae
push
ljmp
mov
push
dec
int3
pop
inc
add
xchg
mov
or
add
mov
add
fsubrs
jp
add
scas
mov
add
add
decl
add
iret
loop
xor
cmpsb
add
xchg
ss
in
js
adc
add
push
enter
sub
outsb
popa
add
js
add
mov
inc
add
pop
hlt
sahf
shrb
xchg
rolb
incl
jl
jno
fnstcw
pop
add
jmp
add
xchg
xor
pushl
mov
inc
add
iret
mov
jg
add
inc
add
movsb
add
lcall
ret
sbb
cwtl
data16
mov
jae
dec
xchg
add
lcall
xchg
sbb
call
add
xchg
adc
lcall
or
daa
add
cwtl
adc
test
fwait
xchg
test
sbb
inc
add
rcrl
lods
sbb
add
mov
add
shrl
jmp
add
mov
xor
addl
rorb
dec
jne
add
add
pop
add
imul
aad
das
popa
add
fldt
and
pushl
add
in
lahf
sahf
loopne
movb
sub
leave
addb
pop
cltd
addl
add
xchg
jge
pushf
shlb
add
and
ljmp
lods
mov
mov
sbb
add
bound
pushl
adc
ljmp
hlt
movsl
add
pop
roll
add
insl
mov
incl
add
jle
pop
jle
sub
cmp
jg
add
je
add
js
mov
adc
inc
add
add
es
add
lcall
add
shlb
dec
ljmp
lea
and
lcall
ret
movsb
add
dec
out
jmp
add
decl
add
add
in
xchg
test
rcl
jbe
add
inc
add
add
add
add
insl
sub
popa
add
cli
out
in
repz
stos
nop
fildll
add
cltd
mov
aad
add
in
push
add
add
add
add
jne
add
or
je
xor
ljmp
incl
out
add
js
add
jp
movsl
add
fcmovb
add
add
jo
mov
call
mov
cltd
mov
push
inc
add
icebp
mov
xor
incl
add
imul
add
aam
push
add
sbb
jmp
add
add
or
add
filds
jns
sbb
cs
add
add
cmp
add
test
and
cwtl
clc
jns
sbb
push
add
push
add
call
add
int
add
add
pusha
add
pop
mov
fdivrl
add
add
ljmp
into
stc
ret
xor
decl
add
jecxz
inc
add
int3
cltd
scas
xchg
rolb
or
xchg
lock
rolb
add
add
add
filds
scas
pop
fmulp
int3
ljmp
addl
cmp
add
add
mov
add
xor
jmp
add
icebp
mov
push
add
sbb
loope
in
sbb
add
add
int
add
jge
jno
lcall
insb
or
mov
add
cmp
imul
add
xchg
lods
mov
push
add
or
add
add
xchg
mov
into
mov
int
add
mov
add
add
mov
sub
add
in
stos
xor
add
aas
jns
mov
lds
push
add
lods
fimull
add
cmpsl
add
rol
add
cltd
lods
out
xchg
data16
addb
add
xchg
loop
addb
popa
add
pop
or
add
add
xlat
in
inc
add
add
sub
jle
jge
inc
add
and
mov
out
sbb
add
nop
xchg
mov
push
roll
add
pop
cmp
push
add
jl
add
rorl
add
lods
ja
xchg
loop
sub
jmp
pop
std
aas
adc
incl
sub
lds
push
add
das
xor
jne
mov
std
fld
add
movsb
add
add
mov
pop
xchg
icebp
fbstp
add
xchg
popa
add
push
add
les
cmp
inc
add
lods
leave
data16
add
lcall
ss
add
fcoml
mov
test
jmp
add
add
in
sbb
adc
aas
in
push
icebp
add
call
inc
add
add
add
pop
addb
add
pop
popa
add
or
mov
incl
loop
cwtl
dec
mov
push
add
paddd
add
faddl
add
adc
push
adc
inc
add
push
lea
jo
cmp
fsubl
jg
out
out
fisubrs
pop
pop
and
fmulp
pop
dec
movb
pop
add
add
out
pusha
add
jmp
cmpsl
add
incl
mov
fnstcw
cmpsl
add
into
ds
mov
add
popa
add
sbb
jle
and
shll
add
test
ljmp
sahf
aad
and
jmp
js
lcall
jp
add
std
movsb
add
or
jmp
and
mov
add
stos
mov
add
inc
add
and
pop
inc
add
push
push
xchg
incl
add
sub
add
xlat
mov
mov
mov
rolb
icebp
inc
add
pop
jge
add
stos
inc
add
leave
imulb
mov
out
pop
add
into
insb
cmp
add
pop
out
fildl
add
add
jmp
mov
add
sub
mov
add
out
and
jmp
incl
add
and
insl
mov
pop
fisubs
xchg
ljmp
fbstp
fcmovne
jae
jmp
add
add
jno
dec
dec
mov
or
add
mov
das
adc
cmp
dec
out
popf
roll
add
addl
sbb
call
add
fcomps
jns
add
bound
incl
add
rorb
aad
jle
pop
add
fsubr
cmpsb
add
add
dec
ljmp
roll
add
add
clc
mov
fadds
sbb
add
add
dec
roll
and
nop
inc
add
in
fsubp
add
jge
mov
mov
adc
adc
push
jnp
loopne
rorb
inc
add
xchg
bound
lcall
lret
add
incl
dec
xchg
mov
test
mov
rcrb
or
add
movb
and
mov
add
add
sbb
add
dec
add
clc
sub
add
stos
lcall
shll
pushl
add
jbe
add
mov
leave
mov
icebp
pushf
jne
pop
add
xor
sub
rolb
mov
mov
xchg
roll
sti
mov
sbb
add
pand
pop
pop
int
add
loope
call
add
fsubrp
fcomps
add
add
push
dec
fwait
inc
add
lcall
mov
dec
adc
decl
or
jl
sub
add
xor
incl
jle
add
mov
add
incl
add
les
fbld
pop
out
iret
into
or
mov
xlat
push
push
ljmp
add
jge
pop
test
out
add
add
add
sub
jl
mov
mov
mov
add
sub
js
add
jb
incl
add
outsb
pop
out
mov
mov
dec
push
aaa
sbb
add
jbe
add
sub
das
cmp
inc
add
lahf
sbb
out
push
outsl
fwait
dec
aad
cmc
popa
add
adc
inc
add
push
add
xchg
push
add
mov
jmp
jo
inc
add
pop
jno
decl
add
add
add
lahf
xchg
testb
jns
add
pop
fidivs
pushl
mov
or
repz
or
mov
xchg
add
jns
repnz
sbb
iret
sub
add
add
pop
data16
sbb
cld
add
xchg
jbe
jno
ljmp
mov
ss
add
xor
rcr
mov
push
add
dec
in
add
incl
add
xor
add
sub
push
add
movb
add
mov
outsb
mov
pop
xor
jmp
add
or
add
add
jmp
add
lcall
sub
std
mov
add
add
cmp
lcall
add
mov
insb
int
test
add
add
mov
add
add
loop
dec
sahf
rcrb
ficomps
jo
call
cmp
add
popa
add
fnstenv
mov
lahf
and
xchg
push
cwtl
mov
add
push
rolb
sub
rep
mov
mov
add
aam
fistpll
add
add
add
xchg
add
push
add
dec
push
ret
add
jg
add
ficomps
add
mov
incl
xor
add
push
mov
or
add
cli
cld
cwtl
repnz
pop
mov
add
mov
push
pop
pop
movsb
add
add
push
add
adc
jmp
mov
add
push
sti
mov
in
push
add
hlt
insb
pusha
add
mov
das
jmp
lods
add
lcall
mov
sbb
cmp
cmp
add
jnp
add
cmp
add
cwtl
nop
enter
add
cmpsb
add
add
adc
pushl
add
adc
decl
mov
pop
inc
add
jb
call
jmp
add
enter
in
pop
cmpsb
add
movb
add
cmp
add
or
test
and
mov
fwait
shll
add
test
jns
add
jbe
mov
fwait
dec
addl
jns
or
add
movb
fists
xlat
das
rcr
xchg
stos
fs
add
nop
push
add
mov
jnp
add
push
add
out
loopne
xchg
and
in
pop
xor
fadds
add
add
or
mov
fcoml
in
aad
movsl
add
incl
incl
decl
addl
lds
rorl
add
xchg
jne
add
mov
addl
xchg
addb
out
and
mov
lahf
jo
jmp
add
cmpsb
add
add
cmp
lret
loope
inc
add
addb
add
call
mov
add
ljmp
dec
add
fildl
ljmp
sbb
add
enter
add
dec
in
mov
cmp
ficompl
dec
imul
inc
add
cmc
mov
mov
out
jns
adc
ljmp
mov
fld
add
dec
add
xchg
mov
ljmp
add
ljmp
push
inc
add
popf
movsb
add
dec
or
push
aad
xchg
scas
xor
incl
add
push
add
fiadds
bswap
mul
add
jecxz
and
out
adc
jmp
or
add
inc
add
pop
adc
add
scas
jne
pop
pop
hlt
adc
dec
push
add
xor
push
add
lcall
pop
add
call
cmp
ja
sbb
add
sbb
call
jmp
add
addl
roll
add
cmp
cmp
add
add
xor
mov
mov
add
dec
adc
jmp
insl
add
sub
add
xor
add
cwtl
jne
movsb
add
or
push
lods
xor
add
lock
add
test
js
add
mov
ljmp
add
xlat
call
add
clc
dec
dec
adc
decl
push
test
add
push
ss
add
into
jg
mov
fdiv
cld
push
mov
test
sti
sarl
jnp
add
loopne
adc
adc
dec
push
add
adc
jge
or
mov
imul
add
adc
out
popa
add
jbe
push
icebp
mov
add
add
in
das
sbb
sub
mov
cwtl
mov
call
mov
and
jle
into
jl
pop
inc
add
inc
add
cmovae
push
cmp
jo
call
push
add
xor
cld
ja
xor
inc
add
dec
add
mull
add
inc
add
roll
add
pushl
ds
enter
aam
add
push
xchg
out
xor
incl
pop
pop
add
stos
mov
js
add
add
loope
sub
add
pushl
add
addl
add
push
add
ret
add
xor
incl
add
jb
ds
adc
fcoml
jp
add
add
cmc
jge
dec
loope
movb
add
pushf
in
pop
pushf
inc
add
test
aas
mov
mov
lods
inc
add
jmp
add
add
lcall
pop
pop
insb
mov
or
cmpsb
add
add
and
lcall
pop
clc
add
mov
xor
incl
xor
ljmp
add
add
and
call
add
decl
push
add
into
push
cmp
add
pop
mov
push
iret
jle
or
loopne
shrl
loop
pop
add
cmp
incl
add
jmp
cmp
shr
addb
add
push
add
mov
loope
into
pop
push
add
sub
cmc
data16
sti
or
add
les
cmp
idivl
movsb
add
add
add
mov
add
stc
daa
add
adc
call
add
adc
mov
ss
movsl
add
jnp
cmpsb
add
bound
lcall
add
adc
add
add
movb
mov
sbb
clc
add
push
xchg
test
fmul
add
call
sahf
and
inc
add
sbb
hlt
clc
sub
imul
sahf
sahf
sahf
dec
stos
fs
pusha
add
sbb
xchg
icebp
cmpsl
add
add
add
add
adc
inc
add
idivb
jbe
add
sarl
in
push
out
push
daa
add
inc
add
jmp
add
sahf
enter
add
jmp
add
jge
add
lret
add
in
jno
ljmp
add
adc
decl
repnz
push
dec
dec
inc
add
incl
call
push
add
push
add
ja
dec
pop
popf
clc
stos
mov
add
incb
xchg
mov
add
add
outsl
sub
scas
push
sarb
loopne
add
or
daa
add
add
cmp
inc
add
xor
lcall
add
fwait
icebp
int3
jge
add
dec
xchg
xchg
decb
xlat
daa
add
stc
add
dec
jns
int3
frstor
loope
loope
pushf
movl
hlt
inc
add
ret
add
jge
add
std
xor
jmp
decl
dec
pop
out
push
js
dec
out
mov
or
cmpsl
add
mov
jno
jmp
add
mov
add
jnp
add
xchg
test
push
add
addb
add
in
cli
cmp
inc
add
add
push
lds
add
movb
mov
pop
lds
pop
lahf
jno
clc
lods
dec
xchg
cmp
addb
add
scas
push
xchg
jae
push
lcall
pushl
add
leave
ror
mov
add
push
add
pushl
mov
mov
add
add
ljmp
inc
add
add
mov
add
mov
pop
sub
cmp
cmp
stc
xchg
faddl
jns
jo
incl
add
lds
stc
mov
add
pop
add
dec
repz
add
push
cmp
inc
add
xchg
jg
add
movl
add
repz
push
sti
out
insl
movb
add
fidivs
jmp
fsubrl
std
fdivp
jbe
and
fsubs
jns
add
or
add
stc
adc
decl
push
pop
adc
lahf
rolb
add
add
out
add
call
add
aas
fists
xor
mov
add
mov
dec
out
cmp
add
inc
add
push
sub
ret
sub
cmp
add
pop
xlat
aas
push
dec
pushf
ret
add
inc
add
std
sti
inc
add
pop
push
cmpsb
add
daa
add
out
push
dec
ficoms
add
add
rolb
add
jne
push
add
and
incl
outsb
dec
daa
add
xchg
insb
aas
jl
add
lods
xchg
mov
call
mov
movl
add
scas
adc
ljmp
dec
inc
add
cltd
repnz
mov
add
xchg
dec
push
popa
add
add
ljmp
sbb
fistps
add
ja
addb
xlat
sti
sbb
mov
add
addl
sbb
or
add
pop
shll
add
push
add
mov
addb
mov
dec
mov
add
xchg
push
add
adc
jmp
lcall
rolb
add
xor
jno
cmp
xchg
xor
pushl
inc
add
cmp
xchg
push
inc
add
jmp
push
add
push
loopne
inc
add
mov
add
stos
daa
add
xchg
mov
add
add
or
add
cli
jl
scas
testl
fldl
add
loop
cmp
add
jb
call
add
jne
add
add
and
xor
fbstp
add
mov
mov
xrelease
jno
call
add
fdivp
pop
mull
add
leave
sub
add
stos
push
xor
add
sbb
cmp
pushl
dec
ja
pop
sti
or
sbb
add
inc
add
or
decl
sub
jecxz
and
pushl
sbb
add
add
jnp
add
add
mov
in
xchg
leave
pop
mov
pushf
pop
inc
add
addb
fcompl
insl
push
and
lcall
add
sbb
jmp
xchg
mov
pop
ret
cmp
add
jmp
add
adc
ljmp
add
dec
mov
add
jb
call
push
das
mov
pop
lahf
cmp
mov
test
testb
jmp
push
add
hlt
in
fidivrl
inc
add
rolb
inc
add
sbb
push
add
les
jbe
lret
dec
shrl
jno
ljmp
lea
leave
push
faddl
lret
jb
ljmp
cmp
inc
add
add
and
lea
into
or
stc
into
jmp
inc
add
add
icebp
ret
add
jns
xlat
push
add
test
inc
add
push
add
add
or
add
add
or
mov
stos
stc
call
cmpsb
add
push
ds
xchg
adc
dec
mov
stos
aad
imul
mov
addb
xchg
xlat
cmp
mov
mov
daa
add
inc
add
out
rorl
arpl
call
push
add
cmp
movsl
add
dec
int
add
leave
inc
add
int3
pop
and
jmp
fnsave
pushl
add
popa
add
mov
add
xchg
call
stc
adc
fadd
add
mov
add
in
enter
cmp
cmp
add
add
ljmp
adc
mov
or
mov
add
ror
mov
xor
dec
inc
add
rcrb
adc
add
test
lea
in
mov
push
adc
jmp
add
mov
leave
icebp
push
ja
add
jae
jmp
pop
mov
push
add
xlat
jb
dec
out
mov
add
pop
add
and
call
addl
ficompl
add
addb
movb
aaa
aad
add
add
fadds
add
test
aaa
jae
lcall
cmp
test
hlt
push
stos
push
xor
sahf
pop
mov
mov
leave
mov
add
push
add
nop
jl
add
add
into
jecxz
mov
jmp
add
push
int3
push
add
mov
addb
test
outsb
test
pushl
stc
mov
add
or
cmc
sub
lcall
mov
sbb
push
aam
ljmp
js
dec
sub
inc
add
fldenv
or
xor
call
lcall
and
roll
add
cmp
movsl
add
icebp
scas
dec
push
add
or
add
add
cmp
insl
xchg
cmp
dec
mov
enter
add
xchg
icebp
and
sbb
cs
out
xlat
je
in
jnp
shll
add
or
pop
add
add
xchg
lock
add
mov
nop
in
mov
call
aaa
push
add
jl
push
jl
xlat
nop
cmpsb
add
sbb
inc
add
jg
je
inc
add
das
les
roll
add
sbb
out
aaa
mov
lds
jns
call
add
mov
movsl
add
call
xchg
scas
movsl
add
add
xor
cltd
loopne
mov
daa
add
cmp
xor
pushl
pushl
add
iret
iret
jl
cmp
mov
add
adc
ljmp
sar
cmpsb
add
lcall
enter
push
adc
ljmp
add
add
jns
sbb
add
addr16
not
js
nop
mov
clc
xor
add
add
push
add
daa
add
mov
add
pop
add
jle
add
mov
test
cld
mov
dec
addb
push
xchg
jns
add
add
add
test
leave
frstor
addb
jne
in
fwait
pop
test
cmp
jns
add
lods
ljmp
and
ljmp
add
add
add
and
ljmp
add
add
adc
xor
xor
incl
add
pop
aaa
add
pushl
add
xchg
cmp
push
add
in
mov
add
mov
stc
mov
lcall
add
int
scas
cld
in
adc
jmp
add
mov
scas
fbld
add
inc
add
jne
mov
add
lea
add
and
aas
cmp
repnz
lcall
shll
add
lds
iret
xchg
push
add
lahf
inc
add
pop
jecxz
fdivrl
jae
call
add
cmp
sbb
add
mov
test
js
add
add
push
add
sbb
nop
xchg
and
add
fists
lcall
add
pop
movsb
add
js
add
add
jmp
add
add
sub
call
loope
out
mov
or
cwtl
inc
add
push
add
mov
jnp
add
clc
jo
ljmp
lret
pusha
add
ja
mov
add
add
jmp
add
jecxz
call
in
mov
inc
add
into
sbb
jne
add
xchg
out
cwtl
movsb
add
add
stc
mov
or
pusha
add
xor
decl
shll
aas
movb
mov
or
add
dec
mov
add
xor
push
and
inc
add
cmp
add
pop
ds
in
lds
aas
or
incl
mov
movl
cltd
mov
inc
add
lock
jecxz
test
addl
xor
add
add
inc
add
lcall
or
add
lcall
pushf
add
add
add
xchg
push
fisubl
fstpt
shrb
push
or
sub
xor
cld
pusha
add
mov
add
lds
aas
add
decl
pushl
xor
call
jbe
or
mov
add
loop
ljmp
pop
pop
mov
xchg
ljmp
and
incl
decl
movsl
add
out
movsl
add
jno
call
decl
dec
sbb
xor
mov
add
add
lds
std
mov
xchg
sub
mov
out
shl
inc
add
add
dec
rolb
icebp
mov
inc
add
xor
outsb
test
bound
call
lock
mov
add
jnp,pn
cs
and
incl
or
add
nop
scas
movsb
add
cmp
decl
out
xor
lcall
inc
add
cmp
out
xchg
mov
jg
aas
jmp
push
cmpsb
add
and
mov
jbe
cli
add
call
push
fwait
cmp
pop
cmp
aaa
jp
addl
add
lcall
fs
enter
imul
adc
jp
mov
jnp
add
inc
add
divl
add
sbb
add
mov
add
sub
mov
scas
jae
pushl
add
add
lahf
loope
add
pusha
add
pop
xchg
ss
add
xor
jmp
add
add
clc
adc
decl
jbe
and
lcall
add
ss
scas
sub
xchg
movb
add
sbb
data16
add
popl
add
mov
or
add
decl
and
incl
add
xchg
xor
jmp
add
ss
scas
cmp
bound
call
decl
or
addb
out
dec
mov
outsb
es
iret
adc
add
jmp
add
out
out
cmpsb
add
ljmp
into
jg
add
add
hlt
aas
inc
add
add
shlb
pushl
mov
dec
lret
cmpsb
add
add
popa
add
pop
mov
or
add
add
push
add
jecxz
cmp
mov
in
add
pusha
add
ljmp
insl
movb
push
add
leave
ss
jb
pushl
stc
add
in
sbb
inc
add
pusha
add
mov
cmp
add
loopne
fmull
add
jns
je
and
clc
int3
sub
loop
sub
mov
add
push
add
outsb
mov
xchg
fcomp
inc
add
mov
add
add
dec
mov
scas
mov
and
jge
outsb
mov
add
inc
add
add
mov
in
call
add
add
mov
sti
xor
dec
repz
add
lret
jmp
add
js
lcall
add
mov
add
les
ret
decl
int3
scas
out
adc
lea
movsb
add
or
and
lret
push
dec
jns
gs
scas
mov
add
movl
xchg
arpl
jmp
cmp
icebp
sub
mov
add
add
mov
mov
push
sti
lods
and
inc
add
ss
sti
pop
pop
xchg
xlat
adc
call
pop
test
cli
clc
icebp
stos
push
jge
mov
push
bound
jmp
inc
add
add
add
jmp
jmp
push
add
nop
sub
sarl
aas
mov
add
lcall
add
cmp
add
loope
adc
ljmp
sbb
add
lahf
movl
jae
call
jmp
add
add
push
add
insb
out
jnp
pop
push
add
ljmp
arpl
lcall
pop
lods
mov
add
hlt
cli
rcr
xchg
test
divb
add
js
dec
cmpsl
add
ret
add
movsl
add
push
add
jns
imul
call
add
xchg
mov
xchg
out
xchg
dec
shll
cmp
add
push
int3
mov
aas
jp
loopne
fsubs
push
and
sbb
add
ljmp
lahf
adc
cmp
loop
imul
jecxz
xchg
cli
push
pop
clc
out
movl
add
jge
bswap
cli
add
add
add
sbb
add
cmpsb
add
xchg
fldl
add
add
adc
mov
add
add
add
sbb
dec
inc
add
in
adc
push
cmpsb
add
mov
jb
pushl
fidivl
pushl
add
push
add
pushl
add
cmp
add
jge
add
mov
add
sbb
jmp
jmp
xor
pushl
lcall
cmpsb
add
add
call
aad
mov
ljmp
push
add
popf
dec
xchg
mov
add
push
sub
test
jmp
ds
or
add
dec
push
cmpsl
add
bound
call
js
add
fnstcw
movl
add
nop
add
mov
addl
add
mov
rolb
push
sbb
add
dec
cmp
pusha
add
roll
in
lds
lods
jbe
sub
dec
pop
mov
add
push
movl
add
out
jp
add
sbb
inc
add
push
aad
addb
add
jnp
mov
int
cmp
jbe
int3
add
call
push
add
add
repz
add
add
cld
lret
insb
mov
hlt
dec
sub
jg
hlt
xchg
loopne
lds
pop
imul
mov
xchg
and
call
dec
cwtl
cli
fmuls
jmp
pop
bound
cmp
add
lret
fs
xchg
jnp
adc
push
mov
add
dec
add
incl
rolb
bound
jmp
jmp
add
dec
nop
cld
pop
mov
lds
scas
jo
decl
add
add
out
xchg
mov
sbb
jmp
add
or
cmp
lods
push
pop
test
jae
js
xchg
hlt
mov
add
add
xlat
inc
add
add
xor
incl
xchg
pop
add
dec
loopne
inc
add
cmc
mov
or
add
xchg
out
mov
mov
imul
add
add
mov
add
int3
imul
imul
add
xor
pushl
cwtl
jl
rcrb
lahf
mov
pop
lahf
inc
add
xor
inc
add
add
lret
add
sti
xor
lcall
add
xchg
out
xor
jmp
sbb
inc
add
jmp
adc
ljmp
add
add
cmp
jle
sbb
add
ljmp
push
xor
mov
add
xor
add
inc
add
add
jg
add
movl
add
ljmp
add
add
or
add
mov
jne
cmp
add
out
lea
push
add
cld
push
jg
mov
incl
out
divl
scas
daa
add
add
je
push
jmp
add
mov
add
fdivrs
stos
adc
add
je
imul
dec
sub
or
jnp
sub
mov
add
pop
jmp
add
add
jmp
add
xchg
add
jmp
jb
incl
enter
in
aaa
icebp
in
bound
jmp
add
push
lods
les
add
and
incl
dec
scas
insl
mov
outsl
adc
pushl
not
mov
add
je
xlat
imul
cmpsb
add
movl
add
add
mov
mov
in
imul
push
je
in
or
adc
jge
add
and
call
xchg
and
incl
add
inc
add
dec
lds
add
call
and
lcall
add
fiaddl
add
sbb
leave
out
loopne
cmp
add
add
dec
push
mov
add
repnz
and
lcall
or
cld
nop
addl
dec
outsl
dec
jmp
pop
sbb
mov
xchg
insl
pop
cmp
sub
add
add
add
iret
sbb
add
lret
jle
add
rcrb
lcall
xor
mov
ucomiss
mov
mov
in
add
add
in
cmp
mov
in
cmpsb
add
bound
call
lds
fidivl
add
les
sub
ljmp
cmp
arpl
jmp
jb
aas
arpl
jnp
out
push
or
push
int3
dec
addb
popf
xchg
jmp
add
sub
or
jl
les
mov
adc
jns
add
add
mov
push
shll
call
add
cmp
addl
push
lods
add
add
pop
mov
inc
add
add
jmp
scas
loope
mov
test
add
add
jb
sti
pop
cmc
lea
add
ljmp
add
ljmp
dec
mov
push
push
jo
ljmp
add
add
inc
add
pop
jg
add
pushl
jmp
add
lret
ret
fiaddl
cld
jno
lcall
idivb
fdivr
ljmp
out
sub
add
stos
test
mov
ret
add
add
incl
add
jb
decl
ret
dec
addb
add
xor
ljmp
add
cmp
xchg
iret
sahf
fisttps
sub
mov
or
fwait
call
insl
jnp
pop
or
jp
add
lds
jno
ljmp
xchg
mull
sbb
add
add
dec
xchg
inc
add
inc
add
aad
add
xchg
add
dec
call
into
cmp
add
add
add
xor
fdivl
and
in
mov
addb
add
add
pop
add
add
arpl
call
imul
stos
sub
movb
pop
mov
jmp
add
enter
add
add
inc
add
inc
add
lock
push
add
add
xchg
test
add
add
dec
pusha
add
xchg
jge
adc
jmp
add
add
icebp
xchg
push
mov
add
adc
ljmp
fcomps
add
add
or
push
add
cli
xchg
pop
add
pushl
call
inc
add
scas
jnp
xchg
cli
mov
pop
xor
mov
add
add
mov
mov
add
cmp
add
add
dec
pop
mov
in
out
dec
fstpt
add
add
cmpsb
add
out
popa
add
cmp
push
adc
pushl
add
movl
in
lods
add
out
iret
jae
lcall
add
dec
pop
jno
mov
call
inc
add
xchg
fsubl
pop
jno
lcall
addb
inc
add
pop
and
call
call
fistpll
add
add
mov
decl
sarb
add
lret
addl
xor
call
jae
call
jp
std
mov
xor
lcall
add
add
out
sbb
add
sub
add
ret
cmp
add
pop
and
cmp
add
add
lret
lcall
push
add
push
add
and
decl
lret
call
add
outsl
push
push
add
add
xor
fdivs
add
pop
fdivrs
add
jns
add
add
pop
sahf
pusha
add
cltd
lea
imul
add
sarl
sub
add
in
and
decl
lcall
or
add
push
outsb
add
add
mov
add
jb
ljmp
aam
dec
adc
incl
add
add
add
dec
das
adc
add
imul
mov
add
push
loopne
repz
mov
pushl
add
addb
add
add
test
mov
add
add
popa
add
stos
ret
add
add
push
add
ds
clc
inc
add
sub
js
push
cmp
and
jmp
dec
adc
pushl
decl
lods
cmp
pop
stos
das
mov
arpl
lcall
dec
inc
add
loopne
jle
add
pop
ror
popf
dec
into
movsl
add
add
jle
outsl
dec
in
cmc
adc
incl
add
dec
mov
add
jns
cmp
ljmp
or
add
jb
jmp
add
cmp
cmp
add
popa
add
mov
fwait
and
fsubr
fidivrs
inc
add
cmp
pop
push
jmp
lret
bound
jmp
add
add
mov
add
cmp
add
aaa
lods
push
mov
sti
ffreep
add
mov
lock
cmp
add
jg
add
lret
cmp
add
mov
xor
lcall
decl
fmuls
and
out
mov
pushf
and
mov
add
loopne
jl
data16
add
cltd
mov
lock
repnz
incl
add
icebp
into
xlat
xlat
push
add
mov
mov
sub
roll
and
call
add
jmp
rolb
add
cmpsb
add
lock
mov
test
hlt
or
cld
push
rolb
mov
jnp
add
pusha
add
addl
and
xor
add
std
data16
add
jmp
add
int
add
adc
dec
pusha
add
sub
xchg
loopne
add
add
mov
pop
addb
xchg
imul
jae
lcall
ror
cwtl
push
fdivrs
ljmp
dec
push
mov
push
add
in
cmp
add
int
add
and
incl
incl
lcall
mov
sbb
add
cltd
add
decl
lea
add
repz
lock
ret
add
rcl
rolb
fcompl
add
mov
add
pop
pop
pop
jns
add
mov
rolb
add
add
stc
loope
ficomps
pushl
add
cwtl
std
adc
clc
std
mov
add
pop
lock
rolb
dec
xchg
sbb
sbb
dec
movsb
add
sub
iret
cld
lds
js
add
fdivrl
imul
jl
add
testb
jmp
lahf
int3
mov
lcall
jp
jae
incl
out
sub
mov
lcall
dec
pushf
mov
mov
adc
flds
mov
call
std
mov
xor
pushl
adc
incl
add
pop
push
jl
jmp
addl
add
add
xchg
fstpt
dec
fnstcw
cltd
adc
pushl
add
ljmp
adc
out
pop
addb
fimull
add
and
fadd
add
mov
decl
add
jmp
add
bound
fcmovne
push
lock
cmp
fwait
lret
and
push
stc
movsl
add
call
add
scas
sub
add
add
add
clc
pop
pushf
adc
pushl
add
and
jmp
gs
xchg
jno
ljmp
mov
add
scas
test
mov
add
xor
mov
add
add
sbb
add
add
add
aam
hlt
push
add
pop
popa
add
sbb
icebp
fidivs
test
repnz
add
pop
outsl
scas
sbb
incl
add
xchg
mov
dec
jnp
fidivrs
call
call
imul
cmp
lcall
add
std
and
idivl
xor
incl
test
jns
add
rolb
mov
cmp
cltd
pop
shll
sarl
movl
add
insl
mov
loope
aam
add
incl
jmp
lcall
std
push
and
cmp
add
outsb
inc
add
add
aad
pop
sbb
pop
mov
daa
add
push
add
incl
lcall
fistpll
add
addl
add
add
mov
iret
movb
sti
les
scas
adc
loope
dec
adc
inc
add
pop
loopne
add
jmp
decl
cmp
add
lock
add
test
sub
add
ljmp
cli
or
cs
jno
push
and
out
nop
or
add
add
mov
add
mov
push
insb
dec
xor
decl
cmp
jecxz
ret
add
add
in
lds
addl
ret
add
bound
cmp
test
mov
add
lds
mov
pushl
jmp
add
jo
pushl
lcall
add
mov
add
add
sbb
cmp
add
cltd
jmp
xor
push
shlb
xchg
mov
fistpll
fstpt
inc
add
push
add
call
or
push
stc
mov
add
nop
cmp
sti
jmp
mov
cmc
shrl
add
push
loopne
push
add
add
imul
add
add
shlb
call
or
mov
push
pusha
add
movsl
add
add
inc
add
jb
call
ja
add
mov
mov
aas
add
leave
or
add
add
mov
rolb
mov
add
cmp
cmpsl
add
aaa
add
add
add
push
add
outsb
imul
xchg
popf
pusha
add
mov
out
mov
xchg
push
arpl
jmp
add
add
je
sub
insl
mov
pop
add
cltd
lds
data16
push
add
in
imul
push
cmp
add
add
decl
add
xor
add
jmp
add
bnd
incl
add
add
mov
mov
inc
add
xor
decl
call
call
add
push
mov
push
add
mov
add
dec
xor
xchg
mov
add
cmc
cmp
mov
add
push
cmp
rolb
add
xchg
movsb
add
fstps
lret
inc
add
stos
das
repnz
addb
ljmp
iret
jmp
add
add
dec
pushf
add
lcall
add
mov
inc
add
adc
fadds
add
pop
fidivrl
in
push
add
lret
enter
or
mov
add
fldl
stos
mov
into
icebp
int3
sbb
add
enter
in
sub
jne
xchg
popa
add
sbb
push
add
test
insl
insb
repz
incl
jne
mul
add
scas
aaa
lcall
cltd
cmp
add
sub
dec
into
adc
dec
add
dec
or
ds
cmpsb
add
cli
jge
add
add
addb
add
mov
sbb
stc
outsl
bound
dec
inc
add
ljmp
mov
out
popf
mov
lods
addb
xchg
int
sarb
addl
adc
decl
adc
incb
test
clc
ror
std
pop
mov
notl
add
adc
mov
addl
or
add
ljmp
sti
mov
jmp
pop
add
movl
pushl
stc
push
insb
jnp
loop
bound
jp
insb
test
dec
ror
dec
inc
add
mov
mov
mov
mov
add
ss
mov
add
fistpll
pop
pop
fndisi(8087
add
add
add
add
dec
adc
call
or
sub
add
inc
add
iret
mov
add
adc
xchg
test
fcmovu
push
scas
fldenv
add
add
decl
pop
xor
push
cmp
add
jb
call
or
or
jle
add
dec
arpl
clc
aas
movsb
add
in
inc
add
add
jmp
pushl
add
xchg
mov
add
xor
ljmp
add
xor
mov
or
mov
dec
xchg
imul
rolb
lods
pop
push
add
lret
lea
add
data16
sbb
push
dec
and
push
lret
incl
add
data16
dec
je
xor
je
add
add
jl
add
ljmp
adc
pushl
add
push
scas
pusha
add
faddp
add
xchg
jne
add
add
ds
in
jb
decl
movl
incl
push
add
xlat
add
add
push
add
inc
add
sbb
push
ret
add
add
addl
popf
mov
add
lcall
aam
xor
jmp
lcall
sti
into
sub
sub
mov
add
int3
int
mov
rolb
test
fidivrs
jge
lea
push
add
out
fwait
xchg
daa
add
add
mov
mov
add
add
push
add
stc
addl
add
push
and
cmp
mov
out
mov
addl
pop
add
add
js
int
cmp
and
jmp
add
push
add
push
mov
mov
imul
push
pop
addl
jmp
dec
mov
decl
add
pop
leave
ljmp
sub
ja
add
out
inc
add
cmp
add
xchg
ljmp
add
pop
aam
inc
add
and
loopne
dec
and
pmaddwd
pop
add
icebp
mov
inc
add
sub
dec
and
clc
cmp
add
add
js
add
inc
add
mov
xchg
and
incl
add
xchg
addl
test
mov
fwait
push
add
jp
in
addl
shl
add
jno
jmp
jmp
push
add
repnz
add
add
xor
lcall
je
add
inc
add
add
rolb
lock
dec
rolb
test
jae
ljmp
jg
push
jl
xchg
movsl
add
fucom
add
jns
pushf
pop
add
add
js
mov
test
cmp
jmp
loop
sbb
mov
add
test
add
cld
imul
add
out
and
push
mov
incl
add
inc
add
sbb
pop
mov
pushl
adc
mov
mov
outsb
repz
fwait
dec
jmp
add
pushl
jmp
add
push
decl
xchg
in
outsb
xchg
mov
aaa
xchg
mov
add
add
and
add
cmp
loope
or
lods
xor
ljmp
add
add
xchg
mov
cmp
in
push
add
mov
xchg
bound
in
cmpsb
add
add
add
outsl
push
stc
add
jno
call
add
pusha
add
xchg
mov
jg
cmp
jmp
imul
icebp
jb
pushl
shrl
and
lcall
adc
ljmp
add
mov
add
add
insb
pop
jg
add
adc
call
std
fldt
xchg
jle
add
sbb
add
decl
mov
sub
push
fmuls
xchg
push
xchg
cmp
mov
movsb
add
dec
dec
mov
je
bound
dec
or
add
and
cmp
add
mov
add
jg
sti
popf
mov
mov
pop
imul
add
icebp
jne
add
pushf
xor
lcall
add
sbb
or
pop
lcall
pop
cmp
jg
mov
add
add
add
paddsw
add
mov
lret
popf
jle
cmp
call
aaa
addr16
add
adc
inc
add
push
add
mov
addl
add
int
add
sub
add
outsb
mov
add
ljmp
scas
dec
dec
sbb
out
mov
add
xor
sbb
add
mov
aam
sti
rcrl
add
or
imul
xor
call
adc
ljmp
adc
jmp
add
inc
add
lods
sbb
add
jl
add
jmp
add
shl
add
add
push
dec
adc
mov
stos
inc
add
push
stc
sahf
loop
mov
out
test
ja
pop
in
movl
call
add
in
addl
cmp
add
lods
test
pop
push
lods
lock
mov
stc
xchg
mov
jecxz
push
push
add
push
add
inc
add
dec
jnp
add
pop
rolb
sub
mov
imul
out
add
jmp
jmp
add
add
add
pop
out
fstpl
add
and
out
addl
add
hlt
fwait
std
scas
scas
xor
call
jmp
sbb
add
add
jbe
add
cmp
lea
add
fnstsw
add
out
fwait
sbb
add
add
mov
sub
ss
mov
sti
jge
add
and
call
int3
mov
hlt
push
add
pop
lock
movb
add
decl
pop
jne
mov
or
inc
add
cmp
add
sbb
add
sub
leave
pop
add
addb
pop
arpl
jmp
jbe
xor
ljmp
repnz
fcoml
add
xchg
mov
inc
add
mov
sarb
add
mov
push
add
fcomip
bound
decl
cmp
pop
add
mov
mov
cwtl
inc
add
lock
add
push
xchg
cmp
decb
add
xor
mov
fldl
fisubrl
inc
add
add
pop
je
movsb
add
movhps
ljmp
outsb
fsts
cmp
add
adc
out
sub
add
mov
xor
inc
add
cli
insl
fsubrp
mov
insb
dec
stc
les
adc
lcall
fadds
mov
pushf
push
add
xchg
fcoms
jmp
outsb
push
add
mov
add
scas
out
or
push
sbb
add
add
or
dec
mov
loop
fimull
adc
lds
mov
les
xchg
out
test
cmc
xchg
pop
movsl
add
add
movb
and
mov
push
mov
in
jecxz
les
ja
push
add
add
jge
and
sbb
jmp
lea
xchg
ss
addl
add
fimuls
jbe
add
xchg
dec
mov
jno
decl
add
popf
push
add
jl
mov
and
pushl
push
add
jb
decl
leave
adc
inc
add
add
and
addb
add
mov
in
jge
ljmp
lods
bound
jmp
add
test
sysenter
stc
sbb
add
add
inc
add
cmpsb
add
push
add
pop
aaa
out
ljmp
iret
movsb
add
std
call
xchg
xor
dec
or
add
and
push
add
xor
add
pop
cmp
jo
call
add
shrb
ljmp
call
cmp
add
pop
cmp
repz
add
jmp
pop
inc
add
dec
xchg
cmp
cmp
xchg
jmp
in
mov
add
add
add
add
test
add
adc
mov
add
mov
jecxz
push
add
addr16
push
xchg
pop
cpuid
add
add
pop
fwait
aas
sbb
sub
sti
xor
decl
add
jg
leave
push
add
xchg
repnz
inc
add
add
mov
fstps
lret
xchg
loope
daa
add
cmc
test
xor
decl
mov
cltd
roll
nop
faddl
decl
mov
and
pushl
data16
hlt
jge
scas
loopne
ja
js
dec
aas
hlt
in
insl
loopne
insl
jge
add
mov
add
adc
ljmp
add
jp
add
jo
pushl
jge
adc
dec
mov
add
in
pop
jg
mov
cmc
dec
sub
icebp
add
sub
cmpsl
add
add
hlt
pop
mov
pushf
jbe
add
mov
jmp
jae
jmp
add
xchg
in
xor
call
and
call
or
call
fs
bound
ljmp
add
mov
out
cmp
movsl
add
add
call
add
call
lods
je
popa
add
pop
add
popa
add
sbb
add
sub
sub
add
call
add
add
mov
add
js
adc
incl
cmpsb
add
add
mov
dec
fsub
add
out
addl
push
add
xchg
xor
loop
mov
cmc
xor
pushl
add
sbb
add
inc
add
stos
movb
add
ds
sbb
sahf
mov
or
mov
test
stos
jecxz
stos
cmp
add
outsl
je
pop
xor
scas
add
shr
mov
adc
dec
in
cmp
jb
incl
add
lcall
add
add
dec
inc
add
adc
jmp
add
ljmp
enter
mov
xchg
pop
or
inc
add
out
add
incl
add
out
pushf
mov
add
and
jmp
dec
push
add
cmp
lret
add
jmp
mov
pop
lock
add
mov
lods
cmp
add
fwait
jle
les
xor
lcall
sbb
addl
decl
inc
add
add
call
add
add
push
add
fisubrs
jmp
ljmp
mov
movsb
add
popa
add
imul
in
dec
push
aaa
loope
pop
insl
mov
add
jnp
add
out
ss
add
add
fwait
popa
add
pop
int3
loopne
sub
add
inc
add
in
adc
decl
lcall
xchg
dec
or
ja
lahf
pop
jg
hlt
mov
loop
jae
jmp
out
cmp
add
out
outsl
filds
add
jle
add
jno
inc
add
or
add
out
pop
mov
scas
rcrb
add
fadd
add
out
ucomiss
sbb
add
sub
jbe
add
lcall
add
stc
xor
ljmp
push
fwait
call
inc
add
mov
loop
ret
add
cwtl
sahf
jle
cmc
jnp
inc
add
pop
pop
add
sub
sub
jge
mov
out
mov
add
add
pushl
mov
nop
mov
add
sub
mov
add
test
mov
inc
add
sub
add
in
sbb
pop
jo
inc
add
call
pop
xor
jmp
call
add
js
sbb
add
cmp
rcrl
xchg
and
jmp
fstl
sbb
cmp
push
add
sbb
add
mov
add
out
out
mov
xchg
sub
add
icebp
push
xor
xlat
inc
add
xchg
fisubrs
mov
add
iret
das
je
xchg
jae
jmp
add
out
pop
jmp
xchg
je
add
pcmpeqb
aad
sub
insb
ja
add
jmp
xchg
xlat
dec
cltd
cmp
inc
add
dec
push
sti
stos
in
je
add
dec
mov
inc
add
roll
add
add
or
shrb
add
add
add
add
jmp
call
mov
add
dec
pop
inc
add
rolb
mov
mov
add
xchg
xchg
pop
push
jbe
rol
add
out
jg
add
inc
add
add
add
sbb
incl
mov
add
loopne
insb
pop
fcompl
add
adc
ljmp
add
into
push
js
add
xor
popf
inc
add
lock
fucomip
stc
scas
or
jbe
add
pop
mov
dec
inc
add
mov
call
decl
add
lahf
mov
in
out
aam
add
bnd
add
adc
decl
jae
lcall
sbb
jp
fstpt
add
dec
int
in
pop
mov
imul
add
mov
cltd
sbb
and
ljmp
mov
js
mov
add
test
outsb
mov
push
add
loopne
mov
add
dec
in
test
dec
movb
add
fs
cmp
inc
add
add
bound
ljmp
cmc
data16
mov
add
add
lahf
jnp
push
fidivrl
add
rorb
stos
data16
lds
rcrl
repnz
movsb
add
enter
movb
add
clc
repz
loope
mov
out
fdivrs
add
sbb
add
add
pop
mov
add
jmp
adc
pushl
add
add
adc
incl
pushl
and
call
jb
pushl
add
pushf
push
imul
jmp
add
lock
jb
jp
test
cmp
mov
push
add
jbe
cmpsl
add
add
jmp
add
cld
das
sub
add
cmc
cmc
and
fisubs
add
ja
add
add
cmpsl
add
dec
sub
add
add
cmp
pop
aaa
mov
mov
adc
jmp
lret
pushl
lea
lock
push
cli
aaa
out
aaa
xchg
jbe
add
into
test
sahf
aad
cli
fcoml
add
add
decl
rorl
ja
add
sbb
fucom
add
mov
add
mov
add
pushf
or
inc
add
add
add
sub
add
jp
add
jmp
jl
jle
sar
mov
add
add
call
ljmp
xor
call
add
mov
xchg
add
jg
push
hlt
dec
jb
pushl
pushl
add
mov
mov
clc
lds
pop
sti
lock
xor
std
mov
add
adc
add
add
dec
dec
lds
fldt
add
loope
stc
lods
mov
add
icebp
out
cs
mov
inc
add
call
cli
jge
add
insb
xor
jl
add
add
jno
mov
jnp
ret
add
push
add
jmp
addl
les
lds
xor
push
and
pushl
add
roll
lcall
inc
add
sbb
add
in
adc
call
add
data16
mov
pushl
add
pushf
adc
ljmp
add
xor
jmp
add
fnstenv
add
pushl
cmpsb
add
fisubs
add
push
add
jecxz
jmp
popa
add
push
inc
add
add
mov
pop
xchg
scas
popl
lret
addr16
jmp
dec
int
add
and
decl
add
sub
push
cmc
movsb
add
add
pop
test
sarb
addl
mov
add
add
call
call
add
add
addb
xor
lahf
nop
xor
add
add
repz
sahf
cltd
aam
add
pop
xor
ljmp
mov
add
scas
lods
negl
add
mov
add
xchg
dec
loop
pushf
mov
add
mov
mov
popa
add
mov
add
les
push
add
lods
fiaddl
add
and
std
addb
add
loope
lea
xor
stos
movb
add
dec
xor
pushl
add
cmp
sub
add
fmull
add
jbe
clc
jnp
pop
add
jmp
jl
jbe
add
add
or
sbb
mov
adc
dec
cmp
cmc
bound
jmp
add
add
nop
dec
fnstcw
push
push
test
and
lcall
fdivrs
loope
add
add
mov
adc
decl
insb
push
mov
mov
fidivs
into
jmp
add
dec
adc
pop
push
addb
cli
and
pushl
add
adc
incl
dec
push
aam
sti
sub
call
add
xchg
das
rep
xor
add
xor
add
push
xor
add
inc
add
addl
jl
add
mov
das
jmp
je
push
add
add
add
dec
jmp
sbb
pop
sbb
add
lea
and
decl
sbb
mov
js
push
xlat
lcall
mov
arpl
incl
add
cmp
xor
jmp
add
ljmp
jge
add
add
mov
push
add
mov
cmc
add
add
icebp
addl
add
ds
push
jbe
jecxz
push
nop
pop
jae
pushl
ljmp
cmc
jnp
inc
add
add
aas
push
add
cltd
out
mov
fisttpll
add
les
insb
ds
dec
rcl
push
add
add
mov
arpl
dec
out
mov
loopne
movb
xchg
addb
add
pushl
add
incl
aaa
mov
cli
jl
xchg
or
inc
add
add
mov
add
imul
cmc
jo
mov
add
call
push
sub
loop
icebp
or
inc
add
add
mov
mov
add
inc
add
in
cmc
fisubs
add
jae
call
decl
jns
cld
xor
jp
data16
add
or
add
stos
dec
mov
rolb
add
xchg
push
add
pop
popf
xchg
ret
add
mov
xchg
call
movsl
add
or
xor
roll
add
and
cwtl
add
or
sbb
lahf
adc
lcall
int
add
ljmp
add
popa
add
add
call
pop
inc
add
imul
fsubrs
idivl
fsubrl
push
fs
add
cmc
sbb
sub
and
lcall
pop
jl
add
sbb
popa
add
mov
mov
push
add
adc
mov
add
inc
add
insl
movsb
add
loop
sbb
aas
nop
mov
fadd
add
sbb
mov
dec
out
jle
fnstcw
pop
add
aaa
ja
add
add
pushl
add
sbb
fstpt
je
add
ljmp
add
mov
and
decl
mov
mov
add
shlb
add
arpl
call
mov
int
add
sti
pusha
add
aaa
dec
sbb
iret
fs
das
and
dec
xor
ljmp
xor
cli
mov
add
push
insl
jnp
jp
add
mov
push
mov
add
add
jmp
add
cmp
fnsave
aas
mov
nop
xor
lcall
mov
xchg
js
adc
in
movb
add
movl
pop
add
add
sbb
mov
adc
jmp
add
jg
add
in
cmpsb
add
add
mov
add
dec
data16
out
ljmp
cmp
add
daa
add
lcall
add
dec
mov
test
lcall
aas
sbb
neg
test
scas
xchg
jns
add
addl
add
pop
mov
imul
call
add
jl
add
and
lcall
or
adc
push
loopne
xchg
jo
clc
fsubs
in
push
and
mov
sti
decl
dec
mov
add
ret
and
ljmp
fildll
dec
and
jmp
add
enter
decl
add
add
dec
rolb
add
mov
dec
iret
jae
cmp
ljmp
inc
add
ret
add
add
out
cmc
push
add
sub
pop
jg
in
ret
add
stos
or
add
lods
mov
enter
pushl
sub
mov
add
aaa
out
xchg
pop
xchg
cld
in
and
dec
imul
sub
add
mov
incl
call
pushl
incl
nop
hlt
pop
inc
add
repz
or
pushl
lcall
pop
shrb
fdiv
xchg
cmc
push
and
decl
jae
ljmp
xchg
rclb
add
cmp
adc
stos
cmovg
js
mov
add
or
decl
add
das
iret
js
ret
add
mov
add
jp
sbb
out
inc
add
movl
dec
dec
inc
add
jb
incl
sahf
adc
pushl
sbb
sbb
add
jne
lds
and
ljmp
insl
mov
add
push
lcall
dec
arpl
call
out
cmpsb
add
add
repz
icebp
repz
ljmp
xchg
mov
add
xchg
iret
daa
add
jecxz
jb
pushl
lcall
add
cmp
xchg
ret
add
add
das
mov
repz
add
add
sbb
sti
adc
lcall
push
pop
popa
add
mov
add
or
std
lods
stc
jae
ljmp
ror
mov
addb
add
dec
cld
out
cmp
add
and
or
add
push
add
fcoms
add
divb
test
add
pop
mov
jl
decb
add
fs
jge
nop
mov
add
int3
repz
loopne
xchg
data16
cmpsb
add
add
mov
add
mov
or
jl
add
cmc
pop
mov
mov
add
insl
xchg
jns,pt
push
cltd
mov
decl
cli
cmc
fsubs
add
lret
add
mov
add
add
add
mov
push
add
imul
jae
incl
pop
push
pop
add
push
out
jge
or
jb
pushl
add
xchg
mov
pop
mov
xor
call
fsubl
out
addb
cmp
pop
aam
outsb
filds
add
add
fisubrs
add
loopne
mov
mov
aas
rolb
add
out
adc
and
ljmp
inc
add
cs
pop
addb
add
add
std
jae
call
in
nop
inc
add
ficoml
jmp
add
lcall
add
pop
jp
add
mov
stc
ret
mov
call
add
mov
push
add
pop
sarl
jmp
add
call
jns
xchg
or
add
cli
xor
decl
add
movb
add
jmp
out
mov
in
xchg
push
pop
add
sbb
xor
push
rolb
pushl
std
int3
leave
insb
pop
xchg
repz
aam
add
mov
add
out
negl
repz
lcall
loope
test
add
rolb
add
add
xchg
mov
sub
lcall
loop
fsub
add
cli
push
inc
add
leave
pop
inc
add
out
in
data16
dec
dec
ljmp
jmp
call
incl
pop
test
push
add
mov
push
jp
int
and
fadds
dec
inc
add
push
mov
add
imul
add
xor
call
dec
icebp
dec
loop
stos
jecxz
xchg
adc
sub
sbb
imull
repnz
sbb
cs
inc
add
mull
add
add
mov
add
xor
call
out
sub
add
sti
or
imul
mov
add
add
add
roll
push
and
fimull
add
push
movl
or
int3
imul
cmp
ds
dec
cmc
adc
add
les
inc
add
icebp
lret
jmp
jle
push
sbb
sub
mov
add
popa
add
push
add
mov
add
aaa
jle
insb
jp
lea
int
add
stos
lods
xchg
xor
ljmp
dec
inc
add
mov
pusha
add
test
shlb
rclb
add
jne
repz
fucompp
cmc
or
push
jmp
shll
add
add
add
mov
add
ficoms
call
or
add
add
pushl
decl
or
add
adc
call
xchg
inc
add
mov
imul
pop
push
fmull
add
push
xlat
adc
lcall
lods
aad
jo
dec
loopne
mov
aas
je
add
sbb
or
ret
add
add
cmc
sbb
add
out
sub
aam
add
cwtl
cld
bound
cmp
push
jbe
jno
push
or
jbe
fst
cmpsb
add
add
push
add
mov
sub
imulb
xlat
or
add
cmp
popf
dec
mov
outsb
pop
dec
inc
add
inc
add
add
lea
dec
xchg
sbb
fcmove
popf
or
pop
inc
add
in
sub
jns
or
add
adc
popa
add
leave
push
add
sbb
inc
add
xchg
frstpm(287
add
imul
sahf
mov
repnz
sub
push
data16
add
in
xchg
movsb
add
les
sub
insb
adc
lcall
ljmp
stos
mov
add
call
in
insl
divl
push
add
push
lock
int
add
pop
add
jl
jne
add
incl
add
loope
mov
lcall
ljmp
xchg
add
pop
add
push
out
imul
add
inc
add
xlat
sbb
jbe
mov
add
adc
pushl
add
in
addb
add
pop
jae
dec
lods
addl
out
xor
lcall
add
push
hlt
out
pop
pop
jb
jge
add
roll
add
add
pop
add
and
call
cld
arpl
call
mov
add
popa
add
cmp
sahf
scas
mov
push
inc
add
test
movl
xchg
int3
cltd
sbb
btc
in
jb
mov
decl
and
fldenv
in
jb
dec
mov
shll
add
les
loop
test
mov
rcrb
js
rorb
add
mov
add
mov
out
cltd
pop
jns
mov
and
call
xchg
out
add
lret
add
adc
lcall
call
add
pop
inc
add
mov
jmp
sbb
addb
add
push
xor
push
push
add
jmp
add
adc
lcall
lds
pop
int3
pusha
add
inc
add
sbb
in
pop
ret
add
pop
mov
outsl
lds
fiadds
add
xchg
aad
push
pop
ret
add
and
lcall
call
paddw
fsubl
pop
adc
ljmp
xchg
mov
scas
inc
add
mov
add
adc
cmp
add
mov
mov
dec
loope
movsl
add
jns
xor
jmp
addl
mov
add
cmc
pop
add
add
sbb
call
pop
mov
aaa
mov
add
pusha
add
or
add
inc
add
adc
data16
loop
fwait
jno
call
incl
outsb
xchg
xor
lcall
add
incl
incl
movb
add
daa
add
data16
sbb
sub
test
inc
add
std
daa
add
je
jge
add
pushf
add
jmp
std
jmp
jae
jmp
add
or
decl
add
or
push
xchg
int3
inc
add
aad
add
add
lcall
mov
add
sub
add
les
sub
sti
lret
add
lahf
cmc
jl
add
mov
add
add
xchg
fisttps
lods
addl
pop
out
inc
add
push
into
popa
add
jmp
loope
addl
idivl
add
and
mov
add
jo
dec
in
lret
imul
lcall
in
xor
call
cmp
add
add
add
xchg
and
fisubs
jg
add
sub
dec
sahf
enter
xor
call
mov
stc
movsl
add
lock
add
ds
mov
add
mov
dec
pop
cld
inc
add
sub
arpl
jmp
add
loopne
xchg
in
arpl
incl
add
mov
add
out
mov
aam
add
decl
add
xor
cs
ud1
call
test
add
add
xor
jmp
add
add
add
nop
testb
cmp
cmpsl
add
sti
mov
pusha
add
adc
inc
add
jbe
cmp
scas
lea
add
cmp
xor
mov
add
dec
mov
add
push
add
lcall
fcmovnu
jp
add
pushf
inc
add
add
popa
add
jae
jmp
fidivs
fptan
add
lcall
and
push
sub
mov
divb
les
pop
or
add
decl
add
std
add
ljmp
pop
loope
mov
addl
add
sub
sub
adc
inc
add
cld
jbe
repnz
add
inc
add
pushl
arpl
fidivl
add
scas
cmpsb
add
or
add
mov
shlb
ljmp
jle
lcall
pop
in
cmpsb
add
add
arpl
decl
adc
cltd
jecxz
adc
lcall
jl
das
addb
add
push
test
pop
movb
mov
add
jae
mov
mov
inc
add
mov
add
mov
add
je
add
icebp
push
add
mov
add
mov
nop
pop
dec
scas
mov
xor
jmp
decl
push
add
std
cld
idiv
or
add
out
xor
sbb
push
add
int3
repnz
add
out
dec
and
out
mov
adc
ljmp
add
and
dec
mov
dec
jnp
add
add
decl
and
jnp
add
xchg
stos
ds
xchg
loopne
iret
lret
xor
call
jl
add
pop
jne
imul
xchg
and
add
roll
dec
adc
push
add
pushl
add
and
imul
fldt
add
rolb
jp
inc
add
mov
cmp
gs
mov
mov
lcall
xchg
ds
adc
jmp
mov
sub
ret
dec
mov
ljmp
cmc
inc
add
cs
pop
pop
ret
pusha
add
fsubrs
movsl
add
add
dec
cmp
add
add
xor
add
incl
ret
add
add
mov
add
lret
ljmp
add
jmp
fdiv
sub
add
add
add
loop
dec
js
cwtl
xor
cmp
lock
rolb
popf
imul
jne
or
lds
ljmp
add
mov
mov
jg
add
add
cmp
add
pushl
cmc
or
mov
mov
push
addl
pushl
add
call
int3
push
mov
out
lock
sarl
or
push
add
xchg
pop
xchg
mov
add
testb
imul
add
pop
xor
add
add
incl
jnp
js
insb
mov
add
mov
add
outsl
jns
jo
call
arpl
jmp
add
dec
adc
js
ljmp
add
out
aas
sub
push
movsb
add
and
ljmp
add
push
add
int3
repnz
lret
mov
add
dec
add
incl
mov
add
add
push
add
add
ljmp
je
add
loopne
inc
add
roll
add
add
shlb
add
cwtl
popf
jb
decl
add
sub
pop
movsb
add
mov
mov
push
ret
add
nop
ret
add
xor
pusha
add
lret
xor
ss
add
scas
call
cs
pop
add
pop
push
add
push
add
pop
jmp
add
dec
sbb
data16
xlat
cld
je
ja
mov
add
addl
fistps
add
pop
movsb
add
add
pushl
pushl
pushf
xor
movl
test
aad
add
test
pop
inc
add
and
call
push
add
int3
wrmsr
add
inc
add
xor
lcall
adc
incl
add
push
add
mov
xchg
or
ljmp
lcall
and
lcall
add
add
dec
mov
push
jecxz
mov
mov
sub
push
xlat
insb
in
arpl
lcall
add
iret
add
pushl
outsl
addl
add
sbb
iret
lahf
mov
repnz
add
roll
scas
push
add
xor
fsubp
add
addb
repz
iret
mov
inc
add
loope
xchg
imul
add
mov
pop
add
dec
or
xchg
movb
inc
add
add
and
decl
inc
add
sti
insl
test
js
add
adc
decl
fbld
cmp
push
mov
lock
add
add
je
stos
mov
jb
ljmp
inc
add
loope
inc
add
push
add
rorl
into
xor
jmp
enter
bound
fsubl
in
out
mov
lock
inc
add
inc
add
add
dec
aas
mov
add
fwait
jge
xchg
jmp
pop
add
dec
or
mov
add
int3
jl
jmp
lea
add
cs
in
xor
call
imul
add
inc
add
popa
add
inc
add
push
lret
push
mov
fucom
add
add
jmp
sbb
add
mov
add
les
sub
add
add
add
incl
jmp
add
ja
loopne
scas
jne
rolb
push
pop
dec
xchg
lods
xor
call
add
jge
test
push
mov
add
outsb
mov
push
add
por
mov
ja
iret
data16
jae
incl
je
pop
dec
mov
add
add
scas
ss
pop
addl
add
insb
mov
sti
cld
into
adc
inc
add
add
loopne
stc
addl
add
stos
arpl
call
add
add
pop
inc
add
adc
jmp
sub
popf
jae
lcall
add
in
mov
xor
add
lahf
jmp
lahf
fcmovnu
push
lods
scas
mov
mov
test
shrb
mov
testl
xor
call
add
or
add
jae
ljmp
jae
ljmp
add
jecxz
loop
loop
addb
add
jmp
pop
sbb
add
push
cmp
inc
add
jae
ljmp
into
jge
add
sub
add
pushl
add
test
jge
jns
add
movsb
add
cmp
testb
add
cmp
add
mov
pop
push
divb
push
mov
addb
sti
xchg
sbb
mov
sbb
adc
add
imul
decl
mov
add
sbb
std
jg
movl
inc
add
add
roll
add
jecxz
rcl
mov
add
ficomps
jo
jmp
ljmp
sbb
add
adc
call
add
xchg
pop
cmp
sub
add
fimull
add
cmp
add
push
add
jmp
int
movsb
add
add
push
add
imul
addl
inc
add
nop
imul
or
add
push
lcall
add
decl
add
addb
mov
add
fstpl
lahf
jp
add
xchg
dec
jo
out
movl
jnp
sbb
out
inc
add
call
add
repz
add
dec
jecxz
push
add
test
inc
add
xor
pushl
xchg
and
decl
and
call
fdivrl
data16
add
out
pop
popf
out
pop
addb
dec
cli
stc
add
mov
mov
mov
pop
je
sub
call
jmp
movl
or
hlt
inc
add
push
repnz
outsl
inc
add
outsb
pop
ret
add
decl
inc
add
loop
xchg
roll
sbb
ret
add
addl
mov
dec
inc
add
pop
xchg
addb
add
add
int
loop
scas
adc
or
or
add
add
mov
fists
add
inc
add
add
pop
lods
data16
add
or
add
outsb
ja
adc
lea
add
call
mov
rolb
add
loopne
xchg
fildll
xchg
jl
add
push
add
hlt
aad
movl
int
jmp
add
pop
lret
roll
xor
push
repnz
pop
sarb
add
lcall
sub
stos
add
fcomip
repnz
xchg
xchg
add
ljmp
and
xchg
fbld
add
add
addl
or
enter
popf
int
fsubrs
mov
or
add
lea
movb
ror
ds
add
push
fidivrs
add
addb
push
add
imul
into
mov
rolb
or
mov
in
roll
sahf
popa
add
fsubrs
add
fsubrs
addl
out
mov
sbb
jmp
incl
loopne
insb
xor
paddusb
test
adc
decl
add
sbb
mov
inc
add
lret
jno
decl
mov
pop
call
outsl
mov
movsb
add
add
pop
xor
add
mov
sub
addl
mov
add
dec
push
add
data16
addb
add
addl
add
pop
adc
sub
inc
add
out
pop
les
das
test
mov
ret
push
add
addl
lcall
add
and
in
insb
shlb
arpl
ljmp
outsb
adc
ljmp
inc
add
call
sub
xchg
add
call
outsb
adc
inc
add
fistpll
add
insb
lds
sarb
add
stos
roll
jp
add
mov
add
xchg
cli
out
js
repnz
cmp
pop
add
and
ljmp
push
pop
test
sbb
xchg
mov
add
repnz
cmp
and
push
and
call
cmc
pop
push
add
leave
xchg
jmp
loopne
fildl
add
xchg
in
outsb
push
add
stos
jno
cmp
sbb
aas
add
pop
inc
add
mov
add
jo
inc
add
incl
repz
out
dec
aam
cmp
cmp
add
jmp
add
jecxz
push
add
rclb
add
xor
rorb
lea
lea
jmp
add
mov
lock
das
movsl
add
repz
push
dec
dec
add
pushl
add
dec
push
push
and
ljmp
call
mov
stos
xchg
incl
add
das
jmp
add
ja
mov
add
cmp
push
pop
dec
stos
test
into
mov
or
add
add
mov
and
jmp
xor
out
mov
and
fisttpl
push
mov
addb
roll
not
addb
add
pop
fnstcw
add
inc
add
cmp
std
or
jge
repnz
xchg
xchg
mov
lods
mov
rcll
jns
add
jmp
add
jne
movsb
add
cld
push
jno
decl
enter
jle
add
add
xor
call
mov
decl
add
ljmp
push
mov
fisttpll
cmp
and
xchg
fwait
add
add
add
arpl
incl
jmp
or
mov
add
pusha
add
fsub
add
inc
add
xchg
roll
call
add
dec
push
mov
add
add
add
ljmp
add
pop
pop
insl
enter
pushl
les
rcrl
out
add
push
add
adc
ljmp
sti
push
mov
pushl
xchg
and
ljmp
cmc
mov
aaa
dec
ss
cwtl
add
call
add
imul
add
push
fldenv
add
inc
add
je
sub
add
fistpl
in
mov
xor
call
add
sub
pop
jbe
mov
mov
ss
icebp
jmp
add
popf
mov
jmp
jae
pushl
pushl
sahf
dec
inc
add
push
add
filds
inc
add
mov
mov
pop
test
mov
push
add
jg
out
lock
add
lret
fisubl
add
cmpsb
add
in
sarl
xchg
fcmovu
lock
lcall
pushf
roll
jo
incl
inc
add
das
mov
add
mov
pop
mov
xor
daa
add
pop
inc
add
mov
add
add
test
jle
add
add
mov
aam
add
rolb
inc
add
lahf
ljmp
add
decl
sub
mov
add
hlt
or
push
stos
cmpxchg
pushl
add
int
jno
push
js
add
sub
xor
pop
inc
add
ss
mov
cli
sub
add
add
add
addl
adc
decl
mov
cmp
roll
int
add
add
dec
ja
add
scas
mov
in
pop
sbb
add
push
add
jb
incl
add
stc
xchg
mov
incl
adc
incl
add
shlb
add
mov
out
aam
pop
add
incl
add
jno
cmpsl
add
mul
add
scas
add
lods
sahf
cmpsb
add
add
call
call
pop
pop
mov
aad
inc
add
rolb
out
aam
mov
jl
popf
dec
mov
mov
cli
shll
jp
pop
scas
inc
add
inc
add
add
dec
xchg
jp
add
lret
cmp
xor
lcall
add
add
push
scas
mov
loope
movb
jo
jmp
add
push
cmp
dec
clc
push
filds
add
push
push
and
jmp
add
cmp
aaa
es
sub
addl
fadds
add
inc
add
jge
js
push
add
mov
add
mov
add
add
jno
call
ljmp
arpl
call
add
scas
nop
pop
aas
push
jno
call
decl
sbb
fwait
sbb
pushf
adc
ljmp
repz
andnps
daa
add
outsb
cwtl
movl
call
jo
ljmp
adc
jmp
xchg
pushl
mov
xor
dec
dec
and
jmp
add
and
incl
call
jmp
add
fcomp
dec
and
dec
lock
scas
or
add
je
add
sbb
inc
add
jmp
add
pop
lret
nop
movl
add
inc
add
or
push
add
int
lock
fcoms
xchg
dec
jnp
add
add
push
dec
sbb
leave
fistps
jl,pn
add
sub
pop
dec
sti
call
iret
cmp
ret
mov
notb
add
pushf
addl
lods
cmpsl
add
add
bound
call
loop
add
incl
pushl
lds
push
add
cwtl
xor
lcall
add
add
movsb
add
pushl
add
jo
push
inc
add
xchg
icebp
lods
dec
pop
inc
add
aam
add
loop
pop
push
test
mov
jb
decl
add
decl
mov
test
addl
imul
pop
pop
addb
push
add
cmp
push
inc
add
out
lcall
mov
decl
add
in
frstor
add
add
add
cmc
sbb
shr
repz
xchg
push
jle
add
mov
push
lret
decl
aaa
xchg
stos
test
add
out
in
pop
push
dec
pop
add
add
xchg
or
mov
mov
incl
incl
add
push
mov
in
pop
popf
std
mov
into
enter
mov
add
add
add
adc
lea
dec
imul
outsl
sarl
outsb
in
js
add
jae
lcall
dec
pushf
xchg
mov
enter
in
xchg
xchg
pop
cmp
adc
call
mov
add
mov
add
test
push
mov
sahf
cmp
xchg
cld
dec
insb
out
mov
add
sub
jnp
add
dec
add
call
add
lret
pop
rclb
add
pop
sbb
ljmp
add
mov
add
adc
stc
mov
test
das
ds
add
and
incl
ljmp
cwtl
mov
sub
insl
mov
call
jl
out
cwtl
pop
add
mov
xchg
addb
mov
add
dec
push
add
xchg
lds
xchg
jle
mov
xor
dec
stos
fisttps
push
inc
add
pop
popa
add
pop
out
cmc
xor
cli
inc
add
mov
add
add
jmp
add
call
or
lods
in
pop
jp
add
dec
or
xor
incl
add
dec
and
jmp
add
incl
push
bound
call
dec
lods
lock
add
cmp
in
popa
add
add
ljmp
add
inc
add
call
add
cltd
adc
fmuls
add
add
add
popf
inc
add
cmp
push
add
jb
clc
pusha
add
cmp
add
inc
add
cmp
pop
and
mulb
cmp
jo
jns
mov
pop
jl
pop
sub
notl
fstpt
inc
add
adc
add
lock
add
and
ljmp
add
mov
push
outsb
lea
add
push
add
jl
pop
xchg
fmulp
mov
in
add
decl
addl
add
jle
add
stc
pop
cmc
adc
jns
movb
add
jmp
cmc
mov
add
adc
pushl
add
bound
incl
push
arpl
ljmp
nop
dec
popl
add
fldenv
add
ss
add
or
hlt
cmc
and
decl
mov
iret
fnstenv
add
add
nop
nop
mov
arpl
pushl
jne
add
add
call
mov
rolb
test
je
pop
add
add
call
sti
add
or
pop
movsb
add
add
mov
add
insb
sti
pop
push
xor
jl
add
xchg
stos
loope
push
pushl
cmpsb
add
sbb
and
inc
add
add
push
add
xor
call
test
cmpsb
add
add
lds
sbb
inc
add
insb
sub
add
add
add
dec
stc
inc
add
test
add
and
call
shlb
call
imul
add
mov
fdiv
lods
decl
add
add
push
cli
mov
add
add
stc
adc
call
push
or
adc
jmp
add
int
pop
or
movsl
add
add
pop
in
test
jns
xchg
movsl
add
mov
cmp
mov
decl
addb
mov
pop
cltd
nop
movb
add
int
incb
incl
jge
outsb
daa
add
call
xchg
loopne
addl
clc
imul
sub
test
ljmp
sbb
add
ljmp
add
pushf
inc
add
jl,pn
add
enter
in
inc
add
int3
mov
or
rorl
add
testb
repnz
adc
incl
add
mov
xor
incl
decl
int
movb
add
dec
xor
decl
jae
push
je
add
add
test
add
sub
add
add
jg
xchg
mov
or
cltd
or
not
scas
int
add
dec
xchg
xor
scas
lcall
sub
xor
lcall
lret
pop
shlb
mov
add
decl
add
sbb
ret
add
cmp
add
add
stc
cld
add
negl
jno
ljmp
lock
cmc
les
pop
push
lcall
pop
fiaddl
add
add
cmp
pushf
iret
xor
jp
add
add
ss
sahf
jmp
add
ds
fimuls
sub
dec
stc
jmp
add
adc
incl
add
add
incl
incl
icebp
and
jl
push
add
out
cmp
jl
add
adc
xor
lcall
rcrl
cmpsb
add
add
decl
add
add
ficompl
add
add
jns
pop
xchg
push
push
add
jae
lcall
mov
js
dec
push
fidivrs
in
lea
icebp
int3
sbb
sbb
adc
cmc
xchg
sub
data16
add
insb
or
in
and
in
notl
pushl
jmp
add
bound
ljmp
add
or
in
addb
add
cmc
loop
movsb
add
sub
add
decl
add
add
jns
sbb
pop
add
add
aad
sub
idivb
push
add
test
loope
and
cmp
cmp
add
lds
cli
ret
add
and
decl
mov
add
add
decl
adc
call
jge
cltd
add
lcall
ret
add
jmp
add
outsl
fistpll
stc
lods
aas
or
jp
fstpt
incb
jmp
inc
add
dec
jle
or
lea
add
push
add
loopne
adc
cmp
add
xor
movsl
add
add
or
push
scas
movsb
add
push
add
ja
xor
lcall
decb
dec
js
add
xor
add
cmp
std
fcoml
stc
bnd
add
mov
add
ljmp
push
pusha
add
popf
sub
mov
out
sahf
xchg
dec
pop
dec
jns
leave
xor
dec
lcall
lahf
aad
les
cs
mov
es
flds
sub
enter
inc
add
add
ljmp
incl
push
pop
jge
scas
jle
add
pushl
add
jmp
pop
push
inc
add
test
outsb
and
jg
adc
jnp
add
jmp
mov
mov
xor
decl
je
lcall
inc
add
add
scas
sahf
test
xchg
pcmpeqb
lcall
call
add
adc
jmp
mov
dec
or
decl
sbb
enter
add
adc
lcall
add
fwait
mov
add
fisubs
xchg
in
hlt
jp
xor
ljmp
roll
add
pop
pop
test
insb
xchg
xchg
or
sub
testb
xor
jmp
add
xor
push
jle
add
jns
pusha
add
mov
add
jae
inc
add
mov
push
add
out
cmp
lcall
adc
inc
add
nop
fisttpl
add
adc
decl
fisubrl
or
rolb
cld
inc
add
cmp
out
adc
mov
imull
add
add
out
pop
sub
add
add
cmp
cmp
jmp
add
xchg
faddp
add
out
add
ljmp
jge
add
sub
jecxz
push
add
and
ljmp
mov
jge
push
add
int
xor
add
add
pop
inc
add
inc
add
pop
sub
mov
cmp
add
mov
movsl
add
jp
in
add
decl
xor
add
mov
add
add
add
mov
add
mov
push
add
mov
add
add
inc
add
add
add
dec
dec
stos
add
call
out
clc
loop
inc
add
imul
cmc
scas
movb
leave
scas
sti
inc
add
shr
push
popa
add
push
aam
fwait
cmc
push
sbb
pextrw
add
clc
das
movl
add
fstpl
mov
dec
jmp
add
iret
mov
mov
add
add
add
and
xor
decl
inc
add
icebp
rolb
rclb
jmp
xchg
xchg
jmp
and
jmp
add
call
add
xor
jmp
call
fisttps
rclb
addl
aas
addb
sub
lds
ss
sbb
adc
push
jmp
push
add
or
add
lcall
ret
add
adc
jmp
add
lcall
nop
mov
xor
jmp
jmp
add
jo
call
rorb
mov
and
jmp
je
mov
dec
addb
repnz
add
lds
push
mov
pop
addl
add
xor
pushl
add
push
in
iret
data16
outsl
arpl
ljmp
add
cli
cmc
xor
jmp
add
ljmp
out
hlt
call
fdivp
mov
add
les
sti
jae
inc
add
cmpsl
add
add
add
add
add
add
test
fidivrs
mov
add
ljmp
add
movl
test
in
dec
mov
xor
jmp
add
call
aas
int
sahf
aas
ret
add
add
les
sar
imul
add
clc
adc
insl
in
xlat
int3
cli
imul
jo
decl
sti
cwtl
push
add
add
inc
add
add
data16
dec
ljmp
pop
fdivs
call
decl
add
fs
outsb
push
shll
add
aaa
out
fisttps
add
add
xor
call
add
mov
add
cmpsl
add
add
add
inc
add
dec
jmp
div
inc
add
add
cld
sub
pop
pop
or
popa
add
jne
mov
add
push
add
imul
adc
call
add
push
and
jmp
add
xor
incl
and
into
lock
lret
jecxz
push
add
and
ljmp
add
jae
lcall
pusha
add
mov
add
ja
out
jno
pushl
add
mov
enter
call
decl
ds
fwait
add
dec
mov
call
xor
ljmp
sahf
push
add
push
xchg
jecxz
add
roll
mov
jle
add
mov
push
aad
inc
add
add
jno
call
push
movsb
add
addl
add
add
mov
mov
hlt
repnz
call
mov
add
add
xor
call
add
sti
add
lcall
dec
movb
or
lds
mov
mov
add
add
lods
addl
push
adc
out
roll
lret
in
dec
add
mov
add
jmp
adc
add
aas
shll
mov
into
pushf
or
std
cmpsb
add
stos
div
lods
adc
ljmp
aaa
xor
decl
cmc
pop
mov
pop
sub
enter
pop
mov
add
lcall
aad
ficoms
jmp
add
xchg
mov
lods
jle
add
incl
push
and
pushl
xchg
dec
cld
mov
jle
dec
push
add
movb
mov
xor
lcall
add
jmp
mov
and
cmp
push
add
call
jl
je
add
sbb
jg
pop
pop
inc
add
ds
mov
lds
insl
pop
inc
add
adc
cmp
or
add
sbb
cwtl
nop
mov
movsl
add
inc
add
push
sbb
push
dec
repz
int
add
mov
sub
adc
ljmp
cs
adc
incl
jge
cli
fucomi
aas
arpl
incl
add
add
mov
ljmp
ds
insb
dec
lea
call
add
into
insl
call
add
add
push
add
jns
in
fwait
add
push
pop
clc
into
xor
jmp
adc
inc
add
inc
add
pop
adc
pushl
clc
leave
stos
rolb
jg
test
into
mov
lret
add
cmpsb
add
push
add
mov
add
adc
rcl
icebp
icebp
inc
add
cmc
mov
add
in
scas
jo
cli
push
add
add
movsl
add
push
jle
ret
add
push
push
rolb
ret
add
add
ljmp
rolb
mov
add
cmc
cli
adc
lcall
xlat
dec
dec
jns
jne
fcoms
add
and
cmp
xchg
mov
incl
loopne
mov
add
decl
and
inc
add
aad
rolb
add
add
insl
js
add
mov
sub
pop
ret
add
out
xor
pushl
add
data16
dec
fadd
add
add
cmpsl
add
add
les
mov
push
add
push
add
das
and
jmp
add
add
addb
lret
nop
outsb
or
mov
in
mov
add
inc
add
data16
add
bound
dec
inc
add
push
pop
addl
or
cltd
sti
jg
add
and
pushl
add
insb
test
add
jmp
add
xor
in
data16
add
jnp
sub
add
add
call
lea
jl
xchg
in
lds
push
js
pop
pop
dec
adc
test
xchg
mov
add
lcall
add
leave
mov
clc
mov
jmp
add
sbb
add
add
popa
add
inc
add
xchg
scas
pop
add
push
lods
std
dec
lods
js
rcr
xchg
movsl
add
add
leave
pop
add
inc
add
pop
add
cmp
mov
mov
pop
dec
in
in
popa
add
stos
xchg
std
cmp
add
add
dec
ds
push
inc
add
decl
xor
fbld
add
jmp
adc
add
add
call
je
add
rolb
hlt
inc
add
add
addb
lea
add
lcall
aaa
movb
dec
cwtl
jno
push
roll
add
add
sti
imul
dec
sub
fstps
push
add
add
pop
icebp
adc
mov
jne
cmc
pop
iret
in
mov
dec
pop
insb
out
or
xchg
lcall
fnsave
call
loop
xchg
in
cmp
int
imul
add
push
mov
cltd
push
add
inc
add
ja
cmpsb
add
add
lcall
scas
mov
outsb
or
call
add
test
sahf
fldt
in
shlb
add
clc
loop
xchg
adc
decl
or
xor
pushl
or
add
add
add
add
cli
mov
shl
add
jbe
ret
xchg
repnz
int
jne
jbe
add
dec
arpl
jmp
fcomip
xchg
test
add
adc
lcall
xchg
jno
pushl
jmp
jo
incl
ja
add
lods
mov
add
or
inc
add
xchg
xchg
imul
add
add
rorl
jno
dec
push
je
mov
imul
jmp
add
ljmp
add
or
or
add
add
decl
loopne
bound
pushl
add
xchg
pop
aam
xor
cmp
ljmp
mov
add
dec
cmpsl
add
jb
inc
add
adc
jmp
add
inc
add
mov
add
ret
add
add
add
fldl
ljmp
es
add
roll
test
cs
sub
dec
push
add
add
dec
jge
add
pusha
add
and
call
cmp
decl
ret
add
dec
hlt
or
cmc
scas
ffreep
add
sbb
mov
add
arpl
incl
aas
into
rol
add
dec
fldl
add
outsb
outsl
out
pop
jns
ret
add
add
cmp
jno
lcall
mov
call
add
xor
call
cmp
cmpsb
add
mov
xchg
int3
div
les
xor
ljmp
add
mov
add
add
pop
push
sbb
inc
add
test
add
add
lock
inc
add
add
inc
add
mov
add
ljmp
inc
add
fcoms
sbb
add
jmp
pushl
mov
icebp
or
add
jmp
add
sub
out
lock
pmuludq
pop
hlt
lods
adc
add
out
cmc
insl
lahf
addr16
add
add
sbb
pop
add
add
outsb
sbb
cmp
and
fwait
mov
add
pop
pop
pop
jl
add
dec
loope
and
ljmp
scas
mov
sbb
push
mov
movl
aaa
push
jmp
mov
add
add
iret
repz
cltd
jb
call
movl
adc
call
daa
add
xchg
sub
lahf
pop
jnp
lods
sbb
lea
add
xchg
jg
les
popa
add
enter
adc
add
decl
xchg
aaa
push
dec
pop
int3
mov
add
jbe
mov
pusha
add
jge
movl
js
add
add
pushl
imul
add
add
fwait
mov
lret
add
push
add
outsl
stos
cli
jp
cmp
lods
lods
cli
popf
imul
in
adc
add
push
push
sbb
out
inc
add
xor
mov
lcall
insl
icebp
nop
xchg
mov
lahf
outsl
mov
nop
sbb
mov
add
lcall
jmp
cmp
adc
mov
cmp
xor
loop
add
add
test
mov
jns
inc
add
sub
add
cmp
add
adc
decl
mov
mov
repnz
pushl
add
push
cltd
mov
addb
hlt
dec
lcall
and
mov
lret
clc
dec
pop
outsl
jne
pushf
imul
add
mov
mov
cmp
dec
lock
dec
push
scas
and
pushl
push
inc
add
push
jecxz
sub
jmp
add
rolb
call
jmp
add
push
pop
lods
repz
cld
aaa
aad
xchg
popf
cld
icebp
mov
xor
pop
rolb
int3
fimull
movl
call
in
into
inc
add
data16
xchg
sti
xlat
sbb
sub
add
pushf
imul
xor
jle
pushf
lret
add
repz
xor
decl
pop
hlt
loope
jg
add
addr16
inc
add
ret
add
ja
mov
std
and
jmp
call
imul
sbb
incl
xchg
add
push
add
fst
jb
ljmp
add
lsl
cmp
add
xchg
add
call
pop
add
push
insl
mov
jne
mov
cmc
sub
add
add
sti
adc
cmp
dec
add
out
out
xor
call
pushl
sbb
aas
and
call
pushl
add
add
popf
enter
xchg
gs
dec
cmp
popl
aad
roll
pop
add
sub
push
xor
decl
adc
pushl
add
dec
or
sahf
mov
add
add
jmp
add
jle
add
leave
mov
pop
inc
add
mov
sarb
sub
add
cmp
push
or
jge
push
add
add
jmp
jne
push
cmp
add
cmp
xchg
sahf
pushl
out
lock
call
sub
xlat
bound
decl
fists
in
jg
mov
add
loope
fidivl
add
sub
not
pushf
stos
dec
pop
dec
pop
mov
stc
jge
jp
mov
adc
jl
outsl
mov
add
flds
loope
ds
add
jbe
jl
add
mov
xlat
sbb
decb
xchg
cmp
adc
mov
loope
nop
daa
add
add
add
fldenv
rolb
aaa
sti
jle
push
mov
mov
mov
and
jmp
add
jmp
adc
add
mov
or
or
push
icebp
mov
mov
incl
lcall
add
sbb
add
jns
add
mov
test
xchg
mov
dec
shr
sub
add
int
add
sbb
ficoml
out
lds
dec
repnz
xchg
fildl
add
mov
add
add
pusha
add
movl
mov
mov
add
incl
add
xchg
fldcw
aas
hlt
testl
or
daa
add
daa
add
sbb
xor
daa
add
fstpt
call
jge
addl
lahf
dec
mov
adc
dec
xor
dec
outsb
into
test
cwtl
mov
add
mov
cmc
rcll
lcall
inc
add
add
add
pushl
ljmp
jbe
add
data16
jne
add
int3
xchg
movl
int
add
data16
incl
add
stos
iret
loopne
xor
decl
inc
add
add
jnp
add
xchg
push
clc
pop
jns
mov
mov
mov
flds
dec
cld
mov
push
add
loope
aam
add
mov
add
add
outsb
inc
add
movl
mov
add
add
std
mov
lods
sub
add
mov
loopne
bound
ljmp
mov
addb
nop
loope
movl
loope
push
int
pushf
dec
mov
sahf
push
mov
mov
pop
hlt
mov
add
stos
adc
jns
test
movb
jae
jmp
roll
jo
ljmp
sub
call
add
faddl
repnz
add
stc
dec
das
lods
add
cltd
fdivrl
add
sub
cmpsl
add
add
ja
ljmp
dec
insb
sub
jmp
jge
adc
jnp
inc
add
movl
mov
add
lock
jne
push
add
mov
mov
add
in
adc
mov
adc
daa
add
outsb
push
arpl
jmp
add
pop
or
cmp
xor
call
push
add
inc
add
pop
lea
jmp
dec
js
add
call
jecxz
mov
cmpsb
add
popa
add
mulb
add
xchg
inc
add
imulb
cmp
add
movsl
add
xchg
cli
fildl
add
sub
add
ja
add
test
add
aad
or
mov
add
push
add
in
xchg
jp
mov
ror
bound
decl
add
dec
popa
add
addl
add
lock
xor
pushl
add
push
add
jl
add
jg
push
jmp
add
je
xchg
leave
fstpt
add
stos
ret
add
aas
pushf
test
enter
add
loope
inc
add
std
sbb
lcall
mov
pop
mov
call
add
aad
add
iret
loopne
aam
fnstsw
stc
add
ffree
add
add
jp
rcll
push
and
pop
fcmovbe
out
repnz
add
sub
add
sbb
outsl
dec
and
pushl
call
add
ss
insl
xchg
xchg
cmp
adc
mov
add
fucomp
in
push
add
test
out
or
add
sub
les
test
cli
pop
xor
lcall
add
ljmp
jnp
fadd
add
jnp
mov
mov
mov
sub
int
mov
add
jne
push
inc
add
inc
add
imul
push
scas
inc
add
jo
decl
add
add
mov
add
and
ljmp
or
add
lds
mov
jge
mov
mov
add
dec
mov
add
add
mov
incl
add
icebp
xchg
mov
sbb
cmpsl
add
adc
mov
jnp,pt
sahf
cmp
xchg
nop
mov
push
ljmp
in
loop
sti
mov
add
sahf
push
rcrl
add
iret
mov
add
movb
add
xchg
jmp
add
push
adc
pushl
test
or
xchg
in
push
add
and
ljmp
lods
or
jo
jmp
call
jle
add
call
lcall
or
data16
add
add
push
add
sbb
insb
sub
ja
add
jecxz
loopne
daa
add
ljmp
mov
adc
loope
dec
in
sbb
iret
add
pushl
pop
push
add
add
negb
out
cmc
sbb
roll
add
mov
std
fisttpll
les
cmp
add
add
and
add
add
add
add
push
add
inc
add
addb
pop
xchg
ficompl
jb
lcall
mov
mov
push
add
xchg
adc
mov
xor
sti
addl
aaa
loopne
mov
adc
jmp
add
roll
mov
cmp
mov
fwait
lahf
and
call
mov
xchg
add
push
jecxz
lea
mov
adc
inc
add
test
push
sbb
add
pushl
jo
ljmp
add
mov
call
mov
add
add
fsubr
cs
inc
add
pop
dec
mov
add
lcall
add
push
xchg
jnp
xchg
xchg
or
sete
jecxz
loopne
nop
xor
in
sub
jg
add
pop
xor
jns
pusha
add
jge
decl
mov
pand
add
add
jnp
add
jo
incl
add
popf
iret
jbe
lahf
fld1
rolb
add
add
xchg
cltd
dec
imul
popa
add
fldl
add
push
add
inc
add
add
add
add
and
int
and
clc
movsb
add
lahf
mov
cmpsl
add
cmp
lcall
ja
add
loope
inc
add
daa
add
add
je
add
cmp
sub
fwait
lret
add
inc
add
cmp
add
lret
stc
int3
push
movb
add
test
out
ja,pn
add
lods
inc
add
add
jmp
call
and
out
movsb
add
lods
cli
cmp
sbb
add
lea
add
lcall
add
push
imul
mov
add
lcall
add
decl
arpl
ljmp
add
jmp
add
decl
outsl
adc
mov
add
dec
rolb
dec
push
bound
decl
push
add
repnz
jmp
dec
out
or
sbb
and
mov
insl
loope
fdivrl
sahf
jecxz
cmp
add
pushl
mov
dec
mov
data16
add
int
add
shlb
add
insb
pop
and
add
add
add
incl
jmp
ljmp
nop
xchg
mov
add
dec
jb
fidivl
add
or
mov
shr
push
add
xor
add
add
add
xor
decl
bound
jmp
add
scas
push
lret
add
pop
idivb
push
cmpsb
add
inc
add
mov
add
add
iret
ret
inc
add
add
movsb
add
jecxz
test
or
popf
sti
and
pushl
push
lret
les
mov
xlat
cmp
nop
psubq
xchg
lea
or
out
fsub
add
das
cmp
add
mov
pop
push
add
dec
push
in
add
fsubp
add
sbb
std
imul
pushl
add
aas
test
add
inc
add
add
add
rolb
and
lcall
std
mov
add
stos
jno
pushl
pop
and
decl
push
add
adc
aaa
push
xor
jle
pop
arpl
mov
adc
jmp
sbb
pop
jl
hlt
into
loope
test
sub
xchg
mov
add
dec
ret
add
dec
push
add
add
lcall
jp
add
loopne
xchg
int
xchg
mov
test
mov
out
adc
dec
jg
add
lods
dec
mov
cmp
mov
neg
push
push
popf
cmpsb
add
arpl
jmp
xchg
or
in
cmp
imul
cmp
mov
std
pusha
add
insl
stos
das
mov
push
add
add
call
daa
add
push
pusha
add
lds
addl
add
nop
push
or
add
add
das
pop
dec
addb
add
movb
cltd
inc
add
pusha
add
mov
lock
add
jmp
add
push
jp
add
repz
je
add
add
addb
rolb
add
push
push
dec
adc
cmp
lret
push
add
xchg
add
cld
mov
fists
add
xor
inc
add
add
arpl
push
xor
add
sub
jns
push
add
and
pop
sbb
cmc
mov
dec
adc
add
xor
jmp
add
xchg
push
add
add
call
call
call
pop
inc
add
movb
addl
inc
add
jmp
add
and
ljmp
lea
xchg
dec
je
pop
lods
mov
add
cmp
sub
loope
and
jnp
movl
add
cli
test
test
stos
sbb
popa
add
mov
add
int3
jns
add
ljmp
inc
add
pop
add
flds
add
fbstp
add
movsl
add
ret
add
lcall
pop
cmp
in
outsl
in
and
ja
add
pop
add
add
pop
cs
add
sbb
pushf
nop
inc
add
jge
call
add
mov
sahf
xchg
pop
jae
lcall
add
les
ljmp
jno
lcall
imul
roll
ret
add
outsb
aas
add
pop
and
call
pushl
lea
adc
incl
add
pop
push
inc
add
fimuls
cs
adc
icebp
mov
pop
shr
mov
add
adc
add
les
divl
add
push
sti
jbe
js
lret
ljmp
decl
sub
lods
jecxz
addl
add
shlb
add
add
lea
addb
pop
sub
lods
scas
aad
nop
sbb
rorl
add
push
add
mov
imulb
out
mov
decl
add
add
rolb
add
cmpsl
add
add
repz
sub
mov
pop
addl
rorl
jbe
add
imulb
mov
dec
mov
scas
add
loopne
mov
fldt
jne
out
jl
sbb
incl
add
call
xor
push
fbstp
arpl
decl
sub
in
ficompl
xor
jmp
incl
add
leave
add
decl
mov
inc
add
add
nop
push
test
mov
inc
add
cmpsb
add
dec
push
lods
ret
add
add
mov
mov
add
int3
xor
in
xchg
xor
jle
pop
int
add
add
jle
add
add
dec
or
pop
in
sbb
enter
ljmp
mov
sub
add
in
roll
dec
and
incl
aaa
sbb
add
fsubl
add
dec
jbe
add
cmp
xchg
push
add
outsl
pop
mov
sti
stc
pop
cmp
les
or
lahf
out
leave
scas
jle
jl
add
sub
add
lcall
cmc
pop
fwait
loope
xlat
pop
sbb
cmp
dec
xchg
stc
cmp
or
mov
push
add
addl
add
inc
add
lods
inc
add
jge
add
add
and
dec
cli
sbb
inc
add
add
add
and
in
pop
ss
add
das
push
or
inc
add
sbb
add
xor
add
xor
pushl
add
inc
add
je
add
mov
add
pop
jmp
mulb
lahf
les
jns
loop
push
inc
add
addl
add
add
popa
add
or
push
inc
add
xchg
out
in
xor
add
mov
cli
insb
movb
sbb
aas
push
add
mov
mov
inc
add
sub
ret
add
data16
pop
repz
fmuls
pop
add
cmp
pushl
clc
mov
shrl
out
outsl
sub
mov
pop
cwtl
cmp
ds
push
das
outsb
xor
call
xchg
in
sbb
add
xchg
inc
add
pop
pop
jns
add
add
clc
rcll
call
scas
xchg
mov
mov
ljmp
mov
mov
pop
mov
mov
add
ficoms
call
add
sub
add
addl
mov
ljmp
cmpsl
add
lcall
aam
fwait
sub
fcmovnb
add
sar
push
add
inc
add
jb
inc
add
add
add
rolb
xchg
mov
ljmp
xchg
lea
addb
mov
mov
mov
push
stos
lcall
add
add
or
jnp
add
mov
mov
in
add
add
jns
lods
cmp
jg
add
loop
in
fsubrp
xchg
lea
ljmp
les
mov
call
add
int3
cld
push
add
dec
ret
add
dec
push
imul
inc
add
arpl
pushl
add
add
pusha
add
xchg
mov
add
add
mov
scas
xchg
rorl
mov
or
fwait
lods
sbb
mov
add
jge
insl
and
jmp
add
out
popf
pushf
add
jmp
push
bound
pushl
insl
leave
cmp
add
iret
rolb
add
jge
jp
add
dec
xchg
dec
adc
jmp
sti
aad
mov
add
add
in
dec
sub
into
mov
cmp
add
xor
push
insb
xchg
lock
add
inc
add
lahf
jnp
push
out
fistpl
loope
adc
pushl
add
xchg
int3
mov
outsl
cmp
add
sbb
fdivs
ljmp
movl
jo
jmp
lcall
sub
add
fucomi
xor
incl
add
call
decl
inc
add
add
addb
push
add
sbb
jb
call
add
xor
add
nop
shl
rorl
ds
add
add
and
jmp
pushl
jmp
add
xor
push
xchg
rol
add
sbb
add
aaa
push
xchg
aas
and
fdivl
call
adc
ljmp
add
jno
jmp
add
mov
inc
add
inc
add
mov
cltd
push
jg
add
add
add
sbb
dec
loop
ds
insl
repnz
jge
add
decl
pop
add
inc
add
addb
add
xchg
hlt
fmuls
mov
psrad
or
arpl
lcall
cmc
outsb
push
add
fwait
call
pop
mov
sbb
add
dec
clc
pop
hlt
ret
add
add
jp
mov
in
cltd
jno
pushl
add
add
pushl
push
jmp
inc
add
add
call
add
fisubl
jmp
pop
sti
ja
clc
shlb
add
add
jmp
add
push
push
add
cmp
sbb
cmc
mov
cmpsb
add
dec
xchg
mov
or
outsl
cmp
movsl
add
add
jb
jmp
add
incl
mov
add
in
dec
lds
and
decl
inc
add
or
mov
cmp
pop
pop
insl
mov
add
add
