jnp
out
adcl
xor
mov
repnz
fildl
inc
add
and
mov
mulb
sub
repnz
mov
int3
xor
xor
mov
cmp
cmpsl
addb
jo
mov
sub
jb
mov
mov
xchg
cld
pusha
add
inc
add
adc
add
mov
mov
add
mov
mov
ret
push
mov
mov
leave
push
add
cmpsl
aam
jp
lea
mov
lods
cmp
mov
mov
out
sbb
or
xchg
add
add
add
add
add
mov
testl
test
cmp
outsb
aas
and
mov
adc
mov
add
mov
adc
mov
jo
mov
pop
push
sbb
mov
mov
imul
shll
add
pop
mov
mov
pop
pop
sub
mov
mov
dec
push
fidivrl
hlt
cmp
xor
mov
jb
mov
out
test
dec
jecxz
xor
mov
xlat
pop
out
mov
push
sti
dec
addb
out
jmp
pop
or
cmp
aaa
xor
mov
xchg
jb
mov
int3
cmc
test
add
repz
leave
mov
into
in
in
add
rcll
add
xor
add
mov
add
addr16
jecxz
rcl
xor
mov
arpl
mov
sub
and
inc
jp
xchg
xchg
jmp
add
cmp
lahf
ret
das
inc
add
xor
add
pop
push
add
and
mov
dec
mov
sti
xor
mov
add
pop
sub
sub
jmp
add
mov
pusha
add
add
xor
mov
xlat
and
jecxz
mov
cmpsb
notl
xchg
loope
inc
or
mov
mov
mov
cmp
xchg
mov
mov
add
push
aam
xor
jae
outsb
push
roll
push
daa
jmp
mov
dec
in
out
lea
mov
add
or
mov
mov
jl
fstpt
aad
cmc
mov
das
mov
dec
xchg
add
outsl
in
push
rolb
mov
sub
add
inc
add
mov
add
aad
insb
adc
mov
push
xchg
rolb
mov
mov
cmp
xor
dec
jge
pop
inc
adc
mov
add
mov
sbb
jns
add
add
sbb
sub
ret
jo
mov
iret
add
mov
xchg
xchg
add
sub
push
add
add
add
xor
mov
mov
mov
pop
or
mov
mov
mov
and
add
rcr
loope
add
add
jp
mov
push
xor
mov
adc
fwait
das
cmp
fmull
xor
pushf
pop
cmpsb
and
add
stos
cmp
bound
mov
adc
mov
loopne
mov
add
test
or
dec
lds
mov
jmp
pop
into
mov
xor
mov
bound
mov
mov
mov
push
cmp
daa
lock
sbb
add
inc
add
ret
hlt
dec
mov
sahf
rolb
mov
pop
sbb
out
outsl
nop
add
das
jbe
cmp
xchg
add
lds
add
add
sarl
inc
push
sbb
mov
sbb
mov
or
lahf
xchg
jl
pop
pop
mov
push
imul
add
jmp
popa
xchg
push
daa
adc
stos
shll
clc
sbb
jns
xchg
and
imul
cld
loopne
mov
add
xchg
jne
jns
add
bound
mov
aad
fbstp
cltd
sub
in
addb
sub
aaa
sbb
loopne
mov
outsl
hlt
mov
addb
cmpsl
in
es
popa
aas
mov
out
adc
adc
inc
test
add
inc
sbb
add
jnp
mov
add
mov
mov
ret
pop
push
repz
in
or
in
push
fmull
mov
push
mov
insl
mov
addb
imul
std
stos
loop
mov
mov
popl
mov
mov
pop
lahf
sub
add
jae
paddw
jecxz
cli
das
pop
rolb
enter
add
movsb
push
ja
imul
mov
test
mov
add
icebp
fmuls
xchg
dec
sbb
jle
pop
pop
xor
loope
inc
fmulp
ljmp
dec
sub
add
pop
xlat
flds
xchg
das
mov
or
in
sub
add
mov
jg
mov
push
inc
shrl
mov
test
pop
xor
mov
lods
addb
adc
mov
xchg
mov
mov
xchg
sbb
std
jge
out
mov
mov
js
mov
mov
add
imul
jne
jno
jo
mov
and
inc
add
into
or
add
sub
mov
push
cmpsb
aas
xlat
add
mov
and
mov
addb
mov
punpckldq
mov
adc
add
pusha
add
xchg
jb
mov
into
mov
push
cmpsl
mov
and
mov
add
mov
adc
mov
fs
adc
mov
inc
scas
pop
cmp
out
mov
jg
or
ljmp
pop
test
or
aam
pop
jle
or
add
inc
aaa
xor
mov
add
in
jae
push
xchg
sbb
jbe,pt
sbb
test
dec
pop
xchg
ss
add
cs
dec
xchg
add
addb
cli
push
add
mov
mov
mov
sbbl
add
mov
xchg
jp
hlt
xor
inc
add
cltd
mov
cmc
cmp
sbb
mov
sub
jle
adc
cld
mov
mov
inc
int3
out
mov
ret
mov
push
or
xor
mov
jno
insl
adc
mov
pop
into
cmp
pop
mov
mov
jle
adc
mov
mov
sbb
scas
push
popa
cmc
outsl
fsubp
add
jp
add
xchg
add
fildll
sub
mov
and
shll
xchg
adc
add
or
sahf
pop
stos
daa
gs
jb
mov
dec
mov
mov
test
leave
xorl
mov
inc
add
mov
daa
lods
push
aas
addb
fbld
cmp
les
sbb
or
pop
mov
sbb
adc
mov
mov
mov
jmp
jp
mov
cli
add
mov
jae
add
mov
add
lret
cmp
jmp
add
mov
jno
jmp
dec
out
fisubs
add
pop
insb
add
push
and
dec
mov
mov
ljmp
push
mov
int
add
ja
inc
add
and
xchg
fnstsw
in
dec
mov
xor
mov
pop
dec
in
xor
mov
ret
cld
pop
lods
fisttps
aam
add
mov
pop
xchg
enter
pop
bound
mov
aas
mov
enter
sbb
or
sub
jo
mov
or
xor
push
add
int3
mov
pop
dec
push
add
inc
add
add
mov
ljmp
add
push
or
adc
stc
insb
aam
icebp
xchg
pop
pushf
movsb
mov
fmuls
mov
int
das
xlat
or
push
jns
outsl
out
add
ficompl
gs
scas
or
loopne
mov
pop
pop
push
xchg
inc
add
and
movq
movsb
adc
dec
orl
push
test
mov
adc
jnp
mov
mov
mov
aam
push
or
and
stos
lret
push
cwtl
jmp
pop
and
rolb
mov
mov
cmp
push
add
icebp
out
mov
add
andl
addb
jecxz
dec
sbb
sbb
xlat
cs
sub
cmp
jecxz
add
test
mov
ret
sbb
nop
add
sbb
orl
pop
adc
pop
addb
xor
mov
sub
mov
add
mov
repz
stos
inc
xor
sub
jg
insb
std
pop
xlat
cmp
int3
call
addb
outsb
sbb
jo
mov
add
mov
mov
loopne
mov
in
sub
rolb
mov
cld
jl
inc
mov
jle
clc
cs
imul
cmc
rolb
mov
push
scas
sbb
mov
push
filds
mov
push
add
add
xlat
and
add
mov
mov
jl
jae
cmc
sub
cwtl
decl
int
add
mov
add
mov
ja
fnstenv
add
jmp
mov
add
mov
inc
icebp
push
mov
cmpsb
stc
mov
iret
ss
mov
insb
push
push
fimuls
xchg
dec
enter
xor
pusha
add
sub
jnp
add
lea
lahf
dec
test
shl
dec
pop
xor
mov
inc
xchg
sbb
loopne
mov
inc
xchg
test
push
addr16
hlt
adc
adc
push
jl
add
daa
movsb
sbbl
imulb
mov
add
add
addr16
jmp
or
aaa
loop
mov
mov
in
lret
dec
mov
js
fdivrs
or
mov
sub
popa
aam
ljmp
cmp
outsl
into
adc
clc
addb
lret
jmp
or
pop
fisubrs
push
jo
mov
adc
and
mov
lock
shll
mov
lahf
addb
incl
popf
push
in
xchg
rolb
mov
add
mov
mov
cmp
sub
addb
xor
pop
mov
inc
bound
mov
fsub
adc
mov
mov
aas
xchg
ljmp
cld
icebp
stos
data16
iret
ds
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
push
mov
push
or
ljmp
dec
push
xlat
enter
pushl
jnp
mov
jp
mov
xchg
add
addb
and
add
cmpsb
out
mov
add
mov
fisubs
and
mov
adc
add
lcall
add
adc
mov
hlt
in
add
adc
stos
into
adc
out
mov
mov
and
mov
inc
shll
mov
add
mov
xchg
jmp
add
mov
xchg
xor
mov
pushf
into
adc
mov
add
adc
mov
adc
mov
jle
loopne
mov
cmp
add
jecxz
loop
mov
addb
insl
into
dec
hlt
mov
add
ds
sub
push
sbb
ret
fstl
in
addr16
add
mov
push
lock
out
pop
loop
mov
cli
loopne
mov
aas
jmp
push
jecxz
add
cmp
inc
mov
adc
mov
lahf
pop
mov
push
add
mov
out
mov
sub
in
add
out
addb
and
mov
pop
push
add
out
ds
adc
jb
mov
call
loop
mov
fisubs
lods
xor
mov
add
cmp
adc
outsl
test
mov
adc
mov
add
dec
add
imul
ret
lods
push
jmp
dec
inc
add
push
and
mov
das
push
pusha
add
push
add
xor
mov
testb
mov
mov
xchg
sahf
in
into
pop
addb
gs
add
inc
add
dec
xlat
cs
add
sub
add
mov
aam
pop
aad
in
push
xchg
and
lcall
loopne
mov
mov
mov
neg
das
and
mov
mov
add
sbb
add
and
mov
mov
sbb
call
out
add
das
mov
jo
mov
loopne
mov
fwait
fwait
aam
sub
add
sbb
in
jne
pandn
add
xor
sbb
and
mov
or
mov
add
aad
mov
leave
push
and
mov
dec
ret
jno
imul
bound
mov
fimull
lahf
and
mov
insl
push
data16
mov
inc
lret
adc
mov
jecxz
mov
inc
out
cmpps
sbb
pop
cmp
pop
and
push
or
mov
cmc
xor
mov
add
or
jmp
push
add
mov
out
fildll
jbe
pop
inc
movsl
push
mov
mov
add
add
add
int
add
lcall
pop
bound
mov
in
push
xor
mov
inc
idivb
cmp
aam
mov
lret
test
cmp
aas
lcall
lods
xor
mov
mov
jno
lret
mov
mov
not
add
test
mov
addb
mov
pop
or
xchg
notl
out
cmp
mov
push
stc
lea
rolb
mov
mov
push
mov
mov
mov
cltd
sub
mov
mov
or
mov
mov
cmp
mov
add
int3
xchg
fsub
cmp
dec
fildl
inc
mov
push
mov
arpl
sbb
das
dec
inc
xchg
and
add
mov
repz
call
aaa
and
mov
pushf
sub
mov
fwait
movsl
sti
punpckhwd
add
xchg
add
push
add
mov
push
iret
jp
sub
sti
inc
cmp
or
mov
add
mov
ja
test
popf
lods
movsl
jle
push
sldt
mov
fidivs
add
cltd
pop
movsl
lret
mov
jg
mov
jno
mov
add
push
les
lock
or
in
imul
loopne
mov
mov
add
in
pop
imul
add
daa
popa
mov
inc
int
xor
jle
push
ret
jo
mov
push
lret
dec
scas
add
mov
inc
enter
xor
mov
pop
ffree
sbb
xchg
rolb
mov
in
sbb
jno
rolb
xchg
add
add
mov
cmpsb
add
xorl
cld
rcl
add
cltd
push
inc
fistpl
mov
pushf
test
add
add
add
dec
and
mov
dec
inc
jne
lret
sub
js
pusha
add
mov
mov
shll
add
sarl
cli
jmp
jl
xchg
fmuls
arpl
mov
mov
mov
mov
into
insl
jne
int
rol
adc
in
arpl
jge
xor
mov
lcall
mov
xchg
test
sti
sbb
call
add
jecxz
cli
cmp
cmp
add
add
add
jge
and
mov
insl
aad
enter
mov
dec
pop
add
mov
stc
divb
add
add
cmp
mov
mov
mov
push
mov
mov
mov
mov
subl
sub
fmul
lea
add
mov
xor
mov
insl
gs
adc
mov
loope
jmp
add
inc
inc
add
xorl
add
jbe
ret
xchg
mov
jle
sbb
mov
add
lds
out
out
xor
icebp
out
adc
mov
add
add
mov
inc
loope
aas
mov
call
mov
fcmove
lret
fcompl
enter
add
adc
mov
xchg
in
int3
rolb
movsl
xchg
xor
ret
std
repz
outsw
push
scas
pop
jmp
aam
mov
aaa
mov
aaa
inc
push
push
es
dec
ja
mov
push
mov
mov
or
xor
into
xchg
mov
mov
mov
mov
lea
add
push
sbb
movsb
arpl
rolb
pop
mov
mov
inc
sub
dec
out
xchg
ds
push
fidivs
push
mov
pop
lret
ret
inc
lods
add
mov
pop
std
clc
inc
add
leave
cmp
mov
dec
enter
fiadds
mov
add
xchg
pop
clc
imulb
push
pushf
and
mov
mov
add
mov
scas
cltd
dec
cmc
cs
out
push
lock
in
nop
add
pop
mov
lods
sbb
pop
scas
pop
mov
mov
jae
hlt
push
mov
add
cmc
mov
adc
mov
ja
add
mov
sub
xor
out
loope
add
xor
dec
leave
dec
inc
jb
mov
add
push
cmp
jl
lret
and
mov
add
dec
aad
add
sbb
addb
mov
mov
mov
das
push
mov
test
push
ja
bound
mov
jo
mov
push
add
mov
outsb
mull
mov
mov
gs
inc
add
mov
mov
test
xlat
jmp
add
jae
cmp
or
jmpw
add
push
dec
insb
out
inc
cmpsb
add
rcll
cmp
mov
dec
out
add
push
xchg
addb
inc
xchg
arpl
out
add
add
push
int
lret
ss
lods
cmpsb
push
stc
inc
sub
inc
add
in
jnp
add
cltd
push
pop
cmpsb
and
jg
sbb
mov
add
and
ja
add
jle
add
xor
mov
add
out
out
dec
or
cmc
dec
in
loop
mov
iret
into
adc
mov
sbb
mov
repnz
add
sbb
lock
xchg
fadds
add
ret
aaa
orl
fcom
idivb
mov
cmp
or
cmp
mov
dec
shll
xchg
mov
mov
and
adc
mov
or
xchg
mov
stc
inc
aad
jl
mov
lret
add
add
mov
mov
mov
add
mov
xchg
fstpt
or
xchg
jbe
stos
popa
daa
sub
sub
out
cltd
jns
ss
stos
aad
test
fcoml
pop
arpl
mov
std
adc
cld
inc
add
ds
add
loope
hlt
pop
icebp
pop
insb
ds
add
adc
cmp
scas
sbb
dec
movsl
leave
fwait
sbb
jno
ret
lahf
data16
mov
mov
add
lods
addr16
stos
test
rcl
lods
sti
addr16
mulb
mov
xchg
mov
insb
fiaddl
add
add
stc
lea
sub
cltd
aas
add
mov
loop
mov
dec
arpl
stos
sub
pop
pop
push
add
mov
mov
pop
outsb
icebp
sbb
test
lods
push
add
testb
imul
pop
outsl
jle
mov
cmp
and
je
jmp
pop
xchg
rolb
push
pusha
add
data16
xor
mov
cmc
adc
ja
rcrl
outsl
stc
pop
and
mov
and
xchg
rorl
add
icebp
out
movsl
push
mov
or
pop
cltd
xchg
insb
ljmp
add
ret
cmpsl
lods
pop
push
in
lcall
mov
add
add
jno
jl
nop
add
outsb
pop
addb
jge
inc
push
icebp
and
mov
repnz
inc
lahf
inc
add
cli
popa
inc
pop
pop
stos
push
mov
mov
sub
divl
gs
inc
out
into
fs
repz
or
pushf
fldenv
fsubs
add
std
testl
pop
xchg
int3
mov
pop
cli
mov
add
add
or
lea
add
pop
in
xor
mov
lods
inc
arpl
lds
or
out
adc
pop
xchg
aas
test
lret
and
mov
pop
test
mov
test
jg
leave
xlat
cmp
cmp
mov
add
mov
int
jb
mov
fld
imul
loop
mov
mov
fwait
arpl
nop
add
push
jnp
sbb
call
jmp
dec
pushf
push
cmp
adc
mov
pop
lods
lea
lcall
xchg
test
push
cmp
enter
xlat
or
repnz
sub
jnp
add
pushf
mov
out
nop
add
subps
lods
jmp
cmp
and
std
add
mov
cmp
jmp
push
jnp
mov
stos
push
data16
jecxz
nop
add
mov
add
add
push
mov
loop
mov
mov
dec
sbb
in
ds
sub
popl
lea
cmp
add
add
mov
flds
dec
out
mov
add
and
fwait
sub
aaa
imul
add
ja
fcmovnbe
cmc
dec
pop
sub
scas
xchg
sbb
adc
mov
les
mov
imul
add
mov
mov
add
add
mov
mov
jnp
add
popf
ja
ds
xchg
testb
xchg
testb
loope
lret
adc
mov
test
add
xchg
pop
jno
push
fisttps
mov
xchg
push
push
in
nop
add
mov
aas
mov
add
mov
or
cmp
pop
mov
mov
pop
cwtl
xchg
adc
mov
xchg
sbb
add
aas
in
stos
push
add
add
xor
push
adc
push
lds
imul
xchg
pop
iret
push
push
and
add
sti
test
loope
mov
dec
in
iret
cltd
jae
arpl
mulb
fs
adc
add
into
mov
mov
int3
cmpsl
mov
sbb
repnz
push
add
add
add
cmp
dec
fs
hlt
sub
and
mov
mov
push
add
sbb
mov
jnp
fsub
add
mul
add
lcall
mov
add
ljmp
ljmp
es
jne
and
xor
add
xor
mov
fadd
jae
xor
mov
mov
mov
loope
add
xchg
icebp
push
add
inc
add
add
xchg
popl
repnz
popf
mov
add
js
aaa
ds
test
xlat
dec
mov
testl
add
jmp
and
mov
fdivrs
out
xor
xchg
inc
mov
sbb
pushf
aas
int
inc
add
push
cwtl
and
mov
pop
dec
jg
add
sarl
repnz
je
and
add
mov
fisubrl
mov
dec
fmull
icebp
cmp
fwait
and
mov
test
dec
bound
mov
outsl
stos
hlt
push
add
adc
xchg
stos
andl
xor
out
into
xchg
pop
pop
mov
add
addb
inc
cmpsb
setne
rolb
mov
and
adcl
dec
enter
mov
mov
mov
or
loop
mov
mov
loopne
mov
fwait
mov
jl
rolb
mov
add
xlat
sub
jne
adc
cmp
sbb
leave
shll
jg
mov
addb
or
xchg
pop
test
sub
cmp
push
stos
mov
xor
add
jmp
lret
out
mov
test
mov
jns
gs
inc
add
movsb
pop
mov
mov
addr16
gs
iret
fwait
cmpsb
and
mov
mov
bound
mov
imul
jl
or
xor
mov
jns
and
mov
dec
pop
fs
sbb
imul
test
mov
sbb
pop
mov
lods
jecxz
jnp
jg
and
mov
addr16
add
or
cmp
mov
nop
add
cmp
fildll
add
cs
push
inc
inc
pop
out
movsl
push
aad
in
cltd
scas
pop
add
mov
mov
jcxz
das
pop
in
cmp
shl
mov
fists
push
add
mov
cmpsl
aam
sahf
stos
and
mov
mov
add
popa
shl
mov
cmpsb
cmp
dec
orl
cmpl
add
into
inc
lea
pop
cmc
xor
pop
stos
xor
loopne
mov
xchg
imul
mov
cmp
mov
imul
aam
addr16
fsubs
add
mov
sub
mov
mov
add
mov
mov
scas
aad
cmp
push
add
mov
int
xchg
incl
mov
jmp
inc
fwait
jbe
ud2
add
fucomp
fs
mov
mov
in
mov
mov
dec
jns
add
add
pop
arpl
add
add
add
aad
dec
inc
xchg
mov
fidivrl
mov
add
aam
add
addr16
dec
out
sub
xchg
inc
addb
sub
add
mov
xor
pop
xor
mov
bound
mov
cmp
sbb
jmp
imull
add
mov
mov
pop
sub
pusha
add
call
mov
lock
sbb
add
cli
fnsave
push
mov
stos
inc
add
ret
nop
add
pop
stos
mov
mov
repz
or
addb
dec
and
add
roll
jae
cmp
fucom
cli
sub
fucomp
ss
add
rolb
mov
adc
mov
jmp
hlt
sbb
cmp
cmp
loope
push
add
add
jb
mov
and
mov
out
inc
add
mov
add
pushf
popl
mov
add
imul
rolb
lret
popf
mov
pop
mov
movsl
cmp
mov
orl
inc
push
rcl
add
jle
push
add
dec
xchg
jmp
mov
mov
xchg
add
pop
adc
mov
inc
fistl
out
jb
mov
std
push
sahf
sbb
adc
and
call
pop
jae
cld
pop
js
scas
pop
mov
cmp
lret
fs
add
add
and
fcmovnu
push
pop
sbb
inc
sahf
mov
cmp
rolb
dec
xchg
movsb
insl
jbe
inc
das
popf
and
cli
outsb
in
inc
push
dec
sarl
sub
xor
mov
mov
sti
sbb
dec
add
in
add
mov
scas
in
add
aam
nop
add
cmc
or
add
mov
bound
mov
mov
mov
mov
cli
bound
mov
add
test
unpckhps
add
or
jg
add
fnstcw
fs
and
mov
jl
inc
add
pop
leave
cmp
mov
enter
push
push
in
add
mov
popa
aad
iret
or
loope
pop
jae
add
jmp
add
fldcw
sbb
push
add
jg
add
add
fcompl
add
clc
arpl
and
push
add
sbb
mov
es
icebp
stos
std
mov
ret
lahf
addr16
jne
pop
rcrl
jbe
xchg
mov
add
jo
mov
and
mov
int3
xchg
xor
sub
fxch
push
add
rolb
mov
add
mov
mov
xor
add
add
lret
addb
dec
mov
stos
cli
daa
incb
xor
and
inc
imul
loopne
mov
insb
std
rolb
and
je
cld
dec
ds
sbb
aam
add
xor
mov
add
adc
es
add
outsl
sarl
dec
cli
call
js
scas
push
adc
movsl
mov
inc
add
dec
fisttps
addr16
add
add
push
dec
cmp
leave
mov
pusha
add
add
mov
sbb
mov
mov
cmp
cmp
inc
or
pushf
mov
jg
addb
lahf
push
push
add
stos
xor
jge
push
add
xchg
testb
idivl
imul
inc
add
cli
push
clc
mov
imul
mov
ljmp
add
mov
mov
add
mov
pop
sbb
mov
icebp
xor
hlt
stc
xor
fsubs
add
xor
cmp
rolb
mov
imul
push
pop
pop
sbb
repz
mov
cld
outsb
repz
inc
popl
xchg
pop
adc
mov
jb
mov
aad
add
and
mov
mov
pop
mov
mov
add
mov
bound
mov
bound
mov
pop
or
mov
scas
cmpsl
add
mov
dec
jns
aam
icebp
dec
xlat
xchg
mov
cmp
push
cmp
add
and
mov
daa
inc
lret
in
add
fimull
add
mov
test
push
repz
adc
mov
mov
popf
imul
jo
mov
mov
fsubrl
mov
add
mov
add
or
lods
repnz
adc
fwait
sbb
rcr
dec
dec
push
add
mov
push
add
sti
sub
pop
push
mov
xchg
scas
dec
clc
stos
adc
add
mov
jge
sbb
cmp
imul
jg
add
inc
repnz
mov
add
pop
inc
push
adc
in
mov
dec
cwtl
xor
mov
xor
mov
cmp
mov
int3
sbb
mov
pushl
add
cmc
jle
mov
movsb
js
inc
imul
stos
lret
outsl
loop
mov
add
in
xor
add
fcos
pop
stc
stc
test
mov
add
ret
je
outsl
ja
jbe
add
add
arpl
xor
das
stos
dec
outsb
sub
cmp
fisubl
pop
or
add
mov
add
rolb
mov
add
repz
lods
xchg
add
imulb
or
mov
add
addr16
push
xchg
inc
cmp
add
mov
xor
sub
pusha
add
int3
sbb
mov
or
mov
les
call
xchg
or
mov
insb
fsubs
cs
dec
pop
cmp
adc
mov
dec
mov
arpl
imul
mov
dec
adc
push
pop
out
cmp
dec
loopne
mov
fsubl
mov
decl
sub
test
mov
add
mov
mov
mov
sbb
es
stos
inc
add
add
movsbl
cwtl
movsl
dec
imul
push
add
add
fs
addb
mov
pop
adc
sub
loop
mov
fsubrl
dec
test
insl
xchg
push
mov
or
add
mov
rolb
mov
add
add
out
dec
sub
xlat
nop
add
jnp
xor
out
adc
cs
rolb
mov
mov
sbb
bound
mov
test
lahf
jp
push
jnp,pn
loopne
mov
add
dec
pop
outsl
inc
adc
sub
mov
inc
jmp
pop
and
stc
xor
mov
cwtl
xchg
loopne
mov
ficompl
and
mov
mov
lret
lret
scas
adc
mov
mov
adc
add
adc
cmp
je
sub
outsl
popa
xchg
enter
cmp
test
aad
add
mov
scas
fwait
lods
jbe
add
mov
stos
mov
mov
and
add
mov
jecxz
add
stos
cltd
pop
jp
ss
add
cmp
push
add
add
rcrl
jecxz
xchg
fldcw
add
mov
add
dec
lods
cli
add
mov
and
mov
pusha
add
mov
inc
add
icebp
xor
mov
sarl
das
cltd
out
rolb
mov
lret
mov
das
push
or
add
cmpsb
in
inc
call
aas
clc
cmp
cltd
pop
sub
jp
cmp
push
cmp
int3
jno
ja
pop
mov
scas
mov
add
lods
push
xchg
add
aas
enter
mov
out
add
push
stos
test
mov
mov
adc
test
push
cmpsl
adc
lcall
je
addb
push
push
add
in
addb
sbb
add
iret
mov
pop
shrl
adc
mov
rolb
mov
or
popf
pop
jge
fidivrl
mov
mov
add
jno
outsb
addb
sbb
jle
popa
gs
jge
ja
jl
and
incl
lods
test
mov
mov
xchg
rolb
xchg
and
fs
dec
mov
mov
and
lock
ljmp
andl
repz
pop
fnstenv
add
add
mov
or
add
add
sub
mov
xor
mov
in
cmp
movsl
lock
sbb
mov
popf
sbb
aaa
int3
cmp
std
jne
imul
add
add
mov
pop
test
mov
cld
push
pop
push
add
test
lods
imul
int3
clc
mov
jbe
loope
add
cmp
neg
addb
in
jns
inc
sub
jno
pop
pop
pop
and
mov
cwtl
inc
scas
rep
stos
mulb
xchg
sub
notl
cmpsb
add
mov
outsl
cmp
push
add
rep
std
test
dec
mov
add
lods
iret
and
loopne
mov
gs
mov
les
add
xlat
pushf
jbe
cld
mov
mov
xchg
divl
lods
lret
push
add
lahf
adc
and
mov
pop
negb
movsl
sub
xor
into
mov
add
rorl
out
dec
icebp
repz
add
cmp
imul
pop
shll
mov
sub
rolb
and
inc
popf
mov
int3
add
xchg
jo
mov
sub
mov
xchg
xor
mov
inc
arpl
aas
insb
sub
fcoms
lock
push
in
mov
out
int3
ret
dec
dec
addb
aaa
adc
add
mov
sbb
pop
add
mov
add
ljmp
add
mov
icebp
lods
adc
jp
out
mov
dec
and
mov
jp
jno
pop
daa
jmp
mov
inc
ficompl
inc
cmpsl
add
stos
lock
pop
inc
add
cs
iret
jno
mov
sbb
int3
sub
cmp
add
mov
pop
xchg
add
enter
jg
stc
cld
push
popf
mov
inc
pop
jb
mov
arpl
jb
mov
stc
dec
repnz
iret
icebp
mov
sbb
mov
add
sub
lret
xlat
cld
xchg
sbb
add
mov
rcll
cmpsb
or
fdivr
cltd
xor
mov
xchg
jo
mov
or
add
and
rolb
mov
push
add
mov
addb
push
repz
add
mov
sub
mov
add
sub
add
mov
insl
mov
dec
insb
jns
inc
imul
sub
jmp
pop
mov
inc
add
mov
mov
inc
outsl
or
sbb
arpl
add
lods
xor
and
inc
lcall
ss
loopne
mov
sub
popf
pop
sti
sbb
add
mov
adc
loop
mov
stos
mov
add
les
movsl
pop
mov
ret
testl
inc
mov
out
mov
sub
add
xchg
mov
mov
add
add
sbbl
cmpsb
mov
mov
add
jae
das
cli
add
mov
out
aam
sub
jmp
clc
add
mov
lods
pop
enter
add
pop
scas
cmpsl
loop
mov
mov
mov
mov
mov
adc
pushf
pushl
push
int3
push
mov
xor
mov
dec
ss
mov
and
mov
in
cmp
inc
scas
adc
add
mov
dec
cmp
clc
jno
add
rolb
mov
mov
dec
add
mov
dec
mov
add
add
mov
add
inc
out
adc
mov
popf
xchg
add
mov
inc
add
mov
into
xchg
xor
or
cmp
xlat
mov
mov
sub
loop
mov
fcmovne
shll
negl
add
mov
ret
fsubr
jne
add
lds
dec
xchg
mov
mov
sbb
add
mov
and
mov
stos
cmc
int3
cltd
adc
lret
subl
mov
jnp
mov
mov
loope
add
mov
cld
sbb
xor
mov
dec
enter
fisttpl
lods
mov
daa
leave
mov
mov
lods
or
scas
pop
pusha
add
mov
add
fistpl
mov
mov
and
mov
loopne
mov
add
add
loop
mov
lock
pop
loope
stos
fdiv
adc
push
data16
mov
aas
dec
ret
xor
add
and
mov
add
jbe
mov
dec
mov
rolb
mov
add
mov
add
push
xchg
add
test
push
cmp
push
jb
mov
test
hlt
out
aad
xchg
aaa
test
mov
ds
nop
add
mov
icebp
push
call
sbb
iret
scas
xchg
das
add
add
inc
outsl
ss
add
mov
cmp
addb
jbe
cli
enter
jp
jae
add
rolb
adc
mov
pusha
add
jle
add
xor
mov
loope
rolb
ja
add
add
icebp
xlat
daa
addb
sub
mov
jo
mov
xchg
add
mov
daa
inc
sbb
adc
fst
adc
mov
inc
xchg
push
inc
add
mov
cmp
cmp
mov
mov
mov
popa
fsubr
rolb
mov
pop
adc
imul
dec
xor
mov
add
fdivrl
sub
inc
add
mov
mov
fwait
xchg
dec
mov
fst
fwait
pop
addb
cmp
lret
pop
cmp
in
ljmp
add
fwait
cmp
mov
adc
inc
and
add
mov
int
add
mov
pop
lods
jnp
sti
aas
test
jno
outsl
jns
rcll
dec
dec
mov
shll
xchg
add
jb
mov
shl
mov
xor
mov
inc
add
mov
add
xchg
xchg
lret
mov
add
daa
push
stos
mov
xor
mov
add
lahf
and
mov
add
mov
addb
mov
push
dec
ja
aad
push
shrl
push
loop
mov
into
inc
psrld
mov
xor
sub
pop
hlt
cmpsl
pop
repnz
int
add
hlt
not
rolb
add
leave
cmpsb
mov
jge
add
mov
lcall
inc
ss
sub
nop
add
and
data16
int
xor
ljmp
add
mov
jno
idiv
mov
cli
dec
sbb
inc
add
and
mov
pop
push
jle
addb
or
jno
inc
add
jle
out
sbb
imul
add
dec
pop
pop
rorl
pop
cmp
stos
xor
xchg
sar
popf
mov
add
add
inc
fbld
add
add
add
mov
sub
ss
sbb
add
stos
mov
mov
xor
mov
mov
lcall
push
sub
jae
inc
add
mov
mov
ret
loope
scas
mov
adc
loope
add
mov
sbb
stc
lods
rolb
mov
add
push
addl
out
add
mov
mov
mov
cmc
mov
and
add
jmp
adc
popf
pop
in
clc
mov
push
add
pop
adc
je
jg
mov
add
jecxz
add
mov
add
xchg
pop
mov
add
scas
ret
mov
sub
add
sahf
mov
adc
in
mov
mov
outsl
fnstenv
jbe
sahf
push
outsb
shll
xor
mov
cs
das
test
add
mov
mov
aam
pop
scas
push
jo
mov
mov
mov
xchg
mov
pop
inc
add
dec
push
or
stos
cmpsb
mov
jno
xchg
or
lock
add
cmp
into
popf
mov
mov
das
pop
int3
jns
add
out
jns
cmpsl
adc
mov
hlt
jnp
pop
inc
ret
cmp
add
and
mov
subl
jns
fwait
std
push
notb
mov
add
fmuls
loope
leave
or
jnp
add
add
les
jmp
addb
cmp
push
add
cmpl
add
jecxz
stos
insl
push
call
loopne
mov
cwtl
sub
xor
mov
int
add
xchg
addb
popf
or
mov
xor
nop
add
fstpt
call
add
sub
cmpsl
sub
mov
ja
ficomps
mov
or
test
cmpsb
adc
mov
adc
shll
call
add
mov
sub
pop
xor
xchg
or
rorl
pop
mov
ss
hlt
push
aaa
mov
loopne
mov
lock
out
mov
add
and
mov
mov
aad
test
std
push
jle
and
mov
mov
dec
sbb
mov
push
pop
fistpll
sbb
dec
or
cld
or
mov
aas
sub
test
cwtl
rolb
ficompl
push
jne
cmc
es
mov
test
pop
xchg
cmp
add
mov
mov
mov
xor
mov
out
out
mov
inc
lahf
test
adc
mov
add
addl
mov
or
and
mov
mov
mov
aas
out
inc
adcl
dec
bound
mov
adc
mov
sub
addb
sbb
mov
lcall
std
imul
mov
add
jns
out
sbb
mov
aam
or
jb
mov
cwtl
xchg
xor
push
sarl
or
repnz
xor
add
rorl
mov
mov
push
outsl
insb
xchg
sub
add
sbb
popa
fdivr
xchg
add
add
imul
add
movsb
sbb
mov
adc
mov
mov
mov
push
add
add
xor
mov
pop
in
pushf
fdivl
movsl
add
and
push
lret
imul
test
xchg
jnp
add
and
xchg
nop
add
add
push
sti
lret
jb
mov
mov
add
xchg
add
sub
add
add
pop
xor
dec
rolb
xchg
push
adc
mov
jp
in
xor
inc
imul
mov
jge
adc
jmp
push
jbe
lds
add
daa
mov
cmp
arpl
sub
dec
mov
mov
push
add
cmp
push
push
test
xor
mov
scas
jne
or
add
or
and
sub
pop
lret
add
push
loop
mov
je
push
daa
xor
mov
fdivs
js
add
mov
aas
popf
adc
mov
push
cmp
cmp
pop
xor
mov
push
cmp
jge
out
xor
mov
arpl
repnz
xchg
add
xor
mov
pop
pop
xchg
mov
inc
add
jnp
rolb
mov
add
test
lret
jno
jnp
ja
repz
mov
in
xor
mov
xchg
add
jb
mov
sub
repnz
fiaddl
mov
inc
push
add
jp
mov
inc
mov
mov
xchg
ret
repnz
mov
xchg
inc
sbb
sbb
pop
scas
push
repz
fistpl
push
add
ss
nop
add
mov
jp
add
mov
add
aaa
int3
inc
popa
and
lcall
shr
xchg
cmp
ss
or
inc
aad
dec
xchg
or
xor
js
add
mov
mov
incb
push
push
pop
jge
jl
arpl
rolb
adc
mov
inc
or
adc
mov
xchg
clc
rolb
mov
int
pop
jnp
addb
aas
cmp
std
aam
push
or
cs
test
mov
and
mov
fdivl
cmp
mov
cwtl
add
sti
lock
arpl
mov
mov
and
stc
push
dec
or
es
inc
jb
mov
ljmp
add
add
mov
cli
icebp
mov
insl
aas
or
jno
add
orl
pop
cmpsb
xchg
inc
add
out
insl
xchg
scas
add
add
add
leave
fwait
int3
push
push
jbe
mov
mov
or
cmp
xchg
fldt
lret
insl
xchg
movsl
int3
rolb
adc
pusha
add
aaa
mov
mov
in
jl
add
notb
push
cwtl
jecxz
mov
in
add
add
add
xor
and
mov
rcll
jo
mov
insb
test
fldcw
fbld
add
mov
add
lock
xor
mov
lods
shrl
cli
lret
insl
xchg
mov
or
pop
dec
lret
imul
into
insb
out
mov
mov
or
movq
sbb
cld
scas
xor
push
sahf
imull
addr16
test
or
repz
add
xchg
sbb
fs
add
and
adc
add
mov
mov
incl
inc
ljmp
gs
pusha
add
add
pop
push
aad
test
sahf
jne
add
aaa
mov
icebp
adc
mov
jp
cmp
mov
pop
mov
inc
dec
movsl
mov
push
cli
mov
add
adc
pop
push
fisubrl
add
mov
clc
stos
scas
sub
adc
and
mov
call
sbb
mov
add
mov
gs
add
dec
mov
test
add
das
sub
add
mov
mov
inc
call
or
aaa
sub
push
addl
add
jns
adcl
pop
movsl
iret
jb
mov
mov
les
sahf
inc
add
add
mov
jg
roll
mov
push
xlat
test
jg
xchg
testb
popa
xchg
imul
mov
out
jp
test
push
add
repnz
add
push
iret
out
cmp
in
jb
mov
adc
mov
pop
push
mov
icebp
or
or
add
push
pop
es
add
mov
inc
inc
mov
xor
dec
sub
fmuls
dec
setbe
mov
jnp
rolb
mov
gs
test
es
cmpsl
fisubrs
push
lods
sub
iret
adc
repnz
lahf
dec
ret
cmpsb
loope
push
mov
in
je
cwtl
sbb
sbb
mov
sbb
xor
addb
je
add
jbe
sub
push
sub
sub
popa
icebp
outsb
fwait
lock
sti
call
insb
iret
pop
push
aas
sti
movsl
push
add
push
pop
mov
mov
sbb
push
add
mov
add
mov
ss
scas
mov
fdivrs
jno
add
fbstp
cs
das
out
adc
popa
call
add
add
loopne
mov
mov
pop
rolb
hlt
mov
aas
movsl
and
mov
add
add
mov
arpl
cmp
adc
scas
ret
enter
sub
pushf
ds
arpl
aad
scas
add
ss
leave
sbb
sub
cmp
arpl
stos
sub
fldl
mov
nop
add
rolb
mov
add
mov
cli
xor
xor
mov
ljmp
mov
in
ret
pushf
xor
mov
ret
pop
in
leave
xchg
loop
mov
cmp
negl
fsubrl
fidivrl
xchg
push
add
std
pop
pop
dec
xor
mov
mov
jmp
sub
fsub
add
adc
inc
xor
sbb
jg
lock
add
jbe
loop
mov
cmp
aaa
sub
sbb
imul
lds
adc
out
mov
jo
mov
xchg
lcall
mov
add
adc
mov
adc
mov
cld
sub
std
inc
loopne
mov
and
mov
ret
enter
add
sbb
jl
fldl
mov
mov
aam
cli
sbb
xchg
fnsave
add
pop
insl
loop
mov
adc
mov
xchg
ret
pop
addb
pop
loope
inc
popf
jg
imul
iret
push
gs
jns
add
mov
xorl
jmp
xor
sub
inc
push
add
mov
dec
jns
jne
add
outsb
inc
daa
in
scas
or
xchg
lahf
mov
int
add
xor
cmp
das
test
ror
sub
mov
outsl
in
or
pop
icebp
in
js
dec
shll
and
out
rolb
mov
dec
dec
pop
jbe
es
sti
push
jle
add
xor
jo
mov
mov
cltd
dec
movsb
sub
bound
mov
xchg
dec
hlt
cmp
xchg
cmp
daa
ja
cli
sub
add
out
and
nop
add
data16
rolb
mov
jmp
fstps
xor
std
adc
mov
mov
jle
in
cmp
add
push
xlat
xchg
imul
push
add
mov
nop
add
mov
addb
add
jg
pushl
fwait
push
push
mov
aas
mov
mov
xchg
cmc
dec
mov
push
addb
xchg
int
stc
jo
mov
add
add
sbb
fcompl
pop
fbld
mov
rolb
mov
xchg
adc
mov
lahf
aam
das
jge
addb
xorl
mov
lds
sbb
and
mov
cmp
jae
add
pushf
dec
push
jno
cmp
adc
pop
lods
ss
stc
popa
addb
std
inc
jl
inc
sbb
mov
add
add
fs
popf
mov
add
mov
add
or
loop
mov
add
add
add
nop
add
pop
and
xchg
mov
and
mov
fiadds
add
add
stos
adc
push
add
mov
outsl
ss
stc
addr16
adc
lret
add
dec
sti
jno
std
mov
xor
and
sbb
mov
in
mov
mov
gs
push
out
ret
fildl
cmpsb
scas
mov
mov
das
rolb
mov
outsb
jb
mov
mov
mov
cld
cmp
push
shll
mov
xlat
mov
in
fs
daa
ljmp
mov
push
add
mov
lret
cmpsl
jmp
cli
loop
mov
add
icebp
icebp
lock
add
mov
add
jno
sub
inc
mov
inc
add
add
or
dec
jns,pn
pop
int
lret
inc
add
int
sbb
xor
dec
lret
adc
add
leave
push
scas
xchg
add
mov
or
xor
mov
lods
add
mov
and
add
push
xchg
inc
lock
adc
inc
test
add
mov
and
mov
add
pop
test
cwtl
pop
test
mov
mov
repnz
mov
cwtl
jle
and
mov
and
mov
mov
pop
pop
jno
sbb
jp
shll
pop
lcall
add
mov
mov
adc
bswap
into
add
add
add
repz
cmp
pusha
add
add
movsb
into
push
add
adc
xor
pushf
cmpsb
insb
iret
enter
xlat
test
and
mov
cmp
and
aaa
mov
add
out
js
mov
mov
mov
jne
pcmpeqd
in
xchg
jns
jbe
arpl
lds
fwait
push
mov
mov
out
sbb
mov
lods
or
stos
xchg
add
jmp
popf
nop
add
xchg
xor
jp
and
andl
scas
nop
add
mov
and
pop
or
fdivl
sbb
jb
mov
sub
add
sbb
inc
add
mov
fcmovbe
mov
mov
jae
mov
xor
and
add
insb
mov
addr16
mov
xchg
add
sar
mov
mov
push
pop
jle
int3
lret
cmp
repnz
pop
pop
in
cli
jmp
and
mov
sub
ds
add
mov
mov
daa
test
fwait
sbb
add
rolb
mov
lods
roll
adc
mov
cwtl
int3
dec
shll
jle
adc
push
sbb
and
mov
push
and
mov
push
inc
add
int3
cld
and
mov
out
mov
sub
addb
mov
fnstenv
or
stc
add
add
sbb
xchg
xor
mov
xor
mov
lss
mov
add
mov
xor
mov
loopne
mov
xor
xor
mov
lods
pop
cmp
lret
xorl
dec
enter
lret
jo
mov
mov
mov
or
pop
jb
mov
push
movsl
add
mov
add
cli
insl
mov
or
cmp
xchg
add
mov
sub
and
jb
mov
add
mov
mov
jmp
jnp
inc
dec
dec
sbb
push
ljmp
xchg
add
inc
fstpl
inc
sbb
lcall
jmp
add
cmp
xor
add
or
pop
loope
and
mov
ficomps
mov
mov
mov
add
add
arpl
add
imul
aas
in
cli
jae
mov
and
mov
stc
int
loopne
mov
mov
dec
inc
jbe
xlat
jmp
fsts
jecxz
sti
xor
add
lock
xchg
ljmp
add
pop
pushl
dec
cmp
incb
mov
mov
add
add
int
push
mov
daa
cmp
leave
adcl
mov
in
xchg
add
loop
mov
mov
mov
nop
add
and
or
clc
rcll
adc
or
mov
fsubs
cmpsb
xlat
jecxz
dec
cltd
in
enter
xchg
lea
jp
push
sti
aas
loopne
mov
fistl
fmuls
jl
mov
jecxz
cmpl
aas
dec
scas
outsb
mov
add
mov
fucom
dec
aam
add
int
adc
mov
sahf
adc
ds
ds
add
add
add
in
rolb
mov
mov
ret
jne
js
loopne
mov
popf
in
cmp
mov
fcmovnb
jge
mov
mov
bound
mov
jmp
mov
pop
test
cltd
cmpsb
xchg
test
imul
xchg
inc
adc
mov
out
add
add
cwtl
ljmp
cmp
outsl
test
jo
mov
add
mov
add
cmp
xchg
rolb
mov
and
mov
cmp
or
mov
pop
or
fmuls
mov
or
add
mov
insl
xchg
sub
push
add
mov
lret
daa
test
jno
mov
mov
jnp
cmp
addr16
push
add
mov
ljmp
sub
add
movsl
je
jmp
mov
add
fidivl
das
mov
add
dec
daa
mov
mov
ljmp
cs
or
insl
sbb
adc
lahf
rolb
mov
rolb
dec
dec
arpl
orl
mov
xor
mov
fsubrs
add
ja
pop
inc
mov
inc
ljmp
imul
cmc
and
fcoml
mov
mov
mov
mov
mov
add
xor
fildl
in
out
fistl
jle
ds
pop
sti
fbld
inc
sahf
ficompl
mov
ljmp
xchg
pop
push
mov
jmp
es
loope
imul
add
mov
icebp
push
add
mov
mov
pop
sbb
xor
mov
jl
mov
add
aam
add
inc
sbb
jl
stos
ret
mov
pop
movsl
in
jbe
xchg
add
add
and
adc
mov
mov
iret
scas
fnstenv
xchg
add
fcompl
sub
dec
sub
adc
mov
jle
rolb
mov
daa
pop
aam
xor
mov
imul
mov
fsubr
addb
mov
mov
and
mov
mov
int
xchg
stos
adc
sub
fsubrs
movsb
es
jae
sbb
bound
mov
popa
movsb
test
mov
add
mov
jnp
add
jne
ret
int3
addr16
mov
out
cmovl
notl
push
sbb
mov
popf
ss
add
mov
mov
daa
xchg
push
add
add
mov
jbe
lods
test
or
jnp
add
mov
dec
xor
test
lods
gs
out
ret
dec
or
add
call
pop
sub
dec
pop
lahf
adc
xchg
icebp
add
add
mull
loop
mov
adc
mov
mov
mov
mov
xchg
xchg
scas
adcl
add
rcll
js
add
xchg
xor
mov
mov
es
and
xor
dec
push
pop
add
mov
out
add
mov
sub
xor
arpl
shl
imul
push
inc
add
jle
mov
add
dec
scas
mov
add
subl
add
jge
sbbl
mov
ds
div
mov
add
das
lret
mov
push
mov
repnz
push
and
dec
outsl
div
dec
aaa
rorl
add
nop
add
add
xor
mov
out
pop
daa
sub
cmpsb
sbb
add
push
add
sbb
add
das
mov
xor
add
or
add
mov
cmp
rolb
mov
adc
iret
mov
cmc
and
mov
sbb
iret
repz
sbb
addb
inc
push
sbb
std
jne
jo
mov
lock
push
dec
test
out
mov
add
add
inc
repnz
jbe
push
add
add
cmp
cmc
es
das
lods
jb
mov
add
cmc
out
add
dec
out
pushf
push
movsl
sub
lock
outsl
lret
mov
push
into
inc
dec
aas
cltd
rol
arpl
out
pop
out
cmpsl
adc
mov
out
mov
lock
mov
out
dec
xchg
xor
mov
push
jnp
popa
push
fisttpll
stc
cmp
add
mov
loope
fwait
mov
add
mov
inc
add
jmp
into
imul
sbb
lret
es
jns
addl
add
dec
add
mov
pusha
add
dec
push
xlat
mov
pop
dec
lock
add
mov
push
cltd
mov
mov
mov
scas
in
pop
jae
cld
mov
push
cltd
fiaddl
inc
xorl
xchg
jne
sbb
sub
ds
popf
sahf
scas
xor
dec
push
or
add
ret
test
mov
add
push
and
add
add
pop
mov
lods
lahf
cld
dec
pushf
orl
out
dec
insl
int3
ljmp
pop
cli
cmp
sub
or
sbb
jge
ret
bound
mov
testb
outsl
loope
popa
mov
lea
add
imul
add
mov
mov
pushf
les
dec
xchg
and
adc
mov
ja
ds
into
jbe
add
out
add
add
mov
scas
out
or
loopne
mov
xchg
pushf
jnp
aad
dec
mov
mov
mov
add
add
sbb
add
xor
clc
mov
fnstenv
add
mov
popf
lods
addb
mov
lret
jl
inc
ljmp
in
js
das
clc
int
aad
xchg
jnp
int
in
addb
lods
jp
icebp
push
sahf
mov
cmp
and
push
clc
test
cmp
dec
mov
jle
js
add
aad
addb
sub
add
xchg
add
roll
in
push
add
mov
and
cmpsl
jo
mov
add
mov
inc
pop
loop
mov
pop
xchg
idivb
mov
popf
mov
add
mov
ljmp
jns
addb
adc
mov
mov
add
jecxz
xchg
fwait
aam
std
xchg
xchg
xor
xchg
sub
jp
loopne
mov
add
mov
add
and
mov
out
addr16
jne
scas
adcl
xlat
adc
and
mov
aam
negl
and
mov
lea
and
mov
xor
mov
scas
mov
lods
ret
push
and
clc
decb
inc
dec
rcrl
lods
rolb
mov
stos
lods
in
mov
mov
pop
dec
lods
repnz
ja
mov
inc
sbb
dec
xor
mov
add
mov
add
mov
add
fmull
into
and
loope
cmpsb
gs
pop
loope
xor
add
dec
leave
jno
push
ret
dec
push
scas
xor
add
shll
add
mov
add
imul
jns
sbb
fsub
add
add
add
mov
aam
and
mov
mov
dec
sub
add
xchg
movsb
xchg
mov
fisubl
push
cmpsl
adc
fsub
dec
std
adc
test
add
xor
cs
or
add
mov
cmpsl
xlat
add
mov
addb
push
in
out
sbb
dec
adc
outsl
mov
mov
out
mov
lea
add
mov
jp
adc
mov
cmp
mov
add
pop
aad
sbb
repz
push
push
fstpl
das
adc
mov
add
add
add
mov
imull
lods
aaa
fdivr
push
mov
mov
popa
je
or
leave
sbb
sub
pop
lahf
ror
or
add
out
push
jmp
rolb
mov
xor
or
inc
push
loopne
mov
mov
add
xchg
fimull
mulb
jne
data16
mov
mov
insb
xor
pop
cwtl
xlat
lcall
xor
jg
add
test
sbb
ljmp
out
adc
cwtl
mov
enter
outsb
ljmp
mov
popa
ja
add
jo
mov
mov
mov
aam
sub
mov
inc
add
bts
dec
pusha
add
mov
push
jo
mov
add
dec
mov
mov
add
adc
mov
mov
imul
stos
rorl
cmp
sbb
add
je
rcll
pop
xor
add
bound
mov
or
pushf
adc
xor
xchg
test
add
out
add
pop
xchg
cmp
xor
inc
repz
add
out
pcmpgtb
adc
inc
jecxz
adc
mov
add
add
jmp
jnp
pusha
add
int
sbb
in
or
adc
les
orl
mov
scas
pushf
xlat
jge
rolb
mov
xor
sahf
dec
mov
add
and
mov
stc
and
add
rolb
mov
mov
jmp
inc
add
xchg
jmp
sub
pop
mov
pop
dec
push
add
imull
int
outsl
mov
dec
aad
cmp
xor
dec
insb
out
add
popf
cltd
fdivrl
add
mov
mov
adcl
outsl
lret
mov
addb
cmp
cmpsl
in
or
push
aas
fcompl
push
push
add
add
add
pop
into
aad
mov
popf
pop
loop
mov
xchg
nop
add
jnp
mov
int3
xor
iret
js
data16
add
or
inc
ss
fidivl
add
sbb
ljmp
hlt
push
int3
mov
add
pop
and
xor
ss
adc
mov
add
fstpt
mov
or
mov
in
popa
adc
aam
jg
cwtl
addb
mov
mov
or
cld
aam
add
dec
js
xor
mov
add
add
inc
cmp
pop
pushf
sbb
mov
mov
and
add
mov
xchg
add
or
test
add
mov
repnz
add
xor
pmulhw
adc
mov
add
lcall
fs
and
mov
scas
shll
fmuls
add
adc
cmp
add
mov
rolb
mov
xor
cwtl
das
mov
iret
xor
fcompl
ret
jle
aas
adc
test
icebp
inc
add
out
jp
fwait
sub
xchg
rolb
mov
fimuls
cmp
xchg
push
add
lahf
cld
loope
and
add
rolb
mov
mov
lfs
add
mov
cltd
sbb
lcall
test
data16
xchg
adc
lret
or
mov
cld
sub
and
subl
in
ficompl
mov
push
add
push
bound
mov
add
mov
mov
push
push
sahf
movl
outsl
cmc
mov
stos
mov
jge
insl
fmuls
dec
sub
pop
push
popf
xchg
jmp
in
imul
adc
mov
cmc
jns
cld
sub
dec
jmp
push
mov
add
mov
or
aad
xor
pop
clc
sub
lret
lret
mov
repz
adc
add
dec
xchg
lea
ss
mov
push
mov
les
mov
mov
imul
add
cli
rolb
mov
add
mov
inc
hlt
push
mov
push
call
or
or
sbb
rolb
jmp
add
add
mov
mov
clc
mov
add
adc
lods
in
pop
mov
xor
mov
mov
push
aaa
push
add
xor
or
xorl
mov
xlat
idiv
fnstenv
xchg
imul
or
js
ja
add
test
pop
sbb
popa
lods
out
mov
mov
inc
sub
mov
fbld
add
mov
inc
add
sub
dec
mov
sbb
jecxz
push
push
cli
cmp
int
insl
or
add
xor
mov
xor
rcl
mov
jecxz
xchg
aam
add
and
rolb
decl
push
add
mov
pushf
fstpl
sub
sbb
lea
int3
rolb
mov
clc
lret
cmp
lock
add
fcoml
mov
lret
fistpl
mov
jbe
xchg
mov
cmp
jge
add
mov
add
pusha
add
aas
out
ja
addb
pop
scas
pushaw
add
pop
mov
or
sbb
fwait
inc
add
movsl
xchg
xchg
xchg
in
das
out
sub
add
lea
add
jo
mov
mov
inc
cmp
pop
inc
stos
xor
add
add
adc
mov
push
adc
in
jmp
mov
add
xlat
int3
icebp
aad
iret
out
or
ffree
enter
in
repnz
adc
ret
add
xor
mov
mov
mov
add
push
dec
out
outsb
sub
mov
xor
mov
pop
fisubrl
mov
bound
mov
mov
addr16
xor
adc
imul
std
jmp
cmp
jns
add
sbb
add
add
in
pop
mov
adc
mov
add
clc
add
xor
fidivl
mov
movsb
xchg
xchg
add
mov
mov
lea
addb
cmp
or
jl
inc
add
mov
add
inc
jmp
jle
xor
addb
xor
daa
dec
mov
in
inc
pushf
push
add
sbb
jbe
test
add
vpaddsb
hlt
lcall
out
add
jmp
inc
mov
add
or
push
out
cs
jb
mov
lret
fcmovnb
jne
or
rcrl
xor
into
xchg
push
add
push
add
mov
popf
sahf
insb
and
loope
mov
iret
jl
lcall
test
add
loope
dec
idivl
pop
daa
mov
mov
mov
adc
inc
rolb
mov
jo
mov
scas
jmp
incb
xchg
mov
lret
mov
add
mov
add
mov
stos
outsb
jae
stc
push
xchg
sbb
idivb
imul
push
lahf
bound
mov
add
pop
int
add
mov
addb
mov
mov
mov
pop
or
test
daa
in
adc
mov
popl
or
mov
or
xchg
add
add
out
sahf
cs
cwtl
test
popa
sbb
mov
or
xchg
arpl
xchg
loope
jbe
add
divl
inc
add
lds
into
ss
jg
sbb
movsl
push
scas
in
xor
test
in
mov
add
mov
testb
call
push
xor
mov
pop
push
jbe
jno
dec
in
dec
and
mov
mov
cwtl
add
int
lock
cmp
movsb
inc
mov
fidivs
les
xor
pop
adc
adc
xor
mov
dec
mov
mov
mov
rolb
mov
imul
dec
cmp
dec
add
mov
add
sbb
imul
cmp
add
pop
je
mov
adc
cmp
add
push
mov
pop
scas
xor
mov
xchg
mov
mov
xchg
cmp
add
adc
mov
std
imul
jp
xor
stos
movsb
cld
movsb
mov
mov
add
add
insb
jmp
pop
loop
mov
cs
dec
inc
mov
lret
repnz
add
lahf
mov
xor
mov
adc
pop
aam
int3
int3
daa
xchg
and
mov
mov
inc
pop
cli
push
lods
pop
js
les
mov
xchg
test
ljmp
ljmp
rolb
mov
mov
mov
mov
addb
mov
dec
into
add
mov
push
dec
lahf
sbb
pop
cs
jg,pn
adc
mov
lods
addb
adc
mov
xchg
dec
out
testb
ss
add
sarl
mov
mov
add
sti
std
add
xor
add
mov
adc
inc
lods
inc
jle
sahf
push
add
mov
add
mov
addl
mov
fs
fwait
ljmp
lcall
mov
pop
pop
iret
loop
mov
adc
mov
ss
aam
cmpsb
xchg
add
add
repz
pushf
rolb
mov
add
jecxz
add
ss
sbb
sub
js
cmpsb
popa
mov
push
add
mov
xchg
je
icebp
dec
sbbl
mov
jl
pop
push
add
mov
xor
sub
push
outsl
and
sbb
fisubrl
popa
sbbl
dec
in
stos
add
mov
jge
in
cmp
mov
out
rolb
mov
or
mov
add
pop
in
adc
add
cmpsb
rcll
andl
mov
leave
dec
call
mov
cmp
dec
and
mov
push
add
mov
push
push
into
inc
adc
mov
cmp
adcl
sub
jnp
xlat
jl
add
lods
addb
cwtl
push
jo
mov
pop
ds
out
inc
scas
jg
leave
aam
add
mov
popa
int3
in
jo
mov
lds
loope
mov
adc
clc
and
add
adc
call
dec
cwtl
push
add
testl
mov
mov
mov
ret
iret
repz
andl
mov
mov
xchg
add
dec
lcall
outsl
pop
insl
pop
popf
popf
pop
loope
add
push
fisttpll
xor
int
movsb
sub
or
loope
cmp
push
push
mov
and
in
dec
sbb
test
add
pop
jge
lods
jae
push
inc
and
mov
mov
add
and
into
mov
xor
jnp
ret
adc
mov
sbb
push
add
add
inc
loope
pushf
rorl
movb
jecxz
jb
mov
add
add
and
ja
sbb
pushf
dec
add
cmpsl
mov
icebp
notb
xor
add
mov
into
clc
jns
inc
les
add
mov
add
push
fnstenv
mov
add
xchg
out
outsb
scas
push
out
mov
insl
xchg
push
sahf
add
mov
addb
lahf
fwait
mov
add
mov
dec
std
push
add
dec
inc
mov
jmp
adc
add
ja
xor
repnz
add
and
xchg
jae
stos
sub
add
mov
cmp
lea
mov
add
mov
add
lret
jo
mov
jl
cmp
add
add
and
mov
xor
mov
add
mov
add
xchg
cmp
mov
rolb
mov
add
xchg
inc
dec
nop
add
xor
or
jp
push
movb
clc
xchg
mov
dec
stc
inc
add
mov
mov
dec
sub
mov
mov
js
add
add
mov
stos
adc
mov
mov
add
adc
mov
mov
mov
add
sub
add
pop
cmp
dec
pushf
inc
loopne
mov
add
scas
mov
mov
push
mov
mov
adc
add
mov
ss
decb
add
fcompl
add
mov
or
xor
mov
add
cli
jg
movsb
stos
and
jg
cld
cwtl
in
lock
pop
fmulp
iret
jl
jb
mov
adc
movsl
scas
mov
clc
pop
sub
mov
je,pn
insb
out
pop
stos
push
es
cltd
aam
dec
mov
jae
sub
popf
mov
adc
clc
and
mov
xchg
sti
je
pop
dec
mov
dec
sbb
cwtl
aam
pop
dec
aad
add
push
adc
mov
int
pop
inc
mov
loopne
mov
adc
inc
in
das
into
jo
mov
pop
ret
dec
cld
stos
mov
loop
mov
xchg
imul
es
mov
add
adc
xor
mov
aas
negl
jb
mov
fnsave
xchg
jb
mov
out
aad
add
scas
mov
xchg
push
push
jl
add
mov
mov
jecxz
out
ds
inc
in
or
xlat
mov
adcl
mov
xlat
push
lock
out
xor
mov
mov
dec
sbb
xor
test
mov
ja
dec
rcll
ss
add
adc
icebp
mov
mov
add
test
push
in
call
xchg
lahf
pop
dec
mov
nop
add
sub
mov
jge
push
out
push
adc
mov
add
pop
xor
shl
mov
imul
in
call
cwtl
pop
and
arpl
xchg
not
ret
aas
inc
sahf
pusha
add
cmpsb
inc
add
loop
mov
add
add
jb
mov
add
add
push
add
mov
lret
mov
mov
mov
xchg
add
movsl
loopne
mov
mov
ret
rolb
mov
jbe
cltd
mov
jnp
insb
mov
addb
and
mov
fsubrs
xor
pushf
mov
cwtl
insb
xchg
pop
arpl
enter
hlt
mov
test
pop
and
mov
add
mov
add
es
xor
mov
mov
add
inc
add
scas
ds
or
add
add
dec
sarl
sub
faddl
popf
aad
lea
add
rcl
add
add
or
pop
add
add
add
add
mov
out
popa
test
or
in
sarl
mov
rolb
mov
in
into
push
xor
mov
ret
lret
dec
xor
shl
test
mov
lahf
fisttps
test
pop
sbb
outsl
push
mov
notl
add
jae
enter
pop
pop
movsl
push
mov
jns
mov
mov
adc
mov
add
ret
imul
aad
shl
dec
popl
rolb
mov
jl
sbb
cmp
out
push
pusha
add
cmpsb
mov
and
mov
jne
sbb
rolb
mov
movsl
jns
ds
jp
leave
cmpsb
je
jno
loop
mov
je
cmp
jge
lret
xchg
les
fmuls
outsl
fisubl
inc
add
add
jmp
add
fmul
or
fstl
cld
dec
inc
add
int
mov
add
add
je
add
stc
repz
add
add
mov
add
cs
rolb
mov
xchg
push
mov
sub
fdivl
sbb
imul
and
add
adc
sti
cmpsl
scas
lock
jb
mov
je
jb
mov
test
cmp
sub
imul
enter
jbe
add
jle
lods
adc
mov
bound
mov
out
xchg
add
xchg
fiadds
int
sub
add
add
mov
inc
add
mov
mov
lret
pop
pop
dec
adc
daa
leave
out
repnz
add
mov
add
add
pop
aam
mov
pusha
add
adc
add
notb
or
cmp
push
mov
jne
push
mov
add
mov
jmp
subl
nop
add
ret
sbb
mov
add
xor
mov
lods
dec
fadds
mov
mov
inc
mov
push
mov
or
add
inc
add
pop
test
addb
adcl
stc
cmp
cmp
add
loopne
mov
jg
cwtl
stos
daa
mov
mov
mov
out
addr16
popf
mov
push
dec
dec
pop
cmp
adc
sub
mov
xor
sbb
and
orl
add
mov
push
add
popa
clc
addb
mov
fisubl
dec
push
mov
add
inc
mov
mov
bound
mov
nop
add
outsl
jo
mov
add
xor
mov
and
dec
mov
mov
cmc
and
mov
addb
fstpt
and
cmp
push
mov
es
jns
adc
fisubl
adc
mov
jge
add
add
adc
lret
add
add
adc
push
xor
mov
mov
pop
ret
cmp
mov
jle
sub
xchg
ss
add
jbe
mov
pop
push
add
adc
mov
mov
add
adcl
jbe
jecxz
push
int
mov
xchg
pop
xor
in
add
mov
adcl
or
xchg
xor
mov
and
adcl
insl
pop
dec
aas
addb
mov
movsl
mov
add
dec
sbb
insb
push
jmp
scas
add
mov
ret
pushf
cld
inc
add
dec
xor
mov
les
daa
mov
mov
imul
ljmp
pusha
add
aam
jbe
fs
cs
ljmp
inc
ss
data16
add
test
mov
mov
and
mov
jg
pop
cs
iret
pop
dec
std
fistpll
movsl
cmpsl
and
das
push
clc
stc
jl
push
ss
mov
jb
mov
popf
xchg
addl
xchg
or
popf
pop
pop
mov
xor
sub
cmp
jecxz
mov
into
xchg
push
add
add
add
mov
mov
add
mov
add
fisubrl
mov
push
in
xchg
jl
pusha
add
add
test
nop
add
dec
sbb
leave
shll
mov
pop
fs
xchg
add
add
ret
js
xchg
cld
call
adc
mov
cs
jns
gs
aam
pop
mov
mov
loop
mov
pop
lahf
pop
dec
roll
mov
mov
rolb
dec
mov
pop
iret
popf
lret
mov
rcr
push
push
popa
jns
out
push
stos
in
dec
mov
mov
pusha
add
imul
std
mov
add
int
add
add
mov
sarl
cmpsb
cwtl
test
in
cmc
push
inc
mov
mov
sbb
and
mov
xlat
pop
cmp
cmp
xchg
xor
mov
mov
xor
add
mov
add
daa
rolb
mov
fsincos
and
mov
cmp
xchg
mov
dec
dec
fldt
xor
hlt
add
dec
scas
mov
xchg
add
mov
inc
sahf
fidivrs
cmp
out
and
xchg
cmpsl
mov
jl
rol
add
add
lock
inc
mov
into
or
mov
xchg
clc
dec
movsb
mov
pop
rolb
mov
mov
sbb
mov
add
sub
fcompl
lods
mov
mov
loope
or
push
ficompl
lds
pop
or
rcr
daa
dec
bound
mov
ljmp
dec
lds
cmp
add
bound
mov
inc
ficoml
lds
cmp
int
inc
pmaxub
stos
xor
add
mov
lods
sub
mov
clc
push
add
mov
xchg
xchg
jmp
pop
adc
imul
pop
inc
mov
jne
test
cmp
rcrl
mov
dec
sbb
lea
cmp
push
push
sub
add
jge
popl
fcomi
aaa
mov
push
jnp
mov
jle
jbe
lds
dec
inc
sahf
js
sbb
add
adc
mov
das
jbe
fwait
push
sub
xchg
mov
xlat
mov
lahf
loopne
mov
movsb
and
mov
in
imul
push
add
adc
insl
pushf
lret
dec
in
and
mov
mov
add
inc
mov
mov
mov
jne
cmpsb
adc
cmp
xchg
add
pop
fucom
aas
leave
sub
div
aas
out
jmp
cmp
dec
sbb
add
popf
out
adc
pushf
out
mov
mov
push
pop
imul
sub
call
iretw
data16
mov
addb
ljmp
mov
push
xlat
xchg
or
jge
and
rolb
rolb
mov
xchg
leave
push
mov
andl
add
popa
push
push
add
mov
inc
in
jmp
xor
in
add
rolb
mov
lods
ljmp
mov
arpl
mov
inc
add
xchg
jne
push
adc
mov
add
mov
mov
push
add
cld
adc
push
add
mov
mov
mov
les
xchg
ja
negl
add
or
add
mov
lret
mov
fs
or
adc
xchg
fcmovnb
icebp
mov
mov
cmp
sub
pushf
jl
gs
push
mov
cmp
jecxz
mov
mov
mov
rolb
or
pushf
mov
mov
adc
jne
js
adc
add
pop
std
les
inc
fisubl
or
aam
cmp
inc
addb
add
mov
je
aad
data16
stc
out
aas
hlt
aad
sbb
testb
xlat
cld
ds
jp
sub
xlat
jae
lods
sbb
cld
jns
fucomi
rolb
mov
pop
push
lods
movsb
pop
and
lcall
repnz
jae
pop
arpl
and
mov
clc
repnz
jae
and
popa
push
imul
sbbl
ljmp
nop
jae
roll
add
lcall
add
add
roll
ljmp
push
add
add
xor
fwait
cld
nop
jmp
in
and
loopne
ss
xchg
add
xlat
xor
rolb
je
push
push
mov
xchg
ret
add
js
add
jae
cli
add
add
add
cmp
loopne
repnz
jae
add
je
popa
add
xchg
push
mov
add
add
add
inc
add
test
fwait
cld
nop
jmp
addb
stos
mov
clc
repnz
jae
add
add
lock
push
js
repnz
jae
in
add
jnp
test
repnz
jae
add
add
push
mov
xchg
ret
pop
add
add
add
shl
add
aam
add
adc
add
clc
repnz
jae
pop
add
add
cli
mov
clc
repnz
jae
jl
sbb
inc
push
mov
xchg
ret
and
add
add
repnz
jae
js
andb
xchg
mov
clc
repnz
jae
add
clc
repnz
jae
orb
add
das
rep
fwait
cld
nop
jmp
mov
add
aam
add
out
xchg
sub
repnz
jae
loopne
ret
and
fdivrs
lea
clc
repnz
jae
add
roll
and
insl
call
clc
repnz
jae
rcl
roll
sbb
rclb
repnz
cmp
ret
add
add
insb
rorl
decl
push
mov
xchg
ret
add
add
je
add
adc
repnz
jae
add
add
ret
sub
mov
xchg
ret
lcall
or
clc
repnz
jae
add
add
ret
clc
repnz
jae
add
inc
add
add
jl
xor
push
mov
xchg
ret
insl
add
xor
add
clc
repnz
jae
das
add
and
mov
fwait
cld
nop
jmp
ss
xchg
mov
dec
call
clc
repnz
jae
aam
cli
add
lods
jmp
add
add
add
jle
add
add
je
clc
repnz
jae
add
add
stos
clc
repnz
jae
add
add
das
and
jmp
cmc
inc
add
add
inc
adc
mov
mov
clc
repnz
jae
hlt
cmc
add
inc
ljmp
fwait
cld
nop
jmp
add
add
int3
mov
jmp
incl
popf
mov
add
add
add
movsl
rolb
mov
jne
je
cld
nop
jmp
mov
and
add
movsl
fwait
inc
clc
repnz
jae
add
add
rcrl
clc
repnz
jae
push
add
fnstenv
jne
clc
repnz
jae
cli
add
pop
pop
clc
repnz
jae
add
ljmp
popa
push
mov
xchg
ret
add
out
add
cmp
mov
sub
mov
cmp
ret
mov
roll
rcl
jg
jg
fwait
cld
nop
jmp
loopne
cmc
add
mov
les
mov
fwait
cld
nop
jmp
add
and
sub
add
add
add
loopne
out
dec
mov
push
mov
xchg
ret
add
xchg
push
add
add
adc
pop
cmpsl
lcall
mov
fwait
cld
nop
jmp
or
roll
adc
mov
or
nop
jmp
add
add
add
add
mov
clc
repnz
jae
add
cli
in
xchg
clc
repnz
jae
add
jl
jle
mov
jg
fwait
cld
nop
jmp
add
addb
add
pop
frstor
xor
add
clc
repnz
jae
and
mov
test
nop
jae
fildl
add
clc
repnz
jae
js
add
js
add
mov
add
push
add
hlt
add
add
push
mov
xchg
ret
in
rcr
add
xchg
mov
mov
iret
inc
add
add
add
add
or
mov
xchg
ret
jl
popf
pop
add
mov
cltd
pusha
fwait
cld
nop
jmp
fldcw
and
add
push
jne
and
fwait
cld
nop
jmp
pop
fdiv
fcomps
sar
nop
jae
cmpsl
hlt
add
arpl
add
clc
repnz
jae
jle
das
add
cld
nop
jmp
push
push
mov
and
sbb
add
fwait
cld
nop
jmp
add
xor
nop
jae
add
add
add
out
nop
add
nop
jae
pop
adc
and
add
ret
pop
push
push
mov
xchg
ret
add
add
addb
mov
clc
repnz
jae
popa
adc
pop
add
adcb
addb
rolb
mov
add
enter
jmp
add
add
cmc
roll
bound
mov
mov
xchg
ret
add
mov
add
das
in
ret
add
cmpsl
xchg
test
insl
add
add
mov
dec
fwait
cld
nop
jmp
add
push
add
add
mov
test
add
clc
repnz
jae
add
arpl
push
clc
repnz
jae
push
popa
add
push
add
fisttpl
test
cli
lcall
incl
movb
lahf
jmp
add
add
add
add
xorb
clc
repnz
jae
es
add
add
mov
and
clc
repnz
jae
add
push
jl
add
nop
jmp
add
add
add
arpl
push
mov
xchg
ret
cmpsl
add
add
fwait
cld
nop
jmp
inc
aam
mov
adc
xchg
add
add
nop
jae
mov
add
in
aaa
push
jmp
push
add
add
aam
add
add
add
sbb
add
repnz
jae
add
shrl
mov
fwait
cld
nop
jmp
add
insb
and
mov
clc
repnz
jae
add
mov
add
fwait
cld
nop
jmp
add
add
add
ret
dec
lea
fwait
cld
nop
jmp
addb
andl
andl
add
add
rcr
add
pusha
clc
repnz
jae
add
add
add
into
push
clc
repnz
jae
add
push
add
pop
push
mov
xchg
ret
popf
jle
add
add
inc
lods
ret
clc
repnz
jae
and
insl
add
rcr
mov
fwait
cld
nop
jmp
jle
aas
adc
mov
mov
mov
clc
repnz
jae
ljmp
clc
repnz
jae
add
add
mov
adcb
sar
nop
jae
fstps
add
mov
clc
repnz
jae
popa
lcall
out
mov
repnz
jae
lcall
add
add
repnz
jae
add
add
cld
nop
jmp
push
add
add
add
in
xor
clc
repnz
jae
add
add
add
clc
repnz
jae
add
in
roll
or
mov
xchg
ret
cmp
jle
addb
push
inc
sbb
nop
jae
add
add
add
sub
clc
repnz
jae
add
and
jl
clc
repnz
jae
popf
pop
cmpsl
and
mov
rclb
test
inc
add
pop
cmp
and
add
clc
repnz
jae
es
ret
fidivl
sar
nop
jae
pop
add
add
add
loope
cld
nop
jmp
lcall
es
stos
mov
clc
repnz
jae
add
or
add
push
mov
xchg
ret
add
js
add
xor
fwait
cld
nop
jmp
cmpsl
add
add
add
mov
push
mov
xchg
ret
add
add
insb
xlat
das
push
clc
repnz
jae
testl
add
loopne
mov
push
push
mov
xchg
ret
lcall
push
fildl
nop
jae
je
loopne
loopne
xlat
xchg
mov
xchg
ret
out
push
push
add
out
add
dec
cmp
fwait
cld
nop
jmp
hlt
popa
ljmp
add
clc
repnz
jae
add
pop
addb
pop
push
clc
repnz
jae
add
insb
test
pop
aas
xlat
loope
add
mov
push
mov
xchg
ret
mov
popa
add
jmp
test
add
in
add
add
add
add
add
clc
repnz
jae
jle
insl
jmp
nop
jae
add
add
add
aam
xchg
mov
rep
clc
repnz
jae
roll
popf
add
repz
mov
xchg
ret
or
jle
add
clc
repnz
jae
add
add
add
leave
mov
push
mov
xchg
ret
fildl
add
je
cmpsb
inc
add
sub
loope
inc
add
fadds
push
clc
repnz
jae
add
jl
add
or
mov
xchg
ret
and
xchg
inc
fs
fs
repnz
jae
add
ret
mov
xchg
ret
add
jle
add
push
mov
mov
pop
xchg
add
int
or
mov
add
add
push
mov
add
add
fs
mov
clc
repnz
jae
movsl
xchg
push
cli
fists
xor
inc
add
test
int3
mov
clc
repnz
jae
add
and
lcall
cmc
lcall
sbb
add
ret
add
dec
or
cld
nop
jmp
rcl
ret
add
add
loop
mov
sub
clc
repnz
jae
lcall
sub
fwait
cld
nop
jmp
add
flds
das
push
pop
push
clc
repnz
jae
add
add
js
negl
mov
push
mov
xchg
ret
pop
add
mov
xchg
in
or
inc
cmc
inc
add
roll
das
adc
rolb
mov
add
fwait
cld
nop
jmp
arpl
ret
inc
and
add
sahf
mov
clc
repnz
jae
adc
add
inc
clc
repnz
jae
add
popa
add
mov
push
mov
xchg
ret
jle
aas
add
mov
xor
add
mov
push
mov
xchg
ret
add
adc
flds
jb
clc
repnz
jae
jle
cli
and
push
mov
xchg
ret
add
add
inc
pusha
add
mov
xchg
ret
add
add
js
dec
jne
clc
repnz
jae
add
hlt
add
mov
adc
adc
add
ss
add
loopne
mov
lock
repnz
jae
ss
add
add
mov
clc
repnz
jae
jl
je
aas
add
cld
jmp
incl
mov
add
add
mov
dec
pop
push
mov
xchg
ret
add
js
push
fwait
cld
nop
jmp
add
add
add
fadds
add
sub
add
repnz
jae
out
add
aas
aas
mov
mov
mov
clc
repnz
jae
pop
je
arpl
xchg
popf
pop
clc
repnz
jae
test
adc
pop
add
sahf
push
push
mov
xchg
ret
add
add
es
push
clc
repnz
jae
add
fadds
out
add
jl
fldcw
clc
repnz
jae
add
popa
bound
mov
inc
push
mov
xchg
ret
and
add
pop
push
test
mov
fwait
cld
nop
jmp
add
cmc
add
sbb
clc
repnz
jae
add
add
cli
roll
aaa
mov
dec
cmp
repnz
jae
cli
add
add
push
icebp
insb
pop
clc
repnz
jae
add
add
mov
push
mov
xchg
ret
add
add
mov
repnz
jae
add
lcall
popa
add
repnz
jae
jle
loopne
testl
repnz
jae
add
push
rcrl
mov
pop
clc
repnz
jae
roll
add
mov
sub
clc
repnz
jae
add
mov
arpl
xchg
mov
mov
out
mov
push
mov
xchg
ret
es
cli
add
push
mov
inc
mov
call
das
fildl
add
clc
repnz
jae
popf
test
add
test
clc
repnz
jae
pop
add
hlt
shll
jo
mov
xor
repnz
jae
ljmp
mov
add
fwait
cld
nop
jmp
add
pop
das
ret
pop
pop
clc
repnz
jae
ret
add
add
aam
out
test
clc
repnz
jae
add
add
roll
add
jns
cmpl
xchg
sbb
add
roll
fimull
nop
jae
cmc
adc
push
add
mov
daa
push
repnz
jae
add
cmc
add
std
jne
clc
repnz
jae
popa
add
imul
push
mov
add
add
add
add
add
andl
orl
je
add
add
inc
fwait
cld
nop
jmp
inc
or
add
mov
clc
repnz
jae
add
fildl
loopne
js
jbe
clc
repnz
jae
add
add
inc
pop
cmpl
fwait
cld
nop
jmp
addb
pop
add
push
mov
clc
repnz
jae
ss
nop
jmp
add
add
add
cmp
sar
nop
jae
mov
add
arpl
add
add
and
repnz
jae
mov
in
mov
clc
repnz
jae
add
andb
push
mov
xchg
ret
add
je
mov
clc
repnz
jae
push
add
testl
sub
xchg
add
clc
repnz
jae
add
pop
add
jmp
incl
and
add
add
add
mov
test
push
mov
add
add
add
push
cli
add
incb
fmulp
jne
clc
repnz
jae
add
add
push
clc
repnz
jae
add
insl
add
add
inc
test
mov
adc
repnz
jae
mov
xchg
sbb
repnz
jae
aas
and
hlt
cmp
repnz
jae
aam
ret
add
insb
pop
in
fcoml
inc
into
inc
add
rcrl
loopne
mov
nop
jae
and
add
add
repnz
jae
and
add
add
add
add
repnz
jae
add
add
add
loopne
push
push
mov
xchg
ret
insl
addb
pop
pop
xorb
pushl
clc
repnz
jae
add
add
insb
test
mov
jb
clc
repnz
jae
add
js
aas
shll
lret
add
nop
jae
testl
fldcw
fs
insb
clc
repnz
jae
add
cmc
add
movb
pop
ljmp
add
add
push
fwait
add
clc
repnz
jae
mov
add
push
in
je
push
push
mov
xchg
ret
add
shl
in
adcb
test
nop
jae
inc
fneni(8087
fld
clc
repnz
jae
mov
addb
icebp
dec
add
clc
repnz
jae
inc
arpl
add
ljmp
jae
add
add
add
sbb
idiv
decl
add
addb
and
mov
add
clc
repnz
jae
das
cmc
mov
mov
movb
repz
add
add
mov
inc
icebp
inc
add
in
add
in
adc
push
mov
sub
add
add
add
and
mov
add
clc
repnz
jae
popa
add
out
movsl
loopne
call
clc
repnz
jae
jl
add
jae
pop
clc
repnz
jae
adc
and
mov
fwait
cld
nop
jmp
add
add
insl
aad
je
clc
repnz
jae
mov
in
call
fwait
cld
nop
jmp
je
add
add
xor
clc
repnz
jae
add
rcrl
dec
push
mov
xchg
ret
add
ss
add
add
add
fwait
cld
nop
jmp
fildl
roll
addb
mov
fwait
cld
nop
jmp
je
hlt
add
in
pop
push
mov
xchg
ret
add
add
lea
clc
repnz
jae
add
push
push
mov
xchg
ret
roll
add
push
add
enter
nop
jae
mov
adc
and
fwait
cld
nop
jmp
aas
add
adc
mov
mov
clc
repnz
jae
adc
add
fimuls
nop
jae
or
fadds
mov
mov
repnz
jae
push
pop
popa
add
cwtl
movswl
fwait
cld
nop
jmp
out
fstpt
add
pop
lea
fwait
cld
nop
jmp
lcall
pop
call
clc
repnz
jae
add
shl
dec
je
clc
repnz
jae
add
pop
xor
mov
in
add
add
adc
aam
and
add
clc
repnz
jae
popf
out
add
das
es
adc
or
add
aam
add
jne,pt
clc
repnz
jae
aas
add
mov
nop
jmp
add
add
add
xor
nop
jae
in
add
jl
add
scas
add
fwait
cld
nop
jmp
flds
test
rclb
aad
add
add
add
mov
add
enter
jae
cli
addb
add
pop
notl
add
add
adc
incl
add
mov
repnz
jae
popf
das
add
aas
add
shr
clc
repnz
jae
and
add
pop
pop
add
add
lods
add
push
mov
xchg
ret
loopne
add
lea
repnz
jae
mov
add
fldenv
or
and
mov
xchg
ret
add
pop
pop
addb
cmc
inc
add
add
inc
sbbb
nop
jmp
mov
popf
and
ds
fwait
cld
nop
jmp
cmc
add
test
mov
clc
repnz
jae
mov
jl
fsubrs
add
fwait
cld
nop
jmp
fdivs
call
clc
repnz
jae
add
pop
add
nop
jae
add
aam
add
rolb
mov
test
nop
clc
repnz
jae
add
add
sub
xor
add
clc
repnz
jae
mov
inc
add
out
add
subl
push
mov
xchg
ret
add
add
test
mov
push
fwait
cld
nop
jmp
loopne
and
mov
fwait
cld
nop
jmp
add
add
sar
nop
jae
insb
add
add
and
ret
roll
add
mov
clc
repnz
jae
add
js
mov
fisttpl
cld
nop
jmp
and
add
movsl
add
in
popa
clc
repnz
jae
and
test
pushl
sar
nop
jae
add
pop
js
cli
add
push
mov
xchg
ret
js
adc
je
clc
repnz
jae
shll
rep
clc
repnz
jae
fsubs
andb
sub
repnz
jae
add
aam
add
and
push
mov
xchg
ret
movsl
mov
add
pusha
clc
repnz
jae
roll
add
push
testl
mov
xchg
ret
pop
add
flds
jmp
sub
incl
pop
pop
nop
add
add
repnz
jae
jl
push
add
push
js
test
hlt
clc
repnz
jae
arpl
add
or
clc
repnz
jae
add
cmc
push
lea
clc
repnz
jae
and
in
add
pop
fisttps
add
repnz
jae
add
push
dec
add
clc
repnz
jae
popf
pop
cmc
add
add
call
nop
jae
aam
inc
aas
add
clc
repnz
jae
add
add
add
pop
mov
clc
repnz
jae
pop
add
das
sbb
stc
inc
add
add
hlt
add
push
add
or
in
incl
mov
fsubs
jbe
clc
repnz
jae
add
add
ljmp
jmp
adc
popf
add
or
mov
xchg
ret
jl
add
fadds
aas
stos
push
fwait
cld
nop
jmp
cli
pop
push
fcmovnbe
add
add
add
clc
repnz
jae
add
add
dec
xor
push
mov
xchg
ret
add
xchg
popa
insl
add
clc
repnz
jae
add
add
fnstenv
in
add
movsl
add
add
add
add
inc
adc
repnz
jae
jl
and
cli
cmpsb
cmp
repnz
jae
add
sub
jg
clc
repnz
jae
mov
jl
movsb
push
mov
xchg
ret
pop
add
hlt
mov
loop
add
add
add
test
repnz
jae
add
mov
clc
repnz
jae
add
popa
ds
clc
repnz
jae
xchg
add
xchg
shll
repz
push
fwait
cld
nop
jmp
add
addb
movsl
add
fadds
pop
cmp
repnz
jae
push
mov
add
fistps
mov
xchg
ret
movsl
flds
mov
mov
adc
pop
push
sub
nop
jmp
jl
add
add
in
mov
add
repnz
jae
ret
arpl
add
addr16
mov
nop
jmp
add
roll
jle
add
push
mov
je
clc
repnz
jae
push
add
movsl
sbb
in
add
test
sub
inc
jg
in
add
push
add
in
and
mov
add
clc
repnz
jae
and
insl
cmp
repnz
jae
add
test
add
add
js
fwait
cld
nop
jmp
popa
insl
add
cmp
jae
pop
push
arpl
add
repnz
jae
add
pop
add
add
imul
incl
lcall
or
enter
clc
repnz
jae
ret
lcall
lcall
add
add
add
sbb
cld
nop
jmp
pop
cmpsl
cmp
and
mov
repnz
jae
jle
fincstp
mov
add
enter
incl
roll
add
add
add
or
push
flds
xchg
ret
add
lcall
subl
add
add
add
xchg
inc
add
add
repnz
jae
out
ss
dec
push
mov
xchg
ret
in
pop
rcl
add
outsb
je
repnz
jae
add
insl
add
add
clc
repnz
jae
es
add
add
mov
xchg
ret
add
add
mov
outsl
fwait
cld
nop
jmp
add
je
add
repnz
jae
mull
in
add
mov
clc
repnz
jae
add
add
rcr
lea
push
mov
xchg
ret
es
out
add
push
clc
repnz
jae
das
and
add
shrl
add
push
push
mov
xchg
ret
fstps
add
add
adc
xchg
loope
add
mov
add
clc
repnz
jae
add
das
add
mov
repnz
jae
add
and
mov
mov
clc
repnz
jae
movb
je
add
aas
adc
out
incl
add
add
cli
add
push
mov
xchg
ret
add
ljmp
add
push
mov
xchg
ret
add
add
add
add
clc
repnz
jae
fldl2e
add
clc
repnz
jae
rcl
add
aam
pop
js
add
repnz
jae
add
in
aam
xor
add
clc
repnz
jae
ret
add
and
push
clc
repnz
jae
in
insl
add
jmp
addb
add
add
and
fildl
fisubrs
mov
nop
jae
js
popf
ret
sub
add
repnz
jae
add
jne
shr
clc
repnz
jae
and
or
jne
clc
repnz
jae
add
add
movb
add
clc
repnz
jae
je
shll
aam
imul
stos
clc
repnz
jae
mov
add
je
test
add
mov
clc
repnz
jae
cmpsl
or
push
adc
mov
clc
repnz
jae
lcall
hlt
cmpl
fwait
cld
nop
jmp
popf
mov
jnp
nop
jae
push
add
add
loopne
mov
mov
clc
repnz
jae
flds
add
pop
insl
pop
repz
jne
fwait
cld
nop
jmp
push
add
movsl
inc
add
cmp
clc
repnz
jae
add
mov
clc
repnz
jae
add
add
sahf
mov
clc
repnz
jae
add
icebp
mov
and
clc
repnz
jae
add
mov
mov
ljmp
add
je
jl
inc
add
jns
fwait
cld
nop
jmp
loopne
insl
add
ret
add
out
incl
das
roll
add
cmp
inc
xor
clc
repnz
jae
add
add
add
clc
repnz
jae
and
add
add
add
mov
mov
inc
add
add
add
sbb
in
pop
mov
xor
add
pop
add
jl
sub
nop
jae
insl
add
testl
fwait
cld
nop
jmp
cli
das
loopne
mov
popa
add
mov
xchg
ret
add
add
add
add
mov
clc
repnz
jae
add
out
mov
clc
repnz
jae
flds
push
stos
push
mov
in
add
add
jecxz
sbb
and
add
add
pushl
push
mov
xchg
ret
insb
pop
mov
lret
nop
jmp
arpl
mov
add
nop
jae
add
add
arpl
push
push
fwait
cld
nop
jmp
roll
add
cmpsl
mov
sbb
clc
clc
repnz
jae
flds
add
add
add
mov
clc
repnz
jae
push
insb
mov
cli
mov
push
mov
xchg
ret
add
add
pop
mov
cld
nop
jmp
add
jle
add
add
mov
mov
xchg
ret
add
fcom
add
mov
adc
dec
push
mov
xchg
ret
add
add
mov
mov
push
mov
xchg
ret
add
loopne
add
mov
xchg
ret
cmpsl
add
lcall
pop
push
mov
xchg
ret
movb
add
pop
add
fwait
cld
nop
jmp
add
push
jae
xchg
push
mov
xchg
ret
cli
push
orb
push
mov
xchg
ret
add
or
repnz
jae
add
sahf
jmp
add
add
add
add
add
add
clc
repnz
jae
add
add
jmp
nop
jae
add
add
sub
adc
mov
clc
repnz
jae
add
add
loopne
xchg
add
add
cld
nop
jmp
add
scas
mov
push
mov
xchg
ret
popf
add
popf
add
push
lods
mov
clc
repnz
jae
jle
mov
pop
les
clc
repnz
jae
flds
lcall
nop
jmp
add
add
jl
add
repnz
jae
out
add
add
add
mov
push
mov
xchg
ret
mov
dec
push
clc
repnz
jae
add
mov
test
dec
cmp
mov
xchg
ret
ret
js
push
add
loop
mov
xchg
ret
add
add
cmc
aam
xor
clc
repnz
jae
add
insb
add
fstps
inc
repnz
jbe
addb
fstl
repnz
jae
add
and
jle
aas
cmpsl
sbb
nop
jae
pop
add
insb
mov
or
hlt
incl
cmpsl
and
adc
dec
push
push
mov
xchg
ret
popa
add
es
pop
mov
repnz
jae
add
sbb
movsl
addb
xchg
pop
push
mov
xchg
ret
add
add
mov
cmpw
fwait
cld
nop
jmp
add
shll
push
jle
push
mov
xchg
ret
add
lcall
mov
clc
repnz
jae
add
test
loopne
mov
mov
clc
repnz
jae
add
shll
add
into
inc
add
movb
lcall
cld
nop
jmp
add
add
addb
pop
inc
add
jbe
clc
repnz
jae
add
dec
push
push
mov
xchg
ret
add
add
add
fcoms
push
push
mov
xchg
ret
add
add
pop
add
mov
clc
add
in
jle
add
addb
adc
cld
nop
jmp
add
movb
cli
jle
movsb
adc
push
mov
popl
add
add
xor
xchg
add
div
clc
repnz
jae
das
loopne
add
fldcw
icebp
inc
add
cli
adc
add
add
nop
jae
rcrl
jle
add
adcb
cmc
clc
repnz
jae
or
popa
add
cld
nop
jmp
aas
add
pop
ret
add
sub
jle
add
idiv
jmp
rcl
add
push
add
cmc
popf
pop
push
mov
xchg
ret
pop
in
in
add
cmp
repz
cld
nop
jmp
mov
in
pop
add
dec
call
fwait
cld
nop
jmp
add
fildl
pop
cmp
test
repz
clc
repnz
jae
add
jl
jne
clc
repnz
jae
in
and
repnz
jae
andb
add
nop
jae
add
hlt
add
add
loopne
push
call
clc
repnz
jae
add
fildl
imul
nop
jae
add
add
in
mov
push
sub
pop
add
pop
hlt
andb
in
pop
push
mov
loop
je
add
add
add
sbb
add
je
add
xor
add
clc
repnz
jae
cli
es
jmp
add
add
add
popf
pop
add
xchg
jae
xchg
fwait
cld
nop
jmp
add
add
es
mov
popa
fwait
cld
nop
jmp
add
add
adc
jne
push
mov
xchg
ret
je
inc
add
iret
push
clc
repnz
jae
das
add
dec
cmp
repnz
jae
testl
add
loope
inc
add
roll
add
ss
pusha
push
mov
xchg
ret
add
add
mull
add
lret
mov
xchg
ret
and
add
test
pop
clc
add
clc
repnz
jae
add
add
add
clc
repnz
jae
addb
and
pop
inc
jge
movb
add
clc
repnz
jae
add
add
call
clc
repnz
jae
add
mov
clc
repnz
jae
je
addb
add
add
adc
repnz
jae
and
mov
mov
clc
repnz
jae
add
xorb
push
mov
xchg
ret
lcall
mov
dec
push
push
mov
xchg
ret
add
mov
in
add
add
movsl
out
sbb
nop
jae
arpl
fdivrs
ss
xchg
add
nop
jae
flds
add
push
add
add
push
push
mov
xchg
ret
add
test
insb
insb
mov
clc
repnz
jae
jl
loopne
test
add
clc
repnz
jae
add
add
add
add
repnz
jae
insl
add
daa
sbb
and
clc
repnz
jae
add
roll
add
dec
clc
dec
inc
fwait
cld
nop
jmp
mov
in
mov
mov
lret
clc
repnz
jae
add
sarl
mov
repnz
jae
add
insl
pop
pop
mov
fwait
cld
nop
jmp
popf
flds
aas
test
add
pop
out
add
add
hlt
and
popa
mov
repnz
jae
add
in
add
mov
adc
jmp
add
cmpsl
and
add
and
xchg
add
xor
add
clc
repnz
jae
inc
movsl
subl
fadds
xchg
ret
rcr
add
add
mov
jnp
clc
clc
repnz
jae
lcall
cltd
pop
push
mov
xchg
ret
inc
inc
ret
add
mov
jb
mov
movswl
clc
repnz
jae
add
mov
clc
repnz
jae
cmc
lcall
and
fwait
cld
nop
jmp
ret
je
pop
push
add
sub
rclb
loop
inc
add
add
jl
jle
popf
dec
clc
repnz
jae
add
add
ror
outsb
and
mov
xchg
ret
add
add
mov
jmp
shl
cmp
add
xor
mov
bound
push
sti
inc
add
testl
fistpll
fwait
cld
nop
jmp
ljmp
inc
inc
add
nop
jae
add
and
aam
jle
push
cld
push
push
mov
xchg
ret
adc
add
popf
cmc
movsl
mov
mov
jae
lcall
sub
cld
nop
jmp
pop
insb
cli
in
aam
icebp
mov
repnz
jae
add
add
add
clc
repnz
jae
add
add
and
sbb
cmp
repnz
jae
rcr
in
and
mov
xor
rolb
xchg
ret
add
fadds
push
push
add
add
repnz
jae
lcall
repnz
jae
andb
je
add
mov
push
mov
jnp
fcoml
mov
add
pop
int3
jl
and
clc
repnz
jae
cli
roll
push
add
pop
push
mov
in
add
add
mov
add
xor
clc
repnz
jae
add
add
add
clc
repnz
jae
hlt
insl
ljmp
add
add
fdivr
incl
pop
inc
add
pop
movzwl
clc
repnz
jae
add
jle
sbbl
adc
and
aas
in
das
mov
insl
add
clc
repnz
jae
mov
aam
and
ja
in
adc
mov
xchg
ret
jl
hlt
add
or
jne
clc
repnz
jae
andb
roll
ret
in
or
add
incl
fwait
cld
nop
jmp
cmc
cli
pop
add
sbb
repnz
jae
add
add
sub
clc
repnz
jae
add
add
add
push
mov
xchg
ret
cmp
lret
add
mov
xchg
ret
add
jl
cmpsl
xchg
out
iret
and
push
mov
xchg
ret
negl
fucomi
add
mov
fwait
cld
nop
jmp
addb
add
add
add
fwait
cld
nop
jmp
add
add
add
sbb
mov
clc
repnz
jae
push
add
sub
nop
jae
mov
push
jb
mov
jae
add
add
movsl
add
imul
incl
add
add
fwait
cld
nop
jmp
cmpsl
add
mov
fldenv
add
repnz
jae
js
cmc
and
aam
mov
clc
repnz
jae
das
add
popl
clc
repnz
jae
pop
and
popa
jl
push
mov
jae
mov
xchg
in
inc
js
in
add
add
clc
repnz
jae
add
sub
adc
repnz
jae
add
mov
gs
mov
adc
mov
movsb
push
mov
add
mov
jl
sbb
repnz
jae
add
add
insb
mov
cmp
cmpsl
add
add
aaa
sub
nop
jmp
add
insl
popf
popa
add
popa
jle
test
hlt
clc
repnz
jae
hlt
add
dec
pop
clc
repnz
jae
add
cmc
add
mov
stos
negl
sar
lcall
add
aad
cmpsl
sbb
mov
xchg
ret
js
push
and
out
jl
mov
clc
repnz
jae
aas
ljmp
mov
nop
jae
cli
mov
add
jle
movsb
pop
xor
jmp
incl
add
cmpsl
popa
fimuls
jecxz
add
adc
movsl
add
daa
pushf
add
clc
repnz
jae
in
add
add
push
cmp
repnz
jae
add
insb
pop
ja
leave
mov
clc
repnz
jae
add
cmp
mov
clc
repnz
jae
add
ss
insl
add
je
leave
clc
repnz
jae
insl
pop
jle
rcrl
arpl
lcall
jmp
add
and
inc
or
repnz
jae
and
pop
xor
mov
clc
repnz
jae
push
add
add
add
movzwl
clc
repnz
jae
loopne
add
add
aad
pop
hlt
cli
add
lcall
push
push
clc
repnz
jae
addb
insl
add
mov
clc
repnz
jae
aas
add
add
xor
fwait
cld
nop
jmp
add
add
add
add
mov
xchg
ret
jl
cmp
je
clc
repnz
jae
mov
cmc
mov
mov
clc
repnz
jae
loopne
add
push
lcall
nop
jmp
addb
fnsetpm(287
flds
fmull
scas
enter
jmp
and
add
add
es
add
add
add
lcall
rep
fwait
cld
nop
jmp
aas
add
jl
jl
mov
pop
fwait
cld
nop
jmp
add
add
jbe
je
clc
repnz
jae
js
popf
dec
lods
push
mov
xchg
ret
push
inc
cli
in
insb
cmp
clc
repnz
jae
lcall
jne
clc
repnz
jae
push
add
cmpsb
pusha
add
xor
add
fwait
cld
nop
jmp
add
test
add
push
clc
repnz
jae
js
loopne
and
clc
repnz
jae
and
fadds
clc
repnz
jae
add
push
int3
push
mov
mov
sbb
jb
push
add
add
dec
stc
cs
add
add
iret
pop
iret
cmp
xchg
jl
cmp
lret
sbb
cmp
jns
dec
std
xchg
cltd
xchg
jecxz
repnz
out
dec
rolb
mov
push
inc
add
mov
mov
cmp
aad
leave
add
and
push
push
insl
xor
inc
int
xchg
loop
mov
in
add
scas
jns
xor
sbb
in
je
sub
loopne
mov
pop
lock
jb
mov
in
rolb
mov
adc
sub
add
add
cmp
xchg
dec
jbe
shld
jle
rolb
clc
mov
mov
add
popf
xchg
cld
loop
mov
punpckldq
mov
stos
pop
insl
lcall
dec
int
fisttps
mov
add
mov
loop
mov
mov
mov
jnp
lret
cmp
sahf
push
add
aad
ret
xchg
stc
sbb
add
sbb
dec
pop
mov
mov
test
mov
cmc
fildll
xchg
add
int
jae
mov
mov
inc
sub
mov
cmp
adc
add
cmp
cld
pop
mov
shll
or
fdivr
pop
dec
xchg
sub
jo
mov
out
mov
addb
aad
dec
insb
test
mov
and
mov
enter
add
mov
add
in
dec
push
cmp
add
mov
xchg
jbe
xchg
mov
mov
pop
mov
mov
pop
adc
and
jmp
inc
jmp
mov
add
mov
ret
mov
push
sbb
xchg
mov
xlat
adc
mov
aad
test
sub
in
push
sub
adc
mov
cltd
push
pop
jno
adc
mov
pop
loop
mov
add
stc
repz
ret
mov
add
test
sahf
stc
stc
iret
daa
jecxz
icebp
mov
xor
mov
ds
mov
push
call
fsts
xchg
lret
sub
push
add
pop
test
or
mov
int3
mov
fdivl
xchg
lods
in
mov
xchg
add
mov
int3
and
add
xchg
in
lds
fisubl
jecxz
mov
mov
mov
stc
xrelease
or
lods
fildll
add
outsb
mov
retw
test
fldz
mov
xchg
xor
mov
sbb
xchg
xlat
jl
rorl
jmp
xchg
dec
loop
mov
mov
xor
add
add
add
mov
dec
and
add
or
addr16
pop
fdivs
mov
sbb
jo
mov
fimuls
cmp
dec
cmp
notl
mov
add
sbb
mov
hlt
fdivl
xchg
add
jae
fsubs
or
add
out
mov
popa
adc
in
add
sub
mov
call
rcrl
mov
mov
fldt
mov
or
add
xchg
add
ret
in
inc
pop
jg
sub
add
push
add
dec
stos
enter
sbb
addb
mov
ror
dec
add
mov
lahf
inc
mov
cld
es
add
rolb
mov
mov
add
adc
add
mov
in
sbb
fisubrl
push
add
and
iret
cltd
jbe
jl
mov
mov
add
add
and
mov
addr16
or
mov
push
add
test
pushf
insb
adcl
or
push
add
fidivrs
out
into
psubw
loop
mov
rorl
jecxz
lret
xor
add
sub
std
stc
scas
cld
sbb
fimuls
xorl
hlt
xor
sbb
mov
jg
add
xor
loop
mov
fistpll
jecxz
or
fstpl
add
add
sub
cmp
mov
and
mov
loop
mov
cmpsl
dec
sbb
jle
movsb
xchg
mov
popf
xchg
add
cmp
pop
mov
mov
add
jl
add
pop
cmp
cmc
jge
out
and
test
into
add
mov
add
mov
or
fs
cli
sub
jmp
imul
mov
and
rolb
mov
sti
inc
add
in
jnp
add
out
shrl
negb
push
out
cltd
iret
add
mov
dec
sbb
adc
mov
roll
sub
add
add
mov
cli
pop
pop
mov
mov
sub
add
sub
dec
mov
inc
mov
js
ja
xchg
in
popa
jmp
pop
lods
xchg
jl
add
lods
jge
mov
xlat
nop
add
lahf
mov
js
or
outsl
pop
cmp
int
lods
je
pop
jle
int
out
fdivl
fadds
lea
xchg
add
movsb
sub
or
inc
add
add
pop
pop
and
mov
sbb
xchg
ss
mov
mov
rcrl
and
insb
ds
cmp
inc
xorl
flds
jns
cmp
mov
cld
sti
das
loop
mov
xor
leave
ret
popf
cmc
aad
inc
adc
sbb
mov
mov
add
and
mov
mov
stos
sti
jg
dec
scas
inc
mov
fstl
lret
pop
test
sahf
pop
pop
adc
outsl
xor
pop
push
aas
popf
fisubrs
aas
xor
adc
add
dec
and
pop
lea
mov
xor
add
rorl
push
jne
or
xchg
popa
lahf
movsl
jnp
fwait
bound
mov
dec
xor
inc
in
inc
add
inc
lret
or
mov
loop
mov
test
cmpsb
into
test
mov
repnz
mov
adc
pop
xchg
mov
aas
call
add
mov
shl
stos
xchg
add
mov
pop
xchg
add
out
clc
cmpsb
pop
addb
outsb
aam
sahf
mov
inc
xchg
pop
aad
cwtl
mov
lock
jg
add
lcall
mov
mov
addb
add
mov
add
add
add
andps
push
out
push
cltd
jo
mov
add
mov
add
xor
jmp
mov
mov
lret
iret
aas
jmp
mov
daa
mov
xlat
pusha
add
test
add
mov
add
ss
jbe
loope
test
jg
push
pusha
add
imull
bound
mov
jg
cmp
out
rolb
test
rolb
int3
into
into
rolb
cmc
data16
lock
pop
cs
aam
mov
mov
cmp
mov
pop
rorl
jne
add
loop
mov
mov
out
xor
cli
arpl
daa
jle
push
lock
sub
add
in
add
adc
das
in
in
out
mov
mov
mov
lock
and
mov
clc
sbb
dec
into
aaa
add
push
lahf
fsubrl
add
pop
mov
add
xchg
mov
mov
mov
repz
inc
mov
jle
aad
aam
pop
shll
add
add
aas
les
jl
clc
jb
mov
jg
imul
sub
out
add
mov
das
ljmp
or
int3
xchg
push
mov
pusha
add
add
mov
jge
fadd
add
sbb
iret
out
ds
fs
add
fdivs
add
xchg
add
daa
iret
fs
xchg
jne
addb
lods
jecxz
mov
mov
and
addb
mov
mov
pop
and
mov
in
test
jnp
mov
mov
or
add
add
sbb
mov
add
mov
aam
dec
adc
imul
mov
imull
inc
cmc
add
mov
loopne
mov
jno
jae
pop
shll
dec
inc
mov
ret
fcoml
add
jge
les
lret
sbb
push
lcall
mov
jle
xor
mov
ljmp
ret
inc
pop
rolb
mov
jns
rorl
inc
fsubl
nop
add
nop
add
push
push
mov
out
or
mov
outsb
inc
add
test
add
add
cwtl
rolb
mov
xor
lea
cmp
rep
sahf
sub
rolb
mov
xchg
mov
add
movl
pop
leave
movsl
xchg
add
jl
push
mov
jns
push
add
shll
ja
stc
outsb
aas
rol
imul
push
div
cmp
lahf
out
leave
cmp
pop
jno
outsl
sbb
inc
outsb
add
das
pop
adc
cmpsl
xor
mov
shrl
inc
stc
mov
add
mov
push
and
adc
push
or
lea
out
nop
add
add
mov
sub
insb
addb
jo
mov
mov
push
insb
fisttpll
iret
pusha
add
add
rolb
mov
loop
mov
and
ret
mov
lods
cmp
mov
imul
lcall
inc
push
pop
mov
add
mov
movsb
ss
fsub
add
repnz
cs
push
push
inc
call
add
add
pop
jae
cmpsl
call
add
fcoml
loopne
mov
or
icebp
inc
add
and
cltd
xor
add
xchg
jle
icebp
arpl
add
sti
push
cmp
aas
lahf
outsl
enter
mov
add
jl
add
mov
mov
repz
cmp
add
mov
gs
dec
jno
js
add
loope
pop
xor
sub
repnz
dec
in
inc
add
add
mov
push
out
adc
mov
push
repnz
loop
mov
xor
add
inc
add
jmp
movb
loope
insb
and
mov
cmp
jne
daa
xchg
pusha
add
push
add
out
mov
enter
xor
add
or
push
push
imul
add
rolb
pusha
add
lret
mov
int3
mov
add
mov
repnz
imul
mov
dec
arpl
leave
lods
xor
fists
sub
add
js
movsb
or
repnz
jge
push
mov
mov
mov
ret
xor
mov
dec
test
add
push
inc
jnp
adc
mov
stos
roll
leave
shrl
es
pop
push
push
and
mov
xor
mov
mov
mov
insl
rolb
dec
faddl
into
stc
idivl
rolb
mov
into
imul
inc
add
mov
jbe
add
scas
stc
jb
mov
insl
outsw
stos
sub
jl
cld
out
cmpsl
jmp
gs
add
push
in
stc
mov
iret
push
xchg
pop
xchg
lahf
push
sarl
adc
mov
and
test
mov
adc
mov
test
sub
in
or
ret
pop
xchg
movsl
xchg
rorl
mov
test
idiv
popf
push
movsb
test
cmpsb
mov
add
mov
add
clc
int
pop
in
mov
push
add
dec
test
add
std
sbb
into
inc
pop
xchg
add
inc
arpl
add
imul
mov
add
sti
imull
test
hlt
xchg
push
dec
pusha
add
add
call
sbb
std
or
add
cmpsl
jbe
add
pop
std
aam
test
iret
sub
mov
adc
mov
icebp
int
fists
xor
mov
fstps
sub
insb
add
jecxz
inc
add
add
lock
cmc
pop
mov
sbb
xchg
into
divl
pop
into
es
add
ds
adc
mov
and
mov
push
add
mov
add
mov
add
push
ret
adc
mov
lcall
je
ds
push
add
in
rolb
mov
push
sbb
add
fld
or
mov
lods
imull
shll
jecxz
dec
mov
cmpsb
inc
xchg
outsb
pop
sbb
and
fnstsw
add
inc
pop
rolb
movsl
dec
les
decb
movsl
loop
mov
inc
sbb
cli
dec
neg
cmpsl
icebp
ret
mov
cld
push
dec
ret
filds
fwait
mov
pop
jne
jnp
mov
mov
mov
mov
mov
pop
fsubrs
dec
js
or
cli
cwtl
fildl
js
pop
hlt
bound
mov
push
xchg
jo
mov
xchg
add
icebp
lods
add
mov
add
pop
xchg
imul
out
mov
xor
xchg
lahf
ds
repnz
inc
jle
add
lods
or
fisubl
add
mov
add
jns
scas
xchg
sti
pop
mov
mov
xor
mov
addb
repz
mov
add
sbb
mov
lret
add
or
jmp
js
dec
popa
iret
mov
sahf
jmp
inc
pushf
ss
jp
stos
sub
cmp
cmpl
jnp
cltd
cmp
rolb
mov
test
add
mov
jecxz
test
xchg
add
xchg
dec
out
insb
sub
mov
jo
mov
popf
or
pop
fs
pop
add
and
shll
cwtl
imul
mov
mov
sbb
pop
ds
vmovaps
test
gs
xor
mov
xor
divb
mov
lods
cmp
xchg
and
mov
jne
data16
andl
and
add
mov
add
jl
add
pop
cmp
mov
mov
insb
or
cwtl
jo
mov
sarl
or
movsb
mov
ljmp
add
add
addb
jp
jle
int
add
push
fisubrs
addr16
rolb
mov
xor
inc
cmp
in
movsl
mov
mov
mov
jno
add
inc
add
xchg
je
push
mov
xchg
add
mov
in
div
add
loope
adc
mov
idiv
push
add
in
rolb
xorl
add
insl
and
adc
add
sub
popf
or
adc
mov
int
mov
sub
sbbl
mov
arpl
fisttpl
test
push
repnz
hlt
jge
sbb
or
inc
pop
or
jne
mov
jnp
add
xor
mov
mov
jns
add
cmp
rolb
in
jl
cwtl
push
add
mov
cmp
cmp
add
icebp
das
inc
add
add
jge
js
and
mov
cld
push
pop
cmp
aaa
add
mov
adc
and
add
pop
and
xchg
inc
dec
inc
fwait
testl
mov
mov
add
std
sahf
jnp
add
out
jne
leave
stos
mov
in
sbb
gs
xchg
out
push
aam
aaa
xor
add
mov
add
mov
les
mov
shll
outsl
aam
aad
cmp
lock
lea
lock
mov
loope
add
inc
add
add
sbb
inc
in
repz
sbb
xchg
std
xchg
mov
mov
add
jg
add
mov
hlt
out
mov
mov
mov
mov
xor
mov
imul
xor
mov
mov
les
add
push
add
les
mov
cmp
add
iret
cmpl
pop
or
mov
mov
add
jns
rolb
es
mov
mov
mov
add
mov
into
jne
fsts
mov
fidivl
out
lds
push
pop
mov
push
dec
xchg
add
and
daa
inc
fistpll
sub
mov
mov
inc
add
mov
test
adc
jns
and
mov
inc
lock
xchg
lock
lock
mov
sbb
inc
sbb
out
adc
mov
mov
dec
xchg
mov
cltd
fdiv
add
adc
mov
fisubrs
pop
pushf
sub
aaa
pop
cld
lret
mov
jnp
push
add
lea
cli
mov
lcall
push
loop
mov
sbb
fnsave
jno
cmp
xor
mov
mov
mov
xchg
mov
push
mov
mov
repnz
mov
adc
sbb
jbe
inc
add
mov
dec
push
mov
add
lahf
pop
mov
mov
jl
aaa
mov
jmp
add
adc
mov
mov
fcom
fdivrl
cltd
into
pop
dec
dec
sbb
xchg
add
mov
mov
scas
mov
movsl
sahf
dec
ds
das
in
push
xchg
inc
add
mov
add
mov
add
mov
mov
add
mov
mov
jecxz
rolb
mov
hlt
sub
lcall
cmp
sub
add
xor
jg
stos
mov
test
out
arpl
aas
xlat
je
push
call
inc
add
add
out
add
es
mov
clc
pop
rolb
mov
movsb
outsl
inc
stc
inc
xor
mov
jo
mov
stos
mov
mov
rolb
mov
pop
stos
test
add
pop
loope
clc
popf
jp
add
or
cmp
cmp
cmp
lds
dec
mov
push
mov
mov
rcrl
add
jl
add
mov
daa
mov
xor
mov
scas
idivb
adc
pop
int3
pop
jge
add
in
pop
sahf
xor
mov
popa
mov
mov
add
into
pop
push
xsha1
cmpsb
dec
xlat
movl
add
push
and
add
mov
sub
add
gs
mov
and
lcall
int
jg
enter
cmp
loopne
mov
negl
iret
into
push
aaa
jae
cmpsl
sub
cmpsb
pop
push
je
stos
leave
and
xor
add
pop
jg
hlt
test
ss
xor
mov
jnp
inc
into
cmp
adc
mov
pop
int
sar
mov
imul
pop
movsb
lahf
and
mov
add
mov
fisttpl
ret
insl
je
test
addb
mov
mov
fnsave
mov
sub
stos
dec
ljmp
aad
add
mov
outsb
adc
out
push
adc
push
outsb
sbb
adc
add
adc
mov
addb
rolb
notl
xlat
out
sbb
ret
push
jecxz
fs
es
sbb
add
push
push
lds
xor
xor
mov
dec
std
popa
cmp
ficoml
or
popa
mov
add
xchg
pusha
add
negl
jns
jne
xchg
add
call
stc
popf
add
mov
add
mov
add
jbe
xchg
imul
test
out
adc
jnp
push
cltd
rcr
cmp
inc
ljmp
add
ret
in
mov
add
push
add
xorl
cli
mov
popf
mov
ret
ljmp
mov
and
mov
movaps
inc
and
das
testb
pop
mov
add
mov
out
repnz
cmp
add
scas
testl
pop
mov
call
iret
lret
xor
mov
mov
jno
cmp
xor
mov
xchg
mov
fs
add
push
add
jnp
ss
jb
mov
add
cmp
mov
inc
in
test
pop
xchg
sub
mov
movsb
lods
mov
add
sub
mov
mov
mov
add
or
testl
mov
mov
js
punpcklwd
jge
test
hlt
stos
fbstp
lahf
jg
adc
mov
pop
add
mov
jp
in
cmp
mov
push
movsl
pop
insl
jg
cmp
test
insb
test
in
mov
mov
jg
add
dec
jno
xor
mov
lret
test
mov
add
add
stos
cmp
mov
sub
inc
neg
jle
adc
dec
mov
dec
hlt
aam
cmp
mov
push
int3
mov
or
test
std
mov
dec
push
xchg
add
mov
ljmp
pop
mov
pop
xor
fxch
inc
add
insb
mov
add
mov
add
add
rolb
mov
pop
fcompl
pusha
add
mov
inc
pusha
add
add
lcall
add
mov
addb
popf
and
and
mov
inc
jmp
add
fcmovne
das
sbb
int3
mov
mov
add
testl
mov
add
stos
adc
lods
std
pop
mov
and
mov
add
dec
push
cli
xor
mov
jne
push
addb
outsb
test
cmp
leave
je
enter
cmp
add
adc
mov
mulb
mov
add
call
pushf
mov
mov
fs
adc
xlat
out
mov
ljmp
in
ret
mov
sub
inc
add
push
out
pop
lret
es
jecxz
push
outsb
daa
inc
cmpsb
add
mov
aad
fistpl
in
cmp
pop
sub
mov
cmovne
mov
mul
adc
xor
jge
cmp
mov
push
stc
pop
jbe
mov
int
xchg
push
jo
mov
mov
sahf
push
pop
and
iret
shrl
aad
jmp
inc
add
testb
xchg
or
pushf
rcll
pusha
add
dec
pusha
add
addb
subl
fdivl
jbe
jp
push
rolb
int3
xchg
push
dec
lock
xchg
add
sub
bound
mov
rolb
inc
add
mov
out
js
jecxz
ds
test
rolb
mov
mov
sub
sbb
add
or
ss
xchg
pop
mov
dec
dec
insb
add
bound
mov
jg
add
or
or
cs
push
dec
xchg
and
adc
int
xor
mov
mov
mov
inc
or
repnz
addb
and
mov
loopne
mov
inc
pop
movsb
pop
and
cmp
out
insl
mov
cltd
popa
in
add
add
mov
mov
arpl
sti
xchg
add
and
sub
push
idivl
add
rolb
mov
mov
add
add
mov
mov
add
in
add
pop
pop
mov
mov
sbb
jae
sahf
je
rolb
xchg
outsb
dec
fildll
mov
mov
cmp
add
mov
xor
movsl
xor
mov
mov
cwtl
add
sti
mov
bound
mov
lods
mov
pop
filds
movsl
mov
pop
das
lods
out
mov
mov
loope
jge
add
cmpsl
mov
fldt
adc
repnz
adc
std
ret
jne
add
addr16
add
lods
jg
pop
fcomps
loope
pop
out
mov
push
mov
test
mov
mulb
and
mov
sub
xor
ss
add
jl
push
insb
sub
jb
mov
jmp
add
sub
sub
nop
add
add
in
movl
outsb
pop
std
mov
mov
test
add
aam
mov
imul
and
mov
clc
out
adc
mov
lahf
addb
into
inc
xchg
xor
enter
add
adc
gs
jmp
push
add
fwait
popf
ret
xchg
and
add
mov
xchg
loope
push
inc
sub
inc
add
add
add
xor
cld
adc
add
aad
bound
mov
xor
loopne
mov
jns
mov
mov
test
sbb
int3
and
pop
cld
ffree
mov
push
or
jmp
mov
jecxz
call
add
add
aad
mov
push
cmp
pop
insl
or
out
out
sahf
les
pop
push
mov
jp
lea
xor
mov
mov
or
jne
xor
mov
rcll
add
mov
push
dec
movsl
adc
mov
mov
mov
and
sbb
enter
add
inc
lahf
hlt
ror
mov
stos
in
pop
jmp
addb
les
add
int
loopne
mov
add
or
lds
mov
out
cld
loopne
mov
add
fadd
xchg
add
mov
sbb
ret
xchg
mov
mov
pushf
cwtl
ds
jmp
leave
jne
xchg
inc
outsb
stos
imul
jp
stos
sbb
mov
mov
lods
mov
mov
loop
mov
cmp
sbb
cltd
mov
dec
sub
mov
movsl
cs
xchg
or
mov
pop
pop
mov
je
ss
mov
jle
add
fcompl
mov
add
out
pop
xchg
mov
dec
jp
outsb
insb
data16
stos
rcll
cmpsb
sarl
sub
add
aam
sbb
sbb
mov
cld
leave
cmp
fisubrs
addr16
sub
sahf
pop
jmp
mov
mov
mov
fiadds
cmp
add
scas
push
adc
cmp
add
lds
mov
mov
inc
dec
xor
add
cmc
lahf
mull
xchg
cld
adc
adc
test
pop
xor
push
add
std
fwait
inc
add
add
pop
aam
sub
inc
or
cmp
filds
sub
sbb
mov
insb
es
push
mov
rolb
mov
aaa
or
bound
mov
push
lahf
cmc
mov
mov
lods
ss
fcoms
lahf
sub
xchg
loop
mov
or
mov
mov
xor
mov
leave
mov
sti
sbb
jge
sbb
add
and
mov
call
popa
cmpsb
cmpl
add
int
pusha
add
mov
jnp
mov
mov
add
or
mov
rolb
jae
cltd
addr16
fbld
xchg
push
adc
lods
hlt
jo
mov
jae
mov
and
mov
loopne
mov
pop
xchg
int
movsb
fildll
mov
adc
mov
xor
mov
xor
mov
add
add
add
nop
add
mov
int
xchg
ret
jns
add
dec
jmp
notb
rorl
inc
cs
sub
divb
mov
mov
mov
pop
test
xchg
push
aas
xchg
jne
push
adc
pop
sub
adc
inc
add
push
add
mov
mov
mov
inc
add
mov
add
stos
jge
faddl
mov
add
lret
dec
mov
mov
das
cmpsl
mov
inc
add
mov
ja
aam
push
add
add
and
iret
cwtl
loop
mov
outsl
sbb
and
mov
add
push
xor
mov
mov
inc
bound
mov
push
add
enter
shll
imul
mov
not
stc
imul
aad
jae
cmp
test
std
rcrl
clc
dec
cld
jmp
cmp
inc
adc
les
idivb
add
addb
sarl
mov
add
data16
inc
xchg
sbb
incl
mov
mov
cmp
leave
rolb
mov
pop
loop
mov
add
movsb
gs
gs
aad
add
test
add
rolb
insl
xchg
pop
imul
out
and
mov
idivb
xchg
mov
or
jnp
add
jge
xchg
jo
mov
cld
rolb
loope
sbb
add
mov
repnz
sbb
lea
mov
js
xor
lcall
pop
mov
mov
scas
or
movsl
lock
test
push
mov
mov
or
mov
push
lods
xchg
jle
cmp
xor
mov
aaa
or
inc
dec
dec
lret
scas
dec
sbbl
mov
add
mov
cmp
pop
mov
add
testl
dec
inc
add
mov
lcall
mov
add
or
inc
add
add
into
hlt
mov
mov
add
add
insb
jns
test
lods
sbb
sub
sub
xchg
js
add
mov
mov
xchg
xchg
mov
fdivr
or
or
add
jp
arpl
inc
add
push
add
inc
add
add
jno
mov
mov
inc
dec
les
xchg
and
loop
mov
inc
xchg
add
add
fildl
addb
jns
push
sub
ret
addb
cs
sti
ret
or
test
dec
ljmp
sub
loop
mov
mov
ret
sub
orl
xorl
mov
fsubrs
cltd
data16
fidivrs
inc
add
push
add
int
add
or
les
dec
mov
mov
mov
cld
cwtl
lahf
aas
outsl
push
dec
repz
add
mov
daa
push
bound
mov
addr16
add
mov
aad
into
dec
inc
push
loope
add
cli
mov
add
leave
pop
imul
xor
hlt
jg
dec
je
add
add
mov
push
push
xor
xchg
add
stos
cli
mov
mov
push
jle
insl
subl
push
testb
scas
ss
add
clc
pop
sub
scas
cmp
add
mov
push
ljmp
jmp
popa
sub
test
inc
aaa
xchg
and
mov
add
dec
pop
push
pop
out
xlat
dec
pop
mov
add
addr16
pop
aaa
sbb
add
xchg
xchg
rolb
mov
fucomip
push
add
nop
add
jg
ja
ds
mov
testl
das
xor
shrl
mov
cld
repnz
int3
cmp
xchg
test
mov
sub
adc
mov
pop
mov
sti
add
mov
out
std
sbb
out
lea
mov
cltd
push
mov
ffreep
dec
and
mov
enter
out
pop
push
add
jl
lock
xchg
adc
ret
mov
mov
mov
adc
mov
lret
stc
xchg
add
fucomp
sub
dec
flds
or
dec
fwait
or
inc
add
push
add
mov
mov
sub
mov
xor
mov
pop
in
rcrl
neg
cmpsl
stos
jmp
lret
in
pusha
add
sub
add
ret
je
pop
mov
xor
sbb
mov
rolb
add
and
or
and
in
xor
mov
adc
push
fiadds
pop
je
in
dec
mov
add
cmp
mov
arpl
add
movsl
push
adc
andl
xor
cmp
out
pop
mov
mov
mov
jb
mov
cli
es
push
adc
add
fstp
rol
lock
or
or
rcl
add
push
add
sub
mov
pusha
add
cli
fwait
int
sbb
arpl
add
iret
aad
mov
push
cltd
mov
inc
dec
cld
push
add
add
xor
addb
or
popl
enter
aas
lahf
or
mov
leave
xchg
rol
fldl
mov
movsb
push
add
jge
sub
in
fs
add
mov
test
push
jno
dec
push
mov
mov
ss
add
mov
js
sbbl
fs
mov
pop
adc
mov
dec
xor
mov
aas
push
xor
mov
sbb
dec
and
ja
add
mov
jp
add
add
inc
xchg
pop
jb
mov
push
dec
decb
rolb
mov
imul
and
inc
stos
jns
lahf
mov
inc
add
or
test
repz
dec
push
shrl
push
pop
push
lds
sub
gs
sub
push
cmp
std
loope
lcall
mov
or
mov
inc
add
sub
add
or
add
stc
push
add
add
movsl
ds
dec
outsl
xor
sub
push
add
add
sti
mov
add
mov
rolb
lahf
and
pop
mov
add
pop
pop
inc
push
movsl
imul
cmpsb
mov
mov
xchg
or
mov
add
addb
push
cltd
adc
add
ds
cmp
jbe
jle
dec
lock
jle
jmp
pop
iret
mov
stos
adc
add
mov
lods
push
add
add
out
sbb
nop
add
mov
lahf
cmp
and
repz
cmc
sub
enter
addb
out
rolb
add
add
lahf
inc
add
and
fdivp
pop
scas
jge
lret
cwtl
dec
cli
mov
and
mov
in
loop,pt
mov
mov
sub
add
mov
fwait
lock
cltd
insb
nop
add
repz
mov
lods
imul
mov
adc
mov
jg
test
sub
xchg
stos
push
cmp
sub
push
pop
adc
mov
add
dec
cmpsl
leave
aas
mov
jle
or
mov
sahf
sub
loopne
mov
mov
mov
add
fsubr
or
mov
push
add
arpl
xor
mov
push
and
mov
xchg
push
mov
gs
xor
fiaddl
dec
loopne
mov
mov
fs
push
insb
inc
sarl
cs
xor
lods
dec
sub
adc
mov
daa
leave
mov
popa
mov
mov
xchg
cmpsb
call
lock
xor
add
popf
ds
mov
jno
int
add
ret
mov
mov
pop
aam
push
add
mov
jno
mov
rolb
lock
cmp
xchg
push
lea
fstps
jle
scas
loop
mov
add
ds
test
addb
scas
pop
loopne
mov
xchg
js
movsl
pop
lcall
mov
pushf
cwtl
int
cwtl
pandn
mov
add
mov
cs
stos
in
fstl
mov
mul
add
mov
adc
jo
mov
xor
dec
loope
cmpsb
inc
inc
add
hlt
insl
rolb
mov
mov
xor
mov
add
add
mov
lock
mov
daa
mov
fidivrs
mov
mov
aad
xchg
xor
mov
mov
cmp
ficomps
bound
mov
xor
mov
mov
adc
add
cltd
mov
sub
addb
in
cmpsb
outsb
daa
push
push
add
addb
lods
and
mov
jnp
add
data16
dec
add
pavgw
inc
add
je
movsl
lahf
js
jg
mov
adc
clc
xchg
es
out
test
or
movsb
test
leave
push
add
dec
mov
das
mov
negb
add
repz
mov
lret
pushf
mov
rolb
push
mov
mov
sti
data16
mov
in
mov
add
in
lret
add
das
loope
test
add
cwtl
add
pop
xchg
pop
adc
mov
mov
sbb
inc
and
add
insl
sahf
loopne
mov
add
add
mov
jp
fstpl
or
fdivrl
pop
and
add
add
add
cmc
cmp
mov
sub
add
test
addr16
mov
inc
push
ljmp
mov
mov
add
inc
add
mov
jne
cltd
pop
pop
xchg
lods
pop
xor
outsb
je,pn
dec
cwtl
cmpsl
loop
mov
es
add
mov
push
data16
pop
push
add
das
lods
arpl
scas
cmpsb
int
mov
mov
add
int
sub
imul
add
xchg
inc
jp
add
pop
xor
pop
add
jo
mov
add
add
mov
jmp
mov
rolb
and
mov
fdivp
loope
jecxz
mov
jno
sahf
aas
aad
xchg
push
mov
scas
jno
jmp
loope
iret
adc
mov
lahf
jecxz
mov
add
int3
mov
and
jbe
adc
dec
xchg
mov
xchg
popf
sbb
mov
inc
subl
mov
add
add
rolb
mov
loope
outsb
idivl
out
loopne
mov
call
add
or
push
scas
int3
push
add
jne
in
sub
jmp
out
clc
jge
stos
mov
test
sahf
loopne
mov
ficoml
push
scas
xor
mov
add
xchg
add
hlt
data16
jb
mov
lods
loopne
mov
sbb
int3
data16
mov
nop
add
pop
pop
jb
mov
mov
dec
fwait
jnp
test
adc
sbb
xchg
mov
adc
addb
sub
ja
sahf
faddl
mov
push
add
pop
or
lods
mov
dec
lods
rolb
dec
pop
stos
xchg
popf
int
dec
fldcw
add
mov
daa
mov
add
pusha
add
add
mov
sub
pop
fsubr
inc
inc
or
add
add
mov
addb
add
mov
dec
sbb
out
mov
inc
lock
add
jmp
mov
test
mov
sub
push
lahf
and
adc
mov
dec
mov
mov
sub
mov
jns
add
sub
mov
mov
cltd
addb
add
inc
add
mov
clc
mov
xor
in
mov
mov
jp
sub
add
mov
add
jns
cmpxchg
inc
ficompl
mov
xor
mov
mov
fmull
and
pop
mov
out
bound
mov
xor
mov
or
dec
push
xor
cmp
rcll
sbb
jmp
or
out
and
ljmp
mov
mov
cmpsb
cmpsb
xchg
add
rep
cmpsb
mov
imul
xchg
lret
jnp
insl
imull
mov
add
xor
enter
or
add
sub
mov
pop
adc
add
pop
hlt
mov
sub
mov
add
mov
add
mov
movsl
das
jge
flds
dec
cltd
lea
daa
mov
sahf
fwait
push
add
jg
add
popl
fmul
sbb
int
mov
out
cmp
mov
mov
add
fadds
mov
push
pop
mov
mov
pop
dec
pop
lods
mov
mov
jo
mov
lret
mov
push
cli
cld
in
addr16
movsb
fwait
push
ret
sahf
lcall
add
leave
aaa
cmp
icebp
subl
cld
push
add
mov
jmp
add
lods
inc
dec
js
pop
mov
pop
fdivs
add
aam
mov
sbb
pop
sub
shll
adc
push
add
dec
inc
add
mov
or
mov
add
orl
mov
insl
adc
mov
adc
rolb
mov
jecxz
sub
mov
xchg
insl
mov
add
in
mov
mov
mov
mov
push
add
sti
outsb
lcall
stos
pusha
add
jbe
add
pop
aaa
rolb
mov
movsb
jle
dec
daa
iret
cmp
sbbl
add
scas
stos
mov
jno
jmp
xor
mov
scas
fidivrl
adc
mov
jmp
test
sbb
add
adc
mov
aas
dec
push
sbb
ret
add
and
add
jb
mov
add
mov
pop
jg
add
bound
mov
xchg
mov
frndint
arpl
or
mov
lcall
test
add
dec
lea
cwtl
ret
clc
pop
mov
lea
sbb
add
mov
repnz
scas
lods
mov
add
add
je
lea
addb
adc
mov
fcompl
sub
in
pop
hlt
and
mov
into
sti
aam
pop
dec
scas
mov
mov
mov
add
lods
movsl
addb
xor
popa
lret
cli
xchg
push
test
and
mov
jge
add
daa
inc
fcomi
mov
mov
inc
sub
mov
gs
sub
or
lock
mov
scas
push
jno
loop
mov
mov
out
push
imul
add
mov
sbb
add
add
adc
mov
and
ret
and
mov
in
sub
lret
xchg
jae
jmp
sbb
dec
mov
dec
dec
mov
push
out
mov
xchg
push
fidivrl
cmpsl
jmp
cmpsl
push
pop
xor
and
mov
xor
into
test
mov
add
inc
hlt
popf
add
mov
add
mov
ljmp
cmp
jmp
jno
lret
pop
rorl
mov
nop
add
jae
jb
mov
jge
sbb
lock
lods
ret
or
scas
std
push
add
push
mov
add
imul
adc
lcall
loopne
mov
mov
inc
fcmove
cmp
outsb
mov
lock
add
sbb
cmpsb
aam
sub
pop
hlt
cmp
out
unpckhps
nop
add
push
add
pop
push
insl
repz
mov
stos
dec
jno
xor
mov
fnstcw
out
outsb
notb
add
mov
mov
push
xchg
pop
pop
repz
mov
sbbl
sbbl
add
cli
fadds
cmp
out
das
or
add
mov
repnz
pop
lret
loopne
mov
cmc
pushf
jmp
cmc
sub
jmp
lcall
add
jne
jbe
or
mov
cmp
fwait
test
mov
add
dec
test
pop
imull
sub
in
mov
dec
xchg
add
cmp
arpl
clc
push
add
ret
and
mov
repnz
pop
or
out
xchg
push
stos
mov
lods
loopne
mov
mov
and
mov
gs
addr16
sub
dec
and
mov
xor
mov
add
mov
mov
jns
sti
cwtl
adc
mov
jbe
lock
out
add
mov
add
mov
push
add
mov
mov
xor
and
adc
jle
loope
repnz
cld
movnti
mov
fiadds
push
add
jle
mov
cmp
xchg
test
xor
ficompl
mov
mov
mov
outsb
and
pop
push
push
add
add
mov
ss
cmp
rolb
mov
adc
jmp
add
push
add
add
jo
mov
sbb
xor
mov
sahf
aam
push
es
imul
or
stc
notb
mov
mov
dec
sbb
push
add
dec
scas
addb
loope
dec
outsb
sbb
inc
add
mov
mov
cmp
mov
xchg
jb
mov
lods
icebp
xor
add
mov
push
stos
pusha
add
xchg
cmp
dec
cmpsl
mov
cltd
dec
push
jmp
pop
mov
out
test
pop
mov
xlat
adc
pop
bound
mov
or
scas
es
mov
xchg
cld
sub
popf
cmc
jns
adc
mov
adc
mov
scas
inc
add
mov
cmp
xor
mov
int
jae
gs
jmp
fistpl
sbb
addr16
mov
push
daa
jmp
mov
jecxz
sbb
fldl
add
and
mov
mov
xchg
mov
fs
aad
aaa
int
aam
add
movsb
mov
jo
mov
add
mov
lea
out
mov
jbe
push
shrl
mulb
popa
sub
mov
mov
mov
mov
in
sub
and
mov
inc
adc
mov
int
inc
outsb
lock
pop
lock
mov
mov
mov
xor
mov
enter
imul
gs
push
push
pop
loop
mov
xchg
mov
pop
xor
mov
push
das
sahf
mov
popf
cli
sbb
add
add
sub
mov
mov
lret
pop
jo
mov
add
out
test
xor
int3
add
pusha
add
mov
add
fdivrs
sbb
mov
pop
push
jo
mov
add
nop
add
enter
jmp
sbb
lds
jb
mov
decl
pusha
add
inc
std
filds
mov
in
pop
sub
pop
or
pop
xor
mov
jnp
cmp
icebp
pop
jbe
add
xor
cwtl
push
lcall
mov
outsb
cli
push
ret
into
xchg
daa
scas
rcrl
add
pop
jmp
mov
bound
mov
or
add
sbb
jae
xchg
dec
cmpsl
rolb
mov
add
push
imul
add
aam
xor
sbb
aaa
fdivs
jg
sub
xchg
dec
adc
add
and
mov
addb
pop
dec
pop
mov
aad
push
add
mov
add
and
cwtl
inc
push
ret
jl
cli
push
add
gs
add
js
push
and
cmp
pop
adc
mov
add
add
add
xor
mov
xor
aad
sbbl
adc
lret
test
fildll
imulb
imul
or
bound
mov
in
sahf
pop
cmp
inc
add
shl
lods
ror
test
stos
test
outsb
add
sub
pop
cmp
test
int3
cmpsl
je
lock
add
pop
ficoms
pop
adc
xor
mov
add
mov
cmc
lods
jg
dec
mov
mov
mov
inc
add
rolb
mov
psubusw
popf
xor
imulb
aad
jge
outsb
repnz
mov
push
out
cmp
add
add
aad
mov
jg
push
lahf
ljmp
jns
inc
add
les
pop
push
lods
les
sbb
inc
sub
add
add
dec
push
add
add
add
in
add
mov
jbe
sbb
add
mov
jle
out
add
mov
push
add
inc
cs
insl
jns
inc
push
add
mov
and
xor
xchg
add
dec
pop
cltd
sub
int3
cmc
adc
xor
mov
jb
mov
mov
jp
int
out
fnsave
jne
movsb
or
add
clc
adc
addb
cmp
bound
mov
ret
mov
sar
mov
js
and
adc
mov
or
mov
add
xor
mov
es
jo
mov
add
push
test
out
mov
cld
cmp
fs
add
mov
bsr
ljmp
cmp
mov
lret
mov
sti
nop
add
lret
popf
addb
adc
hlt
fcmove
adc
out
sbb
aam
cld
pop
mov
fsts
mov
mov
dec
push
adc
mov
mov
rolb
mov
dec
repz
push
sbb
clc
rolb
mov
jg
insb
aas
fisubrl
pop
xchg
add
xchg
ret
jl
add
pusha
add
mov
mov
mov
loopne
mov
jbe
int3
inc
xlat
push
add
outsb
sahf
stc
je
inc
and
adc
mov
inc
aaa
cmp
and
mov
std
jecxz
addl
aam
add
add
loopne
mov
fs
adc
mov
sub
addl
fwait
rolb
mov
add
add
mov
mov
mov
addb
jle
add
or
ja
pop
add
xchg
add
add
push
push
and
mov
mov
inc
xchg
rolb
mov
pop
aam
push
inc
ljmp
outsb
jo
mov
cmp
clc
jg
leave
out
or
and
add
dec
xor
mov
add
pop
sti
inc
adc
mov
add
push
enter
jnp
in
mov
mov
mov
mov
ja
sbb
xchg
insb
popf
sbb
and
mov
xchg
ret
int
iret
mov
jnp
enter
mov
add
dec
cmpsb
adc
stos
outsl
pushf
sti
sub
popf
orl
leave
mov
mov
enter
pop
cmp
fbstp
fdivrs
push
dec
add
test
cmp
stos
xor
cmp
cmpsl
loopne
mov
sbb
add
mov
cmpsl
sbb
out
icebp
pop
push
dec
insb
je
ljmp
fbstp
pop
dec
mov
jno
mov
std
fnstcw
mov
sbb
shll
loopne
mov
test
rolb
mov
push
jnp,pt
sub
xor
add
repz
add
and
rolb
outsb
and
mov
add
decb
add
add
adc
xor
pop
ret
add
mov
or
stos
mov
push
out
shrl
iret
cmpsb
bound
mov
jae
mov
add
je
stc
movsl
xchg
jo
mov
push
addr16
into
adc
push
and
rol
fistpll
js
in
lret
roll
mov
pop
jge
add
or
addr16
dec
outsb
sbb
mov
out
scas
jecxz
add
inc
inc
pop
scas
or
xor
out
pop
out
addb
outsb
fwait
and
mov
jge
inc
dec
mov
xchg
fadd
push
add
jb
mov
pusha
add
and
and
mov
xlat
scas
aad
add
imul
add
add
add
add
add
push
pop
outsb
mov
or
es
stc
ds
lods
enter
jae
add
cmp
rcll
pop
jne
add
mov
out
mov
mov
test
dec
mov
pop
or
add
mov
mov
sbb
mov
add
mov
in
jp
ja
gs
mov
pop
sbb
mov
jmp
popf
pop
push
add
hlt
lods
sbb
daa
sbb
enter
jne
mov
push
cld
and
adc
adc
addr16
push
nop
add
jns
adc
add
cmp
ja
add
mov
icebp
iret
cmc
and
xchg
adc
add
mov
add
lock
ss
xorl
test
mov
xchg
adc
mov
mov
add
add
pop
push
add
lahf
test
adc
mov
mov
mov
ficoml
jg
inc
pop
es
add
mov
dec
fwait
push
sub
bound
mov
cmpl
push
add
rolb
popf
mov
cld
sbb
mov
mov
imul
mov
xchg
pop
lahf
mov
mov
push
and
add
sub
sti
sbb
xchg
inc
add
mov
and
mov
mov
stos
inc
fsubp
xchg
dec
jns
aaa
in
or
mov
xchg
ljmp
cld
push
jne
add
add
jns
inc
push
add
stos
fcmovnbe
test
xchg
out
mov
nop
add
loop
mov
adc
adc
mov
lret
insb
lahf
cmp
add
out
inc
ret
faddl
mov
dec
imul
scas
jne
lea
sbb
xchg
and
push
mov
pop
mov
aas
xchg
rolb
mov
movsl
mov
or
fcmovnbe
xchg
add
test
xor
repz
add
add
mov
mov
add
dec
mov
pop
sbb
mov
ss
add
pop
pop
js
inc
dec
scas
cwtl
movsb
push
test
xor
mov
xor
mov
out
loop
mov
ja
insb
bound
mov
mov
xor
mov
clc
inc
mov
leave
mov
mov
testb
ss
cmp
add
xor
mov
loope
jns
add
lret
cmp
mov
lds
sub
in
xchg
jl
add
add
xchg
add
sbb
sahf
dec
dec
cs
sub
and
inc
pop
lods
mov
pusha
add
cmpsb
and
or
out
jae
mov
test
dec
test
jmp
cmc
ds
dec
push
mov
add
adc
xchg
add
sbb
add
lds
mov
mov
mov
imul
mov
pop
js
and
mov
scas
sub
stc
jb
mov
push
lea
leave
xchg
imul
sbb
sub
int
mov
add
jae
and
mov
mov
leave
jae
dec
or
lods
and
add
cmovae
das
xchg
enter
add
add
pop
ljmp
mov
and
insb
loope
adc
mov
mov
lret
mov
sbb
mov
push
add
push
add
xlat
mov
outsl
movsb
mov
mov
xor
and
mov
ja
std
xor
addr16
sub
incb
sub
add
add
mov
ret
fwait
and
add
mov
mov
ljmp
mov
add
xchg
leave
loopne
mov
rolb
mov
mov
in
sbb
or
lock
add
mov
sbb
add
popf
int3
test
dec
inc
adc
add
mov
or
mov
cvtpi2ps
mov
jae
add
mov
fs
add
xchg
insl
mov
sub
iret
out
imul
ret
fldl
mov
xlat
add
icebp
jns
xchg
add
pop
add
out
add
pop
lret
pop
das
mov
test
les
mov
xchg
mov
mov
cwtl
icebp
jmp
dec
outsl
cmp
add
cmpsl
fnstenv
ficompl
sahf
mov
insl
cli
addr16
add
push
add
mov
rep
lahf
mov
and
icebp
lds
ljmp
inc
add
jmp
js
rolb
mov
cld
or
lds
sbb
mov
rolb
mov
cmp
not
arpl
add
daa
int
cmp
cmovl
mov
mov
clc
pop
jmp
inc
add
out
incb
and
mov
jb
mov
or
stc
dec
addb
int
sbb
es
movsl
dec
out
xchg
cmp
add
add
pop
mov
add
sti
dec
test
aas
hlt
pop
push
lods
xor
xor
or
push
jns
mov
jle
cmc
jp
push
add
pop
enter
lock
cltd
mov
sbb
mov
fnsave
mov
xchg
stos
std
aaa
aas
push
mov
fsub
test
mov
addb
out
addb
scas
inc
push
inc
xor
jo
mov
lcall
push
sbb
add
xchg
pusha
add
aaa
rcll
xor
lods
cmpsb
jbe
add
push
shrl
mov
add
push
inc
fisubrl
loopne
mov
int
cmp
enter
stos
ljmp
xchg
and
and
in
test
push
push
je
mov
rolb
mov
ficoms
and
mov
mov
aas
pop
inc
repnz
mov
mov
pusha
add
dec
push
pop
popa
push
add
imul
pop
and
inc
add
jb
mov
fdivrl
add
mov
jg
ja
inc
loop
mov
and
add
popf
and
clc
data16
mov
jle
loope
mov
cld
cs
js
pop
fidivrs
inc
add
decl
mov
fwait
lcall
inc
leave
fsubl
out
sbb
cmp
xor
and
add
adc
add
lea
jns
add
xchg
jno
rolb
cli
adc
gs
mov
movsb
sbb
ljmp
xor
mov
push
sub
call
jnp
in
movsb
jle
pushf
rolb
mov
push
sub
xlat
xor
add
mov
add
mov
add
inc
call
pop
and
mov
jns
add
mov
add
or
xchg
test
add
addb
imul
mov
inc
int3
xchg
mov
inc
add
sbb
mov
sbb
cmp
mov
popf
pop
xchg
mov
mov
mov
xchg
es
pop
add
mov
xchg
mov
decl
out
and
mov
popf
lock
inc
repnz
lea
mov
sbb
pop
adc
sahf
or
inc
lods
cltd
insb
movsb
ss
pop
push
mov
addb
mov
cli
jp
arpl
jle
ljmp
insb
std
movsl
sti
fcomps
incl
call
inc
dec
adc
mov
stc
mov
or
sub
lret
repnz
or
inc
stos
aas
sub
mov
pop
push
in
test
push
aam
sub
add
add
scas
or
test
pop
adc
lea
mov
add
call
clc
push
push
add
dec
sub
add
in
lods
aaa
jo
mov
xchg
or
inc
add
add
cmc
adc
in
rcr
and
mov
dec
hlt
imul
mov
inc
xor
sbb
mov
popa
mov
test
daa
cmp
cmp
mov
mov
imul
add
add
jp
pop
out
mov
mov
jge
out
sbb
add
push
movsb
popa
pusha
add
ds
dec
sbb
xchg
dec
or
cld
or
scas
sbb
xchg
pop
jmp
mov
xor
stos
outsl
data16
add
inc
aaa
cmp
mov
mov
and
add
or
call
mov
push
sub
inc
xchg
jno
add
cmpsb
xchg
cmpsb
adc
mov
adc
cs
jmp
roll
mov
cmpsl
mov
inc
dec
xorl
add
bound
mov
cmp
and
mov
orl
mov
inc
mov
das
mov
ret
repz
sub
push
cli
jge
xor
mov
loope
ja
add
inc
jecxz
add
sub
sub
lods
out
pop
ret
fcomp
mov
mov
test
add
add
push
add
stc
dec
sti
shll
inc
movsl
std
xor
aad
mov
ljmp
in
push
and
add
scas
xor
push
pop
mov
dec
inc
add
xchg
adc
jecxz
add
adc
mov
cmpsl
ret
imul
dec
and
mov
imul
add
hlt
stc
sti
pop
jo
mov
je
notl
and
push
push
sub
add
loop
mov
mov
pop
repnz
push
xchg
ljmp
mov
and
mov
and
mov
out
data16
ds
idiv
pop
addb
push
sbb
pop
pop
ret
imul
sbb
push
pop
lds
add
add
jno
rolb
iret
adc
popf
aad
test
and
mov
loope
in
jg
and
add
sahf
dec
push
xchg
mov
mov
mov
mov
in
dec
into
hlt
inc
dec
inc
aam
mov
add
mov
add
mov
inc
out
mov
testb
imul
push
leave
xchg
lds
jo
mov
outsl
or
into
pop
xchg
mov
add
add
xlat
push
dec
out
shll
inc
cwtl
mov
jmp
push
call
pop
nop
add
add
mov
mov
sub
mov
add
add
mov
xchg
out
fdivrl
or
js
out
jnp
cmp
xchg
xor
sub
call
cld
stos
sub
sub
and
cmp
repnz
hlt
ds
jns
jge
test
stos
std
rolb
mov
in
xor
dec
or
push
sti
movsb
mov
xchg
xchg
sub
int
inc
adcl
add
ficomps
nop
add
add
sbb
mov
xchg
idivb
adc
stc
and
mov
fsubrs
or
sub
pop
pusha
add
stc
scas
in
mov
add
pop
lcall
add
imul
cmp
ficompl
or
loop
mov
pop
inc
ds
mov
add
push
add
mov
add
jecxz
call
mov
loop
mov
jge
mov
mov
add
jae
add
pop
pop
jl
xor
add
mov
xor
lock
out
loope
in
es
mov
fisttpll
xor
jbe
jns
fsubs
mov
sahf
jo
mov
jae
test
mov
xchg
xlat
push
xlat
in
aaa
loope
and
mov
aad
outsb
leave
xchg
or
add
adc
lods
dec
pop
mov
add
add
mov
or
es
iret
sbb
and
add
add
mov
sbb
add
cmp
jmp
testb
add
ds
sbb
sbb
test
mov
pop
out
add
mov
add
sub
jle
jb
mov
sahf
in
test
xor
js
outsl
add
adc
sub
lahf
js
add
mov
pop
add
mov
jae
add
add
dec
sbb
sbb
ja
cmc
cmpsb
add
mov
dec
dec
rolb
jle
add
mov
mov
out
repz
add
mov
mov
cmp
adc
mov
pushf
inc
cli
add
mov
dec
sbb
std
adc
rcrl
push
add
aam
push
add
mov
push
add
dec
mov
imul
push
and
add
movsl
mov
rolb
repz
add
and
mov
mov
lock
mov
leave
movsb
sbb
sbb
add
inc
add
xchg
dec
bound
mov
xchg
clc
stos
mov
roll
scas
loop
mov
xlat
out
mov
hlt
dec
out
out
cmp
out
sub
pop
into
fists
mov
jl
add
jno
add
add
and
mov
mov
adc
fcomip
cli
lahf
jg
xchg
add
sub
push
inc
add
cltd
mov
add
outsb
repz
mov
add
adc
mov
aaa
jecxz
repnz
in
test
jne
popa
les
mov
std
test
mov
mov
mov
xchg
lahf
cld
out
pop
imul
xchg
add
xchg
out
mov
jle
push
mov
mov
push
dec
imul
and
mov
add
test
adc
int3
xchg
sbb
ljmp
push
sbb
add
sbb
and
mov
adc
lock
hlt
std
pop
lahf
addr16
dec
ds
lods
fnstsw
lea
mov
pushf
fisubrl
push
xchg
cs
jge
inc
and
push
mov
push
add
mov
or
imul
mov
inc
call
push
and
and
and
adc
and
mov
mov
and
mov
pop
mov
icebp
jecxz
ficompl
jns
aas
loope
scas
xlat
adc
jmp
dec
gs
addb
mov
mov
xchg
sub
jne
mov
mov
dec
cmp
cmc
and
mov
sub
add
add
dec
enter
xchg
jp
popa
mov
cltd
add
add
adc
mov
rcll
and
mov
mov
add
aam
jg
mov
mov
imul
xchg
add
sbb
sbbl
sbbl
jo
mov
loopne
mov
lods
xor
jg
jl
subl
mov
dec
and
mov
cmpsb
adc
mov
and
mov
adc
mov
add
push
add
mov
outsb
inc
add
mov
std
ret
inc
add
inc
popa
push
push
dec
ds
lret
mov
xchg
xchg
stos
jecxz
push
sbbl
pop
into
loope
add
pop
outsb
jae
mov
mov
mov
arpl
out
insb
fstps
fcmovnb
xchg
add
add
add
stc
sbb
add
jb
mov
add
mov
test
add
jg
sbb
les
les
sbb
add
push
in
arpl
cmp
jmp
xchg
xor
mov
lea
push
lods
mov
pop
out
add
popa
aam
rcrl
adcl
mov
mov
cmp
add
add
mov
les
add
add
mov
pop
sub
hlt
imul
push
scas
movsb
test
sub
add
rolb
mov
mov
ljmp
add
mov
mov
and
mov
dec
addb
adc
cmc
cmpsl
push
xchg
popf
jns
popa
dec
xchg
cwtl
outsb
add
sub
out
mov
mov
into
cmp
pop
adc
pusha
add
jns
sub
add
inc
scas
mov
mov
mov
mov
mov
add
popa
cmp
fldenv
inc
dec
push
xchg
enter
aam
and
mov
mov
cmp
push
js
fdivl
push
jae
add
xchg
add
mov
mov
add
mov
dec
insb
lahf
addb
fcoms
and
mov
das
sbb
repnz
xchg
in
pop
add
mov
add
mov
sub
add
add
lahf
mov
in
insb
clc
int3
les
push
xchg
jae
pop
aaa
cmp
addb
or
ljmp
mov
mov
add
inc
xor
nop
add
push
push
adc
mov
ljmp
notl
insl
xlat
and
mov
mov
int
sub
jb
mov
add
call
cs
cld
leave
push
scas
xchg
mov
add
xchg
add
push
and
mov
lcall
add
mov
mov
mov
add
mov
inc
and
jne
xor
inc
lcall
jge
jae
sti
mov
test
add
ret
mov
mov
add
add
mov
mov
add
and
mov
stos
sbb
cs
inc
rorl
cwtl
imul
fdivr
lcall
and
add
add
push
xchg
and
jno
gs
in
mov
cmc
pushf
das
add
mov
ret
xor
inc
push
imul
fdivs
jnp
jecxz
jl
scas
jo
mov
push
fisttpll
push
subl
mov
mov
cmp
add
mov
mov
sub
add
mov
push
sahf
imul
faddl
mov
sbb
pop
sbb
cmc
scas
addb
lock
bound
mov
popa
je
add
outsb
cmp
adc
add
mov
mov
add
inc
xor
mov
bound
mov
adc
arpl
shll
es
andl
inc
test
add
sahf
test
add
mov
loope
or
adc
mov
mov
push
enter
stos
sti
dec
lods
dec
loop
mov
push
rorl
lret
mov
adc
daa
mov
test
incb
addb
fisttpll
rolb
mov
mov
xor
add
and
xchg
test
nop
add
sbb
add
test
rolb
cld
enter
mov
lea
mov
loopne
mov
mov
iret
popf
arpl
stos
and
fsubrs
xlat
aad
mov
mov
rolb
mov
pop
test
jge
adc
mov
xor
push
or
popf
xchg
in
pop
pop
jmp
dec
jae
movsb
jmp
add
mov
mov
popa
scas
negl
push
xchg
add
add
jb
mov
mov
mov
push
fmull
testb
cli
or
insb
ds
xchg
push
lret
xchg
mov
icebp
mov
lock
sub
pop
lods
dec
cmp
mov
fbstp
mov
pop
add
sub
fildl
shl
mov
jmp
add
out
je
lds
out
xor
push
mov
dec
fdivl
andps
sbb
hlt
xchg
pusha
add
jmp
push
jge
jnp
rolb
mov
jns
andl
push
or
bound
mov
xor
mov
mov
jecxz
out
add
jle
inc
or
jle
imul
xchg
std
inc
lods
push
adc
mov
mov
push
aas
lret
mov
stos
nop
add
repnz
mov
xor
mov
dec
test
mov
pop
mov
add
lods
loope
jo
mov
fnstsw
mov
pushf
jg
stos
repnz
add
aam
jbe
pop
int3
jmp
cmc
outsl
sub
pop
ror
lods
in
mov
lods
mov
add
mov
orl
insl
call
add
in
push
inc
xor
mov
mov
inc
add
mov
dec
mov
mov
std
hlt
into
dec
mov
push
mov
jl
and
lcall
pushf
cmp
add
cmp
add
sbb
add
loop
mov
aaa
insl
test
sub
jmp
inc
mov
in
addb
sub
add
jl
push
xchg
int3
inc
cmp
movsl
sti
movb
neg
xchg
push
es
add
test
add
mov
lds
scas
lods
adc
dec
xchg
add
flds
into
sub
add
add
mov
xlat
idivl
lock
inc
add
cmpl
xchg
or
and
mov
mov
mov
idivb
lcall
aaa
push
cmp
stos
push
and
add
jle
add
lds
imul
mov
inc
add
add
xor
sbb
push
mov
add
push
insb
pop
imul
cmpsl
scas
inc
arpl
mov
cmp
sub
and
mov
outsb
or
mov
mov
xor
mov
lea
add
in
mov
jge
cwtl
out
movsb
push
inc
and
mov
inc
add
xor
push
jno
js
mov
sub
push
adc
mov
jbe
enter
fwait
mov
mov
lahf
shl
add
sbbl
dec
cli
scas
pop
cmpsb
repnz
mov
sub
or
scas
dec
cmp
aad
add
mov
int
add
jns
mov
add
add
mov
push
imul
and
mov
mov
mov
xchg
add
jp
scas
sbb
xchg
add
dec
aaa
pusha
add
push
push
add
add
aas
add
addr16
mov
enter
test
cmp
mov
aas
mov
adc
and
mov
jp
shll
mov
popf
lds
addr16
sub
pop
arpl
mov
mov
mov
fsubrs
mov
sub
addb
and
out
lods
push
push
imul
ss
jnp
push
mov
mov
loop
mov
mov
loopne
mov
mov
mov
sbb
lock
add
data16
outsb
popa
ret
or
in
mov
lds
inc
adc
dec
call
add
mov
inc
xchg
shrl
mov
out
scas
xchg
add
xchg
pop
imul
mov
cmc
stc
dec
mov
mov
jp
rcr
movsl
xchg
add
xor
cli
loopne
mov
sti
pop
rolb
inc
add
mov
sbb
rolb
mov
add
les
in
add
mov
inc
lea
add
sub
mov
adc
hlt
jge
jmp
dec
daa
mov
mov
mov
mov
push
jle
pop
xchg
fildll
push
add
mov
cmpsb
ret
mov
pop
push
jle
imul
push
sbb
adc
js
jns
sub
mov
jnp
inc
negb
lods
cmovge
mov
pusha
add
pop
inc
enter
lcall
add
push
add
pop
clc
pop
test
stos
jae
adc
add
stos
cltd
lret
xchg
addb
jno
cmpsl
lods
pushl
cmp
sub
push
mov
mov
cmp
pop
sahf
in
adc
mov
add
mov
mov
and
pop
ja
lret
or
push
add
add
pushf
mov
cli
mov
or
cmp
leave
je
add
mov
push
fcomp
addb
xchg
adc
outsl
cli
push
add
push
mov
icebp
leave
xlat
and
mov
mov
dec
sbb
lds
push
mov
pop
fnstenv
jmp
mov
insl
push
and
fisttps
mov
scas
cmp
aaa
in
mov
xor
add
lea
mov
jg
sbb
lods
push
jl
in
cmpsb
pop
mov
add
push
sbb
hlt
decl
cs
add
lods
push
lods
push
xor
push
xchg
fmull
jno
inc
sbb
outsl
loopne
mov
aas
fs
adc
mov
mov
cmp
shll
add
sbb
xchg
hlt
pop
je
cwtl
ret
rorl
push
mov
inc
mov
xor
mov
inc
add
jg
mov
test
inc
rolb
je
dec
dec
xchg
push
push
inc
lods
or
and
mov
adc
ljmp
rolb
mov
cmp
and
mov
mov
movsl
jo,pt
mov
lock
jae
iret
repz
add
mov
int3
clc
mov
cmovo
mov
lret
add
mov
xchg
out
dec
mov
popa
or
in
xchg
test
mov
mov
xchg
cwtl
adc
mov
and
pop
movsl
and
rcll
sub
inc
test
in
es
pop
jae
rcrl
dec
idivl
outsl
mov
xchg
jle
mov
icebp
pop
xchg
xchg
add
ja
add
icebp
xor
mov
push
xor
in
mov
in
enter
ljmp
into
jb
mov
xor
mov
cmp
pop
push
mov
hlt
cmp
data16
sub
scas
mull
lods
cli
xchg
pusha
add
test
out
cli
inc
dec
xchg
int
clc
sub
in
jo
mov
mov
mov
mov
cli
test
jmp
add
xchg
cmp
xadd
mov
add
sub
sarl
fnstsw
mov
cli
stos
movsl
jno
test
add
mov
std
pop
xchg
mov
movsl
add
adc
mov
add
mov
addl
rolb
or
dec
and
icebp
cmp
add
out
aam
insb
jge
pop
repnz
pushf
jae
jecxz
inc
push
add
ja
ljmp
add
sub
xchg
add
fwait
mov
jnp
repnz
sti
mov
int
in
pusha
add
aam
jg
jle,pt
add
mov
rcl
add
cmp
pop
add
add
add
js
pop
cmp
into
cmp
sbb
xchg
adc
mov
add
adc
and
add
rolb
mov
mov
pop
daa
fsub
add
mov
mov
scas
lret
das
clc
fiaddl
add
add
mov
add
icebp
mov
mov
lock
add
lds
add
mov
mov
jl
out
das
int
adc
mov
fimull
dec
add
mov
add
ret
nop
add
aad
add
call
loop
mov
add
add
sbbl
add
cs
out
mov
loopne
mov
rcrl
add
dec
mov
or
add
mov
fwait
push
pop
loopne
mov
adc
mov
leave
in
mov
push
add
add
jo
mov
or
or
add
sbb
add
loop
mov
add
mov
jo
mov
mov
cld
inc
imul
cli
dec
jecxz
jmp
lcall
mov
mov
js
inc
xchg
pusha
add
lret
push
ljmp
in
int3
sarl
mov
lahf
das
mov
lret
js
rolb
mov
pop
in
jne
add
mov
mov
test
addr16
data16
xor
loope
xlat
fistl
push
xor
mov
xchg
jle
jge
inc
add
mov
add
mov
mov
or
add
cmp
xor
mov
mov
into
insl
cli
loope
sbb
mov
add
sub
rorl
incb
stos
dec
xchg
add
mov
push
inc
repnz
mov
dec
sbb
clc
test
mov
rol
loopne
mov
mov
adc
mov
adc
sub
xchg
jle
add
sub
push
mull
daa
fsubrs
pusha
add
add
jp
pop
in
fbstp
add
shl
xchg
jns
jae
movsl
lods
outsl
fmuls
ret
xlat
je
hlt
outsl
cwtl
jmp
fiadds
fwait
outsl
xchg
hlt
idivl
leave
test
ror
inc
and
mov
fiaddl
add
add
mov
jmp
mov
cld
iret
in
jge
xchg
mov
jbe
mov
int
testb
mov
ja
xor
add
dec
lret
ret
and
mov
mov
add
sub
mov
adc
std
pusha
add
mov
add
jbe
mov
std
aad
std
leave
popf
stos
loopne
mov
lods
cltd
cmpsb
int3
xor
mov
add
jno
cmpsb
scas
mov
mov
movsl
dec
dec
push
jbe
movsl
aaa
mov
mov
mov
inc
jp
push
sub
adc
popa
leave
push
mov
out
pop
hlt
repnz
cmpsl
sub
insb
push
add
sti
mov
adc
mov
add
mov
mov
loop
mov
sbb
add
cs
dec
push
push
mov
mov
incb
cmc
sti
jns
test
mov
xor
or
icebp
mov
jge
xor
mov
lcall
mov
mov
dec
filds
lods
loope
pop
fcompl
cmp
cli
cmp
pop
test
add
sub
and
mov
cmpsl
inc
add
cmc
dec
xchg
lods
pop
or
les
ja
cmpsl
jae
test
stos
incb
xchg
cmp
jmp
add
daa
inc
add
sbb
push
aaa
inc
out
in
mov
sub
add
cmp
adc
mov
mov
push
mov
enter
or
jge
jns
scas
dec
push
sbb
insl
fbld
jae
ror
inc
jg
pop
mov
mov
jmp
sbb
add
cld
mov
jmp
lea
adc
mov
lcall
mov
cmpsb
jne
stos
add
mov
lock
mov
out
pop
mov
xchg
jmp
mov
xlat
and
fsubrs
adc
addr16
ss
push
lds
mov
add
ds
repnz
xor
mov
stc
push
jb
mov
mov
mov
lods
dec
repz
sar
xchg
add
add
inc
add
xor
mov
jae
add
mov
int3
sbb
mov
incl
repz
sub
fistl
xchg
icebp
sahf
ret
inc
in
jp
add
add
mov
stos
rolb
mov
fmull
add
add
jnp
lcall
jg
push
xchg
in
dec
fcomps
xchg
movsl
cmp
stc
fcmovbe
lods
jmp
mov
ss
iret
jno
dec
rcl
push
addb
andl
add
stos
fidivl
add
pop
push
mov
popa
add
mov
fdivr
mov
outsb
ja
add
mov
test
jle
sbb
rolb
mov
loope
add
js
pop
icebp
movsl
stc
and
mov
stos
jae
pop
fdivp
fadds
or
add
adc
mov
jmp
add
mov
mov
ja
sub
pop
sti
add
add
cmc
pusha
add
mov
sbb
fiadds
in
xchg
lea
mov
xchg
xor
insb
jl
dec
push
jns
cmpsl
adc
dec
mov
es
cmp
add
fmuls
movsb
adc
jbe
add
mov
testb
dec
clc
sahf
jne
imul
lods
and
mov
and
cltd
mov
push
add
mov
add
aad
add
cltd
test
mov
dec
shll
push
dec
inc
jmp
and
sbb
pop
loopne
mov
xchg
add
jle
pop
enter
and
add
out
jnp
push
add
or
add
sub
adc
mov
ret
call
sbb
inc
jmp
jmp
cld
fnstcw
mov
add
std
scas
add
ret
dec
sti
add
mov
mov
imul
mov
rolb
mov
xlat
das
outsl
push
add
jbe
or
aas
pop
mov
mov
or
inc
add
mov
stc
mov
add
mov
ja
cli
icebp
fiaddl
add
hlt
xchg
test
fildl
jne
add
and
mov
pop
jns
cmp
cwtl
add
pop
pop
mov
insb
loope
dec
sbb
fstpl
cwtl
ret
daa
sub
movsb
cmp
je
sbb
mov
repnz
negb
add
inc
js
cmp
adc
es
sub
neg
fadds
add
shrl
fstps
push
sti
xorl
bts
loope
lahf
cmp
lds
jb
mov
out
mov
push
push
or
insb
fs
movsb
jmp
add
in
add
add
fildll
add
add
das
cmpsl
insb
jns
add
and
fs
inc
loop
mov
outsb
push
ja
dec
dec
mov
test
sbb
pop
cmp
and
add
test
mov
add
mov
mov
mov
mov
in
insb
cmpl
jae
add
add
mov
add
mov
jnp
add
lds
mov
add
pop
shrl
test
mov
add
loope
inc
test
scas
addb
fldl
mov
ret
ret
pop
mov
push
add
ljmp
mov
add
push
inc
arpl
loope
aam
jb
mov
loopne
mov
imul
mov
add
sbb
add
add
push
cld
xchg
cs
add
mov
inc
add
mov
mov
jo
mov
xchg
dec
cmpsb
cs
or
add
in
lds
mov
mov
and
lcall
jg
cmp
sahf
push
loopne
mov
inc
xor
mov
mov
sahf
mov
inc
add
add
jo
mov
jmp
mov
enter
add
hlt
push
add
mov
mov
addb
inc
mov
add
adc
daa
insl
mov
add
lea
cmpsl
cli
cmp
sub
inc
add
xchg
push
add
ds
sbb
lock
add
dec
lahf
mov
add
inc
add
mov
or
sysret
aas
addb
cmp
rcl
fimull
fcomps
jnp
dec
sbb
and
mov
stos
in
sub
fisubrs
mov
add
fidivrs
pop
inc
mov
and
icebp
in
nop
add
les
int3
ja
mov
push
popl
sub
insb
movsl
jle
mov
fld
add
and
mov
mov
jnp
mov
ds
xchg
add
mov
add
mov
fstl
hlt
inc
xor
mov
xchg
add
mov
cld
sahf
cmpsb
mov
addb
subl
insl
insb
add
mov
enter
lret
mov
fsubs
mov
mov
dec
or
and
mov
mov
adc
mov
outsl
pop
pop
ror
sbb
rolb
mov
add
mov
fucomi
jae
int
mov
mov
pop
push
gs
mov
popf
js
dec
lods
and
in
add
fistpll
das
popa
pop
lock
fsubrp
repnz
add
fists
mov
mov
lret
cmpsl
imul
mov
cmp
xchg
add
push
mov
scas
or
inc
fmull
sub
xchg
stc
addr16
push
lcall
leave
mov
xchg
ret
add
mov
mov
add
test
lods
pop
pop
xor
xor
add
stos
jne
add
cmp
dec
mov
test
fstpl
add
sub
sub
add
add
xchg
out
xchg
mov
repnz
add
cmp
push
loope
movsb
loopne
mov
test
mov
jp
push
mov
andl
mov
outsb
adc
mov
inc
push
inc
add
cwtl
in
add
push
add
sub
push
test
dec
xor
mov
pop
xchg
xchg
popf
decl
mov
mov
or
cmp
sbb
add
repnz
out
aas
add
xor
mov
rdpmc
arpl
imul
cmp
and
lods
dec
out
dec
jecxz
iret
pusha
add
jecxz
mov
adcl
add
mov
mov
in
shl
imul
icebp
jne
mov
cmp
add
in
sub
or
cmpsl
leave
lret
fmul
sub
clc
dec
jne
adc
mov
aad
add
mov
and
mov
add
or
outsl
or
add
inc
push
xlat
add
mov
xchg
lds
rolb
mov
mov
repnz
test
repz
add
push
pusha
add
xchg
mov
add
add
mov
dec
adc
mov
test
xor
sahf
rolb
mov
and
fisttps
dec
dec
pop
inc
sahf
inc
loopne
mov
sub
dec
mov
add
xchg
jbe
jle
pop
pop
int
or
mov
jmp
adc
mov
rolb
mov
sbb
mov
in
lods
outsl
dec
pop
fmul
add
and
mov
test
mov
fbld
mov
inc
add
sub
rolb
mov
loopne
mov
dec
loope
pop
jae
jo
mov
mov
sbbl
mov
mov
ss
in
add
xchg
ja
aam
je
push
dec
xchg
xchg
loop
mov
jae
dec
or
insb
xchg
cmp
jne
lock
xor
mov
add
loopne
mov
mov
jno
sarl
and
fwait
stos
sbbl
fldenv
movsb
xchg
push
ficoms
adc
ja
aaa
aas
imul
std
xchg
add
mov
dec
pop
mov
dec
mov
adc
jbe
lds
je
sbb
pop
rolb
mov
dec
pusha
add
mov
mov
adc
nop
add
mov
loop
mov
or
cli
push
fistl
sbb
outsb
int3
lahf
cmp
add
xor
in
scas
ds
add
xor
mov
cmp
add
sarl
mov
int
or
cmpsb
movsl
jae
mov
cmp
cmp
pop
xor
fscale
push
push
mov
cmp
add
push
test
mov
mov
sub
jns
fwait
dec
cltd
and
mov
mov
mov
repz
in
xor
add
inc
and
aaa
daa
add
and
mov
add
mov
mov
mov
add
test
add
add
sub
push
fcompl
ret
sub
push
add
mov
add
movsb
pop
and
xchg
mov
adc
mov
add
mov
nop
add
jb
mov
mov
daa
pop
sub
cli
pop
or
mov
or
imul
popf
xchg
and
pusha
add
xchg
das
mov
add
xlat
stos
xchg
and
add
sub
aaa
jno
cmpsl
push
hlt
mov
add
in
lcall
stos
divb
xor
mov
add
pushf
in
dec
dec
in
movsl
cmp
dec
push
aad
std
mov
pop
dec
sar
or
add
adc
adc
mov
xchg
das
gs
sub
dec
xlat
xrelease
jnp
rcr
dec
test
xchg
add
push
adc
in
cwtl
mov
nop
add
mov
add
mov
lods
fwait
rolb
aas
xor
in
insb
mov
add
or
loopne
mov
dec
or
adc
outsb
int3
inc
mov
sub
out
pop
cltd
roll
fnstenv
dec
or
add
dec
mov
adc
mov
xchg
sti
mov
push
cmp
fs
arpl
mov
ds
mov
xor
decl
notb
add
in
cmp
jne
cmp
xchg
xlat
adc
cmp
mov
add
cmpsl
mov
mov
insb
jne
xor
xchg
test
imul
int3
lds
push
mov
jno
sbb
fxch
mov
movl
enter
hlt
mov
pop
cmpsl
testb
mov
lods
jno
bound
mov
ret
leave
push
sub
jle
mov
mov
lock
or
add
popf
mov
or
roll
addb
data16
lret
stos
aam
cld
and
add
or
mov
mov
aad
jnp
cmp
daa
daa
fstl
xor
mov
mov
ljmp
add
jmp
pop
mov
cmp
mov
pop
incb
mov
cmovl
xlat
scas
add
mov
rolb
mov
por
add
xchg
loopne
mov
fwait
mov
mov
mov
xlat
lock
adc
sbb
xor
mov
add
add
sbb
adc
sbb
in
std
pop
sbb
mov
stos
jg
pop
cld
insl
add
jae
je
lods
mov
ror
add
sub
push
dec
jl
andl
dec
jno
push
fsubl
or
or
aad
rolb
mov
aas
and
mov
bound
mov
jbe
cmp
bound
mov
pop
and
or
mov
pop
adc
mov
cmp
and
stc
loope
pop
dec
add
bound
mov
mov
popa
inc
add
cs
xor
mov
mov
mov
mov
mov
cs
decl
add
mov
outsb
in
or
mov
add
int
sub
cmp
mov
pop
mov
insl
sahf
jne
test
pop
dec
sbb
pop
adc
test
or
add
jbe
jl
je
mov
dec
mov
push
pop
jnp
and
test
mov
sub
dec
mov
ficompl
test
mov
push
or
inc
stc
jecxz
ljmp
pop
icebp
mov
push
dec
mov
je
dec
mov
mov
or
add
ds
lds
and
mov
mov
add
mov
dec
mov
add
push
add
jmp
stos
lods
sbb
mov
xchg
je
or
add
mov
fucomip
xlat
jl
ret
stos
xchg
add
mov
and
jmp
xchg
jne
sbb
mov
xchg
add
mov
loope
loop
mov
loopne
mov
add
mov
add
and
loopne
mov
out
mov
adc
xor
mov
je
add
testb
psadbw
or
sbb
loop
mov
dec
lods
bound
mov
fs
push
push
pop
mov
add
mov
adc
mov
add
add
mov
cmp
xor
mov
test
mov
std
push
add
inc
add
fwait
push
loope
ds
mov
mov
mov
les
mov
lea
add
mov
stos
sbb
sub
dec
sub
add
jle
add
pop
cmp
aas
dec
ds
push
and
mov
pop
mov
mov
rolb
mov
cmpsb
sbb
stos
or
mov
cmp
cmp
mov
xchg
int3
sbb
pop
js
sbb
lret
gs
add
stos
push
sub
mov
mov
stos
jb
mov
mov
add
add
ret
adc
mov
repz
mull
add
cmc
std
adc
mov
sub
cmc
fnstsw
les
loopne
mov
lret
mov
shll
mov
adc
mov
add
fs
xchg
xor
test
stos
mov
push
lods
xor
mov
lock
inc
add
add
inc
push
std
lcall
orl
sub
leave
add
stc
push
ja
mov
add
xor
mov
cmp
and
addr16
sub
dec
rolb
pop
jg
xchg
rolb
mov
add
add
add
call
add
adc
jo
mov
sahf
ret
into
std
xchg
dec
jns
add
push
sub
push
add
sbb
test
lret
mov
add
mov
es
dec
js
jp
leave
mov
scas
jbe
push
mov
jno
sub
dec
inc
add
addb
mov
sub
arpl
add
cmp
and
mov
cmp
dec
mov
mov
xor
mov
lahf
pusha
add
scas
dec
sahf
scas
adc
mov
fwait
cltd
add
mov
arpl
out
sar
push
dec
arpl
add
pop
mov
sub
hlt
rolb
mov
mov
pushf
out
fcmovb
ret
iret
std
gs
addb
xor
in
rcll
sub
sbb
adc
add
xlat
addb
es
mov
mov
mov
or
loopne
mov
add
rolb
mov
xorl
orl
movsb
or
add
neg
adc
add
mov
int3
mov
ljmp
push
out
ss
xor
mov
mov
inc
add
xchg
xor
mov
outsb
out
xor
mov
jno
pop
data16
out
pop
push
xor
stos
push
test
idivb
cld
mov
xchg
mov
ja
xchg
mov
pop
es
adc
mov
outsb
in
es
mov
mov
loope
inc
cs
mov
mov
jb
mov
addr16
xor
mov
dec
and
mov
clc
push
add
add
mov
mov
repnz
aas
mov
add
orl
jae
iret
cmp
push
inc
xchg
daa
shll
mov
cmpsb
gs
adc
mov
mov
add
sbb
mov
adc
aam
jbe
aaa
xor
push
add
mov
outsb
mov
incl
cmpsl
arpl
mov
or
in
aaa
mov
test
add
out
inc
add
scas
xchg
sub
jae
hlt
test
movsb
movsl
xchg
or
mov
test
push
add
xor
sub
add
xchg
sbb
mov
pop
or
add
fucom
test
shll
in
sbb
pop
xchg
add
xchg
xchg
cmpsb
xor
enter
pop
xchg
cbtw
mov
nop
add
mov
test
aas
and
xor
add
rolb
mov
or
xor
mov
and
push
es
inc
bound
mov
jnp
xchg
add
aaa
icebp
adc
mov
jb
mov
lds
int3
cld
mov
mov
scas
in
rolb
sub
ret
mov
adc
push
orl
add
add
into
sub
lret
jmp
mov
add
or
stos
adc
add
hlt
jmp
or
stos
push
xor
xchg
lds
imul
add
mov
stos
adc
push
add
jnp
lahf
pusha
add
inc
mov
mov
add
add
pusha
add
mov
ss
in
add
jb
mov
add
push
add
imul
int3
push
jb
mov
jp
fisubrl
xchg
add
dec
cmpsl
movsl
nop
add
cmp
data16
js
add
jo
mov
mov
xorl
jno
aad
cs
add
mov
mov
lock
mov
xchg
add
push
enter
xor
mov
rolb
mov
mov
xlat
or
test
and
aam
add
mov
mov
push
test
xchg
mov
xchg
mov
xchg
faddl
sti
sub
ficompl
and
sbb
jl
adc
pop
mov
daa
pop
loope
inc
add
sub
xchg
add
adc
out
fisttps
mov
aad
xor
pop
sbb
sub
push
add
mov
int3
ficoml
mov
test
ret
mov
repnz
mov
mov
add
fs
cmp
push
lock
xchg
or
and
daa
loop
mov
jecxz
sbb
add
fsubr
jbe
mov
xor
mov
pop
data16
mov
lahf
bound
mov
inc
push
or
mov
add
sub
mul
test
add
aas
pusha
add
push
mov
scas
or
add
divl
add
add
imul
xchg
add
loopne
mov
add
cmp
repnz
sbb
and
mov
inc
cs
add
pop
out
sar
arpl
or
lock
jmp
pop
in
aas
push
add
mov
leave
mov
sbb
dec
int3
adc
mov
mov
mov
inc
cmc
xchg
data16
jb
mov
mov
outsl
leave
jne
mov
xor
mov
push
adc
adc
div
ficomps
insl
sbb
imul
out
lock
popf
dec
popf
inc
cmpsl
dec
inc
and
mov
add
out
inc
notl
add
addb
inc
add
iret
dec
inc
push
and
mov
add
mov
add
inc
imul
mov
cmc
add
sbb
dec
movsl
xchg
add
aas
adc
mov
add
out
cltd
jge
jno
or
jp
or
aam
add
and
mov
add
inc
add
xor
iret
xchg
shll
push
xor
fstps
dec
call
pop
mov
add
sub
sub
pop
push
mov
loope
mov
add
mov
mov
mov
stos
sub
addb
inc
call
icebp
ss
pop
pusha
add
add
test
mov
loopne
mov
sub
hlt
mov
mov
andl
add
cmp
sbb
outsb
sub
add
lret
shr
repnz
push
push
xor
mov
movsb
jns
add
add
test
aad
push
cmpsl
test
enter
loop
mov
mov
add
mov
dec
adc
mov
pop
xchg
mov
mov
fldenv
int
sbb
insb
jo
mov
xchg
fwait
adc
jnp
pop
data16
mov
push
jg
push
add
dec
popf
jae
mov
fstpl
add
add
idiv
insl
jg
add
mov
add
add
add
stc
dec
and
jmp
insl
add
dec
jg
mov
out
cmp
dec
movsb
sub
mov
or
cltd
cld
bound
mov
scas
adc
mov
testl
cmpsb
fwait
cmp
dec
les
add
jl
xor
mov
fcomps
repz
lods
pop
jae
add
mov
sbb
or
add
dec
jno
pusha
add
mov
mov
cs
push
lret
pop
xchg
std
pop
lret
cmpsl
insl
data16
imul
addb
cltd
sbb
sbb
jecxz
add
cs
faddp
pop
in
lods
mov
test
test
mov
insb
stos
rolb
mov
or
add
pop
cli
mov
mov
fcoms
push
test
sub
add
mov
xor
add
loopne
mov
mov
in
add
mov
cmpsb
add
add
cmpsl
insl
outsl
out
mov
add
loop
mov
clc
jp
pusha
add
mov
cwtl
dec
stc
sub
cmp
push
ss
std
add
ljmp
mov
rolb
xchg
pop
push
sahf
dec
addr16
cmp
inc
shll
mov
addb
gs
popa
test
aaa
and
gs
adc
and
mov
clc
and
outsl
mov
cmp
mov
pop
jae
outsl
pop
jge
inc
add
add
subl
xor
mov
insl
or
adc
loope
inc
or
hlt
inc
lods
cwtl
es
jne
mov
mov
mov
out
je
rolb
adc
mov
lods
jb
mov
mov
mov
mov
fldl
add
cmp
jmp
pushf
push
sub
xor
out
rorl
pop
push
call
in
push
mov
cld
jnp
add
mov
push
mov
int
mov
mov
sbb
xchg
nop
add
xor
mov
jmp
pop
je
sub
mov
movsb
ret
mov
mov
imul
mov
jge
add
mov
jns
and
mov
rolb
mov
or
add
adc
mov
je
sti
sbb
or
pop
pusha
add
and
mov
decl
cmp
sbb
fisubrs
jge
enter
xchg
loope
cmp
jns
incl
js
pop
mov
mov
add
mov
xor
mov
mov
jns
pop
rolb
mov
addb
xor
mov
mov
add
mov
mov
mov
mov
add
mov
mov
sti
loopne
mov
std
mov
rolb
mov
xchg
mov
mov
pop
mul
sbb
mov
inc
add
lods
pop
pshufw
inc
popf
movlhps
mov
mov
fs
add
add
and
sbb
jl
lods
sti
jecxz
mov
addb
xor
push
fstps
mov
xchg
push
add
rolb
mov
mov
xchg
add
jl,pt
leave
adc
mov
je
inc
repnz
xchg
sub
lret
pop
adc
and
mov
add
scas
gs
xchg
sbb
pop
hlt
mov
mov
cmp
lds
mov
and
mov
sbb
mov
mov
mov
add
loopne
mov
jle
add
mov
add
mov
je
adc
mov
imul
xchg
in
adc
mov
cld
cltd
inc
scas
cld
aad
add
popf
arpl
lret
push
mov
xor
add
add
add
lret
add
mov
push
repz
or
mov
gs
cmp
xor
es
je
adc
add
mov
cs
mov
mov
in
rolb
mov
jl
and
and
mov
jbe
bound
mov
add
push
dec
mov
mov
push
adc
add
lcall
mov
imul
leave
push
mov
inc
sub
addb
popf
test
add
pop
add
mov
mov
mov
jne
lcall
xlat
aam
mov
out
adc
mov
adc
mov
add
fwait
push
add
adc
adc
mov
pop
std
push
inc
add
nop
add
int3
les
add
add
cmp
mov
arpl
mov
mov
mov
pop
mov
mov
push
in
sbb
aaa
imul
repz
sub
cmp
add
mov
mov
rolb
mov
jno
xor
mov
sub
and
push
jl
mov
mov
lds
add
or
fnstsw
and
mov
dec
into
out
imull
mov
add
push
fwait
popf
pop
add
add
mov
bound
mov
add
clc
idivl
shll
pop
test
add
std
mov
movsw
mov
cmc
xor
mov
inc
jb
mov
les
push
jbe
ficoml
add
sub
movsl
mov
pop
test
push
jg
dec
fsubs
mov
in
adc
xor
push
aaa
iret
xor
in
adc
add
rolb
mov
in
add
mov
add
lcall
aam
ja
sahf
cmp
add
add
mov
push
mov
call
rolb
mov
add
add
xchg
xchg
in
xchg
mov
fcmovnu
cmp
pop
aaa
mov
addb
fsubrl
popf
cmp
inc
mov
and
xor
add
xor
mov
ljmp
mov
int3
xchg
out
inc
add
ss
inc
jp
ffreep
sub
inc
mov
loope
add
mov
add
mov
popa
sbb
cmp
mov
aaa
mov
xchg
xchg
or
sub
jmp
mov
fildl
add
mov
mov
daa
add
in
add
mov
test
dec
inc
sub
cmp
and
push
or
popa
dec
mov
fidivrs
push
add
mov
inc
repz
mov
test
sahf
lods
and
rolb
sbb
add
mov
ja
ret
jo
mov
repz
add
mov
lds
or
mov
push
mov
or
popf
icebp
imul
lea
xchg
push
inc
ja
mov
mov
mov
bound
mov
add
sub
addb
adc
mov
inc
pop
or
add
adc
bound
mov
in
dec
loop
mov
enter
cmp
add
nop
add
mov
add
or
adc
mov
icebp
pop
loopne
mov
adc
mov
in
push
int
adc
mov
xchg
stos
bound
mov
push
lods
add
add
movsb
jmp
mov
mov
mov
inc
insl
insb
cmpsb
pop
dec
add
sub
add
int
add
stos
push
and
mov
xchg
mov
mov
mov
cmp
int3
adc
add
jl
add
mov
jmp
mov
cmp
jl
out
rolb
mov
ds
adc
movsl
xbegin
xor
jg
adc
nop
add
mov
movsl
out
jo
mov
sahf
sbb
xor
mov
loope
jp
adc
cmp
out
mov
sbb
sbb
inc
pusha
add
and
insb
rcrl
pop
imul
dec
out
fs
addb
add
mov
mov
sbb
das
inc
jmp
out
sbb
add
dec
aaa
loopne
mov
jge
or
add
mov
popa
in
cmp
je
mov
pop
xchg
add
rolb
or
sub
enter
mov
mov
cmp
sahf
sub
in
jmp
xchg
jle
insl
pop
loopne
mov
pop
addb
jle
add
jno
aam
xor
cld
lods
xchg
sub
cmp
mov
mov
add
mov
in
sub
add
push
in
add
aam
mov
out
push
cs
add
loop
mov
inc
addb
enter
adc
mov
mov
or
xor
cwtl
jle
xchg
add
mov
mov
sbb
push
insl
jb
mov
lret
push
xchg
pop
and
mov
add
insl
scas
sub
mov
mov
ljmp
fwait
cmp
add
mov
shrl
lock
test
aad
cld
pop
pusha
add
add
dec
or
push
or
inc
fistl
mov
or
inc
add
orl
push
outsl
fwait
popa
inc
mov
push
data16
mov
mov
mov
cmc
in
jl
mov
add
adc
insl
pop
push
mov
add
xchg
sbb
push
sbb
fldl2e
mov
inc
mov
xor
sahf
mov
sub
cmp
sahf
jg
add
mov
pop
jp
mov
popf
sub
dec
out
lods
jge
lds
test
iret
or
call
add
mov
push
lds
mov
jge
pop
scas
mov
mov
imul
out
inc
sbb
add
mov
mov
sbb
das
shl
sbb
negb
add
add
add
rolb
cmpsb
imul
adc
or
add
cmpsb
fstpt
fdivrl
les
and
and
mov
mov
mov
lret
mov
les
daa
out
hlt
std
rolb
mov
pushf
dec
adc
add
add
ds
jmp
add
add
stc
push
mov
push
in
jbe
jecxz
push
sbb
aad
std
mov
aas
mov
jmp
stos
mov
cmc
test
mov
mov
add
pop
aam
adc
pop
jno
cltd
test
pop
rolb
mov
inc
push
test
mov
std
inc
add
sub
outsb
rolb
mov
bound
mov
add
add
mov
aaa
aad
pushf
lret
out
pop
and
div
out
jnp
insl
push
imull
ret
ljmp
xor
mov
lock
xor
jnp
in
push
ret
xchg
daa
push
lods
mov
fdivrs
push
ja
or
test
lods
roll
push
add
xchg
mov
lret
xchg
adc
and
cld
fcomip
out
sti
mov
inc
mov
cmpsl
sbb
add
ljmp
and
pop
lods
cmc
das
out
mov
mov
mov
add
cmp
jno
add
movsb
js
loopne
mov
movsb
aas
push
dec
ss
mov
mov
lcall
mov
shll
xor
mov
icebp
repnz
mov
add
inc
add
ds
adc
add
out
lods
push
mov
hlt
bound
mov
in
sbb
cmp
mov
add
add
rorl
scas
xor
addb
xor
jno
xchg
jp
scas
adc
adc
add
lea
sub
pop
dec
pushl
test
add
sbb
test
leave
pop
call
dec
sub
jns
mov
mov
roll
add
add
mov
xchg
or
cmp
icebp
and
xlat
ret
jmpw
fdivs
clc
int
cmp
insb
push
add
add
push
add
arpl
push
rol
add
mov
xor
mov
hlt
sbb
lea
mov
and
pop
stc
jle
xchg
loop
mov
dec
int3
pop
subl
add
sub
addr16
repnz
aad
push
cli
pop
pop
out
or
mov
pop
mov
enter
jae
das
in
outsb
cmpsb
into
loope
add
lods
sub
nop
add
and
pop
das
mov
mov
pop
imul
sahf
rolb
mov
addb
nop
add
ficoml
and
mov
or
negl
jns
add
leave
lcall
pop
lods
fwait
scas
cmp
ss
outsb
ss
addb
jbe
xor
mov
pop
cld
xchg
sub
cwtl
sbb
mov
mov
aam
adc
mov
add
add
loop
mov
mov
adc
mov
mov
dec
cwtl
push
xor
mov
lds
add
imul
outsl
mov
inc
add
mov
sbb
ds
or
add
and
add
outsb
test
pop
nop
add
add
pop
push
das
rolb
mov
das
xchg
add
mov
pop
aas
pop
push
sub
fldcw
arpl
mov
mov
dec
loop
mov
int
add
mov
mov
aas
jp
xor
mov
mov
mov
add
sti
dec
in
sbb
add
rcll
ret
call
cmp
add
lods
adc
mov
mov
add
in
mov
xorl
call
pop
jg
outsb
sbb
mov
leave
mov
jg
bound
mov
or
lcall
sub
inc
add
xor
scas
push
fcomps
dec
es
loop
mov
mov
add
mov
sbb
pop
addb
shll
pop
xor
sub
icebp
push
mov
pushf
and
mov
fstp
sbb
xor
mov
out
int3
icebp
dec
sbb
fs
call
mov
mov
add
cwtl
and
inc
sbbl
mov
sbb
loop
mov
enter
adc
mov
add
cwtl
adc
mov
int
loop
mov
inc
inc
push
jl
mov
aaa
popa
cmc
cmp
dec
ja
xor
mov
rolb
mov
es
out
add
add
addb
pop
addb
pop
mov
xchg
mov
jae
add
stos
cmc
dec
stos
sbb
xchg
mov
push
addb
adcl
mov
xchg
push
cmp
in
aam
inc
or
dec
push
js
push
and
mov
jl
fnsave
lret
cs
add
xchg
add
fidivs
add
insb
push
add
and
arpl
cmp
mov
aad
cmp
std
sub
mov
mov
add
lahf
lret
cmpsb
test
pop
jbe
int3
xchg
in
jp
pop
loope
repz
test
mov
xchg
fcoml
xor
mov
and
mov
imul
stc
jno
mov
lods
pop
adc
mov
push
loopne
mov
addr16
mov
inc
xchg
addb
jne
push
hlt
arpl
pushf
fcomps
bound
mov
pop
stc
fwait
push
add
mov
fisubrs
mov
stos
jno
insl
lahf
sub
addl
add
jg
dec
mov
mov
mov
or
add
rolb
mov
add
mov
xchg
fldl
add
add
sbb
cmp
rolb
mov
pusha
add
gs
add
sub
shrl
jns
pop
testl
scas
pop
mov
scas
daa
imul
push
add
mov
dec
push
add
lret
je
in
cmp
data16
mov
mov
sbbl
aaa
sbb
das
xchg
es
sbb
add
add
cmp
add
mov
arpl
mov
add
add
dec
xchg
jmp
fbld
fxch
jmp
mov
add
iret
outsl
or
adc
dec
pop
addr16
and
add
lcall
cmp
inc
mov
xor
mov
cmpsb
mov
mov
mov
mov
add
cli
popa
movsl
bound
mov
mov
add
xchg
xor
in
into
jmp
push
inc
inc
int3
jl
imul
mov
jne
xchg
fdecstp
pop
shll
jnp
push
andl
lahf
mov
lahf
mov
jl
add
mov
add
mov
jecxz
addb
test
int3
and
pop
cmpsl
jp
rolb
divl
or
xchg
std
imul
orl
mov
stos
and
stc
jno
mov
popa
cmp
push
push
jecxz
dec
jno
add
sub
sbb
add
add
scas
enter
adc
mov
add
jp
outsb
out
adc
popa
stos
jnp
jns
movsb
std
rolb
mov
cmp
mull
testl
data16
add
xor
lcall
add
roll
inc
cmp
cmp
lock
stos
rolb
mov
mov
mov
cltd
sbb
mov
sti
aas
popa
xlat
sbb
xlat
pop
xor
clc
lea
inc
add
outsl
call
and
leave
pop
addb
cmp
int
jmp
jbe
addr16
inc
call
arpl
inc
add
dec
rcrl
sbb
in
insb
push
jmp
add
cmp
pushl
sbb
xchg
mov
jecxz
fsubrs
test
cmp
xlat
push
add
and
jl
mov
mov
pop
and
mov
cmp
mov
sub
mov
pop
pop
dec
mov
aas
ret
cld
ret
mov
cmp
push
pop
sub
fdivrl
add
mov
dec
pop
pop
mov
adc
dec
je
lret
shll
repnz
aaa
fiaddl
add
dec
daa
add
jmp
cmpsl
and
add
frstor
popf
or
out
outsl
pop
sbb
add
scas
mov
mov
cmpsb
fildl
mov
mov
mov
pop
jb
mov
rorl
lods
lods
loop
mov
loopne
mov
div
push
ljmp
add
mov
add
inc
xor
fwait
lahf
fidivrl
sbb
std
mov
mov
add
sbb
xchg
xchg
mov
ss
mov
jge
popf
push
test
dec
clc
adc
ret
pop
jg
incl
mov
mov
loope
call
roll
mov
and
pusha
add
fdiv
push
push
stos
lock
lds
add
icebp
popf
cmp
add
test
sbb
jae
add
test
ret
lret
punpckhbw
mov
lret
addr16
sub
mov
mov
xchg
stos
cmp
add
in
aaa
xchg
sbb
jl,pt
test
xorl
jb
mov
ljmp
dec
mov
inc
add
fisubrs
pop
or
sti
rolb
mov
mov
add
mov
push
push
pop
es
js
xchg
lret
js
jmp
inc
dec
ss
add
adc
mov
mov
fildl
imul
mov
aaa
dec
inc
jmp
add
mov
and
cmp
add
mov
daa
adc
mov
mov
sub
mov
cmp
add
icebp
and
mov
mov
mov
sub
xchg
aaa
iret
les
add
cmc
into
and
pop
sub
out
movsb
mov
mov
in
add
jne
insl
out
es
add
lcall
push
mov
lret
add
addb
push
add
mov
mov
je
das
push
call
nop
add
pop
orl
jae
mov
xlat
lods
jne
hlt
in
sbb
and
cmp
int3
xchg
dec
mov
mov
jbe
xchg
add
rolb
mov
cmc
cmp
add
stos
in
pop
mov
add
add
mov
cmp
ds
add
add
pop
and
loope
pusha
add
jns
movsb
mov
lods
fnstenv
gs
imul
xor
add
add
mov
xchg
js
outsl
adc
lock
sub
add
add
roll
adc
arpl
jo
mov
push
or
adc
pop
movsl
pop
mov
ja
add
add
mov
sbb
xchg
lret
jnp
leave
jne
popfw
out
add
loop
mov
xor
mov
pop
mov
or
js
add
jg
sub
cs
push
add
push
add
aaa
sbb
nop
add
xchg
aas
xor
mov
addb
popa
fidivrs
js
add
lock
push
dec
sbb
inc
sub
dec
into
fistpl
xchg
sbb
push
fistps
add
out
jns
mov
cmpsl
sahf
fisubrs
add
test
pop
dec
pop
out
je
add
jne
lahf
and
pop
lea
rorl
pop
or
stos
xor
scas
mov
dec
out
pushf
xor
mov
pusha
add
mov
addl
mov
bound
mov
mov
loop
mov
push
les
fmul
and
mov
mov
aad
add
add
add
ds
and
mov
es
aad
pushf
data16
in
add
cmp
and
sub
iretw
lret
mov
dec
jo
mov
xor
mov
loope
push
mov
sbb
sub
adc
fildll
shrl
add
add
addl
mov
mov
inc
jno
int3
outsb
jle
xchg
iret
push
enter
fdivrl
jl
lock
decb
popa
sbb
sbb
jne
lret
or
mov
rolb
clc
xor
mov
cwtl
aad
cmpsl
data16
add
js
add
mov
ljmp
lcall
or
testb
cmp
pop
inc
lcall
mov
dec
cmp
popf
movsb
sub
outsb
pushl
xor
jbe
cmp
lahf
popf
iret
lea
sbb
push
mov
and
jae
xchg
mov
sbb
push
cmpsb
popf
mov
jp
mov
inc
into
pop
lahf
rolb
mov
fsts
add
jae
add
lock
adc
adc
enter
fdivs
push
sub
xchg
add
jb
mov
insl
xchg
cltd
movsl
in
mov
mov
in
out
add
mov
xchg
add
mov
cmc
or
cmc
aad
in
push
mov
adc
imull
ret
sbb
mov
inc
insb
test
insl
shll
mov
add
sub
rolb
mov
jbe
lea
xchg
cltd
mov
xchg
bound
mov
xor
add
mov
repz
fistl
ds
call
rcrl
repnz
fwait
xchg
add
mov
pop
mov
inc
xchg
or
add
lahf
lods
cmc
shrl
idivb
out
lods
and
jle
add
ljmp
mov
in
cmpsl
xchg
loopne
mov
out
xchg
add
jo
mov
imul
cld
aaa
mov
movsl
pusha
add
and
mov
adc
mov
add
dec
jge
bound
mov
or
pop
movsl
sub
sbb
insb
mov
mov
sbb
adc
jo
mov
fisttpll
inc
aaa
mov
mov
jbe
mov
add
add
mov
pop
sub
add
mov
dec
dec
adc
or
rolb
xchg
lods
mov
addb
mov
fstl
lea
add
mov
lahf
int3
lds
gs
xchg
outsl
fdivs
add
and
cli
filds
jbe
imul
pop
pop
adc
mov
adc
enter
adc
mov
add
dec
push
pop
int
fimuls
repnz
push
xchg
f2xm1
add
orl
sub
add
add
push
jl
jl
sub
push
pop
xchg
stos
mov
jae
add
mov
cmp
add
add
idivl
sub
add
lods
jg
dec
push
lods
cltd
dec
popf
mov
mov
jo
mov
add
cmpsb
jns
xchg
or
shll
add
mov
pop
xchg
inc
fwait
xchg
and
mov
push
ja
.byte
lods
add
