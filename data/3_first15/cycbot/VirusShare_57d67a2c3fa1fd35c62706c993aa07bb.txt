ss
jmp
rolb
mov
arpl
adc
scas
jb
mov
xchg
mov
mov
cmpsb
inc
dec
stos
pop
mov
mov
add
aam
sub
lcall
mov
mov
mov
add
add
addr16
add
add
push
stc
push
cmpsb
ss
pusha
add
jno
movsl
dec
call
mov
std
pushf
outsb
sub
scas
repnz
add
pusha
add
sub
adc
mov
add
jg
inc
stc
mov
ss
aas
mov
insb
push
in
div
or
cli
fs
popa
scas
xor
mov
dec
mov
adc
mov
dec
pop
jle
repnz
test
and
mov
dec
aam
inc
add
dec
test
fadds
test
out
xchg
push
add
mov
in
xor
mov
cmpsl
les
add
add
cli
rolb
mov
mov
and
mov
leave
push
cmp
jl
cmp
jns
shll
jno
add
dec
mov
inc
push
stos
xchg
xor
mov
int3
xchg
adc
mov
stos
dec
jb
mov
pop
insb
jbe
ja
loop
mov
add
jbe
add
mov
or
cmp
push
push
dec
insl
mov
xchg
xor
pop
mov
rolb
mov
mov
addb
pop
xor
mov
lods
lcall
and
mov
add
mov
and
jo
mov
xchg
daa
cmp
mov
jp
call
les
int3
xor
mov
lcall
out
clc
fs
mov
mov
or
add
adc
add
add
mov
icebp
adc
imul
mov
rolb
mov
inc
nopl
mov
mov
xor
movsb
sti
rolb
mov
stos
mov
notb
mov
std
sub
hlt
jecxz
in
and
fwait
lret
in
jp
xchg
jbe
pushaw
add
and
fcoms
lcall
jg
xor
add
pop
rorl
pop
call
mov
pusha
add
jnp
add
push
mov
add
mov
mov
mov
xor
mov
int3
icebp
and
cld
jp
adc
mov
jo
mov
clc
xchg
mov
ss
insl
insl
fbld
add
jmp
hlt
or
cmp
int3
in
out
movsw
mov
mov
sbb
jmp
jb
mov
cmp
ret
xchg
pushf
bound
mov
xor
add
sub
add
mov
ljmp
add
dec
xor
jle
ljmp
cbtw
mov
hlt
lea
fnsave
mov
xlat
mov
arpl
ret
push
add
lods
negl
add
repz
sub
mov
jge
rolb
mov
movsb
movsl
jb
mov
add
push
mov
repz
std
add
push
or
mov
mov
and
mov
push
add
lahf
xor
ds
add
adc
mov
rolb
mov
add
add
mov
and
add
add
mov
lcall
in
scas
outsl
dec
mov
imul
mov
mov
mov
xchg
add
jo
mov
lret
cmc
jne
fcoml
add
fcmovnu
push
cmp
mov
xchg
ds
mov
add
subl
loop
mov
pushw
sbb
sub
rolb
mov
add
add
mov
frstor
fnop
add
out
xchg
ljmp
mov
or
add
movsb
sbb
pop
push
jo
mov
mov
mov
mov
inc
dec
sub
std
cltd
addb
mov
xchg
add
icebp
cmp
imul
pop
mov
push
rolb
mov
lret
add
sbb
sbb
and
jl
iret
cmp
push
gs
mov
pusha
add
out
rolb
mov
rolb
mov
ds
fsubrs
adc
mov
jg
jns
jns
or
add
mov
lcall
lods
lods
pop
cmpsb
pop
aad
xchg
filds
add
add
in
mov
arpl
dec
xchg
imul
ja
in
inc
add
mov
scas
out
inc
push
pop
and
mov
and
cmp
mov
pushf
pop
in
jnp
into
loope
jnp
jo
mov
mov
add
inc
add
dec
jg
enter
add
cmp
loope
pop
inc
fbld
xchg
pop
push
add
sub
rolb
mov
stos
push
int3
xchg
adc
mov
cmpsl
dec
or
jbe
add
or
mov
add
add
mov
xchg
dec
adc
fwait
and
xchg
mov
inc
mov
add
inc
add
aam
xchg
ss
lret
sbb
idivl
int3
mov
movsb
and
ss
inc
mov
dec
cmp
add
mov
loop
mov
or
das
stc
outsl
push
pop
fbld
add
cwtl
sbb
inc
stc
pop
dec
dec
aas
ret
jbe
add
es
test
mov
movsb
in
andl
setb
mov
add
out
jg
add
mov
cmp
and
and
mov
lret
bound
mov
pop
or
pop
aaa
mov
imul
setp
fiadds
jg
adc
les
mov
push
or
and
add
mov
xchg
and
frstor
add
sbb
outsl
lret
add
fwait
inc
jmp
add
mov
popf
cmp
jae
lcall
mov
pushf
xchg
or
adc
cmc
aas
negb
adc
mov
adc
mov
test
clc
movsb
sub
push
stos
push
stos
or
aad
mov
stc
or
int
lret
jns
mul
incl
pop
bound
mov
mov
push
sti
movsb
jb
mov
shrl
inc
cmp
inc
or
in
dec
stos
push
mov
ja
push
call
leave
andl
cmp
test
mov
mov
sub
ds
out
shll
add
mov
sub
sbb
rolb
outsb
popf
loope
add
pop
rorl
add
dec
fwait
mov
in
and
mov
pop
ret
mov
ds
jb
mov
mov
mov
dec
and
cmpsb
inc
shrl
dec
outsl
aad
mov
lock
cmp
jae
arpl
mov
loopne
mov
add
add
mov
add
or
add
push
lods
iret
aas
daa
icebp
mov
xchg
cmp
in
inc
rolb
mov
cmpsb
mov
xor
dec
jne
push
mov
fldl
daa
scas
cmp
add
mov
xor
mov
pop
mov
testb
iret
sti
xor
mov
adc
mov
inc
test
mulb
dec
and
xchg
in
or
and
add
push
cwtl
sbb
xchg
push
add
push
pushf
out
ret
and
jae
mov
mov
mov
rolb
mov
add
mov
mov
in
adc
mov
scas
jns
add
xchg
std
test
mov
scas
cmp
syscall
aam
push
aas
dec
sub
mov
add
jbe
xlat
or
add
pusha
add
sbb
mov
inc
sbb
sub
jae
scas
js
ljmp
scas
ljmp
mov
stos
dec
mov
outsb
sbb
lds
fidivrs
cs
aad
scas
sbb
pop
jp
lret
or
das
push
rorl
pop
rolb
mov
inc
push
ret
xchg
add
add
je
pop
rcl
add
dec
test
in
in
pop
arpl
or
sub
aad
jge
scas
push
add
or
stc
mov
out
sbb
out
leave
mov
mov
mov
sbb
push
xchg
add
adc
xor
mov
fwait
scas
mov
mov
sbb
movsb
xchg
ret
sub
add
in
popa
mov
mov
push
cmp
add
add
inc
add
sub
movsb
sbb
leave
push
or
loope
xlat
sbb
ja
pop
mov
insb
hlt
jns
cli
push
xchg
add
mov
mov
mov
fidivrs
mov
jmp
or
jae
add
mov
lret
mov
xchg
int
cmp
add
in
mov
add
and
mov
insl
pop
fbld
mov
dec
mov
cmp
test
int3
icebp
and
mov
jp
mov
mov
test
call
dec
push
mov
cli
adc
mov
loop
mov
add
add
add
adc
mov
add
sub
sbb
jl
xor
mov
fildl
scas
jp
sarl
scas
inc
ja
jmp
inc
xchg
inc
or
movsb
cmp
clc
dec
loopne
mov
rcll
test
lock
sub
mov
ret
mov
mov
jecxz
xchg
mov
mov
cmova
add
lret
add
mov
and
and
mov
enter
aas
loope
sub
add
add
mov
mov
mov
add
cmp
add
je
mov
push
cs
add
or
lret
call
xchg
lods
clc
shrl
jmp
push
outsl
aam
add
inc
add
mov
std
add
cmp
sub
std
jns,pn
and
mov
out
inc
add
sbb
mov
pop
das
in
inc
push
push
jmp
cs
icebp
out
xor
add
jmp
fwait
das
gs
pop
stos
iret
test
std
push
jle
jge
xchg
mov
cmp
add
out
push
sub
sub
cmp
and
add
rcll
rolb
mov
jne
add
add
inc
fdivl
dec
jb
mov
add
rolb
adc
mov
jecxz
mull
sti
lret
into
push
pop
ja
add
push
add
int3
or
repnz
hlt
in
dec
ja
mov
and
cltd
adc
add
jns
stos
push
sarl
test
mov
sahf
pop
insl
mov
push
add
cmp
sbb
push
xchg
add
scas
ja
mov
popf
dec
push
add
and
loopne
mov
push
adc
add
mov
or
sub
jecxz
mov
and
sahf
ret
and
mov
mov
and
mov
mov
or
ljmp
add
mov
inc
ret
scas
jb
mov
pop
lods
add
push
xor
add
mov
pop
pop
jge
jne
pop
sub
add
in
ret
jnp
popa
and
jl
dec
push
inc
sub
and
in
movsb
add
add
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
pop
pop
cltd
sti
ds
pop
xchg
add
fchs
add
xlat
addb
daa
outsl
test
lods
inc
add
enter
add
sbb
add
add
add
push
mov
add
dec
xor
sbb
or
popf
lahf
jg
add
mov
mov
mov
add
test
add
mov
into
fnsave
insl
in
add
add
repz
mov
pop
imul
mov
inc
mov
mov
nop
add
outsb
in
pop
aas
fsts
jmp
js
add
dec
nop
add
bound
mov
or
add
add
and
in
sub
loope
pop
dec
sub
and
mov
out
int
sbb
mov
neg
or
repnz
add
mov
jp
aaa
push
es
pop
dec
pop
clc
push
cs
sub
add
mov
mov
adc
push
add
test
or
rorl
mov
add
cmp
pushf
in
or
add
sub
out
rcr
ss
or
add
aam
cmp
movsb
pop
sub
pop
or
push
mov
out
nop
add
mov
sahf
sub
push
add
stos
clc
out
push
add
nop
add
add
rolb
xor
mov
push
stos
idiv
pop
adc
imul
dec
xchg
fiaddl
test
adc
aam
add
jne
int
fs
add
mov
addr16
xchg
scas
push
add
adc
add
mov
jmp
add
sti
mov
xchg
in
pop
addr16
movsl
in
ret
sub
add
add
xor
pop
outsl
outsl
addb
int
adc
mov
mov
add
add
mov
add
mov
add
in
out
jmp
outsl
cmp
mov
mov
jbe
push
jne
mov
mov
popl
jb
mov
add
dec
add
sar
cmp
mov
push
add
mov
pop
addr16
ss
or
and
mov
or
dec
dec
cmp
add
xor
mov
jno
insl
add
add
push
mov
aas
outsl
mov
mov
aas
xor
mov
mov
addb
inc
or
add
mov
icebp
fmuls
loop
mov
mov
dec
xor
lret
addb
fdivrl
dec
fisubrl
add
adc
int
jbe
dec
mov
add
add
ficomps
fs
lds
add
mov
test
add
mov
mov
sbb
fmuls
adc
mov
addb
in
mov
mov
inc
add
jge
popa
lea
aaa
stos
aas
out
sbb
add
xchg
add
stos
and
add
mov
pop
xchg
mov
cmpsl
out
sub
in
call
das
fcoml
add
mov
daa
adc
add
fldcw
pushl
or
mov
mov
sbb
add
rolb
mov
push
dec
sub
add
std
ja
ficoms
stc
dec
into
lock
mov
mov
xlat
mov
mov
push
in
dec
js
test
imul
loope
adc
inc
add
movsl
popa
and
add
mov
das
push
stos
jle
rolb
mov
push
out
mov
mov
dec
pop
mov
stos
xchg
mov
mov
xchg
mov
and
sahf
sub
ret
pushf
leave
ret
mov
movsl
cmp
xchg
addb
jne
add
addr16
dec
push
loop
mov
in
filds
mov
mov
mov
cmc
push
cltd
push
xchg
add
nop
add
push
dec
aaa
cli
xchg
inc
push
jo
mov
add
add
ljmp
mov
xor
mov
add
dec
out
cmp
or
popf
cltd
ret
jae
dec
dec
es
je
stos
adc
loop
mov
mov
ret
scas
lcall
mov
add
add
push
arpl
add
sub
add
mov
mov
dec
cld
add
mov
mov
les
and
lret
pop
out
xor
mov
push
inc
add
add
jmp
mov
xchg
fdivl
add
ret
sbb
daa
std
cmpsl
mov
sbb
add
fcmove
push
cmc
imul
fadds
incb
leave
int3
push
gs
mulb
mov
jne
xor
mov
pop
pop
dec
pop
icebp
iret
sub
imulb
call
or
add
add
mov
and
push
orl
cwtl
push
mov
in
das
roll
mov
das
xchg
add
testb
add
cmpsb
frstor
loop
mov
mov
dec
add
mov
jecxz
xor
fcmovnbe
add
popf
and
mov
add
add
add
loop
mov
shl
add
add
sbb
cmp
sub
jmp
push
jns
and
orl
add
and
pop
jnp
test
dec
mov
cmc
repz
jae
mov
xchg
into
push
test
sub
lods
mov
add
cmp
mov
mov
addb
popa
cmpsb
cmp
stc
test
les
mov
mov
lret
mov
add
add
add
add
sub
adc
addb
out
incl
mov
mov
jle
add
mov
lods
jnp
add
mov
cmpl
mov
dec
push
push
cmp
add
aas
sbb
jg
and
mov
mov
in
adc
inc
or
add
and
inc
push
sub
mov
je
add
pop
roll
ret
push
out
mov
push
add
push
jp
add
adc
mov
or
add
in
fistps
add
fdivs
std
rorl
cmp
jecxz
mov
out
adc
mov
add
lahf
imul
xor
add
add
cmp
add
jno
scas
mov
add
lds
sahf
dec
push
jb
mov
dec
mov
in
xchg
rolb
mov
in
addb
bound
mov
ja
pmullw
pushf
pop
or
add
loope
loop
mov
lcall
lret
add
inc
rolb
mov
push
mov
xor
loope
add
rolb
enter
fdivs
add
mov
inc
inc
add
pop
push
add
lods
mov
adc
mov
movsb
stc
dec
lret
rolb
mov
cltd
rolb
mov
mov
mov
inc
pop
inc
add
leave
jne
cmp
cwtl
adc
mov
jno
pop
mov
mov
lds
mov
jmp
adc
sbb
aad
add
and
bound
mov
or
in
or
mov
add
and
sbb
jne
add
mov
push
stos
mov
js
xchg
inc
lcall
mov
scas
aad
loop
mov
sbb
cmp
imul
mov
lds
sub
add
lods
scas
dec
adcl
stos
les
cmp
mov
hlt
xchg
sbb
into
aas
addb
push
jbe
mov
and
xlat
scas
mov
jg
addb
cld
cmpsb
adc
add
sbb
add
in
dec
mov
pop
pop
dec
cmp
test
pop
jno
enter
addr16
push
dec
cmp
cmp
pop
insb
repnz
add
mov
adc
jge
ret
and
add
mov
dec
fildll
mov
test
fcompp
leave
popf
sub
xor
mov
call
movsl
jle
data16
add
mov
pusha
add
add
pop
dec
xchg
add
icebp
pop
mov
fwait
and
mov
mov
xchg
add
or
inc
and
mov
xchg
clc
dec
cmp
dec
pusha
add
add
mov
imul
test
negb
adc
mov
inc
push
and
mov
popf
jae
jns
icebp
push
mov
xchg
inc
sub
out
movsb
dec
mov
idiv
mov
mov
jg
and
adc
cmp
add
aad
ljmp
icebp
fidivl
mov
cmpsl
lahf
shll
sbb
add
inc
xchg
nop
add
mov
inc
add
mov
mov
xchg
add
pop
sahf
adc
add
aam
mov
mov
dec
enter
pop
pop
out
lods
loopne
mov
lret
push
out
or
sub
mov
xchg
arpl
jg
mov
mov
popa
roll
pop
and
in
jecxz
adc
test
and
mov
push
nop
add
lahf
shll
sub
ficomps
or
add
mov
push
jge
cs
addb
or
movsl
rcll
or
xlat
jae
jnp
jae
loopne
mov
xchg
outsl
xchg
add
fnstcw
add
pop
inc
into
fisubs
mov
and
add
fldenv
add
out
dec
bound
mov
mov
mov
adc
cmp
cmp
cmpl
fs
pusha
add
mov
mov
outsb
pop
jnp
sub
mov
mov
stc
arpl
add
mov
cli
dec
popa
mov
mov
ljmp
mov
dec
shll
and
mov
mov
mov
lods
lods
mov
mov
mov
lahf
jg
rolb
movsb
or
jo
mov
call
sbb
lock
add
addb
in
pop
or
lret
mov
mov
mov
rolb
mov
loope
call
ja
cmp
mov
mov
sar
xchg
add
mov
and
icebp
in
in
push
push
add
das
insb
mov
jp
mov
sbb
add
mov
pop
jnp
inc
test
xlat
and
mov
jns
test
aas
lods
jne
add
mov
imul
addr16
push
add
jne
aas
addb
mov
call
sbb
or
add
xchg
or
dec
imul
jp
cmp
pop
addb
xchg
add
add
add
cmp
mov
or
add
mov
mov
pop
in
add
jge
add
pop
push
pushf
xchg
inc
jo
mov
mov
in
or
cmp
test
add
stos
xlat
loope
out
cmp
ret
test
out
add
std
js
push
xchg
dec
mov
add
les
leave
in
adc
dec
enter
mov
scas
imul
lahf
or
cmpsb
xor
push
stos
int3
add
fisubl
mov
sub
adc
xchg
mov
push
xor
mov
inc
mov
push
stos
mov
push
pushf
aad
push
std
repz
jne
jnp
addr16
imul
inc
add
add
mov
mov
pop
jne
fs
nop
add
nop
add
out
sbb
ret
inc
add
stos
insb
push
push
add
add
add
xchg
and
push
add
mov
mov
imul
and
mov
add
sub
jl
add
sbb
dec
fdivrl
xchg
add
xor
add
mov
js
hlt
rolb
mov
pop
pusha
add
jno
sub
lods
repz
pusha
add
sbb
roll
mov
jb
mov
sbb
inc
mov
mov
add
mov
adc
mov
or
popf
pushw
movsl
lods
mov
xor
mov
insb
pop
mov
out
pop
xor
xchg
dec
jg
and
mov
insl
out
xchg
jbe
test
mov
xchg
iret
aaa
lock
add
leave
mov
add
sub
in
push
add
mov
add
daa
mov
or
xchg
pop
dec
idiv
repnz
addb
inc
push
dec
push
add
add
jecxz
test
add
or
lret
pop
data16
push
add
add
jl
mov
popa
mov
rolb
jo
mov
add
push
ret
ljmp
icebp
sub
test
leave
cltd
sbb
mov
add
jl
and
jle
add
jp
hlt
repz
aas
jno
and
loopne
mov
mov
adc
arpl
mov
add
add
divl
repz
mov
add
movsb
mov
push
pushl
add
xchg
xor
mov
outsb
into
jg
clc
sub
ficomps
mov
mov
mov
fdivrl
add
add
sub
mov
mov
add
xor
mov
bound
mov
xchg
add
add
xor
ds
and
xchg
pop
scas
imull
dec
ja
lods
mov
lods
shrl
lea
dec
cli
or
jmp
fnstenv
mov
xchg
repz
cmpsl
mov
mov
rolb
mov
sahf
mov
out
out
fsubrs
mov
add
add
push
or
loope
adc
jo
mov
or
gs
dec
or
dec
int
mov
xchg
add
xchg
add
mov
and
mov
mov
mov
add
add
fs
loopne
mov
ds
repz
repnz
or
xchg
xor
pop
gs
mov
rolb
mov
push
sbb
mov
xchg
fcmovnbe
mov
mov
xchg
mov
flds
or
mov
cmp
mov
arpl
add
push
add
or
mov
add
cmpsl
aad
shrl
test
mov
xlat
pop
ret
cld
inc
or
xor
mov
xchg
and
cld
movsb
fnstcw
in
add
addb
je
popf
jbe
push
mov
mov
into
adc
sti
mov
mov
pusha
add
js
add
push
jae
xor
mov
das
sub
mov
adc
mov
aad
inc
cld
cmp
dec
push
int3
int
add
push
push
ret
popf
xlat
jecxz
xor
add
mov
ret
push
sahf
dec
adc
mov
cli
mov
repz
add
loope
adc
stos
or
push
jge
mov
lcall
sbb
lds
mov
addl
loopne
mov
jne
mov
cld
sub
in
hlt
and
push
roll
mov
lret
ss
push
inc
je
mov
add
add
jmp
loop
mov
mov
ret
push
mov
mov
and
add
sub
test
out
sti
std
sbb
or
ja
mov
mov
push
aad
in
fxch
cmp
and
jmp
push
hlt
push
dec
jbe,pn
sbb
push
cmp
sbb
jmp
sub
jle
loop
mov
andl
ret
sub
loopne
mov
xor
sub
mov
inc
sub
xor
add
add
repz
cmp
je
mov
pop
aam
xchg
pop
mov
jge
xchg
addr16
sub
sbb
bound
mov
mov
ret
test
xchg
stos
test
sub
xchg
sub
add
sub
push
dec
pop
sbb
leave
pop
pop
add
xlat
mov
sti
aad
jge,pn
mov
movsb
lcall
xchg
ljmp
dec
add
xchg
dec
jl
cld
sbb
push
ja
add
mov
mov
mov
stos
enter
sbb
movsl
xlat
scas
push
add
fnsave
mov
add
rolb
mov
pop
jg
jl
cmp
add
mov
add
sub
add
repz
jecxz
jno
clc
dec
cmpsl
xor
cld
mov
push
aaa
dec
mov
sbb
leave
in
iret
add
mov
dec
icebp
ja
inc
and
mov
aaa
addr16
jne
add
sti
mov
add
lds
mov
mov
sti
inc
rcrl
adc
inc
inc
pop
lahf
pusha
add
jl
xor
ds
shll
add
mov
nop
add
push
or
insl
nop
add
enter
xor
fdivrs
push
es
add
popf
push
add
fmul
cltd
and
mov
in
insb
dec
cwtl
push
jb
mov
add
test
cmp
fcoml
sbb
int
mov
add
stc
aaa
popf
xchg
jno
xchg
push
inc
add
pop
push
add
xchg
add
bound
mov
xchg
dec
jns
or
push
sahf
ss
xor
mov
ret
negb
sub
pop
inc
clc
int3
inc
and
mov
or
das
cmc
or
mov
mov
mov
add
rolb
mov
out
add
ss
dec
fsubp
jmp
mov
adc
mov
inc
add
mov
add
call
test
add
add
mov
sub
lcall
mov
aam
clc
loope
xor
sbb
add
and
xchg
inc
or
stc
jnp
or
loopne
mov
or
mov
mov
notb
mov
mov
dec
xor
mov
add
xchg
cmpsb
iret
lcall
dec
pop
jae
sahf
cmp
movsl
xchg
mov
hlt
shll
ljmp
jnp
pusha
add
mov
mov
cli
inc
sub
add
cmp
add
fwait
out
fstpl
popa
cmp
jg
icebp
sub
and
mov
add
add
push
xor
les
mov
mov
jns
push
or
repz
add
add
xchg
fwait
inc
sti
pop
or
addb
addb
call
inc
add
iret
mov
outsb
push
add
xor
push
add
or
mov
xor
arpl
add
add
add
add
filds
xchg
test
jns
mov
addr16
jae
inc
xchg
add
imul
insb
mov
mov
add
sbb
adc
test
jno
test
pop
push
mov
int3
xchg
dec
lcall
add
arpl
rolb
pop
roll
in
add
add
fwait
xor
mov
sahf
call
loop
mov
or
sub
jecxz
imul
xchg
inc
add
movsl
dec
xchg
cmp
push
in
add
mov
add
fwait
sbbl
dec
inc
xor
sbb
or
aaa
mov
cltd
xor
mov
add
inc
mov
inc
pop
sbb
jbe
add
xor
mov
add
and
mov
or
jl
adc
mov
cmp
pop
pusha
add
aaa
fwait
stc
bound
mov
add
es
cltd
cmp
lods
push
cltd
addr16
ret
rolb
jnp
add
mov
mov
mov
addr16
es
pop
out
ficomps
jl
test
pushf
fnsave
dec
jle
insb
inc
loopne
mov
sub
jge
add
fcompl
add
aad
jno
test
and
insb
pusha
add
cmp
lcall
dec
lock
fcmovnu
je
xlat
repz
add
mov
add
mov
scas
cltd
push
jl
fldenv
mov
cmp
insb
push
add
or
add
mov
in
add
xor
mov
pop
hlt
xchg
jo
mov
adc
mov
cs
out
out
fs
and
or
cmp
sbb
add
add
add
push
xchg
clc
scas
mov
or
add
add
clc
push
add
hlt
xchg
jecxz
and
add
sahf
loope
jge
cmp
add
stos
and
addb
xor
pop
in
or
add
pop
daa
mov
cmp
xor
addb
xchg
nop
add
cmp
out
cmp
xor
pop
sub
and
push
add
add
int
mov
jns
pop
cld
or
jl
dec
iret
ljmp
mov
mov
mov
jmp
mulb
pop
test
mov
outsb
push
add
mov
mov
mov
mov
add
lcall
repz
gs
or
add
ljmp
dec
pop
iret
std
es
lea
das
pop
mov
movb
pop
call
xchg
stos
dec
and
mov
leave
outsl
test
mov
and
sbb
mov
mov
and
lcall
xor
mov
inc
std
xchg
jmp
fcmovbe
sbb
out
lcall
add
rolb
fs
adc
test
jl
fidivs
add
outsb
push
nop
add
inc
clc
lret
mov
add
add
mov
and
jge
cli
push
fistpll
jmp
xchg
sbb
or
call
sub
jbe
cli
mov
test
es
rolb
mov
push
pop
and
mov
mov
ror
leave
daa
add
mov
inc
jmp
sub
add
loopne
mov
xor
adc
fs
add
push
and
mov
xor
xor
mov
nop
add
jns
dec
push
xor
add
loope
push
pop
cmp
add
mov
push
add
mov
pushf
sbb
rolb
mov
mov
addl
dec
imul
leave
cmp
add
or
mov
js
inc
cmp
imul
outsl
mov
int3
in
es
mov
mov
test
fiadds
add
mov
aam
mov
cltd
lea
inc
into
inc
mov
mov
sbb
sub
cmp
imull
packsswb
add
stos
movsl
cli
push
addb
scas
rolb
les
mov
add
outsb
xchg
leave
dec
loop
mov
sub
adc
mov
notb
pmuludq
enter
mov
mov
cltd
daa
movsl
fwait
mov
movsb
scas
fcoms
inc
cmp
repz
mov
sbb
test
xchg
cld
lods
dec
or
mov
mov
lcall
sub
xchg
xchg
pushf
insb
pop
std
and
jle
cs
jbe
add
in
jge
cmp
scas
out
cmp
add
jmp
ret
mov
mov
bound
mov
pusha
add
and
push
xor
mov
je
or
aas
cli
cmc
inc
mov
dec
fidivrs
add
push
hlt
pop
mov
sub
cli
dec
inc
lea
mov
add
xchg
sbb
inc
cmp
cmpsb
addr16
jle
mov
cmc
pop
leave
xor
mov
test
cmp
mov
lahf
mov
arpl
mov
imull
dec
das
lea
cltd
fistl
mov
mov
orl
pushf
in
imul
dec
test
mov
sahf
xor
mov
sub
or
cmp
add
mov
js
xorl
scas
jnp
fndisi(8087
lods
xchg
addb
icebp
sbb
sbb
in
stos
mov
mov
pop
inc
movsb
fsubr
mov
lock
pop
sub
stos
data16
jno
sbb
sub
sbb
fnsave
adc
add
mov
xor
mov
imul
fsubl
add
add
xor
push
xchg
loop
mov
test
adc
mov
out
push
lock
lss
mov
add
cmpsb
and
jl
and
add
mov
xor
mov
sbb
mov
movsb
mov
sbb
push
dec
je
pop
out
mov
pop
addb
pop
fcomps
sub
push
mov
add
add
sbb
mov
add
mov
jo
mov
mov
out
and
jmp
hlt
jnp
sub
xchg
sbb
mov
imul
pop
fisubs
jmp
mov
sub
add
mov
fistpll
xchg
push
add
inc
add
sbb
jecxz
and
add
mov
out
xor
mov
mov
dec
rol
xchg
or
sub
mov
dec
pop
mov
and
mov
jecxz
jns
rolb
mov
inc
add
mov
sub
jae
xor
mov
inc
clc
stc
dec
sbb
push
loopne
mov
cmp
mov
aad
leave
lea
xor
stos
mov
add
gs
mov
add
ljmp
add
cld
scas
sub
add
out
das
sbb
addb
ljmp
testb
mov
dec
jl
add
add
dec
or
leave
hlt
sbb
xchg
fcmovne
enter
add
decl
add
mov
pushf
cs
insb
cli
fildl
add
test
add
sbb
inc
mov
mov
mov
popf
adc
mov
add
jmp
nop
add
icebp
fldl
dec
pusha
add
add
xor
je
add
rolb
mov
push
test
mov
call
lds
cmp
or
loope
test
sbbl
add
scas
mov
jle
mov
mov
or
xchg
add
jne
mov
mov
add
adc
leave
je
lods
addb
sub
mov
rolb
mov
inc
add
imul
xchg
je
add
xor
mov
add
jp
addr16
jl
mov
fcomp
push
into
mov
mov
orl
mov
xor
cmpsb
test
sbb
popf
lods
enter
add
loope
add
jns
sub
pop
push
pop
mov
mov
or
test
popl
add
sbb
pop
hlt
fdiv
push
mov
push
or
jne
addr16
mov
mov
mov
xchg
lock
mov
cli
pop
or
fxch
mov
lock
add
setl
mov
adc
mov
add
test
fwait
lods
enter
aaa
mov
mov
dec
jmp
pop
push
add
dec
sbb
mov
add
scas
out
dec
xchg
mov
call
repz
rcrl
pop
jb
mov
ljmp
lcall
jmp
sbb
rolb
mov
lods
pop
mov
xchg
mov
add
lods
push
add
and
cwtl
push
mov
mov
push
cmp
fidivs
add
dec
popf
dec
addr16
test
rcll
and
in
mov
mov
pop
out
xor
mov
pop
push
add
mov
sbb
imulb
lcall
mov
jno
stos
lret
push
loope
jno
loop
mov
push
stos
cs
jmp
or
xorl
or
int
pop
mov
arpl
flds
fiaddl
add
push
scas
fcoms
and
mov
out
stc
xchg
jns
inc
fiadds
subl
addb
popf
jns
jecxz
xchg
add
lret
mov
jo
mov
adc
mov
mov
mov
rcl
rolb
mov
add
mov
add
mov
xchg
lcall
mov
add
mov
std
or
push
lods
pop
es
push
cmpsl
fxch
rolb
mov
rcl
and
add
mov
jge
xor
mov
cmp
inc
lret
out
dec
or
sbb
xchg
add
xlat
xor
enter
int
xchg
mov
add
cmp
mov
adc
sti
ljmp
xor
add
rcrl
jp
punpckhwd
pop
stos
sbb
xchg
loopne
mov
jae
arpl
jg
fisttpl
test
mov
inc
lret
cs
adc
inc
jmp
fcompl
sub
mov
mov
cld
repnz
push
hlt
lock
mov
cmp
fdivp
nop
add
sbb
rolb
es
mov
arpl
mov
aad
add
imul
aaa
dec
dec
out
cld
or
jmp
pop
popf
adc
jl
call
jmp
lods
out
add
cwtl
sbb
mov
insb
jl
add
les
add
adc
xor
mov
mov
and
pushf
loopne
mov
mov
push
jp
mov
out
cmp
shr
sahf
sti
ret
pop
jle
imulb
add
fldpi
popa
adc
mov
jp
data16
mov
add
mov
mov
and
mov
adc
scas
mov
mov
scas
inc
xchg
fimull
jno
add
test
push
add
mov
ret
popa
out
mov
jp
add
add
add
add
jge
sti
pshufw
fisubs
pop
mov
jge
movsb
arpl
in
loope
lret
hlt
add
mov
add
es
cwtl
aas
fadds
mov
add
mov
les
xchg
mov
push
test
lcall
add
rep
clc
addb
adc
mov
mov
adc
cmc
add
stos
sub
jg
add
mov
add
mov
shl
fwait
xor
rolb
mov
add
stos
mov
push
add
sub
loop
mov
jl
pop
jnp
je
push
aaa
xor
movsl
jp
add
mov
lahf
push
mov
sbbl
add
sbb
mov
outsb
scas
ficomps
inc
in
lret
add
shrl
mov
xor
add
xor
cmp
dec
inc
adc
mov
add
or
add
sahf
dec
and
mov
ja
sahf
pop
cs
fwait
into
jecxz
push
sub
idivb
fneni(8087
add
loope
cmpsl
xchg
aaa
add
mov
mov
in
jl
cmp
cld
enter
add
in
popf
jne
push
push
stc
lods
or
pop
mov
mov
xchg
daa
fnstsw
add
cltd
imul
mov
pop
push
stos
in
loope
add
mov
mov
sub
in
js
bound
mov
xlat
xor
mov
pop
jno
fdiv
sbb
or
pop
xchg
add
adc
add
jl
dec
popf
mov
jns
lds
and
ds
jmp
test
mov
mov
add
sbb
bound
mov
mov
add
mov
cmp
fidivrl
mov
dec
pop
fcoml
in
jbe
loopne
mov
dec
dec
ss
pop
es
mov
inc
adc
mov
mov
mov
add
mov
nop
add
push
addb
cmp
hlt
mov
nop
add
ficoml
xchg
addb
aaa
inc
add
mov
flds
mov
push
add
out
addb
ret
push
dec
setb
mov
sbb
mov
add
fisubrl
mov
add
mov
add
in
mov
add
hlt
inc
sub
sub
sbb
aad
mov
mov
and
mov
pop
scas
and
mov
rolb
mov
dec
test
pop
dec
lods
inc
out
xchg
fdivl
dec
cwtl
dec
sbb
adc
fnsave
xchg
and
mov
test
sahf
sub
sub
inc
sbb
xchg
sbb
add
mov
mov
mov
mov
out
mov
mov
push
lock
jae
call
push
aas
and
jb
mov
movlps
mov
arpl
jle
add
add
push
loop
mov
sub
push
jecxz
mov
enter
cmp
rcrl
mov
sub
test
sbb
aam
xchg
inc
xchg
pop
adc
mov
add
jle
in
jb
mov
cwtl
nop
add
lahf
repnz
xchg
lahf
sub
xchg
lods
cwtl
ljmp
ret
cld
test
xchg
iret
mov
mov
lock
icebp
sbb
mov
lret
icebp
lds
call
dec
sub
out
cmp
xchg
es
pushf
aaa
dec
pop
add
mov
add
aam
add
jg
push
mov
clc
filds
mov
add
pop
hlt
fwait
push
add
pop
and
mov
add
jnp
xor
mov
push
in
fcmovne
dec
ljmp
fimull
jo
mov
xchg
add
xor
mov
add
mov
and
mov
add
test
leave
jg
hlt
imul
sub
clc
imul
mov
sub
add
addr16
rolb
mov
mov
out
mov
mov
dec
enter
push
add
push
add
sti
cmc
call
pop
in
xor
mov
nop
add
pop
inc
adc
jmp
xchg
mov
in
xchg
inc
add
aad
ss
movsl
arpl
add
lret
out
lods
adc
mov
mov
add
in
add
sub
shl
xor
mov
addb
pop
ds
inc
cmp
add
dec
scas
cli
push
imul
mov
jnp
xchg
iret
adc
mov
mov
mov
repz
inc
add
popa
xor
call
test
xor
mov
xlat
lea
mov
mov
mov
add
add
jo
mov
add
inc
jne
jnp
add
adc
into
sbb
push
mov
add
sbb
add
and
mov
repnz
addb
jo
mov
pop
repz
out
aad
movsb
aam
add
add
or
sbb
arpl
clc
test
shld
out
mov
xor
add
add
aas
lods
lret
sbb
jnp
lret
push
add
mov
cld
mov
jb
mov
add
sbb
jp
xor
mov
fldenv
and
ret
mov
xor
test
movsl
cmpl
and
movsb
cmp
dec
sub
add
mov
push
adc
daa
adc
mov
mov
rcll
sub
pop
pushf
mov
cmp
cld
jnp
mov
push
xchg
push
add
add
add
lret
out
in
dec
sti
daa
inc
or
cmc
inc
repz
mov
mov
lahf
dec
dec
iret
addb
dec
sbb
rolb
mov
mov
adc
dec
repnz
ss
push
xor
je
mov
addb
inc
lcall
sub
fdivl
or
pop
add
sub
fcomp
test
aaa
jle
push
inc
add
mov
mov
mov
cmpsl
push
add
jmp
cmpsb
stc
cltd
movsb
out
xchg
jg
cld
in
adc
mov
ret
jecxz
mov
mov
mov
or
mov
jo
mov
add
add
mov
mov
mov
add
repz
in
popa
jno
popa
scas
mov
loop
mov
inc
lcall
dec
lret
sbb
push
out
add
add
push
lcall
mov
popf
adc
cltd
popa
mov
pop
mov
mov
add
and
movsb
pop
repz
xchg
mov
mov
mov
sahf
cmp
outsb
mov
lea
mov
mov
inc
mov
sub
mov
and
mov
sub
inc
add
mov
sar
mov
js
add
divb
dec
mov
mov
sbb
fldcw
or
add
clc
mov
imull
xor
std
add
shl
jnp
mov
push
add
mov
nop
add
sub
push
add
cwtl
out
fmuls
test
mov
pop
scas
loopne
mov
testb
or
mov
clc
cltd
cmpsl
and
add
ftst
addb
aaa
jnp
das
mov
push
add
int
add
inc
mov
mov
clc
es
in
dec
aam
pop
ljmp
push
mov
xchg
add
mov
mov
addl
xchg
mov
addb
out
sti
sti
pushf
sub
push
add
loop
mov
add
mov
movsl
push
sub
sub
add
daa
sub
cs
and
mov
repnz
inc
jbe
sub
dec
in
mov
loop
mov
xorl
or
sub
aaa
pop
je
std
jmp
add
mov
enter
add
xor
or
pop
in
testl
mov
ja
adc
jno
dec
in
pop
cli
jne
sti
mov
mov
add
xor
mov
pop
sub
popa
mov
mov
mov
and
mov
add
mov
clc
movsb
cmpsl
xchg
and
adc
mov
clc
mov
sbb
adc
inc
repnz
sub
add
fsts
test
mov
dec
mov
insl
jnp
mov
cmpl
cmp
push
dec
mov
mov
or
add
mov
rolb
mov
pushf
imul
pop
aaa
shl
das
pushf
pushf
and
inc
lds
xor
add
mov
pop
jp
cmp
bound
mov
xor
in
adc
mov
lcall
lahf
or
icebp
jp
push
add
loopne
mov
jge
cmp
jo
mov
xchg
and
popf
jns
idivl
push
add
pop
ja
and
repz
mov
jnp
jmp
dec
rolb
mov
outsb
scas
pop
cmp
out
sti
xor
gs
stos
inc
call
mov
jnp
sub
jno
test
xchg
cltd
out
in
test
cmp
icebp
xor
and
add
xor
pushf
in
mov
mov
out
cs
or
add
xor
add
xlat
test
mov
arpl
add
lods
adc
mov
stc
adc
dec
push
outsl
mov
mov
add
pushf
pop
aad
xchg
mov
jne
int3
in
fcmovb
add
lods
add
mov
add
mov
lret
sar
xor
mov
mov
sbb
add
add
jb
mov
jae
jmp
add
int3
mov
or
mov
pushf
mov
add
dec
cmpsl
test
loope
ret
enter
add
pcmpeqw
push
or
dec
cmp
add
mov
or
xchg
push
push
xchg
nop
add
mov
add
sbb
addb
enter
cmpsb
push
inc
add
add
mov
fidivl
add
int
je
inc
daa
cs
xor
mov
jle
cwtl
icebp
jbe
or
test
popa
clc
test
testl
sahf
mov
mov
mov
add
outsl
add
and
fldcw
mov
adc
mov
xor
pop
jbe
pop
imul
dec
xor
mov
rolb
mov
add
stc
faddl
jle
xlat
mov
das
test
push
add
mov
lret
ja
mov
enter
add
mov
mov
pop
push
cmp
dec
or
loope
mov
push
repz
aas
pop
es
and
cwtl
or
popa
dec
jnp
push
add
mov
mov
mov
add
fstpt
xchg
mov
add
in
sub
lret
into
push
imul
gs
es
and
push
das
addb
cmp
add
mov
mov
mov
xchg
adc
mov
pop
fs
out
fsubrs
mov
mov
xor
mov
jp
jno
nop
add
push
push
lea
ret
pop
test
add
mov
aaa
jge
rolb
insb
mov
daa
insb
sub
mov
pop
cmp
add
std
mov
jle
xor
mov
movsl
pop
sbb
pusha
add
and
add
mov
neg
sub
or
xchg
pop
cmpsb
popa
mov
push
icebp
testb
jmp
mov
mov
lahf
pcmpgtb
ljmp
popf
push
add
arpl
shrl
add
dec
mov
test
mov
xchg
dec
lock
outsb
test
push
push
repz
pusha
add
dec
mov
push
add
sbb
in
xchg
add
mov
inc
add
inc
mov
clc
cld
lahf
push
mov
mov
mov
mov
int3
test
sahf
ss
inc
sahf
cld
out
xchg
push
push
ja
add
bound
mov
cmp
adc
enter
push
movb
enter
pushf
das
inc
add
and
or
mov
xchg
pop
jp
je
add
nop
add
stc
mov
sub
add
mov
dec
addr16
add
mov
dec
push
lcall
mov
mov
pop
jg
mov
cmpsl
repz
test
push
loop
mov
fisubl
adc
push
dec
xor
mov
out
push
pop
sub
stos
dec
icebp
test
lods
adc
rolb
mov
addb
cmpsl
cltd
add
mov
jne
sbb
sbb
movsb
fistpll
push
mov
mov
add
frstor
cmpsb
movsb
sub
dec
les
rolb
mov
imul
sub
out
add
fxch
mov
adc
mov
add
inc
std
out
mov
lods
mov
add
mov
leave
cmp
add
add
mov
sbb
enter
sub
jg
addb
ret
sub
pop
mov
pop
jl
ljmp
arpl
add
mov
add
sub
es
or
sysenter
fstp
fs
mov
jle
fdivl
les
mov
sub
mov
mov
push
sub
inc
inc
out
das
int3
pop
and
mov
mov
xor
add
xor
loop
mov
cmp
cld
popa
xor
sub
adc
mov
jo
mov
mov
mov
mov
mov
mov
jg
add
jge
xchg
xor
xor
jmp
mov
imul
out
orl
shll
insw
pop
lahf
xchg
xorl
mov
enter
xchg
outsb
jne
add
adc
mov
mov
mov
sti
mov
mov
and
les
ret
cli
out
aas
movsl
stos
cltd
shrl
enter
xchg
jmp
decb
xor
add
clc
pop
lods
dec
loope
add
loop
mov
mov
add
repz
mov
in
rolb
mov
sub
push
add
mov
popa
aaa
rolb
inc
add
loopne
mov
jmp
add
repz
mov
test
cltd
popf
mov
sub
ret
ficoms
mov
add
mov
add
int3
jo
mov
add
mov
fdivrs
cmp
enter
mov
mov
mov
push
lock
push
mov
add
add
pop
in
sub
or
aaa
inc
lret
mov
add
test
cmp
add
add
imul
jbe
loope
add
dec
adc
fildll
fidivl
add
fidivs
neg
sub
jecxz
jecxz
add
movsl
or
inc
loopne
mov
pop
out
cltd
insl
div
shll
testb
or
xchg
pop
outsb
cmp
dec
fisttpl
icebp
or
loop
mov
popf
rolb
loopne
mov
flds
sbb
daa
mov
pop
jae
jae
out
pop
mov
nop
add
in
clc
out
jle
aam
add
mov
add
inc
aad
iret
loope
inc
sub
adc
daa
sbb
aad
lods
mov
add
out
or
mov
pop
ljmp
lock
add
pop
je
jecxz
add
mov
lods
xchg
lds
in
std
sub
mov
add
loop
mov
jp
jle
fiaddl
sbb
mov
adc
or
add
mov
add
mov
sbb
adc
mov
out
out
add
data16
pop
or
mov
test
stos
pop
push
add
mov
std
rolb
and
repnz
inc
test
and
jnp
popa
ss
inc
fcmove
inc
push
adc
mov
lret
out
cli
aad
lahf
or
hlt
aaa
out
ss
imul
loopne
mov
add
lods
sbb
add
imul
jbe
ja
cwtl
ret
jnp
xor
mov
sti
mov
test
add
popa
and
push
add
mov
jle
lock
mov
sti
dec
out
xchg
shll
inc
push
arpl
mov
mov
xchg
cmpsl
xor
add
inc
repnz
mov
mov
mov
add
and
mov
xchg
lock
lahf
nop
add
bound
mov
mov
add
mov
mov
mov
scas
fdivrl
dec
fcoml
add
jmp
and
cmp
ja
addr16
addb
fdivs
ds
fdivrl
jle
jae
mov
jb
mov
cmp
mov
lahf
mov
sbb
sbb
sub
jle
add
add
add
rcrl
scas
jno
jne
or
xor
mov
adc
jge
sbb
out
and
dec
xor
mov
adc
insl
mov
mov
push
pop
negl
into
dec
lret
loope
inc
add
stc
mov
test
lcall
add
leave
rolb
mov
dec
outsl
cmpsb
adc
and
out
lods
popfw
and
mov
rolb
mov
cmpsb
aaa
add
data16
mov
sub
mov
add
mov
add
mov
jl
jae
mov
push
jns
or
mov
and
xor
rolb
mov
nop
add
adc
mov
inc
add
pop
aam
jo
mov
add
add
mov
cmp
add
xchg
add
sub
mov
mov
movups
add
dec
mov
ja
lret
imul
add
add
mov
nop
add
xchg
dec
dec
push
fsubl
mov
push
mov
inc
jno
add
xchg
cld
adc
mov
add
insl
cmp
xlat
fwait
or
add
mov
enter
mov
or
add
mov
clc
dec
rcll
mov
adc
mov
mov
mov
mov
test
jbe
int3
jle
jo
mov
mov
xchg
push
insb
xor
mov
push
adc
mov
add
sbb
add
clc
out
or
es
addb
faddl
out
mov
arpl
test
jbe
int
fwait
es
insl
mov
pop
gs
mov
xor
mov
lret
bound
mov
mov
pop
data16
add
lods
or
pop
fdivrs
loop
mov
test
gs
sub
adc
mov
nop
add
movsb
and
xchg
repnz
inc
add
mov
imul
pop
lcall
add
mov
jmp
fldcw
sub
rolb
scas
stc
lods
stc
popf
dec
gs
sbb
sbb
dec
or
in
dec
mov
jnp
add
and
mov
xor
ja
xchg
sbb
add
jbe
arpl
ret
cli
inc
add
xchg
rolb
push
xchg
in
cmpsl
jb
mov
or
and
enter
nop
add
mov
mov
dec
lret
cwtl
push
pop
in
inc
push
mov
repnz
cmpsb
sbb
sub
jae
xchg
ja
pop
rolb
mov
cmp
ljmp
and
mov
xchg
test
std
mov
adc
mov
xor
mov
dec
imul
fadd
subl
xor
mov
jne
mov
je
jp
rolb
mov
adc
mov
jae
pop
mov
add
int
add
xor
add
popf
movsl
mov
cmp
jbe
cmc
mov
add
push
fsubl
sub
add
mov
add
in
sbb
pop
nop
add
in
cmp
mov
jg
pop
es
xchg
lret
pop
xor
sub
ss
call
and
loopne
mov
mov
rolb
mov
add
add
add
lret
fdivl
aaa
outsl
and
ss
pop
mov
add
jnp
lret
scas
lahf
cltd
test
mov
cld
mov
loopne
mov
add
insl
popa
xchg
addb
ss
push
lahf
leave
xrelease
sub
ret
sbb
outsl
dec
add
stos
mov
ljmp
cmp
fadd
add
mov
add
add
popf
aaa
rolb
mov
loope
sahf
nop
add
pop
hlt
lret
jae
jo
mov
lock
js
add
sub
nop
add
add
sti
push
lds
decl
mov
mov
insb
jne
add
add
rolb
mov
mov
add
mov
mov
lods
push
dec
adc
sti
ja
push
mov
mov
add
clc
test
imul
lock
mov
add
stos
sub
adc
mov
sub
loope
jbe
mov
sbb
enter
xchg
fstpl
int3
shll
push
pop
into
and
jle
or
repz
add
fidivrl
pop
fiaddl
add
mov
xor
mov
mov
addb
adc
mov
add
mov
mov
mov
sbb
adc
pop
pop
fs
add
adc
mov
imul
imul
enter
pop
stos
mov
xchg
aas
jecxz
inc
add
movsb
fidivrs
dec
pop
mov
sbb
add
mov
xchg
xchg
pop
lods
mov
fistl
pop
pop
pop
lock
popf
in
lods
jnp
icebp
int3
fldcw
jmp
pop
dec
cmp
inc
dec
push
adc
sub
leave
imul
pop
cmp
mov
dec
cmp
mov
mov
pusha
add
add
add
mov
sub
mov
xchg
nop
add
mov
inc
add
movsl
insl
cmp
inc
cld
push
pop
pop
addb
push
mov
leave
stc
popa
imul
mov
xchg
mov
repnz
sbb
adc
call
mov
pop
sahf
insl
cli
stos
repnz
in
xor
mov
movsb
insl
lods
mov
add
in
lods
mov
mov
outsb
mov
add
pop
jno
jns
dec
or
pusha
add
scas
dec
rolb
fcmovbe
add
xchg
dec
cld
imul
test
add
mov
xchg
add
xchg
sbb
fsubrs
adc
inc
add
fmull
xor
and
add
mov
mov
adc
clc
or
add
add
negl
int
pop
fs
sahf
mov
ret
lret
jo
mov
push
pop
jge
add
adc
add
xor
cld
jle
add
add
or
dec
lods
push
iret
mov
icebp
push
add
add
mov
test
je
add
loope
pop
stos
test
fsub
add
sbb
mov
jo
mov
pop
ret
jle
or
ds
push
rolb
mov
add
inc
add
imul
add
mov
cli
mov
mov
adc
mov
icebp
pop
jle
or
lea
xchg
xor
mov
test
lahf
dec
test
xchg
or
jmp
cmc
xor
mov
dec
daa
push
xchg
or
jl
das
sahf
dec
xor
mov
add
sub
xchg
add
push
sbb
mov
mov
add
stc
cltd
movsb
out
mov
sahf
repnz
mov
mov
push
mov
jne
clc
loope
jb
mov
add
jl
add
ret
mov
add
ret
inc
add
or
leave
sbb
xor
cmpsl
mov
jge
dec
negb
pop
sbb
add
iret
in
cmc
push
negl
or
js
pop
rolb
sub
jp
add
sbb
aam
sbb
loop
mov
add
or
enter
push
int3
repz
sti
in
addb
jne
je
movsl
addr16
jo
mov
add
add
push
sbb
mov
scas
jmp
or
jnp
sbb
ds
add
mov
iret
jle
aas
arpl
adc
rolb
mov
adc
mov
and
xchg
fnsave
add
imul
in
icebp
adc
fcmovne
xchg
xor
mov
add
test
add
out
cltd
inc
dec
push
mov
mov
rolb
mov
addl
js
pop
xor
adc
mov
mov
mov
add
mov
movsb
fwait
lds
add
mov
cltd
daa
ffreep
push
pop
call
bound
mov
add
sub
fisttps
sbb
nop
add
pop
fsub
test
fimull
fstps
add
cmp
clc
sub
mov
outsb
out
adc
stos
nop
add
jbe
jl
adc
mov
jle
mov
gs
add
mov
add
cmpsb
cmp
push
inc
pop
sahf
push
mov
inc
lock
sbb
cmp
add
aas
or
push
lret
adc
sub
add
out
clc
in
and
rolb
mov
push
pop
rolb
mov
nop
add
aam
xor
sti
jbe
jle
jo
mov
jo
mov
or
add
jae
add
mov
add
aas
mov
mov
add
dec
and
mov
fcoml
mov
push
add
mov
jae
and
mov
jo
mov
lahf
jle
add
mov
mov
push
or
sbb
inc
add
imul
hlt
mov
fcompl
or
mov
add
mov
xchg
dec
in
pop
xor
mov
mov
xchg
sahf
and
mov
push
scas
testb
das
push
popa
repnz
ret
add
shr
imull
mov
adc
rorl
fwait
adc
mov
add
add
lcall
mov
mov
stc
adc
int3
lods
mov
out
xchg
imul
add
js
adc
mov
adc
mov
adc
leave
in
xchg
stos
fcompl
push
sbb
lods
add
jge
add
daa
mov
push
lods
loopne,pn
mov
add
mov
add
mov
pop
into
call
pusha
add
ret
sub
enter
mov
mov
mov
jo
mov
xchg
bound
mov
dec
lods
cmp
jmp
insl
jo
mov
ss
lods
jge
xchg
add
mov
cmc
sbb
lcall
mov
repz
out
xor
mov
add
add
mov
and
mov
jne
sub
jl
xor
mov
les
add
xchg
add
jo
mov
popf
fucomi
sub
and
and
mov
dec
push
push
jg
add
aad
jle
inc
pop
sbb
popf
pop
xchg
jg
loop
mov
mov
mov
jb
mov
add
push
imul
xchg
mov
pop
cld
push
sub
or
push
mov
mov
lods
clc
xchg
add
mov
jge
mulb
fisttpl
into
and
xchg
rolb
mov
out
adc
mov
pop
jp
push
cmpsl
push
adc
and
mov
or
mov
addb
aas
pushf
addr16
add
mov
addb
xchg
push
lcall
inc
orl
scas
jns
mov
sub
fdivs
mov
punpckhdq
jmp
lret
or
dec
inc
xlat
jo
mov
in
mov
add
mov
push
dec
lods
and
sbb
ficoms
std
and
adcl
lds
push
add
add
pop
mov
mov
inc
loopne
mov
push
add
add
insb
jl
xchg
rolb
mov
jnp
movsb
mov
pop
pop
rolb
mov
or
xchg
pop
aas
aaa
push
jbe
cltd
sbb
and
and
inc
push
add
push
add
push
mov
mov
mov
push
pop
lods
sbb
xor
push
addb
fsubs
in
add
add
cli
mov
add
lret
movsb
mov
out
dec
xchg
cmpsl
mov
add
mov
lock
sub
push
fisubrl
push
test
imul
or
dec
adc
adc
mov
addb
pop
push
movsb
ds
add
jmp
rolb
mov
and
or
pop
insl
nop
add
mov
pop
push
lock
fcoms
sub
jmp
jbe
adc
test
add
outsb
dec
popa
ret
addl
mov
jecxz
add
add
popf
dec
and
lea
aas
mov
sbb
xor
mov
fstpl
and
mov
pop
loopne
mov
add
icebp
in
add
push
lret
test
aas
jp
inc
add
enter
imul
sbb
ljmp
add
mov
sbb
xor
mov
ds
pop
icebp
push
loope
je
std
push
sub
jnp
shrl
in
cmp
pop
jmp
insl
add
mov
cmp
mov
mov
add
divb
add
mov
enter
and
sbb
dec
int
jl
mov
xchg
add
jecxz
ds
mov
mov
mov
sbb
and
inc
arpl
mov
push
stos
jl
add
div
dec
inc
add
pushf
push
addb
push
pop
xchg
hlt
jae
push
fxch
stos
inc
sbb
xor
mov
mov
stos
cmp
dec
call
inc
cmpl
out
inc
rolb
fdivrs
xchg
es
pop
or
out
addr16
fcomip
cmp
faddp
adc
mov
mov
aas
scas
push
push
lret
add
nop
add
add
add
scas
ja
mov
add
call
mov
mov
and
xchg
pushf
adc
mov
dec
add
ja
xor
pop
loop
mov
push
stc
jle
inc
xchg
xor
sbb
out
jmp
mov
pop
ds
mov
push
bound
mov
push
stos
lods
pop
daa
or
mov
mov
out
mov
xor
add
add
add
mov
cltd
xchg
add
mov
inc
add
jae
mov
mov
add
ljmp
dec
test
movsb
mov
mov
add
cwtl
sbb
xchg
and
inc
sti
mov
test
xchg
outsb
insb
inc
add
inc
movsb
jmp
mov
mov
mov
cmp
fidivs
dec
loope
mov
xchg
add
mov
mov
dec
inc
pop
mov
mov
add
mov
xlat
pushf
ret
mov
es
jecxz
mov
mov
hlt
jl
pop
mov
imul
adc
bound
mov
push
add
mulb
xchg
jo
mov
add
mov
ja
sbb
inc
add
xchg
add
in
out
mov
lock
orl
xchg
add
cmp
push
ljmp
jmp
leave
scas
stc
jae
sbb
popf
das
xor
mov
mov
mov
lretw
and
mov
add
inc
lods
pop
enter
movsb
mov
scas
inc
andl
in
mov
jge
stc
cmp
add
cmp
add
push
mov
mov
dec
mov
and
mov
pop
outsb
std
fwait
cmp
cmc
inc
fnsave
popf
jb
mov
aas
scas
rcll
lcall
add
adc
mov
pop
out
adc
mov
add
or
add
negb
or
repnz
stc
xor
je
add
pushf
das
xor
lods
mov
mov
mov
ret
mov
sub
dec
jmp
sbb
add
pop
mov
inc
add
mov
jae
or
push
in
dec
pop
pushf
in
imul
pop
movsb
outsl
sbb
or
add
and
mov
mov
dec
or
mov
bswap
insb
pop
push
lret
jmp
or
push
fcom
push
data16
popf
adc
out
into
mov
sub
cmp
pushf
push
cltd
decl
lahf
in
and
mov
sub
dec
dec
fcompl
dec
xor
mov
pop
int3
cmp
push
aam
add
add
addr16
jecxz
and
mov
add
sub
jp
ds
push
ja
add
add
jno
mov
mov
xrelease
iret
lret
mov
clc
mov
add
ret
imulb
rolb
mov
inc
add
shrl
xchg
push
testb
pop
add
inc
lods
rcrl
and
mov
outsl
mov
adc
mov
mov
mov
es
jae
int
add
add
add
mov
mov
add
mov
lock
stos
mov
ja
mov
scas
cmp
jl
add
arpl
xchg
xor
out
das
fdivp
add
jne
push
dec
das
dec
cmp
jnp
sub
sub
inc
mov
push
mov
cli
rolb
mov
push
jne
add
decl
in
icebp
inc
add
mov
lahf
lods
aad
fbld
xlat
cmpsl
sub
dec
fwait
or
add
add
les
test
add
mov
sti
mov
add
mov
clc
addb
mov
add
or
pop
adc
mov
in
lock
adc
xor
xchg
rolb
mov
or
lods
mov
sbbw
mov
test
jg
push
mov
fadds
mov
mov
jbe
out
test
and
add
mov
out
js
sti
push
xchg
and
test
mov
mov
add
repz
ss
mov
jae
mov
outsl
mov
cmp
lcall
jecxz
mov
fcomip
addb
sub
add
ds
and
add
push
add
mov
mov
lcall
nop
add
mov
add
daa
test
lock
mov
mov
lea
ss
add
rolb
mov
jb
mov
rolb
mov
pop
pop
pop
and
mov
add
cwtl
xchg
xchg
mov
cld
pushf
and
sbb
add
add
outsl
repz
lahf
jle
and
mov
addl
cmpsb
dec
and
xor
nop
add
mov
or
addb
or
js
add
movsl
sbb
mov
add
add
add
cwtl
mov
push
add
mov
mov
add
add
mov
mov
imul
lods
rolb
frstor
fwait
cmpsb
test
loope
test
out
lods
test
out
add
enter
jb
mov
mov
jg
sub
das
xchg
outsl
push
in
arpl
mov
jbe
je
and
mov
add
add
outsb
push
xor
out
in
daa
cmp
cmpsl
lock
xor
fstps
pop
add
add
inc
add
add
add
cmpsb
xchg
rolb
mov
add
mov
mov
dec
push
enter
imul
jb
mov
mov
cmc
sub
mov
sahf
lret
inc
popf
mov
lock
adc
out
cmp
inc
cwtl
pop
xor
mov
and
mov
lret
loop
mov
lahf
mov
pop
sbb
shll
mul
rolb
mov
sub
xor
add
mov
jle
mov
std
rolb
mov
sub
les
mov
pop
test
pop
and
add
rolb
mov
fldl
add
mov
lret
xchg
jnp
ficoml
mov
aad
mov
add
add
addb
add
sbb
in
push
rcll
cmc
enter
clc
roll
movsl
sub
sbb
xlat
mov
in
call
out
jnp
inc
pop
out
xor
stc
jno
lods
fcmovnb
imul
mov
push
fbld
outsl
adc
sub
add
pop
in
push
inc
jb
mov
cmpsb
xor
mov
icebp
adc
add
mov
add
mov
mov
add
loope
lods
and
mov
cmpsl
add
stos
dec
insl
mov
or
add
add
sbb
mov
scas
divb
sbb
add
cmp
add
addb
bound
mov
add
cltd
int3
jmp
shll
cwtl
pushf
xchg
and
inc
or
aas
pop
in
addb
xchg
rolb
icebp
and
push
add
mov
fmull
dec
enter
add
arpl
pop
enter
add
add
mov
cltd
cmc
lods
movsl
arpl
jp
push
ss
int3
neg
push
das
sbb
push
xchg
add
xchg
push
add
stos
sbb
add
jnp
int3
cmp
icebp
sbb
jae
testl
pop
insb
pop
inc
jne
rolb
mov
das
add
mov
add
mov
jl
pop
aam
hlt
aaa
adc
jmp
jns
jmp
or
add
pop
add
mov
cmp
inc
push
add
push
add
out
and
mov
mov
mov
pop
lcall
lea
and
mov
sub
or
mov
fs
inc
rolb
dec
and
stos
pop
das
push
add
das
call
mov
test
xor
mov
xchg
sbb
filds
add
mov
add
insl
push
jbe
inc
scas
insl
ss
xor
mov
mov
adc
rolb
mov
insl
cmpsb
decl
jns
add
cld
inc
mov
cmpsb
sub
push
add
jmp
mov
mov
popf
test
mov
addr16
cmp
mov
int3
or
ja
jle
pop
addr16
push
xchg
add
sub
mov
add
add
pop
lret
bound
mov
sub
add
add
fistpl
mov
mov
movlps
mov
pop
or
sbb
mov
fcompl
lea
dec
ret
cmpsb
mov
adc
mov
mov
sub
xchg
xor
mov
jbe
mov
inc
dec
sti
mov
mov
insl
xchg
aad
cmc
addb
sub
add
mov
push
xor
mov
mov
add
cltd
call
pop
js
fs
pop
push
add
rolb
fwait
aam
mov
movsl
mov
xor
pop
movsb
mov
mov
jp
out
bound
mov
push
popf
addb
mov
mov
icebp
cld
in
push
or
mov
sub
lret
shll
and
mov
fsubl
sbb
add
mov
jne
cli
icebp
xor
inc
jno
mov
mov
push
add
and
mov
xchg
test
add
js
add
jecxz
sahf
repnz
adc
cmp
jp
mov
pop
daa
jns
jp
cmpsl
lahf
jmp
jmp
sbb
test
jp
ficompl
mov
in
or
mov
and
cwtl
xlat
push
lods
pop
adc
mov
cmp
add
xor
stos
pop
or
add
mov
pusha
add
mov
sti
frstor
rcll
cmc
pop
ds
dec
lods
and
pop
aaa
fnsave
add
arpl
imulb
mov
orl
add
pushf
movsb
test
mov
add
rolb
mov
pop
les
add
sarl
xor
xor
mov
adc
mov
mov
xchg
fmul
mov
push
push
aas
js
js
mov
lcall
fildl
lret
add
mov
push
xchg
enter
jmp
faddp
fildl
loope
arpl
sub
push
fdivs
sub
mov
shll
mov
add
push
in
js
add
jmp
insb
cmp
jp
mov
push
sbb
out
xchg
fnstcw
push
addr16
sub
lret
xor
mov
lock
and
test
push
imul
and
mull
mov
sahf
mov
and
aaa
xchg
add
jne
push
add
mov
icebp
mov
je
add
movsb
popa
sahf
lcall
add
xor
mov
idiv
jmp
jle
add
test
dec
xchg
sbb
xchg
and
sub
mov
ja
add
cwtl
mov
add
jmp
ds
push
xchg
addb
adc
mov
mov
add
mov
add
pusha
add
outsb
push
jo
mov
jbe
inc
popa
mov
push
test
sahf
aaa
and
add
xor
mov
add
pop
xor
inc
decl
stos
xor
mov
push
and
mov
or
and
xor
mov
add
add
xchg
fstp
sbb
outsl
aam
jbe
add
push
lret
ds
leave
mov
mov
enter
sahf
xor
sti
mov
add
mov
addb
mov
jns
stos
std
data16
add
add
mov
cmp
mov
leave
mov
add
add
mov
jg
pop
test
lods
xchg
into
pop
lods
int3
mov
dec
out
jmp
lcall
mov
hlt
or
lock
stos
jg
push
and
pop
sbb
aam
jns
and
add
push
mov
add
loope
pop
movsbl
inc
cmpsl
rolb
mov
add
dec
pop
push
add
cmovne
ja
cmp
pop
inc
or
xchg
mov
mov
xor
sbb
adc
mov
ljmp
or
add
mov
mov
add
daa
lock
insl
lods
movsb
aas
out
mov
rolb
jl
lods
inc
add
movsb
sbb
add
mov
fmulp
mov
xchg
add
int
sahf
ljmp
add
add
mov
mov
dec
push
in
mov
and
mov
cmc
mov
mov
sub
outsb
push
mov
mov
mov
add
mov
fwait
aas
push
out
sbb
in
sub
cmp
cmp
push
jae
mov
data16
stos
ret
arpl
inc
add
jb
mov
push
clc
pop
shll
aas
fstp
cmpsb
xchg
test
hlt
in
sub
mov
add
mov
jb
mov
bound
mov
add
push
xchg
or
outsb
ljmp
in
jno
add
pushf
je
mov
ret
in
add
ja
adc
lret
int
dec
fisubl
pop
sub
inc
cli
sbb
pop
adc
mov
int
jl
pop
aam
ficoml
push
push
mov
sbb
pop
cmp
into
xor
mov
add
fidivs
cmc
scas
and
mov
stc
out
mov
xor
mov
mov
test
fisubs
jecxz
and
mov
je
cmpsl
mov
mov
in
push
add
nop
add
add
or
mov
fsubrl
sarl
dec
cmp
mov
pop
mov
xchg
inc
rolb
mov
or
mov
mov
or
mov
add
pop
not
cmp
outsl
push
mov
cmp
mov
jo
mov
dec
jmp
outsb
insl
cmp
push
shll
dec
neg
mov
iret
jmp
mov
push
jbe
sahf
xchg
adc
jne
jge
cld
iret
leave
iret
dec
inc
out
mov
lret
mov
stos
push
add
in
or
gs
fcomip
add
cmp
decl
in
pop
fmuls
mov
dec
das
cmp
mov
inc
push
dec
jno
rolb
jno
dec
adc
fsts
ljmp
cmp
mov
int
addb
scas
insb
insb
mov
cmp
sahf
adc
mov
mov
mov
imul
rcrl
add
inc
stos
pop
cs
xchg
adc
ficoms
out
add
add
mov
add
add
xchg
addb
mov
rolb
mov
add
fmul
sub
lods
xlat
and
push
cmc
pop
inc
fsubl
hlt
stos
arpl
cmp
mov
movsl
mov
xor
add
add
mov
add
add
outsb
out
sbb
test
int
mov
leave
stos
sbbl
inc
inc
or
insl
or
filds
mov
imul
mov
scas
mov
jl
mov
in
sub
in
sarl
add
cwtl
out
in
mov
add
mov
sarl
lret
mov
jo
mov
add
in
dec
and
fmull
add
test
mov
add
sti
sar
pop
fnstenv
dec
mov
mov
jo
mov
sbb
push
add
inc
rolb
or
sti
enter
push
jbe
and
mov
leave
lods
cmp
insb
scas
dec
sti
jecxz
mov
add
ret
dec
enter
mov
mov
push
jae
lds
xchg
add
mov
cwtl
pop
inc
sarl
js
ja
mov
lea
lcall
jle
add
jecxz
add
mov
add
out
les
test
pop
popf
rolb
mov
add
mov
adc
xchg
call
dec
xor
xor
add
out
add
add
add
mov
je
add
add
pop
popf
push
add
lods
bound
mov
push
int
rep
mov
mov
mov
cmpsl
jne
sub
cmp
mov
shll
adc
jg
ficomps
and
mov
adc
mov
push
pop
mov
pushf
mov
mov
int
test
xchg
add
sub
inc
add
insl
jecxz
add
in
mov
jp
dec
stc
mov
push
add
fcoml
add
add
es
lahf
or
add
add
popa
mov
icebp
js
add
add
mov
add
inc
add
push
add
adc
jge
or
xchg
add
loopne
mov
mov
and
push
test
mov
ret
in
icebp
mov
enter
popa
mov
add
mov
inc
xor
mov
pop
inc
mov
mov
push
add
mov
sub
mov
add
pushf
mov
stos
add
mov
pusha
add
cs
push
add
fsubs
push
call
mov
dec
pop
jbe
rolb
mov
pop
and
rolb
mov
and
mov
mov
mov
mov
mov
xchg
aad
pop
jae
mov
push
repnz
mov
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
addb
add
lcall
nop
cld
jae
add
add
add
nop
add
idiv
pop
clc
repnz
nop
cld
jae
xor
and
mov
bound
mov
and
mov
mov
push
mov
xchg
ret
andl
push
test
and
aas
add
pop
push
in
sub
dec
shrl
push
mov
xchg
ret
sub
add
ret
jmp
inc
clc
repnz
nop
cld
jae
addb
add
mov
clc
repnz
nop
cld
jae
inc
lret
jmp
add
mov
add
add
add
add
clc
repnz
nop
cld
jae
add
add
andb
repnz
nop
cld
jae
mov
adc
pop
jno
not
add
xor
add
in
nop
leave
jmp
cmp
add
and
add
push
mov
nop
leave
jmp
add
add
push
cmp
add
add
cld
jae
add
into
add
clc
repnz
nop
cld
jae
ffree
add
lret
push
mov
nop
leave
jmp
add
jns
xor
xor
xchg
push
clc
repnz
nop
cld
jae
mov
incl
pop
cli
add
testb
cmp
ret
add
cwtl
jno
add
int3
xor
clc
repnz
nop
cld
jae
pop
add
out
iret
inc
xchg
cmp
push
mov
nop
leave
jmp
icebp
fisttpll
inc
and
enter
add
add
add
add
add
add
into
lods
push
mov
xchg
ret
sbbl
add
add
lods
clc
repnz
nop
cld
jae
mov
add
add
out
add
mov
nop
leave
jmp
add
jg
add
in
mov
clc
repnz
nop
cld
jae
add
daa
pop
cmp
mov
xchg
ret
jo
add
add
and
nop
nop
cld
jae
inc
add
out
jmp
fwait
push
mov
popf
or
add
fcmove
xchg
inc
outsl
add
add
in
add
call
clc
repnz
nop
cld
jae
mov
cld
mov
push
mov
nop
leave
jmp
add
xchg
add
popl
sti
clc
repnz
nop
cld
jae
ds
sub
sub
das
call
clc
repnz
nop
cld
jae
pop
incl
dec
sbb
clc
repnz
nop
cld
jae
add
add
pop
jae
repnz
nop
cld
jae
icebp
add
ret
mov
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
mov
add
add
inc
add
sub
lret
clc
repnz
nop
cld
jae
add
adc
cmp
add
sar
nop
nop
cld
jae
out
iret
add
popa
add
mov
xchg
ret
out
xor
add
add
mov
add
push
mov
nop
leave
jmp
and
iret
fadds
enter
nop
leave
jmp
cmp
out
mov
mov
nop
leave
jmp
add
out
jno
add
pop
clc
repnz
nop
cld
jae
add
add
iret
jo
fidivl
mov
push
mov
xchg
ret
add
fs
add
or
mov
nop
leave
jmp
add
mov
add
addb
push
clc
repnz
nop
cld
jae
cli
add
fcoms
repnz
nop
cld
jae
add
adc
add
cmpsl
cmp
rcll
roll
xchg
ret
add
icebp
cmp
add
cmp
repnz
nop
cld
jae
jns
add
jg
add
mov
jmp
add
add
xchg
add
jne
clc
repnz
nop
cld
jae
jmp
add
push
mov
xchg
ret
cmp
icebp
add
mov
clc
repnz
nop
cld
jae
ds
add
add
aaa
mov
jge
xor
add
push
mov
nop
leave
jmp
sub
andb
je
clc
repnz
nop
cld
jae
add
jge
mov
clc
repnz
nop
cld
jae
sub
mov
add
in
pop
cwtl
add
pop
rolb
xchg
dec
sub
fst
sbb
nop
nop
cld
jae
xchg
sbb
add
sub
iret
or
cld
jae
fiaddl
mov
clc
repnz
nop
cld
jae
add
add
xchg
xor
mov
je
clc
repnz
nop
cld
jae
iret
add
push
mov
xchg
ret
add
add
imul
clc
repnz
nop
cld
jae
add
icebp
add
push
push
mov
nop
leave
jmp
add
add
shll
add
or
clc
repnz
nop
cld
jae
add
sub
repnz
nop
cld
jae
add
iret
ret
icebp
decl
test
nop
nop
cld
jae
add
add
mov
nop
cld
jae
fs
or
cmp
test
nop
nop
cld
jae
mov
jmp
mov
nop
cld
jae
add
cli
add
arpl
ret
pop
mov
mov
and
clc
repnz
nop
cld
jae
xchg
icebp
add
add
cmp
add
add
in
out
mov
jns
xor
jns
fstpl
repnz
nop
cld
jae
add
or
cwtl
xchg
mov
mov
clc
repnz
nop
cld
jae
jo
add
aas
add
push
mov
xchg
ret
add
add
icebp
icebp
add
or
mov
xchg
ret
add
cwtl
addb
fcoms
inc
add
jge
adc
add
mov
repz
repnz
nop
cld
jae
ds
fs
pop
add
push
mov
add
add
add
add
push
add
or
mov
nop
leave
jmp
pop
mov
inc
add
clc
repnz
nop
cld
jae
addb
add
sub
cmp
push
mov
nop
leave
jmp
add
fiaddl
inc
mov
jge
clc
repnz
nop
cld
jae
fiaddl
sub
cmp
jno
les
push
mov
nop
leave
jmp
add
out
fiaddl
repz
push
xor
push
mov
xchg
ret
add
add
cli
add
jno
add
clc
repnz
nop
cld
jae
sub
icebp
add
add
je
inc
add
jmp
add
jge
jns
add
in
nop
leave
jmp
add
fildl
nop
nop
cld
jae
addr16
add
xor
add
add
mov
xchg
ret
adcl
jns
stos
clc
repnz
nop
cld
jae
cmp
add
add
add
push
add
movsb
jg
or
push
mov
nop
leave
jmp
add
jns
out
adc
mov
push
mov
nop
leave
jmp
and
cmp
add
enter
nop
nop
cld
jae
add
sub
mov
mov
lock
or
nop
nop
cld
jae
add
push
scas
lea
push
mov
nop
leave
jmp
push
mov
add
je
clc
repnz
nop
cld
jae
mov
rolb
clc
repnz
nop
cld
jae
add
mov
nop
leave
jmp
add
add
stos
inc
add
in
movzwl
clc
repnz
nop
cld
jae
mov
cmp
add
repnz
nop
cld
jae
jns
add
push
mov
nop
leave
jmp
add
cwtl
add
icebp
inc
addb
call
in
nop
leave
jmp
inc
icebp
add
pop
cwtl
jo
jge
jmp
jp
push
mov
nop
leave
jmp
lcall
add
in
push
add
sub
add
add
add
scas
mov
clc
repnz
nop
cld
jae
add
fimull
add
clc
repnz
nop
cld
jae
iret
add
add
push
push
mov
xchg
ret
add
cmp
add
call
mov
xchg
ret
out
and
add
mov
mov
pusha
add
mov
clc
repnz
nop
cld
jae
add
jge
add
push
in
ret
push
mov
nop
leave
jmp
xchg
add
cmp
add
adc
push
mov
nop
leave
jmp
and
sub
jp
add
mov
nop
leave
jmp
daa
add
mov
xchg
mov
nop
leave
jmp
jge
add
add
add
push
mov
nop
leave
jmp
mov
add
cmp
or
add
mov
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
ret
daa
cwtl
out
daa
mov
add
repnz
nop
cld
jae
add
icebp
add
push
clc
repnz
nop
cld
jae
out
and
mov
nop
cld
jae
mov
icebp
jg
fisttpl
test
push
add
clc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
add
mov
add
dec
push
push
mov
xchg
ret
jns
xor
ret
add
lret
add
xor
cmp
ret
pop
icebp
xchg
ret
and
mov
lahf
push
clc
repnz
nop
cld
jae
add
sub
add
dec
pop
clc
repnz
nop
cld
jae
mov
or
add
jmp
mov
mov
push
mov
nop
leave
jmp
or
mov
nop
add
cld
add
add
lods
add
popa
jae
xchg
clc
repnz
nop
cld
jae
add
cwtl
jg
add
add
clc
repnz
nop
cld
jae
add
add
dec
xchg
mov
add
clc
repnz
nop
cld
jae
add
add
or
je
clc
repnz
nop
cld
jae
add
and
call
clc
repnz
nop
cld
jae
add
add
les
nop
leave
jmp
dec
mov
add
add
les
mov
xchg
ret
add
add
push
jnp
xor
mov
nop
leave
jmp
add
jge,pt
neg
test
push
mov
nop
leave
jmp
add
addb
add
fidivrl
mov
add
add
mov
and
add
add
ss
nop
nop
cld
jae
out
xor
ret
xchg
and
mov
push
push
mov
nop
leave
jmp
add
in
mov
add
insb
pushl
clc
repnz
nop
cld
jae
jg
jge
arpl
jle
fwait
adc
add
repnz
nop
cld
jae
add
jg
pop
testl
push
mov
nop
leave
jmp
add
test
sti
clc
repnz
nop
cld
jae
add
arpl
dec
add
repnz
nop
cld
jae
xchg
add
iret
sbb
pop
jbe
push
clc
repnz
nop
cld
jae
sbb
inc
add
icebp
and
mov
nop
nop
cld
jae
add
icebp
add
add
dec
sub
push
fiadds
xchg
ret
add
add
addl
push
push
mov
xchg
ret
and
add
mov
cmp
movb
shl
inc
add
add
imul
add
repnz
nop
cld
jae
pop
ret
test
clc
repnz
nop
cld
jae
add
add
inc
sub
div
push
mov
nop
leave
jmp
iret
add
pop
add
inc
inc
std
jmp
add
addl
add
add
add
loopne
mov
add
popa
add
mov
xchg
ret
add
arpl
add
cmpsl
repnz
in
nop
leave
jmp
fiaddl
add
add
add
add
mov
push
mov
nop
leave
jmp
icebp
frstor
jo
pop
ret
clc
repnz
nop
cld
jae
add
add
add
add
add
add
adc
add
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
stos
xchg
add
out
call
clc
repnz
nop
cld
jae
add
mov
ret
clc
repnz
nop
cld
jae
sub
add
in
add
or
mov
aad
add
add
add
inc
add
lcall
repnz
nop
cld
jae
dec
add
sbb
movsb
js
leave
push
mov
nop
leave
jmp
out
stos
add
adc
add
rolb
xchg
ret
add
in
cli
add
add
add
repnz
nop
cld
jae
add
add
data16
mov
add
in
nop
leave
jmp
fimull
sub
repnz
nop
cld
jae
sub
out
pop
cwtl
push
adc
jmp
add
jns
add
add
pop
add
and
inc
lea
clc
repnz
nop
cld
jae
lcall
mov
xchg
ret
add
add
sub
add
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
add
add
cmpl
aad
add
push
add
incl
jo
add
or
add
in
nop
leave
jmp
add
add
test
push
mov
xchg
ret
out
jo
icebp
add
clc
pop
push
mov
nop
leave
jmp
out
add
and
cld
push
mov
lret
or
jmp
adc
add
add
add
in
nop
leave
jmp
add
add
jmp
lock
mov
push
mov
xchg
ret
lcall
addl
xor
mov
add
clc
repnz
nop
cld
jae
pop
add
fs
add
add
inc
clc
repnz
nop
cld
jae
pop
add
out
add
mov
clc
repnz
nop
cld
jae
out
add
add
push
cmc
inc
jl
loop
mov
nop
leave
jmp
jmp
jge
add
add
dec
add
clc
repnz
nop
cld
jae
add
cmp
and
clc
repnz
nop
cld
jae
add
jp
mov
xor
add
push
mov
nop
leave
jmp
icebp
add
insl
push
clc
repnz
nop
cld
jae
add
add
and
ss
clc
repnz
nop
cld
jae
add
cmpsl
out
movl
jmp
mov
add
add
add
mov
clc
repnz
nop
cld
jae
mov
add
ret
clc
repnz
nop
cld
jae
add
add
cwtl
jo
aas
pop
clc
repnz
nop
cld
jae
add
jo
andl
stos
jae
push
in
rep
clc
repnz
nop
cld
jae
mov
jp
or
mov
xchg
ret
add
add
and
nop
nop
cld
jae
cwtl
and
add
and
push
mov
xchg
ret
jo
xor
andb
add
push
mov
xchg
ret
and
add
fiaddl
testb
sbb
add
repnz
nop
cld
jae
add
cld
dec
push
mov
xchg
ret
jmp
and
out
gs
push
mov
nop
leave
jmp
add
add
add
mov
nop
nop
cld
jae
add
dec
push
mov
xchg
ret
sub
iret
sub
push
push
mov
xchg
ret
icebp
add
add
mov
push
mov
nop
leave
jmp
out
jo
and
int3
mov
push
mov
nop
leave
jmp
mov
out
add
add
add
decl
fs
add
add
nop
nop
cld
jae
add
mov
xor
mov
dec
push
clc
repnz
nop
cld
jae
add
add
lcall
nop
nop
cld
jae
add
add
add
cmpsl
out
push
push
mov
xchg
ret
ret
jge
add
adc
jmp
in
nop
leave
jmp
add
add
add
repnz
nop
cld
jae
and
pop
add
xor
add
adc
repnz
nop
cld
jae
in
add
and
clc
repnz
nop
cld
jae
add
cwtl
imul
clc
repnz
nop
cld
jae
pop
jo
add
mov
xor
push
mov
push
add
add
ljmp
cmp
clc
repnz
nop
cld
jae
xchg
mov
cmp
push
clc
repnz
nop
cld
jae
add
cmp
adc
mov
repnz
nop
cld
jae
add
add
jns
ss
repnz
nop
cld
jae
jo
add
cmp
cmp
jne
push
mov
nop
leave
jmp
add
add
mov
in
nop
leave
jmp
cli
add
add
xor
cmp
nop
nop
cld
jae
add
add
ret
clc
push
mov
xchg
ret
add
add
add
add
repnz
nop
cld
jae
fldl
mov
jge
call
clc
repnz
nop
cld
jae
add
ljmp
clc
repnz
nop
cld
jae
cmp
add
add
pusha
add
sbb
ljmp
dec
add
fnstsw
mov
add
add
pop
clc
repnz
nop
cld
jae
iret
cmp
cmp
jae
add
clc
repnz
nop
cld
jae
or
arpl
add
push
xor
mov
and
mov
nop
nop
cld
jae
xchg
mov
in
add
mov
push
mov
nop
leave
jmp
icebp
xor
stos
out
mov
repnz
nop
cld
jae
mov
incl
xor
add
sbb
repnz
nop
cld
jae
add
add
sub
fstl
mov
xchg
ret
sub
add
add
add
push
mov
nop
leave
jmp
sub
add
ret
and
add
js
mov
push
mov
nop
leave
jmp
add
add
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
add
jp
xor
andl
nop
cld
jae
add
stc
push
clc
repnz
nop
cld
jae
add
cmp
add
mov
mov
add
clc
repnz
nop
cld
jae
cwtl
mov
add
sldt
and
add
add
push
add
add
dec
mov
clc
repnz
nop
cld
jae
xor
add
mov
adc
nop
nop
cld
jae
add
add
add
ficoml
add
repnz
nop
cld
jae
add
mov
sub
repnz
nop
cld
jae
add
xchg
arpl
add
xchg
push
test
nop
cld
jae
add
add
cli
xchg
aam
call
clc
repnz
nop
cld
jae
out
iret
fiaddl
mov
mov
mov
push
mov
xchg
ret
add
add
add
add
jno
add
mov
add
repnz
nop
cld
jae
xor
add
lahf
shr
clc
repnz
nop
cld
jae
add
stos
and
add
nop
cld
jae
mov
fs
mov
mov
nop
leave
jmp
jmp
iret
sub
movsb
jg
mov
add
pop
filds
xchg
mov
add
fadds
mov
push
mov
nop
leave
jmp
jno
es
mov
nop
leave
jmp
add
add
add
je
clc
repnz
nop
cld
jae
add
fs
cld
jae
jge
add
rep
push
mov
xchg
ret
add
iret
add
add
add
repnz
nop
cld
jae
add
jp
mov
adc
mov
xchg
ret
add
add
clc
repnz
nop
cld
jae
add
jg
sub
mov
xchg
ret
dec
out
add
add
add
movsw
js
add
add
clc
repnz
nop
cld
jae
mov
out
sbb
clc
repnz
nop
cld
jae
iret
jno
add
nop
nop
cld
jae
icebp
add
in
icebp
sbb
sahf
add
push
mov
xchg
ret
icebp
add
push
imul
leave
jmp
add
pushl
inc
add
adc
repnz
nop
cld
jae
icebp
mov
add
cmp
mov
nop
leave
jmp
cli
cmp
add
add
jns
mov
clc
repnz
nop
cld
jae
add
pop
inc
add
pop
pop
push
mov
xchg
ret
icebp
add
jmp
pop
add
clc
repnz
nop
cld
jae
add
ds
add
push
mov
xchg
ret
add
dec
mov
push
mov
nop
leave
jmp
add
jge
and
push
mov
xchg
ret
add
sub
add
popl
push
mov
nop
leave
jmp
jo
add
xchg
clc
repnz
nop
cld
jae
add
daa
add
icebp
clc
repnz
nop
cld
jae
add
iret
xorl
inc
icebp
inc
pop
mov
push
mov
xchg
ret
lcall
and
nop
nop
cld
jae
add
add
or
clc
repnz
nop
cld
jae
jg
push
mov
adc
cld
jae
frstor
add
mov
xchg
ret
add
add
sub
cli
cmp
loop
mov
inc
clc
repnz
nop
cld
jae
cli
add
jg
add
add
call
add
daa
add
xchg
add
and
dec
pushl
clc
repnz
nop
cld
jae
incl
add
repz
inc
loopne
mov
nop
leave
jmp
add
sub
add
add
xchg
test
rolb
mov
nop
nop
cld
jae
add
mov
mov
repnz
nop
cld
jae
sub
jge
jmp
add
and
repnz
nop
cld
jae
lcall
loope
enter
clc
repnz
nop
cld
jae
mov
add
mov
iret
push
push
mov
xchg
ret
add
add
sub
inc
add
add
mov
test
add
clc
repnz
nop
cld
jae
add
add
add
out
call
in
nop
leave
jmp
cli
add
out
pop
push
mov
nop
leave
jmp
add
add
add
aad
and
push
mov
xchg
ret
fidivrl
sub
out
add
pushf
cmpw
push
mov
nop
leave
jmp
add
out
jnp
push
mov
nop
leave
jmp
xchg
add
out
and
push
clc
repnz
nop
cld
jae
inc
add
add
push
add
mov
and
clc
repnz
nop
cld
jae
add
shrl
addr16
and
add
add
sub
jns
movzwl
clc
repnz
nop
cld
jae
add
add
fnsave
sar
nop
nop
cld
jae
add
cmp
out
add
push
mov
nop
leave
jmp
arpl
idivl
subl
push
mov
xchg
ret
jmp
out
adcl
hlt
adc
mov
outsb
je
push
mov
nop
leave
jmp
add
pop
clc
repnz
nop
cld
jae
jno
add
push
push
mov
mov
add
pop
in
inc
add
addr16
lcall
push
clc
repnz
nop
cld
jae
add
pop
add
add
adcb
nop
leave
jmp
lcall
pushl
push
mov
nop
leave
jmp
incl
sub
add
rolb
mov
movsb
push
mov
xchg
ret
out
addr16
jns
in
jmp
mov
clc
repnz
nop
cld
jae
add
jl
add
clc
repnz
nop
cld
jae
add
add
mov
mov
nop
leave
jmp
push
add
ljmp
add
jo
mov
adc
clc
repnz
nop
cld
jae
add
add
out
mov
clc
repnz
nop
cld
jae
add
mov
lret
pop
push
mov
xchg
ret
fiaddl
add
add
mov
clc
repnz
nop
cld
jae
add
add
jge
mov
mov
add
repnz
nop
cld
jae
icebp
add
add
add
clc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
push
xchg
add
out
movsl
lcall
add
iret
out
add
add
jmp
cld
push
mov
nop
leave
jmp
add
add
mov
add
add
clc
repnz
nop
cld
jae
icebp
add
xor
add
clc
repnz
nop
cld
jae
sub
sarb
nop
cld
jae
add
mov
pop
clc
repnz
nop
cld
jae
add
or
arpl
cli
add
mov
push
mov
xchg
ret
out
jge
fiaddl
mov
js
dec
cmp
repnz
nop
cld
jae
add
lea
clc
repnz
nop
cld
jae
and
fs
inc
xorl
push
pop
mov
push
mov
xchg
ret
cwtl
add
xor
mov
xchg
ret
mov
subb
or
repnz
nop
cld
jae
jno
icebp
add
loope
pushl
clc
repnz
nop
cld
jae
add
mov
add
aam
add
adc
in
nop
leave
jmp
adc
and
pushf
mov
clc
repnz
nop
cld
jae
stos
dec
enter
add
push
mov
nop
leave
jmp
add
mov
add
xor
repnz
nop
cld
jae
add
jp
adc
sahf
push
push
mov
xchg
ret
add
inc
add
add
jg
push
clc
repnz
nop
cld
jae
add
stos
sti
mov
push
mov
xchg
ret
sbb
out
fiaddl
add
dec
lea
push
mov
xchg
ret
xor
out
cmp
jp
jbe
clc
repnz
nop
cld
jae
mov
jecxz
add
nop
nop
cld
jae
add
jno
add
xor
clc
repnz
nop
cld
jae
add
add
add
xchg
repnz
nop
cld
jae
icebp
cli
fstp
jge
outsb
jmp
clc
repnz
nop
cld
jae
xor
add
add
mov
nop
leave
jmp
mov
add
loope
sub
int3
clc
repnz
nop
cld
jae
add
add
daa
pop
and
mov
push
mov
xchg
ret
add
sub
fldl
adc
pop
push
mov
nop
leave
jmp
sbb
add
cmp
jmp
and
icebp
add
add
xchg
fwait
je
clc
repnz
nop
cld
jae
add
add
mov
mov
lcall
nop
cld
jae
cmp
in
add
ds
repnz
nop
cld
jae
cmp
and
mov
clc
repnz
nop
cld
jae
add
in
jle
adc
repnz
nop
cld
jae
jge
add
add
jo
shr
clc
repnz
nop
cld
jae
out
icebp
jo
sub
adc
mov
xchg
ret
add
add
mov
daa
mov
nop
nop
cld
jae
ret
mov
and
push
mov
nop
leave
jmp
add
pop
mov
mov
pop
push
mov
xchg
ret
cwtl
add
fimull
add
jns
xlat
popa
pop
ja
pusha
clc
repnz
nop
cld
jae
jge
add
add
inc
dec
inc
push
mov
xchg
ret
sbb
xchg
sub
sub
test
loope
clc
repnz
nop
cld
jae
jp
add
jmp
jg
clc
repnz
nop
cld
jae
add
add
fidivrl
nop
nop
cld
jae
fidivrl
add
add
addr16
mov
xchg
sbb
adc
xchg
add
cltd
mov
add
mov
mov
add
jb
push
mov
nop
leave
jmp
add
sub
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
iret
jp
add
je
mov
clc
repnz
nop
cld
jae
add
cmp
mov
nop
leave
jmp
jno
add
fiaddl
push
add
add
push
mov
nop
leave
jmp
stos
incl
add
add
mov
nop
leave
jmp
cmp
daa
add
fidivl
out
push
mov
xor
add
sbb
dec
add
clc
repnz
nop
cld
jae
add
add
jge
in
add
add
add
repnz
nop
cld
jae
mov
addb
arpl
in
nop
leave
jmp
mov
add
inc
clc
repnz
nop
cld
jae
add
add
add
xchg
and
push
mov
xchg
ret
sub
add
add
pop
pop
add
push
mov
xchg
ret
xchg
add
mov
and
hlt
mov
add
clc
repnz
nop
cld
jae
add
mov
mov
xchg
ret
add
add
inc
push
adc
clc
repnz
nop
cld
jae
pop
add
lcall
add
add
add
leave
jb
push
mov
nop
leave
jmp
out
out
add
dec
mov
push
mov
xchg
ret
add
add
jmp
outsb
mov
clc
repnz
nop
cld
jae
add
add
add
in
push
mov
nop
leave
jmp
add
add
fiaddl
mov
jle
clc
repnz
nop
cld
jae
add
inc
mov
push
imul
clc
repnz
nop
cld
jae
and
icebp
add
clc
repnz
nop
cld
jae
push
sbb
sbb
sub
cli
test
push
mov
nop
leave
jmp
add
mov
jo
xor
clc
repnz
nop
cld
jae
fldl
orb
jmp
nop
cld
jae
iret
ret
jns
call
repnz
nop
cld
jae
in
add
add
icebp
mov
repnz
nop
cld
jae
cmp
decl
add
repnz
nop
cld
jae
add
sbb
repnz
nop
cld
jae
and
ds
test
clc
repnz
nop
cld
jae
add
add
adc
repnz
nop
cld
jae
out
add
pop
cmp
test
add
push
mov
nop
leave
jmp
add
mov
inc
adc
mov
nop
leave
jmp
add
cmp
add
add
jecxz
add
clc
repnz
nop
cld
jae
fs
add
add
xor
push
mov
xchg
ret
add
add
xor
push
mov
xchg
ret
add
stos
add
jg
add
in
nop
leave
jmp
add
inc
add
sub
and
in
nop
leave
jmp
add
add
add
add
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
sbb
cmp
mov
movl
andl
add
add
add
xchg
in
add
add
mov
add
cs
clc
repnz
nop
cld
jae
add
add
jnp
nop
cld
jae
sub
lcall
lods
add
push
mov
xchg
ret
lcall
sub
andl
nop
leave
jmp
add
jmp
sbbl
nop
leave
jmp
mov
cmp
add
cmpsl
into
add
clc
repnz
nop
cld
jae
pop
add
add
loopne
repnz
nop
cld
jae
add
inc
cltd
and
push
mov
nop
leave
jmp
add
mov
pop
add
movsb
mov
fisttps
nop
nop
cld
jae
add
add
jg
insl
push
mov
push
arpl
sub
loop
mov
mov
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
mov
push
sub
notl
in
nop
leave
jmp
jno
cmp
mov
sti
clc
repnz
nop
cld
jae
add
add
dec
push
mov
nop
leave
jmp
icebp
ret
xor
add
out
xchg
jne
clc
repnz
nop
cld
jae
incl
iret
xchg
xchg
pop
lea
push
mov
nop
leave
jmp
add
stos
add
jo
pusha
push
mov
xchg
ret
sub
inc
cmpb
mov
dec
adc
test
inc
add
add
and
sub
cltd
lods
clc
repnz
nop
cld
jae
icebp
inc
sbb
fiaddl
icebp
arpl
add
push
mov
nop
leave
jmp
and
mov
xor
mov
add
add
sub
ret
mov
add
adc
add
push
mov
xchg
ret
add
ret
addr16
push
mov
nop
leave
jmp
add
sub
addb
clc
mov
push
mov
nop
leave
jmp
xor
add
out
sub
fiadds
add
in
nop
leave
jmp
ret
mov
or
mov
nop
leave
jmp
out
xor
mov
add
pop
push
mov
xchg
ret
lcall
add
xchg
mov
loopne
push
mov
nop
leave
jmp
adc
add
push
mov
nop
leave
jmp
jge
jo
sub
sub
clc
repnz
nop
cld
jae
add
jo
add
add
mov
push
mov
nop
leave
jmp
add
add
add
call
push
mov
xchg
ret
add
add
sub
orl
pop
repnz
clc
repnz
nop
cld
jae
sub
clc
repnz
nop
cld
jae
add
fldl
add
inc
pop
add
push
mov
nop
leave
jmp
icebp
inc
out
sub
fwait
mov
clc
repnz
nop
cld
jae
add
add
fs
mov
repnz
nop
cld
jae
jo
sbb
add
add
push
mov
nop
leave
jmp
mov
cmp
pop
add
clc
repnz
nop
cld
jae
add
fdiv
clc
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
mov
push
inc
sub
clc
repnz
nop
cld
jae
ljmp
add
add
clc
repnz
nop
cld
jae
add
add
addr16
adc
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
mov
add
xor
mov
icebp
clc
repnz
nop
cld
jae
add
and
lds
mov
test
push
mov
nop
leave
jmp
add
cli
jns
out
lcall
clc
repnz
nop
cld
jae
lcall
add
inc
fiadds
repz
mov
nop
leave
jmp
mov
add
cmpl
push
mov
nop
leave
jmp
cmp
add
lahf
push
clc
repnz
nop
cld
jae
and
add
xor
mov
clc
repnz
nop
cld
jae
sub
jnp
stos
push
mov
nop
leave
jmp
ret
add
and
push
push
mov
xchg
ret
add
add
add
xor
sub
test
in
call
in
nop
leave
jmp
cmp
or
or
mov
sub
jmp
cmp
ret
jmp
add
inc
cwtl
sbb
push
out
add
jno
inc
add
mov
jge
das
mov
push
mov
nop
leave
jmp
add
sub
push
mov
nop
leave
jmp
add
add
out
push
push
mov
nop
leave
jmp
mov
add
add
in
xchg
loope
pusha
push
mov
xchg
ret
xchg
jge
lcall
xor
fiaddl
nop
nop
cld
jae
cmpb
add
pusha
add
cli
clc
repnz
nop
cld
jae
sbb
sub
xor
mov
mov
clc
repnz
nop
cld
jae
add
and
mov
nop
leave
jmp
add
add
cmp
xchg
mov
xor
push
mov
xchg
ret
add
iret
jg
add
push
push
mov
xchg
ret
add
and
xor
mov
push
mov
xchg
ret
cmp
mov
add
clc
repnz
nop
cld
jae
add
sub
add
and
xchg
jge
sar
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
cmp
add
xchg
mulb
addb
push
cmpsb
repz
call
in
nop
leave
jmp
add
add
addr16
push
push
mov
xchg
ret
and
out
add
push
mov
nop
leave
jmp
mov
pop
add
add
pop
push
mov
jb
clc
repnz
nop
cld
jae
fldl
add
testb
cmp
ret
add
add
mov
add
push
mov
nop
leave
jmp
add
add
loop
mov
sbb
repnz
nop
cld
jae
add
xor
add
icebp
mov
add
mov
nop
leave
jmp
jge
cmp
add
mov
clc
repnz
nop
cld
jae
inc
add
xorl
clc
repnz
nop
cld
jae
arpl
add
mov
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
pop
and
sub
add
add
add
in
nop
leave
jmp
jmp
jmp
sub
push
clc
repnz
nop
cld
jae
add
jmp
jne
pop
push
mov
nop
leave
jmp
add
sub
add
arpl
add
dec
clc
repnz
nop
cld
jae
pop
add
jp
mov
mov
add
call
clc
repnz
nop
cld
jae
fiaddl
stc
clc
repnz
nop
cld
jae
out
add
add
xchg
and
test
push
mov
nop
leave
jmp
add
pop
add
dec
add
push
or
repnz
nop
cld
jae
add
out
add
add
mov
push
mov
nop
leave
jmp
add
xor
mov
push
mov
xchg
ret
sbb
add
jmp
or
rolb
xchg
ret
add
jo
add
add
clc
repnz
nop
cld
jae
add
add
add
push
add
push
clc
repnz
nop
cld
jae
add
add
in
add
aad
add
jle
add
dec
add
xchg
jo
mov
add
push
mov
nop
leave
jmp
add
jns
daa
jo
cmp
nop
leave
jmp
fiaddl
add
aaa
xor
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
add
cmp
cmp
add
repnz
nop
cld
jae
add
jmp
add
insb
push
push
mov
xchg
ret
jmp
add
lcall
rclb
in
nop
leave
jmp
dec
inc
add
add
xchg
dec
popa
clc
repnz
nop
cld
jae
dec
jns
mov
lcall
clc
repnz
nop
cld
jae
cmp
lods
mov
push
mov
nop
leave
jmp
add
and
sub
sbb
movzwl
clc
repnz
nop
cld
jae
add
js
ret
add
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
cmp
sub
push
jmp
add
fiaddl
add
cmp
add
add
jns
mov
clc
repnz
nop
cld
jae
daa
add
jp
inc
push
mov
xchg
ret
cmp
jge
add
sti
add
push
mov
xchg
ret
and
mov
jns
int
pop
jae
repnz
nop
cld
jae
andb
add
add
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
icebp
add
inc
cmp
mov
xchg
ret
add
jo
add
mov
clc
repnz
nop
cld
jae
sbb
mov
les
push
mov
nop
leave
jmp
add
add
add
add
repnz
nop
cld
jae
jp
xchg
sbb
mov
inc
clc
repnz
nop
cld
jae
jp
pop
sub
jne
add
repnz
nop
cld
jae
fstl
mov
jp
popf
call
clc
repnz
nop
cld
jae
fs
add
mov
push
mov
incl
or
push
add
fwait
addl
ret
shrl
aas
ret
in
add
inc
add
out
out
fldl
ret
out
sbb
cmp
push
push
mov
xchg
ret
add
add
out
mov
cmp
push
mov
nop
leave
jmp
add
jno
sbb
mov
nop
nop
cld
jae
mov
nop
push
mov
xchg
ret
fiaddl
jns
jns
cli
out
add
movsb
add
xchg
ret
mov
and
cmp
repnz
nop
cld
jae
sub
icebp
and
mov
nop
leave
jmp
jns
icebp
push
add
mov
in
nop
leave
jmp
stos
mov
add
add
push
add
xor
add
clc
repnz
nop
cld
jae
xor
xlat
pop
popa
push
mov
nop
leave
jmp
xchg
add
sub
mov
fs
nop
nop
cld
jae
jns
sub
add
mov
clc
repnz
nop
cld
jae
xchg
add
mov
add
and
insb
pushl
push
mov
xchg
ret
add
add
add
push
std
and
clc
repnz
nop
cld
jae
add
add
add
out
mov
clc
repnz
nop
cld
jae
xchg
xchg
mov
sar
nop
nop
cld
jae
jno
inc
add
xor
add
add
lods
jg
push
add
add
test
nop
nop
cld
jae
add
inc
add
cwtl
mov
inc
js
les
mov
xchg
ret
jno
add
add
adcb
clc
push
mov
xchg
ret
add
mov
ss
add
clc
repnz
nop
cld
jae
add
fidivrl
out
jecxz
sbb
xchg
cmpl
cld
jae
and
add
nop
nop
cld
jae
orl
xor
clc
repnz
nop
cld
jae
adc
or
clc
repnz
nop
cld
jae
inc
add
add
lahf
popa
clc
repnz
nop
cld
jae
xchg
add
add
add
add
clc
repnz
nop
cld
jae
add
jmp
add
mov
aam
mov
clc
repnz
nop
cld
jae
addl
and
clc
repnz
nop
cld
jae
add
in
and
add
rep
jmp
incl
and
out
xchg
fisubrl
stos
lahf
jmp
add
add
add
test
out
cwtl
and
in
nop
leave
jmp
add
add
sub
push
mov
xchg
ret
lcall
sub
add
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
and
add
add
clc
repnz
nop
cld
jae
jg
cmp
sbb
add
mov
clc
repnz
nop
cld
jae
pop
add
add
leave
sub
in
nop
leave
jmp
adc
add
mov
clc
repnz
nop
cld
jae
add
xchg
pop
icebp
mov
repnz
nop
cld
jae
cmp
add
lcall
add
clc
repnz
nop
cld
jae
xchg
cmp
icebp
fs
add
nop
nop
cld
jae
mov
add
and
push
push
mov
xchg
ret
sub
add
add
dec
push
clc
repnz
nop
cld
jae
mov
add
add
repnz
nop
cld
jae
inc
add
jp
add
mov
clc
repnz
nop
cld
jae
dec
out
jns
je
clc
repnz
nop
cld
jae
cmp
add
mov
push
push
mov
xchg
ret
jo
jmp
add
jge
clc
repnz
nop
cld
jae
fiaddl
add
jae
push
add
jo
out
xchg
push
inc
add
fidivl
dec
push
mov
xchg
ret
mov
and
mov
push
mov
nop
leave
jmp
add
add
mov
xlat
push
sbb
clc
repnz
nop
cld
jae
add
jo
scas
push
mov
mov
cs
add
stc
inc
leave
add
xor
int
and
xor
mov
rolb
mov
add
xorl
jae
roll
ds
pop
push
lcall
add
mov
mov
pusha
add
add
push
fidivrl
sub
push
add
jae
mov
mov
push
call
insl
les
jg
add
imul
mov
push
sbb
fistpl
sahf
xor
add
inc
sub
push
mov
popf
gs
mov
scas
xchg
inc
add
sbbl
js
popa
in
movsl
mov
outsl
sbb
sbb
stos
dec
mov
jmp
jg
push
stos
xor
jl
sahf
and
mov
add
pop
lcall
jnp
mov
test
mov
sbb
std
cmp
sahf
xchg
and
ficoml
jno
add
es
icebp
outsb
in
outsb
stos
addb
fst
mul
jecxz
add
jne
or
outsl
xor
push
add
neg
lret
pushf
sbb
lret
repz
cmp
jbe
and
leave
cmp
mov
and
sbb
xchg
sbb
inc
fdivl
loop
mov
dec
mov
xchg
mov
addb
cli
pop
subl
mov
mov
add
or
negb
scas
mov
push
add
pop
loope
ret
jbe
ja
out
movsb
ss
xchg
mov
movsb
lcall
mov
sbb
add
inc
add
add
aas
insl
arpl
bound
mov
das
or
add
lahf
dec
cmp
dec
mov
push
adc
mov
mov
jb
mov
cwtl
rep
add
xchg
lock
xchg
fildl
insb
or
dec
in
test
jmp
mov
xor
outsl
jne
jne
mov
ljmp
xchg
add
sbb
outsl
add
lea
push
into
and
mov
pop
out
test
xor
mov
jns
add
ss
and
push
stc
pop
mov
sahf
test
fucomi
out
xor
mov
pop
cmp
mov
xor
mov
and
mov
mov
add
cmpsb
or
into
xchg
pop
repz
cmp
mov
in
test
sub
push
loope
xor
sbb
lret
and
mov
mov
add
icebp
inc
add
add
ljmp
cmp
xor
pop
xchg
dec
leave
xchg
jbe
add
add
clc
loop
mov
xchg
push
add
int3
mov
into
jg
test
loope
stc
gs
add
cmp
inc
test
xchg
xor
mov
or
adc
cmp
mov
add
add
cmp
sbb
ljmp
xor
mov
add
inc
sub
add
sub
jne
rolb
stos
lahf
cwtl
push
jmp
add
cmp
fisttps
add
jnp
cmp
cs
mov
add
outsb
pushf
outsl
insl
arpl
add
fsub
xor
ficomps
ljmp
mov
add
add
xchg
inc
stos
xchg
pop
addr16
dec
mov
arpl
dec
out
inc
popa
push
ret
lods
lahf
pop
shl
ret
and
mov
mov
mov
mov
insb
sbb
jns
add
out
and
cmpl
imul
cld
inc
xchg
ret
stc
xor
mov
xchg
add
push
addb
mov
lds
adc
add
push
shll
push
add
lret
cmpl
add
loopne
mov
setae
pop
sbb
icebp
loope
xchg
mov
jae
test
in
mov
fistpll
add
push
inc
xor
add
mov
add
xor
imul
add
sysenter
out
jb
mov
cmc
add
mov
xchg
aaa
cmpsb
icebp
jp
xor
adc
pop
daa
mov
add
mov
gs
mov
pop
orl
insl
or
cltd
aas
mov
add
dec
leave
test
cld
mov
mov
sub
clc
jg
pushf
and
add
lret
sbb
cmp
and
mov
mov
adc
aaa
outsb
adc
loopne
mov
sbb
mov
jl
push
mov
int3
mov
xor
cmp
out
push
cwtl
jnp
aad
sub
and
mov
fcomps
test
xchg
lret
sub
insb
dec
int
gs
xlat
pop
xor
scas
inc
ret
cmp
mov
sti
stos
popf
addb
push
add
add
mov
push
bound
mov
inc
add
jmp
cmp
xchg
sbb
jo
mov
dec
cld
push
js
lret
xor
xor
mov
test
add
add
repnz
pop
adc
inc
mov
pop
addb
in
push
call
leave
scas
stc
mov
add
int
cmp
adc
add
mov
pop
jno
daa
in
push
mov
aad
mov
mov
lret
xchg
add
cmp
movsl
xchg
jno
jno
enter
mov
add
add
fistl
add
push
xchg
imul
es
shrl
aaa
addb
je
sbb
jp
mov
inc
lahf
clc
xchg
push
jmp
pop
cmc
inc
add
in
gs
adc
mov
dec
jne
ss
xor
mov
ret
rorl
add
mov
add
stos
adc
mov
jecxz
mov
and
dec
insb
lods
and
mov
test
repz
inc
cmp
aam
cmp
mov
hlt
jbe
gs
add
jl
cmp
push
lahf
ret
push
add
addb
insb
add
xchg
enter
cmp
add
test
ja
add
loop
mov
stos
mov
jno
add
testb
adc
mov
lret
sub
lods
out
mov
xor
aas
pop
adc
fmull
addb
jbe
inc
mov
mov
add
mov
cmp
cmpsl
pushf
sbb
mov
adc
jp
pop
repnz
inc
xor
mov
xchg
rolb
mov
xchg
mov
or
xchg
push
add
test
pop
scas
pop
add
sahf
inc
scas
imul
add
mov
push
add
nop
add
push
cli
pop
bound
mov
test
jbe
bound
mov
mov
in
add
int
xor
jl
jns
add
fidivrl
add
push
rolb
or
mov
xchg
mov
mov
jp
mov
dec
push
mov
mov
je
add
add
add
inc
add
xchg
xorw
add
cwtl
ds
jnp
xchg
mov
add
mov
movsb
xor
mov
sub
cwtl
and
addr16
ja
jnp
lods
bsf
in
lds
add
sahf
pop
jecxz
jno
fsub
add
inc
movsl
mov
mov
mov
ret
add
fildll
fidivl
fnstsw
hlt
loopne
mov
dec
loope
add
adc
mov
movsl
js
in
mov
mov
fstps
adc
mov
add
add
mov
mov
inc
add
sub
imul
stc
loopne
mov
mov
dec
pop
aaa
xor
ret
cmp
insb
pop
pushf
out
std
lahf
in
and
mov
adc
setp
jle
aad
popf
pushf
es
jnp
adc
pop
rolb
addb
ficoms
aam
icebp
mov
mov
sbb
mov
add
mov
pop
mov
adc
je
inc
icebp
cli
sub
mov
mov
popf
mov
jmp
pop
add
mov
and
call
std
addr16
and
mov
mov
push
outsb
mov
in
sahf
jmp
push
and
dec
and
xor
das
or
mov
call
mov
sbb
jbe
fadd
test
roll
mov
dec
popf
mov
push
mov
add
mov
add
cmp
mov
add
add
and
mov
mov
mov
add
aas
inc
add
mov
or
add
dec
xchg
ficoms
cmp
pop
jne
inc
jl
ljmp
dec
cmpsl
lahf
sti
scas
and
add
mov
mov
xchg
add
rol
jmp
push
push
jne
add
es
das
add
mov
out
idivl
enter
add
add
inc
loopne
mov
mov
aad
adc
mov
mov
jnp
hlt
decl
inc
lahf
lret
leave
data16
scas
dec
sbb
bound
mov
mov
add
adc
hlt
jns
cmp
outsb
test
sub
imul
aam
push
mov
mov
mov
add
addr16
add
mov
xchg
leave
mov
mov
adc
mov
mov
fsub
movsl
push
and
or
bound
mov
mov
outsb
ss
mov
fwait
cmpl
add
add
xor
mov
int
aaa
or
inc
xor
mov
xor
mov
loop
mov
mov
inc
cmpsl
mov
or
add
mov
pushf
fdivrs
es
pushf
push
jmp
mov
mov
mov
add
and
mov
mov
jne
mov
mov
sbb
fimuls
pop
scas
rolb
mov
cmp
or
sub
mov
sbb
cmp
mov
sbb
ja
mov
pusha
add
mov
jo
mov
inc
dec
dec
jnp
add
rolb
mov
imul
add
rolb
mov
adc
add
out
hlt
loope,pn
mov
popa
aad
jge
add
inc
hlt
xor
mov
add
iret
addb
adc
mov
mov
jmp
out
cmp
aad
fisubrs
and
loop
mov
xor
mov
icebp
mov
loope
icebp
push
add
mov
or
mov
lret
push
xor
mov
pop
std
jne
pop
dec
dec
mov
ret
scas
mov
imul
add
lret
mov
test
and
fcomps
pop
cmpsl
fwait
in
sbb
std
dec
mov
sbb
push
xchg
dec
loop
mov
ss
cmp
jge
mov
xor
and
mov
xchg
cwtl
jecxz
out
addb
mov
mov
and
lods
jb
mov
sarl
add
addb
mov
inc
add
add
add
addb
hlt
sbb
push
into
pop
mov
mov
xchg
push
lods
loopne
mov
jo
mov
insl
mov
pop
or
sbb
and
mov
addps
add
dec
je
jno
sets
mov
mov
cmpl
push
jnp
add
and
dec
cmpsb
lods
in
adc
lret
movsb
ja
and
mov
pushl
sub
pop
aaa
mov
add
repnz
nop
add
sub
pop
xchg
add
mov
mov
push
loope
and
mov
inc
les
fs
xchg
add
aam
cltd
dec
addr16
pop
movsb
iret
lods
in
and
in
add
lods
scas
je
add
xchg
mov
inc
xchg
cmpsl
clc
daa
push
mov
loopne
mov
add
mov
sub
add
add
mov
push
bound
mov
push
and
aaa
aaa
scas
sbb
push
sub
fwait
in
lods
xchg
push
add
add
insl
fisubl
clc
repz
das
mov
add
sub
inc
xchg
dec
repz
mov
xchg
xlat
mulb
pop
xchg
loop
mov
cld
icebp
mov
mov
int
pop
mov
or
inc
add
jmp
add
fistps
ljmp
inc
and
and
mov
loopne
mov
cmc
add
add
data16
add
mov
add
push
ret
jp
dec
pushf
cmp
add
mov
xchg
add
dec
rolb
mov
push
xor
inc
inc
push
xor
sbb
je
adc
xchg
xlat
pop
in
mov
add
pop
mov
xchg
push
call
add
push
rolb
jne
xchg
rolb
mov
and
dec
lods
std
xor
xor
mov
add
je
add
test
add
sub
mov
xchg
dec
xor
int3
ds
nop
add
add
add
ss
lahf
push
and
mov
mov
cmp
add
add
loop
mov
out
fildl
add
shll
xor
jmp
mov
add
lahf
push
add
dec
jp
add
mov
clc
bound
mov
in
cmp
jmp
and
or
add
mov
or
mov
in
rolb
mov
mov
leave
mov
daa
push
add
pop
push
popaw
cli
push
add
mov
mov
mov
add
mov
pop
add
sahf
cmpsl
popl
mov
lea
je
aam
add
add
jmp
mov
or
cld
movsl
adc
pop
jl
rolb
clc
insl
clc
sub
jge
cld
jnp
jne
scas
fimull
pusha
add
sbb
mov
add
and
mov
pop
dec
icebp
mov
mov
mov
outsl
lcall
jl
or
add
sbb
scas
pop
or
add
mov
je
pop
js
xchg
add
pop
cs
icebp
mov
sub
xchg
jge
add
sub
mov
test
mov
test
in
roll
loopne
mov
add
sbb
imul
mov
mov
loop
mov
pop
mov
aam
sub
mov
sti
imul
mov
push
push
cmp
jbe
dec
test
mov
addb
adc
mov
sub
insb
mov
xor
mov
stos
aam
add
xchg
cmp
mov
dec
ja
loope
mov
add
rorl
push
add
stos
xchg
das
lea
add
mov
ss
popf
roll
add
movsb
sbb
aaa
js
pop
addb
push
add
jmp
adc
sub
dec
bound
mov
sub
rolb
mov
push
shll
adc
mov
xor
mov
cmp
cmp
dec
xor
sbb
mov
mov
adc
mov
in
ret
inc
push
jecxz
mov
mov
mov
rolb
mov
js
stos
data16
hlt
cmpsb
mov
out
xchg
movsb
mov
adc
add
mov
stc
repz
or
add
mov
jb
mov
dec
cltd
dec
rcll
or
sarl
xchg
in
aad
push
mov
mov
cli
rcll
fisubl
daa
push
popf
aad
mov
pushl
mov
add
push
mov
inc
add
jns
test
add
dec
mov
and
icebp
fidivs
negl
xor
xor
mov
xchg
sub
add
fsts
add
mov
push
movsb
cmp
sub
ljmp
mov
pop
sub
test
pop
push
push
cmp
jnp
jl
push
mov
mov
add
mov
mov
test
or
cltd
cld
inc
roll
mov
xchg
cmpsl
and
jmp
setnp
add
cmpsb
push
mov
mov
inc
fcmovb
out
jbe
daa
push
push
push
add
dec
imul
mov
and
bound
mov
xor
mov
xor
mov
fbld
add
ds
jmp
add
xchg
xchg
mov
orl
sbb
int
into
test
sub
mov
into
add
mov
ss
popa
and
mov
cmp
xchg
add
insb
movsl
xor
jne
sti
lcall
pop
add
lret
add
inc
sahf
nop
add
out
sub
adc
add
fdiv
add
out
mov
fldl
call
xchg
movsb
pop
nop
add
add
add
pop
addb
pop
sub
test
sti
fiaddl
mov
scas
into
repnz
mov
shll
dec
rolb
mov
loop
mov
daa
dec
sub
dec
cmpsb
pop
dec
movsb
ficoms
mov
aad
adc
mov
cmp
mov
mov
or
push
insl
adc
mov
pop
ljmp
mov
mov
fdivrs
pop
push
mov
push
or
jecxz
xchg
scas
decb
add
xchg
add
mov
add
add
loop
mov
xchg
xchg
jae
jnp
lock
loope
xrelease
cmpsb
lea
mov
sti
dec
int3
add
mov
push
jb
mov
pusha
add
daa
push
add
and
mov
pop
cmp
mov
sbb
sub
add
jg
xor
sub
int3
xor
mov
add
xchg
xlat
movsl
pop
inc
js
ja
scas
pop
das
enter
mov
xchg
sarl
rolb
stc
push
mov
ret
fistl
lcall
shl
xchg
add
mov
add
add
sbb
xor
add
imul
mov
jb
mov
dec
push
add
mov
push
in
imul
mov
sub
dec
push
and
mov
cwtl
push
mov
ja
add
add
xor
sub
add
xchg
add
lret
jbe
mov
mov
sbb
mov
ret
xchg
mov
lock
mov
insl
ret
mov
cmp
addb
cmc
ret
hlt
jne
jns
and
add
daa
or
inc
leave
sub
push
in
lock
mov
iret
push
ss
jbe
loop
mov
add
sbb
mov
xlat
cltd
fs
add
mov
movsl
lods
enter
repnz
leave
and
mov
xchg
repnz
mov
push
inc
add
jmp
mov
sbb
jle
xor
mov
sub
stos
clc
add
mov
add
mov
lret
add
xchg
incl
lods
sbb
add
outsb
xor
mov
sub
roll
repnz
pop
adc
pop
push
fbld
pop
xor
mov
jg
inc
and
mov
fsubp
cmp
sub
add
mov
add
ret
iret
mov
ds
or
add
mov
inc
add
xor
mov
inc
push
sahf
and
mov
mov
sub
mov
sbb
dec
pop
fstpt
inc
popa
adc
mov
or
dec
cmpl
or
dec
and
mov
je
adc
addb
jl,pn
pushf
ss
aas
lock
xchg
pusha
add
imul
test
xor
add
sahf
mov
add
cwtl
hlt
pop
xchg
lock
lahf
dec
pop
aas
mov
sub
aas
mov
inc
add
sbb
fcmovu
add
and
js
mov
adc
mov
imul
mov
add
nop
add
add
jae
or
fbld
mov
pusha
add
jo
mov
addb
xor
out
mov
ss
add
sbb
mov
mov
stos
stos
cltd
mov
bound
mov
fwait
cmp
loopne
mov
jne
inc
mov
aaa
mov
push
test
push
sbb
add
jl
lcall
outsb
pushf
jp
lahf
rorl
stos
mov
mov
mov
cmp
add
sahf
in
dec
jp
mov
add
mov
add
mov
int
adc
cmp
mov
inc
add
jle
cmpsl
adc
mov
push
and
leave
or
pusha
add
add
insb
cltd
jnp
push
cmp
lret
test
push
pop
clc
js
xchg
mov
aaa
repnz
out
and
mov
sub
in
add
push
mov
out
add
movsl
je
pop
js
add
add
out
aas
stc
push
add
xchg
jns
cli
xchg
mov
adc
mov
jnp
mov
push
xchg
mov
mov
adc
add
fadd
add
lcall
mov
rcll
cli
pop
sbb
test
add
add
fs
mov
add
repz
mov
scas
push
mov
add
xor
mov
stos
xchg
je
inc
rolb
mov
test
ja,pn
jns
jno
lahf
xchg
call
push
decb
add
pop
mov
dec
push
add
mov
mov
push
dec
push
add
mov
mov
mulb
fisttpll
sbb
mov
mov
mov
cmp
mov
ss
fildl
rorl
ret
gs
rcll
stc
roll
add
add
pop
out
adc
mov
xchg
fstpt
add
addb
or
mov
xchg
xchg
mov
add
jl
cmpl
and
add
cmc
cmpsb
xchg
inc
popa
add
dec
xor
mov
push
inc
xchg
outsb
pop
adc
sbb
sub
sbb
add
jns
fcmovb
cmpsl
mov
add
add
es
add
mov
cmp
add
add
mov
adc
mov
push
jge
jecxz
mov
cmp
fistpl
adc
mov
add
sub
gs
iret
and
inc
rorl
cmp
in
js
mov
sbb
cmp
das
cld
mov
pusha
add
mov
mov
mov
adc
add
mov
add
add
dec
mov
jb
mov
and
add
in
mov
push
mov
push
test
and
mov
mov
inc
pop
ja
mov
pop
addb
add
mov
out
addb
dec
ret
leave
xorl
sub
mov
jns
mov
add
mov
fcomps
mov
mov
in
add
add
mov
and
addb
adc
repz
sahf
ja
sbb
call
fisttps
add
cmp
je
xchg
bound
mov
out
push
pop
cmpsb
fdivr
mov
mov
pop
dec
ret
xchg
inc
pop
ds
mov
sahf
jecxz
in
add
xchg
add
mov
mov
dec
jmp
add
mov
mov
jae
adc
mov
out
lods
out
int3
mov
add
push
repz
mov
jge
repnz
pop
sub
mov
add
cmp
cmpsb
ss
mov
inc
cmp
xchg
insl
js
add
mov
int
sbb
add
xor
add
sub
jo
mov
aad
in
dec
xor
mov
mov
pushf
test
pop
push
add
push
add
mov
call
add
fstps
add
js
xor
stos
lods
out
mov
ds
add
dec
and
mov
icebp
out
adc
mov
repz
mov
adc
mov
mov
push
fiaddl
xchg
add
pushf
jecxz
jmp
sti
push
lods
mov
sub
inc
into
loopne
mov
cs
mov
add
mov
mov
add
lahf
mov
mov
xlat
inc
lods
mov
add
fstps
xor
out
cmc
pop
data16
insb
sahf
les
add
or
mov
loopne
mov
int3
ret
sbb
ljmp
cmpsl
pop
push
add
mov
push
mov
add
cmp
scas
fisubs
sbb
add
push
fs
mov
vmulsd
mov
mov
loopne
mov
inc
cmpsl
fldenv
sbb
sbb
push
loope
or
fsubr
mov
xchg
lahf
xlat
mov
pushf
adc
repnz
dec
jmp
sbb
jmp
sahf
stc
dec
in
add
mov
nop
add
cs
pop
xchg
add
adc
mov
lcall
push
or
xchg
add
mov
adc
sbb
add
mov
add
mov
sbb
mov
mov
inc
or
fwait
and
mov
lret
lcall
mov
push
ja
inc
scas
push
aas
add
fidivs
cmpsl
add
nop
add
jns
imul
sbb
inc
add
pusha
add
jge
mov
push
add
fidivrs
sub
mov
mov
mov
pop
mov
or
popa
fcoml
sub
mov
inc
outsb
rolb
mov
cmp
add
dec
je
cmp
add
imul
mov
mov
in
or
stos
jmp
inc
pop
inc
add
sbb
xchg
jno
sub
xor
inc
add
mov
mov
mov
fdivrs
enter
adc
stos
mov
push
add
xlat
nop
add
jbe
add
xchg
mov
dec
call
add
loopne
mov
jle
mov
add
inc
pushf
sbb
add
popl
mov
mov
push
push
xchg
ficoms
cmpsb
stc
push
inc
pushf
sub
xor
xor
fcomip
jmp
xor
pop
xchg
add
and
mov
aam
scas
xchg
imul
add
mov
adcl
mov
mov
stc
cs
addb
das
sbb
jno
and
mov
mov
add
insb
hlt
dec
imul
and
popa
pop
push
mov
fldcw
sahf
xlat
hlt
fsubrs
test
in
stc
push
mov
flds
push
es
mov
call
mov
jecxz
push
out
ret
pop
movsl
sub
mov
in
mov
rolb
movsl
jnp
aam
add
pop
outsb
or
inc
add
lahf
in
sub
fdivrs
add
movsb
or
cmp
rolb
mov
cmp
mov
hlt
in
dec
cmp
dec
mov
dec
or
mov
stc
int3
fadds
fistl
pop
sub
mov
jecxz
cmpsb
aam
imul
or
add
or
orl
mov
out
ds
leave
dec
insb
mov
lds
mov
sahf
scas
mov
mov
mov
push
mov
out
sub
out
mov
gs
loope
gs
xor
lock
mov
add
popf
or
push
add
mov
mov
mov
and
mov
and
mov
add
mov
add
mov
mov
add
mov
adc
mov
add
sub
mov
ds
mov
aam
push
outsl
dec
pusha
add
xlat
outsb
mov
ret
dec
ficoml
neg
mov
pushf
rolb
mov
sbb
iret
and
xor
lds
es
xchg
insb
lret
push
jg
sub
ja
xor
add
imul
mov
ret
outsl
push
popf
push
dec
xchg
sub
insl
dec
fildll
fisubrl
add
cltd
sbb
add
jae
dec
dec
add
jbe
cmp
sub
pop
out
lahf
aaa
xchg
add
jne
mov
pop
nop
add
cmp
dec
std
mov
add
mov
add
add
nop
add
mov
sbb
stos
lahf
cmpl
jl
repz
mov
mov
add
mov
mov
rorl
inc
movsb
mov
fidivrl
adc
jae
pop
scas
ret
mov
add
imul
cltd
cmp
xlat
xchg
push
push
add
movl
ja
xor
mov
ret
mov
hlt
adc
push
inc
dec
pop
movsl
push
fbstp
repz
repnz
mov
sub
aam
add
cmp
cltd
add
mov
test
ljmp
jo
mov
rolb
mov
jne
sahf
insb
fildll
int
lcall
sbb
jnp
fisttpl
sbb
clc
jg
xchg
mov
cmc
rolb
mov
jl
scas
add
or
push
or
push
addb
hlt
jmp
hlt
out
inc
cld
push
dec
mov
mov
mov
add
mov
movb
scas
pop
nop
add
pop
adc
mov
mov
bound
mov
add
inc
mov
fmull
mov
call
pop
push
add
test
mov
cmpsl
idivl
push
or
popa
in
add
mov
add
loop
mov
xchg
jnp
add
mov
repnz
ljmp
pop
jnp
and
jge
out
lea
fsts
adc
mov
cli
stos
cmp
fsubp
aam
repz
and
inc
cmp
loop
mov
sbb
or
and
pop
jne
add
clc
dec
pop
xor
push
iret
or
sbb
cmp
push
mov
mov
add
and
add
add
lret
les
ds
inc
adc
mov
mov
lahf
enter
fwait
sub
or
out
jns
icebp
xchg
das
and
ret
aad
loop
mov
popf
and
out
xchg
add
mov
mov
scas
pop
and
lods
jns
sti
addb
cli
inc
add
test
inc
jl
and
aad
add
mov
add
mov
xchg
test
add
add
pop
xlat
ret
daa
bound
mov
add
call
mov
mov
mov
dec
rolb
mov
arpl
jl
stos
jecxz
scas
sbb
cmc
jl
mov
es
cld
out
jecxz
pop
jo
mov
add
test
fwait
jns
mov
shll
stos
mov
push
test
scas
std
push
xor
mov
jnp
add
mov
jecxz
pop
add
xchg
push
scas
cmp
mov
mov
add
arpl
repnz
pop
repz
mov
lahf
lods
cmpsl
xchg
add
mov
es
inc
or
jge
clc
mov
das
cmp
aaa
push
add
add
das
arpl
loope
xchg
adc
mov
mov
dec
adc
mov
sbb
incl
xchg
add
sti
in
sbbl
mov
fdivl
mov
call
push
clc
push
mov
shrl
into
scas
mov
sti
pop
idiv
pop
scas
pop
out
stos
mov
or
movsl
cmp
add
scas
leave
out
ja
js
xchg
sub
lret
pop
stc
or
in
adc
mov
mov
jp
rolb
mov
je
add
mov
insl
push
arpl
out
test
add
mov
outsl
add
in
daa
fistl
add
mov
data16
mov
ret
dec
jmp
jge
insl
adc
inc
sbb
fimull
cmp
mov
mov
mov
ja
out
mov
mov
cmp
pop
js
push
add
add
mov
leave
int
dec
add
sub
dec
mov
mov
add
mov
outsb
cmp
mov
dec
rcrl
add
cmpsl
sbb
push
loopne
mov
idiv
jnp
pop
jle
dec
inc
pusha
add
sbbl
pop
mov
ljmpw
sti
test
add
test
sbb
mov
xchg
sahf
rcll
add
pop
jp
hlt
pop
jecxz
mov
push
lock
xor
add
push
out
lret
xor
mov
add
add
dec
cld
inc
fldenv
push
add
mov
ljmp
leave
testl
mov
and
mov
ja
sahf
push
xchg
sub
sub
mov
mov
mov
pushf
xor
shrl
pop
jmp
add
add
dec
jmp
fdivl
pop
sbb
in
jb
mov
fdivrs
movsl
ret
mov
out
mov
out
aas
sub
ja
int3
in
out
in
jnp
add
inc
inc
add
or
cmc
jecxz
xchg
adc
mov
mov
sub
mov
mov
int3
sarl
xchg
mov
add
mov
mov
iret
je
stos
cmpsb
frndint
shll
mov
xchg
mov
pop
dec
pop
add
repz
push
and
mov
pop
jmp
pop
ljmp
inc
addb
or
icebp
rolb
mov
jo
mov
mov
out
mov
mov
pushf
imul
testb
sbb
outsl
es
leave
push
push
gs
mov
cmpsb
rcrl
dec
bound
mov
pop
movsb
mov
rorl
stc
push
sti
jo
mov
inc
add
push
add
cli
fucomip
adc
mov
xor
mov
inc
push
inc
add
mov
int3
jne
in
xor
mov
dec
pop
dec
loopne
mov
ljmp
in
add
arpl
sub
add
jle
sub
pop
xor
inc
add
addb
mov
std
aaa
ret
sbb
lods
fmull
adc
shrl
mov
out
lods
pop
movsb
mov
mov
test
and
dec
jge
add
add
add
sub
inc
add
mov
mov
lahf
clc
repz
fldenv
ljmp
push
popa
test
adc
sub
popa
cwtl
mov
pop
pop
xor
das
or
add
mov
rcll
outsb
lods
jno
xchg
adc
mov
sahf
or
mov
mov
pushf
push
add
mov
xchg
daa
mov
pop
cmp
dec
pop
loopne
mov
xchg
aam
jns
sti
mov
call
xlat
push
add
je
xor
mov
mov
aaa
jp
adc
fistpll
adc
add
rolb
mov
add
sbb
add
cld
in
jl
add
mov
adc
mov
adc
add
mov
into
out
in
mov
sbb
stos
ret
mov
addb
cmpsl
addb
xor
mov
pop
outsl
dec
pop
add
mov
loop
mov
or
adc
loopne
mov
add
mov
push
movl
mov
mov
xor
mov
cmp
mov
cli
repnz
icebp
push
mov
mov
push
ret
mov
cmpsb
outsb
sub
ret
push
or
adc
adc
mov
mov
add
jnp
addb
dec
bound
mov
add
int
add
daa
dec
inc
add
jecxz
bound
mov
mov
add
mov
rolb
loopne
mov
addb
jp
add
ds
movl
jmp
jne
cwtl
jne
dec
pop
fwait
mov
mov
push
cmp
push
stos
pop
cld
ja
add
mov
addb
clc
add
pop
fnstcw
loop
mov
xor
mov
or
push
add
add
fistps
rolb
mov
ret
xor
mov
mov
mov
xchg
popf
loopne
mov
and
dec
mov
push
dec
mov
add
andl
lcall
ret
jecxz
or
push
inc
dec
aam
or
mov
inc
add
mov
and
mov
sub
mov
loop
mov
add
add
mov
lea
pusha
add
add
add
add
mov
cli
push
cld
stos
adc
mov
pusha
add
mov
push
pop
inc
iret
movsbl
dec
pushl
sbb
add
add
mov
mov
add
pusha
add
inc
sub
add
imul
sub
mov
in
mov
dec
out
pop
sub
inc
je
outsb
shll
add
jne
mov
std
sub
add
fstpt
lock
add
mov
mov
sub
add
mov
add
jmp
sahf
jecxz
sub
pop
mov
inc
pop
mov
jmp
add
push
ret
pop
das
lahf
dec
aad
add
mov
jne
add
add
mov
add
xor
mov
add
mov
cmovp
sbb
sub
ljmp
mov
rcrl
pop
mov
push
sbb
xchg
add
dec
push
xchg
fwait
jnp
out
loop
mov
jg
leave
stos
into
aam
scas
or
xor
add
mov
movsb
addb
push
cmp
add
xchg
pop
and
mov
mov
mov
push
shl
jb
mov
adc
mov
xchg
jno
pushf
test
push
bound
mov
in
lahf
imul
clc
mov
mov
fstpt
imul
fcoml
dec
ret
or
add
mov
rolb
mov
hlt
fisubl
imul
ror
stc
rcrl
rolb
mov
lret
popf
bound
mov
add
lcall
cmpsb
popa
jo
mov
add
xchg
add
mov
add
sub
mov
add
lcall
mov
lea
shll
jo
mov
fstpl
mov
ret
lcall
inc
or
or
add
add
dec
call
mov
lret
mov
leave
push
repz
data16
mov
dec
lret
mov
mov
addb
test
pop
adc
jnp
int3
mov
decl
mov
pop
mov
sub
add
in
mov
negl
stos
loopne
mov
jo
mov
lock
pop
add
mov
mov
testl
faddl
add
mov
mov
mov
mov
and
mov
mov
ljmp
mov
divl
add
inc
ret
in
and
mov
add
pop
adc
mov
add
std
cli
ss
dec
fstpl
or
inc
add
xor
mov
outsl
dec
dec
mov
add
adc
mov
lret
xchg
mov
xchg
iret
cmp
arpl
push
cmc
ret
mov
mov
mov
jae
scas
jns
lcall
add
dec
addb
aam
mov
mov
push
add
scas
mov
add
in
jae
add
mov
pop
push
fnsave
pop
test
pop
loopne
mov
mov
adc
mov
mov
rcrl
ja
fidivs
lahf
mov
add
ds
xor
jp
add
add
mov
arpl
xor
push
mov
cli
fcompl
pop
add
mov
cmp
inc
mov
cmc
stos
test
fstpt
pop
in
push
add
jmp
mov
jb
mov
test
add
inc
sbb
jg
adc
mov
mov
mov
imul
add
repnz
inc
or
cmp
nop
add
fs
fdiv
xchg
push
leave
addr16
mov
xor
jmp
pushf
and
mov
ret
aaa
sub
mov
test
loope
sbb
xlat
in
lock
adc
aam
gs
dec
cmp
jp
ret
jo
mov
sbb
mov
jbe
inc
dec
mov
out
dec
pop
jmp
mov
mov
and
mov
add
je
inc
add
pop
shll
test
pop
les
daa
jae
rolb
mov
mov
in
mov
or
adc
add
mov
xchg
test
mov
pop
dec
dec
xchg
test
cmp
mov
add
addb
leave
jge
fcom
xchg
xchg
push
xlat
mov
mov
lret
mov
mov
les
into
push
inc
fidivs
ret
ds
fidivl
add
sbb
stc
or
sbb
xchg
insl
fldcw
inc
add
mov
cmp
sub
jns
sahf
pop
add
fwait
sub
lcall
mov
fildll
push
cmp
lods
xchg
add
test
add
in
lret
mov
pop
cli
test
add
mov
inc
sub
jle
add
and
add
dec
xlat
in
push
mov
mov
push
fcoms
ja
movsb
adc
mov
ljmp
sbb
ficoml
mov
loopne
mov
or
push
imul
mov
inc
into
push
sub
jl
adc
mov
push
add
scas
lods
lahf
pop
pop
inc
mov
movsl
add
lret
jne
loopne
mov
or
lds
mov
jae
add
cmp
add
lahf
and
mov
add
dec
sub
sub
lods
xor
int3
sbb
pop
mov
add
inc
daa
inc
ret
faddl
push
cmp
mov
popf
push
fisubrl
push
inc
or
inc
xor
cwtl
dec
and
leave
cmovae
mov
dec
pop
lock
scas
sub
jle
in
pop
pop
or
cwtl
sub
jo
mov
and
mov
or
dec
mov
ret
adc
mov
cs
mov
je
xor
mov
psubw
pushf
stc
add
popf
mov
mov
add
mov
clc
test
push
pusha
add
mov
pop
sub
sbb
add
adc
add
adc
sbb
sti
or
test
mov
xchg
add
insl
mov
mov
addr16
add
push
ret
test
repnz
dec
test
push
add
push
add
dec
sbb
addb
push
lock
and
sbb
sub
add
das
mov
sbb
xchg
leave
out
jge
mov
lods
mov
les
add
jb
mov
ret
push
lahf
xchg
outsl
fildl
int3
or
adc
push
push
xchg
inc
jmp
xor
mov
leave
inc
dec
or
add
mov
mov
fmul
sub
call
sbb
cld
push
daa
popa
cs
pop
pop
imulb
cmp
add
movsb
jmp
das
mov
mov
mov
pop
jns
add
jns
add
lret
and
mov
in
push
or
decl
add
add
or
xchg
add
stos
inc
sub
sub
dec
jnp
adc
sbb
push
add
test
add
push
sub
mov
rcrl
cmpsb
jecxz
mov
jp
cmp
pop
mov
sub
adc
push
outsb
ds
jmp
pop
dec
inc
sub
mov
loope
clc
pinsrw
push
loope
roll
mov
fs
mov
mov
mov
lahf
imul
scas
cwtl
push
bound
mov
or
rolb
mov
xchg
stc
lea
push
fwait
lock
outsb
or
call
push
add
orl
das
xchg
scas
outsl
insb
adc
mov
mov
push
adc
mov
movsb
shll
push
adc
mov
add
xchg
outsl
dec
cmp
sahf
mov
icebp
out
add
mov
lret
sbb
in
and
shll
and
mov
jl
idivl
add
jle
mov
add
mov
mov
jbe
pop
xchg
adc
mov
or
insl
es
xlat
hlt
push
pop
loopne
mov
jne
push
fwait
mov
inc
mov
add
mov
scas
scas
dec
scas
mov
loop
mov
mov
sub
push
sub
out
data16
stos
and
adc
jp
inc
mov
pop
cmpsb
ret
and
mov
aas
loope
jnp
dec
push
and
stos
cmp
jmp
addl
add
cld
ficomps
add
jg
scas
and
mov
add
or
js
fwait
cmp
xchg
mov
xor
inc
jo
mov
aas
out
jmp
add
xor
rolb
ss
and
mov
sbb
in
sbb
stc
xor
mov
loope
in
xchg
jae,pn
jo
mov
mov
cmpsl
inc
mov
aaa
test
inc
sbb
outsb
xchg
arpl
jmp
mov
loope
jne
mov
movsl
mov
sub
rolb
insl
int3
xchg
scas
stos
loope
mov
cltd
pop
sbb
mov
pop
xchg
mov
pop
xlat
fdivp
add
and
lods
push
mov
mov
add
hlt
std
dec
xchg
sub
add
or
addl
lcall
test
lcall
in
pop
out
scas
add
lods
dec
push
add
jo
mov
pop
or
add
imulb
lods
and
cmp
add
mov
daa
pop
loopne
mov
cmpl
sub
fidivrs
inc
add
cmpsl
or
aas
xor
mov
adc
movsl
ja
add
xlat
cmp
in
loope
add
cmpsl
or
lahf
mov
add
mov
add
add
jmp
add
add
cli
mov
mov
fcmovnu
push
lret
addr16
mov
dec
std
mov
sub
xchg
insb
mov
mov
adc
mov
add
xchg
jmp
mov
cwtl
cmpsl
xchg
mov
mov
mov
mov
sub
add
mov
add
add
pop
mov
push
in
lock
add
mov
add
or
push
int
add
push
imul
add
test
shll
jae
add
jmp
cwtl
imul
push
inc
call
pop
or
je
mov
mov
mov
and
mov
mov
divb
lcall
mov
icebp
out
jle
xor
movsl
mov
jge
add
mov
mov
sbbl
sbb
jb
mov
out
stc
xchg
clc
lret
into
incl
mov
and
cmp
ret
pop
dec
sub
pop
pusha
add
jmp
out
or
push
hlt
jb
mov
push
xchg
and
mov
xor
and
add
int3
test
add
add
fwait
jnp
stos
icebp
cwtd
sub
xlat
in
and
adc
mov
ljmp
aad
hlt
lods
adc
add
xchg
add
loop
mov
sub
rolb
mov
mov
xor
mov
dec
das
xlat
rolb
mov
pusha
add
mov
les
xchg
movsl
mov
inc
jecxz
add
iret
or
aam
fdivrl
cmp
push
mov
add
pop
fdivp
jno
add
push
movsb
rolb
mov
call
adc
mov
mov
mov
add
mov
in
out
push
mov
mov
add
loopne
mov
dec
mov
mov
and
mov
lods
pop
adc
mov
pop
push
movsb
and
and
mulb
mov
shll
mov
dec
push
popf
adc
mov
add
mov
cmp
scas
jb
mov
outsl
into
push
sbb
in
fmulp
xor
mov
loopne
mov
addb
sbb
push
das
out
divb
das
imul
add
push
jle
and
add
add
dec
gs
mov
repnz
fsts
lds
mov
in
inc
dec
mov
sub
cmc
add
mov
mov
and
push
add
bound
mov
ljmp
add
mov
mov
mov
jb
mov
xor
mov
call
lahf
data16
lahf
mov
xchg
fldcw
mov
push
push
sbb
mov
ja
xor
lea
andl
sub
repz
add
fcomp
test
dec
and
ja
sub
pop
mov
mov
mov
mov
lret
jl
mov
add
aam
add
mov
mov
movb
rolb
mov
add
nop
add
sbb
dec
inc
add
pushf
lock
xchg
add
jnp
and
mov
in
roll
ret
cmp
pusha
add
jb
mov
out
nop
add
mov
sub
lcall
xchg
xchg
add
mov
mov
mov
xchg
cld
xchg
test
les
bound
mov
xchg
xchg
mov
fcmovnb
add
sti
pusha
add
xchg
adc
mov
stos
ss
ja
mov
mov
movsl
xchg
mov
xlat
pop
jns
in
les
fdivs
ljmp
mov
add
lret
lret
jge
repnz
or
mov
inc
mov
jl
push
jle
testl
xchg
sub
or
in
add
mov
sub
rolb
adc
in
push
push
add
sub
aad
test
cmp
adc
sahf
ljmp
xorl
outsb
movsl
xchg
mov
mov
mov
jo
mov
xor
dec
xchg
push
sub
sbb
mov
add
add
or
and
adc
rolb
mov
add
std
int3
adc
mov
mov
movsl
lds
imul
lea
push
repnz
jecxz
dec
rolb
mov
lock
insl
movsl
xchg
add
mov
mov
movsb
lret
mov
sti
sbb
mov
add
inc
fnstcw
movsb
testb
xor
inc
xchg
push
xchg
add
mov
xor
mov
push
xchg
jge
add
sub
add
aas
jb
mov
add
aas
dec
call
mov
dec
adc
mov
scas
mov
outsb
jmp
add
fcmovu
out
mov
push
fldt
es
push
add
add
add
arpl
add
loope
rolb
mov
mov
outsb
adc
in
pop
adc
into
xchg
jno
and
pop
popf
mov
mov
dec
fsubs
add
and
dec
inc
test
adc
iret
or
dec
jg
out
xchg
jmp
cmp
lcall
rolb
mov
mov
push
inc
insl
xlat
push
add
sbb
inc
mov
xor
add
push
add
add
push
dec
mov
add
mov
mov
pop
test
jns
shrw
inc
sub
data16
pop
push
pop
or
jmp
insl
jae
jb
mov
rolb
mov
add
hlt
xchg
mov
mov
xchg
cs
add
jg
mov
push
jbe
rolb
mov
ss
xchg
enter
inc
outsb
xchg
or
xor
paddq
add
add
fisttpl
subl
nop
add
pop
bound
mov
outsl
xor
loope
push
cmc
pop
arpl
add
sub
add
add
add
test
inc
xor
pop
push
and
pushf
bound
mov
mov
push
addr16
mov
adc
push
and
mov
int
sub
fadds
std
mov
stc
mov
scas
and
mov
xchg
mov
cmp
outsb
stos
sub
clc
fstp
pusha
add
lahf
push
les
mov
mov
or
fadds
pop
jnp
mov
add
and
jo
mov
cld
aam
sbbl
sub
outsb
out
xchg
insb
cmp
fsubs
aas
jp
icebp
xchg
xchg
lods
cmpsl
pop
cmp
add
mov
test
xchg
int
pusha
add
jne
sub
aad
inc
pushf
add
mov
fistps
jne
add
mov
ds
add
xlat
pop
iret
cmpsl
pop
or
dec
push
sbb
clc
adc
mov
sahf
xchg
aas
mov
mov
push
add
fucomi
inc
cmp
out
pop
outsl
pop
and
lahf
icebp
into
and
scas
das
subl
ja
fs
push
push
mov
mov
in
jmp
lock
cli
mov
add
pop
or
mov
cli
jo
mov
push
dec
xor
fimull
dec
mov
or
out
imul
int
jmp
pop
int
xchg
lahf
ja
cltd
pushf
in
mov
add
imul
ljmp
scas
fsubs
xchg
ss
and
mov
scas
inc
test
add
or
cmp
je
cld
adc
mov
mov
sbb
enter
sub
xor
add
mov
movsb
sbb
ret
and
mov
mov
cmp
mov
and
movsb
pop
xchg
inc
sub
mov
stos
xchg
add
xchg
int3
pop
mov
mov
es
xor
add
cwtl
cli
into
sub
inc
pop
pop
daa
mov
rorl
fistpl
mov
add
je
sbb
xchg
inc
add
xchg
pop
sub
mov
dec
jb
mov
addb
push
lret
hlt
xchg
aas
push
out
sahf
push
push
push
leave
out
test
rcll
and
push
mov
pop
add
mov
add
adc
mov
jmp
enter
and
mov
add
popa
mov
mov
aas
movsl
sbb
or
sub
cld
pop
stos
xor
ds
or
add
movsb
addb
push
add
aam
mov
add
mov
cmp
addr16
fsubs
leave
bound
mov
cmc
in
xor
mov
popa
cmp
arpl
shrd
mov
imul
ljmp
stc
xor
sub
push
mov
xor
mov
scas
xchg
adc
mov
popf
sbb
rolb
mov
dec
xchg
mov
cmpsb
mov
testb
das
call
lret
scas
xchg
xlat
daa
sarl
loop
mov
rorl
mov
jb
mov
inc
out
mul
add
pop
dec
ss
bsr
je
and
fs
dec
adc
mov
repz
jb
mov
mov
fdiv
push
icebp
gs
add
dec
or
add
mov
push
dec
inc
stos
in
jne
sbb
scas
xchg
mov
mov
fidivs
mov
and
mov
add
mov
push
push
or
mov
and
add
mov
jb
mov
jb
mov
test
xor
mov
mov
mov
add
sbb
mov
fisubrl
sti
pop
inc
or
pop
add
mov
sbb
outsb
rolb
adc
sub
pop
and
fwait
push
and
mov
add
pop
int3
enter
pop
add
mov
sub
mov
add
add
cmpsl
mov
jge
push
cltd
in
xchg
jnp
das
imul
xor
dec
xchg
cmp
inc
cmpsb
int3
testl
xor
mov
add
xlat
jo
mov
and
mov
dec
mov
xchg
dec
int3
mov
add
push
inc
jae
mov
sbb
mov
scas
mov
in
adc
orl
sub
inc
push
add
cmpsl
push
fs
popl
mov
add
pop
pop
sbb
rolb
add
fwait
mov
xchg
inc
jmp
sub
dec
push
pop
ret
pop
jp
and
add
mov
rcll
jmp
mov
and
mov
pusha
add
lahf
mov
add
shrl
sbb
lret
ret
test
add
jmp
in
ja
add
mov
and
mov
sub
scas
jb
mov
insb
and
mov
adc
add
nop
add
or
addb
xchg
data16
loopne
mov
cmpsl
mov
in
push
and
cld
jo
mov
add
and
cmp
mov
push
adc
pusha
add
shufps
scas
ja
jno
add
and
lret
pop
ds
xchg
pop
lcall
mov
stos
mov
mov
mov
mov
ret
pop
mov
clc
lods
mov
loop
mov
inc
scas
mov
daa
pop
mov
in
add
rolb
mov
dec
aas
sub
cmp
or
lods
xchg
mov
aad
stos
or
aad
push
add
and
mov
add
gs
push
mov
add
ljmp
out
addr16
sti
movsb
mov
daa
push
cld
ret
into
inc
xor
aam
cmp
push
icebp
call
mov
mov
push
push
mov
add
lret
add
add
add
mov
fisubs
add
push
dec
lahf
fcmovnbe
iret
mov
insl
or
add
add
movsb
rsm
inc
add
clc
arpl
insl
fxch
dec
push
daa
aad
mov
add
lds
loopne
mov
jl
add
mov
aaa
fcomi
add
add
add
mov
mov
mov
cmp
add
xchg
gs
mov
xchg
inc
mov
cmc
and
mov
aaa
rcrl
sub
mov
mov
rolb
mov
cli
movsl
pop
pop
cwtl
cli
pop
nop
add
mov
ja
xor
repz
mov
loop
mov
mov
add
ja
push
adc
pop
mov
outsl
jmp
add
mov
add
mov
bound
mov
add
mov
add
pop
jae
pop
sti
pop
add
push
jp
pop
jp
push
add
out
jecxz
pop
cli
jge
mov
and
mov
sub
pop
mov
add
mov
push
aaa
sbb
cli
cmp
mov
add
outsb
enter
add
pop
jle
sahf
xor
mov
add
dec
ss
clc
inc
jmp
add
add
mull
std
ss
leave
ljmp
add
clc
dec
movsb
outsl
clc
lods
and
mov
rolb
mov
add
sbb
mov
cmpsb
addb
rolb
xor
jae
lods
in
mov
lods
push
xchg
jg
add
pop
neg
mov
add
mov
cmp
mov
inc
add
add
push
out
mov
mov
add
pop
in
sub
or
cmc
adc
add
fcoms
add
loop
mov
pop
in
add
xchg
jmp
das
aas
mov
lcall
pop
in
add
cmp
mov
call
in
ja
add
push
fsts
pop
arpl
pusha
add
sbb
dec
pop
cli
lods
js
and
addl
add
add
push
add
cmpsl
mov
add
mov
scas
push
aam
jmp
mov
add
movsb
or
dec
ret
iret
push
pop
je
add
mov
pushf
sub
dec
stos
into
cmp
fistps
in
xchg
add
scas
repz
dec
orl
push
pop
bound
mov
xlat
pop
js
ljmp
dec
add
add
stos
adc
stos
test
mov
mov
jp
sub
pop
imul
inc
pop
arpl
jecxz
fs
test
aas
stos
jl
lahf
xchg
xor
mov
enter
test
sub
gs
jl
sub
int3
push
add
add
sub
add
mov
mov
cmp
fisttps
inc
aas
and
fsubs
lcall
xchg
mov
sbb
add
mov
add
mov
mov
aam
scas
mov
dec
mov
and
mov
std
pop
pushf
js
adc
sub
cli
clc
sbb
out
andl
lea
js
add
sub
jg
stos
aaa
stos
dec
add
xor
add
add
imul
mov
mov
jnp
add
push
add
mov
jne
iret
and
jl
ss
enter
imul
push
andl
add
mov
mov
inc
add
mov
mov
addb
jle
cmp
aaa
cld
in
out
add
cld
inc
sub
rcrl
ljmp
mov
dec
mov
int3
aaa
out
add
movsl
test
mov
mov
jno
test
ljmp
lahf
div
add
xchg
divb
xchg
cltd
or
pop
das
out
pop
push
adc
mov
mov
iret
cmp
add
mov
lahf
or
fisubrl
ret
inc
add
imul
hlt
loope
or
iret
xchg
xchg
mov
out
xor
popf
les
lock
movsb
jecxz
dec
mov
add
dec
mov
mov
into
mov
fcom
dec
adc
mov
push
add
mov
mov
inc
insl
xor
adc
std
test
adc
mov
pop
mov
cmpsb
inc
pop
mov
inc
stos
insb
sub
xchg
add
out
cltd
arpl
mov
add
adc
add
sub
shll
mov
inc
popa
mulb
lods
xchg
jno
push
call
cs
je
dec
insl
or
iret
outsb
negb
mov
adc
inc
rolb
rolb
mov
xchg
scas
mov
cmp
aad
mov
inc
add
popa
nop
add
loopne
mov
sub
test
sub
loope
sti
pop
jle
jnp
add
push
or
add
mov
outsl
cli
inc
add
sbb
inc
test
cmp
inc
mov
stos
inc
add
int3
test
add
mov
add
jge
ret
mov
xchg
xchg
mov
addr16
push
add
adc
mov
mov
add
lret
mov
cltd
jmp
jo
mov
test
add
adcl
cmp
push
add
xor
sub
cmp
mov
fsubrl
mov
sahf
out
inc
mov
sub
adc
dec
lcall
cwtl
pop
xchg
repz
xchg
je
sbb
xchg
mov
les
cmp
mov
inc
es
outsl
pusha
add
in
dec
movb
aaa
jbe
and
mov
lock
push
mov
rolb
mov
cmpsl
mov
jb
mov
sub
adc
mov
dec
or
movsl
ret
sbb
outsb
cmp
push
fwait
add
mov
xor
mov
popa
adc
mov
jns
pushf
adc
or
mov
add
xlat
loop
mov
out
add
mov
inc
add
fisttpll
cmpsb
rolb
push
popf
ljmp
mov
and
mov
jge
mov
dec
or
iret
test
lret
dec
jg
cmp
fwait
or
mov
xlat
and
or
jae
clc
xchg
or
cmp
fsub
add
mov
add
add
mov
mov
call
mov
and
mov
scas
jp
xchg
xor
rcrl
and
enter
cmc
xor
sbb
push
adc
les
imul
call
bound
mov
mov
push
push
jl
jne
add
loop
mov
icebp
jbe
add
mov
data16
sbb
hlt
ss
rolb
mov
int3
sub
dec
xchg
add
cmpsb
xlat
mov
sbb
stos
sub
mov
mov
pop
and
mov
jbe
fisubl
or
mov
sub
repnz
add
add
jl
inc
rcrl
subl
mov
popl
mov
outsb
subl
sbb
mov
mov
add
das
stos
mov
daa
loop
mov
movl
mov
icebp
xor
out
push
pop
or
mov
jge
add
int3
adc
fildll
push
jns
jp
mov
fadd
sub
add
mov
dec
mov
arpl
fs
mov
ljmp
loop
mov
data16
adc
mov
cmpsb
push
int3
fcomip
int
jmp
add
daa
ljmp
add
mov
push
fcomps
mov
sbbl
loope
lds
add
cmpsl
jne
lret
fmull
adc
pop
andl
dec
repnz
inc
nop
add
add
imul
jmp
add
je
fs
mov
insb
sbb
ljmp
xchg
jns
leave
jbe
add
mov
cltd
add
mov
stos
push
or
lahf
inc
cld
wrmsr
add
inc
rolb
mov
push
dec
mov
mov
add
pop
rolb
mov
inc
fwait
xchg
push
mov
fs
xchg
xchg
inc
leave
imulb
fistps
cli
sbb
inc
repnz
rolb
xchg
dec
insl
fisubs
add
jns
addb
inc
ss
jge
jne
aam
or
lret
nop
add
dec
xchg
add
mov
push
xchg
scas
cmpl
daa
dec
pop
les
add
loop
mov
sarl
dec
fmull
inc
mov
jl
jg
add
testb
add
add
stos
mov
add
mov
xor
mov
test
cli
rolb
mov
mov
fidivs
add
outsl
pop
data16
mov
cmp
mov
add
xor
mov
std
push
sub
xchg
add
push
dec
and
mov
add
rolb
mov
addr16
dec
ss
ficomps
adc
add
mov
mov
adc
mov
or
add
push
mov
pop
addb
and
fwait
sub
adc
hlt
out
sub
inc
jbe
add
add
cmp
stos
xchg
movsb
jns
jmp
in
hlt
in
xor
mov
xchg
icebp
int
add
add
mov
scas
aas
fsub
sbb
add
mov
aaa
jge
jnp
mov
mov
jp
push
jp
add
mov
mov
add
mov
sbb
inc
imull
sub
adc
mov
mov
lods
push
pop
add
mov
pop
jge
add
lea
jmp
mov
mov
into
addb
stc
jp
pushf
ficoms
xor
mov
mov
push
mov
jecxz
xchg
xchg
shll
rolb
mov
jg
add
lods
mov
mov
mov
fisubrl
xchg
add
xchg
sbb
sub
mov
push
imulb
rorl
inc
clc
scas
test
sti
dec
push
les
into
mov
cmp
repnz
addb
pavgw
insb
ss
xchg
int
xchg
mov
fidivrs
push
adc
mov
cli
add
jnp
mov
inc
lods
dec
mov
xchg
add
pop
leave
in
add
push
pusha
add
dec
lret
or
adc
pop
cli
push
aaa
movsb
and
int
aaa
jl
pop
mov
loope
adc
add
mov
addr16
mov
insw
xchg
fidivs
add
jmp
mov
movsb
mov
add
push
push
in
mov
fstpt
bound
mov
add
rolb
cmpsl
into
andl
mov
cmc
xlat
pop
arpl
test
cmc
cmp
pop
cmpsb
loopne
mov
mov
imul
lret
push
xchg
add
cmp
sbbl
add
add
int3
daa
cmpsl
fsubl
ret
retw
scas
mov
jp
add
mov
mov
cmp
cli
pushf
add
push
jb
mov
stos
inc
aas
in
mov
add
sarl
and
inc
aaa
pop
lcall
mov
mov
ss
scas
lods
test
xchg
sub
out
lea
push
push
add
stc
adcl
dec
je
add
scas
cmp
mov
mov
repnz
gs
rolb
mov
inc
add
aaa
scas
mov
jle
dec
iret
loopne
mov
aas
inc
sub
mov
xchg
push
jo
mov
call
andl
pop
inc
add
nop
add
movsl
dec
sub
cmp
pushl
add
jecxz
and
addb
xlat
jae
aad
dec
xor
xor
mov
adc
mov
or
addb
icebp
fcoms
pushaw
add
mov
push
je
daa
imul
icebp
add
pop
lock
mov
pop
popa
out
lret
fucomp
rcrl
jae
and
mov
cmp
add
mov
dec
cmp
fstpl
and
mov
fistps
inc
xor
mov
mov
pop
imul
imul
mov
push
inc
add
add
outsb
outsl
dec
pusha
add
ret
test
add
popf
xchg
jl
addb
ret
lods
mov
lcall
sub
xchg
scas
pop
loop
mov
and
mov
dec
rorl
fwait
pop
cmp
lcall
xor
sub
lahf
pop
mov
mov
add
mov
push
fistl
add
jnp
mov
in
enter
jp
adc
sbb
adc
mov
mov
mov
pusha
add
xchg
int3
add
mov
or
xchg
jmp
dec
sahf
bound
mov
mov
fwait
loope
mov
add
mov
add
mov
add
add
lock
mov
adc
mov
mov
push
sub
add
sub
mov
mov
mov
mov
mov
repnz
mov
dec
push
jbe
jb
mov
add
mov
add
adc
rolb
jl
add
or
icebp
xchg
push
rolb
mov
mov
test
jae
sub
mov
push
add
inc
mov
xchg
add
add
add
and
add
out
adc
cmp
sub
xchg
or
add
inc
add
mov
cmp
lods
xchg
imul
mov
and
ret
cmp
dec
adc
lahf
ja
pop
mov
sub
aas
push
xchg
mov
mov
mov
ret
sub
push
xchg
je
aaa
xchg
stc
inc
add
aas
jmp
add
mov
jnp
xor
xchg
xchg
in
sub
add
into
mov
mov
repnz
cmp
nop
add
cmpsb
dec
xchg
xor
testb
add
add
nop
add
xor
mov
leave
lock
repz
clc
mov
clc
add
stos
mov
push
lahf
jecxz
add
dec
scas
xchg
add
xchg
loop
mov
lea
add
lock
int
lods
push
jns
rolb
mov
xchg
push
fldt
mov
pusha
add
popf
addr16
scas
addb
or
ret
cmc
add
mov
mov
icebp
mov
aaa
les
cmc
scas
mov
pop
sbb
and
mov
popf
xor
aas
call
lret
or
xor
add
jp
add
mov
add
mov
out
pop
mov
cltd
sub
mov
jns
jg
mov
mov
push
jge
jne
das
adc
mov
add
test
mov
push
jae
push
pop
push
pop
stos
xchg
add
rolb
mov
pop
enter
daa
aaa
jg
pop
sbb
push
push
adc
mov
add
in
dec
loope
fwait
dec
fimull
sbb
jae
add
stos
adc
gs
test
pop
and
les
ds
add
dec
mov
add
mov
into
addb
ret
push
int
add
mov
mov
addb
aad
jmp
adc
dec
sbb
add
add
and
in
dec
or
in
call
mov
add
das
jmp
popf
xlat
inc
add
outsb
push
mov
add
xor
lods
adc
push
scas
cmp
inc
int3
mov
mov
aam
and
std
jo
mov
adc
jle
or
mov
dec
fwait
popf
add
sub
bound
mov
mov
lea
and
mov
mov
mov
fistl
push
add
mov
repz
xchg
mov
es
movb
cwtl
fsubr
mov
add
je
cmpsl
mov
out
andl
mov
jp
rolb
mov
sub
mov
cmp
stos
xchg
push
lahf
and
mov
cmp
lcall
jns
pop
mov
mov
sbb
add
mov
mov
dec
or
les
daa
xchg
add
test
push
add
pop
cmpsl
hlt
add
add
int
mov
add
push
jb
mov
repz
add
or
fcmovbe
jecxz
and
mov
imul
mov
add
flds
push
mov
pop
in
jl
jl
rolb
add
ret
xchg
iret
fwait
jb
mov
mov
cmp
xor
inc
repz
mov
scas
mov
mov
push
dec
cld
incb
divl
mov
pop
push
push
add
cmp
idivl
mov
xlat
outsl
rcll
js
addr16
add
add
ja
clc
sti
cmp
cmp
pusha
add
lret
hlt
addr16
xor
popf
push
mov
rorl
inc
cli
inc
add
mov
or
cmp
icebp
jmp
call
aas
add
pop
call
loope
into
pop
test
xor
mov
xchg
add
add
and
mov
xchg
stos
nop
add
outsb
pop
mov
nop
add
sbb
add
std
xchg
mov
mov
pushf
aam
dec
bound
mov
adc
addb
aam
add
dec
rolb
mov
aam
xor
mov
push
add
scas
xor
mov
add
lret
add
push
cwtl
cmp
sub
stos
movsb
inc
addr16
mov
add
sahf
mov
scas
lret
out
nop
add
cmp
cwtl
lret
mov
mov
jecxz
test
aad
pop
test
aas
sbb
aad
cld
dec
in
cli
add
jo
mov
add
add
jmp
cwtl
es
bound
mov
pop
roll
add
mov
jmp
add
aaa
sub
in
push
and
or
gs
push
jecxz
test
mov
fists
in
lahf
nop
add
sub
mov
xchg
jnp
je
adc
aad
inc
int3
in
les
dec
mov
mov
pop
movsb
rolb
mov
out
arpl
cmp
add
add
fisubs
test
mov
add
sar
sub
push
arpl
testl
xor
cmp
add
stos
lcall
add
cld
push
std
repz
gs
ja
insl
adc
je
fldenv
add
push
sub
add
sbb
lcall
mov
popa
push
add
out
out
mov
cmpsb
add
mov
js
mov
mov
push
add
sahf
test
inc
adc
dec
gs
mov
bound
mov
add
inc
add
ss
mov
or
xchg
insb
shrl
mov
add
add
mov
repnz
sub
xchg
pop
insl
inc
add
cmp
pushf
dec
or
test
dec
int3
and
data16
pop
sub
cltd
enter
imul
jmp
cmpl
add
push
sbb
loop
mov
scas
aam
jns
add
shr
dec
pop
stos
sahf
dec
pusha
add
cmp
add
mov
mov
add
mov
jg
aam
stos
faddl
adc
rolb
mov
add
gs
test
jnp
rorl
outsb
test
outsb
or
add
aam
pusha
add
jecxz
add
add
push
fidivl
add
mov
mov
mov
push
add
mov
sub
jmp
mov
out
insb
divb
xlat
sub
mov
add
add
mov
mov
ret
xor
ret
rcll
fs
scas
test
pop
clc
inc
addb
mov
in
pop
xchg
add
mov
sbb
add
dec
movsb
mov
int3
xor
mov
xchg
jmp
lahf
popf
pop
inc
cmp
data16
sahf
pop
ljmp
xchg
push
fildll
lcall
pushl
mov
outsl
mov
push
mov
addb
inc
jg
aaa
mov
notl
push
add
mov
push
add
jns
adc
and
imul
lock
into
adc
iret
or
aaa
lods
nop
add
fcmovb
cmpsl
inc
push
jno
nop
add
mov
inc
xlat
cmp
add
pushf
jg
inc
push
adc
and
mov
mov
push
add
daa
mov
std
or
pop
pop
jb
mov
inc
add
int
jmp
std
xor
ficoml
cmp
cmpsb
mov
jb
mov
outsb
outsb
idivl
imul
test
push
push
xchg
xor
notl
push
sbb
mov
add
jnp
in
mov
add
jmp
rcrl
enter
sbb
aad
push
rolb
mov
push
add
pop
xchg
push
repnz
push
xchg
add
add
add
dec
scas
icebp
xor
mov
mov
aas
cmp
lret
test
fstpt
loope
adc
mov
shll
mov
xor
add
movsl
outsl
iret
cmp
into
lods
dec
loopne
mov
dec
ja
and
mov
ret
mov
sbb
addr16
cmp
loope
cmc
mov
dec
mov
sbb
mov
pop
mulb
loope
inc
add
adc
add
add
mov
mov
add
in
jno
push
scas
xor
mov
mov
jbe
sbb
xlat
jnp
pop
jbe
add
sbb
mov
xchg
addb
mov
xlat
cmpsb
pushf
mov
mov
cli
dec
mov
mov
add
mov
gs
mov
add
addb
push
jmp
in
cmp
in
pop
aaa
and
mov
pop
pop
sahf
mov
in
pop
mov
dec
adc
mov
out
in
pop
mov
add
lret
add
or
cli
inc
test
rolb
mov
jmp
pusha
add
aaa
inc
pushf
lds
pop
in
popf
cmp
lods
mov
mov
add
mov
add
inc
fstpl
or
or
mov
add
je
push
clc
mov
fcoml
pop
pop
add
mov
jne
and
aam
and
mov
ret
cmp
jae
jo
mov
mov
pushf
into
jecxz
jmp
sbb
xchg
jae
imul
daa
dec
aam
std
fwait
push
inc
add
cmp
jecxz
loopne
mov
pop
dec
hlt
ljmp
cmpsb
lret
out
cmp
push
leave
jg
and
inc
xchg
add
sub
fsub
pop
int
sub
fildl
nop
add
out
in
call
iret
pop
lds
push
add
push
fwait
data16
rorl
pusha
add
hlt
addb
and
mov
mov
xor
mov
shll
add
mov
repz
mov
fsts
pop
loop
mov
sahf
pop
add
loope
dec
test
dec
mov
add
add
addb
and
mov
xor
mov
lods
push
add
or
push
sub
sbb
pushf
fldl
rolb
mov
fildll
add
das
loope
add
mov
mov
push
jno
mov
je
add
in
bound
mov
ja
stos
lret
xchg
movl
xchg
add
add
arpl
inc
or
mov
inc
add
enter
inc
add
mov
out
daa
popa
mov
insl
fsts
insb
xchg
xchg
lock
add
add
mov
jecxz
sbb
fcomps
popf
in
mov
inc
loop
mov
push
pop
xor
std
push
dec
pop
dec
je
or
mov
add
mov
xchg
int3
icebp
and
mov
add
sbb
push
enter
mov
sbb
icebp
loop
mov
adc
add
add
lock
fnstcw
inc
loop
mov
push
lods
loop
mov
mov
pop
jecxz
inc
mov
dec
sbb
xor
les
sbb
mov
jae
jns
bound
mov
popf
aaa
call
test
leave
ljmp
jp
lods
xchg
jo
mov
repz
mov
cmp
adc
rolb
mov
lret
push
cwtl
lods
adc
mov
jmp
adc
mov
mov
push
mov
mov
pop
inc
jmp
imul
adc
test
cmp
add
lds
mov
mov
mov
je
mov
mov
inc
lahf
pop
fstl
add
je
add
push
stos
dec
mov
enter
popa
mov
mov
add
clc
mov
les
add
into
je
mov
mov
add
xchg
test
mov
mov
push
scas
mov
les
add
cmpsb
xor
xchg
test
mov
shl
dec
das
or
cmp
xor
outsl
outsl
push
negl
add
cltd
jle
xor
bound
mov
cmc
mov
bound
mov
dec
das
les
xchg
ret
aad
add
mov
xor
xchg
add
add
adc
imul
mov
adc
mov
add
mov
outsb
sub
arpl
add
and
mov
xor
mov
aad
rolb
mov
mov
add
fnstcw
mov
xchg
or
mov
aad
add
jnp
and
clc
dec
addb
adc
movsl
divl
cmp
xlat
jnp
bound
mov
push
and
jl
aaa
push
arpl
stc
mov
and
fistps
cmpsb
cmc
pop
jle
bound
mov
outsb
out
add
add
xorl
add
aam
or
inc
imul
outsb
mov
mov
adc
stos
sub
add
loopne
mov
mov
mov
ljmp
cmpsb
hlt
lret
sub
add
add
stos
stos
dec
mov
dec
lahf
rolb
cwtl
lea
vmovntps
sbb
jbe
mov
or
sub
imul
mov
negl
xchg
add
mov
les
mov
imul
add
mov
mov
lods
xchg
rolb
mov
add
lcall
mov
cmp
in
push
aad
add
or
stos
xlat
ljmp
mov
add
std
mov
popa
inc
add
sbb
add
std
arpl
mov
outsl
lods
fwait
rolb
shr
add
insl
rolb
lods
jmp
cs
ja
fstpt
push
add
mov
xor
repz
loop
mov
or
add
mov
test
insl
adc
pushf
mov
es
call
or
test
add
mov
adc
cmp
int3
mov
dec
push
mov
cmp
cltd
lock
movsb
push
jae
jg
sti
repz
cld
mov
pop
pop
repnz
mov
je
mov
mov
and
push
subl
sub
add
sub
mov
push
add
scas
out
mov
mov
mov
push
inc
jne
add
mov
lds
and
inc
add
and
mov
mov
or
addr16
xor
xchg
cmpsb
xchg
push
cmp
loop
mov
lcall
sbb
mov
sub
and
dec
add
mov
add
into
sbb
mul
adc
test
clc
jmp
push
add
add
aam
add
lea
les
add
add
mov
add
mov
mov
inc
and
or
mov
add
jb
mov
pop
call
in
add
mov
icebp
addb
xchg
sahf
sti
jp
loope
popf
xchg
push
int
add
out
and
push
stc
add
mov
ret
call
xchg
mov
jg
mov
pusha
add
test
sbb
int3
in
mov
mov
mov
sbb
xor
add
mov
ja
sti
push
jnp
xlat
movq
lea
popf
push
add
mov
mov
mov
loop
mov
roll
test
add
and
vpsubusb
mov
cmp
movsl
fnstsw
jp
add
mov
xor
xchg
enter
addr16
push
inc
add
cmp
gs
add
mov
adc
mov
mov
dec
outsb
int
out
ret
sub
add
push
sub
adc
test
outsb
movsl
mov
inc
add
inc
mov
add
popf
mov
sub
add
insb
and
call
xchg
adc
mov
dec
mov
mov
add
fcmovu
testb
adc
xchg
mov
mov
pop
data16
lock
mov
lahf
adc
popf
dec
icebp
lret
mov
pop
mov
mov
add
xchg
repnz
adc
repnz
repnz
xchg
or
or
cmp
cli
das
das
ds
pop
and
adc
inc
mov
mov
push
popf
dec
mov
jecxz
fisubs
repz
mov
push
roll
je
add
add
add
mov
aaa
pusha
add
movsl
mov
lcall
nop
add
repz
add
sub
inc
movsb
aas
or
adc
add
cld
ret
jp
pop
mov
xchg
lock
xchg
mov
sarl
pushf
pop
adc
mov
adc
push
mov
mov
inc
rolb
mov
mov
stos
or
xor
sbb
jae
and
mov
movsb
int
fs
jmp
insb
loopne
mov
add
cmp
into
mov
cwtl
aam
aad
lahf
out
xchg
les
ja
add
xor
add
inc
add
loop
mov
inc
add
mov
cltd
push
add
int
pop
and
mov
inc
dec
xlat
cmp
add
repnz
outsl
aaa
mov
sahf
jne
nop
add
or
mov
jae
add
add
repz
mov
add
push
push
adc
rolb
jg
pop
imul
jo
mov
test
addb
jl
fwait
inc
imul
insl
sbb
xchg
cmp
add
aad
add
call
lahf
dec
aad
add
add
add
ss
jmp
movsb
aad
lret
xchg
js
loopne
mov
hlt
jecxz
adc
mov
idivl
fisubl
add
sub
aas
add
mov
test
in
in
add
mov
pusha
add
repnz
add
cmp
iret
out
aam
or
ror
aas
and
pop
insl
in
into
out
jbe
mov
cmp
add
mov
cmp
stc
ret
fidivl
add
mov
jb
mov
adc
mov
add
mov
add
cli
or
pop
xor
fnclex
add
push
stc
aad
add
and
mov
push
mov
aam
mov
cwtl
sahf
pop
adc
dec
jno
imul
je
add
dec
rolb
xor
add
xor
pop
icebp
gs
xor
adcl
mov
sub
dec
in
add
add
fdivrl
into
addb
xchg
lcall
pop
test
mov
fs
add
add
jmp
xor
mov
xlat
or
aad
adc
or
jge
repz
nop
add
int3
in
sub
enter
xchg
shll
mov
stos
movsl
sub
std
mov
dec
outsb
mov
dec
gs
or
mov
sbb
push
arpl
inc
sahf
sbb
out
cmp
js
stos
jo
mov
fldl
push
and
stos
dec
xchg
add
add
icebp
jne
popa
add
mov
adc
addr16
add
xchg
jle
add
xor
mov
pop
cmc
mov
cmpl
ljmp
dec
jno
xchg
or
or
and
jmp
test
push
imul
mov
sub
lods
out
aas
pop
or
ret
sbb
or
add
loope
out
and
add
dec
jmp
mov
jo
mov
xor
mov
xchg
or
std
gs
and
add
xor
stos
es
add
mov
inc
add
decb
mov
mov
add
mov
cwtl
dec
out
push
lcall
sub
dec
test
dec
ret
or
mov
add
repnz
sbb
aad
fisubrs
push
cmp
sub
scas
xchg
inc
add
mov
jg
add
mov
in
jns
push
rolb
movsb
xchg
add
jnp,pn
jp
or
add
xchg
mov
cmp
lock
sub
jbe
aas
addb
push
add
enter
mov
xor
repz
and
add
loop
mov
jae
repnz
add
sub
jmp
push
lcall
das
mov
dec
std
addb
bound
mov
mov
add
add
add
and
mov
insl
addb
mov
add
clc
dec
cld
dec
notb
add
cmp
mov
mov
mov
test
cmp
add
mov
add
js
add
xchg
add
pand
insl
imul
mov
cmp
enter
and
das
bound
mov
add
loopew
dec
js
cltd
popa
push
and
push
add
fsts
jbe
mov
or
lret
jg
cmpsb
stos
imul
xchg
aaa
jae
add
xor
mov
add
mov
mov
push
add
adc
jbe
shll
jg
scas
imul
jb
mov
mov
sub
add
pop
aaa
es
or
pop
rolb
mov
add
cmp
sub
loopne
mov
add
add
add
loopne
mov
xchg
add
movsl
int3
inc
cmp
ljmp
pop
jne
scas
xor
mov
add
mov
add
sub
mov
push
gs
add
arpl
push
sahf
in
fs
add
add
mov
out
fisubrs
mov
outsl
out
call
mov
sbb
xchg
push
cmc
pop
aas
jbe
inc
imul
add
adc
movsb
sbb
leave
cmp
sbb
jns
pop
in
lock
add
xchg
out
jg
divb
cmpl
movsl
dec
pop
jae
xchg
data16
cld
sbb
add
data16
push
jns
add
cmp
add
rolb
imul
sahf
shll
int
insb
out
xchg
cs
fistl
cmp
imul
pop
jae
push
add
sti
rolb
mov
popa
or
xor
pop
inc
add
out
dec
xor
mov
xchg
sbb
mov
call
loopne
mov
jmp
mov
leave
addr16
sub
mov
outsb
add
dec
cs
add
inc
outsl
into
push
mov
jnp
inc
pop
shrl
push
int3
jnp
add
ret
jge
jge
xchg
insl
push
add
ror
jns
movsb
inc
xchg
icebp
or
out
xchg
inc
mov
int3
mov
mov
mov
bound
mov
mov
mov
adc
int
in
rolb
mov
mov
add
je
jno
add
mov
jb
mov
xor
je
push
arpl
aam
addb
xchg
adc
mov
add
pop
xor
mov
fisubrl
loop
mov
cld
in
outsb
je
adc
mov
int
fldl2e
jo,pt
mov
adc
insb
sti
or
push
mov
pop
jecxz
stos
add
mov
arpl
mov
lea
sahf
sub
add
mov
dec
inc
mov
inc
add
mov
mov
mov
lcall
mov
cld
idivb
push
add
and
inc
add
mov
add
aaa
ja
add
mov
dec
jp
push
xor
lret
mov
in
xor
loopne
mov
sub
xchg
cli
push
mov
aam
cmp
test
jmp
jge
in
jp
in
aam
and
dec
sub
ss
imul
mov
xchg
xor
jb
mov
mov
mov
popf
daa
cltd
add
xchg
add
nop
add
xor
in
in
dec
lahf
inc
fdivrs
jmp
add
mov
icebp
seta
mov
mov
add
sbbl
add
lods
adc
add
or
fsts
addb
ds
sbb
imul
push
add
lods
mov
ud1
in
cltd
arpl
adc
mov
stos
iret
jecxz
repz
aaa
or
fnsave
push
test
out
add
push
lret
jbe
xchg
ss
add
les
imul
xchg
sub
test
mov
sub
or
mov
test
fiaddl
pop
fs
and
mov
in
add
scas
mov
dec
mov
lahf
pop
cltd
dec
mov
adc
mov
fiadds
adc
add
das
lea
mov
pushl
add
test
or
add
add
mov
pop
mov
je
sbb
inc
cltd
jp
clc
cs
push
add
cli
mov
cld
movb
mov
xor
mov
jecxz
outsl
outsl
mov
lret
or
mov
add
xlat
lret
icebp
stc
hlt
cmc
adc
cli
lea
inc
push
add
mov
pop
mov
sbb
add
add
lea
sub
inc
enter
push
push
and
mov
add
popf
ret
scas
aaa
je
fcmovbe
lods
add
xchg
mov
mov
outsb
or
mov
add
inc
arpl
aad
js
add
sub
mov
mov
add
add
jno
aam
loop
mov
je
mov
add
js
add
mov
add
ja
jge
push
add
out
fdivl
add
ljmp
lcall
pop
xlat
sbb
add
cmp
mov
add
es
add
paddusw
int3
scas
dec
mov
mov
add
add
arpl
iret
arpl
mov
xor
cmpsb
addb
fwait
dec
test
ljmp
add
mov
les
add
push
add
inc
fidivrl
cmpsl
repz
mov
xchg
xor
mov
add
test
out
mov
mov
lea
jns
aad
mov
dec
and
cltd
dec
outsb
insl
mov
jmp
add
adc
lea
mov
mov
mov
pop
in
add
or
rolb
inc
add
push
in
inc
or
out
xor
pop
jle
cmp
repnz
pop
sbb
xchg
add
add
pop
adc
imul
mov
popf
mov
addb
inc
movsl
into
cld
dec
pop
sbb
mov
cmc
push
mov
shl
fsubs
mov
mov
xchg
add
je
xchg
cmpsl
out
ficoms
add
mov
ret
sbb
les
fisttpl
rolb
mov
ds
addb
dec
data16
cld
mov
add
and
xchg
lods
test
xor
bound
mov
ss
add
dec
lock
cmpsl
iret
nop
add
cmp
sbb
mov
xchg
dec
out
pusha
add
add
out
cmp
push
loope
add
xchg
mov
mov
push
mov
jns
fisubl
and
scas
decl
or
lds
fwait
or
add
push
pushf
xor
pop
dec
pop
or
adc
adc
mov
rcrl
xlat
mov
fucomi
popa
pop
lcall
add
das
cmp
push
outsl
fisttps
cmc
clc
cmp
pop
adc
cmp
and
push
xchg
rolb
mov
jmp
push
mov
inc
lcall
ret
imull
xchg
mov
xchg
mov
mov
out
cli
test
stos
push
add
addb
add
inc
sub
cltd
xor
add
mov
dec
mull
add
mov
inc
add
adc
leave
stos
data16
or
data16
cli
lahf
popa
aad
add
test
dec
push
ffreep
and
dec
xchg
ljmp
adc
out
jl
loopne
mov
adc
add
cs
scas
xchg
sub
js
add
cmp
xchg
inc
push
push
xor
cmp
sub
mov
loop
mov
jp
jns
addr16
pusha
add
jns
sbb
mov
movsb
int3
add
lcall
add
test
sub
ja
jno
popa
mov
pop
adc
xor
lock
out
inc
add
popf
arpl
std
push
xchg
push
int
ds
mov
push
cmc
add
int
dec
or
add
dec
jae
scas
dec
mov
add
loop
mov
mov
lcall
add
dec
cmp
adc
mov
cmp
in
dec
scas
xor
mov
fwait
je
add
cwtl
mov
pop
ret
inc
arpl
cmp
add
mov
roll
or
sub
or
jo
mov
popa
sbb
sbb
insb
dec
clc
in
loopne
mov
adc
mov
idiv
mov
sub
add
dec
mov
clc
mov
test
xchg
lods
xchg
pop
jle
call
dec
push
dec
insl
push
or
jns
add
cmc
pusha
add
add
mov
scas
dec
jecxz
and
mov
imul
mov
add
ja
xor
ljmp
mov
mov
out
clc
inc
pop
addb
add
inc
roll
or
bound
mov
push
push
dec
dec
std
mov
xchg
shrl
add
mov
add
mov
jne
mov
xchg
add
push
loop
mov
lret
les
lods
insl
ret
mov
in
mov
push
imul
add
or
hlt
clc
dec
xchg
icebp
sub
mov
lods
pop
xchg
sub
test
add
jmp
add
addb
mov
adc
fcomps
add
add
popf
rcll
movsl
jmp
xor
mov
add
mov
adc
add
mov
das
lock
and
mov
mov
dec
iret
push
adc
dec
roll
mov
shll
fnstcw
in
add
pop
dec
pop
adc
lea
add
jl
enter
dec
dec
fiaddl
loop
mov
push
mov
jmp
sub
add
add
xlat
mov
adc
add
add
inc
loop
mov
mov
push
mov
sbb
cmp
repz
clc
repz
xor
add
cs
fmul
xchg
js
fdivl
mov
or
mov
je
add
mov
bound
mov
ljmp
pusha
add
lds
jne
add
mov
add
aam
push
and
mov
add
fucomp
mov
push
movsb
jp
xor
mov
pushl
in
pop
dec
add
add
add
outsb
sub
add
mov
cmpsb
and
int3
push
adc
mov
add
mov
aas
mov
mov
mov
add
add
outsb
inc
inc
add
pusha
add
enter
sub
pop
insb
shrl
out
add
mov
fcmovnb
inc
add
xlat
movsl
shl
push
ja
dec
and
mov
in
icebp
push
adc
aas
and
add
cmpsb
mul
add
xor
mov
add
pushf
xlat
pop
std
fcmovu
lock
add
mov
add
mov
pop
clc
adc
pop
xor
push
add
mov
mov
xor
push
jge
mov
pop
and
mov
insl
int
xchg
adc
mov
pop
ljmp
stos
test
ret
in
push
ds
addb
fsub
add
cmp
sbb
dec
dec
out
cmp
pop
mov
sbb
or
push
push
push
dec
cmp
add
xchg
add
mov
add
mov
in
popa
mov
mov
lods
popf
in
daa
into
mov
loopne
mov
add
sbb
cs
or
add
add
mov
and
aad
add
jo
mov
sub
add
jno
xchg
add
pop
cltd
pop
xor
lock
out
pop
cmp
sahf
xchg
add
add
dec
adc
mov
and
mov
mov
mov
sbb
push
ret
sbb
jp
xor
cmpl
and
mov
pop
add
add
out
outsb
shll
mov
fcmovnb
cmpsl
lret
add
fs
xor
mov
lock
jg
inc
scas
clc
or
mov
daa
fldt
fnstenv
and
mov
addb
dec
sahf
enter
and
arpl
add
lea
lods
xchg
push
and
inc
add
cld
js
pop
xor
mov
cli
cmp
nop
add
mov
mov
add
ret
pop
iret
stos
sbb
mov
into
cmp
adc
mov
add
pop
mov
add
les
pop
addb
lock
outsb
pop
push
data16
mov
xchg
and
mov
jns
cmp
xlat
push
movsb
data16
add
or
add
test
fisttpl
shl
mov
cwtl
mov
mov
mov
mov
pop
xchg
and
mov
push
xchg
popa
mov
dec
insb
fistl
daa
jl
mov
das
sub
rolb
xchg
pusha
add
sub
and
push
mov
outsb
cltd
dec
push
cmp
mov
mov
data16
adc
idiv
xchg
outsl
xchg
repz
mov
push
into
sub
add
xor
mov
add
mov
outsl
movzbl
add
fldenv
hlt
xor
scas
push
outsb
mull
jbe
int3
int3
fimuls
mov
add
add
mov
mov
mov
pop
arpl
lret
add
mov
outsb
cltd
and
mov
push
mov
and
mov
jno
inc
addr16
lahf
push
lods
inc
push
mov
adc
mov
mov
es
psubsb
push
ljmp
add
cwtl
in
mov
mov
xlat
dec
test
and
mov
inc
arpl
add
mov
add
fimuls
cwtl
xor
lods
and
push
aad
add
add
fmul
push
lea
hlt
je
add
add
sub
mov
insl
push
cmp
push
inc
push
inc
je
cmc
pop
cmp
lods
lahf
ret
jp
add
sbb
dec
fstpl
inc
add
fldl
loopne
mov
adc
addr16
dec
gs
arpl
sti
test
pop
aas
stc
or
cs
cmp
or
xchg
add
adc
ja
rolb
mov
scas
addb
add
mov
imul
or
add
add
add
and
jge
negl
lods
int
in
sub
loope
repnz
ss
push
lods
das
stos
out
add
ds
rolb
mov
add
add
xor
cmp
dec
adc
mov
xor
add
add
mov
loop
mov
addb
addb
cs
adc
mov
mov
push
fmulp
int
jnp
jae
sbb
add
push
sub
addb
les
lret
jle
jne
push
aas
ljmp
mov
push
mov
add
mov
add
push
dec
add
add
mov
mov
lea
mov
icebp
jp
add
loope
lea
sub
mov
mov
into
mov
addr16
mov
add
mov
mov
mov
mov
not
add
adc
dec
sbb
add
stos
pop
nop
add
ret
dec
incl
pop
jo
mov
mov
add
pop
rolb
mov
cmp
add
push
add
aas
filds
aad
andl
mov
xor
outsb
ret
sahf
cld
pop
xor
mov
add
mov
add
out
outsb
cmp
mov
shll
inc
and
mov
xchg
or
pusha
add
mov
add
inc
dec
bound
mov
mov
mov
pop
xchg
add
xor
add
mov
mov
in
daa
fldcw
lcall
lods
push
mov
mov
cwtl
inc
lret
fs
loopne
mov
loope
std
popa
lcall
aaa
sti
xor
test
stos
push
mov
cmc
cmp
mov
mov
adc
add
add
mov
cmc
outsb
lahf
sub
in
xor
in
cmp
stos
mov
mov
insl
rolb
mov
mov
addb
cmc
and
mov
ret
sub
mov
mov
mov
mov
add
push
fmull
jl
push
dec
jge
jb
mov
ljmp
mov
lret
xor
mov
cmp
mov
out
mov
add
pop
jmp
mov
fwait
incb
mov
mov
bound
mov
push
aas
fsubrs
movsb
sub
pop
das
xor
roll
mov
les
jne
mov
sub
in
nop
add
subl
add
popw
rolb
xchg
pop
and
jns
pop
cmc
inc
cmp
or
adc
mov
insb
xchg
mov
mov
mov
das
in
ret
ficoms
daa
addb
cmpsb
push
add
mov
aas
xchg
int3
cld
loopne
mov
jns
in
xor
xchg
add
loop
mov
add
jne
xor
pop
adc
mov
xchg
jge
jne
sbb
xor
xor
lods
push
scas
lret
pop
pop
xchg
add
lods
inc
aaa
orl
add
jle
pop
push
adc
add
push
imul
add
idiv
mov
jns
movsl
push
mov
rolb
mov
mov
lea
movb
xchg
loop
mov
repz
iret
sbb
pop
rolb
mov
push
loopne
mov
lods
in
xlat
xchg
add
jge
stos
vcmpsd
sub
add
mov
cwtl
popf
rolb
mov
cmp
sahf
pop
test
add
xchg
mov
mov
int
inc
shll
fisttpll
mov
lods
fcomi
fchs
add
mov
add
add
add
cmpsl
lahf
clc
das
jb
mov
fwait
clc
outsb
aad
push
ss
inc
mov
cmpsl
imul
fcmovnb
iret
pushf
outsb
jae
add
add
add
pop
cmpsl
les
mov
lds
and
mov
pop
cmp
test
pop
inc
add
cmp
add
call
repnz
adc
mov
cmpsb
dec
sub
inc
mov
int
fmull
mov
add
aam
dec
inc
dec
dec
adc
adc
in
je
int
popa
mov
add
sub
mov
add
popl
mov
outsb
rolb
lahf
mov
enter
mov
movsl
jecxz
nop
add
dec
sub
mov
lock
cmp
mov
or
pop
jae
xor
cmp
mov
daa
jmp
imul
xlat
sbb
jp
pop
pop
les
or
add
hlt
imul
add
mov
jg
add
rolb
mov
pop
fisubrs
sub
imul
imul
xchg
add
adc
mov
dec
mov
stos
inc
cmp
js
addb
addb
lods
lds
inc
add
sub
stc
loop
mov
enter
add
outsb
push
push
push
stos
mov
ficompl
or
fmul
jno
push
pop
insb
nop
add
imul
imul
mov
pop
or
push
add
mov
jp
cmp
out
in
scas
js
and
mov
pop
inc
sbb
mov
mov
and
xchg
dec
clc
repz
addb
cmp
bound
mov
leave
jp
add
mov
cmp
lods
arpl
add
mov
in
mov
and
or
stos
addb
hlt
sbb
mov
add
mov
add
sbb
ljmp
lea
jne,pn
mov
dec
push
cli
xchg
mov
std
xor
mov
roll
mov
cs
inc
add
cld
enter
mov
xchg
and
iret
mov
pop
push
push
cwtl
in
dec
mov
add
jle
out
mov
add
add
dec
pushf
mov
sarl
mov
int
insb
pop
in
xchg
lock
mov
mov
sysexit
mov
cmp
test
add
xchg
leave
push
xor
mov
loop
mov
sbb
aam
mov
dec
imul
mov
add
pop
xchg
dec
adc
cmc
call
add
pop
hlt
mov
mov
mov
push
push
or
inc
push
sahf
jg
jge
push
fs
and
mov
add
mov
das
clc
ret
sub
stc
pop
add
jo
mov
outsb
add
sbb
dec
fs
dec
data16
lahf
xchg
mov
rolb
mov
test
mov
mov
out
mov
jp
pushf
dec
and
ss
idivl
push
add
xor
ret
loope
add
cmp
popf
jbe
in
mov
int
sbb
rolb
mov
add
ds
add
hlt
dec
loope
flds
and
mov
mov
lret
adc
mov
add
insb
cwtl
mov
aad
mov
sbb
testl
add
lahf
fs
inc
cmp
jl
cli
out
stos
outsl
xchg
sub
cmc
jg
aaa
sub
cmp
push
pushf
fidivrs
add
rolb
addb
mov
add
mov
add
add
push
lret
inc
mov
in
add
add
add
ja
pop
test
imul
inc
add
add
mov
fwait
sarl
cmpl
dec
sbb
pmullw
xchg
xchg
cmp
add
or
add
pusha
add
mov
cmc
push
dec
jle
into
pushf
bound
mov
mov
mov
cmpsb
cmp
add
jmp
adc
add
inc
or
fidivrl
xor
inc
inc
dec
sbbl
or
add
fmul
mov
in
dec
mov
dec
sub
iret
push
xchg
adc
jmp
push
add
mov
rcll
mov
push
sbb
add
inc
jge
jmp
sarl
push
mov
test
add
pop
add
mov
dec
sub
mov
or
cmp
icebp
aam
jne
lret
out
inc
test
adc
mov
cmc
add
add
dec
stos
bound
mov
subl
rcrl
inc
insl
aas
dec
les
and
popf
shr
add
mov
fists
ret
mov
mov
sub
add
mov
mov
popa
or
add
mov
mov
repz
jecxz
xor
add
loopne
mov
add
lds
push
add
xor
movsl
push
mov
mov
push
push
push
adc
mov
pop
movsb
push
cmp
xchg
xchg
add
add
add
add
jb
mov
mov
stos
cltd
repz
test
xchg
movsl
mov
dec
push
pop
push
add
mov
mov
shll
sbb
mov
dec
push
xlat
in
and
mov
enter
add
cs
xor
cmpsl
push
and
jmp
cmp
adcl
xchg
inc
add
and
clc
nop
add
pusha
add
inc
and
mov
jmp
and
mov
rcll
fsubs
adc
xchg
add
sbb
jge
xchg
cmp
test
ds
test
pop
mov
aad
fisttps
xchg
push
out
adc
inc
andl
dec
jmp
sbb
add
loope
add
decl
mov
sahf
jg
adc
sub
loope
or
or
add
push
add
movsb
inc
add
cs
mov
repz
mov
stos
jo
mov
mov
fwait
stos
outsb
cmpsb
dec
inc
add
sbb
mov
xchg
mov
sbb
mov
out
popa
sub
add
les
fbld
pusha
add
add
mov
add
lahf
aaa
call
sub
incl
pop
sbb
pop
sbb
mov
add
xor
mov
add
mov
cmc
cmp
push
data16
cmp
insl
mov
cmpsl
push
pusha
add
les
xchg
push
loop
mov
mov
xchg
dec
fnsave
cmp
inc
rcll
mov
jae
xchg
pop
cmc
xchg
add
inc
sbb
mov
mov
adc
mov
outsb
das
adc
rolb
adc
aaa
inc
cmp
push
sub
push
inc
sbb
stc
jae
cltd
roll
lds
sti
mov
out
je
icebp
mov
cmp
fimuls
add
psrlq
push
aam
sbb
sbb
and
xor
mov
divb
or
add
mov
stos
and
mov
cmp
cmp
test
add
pushl
int3
cli
mov
pop
jp
rolb
xor
mov
sbb
test
add
add
test
mov
add
ret
jo
mov
pop
ss
pop
push
add
mov
add
mov
jne
or
and
dec
dec
mov
loopne
mov
mov
mov
dec
js,pn
adc
mov
adc
dec
add
adc
mov
add
pop
imul
adc
fstpt
arpl
jmp
mov
mov
pop
repz
nop
add
add
mov
adc
mov
and
or
ret
and
es
ljmp
add
add
rolb
frstor
cmpl
call
flds
fiadds
div
mov
clc
fwait
xchg
inc
add
add
inc
loopne
mov
rolb
mov
repnz
mov
inc
mov
out
adc
dec
push
add
test
sets
test
mov
adc
addr16
pop
adc
mov
and
mov
lock
orl
dec
jnp
add
stos
add
mov
iret
adc
aaa
popf
ja
pusha
add
add
cmp
xchg
add
sbb
add
inc
test
cmp
mov
add
roll
jp
mov
insl
addl
shll
add
add
test
mov
mov
mov
ljmp
add
stc
sbb
mov
das
push
int
mov
add
and
adc
mov
aaa
sub
ljmp
add
das
inc
mov
jecxz
imull
dec
in
cmpsl
scas
jmp
add
int
arpl
call
xchg
dec
outsb
pop
movl
cmp
push
cmp
push
out
adc
or
push
and
mov
repz
mov
mov
mov
mov
call
stos
xchg
fistl
inc
imul
lea
int
push
sbb
mov
lods
jb
mov
scas
push
add
mov
mov
jl
add
fwait
outsl
icebp
jnp
add
inc
add
fidivs
adc
mov
clc
jb
mov
rolb
mov
pop
lods
cmp
add
mov
out
mov
loope
call
int
cs
dec
mov
clc
and
bound
mov
sahf
ret
bound
mov
xor
xor
pop
cmpsb
test
add
mov
pop
jnp
cmp
lea
jp
in
rol
les
lcall
sti
repz
mov
stos
xor
mov
inc
sbb
out
push
add
or
lock
mov
movsl
inc
sub
pop
mov
mov
pop
sub
add
cmc
or
mov
mov
pop
out
and
mov
xchg
inc
inc
sub
mov
mov
mov
movsl
inc
add
in
or
in
das
pushf
push
add
cmp
in
adc
mov
push
fiaddl
pop
sub
mov
mov
sub
mov
add
add
mov
push
aad
roll
add
mov
data16
mov
or
cs
mov
test
xchg
jp
cli
or
out
mov
mov
add
adc
dec
iret
push
inc
cmpsl
test
xchg
dec
adcl
lds
mov
xchg
add
xorl
mov
pop
add
mov
into
sub
rolb
mov
clc
jle
leave
fnstcw
int
je
dec
push
cmp
out
rcr
rolb
and
enter
cli
les
dec
sbb
maskmovq
divl
mov
sub
jle
pop
push
add
xor
mov
adc
adc
ljmp
adc
ds
mov
jp
popa
push
or
les
add
mov
lods
test
in
add
mov
test
add
cmp
into
lcall
clc
or
loop
mov
stos
rcll
lea
mov
cmp
push
push
xchg
or
push
hlt
pop
cld
push
loopne
mov
je
mov
repnz
aaa
pop
stos
xchg
lds
fadd
pop
imul
xlat
nop
add
add
inc
pop
insl
jb
mov
nop
movsb
cwtl
sbb
jo
mov
pop
test
jb
mov
cwtl
sarl
mov
cs
add
mov
sub
add
mov
add
mov
jmp
mov
sub
cmp
inc
cltd
fs
sub
mov
int3
cmp
stos
ljmp
jo
mov
add
call
xchg
pop
pop
bound
mov
xchg
mov
rolb
addr16
add
ds
pop
push
xchg
inc
mov
xlat
mov
pop
inc
call
cmpsl
hlt
aad
push
jbe
mov
sbb
das
lcall
daa
pop
rolb
xchg
pop
xchg
jg
mov
dec
pop
mov
in
scas
sub
rolb
addl
out
add
aam
nop
add
jmp
xchg
sbb
xchg
mov
mov
jge
add
jo
mov
xor
mov
cmpl
sub
sub
push
mov
mov
scas
or
das
nop
add
mov
mov
add
mov
add
adc
cwtl
imul
add
sbb
push
pusha
add
mov
add
icebp
cld
lret
test
cmp
mov
cli
leave
lods
adc
out
repz
repz
push
lods
pop
pop
mov
inc
cmp
inc
add
mov
sbb
inc
xchg
jmp
mov
loop
mov
addb
mov
sub
add
jno
mov
add
test
dec
xlat
incb
js
movsb
xor
mov
enter
cmp
inc
add
cmp
and
add
add
stos
pop
inc
scas
stos
sub
push
lods
and
inc
add
or
add
mov
adc
add
xlat
ljmp
pop
test
outsl
mov
and
outsl
clc
mov
outsl
testb
add
add
mov
add
addb
roll
sbb
mov
dec
sub
addb
add
test
js
fdivrl
mov
jle
mulb
jl
addr16
js
sbb
cmp
add
inc
js
inc
cld
cmp
push
add
sbb
dec
jg
int
ss
push
cmc
or
mov
xor
mov
iret
or
stos
popf
sub
fidivrs
add
xchg
adc
xchg
lea
xor
sbb
fidivrs
rorl
add
add
insl
fadds
mov
out
push
ret
dec
xor
jle
lcall
add
sbb
cwtl
in
stos
fdivrl
add
test
xor
mov
add
push
rolb
mov
add
add
mov
cli
sub
mov
inc
push
daa
lret
adc
mov
mov
cli
jge
add
addb
stos
out
jl
jl
movsl
test
loopne
mov
pop
pop
cmpsb
or
jb
mov
sub
add
fldt
jl,pn
jecxz
repnz
adc
mov
xchg
iret
sbb
xor
push
inc
iret
xchg
rolb
dec
or
cmc
push
sub
pop
sbb
dec
sub
dec
lret
lods
pop
pusha
add
mov
repnz
outsb
int3
mov
out
cmc
lock
inc
leave
in
pusha
add
adc
xchg
xchg
push
pop
xchg
fs
test
add
adc
lods
sub
clc
pop
lods
pop
xor
test
mov
cmp
add
test
add
dec
pmaddwd
dec
bound
mov
aam
jmp
add
jge
out
pop
xor
cmp
add
fsubrs
push
or
mov
cmp
mov
add
mov
add
add
add
