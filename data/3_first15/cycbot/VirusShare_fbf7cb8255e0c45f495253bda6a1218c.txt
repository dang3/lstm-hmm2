int3
daa
jmp
sbb
add
pop
mov
mov
push
jb
mov
add
mov
jp
sub
push
xchg
iret
jno
add
sub
movsb
outsl
add
jecxz
mov
lret
std
and
mov
ds
inc
aaa
dec
xlat
subl
inc
add
loopne
mov
mov
add
outsb
jp
sbb
fcompl
jecxz
ds
jmp
add
sarl
mov
stos
aaa
or
dec
adc
mov
add
mov
mov
xor
insb
test
sbb
push
jmp
movsb
push
and
mov
xchg
sub
xor
cwtl
xchg
mov
add
ljmp
stc
jp
inc
pop
jo
mov
and
ds
or
in
dec
mov
ss
fnstenv
fnstsw
pop
cs
cwtl
loope
add
mov
mov
push
data16
inc
add
xor
mov
inc
mov
jmp
jecxz
add
sub
ja
add
push
btr
lcall
test
push
add
mov
push
sbb
mov
ds
mov
pop
fscale
dec
inc
mov
and
mov
add
push
cmp
lret
xchg
push
test
pop
adc
lods
adc
enter
jmp
das
and
push
and
pop
outsl
js
mov
mov
push
jg
add
mov
lods
xchg
mov
add
add
mov
add
fmul
hlt
ds
and
outsl
add
jmp
addb
mov
add
add
or
sbb
test
adc
pushf
sbb
imul
sub
mov
jp
add
fldcw
lods
and
ret
popf
ljmp
mov
fisttpl
cltd
jno
loope
loop
mov
add
jae
add
int3
push
add
lsl
add
inc
enter
nop
add
dec
adc
pop
mov
jecxz
add
out
dec
mov
lret
jne
mov
mov
test
fcmove
scas
sub
mov
cld
and
or
adc
mov
mov
mov
sbb
mov
and
mov
add
mov
jmp
add
flds
xchg
arpl
test
mov
and
mov
cmp
adc
add
rolb
mov
add
in
mov
fnstcw
mov
mov
jbe
add
xchg
xchg
add
jns
mov
js
jge
inc
push
addb
sbb
jmp
mov
bound
mov
pop
mov
imul
mov
add
mov
mov
add
lcall
mov
add
mov
mov
add
add
loop
mov
add
mov
add
mov
add
pop
cwtl
leave
ss
add
mov
stc
shrl
repz
int3
bound
mov
add
stos
xor
and
popf
fwait
stos
imul
mov
mov
aam
adc
push
sarl
rolb
cli
rolb
mov
adc
mov
mov
lahf
or
add
nop
add
loope
push
test
mov
rol
mov
test
ret
sub
mov
mov
sbb
hlt
std
jle
dec
push
add
je
sub
scas
das
daa
add
mov
add
push
cltd
mov
arpl
mov
add
mov
dec
pusha
add
mov
cltd
jns
nop
add
cmpsl
roll
test
add
pop
push
add
cmpsb
mov
mov
cltd
and
sub
pop
outsl
pop
push
mov
mov
mov
in
out
ljmp
rolb
mov
add
test
and
mov
lds
cwtl
movsb
das
mov
jno
test
add
mov
push
pop
dec
mov
mov
aaa
mov
call
lods
push
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
shll
add
mov
addb
push
mull
cmp
out
orl
or
add
and
jo
mov
add
mov
rolb
mov
mov
jle
aaa
in
icebp
jb
mov
cs
ret
gs
dec
mov
addb
fdivl
cmpsl
push
hlt
xchg
xor
and
fwait
bound
mov
ficompl
mov
mov
sbb
dec
stc
lea
xchg
sbb
or
in
mov
add
bound
mov
addr16
int3
out
lods
daa
jne
mov
movsl
mov
cmp
stc
outsl
sub
mov
xchg
movntq
add
xlat
mov
mov
iret
sahf
cli
jle
add
and
add
push
mov
jecxz
mov
sbb
into
add
mov
add
fs
aam
scas
mov
or
add
dec
inc
jl
in
add
mov
fisttpll
jns
testl
scas
push
outsb
addr16
ja
rol
in
and
mov
mov
icebp
jb
mov
lret
mov
jo
mov
mov
adc
mov
mov
std
xor
xchg
xlat
pop
push
add
mov
push
outsl
mov
sbb
cmp
xlat
push
add
add
mov
mov
add
xchg
adc
mov
enter
fwait
push
clc
and
dec
es
add
mov
in
in
aas
push
sub
pop
xchg
iret
and
jp
je
rolb
mov
cltd
and
movsb
mov
mov
pop
jle
fwait
hlt
push
pop
pop
inc
and
mov
cltd
lods
mov
push
jnp
cltd
repnz
sti
imul
outsb
popf
out
add
ljmp
int3
mov
mov
cwtl
rcrl
jo
mov
pop
gs
add
pushf
sub
lcall
mov
mov
out
jmp
mov
je
inc
sbb
add
adc
imul
jno
inc
test
mul
mov
mov
cmp
bound
mov
sti
add
test
fimuls
mov
pop
aad
add
shll
lock
mov
in
sbb
je
in
dec
jg
or
in
out
mov
mov
movl
push
stos
sarl
packuswb
sub
sbb
xchg
dec
clc
sti
dec
outsl
rolb
mov
fidivl
add
pop
rcrl
cmp
add
out
push
cmpsl
fstpl
loopne
mov
and
ljmp
mov
add
aam
pop
inc
dec
repz
stos
add
jl
xchg
xor
dec
cmc
mov
jb
mov
add
mov
test
mov
mov
js
add
xor
repnz
push
adc
adc
cli
xchg
add
sub
outsb
addb
lcall
addr16
loopne
mov
add
mov
mov
push
jo
mov
les
mov
out
outsb
mov
add
add
insl
jmp
push
pop
cmp
mov
stos
xchg
das
pop
mov
jle
arpl
cmpsb
sub
cmp
mov
xor
push
fldt
lods
adc
mov
stos
push
push
mov
add
insl
daa
out
jecxz
sub
cmp
jecxz
and
xchg
mov
pushf
mov
add
shrl
sub
jno
insb
xchg
imul
mov
out
adc
bound
mov
add
lret
in
inc
add
mov
rcrl
fs
pop
lret
mov
rolb
mov
movsl
bound
mov
cwtl
leave
mov
xor
sbb
popa
xor
loopne
mov
mov
lret
xchg
add
inc
ret
mov
leave
cli
divl
pop
inc
mov
repnz
mov
sbb
inc
add
gs
add
and
mov
dec
mov
ds
jb
mov
repz
cmpsl
adc
pop
and
xor
mov
ja
mov
mov
adc
out
or
dec
push
push
jnp
sahf
mov
insl
xor
out
test
cmc
cwtl
sbb
push
add
mov
pop
int3
xor
mov
fcoms
mov
jnp
xchg
lcall
test
shrl
sahf
in
mov
popf
test
cmpsl
leave
add
add
xchg
cmp
hlt
xchg
cltd
ret
mov
mov
repnz
add
ds
pusha
add
aaa
mov
in
aam
dec
inc
jp
mov
add
add
mov
pop
adc
fnstcw
jnp
mov
and
popa
mov
jmp
mov
jl
mov
and
pop
lret
add
mov
int3
sbb
push
jne
rolb
mov
add
cmp
mov
add
cmc
and
push
or
push
cmp
mov
fs
add
add
fstps
inc
or
out
sahf
or
add
popa
inc
insl
stos
mov
mov
call
adc
mov
lods
add
adc
mov
add
mov
or
inc
stos
inc
add
jno
loope
and
push
jmp
in
fsubrs
jne
testb
xchg
es
cltd
pop
mov
xchg
test
mov
sub
mov
sbb
shll
add
fiadds
cmp
add
addb
in
jo
mov
and
mov
test
jmp
push
notb
das
into
and
aaa
loop
mov
inc
and
mov
mov
mov
sub
fdivs
mov
push
rolb
mov
in
jns
add
flds
mov
sbb
mov
jne
pushl
sub
jg
add
sti
and
mov
icebp
repz
lret
mov
mov
cmp
les
cs
push
cmp
dec
inc
fdivr
xchg
mov
mov
mov
add
mov
mov
outsl
pop
and
jae
add
add
in
push
pop
fldl
add
add
add
outsl
loope
jg
stos
inc
mov
add
add
pushf
or
adc
push
fadd
mov
or
add
dec
lods
lea
adc
add
pop
test
lahf
rolb
mov
mov
xchg
sub
cltd
imul
ss
stos
mov
mov
mov
data16
mov
add
fbld
loopne
mov
js
add
cmpsb
outsl
in
insl
and
mov
or
cltd
bound
mov
add
add
push
repnz
xchg
add
rcll
adc
mov
push
xchg
cltd
mov
popf
mov
mov
mov
into
stos
pop
cs
sub
xchg
adc
dec
sbb
das
pop
testl
les
xor
mov
add
js
and
push
lods
into
sti
xchg
pop
pop
dec
jns
mov
rcr
fdivrs
mov
std
stos
arpl
pop
cmpsl
push
stc
and
mov
mov
push
data16
add
mov
dec
adc
cmp
mov
mov
xchg
push
lcall
sub
addb
ljmp
adc
mov
jnp
out
js
push
mov
fwait
shrl
scas
jno
inc
jnp,pn
dec
arpl
mov
mov
cmpsb
ljmp
aam
dec
ljmp
test
repnz
daa
loopne
mov
add
outsb
in
add
cmp
imul
lods
dec
pop
repz
lock
mov
add
daa
and
imul
pushf
pop
int3
push
push
push
mov
add
push
imul
paddsb
aad
add
rol
jbe
aam
sbb
push
dec
adc
inc
sbb
xor
add
fwait
addb
and
jl
and
mov
sub
leave
mov
pop
dec
or
lcall
pop
out
testb
xchg
jns
sti
test
mov
xchg
jge
xchg
cmpsl
lock
add
je
in
cmp
add
fidivl
mov
pop
dec
xor
mov
add
add
push
or
mov
mov
mov
sbb
int3
xor
jno
push
lahf
mov
mov
jp
ljmp
dec
pop
lods
lret
lcall
push
das
pusha
add
out
mov
imul
cld
inc
dec
pop
ror
xchg
xchg
add
aas
bound
mov
lds
jne
repz
pmulhw
addb
pop
lret
in
sahf
cmp
add
pop
es
add
fbstp
add
into
das
sti
mov
jno
lcall
das
xor
xor
mov
jb
mov
into
pusha
add
add
mov
and
test
mov
psubq
push
xlat
scas
sub
mov
mov
insb
xor
mov
mov
ja
adc
mov
call
mov
jg
pop
ds
mov
pop
sub
std
xchg
dec
and
mov
out
addb
jns
inc
sub
iret
adc
in
dec
loopne
mov
xor
add
aad
mov
mov
das
jbe
pop
jle
orl
xchg
xlat
in
inc
pop
lret
mov
mov
mov
lahf
sbb
jb
mov
push
nop
add
cmp
mov
rolb
mov
and
add
fsubrs
jecxz
sub
imul
les
hlt
xchg
dec
loope
jmp
jle
add
dec
adc
lods
xor
roll
push
sbb
adc
mov
mov
adc
rorl
ja
adc
jmp
sahf
or
inc
into
sbb
sbb
add
jmp
lds
mov
add
cltd
jo
mov
daa
lret
add
xor
mov
cmp
insb
sbb
push
sahf
mov
adc
add
mov
mov
and
lods
dec
and
lret
loop
mov
and
mov
push
and
aaa
xor
xchg
hlt
jnp
add
mov
enter
outsb
pop
push
pop
mov
add
push
test
daa
sub
jns
dec
mov
mov
xchg
lret
pop
cwtl
ret
sbb
add
or
loop
mov
out
movsl
add
mov
mov
sti
movsl
addb
ret
xor
add
mov
add
pushf
das
ficoms
dec
inc
add
test
mov
add
lahf
jae
inc
je
pusha
add
add
mov
ret
mov
call
or
xorl
arpl
mov
dec
mov
add
es
add
movl
xchg
ljmp
add
xchg
stc
dec
sbb
add
xor
xchg
sbb
cmpsb
ja
dec
push
es
jmp
push
add
fdivrl
xchg
xchg
pop
out
dec
or
inc
xor
mov
addb
mov
inc
mov
and
mov
mov
int3
addb
mov
popf
xchg
aad
push
add
fnstsw
adc
xor
addb
sti
cli
jmp
push
dec
xor
mov
leave
add
cltd
adc
mov
addb
add
jo
mov
mov
sub
mov
inc
adc
add
pop
and
mov
addb
icebp
jo
mov
adc
mov
mov
xchg
stos
sbb
in
mov
add
mov
es
mov
ss
mov
sub
lods
xlat
into
sbb
daa
adc
mov
xchg
adc
add
mov
movsl
aaa
jns
gs
add
jne
mov
addb
addb
pushf
mov
mov
fstps
idiv
inc
cmp
in
pop
sbb
xchg
cmp
and
mov
cmp
fsubr
in
mov
xor
mov
in
pop
cmp
add
mov
jmp
add
add
xchg
add
lods
xchg
std
xor
adc
inc
pop
xor
cmpsl
rcll
jp
dec
push
jo
mov
add
jne
push
pop
inc
sar
out
push
mov
sbb
sti
add
mov
add
std
lds
inc
push
pushf
rolb
mov
inc
add
out
lret
negl
ret
pop
push
inc
es
lret
add
rolb
mov
mov
hlt
dec
nop
add
out
cmc
pop
or
jp
jmp
mov
leave
sbb
add
lret
mov
sbb
fcom
ljmp
sub
hlt
sbb
xchg
js
pop
mov
push
test
push
push
and
lea
hlt
gs
push
adc
sub
push
cmp
xchg
testb
sub
jbe,pn
add
mov
jl
mov
mov
add
lcall
repnz
mov
movsb
pop
dec
mov
mov
fists
mov
add
jg
sbb
les
mov
mov
mov
xchg
sbb
xor
sbb
mov
repnz
mul
pop
add
cmp
subl
sub
add
pop
mov
mov
add
mov
push
shll
addr16
push
popa
mov
add
mov
push
push
in
sbb
cs
rol
add
enter
lock
fbld
or
xor
js
pushf
jo
mov
lcall
adc
ud1
rolb
jecxz
std
xchg
js
add
sub
mov
push
mov
inc
add
out
and
dec
bound
mov
sub
mov
mov
adc
mov
cmp
insb
cmp
inc
popa
popa
pop
pop
loope
jge
clc
nop
add
inc
add
xor
outsb
dec
cld
pop
dec
mov
push
loope
shll
add
mov
int
test
movsl
fsubrl
pop
iret
and
mov
add
jle
inc
add
push
adc
lret
add
add
mov
add
test
sbb
nop
add
jae
negb
or
out
xchg
and
mov
inc
add
mov
and
add
mov
mulb
ljmp
mov
and
add
js
aam
mov
jle
popf
mov
cmpsb
in
pop
adc
add
das
pop
pushf
mov
movsb
xchg
mov
dec
arpl
sub
es
ficoml
repnz
jbe
test
fincstp
mov
popl
sti
xchg
push
adc
xor
and
mov
push
push
mov
out
icebp
arpl
add
in
mov
dec
negl
xchg
sub
lcall
push
fimull
add
cmpsb
aaa
pop
aas
cmpsl
leave
jne
mov
mov
imul
arpl
xchg
imul
xchg
pop
imul
or
mov
push
or
mov
rolb
mov
jo
mov
call
testb
sub
in
dec
jl
aaa
cmp
adc
cli
jno
popf
in
add
mov
int3
cld
jl
add
sub
mov
ljmp
add
push
push
aaa
fdivrs
mov
xor
pop
addb
rolb
and
mov
bound
mov
add
add
xchg
rol
add
out
sbb
pop
dec
pop
adc
add
dec
cmp
dec
dec
sbb
sbb
mov
or
ljmp
fsubs
outsb
push
xchg
jno
add
setg
add
add
add
mov
gs
inc
add
push
testl
or
jp
jae
adc
jbe
add
add
sbb
out
outsb
sbb
add
mov
lds
sub
add
adc
jb
mov
pop
daa
insl
jmp
aas
fstpt
inc
addb
repnz
add
mov
add
xchg
sub
xor
mov
leave
insl
or
cmp
into
pop
loopne
mov
add
fs
xchg
xor
add
mov
mov
mov
add
mov
loopne
mov
cli
ss
test
add
bound
mov
xor
mov
dec
repz
sbb
xor
mov
adc
pop
mov
sub
add
mov
add
jb
mov
lods
addb
sub
jae
push
add
sbb
and
mov
add
inc
xchg
fwait
sbb
mov
add
mov
push
pop
mov
mov
add
inc
add
jbe
dec
and
mov
ret
pop
pusha
add
sbb
mov
mov
add
nop
add
inc
lahf
push
push
adc
dec
in
and
das
and
jmp
pcmpeqd
add
xor
imul
adcl
sbb
mov
jno
ljmp
xor
mov
mov
xor
mov
jb
mov
mov
mov
pop
push
mov
mov
jno
add
das
pushf
imul
cmp
or
mov
dec
mov
adc
mov
add
add
sbb
sarl
add
stos
mov
mov
stc
rolb
mov
mov
and
out
push
add
lods
lahf
test
add
jns
xchg
mov
add
out
dec
mov
mov
add
ret
pushf
cltd
push
mov
cmp
mov
movsb
inc
add
sahf
push
add
mov
es
push
adc
leave
mov
add
dec
jns
cltd
inc
add
add
add
mov
dec
clc
pop
or
add
pop
jbe
in
fwait
js
add
fdecstp
adc
inc
add
out
adcl
sbb
scas
pop
or
stos
xor
cmpsl
pusha
add
add
ds
ja
in
addb
xchg
iret
stc
mov
add
add
mov
add
add
xchg
inc
lea
inc
ss
data16
ljmp
xor
mov
sti
jg
dec
adc
bound
mov
lret
fs
add
pop
dec
mov
aaa
push
cmp
pop
or
pop
aam
dec
xchg
js
mov
cmpsl
lret
push
shll
test
add
inc
add
cmp
add
mov
psrlq
push
bound
mov
mov
add
scas
cltd
push
test
movsb
xchg
add
sbb
dec
mull
mov
rolb
mov
test
hlt
popf
xor
mov
add
add
mov
push
xor
adc
mov
lods
or
dec
xor
mov
inc
sub
add
add
dec
mov
lds
mov
cmp
fstpl
lahf
mov
mov
mov
cmp
push
xchg
push
ljmp
scas
cmpsb
push
add
cs
or
jg
add
mov
fnsave
lods
sub
push
or
pop
fwait
mov
jge
add
push
xchg
sbb
add
mov
add
rolb
mov
rolb
mov
mov
pop
pop
pop
sahf
cmc
cmp
mov
push
js
sub
add
loop
mov
mov
iret
sti
add
addl
mov
adc
stos
and
mov
or
mov
leave
lds
push
adcl
xchg
fstpt
enter
add
push
add
in
mov
cmp
stc
mov
fwait
repnz
outsl
pop
aam
dec
sahf
fldcw
push
add
mov
mov
add
push
add
add
add
inc
add
stos
sub
add
je
sbb
add
add
lds
fistpl
xor
nop
add
es
or
ljmp
add
mov
mov
add
or
sbb
inc
push
addb
bound
mov
scas
arpl
rolb
mov
mov
test
mov
add
xchg
cli
xor
mov
daa
xlat
sbb
cmc
mov
sbb
push
inc
adc
adc
pop
mov
xor
mov
sbb
add
test
fcoms
mov
sbbl
dec
mov
outsl
or
push
xchg
dec
test
and
into
push
add
mov
cwtl
or
add
push
fmull
cmp
dec
insl
jnp
rolb
mov
mov
mov
xorl
add
aad
aaa
stc
xchg
daa
xchg
add
mov
mov
lock
mov
fiaddl
mov
sbb
add
mov
push
cmpsb
push
lods
frstor
jns
sub
fisttpll
nop
add
inc
pop
xchg
cltd
test
jg
push
lock
push
add
add
pop
xlat
inc
or
mov
mov
add
mov
pop
nop
add
add
cld
cmp
cltd
mov
clc
enter
and
mov
pop
pop
mov
mov
xor
movsb
jb
mov
push
or
add
lock
test
add
add
jmp
xchg
call
fistpl
lods
xor
add
mov
call
add
mov
mov
enter
loopne
mov
and
mov
mov
mov
inc
test
mov
adc
mov
jbe
aaa
or
ljmp
addb
xlat
std
rolb
mov
add
mov
sub
je
sbb
add
xor
push
repnz
aam
test
arpl
pop
cs
mov
lret
pop
cltd
pop
sub
adc
mov
lock
imul
mov
out
aam
and
movsb
inc
add
ja
gs
sub
mov
cmp
add
mov
or
out
dec
sbb
push
add
outsl
or
insl
out
pop
xor
sub
clc
mov
popa
gs
xchg
or
stc
rolb
mov
add
lods
or
jle
and
mov
aam
rolb
mov
lcall
sub
mov
outsl
fisttpll
in
out
pop
in
adcl
mov
fildl
clc
pop
lds
out
stos
mov
add
push
into
push
push
add
movsl
jae
and
inc
iret
xor
lea
pop
xchg
sti
decb
add
add
mov
pop
js
mov
xor
mov
mov
or
rolb
mov
fldt
xchg
add
mov
fs
popl
push
fimull
test
addb
pop
mov
loope
dec
cmp
xor
xor
mov
add
dec
mov
divps
xor
scas
jae
add
add
pop
repz
mov
movsl
sti
mov
mov
add
bound
mov
xor
mov
xchg
mov
mov
cmp
dec
addb
xchg
je
push
add
cmc
cmp
mov
sbb
inc
ret
jb
mov
or
add
vmread
mov
jmp
cmp
je
popa
test
pop
mov
mov
daa
push
xor
mov
cmp
icebp
jno
add
sbb
fwait
push
cmp
mov
inc
cmpl
add
ljmp
in
or
popa
lret
sbb
sbb
jmp
xchg
leave
orl
inc
add
add
ffree
add
fistl
mov
cmp
fstl
sti
int
in
mov
cmpsb
xchg
add
lods
pushf
call
cli
bound
mov
jne
mov
mov
add
xlat
test
sub
inc
xor
push
cmpl
mov
push
add
insl
lock
fcomps
nop
add
xchg
addb
push
add
mov
addb
fst
into
xor
add
addb
fadd
add
push
and
aad
out
push
cmp
mov
add
pop
jecxz
jne
jae
push
cld
sbb
ljmp
mov
stc
inc
inc
xchg
cmp
add
add
lods
repz
addb
enter
add
cmp
cs
in
inc
add
pop
or
add
push
popa
out
jge
lret
add
dec
mov
add
and
in
ljmp
pop
xchg
or
push
sbb
mov
addb
push
mov
dec
cmp
pop
mov
mov
iret
das
fstps
add
xor
mov
xor
cmp
pop
fcmovnb
add
ret
adc
cld
roll
mov
mov
add
pushf
jo
mov
mov
pop
ss
sbb
jp
sahf
fidivs
mov
outsb
sbb
adc
fld
cmpsl
adc
mov
addb
push
add
dec
mov
jp
add
add
dec
pusha
add
mov
int3
cld
aad
add
jge
loopne
mov
mov
mov
push
add
clc
test
popa
test
mov
mov
js
jno
mov
add
enter
int3
cmpsl
repnz
jo
mov
xor
mov
test
jmp
mov
add
mov
jmp
ljmp
mov
inc
add
in
inc
cmp
add
xchg
mov
mov
das
add
add
fisttpl
xor
insb
sti
out
mov
rolb
mov
daa
nop
add
mov
add
sbb
fnstenv
jno
cmpsb
xchg
enter
test
inc
add
push
xor
std
xor
mov
fwait
nop
add
ss
cmpsb
mov
and
mov
js
jmp
jb
mov
add
cld
fistpl
inc
ret
pop
mov
sbb
add
inc
leave
cmp
mov
add
add
cmpsl
sub
push
mov
mov
movsb
xor
jecxz
punpcklbw
mov
movb
add
out
inc
push
add
nop
add
mov
mov
and
test
aaa
push
cmp
add
xchg
xchg
cmpsb
leave
in
lock
inc
outsl
addr16
push
test
add
inc
add
mov
xchg
add
pop
pop
inc
add
push
adc
add
outsb
push
and
mov
push
enter
sldt
mov
lret
mov
mov
pushl
push
jle
jnp
adc
mov
vmptrld
daa
add
xchg
lea
mov
add
add
dec
lahf
or
cmp
js
add
mov
lahf
arpl
mov
test
add
inc
out
xor
mov
ja
jmp
push
enter
push
nop
add
xchg
sub
int
cmpsb
sub
icebp
pushf
movsb
enter
xor
add
inc
mov
iret
out
popf
stc
int
dec
jmp
add
lahf
and
mov
pushf
mov
mov
fmull
xor
mov
inc
in
loopne
mov
add
add
mov
test
jae
xchg
mov
imul
int
adc
add
pop
mov
ret
loopne
mov
movsb
cmp
cmp
mov
add
xchg
insl
xlat
sbb
int
sarl
call
arpl
lods
push
dec
ds
mov
add
mov
cmc
je
add
push
jne
int3
repnz
xchg
imul
push
fisttpll
xchg
out
test
mov
mov
or
add
or
notb
xchg
arpl
add
add
gs
lods
repz
test
or
add
mov
stos
fsts
mov
leave
push
rolb
xchg
mov
mov
mov
idivb
out
std
into
movsb
ds
inc
and
hlt
xlat
nop
add
aam
add
adc
mov
push
lock
mov
mov
mov
aad
ja
add
xor
sbb
lea
inc
add
ret
mov
inc
add
add
mov
jecxz
push
jno
js
outsb
fnstcw
push
add
add
std
sub
add
fistps
sub
loopne
mov
add
clc
je
xchg
cwtl
aam
rcrl
add
int
cmp
push
xchg
je
std
addb
fwait
xor
cwtl
adc
mov
add
mov
insb
pop
jb
mov
cmp
push
cli
movsl
fnstenv
add
dec
popf
jno
rolb
xor
add
sbb
std
ret
cmp
dec
imul
mov
fwait
mov
add
lcall
daa
push
sbb
in
rolb
das
insb
pop
loope
movsl
mov
mov
popa
xchg
adc
arpl
mov
mov
dec
pop
fldenv
cmp
xchg
sbb
add
dec
jl
cld
pusha
add
aaa
sbb
insl
aam
jle
add
out
mov
sub
mov
pop
scas
pushf
add
ljmp
ljmp
or
adc
and
lcall
mov
fidivs
rolb
mov
lea
xor
mov
fcmovnb
aam
jg
jl
lods
inc
sbb
push
add
push
add
mov
stos
movsl
cvtpi2ps
outsl
cli
or
lcall
add
add
mov
or
bound
mov
je
psrlq
ret
jl
add
in
pop
lods
stos
lock
jg
les
ljmp
mov
mov
dec
std
mov
test
inc
sbb
and
mov
insb
daa
mov
mov
arpl
mov
sub
mov
cmp
bound
mov
mov
adc
fldt
into
cs
jg
xor
and
mov
xchg
addb
daa
push
sbb
add
les
add
and
and
cmp
into
sub
add
mov
inc
or
mov
mov
add
bound
mov
pop
out
rolb
mov
xor
mov
adc
mov
xchg
add
rolb
lods
das
ljmp
loop
mov
imul
movb
arpl
jp
adc
js
add
mov
enter
dec
nop
add
dec
lea
cmc
dec
mov
mov
jecxz
adc
mov
push
icebp
in
add
adc
add
mov
mov
and
mov
sbb
inc
sbb
test
jne
test
mov
dec
cmp
in
pop
sbb
outsl
mov
mov
fcmove
jle
add
mov
and
mov
mov
mov
mov
add
xchg
mov
mov
test
mov
loop
mov
add
push
enter
sub
xchg
jecxz
add
lcall
mov
mov
dec
addr16
insb
pop
fsubp
pop
loope
push
ds
jl
into
jns
cmpsb
dec
mov
dec
test
hlt
dec
and
mov
gs
inc
add
dec
lcall
mov
add
js
jp
pop
pop
mov
mov
data16
pop
and
lret
dec
in
enter
gs
add
fsubrs
push
lea
sbb
adc
cmp
add
mov
push
lret
xor
push
adc
js
adc
ficoms
xor
jno
push
stc
imul
insl
nop
add
add
jecxz
xor
iret
jg
add
and
mov
dec
jmp
outsl
fsts
inc
push
mov
mov
out
rolb
mov
lods
sbb
mov
into
lret
mov
icebp
pop
stos
inc
cwtl
mov
lea
mov
cltd
iret
jb
mov
pop
mov
in
imull
pushf
sbb
scas
movsb
gs
out
sbb
scas
sbb
xchg
outsb
dec
inc
cmp
fxch
mov
aas
pop
sbb
cltd
sub
call
clc
xor
mov
in
leave
pop
mov
insb
pop
adc
cmc
push
add
mov
push
inc
jg
add
addb
lock
decb
add
pushl
aam
dec
or
adc
adc
mov
xchg
pop
push
xlat
popa
push
test
das
outsl
fidivrl
mov
aad
cwtl
fs
adc
mov
repz
jnp
add
outsb
fistpll
lds
rolb
mov
sub
push
mov
mov
or
pop
add
rolb
mov
or
ret
sub
inc
jge
xor
imul
movsl
dec
sbb
fsubs
add
les
or
sbb
je
repnz
xor
add
mov
mov
es
mov
js
mov
imul
mov
add
cmc
dec
or
sub
lea
arpl
push
jmp
add
or
out
mov
push
dec
sbb
scas
nop
add
lods
lods
jb
mov
ficomps
fs
das
push
push
js
jmp
mov
ficoms
test
sahf
inc
dec
inc
rolb
jns
add
mov
mov
xchg
add
in
shll
inc
add
pushf
sbb
nop
add
aaa
pop
addb
ret
jmp
or
out
and
mov
sbb
add
nop
add
icebp
sbb
jbe
addb
in
cmp
addb
hlt
pop
xchg
popa
into
sub
pop
cmp
pop
mov
and
and
jae
add
mov
pcmpgtw
add
jo
mov
add
rolb
mov
add
mov
add
mov
cld
rolb
mov
and
popa
sub
rorl
inc
fcoms
mov
ficompl
xchg
test
and
mov
mov
sbb
and
psubw
and
add
mov
inc
dec
ret
and
mov
pop
mov
adc
loope
and
mov
jl
xchg
cmp
mov
pop
movsl
xchg
jne
sub
inc
imul
shl
pushf
push
adc
cli
sub
mov
inc
loopne
mov
fmull
test
mov
mov
xchg
mov
mov
cmp
fldenv
ret
call
add
test
mov
daa
test
mov
mov
sub
cltd
lahf
pop
mov
mov
add
mov
add
cli
out
test
add
lret
test
push
push
in
inc
fsubrl
add
xor
lods
sub
adc
lcall
add
cs
aam
add
push
sub
sub
frstor
mov
out
leave
mov
or
int3
sbbl
pop
dec
sbb
and
add
sbb
call
and
sub
int
sub
sub
xor
mov
add
and
or
rolb
mov
xchg
call
jp
jae
xchg
add
xlat
mov
add
stos
lret
mov
mov
push
lahf
sbb
popa
and
mov
mov
pop
outsb
scas
dec
push
cli
push
cmp
mov
add
stc
fldenv
pop
push
pusha
add
or
dec
lds
packssdw
stc
push
add
mov
mov
mov
test
or
push
pusha
add
cmpsl
add
test
cmpsl
test
xlat
jecxz
pop
inc
add
jbe
arpl
add
push
mov
pop
add
add
pushf
pop
lock
cmp
movsl
movsb
int
xchg
gs
rorl
pop
xor
psrld
mov
add
sbb
sbb
add
mull
in
arpl
inc
add
push
add
add
mov
xchg
add
es
popf
add
cs
cmpl
lds
es
adc
dec
and
add
fbstp
adc
adc
mov
pushf
inc
rolb
mov
add
sbb
add
add
rorl
xor
test
loope
xchg
push
add
push
mov
or
in
in
pop
add
mov
icebp
mov
sub
xchg
je
pop
loopne
mov
fwait
push
fisubl
movsl
loop
mov
cmc
clts
out
jo
mov
add
repnz
xchg
sub
pop
lock
jne
add
mov
cltd
push
xchg
add
and
stos
ss
mov
in
fs
pop
fidivs
not
fcmovbe
add
add
add
scas
pop
lock
fcmovne
mov
add
add
sti
jg
aam
add
push
add
xchg
mov
mov
ss
loop
mov
rolb
push
les
add
or
inc
mov
outsb
cmp
pusha
add
mov
test
xchg
add
cmp
imul
jo
mov
in
pushf
jecxz
mov
js
mov
mov
pusha
add
int
call
mov
add
mov
add
sub
repz
adc
fadds
pop
sub
rolb
add
push
cmp
addr16
add
inc
adc
mov
sti
jo
mov
add
sahf
rolb
mov
imul
mov
sub
leave
add
push
xchg
or
add
xchg
fwait
mov
xchg
add
movsl
adc
add
mov
mov
pop
push
sub
negb
add
mov
and
adc
mov
jge
outsb
add
mov
and
stos
sub
push
scas
cmp
jnp
jl
add
add
fxtract
mov
jae
jns
mov
sbb
stos
mov
arpl
and
mov
fiadds
mov
ja
hlt
mov
daa
les
cmp
je
in
or
jmp
mov
pop
and
les
pushf
mov
pop
jnp
mov
repz
dec
sahf
mov
add
rcll
add
lret
push
daa
rcll
add
mov
mov
lahf
sarl
test
xor
mov
add
test
imul
and
mov
inc
add
and
or
add
add
xchg
js
or
cmpsb
mov
sub
jl
out
cmp
push
sarl
stos
dec
inc
addb
mov
add
jl
mov
mov
jae
ret
mov
push
xchg
or
test
xchg
jle
clc
push
adc
cmp
inc
stos
dec
xor
cmp
push
icebp
cmp
jle
data16
cmp
inc
dec
scas
jle
mov
shll
jge
negb
jmp
lcall
xor
imul
fsubrl
add
jle
adc
mov
mov
repnz
add
mov
jle
aaa
int
in
add
scas
aad
dec
mov
out
sub
lret
lret
push
add
mov
dec
cmpsb
dec
ljmp
lret
add
inc
push
xor
aam
hlt
out
adc
mov
sub
add
cltd
aad
je
loop
mov
mov
lahf
cmpsl
inc
inc
in
pop
and
xchg
pop
insl
mov
mov
jmp
mov
std
cmp
fdiv
repnz
ljmp
leave
pop
test
jmp
add
or
push
dec
gs
mov
mov
xchg
test
imul
js
add
cmpsl
emms
xor
mov
push
add
push
add
mov
xor
insl
aaa
pop
imul
bound
mov
mov
mov
mov
xor
fdiv
add
add
lret
aas
and
inc
sbb
loopne
mov
add
addb
imul
dec
dec
in
fcomps
mov
adc
rolb
push
dec
outsl
das
jbe
mov
push
out
loop
mov
add
es
add
xor
adc
hlt
xchg
js
mov
xchg
sarl
xlat
nop
add
add
mov
jge
and
xchg
arpl
push
cmp
mov
or
movsl
out
jo
mov
aas
or
cmpsb
rolb
insb
cs
cmp
fwait
push
jno
in
push
call
push
adc
mov
pop
call
jno
scas
sub
sar
add
add
daa
in
add
jne
adc
add
sub
in
out
adc
lcall
sbb
mov
add
insl
xor
iret
cltd
cmpsl
scas
sbb
mov
mov
push
push
lcall
xlat
or
mov
icebp
lods
adc
or
mov
add
inc
mov
push
add
sbb
jmp
adc
add
repz
jmp
rcl
xchg
add
sub
adc
test
fdivrl
mov
push
cltd
ja
add
add
sub
icebp
cmp
mov
add
and
mov
data16
in
add
mov
mov
gs
mov
jb
mov
pop
jl
dec
daa
push
sahf
pop
jl
add
sub
push
push
rolb
mov
sahf
shll
and
mov
xor
adc
in
adc
mov
div
add
add
jnp
sub
mov
sub
xchg
add
or
add
mov
jnp
jno
add
les
sub
pop
lahf
test
cmp
mov
test
mov
gs
test
cli
mov
stos
jo
mov
bound
mov
mov
push
jbe
call
pushf
xchg
sbb
add
lahf
fisubrs
js
add
sbb
xchg
push
cwtl
sbb
imul
mov
adc
repnz
in
mov
sub
add
fisttpll
dec
inc
mov
imul
cli
addb
out
mov
enter
fs
arpl
add
inc
add
jp
add
out
lcall
scas
xor
add
mov
js
pop
jno
add
add
cmp
and
mov
push
xchg
in
dec
fldl
sbb
aad
add
jecxz
out
or
add
scas
inc
add
push
add
repz
mov
jo
mov
add
mov
int
push
dec
xlat
inc
fsubrs
sub
fnsave
jg
mov
push
outsb
xchg
into
sub
imul
adc
dec
jp
xchg
cmpsb
movl
jecxz
cmp
test
dec
inc
ret
popf
pop
shll
dec
in
mov
add
mov
dec
ret
xchg
dec
push
ret
mov
sub
es
lds
xor
sbb
or
addb
sahf
call
xor
adc
repnz
mov
dec
jp
pop
xor
lahf
mov
dec
and
mov
xor
scas
push
aam
or
xchg
imul
mov
mov
mov
mov
dec
movnti
fdivrp
jmp
jp
or
push
push
sbb
mov
pop
pop
lea
es
testb
sbb
mov
xchg
mov
callw
xchg
sbb
add
xchg
xor
mov
add
pop
data16
pop
jle
or
jbe
outsb
in
fcmovnbe
in
push
mov
aam
out
and
aaa
fisubrl
arpl
mov
mov
enter
mov
mov
ret
xor
mov
mov
jle
mov
mov
das
mov
mov
sbb
popa
rolb
testb
lock
mov
ret
fs
mov
outsl
fldcw
bound
mov
lods
leave
pop
aam
add
jp
xor
mov
mov
mov
aam
mov
nop
add
add
nop
add
add
je
daa
je
aam
sbb
clc
cmp
lods
in
loope
cmp
push
std
inc
add
mov
rolb
lret
test
adc
mov
mov
pop
push
or
mov
aas
int
sbb
adc
dec
xchg
in
test
push
mov
loope
cwtl
pop
stc
mov
sarl
outsb
insb
mov
adc
popf
push
mov
dec
or
mov
xchg
and
mov
dec
cmp
adc
mov
int3
inc
stos
je
sbb
movsl
xlat
push
bound
mov
lods
mov
mov
xor
hlt
push
fwait
xor
mov
testl
sbb
pusha
add
jg
or
or
in
push
add
or
and
mov
movsl
addr16
xchg
cli
js
xor
mov
pop
inc
nop
add
dec
cmpsb
or
cs
je
out
iret
add
mov
test
mov
xor
lret
rolb
jae
xchg
pop
mov
dec
lods
test
fdivrl
cmp
test
push
add
mov
lea
pushf
jmp
sub
cmp
arpl
pop
push
mov
add
jno
popf
mov
mov
xor
or
sbb
mov
xor
movsb
mov
lock
in
mov
fs
sbb
inc
push
mov
mov
sbb
add
rolb
mov
popa
icebp
loopne
mov
xor
pop
or
dec
push
loope
add
and
pushf
pop
adc
adc
mov
add
mov
dec
das
aas
pop
aad
cmpl
rolb
popa
cwtl
fstps
adc
mov
add
lock
pusha
add
add
add
add
sub
sbb
fs
add
add
cltd
mov
add
add
scas
mov
pop
mov
sbb
add
adc
mov
aas
cli
sub
mov
or
add
mov
jl
add
addl
lret
cmp
and
mov
sub
popa
xchg
ret
mov
pushf
cmc
dec
loopne
mov
add
pop
cltd
fnstcw
ds
pop
mov
or
lds
dec
je
std
cwtl
mov
xchg
aas
pop
cmp
push
add
mov
jne
ret
fdivrp
out
mov
pop
mov
aas
ss
push
xchg
cmp
cmpsl
inc
mov
inc
arpl
mov
add
sti
js
or
mov
add
mov
inc
sub
imul
mov
std
inc
pop
arpl
add
mov
sub
sbb
or
mov
into
lcall
ds
leave
nop
add
jecxz
cli
leave
inc
mov
add
inc
dec
mov
mov
repnz
sub
jo
mov
les
pusha
add
sub
jmp
add
std
adc
repz
pop
out
rcrl
mov
or
aaa
push
add
lret
js
push
cwtl
mov
xlat
pushf
shll
int
jg
push
push
fisubl
das
es
bound
mov
add
insl
adc
add
outsl
mov
mov
addb
xor
mov
mov
jecxz
adc
add
adc
int
loopne
mov
mov
fstpl
jnp
lahf
push
ffree
into
mov
push
jns
mov
dec
and
jbe
dec
rorl
add
cmpsb
addb
mov
add
insl
pop
repz
or
pushf
dec
pop
pop
jmp
dec
addr16
roll
mov
ficompl
mov
cs
test
dec
xor
lods
rolb
outsl
xchg
stos
jmp
pop
fcomps
adc
xor
mov
add
movsb
dec
ja
jno
test
in
data16
das
out
lahf
paddw
mov
test
mov
inc
xor
mov
ret
movsb
sti
pop
cwtl
add
mov
xlat
rep
gs
sti
push
mov
add
jle
add
mov
cltd
or
out
aaa
or
cli
ja
das
lahf
sbb
in
add
xchg
mov
faddl
rolb
mov
sbb
lods
adc
jns
outsb
addb
mov
sbb
xchg
mov
inc
cmpl
add
inc
add
or
mov
add
test
ret
dec
xor
mov
mov
pop
in
and
mov
addr16
jae
lock
push
jg
push
xor
adc
sbb
or
movsb
adc
mov
jbe
pop
sub
adc
jne
add
ja
sahf
jae
or
push
int
lds
movsl
in
sti
mov
mov
mov
sub
sub
mov
add
in
add
mov
sub
add
mov
dec
rolb
mov
mov
fsubl
mulb
cmp
pop
sub
sub
or
in
push
xchg
adc
adc
stos
idivb
das
jns
sbb
mov
and
popf
mov
jle
testl
xor
add
pusha
add
add
aaa
sbb
mov
jnp
loop
mov
push
dec
ret
or
clc
ret
or
mov
stos
pop
jnp
ja
xor
mov
sbb
addb
insl
leave
repz
mov
add
add
scas
cmp
movsl
mov
imul
dec
or
add
in
aam
repz
bound
mov
repz
in
add
push
sub
sbb
mov
add
ja
daa
in
sub
test
cmp
add
push
jo
mov
dec
and
in
fldt
xchg
xchg
push
add
mov
clc
xchg
add
xchg
enter
cmc
xor
loope
push
lea
stos
pop
popa
cmp
mov
jno
aas
jg
pop
push
test
js
mov
je
outsb
andl
movl
aas
fstps
jp
add
push
and
psubq
add
mov
sbb
mov
fldl
cmp
jecxz
add
call
jle
lods
call
mov
mov
mov
fnstsw
test
mov
mov
mov
in
ds
sbb
out
dec
test
mov
mov
xlat
mov
push
cmp
mov
push
decl
pop
add
add
fcomp
test
pop
loopne
mov
pop
mov
in
pop
add
mov
jp
pop
lcall
xchg
repz
lds
add
mov
and
mov
add
xor
mov
mov
add
adc
pop
add
add
add
pop
fs
loop
mov
jmp
add
or
jge
mov
mov
ret
test
mov
ror
dec
mov
scas
imul
cmpsb
pop
test
xor
ja
add
dec
inc
mov
mov
sub
loope
push
adc
push
fistl
mov
addb
insl
xor
pop
rolb
mov
add
incl
inc
out
add
add
jecxz
addb
adc
call
repnz
adc
mov
mov
inc
lar
mov
cmc
dec
jmp
mov
mov
loope
inc
jmp
sub
cld
mov
mov
aaa
test
stos
or
cmpsw
mov
push
aad
push
push
mov
push
mov
cmpsl
iret
and
mov
mov
imul
aaa
and
dec
sbb
add
call
mov
icebp
ss
and
int
pop
pop
leave
mov
adc
jl
add
add
mov
int3
inc
pop
push
add
add
add
daa
out
add
mov
sbb
add
mov
mov
add
mov
outsb
mov
inc
aaa
stos
mov
clc
mov
mov
imul
aad
xchg
iret
pop
sbbl
add
mov
mov
add
mov
mov
xlat
xchg
push
sbb
ljmp
mov
or
aas
add
mov
inc
dec
lock
add
push
sbb
pop
push
sti
movsl
and
pop
bound
mov
push
test
mov
dec
mov
insb
lods
mov
mov
sbb
mov
pop
cmp
ja
outsb
mov
mov
mov
push
add
pop
into
sbb
lods
test
sahf
fwait
dec
cmp
or
out
jp
add
xchg
imul
push
push
imul
scas
outsl
out
movsb
test
mov
sbb
mov
addb
in
in
ja
pop
fwait
scas
sbb
repnz
outsl
mov
or
jle
add
repnz
or
xchg
add
mov
nop
add
push
xchg
dec
mov
repz
sub
xor
inc
push
lea
out
mov
addb
lods
leave
push
inc
mov
leave
inc
add
popa
divl
pop
inc
pushf
cs
faddl
adc
mov
cld
dec
cld
movsl
outsl
leave
push
insb
in
mov
mov
mov
ds
cli
outsb
mov
imul
mov
fldt
test
cmc
addr16
gs
xor
hlt
mov
test
cmp
fsubl
add
sub
cli
test
dec
push
fidivl
mull
ljmp
addb
aam
cmp
rolb
mov
out
mov
and
pop
mov
mov
lock
pop
rorl
mov
jge
cmp
ficoms
push
pop
push
jg
mov
mov
add
jmp
xchg
mov
add
or
sbb
xor
inc
int
push
push
add
sahf
and
mov
psubusw
xchg
add
mov
insb
pop
movsb
clc
aad
ss
int
pusha
add
in
xchg
mov
adc
dec
dec
sahf
add
mov
test
jmp
mov
andl
movsl
rcrl
out
jg
or
rcll
add
dec
jecxz
xlat
add
or
xchg
push
xchg
inc
add
hlt
add
dec
push
int
in
fcmove
ja
pop
mov
enter
mov
add
filds
pop
sub
push
inc
add
aas
scas
cld
or
lahf
xchg
repz
push
or
lds
add
jo
mov
mov
mov
je
xlat
or
in
addb
imul
mul
xor
mov
pop
cmp
in
xchg
bound
mov
add
mov
mov
add
mov
pop
xchg
aaa
sub
das
cli
aaa
mov
xchg
and
std
movsl
out
push
add
incl
imul
mov
add
mov
pop
or
inc
push
mov
repz
ds
mov
leave
sahf
cld
out
imul
push
inc
loopne
mov
int3
lret
sub
mov
pop
cmp
adc
mov
mov
adc
popa
adc
add
aam
fidivrs
sti
or
out
add
jo
mov
mov
inc
sub
loopne
mov
cwtl
xchg
insb
pusha
add
push
jecxz
dec
cwtl
aad
jne
popa
pop
xor
mov
xchg
cmp
mov
outsb
decb
ret
cld
lods
fistpl
test
add
and
mov
jno
sub
mov
cmpsl
jmp
outsl
jbe
xchg
imul
ret
sub
in
aam
add
sbb
outsb
mov
rolb
mov
pusha
add
sbb
mov
fs
addb
dec
ret
mov
or
loop
mov
aas
inc
insb
sbb
xor
ss
push
sahf
cltd
mov
mov
aad
cmpsl
enter
nop
add
mov
mov
les
leave
fs
arpl
push
leave
pusha
add
add
stc
and
leave
pop
loope
add
fwait
int3
xchg
inc
xor
xor
push
ror
dec
or
filds
add
adc
repz
in
sub
dec
leave
pop
mov
xchg
adc
mov
sbb
jge
ja
fbld
daa
xchg
inc
mov
andnps
mov
loope
call
clc
lds
loope
cmp
xchg
pop
call
mov
mov
into
ja
push
xor
dec
sbb
mov
push
add
into
fisubs
insl
aad
inc
xchg
xchg
mov
loopne
mov
add
and
mov
leave
xchg
xchg
cltd
push
adc
mov
add
pop
jmp
mov
add
clc
iret
ret
jno
add
scas
sbb
out
out
movsl
in
adc
pop
inc
clc
bound
mov
xchg
xchg
mov
mov
inc
add
mov
push
fcompl
lret
test
mov
dec
mov
js
inc
shrl
cltd
gs
mov
xchg
add
cs
sub
mov
mov
pop
dec
repnz
mov
mov
mov
or
iret
xor
add
std
pop
fmull
add
add
add
push
pop
lea
out
add
mov
cmpsb
aad
mov
addl
mov
jl
rolb
mov
leave
cli
pop
sub
push
ret
test
ficoms
gs
adc
mov
addb
xchg
jp
xor
mov
push
xchg
aas
pop
cld
cltd
lds
movsl
xchg
add
add
add
lods
cmpsl
mov
push
addb
mov
das
std
xchg
cmp
xor
xchg
xor
mov
xchg
xchg
gs
flds
push
je
hlt
lcall
daa
adc
dec
add
mov
cmp
mov
lds
lret
mov
inc
lcall
mov
ret
ja
push
ret
push
cli
filds
call
lahf
shrl
sub
mov
sbb
add
int
out
jb
mov
add
push
movsb
and
mov
dec
sub
imul
xchg
add
add
adc
lret
fistps
arpl
stos
xchg
je
int
mulb
mov
iret
daa
loope
add
mov
rolb
mov
add
ret
icebp
loope
sbb
push
loope
jbe
cmp
lret
add
movsb
add
mov
add
push
add
enter
add
xor
bound
mov
add
dec
xor
mov
mov
cmpsb
xor
mov
dec
lock
pop
xor
mov
push
clc
aad
shll
sbb
gs
push
mov
ret
xor
mov
adc
mov
inc
out
call
movsb
outsb
inc
aad
cmp
sub
ret
jns
hlt
xlat
push
adc
mov
add
xchg
icebp
push
sar
int3
mov
cld
daa
addb
pushf
leave
or
mov
add
push
add
cmpsl
xor
mov
mov
mov
mov
push
insl
cmp
fidivl
pop
arpl
mov
jmp
pop
inc
fsub
daa
push
mov
mov
and
mov
push
push
add
mov
out
add
pop
out
fsubl
pushf
cmp
add
scas
aas
mov
js
push
mov
mov
cld
or
clc
cld
mov
aas
mov
adc
add
xchg
dec
loope
mov
cmp
pop
test
xor
mov
add
test
pushf
addb
or
sub
inc
mov
inc
add
lcall
dec
popf
push
add
mov
mov
out
movsb
fwait
cmp
add
mov
daa
mov
mov
mov
sahf
mov
scas
add
mov
icebp
fiaddl
aas
cwtl
jl
stos
xor
mov
xchg
add
mov
iret
pop
push
push
cmp
rorl
mov
jo
mov
jmp
cmp
lods
xor
mov
add
dec
repz
add
mov
mov
add
lret
adc
pop
xchg
stc
mov
add
int
lea
mov
xor
or
add
sbb
add
add
adc
add
ret
ret
loope
push
xor
mov
xlat
hlt
inc
add
xor
mov
xchg
sbb
push
sub
add
dec
frstor
sti
cmp
sbb
ja
and
mov
push
jle
icebp
ret
mov
clc
inc
nop
add
cmp
or
mov
push
jno
add
sub
jl
mov
loopne
mov
lahf
mov
mov
out
fisubrs
cltd
or
xchg
mov
xor
loopne
mov
cmpsl
sub
repz
pop
xor
pop
add
add
popa
in
orl
mov
mov
mov
adc
mov
push
dec
adc
inc
clc
mov
scas
pop
fdivr
roll
enter
fbld
and
add
add
jne
adc
add
fmulp
jb
mov
xor
addb
outsb
push
sub
add
mov
rolb
cmp
int
or
hlt
inc
mov
rorl
xchg
inc
mov
loop
mov
ss
mov
add
push
xchg
and
mov
cltd
fwait
lret
add
add
push
push
add
or
ficomps
lea
adc
add
pop
adc
mov
mov
nop
add
fimull
xchg
fsub
or
xor
lcall
lock
or
pusha
add
cmovns
add
adc
mov
test
int
add
add
aad
dec
jno
add
cli
les
add
cs
imul
imull
add
int3
sti
jae
mov
bswap
cmp
inc
add
sbb
mov
test
xchg
or
mov
and
mov
add
mov
mov
add
lret
xor
rolb
mov
jb
mov
mov
mov
add
mov
push
dec
inc
add
add
lret
jb
mov
push
add
mov
and
jle
sbb
out
cmp
rolb
mov
add
mov
mov
pop
adc
mov
mov
push
sub
dec
sub
add
cmpsl
push
add
push
inc
in
dec
jno
inc
ljmp
rol
xor
ljmp
sbb
add
or
cmc
arpl
mov
dec
das
mov
rolb
mov
ret
pop
pop
xchg
push
xor
mov
add
stc
jle
mov
jge
add
mov
fcmovb
add
fisttps
mov
mov
pcmpgtw
dec
dec
pop
push
fcoml
add
std
sbb
add
push
or
add
subl
std
add
fsubrs
test
pop
mov
pop
gs
jge
xchg
lds
sbb
add
mov
jns
mov
cmpsb
cmp
call
pop
jo
mov
mov
and
scas
inc
orl
icebp
pop
pop
cmpsl
stos
shll
mov
loop
mov
xchg
add
subl
pop
jb
mov
mov
sub
gs
mov
push
mov
mov
stos
cmc
out
enter
es
mov
loopne
mov
or
dec
cmp
or
add
data16
xor
sahf
mov
lock
leave
xor
ljmp
dec
in
lea
add
cmc
hlt
ffreep
gs
pop
lock
pop
scas
fs
inc
jne
add
pop
xchg
xor
mov
add
jb
push
add
loope
aaa
and
sub
add
mov
mov
scas
jno
adc
xchg
mov
xadd
loop
mov
icebp
sub
add
add
xor
mov
aam
popf
nop
add
gs
cmp
insb
mov
out
lahf
cld
test
mov
sub
int
lret
addb
mov
mov
pop
fists
mov
mov
add
lcall
stos
sbb
jg
sub
cmp
mov
fcmovnbe
mov
add
add
sbbl
pusha
add
sbb
xchg
aaa
mov
xor
mov
cmpsl
imulb
dec
mov
lahf
lret
pop
xchg
mov
lods
jo
mov
scas
xchg
xor
mov
add
push
xor
cli
push
adcl
aam
pop
xor
add
adc
push
mov
movsl
notb
rolb
mov
fmull
sub
insb
dec
lods
mov
mov
push
push
adc
add
data16
mov
add
imull
mov
adc
mov
cwtl
mov
mov
add
add
jb
mov
data16
pop
aas
xchg
mov
add
jb
mov
clc
leave
cmovno
fstpt
add
fsts
ret
jle
push
addb
fiaddl
fists
lds
test
test
add
adc
jnp
in
pop
sub
sbb
cmp
add
adc
enter
mov
add
fsubl
add
add
mov
iret
mov
sub
push
cmp
daa
mov
add
sub
push
sbb
or
push
push
pop
sbb
divl
cmp
cmp
popf
jp
sbb
xchg
movb
add
mov
inc
add
aam
mov
shll
jmp
xchg
ds
daa
pop
sbb
mov
test
lods
dec
out
testl
mov
daa
popf
cmp
cmpsb
mov
repnz
daa
xor
mov
inc
xor
or
dec
out
les
cmp
movsb
or
cmp
add
jnp
outsb
and
jnp
ds
cmp
int
lock
jnp
test
xchg
jmp
stos
xchg
notb
mov
push
out
popf
rolb
or
imul
add
ja
mov
xchg
imul
into
fdivr
and
mov
xor
jb
mov
addb
mov
aas
sbb
mov
mov
ret
lea
add
pop
mov
add
mov
xor
stc
inc
add
xchg
xchg
add
add
lods
inc
add
mov
mov
pop
jno
sarl
mov
aam
sub
mov
pop
cwtl
xor
fmul
add
out
push
sub
cmp
cmpsb
movsl
jge
xchg
mov
push
pushf
aad
sub
enter
jns
add
inc
fcom
ss
int3
pop
mov
mov
hlt
mov
sub
inc
adc
mov
inc
insb
or
dec
xor
add
lahf
pop
mov
mov
sub
stos
and
in
inc
mov
add
add
sbb
insb
repnz
push
add
jo
mov
out
popf
jg
scas
dec
movsl
cld
inc
add
imul
mov
test
pop
test
lods
pop
jo
mov
arpl
push
or
cs
push
je
xor
in
nop
add
test
jmp
push
lret
add
pop
mov
mov
add
xor
mov
add
std
push
add
pop
lret
cmp
add
lods
dec
daa
push
lods
dec
dec
popa
popa
pop
mov
mov
scas
xchg
pop
sti
lods
je
movsb
pop
dec
int
xor
fildl
call
int
lods
sub
or
mov
add
add
add
pop
ret
test
jle
push
roll
data16
xchg
cmpsl
addb
pop
jl
push
and
mov
mov
xchg
add
add
mov
cmpsl
push
add
sbb
mov
mov
mov
and
mov
xor
pop
mov
sbb
push
add
mov
add
mov
nop
add
cmp
xchg
loop
mov
pop
jnp
fsubl
or
loop
mov
addl
aam
lods
inc
add
add
jnp
cmp
and
cmp
cmp
test
ljmp
mov
fs
hlt
orl
mov
mov
es
loope
aas
and
mov
data16
pushf
cmp
jle
pop
cmc
fdivs
fs
sbb
add
sti
fcmovnu
call
mov
mov
cmp
add
or
lea
mov
mov
sbbl
mov
add
test
iret
lret
cmp
sub
fadds
mov
out
lock
addb
xor
mov
xor
dec
sbb
pop
and
mov
popf
shll
pop
add
sub
push
or
mov
daa
addr16
or
mov
jle
add
pop
cmp
scas
popf
cmp
inc
add
addr16
mov
ljmp
sarl
out
jb
mov
mov
adc
xchg
add
cmp
sub
add
add
iret
lock
mov
add
adc
mov
add
pop
in
lock
shrl
cmp
jecxz
int
push
push
cmp
sbb
in
rolb
mov
inc
inc
outsl
jnp
je
add
std
fstl
mov
cmp
mov
mov
add
mov
pusha
add
push
add
mov
add
add
add
rolb
mov
mov
cmc
jl
push
addb
das
mov
add
aad
and
cmp
mov
testl
insl
fldt
dec
push
adc
xchg
pop
xchg
mov
mov
mov
iret
movsb
push
adc
daa
adc
cmc
mov
add
rolb
inc
jg
movsl
out
data16
icebp
cmp
add
inc
ss
rolb
mov
out
data16
clc
jne
xchg
lret
mov
stos
lods
scas
adc
call
add
mov
rolb
stos
ja
push
mov
cmpsl
sbb
add
inc
ret
jp
scas
mov
add
mov
mov
xlat
push
rolb
mov
xor
inc
nop
add
sub
add
repz
insb
add
movsl
stos
ss
scas
in
adc
mov
mov
cltd
scas
aas
out
popa
xchg
arpl
add
int
add
mov
mov
add
dec
lds
add
mov
imul
adc
push
pop
fwait
in
sbb
je
or
test
push
fisubs
out
mov
mov
fwait
sarl
and
cmpsb
scas
sti
xchg
mov
stos
bound
mov
mov
inc
add
mov
sub
cmpsl
push
mov
lret
dec
mov
stos
movsl
cld
adc
mov
add
cwtl
pushf
repz
add
add
dec
jg,pt
push
pusha
add
sub
add
shll
subl
push
je
lock
and
sarl
bound
mov
add
add
jecxz
dec
loopne
mov
xor
mov
xor
push
mov
mov
scas
hlt
mov
pusha
add
loope
jne
and
insb
ljmp
cli
popa
mov
cmp
push
xor
mov
cli
push
lods
sbb
sbb
sub
idivb
add
mov
xchg
ss
add
imul
mov
push
add
push
inc
cmpsb
outsl
jecxz
ficoml
and
mov
decl
repz
mov
adc
push
pop
xchg
lret
imul
inc
add
mov
sbb
ja
sti
pop
sahf
idivb
and
hlt
sub
fwait
ljmp
sbb
loope
mov
stc
mov
add
mov
mov
adc
mov
lcall
mov
pushf
sbb
fstl
add
push
pop
fwait
jns
out
dec
mov
aad
add
dec
pop
das
xchg
sti
mov
out
mov
mov
cmp
fs
idivl
sub
add
add
and
xchg
popf
addb
and
mov
add
fmul
inc
or
loop
mov
sub
pushf
pop
inc
add
and
fsubl
mov
outsb
pop
insb
inc
add
mov
xchg
clc
pop
out
adc
add
int
stos
adc
xchg
or
pop
xor
repz
iret
cmp
pop
lret
std
xor
addl
mov
fildl
shll
mov
xchg
rolb
gs
outsl
xor
addl
stos
test
add
xchg
mov
fists
add
sbb
jge
dec
push
jns
mov
mov
test
jl
mov
jo
mov
clc
mov
out
xchg
add
lds
add
mov
mov
inc
popf
xchg
pop
mov
lds
xor
mov
add
pop
dec
int3
cld
pop
and
mov
add
pop
mov
int3
imul
sub
in
sub
push
mov
add
add
adc
mov
push
mov
ja
add
scas
test
cmp
ljmp
jnp
mov
fidivs
mov
inc
add
in
or
xchg
sti
mov
test
sbb
pop
push
sahf
imul
cmpsb
cmp
add
xlat
pop
inc
add
push
pop
sub
mov
or
and
mov
pop
aaa
fists
add
mov
jno
add
aam
inc
push
daa
xor
xor
bound
mov
mov
hlt
imul
insl
or
dec
sbb
pop
ret
mov
sbb
add
addr16
push
pop
adc
scas
popf
addb
fwait
mov
aaa
pop
push
sti
popf
out
add
mov
mov
ficoms
dec
xchg
popf
fnstenv
add
loopne
mov
std
push
ss
cmpsl
mov
int
pop
mov
add
out
leave
or
lds
and
mov
jl
add
and
mov
mov
aam
lock
push
mov
xchg
add
add
outsb
push
es
fs
cmp
add
pushf
mov
movsl
je
insl
sub
outsl
pop
scas
or
add
push
add
dec
and
mov
and
mov
cltd
pop
cmc
inc
lods
imull
add
mov
mov
mov
adc
mov
movsl
lds
add
and
mov
xchg
push
je
add
jne
loope
pop
das
fistpl
std
pop
pop
lret
addr16
mov
push
ss
add
push
add
sbb
xchg
leave
push
mov
jmp
add
mov
mov
pop
adc
mov
ljmp
fcoms
and
shrl
dec
inc
xchg
mov
lods
inc
je
adc
add
add
and
jg
insb
and
xchg
add
mov
fbld
out
fisubl
add
add
int3
movsl
sub
mov
add
test
push
jne
sub
mov
mov
mov
cmpsb
ss
pop
rep
movsl
addb
mov
mov
add
mov
mov
mov
lahf
jns
test
and
add
mov
out
jmp
jp
fsubrl
fnstcw
in
push
add
sti
fwait
add
pushf
decb
stos
inc
push
add
stos
xchg
jecxz
xchg
or
mov
xor
mov
cmp
add
mov
popa
jno
mov
arpl
aad
push
aam
add
mov
pusha
add
cmc
jecxz
enter
push
push
adc
mov
or
push
cmp
add
add
cmp
lret
mov
adc
mov
and
aam
gs
jmp
ljmp
add
bound
mov
xchg
daa
inc
ret
or
mov
pop
jecxz
imul
pop
jne
test
add
lret
out
mov
mov
or
mov
in
arpl
pop
sbb
add
add
negb
ret
rolb
jbe
mov
add
repnz
jae
add
sahf
add
repnz
jae
lock
mov
fwait
cld
nop
jmp
add
add
add
fwait
cld
nop
jmp
cmp
inc
fildl
es
lahf
add
fwait
cld
nop
jmp
sbb
add
add
dec
push
jmp
add
add
add
cmp
xor
adc
add
repnz
jae
mov
add
or
clc
repnz
jae
add
cmp
clc
repnz
jae
add
mov
je
add
clc
repnz
jae
xchg
sahf
std
add
add
mov
mov
clc
repnz
jae
add
insl
mov
clc
repnz
jae
add
sub
repnz
jae
insl
add
add
bound
mov
push
clc
repnz
jae
inc
jno
add
pop
push
mov
xchg
ret
add
inc
mov
mov
push
fwait
cld
nop
jmp
adcl
call
clc
repnz
jae
lock
inc
fisttpl
sub
add
repnz
jae
xchg
add
add
dec
sub
clc
repnz
jae
add
add
sub
push
mov
xchg
ret
mov
call
clc
repnz
jae
add
add
mov
add
mov
add
add
add
mov
mov
add
clc
repnz
jae
insl
add
add
iret
cmpl
fwait
cld
nop
jmp
add
cmp
jl
clc
repnz
jae
add
adc
sbb
jl
in
pop
push
mov
xchg
ret
add
add
sahf
add
nop
jmp
nop
add
add
jl
or
xor
add
fwait
cld
nop
jmp
inc
add
mov
cld
nop
jmp
nop
add
mov
add
mov
mov
push
mov
xchg
ret
mov
or
or
clc
repnz
jae
add
inc
mov
inc
add
nop
jmp
add
add
add
push
mov
and
xchg
bound
clc
add
sbb
jmp
inc
mov
insl
add
add
repnz
jae
jo
add
add
add
cmp
repnz
jae
pop
insl
les
insl
push
clc
repnz
jae
ret
shl
fldl
add
add
push
push
mov
xchg
ret
add
fnsave
pusha
add
bound
mov
jns
rclb
adc
inc
add
inc
add
cmp
jne
clc
repnz
jae
add
push
dec
mov
clc
repnz
jae
loope
add
push
mov
cltd
xor
in
test
inc
add
insb
cmp
add
adc
add
add
incb
lret
add
repnz
jae
nop
cmp
add
mov
mov
add
clc
repnz
jae
add
mov
nop
jae
loope
mov
add
in
mov
push
mov
xchg
ret
add
add
nop
out
jne
fwait
cld
nop
jmp
mov
call
jae
or
add
mov
mov
loop
clc
repnz
jae
add
mov
mov
xchg
ret
adc
ret
es
or
clc
repnz
jae
sbb
push
sub
mov
clc
repnz
jae
add
dec
push
push
mov
xchg
ret
mov
adc
std
clc
repnz
jae
add
add
mov
ret
adc
nop
jae
ret
add
add
popa
imul
add
mov
add
scas
add
xor
add
jnp
rcrb
add
add
add
lock
mov
nop
jae
pusha
lock
sahf
cmp
movb
repnz
jae
adc
jp
pop
dec
add
clc
repnz
jae
add
add
inc
push
xor
and
mov
mov
repnz
jae
add
mov
shrl
repnz
jae
cmp
mov
mov
jae
add
pushf
add
xlat
pusha
add
push
icebp
imul
add
add
add
push
pop
add
rep
push
mov
xchg
ret
sbb
mov
arpl
cld
nop
jmp
pushf
jb
or
out
lea
push
mov
xchg
ret
jno
push
add
add
clc
repnz
jae
mov
add
sbb
xchg
call
add
clc
repnz
jae
pushf
add
lods
push
push
mov
xchg
ret
xlat
add
xchg
addl
add
and
push
mov
xchg
ret
add
add
rclb
push
inc
add
add
add
add
repnz
jae
add
addb
clc
repnz
jae
or
add
add
pop
add
fwait
cld
nop
jmp
sbb
mov
aam
jne
fwait
cld
nop
jmp
insl
add
clc
repnz
jae
mov
push
add
ret
sub
roll
xchg
ret
add
out
inc
loop
mov
movsb
mov
call
clc
repnz
jae
xchg
add
add
mov
adc
repnz
jae
add
mov
mov
add
clc
repnz
jae
add
cmp
jl
sbb
test
or
add
repnz
jae
or
add
push
mov
xchg
ret
inc
inc
mov
mov
clc
repnz
jae
add
mov
mov
xchg
ret
or
mov
add
add
cmp
mov
xchg
ret
sbb
rolb
mov
push
mov
xchg
ret
cmp
add
add
das
add
clc
repnz
jae
add
adc
loope
inc
sti
push
fwait
cld
nop
jmp
roll
add
mov
punpcklbw
fmul
inc
add
add
scas
jmp
add
mov
xchg
add
addl
cld
testl
fwait
cld
nop
jmp
add
lock
and
popa
fs
repnz
jae
add
add
repnz
jae
add
add
clc
repnz
jae
cmp
insl
add
add
andl
adcl
add
jb
xchg
add
cmp
and
mov
mov
mov
inc
add
nop
addl
adc
nop
jae
fildl
add
mov
pushf
mov
mov
push
mov
xchg
ret
rcl
add
addr16
mov
add
repnz
jae
add
add
push
add
push
mov
xchg
ret
pusha
xchg
add
mov
aas
rolb
xchg
ret
add
fildl
jb
cmp
stos
fwait
cld
nop
jmp
jl
xchg
xor
xchg
add
loop
mov
add
clc
repnz
jae
xor
or
add
ds
mov
pop
add
inc
cmpsl
push
add
xchg
or
clc
repnz
jae
add
repnz
jae
xor
rolb
add
push
mov
xchg
ret
add
cmp
jmp
add
add
add
add
add
repnz
jae
add
add
add
iret
push
push
mov
xchg
ret
sbb
mov
insl
lea
fwait
cld
nop
jmp
inc
mov
add
cmp
push
sbb
add
add
xor
add
add
in
add
fwait
cld
nop
jmp
ret
add
sub
add
dec
add
push
mov
xchg
ret
nop
pushf
pushf
jmp
fisttpl
jae
add
nop
mov
add
fwait
cld
nop
jmp
mov
fildl
sub
nop
jmp
mov
add
rcrb
clc
mov
fwait
cld
nop
jmp
pop
mov
sub
add
nop
jae
add
xchg
pusha
inc
add
nop
jmp
add
sub
add
add
fwait
cld
nop
jmp
add
jb
add
mov
mov
clc
repnz
jae
add
mov
in
xchg
xor
test
add
enter
int3
lea
push
mov
xchg
ret
nop
jno
jl
popa
fwait
cld
nop
jmp
add
or
nop
roll
add
scas
mov
push
mov
xchg
ret
add
or
and
inc
add
sahf
pop
add
mov
cmp
ret
std
add
pushf
sbb
call
jae
cmp
add
lock
add
cld
nop
jmp
add
add
in
jo
mov
push
push
mov
xchg
ret
nop
orl
aas
movb
cmp
ret
shrb
add
jecxz
push
clc
repnz
jae
lcall
mov
sti
cmpl
fwait
cld
nop
jmp
inc
iret
add
pusha
loope
add
clc
repnz
jae
shlb
mov
and
clc
repnz
jae
or
iret
mov
repnz
mov
inc
add
les
or
js
fwait
cld
nop
jmp
cmp
arpl
add
push
mov
xchg
ret
mov
or
inc
pop
jg
mov
nop
jae
add
dec
mov
push
mov
xchg
ret
add
add
clc
repnz
jae
sub
add
stc
add
clc
repnz
jae
pop
iret
add
sbb
mov
clc
repnz
jae
xchg
add
or
cld
nop
jmp
add
mov
xor
sub
mov
xchg
ret
rolb
mov
mov
nop
jmp
incl
pop
xchg
mov
mov
pusha
push
mov
xchg
ret
cmp
add
mov
mov
nop
jmp
dec
mov
pop
add
inc
cmp
or
nop
jae
add
arpl
add
incl
add
mov
add
nop
add
or
test
and
add
repnz
jae
loope
add
or
clc
push
mov
xchg
ret
jl
inc
pusha
add
movzwl
clc
repnz
jae
nop
les
or
repnz
jae
pushf
pop
add
jmp
add
dec
push
add
add
sub
inc
add
pushf
mov
in
pop
pop
fwait
cld
nop
jmp
mov
rcl
push
rolb
mov
mov
clc
repnz
jae
iret
inc
add
jo
mov
jmp
add
push
add
xlat
add
ret
mov
mov
repnz
jae
add
jl
pushf
inc
clc
repnz
jae
fnstsw
add
out
xor
clc
repnz
jae
add
std
jo
add
roll
xchg
ret
add
fldl
pushf
add
add
mov
xchg
ret
add
mov
clc
repnz
jae
ret
rorb
mov
mov
add
mov
add
jmp
jae
loope
mov
mov
nop
jmp
cmp
xchg
add
addl
push
mov
xchg
ret
jo
sbb
fstpl
add
pop
fwait
cld
nop
jmp
add
loope
xlat
sub
pop
cmp
repnz
jae
add
mov
bound
mov
nop
jmp
lock
add
pop
lea
clc
repnz
jae
fisttpll
sbb
jae
sahf
add
ret
loope
add
repnz
jae
add
add
adcl
addl
add
les
add
jno
cmp
test
repnz
jae
sbb
jb
jmp
add
add
mov
or
add
cmp
mov
add
mov
add
cmc
out
loope
scas
lea
clc
repnz
jae
add
jno
div
fwait
cld
nop
jmp
pushf
incl
add
cmp
pusha
push
aas
fwait
cld
nop
jmp
add
add
push
xchg
pop
stos
clc
repnz
jae
mov
add
push
fisttpl
jp
fwait
cld
nop
jmp
xchg
add
mov
jo
mov
lret
nop
jmp
add
or
inc
mov
jl
sbb
repnz
jae
or
mov
mov
xchg
ret
jo
add
rolb
mov
push
pop
clc
repnz
jae
jl
mov
xchg
dec
add
push
mov
xchg
ret
ret
mov
imul
clc
repnz
jae
mov
sbb
or
adc
add
repnz
jae
mov
test
push
nop
jae
add
mov
cmp
pop
mov
clc
repnz
jae
add
add
push
push
mov
xchg
ret
pushf
pushf
rcr
cmp
mov
push
mov
xchg
ret
mov
lock
clc
repnz
jae
add
add
notl
mov
add
add
fwait
cld
nop
jmp
add
inc
and
fwait
cld
nop
jmp
sub
add
add
jns
add
repnz
jae
jb
orl
mov
repnz
jae
add
addl
add
add
mov
clc
repnz
jae
add
mov
mov
rclb
mov
mov
fwait
cld
nop
jmp
add
jae
std
mov
orb
pushl
push
mov
xchg
ret
mov
xchg
add
clc
repnz
jae
add
inc
jnp
push
mov
xchg
ret
add
add
add
mov
lea
clc
repnz
jae
xchg
add
lea
clc
repnz
jae
sub
add
jl
jne
int
fwait
cld
nop
jmp
add
add
jb
jl
mov
outsl
rep
fwait
cld
nop
jmp
add
add
stc
je
fwait
cld
nop
jmp
nop
mov
mull
cld
nop
jmp
add
nop
sahf
mov
clc
repnz
jae
add
add
ret
mov
xor
jae
sahf
add
push
stc
dec
clc
repnz
jae
mov
add
inc
adc
repnz
jae
ret
add
mov
add
xchg
lods
lea
push
mov
xchg
ret
add
add
xchg
add
clc
repnz
jae
jo
add
add
les
clc
repnz
jae
pop
add
add
cmp
cld
nop
jmp
add
mov
or
repnz
jae
mov
mov
nop
jae
or
add
xchg
lea
nop
jmp
jno
mov
sar
clc
repnz
jae
rcrb
mov
cmp
sbbb
add
add
add
add
loopne
clc
repnz
jae
cmp
add
pop
mov
xor
add
clc
repnz
jae
mov
nop
jae
add
jo
add
push
clc
repnz
jae
add
rcrl
add
jne
fwait
cld
nop
jmp
sbb
pushf
ret
mov
add
clc
repnz
jae
jo
add
jno
les
repnz
jae
inc
pushf
adc
clc
repnz
jae
add
add
mov
and
clc
repnz
jae
pushf
add
das
call
clc
repnz
jae
orl
xchg
add
add
insl
addl
add
add
add
clc
repnz
jae
pushl
clc
repnz
jae
add
xlat
add
pop
add
clc
repnz
jae
cmp
pop
jb
inc
popa
rcrl
add
add
repnz
jae
add
cmpsl
mov
mov
fmuls
test
repnz
jae
add
inc
mov
mov
or
clc
repnz
jae
add
sarl
jg
clc
repnz
jae
mov
mov
mov
xchg
ret
jb
cmp
add
adc
repnz
jae
pushf
cmp
add
ret
mov
repz
mov
xchg
ret
insl
cmp
add
hlt
dec
rol
fwait
cld
nop
jmp
add
add
xlat
add
xor
mov
xor
push
mov
xchg
ret
add
add
xchg
add
nop
jae
xor
mov
jmp
rcl
mov
clc
repnz
jae
xchg
add
pop
lock
jmp
jmp
add
mov
rorl
add
mov
xchg
ret
jb
add
les
repnz
jae
inc
insl
rcl
add
clc
repnz
jae
add
add
fildl
mov
ljmp
es
lcall
add
mov
add
mov
add
cld
incl
nop
add
add
jb
fwait
cld
nop
jmp
or
divl
nop
jae
mov
cmp
add
mov
xchg
ret
add
insl
mov
mov
adc
mov
push
fwait
cld
nop
jmp
add
mov
add
add
and
push
fs
repnz
jae
add
dec
inc
jg
dec
add
repnz
jae
mov
loop
mov
inc
add
mov
xchg
clc
repnz
jae
mov
ret
mov
mov
mov
and
push
mov
xchg
ret
add
rolb
ljmp
add
mov
scas
mov
clc
repnz
jae
add
xorb
movsl
clc
repnz
jae
jo
add
pop
clc
repnz
jae
pop
pushf
add
mov
iret
mov
push
push
mov
xchg
ret
add
add
pusha
add
mov
clc
repnz
jae
add
add
pop
xor
clc
repnz
jae
loope
add
bound
mov
andl
pop
add
fwait
cld
nop
jmp
roll
add
jb
rolb
pop
clc
repnz
jae
nop
add
aaa
cmpsl
test
mov
xchg
ret
orl
mov
or
cmp
add
addb
jecxz
mov
xor
mov
mov
clc
repnz
jae
insl
inc
add
add
add
clc
repnz
jae
subb
pushf
add
mov
je
clc
repnz
jae
add
add
cmpl
fwait
cld
nop
jmp
inc
add
incl
xchg
dec
mov
fwait
cld
nop
jmp
add
pushf
xlat
add
cmpl
lret
incl
add
aad
addr16
inc
fwait
cld
nop
jmp
adc
ffree
iret
push
mov
mov
mov
in
xor
add
hlt
rolb
fistpll
fwait
cld
nop
jmp
mov
or
in
clc
pushf
insl
xchg
add
lock
xchg
je
dec
mov
clc
repnz
jae
add
add
xlat
add
xchg
cmpl
sub
incl
pusha
push
add
add
clc
repnz
jae
xchg
add
inc
call
push
clc
repnz
jae
add
add
add
add
mov
jmp
ljmp
add
xor
lock
sbb
test
add
clc
repnz
jae
add
mov
push
mov
xchg
ret
adc
mov
aad
mov
mov
xchg
ret
inc
add
add
dec
add
fwait
cld
nop
jmp
sahf
mov
add
clc
repnz
jae
xlat
mov
jno
mov
add
mov
xchg
push
cmpsb
xor
mov
push
mov
xchg
ret
xchg
add
xor
clc
repnz
jae
xchg
xchg
iret
sub
les
call
clc
repnz
jae
sbb
add
add
mov
rep
clc
repnz
jae
add
mov
lea
clc
repnz
jae
addl
jl
clc
repnz
jae
insl
addb
add
pushf
xlat
les
clc
repnz
jae
sbb
add
jne
fwait
cld
nop
jmp
mov
cmc
gs
call
clc
repnz
jae
mov
jne
fwait
cld
nop
jmp
jo
add
mov
mov
add
repnz
jae
add
pop
orl
clc
repnz
jae
mov
add
outsb
call
clc
repnz
jae
rorb
add
bound
mov
add
xor
mov
mov
xchg
ret
mov
mov
nop
jmp
add
add
nop
jno
sbb
rep
push
mov
xchg
ret
add
mov
movsl
jmp
cld
nop
jmp
pop
add
add
or
clc
repnz
jae
cmp
xlat
mov
add
fwait
cld
nop
jmp
add
mov
mov
clc
repnz
jae
add
repnz
jae
std
dec
mov
incb
clc
clc
repnz
jae
pusha
fildl
jo
add
out
xchg
fwait
cld
nop
jmp
add
push
add
cmp
repnz
jae
cmp
add
and
clc
repnz
jae
add
add
ret
clc
repnz
jae
add
mov
sbb
repnz
jae
lock
add
call
fwait
cld
nop
jmp
add
add
mov
repnz
jae
fldl
pusha
add
lea
clc
repnz
jae
pop
sbb
out
jle
clc
repnz
jae
mov
sub
clc
repnz
jae
les
mov
jno
movzwl
clc
repnz
jae
add
sbb
add
stos
add
add
xchg
xchg
add
mov
mov
jne
clc
repnz
jae
or
decl
repz
add
add
add
xchg
cmp
jge
inc
add
add
mov
fwait
cld
nop
jmp
add
pusha
add
mov
add
push
adc
clc
repnz
jae
push
add
add
add
nop
jae
add
add
sarl
jae
loope
or
addl
or
fwait
cld
nop
jmp
add
add
lock
mov
add
clc
repnz
jae
rcll
bound
mov
repnz
jae
add
add
add
sahf
call
clc
repnz
jae
add
nop
fwait
push
clc
repnz
jae
mov
xchg
jo
jo
add
fwait
cld
nop
jmp
or
jl
pusha
iret
jb
mov
cld
nop
jmp
add
stos
mov
clc
repnz
jae
xlat
sub
lock
sub
mov
xchg
ret
add
mov
add
inc
add
nop
jo
cmp
out
or
nop
jmp
add
mov
xor
movsl
loopne
mov
rolb
mov
mov
push
mov
xchg
ret
add
pop
fs
fwait
cld
nop
jmp
add
add
mov
fiaddl
xchg
ret
cmp
pushf
jb
add
jmp
or
add
clc
repnz
jae
mov
add
mov
xor
cld
nop
jmp
add
add
add
push
clc
repnz
jae
add
add
add
iret
stos
mov
clc
repnz
jae
add
mov
adc
nop
jae
mov
iret
xchg
push
jp
jmp
orl
incl
add
inc
add
repnz
jae
insl
add
jo
mov
add
cld
nop
jmp
pushf
mov
les
add
mov
fwait
cld
nop
jmp
inc
mov
add
ljmp
cld
nop
jmp
insl
std
add
mov
xor
inc
add
xchg
add
mov
clc
repnz
jae
add
mov
jae
mov
mov
add
jae
fisttpll
dec
add
push
mov
xchg
ret
inc
add
add
add
repnz
jae
rorl
add
xchg
jmp
mov
imul
fwait
cld
nop
jmp
inc
cmp
test
add
clc
repnz
jae
xchg
jo
je
push
add
nop
jmp
add
jl
call
add
add
in
mov
clc
repnz
jae
xchg
xlat
rolb
mov
push
mov
xchg
ret
mov
add
add
sub
inc
or
mov
xchg
ret
mov
je
add
and
repnz
jae
add
dec
or
fwait
cld
nop
jmp
add
add
mov
mov
clc
repnz
jae
add
std
mov
mov
lahf
subb
add
mov
add
add
push
add
nop
jmp
iret
pop
add
mov
aaa
shll
mov
clc
repnz
jae
or
add
add
fwait
cld
nop
jmp
inc
push
add
mov
push
mov
xchg
ret
mov
xor
mov
mov
dec
clc
repnz
jae
or
add
popl
clc
repnz
jae
add
incl
add
fimull
and
inc
add
inc
push
add
mov
clc
repnz
jae
add
adcb
clc
repnz
jae
add
mov
add
mov
int
add
jno
add
ret
or
add
jo
mov
lock
add
add
lcall
icebp
call
and
mov
mov
repnz
jae
add
add
add
cld
nop
jmp
xlat
xchg
add
cmp
add
or
add
add
sbb
mov
andl
jae
add
std
add
loope
mov
push
mov
xchg
ret
add
add
xchg
add
jae
add
pushf
fldl
mov
decl
mov
add
repnz
jae
mov
add
add
mov
fwait
cld
nop
jmp
jl
add
add
and
mov
jmp
nop
jae
pop
addl
push
dec
shl
fwait
cld
nop
jmp
lock
nop
inc
inc
mov
push
lock
push
add
adc
mov
mov
sti
add
add
sti
incl
add
add
clc
repnz
jae
mov
sbb
push
mov
xchg
ret
dec
or
add
add
mov
mov
clc
repnz
jae
mov
mov
add
add
repnz
jae
add
add
clc
repnz
jae
dec
pop
jno
sahf
mov
xor
pop
call
clc
repnz
jae
add
add
push
clc
repnz
jae
mov
add
jo
pop
push
mov
xchg
ret
ret
ret
add
mov
add
cld
nop
jmp
add
mov
fistl
sub
popa
add
cld
nop
jmp
add
add
add
fisttpl
jns
inc
add
lock
pop
mov
inc
jne
add
repnz
jae
add
add
mov
mov
repnz
jae
sbb
or
push
ljmp
jae
add
inc
add
mov
clc
repnz
jae
add
add
xchg
add
repnz
jae
add
xor
clc
repnz
jae
rcrl
add
les
add
idiv
jl
add
add
cmp
cmp
nop
jae
add
add
add
mov
xchg
ret
loope
sbb
test
fwait
cld
nop
jmp
or
sbb
add
push
mov
xchg
ret
xchg
rcrl
cmp
push
mov
xchg
ret
cmp
add
mov
mov
cld
nop
jmp
iret
add
add
outsb
je
repnz
jae
fnsave
add
add
repnz
jae
add
aaa
jbe
add
clc
repnz
jae
add
or
add
mov
add
add
repnz
jae
xor
cmp
js
repnz
jae
add
pushf
pushf
mov
das
cmpl
fwait
cld
nop
jmp
add
incl
xchg
add
ss
mov
or
mov
xchg
ret
add
fisttpl
addr16
pop
popa
clc
repnz
jae
jno
add
mov
pusha
clc
repnz
jae
mov
add
int
push
mov
xchg
ret
mov
add
mov
jle
clc
repnz
jae
add
xor
add
or
and
incl
adcl
push
mov
xchg
ret
add
pushf
or
push
clc
repnz
jae
add
pop
add
add
sbb
xor
inc
add
add
add
push
iret
push
push
mov
xchg
ret
add
jb
adc
and
mov
xchg
ret
mov
pop
je
fwait
cld
nop
jmp
xlat
sahf
add
repnz
jae
add
mov
rcl
rolb
mov
sub
mov
xchg
ret
xlat
push
xor
push
mov
lcall
cltd
inc
add
add
add
cmp
jne
push
mov
xchg
ret
add
add
adc
jae
add
inc
or
jmp
mov
add
clc
clc
repnz
jae
add
xchg
mov
clc
repnz
jae
add
sub
jb
jae
fwait
cld
nop
jmp
add
add
sbb
mov
cmp
mov
add
mov
jo
mov
test
repnz
jae
add
add
repnz
jae
lock
add
sbb
cmp
popa
add
repnz
jae
cmp
add
add
aaa
in
cld
clc
repnz
jae
jl
add
add
repnz
jae
inc
push
add
iret
adcl
inc
fwait
cld
nop
jmp
add
push
sbb
add
clc
repnz
jae
mov
add
add
cmp
repnz
jae
xchg
add
mov
add
in
mov
fwait
cld
nop
jmp
inc
pop
jb
mov
add
mov
pop
clc
repnz
jae
mov
nop
fldl
pop
add
xlat
xlat
scas
mov
clc
repnz
jae
push
ret
mov
pushl
clc
repnz
jae
add
add
add
dec
push
clc
repnz
jae
pushf
add
addb
insl
add
jmp
lock
mov
movzwl
clc
repnz
jae
add
jmp
sbb
sar
orb
mov
mov
add
repnz
jae
xchg
ret
nop
add
push
add
insb
test
jmp
add
add
nop
rolb
or
lds
aam
je
fwait
cld
nop
jmp
xchg
xor
cmp
nop
add
mov
xor
add
clc
repnz
jae
mov
enter
jmp
add
add
dec
jo
add
fwait
cld
nop
jmp
mov
add
add
fwait
cld
nop
jmp
pushf
adc
xchg
add
add
mov
clc
repnz
jae
add
mov
add
add
clc
repnz
jae
sub
pop
fldt
shrb
mov
xchg
ret
add
or
loope
test
clc
repnz
jae
addl
ret
push
mov
xchg
ret
fildl
iret
add
lock
fwait
cld
nop
jmp
add
add
gs
add
push
mov
xchg
ret
mov
inc
xchg
mov
in
pop
fwait
cld
nop
jmp
xchg
add
add
loop
mov
add
in
inc
add
mov
add
mov
clc
repnz
jae
add
add
mov
ss
repnz
jae
sbb
add
xor
add
pop
clc
repnz
jae
rcr
jb
add
add
rolb
mov
mov
mov
add
add
stos
add
icebp
xchg
stc
add
cmc
loope
mov
clc
repnz
jae
pop
mov
lret
push
mov
xchg
ret
xchg
add
cmp
fldcw
inc
xor
clc
repnz
jae
mov
add
add
pusha
fwait
cld
nop
jmp
dec
jb
add
roll
repnz
jae
add
inc
fstpl
mov
xchg
ret
add
add
xor
add
clc
repnz
jae
add
add
add
mov
mov
clc
repnz
jae
pop
nop
adc
imul
jecxz
clc
repnz
jae
jo
add
jb
mov
or
popa
add
repnz
jae
mov
ret
add
jg
neg
clc
repnz
jae
add
inc
lock
repnz
jae
nop
or
push
sti
mov
clc
repnz
jae
add
add
add
jg
mov
adc
repnz
jae
or
add
add
clc
repnz
jae
pusha
add
cmp
inc
add
add
adc
je
clc
repnz
jae
add
and
mov
xchg
ret
pushf
pushf
add
nop
jb
mov
fdivrp
incl
or
nop
sbb
add
mov
out
mov
push
mov
xchg
ret
shlb
mov
jno
mov
mov
clc
repnz
jae
add
add
add
mov
mov
test
fwait
cld
nop
jmp
adc
pushf
add
add
rolb
xchg
ret
mov
add
add
mov
clc
repnz
jae
add
repnz
jae
cmp
sahf
add
add
imul
clc
repnz
jae
mov
or
xchg
add
sub
add
xchg
loopne
add
mov
push
mov
add
add
or
inc
ret
jmp
jmp
and
add
add
add
or
jne
fwait
cld
nop
jmp
inc
add
fwait
cld
nop
jmp
mov
add
add
add
mov
clc
repnz
jae
nop
nop
add
leave
push
mov
xchg
ret
add
fs
add
clc
repnz
jae
mov
test
dec
adc
repnz
jae
nop
add
add
inc
push
clc
repnz
jae
mov
jae
add
sub
repnz
jae
cmp
test
mov
fwait
cld
nop
jmp
add
or
xchg
or
mov
mov
push
push
clc
repnz
jae
add
mov
insl
add
clc
repnz
jae
add
sar
repnz
jae
jl
add
add
add
nop
jae
fildl
pop
fisttpll
add
mov
in
add
add
mov
xor
push
mov
xchg
ret
add
nop
sbb
sahf
dec
fwait
cld
nop
jmp
rorl
xchg
mov
add
add
clc
repnz
jae
std
add
clc
repnz
jae
iret
add
andl
mov
clc
repnz
jae
add
call
adc
cmp
ret
add
add
mov
xor
mov
test
clc
repnz
jae
sbb
iret
and
aam
mov
fwait
cld
nop
jmp
mov
or
nop
pushf
inc
or
clc
repnz
jae
add
add
pop
inc
fwait
cld
nop
jmp
mov
mov
adc
repnz
jae
inc
add
add
add
clc
repnz
jae
mov
mov
fst
add
add
inc
add
sbb
or
lock
mov
repnz
jae
mov
mov
mov
mov
ret
mov
xchg
ret
add
adc
pop
push
push
mov
xchg
ret
add
sarb
popa
add
nop
add
pushl
les
inc
add
add
mov
nop
jae
add
add
inc
mov
notl
push
mov
add
aaa
add
jle
add
and
call
clc
repnz
jae
add
add
fcoms
inc
add
add
mov
sbb
add
push
mov
xchg
ret
add
add
jmp
repnz
jae
subl
lock
add
jg
clc
repnz
jae
add
pusha
add
mov
clc
repnz
jae
pushf
add
nop
in
push
push
mov
xchg
ret
sbbl
add
incl
mov
mov
rolb
sub
mov
xchg
ret
insl
add
or
pop
push
mov
xchg
ret
add
push
les
xchg
clc
repnz
jae
cmp
xor
iret
add
or
clc
repnz
jae
addl
jae
add
add
xlat
std
add
mov
clc
repnz
jae
sahf
pushf
add
sti
clc
repnz
jae
inc
pop
add
les
repnz
jae
pop
sub
add
nop
jns
mov
add
add
repnz
jae
shlb
mov
clc
repnz
jae
xchg
add
mov
fwait
cld
nop
jmp
add
movzwl
clc
repnz
jae
add
addb
in
je
clc
repnz
jae
les
push
lods
push
clc
repnz
jae
jno
cmp
jno
add
push
mov
xchg
ret
add
mov
jmp
add
mov
inc
jl
or
insb
push
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
pushf
add
xor
jecxz
inc
add
lock
mov
and
ss
clc
repnz
jae
mov
clc
repnz
jae
add
inc
add
add
sahf
mov
push
mov
xchg
ret
pushf
mov
mov
mov
xchg
ret
mov
xor
clc
repnz
jae
sahf
sbbl
add
mov
clc
repnz
jae
dec
insl
pushf
add
rclb
jae
add
sbb
addl
add
dec
adc
mov
inc
add
sbb
add
add
repnz
jae
mov
add
pop
call
clc
repnz
jae
inc
nop
add
xor
push
clc
repnz
jae
fstl
add
mov
repnz
jae
pushf
add
add
dec
mov
push
mov
xchg
ret
mov
pop
or
in
add
xor
add
add
das
fistpll
or
mov
xchg
ret
fisttpl
mov
jo
movsb
repnz
pop
jae
cld
nop
jmp
add
add
test
sti
clc
repnz
jae
add
add
repnz
jae
push
add
mov
test
in
clc
repnz
jae
jno
add
add
shll
mov
add
or
sbb
jno
add
add
outsb
push
sbb
add
cmp
dec
dec
test
mov
mov
mov
xchg
add
inc
rdpmc
or
jmp
mov
and
leave
pop
test
das
jb
mov
push
add
in
out
jmp
mov
lret
sub
dec
lods
mov
push
icebp
repz
push
lods
xchg
icebp
or
fadds
and
out
sub
add
hlt
mov
aaa
fimuls
dec
or
cltd
in
jmp
mov
pop
dec
push
leave
sbb
test
mov
add
push
loopne
mov
add
jmp
inc
add
stos
dec
testb
jo
mov
out
dec
iret
dec
inc
push
loopne
mov
insl
addb
loope
add
mov
ficoml
xor
mov
aam
adc
js
out
jnp
sysret
push
cmp
call
add
aam
and
ret
aaa
mov
xchg
add
sub
test
sahf
andl
jne
out
repz
cmpsb
jbe
add
bound
mov
mov
es
cli
xor
aad
lahf
push
add
rolb
mov
mov
add
add
cmp
add
mov
es
into
or
sub
lret
inc
dec
cmc
idivb
pop
std
sbb
cmp
adc
add
dec
test
out
jp
push
ljmp
mov
xchg
add
addr16
mov
mov
out
sahf
fistpll
sub
or
test
pop
pop
clc
mov
cltd
push
test
mov
es
add
bound
mov
add
pusha
add
in
inc
in
rolb
mov
add
in
fisubrs
add
add
jl
mov
dec
in
std
and
mov
add
mov
lret
pushf
nop
add
mov
and
sbb
jb
mov
and
fs
lds
mov
sbb
mov
add
pop
pop
aam
add
cmc
inc
inc
movsb
sbb
test
data16
ljmp
pop
pop
imul
mov
leave
xchg
gs
add
mov
jmp
mov
adc
mov
lahf
clc
mov
cmp
xchg
or
insl
inc
add
add
inc
jae
repz
popf
pop
xchg
ja
std
ljmp
push
push
bound
mov
add
xlat
iret
mov
xchg
add
push
mov
mov
lret
ret
cli
push
repz
pop
out
cmp
xor
fcomps
imul
mov
lea
loope
cmp
push
add
fs
sbb
out
mov
xchg
lcall
rolb
mov
sbb
dec
pop
mov
jge
fidivrl
dec
jle
dec
pop
mov
repnz
inc
add
fstps
ret
nop
add
adc
add
xchg
lahf
iret
es
scas
ret
movsb
push
pusha
add
add
mov
lahf
int
inc
add
or
add
pop
das
xchg
sahf
jle
in
sbb
adc
add
pop
ret
xchg
stos
adc
add
mov
mov
and
mov
add
mov
ret
popf
sahf
mov
imul
xor
xlat
es
mov
cmp
mov
add
ret
xchg
adc
mov
test
add
inc
xchg
add
mov
outsb
pushf
jno
loopne
mov
mov
in
ds
add
repz
repz
or
and
push
ljmp
add
mov
xchg
dec
dec
dec
aad
out
cld
icebp
dec
push
nop
add
pop
out
shl
push
fidivrl
test
cmp
sub
mov
js
or
mov
repz
and
add
mov
or
cltd
pop
push
or
push
fcoms
add
scas
adc
add
inc
add
add
enter
pushf
shll
cmp
pop
add
ja
push
xchg
xchg
and
pop
jne
add
imul
sbb
add
push
out
push
jns
sbb
or
add
mov
pusha
add
mov
loopne
mov
jns
add
addb
cli
cmp
xlat
xor
cmp
xor
add
test
push
test
bound
mov
inc
add
movsb
addb
loopne
mov
cs
xchg
mov
xchg
adc
add
testb
jns
xchg
jns
add
stos
cld
mov
add
or
mov
or
popf
sahf
xor
pop
adc
mov
add
mov
add
in
rolb
mov
xchg
sbb
hlt
jecxz
add
dec
add
mov
xor
mov
hlt
jp
add
stos
je
dec
dec
arpl
mov
lret
cli
mov
mov
mov
add
cmc
xchg
test
mov
mov
add
add
cmp
xor
mov
adc
addb
xor
sbb
sbb
cwtl
negl
add
sbb
add
sbb
add
add
pop
lahf
subl
pop
call
mov
inc
push
push
rolb
lods
int
in
fwait
outsb
jl
aaa
add
dec
loop
mov
sti
mov
jecxz
testl
mov
pop
dec
in
mov
jge
das
adc
movsl
mov
mov
push
xor
add
icebp
pop
mov
rolb
mov
mov
xor
fdivl
push
xor
xor
and
mov
mov
adc
mov
addb
hlt
ljmp
inc
pop
dec
jp
adc
inc
push
cmpsb
jnp
add
in
mov
out
jns
out
lret
cltd
jecxz
add
xchg
lods
mov
cli
rolb
push
and
inc
movsl
test
aas
rolb
lea
and
push
daa
push
add
mov
push
scas
xchg
xchg
push
cmpsb
cmp
xor
add
lods
push
add
fcoms
add
test
xor
das
int3
adc
mov
jle
jb
mov
aad
lcall
xchg
and
add
lds
add
mov
xchg
sub
cmc
cmp
mov
cmp
push
add
outsl
add
jne
and
mov
push
mov
mov
add
pop
aas
es
clc
mov
in
lahf
stc
mov
and
jge
push
imul
aaa
lret
adc
mov
ret
sub
pop
xchg
in
jne
insl
scas
jecxz
mov
mov
push
xor
mov
fldl
xor
add
mov
add
lret
ret
sbb
add
movsb
inc
and
lret
lds
in
cltd
cmp
daa
pop
sub
in
in
mov
scas
mov
jmp
repnz
decb
xor
add
fwait
jb
mov
and
mov
mov
dec
xchg
add
push
aad
aad
fldl
outsl
mov
bound
mov
sub
cltd
mov
add
mov
cmc
xor
addb
std
jb
mov
dec
push
addb
sbb
test
pop
jecxz
in
push
add
inc
mov
inc
jae
cld
add
es
cmpsb
pop
ret
idivb
mov
movsb
scas
mov
mov
sub
mov
push
push
inc
mov
mov
ret
dec
loopne
mov
popf
gs
mov
add
mov
push
lret
mov
mov
adc
cmc
aas
or
push
adc
lds
lds
bound
mov
adc
insb
icebp
add
jnp
shrl
adc
add
int3
dec
mov
add
test
pop
mov
add
dec
lods
rolb
push
sbb
enter
add
add
data16
add
lret
lret
aam
sub
mov
pusha
add
popa
mov
fdivrl
dec
add
mov
add
add
dec
insl
xor
mov
daa
add
sub
add
mov
fidivrs
testb
dec
mov
and
mov
fs
jle
rolb
outsb
in
mov
imul
or
mov
mov
mov
in
pop
mov
add
inc
jmp
mov
inc
add
das
jb
mov
add
add
adc
mov
pop
imul
mov
aaa
or
mov
stc
jecxz
mov
push
sbb
pop
test
std
inc
hlt
das
or
rolb
mov
jno
sub
icebp
adc
pop
push
push
loopne
mov
inc
cs
mov
ljmp
dec
loope
add
cmp
sbb
or
push
jp
mov
mov
rolb
mov
mov
or
fadds
stos
xor
add
dec
cmc
mov
enter
add
mov
or
dec
repz
sbb
into
cmp
jae
add
fcomip
add
add
nop
add
cli
jo
mov
jno
ja
out
outsb
aam
jp
sbb
lods
nop
add
add
stc
sub
add
inc
orl
add
ds
jecxz
xlat
jns
or
rolb
push
mov
mov
cmp
xchg
mov
add
in
dec
xchg
mov
mov
mov
in
test
xchg
adc
xchg
loopne
mov
xchg
icebp
iret
aas
mov
mov
sub
sbb
or
pop
cmpsb
lods
ss
lods
xor
hlt
jnp
fs
movsl
ljmp
addr16
test
scas
or
add
mov
dec
sbb
popf
mov
mov
mov
data16
lds
fs
sub
sbbl
and
sub
sub
add
inc
add
mov
cmpsl
push
cltd
loope
add
xor
add
jg
jnp
mov
aas
pop
lds
loop
mov
data16
insb
lods
test
mov
xor
fwait
pop
dec
or
adc
add
fdivrl
sbb
ljmp
imul
add
addb
mov
mov
in
ljmp
jp
mov
sbb
push
sbb
jbe
mov
iret
pop
gs
fisubs
inc
addr16
xchg
int3
ljmp
ret
sub
pop
divl
xor
push
xchg
dec
jg
into
mov
mov
jno
in
das
mov
gs
push
adc
inc
and
mov
ja
add
mov
lret
outsb
adc
add
sbb
sub
add
leave
int3
jg
ljmp
push
cmp
add
add
iret
dec
sbb
pop
mov
js
xor
mov
dec
sub
cmp
and
mov
and
pop
paddw
sbb
xchg
pusha
add
mov
inc
into
jp
adc
mov
pusha
add
addr16
add
sbb
movsb
and
push
dec
jge
xchg
add
sbb
pop
and
mov
or
sahf
jno
add
fildll
jae
cmpsl
sti
pop
jb
mov
add
dec
stos
dec
lods
test
loope
mov
jb
mov
add
mov
repz
aas
mov
mov
jno
dec
sub
push
mov
mov
mov
ljmp
xchg
add
ret
lret
add
mov
out
push
inc
cs
je
in
pop
testl
outsb
int
aam
pop
jne
fisttps
cmpsb
mov
daa
dec
or
fimull
in
xchg
jle
push
mov
mov
adc
aas
loope
jo
mov
push
fdivrl
hlt
testl
mov
pop
mov
mov
mov
add
jle
js
pusha
add
push
shll
and
xchg
insl
inc
add
xchg
test
inc
add
hlt
add
mov
jmp
rcrl
inc
add
mov
sbb
inc
mov
jmp
add
ds
data16
mov
lea
cmp
das
aaa
jg
int3
fmul
push
push
add
mov
and
add
fwait
push
pop
scas
fmull
out
mov
filds
or
es
bound
mov
out
add
pop
sub
add
mov
pop
sub
xor
mov
imul
fs
fldt
adc
int3
mov
cltd
daa
push
cltd
or
stos
test
pop
pop
inc
pop
pop
mov
pop
call
push
int
mov
test
dec
sysret
fadd
lret
iret
fsubrl
xor
shr
icebp
cmp
call
fwait
in
or
or
sub
mov
dec
pop
dec
jns
pop
sbb
dec
loope
lret
std
pushf
xor
in
outsl
lcall
lret
jbe
jp
enter
push
test
stos
mov
mov
ficomps
incb
mov
or
ljmp
mov
fwait
pop
pop
xchg
inc
jns
add
mov
scas
and
add
push
add
rcll
add
jns,pt
iret
push
addr16
frstor
add
xchg
add
add
pop
sub
addb
xchg
add
fistl
out
dec
or
lods
add
mov
pop
sub
xor
mov
mov
add
add
rolb
mov
add
sub
arpl
jp
xchg
cmp
add
xchg
sub
sbb
add
push
pop
mov
mov
mov
mov
mov
pop
jg
leave
mov
add
add
and
pop
push
f2xm1
add
add
sbb
push
add
js
pop
push
fidivrs
sbb
arpl
add
sub
scas
les
outsl
flds
out
sub
icebp
mov
inc
add
addb
sbb
rolb
mov
mov
cwtl
ljmp
dec
sbb
das
aam
xlat
sti
mov
movsl
out
mov
push
add
repz
add
rolb
mov
sbb
add
jl
out
sbb
outsb
ret
neg
pop
sub
test
leave
jmp
sub
add
sub
adc
mov
add
or
shll
mov
andl
pop
das
jns
cmp
mov
repz
xchg
lods
jl
dec
push
or
in
add
ret
arpl
push
insb
addb
mov
sub
add
mov
clc
xchg
or
add
or
xchg
pop
das
mov
push
ds
cmc
rolb
mov
lock
ljmp
cltd
outsb
sub
mov
aaa
inc
add
jp
lret
mov
mov
mov
and
fs
cltd
test
ja
xor
jp
imul
and
mov
mov
add
in
int
add
pop
xor
mov
adcl
sbbl
sbb
sbb
sub
push
add
mov
add
mov
push
cli
insb
js
cmp
add
mov
mov
mov
or
jno
mov
mov
xchg
outsb
cmp
outsl
aaa
xlat
sbb
mov
push
jae
push
add
pop
mov
mov
dec
data16
dec
and
outsb
loop
mov
pop
mulb
in
pop
lret
int3
dec
xor
nop
add
pop
std
mov
push
outsb
fwait
inc
add
bound
mov
rolb
mov
push
pop
or
sbb
xchg
or
mov
mov
scas
mov
mov
push
fnstcw
clc
and
je
mov
pop
je
xlat
ret
inc
add
clc
pop
push
add
mov
jp
std
jl
xchg
mov
lahf
push
jmpw
cmp
dec
addl
fs
pushf
xchg
adc
mov
mov
sbb
stc
ficompl
mov
mov
add
add
mov
jl
aas
push
inc
dec
sub
mov
cmc
and
mov
add
mov
add
int
adc
ret
aam
mov
mov
pop
mov
jmp
fs
pusha
add
les
add
mov
mov
mov
add
pop
push
sbb
mov
add
insl
fdivrl
fnstsw
dec
cmp
add
add
mov
fsubrs
in
sbb
mov
pop
fcmovnb
lret
lods
xchg
cmpsb
jecxz
add
test
lock
mov
add
shl
cmp
mov
mov
into
rcl
cmp
mov
pushf
popa
or
add
test
pop
push
mov
mov
fucomip
insl
aas
das
push
xchg
test
add
mov
add
and
movsl
xor
push
sub
sbb
lock
das
bound
mov
aam
and
stos
add
mov
mov
jnp
jg
add
xlat
jle
mov
bt
repnz
xchg
add
add
pop
inc
add
mov
std
test
jno
lds
arpl
cli
pop
mov
add
call
mov
xor
and
mov
mov
dec
adc
add
jnp
push
sub
out
popa
sub
out
mov
cli
test
repnz
mov
mov
ja
pop
pop
jno
add
xchg
cld
sub
or
inc
rolb
mov
ret
aad
enter
add
testl
jp
arpl
loope
push
data16
aam
leave
pushf
mov
addr16
or
je
ss
es
fsubrl
aam
repnz
jb
mov
add
sahf
mov
mov
mov
mov
sti
mul
dec
inc
add
lock
xchg
ss
add
add
ja
fidivrs
popa
add
dec
mov
outsb
enter
add
add
mov
add
mov
xchg
sbb
fsubs
in
push
add
jns
push
das
loope
inc
hlt
add
jns
add
rcll
inc
inc
add
mov
jge
add
sub
mov
and
cmp
jb
mov
and
xor
fdivs
cmp
pushf
mov
mov
pusha
add
add
lret
mov
xchg
mov
add
and
lea
cmpsl
in
fsubrs
add
cmp
push
add
mov
push
ljmp
inc
cmp
mov
ds
add
and
mov
roll
pmuludq
repz
add
mov
aad
adc
or
hlt
add
jecxz
hlt
and
cmp
push
sbb
sub
sti
xchg
lock
jne
cmc
mov
in
and
aam
mov
out
mov
mov
sub
mov
or
add
xchg
add
aam
outsb
cmp
mov
and
add
mov
mov
in
cmp
cmpsb
daa
or
pop
cmp
mov
jo
mov
jmp
jle
xchg
sbb
and
push
and
aam
hlt
jp
sub
fdivl
fiaddl
mov
adc
mov
enter
xchg
mov
sti
test
in
add
es
push
stc
add
outsl
inc
xchg
cli
out
cmp
pop
dec
push
add
mov
mov
data16
jo
mov
rolb
mov
dec
fisttps
mov
out
hlt
jnp
add
mov
cmp
std
push
mov
mov
adc
pop
xchg
mov
add
add
jmp
add
mov
add
out
sbb
icebp
mov
scas
push
inc
jnp
push
add
aas
mov
mov
add
imul
adc
mov
pop
cmpsl
mov
fnstsw
xor
bound
mov
data16
jo
mov
mov
add
das
sbb
inc
mov
push
add
lcall
imul
lret
sub
add
bound
mov
pop
int3
test
roll
imul
int
sahf
loopne
mov
mov
ret
mov
mov
jb
mov
push
fsubrl
into
add
mov
scas
inc
add
rolb
imull
xchg
add
pop
sbb
xchg
mov
xchg
lock
fstl
sub
add
jl
add
movsb
rolb
mov
lds
mov
mov
mov
js
adc
jns
cli
ja
bound
mov
adc
adcl
sub
xor
std
xchg
or
add
mov
jmp
jnp
lods
out
push
outsl
call
gs
inc
insb
inc
orl
add
add
mov
scas
inc
loop
mov
clc
data16
mov
and
cmp
cmc
sar
add
bound
mov
xor
mov
adc
jns
es
cld
into
mov
ljmp
loop
mov
or
addb
dec
jmp
push
xchg
iret
int
mov
leave
in
movb
loop
mov
cli
popf
mov
pop
enter
mov
sub
inc
sbb
incb
and
mov
filds
add
pop
out
scas
cld
daa
outsl
xchg
inc
push
mov
mov
add
ljmp
mov
pop
out
cs
adc
add
push
mov
rolb
mov
add
mov
add
pop
cmp
mov
mov
pop
outsl
pop
inc
mov
fwait
in
test
push
add
mov
rolb
mov
addb
inc
test
fidivs
add
and
mov
add
add
cmp
mov
lds
mov
or
fsubr
lahf
xchg
xchg
inc
idiv
jp
add
dec
pusha
add
mov
in
sub
jmp
inc
negb
fcomps
ss
mov
mov
pop
inc
out
jge
mov
xlat
inc
rcr
ss
pop
xor
add
add
jb
mov
mov
mov
add
mov
or
int
push
dec
mov
mov
mov
mov
repnz
hlt
sub
mov
lcall
scas
xchg
test
fildll
push
scas
cmpsb
dec
xor
mov
mov
pop
xchg
sti
pushf
and
mov
daa
pusha
add
ss
adc
mov
out
xchg
mov
stc
jnp
xchg
or
xor
push
pop
mov
xor
mov
jecxz
jecxz
int
add
jg
sub
mov
sub
add
cmp
mov
dec
jl
rolb
mov
es
add
sbb
test
out
add
inc
xor
ret
rolb
inc
ja
push
mov
add
test
ljmp
push
push
mov
mov
mov
add
mov
sahf
icebp
mov
dec
lcall
adc
lret
jecxz
insl
popa
mov
or
push
fdivr
sbb
inc
add
push
dec
sbb
aaa
inc
jg
sbb
mov
dec
cmpsl
or
filds
adc
mov
add
cmpsl
jmp
je
add
add
lea
add
sub
inc
add
mov
mov
jo
mov
add
pop
popa
push
sti
mov
push
fxch
add
sbb
adc
cmpsb
stc
mov
lods
mov
mov
xchg
movsl
xor
testl
dec
in
mov
into
insb
jo
mov
cld
outsl
std
stc
in
lret
add
add
ss
add
mov
popa
and
mov
test
or
mov
loope
xchg
mov
xchg
stos
pop
dec
es
vdivpd
push
sbb
add
stos
push
push
sbb
lahf
out
repnz
mov
add
int
dec
test
dec
cli
call
mov
sub
cmp
push
enter
stc
xor
mov
or
pop
xor
cmp
xchg
notb
jne
jbe
mov
mov
add
retw
push
push
in
or
add
mov
addb
sahf
sbb
mov
mov
mov
das
enter
in
pop
outsb
addr16
jle
lahf
sub
mov
push
xchg
dec
fxch
pop
jo
mov
add
mov
fdivp
in
mov
push
sub
fsubl
jno
xor
xor
mov
xor
mov
ficoml
xor
dec
popaw
pop
sbb
jbe
lods
loope
fsubrl
sldt
mov
inc
test
negl
mov
std
ljmp
lret
iret
ret
scas
and
test
notl
mov
xor
cmp
mov
je
add
rolb
mov
insl
fs
testb
xchg
inc
add
imul
ss
ss
push
add
mov
dec
imulb
mov
sub
ss
mov
lock
jecxz
add
push
ljmp
pop
inc
push
sub
mov
out
rolb
mov
xor
lea
lret
mov
aad
es
cmp
mov
mov
adc
mov
add
xchg
add
sar
xchg
or
cmp
add
add
dec
out
mov
inc
fwait
mov
test
xchg
in
dec
add
mov
inc
fidivl
mov
push
mov
sbb
aad
cmpsl
xchg
mov
test
mov
mov
add
jmp
enter
jp
sbb
mov
shll
sarl
jmp
add
pop
xchg
xchg
shrl
or
or
push
daa
cld
sub
mov
sub
mov
enter
jmp
xchg
add
lcall
push
fildl
mov
inc
add
iret
mov
adc
cmpsb
jecxz
cs
fs
sti
movsl
jge
add
xor
add
mov
fidivrl
mov
mov
xor
cmp
scas
hlt
mov
das
pop
xor
mov
sub
jg
sbb
xor
pop
incb
pop
mov
in
mov
mov
jge
cmp
adc
lds
jno
xchg
inc
add
mov
push
loope
jmp
mov
xor
dec
insb
add
push
adc
mov
mov
test
rolb
mov
inc
movsb
addr16
jg
dec
insl
sub
xchg
sub
xchg
add
mov
mov
mov
add
jns
add
mov
dec
sub
mov
push
sti
xor
jg
jnp
mov
jns
cmp
clc
cmp
push
loopne
mov
and
add
add
test
xchg
mov
mov
push
jp
bound
mov
mov
rolb
mov
pusha
add
das
jns
repz
scas
xor
int
pop
shr
mov
cmp
mov
out
pop
cmc
inc
push
int
sbb
out
sub
insl
gs
mov
mov
sub
pop
sub
mov
xchg
mov
add
and
nop
add
jne
mov
mov
push
xchg
sbb
add
mov
add
cmp
cmp
sbb
rorl
jo
mov
or
mov
add
inc
ja
cmp
push
out
add
mov
add
aad
xchg
outsb
sub
add
pushf
arpl
add
pop
jno
in
ss
cmp
add
imul
xchg
add
iret
dec
scas
jnp
imul
push
cmp
test
cli
cltd
dec
xchg
or
std
scas
sarl
test
fstl
imul
stos
inc
popa
andl
outsb
jmp
add
and
mov
mov
xlat
mov
add
mov
nop
add
add
lea
dec
sahf
ljmp
fidivrs
subl
cmpsb
and
mov
dec
fsubl
mov
test
xlat
lds
cld
fsubs
aaa
cmp
add
js
bound
mov
mov
add
mov
dec
xchg
xchg
mov
in
sbb
mov
pop
hlt
rcll
mov
movsb
xchg
stos
repz
pop
adc
iret
aaa
dec
out
pop
daa
push
insb
outsl
push
add
cld
mov
addb
test
mov
cld
mov
ja
add
dec
push
add
sub
add
mov
sbb
out
pop
cmpsl
cmp
scas
xchg
fdiv
add
mov
sub
and
jle
lret
mov
jb
mov
push
loopne
mov
sub
cmp
jae
mov
es
push
and
fwait
push
jmp
add
push
lret
es
addr16
add
fcoml
jo
mov
jge
push
ljmp
addb
jg
push
lds
adc
mov
fdivs
call
scas
mov
pop
ss
js
add
insb
jo
mov
cmc
int
add
or
or
push
rolb
fucom
add
add
mov
push
leave
loop
mov
push
lret
flds
mov
mov
mov
mov
bound
mov
pop
pop
cwtl
cmp
cmp
icebp
sub
add
pop
scas
aaa
cmpsl
out
repnz
pushf
fistl
ds
jb
mov
dec
add
mov
out
and
add
das
jge
add
fwait
pop
cwtl
stos
popf
into
sbb
inc
mov
into
add
pop
push
out
xchg
scas
pop
das
lods
or
in
cltd
push
rorl
cmp
add
popf
les
js
movsl
mov
pop
xchg
and
add
mov
roll
cwtl
iret
jb
mov
in
add
jb
mov
dec
adc
mov
add
jne
das
outsl
jle
sbb
add
rcrl
daa
cwtl
mov
addb
enter
mov
add
jle
push
in
std
movsb
sarl
into
out
nop
add
sub
ficoml
mov
sub
mov
imul
push
add
inc
cmp
mov
fwait
je
lock
cmp
add
in
cmpl
cmp
or
mov
add
addr16
add
pop
stos
retw
push
cli
fucomi
mov
mov
iret
mov
leave
scas
dec
jge
add
mov
add
iret
push
jle
add
add
add
out
add
mov
dec
cmpsl
mov
pop
cmp
push
outsb
bound
mov
add
mov
je
xchg
push
xlat
mov
inc
add
dec
in
adc
cld
lret
cld
xchg
mov
mov
icebp
imul
bound
mov
xchg
lahf
mov
daa
jne
addb
in
je
add
add
cmp
mov
mov
fidivl
lcall
sahf
cmpl
add
sub
iret
xor
sub
jnp
pop
or
add
jns
push
inc
add
cmp
add
xchg
imul
cmp
add
mov
clc
and
adc
mov
jge
out
cli
scas
pop
push
add
or
int
into
mov
test
mov
imull
lret
cmp
mov
inc
mov
mov
mov
cltd
and
dec
mov
insl
rolb
mov
daa
inc
add
add
push
fnsave
mov
or
jno
scas
cmpsl
pop
mov
mov
jge
leave
out
lret
in
sahf
mov
mov
add
add
cmp
or
inc
cmpsb
out
add
dec
repz
add
mov
mov
fildll
jmp
imul
fdivrl
sahf
jne
test
jp
dec
xchg
add
rolb
push
stos
in
sub
jge
inc
cmp
push
sub
in
pusha
add
divl
add
xlat
lock
push
lods
sbb
mov
cwtl
jl
dec
lret
jb
mov
pop
sub
cmp
dec
dec
fs
lcall
mov
lods
sbb
push
mov
icebp
mov
mov
sbb
in
nop
add
add
mov
cmc
cmp
or
into
mov
aad
in
sbb
add
mov
mov
rcrl
mov
pxor
mov
or
sub
aam
imul
dec
lret
add
iret
addb
bound
mov
ret
lcall
inc
xor
inc
xor
mov
fstpt
add
inc
add
inc
fistl
daa
out
sub
mov
stos
repnz
add
mov
add
dec
add
mov
je
add
fcoml
xchg
notl
xor
mov
mov
dec
dec
out
mov
das
bound
mov
fildl
lret
mov
pop
push
and
mov
notb
mov
jecxz
cmpsb
push
outsl
lcall
push
int3
les
or
cmp
int3
mov
hlt
cmc
mov
mov
pusha
add
push
add
jne
lea
add
addb
push
xor
push
or
mov
adc
mov
adc
rolb
sbb
les
jne
pop
mov
add
add
jg
adc
mov
xor
mov
dec
jae
mov
mov
mov
inc
int3
mov
ljmp
mov
mov
pop
cli
cmp
fcomi
test
mov
xor
mov
pop
das
xchg
jmp
cli
inc
mov
mov
add
add
mov
mov
jo
mov
add
add
jecxz
cmpsl
mov
mov
loop,pt
mov
and
add
mov
pop
clc
enter
dec
xchg
adc
daa
sti
mov
inc
adc
mov
sbb
mov
fwait
push
add
jp
mov
iret
adc
mov
out
rolb
mov
sub
imul
loopne
mov
sbb
xchg
cmp
rolb
mov
cs
ss
jbe
movb
outsl
and
add
jle
dec
shll
mov
enter
add
mov
xchg
dec
mov
sbb
xchg
add
hlt
add
insb
insb
inc
adc
sub
fildl
mov
add
adc
mov
cmpsl
add
fadds
jb
mov
jl
push
daa
fiaddl
add
cld
xchg
pop
outsb
movsl
and
mov
dec
add
sbb
mov
sbb
insb
lods
rolb
mov
pop
xor
imul
inc
fwait
insb
pop
mov
mov
clc
js
test
xor
test
fistps
cmc
test
adc
mov
and
pop
pop
cmp
mov
cmc
lcall
add
add
mov
arpl
add
mov
add
mov
add
mov
ja
aad
fldenv
inc
jo
mov
add
dec
mov
mov
add
loopne
mov
xchg
dec
popa
mov
xor
mov
aaa
xchg
sbb
xchg
daa
ja
jo
mov
jnp
dec
add
mov
ss
outsb
jecxz
add
inc
sub
test
add
ljmp
fldl
add
sbb
mov
mov
mov
incl
pop
imul
push
and
mov
push
add
push
add
ret
testl
cmp
cmpsl
cmp
push
lret
frstor
add
sub
popf
push
add
ds
pop
out
add
mov
movsb
jae
loopne
mov
aad
sti
into
loopne
mov
add
lret
and
mov
rolb
mov
out
ret
cmp
mov
mov
rol
mov
add
stos
orl
mov
add
mov
out
cltd
fucom
push
push
and
pop
test
sahf
leave
xchg
push
or
pop
mov
push
nop
add
lds
rolb
mov
pop
jns
xchg
adc
mov
jl
dec
sub
into
aas
inc
cmp
in
sub
mov
mov
xchg
addb
sub
add
pop
xor
mov
push
data16
call
add
imul
add
mov
add
enter
push
out
or
push
test
add
add
mov
enter
lea
push
jb
mov
mov
add
add
xchg
or
lahf
or
add
mov
xchg
xchg
scas
adc
jno
mov
popf
stos
lods
inc
add
add
dec
lods
lods
out
push
repnz
jb
mov
sbb
loope
rolb
mov
dec
or
add
sarl
push
sub
mov
xor
test
xchg
add
test
adc
mov
cmp
adc
insb
iret
inc
push
adc
mov
sub
xchg
lahf
pop
dec
cld
cmpsl
jbe
shll
and
mov
in
aas
aad
lods
adc
push
pushf
jmp
dec
add
add
push
adc
mov
inc
es
mov
nop
add
sub
add
cs
pop
mov
mov
mov
das
lret
xchg
add
aaa
sub
inc
js
shll
out
mov
xlat
test
stc
xchg
pusha
add
xchg
into
inc
arpl
cmpsl
lea
hlt
outsl
jle
mov
mov
call
pop
in
add
mov
mov
mov
int
lea
mov
mov
mov
add
mov
add
mov
addb
jg
stos
pushw
ljmp
out
or
dec
mov
mov
arpl
sub
inc
add
pop
dec
movsb
add
loope
movsl
push
stos
xchg
sub
js
push
cld
or
mov
mov
sub
add
add
push
or
add
ficomps
jne
mov
rolb
cli
mov
es
and
pusha
add
xor
xchg
add
cwtl
inc
fwait
popa
pop
mov
fcompl
hlt
sub
icebp
mov
lods
sub
aam
lds
imul
mov
std
pop
add
mov
xor
mov
xchg
jns
pusha
add
add
out
mov
mov
xor
sahf
pusha
add
loopne
mov
push
lea
mov
add
leave
xchg
push
add
jbe
lret
rcpps
lea
out
dec
jg
add
add
es
jg
jb
mov
addr16
add
fsubl
addb
xchg
add
jge
add
rolb
mov
mov
add
mov
jp
mov
mov
xor
and
jp
and
movsb
adc
pop
repnz
mov
imul
movsl
addr16
les
add
addb
jne
lret
in
out
leave
testb
loop
mov
adc
add
fisubs
xlat
inc
xor
push
sahf
add
mov
push
cmpsl
jmp
repnz
pop
addr16
push
jmp
jp
mov
add
mov
orl
test
dec
divb
add
loop
mov
out
loopne
mov
sub
sbbl
add
fsubrp
lahf
mov
add
aas
mov
jae
fcomip
icebp
xor
add
shrl
pop
push
xlat
push
xchg
mov
mov
mov
mov
adc
pop
sbb
mov
popf
in
lcall
pop
ja
sbb
loopne
mov
xchg
adc
sub
ljmp
xor
or
xlat
pop
add
repz
imul
arpl
fcompl
int
jbe
add
add
insb
jecxz
cli
testl
dec
pop
adc
cmp
addb
sub
or
imul
sub
add
out
loop
mov
adc
add
xlat
dec
popa
lds
and
mov
push
cli
movsb
sarl
jb
mov
mov
mov
add
sbb
leave
mov
fbld
mov
jnp
mov
clc
jge
xor
mov
pop
rolb
mov
cs
mov
xor
popa
nop
add
xchg
out
sbb
jge
mov
daa
lods
movsl
lods
fisubrl
mov
mov
cs
or
dec
insl
inc
sti
out
jb
mov
lds
add
mov
lds
and
mov
mov
add
ss
adc
push
vpunpckhdq
cltd
jmp
add
loop
mov
pop
addb
pop
mov
add
mov
out
cmp
jb
mov
and
cmp
loope
outsb
push
addb
cld
inc
mov
stos
dec
or
movsb
mov
push
add
out
fdiv
add
sbb
and
add
popf
mov
pop
sub
cli
sahf
xchg
add
mov
inc
add
push
dec
pop
xor
test
jnp
pop
jo
mov
dec
or
movsb
dec
jge
sbb
add
push
xchg
lret
or
sahf
push
add
mov
stos
push
pop
test
add
cmc
mov
jle
adc
lahf
in
xor
pop
pop
das
mov
mov
outsb
cld
mov
movsb
mov
mov
mov
cmp
dec
mov
add
and
add
repnz
and
mov
push
fildl
mov
mov
mov
sbb
mov
sub
push
adc
mov
pop
ret
xor
mov
sbb
pop
insl
imul
mov
xlat
call
inc
xchg
pushf
dec
pcmpeqb
gs
push
add
mov
jno
adc
jl
push
jae
fists
je
lock
fldl
mov
pop
outsb
sbb
sbb
add
add
add
or
mov
add
mov
mov
mov
insl
repz
outsb
fwait
inc
int3
out
mov
add
add
mov
and
mov
xchg
jp
mov
add
enter
add
push
add
mov
adc
mov
not
daa
scas
xorl
and
xchg
inc
add
add
xchg
push
data16
mov
inc
add
call
mov
mov
mov
cmp
adc
inc
add
pop
jmp
or
xchg
xchg
cmp
add
mov
addb
and
mov
and
nop
add
cld
mov
mov
imul
out
mov
mov
add
mov
and
push
add
pop
xor
pushf
rolb
mov
inc
xchg
sbb
xchg
jge
add
addr16
jno
popa
mov
les
inc
enter
mov
dec
adc
mov
mov
maxps
add
mov
mov
add
dec
pushf
insb
xchg
cli
mov
int
xor
push
jmp
int3
jg
adc
int
dec
and
jns
movsb
aas
dec
int
add
mov
rolb
mov
aaa
imul
sbb
in
test
and
mov
push
mov
adc
sti
arpl
sub
push
add
inc
in
and
jns
sbb
mov
jno
cmp
shll
jl
lods
mov
add
mov
test
add
mov
ja
mov
adc
mov
sub
mov
daa
popaw
loop
mov
add
jns
addb
pop
pop
lock
lds
arpl
add
add
mov
inc
out
outsl
pop
sahf
pop
pop
movsb
cmovle
mov
push
mov
xor
ret
inc
add
xor
mov
out
mov
test
mov
stc
xchg
add
add
mov
mov
mov
mov
ds
mov
mov
mov
imul
rolb
add
nop
add
aad
xchg
push
push
leave
adc
sub
cmpsb
dec
pop
jne
add
add
movsb
mov
imul
mov
jl
mov
clc
inc
decl
add
push
add
jg
movb
rolb
mov
fdivl
jb
mov
popf
xchg
dec
xchg
repnz
mov
out
push
push
ljmp
inc
pusha
add
add
mov
mov
push
mov
stc
or
xchg
add
popl
add
out
xchg
pushw
mov
mov
cld
jns
aam
pop
fiaddl
mov
rolb
mov
cwtl
add
rolb
inc
addr16
sbb
loope
jg
dec
add
pop
pop
outsb
mov
add
add
int3
pop
imul
mov
mov
push
pop
or
insb
movsl
adc
xchg
add
mov
mov
ror
inc
add
mov
pop
mov
add
push
add
pop
repnz
lahf
sub
leave
in
pop
cmc
push
push
adc
xor
mov
fidivrl
sub
pop
test
sub
pop
cltd
je
adc
mov
insb
inc
add
lcall
mov
add
lahf
out
addb
push
add
add
add
jp
xor
cmp
insb
ljmp
push
pop
jne
test
imul
inc
les
pop
icebp
jl
cmp
sub
in
or
pop
cltd
cld
lret
std
out
in
addb
mov
mov
out
jmp
pop
xchg
jle
jbe
add
xchg
fdivs
xchg
dec
add
mov
out
aad
pop
dec
iret
arpl
dec
pop
shrl
xchg
add
add
push
and
mov
sti
jb
mov
divps
jl
daa
sbb
out
dec
scas
into
add
adcl
insl
std
loopne
mov
push
jno
and
mov
test
push
or
mov
int
add
push
mov
add
add
shll
add
adc
mov
mov
ss
sbb
in
fists
aam
push
mov
icebp
push
add
xor
mov
cmpsl
aad
mov
lock
inc
ret
imul
jns
add
add
dec
lods
pop
adc
mov
jmp
jno
cmpl
dec
test
pop
fs
add
rcrl
mov
add
jbe
jl
inc
jnp
cmpsb
loop
mov
mov
add
loopne
mov
imul
sbb
or
adc
jge
jg
aas
xchg
dec
dec
dec
push
mov
dec
adc
mov
inc
push
dec
inc
mov
add
jge
ds
cmpsb
jp
or
insb
enter
mov
mov
mov
mov
mov
lcall
xorl
scas
scas
js
inc
test
xchg
xor
mov
in
and
mov
jp
dec
push
idivl
mov
pop
jb
mov
mov
mov
dec
les
jmp
push
mov
ljmp
adc
mov
add
loope
fadds
jge
lods
adc
and
ds
and
and
ds
cmp
inc
cli
xchg
push
add
add
mov
cmp
jle
sarl
push
jno
out
sbb
mov
jp
pop
push
rolb
mov
add
jp
inc
movb
dec
pop
lods
outsb
and
mov
stos
mov
mov
add
dec
pushf
pop
push
add
pmullw
mov
ja
cmp
lock
push
sahf
push
push
xor
jp
in
mov
rcrl
je
movsl
mov
push
jg
out
add
push
lds
mov
or
add
mov
clc
repz
fxch
pusha
add
mov
xor
add
xchg
mov
divb
dec
icebp
mov
add
adc
mov
mov
mov
jno
xchg
add
add
imul
push
add
add
add
jecxz
into
push
jle
je
mov
mov
sub
mov
add
addb
loope
addr16
fcoms
addb
sub
mov
mov
loopne
mov
mov
pushf
cltd
jg
jmp
stos
es
or
fs
mov
rolb
mov
lret
lret
jb
mov
stc
sbb
pusha
add
mov
xchg
cmc
outsb
daa
xor
mov
shll
mov
sub
sub
or
push
mov
or
add
ja
pop
lahf
rolb
lods
xchg
add
mov
mov
and
push
imul
mov
mov
pop
sahf
xchg
pop
cmc
push
inc
sahf
lcall
mov
mov
sub
add
mov
adc
pop
xchg
mov
xchg
push
inc
fsts
test
push
pop
lea
mov
mov
mov
arpl
xchg
stos
inc
les
mov
jl
rol
mov
out
insl
inc
add
pop
sub
aaa
push
aad
add
ret
push
add
add
add
jno
xor
mov
dec
lods
mov
xlat
neg
loope
mov
loopne
mov
jbe
cmp
lcall
pop
dec
in
insb
inc
add
mov
imul
inc
add
or
je
insl
pop
movsl
sbb
adc
mov
mov
push
sbb
jmp
add
icebp
fcomps
add
dec
test
fbstp
add
add
add
jb
mov
sti
or
decl
cmp
add
fstl
cmpsb
ss
mov
mov
addb
push
adc
movsb
mov
pop
lcall
outsl
pmaxsw
fldcw
scas
dec
jnp
in
cbtw
js
and
sub
mov
sbb
cld
cmpsb
mov
xlat
mov
mov
fsubl
mov
add
mov
nop
add
test
add
jge
test
pusha
add
and
jae
add
mov
mov
and
push
mov
in
fiaddl
fxch
je
stos
ret
and
add
aaa
movsb
nop
add
mov
add
jo
mov
jecxz
rep
mov
aas
pop
cmp
fstpt
out
pop
inc
xor
lahf
out
push
adc
mov
adc
push
adc
ss
xor
add
mov
mov
mov
cmp
pop
push
xor
mov
xchg
imul
jne
popf
or
aam
add
mov
inc
xchg
add
jl
sub
icebp
dec
pop
or
add
gs
enter
sub
mov
mov
pop
push
add
or
fdivl
vunpcklpd
scas
push
pop
cmpsl
inc
enter
mov
pop
mov
mov
enter
rcr
or
nop
add
jmp
or
sub
mov
adc
push
scas
insb
scas
inc
add
push
test
lcall
stc
das
js
xor
out
negb
mov
or
mov
cmc
test
cwtl
das
pop
fisttpl
mov
rcl
fcmovbe
pop
insl
cmp
cmc
push
jbe
lods
sqrtps
xor
mov
inc
pop
bt
add
mov
call
out
add
xchg
std
imul
leave
imul
nop
add
sub
fdivrl
push
in
cwtl
roll
or
test
scas
or
cmc
int3
test
xchg
mov
mov
in
dec
das
fcmovbe
iret
sbb
mov
or
add
add
pop
rolb
mov
add
mov
xchg
outsb
add
mov
mov
rolb
mov
xor
add
cmp
mov
and
sbb
pusha
add
xchg
out
mov
pop
pushf
dec
rolb
mov
repnz
dec
mov
mov
mov
mov
add
sub
pop
movsl
cmp
jmp
rolb
mov
add
push
push
xchg
sub
jge
dec
ljmp
mov
loop
mov
insb
jl
dec
mov
mov
lahf
jp
iret
in
lret
aad
pop
xor
and
mov
mov
mov
jg
aam
inc
or
add
je
call
xchg
das
and
mov
les
pop
sub
add
sbb
xor
xor
mov
fidivs
loopne
mov
cmc
cmp
mov
add
mov
mov
xlat
aaa
cs
push
cs
add
inc
scas
sbb
cltd
in
jae
inc
pop
and
addb
inc
add
adc
mov
mov
nop
add
mov
add
xchg
addb
ds
mov
mov
mov
add
mov
add
jmp
or
scas
shrl
jg
sahf
inc
rolb
mov
ficompl
in
push
add
dec
shll
inc
add
add
out
pushf
add
mov
mov
stos
jmp
sbb
std
push
sbbl
push
cld
fcmovnbe
add
movsl
in
jbe
cmp
mov
jecxz
pop
cli
repz
rolb
mov
or
out
sbb
loope
and
dec
sbb
sbb
add
pop
mov
inc
mov
fidivrs
mov
add
mov
cmp
mov
bound
mov
adc
ljmp
mov
in
sub
jb
mov
inc
add
xchg
xor
push
lods
pop
add
add
mov
je
cli
lret
sarl
hlt
pop
sti
mov
cmp
in
mov
fimull
adc
mov
add
jbe
pop
and
out
pop
into
in
or
cli
pop
dec
adc
mov
mov
clc
push
cmc
add
mov
icebp
hlt
inc
add
jmp
in
sbb
rolb
adc
add
int3
addb
or
mov
cmpsb
cli
fimull
ja
js
jmp
insb
pop
xor
mov
mov
lds
cld
and
arpl
dec
outsl
mov
dec
out
pop
cltd
sbb
xchg
jmp
or
mov
mov
xchg
mov
add
pop
xor
js
lret
sti
xor
xor
xor
mov
xor
mov
mov
movups
pop
fsubrl
imul
add
mov
add
mov
xor
mov
frstor
add
add
add
mov
scas
or
jmp
stos
addb
out
ficompl
cld
lret
test
sbb
add
lahf
cmc
lock
add
adc
cwtl
loope,pt
xor
mov
mov
mov
add
mov
or
push
add
mov
mov
sbb
call
xchg
stos
xlat
js
add
bound
mov
int3
sub
jmp
mov
add
dec
scas
ds
add
mov
and
cs
cmp
adc
fnsetpm(287
les
add
fldcw
mov
ja
mov
or
and
std
dec
in
mov
and
mov
xlat
mov
add
dec
adc
mov
dec
jne
pushf
or
cmp
mov
add
jge
dec
sub
das
jle
xor
mov
scas
int3
inc
push
dec
insl
cmp
mov
flds
dec
add
mov
xlat
fdivl
lock
mov
push
or
add
mov
push
jmp
xchg
js
ljmp
mov
loop
mov
rcrl
pop
imul
aam
sbb
pushf
sti
or
cltd
les
fildll
out
xchg
rolb
outsl
scas
gs
mov
dec
mov
mov
inc
push
xchg
or
mov
enter
sub
mov
add
enter
add
loope
push
insb
int3
sbb
jl
in
sub
sbb
and
mov
mov
insb
fs
add
popa
mov
mov
out
into
insb
push
sub
add
jecxz
addb
das
das
decb
fdivrs
out
pop
dec
mov
push
add
rcrl
popf
addb
cmp
lret
sub
iret
fiaddl
add
popf
mov
jecxz
loopne
mov
add
mov
mov
mov
mov
add
pop
addr16
mov
add
mov
jns
and
mov
or
jl
loope
sbb
loop,pt
mov
add
inc
inc
cwtl
jo
mov
cld
out
dec
or
ss
pop
out
add
fsubl
outsl
das
and
aam
xchg
add
add
lds
or
dec
adc
pop
imul
add
sub
mov
or
cld
pop
dec
notl
jl
lods
and
push
fldcw
test
mov
and
rolb
push
jbe
mov
sbb
add
xlat
data16
call
mov
add
or
mov
mov
push
addb
mov
xlat
lcall
fcmove
jp
pop
add
mov
jno
outsl
inc
add
mov
mov
pop
insb
pop
pop
stc
arpl
inc
add
mov
clc
add
mov
mov
popa
mov
xor
bound
mov
fs
and
jno
xor
mov
fsubrl
cmp
lods
popa
data16
div
push
ss
imul
negl
jp
dec
aas
sub
jle
xchg
jp
sub
jb
mov
add
pop
and
mov
add
pusha
add
add
pop
add
add
mov
add
sub
xor
mov
test
jmp
test
mov
inc
fnstcw
popf
addr16
lret
cwtl
in
sbb
and
das
jns
sbb
mov
add
mov
enter
lret
dec
fiaddl
xchg
xlat
adc
mov
mov
clc
xchg
inc
jbe
mov
push
loop
mov
push
lock
js
aam
add
arpl
or
or
add
add
js
push
cmpsb
lods
aad
pushw
fnsave
adc
mov
or
outsl
cmp
std
cld
fiadds
pop
ret
push
cmp
add
outsl
dec
cs
mov
fnstenv
int
je
xor
mov
sti
jbe
push
aas
jecxz
jne
inc
mov
mov
and
lods
xchg
es
add
xor
add
add
and
mov
xlat
adc
sub
fwait
pop
inc
in
xor
cs
mov
mov
pop
jbe
sub
in
imull
adc
ret
push
xor
mov
or
fs
data16
cpuid
add
std
push
jns
jecxz
add
jmp
lret
rolb
mov
sahf
inc
xorl
icebp
nop
add
mov
insb
sbb
out
push
push
xor
pop
shl
insl
aaa
stos
sti
push
pop
or
mov
icebp
sbb
out
sub
pop
scas
cmp
pop
inc
popf
or
add
xchg
cmp
mov
dec
and
mov
cli
lock
mov
add
add
xchg
fisttpll
mov
mov
mov
fistpl
imul
jp
add
jne
pop
pop
add
je
push
add
mov
mov
xor
sub
in
ret
jnp
push
out
cwtl
roll
or
mov
add
add
fsub
icebp
and
or
mov
gs
adc
push
jo
mov
add
adc
mov
dec
dec
or
or
mov
add
add
test
add
mov
mov
mov
or
push
push
shll
add
add
call
cmp
into
call
test
fadds
int3
xor
mov
or
cmpl
inc
add
clc
cs
jmp
lods
mov
inc
add
stos
repnz
mov
and
mov
movd
adc
xor
mov
fisttpl
ret
mov
fstpt
add
xchg
scas
add
pop
aam
rcl
pop
and
jae
mov
mov
je
push
sub
cmp
add
add
mov
mov
iret
xor
mov
outsb
es
outsb
pop
adc
mov
mov
punpckldq
mov
jbe
mov
mov
iret
lahf
lock
xchg
loopne
mov
xchg
xor
mov
mov
adc
lahf
into
jmp
add
pop
add
mov
ret
dec
push
cmp
or
dec
hlt
xchg
adc
jb
mov
add
push
std
add
xor
ljmp
fmul
fcmovnbe
mov
mov
pop
aas
adc
mov
add
pop
ljmp
jmp
inc
fwait
push
jg
repnz
icebp
orl
mov
sub
pop
rcll
sbb
rolb
mov
not
shrl
ret
fistl
movsb
mov
and
fcompl
push
sbb
add
push
icebp
leave
sub
add
add
stos
daa
pop
push
add
mov
std
xchg
dec
xlat
rolb
mov
add
mov
add
mov
mov
mov
jl
addb
and
fst
and
jns
rcl
mov
cli
int3
sbb
mov
mov
mov
rolb
mov
jl
cmc
xchg
add
inc
adc
add
add
mov
dec
pushl
adc
sub
mov
pop
add
cmpl
push
inc
lret
mov
mov
fstps
enter
mov
cmpsb
mov
xor
dec
pusha
add
mov
pusha
add
jb
mov
mov
scas
and
mov
sub
fistpll
pop
mov
lds
fidivrs
jp
sti
rolb
jo
mov
mov
push
mov
call
dec
loopne
mov
outsl
dec
rorl
mov
add
dec
push
mov
data16
icebp
inc
add
inc
fs
lds
dec
icebp
cli
roll
add
mov
adc
out
rolb
mov
mov
mov
cwtl
cld
cmp
ss
out
sub
push
xor
mov
cmpsb
inc
add
cld
outsb
loop
mov
dec
les
jmp
mov
add
mov
cmpsb
jns
add
mov
cmp
fnstenv
movsl
repz
push
clc
sub
add
outsb
bound
mov
outsb
scas
xor
mov
pop
icebp
or
lret
push
add
mov
mov
push
popa
outsl
fidivrs
and
mov
mov
aas
mov
adc
mov
mov
jp
add
mov
push
jo
mov
jbe
xor
mov
mov
out
pusha
add
pusha
add
inc
inc
jecxz
or
xchg
ret
and
outsl
mov
pop
and
adc
test
int
jle
jp
inc
mov
loope
add
add
popa
pop
lea
loope
add
add
loop
mov
jae
cld
leave
rolb
mov
mov
pop
jae
add
repz
add
add
cmp
inc
xor
mov
mov
das
cwtl
loope
add
push
xchg
push
add
mov
add
lods
inc
add
scas
and
cmp
cmp
fcmovbe
xchg
cmovs
add
mov
stos
ret
outsb
data16
nop
add
add
mov
imul
push
aas
push
mov
loope,pn
add
stos
movsl
jns
mov
aaa
rcr
push
ljmp
mov
push
jnp
sbb
fcompl
frstor
sbb
ljmp
inc
das
xchg
sbb
mov
xchg
lods
pusha
add
add
xchg
int3
in
jae
add
movsl
lods
jg
pop
pop
xchg
xor
mov
jg
in
mov
pop
sbb
or
int3
lea
sub
addl
add
xlat
adc
mov
pop
enter
xchg
mov
es
or
out
sbb
adc
mov
out
pop
in
or
mov
lods
jg
cmpsb
addb
enter
pop
push
adc
mov
mov
add
xchg
xlat
add
xchg
mov
das
rolb
mov
sbb
or
es
xchg
adc
mov
adc
add
fcmovb
test
add
adc
pop
inc
call
jp
xchg
lret
sub
adc
xchg
push
add
pusha
add
adc
dec
rolb
mov
mov
push
imul
test
cld
xchg
mov
mov
in
cltd
dec
mov
dec
add
subl
pop
test
jecxz
in
fiadds
dec
test
push
mov
mov
push
jp
mov
js
rolb
mov
dec
mov
mov
in
rolb
je
int3
mov
or
into
test
rolb
mov
and
dec
jecxz
jg
xchg
ret
xchg
stc
add
or
mov
hlt
mov
mov
ljmp
lret
pop
popf
mov
xor
inc
push
add
mov
clc
jne
xchg
add
mov
add
add
loop
mov
mov
mov
push
add
movsb
push
sbb
and
mov
jge
lret
pop
or
aad
add
es
adc
inc
add
add
cmp
dec
mov
xchg
inc
xchg
ja
dec
gs
mov
popl
add
add
mov
add
add
dec
add
add
add
mov
lods
lret
cmpsl
fdivrp
das
jmp
add
inc
imul
inc
inc
jno
xchg
add
repz
add
add
cmpsb
cmp
add
shll
inc
daa
cmp
enter
jb
mov
push
mov
mov
sub
dec
xor
hlt
fldl
inc
add
sbb
mov
loope
inc
mov
fcoms
push
ret
clc
mov
fstpt
add
out
in
lea
mov
addb
xor
pop
lods
call
add
dec
or
data16
addb
lahf
mov
arpl
cmp
jp
dec
add
lret
call
add
decb
hlt
cwtl
shll
insb
fildl
push
jno
in
jl
add
push
jl
add
daa
insl
test
je
mov
mov
or
cmp
shl
adcl
mov
add
or
mov
jbe
mov
mov
pop
adc
mov
mov
push
mov
in
jle
jle
stos
mov
scas
and
add
aaa
enter
xor
sub
and
inc
sbb
mov
lret
xchg
cld
cld
jmp
adc
mov
cmp
adc
insl
loop
mov
add
mov
pop
out
or
jbe
je
add
mov
xchg
add
movsl
js
jno
xchg
ss
ret
push
sbb
add
ljmp
pop
rolb
test
add
mov
or
inc
add
adc
mov
add
xchg
movsl
adc
int
and
add
arpl
out
inc
add
mov
push
test
xchg
dec
adc
out
dec
sub
add
sbb
add
xorl
nop
add
aad
add
add
mov
fwait
pop
or
add
stc
addr16
mov
add
out
add
push
int
adc
xchg
pop
nop
add
arpl
add
int
mov
dec
flds
addb
loopne
mov
adc
scas
push
add
adc
mov
add
mov
cmp
pop
xor
fistl
or
test
leave
xchg
popa
aas
sbb
fwait
rorl
mov
jmp
mov
sti
xlat
mov
jl
sbb
stos
movsb
sub
mov
adc
mov
push
add
mov
add
add
jbe
add
outsb
jecxz
lahf
jae
add
mov
add
inc
or
bound
mov
cltd
or
or
mov
dec
daa
cmp
pushf
out
push
sub
add
dec
and
mov
pushf
lret
jecxz
add
push
add
pop
mov
loop
mov
add
mov
pop
push
add
ss
xchg
add
mov
add
add
gs
call
dec
xchg
inc
mov
adc
sub
adc
mov
add
or
sub
sbb
cltd
cmp
shrl
pop
adc
jmp
cltd
pop
add
mov
add
add
mov
xchg
daa
pushf
mov
repz
mov
jno
add
sbb
pop
scas
add
and
cmp
add
stos
popf
sahf
adc
jp
addr16
mov
sti
pop
daa
repnz
push
pusha
add
xchg
psubq
test
dec
fdiv
mov
push
in
fldt
es
rolb
mov
int
add
mov
movsl
and
add
push
lret
cltd
es
insb
xchg
aad
ss
sbb
add
pop
xor
insl
xchg
add
mov
mov
mov
jb
mov
mov
mov
push
les
add
jae
and
mov
and
adc
mov
add
lods
loop
mov
xchg
js
push
dec
loope
add
mov
test
mov
loopne
mov
pop
xchg
movsl
std
jecxz
pop
call
sbbl
or
lcall
gs
jno
add
add
mov
mov
pop
aam
jle
mov
mov
mov
in
jae
sub
mov
lock
fsts
add
pop
add
mov
stos
lahf
stos
pop
mov
mov
cmp
add
or
rolb
mov
rolb
mov
lds
fsubp
lcall
mov
fcomi
xlat
rolb
mov
jle
mov
dec
pop
ja
cvtps2pi
push
fsubrl
mov
lret
lds
add
scas
adc
mov
fdivp
int3
call
mov
jle
cld
rolb
mov
mov
int3
add
mov
aaa
cmc
aas
pop
sbb
mov
push
idivl
xchg
push
fisttpll
push
add
pushf
pusha
add
push
insb
mov
mov
mov
in
popf
cmpsb
rolb
mov
cmp
add
xor
mov
mov
inc
mov
inc
pushw
cmp
pop
push
sbb
ret
int3
rolb
mov
cmp
push
push
idivb
mov
inc
add
int3
pop
push
jge
rcll
or
xor
mov
fwait
mov
adc
cmpsb
add
mov
or
fistpl
outsb
cld
jl
pop
cmp
cld
add
mov
add
inc
sbb
cmc
dec
add
mov
out
push
daa
cmp
and
mov
popa
cwtl
sbb
push
loope
dec
inc
cmpl
adc
add
mov
xchg
sub
add
rolb
out
fistpl
mov
add
lods
push
push
call
add
mov
push
stos
cli
int
movl
jge
call
mov
mov
add
add
bound
mov
sbb
sub
ds
ja
push
fcomip
sahf
jb
mov
pop
cmp
mov
clc
lcall
xor
xchg
xchg
jg
add
inc
or
in
dec
cmp
cmc
test
mov
js
sbb
mov
jl
xor
jne
cmp
push
jo
mov
pop
xchg
ja
xlat
add
je
mov
lcall
add
mov
push
leave
xchg
inc
outsl
dec
mov
mov
and
mov
roll
add
sbb
pop
inc
sub
clc
rolb
mov
outsb
jge
jp
add
mov
mov
add
xor
pop
xchg
popf
push
addb
int
scas
negb
add
mov
test
xlat
cs
mov
mov
push
add
mov
data16
imul
divb
test
add
add
sub
add
push
sbbl
insb
push
lods
and
sti
add
mov
insl
aam
pop
in
add
mov
dec
or
dec
mov
push
lods
or
jle
scas
fimull
ds
mov
mov
add
call
es
mov
jnp
add
mov
stc
outsb
xchg
xor
mov
pop
scas
adc
mov
jnp
mov
rolb
mov
and
mov
imul
enter
lahf
int3
mov
add
stc
frstor
mov
xlat
sbb
jno
inc
stos
push
sub
pop
mov
ds
imul
add
mov
add
push
sbb
rcrl
mov
mov
test
mov
scas
jmp
inc
rolb
dec
jmp
inc
outsb
pop
popa
into
pop
and
cmp
adc
sub
and
mov
add
mov
add
add
aam
sub
sub
fsubl
mov
imul
mov
sub
add
bound
mov
xor
add
mov
aaa
jo
mov
adc
adc
loop
mov
jecxz
add
mov
insl
xlat
push
inc
add
cltd
cmp
in
mov
add
addb
rolb
mov
in
mov
jo
mov
lret
lret
in
fwait
mov
shrl
add
xchg
ret
jns
cld
lds
loopne
mov
addb
nop
add
imul
mov
mov
roll
add
scas
jne
pushf
push
enter
jbe
jge
rolb
mov
dec
jb
mov
add
add
addb
divl
dec
mov
mov
idiv
mov
or
lcall
and
fldcw
adc
pusha
add
add
dec
xchg
add
mov
xor
sub
add
add
add
jecxz
aas
je
add
mov
addb
test
enter
in
cmp
fstps
js
mov
dec
pop
popf
popf
inc
int3
fs
add
pop
and
mov
fadd
or
xor
push
xchg
cwtl
popf
mov
mov
stos
divb
and
mov
sbb
add
out
std
mov
mov
mov
dec
in
mov
cmovl
cmp
xor
mov
dec
ret
aam
mov
pop
pop
lock
mov
test
repnz
movb
sbb
bound
mov
add
add
ljmp
xlat
mov
jl
outsb
pop
add
add
jl
enter
sbb
inc
mov
rolb
mov
addr16
add
mov
dec
inc
add
mov
inc
add
mov
add
out
sbb
jne
imul
pop
and
mov
adc
mov
sub
or
push
jp
inc
add
mov
pop
popa
sbb
mov
push
and
mov
add
mov
shll
mov
add
adc
sbb
sub
pop
js
loope
add
ret
mov
addl
cmpsl
add
mov
inc
ret
in
test
and
movsl
out
loopne
mov
pop
je
add
inc
shr
dec
pushf
xchg
cs
mov
pusha
add
mov
inc
aam
fisttpll
fstpt
add
outsb
dec
pop
out
test
add
or
xchg
xchg
or
dec
mov
sub
add
test
jb
mov
je
lea
test
aaa
sub
mov
daa
aad
addb
push
leave
xor
dec
pop
idiv
rorl
adc
push
sub
push
and
cmp
add
jns
fistps
inc
pop
movsb
pop
jno
test
push
xchg
inc
add
inc
roll
mov
add
cmpsl
mov
mov
out
mov
int3
mov
add
xchg
adc
nop
add
jge
std
xor
xchg
add
in
int3
mov
mov
popf
das
rcll
or
add
jno
mov
ja
cmc
pop
dec
stos
out
pop
push
add
xchg
add
push
add
add
xchg
or
add
sahf
xor
mov
lea
xrelease
mov
pusha
add
das
push
out
xchg
es
add
jo
mov
adc
xor
sbb
sub
fmuls
push
aam
dec
icebp
test
jmp
push
dec
aas
dec
je
jae
jg
rolb
mov
int
or
cltd
fidivrs
fistl
xchg
xchg
insb
dec
mov
movsb
int
incl
add
fiadds
mov
add
push
sub
add
add
inc
add
movsl
dec
cmpsl
pop
in
push
and
mov
add
pcmpgtw
or
lcall
idiv
or
lock
or
jno
sub
imul
or
xor
mov
testb
jp
mov
lret
add
xchg
push
push
loope
mov
push
scas
jle
scas
lock
dec
pop
mov
dec
jmp
movsl
jne
cmp
adc
mov
jns
out
pusha
add
mov
mov
mov
cwtl
xor
mov
cwtl
mov
sub
sbb
enter
push
lcall
pop
push
int
push
adc
add
mov
lahf
loopne
mov
sahf
inc
mov
push
in
mov
jne
aam
fs
aad
add
sub
add
cmp
insb
lds
rolb
mov
das
fdiv
add
in
rolb
lcall
addb
enter
out
stos
sub
mov
sbb
adc
mov
xchg
add
mov
inc
add
xchg
lock
push
adc
add
mov
add
lds
ss
mov
addb
jmp
push
adc
imul
out
add
push
dec
and
mov
pop
and
mov
cmc
mov
dec
loopne
mov
add
dec
ret
cwtl
mov
and
mov
and
mov
xchg
test
fmull
mov
ficoms
add
leave
hlt
ret
cmp
mov
bound
mov
inc
jae
loopne
mov
mov
push
add
pop
test
add
cltd
add
mov
inc
imul
inc
cmpsb
xchg
jbe
aam
aaa
xchg
and
pop
popa
arpl
add
inc
loopne
mov
add
test
pushf
std
insl
xlat
lea
js
mov
dec
outsb
mov
cmpsl
push
cmp
mov
enter
in
dec
shll
pop
addb
mov
add
add
pop
fmuls
mov
add
mov
add
push
addb
dec
ss
push
rolb
nop
add
jae
je
add
dec
cmpsb
add
mov
push
dec
xchg
or
ljmp
add
xchg
xor
rcll
inc
call
mov
mov
orl
xchg
add
lds
jb
mov
add
in
popf
adc
cmp
and
mov
dec
jl
pop
xor
mov
mov
push
and
addb
push
rcll
pushf
js
insb
mov
mov
jmp
cmp
sbb
adc
or
add
dec
or
mov
cmp
rolb
mov
add
cmpsb
inc
leave
mov
idivl
ret
aaa
std
lcall
cmp
loope
les
cld
mov
mov
pop
fdivl
add
mov
pop
sarl
add
dec
fisubrl
sbb
mov
mov
cltd
popa
fnstenv
add
fcompl
test
add
add
lds
inc
add
pop
ljmp
enter
in
lahf
gs
lds
add
enter
push
fmul
or
xor
mov
sub
add
jo
mov
ror
dec
rolb
stos
addb
repnz
jmp
aam
inc
mov
mov
jg
aas
push
inc
mov
add
test
add
add
push
cmpsb
pop
jb
mov
fidivl
notl
mov
mov
jo
mov
or
dec
fldt
out
inc
sbb
inc
or
add
xor
les
jo
mov
or
add
jecxz
jg
das
lock
jb
mov
fs
xor
inc
add
mov
mov
add
ja
mov
mov
sub
pop
nop
add
xchg
in
xor
pop
push
mov
mov
stos
jne
add
je
sub
pop
adc
mov
mov
xchg
add
add
cli
mov
insb
sub
enter
dec
inc
sbb
mov
mov
cmp
add
addb
sbb
add
add
add
add
push
add
add
out
rolb
mov
out
push
pop
jne
dec
leave
cmp
and
mov
xor
popa
scas
dec
jl
lret
add
push
add
fs
sub
add
mov
mov
add
mov
inc
jo
mov
add
ss
mov
add
jecxz
jbe
push
inc
push
cmp
xchg
mov
fadds
mov
into
int3
mov
mov
mov
jecxz
lcall
mov
test
in
dec
adc
fucomp
and
jo
mov
add
sub
mov
sbb
shrl
mov
sub
pusha
add
jle
add
cmp
lahf
mov
add
add
add
xor
dec
xor
and
sbb
mov
sbb
mov
xchg
fmuls
xchg
jecxz
add
xor
push
add
js
push
leave
fsubrl
cmp
add
adc
xor
test
add
or
add
das
aam
mov
stos
cmp
pop
mov
mov
popa
jp
mov
cmp
add
mov
add
mov
sub
mov
mov
mov
push
sbb
outsb
mov
mov
add
cltd
in
push
push
cmp
add
mov
add
add
jl
add
sub
lret
data16
popf
sahf
adc
into
aas
addr16
xchg
add
das
mov
popf
sti
dec
mov
pop
in
ljmp
add
inc
sbb
jae
iret
jnp
call
dec
mov
idivl
mov
add
int
das
mov
mov
add
cmp
add
scas
loop
mov
xchg
arpl
lcall
in
addb
inc
fldl
add
mov
mov
push
popf
cmpsl
icebp
jp
rolb
mov
test
dec
xchg
mov
add
inc
inc
or
jnp
add
add
ret
ret
inc
dec
mov
aam
add
mov
fstl
push
test
add
pop
sbb
sub
lcall
ljmp
popa
xchg
rorl
fidivs
add
mov
and
mov
fcmovnu
call
add
mov
add
lret
add
add
fwait
push
icebp
dec
xchg
ret
xchg
xlat
cld
lea
add
loope
push
jns
add
xchg
test
cltd
fs
adc
pop
sub
push
sub
iret
cmp
xor
mov
out
pop
in
pop
mov
cs
mov
ret
sbb
add
dec
pop
dec
push
add
fstpl
adc
mov
out
add
cmpsb
jns
insb
pop
addb
lret
or
mov
xor
cmp
add
outsb
jmp
rdmsr
add
mov
insb
sbbl
mov
dec
in
mov
sub
inc
add
inc
sub
fcompl
add
mov
mov
sub
loopne
mov
jno
add
cmpsb
sbb
mov
cmp
mov
loope
into
in
mov
mov
and
mov
mov
nop
add
or
sbb
mov
mov
xlat
test
out
faddl
fists
xchg
dec
or
add
fbld
push
mov
nop
add
push
sub
push
xchg
xchg
loopne
mov
push
pushf
es
or
xchg
add
les
jle
je
ds
add
cmp
add
int3
call
test
jecxz
dec
mulb
add
jmp
adc
mov
icebp
adc
inc
popa
push
pop
xchg
daa
xchg
sbb
js
sahf
lret
cltd
push
xchg
add
stos
fsubs
xchg
shll
sub
shll
addb
scas
testl
add
xlat
test
mov
test
ret
xor
mov
out
fld
out
aam
pop
cmp
lds
ja
add
dec
cmp
psubusb
icebp
int
push
sahf
popf
push
in
xchg
push
outsl
test
pop
xor
mov
add
mov
add
mov
add
xchg
mov
add
mov
ret
or
lods
in
cld
sbb
add
add
cmp
add
mov
rolb
mov
mov
outsb
fimull
cltd
sub
add
mov
and
push
int
add
adc
mov
addb
add
cmp
loope
popa
fidivrs
lock
add
mov
mov
ljmp
mov
mov
add
dec
shr
xlat
cmpsl
xor
scas
push
pusha
add
or
mov
mov
repnz
add
int
xchg
cltd
mov
add
pop
mov
stos
or
or
fiadds
mov
arpl
mov
mov
sub
mov
lcall
mov
daa
mov
mov
fimuls
lds
fistpll
cmpsb
mov
mov
clc
xchg
push
das
outsb
push
jecxz
addb
stc
rorl
add
mov
xchg
xor
mov
enter
mov
sahf
das
fsubrp
or
inc
das
fmuls
or
jecxz
imul
sub
negb
add
in
lods
dec
jb
mov
add
push
lea
es
mov
xor
mov
sub
add
mov
adc
out
add
mov
cld
scas
jmp
sahf
lret
addb
jb
mov
mov
add
ja
add
sti
mov
mov
lahf
loop
mov
cwtl
cmp
add
sub
or
and
add
mov
popf
or
test
pushf
loop
mov
add
clc
lret
loopne
mov
lcall
rolb
cmp
mov
xor
lret
adc
mov
add
imul
mov
outsl
pushf
xor
mov
mov
mov
add
mov
add
mov
inc
add
mov
je
pop
insl
pushf
sbb
mov
pop
adc
stc
adc
jge
or
mov
inc
pop
stc
add
push
mov
xchg
add
mov
mov
ss
add
mov
xchg
add
or
pop
sbb
dec
addb
push
scas
shll
pop
and
jbe
mov
imul
imul
fsubl
repz
mov
add
or
out
in
rolb
mov
sbb
jg
mov
mov
sahf
mov
loopne
mov
pop
push
sub
inc
add
push
add
add
test
popa
dec
mov
pop
push
and
rolb
mov
mov
jmp
addb
add
mov
pop
rolb
mov
outsb
xchg
mov
cli
cmc
sub
add
mov
xchg
cmpsl
xor
int
addl
mov
dec
push
in
mov
add
mov
push
push
add
int3
push
push
add
icebp
sbb
pop
cmp
mov
mov
test
xor
mov
pop
pusha
add
std
std
bound
mov
xor
mov
pop
push
aam
in
inc
add
mov
and
mov
repz
push
add
sub
rolb
mov
out
add
mov
xorl
in
mov
add
dec
loop
mov
mov
add
jns
mov
pop
cwtl
mov
mov
inc
outsb
pop
cwtl
sbb
xor
mov
mov
sub
add
nopl
jg
gs
lds
pop
imull
mov
rolb
mov
xor
inc
xor
add
int3
aam
out
add
jae
pop
sarl
dec
jo
mov
cmpsl
scas
cmc
test
cmp
decl
sbb
and
popa
push
lret
in
pop
popf
orl
stos
push
mov
fldcw
in
in
add
mov
dec
push
add
add
mov
pushf
fldl
dec
inc
pop
aaa
out
mov
add
pop
rolb
inc
add
cmovp
stc
add
add
add
mov
mov
movups
mov
push
mov
insb
add
mov
icebp
sub
mov
mov
nop
add
xchg
int3
mov
add
add
xchg
mov
int
fsubrs
out
lret
sbb
or
punpcklwd
in
mov
and
ja
mov
mov
dec
and
mov
js
fisttpl
stos
adc
mov
test
fs
pop
mov
mov
mov
xchg
xchg
loopne
mov
mov
xchg
jns
ds
pop
mov
mov
scas
imul
push
jecxz,pt
adc
add
pop
stos
mov
or
xor
ror
cld
push
and
jecxz
test
sar
into
lahf
es
mov
out
int3
das
mov
inc
xor
pop
dec
lret
aaa
lret
cld
inc
and
lret
in
and
mov
mov
jne
aad
scas
push
popf
push
pop
push
cmpsb
in
sbb
out
adc
mov
out
mov
mov
xlat
clc
in
xorl
cmp
adc
mov
movsb
sbb
fwait
inc
push
pop
adc
mov
dec
jmp
mov
add
sbb
das
fcompl
lret
mov
test
adc
enter
aas
xchg
pop
adc
add
sbb
inc
dec
mulb
loop
mov
jno
xchg
dec
rolb
mov
add
lds
add
mov
andl
imul
ffreep
add
lahf
in
fiadds
rol
add
pop
xchg
cmp
add
add
test
mov
pop
xor
mov
push
xor
cmpl
loope
pop
push
sub
fidivrs
or
add
aas
pop
xchg
test
mov
sbb
into
push
enter
add
and
and
mov
int
es
nop
add
loop
mov
add
sub
neg
xor
cmp
stos
pushf
and
add
sti
or
pop
sbb
mov
add
inc
fcmovbe
add
repnz
imul
xor
mov
movntq
bound
mov
mov
add
pop
aaa
mov
push
jecxz
mov
cmpsb
sub
pushf
or
cmpl
mov
imul
jmp
andl
add
mov
fcomip
xor
cld
and
mov
imul
lods
out
sbb
inc
xchg
les
add
mov
stos
mov
jb
mov
pop
leave
mov
add
inc
scas
adc
jb
mov
jns
mov
mov
add
mov
pop
pop
bound
mov
jne
and
add
das
into
adc
dec
sub
xor
mov
out
pop
jo
mov
mov
aas
jae
popa
cs
or
imul
jbe
inc
sub
add
add
dec
js
into
adc
inc
adc
addb
fsub
add
add
jo
mov
std
in
idivl
cmp
add
pop
cli
aas
xchg
add
repnz
aaa
xor
sub
testl
jb
mov
xchg
ret
inc
add
lea
int
pop
cs
lahf
stos
aas
add
mov
cld
hlt
adc
test
data16
mov
cld
cwtl
pop
sbb
add
add
push
add
fidivrs
mov
popa
push
ret
idiv
pop
xor
aas
cmpl
test
add
pop
mov
sbbl
add
mov
mov
add
out
test
dec
in
mov
lret
addb
enter
add
outsl
es
push
push
add
and
add
in
mov
addb
fsub
add
add
inc
add
ja
outsl
sbb
add
addr16
xor
mov
adc
add
xchg
xlat
push
push
xchg
adc
pop
mov
mov
xor
mov
adc
ret
mov
sub
ret
lcall
bound
mov
std
xchg
pop
ljmp
stc
cld
sub
add
dec
bound
mov
clc
mov
xchg
pop
pop
ret
xor
out
add
mov
and
mov
les
imul
out
adc
mov
lahf
push
dec
pop
mov
xor
cmp
adc
addr16
add
divl
add
jmp
or
jb
mov
add
jl
clc
mov
lcall
fimuls
in
scas
icebp
and
xchg
js
aas
call
jge
movsl
rolb
xorl
ret
fldl
test
sbb
ja
jge
cmp
mov
mov
ret
imul
push
jmp
fists
mov
mov
xchg
ja
flds
jns
add
xor
mov
out
jbe
add
sbb
pop
pop
lods
rolb
mov
mov
pop
je
ss
cmp
mov
mov
in
push
add
xchg
add
jle
enter
mov
mov
fstp
sbb
jne
in
adc
mov
add
mov
xor
mov
adc
mov
test
sub
ss
add
sbb
leave
outsb
lods
pop
push
in
ret
xor
addl
push
jbe
dec
imul
add
mov
cmpsb
push
cli
or
pusha
add
stos
clc
or
out
ficomps
push
aam
testl
sbb
add
jecxz
mov
in
out
repnz
jb
mov
lds
mov
add
addb
sub
adc
test
push
add
mov
cmp
stc
adc
mov
mov
add
mov
xlat
adc
mov
inc
movsb
out
jo
mov
push
pop
iret
add
mov
xchg
aam
add
mov
rcr
jp
or
add
test
push
adc
or
fcmove
out
cmp
add
or
outsl
sub
insb
daa
mov
mov
add
mov
mov
sub
add
mov
pop
push
xchg
pop
fidivrl
adc
add
inc
cmp
mov
cmp
ret
scas
jmp
add
std
dec
and
mov
out
xlat
dec
add
mov
rorl
mov
hlt
leave
scas
cmp
add
adc
xchg
cmp
add
cmp
je
add
mov
add
mov
lock
add
pop
adc
inc
inc
add
testb
sbb
call
lret
imul
inc
aas
jge
lret
mov
mov
pop
cmpsb
fidivrs
jge
mov
jae
and
mov
pop
addb
icebp
jnp
lock
mov
xor
and
add
mov
mov
and
mov
cmp
xchg
add
movsl
pop
filds
mov
iret
out
insb
cmp
imul
and
mov
or
add
rorl
in
pop
and
mov
push
mov
mov
xor
mov
enter
jbe
xor
xor
mov
sub
jp
lcall
mov
test
ds
lods
adc
mov
in
ljmp
scas
scas
cmp
and
inc
out
std
sti
fs
pop
aad
aad
and
mov
jge
add
cld
xchg
movsl
lea
mov
add
xor
add
mov
outsl
adc
stos
or
mov
add
mov
add
sub
or
aaa
out
adc
outsb
sahf
xlat
ret
fidivrl
cs
in
icebp
mov
cmpsb
cwtl
cmc
addb
mov
aam
sub
fcoml
sub
mov
add
fidivs
add
add
aad
dec
les
mov
add
mov
popf
movsb
pop
ja
push
add
lods
cld
fadd
std
add
add
xchg
loop
mov
mov
push
add
mov
sbb
in
cmpsl
mov
jae
icebp
ffree
or
imul
pop
outsl
ja
leave
or
jl
lea
mov
add
mov
and
mov
pop
jns
add
cld
cmpsb
add
and
je
jg
arpl
std
clc
pusha
add
out
and
arpl
cmp
mov
jp
scas
lea
xchg
add
daa
cmpsb
jl
stos
push
lods
inc
mov
test
add
add
or
mov
leave
out
adc
add
movl
das
sub
out
add
in
add
mov
mov
sub
mov
rolb
mov
cld
mov
xor
mov
mov
lock
inc
xor
dec
lds
pop
xchg
push
xchg
test
jno
cmp
push
divps
cltd
and
mov
mov
mov
pop
xchg
add
adc
mov
rolb
mov
mov
add
add
mov
push
jle
xor
cmc
cmp
test
add
mov
xchg
dec
jb
mov
mov
fcmovbe
mov
in
das
fidivl
rolb
mov
lods
push
add
adc
mov
aaa
mov
xchg
xlat
gs
xchg
cmp
std
push
push
mov
mov
sub
aaa
in
and
addb
adc
mov
add
add
xchg
add
inc
hlt
sbb
jnp
imul
xchg
add
add
add
mov
in
rcl
push
add
leave
sbb
rolb
mov
roll
mov
leave
pop
imul
lret
stos
fistl
pop
jge
add
add
xchg
mov
insl
pop
add
mov
xor
out
or
xchg
cmpsb
rolb
mov
add
dec
push
clc
push
jg
jbe
add
test
pop
adc
mov
mov
aam
sbb
in
aam
push
cmp
ss
ljmp
out
push
std
xor
push
mov
cmp
roll
add
sbb
das
mov
in
fwait
cmp
sub
add
mov
pop
mov
mov
add
loop
mov
addr16
loopne
mov
xor
in
add
imul
add
cmpsl
mov
adc
mov
add
xor
fimuls
dec
push
mov
mov
push
mov
mov
pusha
add
push
int3
rolb
mov
and
je
inc
add
mov
inc
aas
pop
cltd
test
xor
test
or
mov
cs
lods
or
clc
rolb
sbb
cli
ljmp
jb
mov
fs
movzwl
mov
lret
adc
add
mov
in
cld
sub
add
shl
and
mov
pushf
mov
mov
and
cmpsb
nop
add
mov
add
jg
add
popf
pop
mov
sbb
add
outsb
xor
and
add
lock
flds
int
ds
ret
clc
jb
mov
mov
sub
mov
mov
add
rolb
mov
inc
add
mov
pop
cmpsb
fwait
or
mov
shrl
ljmp
mov
mov
jecxz
xchg
rdmsr
add
icebp
push
xchg
sub
enter
jmp
es
in
xlat
in
mov
add
fsubs
add
lock
add
addr16
mov
add
mov
rolb
mov
xor
add
scas
push
xchg
int3
icebp
bound
mov
loop
mov
add
add
lea
mov
inc
sahf
push
pop
lret
ds
adcl
cs
mov
aaa
and
mov
xchg
xor
mov
cmp
aas
inc
pop
leave
fsubs
sbb
fldt
mov
pusha
add
mov
xor
mov
add
stc
pcmpgtw
push
xchg
pop
mov
xchg
cmpsb
and
mov
add
jbe
out
jbe
add
lahf
lock
mov
sti
addb
pop
dec
cltd
insl
cmp
lods
in
clc
pusha
add
and
inc
test
out
stc
and
into
push
adc
mov
out
push
cwtl
inc
aaa
adc
push
cmpsb
fwait
and
in
je
ret
ljmp
jbe
into
and
test
push
cmp
mov
pop
fucomip
fmull
int
push
add
adcl
add
jae
sbb
cmpsl
inc
stos
cmpsl
insb
ficomps
fnstsw
push
aam
and
scas
mov
cmp
add
mov
mov
xor
aad
or
sbb
fsubrs
enter
add
test
scas
pop
ja
loop
mov
lock
imul
clc
enter
rolb
mov
mov
pop
jno
push
scas
mov
sarl
stc
jp
or
and
mov
in
loopne
mov
je
int3
mov
mov
mov
mov
mov
mov
mov
dec
sbb
push
sbb
sub
lahf
cmc
lahf
pushf
cmp
sub
pop
jns
add
pop
loopne
mov
pusha
add
aam
fimull
sbb
addb
add
sahf
fistps
sub
xchg
adc
mov
adc
sub
pop
dec
cltd
push
mov
sbb
pop
or
mov
cmp
mov
pop
xor
addb
rolb
mov
pusha
add
mov
xchg
popf
or
push
add
iret
ficompl
lret
sbb
movsb
scas
adc
mov
mov
sti
mov
mov
lods
xchg
adc
add
sub
gs
jecxz
adc
pop
jns
jb
mov
fadds
jb
mov
rcl
les
fsub
fstpt
dec
mov
aas
push
arpl
mov
mov
out
popf
mov
addb
in
jmp
jno
inc
ficoml
mov
enter
mov
outsb
jecxz
sub
cli
leave
es
or
pop
inc
pop
cli
lcall
mov
mov
jbe
mov
js
cli
cmpsl
sub
add
xchg
inc
push
or
mov
mov
in
cmc
cmp
push
rolb
mov
addr16
pop
mov
mov
add
add
cli
imul
je
mov
add
jo
mov
push
mov
loopne
mov
jmp
or
adc
into
inc
add
idivl
ljmp
pop
out
cwtl
and
lcall
in
stos
addb
stc
repz
xchg
loopne
mov
mov
add
mov
mov
je
xchg
or
je
push
pop
mov
cmc
sti
aaa
xor
out
ficomps
add
pop
sahf
lahf
cmp
call
add
leave
mov
mov
decl
sbb
jp
pop
dec
pushl
inc
add
sti
dec
data16
adc
mov
push
mov
cmp
rolb
mov
pop
jp
or
sbb
out
add
pop
jno
in
jp
add
inc
jne
pop
addl
nop
add
mov
fwait
adc
mov
push
add
ljmp
pop
aaa
dec
ficompl
lods
lods
out
dec
xchg
std
imul
lret
sbb
xlat
push
add
ret
dec
mov
mov
adc
jo
mov
pushf
and
mov
dec
decb
imul
mov
stos
sbb
sbb
lods
mov
mov
insb
mov
mov
mov
push
in
push
sbb
scas
sbb
push
pop
int
test
das
mov
aam
jmp
inc
add
mov
add
or
add
pop
test
add
in
mov
sub
jg
and
movsl
stos
or
lea
data16
mov
add
bound
mov
dec
jo
mov
xchg
dec
mov
addb
mov
xor
dec
add
mov
push
popa
insl
imul
jne
mov
add
int
pushf
xchg
idiv
test
mov
std
jno
sbb
add
mov
lret
ret
mov
push
sub
pop
add
mov
cmpsl
icebp
or
lcall
pop
and
add
sbb
mov
pop
sub
je
pop
adc
xchg
add
adc
mov
lcall
pop
xchg
add
sub
add
mov
lret
int3
or
add
mov
add
push
out
dec
xchg
mov
or
mov
mov
push
rolb
popa
cmpsb
arpl
sub
into
sarl
popf
mov
je
rolb
mov
shl
mov
rolb
mov
add
aam
pop
sub
push
push
bound
mov
push
stos
outsl
or
out
test
xor
mov
inc
add
sbbl
sbb
loopne
mov
push
sub
push
imul
add
clc
sti
pop
decb
or
mov
lahf
out
sarl
imul
daa
pop
push
add
int3
popa
stos
add
mov
roll
jecxz
sub
fsubr
cltd
inc
xor
cmp
int3
imul
in
adc
or
add
add
add
xor
and
mov
add
lcall
sbb
stc
cmpsb
lds
add
mov
mov
add
dec
loopne
mov
mov
lret
out
sub
jg
adc
stc
and
popf
dec
add
sbb
repz
xlat
into
xor
fldenv
adc
mov
sti
mov
sub
dec
loop
mov
enter
add
mov
and
add
mov
sub
cs
jns,pt
cmp
jb
mov
loop
mov
mov
outsb
pop
or
add
cmc
ss
lds
add
mov
in
jns
dec
push
movsl
xchg
cmp
add
mov
mov
fsubrs
cwtl
lea
cmp
aad
add
in
js
cwtl
rolb
test
add
fldt
and
pop
fsubs
add
mov
add
dec
pop
insb
test
pop
pop
mov
adc
xor
mov
mov
lcall
pop
mov
add
add
mov
lret
test
add
pop
pop
sti
ficomps
xchg
in
xor
cmp
adc
cmp
or
stos
inc
add
aad
cmp
test
stos
jl
add
andl
arpl
dec
test
daa
sub
popf
test
xchg
pop
push
dec
xchg
mov
addb
pop
xchg
xor
arpl
mov
xor
testb
mov
rsqrtps
mov
pusha
add
mov
or
dec
add
dec
addb
and
xor
mov
sub
add
xchg
je
xor
test
test
dec
stos
sbb
sbb
clc
pop
inc
pop
push
in
in
in
insl
jns
and
addb
push
adc
sub
scas
push
loope
movsb
pop
je
and
mov
add
xor
xchg
push
push
adc
mov
cld
movsb
bound
mov
je
add
adc
mov
mov
add
scas
or
stos
cltd
test
add
mov
pop
inc
push
or
jns
ret
push
mov
add
mov
mov
std
xchg
xchg
jle
adc
mov
mov
or
cmp
adc
mov
ja
outsl
movsl
lret
jle
add
test
add
add
xor
xor
aad
lods
inc
adc
jp
mov
add
fisttpl
add
pop
scas
cwtl
xchg
enter
add
inc
add
inc
loope
insl
das
mov
mov
test
stos
dec
mulb
arpl
xchg
mov
inc
sub
add
les
call
mov
es
rolb
mov
stos
jb
mov
inc
add
or
pop
adc
lcall
lea
dec
loop
mov
pop
and
dec
pop
ds
mov
dec
xor
add
add
mov
das
cmp
add
add
fwait
mov
mov
cld
inc
jecxz
cmp
das
adc
dec
xchg
add
dec
cli
mov
leave
or
pop
cmpsb
push
movsl
push
cs
lret
inc
unpckhps
mov
bound
mov
dec
fimull
repz
lds
lret
lock
xchg
and
imul
lahf
cli
xchg
stc
and
sub
add
inc
sub
mov
test
in
sbb
lods
xchg
addb
mov
subl
into
popf
jo
mov
mov
mov
mov
clc
sub
and
add
xchg
mov
add
add
sub
fsubr
out
popa
push
fwait
mov
jbe
add
xchg
add
sub
adc
mov
mov
mov
stos
adc
mov
xor
mov
sbb
add
popa
addr16
inc
add
inc
add
stos
sub
or
xchg
add
xchg
lock
push
mov
mov
xchg
push
pop
iret
mulb
les
xchg
add
sub
addb
add
xchg
fistpll
rolb
stos
cltd
pop
inc
idivl
movsl
scas
loope
outsb
sbb
adc
add
stc
out
cmp
push
jmp
fidivrl
hlt
imul
sub
sbb
int
addb
push
add
mov
mov
lods
pandn
add
cmp
lret
aad
sub
aas
pop
inc
add
scas
imul
add
push
add
mov
int
xor
loop
mov
insb
repz
add
push
jo
mov
pop
jle
mov
pop
and
mov
xchg
aad
and
mov
jecxz
mov
push
mov
cld
cmp
jnp
in
mov
mov
adc
imul
add
insl
rolb
mov
add
jno
outsb
jg
outsb
lret
adc
xlat
or
rolb
mov
sbb
push
pop
jge
sti
jle
inc
and
mov
cld
mov
sub
xchg
mov
cmp
jp
lcall
lret
pop
cld
call
add
cmc
lea
and
fisubrl
sbb
jne
sub
push
lock
pop
xchg
ficompl
shll
fldcw
popf
mov
sbb
push
aam
mov
mov
mov
js
loope
fnstsw
and
mov
add
cmpsb
sti
leave
or
ret
and
mov
dec
repnz
or
add
int
jl
add
add
add
and
sub
push
mov
cmp
mov
cmp
mov
shr
xchg
je
out
add
push
mov
mov
lock
xor
mov
aad
add
sub
addb
xchg
dec
pop
rolb
xlat
mov
xor
mov
mov
and
mov
js
sbb
xchg
cwtl
jecxz
std
jle
add
mov
push
xor
add
xchg
lods
mov
mov
push
ret
clc
mov
mov
push
mov
jp
lods
inc
int3
xor
pop
or
loope
jle
fwait
mov
pop
dec
mov
fisttps
and
pop
nop
add
mov
lods
cmp
addb
call
mov
lret
xorl
mov
stos
mov
xor
out
push
mov
aas
lcall
mov
adc
mov
jl
jnp
fsubs
add
cmp
add
add
mov
mov
pushf
sti
loope
outsl
sbb
add
cli
loope
jmp
inc
out
popf
jg
daa
call
cwtl
sbb
daa
push
push
add
bsf
aad
pop
or
out
gs
ss
outsb
enter
cld
mov
push
pop
dec
insb
scas
dec
push
xor
mov
sub
mov
xor
mov
xchg
pop
mov
mov
dec
xor
mov
popf
outsl
fadd
add
add
pop
test
mov
popa
inc
stc
aad
hlt
repnz
outsl
dec
icebp
mov
mov
mov
mov
rolb
mov
add
push
jo
mov
lahf
cmp
in
fstl
dec
stos
fld
sbb
add
not
add
pop
or
jne
sub
xorl
add
jle
pushf
push
int3
xlat
inc
lahf
mov
dec
popa
enter
xor
mov
add
ljmp
cs
add
add
xlat
mov
rolb
hlt
push
hlt
mov
not
push
movsb
dec
outsl
sti
mov
add
mov
mov
in
mov
mov
adcl
mov
add
sub
mov
outsb
out
adc
sar
inc
iret
fnstenv
mov
nop
add
add
bound
mov
pop
inc
negb
stos
test
add
add
mov
mov
fdivrl
lock
add
int
mov
lea
adc
enter
mov
outsb
test
add
mov
mov
lahf
and
add
ja
cmp
addb
and
xchg
lahf
rolb
mov
pop
add
xchg
ret
int3
inc
loop
mov
inc
jp
fwait
xchg
sub
add
test
cmp
mov
rolb
mov
xchg
cmp
or
icebp
sar
jo
mov
mov
adc
mov
inc
jl
cli
fsubrl
or
outsl
push
lret
mov
sub
and
jo
mov
repnz
xor
mov
in
pushf
and
imul
add
mov
cmp
push
add
addb
jmp
jnp
add
rcll
mov
xchg
stc
or
or
enter
mov
xchg
fs
adc
push
mov
inc
xor
sbb
es
mov
notb
dec
or
addb
jecxz
cmc
xor
mov
push
aam
sbb
xor
stos
push
pop
stos
lahf
jecxz
jmp
ud2
mov
addb
clc
mov
dec
sub
cmpsl
es
xchg
test
leave
or
mov
mov
in
out
cmpsb
lcall
inc
add
inc
aam
ficoml
fwait
cvtdq2ps
add
jns
jp
pop
in
and
mov
mov
add
push
pop
sub
test
jp
add
mov
mov
add
lods
test
mov
push
stos
sub
pop
push
add
push
stc
daa
pop
les
jne
mov
js
xor
add
xlat
push
movsl
push
mov
leave
das
sub
jno
jbe
mov
mov
rolb
mov
scas
int3
mov
add
aam
je
inc
add
mov
xor
or
jns
clc
aas
cmp
add
lcall
dec
jmp
adc
mov
aam
cltd
pop
inc
stos
lret
sti
popa
mov
mov
mov
cmovl
sub
je
push
add
clc
jecxz
mov
add
std
mov
mov
mov
mov
mov
jnp
out
jbe
add
cmp
add
push
cmp
jmp
add
mov
inc
add
add
into
adc
mov
aaa
mov
push
xor
inc
push
bound
mov
push
sti
adc
add
pop
xor
mov
xor
insb
cmpsb
sub
sub
and
add
iret
sbb
nop
add
cmp
add
push
lret
push
add
dec
pop
fldt
mov
add
repnz
add
add
lret
dec
icebp
scas
lret
push
scas
sti
addb
jns,pn
es
out
aam
into
addr16
in
adc
jmp
jle
add
jno
test
mov
fucomi
repnz
mov
add
xor
push
test
sub
push
add
lods
jmp
mov
mov
add
mov
sbb
fsubs
aaa
repnz
cmp
add
and
mov
ljmp
mov
inc
add
jle
sti
adc
mov
dec
mov
add
aas
jmp
je
pop
mov
in
xchg
add
xchg
and
add
add
es
or
mov
push
rolb
mov
add
jnp
icebp
pop
dec
clc
push
int3
cmp
xchg
add
gs
lcall
hlt
mov
data16
mov
ss
rolb
mov
add
mov
sub
add
mov
test
nop
add
in
adc
dec
sahf
inc
insb
test
repnz
sub
sti
std
cld
add
add
loope
bound
mov
jl
lcall
mov
inc
add
xchg
gs
movsl
sbb
sub
add
into
push
dec
cmp
repz
jmp
mov
mov
xor
mov
xor
add
jnp
lock
add
add
mov
in
loop
mov
out
sbb
mov
rolb
mov
fstpl
mov
stos
stos
icebp
loop
mov
sti
sub
xchg
cmp
and
add
out
mov
insb
sti
xchg
sbb
lds
mov
mov
cmpsl
inc
test
mov
filds
pop
push
cs
fdivp
sarl
jo
mov
pop
xchg
add
pop
fcmove
aaa
out
add
add
adc
add
inc
sbb
jl
dec
rolb
mov
pop
dec
movsl
xchg
stos
pusha
add
sub
push
dec
cmc
pop
popf
arpl
xchg
add
gs
fistpl
add
mov
mov
aam
adc
add
sbb
cmp
and
mov
popa
cmc
aad
add
cld
add
mov
sub
push
in
xor
mov
add
pop
addb
cltd
insb
dec
fstpt
xchg
add
imul
enter
mov
mov
xchg
push
xchg
mov
jecxz
ror
pop
mov
enter
mov
jbe
fists
and
mov
fsubl
mov
lock
push
add
and
add
mov
and
mov
jne
add
add
add
mov
divb
bound
mov
jl
pop
add
add
xor
push
push
jmp
dec
aad
mov
sub
out
lahf
lea
out
xchg
jb
mov
jge
mov
add
mov
add
lods
es
cmp
mov
add
mov
mov
mov
std
inc
add
mov
inc
in
sbb
pop
jns
mov
in
pop
dec
mov
xor
mov
jecxz
sub
movsb
mov
arpl
or
pop
push
mov
add
loop
mov
lcall
les
mov
scas
outsl
inc
add
xchg
push
xchg
sbb
lret
orl
mov
mov
cld
mov
jbe
add
mov
mov
dec
or
mov
in
dec
jmp
out
adc
mov
mov
sbb
dec
ja
jbe
add
push
jno
test
outsb
inc
add
push
add
pop
mov
sbb
mov
addl
mov
mov
ja
and
pop
adc
mov
mov
sub
fwait
add
mov
xchg
cmp
xlat
test
and
push
add
lret
popa
sbb
fldt
test
decl
add
fistpll
int3
mov
add
mov
push
add
add
cmp
jo
mov
aas
int
pop
adc
xor
mov
add
js
jecxz
mov
add
sub
add
adc
mov
jp
mov
mov
in
jmp
mov
add
mov
mov
mov
mov
add
mov
jp
add
dec
lret
add
add
sub
addb
xchg
mov
ficoms
sahf
mov
cwtl
mov
mov
xchg
and
mov
mov
mov
fsubrl
lret
sub
mov
push
paddq
test
fadds
mov
out
mov
addl
xor
push
in
rolb
mov
repnz
insb
jmp
cmp
shrl
cmp
add
pop
fisubs
xchg
hlt
xor
mov
mov
popf
mov
ficomps
add
sbb
mov
mov
xchg
inc
lret
mov
mov
add
and
mov
inc
icebp
pop
imul
mov
mov
fstl
add
out
addb
xor
lock
push
fwait
ljmp
or
int
arpl
add
inc
jno
fnsave
mov
add
jnp
cli
sbb
add
push
aas
xchg
sbb
aam
jmp
aaa
sub
rolb
mov
push
adc
xor
mov
cmc
adc
mov
lret
bound
mov
das
stos
jb
mov
add
mov
add
add
dec
push
cltd
in
out
sti
or
xor
mov
mov
ss
add
add
mov
and
add
sub
cmp
sbb
mov
repnz
add
mov
xchg
rolb
mov
call
or
add
add
jmp
push
xchg
call
add
mov
test
mov
shrl
out
scas
ficomps
jo
mov
cmp
rolb
mov
xchg
and
mov
add
jne
add
in
test
add
add
aad
in
inc
add
add
dec
in
cmp
jns
and
lods
rolb
nop
add
cltd
push
rolb
mov
test
xorl
or
addb
repnz
out
push
add
sbb
out
sub
jnp
mov
rolb
mov
add
inc
lds
add
xchg
pop
andl
sahf
fwait
jge
pop
mov
add
mov
stos
adc
mov
mov
movsl
sbb
int3
xor
mov
add
mov
sbb
daa
loopne
mov
add
push
pop
sub
add
push
in
mov
mov
dec
mov
mov
push
icebp
nop
add
sbb
inc
add
mov
stos
push
cmpsl
dec
jecxz
jno
pop
rcll
jb
mov
faddl
push
vxorps
add
daa
lods
xchg
xchg
add
bound
mov
mov
mov
mov
and
pop
add
movsl
in
fwait
cmp
push
add
jecxz
dec
mov
add
xor
inc
addb
xchg
add
xchg
ficompl
xchg
mov
aad
add
mov
rolb
mov
mov
mov
xor
sbb
popa
sarl
and
mov
js
add
add
bound
mov
jle
or
dec
lcall
movsl
stos
ret
lods
ljmp
mov
cmp
mov
mov
inc
pop
xor
cmp
lret
test
pushf
or
or
mov
adc
mov
dec
test
xchg
push
sbb
lods
stc
fildll
jge
ret
test
scas
mov
or
mov
mov
xchg
and
lock
mov
clc
push
sbb
int3
sti
jmp
enter
cmp
lcall
mov
mov
movsl
lds
in
add
mov
add
scas
pushf
addb
adc
outsb
and
mov
add
xchg
push
pusha
add
jecxz
test
xchg
sti
pop
jl
push
lret
or
ret
xchg
add
fs
push
push
cmp
mov
pushf
push
scas
sub
lret
movsl
setns
jns
mov
mov
add
push
add
sub
mov
or
daa
fwait
xor
mov
add
add
sbb
nop
add
dec
addb
stos
push
add
pusha
add
push
add
mov
cmp
add
mov
mov
dec
or
imull
out
das
notb
push
add
and
nop
add
pusha
add
fimuls
add
and
lahf
es
and
add
movl
mov
add
pushf
lret
or
xor
in
jge
add
mov
sti
les
mov
test
add
es
dec
dec
out
lods
test
mov
mov
add
add
add
inc
add
and
add
mov
cmc
outsb
ljmp
adc
mov
mov
sub
mov
or
xchg
add
mov
imul
stc
xor
mov
mov
jno
outsl
push
adc
mov
or
cwtl
fmul
das
cmp
adc
jge
rcll
sbb
loope
adc
mov
pop
xchg
push
add
dec
loopne
mov
insl
cmp
jne
mov
add
adc
mov
test
movsb
mov
add
repnz
mov
adc
cmp
add
sbb
lods
mov
sub
add
inc
jle
add
mov
add
dec
lea
sub
xor
jmp
mov
hlt
mov
loop
mov
xchg
jbe
out
pop
aad
push
or
dec
jns
out
inc
repnz
jbe
dec
sbb
add
mov
sbb
sub
adc
sahf
mov
dec
scas
sub
add
add
daa
mov
dec
jae
aad
dec
movsb
sub
add
inc
sbb
jle
cmpsb
fists
addb
sbb
mov
sbb
cmp
add
mov
xchg
jl
in
mov
add
mov
add
or
xchg
or
insl
cmp
enter
push
add
mov
jge
pushf
je
icebp
repz
in
add
hlt
sub
pop
xor
dec
dec
push
testb
mov
mov
xor
mov
xor
mov
mov
mov
add
xchg
jmp
mov
mov
dec
imul
add
push
fwait
sbb
cmp
push
push
add
test
add
test
add
cmp
fimull
int
and
out
lods
push
mov
cmp
mov
pop
mov
adc
add
mov
mov
pop
in
loope
or
icebp
mov
add
in
repz
das
jecxz
inc
jb
mov
fwait
scas
add
mov
jb
mov
mov
jne
mov
cmpsb
js
add
rolb
mov
mov
add
mov
add
sbb
call
pop
pop
dec
int3
sub
pop
rcll
mov
add
ds
mov
or
sub
sub
and
fmull
mov
repz
xor
je
push
add
adc
test
jno
sti
xor
addb
cmp
imul
inc
mov
mov
leave
push
in
and
push
xchg
dec
dec
cmp
add
mov
into
ja
and
mov
push
fwait
cmp
add
inc
aas
fstl
lret
insb
xchg
fldenv
mov
jo
mov
mov
into
int3
pop
push
fstps
lahf
xchg
lahf
or
pop
pop
test
add
mov
shll
mov
add
xchg
arpl
mov
iret
ret
add
addb
icebp
dec
push
arpl
enter
mov
add
add
ret
sub
fs
jbe
jbe
mov
add
add
mov
add
mov
push
push
dec
jmp
xor
cmp
add
inc
es
ja
mov
mov
and
cmp
hlt
mov
mov
pop
jg
sahf
ja
sub
mov
mov
adc
add
sbb
sbb
std
inc
add
divl
mov
adc
mov
jno
add
mov
mov
movsl
pushf
push
mov
cltd
mov
daa
ret
push
fnstcw
jle
mov
jne
add
ds
mov
cmpl
js
ljmp
xchg
jecxz
push
mov
mov
mov
mov
add
mov
add
sbb
add
test
inc
add
jl
and
ror
mov
push
fldenv
fst
fwait
jo
mov
aas
adc
mov
cmc
inc
out
fsts
inc
mov
je
or
mov
lock
arpl
fcoml
jle
arpl
jbe
imul
mov
adc
mov
fmull
xor
add
pop
jns
xchg
pop
sbb
pushf
fisubs
faddp
add
add
mov
adc
test
insb
add
xor
mov
add
mov
add
bound
mov
movsb
mov
push
mov
dec
push
sub
mov
sahf
pusha
add
mov
test
insl
adc
testb
jne
xchg
xor
add
loop
mov
lods
mov
mov
jge
lret
call
mov
out
out
sbb
mull
mov
xor
jb
mov
or
and
sbb
push
dec
cmp
cmp
imul
inc
and
in
das
pop
xchg
ja
stos
add
fmulp
repnz
xor
dec
jge
std
cltd
jmp
movsb
ret
or
insb
aaa
push
lret
aam
pop
push
rcll
mov
repz
cmp
stos
rcrl
loop
mov
adc
out
pop
cltd
sbb
mov
fucomp
lds
jle
inc
add
mov
mov
lods
mov
xchg
ficomps
mov
sti
mov
jmp
test
ljmp
push
gs
pop
cli
cmp
shll
pop
call
mov
adc
add
mov
mov
mov
mov
pop
dec
bound
mov
mov
pop
loopne
mov
mov
int
add
aaa
mov
repnz
xchg
sar
mov
popa
outsb
lods
test
addb
inc
and
mov
mov
sbb
mov
and
mov
xchg
add
lds
pusha
add
mov
mov
aaa
repz
or
push
nop
add
pusha
add
mov
daa
jle
fisttps
stos
mov
jbe
ficompl
notl
pop
or
add
cmp
sbb
adc
mov
dec
in
mov
xchg
int
insb
inc
ljmp
push
push
mov
push
jne
inc
jbe
popa
xor
mov
dec
push
jno
enter
pop
xor
mov
out
or
mov
mov
cmp
in
mov
add
dec
lods
and
test
jbe
into
cmp
and
or
add
add
test
push
xor
mov
add
insl
or
mov
dec
xor
mov
rolb
mov
add
in
xor
mov
pop
test
mov
inc
dec
mov
aaa
adc
inc
cmc
fld
add
out
insb
addr16
or
stos
aas
movsl
popa
adc
mov
push
cmp
je
arpl
add
or
mov
or
mov
inc
add
pop
rolb
pop
call
out
outsl
push
scas
rolb
mov
dec
repnz
ja
fs
add
mov
adcl
mov
rolb
mov
aaa
leave
test
enter
xor
mov
arpl
mov
out
sbb
jp
pop
fldt
add
sub
dec
scas
adc
mov
into
mov
repz
movsb
xor
mov
stos
xor
mov
aam
push
sti
movl
rolb
mov
fistl
mov
add
sub
push
pop
or
lret
ret
iret
adc
les
addb
loopne
mov
cmc
mov
jae
loop
mov
push
sbb
add
mov
fistpl
sbb
cmpsb
sub
mov
out
lahf
cmp
stos
imul
add
mov
add
push
in
sbb
mov
xor
mov
cwtl
adc
push
push
sbb
add
jno
add
aaa
push
inc
add
lea
lods
scas
test
stos
xchg
add
lea
pop
stos
dec
fs
pop
je
lds
mov
add
mov
int
jne
push
pop
mov
add
lods
jne
push
jl
mov
imul
add
stos
push
hlt
lock
sbb
lods
cwtl
dec
fsubs
mov
add
jae
ds
fdivrl
add
std
mov
mov
sub
test
add
rolb
mov
add
pop
scas
adc
mov
add
xor
push
pop
fmull
mov
in
scas
jp,pt
mov
and
lods
or
xchg
rolb
mov
push
movups
add
add
lock
push
xchg
jbe
jno
add
cmp
jnp
xchg
xorl
mov
fldt
adc
add
dec
xchg
sub
pop
cli
imul
dec
fadds
pop
cltd
ja
out
cmpsb
pop
and
inc
add
add
dec
and
fsubrl
in
mov
mov
add
lret
sahf
testl
dec
loop
mov
and
mov
pop
dec
movsl
sub
aam
sbb
sub
push
sbb
sahf
inc
and
sub
daa
shr
mov
mov
mov
mov
push
xchg
lods
test
dec
cwtl
pop
call
popa
xchg
jmp
lret
sbb
pop
push
push
push
add
ja
lea
stos
movsb
loope
and
mov
jbe
inc
lret
mov
and
mov
jbe
add
add
scas
push
fildl
cmp
add
mov
cmp
dec
mov
mov
cmp
push
cmp
outsl
inc
ljmp
gs
mov
add
daa
aas
and
hlt
jle
cmp
xor
mov
jae
inc
dec
sub
mov
mov
loope
or
aad
ficomps
push
mov
cmpsb
cmp
mov
inc
add
fldenv
in
mov
rcl
stos
sub
aas
ss
out
mov
rolb
mov
out
xchg
add
inc
cld
xchg
out
add
add
pop
aad
gs
shl
push
clc
sub
mov
lcall
out
jbe
inc
in
add
mov
adc
imul
mov
mov
pop
fs
std
insl
cmp
xchg
sbb
mov
add
pop
les
xor
out
movsb
div
add
sbb
mov
add
popa
or
jmp
add
add
mov
mov
mov
rolb
mov
add
fs
adc
mov
mov
icebp
out
aas
sbb
sub
adc
addr16
jae
sbb
xor
lods
test
pop
sub
pop
dec
iret
loope
js
icebp
adc
jb
mov
inc
jmpw
xchg
inc
xchg
xchg
add
xor
sub
jp
mov
mov
or
add
mov
add
add
fdivl
mov
sub
add
xchg
addb
and
mov
xor
mov
int
fprem
insb
lcall
mov
mov
xchg
add
cmp
lret
jl
pop
jg
add
or
popa
stc
jne
mov
fistpl
aaa
jno
add
inc
jns
lret
pop
test
mov
rolb
ja
addb
jge
inc
add
out
add
mov
sbb
popa
mov
or
mov
ja
or
cmpsl
pop
cwtl
mov
scas
sbb
add
fdivrl
loopne
mov
add
or
push
mov
test
ss
sub
sub
pop
pop
cmp
jb
mov
mov
mov
mov
add
js
iret
pop
jnp
add
add
mov
mov
mov
mov
insb
xor
mov
sbb
mov
aas
ss
fs
lret
push
mov
ficompl
add
pop
jnp
addb
sti
add
mov
mov
repnz
push
outsb
xchg
add
dec
cmc
in
aad
dec
cmpl
movsl
lods
xor
mov
adc
mov
mov
add
and
mov
cltd
int3
mov
clc
test
iret
inc
lret
mov
push
popa
dec
jp
arpl
mov
jge
xor
das
stc
inc
bound
mov
mov
add
push
dec
loope
clc
lahf
fadds
in
and
mov
add
xor
test
ret
jbe
shll
repz
xchg
dec
or
mov
imul
jle
stc
stc
in
lea
sbb
mov
mov
aaa
jp
xchg
add
dec
pop
stos
inc
add
jae
addr16
lahf
mov
xchg
jl
lahf
cmp
and
mov
ret
aam
pushf
xor
mov
xor
add
mov
in
mov
add
lea
xchg
rolb
mov
add
fimuls
jno
ljmp
pop
dec
cmp
add
add
scas
dec
xor
pop
add
out
mov
pop
jno
or
in
inc
cmp
pop
and
mov
inc
sbb
daa
mov
mov
mov
lret
xor
xchg
add
mov
sbb
dec
enter
cmp
icebp
dec
sbb
sub
addb
dec
je
aam
pop
pop
rolb
outsb
dec
push
mov
lcall
lods
sub
and
rolb
mov
mov
stos
adc
mov
mov
imul
mov
mov
notb
add
out
adc
xchg
out
cs
pop
mov
insl
mov
xchg
xor
mov
lahf
aas
enter
mov
pinsrw
cltd
out
fwait
cltd
aas
rcrl
and
mov
adc
add
add
add
inc
push
push
add
mov
ret
aaa
mov
cmp
xor
mov
xor
mov
push
ljmp
mov
repz
sub
sbb
add
das
xor
ret
inc
popa
and
mov
mov
das
shrl
in
xor
mov
sbb
cmpsl
dec
xchg
add
push
sahf
adcl
mov
mov
repnz
fistpl
aad
fdivrs
sub
mov
mov
dec
repz
inc
add
mov
mov
notl
mov
movsbl
insl
lods
dec
and
mov
xchg
jle
lds
mov
insb
testb
add
mov
push
stos
jne
mov
jne
jmp
roll
mov
jno
mov
adc
push
xorl
pop
repz
mov
lods
ret
mov
mov
mov
add
sahf
nop
add
jo
mov
mov
add
sbb
push
add
xor
mov
fs
out
jge
out
arpl
mov
add
test
pop
xchg
ljmp
leave
addr16
inc
les
cmp
mov
sbb
or
adc
mov
or
add
mov
xchg
pcmpeqd
add
sti
lea
mov
mov
nop
add
mov
testl
mov
inc
add
inc
ljmp
out
inc
daa
sbb
fldenv
fidivrl
cmp
push
ljmp
and
add
jno
hlt
adc
inc
jmp
jl
mov
mov
mov
clc
and
dec
fidivrl
fbstp
add
cmp
shl
mulb
add
push
add
rolb
sbb
dec
ljmp
adc
aaa
aaa
mov
mov
add
std
jge
arpl
xchg
rolb
mov
cmp
inc
inc
or
cmp
add
bound
mov
outsb
lret
mov
jmp
add
inc
dec
test
cmp
add
je
add
int
xchg
cs
add
push
mov
mov
xchg
lret
test
cmp
mov
fldenv
sbb
adc
mov
mov
lds
mov
add
mov
xchg
ds
data16
pop
adc
leave
sbb
cmpsl
xchg
fs
mov
stc
cmp
pop
mov
xchg
fstenv
add
inc
or
pop
lock
out
fsubs
pop
mov
adc
mov
fimuls
popf
mov
fmull
test
out
test
push
jbe
sahf
fst
add
ret
add
mov
add
in
hlt
movsl
aad
xchg
add
dec
adc
outsb
xor
mov
outsb
xchg
repz
inc
cs
xchg
jecxz
mov
inc
fcoml
mov
iret
cltd
icebp
mov
cwtl
into
jecxz
pop
dec
ret
pusha
add
cmpl
pop
jp
pop
and
cwtl
add
or
xor
jne
sub
add
test
cmp
add
enter
mov
mov
mov
mov
push
scas
push
rorl
sti
mov
ss
sub
cmpsl
push
int
gs
dec
jno
bound
mov
mov
dec
inc
xchg
in
cs
sub
inc
addr16
sub
or
add
mov
repz
mov
add
enter
xor
int
jp
fsubs
mov
mov
add
or
add
stos
cmp
add
stos
mov
pushf
pop
jnp
pop
dec
mov
add
mov
jno
push
rolb
gs
and
sub
loopne
mov
push
xchg
loop
mov
add
popa
mov
mov
daa
mov
mov
add
adc
mov
lods
cmc
out
rolb
testl
and
lret
add
cld
dec
adc
xor
hlt
movsl
pop
mov
outsl
std
cmpl
xor
mov
or
daa
xchg
push
push
movsb
test
jmp
mov
stos
jmp
fisubs
lahf
xor
jnp
loopne
mov
daa
jge
jp
hlt
inc
mov
mov
push
testb
mov
fcompl
dec
or
in
xchg
insb
jo
mov
push
xor
mov
mov
test
xor
inc
mov
mov
sub
xchg
out
aad
xchg
add
je
inc
loop
mov
push
sub
dec
lods
cmp
cwtl
loope
cli
test
add
adc
mov
adc
loope
dec
cmp
rcll
mov
jo
mov
push
pop
dec
mov
rcll
mov
fsubl
push
inc
popl
mov
add
mov
std
dec
mov
add
lahf
dec
adc
mov
add
mov
mov
add
test
int3
sbb
pop
cltd
fdivs
sahf
nop
add
add
nop
add
pop
test
add
mov
add
mov
add
sub
pop
dec
das
out
fisubs
mov
stos
push
aad
sbb
add
jecxz
sbb
add
ret
in
jge
mov
add
pop
sarl
mov
mov
jo
mov
push
pop
mov
mov
ret
cmp
inc
lahf
add
mov
idivb
inc
test
xchg
pop
push
add
xchg
cmp
push
pushf
cmp
scas
lret
sub
jge
and
mov
jno
gs
push
and
mov
mov
add
mov
jge
fwait
test
leave
inc
dec
jae
jns
jg
add
jl
lock
sub
cmpsb
mov
add
push
add
cmpsb
push
rolb
mov
add
jge
das
int3
outsl
lret
dec
cmpsl
fwait
cmp
popf
in
jnp
scas
jnp
add
clc
mov
test
addr16
mov
push
cltd
stos
rolb
mov
add
cwtl
aad
add
add
or
fwait
sub
arpl
loop
mov
das
mov
add
addb
add
mov
daa
adc
bound
mov
jo
mov
addb
fsub
xchg
sbb
add
dec
jge
cmp
mov
jmp
mov
inc
cmpsl
push
xor
mov
add
popa
jo
mov
and
add
inc
aam
test
mov
add
jecxz
push
push
not
or
jg
mov
out
fidivrs
sub
add
cmp
cmpsl
out
add
test
gs
push
pop
ret
jmp
add
dec
adcl
add
jb
mov
mov
xchg
cmp
js
or
mov
lock
cmpsb
mov
ret
mov
sbb
leave
clc
add
mov
jle
mov
add
or
sbb
pop
mov
add
mov
jo
mov
fdiv
add
enter
and
mov
xchg
add
xchg
dec
repz
add
add
mov
add
jecxz
mov
daa
repnz
ljmp
jecxz
add
adc
mov
jmp
add
push
pop
inc
add
mov
pop
add
or
mov
mov
add
mov
icebp
dec
call
sub
mov
mov
enter
stos
data16
test
ss
push
dec
fdivrl
mov
mov
jae
push
jno
or
int3
pop
loope
inc
add
mov
decl
out
popf
enter
mov
xlat
push
bound
mov
lock
popa
mov
jb
mov
es
es
dec
jg
dec
mov
mov
mov
fstpt
sub
add
imul
or
cld
jge
pushf
sbb
hlt
mov
das
push
int
add
add
mov
jl
push
aam
pop
out
dec
sub
imul
add
sbb
lcall
push
mov
mov
pop
out
cmp
aas
xchg
push
in
clc
pushf
out
fs
mov
add
jbe
add
test
cmp
aad
fnstsw
mov
sub
mov
and
mov
movsl
cmp
xor
mov
into
out
add
push
adc
cmpl
dec
adc
mov
loopnew
mov
and
mov
ss
addb
cmp
add
add
inc
jge
daa
movsl
dec
mov
out
aam
sbb
fimull
push
add
ja
popa
dec
sahf
cltd
and
cmp
mov
or
sbb
jno
push
cmp
or
jp
in
add
mov
mov
bound
mov
add
cmc
pop
sbb
xchg
mov
lds
out
jbe
outsl
mov
or
jle
aaa
sbbl
