or
cmp
mov
mov
mov
add
pusha
add
sbb
push
popa
test
fcoml
lretw
or
add
call
test
or
insl
jge
clc
xor
mov
xchg
es
orl
out
rolb
mov
out
push
add
mov
clc
negl
divb
mull
add
and
mov
iret
iret
insl
lret
dec
sub
cltd
cli
pop
rolb
mov
scas
insl
jmp
cmp
lods
icebp
push
add
jle
mov
mov
test
mov
xchg
mov
outsl
roll
push
inc
nop
add
addb
lock
hlt
add
mov
scas
and
lahf
pop
fdivrp
add
mov
out
sub
add
mov
std
sahf
popa
dec
loop
mov
add
mov
rolb
mov
jecxz
int
test
push
leave
jno
in
fiaddl
inc
fisubs
leave
mov
adc
and
mov
call
or
jns
mov
add
loop
mov
xchg
and
add
add
adc
lret
push
add
rolb
mov
popa
cmc
pop
pushf
xor
out
jb
mov
imul
sbb
add
test
or
adc
push
and
mov
cmpsw
adc
mov
add
mov
popf
and
cs
sbb
mov
or
mov
mov
enter
mov
rcl
loop
mov
mov
fsubrs
aam
repnz
cmpl
stc
push
add
sahf
flds
rolb
mov
add
dec
jge
shld
mov
rolb
mov
cmpsb
aas
arpl
mov
and
mov
jmp
cmp
mov
cmpsb
bound
mov
in
loope
pop
repz
adc
pop
jecxz
push
add
fsub
xor
mov
mov
movsb
add
and
mov
lock
lahf
insb
lods
push
dec
iret
sub
es
add
and
das
adc
mov
addb
sub
xchg
iret
movsl
add
mov
inc
sub
mov
mov
mov
js
xchg
lods
add
outsl
dec
and
pop
sbb
pop
adc
mov
stos
daa
enter
adc
mov
and
mov
pop
ret
cltd
cs
repz
iret
pop
lret
mov
jp
decl
inc
cltd
mov
add
jmp
ror
sbb
cmp
push
enter
cmc
arpl
mov
out
xor
addb
add
mov
sbb
imul
mov
dec
cmpl
add
outsl
pop
cmp
adc
mov
arpl
add
mov
mov
ret
aam
sbb
add
int3
roll
imul
loope
leave
js
xchg
loopne
mov
sbb
aas
pop
lea
std
dec
lds
jge
pusha
add
mov
add
xchg
daa
ljmp
dec
aas
cli
sub
out
adc
add
lea
ljmp
mov
mov
jae
cmc
scas
mov
mov
add
insl
fwait
addb
xchg
add
add
out
xor
cmp
bound
mov
sbb
mov
lcall
add
add
mov
sbb
js
add
or
stos
lods
ja
icebp
cmp
xchg
pop
movsb
push
xchg
jbe
aam
cs
int
add
imul
push
mov
shll
ljmp
add
jns
mov
mov
divb
fisubs
test
add
ss
push
and
adc
mov
mov
add
cmp
xor
cmp
cmp
mov
fsubs
ret
adc
mov
mov
daa
pop
lret
jnp
das
xchg
clc
enter
pop
scas
jae
push
mov
test
add
or
out
cmp
addb
fs
movsl
mov
cmp
hlt
jg
cmp
mov
repz
pop
iret
aas
out
stos
dec
aad
sbb
push
sahf
adc
mov
addr16
jb
mov
dec
bound
mov
jne
add
sti
adc
add
repnz
fstl
xor
push
fsubl
add
mov
hlt
pop
mov
mov
idiv
pop
xor
fnstcw
ret
movq
dec
call
dec
mov
mov
jno
add
push
add
push
mov
mov
pop
rolb
mov
xchg
fs
repz
fimuls
push
add
shrl
pusha
add
ror
mov
mov
sbb
lock
push
mov
arpl
add
fsubrs
sti
sub
mov
mov
add
inc
add
cmp
dec
add
aam
add
sbb
stos
xlat
push
fisubrs
mov
pop
pusha
add
popf
repnz
in
pop
dec
cs
data16
fdivrl
jg
add
aam
dec
loopne
mov
cmpsb
sarl
adc
in
or
sub
repnz
addb
push
fisubs
add
add
ret
push
add
out
subl
inc
adc
xchg
jo
mov
loop
mov
jnp
add
mov
add
mov
jmp
add
mov
add
cmp
rolb
mov
add
push
clc
xor
mov
add
push
add
outsl
in
cmp
cmpsl
pop
cmp
std
pushf
out
xchg
mov
xchg
push
addb
push
in
icebp
dec
xlat
stos
ljmp
add
movsb
or
or
add
sarl
mov
add
push
fucomi
lret
pop
fiadds
cli
mov
add
mov
sahf
loope
out
es
aaa
cltd
mov
jnp
std
int3
or
add
add
pop
sahf
scas
mov
jb
mov
mov
fbstp
or
mov
add
lret
cmp
push
add
or
out
mov
test
add
rolb
mov
add
mov
sub
and
mov
addb
mov
add
cmp
and
mov
lret
cld
pop
pop
adc
mov
sub
mov
in
pop
mov
pushf
adc
addb
les
bound
mov
cmc
iret
adc
add
dec
xor
mov
add
mov
testb
mov
jbe
jno
add
mov
mov
addb
call
mov
jne
out
push
fadds
add
and
xor
pop
test
cmp
fsts
and
mov
fsubs
inc
add
test
insl
lock
cmc
nop
add
mov
cmp
in
pop
and
and
add
pop
jmp
out
xlat
and
mov
adc
mov
mov
outsb
dec
fisubs
or
push
push
add
int
sbb
push
jbe
push
push
mov
add
ljmp
add
push
add
out
pop
mov
add
repz
outsb
cli
enter
into
xchg
insb
add
mov
sub
cmp
lret
push
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
shrl
cmp
mov
add
mov
aaa
mov
sbb
movsl
lret
movsl
mov
mov
mov
mov
dec
test
repz
imul
add
mov
mov
cli
outsl
addr16
imul
mov
add
push
dec
sbb
mov
les
add
mov
icebp
pusha
add
in
ret
ds
add
dec
int
sub
out
outsl
jle
leave
sub
insl
cmp
add
mov
jl
cwtl
lods
adc
jnp
mov
mov
sysexit
mov
test
lret
xor
js
add
faddl
dec
push
insb
das
mov
jns
adc
in
js
or
push
arpl
data16
aam
icebp
adc
and
mov
les
mov
mov
mov
mov
fcmovb
add
ficoml
pop
pop
shrl
add
or
movsl
jb
mov
jae
dec
fnstenv
sub
outsb
dec
leave
sbb
sbb
mov
add
jg
mov
sbb
mov
mov
lcall
mov
mov
jl
jmp
sti
inc
out
add
xchg
sbbl
pusha
add
add
sub
pop
fimuls
and
aam
add
cmp
les
ret
xchg
cwtl
outsl
lock
xor
mov
jno
sub
imul
cmc
rolb
mov
add
insl
test
pop
jnp
fsubl
fsubrl
adc
dec
cltd
leave
cld
xchg
pusha
add
xor
xor
bound
mov
and
pop
ja
add
mov
mov
mov
push
pop
popf
jno
inc
loopne
mov
sbb
ljmp
push
fcoml
mov
arpl
addb
jle
jl
test
pusha
add
pop
mov
mov
mov
test
and
mov
push
negb
mov
ret
dec
mov
xchg
add
add
mov
lods
jmp
rolb
mov
into
inc
add
add
scas
adc
mov
mov
xchg
pop
imul
sub
mov
mov
xchg
add
fs
mov
aaa
mov
mov
mov
imul
xor
push
inc
add
sbb
or
pop
jns
clc
add
jl
add
jp
rolb
cmp
insb
mov
mov
add
mov
mov
addr16
add
mov
arpl
add
out
dec
aad
pusha
add
cli
js
add
stc
mulb
add
add
mov
in
test
push
rolb
mov
addb
popa
add
setb
mov
add
mulb
pop
dec
xlat
fucomp
mov
das
pop
inc
in
add
mov
mov
adc
mov
dec
test
rolb
mov
mov
mov
test
push
negb
out
and
xorl
fisubrs
shll
loope
xchg
out
data16
jge
mov
movsb
push
add
xlat
mov
jg
popf
aad
in
roll
mov
movsb
cmpsb
test
lods
xchg
xor
lret
xchg
xchg
sub
test
popa
cmpsb
in
pushf
cmp
outsb
inc
add
cmp
add
nop
add
xor
jae
add
cmp
loop
mov
add
cmpsb
and
in
cmp
mov
mov
mov
movsl
lea
ljmp
call
adc
mov
and
mov
xchg
pop
loope
add
in
add
mov
and
in
call
cltd
xchg
and
and
cld
addr16
add
mov
mov
pop
test
cmp
add
hlt
dec
mov
mov
cmp
and
add
loope
mov
xchg
into
or
xchg
out
outsb
mov
fbld
bound
mov
add
fbstp
jbe
cmp
sub
rcrl
cmpsb
mov
mov
add
mov
dec
loope
xor
pop
adc
bound
mov
add
add
jecxz
addr16
add
out
test
xchg
xor
xor
mov
adc
loopne
mov
push
add
jnp
adc
fdiv
scas
mov
mov
rolb
dec
push
push
sbb
add
jnp
add
add
jmp
repz
dec
mov
xchg
pop
pushf
lods
cmp
std
inc
rolb
mov
or
ds
jmp
sub
cmp
ja
add
add
pop
adc
add
add
fnstcw
pop
les
mov
adc
add
ljmp
or
lahf
std
inc
mov
dec
in
imul
sbb
mov
xchg
add
jge
cmc
jbe
xchg
jo
mov
mov
lods
and
dec
mov
pop
divb
mov
lea
add
add
jnp
jl
pop
inc
cmpl
push
add
adc
je
inc
stos
fsub
adc
scas
insb
out
leave
jge
loopne
mov
add
jge,pt
sub
add
les
add
sub
lahf
xchg
cmpsl
pop
or
aam
in
inc
xchg
add
dec
scas
pop
push
or
push
enter
pop
xchg
add
sti
in
add
mov
call
hlt
stos
data16
incb
sbb
push
xor
xchg
push
and
mov
mov
push
mov
mov
add
add
popf
mov
mov
adc
rolb
mov
jb
mov
testl
add
sbb
sbb
stos
loop
mov
xor
mov
test
xor
add
popf
stc
jb
mov
inc
pop
cmp
sub
xchg
call
mov
lahf
popl
int
xchg
mov
mov
or
int3
mov
pop
test
mov
push
mov
mov
mov
pushf
mov
xchg
pop
rorl
and
jno
sahf
sub
in
mov
mov
out
dec
mov
rorl
ret
push
pop
xchg
into
or
imul
int
mov
jle
adc
push
pop
sub
mov
add
in
push
add
mov
push
pop
ds
addb
jp
add
mov
and
test
mov
mov
das
sub
xchg
xlat
scas
push
add
mov
icebp
lods
xchg
divb
mov
xchg
divl
leave
gs
cmp
sub
cwtl
mov
or
mov
jnp
loop
mov
add
stos
jno
cltd
mov
mov
imul
mov
mov
mov
mov
mov
ljmp
mov
leave
insl
xchg
jno
mov
movsl
xchg
lahf
subl
mov
fcom
cwtl
aas
inc
dec
push
imul
add
or
rolb
mov
mov
ret
je
je
mov
push
mov
out
jg
adc
mov
xchg
outsb
ret
gs
lcall
in
sbb
test
mov
mov
bound
mov
add
mov
add
mov
mov
mov
sbb
and
inc
add
mov
add
scas
mov
cmp
ljmp
stos
push
addb
xor
dec
bound
mov
aas
popa
mov
nop
add
fsubrs
sub
mov
outsb
inc
inc
lcall
arpl
mov
push
add
rolb
mov
fwait
push
lea
push
sbb
jecxz
add
or
push
addr16
push
add
leave
in
or
aad
cltd
cmp
and
mov
andl
cmp
jl
or
mov
add
push
add
xor
and
mov
mov
add
dec
mov
outsb
mov
hlt
pop
scas
and
and
loopne
mov
and
push
or
test
xchg
inc
mov
pop
push
xchg
mov
gs
mov
ret
lcall
out
movsl
addl
outsb
xchg
mov
mov
pusha
add
mov
cmp
ret
test
xchg
stos
sub
cwtl
lock
cmp
xor
mov
sbb
jbe
iret
out
push
out
daa
inc
les
mov
push
mov
xchg
fidivs
mov
mov
add
cltd
cmp
out
jnp
pop
xchg
add
mov
mov
arpl
add
dec
aaa
fstps
xchg
add
mov
add
xchg
mov
outsl
sbb
inc
iret
sbb
jle
jmp
or
add
cmp
int3
fistpl
inc
orl
aam
add
and
pop
mov
lret
mov
repnz
sbb
add
popf
cmpsb
fstpl
cmpsb
fucom
ja
cmovns
outsb
popf
jl
jmp
cmpsb
dec
or
mov
pop
xor
mov
repz
mov
mov
dec
out
inc
sbb
imul
imul
mov
jbe
pop
addb
in
ret
inc
sub
dec
mov
int3
addb
inc
idiv
fwait
in
cmp
test
iret
push
scas
repz
cmpsl
rorl
mull
push
or
add
lea
push
add
mov
jl
jne
cwtl
sbb
add
out
out
out
mov
dec
mov
scas
sbb
sbb
inc
les
cwtl
les
or
mov
cmp
out
jp
mov
mov
outsl
jecxz
mov
out
add
enter
xchg
mov
sbb
jmp
add
fadd
mov
popa
cld
pop
outsb
adc
mov
or
add
lock
jb
mov
cmp
mulb
leave
xor
mov
test
sbb
stc
shl
add
fnstsw
add
lea
adc
pop
sbb
mov
push
xchg
inc
loop
mov
push
daa
outsb
insb
cmp
add
cmpsl
sub
loop
mov
insl
jo
mov
push
movsl
or
mov
cli
jb
mov
cmc
add
xchg
add
xchg
ljmp
nop
add
mov
fadds
mov
mov
sti
pop
mov
add
mov
in
cmp
pop
je
mov
lods
jo
mov
mov
add
dec
inc
add
add
add
add
mov
int3
mov
xor
mov
mov
jge
add
pop
push
add
ret
or
imul
imul
cmpsl
jp
mov
test
mov
fwait
test
add
mov
aas
mov
icebp
popa
test
rcrl
ds
iret
sbb
add
mov
add
dec
lahf
cld
sti
xchg
xchg
sub
add
sti
mov
add
pop
xlat
mov
inc
stos
mov
add
hlt
lret
dec
rolb
mov
stos
mov
fisubs
add
mov
sbb
lock
insb
fidivrs
aam
repnz
lcall
add
mov
add
xor
mov
mov
sbb
add
mov
add
add
sub
inc
add
push
sub
jp
pop
rcll
add
inc
jno
add
add
adc
inc
out
ficompl
lods
roll
inc
and
mov
mov
aaa
rolb
mov
std
xchg
xchg
bound
mov
hlt
sbb
jns
stos
pusha
add
xchg
out
xchg
jo
mov
sub
mov
adc
jbe
add
mov
icebp
xchg
jl
add
pop
mov
mov
pop
repz
cld
sbb
mov
add
pop
int
xchg
mov
jae
adc
mov
mov
aas
jg
add
cmp
movsb
jg
xor
xchg
dec
lods
or
clc
sahf
xor
mov
mov
fildl
mov
int
or
pop
push
hlt
gs
mov
sub
lret
ljmp
in
add
mov
mov
sub
jge
add
mov
lahf
or
push
popa
pop
add
mov
add
push
jmp
subps
sbb
add
add
insb
cwtl
call
mov
inc
add
xchg
add
cmp
add
cltd
sbb
addb
push
js
stos
xchg
xor
mov
add
xor
mov
add
add
test
mov
dec
fwait
push
add
xchg
add
push
xchg
lea
jp
or
sbb
mov
add
ljmp
dec
and
sub
sbb
add
mov
mov
sar
cmp
in
inc
mov
lret
fs
add
add
rolb
mov
add
mov
add
or
imul
adc
mov
mov
mov
xor
pop
mov
pop
mov
mov
addb
dec
loope
ret
ss
add
jo
mov
mov
fistpll
pop
xor
mov
cwtl
aam
add
jmp
add
push
sarl
outsb
or
fld
add
mov
mov
movsl
push
loop
mov
std
mov
stc
cltd
mov
and
mov
mov
mov
add
add
leave
cmp
push
mov
jmp
mov
jle
stos
iret
jmp
sub
mov
mov
iret
jg
jns
icebp
aaa
mov
mov
stc
push
and
mov
leave
lods
mov
push
pop
cld
movsl
in
mov
pop
addb
testb
mov
sti
mov
ljmp
stos
mov
add
hlt
jb
mov
sti
icebp
addr16
or
cmp
aas
in
mov
scas
mov
dec
add
add
pop
movsb
mov
decb
rolb
stos
sbb
add
add
cmp
inc
pop
dec
cli
jno
cmpsb
mov
inc
jns
pop
dec
push
add
fsubs
ja
add
leave
pop
cs
or
dec
jle
inc
js
add
mov
sub
lods
dec
outsl
adc
add
pop
or
aas
jmp
adc
addr16
outsb
in
adc
pop
pop
jecxz
lods
in
pop
es
mov
inc
test
add
rolb
mov
andl
scas
add
mov
pusha
add
mov
addr16
and
mov
xchg
cmpsl
or
add
mov
push
sub
and
mov
fistpl
dec
xor
jle
insl
jnp
icebp
push
jno
rolb
mov
add
inc
mov
mov
mov
push
add
cwtl
inc
lds
and
enter
or
push
fisttpl
imul
bound
mov
jp
in
std
sbb
test
repnz
xchg
dec
sbb
or
rolb
pusha
add
xchg
jne
mov
mov
sbb
dec
mov
mov
or
cmp
clc
xor
mov
add
rolb
pop
cmp
xchg
mov
mov
sub
sahf
in
and
aas
stc
outsb
jne
repnz
cmp
xor
xor
incl
stc
cmp
xchg
adc
jne
xlat
mov
mov
add
scas
gs
push
xchg
xor
add
sub
add
sahf
mov
out
pop
aas
shll
add
movsb
cmc
xchg
lods
ja
and
xor
add
adc
add
call
cmp
nop
add
scas
jo
mov
cmp
inc
cmp
add
xor
and
inc
int3
das
ficomps
inc
or
ret
push
push
dec
out
xchg
cmpsl
mov
add
into
dec
and
orl
mov
cwtl
sub
std
stos
pushf
icebp
popf
mov
enter
rorl
pop
aas
addb
out
pop
loopne
mov
sub
mov
mov
cmp
dec
les
jp
mov
xchg
adc
out
subl
add
call
mov
dec
repnz
lcall
xchg
sub
pushf
inc
in
sub
push
jnp
cmp
push
idiv
fbld
aad
stos
addb
jge
xchg
lahf
inc
icebp
imul
mov
out
clc
adc
lahf
stos
cmc
arpl
stos
sbb
mov
mov
data16
mov
inc
add
popa
ljmp
mov
add
push
insl
cltd
aaa
xchg
add
mov
pop
jecxz
jns
icebp
mov
mov
pop
sbb
aad
lds
sub
mov
cmp
sbb
mov
ret
or
xor
mov
dec
ss
ljmp
add
mov
jno
call
popf
test
sbb
sbb
bound
mov
ds
imul
inc
in
dec
sbb
mov
mov
mov
push
aam
mov
or
mov
mov
fildl
and
cld
into
sub
pminub
stos
test
out
mov
mov
imul
mov
mov
or
adc
add
iret
mov
sub
bound
mov
test
ds
xor
mov
arpl
mov
xchg
jbe
int
pop
hlt
add
mov
cmp
test
add
mov
mov
xchg
xchg
mov
jo
mov
xor
mov
mov
fsubrs
mov
rolb
mov
or
add
ss
jne
add
mov
or
cmpsl
out
inc
jb
mov
inc
jecxz
enter
add
mov
addl
xor
mov
xchg
push
jmp
adc
mov
mov
mov
add
add
mov
repz
jne
dec
xchg
cwtl
bound
mov
jecxz
in
dec
clc
adc
mov
mov
adc
mov
das
and
add
jle
add
cwtl
es
sbb
xchg
aaa
call
add
stos
dec
add
mov
jns
add
mov
add
iret
addb
fildl
dec
jns
mov
stos
test
test
sub
cmp
repnz
add
add
mov
or
ret
insb
sub
add
add
les
dec
in
xor
jbe
and
clc
enter
fdivl
adc
mulb
call
mov
xchg
mov
outsl
iret
push
leave
xchg
xor
mov
cmpsb
pop
mov
vphaddubw
add
mov
sarl
int3
icebp
xor
and
mov
mov
lea
add
mov
sahf
push
icebp
inc
pop
addb
test
mull
jl
inc
push
stos
push
jecxz
add
mov
nop
add
sbb
jns
movsb
lods
scas
scas
scas
or
rolb
add
mov
and
ja
mov
imul
mov
pop
divb
add
pop
xchg
cmp
std
lret
je
xchg
daa
sbb
mov
loop
mov
mov
imul
test
popf
insb
push
cmp
add
mov
das
fs
sti
cmpl
push
xor
mov
lods
fwait
gs
aad
jg
dec
add
xor
push
gs
js,pn
sub
fadds
mov
mov
jmp
test
mov
addb
adc
add
insb
mov
shl
mov
and
and
fisttpll
push
jle
adc
ss
sub
mov
lds
xor
scas
mov
jo
mov
adc
mov
lds
jnp
das
lcall
mov
aam
add
add
das
test
add
outsb
ret
push
add
pop
xlat
mov
add
add
mov
add
mov
jae
cmp
push
std
add
push
cli
push
lods
push
jmp
xor
mov
out
rolb
mov
movsl
cmp
cmc
xor
mov
fcomps
jge
stc
das
das
xlat
cltd
pusha
add
out
jnp
addb
inc
add
test
inc
and
mov
sub
adc
mov
jnp
add
lahf
mov
mov
call
fimull
xor
mov
add
mov
add
addb
outsb
movsb
fsts
sbb
int
mov
add
add
out
jle
push
or
clc
lcall
mov
mov
and
mov
pop
in
outsb
adc
mov
test
xorl
xchg
nop
add
xchg
cmp
lock
mov
fadds
fs
mov
fucom
inc
dec
cld
fwait
das
push
rol
hlt
ja
clc
pop
test
push
cmc
add
imul
sub
mov
adc
or
pop
je
mov
add
cmp
movsl
jo
mov
inc
lods
dec
aaa
stos
movsb
xchg
cmp
loopne
mov
add
sar
sbb
add
mov
mov
mov
jmp
add
xchg
jae
pop
xor
mov
dec
cmp
sbb
leave
mov
mov
add
pop
test
orl
lock
pop
es
arpl
mov
or
push
pop
and
mov
add
iret
add
mov
inc
or
or
jno
fchs
add
mov
jo
mov
add
mov
gs
pop
shll
add
inc
push
or
add
std
pop
es
out
adc
jmp
push
or
loopne
mov
mov
test
add
or
mov
dec
jmp
mov
mov
aas
out
add
mov
mov
inc
cwtl
lahf
pop
pushf
inc
in
push
adc
jo
mov
add
add
mov
mov
sub
add
sub
pop
rorl
enter
inc
fwait
pusha
add
inc
add
jno
loopne
mov
add
push
sti
fldl2e
adc
jne
jp
mull
data16
xor
mov
mov
scas
loop
mov
test
add
stos
inc
jo
mov
mov
dec
dec
mov
mov
sti
jg
es
rcl
rolb
mov
and
mov
add
push
test
push
add
insb
sarl
mov
stos
mov
add
xor
cmp
sti
mov
mov
movsl
adc
cmpsb
bound
mov
dec
enter
mov
icebp
jmp
xor
mov
xchg
add
mov
sub
bndstx
mov
lret
xchg
add
add
mov
in
add
mov
stos
icebp
jb
mov
addl
std
sbb
cmp
mov
pop
aaa
mov
rolb
mov
mov
addr16
ja
xchg
add
mov
mov
jg
add
mov
jno
out
lcall
dec
cltd
in
mov
in
add
add
xchg
add
dec
sbb
or
jns
jg
mov
les
out
jnp
ret
adc
mov
popa
and
mov
add
adc
les
das
push
fs
mov
add
mov
jo
mov
inc
pushf
inc
jo
mov
add
test
jae
and
mov
rcll
mov
mov
add
mov
xchg
add
push
mov
mov
int
jno
push
insb
daa
xor
cmp
movsb
push
add
mov
mov
jg
test
xor
xchg
out
js
push
mov
add
push
and
inc
cmp
push
add
lahf
mov
dec
xor
mov
mov
add
movsb
cs
loop
mov
shrl
rcl
addr16
dec
cld
push
mov
movsl
icebp
xchg
test
mov
out
cmpsb
jb
mov
cmp
jecxz
xor
hlt
stos
adc
mov
cmpsl
push
in
push
cmp
sbb
and
or
jns
xor
mov
pop
fildll
add
add
shrl
add
aam
mov
mov
imul
add
mov
daa
std
lods
out
fs
mov
xor
or
xor
mov
jbe
adc
mov
pop
jnp
test
pushf
add
inc
add
add
fwait
sub
enter
rolb
mov
add
mov
in
aad
mov
movsl
push
mov
daa
sti
mov
add
fdivl
xchg
out
mov
jmp
repz
insl
lods
iret
xlat
xor
mov
mov
mov
and
cmp
xchg
pop
out
sahf
out
pop
sbb
jnp
add
xor
out
mov
pop
push
add
jmp
push
xor
xor
leave
mov
xchg
add
add
in
cmc
stos
xor
mov
pushf
mov
mov
mov
inc
imull
xchg
cltd
pop
adc
mov
push
add
les
pop
or
add
cmp
rorl
in
insl
inc
add
jecxz
xor
xchg
add
mov
loop
mov
sub
add
push
jmp
mov
add
insb
lret
jl
xchg
add
in
popa
adc
mov
add
xchg
mov
cmpl
mov
xchg
or
add
bound
mov
in
dec
pop
imul
mov
imul
ret
fs
sub
add
xchg
divb
jecxz
pushf
adc
pop
add
mov
add
out
sti
dec
fsubl
pushf
push
xchg
add
rolb
mov
add
fldl
mov
sub
add
xchg
add
sbb
add
loopne
mov
clc
push
and
lock
lea
mov
mov
and
mov
stc
fwait
push
add
push
inc
add
addb
sbb
jb
mov
insl
dec
push
js
cmpsl
enter
ds
lock
enter
insb
in
add
loop
mov
cmp
ret
jmp
and
mov
jecxz
mov
mov
lods
mov
cvtpi2ps
stc
daa
sbb
fildll
ds
test
add
ret
mov
sti
hlt
xchg
pushf
lret
ds
push
or
mov
in
lea
xor
mov
or
xor
mov
aam
pop
mov
out
adc
in
add
inc
stos
bound
mov
fidivl
mov
add
mov
or
cs
jecxz
add
xor
addb
push
insl
popf
pusha
add
mov
test
add
cld
sbb
push
stc
ja,pn
icebp
imul
leave
jge
add
ja
cmp
mov
mov
xor
mov
sub
cmpsb
addb
aam
daa
dec
ss
mov
add
movl
add
xor
mov
adc
add
mov
add
cmpsl
jbe
in
inc
lret
pop
and
scas
je
add
jns
test
inc
sarl
mov
mov
ds
repnz
add
push
push
add
into
adc
jbe
popf
push
std
shll
add
fstpl
sbb
lods
cmp
mov
xchg
movsb
cld
push
dec
push
jo
mov
ja
add
jle
stc
inc
or
lods
sub
in
ret
mov
aam
std
dec
aas
dec
movsb
jmp
cld
pop
inc
add
scas
aad
icebp
mov
or
loop
mov
dec
sbb
cmp
ljmp
jo
mov
xchg
xor
mov
xor
mov
aaa
adc
movsl
dec
pop
insl
out
push
imul
mov
pop
or
dec
adc
mov
lahf
jns
add
mov
addb
pop
outsb
sub
fcoms
jle
push
add
adc
add
xchg
cmpsb
push
in
insb
push
push
mov
je
shl
add
fimuls
mov
jns
popf
push
ret
rolb
mov
addb
cld
pop
test
dec
sub
outsl
aaa
inc
or
add
mov
mov
mov
int
test
pop
rolb
mov
or
cmp
and
fwait
sbb
enter
mov
popa
mov
outsl
imul
mov
adc
push
addb
rol
dec
dec
adc
mov
xor
insl
cmp
lds
sub
mov
mov
nop
add
cli
scas
dec
inc
add
inc
inc
push
ja
cmc
push
or
mov
mov
nop
add
aad
aaa
inc
mov
push
repnz
insb
sbb
cmp
in
pop
sub
adc
xlat
sarl
mov
lahf
and
add
xchg
mov
xchg
sahf
sub
sbb
clc
mov
mov
xchg
rep
mov
pop
out
inc
inc
add
mov
lods
cmp
jl
add
movsl
scas
add
mov
fbld
mov
mov
add
insl
icebp
lods
test
add
cmpsb
and
mov
sbb
lds
add
jns
es
mov
mov
stc
pop
fs
add
mov
stc
cltd
loopne
mov
les
in
call
jae
dec
mov
add
cli
loop
mov
stc
loope
dec
stos
mov
mov
pop
icebp
mov
loope
fucomi
mov
rcr
add
add
adc
mov
fwait
mov
and
mov
sub
cmp
test
add
bound
mov
add
inc
cmp
scas
gs
xchg
hlt
and
jbe
xlat
mov
jbe
mov
movsl
lods
mov
push
pop
mov
add
bsf
repz
shll
pop
xlat
loopne
mov
pop
jnp
add
or
add
xor
mov
sub
add
mov
jl
xchg
pop
loope
or
in
mov
and
mov
cmp
add
mov
mov
push
into
frstor
cmp
mov
into
aaa
and
leave
inc
int3
or
mov
adc
adc
and
add
stc
jbe
shll
xchg
cmp
xorl
mov
not
ret
mov
add
mov
lds
mov
cmp
add
dec
test
aad
mov
cmpsl
sub
addb
mov
lds
daa
frstor
stos
jnp
movsl
mov
add
stos
inc
sbb
imul
and
inc
rolb
mov
fld
rolb
mov
jl
nop
add
sbb
and
data16
mov
mov
mov
lods
in
movsl
ret
mov
out
mov
gs
iret
mov
daa
aas
xchg
xchg
xorl
mov
jg
push
add
push
push
in
lret
pop
cmc
and
pop
fldl
in
test
in
jbe
add
int3
mov
mov
push
add
movsb
imul
fsubs
mov
out
inc
sub
add
int3
mov
add
mov
add
add
aaa
lahf
lahf
popa
jmp
cmp
movsl
jnp
paddusw
add
add
xchg
push
add
mov
into
aaa
out
aaa
divl
push
sbb
mov
in
jp
test
push
mov
insb
je
pop
hlt
cmc
bound
mov
add
lret
cmpsl
popf
out
cmpsl
jl
lock
es
inc
add
imul
cmp
movsb
lock
cmp
enter
lds
popa
xchg
add
fdivrs
and
lds
les
mov
lahf
in
add
mov
fldenv
add
fdivl
mov
fnstsw
sub
mov
mov
add
add
add
add
cwtl
lahf
add
or
dec
out
imul
lds
cwtl
xor
mov
cmp
jno
jp
lock
push
clc
lds
outsl
xchg
mov
loopne
mov
mov
jo
mov
add
add
outsl
shll
xor
mov
pusha
add
xchg
inc
pop
xchg
mov
popf
cli
icebp
push
mov
out
lret
lea
scas
or
les
loope
test
jge
and
mov
repz
push
sub
mov
movsl
fsubl
add
inc
jb
mov
imul
push
add
fcoml
add
into
xchg
scas
stc
mov
mov
cmp
add
test
test
imul
mov
clc
mov
jle
inc
mov
sbb
inc
add
imul
mov
cli
hlt
test
xchg
push
repnz
and
mov
add
push
in
cmp
out
xchg
imulb
push
add
jo
mov
adc
sbb
fcmovbe
add
inc
xlat
mov
jns
sbb
inc
add
dec
xchg
pop
fdivrs
sub
add
mov
mov
add
int
repnz
add
sub
lods
mov
cmp
add
mov
ret
loop
mov
mov
xchg
cmpsb
adc
mov
aam
add
in
mov
add
sub
push
push
lods
fstps
cmp
cld
loop
mov
add
mov
and
mov
scas
js
push
bt
shr
cmp
ret
scas
in
int3
pop
dec
jle
push
pop
mov
add
out
mov
or
ret
pop
fxch
insl
outsl
aad
dec
rolb
push
mov
insl
cmp
loope
rolb
mov
ror
add
mov
add
adc
jb
mov
lret
mov
dec
mov
cmp
cld
arpl
fmul
out
loope
aas
xchg
jl
xchg
add
js
mov
xor
fcmovbe
sti
rolb
xor
or
mov
sbb
mov
mov
clc
pop
int
in
push
imul
add
mov
mov
dec
push
mov
adc
mov
cmpsl
repz
pushf
call
push
jno
add
cmp
mov
add
jmp
imul
mov
add
int3
mov
or
adc
dec
xor
xchg
add
rolb
mov
mov
popa
pop
sbb
add
mov
mov
add
scas
mov
and
ficoms
push
add
add
mov
sub
test
rolb
mov
lret
aas
neg
jb
mov
lcall
sub
add
fidivs
lea
movsb
daa
push
inc
js
add
mov
mov
int
add
stos
mov
add
add
scas
movsb
push
add
gs
sti
loope
dec
xchg
imulb
or
sub
adc
sbb
mov
test
mov
lret
ljmp
add
mov
sub
call
mov
mov
push
in
pusha
add
movl
imul
mov
add
sub
mov
and
cmp
dec
jae
add
in
cwtl
sti
call
jnp
add
mov
mov
mov
xchg
jg
xor
pushf
sbb
push
movsl
pop
pop
mov
mov
dec
cmc
movsb
daa
std
call
add
inc
scas
and
mov
sub
and
dec
jmp
int3
inc
addr16
cli
cld
mov
add
mov
dec
xor
mov
pop
pop
lock
lea
sbb
xchg
insl
cli
or
xchg
xor
and
mov
mov
xor
xchg
lret
jmp
jl
or
xchg
mov
push
mov
int3
pop
gs
out
xchg
mov
testb
dec
test
test
xchg
out
test
add
mov
mov
icebp
sbb
stos
std
pop
ficoml
cmp
scas
jge
adc
mov
movsb
movsl
push
inc
push
add
mov
cltd
adc
aam
add
scas
pop
loop
mov
pop
mov
sahf
xchg
rolb
mov
inc
add
push
jns
mov
fdivl
add
mov
adc
lods
in
jge
ds
add
jne
out
test
in
addr16
pop
push
mov
test
push
add
add
add
hlt
dec
sub
mov
mov
cmc
mov
sub
add
add
mov
and
mov
daa
lods
add
addb
jmp
sub
add
mov
inc
insl
inc
fst
loope
jp
lea
sub
es
cmp
add
lret
fwait
mov
mov
pop
ja
pop
cmp
xor
sbb
mov
xchg
add
cmp
and
mov
mov
push
adc
and
jmp
insb
jl
sub
jnp
mov
jge
jae
add
add
pop
pusha
add
mov
pop
jecxz
add
mov
add
jmp
icebp
popf
lret
and
cltd
movsl
jge
cmp
test
jbe
jg
add
repnz
sbb
xchg
mov
icebp
mov
bound
mov
adc
ret
hlt
mov
add
xchg
dec
xchg
xlat
lea
aad
inc
cmp
mov
and
push
xchg
and
add
andl
mov
fisubs
jge
imulb
aas
mov
in
add
nop
add
lret
mov
inc
mov
into
inc
stos
int
add
cmp
mov
xchg
sub
adc
mov
lret
lret
ds
cmp
leave
clc
pusha
add
data16
pop
ljmp
mov
pop
pop
ret
inc
fcomi
lods
pop
or
or
or
add
cs
popf
dec
lret
push
out
inc
pop
and
outsl
xchg
clc
addb
cmpsb
jns
fucomi
pop
xchg
push
add
add
test
sub
add
lcall
or
xor
mov
mov
mov
mov
cmp
mov
add
iret
std
lock
add
mov
dec
fiaddl
sbb
fdivl
mov
movsl
xor
xchg
and
mov
mov
jge
lds
cmp
or
add
xchg
ja
ds
jg
add
add
add
jnp
add
or
add
lock
add
mov
addr16
int
add
mov
add
xor
mov
ret
adc
mov
fldt
jl
ss
adc
sbb
jno
xor
mov
push
mov
ljmp
sub
adc
mov
int3
inc
lods
or
mov
inc
and
scas
pop
lcall
movsb
test
add
jo
mov
and
mov
aaa
insb
push
or
in
xchg
jg
add
add
xchg
clc
add
mov
mov
ficomps
mov
or
clc
test
outsb
and
sbb
add
add
into
pop
clc
dec
push
fstpl
repnz
and
mov
jge
addb
incb
inc
fdivrl
out
sti
or
dec
imul
add
mov
pop
push
rolb
fisubl
hlt
sub
add
cmp
popa
xor
mov
ficoms
mov
pop
ficoms
stos
in
cmp
addb
sub
push
push
popf
sub
cltd
cmc
es
xlat
stos
sbb
add
mov
jne
xchg
mov
add
or
incl
mov
call
leave
xchg
imull
cmp
addr16
jne
xchg
out
pop
lcall
cmp
mov
popa
inc
pop
mov
cmp
add
dec
sub
add
mov
adc
icebp
rolb
mov
push
push
loop
mov
popa
paddd
add
push
jb
mov
xor
mov
faddl
add
ds
les
pop
mov
add
call
and
mov
pop
in
sti
int
or
add
cli
bound
mov
pop
ja
insl
movsl
and
pop
adc
mov
jg
add
out
addb
mov
mov
fsub
popf
aas
iretw
fwait
sub
inc
add
mov
inc
mov
mov
push
fsubrl
mov
rorl
sub
add
sub
fisubrs
push
divl
add
pop
in
sbb
aam
add
test
pop
mov
out
and
ljmp
icebp
les
mov
lret
mov
loope
push
ds
and
inc
add
lods
cmc
and
sub
insb
cmpsb
cmp
les
daa
stos
inc
xlat
fldenv
sub
mov
add
mov
xchg
cmp
jmp
mov
mov
add
push
mov
mov
mov
jbe
pop
push
mov
mov
cmp
sub
lea
pusha
add
les
add
faddl
add
movsb
sub
repz
mov
mov
pop
xchg
enter
push
fs
add
add
data16
std
cmpsl
ja
push
add
mov
pop
sub
out
inc
add
mov
add
mov
cltd
jp
add
sub
push
out
outsb
gs
mov
xchg
lahf
mov
mov
les
inc
or
leave
arpl
mov
add
mov
lea
xchg
fistpll
imul
add
xchg
inc
in
jnp
lret
pushf
rolb
mov
daa
rolb
mov
pop
ja
add
out
dec
jns
loope
mov
mov
xchg
inc
lret
mov
mov
push
clc
cmpsb
test
inc
scas
mov
das
rcrl
push
fcmovb
add
inc
call
in
add
test
fucomip
mov
sarl
pop
dec
jmp
cmp
push
cltd
xor
in
addb
push
iret
add
mov
add
enter
jg
lds
flds
and
add
add
mov
fisubrl
and
xchg
sahf
test
nop
add
sbb
addb
inc
outsl
bndstx
pusha
add
je
add
mov
cmpsb
dec
jns
jmp
add
lods
ss
fildl
pop
ljmp
add
arpl
adc
mov
or
lret
imul
test
push
add
inc
xchg
popa
pop
xchg
lds
aaa
add
mov
cmp
mov
fidivrs
mov
push
flds
add
dec
sbb
add
add
sbb
sbb
jo
mov
adc
add
push
push
fisttpl
pop
and
sub
int3
call
daa
push
inc
gs
add
inc
add
mov
test
push
adc
cmp
rolb
mov
pushf
fstpl
mov
bound
mov
cmp
xchg
jae
jb
mov
test
movsl
mov
cltd
fnstcw
dec
xorl
mov
pop
aad
pop
shll
sbb
xor
mov
pop
adc
movsb
mov
pop
icebp
sub
add
rolb
gs
and
push
sub
xchg
inc
ljmp
imul
add
dec
mov
push
add
fnstcw
addr16
mov
sub
add
mov
jg
mov
rorl
sbb
adc
pop
aam
or
cmp
xchg
push
stos
ss
xchg
test
add
or
scas
enter
mov
push
pop
addb
call
push
or
addb
and
mov
add
rolb
mov
sbb
xchg
mov
or
xor
pop
test
push
adc
shll
mov
fiadds
push
cmp
mov
mov
sti
mov
xchg
jbe
jne
fisubl
scas
xor
mov
add
jecxz
inc
rorl
xchg
das
jg
cmp
les
std
aaa
mov
add
in
mov
fsubrl
loop
mov
xlat
cmpsl
movsb
mov
push
jae
flds
add
xchg
mov
leave
insb
mov
xchg
add
mov
int3
and
lea
rorl
sbb
lcall
mov
jl
call
xchg
ljmp
add
arpl
jmp
xchg
cmpsb
lret
cmc
loope
or
add
add
roll
add
xor
adc
push
jle
stc
mov
rolb
mov
shrl
add
mov
call
dec
jb
mov
add
fwait
imull
xor
mov
int3
jo
mov
fs
pop
scas
fisubrs
sahf
outsl
push
rolb
mov
add
ja
enter
mov
mov
add
add
test
jl
add
ss
inc
mov
xor
add
xchg
add
xor
das
movsb
outsl
jne
mov
xlat
xor
mov
lds
mov
ja
rolb
xchg
ja
xchg
push
mov
lret
rcll
add
pop
in
pop
mov
js
add
mov
mov
jge
sub
mov
xchg
aas
pop
fchs
add
in
inc
ja
repnz
ss
fs
or
jge
leave
jg
inc
mov
add
aaa
movl
mov
icebp
pusha
add
popf
sbb
rolb
mov
mov
push
mov
aaa
out
xchg
add
mov
add
or
or
fadds
lahf
aaa
lds
aam
nop
add
mov
lret
xchg
mov
add
test
addb
outsl
fstp
dec
add
mov
test
leave
pop
fldt
mov
adc
add
mov
add
pusha
add
add
aaa
or
xor
clc
sbb
ret
xor
mov
test
sub
mov
jge
cltd
adc
pop
bound
mov
std
jnp
jo
mov
adc
pusha
add
test
rolb
mov
inc
add
mov
mov
sbb
mov
mov
adc
push
or
add
cmp
mov
fnstcw
lret
addb
cmp
inc
add
adc
mov
inc
add
mov
addr16
mov
mov
mov
add
mov
push
add
stc
xchg
sub
lcall
scas
or
imul
iret
mov
mov
es
lods
jle
xchg
mov
or
stos
jmp
sub
lcall
out
add
stos
dec
jge
lea
and
sub
mov
and
mov
jg
sti
rolb
jg
addb
outsb
aas
inc
push
insl
cmp
push
inc
mov
int
rolb
cld
les
jecxz
mov
mov
lea
pop
in
mov
xor
mov
lods
ds
test
int
cltd
and
mov
pop
movsb
cmc
mov
mov
in
psubq
jl
or
and
or
add
jp
add
lock
add
mov
fcompl
ljmp
push
dec
pop
add
push
test
pop
std
lahf
push
mov
mov
push
add
popf
and
sub
add
test
test
add
xchg
add
xor
mov
push
add
popf
es
ja
and
je
add
jb
mov
mov
nop
add
sbb
sbb
and
add
xchg
dec
adc
mov
gs
mov
xor
mov
sbb
popa
pop
test
add
mov
dec
xor
mov
xor
mov
mov
mov
mov
and
push
ret
popf
push
cmp
add
scas
scas
test
mov
add
aad
add
icebp
mov
jp
pop
mov
call
scas
call
push
mov
je
xchg
andl
cmp
pushf
dec
aaa
ftst
jl
test
mov
aad
push
push
add
lahf
jno
sti
rcl
mov
inc
mov
cmp
mov
lret
jno
xor
xchg
xchg
add
sub
sbb
call
add
outsl
adc
jle
jmp
das
std
out
cli
gs
add
gs
in
dec
out
add
xor
or
push
add
mov
push
xor
stos
inc
fisttpll
flds
sahf
cld
stc
loop
mov
mov
rorl
mov
out
adc
hlt
dec
push
sbb
push
dec
lahf
inc
add
push
jae
mov
cmp
mov
jno
pop
outsl
xor
add
and
add
push
xchg
in
jmp
xchg
push
push
add
mov
sub
push
jae
mov
push
int
jo
mov
xchg
add
gs
mov
leave
mov
mov
addb
test
xchg
mov
pop
jae
test
mov
lea
popf
mov
mov
pop
cmp
adc
mov
add
add
mov
testl
jae
mov
add
cmpsl
inc
add
push
add
data16
iret
cmp
add
inc
add
inc
mov
stos
ja
lods
in
lods
jp
inc
push
and
add
out
xor
push
rolb
mov
sarl
jnp
add
mov
orl
mov
scas
mov
ds
adc
mov
adc
xor
mov
inc
mov
addl
test
mov
add
mov
add
add
mov
push
or
xor
mov
sbb
cmpsl
sbb
cli
push
mov
in
insl
int
inc
push
cmpsb
dec
in
adc
add
and
mov
test
mov
nop
add
jne
loop
mov
mov
mov
add
ja
push
add
mov
and
mov
add
add
ljmp
sub
mov
jp
mov
mov
mov
icebp
xlat
out
add
daa
fdivl
fdivl
jmp
addb
and
lahf
sub
rolb
mov
pop
cmp
mov
mov
mov
add
mov
mov
mov
or
clc
jnp
xchg
in
add
add
jmp
add
leave
nop
add
or
rolb
mov
add
addb
sahf
pop
cmp
inc
lds
mov
das
daa
outsl
cmp
add
add
pop
mov
popf
lods
scas
ret
push
repnz
mov
mov
test
jb
mov
push
mov
add
add
add
sbb
mov
mov
sub
pop
mov
or
arpl
lock
outsl
mov
cmc
sub
lea
mov
lahf
mov
mov
add
cld
and
icebp
aaa
fisttpll
add
push
out
mov
mov
aad
lods
sub
add
inc
adc
lcall
jle
or
lret
jp
fisubs
into
pop
into
cmp
cmp
add
es
adc
or
xchg
jbe
sbb
mov
mov
fbstp
push
aam
jecxz
push
mov
fnstsw
mov
lret
cmp
stc
push
add
inc
cmc
mov
jg
push
xchg
push
cmc
mov
sbb
add
xchg
xor
mov
outsb
aaa
stc
fcmove
aaa
sti
int3
mov
mov
push
add
mov
popa
inc
push
xchg
lcall
dec
dec
jle
pop
fistl
add
addb
mov
mov
das
push
ds
mov
mov
stos
pop
push
rcrl
mov
push
push
add
push
add
xor
mov
cmp
scas
or
test
ret
mov
hlt
aam
cmpsb
cli
jae
fcomi
sub
insl
adc
mov
mov
out
stos
push
cmp
mov
mov
enter
push
and
sub
rolb
mov
mov
std
cmpsb
add
ds
add
add
push
negb
jae
loope
inc
sbb
cmc
jmp
mov
mov
add
add
and
mov
imul
add
inc
add
out
mov
pop
add
push
add
enter
bound
mov
and
mov
push
xor
mov
push
push
call
push
call
add
adc
add
aad
clc
mov
inc
ja
inc
jns
scas
add
cmpsl
jge
fistps
test
add
imul
outsl
push
add
rcll
int3
mov
jno
pusha
add
cmp
mov
adc
mov
leave
lock
xchg
add
pop
rolb
mov
int3
pop
test
jecxz
lcall
cmpl
push
pop
cld
aaa
addb
mov
cli
stos
aam
mov
add
jecxz
xor
mov
push
or
mov
arpl
add
xchg
add
xchg
add
mulb
lods
xchg
add
inc
mov
mov
add
adc
mov
into
mov
mov
int
cmp
movsb
imul
bound
mov
add
add
xchg
xchg
mov
cmp
rolb
loopne
mov
add
mov
and
dec
mov
sbb
mov
push
jmp
pop
movsl
add
fbld
mov
add
jne
lahf
scas
enter
in
int
xor
mov
rolb
mov
add
push
fistl
add
cmpl
xor
jecxz
int
cli
cs
faddl
mov
cmp
aad
vmulsd
add
and
mov
clc
inc
add
outsl
mov
xchg
xchg
pop
aaa
repnz
xchg
pop
je
cmpsb
push
fwait
ret
lock
xchg
std
or
add
mov
pop
adc
mov
add
add
mov
dec
mov
rolb
mov
add
mov
and
in
jns
push
jle
pop
dec
push
ss
add
or
mov
fiaddl
xchg
xchg
mov
sbb
test
add
add
pusha
add
push
scas
lods
mov
out
fildll
push
in
mov
mov
pop
jl
adc
mov
addb
lods
sub
pusha
add
bound
mov
dec
push
and
dec
fmuls
sbb
jo
mov
pop
rolb
mov
lret
incl
mov
lahf
cmp
xchg
add
add
sbb
mov
add
mov
jp
mov
mov
stc
or
int3
xchg
call
mov
mov
mov
mov
add
xor
fs
into
adc
add
add
sub
mov
mov
or
stc
lahf
out
pop
sub
add
add
js
pop
adc
mov
stc
ljmp
dec
or
fdivr
push
dec
fsubrs
add
frstor
stos
addb
sahf
das
scas
add
mov
mov
fmuls
mov
jge
and
add
stos
mov
add
dec
mov
ror
movsl
repz
mov
fistpl
xor
mov
mov
fcmovnbe
mov
mov
mov
fiaddl
arpl
add
and
or
mov
arpl
jbe
dec
cmp
add
call
add
rolb
mov
add
xor
add
popf
or
addb
in
pop
xor
mov
ret
faddl
cltd
leave
sbb
add
add
cwtl
jns
popf
add
mov
sbb
out
add
jno
fldenv
sbb
add
pop
dec
inc
mov
cld
xchg
pop
add
shll
add
add
add
pop
out
dec
push
cmpsl
ret
pop
fsubrs
imul
cltd
and
ret
xor
mov
add
mov
mov
add
enter
aad
or
and
mov
sub
movsl
pop
movsl
sti
adc
pop
cs
pop
in
add
dec
lods
or
inc
add
out
sbb
lret
mov
adcl
add
mov
push
lcall
test
mov
adc
mov
sub
and
mov
cmp
mov
cli
xor
imul
mov
add
stos
add
repz
mov
dec
out
and
cmp
mov
inc
ret
int
add
in
sbb
push
out
in
mov
fsubr
out
jp
or
xchg
push
xchg
pop
or
mov
cli
rolb
roll
add
or
add
lea
shll
add
dec
cmp
add
hlt
push
add
mov
push
adc
addl
mov
add
adc
data16
jle
sahf
fidivl
add
xor
add
fchs
add
adc
xchg
pop
daa
jno
daa
jne
imul
fsubl
mov
test
cmc
xchg
add
pop
outsl
rol
dec
mov
mov
loop
mov
test
add
mov
test
dec
pop
call
add
add
pop
push
movsl
or
inc
add
test
xchg
and
sub
dec
add
subl
add
jmp
dec
lock
jne
add
mov
je
daa
nop
add
lret
mov
mov
add
xor
testb
rolb
pop
enter
pop
shll
push
sub
mov
or
mov
out
push
and
mov
xchg
xchg
add
add
push
add
mov
adc
mov
add
add
and
add
jp
mov
add
out
push
adc
add
and
jnp
subl
out
push
loope
lret
mov
shr
outsl
pop
jbe
mov
rcl
push
push
jg
loop
mov
fisubl
addr16
mov
add
scas
data16
xor
bswap
addr16
call
sbb
sbb
rolb
rorl
loope
sub
scas
call
adc
mov
ds
jle
pop
pusha
add
outsb
imulb
xor
in
push
xchg
shr
test
xchg
movsb
cmp
inc
pop
fiadds
cltd
jecxz
outsl
dec
aam
ja
mov
in
repz
pop
lret
or
sbb
add
xchg
int3
cmp
dec
das
daa
fcoml
or
out
xlat
push
add
bound
mov
add
mov
roll
pop
jo
mov
ljmp
push
hlt
push
ja
test
add
pop
pop
fisttpll
fldenv
xor
sbb
add
mov
enter
mov
pop
cld
xor
mov
xor
filds
mov
add
xchg
cmp
push
sub
lret
mov
add
push
jp
imul
push
rolb
cmpsl
dec
repz
cmc
pop
imul
add
es
in
rcr
fs
je
xor
int3
mulb
cltd
push
mov
insl
rolb
mov
sbb
jmp
in
inc
xchg
ljmp
add
add
mov
lret
test
das
negb
cmp
pop
cs
dec
xor
sbb
or
add
in
xchg
add
out
das
fisubrs
insl
inc
cmpsb
dec
mov
mov
fwait
call
push
or
push
movsl
mov
inc
or
mov
mov
add
rcrl
lcall
xor
jp
out
and
mov
sti
inc
adc
xchg
or
add
add
in
mov
rolb
mov
sbb
test
push
dec
icebp
jl
add
mov
sub
add
mov
jb
mov
xor
mov
add
add
jno
inc
push
mov
or
sbb
pop
insb
xor
js
add
popa
clc
cmp
clc
out
mov
imul
stos
or
xchg
add
or
nop
add
cltd
ret
mov
cld
push
scas
and
inc
repz
cld
xor
outsb
jecxz
shll
dec
pop
or
add
push
lock
jmp
add
movsb
push
pop
sbb
add
es
jo
mov
out
push
pop
sub
outsb
enter
popf
addr16
mov
xchg
dec
mov
add
mov
push
push
inc
add
mov
aas
out
lods
ficompl
rolb
mov
jle
add
pop
bound
mov
adc
faddl
repz
aad
adc
rolb
mov
aad
mov
in
cmc
pushf
push
cltd
hlt
popa
roll
mov
or
hlt
mov
mov
hlt
mov
test
sbb
mov
jle
lods
xor
mov
mov
repz
mov
mov
jmp
jno
dec
adc
rcll
pop
imul
aam
add
dec
scas
jecxz
cwtl
adc
mov
call
adc
mov
mov
add
insl
push
aaa
dec
mov
mov
xchg
xchg
roll
ret
push
add
mov
rolb
mov
add
mov
push
insl
cmp
cmp
mov
or
xor
mov
inc
stos
pop
xor
sti
xchg
mov
aaa
add
mov
sti
jg
out
dec
sbb
je
jns
mov
scas
ss
push
lods
sbb
fisubl
out
push
icebp
gs
add
xor
push
std
inc
cmp
shll
mov
mov
adc
stos
jae
push
ss
xor
mov
dec
lock
stc
call
pop
les
add
mov
pop
lock
mov
lods
lahf
fidivrs
mov
add
add
and
rolb
mov
data16
cmp
inc
push
add
ret
insl
jo
mov
mov
mov
insl
xor
xchg
addb
lock
filds
cmpsb
xchg
jo
mov
mov
cmp
data16
adc
add
push
inc
add
mov
sahf
pop
or
and
gs
sbb
xor
mov
ficoml
add
call
mov
add
jge
add
add
add
test
sbb
sbb
imul
mov
jnp
pop
cmp
pop
sbb
lcall
cmp
bound
mov
roll
cld
pop
mov
mov
push
xchg
cmp
and
xchg
mov
bound
mov
add
insl
je
cmpsl
stos
xchg
add
push
mov
jge
add
mov
and
push
nop
add
inc
add
cmpsl
and
add
sub
fsts
bound
mov
pop
mov
xlat
pop
sbb
push
movsb
mov
and
fnstenv
xchg
adc
mov
push
xlat
adc
add
mov
into
loopne
mov
and
jne
add
mov
add
and
inc
add
mov
mov
sub
mov
mov
filds
xchg
les
dec
xchg
sbb
mov
lahf
es
mov
jecxz
negl
push
jecxz
rorl
add
arpl
outsl
xchg
call
mov
add
mov
call
imul
jae
sub
add
mov
sub
enter
add
pop
jns
add
mov
add
jle
sahf
mov
dec
in
inc
cwtl
adc
mov
jae
mov
pop
mov
mov
dec
dec
test
add
mov
cmp
xchg
popa
test
or
mov
lds
or
into
push
adc
mov
stc
or
xor
mov
mov
cmc
adc
mov
sub
mov
push
push
js
clc
mov
dec
push
cmp
add
or
fisubrs
roll
test
add
xchg
rolb
mov
add
mov
push
in
add
popf
mov
sahf
popa
clc
loopne
mov
push
ss
mov
aaa
adc
and
cli
mov
addr16
jl
or
movsb
and
mov
ss
leave
inc
push
add
inc
mov
sahf
ja
add
andl
push
es
addr16
fwait
inc
in
scas
int
and
mov
or
sub
add
in
dec
jmp
scas
imul
push
mov
rcrl
out
inc
inc
ret
andl
lea
mov
add
jns
add
lea
mov
cmp
cmpsl
fistpll
test
jns
jbe
sbb
mov
add
jb
mov
and
out
add
add
add
lods
lret
ljmp
lods
mov
mov
movsb
leave
or
test
int3
push
cli
cmp
pop
or
lea
inc
sahf
sbb
mov
add
adc
mov
pop
mov
mov
ljmp
push
add
repnz
mulb
int3
stos
fdivp
add
add
es
add
jnp
add
push
mov
aad
sub
mov
mov
mov
sahf
std
int3
jbe
inc
call
add
sbb
add
mov
add
push
jecxz
and
mov
add
fcomps
mov
jae
sub
addb
mov
mov
sub
bound
mov
mov
add
add
jmp
add
lcall
movsl
rolb
mov
bound
mov
mov
add
pop
mov
mov
ja
jle
addr16
out
dec
cwtl
pop
pop
dec
movsl
add
add
ljmp
add
fldln2
pusha
add
lds
mov
fadds
add
and
mov
push
mov
loope
movsb
cmp
mov
add
and
mov
mov
adc
mov
enter
mov
nop
add
popa
loopne
mov
lahf
xchg
fldcw
das
cmp
js
mov
inc
xor
in
in
stc
fisubrl
popa
addb
jmp
mov
popa
movsl
fidivs
mov
mov
mov
fmull
add
mov
add
adc
xor
sahf
clc
outsl
and
pop
push
dec
push
jns
lahf
push
fsubs
mov
ret
stos
ja
jnp
mov
mov
iret
in
out
mov
add
test
cmp
sbb
fs
add
add
lret
rolb
mov
add
cs
add
rcll
into
stc
xor
mov
mov
jo
mov
rolb
mov
pop
push
jns
int
add
push
xchg
add
add
and
mov
mov
data16
int3
or
add
pop
or
enter
mov
pop
mov
in
sub
adc
mov
add
add
add
add
dec
jo
mov
rcll
mov
add
push
daa
sub
add
mov
mov
xchg
add
mov
int3
dec
icebp
fcom
jge
imul
popa
test
dec
fcoms
into
or
lret
lods
imul
pusha
add
xor
and
mov
addb
das
outsb
dec
xchg
repz
mov
mov
add
dec
jae
add
mov
add
mov
out
sbb
add
add
imul
test
add
push
rolb
mov
jle
cli
movups
mov
in
mov
sbb
add
fldcw
mov
mov
mov
inc
cmpsl
mov
and
mov
mov
and
xor
mov
sbb
xor
add
ljmp
sbb
out
test
lock
mov
cmc
mov
je
jmp
push
mov
rcl
mov
imul
repz
mov
loopne
mov
inc
mov
add
mov
mov
dec
cmp
sub
mov
lea
mov
mov
cld
mov
add
ficoms
push
subl
fbstp
add
jmp
lea
add
ja
cmovp
pusha
add
add
xlat
jl
add
push
push
inc
popa
lds
mov
xor
add
imul
mov
add
xchg
jmp
sbb
jp
das
je
out
pop
mov
sbb
jns
mov
sub
mov
pop
loopne
mov
or
fisttpl
mov
add
mov
sbb
or
add
lret
cmp
push
mov
or
xchg
popa
inc
xchg
aam
fstpt
and
in
sbb
mov
mov
cmp
addb
flds
insb
dec
clc
cmp
lret
mov
push
movsb
nop
add
sbb
call
add
jecxz
push
aaa
pushf
std
cwtl
ja
mov
pop
or
ljmp
add
add
add
jg
ret
mov
scas
push
sbb
pop
add
vpunpckhdq
jmp
pop
int
addb
int
add
xor
mov
rcrl
jo
mov
add
in
cwtl
push
iret
lahf
dec
cmp
mov
sarl
push
add
cmp
ja
sub
adc
add
sahf
or
ljmp
sarl
or
dec
pop
sub
push
imul
fmuls
add
out
mov
add
pushf
movsb
and
arpl
pusha
add
mov
inc
repz
lock
mov
bound
mov
add
leave
mov
repz
add
xor
mov
mov
pop
int
iret
or
add
push
fldl
add
lods
dec
jp
sbb
fstl
mov
sbb
add
push
movsl
orl
push
adc
mov
add
add
mov
or
inc
add
loope
inc
lcall
cmp
jnp
cld
insl
push
cmp
repnz
lock
in
sbb
dec
scas
jmp
int3
addb
enter
aam
push
jecxz
cmp
cmpl
mov
and
mov
pop
addr16
pop
push
dec
cltd
sub
sbb
mov
jne
xchg
sub
scas
addb
adc
mov
jbe
add
movsl
xor
mov
pop
iret
cmpl
stos
iret
clc
roll
add
jmp
add
fists
out
xor
add
dec
jns
jnp
mov
dec
push
and
mov
testb
pop
sub
mov
mov
add
pop
into
push
add
xchg
add
fistpll
add
add
mov
inc
jmp
jno
sbb
mov
mov
fwait
icebp
mov
add
or
repnz
ret
mov
mov
mov
mov
pop
sahf
and
mov
and
pop
fisubs
ret
in
mov
sahf
inc
mov
add
not
inc
pop
dec
je
mov
mov
add
cmc
mov
fmuls
aas
mov
add
mov
push
xlat
dec
adc
cs
add
loopne
mov
pop
push
sbb
out
sub
cwtl
mov
xchg
fucomp
out
xchg
adc
add
mov
je
mov
pop
inc
jg
jle
sub
push
fstpl
push
cmp
stos
test
stc
mov
mov
dec
or
mov
dec
xor
add
ret
andl
mov
and
mov
mov
xchg
jl
dec
in
mov
fisttpl
xor
mov
xchg
mov
mulb
xor
je
push
daa
mov
mov
jecxz
push
add
ds
arpl
loope
push
cmp
xor
mov
sbbl
mov
lods
push
mov
mov
mov
fnstcw
mov
mov
add
pop
adc
xor
push
mov
add
mov
xor
or
jne
push
ret
mov
lods
roll
fcoml
mov
dec
icebp
icebp
ret
bound
mov
mov
add
and
sbb
xchg
stos
add
add
int3
cs
dec
pop
pop
outsb
lods
popa
sub
push
mov
out
dec
and
mov
add
dec
rolb
mov
imul
sbb
xchg
cmp
das
sub
gs
out
mov
ja
mov
add
sbb
jnp
fcmovb
add
add
or
mov
add
pop
call
and
add
in
mov
hlt
pusha
add
add
dec
and
popa
lods
xchg
add
mov
in
imul
add
or
add
mov
lods
xchg
jle
enter
mov
repz
add
sub
pop
xor
rolb
mov
add
addb
into
outsl
das
inc
lret
mov
mov
mov
xor
add
pop
outsb
rolb
xor
sbb
in
aam
and
mov
adc
fcomps
mov
icebp
xor
arpl
jno
mov
icebp
clc
cltd
int3
cmc
xor
mov
sub
mov
and
xor
or
rolb
mov
xor
or
sub
add
jp
xchg
add
add
and
mov
loope
push
cmc
xchg
ficompl
pusha
add
scas
test
xorl
mov
mov
mov
inc
add
jp
push
test
imul
test
push
sahf
fcmovbe
xchg
lcall
mov
add
push
jns
jmp
dec
inc
add
mov
add
fnstenv
pop
pop
addb
inc
add
mov
push
int
fs
in
call
lret
or
mov
jecxz
adc
mov
popa
jo
mov
aad
add
add
adc
icebp
aad
inc
xchg
inc
push
mov
xchg
in
dec
loop
mov
jns
and
add
inc
rolb
mov
loope
addb
jne
xchg
cmp
dec
out
mov
inc
xchg
in
pop
pop
or
add
mov
mov
leave
out
daa
inc
sbb
mov
sbb
xlat
int
push
adc
mov
push
add
aad
push
cmpsl
xchg
cmc
cmp
ljmp
lahf
mov
mov
or
add
jno
daa
or
or
pop
sub
add
push
test
mov
sbb
and
bound
mov
sub
fs
and
mov
test
adc
mov
sub
sbb
add
mov
jp
mov
rolb
mov
jne
dec
pop
xor
mov
pop
pop
imul
xchg
add
and
add
add
mov
jae
movsb
push
or
add
mov
ja
icebp
outsl
mov
add
or
scas
hlt
in
pushf
add
mov
cmp
push
sub
mov
xchg
outsl
mov
mov
add
inc
dec
sub
pop
push
mulb
negb
add
mov
xchg
hlt
pop
dec
inc
add
add
inc
imul
sbbl
outsb
stos
cs
out
add
inc
push
add
mov
notl
mov
add
test
sub
aas
xchg
cmp
pop
mov
pushf
mov
clc
repnz
jae
aaa
xor
pop
daa
dec
cmp
fwait
cld
nop
jmp
add
and
aaa
mov
testl
nop
jae
fldl
mov
add
push
fisubrl
clc
repnz
jae
fsubs
inc
xchg
cltd
add
fadds
nop
jmp
bound
xor
sub
repnz
jae
stos
out
xlat
add
and
mov
clc
repnz
jae
add
ljmp
xlat
add
add
mov
push
push
clc
repnz
jae
add
and
inc
xchg
test
sti
fwait
cld
nop
jmp
mov
das
add
fwait
add
mov
repnz
jae
add
fidivs
add
cmp
mov
add
add
add
inc
add
in
sbb
mov
xchg
ret
ja
add
jo
fiadds
add
add
loop
fwait
cld
nop
jmp
xorl
out
add
add
insb
add
clc
repnz
jae
add
add
stc
add
cld
nop
jmp
fldl
inc
add
out
add
add
clc
repnz
jae
int3
add
jae
cmp
nop
jae
in
add
add
je
clc
repnz
jae
movsb
out
pop
dec
add
clc
repnz
jae
gs
add
add
enter
cld
nop
jmp
add
into
add
add
inc
jecxz
add
mov
mov
mov
mov
jne
push
mov
add
add
add
std
sub
jl
dec
or
repnz
jae
add
add
fiadds
inc
scas
mov
push
mov
xchg
ret
add
add
aaa
mov
mov
clc
repnz
jae
fiadds
lret
clc
repnz
jae
mov
add
jp
movsb
clc
repnz
jae
stc
add
xchg
movnti
sub
add
jo
add
fwait
stos
add
ljmp
repnz
jae
int3
add
dec
dec
pusha
clc
repnz
jae
jmp
or
outsb
push
mov
arpl
mov
jecxz
mov
pop
add
add
sbb
sahf
mov
jmp
incl
lret
les
xor
mov
push
clc
repnz
jae
add
inc
aaa
inc
add
push
mov
xchg
ret
add
clc
repnz
jae
add
ja
xor
add
je
fwait
cld
nop
jmp
call
add
add
rolb
mov
sar
nop
jae
out
add
pop
fimuls
add
mov
xchg
ret
call
mov
cli
pusha
clc
repnz
jae
xor
lret
add
push
add
cmp
add
repnz
jae
add
pop
aam
jmp
cmp
add
or
add
repnz
jae
jo
add
and
or
es
push
mov
add
add
xchg
add
out
add
movl
mov
mov
xchg
ret
xlat
add
rolb
pop
push
clc
repnz
jae
mov
xchg
add
push
mov
xchg
ret
ja
pop
add
add
fwait
cld
nop
jmp
mov
add
ds
push
mov
xchg
ret
add
lret
add
fwait
cld
nop
jmp
add
bound
xor
dec
mov
clc
repnz
jae
add
jo
mov
clc
repnz
jae
fnsave
insl
je
clc
repnz
jae
jmp
add
push
add
clc
repnz
jae
into
lret
pop
mov
clc
repnz
jae
xor
mov
add
add
repnz
jae
inc
and
fidivrs
repnz
jae
add
les
shrl
repnz
jae
or
mov
in
add
add
add
add
test
adc
add
repnz
jae
xor
int3
dec
jne
fwait
cld
nop
jmp
pop
fnsave
add
push
mov
xchg
ret
add
add
imul
xchg
ret
add
fwait
mov
nop
clc
repnz
jae
mov
add
add
cld
nop
jmp
add
add
add
fwait
cld
nop
jmp
lret
add
add
clc
repnz
jae
add
add
or
jecxz
data16
mov
mov
clc
repnz
jae
call
add
dec
mov
fwait
cld
nop
jmp
jo
push
add
and
cmp
fwait
cld
nop
jmp
pop
add
das
jmp
jmp
add
add
add
mov
mov
repnz
jae
mov
add
bound
mov
enter
cmp
clc
repnz
jae
faddp
add
sbb
in
add
sbb
adc
push
and
mov
mov
mov
clc
repnz
jae
add
add
add
add
fwait
cld
nop
jmp
int3
mov
add
add
inc
lock
add
add
repnz
jae
or
add
add
clc
repnz
jae
call
fmul
xor
add
scas
in
add
add
in
add
add
adc
repnz
jae
inc
jae
dec
add
arpl
adcl
add
add
add
mov
in
pusha
fwait
cld
nop
jmp
xor
add
xchg
addl
xlat
xor
sbb
add
repnz
jae
xor
lret
clc
repnz
jae
and
add
add
mov
repnz
jae
dec
movsb
and
mov
add
sub
repnz
jae
add
fs
add
fwait
cld
nop
jmp
into
mov
add
fwait
cld
nop
jmp
dec
xchg
les
fs
add
add
add
repnz
jae
cmp
clc
repnz
jae
add
add
add
mov
cld
nop
jmp
xor
add
and
out
mov
jmp
add
and
add
add
stc
gs
and
nop
jmp
add
add
dec
enter
add
clc
repnz
jae
add
add
and
repnz
jae
pop
add
add
cmp
aas
adc
add
aaa
add
mov
fwait
cld
nop
jmp
add
pop
add
add
or
popa
clc
repnz
jae
add
add
add
fwait
cld
nop
jmp
add
jmp
repnz
jae
add
or
add
xchg
sbb
mov
xchg
ret
fdivs
pop
mov
stos
cmp
pop
add
clc
repnz
jae
add
pushf
xor
clc
repnz
jae
add
add
jae
fsubrp
xchg
dec
push
xlat
and
or
pushf
out
add
add
add
nop
jae
add
add
add
mov
mov
xchg
ret
mov
add
add
xchg
mov
ret
clc
repnz
jae
add
add
add
lret
mov
xchg
ret
fsubrl
xchg
add
ficoms
push
imul
add
xor
int3
add
or
clc
repnz
jae
pop
mov
lret
fs
push
test
mull
and
push
mov
xchg
ret
add
add
loop
mov
mov
clc
repnz
jae
fnsave
movsb
xchg
adc
xor
cld
nop
jmp
inc
inc
fiadds
add
mov
push
mov
xchg
ret
add
call
mov
clc
repnz
jae
push
aaa
add
jmp
mov
nop
add
and
mov
rcrb
repnz
jae
cltd
xchg
andl
imul
adc
repnz
jae
add
in
xor
repnz
jae
add
bound
pusha
clc
repnz
jae
fdivs
add
and
les
add
clc
repnz
jae
lret
pop
cmpw
fwait
cld
nop
jmp
fstp
ja
add
jne
clc
repnz
jae
add
cmp
add
jne
cltd
and
mov
cmpsb
add
add
loope
add
add
clc
repnz
jae
add
add
jmp
fwait
cld
nop
jmp
add
or
add
fiadds
mov
in
jne
fwait
cld
nop
jmp
pop
add
push
ficoms
nop
jae
cltd
add
add
push
push
add
rclb
inc
add
add
cs
pop
dec
add
push
mov
xchg
ret
add
mov
mov
push
clc
repnz
jae
add
add
xlat
xor
jmp
mov
add
lret
inc
add
cld
nop
jmp
add
fwait
add
stos
add
ljmp
fldl
add
mov
and
mov
mov
mov
nop
jae
add
add
das
fidivs
sar
repnz
jae
jmp
jae
stc
dec
cmp
cmpb
lcall
or
mov
cltd
cmpl
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
add
les
clc
repnz
jae
jmp
add
shl
fwait
cld
nop
jmp
dec
add
stc
add
add
arpl
add
clc
repnz
jae
xor
add
outsl
pop
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
add
add
add
add
clc
repnz
jae
add
add
add
lcall
sbb
add
cmp
add
pop
push
push
mov
xchg
ret
addl
dec
movsb
xor
aaa
adc
adc
repnz
jae
fiadds
lret
add
inc
sbb
nop
jmp
fldl
add
add
sub
clc
repnz
jae
aaa
mov
push
rep
clc
repnz
jae
jmp
ja
add
repnz
jae
cltd
stc
dec
add
cltd
add
mov
mov
cmp
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
and
or
loope
pop
clc
repnz
jae
call
add
sbb
mov
xchg
ret
aaa
add
add
mov
add
add
stc
pop
aaa
and
pop
xlat
or
ja
lea
repz
add
add
add
ret
push
data16
xor
add
clc
repnz
jae
fiadds
cmp
jne
clc
repnz
jae
add
or
mov
push
mov
xchg
ret
inc
xor
xchg
add
add
inc
add
add
add
xchg
lock
enter
fwait
cld
nop
jmp
xchg
or
push
mov
xchg
ret
add
fwait
dec
add
xor
std
add
fwait
cld
nop
jmp
add
lret
dec
aaa
add
add
clc
repnz
jae
add
cmp
add
cltd
and
clc
repnz
jae
xchg
add
fmull
nop
jae
fdivl
add
mov
ficoms
add
mov
repnz
jae
mov
mov
push
push
mov
xchg
ret
add
add
add
add
add
clc
repnz
jae
add
fs
add
lret
push
clc
repnz
jae
add
add
add
jmp
clc
repnz
jae
add
stos
and
jl
repz
mov
xchg
ret
dec
and
add
add
sub
nop
jae
pop
das
add
insl
mov
push
mov
xchg
ret
add
add
sbb
mov
xchg
ret
fsubs
rolb
mov
push
push
mov
xchg
ret
or
add
ja
push
clc
repnz
jae
add
add
add
mov
xchg
ret
das
and
add
xchg
ja
test
fwait
cld
nop
jmp
add
mov
cmp
cld
nop
jmp
jo
dec
inc
cltd
add
pop
add
mov
clc
repnz
jae
add
fdivrp
add
nop
jae
xlat
add
mov
stos
jne
clc
repnz
jae
add
adc
mov
pushl
clc
repnz
jae
add
into
dec
cmp
lock
flds
dec
cmp
repnz
jae
fnsave
cltd
add
mov
mov
clc
repnz
jae
mov
add
repnz
jae
mov
add
add
or
add
add
clc
repnz
jae
add
mov
nop
jae
add
jae
add
add
call
clc
repnz
jae
push
add
add
repnz
jae
add
add
stc
in
mov
aas
clc
repnz
jae
add
in
add
orl
test
enter
jmp
inc
pop
xor
or
fwait
cld
nop
jmp
jo
pop
add
fldl
add
jbe
push
mov
xchg
ret
push
add
add
jne
push
mov
xchg
ret
sbbl
and
mov
xchg
ret
faddl
add
movsb
addb
fldl
inc
cmp
mov
xchg
ret
add
ret
push
mov
xchg
ret
inc
into
stc
addl
add
repnz
jae
add
call
jae
mov
fiadds
cmp
rolb
repnz
jae
addl
xor
add
movsb
fwait
cld
nop
jmp
fisttpll
and
cld
nop
jmp
pushf
add
pop
mov
clc
repnz
jae
aaa
xor
add
mov
fwait
cld
nop
jmp
jmp
pop
ja
add
add
clc
repnz
jae
add
jmp
jecxz
movsb
js
rcrb
out
fildl
xchg
ret
call
push
mov
push
mov
xchg
ret
dec
pop
fiadds
fcomps
clc
repnz
jae
pop
pop
add
add
add
iret
mov
clc
repnz
jae
bound
and
jae
into
movsb
mov
add
repnz
jae
aaa
add
xchg
add
and
clc
repnz
jae
add
addl
cmp
nop
jae
add
add
lret
jge
add
clc
repnz
jae
les
call
add
clc
repnz
jae
inc
or
add
repnz
jae
dec
in
in
xlat
add
and
sbb
mov
xchg
ret
add
stos
add
add
mov
dec
ret
clc
repnz
jae
add
add
mov
push
clc
repnz
jae
fcompl
aaa
xchg
mov
ret
clc
repnz
jae
sbbl
add
clc
repnz
jae
mov
pop
add
aad
push
clc
repnz
jae
add
out
or
lods
rep
fwait
cld
nop
jmp
add
fsubr
sbbl
ret
mov
nop
jae
add
add
inc
call
repnz
jae
add
add
jmp
mov
into
pop
add
add
add
mov
int3
add
pop
add
xor
mov
mov
clc
repnz
jae
in
add
add
xchg
out
add
push
mov
xchg
ret
add
add
movsb
inc
loopne
mov
add
movzwl
clc
repnz
jae
xchg
add
cmpsb
jbe
dec
add
fwait
cld
nop
jmp
xor
fstp
ret
das
subl
push
mov
xchg
ret
dec
pop
add
in
mov
fwait
cld
nop
jmp
movsb
add
and
clc
repnz
jae
add
aas
push
clc
repnz
jae
or
les
or
nop
jae
addl
add
add
or
nop
jae
das
add
mov
and
repnz
jae
xor
add
push
mov
xchg
ret
add
push
clc
repnz
jae
jmp
add
push
hlt
push
outsb
xor
push
mov
xchg
ret
add
add
popa
out
push
push
mov
xchg
ret
aaa
add
add
pop
aaa
mov
cmp
push
add
add
add
add
add
clc
repnz
jae
mov
int3
add
popa
add
mov
xchg
ret
mov
add
mov
clc
repnz
jae
aaa
add
mov
clc
repnz
jae
add
add
sub
push
mov
xchg
ret
add
xlat
aaa
xor
nop
jae
add
push
dec
add
clc
dec
inc
fwait
cld
nop
jmp
das
add
jo
mov
mov
clc
repnz
jae
add
or
add
rolb
mov
idiv
clc
repnz
jae
add
add
jmp
addl
add
test
cld
nop
jmp
add
xlat
out
shr
clc
repnz
jae
fiadds
int3
add
call
movb
mov
xchg
ret
add
gs
aaa
dec
mov
push
mov
xchg
ret
int3
jo
call
aam
push
mov
push
add
mov
add
add
in
xor
add
add
mov
and
mov
dec
clc
repnz
jae
add
fadds
xchg
add
pop
mov
sub
repnz
jae
pop
xchg
cltd
xor
in
sbb
xchg
adc
jbe
add
jecxz
mov
push
clc
repnz
jae
out
fdivrs
add
pushf
fdivl
mov
add
clc
repnz
jae
dec
add
add
movsb
push
sub
inc
testl
add
mov
pop
push
mov
xchg
ret
pop
fs
add
add
mov
xor
fwait
cld
nop
jmp
jmp
add
add
add
repnz
jae
and
add
andl
out
into
fs
orl
inc
adc
repnz
jae
pop
das
dec
add
add
push
mov
xchg
ret
xchg
and
add
add
add
std
incl
sbbl
xchg
add
add
push
mov
xchg
ret
add
dec
add
or
test
repnz
jae
stc
addl
jbe
add
clc
repnz
jae
add
xor
mov
loope
mov
fwait
cld
nop
jmp
add
pop
cltd
es
jmp
add
cmp
stos
and
clc
repnz
jae
movsb
cmp
add
mov
clc
repnz
jae
add
cltd
add
xor
push
dec
mov
clc
repnz
jae
add
shll
add
insb
insb
clc
repnz
jae
jmp
push
clc
repnz
jae
pushf
mov
movsb
inc
push
xchg
sub
out
add
fsubrp
ja
ja
jge
int
pop
jae
repnz
jae
add
gs
imul
clc
repnz
jae
xor
stc
les
call
push
mov
xchg
ret
movsb
into
add
je
notl
push
push
mov
xchg
ret
fisubs
xlat
into
in
mov
fwait
cld
nop
jmp
fcom
pop
call
popl
nop
jae
add
das
pop
xor
dec
mov
clc
repnz
jae
xchg
add
frstor
pop
pop
mov
clc
repnz
jae
and
movsb
add
add
mov
clc
repnz
jae
add
mov
push
push
mov
xchg
ret
call
add
popa
clc
repnz
jae
das
add
or
add
pushl
jmp
pushl
add
add
add
in
call
clc
repnz
jae
fiadds
add
aam
mov
xor
add
clc
repnz
jae
xchg
fnsave
movzwl
clc
repnz
jae
fstp
add
pop
pop
pop
clc
repnz
jae
add
aaa
add
add
sahf
mov
clc
repnz
jae
xchg
add
pop
add
jae
popl
jge
clc
repnz
jae
mov
out
sbb
lret
nop
jmp
fiadds
add
add
xchg
xlat
cwtl
pop
clc
repnz
jae
pop
add
dec
loopne
mov
add
repnz
jae
dec
cltd
add
inc
add
push
mov
xchg
ret
les
cmp
aaa
ret
add
add
clc
repnz
jae
and
add
add
rclb
aaa
stc
inc
add
add
add
out
movzwl
fwait
cld
nop
jmp
stos
add
scas
inc
fwait
cld
nop
jmp
add
aaa
add
mov
clc
repnz
jae
fs
jo
cltd
mov
clc
repnz
jae
add
add
jnp
clc
repnz
jae
cltd
add
add
pop
fwait
cld
nop
jmp
add
inc
in
add
add
add
mov
xchg
ret
in
bound
mov
push
push
clc
repnz
jae
and
bound
add
fs
icebp
inc
stc
push
clc
repnz
jae
xchg
add
add
lret
stos
push
push
mov
xchg
ret
add
add
xor
mov
lcall
cmc
incl
pop
stos
xor
add
repnz
jae
ja
inc
cs
nop
jmp
add
stc
into
add
pushf
in
addb
inc
aas
popa
fwait
cld
nop
jmp
call
fsubrl
cs
mov
push
mov
xchg
ret
add
jmp
add
movsb
lock
add
addl
pop
fwait
jle
clc
repnz
jae
mov
add
add
pop
add
mov
mov
incl
add
movsb
add
lret
and
add
xor
clc
repnz
jae
add
dec
add
add
repnz
jae
fs
add
and
repnz
jae
aaa
mov
add
add
add
clc
repnz
jae
add
add
nop
jmp
jae
fs
jae
add
fs
push
push
mov
xchg
ret
add
add
add
fs
pop
push
mov
xchg
ret
add
xor
loope
jne
mov
clc
repnz
jae
stc
mov
das
int3
add
xor
clc
repnz
jae
call
push
push
mov
xchg
ret
add
xchg
or
mov
clc
repnz
jae
call
push
nop
jae
aaa
add
mov
clc
repnz
jae
aaa
bound
add
les
lock
mov
xchg
ret
fiadds
add
add
add
push
out
add
add
add
add
mov
clc
repnz
jae
and
dec
add
mov
clc
repnz
jae
inc
fiadds
add
mov
push
mov
xchg
ret
mov
add
fwait
mov
mov
xchg
ret
cs
and
push
clc
repnz
jae
stos
add
add
xor
mov
push
mov
xchg
ret
xchg
jmp
xor
add
and
fwait
cld
nop
jmp
add
add
fs
mov
loop
fwait
cld
nop
jmp
and
or
test
fwait
cld
nop
jmp
add
jmp
mov
xchg
ret
add
dec
add
add
lods
clc
repnz
jae
add
inc
fdivs
add
adc
adc
mov
xchg
ret
aaa
and
insl
xor
fwait
cld
nop
jmp
pop
cmp
stc
mov
or
cld
nop
jmp
add
faddl
addl
call
clc
repnz
jae
add
jle
clc
repnz
jae
into
fsubrs
add
xlat
jo
mov
pop
push
mov
xchg
ret
add
stc
and
fwait
movzwl
clc
repnz
jae
add
into
jo
dec
add
clc
repnz
jae
add
xor
scas
push
push
mov
xchg
ret
fldl
and
add
cmp
jmp
add
fidivs
add
jae
incl
lret
xchg
add
add
mov
clc
repnz
jae
add
cs
fwait
cld
nop
jmp
add
fsubr
add
mov
repnz
jae
pop
and
add
add
add
pop
jae
repnz
jae
xchg
add
push
sti
mov
push
mov
xchg
ret
add
xchg
movsb
add
mov
mov
clc
repnz
jae
dec
add
jae
add
clc
repnz
jae
add
dec
shr
push
mov
xchg
ret
xlat
add
add
mov
clc
repnz
jae
xor
clc
push
mov
xchg
ret
dec
add
or
sbb
mov
xchg
ret
dec
jmp
ja
lahf
mov
clc
repnz
jae
add
add
add
adc
repnz
jae
pop
stos
add
fdivl
mov
test
jmp
nop
jae
int3
movsb
jmp
fwait
cld
nop
jmp
orl
jo
xor
mov
inc
or
mov
xchg
ret
push
xor
xchg
dec
into
stos
clc
repnz
jae
add
pop
add
and
jns
add
in
stc
or
xor
aaa
lret
push
clc
repnz
jae
faddl
pop
xchg
xchg
add
lret
push
mov
xchg
ret
dec
add
int3
cmp
jae
push
mov
xchg
ret
pop
movsb
add
push
mov
rorb
add
add
mov
test
add
icebp
inc
add
add
add
add
call
cmp
ret
ja
add
xlat
or
add
push
mov
xchg
ret
add
add
add
stos
push
mov
xchg
ret
inc
jo
fadds
add
or
repnz
jae
add
dec
add
fstpt
clc
repnz
jae
add
mov
in
test
fwait
cld
nop
jmp
add
jmp
mov
push
fwait
cld
nop
jmp
cltd
xchg
dec
dec
add
inc
inc
add
lock
incl
add
jmp
add
dec
fwait
cld
nop
jmp
add
jmp
add
push
ret
clc
repnz
jae
fiadds
add
push
add
push
mov
xchg
ret
add
add
repnz
jae
or
add
add
mov
clc
repnz
jae
add
les
ss
test
cld
nop
jmp
jo
inc
and
andl
jae
int3
inc
add
pop
call
clc
repnz
jae
fnsave
int3
jo
add
push
mov
xchg
ret
add
ja
add
add
clc
repnz
jae
add
pushf
call
mov
xchg
ret
or
fldl
add
or
clc
repnz
jae
mov
add
push
fwait
cld
nop
jmp
add
add
add
add
mov
xor
fwait
cld
nop
jmp
aaa
add
add
mov
sbb
nop
jae
add
xor
add
push
xchg
xorl
push
mov
xchg
ret
mov
add
mov
mov
mov
xchg
ret
pop
add
into
and
je
fwait
cld
nop
jmp
add
add
cld
nop
jmp
add
add
add
add
out
sub
push
mov
xchg
ret
add
out
or
das
xchg
clc
repnz
jae
jmp
stc
fisttps
fadds
xchg
ret
fs
stc
mov
je
fwait
cld
nop
jmp
pop
fwait
xor
mov
mov
movsb
mov
jle
adc
or
add
ja
fwait
inc
add
inc
add
clc
repnz
jae
add
int3
mov
fldl
jnp
nop
jae
jo
add
fidivs
dec
rep
clc
repnz
jae
ficoms
add
add
clc
repnz
jae
add
add
add
xchg
je
movsl
addb
cmp
iret
clc
repnz
jae
add
out
add
insb
inc
jb
clc
repnz
jae
xlat
stc
add
test
clc
repnz
jae
jae
add
addb
cmp
repnz
jae
and
aaa
fdivr
aaa
cmp
out
push
clc
repnz
jae
add
into
add
add
jae
call
clc
repnz
jae
bound
mov
push
mov
cltd
add
fwait
sahf
in
add
add
add
cmp
add
xchg
push
add
add
mov
dec
sub
repnz
jae
aaa
jmp
add
add
in
mov
clc
repnz
jae
pop
or
sbb
repnz
jae
add
mov
add
mov
clc
repnz
jae
add
add
cmp
out
clc
repnz
jae
dec
add
add
sub
repnz
jae
mov
add
xor
jle
mov
add
adc
add
dec
pop
push
mov
xchg
ret
pop
fisubs
add
clc
repnz
jae
int3
add
lret
add
ret
add
aaa
add
add
add
xlat
pop
das
jo
pop
add
inc
dec
enter
adc
add
mov
mov
clc
repnz
jae
xlat
add
idiv
repnz
jae
add
add
and
ret
rolb
mov
xchg
popa
add
cld
nop
jmp
add
ja
add
add
popa
fwait
cld
nop
jmp
add
add
dec
jo
or
mov
xchg
ret
add
add
xchg
mov
mov
push
clc
repnz
jae
add
fwait
pop
jmp
mov
jmp
add
or
or
mov
fiadds
jne
pop
mov
fwait
cld
nop
jmp
add
add
add
add
repnz
jae
xlat
dec
stc
fiadds
dec
pop
jne
clc
repnz
jae
add
push
popf
mov
clc
repnz
jae
pop
add
add
in
inc
clc
repnz
jae
add
add
lea
jae
movsb
add
xor
loopne
add
repnz
jae
pop
add
repnz
jae
add
add
mov
sub
fwait
cld
nop
jmp
bound
inc
add
popl
clc
repnz
jae
cs
sub
sti
clc
repnz
jae
out
add
dec
mov
nop
jae
les
add
add
fwait
cld
nop
jmp
add
add
add
inc
cmp
je
clc
repnz
jae
add
dec
clc
repnz
jae
stos
jmp
fiadds
stc
fisubs
and
mov
clc
repnz
jae
das
xchg
add
das
fstl
fwait
cld
nop
jmp
add
add
pop
xor
stos
mov
mov
mov
clc
repnz
jae
ja
or
add
repnz
jae
add
add
add
cmp
jnp
movsb
push
mov
xchg
ret
int3
add
cmp
jecxz
cmp
fwait
cld
nop
jmp
fwait
or
add
push
mov
xchg
ret
fs
mov
clc
repnz
jae
add
repnz
sub
repnz
jae
cmp
jo
out
mov
jae
gs
add
add
jg
jb
fwait
cld
nop
jmp
add
insl
dec
push
mov
xchg
ret
faddl
fiadds
cmp
push
mov
xchg
ret
add
add
fcomp
adc
mov
cmp
fwait
cld
nop
jmp
add
int3
into
cld
mov
push
mov
xchg
ret
gs
pushf
add
pusha
add
add
clc
repnz
jae
add
add
sbb
pop
and
repnz
jae
fwait
inc
fst
add
pusha
add
lcall
pop
add
ficoms
mov
xor
cli
incl
bound
add
add
add
lret
clc
repnz
jae
add
bound
stc
mov
clc
repnz
jae
into
add
add
add
clc
repnz
jae
add
not
push
mov
xchg
ret
jae
dec
add
mov
nop
jae
add
add
adcl
dec
je
clc
repnz
jae
cltd
add
cmp
pop
or
cld
nop
jmp
add
mov
add
pop
push
clc
repnz
jae
movsb
inc
add
cmp
lock
nop
jae
inc
stos
add
add
aaa
and
fcom
inc
add
cmp
add
xor
clc
repnz
jae
fiadds
pop
fisubs
push
mov
xchg
ret
add
add
add
add
fwait
cld
nop
jmp
add
add
lea
fwait
cld
nop
jmp
das
add
add
mov
mov
clc
repnz
jae
add
popf
ret
clc
repnz
jae
and
pop
stc
out
dec
pop
add
xor
clc
repnz
jae
add
xor
add
add
mov
push
pop
clc
repnz
jae
add
add
add
xchg
adc
mov
inc
jle
adc
add
fwait
cld
nop
jmp
add
add
fidivrs
or
xchg
rol
adc
add
fsts
sub
clc
repnz
jae
add
fiadds
aaa
into
test
jae
add
jmp
add
add
dec
mov
clc
repnz
jae
add
in
ret
cmpsb
inc
mov
popa
add
mov
xchg
ret
add
pop
and
insl
leave
clc
repnz
jae
call
xchg
fucomp
xor
mov
mov
clc
repnz
jae
in
dec
jmp
mov
push
mov
xchg
ret
add
add
incl
aaa
pop
stc
inc
add
das
add
add
pushl
and
xor
lret
mov
xor
repnz
jae
push
add
inc
out
add
dec
jne
clc
repnz
jae
xchg
add
fcoml
repnz
jae
aaa
add
jae
add
das
dec
je
clc
repnz
jae
into
aaa
add
jecxz
and
push
mov
xchg
ret
xlat
add
jl
xor
movsb
faddl
xchg
ret
add
add
mov
popa
add
adc
mov
add
mov
add
push
mov
xchg
ret
faddl
add
in
add
fwait
cld
nop
jmp
add
add
add
sub
cld
nop
jmp
add
add
xchg
std
push
clc
repnz
jae
fwait
add
add
add
dec
pop
xchg
add
push
mov
xchg
ret
fcomps
push
icebp
mov
mov
clc
repnz
jae
add
cmp
cld
fwait
cld
nop
jmp
xchg
int3
add
and
add
add
and
clc
repnz
jae
inc
add
push
clc
repnz
jae
add
xlat
mov
add
sub
repnz
jae
add
or
cmp
jbe
fwait
cld
nop
jmp
into
add
inc
add
mov
xchg
ret
fwait
jo
cltd
stos
fiaddl
repz
repnz
jae
fiadds
jo
add
xchg
clc
repnz
jae
dec
add
add
push
fwait
cld
nop
jmp
add
add
pop
scas
add
push
mov
xchg
ret
add
add
stc
aas
mov
clc
repnz
jae
fcoml
outsb
add
clc
repnz
jae
xor
add
or
add
add
add
jo
pop
clc
repnz
jae
jmp
xchg
int3
fs
mov
add
sbbb
decl
add
subl
aas
add
add
add
sub
clc
repnz
jae
bound
add
inc
fwait
push
push
mov
xchg
ret
jmp
ficoms
mov
xchg
ret
fldl
add
dec
subl
add
repnz
jae
add
in
mov
clc
repnz
jae
frstor
fcoms
js
cmpl
nop
jmp
add
or
cld
nop
jmp
dec
ficoms
fadds
lea
test
repnz
jae
add
cmp
xor
mov
clc
repnz
jae
fiadds
sbb
add
jmp
add
mov
xor
push
push
mov
xchg
ret
xlat
add
add
aaa
inc
ficompl
mov
xchg
ret
add
add
add
xchg
dec
xor
clc
repnz
jae
and
aaa
xlat
xchg
add
mov
clc
repnz
jae
add
fs
imulb
mov
clc
repnz
jae
add
xchg
fisubs
xchg
inc
add
add
repnz
jae
add
lret
and
jbe
clc
repnz
jae
xor
jp
and
push
fs
repnz
jae
fcomp
add
cmpl
fwait
cld
nop
jmp
call
add
jmp
mov
xchg
ret
add
pop
add
movsb
decb
nop
jae
out
xchg
add
fwait
sub
nop
jae
inc
and
add
pop
fwait
xor
push
mov
xchg
ret
addl
pop
cwtl
movzwl
clc
repnz
jae
push
add
call
in
jmp
stos
add
add
mov
sub
cld
nop
jmp
xchg
add
and
or
xor
jmp
cmp
bound
xor
add
lcall
in
incl
add
call
jmp
add
push
fs
add
mov
clc
repnz
jae
add
add
add
add
lcall
add
add
cltd
gs
fwait
popf
rep
clc
repnz
jae
add
les
cmpsb
mov
nop
jae
gs
add
pop
push
add
add
clc
repnz
jae
xchg
add
subl
clc
repnz
jae
fs
and
cmp
nop
jae
pop
add
inc
dec
pop
loop
mov
call
clc
repnz
jae
xor
mov
clc
repnz
jae
inc
xchg
movsb
les
xor
add
adc
sbb
add
popf
add
cmp
inc
add
add
or
sub
clc
repnz
jae
aaa
gs
add
bound
repnz
jae
add
add
rclb
flds
xchg
ret
fldl
mov
cwtl
mov
fwait
cld
nop
jmp
add
add
sub
inc
fcos
incl
add
fcompl
into
add
add
pusha
add
fwait
cld
nop
jmp
and
dec
add
add
repnz
jae
fs
ja
pop
add
mov
repnz
jae
dec
into
out
jo
add
shrb
repnz
jae
xor
add
pop
mov
mov
jns
les
repnz
jae
pop
pushf
dec
add
add
nop
jae
add
outsl
mov
clc
repnz
jae
add
fdivrp
add
js
cld
nop
jmp
dec
xor
ja
movsb
push
sbb
repnz
jae
fiadds
add
int3
cmp
hlt
aam
add
add
jmp
jmp
cld
nop
jmp
add
les
or
push
clc
repnz
jae
add
fldl
add
add
add
cld
nop
jmp
cltd
lret
add
fs
jne
test
xorl
clc
repnz
jae
push
fstpl
dec
cmp
repnz
jae
add
inc
mov
mov
push
mov
shll
jecxz
add
mulb
mov
into
in
faddl
mov
insl
jbe
cmpsb
cld
fld
loopne
mov
push
in
xchg
std
or
add
mov
cmpsl
pop
and
add
mov
adc
clc
cmp
dec
sub
js
xorl
mov
mov
pop
in
xchg
rcr
inc
add
push
add
stos
cmp
jnp
xlat
aam
into
daa
lock
js
add
add
push
add
in
enter
sub
mov
add
mov
mov
sbb
mov
dec
adc
mov
movsl
xchg
lcall
mov
sbb
movsb
cmp
imul
push
or
test
cs
inc
les
clc
mov
jle
loope
add
push
ja
sarl
or
mov
dec
dec
stos
nop
add
sarl
xor
push
leave
insl
iret
lret
pop
jge
aad
and
add
add
mov
mov
gs
daa
inc
sbb
xor
mov
rolb
nop
add
int
repz
mov
or
mov
add
dec
lea
mov
mov
mov
aam
aam
and
add
cwtl
test
and
jns
xor
xchg
insb
mov
add
mov
mov
ja
xchg
ds
cli
sub
loopne
mov
rolb
mov
addb
jb
mov
push
pop
aas
stc
es
adc
loopne
mov
pop
mov
mov
popf
lret
xchg
inc
add
cs
les
fs
add
mov
sbb
add
mov
lret
rcll
in
cltd
or
addb
mov
and
mov
xor
rolb
mov
adc
mov
mov
pop
push
add
stos
lcall
add
mov
push
xchg
sahf
jmp
adc
add
sbb
scas
mov
push
push
xchg
inc
sub
jle
cmp
popf
cld
icebp
pop
imul
mov
in
ss
movsb
mov
jp
adc
pop
inc
add
adc
mov
xor
mov
mov
mov
int3
push
pop
in
hlt
aaa
scas
or
inc
add
lret
jp
iret
rcll
nop
add
pop
dec
test
fadd
xchg
daa
lcall
or
add
mov
and
push
push
push
aaa
inc
add
xchg
dec
xchg
mov
xchg
lret
in
xchg
iret
add
add
sub
fwait
inc
or
cmp
dec
sbb
add
add
adc
leave
dec
sub
sahf
inc
add
xchg
cmp
mov
xchg
fmul
out
js
inc
out
fistpl
lds
pop
ss
push
add
fs
add
mov
repnz
stos
test
add
push
jb
mov
add
xor
mov
in
iret
add
sub
xchg
pop
pushf
dec
fsub
cs
xor
or
xor
mov
imul
and
int
inc
add
fwait
cmc
jmp
in
sub
std
bound
mov
and
mov
add
stos
jl
push
add
mov
jnp
cmp
out
test
mov
icebp
jo
mov
add
pop
add
adc
mov
add
add
add
es
mov
daa
or
add
pushf
int
dec
ldmxcsr
add
xchg
pop
push
pop
sbb
push
dec
xor
adc
mov
cmp
or
lcall
in
repnz
xchg
lcall
es
nop
add
loop
mov
cmp
call
xchg
les
arpl
mov
lods
jno
inc
imul
mov
add
add
xchg
stos
cltd
mov
mov
leave
sub
cmp
cmc
dec
mov
pop
loopne
mov
stc
xchg
jle
mov
sbb
dec
cli
nop
add
xor
stc
inc
dec
out
ljmp
jne
jge
and
mov
lods
jo
mov
div
stos
or
cmpsb
inc
add
mov
mov
add
push
ljmp
add
xchg
add
add
rolb
mov
fildl
push
pop
fnsave
jg
test
dec
mov
stc
pop
xor
mov
or
xlat
data16
dec
iret
mov
mov
push
xchg
in
mov
add
test
xor
mov
sub
sbb
icebp
mov
lods
push
cwtl
jne
ret
mov
and
loop
mov
or
scas
cmp
mov
mov
sti
dec
leave
pop
cmp
and
jo
mov
mov
test
test
movsl
bound
mov
jge
sub
xlat
in
lret
loope
ret
lea
mov
mov
sbb
lock
addb
xchg
loop
mov
add
mov
cwtl
dec
or
sub
add
mov
mov
jno
in
xor
adc
leave
sub
jp
add
addb
cmp
push
lret
out
pop
sbbl
jno
in
mov
push
add
mov
out
and
add
xchg
add
fwait
cmpsl
or
lret
and
mov
add
xor
negb
fwait
add
mov
mov
sub
push
outsb
es
test
jne
pop
popa
dec
stc
scas
push
scas
mov
add
dec
in
int3
fnstcw
adc
mov
jg
popa
addb
scas
add
or
xlat
mov
add
hlt
inc
add
jae
outsb
sti
out
fstpl
add
sbb
mov
add
add
mov
sbb
shll
add
in
test
daa
mov
dec
les
mov
clc
pop
add
inc
sbb
les
add
sub
xchg
hlt
mov
add
mov
clc
pop
or
adc
mov
stc
out
js
inc
lret
sbb
insl
pop
sbb
push
add
daa
sbb
mov
lret
lea
inc
sbb
mov
adc
or
in
add
add
mov
ljmp
loope
aam
bound
mov
adc
sub
cwtl
jno
pop
inc
test
mov
cmp
mov
sub
stc
cltd
xchg
push
add
stos
push
add
mov
mov
das
repnz
add
popa
nop
add
jno
push
faddl
xchg
xor
call
or
aad
add
loopne
mov
js
ja
in
cld
adc
in
or
mov
imull
gs
int3
or
mov
outsb
jge
xchg
repnz
mov
adc
sbb
in
push
ret
sub
rol
mov
cltd
mov
data16
lret
pop
pop
adc
mov
sahf
int
in
loopne
mov
sub
sub
pusha
add
add
cld
int
es
pushf
int
add
xchg
insl
adc
mov
add
outsl
bound
mov
movsl
add
add
lret
mov
daa
aas
fidivrs
test
mov
int
lret
jge
add
popf
mov
mov
pop
out
pop
jbe
add
adc
mov
mov
xor
mov
gs
stos
push
add
add
call
mov
pusha
add
mov
mov
mov
cltd
cmp
add
dec
insb
pop
sub
adc
mov
popa
aas
mov
inc
pop
sti
adc
inc
sbb
push
add
xchg
js
jne
sbb
add
pushf
jle
pop
xlat
adcl
or
or
or
lahf
sub
add
hlt
cmpsb
xchg
jmp
or
mov
mov
dec
xor
mov
addb
push
xchg
add
iret
jmp
sysenter
sub
mov
jb
mov
pop
jbe
sbb
test
cmpsb
sbb
add
lret
das
xchg
into
push
lods
push
add
or
fwait
add
sub
add
push
adc
push
pop
inc
frstor
push
jecxz
rolb
mov
sbb
jmp
jl
jb
mov
xchg
ljmp
mov
sub
stc
icebp
and
cmp
mov
and
push
cmp
xchg
std
mov
mov
mov
mov
jno
pop
cli
and
mov
mov
add
sbb
imul
mov
mov
ljmp
rep
xchg
cmp
or
pop
mov
mov
xchg
pop
int
lea
add
add
add
or
ja
fsts
mov
addr16
out
mov
xchg
xor
xor
insb
icebp
or
add
addr16
add
mov
pop
mov
mov
mov
or
in
xchg
mov
mov
pop
rcll
add
sub
call
enter
mov
dec
jge
mov
inc
add
or
mov
mov
clc
aas
popf
shll
stos
pop
push
push
push
lock
dec
stos
mov
jns
mov
mov
or
jbe
push
add
mov
mov
rolb
mov
mov
js
add
dec
rolb
cltd
fbld
add
add
daa
aaa
mov
mov
jp
xchg
adc
add
int3
xlat
divl
outsl
push
add
add
pop
imul
xlat
mov
addr16
ret
paddsw
addr16
clc
clc
xor
into
incl
in
idivl
xchg
add
incb
push
add
mov
insb
jp
lret
push
add
out
in
ret
int3
daa
or
scas
pop
gs
xor
clc
jb
mov
xchg
lds
pop
js
xchg
shll
adcl
std
iret
mov
lret
ja
in
jmp
mov
jle
ss
lods
jge
and
mov
addb
mov
push
sbb
and
jmp
pop
ret
aas
lock
push
das
iret
roll
jl
push
outsl
xchg
pop
out
lods
pop
fldenv
out
call
out
lock
push
mov
mov
mov
loope
mov
inc
xchg
fs
add
repz
mov
mov
jecxz
cld
mov
add
mov
jl
push
add
and
jle
ret
xchg
pusha
add
sub
fisttps
fdiv
push
pop
sub
mov
push
xchg
out
pop
mov
stos
test
mov
mov
movsb
scas
call
or
jmp
add
mov
inc
inc
inc
add
inc
xchg
adc
mov
popf
icebp
xchg
xor
mull
xchg
mov
stc
shl
ds
inc
mov
rolb
lret
fwait
out
push
fldl
inc
add
add
addr16
iret
arpl
leave
cli
xchg
add
int3
mov
cmp
xlat
or
aaa
arpl
mov
out
add
ljmp
mov
mov
add
xchg
lds
pop
cli
aaa
sarl
leave
ljmp
lret
sub
add
mov
mov
add
add
cmpsb
jge
mov
mov
xchg
jne
outsl
test
ficompl
add
add
mov
dec
cmp
jmp
arpl
movsl
test
add
xor
add
daa
insb
lds
in
and
jnp
out
and
add
add
int
sub
add
dec
mov
insl
pop
orl
fs
xchg
loop
mov
jb
mov
add
mov
mov
add
add
inc
mov
inc
or
mov
add
rolb
sti
push
test
jle
cltd
lods
arpl
ljmp
add
mov
fcomps
dec
pusha
add
stos
movsb
push
addb
dec
pop
aam
outsb
mov
pop
out
adc
mov
lods
adc
add
outsb
adc
mov
adc
add
add
popa
insl
jp
cmp
add
lret
loop
mov
pop
mov
addb
jg
pop
push
notl
stc
repz
sbb
pop
aas
out
dec
mov
add
movl
mov
rolb
lret
mov
sbb
sbb
test
adc
pop
fwait
or
mov
lret
test
ljmp
add
inc
add
int3
xchg
lods
lock
les
add
rolb
xor
add
out
test
mov
sbb
iret
jmp
and
lret
add
add
mov
mov
cmp
add
dec
inc
dec
fbld
int3
xchg
pusha
add
add
or
fildll
pop
dec
push
in
xchg
add
mov
push
mov
ficompl
test
loopne
mov
mov
lahf
daa
icebp
in
mov
scas
idivb
mov
mov
clc
outsl
cmp
fidivrs
lds
lret
aas
pop
mov
sbb
repnz
adc
pop
daa
push
mov
mov
rolb
mov
add
pop
push
add
pop
clc
or
orl
dec
clc
inc
mov
sub
pop
push
cs
pop
into
pop
cs
sub
or
cli
inc
lods
lds
adc
and
pop
jb
mov
pushf
mov
scas
aaa
imul
mov
sub
out
rcrl
sbb
jo
mov
mov
add
fnsave
pop
fwait
and
testb
xlat
mov
push
leave
out
data16
pop
sub
js
fcomp
cmpsl
xchg
add
dec
pop
ljmp
dec
loop
mov
add
xor
jp
jp
popa
or
jns
mull
add
add
jae
insl
addb
sti
enter
mov
adc
mov
pop
xchg
sbb
or
jecxz
inc
adc
mov
ret
and
mov
add
mov
dec
repnz
repz
add
add
xlat
in
sub
push
rolb
mov
mov
pop
int
gs
and
cltd
les
add
mov
stos
sub
add
add
pop
cmp
and
mov
shrl
inc
add
addb
dec
or
insl
add
cmp
cmc
and
mov
outsb
and
int3
adc
sar
test
xor
pop
cmc
aam
aad
xor
add
scas
jb
mov
push
add
test
push
mov
mov
xchg
xchg
xor
lods
insl
xchg
das
movsb
dec
cmpl
aas
inc
add
mov
add
sub
sbb
sbb
pop
mov
xchg
mov
jae
mov
or
cmpsl
insl
cmp
fstpt
add
lods
lahf
addb
inc
fsts
lret
cmc
test
dec
push
sub
lds
imul
mov
sti
mov
mov
hlt
inc
fs
cltd
adcl
jl
ficomps
add
mov
lret
mov
lret
je
fmuls
adc
xor
mov
xor
inc
fld
pop
pop
jbe
push
jns
add
dec
popl
xchg
push
scas
adc
imul
scas
cli
repnz
ja
ljmp
mov
es
movsl
add
mov
cmp
add
sbb
add
push
mov
and
add
add
lds
scas
push
xchg
dec
or
mov
add
cmova
cmp
sahf
cltd
inc
add
add
push
dec
das
pop
and
dec
adc
mov
repz
push
add
dec
adc
mov
rolb
mov
xor
mov
rolb
mov
jmp
popf
push
add
add
jge
cmp
pusha
add
pusha
add
dec
outsl
inc
mov
pop
push
out
mov
mov
add
add
setne
push
jo
mov
rolb
mov
mull
daa
pusha
add
or
stos
and
stc
push
add
jecxz
es
add
shll
and
mov
mov
mov
sub
cwtl
sbb
push
add
xchg
or
addl
inc
mov
adc
push
inc
xor
mov
and
lcall
popa
inc
mov
jmp
mov
addr16
jmp
mov
add
mov
push
test
negb
jbe
mov
repnz
inc
lods
loop
mov
mov
mov
roll
xchg
in
sbb
fbstp
push
leave
add
sbb
es
add
add
add
mov
add
lods
xor
mov
jl
cmp
roll
mov
mov
sahf
sub
mov
xchg
add
xlat
dec
fwait
jg
sbb
pop
and
mov
lds
xchg
in
fnstcw
aas
das
and
mov
mov
sub
mov
fcos
aad
mov
mov
add
mov
push
add
cld
inc
push
add
imul
add
and
aad
stos
fsubrs
mov
mov
mov
or
ret
pop
cmpsl
fsts
mov
mov
popl
add
movsl
arpl
sub
pop
icebp
mov
imul
and
test
arpl
add
aaa
sbb
add
sbb
add
ret
fdivs
in
xor
lds
sub
push
sbb
addb
pop
cmp
add
fbstp
loope
add
xchg
sub
and
addb
cmp
xlat
stc
jbe
add
push
fcmovu
incb
in
add
mov
orl
mov
test
xor
mov
outsl
out
add
mov
sbb
dec
and
add
jp
fisttpll
jmp
xorl
dec
lock
rolb
mov
mov
sub
mov
mov
xchg
out
int3
sbb
mov
inc
mov
mov
scas
inc
shll
out
inc
repz
in
mov
jnp
repnz
mov
notb
add
add
call
arpl
xchg
aaa
fistps
aad
inc
loop
mov
fildl
xlat
rolb
aam
aaa
stos
sbb
sti
mov
sub
xchg
add
aam
dec
sub
mov
sub
add
cmpsb
inc
xor
add
in
push
pushf
pop
mov
fistl
iret
lock
sbb
out
sub
pop
rolb
mov
sub
dec
push
add
and
mov
xchg
lret
int3
lock
shrl
jg
push
inc
scas
cmc
mov
push
subl
mov
mov
cmp
in
push
stos
adc
xchg
add
rolb
push
lret
jo
mov
lds
test
jae
fisttpl
jnp
out
addb
jge
push
inc
rolb
mov
testl
addb
test
add
ja
mov
stos
or
mov
rolb
add
adc
mov
nop
add
insb
push
jl
test
add
fs
add
dec
in
pop
insb
xchg
test
lds
add
imul
add
mov
sbb
inc
add
mov
mov
add
pop
out
mov
int
stos
inc
dec
mov
std
adc
mov
popf
mov
scas
dec
loopne
mov
into
shll
mov
mov
dec
pop
xchg
pop
mov
dec
push
add
lods
jmp
mov
sbb
pop
cmp
xchg
mov
sub
push
cli
in
dec
xchg
xor
mov
cs
mov
insl
dec
jl
push
stc
xchg
push
cmpsb
push
xchg
pop
scas
add
jg
add
push
repnz
mov
into
or
mov
mov
repnz
mov
mov
add
pop
fsubr
jge
add
rol
add
mov
add
add
pop
jge
mov
iret
fwait
and
lods
mov
push
add
mov
jbe
adc
add
mov
inc
and
out
sub
mov
xor
mov
add
std
pusha
add
xor
mov
stos
insb
ljmp
arpl
jge
add
xchg
dec
ss
into
push
xlat
adc
js
in
jmp
or
mov
add
inc
jae
add
xchg
xchg
mov
lahf
stos
add
add
aaa
xor
xchg
in
mov
push
insl
pop
jbe
mov
mov
sbb
xchg
mov
mov
mov
add
out
xor
mov
cld
jne
mov
pop
das
mov
daa
int
dec
xchg
fstps
add
mov
cmpsb
sub
addb
cmp
aaa
popa
mov
imul
mov
ds
push
cs
mov
push
fimull
xor
mov
add
push
xchg
add
mov
xor
pop
std
pop
mov
pusha
add
lods
cmp
dec
repnz
pop
rolb
mov
sub
cli
jmp
outsl
sti
sub
fcoms
push
xlat
cmpsb
aam
add
mov
inc
je
add
push
sub
add
mov
dec
push
add
add
add
pop
lcall
pop
adc
add
pop
scas
ds
xlat
in
icebp
inc
or
fcmovu
push
cli
inc
add
and
mov
or
xchg
repz
jge
pop
dec
push
jnp
lret
mov
aaa
mov
add
mov
jo
mov
mov
mov
push
xor
mov
push
add
mov
into
push
sar
pop
mov
mov
add
ljmp
fcompl
dec
lds
pop
add
mov
rolb
mov
xchg
loopne
mov
mov
in
push
add
adc
hlt
cmpsl
mov
add
mov
add
pusha
add
lret
cli
cwtl
into
scas
mov
mov
mov
addb
arpl
insb
jg
cmp
push
add
cmp
loop
mov
pushf
xchg
rolb
mov
idivb
arpl
repz
shll
in
cmp
or
addr16
test
js
sub
lcall
add
enter
adc
mov
jae
add
test
mov
xchg
jecxz
mov
mov
outsl
arpl
and
add
addr16
subl
mov
dec
sarl
add
mov
hlt
adc
rolb
mov
mov
add
mov
push
xchg
push
pop
jmp
mov
cmp
cmp
xchg
dec
dec
stos
xchg
pop
add
mov
add
das
mov
gs
push
add
and
popa
xor
and
mov
or
testb
add
xlat
jb
mov
push
rcpps
push
add
pop
ja
imul
mov
outsb
outsl
mov
add
mov
cltd
scas
sbb
jb
mov
add
mov
lret
jecxz
aaa
rolb
jl
xchg
push
sub
pusha
add
add
mov
in
lret
insb
push
add
mov
test
sub
mov
dec
test
xchg
cwtl
push
add
pop
les
scas
inc
dec
repz
sbb
dec
mov
stc
push
and
in
sbbl
mov
dec
mov
aam
fmull
cltd
mov
and
mov
push
movsl
hlt
mov
mov
push
push
scas
test
lods
inc
imul
out
pop
sub
in
lcall
test
popf
sub
jno
cmp
dec
mov
xchg
jno
inc
push
add
divb
inc
add
add
mov
cwtl
stos
lea
jle
loope
mov
mov
cmp
adc
mov
push
imul
lea
xor
jecxz
mov
in
sbb
int3
pop
cld
mov
push
fidivrs
mov
pop
mov
sti
inc
std
iret
rcll
loop
mov
call
stos
adc
fistpl
mov
push
push
pop
jge
xor
mov
mov
sbb
mov
pop
lds
sub
add
add
add
ja
xchg
fucomp
push
push
push
sbb
jb
mov
xor
into
jbe
add
fcompl
mov
add
add
push
pushf
dec
rolb
mov
pop
dec
ds
jle
add
add
pop
outsb
sbb
sti
out
or
fcmovbe
xor
iret
push
xor
xor
mov
add
add
and
jle
test
jl
cmp
push
or
sbb
add
cwtl
lret
adc
lods
addps
test
push
rolb
mov
jns
repnz
test
mov
pusha
add
add
in
xchg
sub
mov
mov
lret
add
dec
cmp
stos
popa
push
pop
and
sti
dec
sbb
mov
mov
popf
xchg
jp
iret
jmp
inc
sub
inc
add
mov
js
gs
es
pushf
mov
mov
push
fnsave
add
int
push
jle
or
enter
lock
lahf
mov
imul
xchg
sub
mov
add
scas
lret
jmp
fsubs
inc
sbb
add
inc
or
push
jbe
inc
add
lock
and
push
xor
add
add
mov
add
mov
add
dec
lea
add
je
sub
add
rolb
mov
movsl
jnp
or
outsl
push
sub
add
shll
pop
add
mov
clc
or
mov
dec
icebp
mov
jge
add
mov
jp
dec
std
xor
shrl
inc
add
aaa
xor
add
data16
add
mov
push
fisubl
add
dec
adc
xchg
xchg
and
add
ds
fwait
inc
xor
stos
lods
test
adc
xchg
cmpsl
mov
jmp
sbb
add
xor
or
lea
mov
xchg
or
stc
inc
adc
inc
dec
sbb
mov
push
mov
push
and
or
inc
adc
out
mov
fwait
pop
fcompl
pop
jle
sub
pusha
add
sub
divb
add
mov
xor
jp
inc
sbb
add
aad
inc
fisubrs
mov
movsb
xchg
push
push
insb
sbb
cmp
add
nop
add
sbb
mov
lret
xor
jecxz
cli
aaa
sub
xor
mov
dec
adc
mov
push
mov
pop
bound
mov
pop
mov
lret
ja
dec
cmovle
add
call
push
add
pushf
inc
add
shrl
push
bound
mov
fwait
mov
or
add
jno
pop
xor
popf
mov
lock
stos
fsubrl
add
add
xchg
stos
outsl
rolb
les
aam
jae
clc
aad
jnp
add
daa
pop
pop
pop
cmp
pop
int3
push
jge
add
loopne
mov
push
popa
roll
cs
into
cmpsl
fdivl
add
jmp
push
rolb
enter
in
add
mov
sti
jo
mov
xchg
sbb
iret
jle
repz
inc
ja
insl
arpl
cmp
add
dec
sahf
loope
add
mov
stos
jmp
add
pushf
cmp
not
in
lock
add
hlt
loope
add
mov
pop
xor
mov
mov
sbb
and
mov
xchg
pop
fstpt
cmpsl
jle
add
jg
add
mov
xor
mov
mov
enter
add
inc
dec
push
hlt
push
aam
xchg
out
add
stc
xchg
jnp
mov
adc
add
lods
push
xchg
sub
lret
pop
mov
mov
rolb
dec
stos
pop
pop
int3
std
mov
test
and
add
mov
xchg
aad
or
lea
mull
and
mov
mov
cmp
outsl
xchg
call
mov
cmpsl
xor
mov
push
out
lock
sub
mov
add
jp
mul
test
inc
addb
mov
xchg
int3
or
int3
xchg
dec
push
add
add
mov
inc
and
mov
fbstp
lea
push
add
and
mov
add
outsl
loope
inc
push
inc
mov
jmp
jp
add
addb
test
push
movsb
xor
add
enter
addr16
cmp
call
mov
jl
imul
push
add
inc
add
jg
mov
push
out
ret
ficomps
orl
inc
lock
add
jge
adc
mov
add
mov
jbe
inc
sub
idivb
jns
cs
sub
push
or
add
add
mov
add
mov
cmp
add
add
cltd
fmull
ljmp
lods
jb
mov
mov
pop
out
jp
mov
cmc
dec
sbb
bound
mov
cmpsl
add
mov
add
add
test
xchg
movsl
in
or
jl
add
add
adc
mov
sbb
sub
push
js
push
test
mov
add
sub
stos
fistl
into
mov
sbb
sbb
jno
fisttpll
xchg
scas
ret
and
mov
movsb
fidivs
add
out
mov
inc
add
mov
mov
fcoml
sbb
adc
mov
dec
push
out
jg
xor
jae
test
scas
mov
std
adc
mov
jns
arpl
in
xchg
jecxz
add
xchg
add
add
jo
mov
fisttpl
and
mov
add
xor
inc
add
in
or
jbe
or
xor
jg
fildll
inc
add
mov
pop
aaa
pusha
add
mov
inc
add
cmp
lds
into
es
int
add
movsl
sub
mov
daa
xchg
outsl
bound
mov
adc
jecxz
popa
icebp
lcall
inc
fcmovbe
lds
sub
and
pop
or
fadd
add
inc
psllw
aam
add
pop
ret
out
sahf
pop
cmp
mov
jl
add
out
push
sub
mov
mov
pop
jp
pushf
cli
cmpsl
popa
inc
mov
daa
and
add
xor
mov
add
js
aas
nop
add
in
test
je
ret
addl
popa
popf
sahf
add
stc
and
shll
add
sbb
cmp
inc
stos
mov
xchg
add
or
add
sub
call
push
sbb
mov
mov
inc
arpl
mov
aas
dec
or
lcall
int
jno
jb
mov
ret
adc
mov
add
cli
aas
mov
dec
or
push
add
fsubrp
jno
mov
sub
mov
add
adc
mov
jge
mov
mov
cmp
push
xchg
stos
cmp
cli
mov
inc
add
mov
jl
inc
iret
scas
add
call
mov
jmp
pop
aad
mov
mov
mov
mov
push
jb
mov
mov
add
clc
push
dec
sti
xchg
xor
jmp
add
shl
in
jns
jb
mov
ljmp
fimuls
sbb
mov
cmp
mov
les
dec
adc
stos
int3
div
mov
and
mov
loop
mov
xorl
sbb
add
int
or
js
mov
ficompl
add
repnz
pop
adc
stc
fwait
bound
mov
insb
aas
lcall
js
add
inc
add
invd
xchg
add
xchg
add
pop
outsb
push
ljmp
sahf
ficomps
in
push
mov
mov
loope
xchg
divl
pop
jne
mul
mov
add
xchg
xlat
or
jno
add
aam
imul
add
notb
ds
jp
ret
test
adc
mov
add
mov
call
lock
les
xlat
nop
add
dec
imul
xchg
and
mov
mov
push
and
add
jmp
jne
jno
mov
or
ficoml
mov
push
mov
sbb
sbb
and
pop
sti
and
mov
cmp
jle
add
mov
addr16
mov
sti
sahf
cs
add
aas
in
out
scas
insl
pusha
add
adc
mov
add
daa
imul
mov
mov
add
add
hlt
in
add
mov
addb
jb
mov
add
add
jns
add
mov
lock
mov
adc
or
std
movsl
pop
xchg
rcrl
lret
mov
mov
add
cmp
or
popf
jle
xor
sbb
clc
loopne
mov
jae
xchg
add
aas
jb
mov
mov
lret
inc
cmpsl
es
mov
mov
out
pop
faddl
in
addb
jno
dec
sub
sbb
inc
std
xchg
ficoms
add
adc
ljmp
xor
mov
mov
bound
mov
test
dec
ret
test
pop
adc
inc
fsubs
mov
cmp
stos
movl
rolb
sbb
add
pop
arpl
cmp
add
add
mov
ret
xlat
push
push
leave
imul
pop
stc
aaa
and
mov
mov
jg
add
sbb
dec
das
in
xchg
or
mov
adc
cmpsb
pop
xor
mul
add
push
add
add
mov
add
das
cmc
cmp
add
fistpll
mov
mov
imul
out
popf
ret
rolb
mov
or
mov
jg
mov
lret
cmpsb
decl
add
rolb
mov
rolb
mov
jae
jle
add
addr16
fmuls
cmpsl
mov
mov
inc
popf
or
loop
mov
out
lea
movsb
cmp
mov
jo
mov
mov
js
cmp
sub
pusha
add
adc
inc
dec
pop
xchg
jp
or
sub
in
dec
push
lods
cwtl
pop
out
pop
mov
add
xor
mov
faddp
int
jmp
mov
mov
dec
xor
imul
lret
out
inc
mov
in
das
cmc
mov
push
adc
mov
aam
push
xchg
lods
insl
pushf
jno
sti
sbb
in
addb
sub
jl
iret
lods
std
nop
add
mov
lods
bound
mov
inc
add
mov
je
iret
shrl
mov
in
xlat
addb
test
ljmp
cmp
mov
ds
mov
mov
lcall
int
and
mov
dec
xchg
mov
mov
mov
lahf
cld
and
add
mov
and
add
add
mov
dec
out
loope
in
rorl
add
mov
mov
jmp
push
andl
inc
add
add
mov
or
jecxz
jae
loope
add
jnp
jmp
ret
int
jae
or
add
rolb
mov
add
fistps
dec
pop
fdivrs
jmp
xchg
test
add
push
shld
jbe
imul
in
ficoms
inc
sub
cmp
mov
cmpsl
lods
outsl
popf
cmpsb
pop
dec
icebp
andps
je
xor
add
jg
add
or
outsl
cs
xchg
mov
xor
mov
jo
mov
xchg
push
add
add
push
sbb
inc
xchg
add
addr16
mov
mov
mov
ds
mov
mull
mov
push
ja
loop
mov
or
mov
add
ret
mov
add
add
mov
adc
fcoms
lret
mov
jb
mov
lahf
dec
stc
bound
mov
ret
out
ja
jge
push
arpl
push
add
fcompl
pop
movsb
mov
in
stos
addb
adc
mov
sbb
shll
popf
fucom
fidivl
cmp
jl
dec
je
scas
jnp
or
add
dec
mov
add
mov
shrl
js
rolb
mov
sub
fwait
cmpsl
pop
xor
dec
and
and
mov
xchg
inc
add
and
mov
je
cltd
fcmovnu
xor
mov
add
mov
xchg
cmp
mov
in
or
and
mov
mov
jae
add
and
test
ds
imul
fwait
jle
aaa
dec
pop
mov
adc
in
dec
ret
rcl
jle
mov
sahf
pop
add
add
cli
xorl
subl
xchg
inc
adc
mov
dec
scas
pop
fisubrs
pop
cltd
cmp
add
add
ret
out
sbb
push
cmpl
add
pop
jno
inc
out
add
sbb
jmp
add
add
push
jb
mov
inc
je
xchg
jbe
pop
mov
sub
out
add
cs
lea
ja
push
add
insl
cmovae
add
stc
mov
outsl
jbe
add
subl
add
fs
add
aad
rcr
add
and
mov
xchg
rolb
mov
mov
or
movsl
insb
pop
pushf
je
insb
sti
mov
fcompl
add
pop
roll
lea
jecxz
and
fsubl
add
push
add
pop
mov
nop
add
sub
fisubrl
in
packssdw
add
lret
div
fisttps
jmp
addb
clc
sbb
jb
mov
add
std
in
xchg
add
push
das
in
jo
mov
or
cs
cmp
call
imul
push
add
popl
xchg
inc
rolb
push
sbb
dec
push
add
add
jne
imul
pushf
loopne
mov
mov
ret
cmp
mov
mov
jecxz
je
mov
add
adc
add
inc
inc
ffree
or
addr16
in
mov
in
or
insb
aad
add
mov
nop
add
sub
and
adc
repz
addr16
cmp
mov
mov
add
dec
and
mov
add
mov
iret
fbld
add
in
data16
iret
and
mov
push
enter
adc
in
sbb
mov
push
repz
sub
mov
and
int3
add
mov
add
rcl
add
jg
repnz
outsl
fisttpl
repnz
push
add
push
add
stos
fiadds
cmp
jmp
mov
mov
push
in
mov
je
jmp
lea
dec
rolb
out
inc
or
add
out
adc
mov
pop
mov
xchg
addb
jp
push
adc
inc
aad
outsb
cmpsl
fisubrs
pop
add
lods
pop
scas
lds
mov
sub
stos
inc
stc
inc
jno
stc
mov
adc
push
inc
stos
popf
hlt
add
in
pop
enter
mov
push
out
xchg
add
or
mov
xchg
ja
and
mov
inc
add
bound
mov
cmc
inc
ljmp
fstps
int3
pop
mov
add
enter
mov
jns
mov
add
pop
xor
mov
mov
test
add
nop
add
mov
in
inc
add
outsb
mov
push
or
jbe
and
outsb
push
add
or
mov
add
mov
test
push
out
out
add
add
arpl
and
mov
mov
xor
imul
stos
adcl
mov
addb
pushf
es
jns
cmp
loop
mov
add
dec
addr16
mov
stos
adc
pop
dec
adc
sbb
add
jns
or
push
mov
movsb
loope
sbb
sbb
xlat
sub
add
xchg
test
adc
jns
bound
mov
add
push
sbb
mov
ljmp
mov
mov
mov
loopne
mov
mov
jae
inc
aaa
pop
adc
mov
add
add
fs
test
xchg
or
and
mov
sub
loope
push
mov
mov
jne
fimull
in
scas
out
sub
icebp
xchg
mov
jmp
addb
dec
inc
add
pop
push
leave
pop
notb
outsb
out
test
mov
add
add
sub
lds
lcall
addb
fbld
xchg
add
inc
sbb
xchg
pop
repz
lcall
mov
cmp
jp
sbb
mov
add
lea
fsubrl
divb
cmpsb
icebp
cmp
or
mov
xchg
aam
fcomp
or
movsl
icebp
pop
xchg
push
pop
cmp
call
les
insb
hlt
stos
gs
jl
add
hlt
sub
jb
mov
push
cmp
rolb
mov
mov
mov
mov
add
jmp
add
xchg
add
mov
push
pop
mov
fadd
or
jmp
sbb
mov
mov
mov
and
mov
sbb
sub
jge
add
or
inc
xchg
addb
dec
dec
ss
enter
sub
mov
mov
jge
and
mov
in
add
xchg
lahf
dec
mov
push
xchg
cld
add
mov
add
andl
add
mov
add
into
jmp
add
stos
adc
inc
add
xchg
xchg
mov
ds
lods
dec
stos
mov
add
add
push
lds
hlt
mov
fbstp
mov
aam
inc
add
rolb
mov
add
mov
into
cld
js
mov
mov
subl
push
or
jns
mov
das
int3
mov
sbb
fidivs
imul
adc
lock
cmp
andl
ss
bound
mov
lds
test
sub
ret
cmp
shll
adc
add
sub
add
aad
add
add
iret
jno
rolb
mov
push
sub
xchg
mov
xchg
stos
xchg
leave
lods
test
push
add
in
popf
leave
push
mov
add
sti
ret
dec
jle
add
mov
lcall
inc
add
xor
adc
mov
clc
add
mov
fstps
mov
add
int
cmp
push
sbb
lret
fisubl
add
mov
mov
inc
add
arpl
add
scas
xchg
sbb
mov
dec
push
pop
jb
mov
push
mov
mov
aas
dec
les
add
mov
push
imul
pop
and
pop
pop
mov
sahf
add
mov
pop
lds
sub
outsb
mov
add
add
daa
or
faddp
fiadds
loope
mov
mov
mov
mov
or
add
adc
add
add
pop
or
jp
add
push
int
or
add
iret
popf
xor
mov
and
lret
rorl
aas
pop
adc
mov
lahf
ja
jmp
loop
mov
in
js
sbb
add
sbb
ret
in
addb
fisttpl
cmp
cmp
add
sub
sbb
mov
mov
or
in
mov
aad
xor
dec
les
and
roll
fstl
loope
mov
imul
inc
add
es
pop
and
sub
add
mov
mov
stos
push
repnz
jno
add
mov
xor
test
popf
adc
mov
or
les
xor
mov
rcrl
add
mov
mov
push
ljmp
add
testl
mov
sub
stos
adc
mov
inc
jnp
popa
inc
add
mov
pop
cwtl
fisubrl
and
mov
add
mov
je
in
in
jne
sahf
sbb
add
adc
cwtl
ss
dec
push
lret
add
mov
dec
iret
es
data16
pop
addr16
push
add
lahf
or
mov
pop
inc
mov
pop
int
inc
push
push
dec
daa
lret
xor
push
or
adc
cmp
je
movsl
pop
or
inc
scas
push
dec
xchg
jne
stc
mov
xlat
rcll
push
inc
sahf
test
mov
popa
loopne
mov
movsl
jge
mov
outsb
fisubl
aas
push
fs
xchg
pop
imulb
mov
rolb
ja
xchg
add
cli
rolb
mov
xchg
mov
call
testl
mov
push
dec
notb
es
sbb
mov
stos
xchg
lods
fcom
add
mov
pop
outsl
int3
test
add
adc
mov
or
mov
mov
ret
pop
add
add
movsb
cmp
push
add
sub
rolb
mov
nop
add
cld
inc
add
mov
add
out
add
std
mov
mov
mov
mov
out
jb
mov
xor
jae
sub
inc
xchg
dec
es
imul
mov
cmc
dec
xor
mov
ret
mov
fcomps
add
stos
lea
xor
cs
gs
xor
mov
pop
faddp
add
add
add
or
xor
push
mov
pop
push
lret
mov
rolb
mov
inc
add
jnp
jae
jns
push
cmpsl
test
or
and
mov
add
adc
mov
push
xlat
xchg
xlat
ljmp
xor
jns
sub
mov
inc
jle
jl
dec
fiadds
ret
push
push
jno
jp
add
fisubl
adc
mov
mov
add
mov
add
mov
out
pop
fisttpll
mov
movsl
out
push
ss
add
gs
sub
jno
fdivrl
inc
add
clc
test
mov
aad
addr16
ds
mov
insl
popa
sub
push
pop
pop
out
add
push
and
mov
fimuls
les
jbe
call
sub
push
clc
adc
sbb
hlt
jo
mov
add
add
sbb
mov
jno
add
jecxz
xchg
mov
mov
nop
add
pop
jecxz
fbld
cmp
icebp
out
pop
mov
add
aaa
cmpsl
stos
into
popa
enter
mov
mov
and
add
mov
add
mov
in
popa
cld
test
add
mov
mov
loope
xorl
adc
cmc
xor
mov
mov
mov
nop
add
mov
pop
dec
es
cmp
les
clc
or
mov
add
repnz
mov
jle
pop
repz
adc
xor
add
jo
mov
mov
mov
push
add
mov
int
inc
mov
imul
pop
addb
xchg
jmp
out
and
mov
imul
das
rolb
xchg
ss
jl
sbb
sbb
sti
scas
jmp
push
add
mov
mov
adc
mov
jae
add
and
cltd
xor
add
test
outsl
pop
fcomp
cmp
idivb
lret
imul
mov
mov
sahf
fildl
add
mov
in
out
pop
and
mov
repz
mov
inc
add
mov
sub
or
xchg
ljmp
or
jae
pushf
popf
outsl
ret
rolb
mov
add
mov
ds
sub
cmp
orl
addb
loopne
mov
int
xor
inc
add
jl
add
packssdw
ja,pn
and
fs
add
or
outsl
pop
pop
jl
mov
jmp
add
inc
pop
inc
fimuls
rolb
cmp
add
adc
mov
add
lods
pop
fmuls
stos
jb
mov
add
mov
adc
xchg
mov
cmpsl
jo
mov
lods
mov
add
add
add
sub
fs
cmp
add
sub
sbb
sbb
stc
pop
es
outsl
xor
mov
jnp
ret
jbe
xchg
cmp
xchg
add
outsb
lret
clc
and
inc
clc
clc
mov
sub
add
or
adc
pop
aas
push
add
dec
xchg
xchg
test
jmp
jo
mov
aaa
inc
aad
mov
movsl
outsl
push
mov
test
mov
aad
xchg
pop
dec
and
mov
add
mov
lret
and
arpl
mov
mov
cmp
xchg
dec
xchg
add
cmpsl
int
push
or
jns
mov
sub
add
pop
or
and
mov
movsl
adc
add
mov
outsl
rolb
mov
pop
xor
std
in
fisubrl
push
sbb
int3
mov
ret
pusha
add
pop
rorl
test
out
pusha
add
call
push
cmpsl
pop
jb
mov
pop
cli
xchg
add
sub
dec
mov
mov
add
xor
mov
cs
cmp
cmp
push
fidivl
mov
addb
pushl
add
test
mov
lods
sub
inc
add
sbb
mov
icebp
jno
add
cmpsb
adc
inc
insl
dec
lds
lea
stos
pop
cltd
mov
add
cmp
add
pop
lods
mov
add
push
add
mov
mov
repnz
mov
cltd
ret
hlt
push
icebp
jecxz
mov
or
xor
jmp
jb
mov
or
ljmp
xchg
pop
xor
add
loope
or
pop
push
ret
movsl
mov
xchg
out
cmp
sub
push
lea
repnz
mov
and
mov
add
mov
push
add
addb
and
enter
jae
cltd
xor
mov
add
add
mov
mov
mov
add
mov
mov
xchg
add
out
dec
pop
sbb
test
add
mov
sub
fdivrs
aad
std
cwtl
mov
aad
cmp
push
dec
ja
addb
xchg
add
lret
xchg
dec
mov
mov
mov
out
addr16
add
lea
jle
fstpl
sub
cmpsb
fisubl
mov
iret
or
lock
pop
aaa
out
lea
les
adcl
dec
jb
mov
roll
movsl
sub
mov
or
aaa
ret
xor
mov
int3
popf
ljmp
xchg
and
mov
lahf
and
mov
xchg
rolb
mov
fstp
pop
repz
repnz
and
mov
cld
ljmp
js
add
scas
mov
loopne
mov
arpl
rcrl
inc
in
lcall
dec
xchg
dec
add
xor
mov
into
mov
add
add
cmc
in
mov
addb
clc
insb
dec
lret
loop
mov
orl
stos
mov
add
mov
dec
roll
out
add
pop
xor
scas
cltd
jg
dec
outsl
cmp
xor
lahf
popa
test
in
jno
loop
mov
jnp
cld
int
sbb
add
and
sub
mov
or
xchg
or
add
es
push
xor
add
ret
negl
in
call
enclu
int3
mov
ret
cs
repz
fisubrs
jb
mov
jle
pop
inc
call
dec
sbb
dec
inc
mov
in
add
add
mov
adc
adc
mov
inc
cmp
add
adc
mov
das
mov
aaa
dec
lret
fxch
out
arpl
sti
andl
out
xor
and
add
add
bound
mov
addb
inc
xor
cmc
pop
adc
jge
lods
dec
pusha
add
xor
pop
imul
mov
mov
lods
stos
fidivrl
or
lock
inc
int3
mov
add
jne
add
stos
add
mov
rorl
in
add
mov
or
cmc
mov
mov
jno
xchg
repnz
add
rcll
mov
or
add
mov
popa
stc
gs
jmp
xchg
popa
pop
jno
jle
inc
cmp
add
xor
mov
add
add
in
push
add
add
rolb
mov
ljmp
xchg
add
mov
out
add
mov
and
jns
rolb
mov
mov
mov
dec
sbb
lret
sub
pushf
xor
in
loopne
mov
pushf
sbb
sub
icebp
pop
jge
stc
cmp
ljmp
cmp
and
pusha
add
fdivr
arpl
jg
mov
jg
jb
mov
std
cwtl
out
mov
mov
add
aad
xchg
sbb
add
je
add
pushaw
add
mov
ret
xchg
int
movsl
inc
in
xchg
loope,pn
loop
mov
je
mov
add
lahf
inc
ss
jecxz
xchg
faddl
dec
push
cli
dec
adc
lahf
add
cmpsl
icebp
aaa
sub
add
pop
lods
popf
add
es
loopne
mov
add
xchg
enter
mov
mov
fcoml
inc
data16
test
mov
repz
dec
fucomip
and
mov
adc
xchg
outsl
mov
popf
mov
add
mov
ss
push
call
inc
add
mov
mov
popa
test
in
sub
push
xor
jl
das
sbb
mov
call
mov
push
fisttps
sub
mov
jmp
arpl
inc
mov
cmp
dec
vshufps
insl
adc
ljmp
mov
cmp
add
inc
mov
cltd
pusha
add
in
or
add
pop
xchg
push
add
int
rolb
mov
out
mov
mov
sub
es
push
cs
jg
push
leave
outsl
popf
pop
push
jg
into
roll
mov
pop
fnstsw
imul
inc
es
add
ret
les
test
fs
mov
add
fdivl
pop
push
outsb
int
pop
mov
fiadds
or
push
jne
pop
dec
inc
add
or
or
pmullw
and
mov
pop
sub
std
movsb
inc
inc
add
jg
outsb
rolb
mov
xor
mov
lret
imul
mov
iret
pop
lahf
subl
fists
fnstcw
pop
int
push
add
insb
stos
out
repz
add
and
mov
pop
push
mov
aaa
cwtl
cmpsl
adc
mov
mov
sbb
dec
mov
cltd
sti
out
ss
and
or
popf
pop
jno
sbb
loop
mov
mov
bound
mov
add
mov
ss
out
push
cmpsb
stos
xchg
sub
jnp
dec
dec
leave
jbe
sub
cs
xchg
add
push
adc
fsubr
mov
in
je
sbb
push
sub
xlat
push
push
fninit
cmc
jno
push
mov
and
mov
jnp
mov
adc
push
dec
out
lcall
jo
mov
mov
repnz
loop
mov
rorl
ret
xor
add
aaa
jge
les
add
adcl
aam
movsb
and
loop
mov
repnz
jecxz
stos
adc
mov
faddp
ret
imulb
or
add
mov
sahf
pop
popf
mov
mov
add
sbb
int
add
ljmp
or
push
lock
mov
mov
mov
fcmovnu
pop
jle
sub
mov
pop
fsubs
xor
add
or
inc
inc
add
dec
fwait
xchg
and
cmp
loope
fs
dec
adc
add
mov
lcall
push
scas
dec
aam
adc
outsl
pop
insb
icebp
push
jbe
sahf
or
mov
add
push
add
aas
mov
mov
je
add
lahf
or
push
and
add
mov
cmp
jnp
arpl
sub
adc
ja
pop
xchg
mov
jge
push
sbb
inc
addr16
push
out
cmp
xchg
rolb
mov
inc
and
inc
mov
mov
movsb
fcmovbe
xchg
sub
inc
inc
pop
cmp
mov
xchg
jecxz
push
data16
add
stos
fnstenv
add
mov
dec
or
adc
js
cmp
pop
jp
pop
movsb
mov
mov
lret
adc
add
mov
jecxz
addb
lods
cmc
test
pop
mov
pop
xchg
pop
cwtl
dec
adc
mov
add
mov
add
add
mov
cmp
xor
mov
popf
add
add
daa
sub
ds
js
stos
add
or
adc
adc
loop
mov
aaa
lret
les
mov
fisubl
add
and
stos
ret
das
mov
repz
aad
rcrl
arpl
cmp
lcall
cmpsb
lea
add
clc
pop
mov
jae
inc
cmp
neg
dec
das
mov
push
add
cmpsb
lods
mov
pop
ficomps
mov
mov
add
pop
pop
mov
cmp
push
xchg
push
xor
add
cmc
into
into
shll
add
arpl
fdivs
lret
mov
add
dec
jp
xchg
inc
lahf
movsb
pop
ret
pop
push
add
cmp
mov
mov
inc
add
add
ret
pushf
xchg
sbb
add
xchg
lods
insl
les
push
add
fstl
cmp
add
addb
pop
ss
cmp
call
mov
icebp
fadds
add
add
add
shrl
sbb
and
imul
dec
or
rcr
movsb
and
jmp
add
mov
maskmovq
mull
add
mov
add
and
pop
pop
aad
decb
adc
lret
sbb
add
pop
xor
mov
add
adc
decb
add
test
int3
clc
das
and
mov
fsubrp
add
jnp
lds
jmp
and
scas
jmp
jo
mov
add
sbb
aaa
testb
bound
mov
xchg
add
loopne
mov
or
scas
add
mov
pop
xchg
add
inc
out
and
mov
mov
dec
insb
loopne
mov
sti
imul
and
xchg
cmpsl
jp
push
jp
nop
add
push
add
loopne
mov
push
sbb
lods
inc
jo
mov
pop
in
or
test
cmpsl
and
fimull
repnz
loope
in
cmp
call
cmpsb
xor
mov
stos
sbb
pop
daa
std
rolb
out
mov
mov
xor
push
out
insb
cli
mov
add
testl
mov
xchg
sbb
add
repnz
mov
dec
or
push
push
or
std
xor
mov
in
fwait
int
test
in
dec
lods
add
mov
cmp
push
jne
add
cmpsb
add
out
jg
mov
add
mov
add
inc
lcall
jecxz
cwtl
repz
inc
push
out
aaa
arpl
lret
adc
loop
mov
pop
stos
nop
add
mov
lods
jl
wbinvd
sbb
jmp
pusha
add
movl
mov
mov
cmp
mov
ret
rolb
push
gs
lahf
outsb
scas
jns
push
sbb
xchg
add
mov
stos
push
push
lock
lret
xchg
add
mov
mov
rolb
mov
shrl
add
inc
fisubs
testb
mov
mov
mov
add
add
or
nop
add
add
mov
dec
jns
jl
mov
into
mov
cmp
and
mov
or
pop
out
mov
jb
mov
mov
jbe
ja
sbb
lock
jl
add
sub
ja
movb
and
mov
jae
je
scas
jp
push
add
add
loope
xchg
repz
clc
mov
cmp
fucom
add
cmp
lods
sbb
pop
loope
sbb
addb
pop
push
cmpsb
cmp
jg
inc
sbb
mov
rolb
mov
add
imul
repz
mov
fidivrs
ret
jmp
or
dec
push
in
or
push
add
mov
sbb
add
mov
addb
mov
test
out
xchg
mov
lea
lret
inc
xchg
out
add
mov
fnstcw
cmp
pop
add
mov
mov
add
mov
xor
add
dec
mov
cmp
mov
add
lret
lods
in
jne
mov
sbb
mov
iret
mov
mov
push
cmpsl
push
mov
pop
icebp
mov
push
xchg
mov
ja
addb
stc
push
ret
lret
push
out
dec
shll
pop
test
mov
adc
test
mov
bound
mov
dec
inc
cmp
push
adc
std
adc
mov
adc
or
and
xor
add
adc
fst
jae
mov
aam
and
mov
into
and
mov
add
add
mov
add
or
daa
mov
test
jb
mov
aas
mov
cmc
in
outsb
shrl
insl
dec
push
and
mov
add
add
adc
mov
test
dec
addb
mov
push
mov
cmpsb
adc
mov
es
ss
sbb
mov
mov
adc
mov
movsl
je
out
movsl
ja
lcall
roll
push
mov
push
jns
into
inc
jb
mov
inc
add
test
cmp
stos
ret
ja
ss
adc
mov
pop
mov
jnp
pop
push
stc
or
lea
add
fstpt
add
icebp
xor
adc
aaa
inc
add
mov
mov
pop
cmpsb
mov
jne
notl
and
mov
jns
cwtl
pop
sub
test
lret
jge
ret
rolb
pop
or
add
loopne
mov
fucomi
mov
cli
inc
and
mov
xor
and
mov
lock
dec
xchg
pop
mov
mov
add
es
cmp
add
xchg
mov
mov
insl
sbb
dec
inc
test
ret
adc
lcall
mov
adc
mov
jno
sub
in
xlat
pusha
add
cmp
cltd
test
push
stc
inc
insl
hlt
sbb
and
push
pushf
dec
inc
jge
ljmp
xchg
fcomps
add
mov
sbb
inc
sub
nop
add
out
jg
out
jp
lcall
jb
mov
mov
xor
mov
sub
dec
imul
add
adc
mov
cmp
lret
stc
add
mov
aaa
adc
sub
cmp
popa
in
call
mov
addr16
inc
out
add
inc
add
jbe
imul
loopne
mov
outsb
mov
data16
insb
xchg
adc
dec
aad
rolb
adc
mov
dec
cmc
std
and
mov
mov
gs
push
insl
cmp
mov
cmpsl
fldl
pop
mov
add
and
imul
enter
add
out
negb
jns
outsl
aas
mov
push
add
mulb
push
ds
add
xor
mov
adc
sbb
cmpsb
pushf
pusha
add
in
popf
hlt
xchg
jl
sbb
jbe
cmpsl
lds
call
out
testl
pop
outsl
or
js
add
mov
pop
imul
cmp
xor
or
xchg
lahf
push
mov
into
jge
mov
pop
repz
loopne
mov
in
and
add
add
add
push
jl
jl
add
rolb
outsb
aaa
mov
pop
mov
mov
ss
rolb
dec
mov
jne
out
sbb
sub
nop
add
xor
add
xchg
sbb
add
mov
jne
inc
xchg
add
jecxz
leave
addb
inc
popf
jl
aad
add
mov
addb
movsl
sti
test
adc
cmp
out
jae
add
mov
fildl
outsl
cld
adc
and
or
movsb
dec
cmp
ret
adc
add
popa
mov
lods
pop
movsl
cs
pop
cld
xchg
add
jmp
sub
repnz
mov
add
add
mov
sub
add
frstor
xor
mov
mulps
psrlw
push
sub
enter
add
sub
out
aad
add
mov
inc
adc
mov
mov
push
mov
lea
mov
jbe
sbb
add
cmpsb
jb
mov
ret
fadd
cwtl
xor
mov
sbb
nop
add
dec
dec
add
mov
or
mov
dec
mov
mov
iret
mov
add
and
sbb
dec
and
mov
sbb
out
ljmp
setp
add
loop
mov
daa
pop
popa
cmp
xchg
out
add
sbb
add
mov
imul
insl
test
push
add
push
add
add
sahf
push
fcmovbe
jl
out
add
aaa
mov
jl
xchg
mov
pop
pop
out
int3
lret
add
lahf
fists
add
push
pop
repz
add
ret
add
mov
sub
push
add
movsl
mov
inc
in
and
or
mov
mov
add
jge
add
jmp
insl
cmp
add
push
arpl
aad
add
insl
xor
mov
movsl
inc
add
pop
test
mov
mov
mov
inc
jae
jmp
jno
and
mov
imull
mov
inc
call
add
test
add
add
sbb
ret
adc
xlat
push
xchg
pop
dec
cli
xchg
in
fstps
jp
out
add
mov
add
mov
ss
and
mov
lods
mov
loopne
mov
pusha
add
shll
leave
mov
in
and
std
lret
aaa
test
fwait
orl
mov
pop
popa
mov
add
mov
cwtl
arpl
pop
test
mov
call
in
and
push
outsl
jnp
xchg
sarl
adc
mov
mov
mov
inc
cmc
scas
stos
xor
into
lods
arpl
mov
xchg
cmp
dec
push
fistpl
sbb
add
test
pop
mov
rolb
mov
xchg
jne
test
insl
pop
jno
sub
iret
stos
int3
dec
mov
add
mov
pop
fcom
push
test
std
xor
enter
mov
xchg
out
popl
add
jbe
mov
addb
push
cmp
add
mov
jmp
sub
sbb
push
push
lret
mov
add
fildl
add
dec
arpl
movsb
addb
sbb
stc
sub
pop
mov
mov
add
add
clc
addb
pop
call
outsb
dec
add
ret
add
sahf
push
push
push
fs
add
jo
mov
sbb
mov
enter
inc
call
add
add
sahf
mov
mov
cwtl
movsl
xor
in
mov
fisubs
adc
in
add
cmp
mov
add
hlt
sub
add
pop
xchg
add
mov
popf
add
or
sbbl
ret
push
add
mov
mov
xchg
lea
int
jp
add
mov
pop
push
cmp
pushf
fdivs
push
test
addr16
jg
cmp
int
add
ss
sbb
aad
adc
jge
outsb
insl
inc
pop
push
je
and
add
rcl
push
dec
mov
mov
clc
lock
push
rolb
mov
in
movsl
rolb
mov
xor
mov
iret
jnp
sub
ja
add
mov
mov
lcall
mov
add
mov
cli
push
sahf
sub
test
imul
lcall
lea
inc
add
push
stc
mov
push
add
fisubl
or
pop
sbb
test
das
sub
mov
mov
stc
stc
jbe
sti
lods
xchg
fiadds
mov
lcallw
jae
jl
add
add
mov
mov
push
bound
mov
xor
rolb
notl
add
add
mov
jp
testl
jae
insl
mov
mov
mov
lret
mov
stos
cmpsb
jae
addb
sbb
push
cltd
xchg
outsb
rolb
mov
lret
pop
pop
scas
data16
imul
popf
jge
ja
scas
mov
push
mov
leave
xor
inc
insb
mov
mov
pushf
push
add
cmc
pcmpeqb
adc
add
add
inc
add
xlat
or
orl
cmp
push
sub
addb
shll
cli
add
mov
mov
add
loope
push
loopne
mov
xchg
pmaxub
add
mov
mov
dec
out
push
mov
mov
mov
mov
pop
inc
fbld
in
inc
pushf
and
add
add
add
adc
mov
repz
test
mov
push
add
popf
jge
scas
test
add
add
xchg
js
lds
mov
push
add
data16
xchg
and
lea
pop
ficoml
sbb
mov
mov
xchg
sbb
mov
dec
push
fsubrs
and
add
xchg
push
ss
fisttpll
add
cmpsb
test
mov
add
add
mov
add
mov
mov
add
mov
std
inc
dec
and
mov
aad
mov
mov
scas
cmpsl
jp
sbb
add
mov
mov
push
cltd
push
add
adc
mov
aaa
rcll
jl
mov
rcl
adc
add
dec
dec
sbb
imul
jmp
inc
scas
adc
std
mov
add
mov
add
or
add
mov
cmp
mov
test
daa
cltd
sti
mov
add
sub
pop
adc
mov
mov
cmc
add
mov
mov
jo
mov
adc
sub
subl
dec
lock
imul
add
add
jno
bound
mov
or
or
add
fidivrl
mov
out
imul
xchg
sbb
mov
movsl
cmp
inc
sahf
pop
jnp
fldl
cmp
mov
add
insl
adc
lret
aaa
jne
push
cltd
push
cmp
push
dec
jnp
mov
mov
add
mov
subl
xor
adc
inc
add
sub
mov
into
or
out
popa
sbb
les
arpl
and
pop
addb
sub
fistl
addr16
rolb
mov
push
aas
outsb
or
dec
sbb
add
loope
push
lock
add
dec
test
es
add
and
jle
movsl
sbb
insl
lock
add
imul
fs
das
and
addb
popf
or
int3
mov
popa
fcomi
insl
sbb
push
pop
test
cld
cmp
mov
addb
jmp
add
loopne
mov
popf
jge
mov
pushf
arpl
iret
inc
mov
sti
aaa
mov
adc
les
jo
mov
mov
push
lret
xchg
mov
mov
test
and
mov
mov
test
cwtl
lret
dec
mov
xchg
mull
mov
mov
add
add
inc
adc
jbe
sahf
in
ss
movsl
pop
pop
pop
jno
test
stos
dec
ja
cs
push
xor
dec
push
imul
mov
add
jno
repnz
xor
cli
aas
gs
pop
or
sub
and
mov
pop
sbb
jb
mov
add
mov
and
add
fwait
rolb
mov
add
rol
scas
loopne
mov
xchg
iret
and
mov
and
add
mov
cmp
sahf
mov
insl
mov
rolb
mov
scas
pop
cmpsl
mov
pop
rcl
repnz
mov
push
xor
movsb
jnp
push
add
addb
dec
fistpl
push
mov
mov
mov
add
add
lcall
cwtl
or
out
loopne
mov
adc
mov
push
mov
xchg
or
daa
adc
mov
xchg
ret
xchg
ret
xchg
rolb
mov
mov
hlt
mov
mov
xlat
jecxz
xchg
add
mov
loop
mov
into
or
fisubrl
cmp
and
shll
cs
mov
mov
scas
jmp
xchg
add
adc
sub
add
mov
fists
mov
mov
mov
add
in
push
mov
add
fs
in
cltd
cltd
lock
add
rolb
mov
mov
add
aaa
inc
add
dec
les
mov
mov
mov
test
lds
add
sbb
xor
js
pop
fidivrs
mov
mov
mov
or
jnp
add
jne
enter
add
fidivrl
les
test
stc
out
fwait
cwtl
pop
xor
push
out
add
bound
mov
in
or
rorl
lea
push
arpl
add
popa
mov
mov
add
addb
mov
add
mov
ss
add
mov
je
cltd
dec
xorl
call
mov
add
and
stos
lret
jnp
aad
xor
in
push
fnstsw
pop
daa
and
cmp
mov
repnz
xchg
jl
jmp
mov
add
pop
mov
shrl
call
and
testl
out
sbb
gs
icebp
dec
and
lea
sbb
cmp
add
mov
add
dec
out
xchg
add
cmc
adc
sbb
ss
stos
dec
mov
inc
test
xchg
loopne
mov
movsb
filds
xor
stc
dec
mov
mov
mov
add
dec
lcall
loope
rcl
mov
mov
add
mov
sub
imull
push
mov
inc
add
popf
add
rolb
pop
dec
lret
fdivrs
inc
sti
and
add
push
adc
push
shrl
stos
ds
inc
add
pushl
int
and
adc
addr16
ds
mov
jns
movsb
scas
sti
mov
cltd
inc
pop
cmpsl
push
imul
and
mov
fnstenv
cmp
xchg
jo
mov
dec
mov
lock
pop
jmp
adc
push
jl
sub
lods
jno
mov
outsb
inc
add
scas
sbb
jg
xor
fistl
mov
push
inc
cmpsl
adcl
dec
push
jno
in
cmp
cmp
clc
push
add
pop
xchg
out
mov
xor
lds
out
flds
add
add
and
imul
bound
mov
testl
out
mov
aas
push
ljmp
pop
std
loop
mov
les
cwtl
bound
mov
leave
ffree
aaa
sub
std
pushf
ss
imul
mov
mov
mov
xchg
mov
add
mov
stc
push
mov
dec
in
jae
mov
mov
out
shl
mov
mov
add
jge
add
inc
add
add
repz
mov
adc
ljmp
clc
push
cmp
jno
or
outsb
xor
xchg
inc
pop
mov
mov
or
jl
push
mov
add
mov
and
repz
and
mov
loop
mov
pusha
add
mov
icebp
fsubrs
es
rolb
mov
mov
loopne
mov
mov
add
mov
mov
adc
mov
fstpt
or
inc
add
sbb
mov
add
stos
inc
test
rcr
add
add
mov
movb
je
add
daa
ds
mov
add
sub
aam
xchg
push
popa
and
dec
jo
mov
cmp
sub
mov
add
mov
xlat
dec
mov
mov
cmp
inc
inc
insb
sub
cmc
dec
inc
push
pop
mov
jo
mov
lds
loop
mov
sub
jbe
mov
add
es
mov
add
inc
add
xlat
push
in
lock
jecxz
gs
add
roll
xchg
je
adc
mov
and
mov
sub
adc
add
inc
or
add
fcompl
mulb
push
add
push
push
add
ret
xor
lods
mov
inc
inc
gs
icebp
movsb
xchg
add
or
mov
int3
jnp
pop
popf
les
add
push
add
into
fcoms
adc
das
xor
mov
add
adc
into
imul
add
out
div
sbb
xor
mov
jnp
aas
mov
out
rolb
mull
lahf
pop
xchg
movsb
loop
mov
jg
sbb
jne
aam
je
popa
lahf
movsb
movsb
add
add
jns
fadds
dec
inc
popa
cmp
cwtl
and
mov
sbb
add
jns
in
es
scas
and
mov
pop
out
inc
rolb
pop
dec
xchg
jecxz
mov
mov
sub
mov
mov
rolb
mov
outsb
into
movsb
fs
int
lcall
add
mov
push
mov
jl
mov
add
add
dec
in
cmp
mov
dec
sub
out
inc
add
push
jo
mov
mulb
fmul
lret
outsb
cmpsb
addb
fwait
pop
sahf
dec
fisttpl
mov
mov
add
add
idiv
insb
ljmp
add
mov
jb
mov
add
dec
dec
out
pop
rolb
jnp
adc
mov
push
add
sub
cld
jmp
add
rolb
mov
add
mov
shrl
lods
mov
inc
jb
mov
mov
jmp
inc
jb
mov
inc
add
mov
out
sbb
or
xchg
mov
mov
cmp
cli
cltd
mov
cltd
popf
dec
roll
xchg
xchg
ret
adc
mov
mov
outsl
and
mov
or
mov
or
mov
add
movq
push
sarl
lods
add
mov
mov
enter
int3
pop
push
add
fcomip
loope
inc
sbb
out
out
cmp
call
adc
in
inc
jmp
pop
mov
push
add
mov
jl
add
add
sbb
add
xor
mov
leave
cld
dec
je
mov
mov
outsl
fidivs
fistpl
fcoml
add
inc
sub
add
mov
rolb
mov
cmp
popa
inc
pop
out
ss
mov
lret
mov
add
adc
add
fwait
mov
add
leave
pop
lds
scas
mov
iret
dec
and
jecxz
xchg
test
xor
pusha
add
mov
add
cmp
imul
daa
outsb
andl
mov
adc
add
xchg
repz
pop
leave
daa
jecxz
hlt
das
jp
add
mov
in
and
cwtl
dec
jo
mov
add
scas
add
out
jbe
loop
mov
mov
mov
mov
cltd
lea
pop
popf
cwtl
mov
je
repz
pop
mov
jle,pn
xchg
movd
movl
lcall
adc
mov
mov
leave
rolb
div
int
mov
iret
xchg
test
add
mov
repnz
les
push
jae
ss
mov
imul
stc
adc
imul
mov
sbb
loop
mov
jge
lcall
lahf
or
mov
adc
cmc
inc
add
loop
mov
popf
cmp
rolb
mov
into
insb
enter
scas
test
je
stos
fmul
js
fwait
xor
stos
testl
mov
stos
push
es
mov
ja
mov
leave
cld
push
dec
inc
xor
out
and
adc
mov
mov
push
jae
aaa
xor
insb
push
or
or
dec
add
pop
mov
add
ja
jno
inc
add
jecxz
and
ret
data16
and
add
mov
xchg
push
add
dec
add
mov
in
and
js
aad
adc
mov
cmc
jbe
jg
xlat
push
push
add
add
pop
push
push
stos
mov
mov
xchg
mov
rolb
mov
sub
imul
cs
add
add
add
mov
pop
add
mov
mov
pushf
cmpsl
xor
cld
pop
ja
adc
mov
iret
std
rolb
push
add
or
mov
mov
xchg
nop
add
add
addb
dec
push
sub
cmpl
outsl
and
add
push
mov
mov
add
or
popf
and
mov
add
cmp
in
or
pusha
add
ficomps
add
test
lret
into
lret
or
pushf
ret
xor
add
mov
mov
mov
push
jbe
add
mov
pop
orl
jo
mov
and
popf
jmp
inc
add
mov
push
add
add
mov
rcll
sub
ja
inc
push
and
out
sti
sbb
add
mov
add
sub
mov
mov
mov
lds
cmp
xor
add
mov
mov
dec
cmp
mov
mov
in
xchg
mov
mov
div
addl
add
les
or
cmpsb
inc
cmp
mov
rolb
mov
add
mov
int3
jge
aad
add
pushf
add
pop
rolb
mov
fadds
rolb
mov
icebp
popa
fdivrs
mov
mov
add
stc
and
pop
add
mov
jno
add
add
mov
aas
mov
aad
sub
or
add
imul
sbb
add
mov
cli
or
pop
add
mov
out
push
or
xor
scas
push
lods
test
add
in
in
add
cmpsl
mov
rolb
jb
mov
adcl
and
jmp
aas
in
add
scas
in
fldl
xor
add
add
lods
rolb
mov
cmp
sbb
adc
mov
stos
in
fsubr
leave
adc
pop
dec
movsb
fmul
rcll
add
mov
push
add
pop
ljmp
xlat
sub
add
xor
mov
stos
insb
hlt
lret
lods
imul
sub
or
sub
call
mov
mov
leave
cwtl
jnp
xor
add
mov
into
xor
push
fnstcw
mov
pop
add
lods
repnz
enter
lock
jae
adc
mov
rcrl
mov
fcomp
dec
push
sub
out
dec
xor
mov
mov
mov
mov
add
das
adc
add
repz
into
addb
icebp
ljmp
fnsave
add
mov
mov
fdivs
cmp
mov
push
cld
and
push
cmpsl
call
add
mov
push
xchg
adc
loopne
mov
mov
pop
xor
mov
add
mov
shll
inc
fsub
je
add
xchg
rolb
mov
out
add
test
fisubl
int3
jecxz
add
mov
ss
dec
jno
adc
mov
add
dec
xor
mov
pop
xlat
mov
pop
outsl
sahf
push
fildl
mov
test
mov
aam
add
cmp
inc
loop
mov
pop
xchg
aad
sbb
pusha
add
add
cmp
jns
stc
lods
sub
or
mov
pop
push
loopne
mov
repz
adc
lahf
sbb
addb
cmp
jge
sbb
mov
or
movsb
ss
mov
sbb
sbb
outsl
aas
or
mov
push
cmp
ret
sahf
jle
je
and
mov
fwait
mov
xor
mov
and
add
add
out
pop
sub
mov
add
mov
mov
out
lret
ja
push
sahf
pop
jns
clc
jae
adc
mov
jae
add
mov
and
add
cwtl
or
outsl
add
mov
test
push
jl
rolb
mov
add
mov
or
jmp
testl
push
inc
stos
add
faddl
mov
aaa
hlt
icebp
inc
add
fstpl
mov
scas
xchg
push
sti
int3
and
lock
cmc
mov
pop
arpl
push
sub
js
in
dec
mov
push
lret
cli
fsubr
cltd
push
scas
inc
xchg
add
idivb
mov
add
mov
add
add
push
add
lods
jmp
sbb
pop
ret
mov
hlt
cld
in
pop
jl
divb
jp
inc
orl
pusha
add
lahf
dec
pop
aam
add
mov
mov
jbe
xchg
orl
adc
mov
mov
dec
test
sbb
add
add
push
mov
mov
dec
rcr
dec
mov
lcall
mov
push
jns
sbb
cmp
jae
or
push
mov
mov
jge
dec
pop
fidivrl
mov
insl
sbb
cmp
test
jo
mov
mov
inc
add
mov
push
add
xor
mov
xor
add
mov
mov
add
push
notb
sub
pop
fsub
sbb
rolb
dec
or
cmc
fadds
leave
movsl
sbb
lahf
movsb
mov
mov
mov
xchg
add
movsl
popf
test
imul
mov
jo
mov
mov
mov
cmp
jge
mov
inc
add
jg
pop
ficomps
add
mov
add
iret
call
jb
mov
fs
mov
mov
add
push
pop
pop
loope
jl
and
mov
mov
adc
mov
sahf
mull
sbb
and
mov
add
sbb
add
inc
lea
roll
add
ljmp
mov
lcall
adc
ret
addb
xor
imul
inc
and
mov
dec
adc
sbb
jne
lahf
inc
inc
sbb
add
cmp
add
mov
gs
fadd
rolb
mov
mov
adc
mov
addb
inc
into
pushf
cmpsb
xchg
mov
mov
mov
daa
xor
jp
xchg
movsb
imul
push
mov
cmp
aad
lock
sub
aas
mov
mov
cmp
cltd
cltd
sbb
mov
add
out
shll
fistps
dec
sub
lcall
add
and
mov
mov
repz
sbb
cltd
in
dec
rol
add
mov
ss
flds
add
mov
and
mov
adc
mov
add
int3
push
push
inc
out
imull
shrl
add
mov
adc
add
loop
mov
aaa
jne
inc
sub
das
sbb
cmc
ret
push
cmp
add
add
dec
xor
add
stos
pop
movsl
mov
test
pop
in
dec
push
pop
adc
mov
pop
mov
mov
push
mov
test
cmp
pop
scas
sbb
push
xchg
adc
icebp
lret
add
push
nop
add
dec
dec
mov
mov
clc
out
jns
cmovnp
push
add
mov
inc
int3
icebp
clc
pop
lds
add
add
jnp,pt
sbb
sbb
mov
pop
or
fildll
cmpsb
cmpsb
je
mov
test
ja
cld
sub
mov
cltd
lods
repz
jmp
push
inc
test
jnp
testl
mov
popf
cmpsb
out
add
dec
dec
sbb
sub
repnz
add
cmp
add
pop
dec
xchg
add
loope
cmpxchg
mov
sbb
xchg
and
mov
rolb
mov
sub
xor
sbb
pop
or
push
add
jl
mov
lods
mov
push
add
addb
mov
notb
add
xor
mov
mov
fiaddl
fidivs
ret
and
xor
mov
out
xlat
push
lfs
mov
dec
sub
sbb
mov
test
movsl
sub
js
and
adc
mov
rolb
mov
push
add
repz
cltd
push
sbbl
mov
mov
sbb
add
test
sbb
adc
add
mov
pop
and
mov
adc
mov
stc
mov
mov
add
xchg
and
mov
adc
pop
bound
mov
popf
sub
add
pop
jns
pushf
lods
or
cltd
ljmp
dec
push
add
pop
popf
shll
add
gs
fcmovne
movl
inc
dec
or
fisubs
xor
mov
add
stos
and
xor
icebp
les
negb
out
sub
push
pushw
insb
mov
xchg
aad
push
pop
pushf
test
ret
xor
add
add
cld
jo
mov
add
add
adc
adc
mov
sub
sub
adc
mov
add
mov
call
fisttpll
std
and
pop
add
mov
or
jecxz
gs
js
pop
es
add
and
lcall
jno
adc
cmpsl
sbb
jle
cld
mov
sbb
pop
and
jle
divl
repz
xchg
xchg
cmp
jns
cmp
xchg
mov
cmpsl
test
dec
leave
mov
mov
push
pop
mov
rolb
imul
fists
pop
push
scas
ljmp
push
pop
jl
add
out
mov
pop
lds
xor
cmp
data16
ret
into
xchg
movsl
insl
xor
mov
add
add
jbe
outsl
push
pop
lods
int
cmp
mov
sbb
mov
bound
mov
adc
mov
inc
cwtl
int3
out
rcll
inc
rolb
mov
sbb
js
push
xchg
and
mov
lds
add
iret
sub
dec
in
mov
ljmp
iret
dec
inc
mov
push
cli
addb
and
push
mov
add
sbb
inc
das
ret
jb
mov
xchg
addb
lret
js
push
int3
push
shrl
xor
popa
add
add
fwait
xor
mov
xor
mov
addb
fld
clc
ss
pusha
add
fcompl
movsl
fdivr
dec
cmc
cmpl
pop
test
test
inc
aaa
push
jo
mov
xor
pusha
add
out
push
addb
out
cmc
inc
outsb
into
es
cmc
adc
mov
pop
insb
sarl
inc
rolb
mov
sbb
enter
add
ret
cmc
mov
dec
sbb
mov
call
add
add
sub
test
jns
jg
fwait
sub
add
dec
loopne
mov
add
and
sub
add
mov
loopne
mov
xchg
mov
mov
add
push
cmpsl
mov
push
lods
in
mov
addr16
mov
ret
jae
pop
mov
jne
mov
dec
bound
mov
mov
lock
inc
add
mov
jns
faddl
xchg
cli
or
addl
scas
mov
jecxz
or
mov
mov
lahf
add
aas
adcl
iret
stc
jge
mov
xchg
xchg
aam
pop
mov
add
mov
add
in
add
cmp
xchg
jne
test
sub
movsl
jmp
mov
dec
outsl
and
jae
add
mov
add
sar
ret
insb
fdiv
leave
adc
add
mov
rolb
mov
popa
push
add
pop
xchg
add
aad
push
sbb
pusha
add
dec
jne
sbb
mov
adc
inc
push
cli
sub
add
sahf
pop
mov
add
dec
cmc
lea
add
movsb
jmp
inc
mov
mov
mov
inc
idivb
pop
in
cmpsb
bound
mov
roll
dec
pushl
mov
stc
xchg
arpl
mov
mov
stc
outsl
pop
in
pushf
cmpsl
push
adc
add
cwtl
push
int
mov
xor
mov
fwait
push
mov
outsb
pop
loop
mov
mov
jmp
cmp
out
push
jge
add
push
jle
loope
lea
ljmp
or
or
add
mov
pop
mov
inc
in
iret
xchg
inc
test
fdiv
xchg
inc
add
mov
dec
adc
add
and
mov
inc
mov
mov
inc
out
mov
add
mov
fsubr
jb
mov
sbb
sbb
mov
rolb
mov
mov
mov
addb
jno
add
cmc
or
outsl
cs
inc
dec
insl
cmpsl
cmp
test
sub
fstpl
sbb
mov
inc
mov
jg
add
repz
test
sbb
add
add
mov
icebp
dec
push
push
add
cmp
dec
jg
fidivrs
fisubrl
xor
orl
xchg
stos
or
addb
adc
enter
lock
add
jae
sub
mov
andl
mov
stc
mov
icebp
push
stc
fstl
arpl
push
cmpsl
push
add
mov
add
cmp
in
fistps
fcom
sbb
jge
pop
pop
or
xor
orl
or
mov
movsl
jo
mov
jg
out
mov
add
dec
sbb
mov
call
xchg
in
add
mov
dec
loope
inc
add
cmc
insl
aas
out
aam
adc
or
lret
popa
lock
fstl
dec
pop
jp
inc
or
mov
xchg
dec
mov
add
imul
mov
mov
add
inc
or
rolb
mov
mov
mov
mov
aad
push
xchg
popf
loop
mov
add
shll
mov
dec
add
add
test
add
inc
mov
mov
mov
add
add
cs
pop
or
faddl
dec
ja
add
gs
add
push
stos
loop
mov
add
adc
add
mov
add
add
scas
mov
xchg
aas
push
jmp
mov
add
stos
sub
fisubrs
jne
cmp
mov
test
add
mov
loope
mov
add
inc
or
add
push
add
add
cmpsb
mov
push
flds
mov
or
es
lcall
sbb
mov
lcall
mov
cltd
scas
sbb
in
out
mov
add
add
inc
and
aam
test
mov
xlat
clc
xchg
adc
enter
cmp
mov
mov
loop
mov
lea
jae
xchg
dec
ss
aaa
jns
add
add
pop
sahf
fidivrs
add
mov
mov
ljmp
out
and
push
mov
add
mov
popa
add
mov
outsb
jl
xlat
enter
add
dec
lds
xchg
add
xchg
add
mov
and
mov
fidivs
add
add
and
adc
xor
mov
mov
iret
arpl
push
xor
popf
adc
mov
add
inc
add
jno
cmp
fdivl
cld
push
leave
mov
add
adc
inc
xor
mov
je
inc
add
add
notb
sbb
add
add
movsl
lahf
or
adc
in
loop
mov
pop
inc
xor
mov
mov
aaa
adc
mov
xchg
or
mov
inc
js
add
xor
mov
push
xor
sub
mov
add
add
add
rolb
fcom
mov
mov
jnp
push
pusha
add
fidivl
mov
push
daa
arpl
add
sub
nop
add
mov
pop
sahf
es
jnp
lods
bound
mov
or
mov
add
fldcw
cmp
movsb
add
stos
in
pop
jae
adc
mov
repnz
add
dec
cmp
stc
xor
cmp
push
xchg
mov
pop
cmp
loopne
mov
negl
jl
or
pop
inc
push
arpl
jnp
rorl
lods
lcall
fcomps
js
jbe
add
mov
mov
mov
sbb
add
mov
mov
call
cltd
cmpsb
jns
int
or
xor
add
fdivrs
movsb
or
lahf
fs
mov
sahf
inc
mov
pop
fiadds
xchg
stos
jl
int
pop
repnz
add
mov
add
lock
sbb
jmp
pop
ljmp
mov
xchg
hlt
aam
hlt
xor
add
cmpsl
and
decb
add
add
adc
mov
sub
or
dec
gs
sub
lret
push
mov
mov
in
repz
add
mov
and
jge
je
jb
mov
mov
aas
imul
mov
repnz
enter
mov
mov
scas
push
dec
fnstsw
aad
add
incl
mov
adc
add
add
subl
stos
sbb
pop
jle
gs
out
dec
mov
arpl
mov
rolb
mov
xor
clc
adc
mov
movsb
repz
fucom
dec
and
xchg
mov
inc
jge
sub
add
push
lret
mov
out
add
jo
mov
add
xor
ljmp
add
add
mov
jnp
xor
mov
in
dec
or
or
lahf
stos
push
push
mov
and
mov
inc
jo
mov
fcmovbe
add
test
std
test
mov
mov
inc
add
mov
add
push
nop
add
adc
xchg
popf
arpl
xchg
scas
push
into
mov
int
inc
out
clc
push
add
sbb
mov
mov
jle
ljmp
inc
popa
cmp
sub
xchg
mov
icebp
loope
add
xor
pop
and
mov
ficomps
mov
int3
inc
sub
sbb
inc
add
adc
jge
mov
test
mov
leave
dec
dec
sbb
mov
repnz
in
inc
or
imul
mov
cmc
pop
fisubs
mov
icebp
leave
xchg
inc
jbe
add
out
inc
add
mov
mov
push
pop
sbb
es
jmp
in
stos
add
mov
dec
jmp
or
add
push
mov
ret
fcompl
adc
mov
test
mov
push
add
xor
js
lods
mov
jle
jne
mov
mov
stc
in
hlt
mov
add
xchg
add
sub
insl
jbe
add
cltd
and
popf
adc
ss
imul
jl
fs
ds
mov
adc
add
hlt
jmp
ljmp
xchg
out
lea
es
jmp
arpl
or
xlat
test
cmp
xchg
adc
add
cmp
js
inc
add
mov
xchg
push
sub
add
add
and
mov
insl
jg
sbb
mov
repz
data16
mov
sti
test
sbb
lea
inc
ficompl
adc
mov
cltd
xchg
xchg
popf
jno
test
pop
add
mov
insb
cwtl
sub
std
inc
dec
inc
into
js
movsb
cmp
out
xlat
popa
call
add
add
adc
mov
or
and
out
add
add
sti
popf
addr16
js
jge
mov
add
push
mov
adc
push
add
insl
jne
repnz
jb
mov
ret
in
jo
mov
add
xchg
push
repnz
push
mov
inc
add
add
sbb
daa
ficomps
add
mov
cld
inc
add
cmc
cmpsb
repnz
int
add
std
inc
lret
pusha
add
inc
jnp
inc
add
sbb
je
scas
jb
mov
and
movsb
jmp
add
mov
mov
mov
sub
mov
mov
mov
ljmp
addb
sbb
pop
xchg
inc
in
add
mov
add
mov
mov
lock
mov
loope
repz
in
jecxz
fsubp
add
inc
add
dec
shl
add
mov
sbb
test
add
int3
jecxz
mov
jbe
add
xchg
jae
adc
or
and
xchg
inc
notl
add
inc
add
pop
jnp
rolb
mov
scas
lret
mov
adc
mov
push
fwait
pop
outsl
cmp
mov
add
sahf
insb
imul
stc
sarl
pop
fcmovnu
push
data16
mov
xor
mov
mov
adc
add
sahf
scas
xorl
pop
xor
sbb
fists
mov
add
mov
cwtl
push
add
add
xorl
mov
dec
jae
popa
pusha
add
add
xchg
cmc
cmp
loopne
mov
ds
mov
add
pop
loopne
mov
jp
add
mov
push
scas
mov
pop
sub
ja
mov
mov
jp
out
adc
add
pop
fdivr
outsb
loope
scas
and
mov
add
das
inc
cmp
mov
or
add
ds
sti
leave
or
cltd
xchg
add
mov
int
xor
mov
adc
mov
iret
fists
es
inc
add
xchg
xchg
mov
rolb
mov
add
nop
add
mov
sarl
mov
jmp
sub
add
inc
dec
fwait
ret
cmp
les
dec
int
dec
mov
test
addb
ljmp
jecxz
inc
or
add
rorl
dec
mov
loop
mov
push
lcall
and
or
gs
xchg
jno
mov
in
mov
add
mov
mov
add
mov
mov
cmc
adc
mov
cmp
xor
mov
add
add
push
add
mov
jmp
and
fndisi(8087
imul
mov
pop
adc
mov
add
push
mov
stos
xchg
xor
sub
mov
dec
mov
in
inc
pushf
mov
iret
xchg
addl
in
mov
loope
mov
xchg
mov
cmpsb
fbld
dec
add
dec
pusha
add
lcall
add
mov
je
mov
cmpsb
in
enter
push
mov
lret
cld
lahf
sbb
dec
movsl
dec
mov
cmp
cmp
int
aaa
inc
pop
sarl
enter
cmc
push
pop
out
push
cmc
jg
add
scas
fildl
mov
in
xchg
ret
movsl
dec
mov
adc
mov
mov
add
lret
fmul
hlt
cmp
add
sahf
ljmp
cmp
popf
cmp
and
gs
mov
pop
inc
add
pop
js
pop
xchg
cwtl
hlt
jo
mov
test
incb
mov
jp
add
xchg
mov
add
add
test
lcall
idivb
ja
xchg
cld
jnp
sbb
out
dec
cmpsl
aad
mov
int3
orl
sbb
jecxz
mov
mov
add
jmp
and
mov
add
mov
add
xchg
sub
mov
fdivp
in
sbb
add
cltd
mov
pop
xor
mov
add
addr16
and
mov
pop
mov
stc
stos
ljmp
fiaddl
sbb
adc
or
add
jp
add
lahf
or
lods
test
popf
outsb
repz
js
stos
adc
mov
lret
mov
xchg
arpl
lcall
xchg
sarl
pushfw
loope
sub
jb
mov
inc
adc
jb
mov
sbb
aam
add
shll
mov
mov
mov
and
lods
jbe
rolb
jl
add
mov
cmp
add
dec
and
mov
mov
cli
push
filds
xchg
xor
lods
fildll
mov
ror
das
les
ds
add
add
add
mov
sub
das
ds
add
mov
dec
lahf
xor
mov
mov
mov
xchg
add
fmuls
scas
xor
mov
push
testb
add
add
aas
xor
or
loop
mov
add
mov
add
or
out
cmp
mov
mov
xor
xchg
jb
mov
jp
dec
pop
addb
dec
bound
mov
adcl
sbb
add
mov
push
or
or
sub
mov
dec
lret
leave
repz
and
mov
mov
add
lcall
cmp
fisubrs
aad
mov
mov
arpl
jnp
pop
js
pop
mov
mov
in
lea
add
mov
out
int3
and
push
hlt
jns
push
and
aad
dec
out
push
fwait
and
shld
mov
push
or
psrlw
daa
loop
mov
out
xor
fwait
cmp
stc
mov
and
add
stos
fsubs
in
add
lahf
mov
test
jns
mov
mov
test
jbe
lret
jp
add
mov
push
mov
addb
icebp
cltd
xor
pop
lods
jl
lea
scas
std
pop
or
sbb
shrl
popf
sbb
add
pop
leave
or
adc
xchg
xor
mov
mov
add
xchg
add
scas
xchg
xchg
dec
jmp
decb
aad
das
dec
jp
sti
stos
sbb
xchg
arpl
mov
cmp
sub
insl
push
daa
and
add
push
or
sub
cmp
hlt
sub
imul
pop
in
movsl
pop
iret
ret
mov
mov
call
ret
or
mov
in
arpl
xor
mov
arpl
pop
jl
mov
scas
and
inc
addb
pop
inc
add
sub
bound
mov
ret
add
mov
add
add
and
mov
in
aas
ja
cli
push
mov
push
add
dec
roll
jmp
pop
gs
add
movl
jecxz
sbb
mov
or
add
fiaddl
cli
das
aas
test
add
add
add
jno
and
mov
call
mov
mov
jge
add
add
add
sub
addr16
dec
nop
add
adc
add
cmpsl
insl
xor
fimull
sbb
add
inc
sti
adc
xchg
xchg
sub
gs
fsqrt
dec
push
sbb
stos
enter
outsl
mov
popf
loopne
mov
cs
add
mov
setne
add
stc
scas
ror
les
xchg
ss
add
das
aam
pusha
add
add
add
dec
mov
add
add
mov
test
adc
add
dec
fwait
mov
mov
jnp
mov
bound
mov
cli
adc
cmpsl
test
and
mov
mov
ret
cli
js
sti
cmpsb
mov
add
add
sub
add
stos
mov
outsb
and
mov
mov
sbb
mov
push
iret
fwait
stos
mov
mov
dec
iret
push
fnstsw
sub
mov
add
adc
mov
push
into
jle
and
lds
call
rorl
popa
fmuls
pop
pop
mov
scas
movsl
push
add
fisubrs
jno
add
out
addr16
int
test
pop
dec
push
push
xchg
add
aas
xchg
dec
cmc
lods
leave
push
cltd
or
daa
or
xor
mov
out
add
xor
sbb
and
mov
rolb
mov
mov
xchg
add
je
mov
rolb
lods
pop
mov
and
fbstp
and
out
add
dec
das
out
adc
mov
add
xor
mov
repz
popa
sbb
mov
mov
pop
dec
push
dec
in
add
addl
sbb
rolb
out
dec
mov
xchg
jg
mov
pop
cmp
dec
adc
fildl
or
mov
pop
lds
jecxz
xor
adc
ja
movsl
jns
scas
inc
movsl
lea
movsb
pop
enter
sub
pop
aaa
mov
shr
mov
add
mov
sarl
mov
xchg
sbb
mov
inc
xchg
mov
pop
sbb
jle
sbb
mov
repz
xchg
test
jp
add
mov
jnp
ja
push
jo
mov
add
mov
jno
add
xchg
test
movsl
jb
mov
in
cmp
push
add
mov
or
xor
xor
mov
repnz
mov
mov
add
lea
sti
icebp
mov
lods
cmp
push
cltd
testl
dec
test
xchg
add
mov
test
mov
incb
test
leave
mov
inc
push
fldenv
inc
mov
mov
xor
mov
push
add
cli
cmpsl
push
mov
inc
test
xor
mov
jecxz
add
cmpsb
jno
loope
push
fnstcw
les
ljmp
add
ret
dec
add
sub
xchg
ret
push
xor
mov
fdivrs
mov
inc
xor
jns
add
fwait
adc
mov
hlt
push
outsb
icebp
and
mov
sub
add
sbb
add
push
add
nop
add
dec
or
pop
ljmp
sahf
aad
nop
add
add
or
dec
jbe
sub
mov
aas
mov
hlt
decl
fcmovnu
jge
jmp
jne
rolb
mov
xchg
pusha
add
mov
rolb
add
mov
and
push
sbb
roll
dec
jno
and
stc
push
gs
mov
orl
xchg
add
mov
fld
pop
int3
addb
jp
sub
hlt
popa
cli
enter
add
loop
mov
roll
or
or
pop
flds
mov
add
dec
in
mov
cltd
sbb
clc
pop
loop
mov
cs
repz
sub
hlt
or
xchg
cltd
loopne
mov
rolb
mov
pushf
push
stos
pop
sbb
pop
sbb
cs
ficomps
add
sbbl
xchg
add
nop
add
mov
lea
test
jb
mov
icebp
enter
movsl
loop
mov
mov
addb
cmp
mov
ljmp
loop
mov
mov
fsubs
inc
and
fisubrl
gs
cmp
jbe
mov
icebp
mov
sbb
push
ja
repnz
sub
cmpsb
outsl
sub
add
frstor
fnstcw
cltd
push
std
inc
add
dec
arpl
sbb
ljmp
call
mov
aad
add
adc
mov
sub
adc
mov
popf
xor
sub
sbb
add
lods
add
mov
in
add
mov
mov
mov
pop
out
lret
mov
loope
mov
dec
rolb
mov
out
stc
jp
scas
sub
sti
cmp
xor
mov
pushf
addb
mul
loop
mov
pop
dec
xor
mov
and
mov
and
js
pop
lea
xor
mov
push
push
int
pop
nop
add
mov
and
and
mov
add
mov
fcoml
lcall
xchg
push
gs
lods
adc
push
add
dec
gs
imul
xchg
add
mov
test
iret
lret
and
xchg
inc
out
push
mov
int
enter
mov
add
in
imul
data16
add
div
dec
xor
mov
add
mov
and
mov
adc
cltd
cmp
sub
loopne
mov
xchg
cs
pushf
std
pushl
add
addb
mov
mov
stc
inc
sbb
mov
jbe
iret
jp
dec
addb
std
addb
dec
xchg
add
mov
fldcw
add
sub
jp
test
mov
pop
xor
push
mov
add
push
iretw
and
or
add
dec
mov
mov
mov
notb
or
sub
push
jmp
add
jne
add
sbb
cmp
nop
add
mov
xchg
jbe
lds
lods
xor
add
jp
inc
add
push
add
incl
adc
xor
mov
lods
in
int
jmp
cmp
pusha
add
aaa
insb
adc
outsl
adc
mov
or
add
add
mov
inc
repz
push
iret
sub
add
add
cmc
imul
lea
add
cmc
sbb
cli
mov
jae
or
mov
xor
add
mov
ja
movsl
inc
cmp
add
or
or
and
mov
iret
inc
movsl
pop
jp
xor
add
add
mov
repz
or
mov
notb
sahf
inc
sti
fidivl
iret
inc
xorl
mov
sbb
add
call
fisttpl
add
lods
aam
nop
add
cltd
xchg
add
cmp
mov
mov
faddl
iret
outsl
jl
lcall
mov
jge
rolb
mov
xor
mov
sbb
mov
mov
rorl
ss
cmp
add
test
fcoml
push
or
lods
cmp
cmpl
xor
mov
lock
rolb
mov
mov
pop
push
lret
mov
pop
xchg
add
incl
sbb
add
mov
enter
and
leave
xchg
add
mov
das
shll
jno
add
mov
cmp
xchg
add
mov
dec
mov
fdivrl
testb
loope
fmuls
jl
xor
popl
add
enter
mov
add
dec
xor
add
push
or
and
add
pushl
lds
mov
add
add
mov
add
or
inc
push
add
das
and
cs
fcoml
loope
ret
not
add
add
sub
or
hlt
andl
xlat
jmp
add
sub
jnp
push
push
arpl
cmp
ja
cmpsb
mov
std
cmp
in
xor
add
insl
jmp
mov
daa
mov
mov
fdivrs
jle
cwtl
mov
lea
inc
add
sub
rolb
mov
mov
mov
dec
cltd
adc
sbb
add
sbb
mov
out
mov
push
add
mov
stos
ss
dec
add
inc
sahf
ffree
add
or
add
test
jecxz
pop
push
xsave
stos
shrl
cmp
jo
mov
pop
call
arpl
mov
cmpsb
fdiv
add
je
pop
cltd
mov
jl
push
lds
loop
mov
test
scas
cmp
mov
mov
rolb
mov
jp
sub
add
rorl
and
mov
bound
mov
lock
ljmp
mov
inc
jnp
mov
mov
pop
pop
add
mov
out
jnp
push
add
xchg
and
mov
int3
leave
add
pop
pushf
cmc
iret
inc
or
fimull
movsl
mov
mov
dec
in
scas
sub
and
mov
sbb
add
stos
jp
dec
mov
add
cmp
je
add
decb
cwtl
loop
mov
lret
jae
out
jae
sub
and
pop
cmc
rcll
pop
push
popa
jg
add
add
adc
sbb
jb
mov
add
dec
sbb
jmp
add
mov
inc
pop
decb
sbb
push
test
sahf
cmpsb
sub
mov
pusha
add
mov
mov
xor
sbb
mov
push
add
add
xor
cld
add
lock
and
push
mov
add
xchg
push
push
sbb
inc
and
mov
call
sub
mov
cmc
dec
mov
dec
push
fisttpl
or
aad
pop
js
insb
pusha
add
mov
push
stos
jle
cmp
addb
loop
mov
mov
repz
inc
add
loop
mov
dec
pop
jle
mov
lahf
mov
cmp
add
add
jb
mov
les
xlat
fnstcw
or
jae
adc
arpl
movb
sbb
mov
shr
cltd
jnp
imulb
cmp
mov
or
mov
mov
add
mov
mov
pop
pop
inc
mov
test
pop
pop
in
cmp
add
mov
daa
pop
leave
xchg
add
mov
sbb
dec
rolb
mov
enter
mov
pop
addb
lods
inc
add
xchg
inc
add
fstpt
cmp
lret
test
cmp
xor
add
ffree
into
jo
mov
clc
lods
sub
mov
pusha
add
pop
dec
stc
sub
mov
mov
mov
fbld
adc
mov
lcall
push
dec
mov
dec
int
add
nop
add
pop
dec
insb
icebp
adc
mov
cmpsb
cmp
fmull
cmp
mov
adc
mov
lods
xor
add
mov
sub
icebp
dec
and
gs
scas
push
dec
popa
loopne
mov
add
push
into
jbe
rcll
add
mov
xor
rolb
jge
mov
subl
add
jo
mov
push
in
enter
mov
mov
aaa
push
nop
add
add
gs
cmpsl
mov
mov
insb
or
jmp
ja
mov
jecxz
test
inc
add
mov
add
mov
mov
stc
xchg
adc
push
add
mov
xor
jle
out
add
flds
imul
and
add
mov
dec
mov
std
enter
add
dec
cmpsl
insb
sbb
mov
addb
cmpsb
clc
xor
sbb
aam
add
out
test
enter
lahf
mov
lret
mov
mov
mov
jne
fwait
call
add
ret
push
jne
push
add
xchg
test
mov
mov
add
lret
cmp
roll
xchg
fs
or
add
push
imul
adc
mov
hlt
or
mov
sbb
bound
mov
add
and
icebp
pop
xlat
xchg
add
ds
loop
mov
inc
add
push
lea
mov
add
adc
mov
or
mov
add
scas
xchg
addb
push
xchg
add
dec
push
add
jns
add
sahf
mov
jmp
add
sub
mov
gs
add
shl
fisubrl
pop
xor
mov
mov
push
pop
xor
mov
and
dec
sub
push
add
pop
fwait
fwait
mov
lret
enter
mov
xchg
mov
add
dec
sub
lahf
pop
cmp
push
add
add
jno
inc
test
sub
jecxz
bound
mov
fnstsw
mul
mov
cld
mov
mov
add
mov
mulb
test
add
insb
into
mov
in
mov
add
push
dec
aas
mov
cmp
fisubrs
or
mov
data16
mov
add
out
lods
push
rcll
fimuls
in
aaa
rcll
add
cmp
add
out
movsb
mov
push
std
andps
mov
add
push
clc
int
add
cmpsb
jne
push
inc
add
push
insl
rolb
mov
mov
loopne
mov
xor
out
push
cltd
test
adc
dec
fsubrl
iret
out
addb
jle
cmp
imul
addb
test
mov
sbb
jb
mov
add
imul
fiadds
mov
add
add
mov
leave
cli
out
jae
xor
mov
roll
add
add
mov
mov
mov
inc
xchg
negl
mov
push
mov
inc
add
or
mov
add
mov
rolb
mov
loop
mov
mov
mov
mov
out
dec
or
add
add
add
add
mov
addr16
aad
dec
es
xchg
incl
add
push
add
mov
add
add
mov
cmc
sbb
sbb
adc
cmpsb
xor
mov
mov
insb
add
mov
mov
jae
add
mov
mov
std
lock
flds
jbe
fiadds
add
ret
enter
das
pop
lds
xchg
ja
add
jbe
hlt
push
pop
test
into
arpl
xchg
pushf
cs
add
sbb
out
int3
and
and
dec
push
adc
mov
mov
add
mov
xchg
int
sub
idiv
imul
loopne
mov
enter
fldt
mov
xor
mov
daa
addr16
js
add
jne
outsl
pushl
mov
mov
mov
cmp
jl
add
pop
cmpsb
sub
clc
stc
imul
addb
hlt
es
cmp
clc
pop
iret
bound
mov
lods
sbb
pop
incb
add
insl
xor
test
and
jle
popf
insl
inc
sbb
push
add
cmc
mov
mov
aas
xchg
jmp
imul
xlat
pop
fidivl
fstl
ljmp
mov
add
pop
pmulhw
mov
cld
sahf
xchg
cwtl
mov
add
xor
mov
mov
push
leave
into
jecxz
sbb
adc
mov
rcrl
add
inc
add
add
jns
pop
mov
into
scas
outsb
push
jno
add
mov
pop
outsb
mov
outsb
out
jle
fbld
sub
shr
mov
add
dec
adc
sbb
enter
test
testl
dec
push
insl
push
push
loope
clc
insb
push
iret
into
in
pop
cmp
mov
xor
mov
cmp
pop
call
int
fcompl
mov
mov
dec
je
jecxz
les
xor
mov
mov
add
add
test
mov
or
adc
mov
lret
inc
or
xor
icebp
shll
pop
adc
and
dec
mov
jo
mov
add
lret
and
loopne
mov
xor
mov
ja
xor
mov
popa
popa
pop
fdiv
push
aam
call
add
add
push
outsw
stos
sahf
or
lret
xor
lret
bound
mov
add
add
loope
add
xor
or
add
sahf
aam
addb
pop
pop
add
mov
add
cli
jl
pop
lahf
filds
in
lcall
mov
cmp
iret
sub
mov
mov
mov
jb
mov
push
shll
jns
imul
pop
add
add
mov
mov
addb
mov
add
add
sbb
fldenv
xor
mov
add
mov
pop
cmpsb
and
mov
sub
lds
add
add
stc
cmpsb
adc
int3
mov
adc
add
inc
cmp
add
add
lea
scas
mov
add
mov
mov
or
hlt
inc
pop
dec
push
sbb
add
repnz
dec
mov
lds
cltd
fld1
or
movsl
cmp
add
add
enter
repnz
add
xchg
lds
mov
repnz
add
mov
icebp
leave
daa
inc
sti
xor
mov
add
mov
add
xor
fnstsw
in
shll
add
ljmp
clc
or
mov
jmp
add
mov
jne
cmpsb
popf
and
mov
add
mov
test
add
add
add
pop
xor
mov
mov
fistl
xchg
xchg
add
pop
repz
sahf
pop
sbb
add
mov
repz
sub
jnp
cld
xor
add
insb
jle
push
add
sub
sbb
fists
int
rolb
mov
pop
sbb
or
loop
mov
and
mov
jle
cmpsl
dec
stos
mov
xor
add
xchg
mov
mov
pushl
push
pop
xchg
add
mov
mov
nopl
adc
mov
add
rcll
test
mov
mov
push
shr
pop
jg
pop
mov
mov
test
ja
fwait
dec
push
dec
push
xbegin
movsl
pop
dec
lahf
mov
add
wbinvd
fildl
addb
add
mov
loopne
mov
hlt
fstpl
enter
dec
xor
sbb
movb
out
ret
mov
imul
inc
jg
call
in
rolb
mov
sahf
mov
add
mov
cltd
add
daa
add
or
xchg
xchg
dec
scas
mov
test
lea
xor
dec
or
loope
mov
add
les
faddl
add
lock
mov
jb
mov
add
aaa
jl
push
cmp
repnz
je
pop
jp
lock
mov
test
jp
inc
fadd
bound
mov
test
add
nop
add
gs
aas
mov
xor
add
sbb
mov
and
inc
add
cld
popa
mov
aas
insb
js
fs
sbb
faddl
add
js
ja
bound
mov
mov
mov
mov
mov
call
es
push
push
aas
rcr
add
cmpsl
add
mov
cs
leave
mov
xor
mov
test
jne
addb
das
das
jbe
call
pop
push
sti
xchg
test
pop
push
movsb
int
pop
push
jo
mov
in
mov
dec
jecxz
test
mov
int3
and
mov
out
inc
ja
dec
pop
fisttpll
sub
loop
mov
inc
ret
or
dec
subl
mov
jle
xor
mov
mov
mov
movsl
test
add
mov
in
inc
sbb
push
fcmove
push
test
cld
xchg
mov
sub
jb
mov
punpckhdq
adc
mov
sahf
sub
test
jle
call
pop
fimull
add
add
add
sub
ljmp
test
fldt
out
daa
loopne
mov
sahf
cmp
sub
sub
jb
mov
daa
or
push
mov
mov
aas
repnz
sbb
cmp
fistps
mov
pop
cld
movsl
jns
repnz
xor
mov
movsb
dec
push
lahf
pusha
add
int3
mov
mov
mov
push
inc
add
add
jne
cmpsl
lock
add
cmp
cmpsb
ret
call
cmp
add
add
in
enter
ss
mov
cwtl
dec
lret
mov
scas
inc
cmp
add
stos
xchg
push
fdivrl
pop
dec
push
es
cmp
and
es
add
addr16
addb
inc
add
icebp
sub
or
rolb
mov
sti
pop
jp
xor
mov
das
push
xor
rolb
mov
adcl
data16
mov
loop
mov
cmp
dec
push
jl
inc
add
pushf
ret
and
mov
cs
dec
mov
idivb
add
mov
add
ds
cmp
pop
cmp
jl
push
lret
cmc
push
stos
jnp
gs
outsl
sub
mov
outsl
or
iret
stc
jb
mov
movsb
push
and
or
aad
paddsb
mov
stos
xchg
data16
lcall
jno
mov
add
add
pushf
rolb
mov
int3
addr16
xor
xor
mov
adc
jne
cmpsb
addr16
mov
mov
mov
imulb
add
mov
add
repnz
mov
adc
add
out
stos
mov
fadd
pushf
addr16
shll
dec
dec
shll
mov
scas
push
scas
out
sbb
mov
jae
mov
pop
sbb
add
iret
xlat
data16
mov
insl
jg
pushl
mov
sbb
add
mov
and
movsl
test
push
sub
das
pop
push
shll
or
mov
xor
adc
mov
insl
or
popf
xchg
xchg
rcrl
push
xor
add
mov
push
and
mov
sub
ret
stos
or
mov
mov
imul
test
scas
xor
mov
leave
ret
push
add
aaa
inc
add
imul
add
mov
sub
aas
pop
xor
mov
mov
mov
mov
loope
bound
mov
mov
add
mov
mov
add
jbe
jb
mov
pop
push
add
jmp
ficoms
xchg
stos
lods
cmp
cmp
add
lods
popa
ret
jne
lret
es
sbb
xchg
fwait
dec
rolb
jp
into
adc
mov
mov
addb
lret
mov
mov
lret
push
add
mov
pop
mov
or
mov
in
mov
inc
add
leave
and
inc
add
addl
push
mov
inc
lds
fiadds
out
ds
add
mov
out
mov
add
add
inc
and
xchg
ds
cs
add
in
nop
add
mov
adc
out
cmp
add
mov
add
popa
call
aam
test
lret
rolb
add
mov
xchg
gs
pop
mov
and
sbb
jp
add
aaa
jmp
add
mov
fwait
xor
adc
jle
cmpsl
lock
push
pop
xchg
lea
jae
add
leave
mov
xor
and
mov
lods
jge
mov
mov
push
jno
xlat
cmp
push
ret
inc
jo
mov
mov
dec
les
fst
data16
hlt
mov
xor
mov
cmp
add
sbb
sbb
test
xchg
push
out
add
icebp
xchg
add
int3
xor
mov
or
and
mov
sbb
add
cmp
xchg
sbb
cld
sub
jge
jecxz
add
outsb
jmp
loope
adc
mov
dec
mov
cltd
mov
push
jae
fsubrs
inc
sbb
fcmovu
rcll
push
ss
xchg
add
pop
mov
fists
bound
mov
adc
mov
xchg
les
fisubrs
int
xchg
pop
fadds
repnz
sbb
add
lock
sub
cmp
mov
add
xchg
lods
sti
mov
and
mov
loope
push
jnp
xchg
mov
mov
out
jge
loopne
mov
jno
xchg
cmp
aad
add
fsubrl
add
addb
daa
jg
fsubr
mov
movsb
and
mov
mov
cli
adc
xor
add
mov
imul
mov
mov
xor
fs
fcmovb
mov
scas
ds
inc
icebp
pop
jmp
arpl
mov
imul
addl
mov
lret
jb
mov
or
jp
xchg
dec
sbb
inc
add
mov
mov
pusha
add
add
push
mov
and
pop
cmp
das
jns
rolb
mov
add
mov
dec
pop
mov
outsl
fwait
andl
mov
jp
xchg
hlt
outsb
jno
pop
push
aam
jl
jg
int3
addb
xor
add
sbb
push
sti
mov
sub
add
add
repz
pop
test
jmp
or
ljmp
xchg
xor
popf
das
mov
cmpsb
sub
out
sbb
call
add
and
xor
aam
add
aad
ret
or
inc
icebp
mov
mov
or
push
jbe
out
add
fidivrl
sbb
mov
mov
inc
add
add
mov
add
add
mov
incb
xor
xor
arpl
jae
sbb
add
mov
bound
mov
mov
call
adc
mov
jb
mov
add
pop
jmp
mov
sarl
mov
insl
in
jl
enter
orl
mov
mov
inc
rolb
mov
jno
aad
push
adc
mov
aam
sub
dec
push
add
jg
add
inc
and
mov
pop
sbb
mov
mov
mov
rcrl
sahf
or
mov
sub
or
add
fs
data16
mov
stos
fdivp
repnz
xor
mov
mov
inc
sbb
mov
mov
dec
lret
stc
dec
pop
xorl
aas
data16
add
mov
push
add
inc
mov
popf
mov
imul
lea
xchg
nop
add
push
add
pop
lcall
jl
hlt
mov
into
pop
loope
or
mov
mov
jae
adc
mov
push
add
sub
mov
repnz
dec
xchg
cmp
lods
in
sbb
cmpsl
insb
add
mov
movsl
test
mov
mov
mov
add
pop
push
mov
fcmovnb
add
sbb
int
lods
rolb
ficompl
mov
aam
jb
mov
jp
dec
lods
cmp
in
add
xchg
add
push
popf
fwait
stos
jp
daa
jg
inc
sbb
sbb
jg
add
repnz
or
int3
or
add
mov
das
popf
push
add
mov
add
add
xor
mov
scas
mov
mov
mov
jg
add
sub
fisubrs
bound
mov
inc
xchg
push
cmpsl
mov
add
push
mov
push
add
add
xchg
and
mov
stos
cmpsl
jecxz
or
sbb
cmp
mov
mov
mov
mov
ss
adc
das
adc
xlat
lods
addr16
jp
sub
cmc
mov
out
add
mov
mov
lods
adc
xor
add
or
add
sub
shr
les
pushf
lea
dec
ljmp
addr16
stc
add
jo
mov
sbb
pop
mov
sub
nop
add
adc
mov
repnz
repz
std
mov
mov
mov
je
popa
jge
sub
push
mov
rolb
repnz
cwtl
or
iret
ja
mov
lds
popf
je
push
xchg
cmp
lods
xlat
push
mov
mov
cltd
nop
add
inc
ja
xor
mov
add
or
adc
mov
insb
or
ret
fimuls
cltd
sub
dec
sub
add
jge
sbb
inc
xor
mov
add
mov
add
mov
push
lret
mov
and
and
mov
fs
fwait
dec
xor
mov
jg
rcll
push
sahf
out
in
push
or
hlt
push
out
push
xor
jle
cmp
push
pop
out
inc
fisubs
mov
mov
fwait
and
mov
add
fwait
add
imul
movsb
imul
add
sub
xchg
xor
mov
jnp
sbb
or
jle
lods
pop
mov
mov
add
or
cld
mov
outsl
sbb
jg
add
add
out
cli
adc
mov
rolb
mov
stc
push
adc
push
add
jbe
xchg
mov
mov
jecxz
les
les
lods
mov
jmp
ja
nop
add
mov
add
mov
loopne,pt
mov
mov
mov
mov
inc
add
in
ficompl
xchg
xchg
sti
divb
add
mov
repz
cmc
sbb
add
cmp
aam
sub
inc
add
mov
sbb
pop
xchg
dec
sbb
shll
mov
add
add
inc
aas
push
push
jb
mov
add
xor
mov
addb
xor
add
add
mov
mov
stos
sti
int
push
cs
and
or
mov
cmpsb
scas
xchg
push
jl
int3
rolb
data16
aas
sbbl
test
sbb
xchg
cmp
fidivs
les
add
std
inc
add
add
hlt
out
add
mov
jbe
fwait
int3
addb
ficomps
movsb
inc
xor
xor
icebp
mov
ja
lds
mov
or
dec
incl
add
add
add
dec
out
outsb
pop
jl
push
lret
mov
cmpsl
adc
movsb
ja
xor
sub
jne
mov
pop
pop
push
add
mov
add
mov
push
pop
pop
decl
and
mov
out
loop
mov
jno
sbb
pusha
add
mov
add
cli
cmp
dec
jne
test
inc
inc
add
popa
in
subl
push
adc
mov
repnz
daa
scas
scas
pop
lret
jbe
dec
in
js
call
dec
mov
nop
add
push
mov
mov
or
rolb
mov
aas
movsl
jae
lods
rolb
xchg
imulb
movsl
pushf
dec
add
mov
pushf
sbb
cmpsb
xor
mov
cld
jge
mov
lcall
add
sbb
call
xor
mov
xor
mov
push
add
sub
pop
dec
and
mov
cltd
jns
lods
pop
sub
lock
ds
push
dec
push
ds
xor
mov
mov
xchg
add
dec
std
inc
xchg
add
fisttpl
sbb
test
mov
inc
pop
push
jo
mov
out
out
add
mov
sti
minps
mov
push
loopne
mov
inc
add
push
xor
mov
and
mov
inc
lds
int3
xor
mov
dec
cmpl
cmp
inc
add
jb
mov
cmp
imul
in
jmp
cmp
loopne
mov
inc
add
mov
gs
sbb
mov
jo
mov
xchg
negb
push
repz
dec
fidivrl
add
sub
mov
push
sub
enter
or
arpl
es
add
mov
cmpsl
and
mov
mov
les
mov
and
lds
repz
sub
or
repz
leave
push
xchg
mov
adc
add
gs
fbstp
mov
rorl
add
rolb
mov
aas
mov
xor
jb
mov
push
clc
and
sub
fldt
aam
faddl
and
push
ja
add
lds
sub
pop
aam
add
mov
lods
int
ja
jp
xchg
adc
and
mov
xlat
les
daa
cmp
mov
scas
cmpsl
dec
mov
and
mov
outsl
stc
or
jbe
add
and
je
popa
outsl
or
imul
mov
cs
mov
cmc
pop
sub
pushf
inc
xchg
add
xchg
cmpsb
int3
sti
lds
add
fs
add
add
sub
lret
dec
push
jl
add
mull
mov
push
mov
addb
scas
setae
inc
popf
jbe
mov
add
inc
xor
push
rolb
mov
mov
mov
pop
aam
enter
shll
cmp
add
and
mov
in
inc
add
jbe
into
pusha
add
in
outsl
and
push
repnz
inc
test
fisubs
mov
std
jne
sahf
inc
mov
mov
loope
inc
loope
pop
mov
arpl
hlt
xchg
add
mov
pop
push
or
pusha
add
xor
cmpsl
inc
rolb
push
out
xchg
xchg
xor
mov
adc
lds
jl
add
mov
mov
mov
add
inc
les
add
xor
jl
imul
add
in
mov
enter
xchg
ret
mov
outsl
ljmp
gs
lods
sbb
add
aad
enter
lahf
addr16
loopne
mov
in
sub
jns
cmp
jle
sub
push
in
mov
mov
xchg
lahf
enter
rolb
mov
mul
arpl
jecxz
rolb
mov
cmpsl
test
out
iret
adc
mov
mov
sub
add
mov
dec
mov
les
push
or
pushf
cmp
mov
mov
mov
ljmp
cmp
mov
cmp
mov
test
cs
pop
out
out
fs
pop
stos
outsb
sub
insl
and
mov
jb
mov
sbb
add
hlt
sbb
add
shrl
mov
and
mov
shll
outsb
test
xor
add
sub
add
sbb
cmpsb
mov
push
mov
mov
pop
mov
std
test
ljmp
mov
cmp
mov
adc
mov
push
movsl
rorl
std
stos
fsin
pop
sub
rcr
jp
adc
mov
push
or
push
rolb
mov
lods
loopne
mov
pop
daa
push
xor
mov
add
or
mov
fiadds
push
aas
dec
or
dec
jp
jno
adc
mov
lcall
add
sub
push
sub
add
dec
xor
mov
fucomip
pop
iret
test
jb
mov
or
test
or
data16
rol
inc
mov
cli
add
mov
push
sbb
jl
cmc
xlat
scas
mov
arpl
rolb
js
adc
mov
add
and
cmpsb
fbld
addb
mov
mov
adc
sbb
jge
mov
add
aad
scas
in
jmp
xor
add
mov
call
stos
pop
xchg
loop
mov
stc
lret
pop
pop
sub
add
sub
inc
push
aam
jl
push
addb
add
push
xchg
cmp
sbb
mov
mov
test
add
add
dec
rolb
mov
adc
push
mov
add
and
mov
movsb
stc
mov
mov
test
lods
rolb
mov
sub
sti
xchg
xchg
adc
add
xchg
int
add
mov
clc
mov
sbb
mov
push
mov
add
mov
add
cmp
push
add
hlt
mov
and
mov
fs
mov
imul
add
stos
lock
jmp
cltd
inc
pop
lret
sti
loope
aam
fdivr
test
pop
insb
mov
mov
inc
movsl
gs
mov
jo
mov
push
add
cmp
adc
mov
hlt
sub
cmpsl
test
repnz
sahf
sbb
int
dec
jl
cld
lods
mov
cld
jno
pop
cmpsb
fdivrs
xchg
ja
aad
mov
lret
sub
mov
add
add
mov
mov
xchg
cld
mov
and
push
add
add
mov
mov
sbb
mov
mov
inc
mov
mov
jg
lods
adc
lcall
and
mov
aad
sub
sbb
push
add
ret
rolb
mov
lods
mov
bound
mov
add
xchg
pushf
rolb
mov
stos
pop
call
loopew
add
jmp
push
jecxz
addb
nop
add
jp
mov
mov
out
fistps
mov
jge
sti
jge
les
push
movsl
out
dec
mov
push
adc
xor
mov
dec
fisttpll
add
aad
mov
gs
dec
mov
cwtl
pushl
cmpsb
pop
jno
add
add
lret
js
in
or
pop
mov
mov
out
inc
dec
add
mov
add
mov
jns
xor
mov
sub
pop
mov
sbb
add
pop
loopne
mov
stos
loopne
mov
adc
mov
push
pop
push
lds
adc
add
jmp
sbb
jae
sbb
mov
jb
mov
addb
lret
ja
sub
push
lret
jmp
jg
add
adcl
inc
sbb
xchg
fadds
add
mov
test
scas
jae
jl
and
add
pop
rcrl
add
fs
mov
add
fdivs
rolb
incb
add
adc
ret
xchg
lock
in
jmp
add
mov
add
mov
inc
add
stc
movsb
push
das
lret
xchg
insb
add
shrl
sub
add
jle
sbb
test
out
pushf
jle
testb
pop
and
mov
pop
add
inc
add
add
es
cmp
jmp
sbb
out
mov
add
mov
scas
imul
jle
and
and
test
imul
es
jl
inc
jmp
mov
add
mov
push
add
imul
mov
add
ds
mov
movsb
mov
hlt
xchg
addl
fiaddl
outsl
dec
pop
mov
jmp
mov
loopne
mov
lret
pusha
add
sbb
ret
push
repz
mov
lahf
sarl
mov
push
and
jns
popf
mov
pop
shl
xchg
icebp
cmp
xor
dec
cltd
add
mov
dec
adc
add
cltd
lahf
ds
dec
xchg
mov
adc
mov
add
popf
mov
sbb
mov
and
or
add
cli
ds
mov
mov
sub
mov
cltd
out
jne
shll
pop
js
add
add
pop
in
xchg
lds
scas
mov
fwait
or
dec
loop
mov
push
adc
inc
add
inc
popf
mov
adc
mov
jno
lods
xlat
fwait
jbe
adc
mov
xchg
add
cs
push
sub
outsb
mov
xor
pushf
in
add
jg
sbb
add
stos
mov
add
divl
mov
lret
repz
push
push
xor
mov
push
lods
fiadds
push
pop
pop
sti
arpl
movsb
mov
add
push
push
fs
pop
call
into
stc
xchg
pop
xlat
sub
gs
add
frstor
data16
mov
jmp
add
mov
add
mov
ret
bound
mov
loopne
mov
add
mov
push
inc
inc
adc
mov
add
mov
jne
testl
inc
sub
add
and
sbb
jmp
into
jo
mov
dec
and
mov
loop
mov
sti
lods
pop
out
push
cld
iret
cli
dec
lods
dec
adcl
add
push
add
mov
add
fistpll
addr16
add
out
in
cmp
adc
inc
ja
cli
cmc
cli
xchg
loope
add
mov
roll
mov
add
add
outsl
jge
dec
addr16
stos
xor
fbstp
pop
cs
mov
mov
out
negb
mov
xchg
clc
pop
lret
clc
fiaddl
jecxz
xchg
jl
call
movsb
mov
pop
jle
fwait
mov
dec
pushf
mov
pop
int
add
jnp
xchg
sub
jp
add
add
out
clc
out
nop
add
mov
or
xchg
cmp
mov
sub
sti
dec
rcrl
cmpsl
rcll
mov
sbb
call
sti
cmc
jo
mov
pop
mov
in
int3
movsb
cmp
xor
mov
outsl
sbb
mov
add
sbb
rcll
mov
mov
mov
data16
inc
lcall
jns
or
add
mov
inc
cld
cmp
jl
add
loope
jno
mov
in
roll
addb
ret
jne
add
add
aam
xchg
xor
add
push
sub
test
mov
insb
clc
mov
outsl
leave
fs
or
repz
lds
mov
test
add
inc
jle
add
pop
and
aaa
stos
ja
add
out
notl
aad
add
mov
idivb
andl
mov
addr16
and
mov
add
incl
lock
push
add
insl
lods
into
addb
loopne
mov
or
std
jo
mov
or
push
add
and
mov
adc
in
stos
lds
sti
mov
cli
cmpsb
fnstenv
mov
fsubs
loopne
mov
pop
cli
popf
cmp
pop
and
add
pop
inc
lahf
notl
dec
faddl
add
incb
add
mov
bound
mov
push
jge
dec
and
stos
xor
add
dec
dec
cmp
mov
add
movsl
fbld
dec
lahf
cli
add
mov
movsb
mov
inc
add
add
mov
hlt
test
mov
pop
or
fwait
xor
mov
mov
out
pop
aam
lcall
ficomps
aam
cmpsl
mov
rolb
sub
movsb
shll
inc
into
sbb
xchg
sub
jbe
outsl
or
mov
jne
add
sbb
addb
mov
push
add
lret
dec
movl
or
add
adc
add
jmp
and
mov
mov
xchg
mov
shrl
jno
add
mov
mov
mov
ret
xchg
sub
xchg
push
push
add
add
fstpt
popl
mov
add
mov
jb
mov
sub
ljmp
aas
mov
cmp
or
adc
repnz
push
add
push
stc
daa
xchg
add
sbb
loop
mov
addl
cmp
and
mov
insl
jp
iret
sub
cli
and
xlat
mov
dec
clc
fidivrs
ja
adc
mov
mov
xor
push
add
add
pushf
addr16
out
add
hlt
pop
cmpsl
adc
mov
sub
mov
add
std
outsb
ljmp
sbbl
iret
mov
add
mov
imul
mov
push
fisttpl
test
out
movsb
cltd
push
xlat
mov
add
call
pushf
rcll
jae
dec
add
sti
stos
mov
mov
repz
jl
add
add
ljmp
lods
rep
mov
lods
cs
fldlg2
mov
adc
xor
mov
jecxz
movsl
push
push
pop
addb
jne
jmp
inc
cli
cmp
imul
imull
mov
add
outsl
sub
or
mov
leave
test
out
pop
mov
rolb
mov
mov
ja
jl
sub
loopne
mov
mov
out
add
xchg
or
arpl
outsl
popa
sbb
sahf
ficoms
nop
add
dec
into
arpl
add
jg
xorl
or
faddl
lock
inc
add
icebp
add
mov
cltd
fistpll
into
cs
popf
pop
in
fnstcw
add
repz
cli
push
inc
add
mov
scas
lahf
jg
dec
shr
insl
inc
out
inc
jo
mov
fsts
sbb
mov
add
or
bound
mov
mov
test
ficompl
pop
xchg
xchg
dec
jne
and
je
sahf
xor
imul
gs
push
rolb
mov
add
inc
in
push
aam
push
pop
inc
and
data16
lret
adc
add
jno
mov
xor
mov
add
add
add
or
mov
add
push
cmpsb
lods
sub
out
adc
mov
test
push
push
pop
pop
sub
xor
and
mov
add
leave
jmp
add
xchg
add
add
fmull
add
ljmp
push
push
add
mov
push
xlat
mov
add
xor
imul
xor
mov
jb
mov
or
mov
push
xchg
cmp
and
mov
mov
addr16
das
cli
mov
sahf
jo
mov
add
mov
or
mov
icebp
sahf
fistpl
scas
test
add
mov
jle
sub
ljmp
repnz
mov
jp
add
adc
mov
push
cmp
or
jle
xlat
sub
dec
xchg
add
mull
xchg
iret
iret
sub
fidivl
sti
jbe
and
pop
rolb
mov
addb
jp
cld
lock
inc
xchg
add
test
cmp
mov
rorl
scas
ss
cmp
rcrl
rcll
sbb
lret
lock
ja
mov
fmulp
inc
add
add
sbb
add
aad
pop
pop
loopne
mov
pop
cmpsl
mov
cltd
es
imul
cltd
sub
inc
add
negl
ja
add
add
lock
mov
dec
sub
add
push
jmp
add
mov
xorl
add
inc
add
mov
mov
add
mov
add
adc
ja
fsubs
js
iret
cmpsb
fimuls
mov
jmp
mov
mov
mov
add
pop
or
mov
sbb
sub
mov
cld
dec
out
add
mov
mov
mov
movsl
sahf
mov
add
sbb
dec
lds
jle
test
dec
inc
imul
fs
adc
inc
jge
mov
sub
outsl
ss
addl
ret
mov
repnz
push
movsb
aaa
xor
out
cs
or
or
push
add
cmp
pop
bound
mov
mov
mov
add
and
mov
shr
inc
xor
mov
push
mov
add
sub
xchg
sub
push
add
les
inc
stc
sbb
test
push
push
push
push
push
cwtl
stc
add
mov
test
cs
out
pop
push
sbb
add
popf
mov
mov
add
xchg
push
add
jae
add
mov
loopne
mov
add
xchg
rolb
mov
adc
mov
int
into
inc
outsb
sbb
mov
mov
dec
addb
cwtl
shll
cld
add
mov
repnz
xchg
sub
es
inc
add
testb
fwait
xchg
stc
aam
iret
sub
test
jle
add
out
int
test
cmp
jo
mov
mov
imul
mov
fidivs
mov
fwait
jno
ljmp
sub
hlt
push
inc
dec
sti
rolb
mov
add
push
ret
cmp
in
mov
adc
mov
add
mov
add
aad
and
fs
cmp
inc
jo
mov
mov
or
mov
addb
popf
scas
add
mov
jp
jge
rolb
mov
or
add
mov
dec
push
lret
add
jp
mov
pop
push
fildl
mov
mov
repz
adc
mov
rolb
mov
fdivrs
adc
imul
sbb
dec
into
dec
push
add
cmp
gs
dec
add
mov
add
add
int
lret
in
jo
mov
add
dec
push
scas
stc
mov
xchg
pop
pop
and
mov
mov
add
pop
cmp
loop
mov
add
call
loop
mov
decb
sub
inc
ljmp
subl
ss
gs
cltd
es
add
mov
aaa
fcomps
adc
mov
mov
cmp
inc
out
cli
adc
incb
out
fnstcw
jmp
insl
pop
cmp
inc
roll
loopne
mov
xlat
jp
jae
inc
mov
mov
repnz
xchg
jb
mov
mov
pop
pop
push
or
jl
gs
add
mov
mov
fstpt
adc
mov
mov
in
mov
add
mov
sbbl
pop
or
inc
rcrl
pop
dec
pop
ret
push
mov
mov
add
pop
es
mov
in
add
jle
add
popf
and
jg
jns
imul
inc
add
ret
push
fs
ljmp
mov
rcrl
fistps
into
pusha
add
movsb
shll
rolb
mov
sahf
sti
shll
push
inc
mov
mov
out
psubd
outsb
xchg
xlat
shll
mov
in
xchg
cld
dec
mov
fistl
xchg
sub
add
mov
xlat
cmp
popf
push
pop
mov
jmp
dec
jb
mov
xchg
out
inc
dec
dec
test
mov
imul
mov
add
popf
lret
scas
sbb
cmp
lods
sbb
rcl
mov
mov
das
jae
add
fs
daa
int
or
pushf
fstpl
fdivs
mov
mov
sbb
rolb
cmp
add
mov
cmp
pop
sbb
lods
loop
mov
lods
push
bound
mov
cmpsb
es
mov
add
enter
aaa
jbe
inc
jmp
add
add
mov
add
cwtl
pop
cltd
push
gs
sub
or
add
push
add
pop
adc
jno
pop
ret
xchg
sahf
leave
mov
dec
fwait
lods
insb
fwait
inc
add
std
jne
mov
mov
in
add
filds
sbb
push
add
mov
mov
sub
orl
mov
lock
add
sbb
