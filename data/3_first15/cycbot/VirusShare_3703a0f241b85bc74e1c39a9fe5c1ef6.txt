xchg
mov
in
push
fstl
inc
add
aad
inc
add
or
xchg
cmc
ja
fidivs
xor
inc
add
jns
add
clc
addb
add
xchg
cld
jmp
add
add
pop
cltd
fmull
inc
add
dec
outsb
jno
stc
js
cmc
adc
jmp
pusha
add
add
mov
xor
add
sbb
xor
dec
ss
add
mov
add
sbb
add
and
ss
inc
add
push
add
incl
jmp
outsb
sub
aas
ret
jp
cmp
add
mov
push
test
ljmp
mov
and
mov
bound
repz
fcom
rolb
cmp
add
add
add
incl
push
flds
daa
add
push
add
dec
mov
inc
add
or
clc
pop
pop
out
xor
inc
add
add
test
xchg
and
in
cs
jmp
add
lahf
jecxz
jae
xor
pop
es
add
add
inc
add
jecxz
lahf
mov
test
in
dec
jb
mov
mov
add
xor
ss
int
add
dec
icebp
mov
xchg
pop
js
movsl
add
sub
sub
add
lcall
jb
loop
sbb
imul
add
xor
add
and
add
scas
lock
add
push
mov
outsl
rclb
xchg
mov
ficomps
add
mov
imul
rorl
mov
jbe
add
add
xor
call
testl
into
cmp
add
out
stos
xchg
or
mov
add
jbe
les
mov
movl
add
decl
xor
add
data16
fnstcw
add
je
add
cmp
cltd
jge
pop
out
jbe
mov
push
cmp
test
add
decl
dec
fwait
scas
test
ljmp
roll
pop
jnp
xor
pop
mov
movl
xchg
mov
scas
mov
add
test
es
add
jmp
dec
addb
mov
mov
cmp
add
adc
add
or
add
add
add
pop
and
loop
pop
xor
mov
in
icebp
push
sbb
lret
mov
dec
jno
into
xlat
xchg
push
add
dec
jnp
ret
add
cmpsl
add
add
push
xchg
dec
mov
dec
incb
jmp
add
add
test
and
mov
add
add
add
mov
out
movb
mov
add
aad
imul
cmpsl
add
sbb
add
jmp
cld
sti
push
mov
jnp
mov
hlt
push
add
xchg
pushf
jg
jg
stos
bound
sub
loop
in
or
add
inc
add
and
enter
add
inc
add
jns
jg
aad
xchg
adc
add
pushl
push
add
out
clc
cmp
add
add
xor
jecxz
adc
jg
pop
pop
add
sbb
inc
add
xor
dec
nop
out
jmp
addr16
xchg
xchg
sbb
jg
daa
add
sub
roll
dec
jns
cwtl
add
mov
add
mov
pop
in
sub
sub
lods
aas
sub
sub
push
iret
jmp
add
add
jne
jb
push
add
add
jl
mov
ja
repz
jbe
add
add
add
add
add
nop
test
and
fsubp
add
int
cmp
and
fisubrs
ds
add
add
xor
icebp
inc
add
push
pop
out
sub
push
inc
add
and
inc
add
in
dec
jge
xchg
lret
cmp
xchg
mov
add
add
fldenv
add
push
addl
and
aas
pushf
ficompl
add
and
out
out
outsl
cmp
dec
xchg
sbb
add
inc
add
fwait
cmc
sbb
hlt
push
fstpl
add
dec
add
fs
add
add
idiv
jnp
stos
sbb
mov
sbb
ret
push
lret
call
xor
push
add
das
lods
addl
cmpsl
add
test
pop
loop
xor
ljmp
xor
icebp
stos
js
pop
mov
ds
cmp
add
jmp
dec
cmpsl
add
pusha
add
cmc
lds
ucomiss
iret
mov
dec
adc
das
std
mov
ret
add
push
add
dec
nop
rolb
pop
addb
add
out
or
jecxz
inc
add
pop
dec
out
mov
add
adc
xchg
dec
jb
add
adc
sbb
cmp
xchg
sub
add
pushl
pop
push
fisttpll
loopne
sbb
add
inc
add
ret
add
add
add
add
mov
xchg
xor
jae
rorl
pop
leave
addl
cmp
jo
lahf
inc
add
add
add
test
int
lahf
push
aas
dec
xchg
add
jmp
add
pop
fsubrs
add
xchg
or
adc
aas
mov
add
cmpsl
add
loop
shll
jae
jnp
lcall
lcall
mov
sbb
iret
sbb
adc
in
inc
add
xchg
pushl
out
aam
mov
inc
add
sbb
jne
add
dec
addl
cmp
add
dec
roll
add
std
pop
dec
push
add
addl
pushf
jg
fistps
mov
dec
movsl
add
cs
insl
mov
sarb
fbld
add
push
jb
add
dec
je
add
add
mov
cli
push
xchg
addl
call
add
fsts
jl,pt
and
mov
cs
jmp
add
rcrb
mov
add
push
hlt
jae
mov
jl
data16
push
sbb
js
dec
stos
lahf
adc
push
movsl
add
dec
mov
in
add
add
rolb
add
xor
cmp
loopne
scas
cmp
sub
mov
add
mov
add
pop
mov
cmp
add
jl
inc
add
test
nop
and
test
std
clc
mov
out
and
movaps
add
jmp
adc
test
leave
push
incl
and
je
or
add
add
xchg
push
int3
push
test
sbb
lcall
adc
les
aas
mov
mov
xchg
cmp
pop
pop
inc
add
push
add
push
and
xor
xchg
int3
sbb
inc
add
add
mov
xchg
add
mov
mov
data16
mov
add
add
stos
sbb
add
je
addl
icebp
pop
inc
add
add
inc
add
add
jb
out
dec
xor
sbb
je
sub
sub
pop
lcall
add
add
into
cmc
add
pushl
aaa
adc
je
mov
add
fdivrl
shll
add
mov
popf
int
in
xchg
sub
add
loope
add
jmp
inc
add
add
call
pop
sub
pushl
jae
add
add
mov
push
add
or
neg
scas
pop
lock
add
loopne
xchg
decl
ljmp
lcall
fwait
sub
lret
mov
js
or
add
clc
dec
dec
adc
add
add
jecxz
mov
add
shrb
int
add
pusha
add
add
popf
inc
add
jmp
jno
add
and
jno
mov
add
out
dec
ficoml
dec
cs
push
add
decl
add
add
add
xlat
xchg
jp
outsb
mov
jle
add
xor
add
add
xchg
fildl
xchg
imul
ja
add
pusha
add
addb
dec
data16
in
or
add
cs
pop
add
add
call
lds
mov
add
mull
add
fmuls
add
dec
inc
add
mov
push
cmp
into
add
add
add
add
addb
into
jp
incl
incl
lcall
pop
mov
add
mov
add
je
mov
rclb
jbe
incl
dec
scas
jge
scas
pushf
es
jge
xchg
sti
cld
mov
mov
movsb
add
or
dec
stos
jo
cmpsb
add
jae
add
add
int3
inc
add
mov
and
pop
add
jp
push
scas
insb
push
cmp
adc
sub
or
cmp
scas
call
addl
add
cmp
movl
repz
ds
add
in
jb
pop
setp
mov
add
jae
add
jle
decb
push
adc
sbb
jnp
outsb
sbb
push
fcmovbe
in
fistpll
dec
push
add
addb
add
fcompl
popf
adc
call
push
add
cmp
push
mov
jbe
das
pop
cmp
xor
add
add
lret
pop
xchg
add
xor
addb
ret
mov
xchg
add
pop
das
cmpsl
add
add
icebp
addb
popl
jns
cltd
xchg
test
add
test
mov
add
pop
in
jno
dec
add
aas
fldt
or
add
dec
in
sbb
mov
into
xor
icebp
mov
leave
fstpt
inc
add
add
inc
add
add
movsb
add
ljmp
roll
add
mov
add
lret
sbb
js
add
add
mov
in
ds
shrb
fimuls
fstpl
or
stos
pushf
add
jmp
fwait
jle
mov
add
sbb
mov
adc
add
lahf
xchg
sbb
jns
push
lret
cmp
add
movsb
add
push
mov
ds
push
repnz
xor
add
add
xor
sbb
add
filds
jmp
add
mov
and
adc
and
shll
arpl
pushf
in
scas
adc
xlat
mov
arpl
adc
cmpsb
add
sarb
sub
sbb
ja
data16
add
add
decl
mov
add
add
inc
add
add
ret
add
sub
add
cmpsl
add
sbb
fcmovu
and
add
add
rolb
pop
stos
or
dec
push
add
add
insb
dec
jmp
xchg
enter
add
jae
add
dec
and
xor
jmp
clc
lock
mov
pop
inc
add
add
jmp
add
adc
pop
jmp
mov
in
mov
faddl
lcall
mov
jle
add
adc
insb
mov
add
mov
aam
add
add
cmc
pushf
mov
add
sub
jne,pn
add
addb
add
jg
and
mov
inc
add
add
mov
push
in
xor
pushl
loop
lret
imul
push
cwtl
imul
test
in
jl
cmpsl
add
sti
into
add
ljmp
cli
mov
out
lret
ret
add
push
mov
or
add
sbb
add
sub
lea
pop
jecxz
and
lahf
sbb
add
pop
pop
roll
mov
xor
push
popa
add
mov
xor
add
les
lcall
xchg
push
mov
stos
or
xor
pop
or
mov
addl
pop
jp
ret
add
mov
push
dec
sahf
ja
mov
xchg
ss
out
sahf
lea
lahf
add
popa
add
fwait
adc
adc
add
test
xchg
mov
dec
xchg
out
mov
out
xor
xchg
xor
push
lods
mov
in
mov
sub
test
sub
and
lret
popf
add
add
sub
add
and
test
pop
lcall
mov
jb
mov
fdivrs
add
push
add
pop
movl
pop
ljmp
scas
and
adc
add
jnp
jl
add
add
call
push
flds
or
mov
stc
rep
add
rolb
in
pop
repz
xor
add
inc
add
add
in
adc
les
push
cltd
scas
addb
data16
add
jne
mov
or
jae
add
sub
shrb
loop
out
pop
xor
ret
add
xlat
xor
int
jnp
jbe
dec
push
fdivl
test
lcall
or
inc
add
add
mov
cmp
scas
mov
mov
jmp
add
adc
stos
xchg
std
lcall
mov
add
jbe
xchg
fiaddl
ret
add
add
jnp
lret
out
js
pop
sub
xchg
aas
adc
test
mov
add
add
cmpsl
add
rolb
cmp
cmpsb
add
fdivrl
xchg
or
js
jo
loopne
call
add
add
movb
cs
add
mov
add
adc
pushf
hlt
dec
add
sahf
lcall
adc
sub
dec
shl
in
xor
iret
xchg
sbb
pusha
add
cmp
jle
mov
jp
lcall
add
jne
jle
fisubrl
sbb
inc
add
jnp
xchg
sub
insb
fdivs
push
pusha
add
inc
add
add
repz
decl
add
addl
cli
push
inc
add
add
roll
add
add
in
loop
cltd
daa
add
push
mov
or
inc
add
add
or
push
push
cmp
lock
add
or
movsl
add
add
ljmp
mov
add
lds
pop
mov
ja
loopne
pusha
add
outsb
addb
addl
add
push
fsub
add
push
dec
addb
adc
sub
xor
add
sbb
push
fdivrs
add
icebp
xchg
mov
jle
add
ljmp
cmp
ljmp
or
js
mov
or
pop
add
aaa
insl
addl
ds
scas
imul
add
xor
notb
add
adc
loopne
lret
fimull
js
xchg
cmp
outsb
mov
mov
add
mov
add
add
add
cmp
add
js
add
add
mov
add
and
mov
cwtl
jbe
cmp
push
xlat
pop
mov
add
addb
mov
add
jg
jae
add
cmpsb
add
add
lock
into
jae
mov
leave
xor
add
in
out
gs
jecxz
fwait
cmp
inc
add
or
jle
add
cwtl
loopne
add
mov
arpl
adc
add
mov
out
push
inc
add
add
add
xor
add
fidivl
roll
pop
bound
call
mov
jb
loope
rcrl
inc
add
int3
flds
dec
ss
cmp
add
out
add
pop
les
add
push
cli
aas
xor
sti
movsb
add
in
mov
push
repz
cwtl
movsb
add
adc
cmpsl
add
stos
popl
pushl
and
cld
ja
incl
cwtl
mov
ljmp
jle
or
dec
xchg
sbb
call
test
jns
push
inc
add
xchg
pusha
add
push
mov
sbb
add
jecxz
cltd
pop
add
mov
add
mov
ja
mov
push
test
cmpsl
add
lahf
add
ljmp
mov
pop
xchg
cmp
test
adc
lods
mov
add
pop
jg
xchg
push
outsb
addb
leave
popf
jno
or
jl
jnp
cmp
xor
lcall
repnz
push
sbb
or
mov
add
movl
outsb
and
mov
jmp
add
xor
xor
mov
insl
int3
aaa
cmc
faddl
pop
arpl
hlt
addb
fidivs
sub
push
in
nop
mov
mov
fmull
adc
jno
and
roll
mov
sbb
add
add
pmaxsw
sbb
decl
enter
inc
add
sti
rolb
ss
fistl
xor
loope
push
add
fisttps
mov
mov
jbe
add
mov
add
add
xchg
movb
add
cld
jo
add
aad
mov
movb
add
adc
xchg
cmpsl
add
xchg
jmp
cwtl
xchg
add
mov
add
sub
add
inc
add
push
cli
inc
add
mov
add
pop
insb
fisttps
jne
pop
mov
fs
in
addl
movsl
add
add
xlat
cmp
incl
call
jg
add
pop
or
dec
lds
aaa
xchg
cmc
aad
dec
jle
jle
push
enter
add
inc
add
add
push
mov
mov
xor
add
test
mov
pop
sub
popf
ss
ljmp
fistpl
and
add
mov
aaa
clc
cli
dec
jns
sti
add
add
xchg
lods
stos
add
pop
adc
add
add
mov
add
pushl
data16
cmp
test
cmpsb
add
pop
ja
fadds
stos
test
xor
int
mov
jbe
mov
and
xchg
lret
push
and
test
push
stos
push
add
add
add
push
mov
xchg
addl
addb
fmull
call
cld
int
sbb
mov
xchg
lahf
inc
add
ljmp
sbb
pop
dec
iret
push
test
rorb
xchg
aad
pop
add
push
pop
add
lock
jbe
scas
test
push
dec
in
ret
xor
sbb
add
addb
add
sbb
inc
add
jo
or
add
outsb
cmpsl
add
add
repnz
cwtl
and
xchg
or
add
add
fiadds
in
xor
add
sti
xchg
add
incl
lcall
xor
push
or
mov
icebp
sbb
add
jbe
cmp
add
add
add
inc
add
sub
inc
add
out
cmp
add
repnz
add
mov
dec
add
mov
inc
add
pop
mov
add
add
cmp
imul
adc
pop
sahf
sub
or
pop
mov
add
dec
iret
jl
push
scas
push
add
and
sarb
rcl
or
mov
jmp
out
inc
add
dec
adc
adc
add
decl
shl
fcmovnb
add
insb
add
call
add
ljmp
sub
cli
jecxz
rcl
push
sbb
loopne
loope
mov
decl
push
mov
movl
enter
pop
leave
add
movsl
add
xor
xchg
dec
lret
fists
clc
xchg
fcompl
sub
add
push
add
add
cli
in
dec
jecxz
adc
lret
add
add
adc
and
push
cmpsb
add
adc
xor
leave
hlt
imul
lahf
mov
push
in
adc
cmp
inc
add
cmp
jmp
bnd
add
push
addb
push
icebp
add
les
lret
pop
and
and
lea
mov
ja
stc
loope
leave
in
and
sub
add
add
mov
lock
add
fimuls
test
inc
add
neg
pop
mov
add
aaa
add
jmp
add
fistpll
add
ret
add
add
pop
mov
popa
add
xchg
sti
push
aad
push
mov
fdivl
add
jmp
add
mov
dec
adc
sbb
cmp
movsb
add
test
jp
movsl
add
movb
and
and
add
add
add
add
push
repz
shlb
fistpll
addb
add
add
xor
mov
jnp
test
lret
mov
add
fnstenv
jp
mov
out
mov
rorl
add
and
push
cld
push
inc
add
add
pushf
pop
dec
mov
jg
cmc
xlat
scas
cli
dec
idiv
pop
xchg
cli
xchg
pop
outsb
enter
add
ret
add
add
push
or
add
out
lods
sbb
or
jne
mov
cmp
jp
add
scas
xchg
ljmp
mov
adc
lcall
add
add
pushl
lock
add
call
out
loope
ds
adc
add
mov
rcrl
add
addl
push
test
mov
add
and
add
outsl
fistpl
das
add
push
pop
pop
cmp
push
add
pop
jl
sbb
leave
pusha
add
add
mov
xlat
push
mov
sbb
jg
inc
add
mov
les
add
add
inc
add
ficomps
push
pushf
lahf
jb
test
adc
adc
adc
das
cltd
pop
push
addl
add
adc
shrb
adc
add
js
mov
add
aaa
sbb
add
push
push
push
imul
sub
out
add
lcall
push
inc
add
push
sub
sub
scas
pop
add
popa
add
add
sub
lods
cmp
lods
dec
outsb
mov
insl
out
xor
jns
aas
pop
and
inc
add
movb
add
call
shl
add
add
sub
add
xchg
cmpsb
add
stc
jb
add
or
fsubl
add
sub
sub
aam
enter
add
dec
pusha
add
loope
add
add
bswap
lea
js
add
aam
add
or
rcrl
sbb
lcall
lds
xchg
addl
add
movsl
add
add
fcmove
pop
mov
add
pop
push
add
incl
inc
add
in
dec
fidivrs
xor
add
add
add
std
fwait
add
ljmp
movsl
add
ljmp
add
add
decl
leave
scas
ret
add
or
add
add
add
insb
push
scas
lds
inc
add
add
mov
add
add
add
mov
cmp
inc
add
fsubl
sbb
add
sub
scas
fldt
call
adc
add
addl
add
incl
add
mov
setg
loope
insb
jle
jmp
out
cmpsl
add
add
pop
add
xchg
xchg
movl
add
stc
fdiv
daa
add
ret
add
call
xor
scas
sbb
loope
adc
add
add
mov
decl
lds
inc
add
add
out
mov
fstpt
add
add
out
add
jmp
add
cmp
call
adc
pushf
sub
pushl
add
push
aad
int
add
xor
pop
or
call
xor
adc
add
add
jp
add
mov
jg
jno
pop
push
and
add
decl
and
scas
pop
aas
jae
fnstenv
jp
mov
enter
mov
jle
mov
xchg
je
dec
roll
mov
add
or
add
dec
mov
pop
add
pop
pop
int
cmp
pop
pop
pop
je
push
xor
mov
movsl
add
add
pop
push
xor
jb
add
add
add
aaa
xchg
std
lret
add
aad
movl
add
add
add
add
add
add
lret
popa
add
inc
add
imul
add
dec
ljmp
xchg
sti
test
stos
test
add
fmul
or
popf
mov
add
add
aad
jmp
aas
out
or
jae
dec
pop
add
add
mov
lret
jo
mov
stos
pop
notl
imul
add
add
mov
sbb
adc
rol
add
add
test
xor
and
add
pop
sbb
jle
push
xor
shrl
push
sub
add
decl
outsb
bnd
sbb
int
add
xchg
jmp
ret
add
add
fisubs
mov
jl
dec
pop
lret
add
jecxz
movsb
add
insl
test
pop
addl
cld
dec
fdivrl
add
push
test
cmp
sub
add
mov
add
dec
cwtl
js
dec
jmp
mov
push
cwtl
and
cmp
jmp
add
mov
cmp
ljmp
add
iret
and
bnd
and
add
push
adc
mov
xchg
scas
arpl
aam
mov
out
jecxz
daa
add
add
scas
sub
and
push
jl
mov
and
inc
add
lcall
popf
test
add
fcmovnu
adc
push
loop
addb
in
add
ljmp
fiadds
mov
xor
add
scas
jmp
js
cmc
fwait
lahf
daa
add
add
xchg
loope
adc
les
jns
fiaddl
inc
add
call
stos
jb
fnstcw
sub
lcall
mov
scas
rclb
adc
add
outsl
or
cmp
out
aas
ds
out
add
lcall
lahf
test
rolb
inc
add
test
xchg
mov
xor
fdivl
inc
add
mov
sub
mov
add
bound
add
out
mov
xor
add
cmp
loop
sar
aaa
adc
or
mov
lods
ja
test
xor
iret
loop
sbb
cmp
push
mov
sub
xor
call
and
jne
dec
push
call
test
je
movzbl
add
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
mov
cld
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
and
test
test
test
jge
cmpsb
add
add
jg
roll
add
add
cmp
pushf
pop
add
ss
xchg
rcrb
add
aad
add
roll
push
mov
add
jmp
add
add
mov
add
movb
pop
pop
stc
jge
add
mov
add
ljmp
add
adc
lcall
cmpsl
add
add
dec
pop
iret
push
pop
imul
jle
movl
lahf
xchg
jno
mov
push
add
decl
jns
movsb
add
mov
ljmp
jmp
pop
and
inc
push
fdiv
jg
repz
out
jl
testl
sbb
outsl
popa
fs
ret
push
addb
ja
out
push
cld
jnp
loop
jo
sbb
mov
cmpsl
add
stc
xlat
and
and
jno
add
pop
std
mov
or
mov
push
insb
pop
repnz
cmp
clc
repz
imul
fldl
jb
sub
add
add
mov
sbb
xchg
aad
xchg
sbb
fstpt
add
insb
inc
stos
sbb
stc
push
add
push
inc
xor
sbb
add
push
add
add
popa
add
mov
adc
inc
add
add
cli
pop
jb
add
call
addl
testl
jo
add
add
pop
push
xchg
cmpsl
add
pop
jmp
push
or
push
mov
add
lahf
cs
mov
sahf
mov
jno
add
add
add
add
rcrb
add
add
inc
add
mov
xchg
addl
add
dec
out
stos
inc
add
add
icebp
pop
add
call
add
adc
pushf
xchg
mov
fildll
ret
jmp
sbb
das
add
cmp
mov
roll
mov
int
add
add
and
scas
and
push
stos
stos
ss
dec
loop
cld
jp
add
pushf
sbb
jle
add
mov
add
add
cmc
int
and
sub
or
lods
lods
in
out
xchg
movsb
add
clc
xlat
std
sbb
add
cld
popa
push
push
push
sbb
mov
mov
add
pop
sbb
jb
add
mov
and
xor
xor
mov
sbb
pop
add
add
lods
jne
xchg
lcall
dec
dec
stos
mov
xor
addb
arpl
jae
inc
add
add
stc
daa
add
mov
mov
pop
add
push
call
push
ret
push
push
xor
add
sahf
jns
add
xchg
add
push
add
neg
jmp
jmp
nop
add
add
addr16
mov
sbb
add
call
add
jmp
mov
add
pushf
mov
cmp
add
push
mov
inc
add
jl
add
add
cmp
or
or
rcll
ds
add
xor
mov
pusha
add
add
shl
add
add
dec
pop
fisttps
add
inc
sbb
push
inc
add
and
addr16
add
add
add
loopne
xor
lcall
or
ret
add
mov
sub
push
mov
inc
add
dec
mov
fcompl
jg
add
pop
movsb
add
add
mov
ret
cmpsb
add
xchg
sbb
loop
jmp
fistpll
xchg
or
out
cmp
adc
push
jecxz
or
or
xor
add
pop
jb
sub
add
add
pop
dec
enter
cmpsl
add
fbstp
pop
inc
add
add
sbb
loopne
ja
shl
push
add
xchg
sub
add
mov
add
inc
add
mov
add
nop
movsl
add
out
data16
lock
lock
push
push
add
add
jns
lock
fmuls
add
push
xor
lock
inc
add
decl
cmc
das
cmp
adc
fprem
push
popf
xchg
jne
add
lcall
add
add
push
inc
add
push
inc
fsts
xor
stos
fs
add
add
pushf
push
mov
movaps
or
push
xchg
hlt
lds
mov
add
push
lock
cmp
mov
cmp
test
sbb
movl
add
cmpsl
add
jne
jmp
mov
jle
std
cmc
stc
lret
and
and
lds
fidivs
xchg
hlt
outsb
fcmovnu
xlat
add
xchg
pop
lds
cs
sbb
sbb
or
jmp
push
addr16
xor
pop
je
rolb
jae
add
add
dec
movb
jecxz
jecxz
cwtl
lods
add
ljmp
xor
add
add
mov
jmp
or
repz
adc
aaa
out
mov
add
dec
add
jle
das
clc
inc
add
add
add
xchg
xor
aam
add
loopne
adc
in
jno
inc
add
or
push
cwtl
in
cmc
add
dec
mov
add
dec
sub
inc
addb
push
ret
push
mov
inc
add
fwait
sbb
aas
movsb
add
push
pop
sti
mov
leave
or
push
dec
add
ljmp
jmp
aas
pop
mov
push
push
and
outsb
jmp
stos
les
xchg
or
mov
adc
push
sbb
roll
clc
out
jns
int
pusha
add
mov
test
int3
pop
pop
imul
pop
rclb
add
add
add
loope
ss
mov
add
fdivr
movl
add
jbe
add
xor
and
xor
add
sbb
inc
add
ret
jge
add
xchg
or
mov
insl
outsl
add
out
lods
test
mov
and
cld
inc
sbb
xchg
addb
and
inc
add
mov
add
mov
xchg
inc
add
les
js
in
adc
pop
add
add
out
dec
jl
add
stc
or
and
aad
add
pop
push
ret
mov
mov
add
in
add
hlt
loop
cmp
fwait
mov
mov
push
mov
dec
std
lods
or
popa
add
mov
add
popl
jmp
ljmp
jne
insb
push
jmp
insb
aad
add
clc
popl
mov
lcall
test
movl
add
add
mov
add
add
add
call
jl
add
sub
cli
addl
pop
scas
dec
xchg
xor
aam
mov
add
fdivrp
inc
add
addl
mov
movb
aas
inc
add
push
push
xor
ss
pop
push
add
push
insl
je
add
xor
mov
pop
cmp
or
sub
ja
add
popl
push
dec
iret
pop
clc
xor
add
call
add
push
add
dec
pop
add
dec
mov
fists
into
sahf
push
push
mov
stos
mov
fs
add
add
stos
pushf
jb
leave
sbb
add
mov
aas
cmp
test
imul
add
das
mov
cmp
sub
cwtl
lods
movsl
add
insb
lods
fcmovb
add
jg
out
or
cli
test
xchg
inc
add
ljmp
test
push
ja
add
mulb
add
pusha
add
imul
inc
add
add
add
mov
aad
sbb
lods
addl
xlat
mov
or
add
xor
add
stos
pop
bound
sub
add
imul
mov
add
jmp
add
xchg
out
into
aam
add
mov
mov
or
sub
sti
dec
sbb
leave
xor
sti
inc
add
popf
mov
jmp
fnstcw
add
shl
add
add
add
rcrb
fnstcw
add
add
push
popa
jmp
add
dec
xor
call
xchg
cmpsl
add
mov
faddp
add
mov
clc
or
inc
add
outsl
mov
in
stc
sub
sbb
ror
nop
mov
insl
mov
add
decl
call
adc
add
mov
mov
add
mov
mov
call
pop
xchg
cltd
ficoml
add
mov
in
addb
addl
add
add
stos
sbb
push
push
dec
mov
cmc
mov
add
and
add
addr16
add
insl
test
cmp
push
push
mov
jmp
push
testb
dec
in
addl
shlb
sub
jmp
push
sub
lcall
mov
cmp
addb
add
mov
or
add
sbb
jle
add
cmp
inc
add
add
mov
std
inc
add
adc
add
jmp
into
mov
and
outsb
ret
add
mov
in
pop
add
add
push
sub
xor
mov
push
ret
jle
in
test
push
lods
mov
jnp
or
add
dec
std
jae
add
add
cmp
add
mov
jmp
push
lcall
popa
add
aad
call
jmp
xor
decb
dec
data16
cwtl
dec
insl
mov
cmp
pusha
add
add
add
test
jne
dec
inc
add
add
push
add
fidivl
dec
movb
sbb
push
ret
js
jle
cwtl
dec
mov
add
add
sbb
add
xor
pop
add
inc
add
fdivs
add
jo
push
aaa
out
lea
cld
mov
les
addr16
add
add
or
lret
mov
push
ret
push
insb
jle
inc
add
add
add
pusha
add
ss
add
test
repnz
sbb
pusha
add
repnz
fwait
or
outsl
test
jns
and
bound
and
jmp
popa
add
pop
dec
cld
pusha
add
lret
dec
mov
add
adc
push
inc
add
movb
call
push
sahf
push
adc
loopne
addl
cmpsl
add
add
add
data16
jns
loop
xor
pop
adc
push
mov
jmp
inc
mov
push
inc
data16
add
add
jno
and
inc
add
fisttpll
inc
add
xchg
cmc
pop
xor
mov
sbb
mov
insb
fwait
movsb
add
sub
mov
add
push
shlb
add
xchg
ljmp
ljmp
out
les
lods
mov
bound
push
into
addb
movl
sbb
add
test
cmpsb
ret
xor
ret
add
add
std
inc
add
adc
fldcw
jo
add
shl
add
push
push
or
add
cmp
fsubp
add
aaa
addl
add
testl
jmp
jmp
push
in
js
inc
add
lahf
cmp
add
cmp
add
jg
jecxz
dec
adc
push
jge
loopne
add
cmp
xchg
lcall
xchg
xchg
outsl
push
les
jns
add
lcall
sbb
add
add
lods
fcmovu
dec
xchg
sahf
adc
lcall
add
testl
mov
add
sarl
jnp
addl
cmpsb
add
sti
xchg
jecxz
push
sub
pusha
add
dec
aam
jle
xor
or
push
lcall
ljmp
hlt
sub
jmp
push
ret
adc
ljmp
add
add
lret
lods
mov
in
fisubrl
xchg
and
xchg
sarb
xor
add
movb
add
add
add
jnp
add
add
add
movsl
add
into
call
add
cwtl
mov
dec
xlat
decl
add
dec
adc
xor
add
push
cmpsb
add
insl
sbb
xor
lahf
fdivl
out
ficompl
pop
mov
jmp
addb
mov
add
pop
imul
mov
jmp
inc
add
xor
jp
sub
mov
add
insb
popa
add
add
decl
ja
mov
add
in
in
lock
mov
in
cmp
aaa
xchg
leave
frstpm(287
add
jns
sub
aaa
pop
push
mov
mov
lock
stos
hlt
dec
or
aas
outsl
mov
xlat
xlat
pop
cmc
and
rcrb
or
xor
push
add
call
add
pop
out
pop
xor
dec
mov
addl
add
addb
xchg
lea
nop
add
add
adc
dec
mov
pop
sub
jge
popf
adc
pushl
lahf
adc
xchg
call
sub
add
sub
and
imul
test
push
ret
bound
mov
add
adc
and
xor
mov
pop
add
inc
add
enter
add
pop
and
push
xchg
xor
loopne
mov
add
repz
add
iret
fwait
shr
ss
add
iret
int3
out
xchg
sub
fsts
add
xchg
xlat
leave
mov
add
dec
incl
inc
push
ret
test
mov
addb
add
pushl
sbb
add
push
jne
jmp
push
addl
lret
rolb
mov
imul
jmp
ljmp
add
inc
add
mov
mov
movsl
jmp
push
push
dec
xor
jne
jmp
lcall
jno
add
mov
push
dec
pusha
add
lds
mov
add
pushl
sub
cmp
loop
mov
insb
pop
sbb
jmp
pop
add
fwait
push
fstpt
mov
mov
arpl
pop
test
pop
cli
scas
mov
pop
push
jmp
mov
add
sti
pop
sub
xchg
jns
outsl
pop
inc
add
push
mov
mov
incl
jne
fldcw
add
jecxz
dec
in
pop
std
jnp
add
in
cli
jge
mov
cli
adc
jbe
add
pop
sbb
jp
data16
push
jne
add
add
jnp
add
in
out
add
adc
pusha
add
outsl
je
add
pop
add
xchg
pop
imul
adc
add
dec
push
ret
push
push
idivb
addl
and
in
xor
std
pushf
mov
xchg
out
popa
add
add
movntps
jecxz
lea
dec
insb
jg
roll
fwait
outsl
inc
add
sti
faddl
aam
add
add
pop
ljmp
cmp
pop
inc
add
jmp
add
notb
fsubs
fstpl
pop
xchg
cltd
xchg
mov
sbbl
push
sbb
out
insb
xchg
jo
mov
push
fists
std
jno
add
mov
add
push
insb
push
stc
xchg
cmp
cltd
out
je
sbb
add
aas
sub
xchg
pop
mov
sbb
mov
popf
inc
add
xchg
add
decl
xor
push
ret
lcall
stos
rolb
add
sti
mov
add
in
addl
push
pop
add
push
cmp
push
add
add
addb
add
std
les
mov
negl
push
xor
popa
add
inc
add
bound
pop
add
add
bound
loopne
and
adc
pushf
sahf
dec
mov
mov
movl
add
rclb
add
push
dec
adc
imul
mov
add
cmp
pcmpgtb
lods
leave
xchg
jmp
ret
add
mov
movsb
add
arpl
sbb
push
rolb
add
pushf
fwait
push
add
jmp
inc
data16
mov
adc
add
add
add
mov
inc
add
fldl
lcall
add
pop
xor
aam
push
add
arpl
sub
rep
xor
add
mov
pop
jecxz
out
mov
ss
out
sbb
sti
mov
xor
add
iret
cmp
add
add
call
add
clc
xchg
popa
add
sub
add
stc
fiadds
call
mov
xchg
stos
dec
div
mov
add
and
inc
add
and
mov
inc
add
ss
mov
and
in
lret
dec
out
lds
mov
mov
add
lret
or
add
jne
fistps
mov
mov
inc
add
add
jmp
adc
or
lock
xchg
addb
jl
add
jmp
aas
push
inc
cmp
lods
pop
imul
add
stc
adc
xor
add
mov
cmp
mov
hlt
cmp
jmp
sub
test
inc
add
roll
loop
scas
add
ljmp
or
fdivrl
movsl
add
enter
jne
daa
add
leave
push
ret
inc
push
adc
aaa
fldl
push
dec
jmp
mov
push
movsb
add
lahf
repz
add
sub
push
ret
sbb
push
das
pop
rcr
add
out
lods
inc
add
cmpsl
add
add
mov
add
bound
or
roll
or
jbe
loope,pn
rcl
or
adc
pop
or
add
add
pop
aam
mov
mov
daa
add
pop
xchg
lahf
push
add
xor
cmp
jmp
cmp
add
xchg
mov
sub
popa
add
add
icebp
xchg
stc
ret
add
fiadds
rcl
add
mov
sub
cmc
aam
mov
jmp
into
ret
sub
call
adc
call
inc
pop
inc
dec
push
mov
or
add
repnz
sub
sub
repnz
add
add
por
repnz
fsubrl
mov
add
pop
mov
inc
push
add
or
add
dec
scas
lock
add
push
add
push
jmp
cmp
push
xor
scas
cmp
or
mov
add
add
std
into
inc
add
mov
add
cmpsl
add
add
sahf
lea
add
ljmp
push
add
lcall
test
push
cmp
sbb
mov
xlat
adc
add
mov
xor
mov
aam
in
rcll
mov
mov
dec
adc
ja
stc
inc
add
int
jmp
add
les
stos
xchg
roll
inc
add
fldpi
mov
sahf
add
nop
mov
add
movsb
add
pop
pop
roll
incl
jne
stos
nop
ret
add
in
out
jnp
add
decl
and
xchg
bound
xchg
pop
cmp
mov
push
stc
out
inc
add
les
test
out
call
xlat
stos
insl
inc
add
inc
add
add
add
jo
add
or
add
add
xlat
mov
mov
add
jmp
push
jle
insl
sub
dec
adc
add
fisttps
xlat
cmp
mov
push
mov
dec
sbb
into
pop
add
out
mov
cmp
cmp
inc
add
add
sbb
outsb
pop
ret
mov
cmp
fmuls
notb
int
incl
out
int
xor
cmp
cmp
jne
fidivrs
pop
xor
pop
loope
add
jae
add
push
clc
push
xor
cmp
mov
add
dec
mov
mov
push
add
insb
frstor
scas
or
pop
adc
add
jmp
add
jmp
add
add
add
lret
ret
imul
cld
ljmp
in
mov
mov
add
or
add
mov
add
cld
mov
add
test
jmp
sub
incl
enter
add
adc
subl
mov
add
loop
xor
ja
test
dec
or
roll
add
push
xor
dec
push
pusha
jmp
mov
push
fists
push
rolb
add
std
aam
int
test
mov
add
cmp
mov
add
inc
add
loope
sub
mov
add
add
add
add
add
incl
add
xlat
divl
test
jo
adc
xchg
pop
push
add
loope
mov
mov
add
add
push
mov
add
fisubl
out
sarb
push
inc
add
fcom
push
mov
jbe
sbb
mov
lds
movsl
add
add
pushl
sub
jb
mov
add
add
add
in
jp
add
sub
push
cwtl
scas
mov
int3
in
mov
pop
in
mov
int
jg
mov
addb
pop
out
out
out
sub
add
incl
jne
jmp
push
push
add
inc
add
inc
add
addb
jl
add
jmp
add
inc
mov
xchg
je
add
add
decl
add
xchg
idivb
arpl
addl
add
jno
add
sar
testl
iret
repz
mov
ljmp
add
push
push
into
jb
push
push
sub
shll
adc
add
ret
add
mov
das
pop
sarb
fadds
add
xchg
loope
mov
pushf
addl
dec
fbstp
imul
cld
xchg
push
add
xchg
cmp
aad
dec
test
adc
mov
mov
shll
addl
jl
add
mov
imul
mov
add
popf
mov
add
ljmp
add
je
and
ret
add
add
movl
fcoml
push
ret
push
push
or
cltd
sbb
add
add
dec
test
pushf
pop
fistpl
outsb
xor
xor
add
dec
lret
fwait
test
out
popl
aaa
ret
add
add
jno
pusha
add
add
add
lret
sub
add
add
ja
add
add
sahf
sbb
fmul
xchg
ljmp
outsl
out
cmp
push
add
dec
or
add
add
xchg
pop
pop
add
add
add
out
loop
ljmp
add
dec
sbb
add
sub
ljmp
je
lods
cmp
jb
ret
mov
push
cmpsl
add
repz
xlat
ljmp
leave
cltd
xchg
add
je
ret
add
push
mov
jp
add
add
xchg
mov
dec
movl
add
pop
add
rolb
dec
push
add
cwtl
pop
add
pop
dec
rep
add
and
add
add
or
jo
jp
rolb
xchg
das
cmc
pop
and
add
ljmp
mov
add
fisubrl
mulb
lock
ret
outsb
ret
add
out
mov
jmp
mov
add
clc
pop
pop
call
in
ret
xor
jp
add
inc
add
add
div
mov
xchg
and
data16
jae
sbb
mov
inc
add
lock
ljmp
push
ret
xor
mov
mov
add
jno
je
loope
mov
xchg
in
enter
movb
rol
add
imul
shlb
jno
fs
add
or
add
jmp
push
popf
jg
xchg
insl
xchg
push
push
add
mov
push
neg
das
data16
or
add
sub
mov
add
add
out
shrl
mov
add
add
jb
add
fldt
or
pushf
rclb
mov
add
scas
push
jno
lods
cmp
or
in
int
jl
test
pop
aaa
in
lods
ret
fsubl
cmp
cmpsb
add
add
lret
add
bound
repz
dec
mov
pmuludq
mov
add
add
add
in
cmp
mov
hlt
pop
popf
movsb
add
test
shl
std
in
cmp
popf
jmp
fbstp
xchg
cmp
pop
dec
mov
add
scas
lahf
xor
mov
mov
cmp
addb
popf
imul
int3
inc
add
add
loopne
pop
pop
ret
push
addb
iret
pop
pusha
add
imull
jmp
or
add
lcall
lods
clc
adc
add
inc
add
inc
add
add
mov
add
add
lret
mov
dec
xchg
jecxz
mov
add
shll
daa
add
add
cmp
add
add
adc
add
mov
pusha
add
add
add
addl
cmpsb
add
fcomps
add
mov
out
pop
add
add
out
lods
xor
or
imul
mov
jo
add
inc
push
cmp
xchg
and
push
add
push
mov
cmp
add
and
lret
pop
lahf
sub
add
pop
add
decb
pop
data16
wbinvd
data16
xchg
pop
jp
popa
add
loop
jmp
adc
dec
inc
add
inc
add
jbe
add
popa
add
mov
lret
bnd
add
test
add
adc
add
add
pop
je
mov
mov
or
add
xchg
pop
or
add
add
pusha
add
add
xchg
pop
add
add
jmp
ljmp
pop
mov
mov
jmp
mov
push
pop
mov
decl
jmp
push
aas
adc
mov
pop
mov
sub
adc
cwtl
mov
add
leave
call
cmp
out
mov
ss
int3
xchg
xor
ja
add
sub
daa
add
jl
cmc
dec
fildll
jmp
adc
aam
xor
add
push
mov
insb
adc
push
jmp
idivb
add
add
iret
jne
pop
into
inc
add
xchg
and
in
cld
dec
ds
in
inc
add
add
push
in
or
add
inc
add
dec
adc
jle
addr16
xchg
jno
insl
sahf
shlb
roll
call
pop
out
lcall
arpl
cmp
add
add
cmpsb
add
pop
dec
aaa
addb
mov
je
decl
sub
add
pop
mov
xchg
testl
leave
cmpsl
add
out
fdivr
addb
test
js
int3
mov
pushf
das
lds
out
xchg
or
rcrl
sti
add
jge
movb
fidivl
mov
add
into
insl
fcompl
cltd
or
lret
xchg
sub
dec
mov
add
pushl
out
outsb
sahf
jne
mov
mov
fcomps
mov
xor
add
inc
add
mov
add
add
movsl
add
add
in
pop
push
in
loope
fs
popa
add
pushf
push
out
cmpsb
add
sahf
adc
cs
jg
pop
repz
loop
or
ja
repnz
addl
dec
mov
add
int3
iret
push
stos
cmp
fisubrl
sti
roll
add
add
add
cmp
jmp
push
push
lds
push
sub
inc
idiv
pushl
sti
jnp
dec
outsb
inc
add
jle
push
inc
add
xchg
jnp
js
add
incl
add
out
cltd
loope
cmp
add
ja
add
and
xor
adc
add
add
sahf
mov
scas
push
call
jmp
push
add
aam
in
icebp
push
dec
jp
add
in
mov
add
jno
add
add
push
fnstcw
push
push
pop
push
les
add
push
fdivrl
stos
push
ret
mov
add
call
ja
add
jmp
stos
or
and
and
xor
add
mov
in
pop
add
sub
roll
add
push
jae
mov
dec
movl
mov
pop
inc
add
nop
imul
in
xchg
dec
repnz
loopne
mov
aam
mov
add
cmp
dec
clc
jle
aas
repz
add
arpl
jbe
add
adc
jg
pop
iret
adc
or
add
add
add
out
aad
add
sar
mov
xchg
addl
stc
cmp
or
jne
add
lcall
add
out
jle
mov
add
inc
push
add
cld
xor
xchg
loopne
cmpsl
add
sbb
add
shll
xchg
jnp
add
imul
jns
cld
je
pushl
add
pop
sbb
push
je
loopne
sbb
call
mov
add
jecxz
mov
add
jns
nop
mov
and
jle
inc
add
sub
decl
add
push
popa
add
mov
inc
add
add
jne
jmp
push
xor
jmp
push
inc
xor
add
in
sbb
or
test
leave
aam
add
lcall
movb
add
call
sbb
xchg
mov
sbb
add
inc
add
roll
add
inc
add
dec
inc
add
inc
add
pop
push
sub
jmp
sbb
sub
add
add
stos
movb
mov
je
pop
pop
jb
in
arpl
xchg
roll
sbb
inc
xchg
push
lcall
addl
add
mov
add
add
jl
ret
fbstp
adc
jb
add
incl
ljmp
pop
jmp
xor
enter
add
incl
add
fdivl
iret
pop
pop
fsubrs
xchg
sub
outsb
in
inc
add
in
adc
inc
add
mov
mov
loope
inc
add
xchg
out
std
sub
mov
fnstsw
xchg
shl
add
dec
pop
add
pushl
imul
push
or
sti
lret
mov
mov
jo
out
lods
push
imul
jge
jmp
pop
lcall
in
sbb
xchg
push
pusha
add
loopne
push
jne
ds
pop
pusha
add
incl
adc
push
mov
jmp
push
push
push
js
mov
dec
jg
cld
xor
mov
sub
add
enter
lret
popf
mov
mov
add
incl
lahf
test
cltd
push
sbb
ret
add
or
add
into
jbe
add
je
stos
bound
cld
cmp
add
adc
add
add
xchg
jmp
jmp
push
arpl
loope
dec
sbb
movups
mov
and
aad
dec
dec
mov
sbb
ljmp
mov
jmp
push
sbb
stos
iret
mov
call
xor
enter
and
mov
movb
add
dec
push
inc
add
hlt
cwtl
mov
jns
add
repnz
lock
and
xchg
cmp
lock
inc
add
test
adc
pushf
jmp
or
add
or
add
out
aad
or
icebp
add
mov
add
ja
add
jle
sub
das
stos
out
sbb
jecxz
je
lock
out
adc
mov
aas
mov
add
fwait
addl
inc
add
shll
add
inc
add
pop
fcmovnbe
sbb
add
jnp
or
lea
sub
xor
add
cwtl
jl
incl
sub
lcall
lods
and
xor
lods
lea
jmp
xor
clc
mov
cmp
fidivrl
add
mov
sub
add
lcall
mov
inc
add
add
in
out
filds
rolb
add
jmp
add
pop
scas
mov
icebp
in
push
ret
add
add
add
mov
adc
pop
adc
add
addr16
pop
mov
cmp
push
loope
add
push
mov
xchg
mov
stos
pop
xchg
sbb
push
dec
movsl
add
movsb
add
outsb
stc
xor
add
addl
mov
dec
push
jmp
or
add
pushf
jo
loope
and
ret
add
fbstp
sbb
push
add
mov
push
jle
jle
shll
add
jne
add
add
jl
and
aam
lret
call
sub
call
xor
add
jo
add
pop
movb
sub
push
fbstp
aam
mov
pusha
add
aaa
scas
ss
cmp
inc
add
mov
out
cmp
add
jmp
aas
sbb
cmc
mov
in
and
das
dec
inc
add
addb
add
lret
pop
sub
push
jbe
add
jmp
add
sbb
dec
test
mov
addl
add
mov
push
ret
add
mov
dec
pushf
sbb
out
fdivrl
xchg
faddl
call
je
pop
pop
or
xchg
and
push
pop
push
adc
add
sbb
jb
push
ret
push
popa
add
xchg
lock
push
aaa
sti
testl
movb
add
sub
lock
jmp
mov
addb
add
jmp
lock
ds
push
repz
cmp
pop
jmp
jle
cmpl
ljmp
leave
addl
add
jns
mov
mov
idiv
out
xchg
push
and
add
push
fsts
mov
mov
sub
mov
add
add
mov
sub
enter
and
test
adc
add
xor
add
add
xor
hlt
mov
ret
in
out
mov
pusha
add
sub
dec
iret
mov
add
xor
push
mov
addb
cmp
add
pop
pop
test
jg
fwait
push
rolb
push
cmp
push
ret
dec
add
and
jmp
add
add
fimull
int3
add
incl
pop
jg
fcom
out
mov
xchg
xchg
jge
iret
pushf
cwtl
mov
call
call
stc
and
sarb
icebp
xchg
xor
push
add
ljmp
lahf
inc
add
add
or
cmp
dec
xor
test
incl
inc
cmp
lods
sub
add
xchg
inc
add
mov
add
lcall
push
jns
add
add
add
add
rcr
jno
int
fbstp
inc
add
movb
sbb
cmpsb
add
add
xor
xchg
cmc
mov
pop
add
ljmp
insb
gs
aam
add
mov
es
add
pop
pop
and
xchg
das
leave
dec
push
jbe
add
sub
js
arpl
pop
leave
arpl
clc
imul
add
cltd
dec
ljmp
inc
add
ss
push
sahf
pop
push
jne
jmp
fbstp
lds
jb
pushf
movb
cwtl
push
insl
lock
add
add
add
add
adc
js
add
pop
insb
call
adc
sub
popa
add
cli
xor
arpl
movl
xchg
bound
xor
loopne
lock
outsb
insb
push
cmp
jmp
sbb
push
fists
xor
push
and
aam
add
aam
add
aam
cmp
jbe
add
jp
jnp
add
add
push
or
lret
mov
pop
jns
push
mov
sbb
fcoml
add
in
mov
incl
add
js
xor
pop
sbb
jbe
outsb
sbb
loop
pop
jmp
div
lret
add
into
into
das
movb
adc
inc
add
popl
in
pop
and
or
and
inc
add
aas
mov
cmp
dec
roll
fstl
mov
mov
out
add
incl
xor
add
pushf
mov
lahf
lret
push
add
inc
add
pop
test
cmp
pusha
add
pop
push
inc
add
sti
call
push
add
pop
push
add
leave
inc
add
inc
add
add
ds
dec
movl
add
rclb
jbe
add
pop
lret
xchg
out
les
cli
add
add
add
sti
jno
add
cmpsl
add
add
dec
push
jnp
inc
add
dec
push
arpl
mov
ja
fmull
repnz
sbb
add
lds
sbb
mov
jecxz
jecxz
or
add
jle
xchg
xor
xchg
push
out
into
mov
dec
cmp
add
add
adc
in
test
push
add
xor
pop
aas
push
push
fnsave
push
add
adc
mov
sbb
or
mov
add
push
inc
add
ret
arpl
push
push
iret
ret
add
movl
ja
jae
add
lea
ljmp
push
inc
add
inc
add
ja
mov
and
jae
xor
or
xchg
mov
add
jmp
aam
aas
ret
jnp
add
pop
mov
add
xlat
pop
or
lds
repnz
daa
add
add
lods
fbld
clc
and
inc
add
sub
cmp
imulb
ss
and
cs
lcall
daa
add
jmp
sub
sahf
adc
pop
fdivp
mov
js
icebp
push
xchg
push
loopne
inc
add
add
push
sbb
mov
push
jp
insl
bound
cmp
add
add
sti
pop
ss
mov
sub
add
cli
scas
or
and
jnp
add
jmp
fistps
roll
mov
lcall
add
jbe
mov
fstpl
sbb
sahf
lods
jo
fwait
je
icebp
call
cwtl
dec
mov
mov
add
filds
ljmp
call
decl
data16
scas
push
int
test
adc
sti
push
and
call
add
mov
add
push
arpl
adc
and
hlt
imul
jge
test
out
pop
push
and
sbb
or
jae
imul
lret
out
scas
sub
sub
lahf
cmp
add
ret
add
fisttpll
stos
clc
sub
shlb
ret
add
inc
add
dec
fs
sub
pop
push
test
outsl
inc
add
xlat
mov
or
pop
insb
daa
add
mov
add
add
add
add
sti
adc
sbb
mov
out
mov
ret
jmp
push
push
or
lahf
in
push
test
addb
cmp
add
add
decl
jo
xlat
stc
enter
into
shrb
loope
inc
add
loop
or
add
negl
sbb
outsl
stos
rcl
lret
sub
rclb
clc
aas
cmp
add
add
incl
mov
scas
nop
add
mov
xor
repnz
xchg
push
or
add
cmp
xor
cmp
add
sub
out
pop
mov
cld
fistl
add
dec
jl
add
push
dec
pop
lcall
lock
inc
add
sub
cld
push
sub
jmp
and
cmp
mov
nop
cmp
push
push
js
fidivs
repz
add
add
loope
sub
xchg
scas
mov
pop
pop
fwait
lret
cmpsl
add
popf
cmpsl
add
add
mov
push
inc
add
mov
fcomps
mov
add
movb
add
jmp
movb
outsb
test
mov
mov
movb
pop
mov
jmp
cld
addr16
arpl
cmpsl
add
add
movsb
add
add
pop
loop
in
aad
add
add
sub
add
add
jmp
jb
mov
add
das
sub
xlat
xor
sbb
add
stos
inc
add
jb
bound
mov
push
add
in
push
mov
inc
add
add
add
add
inc
add
add
add
fidivrs
data16
dec
cmp
xchg
and
add
push
add
mov
add
inc
lock
ret
xchg
push
aas
mov
jecxz
cmpsl
add
add
in
xor
add
call
sti
testl
mov
push
outsb
jae
add
add
adc
add
decl
xor
int
cmp
or
mov
jne
addl
sbb
add
pushl
jp,pn
xor
or
ljmp
addl
xor
call
out
ljmp
mov
ret
add
add
fadds
inc
add
enter
call
sbb
jns
mov
push
nop
mov
lahf
ret
add
pop
addl
dec
addr16
sbb
xchg
inc
add
fldenv
fcompl
mov
xchg
jbe
pop
pop
or
add
pop
jnp
add
jno
jge
fcomp
jecxz
pop
notl
aas
or
fidivs
add
popf
fcomp
adc
sub
jmp
addr16
sub
pushf
repnz
fmull
add
jmp
add
pushl
iret
push
add
jmp
hlt
mov
mov
inc
add
and
add
fcmovb
add
and
jp
xchg
scas
mov
jmp
jb
add
cmp
sbb
cmp
mov
push
ret
or
fisubl
add
add
inc
add
xchg
ljmp
sub
adc
fistpl
add
ret
jmp
or
sub
lret
add
ljmp
divl
out
fdivrs
cmc
ss
xchg
xor
roll
mov
imul
cs
add
adc
inc
add
scas
sti
dec
addl
add
lret
or
and
cmc
xor
fisubrs
roll
or
addl
addb
xchg
loop
aas
adc
sub
jbe
add
lea
notb
ljmp
mov
jmp
addr16
push
fldenv
add
mov
add
std
lock
testb
add
mov
sub
mov
data16
popf
dec
test
mov
add
add
jge
push
aas
push
cwtl
cmp
xlat
xchg
shl
add
push
jne
push
ret
imul
in
mov
add
test
mov
lahf
dec
cmp
add
add
jmp
mov
mov
outsl
loop
imul
push
mov
outsb
pop
roll
add
add
add
inc
add
mov
das
jg
shrl
xor
sub
add
mov
add
pop
or
dec
push
xor
push
popa
add
add
xchg
xchg
movsb
add
push
xchg
in
and
sub
jns
dec
cs
mov
mov
fdivr
fnstenv
add
jne
ja
pop
jmp
dec
push
push
sub
sbb
in
jp
addb
add
adc
push
xor
imul
add
fdivs
push
adc
inc
add
int3
jecxz,pn
outsl
and
add
call
in
add
xor
sarb
add
add
jbe
jmp
add
dec
sub
inc
inc
add
cld
mov
jae
add
ljmp
cmp
mov
ret
add
sbb
aam
pop
jmp
ljmp
imul
sub
add
jbe
pop
fldcw
mov
add
loop,pn
or
jmp
push
mov
add
jmp
push
push
pop
jb
je
push
mov
add
add
add
enter
je
pop
push
mov
jmp
lock
cmpsb
xchg
pop
mov
xchg
adc
test
fdivl
pop
jmp
push
sub
test
fcoml
xchg
mov
insl
lea
add
add
push
jmp
cmpsb
ret
add
loopne
call
insb
das
mov
xchg
xchg
jl
scas
dec
lods
negb
add
out
xchg
inc
add
inc
add
les
cs
add
imul
adc
mov
adc
inc
jmp
cmp
cmp
add
add
loop
add
leave
mov
add
ret
adc
add
fsubl
daa
add
test
setns
dec
sbb
ret
push
ret
and
xchg
mov
mov
xor
add
out
jno
add
mov
inc
add
dec
jb
roll
cmp
push
mov
add
repnz
jge
outsl
stos
inc
add
sub
sub
push
or
mov
mov
push
inc
add
and
enter
cli
ss
cmp
add
fs
mov
add
sti
xchg
add
call
sbb
hlt
rolb
scas
xchg
cli
leave
dec
stc
int3
push
loop
push
add
decl
outsb
fimuls
xor
add
lea
sub
jno
add
les
aad
add
je
and
mov
ja
popf
out
roll
cmpsl
add
movl
mov
stos
mov
lahf
sbb
je
jmp
pop
popa
add
pop
fwait
loop
pop
jmp
add
mov
add
sub
fldenv
add
add
outsl
mov
add
add
ljmp
fsubrs
cmp
lock
add
add
aad
add
out
mov
mov
rolb
dec
mov
jnp
jb
div
jmp
push
push
arpl
push
add
les
xor
and
loopne
stos
ret
add
sysexit
sub
sar
cmp
movsl
add
out
stc
lds
adc
adc
mov
inc
add
jbe
adc
add
add
pop
jmp
jns
inc
add
fdivrs
movl
jb
clc
mov
mov
stc
cmp
fbstp
inc
add
insb
mov
dec
into
lret
add
test
mov
add
add
add
into
lahf
mov
insl
jmp
aas
dec
repnz
add
lods
test
add
lcall
add
add
push
mov
add
incl
add
add
call
adc
mov
push
pusha
add
mov
add
add
inc
add
push
scas
bound
aas
das
movsb
add
jno
add
add
scas
inc
add
bound
add
incl
mov
popa
add
xor
add
mov
push
inc
add
cmp
adc
inc
add
add
fcomps
frstor
add
push
inc
push
pop
cmpsb
xchg
dec
xchg
xchg
out
daa
add
add
add
out
outsb
xchg
jl
add
das
scas
test
pop
mov
fldcw
add
add
mov
mov
sbb
call
add
jbe
sub
xor
cmp
ret
add
push
pop
jmp
pop
pop
or
ljmp
sbb
movsb
inc
add
adc
sti
icebp
call
dec
add
push
enter
into
cld
xor
aam
add
mov
jmp
lcall
sbb
add
add
jmp
scas
pusha
add
xchg
mov
jmp
add
add
inc
add
cmp
and
lahf
sbb
stc
test
cltd
adc
fisubrl
jmp
mov
mov
inc
add
xchg
pop
clc
roll
adc
test
into
addr16
in
pop
cmp
inc
add
add
add
rolb
call
in
pop
add
inc
add
pop
and
xchg
std
movl
in
lock
mov
jmp
push
push
cmp
mov
iret
inc
add
add
inc
add
mov
dec
add
adc
push
or
pop
cli
push
add
add
push
aad
rcrb
add
sbb
add
out
mov
xchg
in
pop
inc
add
add
mov
dec
sub
jp
and
fnstsw
sti
dec
outsb
pushf
pop
add
fstpl
xrelease
fmuls
test
pop
dec
jg
test
cmp
shll
call
jmp
into
push
inc
add
and
jge
add
mov
int3
aas
sub
or
jl
add
aas
pop
xchg
or
or
jne
jmp
cmp
jnp
in
or
inc
add
and
test
js
test
add
adc
mov
push
ret
cmpsb
enter
mov
dec
test
push
ret
push
push
sub
sbb
and
add
fists
adc
push
add
sti
addb
xor
mov
cld
jmp
push
push
popa
aam
das
pop
push
dec
inc
add
pop
add
add
je
adc
leave
movsb
add
add
cmpsb
add
aas
lret
jae
add
add
ljmp
loopne
stos
sbb
sbb
add
inc
add
add
or
ljmp
or
push
sub
add
call
cmc
or
sbb
shrl
pop
mov
jp
inc
add
pop
xor
bound
in
aad
mov
add
add
les
out
push
ss
aad
add
add
aam
cmp
add
call
push
int
imull
mov
jmp
sbb
cmp
addl
repnz
mov
jmp
add
enter
pop
adc
add
add
add
pop
sub
test
das
out
das
and
jne
add
jmp
add
or
jns
add
xor
rol
add
dec
jae
sahf
aas
or
imul
add
aad
xchg
dec
cmp
add
and
add
je
cmp
sub
push
lret
sub
loop
decl
sar
ljmp
addb
ds
add
addl
xchg
data16
fisttpl
add
incl
cmpsl
add
jae
add
fsubrs
add
add
lds
addl
add
cwtl
adc
addb
push
jmp
scas
add
bound
fsubl
add
lds
dec
pop
cs
scas
xor
call
cmp
push
ret
push
push
dec
mov
add
add
cmp
stos
test
adc
ffreep
add
mov
push
add
pop
xor
add
cmp
push
call
or
dec
out
cmp
push
push
idivl
mov
inc
add
flds
ja
pop
fiadds
mov
scas
jmp
dec
pop
and
mov
stos
adc
les
and
or
jno
add
popf
addb
mov
mov
sbb
in
js
add
mov
xchg
jmp
dec
lock
mov
outsl
xchg
fisttps
loope
adc
jg
nop
icebp
xchg
shr
cmp
add
adc
add
adc
in
mov
aas
xor
jne
dec
or
add
add
jl
pop
into
fwait
les
stc
jne
add
inc
add
add
add
add
lods
sahf
shlb
les
lret
aam
add
test
add
insl
push
add
push
sub
ret
add
dec
loope
lret
push
std
ja
add
pushf
cmpsb
add
clc
insl
add
mov
pop
idiv
incl
mov
dec
loope
lds
int
add
imul
mov
add
insl
aaa
data16
add
add
or
into
add
testb
cmpsl
add
data16
stos
push
adc
fsts
insb
pop
pusha
add
fiadds
add
lahf
aad
dec
or
add
fldenv
add
rolb
add
ja
xor
add
and
xor
add
imul
mov
addb
popl
enter
jbe
fcoml
movb
fistpll
popa
add
and
or
jno
xchg
mov
sub
and
add
lret
sbb
add
call
cli
mov
insl
shl
clc
popa
add
add
movsl
add
jmp
notb
inc
fists
insb
mov
mov
fsubs
incb
call
in
sub
in
inc
add
add
incl
add
sar
fldt
xor
xchg
mov
add
add
repz
add
lret
test
add
insl
add
in
ja
add
add
add
xchg
lock
mov
add
je
add
fwait
pop
add
sbb
jo
add
push
test
ljmp
mov
add
data16
and
pslld
and
test
stc
clc
movsl
add
xchg
jl
adc
int3
pushf
addb
sbb
push
test
call
add
add
mov
mov
add
xchg
outsl
pop
and
dec
push
add
add
add
js
add
add
pop
mov
add
add
mov
add
pop
and
add
gs
mov
and
roll
inc
add
add
mov
mov
xchg
xor
inc
add
lahf
fwait
addb
div
push
add
iret
mov
incl
dec
imul
add
das
pop
testb
incl
idivb
aas
ret
add
and
xlat
jmp
lock
mov
popf
mov
stos
mov
shrl
das
outsb
rol
add
aas
and
add
lods
sub
push
sub
dec
inc
add
movb
mov
out
push
or
aad
xor
adc
fdivrl
add
call
insl
add
or
dec
loop
mov
lcall
loopne
mov
in
negl
push
jmp
cmp
dec
add
xchg
js
add
aam
loope
lret
pop
iret
imul
loope
imul
add
mov
jle
ds
incl
in
popf
push
sub
add
inc
inc
inc
imul
sub
out
js
adc
fidivrl
and
nop
or
rolb
xchg
add
jmp
add
xchg
mov
cmp
icebp
inc
add
mov
push
out
mov
std
mov
sbb
adc
xor
mov
adc
pop
sub
jmp
lds
mov
jno
jno
add
xchg
cli
lret
xor
fsubs
push
fdivrs
lods
mov
sub
xor
popa
add
inc
add
add
aaa
call
jmp
mov
add
xchg
stos
loop
aaa
movb
add
add
jne
add
and
fwait
jnp
add
ss
add
cmp
add
or
aam
jns
cmpsb
add
mov
bnd
xchg
int3
pusha
add
xchg
sub
xlat
inc
add
movsb
add
jge
test
test
fisttps
pop
mov
add
mov
add
add
push
in
test
sub
xchg
out
repz
loop
decl
push
sub
push
inc
add
mov
aaa
loopne
movsb
add
dec
adc
call
push
add
aas
mov
push
pop
ljmp
xchg
inc
add
outsb
imul
mov
sub
jno
add
xor
add
add
icebp
sub
sbb
sub
cltd
test
popa
add
and
int3
push
lret
add
fmull
add
cmp
add
jg
fadds
xchg
or
cmp
adc
aaa
ds
push
pop
cld
mov
pusha
jmp
add
push
xor
dec
js
icebp
mov
add
aad
jg
lret
hlt
inc
add
pushl
add
add
add
movsb
add
cmp
gs
add
xchg
les
lcall
fdiv
push
daa
add
push
add
pop
lock
dec
movsl
add
aas
hlt
ret
add
jmp
in
sbb
xchg
fists
cwtl
pusha
add
xor
xor
call
sbb
add
pop
dec
repnz
out
lock
test
addl
loope
daa
add
fwait
mov
cmp
jns
mov
add
add
insl
or
loope
scas
data16
mov
dec
popf
cmp
mov
push
inc
add
dec
arpl
jle
out
push
or
jmp
push
in
popa
ds
add
aaa
mov
mov
les
push
sahf
sub
addl
add
add
pushl
fnstsw
add
das
jge
push
add
jmp
arpl
cld
fnstcw
leave
dec
dec
cmp
xchg
cmp
sub
int
xchg
cs
stos
lahf
add
push
shl
jmp
mov
mov
sbb
popa
add
push
add
cld
iret
imul
lods
push
ret
and
insb
cmpsl
add
test
das
movsl
add
fstpt
scas
mov
mov
cwtl
loop
sbb
into
pop
add
loopne
jp,pt
mov
mov
xor
add
lods
add
test
sbb
add
add
sub
fidivs
xchg
dec
mov
add
add
out
stos
mov
add
add
mov
test
mov
sbb
mov
add
bound
mov
add
jns
add
neg
and
testb
dec
fcmove
inc
add
jp
add
add
imul
and
cmpsl
add
adc
xor
add
pusha
add
jae
loope
inc
add
dec
fmulp
add
cmpsl
add
out
in
aaa
imul
push
ret
cld
ret
insb
sub
xchg
out
ficoml
ja
sub
push
lret
add
mov
sbb
rolb
mov
mov
punpcklbw
cmp
in
daa
add
call
filds
add
xchg
stos
lret
xchg
leave
mov
and
and
mov
cli
push
inc
add
add
or
add
mov
or
lock
in
jns
mov
data16
sub
shr
hlt
incl
push
pop
mov
xchg
add
fwait
pop
add
cmpsl
add
add
shl
add
dec
mov
test
inc
add
add
lock
cwtl
push
push
lods
out
roll
add
add
xchg
outsb
add
or
adc
add
cmp
adc
sbb
add
add
add
ljmp
daa
add
popa
add
lods
out
out
add
push
sub
lds
sub
add
push
jmp
testb
add
test
mov
ds
add
hlt
add
call
inc
add
dec
jmp
push
push
pop
and
xor
xor
add
sarl
inc
add
add
int3
out
lea
enter
adc
sub
add
jle
aaa
sub
sbb
rolb
push
movl
test
dec
inc
add
and
mov
cmp
jb
push
xchg
dec
out
icebp
mov
add
js
mov
addb
and
cld
cmpsb
add
push
xchg
mov
adc
mov
lcall
pop
jmp
enter
and
sbb
inc
add
jge
add
lcall
ret
jmp
push
push
fbld
or
leave
iret
sbb
add
notl
cmp
inc
add
jle
inc
add
lcall
sbb
push
add
add
add
test
add
add
xchg
lea
mov
pusha
add
pop
nop
mov
sub
lds
push
mov
jmp
push
enter
mov
add
lahf
je
mov
add
add
sub
divl
fisubs
add
inc
add
ret
add
shr
jmp
push
or
mov
mov
gs
movl
adc
pop
push
rcrl
dec
push
pop
jo
xor
jne
add
out
call
addl
add
cmp
push
xchg
inc
add
adc
push
nop
fiaddl
ljmp
sahf
fistl
fists
fcmovnu
pop
aad
add
cmp
add
add
adc
add
add
pop
hlt
sti
xchg
sbb
adc
add
dec
pop
in
clc
repnz
outsb
jbe
add
int
lock
mov
sti
add
ret
or
test
add
jge
jge
imul
aad
ja
cmp
cmc
ljmp
mov
mov
add
cmc
jnp
mov
cmp
repz
sbb
add
add
ret
pop
dec
xlat
jl
or
loopne
pop
pop
xchg
insb
sbb
add
adc
lods
enter
push
decl
test
jmp
inc
adc
add
lcall
inc
add
icebp
fmull
add
jmp
les
inc
add
xchg
adc
dec
cmp
add
out
roll
add
test
cmc
test
rorb
fdivr
ja
mov
std
push
jge
adc
movl
clc
out
sub
pushl
sub
jbe
push
xor
add
mov
dec
add
call
jmp
push
cmp
mov
jmp
fildll
sti
jecxz
add
not
cs
dec
mov
inc
add
cmpsb
add
inc
add
popf
test
and
lods
imul
mov
jo
add
or
or
cld
movl
add
lret
ljmp
ret
add
add
add
add
xor
loop
pop
mov
jl
jmp
push
cmpsl
add
flds
push
adc
inc
add
lods
add
sbb
aam
add
jecxz
in
dec
nop
popa
add
add
mov
neg
xor
jge
add
arpl
ds
jg
ljmp
clc
les
ljmp
or
add
notb
push
sub
nop
xchg
sub
scas
jno
add
bound
les
sbb
sbb
xchg
xchg
xchg
xchg
jp
jg
lds
out
jecxz
jns
xor
add
add
insb
or
cld
testb
dec
xchg
inc
add
cld
pushf
pop
add
lcall
push
pop
test
ffreep
add
push
imul
push
ret
lcall
scas
cmpsb
add
lahf
inc
add
add
add
out
in
mov
jbe
test
scas
mov
inc
add
adc
fstps
movb
xor
add
sbb
addb
test
cmp
out
cs
bound
mov
pop
or
add
push
ret
add
loop
inc
add
call
cs
ja
cli
add
call
enter
stos
addl
iret
dec
nop
call
add
or
push
push
ret
in
adc
leave
xchg
pop
push
movl
add
cmp
addl
decl
fistl
lods
lea
int3
pop
data16
jmp
idivb
cmp
pop
add
add
call
add
add
enter
addl
pop
adc
jo
add
inc
add
add
imul
jmp
cmpsb
sub
idivb
in
jp
in
xchg
push
add
sbb
outsb
icebp
mov
mov
add
call
pushl
movl
lret
cli
xchg
enter
pushf
add
incl
or
mov
adc
fstps
je
mov
xor
rolb
fcmove
sub
add
add
lock
dec
jo
aas
push
cmp
inc
add
inc
add
sahf
xor
add
add
add
add
loop
roll
or
add
fisubs
sub
add
call
jmp
xor
add
pushl
add
push
mov
add
pop
push
push
push
popa
push
jae
mov
cmp
jae
add
dec
and
int
xchg
nop
mov
xchg
jecxz
mov
into
cmp
adc
pop
sub
add
add
pop
loop
sbb
add
out
dec
mov
icebp
leave
add
pop
aad
add
ljmp
mov
idivb
push
add
jmp
mov
mov
mov
add
mov
fisubrl
inc
push
ret
push
ret
jecxz
adc
and
mov
add
add
pop
adc
sub
add
call
int
dec
inc
pop
ljmp
mov
add
in
dec
xchg
mov
out
and
add
pop
dec
mov
add
movsl
add
add
pop
mov
mov
out
fnstsw
mov
int
add
add
add
xor
std
jo
mov
add
mov
fwait
xchg
movl
add
jmp
sbb
push
push
add
add
stc
xchg
movsl
add
ss
in
pop
data16
addl
or
cs
call
roll
pushf
mov
adc
mov
ret
add
in
in
outsl
lods
jno
cwtl
pop
clc
push
call
sarl
testb
add
test
into
int3
addb
xchg
add
mov
dec
cmp
mov
add
pcmpeqb
insb
mov
cmc
and
add
push
add
incl
pop
stc
out
or
cmpsl
add
in
movsb
add
pop
ss
xchg
push
pop
pop
pusha
add
xchg
cmp
bound
inc
add
cld
adc
imul
sub
add
movb
add
ljmp
stos
imull
scas
sub
pushl
push
mov
sub
repnz
pushl
mov
add
repnz
arpl
int
out
ja
mov
arpl
sub
xor
mov
cmp
dec
cmp
add
add
add
pop
sub
repz
out
cli
cmp
mov
add
add
call
les
inc
add
inc
add
xchg
lods
xor
add
or
rcr
dec
pusha
add
stc
push
xchg
jmp
add
mov
cmp
pop
xor
iret
daa
add
lret
add
add
incl
icebp
dec
pop
dec
pop
and
add
outsl
push
jp
push
addb
in
dec
mov
or
and
pushf
ss
pop
data16
add
add
add
dec
push
jge
arpl
lds
xor
cmp
dec
ds
add
dec
lds
into
pop
mov
add
add
loopne
and
mov
pop
adc
lea
ret
imulb
and
push
jns
insb
adc
and
sub
dec
xchg
and
xor
imul
sbb
jmp
push
pop
arpl
ret
pop
xchg
into
fildll
sbb
add
dec
jg
popa
add
add
cli
inc
add
addl
jmp
sbb
dec
add
dec
loop
movb
pusha
add
les
jecxz
iret
call
arpl
in
test
cmp
add
add
push
add
dec
das
outsl
jbe
or
adc
add
cmp
pop
sub
mov
test
add
lret
jg
aas
pop
xor
daa
add
cmp
cmpsl
add
mov
jmp
push
into
sub
adc
add
add
imul
jnp
add
add
sahf
mov
adc
inc
add
mov
add
stos
sbb
sub
mov
jecxz
or
mov
add
mov
mov
jp
ss
insl
inc
add
sti
repz
jle
add
add
movswl
sub
add
add
js
xor
fnstsw
jle
movsbl
add
mov
jmp
push
into
adc
adc
mov
iret
xor
add
mov
inc
add
or
add
fistpll
add
call
arpl
ret
mov
add
test
cmp
push
leave
out
dec
mov
xchg
ljmp
cld
inc
add
lcall
scas
icebp
xor
movsl
add
add
add
incl
shrl
add
imul
add
loope
xor
xchg
shrl
aaa
mov
add
mov
mov
and
cmp
je
rolb
push
pusha
add
stos
add
lcall
mov
xchg
imul
addb
lcall
stos
test
pop
dec
adc
out
roll
mov
push
aad
cmpsb
add
push
loopne
dec
test
xor
aad
mov
xor
mov
add
inc
add
jne
jmp
cld
xor
sbb
and
add
push
cmp
jnp
add
push
addb
les
sti
fcmovnu
mov
out
fsubl
add
jl
add
int
add
jmp
and
in
jbe
and
out
cmp
inc
add
pop
lahf
lret
jne
add
add
cmp
adc
addb
add
and
imul
repnz
xchg
outsb
lea
add
popa
jmp
mov
push
inc
push
xor
cmp
sbb
sub
and
cli
ljmp
add
add
mov
add
add
dec
adc
xor
xchg
ds
clc
jbe
or
add
hlt
js
add
add
add
les
jmp
pop
rolb
movl
add
mov
roll
inc
add
or
repnz
add
pusha
add
fisubrs
cmp
mov
fdivr
ljmp
push
je
jmp
xor
ss
mov
push
inc
add
dec
lret
mov
cmpsl
add
stos
dec
mov
push
mov
cld
popl
add
movl
fwait
add
inc
add
add
push
push
mov
jmp
push
push
and
mov
add
into
test
add
inc
add
add
mov
jae
in
lret
sbb
imul
jo
add
add
sub
sbb
push
leave
jmp
xchg
ljmp
pop
fucomip
push
scas
fdivs
adc
aam
mov
movl
call
add
add
add
add
push
push
push
cmp
rclb
add
aaa
mov
xchg
lods
mov
jnp
add
pop
mov
add
insb
int
rep
add
mov
inc
incl
mov
sub
je
arpl
mov
mov
sub
sub
add
test
mov
jne
add
or
dec
inc
add
imulb
push
push
pushf
cmp
jecxz
sbb
cmpsl
add
add
mov
push
mov
add
pop
jmp
aam
sub
push
adc
add
je
add
or
ret
daa
add
neg
cmc
mov
jl
inc
add
add
add
jecxz
add
incl
add
or
add
inc
add
pushl
jmp
adc
or
data16
mov
dec
sub
inc
add
add
scas
mov
inc
add
cld
call
mov
sub
add
add
ja
mov
xor
xchg
jge
adc
add
movsb
add
add
adc
js
mov
bnd
decl
mov
ret
incl
pushl
shr
lcall
push
pop
inc
add
ljmp
mov
jmp
push
jb
shr
jmp
dec
or
push
ret
cmp
sbb
sub
decl
mov
push
ret
enter
shrb
dec
jge
cltd
cs
aaa
rorl
xlat
das
test
xlat
cmpsl
add
add
bnd
in
popa
add
cmpsb
add
xchg
jno
add
mov
jmp
stos
push
xor
pop
lret
sbb
add
dec
loop
lcall
inc
in
add
add
or
mov
jnp
sub
jmp
inc
add
in
jg
add
add
add
ficoms
add
or
sbb
pusha
loop
incl
xor
sbb
add
jae
add
push
lds
data16
add
add
add
or
pushf
out
in
and
dec
ja
fcompl
or
add
addb
add
inc
add
mov
and
inc
add
mov
jmp
push
add
mov
add
scas
dec
out
pop
test
mov
add
add
inc
add
push
add
add
lds
fldcw
xor
call
add
mov
inc
add
hlt
push
fstl
mov
xchg
xor
push
add
jmp
push
or
add
ret
jmp
sbb
jle
add
xchg
stos
and
adc
mov
mov
jmp
inc
or
add
add
add
out
fstpl
add
push
add
aam
mov
mov
adc
add
mov
popl
add
xchg
data16
lahf
sti
mov
leave
push
inc
add
addb
add
add
std
out
pop
aas
ret
jmp
imul
add
adc
add
xor
test
lea
scas
sbb
add
add
add
je
jmp
sbb
add
xor
push
push
incl
inc
lock
pop
ret
icebp
sti
xor
inc
add
add
mov
mov
ljmp
push
insb
push
ljmp
push
ret
insb
push
push
push
jo
pop
add
lret
loopne
cmc
lahf
push
into
sbb
outsl
pop
push
jp
add
add
add
aam
ljmp
cld
cwtl
jg
dec
push
aad
into
and
inc
add
xchg
xor
add
jmp
pop
jb
push
f2xm1
push
mov
add
negb
add
inc
add
aaa
lahf
push
dec
push
xchg
adc
add
mov
sbb
mov
call
and
push
fisttpll
sbb
xlat
or
push
mov
call
add
xchg
mov
test
pop
imul
imul
add
dec
loop
push
add
fnsave
cwtl
sbb
inc
add
add
imulb
repnz
cmp
add
and
adc
add
add
add
add
call
leave
into
push
mov
jp
sbb
push
in
and
add
lock
push
ss
iret
lret
push
ret
loopne
cmp
test
int
movl
movl
pushf
xchg
aam
add
in
xor
add
xchg
pop
sub
loop
lods
xchg
addl
stc
add
xchg
xlat
cmp
fbstp
js
lcall
inc
add
add
add
ds
pop
xchg
and
outsb
pop
add
sbb
fisubrl
pop
loopne
montmul
cmpsb
add
xchg
push
decl
xor
dec
ds
push
mov
nop
sbb
add
sbb
nop
and
mov
mov
pushf
mov
add
popa
or
test
add
sub
dec
imul
inc
add
movl
sub
mov
jle,pt
add
add
shr
das
add
and
cld
push
push
dec
xor
cmp
mov
xchg
fs
inc
add
dec
sbb
aam
jo
imul
push
ret
sub
or
loope
outsb
add
shll
xchg
jnp
add
push
sub
clc
addl
adc
outsl
test
nop
mov
add
dec
sbb
pop
jmp
cmp
cwtl
cmc
mov
flds
js
add
pop
clc
lods
push
adc
add
lret
pushl
jmp
push
aam
push
pusha
add
pushf
jl
add
jecxz
mov
mov
add
std
fwait
imul
add
jbe
xchg
inc
add
fidivl
rolb
add
add
add
inc
add
cmp
addb
jae
inc
add
cmp
outsb
aam
add
fidivs
mov
jmp
push
cld
mov
outsb
in
das
std
roll
fcmovu
movsl
add
xchg
inc
add
xor
push
adc
add
inc
push
mov
add
mov
decl
test
test
add
lock
sbb
mov
enter
pop
insl
and
lods
popl
cmp
inc
add
add
jmp
add
out
scas
jmp
test
xchg
ljmp
dec
jnp
and
xchg
stc
mov
add
add
pusha
add
cmc
add
inc
add
jb
inc
add
repnz
addb
setnp
dec
sti
mov
sub
add
add
mov
add
add
inc
jmp
idivb
cmp
js
ret
add
popl
add
mov
add
and
int
pushf
pop
jnp
cld
mov
adc
add
add
add
fcompl
ror
and
data16
inc
add
in
mov
add
add
sub
gs
movb
jno
cld
jl
call
jmp
js
stos
aam
jnp
or
add
add
add
cmp
jmp
push
stos
push
dec
fsubl
fsubp
add
add
js
add
lea
push
mov
mov
add
dec
xchg
shll
test
jae
add
outsb
stos
jo
mov
jle
add
out
insb
cmp
add
dec
xor
add
jmp
add
add
cmp
push
jmp
into
push
push
in
push
ss
std
outsb
aad
add
add
popa
add
fdivr
or
mov
cmp
adc
add
add
add
mov
shl
add
inc
add
inc
add
add
mov
add
add
add
enter
lahf
jp
add
popa
add
mov
add
add
mov
fsts
out
lds
fcomip
cmpsb
add
xchg
push
xchg
adc
mov
lret
aam
cld
mov
mov
xchg
inc
add
dec
addb
mov
add
lcall
add
pushl
loopne
test
dec
fstpt
sti
push
and
mov
addl
inc
add
aam
cmp
inc
add
pop
jge
pop
cmp
push
pop
outsb
in
out
invd
jle
scas
adc
clc
repz
adc
iret
shll
cli
lods
test
je
ljmp
sbb
repz
aad
lret
mov
dec
xlat
cmp
cmp
pushl
aam
fildll
les
jmp
dec
adc
add
add
jle
add
cmp
add
fsubrl
add
jnp
pop
pop
inc
add
bound
pusha
add
add
add
or
cltd
addl
loope
jo
inc
add
pop
addl
mov
cmp
rorb
add
jmp
add
mov
outsl
shlb
scas
mov
push
and
add
jnp
add
daa
add
pop
fldt
repz
in
jmp
mov
ret
sub
ds
push
loop
push
add
lahf
inc
add
lcall
dec
xor
pop
negb
testl
push
ss
leave
mov
adc
in
cld
jmp
adc
push
into
push
sub
mov
jmp
push
aam
mov
mov
jmp
add
ret
add
add
jmp
jl
sahf
mov
add
lahf
add
out
pop
push
add
dec
lahf
test
mov
shrl
adc
movsl
inc
add
mov
push
xchg
das
push
add
jmp
xor
add
mov
fists
rcrl
fnstsw
ss
test
repnz
jns
cmp
in
push
loop
lods
push
pop
mov
add
add
incl
add
out
cltd
test
jg
clc
mov
add
or
add
jmp
inc
aas
xor
hlt
or
xor
scas
iret
pop
scas
pushf
pusha
add
cmpsb
add
pop
add
mov
mov
xchg
out
or
xchg
loop
jmp
add
out
popf
jmp
popa
add
pushf
bswap
pop
mov
add
add
inc
add
sub
stos
out
icebp
pushf
pop
push
sbb
mov
add
xchg
adc
in
mov
loopne
lret
sbb
in
adc
inc
add
sbb
sub
lea
cmp
adc
jmp
add
add
adc
push
jne
jmp
dec
data16
xchg
data16
add
addl
mov
call
add
add
sbb
add
incl
jmp
push
adc
inc
add
or
or
push
imul
add
xchg
dec
dec
inc
add
sub
jne
jmp
sbb
xor
or
adc
sub
add
inc
add
in
inc
pushl
cld
inc
ljmp
lea
pop
leave
add
fcomps
xor
add
cmp
cmpsl
add
adc
incl
pop
add
mov
add
add
testl
or
add
jmp
add
mov
lock
push
push
push
ret
and
push
add
add
add
add
daa
add
add
movsl
add
rcr
push
add
je
je
add
fcmovnbe
jmp
dec
and
lret
imul
loop,pn
cmovg
inc
add
mov
add
scas
jge
mov
or
arpl
push
add
jg
inc
add
adc
add
push
ret
adc
add
xchg
dec
loop
loope
out
sbb
jmp
fists
or
inc
add
mov
add
fisttpl
addb
jb
add
jmp
add
xchg
in
test
ds
add
add
pop
repz
mov
aaa
fcos
sbb
nop
xor
pop
mov
lods
cmpsb
add
add
add
cmp
cmp
jmp
addr16
ret
add
mov
add
fsubrl
lret
pop
add
pusha
add
add
add
pop
add
push
sbb
jmp
les
jb
sbb
adc
push
ja
add
jmp
add
in
and
xor
mov
add
add
pusha
add
loopne
mov
in
mul
add
ljmp
dec
in
outsl
adc
mov
xor
or
cmpsb
add
xor
and
cmpsl
add
js
jns
sbb
ja
pop
push
ret
sbb
mov
mov
jns
addb
outsl
daa
add
mov
jae
push
jmp
push
pop
sub
add
lods
or
add
sbb
cmp
call
jle
cmp
push
test
sub
outsb
lods
cmpsb
add
sub
add
pushl
cmc
in
push
add
add
jmp
add
mov
loope
out
xor
arpl
push
test
in
movsl
add
int3
mov
and
pop
add
cmp
ror
jmp
sbb
push
lcall
int3
imull
add
out
call
dec
push
stc
lds
or
sldt
jmp
push
add
add
jle
sbb
into
xor
add
mov
inc
add
and
pop
push
push
jmp
push
ret
xor
outsl
xchg
cmp
mov
jmp
stos
sub
mov
daa
add
push
mov
add
fsub
add
add
popa
add
add
or
add
and
arpl
xor
lods
in
lret
jmp
add
incl
add
add
cmp
mov
in
sbb
mov
repnz
add
sti
rcrl
push
test
jp
pop
out
lahf
nop
pop
daa
add
pop
lret
xchg
dec
addb
xchg
push
jl
add
and
test
add
imul
incl
decl
xchg
ret
jb
pop
adc
sub
add
add
xor
push
shrl
in
mov
add
cmp
daa
add
and
inc
add
xor
add
add
add
incl
inc
add
dec
jmp
nop
jb
inc
add
cmp
or
cltd
pushf
push
ret
add
add
pop
mov
or
pop
lods
mov
xchg
pop
iret
nop
call
in
add
add
add
add
pushf
test
mov
add
add
cmp
mov
push
cltd
mov
addb
rcl
mov
popf
sbb
push
add
add
add
aad
mov
or
add
dec
push
movsb
jmp
insb
push
mov
jle
add
adc
pop
sldt
sbb
pop
push
into
adc
outsl
xor
jno
sahf
dec
jle
add
jbe
dec
fisttpll
lcall
cmp
enter
add
add
push
add
push
push
xchg
or
add
mov
mov
ds
mov
mov
pop
fsubs
into
inc
add
imul
xor
je
inc
add
push
adc
add
mov
push
ret
dec
mov
add
cmp
add
push
xor
cmc
iret
cld
push
mov
int
mov
mov
add
dec
mov
int3
mov
sub
cltd
scas
jbe
test
and
push
sbb
les
sti
or
add
pop
dec
mov
jno
call
fldenv
jmp
add
fidivrs
push
mov
xor
stos
mov
add
popf
fcmovbe
outsb
push
mov
addl
add
jecxz
hlt
mov
sub
pop
mov
fcomps
push
push
rolb
add
adc
scas
add
add
cmc
test
add
cmp
mov
sub
cwtl
inc
add
push
mov
in
add
scas
add
add
mov
mov
push
adc
lods
mov
jg
les
xchg
mov
mov
add
pop
lock
add
insb
jne
les
test
inc
add
in
dec
testb
enter
or
test
mov
addl
movsl
call
testb
js
sbb
jmp
add
add
jne
stos
ds
lea
add
ficompl
test
js
and
inc
add
add
mov
sub
pop
icebp
mulb
pop
jg
movsb
add
aam
sub
mov
add
add
fists
sbb
add
add
mov
iret
mov
imul
mov
loop
addb
adc
js
adc
jne
push
ret
out
cmp
jo
lock
or
aaa
lcall
dec
in
inc
add
cmp
movsl
add
popa
add
mov
in
lahf
mov
ret
hlt
loop
xor
add
add
push
bound
jp
mov
out
or
adc
cmp
mov
pushl
push
pop
ret
add
push
add
and
add
insb
push
dec
cmp
inc
add
inc
add
adc
jmp
add
add
dec
or
and
push
outsb
inc
add
mov
add
lcall
add
sub
add
add
mov
sahf
pop
sub
add
add
and
sbb
inc
add
xchg
call
inc
add
ja
mov
push
mov
add
add
push
mov
add
xchg
dec
jg
push
stc
movsl
add
add
add
and
add
dec
inc
push
xchg
pop
out
xor
dec
inc
add
repz
addb
add
je
int3
jg
dec
xor
sbb
cmp
add
add
mull
add
inc
add
push
hlt
movl
ret
stos
pop
add
mov
jmp
push
push
or
pop
add
add
call
mov
xor
sbb
dec
mov
dec
cs
push
fistpll
inc
add
pop
fstpt
add
ljmp
add
mov
call
and
push
push
fisubs
cmp
scas
push
out
ljmp
mov
popf
cmpsl
add
jbe
imul
call
pop
pop
dec
cmc
push
stc
lcall
sbb
add
sub
add
add
lcall
xchg
mov
adc
or
jnp
add
fcoms
jmp
inc
add
push
add
shl
incb
lods
add
adc
jb
scas
mov
xlat
push
inc
add
ret
fmull
lret
or
mov
mov
pushf
mov
inc
add
shll
scas
jno
add
sti
roll
or
fwait
pop
push
cwtl
aas
aad
dec
add
xor
fmuls
and
pop
faddl
decl
shr
add
incl
adc
testb
call
dec
and
ja
and
aam
add
add
mov
inc
add
movsb
add
inc
push
ret
lcall
add
pop
out
dec
ficomps
mov
cltd
enter
imul
popa
fcos
jmp
push
push
lods
pop
lahf
mov
push
mov
lea
jmp
push
mov
cmpsb
test
test
imul
sahf
fucom
add
add
mov
jmp
insb
dec
lods
inc
add
jbe
sahf
inc
add
lret
and
xchg
cmp
add
jns
add
inc
add
jne
add
int3
outsl
xchg
xchg
dec
mov
in
push
dec
in
inc
add
mov
cmpsl
add
jmp
mov
stos
pop
les
add
add
inc
add
mov
sub
punpcklwd
js
add
call
sub
fistpl
jmp
jmp
add
xchg
mov
adc
mov
add
jmp
aam
lret
shl
add
pop
inc
add
stos
cld
add
inc
add
add
push
mov
into
add
mov
add
add
xchg
xchg
push
clc
push
cmp
mov
add
xor
ret
addr16
popf
addl
test
mov
in
add
lcall
sub
jmp
popa
or
mov
add
or
add
das
jg
in
les
cmpsb
add
sub
add
fcomip
adc
mov
or
add
adc
repnz
sub
add
ror
dec
push
aam
add
jo
xchg
push
cld
sbb
add
mov
or
add
cmp
and
push
mov
inc
add
jmp
test
test
inc
add
add
adc
add
add
pushf
stc
fnsave
add
and
ljmp
sub
add
jmp
and
add
popl
leave
pop
es
add
add
xchg
shrb
jne
xchg
mov
mov
cmpsl
add
lods
lret
or
in
mov
add
imul
sub
add
mov
add
jp
add
add
call
inc
add
or
addb
and
fwait
addb
push
cmc
aaa
ja
js
cs
jmp
lret
jmp
add
and
mov
add
dec
les
pushf
sbb
sbb
add
lcall
pop
pushf
push
es
xchg
ret
add
cltd
sbb
push
or
fisubl
mov
adc
push
add
jmp
inc
push
adc
add
dec
nop
push
pop
jmp
sub
push
and
inc
ljmp
enter
fldcw
jae
adc
cmp
or
pop
or
popa
add
pop
xchg
xchg
push
inc
add
add
add
add
mov
add
mov
add
cmp
add
add
push
or
add
and
scas
lods
test
out
sbb
call
dec
jmp
push
enter
and
add
sbb
push
inc
add
ret
cs
add
add
mov
pop
xchg
ret
fisttps
mov
jmp
push
cmp
inc
pop
add
outsb
aam
xchg
xchg
xor
loop
jne
add
shl
lds
clc
jle
mov
push
push
shll
add
dec
xor
add
xchg
rcrl
pop
jnp
add
ljmp
stc
dec
dec
jnp
pop
or
js
xor
mov
add
mov
push
mov
std
les
aad
add
pop
mov
dec
addb
cli
lds
or
xchg
push
push
movsl
add
stos
imull
dec
out
push
stos
in
dec
and
movl
adc
aam
fwait
lret
pushf
out
or
mov
add
cmpsb
add
dec
in
repz
pop
mov
add
adc
leave
sub
push
jmp
push
push
push
mov
inc
add
test
movsb
add
or
hlt
jns
clc
fldpi
and
adc
inc
add
ljmp
repz
add
jo
imul
jmp
sub
test
iret
xor
inc
in
push
ret
js
mov
jo
add
aam
aam
add
push
mov
add
jo
addr16
in
cld
outsl
sti
gs
aad
rcrb
bound
arpl
mov
mov
stos
cmpsb
add
jne
and
add
ret
nop
push
ja
lods
sbb
pop
xchg
lds
pop
dec
xor
add
pushl
jmp
imulb
rcrl
or
imul
add
adc
pusha
add
roll
add
sbb
test
data16
lea
add
out
fwait
jmp
dec
call
loope
in
cmp
add
insb
in
daa
add
addl
rolb
push
xor
mov
ja
sub
loopne
mov
mov
aas
test
and
ficoms
and
xor
mov
outsl
xor
sub
imul
and
out
popa
add
add
rolb
fisubrl
fnstenv
cltd
out
mov
dec
inc
add
add
iret
aaa
push
add
test
addb
aaa
mov
mov
and
idivl
lret
addl
hlt
push
add
add
push
mov
ret
inc
push
ret
out
add
pushl
or
int3
mov
test
mov
jns
push
testl
addl
nop
jne
add
inc
add
or
jmp
js
cmpl
add
mov
or
insl
push
push
inc
add
in
mov
jbe
add
into
rcr
pop
push
adc
arpl
hlt
jo
push
push
ret
inc
cmp
add
roll
stos
fsubrs
add
add
in
mov
jle
dec
pop
pop
dec
in
in
out
std
fcmovb
add
jge
mov
push
push
ret
cmp
ljmp
add
pop
add
outsb
stos
lahf
push
add
pop
cld
hlt
out
insl
add
inc
add
add
add
dec
dec
jecxz
mov
enter
push
jmp
mov
mov
push
js
add
jg
jmp
sub
pop
push
inc
add
add
cmpsl
add
add
mov
add
call
push
leave
loopne
cmpsl
add
xchg
lods
popa
add
cs
cmp
mov
inc
add
inc
add
test
jl
outsl
repnz
les
sahf
inc
add
push
cs
in
and
cmp
repz
cmp
jo
dec
pop
push
je
add
inc
add
add
add
adc
bound
jecxz
add
pushl
setl
add
adc
in
pushl
ret
add
add
adc
or
hlt
in
insb
stc
shll
and
imul
add
push
add
les
add
lcall
mov
add
lds
in
xor
add
inc
add
das
imul
or
jb
mov
add
add
push
sbb
add
add
decl
loopne
fbstp
and
testl
add
cmp
and
lret
ljmp
adc
add
iret
lods
jne
dec
mov
or
adc
icebp
adc
nop
push
hlt
pop
or
shrl
inc
in
or
add
js
pop
dec
add
pushl
shr
pop
leave
call
mov
add
add
out
in
sub
add
inc
add
push
jmp
addr16
push
mov
lds
mov
xor
inc
add
in
jmp
push
add
lcall
lcall
add
mov
rorl
lret
add
push
ret
push
push
push
cmp
or
cmp
and
call
jl
stos
lds
data16
ror
pop
mov
add
jo
outsb
aad
mov
imul
mov
mov
jmp
test
jne
push
dec
out
add
out
sub
mov
mov
je
cmp
add
pusha
add
shll
inc
add
out
and
inc
add
add
jmp
add
add
inc
add
pushl
or
not
popf
test
sbb
in
add
add
add
add
fs
xlat
popa
add
arpl
insl
mov
cmp
pop
push
mov
add
jmp
enter
dec
sub
push
lahf
inc
add
add
add
mov
sti
mov
fsubl
xor
dec
xchg
sbb
mov
mov
clc
xor
aam
sbb
in
hlt
pop
lret
rolb
notl
addl
mov
out
js
add
pop
clc
jns
cs
inc
add
xchg
mov
inc
add
sub
jmp
pop
push
fldl
jmp
add
imul
sbb
ficoms
add
push
dec
push
push
push
push
push
dec
ja
mov
dec
xchg
out
addl
mov
or
pop
jns
repz
add
add
fadd
add
xchg
ja
inc
add
pop
jo
outsl
sbb
add
stos
lock
xor
xor
mov
loop
xor
hlt
in
mov
mov
mov
popa
add
jge
add
add
or
add
mov
into
ljmp
aam
add
mov
add
idivl
call
add
and
unpckhps
add
out
leave
adc
js
add
or
mov
sarl
fildll
mov
add
jle
add
lahf
inc
add
jns
add
rolb
add
lret
add
repz
addb
and
arpl
cli
jle
mov
jmp
push
jmp
lock
and
inc
aam
dec
jbe
xchg
pop
cmpsb
add
ret
add
push
add
jge
add
push
mov
cli
leave
fcomi
inc
add
shr
fwait
call
add
push
cmp
lea
mov
daa
add
fdivrs
or
mov
jmp
inc
add
insl
inc
add
push
jmp
inc
mov
dec
insb
insl
and
sbb
mov
repnz
add
enter
dec
cltd
xchg
mov
mov
incl
lcall
mov
push
ret
ljmp
adc
mov
mov
ss
jp
pop
test
dec
ds
lcall
add
inc
add
pop
push
lcall
pop
or
add
pop
lahf
or
pop
les
xor
mov
add
ljmp
jbe
or
pop
and
add
ss
call
lahf
pusha
add
test
mov
mov
int
cwtl
sti
xchg
into
bound
adc
daa
add
pop
jge
add
jmp
lods
xchg
pop
inc
add
add
add
or
jl
add
cmp
xchg
pop
mov
fisttps
jg
push
dec
das
mov
in
ljmp
rcl
xchg
add
incl
and
inc
add
outsl
xchg
loope
clc
addb
lahf
mov
pushl
decl
test
add
jmp
push
inc
add
and
std
or
add
jmp
fildll
push
addb
aaa
jae
add
pop
jmp
add
pop
jp
add
and
dec
mov
fiaddl
rcll
xchg
sbb
mov
fnstenv
xor
fwait
stc
stc
xchg
mov
jne
dec
loopne
cld
dec
mov
mov
into
pop
pop
or
dec
movsb
add
add
add
push
movsb
add
fidivl
xchg
adc
pop
add
add
sub
xchg
xchg
mov
xchg
and
xor
insl
pop
pop
add
cmp
add
inc
add
add
inc
add
push
lret
test
add
aas
cmp
add
add
pop
jmp
push
das
push
push
inc
fbld
add
cwtl
repz
lret
sbb
add
push
add
fwait
push
dec
ss
ret
push
mov
push
loope
add
sahf
xlat
xor
jmp
add
xchg
or
lods
sbb
push
loop
stc
dec
lret
jae
inc
add
add
inc
add
or
pop
add
add
fsts
sub
add
popf
push
mov
inc
add
sub
nop
inc
add
movl
add
mov
add
lods
cmp
cmp
add
out
pusha
add
addb
add
je
out
jo
dec
fwait
scas
in
popa
add
stc
popf
cltd
rcl
imul
add
jnp
sbb
pusha
add
add
adc
add
pop
sub
imul
inc
add
push
mov
jmp
in
jle
es
add
pop
data16
add
push
in
loop
mov
jecxz
pop
mov
icebp
addr16
cmp
mov
std
repnz
sbb
les
cli
loopne
pop
jns
add
adc
mov
add
dec
mov
xchg
mov
mov
push
inc
add
sub
sbb
ret
dec
jle
int
int3
push
push
mov
std
add
xchg
jmp
add
ja
add
cmp
add
pushl
add
inc
add
mov
add
jecxz
mov
lret
das
mov
add
add
insl
adc
add
lods
mov
imul
ljmp
jg
add
fdivr
jle
xchg
test
ljmp
add
scas
lcall
decl
test
add
jmp
das
jmp
xor
add
call
cmp
xchg
push
divl
xchg
push
and
or
stos
fnstenv
add
add
test
or
and
push
jmp
push
pop
sbb
idivl
xchg
inc
add
add
inc
add
inc
add
out
mov
add
add
pop
sahf
iret
in
or
lret
call
add
add
push
iret
xchg
and
jle
dec
mov
add
lea
dec
inc
add
leave
lds
cmp
add
add
add
lahf
outsl
pushl
shr
jmp
call
popa
push
mov
jg
movsb
add
and
js
adc
xchg
in
nop
jl
jl
xor
xchg
sub
mov
add
fdivl
add
add
xchg
or
sub
add
push
jno
out
dec
jl
push
add
add
add
add
add
add
adc
fbstp
lea
push
dec
and
jb
add
stos
iret
scas
mov
movb
add
movsb
add
add
add
incl
scas
movsl
add
add
push
test
iret
jmp
mov
add
sub
punpcklwd
jo
add
test
add
lea
mov
call
add
mov
rolb
pop
jne
push
push
jmp
aam
inc
push
cmp
nop
pop
jbe
inc
add
add
add
addl
push
add
jmp
sub
add
iret
mov
lods
outsb
or
cmpsb
add
add
and
or
pop
mov
in
push
cmpsb
add
add
or
repnz
icebp
test
scas
sbb
xchg
std
mov
add
sbb
inc
add
add
add
adc
jle
add
popf
add
pop
fwait
mov
stos
fldcw
sub
add
mov
std
fstpt
mov
add
ret
pop
push
jns
pop
pop
inc
add
add
jl
add
out
pusha
add
std
sub
dec
daa
add
repz
add
mov
cmp
pop
or
sub
movb
rolb
fdivl
jb
inc
add
push
push
xchg
ss
push
jns
into
or
add
add
push
jmp
or
mov
daa
add
pop
cmpsb
add
add
jmp
add
scas
outsl
push
scas
or
cmp
movsb
add
test
cmp
mov
mov
add
pop
ret
add
in
xchg
add
lret
xor
notb
clc
cli
bound
jne
lea
pushf
addl
sbb
xchg
in
inc
add
push
push
sti
jmp
pop
push
jb
add
pushl
add
add
lods
add
aad
add
out
mov
add
add
sub
mov
add
add
add
add
add
mov
ret
add
mov
stos
aas
pop
aas
mov
sub
lock
add
mov
dec
cli
pop
sbb
fmull
mov
jmp
push
andl
push
stos
and
add
cs
dec
les
or
add
or
mov
rcll
cmp
dec
lock
sti
sbb
daa
add
dec
mov
add
dec
mov
out
mov
data16
add
bnd
stos
push
ret
fists
push
xchg
sbb
add
push
xor
xchg
pop
dec
cmpsl
add
repnz
out
sahf
addl
mov
jmp
sbb
xlat
addl
add
outsl
or
xor
mov
test
loop
fwait
aam
sub
add
push
mov
jmp
movsl
add
add
pushl
mov
sahf
or
shll
sysret
add
add
int
cmc
cmp
add
addl
call
in
add
add
cmp
xor
inc
add
sub
sbb
loope
pop
add
add
jle
testl
add
cmpsb
add
add
mov
rclb
mov
insl
lds
cmp
decb
in
mov
imul
push
add
iret
in
es
add
in
test
jne
mov
lcall
ljmp
or
roll
mov
into
movb
mov
add
and
and
ret
cltd
mov
cmp
add
in
push
sbb
in
ja
add
pop
mov
fcomps
xor
in
mov
pop
pop
add
add
push
sub
stc
movb
call
push
ret
inc
push
push
hlt
jb
add
dec
mov
mov
ja
out
mov
repnz
jno
out
pop
rcl
inc
add
ds
out
test
pop
add
ljmp
add
movb
sbb
add
add
add
jg
mov
cmp
arpl
push
lea
or
mov
add
incl
jmp
dec
test
or
std
ret
and
add
cmp
lcall
imul
imul
adc
cmp
mov
push
ret
jb
lcall
in
inc
add
sbb
add
add
add
xchg
xlat
lahf
adc
add
sbb
add
mov
iret
les
push
add
ja
and
fists
add
call
pop
popa
add
lret
loopne
lahf
shlb
add
mov
incl
add
fcmovb
add
loop
cmp
mov
mov
shrl
es
loop,pn
jl
arpl
add
decl
push
addl
cltd
mov
and
jnp
add
push
jmp
push
ret
adc
incl
daa
add
pushl
push
sti
call
inc
lcall
jp
add
loope
add
in
ds
mov
sbb
add
cmp
ljmp
ss
add
mov
aam
inc
add
test
in
jbe
add
add
add
push
jmp
or
flds
push
dec
pop
rolb
test
decl
popa
add
add
sub
mov
sub
jo
aam
mov
add
jp
push
scas
cmc
lcall
add
or
fists
jecxz
cmpsl
add
add
add
jnp
add
xchg
push
sti
push
jmp
jmp
lock
dec
cld
push
sbb
mov
and
sbb
jbe
add
pushl
and
movsb
add
xlat
xchg
loopne
test
movl
add
faddp
add
cmpsb
add
add
and
icebp
nop
jns
and
test
outsb
movsb
add
add
pop
fidivrs
sti
xchg
ds
popf
cwtl
or
push
cmp
add
add
incl
call
jp
pop
aas
mov
popf
add
jmp
add
addr16
add
inc
add
push
mov
and
or
add
sub
add
add
loope
lcall
dec
push
mov
decl
or
xchg
test
faddl
data16
add
js
add
adc
stos
ds
addl
sbb
or
jmp
jle
sbb
aam
mov
std
jl
add
xor
xchg
xor
fwait
ret
fdivr
jmp
jmp
inc
jb
inc
add
jp
add
mov
push
add
add
in
pavgb
adc
inc
add
jg
popa
add
ror
mov
push
imul
lods
push
mov
add
add
rolb
add
and
push
add
inc
add
sahf
rolb
cli
das
movb
aam
lret
rcr
lcall
jmp
mov
xchg
imul
jns
test
add
add
sbb
jbe
add
out
ja
add
shr
sar
ljmp
add
call
insb
jns
add
or
pop
enter
lcall
testl
pusha
add
add
cs
add
push
sbb
scas
jnp
sbb
lea
mov
test
jno
fcompp
or
add
add
mov
add
push
jo
add
add
pop
push
div
jmp
pop
jle
push
push
decl
fs
add
sbb
push
and
rolb
adc
stc
mov
pusha
add
add
xchg
mov
and
sbb
mov
mov
and
sbb
add
add
bound
push
push
jmp
int
add
add
and
int
call
mov
das
out
jo
add
icebp
lods
addl
loopne
test
xor
jmp
lock
push
mov
add
pop
add
outsl
inc
add
push
or
add
sbb
enter
in
cmpsb
add
dec
sub
cmp
mov
movb
pop
popa
add
pop
cmc
push
push
insb
jmp
or
sub
jmp
add
add
add
test
cmp
push
add
or
add
mov
add
sahf
push
test
and
dec
ret
add
mov
popf
mov
lret
xor
fs
jno
jp
add
inc
add
add
jo
les
jns
add
add
movl
loopne
dec
fcoms
insl
sub
jp
add
ljmp
add
pop
loop
pushl
notb
jp
iret
fimull
sti
imul
add
jmp
xor
movsl
add
add
add
data16
add
mov
add
add
std
cmp
adc
xor
dec
ror
and
std
jns
xor
or
add
sub
add
add
jmp
subl
add
xor
mov
mov
add
stc
jns
out
push
add
jmp
arpl
inc
mov
xor
repz
add
jns
add
test
enter
adc
sbb
sbb
add
and
das
push
mov
add
pushl
fmul
decl
push
add
pop
adc
fs
lret
frstor
add
inc
add
cmp
inc
add
mov
add
cmp
jp
fimuls
add
or
ss
mov
push
add
jmp
add
mov
and
fcmove
les
fdiv
hlt
stc
xchg
in
bound
test
fwait
adc
sub
movl
pusha
add
mov
add
inc
add
adc
add
enter
add
call
sbb
add
dec
inc
add
inc
add
pop
sub
imul
add
add
add
jecxz
rcrl
push
push
ret
push
mov
push
popa
dec
les
jg
das
addl
add
inc
add
fsqrt
js
and
mov
incl
fcompl
enter
push
jmp
push
js
cld
ret
cmp
pushf
iret
xchg
lea
dec
movsb
add
lds
push
xchg
pop
nopl
push
ret
push
pop
push
cld
pop
outsb
pushf
or
sub
mov
add
inc
add
leave
addb
add
push
gs
cld
into
int3
mov
addb
lock
pop
add
xchg
mov
lret
add
push
shlb
push
xchg
inc
add
arpl
mov
mov
add
mov
add
add
add
incl
jb
xlat
in
int
repz
mov
hlt
add
test
inc
add
je
inc
add
xor
sub
add
mov
ucomiss
dec
dec
xchg
mov
lcall
add
xor
jecxz
pop
cmpsl
add
les
fildll
addr16
pushf
pop
sub
sbb
push
push
jmp
xor
cmp
inc
add
decl
int
dec
push
push
adcl
push
jp
add
daa
add
add
push
filds
mov
inc
add
pop
lock
decl
jnp,pn
mov
lock
add
mov
flds
and
test
add
pop
loope
lods
je
cmp
xor
hlt
scas
bound
pop
dec
popf
inc
add
xor
add
cli
in
mov
add
jp
mov
stc
mov
push
add
dec
fisttpl
inc
add
xor
nop
outsl
push
xchg
hlt
xlat
cmp
inc
add
add
ljmp
add
add
xchg
cmp
push
add
inc
gs
jmp
jb
pusha
add
push
pop
in
and
push
mov
or
stos
jae
xchg
sub
jl
add
mov
fwait
roll
add
mov
jmp
and
imul
ret
mov
dec
mov
fbld
add
jne
cltd
jge
je
add
mov
popf
mov
pop
jmp
nop
sub
add
fldenv
add
jo
pushl
sub
bndldx
xchg
jmp
sbb
das
ror
rolb
fmul
sub
push
add
add
push
jmp
mov
dec
insb
repz
shrl
loop
lahf
xor
in
push
jne
push
ret
ret
mov
adc
data16
add
push
push
xor
inc
add
dec
jmp
add
add
lcall
mov
inc
add
ret
add
add
mov
roll
and
cs
add
pop
mov
roll
insl
scas
mov
sub
lcall
sub
pop
xor
jg
add
leave
mov
popa
add
mov
and
jmp
adc
cmpsb
add
add
adc
mov
add
or
dec
push
mov
jmp
push
pop
mov
popf
int
lret
out
xlat
push
popa
jmp
cmpsb
push
sub
push
aas
mov
add
pop
add
jmp
mov
mov
xor
jb
test
popf
adc
and
adc
sbb
add
lea
push
sbb
mov
insb
cmpsb
add
add
inc
add
add
in
mov
mov
lock
outsl
pop
pop
jo
imul
mov
mov
lock
jb
mov
rol
add
addl
lods
mov
sbb
stos
sbb
fnstenv
add
xor
fstl
mov
clc
ret
jo
addb
add
adc
add
stc
mov
call
bnd
jle
push
mov
mov
add
xchg
xchg
pop
cmc
cmpsb
add
and
pop
add
inc
add
xchg
or
xchg
mov
adc
pop
clc
imul
or
lods
dec
adc
fimull
fnstsw
inc
add
add
leave
add
pmaddwd
fdivrs
lahf
jnp
xchg
or
add
xor
add
mov
sub
fistpl
jecxz
add
inc
add
pop
movsl
add
xor
sub
pushf
mov
stos
pop
mov
adc
or
pop
aaa
out
mov
jbe
std
mov
ficomps
mov
je
push
or
mov
push
add
push
ret
push
mov
push
call
in
enter
xchg
int3
and
movsl
add
inc
add
add
inc
jmp
sbb
push
addr16
push
add
sub
incl
add
pop
sub
inc
add
ret
jmp
or
nop
lods
loope
push
adc
outsl
cli
jg
push
cltd
test
push
dec
mov
add
ljmp
add
jbe
add
js
hlt
cmp
mov
je
addl
dec
data16
add
fidivl
push
out
push
mov
or
add
ss
incl
loop
sahf
push
add
inc
add
add
je
add
cmpsb
add
sub
add
cwtl
icebp
movb
imulb
and
test
sub
out
push
push
xlat
mov
jmp
notb
pop
roll
mov
jmp
lods
xor
int
jecxz
mov
loop
test
inc
add
popl
cmp
xchg
add
incl
call
sbb
add
jo
push
adc
xchg
xchg
xor
hlt
or
stc
xchg
xor
movsb
add
xor
xor
jmp
inc
add
add
jns
cmpsb
add
mov
add
ljmp
add
cmp
aad
test
mov
pop
pop
leave
packsswb
negb
xchg
xor
sub
leave
in
fisubrl
cmpsl
add
in
fsts
int
int
hlt
ret
add
jb
out
out
leave
and
rolb
push
sub
cmc
sub
in
cmp
add
lcall
jecxz
xor
cwtl
fcoms
mov
jmp
ret
add
add
out
inc
add
adc
sbb
lcall
cs
add
loopne
lcall
imul
decl
call
mov
add
pop
movsb
add
iret
cmp
jmp
adc
ds
mov
pushf
push
add
insl
mov
add
add
jmp
sbb
add
flds
add
add
inc
add
jmp
push
or
or
add
and
mov
adc
je
in
push
aaa
push
movsb
add
jmp
stos
fistpll
push
cmp
add
fwait
jmp
inc
jae
add
push
push
inc
aas
fxch
xor
sub
cmp
jmp
addl
push
int
add
cmpsl
add
jmp
add
notb
add
mov
push
ret
or
cld
cs
scas
hlt
or
ss
inc
add
xor
add
fndisi(8087
add
push
aaa
fwait
enter
mov
roll
mov
js
add
or
add
push
ret
add
addb
add
pop
add
push
push
rep
jmp
adc
add
loopne
dec
addb
sub
pop
aam
adc
dec
push
scas
stos
push
mov
add
add
jnp
addb
cmp
jle
movsb
add
loope
jg
pushf
mov
xchg
mov
adc
incl
fdivl
add
int3
ljmp
mov
add
ljmp
ret
add
and
int3
push
pop
add
jmp
add
out
ret
add
mov
and
cmp
add
jmp
push
adc
push
js
push
jmp
add
decl
lea
mov
add
sbb
addb
add
pop
add
sbb
add
call
mov
add
jmp
jecxz
xchg
jae
add
mov
add
add
mov
pop
addl
cmp
pop
ljmp
bound
dec
push
incl
add
popa
xchg
lcall
dec
movl
rcrb
in
add
add
mov
jb
das
push
jg
add
add
decl
cmpsl
add
mov
add
insl
mov
add
adc
aaa
mov
cmp
ret
dec
sti
or
add
in
pusha
add
mov
mov
call
push
fbld
push
mov
mov
add
jnp
inc
add
mov
pop
icebp
cmp
dec
dec
in
xor
hlt
fidivrs
mov
addb
add
stos
xchg
add
arpl
in
aam
add
add
xor
aaa
movsl
add
and
sub
add
push
add
xchg
fdivrs
in
xchg
mov
mov
add
add
sub
add
push
add
lcall
add
out
mov
jb
add
lods
cs
jno
idivb
daa
add
sub
push
fcomps
movsl
add
mov
add
add
mov
xchg
addl
add
add
jne
xor
add
cli
cld
dec
addl
mov
add
add
pop
push
jmp
mov
add
cmp
add
add
out
leave
std
dec
ret
add
add
stos
rolb
js
sti
cmpsl
add
xchg
cltd
dec
test
enter
add
cmpsl
add
mov
filds
add
stos
and
jae
je
call
dec
aas
jne
add
add
scas
shlb
mov
arpl
enter
and
sbb
roll
shlb
and
pop
or
outsl
adc
jae
out
add
and
pop
add
mov
xor
into
inc
add
cli
in
add
call
mov
cli
or
incl
std
mov
xchg
jnp
push
jg
bound
aaa
mov
ds
iret
fisttps
out
lods
push
popl
add
ret
add
mov
flds
add
or
mov
jecxz
push
jmp
adc
lock
lock
aad
push
mov
push
stc
jmp
add
add
add
pop
jmp
mov
jnp
jge
and
mov
in
push
add
test
pop
cltd
jp
add
jg
mov
sub
and
pop
dec
int3
int
bound
dec
inc
add
and
lds
lds
add
decl
pop
mov
fcoms
lahf
ss
add
add
lea
add
pushl
repz
testb
sti
and
sbb
add
add
test
mov
ffreep
add
add
add
mov
jle
add
rolb
jbe
icebp
xchg
jle
call
das
pop
lds
xor
stos
fsubl
lds
ret
add
add
movl
in
in
movb
add
mov
add
popf
adc
cwtl
cmpsl
add
sub
push
pop
lret
cmp
pop
imul
add
mov
push
in
addb
jl
sahf
test
inc
add
mov
repnz
add
popf
push
xchg
jl
insb
ja
out
cmpsl
add
add
add
xchg
or
add
das
sbb
fnsave
add
ljmp
lea
hlt
xor
adc
sub
mov
and
push
lret
cli
add
stos
les
push
mov
mov
pop
cmp
jnp
sti
cmpsl
add
test
rorl
int
roll
lcall
xor
arpl
addb
fldenv
add
push
addl
arpl
add
ljmp
incl
hlt
mov
pop
xor
and
clc
add
loopne
cmp
add
divb
inc
add
outsb
sub
add
das
fiaddl
cli
dec
mov
jae
mov
mov
add
scas
rorb
stos
addl
in
mov
lock
ret
add
in
addl
adc
idiv
fdivl
sbb
add
popa
add
test
or
add
add
inc
add
add
cmpsb
add
lock
imul
pop
data16
add
add
test
add
ds
jecxz
pop
xor
icebp
mov
xor
sub
test
cmp
imul
mov
rcll
add
incl
add
data16
lret
push
add
lcall
add
add
sub
push
cwtl
pusha
add
ss
call
add
ficoms
sbb
jmp
dec
jns
add
dec
aad
lret
xor
sbb
test
adc
add
test
lods
int3
push
bound
jno
cmp
cltd
push
je
loop
xchg
add
jmp
inc
add
or
test
out
fsubrl
add
div
pop
sub
test
addb
movsl
add
add
incl
es
add
add
inc
add
icebp
push
add
fsubrl
or
add
aas
pop
test
stos
adc
clc
ja
mov
add
xchg
mov
add
add
add
iret
test
lahf
jecxz
xchg
xor
mov
lcall
aas
mov
or
cmpsl
add
xor
sub
add
add
add
add
xchg
jb
add
les
aam
adc
jo
mov
mov
add
int3
cmp
push
pop
push
dec
movsb
add
mov
add
add
push
add
incl
sub
dec
movb
mov
fistpl
add
sub
incl
lea
dec
pop
sahf
out
mov
psubusw
add
jp
add
inc
add
xor
add
jge
rcrb
pop
mov
aas
imul
push
sbb
push
aas
aad
add
adc
rcrb
add
cmpsl
add
push
add
add
mov
jne
ds
js
lahf
add
sbb
add
rolb
jne
mov
movb
add
xor
cmp
addl
lcall
push
in
fsubrl
dec
cwtl
hlt
xchg
lods
adc
xlat
jb
jno
sbb
movb
cmpsl
add
lods
out
xor
sub
pop
mov
push
inc
add
addl
add
nop
notl
imul
add
cmpsl
add
nop
mov
add
inc
add
add
adc
add
sub
fsubrs
xchg
dec
jae
sbb
sahf
pop
jge
punpckhdq
movl
xchg
stc
inc
add
roll
arpl
xchg
jnp
add
sub
inc
add
jecxz
das
jns
pop
inc
add
add
add
out
lea
clc
pop
ret
cmp
add
mov
adc
add
jmp
jle
dec
scas
mov
fsub
add
ljmp
add
lock
mov
push
insb
dec
insb
js
lret
in
mov
sbb
xor
push
add
mov
addl
add
add
negl
jmp
mov
and
add
decl
dec
je
jb
add
add
jg
jmp
sbb
icebp
or
add
in
dec
cmp
add
add
adc
movsb
add
lea
call
repnz
inc
add
add
fwait
jbe
mov
mov
push
add
or
fdivrp
cs
cmp
push
pop
lock
add
add
push
and
pop
dec
sbb
stc
pop
dec
and
mov
mov
mov
and
mov
add
fs
add
punpckldq
int3
jo
ljmp
clc
pop
add
add
loop
pop
pop
and
ret
add
mov
call
and
das
ljmp
int
push
or
shrl
mov
add
cmp
gs
imul
pop
mov
int
lret
mov
cld
and
push
jmp
add
fdiv
pushl
lods
shrb
mov
sbb
movsb
add
inc
add
inc
add
add
jmp
ret
mov
add
mov
rcll
add
fldenv
sbb
xchg
imul
inc
add
roll
inc
add
add
insb
xchg
adc
sub
inc
add
push
repnz
and
movsl
add
ljmp
xor
rcrb
rclb
xchg
inc
add
or
add
movsb
add
add
xlat
dec
jno
add
roll
xor
cmp
xor
call
add
fdiv
or
cld
outsl
mov
dec
pushf
push
ficoml
sbb
hlt
int3
or
data16
add
popl
cmp
jecxz
add
dec
insb
mov
xor
xor
ljmp
iret
fs
add
scas
popa
add
add
jle
add
jno
jecxz
mulb
mov
xchg
test
jg
add
add
xchg
dec
push
jle
sub
leave
pop
sbb
inc
add
mov
test
addl
je
dec
out
dec
adc
add
xor
add
add
clc
lret
add
xchg
sti
lahf
xor
mov
test
xchg
mov
xor
mov
in
jb
add
pop
popf
push
add
cld
stos
addl
add
xor
cli
mov
repnz
inc
add
inc
add
jns
bound
repz
pop
adc
or
adc
cmp
call
repnz
push
ret
add
adc
sbb
add
add
outsb
fsubl
add
add
pop
inc
add
adc
sub
add
inc
add
lcall
incb
add
mov
jl
add
incl
adc
shl
jp
add
jno
pushf
aad
roll
js
mov
xchg
loop
add
incl
incl
add
fsubrl
inc
add
inc
add
add
add
sbb
inc
add
or
sub
icebp
loopne
into
stc
leave
sub
add
add
add
add
jo
call
roll
add
add
xlat
outsb
movl
in
es
mov
add
out
fistpll
add
movl
jns
sbb
imul
nop
daa
add
shlb
sahf
in
in
lds
sub
adc
jmp
lret
hlt
sbb
mov
pop
sub
scas
dec
jl
add
std
mov
and
sbb
add
lret
pop
cs
sbb
add
push
sub
push
shrb
inc
add
pusha
add
ss
add
mov
hlt
rcl
inc
add
push
add
add
addb
test
jp
add
mov
add
push
xchg
fchs
add
add
fwait
mov
dec
jecxz
addb
xchg
hlt
inc
add
mov
cltd
stos
jge
and
add
cmp
pop
jle
add
xlat
jg
cmp
push
int
mov
lcall
aad
add
fcompl
popa
add
sahf
addb
popa
add
neg
adc
adc
add
lock
pop
insb
int3
push
enter
decl
lods
mov
out
push
sub
out
adc
pop
jmp
mov
adc
enter
add
addb
dec
out
push
stc
fisttpl
test
mov
std
mov
clc
sbb
mov
jns
inc
add
inc
add
add
fwait
mov
addr16
add
aam
and
jbe
xor
or
daa
add
lret
dec
cmp
mov
lods
insb
cmc
jbe
mov
xor
inc
add
inc
add
ss
add
add
adc
inc
add
xor
stc
jnp
dec
sahf
adc
push
jb
jmp
add
add
incl
sbb
out
fstpl
add
scas
mov
in
push
and
dec
leave
pop
push
xchg
jecxz
mov
jg
cli
lcall
add
push
outsb
insl
ret
add
mov
scas
les
pusha
add
lods
xor
ret
add
xchg
inc
add
ret
add
add
call
cli
lods
dec
lock
jmp
jg
sti
imul
aas
pop
rorb
lock
lcall
dec
js
pop
pop
mov
add
jae
bound
jb
push
popl
lds
xchg
sub
dec
add
add
add
add
cwtl
jl
pop
into
fwait
lods
js
add
mov
addb
lret
add
call
add
inc
add
push
sub
lds
addb
or
push
insb
cltd
jae
pop
add
push
xor
mov
add
mov
aam
into
adc
rclb
int
rclb
sub
dec
sub
add
mov
fnsave
inc
add
ljmp
cltd
cmpsl
add
add
imul
cmp
add
add
out
mov
mov
mov
add
insl
mov
ljmp
inc
add
and
adc
test
hlt
adc
enter
dec
push
and
xor
dec
push
icebp
xchg
sub
test
mov
cltd
sub
add
cmp
scas
movsl
add
inc
add
mov
mov
inc
add
out
jbe
mov
xor
add
inc
add
add
add
or
sbb
lahf
jl
outsb
mov
pusha
add
dec
test
add
aad
add
mov
sahf
jmp
add
rcpps
cmp
add
adc
out
xchg
xchg
mov
rclb
mov
jecxz
fcoms
push
add
push
fistl
sarb
jmp
inc
add
incl
jmp
cmpsl
add
add
das
mov
lds
sub
xchg
ss
lahf
pusha
add
fdiv
inc
add
and
lcall
jnp
add
movsb
add
daa
add
pushl
and
ds
incl
add
jmp
add
dec
dec
pop
sti
mov
add
xchg
addl
push
and
jg
jnp
and
ljmp
cld
jns
add
adc
add
rclb
push
add
js
jnp
inc
add
inc
add
add
add
sbb
add
add
mov
add
imul
inc
add
and
adc
inc
add
cmp
adc
jns
or
mov
dec
xor
fisubs
add
xchg
push
addr16
add
test
lock
push
jns
imul
jge
int3
cmc
inc
add
sub
xchg
fmull
dec
add
lcall
cmp
scas
add
jmp
sti
mov
ljmp
mov
setbe
movsb
add
lods
jbe
mov
add
loope
jp
add
add
jmp
pop
dec
and
cltd
xor
or
cmc
push
cld
lods
iret
lods
and
add
pushl
inc
add
ja
dec
int3
lds
xlat
inc
add
push
pop
pop
cmpsb
add
les
and
or
xlat
add
hlt
test
push
cltd
aad
pop
in
and
stc
mov
xchg
mov
aaa
pop
push
cmp
pop
inc
add
fidivs
add
fcomip
push
mov
add
adc
fwait
stc
mov
pop
negl
ds
fsts
mov
add
sub
add
add
sub
js
add
call
jge
push
into
inc
add
in
pop
roll
add
decl
arpl
xchg
jb
in
clc
sub
lods
lods
lret
stc
addl
adc
sub
stos
sbb
fbld
xor
dec
push
add
jns
or
sarb
ja
testl
mov
add
daa
add
mov
jmp
add
pop
or
jge
stos
push
add
xchg
pushf
add
call
xchg
das
dec
xchg
inc
add
add
out
in
or
mov
add
add
loop
or
mov
mov
sbb
fadd
add
cli
add
inc
add
add
add
inc
add
add
add
nop
add
add
ljmp
sub
aad
jge
inc
add
jle
addb
add
ja
add
add
out
inc
add
fidivs
or
add
mov
push
xchg
loope
add
movl
sbb
add
std
sbb
iret
adc
pop
or
add
fsts
push
add
add
outsl
jg
add
in
addl
fnstsw
imul
xchg
xor
enter
mov
lock
inc
add
inc
add
sub
aad
adc
or
mov
inc
add
mov
xor
add
popf
movsl
add
stc
movl
sbb
pop
movl
repnz
data16
roll
add
pop
mov
add
sahf
fs
jae
dec
outsb
pop
addl
and
and
pop
lds
jg
add
push
or
mov
mov
push
fdivp
je
aad
add
add
mov
add
xor
inc
add
add
pop
mov
push
jb
movsl
add
add
sub
rorb
mov
inc
add
add
xchg
pop
cmp
push
add
sub
jbe
jmp
add
inc
add
pop
dec
divb
add
jmp
pop
dec
xor
add
mov
iret
cmp
push
add
or
mov
ror
loope
js
add
roll
insb
xchg
sahf
xor
adc
imul
sbb
add
addb
sbb
aas
in
in
add
ljmp
sub
jnp
scas
inc
add
or
add
pop
pop
xchg
loop
out
clc
sarb
lahf
cmp
lret
insl
roll
jp
out
add
push
jmp
cmc
es
xor
cwtl
roll
rcll
loope
xlat
cli
ja
mov
mov
enter
cltd
mov
jge
mov
xchg
push
add
lods
push
sub
xchg
lahf
movl
mov
add
push
adc
outsl
add
or
insl
sub
cmp
xchg
testb
popf
lods
out
and
xchg
div
inc
add
add
add
sbb
test
add
xor
std
jno
cmp
pop
jo
push
scas
idivl
jno
nop
push
popa
add
mov
out
push
inc
add
pop
mov
inc
add
inc
add
add
inc
add
adc
inc
add
das
jno
or
add
cmp
push
add
hlt
jp
clc
jo
fiaddl
add
pop
sahf
fidivl
add
jp
test
cmp
add
sub
ljmp
xchg
loopne
shll
test
inc
add
fld
add
cltd
or
cli
cmc
ret
add
add
adc
mov
sub
mov
add
and
xor
pushf
xor
mov
pop
nop
enter
add
cmc
mov
ja
add
add
sbb
hlt
mov
mov
les
xor
inc
add
adc
rolb
push
mov
aam
popf
roll
cmp
jmp
add
mov
lock
movb
pushl
add
mov
sub
aam
add
jecxz
xchg
data16
add
outsl
inc
add
iret
stos
add
pop
sbb
push
cmc
stos
sbb
add
add
add
add
push
mov
xor
add
movl
or
cltd
dec
mov
lds
mov
add
sub
adc
sub
xor
js
es
add
jp
lahf
mov
inc
add
jo
icebp
and
gs
inc
add
xor
cltd
pusha
add
add
jns,pt
dec
lods
mov
insl
pop
sub
cmc
mov
lods
and
fistpll
ja
pop
and
xchg
jg
dec
and
add
call
cmp
call
mov
add
xor
aam
in
iret
cmp
jns
add
xchg
rolb
jo
add
call
stos
movsl
add
dec
jno
add
leave
dec
mov
jl
push
add
insb
adc
scas
jae
add
popa
add
fstpt
add
mov
lods
je
add
sbb
lret
stos
call
add
cmp
adc
pushl
push
add
add
add
sub
test
mov
add
call
lcall
fisttpll
add
mov
push
pop
adc
cmp
or
dec
ja
pop
inc
add
pop
inc
add
add
push
test
out
jb
add
sub
mov
lahf
or
xchg
add
add
lods
ret
jg
xchg
lods
frstor
sahf
std
or
xor
add
addb
add
add
jg
xchg
loop
mov
jo
pop
dec
adc
dec
mov
push
xor
test
aam
cmp
stos
int3
stc
adc
daa
add
popf
les
sbb
add
ret
add
mov
add
sbb
cs
daa
add
add
fistps
aam
int3
pop
add
ljmp
jbe
add
dec
cs
das
arpl
arpl
mov
movb
jae
out
int
mov
in
int
sub
nop
xor
imul
ret
add
add
shll
sbb
enter
mov
sub
add
xor
or
add
dec
sub
cwtl
cmp
add
incl
ljmp
hlt
and
bound
sbb
add
xor
xchg
xchg
test
outsb
dec
push
movb
into
mov
shlb
add
xchg
cmp
rolb
dec
xchg
or
add
fcoml
arpl
push
jo
add
addl
adc
hlt
sub
sub
sbb
pop
nop
loope
lret
xor
out
bound
cwtl
mov
mov
fcomps
add
add
jecxz
pop
nop
in
xor
jmp
add
add
inc
add
adc
add
in
stos
xchg
loopne
pop
mov
add
outsb
mov
cmpsl
add
add
les
call
jmp
pushl
nop
pop
jecxz
data16
add
mov
js
dec
sub
push
enter
add
add
sbb
add
mov
add
push
aad
repz
add
es
mov
adc
xor
xchg
and
imul
add
add
pop
xchg
push
repnz
cmpsb
add
sbb
in
addb
adc
xor
je
add
add
dec
push
int3
add
dec
negb
sbb
mov
addl
push
inc
add
xor
add
add
add
sub
add
add
add
and
adc
add
jo
add
frstor
dec
pushf
movsb
add
cli
roll
inc
add
mov
jae
add
icebp
and
gs
inc
add
pop
jnp
mov
outsl
mov
or
adc
add
arpl
movl
fcoml
add
add
std
push
shlb
ljmp
js
xor
pop
push
jbe
inc
add
fisttpll
popa
add
test
pushl
outsl
cs
xor
xchg
xor
push
incl
add
pushf
pop
cmp
sub
enter
icebp
push
mov
out
sub
cs
adc
lret
cmpsl
add
add
xor
rolb
add
outsb
rolb
mov
mulb
add
xchg
sub
sbb
add
push
add
add
popf
lods
js
add
cmp
add
push
cmpsb
add
xor
add
mov
add
fsubs
arpl
inc
add
and
mov
ja
cmp
add
sub
aam
movsb
add
mov
mov
inc
add
add
test
add
sbb
sbb
mov
add
sbb
sbb
sub
inc
add
addb
mov
repz
pop
sub
add
push
ja
stos
pop
inc
add
ljmp
testl
mov
jnp
sbb
mov
xor
add
rolb
and
xchg
adc
loope
cwtl
pop
jmp
leave
and
add
add
jns
adc
pop
outsl
cmp
add
inc
add
test
dec
mov
add
out
jp
sbb
sub
add
jmp
add
pop
adc
xor
add
roll
mov
sahf
dec
mov
dec
cmp
cltd
adc
stos
loopne
inc
add
adc
roll
lea
add
xchg
or
movb
sub
incl
xor
inc
add
das
add
add
mov
inc
add
ljmp
add
out
cmp
push
sahf
int
add
dec
push
and
pop
add
lcall
jp
inc
add
aas
popa
add
add
rcrl
repnz
loope
or
repz
insl
jmp
jmp
fs
inc
add
xor
fcom
out
fwait
dec
jmp
leave
fsubrs
roll
je
pop
sti
ljmp
add
xchg
dec
push
cmp
fucomip
or
and
add
add
inc
add
dec
xor
insb
sub
call
add
add
movb
push
jo
gs
add
add
inc
add
add
add
fisubs
or
rolb
insl
aam
sarl
adc
inc
add
and
jmp
je
add
add
jp
pusha
add
and
add
sbb
xchg
and
jnp
add
add
add
sub
lods
lods
sarl
add
lcall
lock
popf
fcomip
push
jne
sahf
push
pop
popa
add
lods
add
xchg
std
test
push
and
les
xor
push
mov
add
inc
add
inc
add
aas
cmp
insl
or
ficomps
xchg
aaa
out
push
pop
arpl
jp
add
or
loope
loopne
mov
nop
jle
push
add
int3
cmp
xor
dec
jno
stos
stos
and
jo
stc
push
mov
add
add
xchg
add
lcall
cmp
jb
sti
sub
addr16
push
xor
add
add
pop
dec
aad
add
and
inc
add
lcall
sub
add
add
push
lret
xor
out
stos
loope
pop
inc
add
add
add
xchg
sbb
add
call
pushf
dec
push
sub
addb
xchg
xchg
pop
stc
mov
pusha
add
add
clc
cld
xor
add
cmpsl
add
rolb
in
sub
push
jne
add
add
stos
stos
xor
add
rolb
cmp
leave
cs
inc
add
out
ret
add
inc
add
call
xor
xor
pop
imul
sub
stos
dec
sub
inc
add
rolb
add
mov
xlat
sub
add
dec
es
add
and
inc
add
add
movsb
add
push
shrb
push
addb
push
adc
add
arpl
and
pop
or
stos
lods
dec
les
addl
xor
addb
jbe
lahf
mov
xchg
cmp
test
add
push
pop
mov
fnstenv
dec
push
xchg
lret
out
cmp
add
clc
imul
sub
pushf
sbb
dec
addb
addl
sbb
add
pop
lea
mov
cmp
out
mov
jmp
dec
xchg
sub
loope
pop
movsl
add
mov
sub
ja
add
add
add
mov
imul
stos
popa
add
das
xor
add
movsl
add
add
cmp
test
std
push
cmc
xor
incl
incl
cld
xchg
ja
add
add
pop
repz
mov
cld
sub
movsb
add
or
xor
dec
and
mov
add
add
sub
sub
or
decl
stc
mov
mov
add
add
add
add
add
jns
dec
int
mov
add
arpl
inc
add
push
addl
pushl
xlat
enter
movl
addb
add
cmp
xor
or
cld
out
iret
push
in
sub
add
cmp
addb
dec
mov
and
push
add
aad
cmp
push
and
mov
jge
jne
bound
adc
add
fadd
add
rolb
outsl
sbb
sbb
add
shr
fisttpl
cmp
add
fs
dec
add
jg
cmp
jecxz
out
sbb
ret
add
fstpl
call
pop
popa
add
cs
or
add
xor
lds
insl
mov
addl
in
hlt
insb
shll
add
add
decl
sbb
decl
mov
and
mov
gs
add
jg,pn
mov
adc
jle
shrl
add
inc
add
dec
mov
push
lret
mov
sahf
icebp
mov
fwait
ds
stc
push
jne
into
xor
add
xchg
xchg
cli
xchg
push
push
xchg
cmpsb
add
add
aas
mov
add
hlt
lods
sub
add
in
pushf
popf
mov
push
sarb
mov
js
xchg
ret
add
sbb
add
dec
data16
add
add
addl
add
ljmp
push
push
add
decl
cs
push
push
mov
lret
xchg
ret
add
inc
add
pop
inc
add
jmp
hlt
mov
je
insb
incb
call
add
add
pop
add
test
inc
add
add
jp
inc
add
add
cmp
lret
xchg
out
cmp
lcall
add
mov
add
pop
xlat
sub
xor
lea
pop
pop
xchg
jp
ljmp
mov
in
add
out
sub
in
imul
mov
or
inc
add
sbb
add
scas
jae
xor
push
dec
mov
add
fstpl
add
add
mov
int
add
sub
inc
add
add
inc
add
add
das
enter
fldln2
lods
pop
mov
sbb
out
add
pop
sub
pop
iret
dec
nop
pushf
inc
add
enter
cwtl
mov
add
aas
lea
ret
aaa
imul
add
and
and
xor
add
sti
sbb
pop
jmp
add
xchg
and
add
test
inc
add
pushl
ret
add
cltd
cmp
stc
dec
push
add
call
mov
and
sbb
inc
add
push
mov
bound
mov
mov
push
sbb
add
add
in
add
dec
loope
in
mov
push
cmpsl
add
popa
add
rcl
mov
fwait
pop
add
pop
ret
fs
mov
out
ret
and
inc
add
add
mov
sarb
popa
add
daa
add
stos
sti
or
roll
add
or
add
pop
push
fidivs
inc
add
cmp
inc
add
or
sub
or
rolb
add
scas
mov
and
out
ftst
add
dec
mov
xor
decl
je
pop
popa
add
pop
aas
jge
mov
dec
addl
ljmp
lds
push
mov
stos
idivl
dec
fstp
or
shrl
mov
dec
inc
add
mov
inc
add
add
cmp
fwait
add
pushl
pop
into
mov
jmp
sub
cmpsb
add
test
ja
mov
dec
sub
aad
add
incl
das
addb
addl
jmp
add
movsl
add
adc
add
add
cmp
and
pop
adc
fdivl
fst
jo
add
fidivrl
add
jae
add
add
pop
dec
inc
add
sbb
add
scas
addl
add
loop
jle
add
cli
xchg
and
enter
add
add
scas
addb
xor
add
add
test
mov
jmp
insb
or
sbb
add
daa
add
add
adc
rcr
jnp
add
add
push
fldcw
adc
add
add
dec
loop
adc
add
xor
cmp
int3
dec
inc
add
xchg
in
aas
ss
mov
add
add
jl
enter
cmp
push
sub
add
ret
loope
movsb
add
mov
out
mov
test
movsb
add
and
jo
add
pushl
pusha
add
add
jp
repz
ret
add
add
or
jmp
add
fdivrl
pop
pop
hlt
outsb
aam
ret
add
fdivrp
mov
and
insb
outsl
mov
jb
and
in
roll
rcll
ficompl
addl
add
cmpsl
add
add
inc
add
ja
xchg
push
scas
and
or
in
jmp
mov
jp
cli
aam
movsl
add
inc
add
mov
add
xor
add
bound
push
xor
out
jg
add
test
add
repz
negb
cmp
popf
inc
add
iret
scas
xor
add
add
push
add
addl
adc
lret
or
mov
xchg
imul
lods
pushf
sub
stos
roll
incl
add
test
mov
add
popf
mov
mov
sub
popa
add
add
xor
repz
jl
sahf
inc
add
mov
cltd
lods
test
ss
out
push
add
cmp
add
hlt
repnz
mov
ljmp
js
add
add
dec
mov
das
and
jne
xchg
aaa
sbb
outsl
add
add
sbb
and
scas
insl
jnp,pn
add
push
and
push
in
aaa
jg
add
ret
add
shrb
adc
test
fstps
in
mov
je
cmpsl
add
mov
lcall
addb
add
add
push
inc
add
lcall
mov
add
cmp
fldcw
xor
in
cmc
pop
movl
add
leave
outsb
in
dec
movd
loopne
dec
outsl
mov
jns
sub
add
add
dec
sub
push
unpcklps
cmp
loopne
lcall
mov
call
ret
add
fs
popf
cli
pop
repnz
ret
add
lea
sub
add
imul
add
or
cmpsb
add
movsb
add
mov
sbb
or
push
add
add
jg
out
xchg
push
pop
and
inc
add
add
sub
enter
add
mov
add
addl
xor
mov
jmp
add
data16
inc
add
pushl
out
outsl
test
cmpsb
add
dec
repz
add
jmp
add
jmp
mov
jns
cmp
add
mov
add
mov
add
add
loope
or
add
out
cmpsl
add
add
add
icebp
or
add
dec
pop
cmpsl
add
mov
add
jge
icebp
xchg
push
add
push
xor
cmp
data16
int
add
in
fisubl
add
fistps
add
mov
add
call
add
fstpt
repz
sub
cmpsl
add
add
pop
mov
shrb
dec
aaa
cmp
adc
sahf
addb
xchg
imull
add
into
mov
in
lahf
lock
adc
add
add
add
popl
lcall
lcall
roll
lcall
mov
inc
add
sbb
add
call
add
add
add
jno
xchg
cmp
out
mov
call
addl
fidivrl
add
add
jp
pop
adc
call
add
addb
add
int3
cltd
popf
lahf
or
add
in
mov
xor
mov
ret
lods
jl
add
cltd
out
xchg
dec
test
insb
adc
pop
imul
add
imul
add
decl
outsl
fmul
and
add
call
adc
pop
inc
add
sbb
xor
add
add
add
icebp
add
out
push
ljmp
add
jg
add
lods
insl
push
mov
fimull
hlt
or
mov
stos
mov
cli
sub
jp
add
sbb
push
add
fmulp
mov
in
lods
xor
add
add
add
roll
sahf
cld
jmp
rolb
movsl
add
adc
sbb
cmp
ret
ss
mov
movsb
add
out
fstpl
jmp
pusha
add
pop
xacquire
imul
cld
arpl
push
jne
push
push
or
add
aas
out
xchg
jo
mov
fcmove
and
popa
add
sub
add
jmp
pop
add
fimull
call
add
popf
adc
add
arpl
psubusw
add
cmc
pop
add
lock
adc
addl
add
mov
add
pop
hlt
loopne
outsb
ds
mov
add
lahf
roll
add
add
bound
or
add
add
add
inc
add
mov
mov
aas
xor
pop
adc
add
push
add
lcall
int
jnp
add
xor
sub
adc
push
repnz
jl
cmp
lods
and
push
jmp
push
addl
sbb
add
shlb
cmp
add
xchg
mov
push
add
fcmovnu
pop
xchg
inc
add
mov
add
pop
or
add
pushf
sbb
jmp
add
mov
add
fwait
xchg
inc
add
das
or
add
xchg
mov
push
lret
fcomip
push
jecxz
es
popf
insl
push
add
jmp
cmp
mov
sub
dec
mov
nop
lahf
jge
cmp
add
mov
xchg
fmuls
lahf
adc
les
jae
add
add
mov
clc
push
out
mov
add
shlb
test
add
add
mov
mov
out
inc
add
dec
out
cmp
lea
int
movsl
add
add
sub
loop
outsb
adc
jo
addl
pop
mov
xor
lcall
ljmp
add
int3
nop
inc
add
inc
add
add
mov
loopne
sub
cwtl
sahf
push
pop
dec
test
in
push
mov
add
adc
lods
mov
int
add
add
addl
arpl
mov
xchg
jbe
or
push
cmpsl
add
jp
ss
mov
sahf
test
lcall
scas
cwtl
in
pop
adc
icebp
outsb
mov
add
xchg
jns
add
sti
fsubs
enter
add
add
sbb
add
nop
sbb
inc
add
jp
sbb
add
xor
mov
clc
jns
jecxz
movb
cmpps
adc
out
scas
addb
add
adc
add
in
dec
mov
pop
push
insb
jmp
test
dec
sbb
jge
add
int3
ljmp
stos
push
jle
jne
sub
aas
push
test
add
add
add
test
fstl
xchg
roll
xchg
adc
sarb
pop
shlb
add
ret
addb
jne
add
sbb
jg
add
add
stos
or
decl
add
out
mov
add
enter
ss
push
cmp
add
rcr
pop
bound
loope
mov
hlt
mov
sub
out
in
adc
loop
cwtl
nop
mov
lods
push
lock
leave
movb
add
adc
cld
mov
mov
push
add
jecxz
mov
xor
outsl
lea
add
sbb
leave
popa
add
add
jecxz
cs
gs
add
jo
sarl
pop
out
mov
add
push
roll
jb
insl
pop
mov
add
pushf
lcall
adc
push
add
cmp
xor
arpl
adc
add
add
aas
test
add
lahf
enter
nop
pop
xchg
mov
pop
add
lcall
fwait
dec
pop
add
xor
inc
add
add
sbb
or
add
setg
sub
push
pusha
add
mov
add
add
out
mov
push
push
adc
mov
roll
cli
stos
dec
in
and
mov
dec
lret
sahf
ljmp
into
sub
jmp
add
add
jmp
xchg
dec
xor
cmpsl
add
cmp
adc
cli
aam
add
add
add
pop
ds
call
add
sbb
and
cmpps
mov
out
pop
jge
lret
add
mov
jecxz
push
ds
pop
jb
ror
ds
add
inc
add
inc
add
xor
or
popf
push
mov
jle
sti
arpl
push
dec
lcall
jmp
add
dec
clc
inc
add
mov
shlb
lods
mov
add
and
mov
add
mov
sub
add
inc
add
add
add
hlt
and
std
hlt
ds
add
add
pop
popf
out
mov
add
test
fistpl
add
incl
push
add
cwtl
pop
cmp
addl
add
imul
sub
add
decl
add
cmpsl
add
ret
dec
dec
cmpsl
add
lds
mov
ljmp
sti
out
jmp
add
movl
and
in
inc
add
xchg
scas
mov
add
adc
push
sbb
push
sahf
jo
ljmp
mov
test
jb
aas
dec
pop
fwait
push
pop
jecxz
xchg
inc
add
cmp
test
jl
add
mov
jmp
add
test
lret
ljmp
ds
add
repz
or
adc
imulb
inc
add
add
scas
mov
aam
add
pusha
add
cmp
std
ss
adc
add
bound
jle
insb
cmp
add
lcall
pop
cli
dec
xor
jmp
add
imul
push
mov
or
push
mov
jl
xchg
cs
add
push
divl
adc
add
sub
add
adc
inc
add
xchg
cli
int3
jge
addl
add
add
add
xor
leave
shlb
pop
jge
popf
shrl
aad
add
xor
dec
mov
subps
add
jmp
add
add
pop
pop
addb
lea
call
mov
hlt
testb
movb
mov
mov
add
fucom
add
movsl
add
leave
fidivs
or
add
cmp
loopne
std
xchg
cwtl
xor
data16
pop
test
popf
xchg
or
push
cmp
pushl
add
idivb
sub
xor
mov
mov
add
bswap
sti
xchg
push
movsl
add
out
test
xchg
stc
or
add
add
pushl
sbb
push
mov
add
push
inc
add
or
test
xor
add
test
pop
ja
add
mov
add
and
sahf
insb
push
dec
aad
add
aam
repnz
push
push
adc
xchg
jbe
add
pop
fbstp
add
xor
cmp
jne
add
incl
lret
cltd
inc
add
lea
je
sahf
adc
cmp
xchg
push
inc
add
add
fwait
add
add
lahf
jg
xor
sub
addb
xchg
shll
sub
xchg
sub
sub
add
jbe
notl
add
insl
or
push
add
add
dec
push
dec
push
shlb
add
pop
fimuls
and
out
mov
pop
call
mov
jg
inc
add
push
dec
add
mov
inc
add
add
aam
add
adc
add
inc
add
add
add
call
mov
add
push
dec
push
or
loopne
jmp
mov
icebp
ja
add
or
add
mov
add
adc
mov
mov
add
lret
pop
mov
fnstcw
call
inc
add
lds
not
dec
xchg
fdivl
xor
mov
faddl
stos
dec
jb
pushf
fists
aas
lock
add
add
and
aaa
lahf
in
out
add
icebp
movl
cmp
add
add
sub
stos
sub
add
adc
add
inc
add
movl
in
adc
sti
push
data16
add
data16
add
mov
cld
clc
sbb
add
movsb
add
std
les
pop
gs
cmp
aas
clc
and
sbb
add
mov
jg
addb
or
mov
add
nop
and
int3
addb
add
loope
xchg
push
or
push
stos
push
jne
add
stos
bound
push
dec
rorl
lret
pop
movb
js
push
mov
ds
mov
sub
add
add
or
mov
mov
hlt
mov
xlat
ljmp
adc
aad
add
add
imul
idiv
inc
add
xchg
in
rorl
bound
jo
jbe
sbb
jle
ljmp
ljmp
jnp
sub
aad
data16
or
mov
add
jmp
repnz
incl
mov
add
push
cmpsb
add
add
inc
add
inc
add
add
xchg
ficompl
jge
mov
cmp
imul
add
push
pusha
add
xchg
cmp
pop
add
mulb
add
ficoms
xchg
test
dec
and
jno
call
lret
nop
call
mov
fiadds
xor
add
add
js
or
add
mov
mov
add
addl
out
adc
inc
add
and
mov
inc
add
in
daa
add
pop
imulb
mov
cli
stc
addb
dec
xchg
cmp
lds
mov
mov
push
fnstenv
adc
sbb
add
sbb
fs
add
stos
movl
lock
pop
xor
add
add
adc
or
pushf
rorb
add
add
xlat
sbb
add
inc
add
lea
adc
mov
add
add
loope
jbe
sbb
add
add
pushl
mov
ret
add
pushf
adc
add
das
jbe
add
xor
add
nop
pop
outsb
loopne
adc
xchg
pushf
jmp
jns
imul
add
imul
add
xor
push
add
add
pusha
add
and
inc
add
add
stc
cs
add
repnz
add
mov
cmpsb
add
shrl
mov
add
xor
fcompl
add
pop
aam
mov
add
ljmp
int
arpl
xor
adc
add
pop
arpl
xchg
adc
lods
mov
cmp
add
out
insb
and
sub
add
arpl
and
xor
aas
adc
stc
fistl
in
xchg
out
mov
popa
add
cld
mov
repnz
sahf
scas
int3
fwait
movsb
add
out
sub
add
jmp
aad
insb
cmpsl
add
add
nop
and
testb
in
xor
xchg
addb
add
popf
add
add
pop
lcall
ss
shll
movsl
add
adc
add
aaa
cmp
add
out
jle
loop
push
int
add
add
fldenv
pop
pop
dec
sub
loop
push
add
movsb
add
std
inc
add
data16
loop
test
inc
add
xor
dec
inc
add
rcrb
hlt
imul
pop
add
int
pop
outsb
divl
add
dec
fucomip
sub
int3
push
mov
push
add
xchg
mov
mov
pop
mov
add
addb
sub
add
mov
in
movl
inc
add
add
and
jle
pop
sbb
and
add
ret
add
or
add
test
testb
jbe
add
test
cmp
addl
jne
adc
and
pop
add
enter
cs
push
pop
add
mov
inc
add
xchg
lcall
add
int
add
add
icebp
movsb
add
cltd
addb
rcll
sbb
aad
cmpsb
add
xchg
pop
mov
aas
lret
mov
dec
aaa
icebp
adc
mov
or
add
addb
add
movsl
add
adc
or
xchg
repnz
sub
shrl
push
add
call
add
inc
add
aas
pop
sbb
push
jno
push
aaa
movl
dec
sub
mov
int3
sub
roll
add
jmp
lret
jg
jle
add
add
mov
aam
add
add
and
pop
dec
js
dec
ds
sbb
xor
add
add
imul
repnz
add
add
bound
data16
pop
cmp
push
ds
mov
push
std
filds
add
roll
ror
mov
fimuls
das
jp
xchg
addb
js,pn
xchg
test
out
mov
push
sbb
add
mov
lds
or
insl
bound
sbb
add
scas
dec
int3
aaa
sub
add
mov
or
pop
sbb
mov
add
push
jae
xchg
or
inc
add
addb
pop
inc
add
int
and
jae
inc
add
ja
push
das
cs
jp
add
pusha
add
dec
push
test
lcall
mov
add
decl
sbb
inc
add
xchg
das
lods
mov
imul
sti
or
adc
mull
mov
enter
cmp
fmulp
cmp
pop
js
add
dec
sub
data16
ret
xlat
iret
add
ljmp
stos
clc
rolb
xchg
aas
ss
push
mov
jae
xchg
ret
add
mov
add
pop
push
ljmp
add
xchg
mov
add
cmp
cmpsb
add
push
and
add
add
decl
fcomps
xchg
mov
add
add
insb
test
mov
je
adc
add
add
stos
in
sub
jns
sub
add
add
icebp
iret
sub
add
lcall
dec
hlt
fs
iret
addr16
add
inc
add
mov
add
repnz
outsb
push
add
add
add
imul
mov
hlt
es
pop
sti
inc
add
dec
repz
adc
dec
pop
scas
cld
cmp
add
incl
mov
ds
fnstenv
pop
js
adc
add
addl
fists
scas
inc
add
or
jmp
add
add
cmp
lods
xor
lahf
push
in
mov
pop
movb
mov
inc
add
cli
sbb
jo
add
xchg
xor
bound
mov
or
mov
hlt
imul
xchg
cli
fs
inc
add
js
add
push
lock
rcrl
add
ljmp
enter
insb
dec
hlt
movsb
add
aas
pop
inc
add
test
push
pop
inc
add
out
in
pop
mov
jmp
push
add
decl
add
jnp
jne
cs
les
jne
add
lods
rclb
xor
push
pop
add
cli
push
dec
mov
xchg
mov
add
addl
add
notb
fdivrl
or
add
adc
mov
fnstenv
sti
xchg
negb
lret
loop
sub
add
xor
pop
cmpsb
add
mov
call
sbb
adc
xchg
repnz
mov
cmpsl
add
adc
cmp
inc
add
into
rolb
pop
ja
cmc
roll
les
xchg
inc
add
cli
loop
loope
int3
dec
push
in
sbb
fistpll
add
movsb
add
add
add
lcall
bound
test
gs
xchg
cmp
dec
inc
add
movsl
add
add
pop
hlt
jmp
pop
jge
imul
add
inc
add
outsl
nop
sahf
xchg
daa
add
add
add
sbb
rolb
mov
fucomi
lret
add
add
xor
xchg
cmp
inc
add
sub
decl
inc
add
pop
or
fsubrl
adc
add
cmp
cs
and
movsl
add
add
add
add
lods
out
xor
add
lcall
add
add
cltd
adc
xor
add
jle
push
fiaddl
in
test
pop
lahf
cwtl
dec
jnp
mov
lcall
add
pop
add
xchg
push
addr16
fildll
add
adc
jp
and
das
jmp
push
addl
push
mov
js
add
add
adc
add
add
roll
mov
rol
add
xchg
aam
data16
add
test
add
jmp
add
xchg
repz
add
dec
jno
loop
adc
shrl
add
add
add
lods
jg
add
push
pop
xchg
loope
dec
mov
adc
pop
pushf
jl
mov
add
data16
mov
add
add
hlt
adc
and
add
add
add
push
add
lcall
inc
add
repz
xchg
jne
pop
cld
xchg
out
push
add
mov
cld
xor
add
into
jns
add
add
add
add
add
test
xchg
mov
jb
add
fidivrl
cli
rorb
mov
cmp
add
decl
add
mov
movsl
add
pop
sbb
mov
add
add
add
lods
push
in
outsb
cld
jmp
popf
stos
popf
and
cmp
inc
add
mov
dec
xor
jp
pop
addl
imul
sarb
nop
pop
fisttpll
lcall
test
cmp
jge
out
pop
add
lcall
add
mov
movsl
add
or
add
mov
sub
icebp
ret
add
add
jbe
adc
roll
add
test
jge
inc
add
add
imul
sub
movl
ljmp
add
push
call
in
cwtl
sbb
addl
mov
int
add
cwtl
bound
lock
mov
movb
or
in
mov
and
ja
add
push
outsb
repz
ds
add
inc
add
gs
xchg
call
lea
jmp
inc
add
clc
or
daa
add
mov
xchg
xchg
shll
add
nop
and
mov
pop
scas
cmp
fisubrs
add
lret
mov
jnp
rorl
lcall
add
jecxz
fidivrs
push
add
cmpsb
add
jge
sbb
cmp
fdiv
jmp
push
mov
add
mov
add
enter
add
dec
mov
cmp
lcall
cmp
xchg
add
pop
lock
cwtl
adc
push
loope
push
push
addl
mov
fidivrs
fsub
add
rclb
addr16
add
arpl
jmp
fwait
cmp
push
cmp
fdivs
mov
movsb
add
fstp
and
stc
ficoms
add
push
inc
add
xor
fstpt
jmp
sub
popf
mov
ret
add
enter
or
sti
and
enter
add
sbb
dec
dec
adc
decl
add
add
add
ja
mov
arpl
push
cmpsl
add
dec
mov
incl
sbb
add
mov
adc
xor
aam
and
pop
dec
push
sub
push
ret
add
jmp
push
xlat
rolb
add
add
add
mov
add
add
add
repnz
push
roll
mov
mov
pushl
add
pop
in
dec
sbb
je
push
dec
add
call
and
aam
add
inc
add
jl
add
lcall
dec
or
add
dec
pusha
add
decb
add
incl
mov
jno
add
rolb
in
mov
jnp
mov
pop
add
pushl
cmc
cmpsb
add
mov
adc
add
cltd
lods
mov
sbb
ror
fdivp
testl
pop
ljmp
push
addl
inc
add
dec
cmp
add
adc
sub
das
fcoms
test
jg
xchg
and
xchg
xor
pop
and
cmpsb
add
add
lcall
sti
bound
aam
lret
add
push
add
int3
inc
add
inc
add
pop
imul
add
and
xchg
add
negl
add
mov
in
ret
add
jns
pop
xor
test
je
fisttps
add
cmp
repz
inc
add
and
popa
add
add
lods
lds
add
inc
add
fidivrl
adc
movsl
add
add
pop
add
and
pop
push
xchg
lds
cmpsb
add
cmpsl
add
pop
mov
add
cmp
int
lods
nop
rcl
mov
add
pop
sbb
add
push
pusha
add
add
mov
push
add
add
add
add
incl
cld
lret
xchg
dec
push
insl
mov
lds
mov
add
das
mov
add
add
lock
xchg
daa
add
dec
add
jmp
outsl
dec
mov
add
xchg
push
push
test
cmp
lcall
clc
in
pop
mov
movsl
add
imul
mov
inc
add
mov
ret
add
lret
call
xchg
and
sub
loopne,pn
jo
aad
cmp
leave
fmuls
addl
jge
fwait
stos
movb
add
add
repnz
xchg
sbb
add
movsbl
roll
add
or
fucomip
mov
add
sub
cltd
int
mov
rolb
cmp
in
stos
sbb
popf
popf
dec
jae
pushl
jmp
lahf
dec
test
jnp
inc
add
add
pop
push
cwtl
inc
add
roll
jne
add
mov
add
int
add
pop
and
imul
mov
mov
add
mov
fwait
mov
add
decl
add
pushl
ja
add
imul
add
sub
outsl
pop
loop
in
aaa
pop
sbb
push
cmc
sbb
pop
add
sbb
add
jp
imulb
bound
mov
lock
aas
push
into
cwtl
xor
scas
mov
enter
pop
add
movb
push
rolb
add
jl
add
mov
adc
mov
xor
addb
fwait
loope
push
les
ret
add
mov
add
inc
add
aas
and
fxch
out
das
push
mov
add
add
fadd
add
aad
xor
and
or
add
test
fsubs
add
push
mov
xchg
sbb
add
jp
adc
inc
add
and
push
lahf
xchg
jmp
or
add
jmp
add
add
data16
jl
add
mov
mov
pop
mov
out
and
enter
add
mov
icebp
jae
mov
jnp
add
add
push
addb
add
add
pop
out
in
mov
push
scas
std
mov
cmp
add
popf
mov
filds
ljmp
in
dec
push
xor
dec
fwait
cs
lahf
push
popa
add
test
pop
add
dec
popa
add
nop
cltd
pop
imul
mov
out
xor
add
push
ret
add
xor
ja
mov
add
xor
mov
add
add
add
and
add
test
push
mov
inc
add
add
inc
add
das
lret
and
dec
mov
and
shrl
add
mov
lods
ljmp
in
cmp
add
clc
xchg
xor
add
out
push
inc
add
adc
jp
add
mov
add
add
decl
jmp
pop
bound
pop
mov
repnz
ret
add
add
jp
mov
and
add
incl
inc
add
mov
scas
inc
add
jns
add
mov
lahf
sub
mov
add
pop
mov
xchg
data16
pusha
add
lcall
push
outsl
xchg
cmpsl
add
jns
ficompl
jecxz
adc
add
add
arpl
cmpsb
add
jo
lea
jecxz
dec
pushf
cmp
nop
shl
add
add
jmp
mov
sbb
add
mov
inc
add
dec
fists
push
and
mov
cmp
xor
sub
movb
mov
add
mov
add
enter
cmp
std
push
ret
gs
lret
fstps
sbb
add
daa
add
add
add
les
lcall
roll
loope
mov
add
add
adc
add
popf
inc
add
stc
bound
add
decl
ss
add
call
pop
pop
push
add
add
xlat
in
or
mov
xchg
jmp
add
add
lahf
and
jg
add
add
sbb
mov
cwtl
inc
add
std
sti
mov
popa
add
pop
repnz
ficoms
ret
and
clc
jmp
addr16
add
push
jo
jle
test
pusha
add
jae
xlat
push
add
mov
add
add
add
cmpsl
add
mov
add
or
sbb
jne
add
out
mov
sub
roll
add
xchg
cwtl
iret
inc
add
sbb
lahf
inc
add
xchg
mov
cli
cmp
fsts
sub
pop
push
pusha
add
or
rolb
daa
add
cmp
test
data16
movsb
add
sbb
or
in
jbe
add
add
adc
dec
cld
xor
add
add
inc
add
sub
cs
and
inc
add
xor
imul
add
inc
add
add
jmp
add
lahf
or
add
add
shlb
add
and
aad
mov
push
loopne
fimull
sub
jb
sbb
mov
cmc
mov
in
and
shlb
mov
or
jno
adc
mov
mov
in
pop
xor
xchg
repnz
test
push
fsts
add
inc
add
pop
jg
add
add
add
add
add
scas
sahf
imul
or
add
outsl
jae
enter
inc
add
sbb
sahf
cmp
les
rolb
and
push
pop
push
insl
push
jno
test
pop
cli
xlat
or
and
fsubrs
mov
mov
scas
rorl
sbb
xchg
mov
mov
cwtl
push
add
bound
mov
test
and
sub
scas
adc
add
addl
mov
aaa
rolb
inc
add
mov
lea
enter
lock
adc
mov
js
iret
out
nop
push
push
lods
insl
and
sub
dec
rolb
add
add
jmp
ds
jg
inc
add
jae
mov
adc
xlat
insb
dec
mov
push
ret
into
mov
add
rolb
add
incl
divb
call
mov
sub
pop
and
dec
xchg
sub
rorb
xchg
xor
push
push
loop
popf
rclb
add
mov
mov
clc
sub
add
add
add
cmp
shlb
mov
aam
test
mov
fstl
mov
sbb
les
mov
cmp
add
mov
mov
mov
movb
lods
sbb
in
data16
adc
add
decl
test
add
jl
xchg
int3
pop
enter
jmp
sub
add
jmp
add
mov
mov
arpl
xchg
push
stos
stos
pop
or
jmp
add
outsl
pop
mov
lea
iret
ss
xchg
sbb
addl
jle
lods
pop
scas
pop
sub
iret
cld
jecxz
repz
xor
testb
loopne
add
frstor
hlt
sbb
popa
add
pop
in
lock
daa
add
mov
fnstsw
dec
add
call
lcall
cld
push
movb
pushf
je
pop
xchg
data16
pop
add
add
mov
lock
xchg
ret
jp
repnz
and
inc
add
negl
fdiv
dec
aas
out
mov
or
mov
pop
roll
fiaddl
outsb
sub
push
sub
popf
std
mov
rcl
addb
cs
add
addb
or
adc
xchg
loopne
popa
add
fmuls
pop
push
xor
ljmp
push
pop
xchg
pop
dec
roll
jnp
add
mov
or
scas
add
roll
add
shll
add
dec
jp
mov
lea
or
imul
add
push
push
push
loopne
push
and
pop
push
out
mov
nop
jns
mov
xor
inc
add
pop
les
dec
mov
sub
incl
pop
mov
lock
pop
jb
add
sbb
mov
xlat
jno
add
in
addb
lods
cmp
push
movsl
add
add
and
xchg
je
xchg
dec
aaa
hlt
outsb
loopne
jae,pn
fcomps
scas
mov
lret
xor
add
mov
cmp
insb
sub
add
mov
lods
jge
push
xchg
jb
add
add
push
mov
or
add
add
stc
and
lods
ljmp
call
add
ljmp
out
aam
pop
icebp
add
inc
add
pushl
xchg
mov
inc
add
sbb
jecxz
push
stos
jg
push
pop
cltd
jecxz
push
arpl
movl
add
add
mov
add
fistpll
rolb
leave
and
popa
add
add
arpl
test
add
movsb
add
pop
and
in
enter
pop
lods
or
imulb
mov
add
add
in
jmp
ss
outsl
sti
add
ljmp
add
add
das
and
push
jle
mov
add
add
pushl
jp
outsb
push
stos
and
roll
add
movb
inc
add
mov
xchg
pushf
lcall
sbb
push
lahf
jmp
incl
add
rolb
popa
add
rcrb
add
add
aad
push
addb
dec
add
insb
and
out
lds
lock
add
addl
sbb
test
loopne
jle
sub
sti
movsb
add
les
test
add
ja
add
daa
add
cmp
and
js
cmpsl
add
call
imul
push
mov
aaa
roll
sub
ja
lods
mov
insl
setb
push
in
adc
add
add
add
jle
add
stos
mov
add
add
add
movsl
add
and
es
add
ret
add
adc
add
mov
cmp
lea
dec
fildll
pop
mov
push
int
mov
pushl
stos
cmp
and
dec
sbb
mulb
lea
add
fcmovnu
decl
add
rolb
add
xchg
mov
add
and
inc
add
mov
add
xlat
inc
add
add
stos
cmp
movl
jno
call
out
xor
inc
add
mov
add
les
lock
add
inc
add
and
outsl
mov
add
xor
ljmp
add
xor
add
scas
jle
int3
lock
movsb
add
add
jmp
add
rolb
dec
fstps
test
adc
add
lcall
jmp
iret
push
addb
cmp
test
jmp
iret
mov
xor
ds
add
add
jne
pop
xchg
adc
sub
or
add
add
push
add
aad
push
dec
scas
xor
mov
decl
mov
push
outsb
in
lods
out
jnp
add
inc
add
arpl
cmc
idivb
add
call
in
aaa
lcall
dec
jne
sahf
add
lds
inc
add
add
add
add
mov
add
mov
ror
sbb
xchg
or
xor
add
add
sbb
or
jmp
add
add
xor
sub
add
push
xlat
pop
test
sbb
inc
add
dec
aad
and
sbb
insb
push
fsubr
fldcw
iret
leave
rolb
mov
out
bound
outsl
int
dec
lds
xchg
rclb
inc
add
in
xor
test
rolb
add
add
and
ss
inc
add
lcall
dec
incb
add
daa
add
in
dec
inc
add
sub
mov
mov
ds
add
cmp
xchg
cs
call
xchg
aad
add
arpl
data16
inc
add
add
cmc
rcrb
gs
imul
jp
movsb
add
sbb
das
add
pushl
add
jmp
add
sbb
add
call
sub
mov
xchg
cmpsb
add
insb
js
add
add
sub
add
add
jge
stos
sub
add
sti
add
incl
mov
pop
mov
jmp
or
call
pop
cltd
inc
add
movsl
add
xor
xor
add
or
add
adc
sbb
add
mov
stos
add
jp
scas
mov
pop
cli
ss
add
xchg
mov
add
cmp
mov
adc
add
test
push
mov
jge
lret
ret
add
inc
add
mov
movsl
add
push
ficoml
cmp
sbb
aaa
xor
xor
push
add
lret
test
loopne
cli
sbb
mov
leave
xchg
sbb
loope
lea
divb
fsts
mov
js
add
mov
push
or
inc
add
add
popa
add
push
in
scas
and
jp
ljmp
jno
ret
add
jmp
or
add
add
jmp
dec
mov
add
dec
out
add
stc
repnz
negl
xchg
push
cli
out
js
push
push
loope
lea
add
out
add
scas
leave
mov
inc
add
aas
mov
cmp
add
dec
and
xor
add
lcall
pushl
xchg
push
sbb
bound
ret
add
jle
fdivrs
jmp
in
pop
add
add
add
mov
add
add
js
cmp
scas
jnp
lcall
or
add
add
out
mov
mov
adc
cmp
adc
jne
loopne
sub
nop
icebp
mov
cmp
xchg
and
push
addl
add
shl
add
add
ja
fbstp
add
add
add
pop
negb
pop
mov
dec
xchg
lcall
add
addb
mov
fwait
test
fdivs
rolb
loopne
jl
add
cmp
and
mov
add
pop
rcrb
fxch
addb
cld
adc
cs
adc
aam
lret
mov
push
jo
mov
addl
call
adc
add
rolb
ret
add
add
or
cmpsl
add
inc
add
or
add
add
mov
insb
cmp
outsb
movsl
add
into
and
adc
jl
add
add
call
aad
xor
outsl
loop
adc
in
sub
vpmacsdd
add
sbb
add
outsl
lcall
dec
and
cmp
dec
xor
add
sub
add
test
enter
and
test
lds
inc
add
repnz
inc
add
sub
inc
add
add
mov
fsubrl
pop
add
lcall
mov
pop
sub
scas
mov
add
imul
inc
add
inc
add
dec
fs
or
add
pusha
add
daa
add
dec
mov
add
add
scas
pop
rcl
push
pop
or
in
lret
jo
add
inc
add
sub
add
add
sbb
push
in
mov
add
sbb
ljmp
jmp
add
mov
and
lahf
push
or
call
sbb
mov
loopne
jb
mov
mov
adc
add
push
cltd
add
pushl
and
movl
stc
mov
push
add
jp
jge
addl
cmpsl
add
dec
repz
add
add
add
xor
sahf
call
clc
out
arpl
jb
mov
add
mov
add
push
ljmp
add
add
xchg
ret
add
and
adc
ds
and
xor
jb
cmp
push
lds
mov
add
add
dec
sub
pop
ja
add
and
aad
push
and
dec
and
jecxz
into
pop
addr16
push
add
dec
pop
mov
mov
loop
dec
adc
movsl
add
add
dec
aas
out
dec
into
lods
fwait
mov
jle
xlat
loop
mov
cmpsl
add
outsb
insl
pop
jnp
cli
xchg
xor
add
mov
pop
adc
add
mov
add
mov
or
das
hlt
jne
or
sbb
ret
ja
aam
add
add
mov
add
mov
add
cltd
pop
stc
ljmp
xlat
fisttpll
jb
add
roll
add
clc
mov
xchg
arpl
add
fwait
ret
iret
out
pop
ret
add
ljmp
xchg
mov
cmp
and
pop
arpl
or
insl
jne
adc
pop
sarl
popf
push
jno
aad
movsb
add
xchg
xchg
in
sub
add
push
aam
add
pusha
add
mov
xchg
push
xchg
les
adc
xor
insl
push
xor
add
das
or
add
cmp
in
loopne
cmp
aaa
popf
or
adc
add
mov
inc
add
in
and
dec
jnp
hlt
lods
test
sbb
fdivl
pop
fsubs
pushf
mov
add
add
inc
add
add
add
mov
sti
int
repz
pop
repz
nop
xchg
daa
add
roll
sub
or
add
sbb
pop
int3
repnz
add
sbb
data16
shll
add
jne
and
xchg
cmc
jae
xchg
loope
sahf
jle
add
xor
add
dec
fdiv
push
fstpl
push
das
cmpsb
add
add
jnp
add
cmp
out
push
and
jecxz
push
cltd
mov
lds
fsave
in
hlt
bound
push
cld
xchg
insb
inc
add
mov
add
cmp
add
add
inc
add
das
adc
shl
add
addb
data16
cmp
xchg
add
jmp
jno
add
inc
add
adc
push
aaa
xor
sub
stos
mov
testl
add
push
and
mov
jge
iret
jbe
int
insl
push
inc
add
adc
add
pop
xchg
out
test
ja
dec
mov
int3
outsl
mov
xchg
and
sbb
mov
and
data16
ss
mov
add
add
pushf
mov
pop
cmp
fsubr
mov
push
sbb
loop
std
cmp
dec
rsm
adc
cmpsb
add
add
xchg
push
push
mov
sbb
adc
push
pop
inc
add
in
cmc
adc
push
jnp
dec
fs
pcmpeqw
mov
add
dec
ds
fs
stc
repnz
inc
add
add
add
pushf
inc
add
pop
mov
and
xor
cs
add
cwtl
and
fcoms
add
jecxz
push
xor
add
add
mov
cmp
add
add
dec
pop
fadds
sub
sub
push
dec
or
xor
bound
out
out
nop
push
push
add
dec
mov
add
cli
scas
test
loope
addb
add
add
mov
xchg
push
lea
xor
xchg
imul
int3
and
sbb
add
add
sub
in
data16
cmp
dec
mov
std
add
lcall
nop
call
mov
adc
sbb
mov
add
in
movl
add
add
add
add
add
push
add
add
movsb
add
add
mov
jmp
int3
add
incl
ljmp
inc
add
cmp
movsb
add
adc
add
add
adc
mov
pause
mov
mov
add
sbb
xor
push
add
push
add
icebp
push
ss
dec
push
popa
add
add
add
add
incl
es
xchg
mov
mov
xchg
aas
pop
jnp
jp
pop
popf
sbb
push
mov
addb
mov
add
imull
addl
add
sbb
bound
inc
add
insb
jae
mov
and
add
das
js
data16
fwait
push
push
ret
push
popa
add
add
add
movb
mov
or
add
sub
mull
add
add
xchg
repz
inc
add
jae
adc
add
jo
outsl
movsl
add
xor
and
fld
add
decl
movl
add
fmuls
jne
add
imul
lock
jns
cmp
add
xchg
loop
pusha
add
push
mov
data16
sub
or
in
mov
outsb
cwtl
mov
lret
addb
test
fdivrs
jl
call
mov
adc
add
push
sub
add
or
mov
add
dec
mov
movsb
add
bound
lret
addr16
mov
add
nop
xchg
fwait
call
sbb
xor
outsl
fwait
push
sbb
adc
out
xchg
fldcw
call
jge
fdivrs
add
mov
lock
sbb
jae
outsl
loop
xchg
repz
or
add
xor
or
sbb
mov
popa
add
lock
push
add
add
fs
dec
roll
add
frstor
add
mov
add
push
icebp
push
sub
adc
lods
cmp
xchg
add
jmp
and
sub
out
daa
add
ljmp
std
rcrl
mov
repz
out
push
rolb
incl
ljmp
lock
jne
lcall
ljmp
add
mov
rcrb
aaa
mulb
jne
lock
sub
stos
pop
sbb
add
add
xor
arpl
mov
add
in
mov
xchg
pop
leave
add
jmp
push
jg
movb
add
add
js
ljmp
roll
and
popa
add
nop
mov
add
and
add
dec
xor
stc
int3
sbb
xor
push
dec
int3
icebp
lahf
xchg
jg
add
add
jmp
add
xchg
mov
add
into
xor
mov
pop
js
or
fdivrs
add
repz
repz
cmp
push
lds
clc
mov
add
jb
add
add
loop
pop
mov
or
add
xlat
cmp
add
sbb
movsb
add
xor
add
push
out
xor
adc
xchg
dec
sti
fsubrl
mov
lret
dec
lods
or
pop
jge
add
mov
and
jnp
jo
fwait
movntps
lea
leave
leave
cmp
add
or
jnp
js
les
xor
add
add
aas
ss
sysenter
into
cwtl
mov
push
add
or
fldcw
xchg
fadd
add
int
jnp
push
or
add
mov
adc
setne
addb
jnp
push
jnp
shll
cmpsl
add
fnstenv
cmp
add
add
jae
add
loopne
push
add
aaa
inc
add
out
insl
cmc
cwtl
jl
add
popf
jg
add
iret
jg
lret
pop
imulb
xchg
xor
mov
dec
sbb
add
scas
xchg
mov
add
pushl
cmpsb
add
add
decl
dec
cmp
add
js
add
add
or
scas
adc
ds
sbb
pminub
out
mov
jno
add
popf
xor
ja
jno
add
cld
rolb
add
jo
pmaxsw
lret
mov
or
jne
pop
inc
add
or
pop
push
and
or
popf
imul
add
inc
add
mov
lcall
dec
in
mov
pop
add
pop
dec
addb
outsl
std
mov
add
lea
pop
sbb
aad
dec
cmp
adc
lret
mov
add
add
frstor
addl
loope
aam
add
jle
add
mov
enter
add
ja
jecxz
dec
inc
add
in
in
movsb
add
pop
mov
sub
dec
add
lcall
std
mov
add
fstps
xchg
xor
add
add
test
pop
add
add
cmp
pop
out
repnz
mov
fdivrp
js
add
fcoml
push
xor
add
push
xchg
lret
xchg
or
sub
sub
sub
pop
add
or
pop
nopl
dec
js
out
in
push
dec
pop
mov
add
roll
dec
push
shll
xor
loop
and
movsb
add
xor
enter
aas
pusha
add
add
push
add
mov
add
add
mov
add
cmc
push
loopne
and
add
add
cwtl
mov
and
adc
mov
jns
outsl
mov
add
pusha
add
icebp
push
dec
push
jnp
lods
jno
pushl
add
addb
jmp
jne
pop
cld
loope
out
dec
addl
dec
mov
add
call
lods
sbb
xor
leave
movl
addb
add
jnp
add
add
dec
xchg
int
sbb
imul
xor
aam
hlt
jg
cwtl
into
lods
add
cli
dec
aaa
out
mov
add
bound
add
add
add
call
add
cli
jb
jmp
add
add
roll
jb
incl
xchg
das
push
pushf
dec
out
sbb
test
call
adc
jp
xchg
roll
push
inc
add
push
mov
dec
jmp
add
cld
add
pushl
adc
cmp
pop
cmpsl
add
add
add
in
cmp
int3
cmpsl
add
add
aaa
inc
add
jp
push
push
add
jnp
sub
mov
inc
add
xchg
dec
and
mov
jbe
add
movsb
add
cmpsl
add
lea
cmp
daa
add
mov
cli
addb
and
pop
cwtl
pop
loope
mov
imul
push
ljmp
mov
or
jno
xchg
mov
jmp
dec
aam
aam
enter
or
cmp
into
and
add
add
test
decl
xchg
rolb
add
add
add
add
dec
push
dec
mov
mov
rolb
add
loope
jecxz
addb
sti
popa
add
mov
add
roll
adc
add
mov
push
cli
inc
add
daa
add
movb
fsubs
cmp
add
fidivrl
jp
loope
mov
add
cmc
lods
das
xor
add
sbb
call
popa
add
mov
add
mov
cmpsb
add
inc
add
out
lret
dec
xchg
push
or
pop
or
loop
rorb
int3
movsb
add
fistps
add
pop
insl
lret
push
mov
add
sti
jge
mov
pusha
add
stos
aad
push
add
mov
add
add
pop
insb
in
add
ficoml
mov
jl
ja
sbb
imul
and
dec
lods
lret
dec
out
pop
pop
xchg
mov
dec
xchg
or
pushl
add
or
scas
aaa
mov
mov
pop
xor
pop
roll
pop
out
into
xchg
insl
mov
pop
pop
xchg
les
clc
xlat
data16
mov
rorb
out
int
xor
add
push
mov
dec
lods
jnp
jnp
add
sarl
jg
sbb
mov
popa
add
inc
add
mov
dec
push
pop
cmpsl
add
push
add
add
cmpsl
add
and
mov
mov
arpl
push
or
pop
add
sub
sahf
hlt
in
test
scas
in
dec
add
pushl
das
int3
leave
adc
add
sbb
int3
inc
add
pop
lds
fldenv
add
pop
fcoms
pop
pop
push
daa
add
adc
fincstp
sub
add
and
test
add
add
add
adc
and
cmp
jbe
jle
aas
push
cmc
fnsave
imul
sbb
ja
dec
mov
pop
out
xlat
inc
add
add
adc
add
mov
add
xlat
jl
jl,pt
jns
sbb
popa
add
pop
in
mov
pop
add
add
add
pusha
add
mov
in
push
loope
add
inc
add
add
xchg
rolb
ljmp
cli
xchg
ret
add
pusha
add
add
rolb
or
mov
add
add
sbb
mov
or
jge
mov
mov
out
jmp
clc
mov
ss
add
rclb
push
test
xor
addr16
xchg
movl
popa
add
add
stc
in
inc
add
xlat
aaa
idivb
adc
movsl
add
gs
pop
scas
repnz
nop
mov
add
mov
cltd
enter
and
cld
xchg
popf
inc
add
adc
add
add
sbb
inc
add
jge
leave
pop
add
movsb
add
add
out
int
add
xchg
addl
cwtl
add
pushl
add
mov
add
pop
movl
add
nop
aad
lods
mov
add
call
adc
add
push
inc
add
add
adc
icebp
imul
test
mov
in
cmpsb
add
fs
mov
push
roll
dec
mov
add
outsb
aas
or
gs
lret
add
call
sahf
push
cmp
and
nop
add
mov
sbb
add
add
scas
and
sub
out
out
lcall
loop
lock
cld
pop
rolb
movb
call
jg
mov
push
pop
dec
rcrl
dec
addb
add
inc
add
mov
aam
xchg
pop
sub
add
add
std
push
addb
push
sahf
inc
add
push
add
adc
xor
jle
mov
push
add
jns
pop
sahf
outsl
aam
imul
sub
or
push
into
mov
cmp
into
in
je
add
insb
repnz
sbb
fstl
xchg
fs
inc
add
jne
sub
add
lcall
add
add
daa
add
jp
add
pop
jecxz
mov
cmp
mov
xchg
fwait
ret
add
cmp
lret
cwtl
psubq
cmp
js
shl
aas
push
int3
inc
add
mov
enter
mov
add
addb
inc
add
dec
mov
push
cmpsl
add
jbe
xlat
push
mov
sahf
xchg
ds
rolb
in
fwait
adc
inc
add
faddl
stos
stos
insb
dec
mov
add
outsb
ss
jg
pop
mov
add
sub
clc
in
and
rcll
jmp
and
out
jle
test
lods
adc
mov
push
pop
icebp
dec
mov
hlt
outsb
and
adc
pop
add
sahf
mov
out
sbb
addl
add
out
or
add
xchg
or
test
loopne
or
jmp
ds
cmp
add
add
add
add
dec
sbb
sbb
imul
cltd
ds
add
jecxz
lahf
lret
add
dec
mov
add
lret
and
lock
movsb
add
dec
loope
lret
addl
add
xchg
pop
or
ljmp
and
call
adc
pop
ljmp
push
ds
add
jmp
add
add
add
arpl
xor
jge
and
das
or
push
jb
pop
jno
dec
insb
aad
lea
add
jmp
out
cmp
cmp
das
inc
add
cwtl
mov
ret
add
push
xchg
mov
add
pop
mov
mov
sbb
addb
cmp
add
or
xchg
sbb
push
jno
movsl
add
cli
mov
cmpsb
add
dec
jg
pop
pop
cmpsl
add
pop
frstor
repz
jg
push
enter
push
mov
into
xor
add
adc
addl
jle
aaa
addb
add
dec
pop
add
sbb
add
add
adc
cmp
mov
outsl
adc
add
add
add
jmp
stos
call
add
movb
add
mov
ret
ret
cmpsb
add
stc
cmpsl
add
jns
xchg
sub
mov
out
jl
add
add
add
add
add
xchg
sahf
xchg
addl
add
mov
and
mov
mov
add
roll
push
bound
push
or
and
push
push
test
add
aam
add
xchg
std
inc
add
jns
sub
cli
mov
or
mov
push
leave
push
add
mov
push
sub
add
and
inc
add
jo
or
add
mov
pop
or
mov
lret
loop
or
xchg
jl
mov
add
scas
popf
or
cwtl
cld
scas
stos
fdivrl
push
cmp
nop
pusha
add
mov
add
cwtl
ljmp
cs
push
sub
stos
fcom
push
movl
or
addb
add
out
icebp
outsl
pop
add
ret
mov
add
xchg
xchg
scas
xor
jnp
mov
or
ret
add
add
add
cmp
mov
add
add
pop
mov
jle
fistps
dec
aaa
aam
xor
push
xchg
pop
add
add
jg
cmp
add
movl
ljmp
and
mov
pushf
stos
jo
fistpl
outsb
add
ljmp
add
mov
outsb
int
js
add
add
jne
testl
inc
add
lcall
bound
loopne
mov
mov
idiv
cmove
popf
push
test
add
fstp
addb
aaa
add
decl
pop
cld
add
add
sarl
inc
add
push
aad
add
call
ljmp
add
sub
test
push
out
out
jg
add
lret
and
stos
lahf
loopne
mov
jecxz
into
movsl
add
adc
mov
add
pop
add
add
aad
jmp
add
add
inc
add
lods
cmp
ljmp
addr16
int
push
push
add
call
outsb
jno
ss
mov
add
jne
call
add
outsb
push
cs
mov
les
je
cmp
inc
add
add
and
sub
mov
lea
pop
pop
add
ljmp
inc
add
add
xchg
data16
add
adc
les
inc
add
ss
and
cli
decl
xchg
inc
add
fisttpl
mov
xchg
pop
cmp
add
add
outsb
ja
scas
cwtl
jno
add
cmpsb
add
and
in
mov
and
ja
iret
cmp
test
cmpsb
add
mov
les
les
sahf
scas
jne
pop
add
pushl
aas
push
and
in
sub
add
add
cmpsb
add
out
inc
add
add
add
inc
add
mov
fistpll
add
jnp
add
mov
enter
jb
add
dec
push
or
xor
jmp
mov
add
or
test
mov
movsl
add
add
jns
rcrb
movb
iret
xchg
add
xor
je
inc
add
insl
icebp
xor
addb
repnz
add
mov
xor
cmp
add
movl
xor
add
decl
add
ror
decb
xor
imul
test
adc
add
lahf
and
test
add
bound
sbb
jne
dec
rolb
movb
xchg
xor
pop
das
or
pop
repz
pusha
add
cmp
mov
add
push
cmpsl
add
sub
or
das
in
adc
cmp
add
pushl
dec
je
dec
sub
arpl
sbb
add
add
add
dec
cmpsl
add
add
pushl
roll
inc
add
mov
or
mov
push
cmp
add
adc
in
scas
loop
mov
add
push
test
add
mov
test
mov
jle
xor
or
scas
mov
add
test
rolb
jo
inc
add
jge
ljmp
mov
push
add
inc
add
add
in
fists
pop
cmp
add
jmp
inc
add
push
inc
add
add
add
or
pushf
push
mov
xchg
ret
add
add
dec
adc
cltd
loope
xlat
lods
movswl
outsb
outsb
fsts
ljmp
les
test
jge
mov
and
pop
cmp
xor
das
loopne
push
movsb
add
adc
in
int
add
mov
inc
add
shlb
jecxz
ret
add
and
addb
add
add
mov
pop
int
sub
iret
mov
add
fwait
addr16
add
xchg
out
dec
xor
sbb
dec
inc
add
sti
mov
sub
and
out
inc
add
cmpsb
add
add
pop
add
iret
popa
add
xor
dec
or
sub
push
stos
jns
inc
add
add
cld
add
xor
sarb
xor
in
or
or
mov
rclb
add
incl
mov
add
add
pop
lods
inc
add
or
inc
add
or
add
jg
in
out
jbe
add
jmp
add
test
push
dec
add
cli
out
inc
add
rolb
cs
lea
cmp
xor
add
mov
inc
add
add
mov
mov
add
add
add
test
add
add
incl
inc
add
sbb
add
popf
dec
insl
inc
add
sub
mov
or
sti
scas
cmc
fmul
jnp
jp
add
sub
mov
mov
add
inc
add
imul
xchg
insl
mov
push
mov
add
cmpsl
add
add
jbe
add
lea
mov
xor
add
dec
push
add
add
xor
or
movb
sub
add
jns
adc
test
in
leave
lret
dec
hlt
fildll
mov
sbb
and
repnz
pusha
add
add
mov
push
mov
add
push
xchg
lcall
aaa
std
lret
cltd
mov
out
je
in
lahf
pop
and
jmp
sbb
add
popf
mov
add
sbb
scas
les
push
jp
outsl
cmp
xchg
jns
inc
add
jge
xchg
or
jno
add
add
cltd
xchg
addl
data16
movl
jg
decb
sub
mov
ljmp
sti
mov
jne
add
insb
pop
movl
add
mov
add
adc
add
std
xchg
clc
out
push
test
nop
cmp
push
and
xchg
pusha
add
push
stc
cmp
imul
inc
add
in
xor
cld
addb
add
frstor
push
jecxz
scas
add
decl
sub
sti
addl
sub
ret
add
mov
into
push
or
insb
xchg
rolb
mov
add
jge
jbe
add
add
and
aam
pop
add
add
dec
jge
add
bound
push
jae
jae
xor
add
add
mov
stos
add
call
sub
and
and
adc
add
test
pop
add
mov
aam
and
cmp
add
jmp
add
out
cld
or
add
mov
ljmp
cmp
mov
jmp
xchg
xor
adc
mov
leave
fisubrs
mov
xor
jp
add
insl
addl
add
pop
ss
push
pop
mov
jl
add
add
push
jb
add
iret
sbb
js
sub
adc
mov
push
fisttpll
fcom
shll
and
or
int
add
or
adc
push
sbb
pop
fbstp
add
pop
mov
add
and
mov
mov
stos
xchg
sub
add
pusha
add
test
add
mov
jge
add
mov
push
add
or
daa
add
jno
push
xor
add
stos
xor
dec
iret
aaa
nopl
loop
push
add
add
and
pop
dec
inc
add
push
xchg
lods
and
jno
add
mov
jmp
add
dec
call
mov
mov
xor
push
insl
xchg
jecxz
cs
mov
dec
xchg
inc
add
inc
add
add
call
fst
std
mov
add
jmp
jns
sub
and
dec
je
add
mov
add
call
add
mov
mov
js
add
adc
add
jmp
lahf
or
add
ljmp
imul
icebp
movl
push
mov
inc
add
mov
add
jp
add
cmp
clc
push
adc
pop
add
and
add
repnz
dec
jp
fistps
dec
fstpt
push
pop
insl
mov
dec
leave
ja
clc
std
mov
cmp
xor
jmp
add
daa
add
fnstsw
addl
sarb
jp
mov
cmpsb
add
add
incb
pop
into
fisttpll
leave
or
add
jmp
add
jae
clc
adc
pop
jge
add
cltd
cld
lret
dec
dec
call
fcmovnu
jns
xor
add
scas
jns
jg
call
sub
sub
repnz
shr
adc
adc
add
arpl
imul
add
movl
add
cmpsl
add
xor
or
lds
push
cmpsl
add
add
sub
rorl
add
decl
movb
movl
lahf
inc
add
aas
pop
cmp
mov
add
push
dec
pop
pop
jmp
add
daa
add
add
mov
xor
sbb
or
add
decl
mov
jne
lret
and
js
xchg
punpckldq
sbb
add
out
jl
add
lods
rolb
add
mov
cld
push
cwtl
xor
cmpsl
add
add
sub
bnd
add
arpl
mov
and
cwtl
jg
and
mov
jno
push
pushf
out
xor
outsl
cmp
sub
loope
jl
add
enter
adc
fbstp
adc
xor
xchg
lea
pop
jnp
insl
fxch
add
out
sub
add
xor
add
daa
add
inc
add
insl
fst
fisttpl
add
stos
inc
add
add
mov
push
sbb
add
mov
adc
cli
xchg
ljmp
add
add
push
cld
jp
imul
in
and
sbb
add
jbe
dec
dec
iret
fisttpll
sub
add
dec
push
adc
add
test
lock
nop
mov
add
dec
push
in
lcall
and
aad
add
aaa
sub
mov
add
push
cmp
add
xor
add
insb
inc
add
adc
xchg
and
mov
fmuls
jp
movl
pop
mov
cmp
addb
mov
stc
mov
pop
test
inc
add
mov
mov
add
jg
dec
pushf
and
out
xchg
in
repnz
divl
adc
add
loop
popa
add
cmc
insl
jns
xchg
pop
add
add
cmc
or
sti
pushf
cwtl
and
pop
mov
mov
add
loope
ljmp
popf
dec
sub
mov
add
aas
ja
mov
fwait
lock
xor
scas
and
push
mov
scas
imul
jge
mov
add
lcall
push
mov
jbe
mov
add
nop
sbb
dec
popl
push
daa
add
mov
lds
repnz
jmp
add
and
addl
outsb
addb
push
mov
repnz
xchg
sti
push
outsb
mov
add
mov
push
xchg
and
add
out
jns
add
add
rorl
jmp
call
add
push
add
jne
add
cmp
pandn
add
jge
hlt
mov
ja
add
cmp
xor
pusha
add
add
ret
add
roll
mov
xchg
mov
bound
daa
add
add
outsb
sbb
pop
add
add
call
push
lret
sub
test
dec
add
jmp
add
cmp
fs
popa
add
lds
push
xchg
add
call
test
cltd
xlat
sbb
popa
add
xchg
mov
add
lcall
xchg
test
scas
xchg
imul
ror
shll
mov
xor
call
sahf
sbb
add
xor
lds
movb
mov
outsb
jl
xchg
cmc
xor
dec
xor
lret
or
nop
test
sbb
adc
mov
add
rcr
arpl
jge
add
out
movsb
add
arpl
and
stos
push
fisttpl
dec
add
add
mov
jmp
test
or
mov
mov
add
inc
add
add
aas
and
bound
incb
mov
scas
pop
ss
repnz
xchg
add
decl
mulb
loopne
repnz
fsubs
into
sbb
add
mov
sti
cmpsb
add
add
stos
add
lcall
cwtl
sbb
dec
sbb
pushl
add
add
addl
shrb
push
lcall
adc
fdivs
fildll
outsl
jmp
stos
add
add
mov
sbb
xchg
ficoms
aaa
divl
mov
pop
dec
cmp
dec
lahf
std
mov
add
lcall
add
mov
add
xor
xchg
xor
xchg
stc
iret
idivl
and
or
add
lock
scas
jne
or
divb
pushl
ret
or
aas
repz
mov
mov
cmp
test
sbb
cmp
sub
rcrb
lods
inc
add
mov
add
xchg
roll
shll
movsl
add
add
hlt
jbe
add
pop
add
lock
xor
ss
add
mov
addb
mov
add
and
sub
repz
enter
rolb
add
iret
push
add
xchg
int3
in
cmpsl
add
adc
dec
push
adc
add
ss
cmp
jno
mov
add
inc
add
dec
fst
pop
cmp
mov
xor
iret
insb
jle
add
movsl
add
in
xor
cmp
add
out
roll
mov
add
add
sbb
inc
add
add
addb
stc
push
jecxz
outsb
inc
add
clc
push
add
cmp
add
inc
add
add
add
lock
cli
pop
add
jmp
add
decl
lea
das
jge
pop
cmp
push
fnstsw
lret
mov
push
mov
add
out
sbb
add
mov
xchg
push
out
out
out
cmpsl
add
pop
add
add
add
jbe
rcll
pushf
out
insb
fwait
mov
sub
xchg
leave
sbb
in
mov
fidivs
in
je
add
jbe
add
add
mov
sub
mov
incl
add
add
add
and
lds
sub
adc
repz
xor
pushf
jmp
loopne
cmp
add
mov
idiv
data16
adc
add
mov
add
push
add
addl
add
add
nop
movsl
add
xchg
pop
jnp
mov
outsl
int3
bound
daa
add
incb
jecxz
mov
push
mov
sub
pop
add
cmc
or
inc
add
mov
push
jns
ljmp
xchg
dec
push
testl
sbb
jl
lds
daa
add
xchg
xchg
adc
sub
add
rcr
fwait
mov
out
mov
add
std
js
xchg
ljmp
fldl
inc
add
mov
push
out
push
inc
add
repz
add
mov
addl
add
inc
add
fld
add
add
dec
lea
inc
add
addb
add
rol
add
jno
jno
cmpsl
add
inc
add
mov
mov
add
add
repz
mov
add
add
jecxz
popl
mov
add
jbe
int
fsubrl
add
cli
sbb
add
enter
mov
xchg
add
mov
mov
loope
iret
inc
add
add
add
pushf
fbstp
and
sbb
add
fcomps
or
inc
add
fcoms
pop
fdiv
xor
shr
fisttpll
dec
popa
add
addl
data16
add
std
fwait
dec
stc
jmp
pop
push
jecxz,pt
sahf
jbe
add
mov
push
sbb
add
into
hlt
mov
xchg
add
jmp
add
add
adc
fwait
mov
pushf
clc
mov
xor
add
add
lea
movsl
add
jne
loope
mov
mov
ljmp
iret
stc
lahf
sbb
stos
mov
add
cmp
dec
dec
insl
xchg
add
jmp
add
sbb
add
cwtl
pop
pop
mov
jle
push
sub
loop
push
push
std
dec
addb
add
add
add
push
or
jnp
enter
mov
aas
add
add
in
rcrl
push
push
mov
push
cltd
inc
add
insl
inc
add
mov
add
jecxz
cmpsl
add
add
add
or
and
test
and
das
or
rclb
in
iret
mov
jb
addl
push
les
pop
xchg
cmp
add
add
lcall
inc
add
xlat
fnstenv
mov
jle
pop
loop
inc
add
dec
outsb
mulb
add
cltd
pop
push
shrl
add
call
addb
imul
sahf
jno
add
add
add
add
add
add
inc
add
lret
add
pop
add
add
mov
gs
data16
loop
cmp
scas
mov
adc
out
cmp
push
out
mov
adc
add
mov
and
mov
or
add
add
pushl
inc
add
fdivp
dec
mov
cmpsl
add
in
lret
xchg
sbb
xlat
dec
ljmp
loope
sahf
daa
add
jle
push
add
mov
add
pop
clc
loop
outsb
ds
jmp
add
mov
and
jge
cwtl
mov
add
in
push
add
add
push
mov
or
add
mov
mov
sub
mov
roll
aad
xchg
les
mov
jle,pn
push
mov
add
lcall
mov
add
add
cmp
mov
jge
add
add
add
icebp
inc
add
add
dec
rolb
add
jo
dec
ret
add
ljmp
sub
push
inc
add
enter
add
repz
scas
cmp
inc
add
iret
iret
es
add
cs
shll
cmp
jb
jecxz
stos
loop
pop
add
sbb
add
incl
sbb
cmpsb
add
add
out
jns,pn
pop
test
pushf
ficompl
xchg
xchg
rcl
cmp
push
add
ret
add
inc
add
mov
into
cmc
add
outsl
push
add
incl
lcall
incl
es
add
dec
shl
jl
push
sbb
roll
add
add
add
add
xor
notb
mov
insl
movb
add
clc
and
add
hlt
scas
jmp
add
add
jmp
add
lahf
stc
addl
add
popa
add
adc
outsl
scas
dec
fnstcw
xor
mov
add
mov
jne
out
add
call
jmp
add
jo
ror
push
dec
fnstsw
and
cmp
push
ret
mov
mov
mov
add
add
int3
push
in
fsubs
add
addb
test
mov
inc
add
dec
mov
cmp
lcall
cmp
xor
dec
add
add
