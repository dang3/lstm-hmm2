push
ror
dec
push
add
je
mov
mov
add
mov
and
add
sbb
jb
imul
in
or
mov
lret
dec
mov
adc
cltd
mov
push
leave
push
popf
adc
pop
adc
lods
pmaxub
sub
out
sbb
push
cs
rolb
add
sarl
fisttpl
jbe
xor
jns
notl
add
add
addb
hlt
and
pop
bound
pop
lds
add
bnd
mov
add
mov
add
fwait
cmpsb
in
gs
mov
data16
lods
insb
fwait
iret
stos
imul
add
lock
add
dec
arpl
add
aas
cmp
pop
pop
lods
insb
nop
xchg
shll
loopne
stc
dec
add
test
add
mov
les
iret
sub
add
inc
or
stos
nop
daa
int
mov
movsb
lods
pop
add
repz
mov
cs
sub
addb
cmp
enter
push
testl
sbb
sti
mov
loope
add
jge
adc
lds
push
lahf
dec
lcall
negb
jnp
jecxz
mov
sub
lret
icebp
js
js
enter
sbb
xchg
cmp
mov
cmpsl
test
shrl
sbb
xchg
push
hlt
adc
cmp
inc
add
arpl
fucomi
jg
imul
repnz
dec
loopne
pop
fistps
sti
cs
fwait
pop
sarl
adc
sarl
cmpsb
aaa
ficoms
push
xchg
pushaw
add
jge
inc
cmp
add
in
addb
fwait
inc
add
daa
psadbw
add
repnz
fsubl
and
loope
dec
mov
shrl
mov
enter
pop
sbb
pop
cmovns
mov
xor
add
les
and
repnz
inc
das
ret
addb
xchg
outsb
xor
icebp
and
mov
into
je
and
hlt
mov
scas
adc
inc
add
add
insl
push
icebp
inc
pop
icebp
loopne
stos
es
pop
mov
mov
add
add
mov
jg
xchg
lahf
into
xchg
cld
jb
jnp
jns
xchg
leave
rcr
leave
call
iret
int
mov
ljmp
add
leave
ja
inc
add
add
jae
nop
lock
or
imul
jnp
lret
or
add
enter
xchg
mov
outsl
pusha
add
lock
popa
add
mov
out
cmp
sub
pop
and
inc
add
fcmovnbe
or
dec
sub
mov
scas
dec
cmpsl
jnp
and
jg
rolb
mov
xor
clc
or
loop
jae
jae
fidivs
jmp
arpl
repz
pop
cltd
mov
jne
adc
push
aam
andl
sub
icebp
nop
pusha
add
add
dec
sub
loope
mov
pushl
fsubr
lods
mov
lds
fbld
enter
xchg
jmp
xchg
adc
aad
imul
scas
cmp
lock
or
call
mov
dec
into
adc
add
mov
inc
add
mov
mov
dec
jb
popf
push
xchg
movb
rorb
bound
jo
shrl
xor
mov
dec
mov
fnstsw
add
adc
add
fdivrl
mov
cmp
cmp
dec
js
add
movb
pop
mov
add
pop
mov
pop
imul
xchg
jo
repz
out
cmp
push
add
mov
adc
sbb
je
fucomip
cmp
aam
fnstcw
mov
add
lock
jns
fisubl
rolb
stos
in
mov
sbb
mov
fstpl
sahf
fs
data16
fdivrl
popa
add
xchg
sbb
test
push
add
push
xor
dec
cs
lcall
lcall
in
xor
jne
retw
int3
cmp
add
and
lods
test
out
lahf
insb
call
stos
mov
popa
sub
roll
add
push
dec
pop
iret
add
mov
inc
push
cmc
das
add
sti
mov
addb
scas
pop
cmp
call
bound
call
lcall
cmpsl
pop
lret
out
mov
cwtl
and
dec
xchg
sub
je
add
mov
sbb
add
ret
jae
mov
mov
push
add
push
out
push
das
decb
nop
lcall
das
test
and
and
mov
push
cmc
icebp
lods
xor
add
xor
jp
aam
or
jp
add
out
jecxz
jo
hlt
add
inc
add
mov
add
push
add
jne
out
xor
shrb
sbb
jne
push
cmp
dec
cwtl
adc
adc
inc
int
imul
add
inc
add
rcrl
push
stos
or
push
inc
add
add
adc
lret
mov
xor
scas
jo
nop
pop
ret
jp
and
inc
jnp
loope
add
popf
pop
cld
xor
cwtl
mov
aad
mov
push
inc
add
xor
lahf
cwtl
push
loop
add
out
pop
dec
lret
cmp
inc
add
cmpl
sahf
stos
jnp
add
push
add
rorb
mov
xor
add
add
filds
add
mov
sbb
mov
cwtl
fcomps
rcr
push
std
jp
iret
sarl
ret
fistpll
or
push
inc
add
and
lahf
bound
mov
mov
xchg
or
mov
inc
mov
push
fwait
jae
fs
xchg
rcr
jno
test
jnp
mov
packuswb
cmc
hlt
cmpsb
fnstsw
add
ljmp
xchg
lods
gs
mov
adc
fisttpll
jmp
xchg
push
add
cli
aaa
mov
test
mov
jmp
test
push
jns
add
repnz
fwait
inc
add
mov
loope
hlt
test
jns
inc
test
mov
shll
addb
aam
add
mov
pop
mov
add
mov
mov
dec
push
push
jno,pn
andl
addb
ljmp
jge
mov
rolb
fwait
xor
pushl
xchg
inc
jo
es
jge
enter
cmc
sub
addr16
bound
int
int3
adc
pop
jge
cli
icebp
xchg
mov
aas
or
push
add
push
rclb
jae
sbb
dec
icebp
xor
or
mov
push
out
insl
push
dec
arpl
cld
pop
addb
xlat
pop
xlat
rcll
inc
mov
iret
pushf
push
cmpsb
lock
mov
les
adc
xor
cwtl
dec
out
neg
pop
cmp
mov
lea
inc
add
xchg
stos
clc
insb
loopne
movb
inc
add
adc
stos
mov
scas
inc
add
mov
lcall
pop
sbb
lods
cld
pop
enter
mov
std
or
mov
pop
sub
mov
adc
jg
fwait
mov
xlat
test
jo
icebp
pop
test
in
xorl
insl
mov
in
imul
cmp
divl
jno
add
adc
out
repnz
or
lahf
inc
add
jo
dec
jge
push
or
cmc
cmpsl
inc
add
push
push
divl
adc
add
add
scas
mov
mov
add
jbe
mov
add
cld
fwait
mov
fists
xor
ficoml
js
or
xchg
xchg
testl
sub
pop
leave
popf
xchg
inc
add
test
fisubrs
mov
cltd
in
sbb
add
add
outsb
stc
seta
rcrl
sbb
test
inc
add
movb
out
push
pop
sbb
add
mov
stc
imul
stos
adc
test
or
out
add
int
test
pop
or
cmp
test
fistps
stos
bound
adc
mov
movsl
or
sahf
xchg
adc
in
or
jecxz
movb
xor
add
mov
leave
jno
pop
popf
mov
push
xor
bound
stc
jg
inc
add
jne
aaa
and
add
movb
imul
dec
adc
xor
hlt
jle
out
dec
stos
inc
sub
adc
arpl
sub
xor
mov
mov
leave
mov
dec
push
adc
rolb
dec
pop
mov
addr16
push
cmp
movsl
dec
nop
cmc
clc
push
daa
lock
add
pop
stos
cmc
les
loop
clc
aaa
xchg
movsl
dec
bound
out
lods
jne
add
add
les
bound
mov
inc
stos
xchg
insl
pushf
push
ror
xchg
pusha
add
push
mov
add
add
mov
xor
add
repz
jmp
mov
lods
insl
cmp
sarl
pop
inc
dec
pusha
add
pop
test
mul
test
push
push
fisubrl
and
mov
push
xor
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
scas
in
iret
sbb
jecxz
ss
shl
mov
ret
arpl
adc
outsl
cmc
jmp
mov
cmp
adc
adc
add
mov
jne
leave
push
add
push
and
mov
dec
jo
cmp
xchg
adc
out
addb
inc
xlat
pop
xor
das
gs
cli
mov
sub
orl
into
or
push
fmuls
cmp
mov
popf
jno
adc
mov
add
add
push
pop
jp
xchg
data16
sub
sti
dec
mov
in
mov
loope
xor
andl
jle
sbb
jg
jae
cmpsb
jb
adc
pop
mov
push
push
jo
cmp
jbe
shlb
lods
mov
aas
cmpsb
jle
sti
test
loopne
test
movsb
fldl
test
xor
push
arpl
lret
sahf
int
mov
xlat
xchg
cmp
or
fcmovu
addr16
mov
mov
dec
test
add
jmp
add
addb
add
or
mov
fsubl
add
jle
inc
lcall
test
lahf
daa
fsubrp
fwait
push
sbb
addr16
test
inc
mov
add
or
sub
scas
mov
popf
mov
xor
addb
sahf
mov
ss
push
and
add
ret
cli
sub
lret
sbb
test
xor
add
repz
iret
dec
adc
add
aaa
mov
cmp
in
ds
rclb
inc
cmp
arpl
addb
scas
mov
arpl
jge
or
cmp
aaa
inc
dec
inc
xchg
fisttpll
push
add
add
test
add
enter
inc
add
decb
sbb
loop
lret
add
xchg
sub
repz
jle
pop
xchg
push
test
out
subl
fisubrl
test
xor
lret
inc
cmpsb
mov
movsb
stos
push
add
repnz
cli
or
mov
out
and
test
iret
cwtl
loopne
cmp
aam
dec
lret
popf
sub
cmp
scas
push
std
sub
dec
and
add
leave
dec
sub
jne
mov
and
outsl
jnp
sub
aad
add
add
dec
faddl
mov
movsl
pop
addb
push
lcall
sahf
mov
movsl
lret
dec
sbb
push
sub
fwait
push
outsb
test
xor
add
push
sbbl
or
or
or
nop
dec
dec
jno
in
push
mov
xchg
out
popa
pusha
add
movsl
inc
shrl
insl
mov
int
and
mov
push
lods
sbb
mov
push
xlat
push
mov
movsb
fstpl
or
inc
add
pop
movsl
cmc
jl
adc
push
mov
inc
popf
imul
mov
push
adc
mov
insl
adc
mov
pushf
and
jo
cltd
inc
mov
lret
and
and
mov
jne
movsb
sub
jle
jecxz
add
add
repnz
inc
mov
ds
fildl
inc
add
ret
out
xchg
nop
outsb
clc
in
xchg
inc
add
ficoms
jg
push
mov
mov
test
popa
stc
fcomp
das
push
mov
sahf
popa
dec
jnp
add
xor
add
stos
inc
popa
cmp
fiaddl
push
clc
mov
mov
sbb
aaa
insl
cwtl
fmul
je
pop
xchg
imul
or
bnd
insl
into
pop
inc
add
movsl
insb
stos
or
xor
insl
mov
fldcw
shlb
mov
add
push
pop
ja
mov
add
inc
nop
int3
pop
rclb
add
push
cli
ret
out
outsb
shr
roll
dec
aad
mov
movb
das
add
mov
xchg
test
push
in
rcrw
loope
pop
jp
adc
aad
fucomi
push
popf
mov
pop
cli
lods
mov
xchg
popa
pop
out
add
dec
pop
aas
fisubrl
stos
cmp
lfs
lcall
cmc
sub
mov
outsl
mov
add
xor
push
addb
sbb
sub
mov
mov
addb
outsb
add
mov
add
lods
sbb
or
out
dec
jle
add
fisttpll
imulb
shr
and
push
mov
mov
jp
test
lock
pop
push
sub
clc
cmp
jbe
rolb
or
jno
xor
cmp
imul
add
mov
arpl
ja
sub
add
mov
add
pop
enter
xchg
clc
popa
push
add
aam
add
ja
add
lahf
addb
fcmovnb
cmpsl
or
int
outsl
loopne
sbbl
push
repnz
and
adc
xchg
scas
pop
inc
add
loop
jns
pop
loope
nop
pop
jle
pushf
and
mov
cld
outsl
fcompl
in
xor
les
dec
lahf
and
out
aaa
shlb
dec
mov
push
add
sbb
stos
and
pop
in
and
in
cmp
in
repz
add
mov
dec
mov
int3
jb
xchg
fisttpl
ss
inc
pop
xchg
or
fisubrl
xchg
inc
sahf
icebp
push
jo
pushf
orl
mov
jecxz
cltd
sub
scas
push
cmp
rolb
sbb
add
push
adc
jae
imul
nop
inc
add
and
fucomp
frstor
in
adc
daa
ljmp
rcr
fisubl
add
rcrl
add
add
loope
repnz
add
inc
adc
jge
add
test
sub
hlt
sarl
mov
inc
lret
fwait
xchg
or
mov
dec
addb
sub
jno
sarl
leave
push
insb
in
cli
cmpsb
bound
fwait
addr16
lods
sub
lea
or
mov
adc
push
pop
mov
fists
fwait
add
push
jne
push
fisubl
xor
add
dec
xchg
imul
adc
in
lret
push
aad
xchg
and
mov
rolb
bound
inc
add
movsl
roll
mov
lea
and
pop
xchg
fnstcw
push
xchg
outsl
mov
inc
add
sbb
hlt
push
jmp
push
xor
rorl
lret
cmp
jp
lods
out
and
adc
out
mov
xchg
pop
sarb
and
inc
add
cmp
orl
xor
add
xlat
xor
jb
xor
add
add
stos
test
cmp
mov
add
add
ja
mov
into
and
jnp
je
push
pushf
sbb
and
push
into
addr16
sbb
adc
dec
adc
lcall
dec
in
ss
add
mov
adc
add
fstl
xor
movsl
out
sbb
inc
xchg
notl
aaa
sbb
sbb
jae
jmp
mov
addb
push
insl
es
arpl
mov
adc
aaa
inc
es
lcall
xor
push
mov
cmpsl
rorl
jecxz
fs
push
lods
addb
mov
pop
mov
out
bound
cmp
mov
ljmp
inc
dec
xor
dec
push
loop
aam
add
pop
leave
sti
pop
cmovae
lods
jb
xor
add
or
addb
add
sub
movsb
mov
cmp
pop
icebp
test
mov
xchg
sarb
nop
pop
lret
xchg
mov
pusha
add
cmpl
and
push
inc
add
rcl
out
inc
add
jmp
xor
ficoms
xchg
cmc
or
push
in
push
cmp
push
add
inc
lods
fisttpll
sub
sbb
mov
fildll
addb
mov
fprem
aas
xchg
push
push
aas
imul
add
add
vpmacssdd
mov
mov
sub
cltd
out
mov
test
fdivrs
and
push
test
sub
push
lds
bound
in
add
sub
xchg
std
push
add
jbe
mov
add
jbe
jmp
pop
aam
repnz
pushf
dec
dec
loopne
push
and
scas
addr16
jnp
js
xchg
dec
movsb
inc
add
loopne
repz
aam
out
xchg
jl
mov
icebp
mov
sbb
int3
mov
outsb
push
mov
xchg
mov
pusha
add
ror
and
fldl
movb
test
fldl2t
mov
push
jo
nop
xchg
int
adc
call
setne
stos
stc
es
and
lds
leave
pop
jge
ficompl
imull
xchg
sahf
fidivl
imul
add
add
push
push
bound
loopne
mov
loope
inc
add
lret
mov
push
add
mov
and
lock
or
bound
and
arpl
rcrl
xchg
jg
cmp
fwait
insb
mov
jno
sub
std
clc
negl
jg
or
mov
lock
fbstp
jno
or
xchg
icebp
cmp
aad
add
or
push
stc
xchg
sahf
lock
sbb
cmp
sbb
mov
push
daa
filds
loope
or
std
jne
aam
dec
or
push
je
daa
scas
pop
jnp
adc
inc
fsubr
pusha
add
mov
loope
mov
shll
add
lods
jae
mov
mov
push
xchg
push
dec
xchg
pop
or
dec
sub
adc
notb
stc
add
mov
inc
mov
cmpsl
stos
mov
push
mov
add
loope
sbb
inc
lcall
jae
lods
inc
add
aam
scas
stos
data16
daa
pop
stos
pop
rolb
lahf
and
inc
fstl
mov
movsb
xor
jbe
add
rcrl
addb
inc
mov
cmp
push
cmp
imul
adc
ds
or
jbe
test
jmp
cwtl
daa
cmp
and
lret
inc
add
dec
fidivl
ja
mov
mov
dec
and
fsts
jnp
stc
inc
dec
adc
sub
std
xor
adc
rcrb
jo
xor
enter
aaa
and
adc
test
out
cltd
jnp
push
dec
and
jae
xlat
in
jg
bound
xor
mov
cmp
jmp
sub
dec
fists
decl
mov
add
cs
add
add
mov
mov
push
notb
sbb
xchg
shlb
xchg
popa
gs
fimuls
mov
and
aaa
xchg
movsl
pop
dec
mov
inc
dec
sbb
sbb
out
jnp
repz
xchg
sti
fstps
fdivrl
inc
adc
fst
xchg
pop
out
push
data16
and
mov
push
push
ret
mov
ljmp
das
addr16
rolb
dec
and
add
sbb
imul
lock
xor
rclb
mov
fstps
test
xor
xor
add
inc
add
lock
adc
stc
les
and
jmp
cmpsl
pop
pop
test
pusha
add
out
xor
jno
mov
pop
jb
sbb
rolb
test
cmp
ja
jg
dec
loope
pop
sbb
dec
jbe
mov
mov
ljmp
call
cmp
cmp
mov
xchg
bswap
mov
mov
pop
xor
dec
mov
add
imul
and
cwtl
jno
add
adc
and
jge
add
std
xchg
inc
add
lods
adc
rolb
push
dec
mov
xchg
dec
sbb
ret
adc
outsb
sbb
cmc
cld
sbb
int3
add
pop
xchg
aad
sub
pop
into
stc
je
inc
int3
jmp
jl
int
xlat
or
xchg
iret
std
addb
dec
push
mov
or
lret
mov
sbb
rcrb
in
test
aam
xchg
dec
inc
add
mov
negb
sbb
pop
je
xchg
insl
xor
cmp
test
push
adc
xor
test
push
mov
movsl
and
scas
ss
icebp
mov
cwtl
pop
psubw
xchg
jge
jne
jmp
pop
jg
add
sbb
or
xor
jae
cwtl
xlat
gs
jecxz
out
int
jae
sbb
jg
out
add
pop
mov
sub
scas
and
loop
scas
mov
cmp
push
cltd
stc
mov
psrad
pop
and
shll
adc
bound
mov
test
aas
sub
mov
call
fidivs
jb
push
jnp
push
lcall
sbb
lods
mov
add
fiaddl
fmulp
add
pop
jge
sub
add
add
leave
pop
popa
inc
add
cmc
xchg
daa
in
push
ret
lahf
mov
xchg
into
imul
gs
or
jmp
add
rolb
ret
xchg
push
add
stc
lret
xor
adc
sahf
mov
push
cmpl
add
mov
dec
cmp
sub
sbbl
loope
into
jl
in
rolb
outsl
cltd
std
push
cmp
adc
sbb
mov
cmc
idivb
xchg
inc
out
xor
data16
add
add
nop
es
add
or
xlat
cmp
adc
push
push
and
and
out
stc
inc
add
xchg
fwait
mov
cmpsl
jnp
je
cs
add
push
pop
jnp
pop
jns
jb
sub
shl
nop
sbb
pop
int
cwtl
sub
add
stos
or
sbb
gs
jbe
pop
inc
add
cli
test
test
cmp
inc
or
mov
cmp
call
mov
mov
aaa
dec
rcll
loope
out
mov
ffreep
add
data16
inc
add
lcall
cmpsl
popa
inc
rcrb
sub
pop
popf
push
push
push
add
call
inc
push
mov
sti
sbb
or
add
add
or
jge
cli
push
adc
add
jl
roll
mov
push
sub
sbb
add
sbb
mov
mov
rolb
add
sub
xchg
lock
subl
or
add
and
xchg
bnd
add
push
iret
into
xor
daa
pushf
cmpsb
push
xor
sbb
mov
fisubrs
add
push
jge
inc
aam
sub
and
movsl
aam
add
mov
notl
cmpsl
mov
pop
or
cs
cmp
sti
lret
add
jmp
sti
fcomi
in
int
fmull
and
xchg
mov
mov
shlb
rcll
fsub
jle,pt
adc
sbb
dec
and
jb
lcall
movl
lret
add
mov
xor
mov
cmpsl
pop
inc
add
icebp
and
and
aaa
in
jecxz
dec
dec
mov
jl
in
xchg
dec
adc
leave
aas
lret
lods
xchg
ljmp
cwtl
roll
add
mov
adc
lods
or
xchg
lea
sub
daa
xor
sbbl
mov
sbb
loope
mov
inc
pop
or
add
lcall
pop
mov
hlt
neg
ret
orl
adc
add
cmpsb
mov
jb
add
xchg
imul
cmp
dec
pop
loopne
inc
or
dec
dec
add
mov
and
arpl
movsb
je
pop
push
inc
cmp
adc
rcrb
xlat
mov
cmp
and
and
std
cmpsl
adc
hlt
out
pop
sbb
int
imul
add
jl
pop
add
cltd
xchg
cwtl
into
push
idivl
es
add
mov
bound
push
and
adc
mov
rolb
sti
push
andl
adc
mov
jmp
addb
js
movsb
int
lods
pop
dec
sub
out
loopnew
mov
add
in
jp,pn
rorl
and
cmpsl
mov
cmp
inc
add
addr16
jae
push
stc
mov
mov
imull
movsb
jb
add
mov
add
add
mov
jg
ret
push
jle
mov
cmc
mov
mov
jecxz
popf
push
rorb
jl
leave
inc
addb
ja
xchg
jb
cli
int3
cmpsb
cld
jecxz
inc
cs
bound
xor
mov
add
into
jno
sbb
loope
pop
jae
outsl
push
jl
fucomp
stos
sub
jbe
les
imul
mov
inc
cmp
pushf
in
jb
icebp
fiadds
push
add
insb
sbb
jecxz
test
lods
sub
stos
repz
jo
daa
or
cmp
insb
mov
lock
jae
jnp
loop
add
jo
add
adc
and
push
mov
movsl
push
and
test
xor
or
jnp
out
imul
out
int
add
mov
add
add
mov
add
out
loop
inc
add
cmp
or
add
ficoms
sbb
push
not
or
pusha
add
cmp
and
les
movsl
xor
add
mov
movl
mov
fdivrs
lret
mov
cmp
test
add
popf
in
jb
add
movsl
or
jmp
inc
xor
out
fwait
cmp
jno
jo
xchg
test
jmp
push
loopne
bnd
movsb
pop
imul
or
mov
mov
cwtl
es
adc
inc
add
int3
addb
sti
idivl
cmpsl
jae
popf
fcoms
ss
xchg
addb
shrb
sti
jne
addb
loope
scas
xchg
mov
addr16
cmpxchg
add
xor
cmc
xor
lock
iret
or
push
push
push
sbb
push
push
stos
add
testl
or
addr16
or
cli
imul
mov
push
adc
stos
adc
add
adc
dec
iret
outsb
push
repz
mov
mov
roll
xchg
adc
add
xorl
push
xor
dec
or
or
fisttpll
cmpsb
test
cmp
xor
fwait
mov
dec
jecxz
jmp
jo
xor
and
sahf
mov
add
push
pushf
or
or
bound
stos
mov
sbb
out
shlb
repz
scas
jl
iret
rolb
mov
pop
movb
add
jl
sahf
add
std
js
cmp
jne
and
or
movsb
enter
dec
in
test
jg
pop
mov
fstp
jb
out
loopne
addb
in
push
roll
add
or
into
in
rcll
add
popf
inc
add
imul
adc
and
ljmp
add
out
adc
mov
sbb
push
scas
dec
push
cmp
jmp
mul
inc
adc
mov
movsl
adc
lret
sub
cmp
fmul
pop
or
add
cld
mov
adc
fs
xchg
js
stos
test
jbe
loop
mov
mul
pop
notl
cld
push
scas
addb
mov
enter
call
pusha
add
xlat
fldl
sti
inc
std
addr16
cmc
jl
lret
mov
lds
es
adc
repz
call
jge
and
and
mov
addb
lea
add
mov
cmp
mov
mov
or
jne
aad
lods
sahf
and
sbb
or
add
test
or
cmpsl
popf
fcomp
pop
imul
lea
xor
add
incb
bound
dec
in
out
mov
paddq
push
dec
jmp
je
arpl
lea
ja
sub
int
and
adc
xchg
in
sbb
das
shl
sbb
rcrl
push
cmp
cmpsb
push
adc
fwait
jecxz
push
jle
repnz
fadds
add
repz
sub
lcall
lret
popa
arpl
sbb
out
in
mov
mov
leave
popf
jno
pushf
mov
jle
aas
nop
jp
outsl
jbe
lahf
cmpsb
pop
jno
ljmp
aas
addr16
mov
outsl
loope
jne
adc
push
enter
lahf
ds
mov
push
dec
pop
shrl
pushf
std
jmp
pop
mov
ret
xor
add
pop
imul
sub
mov
xor
sub
insb
arpl
add
arpl
add
xchg
sbb
movb
xor
sub
and
ret
imul
adc
push
or
dec
sahf
add
cmc
cmp
add
dec
clc
rorb
lahf
aad
movb
addb
ja
push
ljmp
sbb
add
mov
addb
pop
cmp
pop
or
jnp
fldenv
addb
add
test
xchg
clc
mov
cmp
sti
int3
out
adc
mov
mov
xchg
mov
pop
adc
fimull
testl
add
test
and
mov
clc
mov
fldenv
arpl
add
movsb
addb
iret
cmp
push
push
jo
mov
jns
addb
xorl
jge
push
add
cmpsl
movzbl
mov
test
mov
shl
dec
xchg
pop
popa
cli
pop
jno
pop
call
and
mov
pop
loope
mov
addb
pop
scas
into
xor
push
xlat
bound
repz
jg
jns
dec
push
test
sub
cmp
out
out
cmpsl
mulb
cld
ss
bound
fwait
mov
and
les
mov
les
xchg
fists
pushf
ljmp
xchg
adc
adc
add
test
cmpsl
sub
popa
xchg
pusha
add
lock
idivb
mov
adc
and
jbe
jb
mov
jb
sbb
cmp
inc
add
in
sbb
out
cmpsb
stos
xor
iret
pusha
add
fcmovbe
add
and
add
add
mov
pop
push
sbb
aas
loope
xchg
dec
push
mov
test
dec
sbbl
repnz
lahf
pop
pop
bound
xor
cmc
sbb
add
mov
xchg
cwtl
roll
nop
xchg
mov
addb
ret
push
shrl
fs
ss
pop
sub
lret
stc
jg
daa
hlt
xor
sbb
dec
popa
push
test
inc
fwait
shrl
cltd
inc
add
movb
orl
adc
ds
call
mov
dec
pop
push
inc
xor
adc
xor
ljmp
xor
pop
nop
push
fcompl
icebp
jle
pop
lods
adc
imul
out
mov
inc
add
mov
fisubs
inc
add
xor
add
inc
add
jae
arpl
stos
cmpsl
add
adc
inc
incb
flds
add
leave
stos
jmp
xor
test
movb
add
dec
add
test
xor
cltd
insl
mov
adc
or
hlt
fdivrs
loope
lret
sahf
xor
pop
jg
add
jnp
lds
inc
add
adc
sbb
mov
negb
pop
jle
ja
js
and
mov
mov
loopne
add
test
testb
imul
out
int
cmp
add
add
out
rcr
fs
sarb
sub
or
pop
fadds
mov
jp
and
push
repz
inc
add
pop
pusha
add
jbe
popf
call
or
adc
out
add
add
dec
popa
sub
inc
ljmp
cmp
pop
push
shll
rolb
inc
out
pop
fstps
insl
push
inc
mov
add
repz
fst
aaa
fbld
add
cmp
jmp
sbb
jns
jno
mov
xchg
xchg
stc
dec
jp
and
pop
xchg
and
adc
dec
das
sub
popa
mov
jnp
imul
pop
mov
int
bound
cmp
xchg
or
cmpsl
or
hlt
cmpsl
out
nop
les
adc
iret
mov
xchg
jnp
fcomi
cmp
and
cwtl
add
clc
mov
sahf
add
repz
pushf
mov
js
repnz
add
xchg
pop
call
push
jns
lock
and
shll
jmp
sti
sahf
xor
dec
xor
sbbl
clc
test
lods
popf
sub
push
inc
jmp
adc
lcall
pop
int3
xlat
or
add
xchg
or
ja
mov
clc
push
mov
add
push
test
xchg
negl
inc
test
or
testl
pusha
add
lock
xor
shrb
dec
popa
cmp
pop
mov
xchg
push
inc
xchg
ret
mov
cltd
pop
int3
aad
sub
mov
hlt
jae
add
in
mov
push
aad
cmp
dec
scas
call
adc
xchg
aaa
xchg
inc
add
int
inc
add
outsb
daa
and
arpl
in
xor
xor
xchg
jo
out
dec
lret
in
sbb
clc
int3
add
xor
pushf
dec
dec
xchg
mov
xchg
fcompl
lret
mov
add
sahf
push
pop
arpl
rclb
inc
push
pushf
dec
or
rolb
mov
cmp
mov
xor
pushf
pop
data16
repnz
fsts
and
cmp
cmovg
xchg
scas
cmp
xchg
fistps
add
push
mov
roll
pop
pusha
add
add
insl
shlb
cmp
add
cmpsb
lcall
repnz
add
pop
push
adc
ja
pop
js
and
in
stos
imul
jmp
mov
imul
out
ss
add
mov
imul
xor
call
or
jl
add
mov
lods
out
add
cmp
mov
int
mov
add
push
out
fsubr
cwtl
jo
pop
lea
add
mov
in
inc
enter
jne
and
lcall
dec
les
repz
rclb
add
sub
rcrl
mov
rorl
inc
add
lock
outsb
in
test
jo
sub
bound
aad
aas
or
pop
in
loope
stos
push
add
rcrl
les
imul
mov
lret
mov
add
mov
rcrb
xor
inc
and
pushf
push
and
ljmp
repnz
repnz
mov
repz
cmpsb
mov
add
shl
jns
andl
fs
mov
pusha
add
sub
sarl
ret
xor
fiadds
inc
jl
repnz
in
xchg
inc
adc
movsl
dec
shr
mov
mov
add
xacquire
push
mov
idiv
out
in
faddl
ljmp
jp
add
push
loop
and
fcomps
jle
and
leave
mov
xor
addb
add
push
add
jns
xchg
fdivrp
dec
dec
shl
xor
push
ds
add
fsubl
or
xchg
popf
out
sbb
bound
ficoms
test
pop
jne
mov
mov
xchg
and
pop
pop
xchg
inc
inc
add
add
out
movb
and
push
movsb
jns
add
dec
adc
sti
fstpl
lret
jge
mov
movsl
lcall
fisttpl
push
xchg
imul
lret
sub
add
popf
mov
cmp
movsl
sbb
fistl
jp
jge
add
push
loope
addb
jp
pop
push
add
dec
add
pop
or
daa
data16
aam
and
stc
and
mov
mov
adc
push
shlb
data16
pop
cli
movsl
in
aad
loopne
adc
mov
fdivl
pop
movsb
add
add
movsl
insl
pop
add
or
cltd
mov
add
leave
xchg
push
shll
mov
cmc
in
es
inc
inc
add
add
enter
fimull
push
insl
pop
mov
repnz
adc
mov
stos
push
jl
push
rolb
scas
fisttpll
push
inc
add
ret
push
insb
cmp
add
sti
sti
stc
xchg
aad
sbb
mov
sub
push
stc
cmp
imul
addr16
dec
mov
icebp
adc
adc
push
imul
std
push
mov
daa
push
imul
add
mov
lea
movb
sub
and
mov
ja
imul
push
cmp
int3
push
jmp
pop
pusha
add
or
into
or
xor
lret
sub
rol
stos
and
inc
add
jp
sbb
inc
cmpsb
cltd
shr
fwait
xlat
stos
popf
xchg
inc
leave
sub
and
and
loopne
cmp
mov
shrl
outsl
shrb
ljmp
push
out
cmpsl
sub
repnz
or
jb
sahf
xor
popa
jmp
pushf
cmp
and
and
inc
add
add
ljmp
addl
fdivr
aaa
stos
ret
loope
add
add
in
cltd
or
clc
repnz
cmp
or
dec
leave
fwait
or
dec
insb
cmp
in
ja
sub
inc
add
add
rolb
test
mov
add
mov
adc
ficoml
mov
aad
insl
sti
das
push
jo
cmc
mov
xor
pushf
pop
insl
push
pop
inc
add
dec
mov
cmpsl
mov
shrb
and
xchg
rorb
cwtl
out
arpl
add
push
scas
sbb
jo
xchg
das
js
imul
frstor
jmp
add
out
xchg
inc
cld
sub
xchg
sbb
add
sahf
add
mov
inc
add
int3
jmp
add
lds
dec
mov
jmp
xchg
jb
jmp
mov
loope
mov
add
addb
push
fcomps
sub
loope
fldenv
fsubs
mov
push
lret
lret
lods
inc
add
inc
mov
sahf
aas
xchg
hlt
in
cmp
negb
insl
js
aam
cmc
xchg
jp
movsl
cmp
push
je
jno
sub
mov
jg
fstl
repnz
ljmp
pop
decb
push
pop
frstor
xor
aam
sbb
jne
std
jo
roll
sti
xor
fists
add
xchg
pop
lods
sar
in
and
fisttpll
xchg
test
incb
nop
movsb
outsl
insl
inc
add
loopne
push
mov
test
mov
add
cwtl
addb
mov
ds
pushf
out
and
jne
mov
std
fsts
scas
xchg
test
inc
mov
iret
ja
leave
dec
inc
add
inc
mov
imul
adc
cmp
inc
add
add
lock
fists
hlt
lret
int
jle
and
cmp
push
add
add
inc
mov
and
cmp
dec
add
scas
rcl
and
sbb
add
inc
stos
or
or
lahf
mov
insb
jge
xor
data16
shrb
loop
loop,pt
popl
inc
push
dec
bound
dec
xchg
jb
imul
je
subl
xchg
bound
adc
inc
test
mov
aam
dec
mov
sbb
outsb
pop
and
cmp
test
pop
pop
add
xor
outsl
cmp
sub
lea
dec
ret
mov
cmp
or
xchg
push
pop
xor
xor
cltd
and
cmpsb
rcrb
enter
cmc
cmpsl
jecxz
mov
push
pop
and
or
aad
faddl
pop
ss
or
sub
pop
xor
and
add
cmpsb
enter
push
push
imul
fidivl
loopne
xor
out
ds
mov
lea
mov
xor
xor
inc
add
cli
pop
div
inc
jl
xchg
roll
add
mov
inc
add
push
pop
push
loopne
lods
inc
and
fisubs
ja
lcall
movsl
movsb
loop
cli
outsb
sbb
mov
add
xchg
and
scas
sbb
cli
or
inc
loop
pop
jl
iret
mov
mov
cs
pop
jecxz
push
jo
cmp
aad
push
xor
pop
in
xchg
jmp
dec
divb
dec
push
out
sub
pop
inc
into
cmp
and
pop
mov
adc
xchg
mov
mov
iret
popf
rolb
mov
xlat
fcoml
test
fiadds
fwait
add
ret
cmp
loope,pn
fistl
lods
js
xchg
and
popf
xlat
xor
add
lret
mov
and
mov
jmp
jno
add
sbb
rcl
xor
add
fists
nop
jecxz
das
movsb
stos
outsb
lret
aas
test
cmc
cltd
js
adc
fcmove
sti
movsl
into
xchg
sbb
add
push
jg
in
push
push
cli
imul
add
in
mov
dec
daa
repnz
add
mov
xor
jle
movsl
mov
pop
or
push
and
outsl
scas
push
inc
add
addr16
push
es
leave
mov
inc
addb
out
add
mov
inc
add
add
pop
pop
mov
mov
add
inc
add
into
iret
fisubrl
xchg
jg
xchg
subl
loope
add
push
push
add
mov
adc
sub
sub
dec
cs
push
mov
mov
jl
sub
push
in
jns
inc
leave
jp
fs
pop
arpl
rolb
push
mov
jge
sbb
or
jo
mov
mov
inc
add
hlt
out
loope
lret
sti
cmp
stos
and
shll
loope
rcrl
jno
outsb
enter
jno
nop
cmp
stos
data16
loopne
movlhps
jbe
inc
push
xchg
adc
repnz
push
adc
xor
aas
xor
xlat
xchg
lcall
in
imul
sti
sti
ljmp
insb
enter
sub
das
pop
push
jecxz
xchg
shrl
push
add
sbb
jo
sub
aam
call
jne
je
stos
hlt
std
xorl
and
lock
mov
xchg
shl
repnz
sti
ss
lahf
mov
add
inc
rcrb
cli
jl
popf
arpl
dec
rolb
gs
cmpsb
data16
xchg
or
sub
out
push
push
add
pusha
add
testl
int3
xchg
pusha
add
ret
xlat
call
data16
inc
je
sub
stc
aas
fnstcw
inc
add
sub
call
sbb
xchg
cltd
mov
in
popf
ss
push
jmp
adcl
test
loopne
add
jg
in
mov
addb
mov
inc
inc
add
pop
xor
hlt
mov
sbb
dec
xchg
xchg
jb
jae
out
fcmovb
add
bound
addr16
mov
pop
xchg
shll
leave
ja
repz
add
lcall
cmpsl
jns
fsubp
dec
stos
sub
and
inc
pop
pop
insl
mov
lret
sub
test
cmpsb
or
pop
lahf
cmp
xchg
and
fistl
xchg
repz
popa
push
mov
xchg
push
mov
test
push
add
scas
ja
add
loop
ss
pop
mov
nop
xchg
ret
lret
cmp
add
int3
dec
out
test
fs
lock
sub
vpunpcklqdq
sbb
outsl
mov
or
xchg
mov
push
inc
rcr
or
movsl
enter
xor
sub
mov
pop
pop
xor
movb
add
push
jnp
mov
mov
fidivrl
arpl
leave
leave
sub
push
pop
jae
sub
pop
inc
xchg
push
add
push
scas
sub
mov
add
loop
inc
add
jg
stc
adc
push
jmp
daa
sbb
add
jecxz
dec
add
or
setl
inc
sbb
rol
add
insb
xchg
sbb
mov
sub
test
test
add
rolb
mov
aam
add
stos
fdiv
mov
mov
jnp
cld
add
add
movb
mov
inc
mov
out
mov
xchg
xchg
inc
add
add
xor
add
mov
fstl
iret
cwtl
sbb
xor
push
mov
jmp
jp
sub
add
es
popf
test
pop
xchg
mov
mov
add
outsl
sbb
pop
mov
je
mov
pop
xor
sbb
mov
aas
filds
pop
mov
sub
mov
sub
mov
xchg
jp
jg
test
and
pop
out
add
add
lods
popf
hlt
mov
icebp
mov
loope
mov
imul
push
cs
out
inc
add
addb
add
imul
cmp
repnz
xchg
les
sub
push
and
push
inc
std
xchg
out
push
or
int
inc
int3
js
lods
popf
xorl
scas
jge
sbb
pushf
lret
mov
xor
ret
add
rcll
rcll
shlb
and
shrl
xor
addr16
dec
idiv
jne
xor
xchg
pop
jb
call
push
push
xchg
jge
mov
pop
fwait
lcall
push
dec
xor
mov
inc
add
pop
movsb
pusha
add
push
mov
mov
mov
cmp
pop
adc
lods
or
or
pop
jnp
cs
cld
sarl
mov
mov
and
loopne
xchg
out
cltd
sub
testl
out
daa
xchg
adc
xor
lods
addb
ds
and
mov
sbb
lds
mov
sub
add
and
fnstcw
cmpsb
aas
dec
mov
push
push
dec
jl
pop
addb
sub
mov
push
cmp
add
hlt
inc
pop
decl
push
shlb
mov
inc
add
inc
add
adc
mov
add
in
lahf
pop
or
xchg
pop
mov
cmp
or
and
xchg
lcall
mov
dec
xlat
jecxz
imull
or
mov
inc
mov
sbb
dec
dec
inc
adc
push
outsb
cwtl
mov
lahf
movsl
xor
mov
movsl
cmc
clc
mov
cs
insb
cmp
mov
inc
xchg
dec
adc
or
loope
pushf
popa
cmp
mov
dec
pusha
add
lret
sbb
popa
or
xchg
and
lock
aas
jmp
cmc
inc
add
insb
dec
insb
jle
mov
inc
fimull
mov
dec
mul
lret
and
pop
nop
jmp
dec
dec
adc
in
inc
mov
add
loope
or
ds
out
mov
popa
xchg
adc
insl
cmp
add
stos
mov
dec
lods
push
cli
push
xchg
sbb
fdivrs
in
dec
fsubrs
pop
loope
imul
je
and
cmpsb
clc
push
dec
jae
pop
fcompl
scas
dec
push
clc
lahf
dec
data16
out
jg
push
enter
add
add
inc
pop
pushl
ret
xor
test
mov
cmp
push
in
sbb
outsl
mov
test
cmp
js
pop
imulb
movsl
addb
out
fdivrs
cmp
loope
fmul
xor
mov
jns
add
repz
lret
loope
test
enter
sbb
int3
test
mov
add
testb
fmulp
imul
and
inc
add
lret
jle
stc
lock
out
xchg
pop
push
aad
inc
add
mov
shlb
xchg
jo
mov
pop
xchg
addb
or
adc
test
outsb
xor
into
call
out
js
pop
or
scas
mov
lods
push
jmp
xor
jb
xlat
lds
push
iret
xchg
dec
js
push
insl
loop
and
les
mov
push
add
cmp
cmp
mov
push
stos
jmp
push
loopne
push
mov
pop
pop
movsb
mov
and
out
leave
stos
fldcw
jo
lds
fnstsw
cwtl
and
out
popw
cmp
mov
add
popa
and
hlt
cld
xchg
and
mov
in
insl
xchg
icebp
jge
cld
adc
xchg
popf
xchg
cwtl
es
pop
jnp
imul
jmp
scas
mov
aas
loopne
sti
mov
bound
out
and
test
cmpsl
scas
push
pusha
add
mov
out
mov
loope
les
mov
pop
aam
add
xor
or
mov
std
jmp
inc
push
push
pop
inc
add
inc
add
add
hlt
xlat
stc
std
arpl
dec
popa
ja
jo
inc
push
xchg
jp
cwtl
sbb
xor
in
int
addb
dec
jnp
adc
dec
dec
movsl
pop
outsb
aas
xchg
mov
int3
nop
mov
jle
push
add
scas
push
pop
outsl
cmp
es
jns
sub
arpl
jae
js
gs
sub
sub
cld
push
cmpsl
mov
cltd
mov
jmp
pop
std
lcall
outsl
jmp
pusha
add
add
mov
pop
sbb
jae
xor
or
call
cltd
push
stos
nop
xor
add
pop
dec
lret
in
sub
es
mov
mov
add
add
inc
add
scas
mov
sbb
push
push
push
andl
fidivs
dec
jb
out
jbe
mov
pushf
les
arpl
nop
cmp
xor
add
add
or
xor
pushf
getsec
mov
movsb
add
pop
jne
jl
and
xchg
xor
xor
push
out
mov
or
fists
pop
ja
cmc
arpl
jnp
in
fmuls
fwait
mov
add
cmp
inc
add
shll
cmp
push
add
add
mov
or
push
shlb
mov
pop
fwait
or
sbb
out
add
push
sbb
add
mov
cmp
rolb
mov
fucomi
xor
add
aam
mov
dec
das
fwait
icebp
sahf
roll
lds
sub
lea
add
std
sti
or
mov
daa
mov
testb
inc
sti
out
mov
mov
push
sti
mov
push
xchg
push
or
xlat
cwtl
push
test
fcoms
jnp
add
jl
add
popa
sub
fidivs
int3
aam
xchg
addb
fs
mov
out
outsb
xor
in
add
lahf
imul
add
lock
add
repz
stos
faddp
rcrl
lds
scas
clc
shll
xchg
add
idivb
mov
mov
pusha
add
jno
outsl
gs
rcr
insb
xor
cs
add
test
pop
arpl
jb
xchg
xchg
inc
add
es
add
rclb
xor
jecxz
fbstp
xlat
out
les
sub
mov
jbe
in
push
xchg
add
mov
incb
add
aad
sub
int3
nop
add
addb
mov
lahf
sub
jne
and
lea
adc
int3
mov
sub
xchg
jecxz
xor
add
fstl
sarb
adc
lcall
outsl
jmp
mov
std
roll
add
lods
test
aas
fisubrs
aas
iret
dec
sbb
aam
push
xlat
mov
rolb
out
inc
add
std
xchg
xchg
push
sub
dec
mov
mov
lea
and
cmp
jmp
aam
and
stc
mov
and
mov
or
add
push
mov
xchg
jno
pop
xchg
pop
xchg
jno
lar
mov
sti
pop
lods
cwtl
pop
in
dec
inc
jns
adc
ljmp
jmp
add
in
and
dec
mov
std
cmp
pop
iret
sbb
mov
out
fs
mov
jo
rcl
int
inc
add
cmp
out
scas
fldcw
xchg
xchg
or
bound
mov
scas
inc
add
jmp
pushf
mov
dec
cmp
add
bound
xchg
ljmp
int
mov
lcall
add
add
lea
int
cmpsl
stos
mov
test
lea
pusha
add
inc
add
sbb
mov
sub
or
mov
ret
sub
or
cmpl
hlt
fcomps
jnp
addb
add
inc
add
mov
cld
scas
push
add
test
lds
bound
pushw
xchg
or
pop
mov
cmp
add
leave
insb
sahf
in
iret
leave
lcall
bound
xchg
push
pop
or
xchg
dec
pop
mov
stos
and
clc
call
push
jmp
inc
add
ss
cmpsb
xchg
andl
cmp
dec
scas
loope
mov
adc
jo
stos
dec
xor
ret
repnz
cmp
popf
mov
test
stos
mov
jmp
add
repz
sub
xor
cmpsl
add
sub
push
pop
notl
mov
std
nop
push
ret
movsb
and
ss
sub
cmp
out
gs
sbb
sarb
adc
pusha
add
sub
test
add
in
sub
dec
jno
inc
add
inc
add
inc
add
add
scas
fnstsw
jle
mov
arpl
sti
scas
add
inc
jg
aam
and
pmulhw
mov
xchg
ja,pn
loope
mov
sarl
sub
add
lods
xchg
scas
jb
in
adc
ss
sbb
ret
jg
adc
mov
push
cmp
test
jle
inc
add
push
lahf
aam
addb
and
sub
xchg
pusha
add
jns
inc
add
in
inc
add
jecxz
enter
cmp
cli
sub
adc
jns
flds
mov
xor
loopne
pop
lea
dec
sbb
push
and
sahf
fidivrl
fwait
clc
or
rcr
out
lcall
test
lret
add
sbb
andl
ja
pop
pushf
loop
mov
cmp
and
xchg
out
mov
pusha
add
ds
xor
addb
mov
call
add
adc
push
lcall
jae
cs
rcr
cmp
or
add
cltd
adc
iret
popf
or
lea
out
mov
leave
mov
clc
pop
pushw
call
add
mov
fwait
js
mov
add
add
lret
movsb
jmp
lock
data16
dec
sbb
hlt
lods
adc
pop
xchg
inc
lret
push
leave
mov
inc
add
aam
std
xchg
call
xchg
add
jle
addb
mov
push
dec
fbld
sti
xchg
add
lret
add
fwait
dec
out
fldcw
pop
lea
or
lret
ret
stos
mov
mov
mov
frstor
add
call
cs
sbb
jae
scas
jecxz
inc
add
or
jo
fcompl
addb
out
xor
or
dec
jb
jl
and
bound
or
inc
jae
add
testl
add
in
out
and
fildl
pusha
add
mov
lahf
into
imul
dec
jge
sbb
jmp
add
std
pop
mov
es
ret
jg
add
xchg
loop
sar
out
push
fstpt
add
sub
in
sub
sbb
pop
jge
out
lea
addr16
sub
mov
or
dec
pop
xor
cwtl
mov
outsb
and
rolb
pop
dec
jp
ret
add
or
dec
das
lahf
es
imul
cwtl
fbld
jae
cmp
mov
sbb
cld
inc
add
stc
inc
add
clc
sub
mov
mov
in
leave
mov
rcrb
inc
outsb
adc
jb
mov
mov
loop
divb
pop
inc
add
cmp
xchg
dec
lods
hlt
jmp
or
sub
add
adc
and
loopne
jbe
mov
call
sub
insl
addb
add
pop
aaa
sbb
xor
mov
xor
pop
push
cmpsl
popa
roll
mov
ror
lods
jp
cmp
test
fwait
pusha
add
inc
add
pop
test
fsubl
loop
std
sub
loopne
call
icebp
mov
add
pop
mov
aam
jp
dec
cld
mov
je
dec
xchg
iret
outsl
fs
mov
cmp
idiv
xor
addb
or
xor
pusha
add
stc
imul
sub
enter
pop
jne
pop
mov
jp
addb
sub
pop
movb
mov
lock
dec
jns
lods
and
std
and
mov
mov
xchg
movb
add
cmc
imul
outsb
and
dec
mov
adc
or
mov
loope
test
outsl
movsb
popl
out
push
jae
add
lcall
xchg
xchg
clc
or
or
stc
or
dec
shrb
sti
int
bound
adc
mov
call
out
ret
stos
roll
adc
aam
jp
js
add
call
lret
addb
shr
pop
es
jge
add
and
sbb
adc
cltd
pop
lods
jmp
ficompl
gs
into
gs
or
add
mov
xchg
rcll
mov
mov
mov
sahf
in
and
pushf
push
hlt
push
fldenv
add
mov
push
push
cli
bound
inc
sub
add
in
test
or
jmp
insl
inc
sbb
xchg
push
rolb
lock
pop
push
lcall
or
shl
mov
jo
pushf
addb
sbb
cmp
push
ds
and
push
in
jl
mov
ret
add
lods
sub
or
jle
xchg
loope
in
pop
mov
lods
dec
jmp
mov
push
sub
push
fcomps
or
jmp
xor
aas
cmp
xor
jge
call
push
xlat
std
movsb
push
cwtl
sbb
adc
mov
test
in
inc
cmpsl
bound
push
jns
movsl
in
test
lea
xlat
lods
add
cmp
cmpsb
mov
les
arpl
dec
mov
scas
insb
sbbl
gs
inc
cmp
push
adc
jmp
sbb
pop
pop
loop
add
push
sub
pop
fistpl
dec
rcll
data16
out
xor
cmc
xchg
pop
xor
inc
in
out
lret
or
cmp
jne
xor
mov
addb
outsb
mov
das
and
loope
add
jl
stos
jo
pop
mull
int3
aas
xchg
adc
xor
xchg
std
mov
jnp
movsb
cmpsb
out
addl
lret
test
in
jns
ret
mov
cli
dec
sbb
xor
addb
inc
add
fistl
in
ss
fcmovnbe
insl
pop
mov
mov
xlat
and
dec
cmp
fcmovbe
lcall
jne
imul
dec
cmp
out
data16
and
inc
or
movsl
pusha
add
pop
mov
data16
pusha
add
jle
mov
mov
es
int
stos
mov
sub
dec
pop
shll
push
pop
push
sub
mov
add
addb
stc
rcll
cmpl
addb
and
out
in
adc
sub
dec
lret
fcompl
lds
in
rolb
add
pusha
add
sub
sti
sbb
push
ds
dec
sbb
insb
ret
cld
aas
dec
aad
push
mov
mov
and
xor
push
xchg
cmc
scas
js
add
add
fwait
arpl
icebp
clc
adc
sub
mov
push
add
jmp
neg
or
gs
jmp
push
fsubs
or
add
jbe
mov
adc
push
add
call
pop
nop
popa
stos
jp
push
inc
add
in
add
add
out
pop
or
adc
add
or
push
add
shll
inc
push
repz
or
mov
gs
dec
out
inc
dec
xlat
xor
ficoms
lds
insb
in
lock
cltd
xchg
movsb
frstor
add
jmp
push
fdivrl
sarl
mull
lock
and
pusha
add
out
rol
cwtl
pushf
repnz
add
mov
clc
in
jns
popa
jne
les
mov
sbb
mov
jle
dec
test
sbb
leave
cmpsl
lcall
lods
out
xchg
int
adc
xchg
push
push
ja
aad
jge
mov
hlt
jge
mov
push
inc
add
rcll
test
add
jnp
mov
arpl
add
add
push
xor
cs
sbb
xchg
and
sbb
ficoms
or
repnz
les
and
rol
addr16
fstpl
addr16
xchg
ss
sbb
inc
add
sbb
push
aam
shll
sarl
js
mov
stos
insb
fs
xchg
push
pushl
and
cld
data16
and
pop
inc
add
cld
push
sbb
add
ja
dec
ret
mov
sbb
adc
cwtl
gs
sub
in
repnz
ret
sub
push
mov
inc
add
test
in
insb
inc
inc
test
dec
les
movb
int3
or
add
mov
fisubrl
and
jne
in
pop
cmc
mov
pop
mov
jmp
jecxz
add
xchg
out
nop
stc
inc
cmp
je
fildll
nop
bound
arpl
imul
scas
imul
add
ss
mov
imul
add
add
es
lcall
inc
add
xchg
inc
inc
add
add
jne
repz
add
ja
shll
movb
cmc
mov
push
mov
stos
dec
scas
aaa
push
mov
int
daa
add
out
add
inc
add
cmpsb
or
rol
add
and
cmp
ja
add
xor
imul
enter
mov
fistpl
fs
dec
cmp
xchg
repnz
das
xchg
into
cwtl
stc
cmova
jmp
mov
push
mov
in
inc
mov
or
inc
dec
jge
or
inc
pusha
add
rorb
add
aad
hlt
xchg
ja
fwait
lods
lods
nop
mov
cltd
dec
ret
jbe
psubd
jno
jl
cmp
stos
mov
add
mov
jmp
repnz
push
jp
in
test
xchg
add
into
daa
fildll
ds
mov
xchg
outsb
push
jge
push
dec
dec
pop
mov
pop
stc
push
mov
jl
sbb
arpl
mov
add
add
sub
mov
cmc
notb
push
mov
adc
in
negb
jg
mov
sub
sbb
and
icebp
sub
xor
cmp
mov
pop
jns
aas
pop
imul
add
cmp
cli
pop
cmp
sub
addb
dec
pop
movb
cli
sbb
sbb
xchg
cmpsl
xchg
cmp
ficoml
adc
sub
in
test
sti
mov
dec
shll
test
add
jo
je
mov
stos
repz
lcall
pop
jno
xor
ret
add
sbb
popf
xchg
push
or
inc
add
loopne
mov
sbb
les
arpl
add
fbld
into
mov
add
xor
jl
addr16
cmp
aad
hlt
cmp
js
inc
push
hlt
lock
pop
mov
inc
pop
retw
push
mov
inc
add
sti
stos
movsl
or
pop
mov
les
or
add
divb
xor
mov
aam
mov
loope
bnd
dec
pop
jae
xchg
push
popa
int3
pop
pop
mov
adc
add
add
gs
or
lret
arpl
mov
jne
dec
loop
ret
fdivl
mov
adc
mov
xchg
fwait
jge
pop
fbstp
mov
sbb
jbe
scas
jnp
add
in
ljmp
or
or
add
fcoml
pop
pop
roll
ja
push
movsb
push
push
lock
inc
xchg
or
aaa
xchg
xchg
hlt
pusha
add
add
stc
lahf
test
fs
mov
iret
mov
add
sub
inc
movsl
pop
sbb
popa
jo
aas
shlb
dec
iret
aaa
repnz
lds
pop
push
mov
andl
xchg
movsl
mov
sbb
push
adc
sub
sub
popf
in
pop
push
outsb
add
push
push
jne
adc
daa
stos
ds
insl
inc
add
mov
rcll
jbe
pop
xor
mov
movsb
push
addb
in
andl
into
add
dec
mov
add
enter
not
sarb
xorl
ds
in
inc
add
and
sub
mov
mov
or
pop
dec
arpl
xchg
movsl
cmc
xchg
or
mov
fs
add
adc
push
lea
push
pop
arpl
mov
shl
mov
add
mov
push
pop
sub
loopne
setge
add
or
add
into
std
adc
aaa
cmpsb
addb
push
dec
jno
xchg
pop
dec
jecxz
dec
add
push
es
add
rorl
roll
jo
fstpt
aaa
hlt
push
les
mov
es
test
jno
movsl
xor
add
add
ja
add
gs
jp
fnstcw
roll
sahf
mov
pushf
mov
cmp
add
xlat
jbe
add
pop
enter
idivb
ret
xor
push
inc
add
xchg
or
xor
in
test
dec
addr16
loope
add
pop
into
mov
sub
add
out
cmc
loope
mov
mov
and
dec
addb
xchg
lods
or
mov
add
ficompl
dec
xor
das
das
push
in
insl
das
cmpsb
movsl
sbb
xchg
jecxz
add
or
or
rolb
shll
jno
mov
xor
or
jno
aad
fsubrl
mov
addb
js
add
mov
cmpsl
out
mov
adc
sub
popf
dec
sbb
mov
xor
shr
rol
add
js
lret
inc
arpl
lds
rorl
add
ja
cmc
enter
dec
sbb
and
hlt
push
and
loop
jbe
test
jne
mov
scas
enter
cmpsl
inc
mov
adc
add
add
add
add
jmp
sbb
movb
sub
adc
xchg
lcall
pusha
add
sub
lock
lret
or
rorl
and
mov
jbe
add
or
fdivl
add
repnz
add
aaa
add
fisubl
fmuls
push
xchg
nop
and
push
sarl
mov
mov
aad
sbb
jg
lods
or
and
xor
stos
lret
sub
jno
jmp
cmc
fldcw
cmp
jo
add
sub
gs
repz
in
inc
add
inc
add
aaa
movsl
xchg
inc
add
jg
mov
jecxz
or
rcll
mov
icebp
sub
jae
sbb
add
fistpll
les
into
jp
adc
lahf
jae
cmp
xchg
stos
mov
inc
stos
xchg
cltd
clc
mov
idivb
sti
adc
out
scas
test
xor
insl
call
mov
cltd
jmp
lods
sbb
push
lcall
add
push
orl
push
popf
add
shrl
daa
popf
repnz
jle
pop
ret
mov
mov
xchg
xor
add
jecxz
in
iret
das
mov
out
and
loop
addl
add
push
xor
les
mov
lock
add
xchg
push
jmp
aad
icebp
or
call
cmp
enter
add
je
xlat
test
movsl
test
sub
lahf
scas
outsl
cmp
xor
repz
cli
repnz
add
mov
test
add
xchg
imul
inc
or
mov
xchg
jecxz
mov
push
nop
fists
shlb
push
or
movsb
inc
add
mov
or
mov
cld
mov
xchg
mov
aad
push
frstor
add
jb
leave
sub
pop
jno
add
mov
add
shlb
push
adc
jle
jns
inc
add
dec
sti
sbb
aad
sbb
lods
mov
cmp
jmp
rcl
mov
or
rcrb
pop
lcall
out
pop
fwait
or
add
out
out
pop
xchg
sbb
mov
add
sbb
xchg
jae
push
outsl
jo
adc
add
addb
add
mov
inc
add
jl
inc
repnz
jae
xchg
andnps
push
ret
arpl
push
jnp
sub
cld
sub
daa
pushf
insb
push
add
outsb
mov
dec
stc
push
je
out
js
mov
nop
push
push
jg
scas
pusha
add
xchg
add
imul
mov
dec
sbb
imul
fisubl
add
cmp
cmc
jb
and
sub
in
sbb
inc
push
xor
rol
dec
dec
dec
je
or
setl
lcall
andl
es
lret
inc
mov
arpl
shll
xchg
pushf
cld
and
aaa
scas
mov
add
fbld
add
cli
pop
mov
cltd
pop
loopne
ds
jle
adc
xorl
pop
fstl
xchg
dec
push
mov
testl
push
imul
stos
xlat
fldcw
push
and
aas
out
out
pop
out
inc
stos
jmp
mov
loopne
xchg
inc
add
jge
or
test
add
cmp
xor
adc
dec
or
jae
fcompl
lods
ret
fst
addr16
cld
leave
mov
lret
push
loope
jl
sbb
sub
xchg
or
ds
js
mov
jecxz
aas
push
lods
push
icebp
mov
imul
and
stos
inc
xchg
or
jmp
repz
out
cli
sub
mov
test
mov
and
xchg
aad
push
dec
cmp
xchg
mov
or
push
cwtl
movsb
push
sbb
mov
scas
cs
xor
jb
and
or
out
and
xor
test
add
mov
mov
lea
add
addb
sub
and
sub
adc
rolb
or
mov
imul
test
and
or
sub
xor
add
in
mov
mov
mov
cmc
pop
stc
out
rolb
jp
insb
cmpsb
dec
lock
faddl
xchg
push
cmpsl
data16
nop
xchg
dec
addb
ret
jnp
add
add
out
frstor
out
lock
mov
shlb
cmpsb
xchg
lods
das
xlat
inc
arpl
cld
outsb
mov
pop
and
adc
and
or
add
mov
repz
nop
add
fcmovnbe
or
popf
jo
rcrl
ret
sbbl
cli
cmpsb
adc
mov
push
into
mov
loop
fsub
addr16
sahf
loopne
jp
shl
dec
inc
dec
jmp
jecxz
or
aam
call
call
add
sub
add
insb
stos
jnp
cmpsl
xchg
test
add
addr16
leave
dec
sbb
jmp
jmp
mov
and
add
inc
lea
mov
xchg
and
mov
popa
test
dec
pusha
add
pop
addb
and
test
ljmp
test
add
popa
jg
outsb
lock
cmpsl
pushf
sbb
fstps
sbb
test
xor
cmp
add
xchg
imul
out
stc
push
inc
add
ret
add
push
xor
mov
arpl
push
pusha
add
push
sub
xchg
adc
jmp
je
outsb
cmpsl
icebp
addb
mov
rolb
cmp
pop
inc
or
rclb
test
jp
add
arpl
ds
test
pushf
clc
jp
test
mov
les
out
add
or
xchg
rcrl
dec
push
stc
fdivrs
les
lods
mov
xor
mov
push
leave
xor
adc
xor
int
outsb
push
daa
mov
xor
jne
add
pop
jmp
add
out
rcll
sbb
cmpsl
pushf
addr16
shrl
inc
or
pusha
add
push
fisubrl
inc
das
inc
add
jle
sub
push
mov
mov
mov
xlat
rcrb
push
add
push
shr
sbb
loopne
cwtd
jo
loopne
int3
mov
int3
sbb
gs
jae
mov
inc
add
hlt
stos
movb
add
or
sbb
add
sub
lret
or
lahf
push
cmp
add
outsb
aaa
lods
jo
jl
mov
mulb
xchg
add
test
sarb
dec
inc
das
inc
add
sti
movsl
cmp
loopne
ja
jno
push
popa
out
stos
mov
and
leave
out
cmp
cmp
ja
xlat
mov
cmp
cmp
mov
inc
repnz
push
loop
push
pop
xchg
popa
push
je
sarl
sbb
xchg
repnz
add
rcrl
out
and
sub
dec
negl
cmp
imul
add
lods
fiadds
mov
sbb
int
dec
cmp
dec
or
arpl
add
popl
push
imul
jbe
sbb
das
jae
add
pushf
jb
in
xchg
mov
lock
inc
sub
loope
popa
repz
mov
inc
dec
mov
icebp
movsl
mov
cmp
inc
mov
add
push
push
or
sbb
call
xchg
or
xchg
in
jne
mov
outsl
mov
xchg
mov
mov
add
inc
add
or
or
sbb
push
adc
out
jo
cmpl
int
xchg
out
lods
ret
insl
dec
out
out
test
addl
lock
add
shll
out
fists
aaa
cmpsb
dec
int3
inc
add
push
add
dec
inc
add
ret
mov
es
push
mov
ljmp
push
add
push
inc
loope
clc
push
out
adc
sub
loopne
addr16
mov
repnz
sub
repz
cmc
xor
mov
or
rcrb
add
push
iret
dec
scas
repnz
test
out
jbe
add
fstpl
jge
das
add
pushf
and
jmp
fwait
mov
push
xchg
call
mov
addb
int3
movb
sub
loop
xchg
sbb
pop
sub
adc
cmp
xchg
or
sub
add
xor
dec
mov
sbb
add
xor
sub
rep
rcrl
xor
mov
fidivl
or
mov
ss
pop
mov
int3
mov
inc
pop
incl
in
sbb
xchg
jbe
filds
add
xchg
roll
and
imul
orl
dec
mov
mov
mov
ret
divb
xchg
mov
add
popf
dec
test
scas
ljmp
mov
add
mov
test
push
mov
stos
test
or
pmaddwd
repz
push
sbb
insl
jg
add
lds
mov
sahf
push
mov
enter
and
addb
popw
sahf
rolb
cmp
add
lods
jle
mov
lds
fadds
ds
out
add
in
js
add
add
mov
mov
jno
adc
jbe
xchg
ds
sahf
gs
fsubp
das
jecxz
lds
add
inc
add
add
cmp
jmp
dec
cwtl
addb
mov
imul
ljmp
jnp
cmp
inc
out
cmp
ja
add
mov
fldenv
pop
stos
fnstsw
dec
sub
dec
lret
mov
push
mov
in
cmp
jbe
dec
inc
add
hlt
xchg
xor
stc
push
aaa
dec
iret
cs
loope
add
xor
push
cmpsl
shll
xchg
push
add
push
push
cs
jmp
or
imulb
jg
xor
insb
lcall
jbe
add
push
and
leave
sub
in
jnp
sahf
mov
jae
pop
adc
mov
or
xchg
dec
dec
sbb
mov
sub
jp
sbb
shll
fwait
jnp
loop
push
jp
add
push
cltd
xchg
fs
cmc
das
sbb
je
fbld
dec
fwait
stc
icebp
push
lcall
dec
dec
cmp
jg
lcall
adc
add
add
add
insl
fwait
jg
bound
mov
in
push
sbb
jecxz
lret
push
inc
add
sar
mov
inc
add
jg
popf
pop
xor
push
lahf
xor
insb
cmp
and
sbb
or
adc
add
ja
addr16
add
ja
dec
dec
jne
lods
or
sub
add
imul
fcmovnb
add
lods
or
add
pop
push
inc
add
nop
insb
sub
mov
je
xchg
xor
sub
push
stc
pop
addl
outsl
sbb
movsb
jmp
fcoms
cmp
scas
fstpt
add
adc
cmc
inc
mov
dec
xlat
bound
leave
pop
sub
add
inc
add
test
dec
ja
push
mov
fwait
add
ja
adc
push
add
xchg
sub
inc
xor
add
fstpl
mov
dec
xchg
sbb
dec
ret
mov
add
adc
dec
mov
popf
sub
add
push
sbb
add
lods
ret
lea
add
add
cmpl
nop
cmp
jmp
add
jb
dec
mov
aaa
rolb
das
nop
push
or
mov
test
pushf
out
js
xchg
inc
add
fdivs
idivl
jo
lret
rclb
test
adc
or
cld
out
inc
into
call
push
push
testb
inc
js
je
movl
in
xchg
rolb
les
lcall
ss
xchg
dec
test
cld
aas
faddl
add
xchg
jg
out
adc
hlt
xchg
push
in
mov
add
xor
jmp
decl
rcrl
vunpcklpd
xchg
pop
fcmovne
inc
jp
adc
je
std
adc
add
mov
pop
mov
mov
and
aam
aad
jl
and
fs
das
call
hlt
movb
push
add
mov
add
imul
add
pop
test
rolb
cmp
mov
xor
fidivs
push
jmp
mov
test
outsl
xchg
mov
xchg
rcll
cmp
push
mov
dec
push
int
push
dec
lcall
xor
rclb
cmp
mov
fyl2xp1
mov
call
xor
or
inc
ret
cs
mov
pop
addb
in
rolb
lret
mov
cmpsb
les
pusha
add
jg
and
mov
cld
jno
addl
loopne
add
cmpsl
push
mov
int3
or
repz
add
shl
test
push
sbbl
loopne
or
push
adc
push
cld
mov
adc
add
test
add
xor
sub
mov
jmp
push
add
add
negl
les
xor
add
aam
mov
add
pop
xlat
and
adc
jg
ljmp
cs
add
add
xor
or
add
jbe
add
movb
test
imul
lcall
sbb
les
push
mov
cs
call
mov
xor
jle
add
xor
shrl
cmp
xor
ljmp
adc
cmpsl
sbb
add
jne
mov
lret
add
sbb
inc
test
pop
mov
enter
xlat
paddq
jmp
cmp
xor
sahf
fnstcw
push
mov
mov
rol
xor
clc
pushf
pusha
add
xor
out
sub
stos
lods
hlt
out
pop
adc
out
or
jecxz
mov
movntq
add
mov
mov
lahf
xor
sub
xchg
mov
adc
lret
mov
mov
out
stos
jmp
xor
lret
add
rolb
mov
inc
add
push
jg
jge
out
push
fstl
sahf
jp
cmpsw
mov
mov
and
add
es
lods
cmp
addb
dec
and
xchg
pop
cmp
nop
addl
lods
or
cmp
and
inc
pushw
out
sarl
adc
and
stos
sbb
insb
in
fnsave
gs
cmp
iret
inc
inc
jae
and
xor
jbe
rcrl
xor
push
add
leave
sub
dec
adc
jns
add
pop
adc
add
dec
rolb
fdiv
movb
fstpl
addl
movsb
mov
add
cmpl
xor
nop
push
add
dec
outsl
adc
dec
cmc
vpshlb
int3
pop
xchg
xor
add
aam
xchg
xchg
aaa
popa
jmp
out
decb
stc
mov
fsubrs
lea
and
int
sarl
add
cmp
cmc
sub
sbb
loopne
add
sbb
addb
cmpsb
and
rolb
in
lcall
fwait
cmp
into
sahf
sbb
out
mov
xchg
jae
js
shl
mov
add
xchg
pop
and
inc
xchg
aad
icebp
imul
add
mov
imul
mov
cmp
orl
frndint
aad
int
push
std
rorl
mov
or
lds
cld
mov
hlt
dec
pop
cmp
cltd
mov
add
mov
fcoms
add
push
add
les
push
mov
int3
icebp
sarl
add
sbb
mov
aaa
repz
mov
movsl
lcall
xor
cmp
aad
push
int3
cmpsl
mov
add
pop
pop
dec
cmp
add
add
mov
sarl
push
jl,pn
repnz
add
dec
xchg
and
push
shrb
add
or
out
cmp
push
insb
mov
addl
imul
lods
dec
xchg
mov
repnz
pop
sub
popa
test
xor
stos
sbb
inc
add
xchg
aam
push
fs
sub
filds
mov
add
push
cmp
xor
mov
xchg
push
nop
pop
push
mov
insb
or
pop
test
popf
pushf
hlt
shlb
cs
inc
repnz
xor
jb
inc
add
fsubl
or
sbb
mov
mov
xor
push
lahf
insb
xor
mov
push
mov
sbb
movsb
pop
and
inc
clc
in
dec
mov
in
fwait
dec
enter
sahf
fildll
sub
cmp
and
jl
and
add
pop
mov
sub
add
aad
push
sub
mov
xor
sbb
add
and
mov
sub
dec
daa
xor
add
inc
and
jl
add
notl
xor
call
or
ljmp
loopne
adc
pop
lahf
mov
inc
add
mov
mov
add
xchg
pop
pop
pop
inc
inc
idiv
loop
daa
scas
lret
js
mov
enter
fiaddl
push
cwtl
decb
add
das
pop
cmp
mov
dec
adc
and
inc
adc
dec
je
add
or
add
xor
inc
add
mov
arpl
out
cmpsl
lea
loop
clc
in
aam
hlt
arpl
je
jge
stos
cltd
pop
mov
sbb
adc
lock
and
or
inc
add
mov
push
inc
ljmp
push
pop
loop,pt
mov
sub
add
add
stc
sub
dec
mov
xor
enter
test
aas
hlt
loopne
and
test
mov
xchg
cmp
jecxz
dec
xor
inc
add
xchg
rorb
roll
mov
cmp
push
mov
dec
cld
adc
adc
std
sub
shll
cmp
data16
fbld
cli
push
push
inc
add
xor
bound
pop
sbb
pop
push
fs
mov
cs
int
test
push
mov
mov
inc
add
out
dec
es
jmp
data16
xchg
daa
leave
inc
add
lret
fisubrs
mov
les
inc
add
cmp
test
imul
jle
xchg
gs
das
inc
add
adc
dec
int3
or
cmpsl
adc
into
jns
push
mov
mov
sbb
sbb
mov
add
xlat
push
mov
add
adc
rclb
add
lret
lret
jb
add
jne
out
dec
pop
xor
pop
pop
xchg
ds
lods
jns
cmpsl
aam
add
mov
add
ds
das
cmpsb
scas
cmpsb
fnstenv
push
push
outsb
sub
xor
add
gs
in
push
add
add
rolb
add
daa
add
clc
push
popa
ret
xchg
cmpsb
int
xchg
pop
dec
cmp
ds
dec
adc
scas
xchg
orl
pop
cs
es
mov
imul
xor
add
fisubl
rclb
add
loopne
sub
scas
out
lock
cmp
fnstsw
xchg
sti
add
sub
add
and
sub
dec
xchg
xor
lret
test
and
push
les
mov
cmc
jnp
movsl
addb
movsl
ss
inc
add
mov
mov
xor
adc
inc
cmp
xchg
sub
inc
add
in
movsl
lods
cmpsl
std
dec
addr16
mov
sbb
push
jge
js
mov
scas
dec
outsl
cmp
push
js
cmp
out
pusha
add
aaa
fdivrs
cmpsl
cmp
add
addb
push
adc
rsm
cmc
mov
sub
lret
dec
iret
je
test
mov
push
cmp
mov
push
cmc
jne
int
and
push
push
mov
mov
inc
add
rcrb
loop
popf
dec
fadds
cmp
rcrl
add
aad
das
sub
pop
adc
mov
daa
scas
icebp
sahf
stc
and
outsb
xor
sbb
pop
pop
jbe
jae
fistps
mov
in
int
nop
cmp
icebp
cwtl
adc
icebp
xchg
and
mov
in
into
sub
add
aas
movsb
and
pop
inc
int
cmp
mov
push
popa
sbb
or
cmp
es
pop
add
inc
add
cmc
fwait
leave
popa
test
sbb
loop
dec
sti
or
pop
and
sbb
pop
and
cmp
rcr
jmp
pop
or
imul
shll
je
add
sahf
jns
inc
cmp
shlw
xor
mov
adc
add
add
xor
outsb
jo
dec
mov
inc
add
mov
mov
std
pop
xlat
insb
lret
fists
add
push
stc
mov
mov
add
lcall
and
test
jne
fs
sbb
movsb
bound
xor
add
ror
jle
pop
jg
mov
add
push
pusha
add
addl
ds
mov
imul
add
add
mov
cltd
push
ljmp
jle
push
push
pusha
add
mov
add
mov
mov
lret
cmp
test
or
pop
cmp
into
jg
sub
pop
mov
push
daa
add
into
call
xchg
mov
imul
mov
sbb
xchg
lods
shl
loope
data16
push
cltd
lock
mov
mov
out
mov
jo
aas
xorl
pop
xchg
sub
repnz
sbb
and
pop
xchg
dec
mov
testl
movsb
dec
jnp
loopne
xor
jno
rcll
adc
and
cltd
xchg
dec
dec
xchg
loope
pop
icebp
sub
and
xchg
fidivrs
jno
and
popf
outsl
insb
test
xchg
add
pop
repz
add
aaa
sbb
jne
adc
cld
mov
adc
cmp
or
pop
enter
lods
ror
sbb
roll
rcl
idiv
add
jp
xor
add
cli
ret
pusha
add
add
sbb
jno
pop
mov
mov
or
inc
pop
jne
test
add
mov
jl
or
ljmp
xor
mov
mov
and
cld
mov
push
rcrl
sarl
mov
dec
outsb
add
or
sbb
fidivrs
addb
mov
mov
pop
loopne
xchg
push
outsw
roll
out
movsb
and
push
jo
outsl
test
stos
je
loopne
call
clc
popa
cwtl
popa
fs
cwtl
aam
xchg
xchg
fidivrl
daa
leave
push
adc
loopne
stos
ror
sbb
lret
fimull
pop
push
pop
and
jbe
call
arpl
push
ret
lds
rol
xchg
lea
decb
dec
xchg
jmp
jae
mov
jne
fstpl
adc
or
xor
mov
ljmp
and
and
out
in
and
add
adc
and
add
push
cmp
ja
add
push
mov
mov
push
lea
pop
adc
rcrl
xchg
pushf
insb
int3
loopne
lock
jae
inc
add
add
and
xchg
sbb
test
add
movb
add
mov
fsubrp
mov
pop
add
lods
iret
sub
add
std
pushf
lods
cli
mov
dec
mov
push
add
add
orl
mov
cmp
ljmp
test
cmp
push
icebp
push
or
inc
add
pop
adc
nop
sbb
mov
ljmp
addb
add
mov
inc
add
inc
add
aad
mov
inc
add
movd
add
addb
std
inc
add
pop
or
idivb
sti
out
fcoms
jge
fistl
adc
repnz
adc
cmp
mov
fcmovbe
in
dec
ja
push
testb
cmp
rcrl
hlt
add
dec
loop
inc
xchg
xor
inc
add
loop
into
stos
fldcw
cltd
int3
add
jecxz
dec
xchg
xor
push
bound
mov
pop
bound
mov
int
dec
jle
dec
push
push
inc
mov
addb
fwait
negb
insl
mov
stos
addb
add
movb
ret
pushf
mov
lods
outsb
mov
xchg
add
inc
add
mov
cmp
add
add
popfw
push
fadds
add
pop
fsubrs
bound
mov
xchg
inc
sub
in
das
aam
pushf
fists
adc
xor
pop
jae
mov
sbb
sub
lcall
je
and
out
movsl
popf
mov
push
and
std
and
aaa
pop
or
pusha
add
pushf
cld
adc
loope
add
out
lret
addb
mov
sbb
pop
cmp
xchg
aam
rcll
addb
mov
sahf
sub
inc
add
fistps
mov
inc
add
in
dec
daa
int
add
aam
stc
and
mov
pop
mov
inc
add
popa
xlat
aam
add
mov
or
add
out
cltd
push
std
sbb
xor
xlat
mov
iret
insb
cmp
icebp
mov
movsl
popf
sahf
les
cld
movsl
adc
mov
loope
jb
popf
ret
fwait
add
add
sbb
cld
lahf
xchg
pop
jl
sub
add
push
into
addb
jns
pop
outsl
cmp
add
mov
mov
ds
xchg
shr
mov
add
xor
mov
mov
stc
nop
es
add
push
lods
push
stc
nop
es
add
fucompp
add
fstpl
mov
xchg
ret
add
add
add
mov
xchg
ret
lods
add
idiv
nop
es
gs
xchg
cwtl
add
push
mov
xchg
ret
shl
push
add
cltd
xchg
stc
nop
es
add
sbb
cld
add
push
stc
nop
es
lahf
push
lock
sub
push
mov
xchg
ret
add
sti
nop
cld
nop
jmp
mov
add
push
mov
mov
xor
stc
add
push
mov
xchg
ret
push
add
test
jmp
stc
nop
es
mov
jae
fcmovnb
stc
nop
es
pushw
or
add
add
in
stc
nop
es
das
out
rcrb
in
jne
stc
nop
es
add
arpl
add
stc
nop
es
add
cmpsl
pop
pop
mov
stc
nop
es
add
push
add
add
nop
es
das
sub
lods
stc
nop
es
das
mov
stos
lea
push
mov
xchg
ret
add
jmp
test
push
add
stc
nop
es
push
dec
stos
stc
nop
es
mov
push
outsb
mov
nop
cld
nop
jmp
shlb
js
add
ja
inc
add
add
push
adc
sbb
inc
add
call
stc
nop
es
sbb
lods
add
test
es
add
add
outsl
push
stc
nop
es
sti
dec
movb
data16
rclb
cli
inc
add
std
outsl
mov
popa
add
mov
xchg
ret
cwtl
negb
mov
popa
add
mov
xchg
ret
add
xchg
jns
loop
nop
cld
nop
jmp
add
add
stc
nop
es
add
push
inc
push
mov
xchg
ret
cwtl
add
add
adc
nop
cld
nop
jmp
pop
add
xor
and
nop
cld
nop
jmp
das
cwtl
out
add
add
rolb
stc
nop
es
add
ret
stc
nop
es
jmp
add
out
out
clc
stc
nop
es
mov
add
nop
es
add
add
test
sbb
nop
es
cld
jmp
push
nop
cld
nop
jmp
std
cld
add
jbe
dec
call
stc
nop
es
push
negb
stc
nop
es
fimull
add
add
arpl
jae
nop
es
sldt
push
mov
xchg
ret
lahf
dec
add
ret
mov
nop
cld
nop
jmp
std
test
push
push
testl
pop
push
mov
xchg
ret
sbb
add
pop
jno
ror
stc
nop
es
test
add
mov
stc
nop
es
movb
pop
push
push
mov
xchg
ret
test
sbb
nop
es
push
add
mov
stc
nop
es
lret
outsl
adc
cmp
nop
es
add
add
stc
movzwl
nop
cld
nop
jmp
sbb
add
stc
nop
es
add
lret
add
or
jae
stc
nop
es
add
cmpsl
mov
adc
nop
es
gs
push
pop
mov
push
mov
xchg
ret
add
dec
jb
mov
stc
nop
es
add
xor
add
in
dec
nop
cld
nop
jmp
add
fisubrl
enter
es
add
add
outsb
movzwl
nop
cld
nop
jmp
cwtl
cmp
add
add
clc
push
stc
nop
es
dec
add
xor
push
push
mov
xchg
ret
add
add
add
adc
add
stc
nop
es
xcrypt-ctr
cmpsl
pop
push
stc
nop
es
add
rolb
or
add
add
add
pop
add
rolb
sahf
clc
mov
stc
nop
es
sbb
add
stc
nop
es
les
add
mov
test
nop
cld
nop
jmp
sub
outsl
push
dec
mov
stc
nop
es
bound
ds
stc
nop
es
sub
add
mov
inc
add
add
add
cmpsb
jb
dec
je
nop
cld
nop
jmp
add
push
fisttps
xchg
or
add
nop
es
adc
mov
xchg
ret
mov
sti
add
nop
cld
nop
jmp
sub
add
mov
nop
cld
nop
jmp
jg,pn
lahf
xor
es
add
add
jmp
dec
cmp
nop
es
das
sti
add
mov
jnp
add
stc
nop
es
add
stc
nop
es
adc
and
stc
nop
es
add
cmpsl
call
or
stc
nop
es
into
push
push
mov
xchg
ret
add
lahf
add
push
inc
fsubs
arpl
cld
nop
jmp
add
test
pop
aam
inc
add
mov
stc
nop
es
notb
add
fnsave
nop
es
add
add
mov
stc
nop
es
aaa
add
aaa
in
mov
push
mov
xchg
ret
push
inc
lret
addb
dec
pop
nop
cld
nop
jmp
push
push
data16
mov
or
stc
nop
es
add
push
add
mov
adc
nop
es
push
add
add
push
sbb
stc
nop
es
add
fistpll
stc
nop
es
add
je
stc
nop
es
data16
out
mov
nop
cld
nop
jmp
add
push
add
pusha
or
add
push
add
xchg
mov
pusha
stc
nop
es
add
sbb
mov
add
cld
nop
jmp
cld
or
lret
nop
es
out
sub
mov
push
mov
xchg
ret
fiaddl
add
nop
es
add
add
sub
pop
stc
nop
es
mov
fucomip
jle
add
stc
nop
es
push
sbb
add
nop
es
or
xor
stc
nop
es
add
cmp
nop
cld
nop
jmp
add
add
add
loope
push
stc
nop
es
add
mov
sahf
arpl
nop
es
xchg
add
ret
stc
nop
es
add
imul
nop
es
add
loop
push
mov
xchg
ret
add
rclb
lods
cmpl
nop
cld
nop
jmp
add
push
add
outsl
mov
stc
nop
es
add
push
pop
cmc
or
nop
jmp
add
mov
dec
cmp
nop
es
push
mov
nop
cld
nop
jmp
jg
adc
out
dec
mov
stc
nop
es
add
faddl
repz
nop
es
cld
mov
push
mov
xchg
ret
imul
add
add
movsb
stc
nop
es
add
add
gs
stc
nop
es
xchg
add
add
add
add
mov
xchg
ret
add
add
fdivrp
nop
es
add
add
sti
fwait
mov
stc
nop
es
add
incb
mov
stc
nop
es
sahf
aaa
add
aam
add
add
nop
es
xchg
mov
stc
nop
es
adc
shlb
sti
mov
stc
nop
es
add
mov
mov
xchg
ret
sub
add
sti
add
jmp
stc
nop
es
mov
mov
stc
nop
es
cld
cwtl
add
push
nop
jmp
add
add
aaa
add
test
inc
add
add
clc
sbb
add
nop
es
add
cmp
es
push
add
add
clc
dec
inc
nop
cld
nop
jmp
add
cmp
cld
nop
jmp
xchg
add
push
push
inc
xchg
in
add
cwtl
add
add
mov
push
mov
xchg
ret
lods
add
outsl
xor
pop
nop
cld
nop
jmp
add
add
add
sti
imul
mov
add
add
add
mov
adc
cld
nop
jmp
add
add
out
add
pop
adc
and
cmp
ret
add
add
jmp
inc
push
mov
xchg
ret
add
add
sti
mov
stc
nop
es
cld
add
jmp
mov
nop
es
add
nop
jmp
sti
cmpsl
lahf
cmpsl
sti
push
mov
nop
es
jae
sahf
outsl
add
add
mov
xchg
ret
out
cmpsl
add
nop
es
push
add
add
xor
call
cld
incl
mov
jb
nop
cld
nop
jmp
aaa
push
add
push
push
mov
xchg
ret
xor
mov
push
mov
xchg
ret
add
mov
jb
add
add
ret
sbb
adcb
cmp
stc
stc
nop
es
add
add
add
cmpsb
dec
add
push
mov
xchg
ret
add
add
mov
xchg
ret
mov
stc
nop
es
jmp
adc
xor
nop
cld
nop
jmp
add
sti
add
frstor
mov
nop
cld
nop
jmp
rcrb
stc
nop
es
std
add
fsubl
nop
es
lret
add
aaa
add
es
adc
mov
add
in
add
stc
nop
es
push
add
sahf
add
mov
stc
nop
es
add
scas
and
nop
cld
nop
jmp
add
mov
xor
push
mov
xchg
ret
add
mov
adc
nop
es
mov
add
push
mov
xchg
ret
cmpsl
add
aas
mov
nop
cld
nop
jmp
cmp
mov
nop
cld
nop
jmp
mov
mov
stc
nop
es
and
mov
sti
or
add
nop
es
add
shrl
push
push
mov
xchg
ret
add
test
jns
stc
nop
es
cs
loop
int
inc
sub
nop
es
cld
add
les
inc
stc
nop
es
add
nop
cld
nop
jmp
std
add
sti
push
lahf
pop
pop
mov
stc
nop
es
repz
or
test
add
es
add
test
stc
nop
es
add
stc
nop
es
jae
add
add
mov
stc
nop
es
sbb
test
or
es
das
arpl
add
roll
add
add
dec
mov
stc
nop
es
add
fiaddl
mov
testl
call
js
nop
cld
nop
jmp
add
sbb
shrb
es
add
add
add
fwait
mov
stc
nop
es
add
add
mov
call
stc
nop
es
fiaddl
dec
pushl
push
mov
xchg
ret
xor
pop
or
cld
nop
jmp
or
mov
sti
stc
nop
es
xchg
push
add
nop
jmp
push
sahf
sbb
lahf
lahf
xchg
mov
mov
push
nop
cld
nop
jmp
fiaddl
dec
loope
mov
stc
nop
es
add
add
nop
es
push
add
adc
push
nop
cld
nop
jmp
xchg
add
rclb
add
nop
es
outsl
xchg
sahf
push
add
cltd
add
stc
nop
es
add
rcrb
roll
icebp
inc
add
dec
add
add
add
nop
cld
nop
jmp
adc
adc
nop
cld
nop
jmp
add
add
mov
xor
add
popa
stc
nop
es
out
jae
add
nop
es
add
push
mov
add
add
push
add
jp
or
loop
mov
push
mov
xchg
ret
add
add
cmp
nop
es
add
cmp
jne
stc
nop
es
or
nop
es
cld
mov
pop
repz
mov
stc
nop
es
paddw
add
je
stc
mov
push
mov
xchg
ret
add
jg
nop
cld
nop
jmp
add
jmpw
rclb
stos
out
inc
add
repz
stc
nop
es
adc
cmp
xchg
addb
add
stc
nop
es
call
out
add
stc
nop
es
xchg
xchg
std
add
add
mov
nop
es
add
mov
add
popf
leave
stc
nop
es
add
xor
or
jb
add
leave
push
push
mov
xchg
ret
xor
cmp
stc
nop
es
add
adc
call
stc
nop
es
sahf
add
fidivrl
stc
nop
es
jmp
push
mov
xchg
ret
cmp
popa
sti
push
stc
nop
es
movb
add
mov
mov
ror
push
mov
xchg
ret
add
mov
nop
es
add
popa
stc
nop
es
loope
call
and
stc
nop
es
add
repz
mov
cld
nop
jmp
fisubrl
out
lea
cld
nop
jmp
add
sahf
cmpsl
add
loop
nop
cld
nop
jmp
loope
das
call
mov
pusha
stc
nop
es
incb
add
jae
cmpsl
adc
stc
nop
es
aaa
add
fisubrl
push
mov
xchg
ret
repz
add
adc
jb
add
rolb
xchg
jno
popa
stc
nop
es
cmpsl
xchg
jae
push
sbb
out
add
stc
nop
es
add
mov
nop
cld
nop
jmp
xchg
dec
dec
add
add
mov
nop
es
push
add
xchg
cld
mov
nop
cld
nop
jmp
incb
cmpsl
repz
shr
stc
nop
es
mov
push
cmp
jns
add
nop
cld
nop
jmp
testb
fwait
xchg
stc
nop
es
fiaddl
jmp
fmull
in
inc
add
cld
add
fldl
popf
stc
nop
es
lods
jb
mov
cld
nop
jmp
xchg
add
stc
nop
es
dec
add
lret
push
clc
push
mov
xchg
ret
add
cmp
cmp
stc
nop
es
xchg
in
aas
sub
stc
nop
es
add
add
cwtl
mov
cltd
add
xchg
ret
out
add
nop
cld
nop
jmp
add
dec
xchg
out
push
push
call
stc
nop
es
fucompp
rcrb
es
add
movb
js
jle
add
repnz
jmp
add
push
js
lret
stc
nop
es
add
push
push
mov
xchg
ret
add
add
pushf
mov
stc
nop
es
add
mov
add
stc
nop
es
add
pop
nop
cld
nop
jmp
xchg
fisubrl
pusha
stc
nop
es
add
cmpsl
test
dec
push
mov
xchg
ret
add
add
test
inc
stc
nop
es
xchg
call
cwtl
add
nop
cld
nop
jmp
push
pop
add
aad
pop
nop
cld
nop
jmp
std
sahf
dec
pop
add
cs
cmpsb
jge
rcrb
nop
es
add
add
inc
ds
stc
nop
es
xor
cmc
xor
add
je
stc
nop
es
cmp
jb
cs
push
add
nop
cld
nop
jmp
mov
add
sub
xor
add
stc
nop
es
adc
arpl
stos
and
nop
cld
nop
jmp
lods
add
and
nop
es
add
add
add
rol
add
nop
cld
nop
jmp
add
add
mov
nop
es
mov
add
xor
popl
stc
nop
es
cmp
mov
stc
nop
es
add
add
push
mov
xchg
ret
add
xchg
mov
jo
pop
stc
nop
es
add
add
lods
sti
inc
mov
add
mov
xchg
ret
lret
out
adc
call
nop
es
add
add
xchg
sbb
fists
cli
dec
add
mov
sar
nop
es
add
add
jb
add
add
sahf
xchg
mov
cmp
add
stc
nop
es
add
sbb
inc
add
push
push
add
add
add
dec
rep
stc
nop
es
add
add
push
jb
test
nop
cld
nop
jmp
push
add
sti
sti
outsl
xor
test
std
call
or
add
mov
nop
jmp
add
add
push
psubd
es
add
add
nop
es
sti
push
xchg
add
xor
nop
cld
nop
jmp
add
psraw
jb
rolb
push
jmp
pusha
stc
nop
es
add
add
add
cli
mov
stc
nop
es
add
add
imul
stc
nop
es
adc
add
gs
loop
dec
inc
stc
nop
es
sbb
sti
maxps
faddl
es
lret
mov
add
push
mov
xchg
ret
cmpsw
add
push
or
nop
es
out
mov
add
sub
add
push
push
mov
xchg
ret
xchg
add
jae
or
nop
jmp
add
add
cmpsb
inc
push
mov
nop
es
add
cld
xchg
out
push
pusha
add
nop
jmp
add
xchg
add
jle
jmp
jb
sahf
add
xchg
push
dec
lea
nop
cld
nop
jmp
fiaddl
add
arpl
add
out
incl
cld
das
mov
rolb
cwtl
add
stc
nop
es
cld
sti
mov
cmp
jae
nop
es
add
jb
andl
add
stc
nop
es
add
cmp
nop
es
cwtl
add
add
xchg
mov
add
jnp
nop
cld
nop
jmp
add
add
incb
inc
add
and
push
mov
xchg
ret
add
xor
rclb
fdivp
inc
add
add
add
add
cli
repz
add
add
jg
push
mov
nop
es
add
add
xor
pusha
add
stc
nop
es
str
sub
jne
stc
nop
es
incb
add
mov
inc
add
push
push
les
jo
push
stc
nop
es
add
add
sahf
jge
cmpl
je
add
std
pop
lea
push
mov
xchg
ret
add
cmp
loope
nop
es
std
mov
add
jne
call
stc
nop
es
sti
mov
negl
stc
nop
es
or
nop
cld
nop
jmp
add
add
adc
nop
es
sti
lods
jmp
sbb
clc
stc
nop
es
add
xor
add
pop
and
adc
sldt
stc
nop
es
add
lea
stc
nop
es
or
push
dec
mov
stc
nop
es
sub
mov
fcoms
lret
add
cwtl
add
jae
add
mov
stc
nop
es
testl
add
nop
es
jmp
push
mov
xchg
ret
data16
sbb
add
nop
es
fiaddl
testb
add
stc
nop
es
add
push
loopne
mov
xchg
ret
add
gs
jmp
stc
nop
es
add
mov
jnp
inc
add
add
data16
xchg
ja
jmp
nop
cld
nop
jmp
add
add
es
out
dec
add
popa
add
mov
xchg
ret
call
jne
push
mov
xchg
ret
xchg
lahf
add
call
and
dec
add
lahf
add
jb
mov
inc
add
test
nop
cld
nop
jmp
mov
addb
ficompl
mov
xchg
ret
out
add
or
call
or
add
nop
cld
nop
jmp
add
jno
push
mov
sbb
mov
xchg
out
and
mov
mov
xchg
ret
decb
mov
stc
nop
es
out
mov
stc
nop
es
add
mov
mov
xchg
ret
lret
add
add
cmp
mov
es
lahf
add
jae
add
add
nop
cld
nop
jmp
out
add
or
sti
mov
stc
nop
es
les
call
inc
loopne
add
mov
add
jmp
add
add
idiv
mov
adc
nop
es
sahf
push
lret
ss
push
mov
xchg
ret
loope
shl
add
mov
xchg
ret
or
or
es
sbb
add
push
cs
stc
nop
es
push
jmp
stc
nop
es
lods
xchg
cmpsl
gs
out
inc
stc
nop
es
cld
mov
mov
rorw
push
sub
repnz
incl
dec
add
pusha
add
inc
in
stc
nop
es
mov
push
mov
nop
es
data16
fiaddl
loopne
rcl
addb
add
stc
nop
es
cs
xchg
cmc
push
inc
add
sbb
stc
nop
es
data16
fs
sub
stc
nop
es
lret
jae
cli
push
stc
nop
es
call
dec
stos
pop
stc
nop
es
push
add
xor
add
nop
cld
nop
jmp
add
insb
mov
stc
nop
es
jg
fisubrl
sub
lret
xor
stc
nop
es
add
je
stc
nop
es
das
jmp
add
stc
nop
es
mov
add
xor
loopne
mov
testb
ret
mov
nop
es
add
sub
add
aas
mov
stc
nop
es
add
mov
mov
stc
nop
es
mov
add
stc
nop
es
sub
xchg
push
mov
stc
nop
es
cld
add
cld
sbb
push
mov
xchg
ret
push
shlb
sbb
pop
lea
stc
nop
es
add
push
xchg
mov
stc
nop
es
push
xchg
lods
pushl
stc
nop
es
xchg
jmp
sar
cld
nop
jmp
add
mov
sub
nop
es
add
add
inc
stos
mov
nop
cld
nop
jmp
add
add
mov
nop
es
xchg
adc
out
nop
cld
nop
jmp
cld
add
add
ljmp
add
cmpsl
movb
in
jne
stc
nop
es
push
call
stc
nop
es
add
push
mov
stc
nop
es
je
mov
nop
cld
nop
jmp
xchg
push
jg,pn
add
dec
mov
stc
nop
es
pop
add
add
mov
stc
nop
es
add
jmp
add
fisttpl
testl
outsl
add
loope
mov
push
mov
xchg
ret
add
sbb
loop
xor
push
mov
xchg
ret
add
sbb
ss
push
mov
xchg
ret
add
outsl
push
movzwl
add
add
stc
nop
es
add
loopne
and
cld
nop
jmp
add
mov
add
mov
xchg
ret
mov
stc
nop
es
dec
aaa
add
sti
add
stc
nop
es
cld
les
add
push
rolb
and
mov
stc
nop
es
lods
add
nop
es
push
sahf
inc
aaa
lea
jmp
add
les
mov
nop
cld
nop
jmp
add
incb
sub
push
mov
popl
add
add
add
add
leave
nop
cld
nop
jmp
add
dec
add
nop
es
fiaddl
add
out
mov
push
mov
xchg
ret
lods
sahf
add
loope
movswl
stc
nop
es
add
push
inc
add
mov
stc
nop
es
add
add
nop
jmp
add
add
push
sub
nop
es
add
ficoml
movsb
push
mov
xchg
ret
push
add
dec
add
push
stc
nop
es
add
or
decb
push
stc
nop
es
add
das
add
jne,pt
stc
nop
es
mov
and
add
out
push
add
int3
add
stc
nop
es
push
test
mov
mov
stc
nop
es
loope
add
gs
call
es
add
add
mov
xchg
ret
cpuid
add
push
stc
nop
es
push
cmpsl
movq
add
je
stc
nop
es
sti
movb
rolb
add
subl
push
mov
xchg
ret
add
add
xchg
jb
mov
stc
nop
es
movb
add
mov
stc
nop
es
xchg
xchg
or
nop
es
rolb
xor
je
nop
cld
nop
jmp
fcmovb
add
movzwl
stc
nop
es
add
pop
pop
push
push
mov
xchg
ret
push
or
pop
pushf
mov
stc
nop
es
add
add
add
dec
mov
stc
nop
es
add
push
dec
es
jne
stc
nop
es
std
mov
repz
add
add
adc
or
stc
nop
es
add
mov
push
mov
xchg
ret
add
lret
lods
push
stos
mov
nop
cld
nop
jmp
add
sbb
stc
nop
es
add
xchg
add
pop
cmpsb
movl
push
mov
xchg
ret
push
add
decl
push
mov
xchg
ret
add
add
mov
stc
nop
es
xor
enter
stc
nop
es
or
add
or
nop
cld
nop
jmp
add
add
jle
sti
add
add
sti
std
jmp
and
cwtl
mov
push
mov
xchg
ret
add
add
jg
stc
nop
es
push
add
sti
mov
push
mov
xchg
ret
add
add
push
mov
xchg
ret
dec
xchg
add
add
pushf
jmp
stc
nop
es
add
sti
push
nop
cld
nop
jmp
xchg
repz
add
add
rcll
fwait
xor
stc
nop
es
mul
outsl
jg
jl
add
nop
cld
nop
jmp
add
movsl
jmp
popa
add
mov
xchg
ret
add
add
call
stc
nop
es
mov
and
add
nop
es
add
out
inc
add
mov
pop
nop
cld
nop
jmp
add
push
add
repz
cmp
nop
cld
nop
jmp
rcrb
push
addb
add
stc
nop
es
incb
incb
mov
stc
nop
es
outsl
les
test
cltd
mov
stc
nop
es
add
adc
nop
jp
stc
nop
es
add
push
add
add
pusha
add
mov
es
incb
cmpsl
fidivrl
add
add
stc
nop
es
push
and
rep
stc
nop
es
or
push
sub
add
stc
nop
es
das
decb
test
add
add
nop
es
add
dec
mov
nop
cld
nop
jmp
add
add
lahf
xor
push
nop
cld
nop
jmp
add
add
leave
stc
nop
es
add
sbb
nop
es
outsl
push
add
adc
fcomp
inc
add
or
jne
stc
nop
es
add
push
mov
xchg
ret
incb
xchg
cmp
cmp
nop
cld
nop
jmp
add
stc
push
push
mov
xchg
ret
add
push
add
dec
les
stc
nop
es
add
in
add
dec
mov
jbe
push
adc
stos
stc
nop
es
add
cmpsl
xchg
cmpsl
jne
addb
add
stc
nop
es
mov
push
fldl
add
nop
es
xor
push
push
mov
xchg
ret
jg
jmp
mov
stc
nop
es
add
add
dec
push
mov
xchg
ret
sbb
add
add
mov
nop
cld
nop
jmp
push
add
mov
cld
nop
jmp
repz
sti
lods
ficompl
call
idiv
incl
lret
add
pop
cmp
nop
es
add
pop
add
cld
nop
jmp
divb
dec
xor
stc
nop
es
push
add
fiaddl
adc
incb
xchg
ret
add
add
mov
xchg
ret
gs
loope
cmp
mov
xchg
ret
lods
add
add
mov
push
mov
xchg
ret
cwtl
std
cld
jb
nop
cld
nop
jmp
adc
sti
pop
test
cmp
nop
es
cld
push
cwtl
add
dec
shl
nop
cld
nop
jmp
add
cmpsl
add
add
es
data16
nop
es
add
add
lahf
mov
stc
nop
es
add
cmpsb
xchg
and
push
add
shrl
cld
nop
jmp
mov
gs
cmpl
nop
cld
nop
jmp
add
jbe
jne
stc
nop
es
incb
nop
cld
nop
jmp
add
fdivp
movsb
stc
nop
es
add
add
add
stc
nop
es
add
shlb
mov
stc
nop
es
add
xor
in
push
push
mov
xchg
ret
add
das
shrb
insb
insb
add
nop
es
mov
mov
push
mov
xchg
ret
add
add
push
mov
dec
daa
icebp
add
add
add
mov
in
aas
mov
stc
nop
es
add
push
mov
add
add
mov
lcall
nop
es
add
add
add
mov
add
push
mov
xchg
ret
das
out
aad
add
add
scas
push
push
mov
xchg
ret
add
add
push
repnz
decb
es
add
add
xor
mov
push
mov
xchg
ret
std
gs
nop
jmp
xor
add
and
stc
nop
es
add
add
push
call
hlt
incl
cld
outsl
mov
stc
nop
es
add
adc
test
push
mov
xchg
ret
out
out
add
mov
stc
nop
es
sti
pop
das
add
mov
jmp
add
test
stc
nop
es
add
add
add
and
insb
stc
nop
es
cmpsl
aaa
push
out
pop
stc
nop
es
cwtl
add
add
fwait
nop
push
mov
xchg
ret
loope
add
add
nop
es
add
fisubrl
stc
nop
es
sbb
add
and
stc
nop
es
or
sti
stc
nop
es
dec
add
adc
jb
shrb
jae
pop
or
add
nop
es
add
mov
stc
nop
es
push
mov
jecxz
add
add
and
lret
fdivrp
call
clc
incl
mov
and
aaa
insl
add
stc
nop
es
sbb
les
cld
nop
jmp
add
inc
dec
push
stc
nop
es
mov
dec
imul
into
icebp
ljmp
push
addb
cmpsb
pushf
div
stc
nop
es
add
add
add
stc
nop
es
mov
push
stc
nop
es
movb
add
cld
nop
jmp
lahf
sti
mov
add
ret
out
lea
nop
cld
nop
jmp
add
imul
mov
cld
nop
jmp
add
lods
add
stc
nop
es
loope
out
shr
test
popa
add
add
add
add
incb
nop
jmp
add
add
push
mov
xchg
ret
push
add
rolb
add
and
stc
nop
es
xchg
pop
add
fcos
stc
nop
es
add
add
nop
cld
nop
jmp
add
stos
pusha
push
mov
xchg
ret
mov
call
mov
xchg
ret
dec
mov
fdivr
nop
es
push
inc
add
mov
xchg
ret
test
jno
mov
stc
nop
es
xchg
rolb
add
mov
stc
nop
es
add
add
out
xor
stc
nop
es
repz
jg
das
mov
push
mov
xchg
ret
gs
add
call
stc
nop
es
add
aam
add
out
add
stc
nop
es
add
push
divl
movzwl
stc
nop
es
test
nop
cld
nop
jmp
sahf
push
loope
push
add
es
jae
sets
and
nop
es
add
jge
mov
add
add
nop
es
jmp
es
add
add
fiaddl
jae
test
cld
nop
jmp
outsl
add
lods
lahf
xchg
adc
cmp
nop
es
sbb
scas
enter
jb
sti
add
xor
stc
nop
es
mov
test
movb
mov
xchg
ret
sub
xchg
mov
cmpsb
push
mov
subl
stc
nop
es
add
add
inc
and
cld
nop
jmp
add
push
xchg
pop
mov
lods
pop
add
add
test
stos
imul
bound
mov
ret
in
mov
aas
je
gs
mov
jl
je
pop
mov
mov
push
sbb
jp
mov
js
push
cld
out
sbb
adc
pusha
add
fs
lahf
loop
jb
lcall
addb
mov
sbb
lret
and
leave
ds
es
mov
sub
xchg
and
add
hlt
enter
add
xchg
pop
xchg
lods
imul
cmp
fisubs
pop
jg
std
or
pop
test
std
leave
outsb
lds
fcompl
xchg
mov
push
pop
and
aaa
sub
test
add
sub
cmc
cld
mov
sub
inc
mov
mov
cli
int3
pop
addb
add
xor
sub
add
ds
mov
out
mov
movb
sub
in
sub
mov
add
add
jg
inc
add
xor
add
push
add
mov
adc
xchg
xor
xchg
js
movb
rolb
in
int3
test
mov
jp
dec
dec
sub
add
insb
aad
jnp
pop
fwait
pop
scas
popf
mov
sub
cmp
lods
dec
jae
and
sbb
movb
and
xchg
cmp
aam
xchg
add
std
movsl
ret
push
add
lea
sarl
add
xorl
push
xchg
dec
pop
aam
ss
mov
test
cs
mov
add
xor
lods
in
ljmp
inc
jae
and
add
test
mov
cmp
add
lods
adc
xor
les
pop
insl
push
adc
insb
push
pop
lret
add
cmpsb
ss
das
adc
mov
ljmp
mul
stos
rclb
rorl
divb
in
addb
test
add
xchg
mov
mov
mov
add
pop
sbb
push
sti
ds
push
fcoml
lcall
or
push
fcompl
shll
inc
add
mov
xchg
mov
in
int3
add
cmp
jg
fisttps
adc
and
inc
xor
or
pop
mov
and
or
popa
dec
sbb
mov
xchg
sbb
push
das
add
cmpsb
out
pop
or
ja
dec
jne
add
xor
test
xchg
xchg
repnz
mov
push
or
sahf
cs
add
cmp
imul
pop
lret
fisubl
addb
out
scas
or
test
into
lret
and
xchg
imul
addl
cmpsb
rcl
cld
push
add
cmp
addr16
arpl
int3
mov
repnz
or
push
in
mov
lock
daa
inc
rcll
inc
inc
push
sbb
inc
add
dec
outsb
lcall
fimull
stos
mov
inc
add
add
cmp
jns
pop
out
icebp
xchg
inc
add
sbb
push
push
mov
jae
clc
or
lds
add
ret
out
inc
add
sbb
jmp
aam
dec
sbb
aas
cmp
inc
add
add
movl
add
mov
jo
mov
scas
data16
cmc
sahf
pop
mov
mov
adc
jns
xchg
dec
popf
cld
mov
sahf
pop
jecxz
fwait
lea
jmp
cmp
in
mov
or
repz
mov
dec
cmp
fsubs
mov
or
mov
sub
notb
into
lds
pop
insl
sbb
xorl
imul
int3
insb
addr16
inc
add
dec
lret
add
cmp
cmp
pop
loop
fwait
inc
push
mov
cmpsl
aas
or
xchg
lods
imul
clc
sbb
shlb
push
arpl
sbb
inc
into
push
add
ret
stos
lcall
add
sub
mov
fcmove
adc
add
sub
mov
xchg
mov
pop
mov
movsl
call
in
fbld
add
out
lock
shlb
addb
jp
jecxz
mov
js
mov
pop
test
pop
loopne,pt
sub
add
cltd
cwtl
cmp
pop
xor
mov
nop
pop
ds
ret
xchg
stos
test
leave
aaa
insb
dec
ljmp
lods
or
int
and
fsubl
ds
add
inc
add
mov
outsl
mov
and
stos
adc
fs
mov
rcll
add
ret
jge
daa
mov
pop
push
lods
jp
imul
lea
pop
sub
lods
in
orl
fsubp
jae
push
ss
pushf
stc
jp
add
lcall
movsb
roll
pop
pop
xchg
add
test
pop
sbb
add
sub
fmull
movsl
xor
cld
repz
stos
ror
xchg
add
lods
push
dec
mov
lret
dec
xchg
insl
aad
add
mov
icebp
mov
pop
jb
sub
add
lea
jge
cmp
push
inc
add
xor
jbe
push
lods
mov
mov
lock
pop
stos
cmpsl
lds
add
cmp
pop
inc
loopne
xchg
xor
orl
inc
add
fidivrs
fnstenv
pop
xor
add
ret
add
lahf
sarb
rol
xchg
cmp
xor
add
movsb
inc
sti
inc
add
daa
test
adc
testl
loop
mov
neg
out
sbb
add
arpl
add
lods
push
rolb
leave
cmpsl
push
add
add
xor
xor
cmp
adc
cmpsl
inc
call
mov
ret
mov
mov
push
dec
pop
imul
loope
sub
add
add
pop
mov
jno
arpl
add
scas
loope
incb
add
mov
pop
jnp
inc
add
add
fsts
mov
or
ror
pushf
xchg
mov
ss
mov
hlt
es
push
dec
dec
push
enter
movb
mov
addr16
gs
dec
mov
adc
add
out
test
lahf
mov
fistpl
icebp
mov
enter
adc
das
jne
aam
add
inc
push
data16
cmp
pop
repnz
lcall
mov
add
add
add
cltd
les
mov
jmp
or
mov
lea
pop
cli
test
in
cmp
hlt
pushf
loop
mov
pushw
sub
cld
mov
rolb
fiaddl
xlat
aad
sub
sbb
bound
inc
add
les
cmp
clc
lock
mov
adc
dec
popa
into
or
jge
cld
and
in
loope
in
xlat
shrl
cmpsl
mov
mov
xor
and
pop
jno
add
cmp
jb
sysexit
cwtl
cmp
inc
ret
jg
rorl
push
lods
cld
push
sub
xor
xchg
sti
xchg
in
pop
and
mov
movb
pop
and
xchg
in
sub
movsb
orl
addr16
insb
cmpsl
lret
cmpsb
outsl
arpl
add
data16
not
push
inc
js
sbb
mov
sbb
pop
lock
jle
loopne
jp
es
sbb
fstps
jl
xchg
test
int
int3
jl
jmp
in
mov
xchg
push
and
or
pop
in
xlat
repz
addb
push
add
push
pop
cmp
pop
jecxz
cli
or
insl
jae
or
or
pop
adc
outsb
or
out
or
add
call
push
cld
mov
outsb
je
sub
add
pop
sub
js
xor
clc
inc
jnp
nop
and
pop
inc
add
aaa
loop
faddl
xchg
or
hlt
fildl
outsb
stos
xchg
int3
and
jp
and
hlt
pop
or
push
rcrl
lcall
mov
jecxz
jg
sub
sbb
xlat
sbb
addb
push
in
lods
icebp
jle
inc
mov
push
add
mov
insb
repz
sbb
pop
add
pushf
dec
test
pop
mov
jbe
jmp
or
daa
xor
out
push
outsl
xchg
sbb
inc
add
add
dec
pop
aam
call
fisubs
jnp
lret
inc
add
cwtl
xor
mov
daa
ljmp
lock
sahf
insl
je
mov
lods
movsb
cwtl
push
loop
cmp
sbb
jbe
addb
sub
pop
int3
imul
add
std
insl
or
stos
xor
stc
lahf
xchg
pop
xchg
das
mov
mov
push
repnz
add
push
add
add
xor
cmpsl
bound
jns
fwait
add
add
dec
dec
out
xor
mov
popf
stc
pop
out
add
pop
jns
sarl
dec
cmp
int3
fdivs
inc
add
gs
push
add
je
loopne
mov
popf
jmp
jae
xchg
loope
pop
ds
in
push
popa
scas
jne
inc
add
aaa
pop
and
fists
sbb
test
and
int3
movb
add
add
jg
pop
enter
push
dec
mov
ljmp
adc
out
mov
push
jecxz
jo
ljmp
test
xchg
pop
inc
call
add
fstpl
cmc
clc
int3
test
add
addr16
dec
pop
mov
in
flds
pop
pushf
idivl
mov
mov
push
repnz
add
add
add
fstpl
and
add
xchg
leave
mov
mov
ljmp
out
into
ret
mov
sbb
mov
adc
mov
adc
out
cmp
dec
or
inc
addr16
mov
adc
add
leave
xchg
fisttpll
add
stos
imul
inc
add
or
push
push
mov
adc
leave
cmpsb
nop
push
aaa
xor
add
shrl
push
fildl
testl
add
or
je
outsb
pop
push
push
cmpl
mov
add
xor
add
xchg
mov
pop
mov
cmc
inc
add
shr
mov
aas
call
rorb
add
test
in
add
aas
sbb
mov
adc
add
pusha
add
mov
cli
and
out
push
push
pop
mov
inc
mov
clc
lods
push
pusha
add
iret
repz
lret
daa
adc
cmp
add
fistl
daa
aad
repnz
sub
imul
test
mov
dec
inc
add
sahf
mov
dec
and
mov
dec
imul
jnp
mov
jp
inc
add
sub
dec
and
gs
xor
dec
mov
push
ffreep
add
int
jae
icebp
inc
xchg
dec
test
popa
cmc
pushf
out
pop
xchg
push
sub
mov
mov
addr16
mov
add
outsb
es
mov
shll
or
mov
gs
push
lahf
jp
data16
outsl
add
mov
bound
aaa
lock
pop
add
push
sub
fs
mov
mov
inc
ds
int3
add
or
pop
push
mov
test
xchg
and
jne
stos
pop
mov
sub
test
jl
mov
dec
iret
xor
pop
mov
lea
ds
in
add
cltd
and
lock
pusha
add
sti
test
cmpsl
loopne
icebp
stos
xchg
mov
add
sub
mov
rolb
arpl
dec
mov
pop
in
int3
xor
push
sub
and
xchg
mov
test
push
mov
and
add
jl
xchg
mov
xor
repz
xor
xchg
movb
lods
mov
add
pop
sbb
mov
dec
fimull
addr16
adc
push
add
inc
add
std
mov
cld
pop
jle
add
arpl
enter
or
cwtl
pop
repnz
out
jae
and
mov
aad
sub
cmp
push
lods
arpl
push
xor
mov
add
fcoml
cmpsl
or
mov
mov
mov
add
sub
aam
repnz
xor
inc
jl
leave
fisttpll
xchg
jp
add
dec
sbb
mov
imul
stos
jo
nop
insb
and
jl
jb
rcr
and
cmpsl
xchg
shll
dec
insb
sub
mov
or
xchg
loop
mov
pop
cmp
or
cmc
nop
inc
out
ret
es
dec
int3
movb
fmuls
rolb
dec
andl
inc
test
adc
inc
cmp
mov
mov
xor
push
aam
adc
ljmp
add
jbe
pop
addl
addb
test
pop
in
addr16
inc
add
mov
lcall
sub
stos
mov
idivb
rcll
les
and
gs
add
test
push
cmc
pop
loop
loope
sarl
fwait
int3
repz
jne
sarb
lret
int3
movsb
fistpl
mov
push
stos
scas
cmp
adc
mov
fimuls
sti
aam
jl
cmpsl
fiaddl
add
cltd
cmc
ret
push
mov
adc
fwait
test
mov
pop
mov
cli
imul
rcrb
sub
xor
sarl
and
scas
ss
or
je
mov
or
push
sub
pusha
add
popa
cmp
xchg
xlat
push
shll
dec
addr16
into
and
lods
mov
cmp
pop
movb
push
add
sub
pop
jle
adc
push
add
in
push
push
pop
jne
std
aas
je
mov
add
add
call
push
mov
cmp
out
stos
mov
inc
pop
jbe
jne
push
and
mov
pop
ret
mov
mov
test
inc
add
mov
push
btc
imul
outsb
daa
cli
iret
sub
lahf
addb
dec
js
mov
rolb
lret
jo
add
mov
movb
push
dec
jg
xchg
lea
jmp
adc
jne
addr16
loop
dec
addr16
sbb
or
add
imul
addl
add
xchg
lret
add
inc
add
xor
xchg
push
aas
add
jns
call
xchg
insl
xchg
cmp
es
out
incl
int3
fwait
adc
ret
imul
in
push
push
mov
mov
push
push
sub
jno
xor
pop
movsb
sarl
cmp
add
dec
dec
dec
fstpl
sub
rorb
add
test
movsb
outsb
cmpsb
lock
outsl
jge
add
jle
shrl
pushf
cmp
das
popa
rolb
adc
xchg
sbb
iret
pusha
add
fsts
bound
ja
lods
jo
mov
icebp
jge
mov
popf
xchg
add
dec
clc
out
xchg
sahf
les
insb
xchg
cmp
jecxz
push
popf
sub
xor
cmp
subl
sahf
and
leave
pop
inc
add
pop
shrb
pop
insb
push
cwtl
pop
mov
inc
dec
xorl
in
push
out
rcr
les
mov
rcrl
sub
ss
and
gs
cmp
push
xor
adc
jmp
out
vfrczss
cmpsl
out
push
xchg
adc
add
divb
or
xor
rcrl
pop
addb
mov
add
xchg
aaa
es
imul
push
xchg
dec
movsl
insl
movsb
jmp
in
add
out
xor
out
cwtl
ss
mov
sbb
sub
cltd
pop
push
sarl
xor
jg
test
push
aad
adc
out
ret
lock
xor
sti
jecxz
aaa
shll
ror
xchg
popf
push
rorb
adc
test
fiadds
lock
decb
test
add
mov
lods
into
push
add
insb
push
insb
sti
or
pop
add
xchg
ret
dec
lret
pop
adc
inc
and
push
add
sbb
mov
in
insb
repz
test
es
aad
lea
jbe
daa
mov
stos
pop
xor
loop
adc
add
mov
push
mov
sbb
addb
mov
cmp
imul
add
nop
mov
jp
xchg
push
add
add
add
fistpll
pop
pop
dec
mov
imul
addb
push
or
test
addr16
mov
mov
mov
rolb
sub
ret
outsl
test
scas
out
pop
jp
mov
pop
push
xchg
jo
add
sub
imul
cltd
sub
pushf
jmp
push
inc
add
nop
scas
mov
add
add
jl
lds
lods
lar
xchg
xchg
hlt
dec
loop
inc
add
jne
add
mov
subl
jnp
cmc
out
mov
ror
pop
hlt
js
add
xchg
sbb
sbb
bnd
cmpsl
into
add
mov
cwtl
movb
out
xchg
jno
popw
pushf
and
jp
call
xchg
js
imul
xor
add
xchg
add
gs
jbe
stos
rolb
xchg
and
adc
sarl
pop
inc
dec
inc
add
mov
sti
push
test
inc
inc
add
adc
cmp
rclb
mov
xchg
mov
dec
or
jmp
pop
insb
cmp
inc
xor
push
fcmovne
loop
popa
test
imul
and
jno
test
adc
push
cmp
push
test
jmp
xchg
jns
add
add
jno
addb
mov
addr16
call
mov
clc
pop
out
aam
or
lahf
movb
jle
dec
out
idivl
jmp
sub
dec
lock
inc
add
xchg
ss
push
lcall
mov
rolb
add
add
add
pop
jb
enter
lcall
xor
add
pop
jge
movsb
mov
mov
loop
or
xlat
add
ja
adc
repz
xor
add
movb
pop
cmp
in
and
add
lcall
pop
jbe
xchg
mov
xor
int
add
rolb
mov
pop
adc
shrl
packssdw
mov
aam
out
xchg
sbb
roll
add
add
pop
in
addr16
xor
add
push
lods
push
sub
xchg
and
inc
push
imul
pusha
add
cltd
outsl
pop
pop
repnz
mov
mov
or
sbb
cmc
xchg
xor
pop
movsb
clc
mov
fbstp
ds
lahf
popf
and
icebp
in
xor
add
sub
jno
xor
movsb
lock
inc
add
lret
mov
mov
lcall
lock
mov
lcall
pop
insb
mov
in
add
pop
inc
add
fldl
xchg
mov
cld
lea
xchg
push
rolb
lahf
mov
add
push
mov
pop
xchg
fisttpl
addb
mov
inc
fdivl
fs
mov
sti
sub
sub
movb
xchg
push
sub
fcmovnu
or
icebp
movb
data16
sub
xchg
sbb
pop
xor
ret
adc
push
ds
iret
lcall
lds
js
jnp
lret
aaa
repz
negl
sub
and
adc
add
add
push
sarl
or
xchg
xchg
into
sub
inc
jmp
adc
cmp
add
test
and
and
fidivrs
pop
ss
mov
xor
add
testb
push
aas
inc
add
mov
inc
add
adc
icebp
cmp
pop
pop
xor
in
push
adc
inc
cmp
rolb
mov
sbb
cmp
jmp
add
sbb
adc
jmp
aaa
sub
hlt
xor
scas
pop
add
pop
jb
jg
data16
stc
clc
pushf
mov
cmpsl
mov
push
adc
pop
popa
movsb
fiadds
add
nop
fcoml
dec
lock
or
lret
call
cmp
sahf
repz
jnp
add
lahf
in
push
fyl2xp1
cmp
cmpsl
imul
stos
lock
xlat
jg
sub
add
call
add
je
std
cld
push
or
sbb
dec
loope
inc
add
rep
out
add
sub
sub
and
out
jbe
mov
es
popa
add
in
imul
sbb
pop
addb
cwtl
leave
data16
lock
jns
stos
movb
mov
push
cmp
aad
xchg
or
imul
inc
add
test
outsb
movsl
jnp
jl
aaa
add
adc
or
nop
ret
das
mov
movsl
test
lret
push
out
negb
jo
add
xchg
inc
decb
sub
dec
sbb
pop
ret
repz
insl
aaa
and
mov
xchg
pop
stos
pushf
dec
xor
imul
mov
dec
push
xor
push
movb
mov
rorb
fadds
add
inc
xchg
dec
idiv
lods
sub
jae
lret
lods
test
add
pop
sbb
xor
mov
das
cmp
lret
adc
xlat
out
outsb
push
or
and
jns
sbb
in
push
mov
add
es
add
or
inc
jns
add
add
mov
push
outsb
stos
cmp
aam
dec
and
inc
add
add
or
xchg
repz
adc
xor
stos
sbb
cmc
dec
repnz
int
mov
add
xchg
divl
add
outsl
pop
adc
in
into
ficomps
sub
cmc
arpl
add
and
cmp
jae
lea
push
clc
movb
add
out
cli
push
mov
add
out
mov
ss
mov
movb
add
loope
add
in
cmp
add
add
push
leave
stos
stos
je
ja
cmp
push
cwtl
jg
movb
jae
lods
xchg
inc
add
add
cmp
add
mov
jbe
scas
xchg
inc
add
ret
scas
pop
adc
pusha
add
xor
or
das
call
adc
sbb
add
mov
sti
inc
add
dec
leave
outsl
xchg
mov
dec
and
mov
aas
mov
pop
push
cmpsl
fnstenv
add
inc
add
popa
push
xchg
add
aam
stos
dec
cltd
lds
fstps
mov
sti
mov
sub
aam
mov
add
lock
call
mov
cmp
sbb
lret
and
nop
dec
lods
imul
sbb
dec
cmp
clc
sbb
into
jp
cmp
mov
cmp
mov
out
cmp
add
dec
fnsave
and
mov
xor
lea
or
test
xchg
mov
pop
adc
sti
pop
jne
add
cmpsl
adc
getsec
cmpsl
mov
cmp
push
jge
les
shl
stos
jno
cmp
xchg
and
mov
xor
pop
and
iret
loop
jne
push
and
les
clc
fdivrl
xchg
mov
mov
add
outsl
jo
addb
mov
xor
addr16
dec
insl
or
pop
fildll
stos
or
add
addr16
mov
mov
movsb
xchg
rcll
adc
push
shll
cmpsb
idivl
add
cwtl
xchg
std
call
pop
mov
ljmp
movb
push
mov
insb
lret
push
jno
jp
stc
pusha
add
leave
in
ret
jle
outsl
lds
push
movb
or
stc
clc
movb
in
repnz
ret
jno
mov
fistpll
bound
cmp
mov
addr16
mov
xchg
sub
xor
xchg
xor
jl
enter
sub
lock
jmp
sbb
pop
mov
adc
add
add
ja
pop
aaa
sub
bound
sub
in
in
push
jne
mov
jle
mov
cmpsb
fs
dec
and
mov
les
jae
test
jbe
push
stc
adc
xchg
aaa
cmp
mov
pop
out
mov
xchg
mov
fs
stos
mov
dec
cwtl
stc
sti
or
notb
add
enter
or
xchg
adc
push
cs
addb
pop
test
add
daa
cmpsb
fwait
or
test
dec
pop
sub
cmc
lcall
add
aad
xlat
insb
scas
addb
stos
faddl
fwait
sub
add
in
jmp
stos
in
jae
imul
scas
xor
icebp
adc
test
popf
mov
sub
add
je
fwait
xchg
inc
add
je
movsb
mulb
and
fiadds
int3
and
or
out
add
pop
xchg
insl
or
aad
jecxz
test
mov
sub
push
or
lahf
fs
mov
addb
push
movb
inc
add
mov
jb
jecxz
cmpsb
std
sub
stos
adc
imul
xchg
arpl
xor
sbb
push
inc
sub
scas
xchg
xchg
mov
daa
rcrl
adcl
push
xlat
fisubrl
mov
cltd
repz
sub
dec
xchg
notl
add
push
sub
loop
inc
movb
aas
or
cmp
cld
imul
inc
add
adc
adc
lds
pop
or
sub
add
gs
mov
in
lret
stos
lea
and
adc
jecxz
shl
jb
mov
imul
fwait
psubd
jge
push
add
xchg
sub
fcompl
dec
mov
mov
push
inc
add
and
or
sahf
test
ja
jg
hlt
xchg
out
sar
bound
js
lock
insl
test
adc
add
sahf
rolb
aas
addr16
dec
push
sahf
insb
inc
add
decb
push
jge
movsb
daa
mov
or
rolb
imul
mov
scas
or
or
xchg
dec
es
cmpsb
enter
lea
add
cld
pop
rolb
mov
mov
add
mov
sbb
cltd
lock
negl
stc
lods
fists
pop
rolb
sub
inc
nop
mov
mov
inc
add
sub
push
add
lds
ja
dec
mov
push
mov
stos
inc
fcoms
xchg
jmp
mov
add
fists
iret
loop
ficompl
xchg
loopne
or
gs
outsb
xor
xor
pop
xchg
mov
out
add
or
in
mov
pop
or
into
data16
stos
mov
add
mov
cltd
movsl
int
arpl
insb
jo
arpl
aam
in
inc
or
add
mov
dec
ljmp
nop
dec
insb
movsl
loopne
fiaddl
xchg
out
push
add
stos
cwtl
addr16
insl
mov
inc
add
sbb
xchg
arpl
movb
pop
fildl
ds
popa
jp
ja
rolb
test
adc
andl
mov
and
lods
push
add
stos
mov
out
rcrl
and
scas
pop
cld
arpl
repz
ljmp
pop
mov
cmpsb
push
ljmp
adc
push
cmc
scas
mov
lock
adc
scas
mov
out
jnp
fcoms
adc
and
push
cmpsb
in
sarb
jmp
leave
loopne
add
adc
clc
sub
or
mov
add
mov
jge
push
shll
add
dec
in
push
pop
arpl
je
movb
add
aas
out
jg
daa
lret
pop
fwait
outsl
pop
jp
xor
stos
cli
fmuls
cmp
inc
add
sub
test
dec
inc
add
pop
mov
inc
mov
nop
jg
add
push
dec
xchg
outsb
and
sub
xchg
inc
add
or
jae
addl
fldt
ljmp
push
add
mov
add
cmp
add
and
add
add
pusha
add
bound
sarl
negl
lods
inc
sbb
insb
cmpsb
aaa
adc
cmp
out
xor
idiv
jae
xchg
repnz
add
pop
pop
push
subl
ret
nop
sub
adc
mov
daa
mov
jg
daa
lds
les
mov
push
adc
test
add
test
dec
ret
test
iretw
jbe
fnstcw
pop
or
push
or
mov
xor
cmpsl
dec
jmp
adc
adc
std
sub
add
push
enter
mov
or
sbb
imul
or
cmp
lea
push
push
xchg
in
loope
add
pop
inc
ror
add
adc
test
pop
pop
addb
xchg
mov
imul
aaa
addb
mull
mov
addb
pcmpgtb
dec
movsl
add
lret
adc
adc
inc
lds
push
out
pop
add
hlt
test
stos
mov
add
mov
push
ja
jns
add
dec
and
insb
div
mov
add
adc
sub
add
cld
movsl
subl
stos
sbb
lahf
cmp
mov
lock
addb
push
jne
scas
mov
loope
xchg
push
add
sub
mov
push
outsb
cmpsb
jecxz
ja
add
mov
xchg
add
inc
rcr
xchg
adc
jnp
in
push
and
insl
adc
addb
jno
add
hlt
mov
dec
icebp
sub
adc
sbb
cmp
mov
into
in
xchg
out
xchg
add
jl
jno
jp
mov
sbb
loopne
jl
ret
mov
mov
popa
movb
sub
add
les
lret
cmc
hlt
push
gs
jmp
fimuls
iret
enter
mov
add
pop
ljmp
hlt
mov
xchg
sub
sub
or
cltd
adc
add
mov
xor
cmc
inc
add
sbb
sti
jns
aas
aad
pop
movb
xor
repz
test
data16
mov
outsl
cwtl
out
jp
add
pusha
add
xchg
or
jmp
cs
mov
dec
cmpsl
pusha
add
push
push
mov
movsb
or
pop
xor
insl
insb
scas
sbb
test
je
into
mov
inc
add
add
in
das
mov
add
pop
xchg
xor
inc
cmc
sti
mov
pop
fisttps
sbb
movsl
scas
mov
add
xor
stc
addb
ja
xor
inc
rsqrtps
add
or
add
testb
into
push
mov
es
out
into
add
mov
inc
add
mov
inc
add
xchg
popa
aam
inc
mov
mov
mov
cs
add
frstor
jnp
lods
repz
sbb
push
add
popa
push
jle
shl
adc
or
dec
das
shll
push
add
insb
dec
data16
jecxz
mov
insb
inc
push
sbb
add
mov
pusha
add
or
inc
add
and
ror
shll
or
cltd
dec
rolb
pop
popa
or
daa
dec
inc
add
add
pop
push
or
cmp
fwait
in
xchg
hlt
pop
sub
adc
ss
pop
popa
xchg
mov
xchg
pop
hlt
cli
stos
sub
and
add
int3
or
add
imul
jb
shrl
add
mov
dec
rcrb
and
or
int3
mov
add
mov
mov
out
pop
dec
sub
hlt
rcr
repnz
fcoms
mov
sar
mov
icebp
call
inc
add
hlt
push
push
add
aad
enter
cmc
add
cltd
jmp
jns
mov
enter
xchg
or
add
add
add
add
loope
push
pop
stos
pop
push
add
mov
add
mov
mov
add
popf
fdivr
insb
or
xor
lahf
xor
in
cltd
aas
xchg
in
adc
inc
iret
adc
popf
pop
inc
pusha
add
push
jmp
mov
cmp
int
lods
xchg
int3
div
aam
add
lahf
mov
mov
out
xor
popa
inc
add
xor
aam
cmpsl
testl
pop
dec
dec
ss
inc
leave
mov
ljmp
cmpsb
out
mov
dec
sti
lret
push
pop
push
ficoml
mov
shl
nop
cli
dec
mov
enter
in
es
das
cmp
mov
add
loope
fisubrl
pop
sbb
ret
pmaddwd
pop
cmpsb
sti
xor
jnp
out
ja
add
pop
mov
mov
dec
push
push
icebp
adc
mov
fistpll
shlb
dec
out
repz
pop
test
mov
add
push
into
cmp
pop
addb
or
lds
xchg
or
mov
and
stos
mov
js
sub
repnz
sub
push
movb
cmpsb
call
int
aam
xchg
int3
repz
cmpsb
xor
add
mov
cmp
add
pop
cmp
les
gs
pop
nop
inc
add
popf
fwait
out
or
insb
aam
sbb
shlb
add
clc
or
mov
add
sub
mov
lods
cmpsb
sbb
and
jno
pop
or
aad
push
sub
jecxz
faddl
daa
mov
mov
stos
jecxz
xchg
scas
push
repz
enter
add
adc
int
fcmove
mov
leave
shlb
dec
in
dec
jl
mov
jns
adc
imul
in
bound
test
jge
jecxz
inc
add
dec
push
sub
push
mov
push
add
mov
outsb
les
jmp
ret
std
cmp
daa
movb
fstpt
dec
into
cmp
sbb
fistpl
dec
mov
imulb
repz
jnp
hlt
jne
adc
add
int3
jae
fnstcw
das
jmp
sub
push
lret
addb
adc
inc
xchg
mov
fisubl
xchg
mov
cld
adc
xchg
sub
mov
mov
test
shrl
cltd
movb
loope
insl
pop
push
aam
int3
xor
cmc
or
loope
or
lcall
mov
jbe
fidivl
and
xchg
mov
pop
into
das
dec
scas
dec
arpl
adc
std
mov
adc
jecxz
and
stc
sub
add
sar
inc
cltd
push
sar
jnp
imul
cmovae
arpl
add
mov
stos
loope
xor
into
mov
jnp
movb
add
and
pop
in
pusha
add
inc
add
pop
mov
cs
cmc
dec
jg
imul
xor
in
adc
in
cltd
lcall
dec
lea
xchg
fmuls
jns
mov
pop
fnstenv
pusha
add
sbb
add
pop
nop
and
inc
add
hlt
or
inc
add
add
add
xor
mov
ret
popa
std
push
nop
jno
add
ret
fs
rolb
xchg
int
cmpsb
addb
cmpsl
ret
push
add
jge
cmpsl
cmp
adc
add
dec
cmc
push
mov
mov
inc
add
add
sti
sub
in
arpl
jl
shl
xchg
pop
adc
fwait
adc
cmp
add
into
scas
int3
jl,pt
es
and
fcoms
jp
sub
popf
je
sbb
pop
lea
mov
xchg
outsl
xchg
pop
push
jp
push
pop
jnp
sahf
lods
pop
sub
adcl
pop
gs
mov
push
inc
jle
adc
ror
loopne
ret
sub
std
xchg
xor
repnz
rolb
add
idiv
lcall
lahf
adc
dec
popf
dec
jno
psubb
xchg
mov
sbb
jb
frndint
jge
xchg
stos
jle
add
lret
bound
js
sub
ret
insl
sub
mov
cmp
xor
push
and
cltd
push
add
adc
lods
inc
add
movsl
scas
addb
sbb
jge
popa
std
jns
add
jno
mov
imul
add
lahf
xor
test
jo
add
lods
aad
mov
xlat
xchg
outsb
addb
xchg
pop
leave
jg
pop
movsl
sub
std
into
mov
inc
add
add
out
cli
or
jae
add
add
cmp
int
loop
dec
adc
je
cmc
nop
mov
mov
push
mov
sub
inc
dec
sub
sbb
imul
fisttpll
jb,pt
and
mov
arpl
push
mov
mov
mov
ss
in
aam
pop
xchg
lea
push
mov
bound
xor
add
das
push
fistps
out
int3
sbb
push
ja
aad
nop
pop
call
sbb
xchg
push
add
add
add
jne
ljmp
sahf
fnstsw
xor
jle
push
call
adcl
js
xchg
inc
das
std
mov
inc
add
fldl
lods
clc
pop
lods
cwtl
sub
xor
add
sub
jo
jnp
xchg
sbb
xor
repz
or
jp
mov
add
mov
lret
stos
call
mov
fisttps
xor
add
and
mov
mov
sbb
mov
jne
mov
test
sub
pushf
pop
call
call
jno
ret
adc
and
jno
pop
test
ret
mov
dec
sbb
sub
cmp
dec
cmp
or
inc
add
and
shrl
nop
lea
mov
mov
mov
cmp
sti
out
in
mov
mov
ja
xchg
push
cs
ret
push
je
xlat
inc
add
add
dec
or
add
push
in
sbb
in
dec
dec
imul
bound
mov
mov
mov
dec
xchg
mov
add
add
push
je
and
popf
cmp
pop
lock
pop
fs
or
repz
jmp
and
xchg
cmp
cli
cmpsl
fidivs
pop
in
push
jnp
xor
or
mov
add
cmp
add
sahf
jae
in
mov
xor
push
jg
add
xor
push
jnp
ror
inc
add
lret
roll
loope
mov
fwait
sahf
cmp
push
imul
out
insl
repnz
and
or
add
lcall
jle
push
xor
in
add
inc
add
mov
dec
mov
xchg
xor
cmp
inc
add
imul
aam
lret
lcall
push
nop
inc
add
repz
stc
incb
jbe
xchg
and
je
xrelease
sub
test
popf
mov
mov
out
test
inc
pop
int
pop
xchg
and
mov
push
hlt
sbb
leave
lcall
out
cmp
adc
fcmovb
add
fwait
sbbl
push
add
enter
bnd
jnp
leave
cmc
mov
jmp
add
sub
and
jo
pushw
and
mov
xor
lods
in
shlb
add
cs
add
insl
test
outsl
pop
or
xchg
iret
rol
inc
add
int
cs
mov
out
ss
out
movsl
pop
sub
scas
xchg
mov
pop
stos
dec
adc
jle
xchg
pop
lcall
lock
and
jns
sarl
sbb
inc
add
out
es
cmp
out
add
jl
subl
pop
ret
outsb
ljmp
fs
sahf
or
xor
outsl
out
lahf
inc
cwtl
cmp
add
imul
mov
xchg
add
add
adc
leave
xchg
stc
xor
test
in
adc
jge
add
fstps
gs
xor
lods
or
cmpsl
jecxz
push
nop
ficoml
pop
fwait
push
or
add
loop
cli
out
dec
inc
add
jbe
imul
add
mov
bound
cmp
sbb
inc
add
jl
aam
sub
xor
movsl
imul
imul
xchg
dec
xchg
and
pop
popa
jp
pop
dec
and
add
inc
lea
lds
popa
pop
cld
sub
push
push
add
xor
add
setnp
push
cli
les
dec
scas
pop
and
ja
into
adc
xchg
add
jo
cmp
push
ja
add
jo
xchg
insb
mov
xchg
movb
jp
rcl
mov
pusha
add
add
add
pop
andl
in
fnstsw
stos
adc
add
sahf
int3
and
sahf
inc
add
ret
add
pop
in
mov
clc
dec
dec
mov
das
test
fwait
jl
test
repz
mov
sub
jmp
jmp
mov
mov
inc
add
andl
sti
jg
subl
imul
bound
rorl
divl
mov
push
add
or
testl
out
pop
cli
xor
cmp
dec
pushfw
repz
xchg
add
pop
xor
add
pop
pop
push
loop
add
test
repnz
xchg
movsl
mov
in
push
ljmp
dec
jp
rcrl
dec
xchg
push
notb
adc
dec
mov
loop
idivl
mov
pop
fs
ds
xchg
loopne
jp
sub
cmp
in
in
out
daa
mov
xchg
lret
aaa
fcom
push
mov
sahf
sub
int3
jno,pn
adc
testw
sbb
outsb
dec
test
inc
cmp
add
xchg
jne
add
cli
js
dec
xor
or
add
add
mov
xor
lds
rolb
push
xchg
dec
mov
xor
jge
ja
stos
pop
xchg
add
mov
pop
addb
cwtl
inc
add
xor
std
jbe
mov
inc
and
inc
rcl
or
pop
dec
and
xchg
stos
into
add
popf
mov
dec
sbb
dec
test
aaa
push
sub
jno
jle
inc
add
cmc
xor
lret
jge
dec
pusha
add
dec
stos
fstpt
inc
es
fstpt
dec
loop
push
add
xchg
lahf
mov
imul
lock
mov
imul
jno
inc
add
xchg
hlt
push
mov
fwait
xchg
mov
pop
pushf
stos
xlat
inc
mov
testl
cli
arpl
push
cmp
cmp
mov
rcll
mov
bound
and
pop
fstpl
mov
cmp
push
shrl
sbb
add
outsl
and
jmp
mov
mov
xlat
mov
loopne
jns
add
dec
pop
inc
add
hlt
jle
add
mov
or
movsl
inc
add
call
loop
pop
pop
mulb
add
enter
add
mov
jmp
add
mov
outsb
adc
rcrb
push
add
lds
push
out
sbb
xlat
dec
mov
sbb
add
popa
push
fiadds
add
dec
popf
mov
xchg
xlat
jo
cmp
cs
mov
stos
lcall
popf
and
dec
xchg
xchg
pop
jl
loopne
daa
adc
jmp
dec
sub
dec
inc
add
jb
sbb
mov
jb,pn
mov
jecxz
sbb
movb
dec
aad
outsb
jmp
das
sti
gs
call
add
push
mov
lods
pop
leave
dec
mov
add
fadds
fdivr
aad
aad
xchg
jns
xchg
pop
nop
add
xchg
or
addr16
int
jne
mov
add
mov
jg
push
xor
in
stc
enter
mov
je
xor
test
mov
rorb
mov
pop
imul
lds
add
mov
in
cmp
add
imul
xchg
mov
pop
jl
mov
jg
adc
in
nop
and
cmpl
les
jbe
movb
xchg
jge
xchg
movsl
xlat
push
fisttpl
sub
movb
xchg
clc
inc
sbb
adc
jnp
fs
add
xchg
out
cld
movb
add
in
iret
ss
iret
repnz
fs
pop
dec
popa
stos
clc
repz
out
jle
push
es
xchg
mov
mov
int3
shll
add
je
mov
ret
jg
push
stos
fwait
dec
cli
out
cmp
add
mov
adc
je
and
pop
cmp
pop
lcall
idiv
mov
jbe
inc
add
add
or
adc
pop
sub
in
in
mov
repnz
add
addb
arpl
mov
dec
addb
add
mov
mov
mov
out
or
ds
iret
pop
call
sub
add
jp
lds
paddsw
inc
add
mov
xlat
les
mov
es
stos
inc
add
outsb
mov
rcrb
insb
out
add
and
data16
push
lods
in
push
add
pop
imul
add
pcmpeqd
sub
lock
cmp
add
les
aas
jg
sbb
add
mov
or
movsb
adc
xchg
rolb
jno
cmp
push
fs
negl
xor
add
mov
add
mov
xchg
adc
xor
mov
stos
das
gs
mov
int3
xorl
add
into
sub
paddw
jmp
jne
push
aam
pop
jge
jg
ss
fdivr
jnp
in
rep
and
mov
mov
sbb
fs
adc
repnz
idivb
mov
lds
divb
stos
mov
xchg
cmpsl
push
shrb
fcmovnbe
add
jne
rcll
pop
and
imul
dec
roll
mov
xor
mov
add
arpl
xor
add
idivl
pop
push
jnp
sti
mov
out
popa
cwtl
lcall
add
loope
scas
cli
iret
xor
jo
inc
cwtl
jmp
mov
pop
movsl
mov
mov
shll
dec
aaa
adc
xlat
jnp
fsubrs
pop
sti
mov
inc
add
ljmp
nop
popf
add
stc
and
add
mov
std
pop
xor
xchg
nop
repz
stos
out
mov
int3
jl
push
clc
push
in
xchg
fbstp
in
fcoml
mov
nop
push
cmc
shl
add
addb
add
mov
ds
dec
ds
adc
cmp
movups
repz
addb
mov
dec
cmp
lret
insb
loop
add
test
das
push
pop
das
out
mov
adc
add
ret
mov
js
in
sub
inc
add
pop
push
or
mov
out
mov
add
add
mov
and
les
mov
dec
test
nop
adc
adc
cmp
add
sub
inc
out
std
stc
pop
push
xchg
sub
xor
stos
mov
add
fiadds
add
jo
dec
xchg
sbb
faddp
and
sub
int
jle
es
jecxz
fwait
lret
std
fisubl
ds
add
lret
lods
cld
push
ja
lods
mov
cmp
or
sti
fdivrl
ss
hlt
stos
jne
pop
enter
add
inc
add
add
rcr
cmp
fucomip
push
not
fwait
mov
push
cli
fnstsw
dec
out
je
add
add
ja
das
ljmp
dec
test
jp
mov
cwtl
sti
xlat
mov
pushf
scas
or
push
aaa
lods
adc
adc
mov
xor
pusha
add
insl
jmp
xor
fwait
xchg
mov
sti
inc
add
popa
sbb
clc
mov
adc
leave
push
hlt
jg
cmp
movl
add
clc
sub
mov
cmc
outsl
push
jge
add
push
ret
pop
xchg
and
in
addb
stos
loope
loop
jp
sbb
popa
cmp
into
in
jne
cs
mov
xchg
mov
aad
and
sbb
cld
xchg
cmpsl
lahf
add
and
into
pop
data16
stc
stc
test
pop
xchg
mov
test
sub
lods
and
ror
mov
pop
fidivs
sub
fptan
sub
cmp
mov
mov
bound
insb
or
or
jno
pop
inc
add
add
insb
push
mov
dec
pop
scas
sarl
popa
xchg
int3
ss
mov
sbb
add
das
dec
lds
push
cmp
daa
add
adc
and
clc
sbb
jnp
xor
stos
jmp
xchg
or
addb
ds
loope
push
cld
imul
jle
add
add
jmp
and
add
pop
or
inc
call
adc
loopnew
add
fucomp
in
aad
add
aaa
adc
xchg
mov
leave
mov
and
adc
add
add
or
lahf
jmp
in
mov
das
inc
add
pop
clc
fsubp
push
ljmp
mov
imul
outsb
pop
xchg
sbb
sub
sub
add
mov
xchg
out
cmp
or
jne
dec
lea
and
pop
jae
add
lret
sarb
loope
pushl
cmpsl
xchg
dec
arpl
movb
push
xor
mov
das
aaa
mov
cmp
pop
cmpsb
and
out
lea
pop
pop
push
testl
sub
mov
pop
addr16
es
mov
add
sarl
cmp
add
lods
outsl
push
adcl
xchg
pop
iret
cmp
loopne
dec
mov
jp
fdivrs
movsb
push
cmpsb
cmp
mov
adc
cmp
push
pop
rolb
test
repnz
pop
pop
nop
cmp
or
sub
mov
in
push
faddl
es
dec
mov
movsb
rolb
mov
mov
add
dec
cmp
stos
int
add
xchg
outsl
adc
mov
mov
inc
jne
add
stos
mov
fcmove
insb
sub
lcall
xchg
lret
adcl
lds
fadds
cmp
dec
jmp
mov
ret
je
rolb
mov
add
and
ljmp
sbb
mov
insb
addb
mov
fsub
push
hlt
jne
mov
rcr
inc
and
push
push
push
add
xor
xchg
xchg
jecxz
mov
jg
fisttps
ret
pop
push
mov
popf
movb
add
jl
pushf
and
push
fiaddl
add
mov
add
loopne
jb
sbb
xor
push
adc
inc
add
xor
and
add
and
rcrb
jg
loope
stos
les
dec
xor
mov
inc
in
or
xchg
dec
test
insl
and
mov
testl
adc
cmp
inc
inc
into
add
xchg
imul
fsubr
add
mov
shll
mov
add
shlb
xchg
sbb
add
xchg
jb
add
mov
or
jno
xchg
jnp
lods
dec
sbb
xchg
dec
adc
xlat
enter
jne
inc
pop
xchg
dec
fiaddl
xor
scas
jns
sbb
in
insl
test
mov
aaa
mov
add
aaa
mov
add
cltd
in
scas
stos
fdivrs
add
sahf
addr16
fdivr
fnstsw
js
xchg
push
adc
sbb
push
dec
pop
jge
inc
add
mov
rcr
out
xchg
test
in
push
mov
add
xorl
hlt
push
cmp
sti
shl
xor
mov
sbb
shr
dec
xor
add
jmp
add
shrb
push
out
and
xor
mov
out
fcmovnu
sbb
sbb
xor
popa
add
lds
repnz
xor
add
push
cltd
jno
add
ds
loope
addb
imul
into
jle
pop
pop
fwait
test
xchg
jno
sahf
adc
mov
imull
add
pushl
mov
icebp
adc
pop
out
pusha
add
xchg
popf
cmp
in
xchg
call
mov
mov
and
insb
je
std
enter
jns
lock
dec
dec
cmpsb
in
cmp
jb
fs
out
or
addr16
aaa
mov
push
cmp
sti
inc
add
ja
insl
aam
adc
adc
and
addb
ret
jge
mov
ret
lret
aad
std
sub
lcall
xchg
add
fdivrl
mov
pop
dec
daa
sti
mov
fimull
aam
pusha
add
ret
mov
inc
add
dec
mov
add
pusha
add
and
addb
ljmp
add
push
mov
mov
add
push
add
jns
mov
xlat
out
imul
je
cmc
daa
popa
ret
mov
mov
sbb
idiv
addb
or
addr16
push
iret
xor
lret
xor
and
jns
mov
inc
cmp
mov
rcl
xor
add
mov
aad
ficomps
add
icebp
stos
aad
push
add
inc
add
nop
adc
mov
add
mov
pop
mov
pop
loop
movsb
stos
test
pop
ja
add
jg
scas
and
add
mov
xchg
sbb
and
dec
or
inc
shr
pop
out
mov
xor
adc
prefetcht1
cli
adc
and
mov
cld
loope
cmp
dec
lods
pop
bound
xor
jns
xor
sbb
cmp
jae
jne
fmull
flds
pop
pop
mov
push
addb
pop
ficomps
mov
pop
xor
movsb
daa
mov
in
pop
sub
mov
inc
add
dec
mov
cmpsb
jns
sarl
in
sti
sub
sahf
sub
enter
jg
int
add
js
aam
pop
sbb
imul
add
and
jecxz
les
das
mov
aas
aam
mov
inc
add
call
aam
push
xchg
ljmp
or
push
decl
rolb
xchg
dec
jae
loope
outsb
lds
leave
scas
xchg
cltd
inc
inc
jle
xor
mov
addb
cmp
sub
sub
mov
data16
addb
sbb
aam
stos
or
clc
cli
mov
push
inc
add
adc
mov
loope
jns
jle
inc
add
add
sbbl
test
jecxz
add
add
xor
ret
out
push
add
sbb
mov
subl
add
add
jno
cltd
out
or
add
and
mov
adc
pop
xor
xchg
or
mov
mov
add
movsl
repnz
cld
cmp
add
add
insb
dec
gs
inc
add
pusha
add
xchg
inc
add
or
repnz
xchg
pop
ja
add
sbbl
adc
push
xchg
ret
movb
in
ljmp
add
lea
jmp
xchg
dec
mov
hlt
push
out
mov
mov
shll
ret
aad
push
popf
cmp
or
and
mov
sub
add
lods
push
add
add
jo
jbe
lock
sub
inc
add
in
push
loope
shrl
clc
lds
mov
xor
add
jnp
lret
and
mov
lods
push
lock
repz
mov
pop
rolb
jo
xor
dec
int3
add
adc
imul
mov
xchg
imul
out
icebp
or
std
adc
popf
pusha
add
or
sahf
adc
dec
inc
add
in
mov
add
stc
leave
stos
pop
stos
imul
mov
push
out
je
add
fsubr
xlat
or
jnp
adc
pusha
add
adc
push
lret
sbb
ret
jnp
into
push
add
ss
enter
add
and
out
lods
cmp
xchg
out
pop
sbb
fs
push
in
push
mov
lods
mov
add
add
add
mov
cwtl
aaa
fidivs
cmp
mov
jp
jae
bound
into
cmc
movb
and
jle
cmp
xor
jg
mov
and
push
xor
jnp
add
clc
out
outsl
mov
mov
sub
cmp
mov
pop
out
add
or
mov
js
les
add
or
push
or
test
adc
dec
mov
mov
test
sar
rcrl
add
out
cmp
jecxz
pop
xchg
and
xor
inc
add
sahf
out
xchg
dec
lcall
nop
insb
jo
xor
dec
in
cwtl
lahf
xchg
add
and
imul
inc
enter
add
cmp
jo
add
push
add
movb
mov
pop
arpl
test
nop
pcmpeqd
aam
inc
add
mov
iret
push
lcall
jnp
into
mov
or
and
das
inc
addb
loope
lea
add
cltd
imul
aad
jmp
sbb
cs
or
and
add
add
call
nop
cmc
and
cmp
or
adc
in
in
daa
jp
cmc
mov
rolb
xor
in
lcall
fsub
stos
cli
jno
sub
jae
jl
sub
add
ljmp
addr16
jl
fstpl
mov
ljmp
popa
xchg
imul
je
jae
int
outsb
push
inc
add
fsubl
sbb
or
dec
push
mov
push
add
lret
repz
icebp
repz
call
mov
loope
inc
add
add
outsl
mov
add
sub
shl
out
jecxz
mov
popf
cmc
inc
add
es
test
fldl
add
lea
popf
cli
ret
dec
into
jne
push
sub
sbb
popa
sub
pushf
loopne,pt
es
sub
adc
shrb
addr16
sbb
ja
shrl
jle
add
pop
mov
add
je
pop
sub
dec
pop
jnp
sbb
inc
xor
or
incl
add
mov
test
mov
push
adc
aaa
mov
fmulp
aaa
xchg
jg
cmp
sar
mov
scas
sub
xor
scas
xchg
xchg
test
aas
int
add
or
pop
ss
std
inc
add
cmpsl
roll
sbb
adc
add
jo
jb
aad
xor
push
lods
mov
jae
leave
xchg
imul
sar
lret
ja
xor
pop
nop
pop
mov
xchg
outsb
push
inc
add
outsl
fbld
pop
icebp
pop
std
imul
addb
mov
in
test
lret
mov
movb
pop
cmp
in
loop
jp
cli
mov
lea
or
nop
mov
pusha
add
pop
push
lods
inc
fadds
lret
pop
and
cld
mov
setno
push
mov
lahf
cwtl
mov
jne
cmp
movb
push
out
je
push
jmp
xchg
std
outsl
nop
add
add
imul
in
stc
test
xchg
int
add
add
mov
xor
daa
adc
mov
add
or
add
add
dec
jnp
mov
push
xor
popa
movb
sub
add
mov
add
add
and
cmpsb
inc
iret
mov
lods
jno
xchg
int
adc
add
xchg
inc
mov
not
cmp
xchg
adc
xor
mov
add
add
and
mov
ret
cmp
pop
loope
es
lret
pop
xchg
mov
mov
add
out
xchg
rcrl
test
sbb
in
jecxz
add
add
xor
iret
mov
icebp
lahf
loop
lods
xchg
cltd
test
mov
push
push
rolb
outsb
sahf
shl
and
add
add
mov
add
fistl
sbb
pop
sub
sti
jbe
lods
fsubrs
sti
cmp
push
shl
inc
data16
test
push
sub
adc
int
ds
add
int
sub
sub
bound
repz
test
sbb
pushf
push
movsb
jl
daa
add
mov
jge
scas
jecxz
or
xchg
and
and
aas
insb
stos
popf
pop
in
mov
push
cmp
mov
test
inc
jecxz
inc
add
loope
rolb
xor
pop
jecxz
adcl
ficomps
push
jns
in
movb
iret
cmp
int
jg
xor
xchg
sub
sbb
sbb
inc
push
add
add
into
mov
lret
scas
push
popa
sbb
mov
pop
cmpsl
mov
jl
std
stc
rcrl
add
sub
jg
cmp
stos
movsl
mov
push
sbb
push
je
mov
push
sbb
fisttpll
dec
clc
pop
addb
clc
cmp
mov
jae
jg
push
add
xchg
in
xchg
mov
lret
lret
cli
cwtl
fcomps
fs
pop
pop
in
and
test
lods
inc
add
movsb
mov
mov
test
mov
push
popa
out
call
sub
add
xor
enter
push
jmp
std
xor
adc
add
orl
mov
push
inc
add
xor
sub
idivl
push
lret
add
sub
pop
adc
sub
dec
repnz
test
test
out
add
daa
push
push
lods
inc
ds
fsts
mov
mov
lods
or
add
loopne
outsl
scas
pop
rclb
push
cli
shl
cmp
fstpt
sti
sar
lcall
iret
mov
add
aas
std
xor
aaa
dec
movsb
xor
sub
add
dec
pop
add
adcl
js
das
cmp
int
leave
push
mov
mov
add
xor
push
lods
fwait
mov
aad
stos
push
sbb
test
add
loop
mov
adc
call
add
sbb
rolb
inc
add
std
ret
cmp
mov
ss
sti
insb
cmpsb
inc
stc
movsl
das
cmpsl
insl
pop
addb
lock
je
xor
xchg
jne
xor
push
mov
add
out
push
mov
dec
sbb
mov
movb
and
and
jne
xor
lcall
movsb
xor
stc
jmp
xor
es
jb
outsb
rol
stos
xor
cli
dec
jb
mov
push
ficompl
adc
jno
mov
test
mov
idivb
jge
dec
popf
out
leave
mov
mov
iret
mov
add
mov
push
add
and
es
stos
ffree
sub
add
add
push
cli
mov
test
out
dec
ja
jb
jne
push
fsubrl
cmpl
stos
add
cmp
adc
mov
fwait
in
add
mov
cmp
gs
jae
push
mov
add
jecxz
xor
add
testb
subl
loop,pt
inc
jmp
or
call
stos
mov
add
sahf
nop
inc
add
in
stos
popf
int
rolb
jb
sub
jae
inc
mov
inc
fcmovne
addr16
bound
pusha
add
in
add
mov
addb
inc
add
push
cmpsb
lret
or
xchg
xchg
aaa
mov
add
add
cmp
push
dec
jle
add
out
pop
push
addb
cmc
in
mov
scas
or
jae
test
inc
add
pop
fwait
pop
mov
inc
repz
xchg
stos
fimull
xchg
inc
add
out
mov
and
push
lret
jb
test
rcr
mov
mov
cmp
int3
fildl
loopne
push
inc
add
call
jbe
test
arpl
outsb
mov
sahf
adc
jp
add
sbb
adc
pushf
imul
fwait
cmpsb
or
push
push
decl
stos
fnsave
inc
ja
jge
inc
ljmp
mov
jmp
test
cmpsb
add
aam
les
jnp
mov
test
in
pop
out
sbb
inc
cmp
ss
jmp
call
adc
push
fnstsw
les
loope
add
or
addb
out
mov
cltd
adc
cmp
data16
in
nop
sub
hlt
and
adc
dec
mov
or
jb
sbb
jl
scas
push
dec
jnp
jno
sub
inc
inc
jg
xor
ror
sub
xchg
add
xor
xchg
in
out
add
add
xchg
xor
push
dec
add
or
outsb
repnz
stc
and
add
sbb
add
ds
add
cmc
scas
pop
data16
outsl
lods
into
pop
insl
js
push
call
pushf
les
adc
out
inc
add
loop
lea
fucomi
or
sbb
pop
fst
out
mov
add
cmpsl
lock
cld
dec
leave
mov
add
neg
xchg
sbb
in
push
aas
fs
in
mov
dec
pop
shl
in
mov
xor
xchg
mov
loope
subl
out
push
out
push
iret
dec
mov
fstpl
jl
push
sub
mov
jae
or
nop
cmpsb
push
js
add
stos
fisubrs
mov
fs
mov
leave
shll
xchg
pop
inc
add
inc
or
fsts
pop
cmp
add
in
fldenv
cs
add
cltd
mov
dec
mov
mov
xchg
movb
test
push
add
popf
pusha
add
pop
addb
push
addr16
movsb
push
xor
sub
cmp
into
sbb
dec
jecxz
mov
cmp
in
sti
sub
jmp
int3
stos
or
inc
dec
and
add
xlat
data16
mov
loope
xlat
jo
add
rolb
ds
cmpsl
mov
add
mov
cmp
mov
push
jne
add
pop
sahf
leave
dec
pop
in
xchg
sub
cmpsl
and
jbe
adc
pop
popa
fiaddl
iret
push
pop
or
jae
lea
movsb
jns
std
movsl
xchg
fsubp
cmpsl
mov
mov
mov
fstps
mov
or
push
adc
out
pop
lahf
jl
add
jmp
add
ret
nop
mov
inc
add
pop
push
jge
or
lcall
adc
out
sbb
and
add
repnz
mov
push
mov
add
mov
sbbl
int3
lret
and
rolb
add
cmp
cmp
insb
lahf
mov
rolb
clc
nop
repz
test
ret
push
sbb
idivb
add
sbb
scas
addb
pop
mov
je
mov
add
insb
cli
mov
out
daa
incb
xchg
fs
cmpsb
xchg
inc
mov
and
xor
or
add
rolb
add
clc
mov
stos
aas
xchg
jne
into
cltd
inc
gs
add
ja
scas
pop
data16
add
in
testb
aad
sbb
pop
cmc
mov
xchg
jge
push
add
adc
lret
sub
mov
out
test
movb
cmp
hlt
dec
lahf
jge
cmp
cmp
sbb
push
push
or
push
sar
fs
lods
inc
call
sub
loop
mov
sbb
push
add
xor
rolb
test
outsl
xor
sub
mov
insl
loopne
xchg
inc
add
int3
inc
add
out
sti
mov
es
addb
inc
add
dec
cmp
hlt
add
mov
stos
add
mov
ja
inc
out
loopne
pop
popa
js
stos
popa
xor
rorb
cli
jns
add
mov
test
jne
testb
cmpsl
js
xor
fimuls
adc
divl
jb
mov
xchg
push
add
mov
aam
add
js
sti
xor
mov
mov
test
sbb
mov
push
mov
ret
add
push
fwait
pop
pop
push
fiaddl
add
xor
push
dec
push
mov
cwtl
stos
jmp
xchg
mov
outsb
pop
pushf
hlt
and
adc
and
jp
lcall
dec
lret
lret
inc
add
add
cld
xor
sbb
lcall
inc
add
xor
push
lds
or
bound
mov
pop
sahf
scas
mov
add
fstpt
xchg
adc
fs
sub
in
mov
enter
addb
sti
pop
insl
jl
std
shr
push
xor
adc
inc
pop
pop
rol
lret
lea
std
cld
jmp
mov
fstpl
dec
xlat
mov
sbb
add
negb
mov
ja
add
adc
dec
push
cmc
jl
jnp
call
loope
in
call
test
imul
add
or
dec
filds
repz
lods
pushf
stos
jns
lahf
or
scas
xchg
mov
pusha
add
xor
inc
add
jbe
or
lcall
in
scas
push
bound
loop
ljmp
xchg
adc
jge
sbb
out
add
sahf
test
push
mov
sub
mov
and
fcoml
sub
fistl
cmp
add
test
insl
xchg
aas
dec
fisubs
mov
lcall
mov
add
jo
and
fisubrl
test
sub
and
inc
add
dec
insl
orl
push
out
adc
iret
mov
fisubl
add
mov
add
jecxz
push
pop
cmp
dec
clc
incl
in
xchg
js
clc
pop
pop
rclb
cmc
push
insb
jecxz
add
fmull
imul
mov
ret
mov
push
xor
dec
adc
pushf
shll
jnp
xor
ret
call
call
std
xchg
push
adc
add
lcall
outsb
shll
pop
lret
movb
add
push
shrb
xchg
test
dec
repz
pop
add
mov
and
ds
push
add
add
stc
sub
sub
jnp
ficomps
popa
das
dec
in
out
rolb
test
fiaddl
add
add
add
adc
bound
sbb
ja
roll
arpl
enter
mov
js
adc
xchg
lods
xor
aam
fdivrl
ret
mov
lods
shll
jp
adc
stos
sti
stos
in
inc
add
push
fimuls
in
pop
push
fists
test
pop
pop
clc
and
mov
push
int3
jge
or
cmc
les
lahf
xchg
fmull
sbb
mov
ret
mov
sti
dec
pop
push
dec
test
cmpsl
mov
pop
and
leave
movsb
mov
push
addr16
add
hlt
and
dec
sub
mov
aad
dec
push
add
mov
pop
pop
ljmp
push
add
adc
add
and
sub
and
repnz
mov
jbe
mov
push
mov
mov
in
in
push
mov
scas
pop
test
jno
mov
mov
add
and
popf
mov
jae
movsb
mov
inc
add
addb
add
mov
adc
xchg
adc
and
push
cmpsl
sbb
dec
mov
pushl
out
std
imull
xchg
pop
inc
popa
add
inc
fbstp
outsb
mov
test
and
ret
xor
mov
push
bound
jae
inc
sti
xchg
push
sbb
stos
jae
add
insb
out
adc
insb
fdivr
dec
pop
pop
xchg
and
sub
insb
fstpl
sbb
add
pop
mov
in
mov
addr16
and
popa
insl
loope
pop
test
icebp
xor
loope
repnz
sbb
lock
and
add
movsl
sarl
aad
add
lock
jle
add
lahf
insl
and
add
imul
test
imul
jg
or
jle
rcrl
mov
pop
lock
out
mov
jl
add
mov
pop
outsb
jnp
out
dec
mov
adc
push
mov
push
cli
incl
scas
or
fmull
push
add
int
adc
mov
push
add
idiv
pop
cltd
mov
inc
lock
add
sub
xchg
adc
shll
mov
add
push
push
push
xor
push
insl
shrb
pop
mov
clc
cli
push
dec
repz
jl
scas
sub
fwait
decb
stc
std
cmp
cmp
pop
leave
sub
divl
xchg
call
into
popf
push
add
and
rcrb
mov
int3
and
das
pop
pop
xchg
aaa
pop
dec
ss
jns
or
sub
xchg
nop
mov
jmp
xor
call
sbb
test
add
add
pushf
test
bound
movl
cli
movsb
dec
movsb
fiadds
cmc
incl
lret
sbb
arpl
xor
lcall
adc
lcall
scas
outsb
xchg
mov
add
lret
roll
movsl
stc
dec
ja
inc
lahf
dec
das
pop
lock
pop
in
jnp
sub
inc
add
add
inc
mov
push
sub
mov
add
and
mov
jo
nop
pop
or
es
clc
lret
in
sub
and
mov
add
inc
add
pop
addb
rolb
add
mov
mov
cwtl
fdiv
pushf
mov
rorb
insb
sbb
dec
push
adc
cli
add
xchg
sub
or
stc
jne
stos
cmpsl
cmc
notl
sub
add
add
add
mov
add
cli
sub
sahf
or
push
test
rolb
ret
sub
and
les
ljmp
jp
sarb
repz
les
daa
adc
std
cld
outsb
pop
pop
loopne
rcll
pop
cld
outsl
mov
inc
add
mov
mov
icebp
in
movsb
sbb
xor
add
sub
rolb
cmpsb
push
out
xchg
push
dec
cmc
mov
inc
add
or
push
cli
jg
mov
movsl
jo
or
fcmovb
sbb
cmc
shll
add
jo
lds
sub
mov
jle
jecxz
mov
cmpl
jns
int3
jp
test
fiaddl
add
add
popa
add
cwtl
sub
jns
inc
add
jecxz
push
add
or
mov
mov
pop
mov
inc
or
jg
xor
int3
clc
fldt
cltd
jns
add
lods
mov
pop
or
sti
inc
add
add
cmpsb
adc
add
add
or
test
movsl
pop
dec
xchg
xor
lcall
or
pop
lcall
xlat
jne
dec
hlt
int
ja
add
xor
sub
add
inc
out
cmp
adc
add
cs
aad
add
repz
addb
sbb
fnstcw
cmpsb
sbb
roll
pop
xchg
inc
movl
mov
aaa
push
stc
mov
pop
addb
sub
popf
sbb
push
push
js
add
xlat
jge
repnz
fistl
and
jp
add
outsl
inc
adc
mov
push
mov
movsl
inc
add
xor
popa
sub
xorl
xor
mov
mov
lcall
push
mov
lods
addb
and
push
mov
lcall
and
rolb
fildll
jle
loop
mov
add
cli
xchg
daa
xorl
xor
cli
jno
add
or
mov
jecxz
daa
mov
int3
addb
push
add
movsb
jg
xchg
pop
push
pop
push
cmp
pop
mov
and
mov
std
ja
xchg
xchg
jge
incl
movb
add
and
in
push
int3
dec
push
adc
add
mov
mov
add
out
cld
insl
jb
add
int3
insl
pop
daa
iret
mov
sub
ljmp
inc
add
cmp
inc
inc
add
push
sbb
push
popf
les
pop
lods
std
or
clc
mov
ss
gs
ret
mov
int3
movsb
dec
adc
test
ljmp
lea
fcomip
adc
xchg
cs
xchg
adc
leave
insl
mov
or
test
rcrl
and
fwait
jns
out
xchg
ffreep
pop
stos
pminsw
cmp
arpl
and
and
inc
popa
or
pop
xchg
pop
addb
aam
sub
mov
inc
add
push
jge
out
inc
pop
fstps
movsl
jg
fcmovb
add
add
arpl
add
imul
pop
or
daa
scas
addr16
lea
movsl
cli
cli
add
mov
cwtl
inc
inc
add
lea
sbb
adc
xlat
push
xchg
gs
mov
loop
push
push
mov
lds
push
test
ds
cmp
imulb
mov
fdivrl
addb
and
inc
add
sti
outsb
add
sbb
push
outsl
lcall
aas
mov
imul
lds
rolb
and
fwait
dec
inc
push
cwtd
mov
mov
stc
dec
sarl
es
sub
add
fmuls
jb
jbe
dec
and
ret
fidivs
add
add
pop
dec
add
repnz
dec
mov
bndstx
aam
scas
adc
in
push
movb
mov
in
xor
mov
add
inc
add
pop
gs
mov
xor
dec
imul
pushf
cmp
dec
or
push
add
jge
add
cmpsl
cmp
add
aaa
dec
jo
and
rclb
cmp
out
loop
scas
sarl
test
and
subl
and
mov
and
add
out
mov
gs
sbb
frstor
mov
add
into
popa
sub
pop
sbb
fwait
adc
push
stos
sub
push
outsl
sub
add
add
push
push
jl
xchg
inc
add
stos
out
push
inc
cwtl
inc
insb
xchg
mull
ret
mov
pushfw
and
mov
hlt
or
scas
mov
ja
test
sti
cs
add
add
shrl
rcrl
jp
dec
repz
add
mov
fstpl
test
in
les
cmpsl
push
imul
inc
mov
push
stc
iret
mov
hlt
jecxz
fldcw
movsb
in
and
popa
call
pop
addb
addb
add
mov
push
sarb
add
adc
mov
inc
mov
inc
add
mov
shll
and
sbb
xor
jae
sbb
push
lcall
aad
xor
sub
loopne
add
inc
push
mov
push
in
or
or
add
push
xchg
int3
aaa
adc
fwait
lret
or
add
push
sub
pop
scas
test
adc
cmp
hlt
pushl
sbb
stc
loope
int
icebp
xrelease
pop
inc
add
jp
jg
adc
enter
movb
mov
std
call
fiaddl
jo
add
sahf
mov
idivb
xor
xchg
movsl
dec
inc
bound
out
and
lcall
mov
xor
call
jle
mov
ret
movb
or
add
mov
mov
in
adc
cltd
mov
xchg
test
push
push
mov
sarl
push
pop
fadds
jge
movl
add
idivl
cld
nop
call
test
dec
lods
add
test
pop
lods
or
pop
lea
repnz
je
icebp
xor
mov
add
or
adc
mov
repz
add
sub
insl
pop
fnstsw
aas
sub
dec
push
mov
and
jb
pop
rolb
xor
loope
mov
testl
add
jns
pop
cs
ret
add
and
int3
mov
js
sbb
sub
add
cmp
test
fdivrs
popf
repz
sbb
imul
mov
mov
rcrl
or
sub
dec
ret
and
out
ds
add
out
mov
movb
call
xor
shrl
addb
lret
fld1
enter
mov
shlb
clc
fmull
push
add
addr16
rorb
inc
add
scas
enter
dec
test
ficomps
fisttps
ljmp
jae
dec
std
imul
and
jae
mov
sbb
fcoms
mov
popf
inc
jmp
add
inc
add
jne
pusha
add
jp
inc
add
in
mov
dec
push
lahf
push
arpl
push
outsl
shlb
aam
int
aam
add
add
ret
dec
xor
mov
add
dec
inc
ficoms
adcl
inc
add
and
push
decb
cmp
into
dec
xor
mov
mov
add
test
rclb
and
jno
psrlw
out
sub
mov
push
add
cmp
add
add
adc
add
in
adc
adc
out
adc
mov
addb
mov
push
mov
mov
jle
dec
xor
stc
cwtl
iret
cmp
push
add
ret
sub
add
daa
outsl
push
mov
notl
push
in
js
pop
xchg
pop
stos
or
push
jmp
cmp
xor
icebp
jns
mov
inc
andl
daa
sahf
fistpll
in
xchg
lock
and
jb
cmp
xlat
movsb
test
lcall
adc
cmpsb
mov
cld
jmp
add
cltd
stos
cmpsb
repz
mov
dec
sub
add
cwtl
repnz
push
cmp
add
movb
sbb
shlb
movsb
xor
add
xor
jnp
push
addr16
adc
inc
add
cwtl
aad
add
xor
jb
dec
pop
add
add
add
movsl
xor
mov
or
dec
fisubrs
push
imul
xchg
jle
jle
pop
jb
rcrl
std
imul
outsl
popa
iret
out
xor
scas
test
movsl
inc
add
sub
jecxz
lods
jp
sti
mov
add
fxch
xor
inc
sub
sub
add
das
cmp
rorl
mov
push
mov
mov
xor
xchg
sbb
pop
stos
fnsave
inc
push
jle
subl
sub
add
mov
pop
addr16
out
js
lods
jo
stc
inc
mov
sub
sbb
addl
mov
cmp
dec
out
out
cli
decb
mov
in
loopne
dec
xor
lock
aas
inc
add
add
pop
lods
mov
add
mov
subl
cmpsl
cmc
pop
cmp
add
enter
inc
add
xchg
cld
cmp
loopne
pop
mov
pop
out
nop
std
mov
imul
lock
add
inc
jp
xor
sub
add
repz
add
lret
dec
insl
adc
aam
xchg
in
xor
iret
imul
ja
sbb
rclb
push
imul
addb
adc
adc
adc
cvtpi2ps
cmp
lods
add
pop
aad
in
jo
xchg
test
xlat
scas
pop
data16
sbb
icebp
adc
cltd
lahf
jbe
insl
lahf
sub
adc
pop
mov
fidivrs
cmpsb
xchg
lods
sbb
aam
inc
out
sbb
adc
sbb
pusha
add
dec
sarl
gs
out
scas
sbb
push
scas
push
iret
mov
add
js
and
push
add
cmp
mov
xor
pop
dec
sarb
add
push
inc
add
jne
ljmp
jl
jb
sub
int3
addb
inc
add
jo
add
xor
shll
notb
jne
adc
clc
imul
je
movsl
imul
loop
test
mov
or
or
mov
in
sub
jecxz
add
std
pop
addb
pshufw
xor
xor
and
or
mov
lahf
adc
scas
adc
add
xchg
adc
clc
lods
popf
aam
add
add
lcall
add
mov
aam
lcall
pop
or
sub
mov
fcomi
je
mov
mov
lds
add
cmp
mov
add
loopne
aad
mov
loope
cmc
mov
add
add
dec
pop
loope
sbb
push
lock
ds
sahf
int
aam
add
jns
insl
cmpsb
cmp
mov
fidivs
fs
xor
mov
scas
jno
lock
cmp
addb
je
icebp
int
mov
aaa
addb
adc
pop
gs
push
add
sbb
filds
mov
movsb
loope
gs
mov
dec
ss
add
push
xlat
repz
dec
in
inc
add
dec
or
pop
mov
adc
and
test
mov
and
fbstp
xchg
jl
lahf
sub
pushw
cmp
sbb
inc
imul
dec
rolb
dec
stos
dec
inc
add
jno
add
cmp
test
add
insb
push
or
pop
addb
int
nop
dec
cmp
rorb
push
mov
add
fcompl
sbb
mov
mov
daa
bound
xchg
or
addb
insb
fucomp
mov
and
inc
ficompl
out
add
repnz
int
movsl
addb
inc
add
pusha
add
int3
dec
ficompl
cmpsl
fmull
stos
fiadds
add
adc
cmp
pop
cmpsb
pop
sub
out
mov
add
jge
int3
pop
push
mov
pop
inc
loope
add
sbb
pop
fs
jns
inc
add
fsubs
out
aas
push
add
idivb
rcrl
mov
popa
sbb
push
jmp
nop
int3
xor
sahf
movsb
jl
clc
mov
int
cs
popa
test
call
dec
and
daa
jns
decl
push
add
movsl
mov
mov
cwtl
in
push
lahf
js
xlat
pop
js
mov
pop
and
cld
into
dec
icebp
scas
or
xor
je
mov
in
addr16
in
vpcmpgtd
jb
icebp
shll
inc
add
scas
pusha
add
pop
add
cmp
stos
shll
setnp
out
clc
addr16
cmp
add
cmp
cmp
or
pop
inc
sbb
out
sbb
lods
adc
out
cmpsb
stc
shl
add
add
pop
jb
jae
cmp
xor
pop
mov
in
pop
ficomps
test
mov
or
ficomps
test
jecxz
cld
and
xchg
out
in
lcall
pushf
jbe
sbb
cmp
inc
jae
in
and
sti
and
inc
in
fcoms
mov
jb
das
hlt
repnz
push
aaa
xor
mov
mull
jne
es
add
ret
cs
add
stc
stos
push
aad
insl
in
adc
add
pop
fdivrl
lods
seta
adc
cmp
in
adc
add
daa
and
dec
mov
dec
je
pushf
and
add
push
inc
adc
loopne
push
les
mov
xlat
push
inc
xchg
add
stos
repnz
je
add
dec
ret
aas
or
insb
adc
xor
mov
clc
xchg
sahf
lret
add
and
add
addb
rolb
lods
lcall
nop
xchg
push
push
out
jns
rolb
sub
jg
jno
add
add
add
dec
xchg
lods
and
cltd
test
sar
mov
enter
imul
popf
pop
sub
mov
xor
fistl
pusha
add
mov
xorl
sbb
fwait
int3
sbb
insb
sbb
mov
lea
add
xchg
ret
hlt
je
jno
push
and
sbb
and
iret
jge
loopne
movntq
out
test
out
jg
inc
or
pop
int
cltd
push
cwtl
push
jne
add
iret
inc
leave
push
pop
mov
rolb
pop
pusha
add
jae
hlt
fnstcw
fsts
add
aas
dec
test
loop
add
add
addb
in
inc
scas
jmp
push
ret
xchg
mov
int
xlat
insb
and
push
xor
and
mov
add
pop
fsubs
mov
ret
addb
sbb
fidivl
dec
sub
dec
mov
les
popa
dec
and
or
cmc
or
cmc
sbb
mov
cmp
xchg
inc
add
mov
addb
pop
mov
mov
push
add
fcomip
popf
lds
mov
jge
xor
mov
xchg
and
dec
loope
lea
xlat
push
cmc
mov
mov
cwtl
push
insb
iret
repnz
push
push
outsb
cmp
cmc
ljmp
dec
jo
mov
stos
scas
inc
add
jl
inc
rorl
mov
cmp
mov
ret
pusha
add
push
je
std
push
rolb
je
mov
add
pop
mov
ja
pop
in
or
test
sbb
scas
je
jge
stos
aam
add
pop
out
push
addb
inc
mov
pop
das
aaa
pop
iret
rolb
add
sub
iret
push
sbb
ret
stc
push
aaa
mov
add
inc
add
sbb
xchg
adc
adc
push
lods
sti
xchg
sub
add
jae
xchg
jg
mov
sbb
insl
sbb
jne
stc
mov
movb
aaa
fcmovbe
addr16
outsb
lahf
sub
call
lods
data16
dec
fbld
in
cmp
hlt
das
stos
sub
inc
add
cld
lea
inc
add
inc
jge
xchg
adc
in
out
fcomps
and
push
and
adc
mov
shll
daa
ja
and
les
mov
imul
dec
enter
xor
dec
jecxz
fcomps
sub
xchg
scas
push
mov
aam
fsubl
pop
xor
jl
outsl
in
fmull
inc
add
add
ret
dec
xchg
sbb
add
cs
and
mov
enter
and
enter
push
add
sub
xorl
lahf
in
mov
add
cwtl
xor
aaa
xor
mov
or
fs
insl
dec
insb
xchg
add
imul
int3
rolb
xor
mov
ljmp
add
iret
and
fstps
mov
xor
xchg
std
mov
mov
outsb
push
addb
jns
mov
add
out
add
mov
push
add
movb
add
mov
std
imul
shrl
push
int3
mov
cmp
add
fildll
mov
out
sub
xor
int
stos
es
rcrl
add
add
cmp
aaa
sbb
outsl
xchg
ret
add
vxorps
pop
testl
adc
jecxz
jmp
xor
test
iret
or
fcoms
loop
leave
fmuls
mov
jbe
rolb
ljmp
aam
xchg
push
aad
negb
mov
pop
inc
add
add
mov
insl
outsb
push
int
rolb
std
addb
cs
aas
repnz
mov
xchg
push
inc
popa
cmpsb
fcmovnu
mov
dec
ds
es
jbe
cltd
addb
add
or
xchg
std
popf
leave
and
std
dec
in
fs
add
and
imul
cld
bnd
xchg
adc
out
aaa
dec
adc
sub
mov
inc
daa
pop
cld
pop
and
xor
inc
dec
mov
pop
and
push
jle
and
dec
mov
cs
es
push
gs
dec
cmp
mov
rcrb
dec
lods
pop
je
mov
adc
jo
cmp
xchg
rolb
lods
dec
cmpl
js
mov
dec
add
jns
imul
sub
lahf
out
jmp
negb
enter
add
fwait
inc
add
sbb
jns
mov
pop
push
add
xchg
lea
movsb
aas
cmpsb
js
jmp
hlt
xor
and
push
fs
cli
cs
daa
mov
add
fadds
lods
jg
jmp
out
rolb
gs
xchg
push
js
adc
das
mov
sbb
add
cwtl
movsl
sub
xchg
lds
test
dec
addl
adc
mov
mov
mov
out
cmp
mov
lea
in
pop
ljmp
xor
sub
data16
ss
rolb
insl
dec
mov
and
add
fsubr
out
mov
sbb
out
std
mov
mov
shl
inc
add
mov
invd
stc
punpckhwd
add
daa
repnz
pop
inc
or
add
shl
push
jns
imul
scas
cmc
addb
popf
pop
rcll
fsubs
lock
adc
sub
popf
mov
das
mov
push
xchg
cmp
add
clc
or
dec
aad
mov
adc
mov
add
add
jnp
push
dec
xlat
movsb
lret
loopne
call
fstps
stc
ss
in
mov
addb
ss
xchg
dec
sbb
cmc
fbld
mov
push
mov
inc
add
int
or
pushf
sbb
in
nop
add
cli
xchg
in
add
push
dec
int3
push
xchg
and
clc
mov
mov
out
scas
jmp
fwait
pop
lcall
inc
pop
pop
xor
push
loop
clc
or
push
daa
adc
in
mov
jae
out
sahf
push
ds
dec
fs
inc
ret
shr
hlt
enter
daa
push
mov
shlb
add
imul
cmp
cmp
mov
rcll
int3
divl
cmp
cmpsb
dec
lock
daa
sbb
add
mov
push
test
inc
loope
aas
fdivrl
add
fwait
mov
fists
push
sub
jg
pop
aam
addl
addb
mov
sub
add
lods
mov
loopne
repnz
test
sbb
sub
test
lahf
mov
popf
shr
jl
flds
and
mov
insb
add
in
xor
test
repz
lea
fucomi
push
pop
inc
add
xlat
inc
add
add
addr16
push
add
mov
xchg
cld
jbe
jb
inc
add
movb
cmpl
mov
push
cltd
jns
popf
inc
add
and
mov
push
leave
jae
test
adc
insb
cmp
arpl
jecxz
fistpl
inc
in
int
jmp
mov
pop
outsl
bound
test
mov
add
inc
loope
test
outsb
cmp
push
mov
jb
inc
add
mov
inc
dec
fnsave
ds
fists
push
xchg
push
ret
mov
adc
inc
pop
stos
loopne
add
or
adc
scas
adc
imul
mov
add
and
xchg
ja
mov
push
bound
inc
cli
jno
add
fs
subl
int3
loopne
add
stos
lret
cmp
jmp
in
add
lcall
aad
stos
lea
mov
pop
mov
dec
repnz
test
sub
pop
cmp
sti
outsl
data16
ds
das
add
movsl
addb
xchg
rolb
std
inc
add
ss
subl
call
cmp
xor
pop
dec
inc
add
mov
jl
leave
je
fwait
mov
inc
add
iret
add
jae
jne
inc
data16
imul
xchg
faddl
push
aas
push
add
cmp
add
push
imul
push
imul
xchg
out
jne
je
or
inc
cs
out
loopne
aaa
and
in
push
mulb
inc
inc
test
enter
std
mov
into
mov
loopne
cltd
test
outsl
jge
xchg
push
sbb
in
icebp
inc
add
leave
xor
outsb
insb
popf
push
sub
or
outsb
aaa
pop
popf
test
movsl
and
repnz
dec
loop
mov
and
shlb
fldcw
add
shl
and
inc
add
pop
daa
add
mov
or
popl
add
int
dec
insl
icebp
pop
push
daa
jg
and
and
in
push
sub
xchg
pop
icebp
je
push
add
mov
call
dec
pop
aas
mov
mov
sub
stos
js
jb
loop
add
test
xchg
ljmp
repnz
out
hlt
je
clc
sahf
addr16
popf
xchg
lods
fsubrl
mov
add
adc
pop
cmp
ds
cmp
xor
xor
adc
pop
jmp
lahf
dec
repz
jno
inc
mov
test
test
add
les
mov
imull
add
insb
addb
rclb
stos
xor
jns
test
enter
fdivl
add
cmp
add
mov
fldl
adc
bound
aad
add
sti
pop
sar
loopne
cli
idiv
addb
and
push
int3
xchg
add
push
addb
pop
ret
std
rolb
add
dec
cmp
imul
xor
popa
lcall
jge
mov
xchg
sti
popl
test
adc
icebp
lcall
add
pop
nop
add
cli
gs
test
iret
push
aas
sub
lods
negb
add
or
inc
adc
push
movb
jno
sbb
lds
jno
lds
arpl
and
rolb
mov
push
inc
add
jp
aad
add
mov
mov
push
pop
jbe
add
inc
mov
push
pop
lods
hlt
sub
pop
out
into
mov
dec
shll
add
popf
jecxz
fcomip
enter
xchg
mov
clc
jle
pop
int3
fstpt
cmp
rolb
xchg
rorb
xchg
inc
add
add
movb
sub
add
cmp
adc
sbbl
and
xchg
or
jne
mov
pop
pop
jb
inc
add
xor
mov
daa
insl
push
push
inc
add
mov
popf
mov
lea
dec
ret
sahf
mov
test
or
cmpsb
out
pop
hlt
adc
bound
addb
fsubrl
repz
mulb
xchg
insb
or
add
push
jb
aas
push
pushl
pop
mov
mov
add
adc
add
loopne
testb
add
rolb
iret
lea
stc
jb
cmpsb
push
xchg
push
cmc
jae
lock
add
xor
add
push
add
mov
sbb
sbb
ja
sbb
inc
add
adc
push
jmp
mov
dec
adc
or
pop
mov
jbe
cwtl
mov
fwait
js
out
scas
dec
push
jge
push
shl
sti
pop
test
gs
ljmp
mov
cltd
or
addb
je
popa
pcmpgtd
adc
inc
add
les
push
jmp
iret
pop
pop
sub
cs
mov
add
daa
imulb
rorb
shlb
mov
jg
or
addr16
add
pop
loope
cmp
jle
and
cmp
cmp
add
sbb
test
gs
mov
mov
xchg
sbb
cmc
fsubrs
fidivrs
adc
and
adc
aas
add
subl
pop
pmaddwd
jg
dec
inc
or
fdivr
mov
cmp
add
imul
inc
out
and
ja
movb
jge
xchg
movb
popa
sbb
add
push
cmp
into
jnp
cmp
rcl
pop
sarb
dec
sahf
xor
fcmove
cmp
pusha
add
cmp
mov
sub
mov
cmc
cli
xor
push
cmpsl
dec
int
cmpsb
shlb
push
mov
add
popl
xchg
insl
xor
or
add
mov
push
insb
lods
or
fnstsw
add
shr
mov
adc
shlb
jbe
ret
in
jno
lds
dec
mov
sub
push
dec
xchg
les
xchg
xor
mov
cltd
jo
cmp
adc
xchg
leave
lret
outsb
inc
out
fs
mov
movb
lea
mov
dec
pop
imul
shll
dec
je
adc
mov
add
arpl
add
int
rorl
ficoms
or
adc
outsb
jl
and
repnz
bound
fs
add
xchg
add
xchg
add
insl
sbb
xchg
lods
cmp
test
stos
jecxz
add
xchg
in
dec
sub
repz
pop
pusha
add
fidivrs
dec
xor
mov
aam
and
loopne
or
fldpi
pop
loop
or
lea
das
cld
out
xor
mov
cwtl
shrb
and
sbb
lcall
int3
popf
pop
push
add
rol
add
movb
mov
add
gs
xchg
xor
add
into
push
xorl
js
mov
push
pop
test
fld1
ja
sbb
pop
dec
divb
fcomp
or
mov
dec
enter
xorl
aam
std
lods
cmp
cmp
add
pop
xchg
ljmp
out
std
and
mov
ret
pop
pop
out
mov
fcmove
mov
mov
ret
add
daa
fistpl
jb
bound
pop
mov
outsl
ljmp
push
movb
imul
test
push
rcrb
pop
movb
add
les
pop
cmpps
sub
xchg
mov
inc
ret
sub
adc
ljmp
dec
arpl
shl
arpl
adc
cwtl
or
mov
je
stos
jmp
cwtl
pop
inc
pop
adc
pop
or
jg
add
sub
andl
ret
nop
movsl
mov
and
xchg
ss
loop
mov
cmp
xchg
adc
test
and
nop
inc
add
xchg
push
push
mov
shlb
mov
rcrl
push
mov
xchg
jb
xlat
popf
pop
insb
lret
sahf
js
imul
xchg
inc
add
in
jmp
dec
imul
inc
pop
xchg
lock
nop
jg
mov
or
push
add
out
lea
ljmp
add
add
fimull
scas
mov
add
ds
sahf
push
lods
push
push
mov
dec
orl
add
aas
imul
xchg
or
rorb
into
imul
out
es
inc
add
out
lods
pop
ja
xor
rorb
sbb
add
sub
insl
and
xchg
lahf
jmp
bnd
dec
and
cltd
cmp
and
pop
ds
xor
ficoml
ss
rolb
iret
xor
adc
pusha
add
add
divl
addb
jl
mov
call
scas
out
dec
cmpsb
nop
clc
int3
iret
stos
sub
add
add
pop
addr16
add
mov
sub
movsl
shlb
and
loopne
add
stos
push
mov
sbb
add
add
fisttps
inc
movsl
addr16
add
aam
stc
imul
fistpl
push
dec
lock
test
push
xor
sarl
test
addb
dec
inc
and
fnsave
sbb
js
test
mov
pop
bound
fwait
xlat
incb
and
enter
mov
add
int
in
out
ss
xor
dec
rolb
push
xchg
sbb
jg
js
imul
out
ret
jno
mov
dec
add
or
shrl
aaa
adc
add
jmp
or
lret
mov
jp
push
lods
xor
lret
mov
pop
in
roll
push
add
ficomps
pop
pop
cld
fstps
add
loop
lock
xor
loop
sbb
add
or
aaa
insl
loopne
push
aas
rolb
dec
jp
mov
or
dec
inc
addb
aas
mov
add
loopne
div
pop
sub
call
int3
shll
cmc
testl
out
mov
sti
imul
add
cmp
loop
imul
adc
inc
add
push
mov
xor
xchg
and
push
das
push
dec
mov
jmp
add
cmp
jb
inc
add
mov
inc
rolb
popa
fisttpll
sub
and
add
cmp
int
ja
add
adc
mov
adc
fs
mov
loop
shrl
add
jmp
xchg
cmp
inc
add
and
push
add
dec
cmp
in
sub
outsl
mov
cmp
out
push
mov
test
cmp
dec
adc
dec
add
out
cmpsb
sti
push
adc
jp
add
push
push
cwtl
or
inc
add
add
xor
add
jb
add
push
pushf
dec
mov
jp
pop
jp
inc
add
inc
add
int
jno
lea
push
mov
shl
xor
outsb
push
cmp
jmp
cwtl
mov
je
jmp
stos
jno
add
sub
mov
in
add
xchg
push
xor
push
test
inc
dec
add
call
stos
std
add
cmpsb
and
lds
aam
sub
add
nop
jg
mov
fldl
add
neg
test
add
add
dec
clc
cwtl
sbb
inc
add
sti
xor
aam
test
enter
lds
hlt
out
nop
mov
ljmp
iret
cmpsb
loop
popa
or
xor
add
ja
fildll
shrb
cmovno
outsb
cld
stc
pop
dec
jno
and
dec
and
imul
push
add
and
cmp
ss
xor
popf
dec
or
push
aas
xchg
mov
dec
adc
adc
add
cmpsb
or
insb
adc
xchg
inc
lahf
push
loop
int3
adc
pop
into
fwait
lcall
cmpsb
in
stc
cwtl
inc
add
cltd
ljmp
inc
add
xchg
push
out
cmp
pop
mov
add
ss
fbstp
inc
dec
inc
add
dec
cmp
pop
pop
stc
pop
push
cs
push
jge
lock
call
fimuls
add
mov
test
jecxz
mov
sahf
jae
les
add
int3
and
push
lock
filds
or
add
mov
fwait
movsl
rolb
xor
outsl
or
dec
or
jno
mov
xchg
or
inc
mov
test
push
popf
fisttpll
xor
popa
lcallw
xor
in
inc
add
aam
dec
lahf
jmp
jno
dec
fnstcw
adc
shl
cmp
and
add
adc
pop
int3
inc
add
adc
pusha
add
cmp
and
add
inc
es
scas
xor
cmc
pop
mov
scas
cmp
bound
sub
ljmp
out
sub
xor
rcll
add
lahf
punpcklwd
or
fistps
mov
mov
pop
mov
fisubs
pop
test
ds
jl
int3
xchg
adc
aad
sbb
daa
lds
div
lods
lcall
lret
push
pop
bnd
xchg
or
cmp
adc
in
adc
lcall
jl
cltd
sbb
pop
mov
xchg
pop
sbb
add
and
addb
add
movb
add
xor
add
test
push
sub
insb
push
pusha
add
xchg
outsb
push
xor
jmp
cmp
pop
dec
sub
add
imul
push
repz
scas
movsl
gs
test
add
lret
jo
sbb
push
xor
mov
in
push
fwait
in
addb
mov
sub
sub
mov
xor
add
pop
daa
pusha
add
in
into
mov
imul
outsl
addb
rcrl
out
repnz
popf
sub
int
and
and
mov
add
xchg
push
cmp
fnsave
mov
leave
insb
cmp
adc
pop
rcll
add
cmp
lahf
adc
call
dec
pop
jge
or
loop
test
sub
pop
jno
push
add
add
jmp
rcrb
jne
lock
fs
lea
add
pop
cld
mov
pop
xchg
cltd
jno
jno
add
fdivp
jns
mov
bnd
inc
add
sbb
in
adcl
mov
mov
out
xchg
mov
test
cmp
add
mov
or
ja
add
or
adcl
mov
dec
fwait
ret
add
inc
clc
je
mov
xchg
ret
flds
imul
mov
add
std
stc
test
cmp
cmp
jl
imul
cmp
fcomps
pop
lods
mov
add
add
mov
mov
mov
push
pop
arpl
inc
add
pop
fisubl
add
push
cmc
sub
add
push
add
inc
add
aam
pusha
add
les
test
leave
xchg
mov
sti
andl
add
in
outsb
out
lret
xchg
pusha
add
mov
xchg
sub
pop
pop
in
jne
data16
inc
add
sub
mov
sti
aas
repnz
imul
stos
aas
pop
pop
or
pcmpgtw
aad
jne
push
mov
test
neg
addb
iret
ljmp
pop
dec
mov
adc
fcomp
and
add
push
fucomi
in
mov
push
rclb
jmp
daa
pop
or
add
insl
ds
mov
outsl
es
lcall
sbb
sub
cmp
mov
pop
push
sub
outsl
mov
jb
mov
sub
mov
in
mov
int3
movsb
jle
push
pop
jns
add
lods
dec
xchg
adc
jns
inc
scas
pop
loopne
ja
lods
add
ljmp
pop
hlt
in
inc
xchg
lcall
je
inc
add
xor
lods
negl
dec
xchg
stos
out
enter
je
lods
in
divl
lods
test
sbb
xchg
mov
int3
adc
fdivrl
push
lcall
push
or
filds
add
adcl
add
pop
incb
add
dec
cmp
push
mov
sqrtps
aaa
xchg
jae
add
mov
stc
cmp
mov
adc
add
mov
pop
icebp
rolb
je
outsb
gs
or
addb
push
imul
add
adc
cmp
xchg
or
jnp
fdivrs
out
pushl
sbb
daa
pop
lock
dec
movsl
out
jno
test
xor
js
add
fwait
mov
in
repz
repz
clc
fldt
add
scas
sbb
add
adc
lods
xchg
mov
jg
pop
jbe
stos
ret
xchg
popa
push
mov
sarb
insb
inc
add
mov
mov
xchg
pop
sub
jnp
sbb
out
jp
out
mov
leave
dec
push
dec
pusha
add
cmp
shrl
adc
loope
sbb
fwait
outsl
scas
lock
sbb
add
dec
int
dec
lds
pop
addr16
and
pop
movsl
and
sub
inc
add
out
pop
mov
add
lcall
out
push
cltd
das
nop
out
add
jecxz
sub
jnp
out
add
das
pusha
add
out
mov
stos
xchg
mov
push
jbe
std
lds
mov
ret
loop
fdivrs
dec
gs
jle
push
inc
push
sbb
dec
hlt
push
stc
add
jmp
into
in
les
aaa
popf
xchg
jmp
call
pushf
push
ret
enter
push
jle
cmp
je
dec
fldcw
fwait
xchg
je
ds
jae
sub
jns
fsubl
add
inc
rolb
pop
ja
and
out
loop
loope
dec
in
mov
push
or
adc
int
loopne
push
pop
mov
adc
inc
add
jl
hlt
ds
sbb
mov
call
leave
into
adc
jge
mov
decl
insl
mov
js
pushf
jg
pop
sub
mov
add
cmpsl
ss
add
push
dec
lret
inc
cmp
jb
clc
mov
leave
pop
mov
jne
aad
mov
add
addr16
sub
xor
roll
push
push
push
add
inc
add
loope
xchg
test
add
lret
jbe
mov
fildl
mov
addb
sub
push
lods
pop
cmp
out
cs
js
enter
es
movb
adc
add
xor
or
cmp
ja
xchg
int
add
insl
xchg
negl
je
stos
dec
clc
cmpsb
scas
cwtl
outsb
dec
fists
inc
add
sub
mov
ret
add
ds
fistl
lret
aaa
hlt
ljmp
fmuls
loope
jns
fldcw
add
adc
jbe
jnp
cli
xor
inc
in
fldz
xchg
sbb
pusha
add
adc
xchg
repz
xchg
cmp
jb
jmp
stc
nop
and
inc
add
das
push
sbb
ds
jl
pop
jmp
shll
pushf
leave
push
sbb
fwait
dec
gs
lds
or
out
lods
jo
dec
jp
and
je
inc
fnsave
repz
add
cli
cmp
daa
lret
push
out
cmp
movsl
fucomip
push
push
hlt
test
cs
loop
pop
push
add
jo
sub
mov
aam
nop
jge
bound
adc
pop
shrl
or
push
add
mov
test
xchg
insb
cmp
xchg
repz
shlb
dec
sti
pop
les
xlat
cmp
push
cwtl
into
jns
aam
sbbl
sarb
leave
mov
sub
mov
lds
sub
div
or
jp
add
xchg
mov
sahf
pop
jecxz
add
stos
jmp
adc
mov
inc
inc
add
add
gs
pop
inc
add
aaa
xor
scas
in
and
test
cli
arpl
push
adc
mov
sbbl
or
mov
mov
rolb
fidivrl
ret
cwtl
xchg
adc
movsb
lds
add
cmp
out
stc
push
push
mov
adc
subw
add
mov
xlat
mov
int3
push
repnz
repz
in
pop
test
mov
sub
mov
loop
out
rclb
pop
dec
jmp
jmp
imul
movsb
das
cmp
or
rcrl
cmp
add
aad
adc
aas
cltd
xlat
loopne
push
dec
addb
xor
add
push
inc
add
adc
jns
fwait
xchg
fwait
xchg
aam
jl
pusha
add
enter
and
mov
out
pop
or
mov
nop
mov
lahf
stos
add
in
aas
addb
add
rorl
scas
inc
add
sub
pop
mov
mov
add
test
dec
imull
wbinvd
into
sub
movb
cld
jns
stc
int3
cmpsl
imul
jecxz
adc
add
jne
inc
add
aam
or
xor
repnz
mov
ds
cwtl
outsl
xchg
inc
add
jnp
mov
pop
jo
mov
push
ljmp
cmp
pusha
add
mov
mov
mov
or
std
in
jge
popf
lds
mov
addr16
out
dec
movl
ret
pop
dec
lahf
leave
and
jmp
mov
add
mov
jb
gs
sbb
mov
fs
gs
sbb
mov
push
or
les
out
xchg
mul
test
fsubr
cmp
in
cmp
pop
rolb
pop
ret
pushf
inc
add
pop
pop
clc
andl
pop
movb
mov
das
pop
rcrl
jg
mov
ficompl
imul
rolb
add
fdivr
adc
fadds
cmpsb
loop
and
mov
fmul
fwait
adc
pop
and
lock
mov
add
call
into
rcrb
jmp
fcomps
fsubrs
aaa
stos
fucomip
jno
pop
pop
mov
jl
popf
mov
pop
gs
mov
dec
xchg
pop
mov
jns
push
cmp
add
roll
icebp
insl
frstor
imul
lds
jnp
fimull
sbb
or
test
insb
add
js
xchg
mov
ret
mov
outsb
xchg
mov
mov
out
loop
cld
dec
fnstcw
mov
mov
mov
sbb
add
fdivrp
out
addb
out
jge
pusha
add
mov
scas
test
addr16
cmp
cmpsb
repnz
mov
inc
add
mov
fcmovnbe
imul
addb
cmpsl
enter
cld
dec
inc
add
subl
mov
movb
pop
in
or
lods
cmp
add
push
mov
dec
aas
inc
add
fsubs
stos
adc
jno
adc
mov
sub
mov
jnp
cs
enter
xchg
xchg
adc
test
add
sub
adc
push
dec
mov
and
ss
mov
add
adc
add
mov
lahf
lods
pop
ss
mov
mov
mov
and
addb
push
adc
cmp
sbb
loopne
add
push
rolb
add
test
mov
xorl
and
add
imul
mov
xchg
fisttpll
call
and
and
aad
sahf
cs
mov
adc
mov
mov
jg
dec
push
add
adc
jge
cmpsb
mov
sti
push
push
cltd
in
cmp
mov
xchg
hlt
pop
xchg
stos
cmc
inc
fs
out
add
mov
repz
pop
shrb
mov
mov
dec
negl
jnp
enter
lahf
fisttpl
jle
add
adc
adc
inc
add
add
xor
or
mov
ret
pop
inc
add
sbb
out
ficoml
lock
jle
jnp
adc
cld
fnsave
mov
pop
add
pop
jecxz
clc
fnstenv
dec
sbb
imul
dec
cmp
mov
neg
or
lods
pop
subl
jecxz
xchg
lret
into
outsb
push
clc
incb
pop
mov
mov
arpl
psubsw
xor
push
and
pop
push
jge
idiv
xlat
adc
or
push
mov
dec
loopne
jns
add
lds
mov
dec
push
and
mov
pushl
cwtl
cmpsb
push
test
sbb
enter
lret
cmp
xor
rolb
xor
dec
jbe
popa
mov
lret
mov
cmpsl
jl
mov
ret
jo
or
and
pop
or
inc
je
add
fisubrl
out
lea
pop
xchg
aad
loop
je
jecxz
dec
push
popa
jb
mov
add
mulb
pushf
lcall
or
mov
loopne
ret
inc
and
ljmp
mov
cmp
cmc
jns
in
or
lcall
add
pop
inc
add
dec
fistps
test
add
or
inc
add
out
mov
ss
loope
popf
dec
cmp
push
pop
aaa
aaa
rcr
ficoml
inc
sub
cmp
mov
mov
jno
ret
xchg
cmpsl
fcmovnbe
add
adc
dec
call
lcall
jne
addr16
je
aas
add
add
add
xchg
ljmp
lret
jge
ljmp
dec
mov
ret
aaa
inc
mov
adc
shl
movsl
int
sub
fmul
mov
sub
add
jmp
dec
inc
add
pop
pop
fists
aad
dec
adc
and
mov
nop
pop
sbb
jmp
cmp
movsb
lea
call
pop
imul
cmpsl
pop
fmulp
nop
not
add
mov
fmuls
lret
test
push
out
data16
cmpsl
mov
push
ss
stos
ja
lock
adc
aam
mov
xor
sub
outsl
xchg
add
jno
ror
sbb
sarl
testb
xchg
jns
stc
clc
jg
mov
inc
mov
je
adc
push
cli
imul
addl
add
popa
mov
dec
stc
addr16
dec
adc
or
gs
add
mov
cltd
mov
lea
jg
sub
in
adc
sub
or
hlt
rclb
es
dec
jmp
lods
xchg
movb
mov
aas
mov
xor
lods
sbb
push
add
arpl
jb
sub
add
dec
out
rcl
outsb
test
hlt
push
dec
push
add
pop
push
dec
arpl
add
test
inc
add
aam
push
out
xor
hlt
nop
mov
mov
add
push
rcrb
test
insb
es
mov
daa
addb
adc
aas
mov
add
mov
aad
fdivrs
mov
sti
mov
lret
out
fs
fs
sahf
dec
mov
add
mov
out
popf
es
test
cmp
mov
inc
add
in
cli
or
jg
jecxz
xchg
mov
add
or
pop
repz
nop
es
add
lret
jns
push
jns
mov
push
sub
mov
lcall
and
add
pop
cmc
insb
mov
imul
push
inc
add
xlat
or
ljmp
add
ret
arpl
repz
mov
xlat
xlat
sbb
add
xchg
mov
cmp
xor
repz
in
or
shl
jge
inc
add
fucomp
adc
cmp
stos
xchg
out
cs
pop
dec
and
mov
nop
subl
add
mov
dec
cmpsl
cmp
add
scas
push
movsl
lret
adc
add
aaa
add
mov
popa
and
pop
push
add
add
pop
les
pusha
add
add
out
clc
scas
xor
imul
popa
jno
add
add
aam
mov
push
loop
dec
stos
lret
adc
scas
pop
add
into
stc
xor
jge
lahf
cmp
pusha
add
test
mov
jg
mov
inc
add
push
int3
pushf
fsub
stc
out
imul
add
and
pop
jno
hlt
inc
add
push
add
push
lahf
addl
out
or
movsl
aad
mov
or
mov
aas
mov
clc
push
jmp
popf
sbb
dec
popf
cli
jmp
or
gs
addb
rep
mov
cmp
orl
xor
dec
test
mov
mov
xchg
mov
into
inc
add
sti
mov
call
or
hlt
add
mov
inc
add
movsb
cs
sub
sbb
xchg
cmp
xor
addb
lds
in
mov
cmpsl
push
aas
mov
xor
push
sbb
in
pusha
add
pop
mov
pop
jnp
add
adc
xchg
cmp
dec
cmpsb
mov
outsb
cmpsl
insl
or
add
and
dec
cmpsb
lret
insl
fisttpl
test
xchg
testb
js
scas
pop
pusha
add
sub
push
jecxz
mov
sbb
jne
call
testb
mov
loop
add
sbb
mov
cvttps2pi
cwtl
mov
mov
push
and
and
sub
and
sub
and
mov
ss
mov
and
fwait
test
mov
xchg
scas
pop
mov
ficoms
ljmp
imul
jecxz
add
and
data16
sti
pop
or
test
fsubrp
mov
add
push
dec
jmp
and
mov
add
add
out
xchg
and
jb
pop
add
scas
jae
xlat
sub
or
mov
pushf
sti
dec
push
mov
pop
xchg
les
outsb
ret
movsl
add
test
lret
cmp
stos
bound
jae
leave
cs
add
push
fstpl
jae
cwtl
xor
das
adc
xchg
aas
jns
xchg
rcll
and
cld
sbb
pop
dec
push
mov
push
jmp
jb
xchg
ret
daa
xor
mov
ss
and
jne
or
add
add
mov
jae
mov
mov
push
adc
bound
pop
jp
mov
je
mov
cmpsb
call
mov
add
dec
mov
and
mov
mov
mov
inc
add
lret
mov
cmp
xor
mov
orl
add
sub
cwtl
pmaddwd
movsb
push
scas
mov
call
pop
add
test
movsb
sbb
data16
ja
fisubl
add
out
add
xor
cmc
rolb
add
aam
add
dec
cltd
idivb
or
mov
addr16
add
mov
out
add
loopne
add
or
push
bound
mov
xchg
icebp
loop
daa
dec
stc
dec
sbb
cmpsl
sub
sbb
xchg
out
xor
ficoml
push
std
out
add
cmpsb
hlt
aas
in
arpl
adc
adc
add
adc
add
pusha
add
cmp
dec
push
cli
jmp
lds
outsb
aas
mov
je
nop
or
gs
lods
test
add
cld
jmp
repz
popa
dec
cli
dec
mov
fildll
lahf
lret
in
aas
jbe
jae
scas
movsb
icebp
ja
ds
fnstenv
xor
sub
shlb
rcrl
cwtl
xchg
pop
and
movsl
test
rcr
and
sti
fs
mov
adc
xchg
and
iret
inc
add
aam
cmpsb
jg
imul
push
aad
mov
xor
hlt
in
inc
add
adc
sub
nopl
std
aas
or
and
jl
mov
enter
insb
xchg
mov
and
add
push
aaa
outsl
pop
inc
jbe
xchg
jno
ss
pop
pusha
add
pushf
lret
mov
bound
hlt
add
xchg
push
inc
lret
or
inc
pop
cwtl
xchg
lods
rclb
jecxz
sbb
test
scas
jnp
lcall
jne
pop
rolb
rolb
jns
dec
pop
inc
add
cmp
test
xor
out
hlt
and
in
sldt
lods
imul
xor
pusha
add
insb
fcompl
mov
mov
mov
sbb
jbe
cmp
add
mov
pop
add
jl
in
mov
xchg
scas
outsb
sub
mov
cwtl
jb
repz
sbb
xor
dec
mov
ret
sub
pop
ror
jo
push
mov
and
adc
out
fs
add
test
push
ljmp
push
lret
ret
mov
pop
pop
je
std
or
decb
cs
jl
jmp
add
mov
shlb
xor
sbb
cli
or
arpl
or
rolb
jb
sbb
repnz
xchg
add
test
cmc
mov
mov
or
jmp
xor
fwait
pop
sub
fldl
xor
cltd
cld
addr16
xchg
mov
inc
push
daa
insb
fidivs
jmp
ret
add
movsl
inc
adc
pop
xchg
mov
adcl
cmpsb
test
iret
sub
adcl
add
icebp
jmp
outsl
enter
and
mov
pusha
add
push
add
sti
push
mov
add
lods
std
bnd
daa
pop
sbb
xlat
ljmp
dec
pop
dec
dec
jns
ret
lock
mov
mov
pop
push
cwtl
push
out
mov
sbb
into
testl
aas
mov
jl
dec
or
pop
icebp
or
adc
pop
mov
fcmovnu
mov
xchg
stos
xchg
push
sub
pop
cld
xor
xor
sarl
add
movsb
and
lret
mov
test
lret
lahf
adc
push
mov
call
inc
xchg
sbb
jecxz
in
sahf
jns
fbstp
push
pop
sbb
ljmp
add
add
dec
add
jge
add
mov
inc
add
adc
cwtl
arpl
sub
jnp
cmp
add
jne
sahf
sub
and
ds
push
cmpsb
push
inc
dec
les
inc
cmp
cmp
add
push
or
sbb
sti
fidivl
xchg
mov
icebp
es
fs
sti
aad
lcall
dec
mov
lea
cmp
adc
xor
mov
sub
in
addb
test
add
push
mov
jp
xchg
imul
inc
add
add
sti
mov
adc
xchg
push
add
jg
mov
push
shll
lods
ljmp
das
leave
cmp
jb
lea
inc
add
loope
gs
sbb
in
add
xor
sahf
xor
mov
dec
frstor
scas
inc
xchg
dec
in
mov
sub
movb
and
pop
push
sbb
jmp
add
aaa
test
popf
pop
les
imul
mov
ret
test
jo
push
aad
inc
add
push
pop
in
mov
bndldx
mov
sub
pop
cmpsl
into
imul
jl
out
lret
ja
cmp
xor
mov
push
add
dec
test
outsl
aaa
clc
sub
cmc
movsb
gs
push
insb
or
jp
dec
mov
push
cmp
ret
inc
add
outsl
cmp
bound
ss
ljmp
and
pop
neg
iret
push
xor
cs
jecxz
add
and
pop
fnstenv
add
or
pop
or
xchg
mov
test
hlt
test
cmp
hlt
inc
add
xlat
rolb
add
jnp
mov
add
xchg
adc
call
mov
push
sar
stc
test
and
pop
scas
fsubrl
jno
inc
add
loopne
or
mov
sarl
push
xor
push
add
xchg
test
add
add
mov
jo
mov
aaa
arpl
loope
clc
imul
aaa
loope
add
in
adc
in
test
das
sbb
pop
test
push
iret
aas
out
sbb
push
jg
jb
pop
scas
xor
add
scas
push
mov
mov
adc
mulb
fdivl
adc
push
add
popa
cmp
int3
outsb
mov
mov
pop
pop
mov
repnz
pop
mov
cmp
addb
jae,pn
jp
addb
add
add
roll
push
add
jb
and
mov
or
adc
cld
push
cmp
xchg
mov
aas
fnstcw
xor
cs
rolb
lcall
xchg
inc
and
pop
xor
test
add
pop
sbb
xor
dec
push
pop
mov
add
cld
sub
add
into
fsub
sub
movl
push
add
xlat
arpl
xchg
fisttps
int3
fsts
sbb
add
es
lods
dec
add
push
xor
pop
cs
jnp
arpl
adc
ljmp
fwait
mov
mov
sbb
mov
dec
ss
clc
mov
insb
call
lret
add
call
jecxz
adc
push
je
add
addb
rcrl
add
std
mov
call
add
mov
stos
addb
sub
lcall
xor
pushf
cmpsl
push
xor
ret
jne
icebp
es
daa
daa
test
cmp
mov
mov
mov
dec
pop
sub
mov
adc
mov
outsl
jmp
out
pusha
add
push
les
dec
jecxz
cmp
or
add
add
xlat
dec
rorl
dec
jl
idiv
mov
scas
sub
jge
cmp
dec
dec
sub
sbb
sub
loopne
xchg
adc
mov
adc
cmp
out
outsb
ror
mov
lods
hlt
pop
pop
repnz
jns
cld
enter
lret
data16
mov
xchg
je
pop
jb
ja
pop
ja
push
jle
sbb
mov
mov
adc
dec
pinsrw
add
push
cmpsb
fwait
pusha
add
mov
fcomps
jae
push
aas
and
mov
adc
les
lods
sarl
inc
xor
mov
and
xchg
cli
mov
cmp
push
call
jae
xor
or
cmp
loopne
notl
in
cmp
and
fs
mov
cmpsb
stos
mov
pushw
add
pop
outsl
ljmp
or
add
add
addb
cmp
out
lock
xchg
or
out
in
cli
lahf
push
add
addb
adc
sbb
int
mov
add
add
je
mov
jns
inc
addb
fldcw
ret
jecxz
lock
push
mov
xchg
push
and
out
imull
xor
pop
xchg
mov
sub
mov
adc
xor
mov
lods
pop
jl
add
add
push
pop
cltd
loope
cmp
mov
pop
sbb
mov
jne
add
insb
mov
insb
lds
jbe
aas
adc
les
pop
xchg
arpl
jbe
and
add
or
jno
insl
sub
adc
inc
pop
sti
leave
mov
in
es
fwait
push
sbb
addb
movsb
push
pop
mov
cld
pop
roll
add
movb
adc
adc
dec
inc
add
add
in
push
sbb
sub
dec
sahf
rorl
iret
test
sarb
rorb
lcall
ja
ljmp
inc
add
push
ljmp
mov
add
and
sti
stc
adc
add
dec
push
jecxz
xchg
pusha
add
fistpll
iret
jp
and
or
push
push
xchg
xchg
in
negb
sub
add
mov
stc
cmp
push
ljmp
movsl
jg
dec
cmp
ficompl
push
insl
hlt
inc
pop
pop
adc
cmp
movsb
mov
cwtl
xor
pop
adc
xchg
mull
mov
add
in
cmp
cmp
add
imul
dec
jge
ljmp
push
jno
fwait
mov
lods
push
add
stos
push
das
dec
mov
sarl
ret
add
push
jo
cmpsl
mov
inc
add
outsl
insb
icebp
or
mov
stos
inc
add
xchg
ret
aas
lahf
sub
ret
aas
jg
mov
xchg
push
xor
movb
xor
sahf
dec
add
ja
push
cmpsl
inc
mov
xlat
dec
adc
and
mov
sbb
outsl
jb
inc
add
adc
out
pop
in
push
shl
iret
xor
mov
test
sbb
xchg
in
mov
cmpsb
dec
and
cmp
or
testb
shll
roll
ret
sub
push
dec
inc
add
loop
jae
nop
jmp
stos
dec
pushf
decb
add
sub
and
stos
dec
push
mov
mov
jp
sub
aad
bound
push
and
jl
xchg
mov
add
push
fdivp
sub
jle
add
fists
inc
add
lcall
or
pop
and
in
xchg
xchg
in
adc
sbb
les
out
xor
enter
scas
cmpsl
jmp
aad
movsb
xchg
jmp
push
jns
and
xlat
lahf
jnp
mov
mov
pop
jmp
mov
mov
adc
mov
dec
or
mov
ja
lods
dec
add
push
movsl
jecxz
ja
cmovnp
mov
dec
fs
sbb
and
lds
lea
inc
sbb
or
jns
bnd
xchg
dec
loop
xor
add
xlat
flds
cmp
rorl
pop
jge
add
add
test
aaa
dec
in
mov
jno
xor
add
iret
mov
ret
lret
add
scas
pop
mov
fadds
jne
add
sbb
add
add
cwtl
jae
mov
sahf
adc
mov
aad
pushf
jb
add
and
push
popa
xchg
xlat
into
pop
add
arpl
popf
ds
pop
pusha
add
add
stos
ret
stos
out
scas
xor
sarb
imul
dec
xchg
push
inc
add
dec
in
clc
cmp
dec
out
mov
jae
lods
mov
js
sbb
add
add
jbe
add
lods
enter
scas
cmc
jbe
dec
cmpsl
mov
test
test
je
jns
inc
add
cmpsl
or
test
mov
loop
adc
outsb
mov
add
mov
mov
das
ss
mov
lcall
ret
jecxz
or
add
stos
in
shll
and
ljmp
aad
mov
add
jmp
pop
and
cmp
mov
ljmp
and
mov
ffree
add
push
add
mov
and
std
dec
xchg
mov
movsl
lret
add
std
pop
adc
decb
cmpsl
and
jecxz
add
dec
pop
sbb
or
xchg
inc
ja
aas
sub
pop
fisttpl
pop
jns
das
sahf
fldenv
sahf
inc
add
xchg
repz
rcrb
flds
xchg
jp
xor
pop
lods
push
int3
cmp
adc
mov
pop
inc
add
fcmovu
add
dec
inc
inc
bound
in
loopne
out
xchg
sub
or
inc
add
pushf
and
stos
dec
std
stos
lods
sub
adc
clc
cltd
aad
adc
jmp
push
add
fisubrl
adc
add
mov
push
xchg
test
jp
movsl
popf
fdivl
or
xchg
xor
adc
cmp
ljmp
and
arpl
xlat
popf
dec
jg
out
call
jns
sbb
mov
in
fistpl
sti
xchg
pop
mov
aas
inc
add
wrmsr
outsb
les
daa
adc
mov
in
les
add
xchg
scas
sbb
das
aam
add
subl
sub
mov
add
lcall
dec
inc
mov
mov
psadbw
popf
fisubrs
add
fwait
cmp
add
xor
out
xor
xchg
sub
jbe
sbb
add
xor
dec
lods
dec
int
iret
xorl
jae
mov
lods
jmp
ljmp
insl
out
bound
cwtl
sahf
cmovne
les
pop
aas
mov
add
mov
lods
jle
inc
add
std
clc
xor
fdivrl
mov
lods
xor
jo
mov
pmulhuw
add
aam
test
pusha
add
xor
jne
shlb
add
in
jb
enter
adc
fisttps
insl
popa
dec
or
add
jnp
xor
sbb
add
sbb
push
sub
nop
push
je
xchg
addb
push
bnd
sbb
stos
jb
cmp
daa
push
add
repz
rolb
push
xorl
les
jmp
dec
das
ja
jmp
fs
push
in
pop
test
flds
test
cmp
pushf
mov
and
add
ret
jecxz
adc
outsl
pop
lods
neg
add
xor
das
lcall
or
pop
mov
rcll
cmp
scas
mov
shrl
mov
psubsw
inc
add
lcall
in
dec
aaa
pop
jl
cmc
and
je
cltd
and
inc
add
inc
xor
mull
mov
sahf
adc
js
movsl
xor
push
adc
push
xor
jno
adc
inc
add
or
adc
adc
xchg
mov
and
test
mov
cmp
mov
push
adc
in
xchg
out
stc
xor
int
insl
cmp
or
xchg
add
in
xchg
mov
cli
lds
arpl
mov
cmp
adc
inc
mov
jp
fiadds
add
imul
lcall
adc
aam
adc
add
inc
add
and
test
daa
popa
nop
outsl
gs
gs
mov
and
out
sbb
shl
cwtl
test
mov
in
jae
lret
xchg
rcrb
jl
ficomps
getsec
das
add
add
add
xor
pop
push
xchg
enter
push
xchg
push
sub
mov
bound
out
xor
ret
dec
xor
mov
add
ja
mov
add
sahf
xor
jne
add
mov
jns
ret
or
es
stos
dec
push
push
mov
mov
sbb
mov
shll
scas
or
aam
and
add
test
outsb
add
add
notw
xor
les
filds
xlat
ret
cltd
movsl
stc
ret
push
iret
icebp
mov
add
sub
or
mov
in
lret
xchg
xchg
stos
dec
or
add
add
mov
add
into
pop
rcll
jno
adc
cltd
movb
inc
xor
cmp
pushf
dec
push
mov
jp
mov
daa
dec
inc
stc
shl
sub
in
movsb
sbb
punpcklwd
pop
sbbl
arpl
push
clc
out
push
or
add
jle
add
int
and
push
lds
nop
addb
loope
pusha
add
pop
push
add
fs
in
call
clc
sarl
jbe
aad
push
mov
add
mov
testl
loopne
clc
mov
add
add
cli
out
popa
and
add
cmp
in
cwtl
and
out
les
stos
mov
pop
int
push
cs
popf
mov
aas
addb
dec
jmp
pop
lea
pop
inc
xchg
cmpsl
mov
adc
das
cmp
sub
or
cwtl
cmc
shll
sbb
movsl
push
out
fistl
in
fnstcw
jns
push
cmp
test
cmp
dec
pop
in
jge
dec
lods
cld
call
and
popf
sahf
push
mov
inc
cmp
lock
fnstcw
add
jae
notb
lock
fcomp
insb
hlt
push
add
jle
pop
and
xchg
stos
push
jbe
fwait
inc
add
mov
jge
lea
loope
cmp
int3
lcall
cld
ret
xor
loopne
and
loopne
ds
stos
es
in
jl
inc
adc
fldt
sub
mov
lcall
mov
push
daa
insb
add
outsb
out
dec
dec
cs
mov
jg
or
xor
mov
mov
in
xor
add
jle
xchg
out
mov
hlt
sbb
jmp
add
add
dec
xor
in
mov
aam
xchg
adc
out
mov
inc
add
add
adc
je
scas
stc
push
addb
push
jnp
jno
add
vhsubpd
add
leave
popa
cmpsb
dec
popf
js
mov
daa
les
cmp
add
lcall
adc
test
movb
filds
or
cmpsl
lcall
sarl
dec
fisttpll
subl
jne
mov
cltd
cltd
movsb
data16
movl
jl
mov
and
push
fbstp
fcomi
daa
xchg
cwtl
push
test
push
jle
inc
add
adc
add
xor
xchg
pop
xchg
jmp
mov
add
jbe
mov
xor
and
jg
sub
cmpsb
outsb
cli
push
addb
xor
cmpsl
and
cwtl
adc
stos
xchg
out
cwtl
push
and
mov
xchg
jb
and
fcoms
movsl
pop
inc
add
rcrl
jp
push
add
es
sub
out
mov
add
dec
decb
out
mov
pushf
fstl
aaa
rdpmc
and
xor
divb
jp
add
sub
addb
leave
xor
imul
add
mov
push
mov
xor
test
in
add
leave
cld
movsb
cs
pusha
add
or
call
jae
add
in
in
data16
fs
adc
shll
add
js
addb
inc
add
xor
dec
fsubl
xor
and
iret
sti
in
test
mov
lods
mov
aaa
adc
dec
pushf
popa
add
mov
pop
call
fisubs
repnz
jle
adc
mov
and
in
add
insl
clc
out
test
arpl
pushf
inc
pop
push
inc
add
test
dec
xchg
mov
pushf
sbb
jge
ja
adc
add
add
movsl
xor
and
les
push
mov
pop
xor
xchg
pop
shrl
sbb
repz
push
add
lret
lret
jb
sbb
add
mov
roll
mov
adc
add
or
jmp
in
enter
lods
or
sub
push
adcl
xchg
aas
xchg
ljmp
cmc
add
jae
inc
in
adc
sbb
xchg
lds
xchg
sub
add
call
push
and
mov
sbb
stc
test
sti
xchg
xchg
dec
jmp
test
aad
out
pop
mov
sti
mull
sub
jne
ljmp
leave
jecxz
cmp
addb
sub
stos
add
ljmp
xchg
sti
movsl
xor
scas
xchg
aam
notl
cwtl
repnz
mov
lods
mov
int
add
sarb
out
pop
jns
dec
fildl
add
rolb
sti
push
lahf
cmpsl
mov
sub
xor
mov
xor
xor
push
outsb
mov
adc
adc
sub
dec
pop
mov
mov
adc
add
cmpsl
xchg
fbld
jns
add
mov
inc
cld
pop
addb
add
pop
sub
rcrl
data16
daa
adc
push
sub
scas
add
loop
add
pop
xchg
in
les
or
inc
ds
fbstp
clc
fidivrs
test
add
stos
shlb
pop
sub
aam
sub
mov
fs
mov
sub
mov
add
lods
mov
jo
xchg
dec
mov
cwtl
jo
xchg
mov
repnz
mov
dec
xchg
sub
pop
lea
insl
daa
leave
xchg
clc
lret
adc
xchg
sti
int3
addb
out
mov
stos
int
imul
fwait
movsl
daa
pop
dec
mov
xchg
pushf
rcrl
mov
push
push
pop
cli
xchg
pusha
add
adc
aam
xchg
adc
add
lods
es
xor
outsl
fcomps
cmp
sarl
into
lret
xor
aam
jns
mov
aad
arpl
mov
and
cmp
add
sbb
xorl
xchg
jl
add
and
xchg
xor
shll
add
roll
push
mov
idivl
movb
pop
hlt
repnz
jmp
mov
cmpsl
xchg
adc
arpl
iret
ret
cmpsb
push
arpl
add
mov
push
in
push
leave
repz
jae
jmp
cmp
jo
inc
add
test
mul
ret
pop
int3
cltd
pop
addb
or
mov
add
jp
xchg
cmc
shll
mov
pop
cli
adc
bound
lock
push
push
jp
mov
lcall
arpl
fsubs
jae
or
ss
push
sbb
mov
mov
xor
cmp
mov
arpl
and
jb
sub
cmp
gs
out
xchg
jmp
ljmp
mov
enter
and
dec
cltd
pop
jns
in
and
rolb
fidivrs
or
pop
mov
pop
rolb
push
fidivs
and
stc
push
add
addb
iret
adc
sbb
mov
inc
imul
das
mov
mov
pop
aad
mov
popf
push
add
jbe
add
dec
pop
or
int3
xchg
sub
pop
dec
fsubs
out
jmp
sub
test
add
enter
xchg
mov
inc
add
add
rcl
mov
rep
popa
dec
push
stos
mov
stc
dec
cld
add
cli
outsl
mov
cld
add
bound
jno
or
movl
lret
adc
inc
add
add
or
xchg
pusha
add
pop
adc
xor
ret
bound
inc
add
fcomi
es
xchg
cmpsb
rcl
add
cld
popa
mov
cld
adc
out
add
out
mov
imul
push
repnz
int3
fs
xchg
fwait
cmpsb
pop
ret
or
movsb
push
fwait
icebp
std
leave
jle
scas
test
inc
add
je
icebp
dec
mov
xchg
ret
lea
aas
lahf
and
adc
call
fcmovnu
mov
mov
ficoml
xchg
and
addb
lret
sub
dec
dec
or
out
cmp
ret
inc
add
sub
cmovb
pop
test
dec
in
insl
inc
add
bound
shrb
push
clc
dec
gs
lahf
xchg
inc
cmp
pusha
add
aad
jg
addb
imul
lret
xchg
icebp
aad
pop
stos
loop
add
add
push
loop
call
add
adc
inc
xchg
repz
xchg
std
loopne
mov
add
pop
inc
inc
add
cltd
xorl
mov
ds
scas
xor
stc
cwtl
stc
cwtl
sub
ret
adc
jecxz
fildl
jne
add
add
pop
iret
lock
pop
ds
notl
sub
sahf
fldt
cmp
lea
int
add
data16
xchg
jne
dec
mov
add
pop
pop
inc
lahf
jb
lods
fdivl
sub
cmp
mov
mov
jecxz
mov
out
push
and
pop
test
add
xchg
jnp
sti
jbe
movsl
je
add
xchg
push
pusha
add
mov
into
shll
add
pop
ret
fcoml
mov
test
add
mov
sub
cld
je
jae
pop
aaa
enter
leave
movsl
add
mov
adc
data16
sbb
cmp
out
je
bound
adc
jne
ret
test
ret
pop
pusha
add
loopne
imul
iret
xchg
and
mov
scas
addr16
lret
sub
xchg
pop
sub
jmp
out
cmp
add
aam
mov
sub
xchg
inc
aam
paddd
bound
sbb
out
and
lods
jno
enter
inc
add
aas
xchg
stc
int
pop
dec
xchg
cld
push
in
and
push
fcompl
lret
test
aam
add
test
push
pop
fldenv
xlat
scas
mov
rorb
out
or
sub
jge
pop
leave
lret
pushf
or
push
push
cmpsb
pop
jno
sub
add
pop
test
hlt
xchg
movb
dec
repnz
push
mov
add
popa
icebp
addb
aad
out
xchg
sub
mov
fldl
imul
arpl
push
add
dec
jle
add
rorl
add
mov
repnz
arpl
fnsave
stc
fsubrl
inc
cmp
dec
mov
inc
leave
jmp
fnstsw
call
dec
sar
cmp
call
cmp
or
mov
aas
cld
and
aad
into
mov
add
cmp
inc
add
add
add
sbb
xchg
jmp
push
xchg
mov
aad
call
add
jae
mov
ljmp
mov
fwait
mov
jae
jae
lahf
jo
push
out
adc
mov
mov
add
enter
std
out
xlat
loopne
mov
jle
shrb
dec
test
jle
push
xlat
push
adc
sub
add
inc
mov
and
add
sti
inc
mov
dec
out
push
push
addb
mov
ffree
fsubrl
iret
es
jge
add
dec
ds
sub
shll
dec
mov
cltd
repnz
push
add
and
arpl
inc
jecxz
sub
or
mov
pop
icebp
push
mov
pop
or
cmp
cwtl
mov
add
jle
push
adc
imul
sahf
aad
lcall
loopne
add
daa
or
mov
jge
mov
jmp
sbb
das
cmpl
mov
popa
ror
or
mov
in
insb
pushf
dec
stos
inc
xor
add
nop
mov
push
add
pop
push
dec
mov
mov
dec
push
dec
xchg
je
mov
xor
push
mov
mov
pop
imul
add
cmp
loope
les
cmp
sbb
add
lret
imul
dec
fwait
loop
dec
push
mov
xor
insb
loopne
xchg
adc
jecxz
jb
push
testb
addl
push
ror
movb
pop
jo
add
sub
testb
mov
test
adc
aam
stos
dec
jns
mov
cmp
xchg
jbe
and
sub
lds
mov
or
push
push
mov
push
mov
divb
and
push
xor
add
pop
jae
sbb
mov
dec
in
jg
add
mov
add
push
jbe
add
cmp
iret
dec
outsl
dec
lods
lret
or
xlat
jl
add
imul
inc
add
sub
jl
push
bound
adc
and
add
popf
xchg
int
pop
and
dec
mov
nop
test
dec
fiadds
mov
inc
ret
fidivl
popa
pop
and
mov
jg
add
jnp
add
cmp
inc
add
sbb
loop
ds
adc
pusha
add
dec
icebp
mov
mov
jns
sub
mov
aad
add
mov
out
lds
add
stos
sar
ret
push
jnp
cmp
scas
adc
insb
lods
inc
sub
mov
cmc
lcall
pusha
add
movsl
push
add
mov
cmp
stos
inc
add
ret
add
mov
add
add
ljmp
and
mov
sbb
add
mov
dec
clc
jns
add
int
test
jbe
fisubrl
add
flds
xchg
lds
mov
je
data16
enter
aaa
jmp
outsl
jge
test
cmp
or
cmp
dec
lock
mov
js
aad
movsb
sbb
xchg
inc
mov
mov
inc
fucomi
adc
stos
lods
test
mov
mov
sbb
fdivs
movb
clc
push
xchg
dec
xchg
mov
jae
cmp
stos
or
mov
inc
adc
add
filds
pop
in
dec
sbb
dec
push
xchg
add
in
adc
inc
add
mov
xlat
lds
mov
xor
std
pop
movsl
xor
jmp
xchg
push
mov
or
jl
ret
out
push
repnz
loop
fisttpl
inc
or
adc
push
mov
lock
mov
add
lcall
add
and
nop
inc
add
call
add
jmp
daa
cs
adc
cld
clc
fmul
stc
jb
imul
push
ds
xchg
mov
add
mov
pop
sbb
stos
push
les
repnz
sub
jno
pop
addb
sti
rcrb
movsb
xchg
jbe
lret
rolb
mov
jo
add
adc
icebp
inc
lods
add
les
pop
stos
jne
xchg
outsb
stos
es
add
push
repz
cli
fsubs
cmpsb
stos
std
lods
sub
jmp
cmp
cmc
lahf
shll
jno
stc
jns
dec
dec
pop
movsb
xor
cwtl
pop
dec
pop
jo
xchg
mov
cmpsb
cs
movsb
fsubrs
shll
mov
or
cmp
xlat
test
incl
add
ja
mov
insb
or
scas
addb
add
add
filds
dec
jecxz
test
add
or
aaa
aas
sbb
mov
jl
fwait
lea
daa
addr16
fwait
test
xor
cmpsl
popa
cmp
dec
dec
shrl
mov
leave
js
loope
adc
outsb
xlat
mov
add
push
lea
insb
stc
jle
add
addb
pop
addb
cmp
fdivrp
pusha
add
jo
ss
mov
add
mov
sbb
cmc
or
adc
push
das
enter
jne
xor
fists
xchg
in
nop
and
sbb
movsl
icebp
iret
pop
sub
jns
or
pusha
add
cwtl
movb
and
mov
xchg
sbb
shl
gs
ficoms
push
jno
daa
les
inc
add
pop
dec
pop
enter
popa
sti
not
mov
bound
mov
add
fstpt
call
mov
in
scas
sbb
insl
inc
add
add
lcall
sbb
js
ror
fs
pop
push
addr16
or
jnp
xlat
xchg
sub
es
neg
mov
or
lcall
cmp
fidivrs
pop
inc
or
xlat
pop
and
cmpsl
or
hlt
cs
push
add
lods
lods
aad
add
mov
push
sub
xor
shrb
pop
add
das
cli
jo
add
add
or
cmovne
js
cmpsb
ret
aam
cmp
out
leave
fwait
ror
mov
add
stos
xchg
out
int
sbb
out
adc
sbb
dec
clc
lret
imul
mov
push
mov
add
cmp
in
mov
and
in
xor
movl
insb
mov
aas
jle
daa
pop
adc
scas
shrl
scas
xchg
dec
jbe
cmp
shr
std
fs
movsb
mov
mov
push
xor
sahf
sub
mov
movsl
stos
xchg
jnp
add
lds
cmp
mulb
sbb
test
lcall
adc
popa
mov
pop
addb
and
cmp
cmp
sub
or
clc
sbb
aaa
jecxz
push
adc
imul
das
xchg
mov
add
insb
fdivs
add
add
add
adc
or
outsb
mov
pop
shll
sub
adc
data16
nop
and
scas
dec
add
push
es
jmp
lahf
sbb
inc
add
jl
sub
xor
mov
daa
pop
insl
mov
cmp
mov
add
add
cmp
addb
das
jmp
cld
inc
add
shl
add
or
mov
pop
cmc
bound
lea
cmp
add
push
lods
ficoms
xchg
jp
mov
cmp
pop
add
loopne
xchg
je
add
jmp
sbb
mov
test
jle
test
in
add
nop
or
sub
mov
sbb
popa
sbb
aaa
jp
repnz
xchg
outsl
push
jle
call
popa
jno
add
dec
nop
inc
inc
dec
jo
and
call
int3
scas
xor
push
stc
fidivrs
and
push
cmp
jmp
or
add
add
or
add
cmp
es
adc
mov
sub
xchg
lret
and
push
ss
shlb
xor
ret
jle
push
aaa
cltd
jge
jno
adc
jne
add
scas
sub
mov
push
nop
xchg
mov
shll
data16
jnp
pop
jo
lret
popa
ds
out
adc
out
outsl
roll
and
insb
and
les
shrl
jecxz
pop
jmp
aas
inc
mov
mov
imulb
lret
push
stc
icebp
xchg
fsubr
mov
inc
add
push
push
mov
int3
mov
outsb
pop
sub
divb
adc
adc
add
or
push
xor
and
and
loop
xlat
stos
fsubp
mov
hlt
dec
fistps
sahf
movb
mov
push
sub
xchg
addl
mov
add
push
out
mov
pushf
addr16
push
and
rorl
add
loop
das
inc
cld
mov
add
loopne
lcall
rcrb
mov
pop
daa
push
push
jb
and
pop
adc
stos
adc
lcall
cmpsb
sti
stos
testb
mov
push
insb
icebp
loop
dec
out
out
out
in
lret
jb
push
cli
or
add
test
sbb
pop
pop
sub
in
add
mov
cmp
jbe
nop
mov
adc
xchg
jo
add
insl
nop
cmp
jns
ja
cltd
movsl
inc
je
xchg
mov
add
bound
and
push
insl
push
outsl
scas
jns
push
rol
add
in
mov
add
pop
cmp
out
xchg
jno
push
xor
push
inc
mov
jbe
push
outsb
clc
push
mov
lahf
inc
addb
icebp
push
push
add
and
scas
jno
or
push
out
lret
dec
mov
lret
push
mov
mov
incl
sar
lods
ffreep
add
add
sbb
add
mov
push
les
sbb
insl
mov
movsl
stc
iret
inc
dec
add
xor
mov
inc
sbb
repz
lahf
pop
lahf
mov
inc
push
inc
out
loopw
pop
imul
inc
add
and
leave
loopne
or
cli
adc
js
add
add
sub
rorl
mov
cwtl
jb
adc
adc
mov
adc
pop
mov
add
icebp
adc
xlat
fsubl
push
add
test
and
ret
push
add
mul
pusha
add
add
push
xor
cmp
out
sti
lea
push
inc
ret
rcll
movb
mov
jl
stos
enter
mov
pop
sbb
xchg
lds
add
mov
inc
sbb
lea
popa
fistl
jl
shl
cmpsb
cmp
push
cltd
adc
mov
jae
popf
dec
or
insl
dec
aaa
adc
add
sub
cwtl
push
sbb
lret
je
fimuls
scas
imul
add
sub
push
xchg
dec
dec
test
inc
add
or
cmpsb
mov
jno
addr16
lret
ret
push
fildl
ja
add
push
aam
cltd
push
js
rorb
sbb
mov
sub
xor
adc
sub
add
mov
repz
shll
xor
popf
sub
add
test
pop
adc
adc
das
xchg
fldt
iret
sbb
push
sbb
inc
add
in
xor
testl
out
and
push
jnp
adc
push
decl
fbstp
mov
call
mov
sbb
in
cmpsl
mov
mov
or
or
sub
stos
fnstenv
push
mov
cwtl
imul
adc
loope
mov
in
lock
inc
add
xchg
loope
add
enter
lea
or
fwait
std
pop
or
sbb
jo
ret
add
int3
push
psubsw
xor
add
mov
lds
loopne
cmp
push
enter
je
add
stc
ljmp
or
scas
adc
push
mov
push
add
iret
addb
mov
cmc
jecxz
add
add
add
mov
lock
mov
jne
js
xor
into
and
jmp
add
sub
popa
mov
add
stos
cltd
sahf
mov
ja
je
xchg
add
popa
cmp
nop
addb
sahf
icebp
dec
add
addb
or
jnp
lret
daa
mov
jecxz
outsl
inc
or
pop
cmp
ljmp
sbb
add
sub
loopne
inc
add
lods
xchg
xor
push
pushf
inc
add
fwait
jo
je
fidivs
mov
pusha
add
popf
mov
and
lods
ljmp
outsb
sbb
mov
out
push
jno
push
ss
mov
add
cwtl
mov
jno
cmp
pop
push
add
lock
push
stos
popf
imul
iret
arpl
enter
add
pop
inc
dec
scas
in
iret
mov
movb
sarb
ret
jle
add
pop
shll
lret
test
xor
test
lds
add
jp
rolb
add
lods
test
popa
adc
dec
push
cwtl
sub
inc
lcall
inc
hlt
in
sub
loop
push
cltd
pusha
add
cwtl
inc
add
fdivrs
mov
xor
add
lret
jbe
dec
out
mov
mov
jne
sbb
xchg
mov
jmp
mov
mulb
add
add
test
mov
ss
sbb
test
dec
das
and
test
out
jge
pop
xchg
fistl
mov
push
pop
subl
push
mov
dec
inc
cmc
push
push
inc
in
js
jle
leave
decl
add
jl
inc
idiv
cltd
pop
sub
cmp
mov
push
les
mov
orl
mov
sbb
push
sti
add
ss
dec
icebp
shlb
xchg
not
cmpsl
and
push
cmp
clc
in
fldl
mov
test
push
daa
jl
adc
xor
shr
inc
add
add
inc
mov
fcompl
inc
fldt
dec
fidivrl
adcl
nop
mov
push
add
mov
inc
add
ret
jns
or
inc
add
dec
dec
xor
xchg
adc
push
push
and
sub
sub
push
mov
add
push
adc
repz
mov
ret
ljmp
es
mov
xor
fs
test
push
jmp
add
sub
adc
mov
loopne
jno
sbb
ljmp
mov
inc
add
inc
xchg
test
ljmp
xorl
pushf
paddsw
or
xor
roll
or
push
xchg
mov
jge
cmp
shrl
fisubrs
mov
fisubrl
mov
xchg
addb
xchg
movb
cwtl
add
jbe
aad
pop
enter
lret
jne
roll
mov
add
sub
js
mov
jno
jmp
or
ficoml
fstpl
inc
add
mov
xor
pusha
add
pop
rcrl
xchg
mov
adc
mov
add
enter
lods
xor
push
idivl
cli
sbb
divl
aam
mov
lods
ret
scas
and
xor
mov
pop
mov
xchg
ficoms
addr16
and
push
mov
jns
movb
insw
cmp
dec
test
out
fstpt
fists
pop
pop
cmp
and
pop
mov
add
cwtl
fs
push
adc
or
pavgb
or
cmp
push
shll
ret
adc
dec
pop
jecxz
inc
cmp
dec
sti
dec
cmp
cmp
or
out
adc
jecxz
inc
rolb
mov
cmp
cli
roll
push
fsubs
popa
inc
movb
movb
fnstsw
and
push
outsl
xorl
jecxz
cmp
dec
ss
and
xor
loope
in
addb
adc
and
pop
pop
movsb
dec
flds
in
addl
pop
enter
in
add
add
pop
dec
xchg
mov
pop
sub
mov
cld
cmp
aas
cmpsl
in
fnsave
dec
pushf
mov
mov
jne
aad
add
std
mov
mov
addb
xchg
add
dec
cmp
xchg
jmp
add
test
aaa
sub
pop
xchg
sub
imul
cmpsl
loopne
into
cs
test
sub
in
inc
add
clc
jae
inc
add
leave
icebp
pop
jp
mov
mov
stos
mov
popf
lret
test
mov
lret
inc
add
push
lods
lcall
popa
inc
sbb
xor
jmp
lcall
or
mov
daa
cmp
mov
pop
mov
pop
sub
shll
jnp
jno
mov
pop
scas
outsb
hlt
fistpll
mov
inc
mov
test
out
lds
add
add
mov
add
cmp
dec
or
add
and
or
cmp
fadd
add
mov
dec
bound
mov
add
out
test
add
cmp
jnp
sub
adc
call
or
cmc
insb
cwtl
addb
in
in
dec
or
loope
push
loopne
insl
sbb
ja
add
cmpsb
cli
int3
mov
mov
jnp
movsb
push
out
in
mov
add
inc
add
ja
add
stc
outsb
ret
push
xor
add
mov
push
push
pop
add
out
push
aas
movsb
loopne
stos
int3
addb
imul
push
addb
bound
jp
xor
repnz
inc
add
addb
data16
sub
xchg
inc
mov
in
js
imul
add
jno
out
and
in
clc
pop
out
adc
inc
add
lahf
std
dec
or
xor
pop
sbb
in
ds
mov
mov
loopne
sbb
filds
xchg
xor
pop
rorl
pop
rolb
test
hlt
pop
not
xor
ret
or
std
es
xchg
repnz
cmpl
pusha
add
fsubl
adc
xchg
sub
pop
cmc
add
xchg
pop
cmp
dec
mov
add
jo
stos
mov
or
xor
fidivl
int3
or
addr16
adc
mov
dec
pop
loopne
repnz
add
les
adc
fmul
add
add
leave
sbb
xchg
adc
hlt
imul
out
and
movsl
nop
int3
cwtl
or
sub
add
mov
push
xor
sub
adc
push
xchg
sbbl
fwait
push
inc
mov
push
ret
xchg
js
mov
inc
int
pop
sbb
icebp
push
xchg
outsb
cmc
inc
dec
dec
cmp
inc
add
add
pusha
add
pusha
add
scas
pop
sbb
mov
dec
mov
add
add
sub
sti
xor
mov
stc
xor
adc
jbe
jb
or
mov
add
scas
push
mov
imul
inc
add
mov
cmc
pop
mov
stos
push
lods
movsb
xchg
xchg
jl
mov
int3
xchg
ss
insl
cwtl
dec
adcl
sbb
je
cltd
xchg
leave
xchg
xor
in
ljmp
test
jg
add
and
lret
adc
sub
loop
js
add
mov
cmp
into
movsb
xor
fimuls
mov
sub
cmpl
addb
testl
jo
add
addb
aas
mov
pop
mov
add
inc
add
add
cmp
leave
pop
fdivl
mov
addb
add
pop
js
and
cmp
inc
add
fnsave
mov
arpl
mov
aad
aad
push
in
out
arpl
dec
scas
cmp
mov
jecxz
and
and
inc
add
rolb
jecxz
pop
sub
out
pushf
in
pusha
add
test
add
int3
je
sub
addl
add
add
pusha
add
cmpsb
xchg
dec
push
jne
add
loope
xor
ja
and
pop
add
icebp
sub
mov
sbb
leave
cmpsb
into
pop
xchg
push
mov
in
js
add
test
jns
loopne
mov
lahf
xchg
cmp
movsl
sub
shlb
push
mov
mov
out
mov
add
ret
mov
pop
fstl
cmp
push
in
insb
jne
stc
push
add
push
jno
gs
out
rolb
inc
call
sti
shll
add
repnz
sub
mov
cmpsl
imul
cmpsl
ljmp
ljmp
add
