xchg
ror
dec
sbb
xchg
lea
enter
in
add
push
cmp
fistl
lods
fs
xchg
out
addb
xchg
or
add
mov
in
add
mov
sub
sahf
imul
negl
mov
xchg
daa
cmp
push
jns
inc
cmpsl
outsl
add
lcall
stos
or
add
add
and
push
xchg
jp
mov
inc
test
stc
sub
mov
mov
xchg
inc
add
nop
scas
test
pop
pop
jo
xor
stos
xchg
xchg
test
mov
cmp
cltd
ja
jl
outsl
movsl
xlat
inc
imul
test
sti
rorl
push
popl
push
adc
test
push
add
dec
cmp
ljmp
mov
xlat
imul
stos
push
sti
jle
stos
bnd
out
lods
loop
sbb
push
and
xchg
and
dec
leave
fistpl
mov
xor
popa
or
imulb
frstor
cmp
cmpsb
jmp
sub
sub
test
adc
or
sbb
add
adc
mov
jg
xchg
push
cmpsl
dec
mov
mov
and
stos
push
jnp
xor
or
xlat
inc
add
adc
inc
popf
add
add
adc
bound
fs
test
ud2
cmp
les
mov
add
cmc
shlb
sub
mov
repnz
pop
sub
insb
fimull
lods
stos
inc
add
scas
stc
push
jns
mov
and
pop
cmp
stos
outsw
fisubrl
push
mov
mov
insl
sub
add
aas
mov
add
dec
or
or
ficompl
adc
repz
jae
pop
enter
icebp
dec
popf
sbb
add
imul
and
xchg
aas
jmp
pop
add
jno
add
add
mov
nop
fistpl
std
pop
jmp
add
dec
and
add
ret
out
arpl
xchg
sbb
int
pop
xchg
dec
imul
adc
and
jle
sub
add
add
movsl
or
jae
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
hlt
mov
add
cmp
into
dec
mov
cmpl
mov
cltd
inc
lock
adc
out
test
call
pusha
add
cmp
and
je
ja
std
add
mov
inc
push
insl
sub
test
pushf
lea
xor
cmp
and
cmp
sbb
hlt
movb
cli
adc
mov
jmp
les
or
push
inc
add
shlb
add
push
fstenv
mov
aad
sbb
jno
test
cmc
pop
rolb
js
adc
cmp
ja
dec
push
push
sub
add
and
lret
add
push
cmp
mov
add
jmp
addb
sub
xor
ret
lea
data16
mov
xchg
hlt
in
mov
sub
out
imul
jo
push
das
jne
add
push
adc
or
mov
xchg
jmp
mov
sahf
jecxz
add
dec
push
lahf
adc
add
bound
test
cld
add
jp
sarl
bound
pop
adc
and
out
outsl
sub
jl
mov
gs
bound
mov
jae
ljmp
jle
jae
pop
adc
jg
add
sub
push
adc
test
sti
add
fwait
or
fs
pinsrw
addb
jmp
gs
add
enter
pop
mov
jns
mov
and
iret
mov
pop
xchg
jne
dec
mov
aam
in
pop
popf
divl
je
add
popa
jo
pop
dec
fldt
aam
hlt
push
ret
jb
dec
xchg
int
ljmp
cmp
je
je
fidivl
jle
je
ror
xlat
and
movsb
stos
out
push
xchg
lret
pop
and
sbb
test
add
lods
stos
movb
add
addb
push
dec
pop
mov
out
sbb
fs
xchg
adc
dec
sbb
inc
gs
aas
cwtl
adc
add
inc
add
mov
add
scas
repnz
out
addr16
dec
test
out
mov
mov
adc
jmp
loopne
out
jb
add
adc
out
into
adc
add
push
push
les
dec
pop
mov
mov
stos
movb
inc
push
add
pushf
or
jl
sbb
push
dec
insb
data16
and
ror
js
in
push
pop
arpl
add
and
push
aad
add
add
and
data16
daa
arpl
test
jmp
fiaddl
pushf
pop
add
testl
xchg
inc
add
push
shll
out
cmp
sub
fs
movsl
movsb
xor
push
jp
ja
dec
ret
add
xor
lods
mov
or
push
xchg
fmuls
push
cmc
cmp
add
dec
mov
dec
mov
mov
pop
call
mov
out
inc
add
sbb
call
orl
es
xor
cmp
mov
lret
mov
sahf
cwtl
stos
es
xchg
add
outsb
xchg
andl
movsl
ja
sub
add
jmp
jae
mov
stos
les
out
call
mov
push
and
xor
imul
jnp
sbb
rolb
lret
jg
test
and
and
mov
or
loop
sub
sahf
push
adc
mov
push
or
fildll
ret
gs
fistps
xor
arpl
aas
pop
addb
in
aas
inc
sbb
es
cmp
inc
add
inc
add
out
adc
sub
push
movsb
mov
imul
addr16
xor
push
aaa
ficompl
imul
cmpsl
enter
add
enter
les
pop
mov
sahf
push
add
call
add
lock
adc
dec
pop
push
add
dec
sub
mov
push
xchg
loop
outsb
inc
std
cmp
push
sar
xor
inc
scas
jno
and
fwait
dec
outsb
popf
xchg
jns
ffree
add
add
test
dec
cltd
jne
xor
sub
daa
push
jae
push
mov
jo
jae
push
stc
mov
repz
stos
sub
push
add
cmp
push
cwtl
pop
lret
fsts
add
repnz
sub
out
cmp
mov
aas
test
dec
fld
add
movsb
insl
jl
aad
add
scas
popl
add
shlb
or
shl
movsl
lret
out
jne
xchg
mov
inc
rclb
data16
hlt
rolb
in
stc
cmc
sbb
fstpl
fxch
std
mov
mov
sub
jns
test
imul
add
xlat
push
add
cli
mov
add
in
jns
fidivl
add
flds
pop
orl
add
jno
mov
xchg
add
mov
cmc
mov
sbb
and
shlb
in
add
jo
sbb
pop
pop
aas
lret
jp
loopne
loope
add
jle
pop
hlt
lds
add
mov
mov
xchg
shl
pushf
in
lahf
outsb
inc
jg
js
iret
inc
insb
jo
ret
xchg
dec
or
pop
addb
and
inc
add
or
nop
out
lret
fwait
sub
ss
adc
test
push
nop
cmp
mov
sahf
cmp
scas
jle
push
add
cmp
xor
push
dec
xchg
movsb
push
inc
add
pusha
add
lods
int
push
jo
add
or
pop
sbb
ret
dec
add
cmp
loope
add
xchg
mov
popf
insl
stos
add
add
jp
sbb
jmp
cmp
and
add
push
and
mov
dec
mov
mov
jecxz
inc
call
fiadds
add
xlat
lret
iret
out
xor
mov
mov
inc
stos
bound
dec
jmp
das
dec
inc
add
pop
mov
add
mov
das
xchg
in
loope
add
fadd
add
nop
in
inc
add
add
rorl
mov
cmc
fbld
mov
xchg
pop
cmc
pop
into
or
sti
adc
mov
insl
pushl
mov
xor
aaa
mov
lcall
add
movsb
testb
mov
lret
mov
lods
dec
clc
dec
sahf
mov
out
and
stos
mov
add
bound
jge
pop
aad
add
dec
outsl
fs
jecxz
push
es
dec
mov
push
push
sbb
push
sub
in
xchg
popa
dec
imul
retw
jp
pop
scas
cltd
stos
add
loopne
shl
pop
loop
out
popa
scas
sub
cmpsl
roll
bound
dec
xchg
jmp
sub
inc
dec
gs
add
add
std
mov
add
insb
mov
repz
inc
fs
xchg
add
not
nop
aas
js
adc
daa
mov
outsl
jne
rcrb
xchg
les
and
add
addb
scas
fmull
xor
clc
mov
std
popl
cwtl
xchg
fisttpll
test
mov
or
adc
add
or
jmp
ljmp
mov
or
addr16
add
lods
push
cltd
xchg
mov
xchg
add
lahf
ret
ja
push
add
pusha
add
in
push
lret
xchg
popf
mov
iret
add
mov
sbb
push
xchg
jns
pusha
add
out
sbb
mov
fmuls
addb
add
ret
dec
push
mov
sbb
add
mov
xchg
push
push
leave
jp
adc
aaa
push
push
xchg
mov
add
or
repz
add
pop
je
mov
sub
fs
jle
mov
jnp
lea
or
dec
push
mov
adc
add
xchg
mov
iret
sahf
and
xchg
fs
adc
adc
xor
sub
pop
les
popf
mov
add
add
jle
aas
push
out
call
cmc
push
sub
lret
ss
inc
add
push
dec
in
mov
and
pop
push
leave
push
int3
xchg
sub
xor
fstp
stc
and
inc
add
shll
xor
aaa
push
ljmp
xchg
ret
mov
dec
lret
add
cmp
int3
xchg
jno
mov
sbb
or
jp
adc
jmp
sbb
in
push
insl
loop
add
add
and
and
jb
add
arpl
in
sub
fsubl
add
outsb
test
sub
pop
or
add
jge
add
inc
mov
add
sub
int3
int3
adc
punpckhbw
cmpsb
push
sub
and
adc
jns
popf
xchg
lahf
push
mov
stos
push
imul
add
push
sti
loop
fstl
add
clc
lahf
pop
daa
addb
rolb
cmp
add
aam
iret
cmpl
mov
xchg
insb
sti
rorl
push
add
jg
push
loope
inc
add
sbb
pop
aas
sub
into
mov
add
and
add
cmp
lods
pop
scas
mov
addb
cmp
inc
jg
cmp
dec
sub
lock
jbe
mov
or
bound
data16
push
fwait
push
xchg
jl
push
jo
std
mov
out
mov
gs
popa
adc
orl
dec
push
scas
loop
jg
arpl
jmp
pop
cltd
push
mov
faddl
int
mov
scas
or
enter
lret
call
add
mov
lret
insb
or
push
clc
xchg
aam
cmp
insb
in
mov
jge
jnp
dec
jne
or
scas
loope
aaa
enter
cmp
lahf
loopne
out
mov
mov
gs
in
in
sub
dec
dec
cmp
ret
aaa
add
mov
push
into
out
fldt
hlt
push
movsb
and
xlat
mov
xchg
scas
js
mov
jb
enter
movsl
lahf
fcom
mov
or
add
repnz
icebp
mov
insl
xchg
and
adc
lret
ja
loope
addb
test
adc
add
or
outsl
int3
jp
loop
pop
pop
cmp
inc
push
pusha
add
arpl
aam
jg
stc
in
mov
scas
mov
enter
add
dec
sti
lea
xchg
scas
cmp
sub
bound
mov
add
or
mov
xor
inc
scas
pop
scas
loop
add
sub
fnstenv
sub
in
testb
ror
mov
arpl
lods
loopne
aaa
rolb
sub
mov
dec
and
cmp
comiss
inc
add
jbe
pop
shl
fadd
ja
fsubl
sub
and
pop
test
bound
dec
mov
mov
mov
push
push
pop
push
movsb
ljmp
add
iret
or
mov
inc
add
cs
sbb
std
sbb
bound
jge
xchg
cli
lcall
pop
bound
mov
xor
cmp
sti
iret
or
out
add
pop
mov
sbb
add
add
jg
sub
lock
xlat
xchg
and
xchg
insl
pop
int
mov
add
push
jg
add
jns
shlb
add
mov
movsl
mov
scas
inc
mov
into
lcall
or
loopne
add
imul
jl
mov
imul
xchg
ret
lahf
cmp
repz
fidivl
bts
adc
and
add
mov
daa
mov
xor
push
and
fidivl
fcmovnu
push
add
push
in
adc
lock
lock
dec
add
scas
dec
dec
xor
mov
adc
into
cmp
pop
mov
push
sbb
adc
mov
add
cld
add
gs
mov
in
jp
sub
xor
mov
insb
in
dec
loopne
or
push
push
add
add
in
rolb
cmpsb
lahf
aam
rolb
sub
je
test
rorl
pop
aam
int3
jae
mov
push
scas
mov
add
add
or
cmp
sbb
push
fcomip
mov
mov
cmp
jmp
sbb
fdivl
cli
mov
mov
pusha
add
mov
imul
jb
adc
and
addb
cwtl
popf
mov
inc
xchg
cltd
sbb
lahf
icebp
pushf
fstps
popf
outsb
arpl
lds
js
mov
or
mov
sub
in
inc
add
adc
push
out
and
add
add
add
pop
jbe
mov
xchg
data16
push
adc
in
loope
sub
int3
les
xchg
ficoml
push
and
pushf
xchg
outsb
dec
xor
jle
leave
sbb
loopne
adc
mov
mov
dec
sub
or
aad
cmp
or
popf
inc
add
add
lock
ss
std
out
movsl
inc
pop
push
out
push
sarb
fxch
lret
or
stc
adc
add
dec
and
jg
sub
cmp
add
and
lret
into
push
sbb
addb
lods
dec
lds
psubusw
add
add
cli
and
jmp
mov
add
inc
add
adc
cmp
pop
pop
add
pop
out
fs
sbb
mov
xor
mov
mov
test
test
inc
shrl
jno
jo
mov
or
xor
pusha
add
dec
movsb
addb
inc
add
test
sub
leave
push
add
ret
push
shlb
add
cwtl
adc
pop
ds
and
add
push
dec
xlat
xchg
fnstsw
mov
add
lods
mov
rorl
lods
inc
add
mov
cmpsb
dec
dec
push
test
jp
loop
movsb
mov
addb
mov
cmp
lds
jge
add
dec
jbe
add
movb
fmuls
add
addb
ljmp
jl
rolb
jb
xchg
clc
movsl
popf
jmp
lock
xchg
lods
add
fwait
subl
les
or
dec
push
pop
xchg
push
mov
inc
add
cmp
decl
and
jl
in
xor
bound
imul
and
mov
aas
aam
roll
sub
xchg
outsb
fldenv
out
sbb
pop
add
or
je
imul
dec
inc
sub
data16
aaa
les
add
sahf
notb
loope
out
sub
imul
ljmp
ret
sbb
outsl
shl
sub
push
stos
nop
sub
push
into
or
fcom
cld
xchg
jnp
jne
and
xchg
in
mov
hlt
dec
and
rol
cli
or
add
add
popf
lock
lds
sub
lods
pop
outsb
pop
xor
fstps
sub
add
std
xchg
addb
cmovg
sbb
es
addb
jecxz
sbb
fldl
ljmp
imulb
fcoml
xor
add
dec
xchg
clc
pop
mov
or
out
mov
sahf
pop
pop
in
cmp
shl
and
jae
xor
aad
loope
sbb
fbstp
movsl
aam
inc
add
fld
imul
push
rorl
fisttpll
arpl
jmp
add
push
mov
cwtl
and
fildll
in
cmpsl
js
and
add
add
or
or
fmul
dec
xchg
inc
jne
add
addr16
sbb
movsb
mov
rolb
std
xor
xor
cmp
mov
dec
dec
movsb
stos
notl
inc
test
cmp
jne
adc
pop
dec
das
push
cmp
push
add
jecxz
mov
or
int
xor
gs
sub
inc
add
add
sbb
sbb
push
imul
test
sbb
cwtl
inc
add
enter
aas
mov
movb
nop
movsb
fdivrl
xchg
mov
loopne
jne
add
mov
add
dec
test
enter
movsb
leave
scas
in
push
mov
out
cmp
mov
pop
jne
add
push
inc
push
or
in
gs
mov
pop
cmp
push
adc
and
add
in
mov
leave
push
jg
shl
add
popf
shll
out
xor
rolb
jae
sub
jnp
div
lods
ja
insl
push
inc
loope
push
enter
cmp
mov
push
add
inc
add
lock
rclb
jno
addb
cld
dec
mov
add
mov
mov
mov
add
dec
orl
popf
push
push
sbb
daa
xor
clc
movb
sar
movsl
daa
frstor
movsb
mov
xchg
jge
jge
mov
fwait
xchg
popa
cmp
mov
pop
cmp
jns
dec
cmp
sub
lcall
sbb
in
mov
gs
lds
cltd
movsl
mov
pop
and
jge
inc
inc
imul
cmp
cmp
stos
cmp
push
push
sub
stos
pop
pushf
push
out
dec
lcall
jae
add
ss
mov
jg
add
sub
and
mov
insl
or
iret
fstpl
add
stc
movsl
data16
leave
movsb
fdivl
insb
xor
sti
cmpsl
xchg
mov
add
mov
or
lret
mov
rolb
ja
mov
jmp
sbb
sbb
test
mov
imul
cwtl
inc
loopne
das
fimuls
mov
add
mov
add
dec
inc
add
add
mov
mov
push
dec
lock
es
es
jle
add
sbb
add
imul
scas
push
repnz
inc
add
push
add
test
lds
cs
enter
vunpcklpd
sarb
sbb
ss
add
add
ret
into
leave
add
cmc
pop
pop
cmp
cmpsb
outsb
les
xchg
sbb
mov
out
jb
and
iret
cmp
mov
push
xlat
add
imul
out
mov
mov
and
jle
xlat
cmpsl
mov
cld
andl
test
dec
sbb
add
mov
xor
lret
xlat
add
scas
mov
sbb
out
out
mov
clc
aaa
hlt
fs
cli
pop
xchg
or
xlat
test
sub
icebp
mov
sbb
sbb
movsl
pop
out
and
cld
push
mov
imul
insb
imul
dec
aad
loop
clc
dec
inc
add
movsl
mov
fldenv
lds
adc
inc
dec
popf
fcomip
ja
add
push
or
push
jne
dec
or
mov
fwait
test
inc
add
push
jnp
push
adc
popf
add
jno
aam
xchg
mov
dec
stos
xor
and
in
sub
sbb
pop
pop
cmc
mov
add
outsl
cmp
cmpsl
insb
jp
mov
add
leave
arpl
movsl
pushf
sub
sbb
pop
mov
mov
adc
shll
sub
jno
pop
push
jge
jl
into
sub
jns
lods
add
push
mov
addb
test
xor
cld
imul
pop
adc
fildl
add
cltd
mov
movsb
xor
or
inc
in
test
ss
or
pop
xchg
pop
mov
add
cmc
and
fwait
push
adc
mov
jbe
aam
mov
cli
mov
lea
add
sahf
nop
mov
enter
or
cmp
cmp
pushl
mov
jns
mov
dec
xor
mov
leave
push
cld
shl
mov
dec
shr
clc
jbe
xchg
arpl
test
loop
dec
sbb
add
pop
std
jle
lock
in
push
mov
add
push
xchg
xor
sub
stos
pop
ja
cs
inc
gs
call
iret
dec
shr
shl
push
std
adc
lahf
fwait
test
call
lds
cld
xchg
out
jmp
mov
mov
shll
repnz
test
dec
iret
out
adc
dec
xor
push
lea
dec
popf
cmpsb
jnp
sbb
cmpsb
leave
repnz
les
adc
test
pushf
es
js
popf
jae
rolb
call
add
cli
ret
add
xchg
push
mov
fcompl
scas
jns
mov
icebp
in
hlt
fists
je
fisttpll
mov
add
add
in
das
add
mov
pushf
ss
lahf
bound
cmp
leave
movsb
dec
cmpsl
arpl
hlt
jmp
lret
stc
jnp
ja
sbb
pop
mov
mov
dec
test
popf
jecxz
divl
and
das
push
hlt
lcall
adc
mov
dec
cmc
pop
fdivrp
mull
addr16
ret
in
lods
shrb
movsb
mov
push
roll
aaa
mov
xchg
dec
daa
stos
aaa
and
fimuls
push
inc
add
xchg
sbb
cs
jl
aas
cld
pop
ja
dec
fcmovu
js
push
jnp
sub
orl
push
hlt
xchg
inc
icebp
inc
repz
mov
add
add
sub
mov
xchg
lret
dec
cmp
lret
mov
xor
test
lret
inc
lock
mov
je
jae
push
sahf
xchg
out
dec
inc
add
add
mov
es
add
adc
ret
sbb
movsb
in
addb
xchg
inc
add
in
sar
adc
icebp
mov
lock
add
add
testl
pop
push
xor
addl
stos
cmp
gs
add
sti
xchg
insl
adc
aas
xor
insb
fwait
sbb
jmp
ret
xchg
aaa
or
push
hlt
and
push
mov
mov
sarl
je
call
in
imul
repnz
cmp
andl
js
int
add
movsb
mov
stos
sub
bnd
push
pushw
add
inc
add
push
repz
aad
xchg
mov
mov
mov
insb
xor
dec
in
rcll
dec
aad
outsb
arpl
pop
test
and
sub
outsb
test
hlt
out
int
cmp
test
add
add
add
arpl
je
xor
sbb
add
gs
and
mov
das
sub
add
push
mov
inc
add
lds
in
pop
mov
fnsave
add
jecxz
jae
pop
clc
into
sub
pop
mov
dec
push
mov
aas
outsl
cmc
jnp
iret
jno
aas
sub
imulb
and
xchg
mov
add
jbe
mov
inc
add
jb
loop
rclb
aam
movsb
add
fwait
test
mov
int3
lods
xchg
mov
adc
pop
fwait
push
lock
ss
adc
and
pop
ret
iret
mov
test
add
adc
mov
bound
ss
icebp
pop
stc
xor
mov
pop
fildll
into
pop
inc
fwait
jp
push
add
imul
xchg
orl
add
scas
lea
test
sub
daa
cmc
and
jo
mov
lahf
sahf
xor
dec
sub
stos
in
mov
es
jns
aam
adc
mov
notb
enter
fs
jg
out
add
jo
out
sbb
mov
nop
mov
aam
out
filds
into
stos
out
adc
sbb
cs
lea
mov
imul
aas
push
loope
add
lcall
add
ret
sub
jecxz
inc
add
push
jb
loopne
sub
pop
es
jp
mov
push
pushf
xor
ficompl
xor
pop
jp
movsb
xor
pop
cmp
or
int
cmp
pop
sub
mov
subl
adc
test
loopne
add
test
adc
cmpsl
scas
xchg
mov
nop
mov
pop
push
cli
mov
or
add
nop
sbb
cmp
int
xchg
repz
push
add
pusha
add
inc
arpl
or
mov
gs
dec
pop
jge
add
and
adc
int3
push
mov
xor
add
or
loope
cmp
popf
stc
sbb
push
mov
inc
add
repz
xlat
lds
out
add
fsubrs
arpl
add
aam
add
iret
and
imul
jp
add
fldt
lcall
clc
adc
pop
dec
pop
xor
fiaddl
push
add
lods
jb
or
inc
enter
add
jle
and
enter
fs
cmp
inc
add
pop
stos
fsubrl
mov
test
rolb
bound
mov
dec
divl
jne
dec
jne
aam
adc
test
jns,pt
lret
dec
test
mov
pushf
nop
pusha
add
dec
mov
sbb
nop
cmp
nop
mov
and
and
movd
repz
test
mov
shl
add
sbb
out
popf
scas
push
add
and
btc
push
mov
add
das
addr16
lock
jmp
xchg
sub
lds
pop
dec
movb
cld
sbb
dec
push
popa
outsb
cld
mov
or
adc
xchg
int3
imul
in
dec
mov
je,pn
inc
add
add
add
xlat
rcrl
lods
lods
nop
sub
and
mov
push
add
add
and
mov
xchg
outsl
ret
fsub
push
xor
lcall
inc
add
jno
aam
xchg
inc
add
sbb
test
cld
xchg
sub
sub
in
sti
add
pop
xor
mov
ja
add
or
movsl
loopne
inc
and
inc
add
pop
push
ret
cmpsl
xchg
rclb
js
data16
fbld
pop
ret
cltd
lea
enter
mov
pop
ja
and
dec
jnp
in
das
pop
mov
sub
pusha
add
out
push
popf
int
fistps
add
imul
xchg
vlddqu
icebp
inc
fldt
movsb
insl
mov
je
loopne
cltd
xchg
ljmp
sbb
mov
movsl
sub
imul
loope
arpl
sub
stos
loopne
mov
and
stc
sti
dec
mov
jbe
clc
dec
mov
scas
xor
into
ret
rcll
adc
incb
xchg
popf
and
add
sbb
aam
fists
movb
add
add
std
xor
rolb
packuswb
lds
jp
wrmsr
jle
outsl
call
jg
dec
movsl
and
push
sar
mov
std
mov
out
jns
addb
mov
sahf
xchg
pop
fs
mov
mov
add
dec
mov
movb
dec
push
add
xchg
pop
xchg
lods
push
int
or
add
stos
fimull
das
jae
mov
cwtl
stos
and
lods
stc
and
pop
enter
add
fadds
jae
nop
xchg
mov
add
rcrb
loope
adc
out
pop
int3
lret
xor
gs
pop
loope
lcall
pop
mov
pop
lds
imul
sahf
mov
adc
in
add
add
fcomip
fwait
adc
xchg
stos
ficompl
xor
mov
mov
cmp
pop
imul
mov
cmp
adc
dec
sub
mov
add
lea
int3
add
inc
cmp
mov
lock
movb
sub
inc
sub
cmp
dec
roll
sub
dec
xchg
add
int
movb
dec
push
test
jg
xor
add
movsb
and
xlat
mov
push
mov
adc
sbb
mov
das
adc
pop
jne
or
lods
push
sbb
addb
in
inc
fucomi
add
decl
mov
add
in
adc
mov
adc
add
imul
push
mov
cmpsl
dec
dec
jge
insb
ret
or
dec
xchg
mov
repz
movb
inc
hlt
ss
add
mov
sbb
add
pusha
add
adc
push
jb,pt
mov
add
lret
int3
jl
lods
or
insb
ror
addb
mov
mov
add
mov
push
call
loopne
popf
jmp
or
cli
inc
dec
in
test
xor
test
cwtl
test
outsb
pop
xor
nop
cmp
add
call
jnp
fisubrs
aaa
pop
stc
sbb
mov
add
mov
sub
bound
push
ret
into
repz
xor
add
ret
xchg
lods
pop
jnp
dec
ret
cli
popf
cmp
in
jb
clc
insl
or
test
dec
bound
movsb
jne
mov
mov
into
xchg
mov
and
out
sub
insl
add
outsb
or
mov
adc
xchg
call
movsl
test
dec
shl
aad
ret
lcall
icebp
cmpsl
in
mov
lods
lret
inc
add
out
syscall
fimull
arpl
testb
lock
lret
test
pop
orl
mov
popf
push
scas
das
inc
and
add
add
or
rorl
lret
xorl
add
aad
pusha
add
xor
mov
push
dec
test
sub
lds
and
add
scas
add
ret
sub
in
cmpsb
add
out
pop
push
or
push
fdivr
mov
lcall
test
mov
push
cmp
rcrb
and
lds
xchg
test
repnz
movsb
in
je
test
sub
and
movsb
pop
lock
leave
inc
pop
enter
lret
xchg
int3
leave
int3
mov
add
add
js
mov
cmp
int
aas
sahf
mov
or
ret
push
fldenv
xchg
inc
add
lcall
add
xor
xchg
in
inc
add
out
popa
jb
das
ja
add
xor
and
add
insl
lret
mov
jge
cmpsl
ret
push
jg
push
inc
add
inc
add
shrb
add
fsubs
fwait
mov
dec
insl
inc
and
dec
pop
shr
out
pop
inc
cmp
cmp
jg
push
pop
and
fnstenv
loopne
inc
add
and
push
and
mov
mov
mov
pushf
out
addr16
jp
fdivs
cltd
addb
shrb
mov
sbb
jo
into
add
mov
push
in
es
jle
inc
add
xchg
push
int3
rep
jmp
stc
push
xor
ja
sbb
xchg
xchg
pop
iret
mov
add
sbb
je
outsl
test
sbb
add
pop
cltd
or
xchg
pop
stos
mov
add
jge
lock
imul
mov
or
mov
adc
mov
fcoms
or
pop
sub
movsl
sti
incl
and
fdivrp
shrl
fstpl
push
mov
jne
inc
add
add
icebp
mov
sub
addb
stos
or
addl
cmp
xchg
bound
mov
mov
stos
imul
or
xchg
sub
pop
arpl
jnp
stc
outsl
iret
mov
add
ret
lret
jb
inc
js
adc
repz
fld
push
jmp
movsl
loopne
enter
into
sbb
movsl
test
mov
or
mov
jge
insl
dec
cmp
jnp
gs
adc
cmpsl
pushf
imulb
sbb
mov
pop
lock
xor
lret
sub
push
enter
cli
mov
xor
rorb
add
add
jo
nop
pushf
pop
in
push
jg
lock
mov
stos
stc
movsl
loopne
insb
jl
imul
fimull
cmp
lret
imul
sbb
ficomps
jns
frstor
add
es
decb
lahf
jo
ja
dec
pop
ss
in
lods
push
pop
test
nop
xchg
mov
add
test
into
push
pop
mov
addb
flds
mov
addb
scas
imul
sbb
test
adc
out
add
add
into
mov
and
daa
xchg
dec
mov
push
aad
pop
dec
jg
jns
cmp
add
push
xchg
daa
sbb
jge
inc
add
aaa
cmpsl
push
lret
mov
das
je
adc
std
out
jecxz
sets
pop
loopne
cmpsb
push
adc
ret
jmp
out
pop
sub
mov
dec
test
aam
add
add
add
sarl
jo
ljmp
add
sub
inc
leave
inc
add
mov
push
add
dec
arpl
stos
dec
les
adc
jns
rcl
out
or
ljmp
inc
add
mov
mov
mov
pop
mov
enter
adc
add
fnop
stc
dec
ja
jecxz
int3
mov
push
shll
add
pop
lds
das
cmpsl
jmp
mov
add
stos
imul
adc
add
and
fdiv
cmp
push
and
das
or
aaa
fadds
add
push
add
scas
pushf
sub
cs
jne
cs
cmp
xor
dec
mov
and
adc
inc
add
push
int
out
fcmovnbe
pop
pop
push
adc
lret
mov
mov
xor
loopne
out
sbb
cmc
cld
or
xchg
mov
movb
push
fisubl
movsl
pop
pop
or
pop
adc
movb
adc
adc
add
add
push
dec
sti
inc
testb
ds
movsl
push
sub
insl
xchg
loope
add
shlb
cmovl
add
sub
imul
jle
stos
sub
add
jne
sbb
pop
mov
outsl
jbe
test
cmpl
addb
xchg
popf
ficoms
rolb
cs
popa
nop
testl
mov
mov
mov
and
lret
sbb
mov
rolb
push
add
cmp
and
add
rorl
aam
add
stos
mov
fmuls
aad
xor
mov
add
xchg
mov
add
fldl
jge
mov
call
jne
fmuls
inc
add
jnp
cli
push
pop
ds
add
sbb
ss
add
cmp
mov
sbb
clc
mov
nop
roll
mov
ljmp
mov
insb
out
insb
or
add
push
xor
cld
fldt
popa
mov
mov
pop
xor
dec
cmpsl
inc
add
fisttpl
aad
sub
mov
xor
aas
adc
shrb
fdiv
jle
imul
jbe
dec
js
xor
pop
push
dec
add
fsubrl
arpl
mov
inc
cmc
mov
add
repnz
aam
into
movb
std
xchg
out
int3
sub
add
add
movb
iret
loope
cmp
xchg
mov
shl
cmpsl
mov
dec
sub
add
sub
jmp
ljmp
mov
add
inc
cmp
xchg
jb
add
xchg
js
rolb
add
aad
js
push
test
stc
ja
test
pop
into
push
and
adc
sbb
inc
add
aaa
lret
adc
movl
cwtl
and
lock
fistpll
clc
out
or
mov
add
push
add
mov
rcrl
pusha
add
loopne
ret
ja
jns
add
push
xor
movsb
rorl
mov
mov
mov
or
fsubl
push
dec
mov
inc
jae
jae
fwait
push
jne
imul
repz
adc
mov
add
adc
les
mov
jns
pop
sbb
push
jmp
lds
std
out
fsubl
rorb
add
sub
addr16
aam
stc
hlt
lret
sbb
xor
popl
lds
inc
loop
push
les
and
mov
mov
add
dec
movsl
std
xor
lods
mov
add
push
je
add
rolb
cmp
xor
addr16
test
ss
sbb
xchg
rolb
add
ja
loopne
sbb
add
jg
pop
xor
mov
fwait
or
pop
sbb
add
or
call
add
adcl
in
mov
rcll
mov
xchg
movsb
loope
clc
les
mov
jno
add
ficompl
add
fidivrl
mov
daa
push
mov
pop
pop
sub
push
cli
sub
call
sbb
adc
mov
loope
scas
dec
xchg
out
sbb
xchg
mov
add
popf
mov
fwait
cmpsb
cmpsl
adc
add
mov
add
push
lret
cmp
imul
into
mul
repnz
sbb
iret
out
xchg
pop
addr16
push
push
mov
or
cmp
cmpl
adc
push
mov
pop
pop
pop
or
add
pushl
into
movsb
sub
pusha
add
add
adc
fcompl
jle
testb
adc
adc
std
inc
add
add
sti
mov
inc
add
ds
sti
lahf
sub
dec
mov
add
sbb
jp
cltd
fcoml
pop
xchg
cwtl
les
pop
xchg
notl
sbb
sahf
xchg
push
ret
pop
cld
mov
dec
enter
sub
mov
ss
aaa
fdivrl
outsb
jle
repnz
jmp
lods
lret
aad
cmp
xor
aad
sbb
inc
nop
in
sub
xchg
mov
repz
ret
pop
int
xor
pop
or
lock
nop
insl
pop
repz
push
mov
mov
lods
mov
pop
lods
adc
ret
insl
mov
shr
dec
test
or
fcmovnbe
in
mov
lahf
push
mov
ljmp
mov
stc
addb
movaps
jecxz
inc
orps
inc
add
pop
movsl
mov
daa
cltd
xor
movsb
xchg
outsb
sub
out
jb
add
push
and
rdmsr
sub
mov
sahf
xor
jno
add
inc
add
js
stos
jne
adc
cld
xor
je
jo
scas
ja
rcrl
jl
mov
or
lret
add
movb
mov
mov
inc
aam
adc
fstpl
and
jg
push
ds
adc
add
jle
mov
call
iret
push
xor
pop
inc
sub
subl
mov
mov
cmp
dec
pop
jl
and
movb
mov
add
sahf
imul
cwtl
test
pop
int
repz
and
out
addb
das
jp
xlat
movsb
imul
out
jecxz
cltd
aad
mov
cmp
lret
pusha
add
mov
sub
or
add
jnp
sub
lock
repnz
and
or
je
out
out
or
pop
ret
pandn
add
scas
lahf
test
fwait
or
and
cmpsl
xlat
pop
xchg
ljmp
inc
add
push
nop
pop
lea
lret
push
jge
test
mov
adc
sbb
dec
cmp
sbb
xchg
popa
addr16
mov
dec
mov
nop
pusha
add
add
fwait
movb
pop
movsl
rcll
add
jge
inc
add
add
sub
in
test
or
jmp
mov
jno
mov
cmp
jl
dec
jmp
mov
mov
inc
add
pop
inc
add
movsl
test
addb
add
cmpsb
dec
push
xchg
arpl
add
fdivrs
ja
jl
inc
mov
loopne
bound
dec
mov
hlt
lcall
mov
pop
xlat
repz
stos
add
push
xchg
jb
pushf
into
xchg
push
and
rolb
add
add
mov
mov
std
ss
add
xchg
sbb
fcmovbe
movb
push
jne
int
sbb
xor
add
mov
test
mov
std
pop
je
lods
jae
in
inc
add
fists
inc
add
addb
mov
push
lret
addb
mov
inc
push
sub
testb
ret
add
sub
loop
push
add
jp
mov
pop
dec
pop
mov
ret
mov
mov
repnz
imul
cmp
mov
repnz
int
mov
pop
jbe
fdivrs
lea
pop
add
xchg
mov
pop
mov
xchg
add
add
bound
pop
jo
scas
mov
cmp
movsl
les
adc
adc
jl
xorl
push
push
xchg
adc
lds
fs
jl
xchg
mov
cwtl
stc
arpl
mov
add
test
testl
mov
lcall
jecxz
mov
inc
mov
push
inc
pop
aaa
loop
mov
pop
or
addb
cmpsb
jg
popa
mov
jae
sti
mov
aaa
adc
and
mov
aad
call
clc
pushf
ficoms
dec
leave
jecxz
add
add
dec
xlat
cs
fwait
sti
cld
outsb
aam
xchg
ficompl
cmpsl
dec
movb
xor
in
dec
fs
and
mov
leave
fwait
xchg
insl
jo
sub
xchg
xchg
pusha
add
ret
pop
or
mov
or
sbb
cli
in
xor
sbb
mov
rolb
scas
or
test
jbe
add
out
fistl
pop
cli
repz
adc
mov
das
xor
aad
pop
mov
xchg
jecxz
test
loop
add
xchg
adc
adc
mov
inc
add
mov
loop
add
movsb
stos
mov
jg
lahf
repz
test
xor
stos
movsbl
xor
mov
inc
test
out
outsl
sti
add
adc
push
add
mov
mov
mov
cmp
test
mov
xchg
or
mov
mov
addb
test
sub
xchg
test
rolb
add
pop
push
lret
leave
mov
push
add
xchg
cmp
xchg
lahf
ret
pop
push
adc
leave
cmp
loop
loope
and
cld
lret
fisubs
sub
add
adc
adc
lea
addb
add
mov
mov
inc
imul
pushf
dec
insl
jle
neg
sub
sarl
out
pusha
add
cmp
jg
jbe
jp
inc
inc
add
shrl
mov
loop
jbe
cld
test
mov
mov
popf
adcl
ret
mov
pop
mov
mov
movsb
lahf
dec
dec
add
mov
inc
call
outsb
test
jnp
imul
addb
mov
add
cmp
insb
in
jae
add
pop
notl
jmp
call
mov
push
or
inc
add
clc
pop
inc
add
aam
add
mov
lcall
and
xchg
cmp
and
fnstsw
outsb
xor
scas
pop
mov
fisubrs
stos
in
xchg
pop
ljmp
add
testl
adc
inc
popf
loop
jmp
clc
call
pop
ret
push
pushf
xchg
sbb
loopne
push
push
lea
and
pop
xchg
mov
jb
bound
das
addb
or
cmp
add
lret
dec
dec
mov
les
out
fisttpll
lods
jp
pop
jnp
cltd
jg
cs
inc
ret
je
cmp
shll
inc
add
hlt
arpl
cmp
and
fbld
add
sahf
add
sti
xor
stos
push
dec
lahf
push
sahf
cli
adcl
add
test
mov
dec
mov
dec
cld
movsl
jmp
cmp
inc
jecxz
add
mov
or
fisttpll
nop
daa
adc
pop
fwait
testb
int
dec
mov
push
jmp
adc
enter
mov
push
adc
cmp
data16
and
push
rcrl
into
sbb
inc
add
xor
inc
add
and
add
shlb
dec
push
test
aad
jb
mov
jl
rclb
aaa
dec
mov
test
adc
clc
sbb
sub
xchg
test
punpckhwd
xor
adc
je
push
std
lods
jns
stc
loop
fstl
ja
mov
repz
and
sbb
std
nop
add
add
mov
jl
test
lock
outsl
mov
ljmp
or
mov
idiv
pop
push
fidivs
mov
mov
jb
add
in
loope
frstor
add
aas
lret
aas
jo
jg
scas
pop
iret
cmp
sarl
sbb
and
btr
loope
xor
jmp
adc
xor
insb
inc
add
mov
and
daa
test
or
add
mov
cmp
mov
adc
xchg
call
and
add
adc
adc
sarl
lea
mov
nop
jns
int3
imul
jo
xchg
jg
mov
push
test
inc
add
loopnew
add
cmpsl
dec
or
sahf
outsb
sbb
push
mov
add
insl
jg
in
cld
push
adc
mov
enter
cltd
call
pop
mov
add
mov
add
xchg
mov
insl
fwait
pop
addb
xor
aas
or
add
mov
std
fsubrs
add
addb
adc
jmp
aas
fisttps
in
add
push
pop
xor
and
inc
add
xchg
pop
test
cld
or
add
outsl
jnp
jg
mov
xor
push
ficomps
add
sbb
call
sub
xchg
test
dec
es
das
iret
xchg
push
test
mov
cmp
cwtl
mov
inc
dec
addb
inc
int3
cmp
loop
jno
sbb
test
lea
in
aad
decl
mov
sub
cmp
fistpll
movsb
cmp
in
add
or
adc
je
mov
pop
mov
add
add
sub
xchg
aaa
cmp
push
mov
add
outsb
mov
or
mov
in
sub
aas
sbb
mov
xor
faddp
sub
push
inc
add
inc
add
dec
mov
pop
and
push
fimull
jne
imul
iret
and
cmp
data16
clc
adc
stos
test
int
xchg
mov
add
rcrl
lahf
mov
imull
and
mov
dec
arpl
out
pop
hlt
cmpl
popa
mov
shll
dec
mov
add
aad
movsb
pop
lret
sub
dec
mov
mov
push
jns
jno
mov
xchg
addl
repz
jae
xchg
xchg
cwtl
xchg
movsb
mull
jae
hlt
pusha
add
mov
sbb
aas
loop
stc
arpl
mov
adc
xchg
loopne
in
mov
mov
lcall
xchg
mov
test
or
call
add
xchg
fucom
das
std
add
or
adc
jne
dec
jl
fimuls
sbb
add
xor
mov
inc
add
test
out
ret
mov
dec
aaa
mov
hlt
cmp
mov
xorl
sti
js
ds
lds
gs
push
scas
roll
movsb
xor
outsl
add
add
inc
add
imul
rcr
adc
sub
xchg
in
and
jns
mov
mov
add
xchg
lock
adc
jl
lcall
xchg
ds
xor
mov
ret
xor
stos
sbb
xor
je
and
push
aam
ret
jnp
cli
test
out
imul
clc
cwtl
add
repnz
push
test
mov
jl
dec
pop
movb
fsubrl
lahf
pop
cmp
adc
xchg
fnstsw
and
repz
and
inc
add
popa
jle
push
sbb
clc
add
jno
sub
and
xor
ficomps
mov
mov
or
jecxz
ljmp
mov
in
outsl
in
xor
adc
imul
lret
in
dec
or
imul
aam
mov
add
and
daa
lcall
sbb
sub
mov
cltd
inc
add
xchg
push
jle
roll
mov
sub
jbe
dec
sub
mov
divl
add
ds
fcompl
in
add
xchg
ret
gs
addb
mov
push
push
add
jl
mov
mov
inc
add
push
jns
fdivr
lods
insl
jno
insb
dec
cmp
add
std
dec
xor
mov
mov
mov
xor
mov
xchg
ss
or
pop
add
push
xchg
aam
jge
arpl
inc
cmp
arpl
jmp
and
add
in
push
movsl
aad
or
andl
cmp
sbb
mov
jne
mov
enter
or
loope
pop
mov
aam
add
bound
loop
push
sbb
cmpl
les
sub
xor
jmp
mov
push
cmp
pushf
test
add
and
mov
add
out
mov
xchg
dec
cmpsb
xor
stos
jae
sub
addr16
jne
mov
cli
lods
sub
std
push
add
xchg
repz
test
xchg
es
mov
dec
lea
xor
mov
popa
sbb
jne
cmp
jp
mov
loope
into
xchg
sbb
addb
cmp
pop
xlat
cs
test
xor
dec
jp
es
ja
nop
repz
add
cmpsl
push
inc
add
add
xchg
data16
arpl
sub
mov
dec
out
xlat
push
dec
incl
add
lods
xchg
add
outsl
iret
ds
scas
xor
mov
mull
add
cmc
lahf
dec
pushf
xor
push
xor
movsl
ja
or
jo
lcall
les
cmp
lret
mov
add
jo
add
jo
xor
add
add
pop
int
aas
cmpsb
add
xor
xchg
call
mov
lcall
cmp
fisubrl
dec
adc
int
push
scas
lahf
pop
sbb
jg
mov
fcmovnbe
lods
pushf
jg
push
sti
aaa
out
add
clc
jp
dec
or
mov
rolb
dec
sar
mov
hlt
xor
ds
imul
pushf
cwtl
int3
fsts
shlb
call
or
mov
sarb
sbb
in
or
mov
lock
sub
or
add
gs
xor
add
pop
test
test
icebp
enter
jnp
mov
pop
loope
xchg
xchg
stc
cmpsl
aaa
arpl
dec
lods
mov
jb
add
lock
imul
add
add
addb
enter
frstor
nop
movsb
movsl
add
dec
bound
pop
aas
or
push
push
adc
xchg
sbb
fwait
mov
and
add
push
cwtl
lret
mov
adc
call
mov
push
lcall
repnz
fidivs
or
adcl
mov
fstpt
bound
shlb
sub
aaa
addr16
inc
add
xor
sbb
jmp
xchg
pop
fs
sub
ljmp
nop
sbb
mov
add
mov
mov
gs
mov
cli
movsl
cmpsl
push
sub
clc
pop
and
ja
mov
mov
psubw
add
cmpsb
inc
add
or
add
and
ljmpw
in
clc
aad
fs
imul
xchg
xor
mov
jl
xchg
jb
mov
sbb
or
cmp
psubusb
mov
aam
pop
rcl
gs
ficomps
xor
push
mov
xchg
xor
add
mov
or
hlt
adc
out
mov
fiadds
in
outsl
pop
clc
adc
scas
sbb
push
fldcw
jne
lods
cwtl
roll
xchg
push
test
int
push
loop
push
addr16
inc
fldl
lea
and
popf
mov
pop
es
cld
jne
shll
enter
lods
out
sbb
lret
xchg
xor
popa
push
addr16
inc
add
repz
cmpsb
leave
xlat
xor
cli
in
insl
push
push
add
in
dec
mov
jge
ljmp
or
insb
push
ljmp
pop
movsl
imul
lea
aam
add
fnstcw
add
sbb
or
or
mov
inc
add
ret
jle
inc
sar
pop
dec
adc
cmp
leave
mov
sbb
add
inc
jge
jae
out
xor
out
dec
in
icebp
and
add
add
mov
ret
adc
mov
std
xchg
cmc
dec
adc
adc
rolb
pop
mov
and
call
stc
and
ffree
add
lret
inc
add
add
int
roll
enter
adc
addb
movsb
xchg
cltd
push
push
enter
mov
addl
inc
add
fs
dec
shll
dec
and
addb
sysret
in
clc
clc
cli
iret
add
jno
inc
add
cltd
or
fwait
push
sub
add
add
loopne
decb
imul
unpcklps
fnstenv
es
leave
mov
add
add
adc
ret
push
add
pop
or
cmpsb
dec
outsb
ret
pop
and
fs
cld
lret
dec
repnz
insb
std
hlt
jno
test
add
pop
and
add
lret
mov
iret
addb
add
add
in
insb
mov
pop
mov
sbb
movsl
mov
roll
push
lods
dec
cmc
arpl
and
xchg
into
mov
fsts
mov
pop
insb
mov
add
mov
xchg
out
and
scas
scas
xchg
adc
add
imul
orl
push
xor
inc
mov
mov
jg
rorl
cltd
clc
and
inc
add
imul
lret
outsl
xor
mov
lret
cmpsl
mov
cli
gs
stos
lret
ja
push
push
nop
pop
ret
xor
jo
addr16
jnp
cmp
pop
aas
adc
inc
add
fsubrl
or
and
push
add
lret
sub
lret
loopne
sbb
cwtl
fimuls
clc
push
ljmp
xor
push
jecxz
roll
add
ljmp
sarl
pop
inc
add
add
jl
and
adc
dec
arpl
insl
mov
cmp
int3
xor
and
cmp
add
orl
jle
push
je
pop
test
mov
adc
xchg
mov
fldenv
jne
xor
xor
or
xchg
and
jecxz
xchg
hlt
add
popa
pop
cld
jnp
dec
popf
les
imul
jg
or
lahf
xchg
jle
sbb
aaa
fwait
jbe
imul
sbb
inc
add
and
mov
repz
cltd
addr16
mov
outsb
dec
jge
rorl
xlat
jae
add
and
mov
es
pop
out
and
jne
insl
js
mov
sbb
cwtl
adc
addb
fwait
jae
inc
sub
jle
mov
xor
enterw
adc
pop
outsb
fucomip
mov
jl
popa
and
dec
ss
jae
dec
popf
movsb
arpl
push
xchg
aas
pop
mov
push
movb
stos
fisttpl
inc
add
pop
movsb
sarl
mov
or
test
cmpsb
mov
xor
icebp
mov
fsubs
aam
cs
test
jle
push
cmp
and
xchg
fnsave
addb
dec
addb
inc
add
mov
addr16
or
mov
push
push
add
lods
adc
xor
add
sbb
cmp
lret
xchg
add
movswl
cmpsl
lea
dec
lods
lods
mov
jmp
xor
pop
mov
out
ljmp
jns
pop
popf
das
cld
out
movsl
dec
ret
pop
ja
add
bound
stc
movsl
rolb
cmp
gs
sbb
pop
push
shrb
adc
mov
flds
add
or
xor
das
mov
pop
mov
sahf
ljmp
cmp
dec
mov
cmp
and
test
dec
inc
add
iret
pushw
lcall
xchg
call
aam
dec
xchg
andl
mov
imul
mov
imul
scas
mov
popf
mov
xchg
imul
pop
mov
push
mov
inc
add
adc
jnp
test
js
jp
add
sub
jb
xor
in
out
int
dec
push
jmp
sbb
sub
testl
sub
pop
adc
mull
xchg
sub
add
repz
fdivs
fistpl
dec
sbb
or
lahf
xchg
cmp
sub
cmc
sub
loope
push
fistpll
xchg
stos
gs
inc
rcr
out
leave
js
or
jge
loop
mov
in
cmp
loope
ror
addb
mov
adc
mov
sbbl
mov
mov
cs
mov
je
fstpl
test
nop
out
mov
inc
stos
and
dec
xchg
mov
pop
add
loope
repnz
pushf
test
adc
addb
xchg
lock
test
pop
dec
js
mov
jo
rolb
shrl
pop
xchg
pop
arpl
adc
add
add
rclb
stos
shufps
out
push
dec
adc
call
push
loope
add
mov
cmpsb
inc
add
push
fimull
mov
aad
pop
int
pop
lcall
add
inc
sbb
xor
popf
stos
mov
sbb
loope
pop
sbb
ss
lods
push
add
sub
dec
mov
cmp
pop
imul
push
enter
add
pop
inc
sbb
add
popf
add
push
pop
pop
sbb
fnstcw
jmp
pop
or
sub
pop
dec
add
add
inc
add
aam
pusha
add
lahf
push
mov
mov
add
add
ds
pop
xchg
js
sub
inc
test
pop
setle
or
add
push
js
sub
in
sahf
sub
pushf
cld
loope
popa
mov
add
adc
pop
into
xchg
divl
dec
sti
nop
pop
mov
dec
dec
push
push
es
test
xor
fcomp
jg
xchg
mov
jo
jae
jae
mov
add
nop
or
test
adc
ret
call
xchg
sbb
arpl
sbb
or
cmp
data16
adc
lea
dec
lock
popf
es
jp
xchg
std
addb
dec
popf
xchg
dec
lds
mov
dec
mov
test
ss
adc
push
orl
and
jb
popf
adc
pop
jb
add
add
jp
ds
jne
roll
lds
jl
cld
cmpxchg
mov
add
fcompl
add
out
add
aas
pop
push
test
jle
inc
add
rclb
repz
cmpsl
jb
rolb
mov
fs
fidivrs
out
pop
and
in
inc
add
push
pop
fildl
add
xchg
in
jecxz
jno
inc
jns
inc
jne
aas
sbb
insb
sbb
addr16
pop
in
jl
xchg
subl
cmpsl
lahf
lret
push
push
push
call
inc
xchg
mov
dec
jo
gs
rclb
cwtl
sbb
add
mov
int
add
pop
test
cmp
pop
cld
in
push
in
jle
hlt
fcoml
shr
negl
jnp
dec
data16
push
loopne
cmpl
xchg
lcall
mull
add
int
decl
xor
jmp
add
aas
cmp
mov
fs
push
cltd
mov
dec
and
fstpl
push
or
add
ss
aad
jle
popa
cmp
inc
stc
xchg
jecxz
jl
add
in
push
cs
cmpsl
fdivp
mov
mov
prefetch
or
dec
in
sbb
xchg
shll
add
jb
sbb
fnsetpm(287
fistpl
pop
push
lahf
sub
add
pop
xchg
leave
push
dec
mov
mov
jnp
add
addb
ss
push
and
and
jle
jmp
sub
cmpsl
into
ss
jnp
fdivrl
mov
xchg
out
push
out
shll
popf
xchg
push
js
enter
cs
or
outsl
sbb
add
add
cmp
inc
jl
jbe
jnp
nop
adc
jge
mov
add
mov
xchg
icebp
xchg
jne
fsubs
add
into
pushf
icebp
and
dec
cmpsb
mov
pop
iret
sub
sbb
out
mov
icebp
fdivrp
mov
mov
adc
in
cmp
mov
ds
add
inc
push
add
inc
add
scas
cltd
sbb
outsb
push
imul
jp
pop
fisubrs
ss
gs
sti
rep
test
and
inc
add
mov
push
test
call
fisttps
mov
add
push
stc
jge
add
stos
cmp
mov
addb
sahf
in
push
insl
dec
fiaddl
call
lret
add
out
lods
rolb
jns
fnstenv
adc
mov
and
mov
popa
pushf
test
dec
call
add
aaa
pushl
xchg
mov
fs
lock
clc
pop
jp
mov
in
nop
pop
shrl
inc
add
mov
xchg
mov
jle
dec
or
pop
xchg
out
sub
sbb
mov
sub
add
loope
ja
xor
add
mov
and
rolb
mov
pop
popa
mov
clc
imul
das
fisttpl
pop
test
mov
test
mov
test
outsb
loopne
mov
mov
scas
sub
mov
add
out
push
ss
mov
sar
inc
add
shll
jp
movb
mov
ret
jns
sub
jp
scas
cmp
pop
sub
test
jl
arpl
lds
adc
mov
add
add
xor
bnd
and
popf
icebp
mul
mov
mov
mov
mov
lcall
push
add
mov
inc
add
mov
repz
and
xchg
call
pop
ret
loope
lret
and
aad
inc
pop
and
push
mov
pop
fcomp
test
popf
sbb
pop
and
stos
jbe
test
xor
mov
add
test
ss
js
fnstenv
js
jmp
fists
stos
pop
ret
jo
out
and
jne
inc
add
jecxz
or
enter
dec
int
sub
adc
les
push
js
mov
popf
cwtl
mov
add
push
int3
push
cmp
fisubs
sub
push
xchg
sbb
push
jp
in
xchg
lds
jns
and
mov
cmpsl
xchg
lock
idiv
in
ss
sub
dec
adc
adc
push
stc
cmp
addr16
movsb
fisubs
es
add
loope
in
addb
sbb
pushf
or
mov
sub
test
imul
mov
and
mov
sub
jbe
test
out
xchg
pop
fbld
add
inc
add
addb
dec
lahf
repnz
pop
adc
pop
movsl
clc
adc
cmpsb
fucomi
test
mov
int
mov
push
pop
pop
addr16
daa
and
jl
xchg
scas
jp
mov
out
sub
aad
push
lret
mov
mov
popf
aaa
push
jae
inc
adc
mov
add
out
jl
cli
jecxz
cmpsl
or
adc
add
mov
stos
je
add
rolb
mov
push
add
add
sub
in
cli
fwait
mov
aas
xchg
sub
scas
js
insl
dec
dec
int
add
in
jle
and
cli
dec
xor
outsl
xchg
jb
mov
testb
movl
repnz
sbb
jo
add
or
lock
inc
mov
pop
mov
inc
mov
roll
push
movb
sbb
ss
es
add
xor
jno
and
pop
ja
dec
out
in
sbb
inc
dec
lahf
sub
xorl
push
inc
add
mov
ja
out
add
add
xchg
add
and
mov
push
lock
push
sbb
and
cs
jno
pushf
leave
inc
push
add
inc
add
sbb
mull
lret
fcmovu
sahf
or
inc
add
pop
inc
add
mov
adc
jle
and
cmp
aaa
lods
push
push
bound
or
xor
jnp
cli
adc
add
imul
xlat
mov
popf
cltd
mov
mov
push
shl
stos
lods
xchg
ss
leave
jp
jle
add
loope
jmp
roll
lret
xor
xchg
insl
mov
mov
adc
inc
add
mov
jle
mov
dec
mov
push
ja
adc
and
mov
jge
loope
mov
add
popf
pop
movb
inc
leave
movb
sub
sub
mov
dec
out
leave
cltd
scas
pop
push
je
inc
mov
mov
sar
or
inc
adc
adc
lret
mov
js
loopne
lods
in
aas
bound
shl
sti
mov
clc
inc
movsl
dec
inc
dec
flds
push
bnd
out
mov
pusha
add
add
push
add
lcall
fmuls
ret
je
add
test
push
in
jge
lahf
xor
les
js
mov
outsl
es
pop
add
mov
xchg
or
into
daa
in
fstpl
mov
out
pushf
fidivl
enter
test
and
negl
and
add
mov
jns
add
add
pop
mov
cmpl
xor
enter
shl
sub
cmpsb
cmpsb
cmp
and
sbb
mov
xchg
mov
cmp
adc
in
xchg
xor
add
add
jno
pushf
mov
cmp
push
repz
add
divb
movsb
mov
test
adc
pushf
je
icebp
cli
out
out
mov
lahf
bound
mov
outsb
jae
jns
dec
aaa
xchg
sub
loop
mov
jl
pop
mov
sub
xor
daa
or
add
iret
ret
mov
shrb
add
jge
xor
mov
rolb
addb
xchg
arpl
mov
fists
cltd
add
mov
out
xor
add
test
out
push
fs
sub
cmpsb
cmpsb
xlat
jecxz
lds
push
add
int
mov
add
fdivl
sbb
cmp
comiss
scas
das
pop
mov
cmp
int3
xor
rolb
fdivp
aam
aas
sahf
push
movsb
mov
fstps
sbb
lds
ror
xor
add
cmp
and
loopne
cmp
push
ds
dec
test
or
or
bound
or
popf
and
dec
in
add
xor
or
in
or
pusha
add
mov
mov
aaa
in
cmp
lea
xor
push
mov
xor
cmp
adc
xchg
or
xor
in
pop
ss
add
mov
addb
add
lret
je
push
das
je
mov
jg
mull
int3
dec
js
dec
andl
mov
push
test
sbb
mov
mov
add
add
into
mov
inc
add
push
imul
adc
push
roll
int
xchg
mov
push
in
sbb
mov
jb
mov
pop
push
or
jmp
mov
stos
aas
loopne
adc
sti
push
sbb
pop
xor
cmp
mov
or
add
inc
mov
adc
les
test
jmp
scas
fmull
add
cmp
add
mov
mov
add
insl
js,pt
jecxz
sub
xor
dec
aad
mov
pusha
add
repnz
dec
jns
add
mov
ja
xor
lods
aad
dec
push
pusha
add
test
jae
loopne
rep
jae
icebp
xor
stos
sub
inc
add
push
sbb
xchg
xlat
sub
fldenv
loopne
xor
pop
test
bnd
cmc
jns
xchg
pop
je
dec
insb
xchg
xchg
ror
jge
fimuls
pop
xor
cmp
iret
ficoml
push
fisubs
add
push
jae
test
jle
rolb
push
enter
mov
lea
cmpsl
pushf
inc
add
inc
stc
shrb
jle
push
add
lret
insl
add
jno
ror
fcomip
lods
jmp
push
jne
pop
push
addb
xchg
icebp
pop
mov
fwait
adc
mov
mov
ret
in
xchg
imulb
cli
mov
fildll
in
dec
rcrl
pop
cli
popa
mov
sbb
push
add
rolb
fiadds
gs
xchg
push
sub
xchg
sub
nop
cmp
scas
push
rolb
lock
push
shl
addb
lret
fcoml
adc
and
js
sti
popa
and
mov
jns
test
xlat
ror
xor
je
add
ret
mov
sub
loopne
scas
or
cmpsl
xchg
jo
mov
jmp
xchg
inc
add
inc
add
add
push
or
cmp
in
addb
add
pop
enter
mov
and
leave
out
lds
add
lret
mov
or
xchg
aam
jge
adc
mulb
pop
call
pushf
and
push
dec
push
cld
dec
enter
imul
fildl
add
pop
and
pop
aas
xor
in
jge
clc
add
lahf
mov
inc
cmp
add
jb
pusha
add
push
movsl
push
push
add
mov
loope
loope
stos
jb
sbb
pop
mov
roll
sbb
add
pop
cli
cmpsl
faddp
cmp
mov
imul
push
xchg
add
stos
mov
mov
add
jnp
mov
lret
mov
mov
add
and
insl
mov
sub
loop
dec
mov
add
lods
lahf
inc
add
xchg
push
jl
arpl
or
rolb
pop
mov
jns
cli
stos
movb
add
jg
mov
mov
cmpsb
dec
or
addb
or
push
adc
mov
mov
jno
xchg
xor
leave
out
cltd
jnp
testl
mov
push
fisttps
pop
test
add
in
xlat
cld
lcall
xor
pop
push
pushf
jnp
adcl
fcoml
push
testl
movsb
aaa
call
imul
movhlps
lcall
iret
ljmp
pop
mov
imul
arpl
insl
lods
adc
clc
jecxz
xor
inc
add
or
cmpsb
sti
test
sti
push
jge
pushf
cmp
aas
mov
daa
cmp
add
adc
pop
cmp
out
pop
jns
iret
sbb
mov
loopne
add
and
lea
mov
and
aam
pusha
add
call
cmpsl
ret
fwait
add
or
mov
add
ja
xorl
lock
call
insl
cmpsl
inc
es
push
leave
dec
jno
loop
add
nop
xchg
push
push
and
cmpsl
pushl
inc
add
add
sbb
add
and
pop
xor
mov
add
push
mov
loopne
xchg
and
inc
add
xchg
cmp
mov
jecxz
inc
add
inc
jecxz
ja
add
loop
push
aad
fcos
outsl
jb
xor
add
pop
rolb
daa
movsb
cmc
popa
aam
push
add
sti
or
mov
and
pusha
add
aas
adc
sbb
fisttpl
xchg
sub
jno
cld
add
mov
out
mov
dec
xor
loope
pop
test
wbinvd
pop
jg
fldl
or
out
push
xor
add
outsl
mov
scas
push
cmp
mov
pushf
xchg
stc
filds
add
mov
add
jae
add
les
add
aaa
mov
add
adc
mov
inc
mov
es
cwtl
std
clc
pop
jg
rolb
inc
fcoml
out
add
jg
or
pop
pop
ficoml
js
inc
add
add
test
in
push
cmpsb
ret
dec
test
orl
subl
pusha
add
cli
imul
mov
cwtl
aaa
xchg
add
jp
xor
or
push
add
mov
add
cmpsb
mov
dec
jg
pop
out
add
or
cmp
out
mov
leave
sub
ficoms
or
add
shl
cmpsl
sbb
cmp
mov
mov
sub
sbb
xor
daa
push
pop
sub
add
xchg
inc
repnz
mov
xchg
cmp
daa
mov
push
adcl
xchg
pop
movb
or
pop
stos
xlat
xor
mov
mov
popf
js
imul
in
outsl
dec
scas
in
sub
daa
nop
cmp
push
xchg
xor
push
add
or
xor
mov
inc
add
pop
lds
push
mov
mov
xchg
sub
add
bound
add
enter
add
outsl
jge
mov
jge
push
sbb
xchg
xchg
in
xchg
or
mov
call
std
xchg
push
xchg
cli
xchg
sub
push
or
jge
arpl
enter
add
shll
pop
cmp
add
movsb
xchg
lahf
icebp
pop
int3
xchg
jo
scas
test
call
in
ficompl
jl
mov
mov
inc
sub
icebp
frstor
icebp
sbb
aas
rolb
mov
cltd
mov
inc
add
sbb
nop
or
or
gs
das
mov
imul
add
sub
and
pop
test
or
addb
mov
loopne
add
popa
cmpsl
sbb
push
inc
add
pop
and
jb
inc
add
mov
or
mov
add
xor
add
movsl
rolb
inc
add
jae
adc
push
js
add
add
inc
inc
icebp
mov
mov
push
mov
outsl
fcmovnbe
addb
inc
sbb
add
in
mov
xchg
mov
lret
pop
insb
and
cld
cmpsl
rcl
mov
lock
lret
leave
andl
or
inc
add
stos
cmp
imul
pop
insb
dec
fwait
inc
add
loopne
mov
adc
icebp
or
push
dec
sbb
out
imulb
lcall
leave
add
loop
arpl
loop
sbb
mov
scas
int3
loope
pop
popl
mov
inc
add
add
enter
jle
movsb
icebp
add
xchg
notl
in
pop
pop
lods
pushf
int
sbb
inc
add
add
add
scas
cltd
aaa
push
adc
adc
lret
cwtl
dec
movb
mov
mov
mov
es
sub
inc
ret
movb
test
pusha
add
leave
call
adc
aas
les
scas
test
mov
push
sub
movb
mov
aad
lret
xchg
jbe
cs
std
in
mov
out
data16
in
imul
add
ficoms
add
addb
lret
cwtl
inc
add
or
add
sahf
dec
sahf
sbb
jae
mov
pop
in
test
aaa
cmp
xchg
add
mov
stos
rorl
xchg
mov
or
pop
push
mov
mov
push
shll
es
imul
fs
jb
fwait
jl
jo
xor
push
dec
push
into
rolb
and
add
pop
sub
stos
aad
mov
ja
scas
aad
aaa
cs
les
inc
add
pop
ds
pop
and
jg
add
sbb
mov
jle
dec
lcall
jp
sub
sub
out
pusha
add
das
adc
test
js
jne
popa
idivb
ljmp
jge
pop
addb
jp
jne
in
lds
or
ret
das
loope
shll
cltd
lcall
cmpsl
sbb
add
adc
add
adc
pop
test
add
add
mov
test
popa
pusha
add
icebp
mov
dec
lea
xchg
add
dec
push
insb
shl
test
dec
jge
cs
xchg
or
ficompl
adc
sbb
inc
jl
orl
inc
add
add
add
or
mulb
mov
enter
push
mov
add
gs
xchg
inc
dec
das
xor
sbb
test
and
mov
scas
bound
jns
in
repz
es
cmp
dec
mov
lock
sbb
jnp
mov
stos
test
or
add
fimull
adc
addb
mov
movl
jbe
icebp
pop
pop
jge
push
loope
mov
inc
int
cmp
mov
push
dec
pushl
add
imul
fbld
xchg
sub
pop
out
adc
add
push
add
and
mov
scas
test
jnp
add
inc
add
fstpt
add
fwait
xor
jnp
mov
add
into
dec
movb
push
mov
test
add
mov
adc
mov
adc
mov
add
add
pop
insl
xlat
mov
dec
jbe
xchg
jo
dec
fisttpl
fstl
aam
mov
and
gs
mov
clc
mov
popa
xor
push
gs
pop
push
sub
add
add
add
inc
xor
dec
jb
xchg
je
cmpsb
push
mov
inc
add
cli
cmpsl
or
mov
stos
mov
mov
outsb
adc
xchg
pop
mul
sbb
nop
fwait
stos
ljmp
jns
scas
repnz
push
mov
add
adc
dec
and
adc
pop
jl
jno
mov
es
aas
mov
mov
and
clc
mov
cmpsb
mov
jecxz
ficompl
dec
sbb
cmp
fdivrl
sub
jbe
inc
add
sub
lds
inc
xchg
aam
sbb
roll
xlat
pop
aad
sub
shlb
enter
sbb
rolb
std
testb
ret
lahf
aaa
mov
add
insb
mov
add
shlb
sbb
int3
xor
lock
add
mov
jns
in
pushf
fbstp
arpl
mov
iret
addr16
mov
jl
ljmp
jmp
clc
test
cwtl
dec
scas
lahf
loopne
xchg
pushf
cmpsb
enter
clc
movb
out
ss
addb
nop
add
push
sbbl
dec
and
xor
push
push
shlb
imul
xor
push
mov
mov
test
jb
dec
lret
popa
mov
pop
mov
add
xchg
fldenv
clc
ss
add
or
mov
cmp
push
xchg
or
shld
mov
nop
pushf
push
lea
xor
sub
bound
insl
fists
in
mov
push
jns
out
push
push
dec
pop
jbe
or
pop
lods
sbb
test
in
sub
jno
mov
mov
mov
popa
fsubr
push
inc
mov
fidivrl
ljmp
loope
lea
mov
sub
outsl
scas
add
cli
sar
out
xchg
fwait
sbb
push
inc
mov
cmc
pop
rolb
fs
addb
rorl
in
xchg
in
adc
xor
add
dec
mov
repz
pusha
add
cmp
add
dec
and
out
pop
push
fs
loope
cltd
cld
clc
adc
and
lret
add
cli
ljmp
lods
fwait
jge
jge
leave
addb
testl
gs
loop
lret
pop
xchg
and
cld
imul
clc
inc
xchg
call
jl
mov
mov
adc
lahf
dec
dec
mov
xchg
push
idiv
in
rclb
dec
popa
xchg
mov
enter
jmp
jno
push
or
pop
mov
iret
add
jl
mov
fst
loope
pop
pop
ja
pop
sbb
cmp
icebp
xor
aas
sub
sub
mov
mov
inc
add
jmp
push
mov
add
add
scas
into
push
and
aaa
movsb
push
inc
fwait
mov
stos
xchg
add
xor
mov
mov
in
push
aas
adc
add
das
fisubl
add
mov
or
les
aaa
loopne,pn
cmp
xor
mov
mov
add
in
push
jo
rorb
sarb
xor
jns
aad
lea
push
pop
mov
call
je
loope
js
divb
insl
hlt
in
insb
ret
or
add
push
add
add
adc
mov
iret
add
jo
aam
dec
pop
jbe
pop
sahf
in
cmp
or
dec
jnp
jecxz
xor
outsl
jns
dec
shlb
insl
cmp
add
lret
add
daa
pop
jae
jmp
xor
sahf
addb
clc
dec
sub
lods
add
add
je
sahf
shrl
stos
roll
mov
movsl
and
add
pop
leave
sbb
cmc
mov
add
xor
push
sub
or
clc
jmp
add
rorl
test
lret
push
stos
push
arpl
push
mov
xchg
popf
jge
adc
add
cltd
insb
adc
push
call
xchg
sbb
push
int3
mov
daa
xor
mov
pop
and
rorl
push
jecxz
arpl
pushl
mov
repnz
mov
mov
imul
add
xor
push
xlat
test
push
ds
ja
jmp
add
movsl
sub
sub
jns
int3
push
rcrl
mov
data16
dec
aad
aas
imul
cmc
jmp
inc
add
push
adc
mov
daa
aaa
andl
sti
call
push
dec
scas
push
lods
sbb
rorl
adc
in
push
das
ret
test
in
pusha
add
fucomip
jg
cli
bnd
or
push
mov
inc
orl
and
adc
pop
sub
push
stc
cwtl
jnp
jae
xor
or
mov
aaa
dec
pop
adc
dec
push
in
aas
repnz
add
es
sbb
sbb
add
push
add
push
pop
clc
rolb
add
mov
mov
jo
js
push
out
xchg
mov
add
mov
notb
xor
mov
add
lods
lcall
xchg
jo
sub
scas
movsl
test
fistps
add
sub
mov
ret
cmp
sbb
dec
jg
call
into
sub
adc
into
mov
shrl
sub
subl
cs
inc
add
lods
inc
loope
into
push
xchg
sbb
push
xchg
jno
push
sub
rolb
dec
xor
addb
mov
mov
rcrl
pop
sub
add
scas
test
jo
mov
push
cld
loop
lock
adc
sub
ret
xor
cmp
xlat
mov
jno
psubw
or
add
nop
jb
add
add
and
stc
nop
jb
clc
add
add
addb
lcall
nop
jb
add
push
movsl
mov
nop
cld
jmp
push
add
add
lods
add
stc
nop
jb
repz
add
sub
lcall
jb
push
adc
jae
dec
add
stc
nop
jb
add
jae
add
mov
push
mov
xchg
ret
sub
repz
sub
nop
cld
jmp
push
add
add
add
add
stc
nop
jb
in
aas
pop
add
push
mov
xchg
ret
add
add
push
stc
nop
jb
add
filds
add
shl
inc
add
cwtl
add
cmp
jae
mov
nop
cld
jmp
movb
add
mov
out
dec
nop
cld
jmp
sub
adc
lret
add
nop
jb
push
in
xor
add
test
mov
add
push
cwtl
lods
stos
pushl
stc
nop
jb
add
add
push
sub
add
nop
jb
push
clc
pop
shl
stc
nop
jb
mov
mov
stc
nop
jb
add
add
add
stc
nop
jb
fildll
mov
jne
stc
nop
jb
add
stc
nop
jb
add
add
push
hlt
leave
popa
stc
nop
jb
add
testl
idiv
nop
jb
add
pushf
add
mov
stc
nop
jb
add
sub
add
or
nop
cld
jmp
sub
sbb
dec
cmp
nop
jb
arpl
popa
add
ljmp
nop
pop
add
sahf
add
call
outsl
loopne
mov
xchg
ret
clc
xchg
add
test
nop
cld
jmp
push
push
adc
into
mov
nop
cld
jmp
mov
add
cmp
or
stc
nop
jb
outsb
es
pop
lods
push
mov
xchg
ret
mov
dec
ss
and
stc
nop
jb
inc
leave
mov
stc
nop
jb
arpl
aas
add
sti
sub
nop
jb
add
push
push
push
and
push
mov
xchg
ret
add
arpl
adc
add
add
repnz
out
pop
cwtl
mov
stc
nop
jb
fs
mov
push
mov
xchg
ret
add
mov
add
mov
add
add
add
jle
mov
stc
nop
jb
sub
sti
push
jle
jns
add
js
inc
add
lcall
push
cld
inc
add
add
mov
cli
add
stc
nop
jb
adc
adc
mov
stc
nop
jb
repz
repnz
push
stc
nop
jb
adc
xlat
mov
sub
ret
lret
sub
add
stc
nop
jb
pop
repnz
mov
xchg
ret
add
mov
mov
stc
nop
jb
pop
add
mov
add
and
stc
nop
jb
add
add
pop
test
into
sub
stc
nop
jb
movb
inc
call
inc
add
add
add
stc
nop
jb
jae
add
add
sar
nop
jb
sbb
sti
lods
add
lret
add
add
add
fs
cwtl
push
fmull
jb
add
add
arpl
push
stc
nop
jb
add
push
add
cmpb
nop
jb
push
add
push
push
mov
xchg
ret
aam
add
add
sbb
nop
jb
add
push
push
xor
jb
xlat
push
dec
push
mov
xchg
ret
nop
add
sub
push
push
mov
xchg
ret
and
mov
adcb
add
repz
bound
inc
add
add
push
mov
xchg
ret
add
sub
jmp
add
mov
in
popf
lods
add
das
jne
stc
nop
jb
out
in
pop
push
mov
xchg
ret
add
add
add
fistpl
nop
jb
push
push
add
push
jno
dec
push
stc
nop
jb
xor
add
clc
pop
push
pop
push
push
mov
xchg
ret
add
add
nop
cld
jmp
aam
jno
add
adc
push
mov
add
sbb
or
inc
push
mov
xchg
ret
add
push
add
mov
mov
xchg
ret
cmp
cmp
stc
nop
jb
xlat
add
sub
mov
xchg
ret
clc
push
add
clc
push
push
mov
xchg
ret
call
jno
push
nop
cld
jmp
add
push
pushf
add
filds
clc
mov
stc
nop
jb
sahf
nop
add
add
stc
nop
jb
add
mov
fcoms
nop
jb
add
add
movzwl
stc
nop
jb
add
add
add
stc
nop
jb
add
push
pop
add
stc
nop
jb
mov
inc
outsb
call
stc
nop
jb
inc
mov
xchg
stc
nop
jb
inc
add
add
add
xchg
mov
stc
nop
jb
add
inc
stc
nop
jb
fbld
jns
cmp
jb
add
stc
nop
jb
add
inc
add
and
jb
jmp
stc
nop
jb
add
jns
test
add
stc
nop
jb
sti
xlat
jbe
add
loop
add
aam
testl
cmp
ret
pop
push
add
xlat
xor
pop
pop
stc
nop
jb
sub
pop
add
jae
je
nop
cld
jmp
push
add
ficoms
popf
aad
add
add
add
mov
stc
nop
jb
cmp
bound
push
or
nop
jb
popa
testl
stos
mov
stc
nop
jb
popa
mov
je
stc
nop
jb
add
push
nop
cld
jmp
add
add
out
popf
out
lea
nop
cld
jmp
mov
repz
inc
add
nop
jb
cmp
add
adc
cld
jmp
mov
add
add
lret
jmp
adc
add
int3
mov
stc
nop
jb
movb
push
in
mov
sub
nop
jb
clc
jno
add
add
cmp
xor
add
nop
cld
jmp
lcall
add
stc
nop
jb
xchg
add
lds
sbb
cmpl
jmp
nop
add
sub
mov
xchg
ret
add
and
push
mov
xchg
ret
add
add
nop
cld
jmp
add
imul
popa
add
mov
xchg
ret
sub
add
inc
and
nop
jb
push
mov
push
push
mov
xchg
ret
add
push
nop
jb
inc
add
dec
add
push
mov
mov
xchg
ret
mov
loope
nop
jb
sti
repz
add
imul
nop
jb
push
add
and
add
cmp
jb
add
add
repnz
cmp
jg
stc
nop
jb
add
add
add
stc
nop
jb
lcall
mov
pop
shl
clc
add
test
cmp
and
push
mov
xchg
ret
add
notb
fistl
inc
add
out
add
decl
faddl
xchg
ret
sbb
mov
push
sub
jb
add
lods
add
fwait
jb
stc
nop
jb
add
mov
jmp
cli
incl
movb
add
clc
add
stc
nop
jb
add
mov
add
push
mov
xchg
ret
add
add
add
add
push
outsb
pop
sbb
nop
jb
add
add
add
add
push
push
mov
xchg
ret
add
in
arpl
je
stc
nop
jb
add
and
aaa
mov
mov
jb
sahf
add
add
fimull
mov
adc
nop
jb
add
add
jle
nop
cld
jmp
mov
add
push
test
jne
stc
nop
jb
add
add
xlat
push
sbb
cmp
nop
jb
add
mov
xor
add
popf
add
add
call
jne
stc
nop
jb
add
inc
or
mov
xchg
ret
add
lcall
jmp
imul
mov
jnp
popa
add
mov
xchg
ret
mov
mov
stc
nop
jb
int3
add
stc
nop
jb
repz
sub
clc
pop
into
xor
push
mov
xchg
ret
jno
clc
push
nop
or
jb
mov
inc
add
cmpl
cmp
nop
jb
clc
cwtl
mov
jnp
mov
dec
add
add
and
add
add
xor
jle
nop
cld
jmp
mov
add
stc
nop
jb
add
add
add
mov
mov
adc
nop
jb
and
push
pushl
push
mov
xchg
ret
add
and
mov
xchg
ret
sub
push
leave
push
stc
nop
jb
add
das
call
stc
nop
jb
push
leave
add
add
pop
nop
cld
jmp
add
jae
add
push
mov
jmp
inc
and
sub
stc
nop
jb
cmp
pop
add
call
stc
nop
jb
sub
add
push
pop
push
stc
nop
jb
mov
outsb
inc
orl
addb
add
nop
jb
inc
nop
das
add
push
mov
xchg
ret
inc
add
pushf
movzwl
stc
nop
jb
add
add
pop
xor
push
mov
xchg
ret
fs
outsb
pop
pop
stc
nop
jb
imul
gs
mov
stc
nop
jb
add
add
jmp
nop
cld
jmp
pushf
add
lods
push
push
add
add
nop
jb
add
cmp
add
stc
nop
jb
add
jbe
add
nop
cld
jmp
add
sbb
mov
xchg
ret
pop
add
pop
pusha
stc
nop
jb
lcall
lock
sbb
nop
jb
add
imul
nop
cld
jmp
push
add
add
add
stos
xor
push
mov
xchg
ret
push
mov
scas
enter
call
sti
add
repnz
add
lods
rep
stc
nop
jb
add
add
mov
stc
nop
jb
leave
inc
and
mov
nop
cld
jmp
arpl
xlat
popa
aas
pop
adc
mov
push
mov
xchg
ret
add
adc
mov
push
mov
xchg
ret
add
das
mov
push
mov
xchg
ret
add
add
inc
sti
stc
nop
jb
imul
inc
add
lods
cmpl
nop
cld
jmp
add
add
and
dec
add
stc
nop
jb
add
pop
nop
cld
jmp
repz
add
add
sti
addr16
pop
mov
push
mov
xchg
ret
mov
add
fbstp
fistl
add
lods
add
add
cmp
push
mov
xchg
ret
sub
add
mov
push
mov
xchg
ret
add
add
nop
jb
sahf
add
sahf
push
mov
ljmp
add
add
push
mov
xchg
ret
push
mov
ljmp
mov
jmp
sub
inc
bound
test
ss
add
stc
nop
jb
add
and
adc
nop
jb
xchg
add
jae
push
mov
jb
mov
pop
add
ja
je
nop
cld
jmp
xlat
push
add
pop
adc
nop
jb
add
testl
stc
nop
jb
add
in
push
add
dec
cmp
nop
jb
add
add
mov
jmp
aas
add
add
lcall
sldt
push
inc
add
sub
jp
loop
nop
cld
jmp
jno
in
add
sbb
push
mov
xchg
ret
aas
add
cmp
stc
nop
jb
add
and
xor
add
stc
nop
jb
add
stc
nop
jb
add
cwtl
in
movb
mov
stc
nop
jb
sub
sub
add
nop
jb
sti
push
push
add
xchg
call
cmp
incl
clc
add
add
and
nop
jb
push
pop
add
add
jb
push
add
cmp
push
stc
nop
jb
aas
add
stos
stc
nop
jb
add
push
push
jg
jmp
cli
inc
add
add
hlt
xor
ja
stc
nop
jb
add
dec
mov
stc
nop
jb
add
add
push
add
add
stc
nop
jb
pushf
add
in
nop
cld
jmp
push
popf
add
push
clc
clc
push
add
clc
and
cmp
nop
jb
xlat
lods
xlat
add
xchg
xchg
lahf
mov
nop
cld
jmp
and
xchg
dec
clc
stc
nop
jb
xchg
popa
cwtl
or
nop
jb
add
add
ret
stc
nop
jb
pop
add
add
add
sub
mov
xchg
ret
push
add
fs
sti
mov
stc
nop
jb
add
add
mov
add
add
stc
nop
jb
push
add
and
fisubs
xor
add
stc
nop
jb
inc
add
fildl
popf
stc
nop
jb
add
push
push
nop
cld
jmp
add
testl
inc
rcrl
mov
stc
nop
jb
cmp
add
push
mov
xchg
ret
pop
add
add
sub
jae
push
mov
xchg
ret
add
loope
jle
stc
nop
jb
adc
add
add
fisttps
mov
xchg
ret
imul
sbb
nop
jb
outsb
add
add
dec
call
stc
nop
jb
notl
inc
out
add
ret
ljmp
adc
incl
add
aam
outsb
push
fcmovb
stc
nop
jb
add
add
inc
push
adc
stc
nop
jb
jae
add
add
push
mov
xchg
ret
out
pop
int3
mov
stc
nop
jb
xor
push
jge
stc
nop
jb
sub
mov
outsl
push
push
mov
xchg
ret
fisttps
push
pop
stc
nop
jb
push
add
add
add
sbb
xchg
idiv
stc
nop
jb
out
add
mov
rcrl
and
nop
jb
push
nop
add
xchg
and
mov
movzwl
stc
nop
jb
add
pop
idiv
stc
nop
jb
add
add
nop
jb
popf
add
add
faddl
repz
nop
jb
add
sbb
and
mov
inc
add
inc
notl
stc
nop
jb
add
push
aas
mov
jae
stc
nop
jb
add
popa
popa
sar
pop
nop
cld
jmp
add
repz
lcall
stc
nop
jb
outsb
add
mov
jb
arpl
add
add
cmp
mov
nop
jb
add
inc
add
lea
nop
cld
jmp
add
xchg
xor
add
jmp
add
and
jle
adc
nop
jb
popf
add
xchg
add
lea
andb
add
fs
je
stc
nop
jb
popa
pushf
cmp
mov
jb
add
test
add
stc
nop
jb
push
pop
mov
add
stc
nop
jb
mov
nop
cld
jmp
add
outsb
add
subb
ljmp
add
mov
fs
insb
add
nop
jb
add
add
fmull
test
nop
jb
add
cwtl
add
push
mov
xchg
ret
inc
add
add
jl
sbb
nop
jb
add
mov
push
mov
mov
notl
add
push
popf
add
push
mov
xchg
ret
add
add
mov
nop
cld
jmp
add
jae
add
push
jb
inc
inc
mov
jp
nop
cld
jmp
add
add
add
and
nop
jb
lods
mov
lods
clc
push
stc
nop
jb
add
clc
add
and
cwtl
ror
push
mov
xchg
ret
imul
mov
mov
stc
nop
jb
push
add
nop
jb
add
add
arpl
nop
jb
add
imul
mov
stc
nop
jb
and
jne
stc
nop
jb
fs
loop
mov
pusha
stc
nop
jb
leave
add
frstor
popa
add
nop
jb
push
cmp
cwtl
cmp
stc
nop
jb
imul
push
mov
xchg
ret
and
rep
nop
cld
jmp
add
add
add
push
nop
jb
add
push
stos
popa
nop
cld
jmp
add
call
add
aas
subl
nop
cld
jmp
add
push
add
or
nop
jb
push
add
stos
xor
stc
nop
jb
add
mov
jns
nop
cld
jmp
clc
mov
add
add
add
jb
add
add
mov
inc
jns
nop
cld
jmp
push
add
add
add
jno
scas
push
stc
nop
jb
clc
add
aam
push
sub
les
mov
xchg
ret
add
popf
out
push
stc
nop
jb
add
aam
lcall
stc
nop
jb
push
cmp
aam
rolb
decl
push
mov
xchg
ret
in
mov
push
add
stc
nop
jb
add
mov
fildl
xchg
ret
outsb
add
movb
mov
stc
nop
jb
add
stc
nop
jb
add
add
call
nop
cld
jmp
sub
sub
push
andb
lock
add
in
sbb
outsb
cmp
stc
nop
jb
add
push
cld
jmp
mov
sub
sbbb
cwtl
add
add
or
cld
jmp
add
add
in
les
das
add
nop
cld
jmp
mov
add
push
mov
xchg
ret
cmp
sub
add
stc
nop
jb
clc
add
mov
cmpb
incl
nop
sub
add
jb
add
leave
sub
pushf
cld
add
stc
nop
jb
xlat
outsb
add
repz
nop
jb
add
push
in
add
jb
xor
add
push
add
mov
nop
jb
add
popf
add
push
mov
xchg
ret
cmp
add
adc
rorl
insl
jae
nop
jb
add
add
add
push
mov
xchg
ret
pushf
cmp
movb
pop
add
stc
nop
jb
push
add
add
add
add
repnz
nop
and
leave
pop
stc
nop
jb
pop
add
add
aam
add
stc
nop
jb
push
add
add
push
mov
add
nop
jb
aas
notl
stc
call
add
repz
and
stc
nop
jb
arpl
sub
dec
push
stc
nop
jb
pushf
add
push
pushf
pop
push
mov
xchg
ret
in
filds
clc
jae
sub
test
nop
jb
sahf
repnz
mov
inc
add
lods
lods
mov
mov
xchg
ret
mov
repz
pop
cld
stc
nop
jb
pop
mov
mov
nop
cld
jmp
add
push
add
push
jns
stc
nop
jb
cwtl
sbb
outsb
sti
add
jmp
jb
pop
mov
add
xor
mov
stc
nop
jb
in
repz
xor
shl
nop
cld
jmp
in
add
mov
lea
stc
nop
jb
add
clc
pop
lcall
or
mov
xchg
ret
pop
add
inc
push
mov
xchg
ret
push
push
mov
rclb
incl
add
push
xor
add
xor
nop
cld
jmp
sbb
xchg
dec
sub
sbb
pop
pop
add
nop
cld
jmp
add
sar
nop
jb
mov
add
inc
add
jb
lcall
push
add
stc
nop
jb
add
add
mov
push
mov
xchg
ret
repnz
and
mov
stc
nop
jb
push
repnz
add
repz
mov
xchg
ret
aas
pushf
mov
cwtl
push
mov
pop
mov
dec
add
test
add
cmpl
nop
cld
jmp
push
sub
add
stc
nop
jb
add
sbb
jmp
add
add
add
cltd
add
nop
cld
jmp
sahf
clc
popa
add
add
popa
push
pop
mov
nop
cld
jmp
add
add
add
popa
scas
je
stc
nop
jb
add
mov
rep
push
mov
xchg
ret
pop
pop
clc
mov
adc
aam
mov
stc
nop
jb
add
xor
sub
nop
jb
dec
sub
les
fildl
nop
cld
jmp
add
pop
add
add
dec
cmpl
nop
cld
jmp
in
add
inc
add
dec
cmp
cld
jmp
call
mov
add
fmuls
das
add
xchg
sbb
sbb
jmp
add
sbb
mov
mov
add
nop
jb
add
popf
imul
nop
cld
jmp
add
call
mov
xchg
ret
push
aas
inc
add
mov
stc
nop
jb
add
add
push
sub
jb
sti
add
mov
push
push
mov
xchg
ret
xchg
add
aam
add
icebp
inc
add
sub
cmp
ss
add
stc
nop
jb
outsb
add
nop
sub
pop
call
nop
cld
jmp
lods
cmp
add
out
inc
add
filds
mov
add
push
push
mov
xchg
ret
add
inc
inc
add
jmp
add
arpl
cmp
xor
push
mov
mov
add
pop
mov
stc
nop
jb
inc
call
nop
jb
arpl
add
sbb
clc
add
lcall
add
movzwl
stc
nop
jb
add
add
stc
nop
jb
add
jno
rclb
add
xor
stc
nop
jb
add
push
dec
add
test
cli
test
nop
cld
jmp
fistps
orb
lods
push
stc
nop
jb
mov
popa
add
fimuls
jb
push
shl
mov
in
outsb
pop
add
lods
add
rol
add
mov
add
stc
nop
jb
add
add
lcall
push
mov
add
test
stc
nop
jb
push
clc
or
mov
xchg
ret
pop
add
leave
jmp
push
mov
xchg
ret
push
cmp
inc
mov
lods
push
mov
xchg
ret
mov
dec
push
stc
nop
jb
arpl
push
add
push
add
add
nop
jb
add
inc
push
les
cs
nop
cld
jmp
add
add
add
cmp
push
mov
add
pop
add
add
cmp
add
dec
add
divps
add
inc
add
add
add
add
add
add
stc
nop
jb
lcall
movsb
stc
nop
jb
aam
jae
add
mov
stc
nop
jb
add
add
push
and
nop
cld
jmp
popf
add
jno
idiv
mov
push
mov
xchg
ret
fistps
stc
nop
jb
repnz
add
add
sub
and
mov
xchg
ret
add
push
inc
xchg
or
andb
mov
mov
stc
nop
jb
repnz
add
cmpl
jmp
sbbb
add
add
nop
push
add
mov
stc
nop
jb
in
jae
sub
jmp
pop
arpl
add
add
mov
nop
cld
jmp
push
add
add
dec
mov
stc
nop
jb
add
add
add
stc
nop
jb
add
adc
jg
stc
nop
jb
sub
sub
pop
mov
stc
nop
jb
add
sahf
cs
stc
nop
jb
add
cmp
sub
push
add
stos
stc
nop
jb
add
repz
mov
push
mov
xchg
ret
add
fstps
mov
xchg
ret
dec
add
movb
fsubp
inc
add
add
jns
add
nop
jb
push
add
add
stc
nop
jb
popf
clc
and
xchg
aam
mov
stc
nop
jb
sub
mov
add
stc
nop
jb
add
out
mov
stc
nop
jb
add
push
add
stc
nop
jb
xchg
fs
push
mov
nop
jb
sti
fs
negl
rclb
pminsw
xchg
ret
leave
mov
add
cld
jmp
pop
mov
adc
loop
inc
add
add
add
mov
roll
xchg
ret
mov
int
jo
nop
cld
jmp
clc
add
lcall
adc
xor
stc
nop
jb
xor
push
add
push
sbb
test
nop
jb
sti
add
mov
stc
nop
jb
add
cmp
ljmp
add
add
jb
imul
cmp
xor
testl
nop
cld
jmp
cmp
nop
cld
jmp
lods
mov
cmpb
sub
nop
jb
popa
add
jl
nop
cld
jmp
add
arpl
cld
jmp
add
mov
fcoml
nop
jb
add
aaa
int3
pop
stc
nop
jb
push
add
add
xor
xor
nop
cld
jmp
mov
add
jmp
add
leave
dec
add
add
stc
nop
jb
imul
add
lcall
movswl
stc
nop
jb
lcall
mov
xchg
ret
push
repnz
add
xchg
mov
push
idiv
incl
jae
add
adcb
and
push
mov
xchg
ret
add
inc
xorl
jb
imull
outsb
mov
mov
stc
nop
jb
add
add
add
jl
and
xlat
inc
add
aas
pop
add
stc
nop
jb
movb
sti
pusha
push
mov
xchg
ret
add
sub
push
stc
call
stc
nop
jb
imul
out
stc
nop
jb
add
add
mov
xchg
ret
add
pushf
testb
repz
stc
nop
jb
sub
fs
or
stc
nop
jb
adcb
add
jne
stc
nop
jb
sti
push
sahf
subl
push
mov
xchg
ret
add
add
mov
stc
nop
jb
sbb
push
ds
stc
nop
jb
push
imul
inc
add
fs
sub
nop
jb
add
add
lcall
stc
nop
jb
mov
push
out
stc
nop
jb
aas
add
pop
mov
nop
cld
jmp
add
adc
push
mov
xchg
ret
lods
aas
aas
mov
jecxz
mov
stc
nop
jb
sub
nop
fwait
call
push
mov
xchg
ret
mov
add
mov
stc
nop
jb
push
sbb
movsb
cmp
nop
jb
inc
mov
push
or
jb
subb
clc
sahf
cmp
sub
nop
jb
clc
add
add
mov
nop
jb
imul
add
int
stc
nop
jb
call
stc
nop
jb
push
add
mov
test
nop
cld
jmp
add
fs
add
add
clc
push
mov
xchg
ret
cmp
add
insb
ret
stc
nop
jb
repnz
testl
fdivr
nop
jb
out
add
jecxz
js
and
stc
nop
jb
push
dec
clc
push
xor
pop
mov
nop
cld
jmp
add
leave
add
popf
mov
movzwl
push
mov
xchg
ret
add
pop
pop
stc
nop
jb
add
add
adc
lret
nop
jb
add
add
pop
lcall
nop
jb
sti
aam
add
call
add
add
nop
jb
cmp
jne
nop
cld
jmp
in
aam
xchg
push
stc
nop
jb
pushf
add
ret
pop
mov
stc
nop
jb
mov
add
out
outsl
push
stc
nop
jb
arpl
add
lahf
push
nop
cld
jmp
pop
dec
add
clc
popf
add
sbb
test
nop
jb
pushf
add
add
stc
nop
jb
add
mov
jne
nop
cld
jmp
add
jmp
stc
nop
jb
in
push
add
aaa
xor
inc
in
mov
xchg
ret
sub
mov
stc
nop
jb
add
out
xor
stc
nop
jb
add
add
popa
stc
nop
jb
aam
mov
add
add
stc
nop
jb
nop
imul
mov
dec
nop
cld
jmp
add
add
xlat
add
popf
call
stc
nop
jb
add
add
push
push
mov
xchg
ret
pop
arpl
add
adc
jb
outsb
imul
pop
stc
nop
jb
sub
add
pushf
push
repnz
add
push
mov
xchg
ret
add
pop
push
jmp
add
add
cmp
add
nop
cld
jmp
add
add
testl
and
nop
jb
add
cwtl
add
mov
andb
add
negl
in
add
add
stc
nop
jb
imul
push
or
imul
jmp
pop
add
jmp
stc
nop
jb
jae
add
repz
sti
nop
cld
jmp
add
sub
add
inc
mov
push
push
mov
xchg
ret
add
dec
nop
cld
jmp
lcall
add
and
stc
nop
jb
add
sub
stc
nop
jb
leave
jno
add
adc
nop
jb
add
push
xchg
add
mov
push
mov
xchg
ret
cmp
add
mov
stc
nop
jb
add
add
lcall
nop
call
nop
inc
popf
add
and
jge
stc
nop
jb
push
add
dec
add
cld
jmp
dec
repz
dec
adc
pop
stc
inc
add
mov
cmp
cld
jmp
push
sbb
mov
mov
stc
nop
jb
cmp
sub
test
nop
cld
jmp
xor
add
sub
cld
jmp
jae
push
pushf
aas
add
dec
cmp
mov
xchg
ret
cwtl
mov
stc
nop
jb
add
filds
sahf
pop
sub
mov
dec
add
popa
mov
sahf
add
cmpsl
sub
nop
jb
add
add
add
sti
nop
cld
jmp
add
sub
add
jb
add
pushf
mov
or
add
nop
jb
push
repz
jmp
xorb
ljmp
push
push
outsb
add
mull
push
mov
outsl
xor
stc
nop
jb
inc
add
jno
imul
adcb
cwtl
add
xor
push
stc
nop
jb
inc
add
mov
nop
jb
push
push
add
add
add
mov
stc
nop
jb
add
mov
add
add
sti
add
dec
cmp
jmp
incl
addb
add
xchg
imull
add
add
nop
jb
add
mov
push
mov
xchg
ret
sbb
add
jb
add
push
add
inc
add
push
mov
xchg
ret
call
mov
stc
nop
jb
sti
cwtl
mov
stc
nop
jb
lcall
and
nop
cld
jmp
add
add
xlat
add
nop
cld
jmp
add
jae
leave
add
outsb
dec
nop
cld
jmp
add
add
sub
add
inc
iret
or
inc
add
notl
stc
nop
jb
add
mov
stc
nop
jb
popa
add
jne
nop
cld
jmp
lods
xor
call
stc
nop
jb
add
rorl
hlt
inc
add
add
add
scas
pop
stc
nop
jb
mov
fs
add
inc
add
add
add
dec
push
nop
cld
jmp
fucomip
xlat
add
add
add
inc
push
mov
xchg
ret
mov
into
je
stc
nop
jb
xor
add
lds
loope
xchg
mov
stc
nop
jb
add
push
ret
push
push
mov
xchg
ret
add
sub
jmp
add
testl
push
mov
xchg
ret
add
add
jge
push
mov
xchg
ret
cmp
push
push
mov
xchg
ret
push
movb
outsb
gs
lea
stc
nop
jb
add
add
leave
mov
stc
nop
jb
out
repnz
add
pop
shl
stc
nop
jb
add
lcall
push
mov
xchg
ret
imul
fisubs
xor
add
stc
nop
jb
repz
repz
in
sub
mov
add
add
stc
or
test
mov
jbe
add
add
add
clc
mov
push
les
xsavec
sbb
into
pop
movsb
call
pop
cld
sbb
jnp
in
int3
mov
add
ret
add
ret
cmp
fcmovb
out
std
mov
xchg
adc
lods
inc
cld
sub
add
addr16
test
mov
add
ljmp
sbb
daa
mov
add
gs
or
mov
mov
cli
xchg
jecxz
add
mov
sub
scas
sub
stos
into
sbb
dec
or
insl
lods
movb
mov
pop
adc
add
add
push
xchg
mov
into
mov
add
push
repz
dec
sahf
test
sub
sub
stc
movb
ja
mov
scas
and
aam
in
push
push
fwait
je
stos
pop
in
outsb
jmp
cmpsb
lock
dec
test
xchg
loope
add
mov
push
dec
daa
fwait
push
push
adc
mov
xor
ja
ss
xchg
sbb
add
push
popf
es
or
subl
push
das
xchg
scas
push
inc
cmp
jle
add
mov
out
aas
adc
out
ja
mov
add
ljmp
add
sub
mov
loope
gs
mov
sbb
test
cmp
pushf
cs
test
or
adc
jb
das
shll
add
mov
fnstenv
jns
jnp
addb
addb
das
daa
xchg
hlt
jg
sbb
es
sar
and
lods
cs
mulb
xlat
mov
add
iret
pop
hlt
jmp
push
add
testb
xchg
xchg
sub
inc
jle
sbb
mov
shrl
out
daa
inc
add
dec
sub
test
dec
ss
in
cmp
mov
std
mov
jp
sub
rolb
shl
lret
sbb
loope
ljmp
inc
outsb
dec
arpl
xchg
sbb
add
cmpsl
in
push
dec
adc
xor
loop
icebp
addl
pushf
fisubrs
add
pop
mov
inc
add
pusha
add
outsl
orl
jl
jmp
and
push
mov
js
dec
sbb
fmulp
xlat
inc
jmp
mov
lds
insl
sbb
stc
mov
mov
outsb
xchg
mov
fdivrl
andl
or
push
dec
ljmp
fwait
jnp
push
sub
jge
adc
add
mov
sub
xchg
movb
fdivrs
gs
insl
out
insl
std
jbe
mov
and
and
mov
inc
add
stos
cmpsb
insl
imul
mov
rorl
and
loopne
fs
push
mov
aaa
jge
mov
or
aas
or
std
cs
ds
add
adc
ljmp
stos
ss
mov
adc
add
data16
jns
pushf
xor
add
lret
mov
jl
popf
sbb
push
xor
ret
icebp
cmp
js
in
dec
fildl
sahf
ret
mull
bnd
movsb
jbe
xor
lea
les
xchg
and
sub
add
dec
aas
sub
addr16
xchg
push
jl
add
into
sub
inc
add
add
push
sbb
lods
fstpl
jmp
pop
std
mov
imul
je
xchg
mov
pop
push
cmp
lods
cwtl
mov
cltd
pop
mov
shl
in
cmc
insl
daa
cmp
adc
fwait
stos
repnz
shrb
aas
hlt
cs
xor
mov
add
add
add
les
idiv
test
imul
and
cmpsl
mov
mov
pop
pushf
jmp
cltd
orl
sbb
mov
lretw
int3
roll
pop
xor
jae
pop
testb
lods
mov
inc
add
adc
enter
add
out
mov
dec
sub
ror
or
xchg
xchg
mov
pop
inc
clc
lea
jb
js
bound
in
inc
push
lods
vpunpcklwd
outsb
aad
aas
adc
mov
inc
test
jbe
push
mov
xlat
push
adc
je
into
pop
ret
mov
mov
xchg
mov
add
popa
mov
pop
ss
out
dec
scas
sbb
test
push
and
dec
cld
cmpsb
mov
cmc
mov
xlat
std
fsubrl
inc
add
adc
jb
call
loop
mov
xchg
push
movsb
sbb
faddl
mov
or
mov
fcoml
fstps
add
inc
ret
mov
pop
ret
lock
mov
dec
xor
xchg
insl
test
push
outsl
cmp
stos
inc
add
outsb
mov
jmp
mov
out
loopne
hlt
add
xchg
stc
inc
fsts
inc
add
add
fcomps
xchg
cmp
xchg
cmpsb
in
push
imul
icebp
jae
add
in
push
roll
or
inc
add
cmp
cwtl
movsb
les
sbb
mov
mov
inc
add
test
pushf
sub
add
jmp
rolb
sahf
lret
scas
lods
js
mov
add
mov
lods
dec
mov
dec
outsl
ljmp
inc
add
push
dec
xchg
xchg
movsb
jne
push
pop
jbe
jl
mov
loope
nop
es
add
and
mov
fimuls
outsl
bnd
insb
sbb
add
icebp
outsl
pop
xchg
addr16
mov
jg
cmp
add
dec
push
js
sub
jp
sub
sbb
mov
cmp
bound
adc
mov
ret
mov
scas
mov
jno
add
dec
mov
pop
imulb
or
pop
push
inc
pop
pop
arpl
push
add
in
cmpsb
mov
dec
leave
or
jns
decl
push
nop
addb
sub
in
mov
repnz
push
js
add
or
cwtl
sub
push
push
ret
jae
mov
cmp
pop
sbb
xor
dec
mov
add
mov
iret
add
loop
push
shll
add
add
sub
fdivrl
js
cmp
mov
push
cmp
dec
out
enter
dec
and
cmpsl
lcall
or
add
ss
addb
fmul
int
mov
add
aam
add
popf
jg
jae
push
push
adc
xor
pop
cmpsb
inc
add
mov
in
or
mov
jl
inc
add
int3
cli
jo
cmp
icebp
mov
mov
sub
pop
cmpsb
pop
shrl
pop
mov
pop
mov
loope
inc
add
mov
arpl
and
cltd
xlat
movsb
or
pop
cs
jno
mov
mov
int3
cmp
xor
xor
adc
adc
mov
cmp
add
and
in
sbb
inc
add
mov
addb
add
jg
mov
std
aad
imul
sub
add
jmp
sbb
int3
jl
push
sub
insl
sarl
add
cmp
xor
cmp
inc
add
shl
shrb
mov
pop
dec
lock
xor
shrb
sbb
fwait
mov
push
pop
lahf
pop
mov
loopne
bound
out
insb
xlat
daa
test
addb
mov
pop
dec
filds
add
add
sub
subl
lods
pop
jge
aad
pop
cld
shlb
movsl
ss
add
ds
mov
sbb
add
add
sbb
pop
jge
insb
jae
mov
ja
add
pop
mov
mov
stos
xor
leave
rolb
jnp
add
repnz
dec
sahf
dec
pop
xchg
push
sub
fadds
xchg
add
xor
sub
mov
push
mull
in
fadds
das
pushf
push
push
add
stos
sbb
xorl
icebp
push
xor
stos
ds
test
sub
cli
mov
sbb
push
cmp
xlat
movsb
stos
stos
inc
and
and
imul
loop
sahf
or
popf
ffreep
sahf
and
loopne
popf
mov
imul
out
addb
nop
ficomps
sahf
dec
int3
mov
add
inc
add
sahf
mov
sbb
rorl
xchg
out
sti
xor
mov
std
cmp
sub
sub
add
pop
and
pop
mov
leave
sahf
dec
mov
cmpsb
xor
dec
mov
pop
mov
xor
add
mov
flds
dec
add
movsb
mov
adc
rclb
mov
pop
jnp
repz
movsl
push
cmp
jno
testb
dec
rorl
mov
xor
and
dec
sarb
jbe
inc
add
and
jnp
jle
sbb
cmpsb
inc
in
sbb
test
add
loopne
shlb
call
push
popf
cmpsl
and
jbe
iret
and
rcl
roll
or
lds
push
lcall
stos
add
xor
jnp
nop
rolb
push
lcall
das
test
pop
xor
mov
scas
cmp
jae
icebp
shl
fists
cmpsb
stos
sbb
inc
or
rolb
lea
add
call
push
add
ds
ret
dec
dec
cmpsb
stc
outsb
in
stc
mov
loope
fwait
xchg
jp
ljmp
icebp
mov
ljmp
inc
and
dec
adc
push
inc
in
ficomps
adc
mov
leave
stos
push
sarl
lcall
pop
sti
fistpll
loopne
enter
mov
out
hlt
sbb
cltd
xor
mov
push
pop
push
and
jne
add
push
xchg
add
enter
xlat
testb
mov
in
shl
xor
jp
aam
ja
inc
insb
xchg
pusha
add
dec
push
gs
lahf
mov
stc
in
call
xchg
aam
sbb
cmpsb
repz
xor
pop
cld
sub
mov
xchg
pop
cmp
cmp
jns
add
lret
data16
inc
ljmp
jb
pop
dec
pushf
es
jg
add
dec
rolb
mov
cmpsl
out
loope
movsl
inc
push
jnp
addb
add
xchg
cmp
mul
dec
clc
inc
add
sahf
mov
push
enter
movsl
sbb
or
imul
add
add
xor
das
pop
pop
dec
push
int
les
js
lods
adc
inc
add
es
add
xlat
jl
stos
jbe
pop
scas
mov
movsb
sub
insl
push
idivl
mov
sub
movsb
inc
fiaddl
leave
or
add
jg
ja
addb
sub
clc
push
inc
add
add
adc
fsts
pop
stos
inc
add
add
push
mov
add
sub
xchg
in
xor
sub
cmp
xlat
ja
outsb
sub
mov
push
or
mov
and
pop
xor
ss
and
push
pop
out
mov
aaa
ret
outsl
mov
mov
pushf
sbb
xor
xor
adc
inc
add
add
pop
negl
sub
push
sub
add
out
adc
mov
lcall
lods
in
je
ja
jmp
call
out
add
popf
bound
imul
mov
roll
cmp
into
jne
inc
les
push
or
addb
fstpl
pusha
add
aad
cmc
ds
sbb
push
fdivrp
loopne
xchg
pop
mov
add
push
xor
nop
mov
pop
loop
xor
mov
bound
ss
inc
add
mov
fiaddl
js
xor
lds
lret
cmp
lcall
adc
xor
mov
js
std
adc
inc
in
fucomi
popf
adc
mov
or
test
add
mov
inc
outsb
pop
mov
or
jg
inc
add
jmp
cwtl
js
add
inc
add
add
loope
aaa
and
stos
es
imul
call
lods
popa
sub
inc
mov
clc
jg
aaa
add
pusha
add
xor
add
pusha
add
pop
xor
xchg
jae
add
mov
jmp
ret
ljmp
enter
xchg
mov
jmp
stos
mov
mov
mov
arpl
movb
movsb
mov
bound
cmp
mov
aam
int3
fldenv
shl
insb
movb
test
pop
or
in
jmp
add
or
mov
jno
adc
dec
mov
mov
out
and
cltd
mov
cmc
in
mov
pusha
add
mov
pop
sahf
imul
shll
ja
pop
push
pop
mov
adc
mov
out
leave
fwait
inc
or
and
lds
les
addb
inc
add
push
insb
pushf
stos
xor
call
sbb
adc
add
add
and
shrb
or
shrb
push
add
xor
jae
jnp
pop
jecxz
mov
lahf
inc
add
ljmp
mov
icebp
cmpsl
inc
add
in
mov
mov
and
lea
out
jl
add
outsb
jmp
xor
add
pop
in
stos
movsb
leave
or
test
adc
sub
sbb
int3
mov
mov
iret
hlt
out
fidivrs
movsb
es
in
sub
xchg
mov
inc
imul
sbb
ljmp
outsl
pop
push
and
push
xchg
nop
inc
pop
adc
sbb
mov
sbb
jmp
and
cmp
or
adc
add
or
mov
inc
add
pushf
pop
xor
mov
adc
and
cmp
jmp
pop
pop
bound
xchg
sbb
pop
mov
xchg
ret
add
pop
pop
lods
jecxz
out
jge
add
pop
mov
pop
xchg
jle
test
cs
in
aaa
mov
out
mov
data16
dec
outsl
or
outsb
cltd
or
or
insb
jmp
and
inc
sbb
cmp
addr16
add
into
pop
mov
cltd
push
sub
pushf
roll
adc
les
jge
push
int3
dec
mov
in
aam
push
dec
repnz
std
scas
xchg
addb
loope
xchg
stc
into
and
das
push
xor
repz
outsb
and
popa
jno
push
mov
mov
xchg
fwait
dec
mov
xchg
ret
sbb
imul
pop
cld
jbe
scas
jecxz
mov
enter
add
and
and
adc
mov
xchg
fistps
push
adc
mov
xor
xchg
in
int3
jbe
inc
outsb
and
sub
aaa
rcrl
test
aam
test
test
jno
add
adc
inc
pop
xor
dec
addl
sub
mov
test
ljmp
add
sub
fists
add
xor
add
stos
xor
add
daa
movb
das
or
or
or
outsb
cmp
repz
xchg
jnp
test
imul
mov
xchg
sbb
add
dec
xchg
push
pop
dec
sbb
ret
imul
pop
cmp
sub
pop
jg
and
lea
arpl
in
clc
mov
ss
sub
push
add
imul
xor
lds
movsb
js
fldcw
mov
aad
pusha
add
ss
cmp
xor
mov
add
in
add
rorl
cmc
adc
addb
pop
fstl
mov
das
outsb
jge
add
test
lahf
fsubrl
mov
cmp
cmp
testb
jmp
add
pop
push
pop
jl
or
add
or
pop
sahf
std
aad
repz
add
adc
iret
fwait
in
and
sub
add
pushf
mov
cmp
add
in
jmp
cmp
xchg
lods
rcll
mov
fs
mov
jae
pushf
fs
push
aas
inc
jbe
mov
ret
or
add
test
sub
add
add
push
add
push
dec
push
je
filds
pop
mov
xchg
lods
mov
in
xchg
repnz
leave
cmpsb
push
int3
popa
divb
mov
fisttpl
xchg
adc
mov
in
sti
scas
cltd
inc
add
fldl
xlat
jecxz
add
jae
push
add
add
rcrl
mov
les
xchg
or
add
cmp
pop
mov
and
les
shrl
iret
mov
int
cwtl
push
add
cmp
xor
sub
add
adc
or
lea
add
rorl
add
xor
cmp
add
or
sbb
lea
outsl
cmp
stos
sbb
jo
nop
mov
mov
add
ficomps
jmp
loopne
mov
jb
ljmp
jo
add
add
push
inc
xchg
es
addb
orl
cmpsl
aas
cmp
aam
inc
add
push
add
sbb
add
lret
hlt
cmpsb
push
or
stc
xchg
mov
test
cld
sbb
incb
mov
mov
in
adc
mov
nop
push
popa
pop
mov
jmp
add
mov
pop
cmp
add
mov
add
mov
sarl
xchg
repnz
dec
cmp
icebp
push
sbb
and
outsb
add
pushf
call
add
hlt
inc
add
push
dec
ret
out
lds
nop
xor
pop
neg
iret
jb
loop
mov
scas
sbb
sub
enter
jmp
xor
xor
jb
icebp
outsl
mov
cmp
aam
xor
pusha
add
adc
pop
les
jg
outsl
data16
add
add
rcl
mov
scas
imul
cmc
push
pushf
inc
add
dec
jl
arpl
inc
add
dec
in
mov
adc
pop
cmp
jp
arpl
sbb
inc
add
sbb
jge
in
lods
jae
sbb
xchg
mov
push
jns
imul
or
adc
stos
ja
xchg
bound
sub
jb
or
fs
pop
pop
sbb
sub
xor
pop
fsubp
lret
add
dec
jo
inc
inc
sub
or
add
in
pushf
test
test
lock
daa
xor
add
repz
out
sub
sahf
nop
cltd
add
ds
jp
stos
fisubrs
nop
jae
jnp
shrl
dec
pop
ja
repz
out
sbb
add
add
pop
sbb
and
push
push
pop
imul
ret
cs
xlat
addr16
and
iret
adc
sti
insl
nop
add
xor
cmp
or
lret
xor
mov
mov
push
mov
lret
pop
fisttpl
adc
or
dec
pop
and
pop
hlt
shlb
outsl
frstor
add
rolb
mov
sbb
stos
lret
mov
fbld
ja
pop
xchg
stos
add
cmc
xor
mov
push
in
push
pusha
add
jg
inc
adc
and
add
dec
mov
aaa
in
mov
std
bound
repnz
imull
pop
scas
pop
push
repz
pop
mov
in
or
mov
dec
rolb
aas
imul
push
fadd
add
xchg
aaa
outsb
jno
cltd
xchg
or
sbb
movsl
lods
add
add
add
add
movsl
pop
nop
sub
es
fwait
addb
stos
icebp
add
cwtl
loope
not
and
imul
jae
sub
aad
and
cld
xor
jae
xor
add
aam
out
in
xchg
in
out
add
push
and
xor
push
and
lcall
mov
push
sub
push
js
pop
hlt
pop
sub
sbb
dec
mov
push
loop
out
pop
gs
arpl
test
jbe
add
cmpsb
sub
push
ljmp
sbb
or
pop
sahf
repz
fnstenv
inc
add
adc
fistps
cmp
int3
dec
mov
xchg
mov
add
bound
pop
fs
dec
mov
push
pop
insl
popa
loop
movsb
mov
in
mov
jl
xor
cld
pop
and
mov
stc
fwait
xchg
jbe
jo
insl
cwtl
mov
fisubs
stos
shll
xchg
and
jp
add
stc
inc
jo
test
add
xchg
rolb
out
inc
add
jecxz
ret
sbb
add
jmp
pop
mov
test
sub
and
out
or
ficompl
fs
sbb
cmpsl
jb
dec
daa
push
jno
add
adc
and
add
test
jno
rolb
in
roll
mov
add
dec
scas
idivb
sbb
les
add
xlat
daa
inc
add
add
les
mov
cmpsb
loopne
sti
nop
into
add
add
adc
out
inc
loopne
repnz
je
jecxz
das
dec
insl
mov
outsl
push
out
in
inc
pusha
add
and
jno
xchg
xor
xchg
sub
push
jae
pmaxsw
jb
dec
std
mov
xchg
mov
jno
inc
add
add
jae
xor
sub
test
cwtl
add
cmp
out
shlb
mov
and
pop
mov
add
in
test
add
xchg
mov
hlt
fdivl
add
rolb
add
hlt
pop
adc
add
addb
sar
outsl
popf
push
mov
mov
ljmp
add
and
pop
sbb
rolb
shlb
inc
popf
mov
mov
cmc
test
add
fiadds
ljmp
sbb
add
or
and
jnp
push
in
arpl
sub
aaa
pop
mov
frstor
jg
or
xor
mov
das
enter
add
out
cmpsl
scas
arpl
stos
inc
add
lods
mov
add
outsb
xchg
inc
inc
sub
xchg
xchg
sub
mov
xchg
fisttpl
adc
popa
inc
add
or
in
sahf
sbb
out
ljmp
pop
jge
add
stos
mov
and
test
mulb
add
out
add
subl
in
inc
mov
lcall
popf
jno
fistl
dec
fcompl
xchg
das
repz
pop
lods
mov
roll
sub
mov
in
stos
imul
xchg
movsb
mov
lahf
push
xor
int
mov
or
dec
xchg
push
test
jg
into
mov
or
test
xchg
cld
xor
add
add
mov
add
pop
lahf
lret
adc
add
roll
dec
cwtl
imul
cltd
mov
mov
mov
popa
cmpsl
jg
addb
add
fs
or
and
push
mov
mov
xchg
xor
lods
sub
xor
xor
in
or
mov
add
mov
and
sub
and
mov
movsl
fdivrp
fdivs
sti
cmp
movsb
sub
pop
repnz
popa
mov
xor
lahf
add
scas
push
pushf
das
push
mov
add
xchg
mov
pop
xchg
mov
pushf
add
pusha
add
rcl
dec
arpl
mov
inc
add
mov
add
ror
pop
clc
arpl
jo
mov
scas
scas
cltd
sub
add
out
xchg
pusha
add
sbb
xchg
repz
cwtl
jg
adc
mov
or
out
rcrb
mov
inc
out
cltd
test
fdivrs
push
mov
subps
sub
xchg
stos
push
stos
insl
aam
hlt
inc
repz
cmp
or
mov
pop
push
mov
rolb
or
popl
add
lods
inc
add
cld
push
fwait
mov
push
inc
push
rcrl
sub
lods
fmull
xchg
dec
popa
adc
push
add
mov
cmp
mul
lods
std
fwait
or
add
adc
loope
mov
mov
fsts
inc
dec
stos
mov
add
push
nop
cmpsl
fsts
lock
iret
or
add
push
add
loopne
jns
sbb
jne
notl
jge
sub
sti
and
rcll
fbld
movsb
dec
scas
adc
jns
cmp
pop
xor
ds
add
paddsw
je
xor
ret
fimull
jbe
jp
jg
add
sub
insb
inc
add
pop
add
push
movsb
out
arpl
jmp
xor
and
sub
sbb
aad
dec
pop
mov
add
pusha
add
fmul
icebp
fiaddl
loop
test
xlat
int3
cmp
push
add
push
and
push
mov
cwtl
and
push
lret
dec
cmc
mov
movsb
mov
fcmovbe
ljmp
call
mov
mov
ret
outsl
pusha
add
adc
add
jne
adc
add
dec
outsl
cmpsb
loop
jge
cmp
adc
jp
idivl
sti
jnp
in
inc
scas
cmpsb
sbb
add
xorl
sub
jge
test
xchg
cmpsb
jg
lret
shlb
add
imul
shr
mov
lahf
pop
or
add
fisubs
lret
add
divb
lods
xchg
call
loopne
jmp
add
mov
jae
in
jo
iret
rcl
ljmp
mov
mov
jne
inc
add
mov
add
sub
dec
lea
popf
ja
jle
movsl
and
dec
xchg
mov
negb
add
popa
pushf
xchg
shll
add
mov
xchg
movsb
movb
or
jae
push
mov
inc
dec
pop
scas
xor
dec
lock
xchg
xor
loope
mov
fwait
ljmp
pop
imul
adc
repnz
sahf
stos
stos
jo
jb
pop
icebp
lcall
ret
fisttpll
jmp
pop
xor
pop
aam
sbb
push
lret
and
cmp
pop
jb
in
add
loope
dec
mov
and
stos
mov
inc
sbb
xor
ss
iret
std
rorl
mov
inc
add
bound
cmp
mov
cld
addr16
xor
daa
scas
xchg
outsl
mov
fimull
mov
loop
pop
xor
rep
test
pop
cmp
push
icebp
add
movsb
push
sbb
sahf
or
xor
mov
fidivl
push
adc
adc
or
out
add
add
stos
nop
push
mov
in
xlat
mov
push
shrb
movb
aad
movsl
push
pop
mov
jle
in
insl
das
loopne
mov
lret
icebp
and
mov
pop
jl
addr16
lcall
mov
add
or
inc
add
add
cmp
fdivr
ds
outsl
outsl
pop
insb
inc
movb
lgs
pop
jecxz
loope
jl
push
push
lea
push
rolb
xchg
and
and
dec
pop
rcrl
sbb
push
add
pop
out
daa
jge
xor
add
les
stc
clc
leave
js
clc
sbb
bound
mov
ficompl
push
rol
add
mov
shll
adc
mov
fsts
rcll
add
fs
jb
cmpsl
aaa
mov
lods
mov
sub
or
loopne
les
outsl
outsl
rorl
movsl
hlt
pop
jmp
pop
in
or
cmpsb
jnp
pop
add
xchg
pushf
notl
movsb
insl
dec
in
sub
scas
dec
dec
and
pop
mov
cmp
clc
inc
add
pop
or
push
cs
jae
add
pop
mov
inc
add
mov
add
push
inc
add
test
push
inc
lock
add
and
icebp
jle
jbe
fistl
ret
sub
mov
inc
add
jmp
mov
inc
add
add
bswap
lret
or
ljmp
leave
ret
cmpsl
cmp
imulb
pop
mov
jnp
test
xchg
xor
imull
or
mov
mov
xchg
inc
sbb
add
sbb
mov
das
stos
fdiv
int3
std
rclb
cmp
mov
lods
mov
sub
sbb
jp
lahf
mov
mov
out
sub
xor
xchg
pop
push
add
js
sub
xchg
in
loopne
push
mov
cs
imul
add
aaa
cltd
or
mov
xchg
lods
cmp
movsb
add
test
pop
fdivrl
mov
dec
outsb
inc
add
ss
pop
mov
jl
mov
xor
xchg
jbe
sbb
sbb
scas
or
rcrl
test
jg
stos
lahf
or
sbb
push
arpl
mov
add
lret
push
push
add
pop
fmul
sbb
fistps
push
outsl
mov
xchg
and
add
push
idivl
inc
push
aas
bound
test
pop
sub
outsl
inc
push
dec
and
sbb
xor
and
push
les
mov
push
fsub
iret
or
fidivl
mov
sbb
add
insb
call
mov
xor
add
lcall
cld
mov
pop
rolb
je
mov
std
popa
push
sub
or
xchg
leave
outsb
ds
scas
push
adc
dec
negl
xor
in
jnp
clc
std
fists
or
popa
jae
scas
test
or
test
sub
sub
xor
jnp
pusha
add
add
cmpsl
gs
cli
rolb
push
mov
mov
add
add
add
sbb
cmp
add
fisttpll
cmp
sub
lcall
das
add
sarb
mov
dec
or
ds
pop
mov
and
out
mov
jne
add
pop
lea
ds
mov
push
sub
nop
lock
push
lahf
jmp
push
add
xor
popa
iret
xchg
xchg
mov
decl
mull
jle
icebp
jne
hlt
je
imul
xor
cli
mov
or
addb
mov
lods
mov
push
mov
add
outsb
call
lods
jbe
add
fisttpll
adc
bound
or
fcoms
mov
dec
jg
xlat
pop
fidivl
xchg
addb
xlat
test
fists
push
sub
idivb
cli
sub
pop
out
add
push
dec
mov
mov
push
add
add
mov
loopne
in
sti
inc
stos
sahf
jo
lcall
cwtl
fwait
mov
mov
dec
stc
push
ja
lds
pop
gs
add
or
mov
add
pop
pushf
repnz
call
mov
pusha
add
add
lret
popa
mov
lcall
sub
add
sbb
or
cmp
pop
mov
cmp
and
ljmp
push
pop
mov
fwait
sti
or
sbb
xchg
cmp
add
fiadds
movb
adc
out
add
adc
imul
iret
pop
or
xor
xor
dec
add
inc
test
movsl
fcoml
fstpt
dec
scas
aam
inc
sti
inc
mov
xchg
mov
xchg
movsb
sbb
mov
inc
add
adc
aaa
or
mov
ffree
addb
lock
sbb
jge
mov
adc
das
push
jbe
cmp
stos
in
sub
cs
add
add
mov
mov
fwait
jge
or
jno
mul
in
jno
jmp
add
nop
mov
test
pop
adc
add
sub
add
jae
cli
rorl
loopne
lret
xchg
fcmovne
ret
add
mov
push
sub
scas
xchg
jg
out
jns
xor
jle
adc
adc
lcall
out
sbb
jge
pop
pop
adc
or
mov
sub
add
xor
fnstcw
add
in
pop
sub
sbb
add
ret
rol
inc
arpl
add
js
push
push
add
sbb
add
pop
std
jnp
or
movsl
jbe
out
xor
je
pushf
mov
jne
mov
stc
insb
insb
ja
sub
add
fisubs
add
or
ja
lods
imul
mov
xor
or
adc
xchg
mov
popf
test
loope
mov
jge
pop
rolb
pop
icebp
fisubrs
push
aas
popa
inc
add
xchg
xchg
insb
ret
jne
out
addb
pusha
add
cmp
xchg
mov
scas
test
fxch
inc
add
add
add
push
addl
xor
clc
std
xor
mov
inc
movb
mov
add
sbb
xchg
dec
bound
mul
inc
add
or
add
je
dec
nop
push
and
mov
add
loopne
rcrb
mov
add
ret
mov
add
push
repnz
sub
lret
lock
int
push
sub
jmp
inc
mov
xchg
xor
cmp
or
stc
sub
aam
ret
adc
mov
dec
sbb
fistpll
add
lret
stos
lahf
js
and
cmp
sub
xlat
in
mov
movb
sahf
ret
in
xor
sub
push
add
out
add
test
sub
daa
pushf
jae
outsl
jge
add
and
sbb
inc
das
les
daa
or
add
add
sbb
aaa
sub
push
mov
icebp
dec
add
movsb
adc
das
and
and
pop
fucomi
or
mov
adc
cmovb
xchg
mov
aas
pop
jb
mov
loop
or
mov
sbb
shlb
lea
rcrl
inc
cli
sub
mov
adc
mov
aaa
cltd
pop
hlt
dec
out
arpl
rolb
pop
rolb
inc
add
add
imulb
add
add
das
lods
push
stc
lods
mov
popa
push
and
rolb
fdivp
inc
add
inc
ljmp
jns
in
data16
stc
cld
inc
iret
cs
add
jecxz
mov
mov
mov
jo
test
jmp
lret
adc
dec
sti
pop
mov
cld
pop
imul
clc
fldl
scas
lods
das
or
sarl
ja
shlb
les
adc
push
testl
test
addr16
xchg
adc
movsl
out
jmp
iret
adc
add
into
or
xor
lea
pusha
add
stos
xchg
mull
add
add
mov
jecxz
arpl
testl
or
loop
and
nopl
test
mov
in
aaa
sub
add
add
cmpl
pop
cmpsb
pop
cmp
rolb
ja
cmpsl
fnsave
filds
scas
inc
add
testl
movsl
mov
mov
out
mov
jecxz
sbb
jb
cmp
push
dec
pop
out
jle
lcall
jg
fucomi
shlb
int
add
aas
fists
mov
jnp
addb
sbb
jae
pop
scas
sub
xchg
aad
pop
and
lods
or
cld
cld
aaa
and
push
inc
mov
mov
inc
inc
add
addb
dec
fwait
mov
cmpl
cwtl
xor
xor
outsb
jmp
ss
les
pushf
shll
xor
imul
inc
add
fldl
dec
addb
push
sub
add
mov
or
cmp
mov
add
je
and
dec
test
mov
add
xchg
sbb
jo
mov
stos
es
xor
lcall
stc
hlt
pop
out
push
in
cmp
je
pop
push
jae
addb
xor
dec
jae
pop
xorl
mov
mov
jmp
ret
or
hlt
gs
sub
cmp
jae
pop
jle
je
clc
aas
test
insl
mov
add
sub
movsl
pop
data16
add
push
push
add
in
addl
xor
in
mov
sbb
push
daa
sbb
out
xchg
dec
adc
xchg
or
xor
das
rorl
es
sti
lret
movb
mov
rclb
inc
push
aaa
fs
ficoms
stos
xor
pushf
or
jp
dec
dec
pop
out
mov
scas
fdivs
fcmovnb
inc
add
outsb
cmp
imul
lock
out
ss
addb
mov
sbb
inc
add
add
lret
arpl
mov
test
inc
add
cmp
ficoms
sbb
push
addb
movsb
dec
xchg
jle
in
stc
sub
sbb
ret
dec
mov
add
movsb
call
add
dec
mov
cmp
bound
adcl
mov
lock
mov
sub
iret
xchg
cmp
push
or
adc
cli
fstl
lahf
aaa
dec
cmpsb
icebp
mov
ret
test
lea
sbb
aas
sahf
sbb
adc
inc
add
xchg
cmpsl
mov
mov
ss
test
movsl
sahf
testl
das
add
cmc
ret
dec
xchg
sbb
test
aad
xor
mov
out
push
jae
and
add
push
mov
popa
sahf
push
mov
jae
jo
jge
push
add
sub
sbb
add
je
xor
mov
hlt
lcall
jae
mov
not
jbe
cmpsl
out
stc
cmpsl
add
mov
sub
xchg
pop
pop
out
repnz
cld
nop
inc
add
sbb
hlt
daa
add
inc
sub
movb
sbb
cs
mov
aam
jmp
out
lock
lcall
js,pt
add
or
out
gs
push
out
inc
add
sti
popf
fisttpl
rcrb
mov
pop
adc
ret
das
lods
cmpsl
jno
add
add
sahf
push
cmp
jg
loope
insl
cmp
je
mov
rcrl
push
add
movsl
and
jae
dec
enter
gs
mov
imul
pop
fildll
in
pop
jno
mov
push
mov
dec
push
and
xor
pop
ss
jp
enter
leave
fucom
aad
add
jl
mov
test
xchg
and
cmpsb
shll
and
aad
pusha
add
add
xchg
jmp
sbb
pusha
add
dec
pop
clc
movb
add
cwtl
jbe
popf
xchg
lock
adc
mov
int
icebp
mov
movb
sub
add
dec
xchg
pushf
clc
stos
shrb
adc
pop
sbb
cmp
fiaddl
aaa
mov
xchg
jbe
imulb
push
or
addb
or
adcl
cmp
mov
ret
addb
inc
add
xor
add
mov
sbb
enter
lock
mov
mov
int3
hlt
mov
xchg
movsl
jge
inc
fmull
jne
mov
cmp
cmp
movsb
adcl
addb
add
push
lret
mov
pop
mov
mov
sahf
test
add
dec
xor
mov
xor
adc
add
adc
cmp
ss
test
out
adc
and
sbb
push
cmp
push
sub
jnp
gs
loop
rcrl
or
xchg
xlat
dec
cs
jp
or
add
add
xchg
mov
aaa
into
or
inc
add
add
lret
push
fbstp
dec
pop
call
out
cmp
stos
sbb
andl
out
out
jnp
aas
mov
and
add
add
mov
insb
out
outsb
jb
mov
add
add
cs
clc
repz
out
xchg
cld
mov
add
jns
pop
out
lcall
addr16
popf
test
xor
lcall
and
or
add
lods
dec
push
frstor
jnp
fwait
aam
xlat
outsb
aas
test
test
loop
lock
repnz
dec
mov
sbbl
es
mov
cmc
inc
add
or
jmp
xor
sbb
stos
pop
mov
push
xor
xor
cmp
into
std
add
addb
cmc
jo
je
dec
lahf
or
adcl
dec
xchg
xchg
inc
add
add
lods
repnz
or
and
iret
fiadds
repnz
jae
mov
cmp
adc
daa
into
aaa
adc
sbb
mov
loope
mov
shll
sahf
lods
arpl
bound
mov
add
out
xchg
int
add
mov
mov
aad
cltd
jns
imul
or
or
add
sarb
add
cld
inc
adc
ljmp
push
sub
out
jnp
cmpsb
inc
insb
loope
xchg
sub
outsb
nop
xchg
cmp
cld
push
in
mov
jp
mov
popa
push
or
rolb
cmpsb
int
mov
std
push
jmp
mov
dec
pop
xchg
addl
idiv
js
repz
mov
in
push
mov
sub
xor
adcl
jecxz
cld
adc
daa
outsb
xadd
in
mov
mov
mov
cmp
mov
inc
mov
xchg
shrb
xchg
sub
pop
lret
inc
out
pushf
repz
fwait
daa
cmp
jl
add
push
jmp
mov
cmp
lods
jo
into
xchg
mov
inc
dec
mov
rolb
insb
fs
stos
scas
ret
add
popf
test
dec
ret
test
add
ljmp
inc
add
scas
cmpsb
stc
sbb
add
daa
or
dec
mov
cmp
add
xor
jbe
icebp
mov
push
pop
scas
outsb
inc
add
push
or
add
in
xor
pop
lea
jo
add
cld
xor
jae
xor
subl
adc
add
inc
add
aad
popf
push
mov
ret
push
inc
and
push
pop
cmp
jno
repnz
mov
pop
cmpsb
movsb
lods
and
lcall
add
arpl
pop
mov
lret
lcall
ja
adc
mov
add
sub
add
aaa
popa
out
loop
out
dec
clc
popf
test
insl
stos
gs
fisubs
mov
mov
dec
rcrl
jb
add
lret
push
add
jg
adc
popa
outsb
imul
hlt
cmp
jb
outsl
and
icebp
add
push
jnp
fdivl
and
ss
adc
jo
mov
and
push
xchg
movb
fadds
push
sub
sub
rcrl
mov
shrb
daa
inc
add
outsb
iret
and
mov
add
cwtl
out
jno
push
dec
jp
jbe
das
mov
sti
test
cmp
divl
xlat
sbb
sub
mov
and
adc
push
shll
addb
xchg
mov
dec
addb
mov
movb
cmp
out
pop
dec
lock
aam
add
jp
mov
inc
icebp
jg
cmp
push
xchg
sub
mov
fisttpll
add
xor
mov
jbe
rorl
es
fsubl
je
and
inc
scas
jge
cltd
std
cli
lahf
leave
addb
xchg
inc
add
jge
add
lods
icebp
dec
xor
aam
pop
lods
in
mov
mov
inc
add
push
out
push
inc
xchg
imulb
ret
inc
test
jmp
les
xor
xchg
adcl
jmp
sub
enter
call
es
cmp
neg
pop
in
stc
rcl
cmp
pop
ret
xchg
dec
outsl
arpl
lods
mov
subl
addb
clc
mov
dec
fsubs
movb
xchg
mov
add
jnp
outsl
mov
cmp
rclb
mov
imul
jg
mov
xor
mov
xor
lea
xchg
hlt
pop
fldcw
xor
jmp
fstpt
aad
add
scas
sbb
mov
test
mov
xorl
jns
mov
xlat
dec
arpl
lahf
cmp
icebp
xchg
addb
lcall
test
into
fsub
aas
mov
pop
out
popa
adc
fldcw
pop
jge
pusha
add
cmpsb
pop
jl
xchg
movsl
cmc
out
jmp
mull
add
inc
add
pcmpgtw
add
outsl
mov
idivl
lds
push
dec
dec
rolb
ss
shlb
enter
loopne
stos
arpl
into
fstpt
and
sub
add
push
add
mov
frstor
mov
negb
jp
push
add
ret
and
and
dec
insl
imull
cmpsl
push
add
adc
mov
dec
inc
lea
pop
xchg
push
lock
clc
mov
add
repz
pop
cwtl
jns
mov
add
add
sbb
pop
and
jle
divb
je
sbb
push
ljmp
mov
mov
xor
js
pop
jne
mov
in
pop
inc
jo
push
scas
or
dec
add
outsl
mov
cmp
aaa
inc
sub
pop
les
int3
insb
jl
pop
addb
das
mov
push
sbb
pushf
jp
shlb
mov
jg
mov
enter
notb
in
dec
imul
popf
sbb
idivl
adc
mov
daa
xor
add
add
lret
sbb
mov
jb
adc
mov
mov
cltd
out
repz
std
cmpsl
scas
aad
cli
in
lds
xchg
test
push
movsb
movsb
mov
popa
dec
mov
or
lods
aaa
adc
js
sbb
xchg
ja
mov
jle
jecxz
mov
mov
punpckhbw
pop
fsubr
in
dec
addb
push
testl
jns
xchg
shll
adc
notl
add
test
xor
fcomi
jnp
dec
dec
cmp
xchg
inc
add
add
push
in
mov
xchg
add
filds
rcrb
inc
add
addb
es
mov
popa
test
cmpsb
and
add
cmp
mov
push
insl
cmp
add
inc
movb
mov
inc
add
lret
aam
xchg
add
ds
add
lock
nop
and
or
cmp
inc
int3
jecxz
jge
ret
pop
xchg
dec
ja
xor
add
sub
pop
add
sti
adc
sub
pop
mov
or
mov
xor
mov
jnp
mov
rorl
lcall
arpl
or
sub
add
push
arpl
insl
sbb
aas
jb
push
movl
xchg
sbb
pop
add
pop
sub
xchg
push
stos
xchg
lods
fadds
push
cmp
bound
js
lahf
jmp
gs
dec
int3
jge
mov
push
inc
add
jmp
xchg
cld
lcall
adc
notb
in
pop
movsl
fbstp
and
stos
xor
repnz
enter
dec
sbb
sub
xor
mov
fldt
insb
inc
add
vpcmov
and
add
inc
add
xor
test
mov
add
lods
add
adc
movsb
add
mov
lea
subl
mov
sti
mov
addb
cmp
cmp
and
dec
pop
repnz
bound
les
iret
stos
lret
jae
mov
sti
mov
cmp
in
jge
add
cld
mov
icebp
popa
xor
int3
cwtl
loope
push
aad
sbb
mov
lds
lods
or
cmp
sub
pop
cld
cmp
mov
jmp
jl
ffree
add
mov
jne
xor
jne
int
add
fsub
into
inc
push
cmp
and
inc
add
mov
sahf
stos
leave
add
aas
movsl
insl
mov
pmulhuw
aaa
dec
divb
or
aam
sti
idivb
into
ja
lods
add
inc
leave
into
mov
data16
inc
les
mov
outsl
lret
pop
outsl
shll
push
clc
test
pop
adc
test
addb
in
test
pop
scas
movb
mov
cmp
pushf
cli
sti
pusha
add
add
fsubrl
ss
push
mov
lods
gs
xchg
adc
inc
push
mov
enter
daa
leave
nop
fwait
add
cmp
sbb
inc
fcoms
add
adc
pop
add
jmp
add
rorb
adc
jle
add
fstpt
dec
push
stos
jecxz
jno
mov
daa
shrl
into
lods
js
or
adc
add
or
fdivs
xor
pop
push
mov
sbb
mov
ret
data16
sbb
cmpsl
xchg
pop
push
fsubrp
pop
dec
cmp
addb
mov
repz
xchg
out
sub
or
adc
add
imulb
cli
dec
pushf
push
pop
pop
adc
rcr
shrl
adc
adc
add
in
add
les
or
jns,pn
addr16
pusha
add
imul
pop
ja
add
loop
pop
inc
addr16
inc
in
add
cmp
test
movb
pushf
push
into
mov
add
addb
pop
rclb
into
dec
push
xor
scas
and
sahf
fcompl
xchg
fsubp
outsb
adc
jnp
jl
push
fwait
into
orl
insb
inc
add
push
sub
pop
imul
cld
dec
fistpl
adc
addb
daa
gs
jp
dec
cli
ljmp
ljmp
or
fldcw
pop
inc
fnsave
push
mov
pop
addb
push
lods
outsb
pop
loope
int3
sbb
movb
or
pop
notl
add
ret
mov
imul
sub
mov
out
or
mov
addl
xchg
and
std
int3
movsb
and
add
and
jne
add
enter
xchg
cmp
push
cmp
dec
idiv
xchg
push
pushl
jmp
movsl
jnp
lea
add
popf
in
das
pop
in
pop
cld
stos
inc
add
dec
adcl
clc
imul
cli
jmp
inc
jnp
inc
fbld
js
sub
es
dec
rolb
loop
nop
pop
daa
cld
enter
subl
fistpl
dec
add
jns
ja
into
mov
push
imul
xlat
cmp
pop
mov
rolb
cs
jle
repnz
xchg
cmpl
in
inc
add
add
sbb
lock
out
and
lods
sbb
inc
and
and
pop
leave
das
push
aam
adc
mov
sub
lahf
cli
movb
fdivp
pop
jae
data16
mov
xchg
mov
ljmp
ds
jbe
adc
mov
sbb
pop
jo
mov
es
clc
int3
inc
and
dec
lods
mov
lahf
arpl
movb
pop
xchg
and
xlat
in
sbb
pop
jne
add
add
dec
hlt
hlt
pop
int
lret
pop
loope
add
sbb
push
jns
lods
push
je
out
or
xor
es
repnz
add
pop
mov
jp
sub
xlat
mov
dec
fists
gs
mov
in
xor
dec
and
daa
insb
test
bnd
and
add
into
xor
mov
stos
push
sub
iret
pop
addb
fisttps
add
add
roll
rolb
pop
lock
movsb
ss
cltd
enter
ficompl
adc
xchg
xor
push
add
dec
adc
or
push
out
inc
add
mov
mov
pop
int
xchg
mov
xor
add
add
mov
movsb
mov
add
in
inc
add
push
add
unpckhps
icebp
int
jns
add
clc
jb
mov
jp
arpl
mov
fxch
adc
add
ret
add
pop
xchg
xor
or
add
sbb
pop
push
imul
inc
or
fisubl
and
sub
add
add
lcall
ljmp
pop
cs
push
cli
sarl
popf
mov
pop
xor
repz
push
add
in
loopne
push
aam
adc
mov
dec
and
jae
mov
dec
add
scas
repz
std
icebp
mov
jg
xorl
add
ljmp
jbe
cmp
add
mov
mov
mov
insl
fsub
loop
ds
adc
and
shrb
rolb
xor
mov
ficompl
push
clc
pop
fwait
int3
scas
ss
add
xchg
sahf
push
outsl
enter
pusha
add
sub
sbb
int
stos
mov
pop
ds
icebp
jg
ret
stc
mov
insl
movb
and
shlb
lret
sub
sbb
in
shl
cmpsb
push
or
addb
add
add
add
xor
and
jmp
shlb
mov
cmc
sub
in
jns
add
ret
dec
ret
mov
outsl
das
cmp
movb
and
pop
loopne
lock
daa
std
pop
add
adc
or
sub
sti
addb
xchg
xchg
xor
xor
imul
push
adc
lds
loop
cmp
add
xlat
imul
dec
lahf
call
jg
add
pop
xchg
cmp
xchg
test
stos
sbb
movb
and
and
xor
pop
cmp
pop
cwtl
add
lea
add
add
xchg
ja
xor
out
roll
fcmove
std
pop
push
add
mov
cmp
add
pop
jbe
add
out
sbb
mov
lods
adc
inc
push
add
xchg
outsb
std
sbb
xchg
inc
add
dec
les
pop
pop
dec
mulb
scas
mov
sub
jge
cmp
dec
push
and
or
addb
cltd
addb
gs
xor
add
fcoml
sub
test
push
imul
and
add
xchg
dec
push
jne
gs
cmc
lsl
int3
inc
pop
movsl
ret
subl
aad
inc
jl
jo
xor
out
add
jle
sahf
test
gs
add
adc
shl
inc
add
fldenv
xchg
ficoml
mov
pop
add
jl
out
addb
add
sti
pop
cmp
cmp
imul
xchg
inc
lods
mov
stc
fsubrl
dec
cltd
xor
cmp
hlt
cmpsl
add
add
shll
jns
cmp
adc
loope
cld
outsb
lahf
xchg
sbb
pop
cmp
int
arpl
aas
inc
add
scas
idivl
movsl
jle
add
enter
or
adc
into
pop
mov
div
iret
scas
and
sbb
icebp
mov
sbb
std
inc
add
repnz
and
pop
in
cld
sub
add
outsb
cmp
sahf
cmp
xchg
fs
insl
mov
cmp
lcall
mov
push
into
gs
add
mov
add
and
test
lcall
xlat
out
cmp
pop
jmp
inc
jae
mov
lock
outsb
xchg
bound
pop
xor
rolb
in
mov
mov
rorb
js
jnp
pop
and
push
cmp
inc
iret
repnz
int3
cmp
nop
das
xchg
test
xchg
pop
mov
add
fldl
push
xchg
jg
jecxz
or
xchg
xchg
adc
push
dec
and
std
cmp
nop
lods
and
out
in
jg
sbb
aas
push
add
pop
add
mov
repnz
push
add
mov
mov
add
dec
dec
out
sbb
push
adc
addb
mov
repnz
cld
cmp
test
or
jmp
xor
ret
aas
xchg
xchg
xchg
mov
popfw
aad
sar
gs
add
mov
stc
xchg
pop
or
mov
je
das
rcll
xor
inc
add
add
add
push
sbb
stc
or
cmp
rcl
dec
popf
clc
andl
insl
cli
cs
incl
push
inc
push
jbe
fcmovb
add
test
push
inc
mov
pop
or
xor
rcll
sub
int3
jmp
lret
aaa
je
mov
loopne
add
jp
push
adc
shrb
mov
or
sahf
xchg
xor
cmpsb
cmc
inc
push
test
add
add
xor
dec
iret
pop
mov
mov
mov
movsl
addb
int
and
mov
add
add
icebp
push
ds
pop
lcall
xchg
bound
fistpll
ja
add
lcall
add
repnz
test
mov
sbb
subl
push
jae
lods
push
add
fnstcw
push
dec
push
adc
pop
adc
stos
out
sbb
or
cmpsl
out
cmp
clc
lods
lret
out
and
cli
mov
scas
mov
add
and
jb
das
add
in
jp
lods
sti
insb
icebp
add
sbb
jns
mov
jg
addb
leave
js
bound
movsb
adc
jge
mov
les
cmp
adc
sbb
add
jmp
sbb
cwtl
lds
aad
xchg
daa
inc
push
imul
aas
cmp
adc
mov
sbb
and
add
push
dec
mov
js
jg
js
aas
adc
orl
mov
xchg
sbb
jmp
out
inc
cli
lock
push
add
push
add
iret
ss
lret
and
shl
mov
add
mov
pop
addb
outsb
sbbl
scas
mov
rolb
pop
xor
sbb
mov
pop
das
aad
xchg
into
mov
add
bound
mov
mov
add
popa
ljmp
mov
filds
rorl
sbb
jp
int3
insb
outsl
lret
jne
xchg
shll
std
pop
outsb
xor
call
mov
rolb
imull
cltd
je
dec
pop
std
movsb
aaa
and
dec
loop
push
cmp
mov
js
jmp
jae
hlt
data16
lds
add
lods
sbb
dec
out
pop
test
cmpl
xchg
aas
and
out
or
add
data16
xor
mov
iret
jo
lea
das
adc
data16
sti
mov
cmp
movb
push
inc
add
aam
sbbl
adc
push
add
mov
dec
pop
out
idiv
nop
fisubl
mov
div
test
test
push
and
movb
add
adc
push
push
inc
xchg
mov
jp
addl
xchg
and
mov
cmpl
xchg
movl
rorl
jge
or
xorl
jne
cmp
movb
call
lods
pop
inc
cli
jbe
es
jg
lock
pop
lods
sub
imul
ret
and
imul
fildll
dec
js
mov
mov
jns
jnp
adc
cmpsl
mov
jle
lcall
mov
scas
ja
ret
add
fwait
rcrb
mov
bound
jo
cli
mov
mov
push
push
xchg
jbe
jo
decl
test
xor
sub
inc
add
sbb
rolb
lea
mov
icebp
clc
in
jecxz
inc
xchg
add
insb
jle
movsb
dec
or
xchg
sbbl
mov
inc
add
hlt
in
cmpsb
mov
push
inc
in
sarl
test
sbb
in
ljmp
pop
test
dec
aam
daa
inc
sbb
add
xchg
sub
cmp
orl
mov
out
jp
add
fdivr
inc
adc
cmc
mov
loopne
add
enter
jle
cmp
lods
movsb
pop
cwtl
out
mov
adc
jne
xor
lahf
mov
out
faddl
mov
mov
clc
pop
pushf
push
cmp
cmp
inc
jo
iret
sbb
mull
and
fwait
mov
mov
insl
cmpsb
stos
dec
or
jle
add
lods
ret
int3
loop
xlat
adc
add
or
clc
dec
loop
mov
imul
ljmp
xor
xchg
sub
pop
jle
out
inc
add
jp
cltd
clc
adc
push
jmp
imull
into
fisttps
mov
dec
adc
addr16
das
rolb
popa
fdivr
and
mov
outsl
xor
std
in
mov
mov
mov
es
add
pop
loope
xchg
clc
push
incb
inc
add
addb
dec
fdivrl
and
mov
sub
cmpsb
mov
cmp
add
mov
push
sahf
dec
dec
mov
sbb
add
scas
outsl
xor
cmp
in
pop
xchg
aam
xor
sub
in
mov
pop
inc
mov
adc
scas
addb
push
pop
mov
dec
adc
xor
inc
add
xchg
mov
mov
dec
jo
push
aad
iret
cmp
push
das
push
cli
shll
add
jp
enter
out
cmpl
add
dec
addb
in
jl
cmp
mov
icebp
jl
xchg
pop
xchg
addr16
jo
jnp
cmp
das
stos
pop
je
and
sbbl
adc
add
outsl
mov
in
xchg
or
fisubrs
mov
pop
mov
ret
imul
lret
cmp
push
into
cmpsb
push
sub
mov
ret
pop
mov
pop
sahf
mov
and
pusha
add
negl
push
sbb
ljmp
dec
movhps
cmp
dec
lcall
jge
xchg
roll
add
or
push
push
add
rcrb
push
or
clc
cmp
ljmp
fadds
stc
imul
cmp
add
into
xchg
inc
add
aaa
fsubrp
int
iret
dec
adc
pop
push
pop
xchg
sub
ficoms
call
xchg
lret
sub
movsb
out
push
mov
stc
out
addb
push
out
push
daa
push
mov
pusha
add
add
fwait
jnp
popa
add
in
jl
push
jmp
mov
inc
into
aaa
inc
add
sub
push
push
and
lahf
mov
cli
add
ljmp
fisubrl
fisubl
mov
movsl
pop
sub
leave
pop
fadd
add
jns
mov
ds
cmpsb
dec
jnp
add
test
mov
call
mov
or
in
add
push
mov
cmp
jl
push
fcomps
cmp
rolb
mov
pop
jae
mov
daa
pusha
add
push
int
and
mov
cmp
jb
xor
mov
mov
and
mov
andl
data16
add
imul
xchg
int3
push
or
add
fcomi
xor
push
mov
jmp
pop
inc
addb
mov
pop
ret
lret
jae
push
adc
add
inc
fs
xor
int
inc
jae
adc
jg
test
and
sbb
stc
dec
lret
orl
sahf
add
mov
inc
add
add
add
add
je
cmp
mov
jg
inc
inc
add
inc
negl
test
scas
in
add
or
dec
xchg
push
subl
out
addb
lahf
jo
add
popf
ljmp
adc
out
cmp
add
es
mov
es
or
mov
arpl
sti
pop
out
sahf
stos
add
mov
sti
mov
std
and
movsl
lds
add
pop
sahf
sti
jecxz
xor
jg
popa
les
dec
sub
add
fbld
mov
pop
add
mov
cmp
ret
ret
dec
adc
inc
add
inc
jg
xor
pusha
add
sub
icebp
fstps
mov
ret
xor
cmpsl
mov
mov
add
push
rcrb
dec
pop
cmp
inc
outsl
xorl
ret
cmp
hlt
cli
sbb
add
into
loopne
jb
mulb
rorl
dec
addb
ret
outsl
test
test
adc
push
mov
mov
mov
xor
mov
sbb
aam
push
in
mov
mov
cmpsb
mov
add
je
mov
stc
ljmp
xor
rcl
inc
inc
add
jge
aas
ljmp
add
xchg
mov
mov
in
cmpsb
stc
adc
add
popf
and
mov
or
mov
test
movsl
jle
sbb
leave
lea
cmp
add
xchg
mov
in
lahf
fldl
fcoml
cmp
outsl
push
xchg
push
cmp
adc
push
sub
sarb
dec
mov
rolb
adc
nop
dec
jnp
and
and
cltd
insb
popl
pop
ret
jae
ss
enter
je
das
addb
addr16
jns
rolb
lret
xchg
mov
lret
adc
rcrl
dec
xchg
and
pop
fs
cmc
adc
shlb
dec
fs
pop
pop
je
enter
jo
add
mov
adc
testl
sbb
or
sub
test
add
and
inc
add
or
pop
pop
ret
icebp
lock
xchg
push
mov
adc
das
xlat
jl
inc
xchg
out
push
mov
mov
in
add
or
sbb
dec
cmp
into
mov
jmp
ficompl
bound
mov
push
mov
push
lds
out
mov
inc
popa
or
lea
adc
pusha
add
add
popf
mov
and
or
inc
add
test
lods
pop
adc
mov
pop
fldt
addb
stc
jns
pop
cmp
int3
add
pop
loop
jnp
jmp
add
jecxz
repnz
addr16
aam
add
xor
jnp
adc
inc
mov
sub
int3
lods
push
mov
xchg
cs
push
xchg
leave
out
mov
mov
jecxz
xor
and
andl
and
bound
inc
mov
dec
sub
jnp
adc
push
lret
adc
movb
dec
rorb
lock
pushf
and
aas
repz
xchg
imul
ljmp
dec
lock
add
insl
icebp
pop
mov
sbb
pop
sbb
in
mov
lret
mov
subl
add
jae
jae
mov
out
push
or
aas
pop
int3
mov
jne
aaa
in
jl
jge
insb
push
mov
cs
add
jb
pop
hlt
clc
pop
mov
add
fidivrl
int3
jne
ja
dec
in
jbe
add
jmp
sbb
inc
outsl
push
clc
aaa
add
in
sub
pop
sahf
jle
cld
sbb
add
js
sbb
add
stc
cmp
fidivs
xchg
jnp
push
jp
data16
aas
shll
addb
enter
in
mov
adc
sub
movsb
mov
mov
outsb
lds
lahf
pop
sub
push
out
or
insb
xor
lret
lret
test
add
mov
add
inc
xchg
push
rolb
icebp
xor
add
cli
xor
inc
inc
js
bound
jns
mov
mov
scas
sbb
je
jo
sahf
popf
cmpsl
ljmp
push
or
xchg
ret
inc
add
jl
icebp
aam
in
mov
incl
in
cld
aad
scas
addr16
push
pop
and
mov
test
add
out
xchg
inc
push
add
mov
add
xor
inc
add
movb
mov
popf
ds
jo
add
xchg
scas
sahf
add
daa
push
inc
add
add
and
add
add
ss
lock
mov
insl
sbb
rcrb
xchg
mov
nop
and
mov
jp
popa
shrl
cmpsl
rcrb
movsb
lret
insl
sub
pop
test
leave
shrl
inc
movb
adc
or
jmp
dec
sub
jp
inc
add
adc
inc
add
push
adc
dec
mov
xchg
add
sub
push
insb
mov
add
sbb
jns
add
add
inc
sbb
add
sub
add
addb
sub
adc
mov
bndldx
xor
cmp
xchg
std
enter
dec
adc
mov
jne
push
call
decl
enter
js
sarb
xor
testb
popf
movsl
scas
das
out
jne
xchg
into
popf
jmp
push
lock
add
test
and
xor
push
add
sbb
xchg
or
add
aaa
xchg
or
addb
out
and
aas
pop
mov
notb
add
fldl
xor
add
insl
push
pop
push
xchg
adc
lret
push
inc
push
sbb
adcl
imul
cmpsl
push
mul
xchg
mov
lods
adc
add
add
es
dec
mov
add
sbb
and
mov
inc
call
scas
dec
jb
fwait
xor
xchg
xchg
rcr
bound
addb
jmp
pop
jo
xchg
imul
decl
movsl
es
scas
adc
imul
mov
jns
lods
push
imulb
fldz
mov
mov
mov
fsubrs
jmp
add
cmp
add
push
mov
outsb
gs
ficompl
movb
lcall
test
inc
divb
addr16
add
xchg
movb
or
mov
pushf
fmull
and
jae
std
add
push
mov
je
sti
in
adc
fdivs
and
add
dec
cmpsl
cmpsb
adc
int
movsl
xor
pop
cs
pop
in
daa
out
xor
jle
lock
cli
mov
mov
sub
mov
and
add
bound
fisubrs
insb
mov
out
pop
xlat
pop
xchg
shrb
iret
jecxz
add
out
mov
and
push
lock
xor
sub
push
inc
add
mov
mov
in
insl
and
shll
cmpsb
movsl
jns
add
jnp
sarl
pop
popa
cmp
xor
dec
std
inc
add
mov
ficoml
sbb
lods
xchg
ficoms
push
and
mov
adc
pop
mov
bound
int3
ds
jmp
push
addr16
push
or
mov
add
add
movb
xor
pop
xor
dec
sub
jne
sub
and
and
mov
cltd
jecxz
or
fisubrl
movsl
out
stos
lea
clc
dec
mov
add
xor
add
pop
cld
test
mov
inc
lea
add
sar
daa
int
jne
jge
sarl
inc
add
enter
inc
add
add
add
xchg
lods
in
andl
outsb
xchg
test
pop
or
dec
pushf
imul
xchg
imul
and
imul
add
add
lcall
xchg
push
mov
inc
add
pop
hlt
aas
cmp
cmp
cs
or
leave
add
and
rolb
mov
mov
jne
setne
loop
stos
jae
bound
cli
add
shlb
sub
add
into
and
push
add
mov
jp
push
push
pop
aaa
cmp
dec
outsl
daa
test
outsl
cmp
jbe
mov
lds
mov
sbb
loope
push
fsubrl
loop
mov
or
scas
rcr
clc
stc
sub
popl
fimuls
lods
mov
add
jl
into
cmp
inc
mov
or
push
rorb
xchg
and
jb
int
jns
add
in
gs
and
mov
sbb
pop
cmp
icebp
in
data16
scas
bnd
in
enter
cli
xchg
sbb
xchg
out
dec
inc
add
jg
les
jne
add
push
add
ret
push
pop
lods
jns
inc
mov
add
mov
notl
xor
jno
sub
add
push
cli
loopne
lahf
addb
add
fdivrs
popf
push
insb
pop
mov
push
add
addr16
mov
gs
leave
mov
sub
sub
fmull
mov
addb
add
jp
rol
lds
dec
movb
aas
mov
adc
pop
sti
test
out
push
add
loop
mov
add
fcmovu
int3
inc
add
fldt
inc
inc
scas
loopne
or
xlat
cld
imul
xor
test
sbb
ret
lahf
xchg
js
fnstenv
or
dec
pop
bound
and
pop
and
dec
sbb
jmp
in
cmc
lods
or
lret
adc
mov
and
push
test
add
imul
fiadds
and
adc
hlt
xchg
add
stos
pushf
mov
add
dec
rcl
mov
aaa
jecxz
lcall
push
mov
cmp
aaa
frstor
sub
imul
insb
pop
adc
add
push
ret
lods
sbb
std
test
mov
int3
sub
pop
loope
icebp
bound
test
add
je
mov
lods
leave
aad
push
cmp
out
call
imul
add
xchg
mov
add
stos
dec
sahf
cmp
push
mov
xchg
scas
mov
leave
mov
imul
inc
add
xor
or
dec
adc
add
add
ljmp
push
add
push
ficoms
add
mov
add
aam
lahf
lea
or
add
mov
pop
pop
add
leave
jbe
push
cmp
cli
xor
add
in
shll
das
lods
mov
popf
fildl
push
mov
cmp
or
mov
add
lret
outsb
pop
in
push
shll
movsb
mov
popa
fmuls
or
int3
popa
mov
mov
inc
add
cwtl
cmpl
mov
sbb
add
int
sbb
pop
cmp
sbb
xor
mov
pop
pushf
imul
arpl
pop
test
loop
in
gs
inc
add
add
or
jns
arpl
pop
jle
push
dec
ja
add
mov
hlt
ret
mov
movsb
icebp
out
loope
repnz
xor
mov
push
jp
and
jecxz
jle
xor
push
xchg
sbb
jp
cltd
xchg
and
add
lods
push
mov
jo
mov
or
or
jg
or
mov
add
std
xchg
add
cmpsl
loop
add
mov
inc
jno
push
mov
mov
jp
testl
and
fstps
sub
ret
dec
push
test
sbb
mov
inc
movb
mov
sbb
addb
add
cltd
arpl
cltd
add
aad
arpl
repz
xlat
dec
aas
jp
arpl
repnz
arpl
mov
mov
hlt
mov
sti
or
cmpsl
enter
xchg
and
test
push
jmp
into
pop
push
mov
ja
loope
sub
push
in
fdivp
lods
and
push
sub
test
jbe
add
push
jnp
xchg
jmp
jne
add
dec
push
gs
xchg
es
pop
dec
out
dec
add
add
pop
shll
inc
add
adc
out
xor
imul
sbb
test
xchg
mov
jge
loope
add
jp
pcmpgtb
add
sahf
outsb
imul
mov
pushf
fsubs
add
mov
and
lods
cmpsl
in
mov
sbb
les
mov
sbb
dec
mov
pop
and
and
cmp
add
ss
aam
out
enter
pop
outsb
sub
cwtl
roll
dec
dec
mov
test
xchg
jmp
popl
shrl
pushf
pop
enter
aad
add
push
sub
cltd
cmp
push
xor
mov
addb
inc
movsb
or
push
int3
mov
into
sbb
pslld
push
add
mov
mov
popf
push
mov
aaa
xchg
jecxz
add
test
pop
pop
ja
daa
cmp
sti
roll
sub
call
fiaddl
hlt
pusha
add
fwait
mov
loopne
les
push
aad
inc
add
pop
inc
pop
aad
rolb
mov
in
mov
pop
bound
std
not
inc
inc
add
pushf
inc
xorl
les
out
pop
fcomip
sbb
inc
dec
repnz
xlat
pop
flds
jge
pop
mov
jmp
push
sbb
mov
sbb
mull
scas
cmc
xor
jp
adc
push
adc
push
inc
inc
add
push
push
movsl
add
pop
stos
jl
xchg
add
subl
add
adc
aam
jge
sbb
add
cs
loopne
rcll
xor
xor
mov
adc
inc
add
aam
imul
and
or
add
pop
ja
mov
mov
and
es
inc
push
mov
jno
add
test
or
mov
fisubrl
movsb
icebp
je
data16
xchg
push
sti
je
or
add
mov
test
add
lret
cltd
inc
add
dec
ret
fcoml
dec
movb
loope
jecxz
decb
sub
jmp
stos
and
cmp
rcrb
pop
cmp
cwtl
adc
push
aas
cli
mov
shl
data16
add
decb
addb
xor
push
add
dec
xchg
repnz
popa
mov
pop
push
fucomp
cmp
test
mov
fsub
push
imul
loope
mov
add
push
loopne
movsl
mov
pop
rcrl
add
xchg
sbb
pop
add
inc
cmpsl
into
or
xchg
mov
and
test
or
xor
add
add
out
aaa
sbb
push
inc
mov
mov
dec
ret
sbb
sbb
push
gs
cmc
ficoms
mov
adcl
xor
mov
mov
stos
xchg
add
inc
xor
add
gs
mov
clc
add
stos
mov
adc
cmp
lea
jb
add
xor
mov
fnstcw
std
js
sbb
movb
scas
jle
mov
or
fistpl
sti
jae
dec
jnp
add
pop
mov
mov
scas
dec
mov
push
add
and
loop
aam
add
and
outsl
icebp
push
push
mov
subl
in
cmc
in
jp
add
or
sub
pop
sti
mov
adc
lds
or
cmp
rolb
jp
jne
imul
cmp
push
das
mov
mov
dec
sbb
mov
out
pop
and
adc
cmp
testl
push
outsl
dec
mov
loopne
cmpsb
and
pusha
add
add
pop
add
add
inc
add
or
addb
adc
xor
and
dec
jne
add
jmp
popa
jae
inc
lds
add
hlt
and
lods
in
cmp
or
mov
inc
pop
inc
add
pop
mov
lret
out
test
ljmp
out
mov
push
mov
ret
pop
fwait
cli
jno
jo
pushf
push
test
leave
or
jle
add
dec
push
add
cli
mov
pushf
mov
add
mov
add
inc
add
add
dec
push
ljmp
mov
add
add
test
and
mov
push
xlat
dec
xchg
push
popf
fists
jge
test
jmp
add
mov
mov
into
and
dec
and
sub
and
jmp
jno
in
push
jmp
mov
imul
and
add
push
xchg
dec
jo
loopne
out
jp
pop
mov
cltd
inc
and
jle
add
pop
xchg
cmp
and
cmp
mov
movsl
jmp
mov
test
add
addb
jmp
fisubs
add
add
add
dec
fdivs
pop
cltd
test
aad
xchg
pop
shrl
icebp
and
adc
sub
lahf
cwtl
jg
mov
popl
fbld
adc
movsl
addr16
iret
add
das
inc
sbb
xor
mov
fdivrs
jno
fadds
fldenv
ja
and
pop
and
mov
xlat
scas
xchg
jnp
aam
mov
mov
movsb
cld
mov
mov
xchg
jge
dec
mov
add
or
inc
xchg
mov
xchg
push
mov
cmp
and
fidivrl
lods
cmpsb
sbb
mov
test
cmp
in
jl
add
aam
mov
aam
push
fcompl
insl
xchg
clc
and
or
mov
popa
jo
xchg
pop
std
cmpsb
sbb
and
xchg
sub
add
jns
add
fmul
clc
adc
lcall
mov
cwtl
adc
jmp
add
stos
popf
out
sub
mov
sub
movb
mov
inc
add
fstp
mov
insl
stos
jo
mov
add
gs
cmp
add
inc
add
add
adc
pop
sbb
fisttpl
pop
mov
mov
and
dec
fnstsw
sbb
pop
dec
mov
add
and
ret
fwait
mov
ljmp
add
adc
je
scas
fs
pop
jg
jne
mov
add
jg
add
jbe,pn
jo
jo
cmp
cmp
push
jae
mov
stos
shll
push
push
outsl
mov
decl
pop
pop
mov
scas
ja
sub
sarl
add
jbe
xor
pop
adc
sbb
pop
sti
addr16
sbb
das
inc
add
mov
movsl
dec
in
inc
add
imul
xchg
cmpsb
iret
in
loopne
pop
inc
movsl
sbb
or
mov
cmc
rcrl
cmp
and
xor
in
mov
mov
and
in
rolb
lods
push
xchg
sahf
xchg
push
add
jp
outsb
enter
addb
dec
add
out
popf
inc
fcomi
jae
nop
mov
repnz
cmp
out
pop
sahf
push
inc
add
push
jb
lret
mov
add
xchg
fnsetpm(287
es
icebp
int3
jp
cmpsb
jno
sub
rolb
add
mov
fdivrl
push
mov
loop
sbb
or
cmp
addb
inc
mov
mov
and
push
in
xchg
add
addr16
mov
xchg
fcompl
push
add
rolb
shll
add
jae
cmp
in
add
iret
sti
dec
push
push
dec
aam
push
sub
jo
dec
xchg
xchg
dec
xor
cmpsb
pop
mov
sbb
js
lret
inc
add
jo
sub
push
test
push
sbb
loopw
lar
ret
or
inc
mov
pop
and
add
repnz
test
mov
repz
xchg
aas
sbb
fcmovu
stc
xchg
mov
ret
adc
inc
pop
jb
aas
pop
pop
lcall
iret
xchg
outsb
inc
rcrl
add
out
and
lret
mov
cmp
stos
adc
addl
rcl
lock
xor
nop
lods
pop
jle
dec
xor
pop
xor
lea
outsb
movsl
les
or
jo
jmp
mov
cmc
das
mov
shl
cs
push
data16
mov
sbb
dec
sbb
imul
fsubl
mov
and
xor
shrb
sub
jecxz
mov
loopne
add
sbb
sub
push
aam
movsb
popf
iret
xor
enter
mov
add
lods
push
cmp
daa
cmpsl
add
push
ret
jbe
mov
test
add
adc
and
add
sbb
mov
jno
adc
pop
cs
sbb
enter
add
jl
arpl
add
add
and
out
inc
add
mov
xchg
fidivrl
mov
push
lea
add
andl
cmp
addb
jne
push
xor
push
and
stos
fs
add
addb
add
add
pop
test
inc
add
aam
add
das
cmp
pop
cmpsl
or
lea
ljmp
push
add
and
cmp
in
push
dec
addl
fucomip
jb
jns
test
jl
outsl
repnz
sub
cmp
lcall
test
lret
test
out
fadd
sbb
jo
lods
aam
inc
add
out
dec
pop
out
repnz
sub
shl
xor
dec
push
inc
in
clc
push
xchg
or
mov
add
mov
fs
addb
cmpsl
loope
iret
cwtl
pop
cmc
jp
xor
cmc
inc
jbe
mov
out
mov
sbb
pop
or
inc
add
pop
or
or
xor
jnp
mov
lret
xor
dec
lods
jecxz
sahf
cmpsb
jbe,pn
add
pop
add
add
add
jo
js
rorl
adc
add
sub
mov
sbb
dec
cmpsl
lret
daa
or
mov
dec
cld
out
add
scas
mov
add
loope
xor
cmpsl
cmp
adc
and
jle
push
pop
adc
adc
sub
pop
or
add
inc
add
cmp
push
daa
sbb
cli
mov
sti
pushf
push
or
imul
pop
mov
mov
or
loopne
sbbl
push
arpl
addr16
cmpsb
dec
pop
outsb
jg
mov
stos
mov
inc
add
add
sbb
add
push
pop
rcrb
ret
add
pusha
add
arpl
dec
inc
inc
mov
fmul
repz
add
adc
mov
lret
sbb
push
add
notl
js
data16
arpl
daa
mov
mov
mov
push
pop
lods
inc
ja
add
and
in
mov
add
movntps
into
orl
aam
aas
dec
fwait
sbb
inc
add
out
dec
pushf
addb
and
shl
and
xchg
mov
mov
adc
add
loop
dec
adc
push
jno
ficompl
push
mov
sub
test
jl
mov
out
xchg
mov
cmp
add
cmpl
sbb
fidivrs
sahf
in
test
cmpsb
outsl
cld
or
bnd
push
into
in
sub
jbe
stc
jne
add
add
aad
mov
mov
aad
pop
fbstp
out
xor
f2xm1
jle
mov
repnz
popa
addb
mov
or
hlt
jg
aaa
cmpsl
sub
add
inc
add
sub
dec
add
adc
mov
les
rorl
sub
adc
ret
adc
dec
cld
cld
mov
push
arpl
xchg
aad
or
popf
adc
dec
lcall
movl
or
add
popa
xchg
inc
clc
or
aam
push
sub
mov
in
popa
xor
mov
add
js
add
ja
push
push
ror
aaa
scas
cs
adc
stc
int
mov
pushf
jnp
stos
insl
aaa
pop
rol
out
jb
or
jl
pop
pop
jnp
dec
xor
jecxz
sub
movnti
sbb
sahf
jbe
cmpsl
lret
mov
adc
mov
xor
jo
cmp
sub
dec
outsl
mov
mov
popa
push
mov
aaa
iret
test
and
push
add
and
les
lret
mov
sub
jo
ret
sbb
add
xchg
bound
pop
mov
sub
add
jp
aaa
jle
and
jmp
mov
xchg
xchg
cld
mov
xor
fs
push
js
jb
jmp
stos
popa
test
pushf
jecxz
push
mov
xor
movb
or
sahf
aaa
fs
fists
inc
add
std
inc
add
xor
out
cmpsl
jne
in
pop
scas
bound
xchg
xor
xchg
cltd
dec
push
icebp
movsb
or
into
in
outsl
xor
repz
push
and
out
test
shr
mov
add
mov
aad
es
lret
dec
pop
xchg
add
mov
stc
xchg
pop
pop
inc
add
movsl
push
lods
andl
icebp
dec
sub
test
loope
addb
mov
xchg
cli
cs
jecxz
add
stos
jbe
icebp
in
jle
fistpll
push
clc
cld
addb
sbb
adc
out
addb
sbb
mov
stos
pop
fdivl
add
add
adc
and
xchg
test
inc
test
inc
cmp
inc
jp
cld
push
pop
adc
test
add
pusha
add
aas
or
add
in
mov
hlt
xor
push
xchg
fdivrl
mov
aaa
ficomps
xor
hlt
in
jl
sbbl
add
jns
add
insb
popa
inc
push
push
and
push
push
cwtl
cmp
movsl
adc
jb
add
jl
addr16
test
int3
stos
sbb
and
jnp
mov
mov
mov
addb
add
add
or
fwait
rclb
mov
imul
dec
rolb
sbb
cmp
mov
add
out
add
insb
lahf
xor
or
jg
sti
adc
sti
lret
and
insb
or
sub
cli
jns
adc
jbe
push
mov
addb
add
push
adc
adc
cmp
stos
add
divl
add
inc
in
in
inc
add
stos
movsl
push
pop
mov
jns
lock
cmovl
or
cmp
push
add
jb
pop
iret
leave
jbe
add
mul
pop
shlb
nop
and
testl
sub
neg
inc
inc
add
addb
adc
add
roll
fcom
xor
lock
inc
into
addb
add
sarl
iret
or
arpl
cmp
movb
push
mov
jp
das
and
pop
sbb
add
test
sbb
jmp
movsl
or
add
dec
cmp
int3
push
fs
aas
push
push
mov
mov
js
pop
in
cwtl
repnz
into
fimull
shlb
testl
sub
jne
inc
jns
adc
mov
mov
add
enter
pusha
add
fcoms
fildl
add
adc
inc
cld
aam
cmp
add
daa
xchg
mov
setbe
mov
out
gs
lahf
sub
inc
add
inc
jnp
outsl
mov
fistpl
popf
mov
in
jp
rolb
jo
push
test
push
out
cltd
xlat
cmp
js
inc
ds
sbb
add
xor
xchg
loope
or
add
sub
inc
ror
test
movsb
out
ret
add
ret
das
es
cmp
test
add
xchg
add
clc
pushf
or
dec
fidivl
jp
stos
addb
mov
imul
push
xchg
imul
mov
sub
sub
dec
scas
jge
and
pop
push
fidivrs
inc
aas
xor
addb
lods
cwtl
leave
or
in
sub
xor
ficoms
push
into
mov
fs
lret
xor
cld
ss
and
aaa
push
xor
js
cltd
test
sub
pop
stos
rolb
or
mov
fs
adc
add
stc
lahf
scas
xor
dec
adc
pop
and
test
fiadds
add
popa
jnp
addb
popa
repnz
decb
fs
add
in
in
arpl
stos
pushf
ficoms
jle
lods
shl
ss
fists
out
add
fwait
rorl
and
inc
inc
push
xchg
mov
loop
add
push
dec
sub
fimuls
jo
inc
push
mov
add
popl
add
mov
xchg
popa
sub
mov
aam
dec
pop
mov
loop
xor
imul
inc
ficomps
out
stos
or
jg
push
and
aam
mov
add
cld
je
sarb
arpl
xchg
ss
pop
jbe
nop
andl
addr16
jno
mov
add
aam
jle
add
imul
cmc
pop
sbb
scas
loop
xor
add
mov
jno
add
jnp
mov
add
jb
jecxz
in
xlat
test
call
adc
and
mov
fdivrs
dec
xor
xchg
sub
adc
leave
dec
rolb
and
lcall
aas
xor
std
fisttpl
push
inc
add
add
push
jnp
test
and
out
pop
les
leave
addb
sbb
cmp
or
cmp
add
pop
pop
xor
inc
ficompl
cwtl
pop
xchg
sbb
push
fwait
mov
dec
xchg
icebp
stos
xchg
mov
aaa
xchg
push
pop
xor
stc
mov
lcall
mov
mov
rolb
fstpt
testb
mov
pop
xchg
xor
roll
and
cmovge
bound
outsb
dec
fpatan
jge
lea
add
icebp
jne
sbb
cmp
in
pop
push
dec
dec
pop
mov
test
jne
jmp
or
pop
iret
push
adc
pop
aas
jno
sbb
xchg
daa
mov
push
lret
test
mov
inc
pop
pop
cmp
mov
out
es
push
addr16
xchg
adc
mov
or
mov
xor
add
jl
movb
xlat
rolb
mov
add
mov
scas
inc
add
sbb
xor
push
add
jns
testb
add
mov
sbb
sbb
and
fimuls
popa
mov
hlt
rolb
xchg
sti
inc
add
aaa
rolb
stos
aad
xchg
cwtl
cmpsb
dec
xor
das
add
sbb
scas
and
push
cmp
inc
add
test
mul
loop
je
fistps
idivl
inc
add
xchg
lock
mov
mov
mov
in
add
push
add
mov
ljmp
iret
jl
cmp
shll
les
leave
mov
outsb
adc
cmpl
dec
aas
call
add
xor
ret
cltd
jne
add
jno
mov
ljmp
add
gs
jne
add
ss
bound
outsl
or
and
pushf
hlt
nop
ret
mov
add
inc
stc
and
add
add
jns
sti
dec
sub
add
stos
std
mov
pop
jge
pop
fstps
or
dec
in
sub
adc
mov
pop
jbe
mov
call
jb
sti
cmp
cmp
cs
pop
int3
ds
cmc
addb
les
mov
xchg
push
or
adc
add
inc
jmp
add
lret
ss
les
push
sbb
scas
shl
xchg
leave
ret
mov
mov
push
dec
xor
xchg
insb
cmc
jg
sbb
add
inc
add
inc
add
xchg
lock
xchg
or
iret
rcrl
fstps
mov
push
enter
imull
add
adc
mov
add
outsl
in
mov
lret
outsb
adc
mov
stos
jns
in
mov
pop
and
arpl
push
jns
addl
int
add
add
push
fs
jo
push
aas
lock
add
rcrl
dec
push
xchg
pop
cli
mov
pop
iret
cld
xchg
adc
js
pop
mov
dec
mov
sub
add
fs
icebp
movb
jg
dec
mov
test
icebp
les
jo
add
cmc
inc
popf
int3
mov
add
out
test
ret
mov
into
add
pop
addr16
mov
imul
xor
lret
dec
xor
imulb
mov
add
insb
ja
or
sahf
mov
nop
rolb
mov
jno
loop
mov
ret
and
cmp
addb
ds
mov
xchg
push
add
xor
mov
int
rolb
lods
inc
xlat
es
cmp
add
das
mov
push
cmp
xchg
mov
pop
xchg
out
inc
add
aaa
pop
jns
mov
repnz
add
add
insb
cmp
cmpsl
mov
cld
sbb
mov
imul
test
xlat
mov
or
daa
jnp
mov
add
push
ss
mov
ss
ret
mov
jp
cmp
add
and
and
cmovo
int3
jno
fisttps
mov
cmpsb
movb
dec
daa
cli
or
divb
fs
addb
int
dec
mov
add
add
and
pop
push
add
dec
mov
push
lock
loope
and
dec
test
sbb
out
sbb
jl
dec
push
add
sbb
outsb
xchg
mov
ss
jp
subl
mov
scas
cmp
stc
pop
int3
testb
mov
and
cli
or
lock
aam
sarl
iret
xor
mov
clc
movsl
dec
pop
fmull
nop
inc
add
or
repnz
fidivrs
push
int
push
inc
bound
sub
js,pn
lcall
add
mov
push
fildl
fbld
rolb
mov
lret
jmp
or
fst
push
mov
add
inc
add
xor
fs
pop
inc
add
mov
add
dec
fldenv
aam
sar
push
test
in
fistl
jb
test
add
test
adc
cltd
jnp
repz
push
pop
nop
lods
fs
sub
sub
add
bnd
pop
orl
xor
sub
jo
jmp
or
pusha
add
jge
repz
push
jae
mov
int
dec
mov
mov
adc
in
xchg
xchg
sbb
xchg
or
imul
push
add
push
pop
push
push
rcrb
add
cs
mov
jo
outsl
int3
out
sub
in
jae
sub
shll
cmc
sbb
loope
mov
and
test
fisubs
push
es
sub
pop
xchg
lret
jb
dec
jge
daa
cs
and
cli
ret
xor
outsl
push
rol
rcrl
xlat
out
or
ficompl
xchg
out
mull
loope
and
or
add
mov
mov
ret
add
sub
icebp
pop
insl
adc
xorl
cmp
lods
lds
push
add
test
inc
mov
sbb
pop
sub
cmp
mov
sub
test
dec
cmp
add
jge
jb
mov
push
jecxz
mov
and
pop
sub
mov
mov
mov
fwait
cmp
cmc
or
leave
cmp
ja
add
inc
or
jo
add
add
shr
dec
adc
icebp
jo
sbb
insb
xchg
mov
mov
lcall
add
movb
mov
adc
ja
out
add
jbe
into
push
aas
mov
sub
mov
add
inc
push
mov
adc
jno
sub
fstps
leave
mov
ds
mov
mov
negl
js
negl
shlb
ds
popa
pop
fwait
in
or
add
ja
add
mov
jns
and
jae
ds
lret
inc
add
pop
push
pop
loope
popa
xor
or
sub
fucomip
rolb
xchg
jae
ss
add
popa
shrl
add
jns
out
push
lahf
movb
mov
push
sub
xor
lret
pop
pushf
adc
rolb
fsubrl
sbb
add
push
lahf
pop
push
repnz
cltd
jle
ss
add
add
inc
push
dec
mov
pop
add
cmp
je
add
test
fs
cmp
sbb
std
mov
ret
push
addb
add
inc
add
cmp
cmp
mov
jae
sti
mov
adc
push
sub
mov
in
push
mov
and
hlt
loopne
stos
lea
add
mov
mov
in
mov
jbe
xchg
shlb
scas
insb
aaa
mov
xor
dec
mov
and
mov
movsl
xor
cmp
fimull
add
dec
dec
mov
xchg
aas
lods
xchg
push
into
xor
pushf
pop
add
cmc
fdivl
movsl
mov
push
stc
mov
in
cli
xchg
push
add
cltd
jnp
je
sub
push
dec
mov
aas
shlb
add
dec
decb
xlat
gs
mov
xchg
xchg
movb
inc
mov
cmp
add
jp
cmp
test
jno
sbb
movb
sbb
pop
addb
jmp
addr16
jmp
sbb
aad
fs
add
pop
sbb
jmp
add
stos
lret
pop
fwait
daa
sbb
outsb
or
add
add
inc
xor
add
lods
add
add
mov
faddp
xchg
cwtl
lea
mov
repz
add
sub
cmp
test
add
out
insb
addb
out
stos
sub
add
xor
mov
xlat
sub
mov
jl
sbb
adc
mov
mov
loop
mov
out
add
cli
fwait
mov
pop
std
cld
mov
outsb
gs
xlat
test
cltd
inc
push
data16
lahf
test
arpl
jmp
das
xchg
jmp
sbb
jmp
or
pop
sub
add
mov
test
adc
add
rcrb
aad
movsl
cmp
insb
fisubs
mov
js
addr16
dec
and
int
push
dec
in
add
and
jg
aad
xor
test
fsubr
cmc
or
pop
sbb
sub
sbb
push
mov
out
add
testl
jl
push
add
jb
les
das
push
add
setae
out
or
rcrl
pop
mov
scas
jb
pusha
add
xor
xor
add
fs
xchg
jle
xchg
adc
mov
xchg
rcrb
test
ljmp
add
add
inc
add
sub
sub
add
das
int
addr16
ljmp
ds
add
imul
xor
add
add
xor
loop
push
push
int3
xlat
loopne
ss
test
fwait
dec
cmp
jno
or
add
xor
jns
mov
js
sbb
sbb
int3
adc
add
xchg
cwtl
xchg
int
cwtl
jnp
iret
inc
pusha
add
add
daa
jne
or
aam
int3
mov
adc
mov
push
mov
ljmp
lea
add
adc
sub
aas
cmp
add
push
add
addr16
ljmp
aaa
pop
scas
sbb
or
add
test
sub
sahf
call
les
ret
or
add
jecxz
sti
or
mov
ljmp
jo
bound
inc
add
leave
push
lret
xor
sbb
mov
add
movsb
int3
xor
mov
movb
inc
and
dec
gs
sbb
ljmp
outsb
dec
add
movb
sbb
mov
std
enter
scas
inc
movsl
mov
add
and
mov
pop
cwtl
shll
dec
xchg
push
sub
jp
add
cmc
mov
aas
xlat
jnp
pop
inc
add
push
mov
mov
mov
dec
push
sbb
xor
daa
jae
add
dec
sub
add
into
popa
xor
aas
xor
inc
jbe
mov
mov
dec
mov
jo
ret
jbe
add
mov
mov
sbb
rolb
cs
cli
std
sbb
fnsave
pop
mov
stos
add
cli
sub
ljmp
and
nop
ret
pop
push
les
jg
sbb
dec
imul
sbb
xor
dec
and
lahf
rorl
add
dec
scas
pusha
add
les
lcall
push
in
pop
and
imul
sahf
and
out
ja
pop
dec
and
dec
jne
mov
jge
or
cmc
test
mov
sti
dec
jl
cmp
mov
std
sbb
push
pop
das
dec
cmp
cmp
mov
push
enter
cmpsl
xchg
fnsave
dec
insb
mov
pop
mov
mov
movb
push
sbb
lahf
cmp
imul
jl
adc
add
push
jp
xlat
repnz
cwtl
repz
mov
push
out
js,pt
inc
push
dec
mov
adc
push
sbb
jmp
pop
inc
add
pop
int
loop
fsubl
mov
lods
js
add
and
jg
add
in
lods
sub
bound
dec
push
fiadds
mov
stos
xchg
daa
lock
cmp
or
std
mov
and
lods
mov
jb
add
add
mov
push
adc
lret
sbb
jg
nop
jbe
xchg
mov
jl
lret
shrl
and
dec
mov
jp
lcall
cmp
dec
pushf
fdivrl
inc
sub
xchg
or
inc
add
add
cmovno
cmp
add
mov
add
jns
jp
filds
cmp
sbb
jns
shl
xchg
popa
mov
daa
cmp
ret
stc
scas
addr16
stos
shrb
sub
leave
inc
add
dec
cmp
mov
fdivrs
into
cmp
add
sbb
dec
cli
mov
paddsw
mov
stos
sub
call
shl
sbb
inc
jmp
mov
add
or
pushaw
add
bnd
push
dec
adc
shrl
mov
add
dec
aam
mov
popf
mov
loope
add
inc
add
xchg
mov
xchg
dec
imul
inc
aad
mov
pop
add
ret
shl
shlb
daa
pop
xchg
movsb
lahf
xor
sti
cld
in
fldl
cld
hlt
test
addb
pusha
add
jae
scas
imul
adc
push
cmp
clc
xor
or
mov
jne
into
sub
movb
icebp
fiadds
fwait
sub
mov
add
shrl
cmp
push
sbb
xlat
xor
inc
add
pop
idivb
cli
sarl
test
dec
iret
mov
push
add
outsl
rolb
int
ror
pop
mov
js
push
sbb
jnp
loopne
add
jecxz
ret
add
lcall
imul
inc
sub
pop
adc
test
aas
mov
pop
call
ss
sbb
test
insb
sub
ret
xchg
stos
push
cld
sbb
jp
call
mov
ja
shll
adc
aam
sub
cmp
test
int
or
push
push
adc
add
addb
pop
sti
jo
sub
adc
sbb
add
or
fadds
add
jl
into
adc
jmp
stc
repz
das
imul
in
xchg
jle
enter
pop
call
jg
test
cmpsb
cmp
push
push
adc
push
dec
movsb
je
or
scas
loop
ljmp
test
hlt
jno
fbld
cmp
ret
scas
out
imul
fstpl
loope
jmp
xchg
addr16
xchg
cmp
push
add
pop
cli
sub
cli
sbb
mov
sahf
pop
pop
ficomps
mov
aaa
xchg
dec
or
jne
in
insb
and
lahf
fisubl
out
pop
call
dec
fwait
leave
notl
enter
xor
add
adc
xchg
and
sbb
jae
xor
pushf
push
push
and
insb
jno
cltd
jmp
addb
add
mov
movb
add
jae
add
sbb
mov
add
cmpl
push
mov
inc
pop
call
popf
sub
pop
fwait
testb
mov
fsubs
cld
mov
out
mov
inc
add
movsb
mov
jo
lret
ljmp
add
inc
add
nop
daa
ffree
add
sub
add
pop
sbb
xchg
bound
call
push
fidivrs
dec
sbb
jg
mov
addr16
das
jge
adc
xchg
cld
xchg
sub
lret
je
movsl
mov
xchg
pusha
add
movb
loopne
mov
enter
dec
inc
add
out
fsubp
cmp
push
into
das
cmp
je
push
sbb
add
shl
leave
push
cmp
shlb
sbb
xchg
xchg
add
insl
lock
sbb
and
sbb
fidivrs
sahf
mov
adc
sbb
pop
push
addr16
lret
iret
sbb
in
lock
pop
insb
repz
cltd
xchg
dec
and
xchg
and
mov
push
sub
or
pushf
mov
shl
mov
in
sahf
cmp
pusha
add
add
jecxz
inc
add
call
pop
scas
inc
or
cmpsb
leave
jg
rcll
xchg
ret
pushf
xor
xlat
cmp
lds
inc
add
inc
add
add
fsts
push
push
pop
ret
loop
loopne
mov
cltd
aad
pop
cmp
daa
std
adc
jnp
shl
or
jge
icebp
in
jns
pop
lea
jp
jmp
repz
cmp
xlat
cld
jg
push
out
es
dec
aaa
cmp
cmpsb
aad
hlt
mov
shll
add
sbb
loopne
add
add
int3
jg
mov
sub
xrelease
or
aas
jle
jbe
or
push
push
sbb
cmpsl
rolb
jne
add
int3
fldenv
add
notl
int3
arpl
das
rcrl
in
mov
ss
cld
jp
jbe
cmp
pop
xor
xchg
test
aaa
jne
or
sub
mov
mov
int3
fsubr
xor
aam
or
inc
push
jmp
sbb
decb
mov
jne
add
lods
negl
mov
arpl
adc
pop
lret
jno
add
inc
sbb
cmp
mov
and
cmc
adc
pop
in
cltd
mov
push
call
sub
out
sub
sti
add
mov
fisubrl
lods
enter
mov
stos
ficoms
mov
add
push
lahf
mov
mov
roll
sahf
adc
inc
jp
mov
testb
pop
addb
mov
iret
jecxz
je
inc
mov
ljmp
sti
sbb
setae
pop
pop
cmpsl
imul
out
adc
xchg
aam
je
jle
fistpl
xor
jp
push
mov
pop
dec
pop
push
addb
push
pop
out
enter
les
outsb
sti
jmp
inc
add
cltd
add
data16
pop
daa
jecxz
xchg
mov
dec
fisttps
iret
jge
inc
lods
pop
jne
mov
inc
rolb
sub
addb
and
dec
popa
xlat
test
fadd
add
adc
call
add
leave
in
outsb
adc
adc
pop
insl
inc
add
repz
push
xchg
sub
add
popl
sti
and
cld
cld
dec
loope
ret
sbb
xor
add
and
leave
jl
iret
lods
jl
mov
add
pop
mov
xchg
mov
dec
adc
sbb
add
ret
pushf
cld
leave
xchg
or
fstpt
jp
jmp
dec
imul
adc
mov
stos
jmp
inc
add
ret
fwait
aad
loopne
inc
sub
shlb
shr
push
push
and
cmp
add
jo
mov
push
pop
and
mov
push
aas
lcall
push
add
cmc
popl
add
enter
dec
xor
shll
sahf
mov
pop
icebp
je
xor
add
loopne
sub
sub
add
jns
nop
pop
adc
adcl
aam
call
mov
dec
add
and
loope
inc
add
cld
movsb
pop
ss
and
and
sbb
pop
movsl
dec
scas
arpl
out
pop
sbb
sbb
outsl
ja
out
data16
loopne
shl
into
test
add
xor
outsl
fadds
div
js
or
cmp
cmpsb
or
xlat
mov
dec
gs
lods
sub
fdivs
out
and
cmp
add
lea
cld
adc
js
xor
adc
xchg
adc
add
into
pusha
add
pop
xchg
addr16
add
movsb
out
inc
add
push
sub
adc
push
add
stos
add
add
jnp
add
sbb
mov
pop
jmp
cmp
loop
inc
hlt
cmp
in
bound
jge
xchg
sbb
jmp
add
add
xchg
xchg
mov
movsb
mov
add
add
movsl
add
push
nop
mov
add
data16
lds
xchg
dec
xchg
add
add
sub
pop
insb
mov
push
mov
jmp
add
jl
sbb
add
and
imul
pop
fs
jge
add
pop
jmp
lods
dec
pop
or
mov
xchg
jmp
jp
in
sbb
hlt
push
xchg
mov
inc
add
add
mov
jnp
jno
adc
in
lods
loop
xchg
fcoml
insl
mov
nop
or
add
idivl
inc
jp
test
ret
cltd
incb
sub
or
dec
inc
add
stos
sub
inc
jns
add
imul
and
jo
aas
fstps
add
test
adc
add
cmp
cmp
xchg
sbb
into
das
adc
aam
xchg
aas
sub
data16
pushf
in
sahf
mov
add
loope
or
push
add
dec
mov
xlat
adc
add
push
in
movsl
icebp
bound
sti
or
and
rcrl
inc
test
mov
icebp
cmp
add
sbb
sbb
xlat
dec
xchg
ja
je
add
pop
repz
mov
sbb
jns
jne
pop
mov
iret
cmpsl
cmpsb
popa
mov
xchg
pop
jp
pusha
add
inc
loop
push
fs
iret
adcl
or
fs
fidivs
addb
adc
fldenv
bound
mov
add
jecxz
sub
mov
ljmp
add
add
dec
shrb
cli
push
sahf
jne
enter
decl
int
addb
cltd
ljmp
add
into
in
pop
pop
enter
lea
pusha
add
pop
or
add
push
adc
or
push
inc
add
xor
mov
pop
jmp
mov
adc
cmpsl
rcll
sbb
test
pop
push
inc
add
idiv
jmp
mov
adc
and
int3
les
sarl
lahf
adcl
loope
pop
iret
mov
push
and
mov
stos
divb
pop
ljmp
fstpl
shl
lock
rol
sub
dec
pushf
mov
scas
sbb
aas
cwtl
xchg
or
mov
sub
add
les
lock
add
adc
mov
mov
adc
ja
push
fcompl
sarl
negl
add
and
and
insl
loop
out
das
jle
add
rolb
xor
cmpsl
nop
ret
ljmp
or
fsubs
cmpsb
mov
dec
bound
pop
xchg
cld
movb
sahf
jmp
or
fnstcw
clc
movsl
scas
sub
add
out
pushf
fidivrs
dec
cltd
mov
jae
sbb
mov
movsb
mov
ss
xchg
jmp
cmp
repnz
fsubs
push
repnz
sysenter
dec
add
inc
rcrl
stos
xchg
mov
addb
add
pop
ret
sbb
mov
add
addr16
loop
sub
inc
jns
add
clc
pusha
add
mov
xchg
insl
sub
cwtl
and
jns
stc
aad
mov
and
jno
in
cmp
xor
mov
cld
pusha
add
xchg
test
inc
add
lahf
jmp
xor
imul
and
pop
adc
int3
mov
xor
cmovl
mov
in
movsl
push
fisttpl
add
inc
add
jbe
mov
mov
dec
sbb
push
movsl
mov
lods
or
jge
cmp
rcll
inc
add
movsl
inc
add
fucom
test
test
mov
test
mov
test
pop
call
or
test
add
sti
fsub
inc
add
pusha
add
cmc
mov
xchg
pop
inc
mov
xchg
movsb
add
sub
rorl
addb
push
sbb
icebp
fwait
jbe
out
inc
addr16
add
add
sub
push
sbb
or
daa
add
mov
add
aas
arpl
jne
xchg
aas
addb
loope
mov
push
adc
sti
mov
sub
add
test
cmpsl
sbb
xor
repz
insb
stos
pop
xchg
fmul
adc
jmp
add
aad
addb
cmc
ret
aad
loopne
lds
add
push
mov
jle
add
sub
cmp
rolb
mov
push
jecxz
xchg
mov
add
jnp
test
sbb
xchg
add
ret
sbb
fisubs
add
add
gs
mov
pop
mov
pop
mov
daa
or
or
nop
xor
cmc
test
sahf
mov
ss
in
jb
xchg
mov
fildll
popa
adc
popa
loop
add
imul
mov
ret
mov
lret
jecxz
loopne
and
jae
mov
push
and
jmp
movsl
mov
loopne
dec
adc
jno
ror
mov
loopne
add
sub
xchg
movb
jnp
cmpsl
clc
xor
xchg
adc
add
lret
add
sbb
or
mov
mov
jmp
addb
inc
mov
sub
xchg
imul
lds
push
lcall
xor
mov
add
jnp
lock
cmp
popf
mov
push
repnz
mov
js
iret
push
int3
cld
push
mov
inc
or
pop
xlat
adc
popa
mov
test
mov
in
outsl
gs
add
cmp
int3
stos
jle
fmuls
into
sub
push
loop
fdivr
subl
repz
ret
nop
mov
sbb
rcrl
or
dec
cmp
pop
test
cltd
adc
aam
add
sub
add
test
add
mov
movsb
mov
and
pop
mov
sbb
or
test
fst
dec
jp
lods
mov
aad
adc
outsl
call
push
add
add
addb
out
push
pop
arpl
in
xchg
js
imulb
cli
push
lret
addb
pusha
add
sbb
mov
add
push
js
xchg
lcall
cmpsl
mov
add
movb
pop
mov
xchg
sbb
mov
mov
fs
lea
arpl
adc
das
adc
add
loopne
mov
cmp
sbb
adc
push
sbb
mov
jmp
shr
adc
mov
mov
mov
and
add
pusha
add
into
adc
and
mov
jmp
xchg
int3
mov
bound
das
add
sbb
add
sbb
or
mov
and
add
subl
and
mov
aad
add
mov
or
je
push
jge
mov
in
cwtl
mov
ja
cmpsb
loope
ljmp
jne
aas
in
mov
xchg
pop
mov
jg
push
inc
divl
push
inc
ds
sahf
add
mov
push
out
lods
xchg
adc
fdivrl
int
inc
add
adc
add
xchg
movsl
xchg
pop
jb
pop
movsb
add
xchg
add
fadds
jge
stos
mov
loop
add
cmpsb
pushf
rolb
inc
add
sbb
or
or
rcll
cltd
addr16
mov
negb
add
addb
stos
movsb
xor
add
add
add
call
std
sti
inc
push
and
data16
mov
adc
jnp
mov
inc
fstpt
leave
hlt
aam
iret
out
add
arpl
into
jo
fnstsw
addr16
aas
or
pop
xor
or
hlt
mov
frstpm(287
call
call
repnz
hlt
outsl
int3
mov
jns
jg
fs
pop
stc
mov
mov
xchg
js
scas
and
pop
lods
push
push
add
xchg
or
inc
sti
jg
iret
aad
xchg
imul
fsubs
pop
pop
out
jnp
das
cmp
inc
add
inc
sbb
inc
outsl
call
mov
clc
cmc
in
les
dec
xchg
sbb
out
push
mov
or
pop
add
sbb
cmp
sbb
pop
movb
jge
xchg
xor
sbb
pop
push
add
pop
scas
outsl
cmp
notl
cs
adc
add
ss
cmp
aam
xor
pop
mov
packuswb
dec
out
jbe
jle
aas
mov
in
ret
imul
lcall
add
addl
dec
gs
pushf
shlb
movb
jnp
xchg
imul
sti
push
mov
push
mov
mov
push
push
cmpsb
pushf
mov
das
cld
test
mov
push
das
sbb
test
add
add
pop
mov
lcall
enter
xor
sbb
in
movsl
scas
mov
jno
fcoms
fidivrl
mov
cmpsl
js
sbb
mov
sbb
add
aaa
sub
add
into
xchg
fwait
nop
mov
add
pop
jecxz
xchg
fs
bound
inc
add
jmp
lret
insl
dec
mov
inc
add
cmpsb
inc
add
jle
add
les
pop
into
sbb
gs
add
xor
rcrl
push
loope
movb
xchg
mov
jnp
add
xlat
push
pop
arpl
call
add
rolb
sbb
and
fistps
outsb
popa
scas
outsl
lret
mov
inc
mov
test
push
inc
mov
dec
or
cmp
pop
inc
add
sbb
lods
addr16
add
inc
add
jb
cmp
push
iret
push
or
pop
lock
enter
sbb
push
mov
pop
movsl
add
rolb
mov
icebp
xchg
loop
repnz
outsb
and
xchg
xor
inc
rolb
jnp
sub
push
jg
lret
out
add
push
and
xor
dec
mov
repnz
jle
ficomps
cli
loopne
cli
scas
xchg
test
es
add
dec
divl
imul
rcr
pop
lahf
cld
int
aad
imul
insb
push
cli
repnz
xchg
rolb
imul
push
gs
sub
cs
push
pop
insl
repz
cmp
js
sbb
mov
push
sbb
sqrtps
xchg
inc
push
xchg
test
iret
cs
jb
xor
pop
cmpsb
inc
popa
aam
and
loope
mov
add
push
sbb
icebp
mov
push
or
xchg
enter
sahf
lret
jae
ret
lret
test
stos
mov
imul
push
into
adc
scas
lods
mov
scas
vphsubwd
pusha
add
dec
add
pop
outsl
lods
scas
push
movb
stos
les
dec
pushf
mov
cmp
sub
stc
sbb
xchg
rorl
add
pusha
add
add
addb
pop
ds
out
rolb
inc
add
jno
fcompl
sahf
loope
test
loop
int
mov
add
dec
sub
les
pop
fildl
mov
daa
sbb
cli
jns
out
shll
lods
mov
jmp
enter
loope
push
sub
hlt
pop
jp
aaa
ret
outsb
scas
or
push
cli
std
and
inc
add
data16
aad
cmp
aaa
xor
out
pop
pop
dec
xchg
bound
pushl
loopne
repnz
add
int3
popf
push
clc
imul
fisubrl
inc
adc
sbb
subl
sub
lcall
imul
push
add
fidivl
add
jge
add
cmpsb
sub
or
rolb
je
add
int3
xchg
fcomi
lods
out
mov
add
addb
adc
fidivs
push
subl
fcomps
xchg
js
mov
mov
adc
les
or
jge
addb
or
ss
add
xor
pop
insl
notl
cmpsl
int
dec
pop
aam
cmp
fdivrs
fiaddl
test
mov
test
inc
add
add
cs
add
add
cld
incl
dec
gs
gs
jbe
mov
add
cmpsl
or
add
outsb
enter
enter
lock
sub
push
push
adcl
xchg
and
test
or
sti
dec
sbb
mov
dec
add
hlt
mov
and
jbe
mov
mov
test
push
dec
sahf
mov
mov
jecxz
add
xchg
xor
in
addb
filds
or
sub
push
out
fildl
pop
pop
in
mov
adc
repnz
pusha
add
cmpsb
sbb
mov
dec
dec
shrl
xchg
adc
add
xor
test
adc
or
cld
cltd
add
movsl
dec
outsl
inc
fs
movsb
cmp
movsb
rol
fldt
fwait
sahf
cltd
pop
cld
mov
in
add
push
xchg
add
fwait
adc
sub
pushf
dec
das
loope
push
mov
jmp
xchg
hlt
mov
push
call
and
lret
loope
mov
add
ret
jmp
loope
movsb
scas
fsubp
lret
pop
xor
mov
movsl
ljmp
into
xor
shr
mov
pop
dec
jo
data16
jmp
sub
add
icebp
test
add
sarl
sub
test
push
xor
or
sbb
lcall
or
iret
scas
pop
ficoms
pop
push
mov
pop
cmp
arpl
mov
rolb
shll
push
sahf
fcompl
add
sahf
pop
xor
cmpl
mov
pop
stos
push
and
pop
ljmp
shl
aad
jbe,pn
push
shld
add
cmp
and
sbb
daa
cwtl
aad
xchg
and
dec
addr16
stos
scas
pusha
add
rcr
dec
sub
shl
ret
dec
repz
test
movb
pop
mov
push
mov
aad
cmp
add
lahf
int3
scas
mov
sbb
outsb
push
mov
pop
lcall
hlt
or
daa
dec
loopne
mov
enter
or
hlt
inc
and
mov
fsubrs
push
push
add
sbb
mov
in
pop
decl
xchg
aaa
es
jge
pop
addr16
xchg
rolb
adc
aam
add
sbb
repnz
inc
sub
sbb
fwait
addb
adc
je
cmp
fisubl
dec
push
stos
rol
add
cli
adc
outsl
jnp
lret
ljmp
add
out
clc
jne
cmp
mov
ja
add
call
addb
fwait
loope
or
add
cmp
cli
lea
add
adc
mov
incb
adc
xlat
stos
xor
cmp
xor
mov
push
es
imul
insl
pop
aas
js
dec
cmpsb
lds
sub
pop
or
xor
ja
sbb
mov
sar
jo
enter
add
push
push
push
gs
xchg
mov
sti
cmp
push
add
jnp
add
repz
add
sahf
adc
call
push
dec
clc
int
lods
lahf
mov
sub
mov
stos
int
sub
add
rolb
stos
mov
add
sub
into
sub
xchg
aas
or
out
lcall
add
lret
ret
add
or
mov
mov
shl
sub
popa
xchg
xchg
scas
negb
sarb
xor
dec
hlt
sub
mov
es
add
push
and
ds
sahf
mov
lcall
outsl
or
enter
sbb
mov
sub
push
pop
gs
sti
stc
jnp
jb
cs
js
rclb
xchg
mov
jae
popf
lcall
jno
call
lahf
mov
pusha
add
test
jge
fldz
pop
or
rcrl
mov
stc
lahf
dec
imul
fsubrp
popa
add
in
cltd
pop
data16
xchg
xchg
mov
push
pop
mov
js
rcrl
sbb
add
sbb
add
mov
mov
add
sbb
pop
pop
dec
jbe
int3
and
xchg
cmp
adc
mov
mov
add
cmpsb
xchg
dec
das
sub
notl
xchg
push
add
insl
imul
mov
je
fimull
push
mov
jae
and
adc
je
pop
les
sbb
loop
les
pop
jecxz
pop
pop
lret
int3
idivl
mov
jg
add
iret
test
loope
shll
sub
cmpsb
repz
jns
inc
add
nop
ret
sarl
fcmovnb
add
jg
add
mov
xchg
mov
jp
push
jnp
xchg
dec
loope
fwait
cli
or
add
int
es
loopne
add
ret
mov
mov
jne
sbb
inc
mov
std
mov
mov
pop
insb
xchg
mov
add
sti
push
cmpsl
mov
arpl
adc
mov
mov
mov
fs
adc
add
sbb
stos
inc
add
gs
stos
mov
outsb
push
imulb
and
fadds
lret
jbe
shrl
pop
cmp
or
add
idivb
pop
jle
fsubrp
fists
dec
dec
rorl
push
pop
cmp
push
push
sub
and
sbb
and
outsl
add
lods
ss
jl
fisubrs
push
cmp
push
out
sub
cmp
mov
imul
dec
adc
jns
add
add
inc
add
lods
xor
add
dec
jae
cmp
inc
int3
inc
nop
out
mov
insb
fcompl
hlt
mov
rcr
aam
add
aam
and
fists
adc
cmp
add
jl
add
adc
out
pushf
pop
dec
popa
mov
jl
pusha
add
gs
mov
push
dec
sahf
clc
mov
jnp
mov
add
dec
mov
cmovne
or
and
add
mov
add
pop
outsb
hlt
icebp
js
repnz
hlt
icebp
test
push
push
add
stc
mov
iret
int
bound
imul
vxorpd
mov
jp
pop
inc
add
push
xor
mov
mov
ret
lea
push
loop
cmpsb
and
cmp
out
jp
adc
sahf
sti
mov
dec
inc
add
cmp
and
jb
jle
cltd
push
xchg
lret
add
shrl
mov
or
xchg
xchg
into
test
mov
add
lods
rcrl
lcall
ficoms
add
push
gs
scas
js
aaa
sub
addb
jb
mov
add
adc
and
jae
mov
sbb
pop
movsb
cld
rolb
xchg
cwtl
push
sbb
lea
fnstsw
cmc
stos
push
jg
das
pop
lods
std
or
negb
mov
pushf
call
jns
push
fdiv
lret
lret
mov
inc
and
xor
and
out
je
or
mov
add
mov
in
cmp
pop
xchg
lock
push
cli
popf
and
into
push
out
add
sar
dec
mov
in
pop
fldt
clc
outsl
push
enter
push
aas
ds
xlat
sub
cmp
lods
imul
add
loop
lcall
jns
testl
push
adc
adc
mov
mov
jl
or
and
es
lea
pop
push
add
cmp
mov
xor
std
jmp
js
icebp
push
or
negl
dec
jle
sub
add
mov
jg
sbb
in
dec
test
dec
in
jg
loopne
arpl
mov
mov
mov
popf
out
add
clc
ss
add
jecxz
popa
scas
add
movsl
fisubrl
fiaddl
fisubs
add
add
lea
ds
dec
mov
add
or
es
add
mov
hlt
rolb
add
aas
jb
sub
jg
cmp
imul
dec
divb
fcomps
into
add
lahf
xchg
mov
and
jmp
or
mov
add
mov
pop
jae
add
jecxz
or
cmpsl
sbb
fucomip
cltd
xor
or
adc
push
lods
test
add
lock
cltd
outsb
daa
add
xchg
xchg
mov
jg
clc
insb
xchg
pop
notb
imul
mov
test
xchg
sub
add
iret
shll
push
in
stos
xor
sub
adc
mov
sbb
xchg
pop
gs
arpl
add
add
xchg
addb
jb
cmpsb
gs
push
lahf
inc
add
xchg
mov
mov
adc
out
aaa
sahf
mov
int3
jl
jo
andl
sub
add
inc
ljmp
push
and
xchg
or
mov
jecxz
or
loopne
loope
pop
out
outsb
xchg
add
add
inc
add
jg
add
dec
out
call
pushf
mov
add
fcmovnu
mov
setg
das
dec
leave
test
stc
cmp
fildll
pop
and
jns
icebp
dec
mov
les
push
cmc
divl
dec
xor
icebp
das
sub
scas
lcall
std
stc
adc
pop
ret
daa
xor
movsl
js
cmp
sbb
insb
loop
cld
pop
dec
outsb
pop
mov
dec
sbb
add
mov
enter
mov
subl
adc
sub
and
cmp
inc
mov
add
push
repz
xor
testb
ja
ja
hlt
sahf
out
ja
pop
and
lea
add
mov
xchg
sbb
add
insb
adc
adc
jbe
repnz
add
jno
add
cli
in
insl
lea
fld
sbb
pop
and
mov
xchg
fnstenv
scas
push
mov
int
sub
dec
mov
cmpsl
pop
addb
jl
cmp
das
ss
or
out
ss
add
popa
pop
xchg
add
mov
nop
mov
xchg
sub
xchg
movb
insb
mov
addb
inc
add
pop
shl
movb
rolb
and
rolb
loopne,pt
test
in
xchg
addr16
fwait
imul
pushf
hlt
sarl
ss
adc
idivl
xchg
enter
mov
daa
dec
inc
or
xchg
ss
scas
loopne
addr16
repnz
int3
mov
inc
js
sti
pop
aad
cmp
cmc
xor
data16
enter
add
dec
test
repz
rcrl
fdivrl
pop
addr16
sub
pop
mov
popf
jl
jns
cli
pop
notl
out
lods
in
push
inc
add
add
xchg
push
mov
cmp
add
push
xor
repz
leave
mov
inc
add
sbb
aad
xchg
sub
std
push
lds
xchg
cmp
jmp
add
xlat
lret
pop
and
mov
movb
add
ja
sbb
add
mov
daa
in
xor
in
cmpsl
mov
hlt
adc
fdivrs
mov
add
cmp
sbb
pop
sbb
push
xor
out
sbb
add
jp
test
rcr
inc
add
mov
sbb
or
pop
pop
jecxz
add
add
loop
add
scas
aam
or
loope
clc
cmp
add
imul
das
sub
stos
arpl
nop
mov
add
xchg
jns
cmp
les
in
into
sub
bound
mov
scas
out
pop
pop
sub
outsl
test
add
cmc
and
iret
insb
fsubp
daa
pop
test
mov
or
inc
add
lret
enter
fdivs
les
fxch
mov
rol
cmp
sub
push
cmp
fnsave
aas
dec
js
loope
dec
aas
das
lahf
push
jb
and
sti
jg
pushf
icebp
push
xor
adc
pop
mov
push
lock
sbb
xchg
addb
jp
cs
stc
dec
sti
shrl
cltd
push
inc
mov
cmc
mov
xchg
in
decl
xchg
scas
pop
xor
aad
aam
daa
inc
add
jne
sbb
push
inc
in
fcomi
jae
add
lods
jg
and
outsl
fs
test
movb
xor
leave
xor
jnp
mov
scas
push
idivb
cmp
and
fcmovnbe
xlat
push
push
inc
add
add
xor
lahf
sub
dec
sub
sub
sub
add
add
sar
xor
out
or
inc
xchg
ljmp
fadd
cmp
xchg
pop
fcoml
mov
add
pop
ja
adc
aaa
test
call
xor
imul
mov
imul
mov
mov
mov
and
add
push
dec
in
mov
cmp
xchg
movsb
rol
lds
sbb
rolb
popf
leave
or
test
in
bound
xchg
mov
adc
dec
inc
das
mov
stos
sarl
repnz
add
aam
ja
fistps
outsl
mov
into
and
sbb
outsb
aad
mov
mov
fstpl
jno
and
sbb
jmp
das
lcall
push
sbb
jb
mov
push
cmp
mov
lea
jns
lcall
in
jae
imul
addr16
popa
sub
mov
dec
mov
add
rcll
cmp
inc
jno
sbb
mov
fstpt
adc
push
mov
add
adc
cmp
pop
add
in
push
add
push
addb
repz
inc
add
jno
ret
add
xchg
mov
sbb
add
cmc
jg
push
inc
add
mov
mov
mov
add
lcall
idivl
mov
loope
inc
adc
add
add
fistps
clc
daa
stos
je
pop
stos
in
fcmovu
cmpsl
pop
hlt
adc
push
popa
jnp
or
fisttpl
cli
lods
lds
fistl
mov
jne
shll
mov
aaa
or
pusha
add
push
addb
jp
push
sbb
jl
stc
cwtl
add
add
adc
or
xor
sub
rcrb
jg
add
and
cmpsb
mov
cmpl
lods
inc
add
pop
lods
sbb
adc
mov
sbb
movb
add
dec
adc
xchg
loopne
add
inc
cmp
lods
pop
rorl
xchg
jl
fdivrs
lock
out
mov
inc
add
mov
jge
fcomp
dec
addb
and
pop
jb
xchg
popa
outsl
sub
mov
xlat
int3
xor
xor
xor
dec
cmp
or
xchg
jecxz
fsubrl
lret
adc
add
add
jge
insb
or
sub
repz
add
jle
sahf
lcall
scas
sbb
add
add
push
cmc
dec
xor
pushf
inc
add
jg
add
mov
pop
sti
insb
jmp
xchg
add
insl
dec
imul
add
or
clc
xchg
dec
iret
cld
cmpsl
and
mov
adc
scas
mov
test
es
add
add
add
add
push
push
mov
jmp
movsl
test
sub
cmp
nop
cwtl
dec
jmp
aas
add
cld
shlb
jne
scas
push
pop
sbb
test
aam
mov
std
xor
ds
pushl
mov
mov
je
mov
leave
push
out
add
sub
adc
xor
cmp
rolb
ja
pop
mov
push
aad
imul
or
gs
dec
in
add
add
fcomi
pop
jle
das
ss
js
jae
fcoms
add
or
jne
fs
mulps
andl
xchg
rolb
jp
jecxz
and
push
add
push
das
dec
das
mov
sbb
or
int3
push
dec
mov
out
sub
add
lds
outsl
adcl
aas
cli
or
add
push
movb
hlt
fwait
popf
cli
mov
cwtl
fadds
pop
xlat
dec
stc
rolb
xor
xor
addb
mov
fldcw
xor
xor
add
test
mov
xchg
test
sbb
dec
loopne
cmp
mov
cld
push
add
fdivrp
cltd
int3
cmpsl
mov
dec
mov
scas
cmc
popl
imul
add
stos
mov
sbb
je
add
pop
sbb
inc
add
add
sarb
sbb
cli
in
ljmp
test
mov
sub
cli
and
ja
mov
orl
mov
orl
sbb
cmp
ficompl
mov
cmp
std
mov
or
out
xor
loopne
fnstsw
aaa
mov
or
add
xor
pop
xor
cmp
and
bound
dec
push
add
mov
fmull
inc
add
movb
or
cmp
xchg
xor
add
add
jbe
push
sar
loope
xchg
or
jnp
fbld
add
jno
bound
pop
jmp
lock
fucomi
shl
jno
out
rolb
loop
xchg
mov
mov
push
add
xchg
shll
ss
or
mov
and
imul
cli
pop
rolb
sub
sti
xchg
sub
movb
inc
int
and
add
inc
add
insl
sub
pop
imul
mul
mov
aaa
repnz
sbb
sub
cmpsb
sub
ret
sbb
stos
out
in
and
out
jecxz
daa
pop
mov
or
add
mov
and
sub
fisubs
add
sbb
enter
mov
testl
testb
add
and
jo
addr16
add
xchg
add
add
xchg
or
dec
xchg
jg
mov
addb
or
add
mov
add
xchg
shll
repz
jecxz
push
pop
lahf
mov
pop
aad
stos
mov
insb
filds
or
xor
add
sti
rep
fs
xchg
test
sub
lcall
fsubrs
scas
xor
and
pushl
add
jne
dec
sub
ret
xor
jge
neg
es
add
dec
cs
inc
cmp
lea
stos
mov
pop
adc
inc
add
clc
xor
scas
cmc
xor
rclb
sbb
btr
es
loope
pop
inc
sahf
fs
std
or
add
pushf
add
or
push
sbb
outsb
cmp
jns
addb
mov
aas
lret
jae
ds
int3
loope
lahf
jno
push
fsubr
mov
add
stos
mov
icebp
or
push
fwait
adc
outsb
jbe
sub
or
jmp
cmp
mov
mov
mov
or
rolb
std
addr16
push
decl
cltd
jbe
xor
daa
sbb
inc
add
imul
in
daa
dec
sub
or
pop
jo
push
cmp
mov
xor
xor
pop
xor
xchg
lods
jne
push
jbe
mov
or
dec
xchg
insl
leave
jno
mov
stos
mov
addb
push
std
pop
cmpsl
negl
aam
lock
cmp
lahf
sbb
scas
push
outsb
sub
imul
cmp
xlat
xchg
icebp
sbb
mov
out
xchg
mov
fwait
es
jnp
cmp
