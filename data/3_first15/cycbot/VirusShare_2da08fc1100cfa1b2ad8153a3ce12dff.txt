out
or
popa
pop
ja
out
pop
ja
loope
ja
mov
ja
popl
ja
mov
ja
daa
push
ja
and
ja
inc
or
and
ja
mov
or
mov
or
lcall
add
add
sbb
jb
jle
inc
mov
jge
xor
jne
xchg
out
jbe
push
jne
mov
jg
je
jle
dec
out
jne
mov
sarl
mov
jge
or
jl
or
jl
mov
sarb
mov
jge
add
jl
sub
xorl
fdivrl
add
jl
or
xor
outsb
call
jge
fnstsw
test
movsb
out
jbe
mov
jl
sbbb
shlb
jne
mov
out
mov
sbb
jecxz
jge
pop
cld
jl
popa
lcall
sub
jge
cli
mov
jge
fstl
lock
in
jne
mov
sbb
fs
jne
mov
pop
mov
jge
lahf
lret
push
mov
jne
aad
jne
sbb
add
aas
pop
mov
jnp
mov
lret
jbe
les
jbe
inc
mov
test
mov
dec
dec
scas
jbe
pop
lods
jbe
or
mov
cld
push
mov
jb
mov
xchg
jbe
jmp
scas
jbe
clc
lods
jbe
pop
mov
inc
aas
scas
jbe
out
jbe
and
jbe
mov
jbe
sub
jbe
leave
mov
aam
mov
or
call
lods
jbe
jecxz
jbe
pop
mov
repnz
jbe
adc
jbe
in
jbe
xor
jbe
mov
mov
jo
jbe
fnstcw
jbe
out
lods
jbe
or
jbe
lods
mov
add
add
jo
movsb
jbe
inc
mov
jbe
sahf
mov
jbe
lods
mov
jbe
inc
mov
jbe
out
mov
jbe
lret
iret
popa
cmpsl
jbe
sbb
jbe
loope
jbe
pop
mov
jbe
stos
mov
jbe
repz
jbe
push
mov
jbe
shll
jbe
add
jbe
mov
jbe
cwtl
mov
jbe
cli
mov
jbe
bt
mulb
jbe
aaa
mov
jbe
shlb
inc
mov
jbe
shlb
mov
mov
jbe
xor
test
mov
jbe
cli
movsb
jbe
outsb
test
popf
movsb
jbe
mull
add
ljmp
xchg
dec
jne
dec
dec
jne
pop
dec
jne
inc
dec
jne
jecxz
jne
ljmp
push
loop
jne
ds
jne
aas
dec
jne
dec
jne
push
dec
jne
loope
jne
loop
jne
inc
dec
jne
dec
dec
jne
inc
dec
jne
ds
jne
std
dec
jne
add
add
xchg
movsl
jne
sahf
mov
jne
add
mov
jne
mov
jne
lret
push
test
mov
jne
add
lretw
idiv
mov
jne
fwait
les
cmpsb
test
int3
sbb
add
push
out
jbe
dec
icebp
jbe
inc
icebp
jbe
bnd
sti
bnd
jle
jbe
xor
je
lock
pop
icebp
jbe
inc
icebp
jbe
xor
jbe
push
repz
addr16
jbe
loopne
jbe
fucomp
jbe
pop
icebp
jbe
xchg
out
jbe
push
icebp
jbe
sub
jbe
dec
lock
cmp
jbe
mov
icebp
jbe
xor
repz
pop
icebp
jbe
stc
in
jbe
dec
icebp
jbe
dec
icebp
jbe
adc
jbe
xchg
bnd
sub
jbe
push
icebp
jbe
gs
jbe
pop
icebp
jbe
loopne
jbe
mov
jbe
push
icebp
jbe
icebp
bnd
loopne
jbe
push
jbe
dec
icebp
jbe
dec
icebp
jbe
dec
icebp
jbe
push
icebp
jbe
stc
bnd
dec
lock
push
icebp
jbe
pop
icebp
jbe
lock
jbe
xchg
out
jbe
push
jbe
push
icebp
jbe
push
icebp
jbe
pop
bnd
push
icebp
jbe
push
icebp
jbe
int3
cli
jbe
xor
jbe
xchg
stc
jbe
dec
icebp
jbe
in
jbe
adc
jbe
movsb
bnd
xlat
bnd
pop
icebp
jbe
xchg
bnd
push
in
jbe
push
in
jbe
pop
icebp
jbe
push
icebp
jbe
push
icebp
jbe
aad
jbe
pop
icebp
jbe
out
jbe
push
icebp
jbe
test
jbe
push
icebp
jbe
add
add
push
jne
nop
push
jne
insl
push
jne
outsl
push
jne
jl
jne
scas
push
jne
mov
jne
lcall
inc
cld
push
jne
clc
push
jne
pop
push
jne
hlt
push
jne
push
push
jne
insl
push
jne
jg
jne
lea
js
push
jne
mov
jne
push
jne
jge
jne
adc
push
jne
push
jne
mov
adc
leave
push
jne
ja
jne
add
jne
push
jne
inc
push
jne
icebp
push
jne
mov
push
jne
push
push
jne
or
and
push
jne
add
add
push
je
sbb
fstps
push
je
sbb
je
sbb
in
sbb
je
add
add
ss
out
jne
lds
jne
dec
ss
add
jne
jecxz
jne
xchg
cmp
scas
ss
and
jne
cmp
pop
ss
cmpsl
ss
shll
pop
lret
xor
jne
shll
jne
stc
ss
jne
fs
shlb
jne
xor
ss
jmp
xor
jne
sbb
jne
push
ss
dec
ss
fidivl
jne
and
jne
cmpsl
ss
addr16
xchg
ss
adc
jne
xchg
ss
push
ss
int
jne
scas
ss
xchg
jne
add
jne
and
jne
dec
ss
xlat
xor
jne
add
add
lahf
sub
outsb
jne,pn
loopne
jne
lahf
sub
jns
jne
pop
sub
imul
insb
xchg
sub
add
add
arpl
xor
push
jbe
test
jbe
fs
jbe
mov
data16
and
or
data16
shll
push
data16
dec
outsb
jbe
and
push
arpl
and
es
andl
insl
gs
shll
cmp
addr16
shll
arpl
popf
arpl
imul
jbe
adc
mov
addr16
fs
jbe
cmp
jbe
sbb
add
addr16
andb
pop
imul
jge
jbe
adc
push
jecxz
jbe
in
data16
aam
jbe
andl
arpl
addr16
push
outsb
jbe
jnp
jbe
add
add
jne
shll
inc
arpl
xchg
arpl
repnz
sub
adc
arpl
cmp
mul
bound
xor
repnz
xchg
arpl
adc
arpl
xor
arpl
in
fs
sub
sub
add
arpl
repz
or
bound
aad
jne
lods
fs
arpl
lret
push
cmc
arpl
sub
inc
pop
arpl
xor
arpl
xlat
bound
shll
pop
icebp
arpl
stc
bnd
int
jne
xor
arpl
imul
out
fisubs
cmp
fs
and
xlat
sub
inc
sbb
sub
mov
fs
es
xor
mov
out
arpl
arpl
or
bound
iret
sub
out
arpl
sbb
push
arpl
repnz
repnz
in
arpl
adc
repnz
fisubl
adc
arpl
jne
jne
sbb
push
fs
xor
jne
icebp
arpl
popa
bnd
sbb
sbb
add
add
jae
fiadds
jbe
or
add
jo
jnp
jo
imul
jno
ds
jbe
in
jbe
int
jbe
jp
jbe
test
jbe
shll
jo
jbe
test
mov
jno
leave
jnp
jbe
iret
je
mov
sbb
jbe
cmp
cltd
cli
jno
xor
jbe
adc
jbe
inc
jno
pop
push
jae
fldcw
jno
scas
shll
stos
jo
aas
pusha
jno
lret
jbe
push
jno
sbb
jo
push
ja
jbe
jo
pop
push
jno
cltd
enter
fnstenv
jecxz
jno
xorb
arpl
jbe
dec
jae
push
push
jno
dec
xchg
jb
out
aad
jbe
imul
xorb
jnp
jbe
pop
jno
or
jno
mov
jno
jno
jne
xor
jbe
or
iret
jo
ljmp
jbe
or
sub
jo
push
push
jae
das
int
jbe
fnstenv
adc
jno
mov
jo
push
mov
sub
sub
push
call
call
call
mov
push
call
lea
push
push
call
lea
push
call
call
xor
push
call
lea
push
xor
push
mov
push
call
call
call
push
call
call
call
push
call
call
mov
push
call
lea
push
call
push
call
push
call
call
call
lea
push
call
call
call
call
call
push
call
lea
push
push
call
call
push
call
call
lea
push
push
call
call
mov
push
call
call
call
call
lea
push
call
call
call
call
push
call
lea
push
call
lea
push
push
call
call
mov
push
call
push
call
call
lea
push
sub
push
call
lea
push
sub
push
mov
push
call
lea
push
call
lea
push
xor
push
call
call
mov
push
lea
push
call
lea
push
sub
push
call
call
push
call
lea
push
sub
push
call
call
lea
push
call
lea
push
call
sub
push
call
call
call
call
call
call
lea
push
push
call
lea
push
call
leave
ret
nop
nop
nop
push
mov
sub
lea
push
xor
push
push
call
lea
push
sub
push
call
lea
push
call
lea
push
call
lea
push
sub
push
call
call
xor
push
call
call
lea
push
push
call
lea
push
call
mov
push
push
call
lea
push
xor
push
mov
push
call
call
call
lea
push
push
push
call
call
call
lea
push
call
lea
push
push
call
call
mov
push
call
call
call
lea
push
push
call
call
call
call
lea
push
push
call
mov
push
mov
push
call
lea
push
mov
push
call
call
lea
push
push
call
call
mov
push
lea
push
call
lea
push
call
call
lea
push
push
call
call
push
call
call
lea
push
push
call
lea
push
call
lea
push
push
mov
push
call
xor
push
call
call
lea
push
call
xor
push
call
lea
push
push
call
push
call
call
call
call
call
lea
push
xor
push
call
call
call
lea
push
call
lea
push
call
call
push
call
push
call
lea
push
call
push
call
lea
push
call
lea
push
push
push
call
sub
push
call
call
mov
push
call
lea
push
xor
push
call
call
call
mov
push
mov
push
call
call
push
push
call
call
push
call
call
call
lea
push
sub
push
call
call
lea
push
call
call
call
lea
push
sub
push
call
call
push
call
lea
push
call
call
call
lea
push
sub
push
call
call
leave
ret
nop
nop
nop
nop
push
mov
sub
call
mov
push
call
lea
push
push
call
mov
push
call
lea
push
call
call
push
call
call
lea
push
call
push
sub
push
call
call
push
call
lea
push
call
call
push
call
push
lea
push
call
call
call
call
call
call
lea
push
call
call
lea
push
sub
push
call
call
mov
push
call
lea
push
call
call
lea
push
sub
push
call
push
call
mov
push
lea
push
call
call
lea
push
xor
push
call
call
lea
push
call
mov
push
mov
push
call
call
push
call
mov
push
lea
push
call
call
lea
push
xor
push
push
call
lea
push
push
call
push
call
lea
push
sub
push
call
push
call
push
call
push
call
lea
push
xor
push
mov
push
call
push
call
lea
push
mov
push
call
call
call
call
lea
push
sub
push
call
push
call
call
push
call
lea
push
sub
push
call
call
call
call
lea
push
sub
push
call
push
call
lea
push
push
call
call
lea
push
call
push
call
push
lea
push
call
push
push
call
call
call
call
call
lea
push
push
call
call
lea
push
call
push
call
lea
push
call
call
lea
push
push
call
lea
push
push
call
call
push
call
lea
push
push
call
lea
push
call
call
push
call
push
call
call
call
call
call
lea
push
call
lea
push
xor
push
call
call
lea
push
sub
push
call
push
call
lea
push
call
call
leave
ret
nop
push
mov
sub
lea
push
push
call
push
call
lea
push
call
call
mov
push
call
lea
push
push
call
push
call
mov
push
lea
push
call
mov
push
call
mov
push
lea
push
call
push
sub
push
call
xor
push
call
call
call
push
lea
push
call
call
call
lea
push
call
lea
push
call
sub
push
call
push
call
lea
push
sub
push
call
push
call
push
call
call
call
lea
push
call
call
xor
push
call
call
push
call
mov
push
lea
push
call
call
call
push
call
call
lea
push
call
lea
push
call
xor
push
call
call
call
push
call
lea
push
push
call
lea
push
call
call
lea
push
push
push
call
call
call
mov
push
lea
push
call
call
lea
push
call
lea
push
call
lea
push
call
call
lea
push
call
call
push
call
sub
push
call
call
lea
push
call
lea
push
call
push
call
call
push
call
lea
push
xor
push
call
lea
push
sub
push
call
call
lea
push
sub
push
push
call
call
call
call
lea
push
call
call
lea
push
push
mov
push
call
push
call
lea
push
call
lea
push
call
push
push
call
lea
push
call
push
call
call
lea
push
sub
push
call
call
push
call
lea
push
call
call
call
call
call
sub
push
call
push
call
leave
ret
nop
nop
push
mov
sub
push
xor
push
call
mov
push
call
push
push
push
call
cmpl
jne
cmpl
jne
pusha
push
push
push
push
call
mov
push
push
push
call
cmpl
jne
cmpl
jne
mov
mov
movl
mov
add
add
add
mov
add
add
cmp
jne
call
push
call
lea
push
sub
push
mov
push
call
lea
push
push
call
push
call
lea
push
call
xor
push
call
call
call
leave
ret
nop
nop
nop
nop
push
movl
ret
adc
push
jge
mov
daa
nop
loope
jl
sub
jns
push
stos
insb
out
xor
shlb
into
sbb
and
inc
test
sbb
test
cmp
pop
mov
xor
bound
fisubrs
cmpsl
and
pop
out
cli
sbb
out
xchg
push
mov
stos
data16
mov
insb
push
or
jge
jmp
mov
push
mov
xchg
mov
subl
pop
leave
sub
mov
repz
mov
sbb
dec
les
mov
clc
xchg
inc
pop
mov
xchg
cmpb
push
sbb
aad
push
fstl
xlat
je
lcall
out
int
jg
roll
pop
in
sti
insl
imul
hlt
out
pop
mov
xchg
lods
jl
xor
xor
sahf
fstps
out
aad
inc
mov
cmp
inc
cwtl
in
push
in
fistpll
sub
movsl
lcall
cmp
inc
xor
popf
xchg
jb
sub
jg
loop
add
or
jge
add
movsl
stc
push
dec
sub
stos
repz
cmp
int3
xlat
adc
repz
jle
les
and
lcall
jnp
jne
or
cmc
lds
rcrl
movsl
shr
sbb
mov
shll
jmp
negl
and
out
pop
push
sub
fistl
test
aam
dec
sub
push
ljmp
fs
or
add
pop
mov
jg
gs
or
addl
and
mov
ljmp
cli
lea
dec
xchg
pop
push
ret
xor
mov
movsl
cmpsl
cmp
mov
out
push
mov
pop
sti
imul
jp
fimull
rorb
lea
add
pop
jo
icebp
sbb
jne
and
sub
repz
movsb
movsb
sbb
aam
sub
addr16
dec
movsb
mov
popf
xchg
jecxz
clc
mov
addb
adc
int3
cmp
dec
or
push
insb
adc
mov
lods
mov
sub
pop
pop
add
push
ret
mov
add
mov
shlb
fstpt
pop
aaa
push
jge
xor
imul
ret
cmp
ret
xchg
addr16
xorb
or
outsl
and
xchg
mov
daa
pop
fs
in
add
sub
dec
rorb
sbbl
std
mov
mov
lods
cmc
mov
mov
ret
xchg
xchg
mov
sbb
inc
shll
push
out
mov
push
pop
loop
add
pop
mov
jmp
inc
xor
sti
addr16
cltd
lds
lret
dec
mov
stos
xor
mov
mov
cli
xchg
cwtl
fucom
cmpsl
push
or
sahf
cmp
ss
adc
pop
out
jmp
pusha
add
ss
sub
decl
mov
js
insb
stc
lcall
std
lret
pop
xor
lods
je
lds
sbb
and
loopne
js
lds
jle
mov
sbb
loop
out
das
or
dec
addr16
ja
dec
inc
or
stc
sbb
mov
movsl
push
pop
jnp
adc
sub
in
and
add
pop
ficompl
inc
in
fcmovbe
int
lret
popa
sbb
or
frstor
mov
daa
sub
mov
jbe
cmpsl
sub
daa
mov
rcl
pop
aad
mov
jecxz
cli
rcrl
xchg
sbb
sub
out
pushf
adc
leave
fdiv
scas
jbe
rcr
xor
jno
insb
mov
inc
fdivp
adc
mov
jg
adc
and
mov
movsbl
xchg
push
sbb
xor
sbb
jne
push
enter
or
sbbb
js,pn
xor
imul
fisttpll
outsl
inc
cmpsb
mov
adc
jo
jno
ds
mov
cmpsb
fwait
out
in
push
inc
les
pusha
je
cltd
out
sub
call
cli
outsl
pop
cmp
jns
out
cmpsb
push
pop
pushf
nop
sbb
pop
xor
es
cmp
cmpsl
adc
jo
jecxz
xchg
jno
pop
popw
das
sub
scas
ljmp
pop
sbb
sub
cmpsb
jp
jns
insb
je
xlat
xchg
push
sbb
sub
negl
xor
nop
sbb
mov
inc
pop
imul
rcrb
orb
or
rep
nop
pop
xlat
xor
or
cmc
jo
pop
test
cmc
pop
cltd
stos
cwtl
jae
jmp
outsb
mov
mov
divl
in
push
mov
mov
adc
jb
rorl
into
mov
pusha
test
sbbb
or
xchg
pop
jp
sbb
adc
or
mov
sar
xor
insb
gs
lock
mov
outsl
and
mov
int3
pop
enter
sbb
sub
lea
outsb
test
xchg
fs
mov
push
push
pop
or
mov
enter
bound
dec
jbe
ret
cmpsb
push
mov
mov
mov
jbe
cmp
cmp
in
and
mov
outsb
inc
sbb
js
sub
xchg
jecxz
mov
sub
mov
inc
pop
cs
rol
jmp
sub
dec
mov
arpl
test
or
mov
sub
adc
test
fdivrs
lret
mov
sub
icebp
mov
lods
jnp
pop
cld
mov
lock
push
hlt
std
enter
or
aaa
stos
repnz
std
inc
movsb
mov
call
inc
pop
shll
xchg
leave
in
xor
in
scas
push
mov
shll
jecxz
pop
and
xor
lods
mov
jmp
pop
xchg
xchg
outsb
ljmp
push
ret
jp
inc
sbb
sub
and
xchg
scas
lds
fldlg2
sarb
jge
in
xchg
outsb
scas
loope
lds
test
out
rcrb
std
test
mov
loopne
xchg
movsl
out
inc
popa
cli
negl
repnz
jmp
fiadds
mov
fsubp
jbe
aam
jle
adcb
pusha
mov
pop
data16
out
sbb
pop
lea
cmp
mov
or
sahf
stos
jge
out
fidivrs
jbe
dec
sti
loopne
rcr
loop
sub
test
popa
jl
xlat
cmc
aad
cli
pop
notl
movsb
popa
sbb
sbbb
cwtl
mov
push
loop
les
imul
and
xchg
mov
rcrl
and
and
scas
pop
dec
data16
jp
push
cmc
fmull
pusha
push
dec
lods
pop
jge
sbb
jp
or
jb
or
add
adc
or
sti
ficoms
jge
mov
mov
aam
xchg
sub
jns
push
mov
xor
sub
cld
mov
in
ret
enter
mov
sub
xlat
cmpsl
sub
aad
xchg
imul
sbb
ja
cltd
inc
xchg
pop
stc
push
add
jmp
mov
and
pop
adc
xor
in
add
pusha
gs
adc
mov
push
ret
mov
aam
xlat
cbtw
data16
xchg
orl
inc
imul
icebp
cmc
fwait
xchg
mov
out
pop
test
adc
inc
dec
inc
mov
inc
leave
xchg
xor
movsl
icebp
xchg
mov
dec
adc
cs
mov
es
push
or
imul
pop
in
xchg
adc
notl
push
mov
lds
sti
daa
test
in
imul
mov
push
je
inc
fwait
mov
sbb
push
cmpsl
inc
pmullw
adc
jae
add
add
or
push
pop
or
addr16
push
push
popf
lea
std
adc
push
or
arpl
fcoms
cli
stos
mov
cmp
mov
loope
imul
mov
fstl
mov
add
movsl
dec
dec
or
pop
cmp
cmp
or
cld
and
std
lods
scas
mov
into
push
out
jl
push
cli
jnp
rcll
push
adc
sahf
pop
inc
js
sar
xchg
clc
pop
xor
sbb
inc
mov
out
std
repz
out
inc
adc
ja
out
xchg
imul
fs
shrl
cmp
mov
or
mov
stos
push
nop
cli
test
stos
cmp
xor
adc
movsl
adcl
popa
iret
jmp
cmp
sub
lret
push
sbb
push
lock
ljmp
repz
popf
adc
data16
push
les
push
out
jg
xchg
iret
mov
xchg
ret
ret
scas
mov
mov
ljmp
xor
adcb
ljmp
aaa
sti
mov
in
cmp
int
or
mov
in
pop
mov
cmp
add
es
cmc
or
lea
lea
dec
hlt
inc
scas
and
scas
aas
idivl
in
dec
stos
pop
aaa
sub
repnz
es
xchg
ror
dec
mov
es
mov
test
dec
pop
jmp
in
or
xchg
sbb
inc
sbb
testl
sahf
mov
and
mov
loop
push
push
inc
xor
ss
pop
jne
xor
inc
sub
dec
adc
sub
jp
pop
xchg
jbe
pop
or
adc
jne
cmp
neg
sub
xchg
scas
mov
sbb
add
and
mov
lds
out
sbb
dec
cmp
push
aas
stos
inc
xchg
jge
rorb
inc
jnp
ljmp
js
outsl
xor
scas
mov
loopne
cmp
nop
sub
push
mov
push
lahf
dec
stos
in
pop
lock
js
xchg
mov
mov
or
push
out
lahf
movsb
test
fcom
loopne
icebp
push
sti
mov
mov
lods
push
out
push
push
shll
jno
fdivrs
mov
mov
push
mov
sbb
and
jno
and
shlb
icebp
add
fs
out
addl
jge
push
mov
jbe
pop
push
jb
pusha
cmovs
sbb
sbb
out
icebp
addr16
movsb
jmp
outsl
outsl
lcall
sub
push
cltd
cmp
mov
imul
mov
in
dec
push
mov
xorb
imul
dec
push
jae
or
pop
push
jle
imul
jmp
mov
inc
mov
outsl
jle
mov
shll
push
or
add
popl
sbb
leave
dec
aam
daa
rclb
frstor
xchg
lods
imul
movsl
sbb
dec
shll
jge
cmc
shll
es
out
push
aam
lods
aaa
aaa
bound
pop
jnp
cmpsl
dec
or
sbb
mov
adc
pusha
fildll
fisubrs
xor
pop
test
inc
sbb
out
sub
jmp
dec
ficoms
sbb
pop
cmp
test
sti
inc
aaa
loope
lds
inc
mov
das
jp
or
mov
loopne
xor
mov
icebp
mov
or
rclb
adc
sbb
or
push
arpl
adc
dec
sbb
mov
les
je
add
pop
dec
jecxz
scas
test
popa
push
jns
mov
imul
dec
enter
adc
cmp
push
xor
mov
cmpl
inc
mov
push
cmp
aas
cld
xor
add
add
stos
sub
cmp
adc
xlat
sti
sahf
and
xor
push
inc
icebp
push
int
pusha
fisttpl
dec
jo
inc
in
es
outsb
test
push
lds
pop
aas
xchg
mov
adc
xchg
xor
push
jp
loope
push
lea
pop
daa
hlt
stos
aas
sbb
sarl
mov
push
xor
dec
in
jmp
pop
loope
stos
enter
mov
ret
fadd
sbb
gs
arpl
rcrb
inc
xchg
sarl
lret
mov
xlat
mov
pop
shll
subb
lods
sahf
shlb
pop
call
mov
mov
pop
mov
scas
je
or
mov
or
mov
cwtl
bound
dec
std
sub
js
les
movsl
test
fsubl
ss
inc
test
shrb
stos
test
shll
cmp
push
scas
out
inc
dec
mov
das
cmp
addr16
inc
sti
jo
fldenv
sub
mov
stos
clc
ss
int3
rcrl
cmp
icebp
xchg
je
fists
faddl
sbb
and
mov
clc
sub
test
out
jl
cld
scas
je
adc
popa
xchg
loopne
ret
cmpsl
xor
mov
sub
xlat
loop
mov
mov
jae
and
adc
aaa
lahf
call
inc
mov
xor
pusha
add
sub
loope
jo
cltd
dec
jmp
loop
insl
lods
lods
add
mov
mov
je
dec
out
mov
mov
lea
sub
pop
sub
enter
nop
mov
outsl
mov
xchg
scas
mov
pop
ret
in
fcmovbe
xchg
lret
in
iret
sbb
sbb
arpl
ss
cmp
in
sub
xchg
sbb
int
cmp
lret
and
sbb
push
das
adc
adc
mull
pop
or
ror
daa
xchg
les
lcall
jae
xor
dec
cmp
inc
fcmovne
outsb
lock
fs
lar
jmp
inc
xor
mov
mov
xor
insb
and
jmp
test
lcall
lods
addl
in
push
adc
ret
ds
sbb
push
pop
push
movsl
in
sub
jae
into
nop
orl
mov
inc
mov
pop
decb
lds
adc
xor
rolb
scas
shrl
scas
arpl
out
stc
xchg
push
or
aad
push
xchg
dec
aas
xor
data16
mov
lcall
sbb
mov
xchg
imul
jle
inc
jnp
out
clc
and
adc
and
add
out
test
icebp
outsb
mov
cs
jae
cmp
dec
or
stos
out
rcll
pushf
dec
inc
mov
dec
fcoml
inc
inc
arpl
pop
ljmp
jp
adc
cmpsl
outsb
add
lahf
lcall
out
add
xor
repnz
xchg
fs
ret
rcrl
pop
gs
and
test
sbbl
or
add
in
inc
jle
les
xchg
mov
cmc
xchg
dec
stos
int
stos
je
cmp
std
repz
dec
mov
stc
add
fsubs
jecxz
add
jne
xchg
stos
cwtl
cmc
sub
lds
int
xchg
clc
shrb
rclb
xor
out
repnz
lret
fldl
clc
cmc
out
cli
ljmp
add
cmp
or
cmc
fsubs
aad
and
rolb
jmp
out
cmpl
ljmp
mov
insl
pop
les
bound
repz
sbb
fs
adc
mov
pop
sti
mov
lea
out
test
int
nop
divl
cmp
daa
scas
out
jns
and
mov
push
xlat
add
bound
cmc
fisttpl
dec
add
rolb
test
mov
ss
sbb
das
das
cmpsl
sub
jb
dec
out
mov
mov
rcrl
push
xchg
or
jo
test
popa
mov
jge
aad
in
es
lock
fisttps
hlt
cli
inc
or
mov
sub
pop
push
cmp
pop
push
imul
test
andb
sbb
inc
xor
xor
std
insl
daa
cmp
or
cltd
pop
mov
sub
dec
aad
xchg
hlt
dec
jp
dec
push
hlt
sub
jne
std
in
mov
leave
imul
js
loope
stc
dec
mov
xchg
das
or
push
das
mov
mov
in
int3
dec
outsl
mov
ss
call
inc
ss
inc
sbb
incb
dec
test
adc
sub
jle
jp
ficompl
jmp
push
lds
or
mov
jb
data16
insb
cli
xor
into
stc
outsb
sub
sbb
das
shll
fisttpll
mov
sub
push
test
mov
int
es
push
test
aam
call
push
shlb
ja
inc
jbe
es
movsb
pop
sub
test
aas
sbb
dec
in
mov
xchg
add
or
mov
in
jp
inc
dec
addr16
addr16
shr
or
repnz
fldl
cmp
lds
orb
test
cmp
sub
push
loop
inc
shlb
icebp
jne
or
dec
jmp
leave
cmpsl
mov
push
fsub
mov
mov
sub
lea
dec
outsl
sub
xor
dec
sti
icebp
sbb
jmp
nop
in
push
cmp
in
insb
mov
iret
adc
rcl
clc
push
adc
jno
rolb
mov
jle
cli
nop
leave
pop
cwtl
push
mov
mov
push
stc
push
sub
or
mov
popf
dec
outsl
push
jbe
mov
mov
mov
enter
lahf
dec
dec
cmp
xchg
out
sbb
xchg
jecxz
dec
mov
or
sbb
cwtl
push
xorl
das
pop
cmp
inc
mov
fprem1
ss
push
js
sub
adcb
cmp
and
sub
and
ret
xor
mov
stos
mov
xor
mov
insb
aam
push
mov
das
xor
mov
cmp
push
push
mov
mov
fistpl
sub
testb
mov
out
mov
call
lods
jmp
jle
bound
xor
fldenv
mov
ret
movsl
out
test
incb
repnz
xchg
mov
mov
jo
dec
push
lock
jmp
push
loopne
pop
push
pushf
jl
ja
pop
push
shr
jo
pop
mov
orb
or
or
das
lret
outsl
out
mov
fwait
dec
imul
rcrl
in
stos
repz
sub
sbb
dec
je
mov
mov
mov
inc
out
outsl
pop
mov
adc
es
test
or
mov
lret
inc
lret
rcll
jne
mov
sbb
arpl
bound
mov
jge
lods
dec
cmovns
hlt
and
out
cmp
lea
xor
lock
cli
lret
cmp
jbe
imul
add
jno
jae
pop
and
and
fsub
push
shr
sub
pop
in
ffreep
ja
fnstsw
enter
into
and
or
mov
mov
dec
and
xor
mov
fdivrs
xchg
cmp
dec
pop
jbe
mov
insl
push
out
adcl
push
inc
movsl
fwait
das
sub
cmp
mov
inc
cltd
mov
je
es
jl
inc
pop
xchg
mov
mov
add
dec
dec
lds
sbb
arpl
das
xchg
inc
push
dec
rolb
jnp
push
push
or
push
ja
inc
and
cmp
ljmp
stc
push
and
sbb
dec
mov
fnstsw
cmc
pop
pop
or
ret
ds
fstl
shrb
sbb
xchg
cmpsb
cmp
inc
mov
stos
data16
fcoml
xchg
fistpl
sub
dec
add
stos
xchg
pop
add
add
in
xchg
and
mov
fnstcw
pusha
mov
imul
mov
push
shll
mov
dec
mov
push
xorl
adc
cmpsb
loop
ljmp
xor
xchg
pop
decl
lret
ljmp
negb
popf
orl
or
lahf
xchg
mov
jne
insb
imul
dec
testb
xchg
mov
and
mov
shr
loopne
imul
and
icebp
test
mov
xor
cwtl
movl
setae
lret
mov
jns
push
cli
outsl
orl
mov
lret
lock
in
jno
push
jecxz
add
hlt
and
outsb
jmp
outsb
mov
cli
pusha
jnp
jmp
adc
call
popf
xchg
cmp
sahf
mov
movsl
fstpt
adc
cmp
cmpsb
clc
mov
pop
pop
sti
ljmp
jg
mov
push
repz
adc
ss
pop
add
stc
cmp
mov
cmp
sbb
mov
inc
push
pop
mov
insl
xor
xchg
gs
jl
lock
add
mov
scas
lahf
loopne
mov
sub
sub
sub
and
stos
or
aas
cltd
or
pop
mov
imulb
loopne
and
xchg
add
xor
pop
lcall
aas
pop
cwtl
mov
xchg
mov
mov
and
cli
ror
mov
cmp
into
mov
xor
and
int
aam
leave
mov
cmp
pop
sti
sti
xlat
add
js
cmp
nop
pop
andl
mov
stc
fldcw
inc
popa
pop
cmp
jecxz
inc
xchg
daa
mov
and
jns
push
icebp
jmp
adcl
in
push
jle
dec
sub
mov
mov
mov
aaa
cli
mov
addl
cmp
mov
movsl
or
push
mov
inc
or
imul
cmc
push
jle
add
dec
cmp
sbb
mov
mov
icebp
hlt
jp
lahf
sbb
dec
mov
mov
mov
lea
clc
inc
repnz
jmp
pop
in
xchg
or
mov
xor
leave
test
shll
sahf
fisttps
in
stos
lss
cmpsl
out
mov
andl
rorb
adc
stos
inc
jns
push
mov
jp
mov
repnz
sub
div
xor
ret
rcl
push
fcomps
scas
icebp
jno
mov
xor
enter
jl
ds
mov
rcrb
iret
dec
xchg
loope
mov
aas
inc
fnclex
fucomi
in
cltd
cmp
inc
rcrb
out
or
stc
sub
andb
mov
sbb
fcmovbe
pop
mov
sbb
mov
aaa
repz
into
xchg
pop
add
xlat
data16
testb
pop
mov
pop
repnz
in
xlat
leave
jno
mov
mov
dec
test
inc
fimuls
sbb
cmpsb
in
jmp
adc
push
int3
loop
iret
cmp
inc
mov
and
push
xor
lods
inc
jmp
lret
imul
push
push
sub
andnps
pop
stos
add
icebp
add
or
subl
ljmp
jmp
ja
testl
cwtl
sub
cld
std
inc
addr16
loopne
sarl
inc
ret
fmuls
sbb
push
ret
jb
lretw
jne
shlb
pop
mov
ror
dec
jb
jl
and
test
sahf
frstor
loopne
imul
scas
cmp
mov
mov
cld
jae
or
sbb
mov
cmpsl
xchg
cmp
sbb
ds
divb
pop
mov
adc
aaa
add
xorb
arpl
sahf
cmpsb
pop
jns
adc
xchg
xor
das
jnp
cli
fwait
or
lret
clc
jmp
xchg
jae
fwait
jae
loopne
jl
nop
pop
lods
mov
mov
sub
jbe
adc
jne
loope
fidivs
jbe
xchg
rcrb
pop
lods
cmpsl
popa
pop
mov
xor
pop
nop
inc
fnsave
enter
fwait
cmp
aad
dec
int3
sbb
dec
test
stos
or
shl
aam
enter
leave
cltd
icebp
or
mov
cmpb
je
xor
jo
int3
dec
cli
sbb
mov
subl
sbb
insb
sbb
dec
add
cmc
mov
adc
add
loope
add
imul
jl
test
test
fwait
sbb
nop
aas
xor
nop
mov
rcl
lods
dec
pop
pop
jge
mov
neg
ss
mull
xor
adc
inc
cmpsl
in
mov
ja
aas
sbb
fisttps
les
cli
addr16
xor
outsb
insb
mov
insl
push
or
add
add
dec
mov
push
dec
push
jmp
add
dec
bound
jo,pn
lods
xor
test
add
mov
pop
mov
and
mov
loopne
xchg
insb
rclb
push
lahf
push
mov
inc
pop
cmc
addr16
rorb
cmpsb
dec
inc
insl
pop
jnp
dec
sahf
inc
ja
or
sbb
lret
repnz
loope
jno
add
jne
mov
icebp
fcomip
packuswb
sahf
out
push
fucomip
cmpsl
test
sbb
or
aaa
jecxz
dec
loopne
ja
dec
in
inc
sbb
std
dec
lods
into
fdiv
mov
fistps
push
andnps
lahf
out
pop
inc
mov
addr16
and
scas
scas
repz
inc
cmp
loope
out
aas
dec
or
adc
pop
pusha
push
pop
jno
cltd
sub
les
addr16
mov
xlat
in
and
mov
outsb
adc
mov
inc
pushf
push
loope
call
jg
test
fst
push
push
push
add
sahf
dec
mov
pop
xor
test
enter
inc
fnstcw
push
stc
mov
icebp
pop
mov
push
test
shll
adc
shlb
xor
jns
fdivrl
sahf
mov
stos
ret
mov
lcall
xchg
stc
out
sbb
pop
in
nop
test
sbb
out
xchg
cmpl
push
push
lods
sub
or
leave
add
mov
lds
mov
push
push
popl
push
jl
push
enter
repz
cmp
lahf
inc
lds
adc
or
adc
cmp
test
dec
mov
dec
bound
adc
mov
xchg
pop
imul
aaa
xchg
mov
gs
adc
dec
xchg
jle
mov
test
loope
adc
inc
jecxz
xchg
add
in
mov
out
push
lcall
lods
cmp
negl
adc
xchg
dec
iret
lret
sub
xrstor
in
mov
dec
mov
cmp
cmp
mov
rcr
sbb
and
adc
mov
shr
and
fcmove
pop
test
add
add
push
add
ret
xchg
mov
es
sub
pop
or
out
cs
out
test
jne
jmp
out
xchg
insb
std
popa
jecxz
arpl
cmp
xor
sbb
mov
add
aas
mov
aam
insl
test
movsl
and
out
dec
sbb
outsl
sbb
cld
repz
cltd
dec
sub
dec
imul
or
fdiv
test
in
xchg
mov
cmpsl
mov
imul
lcall
pop
in
pop
cmp
push
jle
xchg
sub
xlat
insl
ret
repnz
ljmp
les
mov
jl
xor
and
xor
pop
sar
and
push
fmul
inc
push
sbb
sub
xchg
xor
mov
mov
sub
imul
int3
mov
add
mov
sub
int
sti
scas
pop
test
mov
and
and
xor
dec
mov
or
mov
xchg
fildl
mov
pop
xlat
sbbb
pop
adc
sub
sbb
repz
inc
push
pop
aaa
inc
fisubl
mov
ret
dec
or
jg
iret
sarb
mov
popf
mov
leave
jnp
std
popf
xchg
inc
add
stc
enter
adc
mov
enter
mov
sbb
mov
xor
xchg
sub
jp
idivl
mov
jg
sbb
sbb
jp
andl
cmp
jno
sub
cmp
mov
xchg
dec
loope
add
repz
out
xor
dec
jb
mov
and
sbb
pop
inc
sahf
lock
std
jmp
xor
fmull
dec
sbb
and
or
push
mov
test
adc
outsb
push
xchg
int3
dec
pop
adc
inc
clc
adc
add
into
jns
adc
mov
jno
movsb
fsubrp
add
es
push
mov
push
mulb
mov
xor
shlb
in
add
movsl
sarb
sahf
mov
and
push
adc
loope
add
jbe
add
mov
push
mov
cmp
lock
hlt
jge
and
lahf
out
int
loopne
pop
out
pop
repnz
out
pop
daa
sahf
ss
jbe
pop
xchg
popf
mov
leave
sub
mov
mov
push
in
mov
cwtl
dec
icebp
pop
cmpsb
les
sub
call
jnp
pop
xlat
xchg
cmp
in
and
repz
push
push
loope
mov
imul
mov
rclb
repz
lods
sar
nop
lods
icebp
jae
jo
aaa
push
mov
mov
sub
mov
mov
les
dec
das
mov
es
insl
sahf
jbe
je
adc
add
in
xchg
lcall
outsb
imul
inc
pushf
xor
mov
inc
inc
arpl
shr
inc
cld
movsl
pop
push
jae
inc
and
xchg
sbb
cmpsb
lods
lahf
push
aaa
dec
nop
sbb
mov
push
dec
jno
or
mov
cmpsl
add
mov
lea
test
mov
rcrb
mov
jl
xchg
inc
loop
sahf
sbb
mov
rorl
cmp
push
xchg
roll
jbe
or
cs
dec
jne
aad
mov
xchg
xchg
xchg
loope
arpl
cmp
xor
iret
scas
lds
loop
jge
popa
dec
push
and
add
leave
push
mov
xor
add
outsl
jl
adc
rcrb
sub
in
push
dec
test
adc
or
data16
ss
xchg
movsl
dec
adc
fisttpl
jp
sub
adc
and
insl
cmp
enter
mov
inc
outsb
xorb
pop
push
ja
push
mov
es
insl
and
mov
cmp
incl
cmp
vsqrtpd
hlt
addr16
jns
push
jl
dec
mov
call
movsb
jbe
xchg
cmpsl
dec
adc
pop
add
cs
xchg
insb
cmpl
imul
mov
adc
jge
xor
sub
xor
and
sahf
cmp
mov
mov
sub
daa
clc
scas
xlat
pop
loope
jmp
mov
xchg
mov
push
and
std
and
ja
aas
dec
mov
pop
imul
jo
popa
mov
inc
pop
mov
or
repnz
adc
pop
aad
scas
in
mov
and
pusha
sub
xchg
test
out
dec
subl
push
or
adc
lods
shlb
inc
data16
mov
inc
imul
mov
inc
xor
push
dec
push
jno
sbb
push
sub
sbb
xchg
out
or
add
hlt
pop
push
add
and
std
mov
adc
add
iret
fiaddl
adc
xor
adc
add
mov
adc
js
sub
push
jge
cmp
jae
jns
mov
mov
add
mov
cmp
fldl
in
pusha
xchg
pop
popf
push
out
xchg
fwait
out
stc
mov
mov
xor
lock
arpl
fsubrs
sub
sbb
mov
or
xchg
aas
out
inc
stos
gs
scas
xchg
add
sub
add
cltd
xor
icebp
arpl
cld
mov
aad
icebp
dec
ret
jns
aaa
or
dec
dec
stos
pop
fmuls
fstpl
push
movsb
add
xor
adc
adc
mov
lds
cmp
aam
xchg
xor
icebp
aaa
cmpb
enter
sbbb
ss
cmpsb
mov
pop
adc
dec
adc
xchg
lds
or
lods
imul
addb
loopne
scas
push
je
add
cli
push
imul
pop
pop
mov
xor
push
call
arpl
inc
popa
jmp
sub
subl
adc
xor
lock
or
push
push
adc
std
inc
xor
or
lret
pop
test
inc
mov
inc
pop
adc
add
stos
movsw
outsl
or
sbb
add
sbb
or
dec
xchg
insb
and
or
cmc
dec
push
shr
xchg
sbb
arpl
ret
dec
pop
sbb
lret
adc
das
inc
pop
out
push
fs
jmp
xchg
les
push
scas
add
mov
repz
mov
sub
sbbl
imul
stos
or
push
nop
sarl
push
sti
cmp
mov
adc
jno
dec
adc
mov
mov
lcall
lret
jp
adc
xchg
xchg
inc
lock
jge
xor
int
das
les
jle
imul
arpl
stos
incb
mov
xchg
aaa
push
pop
pop
pop
cmp
loop
std
adc
and
push
cwtl
sbb
repnz
add
pop
mov
push
mov
mov
test
dec
fwait
mov
jmp
push
push
mov
popa
mov
repnz
sbb
subb
jp
and
popa
mov
inc
or
pop
mov
test
rorb
cs
mov
cld
inc
sub
dec
call
jno
xchg
stc
xor
inc
xor
xchg
mov
repnz
lcall
es
test
cwtl
mov
pop
stos
rorb
pop
in
pop
stos
js
add
cmp
sub
pop
fcmovnbe
push
adc
or
in
pop
test
repz
stos
in
sub
push
mov
loop
xchg
or
push
imul
rorb
xor
insb
imul
pop
or
jmp
lods
cs
xchg
aad
adc
lock
and
enter
or
cmp
int
jno
loop
loop
jne
into
sahf
mov
mov
add
out
or
cs
je
push
mov
pop
ficoms
out
insb
mov
inc
stos
pop
rcrb
inc
dec
inc
xor
scas
xchg
xor
cltd
dec
aaa
push
sbb
int
test
scas
mov
shrl
jno
outsb
test
xlat
hlt
in
mov
cmp
xor
jp
fidivs
cmp
jo
outsl
ret
jns
xor
ret
out
iret
popa
ds
stos
test
push
mov
outsl
pop
sahf
clc
adc
test
stc
jo
aas
pusha
in
mov
scas
mov
out
loopne
sahf
jg
or
clc
add
loop
mov
pop
push
fwait
in
pop
push
ds
xchg
into
cli
add
push
sub
daa
popa
xor
inc
jnp
cwtl
push
push
mov
inc
mov
test
mov
lods
fwait
jne
push
cmc
push
xchg
dec
movsl
inc
addw
push
adc
ja
and
sub
test
pop
stc
es
dec
test
pushf
insl
mov
iret
xor
inc
cwtl
lock
insb
jecxz
pop
pop
mov
xchg
scas
ret
and
mov
adc
mov
out
jbe
ss
and
pcmpeqw
pop
outsl
mov
push
sub
or
pop
adc
cmp
cli
rolb
lods
push
adc
mov
xlat
adc
xlat
das
movsb
scas
xchg
or
je
cmp
fidivrl
cmp
inc
xor
ss
adc
mov
popf
mov
test
test
adc
leave
add
mov
adc
and
jb
jmp
pop
lret
aad
nop
popa
rcl
mov
lcall
xlat
cli
jg
cmp
dec
dec
divl
pop
adc
in
inc
push
push
sarl
mov
adc
pop
in
movsb
pop
int3
jp
xchg
cmp
jecxz
lahf
das
cmp
sahf
dec
iret
jae
mov
sbb
add
mov
pop
mov
add
lea
dec
sbb
test
inc
les
adc
out
rorb
cmpb
mov
push
mov
jecxz
sbbl
pop
sbb
int3
mov
lods
mov
cli
sbb
movsb
hlt
mov
imul
sarl
sbb
cmp
adc
iret
scas
jnp
push
leave
ja
xchg
pop
ds
sahf
sti
xchg
jl
push
pop
xor
scas
addr16
aam
aam
daa
lea
insb
into
pop
bnd
sbb
cs
insl
test
and
jb
mov
jae
mov
jb
scas
aam
mov
mov
mov
rcl
cmpl
jae
xor
xlat
es
inc
fwait
cltd
fs
outsl
inc
popa
jnp
push
or
sub
sbbb
pop
ret
adc
lcall
mov
iret
shll
in
mov
insb
dec
cmp
pop
in
sti
sub
test
daa
int
loop
dec
jle
in
jnp
es
rorb
cmpsb
fnstsw
stc
or
cltd
jnp
les
jge
xor
mov
pusha
aad
jmp
jle
inc
insb
xor
jnp
mov
xchg
popa
dec
sti
ljmp
jp
push
xor
jne
daa
xor
fwait
xchg
xchg
stos
loopne
cmpl
and
jmp
xchg
dec
xchg
adc
sub
sub
mov
mov
mov
add
mov
sbb
xchg
adc
loopne
xor
add
xchg
xor
shr
xchg
xchg
aam
inc
pop
stos
jg
adc
lret
sbb
sub
push
inc
sub
mov
pop
add
movsl
ret
fisttps
hlt
xlat
dec
and
dec
pop
orb
fs
daa
or
pop
mov
fildll
imul
lods
xor
mov
loopne
cmp
dec
add
and
xchg
cmp
inc
push
add
cmpsl
inc
xor
mov
insl
push
pop
fidivs
imul
out
jge
push
std
lea
iret
and
inc
mov
imul
pushf
mov
fdivl
lret
dec
ficoml
and
pop
push
sub
sbb
mov
loop
push
dec
test
inc
xchg
lock
aad
and
xchg
xlat
inc
cmp
and
testb
cmpsl
inc
jne
pop
sbb
xchg
hlt
and
add
insl
jp
cs
rorl
pop
movsb
or
adc
inc
jae
fs
sub
xchg
shr
fs
bound
push
pop
out
jno
fildl
scas
xor
sbb
mov
jle
subb
rclb
cmpb
inc
addr16
and
and
adc
cmp
hlt
cwtl
mov
fs
adc
icebp
pop
add
mov
mov
and
popa
sbb
jae
dec
lods
lds
pop
cld
pop
push
ret
ja
mov
lret
nop
ret
sub
rol
loopne
test
pop
ss
push
jo
xchg
mov
sbbb
js
roll
push
fcoml
jns
push
pop
aad
dec
xor
stos
jb
push
cmp
jns
cltd
into
lret
fsts
push
lock
std
xchg
fsubs
mov
inc
in
arpl
in
pop
jg
sub
gs
idivb
roll
mov
lret
or
lahf
push
push
je
sbb
dec
or
adc
out
int3
mov
mov
sub
hlt
sbb
cmp
xlat
lds
lret
addb
mov
movsl
fstpl
mov
movsl
sarl
and
xchg
loope
add
ja
out
lods
mov
in
insl
jp
int3
xor
lret
push
inc
cld
lea
scas
stos
insb
jge
scas
incb
orl
pusha
scas
movsb
test
imul
add
addb
mov
aas
sub
loopne
test
repz
dec
xchg
mov
pop
data16
imul
adc
cwtl
ret
lods
cmp
mov
mov
sbb
mov
test
fsubl
sbb
int
repnz
xchg
sahf
pop
sbb
and
jle
int
pop
sbb
mov
add
adc
scas
in
push
adc
push
push
cmp
cmp
xchg
sbb
cli
fucom
add
js
inc
add
les
outsl
pop
das
insb
aas
mov
jb
es
test
fildl
pop
gs
mov
pop
mov
add
jne
les
sub
add
dec
aam
mov
adc
orb
sarb
xchg
pop
mov
dec
popf
cld
lock
cli
sub
xchg
sbb
xchg
or
call
sub
xchg
lods
xchg
mov
pop
pop
or
or
rol
fists
or
push
sub
cmpb
push
xlat
lcall
dec
mov
sub
xchg
push
pop
pop
adc
ss
and
sub
mov
movsb
mov
rclb
dec
leave
adc
hlt
mov
dec
lahf
add
push
cmp
add
mov
inc
movb
rol
mov
bound
sub
add
xchg
cmpsl
pop
inc
jo
sti
pop
adc
aam
mov
mov
popf
imulb
push
push
shlb
sbb
xor
jnp
fstp
sub
lds
sub
sbb
push
popa
stos
popa
ds
push
xchg
mov
lahf
adc
jno
outsl
jle
dec
xchg
ror
push
negb
out
xor
sbb
mov
scas
and
ja
lods
out
push
cs
xchg
pushf
rcll
lcall
jnp
jmp
leave
jp
jb
ja
fistpl
xor
decl
je
or
iret
jb
mov
loope
cmpsb
je
insl
mov
fadds
aas
add
sub
dec
dec
cmp
sti
dec
aam
int
or
mov
xor
in
push
and
mov
fiaddl
dec
sbb
test
sub
imul
aam
jge
jnp
xchg
jns
out
cmpsb
or
mov
ja
das
jns
cmpb
adc
mov
mov
xor
xchg
push
push
xchg
jno
cmc
out
push
mov
popf
call
pop
jecxz
mov
push
call
pop
adc
mov
jle
cmp
aam
jmp
adc
jmp
into
es
outsl
jle
mov
adc
dec
cltd
mov
icebp
cmp
lret
lea
dec
sub
mov
mov
aam
adc
sbb
imul
xor
fldenv
add
and
lea
pop
loop
mov
sub
testb
dec
mov
icebp
inc
jecxz
shll
dec
push
add
push
fcmovbe
mov
les
aas
cmp
push
mov
push
xlat
dec
or
dec
xchg
mov
mov
data16
jae
mov
out
dec
pop
into
mov
lret
pop
mov
pusha
mov
jg
pop
push
or
and
or
add
mov
pop
mov
cmp
arpl
push
fwait
dec
sub
mov
dec
cs
mov
jne
dec
mov
lret
inc
fistps
repnz
jnp
int3
push
jae
pop
hlt
sub
jo
mov
ja
ljmp
lods
sbb
mov
test
add
jmp
sbb
je
xchg
xlat
insb
cmp
and
push
arpl
jne
pop
sbb
push
outsb
mov
shlb
fwait
ret
mov
xchg
adc
fldl
jno
fmull
nop
pop
push
adc
inc
pushf
cmp
repnz
sub
in
dec
or
in
inc
dec
popa
ret
mov
sbb
or
xchg
popf
arpl
popf
xor
pop
dec
sub
pop
sbb
push
leave
mov
cmp
test
fldl
push
xor
xchg
insl
gs
repnz
xchg
xchg
mov
jno
pop
pushf
fisubl
lahf
jmp
movsb
inc
cmpsb
vmwrite
jmp
fcomip
jge
mov
push
xchg
jne
lret
sarl
and
scas
testl
lods
lea
jmp
addr16
xchg
arpl
insb
shlb
mov
inc
bound
enter
inc
sub
jg
sub
inc
dec
mov
fnstenv
arpl
mulb
fs
test
lods
dec
mov
rolb
fs
rcrl
cld
mov
xchg
dec
sub
jno
mov
inc
gs
rcrb
fdivrs
jg
flds
lods
mov
test
das
dec
sub
and
cmp
jnp
push
sti
fildll
add
jge
arpl
cmp
nop
repnz
sahf
or
daa
mov
or
aaa
mov
adc
ljmp
inc
fisttps
add
repz
shl
iret
push
lcall
mov
and
xchg
fsts
adc
add
hlt
sub
cmpsl
cmp
inc
xchg
xor
cmpl
inc
sbbb
adc
sbb
xchg
sub
and
mov
shll
cmc
mov
cmp
xchg
lret
or
jmp
add
ds
arpl
xor
cmpsl
mov
inc
add
jno
cmp
fwait
pushf
int
fxam
add
addr16
stc
xchg
xchg
data16
or
and
lahf
xchg
scas
mov
sbb
sub
rorb
js
pop
mov
iret
push
pop
push
lret
scas
adc
mov
pop
mov
dec
cld
push
pop
popf
mov
repz
xor
jo
into
scas
xor
mov
fsubrs
out
bswap
lock
pop
xchg
mov
outsl
xchg
out
sbb
adc
roll
and
movsb
push
sarl
pop
fcompl
fdivr
aad
shl
gs
pop
mov
push
sub
and
mov
stos
es
xorb
add
out
out
nop
es
push
stos
ds
bound
in
decb
shll
lea
filds
mov
insb
sub
push
push
fistps
in
out
pop
aas
std
sbb
jae
sub
imul
xchg
xchg
shl
addb
ja
outsl
clc
mov
in
push
mov
out
int
add
sub
push
ss
dec
iret
inc
addr16
test
sbb
in
xchg
adc
fwait
jne
arpl
mov
out
loopne
inc
outsb
les
popf
inc
mov
cmp
scas
xorl
pop
xchg
scas
arpl
mov
jl
and
xchg
pop
cmp
divb
shlb
sbb
test
xchg
pop
pop
dec
lods
fildl
stos
inc
pushf
xchg
add
push
or
sub
inc
xor
cmpsb
int3
mov
jl
rorl
fdivrp
les
imul
dec
mov
out
mov
cs
fdivl
out
outsl
jae
test
mov
and
cwtl
cltd
cmp
in
jbe
stos
mov
jp
pop
sbb
ret
outsl
ret
jns
pusha
cwtl
leave
test
lahf
add
mov
jle
adc
in
in
std
sbb
mov
or
xchg
dec
push
inc
test
dec
xchg
pop
cmp
test
mov
pop
stos
pop
leave
inc
sub
fidivrs
xchg
gs
gs
nop
xchg
inc
arpl
ret
bound
lret
xor
pop
add
pop
bound
mov
jbe
sub
jecxz
sub
rcrl
fwait
sub
scas
out
lahf
inc
mov
or
scas
sbb
inc
pop
push
shll
ficoml
fidivs
inc
pop
adc
sub
in
mov
dec
xor
push
cmp
or
jge
mov
cmp
xchg
fsubrs
int3
in
add
xchg
adc
lret
push
cmp
add
ret
mov
sbb
cmc
xor
frstors
popa
and
cli
sub
jmp
ja
arpl
jecxz
lods
xchg
notb
dec
int3
ljmp
mov
pusha
popa
inc
jnp
sti
icebp
sub
sti
jno
jnp
and
fcmovbe
push
pop
pop
es
push
lds
push
cmp
bound
push
ret
add
push
and
subb
pusha
aas
pop
js,pt
add
orb
mov
loope
add
gs
mov
push
add
nop
push
pop
inc
dec
inc
xor
testl
rcrb
push
mov
ds
fisttps
or
shrl
in
push
loop
push
mov
mov
movsl
push
and
cmpsl
and
inc
lock
es
cmp
sbb
mov
cmc
cmp
sbb
xorb
sbb
mov
add
gs
jmp
nop
pusha
aad
add
or
jo
xor
and
decl
sbb
jecxz
xchg
jne
inc
pop
insl
mov
mov
pop
sub
stc
pushf
jl
pop
push
out
jle
or
popf
in
sub
xchg
jb
dec
leave
sbb
or
iret
gs
rolb
ret
inc
loop
es
fisubrl
mov
mov
pop
aad
in
or
dec
jne
xchg
adc
mov
std
repz
nop
jb
xchg
jb
shl
loope
pop
ret
pop
adc
or
dec
outsb
push
sbb
movsb
lock
test
jb
inc
int
aas
add
cmp
mov
add
push
iret
jb
fmulp
mov
fwait
sbbl
jno
sub
inc
jbe
jg
adc
dec
xchg
dec
out
addr16
sti
ds
xor
pop
insl
testb
or
jnp
push
dec
inc
test
jns
xor
pop
dec
bound
jp
add
andb
rcrl
mov
icebp
aam
pusha
call
imul
imul
inc
dec
mov
out
pop
ret
jmp
ret
sub
and
ja
push
ljmp
hlt
cli
xchg
mov
scas
cs
sbb
scas
sahf
das
pop
fcoms
push
fcmovnu
out
fdivp
nop
cmp
adc
rcrl
pop
or
adc
loop
adc
mov
int3
xor
lret
ret
cmc
stos
cmpsb
stc
rol
jbe
mov
cmp
sub
sbb
leave
test
gs
bound
pop
adc
ret
fstl
les
pop
leave
loop
rolb
into
shrl
fildl
fcomp
int
ret
xchg
cld
cs
pop
xor
stc
adc
negl
repnz
jl
ljmp
xchg
mov
and
scas
mov
in
jecxz
mov
mov
dec
cli
sbb
mov
adc
imul
ficoml
add
dec
je
inc
cli
shlb
fstps
cltd
fcmovbe
inc
ja
data16
xlat
mov
hlt
das
push
out
xor
lret
sbb
outsl
movl
insb
inc
addr16
xor
add
call
lock
xor
xor
inc
pop
fidivs
xor
sub
in
mov
pop
jns
xchg
mov
enter
adc
je
jp
bound
sahf
xchg
inc
and
xor
test
insb
das
loop
adc
mov
cli
add
inc
shrl
ret
pop
pop
sub
pop
mov
inc
adc
sbb
push
and
ljmp
cmp
mov
fidivrs
and
scas
sub
add
test
lcall
cmpsb
cmpsb
cmp
into
loopne
cs
cmp
outsb
lcall
push
push
xor
in
aas
shrb
cmc
arpl
mov
orl
mov
pop
call
sbb
mov
fisubl
xchg
pop
mov
sarb
mov
cmpsb
mov
lods
xor
adc
pop
cltd
mov
jge
xor
push
daa
push
mov
jle
out
xor
lret
push
adcb
mov
adcb
lods
movsb
das
lret
sbbl
popf
xlat
pop
and
mov
dec
xlat
lahf
jg
out
aaa
jne
sub
les
cmc
clc
cmp
xor
int
xorl
push
fs
sub
xchg
cmp
pop
mov
lock
orl
push
out
outsb
xchg
aas
dec
fiadds
nop
xlat
stos
testl
mov
ja
outsb
xchg
sub
dec
fldcw
outsl
addr16
mov
fsts
cmp
mov
sbb
cmp
enter
mov
je
push
xor
xor
daa
orb
sbb
int3
gs
icebp
fwait
clc
mov
ss
xor
add
mov
adc
addr16
movsl
insb
pmullw
imul
shlb
out
lcall
and
jno
mov
clc
mov
nop
mov
mov
bound
orb
xchg
xchg
int
inc
mov
xchg
es
mov
and
lret
xor
fcompl
sbb
lret
adc
cmp
out
test
add
cmpsl
popa
div
mov
inc
sbb
mov
add
repz
xchg
push
pop
testl
dec
sub
pop
ret
repz
adc
add
jnp
in
call
pop
call
mov
es
ss
addl
jo
fisubs
push
clc
rcll
dec
cwtl
aad
in
mov
xlat
cltd
ds
ljmp
loope
adc
sti
jl
sbb
add
out
and
xor
sti
adc
and
mov
cwtl
cld
add
push
inc
and
addr16
mov
loop
jmp
int
cli
loope
and
push
repnz
xchg
scas
ror
mov
scas
add
xor
js
insl
sub
jno
xchg
sub
iret
sbb
push
mov
jmp
sub
in
xchg
lahf
and
inc
iret
fildll
mov
lret
lahf
push
sbb
pop
imul
xlat
push
adc
push
xor
xchg
sub
and
xchg
or
les
test
cltd
lds
aam
or
xor
out
cli
dec
push
imul
movsl
add
hlt
jo
sahf
mov
pop
aam
xchg
out
enterw
xchg
in
inc
xchg
ret
xchg
pushf
sub
xchg
std
popf
xchg
insb
cmp
cmpsl
inc
stos
fistl
call
pop
sbb
xor
xor
test
cmpsl
jecxz
cmp
aaa
hlt
mov
pop
out
mov
push
inc
dec
out
and
inc
jmp
mov
xacquire
jl
ret
add
cwtl
into
jns
pop
jp
sbb
lock
and
mov
sub
je
into
jne
fstpl
loopne
xchg
jge
popf
cld
movsb
xchg
cwtl
ret
add
inc
pop
add
cmp
movsl
cwtl
mov
idivl
into
jg
jno
je
leave
sub
cmp
cmp
push
ds
shll
mov
xlat
cmp
cli
push
mov
cmc
jno
push
sbb
mov
cmp
std
stos
cli
mov
popf
lods
shlb
cltd
adc
jp
dec
xor
mov
fstps
and
dec
scas
pop
jno
add
mov
imul
push
fmuls
mov
std
mov
adc
and
jle
inc
pop
sbb
ret
cmp
and
mov
mov
out
or
data16
dec
mov
xchg
xchg
out
shrl
mov
mov
jge
mov
imul
icebp
cmpl
adc
push
xor
xorb
or
dec
pop
dec
sub
aad
nop
sbb
cmp
pop
js
movsb
jecxz
outsl
mov
rorb
pusha
jo
push
xor
stc
jle
xchg
add
les
cmpsl
iret
mov
xchg
or
aam
cld
push
and
add
es
das
jbe
hlt
push
test
mov
in
mov
fdiv
repz
mov
xor
fcmovnbe
rcr
into
fcoml
mov
bound
jmp
xchg
outsb
mov
push
movsl
xor
in
pop
inc
jnp
xor
scas
enter
mov
test
data16
out
cld
loope
jno
stos
repnz
hlt
or
stos
ret
xchg
in
push
cmp
cmp
xchg
hlt
pop
enter
mov
cmp
std
sbb
movsl
rorl
adc
jecxz
or
stos
push
add
push
in
mov
jg
add
fcomip
jo
loope
mov
shrb
sbb
lahf
dec
rcll
iret
and
xchg
cld
outsl
mov
sub
push
popf
jno
sub
jp
adc
enter
mov
mov
jne
enter
aad
mov
sub
sbb
pop
sub
sbb
sahf
and
inc
dec
fwait
mov
sbb
mov
inc
push
addr16
insl
iret
fisubl
mov
repz
and
mov
or
xchg
mov
sarl
sbbb
push
imul
jbe
jbe
pop
ljmp
inc
adc
les
cmp
jns
pop
out
insl
push
xchg
mov
dec
mov
sbb
outsl
pop
push
xchg
stc
sub
mov
xor
mov
inc
das
cmpsl
clc
push
and
and
int
or
aad
lods
aam
mov
rclb
dec
rorb
nop
rclb
cmp
lret
push
mov
adc
mov
lock
cmp
ja
inc
jb
insb
push
cld
add
push
subb
es
pop
sahf
leave
mov
mov
pop
add
mov
fbstp
sbb
xchg
pop
lret
jae
jbe
bound
dec
orl
and
pop
inc
gs
sarl
aaa
add
fwait
adc
push
lahf
inc
addr16
call
mov
add
xchg
mov
adc
lcall
jo
mov
push
adc
jno
stos
jno
jecxz
or
in
loopne
out
inc
adc
enter
inc
dec
xlat
pop
mov
sub
cmp
push
add
push
out
cwtl
add
inc
in
stos
and
inc
push
sub
daa
xor
negb
sbb
movsl
pop
xchg
pop
jo
addr16
andl
dec
pop
stos
cltd
sub
xchg
cmp
mov
ja
jae
hlt
xor
rclb
dec
cli
add
sti
and
xor
add
push
cmp
ja
and
push
jmp
lods
jae
xchg
ret
sbb
clc
dec
push
adc
jae
cmpsl
ficoml
lds
nop
in
inc
and
bound
adc
andl
xor
das
push
mov
pop
add
sub
mov
lods
dec
addb
cmp
push
jmp
pop
mov
popa
cmpl
dec
mov
out
inc
bound
arpl
ret
dec
or
insb
or
repz
sbbb
sti
pop
fdivp
and
push
stos
push
popf
mov
mul
scas
add
in
push
loopne
pop
mov
mov
fs
pop
xchg
fs
cmpb
ja
push
icebp
test
popa
mov
lret
clc
aad
mov
sub
fisttps
mov
pop
call
loopne
xchg
and
push
inc
dec
and
sub
fistpl
jne
sub
lds
lods
lcall
mov
gs
lret
gs
dec
ret
outsl
jmp
sub
push
mov
lea
xlat
push
push
mov
xchg
f2xm1
jmp
pop
add
xor
jns
lea
xchg
jnp
dec
cmc
mov
sbb
xor
dec
stc
adc
imul
stos
incl
adc
jae,pt
jg
sahf
xchg
outsb
bound
and
xchg
inc
mov
sub
outsl
add
dec
ret
rolb
pop
lcall
imul
mov
lds
pop
in
nop
add
pop
mov
inc
fwait
xor
aas
jne
not
imul
jmp
js
xchg
xchg
mov
dec
sub
adc
xchg
jbe
out
cmp
cmpb
cmc
loop
push
xchg
test
outsl
aam
mov
jbe
mov
and
test
and
in
mov
scas
pop
xor
scas
loopne
xlat
pop
lret
test
mov
leave
insl
jle
mov
mov
xchg
cmp
nop
in
xchg
movsb
pop
fmuls
push
adc
adc
icebp
fwait
pusha
iret
andb
jmp
or
add
pop
iret
jp
jg
sbb
sbb
les
loope
pop
mov
popa
mov
push
xchg
lea
das
push
dec
loopne
mov
jge
lock
fsubl
push
fnclex
cs
jg
pop
out
test
fists
xchg
fists
pop
notl
push
inc
mov
test
out
mov
jbe
mov
int
out
push
pop
lahf
addr16
xlat
aas
jg,pt
shlb
dec
xor
repz
push
mov
loope
lcall
outsb
xchg
dec
jb
scas
sbb
xor
jle
iret
dec
cmp
push
inc
inc
out
mov
stos
adc
lds
fwait
and
sub
sahf
xor
insb
out
push
nop
mov
pusha
in
pop
cmpsl
jae
ss
repnz
lahf
out
jecxz
mov
jae
jae
out
sbb
je
inc
and
rolb
lea
ret
in
movsl
push
cwtl
adc
mov
imull
push
lret
pop
inc
lret
mov
cmp
or
jecxz
lcall
icebp
cmp
inc
jmp
popf
dec
lock
int3
std
inc
out
cmc
in
ss
mov
cld
aaa
cmp
scas
pop
iret
add
pop
insl
loope
jno
out
fnstcw
xchg
xor
imul
test
ret
sbb
adc
or
add
clc
and
mov
das
sub
cmp
outsb
lcall
cltd
push
adc
ud2
fdivl
and
adc
inc
hlt
adc
jl,pt
push
cld
xchg
aad
icebp
cli
int3
mov
jno
int
pop
cs
sub
pop
inc
orl
idiv
push
ret
movsb
imul
cmp
fidivl
popa
out
pop
dec
cmc
or
and
dec
daa
leave
jp
and
mov
sub
push
icebp
cmp
ret
inc
test
mov
xchg
cmc
out
sub
jno
xchg
pop
or
jo
push
pusha
es
aas
pop
push
or
psubb
std
not
sub
pmaddwd
iret
data16
icebp
xchg
pushf
nop
lods
nop
sub
bound
sub
cmp
lahf
scas
mov
pop
pop
inc
movsb
stos
mul
fadd
mov
lcall
mov
pop
adc
adc
inc
mov
imul
int
mov
gs
inc
fucomip
cmp
push
imul
push
fwait
test
pop
lret
jg
sbb
inc
fadds
cmc
into
fildll
out
dec
mov
cmp
lods
out
popf
dec
ret
adc
shrb
lods
and
das
call
addr16
cld
pop
mov
jb
xor
cmp
inc
push
fimuls
orl
jecxz
hlt
mov
add
xor
cmp
fdiv
sub
pop
cmc
jmp
inc
mov
movsl
mov
loope
push
push
outsb
shlb
insl
pushf
jle
cltd
js
lcall
or
push
xchg
sub
sbb
mov
fistps
mov
insl
xor
les
outsl
push
ja
pusha
icebp
out
scas
add
fisttpll
fimuls
jae
mov
xchg
sub
lods
fisubs
in
or
int
addr16
rorb
fdivr
lahf
xchg
enter
imul
mov
adc
lods
cmp
aam
jl
leave
hlt
mov
outsl
mov
scas
stc
fcom
xlat
rcr
and
mov
movsl
fwait
subl
out
jecxz
mov
xor
pusha
call
insb
or
jge
fsts
fstps
xor
or
fs
mov
sub
inc
pop
adc
popf
js
push
mov
add
and
mov
or
inc
sub
add
adc
aas
pushf
mov
and
call
mov
pop
xor
in
cltd
pop
sub
jg
mov
aaa
bound
or
cmp
jno
jo
adc
gs
test
push
aam
sti
out
and
es
in
stos
jb
cmp
out
pusha
and
sub
cmpsl
sub
xor
outsb
cmpsl
cmpps
lret
imul
hlt
popa
xor
jne
xor
stos
push
mov
imul
dec
popa
cmp
cmp
out
rcrb
fdivl
in
mov
scas
inc
xchg
rcr
sub
fldl
gs
mov
nop
sub
pop
outsl
out
pushf
mov
sub
repz
outsb
rorl
aas
ljmp
dec
push
mov
mov
and
sbb
psllq
enter
pop
ret
pop
push
pop
insb
repnz
jmp
xchg
rolb
cmpsb
out
std
loope
lret
xor
outsb
or
stc
mov
sbb
lcall
or
inc
js
ljmp
dec
sub
add
arpl
aas
cmp
dec
xchg
int3
jno
cmc
mov
shlb
or
jo
cli
data16
test
mov
lret
sbb
mov
pop
jno
imul
insl
pop
decb
xchg
add
pop
sub
dec
ficoml
int
stos
cmpsb
scas
jns
loope
adcl
ja
out
ret
xlat
pop
test
inc
sbb
xor
lret
fsubs
testl
xchg
sahf
repz
dec
imul
pop
sti
es
mov
into
aad
push
push
scas
mov
hlt
and
sub
sub
mov
inc
and
push
xchg
mov
outsl
pop
mov
and
sti
dec
loop
js
and
mov
rcrb
shl
repz
cwtl
sub
je
daa
cmpsl
mov
mov
sbb
packuswb
xchg
mov
inc
sbb
clc
out
push
scas
out
sbb
jbe
icebp
adc
lret
xlat
lods
mov
std
fimull
daa
popl
adc
daa
mov
jg
xor
push
pop
pop
sbb
dec
xchg
repz
outsb
sub
sbb
cmpsl
cmpb
cmp
inc
add
dec
pop
insb
jb
testl
rol
sub
pop
imul
sub
xchg
ss
cld
jno
fbld
bound
insb
outsl
sbb
pusha
sbb
sub
cwtl
sub
shll
xchg
sub
push
sub
adc
inc
pop
mov
cwtl
and
jp
jecxz
popa
pop
mov
nop
or
jnp
sbbl
lds
add
cmc
ja
add
jecxz
sbb
push
push
add
and
sti
cltd
xchg
scas
sarb
mov
lret
iret
ret
or
sbb
pusha
dec
mov
jo
add
jecxz
hlt
into
push
sub
dec
mov
test
push
jbe
sub
je
mov
mov
and
mulb
out
inc
arpl
add
pop
and
ret
ret
das
jge
adc
leave
mov
sbb
fsubrs
xchg
mov
or
das
push
aam
lods
bound
incb
movsb
daa
das
bound
push
or
dec
repnz
ja
fldenv
cmp
pop
into
jb
mov
out
add
ret
loop
pop
jmp
and
lret
clc
mov
imul
sbb
lea
mov
ficompl
pusha
and
adc
and
scas
or
in
popf
rol
and
es
cmp
jmp
cmp
jne
xchg
jbe
mov
sub
gs
inc
cmp
and
inc
cmp
mov
jae
mov
mov
lods
repz
movsl
nop
lret
scas
xor
scas
shlb
jnp
pop
fldenv
popa
fcomps
mov
fnstenv
leave
mov
sti
in
add
jge
mov
and
or
in
int
inc
or
lock
cvttps2pi
or
mov
pop
cmp
jge
adc
add
js
andl
mov
pop
fisubs
cli
cmp
xchg
inc
cmp
sub
clc
pop
jp
inc
pop
sbb
mov
or
hlt
imul
rcrb
orb
sbb
push
push
dec
add
jge
ret
mov
mov
adc
adcb
or
andb
cmp
dec
leave
sti
jge
pop
cwtl
idivb
out
jo
outsb
pop
in
stos
inc
adc
mov
and
sahf
lcall
dec
testl
mov
mov
out
sbb
inc
mov
test
cli
and
shr
pusha
cmp
lds
xchg
pushf
outsl
nop
mov
mov
fistpl
iret
xor
sarb
jns
aaa
adc
or
lods
adc
jns
xlat
sbb
in
test
jbe
mov
xor
or
pop
je
adc
fwait
mov
popa
push
pop
out
sbb
xchg
dec
leave
pop
popf
sarl
cmpsl
add
mov
outsl
mov
and
pushf
inc
inc
or
aaa
sahf
push
es
mov
cwtl
push
jp
insl
ja
push
xchg
cmpsl
movsl
xchg
hlt
pop
jne
xlat
xorl
adc
dec
xchg
mov
cmovl
loopne
inc
push
aaa
frstor
mov
pop
jge
add
or
xor
lods
sub
mov
pop
js
jns
xchg
loop
test
dec
sbb
nop
fsubr
xor
jne
sbb
dec
jno
scas
or
fdivl
mov
lds
addr16
jg
dec
fdiv
inc
shrb
fcmovb
push
adcb
loopne
push
in
inc
shr
mov
repz
testl
sbb
add
xor
inc
push
iret
fs
xlat
roll
cmp
mov
sbb
jle
sbb
and
iret
sub
jmp
push
pop
xchg
lods
cltd
cmp
lds
lcall
pusha
nop
cmpsl
cmp
push
lcall
ret
add
jbe
or
gs
sub
out
insl
pushf
mov
lret
rcll
add
ret
fistps
fdivr
jl
adc
jge
xchg
bound
arpl
jne
dec
jb
testb
imul
mov
pop
ss
aaa
mov
push
movsb
cmp
dec
mov
test
pop
nop
loopne
in
negb
cmp
enter
xor
and
adc
jge
fidivl
inc
xor
in
pusha
mov
out
repnz
fcoms
pusha
lock
movsl
std
out
lods
xor
jmp
mov
xor
stc
mov
dec
in
push
or
mov
addr16
lret
sub
rcll
cmpsl
mov
fisttps
into
inc
mov
adc
enter
sarb
jecxz
ds
sub
cmp
push
dec
xchg
pop
cmpsl
fistps
mov
lret
dec
dec
lret
mov
iret
pop
mov
adc
es
cltd
lods
push
lahf
and
std
sbb
cmpb
mov
fs
call
xchg
and
sub
loopne
sbb
das
dec
in
aas
dec
jne
mull
sub
mov
mov
movsl
pop
push
movsl
ja,pt
loopne
stos
fcoml
punpckhdq
mov
ret
xlat
test
pop
dec
and
movsl
aad
gs
sbb
add
cltd
hlt
fsubr
inc
xchg
test
add
jne
sbbl
xor
cmp
pop
and
add
adc
or
mov
sub
or
sub
mov
sbb
jnp
or
imul
xchg
aas
add
aas
sbb
mov
add
js
outsb
mov
xor
mov
cmc
sbb
pusha
stc
popf
enter
fdivl
test
popa
adc
cs
popf
loopne
xchg
mov
aad
call
out
push
sub
adc
ljmp
fists
jg
into
jp
xchg
mov
lcall
push
addr16
sti
sbb
inc
outsl
inc
inc
xlat
jge
sub
int
jg
mov
loope
xlat
inc
pop
or
idivl
adc
aaa
adc
sbb
pushf
and
mov
or
out
aam
jmp
jns
jmp
adc
mov
dec
inc
mov
aaa
inc
je
fists
inc
xchg
cmp
sbb
dec
sbb
out
jo
sbb
lahf
out
adc
jbe
popa
nop
cmpsb
sbb
jle
clc
or
scas
push
daa
xor
jecxz
xchg
leave
sbb
call
add
std
aad
cmp
mov
insb
pop
xchg
xor
cltd
jb
out
rorl
insl
jae
lods
sbb
inc
jns
pop
lock
dec
adc
aaa
push
out
xchg
jno
add
mov
pop
fsubrs
sub
cwtl
sub
ret
jp
jecxz
sub
jno
sahf
cmpsb
cmpsb
inc
setno
mov
fistps
push
sbb
loopne
mov
mov
sbbl
fstpt
js
in
push
fsubrl
in
jp
dec
sub
jge
fsubr
decb
mov
pop
sbb
cmpsb
push
into
js
ret
push
inc
frstor
adc
adc
mov
bound
fsubs
popf
mov
mov
in
pushf
in
mov
mov
outsb
in
insl
lock
fmull
and
pop
fsubrl
test
or
std
fsubs
setno
push
xor
imul
and
test
xorl
sub
stos
aad
add
xchg
pop
in
xor
ljmp
sbb
sub
and
inc
jo
into
gs
mov
mov
sti
pushf
repz
ljmp
xor
xor
xchg
jge
jb
std
sub
call
hlt
mov
adc
adc
ret
xor
xor
jae
sahf
push
inc
ror
insl
dec
mov
push
aam
xlat
inc
stos
adc
sub
js
xchg
pop
pop
insl
lea
rcll
lods
addr16
push
mov
xchg
sub
call
popf
movsb
icebp
enter
leave
lods
lods
roll
and
xchg
xor
rclb
fs
cvttps2pi
mov
mov
mov
pop
mov
xor
dec
sbb
jbe
lock
mov
dec
push
pop
and
mov
clc
sbb
xchg
loop
lods
test
xchg
int
cmp
sbb
fidivl
mov
mov
sahf
test
or
stos
pop
daa
outsl
xchg
into
lods
enter
xchg
ret
sahf
int
repnz
xchg
pop
jle
push
imul
dec
sub
xchg
out
add
jns
hlt
mov
inc
or
push
in
lret
sbb
adc
ret
ret
out
push
cmp
mov
sahf
shrb
pop
sub
decl
and
mov
aaa
xchg
and
shr
fwait
int3
ds
lret
cmp
mov
dec
fdiv
lock
call
fdivs
pop
mov
cmc
decl
xor
pop
in
mov
jo
test
push
sbb
ja
push
sti
lods
adc
daa
adc
aad
pop
jle
jmp
pop
aam
dec
mov
in
sarb
mov
push
in
pop
pop
and
cltd
xor
xchg
mov
in
int3
aam
jge
pop
jg
aaa
daa
jne
lods
xchg
addr16
subl
push
push
lds
fs
sub
lret
pop
pop
pop
lods
cltd
mov
xchg
and
pop
dec
jne
iret
lock
xchg
mov
js
ja
jne
sub
xchg
xchg
xor
mov
lock
sahf
repz
adc
insb
jp
cmp
adc
popa
mov
aam
mov
cmpsl
sub
push
jne
adc
es
int3
xchg
adc
adc
mov
xor
ljmp
stos
cmpsl
dec
in
lds
scas
xchg
in
outsb
push
adc
cmpsb
pop
jne
pushf
and
dec
add
sbb
loopne
sub
pop
shlb
push
hlt
lret
icebp
push
cmp
jge
jo
nop
push
aaa
inc
insb
stos
inc
std
shll
inc
je
add
sbb
into
mov
insl
mov
push
clc
in
xchg
dec
pop
pop
cmp
jecxz
jbe
adc
mov
fs
imul
push
mov
sbb
and
pop
popa
lds
push
imul
sub
dec
fstl
adc
lret
test
ret
aam
loope
or
add
fwait
add
hlt
pop
stc
sub
pusha
mov
outsb
mov
les
ljmp
cmp
dec
aam
mov
jnp
mov
aam
hlt
lret
or
imul
jbe
leave
pop
addr16
and
sbb
aam
jmp
and
dec
cmp
loope
dec
xchg
jb
pushf
insl
or
add
stc
fisubl
clc
push
inc
pop
fs
clc
int3
mov
shr
mov
cmp
mov
sbb
pusha
jns
pop
dec
mov
leave
xchg
call
push
xchg
pop
jl
and
jbe
subb
lock
dec
dec
test
mov
mov
pop
andl
outsb
lods
out
fbld
xchg
imul
hlt
scas
scas
sti
fwait
dec
push
xchg
leave
negl
and
cmp
cmpsl
test
out
ljmp
fldenv
xorb
lods
or
lds
push
inc
cmc
push
xchg
imul
push
roll
jae
xor
stos
xor
das
cmp
fistl
fwait
or
rorb
pop
add
pusha
jae
pop
mov
xchg
pop
xor
fmulp
mov
pop
push
pop
xorb
dec
pop
out
sub
pop
adc
dec
xlat
pop
add
mov
popf
adc
gs
into
pop
in
dec
frstor
sar
lods
dec
stos
xor
jmp
mov
in
lret
loop
enter
push
inc
dec
pop
jle
dec
inc
sbb
sub
sbb
daa
fisubrs
mov
es
adc
stos
out
outsb
pop
ljmp
xchg
cld
sti
adc
ja
mov
test
std
adc
mov
mull
and
add
shrl
push
mov
adc
aaa
pushf
rorl
ficompl
sbb
mov
mov
xor
popa
call
out
mov
inc
cld
mov
dec
jae
fistl
sbb
add
repz
sar
xor
cmp
les
adc
clc
sahf
mov
outsl
mov
lahf
nop
jb
cmp
jne
inc
call
or
loop
pusha
push
stos
cs
lcall
mov
push
enter
insl
cmpsl
test
fld
add
popf
mov
xchg
push
clc
rcrb
icebp
mov
xchg
scas
aad
loop
mov
mov
jb
fidivrs
add
xchg
xlat
xor
push
push
xchg
in
sbb
leave
out
shll
mov
push
imulb
adc
mov
jmp
xor
out
xor
aam
or
jno
cmp
test
ret
into
notb
clc
ss
mov
sub
jo
enter
movzbl
je
fwait
push
add
cmpb
ret
call
pop
fsubrl
lret
dec
fcom
bound
fs
iret
stc
in
mov
cmpsb
ja
pop
cmc
fildl
sti
arpl
inc
push
pop
jp,pt
push
lock
loop
sbb
insl
out
shrl
mov
adc
mov
pop
repnz
sbb
in
stos
sbb
fidivrl
jns
ljmp
jne
sub
inc
inc
add
jne
lea
cli
lods
push
fists
faddl
push
les
fsubrl
rcl
dec
cmp
incl
pop
jne
jmp
sarb
sbb
xchg
pusha
scas
mov
popa
pop
in
lret
pop
or
subl
inc
push
adc
imul
lret
mov
std
or
insl
test
fs
sbb
rcl
nop
je
sub
aas
lods
pop
rcll
lock
pextrw
or
add
jl
add
iret
dec
mov
outsb
scas
ljmp
inc
sub
pop
push
and
sahf
dec
stos
fcoml
js
adc
scas
add
mov
add
imul
push
inc
push
and
and
xchg
inc
push
push
dec
in
jl
adc
pop
outsb
or
lea
cli
xchg
shrl
push
cltd
and
dec
and
push
notb
ds
cmp
pop
fucomi
scas
imul
incl
mov
push
adcb
mov
mov
repz
xor
loopne
pop
enter
daa
in
sub
fildl
ss
xor
loop
fisubl
cmp
test
inc
in
sub
inc
add
xorb
inc
adc
inc
sub
pop
mov
movsl
mov
xchg
aad
adc
pushf
xchg
jbe
lods
enter
scas
outsb
aas
pop
fisubl
lret
arpl
sbb
mov
stc
mov
xchg
sub
dec
pop
mov
shrb
push
push
cmpb
xchg
aam
pusha
or
outsb
mov
call
dec
sub
adc
mov
dec
sbb
out
push
xchg
in
pop
sbb
pop
and
sub
loope
pop
pop
repnz
lods
adc
jge
andb
cli
test
notl
push
mov
jo
pushf
inc
dec
adc
ficompl
hlt
int
popa
inc
mov
fistl
sbb
sub
mov
xchg
jnp
in
fwait
push
mov
movsl
loop
push
xchg
fsubr
inc
negb
pop
push
int3
and
mov
inc
cld
mov
push
inc
stos
movsl
xchg
fsubrl
lods
xor
sub
fldcw
lock
inc
mov
pop
push
adc
les
adc
out
lds
cwtl
adc
sub
dec
int
xchg
or
sysret
xlat
les
out
aad
int3
adc
out
xchg
pop
fwait
repz
lock
adc
aam
pop
das
mov
sahf
push
pop
rorl
popf
fucomi
les
sub
sbb
cmp
loop
pop
mov
stos
mov
inc
jp
inc
in
sub
out
jge
bound
xor
adc
push
test
in
mov
out
adc
arpl
mov
mov
mov
stos
es
push
dec
pushf
inc
mov
add
adc
and
pop
out
pop
xchg
pop
mov
inc
dec
hlt
sub
push
cmc
rolb
inc
ss
jno
dec
or
arpl
pop
xlat
outsl
inc
out
test
cmp
cmp
ljmp
push
jns
popf
mov
cmp
xor
ljmp
push
out
loopne
sub
aad
mov
cmpsl
push
mov
into
pop
pop
cmp
mov
and
sub
rorb
inc
in
dec
mov
imul
ret
lods
dec
xchg
push
mov
pop
inc
bound
call
jmp
add
enter
jae
es
jmp
loop
mov
mov
jne
mov
scas
cli
sbb
pop
lcall
stos
outsl
fucomip
cmp
popa
cmp
mov
cltd
fst
mov
rcrb
in
xchg
pushf
ljmp
jno
pop
daa
push
fs
cld
jns
mov
push
push
ja
pop
mov
pusha
or
fsub
or
mov
nop
faddp
mov
add
faddp
out
pop
rcr
imul
add
adc
mov
test
leave
cli
aaa
sti
xor
pop
mov
movsb
sbb
lods
hlt
cli
jmp
in
cmp
ret
cs
mov
int3
rorw
adc
pop
rcrl
push
add
pop
loopne
push
xor
xchg
cmp
in
and
xchg
mov
testb
xchg
xchg
nop
stos
pop
inc
pop
pop
aaa
mov
divl
push
fdivrs
mov
dec
pop
mov
cli
jae
and
clc
addr16
mov
lods
cmpb
push
xor
mov
pop
cmp
imul
mov
push
lret
inc
loop
push
cli
outsb
imull
jns
xor
fisubs
cmpsb
mov
sbb
pop
sbb
inc
add
test
jnp
fstpl
xor
sbb
subb
xchg
loope
daa
imul
and
test
das
pop
sbb
arpl
lods
push
rolb
push
xchg
mov
jbe
pop
push
mov
leave
push
enter
add
push
xor
cmp
cmp
cwtl
inc
mov
sti
and
cld
and
mov
and
cmpsb
imull
inc
pop
xor
sub
orb
xchg
test
jl
mov
and
xchg
dec
loopne
sarl
lods
outsl
sub
nop
out
xchg
xor
cmpsb
jge
addr16
push
out
fcoml
inc
push
xchg
push
mov
mov
jnp
cmc
aam
sub
or
aaa
fldl
adc
les
loopne
aam
inc
xchg
aad
out
jns
or
push
jno
and
jo
into
xor
jbe
jbe
insb
and
mov
mov
cmp
into
add
push
sbb
jns
cmp
loope
sub
or
and
adc
xlat
scas
xchg
inc
in
repnz
out
bound
inc
sbb
mov
sbb
call
push
out
das
mov
pop
push
add
gs
sub
and
adc
cmpsb
enter
scas
jno
das
jg
push
jmp
subl
je
add
fsubl
cld
inc
xor
add
adc
stc
pop
push
push
xor
push
mov
leave
jne
aam
imul
aam
adc
into
pushf
loopne,pn
pushf
or
les
or
imul
jl
cmp
insb
or
cld
push
mov
popf
jl
pop
aas
mov
fdivs
cmpsl
cltd
mov
mov
adc
inc
pop
pop
icebp
jnp
push
and
gs
pop
and
test
xchg
fs
pop
pop
loop
pushf
and
jnp
inc
rcrl
sti
out
scas
pop
xchg
aad
es
inc
sbb
fsubrs
xchg
int3
int
stos
je
push
xchg
mov
aaa
xchg
rclb
cmp
xor
int
leave
js
rorb
add
xchg
sbb
pop
mov
xchg
lahf
jmp
jp
pop
xchg
out
cmpsl
lods
ljmp
push
lock
mov
and
inc
and
inc
add
push
int3
ljmp
out
or
dec
gs
xchg
cld
int
push
lahf
jb
jbe
movsl
enter
mov
pop
insb
je
xchg
xor
pushf
int
stos
sti
adc
stos
jbe
std
jl
pusha
cld
xor
mov
cmpsb
push
clc
jp
pop
cmp
mov
rcrl
cmp
pop
jp
dec
ds
pop
sbb
cmp
cld
imul
das
push
and
gs
in
or
push
fisttps
jecxz
sub
pusha
mov
cltd
and
cmp
cltd
adc
loop
out
sub
jbe
iret
lahf
inc
push
dec
sarl
mov
adc
scas
fmuls
loopne
or
jae
and
mov
in
shll
fwait
xchg
lret
push
in
mov
cmp
jo
jb
lret
xor
mov
push
xlat
out
enter
push
outsb
loop
repnz
and
jl
sbb
sarb
icebp
mov
add
and
push
xchg
dec
dec
xchg
cmpsb
dec
cmp
xchg
push
addr16
xor
repnz
adc
xchg
lods
jbe
cmp
push
ds
test
push
or
jmp
and
cmpsb
add
ss
mov
je
xchg
adc
mov
adc
sub
push
ja
mov
add
jmp
andb
mov
out
cwtl
pop
xor
sti
and
push
mov
or
das
jnp
mov
push
jle
movsb
jne
pop
jl
mov
aam
ds
or
xor
xchg
push
xchg
call
pusha
rcll
push
insl
dec
cmp
add
cmpsl
xor
jg
jbe
adcl
fimull
imul
jge
outsb
inc
ss
scas
xchg
shrl
ficoms
loope
and
cmp
lret
insb
lret
aas
dec
leave
and
and
lea
fucomi
add
mov
and
jg
xchg
push
ss
push
and
notl
or
imul
sub
xor
mov
sub
fsubrs
sarl
lea
ljmpw
push
mov
pop
fwait
popa
pop
sbb
or
add
or
or
or
mov
insb
out
mov
imul
or
push
mov
call
jmp
adc
loopne
mov
mov
stc
dec
outsb
insb
pop
outsb
and
pop
mov
aaa
inc
je
cwtl
add
jecxz
inc
adc
fmull
arpl
enter
shrb
test
lea
mov
xchg
dec
scas
mov
hlt
cwtl
mov
das
mov
pop
adc
inc
jp
mov
pop
xchg
sub
inc
fs
rcrl
xor
xchg
dec
jecxz
loop
aas
xlat
mov
inc
mov
pushf
arpl
inc
cld
incl
and
lret
sbb
ret
jnp
push
sbb
jecxz
imul
pop
dec
es
addr16
pop
or
add
or
add
popa
enter
stos
push
pop
xchg
ja
imul
aam
test
test
jno
in
inc
cltd
addr16
jmp
adc
xchg
xor
rorb
mov
inc
pop
scas
imul
sub
mov
idivb
fidivl
out
dec
add
bound
cli
jne
fidivrs
iret
out
mov
mov
push
jo
sub
and
jo
pop
outsb
popf
pop
sbb
xorb
roll
outsl
rol
xchg
mov
out
cltd
sahf
sub
inc
je
xor
and
inc
js
and
test
sub
cmp
add
pop
dec
fcompl
das
pop
sarb
dec
jp
jle
lods
sbb
mov
aam
jns
cmp
mov
xchg
pop
mov
pop
gs
out
and
in
pop
in
cmp
das
sbb
sub
add
inc
ja
repnz
sbb
fildl
cmc
aad
push
and
add
jb
fists
repnz
subl
stos
loope
push
pop
pop
rcl
movsb
test
xor
inc
mov
data16
insb
stc
cmpsl
add
xchg
pop
cmp
mov
adc
jp
movsb
and
ljmp
push
add
mov
xor
add
dec
adc
lret
call
pop
cli
bound
test
dec
imul
inc
test
jecxz
mov
push
mov
mov
push
jge
mov
xchg
adc
mov
adc
mov
xchg
adc
sbb
push
adc
test
cmpsb
dec
cmp
sub
push
adc
shlb
lret
les
lahf
pop
das
jl
push
sub
push
aam
enter
jo
sbb
out
out
mov
jp
lahf
loope
jb
movsl
sbb
sub
pusha
mov
dec
fsubs
jp
cmp
cwtl
pop
ljmp
cmp
add
imul
jecxz
das
sbb
daa
pop
xchg
push
aaa
mov
ret
outsl
addr16
inc
cvtpi2ps
pop
test
cmc
push
mov
js
push
dec
pusha
mov
outsl
inc
icebp
jp
out
mov
fistps
fwait
sbbb
pop
ja
adc
pop
adc
in
sbbb
int
adc
insl
jbe
aam
int3
push
icebp
push
sbb
outsl
or
pop
lods
fwait
stos
icebp
cli
dec
daa
sub
out
mov
hlt
dec
out
std
mov
push
or
fidivrl
dec
adc
lret
add
adc
dec
jle
or
orb
and
sub
sub
subb
mov
adc
cmpsl
xlat
lods
scas
inc
daa
xor
xor
xchg
pop
and
cli
es
ficoms
push
cmp
or
cwtl
cmp
mov
xor
clc
jmp
mov
imul
stos
inc
adc
mov
out
ja
xlat
mov
test
rorb
push
loope
rclb
lret
sti
sub
xchg
cs
rolb
test
adc
xchg
shll
mov
fwait
add
js
xbegin
into
dec
iret
mov
mov
in
mov
mov
daa
fistpll
cmpsl
stos
mov
jae
dec
dec
mov
pop
inc
or
lret
test
ds
lock
jl
sbb
push
mov
or
jne
loopne
fwait
addl
cmp
jle
iret
lret
inc
push
dec
and
sub
jb
jne
adc
stc
sbbb
xchg
xor
mov
cltd
adc
xchg
lahf
sub
ficoms
popa
mov
out
pop
xchg
jp
scas
pop
daa
in
pushl
jmp
add
push
aad
dec
and
cltd
ffreep
popa
sbb
adc
push
xor
shl
cmc
xor
mov
mov
and
and
sbb
jne
shrl
loopne
jge
xor
push
fstpl
jmp
and
pusha
jmp
mov
mov
aas
fistpll
int3
pop
hlt
insb
xor
test
or
lret
push
ror
ret
ljmp
jne
or
add
sbb
sub
ljmp
stos
shrb
xchg
pop
mov
pop
sarb
cmpsb
cmp
shrl
shr
cmpsb
ja
mov
lods
sub
inc
pop
push
in
fisubl
nop
cs
sbb
pop
cmp
loopne
pop
jmp
adc
add
decl
pop
je
sar
dec
jmp
subl
in
push
jg
not
push
lahf
mov
fnsave
pop
iret
orb
insl
sbb
por
and
mov
sti
mov
push
into
leave
jns
or
shlb
and
inc
popf
out
data16
scas
mov
inc
loopne
ret
mov
dec
push
pop
imul
scas
jae
xor
add
sarl
and
mov
sarb
xchg
mov
lret
and
mov
dec
xor
push
xchg
leave
in
insl
jne
jbe
push
fidivl
mov
xchg
add
dec
mov
jge
out
stos
mov
arpl
adc
sbb
cmp
mov
xchg
sub
pop
mov
sahf
xchg
in
sti
in
and
sbb
test
test
loop
pop
sbb
xor
sub
mov
repz
cmp
inc
data16
mov
cmc
add
jl
push
imul
adc
in
mov
jmp
and
adc
idiv
aam
cmp
sub
cltd
js
adc
fidivrl
xchg
and
das
sbb
test
ficomps
push
bound
xchg
dec
scas
add
mov
mov
sbb
push
lock
js
sub
repz
sub
jae
ficompl
outsb
addb
js
jge
cmp
push
sbb
in
cmp
mov
jecxz
mov
inc
je
mov
mov
sub
icebp
loop
in
sbb
jmp
shl
push
adc
popf
inc
insl
mov
pop
jp
cmp
movl
jle
in
pop
mov
jmp
jbe
js
ret
arpl
mov
xor
jo
xor
nop
sbb
dec
adc
outsw
mov
add
sub
clc
dec
lock
cmp
cmpsb
or
mov
xor
push
cmp
ror
je
movsb
mov
xlat
inc
scas
inc
lcall
movsl
ret
inc
int
xchg
sbb
js
adc
lock
push
lds
in
jne
jae
andb
inc
das
mov
jl
data16
dec
mov
outsb
lcall
pop
ja
lods
stc
lods
or
mov
movsl
inc
ffreep
fdivs
mov
das
cwtl
jae
xchg
adc
pop
xchg
pop
jo
sub
rorb
mov
pop
mov
or
push
sub
lret
shll
clc
sbb
xchg
push
push
pusha
lea
jle
nop
ret
out
daa
stos
jg
add
lret
arpl
outsb
jmp
repnz
lock
add
cwtl
mov
adc
stos
lret
daa
insb
test
xor
inc
cltd
shlb
xchg
xchg
dec
mov
push
test
mov
ja
add
dec
add
cli
xor
cmp
movsb
jb
into
dec
mov
mov
jge
mov
mov
dec
jns
cwtl
lcall
sbb
add
ror
xchg
repnz
in
push
mov
cs
sub
jno
push
cmpsb
lods
or
mov
not
dec
sbb
loopne
pop
and
sub
pop
ss
ss
and
dec
pop
dec
xorb
mov
addl
js
xor
push
cld
imul
inc
repnz
ficoms
fadds
or
sub
ficoms
push
or
lret
test
scas
push
loop
bound
movsb
addr16
ss
arpl
mov
mov
stc
jae
adc
movsl
loope
sub
pop
cs
cmc
mov
or
inc
jne
push
jns
sarl
shll
cmpsl
aaa
add
add
fs
jbe
aas
pop
xchg
popa
in
int
js
dec
xchg
push
lock
es
fbld
out
add
fldt
lods
jo
outsl
aam
xchg
mov
sub
sbb
push
jmp
push
adc
lret
popa
inc
inc
xor
jmp
add
and
fimuls
ds
dec
js
ja
inc
shrb
dec
fwait
add
xor
stos
lea
testl
ret
inc
mov
ficoms
lods
lea
fwait
ret
out
shrl
pop
nop
jge
pop
xor
and
pop
addr16
aad
pop
mov
add
sbbl
xchg
push
xor
test
stos
bound
mov
xor
cmp
jbe
lods
aad
adc
dec
and
mov
mov
repnz
in
mov
mov
adcl
int3
xchg
sub
das
mov
cmpsb
jae
ljmp
addb
push
imul
jmp
xchg
pop
lret
test
dec
mov
mov
or
clc
mov
cs
int3
ficoms
or
out
nop
cmp
xor
andb
sub
dec
sub
xchg
xchg
imul
int
inc
jae
and
sub
or
out
jb
ror
scas
sub
xchg
mov
mov
mov
add
outsl
lahf
mov
lods
mov
and
add
push
lea
ja
testb
aas
mov
mov
in
lcall
lods
cltd
adc
mov
data16
and
data16
sub
fsubrl
and
negb
adc
pop
jle
jmp
dec
insb
cmp
rcll
popa
movb
jbe
and
fstl
cs
cmp
xlat
sub
mov
scas
mov
push
aaa
jo
cmp
xchg
mov
mov
mov
aam
pop
insb
pop
divl
dec
and
lcall
xchg
iret
pusha
add
mov
mov
negb
ret
mulb
or
sub
jno
inc
leave
mov
decb
mov
incb
or
cmc
xchg
mov
push
dec
ret
pop
ljmp
pop
repnz
lahf
cmp
gs
dec
leave
inc
call
in
idivb
xchg
cmovl
ja
inc
insl
inc
scas
into
fidivs
clc
in
mov
pusha
test
inc
xor
jne
in
push
ds
inc
loopne
std
or
addr16
sbb
xchg
je
iret
inc
sbb
jo
loope
rolb
mov
pop
adc
sbb
jae
jecxz
xchg
rcl
pop
jg
lret
shll
sbb
fisubl
andl
pop
push
cwtl
movsl
dec
xor
xor
sbb
lahf
inc
test
test
es
cwtl
out
pop
sub
mov
test
cltd
or
add
lods
sbb
sbb
gs
scas
rorb
add
lods
dec
das
mov
mov
pop
dec
xchg
clc
or
cmpsb
cmp
push
sub
mov
mov
mov
lods
hlt
push
aad
cmp
in
add
imul
fisubrl
fdivl
lret
push
cmp
movb
lahf
fistl
sahf
aad
mov
jl
loopne
push
jbe
and
repz
les
out
cvtdq2ps
iret
lock
cmp
jmp
cmp
mov
outsl
xor
in
into
xchg
or
adc
xlat
sub
lods
shll
fcomps
mull
sarl
shl
stos
in
cld
xchg
dec
cmpl
adc
jo
lcall
mov
in
sub
mov
outsb
shl
scas
fisubrl
inc
stos
stos
and
in
sub
loop
and
cmp
flds
ja
pop
xchg
cmp
pop
js
ljmp
push
fwait
test
xchg
cld
inc
sub
dec
xor
and
and
add
cmpb
mov
or
inc
lods
ret
aad
imul
stos
in
adc
enter
sbb
dec
ret
ja
mov
or
jb
mov
fs
cmp
adc
xchg
pop
adc
xor
pop
sub
dec
xor
addr16
sti
cmp
fwait
addr16
jecxz
in
fs
sti
push
lock
mov
push
jno
or
fiaddl
adc
fadds
dec
jg
in
fstpt
fisubrl
lahf
repnz
mov
iret
adc
add
pop
fs
out
cbtw
sbb
add
fwait
xor
stos
insb
addb
testl
sbb
int
dec
mov
inc
call
pop
cltd
mov
negb
mov
and
mov
js
inc
gs
mov
mov
or
mov
mov
sbb
int
stos
fidivrl
jo
add
ljmp
lds
sub
add
repnz
fidivl
push
cltd
stos
popf
ljmp
les
or
in
imul
stc
int3
ljmp
outsb
test
jge
outsl
push
sbb
scas
adc
adc
cmp
mov
push
dec
into
repz
frstor
mov
mov
imul
xor
faddp
mov
pushf
mov
dec
xchg
out
mov
sti
in
inc
dec
xchg
pushf
cmp
aam
adc
arpl
leave
ds
add
adc
js
sbb
inc
lret
cmpsl
inc
dec
xchg
out
push
inc
dec
xor
cs
dec
cmp
xlat
mov
roll
cs
sub
loopne
xor
jg
sub
sbb
dec
jecxz
pop
cmp
cld
repnz
jg
and
sbb
pop
cmpl
lock
int
jmp
xchg
faddl
xlat
jae
mov
nop
stc
mov
dec
jle
ljmp
ret
xor
cmpl
filds
xchg
or
lret
lock
adc
jp
and
or
or
repz
outsb
sysret
mov
in
pushf
insl
movsl
pop
mov
fildl
imul
adc
dec
in
mov
xor
push
mov
inc
cld
jae
dec
dec
cmpsb
and
dec
es
add
sbb
lods
pop
dec
push
sub
test
iret
xchg
insl
cmp
and
and
in
shll
mov
int3
subl
mov
jecxz
xorl
push
mov
jg
sar
push
sub
mov
pop
pop
pusha
cmpsl
dec
imul
xchg
rol
stc
cli
and
insb
outsb
ret
cmpl
xor
push
flds
addr16
push
inc
xor
test
cmpsb
jecxz
jne
jno
cmp
les
push
xor
cmp
lods
fdivrs
mov
mov
inc
add
mov
std
jp
nop
imul
pop
subl
add
jg
fadds
pop
fistl
cmp
in
xchg
xchg
jge
scas
jmp
ljmp
jge
cwtl
add
icebp
cld
push
int
addr16
xor
lret
fdivl
mov
mov
cli
jle
xor
sub
jecxz
push
fsubl
mov
push
xor
xchg
dec
pop
int
cmp
push
stos
lahf
clc
dec
sub
imul
inc
ds
and
test
jl
push
mov
insl
dec
adc
or
inc
cs
mov
xor
jbe
sti
xor
or
jecxz
and
add
test
pop
jl
daa
sub
std
fistps
and
mov
in
mov
ds
inc
jnp
xlat
push
jl
mov
int
mov
xchg
mov
loope
insl
in
daa
mov
jp
int3
inc
mov
jbe
pop
xchg
in
pop
stos
inc
jns
cmp
sub
sub
pop
mov
mov
ss
jmp
push
push
jecxz
inc
scas
push
push
sbb
imul
and
dec
pop
in
pop
xor
mov
mov
test
hlt
inc
adc
sub
mov
mov
ret
push
enter
jae
mov
jb
jmp
mov
ljmp
xchg
mov
icebp
notb
mov
or
sbb
mov
jno
xchg
jno
and
cli
add
fwait
add
or
cmp
dec
jle
push
lods
push
ss
pop
mov
xchg
lock
fstl
mov
stos
cltd
sbbb
jl
xchg
outsb
adc
pop
stos
push
sbb
mov
dec
adc
lock
push
and
xor
pop
aas
test
movsb
call
pop
iret
dec
out
sti
test
mov
popa
cltd
adc
data16
outsl
scas
mov
dec
std
jmp
std
popa
lds
cmpsl
sbb
jb
or
mov
mov
ds
pop
in
push
add
sarb
mov
xchg
insl
mov
fs
xor
cli
mov
cmpsb
out
nop
cli
jo
fdivrp
mov
pop
cmp
cmp
leave
insl
mov
sbb
rorb
jecxz
dec
aad
dec
jl
and
das
dec
clc
mov
dec
mov
mov
push
clc
mov
stc
lcall
pop
sbb
insb
inc
out
aas
jo
or
icebp
add
cmp
mov
scas
pop
ret
fisubl
sbb
lahf
pushf
push
outsb
jle
aad
push
mov
les
ljmp
jbe
xor
nop
roll
mov
and
and
cmpsb
mov
cld
mov
enter
cli
jle
or
in
inc
jbe
shlb
mov
xor
iret
push
in
sbb
ds
popa
push
loop
aas
xchg
in
push
xor
pop
jecxz
fidivs
int3
cmp
in
repnz
adc
loope
pop
data16
sub
mov
insb
clc
jnp
xor
dec
cmp
mov
add
popl
or
sbb
inc
leave
fildl
lretw
dec
dec
je
jg
xlat
aaa
push
cli
xchg
inc
jb
cmpb
cmpsl
mov
sbb
sub
adc
mov
repz
pop
mov
ret
fistl
mov
jno
testb
pop
test
sub
mov
hlt
adc
enter
push
and
les
inc
pop
cld
dec
lret
imul
mov
xchg
mov
lret
outsb
fs
ss
jne
repz
jns
xchg
sub
inc
outsb
jne
js
cmp
int
or
push
push
in
loope
sub
bound
or
push
cld
shrl
lods
test
rcl
inc
cli
popa
inc
push
repz
or
in
cmp
or
sub
push
mull
sub
lods
addr16
or
xor
outsb
mov
push
dec
xor
into
push
cmpsl
fistl
shlb
dec
movsl
out
jmp
int
lahf
mov
or
inc
pusha
dec
dec
imul
cmp
sub
movsl
or
push
nop
mov
jp
fs
cmpsl
adc
dec
movsl
adc
mov
adcb
js
cli
imulb
push
cmp
and
out
push
or
inc
sahf
test
ja
stc
jl
xchg
enter
repz
sbb
adc
push
pop
sbb
ljmp
sbb
xor
popa
mov
pushf
testl
mov
xchg
das
in
dec
dec
notl
sub
mov
and
add
lcall
lret
out
mov
rolb
mov
jne
jae
mov
sbb
lcall
outsl
sub
inc
sbb
cltd
xchg
xorl
xlat
movsl
jno
inc
ja
cmp
std
aad
loopne
into
dec
cli
push
add
dec
imul
lcall
xchg
lret
mov
hlt
jb
sahf
cwtl
xchg
xchg
jbe
add
lcall
fldt
pop
xchg
inc
lds
ret
sbb
imul
xchg
mov
xchg
add
pop
mov
lcall
rclb
out
enter
mov
mov
int3
das
hlt
mov
jp
inc
cltd
stc
popf
xchg
or
imul
int3
push
orb
imul
sarl
nop
pop
mov
and
sahf
je
bound
in
leave
sti
cmc
bswap
sahf
cmp
mov
jno
adc
shrl
test
or
add
pop
imul
cmp
push
cmp
xchg
fs
insb
xchg
inc
rol
and
push
add
adc
sub
jl
push
sbb
ficoml
lea
pop
dec
loope
stc
out
xchg
notl
push
imulb
dec
test
fs
xor
push
divl
adc
xchg
dec
pop
adc
shrl
dec
pop
xor
mov
push
orb
rcll
jnp
add
pop
sub
sahf
popa
addl
push
mov
repnz
mov
insb
popa
adc
sbb
jp
xor
xchg
mov
dec
clc
adcb
sub
lods
ds
sub
cld
cli
sarb
daa
inc
icebp
int3
dec
adc
es
lods
scas
insl
cmpsl
mov
mov
cmp
in
popf
sbb
insl
jns
xlat
stos
mov
test
hlt
add
pop
push
xor
bound
xor
repz
adc
jle
movsb
and
cmc
xchg
mov
lds
pop
aas
lcall
xchg
xor
pop
xchg
mov
jg
jle
pop
cmpl
lret
fildll
frstor
lahf
enter
test
scas
sub
repnz
cmpsb
sub
aas
and
jl
jecxz
cltd
xchg
test
aas
mov
lds
mov
dec
pop
sub
push
xlat
cmp
test
cs
push
add
stc
inc
inc
jp
ds
mov
mov
sbb
adc
push
adcb
sub
push
mov
cld
out
mov
jne
mov
mov
icebp
fcompl
mov
gs
sub
add
insb
lret
push
fs
movsl
pop
aaa
mov
jne
xchg
jle
in
mov
jle
mov
inc
add
pushf
mov
popa
rcrl
and
sbb
rcll
shrb
add
pop
stc
push
movb
movsb
icebp
test
or
pop
daa
add
push
seta
ret
scas
pop
or
and
add
sarb
xor
lods
cmp
xchg
imul
xlat
cmp
cmp
adc
adc
and
lods
xorl
cs
mov
sbb
mov
pop
mov
call
push
dec
popf
push
mov
out
dec
mov
rorb
push
aaa
push
pop
add
fisubl
mulb
lea
adc
gs
fcomps
mov
jp
movsl
jae
sbb
pop
xlat
cs
mov
adc
xchg
dec
in
ds
or
arpl
add
int3
ljmp
push
enter
push
pop
push
loope
cmpsl
mov
inc
mov
out
mov
xchg
test
jae
stos
fldcw
jnp
sbb
je
sbb
lods
leave
cmp
movsl
ret
jnp
bnd
inc
std
or
mov
and
testb
shrb
call
imul
inc
cmp
cmp
xlat
mov
dec
xchg
paddsw
jns
addr16
adc
push
je
inc
mov
rcrl
mov
imul
lret
clc
mov
push
mov
xchg
add
cmp
stc
adc
out
sahf
loopne
jbe
dec
scas
sub
jbe
repz
sarb
push
dec
in
cmp
mov
jge
sub
pop
scas
in
add
jb
in
hlt
and
insl
mov
cmp
sar
loope
adc
xchg
popa
xchg
mov
jle
jbe
je
mov
test
jbe
shlb
mov
mov
mov
test
xchg
in
fisubs
std
cs
push
jle
rol
jno
cmp
ljmp
mov
sahf
inc
xchg
and
cmp
inc
add
pop
sbb
dec
aas
mov
inc
inc
dec
pop
mov
cmp
add
mov
lock
mov
sub
dec
push
shrl
jp
daa
push
in
repnz
dec
filds
xor
cmp
fs
test
movups
pop
and
ret
fs
enter
mov
ret
push
xor
cli
jb
xor
inc
adc
loopne
pop
mov
or
out
push
lods
inc
stc
addl
add
and
aam
jmp
test
fistpll
cmp
mov
stc
int3
mov
outsl
xor
add
adc
push
out
sti
and
cmp
mov
test
nop
or
scas
or
sub
inc
cmc
in
xchg
shll
inc
fcompl
push
pusha
jns
rcr
fcmove
mov
call
test
fildl
pop
xchg
cltd
cmp
adc
add
mov
outsb
or
iret
lock
sti
push
gs
loope
push
mov
xchg
fisubs
fs
addr16
lret
data16
mov
add
ja
xchg
aam
fwait
daa
xchg
xchg
inc
negl
clc
movsb
pop
cmpsb
jo
sbb
push
lcall
cwtl
repz
vpminub
or
je
sbbl
xlat
dec
inc
jnp
inc
dec
lret
mov
mov
loop
push
pop
je
pop
std
std
cmpsl
jno
sbb
outsb
xor
xlat
pop
cld
ret
mov
out
or
cmp
fmul
mov
test
sahf
mov
pusha
mov
cltd
lea
adc
bound
jl
mov
pushf
sub
loopne
mov
sub
jo
out
in
push
leave
leave
ret
dec
mov
imul
cltd
push
ja
popf
push
xchg
icebp
inc
test
mov
shlb
cmc
xchg
data16
xchg
insl
jo
xor
call
push
mov
dec
adc
loop,pn
mov
mov
jle
xor
inc
fcompl
cmc
stos
js
sub
cmp
imul
popl
fwait
das
mov
dec
sbb
aas
mov
push
inc
push
or
add
sbb
xor
cmp
mov
mov
mov
push
loop
mov
test
ljmp
jp
loope
sbb
les
ja
xor
inc
cmp
out
icebp
and
es
repz
movsb
xor
pop
xchg
xchg
mov
push
pop
in
jle
je
dec
xchg
addl
nop
ja
pop
loopne
leave
in
decl
not
repnz
mov
and
in
and
or
ljmp
imul
ret
fldt
and
pop
push
and
or
xchg
popa
je
sahf
jmp
or
or
loope
push
hlt
je
pop
dec
fisttpl
mov
fndisi(8087
out
outsb
push
mov
xchg
leave
addl
mov
xchg
stos
fwait
adc
lods
adc
enter
jg
fs
icebp
mov
imul
out
jge
dec
movsb
sub
xorb
imulb
cmpsb
scas
sbb
xchg
lods
adc
dec
imul
and
test
dec
insb
mov
mov
mov
sub
or
push
lcall
mov
sbb
iret
jb
popl
pushf
and
and
dec
imul
hlt
add
or
mov
mov
testl
xchg
sub
ljmp
push
lahf
push
xorl
mov
mov
adc
aad
out
xchg
or
sti
cmp
std
rolb
add
add
out
add
jmp
push
mov
data16
lret
cmp
and
outsl
pusha
popf
sarb
insl
cmp
pop
std
outsb
stc
push
mov
add
orl
cmp
pop
bound
inc
pop
mov
add
je
add
sub
fisttpl
popa
movsl
cltd
mov
mov
xchg
add
xor
cmpsb
addl
and
cmpsb
cmc
iret
js
orl
pop
dec
sub
adc
xor
or
jg
pop
pop
fisubl
xorl
fdivl
dec
adc
bound
lahf
add
or
aad
add
mov
pop
ljmp
lea
or
pop
mov
fldt
call
cmc
pop
push
in
ficompl
cld
mov
fadds
movsl
jge
push
pop
mov
cmp
arpl
cli
or
adc
ret
xchg
mov
movsb
push
repz
cli
cmp
stos
push
out
js
sub
enter
stc
aaa
mov
sub
rcrb
and
popf
lcall
dec
or
pop
lcall
sub
dec
xchg
inc
pop
in
jge
arpl
cmpl
lret
sub
rorb
xchg
out
jmp
inc
jle
int
outsl
or
je
js
ds
xchg
or
shl
sbb
mov
or
rolb
jle
dec
mov
rclb
add
mov
test
push
shrl
outsb
sbb
test
mov
add
mov
cmpsl
cmp
mov
loopne
mov
sbb
xchg
pop
push
ret
xchg
xor
push
inc
test
add
jbe
insl
lcall
lahf
push
fistpl
xchg
bound
adc
ds
out
hlt
pop
and
mov
iret
mov
sbb
pop
lock
push
scas
or
push
dec
lods
cs
cltd
mov
leave
adc
cld
lods
mov
scas
mov
cli
inc
mov
mov
xchg
sbbb
fisubrl
jb
cltd
push
mov
lcall
in
nop
ret
push
lods
mov
je
mov
andl
pop
mov
adc
xor
scas
jno
rcl
out
cmp
ret
inc
jg
dec
out
int3
mov
in
test
mov
mov
scas
push
cmp
xchg
cs
push
push
push
adc
dec
shlb
cmpsl
stos
inc
cmc
inc
popf
jl
inc
out
dec
cli
xchg
outsl
xlat
outsb
test
aam
addr16
xchg
cwtl
jbe
jg
mov
sub
xor
out
arpl
ljmp
mov
push
mov
in
stc
dec
aaa
sbb
push
ljmp
cmp
pop
adc
call
fnstsw
sbb
jmp
adc
pop
or
jb
inc
push
lret
cmp
dec
shlb
sub
repnz
xchg
nop
in
test
mov
rorl
je
push
popf
out
jmp
mov
fs
call
sub
in
adc
fists
test
cmp
aaa
dec
push
push
enter
add
dec
out
fidivl
pop
aaa
movsl
stos
daa
xchg
mov
mov
push
cli
dec
popa
jecxz
add
and
adc
push
mov
or
shrb
xchg
sar
clc
xor
xor
push
mov
dec
dec
lret
inc
shlb
mov
sbb
adcb
ret
sub
inc
cmp
jae,pt
sti
jmp
cmp
push
adc
lock
aam
mov
stc
sub
sbb
sahf
ja
and
fwait
mov
or
arpl
sub
inc
and
mov
push
je
aad
inc
std
fldcw
pop
pusha
pop
jo
xor
mov
sub
jne
div
stos
aam
jp
cwtl
call
adc
jb
xchg
jnp
mov
into
cli
xor
sahf
fnstcw
cli
jb
aad
andb
cmc
jmp
addb
push
adc
movl
mov
adc
or
xor
mov
fs
dec
shrl
ja
call
bound
cmpl
or
mov
sbb
out
ljmp
out
push
dec
stos
aad
pop
jno
popf
cmp
dec
or
pop
test
pop
ds
imul
push
mov
into
add
mov
rol
and
inc
test
lea
ja
xlat
dec
mov
lcall
cwtl
sar
push
cltd
mov
stos
stos
std
sub
ja
adc
dec
lret
jno
test
mov
loop
jge
lods
sti
mov
adc
add
psubd
inc
mov
or
pop
pop
sbb
inc
adc
cmc
mov
cmp
push
pop
jle
add
mov
test
call
add
subb
adc
jecxz
xor
scas
mov
mov
xor
dec
jl
sahf
faddl
loope
cwtl
nop
ret
xor
add
mov
dec
lret
dec
sti
std
mov
aaa
lahf
push
pushf
push
add
cs
pop
das
mov
lret
or
and
push
aam
movsb
lock
repz
jbe
mov
push
popa
or
ror
jg
lds
mov
testl
fld
ljmp
es
adc
add
dec
jg
inc
fsubr
iret
push
dec
jo
pop
sarl
push
idivb
push
icebp
adc
les
lock
sub
mov
sub
xor
mov
lods
shlb
cs
sbb
movsl
int3
mov
clc
xchg
fcomip
add
sbb
add
rcrl
cs
pop
cmpsb
dec
jb
das
pop
push
push
js
imul
jl
les
pop
sahf
mov
int
jbe
mov
shl
hlt
bound
lret
xchg
push
add
aam
ja
lds
repnz
push
push
xchg
pushf
lea
popf
hlt
mov
insl
mov
fistps
xor
fdivrs
or
leave
pop
fcoml
mov
inc
scas
push
mov
pusha
lret
fldl
in
sbbl
dec
jno
cmp
mov
sti
popa
mov
mov
aad
cltd
jmp
imul
push
sbb
test
pop
jb
sbb
ja
inc
int
fcmovnbe
int3
cs
push
xchg
inc
pop
jae
repnz
push
xchg
xchg
jnp
outsl
pop
mov
fiadds
fisubrs
xor
mov
or
xchg
mov
jmp
outsb
imul
lcallw
dec
mov
in
lea
cmp
jge
pushf
aaa
push
shll
mov
idivl
or
inc
fdivp
dec
bound
jno
pop
pusha
xchg
cvtps2pd
js
sub
add
popa
dec
push
in
sub
imul
loop
sub
mov
rcr
jno
movsl
pop
mov
lods
add
ljmp
sbb
adc
push
and
pop
aad
shr
jb
and
ds
cmp
add
sub
push
sub
rclb
mov
fisttpl
pop
ja
mov
or
addl
add
loopne
fyl2xp1
les
inc
out
xchg
outsb
mov
enter
pop
je
movsb
jmp
sbb
dec
outsl
adc
out
pusha
bound
adc
fs
imul
lock
rep
dec
mov
in
add
mov
cmp
mov
inc
addr16
fs
hlt
aad
push
and
faddl
pop
pop
jns
sbb
xchg
mov
xchg
push
push
in
movsl
divl
push
int3
nop
add
loope
mov
adc
stos
jp
xchg
xor
fsubs
dec
out
push
int3
arpl
mov
dec
or
pop
clc
aaa
jle
push
pop
sti
jg
aam
orl
outsl
test
popa
int
dec
xor
push
clc
xchg
jp,pn
subb
sub
fidivs
leave
lret
fwait
jnp
sub
inc
scas
or
jmp
add
push
mov
cmp
movsb
sbb
das
push
jnp
arpl
aad
pop
ds
rcrl
jmp
push
ss
out
shll
out
adc
mov
lret
iret
imul
sbb
ret
loopne
in
or
xchg
test
lahf
stos
mov
jmp
mov
data16
xchg
sbb
bound
arpl
xlat
dec
mov
daa
sbb
sbb
outsl
or
pop
xchg
xor
push
cmp
das
cli
sbb
mov
ja
pop
mov
scas
cmp
jmp
push
push
inc
and
xlat
cmp
stos
rorl
loope
fsubrs
and
push
sti
mov
outsb
push
je
mov
aad
or
mov
lahf
shlb
push
xchg
push
cmpsb
adc
dec
test
push
ss
cmp
mov
and
bound
popf
lds
adc
adc
nop
dec
push
cmp
sti
xchg
and
enter
mov
and
adc
cmp
adc
push
clc
mov
add
enter
pop
int
sbbb
in
cmp
xlat
xchg
pop
and
gs
sub
or
xor
mov
loopne
jmp
out
mov
jb
popf
and
mov
aas
mov
push
icebp
jnp
sub
jne
loopne
jge
in
lcall
push
fadds
cld
cmpl
jae
cli
in
mov
mov
inc
stos
ja
movsl
pusha
mov
mov
add
mov
cmp
pop
jl
jg
sbb
movsb
cs
outsl
dec
jno
dec
add
or
add
insl
repnz
dec
push
mov
add
or
cmp
jg
fcoml
icebp
jle
add
or
mov
push
fs
notb
xchg
movl
sbb
insb
pop
js
jecxz
dec
outsl
out
aad
add
dec
decl
jl
mov
addl
or
sub
jne
pop
jns
lds
push
xor
lahf
cltd
imul
outsb
push
adc
adc
std
add
popa
cmpsb
jne
mov
repz
xor
mov
shlb
enter
mov
repnz
or
xor
ja
add
xchg
adc
hlt
and
pop
je
xor
movsb
adc
movsb
pop
sahf
daa
out
mov
ljmp
inc
sub
lcall
xor
adc
in
xchg
xchg
and
jnp
outsb
sub
lea
stos
test
out
dec
inc
jp
jge
or
pop
adc
mov
mov
push
xor
and
cmp
xor
outsb
pop
mov
mov
add
scas
in
ret
rolb
ss
jmp
push
mov
rcr
loope
inc
xor
rcll
and
pop
inc
cwtl
loope
cmp
adc
xchg
mov
xor
out
je
jnp
mov
sub
adc
outsl
push
mov
jb
ret
int3
sbb
arpl
pop
ljmp
cmp
mov
push
test
lret
dec
popa
mulb
sub
add
ret
adc
add
ss
scas
loop
js
inc
add
or
cwtl
mov
mov
mov
test
add
jb
rcll
ret
dec
insl
adc
or
push
ret
inc
adc
mov
sub
cmc
sub
cld
mov
test
ljmp
push
xchg
stos
jl
push
adc
push
orl
ljmp
xchg
jb
incl
fsubrs
jg
addr16
add
flds
inc
xlat
outsl
adc
xor
lret
jb
push
sarb
imul
in
lods
nop
testb
jle
rol
inc
pop
cltd
insb
mov
icebp
cmp
fcmovu
xor
or
or
add
faddp
fstl
sub
and
dec
inc
cmpsl
adc
jle
movsb
lret
jns
test
gs
mov
test
jl
sahf
jae
adc
sahf
jle
das
fldl2e
addr16
push
out
insl
add
pop
js
xchg
es
jmp
push
data16
or
mov
lcall
jl
sub
inc
mov
movsb
sbb
shl
movsb
cmpsl
gs
add
cmp
cmp
pop
cmp
push
call
xchg
test
push
mov
ret
jae
popf
xchg
jg
rcll
cmp
aas
mov
cmp
movsb
mov
xchg
and
inc
push
pop
jno
inc
mov
mov
insl
bound
and
add
int
mov
xchg
cmp
lock
inc
xchg
adc
xor
out
stc
stos
mov
inc
out
pop
mov
jp
out
jno
insb
cmp
xor
pusha
mov
je
adc
jns
xchg
pop
fisubrs
pop
leave
pop
lods
pop
adc
popa
adc
dec
mov
dec
mov
ja
mov
mov
mov
jp
or
dec
mov
je
sbb
sahf
jl
mov
pop
stos
movsb
add
mov
outsl
inc
mov
mov
or
jo
mov
lods
xchg
int3
xor
gs
push
ljmp
pusha
stos
js
xor
mov
cmp
and
inc
cwtl
mov
mov
fcomps
mov
fnstcw
lcall
outsb
mov
pusha
push
cwtl
xchg
iret
shl
add
xlat
call
adc
or
loop
pop
outsb
and
cmp
dec
xchg
pop
push
mov
mov
clc
inc
jp
jne
scas
jge
xchg
pop
jp
lock
cmp
lock
mov
or
push
and
jbe
out
sahf
mov
scas
mov
inc
les
scas
pop
mov
xor
test
mov
xchg
into
rcrl
jno
sbb
or
jmp
enter
loope
xor
ds
scas
or
mov
fs
xchg
add
arpl
dec
pusha
lods
shr
and
lret
sahf
out
and
cltd
in
shll
maxps
test
mov
mov
movsl
xorl
repz
mov
lret
lock
sbb
movsl
push
adcl
pop
fs
push
add
add
stos
adc
mov
pop
jmp
dec
scas
and
cmp
push
or
stos
lret
xor
jae
stos
imul
jb
ficoms
inc
xlat
in
adc
les
sub
andl
scas
cmpsb
push
outsb
pop
ljmp
adc
loop
add
insb
cmp
enter
mov
pop
ret
repz
daa
push
dec
sbb
and
cmp
mov
sub
out
repnz
jne
push
jno
ficompl
xchg
stos
and
cmp
dec
adc
dec
sbb
inc
dec
cmpsb
cwtl
scas
jl
adc
dec
sbb
iret
adc
sub
inc
out
repnz
icebp
or
dec
out
jbe
js
rclb
mov
sbb
jl
mov
dec
sub
and
sbb
inc
insb
stos
mov
es
mov
jp
cmp
push
add
imul
movsl
jmp
je
and
aam
mov
rcrl
out
pop
inc
sub
inc
cmc
sti
xchg
test
mov
inc
lret
pop
loop
shrl
pop
jbe
or
cmp
mov
inc
mov
lds
icebp
aas
lds
mov
int
scas
shrb
pop
in
fdivrs
call
add
cmpsl
mov
and
shll
jmp
xor
icebp
shll
dec
inc
mov
dec
cmpsl
in
mov
adc
xor
pop
add
jle
sbb
ret
bound
push
push
push
int3
orb
mov
or
jle
mov
xor
xchg
mov
stc
and
andl
gs
add
loopne
xchg
add
dec
add
stos
jecxz
scas
into
sub
jmp
mov
cld
mov
jbe
dec
jae
dec
cmp
jnp
dec
addb
scas
clc
or
xchg
sahf
push
sbb
into
aam
pop
pop
mov
mov
cmpb
mov
ja
sbb
sbb
scas
loope
loopne
cmpsl
arpl
jo
cmpsb
xchg
jbe
out
jp
and
mov
dec
sarb
es
push
repnz
jo
xchg
ret
or
pushf
int3
or
mov
rorl
mov
rcrl
xchg
pop
ja
add
mov
cmp
push
scas
ficomps
mov
jns
fistl
push
out
cmp
adc
dec
push
sub
mov
ja
arpl
inc
mov
shrl
push
jecxz
sbb
fisubrs
sbb
xchg
sub
jnp
rclb
rcrl
lahf
adc
sarl
inc
sub
es
add
aam
mov
testl
arpl
mov
sub
in
js
or
push
xchg
xchg
mov
cmp
ret
lret
repnz
mov
xchg
test
dec
sbb
iret
and
and
xor
dec
cmp
sub
out
arpl
decb
cmpl
mov
cmpl
sub
inc
or
dec
push
inc
sbb
jmp
jnp
inc
dec
loopne
xchg
xchg
jae
xchg
xchg
push
push
mov
push
negl
ja
loopne
adc
jge
and
divb
cwtl
lret
cwtl
push
sahf
xchg
mov
daa
sarl
shr
lcall
rclb
rol
lcall
nop
cmp
xchg
cld
and
or
cmp
cmp
fstps
fs
xchg
add
movsb
jmp
mov
jno
loop
sub
push
add
sub
lods
jp
ss
fistl
scas
push
int
mov
inc
push
mov
xchg
cwtl
xor
cmp
sub
rcl
sub
jbe
fs
xchg
fstpt
in
stos
mov
testb
sub
push
and
or
aas
imul
ret
arpl
das
lods
pop
mov
rclb
inc
xor
adc
or
or
out
push
cmp
jo
push
lds
dec
and
push
or
dec
in
sar
push
jg
sti
sbb
dec
pusha
shrb
je
adc
push
inc
dec
stos
pop
cwtl
xchg
imul
std
xor
xchg
test
or
mov
cmpb
cmp
sahf
sub
imul
cmp
xchg
cmp
rol
lds
test
inc
repz
movsl
mov
mov
sti
fnsave
fwait
or
movsl
mov
sbb
stos
fcomip
aaa
lods
dec
mov
mov
adc
cmp
xor
dec
aad
roll
nop
lods
js
fdivs
fists
adc
dec
pop
jl
fcoml
adc
adc
mov
test
mov
mov
jl
mov
lods
push
lret
daa
xchg
or
lock
in
in
jmp
xor
adc
lock
flds
xor
sti
dec
lret
xlat
inc
push
jecxz
xchg
and
lahf
xchg
sbb
xchg
adc
push
pop
xor
orl
sbb
inc
nop
mulb
pop
adc
push
les
cmp
cmc
into
jb
hlt
mov
movsl
jne
cmc
xchg
sbb
mov
fsubp
cmpsl
pop
into
cld
cmc
add
sbb
push
je
in
clc
push
push
fiaddl
jmp
and
mov
cmpsb
dec
push
jae
mov
adc
notl
sub
push
dec
mov
inc
in
jmp
lods
mov
inc
into
iret
sub
aas
scas
cmp
bound
mov
leave
loopne
cld
das
add
mov
pop
and
inc
rclb
sbb
inc
aaa
lds
pminub
test
dec
mov
out
push
int3
lock
js
repz
inc
or
push
mov
mov
std
and
inc
sahf
aaa
cmp
dec
or
jmp
out
mov
mov
mov
push
sbb
jae
sbb
push
adc
add
insl
test
xchg
sbb
fstps
xchg
cmp
pop
ss
push
mov
mov
leave
repz
jmp
jp
cmp
js
pop
test
test
dec
mov
cltd
ficomps
int3
fsubrs
mov
loope
mov
mov
adc
fistps
jbe
push
mov
push
mov
sbb
lock
call
push
movsl
icebp
jle
stos
inc
and
fucom
cltd
cmp
dec
aam
stos
mov
add
pop
fwait
aaa
dec
icebp
mov
mov
push
inc
mov
scas
lret
xchg
pop
cmp
mov
fimull
lods
dec
jmp
dec
ret
sub
dec
sti
inc
xchg
jmp
jne
lahf
jno
pop
pusha
mov
inc
test
aam
jne
jno
nop
sbb
or
push
cmp
push
in
push
pop
pop
lcall
cmp
les
dec
rcrl
lock
test
mov
enter
stc
int3
cmp
imul
loop
jl
pop
mov
leave
lock
fiaddl
rorb
les
cmp
stos
out
mov
loopne
fsubs
sub
xchg
and
in
jecxz
xchg
cld
pop
or
shlb
dec
fbld
sub
and
mov
in
das
ret
lock
lret
mov
ret
fldt
pop
insl
sbb
ret
into
xor
test
aad
mov
cmp
or
xchg
repz
inc
push
loope
insb
push
jae
mov
xchg
cwtl
pusha
jecxz
dec
push
aaa
icebp
cmp
ljmp
shll
mov
fisubrl
add
leave
mov
fbstp
leave
cmp
xchg
push
jle
mov
xor
inc
sub
add
std
mov
loopne
push
fwait
jns
add
rol
adc
fstpt
gs
push
shll
hlt
out
cwtl
and
push
fistl
sbb
push
jbe
xchg
outsl
mov
fsubrl
sub
push
js
fldenv
ret
dec
mulb
icebp
push
or
sub
push
jmp
mov
dec
leave
dec
push
nop
jnp
pop
push
addr16
dec
repnz
mov
gs
cs
fidivs
mov
outsb
add
shlb
add
jmp
adc
lods
movsl
orb
cld
pop
pop
dec
test
ja
adc
and
or
xor
xor
sub
cmp
jecxz
shrl
bound
leave
dec
cmp
dec
scas
nop
fdivs
daa
aas
xor
lock
shll
lds
lret
pop
lahf
dec
sub
iret
push
or
clc
rcr
cmp
ss
xor
mov
push
pop
sbb
scas
or
in
xchg
pop
push
repnz
clc
jbe
mov
sarb
pop
jg
loop
add
xor
mov
jne
fcoml
add
in
iret
add
mov
sbb
scas
jmp
faddl
fwait
sti
das
outsl
mov
jg
cmpsl
and
jbe
sbb
gs
loopne
xchg
mov
int3
xlat
fdiv
cmpsb
dec
or
and
jno
jecxz,pt
out
les
orb
sbb
mov
pushf
ljmp
pop
fidivrs
add
mov
icebp
pusha
lret
cmpsb
test
out
mov
xchg
sbb
or
fstpl
loope
jno
xor
jmp
mov
jmp
cmc
lahf
sub
divb
dec
pop
or
mov
jp
mov
cwtl
into
pop
scas
cld
into
sub
sbb
cltd
out
jbe
xor
outsl
daa
fmul
sbb
loopne
es
xchg
dec
lods
dec
dec
shll
lahf
insb
sbb
sub
out
sahf
push
mov
orb
dec
pop
xchg
cmp
in
rcrl
sbb
pop
clc
mov
shlb
or
ljmp
out
hlt
daa
cmp
in
add
adc
mov
mov
loop
jge
jp
dec
push
pusha
bound
push
push
dec
dec
int
in
and
inc
hlt
les
das
inc
jbe
fwait
inc
adc
popa
dec
jns
push
push
push
xchg
push
mov
mov
jbe
notb
xor
mov
std
push
sbb
xchg
ja
ljmp
popf
fiadds
xchg
outsb
mov
inc
orl
addl
mov
enter
sbb
or
xchg
xorb
jae
jns
push
xchg
dec
and
jns
rolb
fcoms
push
mov
sbb
lret
jl
imul
or
jecxz
rolb
sub
pop
inc
rep
pmulhw
fchs
clc
mov
pop
test
cmc
push
cs
mov
sbb
mov
sbb
sub
dec
sub
and
nop
js
iret
mov
dec
lret
mov
aas
fistl
push
cmc
mov
sbb
pushw
insl
lea
jno
clc
ds
rolb
test
ret
xor
mov
movsl
jne
mov
shll
mov
sub
xchg
out
adc
addl
leave
addl
lret
xor
and
dec
fldenv
fbstp
adcb
xchg
ljmp
mov
sahf
cmpsl
enter
insb
push
mulb
mov
cmc
mov
lea
popa
push
and
or
inc
xchg
rcl
xor
cmp
nop
out
enter
and
icebp
xor
or
popa
and
hlt
test
loopne
stos
jecxz
scas
sub
push
loope,pn
lret
ror
dec
arpl
insl
rclb
aaa
stos
aam
in
scas
push
fstps
mov
call
mov
cmc
ret
addr16
int
in
add
mov
mov
xchg
scas
stos
mov
push
or
stos
mov
ss
rcrl
or
push
pop
xchg
mov
rcl
add
mov
push
aaa
nop
roll
sarb
mov
cmc
int
notb
pop
pop
aaa
jge
mov
dec
bound
adc
int3
and
push
call
mov
inc
mov
cld
dec
dec
sbb
jmp
mov
mov
push
sbb
in
mov
int
fsubrl
pop
lret
xor
push
inc
dec
mov
jmp
outsb
div
mov
popf
es
popf
clc
and
ja
leave
pop
inc
aam
mov
xchg
scas
xchg
lret
dec
addb
cs
mov
add
std
mov
xor
std
cmpsb
notl
hlt
jae
lea
pop
xor
pusha
in
xor
lods
mov
pop
sti
mov
add
call
scas
pop
arpl
ds
xor
dec
add
test
nop
sbb
mov
mov
jbe
pop
sub
in
sub
or
cmc
xor
iret
call
xchg
popf
outsb
scas
sbb
or
pop
push
andb
pusha
test
ret
mov
mov
mov
inc
xor
sbb
sub
adc
cld
outsb
aas
mov
mov
out
cmp
mov
adc
and
pop
bound
sbb
mov
cmc
mov
adc
stc
push
dec
and
push
sbb
enter
add
mov
cltd
arpl
or
jecxz
decl
push
xchg
stos
sbb
hlt
mov
lods
ret
pusha
test
add
cmp
or
cli
cmovs
sub
cmc
test
pop
insl
jp
sub
or
popf
movsl
lods
in
into
lock
jnp
enter
cld
and
lcall
lahf
call
shll
xor
adc
push
inc
pusha
aam
xchg
xchg
mov
sub
lret
mov
xor
push
mov
lcall
fisubl
cwtl
mov
js
ss
in
loope
fwait
sahf
jl
adc
mov
push
shl
enter
add
cmpsb
mov
cmp
sub
pop
add
fmuls
or
mov
mov
mov
cmpsl
aas
cwtl
test
mov
jmp
sub
ss
out
addl
sbb
mov
mov
aad
add
mov
xchg
das
cli
sbbb
mov
sbb
lods
scas
out
repz
or
ret
cmp
add
xor
fstpl
sub
dec
mov
mov
pop
sbb
data16
add
ljmp
popf
cwtl
inc
sbb
xchg
push
xchg
xchg
push
int3
fisubs
inc
jae
repz
adc
add
pop
das
mov
jg
cmc
shlb
adc
push
cmp
mov
xor
addl
ljmp
movb
inc
mov
test
adc
sbb
leave
aas
jb
mov
sbb
cmp
fwait
aaa
push
adc
iret
loopne
sub
clc
dec
scas
and
mov
mov
adc
push
ja
sti
mov
outsl
sarb
and
mov
mov
xor
jo
jp
fwait
sbb
push
mov
mov
scas
int
xchg
xor
push
movsb
pop
mov
lods
clc
inc
inc
fsubrl
xchg
adc
and
jge
xchg
roll
pop
and
aaa
in
leave
cs
push
js
lea
mov
pop
mov
lret
push
stos
push
ficomps
pusha
gs
and
add
jno
jp
ret
inc
jns
pop
adc
pushf
test
pusha
notl
or
jge
dec
bound
lret
ficoml
inc
adc
jno
icebp
rclb
insb
xor
mov
shl
pop
mov
les
sub
mov
test
inc
ds
pop
mov
cmp
xchg
xchg
cmp
add
mov
repz
and
outsb
out
scas
jmp
push
mov
jae
push
cltd
out
inc
mov
and
fcoml
xchg
stos
shl
mov
push
sbb
mov
or
roll
cmc
fildll
add
pop
sbb
mov
out
movsb
insl
insl
cmpb
dec
in
adc
pop
push
leave
inc
sub
mov
lock
lcall
popa
cmp
pop
sbb
jo
cmp
mov
hlt
cltd
movsl
aad
stos
not
mov
xchg
addr16
ficoms
jnp
and
cmc
cmp
push
data16
push
cwtl
sub
and
mov
es
mov
xchg
mov
push
int
std
pop
pop
adc
es
dec
leave
and
sub
jb
cmpsb
imul
outsb
adc
sub
rorb
jae
mov
pop
cs
rorb
loope
dec
ret
int
cld
adc
cmp
int
mov
xchg
roll
pusha
testl
sti
rolb
je
jmp
enter
mov
sbb
adc
mov
cmpsl
pop
leave
loop
loope,pn
sahf
sahf
idiv
aad
aaa
dec
fisubrl
in
cld
and
mov
mov
xor
push
sbb
cmp
sbb
push
jbe
out
popf
push
xchg
out
lret
ficompl
mov
lods
add
xor
mov
cld
stc
fstpl
outsb
and
mov
jb
in
jnp
lcall
mov
std
push
push
loope
and
je
mov
xchg
js
mov
dec
dec
pop
cld
or
movlps
in
vshufps
jmp
in
loop
stos
jbe
pop
into
les
inc
cmp
ret
dec
mov
jae
push
adc
xchg
pop
cmpsl
jmp
lods
cmc
pop
or
push
aas
pop
cmp
adc
mov
cmova
mov
push
pop
fldt
ss
nop
push
sub
stos
mov
and
les
outsl
out
ljmp
dec
pop
mov
fstl
inc
inc
add
jb
xchg
mov
jns
test
aas
push
xchg
imul
or
and
mov
dec
push
mov
xchg
pop
adc
pop
sbb
aam
movsb
or
mov
cmp
sbb
test
jbe
hlt
inc
pop
es
js
jbe
adc
pop
cmp
push
arpl
int
sub
mov
adc
nop
mov
dec
test
into
sahf
stos
jecxz
data16
push
xchg
int
push
adc
push
mov
mov
dec
les
mov
fs
sub
xchg
dec
out
xchg
pop
sbb
jmp
cmp
lods
dec
nop
mov
sbb
int3
nop
clc
cltd
imul
iret
sub
sbb
adc
loopne
test
incl
pop
jge
imul
jno
inc
jle
icebp
js
add
pop
inc
mov
sbb
jp
inc
in
mulb
or
fwait
sarb
lcall
arpl
in
mov
dec
sti
sub
sub
sub
and
pop
scas
dec
push
dec
ljmp
into
in
dec
int
aaa
xchg
and
or
rcrl
notb
rorl
mov
out
mov
or
out
lock
xor
inc
test
xor
jb
ja
or
xchg
ds
push
dec
sahf
jb
cmp
pop
rorb
jp
add
jb
out
xchg
out
ret
movsl
incb
mov
push
mov
leave
sub
sti
sub
jp
in
cli
cmp
loope
sub
push
mov
pushf
and
xorb
pop
push
push
rorb
xlat
xchg
arpl
mov
add
sahf
mov
incb
push
test
cmp
pop
inc
jae
pop
dec
daa
cmpsl
jp
xor
lods
adc
push
xchg
mov
out
jnp
jb
negb
sub
fxch
adc
cs
jmp
adcb
jp
les
aam
insl
popf
cmpb
and
push
mov
pop
ret
inc
jle
aas
sub
bound
pop
scas
pop
cmp
xchg
mov
repnz
dec
fcomi
cmp
sbb
rol
sub
xchg
or
out
fdivrs
rcll
mov
adc
add
sub
mov
sbb
cmc
push
dec
xor
mov
pop
xchg
addl
cmp
jecxz
or
out
lds
pop
in
xchg
mov
scas
push
outsl
or
xchg
lea
and
call
repnz
icebp
sbb
ja
sbb
pop
or
jo
cmp
jecxz
xchg
fcmove
es
jmp
ret
fsubrs
mov
not
ficoml
clc
and
ds
cmp
je
stc
xchg
jl
call
xchg
ss
call
pop
sbb
fmuls
repnz
pushf
cld
adc
adc
lds
xor
sub
aad
popf
sbb
les
mov
pushf
out
mov
mov
sub
sbb
xor
sbb
cwtl
pop
imul
cld
push
jmp
aad
pop
xchg
pop
sti
xor
add
fmuls
int
jne
xor
mov
stc
lock
xchg
lock
jl
rcrb
ljmp
and
adc
sbb
ljmp
notb
jge
bound
ja
call
rclb
mov
xchg
femms
arpl
adc
or
or
push
clc
test
push
ss
pop
mov
cld
dec
das
mov
in
jo
push
dec
ljmp
xchg
add
stc
stos
lahf
mov
and
repz
int
call
mov
cmp
jo
in
aam
jne
fcoml
xchg
mov
cmpsb
cltd
inc
test
repz
mov
ja
mov
jae
and
daa
mov
into
in
add
adc
fsubs
dec
sbb
jl
push
nop
inc
aam
shll
sahf
aam
add
clc
mov
data16
push
mov
jb
bswap
push
xor
std
push
inc
fwait
cld
imul
cmp
add
out
into
scas
pop
roll
loope
pop
int3
adc
imul
fwait
pop
push
loop
dec
fistl
add
mov
pop
inc
stc
mov
mov
cmp
repz
jo
in
shrl
fwait
mov
sbb
mov
cmp
push
xchg
push
movsb
mov
movsl
xor
rcrl
rolb
or
dec
loope
adc
ret
cmpsb
fucomip
or
mov
scas
sbb
xchg
into
dec
jnp
push
in
ds
testb
mov
addl
andl
sbb
push
jp
popa
outsl
sbb
dec
into
mov
jb
rorl
inc
sub
mov
enter
int
push
scas
jne
test
popa
lret
negb
sbbb
and
cmp
stos
jp
push
lret
inc
adc
push
loopne
add
push
inc
adc
cmpsb
test
gs
pop
lahf
cmp
mov
mov
repz
out
push
sahf
mov
int
lret
mov
dec
xchg
and
lret
es
mov
aad
dec
aam
or
sahf
push
and
dec
push
les
adc
lds
js
iret
in
sti
mov
adc
lods
imul
adc
add
push
pop
call
pop
xchg
dec
xor
test
xor
es
add
and
je
push
mov
fists
data16
inc
or
in
xor
jnp
pop
aam
pcmpeqb
sahf
lods
dec
mov
xchg
jo
clc
xchg
push
dec
add
xchg
xchg
jmp
cmpsb
mov
je
inc
repz
pop
pop
enter
lea
xchg
mov
into
leave
rcrb
fsubp
and
inc
loope
dec
jb
icebp
jmp
dec
outsl
push
test
mov
dec
aas
mov
sti
call
sub
or
inc
jne
mov
pusha
adc
hlt
cmpsl
xor
fldt
inc
les
push
or
outsb
mov
cmp
insl
fistl
inc
jl
pop
pop
adc
jo
int3
mov
mov
push
mov
lock
cmpsb
add
jbe
rorl
pushf
mov
push
xchg
xchg
jmp
dec
jecxz
lret
rol
mov
xorl
adc
fcoml
lods
pop
jnp
sahf
outsb
xchg
xchg
outsb
cmpsl
std
push
andb
xorl
pop
add
jno
shl
jmp
int3
pop
jle
addr16
fcmovnb
or
adc
jp
sub
mov
leave
dec
enter
push
mov
stos
fs
ds
push
xchg
push
mov
cmpsl
out
stc
je
sti
divl
pop
sub
cmpsb
cmp
movsb
gs
orl
dec
add
inc
lahf
add
fsubs
mov
mov
ret
shll
or
mov
pop
xchg
icebp
fsubrl
jne
cwtl
lds
testb
int3
in
pop
in
jl
xor
and
add
loope
xchg
cmc
adc
fldt
out
jne
jbe
mov
mov
shrb
scas
dec
loope
cld
cmp
dec
cmc
mov
xlat
addl
sbb
pop
aad
insb
sahf
into
lods
fsubrl
push
xchg
ret
pop
xchg
leave
pop
out
ret
std
div
pop
decb
and
in
inc
dec
pop
dec
xchg
mov
pushf
mov
ret
cs
out
cmp
outsb
push
push
out
sub
in
repz
mov
daa
pop
les
ret
in
mov
xchg
sub
stos
or
push
dec
jp
loope
adc
add
stos
fwait
aad
jne
lods
dec
pusha
test
pushf
sub
sbb
mov
aaa
imul
mov
in
dec
jb
adc
xor
xchg
adc
mov
jle
rolb
repnz
pop
stc
das
ds
push
pusha
inc
xchg
fucom
loop
cmp
inc
cmpsb
mov
int
add
cmp
inc
cmp
shl
pop
popa
clc
stos
cli
dec
cld
cmp
lahf
sbb
jae
adc
mov
pop
add
dec
out
or
sbb
sbb
cltd
cmp
push
xchg
fimull
push
jne
cmc
pusha
pop
jns
and
popf
jle
out
inc
enter
mov
mov
add
sub
les
inc
cmc
push
adc
sbb
shlb
fsub
ljmp
fldcw
cmp
ret
mov
jnp
call
call
push
jno
icebp
in
popf
jge
lds
pop
ror
sbb
repnz
add
xor
xor
pop
hlt
xchg
dec
les
das
rorl
dec
mov
dec
pusha
or
cmp
sti
scas
fs
lret
jb
outsl
inc
xor
insl
das
mov
add
pop
insb
and
sub
and
repz
add
lahf
mov
mov
out
mov
add
sub
xorl
xchg
sub
fisttps
add
xor
mov
movsl
sbb
mov
out
dec
cmp
adc
mov
mov
inc
stos
leave
pop
mov
lods
aas
mov
ret
mov
in
xor
mov
je
popf
sub
xchg
mov
mov
fnclex
sub
sbb
pop
clc
ret
and
and
inc
orb
dec
jmp
mov
push
cmp
jg
jg
sbb
push
cmp
mov
wbinvd
insb
loopne
adc
lret
mov
jl
ficomps
lea
scas
xchg
pop
hlt
cmp
test
mov
cmp
out
xchg
dec
jne
outsl
test
aaa
push
dec
sub
cmp
cmpsl
iret
cmpsb
xchg
leave
or
cmp
outsb
mov
sti
repnz
push
out
xchg
xor
xor
xchg
outsb
sub
mov
xchg
insl
scas
scas
int
sub
in
and
in
adc
popa
and
push
sub
test
leave
mov
pop
xchg
jge
mov
in
jle
dec
adc
pop
insl
test
scas
add
jl
jl
mov
jg
mov
test
xchg
adc
cwtl
lcall
dec
mov
test
adc
es
jmp
jg
ret
cmpsl
jge
nop
pushf
test
or
mov
jb
pop
xor
jbe
bound
xchg
ja
int3
add
inc
aam
ficomps
xor
xor
pusha
jmp
pop
xor
inc
dec
rcll
fabs
pop
iret
sub
jns
pop
sub
dec
dec
sbb
sti
pop
sar
xchg
cmp
xchg
ret
xor
test
push
pop
mov
daa
sub
aam
xchg
push
adc
inc
mov
outsb
cld
mov
cld
mov
ljmp
xor
stc
movsl
and
int
pushl
or
mov
cmp
fsubl
xchg
xorb
popf
lds
imul
xchg
sbb
mov
mov
sub
jmp
arpl
int
inc
xchg
and
or
inc
and
sub
jg
out
sahf
insb
std
fwait
pop
push
ss
outsl
cltd
add
negb
outsl
jnp
in
sbb
sub
lret
lds
mov
icebp
and
xchg
cmp
jmp
cmp
mov
das
mov
cwtl
mov
pop
jmp
xchg
xchg
sbbb
dec
push
loopne
loop
pop
fsubl
test
xor
or
mov
push
xor
or
push
sub
pop
es
stos
or
in
pop
test
adc
xor
inc
rol
rcr
out
jp
xchg
mov
mov
adc
mov
scas
inc
inc
mov
inc
xor
push
sti
iret
push
add
jns
fldt
jg
cmp
adc
xor
loop
subl
inc
push
xor
popf
push
sbb
pop
lods
shlb
data16
enter
arpl
call
test
push
add
and
aaa
pop
ja
xchg
loope
cwtl
pop
loope
fnstsw
outsl
jns
aas
adc
jnp
sub
cmpb
cwtl
scas
xor
lret
test
mov
sbb
jbe
inc
lcall
test
js
lahf
sub
xchg
inc
je
ja
mov
xchg
loopne
sbb
test
jne
rcr
sbb
cld
in
xlat
mov
xchg
mov
sbb
sbb
movsb
inc
lcall
fucomp
adc
cmp
sbb
cmp
dec
dec
mov
mov
mov
daa
hlt
loope
mov
pop
in
lea
popa
es
inc
and
sbb
add
inc
out
sbb
pop
lods
jmp
scas
xor
and
mov
fcoml
mov
out
jbe
jmp
and
aam
cmp
xchg
test
sub
jnp
cwtl
inc
xchg
add
addr16
stos
inc
mov
lret
rcll
out
mov
pop
jne
pop
adc
scas
adc
test
popa
adc
jb
data16
inc
pop
in
xor
and
pop
fsts
gs
imul
and
data16
or
push
sub
inc
add
and
pop
mov
shlb
mov
add
stos
ds
pop
fistpl
lret
dec
sar
hlt
lea
cmpsl
add
decl
loopne
fsubs
adc
out
insl
jl
or
sbb
out
out
jbe
xor
dec
cmp
jb
inc
push
or
jnp
xchg
imul
enter
gs
xor
pop
inc
sub
push
fwait
inc
jmp
mov
cmpsw
sarb
inc
pop
mov
cmp
out
mov
xor
push
iret
and
cld
mov
mov
insl
or
lret
cs
ror
cli
jo
cmp
enter
jns
pop
fnstsw
daa
adc
shll
add
cmp
push
dec
popa
inc
xchg
adc
repnz
sub
in
pop
add
or
and
sub
add
and
xchg
test
xchg
and
inc
add
adc
mov
or
cmp
mov
jmp
push
mov
mov
outsb
and
aaa
xor
push
test
mov
imul
scas
enter
xchg
dec
inc
or
cmpsl
inc
mov
pop
outsb
lret
popa
mov
xchg
push
push
inc
push
popf
adc
loop
xchg
push
ja
cs
inc
xchg
sub
sub
sub
scas
xchg
fwait
inc
frstor
stos
sahf
cwtl
lcall
test
out
repnz
dec
mov
js
sbb
aam
adc
push
arpl
pop
add
push
stc
mov
push
dec
cs
push
imul
sub
mov
rcll
out
shrl
xchg
test
test
lea
lods
fstpl
stos
aaa
mov
sub
jae
sbb
sbb
mov
push
rcll
insb
or
aad
pop
jg
je
arpl
jge
nop
push
ja
lds
fnstsw
push
pop
push
xor
test
pop
sub
arpl
out
shrl
cs
icebp
jo
movsb
push
jecxz
cmp
dec
or
js
decl
lret
sti
sub
imulb
scas
pusha
sub
mov
cmp
popf
xor
es
xor
xor
test
xchg
clc
mov
sarl
mov
add
sbb
jg
ffreep
imul
and
das
ffree
out
dec
jl
adc
hlt
mov
aas
sub
inc
testl
push
sbb
stos
or
pusha
pop
mov
lods
jb
and
iret
inc
ror
dec
mov
inc
push
mov
sub
adc
ficoml
cmp
add
mov
or
dec
or
push
xchg
and
into
enter
aam
jb
decl
movsl
pusha
cmp
xchg
leave
repz
idivb
jecxz
pusha
inc
stos
xchg
shrl
jp
and
movsb
xchg
shll
fwait
jp
mov
ret
int
in
dec
iret
out
pop
and
or
test
jnp
ss
or
roll
mov
enter
adc
jle
jo,pn
mov
fldl
clc
cmp
call
inc
add
jo
fdiv
movsb
add
fadds
cmp
cmp
lods
into
incl
hlt
mov
mov
rorl
cmpsl
cs
test
and
mov
dec
xchg
sub
movsb
cld
dec
or
dec
outsl
ret
pop
sub
stos
jmp
pop
loope
dec
jns
adc
shlb
cld
mov
clc
jo
dec
mov
aad
aas
pop
lods
or
lock
jg
pop
mov
add
in
cltd
pop
mov
sub
cmp
loop
in
out
faddl
jl
mov
pop
test
stos
es
negl
out
jnp
cmp
and
sbb
insl
or
xor
cmp
inc
add
jbe
push
mov
enter
stos
fnsave
leave
mov
and
clc
jbe
fidivrl
ret
cmp
xor
cmp
pop
mov
leave
cmp
mov
inc
loopne
push
inc
mov
iret
dec
cmpsl
stos
ss
add
push
iret
pop
cmpsb
paddq
push
stos
loop
lret
cli
cmp
ficomps
sub
mov
movsl
mov
popf
scas
ficompl
ja
adc
int3
lret
addr16
loopne
push
lcall
adc
dec
adc
fsubs
movsb
fiaddl
paddsb
jle
xlat
sarl
popa
mov
orl
inc
lret
test
add
addl
sbb
xchg
fidivs
mov
inc
popa
xchg
jo
xchg
imul
pop
jecxz
stos
aad
cmpb
add
sbb
cmpsb
test
pop
outsb
xchg
mov
fldenv
scas
out
test
ret
pop
mov
stos
insl
jb
loop
mulb
cs
jns
shrb
mov
jae
test
push
enter
lock
jle
xlat
xchg
pusha
stos
lods
setno
ds
stc
pop
mov
loope
sub
fbstp
gs
dec
or
mov
jge
hlt
xlat
nop
lods
dec
testb
push
ret
sbb
pop
aam
xor
sbb
xchg
adc
add
movsl
xlat
std
lods
jmp
insb
shld
sbb
mov
lock
loop
fidivs
inc
pop
fwait
xchg
xchg
add
addr16
mov
idivl
rcrb
gs
adc
dec
lret
mov
xchg
sahf
jle
jmp
shll
popa
leave
imul
pop
mov
dec
push
jbe
push
icebp
lcall
mov
xchg
mov
movsb
mov
ja
stos
test
lret
sar
addr16
lret
subl
mov
or
adc
xchg
mov
push
pop
xchg
call
psubd
add
aad
insb
in
sbbl
sbb
cltd
movsb
inc
ja
and
push
push
mov
lods
addl
and
aas
jp
lahf
sub
cmp
inc
pop
lods
xor
fwait
adc
dec
das
push
jge
cmc
mov
xchg
out
xchg
leave
mov
shl
adc
arpl
inc
jo
loop
jne
daa
jmp
mov
add
fdivp
push
mov
je
pop
and
dec
and
test
inc
mov
dec
mov
out
add
outsb
inc
dec
in
icebp
push
adc
lds
xchg
ljmp
loope
sbb
cmpsl
jno
movsl
adc
and
imul
lock
into
arpl
inc
jns
test
sbbb
ret
xchg
out
adc
push
cmpsb
pusha
jbe
cmp
ficompl
jl
lret
out
mov
cmc
loope
rcrl
mov
xor
add
dec
mov
mov
fsubr
outsl
adc
inc
out
mov
loope
push
inc
lret
rcr
lock
jnp
cs
icebp
cli
fsts
jbe
pusha
inc
pop
popa
pop
ret
dec
add
mov
cmpsl
ret
outsl
daa
sub
ja
jno
lret
xor
pop
testb
lods
out
in
fcmovb
xor
add
out
or
es
jle
stc
cltd
and
shrb
hlt
jno
add
es
movsl
jecxz
jecxz
sub
ret
inc
popa
and
fs
cltd
push
imull
jmp
add
fdivrl
iret
dec
aaa
sarl
push
xlat
sub
or
add
and
stos
out
icebp
sbb
lods
les
cmc
xor
insl
movzbl
std
ret
lods
insl
sub
jp
addr16
shrl
jno
xchg
jb
mov
mov
cmp
fwait
or
fdivl
add
sar
sub
adc
mov
fldenv
sahf
rcrb
jmp
xor
push
loop
outsb
dec
adc
outsl
cwtl
jo
lods
aam
pop
xchg
sbb
stc
or
jno
jbe
dec
ljmp
push
dec
mov
in
lcall
adc
cmpsb
fiadds
xor
and
repz
adc
jb
pop
mov
loopne
mov
in
loopne
mov
xor
push
xchg
inc
nop
fsubr
out
jmp
inc
mov
outsb
adc
fwait
dec
add
mov
sahf
sub
xchg
fistpll
dec
dec
inc
and
xchg
jne
pushf
or
pop
xchg
rcr
dec
aas
dec
cmp
lcall
stc
sub
push
add
fwait
stos
mov
or
pop
mov
test
xchg
les
sbb
movsl
aam
clc
in
mov
mov
dec
xor
lea
or
xor
adc
lret
es
mov
icebp
xchg
addr16
out
popa
scas
add
adc
ja
jle
nop
or
in
and
xor
mov
out
inc
adc
fnsave
int
lret
inc
add
mov
mov
sub
pop
js
pop
in
test
pop
add
movsl
fmull
dec
idivl
xchg
dec
adc
sbbb
dec
shrl
sbbl
inc
push
iret
mov
cmp
ja
das
into
int3
mov
push
dec
enter
mov
popa
pop
sti
sahf
and
xchg
and
push
push
fnstsw
cld
ret
popf
movl
push
xchg
fbld
jnp
adc
loop
jo
add
inc
xchg
cmp
iret
sbb
or
call
movsl
pop
pop
inc
push
mov
lods
loop
stos
dec
push
aam
push
test
xor
jge
adc
mov
loope
cwtl
jo
dec
xor
js
cmovno
cwtl
outsb
mov
es
push
leave
pusha
inc
iret
cmpsl
mov
adc
stos
inc
leave
dec
xchg
inc
push
inc
mov
ret
add
xlat
call
dec
push
mov
mov
int3
leave
adc
and
sbb
lahf
sbb
xor
outsl
roll
pop
fdivrl
mov
int
xchg
and
ficompl
fdivrs
jp
cmpsb
inc
xor
movsb
dec
bound
je
loopne
ret
or
in
popa
insb
inc
nop
aad
leave
pop
jecxz
cmc
jbe
xor
lea
pop
jecxz
nop
mov
ffreep
push
mov
pop
ss
jmp
leave
xor
jp
or
sub
test
popl
or
pop
push
xchg
xchg
aas
js
cwtl
out
out
and
out
ret
add
sahf
cmpb
lahf
dec
mov
test
mov
iret
adc
lret
in
or
pop
addr16
push
mov
mov
mov
push
sarb
rclb
movsl
repz
cli
loope
mov
popl
je
xlat
gs
add
mov
pop
pop
loope
push
mov
dec
jg
arpl
fists
lds
int3
adc
insb
xchg
rorl
sub
cmp
insb
loop
rclb
shl
outsb
fcmovu
cmp
in
pop
jge
aaa
loope
or
pop
add
push
sub
lcall
mov
mov
push
lock
xchg
mov
pop
fisttpll
pop
sbb
push
adc
shrl
outsl
les
add
or
adc
mov
adc
adc
ja
idiv
nop
add
xor
addl
roll
adc
xchg
and
jb
dec
cld
loope
cld
lods
inc
xchg
mov
not
inc
ljmp
sar
add
mov
fldcw
and
add
add
sbb
fwait
lods
mov
mov
das
fstpt
popf
mov
sbb
data16
out
mov
dec
mov
jmp
arpl
mov
jne
push
sarb
test
mov
xchg
ficomps
es
ss
push
xor
aaa
cmpsl
dec
loope
shr
orl
xor
mov
rolb
push
inc
pop
pusha
das
cmpsl
and
jp
ret
stos
ret
mov
push
cmpsb
xor
pop
in
or
cli
hlt
ss
mov
loopne
sub
ret
orb
sbb
sbb
imul
add
and
cli
es
inc
mov
adc
xor
ja
lock
fsubrs
cltd
push
in
jo
mov
icebp
fnsave
mov
and
sti
xchg
and
or
jp
aam
pop
jne
push
inc
cmp
bound
xor
scas
sbb
aam
adc
outsb
cmp
fsubrl
enter
insb
loope
nop
cmp
aaa
push
stc
fsubrl
sub
mov
decb
add
mov
jae
xchg
mov
push
cld
inc
cld
inc
push
inc
push
dec
into
and
and
add
add
in
jmp
shll
adc
pop
pop
into
mov
iret
sub
lret
xchg
test
repnz
mov
scas
dec
ljmp
mov
mov
mov
test
shlb
rorb
jmp
lret
adc
out
ret
mov
and
xor
data16
pop
cmp
mull
popa
fiaddl
mov
loope
jne
sar
lods
or
mov
stos
lods
out
addl
inc
mov
jo
imul
xchg
lea
out
dec
inc
cli
in
mov
mov
sbb
and
enter
stos
stos
and
pop
xor
add
rcll
and
or
sbb
cmpsl
inc
lahf
sbb
out
out
lret
test
lret
rcrl
test
jns
in
in
gs
add
cmc
xor
out
test
fnstcw
jbe
mov
and
and
pusha
mov
sti
mov
in
mov
gs
outsl
rorb
lret
fs
mov
cmpsb
aaa
mov
inc
push
xor
call
pop
xchg
inc
fcmovne
push
pop
rolb
insb
jge
dec
pusha
cs
aad
mov
in
jnp
imul
adc
sbb
stos
xor
test
imul
inc
mov
adcl
in
negb
lahf
mov
das
lret
sahf
and
loopne
popa
add
mov
lock
push
scas
out
push
mov
dec
mov
loop
push
repnz
int
sub
jnp,pn
rclb
push
add
clc
pop
add
xor
into
adc
in
pop
lods
push
gs
aam
jo
dec
mov
adc
sub
mov
movsb
orb
shlb
sub
out
dec
notb
fsubrl
enter
rcll
adc
jmp
fstpt
pop
xor
xchg
xchg
push
push
mov
cmp
sbb
test
xchg
or
faddl
aas
push
cmp
inc
pop
cli
imul
test
pop
fidivs
mov
jb
pusha
jb
out
call
xor
arpl
mov
outsb
mov
cs
pop
mov
fstl
mov
pop
push
xor
jg
mov
lcall
int3
in
loope
lret
or
mov
xchg
pusha
push
sbb
outsl
cmp
pushf
pop
pop
test
inc
xor
js
cmp
sbb
js
lods
add
mov
or
icebp
outsl
mov
jge
mull
stos
mov
mov
pop
jo
test
jge
insl
xor
int
orb
cmp
xor
ljmp
mov
mov
pop
add
repnz
mov
jno
push
cld
ret
imul
or
mov
lcall
jnp
leave
adc
call
sbb
push
sbb
popf
cmp
lcall
jo
mov
adc
cmp
xor
inc
shll
fwait
inc
sbb
dec
lds
jbe
xchg
out
sbb
in
cmpsl
hlt
pop
add
and
push
jnp
sbb
cmp
out
mov
repnz
xor
mov
pop
jns
jl
xor
in
enter
push
inc
fldenv
inc
jge
cmp
mov
mov
cltd
push
jb
cwtl
in
imul
mov
rcl
cmp
pop
test
rcl
pop
and
jl
jl
xlat
mov
xchg
push
push
jge
sub
push
lret
sbb
jo
xor
nop
mov
popa
mov
or
jp
pop
push
ret
mov
out
lcall
test
ret
xor
stos
mov
adc
pusha
rorb
lods
daa
popf
mov
shl
dec
pop
fwait
cwtl
shlb
mov
jecxz
mov
int3
sub
sahf
xlat
fisttps
in
pop
xchg
imul
movsb
lcall
nop
mov
aad
and
popa
xchg
ds
in
or
xchg
add
fsubs
xchg
insb
sbb
rorl
and
push
xor
xlat
pop
and
ljmp
add
imul
ja
jp
and
mov
inc
into
mov
mov
fidivrs
fsubl
stc
int3
aam
rorl
gs
push
xchg
push
pop
aas
push
movsb
mov
ljmp
xchg
daa
add
hlt
jge
pop
setg
xor
lock
movlps
inc
jp
push
pushf
push
xchg
sbb
jl
das
cltd
cmp
or
push
inc
lcall
jmp
mov
mov
test
filds
shrd
and
cmpsl
mov
shrl
les
jae
sbb
js
inc
mov
xlat
and
push
mov
lcall
daa
push
mov
icebp
xchg
movsb
xchg
sub
sbb
insb
jnp
jbe
ja
jl
ds
test
mov
loop
push
shlb
lods
out
or
lret
das
dec
adc
xor
test
test
setp
and
out
scas
add
data16
mov
popf
jp
loop
pop
mov
cmp
mov
and
or
repnz
lock
cwtl
jp
adc
pusha
mov
sub
fnsave
fildll
or
and
mov
popf
mov
jno
cli
test
sti
cltd
clc
and
jne
enter
mov
xchg
dec
mov
push
jecxz
push
pop
cmp
xchg
mov
jmp
xchg
lret
add
adc
movsl
push
mov
out
cmp
insb
xor
jae
and
pop
dec
xchg
adc
iret
add
les
sbb
pusha
fwait
add
or
cmp
inc
fstpl
lcall
cli
fcoml
xchg
dec
int
jmp
lcall
mov
leave
jbe
mov
push
les
out
repnz
inc
je
repnz
aam
cltd
jmp
aas
xor
pop
adc
mov
adc
xchg
fdivrl
sub
xor
xor
inc
scas
jmp
mov
adc
sub
in
cmp
addr16
arpl
dec
imul
dec
xor
cwtl
pop
mov
inc
lods
push
out
sbb
call
adc
push
jmp
mov
movsb
push
jnp
add
mov
mov
cmp
dec
repnz
mov
adc
call
test
aaa
insb
int
mov
and
or
mov
lret
xor
icebp
jmp
or
or
mov
stc
pop
sahf
insl
pop
adc
stc
mov
sbb
daa
xchg
xor
push
push
add
dec
mov
iret
mov
insl
xlat
sub
into
xchg
xor
stc
lret
outsl
fcoml
ret
xchg
dec
ret
and
push
and
in
jnp
xor
sarb
xchg
lods
dec
out
js
ret
popa
gs
and
jge
neg
sbb
std
sbbb
mov
mov
out
sbb
sbb
in
jbe
xlat
push
add
subl
js
pop
lahf
push
inc
loopne
add
fimull
das
pop
outsb
adc
and
ret
cmp
mov
scas
rclb
and
arpl
cmpsl
pusha
inc
inc
sub
aaa
cmp
pop
dec
jns
xchg
fsubl
xchg
lret
lea
dec
test
jle
push
sub
std
aam
jnp
insl
push
aas
dec
mov
ja
lret
stos
xchg
pushf
scas
pushf
repnz
mov
mov
mov
js
aam
mov
fcmovnb
xchg
gs
and
xor
das
je
popa
nop
lock
jecxz
mov
aas
movsl
call
mov
divb
xchg
cmovo
push
add
and
inc
add
outsl
out
push
and
jne
sahf
enter
xchg
aad
cli
mov
imul
mov
xchg
push
fildl
shll
mov
push
rcr
subl
adc
add
lock
adc
sbb
jecxz
pop
jbe
inc
adc
inc
lret
cld
add
andl
mov
adc
test
lea
js
lea
divl
xchg
ds
aaa
push
cmpb
inc
in
xchg
cmc
cwtl
sbb
mov
xchg
and
push
mov
repz
cmp
jo
xor
jno
mov
mov
sbb
jne
dec
stc
fsub
sub
jo
popf
pop
sbb
cli
sub
dec
cmp
fs
arpl
cmp
test
sarb
int
cwtl
sti
lret
popf
addr16
dec
bound
fdiv
xor
insb
fucomi
cwtl
and
mov
mov
in
mov
sub
int
into
pop
rorb
aas
add
movsb
jp
jecxz
mov
xor
test
js
push
xchg
sbb
dec
sbb
jp
push
popf
das
ja
sub
inc
and
add
add
jns
test
out
aad
sub
sbb
mov
test
inc
xchg
repnz
add
sub
fsubl
sbb
jnp
repz
xchg
fs
jmp
pop
mov
mov
xchg
repz
push
ret
and
imul
jne
icebp
in
pop
mov
imul
test
jb
popf
mov
sbb
xor
push
lea
iret
sarb
jbe
adc
push
xchg
sahf
popa
push
push
mov
cltd
sub
sbb
jge
addr16
iret
mov
cmp
call
sbb
ds
cmp
sbb
dec
clc
outsl
dec
daa
mov
mov
out
shr
pop
imul
mov
js
rolb
push
xor
scas
daa
and
mov
adc
lret
adc
fistpll
push
xchg
jne
addr16
cld
lret
mov
pop
movsb
or
arpl
xchg
sti
pop
xchg
jecxz
movsl
mov
loop
pusha
mov
xorl
mov
xlat
mov
loop
sbb
pop
sub
js
imul
sbb
jg
orb
jl
shl
or
dec
in
shlb
inc
cmc
ds
pusha
scas
xor
jmp
adc
cmp
scas
push
leave
arpl
repz
je
inc
shrb
pop
or
mov
sbb
cmc
sub
test
test
popa
stos
and
stos
ja
push
js
jmp
sti
lret
int
popf
and
cmp
xchg
imull
cmp
call
gs
xchg
rorl
pop
lock
lock
dec
nop
mov
push
out
pop
sahf
push
xor
test
mov
mov
push
push
xchg
lcall
mov
repnz
xlat
dec
call
xchg
mov
inc
pop
inc
sbb
push
push
out
jmp
icebp
jmp
cltd
and
aam
jle
repz
bound
sbb
dec
add
pushf
xchg
idiv
sti
jnp
pusha
push
sbbl
test
mov
gs
or
xacquire
aaa
jl
test
orl
sbb
inc
lock
stos
nop
cltd
or
test
adc
rcrb
mov
cmp
in
inc
inc
inc
jmp
lahf
xchg
pop
lahf
stos
adc
int
dec
push
xor
sub
cld
loopne
cwtl
hlt
mov
rcrb
pop
js
cmc
sbb
adc
ret
mull
sbb
sub
and
and
sbb
or
inc
adc
adc
js
mov
jbe
scas
adc
subb
sub
out
xchg
add
dec
shr
dec
and
jo
jmp
popa
mov
frstor
sub
pop
in
mov
push
mov
mov
push
or
or
adc
lods
repnz
ja
xchg
pop
add
adc
pop
and
mov
push
cmpsb
add
pusha
mov
rorb
pusha
and
mov
push
mov
jo
loope
enter
sub
mov
js
mov
leave
lret
scas
mov
jbe
aad
ret
mov
push
loope
or
outsl
sbb
dec
daa
repnz
dec
cltd
aaa
std
xor
jge
mov
push
xchg
pop
xor
push
cmp
ret
cmp
or
loope
mov
jp
mov
xor
fcomip
les
ss
xchg
sbb
sahf
ds
loop
or
rcl
mov
in
movsl
dec
xchg
mov
lods
js
dec
test
test
hlt
addb
and
dec
or
push
out
out
ljmp
outsl
xor
bnd
out
fiaddl
fucomip
cmp
xchg
pushl
fimuls
movsl
call
pop
and
stc
andb
pop
roll
stc
or
movl
fldl
decb
mov
xor
sti
jo
sahf
sbb
out
push
lods
cmpsl
movsl
out
mov
pop
sub
ss
mov
pop
xchg
sbb
or
clc
sbb
mov
adcl
rcrb
ja
xchg
dec
mov
and
push
out
push
rorb
ja
push
xchg
addl
or
xor
out
outsl
cmp
sets
out
inc
mov
pop
pusha
fcompp
mov
inc
int
loopne
xlat
testl
mov
into
clc
jl
add
jno
jnp
hlt
and
jl
sub
bound
dec
sbb
jge
fisubrs
pop
cltd
pop
seta
cld
or
clc
sbb
dec
repz
scas
out
mov
push
pop
cmp
mov
adc
cmp
popf
fs
cmpsl
insl
shlb
xor
lea
imul
xor
xor
arpl
mov
fnsave
sub
push
sub
clc
mov
mov
sub
movsl
push
stc
pop
jmp
in
xor
dec
cmpsl
aas
out
lods
pop
mov
jge
or
pop
and
imulb
in
fcmovu
aam
lahf
jb
mov
mov
mov
sbb
push
xor
iret
int
icebp
xchg
push
je
inc
push
stc
sub
fwait
push
sub
enter
insb
mov
pop
leave
push
fcomps
xchg
test
pop
mov
inc
xchg
lods
xchg
imul
sbb
sbb
int
xchg
jp
popf
insl
test
mov
ss
icebp
sti
call
jo
stc
fnstcw
jns
inc
pusha
pop
sub
bound
stos
dec
xlat
stos
outsb
mov
lods
mov
and
xor
je
mov
xchg
push
dec
sub
and
pop
sbb
xchg
sbb
xchg
xchg
push
rcrl
dec
mov
xchg
mov
push
adc
adc
ljmp
add
inc
adc
int
mov
mov
jnp
insl
outsb
int3
mov
shrl
test
hlt
arpl
jne
cmovge
jmp
call
outsl
xor
xchg
ds
mov
pop
mov
mov
out
das
xchg
xor
mov
xchg
jno
lret
mov
jns
test
ja
inc
ror
cmp
inc
xor
orl
ja
pop
xchg
lods
sbb
daa
cli
dec
sub
scas
daa
xchg
mov
xchg
xor
push
lret
movsl
test
xlat
jp
push
in
mov
add
xor
fcompl
or
sbb
push
adc
and
inc
loopne
add
int
push
daa
jne
jnp
xor
fs
stos
test
adc
incb
add
mov
iret
jle
pop
push
push
hlt
mov
push
sub
pusha
pushf
add
push
popl
mov
push
out
cmpsb
mov
dec
and
repnz
sahf
aas
popa
leave
xor
xor
mov
mov
sahf
jo
cwtl
adc
cmp
dec
jmp
repz
pushf
inc
test
jbe
mov
and
xchg
sub
inc
adc
insb
adc
idivb
xchg
sbb
insb
in
sub
leave
js
xchg
rclb
sbb
sbb
aaa
pop
and
push
cmc
test
mov
sub
ja
iret
and
sti
je
sar
adc
push
out
adc
out
mov
lock
outsl
lods
mov
test
arpl
loop
jecxz
sti
fcoms
sub
les
pop
gs
jb
sbb
loopne
jecxz
push
cmpsb
push
jp,pt
sbb
sbb
ds
cmp
out
pop
in
sub
mov
mov
dec
inc
add
cmp
inc
test
popa
xchg
jmp
mov
dec
sub
shll
add
mov
pusha
xor
in
inc
xchg
std
adc
push
add
scas
fadds
orb
push
rcll
cmp
add
mov
aas
push
out
outsl
sti
sbb
xor
popf
mov
sbb
mov
shrb
push
jmp
cmp
xchg
push
test
adc
in
sti
push
xchg
adc
scas
sub
and
loop
push
push
inc
xorl
sub
or
fnstenv
jne
mov
nop
sbb
popf
add
jge
sub
lret
cld
push
mov
frstor
jmp
lea
ss
mov
mov
std
fistpl
imul
daa
jb
xor
int
lret
jo
bound
or
clc
insl
ret
xchg
ljmp
jo
and
lock
daa
sti
repz
pop
pop
and
stc
and
sub
jae
adcl
jb
popa
ss
sbb
int3
cmp
loopne
jle
mov
push
pop
adc
fwait
push
mov
pop
xor
sub
sarl
lahf
pop
cmp
push
clc
test
add
push
lds
test
push
fildll
pop
or
ds
pop
bt
mov
mov
mov
icebp
inc
adc
xchg
xchg
jbe
stos
push
or
call
ja
ret
jmp
dec
mov
out
cwtl
mov
test
test
out
add
ds
and
xor
xchg
test
sub
loopne
xchg
rclb
stc
rcrb
xchg
jl
aas
cmp
popa
sub
popf
push
into
dec
mov
arpl
jle
jl,pn
inc
pop
adc
cmp
shl
jp
mov
add
les
pusha
push
dec
ljmp
jne
cmpsl
inc
add
loopne
aam
push
or
mov
outsb
loop
mov
and
sub
lea
cmpsl
push
call
dec
fsts
rorl
mov
aas
sahf
mov
divl
push
mov
sub
mov
push
mov
and
in
cmpsb
add
fldenv
call
jbe
cli
xchg
ret
subb
jge
ficoml
fwait
repnz
cld
fmull
and
xchg
and
aad
addr16
inc
sbb
lods
cltd
push
enter
xchg
jbe
push
mov
mov
sbb
cmc
mov
hlt
les
push
inc
inc
xchg
add
xor
cmp
xchg
push
in
add
pusha
stos
mov
adc
add
sub
jne
xor
test
aam
mov
adc
or
loopne
dec
fsts
mov
scas
test
push
addl
and
fcoms
pop
and
nop
pop
fs
pop
rorl
xor
xor
int
cmp
cld
setns
fldt
mov
adc
popa
scas
loopne
or
mov
adc
cmpsl
int3
jae
and
add
fisubrs
sti
sar
dec
leave
sti
scas
pop
out
aaa
idivl
pusha
test
test
fimuls
and
add
mov
push
inc
js
sub
xor
jns,pn
xchg
pop
push
mov
mov
sbb
inc
jmp
jne
js
nop
xor
push
addr16
cmc
or
adc
int3
pop
popf
push
popa
cmp
inc
mov
push
jp
out
and
pop
es
loope
sub
stos
xor
xor
inc
cmc
rcr
push
std
arpl
mov
test
addb
data16
dec
xor
inc
xchg
push
orl
and
pop
xchg
add
jle
movsb
push
adc
and
mov
test
inc
or
mov
iret
imul
jge
and
lret
sbb
pop
mov
ljmp
aas
push
lods
cmp
stc
jae
pop
imul
js
loop
xor
test
mov
mov
add
adc
xchg
sub
fstpt
dec
in
jmp
mov
inc
test
add
sub
mov
subb
adc
add
mov
stos
xchg
push
or
mov
inc
push
int3
std
xchg
stos
push
fidivrs
sub
and
pop
dec
mov
lods
mov
dec
inc
btcl
cs
dec
ja
jne
sub
pop
pop
ljmp
mov
cwtl
xor
xchg
mov
dec
out
sub
pop
mov
push
add
pop
dec
shl
inc
dec
jle,pn
test
pop
nop
xor
dec
and
xchg
fwait
daa
stc
scas
and
mov
shrb
adc
or
mov
or
daa
repz
inc
push
loop
decl
bound
jnp
add
adc
jecxz
sbb
xlat
dec
nop
cltd
fmuls
pushf
in
movsl
out
shl
xchg
push
mov
in
stos
fldl
out
jl
xor
les
cmp
mov
imul
jge
popa
je
dec
fildll
add
sti
mov
inc
lcall
lret
scas
add
sbb
sbb
fstpl
leave
shlb
push
lds
mov
xor
sub
mov
imul
xor
lods
arpl
clc
jae
or
sbb
je
cmp
ret
mov
and
ret
repz
das
add
push
and
push
sti
loope
repz
jmp
dec
cmpsb
xlat
nop
push
xor
arpl
jl
dec
notl
xchg
mulb
in
adc
fidivl
fs
or
xchg
pop
lods
xor
dec
mov
xor
iret
lods
lods
std
mov
add
gs
and
jp
inc
cmp
loop
and
push
notl
inc
lods
shlb
sub
sbb
mov
push
cmpl
stc
and
sub
push
out
imul
ret
jne
adc
push
cmp
out
bound
arpl
movsl
xor
aam
or
pop
sub
insb
xlat
and
jo
aad
push
push
pop
cmp
fcmovnbe
frstor
aad
mov
stos
mov
movsb
imul
inc
into
fcompl
test
bound
jmp
mov
push
pushl
sub
pop
dec
stos
pop
xor
lock
adc
sub
add
push
pop
xor
pop
jmp
push
test
adc
dec
push
mov
popa
cmpsb
cs
sbb
lahf
push
or
insl
jl
adc
mov
data16
add
inc
jno
inc
out
ror
nopl
adc
jge
lahf
jns
xchg
xchg
and
push
rcr
mov
sarl
inc
in
inc
rclb
ss
jno
fwait
testb
mov
movsb
hlt
fwait
push
cmpsb
test
push
inc
out
sahf
xchg
call
sub
pop
cmp
xor
pushf
xchg
add
xchg
mov
shll
or
add
mov
sub
adc
sahf
imul
pop
lea
arpl
push
mov
mov
jl
mov
adc
shrl
int3
xchg
sub
mov
int3
cmp
cmp
sbb
loope
lret
sbb
dec
or
nop
jnp
mov
xor
xor
pop
testl
cmp
xor
mov
movsb
push
fnsave
xchg
data16
sub
mov
xor
inc
loopne
ficompl
sbb
xchg
js
mov
or
jns
mov
sub
mov
mov
mov
enter
push
mov
push
test
jmp
mov
mov
cwtl
pop
orb
test
outsl
loope
cmp
xchg
fsubl
pop
in
lods
aaa
xor
mov
jp
jg
mov
cli
adc
or
xor
mov
data16
fiaddl
sub
fcoms
insb
fistps
fchs
or
mov
insl
mov
inc
icebp
jb
iret
das
mov
cmpl
cmp
lds
fdecstp
in
mov
hlt
mov
gs
cmpsl
xor
pop
outsl
addr16
mov
scas
adc
popf
sbb
subb
mov
insb
stc
pop
ret
ja
mov
push
movsb
lret
js
adc
cmc
ficomps
jp
mov
out
imulb
inc
or
ret
xor
mov
jg
loope
add
jmp
cmp
mov
inc
xlat
mov
icebp
mov
add
scas
sub
pop
mov
lcall
imul
cmc
or
dec
jo
jae
insl
sub
je
ljmp
ljmp
push
mov
repnz
divl
push
jbe
jecxz
popl
mov
aaa
adc
scas
popf
mov
subb
popaw
cmp
js
les
movl
xor
test
pop
stc
lret
inc
test
loop
adc
cli
fisubrs
sti
jp
sub
fadd
lods
inc
pop
cs
test
push
sbb
cwtl
xchg
jne
or
ljmp
sbb
mov
aad
sub
rolb
adc
jl
jecxz
cs
sbb
ja
sbb
daa
or
cmp
pop
cmova
inc
sahf
dec
xor
lods
loopne
mov
xor
jge
pop
pop
add
jb
fidivrl
adc
outsb
pop
jne
cltd
orl
cld
jae
fistps
xor
scas
jmp
xlat
outsl
pushf
ljmp
fwait
std
cmp
cli
andps
pop
out
push
adc
push
dec
xchg
movl
clc
xor
sub
inc
stos
lods
xor
mov
test
loop
test
mov
sub
xchg
add
dec
pop
pop
nop
lcall
mov
push
xchg
movsl
mov
jp
adc
jp
pop
xchg
sub
or
or
testl
sti
mov
ret
and
mov
xchg
sti
sbb
lock
push
orl
inc
movsb
ja
sub
testl
rolb
stc
cmp
ffreep
fisttpl
das
movsb
push
ret
adc
test
xchg
sbb
jns
cmp
mov
ds
repnz
jbe
or
sbb
dec
call
xor
add
mov
das
cmp
pop
cltd
mov
mov
aas
ret
jmp
jae
das
js
cmp
test
pop
sub
aad
call
sub
dec
xor
dec
cmp
inc
push
fwait
cmp
cwtl
out
cmp
lea
in
inc
dec
sti
fistl
lahf
xor
pop
cmp
fstpl
dec
xchg
jb
fldenv
hlt
aam
lahf
int3
mov
insl
loope
cwtl
out
test
popa
mov
and
xchg
inc
das
xor
shr
clc
inc
mov
fbld
mov
push
dec
in
cmpsb
sbb
push
movb
or
pop
mov
hlt
jmp
mov
pop
push
push
fiadds
stos
mov
cld
dec
xorl
lahf
sub
dec
stos
sub
and
or
adc
cmp
and
sahf
shll
adc
sbb
rcrb
jne
xchg
ljmp
fildll
int3
repnz
mov
test
popa
jne
xchg
xchg
mov
dec
or
fisubrs
jl
add
ret
lock
add
mov
xor
mov
addb
jo
enter
pop
and
or
sub
adc
repz
sbb
jbe
and
cmc
cmpsl
add
and
mov
fidivrs
sub
sbb
enter
and
push
insb
rorb
mov
out
push
aad
fbld
mov
inc
mov
je
outsl
mov
jmp
popl
imul
inc
jno
and
xor
or
or
ljmp
scas
adc
sub
or
lcall
mov
shl
mov
mov
dec
in
dec
jae
inc
push
imul
cmp
inc
or
mov
std
mov
xor
gs
ss
es
cli
jmp
nop
mov
lods
popf
movsb
jg
mov
mov
mov
inc
mov
js
inc
gs
test
jl
loope
pop
cmp
inc
xlat
mov
push
cmp
push
pop
dec
mov
pop
lret
jnp
mov
xor
lret
adc
sbb
mov
repz
fsubrl
hlt
cld
test
stos
out
inc
and
add
in
fidivrl
fmull
jne
pop
mov
adc
mov
xchg
sbb
lock
testb
push
push
das
cwtl
jl
repz
lods
mov
ret
lock
insl
or
gs
scas
fsubl
inc
pop
push
and
inc
sub
jo
pop
mov
popf
es
fistpll
std
daa
add
sbb
jne
and
cmp
sahf
or
adc
rsqrtps
mov
xchg
mov
jnp
cmp
sbb
lahf
nop
sbb
pusha
push
or
adc
jae
je
push
xchg
ss
shr
fs
cmc
sub
stos
sti
mov
sahf
xorl
dec
inc
mov
out
cli
xchg
xor
in
popf
push
sbb
add
imul
mov
jo
add
cmpsb
push
leave
xlat
aam
test
mov
scas
mov
mov
test
repnz
xchg
into
mov
xchg
insl
sub
push
fistpl
je,pn
dec
dec
mov
nop
pop
js
icebp
ja
inc
cmp
xor
jns
in
sub
cs
push
or
mov
xor
push
push
out
iret
jnp
pop
mov
or
mov
jae
notl
les
cmp
test
cld
mov
mov
daa
ljmp
lahf
mov
inc
and
add
inc
add
pop
pusha
jb
je
dec
adc
aaa
jp
mov
or
lods
in
dec
jb
pop
cmp
xchg
pop
loope
outsb
jg
dec
fdiv
xchg
pop
sbb
add
xlat
push
mov
std
mov
out
xlat
and
xchg
sbb
push
inc
xchg
mov
push
push
xor
jmp
mov
test
sub
aam
mov
cmp
fwait
and
rcr
push
fs
out
pop
les
rcrb
test
ja
lock
insb
pop
repnz
jb
outsb
pop
ret
mov
vpmacsdqh
xlat
pop
and
mov
or
push
sbb
mov
pusha
sbb
daa
into
je
sbb
pop
in
sbb
mov
int
fcoms
mov
mov
dec
dec
dec
aaa
jg
fs
fadd
pusha
mov
dec
cld
lock
lods
sbb
add
sub
ljmp
cwtl
mov
mov
push
mov
in
mov
loop
ret
pop
xor
push
lods
inc
xchg
jp
insl
lcall
mov
daa
lahf
imul
int
sarl
pop
in
rcrb
fnstcw
test
pushf
inc
andl
inc
jae
std
cmp
insb
movsb
sub
es
rcr
dec
fdivrl
das
sub
scas
xchg
push
into
pusha
xchg
mov
push
mov
ljmp
shl
inc
cmp
pop
js
cmp
movsl
jns
ja
mov
aad
inc
stos
lods
xchg
shll
dec
fs
add
lods
xor
in
lds
xchg
insl
sbb
cld
push
add
mov
add
add
movsb
adc
pop
sbb
pushf
lret
in
sahf
or
adc
fisttps
dec
cmpsl
cmp
cwtl
jae
jne
out
out
lock
dec
xchg
inc
addr16
jmp
mov
mov
cmp
les
cmp
imul
nop
popa
jno
into
stos
aaa
mov
add
push
sbb
jbe
outsl
ret
clc
mov
cmp
xor
ds
dec
jns
movsl
es
popf
decl
loop
cmp
shll
or
pop
fmull
jno
mov
mov
fistps
sbb
sar
aam
xchg
pop
mov
cmp
jl
add
cmpsb
xchg
xchg
sub
sbb
push
insb
xchg
or
ret
sbb
cmpsb
ss
out
scas
cmpsl
jecxz
jle
stos
push
dec
aam
cmpsl
ja
enter
xchg
adc
lret
pop
xchg
movsl
shll
push
mov
mov
rcll
add
add
icebp
repz
and
inc
mov
ljmp
mov
sbb
jno
xchg
sarb
cli
xor
icebp
mov
mov
je
inc
dec
adc
and
call
enter
sti
out
inc
xor
mov
and
dec
mov
xchg
inc
jl
add
outsb
fisubrs
lret
push
xchg
xchg
xchg
test
nop
dec
sub
cltd
dec
inc
addr16
call
pop
xchg
mov
jnp
test
pop
mov
jmp
fdivrp
iret
fbstp
setle
or
dec
sahf
test
jae
pop
aas
imul
jae
lds
mov
or
scas
lods
stc
adc
pop
inc
and
push
push
mov
jg
and
enter
fistps
clc
lret
xor
sar
lret
xchg
ror
lcall
ret
or
call
leave
js
cmp
outsb
ljmp
sub
jne
mov
or
adc
in
movsb
add
or
push
adc
push
jno
fisttpl
clc
mov
jmp
ret
insl
hlt
xchg
xor
and
dec
je
xor
insl
adc
pop
xchg
insl
repz
or
cmp
je
das
sti
mov
mov
mov
sub
fsubrp
xchg
cmpsb
add
shlb
gs
pop
sub
and
aas
xchg
push
mov
out
test
or
push
pop
jnp
pop
int3
popf
test
movsb
insl
insl
ljmp
lcall
sub
test
or
inc
jle
jbe
mov
pop
cmp
and
sbb
daa
mov
inc
push
adc
leave
fmull
cld
push
inc
aad
mov
mov
sbb
mov
add
fcompl
dec
pop
addb
mov
sahf
xchg
rorb
dec
adc
push
cwtl
push
imul
daa
jecxz
xchg
cli
ror
xor
fldt
add
cmp
cmp
int3
iret
jne
mov
test
jbe
xor
sub
jnp
mov
fidivrl
jne
dec
dec
dec
lea
lahf
mov
inc
or
fists
cld
adc
mov
jb
xchg
mov
bound
aaa
sub
inc
int
scas
sahf
inc
pop
and
aam
cmpsb
cld
jne
or
imul
or
ja
cmp
cli
cmp
iret
mov
lret
jmp
mov
es
andnps
jg
movsb
into
xchg
jno
or
xchg
mov
cltd
rcll
inc
mov
cltd
stos
outsb
stos
jb
loope
cmp
cmp
pop
sub
stc
sub
dec
inc
out
xchg
stos
jg
mov
jnp
popf
fbstp
ret
ljmp
add
ds
inc
or
and
jle
add
rcrb
inc
je
cmp
mov
les
mov
mov
inc
sub
and
insl
cmp
popf
or
push
add
dec
xchg
cmp
inc
xchg
xchg
sbb
fisttpl
adcl
lret
outsl
out
in
clc
lret
cmp
adc
lds
adc
cli
loope
lea
inc
xor
into
xor
mov
jno
movsb
xor
xor
cmc
mov
loope
loope
xchg
pop
sahf
push
cwtl
or
jns
mov
or
xor
mov
xor
dec
dec
loope
jle
cmp
sub
or
push
lcall
inc
dec
pushf
addr16
and
lds
fisubs
test
nop
pop
out
lret
and
jae
cwtl
and
sbb
mov
ja
repz
int3
xchg
inc
outsb
dec
fbld
je
popa
cwtl
cmc
cwtl
xchg
cmp
mov
xor
cmp
xchg
cltd
mov
pusha
jp
nop
out
test
nop
mov
adc
aas
sub
sub
push
lods
aaa
pop
faddl
pusha
negl
in
mov
fistl
testl
dec
out
rorb
mov
shll
or
int
cmpsb
movsl
daa
int3
data16
inc
inc
gs
sbbb
outsb
nop
mov
jge
out
sbb
inc
jg
pop
in
dec
jecxz
aas
push
add
inc
addr16
push
xorl
das
fsubr
mov
jle
xor
push
mov
imul
push
test
pop
clc
test
stos
into
movsb
dec
loopne
xchg
sti
inc
jns
xor
mov
xchg
dec
loopne
fwait
push
jns
xchg
jbe
sbbb
lret
dec
jbe
mov
mov
repz
inc
pusha
lea
out
gs
mov
pop
cmp
sbb
ror
adc
ret
jno
pop
xor
negb
rclb
mov
das
test
mov
and
and
adc
mov
add
cmp
lock
loop
das
clc
insl
leave
pusha
and
sti
and
andb
enter
xor
data16
sub
loopne
lahf
stc
pop
xchg
inc
cltd
inc
mov
stos
fdivs
or
les
int3
pop
fstps
je
xlat
dec
jl
iret
dec
leave
xor
js
adc
inc
and
ja
pop
cmp
test
dec
enter
xchg
clc
jmp
add
xchg
and
arpl
outsl
mov
sbbl
negb
dec
push
daa
and
dec
mov
adc
addr16
pop
dec
pop
leave
repnz
loopne
ds
inc
std
sarb
mov
rclb
pusha
rcll
and
movsb
jb
out
out
inc
cmp
mov
cmc
ljmp
and
dec
imul
sub
mov
orl
mov
pusha
push
sbb
inc
sbb
push
int3
push
ljmp
adc
push
fnstenv
mov
and
mov
cmpsl
mov
xor
sub
push
jns
mov
insl
or
in
jle
out
sahf
inc
roll
movsl
lods
call
sarb
add
xchg
mov
push
xchg
cwtl
jl
push
adc
out
aas
push
lahf
ret
mov
scas
push
mov
push
push
push
dec
clc
inc
mov
gs
arpl
xor
stc
out
mov
call
imul
jb
cmpsl
or
fcmovu
dec
ja
pop
dec
mov
pop
subl
insb
stos
repnz
fsub
add
mov
dec
mov
orl
ret
or
pop
mov
cmp
iret
add
shll
data16
lods
jne
mov
scas
and
sti
lcall
dec
adcl
push
mov
jnp
dec
arpl
push
jbe
arpl
or
rcll
filds
xchg
jbe
insb
mov
mov
in
dec
outsb
sub
jecxz
sbb
mov
es
dec
mov
sub
or
lret
push
in
and
xchg
mov
pushf
lahf
jl
addl
sub
add
push
jg
das
mov
aad
and
popf
xchg
stos
outsb
call
sbb
aaa
inc
fdivrs
dec
loopne
push
push
in
push
add
push
sub
rcrl
fisubrs
lcall
ja
add
stos
push
fnstcw
sub
cmp
loopne
and
je
inc
scas
sbb
mov
mov
xchg
and
cmc
lds
inc
js
adc
pop
xchg
push
mov
push
insb
int
nop
xchg
cmc
es
or
add
data16
out
mov
lcall
jno
dec
or
das
pop
jp
pop
in
cmc
aad
insl
je
xor
lea
and
ret
testb
andb
bound
or
jecxz
andb
lea
out
int
or
out
mov
add
outsl
adc
mov
ljmp
cmp
add
mov
pusha
xchg
je
sbb
sub
mov
sub
sub
dec
cli
repnz
fs
cli
or
or
mov
pusha
lret
pop
es
or
ds
mov
or
test
outsb
fs
in
call
int
daa
aas
jle
fsubl
fisubl
jnp
ja
push
or
add
xor
lret
aad
push
fisttpll
push
stos
cmpsl
lea
sti
insl
mov
out
jns
mov
lret
cmpsb
or
adc
loop
nop
and
or
es
adc
scas
adc
ss
loopne
inc
jns
shlb
push
jle
and
shlb
lods
xchg
pusha
fwait
nop
mov
hlt
mov
in
andl
mov
scas
lock
dec
cmc
push
pushf
add
shrb
lock
xor
jb
cs
sbb
cld
pop
in
or
jmp
bound
mov
mov
pop
les
or
jl
test
push
out
orl
lret
sbb
pop
rol
and
cld
and
dec
cmc
and
in
or
nop
sbb
js
das
icebp
test
scas
movsl
mov
xchg
mov
fcmovnu
loop
mov
call
loopne
mov
sbb
adc
insl
pop
mov
sbb
out
jmp
psubq
jno
je
lret
inc
aaa
pop
push
bound
pop
fstpl
pusha
les
pop
in
lds
loopne
inc
add
mov
lret
sub
scas
loop
rcr
jno
mov
push
mov
cmp
mov
jmp
xchg
call
cld
test
sti
insl
xchg
insl
dec
mov
xchg
nop
ja
xor
inc
mov
dec
pop
notb
dec
mov
aam
fisubrl
mov
imul
aad
inc
idivl
daa
aam
sbb
pushw
arpl
cwtl
xlat
in
xor
push
test
ja
leave
add
or
mov
push
test
inc
xor
movsb
sbbl
fldcw
lods
test
clc
in
int
jmp
pop
push
gs
lret
mov
jg
out
pop
mov
mov
imul
push
cmp
ret
inc
xchg
push
sbb
adc
mov
leave
pop
cmp
test
lahf
mov
mov
add
ret
insb
push
cltd
inc
lds
inc
inc
test
sub
insb
dec
or
mov
ret
xor
inc
loop
js
jp
test
xor
loopne
push
mov
xchg
test
and
jge
or
das
sti
je
enter
int
mov
movsb
adc
mov
mov
sub
fwait
adc
ret
mov
roll
aas
add
cmc
sbb
mov
lds
sub
pop
or
pop
push
mov
mov
int3
arpl
repnz
call
and
xchg
popl
xlat
and
mov
sbb
mov
lret
pop
inc
mov
jmp
inc
hlt
or
cmc
xchg
ret
push
mov
inc
lds
ret
mov
fcompl
orb
scas
jo
add
push
into
pusha
rolb
outsl
inc
jne
sbb
in
lahf
xor
sub
push
inc
addl
sub
cld
inc
push
inc
adc
out
jp
lea
xchg
cmp
cwtl
enter
xchg
pop
cmp
aad
in
lds
aaa
and
inc
sub
dec
aad
enter
scas
test
sub
bound
add
es
in
jnp
stos
and
jp
cmc
xchg
jg
mov
jae
add
rcrl
sti
dec
pop
lret
addb
ljmp
jecxz
mov
adc
daa
mov
sbb
cmpsb
out
daa
or
pmaxub
lcall
or
imul
mull
in
pusha
lds
and
das
shrl
ret
mov
int
jne
cld
rcl
xor
mov
mov
fldenv
lods
sub
loope
ljmp
and
cmp
adc
cmp
mov
addl
push
xor
cmpsb
adc
xorl
int3
fsubl
shll
mov
leave
rclb
jne
pop
sbb
push
js
pusha
cli
cmp
outsb
int
push
ss
loope
xchg
adc
adc
adc
sbb
jo
jno
rcll
out
stos
hlt
or
or
add
pop
int3
jno
xorl
je
sarl
lds
push
sub
lahf
pop
add
xchg
inc
jo
xchg
in
loop
test
cmpsb
sub
scas
ret
pop
mov
cmp
jne
pop
sub
mov
mov
jmp
sbbl
repnz
xor
jae
incl
jecxz
aaa
cltd
add
mov
push
sbb
rol
fistpll
sbb
add
jle
or
popa
push
addr16
pop
jbe
sbb
je
xorl
jno
jo
arpl
sub
cmpsb
pop
subl
push
insb
inc
jmp
mov
jl
pusha
ds
rorb
rcl
nop
mov
cmp
push
imul
das
inc
add
jbe
hlt
in
inc
test
lea
fadd
sub
cltd
add
push
mov
gs
hlt
subb
mov
dec
mov
push
add
in
mov
stos
xchg
and
add
xchg
mov
inc
pop
mov
out
icebp
push
pop
mov
repz
mov
les
jne
bound
xchg
into
push
lret
mov
aad
sar
dec
mov
cmpl
aas
lret
xchg
inc
lcall
or
iret
ss
push
adc
xor
in
testb
push
sub
movsl
mov
mov
ret
rorb
or
xor
pop
inc
jne
add
jle
adc
xor
or
fsubl
daa
fistl
daa
cmp
and
or
push
call
fwait
lahf
push
dec
shl
lcall
mov
stos
testl
jne
mov
repnz
icebp
inc
scas
jl
and
daa
pushf
xorb
inc
push
clc
pop
mov
pop
pop
lock
sbbl
fdiv
mov
jmp
lea
stc
inc
xchg
hlt
push
adcl
ret
inc
and
stos
xchg
in
flds
lds
jno
cli
cmpsb
push
xchg
adc
lret
dec
adc
std
jb
pop
jae
mov
loop
push
jnp
xchg
enter
mov
mov
loop
mov
hlt
jg
andb
jl
rorb
mov
negl
cld
push
pop
add
sbb
cmp
cmpsb
pop
sbb
sub
jmp
outsb
dec
push
sbb
xchg
mov
popf
mov
cmp
mov
mov
lods
inc
push
mov
pop
lcall
dec
in
sub
jno
lea
pop
gs
lods
jae
js
out
mov
pop
inc
sarl
ficoml
push
mov
sbb
push
sahf
cmp
es
shrl
push
jp
push
popa
repz
adc
notb
outsl
cli
fdivrs
pop
lcall
push
scas
daa
xchg
cmc
cld
dec
push
aas
out
lret
aad
push
outsl
sub
jne
xor
scas
mov
mov
dec
pop
push
mov
ficomps
lods
mov
xor
inc
and
sub
cmp
push
inc
cmc
and
in
sub
sub
pop
test
sahf
xor
xor
das
mov
cwtl
inc
dec
jnp
in
adc
lret
btr
or
xor
and
divb
nop
xchg
imul
movsl
xchg
dec
add
jb
outsl
shll
cmp
aam
test
in
xor
and
in
mov
pop
nop
cmpsl
jns
add
std
ja
movsb
outsb
jns
fs
mov
push
sub
fadd
mov
filds
push
mov
scas
insl
add
in
test
cmp
mov
outsb
dec
cli
aas
mov
and
adc
pop
stos
or
shlb
aaa
fs
xchg
mov
jecxz
das
and
mov
movsb
push
pop
pop
mov
dec
xchg
jae
lock
jge
push
cmpsl
fcomps
sbb
stos
lret
inc
mov
cmp
sbb
imul
aam
jb
cmp
call
mov
sub
adc
mov
xchg
std
shlb
inc
call
outsb
ret
mov
rol
out
xor
js
ljmp
jl
cmp
js
into
pop
fs
fidivrs
in
pop
sti
in
and
into
mov
jb
push
lds
push
push
adc
aaa
test
and
lods
push
mov
mov
inc
fisttpll
aaa
jne
and
push
call
les
sub
sub
jb
es
mov
lret
jecxz
ret
lcall
mov
stc
and
frstor
ljmp
outsl
xlat
fcoms
mov
nop
xor
cli
mov
mov
outsb
cwtl
lret
sbb
sub
out
sub
movsl
mov
inc
lods
cmp
aas
cmpsb
sub
stc
push
mov
movd
cli
out
bound
xchg
orb
jnp
or
adc
js
mov
imul
cmpsb
cli
add
inc
mov
push
aad
lods
test
push
sub
daa
shll
loope
scas
insl
sti
ficompl
mov
pusha
sbb
popa
jno
and
dec
xchg
mov
test
inc
xor
movsl
push
mov
add
cmpsl
fdivl
dec
nop
and
insb
sbb
xchg
insb
and
mov
xchg
addr16
loope
pusha
insb
fwait
lods
push
dec
mov
or
out
push
push
xor
push
xlat
pop
call
lds
add
gs
adc
and
lods
fimuls
cwtl
add
mov
xchg
and
push
fstp
imul
hlt
xchg
push
jecxz
gs
mov
in
es
mov
jp
jecxz
out
loope
orl
jne
cli
add
xor
faddp
xchg
lods
scas
ss
mov
and
dec
enter
pop
into
jo
xor
push
shll
pop
xchg
movsb
outsl
aas
leave
mov
js
lods
or
aas
out
frstor
dec
orb
sbb
jge
mov
call
mov
mov
pop
imul
mov
ret
sub
add
je
cs
jle
push
sbb
stc
and
mov
test
fs
movl
addr16
cmc
lds
lahf
enter
jbe
lret
lret
or
pop
mov
inc
xor
mov
jg
adc
lcall
aaa
addr16
lock
addr16
pop
sub
das
mov
out
sub
ja
jns
cmpsl
mov
out
jne
mov
jne
inc
sub
imul
sub
or
add
or
mov
out
inc
xor
imul
sbb
shll
pushf
sbbl
test
xchg
outsb
imul
dec
inc
mov
rcll
push
leave
push
jbe
pop
adc
mov
lahf
mov
pop
pushf
iret
addr16
inc
gs
or
adc
int
pushf
adc
roll
in
pop
test
dec
adc
lcall
adc
mov
mov
sahf
jbe
imul
lret
xchg
xor
lods
xchg
sub
movsb
adc
sti
gs
xor
inc
jnp
test
imul
sub
stc
call
stos
ret
or
jnp
fisubrs
int3
test
loop
ljmp
out
das
test
test
sbb
adc
subb
sarb
rorl
pop
clc
outsl
sbb
xchg
dec
je
mov
pop
aas
mov
xlat
jp
cmp
and
pop
imul
jecxz
cmpl
iret
cltd
pop
pushf
sub
scas
icebp
popf
push
push
sub
je
mov
addr16
in
pop
cmpl
jp
inc
mov
sbb
repnz
rorb
in
push
mov
lcall
jmp
cltd
sbbb
mov
add
adc
mov
add
sub
sarb
sbb
ret
dec
pop
test
and
notb
outsl
fldcw
and
adc
pop
jmp
push
repz
test
repnz
stos
dec
mov
jmp
ret
repz
ficomps
ja
out
inc
in
int
cmp
sbb
popa
stc
int3
inc
or
mov
xchg
fsubl
shl
mov
fstpl
inc
push
cmc
mov
jge
out
jmp
in
icebp
adc
inc
xchg
dec
outsb
cmp
push
clc
les
aas
call
pop
arpl
push
popa
mov
xchg
fistpl
outsl
stc
add
repnz
imul
add
data16
add
imul
adc
insl
sub
jnp
mov
icebp
call
and
addr16
and
cmp
dec
mov
and
push
mov
outsb
cld
or
cmc
test
add
sbb
or
xchg
or
sbb
add
incb
addr16
cld
repnz
insb
inc
cs
push
sarl
inc
pop
lds
ret
or
shlb
lret
mov
add
shr
xorl
sub
shll
int3
push
lret
xchg
pop
test
xchg
clc
mov
popa
pop
mov
ret
mov
jge
movsb
push
pop
cmpl
vmwrite
call
pusha
jp
mov
out
sahf
fcoms
daa
cmp
ficoms
icebp
jbe
popf
jmp
jbe
jns
mov
xor
inc
xchg
lds
ss
add
xor
movb
mov
ret
mov
jg
pop
addl
xchg
add
out
mov
sub
mov
xchg
rorl
xchg
sbb
sub
outsb
rcrl
jae
stos
mov
cmp
lods
xchg
push
xlat
inc
aas
pop
cmpsb
and
xor
cmp
cwtl
mov
jne
aas
adc
flds
add
lret
out
ja
std
jne
cmp
outsb
inc
sub
fs
fcmovnu
outsb
pop
push
jp
or
subl
out
xchg
outsl
xchg
pop
xchg
xor
jge
xchg
mov
ljmp
push
cmp
push
xor
sar
les
cs
and
inc
daa
bound
lock
clc
adc
in
sub
pop
enter
enter
int
movsl
sub
icebp
js
xor
fisubrl
lret
mov
and
cld
pop
push
adc
inc
dec
inc
jae
cli
and
mov
cli
div
cmc
mov
pop
sahf
mov
mov
mov
stc
clc
xchg
xor
add
and
and
ret
sahf
inc
jns
scas
mov
jne
outsb
inc
jg
shr
repnz
lret
bound
dec
mov
scas
inc
jo
and
push
and
je
ret
push
inc
outsl
and
xchg
sub
and
out
jge
add
ret
lock
push
mov
data16
mov
rclb
pop
cmp
jp
inc
ja
es
jne
cld
mov
sbb
cld
lds
mov
popf
cmp
pop
pop
xor
push
xor
xchg
mov
aam
dec
xchg
pop
jnp
lds
subl
adc
vsqrtpd
push
or
out
pop
cld
dec
dec
fstl
stos
sbb
inc
jns
dec
push
mov
sbb
aam
and
adc
xor
les
mov
xor
and
jmp
pop
cs
push
rcr
imul
jge
roll
push
jecxz
or
mov
shrb
mov
pop
pop
xchg
jecxz
arpl
mov
jge
testl
fucomp
pusha
je
mov
mov
dec
xor
loope
pop
add
dec
cmp
xchg
das
out
xor
dec
jo
xor
mov
dec
aaa
lods
push
imul
insl
dec
ljmp
adc
es
push
jmp
test
mov
lahf
enter
adc
adc
xchg
setne
push
mov
faddl
push
xor
pop
sbb
fidivs
push
jg
rcr
cmp
in
xchg
test
clc
nop
and
or
outsl
inc
nop
cld
pop
xchg
xor
hlt
cmpsl
shlb
pusha
xchg
mov
lret
hlt
pop
push
jmp
rcrl
ja
push
xor
lret
lahf
loop
out
popf
cmp
into
fcompl
movsl
leave
mov
insb
pop
cli
cld
sub
gs
adc
cmpsl
push
xor
pop
xchg
clc
insl
rclb
ja
movb
es
sbb
dec
mov
sahf
cmpsl
push
mov
jae
int
stc
and
enter
sbb
cmp
cmp
ret
jae
insb
les
pop
xor
cmp
inc
pop
mov
enter
cmp
cmp
xor
pop
in
push
loop
mov
dec
xor
pushf
jo
shll
mov
sub
xlat
cmp
push
gs
sbb
std
pop
pop
sub
xchg
imul
adc
loop
jg
mov
out
out
jnp
mov
icebp
out
pop
xor
je
fndisi(8087
xchg
sbb
sub
test
pushl
jo
mov
cli
lahf
jmp
jp
adc
push
popf
mov
fisubrl
jb
in
mov
pop
xchg
les
cs
negl
pop
or
add
mov
lret
add
ret
in
push
sahf
clc
pop
xchg
lahf
pop
jno
sbb
pop
test
push
out
mov
stos
push
pop
stos
lods
jle
mov
inc
lret
insl
imul
loopne
and
mov
arpl
push
sahf
ss
ret
mov
mov
lods
lahf
repz
push
icebp
popa
sub
aaa
and
jle
cmovne
mov
cmpsb
out
fimuls
lods
das
into
jmp
cmc
pop
dec
xchg
test
push
ljmp
in
lahf
cmpsb
push
iret
cmp
adc
iret
mov
es
sbb
outsb
mull
jbe
movsl
ror
mov
lds
popa
mov
push
xchg
fnstenv
cmpsl
cli
popf
mov
andb
das
pop
pop
xor
ja
es
sbb
test
mov
pop
jb
and
adc
int3
cmp
int
sbb
dec
add
xchg
mov
sbb
pop
jl
leave
inc
jmp
cli
push
sbb
jo
or
js
pop
stos
cmova
scas
adc
jecxz
xchg
lret
test
jp
popa
cmpsl
xor
dec
inc
or
push
mov
ss
mov
sbb
das
scas
adc
dec
cmpsb
loope
repnz
jle
aaa
jnp
push
fisubrl
jmp
jle
incb
xchg
dec
jnp
js
pop
test
lods
xchg
hlt
pop
mov
jecxz
loop
rorb
test
lea
icebp
fsubrs
call
pop
pop
outsb
and
cs
arpl
mov
rclb
jns
vmulpd
std
flds
cmp
fldt
sbb
clc
sbb
dec
out
test
xchg
ja
sub
test
push
jmp
xor
clc
mov
rcl
add
xor
mov
jnp
nop
movsb
scas
mov
mov
cmpsb
mov
dec
mov
iret
out
sub
xor
lret
sbb
sub
stos
outsb
inc
fbld
in
rol
pop
faddl
jle
jbe
push
lods
imul
mov
xchg
rcrl
cmpsb
mov
test
testl
je
lods
and
inc
pushf
leave
in
mov
mov
mov
mov
jecxz
scas
mov
lock
jo
and
cwtl
jmp
inc
jbe
jns
inc
push
mov
movsb
sub
test
xchg
xchg
jnp
push
ret
sbb
jecxz
cmc
mov
push
cli
or
nop
lcall
and
sub
out
mov
dec
jg
test
dec
mov
push
jge
mov
mov
inc
xor
shlb
pop
add
lret
test
outsb
pop
mov
push
dec
cmpsb
imul
push
int
xor
imul
adc
xchg
jmp
test
cmp
push
or
and
iret
push
jmp
fdivrl
cwtl
push
stc
lods
cmp
nop
lea
xlat
mov
add
dec
push
push
jno
outsb
stc
xchg
imul
lcall
in
mov
outsb
xchg
loope
les
pop
addr16
nop
or
push
cmp
mov
outsl
aaa
dec
in
idivb
cli
or
push
or
dec
aad
lods
jl
inc
mov
into
adc
mov
sbb
add
les
cmp
in
out
mov
pop
pop
loope
decb
jb
bound
shll
pop
ficoml
dec
or
jns
xchg
es
inc
add
aam
pop
and
cwtl
cltd
outsl
lret
test
insb
cmp
or
shlb
xor
ljmp
fists
or
lret
xor
add
push
pop
pusha
sbb
es
push
lods
add
call
lahf
sti
test
aam
push
divb
sti
das
pop
mov
inc
xchg
daa
ss
or
and
ficoml
add
popf
cltd
xchg
adc
into
jmp
add
test
jle
jp
add
push
lret
add
pop
nop
pusha
adc
nop
and
cmp
push
ja
add
fistpll
cmp
lock
or
test
sarb
jmp
cmp
add
shrb
or
test
pop
xor
shl
adcl
mov
add
test
pop
ret
inc
cmp
jmp
pop
mov
insb
out
in
pop
lds
mov
push
inc
jns
push
add
ss
xchg
push
ret
jo
out
mov
add
in
inc
sahf
sub
adc
sbb
xchg
dec
sub
movl
repnz
dec
jp
sbb
lea
cld
dec
xor
addl
add
stos
leave
mov
and
or
mov
fs
hlt
stos
jl
je
pop
xor
repz
or
mov
nop
mov
pmulhuw
jae
inc
pop
dec
es
mov
mov
imul
or
daa
call
test
and
inc
xchg
shll
mov
push
inc
adc
repz
lock
jg
fisubrl
or
push
fucom
push
das
int3
inc
outsb
sbb
or
push
inc
mov
sbb
je
out
mov
sbb
dec
insl
mov
xchg
in
outsb
xor
mov
jle
fcmovu
push
aas
nop
lretw
int
in
sub
xchg
jmp
xor
stos
inc
fs
mov
aaa
add
fisubs
sub
fiaddl
jge
and
out
jecxz
cltd
jne
fsubl
adc
adc
jge
repz
pop
mov
lea
mov
cmpsl
jge
gs
xchg
mov
cmp
xor
and
push
leave
mov
cmp
fcomps
jecxz
xor
and
pusha
testb
pop
or
push
push
mov
mov
cli
ja
es
icebp
jg
sbb
mov
or
movsb
pop
aaa
shll
sbb
xchg
outsb
sbb
outsl
subb
dec
sub
sbb
cs
xor
out
push
stc
fistpl
rcll
or
shlb
mov
xchg
mov
mov
je
push
push
cli
popa
dec
out
scas
scas
mov
sub
add
xorl
adc
dec
icebp
int3
aad
dec
insb
std
shr
xor
fmuls
pop
cltd
pusha
fdivs
xchg
lock
rcll
fldt
fwait
loope
mov
pop
pop
stos
mov
cmpsl
adc
insl
cltd
lahf
mov
fwait
jl
dec
push
or
push
test
pop
xchg
mov
mov
add
ss
pop
cmp
stos
xor
adc
pushf
call
mov
mov
pop
outsl
mov
mov
cmp
mov
jge
rorl
cs
xlat
sub
ret
mov
xchg
mov
ret
cld
xchg
test
aam
add
movsl
jecxz
mov
sarl
test
addr16
sub
push
push
stc
add
repz
sbb
mov
shlb
test
std
lahf
stos
xchg
test
xchg
testl
or
xchg
inc
cmpsl
in
mov
inc
lock
jl
shll
arpl
mov
pushf
jmp
stos
sbb
mov
sbb
in
jae
and
lahf
jmp
mov
cmp
outsb
cli
das
xchg
cmp
iret
inc
outsb
jge
hlt
sub
adc
popa
xchg
das
es
aam
test
mov
xlat
imul
call
cmc
lds
shrl
xchg
jne
jg
ja
dec
cmpsl
dec
mov
mov
das
dec
or
repnz
xor
push
pop
sbb
xchg
cmp
outsl
xlat
aas
negb
cwtl
ret
popf
jbe
sbb
mov
or
push
dec
out
cmp
xchg
push
bound
push
das
insb
cmpsb
inc
ret
inc
nop
mov
lea
inc
xor
rep
dec
mov
jmp
popf
mov
stc
sti
inc
lods
xlat
inc
add
es
cmpsl
movsb
int3
push
or
repz
aad
lods
insb
pop
addr16
sbb
insl
or
jl
jl
cmp
xchg
adc
sub
adc
sbb
jmp
pushf
pop
loopne
lock
movsb
pop
or
add
fldt
scas
and
mov
add
lret
sbb
pusha
fisttpll
jnp
add
hlt
push
loope
rcrl
push
ss
mov
cmc
cmp
lahf
jg
xchg
pop
leave
rcrb
popa
mov
adc
add
hlt
cli
imul
fs
ret
pop
roll
jp
popa
sbb
lds
js
imul
js
clc
inc
push
std
test
jmp
int3
push
or
jmp
popf
jecxz
xchg
xchg
sbb
or
lret
jne
adc
stos
inc
mov
cmp
or
mov
dec
stos
test
mov
cmp
in
dec
or
adc
or
sti
and
push
pop
mov
test
and
sub
rcr
sbb
ss
in
sub
js
add
mov
lret
arpl
jae
cmp
pop
cld
and
sub
idivb
add
jge
sahf
push
call
and
js
push
ds
movsb
lea
mov
sub
inc
test
sub
xor
cli
inc
stos
dec
lea
inc
dec
sbb
cmp
xchg
add
arpl
aad
fldcw
jg
pusha
repz
xor
lcall
or
or
mov
test
out
inc
aam
outsb
inc
fisubrl
andl
and
aam
cmp
sub
fdiv
faddl
lds
and
cmp
pop
mov
stc
out
push
push
call
pop
adc
add
lcall
sbb
xor
sbb
out
and
inc
data16
int3
jb
xor
mov
sub
jmp
clc
mov
xchg
icebp
inc
or
mov
inc
js
pop
lret
xor
fmull
or
dec
sahf
and
loop
stos
mov
dec
jp
lret
jb
and
or
cmp
bnd
mov
inc
xchg
inc
jle
shr
dec
lods
or
sbb
mov
jmp
sub
fildl
cmp
in
add
mov
push
lret
sub
sub
cmpsl
cmp
lcall
je
lret
add
mov
mov
xchg
mov
in
xor
xchg
cmp
xchg
hlt
xchg
jp
jnp
jbe
add
jmp
je
mov
repnz
and
ret
aad
test
pop
mov
jp
out
jge
sbb
push
out
in
mov
mov
jp
mov
hlt
jb
and
lock
xor
pusha
clc
loopne
aaa
xor
inc
jns
in
repnz
outsb
mov
repnz
push
lcall
xchg
add
popf
xchg
mov
jo
shll
scas
lret
push
mov
adc
es
push
adcl
and
stc
jg
mov
test
sti
shrl
push
neg
sub
mov
mov
bnd
push
push
popa
add
mov
pop
xchg
lds
scas
jae
push
push
call
pop
cltd
lahf
inc
jl
mov
movsb
mov
jb
dec
xchg
inc
jns
mov
push
xor
push
adc
dec
outsb
daa
and
ja
xor
jb
cmp
and
xor
dec
pop
jns
sbbl
dec
cmc
mov
popf
hlt
sub
test
cmc
out
sahf
sbb
sbbb
dec
fdivrs
fnstcw
lcall
inc
push
and
sub
rolb
daa
mov
jle
out
pop
jge
jecxz
sub
ret
jnp
sub
or
push
cmp
xchg
mov
cmp
sbb
push
jno
sub
test
shl
sub
and
or
pop
testb
mov
ret
add
add
adcl
inc
test
dec
or
pop
push
mov
stos
arpl
push
addr16
outsb
fnstenv
insb
test
out
mov
fcoms
shll
dec
add
cmpb
jae
cli
sub
jae
dec
cmp
outsb
orb
sub
sbb
shl
jge
aam
inc
add
cltd
daa
fsubs
adc
lret
mov
pop
loope
mov
lds
sub
xlat
adc
push
xchg
mov
jne
aad
and
xchg
mov
pop
test
xchg
dec
outsl
pop
pop
in
bound
push
jp
or
roll
inc
jge
sub
out
cmp
push
cs
icebp
mov
mov
pop
or
lea
sbb
sbb
fmuls
cmpsl
lret
mov
push
fucomi
ja
mov
cmp
push
and
in
repz
dec
popf
jmp
xchg
xor
stos
lret
mov
lods
clc
movsl
out
lds
fistpl
inc
addr16
in
cmp
or
xor
mov
xchg
or
pop
lret
sub
cli
mov
mov
adc
sbb
lods
ret
adc
out
ret
jno
lret
push
nop
out
dec
or
outsl
addl
jge
je
test
mov
pop
sbb
dec
jns
xchg
or
out
pop
cli
jl
mov
clc
test
test
dec
mov
xchg
in
inc
xchg
mov
xorb
mov
fdivs
sub
test
jnp
sti
or
aas
or
xchg
pop
xor
adc
negb
xchg
movsl
xor
es
or
cmp
cmp
xchg
mov
or
push
xchg
mov
in
xor
fwait
xchg
sbb
es
inc
popf
push
cwtl
push
inc
dec
ret
sti
and
cmpsb
add
sub
sbb
jns
pop
sub
dec
push
lret
jge
mov
dec
mov
ss
pusha
push
cli
dec
rcll
jl
mov
iret
inc
adc
pushf
movlps
xchg
mov
jae
roll
das
dec
testb
rep
lret
cmc
cwtl
std
ror
pop
xchg
add
push
cld
mov
jno
in
xor
leave
ljmp
imull
ds
pop
inc
cmpsl
js
out
mov
jbe
cwtl
lahf
fisttpll
leave
test
or
lahf
cmp
pop
sbb
dec
pop
xchg
jecxz
mov
adc
jns
lods
push
sbb
rcll
sarl
xchg
inc
mov
test
push
test
cmpsl
jb
mov
arpl
loop
inc
push
dec
aam
dec
inc
mov
cmc
dec
ret
dec
sub
aam
mov
iret
dec
rorl
xchg
and
mov
daa
daa
icebp
add
sbb
sbb
scas
mov
cmp
cwtl
fmulp
push
or
icebp
lods
sti
lret
data16
or
mov
sar
jp
cmp
sti
mov
int
in
mov
pop
popa
lcall
notb
dec
and
xchg
xchg
int3
je
cli
or
imul
xchg
sub
push
mov
mov
int
fildl
hlt
loope
lret
ret
scas
xchg
decl
loopne
hlt
cmpsl
in
ret
test
inc
pop
cltd
jg
shlb
int
mov
lahf
mov
gs
scas
cmpsb
stos
ja
pop
inc
cld
in
push
inc
jp
in
xlat
sub
xchg
js
xlat
les
xchg
jmp
lret
insl
dec
mov
aam
adc
pop
icebp
jb
ljmp
out
inc
jecxz
arpl
mov
lock
mov
mov
out
cmpb
imul
test
push
jb
add
lcall
inc
push
or
xor
cltd
fstps
ja
inc
jns
and
xchg
data16
jns
les
cmp
sbb
push
push
dec
cmpsb
popa
push
cmpsl
dec
or
add
mov
lods
cmp
or
push
arpl
cmpsb
je
inc
mov
movb
add
xchg
jns
in
xlat
sbb
lods
adc
movsl
cmpsb
out
repnz
imul
ss
push
addr16
cmp
dec
and
dec
adc
in
negl
cmp
sbb
ficomps
xor
fistps
mov
mov
decl
fs
mov
push
sbb
or
sbb
dec
cmc
loop
push
sbb
loope
clc
cmpsl
push
fstpl
loop
xlat
test
out
xlat
outsb
adc
mov
daa
loopne
mov
jbe
and
int
repz
inc
test
mov
cld
test
sub
daa
or
jmp
push
and
cmp
lcall
mov
popf
popa
popa
xchg
or
xchg
in
add
jno
fucomp
fisttpl
sti
fistl
enter
xorb
cltd
mov
ret
mov
inc
lret
and
xor
xor
insl
fstpt
scas
in
mov
xorb
stos
xchg
sbb
xchg
inc
fisttpll
mov
lds
mov
arpl
iret
call
push
in
jecxz
int
xlat
sar
lret
sahf
insb
jb
test
outsb
and
push
pushf
cmp
imul
jo
and
and
mov
xchg
in
popa
mov
fstpt
and
shrl
cmp
ret
icebp
sahf
xchg
dec
xchg
inc
push
ljmp
ja
jmp
pop
scas
dec
aam
leave
mov
and
pop
clc
and
mov
push
dec
pop
repz
push
scas
xor
push
out
sbb
ret
ficoml
cmpb
dec
movl
pop
push
rcrb
test
dec
xchg
fmul
mov
lods
aas
not
mov
test
outsb
or
and
mov
pop
out
xchg
mov
adc
mov
mov
pop
push
sbb
sbb
pop
adc
in
es
cs
mov
arpl
leave
or
fs
daa
outsl
in
or
cmp
std
leave
int3
out
ja
int
lahf
or
rcrl
shll
das
and
ja
and
mov
es
dec
mov
aam
push
popf
popa
xchg
push
and
ror
sub
mov
nop
mov
and
push
pop
test
inc
fidivl
subb
movsl
testb
xchg
xor
je
push
xor
dec
sbb
loop
and
push
xor
mov
cmp
mov
or
jecxz
shlb
mov
mov
loopne
xor
shrd
dec
xchg
js
pop
sub
cmc
ds
mov
jbe
mov
mov
sahf
pop
js
pop
or
lea
in
leave
stos
hlt
ret
imul
adc
cwtl
dec
adc
jne
adc
inc
dec
xchg
or
int3
rol
lret
xor
add
popa
aad
es
push
jg
mov
nop
loop
cmp
sub
adc
arpl
daa
cmpb
ficomps
sbb
mov
push
scas
mov
loopne
jno
enter
mov
and
jmp
mov
dec
mov
add
dec
mov
cltd
sbb
mov
je
aam
clc
mov
int
push
outsl
dec
fxch
jle
shrb
and
jle
pusha
mov
pop
bound
daa
mov
aas
out
xor
cmpsb
inc
stos
add
imul
repnz
mov
cs
out
clc
bound
sub
inc
add
cwtl
pop
in
push
cltd
hlt
cmp
out
pop
add
cmp
scas
push
lcall
pop
and
scas
jnp
adc
xor
lret
add
pop
inc
adc
vmovaps
cli
fwait
xchg
jle
pop
cmp
flds
lds
cmp
and
mov
fcompl
add
mov
or
dec
rol
cmc
adc
icebp
mov
mov
in
mov
lret
pop
scas
insl
add
jge
lods
pop
ret
js
sub
imul
mov
punpcklwd
sbb
adc
ja
push
mov
fadds
push
inc
sbb
add
xchg
jnp
mulb
shll
dec
fcompl
jne
ret
jl
sahf
scas
subl
insb
scas
pop
push
jno
dec
clc
dec
fxam
pop
addr16
jo
sub
les
inc
cmp
xchg
fdivr
jp
push
xchg
sti
fucomp
and
loope
ss
cmp
dec
inc
cs
pop
push
sbb
cmp
rcpps
loopne
mov
jg
and
or
imul
add
inc
fdivr
jecxz
cmc
jbe
cltd
push
ret
and
lcall
test
inc
push
popa
jp
jle
xchg
out
add
adc
jne
repnz
in
stos
lret
xchg
lcall
ror
mov
rcrl
mov
ret
lea
ja
in
lods
push
pop
mov
xchg
je
leave
dec
loopne
mov
mov
movsl
dec
dec
scas
xchg
bound
xor
imul
xchg
inc
subl
ret
pop
insl
pop
ja
mov
popa
sub
xlat
incb
cmc
dec
scas
divb
jge
mov
out
or
pop
testb
imul
or
xchg
repnz
sub
clc
out
adc
sbb
aam
mov
mov
pop
les
xchg
xor
sbbl
in
cli
cmp
out
adc
flds
mov
pop
sarb
mov
hlt
outsl
sub
mov
mov
mov
add
mov
and
or
xor
cmpsb
or
mov
dec
inc
add
inc
add
cmp
inc
and
mov
and
in
shll
jge
xor
test
paddusw
shll
aas
fdivs
inc
mov
stc
clc
enter
inc
je
or
ret
and
push
enter
test
mov
inc
js
add
mov
mov
mov
sbb
push
lret
pusha
lret
adc
cltd
hlt
es
shl
xchg
test
pop
xlat
adc
enter
cmc
es
pop
add
insl
pop
cltd
or
out
mov
xchg
stos
movsb
inc
or
xchg
int
inc
ja
pop
arpl
stc
nop
popa
icebp
fimull
mov
push
icebp
andb
sub
cmovb
push
push
mov
mov
popf
mov
sti
pop
leave
scas
or
push
scas
ss
push
cwtl
jnp
push
mov
cmp
out
ja
cs
jl
leave
into
and
push
sarb
aad
or
inc
mov
idivl
mov
and
xor
daa
mov
jg
stos
sbb
mov
imul
dec
mov
ret
repnz
pop
fucomip
push
jnp
imulb
jnp
dec
addr16
jle
inc
dec
loopne
mov
jo
incb
sub
add
sub
cwtl
inc
cltd
shll
inc
mov
lods
loope
aam
inc
stos
sub
bound
adc
mov
call
shll
push
loopne
jl
cmp
adc
inc
xchg
pop
stc
ja
add
repz
xchg
mov
mov
cmc
pop
xor
add
pop
lahf
inc
inc
adcb
adc
ss
add
test
aas
cmpsb
mov
ret
ret
adc
jnp
push
clc
inc
outsb
lds
popf
ss
mov
lock
jle
hlt
aam
push
rcl
cltd
faddl
fs
and
inc
jge
push
aaa
incl
in
out
mov
push
push
xchg
sub
or
xchg
push
jge
subb
stc
fstpt
sahf
pop
roll
aas
jno
cli
in
pop
mov
push
sbb
ret
inc
icebp
cmc
sarl
push
dec
mov
mov
push
cmc
aas
addl
ficoml
cwtl
jne
xor
pop
sub
stc
add
psadbw
scas
cmp
sub
inc
imul
nop
or
add
inc
mov
jp
sub
lock
ss
pop
leave
inc
adc
icebp
lret
popl
mov
mov
cld
in
mov
cmpsl
pop
jp
push
jo
mov
push
andb
inc
and
sbb
add
or
filds
xchg
aad
push
xor
test
mov
decl
rcr
mov
push
bound
push
inc
push
inc
jo
or
push
adc
jmp
das
test
mov
into
add
jno
xor
adc
cltd
arpl
int3
mov
sbb
mov
cmp
mov
movsl
adc
in
clc
mov
test
dec
or
and
push
lret
pusha
loop
push
fsubl
pop
aam
mov
scas
and
fldl
pop
inc
mov
int3
sbb
popa
cmc
mov
xlat
mov
and
xchg
enter
xor
xchg
cmp
jle
mov
je
sahf
xor
test
mov
jle
cwtl
jno
adc
aad
cmp
and
stc
dec
pause
pop
into
xor
nop
inc
scas
inc
xchg
push
cld
mov
mov
dec
sbb
jg
jecxz
and
orb
movsb
pop
negl
inc
sbb
arpl
dec
and
adc
pop
bswap
pop
sub
mov
cmc
filds
icebp
ffreep
add
mov
push
lods
cld
arpl
mov
mov
pop
mov
movsb
sbb
outsb
push
push
or
dec
vmovd
and
add
xchg
scas
mov
mov
leave
xor
sub
leave
xor
xor
adc
sbb
or
inc
dec
adc
rcrb
in
lret
pop
jns
sbb
mov
dec
jmp
or
inc
mov
dec
push
mov
mov
jb
leave
rorl
mov
insb
mov
and
jmp
push
or
in
lods
xchg
popa
xchg
rorb
sahf
aad
cli
or
aas
ret
sbb
add
rorb
adc
rclb
adc
jo
inc
jl
out
int
lea
pop
add
jne
push
cmc
sub
cmpsb
mov
je
adc
xchg
in
iret
out
mov
jg
mov
movsb
je
pop
out
sbb
mov
jp
mov
fxch
mov
outsl
sub
jo
aad
sbb
pop
mov
popf
fsubrs
xor
pop
aam
mov
std
dec
xlat
int
pusha
stos
mov
mov
in
mov
xchg
ret
call
lahf
adc
cmp
jle
jo
mov
jge
sub
testl
cltd
mov
pop
push
xchg
imul
and
jbe
or
mov
and
or
scas
outsl
xchg
mov
dec
and
daa
aas
sbb
sbb
push
mov
subl
lods
dec
fcomi
loopne
mov
scas
jmp
idivb
pop
fisubrl
and
xor
mov
test
loope
sbb
add
or
mov
ljmp
in
cmp
or
or
fs
sbb
repnz
scas
jnp
push
lock
mov
lahf
ret
das
jl
cmc
pop
pandn
cltd
xchg
xchg
loope
cltd
iret
das
in
adc
add
rcrb
jmp
repz
xchg
shlb
and
out
add
or
pop
movntps
inc
cmp
sarl
test
bound
mov
repnz
mov
jl
lcall
outsl
mov
jae
cmp
ds
mov
pop
lcall
les
mov
rol
and
pushf
cwtl
or
test
frstor
pop
into
and
ret
xlat
inc
sub
test
mov
pop
in
lret
and
dec
sbb
mov
rcrl
fidivrs
sbb
int
sbb
add
fsubs
dec
enter
pop
push
cwtl
xlat
movsb
inc
sahf
lods
fmuls
mov
mov
int3
xchg
jbe
int3
xchg
mov
js
sub
inc
add
cmp
and
lret
lahf
mov
movsl
lcall
subb
inc
notl
ss
cltd
lods
mov
movsb
jg
lret
or
ret
stc
sahf
dec
outsb
or
lea
push
lahf
ss
int3
test
pop
push
scas
xlat
mov
fisttpl
push
sti
jp
mov
mov
gs
adc
testl
ret
push
push
push
mul
xor
out
adc
pop
mov
sub
mov
je
rcrl
ret
jmp
mov
arpl
or
ret
xchg
and
or
mov
mulb
jne
js
ds
mov
dec
mov
add
mov
jo
pop
stos
sub
or
pop
jmp
add
shl
pop
leave
cmp
gs
or
cltd
mov
cli
aad
xor
mov
dec
loopne
rclb
cmp
push
ss
cmp
paddsw
push
test
cwtl
and
pop
outsb
aam
sbbl
inc
gs
and
push
iret
ja
lahf
and
test
inc
stc
orl
fwait
test
mov
mov
push
jge
inc
xchg
outsl
inc
pop
add
xchg
cmp
cmp
cmpsl
mov
mov
mov
mov
ror
adc
and
inc
xchg
xchg
cmp
fldt
test
aad
inc
rol
cmp
inc
jns
scas
dec
mov
pop
repnz
push
sub
push
bound
out
packuswb
inc
sbb
or
push
cmovge
add
cld
sbb
and
dec
add
cmpsb
mov
mov
push
dec
pop
data16
sbb
xor
cwtl
jmp
jns
shll
jo
jb
divb
dec
jae
add
adc
andb
mov
rcr
pop
rorl
stos
sbb
mov
xor
subb
jns
ret
fdivr
cld
ljmp
rcll
sub
dec
xchg
pop
sub
lea
pop
insl
sbb
scas
mov
fstps
pushf
inc
repz
daa
mov
adc
aaa
loop
mov
dec
mov
push
imul
pop
shll
aaa
cmp
sub
xacquire
fmuls
clc
notl
pop
arpl
popa
shrb
xchg
repnz
jl
push
out
sbb
gs
push
mulb
push
movsb
lcall
into
mov
ret
ja
call
or
mov
loopne
push
pushf
inc
dec
push
push
es
sbb
dec
inc
clc
xchg
stos
mov
and
jecxz
push
sub
adc
xor
adc
mov
cwtl
gs
mov
shrb
aam
jb
insl
jb
inc
mov
pop
mov
mov
xchg
ja
xor
and
inc
add
xor
mov
pop
sub
cmp
fdivrl
pop
shrb
pop
cmp
in
or
outsb
push
pop
enter
jg
pop
push
ss
pop
cmp
aam
push
push
adcb
subl
push
and
in
sub
mov
and
sbb
jge
adc
pop
mulb
mov
and
pop
xor
nop
stos
dec
mov
xchg
sbb
adc
fwait
cmp
xor
add
sbb
in
mov
loop
sbb
xchg
inc
add
jo
cmpsl
dec
sarb
or
dec
dec
test
insl
cs
fsubrl
scas
or
xor
lds
push
push
pop
lret
inc
add
sbb
loop
lods
mov
or
and
popa
lods
and
mov
out
inc
sahf
cmpsl
mov
and
xor
cmp
cmp
mov
inc
rcrb
cmc
ficomps
ret
and
addr16
adc
rorl
sub
cmp
mov
xor
iret
in
inc
xchg
cmp
and
arpl
sbb
mov
xchg
movsb
pop
pop
mov
or
sub
xlat
js
mov
js
and
in
pop
jg
push
test
fstps
into
push
gs
sbb
pop
outsl
dec
ljmp
or
int
or
cli
fidivrl
inc
cmp
fwait
push
xor
cmp
ljmp
mov
adc
lock
jmp
loopne
push
shlb
in
cmp
lea
shlb
fidivl
dec
movsb
xor
sub
shll
push
roll
sub
loopne
arpl
test
xchg
jmp
sti
mov
jle
shlb
mulb
mov
aas
xchg
sahf
pop
mov
pushf
jbe
outsl
sti
push
fsts
sti
clc
cwtl
dec
mov
or
and
out
out
out
ret
fisttps
mov
ja
pop
lret
sub
xchg
and
mov
xor
dec
pushf
pop
and
cmp
fdivl
ss
clc
mov
inc
jecxz
inc
jb
dec
push
sarb
test
fildl
push
and
jl
pushf
imul
jmp
pushl
cmp
mov
cli
out
push
mov
cmp
xchg
jnp
dec
xchg
fdivl
sti
cmp
xchg
cmp
push
test
fstpt
divb
jle,pn
out
mov
stos
cmp
push
cmc
add
into
out
aaa
sbb
addb
cmc
cmp
mov
in
mov
enter
fldl
lahf
lret
pushf
sbb
push
stc
xchg
adc
mov
adc
jg
jnp
mov
in
nop
mov
sub
data16
jl
pop
mov
gs
jbe
sub
testl
or
pop
arpl
test
push
add
inc
lods
and
testb
int3
ret
pop
mov
xchg
mov
and
jmp
or
nop
push
push
mov
fldt
movsb
repnz
push
in
sbb
aaa
jge
xchg
xor
fadds
test
mov
sub
or
mov
xor
lods
inc
and
movsb
jne
pop
xchg
int
jp
push
sbb
icebp
in
push
outsb
repz
adc
movsb
sub
add
mov
nop
popa
mov
sbb
jmp
cwtl
jge
pop
repnz
fsubl
sbb
fnstenv
push
push
pusha
sbb
or
je
divb
mov
int
mov
jbe
or
sbb
adc
loopne
lods
movsb
sub
out
xchg
xchg
lods
adc
lahf
xor
lds
jge
mov
imull
pop
xchg
in
add
aaa
iret
lock
aad
xchg
inc
pop
mov
int3
out
leave
cmp
cmp
dec
test
mov
enter
pushf
dec
pop
mov
mov
sbb
xor
movsl
enter
arpl
cmp
mov
or
fwait
out
push
stc
jecxz
mov
xchg
stos
mov
je
jbe
pop
lahf
in
cld
iret
insb
iret
clc
push
jecxz
add
shrb
mov
movsl
mov
sahf
pop
inc
insl
sbb
jl
sbb
cmpsb
push
inc
xlat
lret
ja
cmp
loopne
adc
jmp
inc
cmp
mov
scas
ret
testb
sbb
shlb
mov
jb
std
and
jge
lcall
jbe
testb
arpl
sahf
pop
mov
rcrb
test
cltd
popf
add
clc
aas
push
sub
loopne
xor
xchg
dec
popa
inc
aam
enter
jns
fadd
addr16
pop
jo
adc
lret
mov
mov
jg
fcomi
fdivrp
bound
adc
sbb
xor
hlt
mov
xor
loope
les
lods
or
add
add
lcall
in
xchg
adc
loop
pop
clc
push
sahf
cmpsb
push
shll
and
add
jmp
out
std
cltd
test
imul
out
cmp
push
sbbl
rcrl
fmuls
jne
testl
call
xchg
fimuls
sti
fsubrp
je,pn
pop
or
push
push
inc
aad
iret
lcall
sub
cmp
xor
cmpl
cli
decl
mov
and
xchg
push
sub
push
rclb
fs
test
es
fscale
lahf
aam
push
xor
lods
cmp
and
leave
mov
orl
movsb
arpl
ss
adc
addr16
gs
test
mov
sub
fwait
push
dec
es
lods
popf
mov
xlat
out
xchg
mov
ja
lret
mov
xor
push
pop
popa
mov
das
push
or
push
cltd
push
mov
and
sbb
inc
lret
lret
and
jnp
adc
mov
pushl
push
push
jnp
scas
cmp
cmp
fs
mov
mov
cmp
inc
stos
and
xor
mov
adc
adc
scas
cmpsl
push
insl
push
sarl
push
out
sub
pop
cmp
daa
dec
dec
sub
cmp
mov
sbbl
xchg
aaa
xchg
dec
add
jnp
and
sbb
sub
lods
mov
push
call
xchg
add
xchg
out
in
ja
iret
sub
or
sub
xchg
dec
js
sahf
cwtl
xchg
pop
movsb
and
cmpl
mov
dec
dec
or
xor
sub
outsl
test
movsl
test
push
adc
xchg
cwtl
cmp
sbb
fdivp
push
push
push
sbb
dec
std
push
rorl
popf
fs
push
out
les
cmp
addr16
into
mov
xor
shr
xor
fs
jp
mov
arpl
mov
push
std
gs
mov
adc
cmp
cmp
push
xchg
pop
jno,pn
cmp
pop
cmc
mov
push
cmp
inc
sbb
repnz
lcall
xchg
out
out
xchg
cmc
or
adc
push
roll
xor
insl
pushf
mov
cmpsb
mov
inc
cpuid
cmp
jle
cld
and
cmc
iret
push
incl
xchg
cmp
and
lret
jbe
pusha
mov
outsl
ret
push
push
into
inc
jb
lods
aad
test
mov
stos
ret
int3
std
fstl
jp
mov
pop
mov
mov
push
in
dec
loop
jo
jo
xchg
mulb
and
aaa
cmp
mov
push
ret
adc
add
xchg
xchg
repz
and
inc
fwait
or
in
mov
inc
mov
dec
mov
inc
jb
and
and
jl
fimuls
pop
imul
int3
pushl
test
mov
das
std
xchg
sti
fs
pop
push
cmp
jp
outsl
in
call
pop
mov
into
and
es
jle
xor
add
xor
out
mov
mov
loope
jge
jg
lock
sbb
lods
incl
std
mov
data16
xchg
roll
mov
and
adc
inc
push
bound
adc
fisubl
dec
xchg
and
jbe
shl
mov
negl
mov
add
inc
inc
in
cmpsb
jae
sbb
popf
test
int
inc
sub
outsb
loope
loopne
out
mov
xor
dec
mov
push
cmp
ds
clc
loopne
dec
xchg
jmp
lahf
nop
xchg
mov
jnp
xlat
mov
js
inc
outsb
or
leave
adc
imul
fimuls
lret
imul
or
out
inc
jmp
or
push
or
andb
insl
aas
test
push
cld
ds
popf
jns
iret
insl
fs
dec
es
clc
sub
push
sub
fs
mov
mov
add
repnz
inc
inc
push
adc
pop
div
in
or
pop
jmp
push
pop
sub
mov
lahf
inc
sub
xchg
fmul
int3
or
and
sbb
mov
icebp
push
and
cld
dec
lea
outsl
jmp
xlat
jp
rol
test
mov
xchg
xor
adc
mov
std
lret
add
sub
jae
sbb
push
fptan
add
lahf
fidivs
or
rcrb
test
inc
mov
add
sbb
aaa
pop
cmpsb
push
lods
push
and
lcall
push
jl
sbbb
mov
sbb
mov
add
jmp
cld
cmp
cli
xchg
cli
dec
jle
mov
jne
push
int3
cmp
or
jne
mov
lds
dec
lods
cmp
mov
in
pop
lods
loop
pop
cmp
rclb
cmp
jle
andb
pop
ljmp
pushf
mov
mov
fucomi
popa
lret
lea
xchg
clc
xor
shlb
pop
imul
push
xor
xor
idivl
sahf
and
adc
lcall
ljmp
jp
pop
mov
insb
rolb
xchg
mov
cmc
cmc
daa
adc
xchg
cltd
pop
out
mov
nop
jb
push
sbb
imul
pop
fmull
inc
xchg
pop
sahf
or
sub
cmp
mov
gs
dec
push
adc
repnz
xor
icebp
movsb
xchg
and
rorb
adc
jne
gs
jl
push
xor
hlt
repz
mov
icebp
daa
js
jecxz
repz
push
xchg
jb
std
int3
imul
outsl
jp
arpl
sar
int
out
hlt
add
jmp
cmp
pusha
xor
cwtl
add
cld
lret
incl
ret
jl
daa
mov
adc
call
into
bound
xchg
mov
sbb
loop
cmp
pop
cs
idivl
or
push
xor
bound
fimull
dec
dec
jno
push
imul
push
or
lods
mov
arpl
addr16
inc
mov
cli
push
sub
arpl
jecxz
mov
sbb
sub
add
mov
outsb
inc
sub
lahf
scas
jl
ud1
xor
sub
pusha
popf
pop
lods
enter
in
pop
ljmp
sub
enter
sti
add
lods
stos
mov
test
test
shlb
xor
pop
sbb
push
cmp
cmp
cli
mov
nop
sub
mov
sti
add
fstps
mov
push
inc
daa
adc
dec
and
jl
addr16
pop
sub
xor
xor
mov
jmp
jg
mov
mov
cmp
xchg
mov
dec
test
xlat
cmc
gs
aad
mov
aas
test
mov
sub
push
jno
imul
cwtl
insb
add
in
pop
pop
mov
jae
adc
pop
or
push
pop
mov
test
cmp
cltd
dec
dec
lock
dec
das
cli
mov
fsubrl
in
daa
sbb
mov
pop
push
aas
mov
imull
jbe
in
in
xchg
orb
pop
std
cmp
mov
call
mov
or
and
fwait
lret
jecxz
xchg
imull
sbb
fcomp
and
repz
mov
arpl
clc
sbb
xor
outsl
dec
in
sub
mov
push
xchg
subb
pop
aaa
mov
xchg
sbb
lret
dec
subl
pop
add
mov
push
mov
cmp
icebp
fldenv
inc
pop
lahf
lock
and
mov
aaa
jmp
adc
push
push
jnp
xor
inc
xor
jge
push
or
sub
jno
and
dec
jae
sub
dec
adc
pusha
sub
inc
dec
adc
mov
add
ds
push
jge
dec
or
stos
arpl
jp
fstl
pop
and
insb
ljmp
pushf
sub
and
pop
xchg
fimull
dec
sahf
insb
dec
mov
ror
negb
mov
mov
stos
cmpsl
push
cli
mov
insl
filds
add
cmc
sub
jne
mov
jl
mov
adc
aad
int3
cmp
cmpl
psrlw
cmp
call
mov
mov
jle
xor
xchg
push
jle
cmc
test
cmp
push
pop
mov
mov
psraw
hlt
jns
aas
pop
pavgb
push
jne
loop
sbb
fistps
sub
in
popf
xchg
aad
xor
jp
aam
add
add
push
pop
jecxz
scas
sbbl
mov
inc
inc
leave
cmp
pop
cs
test
aas
into
mov
cltd
xlat
push
cmp
out
mov
push
sub
and
cmp
cmpb
xor
dec
out
in
mov
scas
push
cmp
aaa
jmp
mov
mov
outsb
dec
lock
adc
dec
mov
adc
aam
push
inc
inc
xor
in
mov
sub
mov
fs
push
out
adc
ficoms
and
rorl
sti
jnp
sahf
jl
push
cmp
mov
mov
and
test
arpl
lret
repnz
xchg
or
adc
and
out
mov
iret
frstor
out
sahf
mov
pushf
les
int
mov
pop
push
dec
in
aas
fcmovnb
loop
xchg
dec
movsb
add
jle
int3
push
jecxz
jae
lock
mov
call
sbb
lods
mov
lods
push
and
pop
in
lret
stos
arpl
mov
ret
mov
mov
imul
xor
sbb
lret
pop
pop
xchg
inc
xchg
and
xor
clc
push
out
lcall
jae
push
ja
inc
inc
out
adc
jbe
scas
enter
xchg
into
loope
xor
jno
cmp
push
pop
loop
icebp
xor
mov
xchg
and
movsl
pop
sbb
dec
sarl
rcrl
popa
insl
je
iret
push
insb
dec
and
test
aad
sbbb
fdivp
fcmovnb
push
jb
inc
jbe
mov
je
pop
cld
dec
fmull
aaa
fwait
cmp
movsl
jo
ret
dec
xor
ja
in
lcall
orl
mov
cmp
xlat
fcoml
sbb
insb
lcall
pop
movsl
out
addr16
sub
mov
cltd
aaa
jmp
jge
pop
sqrtps
mov
cmp
sub
or
and
dec
jle
nop
sahf
sarb
xchg
pop
mov
ficoml
out
test
cs
out
jl
xor
mov
in
insb
js
mov
lret
ret
ja
mov
sbb
ds
test
iret
push
jns
lahf
cmp
xchg
les
jo
adc
pop
pop
imul
int3
lahf
xor
inc
out
iret
iret
ss
in
lock
sbb
pop
jnp
outsl
dec
pop
fsubrl
adc
into
xlat
jle
push
les
lods
push
sbb
cmp
sbb
addr16
xchg
mov
xor
leave
fsubrs
fnstsw
stos
dec
push
sub
or
mov
add
xchg
mov
arpl
jns
stos
mov
or
movsb
into
or
adc
je
push
or
hlt
mov
stos
out
lock
loopne
sarb
jecxz
iret
xchg
and
jmp
and
das
mov
js
popa
push
in
or
mov
pop
xor
iret
loopne
and
lret
add
insl
stos
lret
and
xchg
nop
cs
xor
rol
adc
out
ss
jbe
lods
push
push
sbb
loop
cs
cli
adc
daa
and
mov
test
mov
in
xorl
insl
inc
inc
push
push
and
sub
cmp
xor
sbb
imul
and
lds
inc
sahf
into
jne
mov
nop
push
stos
add
scas
out
xor
mov
das
mov
cli
cmp
loop
xchg
inc
jno
outsl
xchg
out
rcrb
inc
xchg
loope
sbb
dec
into
dec
jb
and
je
mov
aad
push
mov
mov
out
imul
pop
les
pop
lahf
xor
adc
imul
pop
pop
sarb
push
cs
inc
and
add
fstl
rcl
ret
mov
into
frstor
imul
stos
sbb
mov
pop
insl
adc
clc
push
inc
cltd
sub
cld
lret
xchg
mov
xor
out
push
add
insl
test
jbe
xchg
mov
and
mov
aad
mov
into
mov
inc
fistps
nop
dec
lods
mov
imul
push
lcall
aam
inc
inc
mov
cmp
push
ret
pushf
ss
popf
push
mov
jg
fwait
xchg
dec
pop
pop
je
imul
add
repnz
sub
aaa
xchg
test
push
add
mov
pop
mov
and
cld
lock
push
cwtl
rcr
pop
arpl
shl
dec
cmp
lds
test
dec
ret
pop
aam
push
rcrl
clc
orb
add
xchg
adc
testb
add
mov
sbb
dec
add
movsl
fwait
add
je
addr16
pop
stc
movsl
popl
mov
fisubs
leave
and
and
sahf
push
adc
adc
das
cld
push
scas
pop
in
scas
dec
fs
add
orl
addl
lock
out
sbb
daa
or
sub
add
scas
push
insl
cmp
test
nop
xor
cmc
rorb
popf
adc
shrl
jge
scas
jns
les
stos
cltd
mov
jae
fmul
popa
imul
ficoms
cmp
fildl
pusha
add
xor
mov
insb
and
in
sbb
scas
sbb
inc
dec
filds
push
rcrb
orl
ja
mov
negl
icebp
mov
cmp
or
add
jmp
mov
mov
aad
ret
out
jmp
mov
dec
shl
xor
mov
mov
sbb
cli
sbb
es
data16
xor
and
clc
mov
sbb
aaa
add
movsb
fwait
leave
test
sahf
gs
popf
push
cmp
nop
ud1
in
mov
cld
push
xchg
inc
cli
sbb
lret
data16
jne
popf
loop
sahf
mov
cmpsb
loop
xchg
sub
mov
iret
dec
mov
sub
sbb
in
cmp
in
icebp
hlt
insl
or
aaa
lock
gs
cmpsl
dec
mov
mov
jecxz
sub
idivb
or
and
hlt
inc
addr16
and
or
cmpsl
addl
jno
lret
das
sti
add
movsb
add
push
fdiv
imul
std
xchg
sti
movsl
in
or
es
aad
jmp
push
nop
and
ja
mov
mov
pop
ljmp
test
xchg
and
into
cld
add
pop
fucomi
xor
mov
sbb
mov
in
push
mov
adc
loope
xor
test
cmp
add
aam
test
push
jo
xchg
xor
xchg
clc
test
int3
mov
jmp
iret
xor
jge
push
xchg
decl
and
xorb
lret
mov
mov
stc
iret
mov
jmp
in
popf
push
out
ljmp
mov
imul
stc
cwtl
adc
int3
popa
or
sti
sub
push
cs
aad
dec
inc
jp
mov
cli
and
in
outsb
aad
repnz
nop
popf
mov
int3
data16
cmpsl
repz
sti
mov
lret
push
adc
or
sub
mov
inc
fimuls
fidivrl
jecxz
add
mov
mov
mov
sub
mov
fs
add
mov
dec
test
call
xor
dec
sbb
popf
jmp
test
fbstp
loope
mov
jo
sbb
mov
adc
in
jecxz,pn
adc
mov
mov
mov
aaa
imul
push
shrl
add
out
scas
stos
dec
std
jmp
sbb
ficoml
stc
push
sub
js
mov
leave
and
pop
ljmp
mov
iret
aas
fdivp
int3
stos
sbb
inc
into
jae
jmp
bound
mov
enter
sub
lds
and
lret
mov
je
lds
mov
les
or
test
mov
or
popa
adc
xchg
nop
gs
fstps
test
repnz
mov
ja
addb
in
adc
test
mov
fstl
push
sbb
rorl
fiadds
xchg
jbe
fsts
dec
fnstenv
inc
jge
xchg
jle
push
lret
pushf
jecxz
addr16
sbb
imul
jmp
push
dec
push
cli
dec
mov
push
lldt
adcb
pop
int3
test
push
lods
mov
sbb
sub
pop
iret
adc
push
aas
ret
jp
cmc
les
int3
push
sti
mov
ss
adc
mov
jae
arpl
fisubrs
adc
aas
dec
mov
sbb
xchg
inc
lods
and
mov
dec
fnstcw
mov
cwtl
iret
or
jle
in
mov
inc
mov
shrb
ret
adc
int
xchg
adc
lea
jnp
outsl
loope
lods
fadds
cld
jecxz
sub
out
push
lods
xor
movb
or
sub
in
pop
xchg
adc
es
push
cmpsl
and
pop
shll
addr16
lods
sbb
mov
loopne
xor
fistpl
mov
cli
add
pop
xchg
dec
aaa
mov
mov
sub
adc
or
aas
fwait
jecxz
ret
dec
add
and
mov
cwtl
sub
sub
dec
xchg
loop
dec
dec
mov
in
add
xor
xchg
inc
out
cli
sub
xchg
das
pusha
into
repz
mov
pop
pop
cmp
fcompl
test
clc
stos
popf
lahf
and
mov
notl
mov
xor
lahf
xchg
xor
cmpsb
sahf
xchg
sub
pop
jns
mov
sbb
add
stos
cmc
int
fucomp
cmpb
sbb
lret
or
rorl
jp
cmpsl
loope
mov
push
sbb
outsl
xchg
icebp
or
pop
or
sub
or
cli
pop
shll
enter
jne
sbb
cltd
sbb
fldl
or
push
ret
gs
adc
inc
dec
movsb
jg
inc
cli
rcr
stos
mov
cmp
mov
ret
in
and
mov
add
in
jl
push
ljmp
lods
dec
fstpt
mov
cmc
sub
or
outsl
adc
mov
gs
les
xor
xchg
adc
sub
pop
subb
push
cwtl
mov
fwait
jne
sub
ja
jne
cmp
add
pop
outsb
mov
or
sbb
fs
mov
iret
jge
leave
jbe
xor
sbb
jae
aam
movsb
push
adc
dec
mov
or
leave
hlt
mov
xchg
pop
out
jmp
aas
shll
xchg
adc
inc
adc
icebp
loop
subb
mov
and
sub
cmp
aas
rclb
shlb
jecxz
popa
loope
stos
dec
roll
dec
cmp
std
int
cmc
ss
dec
push
fcoms
inc
push
adc
jge
push
mov
ret
adc
sbb
lds
mov
pop
mov
ja
or
clc
xor
pop
loope
inc
inc
lret
inc
or
xor
enter
add
imul
dec
jp
xchg
mov
idivl
push
scas
fldcw
mov
cmp
scas
shl
add
aaa
jecxz
scas
and
mov
outsb
stos
mov
xlat
insb
xor
dec
dec
imul
cmp
jne
mov
movl
cs
cld
cmpsl
jle
lahf
mov
dec
add
cld
and
rclb
in
jae
fwait
adc
push
jg
cmpsl
aaa
adc
push
loope
mov
sahf
push
sbb
dec
xchg
cmp
dec
mov
dec
in
push
imul
mov
pop
lods
mov
pop
and
or
cmc
test
sub
push
and
push
sbb
or
adc
inc
mov
mov
fadds
syscall
out
popf
test
mov
sbb
sbb
test
xchg
lock
ret
push
dec
xchg
cli
negb
sbb
subb
enter
test
insb
and
and
lods
ret
xchg
lret
mov
bound
stos
push
into
or
cmp
inc
es
adc
adc
movsl
inc
mov
lret
cwtl
ret
jae
test
sub
push
mov
imul
fisubrl
shlb
jl
add
xor
pop
testl
dec
cmp
fistpll
adc
cld
fcoml
push
shlb
sub
sahf
cmc
scas
cld
dec
xchg
movsb
sti
or
outsb
jb
mov
push
cld
mov
xor
push
mov
add
in
sbb
mov
stc
movsb
nop
jge
lret
test
lock
jg,pt
in
jbe
pop
push
pop
sbb
cli
and
imul
xor
sbb
in
sbbb
fistpl
push
lret
inc
sub
mov
add
les
lods
lods
push
xor
int
daa
jle
fsubrl
xchg
jb
sub
mov
sbb
aad
out
push
jmp
lea
iret
dec
and
add
js
ds
js
es
sub
or
push
lret
xchg
adc
pop
cmpsl
dec
imul
and
push
addb
push
mov
fisubrl
mov
jne
int
push
mov
outsl
jge
ret
lret
jbe
sub
aam
in
pop
mov
xlat
xchg
add
int3
xchg
mov
jno
mov
sbbl
movsb
fwait
xchg
daa
add
inc
loopne
nop
stos
daa
dec
loopne
mov
ljmp
divb
fwait
mov
out
movlhps
xor
cltd
cmp
rcrl
mov
inc
out
xchg
sbb
pop
pushf
mov
mov
mov
lret
cli
fidivl
mov
test
stos
vhsubps
mov
in
cwtl
pop
outsb
ljmp
sub
filds
mov
inc
lahf
push
push
faddl
sub
xor
int3
hlt
mov
bound
mov
lock
adc
test
or
cpuid
loop,pn
mov
jge
xchg
xchg
sub
sub
push
in
test
jmp
iret
adcl
xchg
adc
mull
mov
imull
stc
sub
cld
or
jecxz
sub
daa
movsb
dec
ds
aaa
mov
pop
cli
push
loopne
js
dec
mov
mov
shrb
sub
mov
cwtl
lea
loope
mov
out
adc
ret
icebp
pushf
repnz
push
mov
cmp
mov
test
cmp
in
dec
into
or
loopne
adc
cmpsb
push
cmp
fs
in
mov
fs
lods
js
dec
sub
lret
or
mov
xchg
cmp
mov
ret
fwait
inc
cmp
fists
add
sbb
add
mov
or
xor
out
mov
cmp
outsb
fwait
sub
add
xlat
inc
or
addb
jmp
mov
out
push
inc
lret
add
mov
dec
sub
sarb
adc
mov
add
mov
cmc
cmpsb
leave
loop
jle
push
cmp
xchg
pusha
shlb
loopne
test
inc
lcall
xor
add
lahf
push
xor
pop
ljmp
adc
mov
adc
aaa
pop
sub
mov
pusha
or
pushf
cltd
push
push
insb
sbb
xor
pusha
icebp
cs
ljmp
bound
stos
cs
pop
mov
sub
xor
das
loope
rclb
dec
push
inc
clc
lret
xchg
dec
lds
pop
or
es
pop
jnp
sbb
lds
popa
insl
stc
or
loop
rcrl
imulb
nop
out
mov
insb
cmp
mov
sub
sti
adc
insb
in
inc
rcl
mov
mov
clc
cltd
in
cli
jmp
out
stos
pop
push
leave
imul
idivb
push
je
stos
mov
gs
sbb
fidivrl
xchg
sub
mov
push
lcall
lds
xchg
push
pop
lret
cmp
adc
adc
pusha
push
jp
arpl
movsl
push
lods
lods
mov
or
lock
dec
inc
lods
jo
inc
pop
cltd
std
movsb
fists
aad
aaa
jbe
or
loop
mov
orl
lods
push
sbb
leave
lods
dec
pop
ds
test
mov
mov
ljmp
mov
pop
sub
out
sub
lret
data16
mov
jg
xor
dec
adc
push
push
sub
addr16
jo
add
sbb
xchg
add
jbe
or
xchg
xchg
cmp
les
cmpsb
mov
mov
mov
std
loopne
loopne
pop
pop
mov
je
imul
fildll
scas
iret
cmp
aaa
dec
test
les
cmp
in
ds
sbb
xchg
xlat
movl
inc
andl
xchg
andb
js
sub
and
xlat
jecxz
cmp
lock
ja
sbb
xlat
pop
push
lcall
mov
or
mov
out
dec
cmpsl
andb
movb
xchg
fiadds
out
sbb
inc
xchg
cmp
push
sub
sbb
sbb
enter
lret
loop
lret
call
cmp
loop
sub
xchg
sub
xchg
lods
sti
fcoml
gs
in
pop
int3
sbb
mov
rcrl
add
mov
iret
mov
cmpsl
cltd
push
imul
in
sbb
aas
lods
mov
lret
sub
movsb
push
movaps
dec
xchg
sub
shl
jae
out
xor
xchg
int3
jae
adc
addr16
das
cmpl
or
xchg
xchg
or
jno
lock
enter
icebp
stc
sbb
lods
lcall
das
mov
test
mov
xlat
sbb
pop
flds
lods
loopne
pop
andl
shlb
movsl
push
stos
cmp
xor
mov
dec
sub
pop
mov
mov
pushf
arpl
sahf
and
imul
jl
aas
pop
mov
hlt
inc
popf
and
jno
rcl
sahf
jo
xchg
pop
adc
imul
cmpb
fildl
xchg
pop
fsts
inc
cltd
out
jb
repz
test
add
addb
popf
xor
pop
add
in
lds
xacquire
sbb
lds
lods
imulb
into
push
cmp
pop
lret
sbb
lds
pop
imul
adc
aad
filds
jmp
out
push
pop
xchg
and
sbbl
mov
movsl
mov
push
pop
std
or
pop
mov
test
xor
inc
pop
push
xchg
sahf
xor
rcrb
mov
push
add
movsl
bound
lock
jecxz
mov
lods
mov
fisubl
inc
daa
and
mov
pop
and
sti
aas
pop
pop
jp
fldl
inc
jge
push
mov
popa
inc
loope
mov
cmp
inc
jmp
sbb
sbb
stc
lret
mov
aas
push
push
stos
pop
xchg
out
repz
andl
out
aaa
cs
cmpsb
mov
or
fstpl
ds
mov
xor
ret
adc
jae
cmc
cmp
dec
mov
mov
sarb
add
mov
mov
add
mov
mov
jnp
jnp
mov
std
xchg
and
dec
inc
cmp
das
dec
clc
incl
or
jg
inc
sbbl
mov
lea
mov
jmp
push
add
sbb
xchg
cwtl
inc
and
mov
adc
cld
in
loope
push
cltd
push
pop
sbb
push
jl
and
xchg
pop
fidivl
fwait
inc
sub
adc
sbb
int
repnz
dec
xchg
in
lcall
out
daa
and
push
xor
cmpsl
add
dec
cmp
inc
add
in
xor
ficompl
push
test
or
add
cmp
jno
cmp
fdivrl
sub
or
cs
and
jmp
push
je
pop
cltd
dec
or
fcomip
cmp
mov
lods
fisubrl
sub
jb
jo
adc
xchg
dec
push
movsb
movsb
in
jp
sbb
jmp
movsb
shrb
pop
outsb
shl
sar
dec
mov
and
and
loop
adc
dec
sbb
push
add
repnz
out
xor
add
fildll
push
cmp
fdivl
ja
inc
fsub
mov
sbbb
cltd
insl
out
xchg
mov
divb
xchg
div
sbb
cmp
inc
and
scas
jecxz
fnstsw
hlt
rcr
dec
sub
gs
push
push
shrl
inc
outsl
add
mov
orb
pop
cmp
js
aam
sub
mov
sbb
pop
arpl
adc
xchg
sbbl
mov
fildl
pop
mov
lcall
push
out
mull
arpl
jmp
pop
pop
lret
out
push
ficoml
mov
out
lea
mov
into
ret
stos
inc
insb
dec
push
xor
lods
mov
jo
or
jge
cmp
cmp
jmp
or
push
xchg
jb
fiadds
and
dec
xor
jbe
rcrb
jns
pop
int
inc
mov
push
push
jcxz
mov
loop
mov
cwtl
enter
sarb
sub
sbb
xchg
dec
xor
push
cmp
movsb
andb
roll
sahf
in
xor
xchg
movsb
test
mov
or
adc
pop
push
fsubrp
test
test
pop
imul
mov
mov
adc
and
adc
in
and
in
orl
add
sub
aad
inc
ss
inc
mov
in
repnz
mov
lcallw
xchg
adc
das
push
xor
inc
xchg
ror
adc
dec
push
xor
xor
test
jle
dec
mov
sbb
mov
test
cmpsl
xchg
jg
mov
lret
movsl
or
xchg
xchg
bound
out
ret
into
test
insl
jnp
sarl
pop
jmp
mulb
push
jecxz
xchg
sbb
xlat
pop
sbb
fnsave
xor
mov
jecxz
jbe
inc
add
movsb
loop
or
inc
lahf
dec
into
xor
cmc
in
jg
push
push
in
pop
inc
into
jecxz
pusha
dec
cld
dec
jmp
fdivl
inc
adcl
sbb
jl
and
ljmp
jge
cmc
xchg
iret
inc
mov
xlat
aad
lds
xchg
test
cmp
mov
mov
inc
lcall
cmp
sbb
scas
sbb
add
mov
int3
lock
or
push
daa
xchg
pusha
pop
test
lret
lret
in
clc
pusha
push
pop
sub
in
icebp
dec
cmpl
push
and
loope
sbb
lret
dec
stos
in
cld
mov
xchg
adc
push
loop
and
lret
aam
push
jl
cld
scas
jns
xchg
cltd
sub
pop
mov
xchg
jle
sbb
sub
daa
xchg
out
dec
xor
insb
in
xlat
adc
jecxz
aas
xor
sub
and
out
jl
jno
andl
jae,pn
jb
ja
pop
mov
inc
and
add
jo
gs
push
icebp
jmp
dec
repz
jo
rcl
jb
cmp
jne
push
sub
adc
and
mov
aas
out
addr16
cmp
pop
lret
negb
push
imul
inc
jno
aad
adc
sbb
add
movsl
and
dec
in
xorb
xorb
repz
add
fucomi
and
outsb
cwtl
into
and
mov
insb
push
test
test
jl
out
cmp
fldcw
dec
jmp
xchg
push
dec
push
imul
mov
enter
xor
sub
mov
subl
adc
xor
ljmp
push
imul
shll
inc
outsb
xchg
mov
lret
lret
jne
cmp
out
ud2
out
mov
dec
iret
in
lea
and
jecxz
dec
or
cmp
fisubrl
lds
sbb
add
add
out
or
lcall
cld
out
or
cmp
dec
jnp
les
pop
outsb
mov
sub
jmp
pushf
cli
add
xchg
hlt
sub
jp
push
mov
gs
stos
mov
mov
daa
test
es
sub
mov
sahf
insb
push
ror
inc
inc
and
and
ret
add
and
sbb
pop
lods
or
xlat
jbe
ds
mov
fucomi
jnp
jbe
mov
mov
jo
fdivrp
stos
and
push
loop
cld
in
hlt
or
in
xchg
ret
mov
jge
out
incb
mov
push
nop
inc
sbb
iret
cs
es
cwtl
push
test
aaa
dec
adc
cmpsb
jmp
insl
in
dec
adc
adc
inc
stc
and
or
add
jp
cmp
ja
sub
and
insl
loopne
dec
xchg
inc
movsl
or
jb
mov
popf
adc
pop
adc
sub
inc
adc
cltd
mov
jo
out
cmpsb
sbb
fld
roll
mov
jns
and
ret
popa
or
in
ret
sbb
test
ror
dec
cmp
pusha
mov
mov
inc
fs
insb
mov
pop
inc
fnstenv
mov
cmp
orl
outsl
jb
cld
mov
cmp
test
ljmp
push
sbb
mov
inc
jne
icebp
js
aas
mov
mov
push
xchg
mov
cmp
cltd
repz
call
pop
inc
cmpsl
outsb
bound
adc
cmpsl
add
fs
mov
cmp
xchg
mov
dec
pushf
pop
mull
jns
cmc
adc
push
mov
fnstcw
jmp
sarb
pop
inc
push
insb
push
jns
insl
jns
lds
adc
sub
pop
ss
pop
push
ljmp
or
push
xchg
out
xchg
rcll
xlat
movsl
nop
and
pop
loop
dec
cmp
jmp
add
or
inc
jbe
push
sahf
ds
or
dec
push
cltd
test
lock
bound
mov
cli
ds
ss
cmp
push
mov
push
movsb
fmuls
mov
xor
xor
xchg
jle
addr16
js
adc
xchg
add
push
pop
nop
and
ljmp
jnp
pop
xor
and
cmp
mov
cli
adc
or
or
sti
ljmp
inc
nop
and
lods
ds
loopne
idiv
xchg
call
add
ret
es
movq
lds
dec
lods
das
sahf
ds
jae
push
push
dec
and
mov
mov
dec
shlb
lods
scas
adc
fisttpl
push
clc
cmpl
hlt
mov
jl
and
decb
sahf
sti
cmp
adc
pop
jmp
push
mov
adc
and
out
jns
dec
inc
fwait
mov
enter
xor
ljmp
fs
lds
sarb
call
mov
xchg
sbb
inc
lret
daa
into
ljmp
jmp
lods
push
rorb
push
add
sbb
cmp
sbb
jmp
mov
inc
ret
imul
jle
fld1
add
push
push
filds
push
or
mov
mov
daa
add
fcompl
and
stc
add
or
cmp
add
aad
leave
je
shll
add
mov
jae
mov
sbb
sarb
vpand
add
mov
pop
pusha
mov
sbb
stc
xchg
arpl
inc
in
std
xchg
xor
xchg
adc
pop
and
sbb
outsl
mov
xchg
xor
add
jnp
and
jmp
idivl
mov
scas
add
fsubrl
lods
mov
add
cmp
mov
test
popa
outsl
pop
add
jecxz
mov
pop
xlat
clc
add
ljmp
lea
das
xchg
js
out
xlat
xchg
add
lahf
inc
xorb
xchg
inc
and
fnstenv
push
adc
sahf
insb
dec
cwtl
mov
jg
sub
jg
and
sub
push
xchg
jne
cmp
mov
xor
mov
out
daa
sbb
and
pop
in
inc
or
ss
fisttpll
cmpsb
pop
mov
in
out
pop
fnstsw
jae
cmp
sbb
mov
ljmp
mov
stc
les
mov
dec
es
cld
dec
ds
mulb
insl
xchg
mov
inc
mov
aas
cmp
mov
mov
ficoms
cmpl
aas
push
into
out
inc
xchg
or
add
adc
icebp
or
mov
bound
mov
mov
stos
and
dec
cmp
push
mov
icebp
dec
addr16
mov
js
test
orl
push
rorl
sbb
stos
out
or
push
scas
ljmp
xchg
mov
lods
jno
add
cmp
shll
jns
sub
mov
mov
daa
daa
mov
mov
sahf
jns
pop
adc
xchg
push
add
xchg
lock
pop
orb
inc
cli
fisttpl
pop
add
in
out
xor
addl
jne
lret
sub
enter
jb
fwait
xor
sub
fbld
add
mov
pop
jmp
inc
outsl
cmp
sbb
jne
or
mov
sbb
loope
repnz
mov
movsl
in
add
xor
or
outsb
sbb
push
leave
jns
xor
aaa
loope
ljmp
xor
scas
mov
lret
xlat
pop
mov
iret
fcomps
les
into
cli
xor
adc
cli
push
xor
stc
xor
pop
iret
sub
mov
pop
dec
and
clc
popf
push
pushf
dec
add
xor
lcall
cmp
fisttpl
xlat
shlb
rcrb
aaa
adc
ja
sti
psraw
or
pusha
iret
test
cld
mov
cmp
movsl
pushf
pop
add
jae
test
push
daa
inc
sbb
call
cmp
outsb
xchg
sti
sub
loop
pop
jg
mov
call
outsl
jle
sbb
mov
lods
dec
pop
cltd
and
aad
sbb
cmpsl
in
ret
ss
cmc
cli
cwtl
pop
pusha
pop
and
call
mov
xchg
iret
xchg
mov
add
lea
sti
scas
gs
or
push
pop
rcll
mov
adcl
jne
xchg
pushf
sub
dec
xchg
dec
mov
ljmp
mov
sub
fs
test
ret
and
pop
lret
sbb
out
lods
xlat
mov
inc
lahf
loopne
mov
fs
and
out
xchg
ret
jg
mov
rep
mov
pop
into
js
pushf
cmp
mov
shrb
mov
mov
inc
rolb
jbe
pop
shr
pushf
aas
fucomi
xor
stc
cld
mov
hlt
fcmovbe
mov
sub
pop
cmp
punpckhwd
pop
in
push
fwait
mov
jae
push
inc
stos
pop
fcomp
jne,pn
xorb
mov
aas
xchg
in
decl
push
xchg
xor
jne
and
cmp
mov
pop
aam
jne
jle
push
xor
cmpsb
jecxz
lcall
divb
stos
mov
fpatan
les
lahf
aam
jo
xor
pop
enter
cmpsl
cmp
push
adc
pop
ret
xor
adc
idiv
aad
mov
pusha
adc
sbb
cmc
sub
cmp
jae
out
pusha
popa
aad
lds
cmpb
cltd
inc
xchg
and
scas
popa
subl
dec
adc
sbb
ja
iret
mov
pop
sahf
or
je
subl
add
clc
fcmovb
sti
iret
scas
sub
rcrl
mov
jne
les
xor
xchg
in
add
cmpsb
inc
mov
inc
mov
sub
jecxz
ljmp
stc
outsb
add
inc
cwtl
xor
cld
mov
aam
pushl
push
pusha
cmp
add
dec
push
test
ss
pop
sbb
mov
xlat
mov
in
xchg
jmp
sub
lahf
jb
fstl
call
xchg
sub
xchg
shl
imul
bound
xchg
mov
jnp
inc
inc
jae
dec
mov
pop
mov
push
in
mov
rol
or
xchg
mov
jns
pop
jl
cmp
push
les
mov
or
imull
pushf
or
cmpsl
push
jns
popa
inc
aas
add
pop
scas
gs
lcall
xorl
mov
mov
and
and
int3
and
adcb
pop
loop
mov
mov
or
pop
mov
imul
loop
xor
sbb
into
cld
stos
rorb
scas
dec
sub
loope
sub
hlt
mov
cmp
jo
mov
push
shll
jns
mov
jno
gs
mov
addb
in
jno
cmovae
sar
pop
add
and
in
aam
xor
std
sti
cmp
or
mov
xor
adc
ret
insl
in
sub
in
xor
jo
xor
pushf
js
jp
cmp
cmpsl
pop
push
test
fst
jge
imul
or
jno
mov
shl
shll
mov
int3
fwait
test
fmuls
fsubrl
sbb
pop
inc
jecxz
mov
decb
mov
outsb
xchg
dec
aas
sub
movsl
jb
les
mov
xchg
inc
xchg
mov
and
jg
sub
mov
mov
imul
inc
fwait
loope
jl,pn
mov
ljmp
jbe
push
pop
lea
sbb
dec
lahf
pop
cmp
out
inc
enter
inc
ret
fldl
stc
or
inc
dec
push
test
xchg
cmp
dec
inc
add
lds
daa
mov
sbb
test
js
sub
or
inc
loopne
addr16
cmpsb
cmpl
or
int
push
stos
rolb
jecxz
jne
or
sub
fisttpl
inc
pop
cmp
jp
out
js
loop
sbb
mov
sub
mov
repnz
lea
test
lahf
mov
lods
mov
dec
fcmovnu
cmpsb
sbb
call
ljmp
push
push
cmp
pushf
addl
fstpt
cmc
mov
dec
mov
sub
or
mov
jge
loopne
mov
sub
aad
pop
stc
mov
lods
iret
insl
lock
fs
add
mov
push
or
fidivrl
aam
decb
pop
add
xchg
in
shrb
or
or
in
sub
leave
push
fldcw
mov
shll
jno
xor
mov
popf
sbb
jbe
test
fldt
xor
jg
inc
pop
adc
adc
inc
mov
xor
sub
mov
mov
mov
fistpl
xchg
push
test
in
mov
mov
mov
bound
cli
andb
popf
pop
jne
xchg
std
lods
push
inc
adc
inc
jmp
popf
cmp
pushf
movsl
jg
cmp
bound
in
aam
inc
pop
data16
inc
loop
mov
outsb
xchg
hlt
or
adc
sub
in
fwait
insl
fs
insl
jbe
pop
mov
pop
fidivl
call
es
stos
and
pop
cmp
sub
add
jbe
xor
xchg
shrb
and
int3
mov
hlt
lahf
ss
mov
nop
mov
cmp
cmp
xchg
repnz
je
fisubs
cmp
mov
mov
mov
sti
dec
test
movsb
cmpsb
xchg
lcall
jne
push
aas
out
cmpl
xor
jle
add
ds
push
dec
aaa
push
sbb
mov
sbb
nop
orl
orb
pop
mov
inc
jmp
mov
int
cmp
adcl
add
cli
sub
mov
dec
jp
and
loop
std
push
in
inc
sbb
icebp
cmp
xchg
mov
pop
hlt
rcll
mov
xor
pop
add
cmpsb
cltd
sub
nop
and
adc
loopne
dec
and
decb
jge
or
ffreep
xor
xchg
cld
add
pop
mov
sub
sub
aas
fwait
movsl
cmpsl
mov
mov
insb
nop
push
je
fistps
jecxz
into
xor
mov
mov
inc
mov
lahf
add
arpl
jb
or
jo
decl
mov
imul
push
xchg
add
mov
adcl
mov
adc
enter
dec
arpl
dec
add
pushf
adc
dec
pushf
fsts
fadds
int
or
mov
dec
xchg
or
hlt
cli
sbb
aad
outsl
mov
xor
add
mov
mov
add
xor
push
imul
sbb
nop
int3
dec
cmpsb
dec
loop
jge
rcl
mov
pop
push
popf
mov
add
lea
test
lock
outsb
pop
dec
call
inc
mov
xor
sbb
shlb
sbb
loope
pop
popa
in
popa
and
push
fistpl
insb
mov
jle
ljmp
test
add
xor
imul
sub
add
and
cli
jge
add
dec
es
imul
mulb
add
inc
adc
jp
push
js
enter
mov
mov
out
jecxz
mov
jno
ja
mov
loopne
lock
push
add
out
lock
mov
sbb
lods
xchg
jbe
xchg
insl
pop
mov
cmpsl
rcr
addr16
sub
aam
in
fbstp
ds
jle
mov
xchg
pop
and
pop
or
mov
pop
mov
jle
jecxz
mov
mov
inc
iret
add
ds
es
inc
std
mov
push
mov
loop
xor
sbb
test
mov
test
pop
stos
dec
or
cs
inc
pop
imul
lcall
mov
call
out
dec
or
mov
jmp
int
jnp
jp
lret
push
neg
testl
xchg
push
jp
lods
lret
imul
mov
push
ja
cmc
fstl
pop
jmp
add
testb
jbe
sub
mov
aas
stos
pop
aas
xor
fiaddl
fs
rorl
cmp
shrl
test
pushfw
mov
ja
test
cltd
das
jl
push
cmp
mov
cwtl
sub
mov
sub
sub
add
mov
jg
imul
mov
call
addr16
adc
addr16
rcll
add
dec
lods
clc
mov
cmpsl
mov
es
clc
xchg
sub
not
nop
outsb
inc
fbld
xchg
and
dec
sbb
sbb
pop
fisubl
fidivrs
fcoms
rcrl
enter
jp
sbb
add
adc
jbe
incb
mov
lret
popf
mov
pop
jecxz
imul
pushl
jne
and
push
pop
adc
inc
insb
out
cmp
push
mov
mov
fnstenvs
sub
push
sbb
mov
inc
mov
pop
jp
ds
out
dec
and
addr16
lahf
sub
dec
pusha
sub
mov
test
mov
fadd
xchg
mov
dec
mov
pop
xchg
sbb
loop
aam
ljmp
fisttpll
inc
mov
rep
and
int3
pop
inc
sub
fldt
mov
das
sub
out
mov
lods
jge
mov
stos
push
rclb
andb
dec
jns
inc
adc
mov
test
push
jne
hlt
cld
pop
push
divl
iret
andb
test
cmc
mov
bound
xor
aam
cld
mov
sbb
dec
add
mov
or
stc
xor
cltd
inc
pop
and
dec
cmp
jmp
je
imul
jle
and
mov
mov
push
or
scas
out
adc
jmp
add
pop
pop
iret
inc
inc
pop
inc
push
test
imul
lock
push
cmp
int3
jo
cmp
leave
inc
mov
enter
sub
dec
cwtl
cmpsb
je
test
cmc
mov
insb
fwait
jnp
in
dec
jmp
pop
inc
dec
fisttpll
add
sbb
jno
push
inc
outsb
std
mov
inc
mov
mov
pop
xorb
push
sahf
ret
adc
push
mov
bound
scas
cmp
xchg
cwtl
adc
cs
jl
adc
pop
setge
sbb
lret
mulb
jbe
cld
xchg
cli
dec
test
push
nop
ja
jmp
jns
jg
ds
mov
mov
mov
xor
sub
jmp
lds
outsl
adc
mov
data16
loop
fadds
cmc
mov
idivb
jecxz
jae
adcl
pop
test
adc
xlat
andl
mov
pop
mov
mov
mov
iret
repnz
or
test
and
sbb
pop
inc
mov
fnstsw
sbb
mov
mov
push
addr16
je
jecxz
stos
mov
pop
lahf
mov
das
addr16
jb
int3
stos
push
jne
adc
dec
int
pop
add
push
xor
dec
call
and
shlb
lds
ret
pop
in
arpl
or
rorb
or
shll
adc
out
mov
mov
sahf
inc
push
mov
jb
cmpsl
jg
push
cmc
jnp
fldlg2
xlat
xchg
frstor
push
push
push
and
cmp
cmp
filds
cmp
add
js
adc
push
subl
add
or
push
sbb
jne
add
dec
jge
or
or
lods
rorb
and
sub
repz
push
in
push
cs
xchg
or
sbb
mov
or
out
mov
aad
add
cmp
dec
mov
xor
pop
imul
testl
out
xchg
and
aaa
lret
es
mov
ret
or
outsl
push
adc
cmpsl
mov
rcll
mov
data16
lret
lods
fistl
pop
xor
shlb
sarl
and
mov
in
arpl
xchg
das
or
into
mull
mov
and
aam
out
mov
fistpl
jg
loope
push
jnp
add
aad
out
lock
cmpb
pop
mov
or
mov
xchg
and
repz
xchg
sbb
adc
scas
push
in
outsb
xor
mov
out
and
ja
xor
mov
dec
popf
cmp
outsb
push
fistps
inc
dec
cs
cltd
add
mov
and
inc
dec
imul
add
add
xor
and
loop
sub
shlb
pop
ficoml
loop
pop
xor
call
jl
jo
cmp
fsts
jb
push
push
cmp
or
fistpl
mov
lret
push
addr16
or
fistpl
mov
int3
dec
adc
addr16
or
fistpl
mov
addr16
lahf
push
addr16
add
mov
dec
add
int3
pop
adc
call
add
rorl
mov
dec
or
test
lahf
push
addr16
mov
xor
mov
dec
adc
lods
pusha
loope
addr16
or
int3
pop
mov
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
repz
stos
cmp
jle
xor
push
addr16
lahf
push
addr16
adc
lret
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
adc
rcll
jg
push
or
addr16
lahf
push
addr16
popf
mov
or
addr16
lahf
push
addr16
xchg
stos
sub
ljmp
cmp
mov
mov
dec
add
int
or
aad
adc
fstps
fstpl
lret
roll
sahf
and
jnp
call
lahf
push
addr16
lahf
push
addr16
add
call
rclb
call
loopne
bnd
in
repnz
sahf
push
int
fcomps
addr16
sub
addr16
cs
lock
sub
lock
sub
sbb
push
les
pop
or
push
lods
mov
xchg
inc
mov
sub
pop
jbe
add
or
movsl
push
or
push
lods
mov
xchg
sub
repnz
push
mov
sub
repz
push
repnz
sub
callw
fucomip
in
dec
lock
dec
callw
out
jecxz
push
repnz
push
mov
sub
xlat
jecxz
push
repnz
sub
sub
lock
dec
callw
out
jecxz
push
repnz
shl
lahf
push
outsb
add
mov
xchg
sub
pop
pop
in
mov
aam
ljmp
in
push
in
ljmp
xchg
dec
ljmp
lods
int3
and
push
insl
and
mov
pop
in
mov
pop
repnz
sub
lahf
push
push
ret
ret
jecxz
push
addr16
sub
ret
jecxz
push
ljmp
push
data16
fldenv
lahf
fdiv
inc
fwait
push
data16
push
addr16
lahf
push
bnd
dec
callw
call
jge
dec
callw
dec
jmp
and
push
push
repnz
lock
fcmovnbe
lahf
push
fimull
sub
jecxz
lahf
push
push
test
icebp
sub
out
lahf
push
push
test
jmp
sbb
icebp
gs
into
jecxz
push
shll
clc
push
into
jecxz
push
ljmp
push
addr16
lods
call
fwait
push
data16
push
gs
and
fdivl
mov
add
movsl
add
mov
add
insl
dec
dec
callw
jecxz
push
push
pushf
sub
pmulhuw
dec
callw
jo
in
lock
inc
dec
callw
jecxz
push
push
test
pop
in
push
ljmp
lds
in
lock
cmp
callw
jecxz
push
insb
pop
test
jmp
lahf
push
ljmp
lds
in
lock
xor
callw
jecxz
push
ljmp
push
data16
callw
gs
and
jnp
in
repnz
out
mov
mov
icebp
dec
cld
sbbb
pop
in
push
lock
xor
sub
xchg
repnz
xchg
mov
callw
iret
call
in
bnd
push
addr16
mov
dec
cld
xchg
fwait
push
data16
inc
repnz
fwait
push
data16
mov
addr16
and
aam
ljmp
repnz
fwait
push
data16
xchg
push
jae
mov
mov
sub
imul
call
mov
pop
repnz
sub
call
sub
or
lahf
push
fiaddl
sub
mov
sub
fwait
push
data16
in
xor
stc
daa
popa
push
mov
mov
lahf
push
repnz
fwait
push
data16
xor
or
lahf
push
lock
dec
callw
callw
lods
fsubrs
mov
lahf
push
repnz
in
dec
callw
scas
jecxz
push
repnz
mov
aad
jmp
push
repnz
fwait
push
data16
or
call
sub
lock
sub
imul
and
push
lods
movsb
scas
push
outsl
jae
and
jb
push
addr16
lahf
push
push
pop
fldcw
and
push
lods
movsb
scas
push
outsl
jae
and
jb
push
addr16
lahf
push
push
pop
fldcw
inc
fsubrl
lahf
push
shr
pop
push
ja
lahf
fldt
lahf
push
call
call
xor
fisubrl
and
fsubrl
lahf
push
lock
dec
callw
iret
call
and
aam
or
mov
call
fwait
push
data16
or
call
sub
lock
fcmovnbe
cmpsl
jecxz
push
fiaddl
sub
stos
jecxz
push
push
pop
fdiv
inc
fwait
push
data16
in
or
stc
daa
popa
push
mov
lahf
push
addr16
xor
insl
loopne
callw
sbb
lahf
push
repnz
in
callw
dec
clc
push
pop
ljmp
jge
call
lahf
cmp
call
scas
push
outsl
cmp
cmpsb
inc
cmp
push
ljmp
xchg
jecxz
push
repnz
in
callw
dec
clc
push
cltd
push
hlt
data16
xchg
jecxz
push
addr16
sub
stos
jecxz
push
push
test
xor
mov
callw
outsl
adc
xor
insl
rorb
call
lahf
push
push
test
xor
pop
outsb
aam
callw
addr16
in
callw
dec
clc
push
cltd
imul
lahf
out
jecxz
push
ljmp
fwait
jecxz
push
repnz
in
callw
dec
clc
push
cltd
push
cltd
mov
hlt
data16
lahf
jecxz
push
addr16
sub
stos
jecxz
push
push
test
xor
mov
callw
outsl
adc
xor
insl
fmuls
call
lahf
push
sub
mov
push
data16
cltd
push
jb
sub
jecxz
push
repnz
rorb
call
sub
adc
stos
adc
insl
leave
dec
callw
fwait
jecxz
push
ljmp
ficomps
leave
fistps
jno
jnp
call
popa
cmp
in
xor
mov
out
jecxz
push
icebp
insl
enter
sub
jae
xor
shll
sbb
jge
dec
callw
nop
jecxz
push
out
sub
push
repnz
sub
cld
cmp
push
data16
jnp
call
mov
adc
in
push
and
mov
push
repnz
in
callw
cld
mov
shlb
or
sub
inc
dec
callw
push
jb
inc
repnz
lcall
call
cltd
push
data16
and
xor
popa
popa
call
sub
mov
jne
dec
callw
sbb
lcall
hlt
cltd
push
data16
mov
clc
addr16
ljmp
xchg
dec
jmp
test
adc
in
call
call
in
icebp
xor
dec
callw
outsb
rorb
mov
xchg
lahf
push
lock
in
ljmp
into
dec
jmp
adc
lods
int3
shll
and
mov
fsubr
clc
cltd
push
data16
push
pop
ja
sub
popa
call
scas
push
jmp
dec
callw
call
call
lahf
push
repnz
dec
callw
mov
lahf
push
repnz
lcall
loop
push
out
jl
js
call
lcall
call
dec
callw
callw
in
or
push
addr16
jno
call
addr16
outsl
loop
push
addr16
sub
outsl
loop
push
ljmp
push
data16
pop
popa
call
cltd
push
data16
and
addr16
and
push
call
in
jbe
sub
loop
push
push
rorb
and
jmpw
lock
dec
callw
dec
jae
push
loop
push
out
jne
dec
callw
dec
je
jno
call
dec
callw
insb
adc
jno
call
lcall
loop
push
repnz
movsl
js
call
lcall
adc
rorb
mov
insl
popa
call
lcall
call
sub
and
push
jbe
and
loop
push
lcall
push
push
test
callw
push
or
and
mov
mov
push
addr16
movsb
mov
repnz
mov
push
cmpsl
call
sahf
out
in
push
lock
sub
push
je
movsl
imul
mov
call
lahf
push
lcall
xor
jecxz
call
mov
push
fcmovbe
rcrl
dec
dec
mov
andl
sti
push
addr16
loopne
ja
out
push
addr16
adc
cmp
adc
push
addr16
cld
cmp
adc
jp
mov
xor
outsl
xchg
mov
call
mov
dec
insb
pop
cmpsb
rcrl
pop
push
test
xor
cmpsb
repnz
inc
pop
cmp
ljmp
jns
arpl
call
xchg
call
arpl
iret
call
mov
dec
cld
mov
fldt
in
repnz
sub
addr16
sub
lock
fistl
lods
fsubl
push
addr16
in
addr16
sub
lock
mov
arpl
sub
sub
repnz
sub
lds
xchg
pop
je
inc
push
mov
addr16
imul
push
addr16
sub
imul
push
ljmp
push
data16
sub
lahf
call
dec
callw
repnz
movsb
dec
callw
jae
sub
jl
dec
addr16
sub
push
mov
hlt
inc
fwait
push
data16
sub
xor
sub
mov
test
call
in
ljmp
xchg
aas
je
xor
xor
movsl
call
sub
mov
xor
mov
cmp
adc
callw
out
lahf
mov
mov
xor
mov
add
xor
lods
pop
test
adc
adc
pop
bnd
sub
addr16
mov
xchg
inc
je
cmc
addr16
mov
push
push
xchg
rcrb
sub
jo
push
addr16
sub
fsubrl
sub
imul
cltd
push
data16
push
popa
call
sub
arpl
lahf
push
repnz
mov
pop
lock
dec
callw
dec
jmp
test
adc
in
repnz
mov
cltd
imul
cmp
fstps
in
in
push
data16
push
pop
lock
dec
callw
push
loop
push
sub
lods
rcrl
adc
repnz
nop
dec
callw
jbe
lahf
push
in
fcompl
inc
lock
cwtl
dec
callw
pop
loop
push
repnz
push
bnd
dec
callw
repnz
pushf
dec
callw
imul
cmp
jae
dec
pusha
call
cltd
push
data16
push
popa
call
mov
inc
in
mov
mov
adc
and
fsubr
call
fcoms
insl
ret
dec
callw
inc
loop
push
addr16
sub
inc
loop
push
ljmp
push
mov
and
jbe
stc
push
addr16
pop
shll
lahf
push
fsubr
mov
lods
les
sahf
pop
in
daa
shll
lahf
enter
push
jb
push
sub
dec
loop
push
repnz
test
call
adc
push
add
xor
scas
hlt
mov
adc
insl
test
call
mov
in
int3
cltd
push
data16
inc
push
sub
xlat
jecxz
push
push
sti
sub
dec
loop
push
repnz
sub
xlat
jecxz
push
repnz
test
call
out
lock
dec
callw
daa
cmp
push
lock
mov
mov
mov
xor
fisubrl
lahf
push
shrl
int3
and
push
ljmp
jmp
mov
xor
jne
dec
callw
call
pop
sub
call
and
addr16
sub
call
sub
imul
xchg
dec
je
shll
fdivrl
and
callw
lock
lock
fwait
push
data16
xor
jne
dec
callw
clc
jae
xor
jne
dec
callw
call
rorb
push
callw
gs
sub
and
lahf
push
bnd
push
addr16
loopne
push
xchg
fisubrl
or
fnstcw
insb
fs
lock
insb
lock
push
enter
xchg
imul
repnz
mov
loopne
xor
imul
mov
lahf
push
addr16
sub
dec
adc
mov
call
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
mov
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
push
sbb
mov
sbb
mov
pop
mov
mov
cvttps2pi
add
and
loop
jo
xchg
lret
adc
outsb
cmp
vsqrtps
ret
dec
pop
push
xchg
xchg
aaa
add
nop
lahf
push
fwait
loopne
shlb
sahf
movsl
fldl
mov
inc
inc
icebp
pop
adc
sbb
movsl
sbb
mov
lods
inc
addl
in
xchg
cmp
sbb
movsb
lret
jp
adc
push
lahf
push
fidivrs
js
test
jecxz
and
loop
aam
add
sub
sub
pop
pop
lock
push
popa
mov
or
push
leave
mov
lret
and
int3
popa
cltd
cmp
add
fistps
inc
insl
add
jmp
movsb
in
sbb
jne
sarb
jmp
or
mov
pushf
cmp
cmp
fsubs
push
inc
jecxz
pop
sbb
cmp
addr16
lahf
push
addr16
mov
push
addr16
mov
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
add
inc
push
cld
inc
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
push
lahf
push
imul
adc
sub
roll
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
adc
fmull
mov
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
lahf
push
addr16
dec
fcomi
push
add
iret
test
out
test
scas
scas
sub
sbb
pop
fisubrs
inc
cmp
pop
testl
inc
or
mov
and
push
xchg
inc
mov
pusha
add
notl
mov
rolb
imul
mov
push
xchg
cld
or
stos
or
inc
lcall
fwait
dec
in
xor
and
jno
push
jge
jp
lret
pop
mov
push
insl
cmpsl
les
fstps
dec
pushf
mov
mov
mov
sub
aam
inc
push
xor
lret
or
cmc
movsl
aaa
clc
xchg
jmp
cmp
fcomi
loop
xchg
lret
hlt
imul
lahf
or
mov
fisubrl
and
and
mov
cmp
ja
mov
idivb
inc
dec
loope
aas
dec
lods
rdtsc
xchg
mov
cld
jnp
push
mov
insb
adc
nop
das
rclb
sbb
push
rcr
xchg
pop
mov
sub
xchg
inc
push
cmp
push
push
jp
imul
push
or
push
inc
test
sub
push
sbb
ljmp
mov
flds
std
imul
icebp
jl,pn
clc
pushf
jecxz
adc
mov
add
jae
test
push
pop
stc
xor
outsb
dec
test
imul
lahf
test
jnp
call
and
pop
sbb
popa
mov
mov
add
pop
fcmovb
sub
std
ret
xor
stc
or
dec
xchg
fisubrs
les
or
lods
pop
dec
ljmp
mov
adc
outsb
pop
fs
mov
add
ljmp
mov
fs
popf
divb
mov
push
mov
push
inc
addr16
add
ret
rclb
jp
leave
push
xlat
adc
mov
imul
arpl
and
outsl
xor
or
lcall
call
jnp
add
mov
ljmp
add
add
add
cmp
add
incl
iret
add
dec
and
add
add
cmp
add
inc
and
add
ret
incl
and
add
ret
jmp
xlat
add
loopne
add
sub
add
pushl
and
add
add
fcomp
add
mov
add
mov
jmp
loop
add
and
add
add
ljmp
and
add
lcall
add
xor
add
decl
add
add
push
movb
pushl
add
or
add
pushl
lock
sbb
add
dec
enter
call
sub
add
add
outsb
leave
add
or
add
leave
add
mov
add
int3
leave
add
fcmove
add
ljmp
add
lret
push
lret
and
add
cs
cmp
add
dec
lret
pop
lret
add
add
jl
add
xchg
lret
cmpsb
lret
mov
lret
out
add
cld
lret
adc
add
sbb
add
sub
add
cmp
add
push
lret
add
lret
add
jb
add
test
add
xchg
lret
add
stos
lret
add
mov
lret
add
fmulp
add
cli
lret
add
push
int3
add
sub
add
cmp
add
dec
int3
add
pop
int3
add
outsb
int3
add
jle
add
mov
add
mov
int3
add
lret
add
int3
add
lock
add
cli
int3
add
or
add
sbb
add
xor
add
dec
int
add
add
fs
add
add
int
add
int
add
int
add
int
add
into
add
adc
add
sub
add
inc
into
add
dec
into
add
into
add
or
add
into
add
mov
into
add
loop
add
repnz
add
add
add
adc
add
es
add
ds
add
push
iret
add
push
add
or
add
iret
add
iret
add
iret
add
ljmp
add
rolb
add
rolb
add
add
dec
rolb
add
add
jb
add
xchg
rolb
add
rolb
add
rolb
add
rolb
add
roll
add
roll
add
roll
add
add
pusha
roll
add
add
xchg
add
lcall
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
add
push
rolb
add
add
add
nop
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
roll
add
roll
add
add
add
add
add
roll
add
add
jp
add
xchg
add
xchg
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
aam
add
aam
add
aam
add
aam
add
add
cmp
add
dec
aam
add
add
pusha
aam
add
add
je
add
adc
add
aam
add
add
scas
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
aad
add
add
xor
add
ds
add
add
add
data16
add
add
jl
add
add
add
xchg
aad
add
aad
add
aad
add
aad
add
aad
add
add
es
add
cmp
add
dec
add
add
jb
add
adc
add
add
mov
add
add
out
add
add
add
adc
add
add
add
xor
add
inc
xlat
add
pop
xlat
add
jo
add
xchg
add
cwtl
xlat
add
stos
xlat
add
xlat
add
add
repnz
add
add
add
adc
add
and
add
fadds
add
add
fadds
add
add
sbb
add
add
add
fadds
add
fadds
add
fadds
add
flds
add
flds
add
add
pop
flds
add
add
mov
add
pushf
flds
add
flds
add
flds
add
fiaddl
add
add
dec
fiaddl
add
add
jp
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fildl
add
fildl
add
fildl
add
add
pop
fildl
add
add
nop
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
faddl
add
add
push
faddl
add
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
fldl
add
add
fldl
add
fldl
add
add
fldl
add
fldl
add
fiadds
add
fiadds
add
add
dec
fiadds
add
add
je
add
mov
add
cmpsb
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
sub
add
cmp
add
dec
filds
add
add
je
add
lcall
add
filds
add
add
add
filds
add
filds
add
add
adc
add
and
add
xor
add
dec
loopne
add
add
add
jbe
add
mov
add
xchg
loopne
add
add
mov
add
ret
add
loopne
add
loopne
add
loopne
add
add
sbb
add
sub
add
cmp
add
dec
loope
add
add
add
jo
add
jl
add
nop
loope
add
add
mov
loope
add
loope
add
loope
add
loope
add
add
adc
add
add
add
sub
add
cmp
add
dec
loop
add
add
and
add
add
add
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
inc
jecxz
add
add
pop
jecxz
add
add
add
and
add
jecxz
add
add
int3
jecxz
add
jecxz
add
jecxz
add
add
sbb
add
es
add
add
dec
in
add
add
js
add
and
add
add
scas
in
add
add
fsub
add
in
in
add
in
add
add
cs
add
add
pop
in
add
add
and
add
add
add
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
add
insb
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
xchg
add
cmpsb
out
add
out
add
out
add
out
add
call
add
inc
call
add
jo
add
pushf
call
add
fsubr
add
in
call
add
adc
add
sub
add
cmp
add
push
jmp
add
mov
add
test
add
mov
jmp
add
add
add
and
add
xor
add
push
ljmp
mov
add
mov
add
add
ljmp
hlt
ljmp
and
add
sub
add
cmp
add
dec
jmp
add
add
push
add
mov
add
cmpsb
jmp
add
add
into
jmp
add
jmp
add
jmp
add
add
push
in
add
sbb
add
sub
add
cmp
add
dec
in
add
fs
add
jp
add
mov
add
pushf
in
add
stos
in
add
mov
in
add
in
add
repnz
add
in
add
or
add
push
in
add
sub
add
inc
in
add
pusha
in
add
jb
add
sub
add
add
in
add
fsubr
add
out
in
add
add
add
adc
add
and
add
cmp
add
inc
out
add
push
out
add
fs
add
jp
add
mov
add
xchg
out
add
cmpsb
out
add
into
out
add
add
out
add
hlt
out
add
or
add
push
out
add
xor
add
inc
out
add
push
out
add
out
add
jl
add
xchg
out
add
sahf
out
add
scas
out
add
mov
out
add
fsubr
add
out
out
add
out
add
or
add
lock
add
add
inc
lock
push
lock
push
lock
mov
add
mov
lock
shl
add
lock
fdiv
add
lock
cli
lock
push
icebp
add
adc
add
and
add
sub
add
inc
icebp
add
push
icebp
add
add
je
add
xchg
add
xchg
icebp
add
mov
icebp
add
mov
icebp
add
icebp
add
loop
add
repnz
add
or
add
push
repnz
and
add
repnz
inc
repnz
push
repnz
pop
repnz
outsb
repnz
test
add
xchg
repnz
test
add
repnz
shl
add
loopne
add
div
add
or
add
push
repz
repz
cmp
add
dec
repz
pop
repz
push
add
jp
add
xchg
add
xchg
repz
movsb
repz
mov
add
shl
add
repz
fdiv
add
lock
cld
repz
adc
add
and
add
xor
add
inc
hlt
add
dec
hlt
add
pop
hlt
add
insb
hlt
add
jle
add
add
add
add
outsl
jae
inc
outsl
outsb
je
add
add
je
popa
jbe
inc
imul
add
push
add
outsl
outsl
jae
inc
outsl
outsb
je
add
add
addr16
gs
jo
insb
addr16
add
add
je
jo
outsb
inc
imul
add
pop
add
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
add
imul
js
add
inc
gs
imul
inc
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
sbb
push
jb
outsb
je
insb
addr16
add
inc
push
inc
outsl
insb
outsl
jb
add
or
inc
imul
push
add
outsb
je
insb
addr16
add
add
outsb
fs
gs
inc
add
add
je
popa
jbe
inc
imul
add
adc
push
popa
addr16
gs
jo
insb
addr16
add
inc
imul
push
add
insl
fs
xor
cs
insb
add
pop
add
addr16
outsl
je
data16
push
dec
gs
popa
insb
jne
add
push
gs
popa
insb
jne
push
add
cmp
push
gs
jb
popa
je
dec
gs
js
add
inc
outsb
je
imul
insb
push
add
ja
inc
outsl
outsb
jbe
jb
push
je
imul
outsl
push
imul
imul
popa
arpl
jne
fs
add
imul
imul
inc
gs
arpl
add
add
addr16
gs
gs
dec
gs
add
inc
outsl
outsb
je
outsl
insb
push
gs
imul
inc
jb
jo
push
gs
gs
jae
inc
outsl
outsb
je
js
add
add
popa
jb
push
gs
imul
push
gs
jb
popa
je
dec
gs
add
jo
inc
gs
jb
jns
gs
cli
add
outsb
push
inc
dec
popa
outsb
popa
addr16
add
ret
gs
gs
imul
jne
add
xchg
add
jo
jb
inc
jbe
outsb
je
add
dec
add
addr16
outsb
jne
dec
gs
add
add
gs
push
gs
imul
imul
gs
arpl
imul
imul
arpl
add
je
arpl
imul
imul
arpl
add
addr16
jne
jb
push
popa
insb
jne
inc
add
jle
push
gs
gs
popa
insb
jne
inc
add
pop
add
je
jb
arpl
outsb
popa
bound
gs
insb
add
add
gs
push
gs
imul
gs
jae
jb
popa
insl
gs
add
std
add
outsb
push
gs
imul
add
addr16
jo
outsb
dec
gs
add
imul
arpl
jne
je
popa
insl
gs
add
dec
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsl
outsb
outsb
arpl
imul
push
add
addr16
outsb
jne
dec
gs
add
inc
gs
jb
arpl
outsl
addr16
popa
outsb
fs
add
jns
inc
outsl
jo
push
imul
jo
dec
popa
jae
inc
popa
je
add
push
gs
popa
insb
jne
inc
js
add
outsl
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
push
add
popa
outsb
addr16
gs
imul
imul
dec
jae
popa
insb
imul
add
addr16
insb
jne
push
push
add
addr16
outsb
jne
dec
gs
js
add
inc
gs
imul
push
jns
add
push
arpl
imul
imul
outsl
jne
add
pop
add
outsl
jae
push
gs
imul
insb
add
jno
push
gs
jne
jb
push
popa
insb
jne
push
add
xchg
add
imul
arpl
jne
je
imul
addr16
insb
outsl
jae
dec
gs
js
dec
outsb
imul
inc
arpl
add
outsb
push
gs
imul
add
jb
imul
popa
arpl
jne
fs
add
je
arpl
imul
gs
push
add
lahf
add
inc
insb
outsl
jae
add
imul
jne
jb
dec
outsb
outsw
dec
gs
add
dec
add
je
arpl
imul
imul
outsb
je
outsl
insb
add
lods
add
inc
jb
gs
gs
outsl
jb
add
add
fs
arpl
jae
inc
insb
insb
outsl
ja
fs
arpl
push
add
addr16
outsb
jne
dec
gs
js
add
add
je
push
push
outsl
imul
add
add
push
jae
push
outsl
imul
jb
jbe
insb
gs
push
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
gs
push
outsl
push
gs
data16
inc
inc
push
inc
push
dec
xor
cs
insb
add
sbb
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
outsl
push
outsb
insl
popa
jb
push
je
jb
popa
arpl
add
inc
insb
outsl
bound
inc
jb
insl
push
je
gs
insl
add
mov
inc
jb
popa
je
dec
je
insl
dec
outsl
outsb
imul
inc
outsl
dec
popa
jb
push
je
jb
popa
arpl
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
add
push
popa
jb
gs
imul
popa
insl
add
xchg
inc
jb
popa
je
dec
dec
outsl
arpl
jns
gs
outsb
dec
inc
insb
outsl
bound
add
add
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
add
gs
outsl
popa
fs
jb
insl
push
je
gs
insl
add
dec
insb
gs
gs
gs
jae
jb
jns
add
push
je
dec
jae
je
jb
addr16
imul
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
dec
insb
gs
gs
gs
imul
jne
add
je
inc
insb
popa
jae
push
je
add
inc
outsl
push
gs
jb
js
inc
insb
popa
outsb
imul
dec
add
gs
outsb
imul
imul
outsl
inc
gs
outsb
je
jb
popa
arpl
outsb
fs
gs
gs
jae
push
je
gs
insl
add
inc
add
gs
jne
add
addb
jb
popa
je
inc
imul
push
add
dec
popa
jb
push
je
jb
push
dec
outsb
je
jb
popa
arpl
outsb
push
je
gs
insl
add
push
jb
jo
popa
jb
popa
outsb
je
outsl
jo
add
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
push
je
inc
jb
popa
je
inc
outsl
arpl
insb
gs
outsb
dec
dec
outsl
arpl
jns
gs
add
push
jb
addr16
inc
inc
jb
insl
inc
dec
push
dec
inc
add
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
add
inc
jb
gs
outsb
jne
gs
imul
jae
inc
add
gs
popa
jbe
push
outsl
push
je
gs
insl
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
push
inc
jb
popa
je
inc
outsl
arpl
insb
add
jns
push
je
imul
inc
dec
push
dec
inc
add
inc
outsl
push
gs
jb
push
outsl
push
gs
data16
adc
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
je
imul
inc
push
dec
inc
xor
rolb
dec
dec
inc
inc
jb
insl
push
je
imul
outsl
inc
gs
bound
arpl
outsb
je
js
add
pop
add
push
imul
popa
jae
dec
bound
arpl
add
outsl
jo
popa
jb
popa
outsb
je
insb
gs
jb
add
add
inc
jb
popa
je
inc
jb
gs
push
gs
popa
jb
push
add
push
je
imul
dec
dec
inc
add
inc
outsl
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
add
outsl
push
gs
gs
jae
dec
popa
jb
push
je
add
sahf
add
je
jne
outsb
imul
arpl
bound
jbe
inc
outsl
push
outsb
imul
imul
dec
insb
gs
gs
outsb
jne
push
gs
jae
addb
jb
popa
je
inc
popa
je
inc
fs
jae
dec
outsl
insb
fs
add
inc
outsl
dec
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
inc
outsl
dec
outsb
imul
inc
js
add
push
gs
gs
jae
push
je
dec
gs
inc
jb
popa
je
dec
insb
gs
fs
jae
dec
outsl
insb
fs
outsl
insb
xor
cs
insb
add
pop
gs
gs
pop
push
gs
add
dec
add
jae
imul
add
add
arpl
arpl
add
in
add
gs
insl
outsl
jbe
add
add
jae
popa
insb
jo
popa
add
cmp
je
ja
outsl
ja
jb
add
ja
jae
outsl
insl
bound
add
insb
outsb
add
xor
add
dec
add
dec
jae
jb
add
add
jb
outsb
je
add
arpl
pop
jae
jb
ja
add
add
je
jb
imul
pop
inc
pop
pop
pop
add
je
popa
add
pop
add
ja
jo
imul
add
outsl
outsb
je
outsl
insb
data16
add
ja
jae
outsl
imul
add
jae
imul
add
arpl
imul
pop
ja
jae
jo
add
popa
add
add
aas
xor
inc
push
inc
pop
dec
inc
pop
add
pop
add
outsl
arpl
add
pop
ja
outsl
insb
add
ja
jae
outsb
add
sub
ja
outsl
jo
outsb
add
imul
bound
popa
jb
push
jb
add
out
add
gs
jae
je
add
ja
jae
bound
add
imul
jae
insb
jo
popa
add
jne
jo
jb
add
jne
push
pop
arpl
imul
jae
outsl
jne
add
add
popa
outsb
add
cmp
ja
jb
and
arpl
add
add
jae
imul
add
je
popa
add
pop
gs
outsb
outsl
add
arpl
pop
gs
je
testb
popa
fs
jae
pop
imul
add
je
add
leave
add
jae
jo
imul
add
jae
gs
bound
add
xor
pop
jae
jo
imul
pop
jo
jb
arpl
insb
add
pop
inc
dec
popa
arpl
add
add
jo
jb
insl
jae
arpl
cs
insb
add
sbb
push
popa
gs
jb
popa
jns
jne
inc
insb
gs
outsb
je
mov
dec
outsl
popa
fs
imul
add
add
gs
jb
popa
jns
arpl
jae
inc
popa
je
add
imul
outsb
addr16
jns
gs
js
or
push
popa
jb
popa
outsb
je
push
push
jns
add
add
jae
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
add
gs
jb
popa
jns
outsb
popa
arpl
jae
inc
popa
je
add
add
gs
jb
popa
jns
gs
insb
gs
outsb
je
add
inc
jb
gs
je
imul
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
or
push
popa
jb
popa
outsb
je
insb
gs
jb
add
add
je
jb
outsl
jb
outsb
outsw
add
and
inc
gs
arpl
gs
bound
arpl
add
imul
jo
dec
imul
gs
jb
popa
jns
gs
inc
outsl
jne
add
push
add
gs
jb
popa
jns
jb
popa
je
add
add
jae
je
imul
add
add
je
jb
outsl
jb
outsb
outsw
add
xchg
add
jae
je
imul
dec
outsb
add
pop
add
jb
popa
outsb
je
outsb
imul
popa
je
inc
jb
outsl
jb
outsb
outsw
add
gs
jne
xor
cs
insb
add
bound
push
dec
inc
imul
je
outsl
outsb
push
add
in
add
insl
insl
popa
outsb
fs
imul
addr16
add
inc
add
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
inc
add
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
outsb
add
inc
gs
imul
add
sbb
inc
jb
addr16
jne
jb
inc
imul
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
push
add
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
inc
gs
gs
je
jo
outsl
insb
fs
add
add
inc
imul
jb
outsb
je
add
push
dec
inc
gs
popa
insb
insb
outsl
arpl
inc
add
inc
push
dec
outsl
je
data16
add
add
addr16
jne
jb
inc
imul
push
dec
inc
gs
outsl
insb
fs
popa
je
push
add
addl
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
gs
insb
inc
js
arpl
gs
add
insb
insb
inc
js
arpl
gs
add
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
push
push
js
arpl
gs
js
add
inc
dec
dec
xor
cs
insb
add
push
je
push
jne
inc
outsb
arpl
gs
outsb
imul
jb
outsb
addr16
add
insb
inc
gs
jb
jns
gs
jo
add
add
inc
jb
popa
je
inc
jbe
outsb
je
les
dec
je
insb
insb
outsl
arpl
gs
imul
gs
outsl
jb
add
push
jne
inc
jne
push
jns
outsl
jne
je
imul
dec
jo
outsb
inc
jne
jb
outsb
je
jae
jb
add
push
je
push
gs
insb
insb
outsl
arpl
gs
gs
jo
iret
add
insb
inc
jb
popa
je
push
outsb
imul
jb
outsb
addr16
jb
insl
inc
jae
imul
inc
bound
jb
popa
imul
outsb
je
aas
add
push
jb
je
inc
imul
inc
insb
insb
outsl
arpl
gs
outsl
arpl
insb
jns
outsb
imul
rolb
je
push
outsb
imul
dec
jne
je
inc
jns
gs
imul
je
push
jo
popa
jae
push
outsb
imul
jb
outsb
add
xchg
add
je
push
gs
popa
arpl
arpl
imul
imul
and
push
je
js
outsb
jae
push
je
imul
imul
jp
add
add
je
push
outsb
imul
jb
outsb
addr16
outsl
dec
gs
push
je
imul
je
popa
imul
je
jo
gs
bound
arpl
add
add
insb
inc
gs
gs
push
gs
jne
arpl
mov
jne
jb
push
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
imul
je
push
outsb
imul
dec
gs
dec
add
lcall
jo
add
pop
pop
popa
insb
insb
insl
jne
add
pop
ja
jae
arpl
add
pop
add
insb
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
dec
outsb
imul
gs
je
imul
push
je
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
push
add
xor
dec
je
outsb
insl
popa
jo
imul
arpl
outsb
add
sbb
je
dec
gs
arpl
imul
je
add
add
inc
popa
outsb
arpl
dec
outsl
inc
imul
je
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
inc
imul
insb
dec
outsb
addr16
push
arpl
imul
imul
add
insb
inc
jb
popa
je
push
outsb
imul
jb
outsb
add
jbe
push
je
inc
outsb
jae
push
je
imul
imul
jb
outsb
add
xchg
add
push
jne
jb
inc
imul
jns
bound
arpl
dec
add
je
push
popa
imul
jne
add
cmp
dec
je
popa
imul
insb
gs
bound
arpl
add
je
push
jo
popa
jae
push
outsb
imul
jb
outsb
addr16
outsl
dec
gs
push
je
imul
je
inc
arpl
imul
jne
arpl
push
add
lcall
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
inc
imul
je
push
jne
inc
jne
push
jns
imul
insb
js
gs
push
je
imul
imul
jp
add
jle
push
je
inc
gs
je
jb
fs
je
jns
add
add
inc
outsb
jne
gs
je
dec
gs
add
add
inc
outsb
jne
gs
je
push
popa
insb
jne
dec
gs
sbb
dec
je
gs
gs
dec
gs
add
dec
jo
outsb
inc
imul
je
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
sahf
pop
jae
jb
arpl
add
dec
je
jo
outsb
push
jb
arpl
jae
outsl
imul
add
add
push
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
push
add
int3
add
insb
inc
jb
popa
je
push
imul
add
insb
inc
arpl
imul
jne
arpl
js
insb
jne
imul
je
arpl
add
mov
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
outsl
imul
mov
jne
jb
push
imul
gs
outsl
jb
add
das
add
je
push
jb
imul
arpl
gs
je
imul
dec
je
jne
jb
inc
je
jb
bound
gs
imul
push
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
push
add
mov
dec
insb
jae
bound
insl
inc
outsl
fs
popa
addr16
popa
add
push
je
inc
gs
popa
arpl
arpl
imul
imul
mov
jae
jb
outsb
je
add
add
inc
jne
insb
imul
push
arpl
add
insb
inc
jb
popa
je
push
jae
jb
push
add
add
je
dec
popa
imul
insb
push
gs
popa
je
jbe
push
inc
add
inc
outsl
insl
jo
jb
push
outsb
imul
jb
outsb
addr16
add
je
push
jo
popa
jae
push
outsb
imul
popa
jb
add
add
push
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
imul
je
dec
outsb
addr16
push
gs
imul
add
lds
ja
jae
outsl
jne
add
push
je
push
jne
inc
arpl
gs
outsb
imul
jb
outsb
add
je
gs
imul
jb
popa
add
jne
jb
dec
bound
arpl
add
push
jne
jb
push
popa
insb
jne
dec
gs
mov
push
je
push
jns
je
insl
push
imul
arpl
push
imul
dec
je
gs
jbe
outsb
je
add
add
je
push
popa
insb
imul
jbe
push
arpl
imul
imul
js
dec
je
jo
outsb
push
jns
bound
imul
bound
arpl
inc
pop
pop
jae
jb
arpl
add
pop
add
dec
popa
jo
imul
arpl
outsb
add
outsb
je
insb
insb
cs
insb
add
add
arpl
gs
insb
imul
and
push
gs
inc
outsl
insb
outsl
jb
add
arpl
imul
add
gs
je
push
arpl
outsb
add
add
je
insb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
je
js
add
push
gs
outsl
jb
inc
inc
add
js
push
gs
dec
jne
inc
add
add
jb
popa
insb
imul
arpl
add
je
dec
push
xor
incl
inc
outsb
fs
popa
addr16
add
jb
je
push
add
jb
push
popa
add
push
je
imul
mov
push
gs
gs
inc
insb
imul
push
arpl
jae
bound
lds
push
gs
dec
jne
inc
add
sub
inc
gs
gs
inc
js
outsb
je
outsl
imul
popa
add
gs
je
push
outsl
insb
imul
add
push
imul
inc
js
inc
js
add
push
imul
add
popa
jns
gs
inc
imul
gs
gs
inc
outsl
insb
outsl
jb
add
outsl
dec
push
add
mov
inc
gs
imul
outsl
jb
add
inc
jb
popa
je
push
outsb
add
add
je
jne
jb
outsb
je
bound
arpl
add
insb
jns
imul
push
gs
imul
add
inc
jb
popa
je
dec
gs
inc
imul
gs
popa
jo
outsl
fs
add
inc
gs
gs
jb
jae
inc
outsl
insb
outsl
jb
jle
push
arpl
gs
imul
inc
js
inc
js
add
add
fs
outsl
arpl
add
add
arpl
add
aas
add
gs
je
inc
inc
push
add
arpl
push
arpl
inc
inc
dec
xor
cs
insb
add
add
jb
jne
jb
push
popa
insb
jne
push
add
push
add
jb
jne
jb
push
popa
insb
jne
inc
add
push
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
imul
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
push
push
dec
dec
dec
cs
insb
add
add
je
push
gs
outsl
jbe
inc
popa
arpl
insb
popa
jae
push
add
xchg
add
je
inc
imul
dec
popa
insl
gs
add
push
je
inc
jo
dec
push
add
inc
add
jb
push
add
push
jb
arpl
jns
add
loope
push
popa
je
push
imul
outsl
outsl
je
add
add
inc
gs
gs
push
popa
insb
jne
inc
add
aaa
add
push
je
inc
jne
push
add
add
inc
gs
gs
dec
gs
add
inc
add
jb
popa
je
add
push
je
inc
insl
jo
add
push
inc
push
add
stc
add
inc
gs
gs
dec
gs
add
xchg
add
jae
jb
outsb
je
push
add
ja
push
je
push
outsl
dec
outsb
je
js
add
jo
imul
bound
push
popa
je
inc
fs
popa
arpl
insb
popa
jae
push
add
push
je
inc
insl
jo
dec
inc
add
push
je
push
inc
push
xchg
add
je
inc
jb
popa
je
inc
jb
insl
push
jb
push
add
xchg
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
aad
push
popa
je
push
gs
outsl
jbe
inc
insb
popa
outsb
imul
roll
popa
je
dec
jae
push
dec
push
add
mov
push
jb
jbe
dec
jne
bound
push
add
add
inc
gs
gs
push
popa
insb
jne
push
add
mov
push
popa
je
dec
jae
gs
popa
je
jbe
push
add
add
je
push
gs
outsl
jbe
inc
js
outsb
jae
outsl
outsb
push
add
xchg
add
insb
dec
jae
add
inc
add
jb
push
add
jb
je
dec
inc
add
fadds
push
popa
je
push
gs
outsl
jbe
inc
imul
add
push
dec
push
gs
popa
insb
jne
push
add
push
je
inc
insl
jo
push
add
jle
push
jb
inc
popa
outsb
outsl
outsb
imul
push
add
push
push
gs
outsl
inc
jne
push
add
dec
add
jae
arpl
gs
push
je
imul
push
popa
je
push
je
imul
je
add
js
push
je
push
outsl
dec
outsb
je
add
add
jb
popa
je
jne
push
add
add
inc
gs
popa
insb
jne
push
add
push
outsl
je
add
push
inc
imul
add
gs
gs
outsl
outsl
insb
push
push
push
popa
insb
jne
push
add
dec
add
jb
insl
jo
dec
push
add
popa
je
inc
jo
outsb
fs
add
push
je
push
jb
insl
push
add
jae
insb
ja
jo
cs
insb
add
push
jb
jo
jb
jns
push
add
inc
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
push
jb
jo
jb
jns
push
add
sub
dec
insl
popa
addr16
imul
je
outsl
jns
adc
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
add
popa
addr16
imul
popa
je
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
testb
jo
push
je
imul
inc
add
pop
add
je
push
je
bound
data16
inc
outsl
jne
je
gs
add
add
arpl
jb
gs
outsb
jb
imul
add
add
jb
gs
gs
popa
insb
insb
xor
add
push
jo
inc
imul
gs
jne
push
push
add
rolb
dec
fs
insb
insb
push
imul
outsl
js
add
inc
push
je
push
je
bound
data16
pop
push
gs
gs
jae
add
sbb
inc
push
je
push
je
bound
data16
dec
outsb
jbe
imul
add
outsb
imul
outsb
pop
inc
fs
gs
push
jb
js
add
push
je
push
je
bound
data16
push
gs
gs
jae
add
fs
je
bound
data16
inc
fs
data16
fs
jb
insl
push
je
imul
dec
fs
je
bound
insb
insb
xor
add
imul
outsb
pop
push
jne
jb
dec
outsb
je
jb
popa
arpl
push
jb
js
add
add
je
push
je
bound
data16
inc
outsl
outsb
outsb
arpl
xchg
add
arpl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
add
arpl
jb
gs
imul
inc
js
roll
jo
push
gs
gs
imul
je
dec
outsb
outsw
push
add
mov
push
gs
gs
outsb
jno
imul
add
sbb
fs
je
bound
data16
push
jne
jb
dec
outsb
je
jb
popa
arpl
cmc
add
arpl
jb
outsb
addr16
imul
popa
jb
gs
add
or
push
jne
fs
outsl
push
je
imul
inc
push
je
push
je
bound
data16
inc
bound
push
gs
gs
jne
jb
dec
outsb
je
jb
popa
arpl
add
inc
push
je
push
je
bound
data16
dec
jae
dec
inc
push
jne
jo
jb
gs
jo
inc
imul
gs
jne
push
inc
js
add
mov
push
jo
push
popa
imul
jo
imul
jo
inc
jo
gs
insb
jbe
inc
imul
testl
je
imul
push
add
roll
dec
fs
insb
insb
push
outsb
jb
imul
outsl
js
add
add
imul
add
add
outsb
imul
outsb
pop
push
gs
gs
jae
pop
push
jb
js
add
roll
dec
fs
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
outsb
imul
push
je
imul
imul
add
jb
je
bound
jb
popa
jb
imul
je
outsl
outsb
add
add
jb
insb
gs
insb
insb
outsl
arpl
add
jnp
push
jo
inc
imul
arpl
inc
jb
add
rolb
dec
fs
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
add
je
push
je
bound
data16
inc
imul
arpl
add
arpl
outsb
imul
jb
outsb
addr16
imul
add
arpl
push
jo
inc
imul
jb
add
repz
arpl
jb
outsb
addr16
imul
outsl
insl
jo
jae
push
add
sbb
inc
push
je
push
je
bound
data16
inc
bound
push
gs
gs
gs
gs
jae
add
add
arpl
jb
gs
jae
push
jb
je
gs
jo
add
lahf
add
jb
insb
imul
insb
xor
add
push
gs
jb
push
outsl
push
gs
data16
inc
push
push
xor
fs
insb
add
push
add
je
outsl
arpl
gs
outsb
outsw
inc
add
pop
add
jne
push
inc
jne
data16
add
push
add
gs
outsb
fs
inc
imul
imul
jae
jne
arpl
add
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
je
inc
gs
push
dec
outsb
outsw
add
push
gs
jb
outsl
jb
outsl
fs
dec
add
insb
outsb
push
add
mov
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
add
arpl
inc
add
cmpsb
add
gs
outsb
push
gs
js
gs
imul
gs
in
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
jne
dec
jo
outsb
inc
jbe
outsb
je
add
es
gs
imul
popa
jo
gs
jb
jns
or
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
add
fs
imul
js
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
insb
jae
jb
add
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
inc
imul
inc
imul
imul
je
imul
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
jo
je
bound
push
je
imul
add
outsb
fs
gs
inc
imul
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
inc
imul
gs
gs
imul
leave
add
insb
jae
gs
popa
insb
jne
add
add
outsb
push
gs
js
gs
imul
gs
add
add
je
imul
xor
inc
imul
add
insb
jae
jb
insl
jo
inc
add
inc
jb
popa
je
inc
imul
jns
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
in
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
outsl
insl
jo
jb
push
je
imul
add
imul
jne
jb
add
jnp
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
clc
add
inc
popa
fs
gs
fs
je
add
daa
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
jb
arpl
jae
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
arpl
push
imul
inc
gs
jns
je
insl
push
imul
gs
imul
bound
gs
add
sbb
je
push
outsb
ja
outsb
add
inc
gs
je
dec
popa
outsb
fs
add
aad
inc
gs
jb
jbe
push
jns
gs
add
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
inc
inc
inc
push
dec
gs
fs
jns
add
mov
push
insb
gs
mov
inc
gs
push
dec
outsl
arpl
gs
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
dec
add
arpl
push
add
inc
add
arpl
imul
imul
jae
cli
add
popa
imul
insb
gs
bound
arpl
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
roll
jb
imul
outsl
arpl
jae
add
add
gs
je
jbe
outsb
je
add
gs
jb
arpl
jae
gs
jo
add
popa
je
inc
imul
jns
add
in
add
je
imul
bound
gs
add
movl
jne
jb
outsb
je
push
dec
add
roll
gs
fs
imul
gs
insl
gs
push
add
inc
add
arpl
push
add
scas
add
je
outsl
outsb
jae
insb
gs
outsl
fs
add
popa
jo
je
imul
add
gs
imul
gs
add
gs
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
imul
inc
imul
push
dec
imul
popa
insb
insb
jae
movsl
add
je
gs
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
fadds
push
gs
imul
js
inc
add
and
inc
popa
insb
insb
push
imul
outsl
arpl
dec
add
arpl
popa
imul
outsb
add
add
inc
imul
outsl
ja
add
add
push
imul
outsl
outsl
imul
mov
jo
je
push
popa
addr16
add
aaa
add
outsb
dec
gs
jo
add
aam
push
gs
imul
jae
add
push
imul
add
jb
imul
popa
jae
push
add
push
add
je
outsb
jne
outsb
add
je
popa
jb
outsb
je
sub
dec
outsl
jbe
push
imul
sub
inc
gs
jne
jae
jb
outsl
jae
add
add
je
inc
add
push
jns
je
insl
dec
gs
imul
push
gs
jae
addr16
add
enter
jbe
insb
imul
je
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
je
outsl
arpl
add
sbb
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
push
jns
inc
outsl
insb
outsl
jb
or
dec
outsl
popa
fs
je
imul
dec
outsl
popa
fs
arpl
push
add
push
je
outsb
push
arpl
in
inc
outsb
fs
imul
add
fs
je
push
imul
mov
inc
outsl
jb
addr16
jne
fs
imul
add
je
outsl
jns
arpl
add
ja
jo
imul
add
popa
jb
gs
push
add
add
jne
inc
push
imul
add
jne
dec
outsb
jne
add
add
push
imul
inc
add
jae
push
jne
je
gs
popa
add
add
je
outsl
jb
addr16
jne
fs
imul
add
je
imul
outsb
addr16
add
lods
add
je
imul
js
push
add
scas
add
je
imul
jb
popa
fs
jb
arpl
jae
add
mov
insb
popa
je
push
arpl
add
fs
je
imul
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
inc
jb
popa
je
push
imul
push
add
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
je
outsl
jns
imul
add
jo
push
arpl
out
dec
jae
imul
popa
bound
add
add
je
imul
js
push
add
out
inc
outsb
fs
popa
imul
inc
gs
jns
je
insl
dec
outsb
jne
add
inc
imul
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
je
outsl
jns
outsb
jne
xor
dec
data16
je
arpl
sbb
dec
gs
popa
addr16
outsl
js
add
arpl
add
je
insb
addr16
je
insl
push
gs
push
add
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
jne
jae
jb
xchg
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
dec
add
arpl
insb
addr16
jne
je
outsb
add
test
push
outsb
fs
gs
popa
addr16
add
or
inc
gs
arpl
gs
imul
add
inc
push
xor
inc
gs
insb
addr16
je
insb
dec
inc
add
xor
inc
gs
insb
addr16
je
insl
add
push
add
imul
arpl
outsb
add
ja
inc
jb
popa
je
push
imul
inc
add
inc
push
xor
cs
insb
