ss
sub
jmp
cmp
cmp
mov
jg
jge
add
arpl
scas
mov
js
into
inc
add
pop
pushf
stos
lahf
lea
push
aam
add
mov
dec
clc
movsl
faddl
stc
ret
lods
inc
add
pop
mov
mov
add
mov
inc
add
jo
xchg
dec
jge
xor
cmp
pop
lahf
cwtl
fs
inc
aam
add
inc
add
leave
loop
in
cmpsl
adc
xchg
lods
inc
mov
int3
inc
add
test
xchg
leave
or
xchg
cwtl
and
mov
sar
inc
ret
jl
xor
pop
push
add
lds
inc
add
add
push
jmp
add
cmp
repnz
add
cmp
inc
in
cmp
add
sahf
int
jnp
adc
dec
inc
add
dec
jge
add
pop
popf
mov
out
loop
add
iret
push
sahf
cmp
xor
fdivrs
inc
push
in
sbb
pop
test
sub
mov
addb
add
sub
jne
pop
mov
add
addr16
pavgb
add
add
scas
mov
ljmp
rcrb
pushf
cmp
iret
pop
hlt
insb
dec
lea
lea
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
ds
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
push
lret
add
add
xchg
lods
and
push
repz
cwtl
add
mov
or
cmpsb
clc
pop
fs
xor
stos
out
ds
or
xchg
fldl
dec
cs
xor
lcall
jb
fwait
adc
movsb
mov
xchg
pop
ss
int
dec
sbb
xchg
add
popf
pop
add
mov
sahf
adc
data16
push
sbb
push
add
xchg
push
jae
repnz
add
pop
cs
clc
mov
into
fdivrl
jnp
mov
test
push
jne
add
push
sbb
add
sbb
mov
cmp
xor
dec
or
xor
add
pushf
xchg
outsl
mov
cmpsl
or
es
xor
sub
rolb
xor
cmpsb
pushf
mov
push
push
std
addb
dec
aad
jnp
adc
add
out
and
adc
lods
xor
lahf
adc
add
cmp
rcrw
shrl
mov
xchg
ret
xor
sub
ret
iret
jbe
pop
shll
mov
nop
mov
enter
xchg
jb
xor
shl
arpl
xor
pop
scas
and
hlt
andl
sti
out
dec
or
mov
add
cmpsb
ss
psubsb
mov
mov
ret
mov
int
inc
lret
jge
mov
in
jb
sarl
pop
pop
lods
pop
sbb
addr16
jb
sti
idiv
adc
mov
lcall
xchg
lret
rcrb
mov
jmp
push
add
mov
fwait
sub
mov
rolb
clc
addb
add
push
inc
out
add
dec
cwtl
sbb
sub
jb
mov
int3
push
jb
outsb
mov
sub
pop
mov
add
lahf
ss
ds
sub
icebp
add
orl
testl
and
jns
xor
insb
mov
push
jb
test
cli
cmp
dec
push
sub
dec
lret
addb
sbbl
add
iret
movsl
dec
insl
pop
leave
pop
xchg
cwtl
sbb
out
adc
test
out
hlt
dec
inc
and
inc
add
xchg
inc
add
daa
fsubl
push
leave
and
lods
fldt
shll
loope
sub
push
sbb
or
jecxz
or
add
out
aaa
sbb
pop
and
repnz
pop
fsubp
or
jge
cmp
cmpsb
iret
push
mov
and
inc
out
add
loopne
jmp
push
sbb
jbe
sbb
or
push
out
xchg
dec
or
nop
mov
mov
negb
cli
xor
rorl
hlt
mov
fmuls
lea
add
xchg
sub
cli
mov
std
inc
add
sbb
push
inc
aaa
jp
sti
push
in
hlt
mov
adc
mov
dec
cmp
xor
add
or
dec
push
sahf
lods
cmpsl
in
and
lret
xchg
mov
sub
push
add
xchg
lods
cmp
loopne
ss
sub
dec
adc
shlb
mov
sarb
jp
mov
mov
call
ret
fnsave
add
in
and
cmp
sub
mov
cmc
cmp
lret
adc
in
scas
mov
cmp
rorb
or
aad
in
mov
pop
add
sahf
sbb
pushf
fs
clc
movsb
adc
xor
mov
ret
mov
movb
add
sub
imul
inc
pop
in
lock
movsb
leave
pusha
add
add
into
hlt
lcall
sub
mov
lcall
ret
mov
jp
fcoms
or
cs
inc
add
add
add
add
pop
cmp
push
lock
mov
shll
sbb
jp
icebp
insb
mov
repnz
fs
push
mov
add
psubsw
push
push
dec
das
cltd
mov
lret
ficomps
add
int3
cmpsl
sbb
cltd
xchg
hlt
pop
or
add
lcall
jo
add
pop
neg
mov
dec
mov
cmp
jg
add
iret
into
jmp
dec
cmp
dec
sub
push
shlb
pop
mov
cwtl
hlt
dec
inc
idivl
sub
or
fs
sub
or
jnp
cmpsb
jae
jmp
mov
xchg
lods
pop
inc
adc
xor
sbb
rolb
xchg
jge
pop
test
popf
mov
or
mov
mov
push
daa
push
mov
fmuls
orl
jle
es
imul
shrl
and
jecxz
lods
jecxz
jnp
add
mov
rolb
jp
cmp
int3
adc
testb
lods
popa
mov
addb
pop
test
rolb
pushf
inc
add
add
cs
add
cwtl
movsb
in
nop
movb
mov
and
push
bnd
shlb
mov
in
push
push
xchg
push
add
sub
movb
imul
pusha
add
add
inc
add
addr16
or
xchg
les
sub
xchg
add
mov
dec
dec
imul
inc
pop
icebp
inc
mov
sarl
sub
ja
mov
mov
pop
stos
fidivrs
popa
adc
adc
dec
roll
sbb
jbe
add
sub
dec
add
inc
inc
add
and
pop
pop
or
dec
shll
adc
test
sbb
lea
mov
xor
sbb
and
jmp
aad
aaa
push
inc
add
adc
push
add
mov
dec
iret
clc
outsb
dec
adc
mov
inc
insl
jp
fidivl
push
adc
jle
jecxz
test
in
push
inc
shrl
jle
sbb
adc
inc
into
lcall
push
add
into
or
bound
ret
inc
add
pop
mov
cmp
in
add
mov
push
add
rcrl
enter
sti
dec
cmp
inc
adc
scas
pop
mov
add
push
mov
out
jge
mov
cltd
lret
stc
lods
sub
push
mov
fisubl
mov
clc
in
mov
fcomps
and
out
lcall
push
test
out
scas
xchg
fmull
das
xor
pop
movb
xchg
fwait
mov
or
xlat
mov
mov
xchg
ja
mov
aad
xchg
imul
rolb
imul
leave
sub
and
push
nop
test
pop
cmp
stos
fnstcw
pop
dec
fwait
or
add
sahf
ss
ret
stos
jecxz
adc
inc
mov
push
flds
scas
fcoms
add
cwtl
mov
xor
push
cmpsl
xlat
push
jns
xor
jecxz
ret
je
repz
add
sub
add
mov
push
mov
je
dec
das
fisubs
bound
xchg
roll
add
push
push
ds
cs
and
js
inc
cmp
cmp
inc
add
sub
dec
pop
xchg
adc
dec
add
sahf
xchg
fmuls
dec
inc
jnp
cmp
sbb
loope,pt
sub
cmc
and
insb
repz
add
popf
js
mull
sbb
xor
les
loopne
test
jle
push
add
or
cmpsb
iret
pusha
add
adc
dec
cmpsl
push
cmp
add
pushf
jmp
cmp
jno
sub
jecxz
xchg
jecxz
movb
add
xchg
lret
inc
dec
cmp
mov
sbb
add
dec
pop
and
mov
sti
lods
mov
sti
sbb
add
imul
jbe
enter
mov
add
jns
and
sbb
data16
addb
sbb
add
scas
jle
std
mov
call
add
fistpl
mov
add
add
inc
add
lods
out
add
outsl
mov
xchg
xchg
add
jge
add
mov
aad
mov
push
jnp
ds
movb
xchg
aad
pop
push
adc
inc
mov
cs
mov
jp
cmpsl
lcall
inc
add
inc
add
add
add
pop
mov
les
jl
ss
ja
xor
sbb
add
les
push
imul
add
nop
fsubp
xchg
xor
push
stc
stc
lret
mov
int3
push
push
mov
in
scas
jb
enter
jbe
jno
dec
or
clc
pop
shrb
popf
xchg
mov
roll
sti
and
lods
fcompl
push
add
insl
lods
mov
repnz
and
add
sub
add
sti
shlb
ss
jo
fdivp
inc
add
int3
aas
sub
rcll
add
xor
or
orl
ret
jmp
jmp
dec
inc
add
xor
sub
add
xchg
int
mov
xchg
push
mov
adc
mov
les
mov
es
cmpsb
xor
add
cli
int
sub
and
jle
cltd
inc
add
dec
xchg
imul
xor
push
mov
add
cmp
in
out
and
add
ljmp
sbb
ss
pushf
cmc
cld
xor
push
shll
push
mov
sub
mov
pop
and
test
mov
add
fs
mov
in
faddl
mov
pop
les
push
jmp
rorl
repnz
jae
sbb
add
add
das
sti
sti
and
pushf
addb
loope
sbb
add
insb
ds
and
dec
mov
adc
add
add
add
pushf
mov
add
aam
mov
fisttpl
lcall
add
in
adc
dec
xor
adc
ret
and
fisubl
push
pop
push
jge
add
aam
cwtl
sbb
push
shlb
sub
inc
add
or
movsl
xor
lcall
jge
jne
pop
push
push
fsincos
repz
push
add
mov
sbb
push
add
bound
es
add
fcomi
sub
jle
adc
stc
sahf
rclb
add
inc
mov
pop
xchg
mov
xchg
adc
jno
sub
add
imul
add
cwtl
call
rolb
insb
lcall
or
xchg
sbb
dec
movsl
loope
lods
pop
xchg
add
jb
in
mov
into
in
or
add
sub
jg
ret
jb
test
jns
add
mov
addl
mov
push
mov
jecxz
addr16
cmp
mov
mov
sarb
xchg
in
mov
mov
sbb
movb
add
pop
pop
test
push
movsl
clc
mov
test
pop
jge
enter
in
xor
cmpl
ds
jno
push
inc
call
cli
push
xchg
push
sahf
test
addr16
ds
test
enter
sti
stos
fisttpll
push
test
inc
sbb
subl
je
fdivp
push
lock
mov
xchg
ja
add
mov
es
inc
add
fistpll
push
pop
movsb
mov
cmp
cmp
in
sbb
lods
mov
mov
push
xor
nop
pop
mov
in
sbb
scas
ds
xlat
cmp
sub
lods
push
out
mov
or
inc
mov
mov
or
popf
xchg
jne
add
fimull
add
outsl
cld
cwtl
mov
test
out
ficompl
xor
pop
xchg
arpl
fwait
add
adc
sti
cmp
ja
lods
mov
stos
popf
add
mov
add
mov
sbb
add
daa
sbb
xor
jne
push
or
cmp
movsb
sub
or
sti
mov
fldl
jp
fincstp
xchg
mov
add
js
jge
enter
or
dec
add
push
pop
fwait
sbb
pop
or
les
pushf
cmc
movb
enter
and
add
jno
lea
push
addr16
outsl
sub
mov
ret
in
add
sbb
or
imul
push
jmp
add
or
and
cmp
js
cwtl
jbe
lret
mov
mov
andl
insl
sarl
ljmp
add
pop
and
push
mov
out
and
pop
jp
inc
add
gs
movsb
idiv
pop
out
or
jmp
mov
add
addb
insb
xchg
lods
daa
les
ja
cmpsb
mov
add
push
jne
sti
repz
pop
shrl
ret
add
test
adc
int3
lods
push
lahf
mov
lahf
pop
lds
mulb
jmp
arpl
dec
shll
push
mov
mov
insl
push
dec
cmc
xor
xchg
inc
aaa
inc
add
push
xor
mov
mov
xor
adc
cld
pop
and
xchg
jne
pop
fisttps
mov
shll
fcoms
scas
push
mov
inc
add
mov
add
pop
stc
movsb
cmp
daa
pushf
push
outsl
in
loope
push
or
mov
cltd
sti
jae
pop
mov
fbld
out
cld
in
mov
lcall
push
mov
cmp
push
inc
add
xor
test
leave
insl
shr
insl
lret
int3
fdivl
mov
push
cmc
pop
mov
cmp
jecxz
insl
popf
mov
nop
jle
cmp
addr16
insb
jne
scas
mov
add
shll
out
ja
mov
add
faddp
add
xchg
inc
pusha
add
test
push
cwtl
xor
add
mov
pop
fwait
cmp
and
mov
cmp
repnz
addr16
xchg
fstps
sub
bound
sbb
add
add
sahf
pop
sub
add
repnz
ret
pop
and
xlat
ja
cmp
mov
xlat
push
lods
call
xchg
int3
test
add
pushf
jl
add
addb
int
add
call
inc
add
movsb
imul
push
lret
mov
jmp
test
add
inc
lcall
or
xchg
test
imul
cmp
jno
jge
out
add
test
push
adc
adc
cmpsb
movb
test
add
xchg
xor
push
cmp
aas
mov
xor
movb
mov
jb
add
or
arpl
cmp
sbb
or
out
mov
jp
inc
add
add
pop
xchg
movsl
lahf
ss
je
add
add
fmuls
cmp
ret
inc
add
test
xchg
arpl
xchg
lret
shll
dec
sbbl
or
add
xor
pop
stos
inc
add
cs
dec
stos
ret
ror
mov
repnz
cli
jl
movsl
jo
imull
pop
sbb
out
testb
ret
xor
mov
test
movsl
pop
mov
mov
leave
sub
in
inc
ljmp
popa
push
fldcw
jmp
jb
jmp
sub
cmpsb
jp
ja
add
xchg
xor
test
rcr
std
or
mov
rcll
inc
lea
into
or
test
repnz
popf
jo
test
jo
add
mov
les
jge
aaa
pop
add
in
jns
int
lock
mov
rol
add
dec
xor
aad
rcrl
push
cmp
mov
in
in
mov
arpl
xchg
mov
add
lods
popf
out
sar
movb
mov
adc
pop
inc
xor
je
mov
repnz
into
pushf
into
pop
cmc
je
dec
imul
jp
add
jmp
test
add
pop
mov
dec
and
or
pushf
xchg
or
xlat
fnop
jg
ret
sub
add
dec
jge
pop
push
pop
sbb
xchg
mov
mov
je
mov
enter
mulb
fcomps
movsl
dec
mov
add
mov
out
xchg
lock
adc
fsubl
add
repnz
aam
inc
pop
jo
iret
or
mov
sub
jle
gs
fisubrl
in
or
fdivrs
lahf
mov
add
test
add
inc
add
push
fs
out
add
imul
rcl
imul
add
dec
mov
add
push
xor
ja
xchg
jp
add
mov
out
add
jp
push
mov
inc
add
icebp
mov
sub
mov
ret
cwtl
popf
and
push
sub
push
in
out
mov
insl
push
or
pop
mov
dec
jae
sbb
mov
out
sbb
jmp
dec
pop
push
xor
fcmovnb
add
add
add
inc
std
fldenv
inc
stc
movb
push
fsubs
xor
inc
add
lahf
in
pop
out
mov
or
stos
add
xchg
aad
ljmp
pusha
add
jns
mov
enter
add
push
add
clc
cmpsb
xlat
sub
dec
pop
fidivl
cmpsb
xor
movsl
in
inc
add
pop
lds
fmull
mov
in
mov
cmc
into
sub
dec
xchg
hlt
jns
push
add
cmp
push
sbb
fcomp
es
aad
aad
add
hlt
mov
imul
movsl
js
add
adc
xor
sub
jg
pop
push
ror
mov
or
sub
cmp
aam
sahf
or
out
push
mov
jne
sahf
pop
popf
push
xchg
jge
popf
out
cld
dec
mov
xchg
mov
sub
fisubrl
stc
test
rcrl
mov
out
add
test
mov
mov
orl
add
add
movb
cld
mov
rorl
mov
mov
lods
or
mov
pop
xchg
cmc
pop
mov
in
je
test
sbb
pop
popf
sub
addr16
jp
ret
fwait
mov
add
stc
repnz
mov
add
mov
jno
push
popa
aad
movb
push
out
lods
jecxz
xor
adc
add
add
xchg
pusha
add
and
int
add
and
stos
cmp
int
mov
fldl
add
jae
shll
scas
and
ja
inc
add
or
sbb
xchg
pop
push
push
in
add
push
mov
push
add
popf
les
and
in
inc
add
aad
lcall
dec
dec
int
enter
add
or
out
ja
sbb
lahf
dec
das
test
daa
jae
adc
push
jns
add
cltd
mov
aad
sub
rorb
inc
add
fdivl
in
push
xchg
repnz
femms
or
outsb
out
push
sti
jno
bound
inc
and
pause
ds
test
mov
xchg
sahf
cltd
mov
les
daa
fcomps
dec
or
inc
cmp
mov
push
lock
push
jle
mov
add
das
jb
and
pop
or
loopne
lds
xor
or
sahf
push
xchg
out
stc
push
fildll
push
fwait
dec
and
cmp
lret
faddp
add
sbb
mov
into
dec
pop
adc
subl
pop
mov
addb
mov
inc
add
pop
inc
mov
cld
or
stos
mov
push
mov
and
add
adc
cltd
insb
xchg
ljmp
inc
lods
cwtl
leave
in
sar
mov
push
add
jne
cmp
out
adc
sarl
xor
leave
sbb
cmp
stos
lods
or
and
add
jg
xchg
movb
or
xchg
out
addb
lods
pop
dec
inc
xchg
aas
rcll
push
jne
shl
cmc
or
mov
adc
pop
out
test
xor
shll
jno
int
pop
les
lods
mov
xchg
push
or
dec
bound
cli
mov
pop
btl
fisubs
insb
stc
lods
out
arpl
add
add
sub
or
cli
push
ds
repnz
ja
imul
mov
jmp
xchg
sbb
imul
or
jle
loope
clc
jle
sbb
pop
push
add
dec
das
ret
xorl
sub
or
ficoms
sbb
cltd
mov
lret
idivl
loope
pop
adc
stc
push
adc
xor
dec
scas
outsl
adc
inc
jmp
out
add
addb
shll
mov
mov
dec
insl
push
sub
jbe
int3
jmp
outsb
sub
and
notl
adc
xchg
fisubl
in
fcmovne
mov
dec
pusha
add
es
mov
inc
cmpsl
lock
popl
test
pop
sub
or
bound
es
cli
mov
icebp
aam
jb
je
pop
imull
mov
add
mov
inc
fwait
adc
add
adc
lret
cld
js
jge
jae
pop
push
pop
roll
jmp
mov
icebp
mov
cmpsb
imulb
add
ja
or
ret
jb
loope
dec
addb
inc
add
mov
lcall
lret
in
push
jmp
pop
scas
repnz
loope
jp
repz
xlat
mov
clc
push
xchg
mov
push
dec
sub
add
jb
add
ficompl
aam
ret
xor
mov
rcr
std
shl
lahf
sub
iret
cmp
push
or
stos
sub
cwtl
cmc
add
pop
sub
inc
add
add
imul
movsl
icebp
call
les
inc
add
add
mov
movsb
inc
add
xor
jns
push
popl
add
scas
shrl
push
and
jb
xchg
outsl
xchg
addb
mov
jnp
sub
cwtl
insl
movsl
aas
sbb
js
adc
mov
xlat
aas
stc
sub
pop
adc
pushf
or
in
push
out
inc
ljmp
mov
xchg
sbb
loop
dec
mov
mov
pop
jp
xchg
jle
push
adc
gs
movsl
lock
push
lods
lret
mov
rcrl
sahf
xor
das
jno
cmp
int3
push
cltd
stc
std
jecxz
xlat
cmp
into
cmp
and
daa
adc
ret
mov
popa
sahf
sbb
dec
lock
lret
subl
sahf
in
mov
xor
pop
jecxz
mov
inc
and
jae
inc
add
icebp
idivl
push
std
push
and
into
in
and
lods
aam
and
repz
test
adc
lods
mov
mov
cltd
add
lahf
daa
aas
push
add
add
test
shl
ds
lds
and
fnstenv
jo
push
adc
cmp
das
sbb
int3
lea
repz
add
jbe
movl
mov
shll
repz
mov
mov
push
mov
sub
pop
popf
data16
loope
mov
clc
cmp
paddsb
or
adc
push
insb
add
xchg
out
cmp
loop
push
scas
and
jmp
std
andl
add
mov
jb
jecxz
fldz
pop
mov
jl
cvtps2dq
mov
adc
dec
sti
dec
or
sub
sahf
or
lret
fidivl
rorl
pushw
sub
sub
negb
hlt
sbb
add
jne
in
mov
ljmp
sti
jo
vpmacssdd
adc
mov
adc
pushf
lods
cs
mov
or
gs
dec
lock
add
lods
add
mov
dec
mov
add
rcr
add
add
dec
fcomps
add
in
mov
lds
or
rolb
mov
mov
xchg
popf
inc
push
mov
int3
push
arpl
cmpsl
xor
pop
or
add
pop
sub
xchg
add
movsb
dec
sub
jns
pop
out
cltd
push
add
add
inc
les
jb
or
popa
or
push
cmp
mov
dec
adc
shr
xchg
inc
cmpsl
mov
clc
dec
adc
mov
lahf
inc
add
jg
xor
repnz
push
cmp
test
or
mov
or
in
sub
ret
loop
leave
pop
push
push
call
enter
push
add
jo
xchg
inc
add
fwait
push
stos
out
fcos
imul
dec
fcomi
cwtl
sbb
in
add
hlt
int3
iret
mov
sub
pop
xor
xchg
stc
sbb
pushf
fbld
adc
jo
jo
pop
cmpps
dec
or
sarb
lret
jae,pt
in
mov
cmp
hlt
adc
add
sahf
sub
cmp
ja
ljmp
mov
add
daa
rclb
cmp
ret
sbb
mov
repz
jne
mov
in
inc
xchg
clc
bound
sub
xchg
daa
mov
scas
xor
mov
cwtl
mov
cmp
test
mov
ss
fimuls
or
fisubs
aaa
mov
add
scas
leave
inc
add
sbb
enter
pop
inc
stos
inc
add
push
add
aad
add
mov
dec
inc
add
mov
or
xchg
mov
pop
nop
lahf
jb
push
idiv
lods
dec
mov
add
mov
cmpsl
cs
add
shlb
mov
jb
and
xor
loop
pop
gs
jae
xor
add
add
clc
jle
je
inc
ljmp
mov
push
call
jmp
and
insl
sub
cmp
scas
popf
enter
imul
push
jae
outsl
sti
int3
cs
nop
out
pop
stos
adc
fisttps
loop
dec
in
in
mov
push
loopne
inc
add
add
faddl
mov
leave
dec
mov
push
pop
je
les
js
dec
test
and
xchg
addr16
in
mov
pop
clc
mov
scas
jl
xchg
inc
dec
or
addr16
push
sbb
inc
add
subl
imul
fidivl
insl
or
add
adc
jns
call
repz
lahf
jmp
jae
sub
dec
xchg
js
xchg
sti
les
or
dec
mov
xor
jmp
and
loope
xchg
imul
test
inc
add
mov
popa
jge
lret
lods
add
stos
xor
inc
add
jno
push
xor
mov
jg
movb
lods
call
out
or
leave
inc
lret
mov
jmp
pop
mov
pop
dec
or
mov
xchg
mov
iret
cli
or
pop
cs
sub
int3
pop
mov
fimuls
sbb
add
cmp
or
aam
cmp
mov
ret
inc
add
inc
add
jl
data16
adc
xor
and
inc
call
les
add
sub
push
fwait
mov
scas
aaa
data16
repnz
nop
add
push
test
fists
rcrl
inc
jp
stc
mov
add
test
sbb
cmpsb
push
sbb
pop
stos
jne
mov
daa
xchg
lea
fdivrl
bound
iret
repnz
fdivrl
in
cmp
js
sub
and
mov
sub
mov
int3
stos
or
mov
add
dec
pop
jge
lcall
jp
gs
ds
imul
add
mov
mov
test
xchg
rorw
stos
cmpl
add
add
add
cli
dec
aam
add
out
add
leave
adc
xor
mov
jno
add
push
lahf
xchg
push
sti
fnstsw
je
movsb
xor
adc
aam
call
add
add
adc
dec
in
lock
and
outsl
mov
notb
lret
add
inc
add
icebp
lods
out
sub
mov
mov
test
sbb
out
push
in
xchg
mov
or
mov
and
bound
popf
mov
das
and
testb
add
pop
dec
addb
add
cmpsl
and
push
inc
dec
jp
adc
push
push
and
inc
jb
sub
xchg
push
test
pop
out
cwtl
movsb
jne
adc
add
mov
jo
fildl
add
xchg
imul
lods
fcoms
repz
add
lret
fcomip
pop
mov
pop
fwait
xor
push
ljmp
shr
cmp
lahf
mov
popf
mov
xor
cmp
inc
or
adc
mov
add
and
push
call
dec
fisubrs
mov
add
mov
inc
pop
sub
repz
shll
scas
loope
pushf
les
popa
cli
stc
push
in
movsl
aam
rcrl
add
adc
dec
sbb
dec
hlt
ljmp
add
jns
mov
add
jmp
jnp
inc
add
add
dec
push
lods
mov
divb
inc
cs
push
sub
addb
push
lods
add
mov
add
sbb
inc
sub
xchg
pop
les
cs
cltd
in
jno
nop
lahf
dec
decl
ret
push
into
mov
je
aam
cli
sub
push
sub
pop
pop
test
jecxz
repz
pop
pop
add
lods
nop
jp
xchg
imul
dec
stos
cmp
aad
add
jmp
repz
add
pop
inc
nop
leave
nop
mov
xor
rolb
add
add
mov
add
lret
add
mov
ljmp
mov
ret
cli
jge
mov
fcmovnbe
pusha
add
std
mov
mov
imull
movsl
push
sbb
add
enter
mov
int3
dec
jb
sbb
ficomps
daa
aad
aam
add
sub
repnz
inc
andl
mov
add
es
cmpsb
xor
adc
iret
jmp
xor
and
pop
sbb
ds
cmc
adc
cltd
xor
mov
stos
movb
add
mov
ljmp
cmp
lret
inc
add
sbb
and
stos
jns
pop
jae
add
cmp
cwtl
test
jle
aas
pop
arpl
fildl
xor
addr16
or
cli
jae
pop
js
add
movsl
mov
sub
sbb
in
sbb
cmp
js
hlt
fildll
jno
pop
and
test
sub
das
movsb
xchg
shrb
jecxz
mov
add
xchg
mov
lods
push
push
filds
jle
mov
stos
lea
fs
mov
xchg
movsl
pop
add
dec
in
jne
jo
add
pop
je
ja
enter
and
push
add
clc
fnsave
jge
pop
push
sbb
sbb
scas
mov
xorl
cmp
or
ret
pusha
add
scas
rorl
mov
pop
lds
lds
xor
je
pop
or
push
fwait
out
in
test
xchg
pop
idiv
ret
push
adc
insb
in
cmp
xchg
movsb
pop
insb
push
and
rolb
add
scas
push
sub
push
scas
imul
popf
stc
inc
add
inc
add
pop
hlt
ud0
jmp
fld
add
pusha
add
add
movsl
and
add
cmp
pushf
es
test
aaa
mov
dec
adc
xchg
pop
testl
xor
xchg
adc
add
in
cmc
imulb
pop
sar
in
jle
or
or
push
lret
movb
mov
out
fs
imul
pop
cmpsb
push
ret
rolb
aaa
mov
outsb
or
add
jmp
sub
dec
and
out
or
jo
add
sbb
mov
mul
idiv
dec
out
dec
lds
mov
out
jns
les
mov
hlt
outsl
xor
repnz
repz
mov
std
lcall
pop
sbb
mov
hlt
mov
inc
cwtl
sbb
aaa
or
xor
inc
add
and
hlt
rcl
cmp
jb
add
cli
roll
push
mov
jns
and
and
stc
es
aas
cmp
pusha
add
movb
add
daa
stos
lods
jecxz
les
rcl
cli
icebp
lods
scas
cmpsl
hlt
inc
xor
push
dec
fisubrl
add
sarb
sbb
sub
inc
add
xchg
movl
cmc
pcmpgtd
mov
add
daa
push
pop
push
add
loopne
cld
popf
sub
push
add
inc
pop
pop
loope
jno
inc
bnd
pop
subl
sbb
xor
add
adc
jge
sbb
ss
and
clc
xchg
dec
dec
call
js
dec
pop
sti
lods
lret
and
mov
int
mov
stc
sbbl
add
sub
or
test
mov
stos
xor
fsts
arpl
add
int3
pop
cld
cmpsl
lret
mov
out
repnz
sbb
jo
loop
shlb
add
popa
push
and
in
repz
pusha
add
out
mov
into
addr16
lret
push
inc
iret
cmp
pop
loopne
rolb
add
jg
add
leave
cmpsl
aad
add
or
gs
dec
outsb
repz
mov
test
mov
push
mov
shlb
shl
addl
sub
mov
cmc
test
or
lods
pop
push
addb
add
adc
xchg
xor
repz
mov
dec
inc
add
pop
xor
fdivl
sahf
pop
dec
or
cmp
call
pop
xchg
push
sub
daa
inc
mov
and
daa
mov
xchg
inc
add
cld
inc
and
fs
imul
mov
aas
dec
fwait
in
std
or
loop
xchg
rorb
dec
cmp
leave
adc
jno
sub
stos
push
or
addr16
ret
fisubrl
movsb
push
cwtl
lods
shrl
arpl
popf
xchg
mov
sbb
popa
jmp
lock
enter
loopne
or
movsl
pop
out
mov
xor
jb
pop
test
sub
or
add
push
in
sub
int3
xorl
and
cmpsl
add
push
inc
and
mov
mov
or
inc
mov
adc
xchg
lcall
call
push
popf
mov
cmp
lods
xorl
push
add
inc
andl
movsl
xor
fldenv
add
mov
cmpsb
sub
lods
lahf
adc
ljmp
cld
mov
cmp
xor
inc
rolb
mov
sti
dec
sub
pop
xor
or
sbb
loope
cmp
mov
in
xchg
add
or
fwait
xor
arpl
push
jne
out
mov
repnz
mov
cmpsb
pop
nop
mov
ret
cmp
push
dec
hlt
inc
test
add
xchg
stc
inc
pop
push
mov
jp
adc
aas
dec
xchg
push
xchg
pop
shrl
das
arpl
add
nop
pusha
add
add
lods
test
icebp
hlt
pop
sbb
sbb
test
lahf
jle
shlb
adc
icebp
mov
lea
and
ljmp
je
xor
adc
jg
in
daa
loope
call
and
xchg
inc
add
xrelease
jo
xchg
out
jne
dec
dec
lods
es
sub
ljmp
outsl
test
lahf
pushf
stos
xchg
sub
add
mov
ret
and
idivb
fisttpll
xchg
int
repz
jne
mov
leave
add
add
xor
mov
stos
mov
add
fcompl
push
mov
addb
sub
sub
jnp
jns
lret
and
and
sti
aam
movsb
addb
mov
addb
inc
add
je
sbb
test
add
inc
mov
add
jne
mov
imul
push
xchg
pop
inc
push
push
or
mov
loope
fistpl
xchg
fsubr
mov
adc
inc
jo
scas
xor
jo
add
aad
lret
mull
pop
or
push
xchg
sbb
emms
out
sbb
out
jge
sti
aaa
add
pop
adc
and
push
sbb
jl
call
mov
cltd
xor
mov
cmc
adc
push
rolb
sub
xchg
pop
call
icebp
insb
ja
stc
cmp
mov
mov
dec
mov
push
lcall
inc
scas
test
icebp
fsts
loop
inc
mov
xor
or
imul
pop
icebp
call
and
fstl
data16
adc
pop
sbb
dec
repnz
pop
ror
sti
aaa
lods
jo
add
ds
divb
out
xor
scas
and
add
adc
imul
fwait
out
sti
xor
lahf
inc
add
add
cmp
mov
xchg
addr16
hlt
push
xor
fld
add
mov
sbb
cmp
jge
ja
addb
mov
pop
movsl
or
add
pop
cmp
nop
mov
pop
in
js
add
add
add
push
scas
lds
mov
sbb
es
enter
lods
pop
jne
lods
mov
dec
mov
add
pop
cmp
and
mov
push
in
mov
div
xchg
iret
pop
mov
ret
shlb
in
inc
pop
lds
fnstsw
movsl
pop
push
mov
jecxz
cwtl
ds
mov
mov
movsl
mov
mov
push
mov
enter
xor
inc
add
shrb
xor
sub
push
push
add
add
adc
ds
adc
add
mov
dec
xchg
fildll
lahf
adcl
loopne
adc
fsubr
imul
clc
inc
add
mov
jns
xchg
les
pop
push
add
xchg
pop
test
stos
or
or
sti
insb
jno
pusha
add
pop
push
dec
out
pop
push
loope
ret
push
shll
pusha
add
in
and
sarb
cmp
add
xchg
pushl
adc
cmp
shll
sbb
jno
jp
fstl
mov
std
mov
add
imul
mov
js
inc
add
addb
push
cli
aad
scas
push
les
pop
mov
cmp
test
leave
push
dec
push
in
cmp
push
cmp
mov
lods
jne
jecxz
test
aaa
imul
out
popa
inc
add
jae
add
idiv
test
mov
daa
shll
packsswb
popa
ficompl
cmp
mov
je
aas
sub
jo
outsb
pop
into
push
jo
adc
inc
add
sahf
pop
fisubs
add
int
or
cwtl
adc
push
dec
pop
ret
ret
les
jge
int
push
test
in
adc
gs
add
xor
add
mov
lret
into
pop
mov
push
pop
addb
movsl
inc
pop
adc
xlat
pop
cmp
pop
fs
cmpsl
dec
pop
movsl
inc
pop
call
mov
mov
stos
ds
add
mov
jle
xor
fbld
jno
rorl
add
lret
addr16
sbb
dec
inc
icebp
jge
ficoml
out
test
jmp
mov
cmp
jb
adc
or
xor
lods
leave
jmp
nop
inc
add
adc
rol
loop
mov
movsb
lahf
bound
divl
pop
gs
je
mov
dec
scas
sahf
xchg
pcmpeqb
pop
adc
push
dec
xor
inc
push
stos
and
push
add
mov
cwtl
and
popf
sub
dec
and
loop
add
jg
call
sub
cmp
aas
test
outsb
add
lds
out
and
negl
pop
push
test
jbe
sti
push
or
test
in
nop
sbb
test
or
loop
cmp
dec
jns
aaa
imul
icebp
jmp
or
mov
fsubrs
xchg
addb
add
xchg
dec
test
cwtl
jbe
and
add
loopne
outsl
cmp
mov
movsb
das
fsubl
pusha
add
adc
xchg
sub
jae
sub
or
dec
lea
pushf
sbb
push
sub
push
add
dec
aad
pop
mov
or
or
decb
adc
aaa
dec
icebp
movsl
push
push
in
incl
test
jecxz
imul
lret
aas
in
pushf
test
push
inc
add
negl
lret
dec
mov
mov
scas
pop
jns
ss
cmp
and
sbb
add
or
xchg
inc
pop
ds
xlat
pop
jmp
push
xchg
or
rcrb
jne
ret
pop
jmp
push
or
rolb
push
pop
lds
cmp
clc
popa
xchg
adcl
jge
into
ret
push
add
icebp
mov
ljmp
add
in
imul
xchg
bound
mov
clc
xor
stc
sti
cwtl
pop
faddl
lret
rolb
cld
pop
jmp
cmp
add
xchg
mov
mov
testb
daa
cmp
inc
add
mov
test
out
push
jle
fsubs
jno
test
call
test
mov
inc
sub
repnz
repz
mov
scas
imul
dec
dec
fnstsw
push
push
addr16
ss
arpl
dec
xchg
addb
lds
dec
xor
cli
inc
sub
dec
and
mov
pusha
add
outsb
pop
sbb
inc
add
pop
jp
sbb
add
add
xchg
xchg
jno
add
into
in
clc
fildll
add
repz
insb
call
adcl
xchg
js
sbb
inc
add
xchg
xlat
sub
mov
or
mov
andl
cmp
scas
aas
add
push
aas
push
jecxz
jg
sbb
mov
cmpsl
pop
sbb
stos
dec
xor
in
inc
sahf
mov
cmp
add
mov
and
out
repz
mov
loop
out
add
add
in
push
or
mov
fwait
call
mov
jnp
stc
dec
hlt
test
scas
jnp
fwait
clc
je
mov
addb
sub
add
add
or
jno
add
cmp
clc
lret
pop
ret
mov
ds
mov
add
jg
mov
loope
mov
fmull
out
imul
fwait
pop
push
inc
add
lock
sub
subl
es
add
or
cli
stos
int
sbb
cmpsb
dec
js
insb
mov
test
rolb
popf
std
dec
adc
leave
cmp
cmc
mov
imul
add
clc
test
pop
mov
sbb
js
pop
popf
pop
push
inc
lds
jnp
xor
or
fimull
add
dec
shrb
xor
xor
dec
fbld
add
xchg
mov
add
lret
test
jge
mov
xchg
rclb
cmp
cmp
sbb
in
inc
mov
add
mov
add
ljmp
fisubrl
shll
cs
fsubr
sti
sub
stos
adc
movb
js
inc
add
test
jno
inc
add
xor
imul
outsl
or
jns
jl
add
divb
adc
dec
or
mov
or
test
addb
cmp
or
sti
sti
inc
add
gs
mov
fcom
push
sub
add
hlt
and
js
imul
inc
add
loop
rcll
xor
jmp
clc
mov
or
adc
push
popa
adc
add
addb
dec
out
dec
sbb
shll
iret
push
or
lds
dec
mov
fwait
stos
sbb
mov
pop
xor
mov
add
lret
daa
push
out
movsb
rol
add
add
sub
cltd
push
fmul
call
xor
pusha
add
add
negl
shl
dec
insb
leave
cs
mov
add
push
ret
nop
and
fwait
sti
out
flds
in
sub
pop
fcmovne
lret
test
icebp
lret
testb
dec
jecxz
movsb
call
rolb
fwait
dec
push
fwait
sub
pop
nop
gs
fnstenv
sub
add
dec
dec
hlt
test
ret
filds
les
xchg
iret
mov
or
lcall
mov
mov
leave
mov
std
lds
loope
add
lock
cmp
inc
and
insl
pop
pusha
add
sub
mov
out
pop
pusha
add
add
mov
dec
mov
mov
fwait
aam
jp
adc
ja
mov
or
add
sbb
fs
push
cmpsl
mov
and
xor
xchg
call
roll
sbb
adc
ja
mov
xchg
mov
push
addb
sub
sub
bound
mov
or
rolb
adc
das
rcrb
add
push
pop
pop
shlb
adc
insb
cs
imul
pusha
add
roll
sbbl
cmc
inc
add
enter
ljmp
and
imul
out
fldcw
add
xchg
stos
ss
add
divb
insl
xorl
pop
mov
enter
xchg
push
addb
cmp
push
and
pop
sub
movsl
cmp
enter
xor
push
add
insl
mov
push
push
inc
add
in
sbb
jbe
rorb
push
xor
xchg
addb
mov
jo
test
dec
out
scas
lcall
add
inc
imull
fbstp
jno,pn
mov
jbe
cld
sub
mov
hlt
stos
jne
sub
ja
pop
push
add
add
sbb
jecxz
stos
mov
cmp
scas
ficoms
xchg
imul
rep
cmp
cmp
popw
sub
aam
inc
sbb
inc
add
fildll
movsl
sbb
in
pop
pop
int3
jmp
pushf
mov
jp
lods
jne
cmp
in
pop
ja
or
cmpsl
pop
inc
movsl
pop
xchg
jp
pop
shr
fdiv
mov
out
mov
add
pop
cmp
mov
sti
mov
scas
sbb
push
add
mov
aaa
shl
fldcw
repz
push
mov
das
lock
pop
cmp
inc
mov
arpl
mov
jge
cmp
push
or
nop
dec
mov
data16
push
xchg
dec
lret
add
or
pop
dec
adc
js
push
dec
adcl
pop
jecxz
inc
adc
sbb
mov
add
or
add
cs
inc
add
test
add
xchg
leave
shlb
mov
mov
and
cli
arpl
mov
into
lcall
or
das
fsubs
je
call
sbb
or
mov
sahf
and
popaw
lcall
dec
or
clc
xorl
add
add
fnstcw
lcall
data16
repnz
fmulp
push
cltd
fs
hlt
movsb
dec
mov
hlt
xor
xchg
mov
je
add
add
cmp
daa
push
stos
adc
cltd
hlt
adc
mov
lret
cmp
xlat
adc
sbb
icebp
xor
or
add
mov
xor
xor
push
int
push
mov
dec
xchg
adc
rol
add
sub
aaa
sbb
mov
sub
dec
xor
pop
mulb
add
pop
jno
add
je
push
push
jmp
pop
mov
out
cmp
insb
xchg
dec
xchg
loopne
adc
call
pop
popa
mov
xchg
fsubrl
bound
sbb
es
mov
inc
add
repnz
adc
add
add
xchg
insl
adc
add
test
add
inc
pop
loopne
daa
mov
and
xchg
sarl
loop
jo
jge
scas
jle
or
xor
add
and
mov
push
add
mov
sbb
or
clc
movb
std
movsb
mov
ja
jecxz
dec
lret
add
movsl
push
es
lods
je
push
and
push
ret
push
je
and
cmp
jg
movb
loopne
dec
xchg
pusha
add
inc
add
mov
add
mov
lock
sbb
daa
xchg
sbb
sub
insb
jnp
mov
jo
in
jo
add
add
addb
push
sub
lret
add
push
inc
add
add
adc
xor
pop
adc
fistpll
mov
jg
aad
push
fucomip
out
and
inc
or
mov
xlat
adc
xor
cmpsl
repz
mov
pop
addl
jg
xchg
mov
jle
out
jo
addb
addb
insb
jp
push
inc
add
or
je
lods
lret
arpl
aam
xor
in
stc
aad
psrld
adc
dec
push
or
idivl
stos
pop
into
andl
jp
cmp
jo
xlat
and
ret
divl
mov
fwait
sti
std
xor
call
rcrb
fildll
mov
popf
cmp
icebp
dec
loopne
mov
into
dec
mov
or
fildll
pop
mov
mov
hlt
in
inc
add
push
cmp
add
mov
in
or
add
add
mov
enter
in
mov
lds
mov
add
loopne
push
pop
and
push
adc
scas
outsb
es
fstps
in
int3
test
mov
rorl
add
cmp
pop
push
in
add
push
das
add
insl
das
cmp
pop
outsb
ja
addb
jo
lret
std
ficomps
aas
pop
cmp
adc
xor
aas
insb
pop
xchg
xor
je
cmp
pusha
add
cltd
mov
neg
mov
or
movb
adc
add
js
addb
xchg
xlat
sar
add
je
ficompl
lea
fldenv
add
or
jl
out
repnz
push
outsl
daa
arpl
cmc
gs
jne
outsb
push
jle
add
divl
pop
insl
jg
out
lret
adc
roll
sbb
sbb
mov
sti
mov
cwtl
and
daa
rolb
lea
lcall
loop
in
or
test
add
mov
cmp
push
pushf
push
cmpsl
stos
mov
add
mov
cli
mov
cmp
cmp
mov
mov
pop
cmp
inc
testl
add
jp
aad
add
jns
cs
jmp
stos
jns
push
sbb
fbld
mov
add
data16
fcoms
inc
add
xlat
push
cmc
add
pop
adc
jp
add
inc
add
lods
or
pop
mov
cmp
pop
rolb
fmull
inc
add
xchg
fnstenv
ljmp
in
addb
jecxz
mov
push
lods
insl
test
push
shll
xchg
sbb
jecxz
mov
in
cmc
xor
rcll
lret
lds
jbe
inc
add
push
in
dec
aad
mov
add
sub
int3
popf
les
test
iret
inc
add
jecxz
inc
inc
jecxz
add
jae
lret
and
mov
cmp
sahf
xchg
jns
cmp
mov
cwtl
dec
mov
outsl
ja
push
push
scas
mov
adc
sbb
mov
clc
jle
pop
js
mov
dec
jae
xor
call
mov
push
es
mov
std
mov
lea
loop
pushf
jb
adc
xchg
roll
out
int3
sti
test
sbbl
add
jg
sub
xlat
sahf
imul
jge
femms
lock
add
inc
cld
or
or
cltd
sub
lahf
sbb
jnp
aam
lock
add
in
pop
ss
ret
xor
inc
movsb
in
repnz
adc
stos
aam
fcomi
xchg
jmp
push
std
int3
loope
xchg
repz
jae
aad
in
jecxz
enter
pop
in
jl
add
jl
pop
push
addr16
cmpl
dec
push
clc
pusha
add
sub
cmp
jns
lcall
int3
adc
fbstp
add
adc
hlt
loop
xchg
roll
scas
mov
sarb
call
adc
insl
aaa
icebp
mov
or
xor
in
and
sar
xlat
sbb
add
jnp
add
sub
xchg
int
add
and
repz
mov
lahf
stc
mov
push
aaa
addr16
add
addb
sti
push
lahf
stc
into
ss
push
sub
cmpsb
jb
xor
dec
sub
add
push
iret
movsl
lea
loope
clc
out
xchg
or
mov
add
adc
lds
ljmp
add
adc
pop
mov
dec
mov
mov
jge
jno
lods
mov
add
jmp
and
outsb
iret
inc
add
in
out
sub
call
cmp
out
mov
add
add
fsubrs
cld
imul
in
xchg
push
iret
push
sbb
sbb
inc
add
xor
lds
pop
scas
or
xlat
fisttps
xor
lods
xor
and
cmpsl
or
add
fstp
jle
xchg
not
sbb
and
mov
inc
add
inc
stos
inc
xor
jne
int3
inc
jmp
jl
bnd
jae
push
dec
push
into
dec
inc
xor
cmp
cmp
jg
dec
stos
xor
fstps
xchg
and
mov
xchg
out
push
movb
dec
icebp
int3
cld
or
add
xor
jae
lods
add
ja
xchg
mov
lods
test
nop
adc
cmp
pop
cmpsl
sbb
lds
jecxz
cmp
mov
or
sti
jo
cmpsb
dec
dec
addl
int3
xchg
inc
add
push
dec
lcall
dec
pop
sbb
mov
jmp
pop
sahf
stos
arpl
push
and
ret
mov
mov
xchg
push
dec
push
push
xor
xchg
lods
insb
fwait
mov
jbe
out
and
push
addb
in
add
fsubrs
aam
adc
and
or
add
js
mov
mov
jmp
insb
inc
add
xrelease
fsubrs
ja
cmc
dec
jne
add
mul
adc
xlat
inc
add
add
popf
lcall
out
xlat
shll
jb
pop
lock
leave
daa
shll
add
filds
add
cmpsl
ss
sub
mov
or
cld
test
pushl
lret
xchg
jnp
jbe
xchg
aam
pop
std
lahf
mov
lds
sub
js,pn
push
add
movsb
and
adc
lds
mov
cmp
push
sarl
or
fwait
test
int3
mov
repz
lods
dec
mov
test
add
xlat
push
dec
add
lahf
add
add
or
sbb
add
add
jo
mov
inc
out
mov
popf
test
cltd
loope
and
cld
mov
jg
cld
pusha
add
mov
pop
xchg
sub
mov
push
push
mov
arpl
es
into
dec
cmp
and
std
les
add
jbe
xlat
xor
cs
addb
and
fnstenv
pop
in
xlat
pop
or
lahf
ss
jle
into
pop
imul
dec
sbb
fiadds
movb
xchg
mov
push
pop
cmp
cmpsb
cmp
add
mov
nop
push
inc
add
clc
adc
sub
jp
xchg
sarl
mov
push
lock
pop
xlat
and
add
cmpsb
je
add
jns
mov
pop
int
or
add
sarl
lods
shll
mov
jnp
add
js
pop
pushf
push
add
setns
stos
lcall
cmp
cmp
add
push
addb
add
xchg
fdivs
dec
sub
push
aas
js
inc
out
sub
in
mov
cmpsb
jae
repnz
mov
and
push
enter
mov
outsb
loope
arpl
lods
pop
mov
add
push
jnp
add
dec
pop
nop
pop
les
insb
gs
adc
sbb
push
jae
sbb
jo
repnz
hlt
divb
jl
pop
daa
jo
add
fsubrl
dec
jecxz
in
ret
add
out
sub
incb
insl
addb
xchg
inc
add
push
ss
leave
cwtl
inc
add
ss
lds
cltd
loopne
pop
push
add
inc
and
sub
ret
in
push
xchg
xchg
cmpsb
mov
out
gs
or
sbb
mov
add
push
imul
in
movsb
sti
xlat
xor
addb
test
push
ret
into
jbe
mov
sub
mov
pop
in
push
mov
int3
sub
add
mov
hlt
cmp
add
cltd
inc
add
and
loopne
push
inc
mov
aas
popf
push
dec
sbb
add
adc
into
loop
sbb
sbb
mov
cmp
ret
out
jno
push
loop
scas
pop
jg
ljmp
lods
or
mov
loope
mov
pop
icebp
stc
movsb
cmp
xchg
mov
add
std
pop
scas
add
xor
xchg
push
inc
add
repnz
dec
aaa
addr16
aad
adc
dec
gs
jp
cmpsl
jb
es
mov
cli
jle
std
push
adc
repz
mov
dec
aam
icebp
cmpsb
sub
int3
pop
divb
lods
mov
push
sub
mov
add
inc
add
loopne
mov
push
cmp
sub
pop
in
push
sbb
int
ja
add
imul
jbe
test
cs
adc
jns
mov
jecxz
aaa
inc
add
mov
fdivl
cld
jmp
divb
push
add
fadds
dec
bound
mov
push
mov
add
cltd
cmpsl
mov
add
fidivs
jecxz
jbe
add
mov
push
adc
mov
daa
fists
arpl
sbb
add
hlt
repnz
ja
xchg
sbb
inc
add
cmp
add
mov
xchg
xor
lahf
mov
pop
mov
sub
mov
mov
cmp
je
cmpsb
or
cmp
sub
lea
push
idivl
out
cmp
pop
shll
jns
or
sub
push
xchg
adc
mov
subl
stos
int
insb
or
mov
cltd
dec
daa
adc
leave
push
xchg
xor
stos
dec
dec
cmp
out
out
dec
push
lock
adc
popf
mov
sar
sbb
or
mov
ja
cmpsl
mov
leave
mov
jecxz
in
add
push
mov
and
lods
insl
lcall
mov
sbb
xchg
lds
stc
jmp
pushf
push
test
ljmp
adc
push
add
push
in
sub
add
inc
mov
stc
adc
sub
rcl
jno
add
mov
lock
add
gs
lods
fwait
shll
sbbl
dec
test
or
cld
push
movsb
or
cmp
popf
lods
push
call
cmp
out
adc
std
pushf
outsl
jns
or
mov
inc
mov
pop
and
fmulp
add
jmp
inc
repz
ror
pop
std
add
cmp
lret
in
scas
or
imul
test
xor
inc
stos
in
fildl
sbb
mov
xchg
dec
and
rcll
add
xchg
sbb
enter
mov
add
std
cli
xor
pop
push
sti
push
sub
xchg
push
add
jno
add
das
int3
mov
call
mov
popf
cmp
leave
mov
dec
les
adc
pop
cmpsb
ljmp
cmp
icebp
addb
pop
ss
push
cmpsl
push
test
push
cltd
loop
xor
xchg
test
xchg
fdivrs
add
push
sbb
iret
loopne
mov
sbb
sbb
sti
sbb
and
insb
in
in
sar
dec
in
dec
repz
cmp
jae
dec
xchg
int3
js
ljmp
and
xchg
jecxz
add
aad
mov
test
aaa
add
addb
or
notl
movsl
cwtl
inc
add
ret
dec
mov
jo
adc
test
jns
ret
jnp
pop
hlt
mov
xor
push
add
clc
add
dec
add
sbb
aad
cmp
push
fcoms
and
dec
sbb
pop
and
cmpsb
xchg
cmp
pop
mov
add
push
ret
cmp
add
test
mov
cmp
js
call
xchg
sub
sub
insl
sub
jb
sbb
mov
flds
test
push
add
icebp
lcall
loopne
xchg
push
out
cmpsl
in
adcl
or
stos
ror
into
lret
iret
outsb
mov
push
add
daa
pusha
add
loope
fwait
sub
jl
add
add
sub
clc
loop
sub
add
add
ja
out
push
ret
cmpsl
test
add
pop
xor
mov
jecxz,pt
dec
fiaddl
sub
sbb
cmp
cmp
int
fisubs
add
lahf
sti
mov
sub
mov
sub
and
es
lods
out
imul
mov
add
and
add
ret
add
scas
dec
inc
push
jbe
add
or
cmpsl
leave
aad
inc
gs
imul
ds
xor
fcomps
and
movb
lock
jo
adc
or
xor
lock
dec
dec
or
mov
into
mov
cmp
jno
push
jne
push
stos
xchg
aas
mov
int
cltd
sahf
inc
add
mov
jnp
cli
cmp
mov
int3
pop
cmp
cmpsl
mov
ljmp
repz
movsb
lcall
sub
add
insl
out
fwait
sub
push
add
cmp
mov
add
jmp
add
arpl
mov
xor
fadd
add
inc
sub
pushf
mov
xor
jecxz
icebp
adc
xchg
push
fildll
inc
mov
cmpsl
arpl
aas
cmp
in
pop
xchg
in
push
das
enter
adc
add
aaa
nop
xlat
es
add
xchg
fisttpll
fisttps
mov
push
leave
mov
dec
cli
adc
call
test
imul
fstpt
add
add
std
divb
add
add
push
jl
outsb
pop
incb
sbb
mov
xor
into
mov
inc
add
xor
add
add
push
call
jg
aaa
clc
fxch
mov
mov
xchg
rolb
push
push
popa
in
out
dec
js
cmp
cwtl
xor
mov
and
dec
fisubrs
out
dec
mov
sets
jecxz
imul
xchg
jge
test
sub
fld
add
xor
sub
add
roll
add
inc
add
add
pushf
jp
pop
loope
popf
sbb
outsb
sar
xor
jmp
xor
xor
loop
add
ret
ret
or
add
adc
mov
or
push
fildl
jg
or
leave
dec
lds
jecxz
jo
outsb
jae
enter
lods
enter
ret
sbb
inc
add
hlt
sub
jp
popl
push
jbe
aad
jbe
jno
pop
pushf
pop
fisttpl
iret
adc
sbb
add
jge
dec
pop
push
mov
enter
dec
ja
add
ds
inc
add
out
add
adc
push
xlat
fdivs
add
stc
insb
ret
sub
push
inc
test
jp
nop
mov
cmovae
pushf
mov
mov
rcl
and
shlb
push
add
adc
enter
into
and
repnz
fwait
jne
dec
xor
add
scas
addb
push
mov
xchg
int3
and
mov
mov
dec
mov
mov
nop
dec
add
in
add
cld
insb
add
and
xchg
fdivrs
in
mov
mov
rcll
lcall
cmp
push
cmpsb
adc
sub
mov
inc
call
in
cmp
xchg
lods
and
mov
pop
in
pop
out
mov
stos
jbe
popf
frstor
int3
lahf
shl
sub
cli
adc
lock
icebp
loopne
inc
jmp
xchg
dec
inc
add
test
ret
push
jmp
and
pop
addb
add
add
mul
fiaddl
dec
jno
push
mov
imul
mov
pop
arpl
or
jo
lahf
jmp
adc
in
sub
test
lea
adc
fidivrl
and
aaa
shrl
ret
xor
sbb
lahf
bnd
movsl
xchg
gs
xchg
divl
mov
adc
addr16
jne
mov
cltd
xor
add
cli
test
mov
dec
or
addr16
rolb
leave
sub
ja
and
add
adc
int
and
sub
popf
jmp
das
push
pop
outsb
lea
pop
push
or
add
add
jmp
cmp
and
stc
mov
addb
subl
ja
rorl
xchg
bound
test
bound
sub
hlt
push
scas
sbb
popa
jne
jmp
stos
adc
add
lahf
das
scas
jecxz
into
sub
into
mov
xchg
ss
adc
int
mov
cwtl
and
fimuls
inc
dec
jns
nopl
stc
mov
ljmp
das
dec
pop
jbe
call
or
xor
add
jle
loopne
cmc
dec
mov
jno
add
or
dec
pop
cmc
divl
in
mov
add
add
int3
inc
out
lock
mov
sub
sti
fistps
mov
pop
mov
pop
popf
jns
insb
shll
shlb
and
mov
aaa
dec
arpl
movsl
mov
xor
dec
ljmp
add
xchg
lcall
fmulp
jbe
and
ret
out
lret
nop
out
inc
add
imul
push
jmp
add
add
jge
nop
addb
test
and
xchg
cmp
xchg
jecxz
and
and
add
aaa
sbb
xchg
pusha
add
and
jb
add
or
popf
cmp
loopne
mov
lods
inc
sahf
xchg
ret
mov
lods
flds
add
dec
sub
mov
push
fstpl
add
lds
jmp
add
fbstp
mov
mov
test
je
movb
jo
mov
pop
sub
rcll
aad
iret
jl
xchg
adc
or
testl
cltd
jmp
xlat
jmp
sbb
adc
mov
inc
les
sahf
cmc
cmp
out
jg
add
fldenv
test
mov
pop
roll
mov
mov
ja
xchg
mov
bound
pop
into
stos
pop
adc
push
mov
mov
imul
add
push
mov
sbb
xor
dec
in
jecxz
in
pop
push
test
lods
test
bound
cltd
jl
and
sub
sbb
jns
mov
adc
movsb
or
mov
mov
lods
mov
lcall
push
cltd
imul
stos
mov
xlat
stc
cmc
cmp
pop
stos
mov
out
or
lds
mov
add
xchg
movsl
rorl
pop
hlt
inc
pop
test
and
inc
add
mov
andl
mov
test
gs
adc
popa
es
scas
or
pop
pop
cmpsb
fcoml
pusha
add
xchg
and
test
adc
cmp
add
add
repz
int
popf
push
sbb
mov
jo
jmp
push
cmp
inc
xor
cmpsb
mov
cwtl
jbe
mov
jne
sub
adc
pop
push
push
xor
push
cld
cld
sub
incb
addb
leave
test
sub
gs
neg
in
in
daa
cld
and
push
add
arpl
fadds
add
test
mov
outsl
add
xor
in
inc
add
addb
add
ret
adc
dec
fimuls
jge
aad
fwait
mov
popf
add
dec
cmp
add
mov
enter
popf
in
cld
cmc
outsb
xor
lea
dec
push
xor
mov
mov
add
add
cmpl
lret
je
mov
xor
ljmp
jmp
aam
sub
ljmp
ret
xchg
pop
mov
sub
lods
pop
mov
add
inc
add
xchg
or
push
cmp
pop
cmp
in
sbb
and
and
and
mov
addb
stos
dec
and
add
int3
cmp
jge
sbb
push
mov
pusha
add
jge
add
jecxz
pop
cld
inc
cli
mov
add
or
addl
mov
cmp
pop
add
dec
jns
imul
push
or
gs
pop
test
insb
push
iret
jo
mov
or
dec
dec
in
mov
or
rorl
subl
je
sub
or
mov
mov
push
jp
or
je
movsb
and
add
sarb
mov
inc
mov
and
into
ss
pop
push
mov
jb
push
inc
push
scas
cmp
xor
add
jae
rcll
sub
jecxz
sbb
dec
mov
out
add
inc
push
xor
nop
mov
push
mov
pop
call
daa
cwtl
movb
jl
jge
fldcw
sub
insb
scas
xor
lods
repnz
sub
loop
ljmp
add
dec
sbb
lods
outsb
and
and
xchg
mov
dec
neg
movsb
jae
mov
nop
in
sbb
addb
cmc
jb
scas
or
cmc
mov
sahf
out
cltd
mov
decl
lods
sub
fnstsw
xchg
out
dec
in
cmp
test
lods
add
in
popf
imul
cmp
jnp
adc
js
mov
push
insl
xchg
test
les
inc
add
lahf
in
push
lcall
xchg
ljmp
call
add
xor
pop
jle
fwait
adc
mov
fcomps
add
sbb
inc
add
dec
ret
lret
fisubrs
or
rolb
filds
insb
loopne
jae
jmp
outsb
inc
sbb
mov
addb
ja
mov
and
inc
adc
popa
cltd
mov
cmp
and
popf
in
imul
adc
rol
pop
jno
shl
fisttpll
imul
clc
mov
mov
xchg
nop
dec
outsb
mov
sbb
aad
push
ret
test
out
mov
pminsw
adc
dec
sub
mov
sti
mov
add
mov
int
test
daa
inc
add
call
ss
add
lcall
mov
leave
xor
xchg
pop
movsl
or
fld
cmp
cmp
test
adc
add
sar
jecxz
add
dec
addb
or
dec
fwait
push
cmpsl
jb
and
mov
add
loop
cwtl
pushf
int3
xlat
mov
fsts
and
dec
outsb
xor
test
add
mov
neg
cmpsb
ljmp
push
shlb
sbb
xchg
insl
outsl
xchg
je
cmp
out
or
sub
lock
test
aad
push
mov
push
xorl
fcompp
pop
rolb
xchg
add
xchg
mov
push
jb
adc
mov
push
ljmp
xchg
daa
sub
mov
xchg
jmp
lahf
sub
out
mov
jp
sub
out
incl
lcall
cmpsl
jbe
aaa
addb
repz
and
sub
les
adc
add
push
push
test
add
sub
bound
shll
jecxz
add
subl
addb
out
dec
lcall
roll
cltd
cld
add
rep
loope
jge
pop
fimull
sbb
dec
jno
sbb
jl
jge
pop
call
cmc
lock
jae
rorl
mov
enter
add
out
lock
add
pop
sti
xchg
repz
out
ficomps
cmp
add
into
jnp
in
test
pop
mov
call
lods
dec
call
pop
xchg
xchg
cs
cs
cmp
stc
sbb
icebp
scas
cmp
or
aaa
push
mov
dec
inc
add
or
cld
insl
push
push
jo
push
jmp
out
xor
fisubs
add
scas
adc
mov
and
cmp
sub
mov
dec
mov
jge
mov
test
add
jne
cwtl
lock
xor
lret
fcomps
jae
inc
push
sbb
add
xor
add
push
mov
add
and
imul
pop
negl
std
and
add
sbb
jmp
xchg
mov
push
add
jle
and
stos
notb
lods
push
mov
adc
pop
std
das
mov
fcmovnb
adc
cmp
insb
and
cmp
push
push
add
pop
les
adc
xor
hlt
push
jns
mov
jnp
repnz
cwtl
jle
add
aas
dec
xchg
jg
scas
lea
ja
add
adc
rorl
test
push
bound
xchg
popa
xor
and
inc
add
sbb
jg
in
cli
jb
mov
sub
mov
gs
add
cmp
and
jg
int3
add
ror
sbb
jecxz
pop
out
test
stc
int
dec
popf
lret
add
aaa
or
mov
sbb
jb
ss
sbb
aaa
xchg
xchg
push
inc
xor
lcall
popf
mov
and
cmp
jmp
incl
jnp
sub
xor
and
adc
mov
xor
dec
decb
xor
lret
or
inc
add
fisubs
add
push
fisubrl
add
lea
xchg
mov
mov
sbb
pop
pop
ret
ret
or
scas
xchg
mov
mov
clc
mov
add
mov
lahf
jp
jno
or
gs
add
aas
push
lods
rcpps
test
jbe
push
jp
lahf
movl
add
fs
add
insb
push
mov
xchg
sub
ja
dec
xchg
frstor
pop
xor
add
dec
js
lcall
mov
paddb
icebp
xchg
mov
roll
enter
xchg
js
call
and
mov
push
cmp
or
cmp
mov
fucomp
adc
gs
push
clc
dec
add
dec
cmpsb
cld
popf
das
xchg
mov
test
ljmp
add
pusha
add
push
or
out
xor
rcrl
jb
daa
cmp
sahf
cmp
mov
xchg
sub
call
addb
add
add
scas
mov
sub
out
add
mov
mov
aad
xchg
out
add
pop
filds
scas
scas
cmp
out
pop
jecxz
paddb
xchg
insb
xchg
leave
std
clc
pop
sub
ja
test
mov
xor
cmp
fs
addl
movsb
out
sub
pusha
add
push
sub
pusha
add
int3
arpl
xchg
pop
cmp
pop
iret
idivl
adc
bound
movb
inc
add
jb
mul
adc
add
lret
out
mov
ss
loop
arpl
add
sub
cmc
xchg
loop
out
and
movsl
stos
lret
int3
pop
push
insl
dec
inc
mov
out
dec
div
xchg
cltd
push
fsubl
xlat
dec
mov
xchg
sub
inc
push
jg
push
sub
and
lcall
adc
loope
pop
in
jg
test
out
jno
sti
sub
arpl
mov
lea
stc
ja
add
icebp
fisubrs
test
imul
inc
addl
push
add
out
add
stos
aaa
in
and
pop
repnz
jp
jae
add
stc
mov
cld
mov
xchg
jne
cltd
mov
push
cmp
mov
call
cwtl
addr16
ds
push
jo
lods
push
xchg
mov
add
and
add
gs
je
and
adc
fucomip
dec
push
mov
nop
aaa
xchg
push
xchg
cmp
iret
ret
fwait
sub
add
and
mov
loope
decl
jmp
jl
outsb
inc
add
decb
and
addl
icebp
adc
mov
repz
add
dec
cmp
dec
or
mov
mov
std
bound
xor
in
push
adc
das
mul
filds
movb
insb
inc
aas
xchg
sbb
mov
pop
dec
das
cmpsb
aas
ja
or
push
mov
add
xor
mov
cltd
insl
mov
dec
lea
inc
add
mov
es
adc
outsl
inc
add
es
xchg
test
push
xlat
push
or
fmull
push
pop
out
push
mov
xor
sahf
ss
push
in
mov
and
dec
mov
xor
cmp
pop
nop
test
mov
cmp
loope
add
pop
ficoml
fisttpl
pop
out
xor
pop
xchg
lahf
jg
repz
lods
sub
and
mov
cs
testb
das
cltd
bound
int3
stc
jg
fwait
xchg
push
addb
jns
xchg
push
jle
scas
sub
cmpsl
mov
sbb
push
add
repnz
add
sub
add
or
xchg
lods
adc
in
mov
inc
ljmp
pop
adc
aam
js
mov
pop
jmp
into
cmc
dec
fldt
outsb
and
lds
dec
scas
in
mov
add
call
and
icebp
inc
add
out
test
sbb
mov
jp
add
adc
xor
call
shrb
rolb
push
inc
sti
and
jge
and
inc
add
addb
ss
add
js
pop
adc
fwait
seto
add
scas
dec
mov
xor
pop
aad
add
lods
enter
fistpll
xor
jl
scas
mov
fnsave
xchg
mov
outsl
push
sub
cmc
cli
mov
movsb
fucomi
push
or
lods
mov
scas
push
add
adc
dec
add
gs
mov
pop
daa
lret
push
sti
push
add
pop
cmc
mov
icebp
lods
mov
xchg
fucompp
shll
jbe
xchg
int3
enter
jecxz
mov
stos
icebp
int
mov
push
mov
xchg
movsl
jecxz
xchg
or
add
mov
xchg
xor
add
mov
and
lahf
cmc
nop
xchg
test
cmp
add
dec
scas
cltd
xchg
inc
add
iret
push
ret
mov
cmp
sub
add
xchg
mov
sub
insb
aas
popf
dec
lret
lret
les
ret
mov
add
aad
add
jnp
adc
das
lds
mov
mov
dec
shrl
lret
inc
add
loope
cmpsb
inc
add
mov
xor
sub
icebp
lret
sti
insb
ljmp
dec
adc
test
add
adc
dec
pushf
aas
pop
test
jno
cmc
mov
add
pop
push
push
push
add
xchg
arpl
into
push
arpl
add
addb
mov
add
sti
adc
movsl
add
imul
xor
mov
adc
cs
add
out
faddl
jbe
add
loop
add
push
sub
cs
pusha
add
aam
xor
xchg
jle
xchg
test
and
ret
mov
loopw
movb
dec
mov
mov
dec
shll
xchg
int
add
in
push
std
movsb
jle
adc
mov
fisubrs
out
or
fidivs
aaa
shr
int
add
int
or
pop
mov
call
jae
adc
add
gs
jecxz
ds
in
outsl
adc
movb
xchg
jae
fidivs
mov
cltd
je
add
aas
clc
movb
xchg
lds
repnz
and
lahf
jp
jno
and
fdivrl
push
aas
les
ficomps
jns
mov
adc
decb
nop
sub
xchg
ret
dec
movsb
addb
rorl
jecxz
idivb
fnsave
and
pop
in
imul
and
mov
cld
or
add
pop
jns
and
movb
pop
or
push
mov
pop
notb
ss
cmpsb
jns
fs
loop
fdivrs
adc
dec
or
arpl
jge
add
std
out
flds
or
xor
in
mov
sub
lcall
fldcw
ss
cmp
int
add
jle
push
add
mull
lods
xchg
xchg
orl
inc
mov
mov
pop
jge
in
jbe
pop
inc
add
add
mov
std
sbb
lds
mov
push
mov
nop
ds
push
jbe
loop
test
mov
mov
in
test
lret
mov
add
fwait
fwait
adc
aaa
push
movb
loopne
mov
call
or
adc
loope
dec
adc
inc
add
arpl
aaa
xor
out
imul
add
enter
in
inc
add
movsl
or
fnstenv
insb
dec
ss
dec
push
js
push
les
cli
test
inc
add
ret
fadds
xchg
ss
sbb
push
dec
cmp
cltd
pusha
add
shl
push
int3
mov
lock
adc
jl
fistl
fadd
add
pop
out
aad
movsl
cs
push
add
jae
sbb
and
mov
jmp
sbb
sti
pop
inc
add
movsl
movsb
pop
repnz
push
flds
push
dec
or
hlt
lea
or
out
lahf
dec
in
push
mov
sub
pushf
inc
add
cmp
and
mov
rorb
les
insl
dec
mov
aad
xor
jge
cs
mov
xor
dec
pushl
adc
mov
inc
add
sarb
mov
sub
addb
stos
adc
cmp
fidivrs
or
cli
sbb
cwtl
or
add
jle
mov
sbb
and
xchg
mov
aaa
test
sub
add
sbb
jb
loope
inc
inc
enter
mov
cmc
adc
in
inc
mov
push
add
imul
pusha
add
fcoms
js
data16
sbb
iret
stc
mov
mov
jns
mov
in
adc
sub
cmp
les
lods
mov
rcrb
mov
xchg
or
daa
xor
cmp
iret
xchg
shrb
popa
rolb
pop
add
fmull
popf
test
add
cmpsb
leave
sbb
mov
mov
push
add
mov
jmp
out
adc
pop
jne
mov
adc
mov
jg
adc
push
daa
cli
shlb
pop
push
jg
mov
mov
jl
pop
inc
xchg
jne
ret
mov
sub
lds
and
inc
add
in
mov
rcrb
lea
bound
and
fidivrl
add
add
add
pushf
mov
push
rol
out
rolb
cli
or
add
in
push
and
inc
xchg
into
xor
add
add
daa
icebp
jnp
adc
mov
cmpsl
lcall
push
and
ljmp
jnp
inc
add
add
mov
mov
sub
xor
add
mov
push
ds
stc
jb
cwtl
add
add
push
test
push
test
jecxz
add
cmovbe
addb
jne
stc
jb
mov
je
sub
lahf
testb
sub
ret
data16
sbb
rcll
add
add
inc
fisubl
jb
add
negb
jmp
mov
fldl
add
das
test
stc
jb
add
add
jne
stc
jb
add
add
add
nop
jmp
call
add
rcl
movsl
or
sar
cmp
add
add
popa
loope
in
aas
movzwl
stc
jb
mov
add
mov
nop
jmp
jmp
add
mov
cld
add
mov
adc
jb
in
add
mov
xchg
dec
add
stc
jb
add
pop
add
stc
jb
dec
popa
in
mov
leave
stc
jb
mov
mov
xchg
sbb
decl
nop
jmp
add
add
punpcklwd
dec
cmp
mov
xchg
ret
roll
sti
and
push
mov
xchg
ret
add
add
rcll
mov
clc
add
into
mov
stc
jb
loope
add
add
and
lret
push
stc
jb
add
data16
loope
test
inc
fucompp
cli
pop
add
nop
jmp
add
add
mov
jmp
add
mov
int3
mov
add
stc
jb
add
add
stc
jb
push
or
cli
clc
mov
add
fldt
stc
jb
clc
in
add
add
add
jb
sub
jb
mov
sbb
pop
add
andb
add
clc
add
add
add
xchg
stc
jb
or
add
add
sbb
adc
add
add
add
sarl
add
popa
add
jb
mov
add
add
push
nop
jmp
sub
adc
mov
iret
add
inc
push
hlt
inc
jno
pop
push
mov
xchg
ret
testb
add
dec
pop
stc
jb
add
add
adc
add
jecxz
aam
mov
stc
jb
popa
dec
add
imul
stc
jb
add
sahf
in
add
jb
mov
cbtw
data16
clc
stc
jb
add
data16
add
add
in
inc
add
arpl
push
mov
cmpsb
xchg
std
xor
stc
jb
verr
cmc
mov
rep
stc
jb
add
mov
add
sbb
mov
mov
aas
mov
add
sbb
xor
test
sub
out
add
cmp
sti
add
add
add
nop
add
jmp
stc
jb
add
or
mov
push
mov
xchg
ret
sub
movb
mov
xchg
ret
ds
frstor
mov
loop
push
mov
xchg
ret
add
popf
and
popl
pop
add
add
xchg
add
incl
loope
mov
stc
jb
add
adc
add
inc
add
add
mov
stc
push
push
mov
xchg
ret
iret
xchg
cli
jl
rclb
add
add
xor
add
add
mov
add
add
cli
sahf
sbb
adcb
add
int3
add
mov
mov
stc
jb
roll
add
iret
rcll
add
nop
jmp
fldl
xchg
mov
out
add
push
mov
xchg
ret
add
push
push
mov
xchg
ret
loope
add
mov
lds
mov
stc
jb
iret
add
add
inc
add
add
mov
sub
add
sahf
incl
mulb
jo
sbb
jae
jb
jb
add
add
rolb
es
stc
jb
add
mov
xchg
ret
add
add
mov
stc
jb
add
add
int3
lea
push
mov
xchg
ret
xchg
clc
movsl
dec
jne
stc
jb
add
add
mov
sbb
add
add
arpl
add
clc
cmp
nop
jmp
add
loope
add
jmp
add
data16
jns
loope
push
imul
jl
stc
jb
add
add
jo
je
stc
jb
jo
sahf
mov
ret
nop
jmp
iret
push
aas
add
add
add
fimuls
addb
add
add
jb
add
adc
add
mov
add
sar
jmp
add
add
nop
jmp
add
popf
dec
add
arpl
nop
jmp
adc
adc
add
mov
adc
inc
add
call
jge
stc
jb
je
je
add
iret
and
stc
jb
add
add
mov
stc
jb
popf
add
push
mov
add
add
lods
jge
and
adc
xor
mov
xchg
ret
push
popf
testb
jb
rcrl
testl
jb
sbb
dec
pusha
push
mov
xchg
ret
in
cld
add
nop
jmp
push
add
push
mov
xchg
push
jmp
stc
jb
clc
popf
add
cs
nop
jmp
add
add
roll
adc
cld
movsl
sub
mov
xchg
ret
mov
sbb
mov
jb
jmp
cli
sub
stc
jb
jo
int3
jb
xor
daa
insl
pop
push
mov
xchg
ret
sbb
mov
add
add
andb
cld
add
das
mov
push
dec
mov
nop
jmp
mov
add
jns
dec
sub
jb
add
cwtl
add
je
stc
jb
add
jmp
add
mov
dec
nop
adc
mov
inc
add
cmpl
nop
jmp
add
add
add
stc
jb
popa
add
add
and
jb
add
add
decl
jb
add
add
xchg
push
in
frstor
jb
jns
lcall
mov
mov
stc
jb
mov
loop
fucomi
into
sbb
add
incl
data16
or
push
mov
xchg
ret
mov
mov
nop
jmp
add
shll
dec
and
push
mov
xchg
ret
in
cld
shll
add
incl
add
add
xchg
add
push
mov
xchg
ret
add
sbb
call
add
add
jb
rclb
mov
call
stc
jb
add
sar
jb
sar
iret
in
das
add
stc
jb
add
add
iret
adc
jae
cltd
rep
stc
jb
rcll
dec
add
or
add
nop
jmp
add
add
call
stc
jb
add
add
lea
nop
jmp
add
clc
add
add
ja
mov
nop
jmp
add
cmp
xor
add
stc
jb
decl
push
loope
test
stc
jb
add
nop
push
add
popa
popa
mov
nop
jmp
pop
mov
add
add
add
jb
add
les
add
and
add
adc
jb
mov
pop
popa
addr16
je
add
push
mov
xchg
ret
add
add
mov
stc
jb
add
sahf
sahf
sahf
mov
andb
add
add
add
add
ja
pusha
add
push
mov
xchg
ret
mov
and
add
test
or
decl
xchg
mov
add
jge
jb
add
pop
cs
stc
jb
cmp
call
movsl
adc
add
add
stc
jb
add
pop
mov
stc
jb
add
loope
adc
lods
push
mov
xchg
ret
add
mov
xchg
push
mov
xchg
ret
add
add
imul
stc
jb
dec
inc
add
jne
stc
jb
add
enter
jo
add
xchg
je
cwtl
cld
adc
mov
iret
out
add
mov
add
push
mov
xchg
ret
mov
adc
icebp
daa
jo
rolb
mov
stc
jb
add
add
jmp
data16
add
add
xchg
aaa
pop
jne
stc
jb
add
add
mov
stc
jb
add
add
imul
add
mov
stc
jb
add
sarl
je
stc
jb
add
add
test
push
mov
xchg
ret
add
data16
push
stc
jb
add
mov
mov
stc
jb
add
add
add
roll
and
call
stc
jb
mov
add
add
nop
jmp
mov
int3
add
je
adc
clc
inc
add
mov
push
nop
jmp
add
or
add
add
in
inc
add
add
xchg
dec
mov
push
mov
xchg
ret
in
cli
add
jnp
test
add
pop
add
inc
add
jae
push
stc
jb
add
mov
mov
nop
cs
push
mov
xchg
ret
rorl
add
cmp
adc
incl
loope
or
rcll
sahf
add
stc
jb
mov
mov
mov
nop
jmp
paddsw
add
lock
cmp
push
clc
inc
add
arpl
pop
test
nop
jmp
movb
add
sbb
push
mov
xchg
ret
add
dec
xchg
adc
add
nop
jmp
add
loope
popf
add
push
addb
add
in
add
push
push
mov
xchg
ret
decl
add
mov
xchg
ret
sahf
mov
sbb
add
jb
xchg
xchg
cmpl
sbb
add
push
popf
jns
test
jb
add
adc
out
inc
add
add
mov
add
and
lcall
jb
add
add
add
mov
repz
mov
push
mov
xchg
ret
push
cld
mov
popf
nop
jmp
mov
add
jo
mov
pop
call
stc
jb
add
add
jbe
call
stc
jb
mov
mov
stc
jb
add
pushf
push
stc
jb
dec
adc
add
mov
cli
js
mov
push
stc
jb
add
add
add
add
and
adc
and
stc
jb
aas
call
jae
call
nop
jmp
add
cmp
imul
pop
add
das
add
fstpl
add
nop
jmp
add
mov
add
es
lahf
jne
stc
jb
add
add
mov
xchg
ret
jns
add
test
nop
jmp
popf
add
das
dec
add
add
sbb
add
add
push
addb
addb
pop
je
nop
jmp
adc
add
adc
sub
ret
mov
add
scas
mov
stc
jb
add
fnsave
inc
add
and
stc
jb
mov
add
add
mov
stc
jb
pop
sahf
add
mov
cmc
stc
inc
add
mov
sbb
add
adc
inc
add
jo
cld
repz
push
pop
add
mov
add
nop
in
test
nop
jmp
add
nop
cwtl
add
add
jb
mov
add
mov
add
stc
jb
add
xchg
inc
push
mov
xchg
ret
add
cli
jmp
stc
jb
cmp
loope
imul
add
add
sbb
aas
stc
jb
add
add
xchg
add
outsb
push
mov
adc
mov
xor
add
stc
jb
mov
push
stc
jb
shll
rolb
shl
xor
adc
jb
dec
add
lods
push
mov
xchg
ret
add
jns
adc
add
stc
jb
add
mov
xor
add
stc
jb
fldl
mov
push
push
mov
xchg
ret
add
cmp
mov
add
jb
add
cmc
scas
push
nop
jmp
add
cwtl
add
add
rcl
jmp
jne
push
mov
xchg
ret
add
stc
jb
add
add
add
mov
xorb
add
xchg
add
xchg
mov
mov
xchg
ret
add
push
incl
int
outsl
arpl
stc
jb
xchg
mov
add
jb
dec
pop
adc
mov
stc
jb
add
inc
addl
out
pop
nop
jmp
loope
data16
add
nop
jmp
fstl
mov
call
stc
jb
mov
add
or
stc
jb
shrl
mov
jb
mov
mov
aas
add
nop
jmp
xchg
adc
add
test
and
mov
stc
jb
add
sbb
add
xor
inc
or
jb
xadd
in
movb
into
popa
stc
jb
dec
iret
testb
mov
jb
add
add
add
add
add
stc
jb
or
mov
add
add
add
popa
add
movzwl
stc
jb
mov
mov
mov
jb
loope
add
cwtl
add
push
push
mov
xchg
ret
iret
add
push
add
jb
add
add
or
inc
sbb
add
xchg
popf
dec
mov
stc
jb
sahf
sub
sarl
rclb
roll
inc
add
add
inc
ret
add
mov
stc
jb
rolb
add
inc
iret
add
stc
jb
push
add
mov
nop
jmp
adc
stos
nop
jmp
add
add
add
add
xlat
xchg
pop
xor
stc
jb
cli
roll
insl
mov
nop
jmp
add
aas
add
stc
jb
add
loop
add
and
push
mov
xchg
ret
add
loope
and
nop
jmp
nop
arpl
mov
add
push
ss
orb
rorl
mov
stc
jb
add
imul
adc
mov
add
mov
stc
jb
callw
add
mov
cmpb
add
cli
add
mov
nop
jmp
add
mov
adc
sbb
jb
pop
cmp
stos
xor
stc
jb
mov
add
je
mov
test
push
mov
xchg
ret
add
add
dec
loopne
add
add
add
push
jnp
outsl
arpl
add
jb
add
inc
and
jb
mov
mov
stos
nop
jmp
add
add
add
sub
add
stos
push
stc
jb
add
add
adc
push
push
mov
xchg
ret
mov
and
and
add
roll
das
cs
push
mov
xchg
ret
xchg
jo
add
inc
daa
loope
jne
stc
jb
add
add
push
stc
jb
add
sub
push
add
sbb
mov
push
mov
xchg
ret
add
mov
inc
cmp
jb
add
mov
add
sub
push
mov
xchg
ret
dec
add
add
stc
jb
jo
loope
add
data16
add
push
mov
xchg
ret
mov
add
mov
stc
jb
add
dec
add
stc
jb
add
mov
loope
loop
int3
imul
stc
jb
add
lock
add
stc
jb
add
div
stc
jb
mov
inc
ljmp
cli
jmp
dec
sbb
add
jns
add
jb
aas
dec
mov
add
jb
add
add
sbb
test
jb
add
add
add
jb
add
call
push
mov
xchg
ret
mov
call
or
nop
jmp
adc
sub
push
push
mov
xchg
ret
push
sahf
je
adc
add
push
mov
xchg
ret
das
add
das
lea
stc
jb
mov
add
fldl
xchg
ret
add
sahf
add
push
inc
add
and
jb
shll
int
push
mov
xchg
ret
pop
mov
in
popf
dec
popa
stc
jb
dec
xchg
add
push
sbb
adc
inc
add
cld
add
dec
clc
dec
inc
stc
jb
add
mov
push
mov
xchg
ret
adc
add
adc
stc
xor
push
mov
xchg
ret
dec
roll
stc
shr
stc
jb
add
jl
jg
stc
jb
iret
add
add
stc
jb
in
add
in
xchg
add
push
xor
pop
stc
jb
sarl
pop
xchg
fmuls
orb
dec
add
add
stc
jb
rorb
fcoml
in
add
mov
add
jb
mov
sahf
adc
inc
fmuls
test
add
stc
jb
add
push
mov
push
mov
mov
and
mov
movsl
aam
mov
stc
jb
add
push
rorb
mov
nop
jmp
add
add
je
aad
cmp
cltd
out
incl
das
mov
push
stc
jb
or
cli
loope
push
sub
arpl
push
stc
jb
add
add
jno
ja
add
cmc
lock
push
mov
xchg
ret
add
adc
jb
cmp
add
loop
je
nop
jmp
call
mov
call
incl
add
add
adc
mov
push
mov
xchg
ret
add
int3
inc
lcall
jmp
mov
cmpsl
js
lret
stc
jb
xchg
mov
add
add
sar
addb
add
add
in
add
mov
outsb
je
nop
jmp
arpl
add
frstor
popa
add
mov
xchg
ret
fisttpll
dec
cmp
jmp
rolb
mov
fs
push
nop
jmp
add
add
add
je
stc
jb
inc
nop
add
or
out
cmc
pushl
rcll
dec
nop
jmp
dec
adc
mov
xchg
jecxz
and
add
jmp
loope
cmp
cmp
dec
stc
stc
jb
add
add
or
xor
add
stc
jb
mov
cmp
add
imul
aam
out
add
dec
push
stc
jb
add
add
mov
and
nop
jmp
add
pop
xchg
dec
xchg
pop
cmpw
stc
jb
jo
add
fmuls
fiadds
xchg
ret
cld
add
add
mov
stc
jb
add
cli
loope
sbb
test
push
mov
xchg
ret
clc
add
cmp
or
add
ds
arpl
sarl
add
stc
jb
add
sarl
enter
addb
mov
add
stc
jb
in
add
add
lods
nop
jmp
add
sahf
add
add
dec
adc
jb
arpl
inc
add
jo
test
mov
stc
jb
sbb
mov
mov
xchg
ret
call
aas
je
or
gs
outsb
stc
jb
adc
popf
add
pop
push
push
mov
xchg
ret
mov
mov
mov
stc
jb
add
add
push
mov
xchg
ret
pop
xchg
rolb
shll
call
add
add
iret
dec
stc
jb
add
add
add
xchg
mull
or
add
jb
in
add
add
mov
xchg
ret
rclb
xlat
iret
push
stc
jb
add
cli
call
ds
nop
jmp
aas
add
jo
add
add
cld
movzwl
stc
jb
add
mov
jne
nop
jmp
in
add
cmp
adc
jmp
push
cli
add
loopne
jne
stc
jb
add
in
sub
stc
jb
roll
adc
add
dec
mov
nop
jmp
add
clc
add
popa
imul
add
clc
add
rolb
add
ds
stc
jb
add
mov
push
push
mov
xchg
ret
add
xchg
pop
push
push
mov
xchg
ret
roll
add
in
adc
push
mov
xchg
ret
jo
testb
outsl
cld
push
mov
xchg
ret
dec
add
push
add
mov
stc
jb
add
add
mov
add
sub
add
inc
inc
mov
imul
incl
add
add
popa
dec
mov
push
mov
xchg
ret
popa
in
add
test
iret
or
clc
jmp
mov
adc
inc
stc
jb
popf
mov
loope
ret
nop
jmp
sbb
incl
call
push
mov
xchg
ret
not
mov
stos
and
nop
jmp
push
add
xchg
push
pop
call
stc
jb
call
mov
push
mov
xchg
ret
iret
add
cli
rcrb
and
add
sub
loope
loope
pop
push
mov
xchg
ret
add
add
jb
add
xchg
add
add
add
nop
jmp
nop
psrlw
mov
push
mov
xchg
ret
add
add
stc
jb
inc
inc
clc
add
leave
mov
stc
jb
mov
mov
ror
push
mov
xchg
ret
das
add
sar
rep
stc
jb
adc
add
jns
pop
pusha
stc
jb
add
add
add
mov
nop
jmp
add
popa
loope
cmpw
nop
jmp
xchg
xchg
add
add
add
int3
call
stc
jb
dec
cld
mov
stc
jb
add
add
add
icebp
nop
jmp
pop
je
add
popa
add
mov
stos
notl
ljmp
roll
push
stc
jb
add
incl
push
stc
jb
add
add
nop
jmp
adc
adc
add
push
nop
jmp
mov
adc
loope
mov
shr
nop
jmp
int3
mov
add
add
stos
jmp
stc
jb
data16
mov
and
jb
loope
add
dec
mov
push
stc
jb
cld
add
add
movb
mov
incl
add
add
add
dec
testl
nop
jmp
add
add
cmp
pop
repnz
add
mov
inc
adc
jmp
add
add
add
jne
push
mov
xchg
ret
add
jns
add
push
mov
xchg
ret
inc
add
jge
stc
jb
sahf
sbb
add
stc
jb
mov
jo
dec
pop
scas
xor
stc
jb
or
rcrl
ret
nop
jmp
das
mov
add
add
add
pop
inc
mov
push
mov
xchg
ret
add
cmc
dec
xor
push
mov
xchg
ret
sbb
pop
stc
jb
add
data16
popa
add
push
pop
add
push
mov
xchg
ret
add
xchg
xchg
mov
push
mov
xchg
ret
cmp
or
jb
add
add
add
repnz
jb
add
lcall
mov
stc
jb
add
rolb
jb
mov
adc
add
mov
rclb
shl
inc
add
das
cwtl
add
shrb
jb
add
pushf
mov
push
mov
xchg
ret
test
ret
xchg
jns
mov
nop
jmp
dec
add
jns
sar
adcb
add
frstor
add
sar
jb
arpl
add
mov
nop
jmp
xchg
shl
mov
mov
iret
jmp
stc
jb
mov
leave
push
nop
jmp
cli
call
adc
inc
add
push
mov
add
add
add
jg
movb
jb
arpl
imul
iret
das
jl
or
stc
jb
add
pop
aas
pop
shl
push
mov
xchg
ret
incl
add
stc
jb
data16
add
stc
jb
mov
add
add
jecxz
jg
jne
push
mov
xchg
ret
iret
add
addr16
mov
push
mov
xchg
ret
mov
test
nop
jmp
sar
add
fsubl
popa
add
jmp
mov
adc
fstpl
or
pop
stc
jb
xchg
push
add
ss
rep
nop
jmp
add
add
sahf
add
cmp
cli
incl
xchg
add
add
add
je
add
nop
jmp
roll
add
das
add
stc
jb
str
int3
loop
and
push
mov
xchg
ret
push
cmp
jb
or
add
stc
jb
clc
add
aas
mov
add
add
add
jb
mov
add
loope
mov
push
mov
xchg
ret
add
add
cmc
hlt
pop
movzwl
stc
jb
add
sub
icebp
nop
jmp
add
add
add
add
cmp
stc
jb
add
push
mov
xchg
ret
popf
mov
xchg
add
dec
push
mov
xchg
ret
xchg
cli
rolb
insl
mov
stc
jb
add
add
add
adc
jb
add
add
in
add
test
jo
mov
push
mov
xchg
ret
add
add
mov
fildl
xchg
ret
arpl
in
roll
mov
stc
jb
in
arpl
push
stc
jb
negb
add
add
xchg
outsl
inc
push
mov
xchg
ret
xchg
add
loope
push
push
mov
xchg
ret
jo
clc
mov
push
stc
jb
arpl
pop
data16
sbb
sub
add
add
jb
in
add
inc
push
mov
xchg
ret
popf
add
cmp
jbe
incl
add
add
das
mov
ds
stc
jb
add
add
dec
sbb
push
lea
jmp
add
rorb
xchg
orl
incl
data16
nop
jmp
add
mov
mov
jmp
stc
jb
movb
sub
xor
add
stc
jb
add
lock
mov
xchg
ret
dec
sub
fwait
decl
stc
jb
add
add
add
stc
jb
sbb
add
js
ss
jb
sub
aas
mov
fstl
jb
add
add
movb
mov
clc
in
decl
adc
call
add
sbb
icebp
inc
add
popf
sbb
xor
add
add
jb
mov
cmp
cmpsb
fldl
xchg
ret
pushl
data16
shl
stc
jne
stc
jb
add
dec
push
push
mov
xchg
ret
mov
mov
add
call
stc
jb
cli
add
arpl
bswap
leave
lods
push
mov
xchg
ret
inc
clc
xchg
mov
and
or
repz
in
adc
add
add
das
call
nop
jmp
das
arpl
pushf
add
add
jb
adc
or
out
xor
stc
jb
adc
add
add
xchg
xor
push
nop
jmp
cwtl
mov
add
add
add
jb
sldt
jecxz
mov
stc
jb
sub
add
add
stc
jb
push
add
mov
stc
jb
or
add
add
add
sub
inc
add
cwtl
mov
dec
nop
jmp
add
add
add
mov
stc
jb
mov
add
decl
test
stc
jb
loope
add
cmpb
inc
add
aas
add
add
lds
dec
sub
jb
sbb
rolb
add
jle
push
mov
xchg
ret
add
sub
mov
sti
stc
jb
push
mov
imul
xchg
ret
add
jge
int
pop
jae
jmp
add
nop
mov
insb
insb
stc
jb
push
add
mov
nop
jmp
push
int3
sbb
mov
stc
jb
xchg
jp
icebp
stc
jb
mov
cmp
sbb
test
hlt
stc
jb
rol
mov
jb
add
jg
inc
and
nop
jmp
jo
add
loope
sbb
adc
incl
mov
fldl
roll
das
jmp
stc
jb
clc
cli
mov
adc
mov
fldl
xchg
ret
add
inc
int
push
mov
xchg
ret
mov
push
mov
stc
jb
add
xchg
aas
stos
push
mov
xchg
ret
add
fisttpll
add
jb
ud0
mov
std
push
mov
push
adc
add
add
add
aaa
adc
subb
add
sahf
add
push
push
mov
xchg
ret
adc
dec
mov
push
mov
xchg
ret
mov
pushf
cmpl
nop
jmp
add
xchg
xchg
adc
mov
jb
push
mov
xchg
ret
add
jns
decb
subb
call
popa
sbb
jmp
nop
jmp
add
add
jmp
add
add
int3
mov
loop
stc
jb
add
add
or
jne
nop
jmp
das
imulb
jns
data16
mov
stc
jb
add
mov
xchg
jno
test
fcoml
jb
add
add
iret
add
and
les
push
mov
xchg
ret
add
add
stc
jb
aas
add
or
add
jb
add
add
imul
jo
call
outsl
add
nop
jmp
xchg
data16
loope
add
or
pushl
adc
xchg
mov
push
stc
jb
mov
movb
or
loope
xor
stc
jb
fldl
aas
add
dec
stc
jb
add
add
push
push
mov
xchg
ret
add
add
arpl
sbb
in
add
add
add
inc
add
decl
out
inc
add
push
add
subb
incl
cmp
add
lock
loopne
stc
jb
add
add
test
add
add
roll
lret
nop
jmp
add
nop
dec
add
sub
push
mov
rcrl
mov
xchg
ret
mov
add
mov
stc
jb
nop
add
ds
or
push
push
mov
xchg
ret
dec
divb
rep
stc
jb
popf
add
add
je
jle
leave
sub
jb
mov
mov
jb
das
adc
add
roll
filds
jb
in
jo
das
add
rcrb
dec
or
jb
cli
mov
add
arpl
mov
dec
decl
add
int3
push
cli
xchg
push
out
mov
stc
jb
add
sldt
add
jb
add
stc
jb
add
add
bound
mov
push
add
int3
xchg
add
iret
ror
push
nop
jmp
add
add
add
sbb
mov
xchg
ret
in
mov
fisubl
nop
jmp
add
add
add
sbb
lahf
out
call
add
add
lea
jb
loope
clc
add
jmp
clc
add
je
add
add
cmp
jb
or
mov
jmp
idiv
jmp
call
jb
mov
add
add
jo
mov
das
push
stc
jb
pop
add
inc
stc
jb
add
add
xor
adc
orb
sbb
cmpsb
arpl
add
nop
jmp
add
add
inc
add
add
pushf
push
push
mov
xchg
ret
add
fisttpll
and
imul
sub
cli
popa
clc
pop
mov
stc
jb
add
mov
xor
add
nop
jmp
add
mov
add
stc
jb
add
nop
add
adc
je
nop
jmp
clc
mov
dec
add
stc
jb
data16
stc
jb
dec
mov
call
movsb
and
pop
nop
jmp
push
aas
add
add
add
add
push
nop
jmp
add
add
inc
add
mov
stc
jb
add
das
add
jb
mov
add
add
pop
push
mov
xchg
ret
iret
mov
add
mov
jb
int3
nop
movb
mov
addb
lea
stc
jb
nop
adc
add
nop
push
mov
stc
jb
cwtl
adc
add
add
stc
jb
add
add
add
add
shl
stc
jb
adc
xchg
popa
cld
add
jb
inc
add
call
popa
cli
stc
jb
movzwl
add
sar
jb
add
add
or
nop
pop
imul
stc
jb
mov
roll
add
add
push
mov
adc
rcr
add
rcll
add
add
adc
pop
mov
add
push
adc
ss
adc
xchg
xor
jno
call
pop
rorb
addr16
mov
xor
jp
push
jp
add
add
jle
xor
movb
pop
add
sub
or
sbb
add
push
sub
fisttpl
mov
dec
fildll
jl,pt
adc
addb
lock
ficomps
sub
insb
xchg
mov
add
aad
int
sub
movb
push
mov
add
scas
dec
insl
or
adc
xchg
cmp
dec
cmpsl
jns
loopne
push
add
data16
mov
mov
ret
mulb
roll
push
sbb
dec
test
mov
mov
lods
repz
and
and
mov
inc
add
mov
add
outsl
dec
jno
pop
xchg
out
pop
mov
ffree
dec
cmp
jl
xchg
and
ror
insl
fidivs
jnp
cmp
test
lods
mov
cs
and
sbb
loopne
mov
jg
mov
movb
in
out
hlt
dec
pop
inc
inc
jmp
add
int
lods
sub
or
lea
sahf
mov
inc
insl
lods
dec
mov
daa
repnz
rolb
add
pusha
add
mov
or
hlt
test
mov
dec
test
add
add
pop
cmp
iret
pop
push
dec
negl
jnp
and
sbb
cli
mov
inc
add
in
jg
insl
cmpsl
pop
cmp
xchg
lock
dec
jmp
inc
add
data16
adc
stos
push
add
xor
push
lcall
addb
jle
enter
mov
xor
add
pop
sub
or
cltd
in
xchg
addb
pop
mov
repz
xor
sarb
jl
add
repz
mov
out
in
jmp
pushf
mov
out
imul
mov
in
cmpsb
sub
dec
xor
add
fisubrl
hlt
inc
loopne
std
pop
lret
popf
lock
add
stos
cmovg
into
pop
xchg
int3
pop
jge
sti
sbb
dec
pop
add
testb
cmp
sub
pop
ds
mov
or
rolb
daa
in
sbb
idiv
cmp
xchg
xor
ret
lods
ljmp
mov
cmp
dec
addb
ds
pusha
add
mov
lods
ficompl
mov
push
xlat
xchg
sbb
mov
rcrb
roll
mov
xchg
fs
ljmp
jmp
jnp
mov
mov
xor
mov
les
jns
lds
adc
pop
mov
add
inc
dec
addb
data16
jne
add
rol
ljmp
jno
enter
repnz
cmpsl
add
or
fisubrl
pop
sbb
fwait
movsl
inc
add
mov
sahf
add
lcall
addr16
mov
add
add
mov
nop
and
out
sub
sub
xchg
adc
fmuls
push
cmp
add
repz
daa
in
hlt
movsl
jne
jl
in
lods
cmp
incb
scas
mov
js
jne
sbb
nop
fnstsw
cmp
mov
mov
cmp
dec
test
fcmovbe
lock
sbb
inc
mov
jbe
out
popa
and
jnp
mov
das
jle
add
jecxz
out
push
push
sbb
add
lahf
inc
add
icebp
push
movsl
xchg
jmp
shlb
out
add
loope
in
xchg
pop
in
jo
sbb
jno
add
cli
add
mov
xchg
fidivs
push
push
and
sub
jecxz
push
test
add
adc
les
jbe
or
in
add
inc
add
iret
out
test
loopne
push
cmc
pop
mov
test
nop
loop
fidivrs
xor
mov
mov
lods
orl
jle
movsb
lods
shrb
lret
sbb
pop
loope
push
lea
in
mov
es
add
sub
dec
iret
mulb
add
push
jg
add
cmp
pop
in
mov
jmp
in
jns
cs
pusha
add
ds
or
jmp
cmc
sub
jns
jge
push
cmc
add
fstp
loopne
pop
cmp
pop
ss
mov
rolb
movsb
in
nop
outsb
sub
repz
mov
cmp
dec
xor
cmp
pop
testl
xlat
mov
repnz
aad
xchg
aam
enter
jecxz
divl
insb
movsb
shrb
fs
lret
subl
cmp
fldt
mov
cs
mov
jnp
addr16
add
pop
inc
add
imul
ljmp
pop
pusha
add
jbe
mov
and
mulps
sbb
loope
fs
out
mov
xor
fisubrs
cmc
sti
movsb
ja
sub
fisttpll
pop
lret
lock
popa
imul
sub
add
pop
out
pop
xchg
addb
inc
add
cld
add
and
mov
add
stc
xor
pop
jmp
and
icebp
dec
movb
jae
lret
add
xor
add
fidivrs
sbb
xchg
iret
or
mov
add
lea
inc
add
dec
inc
movb
dec
sub
push
mov
jns
aad
xchg
add
neg
bound
or
adc
stc
mov
add
adc
sbb
das
addb
and
xor
mov
lret
in
mov
stos
jecxz
shlb
add
xor
ss
gs
imul
out
mov
sub
add
pop
or
mov
outsl
dec
mov
add
adc
dec
inc
dec
push
xchg
mov
gs
fldcw
or
pop
pop
push
sbb
jne
add
push
subl
loop
test
imul
sbb
add
push
cmp
hlt
cmpsb
jmp
scas
adc
xchg
mov
outsl
addb
add
add
push
mov
pavgb
aaa
cmp
negl
mov
pop
in
lcall
movsl
inc
add
gs
adc
outsl
jmp
movsb
mov
lret
addb
add
test
cmpsl
dec
xor
mov
add
jecxz
jmp
scas
aas
mov
fmull
out
shll
add
push
daa
fldenv
and
mov
outsb
enter
fdivs
jb
scas
movb
out
pop
movsl
or
push
sbb
mov
imul
loopne
add
mov
dec
dec
xchg
xchg
call
sbb
sbb
sbb
jge
jg
push
add
cwtl
popf
jge
add
push
xchg
or
add
rcll
rolb
pop
pcmpeqd
inc
int
cmp
mov
add
ret
out
adc
pop
cmp
das
xor
loop
sub
or
addb
and
add
cmpsb
fbstp
sub
add
notb
cmp
add
xchg
xor
add
sbb
loop
fidivrl
cwtl
push
iret
ja
add
add
pusha
add
pop
pop
lahf
bound
add
push
aas
pop
pusha
add
xchg
push
pop
push
or
push
add
icebp
rcrb
mov
jb
push
add
or
repz
mov
shl
daa
aaa
mov
sahf
xlat
scas
es
loop
add
jecxz
sbb
cmp
arpl
js
add
jle
aam
das
out
cld
mov
stc
cmc
or
pop
sbb
adc
arpl
mov
pop
adc
xchg
ja
cmp
jne
fidivrl
add
add
scas
mov
enter
sub
and
jb
jbe
and
mov
add
cs
cmpsl
cwtl
push
xchg
fwait
test
adc
mov
mov
sub
lahf
ljmp
stc
xchg
mov
sub
xacquire
jne
push
sub
mov
js
stc
fists
inc
cltd
sahf
jo
cltd
pop
jae
sub
add
add
xchg
xchg
xchg
mov
cmp
xor
or
std
lods
loopne
jne
in
dec
and
push
out
push
mov
sub
add
push
xor
pop
decb
xor
jb
das
push
rolb
inc
add
scas
push
jmp
or
add
aas
dec
fdivs
adc
imul
out
popa
sti
les
scas
sub
cmp
insb
pop
dec
or
mov
inc
add
scas
inc
add
or
pop
and
jne
add
or
inc
add
arpl
or
or
sbb
lret
stos
pop
gs
iret
cmc
dec
cmp
add
out
mov
mov
add
dec
mov
push
nop
xor
movsl
mov
imull
add
add
xchg
lcall
ja
out
inc
add
adc
rcrl
rolb
mov
cmpsb
xchg
negb
xchg
aam
mov
loopne
jge
lea
mov
xor
lahf
pop
out
jl
jge
jl
fdivl
and
insb
test
scas
int
hlt
data16
repz
push
mov
cld
orl
xor
divl
sbb
mov
inc
adc
insl
cltd
add
cmp
js
fnsave
popa
mov
push
ds
popf
and
loope
incb
cli
insb
mov
lods
pop
push
adc
sbb
sub
cmpsb
mov
mov
push
ja
jge
cmc
int
jge
cwtl
mov
jns
outsb
popl
xor
jae
jnp
clc
aas
loopne
add
insl
cld
pushf
test
in
inc
loop
lret
cmpsb
mov
pop
jmp
js
fsts
add
jb
sub
xchg
into
lods
mov
jg
pop
std
leave
mov
scas
cs
mov
fsubrs
into
out
jne
movb
cmp
mov
mov
repnz
aaa
test
cs
and
pushf
nop
jbe
add
imul
addb
movb
test
dec
inc
add
cmp
jae
popf
xor
sub
jnp
lcall
js
add
addb
push
mov
sete
adc
enter
push
scas
rorl
inc
add
movsl
call
push
sbb
xchg
and
in
dec
sbb
in
pushf
sti
dec
repnz
pop
faddl
push
cmp
repz
scas
cmp
bound
inc
add
imul
stc
cli
jb
cmp
mov
les
lea
add
fwait
mov
dec
aad
mov
cltd
push
add
adc
ljmp
mov
mov
xor
imul
addb
int3
xchg
add
or
addb
jbe
mov
inc
xor
aam
addr16
mov
pushf
repnz
xchg
sar
mov
add
setbe
rcl
adc
movb
sub
and
insb
mov
mov
add
imul
sti
adc
cmp
out
mov
lock
popf
iret
push
mov
mov
mov
push
mov
repz
inc
push
cmp
push
sbb
push
gs
cltd
add
test
test
js
loop
fistpll
mov
lods
lods
sub
pop
movsl
or
cmpsb
mov
xchg
fsubl
jne
int3
mov
push
jle
adc
and
shlb
fstp
out
fldl
adc
mov
add
add
adc
mov
clc
mov
movsl
mov
adc
je
mov
aad
pop
shr
xor
or
filds
add
incl
addb
dec
stc
xchg
or
adc
sbb
sarb
in
dec
dec
and
addb
push
mov
mov
add
rcr
les
in
mov
mov
pop
pop
andl
cmpsl
es
mov
xchg
outsb
ret
std
or
add
mov
xchg
into
mov
adc
sub
pop
subl
clc
movsl
movb
cli
inc
clc
lods
in
inc
add
pop
and
adc
mov
sbb
push
inc
movsl
je
mov
pop
xchg
shrb
nop
pop
movsbl
push
add
pop
jmp
call
jbe
push
or
ja
sbb
fstpl
jno
ds
test
dec
movsb
cs
add
sub
out
or
scas
jp
push
add
fistpll
push
lods
push
loopne
add
lret
dec
mov
pop
xor
inc
xchg
out
rcr
rcrb
addb
out
gs
jnp
push
outsb
mov
mov
add
popf
in
aaa
and
xchg
adc
add
adc
jp
lret
dec
pop
aaa
movsbl
inc
add
lds
push
jl
shll
sub
daa
clc
and
les
outsb
add
inc
add
dec
enter
add
xchg
cs
insb
test
mov
test
mov
cmp
rorl
and
in
test
pop
lcall
test
movsl
addr16
movb
pop
lcall
xchg
fistpll
mov
push
xor
pop
sbb
mov
scas
rcrb
push
dec
cmpsb
in
mov
cmpsb
push
iret
ficompl
mov
dec
out
daa
dec
or
daa
sub
sti
pop
es
mov
add
mov
stos
pop
pop
xchg
mov
pop
insb
jo
jae
mov
xor
and
lret
and
push
cmp
icebp
push
sub
cmpsb
mov
stos
lret
mov
add
lock
sahf
adc
addr16
add
sbb
push
xchg
mov
cltd
pop
pop
jp
aaa
lods
xchg
out
add
cwtl
xor
inc
shll
test
xchg
arpl
dec
jp
mov
mov
cmp
lock
in
cs
aam
mov
inc
repz
xchg
ljmp
adc
popa
xor
aas
and
inc
add
jp
mov
sub
loope
stc
sbb
pop
xchg
adc
pop
or
jae
add
push
loop
enter
popf
scas
jmp
lahf
bound
popa
pop
adc
lret
add
mov
add
lds
dec
pushf
into
sbb
xor
jge
fmuls
pop
xor
stos
inc
add
icebp
dec
pop
or
out
idivl
pop
xchg
jp
pop
cmp
mov
imul
jmp
fisubrl
inc
add
hlt
popa
sarb
lret
enter
sbb
outsb
out
ror
inc
add
ret
jnp
adc
cmp
hlt
or
add
push
cmp
xlat
in
and
mov
add
inc
add
adc
iret
mov
lock
jge
jbe
mov
insl
dec
xchg
xor
sbb
lret
push
and
sub
or
push
in
mov
adc
popf
insl
mov
in
movsl
mov
cs
add
or
shll
push
inc
sarb
sbbl
sbb
movsb
sub
add
fs
sbb
push
sbb
add
sub
fsubrl
shl
or
divb
cmp
in
push
cmp
mov
push
shlb
and
jp
popf
push
or
adc
mov
pusha
add
push
sbb
xchg
adc
push
shl
rorl
sub
mov
pop
scas
scas
arpl
or
sub
xor
pop
daa
inc
add
jecxz
add
add
cmpsl
stc
jmp
dec
sbb
sub
xor
sub
fs
lret
xor
xor
xchg
mov
aas
movsb
stos
hlt
fimuls
add
sub
jae
dec
pop
mov
sbb
fistpll
sub
xchg
adc
or
push
mov
dec
int
inc
push
xchg
outsl
rcrb
das
dec
adc
lds
or
negl
xor
aad
aaa
inc
xchg
push
cltd
pop
and
mov
and
dec
je
pop
fwait
xor
paddsb
mov
test
sub
lds
incb
add
insb
push
clc
movsb
jb
push
test
mov
add
movb
cmp
jecxz,pt
lret
lret
popa
out
dec
in
mov
mov
mov
cmp
add
pop
sarb
ljmp
jecxz
sub
lds
outsl
mov
add
test
out
mov
pop
cmp
adc
mov
mov
mov
fnstcw
cmp
adc
pop
into
fmull
xchg
or
int3
xlat
lea
or
inc
add
add
mov
jp
xlat
push
pop
jns
out
dec
sub
dec
imul
cmp
gs
rorl
ljmp
jl
pop
les
push
push
adc
shll
add
sbb
idivl
cmpsl
cmp
loop
or
inc
push
test
fwait
in
les
and
adc
or
insb
aad
mov
push
dec
cmpsl
popa
push
cli
mov
lahf
add
inc
bound
add
loop
stos
jmp
cwtl
repz
int3
insb
push
jb
into
fs
sahf
ret
fisttpl
leave
rolb
ss
jae
inc
add
pushf
cltd
mov
jle
testl
ds
out
adc
mov
push
push
jle
add
sbb
add
cltd
iret
cmpsl
dec
sbb
or
jl
sub
mov
add
subl
mov
inc
divl
lcall
xchg
popf
pop
mov
add
movb
dec
push
push
mov
xchg
jo
xchg
test
xchg
sub
add
mov
in
rolb
decl
xor
mov
dec
mov
sbb
clc
movsb
xchg
loop
inc
in
and
sti
int3
clc
fdivrs
or
dec
movb
call
iret
xchg
xor
leave
std
xchg
sub
adc
xor
movsl
das
call
push
and
push
mov
mov
add
mov
add
arpl
repz
in
filds
add
fsubr
repnz
js
xchg
fwait
and
add
lods
inc
and
dec
stos
aaa
sub
testl
xchg
and
add
jnp
add
loopne
and
pushf
pusha
add
inc
add
sbb
push
and
sar
mov
je
scas
lods
dec
rolb
iret
mov
lret
pop
fstps
in
lcall
dec
add
mov
mov
js
scas
push
pop
push
sbb
mov
movb
push
xorl
jae
add
out
mov
add
push
mov
sbb
mov
jl
dec
xor
lcall
mov
testb
leave
addb
mov
xor
mov
dec
rcl
sahf
les
mov
push
inc
pop
rorl
testl
sbb
push
xor
xchg
adc
fistl
adc
iret
sub
add
aaa
loop
mov
shll
or
xchg
test
aam
mov
test
dec
test
push
ds
mov
xchg
scas
xor
stos
loopne
add
or
and
and
mov
out
xchg
gs
or
or
es
cwtl
mov
or
outsb
inc
ds
add
psubusb
out
push
mov
mov
xchg
test
icebp
sbb
js
add
sahf
movsl
pushf
pop
cmp
mov
call
rorl
call
movsb
sub
mov
add
or
xchg
lcall
and
stc
push
push
adcl
cmp
sub
jg
cmpsl
xchg
cltd
jmp
dec
addb
adc
movsb
xchg
hlt
push
add
push
jno
lods
push
pushf
add
int
adc
xor
lods
fmuls
ja
xor
mov
pop
shl
stos
or
outsl
mov
pop
mov
cmp
jmp
es
adc
lds
dec
gs
pop
icebp
addl
int
test
lahf
push
push
push
jo
or
add
inc
add
mov
or
pop
xchg
cld
xchg
movsl
into
ret
jge
pop
out
inc
add
shrl
jne
adc
push
test
rolb
and
ja
lock
imul
mov
leave
mov
pop
punpcklwd
push
gs
add
jae
mov
sub
add
xchg
repnz
push
jecxz
mov
lcall
cwtl
jno
jns
je
add
and
scas
ss
cmpsl
cmp
xor
jp
push
int3
xchg
push
shll
jmp
inc
mov
dec
push
movsb
fistpll
push
dec
dec
adc
add
adc
pop
mov
pushf
inc
js
stc
adc
pop
xchg
test
mov
aam
xchg
loope
add
mov
or
jge
loopne
fisubrs
or
add
pop
mov
add
scas
and
mov
fs
and
mov
xchg
jns
lock
push
mov
mov
stc
imul
in
pop
iret
popf
mov
jge
dec
mov
push
add
cmp
addr16
in
mov
jmp
add
add
cltd
push
mov
add
flds
out
xchg
adc
aad
jae
in
add
and
repz
js
add
movsb
xor
imul
imul
lret
scas
int3
jns
dec
or
sbb
movsl
and
cmpsl
xchg
movsl
outsl
ja
xchg
imul
mov
inc
add
ljmp
push
std
sar
xchg
mov
fcoml
xchg
and
cmc
out
inc
add
mov
inc
add
out
inc
shlb
int3
repnz
insl
xchg
jno
scas
xchg
cmp
add
add
je
shlb
xchg
sahf
jmp
xchg
gs
mov
test
out
mov
jle
icebp
int3
sbb
xchg
outsl
push
shll
add
in
daa
push
iret
repnz
int3
pop
sub
dec
xlat
jns
shll
jne
mov
jbe
lret
sub
das
pop
aaa
sbb
sub
icebp
cmpsb
aaa
arpl
rolb
aaa
or
push
sar
jl
jnp
jmp
add
mov
fmull
pop
sub
add
addb
jbe
das
adc
rolb
sbb
jmp
mov
pop
lock
rolb
sub
jl
loopne
ljmp
rorl
cmp
xchg
and
jns
push
xor
es
rcll
push
push
loopne
out
add
pop
push
fildl
jns
jno
lret
add
dec
sbb
rolb
hlt
ret
push
pushf
nop
movsb
rcll
push
pop
dec
aas
aam
test
jp
add
add
or
lods
test
inc
imul
xor
jae
inc
add
push
add
pop
xlat
mov
cmp
in
popa
out
cld
mov
jecxz
sbb
mov
popf
vpshad
xor
ljmp
cld
push
add
fdivrl
jae
ja
jbe
dec
push
in
addb
sub
add
push
stos
cmp
test
sub
das
push
aas
adc
mov
mov
fwait
push
sarl
dec
or
mov
pop
cld
dec
xchg
dec
mov
and
or
inc
cmpsb
and
stos
out
xor
mov
inc
add
pop
insl
add
sub
lahf
xchg
xchg
inc
add
add
int3
sahf
popf
push
add
lret
or
push
jle
bswap
push
in
push
rorb
or
addr16
jb
fimull
out
aaa
ret
std
out
or
ror
jae
xor
scas
cwtl
into
pop
lds
out
jbe
pop
push
inc
shll
push
fisubl
lea
push
add
add
cmpsl
sar
jl
add
inc
add
cmpsl
pop
push
das
outsb
popf
push
and
out
sbb
add
inc
add
jo
pop
test
push
push
pop
test
addr16
lock
insb
push
push
dec
pop
sbb
mov
add
movsw
dec
repz
push
xor
or
sub
xchg
pop
stos
push
push
mov
or
push
pushf
adc
jno
int
fisubs
test
cmp
in
enter
insb
mov
cmp
jbe
in
js
sbb
leave
inc
or
sub
sub
aad
pop
jo
jb
add
mov
pcmpgtd
mov
aam
insl
lds
pop
cmp
adc
mov
add
xchg
out
or
cltd
sahf
stc
push
rcll
mov
inc
add
mov
jae
jb
dec
pop
sahf
or
sbb
add
aaa
clc
int
roll
mov
add
das
sarl
dec
call
xor
mov
pop
sbb
add
sub
mov
pop
pusha
add
movsb
push
mov
pop
inc
add
rol
push
jo
push
or
ret
fwait
bound
jp
daa
xchg
xor
hlt
arpl
add
sbb
sbb
adc
cmp
sub
mov
aam
adc
outsl
xor
arpl
jno
addr16
shr
pusha
add
mov
jbe
jecxz
jecxz
jns
jg
shlb
stos
mov
lahf
lock
and
mov
mov
icebp
add
aad
lret
dec
xor
pop
popf
xor
sub
add
jmp
jmp
jo
inc
mov
cmp
or
lds
sarl
mov
add
jno
cmp
jbe
push
jo
imul
and
addr16
sbb
cmpsb
push
pop
or
cmp
and
push
add
mov
inc
add
xchg
outsl
test
add
mov
add
sub
icebp
mov
add
fwait
repz
popf
pop
ffree
add
inc
fstpt
pop
push
popf
test
test
ss
xchg
gs
sbb
cmp
jge
ss
sub
dec
sub
repz
ret
push
mov
pusha
add
adc
jae
xlat
xor
add
ret
xchg
inc
add
pop
or
dec
lods
jl
add
jg
in
push
outsb
cmp
aaa
fwait
xchg
adc
shl
lock
inc
xchg
data16
mov
xor
stc
pop
fidivrs
mov
ljmp
stos
and
push
and
add
xchg
movsb
leave
jp
pushf
insb
dec
xor
das
mov
pop
mov
mov
and
lds
sbb
sti
jbe
xchg
jecxz
jnp
shl
dec
adc
inc
add
pop
cmp
test
or
out
cltd
lcall
push
test
pop
mov
push
pop
mov
imul
outsl
mov
xor
repz
stos
sbb
add
test
js
mov
mov
add
push
xchg
dec
roll
mov
add
call
rcr
and
mov
sub
add
push
nop
nop
jp
sbb
aam
add
jo
jno
negl
add
mov
mov
xchg
cmp
lods
fwait
js
insl
rolb
jae
rolb
leave
dec
push
sub
add
push
insb
dec
mov
pushf
sbb
cld
push
test
add
add
inc
add
sbb
flds
inc
add
cli
push
mov
lock
and
ret
add
inc
add
int
mov
popa
mov
test
jae
cmc
aaa
cmp
push
pop
addr16
mov
dec
movb
movb
jns
mov
subps
add
jnp
fmul
mov
jns
outsl
push
add
push
jne
stos
pop
mov
mov
dec
addr16
push
fsubrs
dec
loope
add
add
cmp
lods
push
inc
add
fstpl
lods
mov
aad
push
inc
add
add
push
jo
add
stc
ret
inc
aas
adc
lcall
out
bound
jge
sub
mov
add
pop
sub
ret
nop
pop
or
or
fld
add
arpl
movsb
xor
dec
gs
aaa
rol
lcall
push
xchg
test
sti
adc
jo
cli
xchg
mov
adc
xchg
pushf
out
call
in
scas
xchg
cmpsb
fcmovb
sub
fsub
push
test
insl
cli
es
iret
xlat
dec
hlt
inc
add
adc
mov
lods
jmp
add
add
lods
sub
rcrb
jnp
inc
add
cs
xchg
mov
adc
outsb
or
push
pop
movsb
pop
cwtl
cli
addb
add
cmpsl
lahf
cmpsb
pop
ljmp
ljmp
jmp
movb
sbb
lret
or
dec
inc
add
add
test
dec
mov
loopne
xchg
jbe
and
out
out
mov
xchg
lods
jl
addb
add
lcall
mov
xor
adc
add
movsb
jnp
xor
rolb
loopne
cmp
jb
hlt
inc
movsl
dec
mov
mov
lods
cmpsb
setb
mov
enter
inc
add
stos
inc
mov
loope
add
cmpl
repnz
cwtl
xchg
inc
add
or
add
rolb
xor
add
lcall
jae
movsb
push
loope
inc
add
mov
push
inc
out
cltd
sub
dec
sbb
mov
or
adc
add
jecxz
pop
push
aam
sub
out
fcmovu
push
jmp
push
push
jmp
repz
add
xchg
mov
fsubrl
mov
mov
add
inc
add
lahf
in
dec
sbb
daa
pop
idivl
cmp
movb
mov
pop
aad
pop
leave
or
call
dec
cmp
movb
popf
push
mov
fs
iret
mov
xchg
or
js
aam
or
into
pop
int
in
out
cli
shrl
sub
pop
loopne
shlb
or
add
mov
ds
test
sahf
cmp
add
inc
jo
imul
sbb
fisttps
cmpsb
xchg
movsb
insl
push
xlat
jecxz
roll
sub
and
aad
sub
mov
dec
sub
add
rolb
into
push
sub
pusha
add
mov
dec
push
stos
jae
add
clc
sbb
mov
inc
xchg
mov
add
cmp
fdivs
jle
add
adc
decl
or
cmc
aaa
xchg
imul
outsb
or
fadd
fstps
add
dec
dec
xchg
nop
stos
mov
sahf
cmpsb
cmp
and
mov
pop
pop
xor
pop
jl
mov
divl
inc
add
inc
test
and
inc
add
in
mov
out
xchg
sbb
bound
stos
mov
notl
push
add
or
mov
fs
adc
xor
popf
dec
pop
cmp
cmp
scas
inc
add
xor
jmp
lods
icebp
fwait
push
add
add
movsl
mov
dec
adc
out
or
mov
pusha
add
inc
mov
addr16
in
addb
jno
add
xlat
in
mov
jle
pop
rolb
push
cmpsl
mov
jbe
xor
ss
sub
jle
cmp
daa
cltd
lret
shlb
cld
mov
adc
clc
push
cltd
pop
daa
mov
or
mov
sub
add
sarl
leave
stc
inc
pop
aam
loop
add
bswap
test
inc
add
mov
shll
add
lods
mov
adc
in
xchg
mov
dec
leave
jge
dec
cli
mov
push
scas
mov
insb
ds
imul
andl
add
test
fcmovne
mov
inc
add
jmp
std
out
add
cmp
push
push
test
fs
or
add
mov
push
rcrl
mov
mov
add
mov
mov
jno
out
adc
cli
adc
and
xor
aam
pop
add
sub
pusha
add
outsl
add
mov
add
add
shlb
movsl
jg
jb
les
cmp
loop
fwait
mov
mov
xchg
inc
lret
popf
imul
add
cmp
clc
inc
sub
add
inc
add
add
inc
inc
add
adc
fdivrs
aas
mov
lcall
bound
lods
stc
and
add
shrd
jns
add
pop
shlb
test
mov
xor
dec
test
gs
rcrb
sbb
jl
sbb
int3
add
cmp
pop
insl
mov
cmp
les
mov
repnz
ja
bswap
addb
mov
sbb
xor
icebp
or
add
nopl
add
mov
xchg
xor
sub
adc
mov
add
add
sub
or
sti
mov
std
adc
jns
outsb
in
dec
xchg
imul
cltd
call
fwait
popf
jmp
cmc
mov
jnp
push
lds
or
test
cmp
in
add
xchg
lods
hlt
push
jbe
enter
cld
stc
test
pop
repnz
test
push
cmp
push
repz
ret
mov
dec
adc
movsb
aaa
loope
mov
inc
add
stos
mov
add
loop
mov
jecxz
repnz
add
xlat
push
pop
dec
ds
fisubs
xor
fstpl
add
fnsave
and
add
push
negb
cli
push
adc
out
cli
mov
nop
sub
sbb
jmp
pusha
add
popa
mov
jp
jo
movb
xchg
jp
fisubrl
leave
add
pop
roll
add
inc
add
leave
push
dec
jecxz
push
or
insb
mov
xchg
stos
mov
lods
sub
add
or
outsb
divl
sbb
sbb
push
movb
cmpsl
jne
mov
mov
lock
add
ljmp
dec
inc
add
rcrl
inc
add
repnz
adc
dec
pop
nop
mov
xor
sbb
mov
mov
mov
inc
add
adc
shr
dec
popf
dec
je
pop
stc
loopne
roll
loop
ret
mov
pop
das
inc
inc
movsb
sub
xchg
das
mov
iret
sbb
jle
mov
fsts
add
rcr
or
imul
fldenv
mov
notb
sub
popa
fnstsw
push
mov
cmp
add
push
sbb
push
js
iret
cmpsb
sub
xor
sub
and
fwait
int3
sbb
enter
jge
movb
push
mov
aam
jns
inc
add
xor
pop
xchg
hlt
jno
mov
mov
cmc
add
loopne
nop
fldenv
scas
cs
add
int
cmp
add
mov
out
pop
add
pusha
add
fnstenv
add
in
mov
mov
jae
ret
add
icebp
sub
push
add
inc
add
imul
loopne
add
mov
push
sub
cs
test
test
dec
int
in
pop
or
sbb
add
rcl
xchg
xchg
arpl
addb
add
shrb
mov
add
push
pusha
add
push
cwtl
pop
int3
loopne
add
add
jne
add
mov
and
add
mov
lds
fstl
push
nop
imul
xchg
push
imul
xor
pop
das
jp
xor
and
pop
pop
lret
int3
mov
add
cmp
add
jecxz
add
xchg
outsl
mov
sbb
stos
loopne
jne
add
lods
xchg
test
fst
xor
out
cmp
mov
mov
cmp
mov
iret
enter
repnz
gs
sub
les
lock
lds
push
pop
cmp
xor
mov
add
mov
mov
gs
bound
mov
adc
add
adc
popf
or
scas
fimuls
and
repnz
dec
loopne
js
push
pop
into
lods
movsb
jecxz
mov
mov
sbb
hlt
mov
mov
push
push
sub
out
add
and
or
jbe
push
add
rolb
rolb
mov
sbb
mov
testb
dec
pushf
fistps
imul
mov
std
cmp
add
mov
sbb
cmp
pop
je
sbb
neg
and
leave
lods
inc
mov
add
push
mov
cmp
mov
xor
cmpsl
das
cmp
fs
sti
cmp
and
sti
inc
add
jbe
xor
mov
gs
jl
data16
mov
outsb
shl
out
int
push
add
out
dec
xchg
mov
aam
rcll
aam
pop
addb
jo
mov
sbb
or
popa
cmpsb
jecxz
jecxz
jnp
test
leave
movsl
lahf
fcmovnbe
push
sbb
cmc
push
jg
dec
push
addb
ljmp
movsb
jecxz
out
sub
inc
mov
ljmp
mov
or
xor
leave
adc
xor
add
test
dec
jge
xchg
out
jg
or
mov
inc
add
sbb
mov
fdivr
out
fcmovb
and
inc
scas
roll
adc
sub
xchg
mov
inc
mov
subl
nop
negb
ss
mov
loopne
add
test
jge
mov
adc
inc
add
sbb
inc
add
add
cmp
inc
or
dec
pop
lock
mov
push
aad
sub
add
push
dec
js
js
pop
adc
add
incl
add
xor
dec
mov
xor
ret
ret
jg
pop
push
stos
xchg
inc
add
cltd
ljmp
add
dec
out
jbe
stos
sti
cmp
sbb
push
sbb
addb
pop
adc
pushf
insb
gs
popf
std
pushf
and
add
jbe
mov
mov
test
pop
les
ficoms
cmpsl
cld
je
add
sbb
add
lcall
imul
lods
dec
jg
fcmovbe
shrl
add
jmp
call
jp
cmpsl
loopne
xchg
out
bound
movsl
out
jp
gs
imul
fnsave
jbe
ljmp
lock
call
loope
jno
push
add
fldl
and
cld
popf
cmp
repz
add
add
iret
das
fcoml
fbld
fidivrl
and
push
lods
xor
movb
jbe
ret
imul
or
add
or
fmull
add
jle
fmulp
in
aaa
decb
add
pop
mov
mov
repnz
aas
or
jle
sbb
xor
scas
sbb
mov
add
outsl
loopne
lds
sbb
inc
add
lods
stos
testl
stc
outsl
out
mov
pop
xor
mov
cli
xchg
popa
jp
ljmp
xchg
insb
xchg
cltd
shrb
ds
cwtl
adc
mov
mov
push
addb
icebp
dec
mov
lods
pop
int3
xchg
adc
add
cmc
arpl
push
stc
mov
pop
je
xchg
ja
inc
addb
hlt
mov
xlat
add
add
sub
jne
icebp
push
and
push
inc
add
ja
rcrb
iret
loopne
dec
xchg
inc
add
faddp
add
xchg
out
and
fs
and
mov
arpl
hlt
out
xchg
in
add
ja
fsubl
sub
aam
adc
lahf
mov
fcoml
shlb
rolb
mov
adc
add
cs
mov
insl
adc
mov
aad
hlt
cvtdq2ps
add
add
pop
or
stc
and
popa
add
shr
cwtl
clc
and
mov
cmp
jae
lcall
je
hlt
sub
pop
mov
mov
and
les
push
cmp
xlat
fcos
cmp
call
add
cwtl
xor
filds
repz
into
lret
add
aaa
sbb
mov
shlb
pop
inc
cwtl
jns
mov
enter
ljmp
psubusb
xor
or
jae
pop
push
cmp
xchg
out
jmp
pushf
or
add
mov
mov
add
popa
scas
stos
jo
add
adc
jge
push
push
test
in
rolb
out
jecxz
push
pop
int3
pop
fldl
add
and
cmp
or
jno
push
add
nop
inc
add
mov
and
xor
std
cmp
pushw
rcr
addb
loopne
jne
adc
inc
pusha
add
pop
test
lret
loop
in
inc
add
add
push
sarl
cmc
imul
int
push
inc
add
inc
add
sarl
pop
push
movb
cmp
adcl
addb
sbb
mov
in
call
dec
test
out
mov
pop
adc
sbb
fwait
scas
addb
add
mov
ret
in
pcmpgtw
dec
negb
popa
sbb
cmp
rcll
insb
cmpsb
jmp
push
popf
jno
dec
pop
sub
fs
cmpsb
jl
or
mov
je
insb
outsl
mov
incb
push
sbb
add
fdiv
les
nop
les
jae
test
lock
push
xchg
cli
shll
dec
mov
xor
fimull
add
in
cmp
sbb
and
in
mov
aas
mov
cld
ljmp
ljmp
or
sub
cli
jge
sbb
cmpsb
pop
roll
sub
inc
add
cld
push
movsb
test
movsb
mov
cmc
push
add
cmp
mov
faddp
add
cmp
je
in
or
addr16
hlt
jg
add
mov
jns
popa
push
xchg
or
rolb
aad
mov
jmp
repnz
call
data16
imul
pop
mov
jl
add
or
cmc
or
add
add
fisubrl
add
lret
or
sub
push
dec
repz
mov
iret
add
jb
outsb
and
filds
fstps
int
adc
pushw
mov
sub
sti
sbb
ret
dec
mov
in
add
bnd
add
movsb
xor
ficoml
xchg
xor
scas
fxch
cmp
fwait
dec
outsb
adc
lock
mov
add
popl
add
or
movsb
fwait
dec
loopne
rolb
jge
incb
cwtl
mov
data16
or
and
mov
dec
sbb
outsb
adcl
mov
mov
adc
mov
mov
dec
lea
movb
push
emms
inc
push
xchg
add
add
adc
or
mov
jnp
aam
add
cmp
mov
lods
fistps
lods
pop
sbb
inc
rolb
mov
push
xlat
scas
fdivr
lds
push
inc
add
outsl
sub
add
and
cmovae
shll
decl
out
or
incl
or
in
or
pushf
push
sbb
das
jb
shl
pop
mov
addb
sbb
in
aad
push
adc
insb
in
repnz
mov
lds
pop
iret
adc
shll
int
lds
xor
or
xor
popf
out
mov
xor
into
cmc
repz
push
insb
aas
mov
xor
jns
leave
lds
and
add
mov
jg
movsb
test
pop
mov
sbb
inc
add
jb
mov
mov
pop
daa
add
jne
arpl
int
pop
gs
inc
es
rcll
add
hlt
out
mov
aam
or
push
fwait
icebp
dec
fnsave
cmp
xchg
or
mov
outsb
mov
mov
add
call
movsl
or
and
xchg
cwtl
cmpsb
les
sbb
cmpsb
lds
jo
add
scas
nop
mov
clc
fisubrs
jl
xor
mov
idivl
lret
jge
clc
push
sbb
mov
inc
add
in
xor
add
insl
add
dec
sbb
mov
mov
iret
push
add
adc
cld
inc
lcall
int
insl
jno
pop
push
sbb
fimull
mov
adc
mov
add
pop
jbe
or
jge
xorl
push
add
icebp
mov
push
add
lods
xchg
sub
arpl
lds
adc
adc
int3
push
mov
ljmp
push
mov
insb
fstps
addb
shlb
sbb
loop
cmp
and
daa
jo
adc
dec
addb
jnp
bound
movsl
xchg
cwtl
fiadds
imul
or
stos
mov
jno
in
fsubrl
mov
and
fistl
aam
fsubs
int3
movb
inc
add
mov
xor
mov
pop
push
sbb
out
add
mov
addb
lcall
mov
mov
push
mov
dec
cld
sbb
ljmp
mov
hlt
xor
das
cwtl
mov
add
xor
vpsadbw
inc
mov
loop
mov
xchg
adc
clc
pop
std
xchg
stc
sti
loop
dec
enter
aam
iret
in
mov
div
and
sarl
xor
das
lcall
and
jnp
mov
and
syscall
lcall
cli
stos
mov
sbb
and
mov
sbb
sahf
jo
aam
fisubrs
sbb
and
jnp
cld
xchg
adc
mov
or
fwait
movsl
push
sbb
lods
cmp
bound
sbb
and
jnp
dec
adc
addl
dec
cmp
rcrl
rcll
loop
or
inc
cltd
push
xor
fistpll
daa
xor
mov
ret
mov
nop
pop
mov
movsb
js
and
lea
aaa
jmp
add
test
lock
adc
lods
loopne
jns
mov
xor
jge
insl
sub
jecxz
movb
addb
out
inc
add
add
repnz
sub
inc
in
sbb
push
mov
and
and
aas
cmpsl
and
pop
pop
jge
dec
stc
add
sbb
xchg
inc
in
cmpsb
adc
lock
cmpsb
mov
pop
and
aad
xchg
inc
push
inc
adc
mov
push
lcall
aaa
inc
add
push
inc
add
adc
dec
mov
dec
dec
add
mov
cltd
sti
test
mov
push
jns
fnsave
adc
pop
xchg
insb
mov
add
and
jne
xchg
aam
stc
xchg
int
or
and
mov
gs
xchg
pop
fsubs
sbb
movsl
shr
push
mov
lcall
add
dec
dec
aam
lcall
add
dec
pop
sbb
add
xchg
dec
jg
push
aam
add
inc
ret
int
sub
outsb
sbb
test
add
add
fldl
aad
pop
pop
pop
push
xchg
push
jae
push
addb
pushl
jb
lods
mov
push
and
cld
bndstx
movsb
jnp
test
cwtl
dec
aad
bound
cmp
lds
pop
bswap
inc
add
pop
push
mov
mov
mov
xlat
dec
mov
cmovp
dec
lea
cmp
aas
jmp
cmp
pop
dec
mov
rcll
rolb
mov
frstor
push
pop
xchg
lahf
adc
test
adc
mov
sub
pusha
add
cmpsb
xchg
adc
movsl
sbb
pop
incl
lcall
clc
and
dec
cmpsb
jle
addr16
sbb
imul
xor
adc
imul
or
adc
jne
mull
push
movsl
push
and
enter
and
in
inc
add
pop
test
adc
or
xor
jbe
xchg
lahf
xchg
pusha
add
jae
sbb
out
sub
inc
add
in
enter
daa
mov
mov
push
sub
jp
sbb
xor
add
cmp
push
sbb
xchg
dec
pushf
pop
sbb
fwait
mov
jns
inc
add
jg
add
testl
jg
xchg
aad
xchg
push
test
pop
int
and
int3
inc
add
stc
xchg
dec
leave
jnp
pop
mov
add
mov
add
mov
lret
cmpsb
lea
add
test
mov
or
frstor
add
push
add
xlat
es
sbb
push
dec
rolb
sti
mov
xchg
push
cmp
jg
std
push
and
dec
mov
or
xor
test
notb
jecxz
jne
pop
cs
cli
cmpsb
push
mov
jb
cld
mov
xchg
or
out
cs
dec
cld
pushfw
ljmp
cmp
xchg
dec
sbb
iret
out
fsts
inc
fdivrl
or
add
shlb
fstps
gs
push
in
mov
in
int
xchg
ds
add
cmpsl
sbb
xchg
sbb
jno
insl
mov
adc
xchg
jmp
sbb
cs
add
sbb
pop
or
imul
imulb
and
hlt
in
inc
add
xchg
pop
cmp
add
outsl
mov
sahf
out
xchg
dec
xchg
mov
stc
rorl
popf
pop
sbb
test
mov
mov
fwait
add
loope
or
adc
add
sbb
cmp
xor
push
adc
les
rcr
jecxz
cmp
insb
dec
movsb
adc
hlt
cmc
xchg
nop
sub
push
cvtpi2ps
jae
jns
or
mov
sbb
shl
cmc
out
xor
xchg
mov
aaa
cmp
xchg
jecxz
and
loope
mov
push
push
mov
inc
add
jmp
or
movsl
in
loope
or
stc
stc
negl
mov
fnstenv
push
push
push
pop
in
pop
jl
pop
mov
xchg
mov
dec
arpl
and
add
add
or
xchg
adcl
sbb
cmp
movswl
out
mov
mov
rolb
add
jne
addb
in
mov
fwait
mov
test
mov
es
mov
mov
aaa
movb
lods
or
inc
add
push
lods
adc
jg
pop
scas
xchg
in
sbb
add
jecxz
dec
je
test
aas
and
or
ss
dec
je
pop
xlat
lcall
loopne
inc
add
add
xchg
mov
pop
fiadds
mov
enter
into
ret
repz
add
ret
in
push
pushw
fs
inc
add
jmp
jecxz
clc
add
add
sub
out
jnp
sbb
mov
add
and
xchg
lds
xor
in
sbb
or
int3
pop
sub
dec
xor
loope
leave
xchg
add
out
jns
scas
push
test
cmp
add
inc
add
repz
in
bound
jae
lea
loope
clc
mov
xchg
jno
aam
test
enter
push
and
es
cmp
jmp
repz
mov
and
cli
jle
lret
xchg
rorl
mov
adc
mov
push
es
repnz
xor
or
push
sub
aam
arpl
or
pop
leave
pop
pop
push
loopne
fiaddl
sbb
pop
fisubrl
insl
sub
out
jb
pushf
cmp
add
mov
in
add
test
cmp
lahf
sbb
sarl
imul
mov
sbb
jle
insb
adc
jo
clc
xchg
outsb
addb
gs
push
mov
add
lods
in
hlt
inc
add
jb
mov
ss
addb
mov
test
or
mov
repz
inc
add
and
rclb
stc
xlat
mov
xchg
fisubs
dec
or
mov
jns
mov
adc
imul
mov
add
fstps
lods
mov
add
jne
and
adc
sbb
les
movsb
test
icebp
lds
cmp
jb
add
jns
fldenv
dec
pusha
add
jecxz
add
xchg
xor
iret
pusha
add
xchg
push
ret
push
mov
outsl
jno
jg
arpl
cmp
cli
in
jp
adc
jge
or
imulb
mov
mov
cmp
sbb
add
xor
push
xchg
fst
rolb
xchg
and
mov
nop
fwait
jbe
cmc
cmp
gs
repnz
movsl
mov
mov
mov
aad
sub
pop
aad
add
push
push
std
xchg
arpl
mov
int3
push
and
dec
sbb
add
dec
or
jg
out
cmp
mov
xchg
push
out
mov
arpl
out
or
ss
add
leave
and
dec
scas
std
gs
mov
mov
addb
xor
xor
mov
push
in
lea
mov
sbb
mov
mov
scas
mov
pop
xchg
loope
je
mov
mov
int3
xchg
dec
int
sahf
dec
pop
mov
loopne
outsb
lea
adc
ss
cmc
sub
mov
inc
add
loope
popa
shll
fcoms
add
aam
lea
fwait
pop
lock
js
add
js
int
imul
enter
in
xlat
or
adc
mov
std
nop
std
shrl
xor
add
fwait
stos
mov
sahf
adc
mov
inc
in
add
ja
jb
ss
outsl
push
cmc
insl
iret
test
sub
rcrl
push
xchg
nop
jecxz
add
sbb
push
or
lods
std
fdiv
push
popa
icebp
loope
pop
scas
in
jb
mov
shlw
cmp
iret
jnp
inc
adc
mov
aad
cmp
push
insb
aas
xor
dec
addb
popa
nop
arpl
xor
dec
sub
push
pop
pop
dec
xor
rorl
xchg
clc
ret
dec
fcoml
add
dec
ja
mov
mov
sub
lcall
jb
and
add
mov
sub
mov
jp
lret
call
pop
int
roll
je
incb
and
lods
pop
loopne
scas
lods
sarl
push
add
pusha
add
rolb
mov
movl
insl
in
jp
sub
test
cmp
pop
mov
jno
add
fldl
mov
hlt
pop
bound
pop
imul
ljmp
xchg
lds
sub
sbb
mov
or
or
mov
mov
stos
push
pop
cmp
aad
leave
cmc
push
mov
adc
jle
imul
inc
dec
pop
ret
mov
ret
or
scas
lea
cmp
pop
lcall
pop
sbb
inc
add
jge
cwtl
in
jno
add
mov
lcall
push
mov
add
or
pop
inc
add
lea
into
lahf
pop
js
mov
and
push
add
push
shrl
aam
cmpsl
jo
fsubrl
loope
test
inc
add
xchg
jnp
jno
outsl
dec
ret
mov
add
mov
sub
or
cmpsb
dec
fwait
dec
push
dec
and
mov
dec
inc
add
bound
shlb
cld
inc
inc
add
jmp
ljmp
xor
inc
add
pop
incb
inc
data16
mov
mov
sbb
jns
cmpsb
data16
add
adc
mov
sbb
inc
add
addb
push
pop
fwait
into
push
xchg
cmc
dec
lcall
adc
or
sbb
sub
aam
or
daa
jg
fisubrs
pop
mov
or
or
pop
hlt
adc
data16
int3
or
inc
add
dec
call
add
pop
and
xchg
insb
push
mov
pop
dec
dec
add
sbb
jo
jo
rorb
and
ss
add
xor
push
add
lods
in
icebp
jne
cmc
cwtl
in
mov
in
jl
xor
add
imul
outsb
lcall
pop
push
sti
adc
pop
xchg
dec
jecxz
jl
aam
mov
aad
popf
pop
sahf
adc
loopne
xchg
addb
adc
push
inc
add
pop
dec
mov
scas
addb
jbe
xchg
sub
add
push
xor
cmp
call
nop
dec
std
cltd
popa
test
push
rol
add
xchg
add
add
mov
cmp
jmp
add
cmpsl
add
jmp
jg
les
xor
stos
inc
lods
mov
int
sbb
aam
test
or
pop
sub
or
xchg
jl
out
or
ljmp
dec
cmp
add
stos
adc
cmp
in
je
or
stc
fnstsw
inc
cmpsl
and
add
add
aad
push
mov
movsb
fs
add
mov
xchg
or
sub
mov
and
cmpsl
pushf
stc
pop
xchg
icebp
mov
je
fdivs
add
ret
ss
mov
pop
stos
mov
fs
fcmovne
xor
fldl2t
cmp
push
sub
cmpsb
inc
add
shll
les
xlat
sbb
shrb
xchg
or
mov
fstps
and
fsubrs
pop
sbb
mov
cs
xchg
testl
scas
sahf
stos
mov
jp
mov
xchg
lahf
in
ret
test
xor
aas
call
fmull
insb
ljmp
addb
mov
ret
enter
rorl
popf
aad
add
cs
notl
add
push
jg
or
imul
loop
sbb
notl
lcall
fwait
lahf
mov
movsb
sub
sub
mov
add
inc
add
pop
inc
adc
sbb
fisubl
mov
xlat
loope
lds
aam
aas
addw
sbb
or
sub
ficompl
rcrb
xchg
sub
add
shll
ror
fcompl
sahf
lock
out
stos
pushf
pop
inc
add
lret
lcall
insl
mov
pop
cmpl
add
cs
out
add
add
add
jmp
mov
add
ss
shrb
mov
xor
stos
mov
pop
scas
lcall
sbb
mov
lahf
xor
push
mov
adc
insb
icebp
orl
adc
mov
push
out
stos
mov
pop
scas
aad
fidivl
stc
inc
add
xchg
in
pop
mov
cltd
or
inc
add
sub
inc
add
loop
ficomps
test
lods
push
out
mov
lahf
xchg
fisubrs
inc
push
jmp
sbb
mov
add
pop
pushf
mov
mov
sub
lods
lret
mov
arpl
sub
jle
test
jbe
les
mov
adc
mov
adc
inc
add
jmp
pushf
push
cmp
insl
outsl
sub
sub
jp
cmp
outsb
push
jns
add
enter
nop
sub
jmp
int
test
jp
stos
in
cld
addr16
mov
aas
mov
gs
sub
add
jo
lds
xchg
pop
icebp
push
ret
leave
mov
mov
dec
adc
cmp
lea
add
push
js
dec
inc
push
add
add
repnz
scas
sub
inc
add
not
dec
decl
into
bnd
inc
pop
mov
fisubrs
test
fidivs
add
in
aad
sbb
mov
loopne
ret
sbb
std
cmp
add
push
add
int3
jo
add
nop
and
inc
lret
repnz
cmp
push
mov
mov
add
dec
jb
enter
insb
das
call
push
mov
adc
fxch
int3
mov
xchg
cmp
adc
jae
jno
fisttpl
pushf
inc
push
xchg
das
jae
cmp
xor
cmp
xchg
xor
js
aam
outsl
xor
push
mov
add
jmp
add
lock
pushl
mov
test
push
dec
sbb
add
or
sbb
sub
js
fcoms
test
div
stos
pushf
or
or
inc
add
push
cltd
imul
mov
xor
outsb
xor
movsb
gs
loopne
and
ret
mov
jp
cmc
push
enter
fmul
repnz
pop
lods
stos
and
jg
xor
bound
hlt
dec
mov
push
pop
test
xchg
lcall
dec
pop
pop
and
add
add
std
sub
sti
pmuludq
sub
cmp
and
sub
mov
sub
fimull
mov
xchg
xchg
or
add
ret
popa
mov
lret
adc
cmp
xchg
push
movsl
jnp
sbb
xchg
fmuls
out
movsb
jmp
es
mov
xchg
push
fisubs
inc
arpl
sbb
frstor
dec
xchg
pop
test
rolb
adc
pusha
add
test
addb
add
stos
mov
fldcw
adc
lods
push
loop
jnp
pop
ret
sbb
sbb
ja
cmp
jo
loope
add
movsb
pop
insl
rclb
adc
out
dec
popf
sub
movsl
scas
mov
addb
add
int3
bound
xchg
out
fisubrs
fists
fsubl
add
mov
and
sub
fcmovnbe
testl
cmp
stos
stos
fistl
repz
or
ja
inc
aad
sbb
sbb
mov
filds
xchg
or
add
xchg
mov
or
push
dec
mov
imul
add
cmc
mov
mov
xor
push
loope
loop
imul
std
es
in
sub
arpl
jnp
icebp
lcall
idiv
imul
cli
mov
xchg
push
fsubrp
rolb
daa
out
cld
adc
cmp
push
addb
add
addb
mov
mov
dec
subl
addb
add
xchg
pop
aaa
gs
pop
shr
sbb
lea
lret
add
push
mov
mov
rolb
xor
out
xchg
clc
inc
icebp
push
movb
add
int
or
mov
and
xor
ljmp
or
in
mov
dec
rol
add
xlat
xchg
mov
xchg
icebp
fs
add
adc
shll
lea
jae
add
push
add
dec
fadds
pop
cmp
xchg
cmpsb
adc
and
test
lock
jmp
xor
jbe
es
xlat
mov
icebp
or
fldenv
in
arpl
ds
lcall
inc
loop
pop
aad
stos
inc
mov
add
add
popf
and
addb
push
stc
repnz
xchg
cltd
add
mov
addb
lcall
lods
adc
leave
sarb
or
scas
aad
lods
ror
cmp
inc
add
sbb
xchg
dec
inc
add
scas
int
mov
pop
neg
push
adc
lods
mov
ret
daa
adc
mov
sub
mov
es
add
xlat
mov
mov
ljmp
movb
sbb
jo
mov
roll
add
push
pop
popa
ljmp
add
pop
repnz
lods
dec
push
or
inc
add
test
iret
mov
adc
pop
xor
ja
jno
outsl
imul
xor
aaa
jge
fs
pop
inc
dec
jno
out
push
mov
lods
stos
cmpsl
jecxz
fbstp
push
jb
adc
and
xchg
fmull
out
pop
repnz
dec
imul
cmp
add
push
jb
sub
ret
andl
add
daa
imul
fidivl
add
dec
lods
test
in
mov
inc
fwait
shll
in
mov
xchg
xchg
mov
adc
jg
jns
idivb
and
xor
mov
stos
and
fisttps
push
jbe
push
hlt
sti
gs
inc
ficoms
fcomi
pop
xchg
push
pop
pop
fwait
push
mov
addb
test
jl
movsl
lret
in
add
xchg
cwtl
jmp
sbb
scas
or
dec
mov
xchg
or
push
lahf
push
movb
mov
scas
in
les
jne
add
cs
xchg
push
add
data16
xor
add
sarl
sbb
rolb
std
pop
and
fwait
dec
cmp
and
mov
inc
xchg
xchg
sub
sbb
add
loop
add
pusha
add
incb
jns
push
push
xor
cmc
mov
add
push
or
frstor
mov
xchg
mov
xor
pop
enter
push
addb
xor
addr16
cld
inc
loopne
movb
or
popf
sbb
ffreep
dec
mov
and
add
cmp
adc
fcmovne
mov
imul
add
and
outsl
mov
and
lods
stos
mov
mov
and
leave
lock
xchg
shll
stos
aas
imul
hlt
cmp
pop
or
cmpsl
sbb
pop
push
sub
xor
loop
cld
stos
out
jns
xor
mov
dec
sbb
dec
dec
ss
lock
add
leave
hlt
call
jbe
mov
mov
js
lcall
js
cmpsb
addb
cli
lahf
mov
add
or
pop
lea
fs
test
call
jae
fsts
pop
inc
add
addb
mov
add
test
sti
pop
mov
cmpsl
xchg
mov
dec
ljmp
pop
fdivl
push
mov
clc
daa
and
xchg
jecxz
call
mov
sub
mov
cli
addb
add
add
mov
inc
ljmp
imul
cmp
cs
int
popf
imul
jecxz
mov
das
aam
cwtl
lods
idivw
shrl
xor
nop
jp
add
jo
add
cs
pop
sub
pop
mov
int3
inc
lcall
pop
fisubrl
std
pop
ret
nop
jl
cmpsl
bound
repnz
outsb
push
jge
mov
jp
add
ja
mov
bnd
aas
dec
cmc
sahf
stc
lea
jno
push
mov
cmp
out
stc
call
push
jge
shrl
ret
mov
add
mov
adc
xor
loop
add
dec
shrl
imul
add
shll
pop
jno
pop
xlat
push
test
pop
push
repnz
int
hlt
movsl
rolb
pusha
add
sub
and
cmpsb
jle
mov
loope
cmp
add
in
jl
mov
push
push
inc
add
ficoms
sbb
mov
cmpl
cmc
ss
addr16
cltd
jmp
inc
mov
scas
mov
sub
xor
repz
jp
cmp
je
fsubl
add
js
mov
add
int
push
fs
bound
or
jno
popf
lods
scas
dec
call
mov
loop
loop
sbb
fcomps
nop
mov
adc
push
or
xchg
es
pop
jnp
int3
push
fs
loop
shl
cwtl
roll
adc
decl
sub
mov
adc
add
shll
mov
dec
push
cltd
sbb
jp
es
outsb
clc
jge
dec
push
lahf
insl
bound
scas
jle
outsl
cmc
add
cmp
mov
test
or
imulb
mov
inc
shlb
mov
hlt
cmp
mov
add
pop
pop
cmp
inc
ljmp
sbb
insb
mov
in
rcr
imulb
inc
add
jmp
aad
lds
xchg
or
push
jne
push
lret
call
movb
inc
xchg
dec
movb
repz
clc
popa
inc
add
pop
pop
mov
fidivs
push
cmp
push
call
cli
iret
lock
add
jns
enter
sub
jo
adc
xor
mov
loop
dec
or
mov
pop
lcall
dec
rolb
mov
outsl
mov
jmp
out
mov
pusha
add
rcrl
and
mov
call
mov
loop
in
ss
add
xor
push
add
addb
inc
inc
out
bound
cmpsl
outsb
cld
mov
pop
outsb
daa
adc
aad
push
ret
mov
xor
out
dec
add
idivl
adc
lock
clc
mov
sbb
mov
fs
leave
ss
dec
mov
pushf
mov
pop
sub
out
sbb
jb
mov
repz
cmp
xor
incb
push
push
inc
add
xchg
lods
mov
jnp
push
or
call
arpl
adc
mov
call
addr16
int3
or
jno
lcall
imul
cmc
adc
jbe
mov
or
pusha
add
bound
dec
js
movsl
mov
js
xlat
inc
loop
inc
add
or
js
leave
pop
sbb
mov
stos
or
pop
std
popf
pop
inc
jp
jns
inc
add
add
sub
mov
sub
pop
jge
hlt
addb
push
loopne
add
ret
mov
dec
das
insb
adc
xchg
xor
out
test
or
mov
sbb
cmpsb
mov
int3
mov
inc
add
add
in
fdiv
in
mov
stos
out
sub
movb
sbb
lds
outsb
outsb
sub
xchg
ja
pop
mov
rcrl
lret
clc
repz
sbb
add
add
sbb
mov
add
jmp
loop
fmulp
pop
dec
aaa
jo
clc
and
sub
cmpsl
mov
fucomi
outsl
insl
icebp
in
pop
mov
push
loopne
and
in
mov
pop
jge
jge
daa
dec
addb
popf
ret
adc
xchg
sbb
cltd
and
jp
test
jb
cmp
mov
sbb
pop
dec
data16
jns
jecxz
cli
add
push
lea
sub
mov
cs
fdivrs
mov
js
add
test
repz
or
dec
add
mov
pushf
mov
inc
dec
jp
dec
mov
pop
out
inc
add
lret
pop
mov
cli
shrb
mov
mov
jns
cmp
pop
mov
jp
popa
std
lcall
add
pop
cmp
in
mov
lahf
test
adc
dec
mov
arpl
sbb
push
movsl
shl
and
adc
sti
pop
push
add
xchg
fcoml
addb
out
or
scas
mov
pusha
add
push
outsb
xor
test
cmp
dec
ret
cmp
pop
sub
xlat
aas
push
int3
adc
jle
mov
cmc
in
fwait
loop
xor
add
int3
adc
pop
push
or
sub
into
push
push
pop
xchg
push
lods
cmc
cmp
add
stos
lcall
jns
dec
out
mov
aad
add
sbbl
add
mov
es
mov
pop
jge
neg
lea
orl
push
cmp
fsubrl
or
xchg
push
stos
arpl
fmulp
mov
data16
add
mov
add
outsl
scas
ret
lahf
cli
mov
pop
xor
add
jne
add
jl
mov
test
in
adc
outsl
adc
xchg
xchg
jmp
add
sbb
ror
popf
add
add
sub
mov
cmp
addb
out
sti
movsb
insl
insl
xor
jo
dec
push
or
sbb
incb
mov
inc
sarl
xor
addb
inc
add
scas
sub
lock
pop
cmpsb
out
pop
pop
lahf
jno
push
stc
mov
jge
imul
loop
clc
jns
add
imul
add
negl
clc
or
lea
mov
sbb
xor
jp
test
add
pop
pop
dec
nop
sub
adc
jo
mov
adc
lea
call
adc
mov
ljmp
push
push
and
repnz
roll
movsb
mov
out
mov
loope
sub
pop
push
sub
mov
add
cmp
inc
jbe
mov
add
inc
add
ljmp
pushf
fidivl
mulb
lea
inc
add
push
xor
add
es
daa
je
dec
mov
xchg
mov
dec
addr16
add
aaa
mov
add
daa
add
dec
inc
inc
test
cld
dec
dec
rolb
add
stc
addl
sub
sbb
push
fwait
inc
addb
outsb
pusha
add
inc
add
lahf
xchg
mov
add
push
pop
add
cmp
add
lock
das
in
mov
jo
outsb
or
outsb
movsl
and
and
loope
fadds
mov
fldt
aam
mov
jb
inc
lcall
negb
mov
fidivs
mov
jmp
inc
add
pop
int3
dec
call
sbb
mov
jbe
pop
xor
scas
dec
mov
divl
jge
lods
lods
xlat
xor
mov
jns
aas
jmp
jo
lahf
pop
shl
dec
sahf
cmp
and
es
xchg
lods
lahf
lret
lock
movl
dec
mov
add
rolb
add
pusha
add
xchg
xor
lds
pop
jg
mov
fnstcw
and
mov
cmpsl
test
xchg
fists
fwait
inc
add
add
add
mov
addr16
mov
cmp
data16
into
sbb
xor
loope
inc
icebp
out
insb
aad
add
dec
mov
imul
add
add
add
daa
mov
nop
mov
adc
pop
in
clc
imul
cmp
xchg
or
testl
dec
sbb
add
lret
insb
xor
adc
outsl
fstpl
addb
add
cmp
fdivs
xchg
lds
clc
jno
test
mov
jge
add
pop
adc
aaa
dec
push
add
test
outsb
ds
hlt
mov
or
arpl
add
push
das
jge
mov
pop
repnz
add
sub
add
mov
das
and
call
test
jns
test
pop
push
dec
or
lret
sub
shll
jle
pop
or
cmp
mov
push
fnstcw
lods
xlat
loope
jmp
mov
lret
and
push
add
adc
and
add
jno
add
clc
sbb
add
lods
push
mov
dec
jae
mov
mov
dec
je
movb
and
arpl
popf
or
test
ds
push
out
mov
dec
addl
leave
int
imul
pop
pop
mov
pop
scas
test
jnp
add
test
mov
aad
xchg
subl
mov
pop
rorl
push
push
lods
mov
btl
test
dec
pop
jo
add
cmpsl
add
pop
fs
pop
out
add
push
js
cmp
dec
scas
and
xchg
xor
dec
and
pop
repnz
and
adc
and
cmp
ficomps
adc
and
std
pop
popa
jle
psraw
out
ljmp
sbb
cwtl
lock
sahf
sar
insl
mov
rcrl
mov
xchg
je
ja
sub
xchg
inc
ds
sub
mov
push
adc
insb
decb
sahf
adc
pop
sbb
mov
sbb
jle
add
pop
or
inc
add
and
add
add
jns
cmp
inc
add
mov
daa
mov
loop
dec
xor
sub
xchg
jl
or
movb
add
add
daa
adc
inc
add
fmul
adc
push
out
pop
in
clc
push
in
sub
push
cli
imul
inc
add
stc
in
test
mov
xor
push
and
xor
fcmovnb
icebp
inc
pop
outsb
inc
pusha
add
sbb
outsb
jb
orl
hlt
mov
adc
fldenv
lock
fsubl
pop
arpl
mov
les
in
push
mov
push
and
mov
test
out
cltd
push
aaa
adc
jo
pop
pusha
add
push
dec
ljmp
xor
mov
cld
push
add
jnp
je
rcl
aas
mov
in
ja
mov
lret
jo
add
ja
shll
in
add
ror
push
mov
add
push
lock
push
sbb
or
jo
inc
ret
add
push
sahf
xchg
push
lods
rolb
add
pop
lret
mov
mov
lret
or
sub
cltd
mov
out
stos
lahf
or
add
sahf
pop
outsb
and
shlb
add
push
lock
dec
fwait
test
push
jecxz
jge
dec
cmc
inc
loop
aad
shrb
sahf
push
xchg
sbb
add
test
notb
out
cmp
push
mov
mov
stos
pop
push
pop
push
adc
mov
nopl
add
push
cmp
adc
loopne
movsl
adc
aaa
cmp
add
jecxz
fnstcw
imul
add
ljmp
pop
or
aaa
insb
lds
xor
cs
add
arpl
nop
mov
cld
jb
xchg
add
hlt
sub
add
add
movsb
and
outsb
cli
ret
mov
push
into
ret
xchg
fstpt
aad
sidtl
into
in
pop
xor
sahf
aaa
je
mov
int
lcall
fidivl
cmp
xchg
lahf
mov
add
xor
mov
push
jecxz
lret
ret
add
sub
or
enter
ret
push
jmp
add
fadd
test
add
imul
notl
mov
dec
pusha
add
pop
mov
jle
xlat
mov
fwait
insl
mov
pop
jl
pop
bound
es
push
arpl
sub
test
dec
cmp
jns
fcmovnu
xchg
pop
notl
xor
xchg
jno
iret
iret
and
insb
mov
inc
add
movsl
in
push
scas
gs
idivb
lret
leave
das
daa
icebp
adc
shrl
push
dec
push
fsubr
inc
lret
outsl
jne
add
inc
add
cltd
cwtl
or
pop
lock
mov
jle
jg
push
cmp
mov
mov
in
mov
add
addr16
jecxz
jbe
sub
in
pushf
shr
out
mov
pop
insb
push
lds
es
add
jnp
adc
lret
not
and
adc
inc
add
dec
aas
std
mov
in
int
aam
sbb
mov
in
rolb
push
adc
sub
cmc
inc
inc
add
jo
lahf
cmp
rolb
das
dec
push
or
addb
jbe
rolb
adc
mov
cs
cli
dec
push
or
jecxz
add
jnp
ja
add
les
add
dec
and
int
int
mov
push
adcl
add
dec
push
cmp
sbb
dec
mov
xchg
aam
out
movsb
xor
test
addb
je
add
popf
sub
add
pop
xor
add
xor
xchg
jno
push
xchg
test
ror
data16
fstps
cwtl
arpl
stc
test
cwtl
add
lods
paddsb
cmpsb
cmpsl
jne
mov
add
add
fnstsw
add
arpl
or
mov
jo
jge
stos
xor
icebp
call
xchg
cmp
pop
jne
das
addr16
cmp
enter
mov
mov
push
jo
adc
cwtl
dec
xchg
mov
sub
push
cmc
xchg
push
ds
inc
add
iret
xchg
mov
fcomps
rolb
cmp
jno
das
and
jmp
inc
or
add
adc
sti
jp
rorl
sub
add
out
imul
loopne
arpl
mov
lcall
lods
pop
xchg
ljmp
fwait
pop
dec
subl
add
mov
cmp
jnp
add
movsl
in
cmpsl
pop
xor
and
sub
pushf
out
xor
pop
lahf
ss
sbb
sahf
mov
cmpsb
cmpsl
lea
dec
popa
xor
iret
cmp
jg
ja
adc
lahf
arpl
pushf
cwtl
or
stos
xchg
lahf
jecxz
sbb
insb
push
insb
movsb
cld
xor
mov
inc
xor
arpl
jno
add
insl
in
aaa
insb
fsts
push
push
rolb
div
jmp
xor
jg
add
push
rcrb
jb
cmpsl
cmp
int
cmp
adc
xor
scas
int
pop
cmpsb
push
movb
repz
sti
std
call
dec
aam
sbb
and
and
add
frstor
add
popa
rolb
cli
mov
lods
sbb
in
adc
and
idivl
mov
aas
pop
imull
push
imul
pop
jg
enter
and
cmpsl
dec
cld
sub
add
popa
or
xchg
push
in
mov
inc
test
outsl
cmp
ja
jmp
inc
imul
dec
and
pusha
add
sahf
cmp
movb
pop
push
xor
xrelease
lea
jb
add
repnz
in
xchg
mov
movsb
push
dec
lret
xchg
shrl
repz
add
cmovo
add
lods
mov
cmp
mov
inc
jmp
jge
add
add
leave
inc
add
les
lret
fbstp
jnp
sti
xchg
pop
fdivp
ror
push
cwtl
outsb
or
jbe
and
push
xorl
les
add
xchg
cmpsb
inc
cmp
dec
sahf
and
or
pop
imul
adc
lretw
mov
add
inc
movb
sbb
push
pushf
mov
xchg
push
in
or
cmpsb
lret
mov
jbe
sbb
fidivs
mov
std
xchg
pop
inc
add
jns
jmp
fyl2x
iret
das
icebp
stos
sub
lea
adc
stos
and
loopne
and
add
rolb
rcl
ret
popa
test
mov
add
jo
outsl
out
xlat
adc
or
xor
add
jl
cld
or
ja
xor
rolb
divl
pop
mov
xor
lret
ja
push
sbb
out
cmp
push
rclb
iret
insb
pop
out
or
mov
mov
mov
jmp
or
int
mov
pop
push
movsl
lds
and
sub
test
inc
add
mov
rol
add
std
add
addb
jb
mov
mov
lods
shll
add
dec
xor
dec
mov
ret
xchg
jne
mov
add
out
scas
cmpsb
in
add
andl
push
jb
add
pop
inc
mov
jne
scas
jl
fsubl
add
mov
les
sbb
mov
out
addb
mov
mov
ret
jecxz
add
cs
popf
xchg
movsb
loopne
mov
jecxz
or
push
sti
aad
dec
xor
and
add
push
xchg
fst
adc
cmp
lret
ret
add
in
pushf
mov
sbb
rolb
jecxz
xorps
hlt
out
push
xchg
xchg
fwait
popl
ret
mov
push
icebp
adc
int
adc
push
sarl
mov
xchg
add
in
bound
cli
lret
int
xchg
cmc
fsub
dec
mov
cwtl
xchg
add
sahf
add
cmpsb
rcrl
loope
shll
xor
mov
aaa
gs
inc
aas
xor
push
xor
add
insl
xchg
add
pop
jb
lods
mov
leave
mov
js
addl
adc
mov
shlb
mov
adc
sti
jo
pop
jns
and
jg
lret
mov
cmp
add
loopne
fistl
dec
dec
xchg
out
and
adc
jl
mov
sbb
jl
jne
push
addr16
iret
test
stos
ja
leave
movsl
lods
addb
rorl
jg
pop
add
sbb
and
lret
mov
leave
jb
push
mov
add
inc
jo
fs
cmc
add
in
or
fwait
and
xchg
sub
call
cwtl
cs
mov
std
adc
into
lahf
mov
pop
addb
mov
ret
adc
xchg
and
adc
add
and
inc
add
addr16
jae
in
inc
add
add
nop
inc
addr16
stos
repnz
icebp
cmp
pop
sbb
js
les
les
fidivrl
add
jo
fdivp
dec
in
cmc
push
pop
nop
scas
jge
dec
les
or
and
das
mov
jbe
push
inc
add
sahf
rolb
je
sbb
xchg
xchg
js
push
popf
pop
cmp
pop
push
mov
mov
pop
add
cld
fs
fldz
cmpsl
cli
leave
les
paddsw
fwait
repnz
add
mov
xor
pop
xchg
mov
xchg
add
xchg
mov
jbe
xchg
push
mov
mov
aaa
es
mov
jg
jbe
add
mov
push
jg
push
movsb
stc
popa
inc
sbb
push
stos
lods
and
add
add
fists
dec
cmp
and
sub
sahf
sbb
mov
mov
inc
je
in
aas
and
jmp
loope
addr16
ret
loopne
sbb
addr16
push
repnz
lret
movb
add
ljmpw
and
add
jbe
rolb
arpl
xlat
lahf
mov
shrl
fildl
montmul
cmpsb
inc
add
sub
loop
cmp
in
movsl
idivl
mov
sbb
xor
cli
jb
movsb
imul
popf
fs
pop
dec
aam
into
insl
pop
xor
cmp
in
xor
push
repz
aaa
xchg
mov
mov
jns
cwtl
pop
out
add
inc
mov
es
mov
or
add
jl
arpl
rolb
shll
and
fdiv
arpl
push
sbb
adcl
stos
jnp
or
inc
add
add
cmp
add
mov
popf
ret
ljmp
inc
add
push
push
pushf
repnz
aad
jnp
xchg
push
aam
rcrl
jbe
or
outsl
jnp
inc
pop
outsb
mov
rcl
out
mov
xor
and
loope
dec
inc
stos
sub
cmpsl
rolb
inc
aaa
fstps
add
add
inc
add
test
mov
je
cli
pop
pop
aaa
jne
sbb
add
ss
cmp
repz
lods
push
xchg
add
or
lods
jo
ficoms
stc
pop
and
jmp
out
test
add
das
xchg
push
ret
dec
into
add
or
mov
sbb
inc
add
dec
test
aaa
add
cmp
push
add
stos
lock
inc
add
stos
xchg
or
xor
pop
lods
push
pop
rcrl
mov
mov
add
imul
cld
dec
stos
lret
icebp
xlat
mov
mov
movsb
cmp
add
xor
or
ljmp
sbb
std
ficomps
add
push
sahf
inc
add
negl
lock
add
fsts
mov
xor
dec
mov
icebp
lret
ja
xorl
add
dec
rolb
imul
pop
mov
and
int3
and
pop
into
movb
in
add
jns
push
pop
mov
in
leave
add
add
mov
mov
jbe
test
mov
jg
dec
add
jb
add
cld
insl
xchg
add
fs
rolb
mov
sarl
push
ja
addb
add
lods
cmp
mov
fs
adc
into
stc
out
dec
sarl
add
jbe
addb
dec
ret
jbe
add
mov
or
dec
pop
movsl
pop
mov
mov
add
test
jg
add
sbb
pop
adc
adc
test
addl
pop
stos
decl
add
and
lods
and
cmp
add
rep
jge
rolb
outsl
jge
and
add
rolb
in
jnp
push
jae
inc
add
scas
mov
imul
sbb
in
mov
jle
add
add
adc
scas
lods
and
pusha
add
mov
jl
lahf
lods
arpl
movsl
or
stos
arpl
in
stc
add
subl
jns
mov
jnp
jmp
add
es
jge
or
adc
shll
pop
adc
aam
inc
add
adc
xor
dec
test
add
add
iret
stos
fiadds
mov
add
mov
dec
test
jmp
push
aaa
or
sub
scas
jnp
sbb
dec
cmpsl
iret
sub
and
push
subl
jb
mov
call
je
incl
or
dec
sbb
jmp
movb
push
jb
cmp
mov
sbb
and
xor
loopne
sarb
sbb
mov
cmp
cmpsb
stos
and
adc
mov
addb
imul
xchg
mov
loopne
call
fildll
mov
add
lcall
pop
cmc
mov
incl
les
pop
movb
sub
aad
gs
repz
insb
or
imul
pop
jmp
or
add
insl
or
xor
cmp
icebp
test
movsl
repnz
dec
xchg
decl
jae
shll
popa
out
icebp
cs
and
xlat
sub
add
jo,pn
in
mov
lods
insl
rolb
lods
into
into
jecxz
gs
sarb
or
jo
add
push
or
inc
add
test
adc
xor
and
jl
in
mov
shrb
jmp
add
mov
cmp
adc
inc
add
push
add
fwait
out
xchg
xchg
add
fisttpll
pop
add
in
or
add
add
push
lahf
fadd
sub
sbb
mov
and
out
aad
dec
inc
ret
gs
sarl
hlt
push
add
push
add
mov
xor
iret
nop
imul
adc
rolb
mov
inc
add
xor
sub
fmuls
sub
mov
bound
xlat
pop
mov
add
movb
mov
mov
push
icebp
push
out
sub
fwait
std
dec
mov
xchg
dec
je
inc
sbb
fstpt
lock
loope
es
add
xchg
imul
insb
fmuls
adc
outsb
sahf
pop
push
mov
jge
loope
les
mov
push
inc
add
pop
and
les
lea
rorl
add
mov
mov
aaa
popl
sub
rcrb
mov
mov
mov
inc
add
sbb
cmp
or
repz
xchg
lcall
popf
mov
add
sahf
push
fdivr
popf
cmpl
cmpsb
push
sbb
sbb
or
add
sahf
cld
leave
repnz
cwtl
gs
xchg
xchg
dec
shll
fbstp
add
dec
add
les
adc
cmpsl
push
pop
fnclex
mov
nop
xor
jne
mov
mov
mov
pop
pusha
add
scas
mov
dec
mov
adc
ja
daa
sbb
cmp
nop
jecxz
push
cmp
ss
test
scas
jge
fiadds
mov
rol
add
add
enter
stos
int3
cmp
dec
movb
pop
fisubrs
mov
out
and
in
aam
pop
aas
mov
xchg
sub
mov
iret
fmuls
mov
out
jb
in
push
sub
pop
jge
and
repz
mov
inc
add
data16
sbb
inc
add
test
and
sub
add
gs
add
aam
dec
stos
dec
leave
sub
push
int3
scas
cmp
push
inc
mov
push
xor
ret
nop
mov
sub
shl
mov
sbb
test
add
stos
fucom
cmp
jne
cmp
add
inc
push
jg
out
je
ss
cltd
es
iret
dec
dec
ret
cmc
out
or
add
xor
aas
popf
aas
lods
test
cs
addb
movb
aam
sbb
mov
imul
or
add
fwait
cld
push
add
inc
mov
pop
lret
je
outsb
clc
mov
pop
stos
rcl
inc
add
add
scas
mov
mov
pusha
add
gs
cmp
popa
lock
cmp
xor
inc
add
cmp
add
out
cmp
jno
xor
repnz
rcll
rcrb
in
sbb
xor
icebp
jns
pop
inc
add
out
mov
add
or
add
xor
or
and
sub
sub
ljmp
inc
out
loope
cmp
nop
js
cmp
lret
fadd
xor
mov
pop
pop
lods
push
add
aaa
dec
sub
ret
jno
xor
pushf
xchg
ss
add
leave
mov
pop
mov
xor
loopne
cli
jmp
xor
out
and
xchg
pushf
push
imul
add
sbb
add
mov
adc
call
pushf
ds
pop
mov
add
fsubr
pop
mov
shlb
xor
addr16
sbbl
ret
add
mov
loop
sbb
mov
xlat
out
sub
dec
push
mov
lods
xor
mov
pop
out
and
dec
pop
mov
scas
sub
adc
jo
sub
push
dec
or
push
sbb
cmp
xor
add
inc
inc
add
movb
mov
cmpsb
fcomp
ret
inc
add
lret
push
xor
xlat
loope
mov
loope
fstps
out
pushf
push
imul
sbb
add
add
pushf
pop
in
leave
dec
inc
add
je
in
js
shrl
mov
push
mov
int
pop
stos
xor
leave
mov
or
push
jmp
pop
xor
push
daa
dec
stc
cmp
divb
mov
cld
xor
or
push
imul
insb
push
loope
mov
mov
jecxz
add
les
stos
addb
jmp
cmpsb
test
cvtps2pd
cwtl
or
jecxz
add
xor
push
lock
rorl
push
inc
add
pop
mov
mov
jb
pop
in
cmpsl
dec
push
sbb
lahf
jo
mov
pop
fistpl
test
mov
gs
insl
cmpsl
and
mov
pop
jae
mov
inc
pusha
add
leave
push
lret
cmp
pop
hlt
adc
outsb
fdivrp
pop
insb
jo
cmovns
inc
add
ja
pop
sti
jecxz
in
imul
rolb
je
pop
aaa
xchg
mov
cmpl
pushf
data16
xor
mov
push
je
call
sbb
pop
cmc
mov
icebp
fwait
sbb
cmp
out
test
add
cmp
aad
pop
jle
sahf
lret
add
clc
inc
add
sub
mov
add
push
push
sbb
mov
xchg
adc
push
rcrl
and
inc
add
repz
lods
push
pop
xor
stc
jge
in
and
nop
add
add
pop
arpl
push
push
rolb
pop
addb
cld
aaa
scas
data16
outsb
jp
popa
cld
add
insl
sub
pop
sub
hlt
jns
xchg
scas
cmp
add
dec
imul
xchg
xor
dec
lea
xchg
jne
hlt
inc
add
cmp
fstcw
ja
repz
std
pusha
add
lods
and
xchg
inc
add
add
jns
insb
outsl
sbb
mov
lods
lds
sub
in
pop
out
add
pop
inc
add
mov
rcrb
dec
pop
sub
pop
xchg
loop
sub
fwait
sti
ds
insl
push
dec
pop
xchg
push
imul
gs
fldt
mov
add
out
push
adc
xor
xor
xchg
inc
add
xchg
orl
add
stos
aas
sub
jb
fwait
rcrl
sbb
or
mov
xchg
stos
and
leave
ss
cltd
lret
lea
negl
fdivrs
push
xchg
imul
les
pop
fsub
push
mov
fwait
outsl
or
test
pop
ds
nop
lcall
add
xchg
mov
sahf
inc
add
or
addb
mov
daa
aam
enter
xchg
inc
add
add
fs
push
sub
sub
incl
repnz
pop
daa
xor
nop
iret
add
mov
popa
dec
xchg
cmp
addr16
ja
adc
dec
jmp
sub
or
xchg
enter
add
sbb
stos
inc
in
xchg
dec
sbb
xor
int3
popf
rcll
mov
mov
das
dec
dec
ret
cmp
push
addl
add
arpl
push
add
bnd
test
mov
stos
sbb
int3
test
add
insb
dec
cltd
scas
adc
add
xchg
mov
cmpsb
or
addb
add
or
out
hlt
or
mov
les
fiadds
es
and
push
lcall
scas
aam
ss
and
mov
adc
insb
and
les
adc
insb
clc
or
dec
jge
movb
call
call
xchg
fldl
add
mov
xor
pop
lea
or
jge
push
call
or
popa
add
addb
xor
les
mov
pop
pop
ja
add
mov
call
loop
pop
pop
int
inc
pop
out
jns
aad
stos
push
leave
enter
dec
xchg
sub
sahf
push
or
xor
cmp
repz
js
adc
add
add
or
adc
cli
add
fld
shll
lock
mov
sahf
adc
imul
les
pop
jns
add
test
stc
bound
stc
iret
push
int3
addb
sbb
pop
sbb
xor
inc
add
mov
xchg
pop
aas
aad
add
adc
mov
imul
lods
rcll
cmp
into
jecxz
jge
lahf
call
cmp
scas
repz
push
add
iret
insl
fldenv
sub
mov
jp
add
sti
jnp
xchg
or
jno
icebp
adc
cld
arpl
loopne
add
xchg
xchg
inc
add
fcomip
jo
mov
add
xadd
add
lds
sbb
pop
cmc
addl
or
dec
sub
leave
xchg
sbb
adc
push
add
adc
lret
aad
and
int
popa
mov
sbb
add
mov
adc
jp
sub
lods
lahf
in
add
sbb
test
test
lret
push
xchg
mov
les
loopne
test
or
sbb
push
adc
notb
mov
push
loope
hlt
insb
fisubrl
push
or
shrl
xchg
add
insl
fwait
adc
jno
js
outsb
fnstsw
cmp
push
push
out
in
sbb
in
mov
xchg
mov
add
add
sub
sub
into
ret
and
push
fisttps
aaa
orl
dec
push
mov
lahf
call
div
pushf
mov
cwtl
lcall
and
hlt
inc
add
add
mov
add
aam
in
mov
jl
ljmp
xchg
sub
pusha
add
into
xor
jbe
jmp
test
add
mov
jg
mov
js
divl
leave
xchg
ret
jne
add
cli
xor
mov
and
dec
rorb
sub
mov
mov
pmullw
fcoms
push
sbb
add
and
call
rcr
nop
cmp
cmp
jbe
adc
or
fstpl
xor
pop
daa
inc
cltd
jo
ret
xchg
xchg
iret
or
mov
into
xlat
out
mov
mov
jl
jmp
bound
dec
sub
add
add
aad
jnp
repz
pop
pop
aas
movb
or
enter
cmp
mov
sbb
fisubs
inc
dec
add
cld
add
bound
cltd
shll
sbb
add
je
and
add
xor
fstpt
dec
or
ljmp
outsl
outsb
dec
leave
xor
jnp
push
or
movsl
jl
cs
inc
scas
repnz
data16
andl
shll
and
ds
sub
std
pop
cld
or
ljmp
jb
loope
push
dec
cld
push
outsb
cld
cmp
cmpsb
xchg
daa
fcmovb
ss
pusha
add
cmp
cmp
in
dec
movsl
arpl
add
lods
in
scas
into
mov
add
jge
int3
js
jo
ret
or
addr16
xlat
adc
enter
push
cmp
add
adc
dec
adc
push
insl
mov
popf
outsl
xor
daa
add
xchg
jg
scas
ja
lods
add
xor
add
fisubrl
xchg
mov
and
dec
add
repnz
and
aas
mov
js
add
add
xchg
fiadds
ljmp
mov
mov
cmp
mov
cmc
add
add
mov
sti
outsb
sarb
mov
das
pop
push
push
pop
cmp
xor
es
movsl
xchg
cmp
sub
stc
ja
pop
mov
movsb
hlt
add
or
je
std
loop
int
aad
xor
sbb
addb
mov
mov
flds
dec
pop
jnp
in
add
cmp
jns
push
push
stc
or
cmpsl
add
jae,pn
movsl
inc
icebp
bound
dec
xchg
test
and
lods
dec
cmp
mov
dec
cltd
ja
lret
inc
addb
and
xor
mov
mov
in
dec
xor
lea
add
mov
pop
rolb
icebp
fsubs
sub
aad
add
stos
mov
insl
les
fwait
xchg
repz
mov
mov
add
inc
add
inc
push
or
and
push
add
xchg
rcrl
xor
add
pop
sbb
pop
insl
mov
in
imul
or
push
or
in
mov
movsb
ss
jo
inc
insl
mov
inc
add
jmp
test
daa
jo
sbb
dec
incl
jo
cmp
daa
shr
and
xchg
insb
cs
dec
fistpl
sbb
sub
add
add
pop
std
stos
pop
mov
pop
and
mov
add
and
add
stc
sar
hlt
xchg
enter
cmp
adc
adc
jnp
leave
or
daa
pop
cli
pop
clc
fstpl
mov
cmpl
xchg
xchg
shrl
leave
rorl
add
test
jl
adc
addb
addr16
dec
loope
xchg
xchg
mov
inc
enter
das
ljmp
sub
addb
xor
jle
dec
inc
cli
nop
mov
int
fimull
cmc
or
or
xor
popf
shrl
add
daa
out
pop
hlt
add
pop
adc
mov
sub
out
lock
sub
push
movb
inc
add
rolb
icebp
cld
xor
aad
add
in
call
add
scas
icebp
push
or
cmp
test
adc
test
add
mov
aam
in
fistl
movsb
div
fidivl
inc
push
add
add
scas
add
adc
mov
mov
out
loop
pop
les
out
adc
pop
pop
inc
add
fisttps
mov
jge
mov
imul
add
add
gs
mov
inc
out
mov
add
int
add
cmp
fidivrs
mov
add
cwtl
movb
in
arpl
aad
clc
dec
mov
or
imul
add
add
or
fwait
mov
xor
add
cli
les
jmp
aas
push
xchg
mov
imull
imul
add
pop
into
jmp
or
pop
add
xchg
movsb
lret
sbb
inc
add
add
ja
insb
xor
mov
insl
addl
out
jbe
cmpsl
popa
jmp
jge
xchg
out
sti
movb
rolb
ljmp
inc
xlat
pop
movsb
test
mov
mov
clc
mov
aas
xor
int3
addb
test
pop
leave
adc
inc
cmp
dec
push
add
pop
mov
out
and
scas
je
scas
adc
rolb
add
popa
insl
inc
add
lahf
dec
jns
dec
push
mov
mov
mov
mov
add
andl
fcomip
inc
add
in
imul
lea
mov
out
jb
or
inc
mov
mov
jmp
inc
jns
enter
scas
lea
pop
push
out
jo
add
das
nop
push
add
mov
mov
shll
add
hlt
push
or
decb
inc
add
addb
pushf
adc
xor
push
arpl
cmpl
pop
lret
push
arpl
jae
out
aad
sub
ret
add
add
pop
popa
notb
jp
movsb
imul
fwait
mov
xchg
jb
outsb
or
shlb
fnstsw
int3
outsb
xchg
sti
pop
sarl
add
mov
movsb
mov
dec
add
mov
sbb
adc
lock
outsl
ljmp
addb
call
shll
and
or
mov
pop
jecxz
addb
lahf
into
mov
adc
icebp
arpl
add
add
pop
rol
add
inc
cltd
dec
xor
stc
cmp
pop
in
cwtl
nop
pop
xchg
in
dec
xlat
sub
out
iret
aas
mov
dec
mov
int3
sbb
push
insb
push
xchg
arpl
jb
cmpsl
ja
cli
jns
aad
add
stos
push
push
hlt
out
in
out
add
mov
add
mov
or
ret
fimuls
mov
dec
jmp
repnz
mov
add
sbb
xchg
push
push
inc
arpl
sbb
test
sbb
pusha
add
lcall
jae
add
sbb
cltd
cmp
rcrb
mov
xor
jno
out
addr16
add
jbe
add
xor
or
and
pushf
movsl
xchg
ret
in
mov
orl
insl
dec
mov
fmull
xchg
or
std
pop
ljmp
outsb
lret
add
sbb
out
fcoms
pop
add
incb
out
xchg
xchg
push
sub
cmp
add
mov
and
int3
movsl
and
ss
mov
inc
insl
mov
lcall
jmp
sbb
cmpsl
sarb
xchg
inc
add
repnz
sbb
fisubl
dec
mov
loope
aas
jmp
testb
in
mov
cld
mov
dec
mov
mov
movsbl
ds
into
pop
ds
fiadds
ss
push
xchg
xchg
mov
adc
dec
xlat
gs
mov
dec
sysret
test
xor
jnp
sub
rolb
into
push
pop
repnz
decl
movl
kaddw
add
mov
js
push
or
add
loopne
cld
mov
add
imul
sbb
test
and
xchg
enter
push
lods
cmpl
repnz
movb
mov
rolb
pop
mov
and
xchg
loope
mov
xchg
mov
push
pop
mov
rcrl
aam
adc
inc
adc
mov
xor
aaa
add
out
sub
pop
outsl
xchg
pusha
add
aad
out
popf
bound
test
and
add
mov
cltd
add
adc
hlt
addb
scas
jecxz
adc
and
xor
xor
imul
add
shrb
repz
and
cmp
xchg
repz
imul
mov
add
out
test
push
add
out
xchg
push
adc
cmp
pop
imul
sub
mulb
add
sbb
test
inc
add
jmp
mov
movsb
inc
mov
popf
test
xchg
dec
cs
cmc
js
dec
sbbl
and
notb
jo
lret
sub
jl
loope
mov
std
and
in
dec
pop
mov
xor
xchg
mov
add
and
sbb
mov
add
imul
push
xor
xor
je
dec
sti
roll
roll
rclb
add
sub
jo
xchg
mul
popf
pushf
xchg
add
fidivs
add
sub
add
ljmp
mov
sbb
xchg
mov
push
mov
mov
mov
fsubl
call
imul
imul
cmpl
bound
int3
ja
movb
mov
cmp
jo
add
inc
jb
cmpsb
lea
inc
add
inc
adc
aad
add
fildll
clc
into
ds
sbb
mov
inc
inc
add
movb
sub
add
fistpll
adc
mov
sbb
sbb
jmp
imul
lea
loop
push
xchg
adc
addb
sbb
add
mov
sub
inc
add
stc
std
sbb
inc
add
add
mov
mov
sub
pop
incl
dec
pop
add
stos
push
cmp
test
and
out
and
and
jo
stc
insb
and
std
mov
dec
xchg
hlt
les
bound
lahf
lahf
adc
aas
iret
lcall
adc
add
das
xor
jp
fcmovne
inc
fstl
jg
mov
mov
add
mov
pop
cmpsb
rcll
push
sbb
mov
sub
inc
mov
xor
rorl
loope
repnz
in
jge
add
mov
dec
out
sahf
nop
mov
pop
adc
int3
repnz
test
stc
mov
inc
add
dec
or
test
jns
cmp
mov
popf
add
inc
add
outsb
dec
xchg
lock
imul
repnz
inc
xchg
inc
adc
adcl
out
lds
fwait
push
and
push
ret
int3
mov
add
pop
pop
or
adc
out
addb
cmp
icebp
and
and
add
insb
push
xchg
and
mov
aad
sbb
rcl
imul
cli
jg
loope
inc
jmp
xchg
sti
roll
add
jns
movb
lods
sbb
movsl
sarl
loop
mov
mov
inc
push
pop
push
lret
pop
xor
imul
cmp
inc
add
xchg
mov
add
xchg
pop
sbb
arpl
xor
mov
lea
nop
jmp
outsl
stos
mov
add
push
out
push
rorl
cmp
fdivrs
insl
stc
imul
icebp
mov
add
cltd
out
xchg
push
mov
wrmsr
adc
cwtl
mov
pop
sti
or
push
lea
in
inc
push
add
add
in
sub
hlt
jmp
add
mov
cmova
mov
mov
insb
cmpsl
sbb
movsb
stos
inc
add
or
xchg
mov
movb
fwait
icebp
out
mov
int3
pop
in
fsubs
push
filds
add
shll
jle
les
sub
add
lods
into
insb
lds
xchg
in
loop
pop
ss
xchg
out
inc
jg
jbe
sub
mov
push
ror
mov
xchg
push
dec
int3
mov
icebp
pusha
add
in
movsb
jnp
and
xchg
rorl
add
sub
pusha
add
xor
add
pusha
add
dec
in
nop
lret
lds
add
cmc
lret
dec
loop
jp
mov
fdivrs
int3
loopne
pop
cmp
cltd
adc
mov
in
movb
cltd
push
mov
pop
xchg
shrl
sbb
push
push
add
add
fmuls
mov
repz
loop
fwait
js
jmp
adc
add
mov
inc
add
xchg
xor
addl
add
push
ud2
lcall
xchg
js
into
lods
mov
add
insb
xchg
dec
scas
pop
insl
xchg
mov
xchg
stos
add
xor
mov
out
loope
add
test
xchg
jl
add
cli
movsb
or
add
adc
xor
mov
cwtl
or
into
add
dec
leave
arpl
jne
and
adc
xchg
cs
mov
jmp
push
fisubrl
mov
push
adc
push
add
mov
jns
inc
add
fs
imulb
sbb
cs
xchg
repnz
divl
xor
lds
add
pushf
mov
jl
int
jecxz
pop
mov
aas
lock
mov
jecxz
fcomps
mov
addb
je
aaa
jle
shlb
add
mov
not
mov
mov
int3
inc
add
call
repnz
test
aas
cmp
cmp
lret
addb
test
in
add
pop
movl
loop
movsl
inc
add
mov
mov
or
jg
dec
stos
add
inc
add
movsl
adc
call
dec
dec
jnp
jno
add
out
jmp
into
cmp
add
in
test
ret
inc
jb
mov
xchg
fnstcw
iret
insb
repz
bound
repz
addb
push
jns
push
mov
fwait
dec
fisubrl
bound
cltd
xchg
rolb
aad
leave
pop
mov
pop
mov
cmpsb
dec
cmp
das
xor
pop
lds
outsb
pop
cmc
lods
push
pop
addr16
mov
mov
add
xchg
jge
movb
mov
mov
lods
cmp
xor
add
scas
jmp
mov
xchg
push
cwtl
and
jns
daa
inc
fs
rolb
lea
adc
lret
cli
cld
loop
xor
iret
int3
dec
pop
stos
sbb
inc
add
xchg
mov
add
xor
jmp
out
pop
sbbl
loop
push
shll
in
je
stos
cmp
jbe
mov
ficoml
pop
ja
loopne
sti
pop
xchg
cmp
mov
cmpl
idiv
xor
fildl
imul
ja
inc
daa
movb
popf
lods
inc
jae
jno
arpl
add
ja
pop
test
stos
cmp
lahf
enter
test
inc
dec
int
popa
out
xchg
inc
aas
fstpt
pushf
xchg
jo
call
fdivrs
movsl
movsb
fstps
add
inc
add
push
xchg
push
test
test
leave
movb
xor
cwtl
ja
mov
xor
jge
inc
add
sti
fisubrl
cmp
cmp
xlat
pop
int
adc
and
adc
mov
insl
sbb
add
sub
cmpsl
and
andl
cwtl
das
or
in
xor
mov
jb
lahf
xchg
repnz
insl
addb
movsl
pop
adc
rclb
adc
repz
xchg
inc
sub
or
add
cmp
das
js
ja
jne
and
cmp
add
inc
add
adc
dec
outsb
fisubl
cmp
cld
sahf
repnz
add
adc
addb
jecxz
pop
pop
into
and
addb
xor
or
cmp
ficompl
mov
repnz
ret
cld
out
jge
movb
mov
add
jle
add
nop
jg
inc
add
jo
add
test
push
mov
icebp
xchg
or
xor
inc
add
or
adc
lods
imul
and
dec
int
inc
add
add
iret
mov
hlt
push
xor
adc
mov
insb
dec
jns
nop
pop
jbe
add
insl
adc
push
pop
fs
fldenv
adc
dec
mov
rcl
pusha
add
add
imul
xor
cld
cs
popa
fcompl
leave
scas
out
sub
sbb
jmp
iret
lcall
rcl
leave
dec
push
fwait
imul
xor
sub
xlat
ret
inc
imul
mov
mov
popa
sbb
lret
xchg
adc
pushf
xchg
mov
push
jae
mov
add
inc
add
xor
stos
adc
add
icebp
insb
cld
sub
dec
lret
lods
nop
pop
xchg
inc
mov
and
mov
out
add
leave
sbb
andl
sub
addr16
les
rcll
ja
dec
push
inc
add
iret
cs
jo
in
mov
std
push
addb
fnsave
call
imul
lods
pop
mov
scas
stc
rclb
stos
dec
mov
in
xchg
dec
popa
cli
mov
sub
mov
gs
inc
in
push
insb
push
mov
cmp
fdivs
sub
mov
add
inc
add
jo
inc
add
fcmovnb
add
or
add
roll
xchg
nop
shll
iret
les
add
movb
pop
or
movsb
mov
dec
xchg
aam
jmp
dec
sti
sub
xchg
and
fstpl
push
mov
mov
mov
or
xorl
jo
mov
test
lds
add
pop
sub
or
repz
insb
push
and
stos
jmp
imul
mov
cld
pop
es
xchg
scas
xchg
addb
sub
mov
mov
iret
test
ss
inc
sub
loopne
shlb
ds
js
rolb
add
push
aam
sub
pop
call
mov
test
js
idivb
sbb
and
or
or
test
lods
cmp
enter
dec
mov
adc
mov
sub
add
push
cmp
test
pop
movb
add
add
sub
dec
sub
cmpsb
xchg
sbb
bound
push
movsl
cwtl
adc
mov
sbbl
cmpsl
pop
cmp
and
unpcklps
and
mov
jbe
das
test
roll
movb
sub
mov
push
sub
aaa
fldt
jbe
mov
sub
sbb
mov
inc
imull
mov
bound
inc
add
ds
lock
add
jl
add
xchg
xor
out
imul
dec
movsb
mov
out
cmpsb
sub
mov
into
jl
cmp
dec
lea
mov
sbb
jae
xor
dec
xchg
decb
mov
ljmp
inc
add
push
pop
scas
cwtl
out
mov
mov
rolb
sub
insb
aas
call
daa
addr16
int
add
movsb
out
outsl
fcoml
and
jecxz
dec
addb
mov
or
std
cmp
and
shrb
mov
pop
xchg
push
add
add
mov
push
cmc
pop
cmpsl
mov
fisubs
push
add
dec
addr16
cwtl
negb
xor
in
push
cwtl
mov
xchg
lods
jecxz
movsl
mov
add
dec
jae
jnp
insb
and
jmp
sahf
cmpsb
mov
sub
leave
rolb
jge
subl
test
push
xchg
cmp
mov
sub
fwait
pop
insb
popf
jns
addb
add
dec
push
pop
iret
inc
add
lahf
push
shrb
jp
mov
mov
icebp
add
add
imull
fdivrp
repz
psubw
int3
or
sub
adc
inc
cltd
or
movsb
add
pop
pop
dec
dec
dec
lcall
pop
insl
xchg
stc
xor
sbbl
cmovp
adc
add
push
gs
ljmp
in
imul
push
add
push
out
pop
jecxz
arpl
out
arpl
nop
cmpsb
sub
dec
popf
aad
add
lea
repnz
dec
push
and
mov
ret
je
xor
call
rcrb
add
bound
scas
call
fdivr
faddl
add
pusha
add
loope
sub
cmc
xchg
inc
daa
icebp
enter
cs
std
fstpl
mov
nop
out
xchg
addb
test
leave
mov
mov
dec
fwait
cli
jo
lea
dec
cwtl
inc
push
ds
push
add
push
btc
add
arpl
outsl
cltd
int3
out
outsl
or
insl
push
scas
insb
enter
cmp
lcall
sub
std
out
into
jmp
sahf
es
iret
xchg
adc
sahf
cs
out
jmp
sbb
repz
out
addr16
xchg
int
ss
ficompl
rcrl
jmp
bound
cmp
add
out
xchg
adc
test
cmp
dec
insb
adc
and
jecxz
pop
leave
xchg
pop
shl
dec
dec
icebp
ljmp
aaa
pushf
inc
pop
xchg
and
movsb
lcall
jno
gs
sub
cmp
push
outsb
mov
mov
stos
jbe
mov
mov
mov
das
popf
sub
push
cwtl
rorb
dec
ljmp
bound
iret
gs
cmp
aaa
imul
addr16
jecxz
xchg
sub
les
insl
test
icebp
adc
push
rolb
add
pop
hlt
cmp
xchg
mov
jbe
dec
icebp
mov
cmpsb
xchg
mov
add
add
mov
int
push
insl
add
subl
dec
jg
mov
or
sub
adc
and
cltd
ss
lcall
dec
push
addb
jo
xor
mov
outsb
inc
add
mov
mov
mov
adc
dec
push
dec
jb
aam
dec
fld
add
xchg
fwait
adc
sahf
bound
lret
adc
movb
aad
sbb
jg
movsb
andnps
mov
cli
into
inc
add
addb
sub
add
lcall
pop
jne
shl
in
add
adc
je
add
jg
cli
and
lret
scas
xchg
std
xchg
in
add
fsubs
adc
les
sbb
scas
mov
popa
push
jno
daa
cmc
nop
add
loopne
mov
add
add
loope
out
call
sub
xor
mov
cmp
pop
mov
inc
repz
je
push
into
addr16
pop
dec
xlat
int3
xlat
inc
add
int3
movb
loopne
insl
jl
rep
movsb
insl
sbb
mov
push
addb
sahf
jmp
sbb
lahf
inc
pop
xchg
divb
add
fcmovnbe
roll
jmp
outsl
cmc
xor
out
les
dec
sbb
movsb
data16
hlt
aam
pop
pop
out
pop
and
lahf
jo
xor
sub
jl
pushl
imul
mov
or
inc
mov
jo
push
dec
and
adc
ret
inc
add
jg
or
lock
outsl
dec
cmp
insb
and
lret
stos
call
sti
cmp
std
test
mov
inc
or
cmpsl
xchg
jo
add
add
stc
cmp
movb
test
aam
or
xchg
movsb
jl
add
in
mov
fisttpl
cmp
sub
add
scas
daa
movsw
mov
pop
mov
dec
push
fildl
fcoml
imul
inc
add
daa
jmp
cmp
xchg
popa
in
fs
adc
jo
movsl
xchg
inc
add
movb
int3
jmp
rclb
add
rcrl
sbb
inc
hlt
xchg
pusha
add
xchg
std
or
mov
pop
into
add
inc
in
enter
fcoml
pushf
dec
push
add
mov
mov
add
les
jmp
out
les
cltd
int3
xchg
add
ret
div
jle
ja
adc
int
pop
rcrl
inc
xor
bndstx
imulb
add
or
add
jo
mov
pop
mov
and
lods
imul
ret
dec
sti
push
fmuls
or
add
sub
lock
jmp
insl
inc
add
add
rolb
imul
outsl
push
jge
mov
jno
test
in
stc
jg
cs
data16
pusha
add
add
outsb
xchg
xor
cmp
arpl
lret
xor
mov
sti
es
jmp
jmp
into
xor
inc
imul
push
add
jns
xor
fiaddl
mov
add
pop
fadds
adc
add
mov
icebp
mov
jmp
and
pushf
mov
imul
push
and
cmp
mov
pop
call
gs
fisubs
scas
lcall
mov
dec
xchg
enter
movsl
push
pop
push
mov
pop
fstl
sbb
adc
dec
pop
pop
lea
or
stos
imul
cs
stos
int
push
mov
mov
incb
loop
push
and
in
in
add
mov
ljmp
xchg
jno
mov
add
ret
cmp
and
xchg
adc
pop
sbb
fdivs
cwtl
out
insl
lock
movb
js
jge
mov
and
mov
xchg
jg
fcom
inc
or
sub
xchg
aaa
adc
fcmovne
pop
dec
mov
sbb
or
add
add
inc
add
test
ljmp
inc
add
stos
inc
add
jmp
xchg
out
aam
lds
fcompl
cs
add
fcomps
jo
push
add
cmpsl
je
mov
cmpsb
xlat
cwtl
push
sub
push
iret
cwtl
push
xor
jecxz
add
xchg
xchg
addr16
sub
loope
cli
lret
lock
xchg
adc
stos
push
jecxz
dec
call
loopne
je
add
add
fs
cmp
jg,pn
add
sub
and
repz
repz
js
push
mov
aad
add
mov
xchg
jnp
cmpsb
xchg
dec
leave
jo
dec
mov
adc
add
and
mov
movsb
jb
clc
add
ret
pop
xor
add
push
test
xor
sub
push
add
pop
jnp
dec
std
and
pop
lcall
mov
xchg
jmp
fisttpll
sbb
hlt
bsf
xor
sbb
sub
xchg
popf
fsubl
ljmp
xor
xchg
mov
jp
cmp
inc
add
ss
dec
sub
in
sub
xchg
sub
dec
adc
sub
jae
inc
xchg
sahf
mov
repz
or
cmpsl
sbb
xchg
ljmp
jecxz
rcrl
mov
jne
test
data16
or
loopne
test
data16
mov
mov
scas
loope
rcrb
dec
aam
sub
ds
rorb
dec
repz
out
sub
pop
test
repnz
mov
testb
push
testl
push
dec
loop
stos
iret
xchg
sbb
aaa
icebp
xor
popf
sub
je
mov
cmp
pop
xor
push
in
aaa
cmp
dec
cmp
aad
sbb
xchg
pushf
adc
cmpl
inc
ret
cli
out
daa
jbe
mov
mov
add
test
mov
test
lea
xor
or
popa
inc
pop
imul
add
add
dec
xlat
cmc
jp,pt
sub
add
mov
jo
sbb
rorl
push
into
sahf
gs
cmp
cmp
loope
rcl
add
setl
aad
inc
arpl
lret
rolb
lret
popl
add
sub
jae
aam
sahf
movups
pop
lods
xchg
aaa
and
fsubrs
add
lret
testl
push
lea
sub
and
pop
lds
pop
sub
adc
add
pop
cmp
aam
cmp
out
adc
fwait
add
push
xchg
shll
add
and
pop
out
out
fiaddl
add
adc
test
push
mov
sub
cmp
scas
cmp
add
adc
mov
add
insl
xor
outsl
test
xor
pop
jg
dec
mov
cltd
push
sahf
stc
sub
xchg
in
cs
lcall
popa
pop
lcall
xor
add
jmp
bound
add
outsl
shll
adc
imul
and
push
mov
jecxz
mov
rcrb
pop
clc
ficoml
mov
add
add
add
