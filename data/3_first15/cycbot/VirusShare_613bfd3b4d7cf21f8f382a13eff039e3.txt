es
dec
addb
lods
jle
push
iret
mov
sub
cltd
push
mov
xchg
fsubl
rolb
sti
loopne
mov
xor
mov
lea
xchg
and
mov
xchg
or
mov
add
rolb
mov
rolb
mov
mov
mov
add
outsb
mov
mov
add
inc
gs
mov
add
pop
inc
push
push
sbb
mov
add
jnp
mov
add
mov
mov
scas
and
mov
inc
outsb
fidivs
outsb
insb
jno
test
push
push
push
ret
sub
xchg
movsl
out
fwait
mov
insl
mov
or
sub
clc
addb
push
add
mov
xor
lret
mov
add
mov
inc
cmp
loope
test
arpl
and
mov
jno
push
orl
mov
inc
push
cmc
jnp
sti
std
lret
out
mov
pop
mov
mov
add
jge
aaa
jle
ret
and
mov
xor
add
mov
mov
jb
mov
jb
mov
mov
add
jne
cmp
pop
or
pusha
add
aas
out
scas
rolb
mov
add
add
push
push
mov
inc
add
mov
xchg
jge
int
pop
xchg
rolb
xor
mov
or
int
mov
stc
pusha
add
sbb
cli
fldl
adc
fnstcw
test
into
addb
fwait
psubsw
mov
add
cltd
movsl
or
cs
out
cmpsb
sbb
xchg
addb
sahf
fstpt
pop
rcrl
inc
ljmp
add
addb
xchg
mov
addr16
push
fstps
push
adc
mov
mov
dec
xchg
push
add
mov
pop
js
cmp
push
sti
mov
lea
add
pop
mov
dec
sub
add
mov
addr16
mov
rolb
and
mov
jae
jmp
add
add
dec
sti
jnp
ret
jg
pushf
fwait
inc
add
inc
imul
mov
add
add
inc
dec
clc
mov
imul
adc
push
xorl
stos
std
fldenv
mov
leave
ss
testl
mov
pusha
add
cmp
and
jmp
inc
addb
mov
jnp
jbe
in
or
add
lcall
inc
mov
lcall
shll
add
xor
lcall
add
xchg
push
repnz
addb
sbb
add
pop
push
add
insl
lcall
dec
xor
xor
mov
shll
mov
clc
and
rolb
adcl
add
cmpsb
mov
lods
cli
dec
popf
or
xchg
mov
add
add
add
add
adc
movsl
loopne
mov
push
lock
outsb
mov
add
cmpsl
ds
fcomps
add
popa
out
insl
leave
fsts
or
or
movsl
iret
in
push
pop
movsb
inc
out
data16
and
mov
dec
add
and
rolb
mov
add
idivb
or
pop
addr16
lea
lsl
push
test
subl
pushf
mov
lods
in
mov
sub
push
push
push
push
push
push
cld
call
add
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
movsb
addb
cmpsl
add
out
sbb
mov
push
add
movsl
fildll
out
lds
add
inc
jecxz
shl
add
mov
add
mov
add
pop
jmp
mov
inc
add
xchg
inc
and
mov
sbb
addb
xor
mov
mov
and
aas
cmp
dec
dec
aam
xor
mov
add
xor
add
add
or
dec
sub
movsl
push
jno
leave
mov
sbb
fmull
call
rcll
mov
test
xchg
dec
into
fdivrs
mov
cmp
add
int3
dec
cltd
mov
add
aad
bound
mov
add
mov
data16
xchg
mov
ret
push
add
jle
and
add
mov
inc
adc
mov
cmp
add
in
mov
test
out
test
aas
loopne
mov
mov
adc
js
add
add
mov
rep
stos
xor
mov
jp
test
push
cmp
daa
mov
pop
sub
jo
mov
mov
mov
mov
sub
bound
mov
mov
lahf
gs
fcoms
add
mov
and
mov
std
xchg
mov
and
pop
testb
inc
add
mov
xor
inc
add
mov
add
mov
mov
fmuls
xor
mov
dec
add
add
mov
add
mov
add
mov
add
add
aam
out
push
mov
fwait
bound
mov
jbe
insb
mov
lods
xchg
jl
mov
xor
and
mov
add
addb
jne
xchg
pop
add
addb
addb
push
jp
pop
ret
inc
add
pop
scas
adcl
cmc
mov
xchg
pop
scas
sub
mov
stos
and
adc
das
or
outsl
fwait
dec
ud0
inc
xor
mov
add
movsb
movsl
sub
xchg
add
addl
add
mov
popf
test
add
add
mov
push
add
addb
inc
add
cmp
mov
icebp
add
mov
cmp
push
add
cmp
adc
sbb
out
mov
mov
femms
icebp
dec
jae
fisubrs
ret
test
daa
xchg
push
inc
add
gs
add
mov
sarl
lods
xchg
jmp
add
fwait
inc
inc
stc
flds
aaa
stc
mov
mov
xchg
adc
mov
es
sbb
or
movsb
jns
add
dec
mov
jbe
mov
out
aaa
out
mov
mov
add
sub
add
and
adc
push
ss
js
mov
arpl
test
dec
js
hlt
jnp
aad
jbe
aad
out
lea
add
add
cmp
xchg
js
fs
add
add
pop
insb
imul
jo
mov
int
daa
adc
push
int3
mov
mov
jmp
mov
ret
xor
mov
and
dec
inc
pop
jno
add
push
mov
adc
mov
sbb
pop
cld
mov
jg
mov
mov
push
add
add
cmc
inc
pop
dec
bound
mov
out
inc
push
test
ds
sahf
or
sub
xor
mov
mov
xchg
push
out
rolb
mov
das
push
inc
and
dec
out
fnsave
add
add
sub
or
mov
add
mov
pop
inc
add
clc
jg
loope
push
xor
ljmp
ja
mov
mov
adc
mov
adc
add
les
inc
add
sub
lock
push
jbe
iret
into
dec
mov
add
mov
adc
pop
roll
push
and
mov
or
adc
mov
mov
lahf
gs
cwtl
mov
adc
mov
movsl
ljmp
lcall
fwait
or
je
jne
dec
aaa
lcall
sub
add
sub
mov
adc
sub
frstor
push
sub
mov
pop
ficomps
jb
mov
jp
add
mov
xchg
push
subl
mov
adc
jecxz
adc
sbb
mov
loopne
mov
add
inc
das
mov
scas
or
add
adc
fildl
add
add
dec
mov
sub
stos
lods
or
andl
or
mov
in
mov
push
jb
mov
add
iret
and
mov
xor
mov
es
aaa
out
out
sub
adc
mov
add
cs
cmp
mov
cmp
out
repnz
mov
add
cltd
int
gs
ffree
mov
mov
rolb
mov
xchg
mov
jp
addr16
lods
inc
gs
jbe
add
mov
iret
sbb
cmc
sub
sub
add
add
push
pop
sub
dec
cmp
jne
sub
popa
and
mov
push
cwtl
push
add
addb
inc
add
pop
jae
push
add
mov
add
mov
add
shl
add
add
pusha
add
sbb
bound
mov
adcl
mov
in
or
pop
cmpsb
jle
negb
mov
repz
cmp
fsubrl
popa
cld
push
mov
into
and
mov
cs
aaa
jb
mov
add
decl
aas
pop
fsts
push
mov
add
mov
imul
scas
inc
add
push
jnp
mov
and
dec
fsubrl
fisubrl
add
adc
mov
leave
mov
add
xor
mov
jge
adc
cmp
add
pmaddwd
xchg
cmpsl
pop
sbb
xor
mov
add
lea
cltd
in
add
mov
add
aad
push
jno
push
das
or
mov
mov
sub
mov
push
rolb
mov
imul
mov
les
loop
mov
xchg
pop
out
out
add
xchg
and
mov
rcll
add
je
arpl
push
or
mov
add
jmp
dec
jo
mov
es
int
mov
adc
in
pushf
mov
xor
insb
gs
inc
add
xor
mov
shrl
lock
jmp
out
xbegin
cmp
sbb
add
cmc
adc
push
add
sub
inc
sbb
add
fwait
enter
add
add
lcall
jno
add
mov
jge
adc
add
andl
test
add
mov
rolb
sub
add
jp
push
lds
out
xchg
push
push
add
fwait
loopne
mov
push
imul
mov
add
sub
je
cmp
in
jge
dec
ss
push
xchg
pushl
add
pop
in
dec
jp
cltd
jle
mov
pop
pop
dec
sbb
inc
test
fsubrs
jmp
push
mov
aad
pop
lods
fistps
jl
mov
mov
sbb
pop
dec
dec
xor
add
mov
lahf
inc
cmp
jnp
push
cli
pop
inc
int
test
ljmp
sbb
sbb
sbb
and
mov
sub
loope
jns
cmpsl
nop
add
mov
pop
ret
jge
sub
xchg
out
stc
sbb
add
mov
mov
loope
cmp
test
addb
dec
cwtl
mov
mov
mov
or
sbb
mov
mov
xchg
movsb
ret
je
add
ja
xchg
add
ja
leave
or
push
stos
xchg
test
add
dec
addb
push
addb
cmp
inc
mov
jae
jae
xchg
mov
jg
and
popf
pop
mov
dec
mov
lahf
add
test
add
repnz
push
scas
movsb
cltd
fstps
lcall
sub
imul
sub
std
pusha
add
mov
mov
out
stc
pusha
add
push
add
add
mov
inc
cmp
jbe
rolb
mov
push
jb
mov
add
pusha
add
das
jns
add
mov
jp
test
xor
mov
ret
sbb
lea
sbb
add
inc
add
mov
mov
xor
mov
jl
adc
mov
mov
fcmove
jo
mov
ja
or
pusha
add
sbb
add
lds
mov
fimull
cmp
aad
push
jae
loope
push
mov
add
sbb
hlt
imul
mov
mov
push
add
sub
test
or
add
mov
addb
das
cmpsb
xor
test
sbb
aaa
idivb
outsl
into
std
adc
mov
add
outsl
repz
and
mov
mov
mov
mov
sub
add
add
adc
mov
aam
fildl
lods
roll
daa
mov
push
fbld
xor
mov
les
mov
aad
jbe
add
cmpsl
add
adc
mov
jge
add
mov
mov
subl
push
rorl
popa
cmp
adc
mov
add
scas
cmp
dec
push
rolb
mov
pushf
mov
dec
rolb
mov
pusha
add
clc
jne
sub
mov
filds
popf
sbb
jbe
test
sahf
mov
fdiv
ret
movsb
or
sbb
out
xor
mov
js
xchg
repz
mov
mov
lods
dec
in
test
lret
add
in
push
sub
jne
cmp
test
add
or
add
stos
cmp
daa
pusha
add
leave
xor
add
push
rolb
lret
into
xchg
sub
in
add
dec
ret
mov
lock
shll
mov
pop
dec
lods
test
faddl
stos
mov
cltd
les
sbb
xor
dec
adc
mov
cmp
std
push
add
mov
xchg
leave
hlt
and
mov
add
xorl
mov
sub
xchg
mov
pop
bound
mov
jmp
fwait
adc
mov
pop
xchg
jecxz
addb
loope,pt
mov
add
mov
add
inc
pop
into
sbb
add
jne
mov
mov
xor
lods
or
add
push
pop
xchg
cmc
call
ds
mov
adc
mov
imul
lds
add
xchg
out
xor
mov
fldl
fs
enter
ret
lret
jns
mov
mov
add
aaa
push
add
pop
mov
idivb
or
push
cmc
sbb
pop
sbb
mov
mov
xchg
pop
mov
and
add
jo
mov
test
scas
data16
xchg
mov
cwtl
adc
test
mov
adc
sub
addb
mov
insl
mov
add
jecxz
out
xlat
adc
mov
push
sbb
fiadds
mov
or
add
jl
pop
xchg
ss
push
push
add
mov
lea
push
insb
into
or
sub
add
mov
xchg
in
lret
mov
add
push
inc
stos
stc
inc
roll
rolb
mov
add
insb
cmp
test
xor
jae
add
ret
xor
js
int3
push
push
std
add
sub
in
sub
dec
pshufw
inc
pop
push
push
add
add
xlat
ss
add
mov
mov
add
sub
rolb
mov
adc
dec
mov
mov
add
push
nop
add
or
jbe
movzbl
adc
mov
mov
sub
add
jp,pt
push
add
add
sbb
pop
test
add
popa
and
lret
mov
mov
and
mov
fnstenv
mov
mov
pop
lahf
pushf
jb
mov
pop
into
fisubs
xchg
data16
xor
add
mov
fisttps
push
jns
jb
mov
test
jp
or
mov
push
sub
mov
nop
add
add
mov
icebp
add
push
add
xor
sub
pop
shrl
sub
add
lret
add
addb
push
push
int
js
daa
mov
mov
dec
repnz
add
mov
popf
sub
sub
fisubrs
scas
fidivl
jno
add
in
cwtl
cmp
push
ss
and
mov
out
stc
pop
scas
pop
ss
adc
mov
add
cmp
inc
dec
das
repz
fsubrp
and
mov
ffreep
mov
jmp
ja
cmp
call
pusha
add
mov
cmp
bound
mov
lods
xor
xchg
sub
add
and
mov
adc
daa
pop
cmc
inc
or
std
sbb
fdivrs
xchg
mov
mov
mov
jne
out
int3
xchg
add
cmp
mov
ss
sbb
cltd
xchg
sbb
mov
xchg
lea
scas
ja
test
int3
lret
ret
mov
add
add
mov
add
movl
sub
cmp
fisubrs
movsl
bound
mov
add
push
add
push
mov
ret
push
jl
add
lods
lods
insb
jle
adc
add
mov
push
add
scas
sbb
pop
ficoml
add
inc
into
cmpsl
push
xchg
loop
mov
dec
sub
into
push
call
mov
push
fmul
add
repz
aam
add
pop
leave
leave
iret
lret
mov
mov
adc
mov
notl
mov
mov
addb
mulps
addb
add
cmp
add
in
sarl
fcompl
stos
sahf
lods
pop
pop
mov
inc
dec
ficomps
cmc
insb
mulb
and
mov
add
mov
rcr
adc
pop
xchg
addl
and
dec
cmp
add
rolb
mov
mov
mov
push
add
in
std
into
mov
push
sub
idivb
lds
call
pop
xchg
lods
mov
add
xchg
ljmp
lcall
cltd
sub
add
mov
add
and
add
aas
mov
mov
imul
lods
je
adc
psrlw
mov
shll
insl
int
inc
aam
push
or
gs
jb
mov
jns
loopne
mov
testl
xchg
cwtl
addb
dec
mov
add
add
faddp
in
jbe
fwait
pop
mov
in
fld
lea
or
es
inc
pop
cmpsb
dec
push
sub
jp
mov
add
mov
addr16
sub
cmp
loopne
mov
es
test
add
mov
jns
mov
lahf
inc
mov
inc
call
cmp
scas
dec
adc
add
add
mov
add
mov
ret
ds
sbb
add
mov
mov
add
jmp
rep
xor
roll
mov
sahf
lock
add
mov
add
xor
dec
pop
push
pop
or
add
gs
jnp
enter
jecxz
gs
xor
mov
xor
mov
add
or
movsl
aam
js
test
jp
out
or
das
mov
push
pop
adcl
ret
mov
test
add
adc
add
mov
sahf
les
cli
push
sbb
mov
ret
cmp
mov
xchg
mov
add
mov
sbb
add
pop
sub
icebp
and
imul
jno
mov
mov
add
sub
xchg
jo
mov
add
adc
std
iret
aad
mov
add
cli
in
ret
mov
add
nop
add
jnp
xlat
movsb
cmp
decl
daa
xchg
aas
decl
mov
sub
loopne
mov
mov
add
dec
sarl
lahf
bound
mov
sbb
sub
xchg
imul
mov
nop
add
mov
dec
ljmp
xorl
push
enter
inc
add
adc
mov
push
mov
mov
mov
aam
lock
xchg
pop
rolb
mov
movd
mov
mov
in
inc
jg
sti
jecxz
sbb
lock
sbb
and
stc
sbb
or
push
outsl
mov
jnp
pop
lcall
sbb
sbb
xor
mov
xor
mov
add
jp
jo
mov
fcompl
pcmpgtd
movsb
leave
and
sbb
push
jle
nop
add
mov
sub
cs
mov
add
adc
jmp
daa
jo
mov
jo
mov
add
repz
add
jg
pop
lds
outsb
pusha
add
enter
mov
pop
mov
sub
sub
in
outsb
in
xchg
leave
in
aam
push
daa
lahf
sub
mov
jmp
fmul
je
stos
mov
pop
push
loopne
mov
xchg
hlt
nop
add
lea
cwtl
push
and
mov
adc
inc
add
lahf
rcrl
mov
add
and
push
outsl
lret
fcompl
cmc
adc
jne
int3
les
mov
imul
mov
outsb
add
mov
out
or
sbbl
inc
add
mov
cmpsb
inc
cbtw
inc
add
fistpll
popf
pop
stos
fnstcw
int
add
push
add
push
push
addb
cmp
add
adc
xchg
mov
cmp
mov
pushf
loope
hlt
mov
cwtl
adc
mov
add
inc
cmp
mov
add
xor
cmp
mov
imulb
or
stc
adc
iret
clc
push
popf
in
aas
dec
adc
std
dec
xchg
out
dec
stos
jmp
add
jo
mov
pusha
add
mov
mov
add
jae
add
loopne
mov
jmp
std
jp
lcall
addl
cmp
mov
add
xchg
and
shrl
sti
lods
inc
test
cmp
inc
add
xor
js
daa
adc
outsl
xchg
inc
dec
mov
mov
xchg
dec
xchg
add
sub
add
xchg
lahf
fwait
and
mov
addl
pcmpeqd
pop
xchg
add
add
cmp
loopne
mov
cmpsb
cmp
cmpsl
or
and
mov
xchg
add
insl
adc
mov
jge
add
adc
mov
mov
mov
add
les
lods
push
add
adc
jns
nop
add
fisttpll
adc
mov
cltd
lret
and
sti
in
pop
rolb
or
add
test
iret
jbe
in
sub
push
gs
lods
insl
js
add
in
cmp
add
push
cmp
cmp
add
push
mov
add
mov
rcll
insb
imul
insl
repz
add
pop
and
mov
add
shrl
add
mov
add
or
daa
arpl
xlat
sarl
cmp
mov
stos
insl
adc
inc
pop
push
xor
mov
rolb
mov
inc
add
out
ret
insb
in
sbb
lss
mov
rolb
mov
mov
cmp
sbb
jge
mov
jo
mov
repnz
jge
and
mov
add
sbb
cli
jmp
inc
inc
ret
and
out
add
outsl
stc
sbb
js
sbb
dec
xchg
sbb
mov
clc
xor
mov
pushw
add
or
push
lea
imul
add
out
add
addr16
add
lods
push
into
aad
pop
jno
scas
sub
movsb
popf
and
lahf
addb
and
xchg
pop
lret
rolb
jmp
pusha
add
fmull
add
mov
sahf
mov
lds
icebp
mov
dec
xchg
in
push
popf
mov
mov
add
xchg
xchg
jb
mov
dec
js
jg
popa
rorl
xchg
add
je
cmp
add
mov
mov
mov
inc
add
mov
addb
mov
mov
inc
add
adc
and
das
sub
cwtl
jno
ljmp
ja
adc
jg
ja
add
outsl
cmpsb
pop
push
add
je
fisubrs
cmp
add
jg
insb
xchg
fistl
ficoms
mov
push
jmp
add
push
add
add
adc
mov
cmp
xchg
add
jl
push
add
enter
add
mov
mov
mov
js
cli
adc
mov
add
mov
cmp
mov
jge
add
xor
insl
or
add
rolb
mov
add
add
and
push
cmp
xchg
jo
mov
mov
out
clc
adc
mov
lcall
fsts
pop
jmp
adc
aaa
cli
daa
pushf
jge
jae
mov
mov
movsl
lahf
lahf
rcll
inc
add
mov
sti
xor
mov
mov
ret
inc
cmc
mov
add
add
jmp
add
mov
movsl
adc
push
fmull
mov
sbb
fmull
push
add
fnstcw
pop
bound
mov
icebp
sbb
add
je
clc
add
add
mov
cli
rorl
adcl
add
inc
add
add
stos
pop
imul
add
mov
push
leave
pop
xchg
add
addb
cwtl
dec
inc
mov
sub
inc
test
jb
mov
add
add
or
mov
mov
mov
inc
mov
data16
ss
push
xor
mov
add
dec
push
adc
mov
xlat
mov
mov
mov
mov
push
mov
add
hlt
cltd
cld
popa
aam
dec
xchg
xchg
cmp
sbb
cli
mov
movb
hlt
cld
out
jmp
ss
in
mov
cmp
mov
add
mov
sbb
fs
lret
mov
xchg
add
jl
mov
fistpl
or
loope
cmp
add
mov
popf
mov
icebp
sub
inc
or
mov
mov
inc
push
mov
push
out
insl
sbb
add
rcll
mov
xchg
inc
ret
inc
shrl
loope
jne
pusha
add
pusha
add
les
add
add
add
inc
imul
mov
mov
and
sti
dec
xchg
sti
out
mov
fisttpl
and
mov
pop
lods
or
ljmp
adc
jecxz
loope
jmp
stc
scas
scas
les
or
fwait
test
ss
pop
cmpsb
xchg
cmc
insl
pusha
add
inc
leave
fucomi
test
ret
jmp
or
or
int3
cmpsb
pop
adc
mov
xchg
sbb
into
or
push
mov
jnp
cs
es
cmp
sub
add
push
add
test
add
mov
add
add
cmp
add
aad
add
addr16
add
sub
push
pop
pushf
leave
mov
outsb
aam
or
es
mov
push
mov
add
nop
add
aas
out
mov
sbb
inc
add
xor
mov
xchg
incb
push
addr16
mov
add
add
mov
bound
mov
pop
xchg
cmp
push
add
adc
mov
enter
mov
cmp
lds
add
mov
stos
pop
push
mov
inc
lret
je
lret
in
das
xchg
fs
dec
loop
mov
dec
push
aas
cmp
pop
test
cmp
lods
mov
xchg
notb
add
iret
loope
add
mov
lods
mov
aas
out
or
lcallw
mov
mov
hlt
aas
rolb
mov
cmp
jge
add
jno
ds
xor
and
mov
lods
sbb
in
imul
jmpw
jecxz
add
movsl
mov
lret
add
sub
stc
pop
scas
iret
inc
add
jecxz
mov
mov
dec
mov
dec
xor
dec
icebp
push
cli
pop
pop
inc
xchg
cli
lock
add
pop
test
mov
fwait
ret
enter
adc
add
mov
test
lods
cmp
pop
push
iret
mov
adc
imul
or
int3
pop
mov
xchg
jne
add
stos
rcrl
lcall
test
or
popa
icebp
jmp
inc
add
loope
pusha
add
rolb
mov
add
mov
insl
lds
movsb
jns
and
nop
add
sbb
mov
rolb
mov
mov
popa
pop
rolb
mov
jmp
mov
mov
iret
push
mov
add
jl
cld
add
stos
movl
xor
mov
mov
and
pusha
add
ficomps
rol
aad
mov
addb
int
jb
mov
xchg
loope
addb
test
in
cmp
rorl
mov
add
je
test
dec
jno
xchg
dec
sbb
or
enter
jo
mov
add
jnp
sub
mov
pop
jae
adc
add
xchg
mov
iret
cmp
xor
mov
stos
pop
xor
mov
daa
in
std
cld
popa
xor
mov
jae
xchg
xchg
pop
outsl
fucomp
cmpsb
testl
xor
add
sub
out
lret
jnp
jmp
lea
and
mov
mov
pop
sbb
rolb
insb
rolb
mov
add
rdmsr
add
cmp
mov
mov
dec
push
push
push
mov
sbb
mov
mov
testb
dec
cmp
push
cmp
lcall
shll
xchg
add
push
mov
int3
dec
in
cmc
xor
mov
add
add
mov
sbb
add
add
mov
inc
jbe
mov
jecxz
pop
push
cmp
ja
mov
mov
out
xor
add
movntq
out
add
add
cmc
fst
jge
loop
mov
push
sahf
sub
sti
push
sbb
and
mov
xchg
ljmp
cmc
mov
repz
insl
lcall
mov
sbb
out
std
dec
popf
mov
mov
outsl
pop
das
xchg
xchg
add
jns
rolb
mov
data16
and
mov
xchg
add
inc
fs
xor
sbb
loopne
mov
add
aaa
mov
mov
mov
addr16
in
cmp
xchg
inc
push
push
pop
mov
mov
insl
outsb
jno
xchg
add
cmp
jo
mov
loop
mov
dec
pop
jo
mov
push
add
mov
adc
mov
add
and
roll
outsb
push
or
inc
jo
mov
mov
jl
in
pop
test
add
mov
bound
mov
les
mov
push
lret
mov
outsl
or
leave
mov
push
repz
adc
add
addr16
mov
mov
frstor
mov
add
cmp
add
and
mov
ljmp
icebp
mov
jo
mov
mov
ja
mov
movsb
fs
int3
mov
add
add
mov
mov
sub
cld
mov
negb
mov
aaa
rolb
mov
jno
pop
iret
shrl
cs
or
stc
out
lretw
pop
and
mov
mov
mov
mov
fadd
sahf
lret
add
pop
add
insb
shll
in
jo
mov
push
stos
dec
addr16
adc
iret
jbe
mov
fimull
js
mov
js
addr16
pop
test
mov
pop
ret
rolb
mov
pop
xor
js
mov
jle
sbb
mov
mov
inc
mov
mov
cmp
adc
mov
add
add
sbb
sbb
leave
mov
fnstcw
mov
out
jecxz
add
add
mov
lods
inc
insl
into
jl
nop
add
add
aaa
lcall
and
scas
add
pop
mov
jnp
xchg
add
add
icebp
cmp
push
mov
xor
mov
add
pop
enter
fdivrl
push
add
stos
lds
lcall
sub
out
mov
cmp
out
push
add
and
inc
add
ja
stos
jbe
aaa
pop
push
rolb
mov
jo
mov
jmp
addb
sbb
add
pop
adc
mov
add
mov
add
add
sbb
push
into
or
add
or
sbb
gs
fidivrl
mov
in
js
dec
or
mov
cmpsl
mov
mov
fsub
push
add
rolb
mov
xor
mov
jge
adc
mov
jg
add
ljmp
add
add
or
fs
add
add
cmp
push
outsl
sbb
sub
xchg
insl
fiaddl
dec
mov
fwait
rcl
jmp
mov
jbe
insl
cli
out
out
or
rcrl
add
add
jo
mov
xor
mov
in
icebp
int
jge
fstpl
pushf
testb
hlt
mov
mov
jmp
out
add
lock
mov
push
jge
add
mov
mov
add
xlat
dec
in
push
add
lret
movsb
aaa
mov
insl
cmp
lret
cwtl
loopne
mov
mov
mov
mov
pop
ja
jmp
add
inc
cwtl
xchg
filds
cmpsl
movsb
or
add
add
add
out
outsl
fstp
xchg
mov
lret
pop
aad
adc
add
jns
lods
jmp
mov
xlat
je
or
movsl
test
loopne
mov
sbb
add
lahf
jge
sub
inc
lds
aas
addb
push
subl
sub
add
add
add
mov
jns
into
jne
jmp
addl
inc
push
int
push
xor
out
ret
test
ljmp
mov
je
mov
mov
jge
mov
jb
mov
inc
add
mov
sbb
ljmp
xchg
out
icebp
mov
mov
add
push
mov
sbb
lods
flds
mov
mov
add
fstpt
addb
cwtl
cmp
add
pop
addb
test
in
or
sbb
sbb
pop
add
add
mov
lea
std
scas
jnp
stos
mov
mov
pushf
shl
add
cld
nop
add
mov
jg
add
outsb
pop
das
sarl
push
cs
add
hlt
xor
mov
or
stos
dec
pushf
push
xchg
cltd
push
stos
es
popf
jl
addb
sbb
add
mov
cmp
xchg
add
js
sbb
jne
mov
jle
xchg
cmp
fwait
popa
pushl
add
push
add
and
jno
jne
push
mov
jge
daa
rolb
mov
push
add
mov
inc
ficomps
add
mov
push
cli
push
std
pop
mov
mov
sbb
push
ss
pop
call
jae
add
xlat
fcoms
fisubs
dec
shl
mov
rolb
mov
fwait
popl
mov
das
repnz
fst
test
adc
in
sbb
push
stos
xchg
imul
pop
aam
lods
aaa
pushw
popf
xor
popa
push
add
add
jle
xchg
mov
mov
pop
jg
cmpsl
sub
add
mov
ret
pop
and
mov
addb
sarl
mov
jmp
or
xor
mov
mov
add
inc
mov
mov
mov
mov
push
iret
popa
leave
in
pop
pop
adc
add
mov
mov
dec
or
jbe
gs
fucomip
pop
in
or
fisttpll
std
xchg
sub
jns
cmp
mov
add
jg
jns
scas
dec
ret
enter
orl
mov
cmp
inc
cmc
mov
bound
mov
add
rolb
mov
add
push
dec
mov
cmp
call
out
pop
jecxz
xor
jecxz
fstp
jne
stos
xchg
add
nop
add
sub
dec
faddl
inc
and
mov
cmp
les
pushf
mov
dec
ret
dec
notb
sbb
mov
dec
xor
ljmp
or
fwait
cmp
dec
or
inc
mov
imul
mov
fildll
addb
pop
test
cmp
rolb
mov
mov
cld
lea
add
dec
gs
push
push
or
hlt
adc
push
push
add
mov
xchg
je
pop
out
cld
bound
mov
mov
mov
bound
mov
cltd
inc
add
in
add
dec
add
cmp
add
shll
add
push
mov
mov
mov
xor
mov
fisubl
add
outsl
xchg
out
fs
call
loop
mov
jge
pop
pop
out
cmpsl
jecxz
push
and
mov
das
ucomiss
add
adc
mov
mov
xor
mov
add
test
adc
stc
pop
loopw
mov
mov
add
mov
jmp
mov
mov
jo
mov
sub
mov
add
jno
jl
inc
mov
or
bound
mov
jge
movzbl
mov
jne
add
stos
xchg
xchg
ljmp
push
cmpsl
divb
add
xchg
add
fisttps
imul
daa
fwait
pop
mov
fmul
sub
aad
cmpsl
test
loopne
mov
shll
fsubrs
add
and
mov
add
imul
xchg
add
inc
push
ret
orl
mov
xchg
and
mov
loop
mov
test
add
inc
enter
cltd
imul
cmp
or
push
mov
and
mov
or
mov
push
rolb
mov
push
jo
mov
xchg
and
cmp
into
lahf
fildl
mov
xchg
xlat
fcom
add
mov
adc
mov
dec
in
sahf
movsl
gs
adc
mov
add
mov
dec
cmp
sub
mov
add
mov
ret
mov
sahf
pop
push
test
fdivr
or
stos
pop
mov
jns
in
add
rolb
jno
inc
jmp
add
aaa
or
int
lods
jo
mov
imul
mov
mov
fstpl
addb
jno
mov
mov
push
movsb
jle
jnp
in
xor
mov
xchg
inc
add
fisttpll
xchg
popa
add
mov
daa
or
sub
lods
test
mov
or
es
mov
lret
ss
mov
dec
sbb
add
stos
ret
jge
add
mov
sbb
lds
push
add
inc
add
xchg
int
lods
inc
mov
or
dec
jecxz
mov
fwait
gs
sub
mov
jg
cmp
imul
jg
mov
sbb
cmc
sbb
and
out
scas
add
lret
shll
inc
addr16
sub
sbb
pusha
add
mov
add
fcoms
inc
scas
stc
mov
push
mov
add
inc
add
and
add
and
mov
dec
in
dec
and
add
mov
xor
call
lret
lret
adc
xlat
add
mov
sti
push
add
in
add
mov
mov
out
icebp
sar
xlat
ja
xchg
rcrl
je
testb
xchg
add
aaa
add
dec
test
aas
adc
add
dec
outsl
test
or
hlt
mov
lods
aas
cwtl
sarl
mov
push
jb
mov
lds
adc
sub
jge
popf
cs
jo
mov
sub
sub
jle
add
lea
xchg
dec
stos
push
adc
stos
call
fdivl
add
add
mov
shll
jbe
push
inc
push
mov
add
xor
fsts
mov
jno
cmp
mov
mov
add
sbb
adc
arpl
add
mov
xchg
out
data16
rolb
hlt
adc
repnz
push
clc
clc
xor
mov
add
add
add
mov
xor
mov
mov
jbe
push
loopne
mov
out
add
mov
add
add
pop
data16
outsb
ds
sahf
sbb
add
lds
scas
xchg
add
mov
mov
cli
call
add
jnp
fwait
dec
or
or
mov
add
addb
das
xchg
mov
add
jne
scas
movsb
or
add
jb
mov
inc
adc
lods
adc
adc
add
mov
sub
add
mov
mov
push
or
sub
add
dec
jmp
stc
gs
xchg
ret
mov
add
sbb
jb
mov
inc
push
pop
push
repz
mov
inc
add
mov
repz
mov
add
pop
mov
sub
addb
jo
mov
dec
lods
add
add
mov
les
sub
ljmp
xchg
dec
ficoms
pop
xchg
sub
mov
add
es
mov
pushf
sbb
call
cmp
inc
repz
add
out
mov
test
inc
scas
xchg
mov
fcoml
add
dec
pop
xor
or
pop
inc
faddl
pusha
add
add
add
push
sti
loop
mov
inc
add
add
pop
cmc
jns
cwtl
mov
mov
add
movsb
cmp
shll
and
mov
sti
sahf
xchg
dec
aaa
pop
daa
les
mov
add
xchg
test
xchg
push
addb
jl
sahf
dec
rcll
add
enter
add
xchg
mov
mov
and
lret
or
add
mov
ljmp
fmul
push
add
repz
and
mov
inc
add
mov
es
sub
add
fnstcw
pusha
add
add
divb
cmp
pop
sbb
mov
lcall
dec
push
add
lahf
or
pop
lahf
in
pop
xchg
sbb
sbb
mov
mov
es
imul
dec
addb
rolb
stos
cmc
cmp
pop
sbb
add
xor
mov
xor
cmc
ds
mov
movsl
outsl
add
mov
add
and
cwtl
popf
adc
mov
push
add
scas
fsubs
vmptrld
add
add
add
mov
addb
push
mov
sbb
lahf
or
rolb
mov
push
cs
pop
sbb
daa
outsl
arpl
test
popa
cmp
add
test
add
cmc
addb
cs
addl
push
add
sub
ret
sub
mov
mov
add
cli
mov
sbb
mov
loope
dec
sub
notl
jl
add
inc
add
lcall
jns
mov
add
mov
in
cwtl
cmp
outsl
xchg
add
mov
cmpsb
and
adc
xor
pop
adc
mov
sahf
mov
mov
add
cmp
roll
popa
cmp
mov
aas
mov
add
mov
daa
inc
add
mov
adc
mov
test
movsb
jmp
movsb
mov
loop
mov
push
add
stos
adc
jbe
es
loopne
mov
mov
jg
test
pop
nop
add
pop
mov
add
push
jnp
adc
add
inc
pop
and
jns
or
cmc
in
mov
jno
sbb
mov
movb
mov
add
mov
push
mov
jmp
test
add
add
mov
in
pop
or
add
add
sub
mov
and
bswap
jns
dec
movsb
lods
mov
js
and
mov
cmp
add
clc
sub
pop
cmpsb
cmp
xor
mov
fmull
xor
mov
add
add
push
or
adc
sub
mov
nop
add
sub
mov
sub
add
adc
or
aam
xchg
mov
or
push
add
add
add
aam
mov
int
push
fists
mov
mov
js
test
mov
mov
jmp
add
repz
aaa
sbb
pushf
sbb
add
jmp
dec
cmp
aad
pop
jne
push
mov
mov
shl
xchg
inc
add
mov
leave
inc
mov
add
inc
fistpl
xor
mov
aam
add
add
popa
mov
jo
mov
stos
daa
push
inc
add
pop
sbb
ljmp
cmp
std
cmp
clc
adc
mov
jne
fs
insl
int
incl
fisttpl
xor
mov
mov
fucomi
sub
adc
xor
mov
cs
shrl
add
mov
mov
sub
fisubrs
add
mov
mov
mov
sub
add
out
ja
dec
xchg
fdivr
pop
push
inc
sbb
dec
inc
xchg
add
mov
jno
aad
add
push
or
add
mov
add
mov
in
inc
add
jl
fadd
and
mov
xor
mov
stos
xchg
es
mov
sub
shll
add
leave
sbb
frstor
iret
lcall
js
jge
add
mov
icebp
out
add
add
repnz
add
ret
ljmp
xchg
dec
jle
icebp
jecxz
add
xchg
fcmovne
inc
mov
jno
loopne
mov
jo
mov
or
jb
mov
lahf
stos
fwait
js
cmp
movsb
inc
gs
fdivl
jle
roll
popf
inc
mov
sbb
add
mov
arpl
jns
push
sub
aaa
mov
insl
mov
push
pop
call
insl
fsubrs
or
add
jb
mov
or
dec
imul
es
dec
inc
addr16
push
mov
mov
shrl
pop
pop
popl
sti
aas
ret
mov
mov
bound
mov
add
add
data16
mov
fs
sbb
ljmp
arpl
add
std
push
or
mov
out
add
ss
jnp
repnz
push
add
fdivr
lods
mov
mov
in
lods
fwait
les
pop
and
mov
nop
add
pop
jno
lds
shrl
xchg
mov
lahf
xor
mov
ljmp
jmp
pushf
adc
mov
cmp
rolb
mov
lods
dec
neg
sbb
push
jnp
add
cmc
fsubr
in
icebp
adc
mov
xor
pop
sub
adc
in
nop
add
mov
jl
xchg
add
hlt
or
fiaddl
push
add
mov
into
mov
sub
inc
mull
stos
rolb
fldt
mov
add
popa
shll
stos
pop
lods
addb
adc
add
xor
out
sub
das
push
movsb
jo
mov
add
adc
mov
add
imul
loope
repnz
mov
add
movsl
ja
mov
aas
dec
jnp
add
roll
fimull
add
xchg
jbe
arpl
mov
push
rcr
or
jno
add
add
negl
add
mov
mov
and
mov
add
repnz
xchg
aam
incb
out
xor
testl
xlat
push
and
mov
xchg
add
jp
add
sahf
popl
add
loope
mov
jmp
dec
je
je
fiaddl
jecxz
dec
or
push
cmpsl
dec
push
push
add
dec
push
fwait
mov
cmpl
add
arpl
scas
not
or
add
add
int
scas
mov
call
push
and
outsl
pop
and
mov
xchg
xchg
dec
or
add
xor
mov
mov
mov
dec
sahf
jno
ss
mov
add
jmp
add
mov
iret
dec
es
addb
push
in
popf
movsb
cwtl
mov
mov
xchg
inc
add
mov
or
add
jmp
imul
fistl
ret
mov
xor
or
add
mov
xchg
jle
cmc
mov
out
add
mov
mov
add
mov
mov
xor
mov
data16
add
sbb
xlat
sbb
add
mov
test
push
inc
popf
aad
imul
add
jbe
jp
repz
test
add
cmp
xorl
stos
inc
add
fldl
mov
call
add
add
test
pop
int
shl
aaa
pop
and
mov
pop
add
mov
xor
sbb
add
subl
adc
mov
xor
mov
insl
out
xchg
jae
add
rolb
mov
add
mov
lea
xbegin
cli
cmpsb
mov
mov
or
nop
add
mov
in
inc
add
add
mov
mov
add
or
push
jnp
sbb
add
cwtl
push
add
adc
sub
add
clc
fidivrs
push
adc
fiadds
add
add
add
inc
lahf
inc
xchg
add
lock
or
loopne
mov
aaa
out
popa
mov
inc
dec
sti
or
out
je
or
scas
imul
testl
hlt
push
cmp
add
push
in
pop
and
mov
out
test
jne
imul
pop
pop
xchg
mov
movsb
mov
mov
cmpsl
jl
push
xor
add
dec
pop
cmp
mov
in
aam
add
add
test
sub
xchg
mov
clc
sub
xchg
push
fwait
mov
mov
jg
mov
mov
add
jg
sahf
les
fs
test
add
mov
lds
mov
stos
mov
add
xchg
inc
jb
mov
insl
mov
add
hlt
arpl
inc
mov
or
xor
inc
add
xor
mov
or
loope
aas
push
add
stc
or
jp
or
insl
or
cmp
cwtl
enter
mov
ja
mov
stos
js
lea
cmp
adc
mov
pushl
mov
data16
mov
sbb
mov
cmp
test
arpl
or
add
mov
mov
and
test
jbe
add
stos
into
dec
insl
push
pop
lea
jp
or
call
mov
sub
add
lcall
cmp
add
add
mov
mov
test
mov
xchg
push
lret
fistpll
sub
jl
rcrl
inc
add
mov
mov
aaa
jp
add
add
stc
rolb
mov
add
clc
fistpl
pushf
mov
cwtl
xchg
mov
cmc
cmpsl
or
cs
inc
outsb
add
mov
mov
rcrl
in
fdivs
mov
hlt
in
sub
inc
fidivs
sti
jbe
loope
out
adc
mov
lods
cmpsl
cli
pop
add
add
ret
dec
push
fwait
int
out
mov
mov
xchg
bound
mov
push
xor
insl
mov
add
and
mov
or
inc
xor
mov
rolb
mov
mov
lock
add
fwait
xor
call
out
add
rcrl
adc
mov
push
and
mov
arpl
imul
lock
lahf
jnp
jb
mov
mov
mov
adc
dec
jns
inc
sub
iret
roll
rcll
xor
cmp
or
jl
pop
test
mov
ret
push
shrl
insb
lahf
cmp
jge
fstp
push
inc
std
enter
rolb
or
mov
ret
mov
xor
add
imul
push
or
hlt
jmpw
in
ss
cltd
sub
pop
insb
xchg
jl
add
pushf
enter
mov
or
cmp
inc
pop
imul
mov
mov
pop
scas
pop
dec
lcall
jg
add
mov
add
js
push
add
inc
dec
or
add
aas
loopne
mov
push
jns
test
or
mov
add
add
xchg
pop
lret
jne
xor
jbe
add
mov
push
mov
mov
pushf
cmpsl
xor
popf
cs
or
je
push
fstpt
push
scas
inc
push
xor
push
loop
mov
add
movsl
mov
pop
add
data16
push
add
sbb
pop
xchg
xchg
cmp
iret
insw
loope
add
add
pop
sbb
ficomps
mov
sub
cmp
adc
jnp
rolb
mov
add
push
add
add
add
inc
divl
pop
mov
or
mov
mov
add
sbb
loope
aad
mov
pop
insl
les
pop
mov
jbe
clc
add
adc
mov
scas
xchg
xchg
jnp
insb
rolb
mov
mov
mov
unpckhps
and
mov
xchg
pop
mov
rcrl
or
lods
or
add
xchg
pushf
in
js
mov
rcrl
add
js
add
cmp
and
add
pop
xchg
jns
das
mov
xchg
inc
cmp
mov
mov
add
popf
jnp
and
mov
mov
lret
push
xchg
sbb
loop
mov
cltd
ds
loope
dec
std
ja
add
add
cwtl
add
mov
mov
rcll
sbb
sbb
adc
jle
daa
inc
lret
ljmp
xchg
push
ficoms
outsb
test
std
clc
fstpt
add
pop
sbb
jnp
add
insb
ret
add
mov
jl
add
mov
inc
lods
cltd
sub
mov
push
cmp
mov
cld
or
sub
rolb
mov
add
mov
cmp
sub
mov
ret
test
and
cmpsb
fistpl
rcrl
je
dec
inc
jle
add
add
adc
mov
xor
repnz
lcall
leave
je
dec
fdivrl
cmp
hlt
sub
or
addb
lock
mov
repz
add
mov
mov
subl
add
dec
movsl
adc
mov
jge
inc
add
pop
ds
jnp
add
push
cs
mov
iret
lret
add
push
data16
sub
push
dec
jb
mov
jecxz
rcll
rcl
test
fidivs
add
sti
addl
fmulp
ss
mov
aad
movsb
or
jne
pop
enter
sub
mov
mov
lcall
cmp
pop
push
ficomps
push
icebp
movsb
enter
mov
sub
gs
repz
lea
mov
stos
push
mov
push
xlat
mov
add
push
inc
add
mov
int3
lds
mov
mov
push
divb
xchg
rcrl
push
jle
in
push
addb
inc
rolb
mov
mov
sub
cmp
repnz
leave
js
jbe
std
jl
add
sbb
les
mov
push
movsl
xchg
add
add
mov
or
add
sub
jno
or
lret
jno
push
ret
add
mov
mov
add
add
cmp
imul
add
mov
pop
and
mov
add
insb
outsl
int
mov
add
lea
add
mov
jmp
pop
pop
dec
adc
push
jmp
in
dec
adc
mov
add
xchg
add
xchg
inc
add
add
lock
adc
mov
cmc
test
cmp
arpl
popf
pop
cmpsl
int
nop
add
pop
xor
das
addb
jecxz
sbb
sbb
cld
scas
in
xchg
enter
das
adc
add
add
fisttps
stos
dec
dec
push
xchg
add
lods
clc
mov
mov
jmp
push
add
std
in
push
ffreep
add
mov
sbb
in
cmp
cltd
xor
push
jno
daa
popf
mov
mov
dec
push
add
cmp
cld
and
add
movsb
clc
sahf
outsb
seta
add
pop
lods
in
mov
push
dec
jmp
dec
pop
xor
loop
mov
mov
mov
push
in
cld
xchg
add
add
mov
repz
add
jae
jae
add
outsl
xor
cld
iret
enter
jne
dec
dec
sbb
arpl
push
add
jp
pop
pop
rolb
test
nop
add
rolb
addr16
les
mov
mov
lea
push
add
push
fsubrl
sub
or
sub
add
and
mov
adc
jg
push
mov
dec
leave
jmp
xor
mov
sub
out
add
mov
mov
mov
pop
pop
jmp
mov
rolb
shll
add
xchg
add
mov
repz
mov
xchg
mov
outsb
scas
jnp
mov
mov
add
mov
mov
mov
mov
out
movsb
in
dec
lds
loop
mov
add
add
mov
inc
jnp
push
mov
mov
mov
sbb
add
jge
add
mov
repnz
out
add
sub
or
pusha
add
lret
add
inc
push
jecxz
dec
loopne
mov
loope
pop
cmp
adc
sbbl
xor
mov
jecxz
lcall
add
movd
add
movsb
rcll
mov
or
jns
mov
mov
mov
pop
or
cld
shll
les
add
add
push
add
mov
add
and
leave
adc
enter
in
dec
arpl
pusha
add
add
add
mov
add
mov
insl
pusha
add
pop
pop
add
mov
bound
mov
fwait
pop
mov
and
mov
stc
add
cmpsl
in
movzwl
add
in
jb
mov
sub
daa
fistps
aas
popf
fstpl
icebp
mov
cmp
inc
xor
mov
out
fists
lahf
test
fsubp
add
add
lock
cmp
aam
push
loope
xchg
mov
ja
cltd
xor
mov
lds
and
mov
mov
ja
adc
mov
xchg
add
adcl
add
and
xchg
xchg
aad
aas
jle
xor
dec
jmp
icebp
inc
cmp
test
sub
loop
mov
xor
push
jmp
ffree
sub
js
leave
cs
xor
mov
movb
sbb
out
outsl
pop
enter
or
add
mov
stos
loope
es
dec
sbb
insb
aad
xchg
sub
mov
pop
lcall
add
mov
and
mov
test
inc
lods
pop
fldcw
shll
rolb
pop
repz
mov
mov
xchg
nop
add
cmp
mov
xchg
lods
adc
mov
hlt
hlt
inc
neg
cwtl
inc
add
jg
lock
pop
hlt
cmpsl
mov
arpl
add
xchg
fstpt
mov
mov
in
add
mov
pushf
insb
dec
or
inc
add
ja
es
out
lcall
jbe
mov
clc
in
repnz
dec
jle
add
or
lret
test
adc
mov
andl
daa
in
sbb
add
mov
add
in
or
fsubr
les
mov
cld
sub
jge
add
aad
lods
int
cmp
inc
xchg
add
fldenv
jbe
loope
addb
decl
mov
dec
arpl
es
mov
add
cwtl
and
pop
and
add
je
out
dec
movsl
push
es
inc
pop
outsb
scas
shll
mov
mov
icebp
lahf
mov
cmp
fdivrs
gs
std
xor
xlat
mov
loope
sub
add
fildl
mov
lahf
mov
mov
ret
into
imul
cmp
stos
test
les
pop
loope
and
in
adc
fsubrs
xchg
ja
xchg
cs
push
add
rolb
push
lret
sbb
lock
shll
jno
mov
adc
shll
inc
dec
loop
mov
sbb
imul
testb
into
mov
adc
loop
mov
test
add
pop
and
mov
jo
mov
or
hlt
fwait
or
cltd
xchg
ret
dec
xor
sub
pop
push
xchg
sbb
out
jp
add
add
add
rolb
inc
add
and
or
cld
in
out
xor
mov
les
fcomps
and
add
jo
mov
add
add
push
adc
mov
mov
jmp
add
pop
and
mov
add
addb
gs
add
mov
jnp
pop
sbb
mov
rolb
jo
mov
pusha
add
lcall
add
dec
push
add
out
mov
sbb
fxam
sub
add
xchg
ljmp
add
rolb
mov
add
push
jl
lahf
mov
js
shrl
add
push
dec
cwtl
loop
mov
sahf
jbe
pop
jle
add
mov
jae
and
cld
jmp
xor
add
fsubrl
add
inc
add
popa
cmp
sbb
in
imul
add
icebp
mov
outsb
jmp
mov
sub
movsb
push
mov
adc
mov
jecxz
adc
mov
mov
fmull
fsubrp
pop
cmpsl
test
push
sub
cmpsb
jb
mov
xchg
jmp
add
cmp
sub
xchg
add
mov
add
fsub
divl
push
jne
popa
sub
add
push
inc
xlat
lock
jle
mov
cmp
inc
cmp
mov
rolb
and
sete
mov
add
add
loopne
mov
sar
les
mov
and
push
add
mov
mov
mov
cmp
add
dec
dec
xchg
dec
dec
pop
jp
mov
mov
mov
fdivrl
mov
fildll
cltd
call
imul
cs
ror
leave
xchg
in
mov
mov
push
add
mov
jb
mov
mov
call
pop
jg
pop
cmpsb
cmp
xor
mov
jle
int
pop
xchg
rolb
mov
pop
imul
loopne
mov
ljmp
imul
inc
mov
mov
add
add
aas
dec
std
dec
clc
or
add
mov
add
rcpps
add
ljmp
mov
xchg
ljmp
mov
adc
mov
mov
in
adc
int
test
repz
add
add
loope
add
test
scas
add
je
ret
stos
adc
add
std
adc
or
mov
xchg
shll
mov
sub
shrl
fsubrl
add
adc
mov
mov
inc
inc
fdivl
add
add
xchg
mov
jae
addr16
mov
inc
add
mov
xor
mov
out
movsb
imull
lods
test
lock
lahf
push
mov
fldcw
rolb
xchg
adc
and
mov
lahf
out
push
out
jle
rcr
mov
mov
mov
sbb
popf
testb
mov
add
inc
inc
adc
pusha
add
add
mov
mov
rolb
mov
mov
lods
lock
and
insb
imul
ficompl
sub
add
xchg
cmp
dec
dec
mov
test
mov
xchg
mov
adc
mov
in
addb
inc
adc
in
iret
xchg
cmp
movsb
test
roll
pop
xor
mov
mov
iret
push
push
iret
mov
flds
xor
arpl
add
push
mov
cmp
stos
lock
mov
jno
leave
insb
notb
add
mov
lahf
sub
bound
mov
xlat
and
movsl
mov
mov
xor
mov
or
push
jae
imul
mov
add
push
add
jecxz
aaa
lods
dec
cmpsb
mov
pop
push
adc
mov
fisubs
add
or
push
or
mov
add
mov
fisttpl
or
inc
add
mov
out
in
mov
mov
scas
and
and
ret
insl
push
adc
mov
mov
imulb
add
inc
mov
dec
scas
lahf
addr16
sbb
add
popf
insb
cltd
roll
inc
jge
add
cmpsb
inc
leave
mov
into
lea
pusha
add
mov
fdivr
div
add
sub
add
add
adc
add
mov
fs
mov
add
mov
scas
dec
dec
jnp
fs
sub
mov
xchg
pop
mov
ds
add
ret
dec
pop
cmp
std
test
mov
mov
add
aad
add
dec
fisttps
mov
mov
or
pop
out
mov
cli
inc
mov
imul
inc
add
push
push
bound
mov
adc
add
xor
loope
xor
out
lcall
mov
insl
mov
pop
adc
cmp
mov
inc
stos
or
aaa
pop
mov
cmp
jbe
add
arpl
mov
ja
jmp
mov
add
jmp
xchg
fs
rorl
push
addb
repz
in
addb
cmp
hlt
pop
xor
dec
stc
mov
mov
pushf
dec
cmp
dec
ss
out
pop
ret
push
mov
mov
jge
add
notl
inc
push
xor
sub
xchg
and
mov
adc
xchg
xor
dec
add
icebp
movb
push
adc
mov
ja
add
aam
adc
rolb
pop
pushf
ss
add
pop
dec
pop
jae
or
int
es
sub
lahf
mov
dec
mov
outsb
pop
mov
mov
add
push
lcall
and
push
lcall
lret
cmp
into
ja
lret
addr16
mov
mov
add
mov
push
add
xchg
push
in
add
cmp
fwait
mov
adc
lock
mov
push
bound
mov
adc
and
stos
out
inc
push
je
lock
mov
mov
aam
fcmovnu
lcall
scas
dec
daa
ret
fldcw
push
mov
push
fucom
sbb
add
add
loope
clc
or
aas
addb
call
or
cmp
daa
popa
dec
pop
pop
iret
fsubrp
and
add
mov
mov
lcall
jno
and
cmp
fists
or
mov
and
loopne
mov
repnz
int
xor
add
mov
and
lcall
lret
popa
add
mov
adc
mov
mov
hlt
xor
dec
call
sub
inc
pop
mov
xchg
lcall
mov
cmp
int
aaa
cli
and
stos
cmpsb
mov
lret
xchg
int3
mov
sbb
jl
in
ds
pop
lods
hlt
lret
sbb
add
insl
and
or
imul
xchg
fcmovne
and
mov
int3
loope
add
pop
addr16
add
sbb
pushf
loopne
mov
mov
adc
mov
popf
iret
in
cli
jmp
int3
clc
nop
add
int
aad
add
dec
jno
add
adc
pop
gs
xor
mov
je
add
mov
mov
aad
cltd
mov
adc
add
adc
add
mov
fldt
cs
cmp
inc
cmp
push
xchg
xor
xchg
lods
mov
mov
push
or
js
add
xchg
adc
or
divb
out
mov
xor
hlt
arpl
add
cld
repnz
add
cmc
fwait
sbb
hlt
dec
push
inc
add
rolb
mov
scas
mov
sbb
push
into
xor
lods
sub
jno
into
mov
cs
call
mov
push
and
push
jmp
add
sahf
mov
add
push
les
push
lock
adc
das
mov
sbb
ss
add
mov
add
scas
add
mov
xchg
mov
jno
cmpsb
mov
sub
ret
mov
add
mov
addb
and
lcall
adc
add
push
dec
add
mov
shl
mov
push
aam
push
faddl
push
xor
mov
cmpsl
lahf
jb
mov
add
add
mov
sbb
inc
push
add
mov
cmp
fdivrl
push
das
push
dec
pop
fcmovnb
mov
rorl
loopne
mov
add
mov
or
sbb
adc
rolb
mov
dec
loop
mov
add
mov
mov
loope
repz
rol
add
add
xchg
mov
decl
rolb
lret
rolb
mov
add
add
xchg
push
mov
jno
popa
sub
push
adc
mov
xchg
loop
mov
add
inc
push
fs
or
sbb
jmp
dec
adc
mov
aaa
adc
add
add
scas
or
sub
mov
add
mov
rcll
inc
cwtl
fsubs
mov
mov
xchg
add
lea
pop
push
sbb
mov
sbb
add
adc
jne
push
push
adc
hlt
mov
rolb
mov
dec
enter
ljmp
pop
or
cs
push
add
add
jae
push
add
xor
mov
sub
add
push
cmp
fucom
pusha
add
add
aas
pop
hlt
mov
stos
sarl
push
add
test
stos
testb
mov
add
adc
jno
movsb
idivb
sbb
mov
mov
lahf
fldenv
push
in
add
movsb
fnsave
sbb
jbe
loope
jno
sbb
sbb
addb
adc
mov
add
and
mov
adc
sarl
daa
pop
adc
ret
sti
fldcw
mov
popa
rolb
cli
int3
xchg
insl
enter
test
add
mov
fsubs
add
mov
jne
insl
roll
inc
aaa
inc
sub
rolb
mov
ja
add
je
add
outsb
dec
mov
notl
jmp
lret
mov
inc
data16
mov
rcr
jns
sarl
mov
mov
push
jnp
xor
fisubl
add
jmp
pop
pop
mov
mov
mov
pushf
icebp
test
pop
xchg
jp
pop
adc
add
jnp
lods
jnp
add
jbe
jnp
add
addl
xor
mov
jl
push
push
add
mov
pusha
add
cmc
jge
xor
ja
mov
in
or
or
repnz
jbe
inc
add
cld
jns
cmp
dec
in
addb
xor
out
loope
iret
std
int3
dec
jno
add
cmp
push
xchg
insl
ficompl
stc
stos
inc
add
push
std
ljmp
xchg
and
insb
xchg
bound
mov
sbb
add
dec
icebp
inc
mov
push
popf
mov
mov
pop
js
sub
jg
add
jns
jno
dec
popf
out
add
jge
jg
stc
add
gs
adc
mov
inc
add
xchg
xor
add
in
add
xchg
insl
fs
out
sub
repnz
mov
out
nop
add
pop
fdivl
cmp
iret
insl
lcall
jl
xor
mov
add
stos
call
mov
into
sti
push
dec
mov
inc
inc
stos
cwtl
repz
pop
pushw
test
jb
mov
ret
stos
les
add
push
aas
in
xchg
stos
insl
cld
pushf
mov
add
add
stos
fwait
into
mov
and
cs
pop
ficompl
and
mov
cmp
sbb
mov
inc
inc
add
mov
int3
lods
add
add
fsubr
mov
dec
xchg
mov
inc
std
mov
fwait
mov
add
ds
jne
cmp
stos
aaa
js
lods
mov
icebp
jg
test
pop
inc
jp
out
mov
scas
xor
mov
xor
mov
cmp
nop
add
sub
cmp
lea
and
mov
jg
out
int3
addb
and
push
adc
mov
jge
pop
and
mov
cmp
xchg
add
lcall
rolb
mov
cmpsb
adc
xchg
dec
or
jmp
push
lcall
ret
inc
add
test
adc
add
jbe
push
xor
adc
xchg
cs
sub
add
mov
and
mov
lea
imul
mov
sub
add
xchg
std
pop
jle
mov
sbb
dec
xlat
push
jmp
add
aaa
scas
jb
mov
in
sbb
inc
fldcw
out
dec
sahf
cld
cmp
int3
cmp
sbb
dec
mov
test
add
fsubrp
xor
mov
adc
push
sbb
adc
mov
add
out
or
in
lahf
cmp
add
jno
jmp
mov
add
leave
jne
add
mov
rolb
mov
jbe
shrl
jg
cmp
popa
out
in
stc
out
xor
xchg
ljmp
outsb
mov
mov
add
shll
mov
jl
int
add
rolb
mov
ss
scas
cmp
push
inc
js
jmp
pop
inc
add
cltd
mov
mov
ljmp
adc
fadds
in
jo
mov
sahf
ja
test
mov
sub
test
lret
fwait
inc
add
js
adc
cwtl
cmc
sub
daa
pop
out
mov
test
sub
xchg
xchg
push
sub
add
cwtl
aad
sub
add
add
sub
inc
cmpsb
inc
add
lret
add
push
pushf
jle
add
push
cs
adc
lret
jne,pn
or
add
add
adc
cli
imul
scas
lods
add
out
outsl
cld
inc
or
dec
push
add
mov
call
sahf
pop
test
mov
xchg
pushf
call
cmc
les
leave
pop
pop
testb
fstl
or
dec
pushl
lock
pop
sub
mov
call
pushf
mov
pop
enter
cmc
call
sub
or
daa
int
dec
sub
lret
lret
mov
dec
js
and
cs
roll
je
add
mov
mov
mov
and
adc
in
cwtl
addb
jle
loopne
mov
jmp
add
mov
cs
out
std
fsubrl
xchg
jl
outsb
jno
stos
cld
and
add
fwait
imul
push
std
and
cmp
add
or
iret
lea
xor
mov
jecxz
popf
orl
sahf
in
loopne
mov
addb
push
mov
xchg
sub
mov
push
pop
inc
arpl
adc
es
stc
xchg
aad
xor
in
loop
mov
mov
pop
es
mov
mov
jno
add
or
jge
mov
pop
and
mov
aam
pop
fisttps
jp,pn
mov
xchg
add
add
mov
push
std
push
add
sub
mov
lds
push
mov
add
sbb
add
into
addl
adc
and
mov
test
mov
loope
or
push
add
ficomps
xchg
and
add
clc
mov
or
inc
pop
stc
movsl
es
add
add
xchg
int3
enter
dec
xor
mov
mov
mov
add
mov
scas
mov
in
lods
pop
mov
movups
mov
add
mov
add
inc
pop
xchg
mov
fcmovbe
mov
daa
pop
addb
rolb
mov
out
or
lea
xchg
cmc
mov
cpuid
add
lods
insl
inc
iret
dec
es
add
mov
add
dec
push
push
sbb
pop
mov
pop
adc
mov
push
add
add
test
add
test
add
cmp
xchg
stos
testl
mov
fbstp
scas
in
sahf
mov
mov
add
mov
sahf
xchg
xlat
mov
xor
add
call
stos
jmp
pop
lds
mov
popa
std
xor
fldenv
add
sbb
cmp
xchg
add
or
ret
push
add
add
adc
lret
scas
and
dec
cmp
mov
xchg
add
rolb
mov
add
mov
ljmp
mov
cmp
add
insl
in
dec
xchg
data16
mov
stos
mov
cs
push
sahf
popa
pop
xchg
add
addb
mov
mov
lret
sti
sbb
adc
mov
stc
cmp
or
std
rolb
scas
cltd
sbb
inc
xor
dec
jbe
fsqrt
cmp
pop
shl
mov
xor
mov
ja
lret
dec
psubsw
dec
fdivl
inc
addb
lret
addr16
js
and
pop
repz
mov
dec
cs
mov
mov
xchg
add
push
dec
sub
pop
ja
add
add
imul
mov
sub
or
add
repnz
nop
cld
jae
or
dec
jl
rep
clc
repnz
nop
cld
jae
xor
arpl
adc
mov
andps
jmp
inc
add
xchg
jl
pop
repz
jnp
les
add
add
in
nop
leave
jmp
add
add
push
arpl
add
in
nop
leave
jmp
call
add
pop
add
push
mov
nop
leave
jmp
loop
loop
fnstenv
add
or
push
fldl
xchg
ret
add
add
xor
jbe
lret
add
clc
repnz
nop
cld
jae
xchg
mov
mov
repnz
nop
cld
jae
pop
add
inc
add
cltd
dec
push
mov
nop
leave
jmp
add
adc
cmp
nop
leave
jmp
add
add
add
neg
add
push
mov
xchg
ret
dec
fldl
add
mov
push
mov
xchg
ret
mov
mov
sbb
push
in
jb
mov
lret
clc
repnz
nop
cld
jae
mov
arpl
dec
pop
jg
jb
add
push
mov
nop
leave
jmp
add
add
add
iret
jmp
add
cmc
add
add
add
add
cli
loop
dec
test
dec
cmp
repnz
nop
cld
jae
xor
add
out
add
pop
push
mov
nop
leave
jmp
jns
add
add
add
add
aaa
out
xor
mov
mov
nop
leave
jmp
pop
mov
adc
add
insl
push
clc
repnz
nop
cld
jae
add
testb
mov
fucompp
mov
or
add
add
add
adc
add
repnz
nop
cld
jae
mull
pop
add
mov
clc
repnz
nop
cld
jae
scas
add
push
push
mov
xchg
ret
push
call
add
imul
xchg
ret
into
pop
add
mov
jmp
incl
pop
add
pop
add
lea
push
mov
nop
leave
jmp
inc
add
lcall
push
mov
xchg
ret
add
xor
pop
add
clc
repnz
nop
cld
jae
pop
add
add
cmpsb
inc
hlt
scas
mov
push
mov
xchg
ret
xchg
add
add
clc
repnz
nop
cld
jae
add
out
add
arpl
inc
add
clc
repnz
nop
cld
jae
adc
adc
lcall
mov
mov
nop
cld
jae
add
add
jl
stos
add
push
mov
xchg
ret
add
add
add
add
mov
push
mov
xchg
ret
add
add
jbe
mov
mov
clc
repnz
nop
cld
jae
cli
lcall
in
nop
leave
jmp
mov
cmc
add
mov
xchg
ret
rorl
repnz
repnz
nop
cld
jae
adc
cli
add
testl
cld
jae
sub
call
xchg
sti
clc
repnz
nop
cld
jae
into
add
add
popa
add
adc
add
adc
add
dec
or
adc
inc
push
mov
nop
leave
jmp
add
inc
add
add
clc
repnz
nop
cld
jae
dec
add
add
push
mov
nop
leave
jmp
add
or
jecxz
mov
push
mov
nop
leave
jmp
add
push
mov
xchg
ret
add
add
or
rclb
out
inc
add
dec
add
add
add
addr16
add
mov
push
mov
xchg
ret
out
add
jmp
mov
clc
repnz
nop
cld
jae
add
les
add
add
push
mov
sbb
jge
add
cmp
add
sub
in
inc
js
repz
mov
nop
leave
jmp
cli
add
dec
int3
push
push
mov
xchg
ret
add
pop
add
add
decb
mov
add
repnz
nop
cld
jae
add
mov
dec
add
mov
xchg
ret
sbb
add
dec
add
jecxz
popf
mov
push
mov
nop
leave
jmp
add
dec
add
add
movsb
push
inc
bound
mov
pop
clc
repnz
nop
cld
jae
mov
add
or
add
sub
test
repnz
nop
cld
jae
into
out
sbb
mov
clc
repnz
nop
cld
jae
pop
sbb
add
cli
dec
pop
push
mov
xchg
ret
inc
add
mov
mov
pop
lcall
cld
jae
xor
add
sub
add
pop
clc
repnz
nop
cld
jae
add
mov
into
or
or
add
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
xchg
pop
add
rcr
mull
repnz
nop
cld
jae
add
lcall
nop
leave
jmp
add
add
repnz
icebp
adc
jne
clc
repnz
nop
cld
jae
add
lahf
add
push
mov
nop
leave
jmp
shl
testl
push
xor
push
mov
xchg
ret
add
add
mov
xchg
ret
inc
ds
mov
mov
push
mov
nop
leave
jmp
adc
ds
mov
jmp
add
clc
repnz
nop
cld
jae
add
pop
add
mov
clc
repnz
nop
cld
jae
cli
pop
add
add
movsb
lret
push
js
mov
xchg
ret
sub
add
mov
nop
leave
jmp
cli
add
add
add
add
mov
xchg
ret
add
add
xchg
add
add
or
clc
repnz
nop
cld
jae
add
jl
add
ljmp
nop
cld
jae
jle
cli
add
add
clc
repnz
nop
cld
jae
add
pop
loop
rorl
dec
sub
mov
cmp
ret
add
imul
jle
add
aaa
add
pop
add
jg
cmpsl
cmp
mov
mov
push
mov
xchg
ret
pop
push
add
add
repz
inc
es
add
clc
repnz
nop
cld
jae
add
jbe
add
push
add
stc
jne
clc
repnz
nop
cld
jae
loop
add
nop
nop
cld
jae
add
add
add
mov
repnz
nop
cld
jae
into
mov
sbb
pop
pusha
clc
repnz
nop
cld
jae
xor
add
xor
add
cmp
mov
xchg
ret
add
mov
dec
push
add
pop
out
add
add
out
add
add
push
mov
jmp
add
cli
add
add
add
in
add
out
cmp
add
lahf
sahf
cli
fwait
das
add
mov
push
mov
xchg
ret
add
loop
rcrl
dec
shl
push
mov
xchg
ret
add
scas
add
dec
mov
push
push
mov
xchg
ret
xchg
add
add
rcll
mov
clc
repnz
nop
cld
jae
add
repnz
cmpw
push
mov
nop
leave
jmp
add
add
dec
mov
repnz
nop
cld
jae
add
add
lcall
jae
movzwl
push
mov
xchg
ret
add
add
add
lret
push
clc
repnz
nop
cld
jae
out
add
add
add
dec
jmp
add
scas
xor
or
add
mov
inc
push
mov
nop
leave
jmp
add
into
dec
sbb
add
pop
cwtl
pop
clc
repnz
nop
cld
jae
testb
popa
dec
add
lcall
add
push
mov
nop
leave
jmp
add
xor
stos
clc
repnz
nop
cld
jae
add
pop
inc
add
sub
enter
nop
cld
jae
or
add
out
add
push
mov
xchg
ret
cli
ds
add
repnz
nop
cld
jae
cli
add
add
or
repnz
nop
cld
jae
add
jns
scas
add
repnz
nop
nop
cld
jae
repz
inc
add
add
lcall
cld
jae
add
xor
and
push
mov
xchg
ret
jmp
xchg
add
or
in
nop
leave
jmp
fldl
add
add
add
sahf
pop
jmp
pushl
add
pop
mov
add
add
add
add
add
push
mov
nop
leave
jmp
add
add
add
jmp
nop
cld
jae
xchg
jns
xor
push
adc
clc
repnz
nop
cld
jae
add
add
es
push
clc
repnz
nop
cld
jae
or
add
xchg
bnd
push
test
add
repnz
nop
cld
jae
add
flds
clc
les
clc
repnz
nop
cld
jae
mov
jl
jmp
cmp
nop
nop
cld
jae
testb
add
imul
cld
jae
add
push
mov
xchg
ret
add
jl
add
loop
add
iret
ret
clc
repnz
nop
cld
jae
out
cli
add
fstpl
mov
mov
xchg
ret
add
jle
add
dec
push
push
mov
xchg
ret
pop
add
scas
add
add
adc
les
nop
cld
jae
add
add
pop
add
add
mov
scas
jne
clc
repnz
nop
cld
jae
jbe
negl
nop
cld
jae
xor
add
xor
mov
in
xor
clc
repnz
nop
cld
jae
pop
pop
jl
push
mov
jg
movl
add
add
add
jns
or
jne
clc
repnz
nop
cld
jae
roll
add
add
ja
mov
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
dec
jle
daa
movsb
mov
or
inc
add
dec
dec
add
add
orl
nop
cld
jae
sbb
cli
add
repnz
add
push
mov
nop
leave
jmp
add
cmc
inc
insb
ror
clc
repnz
nop
cld
jae
add
inc
lcall
clc
repnz
nop
cld
jae
dec
add
add
xchg
cmpsl
test
push
mov
nop
leave
jmp
add
add
push
xchg
lcall
clc
repnz
nop
cld
jae
call
popa
out
mov
call
clc
repnz
nop
cld
jae
inc
or
jmp
clc
repnz
nop
cld
jae
mov
push
test
cmpl
jae
pop
sub
adc
in
nop
leave
jmp
add
add
nop
cld
jae
add
mov
pop
add
mov
clc
repnz
nop
cld
jae
inc
pop
add
fildl
xchg
ret
out
testb
add
addb
insl
mov
clc
repnz
nop
cld
jae
repnz
jl
add
jno
add
fadds
jne
clc
repnz
nop
cld
jae
sar
add
sar
nop
nop
cld
jae
add
add
adc
cmp
jae
repnz
nop
cld
jae
inc
out
jle
into
cmp
push
mov
nop
leave
jmp
roll
add
mov
add
or
dec
add
cs
cs
cmp
sbb
repz
repnz
nop
cld
jae
ds
add
add
je
fmull
test
push
add
clc
repnz
nop
cld
jae
xor
in
inc
cmp
mov
xchg
ret
add
or
add
clc
repnz
nop
cld
jae
add
add
add
cmp
clc
push
mov
nop
leave
jmp
add
adc
mov
add
add
nop
nop
cld
jae
out
add
add
dec
add
fldenv
xor
add
clc
repnz
nop
cld
jae
add
jmp
movsb
push
mov
xchg
ret
add
add
jbe
pop
mov
adc
push
push
mov
xchg
ret
mov
add
lcall
loop
push
mov
xchg
ret
out
add
loope
es
push
mov
nop
leave
jmp
inc
adc
repnz
nop
cld
jae
notl
mulb
add
push
mov
nop
leave
jmp
add
add
lcall
clc
repnz
nop
cld
jae
add
jbe
fldl
add
clc
repnz
nop
cld
jae
add
xchg
pusha
add
inc
add
repnz
nop
cld
jae
or
dec
cmc
add
repnz
nop
cld
jae
popa
add
add
add
add
call
and
add
add
into
fsts
mov
nop
leave
jmp
add
testb
cmpsl
das
add
clc
repnz
nop
cld
jae
add
add
add
nop
cld
jae
adc
mov
lcall
or
repnz
nop
cld
jae
pop
dec
call
mov
mov
sub
clc
repnz
nop
cld
jae
add
xchg
add
add
add
repnz
nop
cld
jae
sub
and
clc
repnz
nop
cld
jae
mov
adc
imul
mov
push
mov
nop
leave
jmp
xchg
cli
adc
xor
xor
add
push
mov
xchg
ret
cli
add
mov
nop
nop
cld
jae
add
pop
add
add
iret
mov
clc
repnz
nop
cld
jae
add
testb
rcll
out
add
mov
nop
leave
jmp
lock
add
adc
pop
push
mov
nop
leave
jmp
add
jl
jbe
add
in
add
add
rcll
add
or
push
mov
xchg
ret
add
add
xor
add
jno
pushl
push
mov
xchg
ret
arpl
add
add
add
add
mov
jmp
incl
add
dec
dec
testb
add
sub
mov
xchg
ret
add
add
loop
add
and
mov
fldl
xchg
ret
les
pop
add
add
add
jmp
cli
add
loop
testl
aad
add
push
mov
xchg
ret
xor
jbe
jns
push
clc
repnz
nop
cld
jae
add
add
and
lock
add
adc
add
cmpsl
push
lods
mov
push
mov
nop
leave
jmp
call
je
pop
push
mov
nop
leave
jmp
sub
inc
add
pop
ds
push
mov
nop
leave
jmp
add
scas
add
mov
mov
xchg
ret
ds
jl
adc
add
dec
cmpl
push
mov
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
add
add
add
pusha
push
mov
nop
leave
jmp
repnz
add
out
lret
popa
push
mov
nop
leave
jmp
add
add
lcall
mov
in
nop
leave
jmp
lcall
add
mov
push
mov
nop
leave
jmp
add
add
add
add
repnz
nop
cld
jae
roll
testb
fldl
int3
push
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
testb
add
add
mov
clc
repnz
nop
cld
jae
jle
imul
add
clc
repnz
nop
cld
jae
add
fstl
add
push
push
mov
xchg
ret
add
dec
add
mov
push
mov
nop
leave
jmp
mov
inc
cmc
pop
add
push
xor
mov
clc
repnz
nop
cld
jae
add
xchg
add
mov
mov
add
in
nop
leave
jmp
loop
add
inc
in
dec
clc
repnz
nop
cld
jae
push
arpl
add
pop
lock
clc
add
popf
cmc
inc
add
or
inc
pop
add
push
mov
mov
add
insb
jo
ret
aaa
add
iret
mov
push
mov
xor
add
add
add
jnp
add
or
xor
add
clc
repnz
nop
cld
jae
cli
aas
push
push
mov
nop
leave
jmp
repnz
cli
add
sbb
out
push
mov
nop
leave
jmp
adc
xchg
add
push
push
mov
nop
leave
jmp
mov
add
dec
cmp
push
mov
xchg
ret
sub
add
dec
sub
clc
repnz
nop
cld
jae
xchg
add
add
lcall
repnz
nop
cld
jae
cli
add
testb
pop
jmp
push
inc
add
scas
sub
lcall
rclb
nop
leave
jmp
add
add
add
fisttpll
test
sbb
nop
nop
cld
jae
loop
add
pop
mov
clc
repnz
nop
cld
jae
add
fstpl
mov
adc
repnz
nop
cld
jae
repz
inc
add
add
xor
add
clc
repnz
nop
cld
jae
pop
cli
mov
pop
xchg
loope
push
push
mov
xchg
ret
add
push
add
popa
add
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
sub
sub
adc
mov
push
push
mov
nop
leave
jmp
add
add
div
add
add
jae
repnz
nop
cld
jae
cli
testb
push
mov
xchg
ret
cli
add
add
add
add
in
and
clc
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
add
out
or
arpl
add
mov
add
repnz
nop
cld
jae
loop
add
add
popa
add
repnz
nop
cld
jae
add
add
add
shll
fdivl
call
jb
inc
add
sub
add
pop
mov
clc
repnz
nop
cld
jae
push
fldl
add
cmp
clc
repnz
nop
cld
jae
lcall
mov
clc
repnz
nop
cld
jae
add
notb
mov
mov
push
mov
nop
leave
jmp
testb
or
mov
adc
repnz
nop
cld
jae
pop
add
add
push
add
clc
repnz
nop
cld
jae
pop
dec
pop
add
add
add
add
repnz
nop
cld
jae
lcall
and
nop
add
clc
repnz
nop
cld
jae
mov
add
repnz
and
push
mov
xchg
ret
cli
fstl
add
add
push
mov
xchg
ret
jl
add
into
scas
rolb
sbb
clc
repnz
nop
cld
jae
testb
ds
add
mov
nop
leave
jmp
testl
fldl
or
nop
nop
cld
jae
lock
pop
push
mov
xchg
ret
xchg
jle
arpl
or
mov
rolb
mov
push
clc
repnz
nop
cld
jae
pop
testl
test
repnz
nop
cld
jae
lcall
clc
repnz
nop
cld
jae
add
repz
add
loop
add
add
add
add
adc
jl
and
repnz
nop
cld
jae
add
pop
add
clc
repnz
nop
cld
jae
add
add
stos
inc
clc
repnz
nop
cld
jae
and
scas
mov
add
push
add
add
add
ja
hlt
imul
jae
adc
add
les
les
push
stos
mov
clc
repnz
nop
cld
jae
loop
add
add
jmp
xabort
nop
nop
cld
jae
out
add
scas
add
sub
repnz
nop
cld
jae
notb
test
push
mov
xchg
ret
lcall
add
add
clc
repnz
nop
cld
jae
repnz
lret
clc
repnz
nop
cld
jae
pop
add
lcall
std
mov
clc
repnz
nop
cld
jae
add
xor
push
mov
xchg
ret
repz
add
inc
add
jge
push
mov
xchg
ret
testb
jns
repnz
add
mov
pop
push
mov
xchg
ret
or
or
add
mov
add
add
repnz
nop
cld
jae
add
add
add
add
je
push
mov
nop
leave
jmp
repz
add
xor
cmpl
push
mov
nop
leave
jmp
add
mov
je
clc
repnz
nop
cld
jae
imul
add
nop
nop
cld
jae
mov
xor
mov
sahf
iret
inc
add
lcall
add
xchg
push
mov
nop
leave
jmp
add
add
jmp
clc
repnz
nop
cld
jae
call
dec
push
push
mov
xchg
ret
add
add
popa
xacquire
push
mov
clc
repnz
nop
cld
jae
add
sbb
jmp
nop
cld
jae
add
loop
add
out
add
rolb
rolb
mov
call
clc
repnz
nop
cld
jae
xchg
add
add
ljmp
add
add
jbe
jmp
addb
mov
mov
xchg
ret
jle
adc
push
repnz
mov
pushl
clc
repnz
nop
cld
jae
jl
add
add
pushl
push
mov
xchg
ret
dec
add
add
je
add
push
mov
nop
leave
jmp
add
add
mov
nop
nop
cld
jae
dec
inc
add
inc
add
add
mov
nop
leave
jmp
pop
add
lcall
clc
repnz
nop
cld
jae
call
add
add
mov
clc
repnz
nop
cld
jae
add
xor
ret
adc
jns
add
add
add
fldcw
mov
push
mov
nop
leave
jmp
add
add
add
lock
mov
push
mov
xchg
ret
inc
mov
pop
shr
add
add
mov
xchg
ret
repz
add
out
lcall
loop
push
mov
xchg
ret
add
add
add
mov
mov
nop
nop
cld
jae
inc
add
add
mov
xchg
ret
les
adc
or
imul
xor
mov
push
add
clc
repnz
nop
cld
jae
add
ds
jle
jno
push
clc
repnz
nop
cld
jae
scas
add
out
add
add
add
mov
inc
add
add
pop
mov
dec
add
and
push
mov
xchg
ret
add
add
inc
or
rolb
add
clc
repnz
nop
cld
jae
mov
cmp
clc
repnz
nop
cld
jae
scas
add
nop
add
mov
jns
mov
jmp
add
into
leave
xchg
add
cld
jne
push
mov
nop
leave
jmp
pop
add
inc
pop
mov
push
mov
xchg
ret
cmc
dec
repnz
or
or
nop
nop
cld
jae
add
add
add
mov
add
repnz
nop
cld
jae
lcall
dec
push
mov
nop
leave
jmp
add
fldl
add
fld1
and
add
clc
repnz
nop
cld
jae
push
jns
add
push
mov
xchg
ret
add
add
mov
test
push
mov
nop
leave
jmp
testl
cmp
push
mov
nop
leave
jmp
add
xor
add
add
out
mov
js
pop
or
and
push
add
clc
repnz
nop
cld
jae
add
cli
in
call
clc
repnz
nop
cld
jae
cli
add
xchg
pop
jg
stc
clc
repnz
nop
cld
jae
loop
add
cli
repz
lock
clc
repnz
nop
cld
jae
dec
add
test
leave
push
mov
nop
leave
jmp
call
jbe
out
and
mov
clc
repnz
nop
cld
jae
cli
inc
add
into
jg
mov
push
sub
sbb
xchg
add
add
repnz
nop
cld
jae
xor
add
push
testb
xor
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
les
call
nop
leave
jmp
call
add
sti
clc
repnz
nop
cld
jae
or
add
mov
repnz
and
ss
push
mov
nop
leave
jmp
dec
adc
in
nop
leave
jmp
mov
add
mov
xchg
clc
repnz
nop
cld
jae
push
scas
out
add
add
outsl
push
push
mov
nop
leave
jmp
add
inc
add
stos
push
mov
xchg
ret
add
add
pop
inc
inc
sbb
add
clc
repnz
nop
cld
jae
add
jmp
inc
insb
add
clc
repnz
nop
cld
jae
add
add
lcall
nop
nop
cld
jae
add
add
roll
adc
add
inc
add
add
add
xchg
dec
push
mov
loopne
aaa
xchg
roll
add
mov
insl
and
jecxz
jne
clc
repnz
nop
cld
jae
add
popa
and
add
mov
nop
leave
jmp
dec
dec
add
add
pop
xor
push
mov
ljmp
outsb
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
pop
pop
inc
or
jae
inc
add
cli
scas
add
add
mov
and
shr
clc
repnz
nop
cld
jae
add
add
xchg
add
aam
rep
clc
repnz
nop
cld
jae
push
add
xchg
div
add
jp
push
mov
nop
leave
jmp
repz
jmp
cmc
sbb
xchg
add
push
divb
add
or
test
adc
add
repnz
nop
cld
jae
mov
mov
pop
mov
clc
repnz
nop
cld
jae
xor
or
cmp
add
add
repnz
nop
cld
jae
inc
add
repnz
nop
cld
jae
repz
neg
mov
push
mov
nop
leave
jmp
inc
add
add
clc
repnz
nop
cld
jae
mov
add
testb
pushl
clc
repnz
nop
cld
jae
sub
pop
jae
mov
nop
leave
jmp
add
add
or
or
dec
and
clc
repnz
nop
cld
jae
add
test
add
push
mov
nop
leave
jmp
popa
dec
jmp
jl
ja
and
push
mov
nop
leave
jmp
add
xor
add
in
div
clc
repnz
nop
cld
jae
add
add
xor
inc
add
add
add
add
add
push
mov
nop
leave
jmp
add
add
adc
loopne
mov
adc
pop
push
mov
xchg
ret
add
rol
add
add
mov
add
push
mov
xchg
ret
add
mov
dec
add
pop
imul
clc
repnz
nop
cld
jae
dec
add
fists
cld
jae
add
add
jne
rep
clc
repnz
nop
cld
jae
or
scas
flds
add
sti
push
clc
repnz
nop
cld
jae
add
into
arpl
mov
push
mov
xchg
ret
or
add
add
add
dec
adc
repnz
nop
cld
jae
repz
add
add
adc
push
mov
xchg
ret
add
add
add
add
mov
mov
xchg
ret
add
divb
push
mov
xchg
ret
add
out
add
inc
testb
dec
sub
repnz
nop
cld
jae
sbb
add
add
aas
adc
in
nop
leave
jmp
or
into
add
push
add
movsl
clc
repnz
nop
cld
jae
testb
add
out
add
mov
nop
cld
jae
mov
add
loop
push
icebp
adc
mov
add
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
repnz
add
dec
add
add
push
clc
repnz
nop
cld
jae
add
add
add
sbb
adc
repnz
nop
cld
jae
add
xchg
out
sub
inc
jb
push
mov
nop
leave
jmp
sub
aad
rolb
mov
jo
mov
mov
push
mov
nop
leave
jmp
repz
add
add
add
pop
and
clc
repnz
nop
cld
jae
scas
mov
popa
add
jmp
jns
testl
out
adc
mov
mov
jmp
loopne
add
repz
add
add
repnz
nop
cld
jae
adc
repnz
testb
daa
lods
mov
push
mov
xchg
ret
add
add
popa
add
push
clc
repnz
nop
cld
jae
add
cli
add
mov
je
clc
repnz
nop
cld
jae
add
dec
xor
mov
clc
repnz
nop
cld
jae
add
fsubr
inc
add
add
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
pop
cli
add
add
add
outsl
push
push
mov
xchg
ret
jbe
add
out
clc
jmp
push
mov
nop
leave
jmp
xor
add
add
sub
out
clc
repnz
nop
cld
jae
add
ds
add
clc
repnz
nop
cld
jae
jle
test
popa
clc
repnz
nop
cld
jae
add
add
add
les
xchg
cmp
nop
cld
jae
add
add
add
or
mov
xchg
ret
mov
pop
xchg
add
scas
mov
jmp
incl
add
lcall
les
push
movsl
cmp
movsb
clc
repnz
nop
cld
jae
add
add
out
add
incl
pop
roll
mov
add
add
add
repz
adc
mov
push
mov
xchg
ret
add
inc
jns
xchg
pop
out
mov
clc
repnz
nop
cld
jae
cmc
add
add
shrd
loop
add
add
lcall
mov
clc
repnz
nop
cld
jae
inc
jmp
add
clc
repnz
nop
cld
jae
add
arpl
mov
xchg
ret
add
mov
mov
pop
add
or
jne
je
repnz
nop
cld
jae
jl
mov
lods
mov
clc
repnz
nop
cld
jae
push
add
lcall
popa
push
mov
xchg
ret
add
dec
dec
or
mov
add
xchg
mov
push
mov
nop
leave
jmp
add
add
arpl
push
test
dec
add
mov
xchg
ret
lcall
pop
push
clc
repnz
nop
cld
jae
out
arpl
add
add
add
repnz
nop
cld
jae
dec
xchg
add
add
jl
clc
repnz
nop
cld
jae
testl
jl
mov
mov
xchg
ret
pop
dec
notb
add
push
mov
xchg
ret
sub
testb
scas
dec
je
push
mov
nop
leave
jmp
loop
add
mov
push
mov
nop
leave
jmp
add
add
add
jl
repnz
repnz
nop
cld
jae
add
repz
xchg
int
clc
repnz
nop
cld
jae
into
shl
adc
jl
add
push
mov
xchg
ret
add
cmc
adc
out
arpl
xchg
mov
popl
clc
repnz
nop
cld
jae
add
arpl
out
ds
push
mov
xchg
ret
add
dec
out
or
add
add
in
clc
repnz
nop
cld
jae
or
pop
je
clc
repnz
nop
cld
jae
add
into
inc
add
push
push
mov
xchg
ret
jmp
mov
add
sub
popa
add
repnz
nop
cld
jae
add
mov
add
push
mov
xchg
ret
add
xor
out
call
adc
add
add
add
and
and
push
mov
xchg
ret
cli
add
or
add
nop
cld
jae
add
jle
adc
xor
cmc
add
repnz
nop
cld
jae
add
add
movsl
pop
add
push
mov
nop
leave
jmp
add
add
add
add
mov
xchg
ret
add
add
push
clc
repnz
nop
cld
jae
add
add
shl
add
pop
push
mov
xchg
ret
jle
add
add
leave
mov
clc
repnz
nop
cld
jae
add
jbe
pop
xor
lea
repnz
nop
cld
jae
xor
add
add
loop
jnp
clc
repnz
nop
cld
jae
mov
mov
scas
mov
nop
nop
cld
jae
jl
add
add
add
clc
repnz
nop
cld
jae
sub
mov
push
mov
sbb
add
popa
int3
mov
mov
aas
in
dec
push
mov
nop
leave
jmp
adc
mov
sub
push
mov
nop
leave
jmp
add
pop
add
add
add
add
repnz
nop
cld
jae
out
jns
and
mov
xchg
ret
add
add
jmp
mov
nop
cld
jae
arpl
push
sub
add
or
repnz
nop
cld
jae
dec
add
testb
adc
add
push
mov
nop
leave
jmp
add
ds
mov
add
in
nop
leave
jmp
or
add
add
add
clc
repnz
nop
cld
jae
xchg
dec
mulb
mov
clc
repnz
nop
cld
jae
dec
add
add
testl
cld
jae
mov
flds
sub
jmp
nop
cld
jae
dec
add
jb
mov
add
nop
nop
cld
jae
pop
add
pop
insl
lea
clc
repnz
nop
cld
jae
add
add
pushf
push
clc
repnz
nop
cld
jae
into
repz
push
cli
push
and
mov
push
clc
repnz
nop
cld
jae
xchg
jns
repnz
dec
add
rolb
mov
mov
clc
repnz
nop
cld
jae
pop
dec
lret
push
push
mov
xchg
ret
pop
add
add
add
inc
pop
push
clc
repnz
nop
cld
jae
dec
repz
dec
mov
pusha
lret
xchg
ret
mulb
into
xor
add
incb
nop
nop
cld
jae
divb
test
movb
test
inc
add
add
sbb
add
pop
out
in
pop
push
mov
xchg
ret
popa
call
mov
inc
add
clc
repnz
nop
cld
jae
jle
add
add
push
dec
xor
push
mov
nop
leave
jmp
push
xchg
add
mov
sbb
repnz
nop
cld
jae
pop
or
fdivrs
lret
in
nop
leave
jmp
sbb
mov
add
cli
mov
push
mov
add
add
mov
add
add
add
lret
sahf
and
clc
repnz
nop
cld
jae
add
mov
pop
imulb
js
repnz
nop
cld
jae
testl
mov
lret
push
mov
nop
leave
jmp
or
inc
add
add
lock
clc
repnz
nop
cld
jae
jl
dec
into
dec
add
cmp
mov
clc
repnz
nop
cld
jae
inc
dec
add
stos
imul
clc
repnz
nop
cld
jae
cli
add
adc
jl
clc
repnz
nop
cld
jae
add
pop
pop
clc
repnz
nop
cld
jae
add
add
mov
rclb
cli
roll
xchg
ret
testb
add
fnstenv
test
nop
leave
jmp
loop
add
adc
add
inc
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
jmp
repnz
nop
cld
jae
add
scas
popa
les
add
out
clc
push
push
mov
xchg
ret
add
add
les
lcall
mov
nop
leave
jmp
repz
mov
je
push
mov
nop
leave
jmp
cmc
loop
add
add
loope
add
adc
lcall
add
push
clc
repnz
nop
cld
jae
xor
adc
adc
clc
repnz
nop
cld
jae
add
dec
cmc
test
popa
clc
repnz
nop
cld
jae
add
xor
into
add
add
push
mov
nop
leave
jmp
jl
jns
add
xchg
add
test
inc
pop
add
in
add
mov
imul
nop
leave
jmp
mov
add
adc
xchg
stc
push
push
mov
nop
leave
jmp
add
add
dec
cmp
repnz
nop
cld
jae
cli
add
add
mov
push
mov
nop
leave
jmp
add
add
testb
not
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
add
lcall
nop
nop
cld
jae
inc
add
add
push
js
clc
repnz
nop
cld
jae
add
xor
sub
ficoml
repnz
nop
cld
jae
add
arpl
add
mov
mov
jge
dec
adc
in
nop
leave
jmp
popa
add
loop
add
clc
repnz
nop
cld
jae
jns
lcall
sar
nop
nop
cld
jae
or
inc
mov
inc
in
mov
clc
repnz
nop
cld
jae
add
movsb
andl
jae
mov
shl
inc
sarl
inc
sub
in
nop
leave
jmp
lock
add
xor
push
mov
xchg
ret
lcall
loop
mov
push
clc
repnz
nop
cld
jae
add
pop
xor
pop
jmp
push
and
push
mov
nop
leave
jmp
inc
jns
jle
add
roll
fdivr
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
add
adc
mov
or
mov
inc
add
add
add
add
add
scas
mov
clc
repnz
nop
cld
jae
add
aam
xor
clc
repnz
nop
cld
jae
adc
mov
nop
leave
jmp
jbe
add
add
add
repz
mov
nop
leave
jmp
repz
adc
add
rcll
je
clc
repnz
nop
cld
jae
add
dec
push
push
mov
xchg
ret
add
scas
add
mov
nop
nop
cld
jae
add
add
jns
idivb
cmp
repnz
nop
cld
jae
add
add
jbe
mov
mov
mov
xchg
ret
or
add
add
add
ret
push
mov
xchg
ret
or
mov
add
lcall
nop
cld
jae
into
add
adc
mov
popf
ret
push
mov
nop
leave
jmp
add
xchg
add
xchg
call
mov
push
mov
xchg
ret
lock
xor
imul
xor
hlt
xchg
push
out
scas
testl
push
mov
nop
leave
jmp
cmc
or
add
clc
repnz
nop
cld
jae
add
add
add
cmp
loop
clc
repnz
nop
cld
jae
add
cmpsb
das
mov
clc
repnz
nop
cld
jae
push
add
mov
push
mov
xchg
ret
add
imul
or
mov
mov
clc
repnz
nop
cld
jae
jmp
add
in
nop
leave
jmp
add
out
add
add
cmp
mov
nop
leave
jmp
arpl
mov
push
xchg
and
mov
add
push
mov
nop
leave
jmp
dec
inc
xor
sub
leave
sub
in
nop
leave
jmp
jbe
add
add
and
add
clc
repnz
nop
cld
jae
cli
testl
scas
jmp
jle
mov
out
add
ds
sbb
xlat
lods
push
clc
repnz
nop
cld
jae
add
add
adc
repnz
aad
jb
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
xchg
lcall
jne
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
add
fldcw
cmp
clc
repnz
nop
cld
jae
xchg
flds
add
pushl
clc
repnz
nop
cld
jae
add
add
add
int3
ret
clc
repnz
nop
cld
jae
jbe
lcall
mov
push
mov
xchg
ret
add
add
stc
push
push
mov
nop
leave
jmp
add
adc
popa
pop
pop
push
mov
xchg
ret
xor
add
add
sbb
add
pop
mov
push
mov
nop
leave
jmp
into
or
dec
repnz
dec
xor
clc
repnz
nop
cld
jae
dec
cmc
lcall
mov
add
in
nop
leave
jmp
dec
dec
flds
mov
add
add
repnz
nop
cld
jae
out
add
add
add
jle
xchg
stc
call
in
nop
leave
jmp
add
cli
dec
rolb
dec
mov
clc
repnz
nop
cld
jae
cli
jle
add
out
inc
bound
mov
add
mov
inc
add
dec
add
mov
mov
clc
repnz
nop
cld
jae
pop
adc
add
adc
mov
jmp
add
flds
cmc
add
xchg
pop
add
cli
sti
mov
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
flds
add
imul
into
push
jmp
add
inc
push
add
out
add
push
push
mov
xchg
ret
add
arpl
or
jne
push
push
mov
xchg
ret
inc
testb
add
movzwl
clc
repnz
nop
cld
jae
adc
add
add
add
mov
xchg
ret
xchg
add
add
out
add
in
add
loope
clc
repnz
nop
cld
jae
dec
add
and
clc
repnz
nop
cld
jae
dec
jle
push
mov
es
xchg
insb
call
push
mov
nop
leave
jmp
add
jle
mov
je
clc
repnz
nop
cld
jae
add
popl
jge
clc
repnz
nop
cld
jae
add
dec
add
push
mov
xchg
ret
add
jbe
or
repnz
addr16
push
mov
nop
leave
jmp
add
fstps
sub
mov
push
mov
xchg
ret
ds
add
add
neg
es
mov
push
mov
nop
leave
jmp
add
add
loopne
repnz
nop
cld
jae
les
dec
scas
repz
inc
rolb
mov
in
nop
leave
jmp
mov
add
sub
pusha
add
push
mov
nop
leave
jmp
mov
out
lcall
nop
cld
jae
cli
popa
add
add
mov
push
mov
nop
leave
jmp
add
adc
push
push
mov
xchg
ret
add
add
cmc
dec
add
push
and
mov
jne
push
mov
nop
leave
jmp
testb
add
cld
adc
add
repnz
nop
cld
jae
inc
notb
out
jae
and
mov
mov
push
mov
nop
leave
jmp
add
arpl
ds
push
mov
xchg
ret
add
add
jbe
mov
add
mov
xchg
ret
add
into
testb
add
repnz
nop
cld
jae
fnsave
add
jbe
add
nop
nop
cld
jae
arpl
out
jl
lock
addr16
push
mov
nop
leave
jmp
add
lcall
mov
xchg
ret
pop
repz
add
pop
add
push
mov
nop
leave
jmp
xor
add
xor
mov
clc
repnz
nop
cld
jae
add
scas
add
and
imul
nop
nop
cld
jae
mov
lcall
add
add
in
nop
leave
jmp
add
add
add
sar
adc
add
inc
lahf
stos
pop
add
dec
or
int
push
mov
add
mov
stos
ret
std
stos
jmp
outsb
cmpsl
movzwl
add
xchg
cmpl
sbb
or
out
push
dec
and
mov
int3
and
repnz
inc
adc
aam
rolb
mov
mov
mov
scas
orl
mov
add
leave
jle
ds
lret
lahf
test
pop
andl
mov
or
mov
dec
into
fnclex
add
or
jo
mov
mov
mov
ret
and
mov
add
lahf
out
ficoms
inc
add
inc
ss
stos
in
sbb
fidivrs
jb
mov
sub
lcall
mov
add
inc
faddl
mov
loop
mov
imul
das
or
add
adc
imul
sub
test
aas
push
imul
in
add
cmp
jl
mov
mov
lea
aas
push
movb
test
mov
add
mov
sub
xchg
mulb
jmp
aam
or
mov
mov
xor
pop
mov
test
add
inc
add
sub
adc
dec
mov
ds
lds
ret
push
pop
repnz
rolb
mov
adc
add
and
mov
lcall
add
jbe
pop
lahf
inc
mov
and
rolb
ret
mov
add
mov
add
add
es
cwtl
mov
test
push
sub
add
pop
std
and
mov
or
cltd
loop
mov
add
mov
xchg
mov
add
pop
frstor
xor
mov
rolb
sbb
dec
xchg
sub
mov
jae
fmull
out
fimuls
add
out
add
mov
pop
test
cwtl
ret
test
mov
dec
into
std
popf
xchg
cwtl
jnp
loop
mov
cwtl
test
jecxz
jb
mov
inc
add
mov
out
imul
fisttpll
jp
mov
test
jnp
adc
mov
and
repz
add
xchg
shl
push
mov
add
testb
mov
mov
cmc
mov
add
mov
add
mov
roll
mov
das
jbe
xchg
and
mov
pop
add
mov
pop
mov
daa
cmc
or
mov
add
rolb
pop
imul
xchg
int3
and
jmp
repz
pop
movsb
out
and
mov
add
ljmp
xor
cmc
xchg
mov
mov
and
xor
mov
jp
lods
pop
and
mov
imul
cmpsl
fwait
imul
std
sbb
movsb
es
add
int3
addb
out
rolb
mov
inc
enter
lcall
out
sub
add
add
inc
stos
les
pop
pop
popl
mov
jnp
int
and
mov
add
mov
adc
mov
mov
add
mov
inc
jl
flds
mov
add
mov
xor
mov
add
add
sbb
or
out
add
stos
sbb
enter
mov
add
push
add
push
push
adc
adc
repnz
cmp
add
std
lcall
mov
pop
dec
adc
test
mov
fisubl
not
pop
imul
add
pop
mov
aad
js
test
dec
fs
push
addb
mov
cmp
nop
add
sub
or
lods
aaa
repz
add
inc
nop
add
cmp
out
sbb
cmp
mov
add
push
out
arpl
add
push
mov
cwtl
pop
stos
pushl
mov
mov
or
dec
xchg
test
je
sub
in
es
add
test
pop
test
push
xchg
xchg
add
mov
push
incb
std
inc
add
and
xchg
add
sbb
add
add
mov
pop
mov
push
inc
lahf
xor
add
cmp
mov
add
stos
push
xchg
add
add
lods
andl
mov
cmp
mov
jb
mov
ja
mov
outsb
push
fwait
lds
and
mov
testl
je
add
add
dec
arpl
add
cmp
rolb
mov
stos
or
xor
daa
mov
push
rolb
mov
bound
mov
movsl
sbb
add
mov
add
test
mov
mov
add
cmp
add
mov
xor
lods
loopne
mov
and
mov
dec
insb
scas
jbe
jns
pop
or
loop
mov
lods
mov
enter
cmp
add
mov
mov
sbb
es
stc
lods
xchg
sub
xor
mov
pushl
fisubrl
dec
out
and
cmp
ja
add
addb
and
mov
mov
mov
aas
fstps
or
push
xor
adc
add
mov
loope
jmp
add
sbb
out
insl
cmc
js
sahf
loop
mov
shr
xchg
xor
add
mov
add
dec
xor
add
ds
stos
add
mov
mov
xor
mov
add
mov
stos
jge
bound
mov
imul
sbb
mov
add
rolb
mov
push
mov
addb
jmp
outsb
sub
xchg
add
pop
adc
add
mov
add
xchg
movsl
dec
xor
mov
je
add
outsl
pop
xor
xchg
mov
mov
iret
xchg
ds
cwtl
test
inc
aas
movsl
inc
incb
adc
mov
xchg
add
inc
pop
inc
outsl
out
jne
pop
xchg
out
stos
or
jo
mov
adc
inc
cmp
outsl
fucomp
arpl
add
daa
call
pop
insl
call
sbb
mov
sbb
add
flds
add
ret
pop
fucomp
pop
jecxz
xor
xor
lds
pop
mov
lea
dec
pop
or
add
and
stc
mov
inc
pop
rolb
mov
add
mov
add
xor
mov
xchg
adc
sub
add
or
add
inc
add
je
xchg
call
cmpsb
cmp
add
mov
add
or
mov
jmp
mov
iret
xor
into
cmp
in
push
popa
in
test
loopne
mov
mov
inc
jl
icebp
call
jge
fs
bound
mov
jns
cmp
sbb
leave
ja
fcomi
push
adc
out
stc
dec
in
sbb
xchg
add
mov
inc
ljmp
sbb
pop
ja
pusha
add
iret
imul
or
add
dec
jbe
loop
mov
int3
push
inc
xor
and
mov
cmc
mov
mov
imul
cwtl
pop
into
js
jb
mov
cmp
inc
add
xlat
jo
mov
aaa
loope
add
sbb
insl
pop
xor
mov
add
pop
cmp
add
pop
cmp
inc
or
jo
mov
pushf
mov
jae
outsl
mov
cmc
add
mov
in
shll
and
add
cltd
dec
mov
ret
adc
mov
clc
add
sub
loopne
mov
and
fadd
fisubrl
mov
dec
mov
icebp
jne
das
mov
int
cmc
xchg
fst
add
push
pusha
add
aam
and
xchg
sub
pop
adc
mov
bound
mov
or
mov
inc
and
add
inc
addr16
bound
mov
repz
test
lret
mov
sbb
xor
mov
inc
push
sbb
xor
lahf
and
xchg
and
rolb
mov
dec
out
or
ret
push
add
mov
cmp
add
mov
fmull
sbb
mov
add
sub
add
stos
inc
add
pop
addb
loopne
mov
out
pop
and
mov
data16
and
add
and
mov
cmp
or
sub
inc
lds
jbe
add
ss
xchg
cmp
inc
xchg
dec
xor
mov
inc
mov
not
xlat
addb
leave
in
mov
into
imul
hlt
es
stc
push
dec
mov
popf
insl
xor
or
add
sub
and
push
push
fs
in
push
add
mov
nop
add
cmp
fwait
out
add
dec
mov
mov
in
iret
rolb
mov
sbb
movsb
adc
mov
add
test
ret
xchg
mov
nop
add
jb
mov
aaa
jnp
dec
out
add
mov
inc
lret
jl
jae
jmp
add
push
aam
inc
add
add
and
mov
add
mov
cld
lcall
jmp
mov
push
add
fwait
xchg
test
fs
test
test
inc
xor
test
add
lods
aad
int
int
xchg
push
mov
mov
sub
int3
adc
mov
jo
mov
inc
push
add
enter
js
insb
jle
mov
add
inc
add
addl
xor
add
es
or
mov
mov
gs
add
xor
mov
mov
inc
mov
add
mov
lea
jne
cld
push
add
insl
pusha
add
mov
je
jp
add
push
or
hlt
push
add
scas
int3
inc
xor
mov
cmp
and
xchg
aad
jge
data16
repnz
mov
mov
jnp
mov
fnstsw
cmp
mov
addb
adc
mov
ss
adc
mov
lock
movsb
mov
popf
xchg
jbe
inc
mov
jo
mov
cmpsl
dec
sbb
push
sub
mov
cltd
pop
fwait
mov
cmp
ficompl
ljmp
mov
xchg
mov
cmp
push
es
shl
pop
or
add
loope
cmp
sub
loope
clc
pop
push
imul
add
add
jl
mov
inc
add
imul
mov
inc
mov
xchg
add
test
test
dec
ret
xor
aaa
out
or
mov
mov
xchg
pop
aas
xor
jle
sub
imul
push
std
push
push
push
adc
inc
vdivpd
test
aad
push
insb
cmp
mov
add
sbb
push
int3
in
wbinvd
and
mov
sbb
cmpsb
insb
xchg
enter
add
test
icebp
mov
add
mov
inc
fdivp
sbb
xchg
jecxz
fsub
out
stos
push
popa
aam
lock
arpl
lcall
call
loop
mov
das
push
je
dec
add
clc
mov
inc
aas
add
mov
int3
pop
cmp
mov
cmp
bound
mov
cmp
in
and
rorl
mov
mov
add
mov
add
add
insb
mov
add
cmp
push
mov
add
add
cli
mov
xlat
mov
mov
and
mov
ret
push
fadds
lret
dec
cli
mov
mov
leave
adc
mov
adc
dec
mov
push
scas
stos
cmp
aad
add
out
sarl
add
fidivrl
subl
pop
call
pop
stos
aad
cld
negl
rolb
mov
jle
mov
mov
add
pop
sysenter
or
lods
jg
add
mov
add
xchg
add
add
jge
adc
lods
jnp
xor
fs
adc
mov
mov
jmp
add
xchg
jnp
add
repnz
adc
sub
mov
addb
jnp
out
ljmp
clc
jb
mov
add
pop
enter
inc
add
push
pop
jne
hlt
addr16
cmp
add
xchg
fsubl
add
mov
dec
hlt
sti
pop
pop
lds
mov
push
test
mov
add
popf
mov
sbb
out
lret
sub
add
add
add
jmp
out
sub
shl
mov
mov
imul
add
cli
out
mov
mov
fisttps
push
add
test
pop
repz
mov
int
clc
sbb
roll
rcll
repz
call
push
insb
test
jo
mov
add
adc
xchg
and
mov
add
mov
cltd
cmp
call
jb
mov
ljmp
add
mov
mov
dec
loope
xchg
add
add
add
mov
lds
add
lods
pushf
addb
imull
pop
jp
jno
cmp
add
jne
inc
adc
out
enter
add
push
add
ficoml
xchg
mov
lock
pop
cmc
or
add
sub
repnz
cmpsl
faddl
mov
stc
popf
push
add
sub
rorl
sub
sbb
add
imul
fwait
js
adc
add
sub
outsl
inc
add
fbstp
or
mov
pop
jmp
rolb
mov
mov
addr16
add
shl
test
mov
out
xlat
push
add
leave
shll
icebp
mov
mov
add
xlat
aaa
addb
cmp
mov
mov
xor
fwait
and
add
add
ds
add
mov
xchg
or
add
stos
inc
popf
rolb
mov
mov
sub
loope
add
pop
cs
sbb
leave
add
mov
pusha
add
push
add
sub
cwtl
jb
mov
mov
loop
mov
ret
xchg
sbb
add
pop
in
mov
pop
test
mov
adc
mov
repnz
sub
and
mov
sub
mov
xchg
lds
push
imul
add
mov
jl
add
mov
lret
mov
cmpsb
ljmp
negb
hlt
mov
xor
mov
push
iret
push
sub
cli
scas
inc
ss
sub
out
pop
xor
mov
fisttpll
inc
or
dec
es
stos
mov
jg
add
jp
mov
lea
in
lods
jmp
pop
and
add
and
in
rolb
mov
fs
mov
mov
pop
fldenv
add
mov
inc
push
sub
icebp
fldt
mov
jb
mov
mov
sbb
mov
dec
in
int
cmp
stos
mov
add
add
pushw
scas
adc
scas
xor
frstor
mov
mov
jl
test
push
out
fldl
add
lret
cmp
dec
pop
aad
dec
testb
push
ja
inc
rolb
mov
les
jmp
test
test
loopne
mov
nopl
adc
add
add
mov
lret
fmuls
or
test
add
imul
daa
adc
mov
js
inc
xchg
ljmp
movsb
inc
adc
iret
incl
jmp
xchg
imul
jo
mov
push
add
movsb
or
addb
push
add
mov
mov
fdivl
sbb
fildl
inc
xchg
in
add
add
dec
cmp
ss
xchg
add
sti
test
add
add
mov
mov
hlt
or
mov
push
cs
mov
imul
mov
and
add
gs
jne
dec
imul
std
std
fiaddl
dec
push
add
test
leave
jmp
ljmp
and
mov
pop
rcl
cmp
add
jb
mov
add
mov
lock
test
mov
fwait
push
movsb
movsb
addb
outsl
ljmp
mov
jb
mov
push
notb
jbe
daa
les
pop
aad
mov
mov
mov
mov
cmp
xchg
jne
or
mov
jno
cmp
movsb
sub
and
xchg
mov
ret
lret
adc
fstpl
sub
cmp
lods
daa
dec
decb
gs
sbb
or
mov
sub
add
mov
xor
adc
rolb
mov
add
mov
cmp
popf
jecxz
push
lds
divl
mov
xor
add
es
mov
aaa
ret
xchg
xchg
push
ret
movsl
mov
push
sbb
stc
xor
mov
cltd
aaa
jae
insb
popf
out
pushf
xchg
cmp
mov
add
mov
pop
lods
mov
jecxz
lds
push
add
mov
inc
push
leave
push
mov
add
stos
adc
mov
sbb
mov
inc
mov
cs
mov
decl
add
outsb
cmpsl
movsl
push
ss
mov
add
dec
aas
scas
aam
test
jnp
rolb
mov
imul
mov
rolb
mov
cmp
xor
arpl
sub
add
add
jne
jnp
dec
cmp
jae
in
cwtl
ss
fstpt
sbb
rolb
mov
dec
pusha
add
push
push
addb
loopne
mov
repz
xchg
add
pop
inc
push
jbe
out
push
add
jbe
shll
jge
add
jb
mov
lods
xlat
xchg
jns
decl
cwtl
sub
mov
mov
lea
mov
rolb
mov
xor
mov
mov
inc
clc
dec
test
lods
popa
ret
push
sub
inc
add
adc
mov
idivb
das
jg
jno
cmpsb
or
aam
lret
mov
add
and
mov
add
jl
xor
mov
stos
aas
repnz
cmp
push
add
jnp
adc
xor
mov
mov
test
xlat
test
fldcw
sub
mov
add
pop
pop
mov
mov
mov
add
cmp
xchg
pop
cmp
add
add
xlat
shll
fucomip
rolb
shll
cmp
adc
lret
rcll
add
mov
add
pop
pop
cmp
stos
add
mov
add
mov
add
clc
xor
outsl
sti
inc
add
mov
add
bound
mov
mov
in
xor
mov
mov
je
pushl
lods
out
cmpsb
or
sub
adc
mov
mov
aas
dec
push
cmp
cmpsl
hlt
dec
dec
mov
mov
and
mov
inc
add
ja
pop
movsb
das
pop
xchg
add
dec
and
mov
jge
test
loopne
mov
sub
stos
mov
lods
dec
std
xor
mov
add
je
jno
xor
mov
inc
jecxz
adc
mov
mov
add
mov
repnz
pushf
cmp
add
and
mov
bound
mov
add
lcall
push
inc
add
sub
loopne
mov
add
add
cmpsb
hlt
fcmovu
or
add
arpl
dec
arpl
popf
and
mov
xor
mov
mov
std
mov
insl
or
in
arpl
mov
add
mov
jmpw
add
xchg
cltd
movsl
jle
mov
ds
in
cmp
cwtl
mov
movsl
enter
add
mov
out
mul
add
mov
add
mov
outsl
pop
push
repz
test
pop
mov
mov
add
addl
sbb
sub
outsl
out
add
addb
push
add
divl
pop
adc
mov
mov
loopne
mov
add
cmp
adc
mov
add
mov
iret
and
pop
mov
in
and
mov
stos
and
add
sub
out
aam
fisubrs
jp
pop
js
or
repnz
jns
jle
lods
outsl
pop
int3
lock
lahf
into
push
mov
sub
js
sub
adc
fdivr
inc
add
movsl
aas
aas
mov
sti
inc
icebp
sbb
jecxz
test
js
daa
mov
mov
cmpsl
popa
xchg
add
hlt
je
xor
add
add
movsl
nop
add
xchg
jmp
fcomps
movsl
cwtl
mov
mov
and
fists
adc
repz
add
mov
adc
mov
add
mov
addb
xchg
xor
mov
fcoms
xor
or
enter
jb
mov
add
add
cmp
add
adc
and
mov
or
mov
add
loop
mov
add
insb
shll
push
pop
lds
push
repnz
jp
xchg
addb
arpl
imul
mov
xbegin
cmpsl
push
mov
mov
mov
out
jae
repnz
mov
and
mov
add
jmp
add
cmp
fisubl
jo
mov
jmp
cmp
mov
xor
add
and
sbb
xchg
das
mov
and
mov
mov
jb
mov
aam
popl
add
clc
loope
es
add
mov
jecxz
lock
test
xchg
add
cmc
rolb
mov
scas
jg
add
xchg
popf
and
imul
pop
dec
cmp
or
or
scas
dec
adc
inc
add
ja
addb
jge
movsl
sub
addb
and
jb
mov
int
outsl
stc
cmc
icebp
xor
mov
inc
push
add
adc
rolb
mov
sarl
hlt
or
dec
sbb
dec
cld
movsl
sub
dec
das
push
add
dec
inc
pop
movsl
mov
mov
lock
xor
mov
aad
lahf
xor
repnz
dec
and
mov
add
or
mov
nop
add
std
jmp
fwait
fwait
pause
add
mov
add
sahf
and
push
test
add
lods
jno
sub
cli
mov
mov
lcall
stos
push
add
or
mov
enter
mov
shll
add
pushf
scas
jmp
adc
cmp
mov
ds
jmp
cmp
jp
mov
xchg
pop
jl
add
cmpsb
sti
cmp
mov
sub
lret
dec
ja
stos
sbb
add
outsb
jnp
data16
mov
test
mov
test
mov
cmc
insb
out
in
punpckhwd
test
mov
lods
lods
push
sbb
cwtl
outsb
push
push
add
fldln2
and
sbb
js
icebp
inc
xor
mov
scas
lcall
add
mov
adc
mov
or
cltd
out
dec
mov
leave
mov
shll
xchg
add
cwtl
inc
sub
sbb
add
add
rolb
mov
pop
pusha
add
mov
hlt
mov
shll
mov
push
sti
fldl
add
dec
stos
xchg
add
push
add
mov
out
dec
dec
bound
mov
xchg
mov
daa
jp
int3
sub
les
fucomip
jmp
fisubs
outsb
jp
subl
cmp
add
xchg
fbld
fsub
and
int3
mov
push
mov
add
imul
cwtl
cmp
mov
mov
jmp
pop
adc
mov
add
dec
loop
mov
pop
sbb
push
sbb
jmp
add
test
pop
mov
jmp
fidivrs
adc
das
clc
cmpsb
lret
mov
jge
cmpl
subl
mov
pushf
sti
inc
mov
out
jmp
leave
pop
mov
add
dec
sub
ret
pop
sbb
enter
stos
push
loopne
mov
mov
addr16
add
xor
sbb
add
std
push
mov
xor
add
in
adc
mov
mov
out
repnz
cwtl
sbb
shl
mov
loopne
mov
mov
xchg
jmp
fstl
mov
mov
mov
in
repz
les
add
mov
xchg
dec
loope
repnz
mov
aam
shr
mov
lods
xchg
das
cmp
mov
adc
mov
add
inc
int3
cmp
imul
fldl
mov
add
pop
cmpsl
xor
mov
lock
and
and
loop
mov
aad
jp
inc
out
and
aaa
in
jg
mov
imul
add
leave
fld
insb
scas
loope
jp
add
or
ljmp
xchg
lods
popf
push
lret
inc
pop
pop
mov
aaa
cmpsb
mov
ss
cmp
aam
add
dec
leave
aas
fimull
rolb
add
mov
add
sub
pop
adc
mov
adc
mov
cmp
movsb
insb
insl
xchg
sbb
sbb
pop
cmp
mov
jno
outsb
es
xchg
add
mov
mov
into
cmpsb
je
sub
fsubs
mov
mov
pop
ja
and
mov
mov
add
cmp
sbb
bound
mov
mov
mov
mov
push
cmp
dec
and
xchg
jp
adc
push
shrl
fdivr
xor
hlt
push
pop
pushf
mov
mov
in
sub
clc
adc
or
in
in
add
sbb
mov
inc
mov
mov
add
test
mov
sub
and
mov
fst
pop
sub
mov
mov
mov
adc
adc
add
push
shll
cmc
clc
push
int3
jae
mov
xor
movsb
mov
out
out
xor
cwtl
sub
fwait
jno
testb
cwtl
stos
pop
rolb
mov
mov
and
mov
cwtl
fwait
or
add
decl
jns
sub
add
xor
add
jle
test
add
cltd
stc
cmp
roll
ja
pop
mov
cmp
inc
jl
adc
push
add
ja
jl
gs
xchg
push
pop
or
sti
mov
lcall
pop
aas
pop
dec
cwtl
and
in
xchg
cmpsb
mov
mov
jno
sbb
popa
stos
loop
mov
sub
push
xor
mov
sbb
xchg
div
add
mov
mov
mov
or
or
mov
and
mov
fisubrs
add
push
fwait
sbb
fstpt
ljmp
pop
inc
xor
dec
sbb
call
and
mov
xor
mov
int
cmp
add
mov
xchg
adc
hlt
or
adc
mov
ficoms
add
les
or
popa
fidivrl
cmp
xchg
mov
xchg
cs
fldenv
or
dec
in
and
mov
in
xchg
or
inc
shll
inc
in
sahf
adc
mov
mov
add
add
add
dec
push
mov
dec
mov
jge
or
mov
mov
bound
mov
inc
add
mov
sub
mov
mov
ss
add
addb
into
std
in
stos
add
dec
inc
flds
cmp
add
adc
aad
mov
scas
icebp
loop
mov
add
dec
push
gs
movsl
test
insb
mov
aad
lods
mov
xor
add
push
add
add
push
mov
inc
pusha
add
popl
ja
add
aas
js
das
xor
add
add
mov
add
sahf
push
test
add
mov
cld
cs
mov
std
inc
add
lods
sahf
stos
mov
inc
add
push
push
mov
jnp
out
sbb
add
mov
rcr
sti
jo
mov
add
xor
repnz
mov
xor
mov
push
jno
mov
mov
cmp
mov
add
stos
frstor
jmp
adc
mov
movsb
jg
rorl
pop
loopne
mov
mov
in
pusha
add
add
je
jbe
add
mov
out
xor
mov
adc
fs
pop
jo
mov
mov
jae
loop
mov
xor
iret
fstl
in
scas
lret
mov
adc
jo
mov
mov
in
sub
repz
cmp
add
sub
mov
cmp
sbb
rolb
sub
add
sbb
xchg
adcl
mov
addb
xor
mov
mov
xor
iret
pop
push
loop
mov
imul
bound
mov
cmp
mov
push
mov
lods
and
mov
add
stos
rolb
mov
lods
sub
sbb
test
addb
mov
mov
jb
mov
in
dec
sub
or
enter
add
mov
add
push
inc
enter
inc
adc
jmp
push
cmp
or
sub
add
lret
mov
add
add
push
mov
movsb
aad
fstpl
cmp
imulb
iret
push
imul
inc
lods
lock
call
jo
mov
sbb
push
popa
pop
xor
adcl
xchg
daa
cmpsw
push
xor
push
mov
mov
sbbl
add
jo
mov
dec
xchg
mov
test
stos
lea
cmp
or
add
mov
aam
out
stos
cmc
call
add
cmp
and
sbb
add
idiv
pop
pop
and
add
xchg
aam
sbb
mov
pop
mov
cmp
fildl
pop
cmovnp
dec
mov
lret
lcall
xchg
imul
cmpl
mov
lcall
sti
push
jb
mov
ljmp
movsb
iret
mov
pop
xchg
add
add
mov
mov
js
push
jmp
mov
aas
xor
mov
dec
std
sub
xor
mov
add
lahf
popl
clc
loope
pop
loope
push
add
add
movsb
js
loope
cmp
jmp
dec
or
scas
mov
mov
inc
arpl
into
lret
popl
mov
xchg
cmp
mov
rolb
mov
sbb
add
sbb
ljmp
dec
movb
stos
push
add
mov
add
add
and
fbstp
xchg
aad
insb
std
jle
cmpsb
adc
scas
dec
ljmp
add
cmp
mov
add
add
pusha
add
push
mov
mov
aam
xchg
mov
sbb
add
mov
xchg
mov
xchg
fsts
mov
add
fcomi
push
rolb
mov
add
es
add
cld
push
stos
sub
add
nop
add
add
loope
add
add
xchg
fidivs
add
jbe
lods
pop
add
push
mov
adc
jns
repz
cmp
dec
and
sub
jae
ja
gs
shrd
les
adc
cmovo
mov
xor
dec
mov
mov
adc
jl
lcall
jbe
add
dec
inc
pushf
pop
sub
jno
fidivrs
aam
fcomps
mov
sub
outsl
or
and
mov
mov
inc
jp
cs
sub
nop
add
inc
xchg
xor
sbb
ficoml
pop
in
arpl
add
xor
loope
mov
mov
add
push
add
add
xchg
add
xor
add
mov
lds
xchg
seto
mov
and
mov
and
bound
mov
mov
fdiv
in
add
sub
add
add
mov
mov
inc
dec
dec
loope
inc
xchg
popa
xor
xchg
jg
cmp
arpl
add
cmp
add
fbstp
jne
dec
xchg
add
stc
jnp
lea
jmp
dec
cmp
add
add
mov
addl
mov
add
sbb
sbb
stos
sbb
ds
scas
out
mov
mov
cmpl
push
jmp
and
mov
push
aaa
loopne
mov
ja
aam
lea
mov
call
and
mov
mov
mov
inc
es
push
aam
bound
mov
mov
idiv
fwait
addb
sub
mov
and
push
cmc
or
mov
lcall
inc
pop
insb
fldl
lds
aad
cltd
fistl
fsts
mov
pop
aas
lret
push
lcall
pop
es
mov
mov
add
cmpsl
dec
inc
push
mov
jg
lds
cmp
add
aam
add
xchg
add
addb
pavgb
mov
stos
or
aam
add
mov
add
or
push
lret
icebp
dec
stos
push
add
add
cmp
xchg
mov
icebp
outsb
lret
shll
or
mov
shll
out
xchg
je
test
mov
js
cmp
cmpsb
jp
add
jo
mov
repnz
lcall
adc
push
aam
add
mov
mov
xlat
addb
add
pop
jo
mov
add
mov
add
divl
test
or
data16
outsb
incl
jge
add
arpl
mov
add
mov
dec
test
pop
adc
insl
sub
dec
add
push
add
sub
notl
mov
dec
iret
repz
add
add
push
sahf
popa
arpl
mov
add
or
fnstcw
jl
jmp
inc
arpl
mov
enter
mov
push
lahf
mov
fwait
mov
rolb
xchg
sbb
add
loopne
mov
or
cmp
sub
push
out
mov
jmp
ljmp
test
mov
test
mov
add
or
mov
mov
adc
mov
add
push
fidivl
mov
lods
lods
stos
lods
add
cs
testl
add
mov
mov
mov
add
sub
int
or
ret
mov
or
and
mov
add
sub
jecxz
orl
add
rolb
ficoml
mov
jno
cmp
mov
cmp
add
clc
sbb
popf
cmp
int
mov
add
jge
repnz
clc
or
jb
mov
mov
cld
push
dec
mov
sub
xchg
add
movsl
push
inc
in
push
stc
stos
sbb
adc
decl
jns
test
nop
add
add
out
add
out
or
cmp
rolb
mov
test
push
push
sbb
add
stos
mov
out
idiv
add
shrl
mov
int
mov
clc
les
add
add
stc
aad
idiv
mov
test
or
pop
repz
pop
outsb
in
and
pop
push
jecxz
rcr
jg
mov
icebp
loope
jbe
pusha
add
dec
jo
mov
add
push
fcoml
jecxz
jmp
sbb
mov
cmpsl
rcrl
jle
sbb
inc
cmp
cmp
call
daa
cmp
mov
jp
andl
add
add
mov
mov
add
jns
add
mov
mov
sbb
add
add
dec
sbb
adc
loop
mov
fwait
dec
clc
in
mov
add
insl
sub
add
mov
mov
stos
sub
mov
fiadds
fdivrl
pop
push
jnp
lcall
fucomp
fcompl
stos
and
add
mov
int3
ljmp
pop
adc
mov
sub
sbb
xor
mov
jbe
loope
add
sub
jne
pushf
in
xor
xchg
add
sbb
lret
pop
jl
pop
rolb
dec
and
not
inc
repnz
add
out
xchg
pop
stos
pop
dec
ljmp
cmp
int3
out
andl
test
lcall
addb
mov
outsl
push
mov
enter
jecxz
mov
inc
inc
push
mov
cwtl
push
fstl
dec
lds
mov
add
popa
icebp
inc
adc
add
add
loopne
mov
adcl
daa
out
ljmp
add
inc
stc
leave
addb
mov
cli
call
add
dec
clc
in
lcall
jns
jp
jo
mov
ds
aaa
mov
cmp
inc
in
or
inc
dec
mov
lock
sarl
test
xor
inc
add
push
adc
mov
lret
fwait
xchg
je
cs
sbb
sti
je
xchg
sub
rolb
jno
xor
mov
cmc
into
testb
pop
push
mov
cmp
add
add
addb
sub
in
dec
sbb
sbb
push
call
or
inc
out
sub
daa
out
pop
hlt
lds
sbb
add
mov
js
push
add
cwtl
addr16
int
addr16
mov
xor
add
test
add
shll
and
iret
xlat
stos
jge
fsts
add
mov
xchg
imul
push
rolb
mov
cwtl
inc
sti
inc
mov
add
mov
dec
mov
xchg
push
mov
or
idivb
mov
push
int3
sbb
push
jns
in
imulb
imul
lret
sahf
loop
mov
aaa
outsl
pop
cmp
xor
mov
add
mov
je
pop
dec
and
cmpsb
je
dec
scas
loopne
mov
addb
pop
ss
lea
push
inc
mov
shll
imul
add
outsb
sahf
jl
mov
dec
mov
mov
lret
cld
in
cmp
jge
add
sbb
add
pop
sahf
addb
cmpsb
add
mov
jp
lcall
in
and
mov
or
push
sbb
cs
arpl
pushf
xchg
xchg
pushf
inc
test
add
je
cmp
imul
outsl
in
inc
jg
dec
fldl
mov
or
mov
dec
lahf
jb
mov
imul
pop
and
mov
cld
and
mov
pop
cs
jg
add
mov
jg
xchg
pop
movsb
inc
mov
xchg
mov
daa
mov
mov
xchg
mov
sbb
fsubrl
aas
inc
jle
addb
sbb
imul
add
out
mov
add
or
add
mov
cmc
jns
mov
nop
add
repz
sub
imul
dec
loopne
mov
mov
add
dec
fmuls
xor
xchg
push
std
xchg
cmp
cmp
xchg
sbb
and
adc
add
push
add
adc
dec
addb
bound
mov
jno
fidivl
mov
scas
sbb
sbb
je
lds
into
mov
mov
imul
stos
push
lods
clc
ds
ds
adc
mov
dec
mov
pop
sbb
popa
mov
insl
dec
movsl
adc
mov
push
add
mov
or
bound
mov
add
mov
sbb
faddl
add
add
repnz
add
out
and
mov
inc
ss
dec
out
xchg
push
repnz
mov
into
dec
scas
dec
subl
or
push
add
pop
imul
mov
add
mov
inc
push
popf
cld
mov
and
add
mov
push
pop
out
ds
jne
add
mov
bound
mov
je
add
add
push
adc
inc
add
jb
mov
test
add
ret
fidivrl
jo
mov
mov
rolb
mov
cs
jmp
jae
mov
and
mov
shr
or
mov
add
add
ret
lcall
jg
xor
dec
sbb
add
cmpsb
sbb
mov
lret
dec
ja
add
lods
cmp
inc
inc
addb
sahf
mov
lods
adc
mov
jbe
add
push
enter
mov
lock
mov
cld
sbb
outsb
sbb
add
xchg
xchg
mov
popa
es
add
mov
dec
insb
mov
arpl
fsubp
add
mov
xor
fs
push
xchg
testb
add
add
xor
rolb
mov
add
aam
lds
cmp
mov
sub
add
mov
xchg
xchg
sub
fdiv
add
add
mov
sbb
jp
ja
nop
add
adc
mov
lretw
cmp
mov
mov
dec
out
call
je
lcall
jge
cld
adc
mov
jno
fimull
dec
and
dec
sub
shrl
add
jns
popf
pop
xchg
les
aaa
cmp
inc
push
add
or
mov
pop
jae
jnp
sbb
add
jns
out
mov
aad
add
sbb
mov
leave
dec
and
mov
xor
add
mov
es
push
xchg
daa
xor
mov
mov
adc
lods
fwait
lods
push
in
mov
das
sub
mov
push
inc
inc
add
stc
ljmp
sbb
xchg
lret
cs
and
mov
xor
pop
inc
cli
or
popf
outsl
fs
cmp
fstpl
jns
cs
repnz
daa
in
add
push
dec
jp
xor
hlt
dec
jmp
mov
out
push
fsts
xchg
in
adc
dec
in
mov
addb
ja
scas
cmpsb
add
dec
or
dec
pop
or
out
sbb
stc
cltd
push
mov
mov
add
nop
add
add
mov
add
add
jno
pop
fwait
inc
add
add
dec
pop
push
mov
mov
jge
add
mov
and
mov
pop
iret
daa
cmpsl
xor
add
inc
add
mov
add
je
add
mov
or
dec
mulb
sub
stos
outsb
es
sub
jmp
xlat
lret
push
stos
repz
and
mov
and
xchg
lods
and
rolb
mov
add
inc
mov
add
in
inc
testl
in
pop
mov
adc
fyl2x
outsl
loopne
mov
push
add
negl
jbe
xchg
add
outsb
cmp
pop
int
loopne
mov
in
out
pop
cmp
add
mov
mov
jg
jno
xchg
ljmp
mov
add
and
adc
cli
cmp
fs
fstp
cmp
lret
xchg
jmp
xchg
fisubrs
cmp
loope
in
sbb
mov
push
mov
mov
mov
hlt
jbe
add
cmp
stos
in
adc
mov
sub
xchg
add
mov
jl
adc
scas
mov
mov
test
add
mov
or
ficomps
mov
outsb
cmp
mov
xor
mov
lea
dec
mov
add
dec
test
stos
mov
mov
sub
rolb
dec
xchg
cmc
pop
or
inc
sub
push
testb
sbb
or
imul
add
mov
dec
daa
jl
shrl
das
xlat
loop
mov
fwait
out
hlt
arpl
mov
mov
je
stc
jg
addl
add
mov
cld
jge
jne
aad
out
lcall
mov
dec
mov
pop
inc
je
repnz
inc
mov
mov
or
jg
call
jo
mov
jp
out
mov
mov
pop
pop
mov
mov
or
pushf
pop
pushf
and
mov
mov
pushf
mov
mov
rolb
mov
lods
add
mov
out
lds
std
icebp
jg
add
popf
jp
cltd
and
fstpl
add
sub
sbb
mov
out
repnz
pop
sub
add
add
add
xchg
add
mov
iret
stos
mov
pushf
sbb
jb
mov
and
mov
scas
mov
add
sub
and
daa
dec
sbb
pop
mov
mov
mov
jb
mov
sahf
loopne
mov
jmp
add
mov
addb
adc
jmp
add
mov
mov
xor
jns
add
in
xchg
enter
mov
repnz
mov
or
scas
pop
push
pop
scas
jg
cs
addb
jnp
dec
das
xor
std
fdivrp
inc
in
js
add
sbb
stc
gs
mov
and
mov
out
pop
push
imul
daa
jmp
mov
dec
and
mov
addb
ja
lods
loope
loop
mov
xor
mov
imul
add
ret
dec
sub
add
cmp
inc
cltd
repz
dec
hlt
jg
in
pop
cmpl
mov
xor
jo
mov
icebp
scas
xchg
shl
add
add
outsl
bound
mov
mov
inc
rcrl
imul
dec
mov
outsb
push
rcr
mov
gs
adc
mov
mov
scas
std
in
fisubl
frstor
lret
dec
in
add
xchg
jmp
repnz
repz
mov
mov
pop
pusha
add
lret
mov
mov
lret
loopne
mov
push
add
fcmovnu
loope
es
insb
mov
and
mov
adc
mov
cwtl
mov
inc
push
cmp
fidivs
inc
add
fs
mov
les
add
or
addb
int
addb
bound
mov
mov
mulb
mov
mov
or
push
ss
push
repz
and
mov
jle
add
rolb
stc
fcmove
adc
mov
sub
ror
mov
inc
ret
int3
sub
adc
jno
or
mov
mov
mov
xchg
add
js
mov
fcomp
push
xchg
insl
sub
adc
pusha
add
mulb
outsl
push
test
mov
dec
outsl
fsubrl
xor
mov
inc
add
mov
pop
js
js
je
lret
add
add
mov
mov
test
cli
popf
inc
cmc
bound
mov
hlt
sub
add
jl
add
cli
imul
neg
and
aad
sbb
sbb
js
dec
push
jae
aam
jb
mov
mov
sub
adc
mov
add
add
add
mov
mov
into
xchg
sbb
aaa
js
mov
mov
jns
and
mov
sbb
arpl
std
ficompl
rep
addr16
paddd
sub
push
aas
push
mov
lock
add
sti
js
add
push
aad
mov
jmp
add
cmp
inc
iret
int
pop
push
jecxz
add
mov
pop
rolb
mov
push
mov
test
int
jp
in
add
mov
dec
xchg
and
mov
fisttpl
and
mov
add
mov
xchg
and
sbb
shrl
push
insb
cmp
mov
sbb
popf
rolb
aam
shl
mov
cwtl
insb
xchg
add
cmpl
add
inc
rolb
int3
and
add
or
and
mov
mov
sbb
jne
mov
inc
in
in
push
ret
outsl
test
dec
pop
pop
mov
add
mov
cmp
roll
add
mov
push
lahf
mov
cmp
movb
add
xor
or
mov
pop
jnp
push
lahf
test
shll
gs
pop
xchg
fs
sub
mov
or
add
mov
test
pop
je
xchg
popa
cmp
aas
mov
sbb
cltd
pop
jmp
add
rolb
mov
cmpsb
stos
push
ds
dec
es
xor
mov
pop
test
lds
xchg
add
xor
mov
aas
xor
mov
mov
xchg
leave
insb
lods
popl
add
getsec
push
xor
xor
mov
add
ljmp
mov
sub
inc
dec
mov
mov
or
mov
cld
out
jmp
jge
leave
add
xchg
add
dec
pop
mov
lcall
ret
inc
and
mov
mov
sub
fwait
adc
outsl
or
jecxz
fisubrs
add
cmp
mov
rolb
ret
lahf
mov
in
jbe
inc
push
mov
mov
fisttps
push
add
test
xchg
jb
mov
add
insb
xchg
add
add
mov
int3
and
add
mov
int
inc
add
mov
xor
and
mov
or
fidivs
inc
aaa
ljmpw
and
mov
jmp
jbe
push
jns
mov
push
pop
push
sbb
add
xchg
and
aaa
mov
adc
mov
fadds
mov
mov
xor
add
es
jb
mov
ret
mov
cmpsb
das
ret
fsubp
daa
mov
es
jno
add
jno
inc
pop
or
add
js
sub
loopne
mov
or
push
add
add
pop
mov
add
and
pop
pop
insl
xorl
mov
pop
psrlw
cmc
sbb
mov
add
mov
add
sti
lret
movsl
test
int3
imul
ret
sub
aaa
movsb
inc
add
lahf
or
add
mov
jle
or
jg
or
add
pop
sbb
shrl
outsb
push
mov
js
jno
add
add
and
movsl
xor
jmp
imul
clc
jge
jecxz
push
sbb
push
pusha
add
cli
hlt
mov
xlat
popa
and
mov
addb
pop
dec
mov
push
add
dec
push
mov
mov
dec
dec
xchg
sbb
xor
mov
cld
or
ja
add
add
xor
jne
repz
mov
add
add
pop
dec
adc
mov
pushf
int3
inc
mov
fcompl
mov
mov
leave
mov
div
stos
je
mov
push
cli
mov
mov
repz
xchg
lcall
pushf
stos
je
out
jns
imul
sub
add
pop
sbb
test
outsl
insl
jns
dec
mov
cmovo
mov
or
add
sub
cmp
repnz
shrl
and
or
int
mov
pop
push
push
nop
add
not
test
adc
push
inc
inc
lret
push
mov
dec
cmp
and
mov
xchg
add
add
int
pop
add
lret
add
xchg
sub
test
mov
mov
cmp
push
pusha
add
fldenv
add
sti
out
sub
add
add
mov
out
cmp
decb
clc
loopne
mov
xchg
add
push
sbb
icebp
lock
mov
cmpsb
push
inc
push
mov
js
out
jp
adc
add
jmp
or
mov
lock
xor
mov
xchg
mov
addb
nop
add
add
jnp
cmp
mov
in
xor
test
add
add
aaa
in
push
movsb
jae
mov
add
add
or
mov
fld1
imul
add
xchg
sub
add
jnp
lcall
cs
mov
sub
ret
js
xor
mov
mov
repz
mov
and
mov
mov
shll
into
mov
sub
and
mov
xchg
in
mov
cmpsl
insl
hlt
dec
sub
js
test
jl
movsl
jp
dec
pusha
add
and
mov
add
or
mov
test
cwtl
jns
out
bound
mov
xlat
daa
xor
fiaddl
ret
fisubs
scas
push
add
dec
push
push
addb
cmpsl
aas
xrelease
imul
mov
jb
mov
mov
xchg
mov
imul
dec
loope
adc
mov
bound
mov
bound
mov
jge
add
add
add
fdivl
arpl
rolb
mov
aam
mov
inc
add
fucom
mov
mov
and
fldcw
outsb
sbb
xchg
pop
in
add
xchg
repnz
or
jne
pop
mov
ficompl
nop
add
add
add
mov
mov
nop
add
jne
lret
test
jae
jmp
mov
mov
pop
addb
pop
scas
jo,pn
mov
mov
lret
xor
test
inc
dec
aam
pushf
or
out
ficoms
jnp
jbe
xor
mov
out
cli
cmp
ret
mov
cmp
rolb
mov
je
lods
jp
adc
mov
mov
nop
add
pop
mov
pop
and
mov
pop
pushf
ret
mov
jne
mov
int3
push
add
adc
pop
xchg
loop
mov
ds
push
jl
lret
outsl
mov
cmp
add
insl
mov
enter
xchg
add
cld
cmp
sub
jle
pusha
add
add
sub
ja
rorl
pop
in
jno
in
mov
mov
das
xor
xor
add
jmp
and
cmp
add
int
dec
jo
mov
add
jne
add
add
mov
push
add
cmp
push
cmp
and
mov
add
imul
adcl
das
bts
pop
pop
cli
mov
daa
sub
sbb
add
add
jmp
jecxz
cmpsl
jge
ret
xor
mov
mov
loope
add
add
testb
xor
add
scas
inc
add
mov
xlat
mov
data16
and
mov
insb
jne
je
pop
sub
dec
or
in
xchg
add
sub
adc
mov
leave
mov
mov
bound
mov
mov
popf
push
add
add
hlt
push
add
ds
out
loop
mov
mov
xor
mov
frstor
lret
mov
imul
mov
lcall
mov
es
xchg
mov
mov
pop
jecxz
mov
lret
into
mov
mov
in
pop
xor
mov
xor
sub
aas
cmp
add
mov
stc
inc
cmpsb
mov
movsl
imul
rolb
mov
das
xor
add
aad
and
mov
daa
cmp
les
popa
in
and
mov
out
mov
mov
test
sahf
adc
inc
add
cli
aad
mov
xor
mov
call
xchg
aad
jecxz
mov
adc
lods
inc
add
pop
int
sub
xchg
mov
movsl
test
cmc
dec
dec
mov
cwtl
fisttpl
inc
mov
cmpsl
add
mov
in
cwtl
rolb
mov
mov
ret
pop
mov
mov
push
cld
mov
imul
add
das
addb
mov
add
xchg
jns
movb
mov
pusha
add
sbb
jle
lahf
and
mov
add
push
cltd
cmc
mov
and
mov
pusha
add
jecxz,pt
jg
fsubrs
xchg
add
mov
out
daa
cwtl
mov
rolb
das
cmpsb
loope
and
jae,pn
mov
mov
mov
out
or
stc
or
inc
pop
dec
xchg
data16
xor
dec
int3
and
mov
add
fists
sbb
add
mov
fidivrl
ljmp
push
add
mov
and
out
test
xchg
push
sub
nop
add
add
mov
push
movsl
xchg
and
xor
mov
or
xor
mov
jecxz
xchg
mov
fisubs
iret
mov
outsb
stc
mov
add
sub
icebp
xchg
add
subl
add
jp
mov
je
mov
mov
mov
add
add
mov
sahf
pop
pop
aas
pop
or
les
test
add
mov
mov
rolb
mov
fucomip
xchg
int3
in
out
fistl
mov
add
mov
mov
int
mov
adc
mov
movsb
adc
test
ss
mov
lods
popf
and
mov
fs
mov
arpl
push
sub
adc
mov
mov
cld
mov
mov
test
pop
push
mov
jecxz
pop
mov
int3
test
lock
mov
mov
stc
lea
in
add
and
xor
in
sbb
ja
ljmp
mov
mov
das
std
fdivp
lret
pop
daa
mulb
inc
pushf
sbb
cmc
dec
or
pushf
add
add
add
mov
xchg
pop
lea
rolb
loop
mov
add
je
jne
add
mov
add
test
fcomp
out
xchg
xor
add
mov
sub
xor
add
cltd
test
add
lcall
mov
sub
mov
jae
es
jmp
sbb
arpl
mov
mov
mov
dec
fldcw
mov
or
and
mov
fs
lret
mov
or
je
xlat
pop
pop
rcrl
add
lret
and
rcll
push
add
jnp
sub
lahf
jp
aam
mov
insl
mov
xchg
add
push
or
mov
mov
aam
mov
fnsave
jno
add
xchg
sub
fbld
mov
mov
sub
lret
inc
mov
mov
adc
mov
leave
mov
mov
xor
adc
add
sti
loop
mov
mov
add
add
jge
idivb
inc
jge
inc
adc
mov
in
cwtl
std
mov
mov
xchg
ss
jbe
repnz
inc
and
std
je
loope
pop
insl
rcll
add
jl
or
in
inc
jae
jle
bound
mov
shl
sub
inc
add
pop
or
add
xchg
fs
mov
jecxz
pop
fistps
xchg
notl
add
push
rolb
mov
mov
add
mov
mov
mov
push
add
mov
pop
cmp
push
std
aaa
in
test
addb
lods
cld
xchg
sub
sbb
dec
into
push
add
sub
test
dec
lea
xor
mov
xchg
imull
lret
in
enter
fsubr
mov
movsb
add
mov
cs
addb
ljmp
popf
outsl
aad
stc
pop
pop
or
add
mov
add
and
mov
or
add
push
loope
add
rcrl
jmp
xor
addb
push
push
pop
sbbl
add
pop
jae
mov
push
dec
lahf
divl
es
mov
adc
mov
gs
ljmp
mov
mov
mov
add
mov
icebp
cld
inc
inc
popa
mov
dec
mov
cwtl
into
or
push
dec
push
add
popf
mov
mov
cmp
or
test
aam
add
icebp
imul
fisubl
jmp
xchg
ljmp
out
stc
in
iret
xchg
mov
mov
stos
and
cs
mov
mov
popa
ficoms
jns
and
enter
aam
push
lea
mov
jmp
mull
or
push
add
mov
add
sbb
call
jl
fs
add
out
adc
fbstp
mov
enter
add
pop
out
xlat
popf
mov
loopne
mov
sub
dec
mov
insl
ficomps
add
lds
lret
fstps
sbb
jo
mov
mov
sub
lret
bound
mov
add
xlat
rolb
mov
add
icebp
add
sbbl
push
in
fadds
sbb
cwtl
jp
enter
mov
push
mov
inc
mov
jg
into
repnz
cld
pop
call
sbb
in
mov
mov
call
dec
decb
fldt
addb
add
mov
std
insl
mov
outsb
movl
mov
lcall
lods
pop
ja
add
inc
dec
mul
pop
subl
scas
adc
mov
mov
data16
sbb
fs
mov
inc
cmp
fidivl
push
repnz
scas
jnp
dec
popa
push
mov
cwtl
mov
es
or
jp
or
push
mov
inc
repz
mov
rolb
push
mov
sbb
leave
roll
xchg
or
lods
add
push
dec
mov
push
pop
sub
add
mov
das
rolb
aaa
out
nop
add
in
mov
mov
xchg
jle
and
rolb
icebp
out
dec
lds
mov
jecxz
pop
outsl
addb
mov
add
mov
add
dec
std
std
mov
movsl
cltd
or
mov
js
sbb
daa
xor
mov
mov
push
test
add
sub
repz
jbe
hlt
mulb
dec
push
add
mov
insb
push
stos
shll
adc
xlat
adc
mov
cmp
mov
add
aam
mov
mov
pusha
add
mov
sub
push
les
add
mov
stos
inc
jp
jmp
jne
push
dec
mov
fcmovnbe
add
mov
stos
mov
inc
cmp
dec
add
mov
cmp
xchg
int3
inc
inc
inc
inc
add
mov
cmp
push
xor
mov
add
push
lcall
or
pop
hlt
jle
add
mov
rcrl
out
jecxz
mov
pop
ret
addb
icebp
roll
mov
xchg
sub
xchg
bswap
and
jb
mov
hlt
ds
mov
jne
add
jmp
in
cld
pop
pushf
xor
push
mov
gs
scas
add
fcompl
pop
leave
pop
sub
add
jp
mov
icebp
je
hlt
aad
pop
push
add
add
inc
add
mov
add
addr16
mov
add
add
sahf
lea
ds
push
jmp
and
cmp
and
and
cld
add
mov
and
hlt
dec
xchg
test
mov
mov
ret
adc
movsl
and
pop
shll
xor
adc
ficoms
out
cmpsl
and
mov
aas
add
push
add
cmp
add
cmp
jp
test
xchg
stos
inc
or
cmp
das
aam
cmp
mov
mov
mov
jo
mov
loope
leave
jno
pop
adc
in
clc
adc
mov
add
psubb
cmpsb
jge
call
xchg
jbe
push
mov
pop
aaa
xchg
push
rorl
add
xor
mov
inc
movsl
push
mov
arpl
addb
cmp
in
sti
mov
sbb
insl
cld
dec
push
pop
daa
jp
arpl
add
inc
mov
mov
adc
mov
mov
mov
cmp
xor
mov
add
enter
or
mov
rolb
mov
in
pop
push
and
mov
push
add
jp
mov
mov
mov
rolb
mov
gs
mov
push
dec
fsts
ficoms
lds
repz
fidivrs
add
aas
jns
push
mov
ds
int3
xchg
adcl
int3
ficoml
pop
clc
ss
ret
cmp
mov
and
mov
push
push
ret
xchg
sub
add
cltd
popf
lea
cmc
lods
es
pop
xor
cld
inc
pop
out
mov
ss
mov
add
add
daa
mov
out
pop
cmp
nop
add
mov
mov
divps
lea
dec
cli
adc
mov
insb
out
inc
or
sub
add
mov
test
and
insl
popa
lods
mov
xchg
stos
sar
leave
bound
mov
jmp
dec
adc
mov
lret
xlat
cs
popf
xchg
in
and
mov
dec
cli
sahf
jno
adc
mov
mov
and
mov
pop
sbb
mov
fdiv
jnp
rolb
mov
outsl
push
aas
cltd
sub
xchg
pop
lret
xor
mov
rolb
mov
add
orl
ds
rolb
mov
mov
notb
push
clc
sub
mov
pop
mov
mov
std
incb
enter
std
fiadds
push
jl
adc
mov
mov
test
dec
movsl
mov
fstpl
push
cmp
xchg
and
push
bound
mov
push
pop
mov
push
push
stos
adc
mov
loope
adc
mov
repnz
fcoms
mov
xchg
stos
popa
push
jmp
and
mov
add
loopne
mov
cwtl
add
and
add
or
ja
lea
xor
mov
jnp
ss
fwait
push
pop
mov
add
add
or
lods
repz
call
mov
jne
rolb
dec
in
test
mov
int3
int3
jmp
add
mov
mov
add
add
push
add
pusha
add
pop
adcl
xchg
mov
mov
push
xor
aam
sbb
mov
sub
add
add
xchg
shrl
xor
mov
xchg
ret
aas
or
test
dec
sbb
add
jae
mov
and
push
push
mov
fstpt
std
pop
std
fs
test
add
imul
aam
ret
jo
mov
dec
inc
add
mov
push
inc
add
ret
imul
add
pop
mov
push
adc
mov
movsl
xorl
mov
cs
idivl
shl
add
imul
push
mov
dec
pop
lahf
or
fdivl
cmc
sbb
sti
xlat
sub
mov
scas
push
add
add
mov
adc
add
add
addb
ja
pop
xchg
jne
pushf
push
add
inc
das
lock
repz
call
mov
xor
mov
cld
push
cmp
out
fidivs
xchg
out
pop
mov
daa
fstl
xchg
inc
add
jecxz
popa
cwtl
ret
xchg
loopne
mov
clc
jge
sti
jle
sbb
mov
add
mov
mov
mov
rolb
mov
add
add
and
out
cli
imul
xorl
sub
mov
xchg
add
shll
mov
mov
dec
ljmp
pop
popf
loopne
mov
movsl
imul
xchg
xchg
icebp
sub
add
imul
insl
in
loop
mov
js
repnz
fmulp
ficomps
sahf
inc
lahf
rcll
mov
add
ss
scas
cmc
add
push
add
add
movsb
mov
inc
sahf
ficomps
mov
add
icebp
ss
or
rolb
mov
in
ret
pop
repnz
rolb
mov
ss
pop
and
add
push
add
add
gs
sbb
add
int3
cmp
aaa
xor
fists
mov
rcrl
add
inc
mov
add
dec
cmp
repz
es
mov
add
outsb
mov
mov
mov
rolb
mov
push
add
mov
add
add
clc
aam
addb
pop
dec
xchg
pushf
sbb
mov
xor
bound
mov
or
push
jb
mov
ds
add
in
xchg
lea
add
dec
je
push
add
shr
sti
push
dec
xchg
jg
jns
add
mov
sub
pop
push
pop
daa
pop
jns
sbb
pop
mov
push
adc
mov
in
mov
enter
mov
into
mov
add
rolb
mov
mov
pop
jge
add
mov
icebp
insl
cmp
rolb
mov
dec
xor
mov
cmp
ds
in
rolb
xchg
das
inc
add
push
add
bound
mov
mov
dec
cmc
mov
add
jno
add
das
and
pop
shrl
add
mov
sbb
xor
mov
addb
movsb
inc
sbb
lret
push
add
xchg
mov
mov
sbb
popf
xor
mov
ffree
add
insb
sti
pop
mov
cmp
lcall
imul
cmp
repz
add
sub
xchg
add
pop
add
mov
sbb
sbb
mov
add
mov
push
imul
cmc
xchg
push
loop
mov
add
mov
push
loop
mov
dec
mov
push
sub
ficompl
rcrl
bound
mov
jecxz
or
add
jmp
fwait
sbb
add
add
add
mov
mov
add
mov
dec
add
mov
fidivl
int
inc
mov
mov
add
push
add
mov
mull
xor
xchg
xor
mov
pop
cltd
cwtl
lods
mov
add
fists
add
into
mov
add
fistps
std
iret
repnz
arpl
call
add
mov
cmpsl
mov
xchg
xor
mov
add
dec
test
pusha
add
outsl
xchg
add
add
mov
add
mov
mov
add
push
fldt
lret
sbb
add
insb
fldl
pop
fwait
push
xor
lods
xchg
jo
mov
mov
out
inc
add
pop
dec
std
mov
jl
adc
mov
fidivrl
ret
jne
add
push
add
dec
pop
and
add
mov
sub
jl
cmpsb
shll
dec
mov
xchg
lret
ss
mov
add
mov
xor
xor
mov
mov
add
xchg
addr16
dec
add
pop
push
pop
pushf
mov
insb
adc
imul
insl
in
mov
mov
push
or
arpl
lea
decb
jl
and
lcall
jbe
addb
adcl
mov
add
gs
push
pop
and
add
cmp
out
rorl
and
add
out
push
mov
jecxz
sub
lock
cld
sub
jmp
cmpsl
aad
adc
push
aaa
xor
cltd
mov
inc
push
mov
sbb
dec
inc
movsl
stc
mov
add
add
push
add
add
popa
pop
xchg
ja
inc
enter
mov
dec
pop
testl
adc
std
je
adc
mov
xchg
xlat
lds
pop
push
and
mov
repnz
pushf
dec
push
add
add
out
adcl
test
out
push
jmp
sbb
in
mov
ss
or
and
mov
and
fprem1
pop
pop
jnp
push
pop
push
add
push
es
ljmp
rolb
mov
sbb
out
jne
add
cmp
cmpsb
ret
pushf
push
aaa
cmp
in
inc
jo
mov
add
stos
mov
add
mov
add
add
cmpsb
mov
push
push
mov
add
mov
ljmp
mov
adc
arpl
sbb
addb
adc
cmp
bound
mov
xchg
mull
imul
das
ljmp
add
pop
jno
adc
int3
pop
decl
add
fisubl
jmp
jne
add
sbb
jecxz
jno
pop
pop
scas
inc
jo
mov
pop
aad
outsl
nop
add
cmp
mov
add
adcl
pusha
add
xchg
mov
test
inc
mov
or
in
jle
sbbl
jnp
xchg
add
sbb
lds
out
stos
add
mov
cmc
xchg
xchg
arpl
add
mov
aam
push
mov
adc
mov
or
cmpsb
add
cmp
call
inc
add
fwait
add
scas
pavgb
mov
scas
adc
mov
ret
enter
lret
outsl
cmpsl
adc
add
sbb
fstps
xchg
add
xchg
mov
addr16
and
mov
aaa
jg
repz
je
movsb
iret
ljmp
movsb
fisttps
xchg
add
mov
sbb
mov
out
arpl
mov
push
out
pop
ss
mov
cmp
xor
aaa
fwait
push
xor
mov
scas
mov
insl
dec
sbb
push
add
fistps
cwtl
int3
xor
mov
out
int3
faddl
add
ficoml
cs
push
shll
lret
aas
adc
mov
push
and
jge
cmpsb
dec
fnstcw
pop
addb
dec
movsb
dec
jmp
cmp
fs
cli
pop
aas
ret
hlt
dec
xor
addb
loope
sti
outsb
dec
sub
iret
push
aaa
jmp
add
pop
xchg
pop
push
xchg
cmp
mov
add
sbb
ds
jg
or
and
mov
addr16
xchg
mov
jbe
or
ds
adc
xchg
jno
adc
jne
dec
repnz
mov
dec
and
mov
add
mov
adc
in
test
mov
inc
popa
je
cmp
sbb
call
add
add
out
in
ret
dec
js
stos
push
add
ljmp
nop
add
mov
ret
fs
sbb
push
add
test
je
or
ja
test
add
lahf
inc
xlat
lea
sub
notb
xor
push
mov
push
idiv
pop
test
and
push
aam
dec
sub
mov
or
inc
add
add
les
insl
movsb
pop
pop
inc
nop
add
or
nop
add
insb
xor
push
imul
mov
loop
mov
sbb
add
out
bound
mov
add
pmulhuw
sub
enter
outsl
outsb
push
add
jge
add
add
add
cmp
mov
ss
cmp
shll
popf
pop
iret
mov
cmp
mov
mov
cmp
jecxz
cmpsl
sahf
adc
add
negb
mov
sbb
push
push
push
add
cmp
mov
push
ficoml
out
cmp
mov
movsb
rolb
mov
test
mov
mov
mov
aad
fdivrp
jmp
dec
clc
xchg
push
dec
stos
lahf
push
jg
repnz
add
pop
or
mov
mov
add
das
inc
add
data16
add
mov
mov
mov
xchg
xchg
inc
push
enter
push
mov
aam
jo
mov
xchg
mov
lds
stos
mov
xchg
loope
repnz
adc
mov
add
jno
add
xchg
sub
mov
gs
stc
lods
jp
sti
jns
les
jo
mov
pop
js
mov
add
jns
add
mov
mov
andl
call
pop
inc
mov
aam
cmp
push
add
sahf
mov
out
push
mov
jae
pop
cmpsl
mov
add
add
or
add
add
aas
or
push
outsl
idivb
aaa
js
ret
or
nop
add
mov
fs
add
add
mov
mov
mov
sub
sub
pop
imul
xchg
addb
rolb
mov
movsl
rolb
gs
stos
mov
dec
add
cli
sbb
cmp
sbb
aas
push
outsb
cmc
decb
sub
add
xchg
sarl
out
pop
mov
nop
add
cmp
xchg
inc
rorl
in
std
movsb
sarl
mov
add
addb
push
add
mov
mov
adc
loopne
mov
pop
jg
aas
mov
outsl
leave
pop
cmp
ljmp
jg
in
add
mov
pop
inc
jp
add
es
add
or
fst
movsb
stos
inc
add
dec
push
clc
repnz
dec
or
aam
mov
mov
repz
jp
add
loopne
mov
mov
test
test
ljmp
inc
pushf
xchg
call
repz
mov
int3
xchg
push
add
lret
js
aaa
push
test
leave
cmp
adc
mov
mov
sbb
js
fidivrl
lret
jmp
mov
mov
out
sbbl
cwtl
outsl
je
int3
lahf
adc
jno
sahf
in
push
ljmp
rolb
xchg
adc
lcall
inc
add
xor
xor
push
push
mov
lret
add
les
xchg
xor
not
test
xchg
add
dec
rcll
imul
mov
test
repnz
cmpsl
repz
leave
int
add
gs
mov
push
movsl
mov
loope
cmp
add
xchg
cmc
mov
mov
jbe
dec
mov
outsb
ljmp
jp
loop
mov
addb
fndisi(8087
inc
fwait
sub
popf
sub
in
fmulp
jno
bound
mov
ja
add
add
pop
ret
out
add
repz
aas
mov
xchg
ds
mov
mov
mov
add
adc
mov
add
mov
mov
js
add
add
mov
mov
lds
je
hlt
stos
push
mov
mov
enter
addr16
jb
mov
std
les
inc
insb
popl
adcl
or
mov
fucomi
lock
mov
mov
imul
les
arpl
adc
bound
mov
scas
das
mov
sti
pop
xor
mov
inc
push
add
and
push
cmp
inc
add
jmp
jbe
lea
push
movsb
dec
add
add
es
jg
in
push
aas
cmp
fldl
add
pop
leave
jmp
mov
mov
jl
jl
scas
test
and
es
and
mov
jno
les
mov
aam
lock
add
xchg
cmp
cmp
ljmp
mov
ljmp
mov
cmpsl
add
insb
int
out
outsb
aam
add
aaa
fldcw
adc
inc
and
lods
fidivrl
jp
add
push
in
mov
out
stos
pop
push
xor
sub
xchg
fwait
cwtl
sub
cmpsl
sbb
mov
add
bound
mov
push
jle
cmpsl
or
pop
mov
scas
mov
pop
push
ljmp
xor
mov
xchg
adc
mov
xchg
pop
jns
add
xlat
add
movsb
sbb
or
inc
bound
mov
xor
mov
pop
loope
xchg
test
test
std
inc
in
and
or
rolb
pusha
add
in
jp
add
mov
ljmp
in
and
add
pop
jne
add
add
add
push
xor
shll
fcmovbe
add
out
and
mov
mov
inc
iret
scas
icebp
mov
push
cmpsb
xor
add
add
or
mov
add
sbb
arpl
andl
add
inc
add
mov
cmp
mov
aad
push
mov
push
and
add
add
jne
mov
push
vucomisd
arpl
leave
adc
mov
and
ljmp
or
mov
sbb
test
push
pop
enter
idivb
cli
std
ljmp
push
xlat
fistps
sbb
fsubp
add
jno
jmp
push
js
add
or
dec
sub
sbb
inc
xchg
push
add
mov
mov
loopne
mov
dec
cmpsl
out
lret
inc
js
mov
cmc
push
std
es
push
cs
and
mov
cmp
gs
addr16
pop
add
add
aaa
jns
jmp
pop
pushf
out
cmp
add
mov
test
mov
fcmovnb
mov
mov
sbb
or
mov
fldz
out
pop
mov
push
sbb
out
lds
fcompl
and
aad
add
jnp
das
clc
leave
inc
test
sub
lods
clc
jge
add
flds
imul
movsl
cmp
dec
rcl
notl
adc
stos
inc
rolb
mov
dec
adcl
xor
in
aad
add
mov
imull
xchg
rolb
mov
pop
push
add
xchg
adc
add
cmp
fistps
mov
daa
decl
aaa
add
mov
cmp
out
lcall
cs
mov
mov
jge
xchg
add
add
mov
in
js
cltd
push
inc
add
inc
mov
scas
or
or
lods
and
mov
out
mov
int
ds
stos
add
add
sti
and
sti
push
jge
mov
jp
mov
add
outsb
sbbl
push
push
lds
add
test
add
add
add
cltd
addr16
ljmp
cltd
int
add
cmc
jae
push
mov
xchg
mov
outsl
push
std
mov
rolb
mov
cmc
fmuls
xor
adc
cmpsl
cmpsl
not
inc
add
add
xchg
add
mov
loope
sub
addr16
outsl
fdivrl
sti
mov
add
add
xchg
mov
out
cltd
int
mov
in
pop
rcll
pop
ljmp
mov
inc
add
xor
add
mov
mov
cld
pop
mov
mov
push
inc
add
dec
adc
mov
adc
add
mov
mov
repnz
bound
mov
cs
addb
cld
cld
into
out
add
mov
add
add
add
cs
and
mov
pop
test
shll
add
popa
mov
mov
add
loope
xchg
mov
push
add
mov
mov
stc
sub
sub
popf
popf
sbb
add
add
xchg
leave
aas
lock
add
lock
sbb
add
iret
pop
lods
or
push
pop
sbb
mov
add
movsl
inc
mov
mov
gs
pop
popf
out
pause
add
mov
pop
push
push
and
fs
sbb
add
sub
testl
mov
add
cmp
bound
mov
mov
ret
mov
pop
add
sarl
add
mov
in
add
add
popf
sub
lods
jbe
roll
sbb
sbb
add
xor
add
jns
icebp
out
sbbl
mov
jg
enter
mov
cli
adc
mov
out
movl
cld
aas
cmp
xor
jmp
ja
pop
jg
xchg
popf
and
mov
mov
add
add
add
ret
inc
add
add
mov
rolb
mov
daa
or
clc
test
in
pop
and
add
push
add
mov
inc
add
popf
bound
mov
add
dec
aam
pushl
dec
mov
pop
lds
inc
lds
add
add
mov
push
insl
mov
mov
pop
adc
add
add
mov
pop
fcoms
add
jno
stc
out
mov
jne
pop
xchg
lret
pop
pop
dec
mov
mov
add
insl
push
mov
mov
add
sub
mov
mov
rorl
lock
jno
mov
sarl
push
mov
add
jb
mov
fs
insl
ljmp
add
mov
dec
fs
mov
adc
mov
imul
sub
push
mov
jle
push
mov
js
sub
jns
mov
in
or
fidivl
pop
adc
mov
sub
xor
mov
lods
into
lds
scas
pop
cli
fldenv
add
mov
sbb
mov
mov
add
in
aad
pop
adc
mov
cmp
mov
jns
cmp
rcll
cli
repz
pop
lods
sub
decl
and
fwait
outsl
outsb
or
push
xorl
push
add
enter
fmuls
and
add
daa
scas
pop
pop
cvtpi2ps
cmp
sbb
jge
movsl
arpl
mov
fstps
imul
data16
dec
adc
add
sub
jle
xchg
pop
fists
dec
adc
mov
cmovle
add
movsl
mov
xchg
mov
jno
add
lock
push
gs
mov
mov
js
add
push
mov
jge
add
or
pop
adc
mov
popf
imul
sti
cld
jmp
ret
imul
setae
xchg
sub
push
mov
inc
je
lds
inc
or
jae
mov
jbe
insl
test
add
xor
and
add
pop
sahf
or
pop
gs
mov
repz
nop
add
add
int
xlat
push
jo
mov
and
addb
aam
shll
mov
mov
addb
adc
mov
inc
push
xor
jne
add
add
mov
add
sbb
ja
stc
push
into
xchg
fistl
or
loopne
mov
mov
data16
dec
cmp
or
imul
add
lods
push
je
add
cmp
xchg
jnp
int
jl
data16
mov
sbb
add
push
add
jmp
pop
push
add
and
testb
mov
outsl
stc
or
stc
xor
add
push
mov
pop
dec
pop
aaa
fs
mov
fdivrs
mov
mov
inc
or
sbb
inc
add
stos
fdivrl
mov
in
insl
xlat
and
mul
dec
push
xor
mov
ret
add
cmpsb
aas
xlat
scas
sar
jle
mov
mov
aaa
mov
inc
inc
inc
in
scas
dec
lock
mov
int3
and
mov
clc
ljmp
dec
jle
xor
and
jp
add
shrl
mov
push
and
or
outsl
and
and
mov
cld
shl
add
dec
or
sahf
in
outsb
rolb
mov
cmp
cmpsl
jae
imul
bound
mov
in
mov
or
xchg
test
add
dec
xchg
mov
push
cmp
out
fimuls
adc
mov
jg
das
hlt
das
fstps
sub
add
jmp
mov
mov
dec
mov
outsl
das
cmc
mov
jmp
adc
mov
push
mov
dec
mov
ja
mov
mov
gs
pop
mov
mov
mov
xchg
int
sahf
push
pop
sbb
sub
add
mov
push
bound
mov
enter
adc
add
ja
push
stos
push
mov
cmpsb
or
ljmp
rolb
mov
jns
dec
mov
mov
inc
sub
pop
push
leave
movsb
fwait
dec
rolb
push
add
add
jmp
rolb
mov
cs
es
add
cmp
int
repz
ret
and
pop
push
imulb
fstl
mov
mov
movsl
jnp
and
ja
adc
add
mov
sub
add
sbb
add
test
xor
and
aaa
pop
adc
mov
popa
jg
in
orl
and
add
mov
out
dec
xor
cltd
cli
sub
add
insl
mov
mov
decl
push
out
in
enter
frstor
nop
add
std
arpl
adc
pusha
add
mov
xor
push
les
lock
pop
push
add
add
dec
mov
mov
mov
mov
push
into
inc
xor
addr16
jge
sbbl
sub
pop
or
cld
push
ret
mov
mov
negl
inc
xor
mov
mov
push
add
rolb
mov
add
std
add
lahf
das
mov
popa
xor
mov
je
xchg
lock
shrl
mov
shrl
in
add
mov
and
loop
mov
fnstsw
rolb
mov
mov
movsl
inc
and
mov
mov
add
loope
mov
pop
ficoms
xor
add
mov
scas
xchg
cwtl
roll
mov
mov
add
in
je
dec
shll
iret
dec
loop
mov
pop
inc
jb
mov
jb
mov
jns
mov
idivl
or
push
cmc
add
mov
xchg
xchg
cmp
shrl
hlt
lock
jnp
addr16
mov
add
push
and
mov
jbe
inc
sbb
negl
or
daa
insl
cmc
das
xchg
test
imul
xchg
call
sbb
loope
int3
pop
mov
rorl
sub
fcmovbe
jo
mov
adc
mov
add
add
jp
add
jle
call
sbb
imul
xchg
jg
push
int3
cmpsb
jge
ret
int
add
call
push
insl
loope
add
testl
lods
ret
lods
jg
rolb
pushf
enter
sti
pop
sarl
mov
cmp
add
add
lods
xchg
sub
aas
adc
pslld
mov
cmp
add
rcr
mov
add
movsb
fs
ja
lock
mov
add
gs
sub
mov
pop
mov
add
rolb
mov
pop
dec
sahf
push
fwait
call
add
test
mov
adc
sub
push
idiv
mov
and
adc
mov
mov
fs
add
add
push
jo
mov
push
cmpsb
imul
ss
jecxz
push
insb
fiadds
or
dec
fisttpll
sub
mov
stos
outsl
jo
mov
add
and
push
cs
pop
push
add
lds
xor
mov
addb
dec
sbb
sbb
dec
test
invd
rolb
mov
and
rol
add
aaa
cld
pop
jmp
xchg
mov
add
scas
daa
xor
add
xor
jle
sbb
test
adc
dec
call
mov
sar
insl
pop
leave
adc
testb
sbbl
add
call
in
pop
lds
xchg
loopne
mov
popf
int3
sbb
mov
pop
popf
jmp
sub
add
add
mov
or
jae
add
ret
inc
enter
fstpt
shll
push
fs
ds
add
mov
cmpsl
loop
mov
xchg
adc
shll
add
jo
mov
cmpsl
xchg
mov
lock
rcrl
mov
mov
xchg
mov
mov
add
sbb
addb
mov
push
xchg
pop
int3
xchg
cmc
pop
push
popf
mov
xor
add
ljmp
add
iret
cmp
lcall
add
mov
pop
addb
push
mov
xchg
inc
add
add
sub
mov
mov
sub
add
cli
fstl
mov
add
insb
stos
repz
scas
lcall
subl
pop
cs
xlat
shl
push
scas
out
add
mov
add
sub
add
cmpsl
cmpsb
dec
pop
rcl
std
fldl
mov
jl
push
dec
inc
add
add
mov
cmpl
sub
push
jb
mov
add
out
sahf
pop
push
mov
and
subl
mov
incb
nop
add
mov
mov
lret
insl
add
fnstcw
add
cmp
imulb
mov
in
out
mov
add
mov
push
mov
mov
mov
sbb
mov
push
test
pop
xchg
jno
test
xchg
mov
add
push
jbe
xchg
pop
xchg
and
mov
and
mov
mov
sbb
mov
scas
and
adc
out
cltd
mul
mov
cld
xchg
cmpl
xor
pop
dec
add
pop
ljmp
jo
mov
imul
pop
mov
mov
xchg
and
mov
jnp
dec
pusha
add
es
mov
adc
xor
inc
popf
adc
pop
addb
xchg
add
mov
xchg
xlat
push
into
cmp
mov
cmpsl
mov
mov
or
inc
xchg
xchg
add
fildll
test
in
les
stos
push
fwait
push
lcall
daa
xor
sbb
pop
push
add
add
loope
jbe
js
out
cmp
decb
xor
fs
mov
imul
filds
loop
mov
push
out
das
addb
inc
xor
repz
add
ret
push
fldl
mov
popa
mov
mov
push
rolb
xchg
add
add
sub
fwait
leave
inc
int3
fdivp
add
push
add
inc
setg
lahf
sub
pushf
aas
push
mov
popf
in
pusha
add
stos
pandn
add
ljmp
add
rolb
mov
inc
stc
dec
pushf
and
bound
mov
mov
xchg
aaa
repz
aam
jl
lods
dec
pop
sbb
popa
jp
out
lret
les
fdivrs
mov
cmc
mov
incl
cltd
aad
lods
cs
add
in
outsl
dec
mov
pop
enter
add
add
mov
enter
push
mov
ss
add
or
fsubp
int
pop
push
test
add
push
test
cmp
outsb
sbb
add
rolb
mov
lods
mov
mov
negb
ret
push
pop
mov
popa
shrl
add
sub
add
mov
aas
ja
aas
push
cmp
decl
cmpsb
insl
mov
outsb
gs
add
arpl
rolb
mov
dec
mov
stos
fwait
pushf
cld
jns
stc
insl
loopne
mov
push
and
sub
push
add
mov
lahf
ficoml
testl
in
ja
mov
mov
mov
mov
ret
mov
add
jl
sub
mov
add
add
mov
aam
movsb
out
jp
add
pop
xlat
dec
pop
sbb
push
inc
sbbl
mov
mov
jl
fadd
subl
add
mov
mov
mov
pop
cmpsb
ret
mov
or
push
push
adc
mov
or
pop
add
stos
shll
mov
jo
mov
fisubrs
loopne
mov
add
push
aas
mov
mov
push
jle
mov
cwtl
mov
insb
ficompl
mov
sbb
cmp
pop
movsl
pop
sub
mov
adc
addb
rolb
or
loop
mov
mov
inc
ret
rolb
or
gs
xchg
repnz
sub
rolb
mov
movsl
mov
fcompl
sub
jp
inc
add
jge
aad
bound
mov
out
jecxz
add
pop
jp
mov
mov
outsb
sbb
call
dec
mov
add
push
mul
ret
fimuls
dec
push
test
cmp
aaa
sbb
add
sub
mov
cmp
add
andl
data16
je
lahf
sbb
jl
add
mov
mov
rolb
arpl
pop
repnz
inc
cmp
imul
mov
fs
inc
pop
addb
mov
xchg
mov
mov
mov
rolb
mov
push
jle
hlt
loop
mov
arpl
push
add
or
out
insl
mov
test
mov
cmp
adc
mov
sbb
add
mov
add
mov
lcall
or
les
add
mov
add
mov
jb
mov
fstpt
xchg
scas
lret
mov
mov
gs
jge
ljmp
rolb
mov
int3
lret
add
mov
sub
mov
lea
mov
lea
pop
or
movsl
adc
mov
push
mov
jb
mov
pop
test
mov
es
std
test
add
icebp
mov
frstor
push
sub
or
sbb
inc
add
mov
leave
std
faddl
mov
pop
imul
pop
jae
dec
pop
fucomi
pusha
add
andnps
jns
pop
push
outsl
add
jge
mov
add
push
or
sbb
mov
es
cmp
bound
mov
mov
jecxz
add
sti
push
sti
pop
es
mov
mov
jp
cs
loop
mov
stos
std
rolb
push
add
or
loop
mov
test
jg
add
jp,pt
stos
xchg
rcll
jmp
jae
pop
sbb
sbb
stos
add
mov
mov
das
add
add
mov
mov
fisubrl
sub
lock
into
or
lods
xchg
cmp
mov
add
cwtl
fsts
mov
mov
in
or
add
mov
icebp
outsb
sahf
cwtl
sbb
sbb
xchg
lods
jb
mov
xchg
cwtl
or
sbb
sti
cmp
jns
hlt
cmpsl
mov
cmp
cmp
cltd
fcomps
mov
int
aad
into
push
ret
xor
mov
enter
clc
push
mov
dec
jae
test
int3
xor
je
add
mov
mov
lea
aam
push
mov
xor
pop
clc
and
cmp
dec
addb
scas
sub
loope
jno
xor
mov
add
mov
sbb
arpl
add
mov
xor
jne
call
incb
outsl
lcall
mov
cmp
add
je
shll
sub
std
and
xchg
mov
adc
push
ret
les
add
add
in
dec
lret
fsubs
mov
je
sbb
fcmovnbe
negb
popf
addl
mov
std
fisubl
fstpl
adc
mov
jae
out
lret
negl
aas
pop
sti
gs
mov
fisttpl
inc
adc
aas
push
push
ljmp
mov
aad
mov
mov
add
pop
mov
push
add
dec
and
outsb
push
adc
add
mov
test
push
mov
mov
mov
popf
lret
cmp
and
push
sub
lock
add
add
lods
inc
xor
push
add
sub
jbe
stos
push
adc
lcall
mov
inc
add
scas
scas
jg
push
arpl
mov
into
jecxz
mov
xchg
repnz
mov
inc
mov
int3
popf
out
add
dec
mov
out
add
or
mov
out
lods
in
or
add
icebp
les
ja
cmp
ljmp
jmp
or
movsb
movsb
sbb
test
add
mov
out
loopne
mov
mov
add
xor
aam
mov
jne
decl
test
sbbl
push
pop
lock
add
push
repz
int3
push
add
jle
fisttpll
repz
stos
push
xchg
je
fildll
jnp
cmp
or
dec
roll
mov
stos
mov
mov
push
mov
mov
jo
mov
int3
adc
jle
dec
inc
add
mov
cld
jg
stos
mov
adc
sti
int3
xor
lds
add
add
rolb
jnp
cmp
mov
movsl
and
push
pop
cld
sbb
fsubrl
add
cs
lret
rolb
mov
sub
lods
adc
xor
or
sub
mov
out
add
lds
dec
adc
loop
mov
sbb
xchg
add
pop
outsb
in
push
cmp
in
cwtl
and
push
pop
cmp
add
outsl
addb
daa
imul
pop
outsb
ja
push
xchg
and
mov
pop
xor
add
mov
jl
mov
fnsave
pop
and
mov
aaa
or
push
inc
call
fmuls
add
mov
pop
inc
add
in
add
mov
add
loop
mov
ret
out
mov
or
pop
pop
aam
inc
cmp
insb
jl
and
jo
mov
dec
and
lock
jno
or
cmp
mov
mov
mov
ret
inc
mov
fwait
or
sbb
icebp
in
faddl
mov
add
sahf
mov
cmc
dec
cltd
mov
jle
inc
jmp
popa
nop
add
mov
mov
dec
cwtl
mov
mov
add
mov
lds
imul
popa
pop
mov
sub
add
fimuls
loopne
mov
mov
push
xchg
cmp
mov
mov
cmp
xchg
aaa
xchg
cltd
sub
mov
add
inc
add
pop
mov
mov
fmuls
cmpl
lahf
sub
inc
xchg
add
cmp
add
add
mov
ds
xchg
mov
add
fwait
mov
mov
jae
lea
add
jge
or
xor
mov
push
add
mov
int
add
mov
fucomi
inc
jb
mov
test
out
aad
decb
movaps
mov
lds
jg
cmp
add
mov
add
scas
sub
cmp
hlt
cmp
lcall
push
addb
mov
dec
rolb
mov
jae
mov
jnp
add
push
add
xchg
cmpsb
aad
push
push
paddw
adc
mov
jle
mov
mov
xchg
cmp
insb
sub
int3
lea
ret
neg
cwtl
dec
mov
stc
and
cli
mov
push
ljmp
mov
cmp
aam
pusha
add
add
lcall
push
push
aad
scas
roll
mov
add
addb
test
mov
adc
mov
push
or
xchg
rolb
mov
repz
repnz
ret
and
das
push
lea
add
mov
dec
xchg
leave
dec
dec
and
mov
jg
cli
imul
repnz
mov
mov
add
xor
mov
shll
add
push
add
iret
psubsw
dec
xchg
add
std
scas
xor
dec
mov
and
sub
mov
add
fimull
out
jnp
sbb
mov
rolb
mov
popa
mov
ja
add
lea
sbb
int
pusha
add
jge
cmp
rcrl
icebp
ss
jo
mov
dec
enter
mov
mov
mov
in
cmc
adc
loope
pop
test
add
cmp
lahf
stos
lahf
inc
add
in
pop
cmp
and
dec
or
ret
fsubs
ret
mov
call
jmp
jne
cld
mov
mov
mov
nop
add
add
sub
lods
lods
push
stos
cs
aas
dec
popf
inc
add
adc
add
mov
aaa
push
and
mov
mov
xchg
or
sub
add
mov
sbb
int
xor
jge
xchg
sub
inc
in
xor
xchg
push
jbe
test
in
sub
jg
xchg
fstpt
push
cs
add
daa
cld
cmp
add
mov
and
sahf
pop
aas
mov
sahf
test
lcall
test
clc
fisttpl
fdivl
adc
xor
mov
add
lcall
add
mov
jno
rolb
mov
dec
cli
push
add
xor
and
in
jmp
fists
lret
mov
add
mov
cmp
lahf
add
xchg
loopne
mov
jo
mov
call
dec
and
imul
popa
jo
mov
add
icebp
out
pop
adc
mov
xchg
ss
xor
repz
mov
or
mov
add
mov
mov
rolb
mov
cmpsb
lea
cmp
adc
add
cmp
push
mov
enter
pop
idivb
mov
push
add
push
outsl
or
jmp
js
jne
test
mov
mov
mov
push
loope
add
pusha
add
out
es
push
add
in
popl
data16
mov
mov
push
loope
xor
mov
add
mov
add
sub
fcom
mov
add
mov
hlt
rolb
aam
add
mov
sbb
inc
add
mov
cmp
popf
mov
lcall
adc
jl
lock
and
mov
mov
mov
xor
je
sbb
jo
mov
setg
adc
cmp
jnp
std
jnp
daa
fwait
ja
adc
mov
mov
mov
push
add
adc
add
mov
or
add
mov
add
add
loope
cltd
cmp
xchg
or
push
xchg
jg
xor
mov
sbb
mov
out
xchg
inc
arpl
add
pop
adc
dec
jnp
inc
add
or
pop
test
add
jne
xor
mov
pop
dec
addb
movsl
das
imul
mov
mov
sbb
lods
dec
push
add
bound
mov
out
inc
add
mov
lea
xchg
addb
pop
mov
lods
inc
fs
xor
out
test
outsb
sbb
push
mov
pusha
add
lret
cmpsl
pop
pop
push
mov
push
add
incb
add
sbb
jns
ss
add
cwtl
and
dec
push
call
test
nop
add
imul
or
jle
lea
int
lcall
bound
mov
fwait
mov
pop
clc
rcrl
pushf
movsl
add
mov
roll
mov
or
mov
stc
outsl
or
add
ret
xor
mov
inc
add
lds
mov
js
add
xchg
lret
cs
add
mov
add
xor
mov
cs
jp
inc
add
mov
mov
mov
je
arpl
mov
mov
mov
add
lock
ja
cmp
and
mov
mov
or
add
adc
aaa
cmp
sbb
movsb
les
call
movsl
adc
cwtl
pop
test
cmp
add
repz
aad
or
add
mov
aad
add
xchg
aam
jge
jno
jle
out
add
mov
cwtl
mov
mov
mov
mov
mov
dec
stc
sub
sub
push
fwait
xor
adc
sbb
loopne
mov
repnz
sbb
add
cwtl
cmp
mov
dec
cmpsb
adc
mov
out
dec
and
add
jg
insl
aam
jmp
ss
mov
add
addr16
xor
aam
sub
and
mov
xchg
cmp
jae
rolb
mov
repz
mov
add
sbb
test
rolb
mov
and
push
add
mov
push
adc
pop
arpl
scas
jns
push
add
add
scas
out
add
add
das
loope
loope
popa
mov
in
test
into
mov
add
popf
icebp
sar
je
lahf
adc
jbe
sub
mov
mov
cmc
sub
add
loop
mov
mov
add
xchg
add
mov
mov
mov
add
hlt
jg
xchg
lret
in
clc
rolb
mov
mov
sbb
mov
imul
add
das
xchg
roll
xor
outsl
test
mov
sbb
loope
add
es
jns
bound
mov
push
add
adc
mov
add
loop
mov
jg
add
scas
sub
add
sub
stos
cmpsb
int3
adc
insl
pop
add
mov
jecxz
mov
lods
in
pop
test
push
stos
out
and
mov
les
push
add
jecxz
rolb
in
add
rolb
mov
mov
mov
dec
nop
add
xchg
push
subl
addb
mov
pop
rorl
sub
add
sbb
jmp
push
pop
dec
mov
adc
test
jp
sub
mov
xchg
je
push
sbb
ud0
mov
stos
sub
mov
in
xor
mov
jo
mov
mov
adc
fisubs
loopne
mov
mov
inc
add
mov
out
dec
sub
mov
sahf
dec
xchg
addb
fs
mov
push
mov
test
add
push
sbb
add
adc
mov
in
push
sub
and
mov
call
mov
mov
pusha
add
push
xor
mov
mov
pop
adc
mov
movsl
inc
lock
scas
fisubl
sbb
cs
or
pmaddwd
sbb
xor
mov
mov
sbb
jp
pop
sub
movsb
outsb
dec
and
mov
ret
push
jnp
add
jno
dec
lret
les
jb
mov
and
mov
add
add
jb
mov
ljmp
test
in
ss
push
add
mov
out
xchg
cmc
cmpsl
sub
mov
or
mov
mov
mov
inc
mov
loop
mov
mov
adc
mov
mov
imul
or
scas
push
mov
icebp
scas
loope
ds
int
pushf
cmp
jp
arpl
push
loope
out
jns
mov
add
mov
jnp
mov
ds
outsl
sbb
push
xor
pusha
add
mov
fidivs
push
inc
adc
mov
sub
cmpsl
sub
rolb
mov
xor
addb
stos
jno
cmp
xchg
or
lods
leave
inc
dec
cmp
scas
rolb
xor
les
scas
pop
push
ss
dec
pop
add
mov
pop
out
scas
dec
jecxz
and
adc
mov
ret
inc
jo
mov
jb
mov
lcall
mov
je
lods
aad
repnz
add
addb
hlt
imul
add
xor
dec
sar
sub
cld
clc
and
scas
insl
test
mov
add
cltd
inc
sahf
xchg
jge
pop
cmp
fiadds
add
cmp
cmpsl
in
lods
jae
and
and
jp
add
imul
xchg
xor
mov
add
pushf
call
or
jge
loop
mov
add
adc
xor
in
xor
mov
testl
insb
mov
mov
mov
sbbl
cli
aam
clc
call
outsb
push
add
rolb
mov
imul
mov
xchg
in
mov
pop
scas
sbb
bound
mov
jecxz
jmp
dec
xor
fs
mov
stos
xor
mov
sub
icebp
shl
add
and
mov
inc
pop
xor
mov
jbe
imul
mov
mov
mov
out
leave
icebp
jo
mov
std
xchg
push
cld
rolb
mov
mov
mov
mov
sbb
pop
cltd
lea
mov
lock
out
jecxz
cmp
dec
data16
ret
jnp
mov
sub
into
push
stos
mov
out
in
xor
mov
mov
mov
mov
lcall
outsl
mov
aaa
xor
mov
loop
mov
movsl
outsb
sub
adc
add
imul
leave
popa
pop
mov
or
lock
and
add
dec
lock
dec
mov
in
scas
sti
sub
mov
inc
push
mov
stc
es
mov
aaa
sub
ss
arpl
add
enter
inc
jp,pn
outsb
mov
add
rolb
mov
mov
jo
mov
add
arpl
aaa
cmp
add
push
mov
dec
add
sbb
mov
mov
jnp
xor
mov
add
add
mov
mov
dec
sbb
jne
mov
lods
xchg
sbb
add
mov
push
adc
and
stos
mov
daa
repnz
mov
lds
rolb
mov
shll
popf
ret
mov
cmp
sbb
adc
mov
add
in
inc
cmc
mov
jns
stos
xchg
pop
sahf
in
shll
mov
sub
add
sub
popa
or
ds
add
mov
pop
add
inc
fildll
movsb
fldl2t
loop
mov
repz
sti
icebp
add
fildll
push
loop
mov
mov
dec
lea
sti
nop
add
pop
lahf
aam
xor
mov
loopne
mov
std
jne
ja
add
mov
mov
add
push
dec
dec
jno
test
stos
pop
cmp
mov
sbb
sbb
mov
jno
xor
add
cmpsl
pop
mov
iret
xchg
int3
bound
mov
add
xor
mov
add
stc
dec
cmc
pusha
add
or
add
add
cmp
aas
sub
rcll
ret
xchg
xchg
cmpsb
addb
addb
jnp
bound
mov
rcll
addb
jle
pop
aad
adc
lods
mov
adc
push
add
or
mov
pop
pop
ret
mov
cmp
add
into
cmp
sbb
xchg
rolb
hlt
filds
sub
jno
cmp
loop
mov
fisubrl
es
mov
push
mov
fisubl
or
imul
mov
mov
mov
add
mov
add
mov
lcall
and
cmpsl
xchg
pop
xor
mov
pop
jb
mov
jp
jae
push
push
inc
cld
in
push
add
mov
in
sbb
testl
adc
test
inc
hlt
js
imul
in
xchg
loopne
mov
inc
add
mov
add
addb
push
rolb
pop
sahf
or
mov
xchg
mov
xchg
fwait
mov
ljmp
pop
clc
push
jb
mov
inc
in
call
insb
xchg
fistpl
add
xor
mov
lret
addb
xchg
xor
mov
add
lea
insb
gs
mov
gs
in
inc
jb
mov
push
sbb
inc
lock
jg
aad
add
mov
jae
adc
cmp
test
lea
pop
cmp
push
jb
mov
je
in
loopne
mov
add
cli
pop
fimull
mov
popf
js
arpl
or
test
pop
test
xchg
sahf
mov
loope
les
sub
fwait
cmp
shl
ss
mov
or
clc
adc
test
cs
pop
cltd
dec
negl
mov
sbb
and
or
push
fucom
rolb
test
rcrl
rolb
mov
jb
mov
sub
and
loope
call
jno
add
mov
aaa
shll
lret
or
xlat
fdivp
mov
sbb
fdivrl
lret
cmc
cli
fwait
sub
cmp
mov
je
add
cmp
mov
add
add
mov
lret
add
xor
mov
mov
add
mov
imul
cs
test
subl
or
arpl
dec
jbe
xlat
sti
popa
xor
mov
jle
pop
add
dec
add
inc
mov
cmpsb
sub
nop
add
pop
ds
cs
not
add
mov
lock
sbb
js
cmp
roll
mov
sbb
out
push
push
scas
dec
bound
mov
in
jge
pop
pop
jp
pop
mov
jmp
sti
fidivs
mov
orl
mov
dec
fisubrs
jp
add
add
mov
xchg
add
xchg
loope
shrl
rcll
rolb
mov
sub
xchg
lods
or
sub
roll
dec
and
add
add
arpl
movsb
pop
sbb
rcrl
cmp
add
inc
pop
mov
imul
add
pop
cmpsl
mov
bound
mov
and
push
rolb
mov
mov
mov
add
int
rcl
sbb
scas
jecxz
inc
pop
add
adc
mov
jb
mov
aad
ja
or
adc
inc
push
mov
inc
mov
xchg
mov
add
jnp
loope
add
add
mov
gs
mov
jp
add
test
add
or
mov
add
loop
mov
out
data16
addb
dec
cli
sbb
mov
mov
push
rolb
mov
push
ljmp
mov
aas
outsb
frstor
cltd
push
add
addb
int3
addl
pop
pop
icebp
xor
mov
aam
pushf
xchg
add
push
mov
or
add
jae
out
jnp
add
out
rolb
mov
cwtl
ss
sbb
inc
dec
dec
ret
pop
into
ljmp
push
loopne
mov
out
mov
and
mov
mov
add
mov
cld
xchg
add
add
fisubrl
testb
pop
sahf
into
jo
mov
leave
sub
mov
and
mov
test
xor
mov
cmpsl
xchg
bound
mov
mov
add
pop
push
cmp
cld
lods
scas
sahf
cmp
add
add
aad
outsl
inc
cmp
fisttps
test
pop
gs
in
inc
adc
imulb
dec
jecxz
sbb
daa
sbb
and
lcall
add
jg
mov
fdivrl
out
ljmp
cmp
add
mov
xor
aam
pusha
add
add
imul
cmc
mull
add
dec
scas
jg
add
dec
fistl
dec
filds
inc
mov
xorl
mov
cmc
push
jg
xor
mov
cmpsb
xchg
jle
add
mov
pop
pushf
call
mov
mov
aam
mov
add
cli
rolb
mov
add
add
or
les
scas
movsb
dec
push
std
inc
adc
or
adc
mov
imul
add
mov
and
addl
pop
ljmp
repz
jecxz
aas
in
stc
out
lahf
lods
imul
sub
sub
add
xor
mov
xor
mov
ss
xor
add
imul
dec
push
push
test
dec
add
or
push
fimuls
mov
add
sub
scas
push
sub
inc
add
mov
mov
add
rcrl
mul
add
mov
mov
out
fnstsw
mov
mov
add
mov
lods
adc
xchg
movsb
mov
into
stos
mov
stos
insl
rolb
mov
mov
jnp
xlat
mov
push
dec
stos
cs
pop
push
xor
dec
mov
aad
add
int3
loopne
mov
sbb
mov
imulb
lock
xor
out
aaa
inc
aad
sub
je
fstpl
mov
mov
jle
int
scas
cmp
stc
jbe
fsubs
mov
sahf
xchg
jle
push
add
add
adc
mov
sbb
mov
popf
and
sub
mov
mov
test
add
clc
or
mov
loope
sub
pop
push
add
cmc
push
iret
imul
inc
mov
push
pushf
data16
addb
sbb
ret
mov
and
mov
iret
mov
icebp
call
mov
dec
rolb
add
dec
cmp
adc
add
add
mov
and
xchg
popf
adc
mov
and
fadds
add
inc
cld
fstps
lahf
sbb
out
fcmovu
or
mov
add
dec
bound
mov
inc
add
add
add
pusha
add
cmpsl
rolb
sbb
int
int3
or
repnz
mov
dec
xchg
mov
jp
jl
arpl
pop
aas
sbb
rol
add
out
push
add
add
add
pushf
push
sub
jae
jge
jbe
rolb
mov
gs
ret
or
add
mov
mov
push
push
outsb
xchg
clc
jns
xor
mov
or
jg
insb
cmp
cli
dec
imul
adc
scas
jne
int3
xchg
add
mov
mov
add
pop
push
sbb
cmp
out
fldt
push
fwait
mov
cli
cld
into
in
out
out
addl
add
mov
out
addb
aam
imul
lret
xchg
xor
mov
int3
scas
inc
sbb
mov
addb
mov
mov
lret
sub
mov
leave
std
add
cmp
add
jbe
outsl
fwait
addr16
sub
icebp
loope
pop
addb
adc
mov
out
sub
fcom
dec
lds
mov
mov
in
jne
adc
mov
lret
pop
jae
inc
mov
sub
mov
mov
xchg
inc
add
add
inc
jecxz
testb
add
and
mov
out
leave
jo
mov
add
push
xor
dec
or
repnz
aas
das
aas
test
xchg
int
lds
jge
cmpsl
out
inc
inc
loope
or
sbb
fs
mov
in
aaa
mov
mov
add
xchg
sub
in
sbb
add
or
add
dec
push
mov
mov
add
or
cmpsb
fstpt
pop
xchg
jge
add
sbb
add
cmpsb
inc
ja
jl
dec
xchg
mov
pop
and
in
add
loopne
mov
sub
add
add
lret
psllw
mov
mov
pop
jle
das
jns
in
stc
nop
add
push
jbe
sub
push
add
adc
cmp
aaa
addr16
mov
mov
mov
stos
push
jo
mov
in
add
mov
mov
fdiv
xor
mov
add
inc
pop
dec
test
mov
jnp
hlt
sub
rcll
scas
pop
shll
cmpsl
dec
and
sti
sbb
icebp
adc
push
add
jmp
hlt
adc
imul
cmpsb
insb
in
cmc
in
in
sub
add
mov
mov
add
mov
jp
add
addb
cmpsb
push
add
mov
adc
data16
xchg
add
out
add
ds
or
add
mov
mov
notb
dec
pop
lock
fisubrs
jae
add
jne
repz
cltd
add
mov
xor
mov
call
mov
pop
sti
and
add
xchg
add
test
xchg
adc
in
ret
loope
xor
pop
mov
mov
mov
sub
fsubs
aam
cld
gs
je
dec
cmp
adc
mov
dec
lock
mov
add
xor
iret
xchg
cmp
aaa
or
add
pop
jle
xchg
mov
add
jne
jno
pusha
add
sbb
in
add
pop
cs
ds
hlt
ja
jp
repz
jno
mov
xlat
cltd
mov
mov
add
xchg
stc
gs
fmuls
pop
gs
add
add
shll
fnsave
push
insl
loopne
mov
mov
inc
orl
js
push
dec
pop
imul
pop
cwtl
push
fwait
loope
ljmp
pop
jb
mov
mov
sahf
pusha
add
aaa
sub
xchg
mov
mov
jl
add
mov
add
add
and
mov
push
cli
jns
jmp
add
outsl
sub
fidivrs
or
repnz
ss
test
psraw
pushf
mov
add
mov
outsb
cmp
shll
dec
jo
mov
sti
cmpsb
xor
mov
fnstcw
and
lds
mov
nop
add
addb
fstl
add
mov
mov
add
insb
test
add
hlt
addb
aam
cltd
xor
mov
pusha
add
and
add
loop
mov
mov
jl
add
addb
xchg
dec
pop
std
sbb
push
pop
pop
ljmp
mov
pusha
add
mov
add
ds
lods
ljmp
rolb
mov
outsl
leave
js
add
add
inc
add
aas
daa
jnp
lret
enter
cli
push
jmp
mov
ret
cld
pushf
and
mov
test
mov
add
je
fisubs
or
addb
or
mov
mov
add
mov
fs
js
jb
mov
addb
les
add
add
sahf
rorw
jl
push
and
mov
lret
out
pop
cmp
mov
add
mov
mov
hlt
out
sbb
jecxz
add
addb
fisttpl
inc
adc
mov
add
insl
neg
lea
mov
xchg
mov
add
dec
or
mov
aaa
mov
sbb
inc
sbb
xchg
mov
pop
cmp
push
or
insl
xchg
dec
insl
test
in
jge
pop
cmp
push
add
cmpsb
sub
adc
mov
dec
outsl
push
idiv
add
mov
dec
jnp
pop
push
ja
push
gs
rolb
mov
call
les
data16
sbb
pop
xchg
add
out
mov
adc
mov
add
sbb
imul
imul
les
adc
mov
fidivrl
xlat
sbb
aas
push
cmp
jp
mull
mov
xchg
pop
fldcw
xchg
jmp
add
bswap
mov
or
cmp
add
fmul
cmpsl
lret
popa
and
mov
je
sbb
and
and
sbb
inc
idivl
scas
test
outsb
and
inc
data16
mov
sub
pop
arpl
jne
add
sbb
pop
jno
jge
hlt
xchg
rcll
inc
sbb
lea
jle
lahf
dec
rolb
mov
push
mov
sbb
inc
mov
add
cmp
test
jmp
nop
add
add
bound
mov
jmp
fsubrs
mov
mov
mov
mov
dec
bound
mov
add
mov
sbb
test
out
stos
arpl
add
inc
add
insb
insb
mov
add
dec
mov
es
add
loope
mov
mov
mov
lret
mov
mov
sbb
add
mov
mov
jecxz
mov
adc
inc
mov
cmp
add
pop
and
mov
push
add
and
mov
rolb
mov
jmp
les
jecxz
xor
pusha
add
mov
mov
mov
mov
xor
mov
cmp
addl
add
hlt
xchg
lods
jmp
sbb
pop
xchg
gs
mov
mov
sub
add
and
test
sbb
inc
sti
push
or
cld
xchg
lock
push
jae
cmp
mov
push
jmp
data16
xchg
mov
inc
sub
dec
cmp
add
imul
test
dec
and
mov
cmp
pop
jno
add
sbb
xchg
cmp
mov
mov
push
sub
jnp
fsubr
mov
test
add
mov
mov
xchg
add
lods
pop
shll
mov
les
mov
inc
sbb
push
adc
mov
test
cli
adc
or
sbb
jae
js
roll
sub
mov
ja
push
dec
int
int
add
loop
mov
add
and
mov
add
push
mov
jp
xchg
popf
dec
jg
jno
xor
outsl
add
add
mov
cwtl
mov
add
out
add
mov
push
add
mov
pop
mov
rolb
mov
cmp
push
rcr
push
lcall
push
push
dec
xor
sbb
add
mov
imul
jbe
add
adc
repnz
sbb
inc
xchg
lods
nop
add
lret
mov
insl
insb
inc
popaw
jne
xor
jge
xchg
add
add
add
push
adc
add
add
out
and
adc
mov
popa
pop
sbb
hlt
or
mov
add
push
add
mov
movsl
pop
test
enter
jecxz
fiadds
add
mov
repz
lods
jg
xchg
xchg
xchg
jle
outsb
je
not
xor
pop
out
xchg
lret
adc
out
gs
mov
call
xor
call
jae
dec
jns
xchg
mov
mov
mov
cmpsb
dec
mov
lcall
popa
cwtl
jne
adc
dec
mov
jp
cmpsb
xchg
adc
mov
mov
mov
dec
xor
xchg
push
ljmp
leave
xchg
mov
dec
and
jbe
mov
add
or
in
dec
addb
out
arpl
into
xor
iret
aaa
nop
add
insb
cs
mov
push
lret
test
cltd
imul
aas
mov
jnp
add
jnp
and
mov
add
in
ret
mov
pop
outsb
arpl
jne
add
sbb
jmp
enter
add
jge
movsb
fstps
xchg
imul
frstor
pop
and
add
push
lret
arpl
test
sbb
rcl
or
addb
pop
cs
mov
add
mov
add
mov
xor
push
insl
mov
mov
pop
loopne
mov
mov
adc
mov
pushf
or
jns
mov
jae
add
mov
add
out
daa
jno
aam
add
push
sti
in
xchg
mov
mov
out
loop
mov
add
push
lret
addb
sbb
push
movsb
int3
xor
xchg
mov
mov
cld
or
mov
add
movsl
ljmp
outsl
mov
out
mov
xor
fsubrs
sbb
adc
popa
hlt
dec
and
mov
add
add
loopne
mov
or
cmp
xor
add
insl
push
jle
xlat
test
sahf
sub
daa
mov
xor
mov
add
gs
pop
insb
loop
mov
dec
cmpsl
sbb
add
fs
jne
and
cmpsl
lcall
je
cmp
mov
dec
testb
adc
mov
jmp
fs
dec
mov
fnstcw
adcl
testl
push
fcompl
add
inc
mov
mov
xchg
add
lods
push
sahf
ret
inc
jns
mov
clc
mov
jmp
in
mov
dec
out
cmp
jg
mov
aam
mov
dec
popa
pop
cmp
outsb
xchg
or
dec
add
int3
jne
add
mov
cmp
pop
imul
arpl
xlat
iret
mov
jb
mov
pop
fwait
push
loop
mov
cwtl
les
add
sub
pop
lods
mov
rolb
mov
icebp
xchg
add
bound
mov
add
mov
jg
cmp
add
jmp
xchg
in
cmc
xor
add
adc
adc
sub
add
jo
mov
inc
mov
mov
add
stc
push
pushf
addr16
add
mov
mov
add
stos
popf
and
out
and
loop
mov
rcrl
fisubrl
jge
pop
clc
cli
ds
test
mov
addb
add
mov
imull
int
jp
cmc
adc
mov
xchg
stos
cltd
cmpl
mov
add
mov
out
push
rolb
mov
mov
ds
loop
mov
loope
scas
js
sbb
add
pop
mov
mov
mov
loopne
mov
bound
mov
leave
mov
ret
mov
add
sti
scas
adc
add
mov
add
rcll
push
arpl
das
out
dec
push
adc
add
jl
out
leave
push
mov
mov
cmp
add
mov
cli
je
dec
xor
xor
mov
js
mov
mov
loopne
mov
sahf
lods
sub
add
cli
mov
cmp
ret
sbb
popf
divb
jecxz
xchg
add
add
aas
jb
mov
add
sbb
adc
mov
mov
add
cmp
cmp
mov
xchg
sub
cmpsb
jbe
dec
in
push
cmpsl
cmp
fsubrl
mov
add
mov
xchg
ja
rolb
mov
add
add
xchg
cmp
jnp
add
mov
inc
add
dec
xchg
pop
mov
mov
mov
xor
mov
lods
dec
fsub
add
add
adc
or
into
push
pop
lods
sbbl
add
cs
add
mov
neg
scas
rolb
mov
mov
add
sub
mov
inc
mov
mov
sahf
mov
lret
enter
out
add
mov
int3
fpatan
fcmovb
add
popf
popa
push
adc
cs
add
dec
ds
fwait
es
jnp
ljmp
xchg
sbb
movsb
push
inc
in
xor
jl
dec
shrl
popf
sbb
add
js
les
popf
mov
cmp
xchg
jmp
outsl
push
mov
mov
xchg
add
add
fisubrl
mov
add
data16
imul
xchg
add
mov
hlt
arpl
hlt
pushf
stos
xchg
aad
out
and
int3
cli
add
sub
inc
movsb
jmp
in
lods
popa
aam
sub
fbstp
add
imull
and
mov
xor
xchg
rolb
adc
pop
xor
mov
xchg
xchg
and
mov
push
repnz
imul
or
add
lds
mov
add
jae
les
add
add
bound
mov
pop
stos
repz
mov
push
pusha
add
pop
dec
fisttpl
push
sub
and
imul
cmp
dec
iret
sbb
call
mov
jnp
das
movsb
or
lret
cwtl
fucomp
xchg
nop
add
push
sub
mov
stos
gs
js
add
xchg
mov
push
mov
xor
and
push
arpl
mov
push
jb
mov
pop
repnz
addr16
ss
in
lods
inc
jo
mov
add
imul
and
mov
add
mov
mov
add
into
and
cwtl
and
mov
pop
or
aaa
xor
mov
cmp
xchg
movsl
shrl
nop
add
bound
mov
xor
sbbl
jns
add
bound
mov
mov
notb
lret
popf
or
ret
mov
jns
jns
push
enter
jecxz
mov
loop
mov
add
mov
xor
mov
sbb
pop
xchg
lcall
loope
movsl
bound
mov
dec
ret
fldcw
ss
fs
jo
mov
cld
adc
mov
mov
test
lea
pop
xor
jns
je
jb
mov
ret
out
inc
add
addb
cmp
mov
std
cmc
rolb
mov
sub
mov
add
std
jle
mov
in
movsb
les
jo
mov
mov
mov
mov
mov
mov
outsb
xor
dec
std
or
xchg
imul
inc
stc
sub
mov
jl
mov
mov
gs
xor
mov
xor
mov
cltd
lahf
pop
xor
out
mull
add
int
leave
mov
icebp
test
sub
adc
mov
into
data16
mov
mov
sti
or
sub
mov
mov
add
pop
and
mov
adc
test
mov
cltd
cmp
and
cmp
adc
dec
daa
scas
outsb
and
mov
and
and
mov
jmp
dec
pop
test
inc
add
add
adc
cmp
jge
cmpsb
mov
xchg
and
sbb
mov
fisttpl
xchg
mov
adc
add
push
sbb
out
pushf
inc
pusha
add
mov
xchg
faddl
mov
add
das
adc
gs
jl
xor
mov
inc
add
loopne
mov
add
ljmp
aas
cs
ja
add
ret
push
ss
pop
lret
sub
rorl
jns
dec
out
and
add
mov
roll
insl
fstpl
ret
cmp
sbb
add
xchg
pop
test
jne
add
xchg
leave
fldenv
add
mov
add
mov
add
add
or
pusha
add
mov
add
adc
mov
movsl
mov
mov
add
sub
arpl
mov
mov
cli
fdivl
mov
jnp
add
test
lcall
cmp
cltd
push
cmp
cmpl
add
mov
add
and
fwait
xchg
imul
mov
xchg
dec
inc
mov
sti
mov
add
mov
ret
push
pand
repnz
add
dec
jbe
je
adc
mov
mov
sub
cli
leave
mov
xchg
dec
xchg
pop
repz
jmp
aam
inc
push
pushf
ds
cmpsl
lods
inc
pop
icebp
dec
fiadds
rolb
pop
icebp
leave
jle
and
add
add
mov
xor
push
add
xchg
ja
fdivrl
dec
mov
mov
sahf
xchg
xchg
sbb
outsl
xorl
mov
xor
ss
movswl
cmp
push
dec
xor
mov
into
jp
std
inc
pop
pop
mov
lahf
stos
jo
mov
sub
mov
cwtl
jo
mov
add
adc
and
mov
loop
mov
add
mov
mov
mov
cmc
lods
fldl
or
outsl
lock
insb
stc
popf
xchg
icebp
je
xchg
xor
mov
ss
shr
loopne
mov
lods
mov
cmpsb
or
ror
mov
mov
pop
xor
dec
mov
xor
mov
add
add
mov
out
xchg
add
addr16
fs
xor
cmc
jne
lock
add
sbb
add
ds
in
sub
lds
data16
add
mov
mov
mov
mov
sub
into
dec
add
dec
popa
add
daa
rcr
daa
aaa
lret
sub
xchg
ss
fsub
add
fmulp
sub
out
dec
push
ret
test
add
mov
shll
mov
add
add
pop
fidivl
stc
push
mov
inc
add
push
mov
cmp
add
inc
inc
iret
and
add
mov
push
mov
rolb
mov
loop
mov
out
jnp
dec
fisttps
inc
cmp
dec
pop
test
add
push
add
stos
push
add
sbb
jne
xlat
jge
rolb
mov
dec
and
sub
push
lret
insl
insl
jns
and
add
add
out
mov
xchg
add
mov
sbb
jno
jmp
aaa
negb
push
or
mov
imul
add
enter
out
jne,pt
sbbl
mov
lcall
xor
lods
jns
add
add
out
push
adc
xchg
cmpsb
shr
cmp
call
xchg
out
lea
fdivrl
icebp
and
jp
icebp
jnp
jo
mov
outsl
cwtl
xchg
add
sbb
cmp
cli
mov
add
rolb
mov
xchg
movsb
xlat
cmp
outsb
lcall
sbb
mov
jne
and
add
mov
jge
and
jnp
testl
xchg
adc
mov
xor
cmp
mov
sti
bound
mov
lahf
and
mov
les
add
jno
add
test
mov
mov
clc
jnp
fists
subl
inc
imul
or
cwtl
nopl
cli
aas
inc
rcrl
mov
mov
outsl
pop
pop
inc
aam
stos
adc
es
repz
mov
scas
je
sbb
rolb
mov
ds
add
addr16
lahf
es
push
add
mov
test
scas
mov
mov
ljmp
cmp
filds
mov
mov
add
mov
push
in
inc
ja
add
into
push
sbb
mov
add
loop
mov
add
jg
ljmp
rcrl
addr16
pop
fcompl
js
add
mov
pop
inc
scas
adc
add
repnz
cmp
pop
inc
add
dec
mov
leave
lock
add
xor
add
add
pop
pop
out
sbb
std
pop
mov
xchg
xor
sbb
mov
fwait
mov
fs
addr16
mov
add
data16
mov
mov
test
stc
mov
mov
dec
ds
jecxz
icebp
xchg
xchg
idivb
mov
xchg
cmp
push
in
ret
insl
fwait
loopne
mov
mov
testl
add
mov
add
mov
and
mov
cmp
popa
daa
inc
add
mov
daa
loop
mov
jp
mov
imul
or
add
movl
jecxz
xchg
xor
mov
or
mov
mov
add
out
push
add
mov
pop
popf
xor
mov
mov
rolb
mov
mov
sbb
gs
or
fldenv
add
sbb
mov
fstpt
enter
xor
add
xchg
aaa
pop
cld
or
add
sub
mov
lods
pop
xor
mov
into
pop
inc
sub
mov
add
addb
and
mov
cmp
aaa
xlat
aad
out
mov
addb
cmp
cs
sub
add
add
mov
jnp
sbb
loop
mov
mov
andl
and
mov
cmp
dec
or
xchg
add
addb
mov
les
xlat
jp
add
jg
testl
cmpsb
mov
mov
jae
lcall
mov
xor
mov
mov
pusha
add
in
adc
test
cmpsb
mov
mov
mov
addl
mov
fcom
das
push
add
push
sbb
lcall
fimull
int
enter
ds
mov
add
fdivl
rolb
xchg
int3
push
stos
add
inc
add
mov
dec
mov
insl
stos
inc
push
mov
dec
adc
outsl
test
sbb
add
cmp
xor
xchg
adc
insb
jnp
or
rcl
das
cmp
xor
mov
cmc
stc
in
push
out
add
mov
icebp
xor
stos
gs
and
xchg
outsb
inc
addr16
mov
add
out
lret
mov
add
call
add
jecxz
arpl
mov
mov
jmp
mov
cs
push
add
cmpsl
js
jno
sbb
lds
add
add
mov
add
mov
add
mov
mov
mov
jnp
mov
adc
test
dec
and
pop
push
add
mov
adc
dec
sbb
adc
cmp
test
xchg
add
jne
push
insl
sbb
and
add
cmpsb
sub
pop
sahf
mov
adc
sbb
mov
mov
add
mov
xor
jns
test
testl
addb
scas
jle
loop
mov
stos
fsubs
xor
mov
add
testb
push
add
daa
sbb
add
and
jl
mov
jg
sbb
dec
pusha
add
lods
cwtl
xchg
je
in
push
add
mov
push
cmpsl
ljmp
mov
sbb
xchg
popa
mov
add
mov
pop
xchg
mov
mov
pop
les
imul
das
sbb
mov
sbb
aas
xchg
inc
add
fidivl
mov
loope
or
test
movsb
pop
cmp
mov
in
cmp
mov
fs
lret
cli
jl
sub
pusha
add
mov
jb
mov
add
testl
mov
cltd
mov
inc
loop
mov
pop
movsb
adc
mov
insb
lods
into
cmpsl
scas
fs
add
push
arpl
sbb
adc
mov
cmp
lea
inc
repnz
cwtl
cmpsb
adc
mov
mov
add
negb
mov
aas
jb
mov
push
add
mov
mov
adc
add
push
in
mul
add
dec
shrl
add
lods
cmp
rolb
mov
rcl
lds
sti
stos
aas
push
push
cltd
jnp
push
add
cld
test
push
movsb
frstor
imul
mov
mov
mov
lock
add
fstpl
testl
ret
in
cmp
inc
data16
fdiv
add
hlt
inc
mov
cmpsl
in
jnp
sbb
lcall
lods
in
mov
stos
lods
aas
enter
add
mov
pcmpgtd
cltd
mov
lret
mov
jp
sbb
sarl
sbb
xchg
lcall
xlat
pop
xchg
enter
xor
bound
mov
jnp
or
test
add
loop
mov
inc
add
loopne
mov
fsubs
leave
mov
mov
ret
or
or
push
pop
inc
xchg
mov
in
nop
add
ja
sub
mov
call
cmc
jmp
push
add
lods
adc
std
push
popl
mov
addb
push
xchg
add
inc
sub
pop
stos
sti
pop
xchg
lods
imull
add
pop
mov
dec
outsl
inc
add
add
inc
add
mov
cmp
in
dec
pop
xchg
es
jecxz
ja
daa
inc
lods
rolb
mov
test
add
push
jbe
lods
stc
mov
add
add
jmp
or
dec
movswl
fwait
je
loopne
mov
add
aaa
cltd
inc
push
push
push
pop
cmpsb
insb
rolb
mov
adc
and
mov
cwtl
pop
inc
hlt
cld
xor
cltd
fmuls
dec
iret
or
jae
add
or
sbb
insl
inc
cmc
inc
pop
jne
sub
cmp
mov
shr
push
sbb
add
rolb
mov
out
cli
lea
adc
mov
and
add
inc
dec
jbe
mov
xchg
xchg
inc
inc
ret
sub
stos
sti
push
outsb
push
jge
punpckldq
mov
xor
enter
mov
xchg
adc
mov
int3
mov
cmp
aas
inc
cmc
gs
test
sub
sub
adc
add
xor
outsb
xchg
add
mov
add
mov
pop
lret
sub
outsl
stc
rolb
adc
jmp
push
in
mov
pop
cmp
mov
add
xor
in
rorl
stc
push
cmpsl
into
lahf
subl
mov
or
sar
sbb
or
dec
jns
mov
push
addb
cmpsl
dec
fwait
or
add
add
add
add
mov
add
push
cs
xor
inc
and
adc
mov
fldt
dec
pop
js
or
cmp
leave
and
mov
insb
dec
into
out
fldenv
repz
outsb
or
mov
out
sub
add
mov
add
mov
add
xor
mov
sub
mov
es
xor
mov
and
adc
hlt
adc
cli
push
sbb
mov
addb
push
sbb
sub
ret
mov
mov
test
dec
jne
int3
dec
inc
cwtl
jnp
mov
add
mov
dec
lock
add
mov
fimuls
sbb
push
das
andl
mov
repnz
push
pop
pop
popa
inc
push
stos
je
cmp
add
je
add
add
nop
add
mov
fldcw
aaa
and
mov
jno
xor
mov
fmul
popf
pop
hlt
dec
push
pop
jl
xchg
and
mov
add
push
in
adc
mov
add
test
add
add
mov
inc
inc
cli
mov
push
mov
xor
adc
mov
inc
inc
mov
and
push
inc
add
repz
cmpl
add
mov
add
mov
out
dec
jae
jnp
add
mov
adc
push
stos
ss
add
cmp
cmp
mov
add
pop
mov
mov
cs
mov
add
mov
dec
out
add
push
imul
jae
add
ret
dec
and
mov
mov
add
rolb
mull
fistpll
pop
adc
mov
testb
add
out
mov
loope
sbb
add
mov
mov
pop
rcrl
pop
add
mov
sbb
shll
lcall
add
mov
ds
rolb
mov
jns
add
sbbl
adc
add
mov
test
add
mov
test
fisubrs
pop
adc
xchg
data16
movsb
enter
jp
mov
cwtl
insb
in
fadd
inc
xor
pop
sub
or
add
sti
or
add
jno
mov
mov
add
mov
ljmp
add
xor
mov
sbb
out
mov
stc
xchg
add
lds
lods
xchg
mov
fnclex
add
out
addr16
add
sub
mov
mov
mov
adc
mov
add
lock
pop
mov
mov
push
jge
add
cld
jae
add
les
jmp
mov
jae
icebp
mov
stc
nop
add
mov
xchg
sbb
jge
sub
aas
andl
add
jl
add
repz
popa
in
mov
jo
mov
add
mov
sub
and
add
xor
mov
add
int3
test
sbb
xchg
add
add
mov
out
outsb
bound
mov
cmp
lods
dec
xchg
arpl
mov
and
sub
jns
sub
mov
das
arpl
jae
add
pushf
mov
es
insl
inc
add
mov
mov
add
jae
add
in
add
sub
xor
and
mov
jl
and
xor
add
push
out
sbb
adc
add
outsl
xchg
add
pop
jmp
idivl
jbe
das
enter
add
mov
mov
in
sahf
icebp
pop
mov
movsb
jmp
add
mov
add
fisubrl
dec
xor
stos
addr16
mull
cmpsl
cwtl
sub
stos
pop
test
jo
mov
push
inc
inc
sub
bswap
inc
add
cmp
xchg
ret
jl
dec
xor
shrl
xor
mov
test
jns
push
or
outsb
mov
mov
js
or
push
push
ss
mov
xchg
cmp
jbe
cmp
out
inc
fildll
mov
fwait
xlat
jg
sub
cmc
add
mov
add
stc
mov
mov
mov
mov
test
test
pop
jnp
lcall
cmp
aas
mov
push
pop
repz
daa
mov
mov
iret
test
jbe
add
push
adc
mov
add
test
xor
mov
sahf
mov
or
mov
adc
mov
fcomps
inc
cmpsb
add
sbb
mov
into
inc
mov
aaa
jbe
negl
out
add
jg
xchg
test
popf
fadds
fstpt
out
cltd
jne
in
mov
add
scas
jle
jne
jl
and
mov
cmc
mov
push
xchg
leave
fstpt
add
jne
imul
in
xchg
dec
iret
xchg
cmc
cmpsb
inc
cld
sub
lret
aam
add
addb
mov
mov
mov
dec
and
mov
fdivrs
jmp
mov
jl
in
dec
leave
or
pop
cmc
push
out
mov
mov
lods
jns
adc
iret
rorl
mov
mov
test
adc
mov
lret
push
pop
js
std
ficomps
mov
cmp
test
push
cmpsl
stc
imull
mov
add
mov
sbb
add
mov
lods
clc
xor
mov
stos
mov
add
mov
mov
stos
add
cmp
ret
mov
mov
jecxz
pop
lods
xchg
ret
in
pushf
ss
add
mov
mov
add
mov
xchg
or
pushf
jecxz
icebp
push
cmp
add
mov
jb
mov
dec
inc
add
rolb
stos
aaa
mov
xchg
or
out
insb
push
pop
mov
add
jbe
sbb
add
adc
outsb
fisttpl
pop
aam
xor
sub
lods
js
lcall
pop
mov
add
mov
jnp
inc
xchg
adc
mov
cmp
sti
inc
add
add
test
aas
or
nop
add
mov
movsl
mov
xor
mov
add
add
cmpsb
or
popf
nop
add
call
mov
sbb
xor
outsl
sub
add
push
xchg
add
out
push
mov
ja
add
add
pop
shrl
jae
add
sub
sbb
inc
add
fidivs
add
out
sti
and
push
add
addb
pop
jo
mov
xor
jp
mov
xchg
mov
and
add
mov
in
jmp
lea
sahf
orl
pushf
cmpsl
scas
mov
aam
sbb
mov
sbbl
xchg
fisttpl
lds
xchg
adc
mov
xor
out
popf
push
mov
mov
cltd
std
in
jno
xchg
nop
add
ficoml
xor
and
mov
push
int3
rolb
mov
sbb
add
add
sub
das
or
clc
mov
sub
mov
mov
inc
add
and
add
push
mov
mov
clc
insl
and
inc
add
testl
cli
push
pop
sbb
mov
loopne
mov
jle
add
fmul
and
lods
or
fs
mov
add
aad
repz
xchg
dec
xlat
insl
iret
outsl
ljmp
lea
add
dec
xchg
add
inc
into
fs
push
add
push
jae
push
adc
mov
mov
loop
mov
movsl
loope
in
adc
mov
mov
push
rolb
sub
push
ds
add
add
fstps
jg
or
push
call
sub
xchg
cmpsl
fwait
mov
jo
mov
xchg
pushf
xor
mov
call
push
jecxz
adc
mov
add
call
cmp
pop
out
mov
mov
pusha
add
xchg
add
bound
mov
add
daa
push
jg
cmp
insl
lret
inc
je
repz
pop
inc
add
add
cmp
dec
ss
push
js
mov
mov
pop
ja
mov
mov
cmp
mov
sahf
mov
int3
mov
mov
cmc
jne
mov
ljmp
xor
add
jmp
rorl
ror
hlt
sub
jne
rolb
mov
xor
xchg
sbb
inc
add
inc
add
lret
movsl
in
xor
mov
add
loopne
mov
cld
cmp
mov
jp
lock
dec
cmp
xchg
add
jp
pop
addb
jl
add
pop
mov
iret
stc
or
jmp
cmp
scas
daa
or
pop
jo
mov
roll
dec
adc
mov
xchg
add
add
sbb
out
popf
push
lahf
xchg
insb
mov
mov
add
mov
add
xchg
add
mov
and
or
add
add
mov
mov
xchg
xchg
adc
mov
jno
or
add
pop
popa
test
cld
roll
sbb
jo
mov
loop
mov
sti
cmp
std
out
jo
mov
mov
das
cmpsl
popf
mov
xor
add
sub
push
add
pop
cwtl
or
add
jl
cmc
js
shl
add
insl
outsb
movsb
jl
xor
mov
add
mov
pop
adc
add
mov
fwait
jmp
mov
addb
aad
movsl
mov
mov
mov
js
and
rolb
mov
jbe
or
pop
dec
in
fldl
add
fidivs
mov
and
loop
mov
std
xchg
inc
and
xlat
rolb
scas
das
rolb
sbb
add
mov
xchg
addr16
in
dec
xchg
cli
int3
cmpsl
adcl
xchg
adc
add
cwtl
ret
cmpsb
adcl
mov
mov
mov
mov
mov
mov
fidivrl
das
outsb
out
mov
and
mov
add
add
fidivl
jge
pop
fiaddl
pushf
cmpsl
mov
or
add
mov
insb
mov
adc
sbb
add
sub
cmp
add
mov
cmp
and
push
cmp
or
data16
in
jbe
jae
iret
cwtl
bound
mov
lock
add
add
jg
pop
lea
add
dec
loope
dec
int
jbe
sbbl
fwait
dec
jb
mov
mov
out
enter
fwait
and
mov
jl
and
mov
arpl
addb
outsb
inc
mov
mov
lock
mov
lahf
jg
mov
sbb
movsb
pop
sbb
sub
add
sub
cmp
add
scas
rolb
cmp
cli
mov
xchg
das
cmp
add
arpl
add
mov
sub
cld
xchg
mov
xor
aad
addb
lret
movsl
sbb
xchg
add
mov
add
insb
jne
jo
mov
add
lahf
bound
mov
xor
mov
sbb
fcmovne
out
xchg
jno
mov
arpl
lds
dec
sub
stc
cmp
mov
add
aaa
std
sub
daa
inc
mov
mov
mov
add
rolb
mov
mov
repz
sbb
lahf
divb
in
movsb
mov
add
movsl
jg
pop
sbb
adc
adc
add
add
mov
arpl
es
addr16
sbb
dec
add
mov
dec
jbe
xor
hlt
sbb
insl
fistpll
lcall
sub
repnz
adc
rolb
pop
int3
inc
xchg
add
dec
ja
cli
faddp
aam
jo
mov
add
cltd
aas
xchg
and
mov
add
and
mov
mov
aaa
pop
cmp
xchg
inc
sub
cmp
jle
sbb
adc
adc
add
mov
fcoms
into
mov
mov
dec
pop
jmp
mov
fadd
gs
loopne
mov
movsl
mov
inc
add
outsl
sti
push
int3
xlat
lahf
rcr
stos
adc
mov
and
mov
and
mov
or
rolb
mov
sbb
aad
cmp
call
jo
mov
scas
sub
pop
xchg
test
and
or
cli
xor
mov
les
das
and
inc
pop
ret
xchg
sbb
lods
ret
dec
sti
aas
add
mov
repz
aas
push
add
add
sbb
add
mov
mov
add
imulb
bound
mov
lahf
daa
fildl
sub
fists
mov
xchg
add
add
jne
add
inc
add
pop
stc
lds
mov
enter
mov
gs
add
mov
inc
mov
adc
cmovb
mov
mov
mov
ljmp
adcl
mov
pop
inc
test
xchg
and
jl
insb
bound
mov
mov
out
sub
das
cmp
sbb
jae
add
out
out
and
mov
xchg
add
mov
xor
mov
lock
aad
xor
aaa
popa
push
sub
add
mov
add
ret
into
dec
pop
fsubr
lods
mov
mov
adc
mov
cmp
add
outsl
test
add
push
arpl
push
ds
mov
mov
aaa
sbb
imul
sub
cmp
mov
sub
mov
or
xor
mov
sti
sbb
mov
add
add
add
mov
add
cmpsl
cmp
sub
adc
mov
mov
mov
repz
add
lret
lods
outsl
push
inc
dec
int
rolb
mov
addb
dec
lcall
cmc
ja
je
mov
add
test
dec
sub
rorl
out
jle
in
clc
mov
push
mov
pop
andl
and
mov
mov
add
lcall
insb
mov
mov
mov
iret
jns
test
cmp
adc
mov
jmp
pop
mov
jecxz
mov
and
bound
mov
out
lods
cmp
outsb
mov
sub
adc
mov
test
push
and
and
mov
cmp
xor
add
lahf
push
pop
dec
pop
addb
xor
xor
call
mov
scas
cld
gs
in
jl
pop
addb
cmp
aad
icebp
lret
cmc
inc
cltd
lret
add
mov
cmp
jnp
ss
mov
jg
rolb
mov
mov
xchg
add
cmp
shll
les
fldcw
and
and
mov
and
nop
add
jnp
ss
and
add
push
and
mov
clc
clc
insb
daa
sub
add
or
xor
mov
aaa
mov
jnp
cmp
loopne
mov
sub
mov
push
lret
sub
xchg
outsl
dec
mov
int3
test
pop
cmp
sbb
mov
iret
int
scas
js
xorl
mov
lea
mov
and
js
aad
fisubrs
sbb
lea
mov
mov
loope
add
or
in
jmp
add
cmp
jle
push
mov
xchg
sbb
int3
push
sbb
jge
adc
mov
fistpl
addr16
outsb
fnstenv
out
outsl
dec
std
push
jmp
jae
xor
mov
and
repz
pop
pop
xchg
mov
insb
mov
in
mov
mov
mov
cld
out
scas
or
push
inc
add
jp
scas
out
push
jbe
adc
mov
shll
add
xlat
cmc
fiaddl
add
pop
out
sbb
mov
addb
adc
sub
add
mov
dec
jg
ret
or
mov
add
mov
movsl
leave
push
inc
add
add
jge
or
mov
or
pop
pop
inc
inc
sbbl
inc
add
stos
xchg
jne
mul
xor
sahf
cmpsl
pop
les
cld
sub
dec
inc
jns
test
jno
imul
lea
sbb
cmp
mov
mov
testl
or
push
mov
sub
dec
insb
mov
fdivrl
add
dec
push
insb
and
add
stos
jg
add
imulb
add
addb
hlt
mov
pushf
jae
pop
test
sbb
idivb
add
mov
push
xchg
mov
add
pop
push
xor
mov
xchg
jb
mov
rolb
mov
mov
sub
dec
push
lods
pop
push
pop
add
pop
js
pop
cmpsl
mov
leave
sbb
lret
jae
shl
mov
adc
add
mov
add
mov
pushf
test
lods
and
addb
out
frstor
add
mov
mov
iret
sub
test
add
in
cmp
jno
popa
jo
mov
sbb
iret
mov
mov
jle
je
hlt
clc
loop
mov
add
and
clc
repnz
add
push
push
out
cmp
add
sbb
in
repz
add
fwait
insb
and
mov
add
addb
add
leave
xchg
dec
push
add
lea
movsl
addb
dec
jne
mov
pop
test
cs
and
mov
or
xor
lods
jle
xor
mov
mov
add
into
and
xchg
add
mov
mov
mov
and
mov
and
adc
mov
int3
and
in
sub
rol
add
sbb
push
or
sub
and
mov
mov
popa
mov
jnp,pn
jns
add
cmp
das
xchg
add
xchg
add
aaa
jo
mov
jp
in
rolb
mov
cmp
adc
mov
lods
mov
mov
fisttps
enter
push
add
sahf
lahf
addb
dec
repnz
sub
sbb
repz
daa
ret
dec
mov
out
mov
mov
insl
jb
mov
out
dec
sub
mov
xchg
xchg
stos
in
cmp
lret
mov
mov
movsl
testb
adc
add
punpcklwd
ss
fsubl
lret
adc
adc
mov
iret
push
pop
pop
movsb
ret
mov
xor
xchg
mov
add
push
or
xchg
jge
sbb
cmp
mov
mov
mov
sbb
jmp
add
fsubrs
lds
mov
or
iret
nop
add
hlt
pushf
push
cmp
outsb
lret
movsl
sub
icebp
mov
mov
inc
add
mov
push
insb
test
popf
fdivr
push
arpl
add
ss
nop
add
mov
pop
sbb
sti
push
imul
aad
adcl
sbb
fwait
out
cwtl
jne
cmp
add
add
out
in
sti
repnz
std
nop
add
jae
adc
cmp
iret
add
add
jb
mov
repnz
mov
dec
xorl
push
mov
push
in
xor
cwtd
pop
call
jnp
add
cmpsl
jmp
sub
push
iret
insl
jp
mov
add
pop
in
xor
mov
leave
xchg
add
and
mov
sub
lods
jmp
sub
gs
push
jmp
add
mov
fidivrl
mov
pop
push
stc
xor
mov
ficoml
push
or
mov
push
add
rolb
ds
and
sti
loop
mov
mov
jnp
rolb
cmc
add
push
outsl
hlt
icebp
roll
and
add
add
rolb
mov
cmpsb
movsb
test
cmpsl
jbe
dec
pushf
push
mov
rolb
mov
lret
fsubs
xlat
mov
rolb
fiaddl
ret
xor
mov
mov
xchg
cmp
and
jmp
add
mov
sub
add
cmc
inc
rolb
mov
add
push
je
out
int
mov
leave
pop
push
mov
inc
push
outsb
xlat
pusha
add
hlt
xor
mov
and
mov
add
enter
iret
imul
adc
mov
pcmpeqb
fcoms
out
outsb
jno
fisubs
fwait
add
mov
movsb
mov
jmp
cmpsl
pop
cmpsl
push
adc
mov
add
fwait
lods
pop
sti
iret
xchg
push
add
sub
mov
add
jge
add
test
jnp
lcall
push
je
cmp
jmp
addl
sub
outsl
jb
mov
mov
dec
lcall
or
pop
push
cltd
das
inc
pop
adc
mov
add
out
movsb
in
add
mov
push
add
inc
icebp
jns
insl
xor
add
fimull
add
mov
loop
mov
jp
into
addr16
add
in
mov
subl
add
es
push
add
aad
mov
iret
inc
test
pcmpgtb
sub
addr16
sub
inc
add
rolb
mov
ret
and
cmp
daa
mov
int3
adc
mov
es
push
outsl
xlat
arpl
mov
cmp
add
mov
mov
mul
add
fldt
iret
icebp
repz
sub
inc
scas
sub
mov
test
xor
dec
xchg
in
mov
xchg
jle
imul
add
ja
int3
dec
pop
scas
push
mov
cs
add
mov
sti
adc
jb
mov
jecxz
push
je
sbb
adc
mov
in
rdtsc
dec
xchg
mov
mov
xchg
inc
add
bound
mov
inc
mulb
fucomp
gs
int
test
in
enter
sbb
mov
jmp
pop
sti
mov
lods
and
mov
stos
jno
stos
or
mov
and
mov
int3
pop
or
test
add
dec
repnz
add
sti
std
divb
insb
scas
jg
or
add
or
add
add
pop
nop
add
pusha
add
add
fsubs
add
shll
pop
jmp
inc
sbb
cmp
xchg
adc
add
sahf
call
mov
mov
fnstcw
mov
pop
in
cwtl
or
sahf
dec
push
outsw
outsb
das
in
jmp
inc
pop
and
out
add
mov
addb
and
mov
push
adc
add
mov
scas
sbb
pop
lds
lods
pop
cmpsl
xchg
imul
mov
mov
roll
mov
cld
sbb
ret
sahf
inc
add
hlt
lret
and
fwait
lret
inc
call
stos
sub
mov
sub
iret
fistps
jb
mov
adc
dec
lcall
mov
imul
mov
xchg
cmpsl
xchg
add
enter
je
movsb
inc
inc
dec
push
push
inc
test
xor
jp
xchg
repnz
add
dec
sbb
cmp
dec
push
add
mov
pop
mov
cwtl
mov
aaa
inc
popf
loope
fnstsw
std
adc
add
mov
add
add
test
jo
mov
mov
shl
iret
push
dec
and
push
add
and
lahf
mov
add
add
mov
pop
sbb
mov
xchg
cmp
sub
mov
or
xchg
jge
idiv
lods
test
clc
fstps
int3
in
sahf
pop
lods
mov
frstor
jecxz
push
popf
ss
stos
pop
jge
mov
mov
call
sti
mov
ret
loope
jo
mov
mov
add
xor
xchg
jp
movsl
sub
add
mov
xchg
xchg
add
jg
cmpsl
dec
leave
mov
push
mov
jb
mov
adc
mov
jmp
dec
jle
popl
push
add
push
jle
xor
mov
add
push
stos
mov
mov
jecxz
pop
sub
into
call
mov
sub
int3
test
sbb
add
cli
cwtl
adc
mov
fsts
mov
add
push
ret
mov
xlat
mov
mov
out
adc
mov
call
sub
add
mov
sub
lock
sbb
inc
add
mov
adc
mov
push
jb
mov
add
mov
or
dec
add
mov
test
int3
xchg
add
mov
inc
mov
fsubrl
iret
rolb
mov
push
xchg
push
ja
rolb
mov
cli
add
mov
and
fsubs
pop
sub
call
add
mov
js
or
iret
mov
in
outsl
or
mov
popf
popf
or
sub
out
ret
jb
mov
sub
outsb
mov
adc
add
add
add
cmpsb
dec
xor
inc
dec
ret
stc
das
jnp
ret
mul
imul
dec
pop
jb
mov
les
mov
mov
std
das
aaa
es
or
daa
ud2
ja
pusha
add
stos
mov
sbb
in
push
add
mov
mov
mov
movb
and
adc
mov
dec
xor
mov
and
aad
add
adc
in
addr16
test
loope
shll
jecxz
jns
imul
add
or
iret
jg
add
pusha
add
stc
std
sti
pushf
and
mov
out
fs
das
icebp
xor
mov
xor
mov
and
jecxz
adc
jae
mov
mov
add
add
push
loope
jp
scas
rolb
mov
mov
repz
or
sub
add
inc
test
icebp
adc
sub
std
rcll
xor
mov
push
adc
mov
add
sub
stos
loopne
mov
sub
add
push
push
outsb
pop
fcoms
push
iret
and
lahf
mov
outsb
stc
in
inc
jp
es
sti
cld
imul
add
addb
mov
addb
enter
mov
aas
cli
mov
repnz
inc
pop
out
and
add
aas
into
movsl
pushf
xchg
jecxz
xlat
idivb
mov
loopne
mov
nop
add
jmp
add
pop
pop
xchg
aam
add
aam
xlat
jmp
ss
sbb
mov
jmp
jae
add
adc
add
add
imul
jmp
imul
in
push
out
hlt
es
movsb
je
add
lods
fst
push
push
sub
jmp
cmp
bound
mov
int3
outsl
sbb
test
dec
or
add
movsb
or
dec
mov
repnz
add
jle
and
add
insl
gs
cmp
add
add
dec
adc
mov
popa
in
pop
jp
aam
pop
inc
test
cwtl
mov
mov
in
lods
push
mov
xor
cmp
mov
and
std
sbb
pusha
add
shl
add
call
ljmp
and
enter
add
test
ret
push
fwait
jns
xchg
add
mov
mov
loope
add
add
sbb
repz
test
xor
mov
sub
into
sbb
mov
mov
mov
mov
sub
mov
aam
mov
fistps
in
sbb
jbe
cmp
rolb
mov
push
test
sbb
add
mov
add
mov
dec
roll
push
fsubrl
sbb
push
in
mov
mov
stos
jo
mov
sti
jle
jmp
outsl
das
test
add
jmp
cmp
dec
test
add
add
xchg
inc
mov
aad
add
sub
ds
int
push
add
adc
xchg
xchg
mov
cmp
dec
fisttpll
pop
dec
cmp
lods
jecxz
test
add
xchg
mov
addb
pop
sub
leave
jo
mov
arpl
idivl
mov
mov
add
mov
cmp
hlt
std
out
and
xor
dec
sub
xchg
cmpsb
dec
aad
push
mov
add
ja
loope
repnz
ret
rolb
mov
push
dec
mov
cmp
adc
dec
dec
add
call
mov
push
inc
loopne
mov
stos
loope
add
jb
mov
call
jl
rolb
mov
xor
mov
pop
xchg
imull
mov
fistl
jmp
add
mov
js
fs
lret
pop
rolb
cltd
in
jne
mov
dec
push
das
es
add
mov
fsubrs
jnp
scas
clc
jbe
fs
mov
mov
and
jbe
add
movsb
sarl
nop
add
mov
mov
sbb
or
iret
pop
clc
push
add
mov
jmp
sbb
pop
in
jl
cmpsb
jns
addb
xchg
ds
inc
mov
cmp
inc
out
loope
add
adc
mov
add
notb
mov
data16
cli
fwait
rolb
mov
cmpl
cltd
jbe
fistpl
rcll
inc
push
add
mov
xor
add
mov
add
bound
mov
cwtl
sub
sbb
faddl
rcrl
pop
in
pop
popf
fistpl
add
mov
pop
ljmp
add
add
mov
add
pop
fdivrl
lret
add
add
cmp
inc
add
rolb
mov
inc
pushf
leave
das
jecxz
cld
mov
js
inc
rolb
mov
or
data16
into
add
push
mov
push
addb
fbstp
add
jbe
mov
out
and
cmpsl
jg
cmc
fwait
adc
xor
mov
jne
add
cmp
