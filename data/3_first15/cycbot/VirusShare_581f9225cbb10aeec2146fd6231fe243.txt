clc
or
dec
push
mov
popf
add
aaa
fwait
fwait
sub
rolb
mov
lret
add
daa
jg
jecxz
test
imul
dec
repz
aam
enter
lds
mov
and
mov
mov
xlat
mov
leave
loop
mov
mov
add
int
add
in
jl
adc
mov
add
cs
scas
push
dec
sbb
dec
sbb
push
add
push
push
adc
leave
push
rolb
add
mov
add
add
sub
mov
addb
add
mov
movsl
inc
add
mull
ret
mov
adc
add
xchg
add
add
add
mov
mov
xchg
add
jge
testb
or
or
scas
pop
cltd
std
push
add
add
fcompl
call
fistl
add
pusha
add
ffree
in
addb
or
mov
add
mov
add
mov
ljmp
add
and
adc
stc
push
add
mov
stos
mov
add
add
les
sarl
rolb
mov
adc
add
pop
out
mov
imul
shll
mov
ja
add
cmc
data16
jo
fiaddl
mov
add
in
mov
sbb
mov
push
add
adc
push
push
imul
pop
inc
add
add
and
inc
adc
add
add
push
jne
pop
mov
loopne
out
call
adc
push
add
add
or
cmp
out
rcrl
add
lock
inc
add
add
out
xor
lahf
sub
imul
lock
sbb
mov
cmp
adc
pop
js
xchg
add
loope
repz
cltd
mov
add
je
xchg
stc
pop
mov
mov
add
sub
cmp
pop
lcall
bound
mov
fildl
cmp
sub
or
pop
in
ds
lret
cmp
add
mov
xchg
dec
pop
mov
int
ljmp
cmpsb
add
lahf
add
mov
mov
add
inc
add
sbb
add
add
mov
sti
scas
xchg
mov
mov
mov
jo
data16
add
add
add
int3
lds
push
repnz
xlat
cmp
into
and
aas
inc
iret
mov
les
xlat
cltd
inc
mov
mov
mov
stos
mov
mov
add
in
js
addb
add
inc
add
rolb
mov
add
inc
add
aam
add
add
mov
jne
mov
pop
call
cmp
aam
bound
mov
add
add
shr
push
add
cmpsl
test
dec
sub
loope
stos
jle
jbe
cld
push
add
stos
cmpsb
add
add
mov
add
xor
push
add
xor
mov
mov
sub
add
repnz
jno
cltd
movsb
add
add
and
cs
pop
movb
popf
aas
sub
add
mov
cmp
pusha
add
mov
rep
cmp
add
jns
outsb
xlat
push
add
push
pop
or
int3
mov
cli
or
aas
pop
imul
add
mov
add
add
add
add
add
sub
adc
iret
sbb
add
xchg
add
je
mov
add
and
data16
mov
mov
pop
xlat
shll
das
xchg
add
add
pop
add
ds
xchg
dec
mov
mov
dec
sahf
or
mov
add
add
lret
add
add
mov
cltd
jl
jb
adc
add
jmp
inc
add
add
add
add
sbb
gs
inc
pop
pop
pop
push
add
mov
mov
add
lds
add
add
add
lcall
push
and
mov
rolb
add
scas
sbb
cli
adc
add
or
shrl
add
add
add
add
insl
rolb
rolb
xchg
and
mov
in
pop
sarl
mov
xchg
xchg
repz
jle
add
pop
push
sbb
xchg
cmc
and
movb
test
daa
push
or
xchg
or
add
call
or
das
add
inc
add
movsb
add
sbb
add
add
pop
cmpsb
add
subl
mov
push
lret
mov
inc
add
push
mov
leave
mov
sub
add
or
inc
jne
jecxz
and
mov
leave
nop
add
add
add
add
add
add
add
mov
add
add
jl
fadd
add
fnstcw
pop
adc
aad
sbb
mov
loope
xor
pushf
and
mov
pop
testb
add
lock
add
mov
pusha
add
mov
cld
pop
loopne
fdivp
add
mov
outsl
pop
adc
je
and
add
insl
mov
add
add
add
ret
or
jb
movsl
ja
mov
sub
add
inc
mov
jno
aaa
mov
inc
scas
inc
add
nop
add
add
in
jecxz
orl
push
push
add
mov
mov
int3
mov
loopne
scas
inc
pop
pop
dec
jmp
mov
sahf
pop
jecxz
or
cwtl
jl
add
add
cmp
mov
add
addl
pop
dec
push
add
out
xchg
mov
add
iret
inc
add
sbb
add
dec
and
mov
lock
add
mov
push
xchg
add
mov
add
sbb
jae
js
add
mov
add
addb
stc
xor
push
add
loopne
and
mov
add
inc
add
add
daa
add
sub
or
nop
add
aam
rolb
pop
ja
add
xor
add
lret
or
jo
ds
push
add
imul
movb
cmp
add
add
fbstp
subl
add
add
insl
daa
mov
dec
addl
popf
jnp
add
or
add
mov
faddl
call
bound
mov
xorl
jb
pop
mov
repnz
add
ljmp
mov
xchg
add
add
mov
loope
push
add
call
sub
enter
or
add
movsl
sbb
mov
push
add
dec
mov
add
std
rolb
sub
cmp
loopne
adc
cmp
jmp
add
rolb
leave
ds
repnz
leave
xor
xchg
insb
xchg
pop
adc
push
add
xor
jne
addb
imul
int3
add
aam
shl
jns
push
push
lock
mov
movb
add
aaa
jecxz
pop
cwtl
dec
addb
sbb
xchg
rolb
lods
call
cmp
add
inc
add
add
int
push
add
sub
and
xchg
pop
inc
xchg
add
in
xor
mov
adc
add
loopne
pop
enter
xchg
in
enter
jle
add
add
jae
cs
inc
add
dec
aad
add
add
mov
mov
inc
jb
xchg
jle
cs
fisubrs
out
sbb
jo
and
sub
jbe
add
mov
push
mov
sahf
dec
sub
mov
ret
sub
add
cmp
add
dec
xchg
add
lret
sbb
daa
add
push
sbb
xchg
add
fistpl
mov
add
dec
stos
xchg
add
cmp
sbb
addr16
sbb
mov
jns
dec
inc
add
in
test
scas
mov
jp
add
add
push
add
push
add
add
inc
sbb
incl
inc
add
dec
ljmp
data16
lcall
ficoml
rolb
add
push
imul
jmp
rolb
in
jae
add
xchg
jno
add
add
in
add
jle
out
jo
mov
cmp
mov
outsl
jmp
mov
scas
aaa
pop
push
add
jns
test
or
mov
aad
lea
add
mov
jge
add
and
mov
addb
lods
adc
xor
mov
sub
add
add
add
in
inc
add
and
add
lcall
add
out
jno
cmp
mov
mov
add
mov
das
sti
cmp
xor
aad
or
insb
jle
ret
popf
repz
adc
xor
sub
add
add
add
add
testb
test
dec
movsb
add
mov
cmp
imul
inc
add
add
push
adc
cli
inc
inc
inc
add
pop
mov
jle
or
add
dec
in
push
add
xor
add
scas
jle
mov
int
out
jmp
xor
cmp
add
pop
lods
addr16
jp
add
add
xor
mov
js
push
add
add
jg
add
or
das
daa
mov
add
scas
fnsave
insb
and
cmp
adc
push
and
dec
mov
int
push
add
add
dec
push
adc
add
mov
or
cltd
dec
rolb
testb
in
xchg
add
mov
insl
popa
jmp
add
add
rolb
add
add
mov
adc
test
fistps
pop
xor
xchg
push
mov
xchg
add
lea
xchg
add
add
addl
cmp
xchg
add
lods
les
movsb
add
sub
or
pushf
sbb
add
add
add
fsubrl
fcmovb
add
rorl
mov
mov
xchg
add
je
hlt
add
popa
cs
test
fldln2
cmpsb
add
push
add
add
mov
in
push
add
mov
mov
push
add
dec
mov
mov
rolb
pop
insb
and
mov
mov
dec
and
mov
jecxz
add
add
idivl
out
mov
or
push
rolb
add
add
cmp
mov
nop
add
ja
rol
dec
cmp
add
sub
repnz
mov
add
add
add
shll
add
mov
rolb
rolb
ret
dec
mov
leave
mov
add
lret
lcall
pop
and
mov
mov
popa
inc
add
add
add
add
or
adc
xor
and
mov
or
add
mov
fwait
dec
sbb
addb
rolb
in
das
pop
push
push
stc
jle
add
xchg
fldenv
add
fidivs
rolb
loop
cltd
adc
add
mov
test
and
inc
idivl
arpl
xchg
inc
add
sub
add
ds
push
fwait
mov
add
push
add
add
add
add
dec
test
add
mov
xchg
add
loopne
daa
sti
sbb
jb
dec
xchg
adc
rolb
js
jno
jbe
pusha
add
add
cwtl
int3
pushf
nop
add
mov
add
ret
inc
test
cli
adc
xchg
add
adc
sub
add
mov
out
jns
int
adc
in
cmp
mov
jb
movsb
add
sbb
add
add
push
add
add
jne
adc
mov
into
jb
dec
imul
add
je
inc
mov
add
mov
add
test
push
add
fst
adc
imul
inc
add
out
rolb
lods
xchg
add
stos
push
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbw
cmp
ss
lea
push
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
pop
insl
scas
cmpsl
mov
add
mov
dec
adc
test
dec
cmpsb
add
testb
add
mov
adc
test
sahf
std
mov
add
test
movsb
add
cmp
add
dec
mov
out
incb
add
adc
mov
les
add
movsl
lods
pop
dec
adc
and
mov
mov
mov
xchg
orl
loope
inc
add
add
js
faddl
rolb
lret
mov
sub
in
cwtl
hlt
add
pop
and
add
repnz
fldenv
movsb
add
hlt
add
mov
enter
jbe
mov
add
add
mov
jg
add
push
jg
lea
add
add
mov
shll
fxch
cmp
push
add
bound
mov
cld
repz
add
sub
jae
inc
inc
adc
fwait
sbb
lock
add
add
add
lock
mov
mov
or
fstps
movb
or
stc
sbb
loopne
cmp
dec
mov
xchg
dec
jl
push
add
inc
loopne
push
cmp
gs
xor
add
mov
jo
test
scas
sbb
nop
add
mov
cli
cmp
add
movb
imul
push
add
add
pop
aas
movsl
ja
data16
mov
push
outsl
adc
les
pop
sahf
lcall
decb
scas
sub
js
nop
add
xlat
hlt
add
add
cwtl
data16
jmp
call
add
xor
test
ljmp
cltd
add
push
add
daa
les
push
add
and
mov
aad
mov
mov
add
add
lods
mov
add
add
jo
daa
push
add
loopne
loop
jge
mov
push
xlat
push
mov
stc
jbe
adc
xchg
add
cmp
mov
add
add
mov
sub
add
xchg
add
add
sahf
cmp
insb
mov
add
or
or
bound
mov
mov
cmc
mov
push
add
inc
xor
xchg
add
add
loop
jmp
mov
add
mov
push
repz
xchg
mov
add
sub
je
add
push
xor
push
xchg
add
jno
cmp
rolb
mov
add
data16
dec
sbb
imul
lret
xchg
add
mov
gs
add
add
insl
hlt
add
lea
pop
push
xchg
out
js
xchg
mov
push
shl
add
mov
add
add
push
add
cltd
xor
outsl
or
xchg
adc
std
adc
push
add
push
int3
inc
add
loop
sbb
add
add
add
cli
ret
mov
mov
xor
push
xor
sbbl
add
add
xchg
inc
add
or
add
inc
xor
rolb
push
add
pop
jb
jecxz
add
cmp
add
push
add
add
add
fsts
in
pop
cmp
add
shll
xor
pop
stos
sahf
pop
hlt
add
xchg
or
add
mov
add
insl
outsb
push
add
and
inc
xchg
push
imul
or
add
add
jmp
mov
jae
add
add
push
pushf
into
pop
cs
add
iret
push
loope
add
add
add
add
pop
outsb
sahf
cmpsb
add
push
es
mov
sub
dec
push
add
sti
push
lea
mov
ljmp
or
into
hlt
add
mov
add
test
add
add
test
push
xor
fbld
out
and
mov
outsb
dec
jmp
adc
loope
fwait
pop
cmc
roll
dec
repnz
arpl
xchg
outsb
out
add
add
mov
cmp
ficompl
add
mov
jbe
lods
int
add
push
lcall
jno
add
add
add
cmc
ficomps
ret
cmp
je
sbb
push
add
add
rolb
push
cmpl
inc
add
stc
push
cmpsl
mov
adc
adc
add
add
sbb
dec
fistpll
pop
inc
xchg
push
outsl
xchg
add
iret
pusha
add
mov
out
adc
jmp
add
xchg
enter
adc
push
inc
add
add
je
sbb
add
dec
rolb
and
aaa
sbb
jns
bound
mov
test
dec
loope
add
jns
pop
popf
mov
add
or
cld
arpl
mov
sbbl
in
lret
ret
jns
mov
cwtl
lds
xor
iret
push
push
bound
mov
ja
add
add
push
add
out
adc
add
sbb
out
sahf
dec
lock
test
add
add
mov
jmp
lret
out
add
ret
lds
add
cmp
insb
adc
add
add
push
jno
outsl
cmp
cs
jl
cs
cmc
sbb
sub
jns
add
insl
cs
imul
arpl
add
sub
mov
aas
pop
mov
and
mov
add
lods
cmp
mov
xchg
sub
add
test
dec
bound
mov
dec
pop
jbe
pop
inc
cs
sub
ret
jmp
icebp
sub
jno
add
mov
mov
adcl
jp
lods
xor
xor
xchg
add
add
fcompl
out
xor
add
xchg
dec
in
add
add
add
add
add
add
add
sbb
test
out
or
push
test
add
mov
jbe
sbb
mov
icebp
movb
pop
addb
or
pop
inc
add
pushf
push
or
add
add
pop
in
add
xlat
movb
jl
add
add
addb
add
mov
mov
add
inc
add
add
sarl
sub
mov
sub
fidivrl
push
add
jl
add
add
push
add
scas
add
mov
add
add
lret
push
add
dec
pushf
dec
push
add
lea
mov
repnz
add
push
add
add
pop
push
rolb
or
icebp
cwtl
push
rol
add
cmp
inc
add
xor
lahf
xchg
sbb
lds
add
add
addb
out
int3
lcall
lret
dec
inc
add
fidivrl
add
roll
xchg
dec
and
mov
add
pop
aaa
hlt
add
test
lret
add
loope
push
add
add
je
jne
aaa
dec
mov
in
mov
jb
repz
addb
add
lods
mov
mov
les
inc
add
xchg
fidivl
or
adc
pop
inc
and
pop
iret
gs
cld
lret
jle
jp
ja
xchg
add
addb
stos
out
add
push
adc
xchg
add
adc
add
add
add
insb
rolb
jp
push
add
add
add
or
add
add
dec
lods
js
push
add
std
fistpl
add
add
mov
mov
add
rorl
add
call
mov
adc
pusha
add
je
clc
movsl
loope
add
add
add
sub
push
jo
mov
or
jle
xor
pop
fwait
aad
and
mov
xchg
push
add
sti
data16
pop
xchg
add
xchg
jg
and
mov
cmc
mov
fldl
dec
pop
mov
cmpsl
or
mov
mov
xchg
add
jnp
mov
rolb
mov
add
std
jns
popa
pop
dec
addb
addr16
inc
mov
jnp
add
cmp
scas
dec
inc
stos
hlt
add
xchg
daa
inc
add
imul
test
add
inc
scas
push
add
add
and
add
jp
add
adc
inc
add
add
add
int
xchg
icebp
push
add
add
in
ror
add
jg
pop
sbbl
cmp
jnp
add
pop
push
mov
fdivrp
push
add
pop
and
out
daa
dec
inc
pop
cmp
pop
pop
insl
ret
gs
dec
inc
add
cmpsl
rolb
pusha
add
mov
pop
scas
jb
outsl
mov
fnstsw
jns,pn
push
pop
pusha
add
bound
mov
push
add
mov
icebp
add
push
jmp
mov
dec
push
dec
or
mov
jle
jnp
out
iret
sbb
movsb
add
add
stos
xor
add
call
cmp
mov
xor
or
push
mov
dec
adc
dec
mov
lods
inc
add
add
in
sbb
ror
jnp
push
xchg
addb
add
and
fistpll
pop
shrl
outsl
ja
adc
xchg
popf
aaa
cmp
test
add
cld
inc
add
lods
xor
imul
add
add
push
add
xor
add
push
mov
pushf
push
jo
filds
jg
movsl
pop
imul
add
add
add
and
mov
or
add
insb
adc
xor
add
push
add
mov
or
add
sarl
jo
leave
ds
add
bound
mov
push
in
mov
sub
cli
jle
mov
add
inc
mov
and
ret
adc
dec
sbb
xchg
add
mov
movsl
rcrl
in
pop
arpl
out
repnz
inc
add
jno
adc
test
repz
arpl
repnz
add
mov
pop
enter
outsb
pushf
jae
fstpl
movsb
add
add
sub
sub
jbe
mov
xor
mov
test
push
fnsave
dec
arpl
xchg
call
add
inc
add
xchg
add
mov
inc
add
add
xchg
sub
add
mov
test
push
xchg
lret
push
or
fidivl
add
or
mov
sbb
jg
add
add
mov
push
pop
and
jbe
in
and
mov
pop
xor
xchg
ret
stc
inc
add
add
mov
add
jp
movb
rcrl
xchg
add
add
test
add
sbb
add
cltd
sbb
movsb
add
subl
xchg
add
mov
fisttpll
xchg
imul
or
fwait
cmpl
mov
cld
in
add
add
jecxz
add
pop
scas
push
pop
jg
jnp
sbb
mov
xor
mov
test
movsl
push
push
add
add
dec
pop
xor
lock
adc
in
xor
adc
and
dec
scas
pop
rolb
dec
das
push
ret
mov
out
loopne
add
pop
addl
add
add
add
test
rolb
test
xchg
xchg
fdivrp
jo
int
or
add
add
cmp
add
pop
pop
inc
jmp
loopne
int
add
add
inc
add
inc
lahf
out
outsb
out
push
lcall
decb
add
mov
add
and
add
add
mov
les
adc
add
shr
push
push
mov
fsubrs
mov
bound
mov
stos
in
add
push
add
mov
add
ja
jb
pop
mov
aam
fildl
add
mov
cmpsl
out
ljmp
add
cmp
les
int
add
adc
mov
stos
sub
clc
dec
adc
push
add
and
aaa
jmp
jno
out
insb
outsb
rolb
sub
xchg
jo
addb
mov
add
push
mov
add
in
fwait
inc
add
pop
iret
and
outsl
add
pop
add
add
add
imul
inc
rolb
mov
test
jnp
and
in
aaa
push
sbb
add
add
mov
add
out
in
or
sub
jno
daa
push
frstor
les
enter
testb
mov
push
add
add
inc
cmp
fisttps
ds
outsl
xchg
test
popa
data16
or
or
stc
in
lds
push
add
addb
into
sub
js
add
add
mov
xchg
add
mov
leave
fcmovb
pushf
xchg
loope
add
sahf
pop
scas
ret
mov
add
add
sub
lcall
add
rolb
push
add
outsl
stos
cmp
mov
xlat
add
lea
adc
mov
std
sub
pusha
add
test
js
mov
lods
push
aam
add
add
xor
repnz
nop
add
push
and
lods
data16
loopne
push
mov
test
fiadds
mov
test
sub
add
add
addr16
add
pop
adc
add
outsl
loop
jg
hlt
add
add
std
les
xchg
cwtl
push
dec
std
frstor
mov
xor
pop
mov
pop
mov
cmp
mov
add
adc
nop
add
repz
add
addr16
mov
call
lret
or
insb
sti
repnz
das
aad
xchg
adc
mov
cld
imul
push
push
add
add
mov
out
add
cltd
hlt
add
scas
pop
jno
outsb
movsb
add
push
je
inc
add
outsl
std
rolb
sub
movsb
add
add
mov
pop
das
mov
inc
mov
add
jbe
or
mov
adc
push
sbb
mov
mov
imul
sbbl
mov
sahf
test
js
push
add
int3
inc
insb
jae
push
or
rolb
data16
mov
or
cmpl
insb
addb
xor
add
push
rolb
dec
sub
add
mov
les
adc
lea
adc
aam
dec
jbe
inc
jns
stos
aas
jl
cmp
inc
mov
push
rolb
and
imul
popa
test
mov
or
add
mov
test
nop
add
in
jg
add
xchg
jmp
cmp
fsubr
fnstenv
pop
sub
or
aas
mov
mov
push
orl
es
xor
sahf
push
pop
jbe
inc
add
mov
out
add
add
jb
inc
add
add
add
jmp
add
pushf
xchg
int3
imul
mov
add
cwtl
adc
movsb
add
mov
add
ljmp
mov
add
xchg
sahf
int
int3
sbb
add
xchg
sub
in
inc
add
mov
push
add
movsl
sbb
add
sbb
jne
aad
iret
sub
push
pop
in
adc
lcall
fidivl
add
add
add
mov
add
mov
hlt
add
add
sahf
cltd
inc
add
iret
inc
add
add
fildl
popf
mov
daa
call
or
mov
mov
jmp
add
add
mull
add
stc
and
add
push
mov
add
cwtl
or
in
inc
add
repz
adcl
outsl
xor
add
xchg
xchg
add
int
add
add
fucomp
fcoms
punpckldq
mov
sbb
add
jno
add
xchg
add
pop
stc
push
add
add
cmp
dec
sbb
imul
add
adc
lock
add
fwait
push
add
imull
int3
add
cltd
lea
hlt
add
add
cltd
fisubrs
leave
lahf
xchg
add
add
fildl
mov
stos
jns
pusha
add
fstl
sar
jl
add
add
add
repz
test
xchg
add
pop
data16
add
mov
add
mov
cmp
pop
daa
ret
jnp
into
push
jne
lret
add
imul
push
push
add
add
out
add
cmpsb
add
adc
add
addb
frstor
push
xor
femms
stc
adc
inc
add
or
mov
add
insb
cmp
add
mov
pop
mov
add
jns
add
test
scas
leave
dec
ret
testb
xchg
add
mov
stos
cli
add
adc
je
in
enter
pop
xlat
cmp
dec
jae
add
add
test
cmp
pop
in
out
xlat
adc
nop
add
add
sub
test
jo
jg
add
add
int3
test
iret
mov
outsb
nop
add
das
mov
jae
add
test
movl
iret
push
add
add
add
add
add
insl
or
pop
sbb
jb
cmp
or
adc
test
adc
sti
push
cwtl
shr
fwait
mov
jl
test
mov
addb
xor
add
fistps
in
adc
outsb
and
mov
xchg
add
add
in
xor
mov
roll
mov
add
movsl
insb
lods
rolb
popa
aas
xchg
nop
add
std
enter
add
xor
jg
mov
dec
jae
add
daa
fnsave
movsb
add
add
loop
add
jae
mov
cmp
loope
push
add
sub
adc
sbb
add
jae
lods
lods
mov
mov
add
adc
pop
in
pop
push
addb
test
movb
lock
mov
mov
rolb
fisubrs
add
jl
jno
dec
adc
cmp
xchg
addb
cmp
or
xchg
dec
test
adc
jmp
pop
jecxz
sti
pop
sbb
mov
add
test
jo
in
ret
data16
les
cmc
dec
add
lea
or
push
add
das
sbb
pop
loop
add
mov
xchg
add
push
stos
xchg
pop
arpl
rolb
mov
jg
mov
loop
push
add
add
call
fsubrl
adc
add
and
add
daa
fstl
pop
test
add
push
cmp
add
sub
data16
test
xlat
imul
inc
jno
mov
adc
or
arpl
pusha
add
xchg
add
mov
call
add
stos
add
lods
pop
loop
dec
mov
aaa
and
mov
xchg
jno
add
add
mov
add
add
inc
add
cmp
nop
add
mov
mov
add
pushf
mov
cmpsl
daa
xor
add
test
cmp
add
sub
insl
leave
jno
lcall
addr16
rcrl
inc
add
pop
jnp
add
loop
test
sub
xchg
add
add
lods
jne
add
lods
push
add
in
adc
mov
or
inc
lods
lods
in
jge
icebp
lds
repz
add
imul
add
imul
add
cli
movsb
add
mov
and
mov
add
add
repz
add
or
add
inc
les
mov
mov
inc
add
dec
sub
add
loop
pop
dec
enter
dec
push
pop
adc
pop
rcll
add
xor
movb
add
xor
add
sub
inc
mov
add
add
inc
sti
xor
mov
mov
les
inc
fstenv
iret
xchg
jmp
add
dec
imul
sub
cmp
addb
pushf
pop
jmp
add
mov
or
or
add
mov
sub
sub
lret
add
jle
add
push
sbb
add
add
add
dec
pop
jecxz
xor
cmp
add
mov
adc
mov
mov
add
in
add
add
add
out
add
mov
fists
rolb
mov
sbb
or
add
mov
addb
sti
mov
add
mov
mov
add
add
jb
popa
xor
add
loopne
ficoms
add
adc
cli
mov
out
add
xchg
add
mov
les
lods
mov
mov
add
mov
inc
add
addl
ret
add
lahf
pop
push
add
mov
jno
inc
cltd
arpl
xor
shll
and
testb
popa
xor
add
push
add
add
add
adc
rolb
lods
xor
pushf
rolb
dec
and
and
cmp
into
lock
push
add
xchg
add
add
xlat
push
imul
lods
xorl
add
adc
jns
lcall
shrl
shll
add
xor
movb
jnp
loope
add
add
pop
push
add
add
sub
inc
add
xchg
add
dec
ds
je
fistps
dec
imul
jbe
fwait
xchg
mov
in
data16
or
dec
sub
jl
test
add
lcall
addr16
jo
jo
outsl
cwtl
in
xor
lcall
sub
sbb
inc
add
jl
add
add
jno
add
add
add
add
xor
xchg
mov
bound
mov
add
add
add
add
add
sbb
add
fsubrl
icebp
dec
mov
add
mov
and
mov
xor
cmp
push
dec
aam
xchg
std
out
rolb
rolb
sbb
je
cmp
jbe
dec
pop
jae
sbb
aas
rolb
adc
ret
xor
sbb
add
insl
push
jno
sbb
loope
dec
iret
jnp
jnp
test
lods
adc
push
add
add
mov
data16
add
in
insb
popf
mov
js
fadds
leave
test
repnz
cli
rcrl
mov
fstpl
inc
mov
call
testb
in
jo
cmp
mov
add
xchg
xor
xchg
xchg
or
repnz
add
mov
inc
push
mov
add
inc
pop
cmp
xchg
jg
scas
sbb
pusha
add
inc
push
data16
mov
xchg
push
add
mov
rol
add
out
mov
sahf
test
add
add
add
add
add
add
mov
add
add
mov
sub
pop
enter
in
clc
fxch
push
or
movsl
js
add
push
sub
or
add
mov
sbb
repz
shrl
add
mov
sub
fldenv
add
test
movb
repz
je
sahf
adc
push
add
push
leave
fisttpl
sbb
lods
dec
xchg
push
add
mov
push
fs
loope
mov
lret
addb
push
add
mov
xor
pop
repnz
insl
add
mov
inc
loop
mov
dec
adc
fiadds
add
sbb
cmp
lahf
fsubs
mov
aam
push
ss
je,pt
adc
xchg
add
sub
cmpsb
add
frstor
sub
add
add
push
add
repnz
add
cltd
mov
fildl
inc
mov
or
cmp
loope
push
add
mov
data16
aad
push
dec
inc
push
add
mov
jmp
sub
sub
or
movsl
cmp
mov
sbb
inc
add
sub
add
loop
xor
enter
insb
and
inc
add
xor
inc
fbld
lahf
dec
iret
sahf
mov
movl
pop
stos
and
mov
int
pop
fbld
xchg
add
add
add
mov
test
sub
add
fistl
add
dec
jl
dec
mov
mov
add
xchg
add
push
add
xor
xchg
jp
ljmp
push
add
rolb
scas
loopne
xor
jo
jb
xchg
add
sbbl
test
lods
or
add
and
repz
inc
inc
add
mov
and
push
add
or
mov
negl
call
add
add
loope
cmp
adc
inc
add
pop
and
mov
mov
cmp
jae
mov
inc
add
sbb
mov
imul
imul
js
add
cmc
arpl
cmpsb
add
lods
shrl
cmp
add
mov
cli
aad
repnz
imul
add
mov
inc
cmp
push
add
xchg
data16
add
add
mov
in
rolb
and
inc
xchg
lock
stos
sbb
add
sub
icebp
sti
stc
ficoml
jnp
stos
cmpsl
lahf
int
add
adc
inc
add
xchg
xchg
jno
add
cmp
aam
pop
aas
push
add
add
das
push
add
add
mov
add
push
add
insl
int3
je
lahf
out
mov
or
add
add
or
mov
mov
xor
lret
out
imul
enter
mov
xor
popf
pushf
scas
adc
and
dec
xchg
add
jnp
dec
icebp
out
sub
mov
add
xchg
int
jbe
push
xor
loopne
iret
jge
add
cltd
neg
aas
push
add
add
mov
and
lcall
add
pop
and
aas
pop
call
xchg
aam
inc
add
jb
fidivs
inc
mov
sbb
cmp
inc
add
rolb
popa
repz
loope
add
sbb
test
cld
clc
xor
mov
mov
cli
push
shrl
fucomip
inc
inc
add
xchg
dec
inc
dec
aam
mov
cmc
xchg
les
pop
dec
lds
pop
fnstenv
lods
lret
mov
pop
stc
out
testb
add
sub
pop
gs
add
add
push
add
dec
pop
sahf
fwait
cli
xor
mov
in
add
addb
cs
push
fisttps
add
add
jb
enter
add
sbb
icebp
lcall
imul
add
add
insb
fnstenv
pop
add
jnp
dec
mov
cmp
add
add
in
mov
call
sbb
pop
mov
repz
add
repz
add
mov
jp
add
in
add
push
jbe
imul
or
jb
jge
xchg
add
arpl
pop
addb
mov
add
push
addb
cmp
add
and
mov
jecxz
add
stc
push
pop
clc
stos
sbb
jbe
add
inc
imul
jl
add
dec
lahf
xchg
mov
test
add
add
xchg
test
repz
pop
sbb
add
push
cld
sbb
add
movsb
add
mov
add
fucom
add
pusha
add
mov
jno
add
insb
inc
sub
cs
icebp
xchg
add
add
pop
xor
pushf
jno
jns
add
jnp
add
ret
pop
sub
mov
ss
cmc
addl
loopne
jo
addb
mov
pop
lods
jle
lea
add
stos
add
mov
add
add
sub
add
outsl
push
add
popa
loope
add
je
stc
les
test
inc
or
xchg
sub
mov
jne
cli
stc
addl
xor
add
mov
add
add
add
mov
add
int3
leave
push
add
add
mov
add
add
cwtl
shll
add
add
loopne
pop
lret
leave
out
cmc
mov
jb
mov
dec
filds
push
pop
adc
add
insb
and
mov
xchg
add
jo
shll
mov
mov
add
pop
add
mov
iret
xor
or
sub
lret
mov
mov
aad
add
jno
xor
movsb
add
sub
test
add
popa
lds
pop
dec
dec
mov
cs
mov
ds
cld
je
jb
iret
les
sbb
mov
add
ja
mov
add
inc
add
jecxz
mov
shrl
add
jge
dec
loopne
aam
mov
jae
test
shll
mov
push
add
push
add
xchg
sub
outsb
sub
pop
pushf
push
add
add
std
sahf
scas
pop
inc
add
jmp
aas
sub
in
or
enter
adc
cli
fbld
lahf
out
pop
les
sub
add
addb
add
addb
or
mov
mov
add
push
inc
pop
inc
add
ret
or
scas
sub
mov
add
add
add
jp
lea
mov
jo
inc
lahf
test
dec
dec
lea
add
add
mov
inc
lock
add
jb
sarl
add
out
add
add
inc
jb
daa
lea
jge
inc
add
or
mov
mov
data16
rolb
dec
inc
jp
lret
push
add
in
xor
lds
mov
mov
pop
jns
stc
sbb
xor
xlat
inc
add
out
or
mov
testl
loope
scas
sbb
add
test
rolb
rolb
outsb
inc
add
mov
add
bound
mov
add
scas
aam
push
xlat
sbb
jle
add
add
mov
cmp
popa
subl
inc
add
je
add
add
and
bound
mov
add
insl
adc
scas
add
mov
add
adcl
jmp
ja
aad
add
add
std
pop
repnz
mov
adc
mov
mul
add
adc
icebp
cmp
add
mov
push
pop
popf
das
lock
int
clc
sti
repnz
popa
into
sbb
sub
mov
aas
bound
mov
mov
add
xor
in
les
mov
xchg
sub
nop
add
pushf
dec
test
add
dec
insb
mov
add
add
push
add
inc
mov
ljmp
jp
sbb
sub
stos
dec
mov
clc
jle
cmc
ret
fnstenv
mov
addl
push
add
add
add
popf
dec
rolb
add
mov
push
add
inc
add
add
aas
bound
mov
add
xchg
xchg
add
add
adc
xchg
add
std
aas
movsl
stc
lcall
insl
ficompl
mov
add
mov
and
and
mov
ficoms
ja
data16
add
add
push
inc
add
xchg
add
cmp
cmpsb
add
lret
pop
inc
add
ret
lock
jno
out
sti
mov
add
add
cmp
lods
add
jnp
dec
pop
or
sbb
xor
arpl
scas
lea
jecxz
add
fcoms
fsubp
mov
mov
and
push
add
mov
or
scas
mov
mov
repz
add
push
jg
in
or
movsl
fsubs
add
pop
subl
dec
arpl
add
xchg
out
aad
add
xor
add
add
add
add
lock
add
and
mov
jmp
mov
call
add
in
lret
lret
push
add
mov
clc
cwtl
out
mov
dec
jl
sbb
insl
mov
mov
mov
cltd
sbb
mov
mov
xor
add
add
aas
push
int3
and
add
dec
addr16
fdivl
stc
test
cmp
mov
js
fldt
push
xchg
jecxz
sub
mov
test
repz
push
add
pop
fs
add
push
add
fnstenv
mov
int
outsl
cmc
xchg
add
in
rolb
jne
add
add
push
popa
ret
arpl
ret
mov
push
xor
xlat
lret
stos
sbb
or
cmp
push
aam
inc
ret
inc
add
aam
lahf
in
mov
push
inc
add
fwait
mov
add
movsl
cli
lods
pop
decb
mov
xchg
add
lods
mov
xchg
out
shrl
and
mov
mov
xor
sub
add
mov
neg
add
mov
in
inc
add
sbb
dec
jp
mov
repnz
add
movsl
cmp
clc
stc
aaa
sub
out
sbb
popf
adc
std
adc
add
repnz
dec
mov
sub
add
iret
stos
fstpl
add
add
add
jg
lds
xchg
nopl
add
add
add
sub
add
push
add
in
xor
mov
ja
add
xor
mov
imul
add
add
movl
sbb
add
adc
push
add
cmp
add
xor
add
fdivrl
adc
add
arpl
cmp
sbb
pop
int
movb
mov
xchg
add
mov
add
jp
pop
xchg
add
add
xlat
outsb
xchg
add
jmp
add
aas
push
add
loop
fnsave
stc
sbb
push
add
or
pop
jns
das
jo
test
or
jmp
add
rolb
cmp
add
arpl
pop
iret
mov
sarl
push
addb
push
add
dec
dec
push
add
sbb
cli
imul
aas
out
les
mov
fwait
jl
add
scas
push
add
lods
fldt
add
movsl
fdivl
inc
add
add
add
or
and
or
add
xchg
loope
pop
push
dec
xor
iret
insl
pop
test
xor
dec
repz
add
mov
jnp
sub
add
push
popf
xor
add
add
cmp
inc
gs
sub
mov
jp
rol
add
add
lret
push
dec
sbb
imul
mov
and
dec
mov
imul
shl
add
mov
xchg
add
rolb
inc
outsl
hlt
add
rcll
inc
add
fs
or
add
adc
loopne
dec
pushf
sub
stos
lret
aam
xchg
add
mov
mov
cmp
popa
testb
outsb
jge
add
test
loope
fistl
insb
stos
shl
add
push
add
loop
sub
pop
rorl
push
add
mov
xlat
decl
jae
test
ror
sarl
add
add
add
xor
int3
add
inc
add
test
add
mov
bswap
pop
and
mov
add
sub
lods
mov
stos
dec
xchg
jno
jb
mov
out
popf
jecxz
add
outsl
xchg
jo
push
daa
stos
push
add
mov
cwtl
outsl
mov
cmpsb
add
cli
mov
sub
adc
and
pop
jge
mov
add
mov
ljmp
mov
add
add
jecxz
push
or
adc
into
filds
add
mov
loope
jno
add
mov
mov
xor
les
mov
sahf
in
mov
mov
add
sbb
sti
or
add
add
dec
bound
mov
mov
inc
add
test
jmp
jo
scas
ret
cmp
sbb
loop
jb
and
adc
add
nop
add
add
shll
in
cmp
mov
or
ja
mov
and
mov
and
add
add
xchg
xor
xor
mov
loop
add
mov
and
add
adc
xor
jae
fstp
add
jnp
add
dec
cmpsb
add
mov
loope
fdivrl
add
mov
lret
arpl
xor
add
mov
add
add
sub
sbb
dec
mov
add
mov
mov
movb
data16
loope
add
out
outsl
addb
insl
or
dec
pop
and
pop
insl
add
mov
add
add
inc
testb
insb
cmovno
pop
cmpsl
add
lds
add
adc
push
mov
add
or
pop
inc
xchg
lock
jg
mov
add
imul
fmuls
mov
push
test
mov
add
dec
lods
push
add
ljmp
add
int
sbb
add
out
enter
insb
or
add
push
add
mov
add
mov
lcall
add
mov
mov
push
jmp
add
add
add
mov
add
lahf
lret
push
add
cmp
cltd
test
cmp
arpl
std
adc
push
add
pop
cmc
call
bound
mov
aam
push
jmp
jnp
add
into
testb
push
add
add
add
mov
popf
add
lahf
xor
js
add
mov
add
je
cli
push
test
push
fcmovne
test
punpcklbw
mov
outsb
mov
fadds
out
fldenv
add
sbb
pushf
or
nop
add
loopne
rcrl
cwtl
fsubrl
cmp
in
cmp
add
push
add
add
cmpsl
cmp
adc
ljmp
addb
add
lcall
data16
lods
popf
pusha
add
loop
mov
push
add
and
cmp
es
add
sub
add
jne
add
call
add
rolb
mov
jae
add
rolb
sbb
cld
cmp
add
lahf
jo
cmp
jbe
sbb
jbe
inc
add
sub
push
add
icebp
adc
hlt
add
sub
inc
add
mov
popa
gs
add
mov
add
insl
adc
dec
adc
lea
dec
gs
push
add
dec
clc
dec
mov
loopne,pn
fadds
cmp
arpl
pop
hlt
add
ljmp
jns
jmp
adc
add
add
adc
dec
cmp
cmpl
add
inc
add
add
push
add
pop
push
add
jbe
mov
addb
or
and
add
mov
ja
mov
mov
enter
int
int
add
add
add
add
test
jg
xchg
int
push
add
add
add
dec
cld
mov
add
cs
add
lods
push
in
pop
addr16
in
dec
rolb
add
add
mov
rolb
cmpsb
add
jno
add
stos
push
add
mov
add
add
jae
mov
jg
add
pop
xor
pop
repz
add
int
addb
lahf
and
ss
imul
insl
sar
fnsave
loopne
mov
pop
pop
xlat
cmpsb
add
and
cmp
cli
jns
add
mov
jo
pop
or
push
add
add
add
adc
pop
out
iret
scas
pop
mov
xchg
int
xchg
add
xchg
fmuls
add
xor
push
int
cmpsl
push
leave
frstor
sub
add
adc
std
addb
add
js
call
imul
lcall
call
inc
das
push
outsl
in
add
mov
mov
or
pop
sbb
loope
add
cltd
or
cli
rcl
sbb
add
pop
xchg
add
movb
addb
pusha
add
mov
mov
cmp
int
jno
hlt
add
add
pop
xchg
jo
adc
jne
xchg
add
mov
xor
mov
add
stc
mov
sub
scas
push
add
add
in
mov
mov
sbb
imul
dec
jno
nop
add
add
mov
add
mov
add
ss
add
add
add
test
add
insb
rolb
mov
dec
dec
test
dec
insl
ficoms
push
add
add
jns
inc
mov
mov
iret
stos
jmp
mov
add
add
ret
mov
pop
hlt
add
and
das
xlat
lret
jnp
outsb
fstpl
mov
add
mov
inc
add
cmpl
cmp
inc
pop
movsl
jnp
add
add
add
add
in
testb
add
xchg
divl
test
xor
cmc
bound
mov
shll
add
mov
adc
add
test
mov
pop
mov
jp
fcompl
add
mov
mov
fwait
pop
dec
dec
or
add
add
add
add
mov
arpl
lret
sub
movsb
add
cmpl
idivl
pop
stos
loop
mov
sub
pop
fdivl
dec
push
add
stc
jmp
add
cmp
xor
mov
scas
or
add
fdivrp
addb
fnstcw
and
or
inc
add
mov
mov
add
in
arpl
add
adc
jne
test
int3
movb
push
loopne
cwtl
data16
in
lcall
sbb
add
insb
fidivl
les
adc
dec
ds
ret
sub
and
mov
inc
add
add
add
add
in
fbstp
jb
outsl
adc
test
lret
outsl
insb
or
add
call
xchg
add
pop
hlt
add
mov
push
add
dec
pop
popa
jns
stos
adc
lret
mov
jb
inc
add
movsb
add
inc
add
add
shrl
xchg
xor
stos
ret
cmp
push
xchg
cli
add
mov
scas
add
mov
and
push
pop
adc
stos
or
sbb
add
loop
mov
mov
lods
and
or
sbb
adc
lret
movl
adc
nop
add
mov
xlat
mov
or
inc
mov
cmp
add
add
xor
out
lods
mov
mov
int
add
add
lahf
add
leave
inc
add
jo
icebp
and
repz
sub
pop
ljmp
inc
jp
imul
add
out
test
fsubrp
mov
jmp
nop
add
jno
xlat
xchg
dec
mov
add
mov
loope
mov
push
add
or
push
js
cmpsl
xor
cmp
xchg
add
repz
add
sub
sub
ljmp
add
xor
pop
jbe
jl
push
add
dec
popa
jecxz
divl
add
dec
pop
cwtl
pop
mov
in
jnp
outsb
pop
add
mov
inc
addb
push
add
cmpsl
add
add
popf
xchg
fwait
xor
mov
in
pop
add
mov
mov
or
scas
std
sbb
mov
pusha
add
and
mov
add
push
add
mov
test
add
cwtl
add
push
add
rolb
test
dec
add
dec
popf
scas
inc
sub
stc
push
roll
add
jb
mov
dec
or
add
add
in
push
mov
out
mov
jo
adc
or
aas
jne
add
or
loope
fidivrs
add
adc
mov
add
pop
in
cmp
or
push
add
add
jle
push
add
add
aad
push
add
xchg
add
mov
sub
mov
loop
xor
mov
fcomi
movsb
add
ljmp
add
add
mov
testl
push
add
mov
and
mov
repz
mov
add
add
add
sbb
add
cmp
aam
shr
jp
dec
aas
xchg
add
dec
xor
xor
add
aad
testb
data16
mov
add
add
movsl
mov
pushf
mov
aam
sbb
pop
pop
movsb
add
sbb
add
sbb
add
jp
add
insb
in
add
add
shll
bound
mov
add
adc
ret
arpl
lods
mov
roll
movb
loope
stc
je
jno
les
push
test
cs
fildll
test
cvtpi2ps
and
lret
mov
enter
and
xchg
add
xor
mov
roll
or
cld
lock
lret
arpl
xchg
pop
pop
cmp
add
push
add
mov
lods
scas
stos
inc
add
add
add
add
cltd
movb
and
mov
sahf
mov
xchg
add
mov
add
cmp
add
cld
in
and
sub
hlt
add
scas
and
hlt
add
popl
ret
sbb
sbb
add
xor
ds
add
sbb
add
and
mov
xor
inc
add
push
add
mov
add
add
pop
sbb
add
aas
pop
rolb
or
or
adc
dec
sub
mov
xchg
jno
mov
push
add
nop
add
sub
add
add
mov
mov
push
add
push
add
add
add
jb
bound
mov
add
enter
add
sbb
fildl
cmp
push
mov
add
add
add
mov
dec
pop
out
xor
cli
and
add
adc
je
mov
add
adc
rolb
inc
rolb
imull
push
sub
ds
xchg
fcmovu
xor
mov
lods
cmp
addb
xchg
add
sub
mov
push
add
fs
adc
lret
add
add
add
add
add
push
add
add
mov
mov
adc
movb
nop
add
pop
ret
insb
jmp
and
mov
jne
sub
sub
jae
add
mov
mov
cmpsl
mov
add
cmp
add
push
add
xchg
add
mov
movsl
imul
pop
lcall
add
and
mov
mov
xor
pop
jb
push
add
stc
stos
loopne
push
out
adc
mov
sbb
add
incl
xchg
sbb
adc
xor
cvtps2pi
sub
popf
jmp
or
fwait
or
loopne
test
bound
mov
inc
add
mov
data16
mov
or
das
xor
sub
out
pop
sbb
sub
and
mov
add
pop
xor
popa
jno
add
add
mov
add
mov
imul
inc
cmc
sub
iret
out
shrl
and
and
mov
mov
xchg
in
xor
mov
add
add
add
xchg
add
add
test
inc
pusha
add
sub
pop
loop
cmp
push
add
add
add
add
iret
outsb
sbb
arpl
sbb
pop
xlat
jmp
xchg
jbe
leave
sub
jle
mov
leave
xor
pop
loop
cmp
cld
outsb
in
push
fwait
mov
sarl
in
pop
out
add
sbb
xchg
jno
add
adc
mov
pusha
add
add
jae
imul
or
add
fisubs
imul
iret
stos
nop
add
pop
adc
je
or
cwtl
fisttps
lea
mov
pop
sahf
bound
mov
add
cmp
add
iret
fcoml
add
inc
add
add
add
add
add
scas
out
xchg
mov
dec
std
mov
inc
add
in
sub
mov
int3
mov
repz
xchg
and
or
cs
sub
dec
xor
add
and
mov
sub
int
add
mov
add
push
add
cmpsb
add
stc
pop
cmpsb
add
aaa
rolb
in
add
add
jbe
dec
mov
jge
jecxz
lods
push
add
adc
cltd
jecxz
pop
or
stos
sbb
aas
pop
stos
mov
add
add
insl
sahf
xchg
pop
or
add
das
jle
lcall
mov
imul
add
pop
lock
add
mov
sbb
xor
ret
add
pop
xchg
mov
lods
mov
sbb
add
cmp
push
add
add
push
add
enter
int
mov
sub
adc
lret
sub
push
outsl
subl
pop
xchg
and
in
push
mov
sub
mov
add
movsb
add
add
leave
sbb
mov
mov
test
test
mov
add
pusha
add
add
add
xor
mov
and
mov
add
js
add
xchg
pushf
pop
fistpl
adc
adc
sarl
jo
mov
popf
xlat
xor
pop
xchg
add
roll
add
add
insb
sbb
mov
sub
and
mov
test
fsubl
cld
insl
cmpsl
pop
mov
imul
add
mov
push
add
test
push
or
add
mov
dec
outsb
mov
add
enter
add
xor
add
and
pop
inc
push
js
jg
add
add
sub
ret
cli
cmp
mov
call
add
mov
add
sbb
mov
in
add
rolb
xchg
xchg
addb
aas
rolb
xor
xchg
add
xor
mov
add
xor
add
add
or
dec
jae
add
add
push
mov
data16
pop
pop
daa
call
mov
push
dec
jge
sbb
pop
xor
mov
sbb
ja
add
adc
or
mov
dec
xor
cmp
add
push
and
std
nop
add
add
add
push
test
testb
inc
leave
dec
pusha
add
add
jp
push
cwtl
mov
or
repz
inc
jl
jecxz
add
inc
adc
mov
pop
movsl
mov
xor
dec
sbb
push
les
js
cmp
fnstenv
add
pop
aam
pop
daa
mov
sub
popf
fs
test
add
add
aad
dec
dec
adc
inc
add
lcall
add
lods
enter
sub
scas
cwtl
xlat
insb
pop
pusha
add
cmp
and
add
nop
add
add
testb
push
add
xchg
add
xchg
add
mov
sub
push
add
and
mov
add
rolb
pusha
add
dec
jns
xchg
jbe
enter
xlat
or
sub
sahf
pop
jge
add
and
fnsave
les
dec
popa
mov
adc
add
xchg
dec
fistps
aaa
cmp
mov
add
outsb
and
sar
xorl
and
jle
or
jg
dec
dec
or
xor
sub
add
add
add
cmp
add
lea
lods
fsubs
push
add
add
push
icebp
sub
add
mov
lret
and
in
xchg
adc
mov
movsl
sbb
add
repnz
add
fildll
add
xor
insb
incl
adc
dec
sarl
jmp
add
xor
and
jp
add
add
fadds
add
inc
xor
stos
cmp
fsubrl
adc
imul
jae
add
js
nop
add
mov
in
sbb
out
push
fldl
add
lds
add
les
mov
xchg
xchg
cmp
mov
add
dec
ret
rolb
dec
in
mov
add
lods
dec
lea
add
push
add
cmp
add
stos
push
add
imul
movsl
xchg
add
inc
add
push
cmp
nop
add
push
pop
jmp
add
sub
add
test
add
mov
outsl
jo
sub
add
ret
inc
push
sar
push
test
push
repz
add
popa
inc
sub
xor
insb
out
inc
mov
lock
jbe
bound
mov
ret
movsb
add
dec
dec
mov
jns
lods
ljmp
sbb
mov
cwtl
stos
mov
mov
dec
popf
xchg
add
mov
mov
cmp
hlt
add
adc
add
mov
add
add
lcall
popa
jle
adcl
adc
fiaddl
sub
add
pop
lahf
clc
ljmp
lea
out
cld
cs
mov
add
insb
mov
addr16
pop
add
aaa
lods
sub
jne
cwtl
jb
xor
lret
sub
mov
add
imul
add
std
push
add
bound
mov
mov
ja
cld
popa
movsl
imul
mov
mov
add
push
add
add
into
or
ds
ret
sub
add
lods
lcall
or
add
loope
or
data16
aad
sahf
inc
add
add
mov
push
ret
pushf
sub
add
sti
push
hlt
add
cmp
add
cltd
addb
add
push
add
pop
sbb
add
aam
call
sahf
ja
add
push
add
leave
or
test
add
mov
add
decl
mov
daa
addb
add
add
fwait
push
lock
mov
add
in
push
add
popa
fistpll
out
into
mov
add
push
add
add
movsb
add
lods
fistpl
insl
jae
ret
push
push
add
lods
dec
addb
mov
adc
jle
add
add
adc
cwtl
in
xor
imul
mov
sbb
cwtl
mov
daa
sbb
adc
inc
loop
add
xor
inc
adc
sub
add
add
push
add
jge
movsb
add
xor
add
add
rolb
out
out
mov
cmpsl
scas
and
add
popa
in
shrl
add
sbb
dec
mov
mov
adc
mull
mov
add
cmp
add
repnz
add
add
mov
ja
add
xchg
sub
add
pop
pop
rol
add
fwait
stos
push
add
sub
adc
mov
add
movsb
add
in
in
repnz
add
add
inc
add
add
dec
mov
fxch
mov
cltd
dec
loope
push
sbb
int
ljmp
add
add
jo
cwtl
or
xor
pop
out
adc
data16
aas
rolb
add
mov
int
ret
cmp
pop
add
add
mov
sub
push
cmp
push
dec
xchg
add
aaa
cltd
mov
add
inc
xor
mov
add
mov
sub
insl
fs
popa
and
add
popf
outsl
mov
outsl
adc
fistps
xchg
add
stos
inc
add
push
add
test
adc
inc
add
xchg
jnp
insl
pop
aam
jmp
icebp
xor
addb
add
add
or
add
adc
add
mov
call
fwait
dec
lds
xor
pop
aas
test
push
add
xorl
add
push
leave
mov
mov
add
add
dec
push
das
int
and
sahf
dec
aas
addb
add
or
decl
mov
mov
xor
mov
add
add
pop
mov
add
mov
jnp
or
popf
sub
add
or
aad
jle
add
add
in
fimuls
add
scas
outsl
scas
add
jl
add
xchg
add
add
add
add
testb
add
lahf
add
cmc
sbb
pop
add
add
add
ds
add
inc
add
lcall
in
push
add
add
sbb
clc
sub
add
repnz
subl
divl
mov
ss
jg
cltd
loop
insb
push
jae
and
add
add
add
test
pop
fwait
test
mov
push
add
shl
mov
out
mov
jne
jbe
sbb
push
add
mov
out
rcl
add
add
and
out
sbb
xlat
jo
cltd
pop
cwtl
aad
sbb
in
fldl
repz
xchg
xchg
add
add
imul
ja
cmp
enter
sbb
add
push
inc
ja
add
bound
mov
jp
insb
mov
add
xchg
add
mov
add
add
ljmp
stos
push
ret
add
addb
lea
subl
pop
mov
cmp
aas
loope
add
sbb
or
and
gs
pop
mov
scas
jo
xor
and
movsb
add
aam
push
add
add
ret
add
mov
mov
test
out
orl
jno
add
pop
aad
clc
jmp
add
adc
push
add
add
and
mov
add
lods
or
jo
mov
push
add
adc
cld
mov
add
insb
mov
cmp
inc
pop
sub
add
xlat
in
adc
mov
mov
sub
cli
enter
lret
ja
fidivrs
jg
add
sbb
add
push
add
pusha
add
pop
cmp
rolb
dec
add
or
lahf
inc
imul
addb
push
add
jae
add
mov
jb
mov
and
add
add
enter
add
dec
inc
add
je
sbb
loopne
fnstcw
pop
add
mov
mov
je
stc
xor
mov
inc
sbb
add
add
add
sub
in
add
add
inc
add
cmp
add
mov
ljmp
jnp
pop
xlat
push
add
sub
adc
cmp
add
flds
mov
and
pop
mov
mov
ret
insb
dec
stos
mov
adc
repz
add
add
outsl
jns
iret
lods
fcompl
add
jb
mov
aaa
std
jb
fcoml
rolb
movsb
add
xchg
add
ret
and
add
add
or
push
add
rolb
mov
ljmp
sbb
insb
push
add
je
leave
cmp
jle
add
test
mov
data16
stos
cwtl
mov
and
mov
dec
je
into
push
add
les
rolb
mov
jg
repnz
adc
out
pop
enter
mov
push
add
cwtl
xor
js
pop
dec
sbb
add
adc
imul
add
jb
push
add
out
imul
pusha
add
xor
mov
dec
leave
les
jecxz
imul
in
scas
dec
pop
sbb
or
inc
inc
add
push
push
pusha
add
push
add
popa
dec
fxam
iret
push
addb
movb
jb
rcr
dec
mov
add
push
jno
add
mov
add
fimuls
add
scas
add
bound
mov
enter
shl
cmp
call
ffreep
add
movb
test
movb
add
add
add
add
hlt
add
call
rcll
fisubl
or
jne
add
cmpsb
add
add
add
mov
add
add
xor
add
test
rcll
cmc
cmc
pushf
push
mov
add
sti
dec
pushf
int3
or
insl
cmp
data16
sti
pop
jmp
push
add
bound
mov
enter
mov
and
or
add
ret
les
outsl
mov
lods
inc
mov
sub
add
outsb
addb
mov
add
jmp
mov
jo
ficoms
add
cwtl
test
clc
icebp
mov
cmp
out
jne
clc
mov
add
jbe
arpl
add
inc
add
imul
add
movb
pop
pop
stc
and
repnz
xor
test
aaa
push
or
add
sub
add
cmp
dec
out
out
adc
pop
xchg
filds
mov
imul
add
sti
aam
jp,pt
jno
xchg
add
aaa
into
xchg
add
cs
aad
add
xchg
xchg
add
add
xor
lret
into
jo
inc
add
outsb
dec
inc
add
xchg
dec
sbb
add
or
jne
and
sub
test
fistpl
cwtl
popa
pop
xor
xchg
adc
sahf
push
test
shll
mov
mov
mov
fcoms
inc
add
in
inc
add
adc
dec
mov
add
outsl
jb
loope
out
xor
cli
push
or
out
mov
adc
vpmadcsswd
add
std
in
aas
or
add
subl
add
int3
push
stos
addb
scas
push
mov
add
mov
jle
test
fildl
adc
or
add
pop
ret
mov
add
add
loop
lds
inc
xor
mov
addr16
and
cmp
push
push
push
rolb
add
in
mov
out
mov
xor
pop
mov
mov
in
mov
mov
in
xorl
push
add
and
or
bound
mov
dec
adcl
sub
addb
add
add
mov
inc
sbbl
add
popa
xor
mov
ret
sub
je
add
mov
add
inc
add
add
add
mov
mov
add
inc
mov
test
in
mov
int3
wrmsr
add
fstl
add
ljmp
cmp
in
jp
push
add
rolb
int
aam
mov
sti
movb
loope
cli
jbe
mov
mov
mov
jmp
mov
les
ljmp
cmp
push
add
sub
add
mov
lret
xor
adc
mov
test
xor
bndldx
adc
cmp
add
add
add
ss
stc
lods
bound
mov
aaa
inc
add
rolb
pop
out
add
dec
enter
push
add
adc
add
sbbl
cmp
add
dec
pop
int3
fidivrl
xchg
push
push
add
add
inc
lock
aad
out
in
mov
add
add
addb
or
add
ja
add
loopne
dec
inc
std
std
add
mov
nop
add
xchg
insb
out
jne
sbb
notl
fnstcw
add
inc
rolb
bound
mov
add
shr
mov
ja
inc
add
add
add
add
jp
add
enter
cli
dec
and
add
and
mov
popf
inc
push
add
icebp
movb
daa
testb
loopne
add
xchg
out
mov
js
add
add
addb
add
add
lret
xor
adc
mov
adc
movq
xor
or
test
and
pop
pop
jb
sbb
add
push
mov
inc
into
jno
or
push
shll
fistpll
mov
add
add
push
fdivp
add
add
jbe
xlat
daa
ret
addb
add
add
add
mov
cltd
mov
adc
outsl
mov
mov
adc
dec
add
mov
insl
adc
mov
add
add
add
pop
addr16
sbbl
add
mov
add
mov
mov
mov
rolb
pusha
add
shl
add
data16
lea
cmc
ror
pop
add
test
inc
add
jmp
add
add
add
movsl
cld
mov
dec
lret
jns
and
mov
mov
dec
lret
mov
addr16
push
add
mov
inc
add
add
add
call
adc
pop
mov
jp
add
mov
add
dec
jmp
add
add
je
jle
xor
xchg
stos
push
add
out
call
rolb
xchg
add
ficompl
mov
mov
jle
add
mov
add
add
mov
js
flds
add
add
add
data16
in
push
add
cld
outsb
or
xlat
xlat
js
or
stos
pusha
add
push
add
add
rolb
test
add
sub
lock
add
sarl
mov
add
inc
sbb
mov
add
add
add
mov
aad
std
adc
mov
pusha
add
iret
add
mov
sahf
mov
push
mov
aas
xor
push
dec
push
lds
fisubrl
lret
lods
and
xor
mov
push
cwtl
mov
ret
bound
mov
add
dec
cli
insl
pop
or
insl
push
push
add
add
jbe
xor
add
add
scas
push
xlat
enter
add
pusha
add
or
add
shll
insb
pusha
add
inc
add
add
sub
test
push
rolb
add
or
add
add
add
add
int
inc
mov
add
aad
lcall
rolb
popf
popf
add
out
ret
push
add
xchg
and
stc
inc
add
dec
mov
add
in
sub
in
hlt
add
pusha
add
sbb
add
push
push
cltd
xchg
xor
repnz
loope
add
add
mov
stc
or
and
mov
dec
lret
add
rolb
mov
in
stc
adcl
hlt
add
push
add
dec
loope
xchg
or
fidivrs
aam
bound
mov
mov
add
fcoml
add
mov
mov
xchg
add
pop
and
cmc
pop
popa
lahf
mov
loop
es
out
xor
xchg
cmpsl
or
jnp
ret
rep
add
je
int3
je
or
out
add
nop
add
add
out
push
into
push
add
dec
inc
out
aad
add
add
mov
mov
add
add
pop
mov
and
pop
sub
sbb
lcall
push
fsubr
repnz
jbe
leave
aaa
and
mov
mov
add
lods
adc
fistpl
push
add
aad
outsb
loope
fcompl
mov
into
mov
das
dec
inc
aaa
sub
das
nop
add
add
dec
xchg
add
cld
rolb
mov
aam
sbb
add
daa
and
dec
into
dec
push
pop
addb
mov
add
in
mov
das
inc
into
xor
sub
xchg
jl
xchg
pop
sbb
sbb
xor
add
add
cwtl
adc
cmp
xchg
add
xor
movsl
mov
add
lock
scas
mov
add
push
push
test
stc
mov
punpckhbw
or
push
pusha
add
clc
mov
add
add
dec
inc
ret
in
jg
icebp
pushf
loop
jae
sarl
add
xor
push
add
add
fldenv
adc
cli
les
cmc
add
push
or
adc
xchg
loop
xchg
pop
arpl
inc
add
inc
fcmovbe
dec
addb
add
scas
filds
mov
adc
sub
add
mov
popa
call
sahf
dec
push
add
bound
mov
add
call
fidivs
stc
jb
dec
add
mov
pop
xchg
add
add
add
mov
add
ret
stc
push
add
lret
movsl
pop
mov
not
dec
mov
lahf
rolb
test
mov
adc
psrad
sub
xchg
mov
jne
cmp
add
sbb
mov
adc
xchg
pop
xchg
add
xor
add
rolb
and
add
add
add
mov
add
add
das
adc
xchg
andl
add
add
cltd
movsb
add
rolb
stc
in
mov
dec
sub
push
add
push
add
dec
lahf
jnp
int
ljmp
cmovp
mov
xchg
test
cmpsb
add
add
dec
sbb
dec
jp
xchg
stc
std
test
gs
cmp
rolb
push
add
mov
add
add
add
subl
lret
out
jmp
add
jnp
cwtl
xchg
add
add
add
repnz
add
sub
ljmp
js
add
sub
jbe
test
mov
sub
sbb
mov
add
add
add
test
ljmp
add
add
add
or
adc
ficomps
mov
aas
stos
stos
rolb
pop
jbe
cwtl
sub
mov
scas
pop
repnz
xor
add
in
testb
sti
push
mov
xchg
add
xor
stos
lds
pusha
add
add
mov
aas
sub
pop
inc
add
add
add
mov
add
add
push
test
add
mov
in
rcl
pop
iret
icebp
add
add
push
pop
and
sahf
pop
sub
and
sub
pop
inc
add
xchg
mov
in
jne
add
or
arpl
adc
and
rolb
testb
add
add
jecxz
mov
add
mov
outsb
jns
scas
adc
lea
add
outsl
lret
call
stc
movb
fcoml
add
mov
pusha
add
js
mov
add
stos
or
add
sbb
pop
mov
push
add
jns
jbe
cmp
mov
add
rolb
icebp
pop
imul
jmp
addb
add
xlat
pushf
mov
and
mov
add
jae
testb
mov
add
cmp
repnz
fisubrs
push
scas
mov
add
jne
add
fidivs
and
stc
or
mov
cli
popa
and
add
adc
push
add
push
add
cli
shll
cmp
mov
outsl
scas
ret
sti
dec
inc
add
jns
outsl
mov
inc
call
push
js
add
lods
cld
imul
out
in
add
jne
sub
punpcklwd
add
and
add
loope
mov
int3
pop
testb
xor
popa
in
add
add
add
add
addb
addb
fnstenv
mov
sub
pop
sti
popf
sbb
das
and
mov
xchg
addb
pop
pusha
add
pop
push
xchg
add
add
call
add
xor
aad
aas
cmpl
xchg
lods
pop
mov
add
add
add
add
lds
add
push
popa
inc
addb
sbb
into
xchg
mov
pop
add
mov
adc
mov
xor
mov
adc
jbe
mov
add
add
cmp
in
add
faddp
add
fwait
xchg
push
push
add
aam
dec
mov
jo
mov
or
fwait
into
sub
add
jmp
adc
cmp
sub
sahf
ds
inc
lods
data16
pusha
add
jg
daa
xchg
or
adc
adc
adc
add
add
add
in
pop
dec
in
aas
fs
add
mov
cmp
sbb
mov
arpl
pop
add
mov
add
fdivrl
and
mov
xchg
add
das
xor
ds
or
push
add
pop
push
add
test
fwait
das
pop
fdivs
rolb
mov
mov
sub
xchg
mov
add
stc
out
jl
mov
out
xchg
add
fbstp
cwtl
int
jmp
mov
lret
mov
add
push
add
add
in
xchg
stc
pusha
add
pop
jbe
ljmp
xchg
mov
movb
rolb
gs
int3
rcll
inc
add
mov
jbe
icebp
cmp
adc
mov
nop
add
daa
ret
inc
add
jl
jne
add
rolb
or
rolb
xchg
in
and
cmp
jmp
inc
lret
add
lods
dec
pop
dec
adc
mov
add
add
add
add
xor
jp
cmp
add
push
add
out
mov
add
adc
stos
adc
sub
inc
or
repnz
out
lahf
mov
test
in
push
in
mov
test
inc
sub
jns
mov
pop
fcomip
cltd
pop
push
add
xchg
xchg
add
pop
add
and
repz
insb
mov
pop
cmp
ret
cmp
mov
data16
push
add
testl
and
mov
or
add
stos
mov
test
add
cltd
and
mov
add
adc
add
arpl
cmpsl
adc
dec
stos
push
add
movsl
sbb
out
push
imul
movsb
add
rolb
add
aam
cmp
xchg
sub
repz
sub
loopne
pop
mov
sbb
stc
lock
sub
add
add
add
arpl
daa
je
aas
sarl
call
mov
add
rolb
sbb
pusha
add
cmp
mov
cli
pop
lods
pop
cltd
js
add
jo
test
add
popa
lods
add
xor
adc
sbb
add
movsb
add
mov
add
fistpl
mov
add
jne
fdiv
add
add
add
add
sub
pop
stc
dec
inc
push
cmpsb
add
or
push
mov
adc
gs
add
xchg
mov
pop
ds
and
mov
jmp
add
rolb
pop
and
hlt
add
outsb
push
ds
rorl
mov
xchg
add
jno
imul
dec
sahf
scas
je
mov
cmpsb
add
imul
bound
mov
adc
dec
add
add
mov
in
jo
fucomp
cs
and
mov
fsts
data16
pop
in
movsl
sub
xchg
mov
ja
jg
mov
enter
inc
add
add
mov
add
inc
pop
inc
lcall
into
inc
add
lds
mov
add
stos
into
mov
cmp
pusha
add
mov
add
jb
scas
mov
add
rolb
mov
add
into
insl
add
mov
ja
jbe
imul
push
dec
dec
adc
xchg
mov
add
out
fnstsw
mov
add
addb
add
add
mov
ficompl
data16
add
test
add
add
cld
mov
movsb
add
inc
jg
cmp
xchg
daa
cmc
daa
outsb
outsl
dec
jge
mov
add
ret
bound
mov
add
bound
mov
sub
sbbl
add
push
test
pop
addb
rcll
push
pop
xchg
jnp
aaa
pop
mov
cmp
adc
xlat
xchg
add
ror
add
stc
mov
mov
loope
or
addr16
lock
mov
xchg
aaa
push
icebp
xor
add
and
add
jle
add
mov
in
jl
sbb
das
test
push
add
add
xchg
add
add
test
loop
inc
add
add
mov
movsl
test
add
stos
bound
mov
add
sbb
sub
ds
das
dec
and
mov
lock
add
mov
fwait
xor
sti
xor
cmc
leave
icebp
pop
xchg
add
add
mov
cmpsb
add
mov
mov
and
aas
dec
roll
inc
add
mov
xor
mov
mov
or
inc
clc
cli
push
add
testl
add
add
lret
adc
sub
mov
cltd
mov
out
out
shl
add
mov
inc
add
loope
sti
add
hlt
add
jg
add
pop
test
mov
add
add
add
cltd
clc
mov
add
movsl
mov
cwtl
sub
testb
dec
mov
lahf
enter
inc
add
sub
add
out
mov
add
mov
sub
xor
add
aas
rolb
ja
cmpsl
scas
stos
xchg
add
inc
lods
in
test
fmulp
insl
rolb
add
add
lret
ret
add
push
out
inc
add
daa
lods
pop
adc
xchg
jecxz
pop
bound
mov
add
stc
mov
lock
inc
xchg
add
leave
jne
rolb
add
pop
mov
mov
push
addb
pushl
pushf
roll
add
in
mov
add
mov
pop
ficompl
add
add
fdivp
add
mov
mov
add
add
add
mov
add
or
add
fsqrt
xchg
add
ret
mov
loop
cltd
stos
push
xchg
mov
cmp
mov
and
cmp
mov
add
mov
add
cmpsb
add
fimull
add
push
add
int
add
adc
test
leave
and
add
sahf
and
popa
and
mov
sub
mov
mov
enter
stos
jb
sbb
push
mov
and
mov
and
dec
inc
push
add
add
test
pop
mov
sbb
add
fiaddl
stc
push
adc
or
pop
fiaddl
mov
lahf
pop
xchg
mov
daa
jecxz
mov
lea
je
mov
pop
push
inc
add
aad
mov
data16
mov
data16
bound
mov
add
sub
in
mov
mov
fnstcw
int3
mov
add
sahf
ret
sub
add
in
mov
add
sbb
or
add
and
mov
add
mov
xor
xchg
jg
js
call
sbb
sub
out
inc
dec
and
mov
pop
sbb
lret
mov
loop
dec
mov
inc
add
in
mov
and
add
lcall
sub
test
add
add
jl
inc
inc
ret
cwtl
lcall
js
addb
dec
clc
ds
jmp
adc
jne
add
pushf
push
push
stos
sub
sbb
dec
shll
clc
loop
ja
fcoms
pushf
pop
scas
addr16
testb
jb
cltd
testb
inc
jge
ret
mov
clc
bound
mov
lahf
les
xlat
cmp
add
insb
ret
shll
add
cwtl
sbb
and
mov
sahf
mov
add
add
or
cmp
mov
add
add
or
jl
dec
seto
repnz
xchg
jg
std
popf
push
add
xlat
clc
add
jne
jne
add
jbe
mov
add
add
xchg
mov
dec
push
mov
imul
mov
aas
adc
sub
jp
add
mov
and
mov
cmp
iret
bound
mov
in
pop
js
add
add
mov
rolb
dec
jp
xlat
sub
jecxz
add
add
mov
clc
repnz
jae
inc
add
rolb
pop
clc
repnz
jae
add
push
jae
mov
jg
clc
repnz
jae
rol
jecxz
lds
mov
xchg
ret
sub
mov
xor
cmp
test
adc
add
repnz
jae
xor
sahf
dec
xchg
clc
repnz
jae
add
add
jp
test
add
add
repnz
jae
add
fmuls
jmp
pop
add
test
add
insb
mov
clc
repnz
jae
add
vdivsd
jne
clc
repnz
jae
enter
add
push
mov
xchg
ret
add
data16
stos
negl
adc
add
sub
ja
mov
jmp
add
xor
add
clc
repnz
jae
jno
enter
add
add
fwait
cld
nop
jmp
add
add
add
add
add
clc
repnz
jae
addb
xor
mov
jmp
add
clc
repnz
jae
add
scas
mov
clc
repnz
jae
fstl
add
add
repnz
jae
xor
add
pop
lods
push
mov
xchg
ret
add
jle
fcoml
cld
nop
jmp
jg
add
add
add
cld
nop
jmp
data16
add
add
and
xor
clc
repnz
jae
in
add
dec
mov
fwait
cld
nop
jmp
enter
add
shr
push
mov
xchg
ret
add
in
mov
jae
ret
add
inc
inc
add
test
jae
icebp
data16
add
xor
add
add
fwait
cld
nop
jmp
add
shlb
push
push
push
mov
xchg
ret
add
add
inc
sahf
mov
repnz
jae
loopne
xor
bound
daa
jae
add
add
add
pop
clc
repnz
jae
add
data16
add
imul
add
add
add
scas
add
ljmp
sub
add
xchg
lds
dec
add
add
xor
clc
repnz
jae
add
push
add
inc
mov
fwait
cld
nop
jmp
add
adc
jle
enter
jae
in
xchg
loopne
ja
add
fwait
cld
nop
jmp
imul
add
mov
fwait
cld
nop
jmp
arpl
add
xchg
push
clc
repnz
jae
add
mov
ret
jmp
repnz
jae
fiadds
inc
add
lret
in
inc
add
mov
add
mov
clc
repnz
jae
add
loopne
mov
add
addb
xor
add
mov
pusha
clc
repnz
jae
sub
add
fidivs
dec
lea
fwait
cld
nop
jmp
add
add
div
add
dec
imul
cmpl
add
add
xchg
ljmp
nop
jae
inc
add
outsb
mov
scas
xor
clc
repnz
jae
add
inc
fldl
add
in
push
clc
repnz
jae
sahf
add
add
adc
mov
repnz
jae
add
imul
shrl
repnz
jae
jle
sahf
add
push
add
loop
push
mov
xchg
ret
add
data16
pop
sub
clc
repnz
jae
add
sahf
sub
mov
xchg
ret
add
add
add
add
cmp
mov
xchg
ret
jle
jg
add
inc
test
sub
clc
repnz
jae
jno
out
add
mov
ror
sar
repnz
jae
add
xchg
testb
add
dec
cli
inc
add
arpl
xor
clc
repnz
jae
add
jne
xchg
scas
pop
clc
repnz
jae
xchg
lds
dec
push
push
mov
xchg
ret
roll
pop
bound
add
mov
xchg
ret
add
cmp
or
repnz
jae
subb
icebp
mov
test
repnz
jae
add
mov
xchg
fistps
cld
nop
jmp
jle
add
rolb
arpl
rolb
js
dec
adc
cld
nop
jmp
add
inc
add
add
add
mov
clc
repnz
jae
mov
add
clc
repnz
jae
dec
pop
add
arpl
imul
clc
repnz
jae
jle
add
scas
add
std
add
clc
repnz
jae
add
add
inc
ja
sbb
lret
clc
repnz
jae
dec
loopne
add
icebp
out
adc
xchg
ljmp
repnz
jae
xchg
xor
out
mov
clc
repnz
jae
xchg
add
xor
push
add
dec
push
mov
xchg
ret
add
test
add
mov
je
fwait
cld
nop
jmp
add
xor
add
mov
clc
repnz
jae
xor
aam
add
and
dec
outsl
popa
fs
repnz
jae
ret
fwait
out
pop
mov
jae
aam
mov
ja
add
push
mov
xchg
ret
loopne
add
add
mov
add
sub
clc
repnz
jae
mov
dec
outsb
ret
data16
nop
jae
ret
add
add
lea
mov
xchg
ret
xor
add
jle
into
movzwl
push
mov
xchg
ret
add
add
aaa
pop
test
fwait
cld
nop
jmp
dec
xor
add
add
cmp
test
adc
nop
jae
xor
add
add
clc
repnz
jae
inc
add
ja
xchg
gs
push
repnz
jae
xor
xchg
scas
shlb
test
add
add
repnz
jae
add
add
xchg
add
fwait
cld
nop
jmp
loopne
sbb
jp
xor
repnz
jae
add
mov
add
fwait
cld
nop
jmp
divb
inc
add
or
add
add
repnz
jae
es
mov
clc
repnz
jae
add
add
push
clc
repnz
jae
xor
in
add
push
clc
repnz
jae
sahf
sahf
add
push
push
add
push
mov
xchg
ret
add
add
mov
sub
movsl
push
add
clc
repnz
jae
bound
sbb
pop
mov
fwait
cld
nop
jmp
add
mov
inc
clc
repnz
jae
add
fwait
enter
mov
xchg
ret
add
jae
add
xchg
mov
cld
nop
jmp
icebp
xchg
jno
push
add
mov
nop
jae
scas
add
add
push
add
jae
add
add
add
repnz
jae
add
pop
add
add
add
clc
repnz
jae
test
inc
add
add
add
cmp
clc
repnz
jae
add
fwait
add
nop
jae
inc
inc
sub
xor
push
cmp
jmp
lds
arpl
fiadds
add
push
mov
push
mov
xchg
ret
fiadds
rolb
rolb
add
fs
inc
add
add
xchg
add
repnz
jae
jecxz
jle
add
dec
push
mov
add
add
add
nop
add
add
add
add
clc
repnz
jae
xchg
add
fsts
repnz
jae
bound
add
inc
add
fwait
push
dec
call
clc
repnz
jae
es
fimuls
xchg
iret
inc
add
roll
add
sub
clc
repnz
jae
dec
add
xor
enter
add
clc
repnz
jae
add
enter
cmp
repnz
jae
add
add
add
sbb
repnz
jae
add
add
data16
mov
clc
repnz
jae
addb
imul
repnz
jae
add
icebp
xor
and
add
mov
mov
xchg
ret
xchg
add
add
add
mov
xchg
ret
add
test
add
dec
fwait
cld
nop
jmp
add
add
shlb
movsb
add
add
sub
std
incl
roll
and
mov
jb
or
jne
clc
repnz
jae
adc
pop
xor
sub
mov
xchg
ret
jno
inc
add
outsb
add
push
nop
add
jae
cld
nop
jmp
xchg
add
test
add
add
push
push
mov
xchg
ret
rcrb
add
adc
pop
clc
jne
clc
repnz
jae
add
rol
push
mov
xchg
ret
outsb
loopne
add
adc
shl
clc
repnz
jae
add
add
xor
sub
repnz
jae
imul
pop
mov
clc
repnz
jae
jecxz
add
lahf
add
movsl
inc
add
add
mov
clc
repnz
jae
fisttpll
add
imul
clc
repnz
jae
add
in
ja
add
and
add
clc
repnz
jae
mov
mov
mov
xchg
ret
jle
add
mov
or
clc
repnz
jae
add
imul
repnz
jae
jae
xor
add
mov
add
push
clc
repnz
jae
lahf
xchg
ret
adc
rcll
add
nop
jae
sarb
add
repnz
jae
addb
add
ret
add
nop
jae
add
icebp
mov
cmp
xor
add
fwait
cld
nop
jmp
add
adc
repnz
jae
adc
add
rolb
mov
sub
repnz
jae
mov
add
fwait
cld
nop
jmp
add
mov
fcomps
repnz
jae
add
add
aaa
jl
pop
add
add
sbb
add
test
sbb
int3
push
push
mov
xchg
ret
out
add
add
dec
imul
fmull
add
out
add
add
addr16
mov
jg
clc
repnz
jae
bound
loopne
lcall
inc
push
mov
xchg
ret
add
incl
mov
fwait
cld
nop
jmp
add
inc
push
xchg
xchg
dec
rcll
jns
fwait
cld
nop
jmp
imul
mov
mov
xchg
ret
add
add
mov
cld
nop
jmp
xor
add
push
push
aam
loopne
mov
pop
cmp
repnz
jae
sub
scas
lds
push
lods
or
clc
repnz
jae
adc
addb
add
inc
insl
and
clc
repnz
jae
jle
add
cmp
nop
jae
add
mov
add
add
repnz
jae
lahf
inc
xchg
pop
lahf
mov
clc
repnz
jae
pop
dec
add
sti
fwait
cld
nop
jmp
outsb
dec
scas
add
rorb
fsts
mov
xchg
ret
mov
xchg
ret
mov
add
clc
repnz
jae
push
add
xchg
sti
mov
clc
repnz
jae
lds
testb
jmp
lds
in
icebp
add
sub
pop
popf
xchg
clc
repnz
jae
add
add
push
mov
clc
repnz
jae
add
add
mov
clc
repnz
jae
xor
jmp
clc
repnz
jae
add
adc
loopne
andb
inc
add
shll
rolb
xchg
add
lea
fwait
cld
nop
jmp
ret
add
add
add
add
sti
clc
repnz
jae
es
push
xchg
add
sub
inc
add
jne
xchg
add
mov
xchg
ret
add
add
add
in
mov
clc
repnz
jae
add
add
jecxz
fmull
nop
jae
add
movb
repnz
mov
cli
inc
add
jne
sarl
clc
repnz
jae
add
add
add
andb
add
clc
repnz
jae
jecxz
lds
add
mov
xchg
ret
add
add
clc
repnz
jae
add
sahf
add
fldl
andb
mov
add
jae
outsb
add
add
add
jp
mov
add
repnz
jae
inc
add
add
sub
clc
repnz
jae
inc
add
add
jne
clc
repnz
jae
add
fwait
jae
add
push
mov
xchg
ret
rolb
sahf
add
mov
xchg
ret
xchg
mov
sbb
mov
xchg
ret
ret
add
jle
add
aas
mov
clc
repnz
jae
rolb
add
add
push
clc
repnz
jae
mov
mov
aas
adc
idiv
fiadds
add
fcoml
in
ret
add
jns
imul
add
xor
mov
nop
jmp
add
imul
mov
add
push
push
mov
xchg
ret
loopne
mov
xchg
add
mov
nop
jmp
add
lds
add
jno
add
nop
jmp
inc
add
add
add
inc
add
push
mov
xchg
ret
add
add
sahf
add
add
push
clc
repnz
jae
lds
in
add
ret
xor
add
cmc
inc
add
mov
sbb
push
clc
repnz
jae
fwait
add
mov
xor
add
clc
repnz
jae
add
dec
add
idivb
jne
fwait
cld
nop
jmp
xor
add
mov
fwait
cld
nop
jmp
data16
outsb
imul
nop
jmp
pop
add
ffree
xor
jne
clc
repnz
jae
push
add
incl
jecxz
add
es
adc
mov
clc
repnz
jae
add
add
movswl
clc
repnz
jae
xchg
add
add
mov
clc
repnz
jae
add
add
add
add
repnz
jae
inc
idivb
add
jnp
jae
fldl
add
add
inc
popf
test
push
mov
xchg
ret
add
add
jle
jge
push
mov
xchg
ret
dec
add
add
movsb
add
repnz
clc
repnz
jae
sub
xchg
mov
push
mov
xchg
ret
rolb
es
add
repnz
add
add
xor
xchg
xchg
mov
add
idiv
incl
addb
loopne
mov
fwait
cld
nop
jmp
dec
add
addb
add
clc
repnz
jae
mov
add
add
xchg
das
jmp
add
ja
sbb
add
add
add
add
mov
nop
jmp
enterw
add
add
add
inc
lock
repnz
jae
add
add
xor
add
mov
clc
repnz
jae
add
scas
add
add
scas
pusha
push
mov
xchg
ret
mov
add
xor
mov
clc
repnz
jae
aam
mov
add
sbb
push
mov
xchg
ret
add
jns
sar
nop
jae
sub
add
aam
xchg
or
jg
clc
repnz
jae
add
pop
and
push
mov
xchg
ret
add
push
push
mov
mov
xchg
ret
ja
sbb
mov
push
add
mov
mul
inc
add
add
roll
gs
mov
fwait
cld
nop
jmp
jne
xchg
icebp
add
jne
clc
repnz
jae
add
add
aas
add
push
mov
xchg
ret
add
sub
add
mov
xchg
ret
add
add
fwait
cld
nop
jmp
icebp
add
jae
sub
add
repnz
jae
add
add
add
fwait
cld
nop
jmp
loopne
add
add
pop
call
fwait
cld
nop
jmp
outsb
jle
rol
pop
clc
repnz
jae
pop
jae
add
xor
jle
sbb
fwait
cld
nop
jmp
add
add
add
mov
clc
repnz
jae
add
add
xchg
add
repnz
dec
clc
repnz
jae
aam
testb
add
sahf
lds
or
nop
jmp
mov
add
fdiv
stos
clc
repnz
jae
xor
mov
clc
repnz
jae
rolb
add
add
clc
repnz
jae
outsb
xor
mov
mov
popa
movsb
add
rep
clc
repnz
jae
adc
add
xor
add
repnz
jae
fldl
xchg
lds
cmp
repnz
jae
fiadds
xor
add
js
sar
nop
jae
testb
dec
add
cmpsl
adc
add
clc
repnz
jae
rolb
add
jle
ret
clc
repnz
jae
roll
adc
mov
push
add
lea
fwait
cld
nop
jmp
add
add
dec
fimuls
push
test
pop
mov
push
mov
xchg
ret
mov
lahf
mov
clc
repnz
jae
add
mov
add
add
repnz
jae
jecxz
scas
add
adc
repnz
jae
add
sbb
add
clc
repnz
jae
push
add
add
add
mov
fwait
cld
nop
jmp
add
fldl
inc
popa
cltd
mov
clc
repnz
jae
loopne
xchg
add
movzwl
fwait
cld
nop
jmp
add
add
scas
sahf
mov
clc
repnz
jae
jecxz
jne
sbb
clc
repnz
jae
add
add
mov
inc
cli
add
and
push
add
outsb
js
push
mov
xchg
ret
add
mov
out
mov
push
mov
xchg
ret
cmpb
jle
icebp
aad
popa
push
mov
xchg
ret
ficoms
arpl
xchg
xor
add
fstl
mov
xchg
ret
icebp
xchg
add
add
rcrb
out
incl
jecxz
inc
add
add
jne
mov
clc
repnz
jae
add
add
jae
add
add
add
add
push
mov
xchg
ret
xor
and
add
call
clc
repnz
jae
add
jecxz
xlat
or
loope
repnz
jae
jle
add
add
out
jns
clc
repnz
jae
rolb
xchg
lea
clc
repnz
jae
add
add
add
js
les
repnz
jae
bound
xchg
mov
push
or
repnz
jae
xchg
mov
jae
jg
lds
ja
fnstsw
clc
repnz
jae
add
loopne
pop
push
clc
repnz
jae
add
add
add
add
stos
pusha
fwait
cld
nop
jmp
mov
add
icebp
ja
cmp
push
mov
xchg
ret
push
add
test
clc
repnz
jae
pop
add
int3
ret
clc
repnz
jae
add
add
add
add
add
xor
inc
add
rolb
or
pop
roll
xchg
ret
push
add
add
pop
push
push
mov
xchg
ret
test
add
mov
mov
push
mov
xchg
ret
xchg
add
dec
dec
mov
mov
xchg
ret
rolb
jg
add
fwait
cld
nop
jmp
add
rolb
add
add
fld
clc
repnz
jae
add
ja
sbb
test
repnz
jae
xchg
icebp
add
arpl
mov
clc
repnz
jae
add
rcl
add
clc
push
mov
xchg
ret
imul
test
decb
jae
add
add
lds
leave
pop
push
mov
xchg
ret
add
lahf
add
bound
push
mov
repnz
jae
add
arpl
add
ret
fwait
cld
nop
jmp
xchg
xchg
add
adc
cmpl
fwait
cld
nop
jmp
in
sbbb
nop
jae
add
lds
add
nop
jae
add
inc
add
add
or
mov
xchg
ret
add
add
test
xor
push
clc
repnz
jae
rolb
add
jle
add
mov
xchg
ret
add
mov
pusha
add
push
mov
xchg
ret
add
add
lret
and
fwait
cld
nop
jmp
add
add
les
push
jae
repnz
jae
inc
add
sbbb
mov
incl
add
icebp
loopne
add
mov
xchg
ret
add
test
add
clc
repnz
jae
sub
add
add
push
clc
repnz
jae
incl
add
pusha
add
fwait
cld
nop
jmp
addb
add
loopne
aaa
dec
mov
fwait
cld
nop
jmp
mov
addr16
lds
add
je
fwait
cld
nop
jmp
fldl
jle
xchg
cli
dec
push
mov
xchg
ret
add
add
mov
idivb
cld
nop
jmp
fiadds
xor
sbb
out
jne
clc
repnz
jae
add
mov
add
mov
xchg
ret
testb
mov
push
add
add
in
addr16
add
add
pop
subb
xor
dec
ss
clc
repnz
jae
jle
mov
filds
xchg
ret
add
rcrb
mov
add
lahf
add
add
mov
mov
fwait
cld
nop
jmp
addb
add
add
repnz
jae
add
add
call
clc
repnz
jae
add
add
xchg
rcrl
adc
repnz
jae
pop
add
fwait
inc
dec
sub
jl
and
js
inc
add
ret
add
sub
jmp
add
add
adc
test
clc
repnz
jae
outsb
add
inc
fucomp
shr
clc
repnz
jae
fwait
add
add
lds
cld
nop
jmp
scas
jg
add
jae
add
clc
repnz
jae
inc
add
inc
out
fisubrs
mov
fwait
cld
nop
jmp
testb
lds
ret
add
jmp
add
inc
xor
jg
add
add
add
nop
jmp
xchg
add
add
mov
clc
repnz
jae
inc
add
jle
mov
clc
repnz
jae
dec
add
dec
lock
lea
push
mov
xchg
ret
adc
add
in
clc
repnz
jae
in
xor
lahf
add
add
xbegin
cli
adc
add
adc
stos
clc
repnz
jae
add
add
add
add
and
mov
movzwl
clc
repnz
jae
add
add
mov
xchg
add
add
mov
add
sub
repz
mov
add
add
mov
push
mov
xchg
ret
lds
add
add
inc
add
div
fwait
cld
nop
jmp
mov
push
add
add
jmp
incl
xchg
ret
add
jle
add
add
lea
clc
repnz
jae
add
roll
aam
add
cmpl
fwait
cld
nop
jmp
in
sahf
sahf
add
clc
repnz
jae
add
add
outsb
in
and
fwait
cld
nop
jmp
out
sub
sub
sub
pop
push
fwait
cld
nop
jmp
add
xchg
add
xchg
jecxz
add
repnz
jae
test
shl
mov
daa
xor
push
mov
xchg
ret
outsb
ret
jle
dec
add
rcrl
jb
clc
repnz
jae
add
add
mov
dec
add
clc
repnz
jae
xchg
add
add
add
add
pop
xor
fwait
cld
nop
jmp
adc
add
xor
nop
jae
add
add
xor
or
nop
jmp
enter
test
jae
mov
mov
push
mov
xchg
ret
rorb
add
data16
and
xor
add
clc
repnz
jae
xor
pop
mov
inc
add
push
mov
xchg
ret
add
add
enter
push
mov
xchg
ret
add
lds
sbb
nop
jmp
inc
jae
add
lds
iret
add
clc
repnz
jae
add
xor
xor
xchg
fwait
cld
nop
jmp
fiadds
xchg
add
mov
add
fwait
cld
nop
jmp
add
add
ret
add
sub
add
popf
out
inc
add
roll
lods
mov
clc
repnz
jae
add
arpl
dec
arpl
jl
push
repz
jle
add
pop
add
add
repnz
jae
push
add
add
add
add
dec
clc
repnz
jae
add
add
add
mov
xchg
ret
mov
sbb
add
add
add
add
add
add
add
push
add
xor
add
fwait
cld
nop
jmp
add
add
popf
xor
clc
repnz
jae
xchg
fidivs
scas
rclb
nop
jae
add
jno
lock
mov
repnz
jae
in
ret
add
sbb
repnz
jae
add
add
add
add
nop
jae
sub
add
mov
jae
jae
add
dec
mov
fwait
cld
nop
jmp
add
inc
testb
add
test
add
repnz
jae
xchg
ret
ja
adc
rep
push
mov
xchg
ret
add
enter
cmp
push
mov
xchg
ret
jne
test
add
decl
clc
repnz
jae
fisttpll
jle
aam
jmp
jg
add
add
jle
ja
push
mov
in
add
add
add
push
add
or
mov
clc
repnz
jae
out
add
xor
add
add
add
push
push
add
add
push
mov
test
add
add
add
add
push
mov
rcrb
incl
ret
imul
push
fs
repnz
jae
inc
add
into
xor
push
mov
xchg
ret
xchg
add
add
push
jl
sub
add
repnz
jae
add
add
inc
jb
clc
repnz
jae
xor
add
add
add
adc
add
add
inc
rolb
imul
subl
jmp
inc
add
stc
push
push
mov
xchg
ret
xor
lds
lahf
mov
xor
add
fwait
cld
nop
jmp
sub
jne
xor
add
xchg
mov
aad
inc
add
add
loopne
inc
add
sub
inc
add
xchg
add
loopne
cli
call
clc
repnz
jae
out
add
aam
xchg
add
jae
add
in
xchg
incl
fdivrl
clc
repnz
jae
add
add
jle
test
repnz
jae
add
xchg
add
test
add
nop
jmp
add
add
fwait
cld
nop
jmp
sbb
xchg
mov
xchg
outsb
push
mov
scas
fdivrs
popa
jae
jae
out
add
inc
in
mov
xchg
ret
imul
add
mov
clc
repnz
jae
enter
dec
ljmp
mov
xchg
ret
add
fiadds
aam
lds
icebp
lods
xor
clc
repnz
jae
sub
add
aam
rcr
and
add
clc
repnz
jae
add
out
fistl
repnz
jae
xor
add
icebp
mov
loope
add
sub
nop
jae
add
add
jle
push
mov
repnz
jae
add
mov
movsb
clc
repnz
jae
inc
inc
add
add
negb
jmp
add
add
icebp
rol
add
mov
clc
repnz
jae
add
add
add
push
add
nop
jmp
jno
add
add
add
jae
mov
add
mov
nop
add
push
mov
xchg
ret
add
xor
add
add
pop
or
repnz
jae
add
xchg
add
scas
je
fwait
cld
nop
jmp
add
dec
add
mov
xchg
ret
add
fldl
add
add
clc
repnz
jae
testb
add
cmp
fldl
xchg
ret
add
std
push
clc
repnz
jae
fstpl
add
mov
fwait
add
ja
clc
repnz
jae
push
add
das
jne
clc
repnz
jae
add
mov
push
mov
xchg
ret
rolb
add
push
jne
fwait
cld
nop
jmp
add
add
mov
repz
clc
repnz
jae
add
xbegin
imul
jmp
add
dec
movzwl
clc
repnz
jae
test
or
repnz
jae
add
xchg
add
shl
add
add
mull
repnz
jae
xchg
adc
clc
repnz
jae
dec
dec
ret
pop
pusha
push
mov
xchg
ret
add
xor
add
ret
icebp
aam
add
xor
dec
add
add
insl
xchg
fwait
cld
nop
jmp
add
outsb
add
add
icebp
bound
mov
push
mov
xchg
ret
add
add
cmp
popa
add
repnz
jae
xor
jge
rclb
out
add
add
fisubrs
add
popf
je
clc
repnz
jae
push
jle
sub
repnz
jae
lds
roll
or
clc
repnz
jae
add
enter
test
call
clc
repnz
jae
add
movsl
clc
repnz
jae
add
add
sahf
add
cmp
clc
repnz
jae
ret
sahf
sbb
dec
fwait
cld
nop
jmp
sub
testb
loopne
add
dec
push
push
mov
xchg
ret
inc
add
scas
mov
push
mov
xchg
ret
jle
aam
add
inc
sub
pop
add
icebp
fstp
rol
imul
jmp
add
add
pop
mov
fwait
cld
nop
jmp
add
addr16
negl
mov
clc
repnz
jae
add
out
scas
mov
clc
repnz
jae
aam
jg
add
mov
mov
nop
jae
mov
add
add
xchg
in
mov
clc
repnz
jae
jle
add
rcrb
repnz
jae
add
add
fiadds
or
cld
nop
jmp
add
add
repnz
jae
xor
add
add
jo
test
add
sar
mov
xchg
ret
add
xchg
jl
loop
clc
repnz
jae
add
test
add
add
repz
mov
xchg
ret
add
add
jae
pop
fwait
cld
nop
jmp
rolb
rolb
add
mov
clc
repnz
jae
add
into
mov
clc
repnz
jae
xor
add
lds
jle
push
mov
xchg
ret
outsb
add
bound
xor
inc
add
popa
out
inc
add
mov
rolb
adc
rolb
out
add
push
mov
xchg
ret
fldl
xor
fwait
jmp
clc
repnz
jae
loopne
add
arpl
fwait
cld
nop
jmp
imul
lds
add
clc
repnz
jae
adc
jno
movzwl
clc
repnz
jae
add
sbb
dec
mov
xor
fs
repnz
jae
jle
add
testb
push
fwait
cld
nop
jmp
mov
add
test
cltd
jb
clc
repnz
jae
loopne
enter
add
add
add
clc
repnz
jae
sub
add
push
std
inc
add
lahf
sbb
stos
clc
repnz
jae
loopne
fstpl
xchg
or
iret
or
in
lock
incl
add
dec
push
clc
repnz
jae
fisubrs
out
mov
mov
push
mov
xchg
ret
add
mov
jbe
clc
repnz
jae
mov
add
in
sub
cld
nop
jmp
incl
jecxz
mov
adc
jg
jne
gs
repnz
jae
dec
add
add
icebp
adc
popf
mov
clc
repnz
jae
addr16
jle
add
movb
mov
push
mov
xchg
ret
add
add
add
lds
repnz
jae
ret
xchg
ret
icebp
or
fwait
cld
nop
jmp
add
jecxz
push
fiadds
fwait
cld
nop
jmp
rcrb
call
repnz
jae
add
xor
scas
data16
adc
repnz
jae
add
es
add
cmpl
fwait
cld
nop
jmp
add
add
icebp
shr
sar
nop
jae
inc
add
add
cmp
loop
add
add
inc
xor
inc
loope
mov
fwait
cld
nop
jmp
add
scas
test
mov
add
jg
imul
add
add
test
or
jmp
lds
jg
xor
push
inc
mov
mov
decl
aam
ljmp
add
sub
push
in
add
push
add
add
frstor
popa
add
repnz
jae
add
add
jae
mov
nop
jae
in
enter
push
jnp
add
repnz
jae
add
push
mov
add
add
add
add
clc
repnz
jae
add
enter
ret
clc
repnz
jae
add
add
in
mov
clc
repnz
jae
rolb
xchg
dec
mov
clc
repnz
jae
xor
aam
sahf
xchg
lds
adc
and
push
push
push
mov
xchg
ret
add
lds
add
out
pop
push
mov
xchg
ret
fwait
mov
rcrl
inc
add
rolb
add
jp
dec
sub
repnz
jae
bound
mov
cmpl
lcall
loopne
incl
add
mov
clc
repnz
jae
add
inc
lds
push
add
ds
clc
repnz
jae
jle
mov
mov
pop
push
mov
xchg
ret
add
add
add
enter
mov
xchg
ret
add
add
vpsubsb
nop
jae
sarb
fsubs
popa
add
mov
xchg
ret
add
add
and
add
add
push
clc
repnz
jae
inc
add
icebp
push
add
add
add
repnz
jae
add
clc
repnz
jae
mov
xchg
push
sahf
xor
clc
repnz
jae
add
add
lahf
xor
jno
pushl
fwait
cld
nop
jmp
jle
add
add
sarl
clc
repnz
jae
data16
jae
andb
push
mov
add
test
je
xchg
inc
mov
add
adc
pop
repz
add
add
add
add
out
mov
clc
repnz
jae
ja
xor
add
clc
repnz
jae
ja
test
add
in
push
fwait
cld
nop
jmp
icebp
fisubrs
add
add
pop
fwait
cld
nop
jmp
add
add
add
fldl
ja
add
dec
add
clc
repnz
jae
inc
xchg
ja
add
add
push
mov
xchg
ret
add
add
call
clc
repnz
jae
xchg
add
sub
jecxz
add
add
rolb
xchg
add
add
fwait
cld
nop
jmp
add
mov
push
fisttpll
nop
jmp
add
add
add
dec
jmp
xchg
add
jae
add
xchg
mov
inc
arpl
les
fwait
cld
nop
jmp
fucomp
sahf
add
in
add
mov
mov
hlt
rolb
xchg
ret
add
in
add
add
icebp
clc
repnz
jae
xchg
add
add
loopne
and
clc
repnz
jae
outsb
add
pop
imul
mov
xchg
ret
outsb
jg
fldl
testb
mov
fwait
cld
nop
jmp
ja
add
add
add
mov
les
js
jo
fwait
cld
nop
jmp
sub
mov
repnz
jae
add
add
lahf
add
fwait
mov
add
lcall
cld
decl
xchg
add
mov
arpl
cld
nop
jmp
sbb
dec
add
imul
nop
jae
inc
jecxz
add
cmp
loope
add
repnz
jae
add
sar
repnz
jae
xchg
add
fwait
cld
nop
jmp
dec
add
and
add
or
test
add
clc
repnz
jae
xor
add
inc
add
lret
fwait
cld
nop
jmp
jle
incl
add
jno
and
sbb
cld
nop
jmp
add
add
add
pop
popa
clc
repnz
jae
xchg
shl
shlb
cmc
iret
sub
clc
repnz
jae
sub
jle
data16
popa
fwait
cld
nop
jmp
lds
xchg
add
jp
adc
sar
push
add
add
add
ljmp
add
in
rolb
add
pop
fwait
cld
nop
jmp
aam
add
ret
add
adc
inc
add
repnz
jae
xor
fwait
lahf
lds
cltd
jne
clc
repnz
jae
jae
sarb
inc
and
clc
repnz
jae
add
jg
add
mov
clc
repnz
jae
add
mov
outsl
fwait
cld
nop
jmp
push
add
inc
jle
add
fwait
cld
nop
jmp
add
ret
push
push
clc
repnz
jae
add
inc
mov
data16
repnz
jae
loopne
jle
inc
add
iret
inc
add
add
in
sbb
sbb
rcr
lcall
incl
rolb
xor
mov
nop
jmp
add
add
rcll
push
mov
xchg
ret
add
fiadds
fstpl
test
repnz
jae
push
inc
rorb
cmp
cld
nop
jmp
add
ret
test
jae
bound
rolb
add
inc
xchg
add
ss
clc
repnz
jae
jle
add
push
push
mov
xchg
ret
push
add
add
xor
push
mov
xchg
ret
add
mov
add
cld
nop
jmp
add
add
push
mov
pop
cmp
fwait
cld
nop
jmp
negb
xchg
rcll
add
jmp
sar
nop
jae
add
add
jle
mov
jae
loopne
shlb
add
mov
xchg
ret
add
dec
add
imul
push
mov
xchg
ret
jne
add
movsb
add
add
jae
test
xchg
test
add
add
clc
repnz
jae
add
add
test
loope
clc
repnz
jae
add
addb
add
adc
inc
add
testb
pusha
add
pop
mov
clc
repnz
jae
imul
aam
inc
clc
repnz
jae
out
inc
fiadds
mov
push
mov
dec
sub
inc
sub
out
pop
add
jmp
add
inc
mov
sub
add
add
daa
arpl
sub
inc
add
add
testb
add
push
jae
add
xchg
aam
dec
push
add
add
insb
cmp
add
iret
add
add
jns
mov
in
and
inc
aaa
das
rorl
jo
add
xchg
add
mov
push
in
mov
sbb
fsubrl
pop
adc
mov
addb
clc
negl
xor
imul
add
lahf
test
cmp
dec
lret
push
add
fistl
add
rolb
add
add
mov
mov
jbe
mov
out
clc
add
addb
sbb
push
add
add
add
loopne
inc
movsl
adc
mov
adc
mov
cmp
sti
rolb
push
add
push
jmp
mov
inc
add
sti
mov
int
int3
lock
leave
hlt
add
push
mov
movsb
add
scas
leave
addb
mov
add
mov
clc
jo
jmp
dec
and
mov
pop
outsb
jp
stos
outsb
mov
or
push
mov
pop
pop
fistl
add
add
jl
push
add
fsubrs
daa
std
jnp
lret
mov
ds
add
add
data16
stc
addb
add
aas
loop
mov
add
jmp
xchg
mov
add
xchg
add
test
sub
xchg
gs
pop
push
pushf
fwait
mov
out
data16
and
add
or
out
ficompl
lcall
push
cmpsb
add
add
mov
lock
xor
rcrl
xor
xor
xchg
fimuls
mov
jbe
inc
sub
jbe
mov
std
addb
dec
sbb
push
add
dec
lret
xchg
and
add
dec
jg
add
dec
push
add
add
add
mov
cld
xor
imul
cmp
sub
bound
mov
add
scas
cmpsb
add
sbb
mov
jae
ret
lods
movb
jns
add
adc
jmp
pop
push
add
xor
mov
sti
stc
test
add
jb
and
add
add
lea
sbb
imul
rolb
cmp
add
add
mov
add
outsl
inc
sub
cld
fs
add
add
add
jmp
stos
ja
mov
add
cmc
imul
add
add
mov
repz
loop
adc
imul
xor
add
rcr
fiadds
jbe
mov
test
mov
lds
arpl
xchg
stos
dec
sub
mov
add
jb
jnp
cmp
add
enter
mov
cmp
add
test
xlat
test
lret
xchg
add
add
add
loopne
mov
addl
sbb
add
add
add
test
cltd
inc
add
push
outsb
mov
pop
adc
mov
add
stos
aad
cltd
loopne
mov
lods
rolb
and
cmp
push
add
xor
pushl
push
add
inc
and
add
xor
fstpt
mov
add
iret
icebp
xor
repz
add
je
xchg
test
cltd
jg
jno
add
mov
sbb
fs
push
add
add
add
sub
les
push
and
pop
movsb
add
cs
add
cmp
roll
mov
pushf
mov
test
pop
or
or
movb
jae
add
add
jmp
mov
insb
push
lcall
cmpsb
add
jmp
hlt
add
add
add
add
stos
mov
hlt
add
dec
sub
add
add
add
scas
adc
movb
lods
adc
mov
js
mov
and
mov
xchg
adc
mov
iret
adc
pop
mov
add
mov
fsubl
les
aas
xchg
fucomp
pop
sahf
mov
lcall
add
dec
loope
out
mov
add
add
lahf
movsl
mov
jnp
rolb
add
add
xlat
sbb
pop
cs
lcall
data16
and
or
loope
in
push
add
adc
jo
inc
add
sub
xchg
inc
add
cmpsb
add
dec
cmc
mov
lods
push
add
decb
add
fwait
pop
jb
push
add
add
xchg
and
pop
mov
xchg
add
mov
mov
add
adc
add
dec
pusha
add
ret
add
mov
mov
jge
add
test
repnz
mov
sub
sub
add
ret
mov
inc
push
lods
adc
adc
das
push
add
dec
cmp
add
test
mov
adc
xchg
xor
in
repz
mov
add
mov
aas
ret
sbb
mov
add
mov
mov
add
enter
and
mov
int3
lret
fwait
insb
addb
cmp
inc
add
int
add
subl
and
push
mov
inc
add
rolb
ret
add
popf
jne
add
mov
pushf
je
mov
out
dec
in
xchg
add
sub
cmp
jne
add
mov
and
outsb
or
add
int3
jb
cmpsb
add
sub
sub
mov
sbb
xchg
or
add
cmpsb
add
jns
cs
aad
lret
mov
movsb
add
js
sub
pop
pop
mov
dec
inc
add
cwtl
js
mov
cmpl
mov
add
pusha
add
jno
add
add
dec
add
mov
add
add
xchg
add
dec
ffreep
aam
ret
dec
adc
les
sub
or
add
xchg
xorl
push
stos
adc
loope
clc
fwait
push
add
add
scas
mov
scas
iret
stc
fisubl
add
push
dec
test
insl
lds
sti
lret
int
pop
out
or
and
push
add
xchg
loop
loopne
sub
add
ret
scas
enter
lret
push
sub
add
add
add
add
ja
jecxz
fnstcw
pop
push
arpl
add
add
lret
mov
movsb
add
mov
loope
ficoml
add
sti
xor
popf
popf
xchg
add
and
mov
add
sub
add
data16
bound
mov
add
test
mov
add
add
mov
inc
add
or
inc
add
mov
add
hlt
add
add
cmpsl
jne
add
in
add
pushf
call
sub
add
add
insl
push
push
addb
add
jg
dec
dec
xor
aam
pop
cmpsl
aas
les
mov
add
add
lods
dec
push
add
add
add
lds
scas
cmp
pop
addl
and
pop
lahf
hlt
add
add
cmpsl
and
mov
inc
es
in
push
inc
in
rdpmc
ja
push
pushf
shll
scas
lcall
popf
stos
cmp
rolb
out
out
les
xor
in
cltd
ds
push
je
mov
mov
add
inc
mov
nop
add
pop
pop
popf
rolb
bound
mov
add
pop
xor
mov
ds
sbb
roll
sub
stos
dec
and
and
mov
add
out
iret
rolb
cld
push
add
mov
mov
cmp
add
sbb
cmp
xchg
data16
gs
add
jle
fidivrs
or
rorl
add
mov
add
add
mov
data16
popf
add
or
add
mov
push
add
mov
nop
add
push
cld
repnz
dec
hlt
add
push
push
add
jle
add
add
add
add
add
mov
pop
cmp
call
xchg
add
add
add
clc
repz
fisubrl
add
add
fstps
addb
mov
bound
mov
xchg
testb
in
sbb
test
fsubr
lahf
push
add
pop
mov
push
sbb
add
insb
xor
fstl
mov
pushf
orl
hlt
add
add
mov
int3
mov
scas
mov
mov
mov
add
mov
or
bound
mov
movsb
add
cli
out
add
adc
add
pop
xchg
add
add
ret
push
pusha
add
test
fidivrs
add
arpl
jbe
xchg
or
pushf
ljmp
add
mov
icebp
sti
cwtl
xor
dec
adc
rolb
fld
add
je
and
mov
sub
pop
test
jmp
add
imul
mov
lret
dec
sbb
mov
pop
out
add
mov
mov
inc
test
cmc
rolb
lret
mov
add
mov
add
add
add
add
dec
bound
mov
or
add
add
dec
call
jne
int3
loop
pushl
js
movsl
cld
xchg
add
add
mov
add
int3
hlt
add
add
dec
add
mov
add
ret
lret
add
getsec
mov
push
sub
pop
lret
dec
and
add
push
xchg
rolb
aad
xlat
jl
add
stos
push
shl
add
add
jb
leave
mov
and
mov
mov
add
jge
mov
iret
sbb
mov
add
movb
add
les
push
les
xor
scas
xor
jb
bound
mov
jg
in
add
add
add
mov
xchg
inc
add
inc
add
jns
int3
add
mov
loop
fsubl
add
shll
aaa
add
xor
mov
addb
jne
mov
add
mov
fldenv
add
add
repz
add
jo
dec
ret
fisubs
dec
push
add
or
mov
fcompl
adc
out
frstor
int
cltd
subl
cmp
add
add
mov
sub
lret
loope
add
add
jl
je
sti
popf
sub
mov
add
add
add
add
add
or
das
pop
or
lods
enter
mov
push
add
outsl
pushf
jg
add
rcrl
add
jge
inc
into
jae
inc
add
add
push
cmpsb
add
cmp
sub
add
loopne
inc
add
jns
les
outsb
gs
out
xchg
add
add
roll
mov
les
adc
dec
mov
lds
scas
or
push
add
add
add
nop
add
ret
test
jmp
add
add
add
mov
add
mov
xchg
add
in
in
xchg
add
loop
hlt
add
add
fldt
clc
fwait
setge
push
mov
push
add
jmp
in
pop
mov
adc
pop
mov
call
add
push
stc
pop
and
add
add
mov
in
and
roll
add
sub
add
in
lds
fdiv
add
sub
xchg
test
sub
add
cld
jbe
mov
jnp
add
sub
pop
test
and
add
inc
sub
push
cmp
imul
add
mov
in
fisubs
mov
int
dec
push
add
mov
sbb
add
mov
lret
fninit
sbb
add
icebp
pop
sub
in
enter
add
add
sbb
sar
mov
stos
jae
mov
xor
xor
dec
xchg
xchg
jae
add
sarl
xor
outsb
aaa
mov
push
repz
add
js
xchg
or
dec
iret
lods
xchg
lahf
sti
popl
add
jge
cmp
sub
add
push
add
add
ds
add
add
les
jp
add
mov
test
pop
cmp
daa
loop
lret
out
xchg
add
mov
ret
pop
popa
dec
jecxz
jno
inc
add
add
rolb
fisttps
testb
push
xor
sub
mov
add
pushf
out
sub
in
inc
popf
adc
pusha
add
aad
jl
xorl
test
sub
shrl
pop
sahf
jg
out
push
jnp
addb
add
add
pushf
lahf
fsin
push
inc
add
xor
mov
or
or
call
add
scas
movsb
add
fistl
sti
add
cmp
push
ljmp
pop
in
add
add
add
cli
imul
xchg
add
cltd
or
fidivl
add
push
add
mov
ret
inc
add
fadd
outsl
dec
cld
or
add
sti
movsl
jnp
add
outsb
jb
dec
imul
dec
add
fldl
daa
jne
repnz
inc
push
adc
movb
fidivrs
add
add
add
add
fidivrl
pusha
add
add
insb
in
mov
mov
add
jp
pop
popf
in
add
sub
stos
push
rolb
lods
int
sub
icebp
add
mov
out
sub
xchg
push
add
aas
lret
or
inc
add
outsb
xchg
jecxz
add
add
shrl
xchg
and
add
inc
add
mov
pusha
add
inc
lds
push
add
add
addb
sbb
mov
xor
push
jne
bound
mov
add
add
dec
adcl
mov
mov
pop
and
mov
add
inc
insb
insb
stos
mov
add
add
add
and
mov
add
daa
add
mov
push
add
imul
xor
and
movsl
mov
mov
jle
sub
adc
inc
add
repnz
loopne
jo
and
add
inc
add
add
add
lahf
add
mov
mov
push
add
arpl
add
addl
mov
add
pop
mov
aad
mov
fsubrs
cmp
add
add
fimuls
add
add
icebp
dec
fs
mov
adc
mov
popa
stc
pop
std
jecxz
dec
jns
fwait
push
bound
mov
movsl
xchg
add
xchg
and
push
add
add
int
sub
rolb
mov
mov
mov
stos
xor
sub
ret
dec
out
repz
add
add
add
and
aaa
fistl
cmp
add
push
add
add
pop
pop
icebp
inc
mov
arpl
xchg
add
fwait
add
hlt
add
pop
push
lahf
stc
xchg
add
add
lods
mov
mov
inc
add
out
mov
lcall
xor
js
popf
xor
rolb
cs
stos
sbb
jbe
jno
add
jo
fiaddl
add
mov
jbe
cmp
push
add
cmpsl
test
dec
jg
mov
pop
mov
mov
cmp
cld
and
nop
add
cld
mov
daa
jge
add
aas
inc
sbb
pop
loope
mov
js
test
outsb
mov
sub
js
cltd
adc
add
ret
push
add
in
or
aad
cmp
data16
add
push
add
sbb
add
mov
cmpsl
jns
add
add
pop
xchg
sbb
push
add
popa
shrl
lods
rolb
outsl
pop
testb
daa
or
fs
add
add
imul
dec
add
adc
xor
sahf
loopne
xchg
imul
add
add
fimuls
jmp
popa
mov
cmp
sub
add
cmpsb
add
dec
mov
fsubl
dec
add
mov
shll
jb
mov
rcll
add
enter
mov
addr16
lods
or
adc
pop
into
fistpll
add
fdivrl
jge
pop
imul
mov
or
xchg
dec
cs
jl
push
add
xchg
xchg
add
add
and
lock
add
mov
enter
dec
data16
test
push
inc
add
sbb
mov
jle
dec
fisttps
add
sub
xor
push
add
jne
sub
movsl
das
popf
rolb
push
add
xchg
jno
jno
push
inc
add
add
adc
clc
cmpsl
gs
add
push
add
pop
dec
popa
sbb
mov
repnz
sbb
adc
push
xchg
add
add
popf
push
andl
dec
cltd
lahf
push
add
add
add
fisubrl
add
inc
jl
add
add
add
or
rolb
mov
add
add
add
mov
mov
dec
movsb
add
add
add
and
mov
fsts
xlat
cwtl
arpl
add
and
add
push
mov
dec
test
xchg
jns,pt
add
int3
out
sbb
std
in
roll
add
jp
add
adc
mov
add
cwtl
mov
pop
aaa
mov
and
dec
outsl
pop
shll
adc
sbb
add
add
add
call
push
ljmp
adc
out
cmp
jecxz
add
sub
in
xchg
mov
jmp
ret
test
add
add
jmp
add
insl
xor
push
add
add
jp
and
pop
addb
jne
add
rolb
jns
movsl
jp
dec
leave
jnp
sbb
jmp
add
sbb
std
xor
or
cld
or
adc
push
jne
jp
cld
mov
lock
add
fstpl
int
lock
add
push
add
pop
xchg
mov
aas
cmp
cmp
cmp
add
add
insb
xrelease
mov
movsb
add
add
popa
testb
cmc
add
movsl
mov
xor
xor
inc
add
mov
add
add
in
pusha
add
roll
or
add
push
push
mov
push
inc
add
pushf
notl
out
dec
and
mov
stos
test
jae
add
scas
aad
add
jl
mov
add
lock
add
jmp
or
push
inc
sub
mov
mov
mov
in
mov
ds
add
divl
add
push
dec
dec
sbb
add
aas
out
dec
add
add
js
mov
inc
add
add
xchg
adc
xchg
out
add
add
add
pop
lock
jns
push
and
mov
in
xor
ret
fisttps
lret
and
add
clc
out
add
addb
pop
lods
sbb
add
jno
add
mov
aaa
scas
mov
pop
adc
add
sub
jne
les
aam
je
jle
sub
add
mov
add
addb
fstl
sbb
bound
mov
repz
insl
fndisi(8087
dec
lea
fimull
or
push
mov
inc
push
lcall
add
add
cmpsl
inc
jbe
adc
pop
sbb
push
add
add
add
jns
jl
xchg
inc
andl
adc
out
mov
xchg
sub
add
fwait
or
add
sub
add
sti
mov
out
inc
add
das
mov
les
cmpsl
fimuls
outsl
lock
add
push
addr16
adc
mov
gs
sub
add
xor
cmpsb
add
inc
add
test
add
add
pop
xchg
add
cltd
rcl
xchg
mov
bound
mov
les
pop
lea
popf
movsl
inc
add
lds
les
pop
int
daa
sbb
add
add
fdivl
and
mov
add
add
and
sbb
loopne
movsl
test
and
mov
push
add
in
adc
and
mov
lahf
rcll
lea
and
cmp
iret
push
cmp
ror
cmc
jl
pop
xchg
add
pop
sub
add
pop
mov
out
test
popf
cmp
mov
add
dec
jnp
jecxz
add
out
imul
add
dec
loopne
and
mov
or
arpl
cmp
mov
in
add
add
mov
add
xor
mov
lods
addr16
bound
mov
lahf
dec
cwtl
jns
daa
inc
pop
ljmp
sub
scas
fsubrl
add
xchg
add
ret
xchg
add
inc
add
push
add
sub
add
add
dec
mov
aaa
pop
call
inc
xchg
addr16
jmp
jo
mov
add
add
pop
call
adc
mov
and
gs
mov
jno
ficomps
roll
cmp
call
das
mov
movsb
add
pusha
add
pop
mov
cmp
add
out
rolb
jge
test
jmp
add
lea
mov
add
adc
or
inc
add
sbb
arpl
loopne
stos
scas
adc
fst
xor
sbb
mov
fistpll
add
dec
repz
add
daa
rolb
mov
mov
repz
xchg
repz
rolb
test
movsl
pop
les
jb
insl
push
add
cmp
xchg
std
xchg
add
add
dec
mull
jecxz
jmp
add
xchg
sahf
add
mov
imul
add
xchg
add
mov
loopne
outsl
popf
roll
add
sub
rolb
xchg
add
ss
rolb
dec
pushf
push
fistl
lock
cltd
out
push
fistps
push
add
data16
in
movsb
add
rolb
mov
and
gs
fsubrs
cmpsl
adc
or
or
add
add
pushl
mov
pop
je
sub
add
add
sbb
inc
add
add
jmp
mov
inc
pushf
push
xor
inc
int
add
cmpsb
add
add
js
add
add
xchg
cmp
add
hlt
add
add
add
mov
fcoms
movsl
dec
loope
mov
pop
pop
mov
add
cs
add
out
xor
xchg
sbb
test
lea
add
add
push
mov
rcr
xor
mov
inc
add
lcall
cli
mov
movsb
add
add
add
pop
call
add
lret
divl
fildl
add
add
add
lock
scas
into
ds
jl
loope
das
mov
add
andl
lds
test
fiadds
add
insl
push
cmp
add
add
and
dec
jg
mov
add
add
jne
stc
dec
ljmp
jge
add
cmp
out
add
shll
in
pusha
add
pop
add
add
lret
pop
jle
or
cwtl
jl
xor
mov
lods
fildll
pop
into
fcomi
add
out
sti
int3
mov
mov
xchg
jb
add
faddl
add
mov
mov
xor
iret
mov
mov
push
scas
add
lret
add
mov
xchg
add
mov
test
inc
dec
push
cwtl
arpl
popf
xor
xchg
add
mov
addb
and
mov
fsubrs
and
pop
clc
push
mov
mov
add
call
add
xchg
add
push
adc
add
movsb
add
ret
xor
jl
push
add
ret
pop
xor
pop
repz
add
add
repz
mov
push
fmul
cmc
in
and
mov
push
add
lods
outsl
push
dec
mov
scas
pop
mov
test
fadds
add
cmc
data16
mov
jg
in
add
add
mov
lret
xor
or
dec
jp
xchg
cmp
mov
add
add
mov
pop
mov
add
add
add
mov
and
push
inc
add
add
xor
push
xor
stos
xchg
add
sbb
add
pushf
data16
sahf
andl
enter
aam
movsb
add
mov
or
imul
cmp
testb
add
add
adc
add
add
mov
mov
cmp
add
add
mov
mov
stos
jmp
add
cmc
cmp
jmp
push
popf
dec
add
mov
mov
out
gs
xor
addb
inc
mov
add
fcmove
or
add
sbb
add
add
add
add
and
sbb
push
add
add
mov
jns
pop
addb
mov
cmp
int3
daa
jae
repz
add
in
clc
add
mov
and
sub
inc
ret
add
mov
sbb
inc
add
ret
sti
xchg
add
cmp
rolb
lock
std
push
dec
push
add
jmp
push
add
stos
mov
cmpsl
or
cltd
push
sti
dec
adc
push
add
scas
dec
iret
add
add
add
pop
insb
push
add
add
xchg
add
stos
mov
push
cmp
or
xor
add
fdivs
mov
push
add
inc
add
add
scas
pushf
lods
add
mov
add
and
mov
mov
mov
fcoml
add
mov
loopne
dec
test
jle
add
in
mov
aad
mov
fadds
add
push
adc
aas
jns
cs
out
push
lock
jp
xor
in
pop
icebp
cmc
dec
cmp
push
add
push
enter
add
adc
sti
mov
add
cli
inc
add
add
ljmp
mov
es
data16
pop
sbb
dec
jnp,pn
add
sub
out
rolb
jmp
mov
mov
or
sbb
adc
jmp
mov
inc
add
std
es
add
add
add
fcmovnb
aaa
std
hlt
add
int3
fcmove
rcrl
add
lea
addb
xor
xor
icebp
ret
add
push
mov
lret
xchg
or
add
push
outsl
addb
add
adcl
cli
jle
jns
xchg
add
mov
movb
stos
xchg
lret
fidivs
add
decb
addb
cmp
in
imul
cli
inc
add
lods
push
mov
jecxz
ror
or
jbe
dec
mov
push
add
aaa
sbb
cmpsb
add
pop
push
add
add
add
add
movsl
imull
pop
in
insb
jecxz
les
and
add
push
add
add
fwait
repnz
cs
hlt
add
divl
push
add
outsl
dec
and
out
or
mov
mov
xor
mov
jne
into
repnz
add
js
test
cs
push
mov
leave
push
rolb
cmp
xchg
xchg
dec
mov
addb
xchg
push
lret
or
outsb
addr16
adc
add
add
mov
cli
mov
popa
cmp
push
aaa
outsb
aad
clc
insl
xchg
or
add
add
push
addb
mov
xchg
int3
rcll
adc
sbb
test
add
shrl
neg
std
fcomp
popf
ja
add
add
aaa
push
add
jns
add
sub
add
mov
sub
add
jno
add
push
add
mov
dec
rolb
push
and
add
cmc
push
push
inc
add
jle
add
int3
cmpsl
js
add
add
add
dec
movsl
std
jb
cmp
add
movsl
aad
scas
or
test
popf
std
mov
mov
add
fildll
int3
inc
add
mov
aaa
pop
xchg
add
loope
addb
jle
and
mov
add
mov
cmpsl
out
iret
and
add
mov
add
add
xchg
add
push
add
add
out
insl
subl
xchg
cwtl
xor
mull
add
into
out
shll
pop
loopne
bound
mov
jns
add
ljmp
add
mov
repz
je
push
les
cwtl
lret
add
add
pop
fnsave
bound
mov
dec
push
add
mov
add
add
cmp
pop
jae
in
dec
mov
add
mov
jle
test
add
xor
add
inc
add
mov
pop
out
sub
xor
sbb
scas
jbe
dec
dec
arpl
add
add
inc
fistpl
push
stos
in
aaa
imul
movb
ds
int3
movb
stos
pop
movb
sbb
stos
or
adc
aas
int
add
mov
into
mov
inc
addr16
mov
mov
mov
pusha
add
je
mov
aaa
cltd
inc
fdivr
jp
push
add
xor
enter
or
movsl
scas
aas
mov
add
cmp
out
fstl
add
mov
lods
sub
test
mov
add
cmc
test
aas
mov
push
add
scas
add
fidivrl
addb
inc
add
lcall
enter
add
ret
lcall
dec
xchg
add
adc
add
int3
dec
xlat
xor
sbb
or
add
xchg
add
add
or
add
mov
rolb
add
add
add
daa
add
mov
mov
xor
add
lcall
sbbl
jl
fisttpl
adc
fsts
mov
mov
mov
dec
inc
add
add
int
add
add
add
negl
add
add
fwait
aaa
jae
add
lea
add
and
add
int
add
jmp
rol
pop
and
mov
cmp
add
out
mov
add
mov
testb
movb
xchg
add
xor
push
repnz
stos
push
xchg
add
leave
popf
xchg
add
rolb
inc
mov
add
push
push
add
add
add
notl
fisubs
add
lahf
test
add
ds
cmpsb
add
pop
push
inc
call
add
mov
stos
dec
leave
inc
pusha
add
sbb
fchs
add
cmp
out
or
jmp
dec
ficomps
cmp
add
mov
lods
iret
push
add
mov
add
nop
add
xchg
gs
add
ffree
sub
repnz
lea
stos
xorl
add
movsb
add
inc
cwtl
and
mov
add
add
sbb
add
lret
cmp
sub
push
add
dec
ret
mov
add
xchg
add
and
rolb
pop
and
mov
sub
test
sbb
add
inc
add
add
test
je
mov
add
xor
rolb
or
jbe
adc
or
add
bound
mov
icebp
push
add
and
jbe
pop
rolb
pop
in
ljmp
and
cmpsb
add
add
mov
das
push
add
sub
mov
vunpcklps
xor
jbe
mov
repz
cmp
inc
aam
add
and
jmp
scas
sub
data16
add
cmp
pop
pop
mov
lahf
es
add
ss
cmp
xchg
add
xchg
add
fmuls
cmp
add
lds
add
sbb
add
xchg
mov
sub
insb
mov
lods
cmpsb
add
mov
xor
subl
adc
inc
add
mov
stos
pop
and
pop
cld
cmpl
add
mov
addb
xchg
sub
add
add
testb
pop
pop
out
mov
aas
addb
imul
inc
add
adcl
add
and
mov
add
add
add
dec
dec
mov
xchg
pop
pusha
add
cltd
test
mov
add
mov
aad
add
pop
in
in
sbb
jb
inc
sub
mov
daa
cmpsl
xchg
add
add
or
add
mov
add
pop
adc
xor
push
sub
out
pop
dec
rolb
outsb
daa
icebp
into
or
insl
or
fs
scas
repnz
pand
pushf
fdivrl
adc
arpl
cmpsl
add
add
cmp
add
stos
data16
add
xchg
daa
add
pop
xor
repz
and
in
out
mov
imul
scas
mov
pop
adc
and
xchg
add
shl
jecxz
add
add
jg
jg
test
add
test
mov
shll
add
add
js
arpl
in
int
into
enter
inc
push
ret
dec
out
nop
add
add
add
dec
xchg
add
cmp
movsl
mov
add
xchg
adc
add
sbb
faddl
data16
pop
filds
rolb
pop
test
adc
push
pop
cli
and
in
xchg
test
sti
sub
divps
subl
cmp
frstor
add
adc
adc
leave
xlat
mov
popf
xchg
or
data16
sbb
push
mov
adc
cmp
loope
fistpll
jmp
cltd
inc
add
add
mov
stos
inc
add
test
lods
sbb
add
add
add
lock
clc
aad
div
dec
addl
mov
jns
jnp
push
mov
adc
xor
push
add
cmp
popa
fs
add
testb
cwtl
das
dec
xlat
and
in
and
sbb
or
add
and
mov
inc
xchg
and
mov
pop
movsb
add
add
add
arpl
dec
je
jo
mov
mov
es
add
push
and
enter
add
sti
aad
ljmp
add
add
mov
cmc
pop
lock
jl
mov
pop
dec
stos
loop
xchg
cmp
mov
mov
add
xchg
mov
out
jge
xor
cmpsb
add
add
sub
sub
dec
aaa
push
add
cmp
cs
sub
dec
insl
xchg
add
mov
add
add
lret
sbb
cmp
add
cmp
mov
or
aad
add
out
jae
fstl
add
add
je
leave
add
movsl
mov
dec
daa
adc
repnz
add
divl
insb
xor
mov
jecxz
add
sbb
adc
sbb
dec
filds
xchg
pop
cmp
mov
jmp
arpl
bound
mov
add
cld
movsl
xchg
add
and
mov
add
sbb
jp
aad
add
adc
roll
test
add
add
lea
sahf
mov
add
std
pop
outsb
and
xor
stos
rolb
and
cwtl
nopl
mov
sub
push
add
mov
pop
sbb
pop
nop
add
in
repz
add
cmp
mov
ret
dec
and
jns
int3
inc
add
add
enter
mov
xor
add
add
dec
jecxz
lahf
xor
out
outsl
sbb
push
lock
add
add
add
stos
adc
push
repnz
sub
push
add
xchg
add
mov
push
ret
xchg
add
insb
lods
sbb
push
jo
cli
pop
fidivrs
xchg
add
adc
dec
test
es
mov
add
mov
mov
mov
add
mov
fadd
add
add
outsl
mov
add
push
in
add
idivl
nop
add
add
scas
cmc
xchg
adc
std
dec
jbe
test
addb
add
adc
inc
add
mov
jns
aam
hlt
add
add
add
int
lret
inc
add
add
mov
sub
scas
xchg
out
mov
iret
mov
sbb
loopne
push
add
xchg
add
and
push
test
cld
push
add
jmp
add
xchg
add
mov
push
jle
inc
out
add
add
add
add
add
loope
add
ljmp
dec
scas
xchg
jmp
in
xchg
add
add
pop
jne
add
outsl
or
sbb
add
push
add
sub
xorl
lock
std
pop
mov
mov
addb
mov
mov
jo
ret
xchg
add
and
add
in
and
mov
js
add
decb
daa
jmp
xor
arpl
mov
rcl
push
jmp
push
inc
add
mov
shll
add
add
add
mov
add
pushl
inc
add
sbb
mov
jp
add
or
xchg
add
add
cmp
inc
cwtl
fidivrs
xchg
add
mov
xchg
add
inc
add
add
movsb
add
inc
add
add
push
add
dec
sbb
xchg
add
push
clc
adc
loope
rolb
ror
adc
dec
outsl
mov
and
add
push
lods
jl
ret
mov
out
jg
mov
mov
jg
test
pop
sbb
jg
pop
mov
loop
mov
scas
dec
ljmp
xchg
add
add
mov
add
add
mov
dec
lahf
cmp
test
daa
inc
add
scas
sbb
inc
add
rsm
inc
add
mov
dec
jbe
sub
dec
into
mov
push
xchg
fstpt
add
jns
movsb
add
inc
std
add
mov
stos
mov
add
xchg
mov
push
add
int3
call
out
xchg
add
test
test
adc
clc
push
add
setge
popf
inc
data16
enter
add
sub
add
add
add
ds
jp
nop
add
shl
or
ja
test
aas
iret
mov
xor
cmp
stc
push
add
add
pop
jl
add
pop
outsb
in
dec
inc
add
arpl
xlat
mov
pop
inc
add
add
add
movsb
add
lea
jb
into
sub
testb
add
nop
add
test
cmpsl
push
add
add
dec
and
fwait
cmp
mov
mov
loopne
cmp
xor
jno
xchg
add
jno
add
push
in
sti
ffreep
push
add
testl
xchg
aas
outsb
xor
push
mov
add
stos
call
ret
lds
into
lds
pop
jecxz
out
add
or
dec
pop
mov
mov
add
add
ficompl
les
pusha
add
sti
enter
aaa
mov
fistpl
inc
add
mov
jne
adc
mov
and
mov
add
add
stc
mov
fdivs
push
add
add
add
dec
xchg
add
out
dec
jl
sti
push
add
stos
mov
aas
mov
dec
jbe
jmp
fnstenv
aam
pop
push
add
jle
push
add
std
cmp
in
add
jecxz
mov
jp
add
add
pop
xorps
adc
add
jns
add
add
mov
roll
outsb
mov
add
mov
or
testb
xchg
loop
adc
xchg
sahf
jle
add
and
mov
mov
add
pop
cmpl
je
mov
jmp
add
cmc
int3
or
ficompl
mov
push
imul
ret
sbb
push
add
mov
cmp
cmp
lods
push
ljmp
les
popa
jne
ret
xor
dec
push
aad
cmc
mov
add
stc
jns
inc
add
scas
movsb
add
inc
lods
pop
jge
jae
pop
add
add
lods
jns
pop
arpl
push
add
add
aas
push
addb
xlat
adc
jle
xor
frstor
cmp
jg
cmp
or
sub
adc
out
inc
out
mov
sub
adc
mov
aad
cltd
fcmovnbe
push
add
add
add
add
add
mov
sti
nop
add
jno
add
adc
add
add
add
push
add
add
or
add
data16
push
in
test
stos
jns
and
dec
sbb
xor
loop
or
fnstsw
jbe
push
add
and
inc
mov
cmpsl
punpcklbw
mov
add
add
add
fistps
sub
add
add
add
add
rolb
push
mov
mov
test
add
and
mov
clc
push
add
xchg
mov
lock
add
mov
test
out
sbb
inc
add
cmp
add
add
cltd
daa
jp
add
in
add
xchg
lcall
add
cmp
add
aad
mov
test
inc
ja
add
rolb
xchg
add
inc
jno
mov
add
mov
jno
test
dec
mov
or
cmc
mov
add
add
frstor
add
mov
jecxz
add
add
lret
adc
loop
cmp
xlat
rep
aaa
fcompl
stc
push
add
add
cmc
outsl
cmc
cmp
push
add
movsl
cmp
add
loop
cmp
inc
add
add
add
add
mov
add
mov
fiadds
mov
or
lahf
in
out
pusha
add
or
mov
outsl
cli
jge
dec
pop
sbb
mov
mov
mov
pushl
insb
mov
add
or
mov
aad
add
sbb
add
add
inc
add
push
ja
in
pushf
ret
divl
scas
mov
jne
add
add
mov
xchg
into
divl
xchg
add
fistl
subl
inc
ret
jmp
rolb
inc
add
and
add
cmpsb
add
pop
mov
cmp
or
add
add
fists
xor
rolb
imul
pop
into
gs
jle
add
dec
rolb
inc
add
mov
repz
fisubs
add
dec
adc
jecxz
in
imul
add
add
mov
cs
add
rolb
inc
orl
add
rolb
data16
repnz
add
repnz
mov
push
add
add
movsb
add
test
add
add
daa
lods
out
mov
lods
int3
jbe
add
add
push
add
or
mov
addb
or
sbb
mov
ret
and
add
rolb
and
mov
xor
dec
jmp
xchg
adc
dec
and
add
sbb
add
cltd
dec
notl
mov
pushf
xchg
adc
hlt
add
fidivrs
pop
stc
lods
push
sbb
mov
add
in
cmp
repnz
ja
mov
ret
ljmp
aas
cmp
add
mov
add
test
mov
xor
jecxz
dec
sbb
add
or
add
and
mov
test
into
aas
sbb
jge
cmp
jno
mov
call
fcoms
cmpsl
jae
dec
inc
data16
addb
hlt
add
jb
cmp
hlt
add
jae
test
roll
xorl
ja
dec
mov
add
dec
rolb
add
fstps
mov
pop
xor
pop
inc
add
and
lret
addb
call
push
jae
sarl
iret
cld
or
xchg
xor
add
add
bound
mov
add
mov
and
mov
add
sahf
pusha
add
faddl
cltd
fwait
call
add
xchg
xor
mov
shl
in
xlat
mov
adc
rolb
add
mov
pop
mov
jl
aas
push
add
add
mov
and
add
rolb
insl
dec
call
popa
mov
pop
addr16
add
push
sbb
js
loopne
insb
push
add
push
add
xor
out
or
hlt
add
outsl
inc
add
add
mov
add
add
add
out
adc
sahf
jecxz
push
add
out
xor
and
mov
add
inc
add
sub
sbb
clc
mov
adc
decl
add
mov
add
sbb
xchg
add
push
add
add
ret
add
pop
pushl
jl
jl
xor
inc
lock
mov
add
or
js
sbb
add
add
mov
adc
or
add
add
add
repz
je
xchg
je
rolb
movb
shll
add
insb
sub
cmp
leave
mov
ret
add
add
mov
xchg
and
ret
out
jnp
add
sahf
jecxz
data16
jne
xchg
add
mov
jbe
fldl
mov
mov
sbb
movb
iret
cmp
adc
aad
add
jbe
xor
int
mov
push
jns
mov
add
add
pusha
add
out
add
add
add
test
mov
xchg
lea
add
add
xchg
add
stos
mov
add
sbb
sti
ret
add
mov
mov
add
sahf
push
add
push
add
add
loopne
jo
mov
add
add
add
add
mov
pop
pop
adc
lret
add
xor
les
pop
inc
dec
fmuls
pop
movsl
or
add
xchg
add
xor
pop
stos
out
add
js
rcl
add
dec
jp
jecxz
aam
sbb
roll
mov
in
dec
mov
ja
add
movsb
add
lret
add
mov
inc
cmpsl
dec
lea
scas
outsb
push
sub
test
mov
addb
add
sub
add
mov
aad
add
jle
add
add
add
cltd
test
cmpsb
add
and
cltd
lods
jb
sbb
jmp
hlt
add
pushf
jbe
mov
mov
mov
sub
pop
sbb
inc
add
cmpsl
movsb
add
scas
cmp
add
push
add
add
push
das
je
call
add
push
push
add
loop
bound
mov
and
add
push
lahf
rcll
fbstp
adc
add
add
mov
std
jmp
les
in
add
jb
pop
push
add
iret
xor
push
faddp
in
scas
add
add
mov
bound
mov
add
add
add
pop
loop
js
dec
push
imul
xchg
add
adc
pop
and
or
sbb
add
aam
mov
add
mov
cmc
mov
add
dec
add
add
daa
outsb
in
pop
lcall
add
out
cmpsb
add
jo
mov
sub
mov
add
popa
out
fnsave
inc
cmp
dec
mov
adc
jl
aad
imul
and
mov
add
mov
sbb
inc
add
add
xchg
add
add
addr16
add
jns
js
jb
and
add
ret
cmp
cwtl
mov
push
add
fbld
cmp
add
roll
add
add
imul
add
push
pop
jmp
and
mov
test
imul
mov
add
mov
cmpsb
add
mov
pop
and
mov
add
push
mov
add
jle
dec
add
add
add
mov
pop
outsb
mov
xchg
pop
iret
mov
testb
dec
mov
xchg
mov
or
add
add
inc
add
or
sub
jl
add
add
sub
lods
fwait
adc
jg
sbb
stos
sahf
sbb
cwtl
inc
pop
dec
xor
movsb
add
in
lret
xor
jnp
in
dec
pop
inc
add
add
add
add
outsl
sub
pop
dec
imul
ret
mov
addb
les
nop
add
movl
add
in
sub
sub
push
add
add
gs
cmp
dec
ds
add
mov
mov
roll
add
fwait
icebp
mov
cmc
push
add
inc
add
inc
fcmovu
cmp
add
add
push
aam
or
adc
shrl
test
add
fidivs
stc
mov
clc
out
aam
pop
jge
push
or
popf
lret
test
inc
add
in
inc
add
xchg
mov
add
inc
add
icebp
add
mov
repz
add
add
jmp
jle
mov
ja
aaa
fnstenv
mov
push
add
and
lret
addb
add
addb
and
mov
in
mov
add
cmp
sub
add
stos
pop
mov
push
add
mov
mov
add
add
jg
sbb
mov
add
inc
sub
out
inc
shrl
add
mov
or
sbbl
sahf
or
pop
cmp
mov
add
mov
adc
cmpsl
mov
scas
leave
lret
adc
xchg
sbb
and
mov
mov
shld
mov
add
aad
add
lods
decb
lods
add
add
sahf
nop
add
push
lea
cmp
add
mov
movsb
add
mov
add
sub
xor
or
stos
adc
jecxz
add
dec
cmp
outsb
or
and
sbb
insl
dec
xchg
cmp
mov
aam
js
and
mov
stos
xlat
arpl
add
or
insb
pop
xchg
or
add
loop
xchg
loope
fstl
add
mov
pop
xor
cli
jo
add
aad
fmull
xor
mov
popf
mov
cmc
fdivs
ljmp
sub
cmpsb
add
add
insl
incb
add
jge
add
addl
add
mov
xor
lret
lret
add
add
movsb
add
cld
add
loope
movb
dec
jbe
push
add
lcall
jo
sbb
fidivrs
add
cmp
out
cmove
out
cwtl
xor
test
mov
mov
add
add
inc
add
aam
scas
insb
bound
mov
add
test
adc
push
add
cltd
sub
lods
jbe
movb
add
mov
xor
leave
enter
movsb
add
lcall
jbe
lds
or
add
rorl
testl
add
js
jo
imul
push
add
imul
mov
sti
fcoml
fadd
and
mov
mov
push
dec
outsl
xchg
add
mov
enter
movsb
add
add
cmc
dec
adc
rcrl
ds
test
and
popf
or
add
add
dec
mov
add
add
rorl
cs
adc
inc
add
jmp
add
in
push
mov
add
ret
mov
into
movb
add
das
loope
add
mov
ljmp
movsb
add
add
dec
cmp
sbb
add
add
clc
lods
nop
add
bound
mov
int
sub
inc
mov
dec
leave
and
add
out
pusha
add
outsb
hlt
add
add
add
cld
testb
mov
add
lret
lds
pop
adc
or
add
xchg
add
and
and
mov
cmp
add
mov
add
mov
stos
jl
fstpl
add
add
dec
xor
sub
int3
mov
sub
ficomps
xchg
add
push
roll
loopne
loopne
int3
nop
add
adc
pop
testb
add
repnz
add
or
nop
add
push
push
add
jmp
inc
mov
cmp
push
fimull
add
inc
add
mov
cmp
scas
movsl
ficomps
pop
cmpsl
cli
cmc
jmp
add
sbb
xchg
sub
sbb
lret
call
ffreep
xchg
inc
add
add
jmp
rcrl
in
out
fstpl
lcall
and
mov
add
and
add
cmpsl
hlt
add
jle
mov
bound
mov
rolb
mov
xchg
add
mov
xchg
xchg
xchg
add
rolb
mov
mov
add
je
loope
cwtl
out
sti
xor
push
sahf
lods
ds
fldl
xor
add
add
add
mov
int
test
jne
jmp
icebp
ljmp
pop
pop
jne
cmp
addb
jl
add
cwtl
sti
inc
test
add
inc
add
mov
xchg
addb
loop
inc
add
cwtl
mov
mov
das
std
sbb
add
int3
jge
add
add
sub
add
xor
mov
mov
addb
test
add
sub
jmp
jns
repz
in
ss
push
add
or
ljmp
sub
add
add
sbb
cltd
lahf
or
imul
addb
dec
lcall
fprem1
add
and
mov
push
push
test
jo
sbb
jge
popf
into
imul
mov
out
mov
loopne
js
cwtl
dec
inc
add
pusha
add
push
add
mov
push
adc
jp
shll
add
ds
cmpsb
add
pop
nop
add
sub
fdivs
pusha
add
add
pop
loopne
call
push
aas
addb
fdivr
push
sub
mov
inc
mov
add
jae
enter
jb
std
testb
faddl
push
jbe
xchg
nop
add
add
add
addb
push
add
fisttpl
xorl
mov
add
mov
call
add
mov
or
in
rolb
aam
adc
or
fbstp
add
add
data16
iret
dec
inc
ljmp
add
test
add
push
loope
addr16
pop
adc
insl
in
inc
push
in
jmp
aas
punpckhbw
add
add
mov
add
push
jge
testb
cmp
sbb
jl
add
jns
sub
js
aad
add
jbe
fwait
jecxz
das
fsubrl
into
fisubrs
out
sti
cwtl
adc
bound
mov
add
das
mov
aas
mov
add
or
add
mov
lcall
xchg
movb
add
inc
add
add
adc
loop
cmc
shrl
xchg
xchg
add
add
jg
add
lahf
add
add
adc
push
mov
mov
push
and
add
das
popa
sahf
mov
adc
add
fstl
and
mov
js
shll
shrl
xchg
push
or
cmovp
movsb
add
iret
or
lret
fadds
jno
fnsave
and
mov
out
std
xchg
add
add
inc
loopne
push
pop
add
add
cmpsb
add
add
pop
dec
hlt
add
add
fcomi
add
insl
scas
sbb
cmp
aas
dec
sti
test
xor
test
in
pop
aas
sub
inc
add
call
jae
mull
and
rolb
xchg
add
lcall
push
add
add
das
into
cmp
fwait
sbb
mov
pop
iret
add
add
add
add
fiadds
push
add
mov
push
loop
mov
sbb
out
mov
imul
add
push
add
mov
add
adc
mov
lods
mov
out
or
test
pop
adc
add
push
inc
jmp
pop
int3
inc
add
adc
cmp
add
mov
fcompl
jp
ret
mov
add
add
arpl
sar
aas
mov
sbb
add
add
sub
add
mov
or
fsubs
ret
out
push
add
pop
test
dec
aam
mov
inc
lcall
add
sub
test
rolb
std
mov
outsb
fildll
insl
pop
out
fwait
inc
dec
xchg
testb
cld
sub
add
xor
loop
fst
add
add
inc
add
add
push
addb
mov
xor
push
xor
ja
clc
jmp
add
jae
roll
rolb
adc
or
add
jecxz
add
aas
test
add
pop
cmpsb
add
jp
out
mov
out
xchg
push
scas
pop
or
xchg
add
sub
add
add
jns
dec
add
mov
out
mov
add
add
jae
jecxz
inc
rolb
pop
call
push
ljmp
pusha
add
lret
jbe
insl
dec
push
add
xor
mov
sti
cld
rolb
add
stc
sub
and
mov
inc
in
or
stos
ljmp
out
xchg
paddb
add
jnp
add
xchg
sbbl
mov
call
aaa
scas
lret
into
mov
rcr
sbb
addb
add
push
cmp
xchg
add
and
mov
jmp
mov
add
daa
in
add
daa
push
dec
xchg
pop
popf
out
fwait
jo
dec
mov
mov
add
out
lahf
mov
in
push
add
push
add
xlat
inc
add
add
mov
testb
add
add
lods
daa
addb
sti
pop
sbb
add
add
sbb
mov
mov
mov
loop
dec
and
push
add
test
jo,pn
dec
xor
jg
add
mov
mov
push
loopne
pusha
add
add
push
lret
loop
add
and
mov
or
add
add
mov
movsb
add
add
lret
and
add
call
cmp
repz
add
add
add
mov
sbb
add
push
add
pop
add
mov
cs
add
mov
add
addb
push
gs
bound
mov
out
mov
and
mov
mov
pop
movsb
add
sbb
add
les
sbb
rolb
mov
enter
push
lahf
pop
push
add
mov
sub
pop
cltd
ja
add
adc
add
add
les
adc
aam
fldt
pavgb
add
pushf
int3
pop
inc
add
add
adc
movb
aam
mov
mov
dec
bound
mov
add
mov
xchg
add
sub
dec
add
mov
xchg
inc
add
add
aaa
inc
iret
push
mov
lcall
addl
mov
lret
lods
mov
pop
cmc
movsb
add
dec
mov
movb
add
add
xor
cwtl
pusha
add
movsl
pop
pop
fnop
add
add
leave
rolb
imul
jbe
addb
xchg
je
cmp
testb
pusha
add
das
filds
mov
add
pop
sahf
cmp
rolb
scas
scas
sbb
stc
inc
add
out
dec
fcmove
inc
mov
xor
add
add
cmp
add
and
hlt
add
jg
add
add
add
mov
add
xor
sbb
shll
sbb
data16
lods
int
add
xchg
inc
ja
add
and
add
add
and
add
inc
in
dec
cltd
rolb
add
mov
pop
lock
add
insb
cmp
popa
mov
push
add
call
mov
dec
jne
add
sbb
add
add
lcall
push
push
add
enter
jns
push
and
mov
dec
rolb
mov
add
add
fs
sbb
xor
fisttps
fwait
adc
jecxz
mov
outsb
add
xor
cmp
pop
dec
outsl
fcos
add
cmp
add
adc
dec
xchg
movsl
or
cmpl
fdivs
add
scas
in
pop
inc
fmul
pop
fisubl
cwtl
dec
adc
or
and
test
xchg
inc
cwtl
cld
push
xchg
lcall
add
popa
and
cld
mov
add
jo
add
ljmp
pop
add
mov
add
jae
inc
repnz
in
add
addb
data16
sbb
int
and
and
jecxz
movb
ljmp
add
add
add
popa
or
add
push
add
mov
push
out
add
add
cli
rcrl
ljmp
add
add
jp
scas
lret
test
jno
lret
add
adc
push
sahf
sub
add
cwtl
lahf
enter
fbld
mov
add
add
popf
mov
jnp
loopne
jle
pop
push
add
and
adc
mov
ja
js
mov
add
les
std
and
add
add
fistps
cmp
add
sahf
or
add
jecxz
mov
sub
xchg
add
lock
cs
mov
jnp
or
gs
sbb
add
add
dec
xchg
add
add
sbb
adc
mov
or
add
in
cmp
sti
inc
add
imull
jl
xchg
rcll
mov
add
icebp
mov
adc
hlt
add
add
xor
add
dec
push
add
shr
pop
pop
leave
and
mov
and
pop
rcrl
add
add
add
int
add
lds
hlt
add
xchg
add
outsb
jmp
mov
cwtl
and
mov
add
add
dec
push
jns
add
xchg
add
sub
add
mov
xchg
jmp
adc
jle
adc
insb
outsb
cmp
add
add
adc
les
repz
rolb
lods
sub
cld
xor
rcll
cmp
lcall
sub
push
mov
prefetcht2
loop
insb
push
add
inc
add
test
add
cwtl
ja
pushf
jg
mov
fidivrs
xchg
add
out
scas
aam
and
cwtl
jne
aam
jbe
sbb
fidivs
add
jmp
fcmovb
add
add
cltd
sub
xchg
add
out
mull
ljmp
jg
add
add
add
sbb
and
mov
mov
push
add
xchg
add
add
jno
add
add
add
mov
inc
pop
cs
ret
aaa
movsl
test
and
mov
cmp
add
add
add
sub
mov
cmp
arpl
adc
inc
addb
sti
mov
mov
pop
scas
bound
mov
mov
test
dec
jmp
xchg
mov
add
sbb
dec
sbb
cli
dec
jge
addb
lock
sti
fsubrl
push
jns
add
add
jle
add
add
xor
xchg
add
add
out
cmp
add
add
les
sub
call
xchg
int3
jp
add
mov
push
ret
add
out
insl
xchg
testb
in
add
cmp
add
out
mov
fildl
add
add
dec
dec
sub
das
push
mov
stos
rolb
fildll
add
sbb
inc
add
add
test
add
xor
jo
les
xor
cld
ficompl
pop
adc
mov
inc
add
nop
add
ja
or
add
in
push
cmp
add
cmpsl
push
push
fmull
orl
push
add
add
add
orl
stc
ret
out
xchg
mov
sti
lods
testb
jo
push
cmp
add
add
ja
or
addr16
testb
add
jo
popf
cmovnp
add
add
jge
add
cmp
movsl
fbstp
add
add
add
add
sbb
push
cmp
mov
dec
or
xchg
add
add
stos
jo
or
imul
lea
fisttps
int3
loopne
movsb
add
inc
add
cmp
das
sbb
idivl
add
add
outsl
pop
pop
sbb
adc
push
add
add
adc
xchg
add
sbb
ficompl
add
push
add
add
add
sti
push
add
add
mov
xor
add
aaa
sub
add
add
push
fnstsw
mov
cli
mov
insl
in
push
das
push
mov
mov
rcpps
mov
add
scas
les
dec
ljmp
int3
and
add
lea
out
movsl
test
pushf
jge
rorl
in
add
icebp
jns
das
mov
repz
adc
lds
mov
repz
outsl
repnz
rolb
push
in
sub
int
add
add
add
pop
bound
mov
mov
add
add
mov
enter
mov
repz
mov
lcall
lret
jge
cmp
das
mov
add
xchg
mov
sub
add
add
std
call
fidivs
cmp
jae
inc
add
ss
sub
add
loope
xor
add
testl
add
pop
push
add
jg
or
add
mov
inc
add
mov
nop
add
cltd
and
cmpsb
add
sub
sarl
rolb
lods
xlat
jne
push
add
add
cltd
in
pop
repz
mov
add
add
pop
pop
addb
xchg
lods
ds
xchg
xchg
imul
push
add
add
pop
or
fisttpll
pop
iret
dec
test
add
add
cld
mov
movsl
pop
lcall
pop
ja
jmp
add
push
sub
fisttpl
mov
mov
add
sub
xchg
repz
test
movsb
add
add
add
add
add
test
fbld
addb
push
add
leave
ret
subl
fistpl
rcrl
mov
add
mov
cmp
add
addb
inc
add
add
mov
xchg
add
adc
int3
test
daa
insb
push
add
cmp
xchg
cmp
lret
add
add
call
xchg
add
cmp
add
jne
add
add
add
add
add
in
and
xchg
lock
add
add
std
adc
test
add
cmp
jnp
add
pop
xor
push
pushf
imul
loop
aad
add
add
adc
xchg
push
xchg
add
lock
or
inc
add
icebp
push
nop
add
add
push
mov
cmp
xchg
add
movsb
add
add
mov
add
mov
add
inc
xor
bound
mov
cmp
add
jno
mov
test
rolb
arpl
lods
outsl
xor
test
movsb
add
mov
data16
mov
mov
add
inc
add
arpl
addr16
lret
or
add
cmpsl
test
ret
dec
rolb
fbstp
orl
xchg
add
push
insb
test
add
xchg
fs
add
dec
mov
mov
mov
cmp
shl
add
jg
add
dec
fiaddl
out
add
in
inc
add
or
add
add
add
je
adc
in
test
sub
andl
cli
movsl
xchg
add
enter
repz
dec
lea
insl
cwtl
ffree
add
mov
add
test
jp
mov
add
add
add
inc
jecxz
sub
jbe
lret
add
rolb
add
inc
add
add
out
mov
inc
add
jbe
mov
add
ja
jnp
add
add
add
mov
mov
add
mov
add
mov
add
aaa
add
add
add
or
add
rcll
dec
call
js
ss
dec
scas
lret
daa
sahf
sbb
sub
add
cmp
add
push
stc
mov
xchg
inc
add
lret
push
sub
sbb
mov
mov
arpl
out
stos
rolb
arpl
add
jo
jno
mov
gs
jns
add
pop
fistps
subl
dec
jo
and
mov
aaa
push
sub
mov
add
cmpl
pop
sub
add
lahf
rcrl
cli
push
fstpt
add
jecxz
and
mov
cwtl
adc
add
ss
mov
enter
add
add
lock
mov
out
mov
jle
push
add
jp
add
cmp
iret
insl
cmp
add
cmpsl
sahf
mov
pop
sarl
test
lcall
cmovs
orl
add
lahf
inc
fisttpll
outsl
mov
outsl
mov
add
lahf
sahf
test
scas
arpl
add
add
push
repz
or
mov
pop
scas
stos
add
mov
add
icebp
and
add
scas
lea
stc
mov
add
ror
xor
and
mov
sbb
xlat
cmp
repz
add
mov
cmp
inc
mov
lods
jmp
add
pop
mov
dec
clc
ja
mov
sub
pop
inc
mov
call
fs
add
cmp
add
inc
add
adc
addb
adc
jp
ficompl
add
xchg
dec
shrl
adc
orl
into
ret
cld
push
test
je
scas
fwait
lret
sbb
dec
fwait
pop
cwtl
inc
add
rolb
and
mov
cltd
add
add
add
inc
add
mov
ret
cmc
gs
jno
cmp
add
aad
mov
sbb
mov
ficompl
mov
add
add
dec
dec
jecxz
add
dec
dec
mov
pop
fldt
cwtl
mov
sti
call
out
push
add
xchg
add
add
inc
adc
xchg
add
ljmp
adc
add
or
test
or
dec
cmp
loope
bound
mov
jne
add
cmp
add
mov
or
bound
mov
into
inc
ret
dec
add
add
add
jno
push
mov
mov
in
add
add
add
mov
push
xchg
inc
and
mov
fsubp
dec
push
add
pop
xor
enter
add
add
stos
repnz
add
jb
add
mov
inc
add
js
add
aam
jb
daa
dec
push
add
rcrl
lds
and
lods
pop
arpl
repnz
sub
fcmovu
dec
test
inc
add
cwtl
push
add
add
lock
add
add
lods
movsb
add
inc
add
add
fsubrp
popa
add
mov
pusha
add
sbb
sub
icebp
cmp
dec
jmp
dec
rolb
inc
out
inc
cmp
mov
ja
add
pop
pushf
rcrl
xchg
clc
test
inc
add
mov
mov
xchg
sub
cmp
pop
mov
insb
out
bound
mov
jb
les
cmpsl
inc
add
inc
add
dec
or
add
add
add
scas
pop
cmp
addb
lret
add
mov
aaa
xor
in
cli
sbb
add
add
cmp
shrl
and
mov
jno
dec
mov
je
shll
add
add
sub
add
mov
sub
negl
mov
stos
addb
dec
pushf
xchg
mov
add
add
ds
gs
loopne
sbb
inc
cmpsl
or
add
cli
out
out
add
loopne
imul
in
cmp
sub
inc
add
add
add
jmp
add
add
add
cmp
repz
add
fidivs
add
rolb
lcall
das
sbb
js
enter
mov
insb
pop
dec
mov
mov
int
adc
testb
add
int3
loop
movsb
add
aad
ja
loopne
mov
push
jae
scas
movb
adc
add
ljmp
xlat
sub
cld
xchg
add
jno
jg
add
lock
shrl
mov
les
pop
mov
shrd
adc
lret
or
add
mov
add
bound
mov
add
jb
popf
inc
mov
add
sbb
repnz
xlat
jo
lods
fimuls
mov
je
test
cli
loope
add
add
lea
in
loop
pushf
pop
das
aaa
and
add
mov
add
popa
pop
xor
pop
sti
add
ljmp
mov
push
add
push
das
std
aaa
fildl
mov
andl
mov
sbb
mov
dec
mov
sbb
add
add
fsts
add
lret
add
add
mov
insb
pop
dec
add
dec
jl
mov
repz
push
add
add
add
add
mov
out
mov
subl
and
lods
pop
xchg
inc
cmp
mov
sahf
sbb
mov
add
add
inc
sub
fwait
insb
aaa
or
outsl
dec
xchg
add
insl
data16
mov
push
add
xlat
mov
inc
xorl
dec
mov
fsts
cmpsb
add
ja
scas
pusha
add
mov
data16
add
les
aaa
mov
add
add
push
leave
push
and
subl
lfs
aaa
pushf
leave
mov
mov
hlt
add
repnz
mov
rolb
and
mov
add
cld
lret
push
add
and
mov
add
or
add
bound
mov
mov
es
push
mov
fdivr
push
add
push
add
add
add
add
add
cmp
add
loop
cwtl
dec
std
int3
sbb
movb
in
adc
test
sbb
add
loop
scas
mov
add
aas
or
xchg
add
mov
add
repnz
int
sub
jae
movb
jno
lods
push
add
sub
push
add
mov
push
adc
xlat
mov
data16
cmp
jns
mov
push
add
int3
ja
xchg
add
int
add
or
insl
mov
adc
aad
sub
sti
ret
inc
add
ffree
pop
xor
rolb
jo
mov
pushf
mov
mov
add
add
in
mov
mov
and
xchg
movsl
test
mov
movsb
add
xor
mov
jge
and
mov
testb
inc
add
cmp
xor
cwtl
sbb
jge
adc
add
or
out
add
mov
enter
jb
leave
pop
push
mov
cmp
add
js
lds
inc
add
cwtl
pop
jle
xchg
nop
add
add
add
xchg
fnstenv
addb
in
mov
add
cli
clc
aas
scas
cmp
add
push
mov
jns
add
inc
add
cmpsb
add
lret
xor
dec
mov
mull
lret
out
push
sti
mov
fistpll
mov
pushf
bound
mov
ret
ret
add
popf
and
mov
add
stos
mov
mov
test
test
xchg
add
ss
aaa
out
call
xchg
add
sbb
inc
add
add
xchg
add
loop
mov
push
add
add
lods
fucomip
push
lods
aas
int
test
imul
neg
sub
push
cwtl
fsubrp
jg
mov
add
mov
in
mov
add
test
add
add
jb
pop
in
add
cmpsb
add
add
lea
or
sbb
sbb
les
mov
or
or
bound
mov
push
xchg
add
add
mov
cmp
sahf
rcrl
xlat
pop
xchg
push
popa
repnz
add
add
sbb
sbb
add
add
or
add
mov
dec
rolb
mov
add
imul
cmp
add
mov
jbe
mov
mov
sbb
jns
mov
add
push
cmp
lods
mov
add
rcll
stos
test
loopne
pop
xor
nop
add
fstpl
addr16
sbb
inc
add
and
add
add
mov
loopne
jns
add
repnz
jmp
adc
add
rcrl
add
add
jno
jmp
cmpsb
add
add
data16
pop
mov
stos
lock
sbb
stc
xor
add
jge
add
add
add
add
loop
call
add
pop
cmpsb
add
insb
je
je
push
add
mov
push
add
mov
and
push
gs
add
hlt
add
add
add
add
add
mov
or
int3
sbb
add
add
jne
add
add
testb
adc
sbb
dec
add
cmp
dec
rolb
push
imul
test
push
xlat
inc
add
add
out
xchg
add
mov
adc
out
jp
add
add
cmp
iret
fldenv
mov
add
aam
jecxz
xlat
mov
cmp
and
mov
cli
push
add
shll
das
aam
nop
add
data16
and
ja
aad
hlt
add
js
jne
int
add
add
jp
loope
jle
fisubs
add
add
add
ret
add
add
rolb
fisubrs
adc
repnz
add
ds
jle
push
int
pop
jmp
cli
and
xchg
add
add
xchg
add
jle
add
xchg
mov
int
je
pop
ja
mov
cmp
add
jae
or
add
add
xor
out
outsl
mulps
add
add
mov
add
add
sbb
fistl
xchg
push
or
dec
aaa
sbb
add
ljmp
push
mov
push
ss
add
xchg
inc
add
add
lock
xor
imul
or
jp
sub
add
lock
dec
outsb
xchg
add
xchg
dec
mov
add
add
and
pushf
out
cmp
aam
cmp
sub
dec
test
cmp
push
jo
pushf
jl
add
imul
add
cwtl
xlat
cmp
add
in
add
and
mov
cmp
add
add
es
cmp
loop
pop
mov
add
js
or
mov
or
add
add
inc
dec
xchg
add
add
sbb
pop
cmpsl
push
pop
fists
add
add
add
mov
cs
aas
push
add
add
xchg
add
rolb
lcall
jmp
inc
dec
jbe
ret
cmp
add
movb
hlt
add
bound
mov
pop
dec
adc
add
or
add
push
sbb
add
push
add
add
add
ja
add
loope
sbb
sub
mov
sub
inc
lods
and
mov
jno
scas
xchg
cs
sbb
fadds
mov
push
add
cmp
sahf
mov
add
push
add
mov
leave
std
arpl
fsts
add
fistpll
rolb
add
dec
push
sahf
jg
add
or
mov
or
adc
add
sbbl
add
inc
add
mov
cwtl
jmp
xor
lds
add
xor
movsb
add
add
imul
dec
sub
add
add
pop
xchg
add
mov
add
sbb
mov
in
push
jmp
or
scas
inc
add
push
push
pop
xlat
xor
ror
pop
lahf
inc
add
fcompl
aas
push
add
aad
add
add
aam
fcoms
mov
sub
cmp
cmp
mov
addl
or
and
add
add
xchg
add
add
mov
mov
adc
and
add
add
cwtl
jns
add
clc
int
xchg
adc
inc
add
addr16
popf
mov
pusha
add
mov
test
sub
dec
pop
pusha
add
add
and
mov
add
arpl
adc
arpl
outsb
pop
inc
ljmp
jae
shll
mov
lock
movsb
add
movsb
add
dec
and
std
mov
add
add
js
xor
rorl
inc
add
mov
jg
stc
lock
pop
add
mov
clc
fsubl
insl
or
movb
add
or
adc
jns
add
add
add
mov
in
lret
dec
or
mov
aad
addb
add
xchg
add
loope
add
ret
movsl
xchg
pusha
add
addr16
add
add
jbe
bound
mov
push
mov
outsb
inc
pusha
add
add
add
inc
jae
pop
imul
add
movb
add
add
stos
aas
jg
sbb
add
add
add
push
mov
xchg
add
add
add
cmp
add
sub
add
testb
xchg
pop
mov
add
add
add
add
hlt
add
add
add
add
add
rolb
ret
inc
add
arpl
jno
mov
add
hlt
add
xchg
lock
enter
movsl
jns
mov
xchg
xchg
clc
jo
out
repz
js,pt
add
mov
add
out
lahf
lret
push
add
addr16
adc
push
add
add
icebp
es
push
add
cmpsl
cmp
add
and
mov
lea
add
add
insb
out
lea
add
lock
add
ret
inc
add
sbb
out
mov
jne
movsb
add
pop
popa
cmp
cmp
or
ljmp
aas
cmp
fwait
cmp
in
mov
add
add
add
popf
pop
scas
pop
inc
add
adc
mov
ljmp
xor
cli
sub
movb
popf
bound
mov
rolb
add
add
push
add
inc
add
testb
pop
or
mov
sbb
jno
add
test
imul
and
mov
fwait
mov
jge
cltd
into
hlt
add
jb
ret
cmp
cmpsb
add
add
mov
fidivl
jae
mov
je
pop
test
jecxz
daa
int
add
mov
sub
test
xchg
rolb
rolb
xor
nop
add
xchg
add
push
add
sbb
pop
jbe
add
pop
push
sbb
add
je
add
dec
js
add
outsb
inc
xor
dec
out
mov
xchg
add
inc
lret
jecxz
ret
lcall
dec
jecxz
js
sahf
mov
mov
mov
in
outsl
jae
lret
mov
fidivl
cltd
repnz
sub
inc
or
xchg
dec
jno
mov
sti
inc
add
and
subl
scas
jle
add
mov
mov
je
sub
sub
add
add
adc
leave
or
repz
add
dec
add
mov
inc
push
add
add
lea
jae
fld
add
inc
add
jns
daa
jp
sbb
outsl
push
add
ror
ret
sub
add
rolb
add
cmp
out
faddl
dec
sti
pop
arpl
xchg
gs
add
mov
add
mov
mov
inc
mov
mov
or
dec
pusha
add
add
aad
out
lods
data16
test
or
jp
add
lods
sbb
cmp
lds
dec
mov
sbb
xchg
add
add
sbb
mov
rcll
nop
add
arpl
push
and
mov
pop
mov
add
loope
and
cmp
lods
rcll
inc
add
add
cmp
mov
add
push
add
add
addb
lods
imul
mov
dec
cmp
hlt
add
and
add
mov
adc
pop
mov
xchg
add
out
add
test
sub
xchg
add
sub
mov
stos
cmp
cmp
fwait
inc
lock
add
inc
mov
jb
inc
pop
push
int3
test
jge
cwtl
jns
inc
shll
xchg
add
sbb
push
add
mov
inc
mov
cmc
push
add
ja
aam
testl
shll
and
mov
add
pusha
add
hlt
add
lea
cmc
movb
mov
bound
mov
sbb
cmp
adc
add
push
mov
add
pop
cwtl
or
add
mov
xchg
add
mov
add
add
add
add
add
movsl
cmp
mov
nop
add
ret
sub
ds
lcall
dec
xor
imul
add
fmuls
add
mov
and
pop
jp
jle
jne
fdivrp
jmp
add
dec
pushf
push
add
pushf
ret
xorl
popf
hlt
add
add
jecxz
mov
mov
xchg
movsl
in
xchg
add
sahf
mov
rolb
out
or
jbe
cmp
xor
pop
xchg
adc
lcall
add
sbb
mov
add
and
mov
bound
mov
push
add
sbb
add
add
mov
add
add
mov
add
xor
dec
addr16
push
data16
pusha
add
add
add
lret
and
push
xchg
and
cli
bound
mov
fnsave
push
sbb
or
add
mov
mov
pop
sbb
setb
into
pop
outsb
sbb
inc
jl
jl
add
add
and
cld
xchg
ffreep
add
add
std
decl
aas
jmp
add
icebp
nop
add
mov
sbb
call
testb
mov
icebp
scas
and
mov
sbb
cmp
add
dec
push
cmpsb
add
xchg
add
add
mov
sub
add
fcoms
insb
and
mov
jecxz
pushf
adc
or
add
xchg
cld
inc
pop
jbe
jmp
sub
push
fcmovnbe
add
add
or
add
inc
add
dec
pop
int3
and
mov
push
inc
lcall
sbb
add
insb
gs
and
dec
jle
lods
mov
sbb
mov
sar
dec
pop
imul
enter
xchg
add
add
mov
add
push
cmpsl
xchg
mov
mov
int
cmp
repnz
sub
mov
add
add
into
shrl
jmp
loope
or
hlt
add
movb
inc
add
inc
add
mov
dec
add
xor
scas
aaa
mov
lea
sti
in
out
int
and
push
add
add
lret
mov
insb
push
add
test
xor
out
cmp
imul
addr16
pusha
add
ror
mov
arpl
add
and
movsb
add
rolb
xchg
ficoml
push
cmp
scas
sub
loopne
xor
push
add
cmp
mov
sar
call
add
scas
push
add
aas
std
movb
loop
nop
add
mov
cltd
mov
adc
add
add
outsb
add
popf
lods
data16
add
and
cltd
pop
inc
add
add
add
push
add
decb
jb
xor
sbb
dec
movb
add
xor
push
add
xchg
mov
push
out
insl
mov
pop
jo
push
sub
cmp
sbb
add
mov
add
sub
fimuls
add
lcall
mov
add
add
pop
test
in
test
dec
cli
movups
adc
add
adc
ljmp
mov
rolb
rcll
adc
add
add
jne
icebp
push
std
les
mov
add
stc
mov
scas
in
adc
fwait
cmpsb
add
add
mov
popf
sub
add
xor
ja
add
xchg
add
es
add
mov
add
add
jbe
dec
mov
mov
add
sub
jl
add
adc
call
decl
fisubl
add
js
mov
add
push
adc
xchg
shll
push
cmc
xchg
daa
loop
hlt
add
and
mov
jns
into
cmc
sbb
movsb
add
out
adc
and
add
add
jmp
mov
sub
add
out
test
in
out
jg
mov
jne
loop
in
add
add
add
jbe
imul
sbb
stos
shr
in
jecxz
mov
add
in
mov
add
xor
xor
add
add
sbb
movsl
mov
in
std
xchg
add
inc
adc
push
inc
inc
and
mov
movb
add
das
inc
add
add
repz
iret
scas
addl
in
mov
mov
xor
lret
pop
push
push
mov
jb
loop
ljmp
push
add
add
add
jns
cmp
in
in
add
mov
icebp
ljmp
xchg
cmp
in
repz
cmpsl
std
iret
xor
movb
pop
adc
ficoml
inc
movb
addb
hlt
add
add
lret
insb
add
cmpsl
add
dec
mov
dec
and
mov
mov
rolb
mov
or
enter
or
lock
jns
mov
add
imul
pop
js
sub
addb
jmp
pushf
push
and
shl
add
data16
lock
add
mov
add
in
adc
add
push
aad
add
cmp
add
add
mov
fstl
lds
mov
sbb
add
mov
add
pop
arpl
loopne
leave
mov
rcrl
add
add
add
lods
push
add
add
addb
push
add
add
add
add
addr16
jae
push
add
fldl
or
xchg
adc
insl
sti
jno
stc
dec
xlat
lret
movsl
xchg
cwtl
jo
fstps
add
add
add
sbb
std
cmp
dec
bound
mov
or
mov
add
push
add
jo
mov
leave
aas
mov
mov
jg
add
mov
movsb
add
ds
daa
int
js
jl
adc
add
add
add
and
add
add
add
rolb
jmp
in
mov
int3
push
add
addr16
dec
clc
xchg
add
scas
iret
sub
add
inc
add
push
add
call
inc
jge
add
call
add
pusha
add
inc
cmp
pusha
add
push
sarl
lds
rolb
popf
dec
ret
ret
stos
jno
xchg
mov
add
add
add
add
add
lods
popa
xlat
in
leave
inc
add
loope
and
add
mov
add
pop
stos
and
add
cmp
mov
cmpsl
push
add
dec
psubd
sbb
mov
sbb
push
add
pop
push
add
inc
add
add
xor
dec
mov
popf
mov
push
add
add
sbbl
and
arpl
xchg
xchg
insl
xchg
std
nop
add
mov
inc
shll
push
test
add
test
movsl
jns
xor
xlat
outsb
lea
mov
iret
rcll
stos
mov
add
xor
cpuid
add
xlat
push
jmp
and
mov
addb
push
add
mov
jo
je
and
mov
jmp
xchg
dec
xchg
inc
sub
mov
test
inc
jl
jl
lcall
add
arpl
int3
push
add
add
add
repz
add
sbb
mov
or
xor
push
ja
hlt
add
pop
loop
cmp
incb
add
daa
pop
scas
sbb
les
lcall
lds
jg
add
pop
xchg
add
fadd
add
popa
add
jbe
pop
adc
sti
in
add
cmp
add
jle
add
xchg
pop
push
push
fstps
sub
divps
data16
ljmp
add
mov
mov
add
add
lret
adc
loop
cwtl
add
outsb
addb
or
push
add
add
add
mov
push
add
shll
mov
jo
and
add
testb
je
inc
add
jl
add
adc
pop
sbb
mov
mov
rolb
and
adc
sub
mov
add
pop
jne
xchg
lahf
sub
add
movsl
addl
fcompl
add
adc
dec
add
dec
dec
xchg
stos
scas
hlt
add
mov
ret
clc
jmp
mov
add
push
add
add
mov
xchg
jp
aas
cmp
add
xchg
add
pop
roll
add
subl
sar
test
emms
cmp
les
add
jnp
push
xchg
fwait
outsl
push
and
int3
inc
xchg
add
add
outsl
fucomi
clc
cwtl
in
sub
stos
jae
add
movb
jne
lds
gs
add
mov
mov
data16
mov
add
add
ds
mov
add
add
add
add
add
add
aam
insb
adc
pop
mov
filds
add
add
test
xchg
add
adc
fisttps
xor
rolb
push
and
mov
cmc
mov
add
add
add
add
push
add
xor
pop
inc
add
add
add
xchg
mov
inc
fcomi
imul
sbb
pop
or
add
pop
aad
out
jle
sub
outsl
imul
mov
inc
inc
sbb
sub
xchg
add
xchg
sbb
add
add
sti
mov
mov
add
icebp
test
lea
jae
lahf
inc
add
push
jge
jb
push
add
stc
jl
push
add
paddb
repz
popa
jl
fbstp
gs
push
inc
add
add
add
loopne
sbb
cmp
xchg
imul
roll
data16
push
adc
movb
push
lds
sbb
add
pop
out
push
add
cmpsb
add
clc
out
push
rolb
mov
aam
inc
add
mov
inc
pop
sbb
clc
clc
xor
insl
and
mov
mov
add
add
mov
and
sub
inc
add
jbe
lods
in
imul
mov
mov
add
rcll
dec
std
lea
mov
cmc
xor
add
mov
add
jb
repz
cmp
lock
mov
into
sarl
add
cmp
jg
mov
adc
adc
add
fcomps
les
mov
addl
jge
add
mov
sub
les
clc
lret
pop
sbbl
add
sub
pop
dec
xor
lods
push
loopne
ds
in
enter
mov
int3
sahf
xchg
addb
add
cmp
loop
stc
sbb
scas
leave
push
mov
repz
cs
std
mov
pushf
cmp
cwtl
aas
cmp
pop
jnp
add
dec
push
add
sar
add
xor
aam
adc
pusha
add
and
call
or
dec
jl
leave
lea
int
add
imul
inc
mov
add
testb
mov
jnp
iret
lret
add
add
pop
aam
mov
mov
add
mov
out
xchg
xchg
inc
add
lcall
add
sub
sbb
lea
jge
add
pop
xchg
cmp
into
stc
cwtl
add
jle
into
lret
pop
bound
mov
add
add
adc
xor
add
add
mov
jo
add
fadds
lret
mov
xchg
add
inc
add
jb
mov
add
sbb
pop
hlt
add
mov
mov
stc
push
das
dec
cmp
ret
inc
add
or
repz
jmp
add
add
add
adc
pop
mov
adc
jne
int
dec
mov
movb
cmpsl
cmp
fnstsw
add
and
mov
mov
add
xchg
add
test
add
out
stc
mov
scas
sub
insl
das
iret
or
insl
and
jo
popf
cmc
mov
mov
movb
inc
add
imul
jle
add
stos
cld
rolb
cmp
test
push
add
testb
adcl
cmc
in
or
lahf
das
push
enter
outsl
popa
lahf
sbb
add
test
mov
jp
gs
add
add
push
add
jnp
add
rolb
and
lahf
cmp
repnz
dec
das
rolb
add
mov
push
or
insb
xchg
add
rolb
xchg
add
add
inc
out
and
mov
aaa
clc
jo
aad
add
mov
loope
mov
and
mov
pusha
add
test
mov
adcl
push
xor
inc
aam
push
adc
xchg
add
notl
fdivl
jp
pop
mov
add
add
in
pop
add
add
add
mov
lea
sbb
out
mov
lods
lods
and
cmp
adc
jle
data16
add
ret
mov
mov
sbb
jp
inc
out
lret
dec
icebp
arpl
add
mov
nop
add
test
unpckhps
cld
hlt
add
add
rolb
add
in
jo
jge
mov
ficomps
jnp
vmread
add
add
lods
sbb
add
lahf
flds
dec
dec
test
mov
dec
stos
mov
add
addb
sahf
repz
or
xchg
std
xchg
mov
scas
mov
nop
add
jno
insl
or
push
out
je
imul
sub
and
adc
rolb
mov
add
add
add
add
test
repz
adc
add
add
sbb
add
shll
mov
add
addb
add
in
jno
fstpt
mov
rolb
sahf
stos
movb
aam
imul
insb
pop
push
call
add
ljmp
incl
mov
add
and
jnp
add
cmp
pop
cmp
stos
add
mov
loop
push
add
mov
mov
add
add
data16
mov
add
aam
mov
add
popa
les
cltd
inc
add
out
pop
push
add
call
xchg
xor
mov
jg
das
sub
mov
pop
addl
cltd
sbb
enter
testb
add
ljmp
add
xor
add
movsb
add
push
ret
mov
rolb
aad
out
popf
mov
fidivrl
rolb
add
out
xlat
popf
outsb
adc
out
aad
add
pop
pop
call
cmpsl
xchg
pop
fisubl
inc
add
pop
pop
dec
xchg
add
mov
fisubs
into
push
outsl
movsl
jle
inc
push
mov
or
push
sub
add
cmp
dec
rolb
je
mov
lahf
add
fucom
popf
mov
xor
add
push
add
popf
leave
or
push
add
gs
xchg
aam
push
add
mov
xor
mov
scas
add
inc
add
mov
add
lahf
or
dec
xchg
add
add
add
adc
mov
add
mov
cmp
scas
fwait
sub
clc
xchg
imul
fxtract
add
add
add
add
add
nop
add
or
add
xchg
mov
lods
mov
or
add
and
mov
movb
jl
call
jb
scas
or
add
jmp
jp
aaa
jmp
xor
add
or
addb
mov
add
add
mov
add
or
or
jns
and
mov
ret
inc
pop
bound
mov
sti
pop
loop
cli
mov
mov
in
mov
fmull
mov
movb
cmp
add
add
jno
push
add
repz
mov
adc
add
popa
movb
popa
enter
aaa
mov
add
icebp
aad
add
scas
addr16
hlt
add
add
adc
sti
mov
push
jmp
popf
sbb
xchg
sub
push
sub
add
push
jnp
iret
inc
testl
mov
cmp
mov
add
mov
rorl
call
add
add
add
je
jne
xchg
pop
mov
icebp
cli
adc
stmxcsr
inc
add
mov
inc
mov
sbb
add
add
out
dec
dec
mov
and
add
bound
mov
fwait
or
testb
scas
mov
mov
add
aas
pop
dec
sbb
pop
aaa
push
add
mov
int
adc
in
lods
jge
aad
add
push
sbb
adc
shll
sahf
sti
inc
add
inc
fcmovnbe
lds
push
insb
jae
or
aas
push
add
add
adc
imul
add
dec
testb
sub
sub
add
dec
and
mov
fcoml
je
cmp
push
aaa
mov
repnz
add
add
cmp
repnz
lods
jecxz
and
frstor
mov
add
pop
xor
insl
cmp
mov
les
aam
fcoms
add
sbb
outsl
imul
cltd
bound
mov
imul
add
andl
jmp
testb
data16
add
cmpsb
add
mov
rolb
add
inc
add
pop
test
adc
push
mov
xchg
in
jp
add
add
fisubl
add
pop
bound
mov
jns
add
add
dec
lods
pusha
add
movsl
xchg
push
add
or
add
clc
rcl
add
out
add
jle
add
add
fadds
add
dec
shll
add
in
lods
icebp
xor
loope
add
sbb
xor
outsb
and
pop
cli
out
pop
loopne
add
mov
xchg
xchg
add
mull
mov
call
sub
add
add
mov
add
jae
clc
and
mov
add
ja
add
in
inc
add
mov
add
gs
insb
test
cmp
xchg
xchg
add
cmpsl
mov
imul
insb
mov
push
sub
add
add
inc
add
pop
inc
xchg
mov
add
add
xchg
leave
add
mov
aaa
add
mov
push
add
mov
add
stos
pusha
add
mov
lahf
or
rorl
sarl
je
repnz
pop
add
mov
and
cmc
ljmp
lods
in
fmull
adc
lea
push
psubw
or
fisubl
sbb
sbb
mov
or
pop
das
int3
pop
js
sub
popf
adc
lock
mov
add
add
dec
jno
bound
mov
inc
popf
dec
push
jg
leave
mov
push
dec
stos
cmp
mov
pop
add
stos
xor
xlat
add
dec
sub
je
test
xchg
mov
mov
jo
xor
pop
pop
pop
jecxz
ja
push
add
inc
add
fstp
int
add
add
dec
jge
add
out
xor
arpl
add
mov
mov
add
jmp
add
rolb
cmpsl
repnz
push
add
rolb
sbb
arpl
mov
mov
out
add
jg
and
and
mov
dec
call
mov
pop
sbb
add
movsb
add
add
out
jg
push
xor
rolb
in
shll
jmp
add
and
mov
xor
xchg
add
imul
mov
shrl
rorl
add
xor
add
fbstp
push
pop
add
add
mov
addb
addb
addr16
testb
mov
imul
mov
adc
push
icebp
cltd
mov
loope
add
mov
dec
cmp
in
fstl
imul
fstps
lods
pop
push
add
inc
add
add
mov
mov
outsb
dec
push
add
and
add
addb
adc
jle
jae
xchg
loop
xor
mov
cs
or
add
add
inc
add
add
add
add
mov
pushf
xor
add
xlat
pop
scas
add
pop
ds
add
add
pop
adc
mov
lods
outsl
lods
push
fidivs
pop
mov
cltd
fnstenv
add
add
lahf
lea
mov
mov
inc
aas
add
add
add
mov
subl
int3
xchg
add
add
add
out
mov
movl
out
adc
push
add
jns
mov
mov
adc
xchg
cwtl
loope
loop
dec
cld
mov
rcrl
mov
sti
js
fs
jecxz
add
rolb
test
gs
mov
pop
and
mov
test
ret
jge
cs
lret
clc
sbb
add
add
lea
add
hlt
add
lea
sbb
xor
ret
or
add
mov
addb
mov
and
mov
add
add
ret
pushf
dec
arpl
add
xchg
add
add
xor
lods
jge
mov
add
pushf
adc
mov
stos
sub
inc
add
mov
mov
add
lea
leave
jnp
mov
sub
dec
icebp
les
push
add
push
cmp
adc
repnz
jbe
hlt
add
add
mov
and
xchg
add
pop
dec
jmp
jo
jns
mov
inc
repnz
jle
add
clc
data16
and
mov
add
mov
mov
inc
add
lods
mov
xchg
add
inc
add
lahf
jmp
jle
rolb
pop
and
stos
testl
pop
pushf
in
add
or
lret
enter
pop
sub
icebp
insb
sub
inc
add
andl
bound
mov
mov
mov
add
xor
test
add
push
mov
and
mov
in
mov
dec
push
mov
or
stc
dec
leave
fsub
rolb
stc
sub
pusha
add
dec
js
push
addr16
movsb
add
mov
subl
add
enter
inc
add
add
and
fwait
inc
fsubrl
icebp
aad
and
outsl
fisttpll
inc
sahf
jns
jnp
stos
movsb
add
sahf
jle
xorl
out
cmp
add
push
add
add
add
lret
ljmp
mov
mov
out
add
adc
dec
std
sub
mov
addb
mov
inc
add
pop
pop
aas
cmp
adc
lock
cmp
push
add
mov
sbb
push
add
addb
add
clc
loopne
movb
aas
adc
add
js
sbb
xor
xlat
sub
cmc
push
lock
loop
outsb
mov
in
push
add
jecxz
jmp
adc
aam
test
dec
push
and
push
add
ljmp
xor
jns
pushf
cltd
fldl
outsb
repz
mov
xchg
call
sbb
pushl
sbb
mov
scas
cmpsb
add
add
test
add
add
xor
mov
movsl
add
add
add
mov
push
movsl
jp
mov
jbe
dec
xor
add
jecxz
shrl
dec
push
add
stos
js
shll
add
frndint
cmp
mov
mov
and
add
add
mov
xlat
mov
xor
xchg
lds
push
add
push
add
std
add
mov
mov
add
jge
mov
adc
scas
mov
push
xor
sub
call
xor
pop
mov
aam
popa
mov
addb
dec
adc
scas
sbb
mov
cs
add
aam
repnz
add
ljmp
mov
and
rolb
lock
add
mov
add
add
repnz
testb
and
lret
jb
mov
mov
jnp
add
movb
jmp
and
and
arpl
add
or
sub
pop
and
mov
push
add
aam
into
mov
add
add
sub
mov
add
lret
xchg
or
mull
add
sbb
mov
add
add
adc
mov
mov
jo
xor
xor
jle
xchg
and
add
cmp
add
and
mov
mov
and
test
gs
les
xchg
add
in
mov
addl
add
add
fucompp
dec
sub
push
pop
inc
fsubs
add
pop
inc
add
cwtl
add
adc
clc
xor
imul
mov
add
add
or
add
add
add
add
add
xchg
outsb
into
pop
xchg
add
lahf
nop
add
inc
add
mov
out
lds
cmp
add
lods
mov
imul
mov
sub
jbe
inc
add
xchg
add
sub
add
sub
add
and
cmp
add
and
pushf
and
mov
xchg
out
xchg
add
add
mov
insl
movnti
sub
add
in
ss
pop
cwtl
mov
add
dec
cmpl
cmpsb
add
mov
testb
add
mov
rolb
gs
cs
and
jbe
push
lds
add
arpl
push
lahf
xor
stc
filds
jg
ja
clc
mov
mov
push
add
movb
add
push
mov
add
fadds
and
mov
add
mov
out
push
shll
movsl
pop
fsts
pop
inc
xchg
cmp
rolb
add
add
xlat
imul
or
pop
pop
xchg
add
xor
adc
iret
out
aaa
cmpl
push
add
add
add
addr16
inc
mov
and
int
sti
rorl
xorl
lods
pop
lods
and
mov
push
add
push
add
hlt
add
mov
je
aas
bound
mov
jmp
xchg
in
lods
pushf
out
cmpsb
add
cmp
dec
in
rolb
mov
enter
enter
in
div
add
adc
fiadds
or
pushf
dec
pop
in
repz
add
adc
add
mov
adc
aad
addb
dec
call
test
xor
inc
add
nop
add
cltd
push
add
or
add
add
mov
pop
cmovns
movb
add
add
add
add
repnz
orl
in
jecxz
shll
push
add
sti
cmp
push
add
add
fnstsw
add
xlat
xor
and
mov
scas
lret
insl
popf
inc
add
lock
add
imul
push
add
add
jnp
add
dec
cwtl
pop
jnp
add
inc
add
dec
nop
add
scas
nop
add
add
lods
mov
cmp
jl
add
rcll
cmp
add
add
cwtl
loope
sbb
loop
sti
and
push
fbstp
add
lea
jl
add
add
push
add
shrl
cmp
je
push
add
in
lret
jle
scas
mov
add
fwait
pop
add
mov
pop
movsb
add
data16
dec
cli
sub
and
mov
jne
add
leave
adc
add
out
movsl
jae
icebp
xchg
add
add
sbb
add
add
push
add
fnstsw
mov
movsl
insl
dec
mov
rolb
inc
add
add
xchg
clc
add
add
and
mov
add
scas
hlt
add
rcr
sub
add
insb
sbb
mov
mov
adc
sti
cmp
mov
pop
and
push
add
inc
cmp
je
mov
jno
aam
jmp
adc
add
lock
call
jne
arpl
sbb
and
xchg
jbe
push
add
mov
adc
cltd
jp
add
add
sub
rolb
lock
jbe
call
mov
mov
add
jns
add
add
add
and
mov
add
push
add
repnz
dec
adc
xlat
xchg
add
mov
mov
fdivrs
cld
add
sbb
dec
mov
pop
mov
add
daa
clc
pusha
add
xchg
sbb
flds
add
mov
sbb
add
xor
stos
and
mov
fiaddl
push
hlt
add
lods
bound
mov
and
mov
aam
mov
mov
add
insl
lret
sbb
mov
xchg
lcall
mov
clc
lock
add
add
add
xlat
inc
xchg
or
or
in
mov
out
pop
cmp
add
xor
ja
push
orl
stc
dec
mov
out
and
mov
jno
dec
mov
movb
add
add
je
pop
mov
add
push
outsb
xchg
loope
add
ficomps
xchg
add
xchg
add
mov
insb
cmp
sub
call
mov
adc
aaa
pop
pop
adc
adc
inc
add
cmp
add
xchg
add
imul
xor
mov
xchg
bound
mov
add
pop
mov
xor
mov
pop
mov
ffreep
sub
mov
pusha
add
movl
sahf
call
add
mov
adc
addb
int3
cmc
addr16
ret
and
lds
and
mov
loop
inc
add
add
cmp
add
add
std
add
add
mov
fldt
mov
adc
and
mov
cli
add
add
add
addr16
cmp
push
add
call
out
pushf
ja
sahf
mov
pop
xchg
add
test
pop
mov
in
add
push
push
add
push
dec
loop
inc
int
push
add
les
lds
add
add
add
add
pop
mov
ds
add
cmp
jle
insb
ret
add
std
loope
sbb
push
nop
add
das
jmp
lock
jns
pop
rolb
push
pusha
add
mov
and
imul
jns
dec
xchg
fdivrs
and
jg
add
mov
aaa
call
add
mov
adc
mov
fs
stos
adc
push
push
add
add
js
and
push
lods
inc
add
in
icebp
scas
js
and
mov
rolb
cmp
cmp
pop
xor
test
add
fistl
add
mov
add
add
add
in
mov
cmp
in
mov
sbb
sbb
inc
jne
add
add
add
daa
add
mov
mov
xor
js
stc
or
xor
add
mov
pop
arpl
movsl
test
jp
add
jle
pop
in
inc
add
add
imull
adc
insb
repnz
js
scas
pop
and
mov
or
adc
cwtl
jns
add
in
aad
mov
rorl
add
add
aam
mov
add
lret
sahf
and
inc
add
push
add
add
aam
loop
jmp
fdivrl
xchg
and
mov
pop
push
mov
push
icebp
ja
loop
add
mov
add
mov
add
in
add
shll
add
mov
pop
xor
and
imul
add
mov
int
ffree
dec
jae
lret
or
hlt
add
jl
loope
aam
dec
sbb
add
add
mov
sub
dec
push
add
push
and
mov
movb
rolb
clc
js
leave
pop
inc
inc
add
cmp
add
cvtps2pi
add
cmp
mov
add
sti
sbb
add
aam
insb
gs
xlat
jle
mov
in
pop
add
adc
sbb
iret
dec
out
mov
rol
test
cmpsb
add
add
add
pop
mov
jns
stos
or
aam
mov
sti
sub
pop
in
call
mov
add
fsubs
mov
mov
xchg
fildll
or
mov
add
stos
mov
xor
stos
sti
pop
xchg
ret
push
jge
add
add
mov
lods
jbe
add
add
das
test
cmc
lret
push
jbe
das
lods
imul
mov
add
add
add
xchg
xchg
add
nop
add
jl
sub
in
test
add
jmp
mov
jnp
andl
xchg
clc
sti
and
lds
mov
or
mov
add
jmp
test
add
jecxz
add
mov
inc
lods
mov
and
sub
lods
and
aad
add
mov
fadd
add
je
xor
cmpsl
adc
add
add
add
loop
rcl
lcall
xchg
add
add
inc
int
inc
add
xchg
mov
sbb
add
add
add
jns
mov
add
add
gs
adc
jle
add
sbb
repz
jo
mov
or
xor
dec
adc
jne
and
insl
cmp
pop
jg
jp
out
mov
adc
shll
add
xchg
or
clc
sub
testb
mov
xchg
add
sub
mov
and
ja
mov
xor
mov
add
mov
sbb
arpl
cmc
std
jge
sysenter
add
out
insb
cmp
add
dec
enter
xchg
jmp
je
ret
in
push
scas
hlt
add
pop
xchg
add
dec
loop
cli
dec
in
out
xchg
and
aas
push
je
add
add
clc
pop
flds
mov
push
lcall
add
inc
add
loopne
mov
insb
lods
idivl
add
add
ficompl
inc
add
xchg
pop
xchg
add
push
out
sbb
add
add
outsl
or
xchg
or
testb
inc
dec
pop
add
mov
add
std
repz
js
add
cltd
movb
xchg
add
add
add
mov
lds
pushf
mov
add
add
mov
and
js
add
add
leave
bound
mov
mov
sahf
jg
push
jle
add
push
sbb
mov
add
jnp
or
loope
add
add
and
data16
outsb
pop
dec
mov
addb
cmp
inc
add
cwtl
sbb
rcr
lret
les
adc
adc
movsb
add
pop
pusha
add
nop
add
add
add
sub
dec
ds
mov
cmp
rcll
cmp
add
add
add
mov
xchg
add
sub
aas
enter
add
add
pop
cmpsl
insl
jp
jnp
mov
add
adc
push
or
inc
add
mov
or
add
xchg
je
dec
dec
push
add
or
add
and
lea
mov
adc
inc
add
cmpsl
aad
add
into
push
add
dec
loopne
fsts
lret
int
cmpsb
add
add
add
rolb
shll
add
add
fsts
push
add
add
mov
add
mov
cwtl
mov
add
and
inc
sub
xor
out
push
add
add
xlat
mov
add
testb
add
insl
mov
add
loope
mov
into
js
add
add
icebp
out
scas
mov
mov
xor
enter
add
inc
int3
bound
mov
pop
pop
mov
fisubrl
enter
sbb
movsb
add
add
mov
dec
leave
je
push
push
or
and
push
mov
add
mov
adc
mov
jp
lods
loopne
fwait
mov
pop
ret
sub
add
mov
lock
add
mov
fstl
cmp
sbb
enter
imul
push
add
add
add
sbb
rolb
incl
adc
scas
push
addr16
orl
inc
sub
fisubs
add
into
or
imul
inc
add
cmp
add
test
int
in
stc
and
mov
loopne
push
add
inc
add
jp
add
add
xlat
repz
add
insl
add
mov
rcl
pop
rolb
dec
mov
add
mov
cmpsb
add
lods
xchg
add
xor
movb
iret
cmpsl
pop
rorl
add
mov
and
sub
rolb
xchg
jo
dec
lock
dec
pop
mov
data16
clc
inc
scas
in
add
cmp
add
setle
add
sti
imull
pushf
std
and
add
add
pushf
iret
and
or
dec
inc
add
xlat
in
cmpsl
repnz
cwtl
or
mov
sub
add
cmp
fistpll
add
and
mov
adc
int
add
enter
jp
add
fnstenv
add
lahf
mov
add
add
cwtl
jg
xchg
add
daa
call
addb
mov
add
and
xchg
lock
jnp
add
leave
in
loopne
inc
add
dec
cltd
add
mov
add
jbe
add
add
mov
sbb
add
add
mov
daa
loope
add
pop
sub
add
inc
jge
lods
pop
mov
mov
push
sar
mov
dec
inc
add
add
movb
imul
adc
dec
lret
sub
push
add
cmp
mov
test
add
adc
int3
sub
xor
fwait
clc
call
cmpsb
add
cltd
cmpsb
add
lock
flds
testb
add
mov
add
cli
je
mov
setno
xchg
jge
insb
inc
mov
lahf
sbb
popa
testb
add
cli
mov
sub
mov
mov
xor
add
dec
add
xor
fbld
add
fwait
and
mov
fistpl
xor
fidivl
add
hlt
add
pop
lock
fsubs
add
mov
add
add
add
mov
jns
lock
pop
ja
push
add
cmp
xor
push
addb
pusha
add
les
sub
add
push
and
add
out
cld
adc
add
aam
loopne
xchg
pop
sub
mov
jne
jo
xor
outsl
push
pop
data16
xlat
dec
pop
lds
shll
jge
call
sbb
mov
ljmp
cmp
push
out
sub
add
into
cmp
pop
fcom
rolb
rcll
pop
push
add
sub
imul
add
inc
add
and
mov
add
dec
es
dec
push
add
sub
mov
outsl
mov
mov
pop
push
lret
mov
sti
sbb
and
mov
mov
add
insl
mov
xlat
mov
mov
add
sub
cmpsb
add
or
lret
lret
out
dec
sahf
faddp
mov
ja
inc
add
movsb
add
mov
adc
sahf
push
mov
insl
sub
add
cmpsb
add
shll
add
int3
insb
negl
add
xlat
sub
add
std
pop
mov
aam
test
mov
rcrl
xor
sbb
add
arpl
pop
das
call
adc
add
int
lahf
jnp
lods
or
add
add
mov
int3
aam
jle
add
xor
sbb
rorl
stos
mov
lret
das
aam
ficomps
inc
add
imul
mov
add
aam
inc
add
ficoml
movsl
cmpl
aad
loope
add
xchg
mov
aaa
out
jl
jae
add
add
mov
xchg
out
adc
int
loopne
popf
loop
jp
dec
loope
add
dec
out
add
pop
testl
mov
jl
cmp
sbb
cmpsb
add
add
add
add
sub
or
add
mov
lret
jp
mov
mov
jb
inc
add
add
mov
mov
lds
cmp
or
add
mov
add
add
or
decl
add
loope
add
aad
movsl
pop
add
mov
add
outsb
and
lds
in
rolb
sub
insl
push
add
push
ja
leave
popa
mov
add
add
add
int
int
enter
pop
movsb
add
add
insb
add
jg
add
scas
jge
inc
inc
movb
add
add
icebp
clc
testb
add
add
xor
ret
test
sub
mov
add
add
rolb
dec
jp
add
add
add
cs
push
and
mov
add
testb
test
add
inc
cmp
push
add
popa
push
add
jp
pop
sbb
cwtl
jge
shll
jnp
xor
rolb
push
push
push
ficomps
dec
js
and
mov
mov
sub
testb
fbstp
xor
sub
repnz
add
add
dec
lea
jb
lcall
mov
xor
rolb
cs
add
add
jno
jg
daa
int
cmpsb
add
pop
ljmp
mov
test
dec
je
lret
ljmp
add
js
add
mov
pop
push
add
imul
mov
mov
adc
outsl
xor
jne
cmp
jnp
sbb
jno
add
testb
rolb
das
shll
add
add
add
add
and
je
cld
arpl
mov
push
dec
repz
add
add
cmp
addb
add
je
mov
out
cli
das
leave
int
das
mov
std
cs
add
add
jo
sub
arpl
sbb
addb
add
sti
clc
int
out
aam
add
mov
add
add
sbb
testb
inc
push
pusha
add
dec
or
pop
jecxz
sbb
add
mov
rolb
repnz
lock
fstl
enter
push
and
add
push
xchg
add
cltd
cmc
rolb
mov
add
aad
add
and
sub
sub
rolb
mov
push
adc
xor
addr16
push
add
popa
test
add
aas
mov
mov
mov
add
push
mov
lock
aas
popa
adc
inc
push
xor
testb
sub
add
cli
push
cld
mov
sub
daa
outsb
xlat
clc
sbb
mov
inc
add
jbe
test
add
mov
or
pop
fldenv
and
lret
add
inc
cmp
add
mov
add
and
mov
add
data16
aas
mov
testb
or
je
cmp
addr16
pop
pusha
add
jbe
xchg
aad
and
iret
jno
cmp
jge
add
pop
into
inc
add
ljmp
cmp
add
mov
inc
add
mov
mov
out
jmp
add
add
sbb
add
hlt
add
jno
mov
xor
adc
jae
data16
dec
mov
xor
add
add
mov
subl
pop
sub
add
add
les
mov
pusha
add
mov
add
add
mov
movsb
add
mov
sub
pop
pop
imul
je
or
dec
cmp
pop
aaa
sti
mov
add
mov
mov
add
aaa
inc
add
insb
cmp
inc
add
movsl
jnp
cwtl
xor
pop
adc
cmpsb
add
jp
add
add
iret
jecxz
add
jae
int
add
sahf
mov
add
loope
pushf
mov
inc
repz
data16
fnstsw
add
xchg
jne
lock
add
add
inc
fdivl
sbb
mov
or
add
outsl
xchg
clc
mov
imul
addr16
mov
add
orl
add
jbe
cwtl
lea
push
add
mov
stos
pusha
add
add
mov
add
adc
mov
mov
cmc
mov
add
mov
jbe
sbb
aaa
mov
sahf
data16
int
add
add
add
mov
out
in
cwtl
jns
add
in
jno
scas
cmpl
sub
outsb
inc
add
daa
jp
add
add
movsb
add
mov
lcall
pop
insl
jno
rolb
leave
call
add
add
add
pop
sub
bound
mov
cmove
int
arpl
add
popf
lret
mov
and
mov
push
add
add
jl
jnp
add
popf
sbb
dec
out
add
mov
inc
rolb
or
push
stc
clc
inc
mov
mov
cmp
add
push
add
xor
stc
pop
ljmp
rolb
gs
mov
sub
stc
dec
xchg
inc
add
ja
mov
scas
mov
cmp
repz
iret
imul
add
mov
or
loopne
push
addb
add
insb
pop
mov
mov
add
cmp
add
pop
bound
mov
inc
aam
data16
adc
add
je
arpl
mov
repnz
out
add
mov
lods
std
dec
fistps
popa
insb
cmpsl
xchg
jmp
add
push
ljmp
and
mov
add
add
lahf
push
add
push
inc
add
mov
push
add
and
jp
in
scas
jge
cmpsl
cwtl
inc
push
add
mov
add
or
pop
push
add
mov
jo
add
add
push
add
out
add
inc
add
add
or
ja
add
in
mov
xor
mov
push
cmp
pop
sub
jno
dec
mov
stos
sbb
add
add
fcomip
incb
addb
add
add
lret
dec
or
rolb
add
mov
aam
rolb
and
mov
and
sbb
lods
cs
jl
cld
push
add
add
jle
push
add
add
add
add
repz
fildll
testb
add
ret
mov
cmp
add
sub
add
xchg
push
add
add
add
addr16
xchg
add
fucomip
xorl
jmp
mov
add
scas
int3
jnp
xchg
push
add
add
add
push
stc
ljmp
xchg
repnz
adc
roll
dec
ficoms
add
sbb
add
jns
and
mov
add
jp
dec
push
add
popf
mov
nop
add
add
out
add
add
add
sarl
call
mov
lods
ss
rolb
push
inc
xor
add
add
leave
mov
movsl
xor
add
mull
mov
add
je
aas
les
repz
repnz
add
mov
mov
ja
jmp
add
test
push
jecxz,pt
sbb
adc
xor
pop
jecxz,pn
mov
add
rolb
orl
pop
sbb
add
add
add
cmp
add
in
pop
add
add
add
add
addb
mov
pop
repnz
or
add
cli
push
sub
or
add
ds
add
sub
push
or
mov
jno
stos
out
pop
sub
mov
jle
pushf
lret
add
mov
outsl
sbb
add
insl
pop
mov
add
nop
add
pushf
fldpi
add
add
movsb
add
add
mov
or
add
dec
int
push
pusha
add
outsb
xchg
insb
jle
loopne
pop
sub
loopne
cwtl
inc
and
mov
mov
mov
cltd
sbb
mov
add
sbb
xchg
clc
insl
ret
add
jbe
push
xchg
and
mov
add
fmul
adc
pop
dec
ret
cmp
add
sarl
aaa
loop
push
cmp
add
add
xchg
mov
sbb
add
sbb
int3
jecxz
jp
loop
jae
divl
push
add
add
add
fmuls
cmp
and
push
add
mov
add
sti
mov
gs
in
xor
push
add
jne
push
add
popf
iret
mov
pop
arpl
out
stos
mov
out
test
rolb
dec
daa
enter
mov
add
add
bound
mov
xchg
mov
add
pop
pop
cs
push
add
mov
mov
xor
cwtl
mov
push
test
cmc
xchg
cmp
jp
add
hlt
add
add
das
std
rolb
inc
add
mov
add
lret
lock
xchg
add
adc
lds
or
jb
rolb
pop
daa
xchg
leave
int
sub
insb
xor
test
add
loop
mov
iret
mov
add
add
mov
xor
jb
pusha
add
test
sub
xor
dec
pop
mov
pop
or
xor
int3
mov
icebp
jl
dec
lock
xchg
stos
add
mov
add
cmpsl
clc
lahf
cld
stc
jmp
mov
add
add
add
xorl
add
add
mov
or
add
pop
mov
add
fstpt
in
mov
stos
cmpsl
int
add
xlat
mov
mov
sbb
add
or
xor
add
cwtl
mov
fst
mov
fidivrs
in
or
jmp
mov
sti
movsb
add
add
or
sahf
inc
add
add
or
xchg
add
add
mov
out
jmp
mov
add
aam
jb
mov
mov
mov
addb
in
dec
mov
mov
insb
cs
add
aas
mov
movsl
jmp
add
popf
lods
mov
fldt
fists
add
adc
in
sub
add
add
push
add
sub
inc
push
add
lds
xchg
ret
shl
xchg
sub
mov
push
add
mov
test
adc
sbb
add
ret
mov
jge
in
sbb
data16
adc
dec
test
adc
xchg
xchg
add
inc
add
add
lret
mov
add
jp
imul
pop
jo
and
add
addb
add
out
daa
or
imul
in
cli
dec
or
dec
mov
mov
add
lock
popf
lods
dec
lea
mov
mov
cmc
xor
jae
add
sub
add
add
fildl
add
enter
mov
fmul
mov
test
add
movb
add
addb
fistpll
cmpsb
add
mov
dec
addb
mov
das
and
push
mov
loop
ror
sub
pop
ja
push
add
xor
mov
inc
fsubs
xchg
cmp
cld
sbb
sar
adc
pop
fcoml
mov
add
dec
mov
jns
inc
add
das
jo
inc
add
insl
shll
arpl
inc
add
add
in
jnp
sbb
jmp
je
sbb
sub
or
add
add
add
sub
push
dec
movl
sbb
mov
mov
add
arpl
mov
or
lret
push
lret
sahf
cs
add
cmp
data16
add
and
inc
add
and
mov
mov
cmp
add
stos
fnsave
add
jo
je
pop
das
add
les
bound
mov
ds
enter
cmpsb
add
sbb
data16
ficoml
sahf
popa
ljmp
mov
add
mov
add
pop
outsl
xor
add
lds
mov
movsb
add
jge
add
add
sbb
out
addps
popf
add
or
and
scas
addb
in
cs
add
add
add
xor
inc
lds
mov
pushf
lds
lds
jmp
add
and
mov
xor
repz
sub
jo
ret
popa
mov
or
add
jge
push
add
add
test
push
add
inc
add
add
add
mov
add
test
inc
add
mov
fldcw
xorl
ja
add
mov
cmp
js
mov
xor
add
add
enter
call
mov
mov
mov
mov
scas
add
and
stc
ds
jae
sti
inc
xlat
mov
rolb
xchg
add
movsb
add
cs
mov
shll
jp
shl
cwtl
mov
add
fdivs
pop
mov
dec
jbe
int3
push
jp
fadds
add
add
frstpm(287
inc
add
add
cmpsb
add
dec
inc
fadds
sub
dec
es
add
cmp
add
in
ficomps
add
aaa
dec
dec
adc
rolb
int
jnp
add
mov
mov
mov
add
add
mov
add
mov
sub
out
insl
mov
pop
sbb
xor
ds
add
inc
adc
jo
daa
push
add
outsb
setae
test
pop
scas
gs
outsl
test
and
mov
add
testb
add
xchg
call
add
push
add
add
add
add
push
daa
int
pop
dec
icebp
mov
add
push
cmp
add
jle
pop
fwait
cwtl
in
test
dec
xchg
iret
jno
and
add
pushf
sbb
jb
mov
push
add
mov
gs
add
push
adc
loopne
sub
add
mov
add
loopne
xor
xor
sub
add
mov
cli
scas
hlt
add
adc
ds
jl
mov
jns
adc
cld
insb
and
mov
pushf
xchg
add
adc
add
add
add
fisubrl
lds
inc
loope
xor
adc
cs
add
fisubrs
jl
int3
pushf
cmp
mov
dec
or
add
aad
fnsetpm(287
add
pusha
add
add
enter
adc
add
or
jb
gs
add
scas
push
in
movsb
add
add
mov
rolb
push
add
loope
add
ss
add
mov
push
add
add
pop
dec
inc
add
mov
cmp
in
je
insb
jle
add
out
xchg
inc
loope
test
insl
cmpsb
add
test
invd
std
in
jno
add
mov
pop
adc
jns
add
xchg
call
clc
mov
add
sbb
add
mov
faddp
add
push
add
add
sbb
test
or
jmp
rolb
cld
mov
pop
cmp
add
jl
pop
adc
cs
out
leave
arpl
add
push
add
add
mov
pop
mov
adc
cli
daa
sbb
add
mov
sbb
insl
rolb
aas
into
andl
mov
pop
in
aas
roll
add
add
jg
out
mov
dec
dec
mov
add
add
nop
add
add
jecxz
pusha
add
adc
sub
add
add
add
fdivs
into
aam
add
mov
add
pop
adc
incl
pop
push
mov
fidivl
mov
pop
pop
and
mov
add
add
mov
lods
bound
mov
into
rcrl
fistpll
enter
cmp
dec
loop
aam
movb
add
add
insl
add
add
iret
push
add
repz
mov
test
stos
mov
xorl
dec
in
enter
sub
push
add
and
cmc
sbb
mov
jne
xchg
mov
and
jb
popa
loopne
mov
add
and
lods
lods
outsl
bound
mov
mov
int
addb
add
sub
aas
cld
xchg
add
lret
pusha
add
cmp
or
das
js
add
jg
test
add
mov
loop
stc
lea
test
pushf
out
mov
insl
insb
cmp
and
and
lock
add
movsb
add
push
add
push
adc
lods
loop
pop
mov
add
aaa
ret
jecxz
sbb
jno
mov
push
shl
nop
add
jg
int3
push
out
sahf
ret
jns
xor
pop
push
xchg
xchg
add
divl
adc
inc
add
sbb
mov
out
into
cwtl
mov
add
mov
pop
push
xor
or
cmc
pop
push
mov
cmp
xchg
into
and
mov
push
add
cmp
repnz
lods
inc
dec
cmp
lret
daa
out
ja
mov
push
push
add
clc
cmp
add
cmp
pushf
dec
xchg
add
lods
xor
movl
add
add
dec
leave
xchg
add
add
xchg
add
ss
add
mov
add
fistpll
sbb
xor
pop
lret
sbb
add
add
add
sub
push
add
xlat
push
add
imul
add
std
std
lds
dec
mov
add
adc
sbb
popf
adc
outsb
or
test
aaa
fidivrs
adc
push
jae
pushf
adc
inc
lock
add
xchg
add
ret
mov
daa
in
xchg
mov
and
in
cmp
outsl
or
mov
loopne
rolb
out
pop
enter
sub
sub
adc
mov
mov
push
mov
lods
cmp
mov
mov
hlt
add
add
add
add
mov
outsl
add
ret
mov
add
xchg
add
mov
add
fcompl
push
fadds
std
inc
scas
js
xchg
add
imul
popa
mov
pop
jnp
mov
add
psrad
aas
xor
test
and
jb
test
add
add
dec
adc
lods
dec
dec
adc
sti
sub
add
or
add
insb
pop
aam
add
jle
push
adc
or
aam
addr16
cmpl
lret
xchg
add
ficompl
or
loop
cmp
and
mov
out
add
mov
lea
loopne
mov
xchg
xor
pop
mov
paddw
xchg
push
mov
xchg
xchg
outsb
into
xor
mov
rolb
dec
cmpsb
add
repz
mov
xlat
ret
xchg
mov
ljmp
adc
xchg
push
cmp
sbb
jo
mov
dec
push
ds
sbb
add
add
mov
xor
push
add
xchg
add
jnp
add
jle
add
pop
movb
filds
inc
add
cmpsl
stos
sub
popa
inc
add
ficomps
inc
add
imul
push
add
icebp
sbb
and
mov
mov
mov
dec
mov
fisttps
adc
xchg
add
ljmp
or
testb
add
mov
cltd
push
add
add
add
rorl
cli
in
stos
pop
jmp
pop
add
addb
add
add
dec
mov
push
subl
adc
adc
jmp
add
add
inc
add
add
inc
mov
xor
dec
in
aas
aas
insb
outsl
or
mov
pop
clc
in
add
jns
add
add
mov
mov
add
add
add
and
add
mov
add
fstp
aas
or
loopne
inc
push
testb
aas
loopne
xchg
sbb
cmpsl
mov
push
aam
inc
pop
lret
add
out
and
cmp
inc
add
add
xchg
outsl
aam
pushf
pop
mov
jae
add
inc
arpl
mov
fidivl
dec
sub
nop
add
mov
aas
and
mov
add
ret
xchg
add
aam
loopne
loopne
mov
lds
lods
outsl
push
add
mov
push
xchg
add
sbb
repz
add
dec
pop
icebp
sub
or
fcomps
stos
lcall
sbb
mov
and
pop
test
add
sub
inc
add
add
lods
ficomps
add
dec
cld
aam
jo
outsb
fisubrl
rolb
ds
or
popf
adc
inc
push
mov
rcrl
add
inc
insb
xchg
or
add
add
add
xchg
push
out
xchg
add
sahf
or
add
add
cmp
ror
cld
xor
arpl
add
je
jge
test
lods
jg
ss
dec
dec
mov
das
ror
add
fcmovne
sti
sti
out
test
cmp
dec
sub
cltd
mov
dec
cmp
in
mov
insb
aaa
fs
adc
mov
mov
ret
and
add
ret
scas
mov
adc
sub
cmp
xor
inc
fsubs
mov
push
fcoms
loopne
das
rolb
push
fucomip
stos
push
push
add
addr16
filds
add
testl
add
add
add
pop
push
jno
outsl
les
jbe
outsl
dec
fnstsw
xchg
add
adc
movb
add
add
mov
inc
add
fsubp
out
add
js
push
add
mov
inc
add
add
popf
outsb
dec
nop
add
out
addr16
cmp
ficoms
add
push
dec
mov
adc
adc
add
int3
fidivrs
mov
inc
add
push
cmp
dec
add
mov
cmp
aad
shrl
add
add
sub
add
stc
movb
sbb
pop
aas
or
cmc
jg
and
add
out
add
fcomp
jmp
add
int3
mov
cltd
inc
add
out
pop
adc
lea
add
cmp
mov
add
jg
cmp
add
pusha
add
pop
cwtl
dec
std
push
aas
out
add
test
add
lcall
aam
xchg
mov
add
add
xchg
mov
pop
push
sbb
add
add
sub
pop
out
in
jecxz
inc
les
jp
add
outsb
push
ficoml
inc
add
jge
or
jl
ljmp
mov
jl
sub
test
xchg
add
sbb
add
ljmp
rolb
syscall
aam
mov
push
and
mov
