add
or
add
add
add
add
add
or
add
or
add
or
add
or
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
or
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
or
or
add
add
or
add
add
add
or
or
add
add
or
or
add
add
add
add
or
add
add
add
add
add
add
or
or
or
or
add
or
add
or
add
add
or
add
add
add
add
add
add
or
or
or
add
add
or
add
add
add
or
add
add
add
add
add
add
or
or
or
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
or
add
add
or
add
add
add
or
add
add
add
add
add
or
or
add
add
or
or
add
add
add
or
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
or
add
add
add
add
or
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
or
or
add
or
add
add
add
add
add
or
or
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
add
or
or
or
add
or
add
add
add
or
add
or
add
add
add
add
or
or
add
add
add
or
add
or
add
add
add
or
add
add
or
or
or
or
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
or
add
or
add
or
add
or
or
or
or
or
or
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
or
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
or
add
or
add
add
add
or
or
or
add
add
add
add
add
or
or
add
or
add
add
or
add
add
add
add
or
add
add
add
add
or
or
add
or
or
or
add
add
add
add
add
or
add
or
add
or
add
or
or
add
add
add
or
add
or
or
add
add
or
add
add
add
or
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
or
add
add
or
add
or
add
or
add
add
or
or
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
add
or
add
or
add
add
add
or
add
or
or
add
add
add
or
add
or
add
or
add
or
or
add
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
or
add
add
add
add
add
or
add
or
add
add
or
add
or
add
add
add
add
or
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
or
add
or
add
add
add
or
add
or
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
add
or
or
add
add
or
add
or
add
or
add
add
add
add
add
add
or
or
or
or
or
or
add
add
add
add
or
add
add
or
add
add
add
add
or
or
or
add
or
or
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
or
add
or
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
or
add
add
add
add
or
add
or
add
or
add
or
or
or
add
or
or
or
or
or
add
or
or
add
or
add
add
or
add
or
add
or
add
or
add
or
or
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
or
add
add
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
or
add
add
or
or
or
add
or
or
or
add
or
add
or
add
or
add
add
add
or
or
add
add
add
add
or
add
add
add
add
or
add
add
or
add
or
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
or
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
or
or
add
add
add
add
or
add
or
add
or
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
or
or
or
or
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
or
add
add
or
or
or
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
or
or
or
or
or
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
or
add
add
or
add
or
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
or
add
add
or
add
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
or
add
add
or
add
or
add
add
add
or
or
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
or
or
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
or
add
add
or
or
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
add
or
or
add
or
add
add
or
or
or
or
or
or
add
or
add
or
add
add
add
or
or
or
or
add
add
or
add
or
or
or
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
or
add
or
add
add
or
add
add
add
add
or
add
or
add
add
add
or
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
or
add
or
or
or
add
or
add
or
add
add
or
add
or
add
add
add
add
or
add
or
or
add
or
or
add
add
add
or
add
add
or
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
or
or
add
add
or
or
add
add
add
or
add
or
or
add
add
or
or
add
add
add
add
add
add
add
add
or
add
add
or
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
add
add
add
or
or
add
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
or
add
or
or
or
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
or
or
or
add
or
add
or
add
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
add
add
add
or
or
add
add
add
or
or
add
add
add
add
or
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
or
or
add
or
add
add
or
add
add
add
or
add
add
add
add
or
add
or
or
or
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
or
add
add
add
or
or
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
or
or
add
add
add
add
or
or
add
or
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
or
add
or
add
add
or
or
or
or
add
add
or
add
add
or
or
add
add
or
add
or
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
or
add
add
add
or
add
add
add
add
add
or
or
add
add
or
add
or
add
or
or
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
or
add
add
or
add
or
or
add
or
add
or
or
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
or
or
add
add
add
or
or
add
or
add
or
or
or
add
add
add
add
add
add
add
add
or
or
add
add
add
or
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
or
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
or
add
add
or
add
add
add
or
add
or
add
or
add
or
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
or
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
cltd
add
repz
adc
xchg
iret
and
add
add
push
add
add
sub
pop
xor
jecxz
fld
dec
add
add
mov
inc
cs
push
sti
mov
cmp
cmp
push
orl
jo
mov
cltd
xchg
jb
jae
lret
xsaves
add
fstpl
add
pop
rclb
fsubl
mov
mov
int3
arpl
add
add
add
add
leave
test
inc
push
push
into
sub
out
mov
add
add
outsb
dec
sbb
add
jecxz
pop
je
push
push
xchg
popa
shll
add
adc
fsubrl
xor
mov
enter
sti
inc
mov
les
int3
test
push
mov
adc
pop
or
add
sbb
mov
xorl
mov
aas
stos
ljmp
mov
addr16
in
jo
and
and
adc
movsb
cli
fldcw
add
xor
or
add
add
ret
push
cmp
sbb
imul
fsubrs
cmp
xchg
mov
out
out
in
or
or
add
add
add
lret
imul
loopne
outsl
push
scas
adc
rorb
pop
xor
add
add
cltd
sbb
cld
ficoml
xchg
insl
ds
shll
mov
mov
sarb
push
loope
andb
add
les
or
jp
sub
cmp
adc
fsubr
jmp
outsl
mov
cmp
sub
je
icebp
xchg
sbb
pop
xchg
pop
jg
sbb
imul
xchg
andb
add
push
mov
add
add
ret
and
dec
mov
lret
bswap
lahf
push
push
and
bound
data16
inc
mov
inc
add
add
or
adc
push
pop
nop
or
add
add
or
add
add
push
mov
or
add
add
jecxz
mov
mov
xor
sbb
pop
inc
mov
sarb
xor
shll
and
hlt
or
cli
comiss
pop
ja
imul
cmc
jno
jb
clc
aam
add
mov
xor
je
repz
loop
stos
dec
fldt
insl
jp
pop
mov
js
mov
pop
aam
xchg
mov
mov
add
add
addr16
xchg
bound
gs
adc
jno
mov
imul
sub
add
add
xchg
mov
jno
ss
mov
aas
xor
cmp
pushf
sbb
leave
xchg
xor
mov
cmp
repz
int
mov
scas
mov
and
add
add
daa
mov
inc
pushf
or
push
stos
fiadds
dec
sbb
je
mov
adc
out
std
aad
add
add
mov
xchg
xorb
fsub
mov
enter
mov
mov
pop
clc
fwait
jg
test
xchg
roll
cmp
xchg
mov
jp
into
mov
add
mov
add
mov
cld
pcmpgtd
xor
inc
test
out
loope
xchg
mov
mov
cmpsb
dec
lcall
add
add
add
add
out
in
aad
jb
adc
add
add
lods
iret
int3
loopne
sbb
push
pop
sar
mov
jo
jg
aas
lret
jl
mov
cmp
add
add
add
scas
ret
or
inc
inc
in
daa
xor
aad
cld
xchg
xor
insb
mov
ret
mov
add
loopne
pop
mov
loopne
add
dec
ret
mov
mov
lds
dec
lock
add
add
test
add
inc
mov
push
jnp
icebp
stos
fldt
sarb
jae
jae
jns
ds
xor
aaa
jbe
rcll
add
pop
icebp
mov
xchg
adc
add
xchg
cmp
loop
jns
jl
cmp
fisubl
and
je
shl
jnp
jp
mov
outsb
ret
cmc
test
fstpt
add
add
add
and
xchg
decb
out
mov
lock
cld
jne
movq
clc
xor
jmp
sti
divb
gs
movsb
xlat
iret
xor
pushf
aam
repz
mov
dec
mov
pushf
push
insb
add
add
int3
jbe
in
call
lret
cmp
add
popa
dec
rolb
lock
xorb
pop
mov
rcrb
xchg
daa
sbb
repnz
int3
sbb
add
in
add
add
sti
push
jae
ret
fstps
fildl
repnz
test
add
add
add
mov
outsl
imul
sbb
negb
jb
lods
daa
int3
mov
adc
mov
in
push
xorl
push
add
add
cs
rcll
popw
xor
pusha
add
add
fadds
add
add
dec
mov
out
mov
sahf
inc
and
inc
pushf
rcr
add
mov
repnz
mov
push
into
mov
ret
xchg
push
ss
push
sbb
out
cmp
ja
popf
addb
add
or
add
add
fnstcw
push
test
fldcw
gs
pop
stos
cli
insb
mov
fsubrs
cmp
test
inc
insl
out
mov
jno
out
push
xorl
push
les
xchg
out
into
std
sub
push
cmpsl
dec
popf
pop
mov
add
add
push
pop
frstor
mov
outsl
ja
rclb
loop
cmp
push
and
dec
add
add
movsl
push
mov
test
xchg
or
jg
xor
jo
mov
idivb
add
cs
aaa
xor
inc
ja
pop
fdivs
mov
gs
add
add
add
shrl
push
xorl
cmpb
repz
or
add
add
xor
fwait
icebp
pop
mov
add
add
jle
out
jmp
addl
mov
out
jae
push
fdivs
ss
cmpb
adc
js
sahf
loop
pop
sbb
insl
pause
add
call
mov
sti
fcmovu
ss
iret
dec
outsb
pusha
add
add
dec
test
inc
add
add
fistpl
add
jae
daa
pushf
xchg
lahf
dec
icebp
jp
addb
pop
loopne
cs
cmp
and
add
add
mov
outsl
mov
sub
and
clc
mov
incb
and
or
aas
mov
popf
push
xor
push
int
cltd
pushf
pop
scas
and
add
dec
rclb
sub
lock
add
add
pop
mov
outsl
dec
dec
jmp
add
and
popa
outsb
sbb
repnz
stc
sarb
xchg
rcll
jbe
je
mov
cs
in
loopne
cs
lea
aad
std
aas
xlat
sub
add
add
sbb
xchg
sbb
loope
add
mov
mov
xchg
sbb
imul
add
add
push
mov
aad
bound
add
add
and
and
add
add
jmp
stos
xchg
inc
sub
xchg
pusha
add
add
leave
pop
loope
cld
and
add
add
out
inc
movsl
push
outsl
pop
mov
out
pop
js
inc
aas
fldl
xchg
or
mov
mov
stos
jmp
add
add
add
add
stc
xchg
or
mov
adc
scas
test
popa
mov
dec
scas
mov
mov
imul
and
add
add
mov
sahf
push
pop
popa
icebp
ljmp
dec
std
imul
popf
xchg
xlat
mov
popa
sbb
add
iret
and
aaa
out
inc
pop
ljmp
xchg
or
add
add
bndldx
add
inc
mov
mov
aas
or
add
add
push
notl
inc
pop
push
les
int3
cmp
iret
jns
push
and
arpl
mov
dec
add
add
or
xchg
mov
pop
ret
mov
enter
cwtl
ljmp
adc
jge
loopne
pop
leave
cmp
sti
or
jae
or
dec
xor
loop
es
in
nop
lret
add
mov
inc
idiv
or
mov
push
loop
add
jo
sbb
mov
dec
add
add
cltd
inc
mov
jne
not
test
and
mov
push
mov
adc
leave
cmp
push
insl
sbb
add
add
scas
inc
adc
add
add
add
divb
and
add
add
inc
lea
subps
push
add
dec
iret
push
push
and
add
sarb
call
je
insl
pop
lds
pop
xor
rcrb
xchg
pop
add
sbb
inc
clc
or
add
add
jle
in
mov
fisubrl
dec
mov
aad
stos
enter
xchg
lcall
idivb
jmp
aaa
pop
movsb
insl
sub
outsb
lret
sub
mov
xor
movsl
and
add
add
add
mov
xor
ret
add
add
add
into
lods
dec
add
add
scas
mov
xchg
scas
push
pop
pusha
add
add
mov
in
popl
ja
aam
mov
movsb
popa
cs
add
add
mov
add
add
jae
jae
dec
es
into
pop
pop
ss
in
and
xchg
or
jmp
mov
gs
pop
mov
adc
mov
inc
add
add
pop
adc
jp
jl
out
jp
mov
add
fs
adc
ja
mov
jne
loop
stos
cli
cwtl
jb
mov
pop
das
mov
gs
rolb
sbb
add
add
cmp
movsb
aas
inc
mov
add
ret
adc
cld
mov
mov
adc
cmp
bound
fcoms
mov
int
mov
jecxz
fcom
cs
nop
je
insl
cld
adc
inc
add
add
in
xchg
in
rorb
mov
add
fidivrs
sbb
mov
fildl
add
add
ret
mov
outsb
mov
shrb
add
add
arpl
icebp
jne
xor
cs
xchg
inc
and
lods
jmp
stc
jno
mov
jecxz
lret
jle
repz
pop
sub
add
add
adc
shr
sub
add
add
cmp
cli
jb
lret
push
adc
pop
ret
sbb
call
add
dec
stos
stos
lods
addl
fisubrs
or
adc
aaa
add
add
add
pop
imul
push
xchg
iret
push
mov
in
adcb
xor
or
push
mov
push
movb
mov
cmpsb
cmpl
sbb
ret
mov
add
add
addr16
xchg
test
and
sbbb
pop
mov
andl
lods
adc
jae,pn
pusha
add
add
test
push
in
push
in
and
add
add
dec
xor
and
sub
add
add
xor
stc
imul
stc
xchg
ret
pop
pop
es
std
lcall
mov
jb
inc
adc
and
add
add
sahf
mov
add
xor
sub
shlb
add
add
adc
into
adc
in
hlt
fisubrl
inc
mov
sbb
das
xchg
dec
ret
int
rcrl
leave
inc
and
add
or
adc
mov
arpl
mov
lock
add
add
push
mov
sub
mov
add
aaa
push
push
sbb
add
sbb
mov
divl
cli
or
add
add
loope
push
testl
stos
fcomps
mov
pop
mov
daa
push
jno
in
inc
orl
add
clc
dec
lea
fdivrl
clc
cwtl
ljmp
mov
xchg
push
pushf
daa
ja
ret
mov
inc
mov
enter
push
inc
inc
add
add
pop
or
xor
in
daa
inc
push
test
push
sbb
addr16
stos
repz
xor
add
add
xor
xorb
adc
mov
mov
stos
mov
popf
push
shrb
or
cmp
add
add
lret
jmp
lods
pop
cwtl
movsl
or
in
sbb
or
add
add
lret
sbb
dec
cmp
add
push
mov
iret
jmp
js
mov
mov
jmp
cmp
lret
jg
xchg
push
insl
lea
pop
insl
mov
add
add
dec
add
add
push
lds
leave
cbtw
add
add
add
ss
stos
sub
add
add
pop
and
push
into
or
add
add
jmp
lret
xorb
test
loopne
fmul
cmp
mov
mov
movsl
sahf
je
scas
adc
mov
or
ja
scas
jle
mov
rolb
xchg
in
ss
xor
mov
bswap
or
bound
roll
stc
bound
repz
adc
xlat
mov
adc
xor
add
add
xchg
test
push
xchg
in
gs
mov
inc
add
add
add
sub
ljmp
add
mov
jns
ds
xor
test
lahf
jp
and
mov
push
or
test
mov
sti
daa
test
test
hlt
push
inc
jg
push
add
add
xchg
js
cmpsb
push
out
imul
add
add
sbb
fdivrl
mov
jl
pop
xchg
pop
aas
xor
jecxz
cmc
pop
cwtl
cmpsl
rolb
add
std
jno
adc
cmp
jb
inc
jl
add
add
add
sub
sbb
out
daa
lods
push
mov
aam
cmp
ss
add
add
iret
mov
pop
cmp
nop
out
int3
sti
ja
mov
add
add
popa
sub
add
add
pop
cltd
outsl
in
stc
pop
leave
mov
inc
mov
sbb
mov
repz
mov
ret
or
add
outsb
imul
fistl
add
add
pusha
add
jecxz
xchg
test
lret
pop
xchg
out
dec
icebp
frstor
sbb
mov
add
dec
jg
insl
data16
add
add
add
fildl
lahf
push
gs
add
add
add
call
push
repnz
mov
add
outsb
pop
jb
add
js
sub
outsb
jmp
std
pop
ret
in
insb
mov
loope
jo
add
add
aad
cmpsb
in
dec
out
pop
dec
add
add
inc
push
mov
mov
add
add
daa
in
fmul
pop
rclw
xchg
mov
inc
mov
xchg
fcomi
out
fcoms
inc
xchg
sub
jg
hlt
or
mov
imulb
pusha
mov
adc
mov
hlt
lock
mov
sub
add
add
xchg
sub
add
add
imul
movsl
imul
add
add
ljmp
sbb
and
inc
stos
pusha
mov
call
incb
sti
mov
cltd
and
add
add
mov
pop
push
push
jle
xchg
mov
sub
sbb
adc
call
add
add
mov
cli
push
sub
xchg
pop
stos
lahf
or
xchg
int3
adcl
xchg
xor
inc
add
jb
mov
dec
es
shll
add
mov
mov
insb
mov
cld
dec
push
xchg
xor
popa
push
xor
jl
lock
mov
sbb
xchg
sub
add
add
xchg
add
loop
adc
add
add
outsl
loopne
mov
jb
sub
fimull
jp
cmc
sub
dec
mov
fst
inc
mov
or
les
test
imul
imul
push
push
dec
pop
test
aas
fildll
add
cmp
or
add
add
pop
mov
xchg
xor
cltd
popa
outsl
in
and
add
mov
jg
xor
inc
shlb
pop
popf
pop
inc
loopne
cmp
sti
and
mov
lds
mov
mov
fidivs
mov
out
sarl
mov
mov
out
test
xchg
xlat
rcrb
dec
incb
in
cmp
add
xor
add
add
add
inc
sub
add
sub
and
repnz
shll
xchg
pushf
adc
pop
test
gs
in
push
ret
mov
or
add
add
add
add
sub
add
add
push
enter
cmp
rcll
in
cwtl
jecxz
stos
icebp
jns
add
add
sub
add
add
es
and
out
mov
add
add
xor
incl
mov
cmc
mov
mov
adc
cld
add
add
mov
or
add
add
add
add
fsub
mov
mov
scas
imul
xchg
pop
jl
test
inc
jb
or
add
add
jp
or
add
rorb
add
add
icebp
xchg
fnsave
and
add
add
aam
cmp
sbb
ja
cwtl
dec
jmp
shlb
aad
in
xchg
mov
stos
jo
das
cmp
and
int3
pop
enter
mov
mov
or
add
add
movsb
push
push
stc
test
add
jle
data16
add
add
add
add
ljmp
add
insb
mov
mov
inc
mov
jno
add
add
sbb
aam
icebp
xchg
pop
sbb
xchg
pop
dec
lret
stos
pop
popa
mov
jl
fadd
stos
xchg
or
cmpsl
mov
arpl
aam
mov
stos
iret
pop
stos
js
pop
xchg
inc
rcll
add
and
clc
add
mov
int
shrl
addr16
and
ret
movsb
or
add
add
inc
cmp
shrl
add
add
mov
and
jne
sbb
repnz
pop
outsl
push
or
push
insl
xchg
test
push
out
arpl
add
add
add
add
jns
imul
cmpsb
cmp
add
and
gs
add
add
add
and
dec
mov
add
add
ror
mov
sbb
pop
test
sub
jg
lock
mov
imul
mov
dec
and
cmp
jecxz
jne
in
aad
scas
or
in
mov
fiadds
xor
sahf
clc
xor
negl
push
enter
mov
jnp
mov
test
mov
fucom
loopne
scas
sub
mov
out
add
add
popa
insl
inc
mov
mov
ja
add
add
pop
flds
cmp
sub
add
add
jo
out
std
add
pop
push
aad
fisttpl
add
add
jbe
dec
in
in
inc
in
sbb
and
adc
and
sbb
jnp
cmp
cmp
jmp
cli
pshufw
add
inc
xchg
cld
daa
lcall
add
fadds
add
jecxz
push
jb
jg
mov
je
mov
xchg
addr16
sub
push
pushf
lds
pushl
stos
xlat
rcll
les
add
add
aad
cld
mov
mov
or
jne
pop
insb
mov
add
jmp
icebp
dec
mov
add
xchg
cmc
and
punpcklbw
and
inc
dec
mov
pop
in
jmp
mov
add
xor
filds
mov
std
sub
stc
popf
mov
inc
insl
or
jbe
stc
je
shrl
inc
or
mov
loop
fs
filds
mov
add
testb
mov
fadd
push
and
add
add
add
add
icebp
inc
or
lea
fcompl
push
xchg
fistl
imul
lret
push
jo
fistpl
mov
sub
out
push
push
adc
cli
push
pop
cld
xchg
outsb
sbb
add
jns
mov
dec
rclb
out
daa
xor
pop
jbe
imul
add
add
dec
pop
or
jmp
add
sahf
scas
dec
push
sarl
cs
mov
outsl
es
cwtl
mov
mov
sti
out
xchg
push
outsl
aas
mov
lcall
inc
jno
and
add
add
add
add
or
add
add
scas
and
pop
mov
add
add
add
pop
sub
add
add
mov
lds
mov
jb
fistpll
test
jmp
ficoml
and
dec
lcall
mov
test
add
jne
mov
lahf
shr
jb
andl
ljmp
aaa
rcr
sahf
lcall
adc
pop
xor
mov
lds
sbb
es
push
je
xor
xor
lret
out
push
and
add
add
xchg
push
test
pop
cld
sarb
rcr
ja
cmpsl
loope
mov
and
add
add
add
xchg
cmpsl
ljmp
add
add
add
cmpb
mov
sarl
out
xor
and
add
add
xor
xor
jo
add
add
hlt
dec
add
add
xchg
add
rorl
xor
dec
bound
jnp
add
addr16
add
add
ds
negb
pop
add
mov
rolb
pusha
add
add
das
ficoms
ja
in
sbb
mov
mov
xchg
add
add
adcl
add
cltd
and
data16
jae
cli
jo
xor
add
add
aas
sbb
dec
imul
cmpsl
dec
add
add
push
shlb
push
or
sbb
add
add
add
add
sub
outsl
mov
sbb
mov
jg
push
loop
scas
cmp
outsl
mov
ss
mov
jmp
cli
jnp
and
dec
add
add
int3
mov
mov
inc
cld
inc
push
out
add
outsl
cs
aad
fldenv
pop
test
adc
cmpsl
gs
fidivrs
lods
dec
bound
push
repnz
xor
jb
stos
cmpsl
repz
add
add
dec
mov
mov
add
lock
rorb
add
dec
push
call
mov
test
in
push
cmpl
aad
les
leave
stos
rclb
ret
loop
lret
cmpb
shrl
out
xlat
popa
and
es
jne
mov
push
mov
sub
call
cmp
jne
lea
push
push
push
mov
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
je
mov
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
jne
push
bnd
cs
or
add
add
fstl
inc
mov
lods
add
add
add
mov
xor
sbb
mov
rcll
mov
adc
sahf
lock
push
movsb
fmul
push
mov
mov
add
inc
jnp
repnz
cmp
mov
sbb
movb
add
mov
jl
mov
adc
enter
out
out
imulb
add
add
sbb
dec
cs
push
lret
into
nop
add
adc
inc
rcrl
add
add
adc
shll
jae
sahf
out
nop
inc
cli
push
ret
mov
orl
add
dec
pop
inc
daa
xchg
jg
sub
add
add
das
mov
jb,pt
mov
add
add
adc
inc
mov
add
mov
les
add
add
repnz
fcomps
mov
inc
ja
add
add
add
sbb
mov
sbb
adc
cmc
mov
cld
fcompl
jb
jmp
xchg
mov
mov
orl
push
pop
lods
mov
xchg
sahf
ljmp
pop
subb
fmull
add
mov
pop
mov
decb
add
add
fstpl
jge
mov
sub
pushf
add
add
add
cld
out
add
add
add
xor
mov
pop
push
inc
ss
mov
mov
xorl
mov
add
push
mov
inc
dec
add
add
lods
add
add
add
add
lods
test
ret
imul
add
add
das
push
xchg
mov
add
sbb
push
movsl
xchg
arpl
add
jle
notb
out
repnz
sbb
andl
inc
add
add
testl
add
icebp
fistpl
xchg
cmpsb
xor
mov
xor
push
pop
sahf
adc
mov
test
shlb
mov
xchg
call
stos
repnz
fisttps
movsl
lcall
ja
add
jl
loope
inc
mov
push
int3
add
add
add
and
add
add
mov
add
add
add
addr16
sbb
cmpsl
xor
add
sbb
out
or
add
loop
sub
xor
hlt
sbb
les
scas
cwtl
mov
push
scas
fisubl
add
add
xor
in
add
add
test
loop
push
jnp
out
popa
adc
dec
mov
mov
cmp
and
add
add
test
mov
les
add
repnz
outsb
sbb
xchg
lock
add
add
cmc
aaa
imul
stos
push
mov
mov
aam
bound
mov
pop
pop
loop
mov
add
loope
fldt
dec
mov
or
rorl
loopne
std
clc
jge
dec
and
ljmp
shll
subl
add
loopne
test
fwait
mov
shl
fcmovb
mov
loope
push
aam
cmp
jae
out
movsl
sbb
pop
mov
jne
jge
scas
sbb
jae
xlat
push
dec
ja
cwtl
cld
fmuls
ds
mov
jns
fsts
add
mov
stos
out
push
sub
push
lahf
push
inc
lahf
fsubs
lcall
jle
outsl
pushf
sbb
out
lods
add
mov
int3
loope
sarb
jle
std
rorl
fstpl
add
and
xor
cmp
mov
add
add
add
notl
lock
scas
cmp
sub
add
add
add
add
ja
sbb
dec
stc
mov
inc
sbb
mov
negl
icebp
jbe
sbb
add
lds
mov
sbb
sbb
xchg
push
cmp
arpl
xor
mov
sti
inc
adc
sub
add
fisttpl
push
mov
pop
leave
iret
cmpl
inc
add
add
out
mov
mov
ret
push
frstor
add
add
jne
pop
xor
add
add
add
fidivrl
cmp
adc
scas
lods
int
insl
sti
mov
test
js
mov
imul
push
push
or
mov
add
xchg
mov
cmpsb
cmp
mov
insb
add
add
push
mov
sahf
dec
cmp
shrl
pop
ret
enter
xor
add
jo
push
jle
adc
push
mov
loope
enter
sbb
push
or
adc
std
outsb
mov
add
pop
sbb
sbb
imul
andb
add
loop
shr
fdiv
andb
cs
pop
lret
fstl
dec
mov
lcall
hlt
ja
and
xchg
call
mull
mov
stc
mov
fsubrs
mov
pop
jmp
sbb
in
addr16
in
add
add
push
out
rorb
les
mov
test
and
dec
add
add
cmp
pop
xchg
loop
cmp
fsubrs
mov
add
jl
push
fstl
add
add
inc
outsb
imul
loopne
sbb
push
les
icebp
adc
jp
xchg
iret
arpl
xchg
and
jne
add
add
jae
fisttpll
cmp
scas
mov
push
sahf
mov
outsb
out
shll
push
add
add
add
mov
add
add
xor
jne
fildll
lcall
add
hlt
xchg
rcrl
push
test
fsts
xor
add
add
add
add
add
jle
mov
fmull
dec
inc
rcrb
add
rorb
add
add
pushf
mov
jle,pt
call
psadbw
cltd
popf
jg
lcall
mov
leave
jle
insb
add
add
outsb
inc
add
add
fimuls
push
and
cmpl
mov
mov
xor
loopne
or
add
add
inc
add
add
cmpsl
fcomp
imul
mov
cmc
movsb
mov
inc
add
add
mov
push
fwait
enter
add
out
jle
inc
mov
xchg
stos
test
mov
dec
add
add
fnstsw
inc
dec
cltd
dec
fbld
add
add
mov
ret
add
add
push
xor
dec
test
pop
jecxz
add
add
add
repz
push
shl
pop
test
mov
stc
lods
jp
ja
sbb
lea
movsb
jno
ret
sbbb
mov
add
add
dec
data16
add
add
cmpb
add
add
pushl
add
add
je
outsl
push
shl
sbb
bound
pusha
mov
or
shll
lcall
mov
xchg
nop
add
jno
js
jecxz
test
cmpsl
mov
call
sub
mov
dec
int
sbb
cs
dec
ja
mov
mov
add
add
ss
arpl
push
mov
loope
mov
fcoml
inc
pop
mov
lcall
test
add
cmpl
loop
sub
je
add
add
es
fnstcw
stos
push
or
add
jle
pop
inc
dec
cli
pop
or
mov
mov
push
fisttpl
movsb
jp
mov
leave
addb
add
jmp
push
lock
popf
and
add
xchg
cltd
add
jb
cmp
sub
and
rolb
add
add
add
pop
in
inc
add
add
movsb
jecxz
fprem
add
add
add
clc
mov
pop
mov
mov
add
pop
push
or
add
add
insb
add
add
pushf
sub
nop
ret
dec
mov
xor
add
add
pop
push
cmp
clc
add
hlt
fisubs
add
add
in
jecxz
pop
mov
add
add
jbe
mov
and
lods
bound
aad
ds
pushw
cmp
dec
sti
orl
hlt
daa
adc
xchg
or
add
add
inc
movsb
inc
movsb
xchg
lahf
sti
mov
ror
stc
xor
xchg
sbb
rcll
add
add
jle
popf
inc
movsl
sub
add
add
jge
es
es
shlb
add
sub
out
push
cmpsl
cmpsb
aam
adc
pop
xor
add
mov
arpl
mov
dec
leave
mov
sbb
in
fsubrp
jno
sub
cwtl
fldt
add
add
jge
scas
mov
mov
mov
mov
fdivrs
stc
jnp
add
add
add
add
add
pop
add
mov
idivb
mov
xchg
divps
cmp
lods
mov
add
add
add
out
mov
add
sbb
mov
in
inc
inc
mov
xor
mov
in
mov
mov
daa
push
in
and
loop
push
shlb
sub
push
loope
jns
sbb
xor
stos
fisubl
add
outsb
rcrb
and
add
mov
out
or
add
add
std
mov
cmc
fsubrs
daa
out
lret
jge
mov
xlat
cmp
sbb
add
add
es
xchg
adc
mov
push
inc
add
inc
add
add
adc
pop
xchg
mov
mov
jl,pn
cmp
add
add
jg
adc
push
scas
mov
xchg
nop
in
sbb
mov
add
inc
and
push
pop
inc
test
out
mul
mov
add
add
pop
pop
inc
push
js
add
add
push
adc
add
add
rorb
mov
nop
adc
mov
outsb
xchg
jge
mov
push
sub
mov
push
pop
cmpsl
push
mov
jge
xor
inc
add
add
and
add
add
lods
nop
sbb
int3
popa
add
cmc
dec
add
add
xchg
int
push
nop
insb
mov
push
pop
mov
jmp
js
cld
imul
mov
mov
std
mov
add
add
jle
adc
std
into
xor
aad
movsb
dec
mov
incl
imul
imul
cli
adc
and
inc
lock
add
jecxz
mov
jmp
mov
add
iret
popf
mov
sub
add
add
add
fcmovb
ljmp
mov
lret
add
add
jp
insb
add
add
cli
xor
add
fsub
and
mov
idiv
ret
inc
imul
mov
sti
daa
mov
mov
add
add
jle
lcall
mov
cmp
jg
pop
jo
jno
mov
outsb
push
push
mov
and
ljmp
shrb
cld
shr
mov
and
es
add
add
leave
jle
lods
popf
add
mov
in
cmp
mov
mov
mov
jno
test
mov
dec
pop
mov
arpl
sbb
add
xchg
and
add
add
xchg
jle
inc
mov
mov
mov
mov
dec
out
jo
mul
pop
mov
add
add
pop
loope
cmp
orb
add
add
mov
lret
jp
ja
cmpsl
jo
mov
mov
add
add
or
js
push
and
add
jbe
or
fwait
sbb
xchg
xor
jmp
pop
push
mov
add
add
mov
stos
ja
jl
jp
lret
out
sub
add
add
pop
ja
add
add
xor
clc
add
dec
nop
and
in
and
fidivs
jmp
cltd
sbb
mov
mov
sbb
xlat
out
lcall
ret
in
insl
pop
pop
dec
and
add
add
adc
ficomps
fstp
jecxz
loopne
jp
in
dec
repnz
popa
mov
addr16
adcl
mov
addr16
in
mov
add
add
fidivl
mov
xorl
mov
sub
mov
mov
aad
les
add
add
hlt
fldl
sti
shrb
pop
lock
push
jbe
das
adc
sbb
add
jge
mov
add
in
cmp
or
mov
add
add
fistps
sbb
add
add
add
add
lahf
je
fistpl
jge
or
mov
mov
fdivl
mov
and
add
add
inc
push
xor
aam
std
xchg
push
mov
in
lcall
add
gs
and
int3
cmp
aaa
bound
clc
xchg
jno
add
add
in
jo
inc
daa
icebp
js
into
insb
mov
or
das
sub
mov
add
add
and
xchg
cld
mov
das
mov
mov
outsb
dec
jecxz
add
add
pop
mov
in
cmpsb
or
repnz
lahf
add
lock
outsb
ds
sbb
xchg
pop
lret
jmp
cli
mov
ds
add
add
inc
mov
xor
mov
shl
sub
pusha
mov
lea
mov
enter
and
xlat
rolb
ljmp
xchg
sub
fisubrs
lods
outsb
cmp
jne
lret
mov
add
add
add
mov
mov
push
jp
and
add
ffree
mov
or
mov
add
add
jns
dec
gs
daa
imul
add
lods
sarl
add
add
pop
test
sub
add
add
add
add
or
mov
pop
lahf
int3
pop
adc
cli
rclb
dec
or
ja
aad
add
add
aas
adc
hlt
xchg
sub
fnstsw
push
and
add
add
lret
add
add
add
push
call
nop
jmp
add
xchg
in
push
mov
mov
leave
nop
jmp
rolb
xor
add
or
add
sub
mov
xchg
ret
outsl
add
add
add
add
mov
nop
nop
jae
add
or
add
mov
add
les
aas
push
and
add
out
add
adc
fldt
mov
clc
repnz
nop
nop
jae
add
add
mov
add
inc
jne
nop
push
mov
leave
nop
jmp
dec
dec
fildl
push
add
repnz
nop
nop
jae
add
add
add
add
add
add
clc
repnz
nop
nop
jae
add
hlt
add
add
jl
stos
jmp
repnz
nop
nop
jae
pop
or
add
loope
add
add
clc
repnz
nop
nop
jae
add
push
test
mov
push
clc
repnz
nop
nop
jae
add
stos
push
clc
mov
add
add
push
and
js
clc
repnz
nop
nop
jae
add
add
inc
add
adcl
pop
add
pop
add
cmp
and
add
notl
in
addl
sub
add
add
add
add
insb
nop
push
mov
leave
nop
jmp
or
add
arpl
lds
nop
push
mov
leave
nop
jmp
pop
add
add
add
repnz
nop
nop
jae
add
repz
add
in
push
push
mov
xchg
ret
mov
add
add
add
clc
repnz
nop
nop
jae
add
add
add
fcmovnbe
add
fucomp
xchg
sub
add
add
add
mov
add
adc
or
add
cld
nop
nop
jae
xor
add
add
out
inc
cmp
add
clc
repnz
nop
nop
jae
add
add
add
fldt
ds
fnsave
add
clc
repnz
nop
nop
jae
add
add
add
fldl
aaa
xor
clc
repnz
nop
nop
jae
add
add
stos
add
or
push
inc
add
add
inc
push
clc
repnz
nop
nop
jae
pop
add
stc
add
add
add
movsl
pop
push
mov
xchg
ret
add
add
inc
repz
dec
jp
je
clc
repnz
nop
nop
jae
int
add
movl
and
push
mov
leave
nop
jmp
add
and
int
add
jno
sbb
clc
repnz
nop
nop
jae
outsl
xchg
add
pop
outsl
add
inc
clc
repnz
nop
nop
jae
or
add
add
mov
mov
push
or
les
push
mov
leave
nop
jmp
add
test
test
lock
shl
nop
push
mov
leave
nop
jmp
add
push
mov
xchg
ret
or
call
dec
add
cmp
mov
adc
push
mov
xchg
ret
hlt
add
lock
lock
movl
nop
push
mov
leave
nop
jmp
add
push
or
ds
add
sahf
ss
push
push
mov
xchg
ret
test
jns
add
lahf
add
push
push
mov
xchg
ret
add
add
add
add
rolb
repnz
nop
nop
jae
add
dec
inc
add
ret
add
add
add
clc
repnz
nop
nop
jae
xor
mov
dec
lods
add
add
add
repnz
nop
nop
jae
lods
imul
cmp
nop
jae
add
or
add
add
mov
clc
repnz
nop
nop
jae
inc
scas
add
push
add
stos
dec
jne
clc
repnz
nop
nop
jae
rolb
dec
shl
int
cmp
sti
nop
push
mov
leave
nop
jmp
adc
pop
scas
inc
dec
stos
stc
mov
pop
inc
pusha
clc
repnz
nop
nop
jae
sub
add
pop
add
xor
push
out
popl
clc
repnz
nop
nop
jae
jns
adc
lahf
add
repz
jmp
inc
clc
repnz
nop
nop
jae
add
incb
add
int
mov
push
mov
xchg
ret
inc
add
add
add
add
add
ds
popa
nop
push
mov
leave
nop
jmp
or
dec
sarb
add
add
and
and
add
add
add
add
add
add
sub
imul
ret
lods
push
push
testb
add
repz
mov
clc
repnz
nop
nop
jae
add
add
push
mov
rcrb
add
add
hlt
add
ss
add
push
adc
jns
je
js
repnz
nop
nop
jae
mov
or
add
add
add
std
push
clc
repnz
nop
nop
jae
add
add
xor
repz
clc
repnz
nop
nop
jae
add
xchg
add
add
mov
dec
add
repnz
nop
nop
jae
add
add
dec
or
pusha
clc
repnz
nop
nop
jae
add
pop
add
add
add
inc
stos
outsl
inc
push
mov
pop
clc
repnz
nop
nop
jae
and
mov
add
add
push
jne
clc
repnz
nop
nop
jae
add
test
dec
int
mov
xchg
inc
add
call
arpl
mov
fldl
push
push
mov
xchg
ret
add
or
add
add
add
mov
repnz
nop
nop
jae
add
add
add
mov
clc
repnz
nop
nop
jae
push
mov
ds
sbb
addb
cmp
ret
or
pop
dec
shl
stos
add
clc
repnz
nop
nop
jae
test
add
add
add
xor
mov
xchg
ret
add
xor
add
add
adc
jb
push
mov
xchg
ret
add
add
ds
std
push
push
mov
xchg
ret
fst
rolb
mov
dec
or
add
lods
ljmp
xchg
inc
add
add
int
mov
pop
sbb
repnz
nop
nop
jae
add
add
jns
add
add
inc
add
add
xchg
push
jmp
add
arpl
add
add
dec
loope
add
shrb
fistpl
nop
push
mov
leave
nop
jmp
add
and
add
sub
add
push
iret
pop
clc
repnz
nop
nop
jae
pop
add
add
mov
add
enter
push
mov
leave
nop
jmp
int
or
add
add
push
cltd
mov
push
mov
xchg
ret
rcr
add
add
dec
add
add
jge
jne
clc
repnz
nop
nop
jae
add
add
add
add
mov
nop
nop
jae
add
or
add
inc
dec
or
lahf
stos
ret
clc
repnz
nop
nop
jae
cmp
int
add
inc
pop
add
pop
push
mov
xchg
ret
rolb
add
inc
dec
dec
mov
lods
sub
clc
repnz
nop
nop
jae
dec
sub
hlt
stc
movsl
mov
clc
repnz
nop
nop
jae
outsl
jno
fldenv
add
nop
push
mov
leave
nop
jmp
mov
dec
dec
loope
xchg
add
add
jecxz
int
pop
jae
repnz
nop
nop
jae
loope
add
and
xor
rorl
cld
nop
nop
jae
xchg
add
add
outsl
cmp
out
add
repnz
nop
nop
jae
add
arpl
add
or
add
add
daa
pop
inc
add
mov
dec
add
lock
sbb
enter
repnz
nop
nop
jae
pop
add
test
decb
clc
repnz
nop
nop
jae
jns
movl
shrb
fmull
mov
xchg
ret
repz
add
add
add
xor
push
mov
xchg
ret
or
add
add
add
lahf
test
add
add
clc
repnz
nop
nop
jae
add
add
add
cmp
int
mov
mov
leave
nop
jmp
mov
add
shrb
andl
nop
nop
jae
stc
push
lahf
add
add
scas
pop
clc
repnz
nop
nop
jae
jns
lock
stos
add
add
add
nop
sub
repnz
nop
nop
jae
fstpt
add
mov
add
dec
mov
mov
add
add
push
mov
cld
nop
nop
jae
or
push
repz
xor
add
repnz
nop
nop
jae
hlt
fcmovnb
or
add
add
add
add
repnz
nop
nop
jae
lock
out
dec
xchg
add
jp
mov
clc
repnz
nop
nop
jae
add
add
mov
add
add
lret
mov
leave
nop
jmp
rolb
add
xchg
jp
mov
nop
push
mov
leave
nop
jmp
add
or
stc
add
or
clc
repnz
nop
nop
jae
inc
add
repz
add
lahf
add
push
mov
add
nop
push
mov
leave
nop
jmp
or
add
mov
jns
ss
pop
nop
push
mov
leave
nop
jmp
test
or
add
test
pop
int3
dec
mov
stos
push
mov
xchg
ret
jp
lahf
mov
add
add
je
clc
repnz
nop
nop
jae
call
stc
add
mov
clc
repnz
nop
nop
jae
repz
dec
call
rcr
mov
adc
repnz
nop
nop
jae
add
stos
add
nop
nop
jae
call
dec
repz
scas
addb
jne
clc
repnz
nop
nop
jae
repz
add
add
add
repnz
nop
nop
jae
add
inc
stos
mov
add
add
loope
push
mov
xchg
ret
jns
add
and
subb
add
add
lods
add
nop
push
mov
leave
nop
jmp
imul
add
clc
repnz
nop
nop
jae
dec
add
add
add
imul
mov
leave
nop
jmp
add
add
add
add
sub
add
add
xchg
clc
repnz
nop
nop
jae
movl
add
rclb
and
push
clc
repnz
nop
nop
jae
add
incb
jns
or
hlt
fldl
dec
lea
mov
xchg
ret
cmp
dec
or
add
lock
repnz
nop
nop
jae
inc
cmp
dec
jg
test
add
repnz
nop
nop
jae
xchg
add
or
pop
add
nop
nop
jae
stos
add
sar
dec
sub
add
cmp
sahf
push
sbb
mov
xchg
ret
add
push
clc
add
add
add
push
mov
xchg
ret
add
in
add
add
add
dec
stos
scas
add
add
or
mov
in
add
lahf
call
add
clc
repnz
nop
nop
jae
inc
or
add
add
dec
jp
call
nop
push
mov
leave
nop
jmp
ds
and
fildl
or
clc
repnz
nop
nop
jae
shrb
repz
add
mov
add
add
mov
leave
nop
jmp
clc
incb
add
add
mov
nop
push
mov
leave
nop
jmp
pop
add
movl
add
cld
nop
nop
jae
or
lock
sub
hlt
leave
add
clc
repnz
nop
nop
jae
add
add
add
add
mov
xchg
ret
call
add
or
add
add
popa
ja
clc
repnz
nop
nop
jae
sub
imul
dec
nop
push
mov
leave
nop
jmp
stos
add
and
mov
mov
push
mov
int3
add
daa
mov
add
add
std
dec
push
mov
xchg
ret
add
add
lods
dec
arpl
inc
outsl
add
clc
repnz
nop
nop
jae
lock
add
stc
out
add
add
add
add
or
add
add
push
clc
repnz
nop
nop
jae
int
or
rolb
add
add
mov
mov
inc
add
hlt
add
add
add
add
add
ja
clc
repnz
nop
nop
jae
add
add
push
rolb
add
add
nop
push
mov
leave
nop
jmp
clc
add
repz
add
add
icebp
push
mov
add
mov
add
daa
mov
dec
add
mov
add
add
mov
mov
add
nop
push
mov
leave
nop
jmp
jp
lahf
outsl
test
or
jae
add
clc
repnz
nop
nop
jae
scas
add
add
add
push
mov
nop
push
mov
leave
nop
jmp
div
jp
mov
add
jne
clc
repnz
nop
nop
jae
call
add
shlb
nop
nop
jae
jp
add
add
add
repnz
aaa
mov
clc
repnz
nop
nop
jae
or
add
add
imul
nop
push
mov
leave
nop
jmp
mov
arpl
mov
mov
push
mov
xchg
ret
loope
testb
xchg
shrb
mov
cmp
lret
add
rorb
hlt
rolb
add
and
push
mov
xchg
ret
add
inc
stc
mov
jp
add
repz
call
clc
repnz
nop
nop
jae
stc
pop
arpl
or
clc
push
mov
xchg
ret
and
add
add
add
das
fwait
push
mov
xchg
ret
dec
scas
and
mov
mov
repnz
nop
nop
jae
call
adc
add
add
fildll
inc
add
add
add
inc
lahf
pop
loope
inc
push
data16
or
rclb
nop
inc
add
add
add
dec
mov
dec
push
clc
repnz
nop
nop
jae
stc
adc
test
lods
inc
rcl
pop
push
mov
xchg
ret
clc
dec
or
add
and
sub
loop
jmp
push
mov
xchg
ret
ds
add
add
dec
and
pop
xor
clc
repnz
nop
nop
jae
add
add
add
add
scas
xor
clc
repnz
nop
nop
jae
add
call
lods
add
mov
clc
repnz
nop
nop
jae
add
stc
add
add
cmp
xor
cmp
ret
mov
testb
repz
add
icebp
push
jmp
inc
add
call
add
add
add
jns
push
clc
repnz
nop
nop
jae
imul
test
and
clc
repnz
nop
nop
jae
add
inc
add
mov
add
clc
repnz
nop
nop
jae
add
push
sar
add
addb
or
add
add
je
inc
push
push
mov
xchg
ret
call
mov
testb
sbb
mov
nop
push
mov
leave
nop
jmp
push
jns
add
add
pop
push
clc
repnz
nop
nop
jae
or
inc
add
mov
stos
stos
jle
sbb
repnz
nop
nop
jae
add
add
movl
mov
add
pop
jb
cmp
add
add
add
stos
and
add
add
mov
mov
cld
nop
nop
jae
add
add
add
repz
push
push
clc
repnz
nop
nop
jae
add
inc
xor
add
call
add
add
mov
add
clc
repnz
nop
nop
jae
add
stos
add
in
add
clc
repnz
nop
nop
jae
hlt
add
push
sbb
mov
push
mov
xchg
ret
test
or
lock
add
push
clc
repnz
nop
nop
jae
lock
add
push
add
add
add
jb
clc
repnz
nop
nop
jae
shr
xchg
or
decb
add
push
mov
xchg
ret
jp
pop
cmp
fildl
add
repz
nop
push
mov
leave
nop
jmp
adc
or
add
mov
add
mov
jne
nop
push
mov
leave
nop
jmp
add
mov
add
out
pop
mov
test
add
nop
jmp
dec
add
add
out
add
inc
mov
nop
push
mov
leave
nop
jmp
add
add
push
add
add
add
dec
jmp
rclb
push
xchg
inc
add
sarb
add
add
sti
push
clc
repnz
nop
nop
jae
add
add
add
cmp
push
clc
repnz
nop
nop
jae
add
add
clc
add
orb
push
mov
xchg
ret
call
dec
add
add
repnz
nop
nop
jae
stc
dec
add
ffree
add
test
cld
nop
nop
jae
add
add
add
or
je
clc
repnz
nop
nop
jae
rolb
orb
sub
pop
nop
push
mov
leave
nop
jmp
mov
mov
add
add
scas
ja
stos
clc
repnz
nop
nop
jae
stos
add
add
jns
adc
hlt
daa
pop
clc
repnz
nop
nop
jae
add
add
add
lods
dec
push
fisttpl
adcl
cld
nop
nop
jae
add
movl
rolb
add
jle
mov
nop
nop
jae
mov
add
xor
sub
stos
cld
and
add
add
add
add
mov
xchg
ret
in
add
imul
loope
es
repnz
nop
nop
jae
add
mov
test
adc
xorl
nop
push
mov
leave
nop
jmp
shr
lock
fisubs
nop
push
mov
leave
nop
jmp
inc
add
add
clc
repnz
nop
nop
jae
add
add
test
imul
cld
nop
nop
jae
add
or
mov
xchg
jo
add
repnz
nop
nop
jae
add
add
add
dec
push
add
add
sbb
or
mov
leave
nop
jmp
sarb
add
adc
add
inc
das
imul
clc
repnz
nop
nop
jae
cmp
add
in
add
xor
add
mov
xchg
ret
add
add
add
add
add
inc
ret
clc
repnz
nop
nop
jae
or
lods
add
adc
add
lahf
jp
pop
push
mov
insb
into
xchg
add
or
jg
stc
add
xchg
test
add
pushf
sbbb
or
nop
jmp
add
clc
fildl
fnsave
push
add
push
mov
xchg
ret
and
add
ds
je
clc
repnz
nop
nop
jae
add
xor
stos
add
push
push
mov
xchg
ret
call
arpl
add
inc
add
andb
add
add
push
insb
add
add
test
nop
jae
stos
out
sarb
add
mov
add
jp
shr
push
mov
xchg
ret
dec
outsl
mov
rolb
add
outsb
and
mov
xchg
ret
outsl
push
fnstsw
clc
shrb
call
leave
nop
jmp
lahf
pop
int
add
or
out
call
push
mov
xchg
ret
add
incb
sub
mov
pop
add
clc
repnz
nop
nop
jae
dec
rolb
add
add
adc
push
mov
leave
nop
jmp
stos
xor
add
add
mov
add
add
shlb
repnz
nop
nop
jae
call
add
in
add
add
lods
dec
mov
clc
repnz
nop
nop
jae
xor
and
push
xchg
loopne
clc
repnz
nop
nop
jae
add
add
rolb
push
dec
add
clc
repnz
nop
nop
jae
add
outsl
int
add
add
fists
nop
jmp
test
add
div
addb
lcall
repnz
nop
nop
jae
inc
shrb
add
adc
nop
jae
dec
lock
add
add
lea
clc
repnz
nop
nop
jae
add
incb
in
add
sub
cmp
cmp
ret
add
imul
add
sub
mov
leave
nop
jmp
add
fldl
add
push
mov
nop
push
mov
leave
nop
jmp
inc
add
inc
arpl
gs
nop
push
mov
leave
nop
jmp
add
add
add
idivb
nop
nop
jae
jns
add
add
jmp
incl
add
imul
clc
rolb
jp
lock
add
inc
clc
repnz
nop
nop
jae
mov
add
cltd
add
push
mov
xchg
ret
rorb
pop
stc
stc
int
add
dec
fisttps
cld
nop
nop
jae
stc
test
add
add
push
mov
xchg
ret
lahf
add
and
or
add
add
jo
add
clc
repnz
nop
nop
jae
add
imul
adc
and
clc
repnz
nop
nop
jae
testb
dec
add
add
lea
nop
push
mov
leave
nop
jmp
add
cmp
call
add
incl
nop
push
mov
leave
nop
jmp
test
mov
add
push
push
mov
xchg
ret
add
add
add
imul
pop
pop
nop
push
mov
leave
nop
jmp
add
lahf
add
add
in
add
add
push
xor
imul
nop
jae
lahf
add
and
shrb
cmp
jle
jb
nop
push
mov
leave
nop
jmp
push
add
push
add
inc
and
repnz
nop
nop
jae
loope
cmp
add
add
shrb
in
leave
nop
jmp
dec
xor
add
xbegin
xor
mov
xchg
ret
add
add
add
rolb
add
add
add
add
jb
mov
clc
repnz
nop
nop
jae
inc
add
sub
lods
rolb
add
rep
push
mov
xchg
ret
inc
add
lock
imul
clc
repnz
nop
nop
jae
cmp
testb
fnstsw
and
and
in
add
pop
add
insb
add
inc
loope
add
add
add
test
nop
push
mov
leave
nop
jmp
dec
scas
add
mov
add
or
and
add
nop
push
mov
leave
nop
jmp
loope
add
rolb
cli
dec
test
mov
xorl
clc
repnz
nop
nop
jae
add
xor
jne
clc
repnz
nop
nop
jae
movl
or
xchg
push
clc
repnz
nop
nop
jae
hlt
jp
add
mov
mov
fistpl
push
mov
xchg
ret
inc
add
dec
add
dec
add
or
push
jae
jge
clc
repnz
nop
nop
jae
scas
pop
add
outsl
add
rol
push
daa
ret
clc
repnz
nop
nop
jae
add
mov
add
rclb
nop
jmp
adc
add
inc
add
push
add
add
test
repnz
nop
nop
jae
jp
movl
add
fstp
sbb
clc
repnz
nop
nop
jae
add
stc
incb
add
in
inc
xchg
fiaddl
add
add
mov
clc
repnz
nop
nop
jae
test
add
add
repz
nop
push
mov
leave
nop
jmp
dec
pop
xor
add
or
call
inc
add
lods
or
jns
add
add
insb
gs
repnz
nop
nop
jae
adc
add
loope
add
add
add
nop
nop
jae
add
add
dec
or
add
add
rcrb
mov
nop
push
mov
leave
nop
jmp
add
add
addb
imul
add
inc
sub
nop
push
mov
leave
nop
jmp
add
div
fistl
inc
and
push
mov
leave
nop
jmp
add
out
dec
jns
add
sbb
sar
repnz
nop
nop
jae
sub
lahf
mov
add
jp
add
push
mov
lods
fwait
clc
repnz
nop
nop
jae
jns
jp
inc
add
add
dec
push
clc
ds
push
push
mov
xchg
ret
add
stos
dec
add
add
add
and
test
nop
push
mov
leave
nop
jmp
shl
loope
fldt
mov
add
mov
xchg
ret
inc
add
sar
add
add
repnz
nop
nop
jae
jp
add
add
add
mov
repnz
nop
nop
jae
add
test
test
test
push
es
jecxz
repnz
nop
nop
jae
add
add
add
lock
in
jmp
jp
nop
push
mov
leave
nop
jmp
add
and
fisttpll
add
clc
repnz
nop
nop
jae
arpl
push
stc
lock
jecxz
sbb
add
clc
repnz
nop
nop
jae
add
add
add
jp
into
dec
mov
jb
nop
push
mov
leave
nop
jmp
add
add
repnz
nop
nop
jae
imul
add
fistl
xchg
pop
clc
repnz
nop
nop
jae
add
test
hlt
cmp
addb
fld1
push
mov
xchg
ret
add
pop
dec
add
rcll
repnz
nop
nop
jae
add
pop
imul
push
mov
xchg
ret
add
dec
loope
hlt
add
dec
mov
add
add
nop
jmp
outsl
ds
repz
xor
clc
repnz
nop
nop
jae
mov
cmp
leave
pop
clc
repnz
nop
nop
jae
add
add
stos
add
stc
test
or
xor
scas
nop
push
mov
leave
nop
jmp
add
lods
add
lahf
scas
adc
out
add
clc
repnz
nop
nop
jae
add
adc
dec
dec
add
inc
add
repnz
nop
nop
jae
add
jns
or
fldl
add
add
test
add
add
nop
jmp
add
add
aam
inc
clc
repnz
nop
nop
jae
inc
add
fildl
rcrb
clc
repnz
nop
nop
jae
add
add
add
add
cld
nop
nop
jae
add
out
test
cmp
lahf
stc
pop
push
mov
xchg
ret
hlt
dec
or
repz
sar
pushl
push
mov
xchg
ret
cmpb
shrb
inc
call
rorl
repnz
nop
nop
jae
or
dec
add
xor
add
add
jne
clc
repnz
nop
nop
jae
add
push
add
or
sub
into
xchg
inc
add
mov
or
add
bound
adc
mov
fistl
repnz
nop
nop
jae
clc
and
cmp
add
jns
std
push
nop
push
mov
leave
nop
jmp
dec
add
sub
add
add
cld
push
inc
sbb
nop
jmp
add
mov
add
pusha
mov
push
clc
repnz
nop
nop
jae
outsl
add
add
rol
lock
xor
mov
mov
nop
push
mov
leave
nop
jmp
shrb
call
repnz
mov
push
clc
repnz
nop
nop
jae
and
int
lods
call
pop
sub
mov
xchg
ret
dec
jns
test
add
movl
push
mov
leave
nop
jmp
add
dec
add
pop
sub
or
add
push
mov
cmpsl
mov
data16
push
std
adc
movsl
je
add
fdiv
in
or
nop
push
mov
leave
nop
jmp
add
inc
cmp
add
nop
nop
jae
add
add
inc
lods
inc
jns
jns
add
cmpl
add
nop
jmp
add
scas
mov
shl
clc
repnz
nop
nop
jae
cmp
add
fldl
add
testb
push
mov
add
mov
fstl
add
pop
add
out
add
out
jmp
lock
or
add
add
add
clc
fidivs
cld
nop
nop
jae
lahf
mov
fldl
rolb
xchg
fwait
push
mov
xchg
ret
inc
or
xor
fstl
add
jnp
nop
push
mov
leave
nop
jmp
add
add
add
in
add
loope
adc
add
push
mov
xchg
ret
int
add
stos
repz
dec
aaa
push
nop
push
mov
leave
nop
jmp
mov
stos
add
inc
add
add
cmp
add
clc
repnz
nop
nop
jae
or
add
testb
add
dec
test
xchg
mov
xchg
ret
pop
call
in
and
repz
add
jg
dec
cmp
repnz
nop
nop
jae
add
add
add
add
adc
data16
add
repnz
nop
nop
jae
add
or
add
imul
mov
xchg
ret
add
arpl
loope
add
jns
mov
popa
clc
repnz
nop
nop
jae
add
arpl
dec
add
call
fistpl
clc
repnz
nop
nop
jae
int
test
hlt
pop
add
scas
mov
nop
push
mov
leave
nop
jmp
pop
inc
dec
or
add
outsl
add
repnz
nop
nop
jae
mov
mov
push
push
mov
xchg
ret
add
add
pop
add
stos
add
test
mov
xchg
ret
or
lods
add
orb
mov
popf
and
clc
repnz
nop
nop
jae
add
stos
add
add
push
clc
repnz
nop
nop
jae
add
add
add
inc
add
clc
repnz
nop
nop
jae
sub
inc
inc
stos
add
add
fnstsw
repnz
nop
nop
jae
add
add
sub
mov
out
adc
clc
repnz
nop
nop
jae
add
mov
inc
cld
clc
repnz
nop
nop
jae
int
add
stos
dec
add
push
notl
push
mov
xchg
ret
dec
or
out
add
add
add
mov
pop
mov
push
mov
xchg
ret
add
mov
add
out
add
cld
nop
nop
jae
add
hlt
add
sarb
add
or
cmp
call
nop
jae
pop
pop
stos
in
inc
inc
inc
inc
or
add
sub
add
add
add
push
add
add
mov
add
adc
test
and
arpl
cmp
pop
add
xor
push
push
mov
xchg
ret
add
add
add
add
out
jmp
arpl
add
add
mov
sahf
idivl
clc
repnz
nop
nop
jae
cmp
or
jns
mov
push
push
mov
xchg
ret
add
out
inc
shl
loope
int
sbb
add
nop
push
mov
leave
nop
jmp
scas
cmpb
sub
mov
clc
repnz
nop
nop
jae
mov
rolb
and
jns
add
clc
repnz
nop
nop
jae
add
lock
pop
nop
push
mov
leave
nop
jmp
add
mov
pop
movl
arpl
jmp
repnz
nop
nop
jae
add
jp
lahf
rclb
mov
xor
clc
repnz
nop
nop
jae
int
inc
add
adc
fcmovb
sub
cld
nop
nop
jae
or
outsl
dec
and
sub
add
out
mov
nop
push
mov
leave
nop
jmp
pop
stos
add
shr
push
pop
push
mov
xchg
ret
add
add
add
add
add
add
imul
mov
xchg
ret
add
push
mov
add
mov
cld
nop
nop
jae
and
add
pop
adc
add
repnz
nop
nop
jae
dec
outsl
dec
repz
or
add
rolb
jg
clc
repnz
nop
nop
jae
movl
lods
add
add
xor
cmp
ret
jp
stos
add
add
add
add
lahf
pusha
clc
repnz
nop
nop
jae
addb
mov
push
mov
nop
push
mov
leave
nop
jmp
lods
and
mov
add
add
cld
mov
sbb
repnz
nop
nop
jae
add
pop
add
add
rcrb
repnz
nop
nop
jae
mov
imul
add
add
pushf
adc
jbe
push
mov
xchg
ret
add
lahf
add
rorb
add
clc
repnz
nop
nop
jae
add
loope
or
mov
in
or
cmp
add
arpl
imul
add
stos
es
add
push
ret
clc
repnz
nop
nop
jae
add
or
arpl
clc
pop
dec
mov
daa
pop
clc
repnz
nop
nop
jae
add
or
add
add
push
push
clc
repnz
nop
nop
jae
imul
or
add
clc
repnz
nop
nop
jae
add
add
add
call
sbb
inc
clc
repnz
nop
nop
jae
add
pop
add
add
nop
push
mov
leave
nop
jmp
add
add
add
loope
jno
test
in
call
nop
jmp
out
int
add
clc
repnz
nop
nop
jae
dec
jp
add
add
fistpl
nop
push
mov
leave
nop
jmp
repz
mov
add
stos
mov
iret
mov
clc
repnz
nop
nop
jae
clc
jns
cmp
add
add
mov
add
add
repnz
nop
nop
jae
loope
movl
roll
add
repnz
nop
nop
jae
lods
pop
test
stc
add
mov
push
mov
xchg
ret
add
clc
add
add
add
add
inc
add
add
push
mov
push
mov
xchg
ret
dec
add
pop
lods
cmp
test
or
call
leave
nop
jmp
arpl
stos
add
add
repnz
add
add
test
fildl
push
scas
call
dec
cmpsb
lods
cmp
nop
push
mov
leave
nop
jmp
mov
mov
push
mov
xchg
ret
adc
dec
add
rolb
add
inc
into
call
mov
jmp
ljmp
add
add
ds
lock
loope
add
add
ret
inc
push
adc
clc
repnz
nop
nop
jae
add
push
pop
add
add
outsl
arpl
add
repnz
nop
nop
jae
add
repz
add
add
idivb
jne
clc
repnz
nop
nop
jae
xchg
sub
clc
add
clc
repnz
nop
nop
jae
add
repz
add
add
add
rcll
mov
xchg
ret
imul
add
add
adc
insl
push
clc
repnz
nop
nop
jae
add
add
test
sbb
mov
leave
nop
jmp
dec
add
add
rolb
add
repnz
nop
nop
jae
add
push
add
scas
inc
or
nop
nop
jae
imul
add
testb
dec
add
push
mov
xchg
ret
mov
cmp
cmp
add
jb
inc
add
add
add
pop
clc
repnz
nop
nop
jae
add
add
add
cmp
mov
mov
xchg
ret
add
dec
mov
stos
stc
add
in
mov
add
clc
repnz
nop
nop
jae
dec
arpl
add
add
rcrb
add
imul
and
add
add
repz
add
add
jmp
jp
add
inc
incb
or
add
mov
cld
nop
nop
jae
dec
push
xchg
add
rol
cmp
add
mov
or
rclb
push
add
add
cmp
add
add
inc
je
mov
clc
repnz
nop
nop
jae
add
add
add
add
icebp
inc
dec
es
repnz
nop
nop
jae
dec
arpl
sbb
mov
xchg
ret
inc
in
add
add
fucomp
test
or
es
nop
push
mov
leave
nop
jmp
add
stos
add
xor
repnz
repnz
nop
nop
jae
add
add
addb
add
nop
push
mov
leave
nop
jmp
dec
lahf
or
push
sub
mov
jg
nop
push
mov
leave
nop
jmp
out
lahf
dec
scas
int
pop
add
sti
pop
clc
repnz
nop
nop
jae
or
add
jns
mov
push
push
clc
repnz
nop
nop
jae
add
test
ds
add
repnz
nop
nop
jae
add
add
add
add
add
sahf
imul
cmp
cmp
ret
add
push
clc
add
negb
in
add
push
mov
leave
nop
jmp
add
imul
add
call
nop
jae
adc
xchg
hlt
add
adc
clc
repnz
nop
nop
jae
movl
hlt
and
add
add
sahf
insb
inc
add
adc
add
push
or
mov
add
add
jp
mov
clc
repnz
nop
nop
jae
out
dec
add
add
jns
test
clc
repnz
nop
nop
jae
arpl
add
add
or
icebp
pop
clc
repnz
nop
nop
jae
scas
or
add
mov
and
clc
repnz
nop
nop
jae
add
cmp
inc
or
dec
add
aad
inc
add
add
add
push
add
add
nop
nop
jae
rolb
idiv
add
add
and
repnz
nop
nop
jae
addb
add
test
pop
pop
mov
nop
push
mov
leave
nop
jmp
add
inc
stc
add
add
hlt
add
push
push
mov
xchg
ret
movl
add
scas
add
inc
fistpl
clc
repnz
nop
nop
jae
jns
lock
movl
inc
ret
or
fstpl
add
or
outsl
add
add
add
add
fld1
clc
repnz
nop
nop
jae
or
mov
add
add
sub
add
repnz
nop
nop
jae
add
add
xor
add
add
clc
repnz
nop
nop
jae
add
add
add
sbb
clc
repnz
nop
nop
jae
pop
add
inc
xchg
shrb
repnz
nop
nop
jae
scas
inc
inc
add
shl
scas
repz
cwtl
pop
fld1
push
mov
xchg
ret
add
scas
add
add
repz
add
arpl
clc
push
mov
xchg
ret
dec
add
add
add
cmp
add
add
add
testb
or
add
stos
add
push
lock
lods
jne
clc
repnz
nop
nop
jae
incb
or
mov
add
rolb
nop
push
mov
leave
nop
jmp
inc
add
add
stos
fwait
clc
repnz
nop
nop
jae
scas
or
push
ds
inc
mov
pusha
clc
repnz
nop
nop
jae
add
clc
add
cmp
jp
repz
js
repnz
nop
nop
jae
test
scas
add
cld
nop
nop
jae
hlt
scas
mov
mov
add
call
add
fwait
clc
repnz
nop
nop
jae
add
dec
add
dec
add
inc
cmp
and
lea
xchg
ret
add
add
add
add
repz
test
push
push
mov
xchg
ret
or
outsl
xor
add
cmp
rep
clc
repnz
nop
nop
jae
add
add
add
add
dec
add
jle
mov
push
mov
xchg
ret
test
and
jns
mov
add
repnz
nop
nop
jae
dec
lahf
push
fldl
outsl
lock
inc
inc
mov
clc
repnz
nop
nop
jae
subb
fldt
add
je
add
add
xor
stc
rolb
add
add
mov
clc
repnz
nop
nop
jae
or
add
add
fildl
mov
jbe
add
add
add
add
call
and
nop
push
mov
leave
nop
jmp
or
add
call
mov
leave
nop
jmp
rolb
add
lock
call
mov
lahf
aam
dec
add
add
push
add
int3
add
add
xor
add
add
fwait
add
clc
repnz
nop
nop
jae
rolb
mov
add
mov
push
mov
xchg
ret
add
add
add
test
add
xor
mov
xchg
ret
add
dec
add
jns
add
in
negb
rcr
sbb
push
mov
xchg
ret
adc
push
add
and
dec
dec
pop
stos
clc
repnz
nop
nop
jae
adcb
rorb
clc
lock
adcl
add
add
add
shl
ds
add
mov
and
add
mov
clc
repnz
nop
nop
jae
stc
add
repz
push
push
push
push
push
push
mov
xchg
ret
inc
add
clc
hlt
test
add
add
add
add
repnz
nop
nop
jae
sar
rcrb
out
add
add
clc
repnz
nop
nop
jae
add
cmp
inc
add
adc
add
repnz
nop
nop
jae
test
dec
lock
add
int3
rorb
add
add
mov
pop
push
mov
xchg
ret
int
add
imul
and
loopne,pt
stos
call
add
add
repnz
nop
nop
jae
mov
dec
call
inc
sub
repnz
nop
nop
jae
dec
push
inc
incb
call
dec
add
add
mov
xchg
inc
add
cmp
pop
movl
add
rep
lea
clc
repnz
nop
nop
jae
stos
fcomi
jp
stos
push
rolb
cmp
clc
repnz
nop
nop
jae
add
jp
fldl
stos
add
test
repnz
nop
nop
jae
inc
add
outsl
add
add
cld
nop
nop
jae
cmp
stos
hlt
movl
push
push
mov
xchg
ret
dec
stos
add
mov
add
add
test
mov
je
xchg
or
add
add
clc
repnz
nop
nop
jae
mov
cmp
add
clc
repnz
nop
nop
jae
inc
clc
sar
add
add
pop
stc
xor
nop
push
mov
leave
nop
jmp
repz
imul
dec
add
add
rep
push
mov
xchg
ret
lock
out
fildl
or
pop
add
add
clc
repnz
nop
nop
jae
cmp
add
lahf
add
repnz
nop
nop
jae
add
dec
mov
add
les
test
push
mov
xchg
ret
ds
add
push
shlb
add
js
mov
clc
repnz
nop
nop
jae
xor
sbb
push
mov
leave
nop
jmp
arpl
stos
add
rolb
mov
add
add
add
add
push
mov
xchg
ret
add
add
add
add
call
loope
call
in
leave
nop
jmp
add
inc
add
add
stc
dec
add
add
push
call
clc
repnz
nop
nop
jae
add
arpl
and
add
and
push
mov
xchg
ret
cmp
dec
rol
add
add
mov
repnz
nop
nop
jae
mov
xor
dec
fistpl
clc
repnz
nop
nop
jae
add
pop
or
add
add
pause
push
mov
leave
nop
jmp
add
inc
add
add
add
add
push
mov
cwtl
hlt
add
sbb
add
cmp
test
xor
lret
sbb
cs
clc
repnz
nop
nop
jae
add
add
add
or
jns
dec
cmp
repnz
nop
nop
jae
cmp
loope
mov
add
mov
mov
xchg
ret
test
add
inc
add
add
clc
add
iret
push
push
mov
xchg
ret
mov
or
add
add
jmp
clc
repnz
nop
nop
jae
or
cmp
scas
dec
sub
fwait
xchg
clc
repnz
nop
nop
jae
shlb
add
add
add
mov
cld
nop
nop
jae
imul
add
push
clc
repnz
nop
nop
jae
add
pop
dec
add
push
fcomip
icebp
nop
push
mov
leave
nop
jmp
jns
outsl
xor
add
add
fld1
clc
repnz
nop
nop
jae
lahf
dec
jns
inc
cmp
jns
add
into
pop
push
nop
push
mov
leave
nop
jmp
hlt
add
mov
xor
pop
mov
sbb
cmp
repnz
nop
nop
jae
or
outsl
imul
add
mov
xchg
ret
rol
lods
add
add
add
mov
xchg
ret
add
and
pop
add
fstpt
xchg
push
mov
push
mov
xchg
ret
rcrb
add
add
or
add
add
clc
repnz
nop
nop
jae
mov
add
push
loope
dec
sub
subl
xchg
ret
scas
inc
or
add
pop
clc
repnz
nop
nop
jae
add
add
inc
add
das
jmp
scas
add
inc
add
add
add
add
add
stos
imul
lret
nop
push
mov
leave
nop
jmp
or
xchg
add
test
loopne
jmp
repnz
nop
nop
jae
add
repz
add
dec
mov
clc
repnz
nop
nop
jae
add
shrb
sub
repnz
nop
nop
jae
loope
hlt
add
push
add
mov
sti
clc
repnz
nop
nop
jae
add
add
add
cmp
mov
pop
clc
repnz
nop
nop
jae
lock
xchg
pop
lahf
ss
sbb
clc
repnz
nop
nop
jae
adc
jp
call
sarb
mov
xchg
ret
add
stos
add
or
rolb
push
loopne
inc
pop
clc
repnz
nop
nop
jae
add
decb
add
add
mov
mov
clc
repnz
nop
nop
jae
push
add
repz
xchg
jmp
cmp
dec
pop
add
rorb
add
repz
mov
leave
nop
jmp
test
add
add
repz
outsl
jns
leave
nop
push
mov
leave
nop
jmp
dec
jp
pop
mov
add
sub
mov
jg
inc
push
mov
xchg
ret
addb
cmp
add
sub
int3
mov
add
add
inc
add
add
push
mov
push
mov
xchg
ret
add
int
add
add
jae
cld
nop
nop
jae
inc
call
add
add
lods
jnp
sub
add
mov
xchg
ret
outsl
add
add
shlb
repnz
nop
nop
jae
or
dec
sub
call
dec
enter
and
push
mov
xchg
ret
or
add
add
add
dec
jns
xchg
hlt
call
nop
jmp
or
add
cli
orl
leave
nop
jmp
int
inc
add
repz
add
addb
inc
add
add
add
dec
in
add
pop
call
mov
xchg
ret
add
hlt
fldl
dec
inc
pop
cmp
add
rcl
cmp
nop
push
mov
leave
nop
jmp
mov
add
stc
add
shl
call
nop
nop
jae
stos
sbbb
mov
je
clc
repnz
nop
nop
jae
add
add
add
add
jne
nop
push
mov
leave
nop
jmp
lods
push
repz
add
add
add
pushf
jo
dec
nop
push
mov
leave
nop
jmp
pop
mov
or
mov
or
cld
nop
push
mov
leave
nop
jmp
loope
out
lock
loope
orb
hlt
mov
nop
nop
jae
add
add
add
add
in
setnp
nop
jmp
add
jp
lods
push
add
push
push
mov
xchg
ret
repz
add
imulb
add
xchg
testl
nop
push
mov
leave
nop
jmp
movl
add
clc
repnz
nop
nop
jae
add
repz
dec
adc
repnz
nop
nop
jae
stc
add
add
dec
inc
add
add
out
enter
or
add
nop
push
mov
leave
nop
jmp
mov
add
incb
rolb
sbb
push
inc
add
repz
jp
add
add
inc
in
mov
xchg
ret
xor
adc
inc
stc
outsl
insl
lea
nop
push
mov
leave
nop
jmp
div
add
add
stc
add
clc
repnz
nop
nop
jae
rcrb
rclb
nop
nop
jae
stos
inc
add
dec
add
cld
nop
nop
jae
add
add
andb
dec
add
push
mov
xchg
ret
stos
push
stos
add
inc
add
fldt
xchg
in
push
mov
xchg
ret
adc
mov
shr
lods
add
outsl
pop
xchg
and
nop
push
mov
leave
nop
jmp
add
add
movl
nop
push
mov
leave
nop
jmp
dec
ds
loope
lods
add
cmc
jmp
add
add
dec
call
add
stos
loope
add
or
xor
clc
repnz
nop
nop
jae
adc
add
repz
add
dec
sub
es
push
mov
add
add
scas
add
sbb
inc
pop
movb
pushf
mov
push
clc
repnz
nop
nop
jae
add
out
add
add
add
imul
icebp
nop
push
mov
leave
nop
jmp
dec
or
add
mov
in
clc
jne
repz
mov
xchg
ret
repz
or
add
add
repz
ljmp
push
mov
xchg
ret
add
add
add
pop
mov
push
clc
repnz
nop
nop
jae
int
outsl
cmp
add
add
mov
push
mov
leave
nop
jmp
or
dec
dec
add
negb
mov
clc
repnz
nop
nop
jae
add
add
or
ret
or
repnz
nop
nop
jae
cmp
or
add
lods
add
fcoml
mov
push
mov
xchg
ret
add
add
shl
rorb
fildl
popa
xor
clc
repnz
nop
nop
jae
fcomi
add
add
test
dec
nop
push
mov
leave
nop
jmp
incb
add
fildl
add
lods
call
clc
repnz
nop
nop
jae
add
add
add
cmp
lea
mov
adc
repnz
nop
nop
jae
lock
add
fwait
mov
clc
repnz
nop
nop
jae
add
hlt
add
cmp
clc
repnz
nop
nop
jae
fldl
add
mov
int
pop
jae
repnz
nop
nop
jae
add
add
test
add
xchg
mov
clc
repnz
nop
nop
jae
add
outsl
jns
or
lahf
jecxz
clc
add
out
inc
add
add
test
or
int
push
sub
jecxz
inc
add
add
push
stos
stos
dec
xchg
pop
push
mov
xchg
ret
add
add
dec
stc
stos
inc
add
addb
aaa
inc
nop
push
mov
leave
nop
jmp
hlt
add
add
add
push
add
fidivrl
cld
nop
nop
jae
cmp
and
sub
hlt
add
add
push
loopne
mov
xchg
ret
fildl
scas
push
mov
repz
xor
inc
int
enter
nop
nop
jae
add
inc
add
add
xor
inc
cmc
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
outsl
hlt
add
inc
xchg
dec
add
repnz
nop
nop
jae
stos
push
add
cmp
xor
adc
repnz
nop
nop
jae
pop
add
add
add
push
ja
notl
nop
jmp
dec
add
add
stos
fnstsw
push
adc
add
push
mov
xchg
ret
mov
inc
jns
sub
pushf
push
add
push
mov
xchg
ret
clc
add
or
add
or
push
push
mov
xchg
ret
add
mov
dec
arpl
stos
mov
push
mov
xchg
ret
add
push
add
add
add
dec
xor
mov
push
mov
xchg
ret
rolb
add
add
add
repz
je
popl
cld
nop
nop
jae
test
mov
int
or
mov
push
clc
repnz
nop
nop
jae
scas
pop
add
arpl
and
repz
add
mov
clc
repnz
nop
nop
jae
or
inc
lods
add
lahf
add
add
jle
lss
clc
repnz
nop
nop
jae
inc
mov
push
movsl
fistpl
clc
repnz
nop
nop
jae
or
mov
xor
cld
nop
nop
jae
add
scas
test
scas
in
mov
clc
repnz
nop
nop
jae
add
push
add
clc
add
inc
xchg
sub
clc
repnz
nop
nop
jae
out
stos
hlt
inc
dec
add
add
mov
nop
push
mov
leave
nop
jmp
add
hlt
push
add
nop
nop
jae
add
inc
addb
add
fildl
push
outsl
cmpl
nop
push
mov
leave
nop
jmp
add
or
add
clc
repnz
nop
nop
jae
imul
add
push
clc
repnz
nop
nop
jae
push
hlt
cmp
add
add
lahf
call
nop
push
mov
leave
nop
jmp
dec
stos
pop
outsl
rorb
std
pusha
push
mov
xchg
ret
add
stos
add
add
scas
mov
sub
repnz
nop
nop
jae
add
dec
add
add
jmp
nop
nop
jae
testb
cmp
rol
pop
add
popfw
mov
clc
repnz
nop
nop
jae
in
add
add
add
cmpb
cld
nop
nop
jae
add
out
and
add
and
in
cld
push
mov
xchg
ret
add
call
add
addb
xchg
mov
push
mov
xchg
ret
dec
sar
or
inc
mov
incl
dec
add
repz
in
add
testb
or
jecxz,pt
push
mov
xchg
ret
jp
add
pop
add
dec
lods
add
addr16
clc
repnz
nop
nop
jae
and
negb
add
jmp
addl
add
add
add
add
pop
fdiv
out
clc
repnz
nop
nop
jae
loope
add
call
push
push
mov
xchg
ret
add
add
inc
lock
dec
dec
shrb
cwtl
pushl
sar
cld
nop
nop
jae
adc
add
add
mov
push
mov
xchg
ret
sub
stos
outsl
add
mov
jle
push
push
mov
xchg
ret
add
xor
add
stos
ds
push
mov
xchg
ret
mov
testb
add
repz
test
jne
clc
repnz
nop
nop
jae
add
add
dec
add
je
add
add
mov
mov
pop
clc
repnz
nop
nop
jae
add
testb
repz
mov
ror
clc
repnz
nop
nop
jae
add
add
add
stos
lods
movl
add
add
add
clc
repnz
nop
nop
jae
add
add
dec
add
mov
add
call
clc
repnz
nop
nop
jae
dec
add
xor
nop
nop
jae
out
add
push
add
add
xchg
add
sub
push
mov
xchg
ret
mov
out
add
dec
push
rolb
sub
sbb
clc
repnz
nop
nop
jae
add
dec
rolb
add
add
leave
fwait
push
mov
xchg
ret
add
add
or
add
arpl
xor
clc
repnz
nop
nop
jae
push
cmp
add
add
lea
push
mov
xchg
ret
cmp
fildl
or
add
clc
repnz
nop
nop
jae
add
arpl
add
or
add
push
and
add
dec
scas
xchg
arpl
or
xchg
lock
lea
clc
repnz
nop
nop
jae
or
notb
add
jnp
leave
nop
push
mov
leave
nop
jmp
dec
mov
cmp
add
or
icebp
pushl
push
mov
xchg
ret
inc
inc
fnstsw
jns
int
add
add
adc
movsb
clc
repnz
nop
nop
jae
out
scas
add
add
mov
clc
repnz
nop
nop
jae
stos
add
cmp
mov
testb
test
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
repz
add
hlt
add
or
ss
inc
push
clc
repnz
nop
nop
jae
add
add
jg
push
mov
xchg
ret
add
dec
jp
add
push
dec
add
scas
sub
shl
nop
push
mov
leave
nop
jmp
cmp
out
add
test
sub
repnz
nop
nop
jae
scas
out
shlb
and
clc
repnz
nop
nop
jae
dec
repz
repz
add
mov
xchg
ret
add
add
stos
add
or
add
cmp
ljmp
in
leave
nop
jmp
hlt
add
stos
add
add
or
push
push
mov
xchg
ret
or
add
add
shrb
jge
clc
repnz
nop
nop
jae
add
add
dec
adc
push
push
mov
xchg
ret
xor
add
add
add
test
je
nop
push
mov
leave
nop
jmp
add
or
lock
add
add
nop
nop
jae
jns
sarb
clc
add
sarb
mov
xchg
ret
rolb
arpl
dec
add
repz
add
clc
repnz
nop
nop
jae
fstpt
add
and
xchg
imul
pushl
nop
push
mov
leave
nop
jmp
inc
add
add
lods
xchg
shl
sbb
push
mov
insl
pop
add
int
adc
add
shlb
verr
ja
fcoml
sbb
das
pop
sbb
xchg
sbb
adc
imulb
pop
shlb
add
add
add
add
arpl
es
mov
popf
adc
arpl
ret
mov
fildll
fidivrs
add
add
sbb
mov
stc
movsb
sti
ja
dec
mov
lods
lock
adc
pop
and
rcl
in
fsubrs
and
add
add
or
add
daa
mov
dec
jmp
je
xchg
ss
pushf
scas
cmpsb
xchg
ret
pop
pop
sbb
mov
bound
mov
sarl
inc
add
add
cmpsb
push
imul
sbb
add
xor
jmp
add
add
pop
in
cmc
jp
xchg
stos
lcall
mov
cli
and
mov
jnp
addb
stc
inc
add
add
add
bnd
mov
mov
and
or
popa
loop
push
xchg
das
mov
stos
sbb
xor
mov
sbb
pushf
inc
mov
fcomps
stc
xchg
and
mov
out
sbb
pusha
add
add
mov
out
or
daa
out
mov
cwtl
pop
dec
mov
jno
pop
ret
dec
addr16
aaa
cmp
inc
add
and
std
xchg
push
push
fcmovbe
inc
mov
insb
add
add
push
pop
adcl
in
pop
sbb
add
add
or
je
pop
imul
or
add
add
add
pusha
mov
popf
fwait
dec
add
add
lcall
sbb
or
push
fldl
mov
movsb
sarb
push
test
popf
sbb
ja
fsubrl
add
add
rolb
xor
aas
arpl
andb
rolb
gs
or
jne
mov
add
push
mov
add
add
add
add
add
fbld
cmpxchg
repnz
dec
jecxz
add
add
int
add
add
jo
and
add
sbb
xor
movb
add
add
jmp
cmpsl
bound
push
adc
jmp
cmp
movsb
scas
pop
pop
hlt
and
fisubl
add
mov
adc
lea
jns
cwtl
sbb
xor
xchg
subl
push
mov
nop
mov
xor
mov
or
mov
cmp
dec
les
mov
mov
add
xchg
movsl
popa
jp
mov
lock
ss
cmp
andb
pop
ss
out
lds
add
add
fs
mov
popa
sub
add
add
add
add
shrb
add
add
loop
mov
in
cld
insb
add
add
mov
add
mov
repnz
add
shll
add
add
ss
cmpsb
mov
add
fwait
lret
and
rolb
dec
cmp
xchg
cmp
and
pushf
jp
movq
in
mov
cmp
sub
add
add
push
push
lds
dec
leave
loope
mov
mov
pop
and
add
add
in
stc
push
adc
es
gs
pop
inc
stc
mov
mov
test
jno
loopne
sub
add
add
push
mov
je
out
outsl
push
ja
das
std
mov
jp
and
lods
gs
dec
int
dec
mov
mov
lock
push
gs
mov
jns
clc
pop
push
les
cli
xchg
arpl
add
add
add
pop
and
shr
das
loope
call
xor
push
movb
add
adc
insl
ror
mov
and
add
add
rolb
mov
int3
xlat
sbb
add
add
or
pop
mov
lods
out
testb
add
add
push
lcall
mov
sbb
inc
push
mov
lret
shlb
loop
leave
enter
or
dec
mov
pop
js
enter
and
cmp
cmp
sbb
mov
imul
push
insb
add
add
pop
add
adc
xchg
lret
mul
or
mov
pop
int3
out
lcall
mov
call
add
add
jmp
aas
pop
call
add
lods
mov
mov
nop
cs
jnp
subb
add
or
xchg
mov
jmp
add
add
pop
mov
push
loop
inc
add
add
call
add
test
cmp
jne
xor
daa
sahf
mov
ss
scas
inc
inc
xchg
repz
popa
daa
push
mov
xchg
imul
jecxz
dec
fcomi
sar
and
sub
cmp
ret
and
add
dec
lods
mov
sub
sbb
iret
jecxz
iret
aam
pop
sub
inc
push
pop
adc
sub
into
mov
stc
sbb
mov
popa
xchg
mov
outsb
mov
pop
mov
xor
js
pushf
stos
add
call
sub
add
add
xor
orb
lcall
add
mov
xchg
sub
add
add
inc
sbb
je
test
dec
add
add
push
mov
in
outsb
rorb
je
mov
add
add
add
lods
aas
dec
adc
out
pop
js
mov
mov
xchg
sbb
lock
scas
aam
popa
pop
pop
add
shll
add
jecxz
clc
data16
pop
jo
adc
pop
mov
or
movsb
mov
mov
cli
in
inc
faddl
inc
stos
imul
sub
add
add
cmp
leave
lea
push
push
cmp
dec
test
insl
xor
add
add
mov
mov
pusha
add
add
jp
test
jmp
add
add
mov
jno
or
add
mov
lods
and
shll
xchg
ficomps
or
dec
stos
xor
push
mov
notl
dec
add
icebp
stos
sub
ss
sbb
add
add
sbb
push
jb
push
scas
and
movsb
sub
enter
jle
arpl
mov
add
add
xchg
mov
stc
add
add
add
adc
lds
add
add
pop
sbb
xor
dec
ja
xchg
test
sub
ret
repz
cmp
in
xchg
ret
fisubrl
fcomps
jl
lcall
add
add
inc
add
dec
xchg
loope
repz
scas
xchg
adc
mov
js
jnp
stos
insl
out
mov
in
jge
pop
es
xchg
test
stc
pop
ret
ja
sub
add
add
or
mov
jae
movsb
pop
add
int3
std
out
add
rcr
cli
pop
das
xor
add
add
mov
fcmovbe
loop
outsb
mov
adc
xlat
and
ss
clc
jg
and
add
add
add
in
add
mov
jle
jns
pop
addl
movsl
cmp
mov
mov
mov
imul
add
in
sub
add
add
xor
mov
add
fs
sbb
add
xchg
xchg
jnp
mov
lods
jl
out
xchg
movsb
push
mov
mov
inc
lahf
adc
test
add
daa
fisubl
jle
stos
lods
dec
inc
mov
pop
jg
push
xlat
sbb
add
add
les
add
add
adc
stos
dec
repz
add
add
sub
add
add
pop
arpl
cmc
lods
xor
xchg
sub
inc
test
jp
and
popl
mov
mov
aam
scas
pop
adc
lahf
push
sahf
push
test
dec
incb
jae
mov
add
adc
rcll
mov
sub
jge
outsb
sub
hlt
jb
cmp
lcall
orl
sub
add
add
mov
add
add
adc
sub
add
add
arpl
stos
push
jo
add
add
xor
add
sub
add
add
mov
add
hlt
or
add
add
mov
addb
aad
stos
xchg
xchg
sub
add
imul
add
add
cmp
xchg
xchg
push
les
xchg
das
in
in
xchg
loop
std
sbb
add
add
loopne
bound
loop
cmpsl
dec
mov
push
ret
lds
mov
xchg
in
or
hlt
cs
push
push
mov
rcrb
xchg
iret
sbb
popf
jge
pusha
mov
inc
add
add
fcomps
inc
add
add
fistps
iret
jb
sub
mov
jmp
or
inc
ret
push
dec
arpl
das
cmpsb
xor
inc
jae
push
adc
add
mov
insb
mov
mov
add
add
or
add
add
add
sub
add
add
popf
add
sub
test
dec
push
insl
and
test
idivb
or
push
aad
jmp
or
add
add
scas
insw
jmp
mov
prefetcht2
lea
pusha
mov
dec
aas
test
lret
mov
aam
arpl
roll
pop
push
adc
ficomps
nop
jecxz
push
test
mov
adcb
idivb
in
mov
popf
jne
rcll
and
add
add
lcall
inc
and
add
add
xchg
and
cmp
mov
jp
loope
neg
mov
jae
mov
mov
test
cmp
roll
push
lods
adc
rcr
cmp
adc
jmp
into
adc
add
mov
cmp
mov
pop
jg
or
add
push
push
inc
add
add
mov
pushf
jl
pop
cli
cmpsb
and
out
adc
es
ljmp
xor
aaa
into
sub
mov
add
and
xchg
add
insl
xlat
jbe
ret
pop
adc
adc
test
jg
mov
arpl
jl
pushf
cld
sbb
add
add
add
cmp
loope
push
aas
adcb
push
push
cmp
add
add
popa
dec
lret
sub
add
add
xchg
lcall
call
nop
fcompl
pop
stos
adc
mov
and
stc
xor
add
add
xchg
sub
add
add
call
mov
xchg
ds
mov
adc
xchg
cmp
pop
mov
xchg
sti
jg
iret
in
cmp
add
ljmp
push
outsb
jne
divl
mov
jle
lea
lods
repnz
cmpb
mov
sub
add
add
add
sarb
mov
jbe
and
xchg
add
xchg
out
dec
mov
fs
mul
or
roll
add
add
add
add
xor
dec
mov
mov
sarb
xor
inc
add
add
sub
jne
cmp
negl
push
xor
mov
mov
pop
mov
push
ffree
daa
daa
xchg
sub
cmp
mov
add
add
add
add
cld
mov
jb
mov
lock
sbb
in
lret
ss
je
pop
mov
xor
cld
out
arpl
inc
xchg
sahf
mov
cmp
aam
xchg
add
add
je
out
sbb
pop
mov
mov
add
add
push
test
jmp
push
arpl
xor
icebp
loop
in
lods
pop
lret
pop
js
and
mov
add
cmc
mov
aas
mov
xchg
jge
add
add
xchg
jp
dec
mov
cs
mov
int
mov
test
adc
mov
xlat
mov
add
sub
stos
mov
add
sysenter
inc
add
add
orb
add
mov
adc
push
jecxz
mov
aam
stc
lea
add
add
lret
push
aad
ljmp
test
add
lcall
add
sbb
dec
dec
out
scas
aas
and
fsubs
add
add
add
in
aad
pop
hlt
sti
stos
add
add
add
sti
add
scas
or
mov
sbb
mov
test
pop
in
in
clc
push
pusha
add
add
jecxz
lods
lods
test
add
add
js
in
xor
iret
add
add
add
add
aas
loop
xor
add
xchg
movsl
sbb
pushf
ja
scas
and
cli
mov
mov
sub
add
add
fstpt
shll
in
push
lds
or
pop
lods
mov
mov
std
xlat
enter
jb
xchg
jmp
test
in
aaa
ds
mov
sub
emms
add
mov
lock
jmp
dec
mov
jmp
cltd
inc
xchg
mov
inc
stc
add
add
loopne
push
sub
insb
add
add
lods
insb
add
add
aas
fcmovnu
movl
mov
sub
xor
rclb
add
add
imul
xor
mov
arpl
cmpsb
testl
add
add
lcall
or
add
add
movsl
add
add
add
dec
ja
add
add
cld
fsub
dec
or
add
call
xchg
hlt
jae
add
add
fsts
test
cmpsb
loope
add
add
adc
aaa
fidivs
jg
sbb
fstps
dec
push
fcmovbe
fisubl
jb
fwait
orb
and
jmp
into
dec
lret
imul
add
test
and
inc
jecxz
andb
lea
dec
or
add
add
aad
and
add
add
mov
in
mov
roll
or
int
mov
adc
pop
pop
lahf
testb
aas
jmp
pop
sbb
mov
sub
add
add
mov
add
pop
lods
popf
iret
push
popa
pop
dec
outsl
cmp
xchg
push
push
and
add
add
mov
testl
mov
les
mov
sbb
mov
popa
jecxz
lret
imul
mov
and
add
add
mov
in
dec
jmp
add
leave
imul
hlt
cmp
push
incb
add
add
test
add
add
add
mov
in
mov
xor
cld
push
push
adc
sbbl
xor
icebp
or
dec
pop
mov
xor
das
data16
add
add
adc
rcrl
shlb
mov
pusha
add
add
ret
mov
mov
mov
add
add
cmp
leave
xchg
jns
mov
sbb
fcompl
out
test
add
in
push
hlt
push
je
lods
sub
add
add
xor
test
cli
or
xor
add
add
insl
mov
xor
add
cltd
popa
sub
add
add
xchg
sbbl
imul
frstor
add
add
je
mov
stos
mov
push
mov
lock
dec
jnp
cmc
add
enter
loop
fisttpl
decb
add
add
or
fcmovnbe
push
icebp
jne
int3
das
iret
xor
in
es
dec
jno
daa
std
dec
cmp
xor
sub
test
adc
cld
pop
imul
push
std
enter
aaa
jmp
jmp
add
adc
les
je
and
outsl
cltd
adc
movb
mov
movsl
maskmovq
notl
out
in
fwait
imul
out
or
add
jb
and
fwait
shl
xchg
mov
adc
fld
fdivl
xchg
lea
aas
call
mov
mov
in
push
iret
or
jb
xor
mov
out
mov
dec
in
add
add
test
in
adc
jmp
mov
add
adc
setns
mov
outsb
jmp
fmul
push
stos
aam
mov
loop
out
xchg
adc
sbb
sub
mov
punpcklwd
xchg
popf
rclb
xchg
lret
jg
mov
add
sub
test
bound
jns
cmp
cld
xor
es
aaa
jo
inc
shrl
push
subb
mov
sbb
mov
in
cs
call
add
add
push
js
popf
push
ret
sbb
lahf
xor
add
add
add
add
add
add
xchg
roll
and
sti
int3
scas
stc
adc
jae
dec
mov
rcrl
add
loop
pusha
add
add
icebp
stos
push
add
add
mov
orl
mov
lea
mov
push
outsl
mov
pushf
cmpl
inc
stos
lea
add
add
sbb
add
sbb
fisubrl
push
mov
iret
pusha
mov
mov
stos
test
adc
aad
std
fs
jb
mov
mov
add
add
add
pop
mov
nop
lret
add
add
in
jae
add
add
xchg
loope
mov
imul
add
sarb
cmp
inc
js
pop
pusha
add
add
pop
iret
or
add
add
jp
sub
push
jecxz
in
add
add
push
ret
les
adc
pop
lret
mov
mov
repz
mov
or
ds
push
xchg
mov
jecxz
mov
pushf
jmp
push
jae
push
cld
pop
rclb
jns
cmp
jno
cmpsb
xchg
imul
add
fmuls
add
jno
sarb
ja
aam
pop
push
add
add
add
lret
mov
lret
mov
pop
aaa
push
lahf
cmc
jmp
dec
mov
xchg
cmc
mov
cltd
lret
aad
icebp
in
cmp
pop
push
add
add
int
pop
mov
mov
bound
cmpsl
mov
mov
mov
sub
mov
push
xor
lret
repnz
cmp
add
call
lds
pop
sbb
or
add
add
nop
adc
movsl
inc
and
add
add
xor
mov
outsb
int3
jecxz
sbb
dec
sub
add
add
mov
push
ret
push
aam
imulb
add
add
pushf
add
mov
lcall
xchg
xor
fnstcw
pop
push
dec
xchg
push
aaa
and
add
add
mov
andb
test
aaa
loope
into
loopne
cwtl
test
cld
and
add
add
cmp
mov
clc
or
inc
popa
sti
lods
push
sbb
pop
jb
push
dec
pop
pop
lods
cmc
je
mov
nop
inc
jge
and
sahf
iret
roll
lock
and
add
add
push
mov
and
xor
rcrl
add
pop
ds
in
sarl
ret
or
mov
push
jecxz
mov
sub
jmp
cmpsb
lcall
push
out
xor
fnstsw
lock
jo
dec
mov
fsts
enterw
add
add
inc
and
clc
pop
pop
pop
mov
lods
push
enter
add
into
aam
sbb
add
add
add
pop
jge
mov
mov
xchg
cwtl
add
negl
mov
add
fistpll
bound
lcall
fdivp
or
add
jle
mov
or
inc
xor
cwtl
faddl
mov
adc
jmp
dec
into
mov
xlat
and
add
add
or
or
add
add
add
add
fidivl
rcrb
imul
fbstp
adc
xchg
and
pop
pop
sahf
cld
jns
mov
dec
add
add
hlt
fldl2t
jne
mov
xor
add
add
add
add
add
fwait
xchg
not
out
fildll
mov
xchg
js
sbb
sub
add
add
inc
mov
add
add
stos
jmp
out
les
mov
orb
adc
js
popl
adc
lds
testl
mov
add
add
out
sti
and
inc
out
pop
dec
add
mov
fcmovnbe
sub
jno
pop
or
mov
dec
jmp
add
push
shl
outsl
sbb
lret
sub
add
add
xchg
fdivs
sub
add
add
les
sbb
add
add
push
mov
lds
subb
sub
add
add
mov
loopne
adc
add
stos
lahf
push
and
test
jecxz
daa
xchg
inc
dec
push
sbb
mov
std
jb
jns
add
add
mov
pusha
add
add
ss
ret
cmp
inc
mull
mov
and
outsb
lret
add
add
mov
pop
cmpsb
pop
adc
dec
jb
cld
js
fcom
adc
rolb
add
adcb
stc
cmp
iret
adc
sbb
inc
int
test
add
add
add
add
cmpsb
pushf
mov
aaa
jne
adc
add
inc
mov
and
add
add
rorl
inc
mov
sbb
nop
pop
cld
push
rcl
or
add
add
push
in
cmpsl
cmp
push
and
add
add
fcmovne
daa
lea
push
or
adc
add
add
mov
pop
out
jg
inc
cmp
adc
fwait
xor
add
add
sub
dec
mov
sub
iret
jge
popa
cltd
push
mov
lds
add
add
sub
pop
mov
orb
push
sub
cld
jmp
std
fstp
jne
ficoms
outsb
bnd
jecxz
dec
pop
dec
call
add
std
in
inc
fcoml
adc
aas
stc
stc
adc
add
and
or
add
add
dec
bound
aaa
push
cmp
add
xorb
cmp
clc
andb
andb
pop
mov
fidivrl
fstpl
jle
mov
dec
push
fcmovnbe
nop
pop
lret
mov
mov
adc
inc
jmp
add
add
movsl
mov
dec
fcmove
nop
scas
pop
ret
pinsrw
mov
jbe
sub
fcmovne
and
add
add
fcoms
nop
sahf
and
ds
push
xor
jno
in
cltd
or
fimuls
cmc
xchg
mov
cmp
movzwl
daa
pop
cwtl
mov
mov
das
jp
mov
divb
fucomip
rcll
repz
mov
jo
je
add
add
add
movsb
jge
lods
xor
addr16
cwtl
rcl
mov
pushf
fisubrl
mov
add
add
and
push
fcmove
lret
and
incb
add
outsb
arpl
cli
dec
add
add
xorb
iret
push
mov
dec
add
add
pop
fstp
mov
and
add
es
sahf
call
add
add
shrb
add
clc
jp
lds
hlt
cmpsb
lahf
test
adc
iret
xor
and
not
sahf
lret
inc
add
add
cli
fdivr
lret
imul
or
add
add
cld
mov
data16
imul
ret
jae
imul
add
add
add
gs
fcoml
sbb
popf
sbb
add
add
push
mov
add
add
mov
inc
incl
sarl
mov
icebp
inc
loope
cli
iret
outsb
mov
add
add
lret
mov
aam
shlb
aad
sahf
pop
cmp
in
bound
mov
mov
dec
push
inc
in
mov
sarb
sub
add
add
inc
add
add
push
lock
xlat
in
xchg
arpl
add
dec
mov
loop
cmp
xor
add
add
sbb
adc
or
add
add
lcall
cmp
inc
mov
add
add
add
fwait
fstpl
add
add
mov
lcall
add
add
pop
xchg
sub
add
add
add
or
and
inc
and
scas
or
jno
int3
lods
mov
daa
or
add
add
add
add
add
dec
nop
mov
mov
addr16
lea
sarb
jo
jo
xchg
sbb
push
add
lret
add
mov
mov
in
add
add
add
add
fadds
fcmovnb
scas
aam
in
fdivp
scas
mov
cwtl
jb
rclb
add
sbb
add
add
pop
testl
mov
xorl
sbb
mov
aaa
ds
mov
mov
in
pushf
jo
lea
xor
add
std
jmp
hlt
add
jl
call
jbe
inc
pushl
mov
inc
test
and
add
add
cmp
pop
adc
pop
cmp
fisttpll
adc
mov
add
add
xor
xor
push
mov
outsb
pusha
mov
mov
add
add
enter
add
add
int
jne
out
out
jns
lret
inc
add
add
push
fists
das
sub
xor
insb
mov
jp
lds
incl
movsl
pop
fisubrs
xchg
sub
sub
add
add
xor
dec
inc
mov
xchg
pop
sbb
ficompl
add
lds
lods
jo
rcll
add
or
mov
cli
lods
insl
les
addl
data16
dec
mov
lock
cmpsb
add
add
add
and
pop
xor
out
lods
dec
add
add
shrl
xorl
mov
lock
inc
mov
in
jne
mov
pop
pop
lods
sub
add
add
std
push
dec
add
add
lock
dec
xor
mov
jno
mov
add
inc
dec
mov
jge
or
adc
mov
loopne
xor
shll
push
scas
mov
mov
xchg
dec
mov
mov
dec
xchg
in
add
jp
add
add
cmp
mov
dec
jecxz
dec
add
add
inc
mov
add
add
out
daa
dec
xor
lock
push
aad
ljmp
sbb
jno
lods
icebp
das
pop
cli
pop
mov
stc
imul
sbb
mov
push
xlat
ret
outsb
inc
mov
push
inc
or
add
fsubrl
mov
je
pushf
ret
jecxz
xor
shl
mov
or
push
adc
pop
aad
add
sub
loopne
jae
add
add
pushf
xor
pop
pop
flds
into
push
gs
out
int
sbb
sbb
daa
sbb
add
add
add
add
add
iret
cmp
push
jne
cmpsb
mov
stc
jg
stos
mov
mov
loope
ret
or
repz
add
add
sahf
add
sti
or
sub
pop
iret
iret
sub
jle
shrb
idiv
subb
loopne
cmp
aad
sar
xchg
jo
fcmovnu
add
pop
jb
ljmp
je
mov
add
add
dec
xor
fistps
or
push
out
and
negb
cmp
jae
test
add
add
cltd
int3
cs
ds
lods
or
add
add
in
gs
inc
mov
add
add
mov
add
add
in
rorb
pop
xchg
popf
outsl
sub
das
mov
inc
scas
add
add
add
inc
in
ds
push
in
rcll
iret
out
iret
mov
loop
imul
clc
push
adc
jne
hlt
cmp
adc
cli
iret
shlb
xor
sub
add
addr16
repz
add
add
lret
fidivs
lret
bound
ss
les
jne
aaa
int3
lret
inc
mov
push
popa
dec
mov
push
ret
out
or
xor
add
add
cmp
adc
insl
arpl
fisttps
push
xchg
sub
pop
sbb
add
add
add
in
pusha
add
add
cltd
lds
jl
lret
mov
ds
adc
repz
add
add
fldl
add
add
pop
push
mov
gs
lret
out
js
or
add
add
clc
push
xor
pop
repnz
mov
js
hlt
insb
add
add
popf
dec
mov
aam
test
jge
pushl
pop
inc
xchg
xor
icebp
icebp
lret
ss
gs
xchg
lcall
add
add
pop
xchg
jns
testb
mov
icebp
push
aaa
jbe
dec
push
insl
mov
add
add
jno
pop
popf
xor
in
jp,pn
push
into
pushf
and
fidivrs
sub
ret
sub
mov
scas
scas
pop
in
xlat
push
xor
ljmp
movsl
shll
sbb
push
sub
test
sub
mov
add
add
and
stos
xchg
add
add
cli
cmc
mov
and
mov
cs
xchg
fs
jecxz
jae
jo
ja
cmp
mov
jmp
sbb
fisubs
add
jns
out
xchg
fbld
pop
and
add
add
insb
mov
stc
gs
push
fisttpl
dec
sbb
popa
mov
test
cwtl
dec
imul
fiadds
outsl
mov
add
add
add
add
sbb
and
pop
dec
mov
jo
xor
xor
add
add
xchg
std
cmpsl
ja
push
cmp
imul
repz
sbb
in
das
sub
mov
movb
or
fdivs
clc
repnz
inc
add
add
add
mov
jb
and
jb
pusha
mov
sbb
mov
pop
std
movsb
and
cmp
push
cmp
sbb
loope
lock
adc
and
add
add
test
ja
icebp
add
outsl
mov
add
add
cwtl
das
es
add
add
adc
ljmp
pop
mov
loop
xor
xor
cmp
int3
push
out
lods
jno
int3
mov
xlat
and
sub
lcall
aad
lret
or
cwtl
leave
push
in
lds
add
add
out
mov
movsl
int3
out
pop
pop
daa
roll
pusha
mov
pop
sbb
jl
ret
shll
int
rorl
cwtl
test
mov
xchg
add
add
add
add
add
add
xchg
xor
aas
add
add
add
cmpl
xchg
xor
pop
cld
dec
mov
xchg
and
add
add
or
jge
es
enter
dec
add
cltd
or
lret
sub
pusha
mov
add
add
jle
cmpl
lahf
add
dec
add
push
hlt
outsl
pop
push
mov
cmp
repz
ret
enter
imul
ud2
fisttpll
add
fcmovne
arpl
lock
pop
jp
popf
jle
mov
jnp
mov
or
mov
sub
add
add
int
wbinvd
aas
pop
push
cld
jo
adc
mov
jmp
push
test
add
add
add
add
add
flds
mov
stos
xchg
xchg
and
add
add
or
loopne
xchg
sbb
sub
roll
add
mov
stc
mov
cmp
sbbb
or
inc
mov
mov
cmc
sub
repnz
mov
add
add
popa
imul
cmpsb
sarb
add
add
dec
inc
mov
sbb
mov
xor
repz
lret
out
jb
cmp
ds
mov
movsb
sar
and
add
add
sub
add
add
and
in
cli
rep
sbb
and
add
add
add
ds
mov
lock
add
add
dec
dec
stc
fs
adc
xchg
mov
cmpsb
jge
sbb
add
add
punpckhwd
jo
pop
imul
pop
cmpsl
jbe
xchg
sub
add
add
cmp
add
add
add
cs
add
add
adcl
out
mov
add
add
ss
add
mov
push
mov
js
dec
mov
lahf
idiv
ss
cli
mov
stos
and
lret
stos
leave
inc
dec
frstor
add
repz
or
orb
insb
add
add
xchg
int
mov
jge
popa
jp
jg
xchg
out
mov
cli
outsl
mov
and
inc
add
add
adc
add
add
add
add
xchg
ret
popa
cmc
leave
xchg
iret
cmc
xchg
aam
bound
add
add
pushf
add
rol
int3
test
outsb
aas
flds
add
add
dec
cmpsl
lods
fists
arpl
cmp
add
cli
sub
add
add
fdiv
push
je
xor
xor
jns
fdivrl
stos
push
leave
mov
shll
add
xchg
mov
mov
push
inc
dec
jae
loope
or
dec
jl
std
inc
pop
fidivrl
xchg
adc
fisubl
sti
inc
add
add
sub
pop
out
xchg
mov
test
and
add
add
add
insb
mov
inc
shll
les
fs
mov
add
add
add
push
jb
add
add
inc
add
add
repnz
adc
add
adc
xchg
push
in
cwtl
mov
enter
add
add
add
add
add
fsubrl
mov
add
and
dec
cs
and
cmc
lret
inc
mov
lock
subl
pop
arpl
inc
pop
mov
mov
lret
xchg
rcrl
test
xor
out
insb
add
add
xchg
out
jmp
and
add
add
add
add
mov
add
add
add
add
in
adc
jmp
jno
add
add
fisttps
aad
repz
stos
dec
adc
mov
xchg
fnstenv
dec
mov
and
add
add
cmp
jns
xor
adc
cld
and
je
jle
aad
mov
push
and
add
add
xor
imul
fdivs
mov
in
add
or
add
add
jp
repnz
outsb
out
test
mov
out
insb
mov
cmc
push
fwait
test
dec
icebp
xchg
pop
pop
sbb
imul
inc
icebp
sbb
push
xchg
int3
push
cwtl
mov
int3
and
scas
fs
and
xchg
fnclex
les
push
stos
das
dec
or
popf
ret
out
jnp
xchg
lcall
andl
outsb
shll
mov
add
add
adcb
add
sar
sub
outsb
int3
jb
mov
jo
aad
mov
mov
fdivl
shlb
fwait
jo
ret
jg
push
test
pushf
xchg
sbb
add
repnz
xlat
mov
add
or
fimull
xor
into
mov
test
push
nop
adc
dec
xchg
addr16
js
insl
in
lcall
and
mov
jecxz
push
push
cmp
and
lcall
dec
or
add
add
aad
test
pop
push
and
jno
pop
inc
mov
ja
jnp
push
dec
mov
mov
mov
dec
xor
xor
pop
inc
add
add
or
mov
test
scas
fwait
add
xor
fiaddl
mov
in
imul
fisubs
push
mov
push
orb
mov
loope
jbe
push
test
std
sub
adc
pusha
mov
mov
sbb
lea
ss
enter
mov
nop
adc
in
cmp
add
add
add
aam
push
push
cmp
cltd
pop
in
inc
icebp
add
inc
mov
in
push
lret
and
xchg
push
or
push
add
iret
adc
dec
or
leave
mov
and
or
push
and
xchg
scas
popa
jg
mov
dec
xor
jmp
add
add
or
add
add
pop
fwait
nop
xor
xchg
call
push
or
mov
sbb
das
mov
jmp
call
pop
and
add
add
into
mov
pop
movsb
xchg
xor
add
pop
adc
xchg
jno
movsb
push
jo
enter
sbb
test
cmp
repz
add
out
cmp
add
add
mov
out
dec
adc
fbstp
push
in
cmpsl
mov
roll
mov
dec
mov
test
sub
mov
jp
xor
test
add
add
xor
loop
out
and
in
add
mov
add
cli
shr
mov
jge
cld
rcrb
iret
and
out
sub
add
or
pop
push
aad
mov
add
add
add
add
cltd
loope
jb
inc
mov
cs
loope
add
add
jno
aad
push
movsl
inc
pop
or
sbb
pop
mov
xchg
lret
ljmp
add
add
loop
mov
fisubrs
into
mov
ss
inc
add
add
cmpsl
pop
sbb
inc
or
add
add
or
int3
push
stos
dec
xor
sbb
std
fdivr
icebp
or
test
push
aas
and
enter
add
add
mov
sbb
add
add
shr
movsb
jne
add
or
fdivrs
sub
add
add
xorl
mov
xor
cmpsb
inc
add
add
add
jge
mov
add
dec
mov
sbb
push
xor
aam
sbb
out
cmp
inc
aam
mov
add
add
add
add
xchg
int
sub
add
add
jg
call
mov
mov
jns,pt
mov
add
add
les
push
add
popf
aam
cltd
inc
add
ljmp
add
lods
sbb
pop
aaa
mov
mov
daa
mov
add
scas
clc
fimull
add
mov
mov
sub
iret
dec
dec
lahf
xchg
popaw
cmp
mov
test
and
lahf
push
bound
push
clc
xor
add
push
mov
popf
fistpll
inc
add
add
ret
xchg
or
add
lds
add
add
mov
frstor
pop
cmc
dec
mov
fcoml
jg
sub
test
fwait
insb
mov
push
xor
add
int
in
dec
add
add
aam
inc
arpl
lret
lret
push
push
fs
jnp
or
add
add
add
repnz
fwait
jne
jae
adc
or
add
add
add
mov
ror
add
add
add
inc
mov
mov
imul
std
dec
je
lahf
dec
xchg
out
clc
mov
add
add
andl
add
sbb
add
add
jle
lds
fidivs
push
xor
add
dec
mov
mov
aas
or
add
add
mov
mov
movsb
pop
and
je
stos
repnz
mov
loop
adcl
loop
imull
pop
xor
pusha
mov
insb
mov
adc
test
mov
pop
push
jbe
add
add
xchg
mov
fisttpl
add
add
dec
mov
insl
ret
in
mov
mov
mov
add
add
cmp
loop
push
dec
mov
sub
stos
inc
pop
fwait
cld
lock
pop
icebp
jg
std
pop
mov
icebp
jno
add
add
mov
out
test
mov
push
mov
je
cs
sub
add
add
hlt
mov
in
and
jg
enter
inc
xor
lea
imul
dec
lcall
lods
xchg
and
add
add
rcrb
lret
xchg
mov
pop
mov
inc
add
add
cmp
test
lods
std
ss
sbb
and
jne
out
and
sbb
fldcw
add
add
pop
out
daa
andl
cmp
add
push
sub
sbb
das
negb
sbb
pop
sbb
add
or
add
cwtl
stos
adc
jmp
add
mov
sbb
repz
add
or
add
addr16
mov
gs
xchg
cs
jbe
push
jle
and
add
add
xchg
push
pop
mov
add
add
jnp
mov
push
xchg
xchg
out
icebp
add
add
add
into
fidivl
icebp
loop
insl
mov
push
cmp
lret
add
lea
inc
jno
or
xlat
xchg
fistpl
and
outsl
in
dec
dec
xchg
pop
mov
mov
jo
jmp
pop
lods
mov
inc
add
add
in
add
cmpb
push
sub
cmp
cmp
jns
pop
lods
in
das
pop
sub
add
add
shlb
pop
pop
mov
jns
ja
cwtl
rol
add
add
mov
add
cwtl
lock
clc
cmp
cmp
lods
addr16
out
or
mov
mov
add
jne
add
rcll
cmpsl
iret
int3
inc
cli
stos
xor
xorb
cmp
jmp
pop
mov
inc
outsl
add
fwait
les
push
adc
addr16
cmp
scas
jle
leavew
or
add
add
dec
mov
add
add
mov
mov
pop
enter
add
add
shl
movb
jecxz
in
mov
lock
mov
mov
stc
inc
ret
sti
adc
and
add
push
daa
pop
fstpt
clc
inc
mov
test
mov
loop
xchg
dec
movsl
mov
add
add
sahf
das
push
icebp
outsl
mov
push
jno
stos
mov
fnstcw
daa
xchg
popa
mov
subb
add
add
rclb
add
add
aad
mov
bound
fdivl
adc
repnz
rcll
jg
mov
les
das
paddd
add
push
shrd
ds
or
dec
mov
call
fs
mov
ret
mov
mov
jns
sti
xchg
icebp
sub
cld
push
inc
add
add
push
sbb
xchg
ljmp
add
xchg
popa
std
dec
daa
sahf
cmc
cmp
mov
xor
inc
mov
nop
xor
inc
cmpsb
xlat
xchg
out
andl
add
add
xor
push
test
mov
addr16
int
cmpsl
lods
fistps
imul
sub
add
add
add
add
test
scas
mov
add
mov
out
ss
mov
hlt
lret
out
jg
cltd
and
in
imul
xchg
adc
shrb
ja
sbb
add
add
xchg
aad
adc
push
insl
cmp
imul
loopne
mov
lods
outsl
cmp
mov
jmp
dec
push
test
push
add
add
add
mov
out
pushf
rolb
in
pop
push
and
loope
js
shr
adc
pop
jno
jl
stos
aaa
shll
add
add
call
addr16
aam
mov
jge
mov
jmp
subb
xchg
sahf
mov
outsl
add
and
inc
mov
fadds
fldenv
xchg
inc
adc
cmpb
stos
bound
add
add
inc
push
cmp
pusha
mov
mov
mov
and
jge
jb
pop
mov
xchg
mov
push
int3
adc
ss
imul
inc
repnz
jbe
adc
inc
add
add
mov
mov
add
mov
sbb
mul
ja
bound
fidivrs
or
shrb
mov
add
mov
dec
mov
fisubrl
add
cltd
add
add
add
add
add
pop
add
mov
data16
fmul
inc
add
add
push
mov
gs
jb
aad
paddusw
ret
inc
loope,pn
hlt
pop
aaa
jnp
cmc
popa
cmpsl
lcall
add
add
and
add
add
add
popa
jmp
in
fnstsw
push
xor
int3
scas
add
adc
jmp
dec
and
push
push
push
out
aad
aas
jnp
sbb
inc
cmc
iret
insl
mov
add
add
add
mov
lcall
je
pop
fstpl
aad
add
bound
pushl
push
adc
js
daa
cmp
pusha
mov
add
add
dec
dec
test
je
add
add
inc
xchg
mov
mov
push
addr16
mov
jne
mov
xor
outsl
pop
leave
sub
sub
add
lods
dec
add
add
lahf
pushf
mov
mov
add
sbb
push
movsl
sub
int
jno
or
sub
clc
pushl
loop
sahf
rol
add
add
add
add
fsubs
add
mov
xor
sbb
dec
mov
mov
mov
pop
and
add
add
fucom
insl
and
in
push
jecxz
cmc
out
push
mov
ret
and
leave
xor
sub
cmp
lock
cmp
sarl
in
fstpl
dec
sbb
add
mov
pusha
add
add
or
add
add
add
pop
sbb
push
cmp
mov
adc
lock
pop
dec
addb
add
jno
mov
rol
dec
stos
add
add
add
xchg
in
sub
add
add
mov
loop
sbb
xchg
mov
mov
dec
lock
mov
jno
sub
add
add
adc
fldt
add
add
add
add
jnp
add
add
sbb
xor
mov
sbb
push
and
xchg
xor
stc
jno
and
add
add
mov
adc
push
hlt
adcb
xchg
dec
xchg
fiadds
mov
jns
or
or
fists
aas
sahf
xor
ror
add
push
adc
cli
adc
push
push
push
adc
in
xor
sbb
iret
repnz
les
cmp
mov
add
dec
pushf
sbb
loop
jmp
loop
cmp
adc
pop
ja
add
mov
jbe
dec
nop
adc
mov
mov
add
add
add
leave
inc
mov
loop
add
add
pop
ss
and
sub
add
add
rorl
mov
les
lods
mov
or
add
add
add
das
xchg
xor
outsb
sbb
jp
orb
add
add
cmp
mov
and
inc
lock
and
add
add
add
add
in
adc
mov
and
mov
xor
incb
jmp
pop
or
add
add
ffreep
movl
add
add
add
add
add
fists
add
ficomps
jns
mov
add
add
cwtl
adc
add
add
nop
mov
dec
mov
sub
cmp
lret
xchg
testw
les
cmp
sbb
rorb
sar
ja
out
dec
in
addb
add
add
xchg
dec
aas
in
mov
xchg
aas
adc
or
add
add
sbb
mov
xorb
add
es
jbe
adc
lcall
xor
out
add
or
add
add
sarb
push
and
test
adc
add
add
push
in
shlb
pop
lock
jp
mov
add
es
sub
add
add
outsl
jle
push
jg
mov
rolb
rorb
rcll
movsb
stc
sub
cmp
cmp
and
add
add
add
aam
ret
jg
dec
jge
mov
sub
sti
fcoml
and
add
add
in
inc
call
and
in
sub
add
inc
xor
jne
stos
push
jne
mov
add
add
or
add
add
rorl
aas
shrb
xor
add
xchg
push
adc
adc
es
inc
imul
cmpsl
add
push
xchg
movsb
jo
mov
das
or
jecxz
sbb
insl
rcl
test
aam
outsb
test
pop
fs
add
add
or
add
add
gs
sbb
daa
xchg
imul
jnp
cmpsb
xor
xchg
insb
mov
jnp
loope
pop
test
sub
xchg
test
insl
push
pop
jecxz
loop
mov
pop
adc
imul
jnp
imulb
add
add
lcall
dec
addr16
mov
dec
mov
ret
xchg
mov
or
insb
mov
pop
lds
add
add
add
sbb
cmp
loop
rorl
scas
mov
sub
and
xor
or
test
js
jbe
mov
cmpsl
xchg
push
imul
mov
mov
jg
mov
add
add
jge
mov
mov
push
or
shl
sbb
in
ss
fwait
xchg
mov
jo
and
adc
lret
mov
and
adc
in
lods
jmp
roll
adc
insl
daa
in
fstl
xlat
mov
push
not
adc
lds
or
add
add
add
jl
adc
imul
aaa
xor
xor
iret
add
add
add
je
ret
dec
mov
xchg
into
push
adcl
movsb
sarb
sarl
add
add
loop
push
loope
call
add
add
add
push
leave
ljmp
jno
sub
add
add
or
ret
mov
call
add
cmc
add
add
bnd
and
out
fwait
push
push
ret
pop
mov
pop
pop
das
push
in
stos
mov
fcmovu
ss
xor
jmp
mov
les
add
pusha
add
add
inc
add
or
mov
xchg
fstl
add
push
gs
pop
cmpsl
aam
pop
pop
ja
lret
nop
inc
jmp
stos
shll
cmp
out
pop
addr16
add
add
add
sub
add
add
jp
movsb
mov
shrl
dec
add
add
adc
sti
rorl
mov
inc
lret
fidivl
xlat
push
mov
sarl
and
xlat
and
cmpsb
pop
stc
js
push
out
sbb
adc
push
loopne
add
add
mov
adcl
push
insb
add
add
ja
scas
cltd
insb
add
add
adc
int3
mov
decl
sub
jae
mov
loop
sub
add
add
dec
jns
lret
push
and
pop
add
sarb
add
fcmove
decl
loopne
cs
mov
std
and
push
add
add
push
iret
push
lds
push
lds
xor
add
and
inc
add
add
pop
push
push
stos
mov
faddl
imul
jae
inc
mov
jb
add
add
add
cmp
loopne
xor
stos
sarl
andl
pop
add
add
add
mov
jo
dec
add
add
add
sub
add
add
xchg
cli
imul
imul
lods
and
pop
xchg
add
test
pop
punpcklwd
add
add
adc
push
cmp
in
adc
jnp
loopne
mov
push
mov
lahf
popf
decl
cs
fadds
add
add
xor
and
pop
fcompl
scas
xor
xlat
jge
pop
mov
js
push
enter
add
add
mov
stos
test
aas
inc
mov
dec
enter
or
mov
inc
mov
add
add
push
aas
or
add
add
add
add
jg
cmc
xchg
es
mov
add
add
ds
cmpsl
sub
mov
repz
mov
jne
adc
or
loop
cmp
sub
add
add
shll
pusha
add
add
out
loop
mov
push
pop
lock
push
out
sahf
mov
and
add
add
int
test
add
and
ss
cmp
pushf
and
cmp
mov
jno
out
and
add
add
add
add
sub
out
mov
arpl
add
add
cmpsl
ja
daa
hlt
add
arpl
loopne
jecxz
ficoms
stos
and
and
add
push
push
cmp
je
fwait
ret
cs
jle
mov
xor
push
push
or
imul
cmpsl
rclb
fcoms
mov
pop
mov
jb
add
add
test
pop
fsubrl
add
add
adc
lahf
dec
dec
mov
add
sbb
test
aam
mov
ret
data16
cmp
sbb
mov
lods
mov
mov
repz
insb
add
add
shrl
mov
lret
add
add
push
and
pop
cmp
js
cli
jb
inc
add
rcll
dec
cmc
filds
mov
cmp
in
pop
pop
shr
mov
stos
rcrl
xchg
movsl
push
stc
cmpb
sahf
outsb
pop
or
push
lds
adc
sub
sahf
insl
cmp
iret
xor
xchg
imull
mov
pusha
add
add
inc
mov
and
pop
xor
xchg
popf
ljmp
sub
add
add
stc
xchg
scas
es
ds
ja
lret
jne
and
mov
faddl
adc
sub
add
bound
add
imul
rcr
call
sbb
push
mov
xor
aaa
leave
xor
xchg
and
push
dec
fsubrs
xlat
xor
pop
dec
ss
add
add
and
subl
inc
push
scas
push
mov
add
add
in
push
pop
adc
and
add
add
add
mov
popa
cmp
mov
dec
leave
xchg
cmc
aaa
and
add
add
and
fdivrl
mov
mov
add
int3
fists
add
add
adc
cmp
hlt
dec
add
add
push
push
aaa
enter
int3
shlb
mov
fisubs
mov
or
xor
hlt
and
pop
add
add
add
aaa
fiaddl
rol
js
sub
add
add
xor
mov
in
mov
add
add
pop
push
sahf
dec
repnz
cld
cmp
xor
ss
cmp
pop
scas
out
mov
out
jo
clc
xlat
push
je
cmpsl
test
lods
test
call
xchg
mov
mov
mov
xor
xlat
xchg
aad
sbb
inc
js
and
repz
loope
icebp
lcall
mov
add
popa
jecxz
and
imul
mov
inc
cmp
scas
sbb
mov
out
add
add
das
and
push
mov
pop
and
cmp
out
sbb
addr16
test
push
push
push
sbb
and
add
add
out
mov
mov
and
mov
leave
cmpsl
jns
mov
clc
ds
mov
sub
loope
jecxz
jnp
xor
insl
lods
fcmovnbe
mov
out
dec
rcrl
push
scas
sahf
rorb
sub
add
mov
sti
add
cmp
mov
lds
add
add
jmp
jnp
dec
xchg
add
insb
mov
xchg
bound
push
adc
hlt
add
lret
xor
jno
sahf
mov
add
add
es
mov
xlat
lcall
add
add
gs
int3
cltd
insl
mov
add
add
add
mov
add
add
out
ljmp
pop
addr16
rorb
pop
inc
fucomi
cmpsl
es
outsb
mov
jo
cmp
add
add
xchg
adc
add
push
mov
or
data16
add
add
out
pop
lea
or
add
add
add
jns
mov
lret
dec
jg
mov
add
add
dec
sub
add
add
mov
icebp
sti
ret
mov
lods
xchg
addr16
jns
stc
sbb
mov
xchg
inc
add
add
xor
xor
pop
jno
fldl
add
das
mov
sub
add
add
shrl
mov
xor
in
adcl
mov
add
out
ds
sub
clc
jb
push
or
add
add
mov
movsl
aaa
xor
and
mov
add
add
mov
fadd
ret
push
daa
lods
sahf
xor
sbb
sbb
mov
mov
psrad
popf
pop
xchg
loop
sbb
jmp
fs
pop
test
gs
mov
mov
cli
loop
mov
pop
cs
cmp
add
pop
stos
sbb
pop
pop
cmp
inc
add
xor
mov
loopne
sbb
and
mov
add
loope
xor
mov
add
cs
movsb
mov
add
add
sti
movsb
movsw
or
rcrb
mov
pop
xchg
sbb
sbb
in
stc
lahf
outsb
out
mov
jl
push
jnp
mov
dec
ficomps
es
or
add
add
and
add
push
mov
scas
es
add
add
xor
pop
int3
push
xor
add
add
push
jp
pushf
cmpsl
cli
loop
push
out
ds
or
xchg
push
rcrl
mov
pop
xchg
imul
jb
sub
add
add
insl
push
rol
xchg
in
and
sub
and
xchg
and
dec
fnstcw
iret
cs
cmp
add
and
cld
sub
add
add
data16
add
add
lock
sbb
ret
add
add
aam
movsb
stos
sub
inc
pushf
fadd
mov
mov
pushf
xchg
popf
addr16
xor
inc
addr16
adc
jge
pop
lret
pop
lods
sub
pop
cmp
and
pop
bound
dec
pop
lock
mov
in
xor
add
add
shl
sub
add
add
aaa
loop
adc
cli
fst
nop
in
lcall
xchg
mov
xor
add
add
rol
mull
add
add
add
mov
decl
int
not
adc
lods
and
out
les
mov
add
add
addr16
xor
add
mov
push
lea
jnp
cmp
lock
mov
out
or
add
add
rcl
inc
dec
cmpsb
movsl
sbb
push
icebp
jne
xlat
mov
add
pushf
jge
addr16
stc
pop
sahf
mov
add
dec
mov
xchg
jecxz
mov
cmovle
shll
call
in
sub
cmp
dec
lret
inc
add
add
mov
pushf
fisttps
jno
jbe
jnp
sbbb
add
sub
mov
cltd
lds
fnstsw
adc
add
add
xor
jmp
mov
lds
mov
inc
add
inc
mov
aad
and
add
add
shrl
add
add
xchg
push
push
mov
jae
add
add
add
sbb
loopnew
hlt
sub
add
add
in
pop
aad
jae
cmp
dec
add
add
add
leave
sub
in
sub
and
add
add
lahf
add
mov
add
sub
or
add
add
add
add
or
and
sbb
pop
mov
add
add
pushf
and
add
add
add
add
std
cltd
decl
mov
fistpll
jae
bound
enter
shrb
pop
push
or
add
add
cmpsl
sbb
lcall
inc
fwait
and
or
add
add
scas
je
sbb
xchg
shlb
push
mov
inc
mov
fs
shll
gs
ror
add
and
call
push
aam
repz
xor
and
add
add
insl
shrb
mov
inc
inc
andl
inc
mov
add
lea
xchg
ljmp
cmp
sbb
popf
and
add
add
insb
mov
push
jbe
sub
lds
outsb
xchg
enter
xchg
jb
push
adc
add
jne
xor
sarb
lcall
int3
pop
inc
shrb
mov
xchg
jmp
xchg
sub
add
add
imul
mov
loope
or
or
adc
dec
test
addr16
mov
lock
mov
gs
xor
jg
scas
cmpsl
adc
add
add
add
addb
mov
pop
repnz
cmp
dec
insb
add
add
adc
mov
xor
add
add
jae
inc
add
add
je
enter
push
es
cmp
lds
add
add
jmp
sbb
mov
sbbl
push
rorb
jbe
shl
jl
dec
and
add
add
push
mov
add
add
test
sbb
lea
adcl
in
shrb
add
add
xchg
sub
call
xchg
ds
std
int3
addr16
testl
push
roll
add
adc
add
add
addb
push
rol
ret
pop
xchg
addr16
mov
add
push
mov
jns
stos
sbb
dec
or
add
add
roll
shll
or
rclb
or
add
add
adcb
xor
add
add
push
bnd
fs
pusha
add
add
insb
mov
adcb
pushf
push
inc
and
out
imul
int
adc
call
mov
push
lahf
xchg
pop
xchg
and
sarb
mov
or
add
add
test
mov
add
mov
dec
inc
pop
or
add
add
xlat
dec
mov
je
adc
add
add
pop
and
mov
xor
loope
xchg
and
add
add
mov
movsl
loopne
add
add
xor
mov
push
jmp
int3
pusha
mov
out
push
test
mov
stos
pop
enter
xor
mov
aam
dec
mov
jo
sbb
dec
jmp
adc
xor
mov
push
add
add
pop
scas
jo
mov
add
add
leave
jmp
and
leave
movsb
stos
mov
add
fcomip
aas
push
les
or
add
add
icebp
add
add
add
cwtl
pop
adc
pop
lods
push
cmpxchg
loop
fistps
int
in
or
mov
movsl
jbe
scas
xchg
mov
shl
mov
pop
pop
mov
pop
mov
push
in
cmp
mov
mov
mov
mov
lret
cmp
add
mov
or
add
add
leave
sti
inc
lds
dec
add
add
insl
mov
jmp
insb
mov
mov
mov
sbb
add
add
mov
lock
lds
adc
andb
add
hlt
pop
shrb
jno
adc
mov
imul
mov
mov
iret
fistpll
xor
and
stc
push
out
mov
lods
xor
dec
mov
xchg
rclb
enter
call
jl
dec
fsubl
fwait
loop
push
popa
negl
mov
or
aas
push
dec
add
add
loop
enter
pop
setp
add
add
mov
jge
outsb
cmpl
and
mov
movhps
cmp
dec
inc
push
dec
iret
pop
inc
mov
das
push
mov
sti
mov
sub
add
add
and
ret
daa
imul
dec
add
add
lock
push
movsb
fiaddl
out
add
or
or
add
add
add
add
jecxz
enter
add
add
xchg
cmpsl
push
push
icebp
pusha
add
add
dec
add
add
iret
or
jo
mov
repnz
add
add
fs
rcrb
and
mov
dec
adc
jp
cmp
ret
jecxz
or
fs
ja
add
add
push
aaa
sbb
add
add
lods
mov
mov
add
add
add
inc
mov
jecxz
out
dec
mov
pop
je
cmp
scas
cmp
push
loopne
icebp
mov
adc
xchg
xor
rolb
dec
add
add
sub
and
adc
add
add
push
cmc
push
jns
mov
inc
outsb
pop
cld
scas
lcall
cmpsl
aas
xor
shll
mov
and
cmp
fcomip
call
push
add
ss
mov
add
xor
and
add
add
push
sbb
dec
add
add
xor
push
pop
xchg
test
mov
xchg
adc
cmpb
pop
fsqrt
out
pusha
mov
lcall
add
jns
dec
sub
cmp
das
and
out
lahf
int3
xchg
or
add
add
mov
out
mov
ror
mov
sti
std
mov
ss
add
add
jg
cmp
adc
cmp
add
xchg
out
mov
cmpl
push
mov
mov
xchg
idivl
imul
in
sub
sbb
mov
adc
and
add
aas
in
mov
nop
orl
mov
addb
dec
dec
mov
mov
add
int
xor
inc
movsb
ret
push
push
mov
sbb
mov
cmp
xor
xlat
je
test
stc
das
sub
add
add
icebp
lahf
fsub
inc
imulb
mov
mov
inc
out
push
dec
mov
and
test
les
sbb
fstp
arpl
add
mov
add
pop
pop
xchg
mov
jle
dec
call
jmp
in
sysret
lock
add
mov
adc
mov
cmp
pop
jb
xor
mov
push
imul
repnz
repz
inc
shrb
add
add
add
add
fmuls
sahf
dec
outsw
nop
sub
add
add
sarb
add
add
addr16
mov
dec
dec
dec
hlt
aad
outsb
fnstcw
test
add
add
jg
add
sahf
or
xchg
dec
add
add
ljmp
pop
ljmp
ficoml
mov
mov
xchg
popf
lea
out
inc
and
add
add
imul
add
push
adc
xchg
jbe
mov
nop
daa
xor
out
jge
mov
cmp
insl
jl
decl
add
add
add
jge
mov
inc
mov
pop
ror
xchg
xorps
cmpsb
inc
push
sbb
add
mov
das
and
notb
cwtl
in
pop
test
xlat
sub
sub
mov
je
xchg
jne
xor
ret
adc
icebp
pop
insl
scas
cmp
jns
lods
cld
lret
lea
aas
mov
rcll
xchg
call
add
add
xlat
cmp
les
add
add
int
sbb
out
pushfw
mov
inc
psubusw
cs
popa
xchg
jle
cmp
add
add
mov
fbstp
in
adc
xchg
xor
cmc
mov
cmc
pop
add
add
pop
or
jmp
push
jecxz
lret
add
cmp
leave
sbb
daa
mov
daa
mov
fimuls
lods
fisubrl
les
addr16
xchg
and
add
mov
outsl
jecxz
jae
mov
mov
xor
scas
rcrl
push
gs
push
shlb
dec
ret
pop
sub
and
add
add
xchg
fistps
sub
add
add
inc
test
add
mov
mov
stc
cmp
rorl
cld
jge
ret
imul
and
add
add
add
gs
and
jns
mov
add
add
mov
test
pop
lea
jl
dec
add
add
add
add
add
add
add
nop
sahf
inc
mov
add
add
notl
add
add
add
add
add
xchg
loopne
mov
adc
js
push
bound
and
add
add
mov
or
add
mov
add
adc
cs
xor
add
add
add
add
mov
or
add
add
cmpl
movsl
add
add
add
xor
xchg
pusha
add
add
cmpsb
xorb
adc
xchg
sbb
mov
repz
and
cli
test
out
frndint
sub
add
add
mov
outsl
scas
xor
xchg
int
add
add
add
jnp
and
add
add
add
add
icebp
int3
mov
incl
add
add
imul
inc
mov
dec
es
push
or
mov
mov
add
add
add
rcrb
int3
pop
sbb
movsb
pop
stos
xchg
add
add
add
pop
cmpsb
icebp
or
pop
out
ret
add
xor
out
xchg
push
push
mov
add
repz
and
add
add
pop
test
add
add
add
loope
in
or
mov
repnz
out
jns
xlat
aas
mov
mov
cltd
xchg
js
rcr
cmpsb
outsl
cltd
int3
fsubr
mov
out
cmp
sbb
faddl
jno
mov
call
add
add
stos
leave
mov
add
add
mov
arpl
int3
movsl
ja
adc
dec
mov
add
add
stc
aaa
xchg
inc
decb
add
add
fidivrl
jle
or
dec
and
test
push
fstps
pop
push
loop
pop
js
repz
scas
in
in
push
cmp
mov
inc
psrld
popa
push
lahf
inc
push
push
int
add
add
xor
cwtl
sbb
das
xor
test
sbb
dec
or
add
add
add
push
jae
loop
jnp
dec
fs
cmc
sahf
cmpsb
inc
add
add
aam
in
sub
lret
pop
jae
shrb
mov
sub
cltd
jmp
and
mov
repz
add
add
popa
sub
cmpb
leave
arpl
aaa
sub
add
add
mov
out
test
call
imul
lahf
pop
inc
inc
inc
inc
push
xchg
sub
stos
rcrb
xor
mov
daa
call
xchg
mov
add
lock
jl
dec
jl
popf
out
cld
insb
add
add
scas
imul
inc
in
leave
jecxz
xor
or
inc
mov
mov
pop
sub
mov
mov
mov
inc
add
add
and
imull
mov
sbb
inc
sub
lock
ret
pop
sub
ljmp
adc
and
add
add
mov
pop
mov
loope
js
std
loope
sbb
ja
dec
les
inc
push
ja
push
push
imul
add
add
mov
mov
and
int3
gs
out
out
add
add
mov
stc
cltd
aaa
mov
mov
jae
pop
cmp
fildl
add
add
add
add
mov
adc
fsubrs
dec
adc
add
add
xchg
push
xchg
inc
dec
stc
xchg
mov
andl
inc
xchg
scas
shrl
mov
rclb
mov
std
int3
movsl
jge
test
aaa
outsb
cmp
bound
add
scas
std
mov
jecxz
add
add
scas
lret
out
or
std
ret
sub
int3
pop
mov
lahf
div
lcall
rcrl
sub
lock
adc
imul
cli
arpl
jecxz
mov
mov
pop
mov
add
mov
add
xor
scas
into
dec
add
add
mov
fidivs
cld
inc
adc
cmp
and
inc
ret
call
ds
sub
pop
addr16
out
sbb
mov
add
push
push
and
add
nop
and
cwtl
out
mov
les
add
add
sub
shll
sbb
nop
stos
pop
push
sbb
gs
and
add
add
sub
add
movsb
inc
lds
mov
mov
ret
iret
or
mov
andb
mov
mov
add
add
add
push
xor
add
out
sbb
xor
out
into
mov
in
jge
movsb
cmp
add
add
orl
lock
xor
repz
push
mov
cltd
lock
loopne
repz
negl
mov
and
in
pop
or
mov
cmpsb
ficomps
hlt
test
imul
inc
add
rcrl
fstp
int
push
in
lahf
xchg
jge
push
ret
jnp
xor
in
bound
dec
add
add
stos
test
popa
mov
mov
adc
mov
xchg
cmp
or
mov
add
sub
emms
cmp
popf
test
ret
jle
jne
lret
sbb
jl
mov
in
jb
pop
int
jl
pop
leave
pop
sbb
jbe
andl
std
dec
cmpsl
mov
arpl
je
es
xchg
adc
mov
add
pop
sub
int
sti
adc
rclb
pushf
cmpsl
mov
mov
jbe
jae
inc
jns
std
flds
add
ss
pop
xor
sbb
stc
adc
cmp
lea
push
loop
push
or
inc
sarb
xor
add
add
cs
xchg
mov
add
add
pop
mulb
call
je
pop
addb
push
jg
mov
mov
jmp
adc
sub
jno
mov
or
icebp
stos
ja
loop
jmp
addr16
aas
mov
push
pop
xchg
std
jle
pushf
rorl
add
add
cmpb
mov
jle
psrlw
test
mov
pop
and
hlt
mov
jns
aaa
scas
push
xchg
popf
and
add
add
fwait
vrsqrt14ss
imul
and
mov
sbb
mov
xor
or
add
add
loop
push
test
aaa
daa
std
pop
xchg
lods
mov
sqrtps
mov
pop
xor
xor
outsb
push
mov
xor
sarl
mov
stos
out
fcoms
lcall
cmpsl
fnsave
jns
jo
fs
or
add
add
jmp
mov
stos
fdiv
addl
into
repnz
add
or
add
push
cmp
int3
or
add
add
and
mov
pushf
pop
and
add
add
add
ja
insb
add
add
pop
sti
out
xor
add
andl
in
sbb
mov
jae
shr
cli
xchg
sub
ret
lcall
add
adc
sbb
add
add
add
nop
xor
aad
mov
dec
mov
add
sbb
add
add
movsl
sarb
mov
add
push
push
outsl
in
sahf
dec
sbb
dec
pop
jae
sbb
push
fnstsw
pushf
outsb
and
xor
clc
mov
add
adc
stc
ja
in
mov
add
sti
push
out
dec
scas
lret
shll
add
add
sbb
sub
add
add
adc
xchg
xor
cli
xor
jmp
or
add
add
push
adc
fucom
enter
lret
push
xlat
mov
test
das
pop
pop
xchg
mov
lahf
pop
dec
or
jbe
cmp
mov
and
dec
xor
xchg
dec
pop
mov
and
and
add
add
icebp
aad
js
lcall
fcmovb
jmp
adc
add
fistps
mov
pop
repnz
mov
add
add
add
push
fstl
add
add
add
je
inc
movsl
jmp
mov
xor
push
inc
add
add
dec
ret
repz
sub
enter
xchg
in
mov
pop
cmp
lcall
mov
add
pop
sub
add
add
pop
push
jne
mov
outsb
mov
call
mov
lea
jno
lcall
xchg
or
lahf
cmp
mov
movsb
add
add
push
pop
xor
jp
aam
mov
jl
jo
jmp
mov
lahf
sbb
add
add
add
mov
cmpsb
cmp
push
sbb
mov
push
xchg
push
inc
and
mov
push
xor
xlat
aas
cmc
jge
dec
add
add
inc
inc
dec
push
hlt
andl
add
jl
insl
pop
add
mov
pushf
xor
jns
adc
inc
mov
mov
add
lahf
lahf
or
xchg
push
jp
adc
pop
int
add
add
sub
add
add
xor
push
mov
and
add
add
add
add
adc
push
rolb
push
aaa
sub
add
add
inc
add
push
fwait
lea
adc
pop
and
js
jp
inc
mov
add
add
negl
test
inc
in
faddl
dec
testl
add
lods
cmc
cmpsl
mov
mov
add
add
roll
push
push
call
adc
cmp
testl
add
add
xor
dec
add
add
or
jp
inc
mov
add
add
scas
dec
push
sbb
add
das
aam
cld
mov
shr
insl
data16
repz
mov
mov
cs
test
add
add
add
add
lahf
stc
lcall
cmc
aas
and
mov
cmp
popa
inc
push
inc
hlt
mov
xchg
into
stos
in
mov
and
jle
lret
add
add
inc
pop
out
inc
jb
mov
mov
mov
add
add
and
add
add
psubusb
sti
sub
lea
mov
mov
rcrl
sbb
mov
mov
mov
mov
inc
and
add
xor
mov
jle
or
add
dec
sbb
pop
js
popf
pop
xor
add
movsb
xorb
into
jnp
mov
pop
xchg
out
or
inc
outsl
adc
into
sub
xchg
jo
out
mov
mov
sbb
mov
mov
cmp
push
ss
adc
add
les
add
add
and
inc
mov
addr16
jnp
mov
mov
fcomps
adc
subb
add
mov
rcll
add
add
or
ljmp
sub
add
shrb
add
xorl
mov
lea
xor
ret
pop
jo
fisubrs
and
add
dec
sbb
mov
inc
cmpsl
sub
add
add
ret
push
in
sub
leave
add
lods
mov
pop
inc
mov
push
push
jnp
add
add
mov
cmp
add
or
lret
xor
add
add
std
shlb
add
add
add
mov
ljmp
daa
mov
cmp
mov
insl
sti
test
aad
add
add
push
arpl
jae
ficomps
cmpsb
stos
and
cmpsb
or
enter
fcompl
ljmp
lods
fs
mov
sub
out
jp
adc
mov
out
add
add
scas
imul
xchg
jnp
push
xadd
add
add
mov
lods
test
pop
or
or
or
add
add
adc
fmull
cli
inc
ljmp
mov
jbe
push
andb
gs
jb
imul
and
sahf
xchg
lods
outsb
adc
mov
aad
test
stc
dec
add
mov
mov
scas
sub
nop
std
icebp
mov
lcall
mov
mov
add
add
ds
push
sbb
insl
xor
mov
add
mov
jle
inc
mov
in
mov
mov
sti
xchg
popa
nop
sar
mov
pusha
add
add
lds
mov
xlat
mov
lcall
hlt
push
movsl
lods
sbb
and
add
add
xlat
cmpsb
cs
add
add
in
test
pop
cmp
add
add
loopne
out
pushf
int3
add
add
add
movswl
add
dec
add
add
adc
inc
mov
cwtl
std
and
daa
out
mov
enter
aaa
daa
jp
adc
add
add
repz
cmpsb
jae
popf
cwtl
pop
testl
add
add
ficomps
add
add
stos
mov
ror
sbb
pop
mov
and
nop
inc
xchg
jno
mov
in
je
mov
in
mov
adc
lcall
add
add
add
xchg
aaa
ret
add
shl
popf
into
sub
sahf
ja
out
sub
dec
mov
or
test
mov
or
xchg
aad
push
sbb
test
gs
dec
in
popf
cmp
dec
add
add
in
mov
cmpl
pop
xor
add
lea
fadd
in
and
add
xor
cs
icebp
arpl
push
push
dec
fcomp
lea
dec
mov
cmp
add
add
adc
cmpsb
jnp
decl
mov
bound
roll
add
add
lret
stc
addl
mov
push
repnz
cmpsl
js
mov
xor
jo
scas
jp
mov
les
add
fistpl
add
add
mov
cmpsb
pop
add
add
add
pop
movl
xlat
mov
sub
add
add
fwait
add
cwtl
lods
out
jg
ret
fwait
add
stos
push
andb
add
mov
cmc
xor
add
add
ds
push
ret
add
add
lods
push
aas
adc
rclb
fildll
add
xchg
cmpsb
sub
ret
mov
aaa
pop
jb
and
shlb
add
push
ljmp
mov
insb
add
add
and
add
add
test
clc
sub
mov
mov
in
xchg
or
push
mov
push
jl
push
rclb
add
mov
xor
and
orl
int
xchg
rorb
add
add
mov
add
add
dec
inc
push
push
fnsave
loope
pop
js
add
add
mov
mov
cmp
push
adc
add
dec
sbb
fildl
add
add
add
lock
popf
mov
outsl
cli
lea
cmp
inc
mov
lods
repnz
pop
or
icebp
dec
int3
sub
add
leave
ret
aas
fisubl
and
add
add
fbld
add
add
fsubl
test
pushf
scas
cmp
pushl
mov
push
adc
call
inc
and
cmpsl
addr16
add
stc
addl
fsubrp
push
repnz
add
add
jmp
loopne
or
rcl
cltd
inc
pop
jnp
add
add
add
inc
mov
aad
add
add
inc
fsubl
add
add
xor
test
xchg
push
inc
ret
arpl
bound
pop
rcll
and
xor
inc
ds
mov
and
push
jno
pop
repz
jns
out
mov
xor
aaa
mov
add
add
jno
jo
enter
xchg
loopne
sub
mov
xor
or
push
push
sbb
repnz
mov
push
hlt
pop
add
cmp
mulb
add
ja
int3
lahf
add
fsubr
movsl
rorl
fstpt
dec
lds
iret
fists
jo
cmc
fld
test
adc
ss
add
pop
fdivrs
fstpl
cmp
pop
rclb
xor
fsubrl
add
sub
mov
xchg
int3
roll
mov
lods
inc
psubq
aaa
aam
stos
test
rol
adc
inc
inc
mov
repnz
rorl
insl
in
ret
cmp
add
add
cmp
movsl
dec
outsb
popa
call
sbb
loope
adc
push
nop
xchg
mov
mov
mov
stc
mov
popf
int3
fdivrp
leave
push
js
sbb
sbb
xchg
xchg
incl
add
sahf
jge
loop
jnp
add
add
add
jbe
sbb
cmpsl
jbe
bound
push
dec
mov
adc
outsb
in
add
add
or
add
out
mov
xor
lahf
mov
add
mov
lahf
int3
jb
outsb
out
mov
add
add
iret
mov
add
add
push
sbb
and
add
add
add
xchg
mov
int
mov
add
cwtl
cmc
jnp
sub
inc
or
add
add
cmpsl
push
scas
adc
xchg
insb
add
add
lret
and
xchg
mov
jno
and
cmpsb
xlat
hlt
cmp
lret
arpl
sbb
add
add
fimuls
add
add
mov
data16
popf
push
xadd
add
add
decb
rcll
push
sub
scas
sete
je
mov
leave
popa
cmc
xor
xchg
orb
mov
mov
mov
mov
mov
ret
clc
sbb
orb
ljmp
add
add
lea
pop
add
add
push
ret
or
mov
mov
inc
shrl
cmp
imul
push
incl
add
sahf
and
add
add
jno
dec
jns
sarb
add
add
push
jmp
cli
jne
insb
add
add
int3
aam
add
add
xchg
in
cwtl
lea
jmp
movsb
xchg
pop
push
jecxz
cltd
dec
jne
push
add
mov
in
scas
mov
add
add
inc
mov
sarl
fadds
mov
add
add
insb
mov
or
clc
cli
shlb
push
lods
push
repnz
add
add
add
cmpsl
adc
xchg
mov
inc
mov
or
add
add
add
xor
sbb
adc
ss
push
sti
xchg
outsl
add
mov
mov
stc
in
cld
es
sbb
and
popa
mov
lcall
outsb
sahf
stc
pushf
mov
sbb
xor
lods
push
stos
sbb
jge
dec
in
icebp
add
jbe
and
add
add
add
push
or
xor
lock
idiv
sbb
xchg
insl
xchg
rorb
mov
inc
push
cmc
mov
dec
sbbl
ss
cli
cwtl
jmp
in
inc
add
add
scas
jle
subl
and
negl
xor
dec
xchg
pop
stos
sub
add
mov
cmp
xchg
and
add
add
mov
cmp
test
jge
push
andl
aad
out
mov
jle
mov
mov
adcb
jno
fs
mov
in
mov
inc
out
repz
add
add
add
push
cs
pop
leave
mov
add
decb
mov
cli
leave
andb
pop
jle,pn
inc
rcrl
push
lcall
and
add
add
push
pop
mov
insb
add
add
jp
pop
dec
mov
cmpsb
cli
dec
mov
inc
xchg
sbb
mov
add
push
pop
movsl
add
add
add
mov
cmp
mov
icebp
mov
jae
lcall
testl
push
movl
sbb
jnp
mov
lret
mov
dec
add
add
mov
fwait
jo
insl
sub
cltd
sbb
cltd
push
mov
add
mov
xorl
cmp
pop
leave
mov
lock
and
scas
and
push
push
and
sub
add
add
mov
add
push
push
mov
mov
add
mov
cli
mov
scas
sar
test
jp
mulb
xor
adc
sub
and
sbb
or
jb
cli
push
mov
mov
jg
mov
push
adc
add
add
lds
cltd
addb
add
add
mov
fists
mov
mov
sbb
push
adc
test
shrl
scas
in
stos
cmp
dec
add
add
xor
add
add
ret
xchg
pop
pop
leave
lods
gs
ror
inc
lock
or
push
xchg
jge
cmp
mov
push
lds
mov
dec
push
dec
pop
mov
or
add
add
nop
lahf
pop
scas
hlt
movsb
jo
fwait
inc
in
in
jecxz
sti
jge
in
cwtl
push
cmp
fwait
mov
add
add
push
push
jnp,pn
inc
mov
mov
sub
rcrl
cmpsb
jbe
stos
and
add
add
add
add
call
into
lret
dec
mov
dec
ljmp
stc
jg
das
push
iret
nop
das
clc
and
add
add
movsb
ret
and
add
add
into
outsl
pushf
shr
in
test
add
add
cs
test
es
sahf
cmp
leave
push
int
popa
fldenv
cltd
dec
jno
aad
mov
add
add
pop
sub
test
scas
and
insb
mov
jmp
adc
jle
add
add
call
add
add
ljmp
add
add
push
test
fcmovne
mov
adc
push
push
mov
dec
adc
push
sbb
xchg
mov
out
dec
add
add
lea
jp
out
pushf
sub
pop
faddl
mov
test
test
adc
and
sub
jns
mov
or
add
add
sub
sub
in
fwait
and
sti
mov
scas
inc
cmc
pop
mov
cmp
push
jl
fdivs
push
and
push
mov
push
cmc
lea
into
inc
mov
dec
pop
ret
gs
mov
movsl
pop
and
or
popf
sbb
add
dec
mov
add
add
stc
pushf
cli
adc
mov
imul
insl
bound
add
add
mov
gs
aaa
and
add
add
xor
scas
push
cli
pop
cmp
add
add
sarl
out
mov
icebp
dec
inc
rcl
insb
mov
mov
jno
stc
adc
cmp
push
in
dec
pop
mov
push
outsb
aaa
sarb
mov
push
pop
xor
std
out
xchg
mov
sti
movsb
lea
cmpsl
mov
add
add
add
std
and
add
add
pop
sub
pop
mov
add
add
movsl
rorb
add
push
mov
sub
aad
in
gs
cmp
rorw
add
icebp
mov
es
mov
ss
shrb
inc
lahf
pop
dec
dec
add
stc
cmp
mov
add
add
mov
jge
jle
push
add
xchg
mov
pop
mov
fstps
sti
mov
pushl
inc
add
inc
faddl
leave
xor
add
push
in
add
add
add
aam
repnz
popf
and
cmp
cwtl
arpl
repz
mov
add
add
jbe
scas
js
add
or
push
mov
jmp
outsl
add
add
out
cmp
aaa
frstor
push
jge
push
pop
loop
or
mov
popf
cmp
popa
mov
mov
out
mov
nop
xchg
loopne
push
pop
imul
mov
lock
xorl
pusha
add
add
sbb
aam
xor
xchg
add
add
xchg
pop
popa
mov
dec
mov
jmp
push
scas
out
pop
popa
enter
lods
push
jno
out
data16
sbb
cmc
fisubrs
stos
mov
inc
rcrl
adc
add
dec
out
scas
fcmovnbe
mov
aas
xchg
jno
inc
gs
mov
icebp
out
mov
and
inc
mov
mov
jo
inc
mov
or
orb
pop
fildll
sbb
add
cmp
push
push
lret
or
add
add
add
mov
out
sarl
lahf
mov
inc
mov
push
out
shll
movsb
lock
add
jp
xchg
rolb
std
movsl
lods
sub
add
add
jmp
push
adc
jmp
lock
pop
aas
test
clc
mov
pop
cmp
iret
loopne
stos
push
nop
in
rclb
pop
dec
sub
ja
out
movsl
push
xlat
jecxz
lret
and
add
add
mov
inc
iret
ja
loop
xchg
lahf
add
add
add
repz
jmp
jno
popf
in
imul
enter
mov
stc
pop
pop
mov
pop
xor
xor
fisubs
mov
push
dec
fimull
add
add
les
mov
clc
test
rcll
add
push
test
pop
repnz
add
add
cmp
dec
mov
xor
inc
cmc
or
mov
test
cwtl
sbb
xlat
pop
jns
push
out
pop
pop
add
add
add
xor
cmp
out
mov
dec
mov
push
push
push
mov
scas
dec
add
add
pusha
add
add
popf
add
xlat
cltd
add
decb
add
cmp
repnz
lcall
sub
add
fnstenv
mov
mov
adc
test
loope
lahf
mov
add
and
jmp
cmp
ret
add
add
mov
dec
xchg
push
dec
outsl
loop
lcall
cmc
jae
mov
je
dec
and
pop
in
fdivl
movsb
out
sbb
out
mov
lret
mov
pop
pop
inc
insl
ret
test
adc
clc
mov
jecxz
jno
sbb
mov
testb
add
adc
call
mov
mov
das
rolb
add
add
ror
shr
sbbb
add
add
daa
loopne
fnstcw
sub
xchg
xor
popa
ss
add
add
jb
notl
out
dec
cmp
jmp
cmp
add
add
add
out
shl
psraw
sti
xlat
sbb
dec
mov
enter
repnz
into
pop
ljmp
sarl
push
int
push
adc
outsb
xchg
loope
sbb
add
add
xchg
aad
mov
mov
ss
add
add
insb
mov
repnz
dec
insb
mov
sbb
dec
dec
sub
cwtl
inc
mov
and
ds
cwtl
adc
sub
add
add
push
test
mov
adc
fadds
out
inc
add
add
cwtl
push
dec
mov
jo
pop
push
mov
repnz
fnsave
add
add
add
sub
mov
and
add
add
add
add
movsb
mov
jno
pop
lcall
fisttps
out
movsb
xchg
or
mov
scas
leave
in
popa
mov
add
add
mov
test
lret
loopne
sub
ds
adc
addr16
push
jae
movsb
mov
add
add
and
rclb
repz
push
mov
xor
data16
shll
add
add
aad
xchg
stc
push
pop
call
add
add
add
cmpsl
mov
add
add
push
dec
add
add
jl
movsb
pop
ret
add
gs
dec
popa
rorb
iret
inc
das
add
sbb
fidivrs
jecxz
xor
push
pop
aad
ds
in
pop
lret
jge
mov
cwtl
sub
popf
lret
inc
enter
xor
cltd
les
jae
test
push
mov
int3
inc
sbb
add
xor
sub
add
pop
add
add
add
add
add
loopne
mov
add
add
ret
fsub
lods
fnstsw
shrl
mov
gs
add
add
in
dec
add
add
ss
ficompl
insb
add
add
out
loopne
or
mov
inc
sub
adc
push
sarb
xchg
adc
jp
mov
pop
scas
mov
ficoms
sti
int
gs
cmpsb
xchg
pushf
mov
ja
cmp
cmpsl
mov
mov
ror
test
shl
xor
lea
mov
cmp
mov
xor
mov
or
leave
push
cmpsb
fucomi
mov
aad
sarb
add
add
sti
mov
sub
add
add
xor
xor
dec
add
add
mov
dec
mov
dec
mov
cmp
leave
xchg
sbb
mov
out
push
mov
cmp
fsts
mov
add
add
sub
add
add
ror
cmp
mov
fdivrl
mov
lods
cmp
leave
sub
daa
insb
add
add
nop
clc
imul
lret
stc
xchg
rcrl
add
imul
aam
and
loope
or
stc
pop
xlat
adc
mov
sbbb
jl
push
inc
adcl
iret
mov
xchg
sahf
cmp
xchg
push
sbb
mov
sbb
mov
fstl
inc
sti
cmp
push
inc
cld
dec
in
stos
sbb
call
add
jmp
outsb
les
jge
or
mov
jne
dec
mov
add
add
enter
dec
add
add
jne
sahf
push
jle
sub
dec
add
add
daa
or
add
add
fnsave
mov
cmp
mov
jnp
int3
xor
clc
push
adc
out
test
iret
xchg
test
mov
pop
rolb
add
add
add
add
mov
push
pop
pop
push
sbb
lret
mov
pop
jp
mov
cwtl
cwtl
cmc
insl
adc
mov
add
mov
cmp
xchg
das
in
in
gs
dec
add
add
sbb
and
fiaddl
jle
test
cmp
pop
mov
fcoml
stos
xor
mov
in
add
add
aam
mov
cmc
outsb
cwtl
dec
add
add
xchg
movsb
dec
pop
inc
cmpl
pop
xchg
icebp
stos
notl
hlt
mov
shll
add
add
fnstcw
dec
rcr
jne
mov
add
add
mov
ret
add
add
add
add
popf
imul
cmpsl
and
test
and
and
ret
add
add
push
cmpsb
and
push
adc
lret
jp
rep
xchg
push
fldcw
mov
out
in
jle
les
add
add
mov
out
ds
mov
xor
xchg
sub
add
add
cltd
add
adc
cmp
add
add
sbb
mov
add
mov
sub
mov
add
add
add
add
leave
sub
pop
xor
sarl
mov
fwait
notb
jb
fdivrl
rcrl
cmp
sti
mov
sbb
push
in
mov
add
add
cmc
imul
xor
call
and
jnp
inc
movsl
movsb
adc
movsl
adc
mov
adc
mov
cmpl
mov
adc
fwait
mov
push
inc
add
add
or
add
add
pop
dec
mov
jmp
mov
imul
add
cmc
mov
cmp
pop
dec
add
add
add
and
hlt
test
push
jle
es
into
inc
out
add
or
cmp
inc
mov
call
add
jbe
push
pop
sub
mov
sub
cmc
aaa
loope
mov
jp
push
inc
mov
add
mov
xor
mov
popa
shl
inc
arpl
cmp
jae
popa
out
rcrb
add
add
add
mov
jg
cmp
movsb
sub
jae
mov
add
add
or
sub
add
add
cltd
fldt
mov
lods
push
or
pop
xor
add
lock
jg
add
add
add
stos
add
add
add
cld
mov
jo
rcrb
adc
xchg
fldl
xchg
push
jnp
sahf
or
sbb
aad
mov
push
cmp
lret
cli
sahf
ret
cld
adc
das
add
add
add
fcmovu
mov
or
mov
jb
mov
out
popf
dec
add
add
mov
add
cmp
mov
sub
fwait
mov
in
and
or
mov
and
cltd
cmpsl
stos
bound
push
sub
add
jns
jmp
mov
mov
stos
test
fisttpll
dec
dec
ljmp
test
cmp
add
add
add
fcomps
add
add
add
pop
dec
mov
cwtl
dec
int
bound
jge
sub
cmp
add
add
rcll
je
jae
mov
popa
cmc
movsl
adc
push
inc
lods
lret
inc
pop
imul
add
mov
shll
add
je
in
add
add
dec
adcl
add
pop
dec
jg
shll
leave
sbb
jmp
pop
inc
add
add
xchg
cld
insb
mov
add
add
cmp
jg
push
fstl
pop
pop
add
int3
rclb
mov
jns
add
add
es
jl
setle
arpl
add
add
lods
sub
cmp
in
xor
adc
dec
xchg
pop
dec
pop
scas
mov
add
add
stos
call
je
call
xor
sub
imul
inc
add
add
pop
cmp
xchg
aas
ficomps
sbb
sbbl
mov
add
mov
fcmove
out
add
add
rcr
jp
ds
cmp
xor
add
dec
mov
rolb
stos
lcall
mov
rcrb
xorl
cmovs
pushf
mov
mov
scas
mov
jmp
insl
lods
in
fnstsw
push
add
jmp
sbb
add
cmpsl
cld
jns
jae
dec
add
add
mov
or
pop
rcll
mov
mov
inc
mov
imul
add
cmc
fmul
mov
adc
scas
jne
xor
js
outsb
or
add
add
sahf
rcl
sarl
fidivs
aam
test
dec
mov
xchg
jle
sbbl
adc
cwtl
jg
push
xchg
sbb
fldenv
pop
jne
mov
add
add
add
jns
imul
stos
imul
test
sub
dec
pop
mov
dec
cld
cmc
bound
stc
adc
push
lods
mov
sbb
je
jecxz
scas
andb
add
add
add
arpl
sbb
les
add
sbb
sbb
jp
hlt
inc
dec
lods
lahf
outsl
xchg
je
adc
pushf
mov
aam
mov
ljmp
sub
add
add
lds
cwtl
data16
daa
int3
roll
xor
xchg
jo
jbe
aad
add
add
xor
pop
iret
cmp
loop
mov
add
add
jae
cmp
stc
fnsave
out
pushf
shr
lcall
int
jns
jnp
scas
or
cmc
push
dec
repnz
les
jo
jmp
jbe
int
pop
push
pushf
shl
pop
sahf
xor
lret
or
xchg
rol
or
in
or
mov
jo
dec
sbb
imul
xor
xchg
or
pop
leave
rcr
pop
jns
js
dec
mov
mov
sbb
and
add
add
ljmp
xchg
xlat
cmc
icebp
sub
add
add
mov
cs
xchg
dec
mov
push
gs
fstl
jle
adc
push
test
fwait
jp
mov
add
add
sbb
pop
cmc
es
push
test
inc
add
add
stc
jle
jge
pushf
popa
xor
sbb
mov
xor
jb
cmc
in
pop
mov
mov
add
xchg
inc
inc
loopne
jp
push
inc
push
decl
add
aaa
loope
mov
add
push
lock
mov
movsl
push
ds
and
add
add
jbe
pop
dec
clc
sub
cmpsb
mov
inc
sub
in
sarl
enter
add
mov
jbe
or
or
sub
mov
push
mov
fcomps
sbb
jo
xchg
mov
add
add
shll
jbe
rcrl
mov
sub
movb
imulb
fs
jge
movsb
js
jae
add
add
add
xchg
arpl
add
add
mov
test
cmp
and
xchg
push
mov
cli
xor
jge
dec
rorb
sbb
cli
into
loopne
shl
aaa
pop
ret
filds
add
add
inc
mov
push
mov
pushf
mov
add
in
fnstcw
iret
sub
add
add
sbb
add
and
add
add
dec
int
scas
lcall
push
push
shlb
add
add
dec
sub
mov
test
sub
add
add
scas
jnp
clc
cmp
out
icebp
mov
and
add
add
mov
inc
xor
fistpl
sahf
adc
add
rorl
add
mov
sbb
cmp
push
mov
pop
sarb
inc
add
add
mov
mov
pop
hlt
cld
mov
mov
jae
or
add
add
das
push
jnp
les
adc
movl
aam
pop
inc
mov
cmc
or
mov
mov
cmpsl
adc
lea
mov
es
dec
push
loop
pusha
add
add
repz
xlat
int
out
pop
mov
xchg
mov
in
dec
cwtl
icebp
call
icebp
daa
outsb
aam
xchg
xchg
inc
jmp
add
cmp
xor
push
insb
add
add
dec
cs
push
popf
dec
push
cmpsl
sbb
add
sbb
testb
xor
stc
inc
mov
dec
cs
lcall
inc
jne
sbb
xor
sub
das
out
xlat
jno
dec
push
out
sbb
sbb
outsb
fbld
adc
movsl
ja
add
add
adc
lahf
push
push
ljmp
dec
sbb
divl
lret
dec
js
mov
jnp
mov
roll
mul
push
rorb
push
popa
nop
jbe
lea
fnstenv
out
cmp
or
add
add
out
orl
inc
movsl
and
jecxz
jl
mov
rolb
adc
test
add
add
adc
adc
cmpsl
mov
std
or
fstpt
shlb
mov
test
imulb
movsl
repnz
adc
dec
xchg
push
cmp
inc
mov
push
mov
mov
inc
mov
cmp
pop
push
adc
xor
fwait
stc
or
add
ljmp
out
lods
lcall
or
add
ficompl
dec
add
add
jg
dec
mov
test
in
out
jne
or
add
add
lds
jnp
je
sbb
add
mov
cmpsl
xor
or
add
jno
adc
or
add
add
cmp
mov
inc
mov
lods
int3
stc
xor
fs
mov
leave
ja
mov
xor
cwtl
jae
push
mov
add
add
std
or
dec
xchg
push
cld
shlb
lret
xor
cmp
pop
cmp
add
icebp
clc
shlb
incl
cltd
pop
xchg
dec
pop
js
imul
jno
stos
pop
in
push
cmpsb
xor
bound
or
iret
ds
out
rcrb
fcoml
lea
add
add
jb
mov
fildl
add
add
pop
rep
popa
pusha
mov
icebp
add
mov
mov
addr16
xor
test
mov
dec
sbb
add
add
lock
add
add
in
es
dec
jb
add
add
shlb
pop
orb
add
in
shr
mov
cmc
cmp
ss
ficompl
into
leave
lods
or
mov
flds
in
mov
repnz
ret
out
js
sahf
clc
test
add
dec
mov
or
mov
xchg
int3
mov
dec
jg
leave
inc
sub
jne
cmp
or
int
ds
test
mov
mov
add
add
in
pop
xchg
mov
popa
cwtl
in
pop
aam
cmc
call
sbb
xchg
mov
aaa
es
add
add
jbe
push
xor
mov
jnp
ljmp
lods
xor
fwait
imul
or
push
xchg
and
jecxz
imul
test
add
pop
mov
xchg
loop
inc
cmp
aaa
pop
xchg
push
pop
inc
cmp
test
pop
ljmp
mov
leave
aad
mov
mov
sbb
adc
lds
cltd
nop
xchg
icebp
call
add
add
mov
subb
add
out
in
xor
mov
popf
jp
mov
inc
add
add
mov
adc
ds
aad
or
xlat
push
jp
or
add
add
cmc
mov
adc
push
int3
pop
inc
mov
pop
pop
ljmp
add
add
add
adc
mov
shrd
imul
xchg
lahf
sbb
xchg
push
lods
cmp
roll
mov
mov
shll
add
add
jg
dec
les
mov
jmp
mov
add
fs
jge
mov
scas
mov
add
aad
std
dec
mov
movsl
test
lods
pusha
mov
mov
daa
pop
mov
stc
lret
pop
or
add
data16
add
int3
xchg
shll
leave
push
lods
stos
stos
or
pop
orl
jmp
out
jns
xchg
xchg
in
fnstenv
push
cs
pop
sahf
xlat
sbb
fldcw
pop
dec
xor
cld
mov
mov
mov
jne
cmp
cld
lret
fimull
add
add
add
mov
mov
cmp
push
and
add
add
add
es
mov
and
in
xchg
test
xor
push
ja
sbb
test
mov
inc
mov
popf
int
and
add
cld
or
add
repnz
scas
jge
movsb
je
fsubrl
add
add
mov
and
pop
mov
xchg
std
cmp
dec
addr16
enter
cltd
fsubrp
push
dec
loop
outsb
sahf
gs
adc
fcmove
xchg
inc
jg
push
into
hlt
std
add
jno
fcmovnb
or
lods
pop
ret
xchg
cmpsl
fucomip
stc
into
lods
enter
dec
jnp
rcrl
dec
mov
test
and
movsl
pop
pop
fistps
add
add
add
mov
inc
lods
movsb
push
repz
sub
ficompl
push
aad
std
sub
sub
add
add
pushf
loope
xor
add
add
sbb
pop
lret
fmul
push
gs
stos
mov
iret
enter
xor
mov
dec
sbb
sbb
pusha
add
add
lret
movsl
jae
ds
dec
jge
call
xchg
cmp
std
gs
dec
mov
ljmp
out
cmp
pop
jmp
lahf
fcomp
and
pop
orl
add
add
add
add
repz
stc
pop
and
add
add
lock
outsl
outsl
jmp
push
imul
add
mov
push
fldenv
leave
dec
sbb
and
adc
in
jg
jo
pop
gs
pop
ss
mov
jge
dec
push
movsl
je
lea
aad
xchg
outsl
push
stos
movsl
jb
hlt
std
xlat
leave
stos
mov
arpl
test
fsts
lds
jb
fiadds
sbb
xor
jle
jg
add
add
add
mov
mov
cli
aaa
stos
push
sub
icebp
jge
push
push
mov
in
jnp
xchg
mov
ret
cmpsl
ja
orb
add
add
pop
dec
sub
fists
xorl
mov
fdiv
mov
sahf
and
add
add
jmp
pop
das
cmp
add
add
fucomi
jecxz
add
add
push
aam
inc
lods
xor
push
mov
mov
add
add
int
xchg
pop
scas
mov
lock
sub
add
add
mov
cs
out
repnz
adc
cmp
xor
clc
mov
mov
xchg
fstp
cmpb
push
in
int3
mov
add
add
std
inc
pop
or
add
repnz
add
add
ja
dec
pushf
test
mov
mov
aad
lret
sbb
push
ret
daa
jle
add
add
add
int
dec
push
test
push
inc
jno
mov
inc
lods
sarl
sbbb
fdivrp
dec
add
add
mov
cld
xor
mov
mov
iret
iret
cmp
and
sub
jmp
lahf
pop
cmp
sbbb
test
jbe
fxtract
adc
mov
incl
adc
or
add
add
cmp
mov
sub
push
mov
test
add
add
xchg
mov
bound
mov
stos
js
jnp
jmp
lods
iret
add
es
nop
loope
clc
ds
jnp
outsb
pop
fs
or
push
adc
dec
mov
insl
test
xchg
rcll
jo
jae
and
cmpsl
push
daa
int3
lahf
rclb
mov
repz
push
sbb
push
fisubs
add
add
add
imull
loopne
jmp
sub
add
add
int
ja
mov
or
add
add
fisubrs
xchg
jbe
mov
jne
lret
lods
lret
mov
aaa
cli
lret
gs
or
add
add
mov
loopne
cwtl
dec
dec
ljmp
mov
loope
add
add
xchg
out
add
add
add
cmp
arpl
mov
add
jp
adc
test
int
ret
lods
test
cmpsl
jbe
adc
jle
dec
arpl
mov
sub
add
add
aas
cwtl
jo
xchg
jg
lret
push
popf
jnp
lret
or
mov
cmp
and
add
add
add
add
jp
push
push
in
dec
nop
fcom
sbb
stc
jbe
sbb
fsubrl
repnz
add
add
in
or
add
add
outsl
popf
in
xchg
daa
cwtl
addb
add
add
in
add
mov
mov
cwtl
lahf
jne
pushf
test
imul
add
fistps
pop
jno
jmp
insb
add
add
sub
mov
cmc
leave
mov
jle
lret
add
add
jle
aas
in
sbb
sbbl
sarl
lea
xchg
cmp
push
idivl
flds
js
mov
das
imul
add
and
add
push
test
imul
std
adc
jns
xor
imul
mov
xchg
push
sbb
popf
mov
add
add
add
dec
xor
cmp
imul
imul
lods
adc
cmc
mov
push
and
add
add
cld
loopne
mov
js
ret
int3
mov
stos
dec
mov
int
adc
in
stos
add
cmp
sub
add
add
add
pushf
inc
test
andb
bound
xorl
mov
pop
jmp
mov
cmp
mov
in
das
mov
ds
jp
stc
aad
mov
xchg
pop
daa
not
or
add
inc
sub
add
add
into
imul
filds
dec
lea
mov
xchg
ret
add
add
popf
test
jmp
gs
dec
shll
sub
and
add
cmp
add
sub
or
push
jge
hlt
xor
add
add
adc
nop
xlat
test
xor
pop
loopne
addr16
std
cmp
add
inc
dec
xor
push
les
mov
inc
add
add
cmpsb
sub
add
add
add
add
adc
xor
scas
sarl
and
add
add
inc
flds
xchg
addr16
ret
jno
adc
je
lret
aaa
pop
dec
daa
jns
pusha
mov
fwait
jo
pusha
add
add
inc
cmp
jg
mov
sub
xor
mov
lods
mov
repz
mov
add
add
aad
add
add
add
fcmovnu
pop
adc
push
std
and
mov
or
add
fisubl
or
add
add
add
cli
push
jnp
and
add
add
jl
xor
add
into
fucomi
aas
xor
cmpsb
adc
sbb
xchg
mov
mov
cmpsb
repnz
push
jmp
loopne
jb
inc
push
lea
or
adc
fbstp
vcvtps2dq
mov
and
rcrl
cmp
and
add
add
ret
push
mov
jecxz
jmp
bound
add
add
sub
sub
add
add
jb
out
mov
dec
add
add
addb
lea
jle
cmpl
lret
es
sub
add
add
lds
shlb
add
mov
pop
fisttps
inc
cs
mov
mov
rclb
frndint
outsl
out
ficoml
nop
and
add
das
xchg
add
pop
fwait
cltd
xchg
cmp
call
add
add
lds
fwait
push
jp
lods
lret
xchg
adc
dec
fmul
in
adc
repz
push
sub
push
sub
jo
scas
inc
js
sub
cmp
jo
pop
jp
mov
push
lret
or
add
add
push
loop
in
test
sbb
gs
adc
out
adc
pushl
stos
fidivrs
add
mov
mov
out
mov
pop
inc
cwtl
cmp
scas
cli
pop
push
adc
dec
mov
out
mov
jmp
xor
je
bound
xchg
int
mov
nop
lds
inc
orl
add
add
mov
lret
or
mov
lahf
sbb
out
out
cmpl
subb
into
cmpsl
dec
mov
sahf
fdivrs
out
xchg
push
popf
push
repnz
add
add
insl
pop
mov
xor
sbb
fnstcw
mov
and
add
add
arpl
xchg
cs
notl
dec
bound
jbe
push
fdivp
sti
call
adc
frstor
push
cltd
int3
xor
clc
ret
out
jo
and
testl
add
push
xchg
sub
add
mov
ja
add
add
iret
sti
negl
mov
or
add
add
cs
cmpsb
pushf
sub
push
inc
inc
adc
outsl
icebp
xchg
jg
ljmp
or
push
out
jle
inc
pop
scas
hlt
mov
enter
ds
loop
mov
add
add
and
add
add
dec
sbb
add
xlat
xchg
add
in
imul
fisttps
imul
insl
add
add
add
inc
fs
std
pop
xor
clc
repz
jle
mov
jbe
mov
pop
cmp
adc
fdivrl
mov
xor
sbb
aas
add
or
add
add
imul
ljmp
cmpsb
popf
cmpsb
pop
xor
xor
add
jns
icebp
daa
icebp
insb
add
add
push
lds
jmp
loop
inc
and
pop
push
add
add
add
and
pop
mov
fsubrp
ret
add
add
in
popf
jg
dec
add
add
xchg
in
pop
push
movsl
mov
lret
xchg
and
add
js
or
add
add
add
lret
adc
jbe
mov
add
add
lret
dec
mov
inc
add
add
or
movsl
mov
lcall
add
add
mov
and
add
add
repnz
aad
jbe
scas
lret
pop
clc
pop
cmp
push
andb
aaa
add
mov
add
add
xor
push
scas
mov
hlt
cmp
inc
rorl
add
add
jle
sub
add
add
push
mov
add
mov
fsubrs
xchg
inc
mov
or
add
add
out
je
pop
mov
insb
mov
sbb
ljmp
add
sldt
add
add
shll
add
add
add
add
pop
push
jecxz
inc
and
xor
aas
sub
add
add
fisubl
add
mov
int
fmull
sub
add
add
test
aaa
mov
sbb
mov
movsl
jp
stc
mov
adc
or
add
add
sbb
rorl
add
loopne
or
fsubl
add
mov
sbb
jb
add
add
mov
add
mov
sarl
adcl
in
iret
cli
in
pop
ret
jecxz
mov
mov
imul
dec
add
add
divb
mov
or
add
add
inc
xchg
add
ret
jecxz
cmp
add
xchg
pop
outsb
pusha
mov
mov
add
mov
mov
loopne
add
add
jmp
mov
ret
popf
out
xor
jmp
cltd
fstps
mov
jl
mov
loope
inc
add
add
lahf
push
or
add
add
inc
cmp
xor
sbb
fstps
add
sub
add
add
aas
and
jb
jns
jae
lahf
adc
xchg
iret
fidivs
ljmp
les
mov
nop
je
outsl
sbb
movsl
fdivs
dec
xchg
add
mov
jno
push
inc
mov
push
add
and
mov
push
divb
aam
test
int
inc
adc
add
xchg
in
lcall
lods
dec
add
add
int
add
add
jnp
mov
enter
pop
lret
cmc
dec
sub
jmp
mov
mov
add
add
sub
mov
pop
es
inc
push
test
jnp
in
cmp
add
add
mov
negl
push
lds
inc
add
add
out
mov
mov
in
jo
xchg
pop
pushfw
and
add
add
push
sub
add
add
mov
add
add
mov
pop
daa
mov
jns
push
sub
addr16
mov
in
dec
dec
flds
xor
adc
jp
lahf
add
std
ret
out
js
in
bound
mov
or
cmp
sub
xchg
std
jmp
out
add
xchg
ja
dec
inc
jo
repz
mov
inc
add
add
and
out
not
cmp
pop
sahf
movsb
jo
mov
cmpsb
loope
in
mov
mov
mov
pop
mov
push
fiadds
add
imul
mov
out
dec
add
add
mov
mov
add
add
add
mov
push
enter
aad
test
jb
or
mov
push
sub
mov
add
dec
adc
mov
movsb
pop
roll
add
add
rolb
inc
mov
sub
add
add
icebp
xor
lods
aas
cmp
sti
in
fmul
xlat
push
lods
test
mov
add
add
xor
dec
shr
ret
enter
out
movsl
inc
mov
jno
in
leave
andb
add
add
sbb
push
stos
jo
call
add
das
popf
pushf
scas
cmpsb
xchg
or
add
add
pusha
add
add
pop
mov
add
ja
test
rcl
rol
stc
mov
in
mov
sbb
dec
xchg
mov
jae
sub
jle
ss
es
dec
in
fs
loopne
adc
shlb
clc
fwait
sbb
and
add
rolb
add
test
mov
mov
mov
lret
lock
call
add
dec
push
dec
mov
es
cmp
cmp
sub
loopne
out
cwtl
xor
add
add
xchg
scas
or
push
bound
add
add
lret
cmpsb
mov
inc
loope
popf
js
add
add
dec
jge
jp
inc
add
add
lods
mov
jne
sub
add
add
fisubs
dec
xchg
and
cmc
out
jg
cmpsb
push
ds
sti
push
fs
rcrb
frstor
add
or
add
add
xchg
negl
add
mov
orl
sub
push
mov
mov
add
push
std
jo
jl
xchg
scas
or
movsl
mov
dec
push
int3
pushf
jo
rcrb
dec
fildl
pop
lret
push
jns
sub
jmp
adc
add
add
sub
add
add
mov
mov
mov
dec
jbe
lea
pop
inc
add
add
mov
movsb
stc
xchg
xchg
add
sbb
or
inc
and
add
add
or
add
add
add
add
js
leave
mov
sbb
testl
xchg
push
jne
pop
adcl
je
mov
add
aas
dec
mov
out
stos
rcl
outsb
pop
jns
sub
add
add
pinsrw
pop
sub
arpl
xchg
inc
add
add
or
add
add
add
add
add
add
idivl
xchg
lds
add
hlt
mov
xchg
jle
mov
add
add
xchg
or
enter
pop
insb
mov
fsubl
sti
out
cmp
jecxz
push
sub
xor
xchg
and
push
push
dec
out
cmp
add
mov
jecxz
sbb
add
add
add
and
sub
sahf
loopne
fs
push
lods
movsl
movsb
mul
push
fidivs
mov
adc
add
add
xchg
addr16
jl
ja
mov
add
xchg
pusha
add
add
adc
xor
scas
lods
cmpsl
sub
add
add
cmc
loope
xor
sbb
dec
add
add
scas
sbb
xor
jge
fisttpl
sbb
mov
jecxz
popa
pop
lods
jp
adc
and
cmc
ljmp
inc
jne
es
jg
xor
les
mov
mov
jns
dec
andl
jb
adc
add
add
pushl
inc
add
add
jge
add
add
cmc
jne
arpl
ds
icebp
ret
sub
mov
or
add
add
lea
mov
xchg
adc
sub
in
and
or
or
into
pop
icebp
std
sub
push
add
mov
or
jge
orl
adcl
adc
add
stos
frstor
cwtl
das
fcmovnu
fisubl
add
pop
ljmp
dec
mov
xor
test
dec
call
inc
mov
loope
add
add
add
daa
roll
pop
sbb
cs
dec
sub
int3
ret
shlb
push
jnp
incl
add
xchg
outsl
sub
cmp
sub
add
add
sbb
and
sub
pop
insb
add
add
inc
xchg
fsts
lea
add
add
jle
mov
out
iret
das
int3
test
add
into
and
add
add
mov
addl
sarl
add
nop
mov
mov
jle
mov
jecxz
gs
imul
add
add
mov
add
add
stos
sahf
xchg
mov
test
iret
mov
push
mov
push
daa
hlt
add
cmc
xor
add
add
mov
add
cmpsb
sub
sbb
call
cmp
movsl
loopne
sub
cs
out
mov
cmp
inc
add
add
mov
add
add
in
adc
add
fstl
fisubrs
cwtl
dec
fsub
push
je
ret
mov
dec
sbb
xchg
mov
adc
xor
aas
push
inc
jnp
push
aam
mov
jo
aaa
shl
adc
cmp
xchg
mov
xor
imul
and
lds
add
add
mov
and
lcall
lods
imul
sub
add
fsubrl
xor
fmul
imul
xchg
ljmp
dec
fisttpll
add
add
mov
mov
jecxz
add
add
mov
in
xor
sbb
sti
xor
lret
pop
dec
adc
scas
fcoml
sbb
sub
add
add
add
add
out
mov
xchg
jecxz
inc
add
add
xor
sarb
out
xor
push
lds
jbe
out
dec
push
push
ja
sub
mov
test
fisttpl
pop
mov
mov
inc
arpl
mov
loope
pop
sub
add
add
fcoms
jmp
and
ja
xchg
das
mov
fimull
xchg
mov
ror
mov
push
mov
add
mov
ret
ret
out
dec
mov
and
test
jge
out
dec
icebp
cmp
add
jmp
push
xchg
popf
pop
cmpsb
add
add
add
jbe
es
imul
jg
gs
mov
and
cmp
dec
enter
pop
push
pushf
jmp
add
inc
in
pop
sbb
pop
mov
xor
xchg
jno
jb
mov
push
js
pop
ss
add
add
sbb
add
add
fistps
mov
in
add
add
mov
fnstsw
pop
jl
pop
daa
cmp
inc
mov
jbe
out
xchg
jnp
out
inc
and
dec
adc
cmc
mov
dec
inc
mov
add
adc
les
mov
das
das
imul
add
add
insb
add
add
fbstp
add
pop
fistpl
inc
pop
inc
mov
push
out
cmp
sub
add
fisubrs
int
adc
or
inc
das
in
adc
in
std
les
mov
repz
add
add
add
add
xchg
mov
inc
inc
mov
add
pop
jl
faddl
add
add
xchg
lods
std
lds
jle
cltd
lcall
push
sarl
xchg
xorb
fucomip
fnsave
inc
cmp
dec
add
add
or
cli
pop
aam
lods
jmp
mov
add
add
loope
xchg
lcall
mov
dec
dec
pop
ja
add
add
push
lcall
int
push
insb
mov
arpl
or
add
add
add
mov
inc
add
add
jnp
sub
adc
shll
aam
jnp
lret
pop
mov
mov
cmp
add
xor
mov
add
add
sub
add
add
add
popf
ret
dec
in
test
xor
mov
xor
insb
add
add
add
es
decb
sub
add
add
cwtl
daa
lahf
cmp
mov
sub
int
push
repnz
mov
bound
mov
mov
add
add
push
shlb
inc
out
cltd
aas
je
sub
add
add
cmp
mov
rcll
adc
xor
cmp
add
add
test
cmc
inc
sbb
dec
sub
mov
mov
addr16
outsl
fdivs
xor
cmp
or
add
add
ret
sbb
movsl
sbb
xor
add
add
repnz
scas
cmpsl
jbe
or
jne
hlt
popf
dec
add
add
test
lret
out
movsb
repz
mov
pop
cmp
pop
push
mov
or
add
add
mov
and
mov
and
add
add
aam
sbb
dec
xchg
lret
fldenv
out
sub
mov
je
scas
mov
add
add
icebp
jbe
enter
dec
movsb
mov
dec
pushf
les
and
and
lock
jg
push
movsl
and
sti
imul
pop
stos
mov
pusha
mov
out
stc
add
mov
push
and
add
add
addl
add
or
add
add
call
cmp
inc
mov
xchg
mov
shll
add
pop
xchg
fs
add
add
add
jge
mov
xor
xor
dec
clc
jb
mov
sbbl
sbb
imul
xchg
jnp
dec
add
add
sbb
lahf
nop
cmp
push
sub
sub
ds
push
mov
movsb
ja
add
add
jb
pop
mov
cmp
dec
add
add
lock
and
add
add
adc
mov
add
add
cmp
dec
push
mov
out
arpl
push
dec
mov
shr
pop
mov
add
add
add
roll
aas
ljmp
cmpb
scas
cmp
adc
mov
popa
data16
push
call
push
jl
aam
loopne
ds
js
vcomiss
add
add
and
mov
xchg
add
push
push
in
add
add
push
repnz
leave
sarb
scas
push
lods
jne
mov
ja
ss
add
add
add
fidivl
adc
test
mov
jle
sub
xchg
test
mov
subl
inc
add
add
call
pop
pop
xchg
pop
xchg
sbb
add
add
xchg
insb
mov
mov
lcall
ds
iret
out
or
add
add
dec
push
xor
sbb
das
mov
iret
test
add
inc
add
add
fisubs
cs
jnp
rorl
mov
test
push
push
mov
mov
icebp
test
and
or
add
add
cwtl
in
fptan
pop
xor
das
inc
jge
inc
mov
adc
jno
inc
pop
pushf
fstps
add
add
adc
repnz
add
add
xchg
mov
pop
cmp
add
cmp
inc
mov
push
shl
push
mov
mov
ret
add
add
inc
pop
inc
add
add
ret
mov
cmp
popf
xchg
pop
lock
push
fnstenv
push
test
push
cmp
in
cmp
mov
xchg
or
add
add
and
test
aam
add
add
add
popa
mov
or
add
add
dec
mov
add
push
bound
or
xchg
xchg
call
mov
es
add
add
add
add
into
js
mov
add
cmp
pop
in
data16
enter
or
xchg
xor
adc
das
lods
repnz
in
hlt
jle
pop
mov
mov
xchg
icebp
add
loope
add
add
movsl
adc
cs
sbb
push
push
int
push
cltd
lret
xor
jb
shrl
mov
add
add
insb
add
add
mov
and
add
out
sbb
arpl
add
add
adc
ds
movsl
inc
cmp
dec
mov
js
jle
sub
cmp
pop
out
sahf
cmpsb
ret
mov
dec
aas
xchg
popf
inc
add
add
inc
in
add
add
and
add
add
in
mov
add
pop
or
pushf
inc
jmp
scas
dec
std
sahf
cs
cmp
dec
add
add
mov
adc
push
loop
inc
mov
les
stos
outsl
insl
loopne
call
lret
sub
add
add
sbb
outsb
sbb
push
xor
dec
pop
insl
sub
cmp
push
dec
mov
fs
pop
das
pusha
add
add
pop
mov
test
add
lret
dec
shl
xchg
imul
jecxz
fs
adc
and
pushf
lods
addb
add
add
xorl
add
add
pop
lahf
add
add
add
in
outsb
jge
sbb
mov
stos
dec
dec
mov
mov
outsb
int
mov
mov
jae
mov
pop
mov
out
add
add
add
add
add
adc
dec
add
add
inc
add
add
out
cmp
mov
mov
aam
icebp
stc
xor
je
inc
mov
jge
test
mov
mov
dec
jno
aas
fmull
inc
xchg
add
cs
jae
mov
add
add
push
mov
sbb
and
push
pushf
push
sub
add
add
adc
dec
shl
cltd
cmp
add
or
add
add
out
add
add
sbb
data16
push
xor
int3
mov
adc
add
xchg
inc
xchg
adc
out
insl
cmpsb
mov
scas
les
pushl
inc
add
add
lea
test
cwtl
je,pt
add
add
aas
sub
jbe
fldcw
mull
add
hlt
es
add
add
adc
pusha
add
add
repnz
sub
lcall
add
dec
sahf
std
adc
mov
mov
lahf
hlt
jno
inc
das
nop
dec
outsb
dec
addr16
testb
add
lods
jmp
decl
add
add
sbb
out
push
ljmp
stos
lret
add
add
add
je
test
sbb
xor
mov
fmull
xchg
xor
mov
push
imul
sbb
pop
mov
dec
pop
inc
xchg
fcoms
sbb
sti
jae
pushf
jg
mov
inc
add
add
and
add
add
cli
enter
mov
mov
xor
in
andl
int3
fs
in
cmp
nop
adc
in
arpl
mov
push
jp
mov
jne
fcomps
sub
add
cmpsl
arpl
xor
imul
and
push
sbb
adc
pop
mov
test
adcl
imul
pop
mov
push
orl
push
movsl
push
int
xor
and
cmp
mov
subl
mov
add
adc
add
fmul
and
bswap
adc
mov
mov
movsl
test
mov
jp
jp
xchg
push
lods
fnstsw
push
icebp
push
xchg
pop
rol
into
dec
mov
dec
lahf
and
push
sub
add
add
sbb
pusha
mov
out
xor
add
add
sarl
mov
jp
push
mov
pop
rcrl
repnz
aad
mov
data16
or
dec
add
add
push
xor
test
ret
xor
inc
or
in
mov
cld
cmpsl
push
ja
add
add
sub
out
adc
or
xlat
aaa
push
fucomip
jmp
rcr
in
pop
cltd
lret
dec
lods
mull
pop
jmp
mov
push
push
xchg
insl
dec
mov
adc
push
cmc
xchg
xor
dec
push
jns
mov
cmp
add
add
jecxz
sub
add
add
pusha
add
add
sub
mov
dec
in
sub
add
add
test
add
add
add
jns
mov
add
add
outsl
lods
jo
iret
push
adc
sbb
icebp
outsl
arpl
jo
or
call
add
add
xor
pop
push
mov
pusha
mov
push
js
pushf
lahf
test
stc
mov
add
add
fwait
subl
xor
and
add
add
push
jecxz,pt
cmp
mov
lock
sbb
sbb
je
xor
add
xor
sub
jno
cwtl
dec
mov
sub
xchg
inc
cmpb
or
add
add
dec
and
notb
mov
inc
or
add
add
inc
jnp
into
pop
cmp
add
add
mov
dec
popf
mov
leave
test
mov
icebp
add
add
add
mov
dec
dec
jbe
dec
mov
scas
xor
mov
adc
stc
std
mov
inc
leave
lret
ljmp
mov
test
pop
jl
mov
stc
cmpsb
sbb
aam
int
lods
adcb
gs
inc
in
cltd
push
inc
add
add
cmp
xchg
and
add
add
and
add
sti
mov
add
fwait
mov
ja
jb
je
pop
xchg
jns
push
mov
data16
inc
aas
xor
mov
mov
movsl
push
push
test
add
add
cmpsb
int3
daa
dec
in
push
mov
jae
add
add
insb
mov
and
cli
jmp
inc
jo
es
and
mov
lret
pop
leave
push
push
or
add
add
pushf
fisubl
jge
imul
gs
jge
push
pop
inc
mov
fnstcw
add
xor
push
mov
mov
add
add
xor
inc
add
lds
push
jmp
jbe
test
stc
mov
mov
cmp
mov
push
xchg
popf
lds
sub
jnp
push
addr16
fidivrl
mov
inc
jmp
push
xchg
adc
lcall
add
add
inc
mov
shlb
mov
add
lcall
stos
mov
xor
dec
add
add
mov
jmp
jg
or
imul
cwtl
pop
sub
in
rolb
pop
test
add
jg
lods
fdiv
out
sub
or
aas
mov
jge
call
sub
subl
or
add
add
inc
add
add
rcr
mov
pop
out
dec
dec
jns
lds
mov
jne
push
or
mov
ljmp
jae
adc
stos
iret
fucomp
es
jno
pop
add
add
add
pop
lea
mov
and
adc
out
adc
add
add
xor
add
js
shlb
out
pop
stos
mov
add
add
ljmp
filds
popa
xchg
mov
icebp
sbb
mov
mov
nop
mov
pusha
add
add
jecxz
xchg
popa
xchg
push
loop
sub
add
add
dec
mov
mov
jns
sbb
xor
adc
and
cmpsb
cli
dec
test
jl
insl
stos
jb
fiaddl
mov
lock
cmpsb
out
xchg
pop
dec
cmpsl
add
add
add
test
add
cmc
mov
sbb
mov
stc
xchg
mov
add
add
push
cwtl
aas
sub
roll
loop
outsl
js
stc
sbb
add
mov
mov
pusha
add
add
subl
add
sub
js
push
xchg
cmp
sbb
xchg
movsb
loop
push
mov
mulb
cltd
pop
aad
addb
xchg
sub
shll
jae
cwtl
push
xor
in
arpl
adc
rcrb
scas
cli
dec
xor
test
sub
add
add
add
add
repz
add
add
mov
mov
aaa
iret
and
stc
mov
lcall
ret
push
js
mov
int3
addr16
mov
and
mov
repz
add
in
jae
aam
sbb
mov
mov
push
mov
out
xlat
jmp
inc
frstor
ret
xor
shlb
add
add
scas
rcrb
fbstp
mov
and
add
add
mov
push
les
dec
mov
add
add
out
dec
out
mov
add
add
adc
add
add
mov
inc
add
add
and
add
add
insl
sub
cmp
ret
out
push
cmp
das
add
add
add
bound
lret
sti
add
push
mov
scas
scas
xchg
mov
dec
pop
mov
add
sbb
jle
mov
lahf
xor
leave
out
add
add
add
cli
xor
popf
jp
in
divl
jecxz
sbb
or
add
add
push
lret
std
cld
adc
stos
andl
mov
loop
add
adc
sbb
out
sarl
push
pop
repz
sbb
push
adcl
loop
mov
add
xchg
mov
iret
xor
jmp
and
add
fisubs
add
add
sub
add
xor
add
add
and
hlt
jnp
sarl
add
add
add
push
iret
jb
push
push
mov
sub
add
add
mov
fsubrl
ljmp
cmp
scas
sub
add
add
movsb
xlat
pop
mov
in
int
mov
add
lret
push
xor
xor
add
add
mov
dec
or
add
add
push
or
and
inc
lods
add
add
stos
pop
dec
add
add
enter
aaa
mov
add
push
inc
fcmovnb
rorb
push
mov
add
add
adc
xor
sbb
call
dec
cmc
inc
xchg
sbb
stc
mov
sti
inc
repz
cmp
fucom
sub
cmpb
sbb
add
sbb
aaa
lret
out
xchg
aad
inc
add
adc
in
sub
cwtl
cmp
stc
mov
out
cs
adc
mov
inc
add
add
push
mov
add
add
jnp
dec
adc
pop
icebp
jg
cld
test
sub
add
add
jp
add
add
in
shr
xchg
or
add
sti
inc
adc
es
sahf
pop
insl
xchg
test
and
dec
arpl
mov
sbb
cmp
and
dec
mov
add
add
jo
xchg
mov
adc
into
or
sbb
lcall
loope
xor
add
add
faddp
sub
add
add
sbbb
add
add
fsubl
add
add
out
dec
mov
add
xor
add
add
ljmp
stos
cmp
nop
hlt
cmp
and
dec
xor
ret
inc
inc
jno
mov
add
lret
and
sub
add
add
pop
dec
into
stos
mov
fcoml
add
stos
pushf
das
pop
adc
rolb
out
sub
add
dec
add
add
sub
cmpsl
cli
bound
add
add
add
fisubrl
add
hlt
pop
jo
jb
jecxz
xchg
mov
add
add
mov
lahf
dec
add
add
add
imul
add
aad
jb
fwait
in
fdiv
dec
add
add
stos
lock
ffreep
xor
add
add
add
add
add
inc
test
xor
pop
mov
mov
in
dec
nop
adc
jbe
mov
cmp
inc
int3
shrl
add
add
dec
inc
jbe
push
lods
jae
clc
mov
mov
lret
cmpsl
fistps
add
add
jae
adc
dec
add
push
outsb
jns
pushf
mov
cld
aad
es
adc
sti
iret
ret
xchg
pop
jno
cmp
add
add
add
mov
dec
les
add
dec
mov
imul
add
add
jbe
aaa
fisubl
cmc
xor
push
popa
xor
mov
imul
inc
add
add
aas
dec
mov
adc
fcoms
mov
clc
pushf
add
cltd
mov
pop
xor
sub
stos
jnp
pop
adc
jbe
cmp
xchg
loope
cmp
cmpsb
or
jae
adc
inc
mov
gs
out
xor
cmp
int3
inc
add
add
aam
push
subl
mov
add
dec
and
push
fwait
repnz
fcoml
cmp
dec
test
outsl
mov
dec
inc
pop
mov
sbb
jb
jg
mov
cs
push
sbb
scas
cwtl
cmc
mov
sub
xor
sub
jecxz
jno
jg
dec
sahf
adc
lods
jg
jae
cmp
mov
and
add
add
add
xchg
call
add
add
cmp
and
jbe
loop
or
das
das
dec
mov
jmp
xor
add
pop
out
jle
std
xor
ret
mov
xchg
mov
pusha
mov
cltd
or
mov
rorb
add
add
jl
cmc
jbe
mov
sub
test
add
add
xchg
add
add
add
jnp
mov
add
dec
outsb
test
mov
outsl
mov
pop
iret
insl
xor
cmp
and
add
add
add
insl
sbb
les
lcall
lret
bound
into
mov
pop
cmp
sub
add
add
jns
add
lock
xchg
stos
outsl
inc
rcll
jecxz
add
add
btc
repnz
fsubr
rcl
daa
fistpll
stos
inc
add
add
xchg
repnz
adc
sahf
cltd
or
sub
push
enter
aaa
mov
xchg
hlt
mov
sahf
push
cmp
add
fstl
loop
mov
aam
cmp
jo
adc
je,pn
js
push
xor
mov
int3
insw
pop
cmp
imull
stos
lahf
sub
and
add
add
add
add
scas
out
cmpsl
xchg
pop
mov
shll
add
mov
add
xor
mov
jp
push
push
pushf
pop
int
xor
inc
add
add
in
mov
test
add
add
mov
femms
sub
add
add
popa
add
add
add
mov
fildll
popa
ret
dec
lret
lods
popf
faddl
or
mov
insl
mov
out
addr16
or
js
popa
xor
cli
cwtl
push
cli
ss
fisubrs
xchg
mov
ret
or
jbe
xor
add
add
imul
add
add
or
insb
mov
add
int3
int3
mov
sub
add
add
test
add
outsb
push
cmpsl
mov
movsb
bswap
jae
mov
add
add
rol
or
daa
cmc
sub
add
add
jmp
outsb
inc
add
add
mov
add
add
add
lret
insl
outsl
test
cmp
sbb
out
mov
sub
mov
sbb
xorl
xor
inc
xchg
mov
push
out
lcall
push
sbb
ret
cmc
lret
pop
movsb
pop
cld
out
inc
mov
jns
mov
mov
aad
push
popf
pop
inc
mov
fbstp
add
add
mov
mov
call
cld
out
pop
icebp
xor
outsb
xor
sbb
cwtl
jns
add
add
leave
lods
cmp
adc
add
add
sahf
inc
mov
add
add
add
cmpsb
je
add
add
loopne
adc
insb
add
add
repz
inc
icebp
mov
lcall
jecxz
mov
pop
loopne
pop
and
add
add
jg
in
das
das
mov
pop
push
xchg
adcl
add
iret
mov
lock
sbb
or
add
add
int
out
popa
aaa
or
scas
int3
add
mul
ss
add
inc
popf
adc
xlat
inc
xchg
xor
pop
mov
or
inc
les
nop
sar
enter
add
dec
ret
cmp
stos
jno
dec
mov
ss
mov
or
sbb
fistl
cmc
cmp
add
add
jle
pop
cmpsb
or
sarb
js
cmp
ljmp
add
lcall
iret
inc
add
add
mov
pop
add
add
mov
btrl
cs
jne
jo
add
mov
popa
bound
inc
jge
test
add
sahf
sub
add
add
add
dec
mov
cli
cli
cmp
add
add
add
pushl
lcall
add
mov
call
xchg
cmp
addr16
out
std
adc
push
adc
mov
scas
mov
sbbb
rcrl
push
mov
push
das
adc
repz
rolb
sahf
add
add
movsl
jae
insb
add
add
fistl
cmp
add
or
mov
push
lds
add
xor
and
fnstsw
mov
sbb
jo
lods
mov
mov
repz
rcll
into
sub
dec
add
add
std
lcall
stos
stos
out
xlat
dec
test
xchg
pop
mov
push
push
push
out
aad
loope
sub
push
mov
push
sub
add
std
mov
dec
mov
push
fwait
stos
movsb
mov
test
adc
lret
aas
cmp
add
add
add
insb
add
add
movl
xchg
cmp
lea
fdivrs
dec
mov
push
je
adc
call
add
add
sub
and
mov
imul
test
mov
jae
add
add
inc
add
add
in
cmp
mov
sar
mov
dec
adc
mov
add
add
push
pop
and
xor
lods
mov
dec
mov
lea
add
and
mov
inc
add
add
insl
in
push
in
adc
enter
and
stos
cmp
fmull
jmp
add
add
mov
addr16
jmp
add
add
insb
add
add
sbb
sbb
outsb
ja
xchg
das
in
mov
inc
mov
add
test
jno
inc
mov
push
popf
sbb
int
andl
jb
lock
mov
push
jge
pop
in
pop
cwtl
negl
std
loop
mov
xchg
add
insl
jo
adc
addr16
mov
fsts
data16
sbb
or
inc
jbe
add
add
imul
in
fidivrs
lds
mov
dec
add
add
adc
rorb
jmp
adc
mov
add
fimuls
fidivrl
xor
shlb
mov
mov
inc
aad
not
out
cltd
lret
sub
add
subb
repz
mov
lods
jnp
xchg
testl
add
repz
popf
movsl
dec
in
in
in
jo
jl
push
outsl
adc
mov
add
push
test
filds
popa
sti
sbb
stos
adc
mov
lcall
add
add
jle
mov
add
cmp
std
add
inc
sub
sub
repnz
jno
xchg
rcrl
pushf
push
icebp
mov
or
lock
add
add
add
call
add
fnstcw
jp
call
test
add
lods
adc
add
add
add
xlat
pop
aaa
jmp
lods
decb
das
pop
and
add
add
add
add
mov
jns
xchg
pop
in
imul
stos
hlt
push
in
loop
in
fidivrl
lds
mov
mov
add
add
sub
jnp
jg
ret
xchg
xor
adc
sbb
sub
aaa
leave
sbb
movzwl
icebp
lret
and
orb
add
in
notl
ss
sahf
xor
ja
xchg
incl
push
cmp
add
sahf
add
xchg
int
rcrb
psubusw
adc
xchg
sbb
add
jecxz
mov
push
xchg
push
and
add
add
add
add
dec
xchg
sbb
pop
cli
jbe
imul
in
mov
pop
gs
jl
les
movsb
xor
mov
std
mov
sub
pushfw
mov
jae
mov
xor
std
or
insb
add
add
jno
jp
andb
mov
shlb
test
mov
push
repnz
sub
add
add
adc
cmc
dec
mov
push
sub
mov
cmc
idivl
mov
mov
pop
mov
shl
loope
pop
xchg
popa
cs
add
add
xchg
bound
add
add
pop
addl
jno
test
sbb
add
fucomp
int3
outsb
jge
nop
inc
mov
loope
mov
rcrb
inc
mov
scas
pop
dec
mov
xor
bound
rcll
push
pop
jo
inc
cmc
icebp
xorl
push
or
mov
add
bound
mov
xor
imul
mov
loop
nop
mov
lahf
and
add
add
cs
iret
xchg
in
push
push
mov
std
and
add
add
cld
sub
int3
inc
mov
cmp
and
ds
and
add
add
pusha
add
add
inc
iret
lea
ds
or
xchg
std
ret
mov
imulb
inc
or
add
or
lcall
or
add
pop
sub
fadd
pusha
mov
mov
adc
cmpsl
shlb
xchg
add
lea
inc
add
add
movsb
cmove
jg
mov
jne
in
fldpi
ret
adc
scas
cs
dec
mov
cltd
push
int
or
add
add
xchg
cmp
push
sub
shll
mov
pop
rorl
call
repz
xchg
sub
lds
ds
inc
pop
xor
rclb
stos
cmpsb
stc
fisttps
std
in
in
stos
test
mov
rcr
cmpsl
cmpsb
ja
insl
xchg
mov
mov
popf
out
inc
cmp
xorps
insl
es
mov
loopne
push
loop
mov
push
mov
mov
and
mov
mov
ljmp
or
fisubl
mov
add
pop
xor
cmp
sub
jl
jnp
jmp
adc
jbe
in
pop
mov
or
jne
popf
je
add
push
rolb
mov
add
add
inc
sbb
sub
dec
mov
outsb
jg
mov
and
in
dec
adc
and
add
add
cmpsb
mov
add
loope
in
sub
inc
mov
mov
pushf
mov
push
repnz
lods
jns
adc
mov
test
fucom
jns
lock
jnp
jmp
jecxz
mov
adc
mov
sbb
jg
jo
xor
imul
pusha
mov
fwait
lahf
fdivrp
adc
loope
mov
add
add
add
insl
inc
stc
pushf
push
addr16
adc
lahf
dec
mov
fstpt
cmpsl
pop
lods
sub
add
add
fdivs
mov
cmp
and
call
data16
jecxz
mov
cmpb
add
add
push
cmpsl
gs
jle
fucomip
inc
xlat
or
push
js
aas
dec
cmp
mov
mov
sub
mov
data16
imul
xor
inc
add
add
jne
mov
sub
ret
repnz
and
cmp
in
pop
sub
add
add
xchg
aam
cmpsl
std
xchg
jnp
mov
sbbl
cmp
adc
add
add
add
aam
dec
or
test
add
add
imul
mov
add
in
xor
out
xchg
add
xchg
or
jbe
test
std
push
or
jmp
sub
jbe
mov
add
std
push
insl
fldt
or
add
add
and
add
add
out
dec
fmuls
mov
sti
mov
push
mov
mov
hlt
lahf
shll
loop
fmull
je
pop
test
inc
jge
gs
andb
cmp
xor
cltd
pop
adc
mov
dec
lret
fwait
test
add
mov
jp
mov
mov
hlt
xor
bound
sbb
xchg
mov
mov
insl
cld
lea
ljmp
add
add
cmc
mov
add
add
pusha
add
add
stc
into
adc
mov
fdivs
mov
adcl
xchg
test
add
in
push
frstor
pop
fstps
add
add
add
cld
jno
push
cli
imul
jg
add
add
cltd
ret
sbb
es
loopne
fidivrl
add
add
mov
and
ss
mov
sub
es
mov
xor
into
push
jecxz
loope
insb
add
add
sub
push
mov
mov
inc
add
add
ficoml
call
inc
jns
enter
lods
movsb
mov
lret
hlt
xchg
pop
mov
clc
jae
fwait
adc
lods
pop
mov
outsl
ljmp
mov
add
add
add
add
jg
pop
inc
insb
mov
clc
cli
jae
bound
mov
add
add
out
mov
ss
mov
ficompl
push
jo
jbe
bound
push
bound
ret
test
jge
lods
das
out
in
inc
add
add
push
pusha
add
add
inc
mov
jno
add
add
add
loopne
movsl
xor
or
add
add
jge
js
out
sbb
into
sub
jge
adc
pop
lods
push
jo
adc
lods
lods
xor
scas
sbb
shll
xor
jmp
mov
jnp
addr16
test
push
mov
cmpb
mov
mov
in
in
imul
ds
mov
xchg
lcall
sbb
add
add
and
add
add
jecxz
cltd
in
mov
mov
add
dec
push
arpl
fsubrl
lods
int
mov
pusha
mov
loop
xlat
add
arpl
push
sbb
das
ret
pop
inc
add
add
dec
test
andl
mov
jge
add
add
add
dec
mov
add
add
cmp
adc
add
add
xchg
mov
sub
cmp
icebp
xadd
arpl
push
popf
fcompl
pop
pop
add
add
add
mov
sub
add
add
mov
add
mov
aam
notl
cmp
shr
xchg
cwtl
jg
rorb
inc
add
add
cltd
dec
mov
sub
cmpsl
or
add
add
push
xchg
fldcw
rcll
ffreep
xor
cltd
notb
add
add
add
pop
xor
push
fdivs
test
mov
enter
jg
rol
test
lock
dec
add
add
mov
data16
add
add
add
add
mov
add
add
fs
inc
and
add
add
movsb
xor
sbb
inc
mov
xor
testl
lret
or
add
add
dec
mov
es
add
dec
push
push
mov
lock
push
loope
int
jl
fwait
das
and
inc
repz
in
xor
inc
jle
out
add
rol
pop
dec
xchg
lea
call
jle
push
inc
mov
and
aas
dec
movb
mov
lret
xchg
ljmp
lds
add
xor
out
fcomip
test
bound
test
add
add
mov
mov
add
shll
ror
loopne
enter
daa
pop
mov
lods
les
push
stos
pop
mov
ds
mov
cmp
add
add
xchg
jb,pt
stc
testl
add
push
les
jl
pusha
mov
loop
ljmp
mov
dec
mov
out
notb
xchg
pop
fimull
sbb
es
push
mov
xchg
add
lret
push
les
aam
push
out
pop
mov
add
add
add
je
pop
jo
pop
xchg
sub
add
add
push
jns
iret
in
xchg
cmp
dec
cmp
loopne
ss
mov
in
xor
fwait
icebp
les
and
cmpsl
pop
sahf
adc
scas
fnstenv
mov
add
add
ds
jl
sub
add
add
push
fstp
jecxz
addb
add
add
or
add
add
xor
test
add
add
xor
xchg
and
add
push
int
popa
adc
out
mov
mov
in
mov
push
das
mov
pop
add
add
add
mov
mov
jmp
cmp
add
sbb
add
add
addr16
movsl
mov
fs
cmpsl
push
jo
and
add
add
add
add
xlat
sbbb
push
scas
xchg
push
adc
aam
mov
mov
mov
jbe
pop
loop
add
add
imul
add
xor
sub
dec
push
cmp
ret
call
cmpsb
sub
xchg
data16
ss
nop
mov
lock
add
add
jge
dec
or
loop
mov
jnp
mov
dec
mov
fldl
add
add
add
les
push
xor
or
add
add
add
cmp
xor
bound
and
add
add
sub
add
add
and
stc
or
add
add
mov
xchg
sbb
faddl
xchg
mov
and
add
add
inc
sub
push
jle
add
add
mov
mov
sub
jae
push
cmpsb
imul
jno
inc
mov
jb
xor
add
add
add
and
das
or
rorb
in
xor
inc
mov
cltd
or
add
lret
add
add
add
xchg
pop
xor
add
inc
je
xchg
sbbb
add
out
ds
scas
mov
mov
in
sbb
ror
in
and
sub
lds
add
add
add
sahf
or
add
fcoms
mov
add
add
pop
cmp
int
lret
icebp
mov
add
cmp
cli
xchg
mov
mov
cmp
or
sbb
xchg
popf
or
xchg
decl
add
add
add
add
sub
push
jmp
adcb
rorl
test
add
pop
and
add
add
addl
xorl
popa
aam
inc
push
imulb
jo
xchg
pop
xor
mov
dec
add
adc
cmp
stos
mov
mov
add
or
add
add
add
pop
fisubl
mov
in
push
in
and
add
jno
push
jmp
sbb
mov
add
addr16
xor
ret
int
dec
ds
and
lret
mov
xor
add
add
and
add
add
sbb
adc
call
add
add
add
mov
test
out
lock
add
jmp
dec
outsb
jno
es
push
mov
xchg
jg
cmp
jno
loop
mov
add
add
fisttpll
leave
sbb
add
cld
mov
and
sbb
add
add
ret
mov
cmp
xor
ror
and
adc
xor
loopne
or
jbe
lods
shll
inc
add
add
inc
mov
outsb
imul
add
fistpl
adc
jno
jp
in
ljmp
dec
add
cltd
leave
adc
daa
addr16
add
add
aad
fwait
xor
xlat
xor
fsubrs
stos
iret
jg
aaa
rclb
movsb
cwtl
aaa
xchg
add
add
push
mov
dec
add
add
in
les
call
mov
fisttpl
jmp
mov
or
add
add
mov
pop
mov
add
mov
inc
pop
jnp
adc
in
sub
out
pop
adc
out
mov
arpl
push
xchg
gs
scas
cmc
dec
inc
push
fcomi
and
mov
or
mov
mov
add
add
stc
xchg
stos
mov
mull
push
or
add
add
cmpl
mov
in
shl
add
add
jle
cmpl
add
mov
xchg
sub
fdiv
lods
push
or
lret
jbe
ja
hlt
xor
mov
cmpsl
hlt
mov
add
add
mov
add
push
ja
push
push
mov
push
ret
adc
cli
loope
pushf
mov
add
repz
icebp
push
cmc
mov
push
adc
cld
add
push
jne
xchg
mov
hlt
fldenv
mov
pusha
add
add
rolb
adc
xor
xor
add
add
fldln2
mov
add
mov
jne
cmp
push
cmp
cli
add
add
cmp
add
add
add
add
add
jmp
xchg
jo
lods
xchg
aaa
test
lret
sub
push
aaa
enter
mov
push
inc
dec
dec
mov
popf
cwtl
rcr
lcall
pop
jg
lods
fwait
xor
add
jne
rorl
sbb
jg
sub
add
add
in
mov
inc
outsl
xchg
rolb
jmp
mov
sahf
dec
fisttps
add
add
int
push
fcoms
scas
nop
xchg
outsl
addl
sub
lret
test
in
imul
fwait
ja
and
push
insl
jbe
jae
cmp
add
cmp
push
lea
out
imul
xchg
repz
aaa
mov
lods
pop
pop
pop
and
xchg
sub
add
add
je
cltd
lea
xchg
mov
loopne
xchg
adc
test
shrl
add
add
adc
testb
dec
dec
mov
data16
fsubrs
add
dec
fdivrl
add
add
mov
pop
mov
mov
jecxz
cmpsb
hlt
loopne
dec
int
cmpsb
adc
mov
push
icebp
outsb
xchg
mov
aas
and
add
add
mov
sub
add
add
call
scas
add
add
aaa
int
lods
in
mov
pop
loop
mov
add
add
mul
sub
pop
sub
movsb
xor
push
inc
out
imul
jg
jle
jo
int
add
add
lods
mov
adc
ret
add
add
fsts
shlb
add
add
mov
xlat
cmp
inc
inc
push
xchg
fcmovnu
cmp
add
add
std
addb
xchg
xchg
scas
push
iret
and
mov
fnstsw
aaa
mov
fs
add
add
daa
cltd
pop
mov
mov
shlb
add
add
push
rcr
sub
add
add
les
add
daa
hlt
pop
cs
xchg
mov
or
add
cmp
sub
add
add
cmpsb
push
mov
daa
sub
jbe
ds
lock
rcll
cmp
push
mov
add
add
sti
imul
fcomi
lret
pop
sbb
ret
insb
mov
cli
fidivl
add
add
mov
cmc
lea
and
add
add
mov
or
add
add
push
mov
add
add
ljmp
add
add
add
pusha
add
add
aam
int3
push
dec
add
add
jmp
xlat
in
dec
movsl
mov
add
or
mov
stos
jbe
ret
lods
test
push
outsb
jnp
arpl
gs
add
add
loopne
xchg
dec
jg
sbb
cmp
test
push
mov
and
add
add
jmp
add
push
jp
or
stos
sbbb
cmp
cmp
push
add
sbb
out
mov
divps
add
mov
xor
xor
data16
mov
add
add
inc
aaa
cmp
and
hlt
xchg
lahf
dec
mov
push
push
mov
repz
mov
lcall
adc
out
sbb
movsl
xor
imul
adc
fnstenv
xchg
pop
cmc
add
test
add
orl
mov
add
add
iret
fcoms
out
xor
repz
add
add
push
movsb
imul
ret
test
test
aad
in
jne
xchg
ret
xchg
cmpb
in
lcall
add
in
sahf
popf
xor
mov
scas
xor
sti
or
add
add
icebp
lcallw
add
push
dec
pop
lods
and
add
add
push
xchg
clc
clc
in
mov
inc
push
inc
add
popa
mov
cltd
xchg
and
pop
stc
jmp
dec
stos
out
ds
lods
adc
int
jecxz
gs
dec
mov
std
popf
push
xchg
sbb
in
mov
cltd
and
push
mov
mov
imul
shlb
pushf
in
adc
enter
rcl
lret
dec
andl
add
movsl
pushf
insl
cmpsl
push
push
andl
inc
mov
add
add
aaa
push
bound
sbb
add
add
leave
mov
and
add
add
bound
jbe
add
add
arpl
push
lret
scas
stc
test
lods
dec
mov
lods
movsb
pop
sar
orl
add
ret
mov
lock
lods
or
add
add
and
ret
stos
mov
add
add
mov
jmp
add
add
inc
xchg
or
sbb
push
gs
sbb
cli
inc
add
add
dec
or
mov
xchg
fidivs
pop
or
loopne
add
add
xchg
xchg
sub
mov
imul
jae
pop
add
or
adc
mov
xor
pop
xchg
sbb
cwtl
mov
adc
or
add
or
mov
lock
add
add
mov
and
pop
test
lds
adc
jo
shl
push
jae
pusha
mov
int3
lret
cltd
enter
add
push
push
pop
popa
push
xchg
mov
push
mov
ljmp
inc
mov
lock
mov
ret
mov
xchg
sti
icebp
lret
adc
add
xchg
ds
adc
pop
or
pop
sub
add
add
add
xchg
push
test
pop
jmp
imul
orb
inc
mov
add
repnz
inc
add
xor
and
lea
fistps
or
in
in
adc
push
aaa
push
mov
cmp
daa
les
xchg
scas
and
add
add
mov
movsb
dec
mov
test
cld
jae
mov
pop
mov
mov
cmpsl
jbe
pop
outsb
ss
sub
aam
xlat
mov
enter
add
add
mov
cmp
icebp
xor
add
add
add
adc
xchg
movsl
mov
add
test
mov
xchg
repnz
mov
dec
add
add
mov
movsl
mov
popa
gs
sbb
mov
jecxz
lods
or
add
add
lret
sub
add
add
sbb
fcmovne
fmul
jo
dec
add
add
arpl
data16
mov
jno
stos
mov
add
sti
or
add
add
or
adc
add
add
arpl
mov
sub
add
add
xchg
jecxz
mov
push
pushf
push
call
add
add
jb
mov
je
mov
testb
and
icebp
leave
mov
push
ret
scas
xchg
jns
faddl
add
add
ja
test
add
add
je
es
js
ljmp
add
jmp
cwtl
mov
outsl
xor
add
add
push
mov
leave
ds
xlat
loope
sbb
mov
dec
fwait
pop
jmp
and
jge
xor
sarb
mov
sbb
xlat
sbb
outsb
xchg
dec
jae
les
popa
mov
add
add
add
cmp
les
hlt
mov
pop
repz
dec
xchg
sub
add
add
xlat
xor
add
mov
cmpb
dec
add
add
add
add
add
mov
mov
dec
mov
jb
stos
xchg
mov
clc
repnz
jns
cltd
xlat
adc
jne
cmp
movhps
jno
stos
lds
icebp
or
cmp
xchg
or
mov
pop
in
cli
test
into
leave
es
adc
add
mov
mov
insb
mov
cmpsb
push
in
sub
shrl
ret
jno
cmp
loopne
rorl
flds
lea
inc
dec
mov
stc
add
add
add
add
ljmp
stos
xchg
rcrb
lahf
dec
pop
arpl
push
xor
sbb
aas
call
int
cmovns
add
add
pop
push
mov
and
dec
jmp
mov
enter
int3
jg
ret
pop
mov
mov
or
add
imul
jo
fsubp
inc
add
add
imul
jb
and
add
add
ja
xor
mov
cltd
sub
add
inc
cmp
push
enter
lea
jmp
or
mov
or
add
add
call
inc
sub
and
mov
add
add
in
xor
add
loopne
lea
or
add
add
sbb
xorb
cmc
push
daa
dec
cli
cmpsb
stc
out
jbe
pop
or
loopne,pt
mov
pop
bound
pop
pop
loope
ja
or
mov
cmpl
int3
roll
pop
dec
shrl
ffreep
call
inc
add
imul
push
add
cmpb
into
cwtl
cmp
arpl
in
orb
add
add
rcr
scas
pop
push
push
fucomip
mov
inc
xor
jle
fidivl
nop
sub
and
pop
outsl
lahf
xchg
lahf
jmp
xor
aad
aam
xchg
mov
rcrl
add
add
jbe
rorb
into
pushf
inc
gs
mov
mov
js
mov
xchg
fs
push
cmp
test
mov
inc
pop
cwtl
mov
stc
outsl
or
add
jns
or
lret
and
fcoms
jne
fwait
xorb
add
add
in
dec
inc
add
add
lahf
js
loope
xchg
enter
add
mov
leave
pushf
xchg
sti
or
inc
mov
imul
mov
insb
add
add
sbb
push
fsubrs
xor
xchg
adc
and
sub
dec
or
ss
xchg
mov
or
add
add
pusha
add
add
dec
jo
cmp
push
cmpsl
sub
lds
cltd
xor
bound
loopne
outsb
xchg
jbe
mov
pop
pop
test
cmpsb
stc
add
es
cmp
jg
or
rolb
add
add
cmp
pop
or
leave
sub
mov
and
popa
sbb
jae
shrl
aam
cli
mov
cld
jbe
sti
jb
scas
daa
push
sub
es
mov
das
mov
sub
add
add
imul
or
pop
mov
add
add
or
cmpsb
sbb
ja
mov
sbb
insb
add
add
jle
mov
inc
das
lock
add
shl
push
pop
pop
ljmp
pop
sbb
mov
lds
out
pop
fstpl
and
shl
add
fcos
fildl
jge
aam
imul
add
add
pop
push
sbb
in
mov
out
mov
jae
mov
cwtl
mov
mov
test
aas
mov
arpl
add
test
add
mov
xchg
insb
add
add
push
insl
or
sbb
insl
sub
jle
inc
add
add
pop
out
iret
mov
arpl
add
xor
mov
add
cs
into
add
lock
rorb
dec
insb
mov
lods
in
jmp
push
cmp
outsl
adc
add
pop
stc
test
into
sbb
pop
jnp
push
cmp
daa
mov
pop
jp
dec
outsb
adc
mov
adc
decb
add
add
andb
stos
push
hlt
pop
jg
insb
add
add
pop
popa
cmp
and
add
add
xor
mov
ret
imul
sub
push
outsl
mov
xor
add
xor
sbb
mov
outsb
cmp
xchg
sub
add
add
add
lock
xor
pop
xchg
cli
add
add
add
rcr
and
xor
les
add
cmpsb
inc
inc
shlb
aad
mov
inc
xchg
add
add
sbb
jg
pop
cltd
loop
and
loopne
jo
subl
add
inc
pop
shrl
and
add
add
in
rcll
add
or
pop
inc
xchg
cmp
loope
mov
cmp
in
out
div
int3
or
add
add
xchg
sub
sbb
adc
push
inc
cwtl
mov
jmp
pop
dec
add
add
and
add
add
jg
inc
xorb
fsubp
and
add
add
movsb
jns
push
es
mov
aas
daa
inc
scas
adc
ret
xchg
jbe
lret
loope
add
add
add
lret
xchg
add
push
xchg
sbb
aaa
stc
push
jno
push
fidivs
dec
mov
mov
stos
push
mov
sbb
gs
jb
aaa
fstpt
repz
mov
inc
lret
sahf
imul
add
add
adc
imul
fisttpll
add
outsw
xor
cmc
xchg
push
cmp
ret
add
sbb
pop
sbb
inc
cmpsl
repnz
imul
xchg
mov
push
sbb
mov
sub
dec
add
add
add
add
add
outsl
shlb
adc
mov
xchg
mov
sub
out
or
iret
jno
xchg
adc
add
lods
or
nop
rorl
jg
cmp
adc
push
pop
jo
jno
shlb
xchg
popa
test
xor
mov
jnp
mov
iret
scas
adc
xchg
mov
stos
or
pop
sarl
movsb
cmc
cmp
push
fdivrl
pop
test
fdivp
mov
add
inc
push
and
add
add
xor
mov
ljmp
xchg
sarb
out
xlat
ljmp
push
fcos
or
push
rcrb
cli
adcl
imul
inc
dec
lcall
sub
add
add
mov
add
add
jl
pop
xchg
stos
adc
push
int3
cmp
add
ds
insb
mov
lahf
ds
mov
fstpt
bound
cmp
xchg
jo
pop
js
cltd
push
in
sub
xorl
push
test
sarb
jmp
push
inc
push
dec
mov
mov
rdtsc
jbe
mov
cld
xchg
jbe
gs
xor
add
inc
and
mov
cli
jmp
icebp
lock
rcr
or
dec
or
pop
xchg
popf
pop
adc
fisubrl
add
add
push
jle
and
sub
mov
jg
test
add
add
cmp
pop
mov
sub
add
add
jge
mov
jmp
enter
or
cld
popa
mov
mov
mov
ret
pop
mov
mov
mov
gs
and
add
add
and
je
xchg
imul
test
cmp
notl
xor
xor
fwait
scas
orb
mov
sub
add
add
pop
jae
pop
adc
mov
cld
jnp
lods
xchg
sub
imul
or
add
add
jp
fnstsw
and
add
add
dec
es
cmpsb
push
fcoml
dec
push
xchg
loope
lret
or
add
out
movsl
xchg
out
or
into
push
or
add
add
adc
add
add
scas
test
pop
mov
add
add
mov
movsb
jp
jp
loope
push
pop
mov
cmp
pop
test
fisubs
mov
and
add
add
mov
add
and
and
add
mov
add
add
sti
jne
popf
cmp
pop
mov
mov
push
xor
mov
or
fnstsw
add
inc
mov
and
mov
cmp
pushfw
hlt
cmp
add
add
clc
adc
out
push
mov
jge
movsb
fwait
pop
mov
or
popf
mov
jp
nop
jl
push
xchg
ss
add
pop
test
rcrl
std
es
mov
xlat
push
repz
icebp
lea
add
add
xor
out
jl
arpl
sub
add
add
aam
pop
mov
fcmove
in
sbb
repz
add
add
inc
mov
fildl
add
add
mov
dec
xchg
cmp
mov
add
add
arpl
jle
mov
mov
add
add
add
mov
scas
push
jl
in
shlb
xor
sbb
stos
mov
in
mov
and
add
add
add
lret
inc
into
out
pop
lret
cmpsl
lock
faddp
mov
mov
movsl
movsl
outsb
fstpt
dec
mov
es
lret
out
sub
sub
add
add
hlt
xor
push
mov
inc
fdivs
inc
add
add
xchg
aad
rclb
pop
pop
xchg
jp
sbbb
orb
popf
xor
cld
loopne
push
flds
ss
in
and
mov
jle
mov
add
test
pop
int3
add
and
sbb
out
mov
filds
hlt
icebp
pop
iret
or
movsl
cld
mov
add
into
ss
mov
add
out
and
add
add
insl
in
mov
enter
add
add
loope
pop
mov
pop
cli
jmp
xchg
jne
dec
jns
add
add
add
xor
add
flds
push
out
int3
stos
xor
pop
xchg
in
add
add
ljmp
add
mov
sbb
imull
mov
sarb
mov
lahf
mov
adc
add
int
xchg
in
mov
sbb
callw
add
jp
adc
add
add
leave
xlat
out
cli
gs
sahf
sbb
xor
mov
fisubs
add
add
out
popa
mov
test
mov
add
fcmovu
fwait
pop
loope
pusha
add
add
inc
lods
sbb
add
add
push
dec
inc
dec
mov
mov
pop
dec
pushf
xchg
add
nop
add
xor
test
ss
inc
cli
xchg
popf
rorb
lret
cmp
add
add
add
adc
sbbb
pop
repnz
push
xlat
xchg
add
add
in
pushf
repz
adc
ss
pusha
add
add
in
shll
mov
add
xorb
add
add
daa
fstl
add
xchg
add
js
mov
add
repz
dec
mov
mov
xchg
mov
xor
and
pop
ja
test
fisubrs
cld
mov
in
pop
outsl
icebp
dec
mov
iret
inc
xchg
loopne
add
add
imul
inc
test
add
add
pop
out
xor
add
add
add
mov
add
add
in
adc
mov
or
add
add
in
push
and
add
mov
sub
mov
movsb
xor
adc
mov
mov
ja
xchg
into
sbb
dec
test
lods
push
cmp
pop
mov
sahf
xor
add
add
cwtl
and
add
add
xor
mov
xor
pop
movsl
mull
inc
push
mov
repnz
dec
xor
out
fdivs
rcr
lret
test
je
cltd
out
enter
into
pop
or
add
add
push
sysret
movsl
in
sub
add
add
adc
sbb
inc
adcb
push
sahf
push
cmc
sub
xchg
jmp
dec
inc
mov
pusha
add
add
cmp
jg
rcr
lds
add
mov
add
add
stos
and
add
add
sbb
fldl
or
pop
cltd
push
push
sub
add
add
push
call
push
xchg
js
mov
dec
pop
sahf
and
add
add
and
push
xor
add
and
mov
mov
push
pop
nop
out
mov
icebp
addr16
push
pushf
and
add
vunpckhps
xchg
jmp
pop
clc
ret
lea
out
add
add
mov
out
dec
mov
inc
mov
ss
jb
iret
lahf
pop
sbb
jmp
repz
and
add
cmp
cmp
pop
cwtl
lret
pop
push
add
stc
mov
push
lret
mov
mov
add
inc
aad
test
sub
gs
mov
add
push
push
incl
inc
and
add
add
add
add
mov
arpl
sbb
adc
xlat
in
mov
sbb
push
iret
scas
sbb
test
pushf
unpckhps
dec
add
pusha
add
add
or
scas
add
cmp
lds
sarb
xchg
cmp
stos
pop
lret
mov
orl
xchg
addr16
in
les
jl
cmpsl
fcmovnb
out
fiadds
add
add
js
inc
mov
addr16
push
dec
add
pop
pop
lods
stos
push
or
add
add
popa
pop
fwait
cmc
pop
out
or
or
and
jg
mov
add
jns
xlat
in
xor
lret
push
pop
push
mov
push
out
adc
mov
and
lock
jbe
clc
adc
dec
idivl
sarb
dec
add
add
xor
cld
fstpt
add
add
add
insl
xor
mov
add
add
in
adc
mov
int
cmp
in
ja
mov
repz
aas
fdiv
in
mov
ja
rol
aad
mov
mov
add
add
fwait
cmovg
add
in
jg
loop
and
xchg
std
cmpsb
mov
xor
inc
imul
in
mov
adc
loope
lcall
inc
push
xor
ds
add
cmp
mov
add
add
mov
add
inc
jp
or
add
add
adc
dec
loop
pmaxub
cmp
dec
mov
and
ret
out
add
add
push
pushl
pop
sub
mov
inc
mov
lcall
jo
mov
add
add
call
pop
sbb
pushf
jge
add
add
add
sbb
adc
push
call
cmp
mov
mov
loopne
pop
cmp
and
stos
test
add
add
adc
shll
add
pop
out
shlb
outsb
movsl
mov
daa
sti
movsb
ljmp
enter
ss
psraw
popa
fs
clc
add
add
add
add
add
mov
jne
dec
andb
repnz
xor
mov
aam
mov
and
add
add
scas
out
jnp
fldenv
jo
bnd
rolb
mov
aad
and
add
pop
in
es
shlb
data16
add
add
addb
mov
negb
mov
repz
lods
adc
ss
mov
popa
fwait
dec
mov
sub
add
add
add
add
jle
lds
rolb
add
add
pop
imul
or
and
inc
mov
mov
add
sbb
lcall
fsubs
mov
pop
cmpsb
inc
mov
movsl
les
or
mov
es
pop
aam
jge
nop
xor
add
add
fiadds
add
add
xchg
add
add
or
xchg
xor
push
xchg
scas
fstpl
adc
pop
add
imul
mov
jg
add
add
cmc
movsl
xor
je
fistps
xchg
ds
fwait
push
out
loop
sbb
pop
je
mov
add
add
inc
xor
mov
add
add
mov
sbb
xchg
repz
ss
xor
das
out
lahf
std
in
cmc
std
ret
ss
sub
add
add
push
adc
add
pop
pop
dec
add
add
pop
imul
jmp
add
add
adc
clc
pop
jmp
add
add
mulb
add
add
dec
push
pushf
pop
pushf
inc
mov
xlat
adc
mov
es
mov
add
add
sbbl
fsubrs
ret
jmp
mov
inc
add
add
jp
pop
jp
ja
add
add
mov
ja
rolb
jl
lcall
negl
jle
xchg
test
add
add
sbb
outsb
cmp
scas
cmpsb
inc
cltd
push
inc
mov
hlt
mov
in
fmuls
dec
add
add
iret
insl
add
movsb
mov
movsl
xchg
pop
sahf
test
nop
xor
ja
push
and
mov
mov
clc
mov
jecxz
cli
aam
push
leave
outsl
cmp
and
add
add
movsl
ja,pt
mov
clc
or
inc
add
add
negb
lods
stos
stc
stos
cld
sbb
out
mov
scas
outsl
ficoml
pop
push
push
sti
cmp
inc
mov
xor
mov
sub
or
add
popf
pop
rcr
fisttpll
pop
fyl2xp1
push
xor
test
add
fmulp
testl
inc
imul
fstl
imul
js
xor
cmp
fnstenv
sub
jecxz
mov
inc
mov
add
add
decl
aas
mulb
sbb
xchg
lock
jmp
fld
shrb
scas
xorl
push
sub
fwait
ds
or
push
push
stc
stos
imull
add
add
push
lcall
lds
add
inc
add
add
cmpsl
mov
test
add
jmp
lcall
push
inc
xchg
mov
lds
and
add
add
push
test
sbb
add
shr
push
arpl
addl
add
fcompl
aam
test
out
add
add
add
add
add
add
mov
test
sbb
loope
movsl
fstps
test
add
pop
jbe
jae
jle
jp
stos
jmp
int
xor
xrelease
je
adc
mov
xor
jg
mov
mov
mov
xchg
addr16
add
add
nop
es
lds
add
add
xchg
jge
out
dec
mov
push
pop
jae
adc
or
dec
pop
xchg
pop
push
jmp
add
add
std
mov
lahf
and
stc
and
xchg
jno
sahf
push
pop
fwait
jno
mov
scas
aam
fisubrl
dec
je
dec
mov
sbb
mov
push
sbbl
mov
xlat
add
add
sbb
add
add
sbbb
out
sahf
lods
pop
cli
rcr
call
stc
adc
pop
xrelease
jne
lods
cmp
and
incb
add
add
sbb
xchg
lods
mov
xchg
std
outsb
fidivrs
cmp
nop
push
lods
push
sub
add
add
icebp
ja
in
xor
icebp
js
and
mov
out
std
cs
add
test
dec
adc
hlt
mov
cmp
sbb
push
mov
sbb
pop
mov
inc
mov
mov
add
add
adcl
ljmp
and
add
add
and
pop
xchg
add
jge
mov
mov
lret
dec
std
pushf
out
jp
pusha
mov
inc
imulb
sub
das
stc
xchg
push
push
adc
jg
dec
mov
add
add
repnz
add
imul
pop
mov
pop
or
fsubrs
add
lods
rorl
movsb
pop
mov
add
insl
pop
rcrl
sbbl
mov
inc
pushf
aas
mov
mov
stc
mov
sub
or
add
add
dec
mov
adc
pop
ljmp
sbb
loope
sub
and
push
sub
incl
lods
mov
arpl
rolb
add
popf
jge
inc
mov
mov
pushf
into
arpl
ss
add
add
fnstcw
mov
mov
cmp
inc
xor
sbbb
inc
add
add
mov
in
rcrl
push
hlt
arpl
lea
mov
mov
popf
movl
xor
adcb
push
fs
insl
inc
fabs
lods
xor
add
add
pop
fwait
mov
sub
int
add
add
addr16
inc
sub
add
add
addr16
fwait
inc
mov
mov
add
cmc
js
pop
lcall
sti
in
fldenv
add
add
loopne
sub
not
data16
inc
mov
je
push
fnstenv
add
xor
out
and
lods
hlt
lods
in
movsl
ds
ds
jne
mov
add
add
mov
iret
mov
or
mov
add
sub
sti
push
jae
mov
cmp
stos
mov
das
or
add
add
out
je
out
shrb
add
pop
or
clc
ficoml
cmp
aas
add
dec
mov
cmpsb
ret
sub
add
add
mov
cmpsb
paddq
dec
fidivrs
jle
mov
movsl
adc
sbb
pop
xchg
inc
test
popf
popf
and
dec
fsubrp
pop
icebp
pushf
in
and
add
add
cwtl
mov
add
sbb
jge
in
incl
hlt
dec
mov
in
push
insb
mov
xchg
pop
xchg
inc
es
and
das
pop
and
add
add
adc
add
iret
jno
fisubrl
dec
add
add
fisttpll
mov
jle
adc
add
or
arpl
adc
cwtl
mov
jp
xchg
jecxz
fcomps
dec
mov
jle
add
add
int3
add
add
add
add
add
add
add
add
add
ret
rclb
orb
lret
int
loop
icebp
aam
dec
mov
mov
into
cltd
mov
daa
mov
in
push
push
xchg
ret
add
add
cmc
test
jg
dec
mov
add
dec
add
add
lret
mov
pop
cmp
add
mov
lret
aaa
jae
mov
movsl
jne
xchg
and
add
mov
out
enter
je
and
add
add
push
add
add
add
dec
xchg
or
add
add
mov
out
jbe
andl
sub
and
xchg
push
ljmp
or
add
add
outsl
enter
xchg
adc
loopne
out
push
xchg
fdivs
add
add
add
or
test
mov
or
mov
add
add
out
sub
fimull
arpl
add
add
pop
sbb
add
mov
add
sub
add
add
sbb
add
add
push
js
aaa
cmpl
push
and
mov
inc
mov
sub
add
add
xor
add
add
orl
add
add
push
sub
add
add
adc
or
push
push
inc
in
push
in
jne
adc
insl
or
cmp
sahf
les
add
add
int
loopne
push
mov
mov
dec
mov
pop
ss
icebp
in
mov
mov
jbe
push
lcall
jecxz
mov
jle
ret
movsl
ljmp
push
dec
fidivrs
xchg
lds
ja
mov
add
inc
decb
add
stc
cmp
js
inc
pop
outsb
mov
fdivrs
aam
fadd
and
call
add
add
lcall
shrl
popf
cli
push
sbb
test
lods
dec
daa
mov
add
xor
lret
mov
mov
fbstp
add
bound
mov
fildll
stos
sar
les
in
js
sti
repnz
loope
in
push
sahf
dec
add
add
add
cmp
punpckhwd
test
mov
icebp
push
jbe
imul
cmp
adc
aad
jb
add
add
add
fstl
pop
cltd
and
mov
jl
test
in
mull
repz
add
ret
pop
out
dec
ficoml
dec
inc
sub
add
add
mov
test
add
out
inc
jl
arpl
mov
add
add
jo
pop
xchg
sub
adc
into
out
lods
xor
mov
dec
lods
repz
push
xchg
jle
movsl
leave
int
inc
mov
cwtl
fisubrl
add
add
jno
flds
mov
flds
mov
cmpsl
cmpsb
dec
add
add
andps
add
test
add
add
or
cmpsl
jb
orb
fstpt
mov
or
add
add
push
and
mov
ds
lock
xor
add
daa
pushf
dec
mov
and
add
add
sahf
jnp
scas
xlat
cmpsl
ja
fisttpll
adc
xchg
fildl
adc
mov
js
push
nop
mov
mov
mov
jno
sub
cmpb
out
mov
sarb
lods
insb
add
add
jae
sub
add
add
ds
out
mov
lcall
lret
stos
xchg
xchg
inc
cmp
rorl
add
add
cmp
add
add
rcl
xorl
aam
je
xchg
add
add
lods
push
inc
xchg
xchg
mov
sub
xchg
mov
push
fs
mov
fldl
mov
jns
or
lcall
adc
pop
inc
pop
ss
xchg
xchg
inc
mov
or
add
add
lret
mov
push
mov
mov
pop
into
out
cli
lds
mov
push
sub
push
or
jl
jge
add
add
xor
insl
mov
repnz
ss
aaa
pusha
mov
xor
add
add
dec
das
or
add
add
adc
add
add
fwait
dec
add
add
cmp
fidivrs
repnz
inc
push
push
xchg
push
sub
add
add
and
sub
add
iret
lahf
inc
cmc
fisttpll
add
add
imul
in
mov
dec
mov
pushl
mov
addr16
add
add
push
iret
pop
push
addb
or
sub
xor
or
add
add
rol
sub
insb
add
add
xor
dec
push
sbbl
rcrb
mov
fmull
out
hlt
mov
jno
xchg
outsl
and
add
add
sub
add
cmc
test
mov
add
add
add
les
pop
cmp
arpl
cs
pop
jmp
jecxz
xor
xchg
inc
xchg
hlt
js
fistl
pop
sahf
mov
ja
add
test
add
add
push
jmp
or
and
add
add
jl
fistl
cmp
ljmp
add
loope
mov
add
add
adc
repnz
add
add
call
pop
fcomi
dec
inc
xor
xor
enter
cmp
add
lea
pop
outsb
daa
fnstcw
xchg
or
add
add
add
or
add
add
fsub
xor
add
add
ljmp
jge
mov
mov
cmp
jl
dec
xchg
ljmp
sbb
add
add
xchg
push
mov
ljmp
dec
jmp
testl
aam
lea
add
add
out
sbbb
or
add
add
add
add
into
jno
sub
add
add
push
cmpb
add
add
lahf
pop
sbb
xor
add
sub
sub
add
add
xorl
insl
adc
push
out
jo
push
dec
pop
mov
adc
les
bound
pop
dec
cmpsb
jb
dec
add
add
data16
add
add
aaa
pusha
mov
ja
cmp
push
aad
lahf
jge
aam
aaa
push
outsb
dec
lahf
add
insl
int
scas
daa
adc
xor
mov
or
inc
xchg
and
in
sub
in
ja
mov
adc
pop
push
mov
mov
lret
int3
or
mov
cs
add
add
dec
add
add
and
add
add
je
lahf
int
fistl
lock
adc
add
push
or
icebp
xchg
push
out
and
sub
add
add
jl
jno
adc
add
add
jne
jge
sbb
jg
or
add
add
je
sbb
mov
xchg
std
push
xchg
out
fwait
js
adc
adc
leave
add
add
add
test
mov
cmp
xor
jno
lock
mov
fsts
out
jns
dec
add
add
pusha
add
add
mov
in
inc
mov
xchg
jns
sub
push
daa
mov
loopne
loopne
sarl
fwait
and
add
xchg
pop
and
shlb
rcr
pop
pop
adc
mov
mov
imul
mov
xor
add
add
add
push
mov
mov
or
lcall
cmp
mov
xlat
dec
dec
or
add
andl
add
xor
push
mov
sub
shl
in
call
pop
xor
sbb
jge
dec
sbb
lahf
push
popl
int3
xchg
sub
push
add
test
sbb
dec
cmpsl
test
scas
mov
mov
push
shll
adc
mov
and
enter
jmp
add
lea
add
out
mov
outsb
mov
push
lahf
pop
out
lret
mov
das
int
scas
aas
test
add
add
add
add
add
sbb
pusha
add
add
out
sbb
add
pushf
aas
ss
pop
enter
movsl
jmp
add
inc
sub
shll
jle
stc
push
cmc
dec
sub
pop
ljmp
mov
xor
mov
adc
mov
lret
fiaddl
cmp
mov
jbe
loopne
inc
in
sub
add
add
test
add
out
jmp
sahf
push
xchg
fcoml
mov
or
into
dec
aaa
lods
sub
add
add
hlt
enter
push
fisttps
mov
sahf
push
cld
lds
incb
add
and
les
push
jnp
push
inc
les
and
add
add
add
ret
ja
sbb
les
inc
mov
xlat
out
jecxz
push
jmp
add
add
add
aaa
mov
add
add
xor
lods
push
enter
add
add
jge
lea
add
add
push
push
or
fdivrs
adc
pop
aas
sub
add
add
or
lods
js
sbb
mov
lds
sbb
push
push
push
out
cmp
insb
mov
pop
js
test
repnz
cs
clc
mov
or
add
add
mov
cli
mov
int
or
cmp
bnd
lahf
fistps
add
add
inc
mov
sbbl
cwtl
mulps
add
add
shrb
mov
dec
inc
mov
dec
xor
int
push
mov
add
addr16
xchg
add
out
notb
xchg
dec
scas
sti
lret
sub
add
add
add
fs
adc
push
adc
pop
dec
rep
cmc
pop
dec
xchg
push
mov
scas
out
je
std
push
shufps
jl
pop
in
jno
aas
out
ret
mov
xlat
std
mov
outsb
sub
mov
jo
and
mov
loope
addb
pop
add
pop
rorl
dec
inc
scas
sbb
mov
xchg
sbb
inc
mov
test
ss
add
add
mov
add
sbb
add
mov
cs
add
in
pop
test
cmpsb
sub
icebp
cld
cmpsb
xor
popf
iret
icebp
xor
shr
cmc
sub
stc
imul
pushf
cmp
add
pusha
mov
and
sbb
leave
mov
sbb
fstps
or
push
std
movsl
sarl
pop
xor
fmull
add
add
sbb
pop
pop
aas
popa
cltd
pop
popa
lock
arpl
dec
mov
mov
mov
mov
add
add
inc
mov
mov
in
xchg
test
jl
jle
cmpsb
add
add
add
dec
mov
sub
add
add
fisubrl
pusha
add
add
sub
mov
insb
mov
into
jne
xor
nop
adc
sub
sbb
adc
cwtl
cmp
mov
xlat
fldcw
push
loopne
lds
xor
out
sbb
inc
push
jge
movsl
or
add
add
add
sub
add
add
add
add
aas
xchg
xchg
mov
add
rorb
orl
add
cli
xor
in
ds
lret
dec
ss
inc
push
popa
xor
adc
adc
jnp
pop
xchg
sub
add
add
add
dec
pop
popf
push
xchg
popa
je
fnstcw
or
outsl
hlt
or
lds
sub
mov
pop
adc
fstpl
lds
mov
aad
leave
mov
leave
popa
push
bound
push
rcll
xor
xchg
xlat
repnz
pop
addr16
lahf
mov
call
sub
add
add
pop
xchg
cmp
jo
icebp
loope
cmpsb
push
xor
lahf
push
iret
frstor
push
push
lret
add
sbb
add
int3
iret
adcl
and
or
jg
mov
insb
mov
sbb
stos
pop
adc
div
out
push
idiv
pop
fs
leave
sbb
enter
loope
testl
push
cld
push
adc
mov
jb
push
push
nop
dec
inc
mov
fidivs
lds
vcvttsd2si
sahf
ja
sbb
je
jae
xchg
sarl
mov
cltd
mov
nop
imul
mov
iret
ret
and
sbb
add
add
stos
mov
pop
repz
pop
jge
test
test
mov
outsb
ret
and
mov
xchg
jecxz
cmp
dec
cmpb
das
in
aaa
push
inc
or
add
add
fs
jnp
pop
cmpsl
loopne
mov
xchg
sti
int
stc
int
xor
mov
aaa
aas
rorl
add
out
inc
mov
ljmp
push
imul
bound
pop
inc
add
add
or
add
add
dec
add
add
adcb
js
or
or
mov
add
sub
mov
inc
loope
leave
and
add
cmc
adc
lahf
ja
mov
fwait
jnp
std
sbb
pop
sub
add
add
add
add
testb
call
in
stc
insl
push
inc
fnstsw
or
addr16
sbb
push
jle
inc
xchg
ret
dec
push
les
and
inc
xor
leave
sub
add
add
pop
int3
add
mov
pusha
add
add
cmp
mulb
mov
mov
and
icebp
stos
push
test
lds
faddl
jns
jne
bound
dec
ret
leave
insl
mulb
test
cmp
ja
xorb
and
add
add
pop
mov
repz
jne
add
add
push
add
add
add
stos
inc
jo
xchg
stc
add
lods
mov
inc
ds
and
mov
mov
add
add
popf
or
add
add
add
jecxz
in
xlat
out
sub
daa
sarl
sub
stos
aad
xchg
mov
imul
dec
or
add
add
add
cmp
jge
daa
shlb
rcll
dec
or
enter
lods
push
xor
add
aam
addr16
cmp
cmp
nop
test
cwtl
enter
or
and
add
add
add
add
bound
jno
mov
xor
jb
dec
lahf
sub
scas
into
outsl
mov
add
add
lds
stc
inc
pop
push
addr16
popa
arpl
dec
add
xchg
xor
dec
mov
jnp
adc
mov
dec
pop
daa
lahf
outsb
push
jl
inc
movsb
mov
xchg
adc
push
sub
add
add
and
add
add
aas
out
je
mov
es
cld
add
add
xchg
scas
mov
mov
add
add
sbb
add
dec
mov
repnz
lahf
add
and
arpl
add
add
add
add
pavgb
add
add
movsl
aad
data16
andb
sbbb
inc
add
push
stos
cmp
jmp
pop
cltd
and
fcompl
adc
loopne
add
js
add
add
sub
add
push
push
push
lea
std
out
mov
mov
add
inc
cmp
add
add
cmp
mov
mov
push
sub
das
mov
aad
mov
pusha
mov
push
and
lods
int3
fldpi
icebp
fnclex
adc
scas
add
scas
xor
add
stos
mov
lcall
sbbb
xchg
or
push
lea
mov
jb
pop
mov
out
or
lods
fildll
sbb
stc
and
add
add
mov
mov
pusha
add
add
dec
test
leave
dec
sub
mov
mov
add
add
stos
roll
jne
mov
in
add
add
add
push
lods
push
adc
mov
ficoml
in
lods
es
xor
add
add
out
mov
lds
sti
jecxz
test
dec
mov
dec
test
sub
add
add
addl
add
or
xchg
push
lret
out
push
cltd
rorl
add
add
pop
add
mov
dec
inc
inc
test
mov
add
add
mov
fstpt
push
dec
add
add
pop
shlb
add
add
add
cmp
xlat
sbb
mov
cmp
mov
sbb
push
jg
sub
add
add
into
mov
jle
push
dec
add
add
add
cmp
je
inc
mov
dec
add
add
and
add
call
inc
add
add
int3
addl
gs
scas
adc
add
adcl
xor
insl
clc
adc
add
sbb
add
add
pop
js
shlb
sbb
mov
mov
pop
push
test
mov
mov
ljmp
popf
les
add
add
pop
or
add
add
std
clc
cmp
jmp
sbb
add
in
xor
ficoms
sahf
mov
mov
lods
js
shrl
cwtl
testl
or
add
add
daa
jb
mov
mov
inc
mov
xchg
pushf
out
push
cmp
pop
push
xchg
jecxz
test
fcoms
add
mov
jmp
rorb
xchg
lock
popa
addr16
pop
pushf
clc
cmp
mov
scas
xchg
pushf
mov
sbb
add
ss
je
ljmp
loope
mov
and
cld
inc
add
add
stc
push
subl
add
xlat
dec
out
and
adc
push
add
mov
add
add
dec
xor
add
add
cmp
xor
add
xorb
add
jbe
dec
mov
scas
jl
jecxz
repz
add
add
fldcw
lahf
pusha
mov
ljmp
add
leave
icebp
push
out
mull
mov
imul
or
loop
sub
or
add
add
xor
sub
jle
fimuls
pop
jp
sbb
mov
add
add
push
mov
jns
xchg
mov
arpl
mov
fidivrs
in
bound
les
add
sbb
daa
sbb
and
add
add
jo
jne
sbbb
cmp
ret
add
add
ss
mov
rclb
jno
loop
in
pop
shrb
push
scas
add
add
js
adc
add
cld
data16
and
dec
adc
and
scas
jb
pop
add
sub
add
add
in
push
repnz
ret
dec
mov
sbb
movsb
or
push
fdivl
adc
add
add
pop
iret
neg
pop
lahf
std
sub
add
dec
rolb
or
jae
pop
cwtl
add
lret
insb
add
add
repz
adc
mov
popa
stc
or
add
add
add
add
add
mov
xchg
pop
mov
aas
loopne
subl
mov
mov
adc
xor
add
add
mov
xchg
mov
push
movsl
sub
fidivrl
int
insl
sub
lock
aad
cmp
jnp
je
in
arpl
loop
sahf
and
add
add
add
adc
mov
adc
fstl
fnstenv
mov
add
push
cs
mov
fwait
jno
push
aam
mov
or
stos
pop
subb
scas
in
inc
mov
fsubrs
loopne
add
add
addr16
push
add
add
lock
int3
jne
pop
push
movsb
movsb
ret
mov
xchg
pop
dec
stc
mov
push
aam
in
aas
dec
into
stos
add
ljmp
in
ja
fwait
mov
cmp
enter
mov
sub
add
add
popf
popf
inc
sar
mov
and
add
add
add
add
cmc
mov
xlat
sti
in
pop
xchg
xchg
inc
sub
add
add
fildll
push
add
add
sahf
mov
int
push
xor
inc
mov
rol
ds
pusha
add
add
cmp
loop
cwtl
mov
jmp
mov
sti
mov
jmp
and
stc
insl
sbb
outsb
xor
in
push
mov
add
sbb
dec
add
add
xchg
frstor
dec
and
add
add
add
out
subl
adc
mov
xchg
out
jb
lcall
ja
add
add
aas
and
pop
inc
jle
and
sub
add
add
stc
push
ja
lcall
arpl
pop
inc
imul
add
push
enter
mov
jbe
push
inc
aas
imulb
add
add
lds
or
push
or
or
xor
mov
cli
push
pop
ficompl
add
add
add
add
cmp
and
mov
mov
test
push
es
outsb
sbbb
aad
les
mov
mov
mov
pop
inc
je
jmp
sub
sbb
push
and
in
jbe
add
add
scas
and
push
shl
mov
add
test
loope
aam
stos
bound
mov
sbb
pop
dec
insl
fwait
gs
clc
outsl
pushf
fsubr
sti
stos
popf
popa
add
mov
add
aad
xchg
ret
adc
mov
add
add
add
pop
xchg
pop
inc
mov
xor
aas
sub
pop
adc
clc
mov
mov
sub
fs
sbb
daa
mov
xor
add
push
notb
mov
out
mov
and
mov
mov
add
add
sbb
out
daa
mov
add
xchg
fadd
xchg
into
out
pop
sbb
in
inc
add
add
loop
xor
pop
pop
sub
stos
add
add
add
imul
bound
roll
jnp
call
shl
shl
mov
shll
mov
push
rcl
push
xchg
mov
sub
add
add
das
mov
xchg
and
aam
mov
pop
pop
lock
add
add
cwtl
aaa
lds
push
or
or
cwtl
sub
ret
or
call
jo
sub
jno
sbb
aaa
or
add
add
add
add
sti
dec
pop
shr
in
ffreep
sbb
push
dec
and
scas
mov
or
ds
mov
dec
add
add
cmp
dec
add
inc
stc
out
mov
jne
lds
les
mov
add
loope
test
sub
add
add
test
imul
add
cwtl
or
fsubrl
add
add
fwait
and
in
jns
mov
mov
ja
js
or
add
add
add
add
add
add
push
mov
jo
mov
nop
lods
lods
mov
mov
je
pop
inc
outsl
jb
add
add
in
scas
xlat
les
ljmp
add
mov
mov
dec
mov
cmp
jno
out
cli
rcrl
cmpsl
jb
pusha
mov
pop
popa
icebp
loop
cltd
xchg
and
xor
aam
jmp
mov
mov
sub
adc
add
jne
or
xor
lahf
fdivrs
clc
fdivrp
mov
cmc
es
dec
and
add
add
gs
js
jl
ret
mov
es
ja
fs
leave
add
add
cmp
add
out
out
das
lret
rolb
icebp
jno
stos
xchg
out
jns
ret
or
in
mov
xchg
push
inc
pop
das
sub
popa
test
out
repnz
mov
and
add
add
fisttpll
test
cli
mov
push
fldcw
mov
push
jge
hlt
cmpsl
inc
push
mov
add
mov
mov
xor
pop
mov
sub
add
add
pop
xchg
aas
loope
out
and
adc
sub
add
add
cmc
add
add
add
or
inc
mov
inc
aaa
enter
adc
pop
lds
out
rolb
add
add
out
call
mov
and
xor
sub
mov
sub
ret
lahf
into
xchg
mov
xchg
pusha
mov
mov
mov
mov
cmp
cli
add
add
add
add
add
jns
mov
cmp
pop
out
cmp
inc
sti
lret
or
lock
add
or
test
lahf
call
dec
add
add
mov
mov
outsb
mov
mov
test
fwait
sahf
dec
popf
sub
dec
mov
xchg
mov
add
add
and
stos
or
xor
ret
cmp
mov
and
mov
xchg
pushf
jno
ret
ret
pop
fs
dec
add
add
arpl
xor
inc
mov
mov
sub
xchg
adc
xchg
fcompl
in
or
nop
xor
in
out
inc
push
mov
pusha
mov
imul
loope
push
pop
xor
dec
pop
js
cmp
dec
inc
mov
xchg
rolb
sub
add
add
xchg
in
out
cmp
xchg
aam
push
or
dec
out
test
test
jmp
movsl
pop
cs
fnstenv
push
mov
mov
or
dec
adc
movsl
scas
xchg
cmp
push
test
sti
shlb
pop
loope
inc
push
cltd
add
xchg
xchg
pop
int
call
ds
adc
loopne
inc
sub
add
add
aas
cld
bound
add
add
mov
xchg
inc
inc
dec
das
sub
add
add
je
lret
add
add
cmpsb
js
add
add
je
pop
jmp
out
adc
mov
addr16
add
add
lds
push
mov
or
cld
mov
fists
das
inc
cmc
int3
cltd
add
int
xor
test
xor
sbb
lea
mov
pop
test
sti
mov
divl
test
fildll
inc
mov
pop
and
add
and
add
add
sbb
adc
add
jp
cmpsb
popa
dec
ror
xorb
mov
mov
mov
adc
nopl
cmp
fwait
sub
push
pop
pop
jne
add
add
add
xor
cltd
sarb
add
inc
imul
cmp
in
xor
mov
xchg
enter
sbb
xchg
push
loop
ret
fsubrs
movsb
push
sbb
mov
add
jno
mov
das
ret
test
fstpt
add
add
test
mov
cltd
pop
sbb
movsl
sub
add
add
pop
push
daa
in
into
call
fs
push
sub
or
add
add
add
jmp
and
add
add
loop
jmp
add
and
push
mov
ss
sub
add
add
decl
push
rorb
push
inc
dec
inc
add
add
mov
mov
mov
and
repz
subb
sbb
pop
jecxz
push
push
ljmp
mov
sbb
rcrb
add
add
inc
xchg
call
pop
and
fdivrp
inc
lock
cmp
push
sbb
scas
sbb
xchg
je
and
lds
out
xchg
test
xchg
fcoms
mov
or
add
add
adc
add
add
fcoml
mov
leave
push
adc
outsl
push
lock
mov
mov
jl
cli
mov
xchg
inc
fisubrs
mov
push
or
add
add
add
add
es
adc
out
xchg
lret
or
subl
fwait
push
call
sub
into
xor
inc
add
add
mov
push
jmp
mov
ret
iret
les
pop
push
pop
mov
das
bound
add
sahf
dec
add
add
xor
xor
arpl
pusha
mov
aam
in
mov
dec
not
loope
add
cmp
or
push
dec
in
push
iret
sub
mov
outsl
mov
jle
pop
pushf
or
stos
loope
mov
mov
loop
inc
dec
xchg
push
or
rcl
inc
mov
lea
or
cmp
dec
pop
mov
add
add
push
push
push
sub
add
add
imul
xchg
or
mov
aad
mov
repnz
cmp
mov
fcomps
lret
repz
fnstcw
gs
push
pop
out
xchg
ficoms
dec
jns
cltd
movsb
push
dec
adc
sbbl
lock
aas
je
sti
mov
cmp
and
cmp
push
pop
adc
pop
ljmp
add
imul
or
dec
mov
xchg
or
les
sub
xor
aas
xchg
sub
xor
frstor
xchg
sbb
mov
pop
push
sbb
xor
xchg
add
add
add
jmp
mov
stos
rcrl
add
rorl
mov
add
add
inc
daa
mov
inc
xlat
add
pop
in
push
pop
lock
mull
mov
orb
gs
fsubrp
and
add
add
sub
in
push
or
or
in
in
mov
mov
lret
cmpl
in
push
adc
adc
loop
clc
push
rcr
inc
rolb
xor
push
aaa
addr16
xlat
shlb
xchg
jl
sub
aaa
les
add
fisubrl
sbb
or
add
idivl
pop
add
movsb
push
das
mov
popf
mov
or
add
sbb
pop
sti
cmpsb
xchg
add
add
test
add
sbb
pop
jecxz
int3
mov
ds
imul
or
and
jns
push
mov
sub
add
add
xchg
xor
fnstenv
add
add
push
or
mov
add
mov
add
add
add
add
test
pop
fsubrs
mov
mov
aad
and
sub
lods
push
lcall
shll
pop
into
int3
roll
xchg
js
or
lret
scas
adc
mov
orl
add
add
xchg
mov
lret
add
add
mov
sub
dec
pop
lods
cmp
fisttpl
jge
loopne
push
or
jp
pop
jecxz
jl
test
add
xor
add
lods
cltd
mov
add
or
mov
mov
repz
and
sbb
in
add
add
cltd
in
push
cmp
cmpsl
stos
inc
mov
mov
push
jmp
andb
test
mov
hlt
mov
lods
adcb
jmp
call
mov
addl
adc
and
call
cbtw
mov
xor
add
mov
sbb
decl
jl
jmp
dec
push
inc
test
nop
test
mov
mov
cmpsl
cmp
inc
je
add
and
add
daa
sub
mov
stos
mov
mov
mov
pop
xchg
loopne
aad
pop
pop
push
stos
loop
iret
jge
mov
loopne
sub
mov
or
add
add
add
add
arpl
push
push
jns
add
add
mov
add
and
fistpll
movsl
fidivl
mov
xchg
xor
jne
adc
xchg
orb
movsb
cmpl
nop
mov
mov
adc
cltd
pop
or
mov
testb
push
sub
pop
movsl
ljmp
out
mov
push
adc
add
aad
rclb
jg
je
jecxz
add
add
andl
add
stos
aaa
xchg
fiaddl
add
add
add
hlt
loope
and
movsb
and
out
dec
cmp
and
add
rol
rolb
call
mov
pop
xchg
sbb
mov
xchg
into
xor
subb
fcompl
mov
jmp
lods
xchg
add
ss
sub
add
add
cli
scas
cmpsl
imul
mov
xchg
test
outsl
push
adc
shll
mov
sbb
pxor
mov
mov
push
xchg
ja
pop
shl
fildll
add
insb
mov
mov
divl
outsl
fsubs
je
mov
pop
mov
int
adc
leave
lea
in
mov
and
add
add
add
add
add
out
incl
cmpsb
aaa
std
out
js
out
ss
in
jg
into
rcrb
lahf
xor
xor
mov
popf
xchg
movsl
push
cmp
push
int
es
cmp
inc
fimuls
out
push
out
fisttpl
mov
inc
inc
push
jo
dec
push
mov
add
movsl
push
or
mov
test
or
scas
xchg
pop
push
mov
idivl
mov
add
add
cmpsb
pop
and
add
add
add
add
popf
or
add
add
pop
jecxz
push
insb
mov
hlt
cmpsl
lds
add
pop
ds
int3
push
inc
add
add
pop
cmp
add
xor
or
push
inc
push
cltd
es
cmpsl
loope
xchg
sbb
subb
add
pop
sub
rcrl
push
scas
sbb
add
add
mov
adc
xor
aaa
out
mov
jmp
mov
arpl
adc
outsl
mov
add
add
repnz
insl
popa
xchg
mov
stos
xchg
mov
mov
inc
add
add
retw
das
bound
jno
or
push
ds
mov
sub
movsl
scas
movaps
jb,pn
xor
cmp
push
sub
add
add
cld
sahf
insl
fnstcw
cmp
xchg
pop
pop
cmpsb
rolb
add
add
xchg
adc
sahf
in
jnp
imul
adc
movsb
push
loop
rcrb
rorb
push
cltd
cmpsb
js
add
add
pop
pop
rclb
xlat
out
add
dec
mov
sbb
sub
jae
jmp
cmp
and
xchg
fs
je
cmp
call
paddd
inc
sbb
add
add
dec
mov
imul
sub
add
or
xchg
dec
inc
dec
stos
xor
adc
adc
push
arpl
push
and
mov
mov
scas
mov
jge
in
je
ljmp
cli
mov
scas
add
add
add
add
add
daa
nop
push
repnz
inc
mov
ljmp
cmp
add
mov
stos
pop
insl
orl
inc
out
push
mov
add
cmp
imul
mov
lea
mov
mov
xchg
jmp
add
into
clc
repz
cld
sub
add
add
add
dec
repz
mov
inc
and
add
add
imul
mov
rorl
add
add
mov
jne
mov
in
aas
and
jg
lret
push
lahf
and
add
xchg
call
out
scas
fcomi
or
dec
std
pop
insl
jge
add
add
mov
add
add
inc
pop
lret
push
adc
jnp
add
add
sar
daa
popf
sbb
and
repnz
int
xor
push
arpl
in
xchg
xchg
add
inc
mov
pushf
in
xlat
movsb
rclb
add
add
icebp
lds
add
enter
push
loop
fimuls
push
sbb
mov
adc
or
add
add
add
dec
mov
or
inc
lock
test
adc
add
add
adc
test
cmpl
xchg
in
fucomip
mov
add
rol
sub
add
add
testl
mov
add
add
sbb
add
add
mov
fcom
cwtl
test
cmpsl
movsb
fsub
adc
std
data16
cmc
mov
add
cwtl
pusha
mov
add
add
jl
pop
xchg
add
add
add
add
add
add
add
jno
aad
and
ja
sbb
fcoml
sub
add
add
add
add
ljmp
add
jno
out
leave
add
sub
into
jbe
add
add
add
in
push
jo
mov
add
daa
loop
cwtl
pushf
lea
ret
add
dec
or
add
add
push
lret
dec
add
add
adc
add
mov
add
add
mov
dec
leave
shlb
int3
enter
add
add
icebp
sub
test
lret
or
add
add
jp
ljmp
stos
lods
lahf
inc
jae
add
xor
inc
lds
push
add
add
add
add
scas
clc
push
rorl
add
push
xorb
fisttps
add
add
push
movsl
int
mov
shl
xor
mov
fldcw
or
add
cmp
pop
das
mov
cwtl
mov
test
mov
add
add
arpl
sbb
mov
mov
dec
fldl
icebp
and
cmpsb
fs
test
and
add
pop
inc
mov
ja
xor
fistps
mov
add
add
add
insl
and
add
add
jl
outsl
mov
mov
sub
test
xchg
mov
jge
add
add
add
add
add
add
fcoms
xor
mov
add
sub
clc
jne
ss
add
add
lcall
cmc
sbb
mov
push
pop
cmc
hlt
jno
mov
cmpsl
push
enter
je
jne
sti
jno
not
outsb
dec
fwait
lods
lock
xor
scas
add
ret
cmp
insb
mov
scas
sub
mov
in
gs
scas
outsl
mov
mov
xlat
sbbb
movsb
dec
xchg
movsb
fsts
push
incl
add
add
jg
nop
jne
jno
call
aas
inc
arpl
pop
jecxz
mov
pop
xchg
adc
inc
fsubrl
mov
xlat
scas
and
add
add
add
add
test
push
outsb
add
and
push
clc
jb
fmul
addl
add
sbb
mov
add
ror
movsbl
push
test
std
aaa
xor
pushl
orl
test
sti
and
mov
pop
sub
dec
ds
sbb
jns
nop
add
dec
add
add
jne
ss
add
cmpb
mov
cmp
add
add
mov
push
push
add
ljmp
das
inc
add
add
adc
mov
add
add
jbe
add
add
pop
jmp
inc
mov
push
ljmp
mov
inc
xchg
or
mov
dec
xor
repnz
outsb
clc
shll
jecxz
arpl
addb
or
das
leave
xchg
jnp
add
and
fisttpl
fxch
xor
rorb
gs
jne
xor
dec
cmp
mov
dec
sbb
add
add
ror
sub
add
ret
mov
mov
xor
sbb
cmp
imul
rorb
add
ret
or
sbb
add
adc
aaa
mov
cwtl
mov
addr16
outsl
out
push
push
insb
add
add
aad
sub
add
add
add
add
add
dec
add
clc
jo
bnd
sahf
lds
iret
je
test
xor
cld
cmp
push
gs
rol
int3
sbb
pop
out
add
add
push
pop
push
push
or
add
add
xor
out
mov
add
add
mov
pop
adc
mov
test
and
loopne
add
add
add
push
sbb
add
add
cmp
add
add
add
mov
xor
mov
enter
add
sub
and
add
add
mov
jge
loope
in
adc
ds
test
jp
and
xchg
sub
lret
mov
stc
and
add
add
cmp
push
sbb
mov
inc
and
add
add
push
sahf
mov
add
add
clc
push
stos
pushf
test
and
test
xchg
push
push
or
add
add
add
add
sub
fsubs
test
add
add
popa
sbb
lods
adc
push
int3
cmp
insl
cmpsb
xor
add
add
add
mov
pushf
sub
xchg
push
jg
mov
out
xor
xchg
mov
insl
repnz
add
mov
xor
jl
cmpsb
aam
mov
xor
faddl
arpl
sti
mov
in
pushf
xchg
test
andb
add
sbbl
xchg
inc
in
pop
arpl
push
push
sbb
dec
lods
cmpsl
ficomps
jno
out
add
add
inc
sysenter
xor
add
add
add
add
fdivs
lcall
adc
cmpsl
push
scas
pop
je
rcll
popf
dec
lea
std
enter
xlat
mov
sub
xchg
add
add
mov
aas
ja
add
add
sub
pop
push
or
xor
mov
mov
ret
cmp
scas
push
inc
fpatan
jle
xor
and
mov
dec
mov
ja
dec
xchg
adcl
xchg
lds
lea
mov
scas
jle
add
add
add
add
popa
imul
andb
sbb
das
cmp
add
add
xchg
mov
jno
cmp
xor
stos
enter
add
add
or
mov
pushf
dec
add
push
shll
les
sbb
jnp
sbb
mov
mov
mov
jb
sar
inc
in
adc
add
add
add
add
mov
inc
add
add
inc
add
add
fildll
push
cs
inc
jg
cs
push
inc
xchg
imull
xchg
pop
jl
mov
popf
mov
mov
inc
lcall
mov
ds
xor
mov
testl
and
add
add
lods
sbb
jo
mov
mov
sarl
mov
sub
add
add
mov
or
add
add
add
add
fmuls
add
out
icebp
and
add
add
pop
cmpb
lahf
loope
inc
sub
bnd
pop
xchg
or
mov
mov
and
or
or
bnd
int
ljmp
jge
dec
mov
pop
mov
ljmp
cmp
rcl
jg
xor
add
add
push
pop
stos
xor
mov
sub
in
ret
int3
jne
push
xor
mov
out
aaa
mov
mov
aam
jbe
call
and
movsl
push
popf
fsubs
add
add
sbb
mov
jno
mov
imul
or
loopne
and
outsl
and
add
add
mov
sub
dec
imul
add
scas
pop
sub
fdivrs
mov
fbstp
lods
arpl
add
add
mov
iret
mov
xchg
cmp
cli
int
add
add
dec
std
jb
inc
add
add
push
jg
mov
repz
imul
and
add
add
pop
and
push
jmp
and
add
add
gs
and
jg
sub
add
add
or
push
mov
jns
icebp
aaa
imul
mov
into
cld
jo
push
les
sub
cmpsl
addr16
pop
ss
sub
pop
mov
pushf
cmp
pop
enter
cmp
add
add
mov
loope
popf
and
sbb
mov
shrl
fwait
lods
out
cmp
popa
cmpsl
dec
add
add
xchg
fldcw
add
jnp
cmpsl
jbe
push
pop
inc
dec
cld
cli
stos
sti
aad
mov
adc
and
mov
pushf
xchg
lds
pusha
add
add
jo
pop
jecxz
hlt
ljmp
mov
xor
imul
mov
mov
add
push
mov
dec
mov
mov
mov
jecxz
push
mov
lods
subb
jns
lods
cmp
shlb
or
mov
push
lahf
jl
cmpsb
jg
or
add
dec
mov
pushf
mov
add
add
fsub
scas
adc
fs
fsubp
add
loopne
scas
mov
push
insl
push
inc
jns
push
or
lds
add
cmp
pushf
aam
cmp
add
aas
xor
add
push
sahf
and
add
add
sub
add
add
push
sbb
pop
xchg
and
sbb
mov
fmul
push
mov
pop
movsb
aam
xor
push
pop
pop
xor
mov
mov
mov
stos
aad
jg
xchg
push
popf
vmread
mov
pop
adc
push
pop
and
mov
xor
shrb
fbld
xchg
hlt
pop
sbb
add
add
aas
cmp
outsb
ja
and
add
add
in
test
fcomip
int3
push
sti
xor
movsl
sbb
outsb
mov
mov
dec
sub
or
and
add
add
insl
and
xchg
pop
nop
push
test
jns
mov
add
add
lret
jo
std
cmp
xlat
loopne
mov
or
cmp
mov
popa
ds
mov
mov
aam
into
shlb
lea
add
or
add
add
out
fistl
nop
adc
stos
mov
push
out
call
push
pop
mov
in
out
stc
test
fidivrs
repnz
add
pushf
outsl
cmpsb
xchg
push
lods
ja
xchg
adc
add
add
daa
adc
out
mov
add
add
mov
les
and
cmpsb
mov
scas
outsb
enter
add
je
fiadds
cld
mov
add
cmc
dec
jge
add
add
out
out
mov
and
iret
or
add
push
mov
jl
in
pop
inc
sbb
mov
pop
mov
mov
add
xor
xchg
pop
sbb
aaa
cltd
and
add
add
add
add
xchg
adc
outsb
jecxz
lcall
dec
jmp
fnsave
addr16
push
inc
jmp
dec
add
add
adc
jmp
jnp
sti
xor
lret
aam
mov
into
es
mov
cmp
adcl
fsub
pop
rcrb
test
mov
adc
add
xchg
inc
cmp
xlat
jbe
leave
test
in
mov
bound
add
adc
shrb
outsb
inc
mov
mov
sub
fsubrp
stos
dec
pop
pop
inc
xor
add
scas
pop
sbb
ss
int
xor
mov
and
add
add
add
add
inc
mov
stos
mov
xor
daa
repz
sbb
xor
xor
add
aam
testl
or
fisttps
mov
cmp
add
add
and
mov
mov
mov
sbb
xchg
fbstp
int3
loope
xor
sub
add
add
test
pop
in
mov
add
add
or
mov
jne
je
les
mov
lods
out
sub
add
add
fstl
fisubl
xchg
mov
ficoms
add
add
or
add
add
cmc
insb
add
add
cmp
add
mov
jns
insb
mov
sti
daa
sbb
out
fs
mov
add
mov
push
sbbl
iret
lds
gs
xchg
add
or
pop
jae
rcl
out
popf
fwait
xchg
push
pop
lret
stc
movups
add
add
rcrb
dec
sbb
loope
inc
add
add
cs
add
aaa
ficoml
sbb
cmpsl
fisttpl
repnz
xchg
mov
call
xor
faddp
add
mov
imul
addr16
add
std
jecxz
pusha
mov
xchg
gs
iret
pop
imul
outsl
cmp
movsl
test
leave
inc
sub
nop
adc
mov
lock
pop
cltd
int
inc
add
add
and
add
add
popa
add
or
add
add
add
add
popf
aam
push
sub
add
add
sti
or
mov
mov
add
cmp
inc
mov
mov
addb
out
loop
dec
lcall
add
add
jp
test
jp
ret
bound
add
repz
add
add
mov
mov
leave
rcrl
xchg
push
push
add
add
add
add
add
xchg
andb
outsb
rcll
ja
push
int
push
lcall
hlt
add
add
add
mov
popa
sbb
addr16
push
cmp
add
add
xor
rcr
push
aas
xchg
mov
lea
or
add
rorl
sub
add
pop
xchg
lahf
jg
xlat
push
xor
mov
add
add
mov
sbb
ljmp
sub
lcall
enter
mov
fcompp
cmp
inc
add
add
or
jnp
in
dec
call
push
add
add
loope
sar
mov
add
add
lret
xor
add
add
push
add
jno
iret
pop
push
popf
mov
dec
dec
add
xor
in
push
adc
push
ja
pop
andb
lret
cltd
mov
and
mov
int3
dec
add
add
add
lods
add
fiaddl
ds
imul
xorl
jmp
inc
sbb
sti
pop
cld
stos
pop
adc
in
std
jecxz
popf
inc
int
ss
adc
fs
sti
pop
pop
add
add
add
mov
mov
test
cmp
repnz
andl
mov
push
mov
mov
fdivrs
add
add
cli
rcrl
xorl
mov
jne
test
add
stc
mov
push
ss
jmp
add
incb
mov
int
jb
arpl
xchg
loopne
fwait
push
pop
mov
mov
xor
scas
jl
call
das
sbb
ret
xor
enter
or
mov
aam
js
jge
std
mov
gs
add
add
pop
xor
in
js
cs
add
add
pop
jnp
xor
mov
mov
dec
mov
mov
mov
adc
push
dec
in
ljmp
mov
mov
jne
sti
cmpsb
fs
sbb
or
clc
test
or
bound
or
mov
das
fs
sub
das
aad
cmpl
pop
sbb
xor
movsl
mov
dec
push
push
mov
inc
inc
sub
xor
sub
mov
scas
pop
test
pop
fcompl
icebp
pop
mov
add
mov
cmpsl
shll
ret
adc
in
cmp
std
out
lea
push
mov
popa
test
sub
add
add
aaa
lds
add
mov
fwait
clc
cli
add
add
add
inc
mov
hlt
sub
add
add
pusha
add
add
add
add
inc
jle
xor
add
es
cltd
int3
cmpsl
arpl
repz
adc
jmp
in
inc
add
add
xchg
test
jmp
push
mov
sarb
addr16
dec
mov
nop
xor
das
test
cmp
sbb
dec
and
cmpsl
sbb
sbb
add
add
jae
cmp
and
add
add
push
out
pop
xlat
mov
rcrl
xor
ret
mov
pop
out
mov
loope
rorb
add
pop
mov
lcall
cli
mov
mov
lcall
ljmp
mov
inc
mov
sbb
or
add
add
mov
mov
dec
add
add
jno
push
mov
add
add
stc
leave
adc
xor
add
cmp
add
movsb
push
rcll
sti
or
mov
push
jmp
add
loope
mov
addl
push
sbb
xor
jmp
add
andb
js
int3
imul
mov
add
add
xchg
sbb
pushf
jb
pop
mov
imul
lds
loope
adcl
add
sbb
aaa
in
les
mov
rcl
push
mov
mov
call
jae
pusha
add
add
xchg
popf
movsl
hlt
sub
xchg
movsb
stos
cmc
and
inc
repnz
nop
stos
or
add
add
xor
imul
cld
or
pusha
add
add
in
outsb
adc
add
add
add
add
add
cmp
mov
enterw
mov
add
add
add
ret
call
inc
add
add
imul
iret
dec
sbb
or
mov
lods
dec
mov
ret
dec
loopne
mov
lds
add
add
ss
xor
scas
push
test
add
xor
out
lret
add
add
dec
fsub
ds
loope
test
mov
add
add
add
mov
jae
xchg
out
std
rcl
and
add
add
and
mov
dec
or
insb
add
add
movsl
dec
mov
cmpsl
ds
and
in
mov
add
add
stos
xchg
lret
or
add
add
pop
xor
call
fidivs
add
popf
mov
lahf
andb
add
bound
imul
add
addr16
inc
pop
sbbl
mov
add
push
sahf
push
repz
push
or
adc
jne
mov
popf
ss
jp
jmp
push
mov
add
add
xor
xlat
mov
add
xchg
xchg
scas
scas
inc
sti
ss
add
data16
in
push
xchg
jns
les
loop
adc
adc
add
add
mov
insl
xchg
lea
mov
cli
nop
xor
xchg
jae
popf
out
adc
cmp
add
add
les
xor
lret
pop
adc
data16
mov
rorl
pop
imul
das
inc
mov
js
rolb
add
add
shrl
xchg
pop
jae
sbb
scas
jno
lock
scas
adc
sub
aas
dec
lock
push
pop
seto
in
je
lds
cmp
xlat
xor
xchg
or
lods
test
cmpl
incl
inc
mov
xor
cmp
cmc
push
clc
add
add
add
pop
push
loop
dec
fucomi
or
add
add
jns
mov
into
cwtl
xchg
cmp
mov
cmp
xor
add
add
add
add
jp
shrb
add
add
xchg
push
out
lcall
add
inc
cli
ds
add
add
cwtl
andl
jb
js
jl
je
inc
ds
jle
cmp
int
ja
or
sbb
mov
lret
mov
cmpb
mov
push
xor
xchg
in
jae
sti
push
cmc
inc
add
add
outsl
mov
pop
mov
lcall
add
in
pop
push
in
lds
fidivrs
cmp
pop
fcmovne
fimull
orl
sbb
pop
jmp
ret
inc
add
add
test
add
add
push
inc
mov
xchg
in
cli
inc
push
mov
stc
push
inc
adc
inc
stos
fstpt
xor
mov
adc
ss
xchg
jno
sub
into
fnsetpm(287
adc
push
jge
jecxz
pop
sbb
and
add
add
adc
mov
mov
sbb
add
add
and
ret
imul
pop
lret
sub
pop
std
and
add
add
jb
jle
ffreep
sub
add
add
push
adc
add
add
add
cmp
das
leave
jecxz
mov
in
cltd
sahf
sbb
je
lds
and
repnz
movsl
cmpsb
jg
jns
cmp
dec
idivl
push
repnz
mov
pusha
add
add
inc
mov
lods
push
aas
sbb
xchg
lcall
add
add
add
das
mov
add
push
xchg
mov
decb
fidivrl
fs
scas
mov
xor
jecxz
loopne
mov
add
add
jnp
add
add
aam
movsb
loopne
jl
fstpl
pop
push
test
lret
jmp
sti
cli
std
ja
je
mov
sub
and
and
test
add
add
bound
jnp
je
je
mov
adc
jmp
push
popl
es
inc
iret
cmp
pop
repz
jb
jg
cmp
jbe
loope
cmp
data16
adc
fcoms
rolb
xchg
xor
addr16
dec
mov
pop
push
add
add
add
cwtl
out
invd
add
add
xchg
cs
jnp
addl
jns
ja
jecxz
sub
mov
rsm
call
cld
mov
add
add
push
leave
in
ja
sbb
jl,pt
xchg
mov
cmp
add
add
not
xor
mov
jge
pop
addr16
aas
daa
fs
dec
mov
pusha
mov
adc
sbb
fwait
insb
mov
cli
ja
dec
add
popa
pop
aaa
add
add
mov
add
add
push
add
pop
mull
mov
push
out
sbb
mov
icebp
sbb
outsl
test
mov
notb
cmp
and
sar
mov
xchg
add
enter
ret
jnp
sarb
mov
icebp
insl
lods
stos
dec
rcl
inc
mov
mov
shr
xor
add
add
popf
mov
lods
fs
xchg
in
ret
xor
icebp
xchg
fwait
int
sub
cmp
ss
cmpsl
or
test
add
cltd
cmc
xor
repnz
jns
mov
adc
loop
jo
mov
mov
mov
adc
sub
cmp
int
push
adc
add
in
dec
add
add
imul
xor
pop
mov
fmulp
ljmp
stos
mov
aam
ficoml
push
arpl
fstl
fistpll
adc
in
inc
pop
xlat
mov
jbe
add
add
push
and
shl
data16
adc
add
sbb
mov
into
cmp
insb
add
add
adc
add
push
jg
jno
sbb
stos
movsb
into
loope
movntq
pop
lahf
mov
in
inc
inc
push
jns
push
lcall
mov
out
pop
cld
ljmp
setae
add
mov
movsl
mov
dec
popf
ret
pop
lcall
fsubl
add
add
jbe
in
int3
cmp
xor
or
jno
loopne
add
add
inc
push
push
pop
mov
cmpsl
into
pop
mov
icebp
sbb
push
add
pop
mov
dec
add
add
cmpsl
mov
pop
push
push
xchg
out
mov
push
sub
rclb
add
push
fsts
add
add
popa
fidivrs
inc
cmpl
adc
push
and
add
add
lods
loopne
repz
adc
out
mov
or
add
add
repnz
mov
add
add
inc
and
add
add
xorl
das
dec
add
add
push
sbb
add
add
fstps
daa
jne
mov
ret
pushf
inc
add
arpl
inc
or
push
je
lret
and
mov
pop
mov
mov
mov
add
mov
fs
mov
les
loopne
out
add
add
sub
dec
xchg
pop
push
in
scas
dec
pusha
add
add
mov
fcmovnb
push
outsl
clc
andl
add
add
push
and
add
add
add
js
inc
sub
add
xor
shrl
add
add
call
loopne
test
add
add
mov
pusha
add
add
mov
add
add
or
jl
sub
and
mov
mov
cmp
sbb
inc
inc
mov
mov
adc
xor
jmp
mov
faddl
jle
nop
pop
cmp
call
inc
xchg
xchg
sub
xchg
xchg
jmp
cmp
jecxz
push
push
cmp
inc
pushf
add
add
add
gs
rolb
add
rcrb
ret
jne
inc
lods
enter
roll
pop
addr16
imul
jp
pop
ljmp
add
xor
and
add
add
clc
inc
xchg
mov
or
fsubs
sub
dec
sbb
jno
dec
sbb
fbstp
rorl
in
test
test
cmc
jg
sti
out
int3
fwait
xchg
movsb
lcall
daa
repz
push
jg
dec
mov
jo
into
loopne
lea
int
adc
add
mov
mov
push
lea
nop
cmpsb
lahf
popa
pop
mul
pop
ret
icebp
push
pop
push
sahf
mov
pop
push
push
lock
adc
iret
pusha
mov
sub
cmp
scas
pop
adc
je
cli
stc
pop
je,pn
mov
xchg
orb
xor
negb
mov
test
test
outsb
mov
sbbl
pop
lret
gs
divb
rcrb
mov
inc
add
add
lock
test
add
testb
add
sbb
jp
imul
fdivs
or
add
add
xchg
xor
cmp
pop
and
mov
cmpsb
or
pop
loope
mov
jae
push
outsb
mov
fidivrs
pop
mov
xor
add
add
jg
add
add
dec
xchg
fsubl
stos
sbb
mov
incl
inc
mov
adc
jl
mov
sar
adc
jne
or
add
add
icebp
movsb
jbe
jne
xchg
cli
push
mov
sbbb
push
push
sub
iret
jg
xchg
add
jmp
ss
in
les
pusha
add
add
icebp
dec
cwtl
xor
mov
repnz
lret
sbbl
mov
jae
xor
xchg
test
inc
mov
push
ja
icebp
aas
notb
sbb
and
xor
inc
rclb
cmpsl
aam
dec
enter
push
out
je
dec
sbb
addr16
add
add
ret
in
orl
add
add
and
mov
das
mov
sahf
addr16
les
add
mov
lds
pop
cld
add
mov
adc
or
add
add
dec
mov
pushf
repnz
dec
popf
loope
push
dec
mov
mov
ret
push
mov
pop
jbe
xchg
sbb
outsb
sbb
pop
iret
testl
ds
iret
adcb
fistpll
test
sbb
sub
add
sub
fisttpll
dec
adc
xor
mov
sbb
into
and
add
add
sbb
fdivl
pusha
mov
push
popf
je,pn
stc
movsb
data16
mov
jp
lods
mov
insb
mov
jo
not
xchg
pop
pusha
mov
mov
mov
inc
xchg
dec
mov
js
sbb
ret
dec
clc
xchg
clc
push
xchg
xchg
add
cmpsl
mov
add
in
mov
xor
mov
xor
jle
adc
insl
div
pop
in
sbb
hlt
push
pop
ret
jnp
add
rorb
push
inc
insb
mov
out
sbb
xchg
sti
aaa
mov
sti
mov
add
inc
add
add
ja
fs
adc
inc
add
add
push
mov
adc
cltd
into
xchg
fidivs
js
mov
pop
mov
test
pop
ret
int3
in
fistl
mov
sub
add
add
mov
stc
mov
cmpsb
push
and
xor
add
jmp
subb
add
out
ficompl
ret
cmpsb
mov
aam
test
je
mov
sbb
add
inc
sahf
sbb
add
in
pop
add
add
jge
add
add
or
neg
andl
rorl
push
in
pop
pop
incl
test
add
mov
repnz
scas
jmp
add
add
icebp
andl
mov
hlt
mov
test
mov
inc
cltd
or
andl
add
popa
or
add
add
jb
cmp
or
add
add
mov
add
je
sbb
sbb
lret
daa
movb
addb
and
and
cmp
ss
inc
mov
cmc
aas
mov
in
cmp
sti
mov
jp
xor
pop
add
arpl
int
fstpl
pop
sbb
sar
mov
add
add
mov
or
sbbb
aam
inc
add
add
into
mov
sub
add
add
popa
int
and
add
add
add
add
pop
sarb
lods
cmpsl
cmp
ficomps
mov
xor
shll
js
mov
adc
mov
cmp
add
xchg
clc
and
add
add
imul
mov
mov
sbb
add
cmc
sub
add
add
test
jne
je
xchg
movsl
mov
aad
push
enter
mov
push
mov
sub
sub
push
imul
test
shrl
add
add
and
mov
test
jae
cltd
adc
push
lret
and
add
add
ret
les
nop
hlt
xchg
lods
mov
mov
pop
push
and
push
dec
mov
scas
movsb
divb
add
add
mov
xchg
dec
mov
adc
add
add
and
pusha
add
add
scas
test
cltd
testb
xor
sbb
xor
mov
pop
lds
xchg
push
mov
enter
mov
xor
xor
push
sbb
add
inc
ds
pop
jecxz
mov
test
dec
ja
cs
mov
xor
add
add
movsb
lahf
icebp
add
add
add
arpl
inc
popa
dec
mov
push
fcoml
sub
mov
loope
pop
or
add
add
das
pop
aad
outsl
loope
fldt
cmp
and
hlt
loop
add
add
add
add
add
cmpsb
lret
jnp
sbb
shlb
push
loopne
cltd
aad
fdivrl
push
pop
jg
mov
pop
in
mov
addb
add
bnd
aad
ds
jp
xchg
adc
add
add
xchg
mov
xlat
lds
sbb
sbb
pop
and
add
add
dec
mov
sahf
jl
add
mov
cmc
movsl
fwait
imul
add
aad
loopne
mov
in
decl
lret
iret
notb
jp
push
dec
fidivs
inc
push
sbb
enter
stos
adc
lds
add
add
imul
sti
in
xchg
xorb
sub
hlt
jne
mov
es
jns
cs
cmpsl
lret
mov
inc
addr16
dec
test
mov
lcall
sbb
aaa
int3
cmp
pop
push
dec
cmp
lods
xchg
sti
cmp
jne
sbb
pop
push
daa
pop
sbb
or
cmp
lds
jo
jae
lahf
push
addl
jb
mov
add
cmpsb
lods
jge
push
pop
outsl
arpl
jnp
inc
mov
jne
cmpsl
loope
int3
cmpsl
mov
mov
data16
call
mov
sbb
xor
pop
into
mov
adc
mov
mov
xchg
mov
adc
in
fcoms
fistpll
aam
mov
add
add
lods
cltd
jae
inc
std
out
int
ja
cmp
je
and
dec
jne
inc
negb
lods
inc
xchg
cld
fsubrl
std
inc
pop
mov
or
repz
fs
xchg
dec
add
add
lahf
scas
fs
jge
loopne
fbld
out
inc
xchg
mov
add
lods
nop
stos
add
bound
stc
out
xchg
mov
stc
outsb
outsl
sti
or
stc
out
add
enter
cmp
bound
cmp
movsb
xchg
xchg
mov
movsb
pop
mov
sub
add
add
jg,pn
xorb
jne
add
add
cmp
mov
test
jbe
adc
arpl
push
jno
mov
add
add
inc
jg
roll
stc
and
push
fdivp
inc
repz
add
arpl
int
pop
cwtl
fstpl
std
js
lahf
and
jmp
sti
mov
add
add
xor
cmp
aad
xchg
pop
aas
rep
add
add
test
enter
fstp
push
sbb
and
iret
xchg
mov
mov
add
sahf
data16
add
add
adc
fchs
cmp
add
add
loope
dec
add
add
or
add
add
lds
outsb
lods
push
push
mov
add
add
adc
in
cli
imul
add
and
add
add
xor
adc
dec
pop
lea
add
add
dec
mov
pop
sbb
mov
ss
mov
mov
fstl
dec
mov
loop
std
push
xorb
or
add
add
add
add
cmp
sub
repz
push
fcmovu
xchg
mov
xor
cld
push
icebp
xor
insb
mov
in
cltd
jge
xor
xlat
xor
and
loopne
fisubs
gs
and
test
dec
add
add
and
add
add
stos
add
add
add
add
adc
jnp
in
movsl
xchg
insb
mov
in
movsb
std
jp
popa
xor
jmp
ret
push
stos
das
in
ljmp
pop
cmp
jnp
fs
fidivrl
loopne
cmpsb
pop
fidivs
sti
pop
popa
jbe
push
mov
xchg
fistpl
or
sub
add
add
dec
add
int
push
fcomps
cwtl
pop
iret
cld
jns
mov
push
cwtl
test
mov
adc
icebp
mov
pop
mov
push
pop
ss
pop
and
add
add
jle
inc
pop
add
add
add
jecxz
dec
pop
je
out
mov
mov
adc
add
pop
movsb
pop
mov
fmul
sahf
out
lret
push
mul
adc
add
add
add
add
add
movsb
in
inc
xlat
mov
shrb
lods
mov
mov
pop
xchg
lds
test
add
add
add
add
add
push
insl
fcomi
adc
add
add
add
add
add
add
add
ffreep
push
data16
mov
dec
outsl
xor
fs
add
ss
fiaddl
add
jecxz
cli
pop
rorb
or
pop
icebp
or
add
inc
xchg
jge
and
add
add
push
pop
shl
fmul
fiadds
cmc
fbstp
bound
xor
cmpsb
jnp
push
push
dec
pop
pop
add
cmp
rcl
sub
aam
pop
pop
cmpsl
cmp
fisubrl
add
pop
add
add
mov
jne
gs
mov
sub
arpl
push
lret
inc
add
add
or
add
add
lahf
mov
fidivl
mov
add
add
inc
adc
mov
lret
add
bound
sub
hlt
add
add
adc
add
add
rcl
jecxz
pop
sub
adc
fsubrl
es
pop
and
add
add
sbb
push
sbb
push
jle
test
mov
dec
mov
jb
xchg
xor
in
pop
test
aas
sub
add
add
lahf
sbb
add
add
add
mov
int
mov
add
gs
pop
or
stos
fsubp
sub
add
add
mov
inc
add
add
fidivrs
inc
cld
adc
sbb
decl
push
and
add
sbb
movsb
ja
fisubl
dec
mov
sub
add
add
sbb
repnz
cmp
add
add
idivl
maskmovq
testl
mov
dec
add
add
mov
mov
out
pop
mov
lcall
loop
addl
inc
add
add
test
enter
mov
dec
jmp
jae
sub
mov
add
add
mov
dec
and
add
add
js
and
leave
sub
int3
sub
add
add
popf
subl
in
mov
jecxz
mov
inc
add
add
adc
iret
jp
mov
ret
add
add
push
push
jecxz
pop
imul
cmpsb
aas
jae
aaa
pop
xchg
ret
arpl
ds
fbld
ss
dec
pushf
movsl
imul
gs
nop
jl
mov
adc
in
ds
mov
push
inc
stos
in
pop
shlb
add
add
mov
je
cmp
push
jns
jmp
shrl
pop
testl
add
add
cmp
pop
jno
loop
pop
xor
adc
mov
xchg
cwtl
add
mov
add
add
and
inc
push
in
mov
mov
or
add
add
dec
mov
sub
imul
pop
xor
cmpsb
subb
mov
or
leave
push
add
fwait
pop
out
inc
out
loope
mov
sub
mov
int
push
outsb
stos
xor
sbb
lea
cli
or
pop
xchg
add
dec
out
sub
push
push
adc
add
mov
into
cmp
mov
push
cmpsb
push
push
out
fsts
adcb
addl
xor
fsts
push
inc
mov
pop
imul
add
add
add
push
cmp
sub
add
add
add
add
jne
mov
mov
add
add
outsb
rcll
push
and
xor
adcb
add
icebp
jnp
sti
mov
enter
ljmp
clc
mov
pop
rolb
mov
hlt
mov
mov
fdivr
sbb
sbb
add
add
or
add
add
cmp
mov
jae
cltd
and
rorl
dec
fadds
add
add
cmp
add
add
pop
gs
dec
ja
sbb
xchg
mov
push
imul
mov
jge
sbb
and
cmpsb
xorb
cwtl
repz
mov
mov
mov
dec
mov
aad
sub
add
add
mov
fildl
add
add
or
add
add
mov
or
add
add
fnstsw
fsubs
pop
andb
add
push
shl
test
std
sahf
out
push
xchg
xor
and
add
add
fwait
cmp
jp
mov
shl
inc
adc
add
add
ret
lods
mov
jecxz
pop
push
dec
int
shrl
add
add
scas
cld
fsubs
pop
sub
dec
jb
cli
lea
hlt
sbb
push
push
orl
mov
xchg
js
cmp
push
push
inc
lret
cltd
jo
mov
pop
stos
loop
xor
sti
aaa
stos
jae
cld
mov
add
mov
xorb
add
add
push
pop
negl
add
out
es
add
add
jmp
insl
stos
mov
cld
or
cmp
cld
outsl
fsubrl
mov
mov
pop
mov
add
add
fidivs
adc
and
sbb
push
and
add
add
mov
add
add
push
xor
add
mov
add
add
int
sbb
mov
add
mov
jl
inc
aam
xor
cltd
cmp
mov
add
xchg
mov
push
mov
mov
mov
sbb
xchg
jo
shll
push
lods
and
add
add
add
add
notl
mov
add
xor
mov
dec
cmp
add
add
dec
mov
sbb
jmp
add
cwtl
jecxz
rclb
cmc
repz
ljmp
cwtl
jns
scas
pop
pop
mov
test
js
orb
adc
add
add
jecxz
in
or
movsl
jae
aad
test
scas
jmp
movsb
push
jp
scas
xchg
jg
imul
cmp
lods
fidivs
add
add
sub
add
add
add
add
xor
dec
mov
mov
add
sbb
movl
lcall
outsl
mov
nop
mov
add
pop
test
fldt
add
add
jae
push
pusha
add
add
jb
push
jge
sub
mov
jb
sub
add
add
js
jge
test
divl
mov
add
mov
jge
dec
ret
xor
dec
clc
cmpsl
in
xchg
and
jge
in
aaa
ljmp
add
and
mov
nop
in
xchg
add
jl
dec
mov
pushf
cmp
mov
fldenv
sbb
shrl
sarl
jge
mov
push
loop
outsl
sub
jb
roll
jge
mov
in
dec
or
add
jno
jbe
mov
inc
fsubs
add
icebp
test
pop
push
push
pushf
jp
sbb
add
add
add
lahf
in
daa
adc
jp
outsl
fsts
push
jns
js
outsb
jl
lahf
int
and
mov
in
lods
lcall
jecxz
data16
dec
mov
dec
ficoml
inc
mov
nop
into
jg
les
jg
out
jbe
divb
mov
add
add
jp
add
add
pop
cmp
cmp
outsb
adc
sub
add
add
cwtl
push
mov
pcmpgtb
add
mov
fcmovu
adc
rorl
add
add
jge
sbb
jb
add
add
cmp
push
fnstcw
adc
test
add
je
inc
and
adc
mov
jge
jns
nop
xlat
loopne
push
mov
add
add
cmp
test
jecxz
push
aas
inc
mov
jecxz
jmp
mov
mov
lret
dec
mov
add
add
or
adc
cmpsb
rorl
add
das
imul
mov
jl
jo
mov
fistpll
mov
mov
test
aas
xor
fucom
ss
stos
in
clc
cmpl
cmp
inc
int
fs
dec
mov
lds
add
add
add
add
adc
mov
mov
cmpsl
xchg
jp
imul
in
rcl
pop
bound
testb
xor
outsl
addr16
inc
push
sub
fcompl
add
inc
lcall
addl
nop
add
add
add
adc
fists
adc
add
test
mov
popf
mov
negb
xchg
adc
sub
or
add
add
ss
fidivrs
shrb
add
add
aad
push
mov
test
out
mov
xchg
mov
xchg
fldenv
pop
lahf
pop
pop
jae
mov
sbb
in
jg
mov
insb
mov
push
insl
and
mov
push
add
adc
neg
sbb
inc
jb
ffreep
sbb
xor
lahf
shl
lcall
rcl
cs
add
add
lock
lock
rclb
pop
ret
adc
inc
call
mov
mov
sub
mov
movsb
and
insl
sbb
insb
mov
push
jae
rclb
inc
xor
lods
jbe
adc
mov
cmp
add
add
dec
sbb
decb
add
popa
imul
lahf
push
pop
mov
lock
fcmovnb
xchg
xor
movsl
out
push
cmp
and
es
mov
js
cmpl
push
mov
pop
mov
adc
dec
daa
sti
xlat
ficompl
sbb
push
shlb
add
add
mov
orl
push
jns
imul
adc
adc
cmc
shrb
mov
popa
cmpsl
gs
push
jnp
adcl
add
gs
sub
repz
push
push
sahf
jno
mov
add
add
add
or
call
in
add
add
repz
and
add
mov
add
dec
test
inc
inc
add
add
push
and
pusha
mov
and
add
add
mov
add
dec
jbe
sub
add
add
sbbb
or
scas
popa
sub
sub
add
add
add
add
fcomps
xchg
cmp
mov
enter
leave
repz
cli
mov
dec
pusha
mov
fidivs
fiadds
add
add
cmp
cli
outsl
roll
dec
sbb
out
adc
inc
push
jg
adc
add
add
out
xor
pop
subl
pop
jecxz
add
add
jns
nop
cmpl
add
adc
pop
call
mov
add
add
mov
dec
or
add
add
sti
jg
loopne
jp
pusha
mov
jb
xchg
inc
dec
xor
pop
insl
dec
or
mov
add
add
rcll
push
mov
xchg
fsubs
add
add
xor
fstpl
push
mov
pop
mov
filds
insl
mov
mov
sbb
xor
add
add
dec
pop
dec
jp
jns
mov
dec
sub
in
or
fisubrl
lock
and
add
add
or
add
add
rol
mov
fisubrs
sbbl
pop
adc
add
add
add
add
pop
push
cmp
add
add
xchg
les
add
add
jg
insl
mov
lods
movsl
mov
mov
mov
mov
pop
adc
js
mov
push
jmp
sbb
inc
or
xchg
pop
daa
dec
mov
jecxz,pt
rcrl
add
add
lods
mov
push
mov
cmpl
dec
xlat
and
sarb
mov
dec
fimuls
add
add
sub
mov
les
jg
mov
dec
jne
or
add
add
lahf
leave
sbb
in
daa
out
dec
add
add
into
icebp
in
stos
mov
sub
fidivl
out
sub
jl
or
add
add
sub
inc
fisubrs
sbb
mov
push
adc
roll
cli
push
push
and
add
push
add
test
xchg
aad
decl
add
mov
jmp
pusha
mov
movsb
mov
mov
cwtl
sbb
add
add
add
xlat
xor
stos
inc
dec
jne
lret
lea
add
add
rorl
dec
or
mov
add
add
cmp
inc
mov
jle
aam
mov
push
cmp
push
mov
cli
sub
out
sbbb
pop
mov
inc
push
add
add
add
add
add
nop
pushf
mov
sysexit
adc
and
mov
int3
mov
mov
xor
or
xorb
jmp
insb
add
add
xchg
or
add
add
push
dec
dec
add
add
int
fwait
adc
dec
and
cmc
mov
cmp
rorl
shll
add
pop
mov
sub
add
add
nop
sbb
push
popf
sbb
repz
jle
adc
cli
mov
jecxz
push
cwtl
dec
mov
jae
aad
add
add
and
test
sbb
shrl
iret
sbb
mov
cwtl
out
jb
dec
pop
lcall
addr16
popa
stos
mov
xor
sub
add
add
add
add
outsl
stos
pop
adc
dec
pop
mov
cmp
sbb
pop
pop
xlat
das
pushf
loop
jne
mov
xlat
add
add
and
ds
fs
add
add
aad
xlat
jns
insb
add
add
shrl
clc
xchg
or
push
jmp
test
xor
les
clc
shrb
mov
lret
mov
fisttpll
ja
mov
add
test
add
push
mov
outsl
das
cmp
mov
insb
add
add
adc
add
add
adc
adc
push
mov
xchg
cmc
mov
ficompl
lock
add
adc
mov
add
scas
loopne
or
add
add
and
sbb
mov
add
add
int
cltd
xor
push
sub
push
stc
adc
jmp
aaa
pop
cmpsl
dec
dec
mov
test
and
ljmp
mov
outsl
push
jo
push
xchg
inc
cld
mov
ljmp
iret
lret
pusha
mov
inc
pop
adc
inc
aas
cmp
in
push
or
add
add
add
lea
pop
inc
and
add
add
mov
jne
add
repnz
fildl
loopne
sbb
add
add
pop
cli
hlt
xchg
add
test
push
fs
sbb
rcrb
mov
xlat
movsb
xorl
mov
ret
jo
and
and
enter
xchg
das
dec
mov
pop
aam
out
sbb
mov
mov
loopne
sub
setg
cmp
xlat
leave
pop
int3
fwait
loopne
cwtl
mov
add
jnp
sub
jmp
cmpsl
pop
lahf
dec
xorb
mov
push
ljmp
mov
inc
mov
mov
scas
ss
sahf
cltd
call
and
add
add
add
add
add
add
push
aam
sbb
outsl
in
xor
add
add
lea
xchg
mov
cmp
add
ljmp
ss
add
add
dec
mov
add
add
shll
cs
popf
jge
push
xchg
fs
pop
add
dec
pushf
mov
popf
addr16
and
dec
or
add
add
dec
repnz
movb
sub
lcall
xlat
push
cmp
mov
cmp
xor
pop
cli
push
cmp
jl
jno
loop
xchg
add
add
je
push
movsb
data16
fsubs
or
fwait
sub
add
xor
sahf
jp
pop
dec
push
pop
push
add
add
imul
jp
pop
leave
push
pop
je
fst
lock
ror
shlb
cmp
fldenv
fnstenv
jl
jno
add
add
stos
ret
stos
movsb
cmp
ret
mov
adc
add
cmp
or
mov
mov
jnp
xchg
push
fwait
hlt
mov
fldl
add
add
xchg
lea
add
filds
inc
add
add
mov
hlt
push
stc
repnz
push
stc
stc
push
mov
sahf
pop
int3
cmp
xor
adc
inc
mov
push
pusha
mov
pushf
in
add
xor
sti
push
mov
stos
adc
fs
jecxz
xchg
scas
mov
sub
add
add
push
mov
adc
sbb
xor
aam
gs
inc
fbstp
pop
jae
xor
and
cmpsb
loope
out
mov
flds
pop
in
mov
adc
mov
inc
ja
dec
lret
ss
lret
add
add
pop
or
add
add
inc
sbb
xor
popa
mov
lock
fsubl
sbb
and
mov
sub
push
and
mov
and
xlat
jo
mov
sahf
dec
add
add
and
sbb
mov
sub
movsl
cmp
cmp
add
add
pop
imul
inc
out
jle
cs
jg
sbb
ja
mov
sti
aad
add
add
add
gs
and
xor
adc
lea
and
lahf
rol
ja
adc
imul
test
cs
xchg
add
add
inc
js
jne
sub
imull
add
add
add
add
add
add
add
add
add
add
pop
repnz
mov
add
jmp
aad
scas
shll
add
or
add
fildl
dec
mov
mov
push
mov
aas
ds
cmc
inc
push
ficoml
sub
inc
mov
jmp
mov
hlt
inc
enter
mov
cmp
add
add
jp
sub
lahf
sti
insl
cmp
sub
dec
jmp
dec
pop
xchg
sbb
mov
add
testb
pushf
loop
mov
add
add
imul
stos
addr16
add
add
add
add
add
add
add
leave
pop
pop
push
pop
iret
cli
pusha
mov
sbb
add
add
add
ljmp
mov
add
fwait
nop
cmp
or
mov
xor
fnstcw
mov
orl
add
push
cmp
add
mov
ret
cmp
push
mov
and
data16
pop
lock
movsb
sbb
cmp
cmpsb
cmpb
mov
lea
jo
data16
add
rcl
cld
pop
mov
xchg
mov
lahf
pop
mov
sub
xchg
outsb
xchg
push
mov
stc
pop
cmp
clc
aad
ds
xor
add
cmpl
rcrb
add
int
mov
rcrl
sub
fadds
add
dec
nop
or
push
pop
rol
pop
mov
lods
js
popf
sub
xchg
jo
push
xor
add
add
inc
add
add
adc
cmp
je
fdivl
adc
sub
inc
add
add
mov
adc
mov
add
add
mov
add
rclb
add
push
inc
mov
cltd
add
dec
dec
cs
mov
mov
xor
or
add
add
test
add
sub
das
adc
mov
mov
sub
xchg
stos
pushf
cld
push
sbb
rcll
adc
daa
ds
push
lcall
add
sub
xchg
pop
clc
jb
mov
pop
fdivrl
ficoml
imul
add
add
icebp
ss
sbb
dec
rdtsc
cmp
xchg
es
es
rclb
sbb
outsb
int
inc
add
add
dec
dec
xchg
mov
daa
les
pop
daa
ja
add
add
insb
add
add
push
jle
out
jno
mov
add
add
in
out
inc
add
add
push
adc
mov
jo
scas
inc
inc
xor
dec
mov
dec
sbb
add
add
roll
jl
movsl
mov
add
mov
mov
les
or
scas
int
or
add
add
ret
fmuls
out
fimull
add
add
add
and
js
out
mov
repz
ret
cmpsl
test
add
add
sub
out
pop
sub
std
jae
not
gs
decl
add
add
xor
cmp
add
add
add
sbb
jge
xor
leave
int
les
add
add
rcl
insl
movsl
jg
or
mov
in
ds
in
mov
scas
sub
add
add
je
jl
add
add
add
iret
sub
out
dec
cmpsb
neg
fs
sahf
hlt
cmp
add
mov
add
add
sti
lds
add
mov
or
mov
pop
lods
test
xor
mov
stos
sbb
add
add
sbb
and
mov
adc
adcw
pop
js
clc
pop
sbb
aad
fnstenv
add
add
jmp
je
inc
adc
add
mov
mov
add
cmp
arpl
mov
les
cmp
add
cli
push
add
adc
mov
pop
or
add
add
add
dec
mov
outsb
mov
and
add
add
test
add
mov
mov
add
add
add
adc
add
add
test
dec
cld
mov
xor
or
add
add
cwtl
jns
in
sti
inc
add
add
push
cltd
pop
or
es
lahf
mov
and
fisubrs
push
push
cs
pop
pop
and
add
add
cmp
and
mov
add
add
adcl
mov
sbb
xchg
cmc
xchg
loopne
loope
call
push
repz
sbb
add
add
mov
mov
lret
fstps
mov
lods
stc
mov
add
add
aas
and
add
add
jg
push
inc
incl
adc
xor
ret
jb
xchg
sub
shll
add
add
hlt
aas
stc
test
add
add
in
jae
enter
add
and
in
xchg
outsl
data16
adc
loopne
in
xchg
pop
cmp
jecxz
movsb
std
push
stos
add
cltd
jo
xor
rcr
in
sub
insb
add
add
jb
aas
insl
cmp
pop
popa
out
cltd
imul
test
mov
ja
loop
mov
inc
mov
inc
mov
mov
push
fwait
in
cmp
test
sbb
mov
pop
or
sub
popf
and
inc
je
fdivl
mov
test
sub
add
add
idivb
jp
loopne
push
jecxz
add
push
mov
mov
mov
in
lret
sti
in
push
push
sub
add
add
aas
mov
movsb
cmc
fcomps
xchg
data16
add
add
jmp
xor
mov
js
ret
stc
adc
aam
push
into
mov
mov
add
add
pop
shl
bound
and
dec
sub
add
jne
push
xchg
xchg
je
das
jae
mov
scas
pop
jp
test
dec
cmpsl
sti
xchg
xchg
loope
push
mov
cltd
mov
shlb
sub
jb
test
push
daa
stos
jmp
and
pop
rcrb
pop
call
add
mov
dec
pop
leave
sub
mov
xor
or
adc
add
add
cmpsb
jge
enter
jno
test
lea
out
mov
cmp
pop
inc
add
add
push
push
jp
fimuls
iret
lcall
shr
jns
xor
aad
loopne
mov
inc
aad
inc
jp
nop
jl
push
sbbb
mov
sbb
add
add
stc
int3
adc
mov
fnstcw
test
jnp
push
adc
fcomi
je
mov
dec
fsubrp
add
add
add
ret
xor
pop
push
mov
add
add
and
sti
mov
sbb
add
add
add
popf
mov
and
je
and
adc
mov
pop
sub
das
ja
movsb
in
je
js
inc
sbb
shrb
add
add
jno
mov
js
mov
add
add
jbe
sbb
mov
imull
ret
add
add
add
cltd
add
add
add
leave
push
scas
mov
add
shr
in
add
add
add
push
push
xor
mov
cld
cwtl
xlat
sbb
mov
lret
add
add
inc
insb
add
add
pop
add
add
add
mov
mov
cli
push
add
pop
and
add
add
add
add
add
push
add
adc
testb
mov
dec
cmp
jns
aam
dec
ja
xor
insb
add
add
mov
sbb
inc
sub
xor
mov
xor
add
add
xor
adcl
rorb
mov
insb
add
add
loope
adc
mov
mov
add
shrb
xchg
and
add
add
pop
jmp
lcall
jb
divb
inc
cwtl
adc
xor
inc
and
add
add
xor
mov
mov
add
add
mov
add
add
aas
sub
push
xor
add
add
cld
xor
in
cmp
cmpsl
mov
add
add
sub
add
add
in
add
add
add
and
pop
push
in
push
xchg
adc
int3
movsl
pop
and
movsb
insl
adc
add
mov
lock
sbb
stos
sub
cmpsb
lods
in
or
mov
fstps
addl
add
movsl
ljmp
or
xchg
add
add
add
jg
in
in
mov
dec
jecxz
mov
mov
clc
dec
adc
add
sbb
jns
push
dec
add
add
mov
lret
add
add
icebp
pop
lret
xor
and
add
add
fsubs
xchg
mov
mov
into
jne
xorl
add
add
cli
ret
outsb
push
js
add
add
xor
adc
test
scas
push
mov
add
add
sbb
add
add
bound
loope
mov
dec
sub
in
std
dec
lock
fwait
and
sub
add
add
mov
or
jbe
jle
cmpsl
push
outsb
decl
jno
inc
mov
inc
adc
loop
movsb
dec
loop
mov
mov
push
mov
jbe
sub
inc
add
add
pop
push
sbb
das
bound
pushf
and
add
add
enter
in
add
push
sbb
push
push
rcr
flds
gs
cmp
je
mov
jae
imul
add
jns
stos
and
dec
lea
add
add
int3
imul
fmuls
mov
add
add
es
mov
sbbl
or
add
add
ret
cmp
fwait
daa
lods
mov
add
add
into
add
add
movsl
lea
mov
nop
jnp
pop
xorl
adc
and
ss
gs
ljmpw
push
cmp
add
cmp
sbb
or
add
add
sbb
inc
jnp
jns
add
add
xchg
xchg
mov
and
sahf
daa
call
cli
push
adcb
pop
inc
cmp
add
add
jo
mov
sbb
cmp
call
add
add
mov
hlt
fcomp
sarl
xchg
mov
mov
fxtract
call
scas
or
add
add
aaa
mov
cmp
jp
fwait
cmp
int
add
cmp
add
repz
dec
add
add
ja
ret
add
add
mov
or
cmp
and
push
pop
mov
mov
cmp
push
js
movsb
cmp
adc
cmp
xchg
lahf
sahf
dec
ret
xchg
cmc
std
xlat
jne
scas
cli
cmp
sub
and
inc
jns
pop
pop
push
adc
aaa
roll
mov
mov
xchg
add
xchg
insl
xor
stc
xchg
jge
insl
jbe
stos
mov
inc
add
add
lret
add
out
jecxz
and
add
add
popa
mov
call
xchg
push
fnstcw
adc
jp
icebp
inc
aaa
pop
jmp
clc
fdivr
sbb
bswap
imul
fdivrl
xor
or
or
add
add
dec
mov
ljmp
or
add
add
lcall
ficoml
gs
sbb
cmp
mov
jge
lds
cwtl
sub
adc
and
cmpsl
and
icebp
cmp
sarl
sahf
aas
clc
jg
scas
mov
out
stos
pop
mov
xchg
pop
cld
mov
sbb
es
fistpl
add
add
imul
inc
scas
inc
xchg
sub
insb
mov
lret
cmp
setb
push
sti
lcall
mov
sahf
pop
add
dec
lahf
pop
mov
in
stos
ret
mov
add
rcrl
fs
push
cmp
adc
mov
cmp
add
add
add
pusha
add
add
or
add
add
fldl
or
cmp
add
add
dec
add
add
and
add
add
ret
xchg
mov
dec
cmp
sahf
push
dec
add
add
scas
inc
add
add
xor
jo
fwait
push
or
xchg
shl
and
fdivrl
ss
push
mov
imul
cmova
jb
outsl
sarl
mov
mov
mov
cwtl
cltd
add
stos
lods
jl
xchg
adc
rolb
add
add
mov
jp
sahf
adc
add
mov
add
add
js
in
xchg
icebp
fisubrs
repnz
jp
test
test
add
out
push
cld
aam
int3
out
rolb
mov
xchg
mov
in
jns
cwtl
push
xchg
add
stos
lret
xchg
xchg
out
pop
cmp
mov
roll
mov
add
mov
dec
mov
xor
adc
mov
or
cmpsl
pop
sbb
inc
popf
cwtl
out
ret
popa
addb
test
ret
cmp
add
add
mov
stos
inc
add
add
ss
inc
stos
and
out
inc
add
cmp
jae
inc
mov
push
movsl
popf
jge
jns
mov
fidivl
jmp
sbb
sub
mov
add
xchg
testl
addr16
sub
cmc
jb
lods
push
sbb
pop
sbb
jns
dec
sub
ss
idivb
jle
je
cmpsl
dec
jnp
or
std
pop
inc
or
cmp
test
mov
xor
xchg
add
sub
add
adc
out
mov
iret
jp
nop
xchg
add
add
flds
xor
aad
iret
nop
cwtl
in
dec
xor
and
pusha
add
add
loop
loopne
daa
inc
xchg
pop
shrb
das
mov
fsubrl
add
add
dec
mov
enter
divb
out
pop
movsl
xchg
sub
mov
pop
cmp
sbb
mov
lock
scas
notl
insb
add
add
sub
mov
outsl
pop
mov
imul
cld
fidivs
clc
or
cmp
movsl
pop
dec
add
add
mov
pop
cmpsb
les
ret
aaa
in
and
add
inc
mov
out
pop
mov
daa
or
inc
xchg
cld
lods
inc
push
mov
lea
jnp
cmp
and
add
add
add
add
int
pop
fucom
mov
sti
inc
xor
lret
xor
bound
mov
aad
adc
mov
mov
movsb
icebp
cmp
inc
add
add
pop
loope
cmp
inc
add
add
adc
je
ss
fisubs
add
add
test
add
add
clc
mov
push
mov
mov
cmc
les
and
into
fistpll
divl
pop
icebp
jae
jmp
in
jecxz
jl
movsb
data16
scas
cmp
add
add
add
mov
dec
inc
test
inc
add
add
sti
rolb
fcomps
mov
add
sub
lea
adc
add
add
add
cmp
and
sahf
mov
mov
cmp
inc
and
cmpsb
ds
xchg
sarl
ja
push
addb
mov
adc
pop
ret
montmul
cmpsb
movb
sbb
mov
add
add
mov
mov
add
rorb
daa
jle
pop
in
push
mov
xchg
enter
mov
pop
in
fdivl
push
fadds
push
cmp
lahf
add
add
add
and
add
add
ja
jge
dec
pop
mov
cwtl
xchg
jecxz
xchg
sbb
xchg
das
sbb
call
mov
mov
inc
or
cmp
fimuls
mov
imul
adc
lcall
repnz
adc
les
jb
cwtl
xchg
pop
push
add
add
sub
iret
cmp
or
add
add
xchg
mov
add
add
outsl
jp
push
loopne
mov
ds
ss
add
add
sbb
in
mov
jle
inc
subl
add
add
movsl
daa
adc
stos
jmp
das
test
push
mulb
add
add
loope
pop
fsubrs
push
lret
mov
add
add
add
shrb
or
and
add
add
push
sub
cmp
testl
pop
loope
lret
lcall
add
pop
setno
mov
mov
aam
dec
cmp
mov
in
in
aad
lahf
outsb
inc
sub
or
add
xor
and
subb
add
cmpsb
scas
insl
loop
fsubrs
enter
ja
int
aad
std
sub
add
add
push
aam
pushf
lcall
mov
sbb
jne
pop
shl
pop
mov
cli
int
lods
and
sub
test
mov
add
or
clc
lea
jl
inc
lods
addr16
mov
hlt
jg
filds
add
add
jo
jmp
jp
shrl
xor
test
cwtl
push
and
mov
xchg
dec
jo
xchg
add
sahf
rolb
pop
fwait
dec
cmpsb
mov
mov
add
add
hlt
or
stc
gs
mov
add
add
add
dec
add
add
xchg
ret
pop
data16
add
pop
ss
testb
fldenv
xlat
add
add
inc
xchg
les
je
mov
test
sahf
pop
test
mov
sti
arpl
and
push
scas
mov
out
jno
mov
push
sbb
add
inc
add
add
shll
add
add
sbb
dec
sbb
sbb
add
adc
xorl
out
mov
stc
inc
mov
sbb
lret
push
mov
js
xlat
aas
adc
push
out
cmp
xchg
inc
mov
adc
mov
sbb
out
jecxz
inc
decb
pop
lret
mov
popf
test
pop
xchg
or
add
add
cli
sahf
mov
add
add
lahf
fstpl
add
fbld
sbb
sbb
and
ret
sbb
push
lea
addl
add
out
mov
mov
orl
xchg
into
sbb
mov
xchg
test
push
mov
jl
push
mov
test
mov
inc
add
add
scas
insl
orb
xchg
mov
mov
fsincos
flds
fsubrs
pop
fistpll
push
and
push
jge
mov
in
imulb
popa
cli
in
pop
pop
nop
loopne
je
insb
add
add
cmc
shlb
add
pop
xchg
sub
pushf
inc
movsl
sarb
lret
icebp
jmp
call
add
inc
add
add
ret
std
mov
push
ror
bound
pop
and
add
add
dec
push
xchg
loop
sbb
insl
mov
dec
mov
in
pop
in
orl
add
in
mov
lahf
push
bound
sub
add
add
add
or
jmp
mov
jns
add
jae
js
out
mov
mov
aas
sbb
jg
jbe
mov
add
fmull
add
add
adc
add
add
add
add
sbbb
iret
or
lods
aad
out
inc
lret
xchg
mov
cmpsl
dec
cmp
adc
add
fs
add
sahf
jmp
add
add
aas
dec
xchg
inc
mov
or
or
add
add
jle
cmp
add
add
mov
push
lea
loop
movsb
js
imulb
adc
ljmp
in
or
fwait
inc
cmp
mov
dec
mov
pop
call
or
add
test
xchg
add
add
add
out
mov
sub
add
add
test
add
add
lea
out
pop
xchg
outsl
test
std
repz
lds
sub
mov
mov
packssdw
mov
outsb
rorl
test
xor
adc
cpuid
movsl
shlb
andl
add
add
pop
mov
fstpt
dec
mov
mov
adc
subl
stos
sbb
dec
lods
fdivl
add
fmuls
insb
mov
push
mov
mov
inc
das
shlb
add
loope
imull
add
add
xchg
test
xchg
leave
xchg
pusha
mov
pop
pop
aad
xor
stos
sbb
int3
outsb
inc
scas
lahf
pop
cltd
fsubs
pop
mov
lahf
mov
ja
clc
clc
popf
mov
push
xchg
rcrl
movsb
ret
repnz
popf
or
add
pop
jae
mov
insl
bound
scas
mov
jge
ljmp
aas
in
sub
iret
out
mov
or
sbb
push
stos
mov
out
inc
mov
add
add
adc
add
fcmovb
and
add
add
call
nop
pop
xchg
into
loop
cmp
loopne
insl
fs
mov
leave
in
daa
mov
push
lcall
inc
lret
xor
inc
mov
call
add
add
xor
add
add
jae
dec
dec
cmp
xor
jne
add
add
nop
out
add
fcmovnb
decb
and
add
add
jb
popl
adc
in
mov
cmc
fwait
leave
shrl
stos
pop
jbe
arpl
roll
ds
xchg
pop
xchg
mov
or
pop
mov
icebp
std
hlt
mov
sub
add
add
or
add
add
add
add
lds
in
xchg
dec
sti
call
int
enter
add
add
add
test
mov
fisttpl
mov
xchg
push
insb
add
add
test
xlat
decb
sbb
pop
push
dec
jnp
jp
leave
mov
hlt
inc
mov
xlat
into
inc
outsl
or
add
add
pop
outsl
js
xchg
mov
rcrl
xor
and
add
add
cld
into
add
xorb
mov
push
mov
mov
and
add
add
es
jo
orb
add
add
inc
add
add
xlat
jmp
add
sbb
repnz
aam
iret
xchg
cmp
mov
out
aas
fisttpl
add
insl
bound
add
mov
pop
mov
pusha
add
add
arpl
xchg
xor
lods
push
inc
sub
add
add
into
test
dec
push
sub
add
add
sub
add
add
cld
sub
daa
test
lcall
and
add
add
sbb
iret
scas
or
xchg
cmp
lea
aas
sbb
int3
push
int3
sbb
dec
popa
mov
movl
inc
cmp
bswap
xchg
fldenv
stos
scas
bound
in
cwtl
fs
dec
push
aam
mov
imulb
mov
or
add
inc
jp
sbb
movsl
sub
mov
xchg
iret
shll
jo
pop
into
fucomi
mov
scas
in
mov
mov
loopne
outsl
fwait
push
stos
hlt
frstor
mov
stos
jg,pn
jle
sbb
adc
nop
add
add
add
fs
xlat
pop
jmp
mov
lret
jns
sbb
sahf
jge
xchg
jno
test
and
sub
add
add
push
test
out
mov
fdivrs
cmp
push
inc
add
lea
roll
inc
aas
xor
iret
mov
add
add
push
outsb
xchg
loopne
shll
add
push
cmp
cwtl
pop
pushl
jnp
cwtl
push
mov
add
jne
pop
mov
lea
or
add
push
imul
decb
add
lcall
add
add
fistpl
cli
shrb
dec
add
add
mov
pop
sub
add
add
ja
mov
lret
push
stos
ret
mov
add
dec
movsl
in
dec
outsl
dec
popa
pop
rorb
clc
aad
add
add
jns
cli
lock
pop
andb
scas
add
add
mov
mov
and
add
add
jge
mov
jnp
add
add
les
pop
mov
lcall
lahf
ss
insb
mov
or
pop
fstps
test
add
add
add
je
loop
sub
add
add
and
add
add
pop
stos
loope
xchg
test
add
add
das
test
add
add
add
sahf
mov
mov
ret
and
add
add
pop
fidivrl
mov
fstl
mov
and
add
add
lods
stos
popf
jge
and
movsl
aas
pop
jecxz
push
push
xor
add
mov
je
mov
add
add
aaa
repz
out
mov
push
jbe
pushf
bound
das
push
mov
mov
push
add
cmp
cmpsb
dec
or
iret
add
add
add
pop
pop
out
mov
lock
add
mov
scas
cmp
das
mov
and
add
add
and
add
add
add
xor
jns
aaa
jae
mov
cs
mov
gs
mov
add
add
aas
fimull
stos
xchg
xor
adc
lods
loope
dec
mov
and
add
add
cmp
lahf
push
sub
into
mov
or
mov
aas
xor
xor
push
fstp
pusha
add
add
dec
xorb
add
add
push
sbb
add
scas
sbb
dec
loopne
mov
ja
cld
mov
cmp
not
lcall
into
adc
adc
adc
mov
push
jns
std
or
add
add
ss
add
add
dec
ja
int3
hlt
or
loop
movsb
sub
add
add
mov
icebp
adc
lods
inc
popa
and
sbb
add
mov
xchg
mov
mov
lret
lods
ss
add
add
fwait
pusha
mov
aam
ss
repz
add
pop
shll
adc
aam
lea
add
add
adc
jmp
fsubr
mov
add
xchg
or
sbb
add
add
iret
xchg
outsl
pusha
mov
jp
repz
cwtl
movsb
test
shll
or
add
ja
out
fidivrl
test
push
adcl
out
xchg
repnz
add
add
add
mov
add
mov
jge
mov
sbb
push
add
pop
sti
je
xchg
jne
jp
rcrb
pop
pop
repz
mov
mov
mov
push
stc
add
push
or
enter
add
add
add
add
movsl
push
test
add
jmp
pop
daa
push
out
incb
mov
ja
push
lds
shll
outsb
movsb
pop
imull
fsubrl
movsb
sbb
dec
mov
jg
mov
add
shll
adc
mov
jb
adc
leave
jp
add
add
xchg
push
pushf
jge
mov
mov
add
add
stos
mov
mov
add
inc
fxch
lods
mov
stc
enter
jae
and
add
add
cmp
mov
jle
jecxz
adc
pop
daa
je
outsl
jge
or
mov
push
add
dec
in
cwtl
cwtl
data16
xor
add
sbb
pop
xor
ja
jno
add
add
push
imul
iret
xchg
xor
pop
push
add
lods
mov
mov
dec
xchg
ret
sbb
jp
mov
adc
add
addb
add
xor
pop
mov
and
sbb
pop
je
inc
push
mov
push
addb
and
popa
ror
cwtl
push
pop
pop
and
add
add
les
jae
lahf
nop
repz
jns
or
add
add
pop
adc
jne
hlt
pusha
mov
or
add
add
add
add
out
adc
call
mov
mov
mov
repz
cmpsl
cmp
or
jbe
imul
outsl
pop
imull
mov
xchg
enter
push
hlt
mov
mov
push
repnz
pop
enter
mov
pop
ljmp
add
out
gs
xchg
or
mov
or
sub
sub
clc
test
or
add
mov
dec
add
pop
or
mov
fwait
pop
loopne
sti
fmul
xorb
stc
or
or
add
add
aam
icebp
dec
add
add
clc
or
mov
add
add
add
add
push
fdivr
inc
add
add
adc
je
stos
push
jo
and
movsb
flds
cld
fbstp
mov
add
add
mov
xchg
adc
lahf
out
lcall
xchg
addb
add
rcr
fidivs
ja
adc
jg
icebp
adc
xchg
jg
lret
adc
mov
mov
ds
in
movl
xor
add
xchg
push
add
add
loope
sub
add
add
dec
and
outsl
adc
sti
or
mov
fnsetpm(287
ss
dec
jmp
icebp
in
cmp
mov
fmuls
adc
sbb
add
lret
xchg
leave
leave
lock
adcb
out
lahf
inc
cmpsb
pushf
fs
je
test
or
add
add
xchg
invlpg
push
popf
xor
add
scas
mov
cmp
in
or
imul
xor
cs
fs
sub
lock
enter
mov
cltd
cmp
xchg
xchg
in
lahf
xchg
lcall
jp
jl
mov
in
sti
cltd
xchg
or
add
add
mov
and
lcall
add
das
lock
cld
imul
das
cmpsl
jne
xchg
adc
stos
sahf
addr16
lods
cmpb
stos
cld
push
and
xchg
dec
cld
dec
adc
push
repnz
add
xchg
pushf
cmpsl
js
add
add
outsb
cs
mov
pop
fsubrl
add
ss
sti
inc
outsb
outsl
xchg
mov
cmp
movsb
lret
pop
xor
ja
or
imul
les
adc
mov
jae
xor
ret
add
outsb
xor
add
add
xchg
or
in
std
pop
gs
dec
mov
outsb
inc
jne
fsts
outsb
push
fsub
xchg
add
mov
add
mov
pop
test
cmpsl
cwtl
mov
dec
lods
stc
ret
lods
cwtl
pop
cmp
add
out
out
call
and
add
add
jns
mov
push
cmpb
lret
fldcw
in
mov
and
sti
jmp
or
testb
mov
pop
gs
cli
sti
jp
mov
test
or
popa
or
dec
cmp
mov
cmp
pop
ret
repnz
daa
pop
fadds
xchg
add
pop
cmpsl
mov
mov
shlb
je
add
add
lcall
add
sbb
sbb
xchg
and
add
add
jnp
mov
inc
add
add
mov
pop
test
out
mov
lock
pop
dec
add
add
mov
mov
dec
fwait
pop
pop
in
add
add
add
rcrb
pop
inc
mov
push
cmp
outsb
jle
es
in
subl
pop
push
cwtl
daa
inc
cmc
cmp
push
and
add
add
cmp
aas
adc
mov
add
add
pushf
or
pushf
inc
mov
sbb
xchg
mov
adc
cltd
decl
add
add
loopne
lret
pop
push
cmp
add
add
push
mov
jge
add
and
add
add
ja
dec
mov
stos
adc
pop
lds
sahf
push
loopne
adc
push
mov
or
in
movl
in
or
iret
pop
pop
cmc
lcall
jl
mov
mov
xchg
ffree
mov
mov
or
push
lods
icebp
add
add
add
loopne
popa
ficoms
xor
repz
in
push
sub
xor
in
push
cmpb
loop
inc
testb
add
hlt
pop
out
add
out
roll
xchg
popa
fs
xchg
mov
lret
dec
orl
add
add
cmpsb
or
imul
mov
pop
jbe
testl
push
imulb
into
jl
hlt
sti
iret
mov
imul
daa
int
sahf
xchg
xor
add
add
gs
sbb
or
add
add
add
pop
and
sbb
jl
fsubrs
add
adc
mov
cwtl
xchg
out
pop
sbb
pop
inc
xchg
push
icebp
pop
and
add
add
xor
push
dec
ja
testl
xchg
push
add
fldz
sbb
xchg
int3
std
xchg
and
add
add
int3
in
and
dec
mov
jg
lds
lret
or
add
add
adcl
fdivrl
mov
mov
add
add
xchg
or
in
dec
mov
and
inc
add
add
add
sbb
in
outsb
xchg
js,pt
mov
xchg
xor
add
aad
mov
add
add
add
add
add
inc
pop
inc
notb
sbb
fs
sub
in
jbe
data16
popa
aad
mov
jno
mov
jmp
ja
xor
xchg
sbb
loopne
fs
mov
daa
fsub
xlat
je
in
dec
daa
pop
call
add
mov
jg
mov
adc
cmp
mov
in
xor
ds
stos
push
or
ljmp
lret
je
fisubrs
push
mov
pop
rorb
xor
lahf
sub
mov
jg
orb
push
je
dec
xchg
cmp
pop
and
lds
mov
imull
and
movsl
filds
cmp
daa
in
xor
add
mov
pop
outsb
inc
sbb
push
jge
push
and
cmp
add
add
sbb
jmp
xchg
pop
in
shrb
dec
inc
pop
pushf
in
add
lea
out
cmpsb
test
dec
adc
addl
ss
es
sbb
je
sbb
fimull
xchg
cmp
int3
stos
mov
sub
out
cmp
or
add
add
mov
cmp
imul
outsl
fldt
mov
mov
mov
test
cltd
xor
loop
hlt
lock
pop
xlat
mov
leave
lea
add
add
pop
ss
imul
cltd
sbb
xchg
mov
into
or
inc
stos
inc
shr
pushf
andb
fnstsw
lcall
inc
sub
int3
lcall
mov
add
add
add
pop
mov
pop
fcoml
dec
loop
aaa
pop
pushf
pop
cmp
cltd
cmp
jmp
cmpsb
mov
add
loopne
sub
add
add
mov
sahf
inc
add
add
lock
repz
mov
mov
dec
add
add
outsl
js
cltd
outsl
fldenv
popa
loope
add
mov
sti
sbb
aad
ret
testl
adc
repz
mov
ret
je
or
add
add
pop
or
rcrl
add
outsb
int3
int
das
pusha
mov
lcall
push
ret
push
jl
adc
jbe
scas
mov
leave
jp
mov
add
add
add
add
cld
int
lret
and
int
dec
jno
std
and
insb
mov
mov
daa
fsubrl
add
sahf
sbb
fdivrp
mov
add
add
imul
inc
cltd
mov
xchg
test
in
cwtl
mov
add
sub
xor
fidivrl
add
xchg
andb
leave
lret
cmp
repz
sarb
push
imul
les
add
add
jecxz
loop
push
shlb
push
in
mov
push
in
ret
and
daa
hlt
les
mov
dec
repz
mov
jge
dec
xchg
cmp
mov
shrl
inc
mov
mov
in
mov
pusha
add
add
enter
mov
mov
imul
add
add
xchg
ficoms
xlat
or
dec
mov
add
add
add
add
add
adcb
adc
dec
ds
ja
incl
mov
outsb
sahf
inc
xor
into
jl
add
cmp
aaa
mov
test
out
and
daa
jae
push
dec
xor
in
cs
gs
inc
aam
cmp
xchg
ljmp
movsb
pushf
bound
mov
inc
stos
push
fildl
test
daa
inc
mov
lahf
fcoml
leave
loopne
cli
dec
mov
mov
cmp
negb
hlt
push
jmp
pushaw
mov
dec
push
push
scas
add
cs
add
arpl
imul
cmpsb
cwtl
mov
jle
push
rcl
lret
jl
lcall
adc
push
add
xchg
add
add
add
add
int
add
add
dec
sti
dec
mov
inc
mov
push
cmp
ret
int3
insl
lods
cld
cmp
sbb
and
fbstp
add
xor
mov
andb
mov
dec
mov
fldt
clc
sbb
loop
inc
add
add
fcomps
jno
leave
add
daa
mov
xchg
ret
repz
outsl
mov
or
add
add
test
fwait
mov
ljmp
adcb
jg
xor
add
inc
mov
pop
test
das
adc
mov
adc
imul
scas
sub
inc
cmp
mov
push
pushf
ljmp
xchg
mov
je
jnp
int3
adc
sbbb
out
add
add
mov
les
add
add
xchg
lcall
mov
outsl
test
add
add
mov
push
xchg
es
mov
rcrb
jmp
ret
dec
add
cld
ficompl
dec
hlt
cmp
sysret
mov
je
test
mov
push
cmp
js
int
popaw
adc
cmp
ja
mov
scas
inc
fsubrs
add
add
int
int3
push
es
lret
adc
and
ss
add
add
ret
push
pop
cmpb
mov
ret
cmc
mov
add
dec
add
add
ljmp
add
add
add
add
sub
add
add
push
jl
jecxz
lret
or
add
add
add
jo
ja
xchg
mov
cmp
sbb
das
push
movsl
mov
cmp
enter
or
jne
test
stos
fiadds
pop
mov
mov
inc
popf
cmp
jge
xchg
mov
pop
jle
je
mov
add
add
stc
ja
push
lret
mov
add
pop
bnd
sbb
lcall
add
add
cld
cmp
in
add
cmp
add
add
jnp
dec
add
add
cmp
movzbl
adc
test
push
retw
in
jns
push
pop
ret
sahf
cltd
lds
fsubr
into
xchg
mov
jae
pop
test
jmp
add
and
dec
add
add
ret
push
mov
aaa
scas
ja
shl
dec
sub
push
aaa
and
add
add
pusha
mov
out
and
or
add
add
inc
sub
cmp
mov
nop
pop
into
push
add
adc
loope
mov
jg
or
add
add
sbb
cmp
sbb
add
add
add
rorl
jno
ficompl
jnp
sub
add
add
cmp
sbb
jmp
cmp
mov
push
xlat
aas
inc
mov
adc
inc
mov
add
ret
stc
pusha
add
add
cmc
std
mov
cmc
push
iret
jno
shlb
add
loope
outsl
in
test
mov
sbb
ss
fstpl
xchg
pop
nop
inc
add
add
ja
mov
cmpsl
push
insl
inc
pop
gs
push
in
nop
lcall
pop
adc
out
sbb
jns
mov
add
add
ret
and
inc
lahf
out
add
or
xchg
ljmp
insl
inc
sbb
cmp
adc
cwtl
sbb
xchg
out
movsl
das
cmp
scas
shlb
fs
insb
add
add
loopne
inc
push
xorl
add
push
push
insb
add
add
cmpb
xlat
or
add
add
add
scas
notl
mov
sbb
adc
xchg
and
add
add
je
pop
adc
dec
sbb
add
mov
cld
xchg
push
ljmp
lods
or
inc
pop
mov
cwtl
pop
addr16
xorb
bound
ljmp
mov
cmpl
and
cmpsb
push
jo
mov
cmpsb
test
gs
jle
pushf
js
in
xor
add
add
mov
btc
stos
sub
scas
pop
leave
mov
mov
mov
ret
and
pop
pop
andb
orl
leave
xor
mov
inc
les
jns
fildll
xchg
mov
loop
dec
nop
sbb
icebp
mov
lret
and
sub
add
add
fwait
jnp
pop
shrl
adc
and
add
add
sbb
mov
inc
xchg
mov
jp
imulb
arpl
pushf
int
pop
inc
inc
adc
aam
mov
cmpsb
mov
int3
int3
and
mov
stos
lcall
lods
xchg
jg
cs
fisttpll
cmpsb
add
add
add
mov
out
cmp
adc
dec
mov
std
lds
dec
inc
mov
cmp
xor
pop
sarb
test
cmpsl
sahf
push
loop
mov
js
push
inc
pop
xor
xchg
xor
mov
loopne
xchg
add
orl
pop
jl
mov
jecxz
mov
add
hlt
or
jge
ret
movsl
pushf
ret
mov
data16
add
add
rolb
pusha
mov
or
mov
gs
add
add
add
push
mov
cs
lods
jo
iret
jo
dec
repnz
add
add
test
push
add
add
add
jmp
jno
ret
jmp
dec
and
add
add
add
pop
mov
add
add
xchg
cmp
mov
js
mov
jge
add
add
cltd
inc
or
push
shrl
cli
add
cmp
ja
pop
push
pop
jo
pop
mull
divl
and
fs
loopne
add
add
ds
mov
add
add
pop
adc
pop
jl
pop
xchg
mov
mov
arpl
mov
add
shl
adc
inc
pop
pop
inc
or
add
add
cmpl
inc
icebp
pop
jg
mov
cmp
out
mov
dec
xchg
movsb
inc
shlb
add
adc
jns
dec
adc
sbb
mov
clc
mov
pop
xor
add
daa
scas
xchg
mov
sti
stos
pop
outsl
ljmp
ja
or
mov
adc
add
push
push
cwtl
ja
int
push
roll
fcoms
mov
add
add
add
stos
cmpps
add
cmp
lcall
decl
add
add
dec
add
add
call
jb
sub
mov
dec
jmp
lea
sub
das
mov
mov
pop
push
xchg
xor
cmp
add
js
orl
add
or
add
testl
sbb
into
xor
mov
add
add
cmp
mov
adc
ret
add
add
cmpsl
pop
cmp
jecxz
lods
iret
mov
neg
sbb
cmp
popf
add
repz
ss
lds
loop
add
add
pushf
cld
sbb
add
add
add
int
sbb
xchg
push
popa
mov
std
xchg
test
push
dec
mov
inc
lcall
popf
inc
scas
mov
mov
pop
scas
mov
xor
sub
add
add
and
dec
loopne
fiaddl
add
add
inc
mov
add
jl
popf
mov
scas
cs
fmull
mov
loop
xchg
hlt
repnz
add
add
add
xor
insl
inc
std
lods
lock
mov
stos
adc
jmp
pop
shl
mov
sub
add
add
in
inc
xlat
sub
mov
fldl
sub
mov
cmp
xchg
jo
push
inc
add
add
flds
ret
movsl
shrl
add
add
sub
sbb
mov
adcb
xchg
pop
cltd
lods
scas
xchg
add
add
mov
inc
cld
addr16
fadd
xor
add
add
mov
sbb
sbb
add
add
add
jnp
lods
jl
lcall
sbb
test
fbstp
add
add
pop
jmp
lahf
hlt
dec
push
xchg
or
cmp
dec
add
add
stos
and
outsl
cmp
out
and
cmp
add
add
add
andl
inc
add
add
add
cmp
arpl
add
add
add
inc
loop
lods
xchg
and
add
add
loopne
and
add
add
add
loop
in
outsb
push
fdivs
mov
cld
std
test
push
dec
fdivrs
adc
xlat
mov
add
add
add
adc
mul
outsb
sbb
add
push
mov
xchg
add
gs
sub
and
cmp
add
add
ret
fcoms
mov
add
add
push
sbb
loope
xchg
popf
pop
add
add
add
add
data16
mov
ficoml
add
ret
and
add
add
paddusb
sub
frstor
add
add
or
pop
sub
test
add
add
jp
sbb
mov
mov
andb
xor
mov
cmp
das
fidivl
cwtl
mov
add
icebp
or
lods
jmp
add
add
inc
add
mov
cmp
aam
lock
jmp
mov
repnz
add
xchg
lret
pop
xchg
shrb
dec
xor
cltd
subb
movb
sub
lret
cmp
mov
outsl
test
repz
push
push
push
or
sub
xor
std
xor
test
popa
jae
sbb
sbb
and
jo
test
mov
mov
add
adc
sub
add
add
fisttps
loop
andl
mov
xchg
sub
or
loope
add
push
aas
inc
and
add
add
inc
pop
in
imul
jo
movsl
iret
xchg
add
add
dec
and
add
add
add
rcr
inc
and
jbe
jl
xchg
adc
hlt
adc
mov
sbb
fs
mov
add
add
mov
pop
jnp
popa
mov
dec
push
bound
adc
mov
pop
fiaddl
loopne
mov
lea
out
sub
sub
add
dec
inc
mov
ljmp
cmp
xchg
in
or
loopne
aad
sti
sbb
mov
mov
fcmove
ret
adc
icebp
mov
add
iret
loop
push
xchg
fstpl
popw
fsubl
add
add
jl
mov
test
jo
xchg
cltd
xor
push
aaa
lods
dec
add
add
xchg
xchg
cmp
sub
cld
jnp
mov
cmp
sbbb
out
daa
lret
or
add
add
xchg
mov
or
shrb
inc
ucomiss
lahf
adc
int3
std
jns
into
movsw
in
sahf
xchg
lock
sbb
cmp
movsl
xor
mov
movsb
adc
mov
ftst
xor
shlb
shl
cmp
std
dec
add
add
rol
lock
jmp
scas
inc
orb
sub
add
add
add
add
add
push
int
fcomip
jns
in
test
inc
cmc
mov
mov
cmpsb
cmpsb
bound
pop
and
int3
adc
push
mov
mov
add
add
mov
push
mov
push
push
icebp
or
mov
mov
dec
mov
add
add
out
dec
mov
sbb
mov
sbb
add
add
jle
xchg
or
add
add
outsl
lcall
add
add
add
fs
insl
lds
out
mov
test
scas
ljmp
mov
dec
sarb
jno
repz
sub
adc
aad
cmpsb
pop
jmp
add
add
adc
dec
jmp
iret
je
das
movsb
push
rclb
add
push
clc
fstpt
lods
lods
push
dec
lahf
out
jns
fcmovnu
jae
movsb
stc
pop
pop
push
scas
les
lea
rclb
rcl
movsl
pushf
fwait
lds
add
add
adc
mov
push
push
xchg
mov
jo
imull
add
jnp
push
fdivl
push
sub
add
add
add
int3
mov
insl
stc
xchg
aam
add
add
add
add
in
call
pop
clc
jbe
xor
scas
jecxz
mov
aad
mov
mov
aad
cs
pop
adc
adc
adc
ja
movsl
push
mov
add
leave
dec
add
add
cmc
imul
add
aas
sub
or
das
rcrb
bswap
lahf
dec
mov
mov
dec
push
push
mov
popa
clc
scas
pop
loope
into
roll
add
mov
jle
push
adc
popf
xchg
test
add
stos
fcoml
out
mov
popa
test
clc
adc
jnp
add
mov
or
mov
pop
add
push
lret
push
pop
cmpsb
mov
mov
pop
aam
mov
push
div
shll
iret
and
add
add
popa
divl
mov
incb
call
xchg
jo
adc
repz
mov
add
add
add
add
nop
push
add
add
sar
xchg
dec
add
add
lds
fistl
pop
pop
pop
adc
int3
xchg
and
jbe
sbb
mov
ljmp
pop
and
mov
xchg
xchg
ja
ljmp
add
add
mov
and
add
xor
movsb
adc
pmulhuw
add
add
inc
push
movsb
lcall
outsb
mov
cmp
mov
jge
or
shr
adc
push
mov
push
xor
add
add
enter
dec
pop
sarb
out
push
push
jno
xchg
push
adcl
add
add
lret
jle
add
add
push
les
add
add
jle
mov
add
arpl
add
add
pop
imul
lea
add
add
pop
lods
dec
xor
dec
add
add
sbb
mov
roll
mov
add
test
lea
ds
pushf
pop
bound
mov
mov
or
hlt
into
ficomps
sbb
jl
or
pop
popa
ss
mov
or
add
add
dec
leave
or
cmp
fiadds
jne
jge
ret
or
add
add
cmpsb
jmp
add
sub
add
add
xor
imul
push
jns
add
add
inc
stos
fnsave
inc
mov
mov
test
add
sub
or
add
ja
and
xchg
fistl
sub
inc
mov
push
adc
push
ljmp
sub
xchg
cltd
pop
fdivl
inc
and
add
add
pop
outsl
notb
jg
xchg
ret
lods
test
out
test
cmpsb
dec
pop
cmp
dec
ret
and
add
add
rorb
rorl
add
add
sbb
xchg
and
jne
cwtl
imull
push
sti
xor
lret
stos
xor
push
mov
sbb
popf
mov
xlat
and
add
add
add
cltd
inc
mov
filds
sbb
mov
cs
mov
add
mov
stos
mov
outsl
cmp
jo
jle
loope
stos
jbe
enter
xor
pop
dec
add
add
ficoms
enter
decl
add
add
jmp
cmp
aad
mov
and
add
add
push
mov
pop
mov
add
ss
push
cmp
mov
cmpsb
mov
add
push
cmpsb
xor
test
mov
es
fimuls
add
add
xor
jp
push
pmaddwd
xchg
sahf
mov
sub
add
cmp
add
add
jge
inc
icebp
ror
dec
mov
add
add
imul
xchg
sub
add
add
cld
loopne
add
add
jno
jae
inc
pop
push
outsb
mov
add
add
cmp
sub
ds
add
add
dec
add
add
in
push
shll
add
mov
cmpb
inc
mov
jo
js
in
aam
fwait
mov
cmpsb
add
mov
xchg
xchg
je
icebp
xor
jge
test
push
test
xor
jp
jle
xor
and
and
dec
sbb
repnz
and
add
add
int
push
in
cmp
jnp
or
sub
gs
aas
mov
stos
call
inc
int
movsb
lret
popw
rcrl
add
add
test
stc
cmpsl
and
dec
outsl
loop
push
sarb
cmpsb
jbe
je
pop
push
mov
repz
push
pop
les
add
xchg
jbe
sti
and
add
add
mov
pop
and
fs
mov
ret
or
add
add
xor
lret
lods
mov
add
in
aaa
xor
jno
loopne
aas
adc
mov
inc
insl
pop
and
add
add
je
mov
es
cmp
mov
lcall
stos
lea
sbb
cmp
loope
inc
pop
push
outsb
xor
dec
pop
cld
in
jp
add
ret
sub
add
stc
loop
fdivr
imul
xor
adc
lea
popa
xor
push
push
sbb
lods
in
dec
scas
shll
ds
bnd
mov
mov
jg
loopne
and
popf
movsb
mov
lods
mov
test
mov
lds
add
add
ss
das
sbb
out
ds
mov
iret
sbb
jg
pop
and
pop
pop
mov
jg
push
stos
mov
xchg
imul
fidivrs
xchg
insb
mov
or
add
add
sbb
rcrl
push
mov
clc
lret
imul
mov
add
outsl
xchg
mov
out
in
xchg
xor
jmp
lret
dec
push
test
jle
leave
lcall
adc
lret
adc
pop
insl
insb
add
add
sti
xchg
sbb
dec
lcall
stos
cmp
imul
and
lock
or
add
add
fistps
mov
pop
mov
mov
ljmp
mov
in
cmp
pop
pop
lahf
pusha
add
add
cmpb
fsubrs
add
add
repnz
je
test
mov
add
mov
add
add
add
js
adc
pushf
sbb
cmpsl
jo
cmc
sahf
and
rclb
add
rcrl
insb
add
add
pushf
mov
mov
insb
add
add
adc
inc
jo
xor
mov
subl
mov
add
add
or
mov
or
arpl
daa
adc
mov
sub
add
add
mov
mov
mov
push
cmp
pop
lock
sub
sarb
cmp
push
xchg
imul
mov
leave
iret
shll
movsb
push
fldl
xor
xchg
je
fisttps
jg
fistps
xchg
std
imul
insb
add
add
xor
pop
add
inc
pushf
les
or
sbb
icebp
jo
rorl
add
loopne
pop
mov
mov
lea
movsb
into
cs
add
aad
inc
add
add
cld
icebp
fdivrl
add
add
mov
sahf
pusha
add
add
ret
stos
mov
and
add
add
mov
test
mov
shlb
cmc
scas
out
shlb
mov
inc
sarl
cld
xchg
cld
pop
xchg
out
stc
mov
adc
mov
pop
mov
mov
add
cs
daa
orl
or
add
add
aas
test
loopne
inc
call
pop
jl
rcl
or
add
add
push
mov
add
add
cltd
mov
fldcw
cmpsb
dec
mov
sbb
arpl
mov
gs
sub
call
sub
add
add
pushl
sarb
mov
add
add
and
add
add
mov
in
adc
movsb
adc
scas
je
dec
mov
loope
pop
mov
loopne
or
icebp
cmc
inc
dec
test
xchg
push
pop
shl
pop
test
dec
mov
lods
or
cmpsb
dec
add
add
dec
scas
in
xor
mov
push
lcall
add
jno
mov
loopne
shl
ja
std
outsl
cld
bound
clc
jo
rcrb
jecxz
fld
outsl
xchg
sub
add
add
es
insb
mov
jp
bound
loopne
mov
push
dec
mov
mov
xor
jge
xchg
inc
test
cld
inc
xchg
shl
adc
scas
and
outsl
inc
xchg
lods
jbe
sahf
ds
mov
fcoms
cmp
add
pop
aas
imul
inc
mov
mov
jmp
mov
push
lahf
sub
adc
mov
jle
ret
inc
add
add
jns
mov
sub
xchg
jge
mov
jge
cwtl
in
aam
sti
push
xchg
add
sub
add
add
add
add
repz
push
mov
add
add
clc
shlb
inc
add
add
cwtl
cs
jg
or
push
adc
add
add
sub
inc
mov
push
push
xlat
cld
nop
pop
icebp
fcoms
add
inc
add
add
xlat
aam
vaddsubpd
push
stc
jg
addr16
sbb
lcall
mov
xorb
add
das
frstor
jo
fisttps
lret
inc
dec
cs
add
add
xor
mov
xchg
fmuls
repnz
into
test
push
sbb
out
jae
or
add
add
add
movsb
adc
punpckldq
add
add
pop
cli
mov
pop
cmp
add
add
fsubs
or
add
add
and
cli
pushl
cmpsl
pushf
fnsave
and
jp
pop
aam
fbstp
inc
repz
test
add
xchg
xchg
or
add
add
mov
lahf
push
shll
sub
add
xlat
in
sti
shl
add
add
ds
ss
mov
mov
in
push
push
clc
les
les
cld
pop
leave
mov
xchg
sbb
pop
sub
add
add
inc
sahf
adc
mov
sbb
daa
aad
lea
add
add
xor
sbb
pop
popf
add
adc
add
add
add
add
add
add
add
add
xor
add
sbb
add
mov
inc
lods
adc
xor
add
add
dec
pop
add
push
jno
mov
orb
push
add
add
add
js
push
mov
mov
pop
fwait
stos
or
sub
fiadds
push
fsubs
push
loop
mov
push
pop
stc
xchg
daa
mov
test
aad
jbe
inc
frstor
add
add
pushl
jnp
fdivs
imul
mov
add
add
push
mov
daa
inc
mov
arpl
jp
je
xchg
lock
icebp
divb
inc
mov
int3
fwait
or
add
add
daa
sbb
movsb
adc
add
jmp
stc
cltd
inc
and
xchg
pushf
in
div
add
adc
adc
xorb
notl
test
add
fcomps
aaa
sbb
sub
add
add
dec
xor
add
data16
jo
push
divb
inc
add
add
and
add
add
pop
pop
and
pop
push
inc
add
add
dec
mov
out
push
jno
mov
lods
pop
jnp
gs
jae
cmp
mov
fsubrl
add
movsb
movsl
cwtl
ljmp
imul
add
jns
movsl
addr16
jbe
fnsave
nop
arpl
push
femms
mov
leave
aas
into
iret
push
std
daa
push
jae
xor
roll
add
pop
xchg
and
push
push
sub
dec
mov
dec
xor
sub
mov
xlat
xor
add
jnp
into
iret
xchg
sbb
push
xchg
iret
xchg
adc
andl
sti
mov
mov
xchg
sbb
add
jo
sahf
jo
outsl
and
pop
dec
lcall
aaa
jl
push
out
sub
and
shl
add
add
add
test
lods
sti
mov
dec
mov
fcmovne
push
ret
mov
enter
adc
cmpsb
push
repz
test
xor
add
stos
ja
jg
out
mov
call
push
jmp
add
add
xor
into
adcb
add
add
xor
add
ret
cmp
mov
stos
cli
pop
xchg
lds
and
xchg
cs
das
lods
push
mov
add
add
flds
ds
mov
fs
push
ret
pop
mov
push
adcb
mov
stc
into
adc
add
add
push
movsb
pop
cmpsl
sub
or
add
and
add
iret
mov
add
add
add
mov
lret
stos
push
aad
inc
add
add
and
repz
cmpsb
leave
cwtl
js
mov
out
mov
sahf
enter
roll
jnp
add
sub
add
add
lcall
add
add
xor
or
or
out
incl
or
ret
adc
add
add
cmpsb
cld
outsl
dec
fst
cmp
xor
xor
mov
add
mov
sbb
lods
imul
jle
lahf
jmp
sub
add
add
jecxz
jl
and
add
add
add
add
mov
mov
lock
cltd
add
jo
xor
and
lods
sahf
push
sub
jp
add
add
pop
xor
or
push
lcall
sti
push
push
inc
pop
in
pop
ljmp
scas
adc
aaa
jl
mov
fdivrl
mov
cwtl
push
pop
xchg
push
call
loope
add
add
mov
push
rcll
in
fwait
les
xchg
aad
imulb
call
xor
divb
sub
mov
dec
daa
pop
maxps
xchg
addr16
cmp
push
gs
add
add
arpl
mov
loopne
xor
add
add
xchg
sbb
add
add
gs
mov
cmpsl
pop
xorl
add
ret
shl
data16
xchg
dec
addr16
jecxz
stc
cmovl
add
add
jns
mov
lock
and
add
add
mov
cli
mov
and
mov
mov
enter
out
mov
ret
push
jle
sbb
out
popa
lcall
jmp
or
add
add
imul
push
into
addr16
push
aaa
test
push
mov
jmp
leave
outsl
stc
push
imul
add
lods
fsubp
cmp
xor
jge
out
lret
xchg
fdivrs
test
lods
fimuls
xchg
push
repnz
mull
add
add
sbb
sbb
xor
xchg
int
out
aam
out
mov
les
add
shrl
and
jge
mov
iret
iret
push
fsubs
scas
nop
add
add
add
enter
popf
dec
dec
or
add
add
inc
dec
lods
int3
mov
fmulp
push
mov
adc
repnz
and
aad
aaa
out
lret
sbb
push
or
add
pop
inc
pushf
sub
pusha
add
add
loope
stos
jle
xchg
or
aaa
aam
mov
adc
iret
push
stc
stc
xchg
dec
loope
xchg
or
hlt
adc
fisubl
dec
add
add
jle
push
shrl
cmp
ret
push
ss
lods
add
push
mov
addr16
stc
push
add
add
add
test
xor
adc
lahf
stos
out
sti
nop
dec
fnsave
out
jecxz
fcomps
xchg
call
add
gs
xchg
idivl
or
add
add
stos
push
lahf
lds
hlt
and
add
add
imul
test
sahf
add
mov
aas
lahf
dec
add
add
test
sbb
push
pop
inc
enter
add
mov
mov
push
stos
pop
leave
fmulp
add
roll
dec
ret
shlb
roll
add
jg
push
dec
mov
or
add
add
mov
lods
stc
sbb
movsl
pop
rorl
or
add
add
mov
add
mov
adc
inc
add
add
clc
sub
loop
out
sbb
cmp
xor
pop
sbb
and
jns
idivb
mov
add
add
jg
mov
add
add
add
or
add
add
jns
adc
cmp
aaa
inc
clc
cs
out
pop
movsl
fbld
lret
mov
cmpsl
adc
add
adc
movsb
push
jmp
mov
add
dec
mov
add
push
test
pop
push
mov
in
cmp
nop
cmp
mov
mov
jae
push
in
push
cmpsl
jg
mov
cwtl
pop
mov
mov
dec
add
add
nop
sub
xorl
mov
add
add
nop
cmp
negl
mov
mov
cmpsl
adc
jns
test
popf
pop
aad
js
outsb
add
jl
mov
fildl
adc
xor
cmpsl
pushf
dec
inc
in
mov
push
cld
push
lret
adc
insb
mov
sub
and
aaa
lods
fs
pop
movsl
test
jp
push
or
insl
loopne
sbb
and
add
add
and
add
add
and
add
add
ret
in
mov
mov
and
sub
int
cmp
add
add
std
loope
mov
inc
mov
or
mov
lret
and
add
pop
add
dec
in
in
sbb
add
add
out
adc
pop
aad
jmp
add
outsb
adc
addb
sbb
scas
xor
lods
jbe
jmp
mov
test
leave
xor
add
add
add
xor
add
xchg
xor
add
add
lea
push
in
push
ret
push
lret
in
inc
insb
add
add
scas
and
add
add
inc
add
add
ds
dec
push
outsl
loop
test
into
jmp
pop
test
nop
in
ficoms
cmp
add
add
imul
int3
xlat
ret
call
les
add
add
inc
add
add
xor
rol
inc
pushf
dec
add
add
ds
push
cli
pop
pop
fsub
inc
lret
mov
mov
icebp
test
subl
add
jns
cmp
mov
sub
add
add
add
add
add
je
jl
cmpsb
sbb
jb
sbb
mov
test
jb
mov
sarb
scas
out
fcmovnu
or
call
fsubs
add
sub
repnz
mov
adc
into
push
sub
xchg
adc
movb
add
add
inc
mov
add
add
repz
sbb
mov
lods
jae
inc
fildl
dec
pop
pop
dec
mov
add
mov
dec
push
sbb
mov
and
les
mov
or
add
add
add
fdivl
mov
add
add
mov
add
push
jb
dec
xchg
repnz
and
mov
in
xor
movsb
neg
nop
aad
aad
decb
add
rcll
hlt
pop
push
jmp
test
or
xchg
inc
sbb
div
bound
and
xchg
aam
dec
call
fimuls
jecxz
jns
mov
scas
or
fistpl
mov
cli
inc
jg
add
add
mov
jno
inc
pop
fadds
imul
mov
xchg
mov
jb
add
jns
or
mov
push
sbbb
fnstcw
repz
enter
iret
pop
test
aad
sti
cmp
cmp
negb
insb
add
add
iret
subb
add
mov
cwtl
cmp
jge
pop
and
pop
cli
and
add
add
add
add
add
add
xchg
add
icebp
lret
xchg
sarl
add
add
inc
ja
cmp
xchg
cmpsl
add
shl
mov
loopne
cmp
add
adc
fldenv
out
xor
add
add
mov
lret
sbbl
jne
jmp
pop
lahf
fistpll
fsubl
mov
jle
mov
xchg
in
out
add
outsl
jl
test
outsl
xor
ds
out
xor
leave
imul
dec
pop
add
add
add
mov
cwtl
xchg
sub
or
add
add
lock
dec
xchg
insl
fs
sti
pop
test
add
fwait
in
fcompp
mov
sbb
cmc
ds
lahf
mov
imul
gs
adc
in
test
and
or
add
add
scas
jl
dec
add
add
mov
and
add
add
ror
cld
jge
nop
pop
mov
ja
ficomps
repz
add
add
outsb
lock
xor
add
leave
lret
pop
mov
mov
jge
jne
xchg
aas
jge
inc
mov
aam
rcl
inc
add
add
sbb
or
sbb
push
xchg
shl
insl
mov
or
jl
repz
outsl
aaa
insb
add
add
inc
xorl
xchg
pushf
cmp
mov
sti
push
dec
mov
ret
add
inc
cmp
jb
add
add
cltd
pop
jecxz
push
sbb
rcrl
mov
lcall
xchg
xchg
mov
aad
cwtl
xlat
fisubl
pop
mov
leave
dec
rcrb
dec
mov
xchg
cmp
or
mov
out
call
lods
fiaddl
rcll
and
add
xchg
aam
jg
int
mov
mov
call
add
add
add
or
mov
sub
add
add
sahf
test
pop
scas
data16
jae
adc
sti
mov
push
mov
xchg
fwait
imul
cmp
test
andb
add
cmp
inc
insb
mov
xlat
sahf
jmp
push
jne
jbe
jb
jmp
jbe
pop
pop
or
push
mov
dec
push
lahf
mov
jns
insb
add
add
cltd
imul
mov
push
fxch
fcmovnb
out
negl
sbb
sbb
shlb
jb
mov
and
add
add
add
add
add
push
sub
xchg
lock
fdivl
sti
jle
rorl
add
add
es
insb
add
add
testb
loopne
sbb
mov
test
cmc
cmpsb
jb
sbb
in
sbb
jge
pop
fwait
lock
into
orb
pop
push
sahf
ret
inc
add
add
lock
mov
and
rorl
cltd
aas
pop
mov
les
outsl
jne
add
add
ret
or
add
add
hlt
sbb
add
int
les
xchg
inc
cmp
stos
xchg
mov
aad
idivb
dec
pop
xor
sub
add
add
les
add
add
mov
add
add
inc
xchg
mov
out
dec
add
add
insl
sub
aas
jl
leave
xor
jnp
jb
sub
xor
inc
or
sub
mov
adc
es
fsubrs
and
dec
mov
sbb
jbe
mov
inc
add
add
cmp
xor
dec
in
adc
jge
xchg
and
or
add
add
fimuls
add
add
add
dec
jno
mov
and
popa
fsubrs
jae
mov
mov
sahf
xchg
rol
in
pmullw
das
fsubrl
sub
mov
xorl
mov
adc
repz
mov
int
mov
push
pop
push
dec
mov
stc
aad
or
nop
dec
fidivrs
mov
hlt
inc
push
andl
xchg
push
jo
xchg
ffree
cmp
mov
inc
setle
rep
sub
add
add
fldl
add
add
push
stc
call
and
and
mov
mov
insl
cs
push
xchg
std
imul
scas
and
pop
jo
mov
negb
xor
das
scas
cmc
jne
clc
test
or
add
add
loop
ljmp
call
sub
cmpsl
sbb
ja
adc
mov
inc
cmp
mov
add
add
es
xor
mov
add
dec
mov
int
mov
mov
mov
mov
rclb
push
push
mov
lahf
test
add
add
add
popf
inc
cli
inc
mov
mov
jl
rorl
add
add
imul
xor
fwait
adc
push
popa
out
cld
push
fstps
mov
mov
imul
mov
xor
xchg
pop
add
jns
xchg
jl
adcl
ret
cs
in
pop
adc
sti
push
ljmp
negl
test
xchg
mov
cmpsb
mov
cmp
dec
lahf
add
lds
mov
add
sub
aas
int3
pushf
popf
hlt
leave
mov
jmp
sarb
add
add
add
add
add
fimuls
add
add
add
lea
xor
loop
jns
sub
mov
xchg
loope
ja
sub
add
dec
mov
xchg
jp
xchg
outsb
test
loopne
push
sub
inc
jo
adc
jnp
dec
jp
das
mov
scas
inc
hlt
mov
cmp
add
add
add
jo
shlb
pop
adc
and
add
add
jl
shrl
add
out
cmpsb
ljmp
add
mov
das
inc
sub
add
add
jae
addr16
add
add
arpl
leave
mov
enter
mov
fists
aam
add
add
add
add
add
add
add
or
xor
pop
fidivrl
mov
and
shrb
add
int
shlb
pop
pop
pop
popa
scas
fmull
ss
repnz
mov
add
add
mov
adc
and
outsb
xor
fistpll
add
add
add
pusha
add
add
test
nop
mov
mov
into
mov
js
repz
mov
pop
sub
add
add
add
add
or
sbb
jp
mov
lret
clc
iret
mov
add
add
movsl
add
add
add
adc
add
add
sbb
add
add
sub
mov
add
add
xor
nop
adc
and
dec
and
xchg
xchg
dec
adc
and
cmp
inc
sub
out
out
inc
or
add
add
ds
jmp
cwtl
stos
add
add
add
xor
inc
add
add
push
stos
ljmp
pop
test
in
aaa
mov
add
movl
push
jnp
mov
sbb
add
add
adc
rorl
push
lret
lods
in
in
adc
add
lcall
data16
inc
jl
xchg
inc
add
int3
inc
daa
ret
insl
leave
enter
mov
mov
fisttps
add
add
insb
mov
add
add
dec
add
add
call
add
add
add
mov
mov
add
jge
pop
mov
ret
pop
or
add
add
pop
call
pop
cmpsb
cmp
mov
add
mov
fwait
dec
fbstp
push
jg
cmpsb
les
cs
cmpsl
mov
jg
mov
adc
jo
push
sti
in
scas
pop
fistpll
loop
mov
jecxz
cmpsb
xlat
es
shlb
jbe
sbb
xchg
in
mov
out
pusha
mov
cwtl
sub
add
add
mov
xor
xor
fldt
adc
add
add
test
add
add
cmp
adc
add
or
add
add
cld
in
lahf
xor
pop
sub
add
add
mov
dec
and
push
jge
fdivrs
add
dec
and
repz
cmp
jnp
xchg
cli
hlt
scas
lods
lret
mov
add
add
insb
mov
sbb
xchg
push
mov
sbb
int
cmp
dec
add
add
call
lret
lahf
mov
in
lock
ds
sbb
mov
pop
in
push
push
ror
push
negl
aas
jmp
test
cmc
xchg
push
cmc
lret
insl
data16
or
mov
and
popl
aam
fbstp
add
add
add
add
add
add
or
add
add
jle
mov
or
push
inc
incl
jb,pt
sub
aam
les
inc
push
cwtl
mov
add
push
inc
cmp
cmpsb
sub
mov
dec
lock
sbb
add
add
jg
movsb
mov
add
add
aaa
mov
fcoms
imul
in
mov
aas
ljmp
iret
lods
jne
dec
add
add
push
jb
repz
sub
iret
es
or
add
add
movsl
ss
inc
pop
jbe
and
test
sahf
fdivrl
pop
imul
lds
push
shl
inc
in
loop
add
cmp
xchg
negb
enter
cli
hlt
push
sbb
or
xchg
jns
cmpsl
hlt
xchg
push
mov
pop
add
add
add
mov
mov
jae
add
add
push
pushf
push
lds
dec
push
in
xor
jecxz
xchg
mov
fsubr
fsubs
add
add
or
sbb
xor
cmp
ja
jmp
mov
mov
xor
or
add
add
mov
cwtl
inc
mov
pop
rolb
test
and
movsb
jb
lock
cmpsb
push
sub
por
push
pop
xor
pop
in
sub
add
add
mov
fisttps
mov
mov
mov
xchg
mov
arpl
mov
add
or
jno
mov
into
cld
in
dec
rcl
dec
cli
or
add
add
call
ret
pop
cmpb
add
sub
add
add
lahf
and
add
add
or
cmp
aad
movntps
iret
push
int3
sti
xchg
data16
inc
xor
es
fwait
stc
mov
lahf
stos
insl
jnp
out
imul
popa
push
xchg
mov
inc
push
sbb
dec
push
cmp
mov
add
add
lahf
and
or
add
add
stc
add
push
daa
test
add
jb
ror
push
int
pusha
add
add
nop
imul
cmpsb
xor
out
mov
inc
mov
dec
and
add
add
xor
lret
mov
flds
inc
add
add
int3
rcll
leave
lods
jns
mov
adc
cmp
add
push
xor
lods
repnz
add
mov
add
ja
insl
ds
adc
lahf
daa
aad
test
orl
jne
add
stc
pop
adc
push
stos
lods
mov
add
add
or
add
add
cmp
inc
mov
out
pop
ja
stos
mov
xor
add
repz
add
add
testl
or
dec
mov
push
xor
add
add
push
and
clc
adc
and
mov
jno
inc
fwait
push
pusha
add
add
push
neg
fsubrl
bound
pushl
rcl
xchg
js
in
inc
int3
lds
push
insb
add
add
icebp
sub
add
fisttpl
sub
add
add
mov
jecxz
rclb
jbe
test
int
xor
cmp
ficoms
mov
icebp
xchg
sub
add
add
xchg
inc
or
add
add
mov
jmp
sbb
push
inc
xchg
scas
and
mov
mov
ja
push
dec
pop
or
rcrl
add
call
push
rcl
push
inc
out
adc
or
add
add
andb
add
add
loopne
xor
das
xor
test
add
add
or
add
add
imul
sti
mov
add
add
add
jo
dec
pop
jl
shll
mulb
add
add
pop
out
sbb
sub
add
add
or
mov
popa
adc
inc
xchg
popf
jmp
daa
iret
jns
mov
xlat
dec
pop
pop
and
add
add
dec
sahf
mov
idivl
sbb
fstpt
ret
push
out
insl
xchg
push
add
add
add
test
sub
aad
or
mov
out
cs
movsb
pop
addr16
shlb
cld
clc
inc
fildl
fldt
jmp
iret
xchg
dec
add
add
push
ss
mov
add
outsb
push
add
add
add
cmpsl
js
int3
lret
pop
and
ret
mov
ret
or
mov
push
addl
out
mov
and
cmp
leave
repz
xor
mov
cmpsb
push
and
out
daa
jle
push
ja
mov
add
addr16
mov
mov
mov
ds
add
lret
or
add
add
xor
out
add
add
outsb
xor
mov
add
add
popa
mov
add
rcll
imul
add
xchg
xlat
lds
mov
daa
les
std
daa
jp
fs
jp
cmp
icebp
in
cld
xchg
jae
dec
dec
add
add
inc
hlt
into
loope
jnp
ret
xor
add
inc
sbb
test
jge
pop
xchg
gs
scas
pop
lods
testb
inc
lahf
loop
mov
add
add
xchg
test
repz
mov
jecxz
insb
mov
fcomp
xor
shrl
pop
movsl
and
xchg
xchg
pop
insb
mov
shl
in
push
adc
test
add
or
popa
imul
ja
scas
add
ficoml
and
add
and
dec
dec
mov
pop
stos
adc
imul
shrl
jb
test
pop
pop
sbb
xchg
lahf
mov
inc
call
sbb
mov
inc
add
add
cmp
jl
iret
aad
sbb
inc
xchg
fdivl
les
cld
xor
lock
xchg
inc
mov
xchg
adc
fimull
inc
push
jns
cs
jmp
dec
xor
xor
shll
mov
xor
sti
sbb
push
sub
jb
xchg
psrld
xor
mov
xchg
repz
stos
jno
mov
insl
xor
in
inc
lcall
or
add
add
mov
and
or
xor
pop
mov
adc
cmp
mov
or
add
add
add
add
push
iret
xchg
das
adc
idivb
sbb
cmc
push
xor
or
add
add
fsubl
stc
add
add
push
pushf
jmp
push
hlt
mov
xor
push
xchg
jg
dec
fsts
jb
mov
mov
pop
leave
pop
xchg
cmp
repnz
cmp
xor
mov
mov
push
ret
xor
adc
ja
loope
jnp
shll
pushl
add
sahf
aad
test
test
fbstp
and
jmp
adc
mov
pop
xor
into
lcall
add
add
dec
mov
scas
cmp
xchg
mov
mov
outsb
arpl
adc
push
sub
add
xor
xor
lcall
add
leave
pop
ret
add
add
add
add
gs
and
add
add
test
dec
push
aad
push
pop
mov
add
int
adc
pop
dec
mov
adc
movsl
mov
fisttps
sub
xor
fnstsw
mov
mov
sbb
insb
mov
ja
mov
pop
cmp
jg
int
pop
psubusw
movsl
andb
lods
push
jno
pop
repz
imul
sbb
add
add
repz
cmpsb
cld
pop
and
mov
idivl
jecxz
xor
mov
clc
ret
pusha
add
add
add
pop
dec
jno
rcl
lds
add
add
add
lcall
mov
mov
lea
mov
and
sti
and
add
add
ret
mov
xor
in
sub
xchg
xchg
icebp
mov
movsl
loop
inc
pop
xchg
in
bnd
add
add
filds
add
add
pop
dec
pushf
push
xchg
out
add
mov
push
daa
jge
js
xchg
mov
add
add
aam
xchg
mov
add
andb
jae
and
mov
add
add
adc
mov
mov
dec
jl
dec
mov
scas
pop
dec
sub
add
packsswb
fiaddl
dec
dec
inc
into
jmp
add
add
cmpsw
fldl
xor
mov
dec
add
add
mov
push
pushf
repnz
add
in
jns
loop
ret
jbe
cmp
sbb
sub
into
inc
jno
add
xchg
sub
ret
mov
mov
imul
add
add
pop
xor
add
mov
ret
test
js
xor
cli
jns
mov
pop
add
cwtl
jo
sarl
and
add
fnstsw
mov
add
add
jge
cmp
sub
lds
into
out
insb
add
add
xchg
adc
stos
pop
rolb
mov
cltd
mov
add
add
fstpt
sarb
mov
jae
imul
imul
repz
add
add
add
add
jg
sbb
add
add
mov
add
mov
add
add
xor
in
add
add
js
xor
dec
add
add
dec
test
addr16
scas
cmpsl
pushf
repnz
repnz
add
add
or
