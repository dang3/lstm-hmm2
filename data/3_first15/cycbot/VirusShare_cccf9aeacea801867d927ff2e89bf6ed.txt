add
lods
add
mov
add
fimuls
fdivrp
std
testl
or
sti
add
pop
out
std
in
adc
sbb
add
fstpl
add
mov
movb
jle
mov
sbb
cmpsl
adc
sbb
loop
js
add
adc
push
enter
fwait
fwait
xor
jecxz
and
add
add
jb
lds
pop
ds
iret
mov
add
pop
sbb
ja
fstpt
cs
jnp
cmp
add
adc
add
add
add
sub
repnz
out
add
add
add
in
in
inc
add
data16
mov
add
add
in
subl
popa
push
add
mov
js
aad
add
mov
repnz
add
add
xrelease
mov
add
jp
inc
add
mov
stos
and
mov
add
pop
and
mov
and
add
add
push
add
imul
fimuls
mov
xor
daa
mov
arpl
out
xchg
aad
jp
mov
add
push
add
nop
add
add
addb
data16
push
push
add
sahf
enter
les
push
lret
mov
imul
mov
add
push
mov
testb
add
lahf
sbb
lods
fadds
pop
add
xchg
inc
fnstsw
mov
push
add
mov
inc
ret
les
push
add
add
add
jnp
add
xor
xor
mov
mov
mov
fcoml
add
int3
ret
aas
xchg
dec
and
and
and
mov
addb
into
cmp
mov
add
mov
pop
loope
cmp
add
in
add
add
xlat
mov
add
ds
add
add
sbb
das
cmpsb
add
add
add
xchg
add
add
mov
add
add
fucomip
and
fwait
in
addb
dec
call
mov
push
ja
add
push
add
in
lahf
adc
jae
adc
push
add
cmp
dec
into
jmp
add
mov
je
adc
shr
sbb
sti
lods
sbb
call
jmp
jmp
clc
xchg
cmp
cmp
enter
or
adc
inc
sub
ljmp
add
stos
in
xchg
sbb
in
sbb
add
lcall
les
mov
push
add
repnz
test
sub
mov
adc
loop
add
data16
outsb
lods
roll
add
add
jmp
push
add
jp
push
add
aam
xor
rolb
in
and
xchg
call
in
pop
sub
out
and
mov
add
add
stos
repnz
ret
imul
add
add
movb
int3
and
mov
repnz
push
add
add
xor
and
adc
iret
mov
mov
add
sub
add
sahf
and
repnz
add
out
ret
sbb
adc
addb
pop
sbb
sub
add
pusha
add
adc
loope
sbb
add
xchg
add
add
adc
mov
jae
iret
sti
icebp
push
add
fnstcw
daa
les
fistl
add
and
cmpsb
add
add
je
add
add
mov
pop
lret
cmp
fcomp
es
int3
add
add
add
aad
jne
pushf
fadds
cmp
inc
add
add
sub
mov
lret
xor
dec
shl
xor
add
add
and
mov
pusha
add
add
add
add
fcomp
jne
enter
dec
mov
loopne
rolb
cmp
add
insl
in
adc
xor
add
lret
std
adc
pop
in
xor
jo
fstps
repnz
outsb
inc
popa
mov
jmp
mov
add
add
jnp
xchg
add
dec
stc
sbb
cmp
stc
loop
xor
add
jbe
push
add
add
add
xor
out
ret
xor
inc
mov
xor
jo
lds
add
cwtl
ds
les
and
inc
int
push
add
js
jecxz
shrb
sub
push
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
mov
push
pop
push
push
jmp
jmp
add
add
mov
or
add
mov
addb
dec
call
push
add
jno
mov
add
rorl
sbb
cmp
xor
or
xchg
outsl
add
and
sub
adc
and
rcrl
add
mov
mov
cltd
call
mov
or
cmpsl
loope
add
and
mov
mov
and
push
adc
add
add
mov
repz
jp
add
sub
in
pop
imul
pop
rolb
add
popl
add
ja
and
rorl
add
cmp
add
test
add
add
add
add
sbb
add
pop
sbb
jge
lea
ljmp
push
mov
add
pop
add
mov
outsb
mov
ja
in
in
les
mov
inc
add
jge
and
mov
sub
mov
scas
lret
add
add
fucomip
sub
push
add
cmc
lods
out
add
add
ds
add
mov
data16
add
add
cmp
xchg
push
add
jl
add
mov
add
fwait
aam
push
add
xchg
je
test
add
mov
out
inc
add
stos
testb
dec
cmp
push
xchg
add
add
cmp
cltd
repnz
testb
add
xchg
dec
pop
and
jnp
add
push
add
in
lods
movsb
add
or
stos
loope
dec
int3
test
fcmovnb
enter
or
xor
sbb
add
mov
jl
add
jns
lcall
mov
cmp
jle
add
or
jle
add
dec
aaa
dec
inc
add
mov
inc
hlt
add
adc
xchg
add
mov
add
loop
jl
add
rcl
cwtl
js
jle,pt
xchg
add
mov
mov
add
add
add
test
stos
mov
and
adc
call
and
mov
out
rolb
jnp
xchg
inc
out
sub
add
dec
mov
mov
push
and
cmpsb
add
add
jl
xor
inc
add
mov
pop
insb
pop
jecxz
xchg
xchg
arpl
add
add
mov
mov
add
xchg
add
out
xchg
add
add
loop
scas
or
add
fcmove
jno
add
mov
inc
pop
mov
insb
insl
add
mov
mov
faddl
lcall
lcall
imul
mov
imul
pusha
add
mov
mov
inc
xchg
add
mov
add
adc
xchg
add
add
in
sub
pusha
add
shll
mov
adc
add
mov
add
loopne
mov
push
add
sub
stos
mov
sbb
leave
loope
add
outsb
aaa
push
push
add
fnsave
add
xchg
jecxz
add
repnz
stc
jle
add
fmull
call
insl
sahf
insl
jge
out
pop
aas
aad
js
fdivrs
inc
add
adc
cmp
divl
add
add
cmp
jae
jae
or
mov
add
dec
outsb
sub
push
add
add
xlat
push
add
out
pop
loopne
sub
rolb
push
jb
adc
cmp
add
dec
or
add
cltd
insb
inc
add
dec
pushf
xchg
add
add
add
in
jge
stos
out
add
testb
pop
mov
cmp
sub
pop
xor
insb
movsl
pop
call
sbbl
mov
jg
push
add
mov
add
cmp
add
rolb
jae
push
add
add
ficoms
in
enter
dec
inc
add
xor
jno
push
add
xchg
dec
sbb
pop
lret
inc
add
add
add
sbb
inc
in
jo
shrl
inc
add
push
add
lcall
mov
add
jae
add
repz
iret
jmp
scas
sahf
push
add
pop
addb
add
mov
mov
int
add
movsb
add
adc
xchg
jb
xor
mov
movsb
add
adc
bound
mov
add
sub
addb
mov
sbb
jle
pop
mov
jg
adc
mov
rolb
cli
mov
add
mov
add
mov
mov
add
add
add
adc
roll
mov
add
mov
ljmp
add
mov
mov
out
mov
dec
ret
rorl
in
and
sarl
call
rolb
movb
push
adc
push
add
xchg
or
add
add
add
jge
add
lods
add
mov
in
inc
or
add
mov
int3
outsl
push
mov
adc
add
add
mov
rolb
add
sub
adc
pop
movsb
add
mov
add
add
movb
xor
ljmp
ljmp
lea
rolb
jge
inc
add
add
pop
test
or
add
insl
in
xor
dec
push
out
inc
add
leave
fisubrl
repnz
add
add
clc
adc
mov
xchg
scas
movsl
cmp
cmp
add
adc
cmp
add
jg
push
fcomp
loope
mov
adcl
jg
js
rcrl
sbb
mov
scas
out
sbb
xor
and
and
repz
ficoml
add
add
jge
add
push
add
loop
sub
add
fadds
add
add
repnz
cmp
add
jns
fimuls
cmp
jns
or
lahf
push
add
mov
shll
xchg
hlt
add
jbe
aaa
jmp
lcall
xor
hlt
add
xchg
sub
loope
add
add
test
int
add
add
add
add
pop
inc
add
add
mov
movb
add
in
xchg
ja
mov
add
inc
lock
jl
daa
fwait
xchg
test
sbb
mov
add
fildll
add
mov
add
fstps
enter
dec
fimull
imul
bound
mov
add
mull
mov
movb
add
popa
add
loop
icebp
movb
add
cld
fistpll
add
cmc
pop
dec
mov
cmpsb
add
addb
add
add
inc
sahf
pusha
add
add
cmc
add
hlt
add
adcl
lods
enter
mov
arpl
jmp
jo
push
mov
add
xlat
and
mov
and
mov
outsl
push
add
jne
rcrl
push
add
cwtl
adc
insl
pop
enter
add
mov
cmpl
sbb
orl
or
jecxz
sbb
pop
test
add
jb
sub
xor
out
and
mov
add
mov
add
inc
mov
mov
jae
add
adc
add
push
or
add
add
daa
mov
add
lahf
lock
jle
add
jl
mov
in
push
add
add
add
push
mov
sbb
nop
add
xchg
add
mov
les
dec
movsb
add
add
add
lret
add
int3
in
add
mov
add
add
xor
mov
mov
add
add
add
aas
push
add
mov
pop
dec
mov
ds
add
mov
sbb
out
xchg
movsl
rolb
or
xchg
fdivrs
mov
sub
add
push
add
add
add
mov
or
add
ljmp
ja
mov
xor
xor
dec
dec
mov
add
jle
cwtl
subl
adc
add
mov
jl
test
add
lds
mov
clc
or
sub
jb
movsb
add
mov
xchg
add
pop
add
mov
add
add
add
daa
dec
dec
nop
add
mov
rorl
push
xchg
add
lea
xchg
add
add
mov
mov
add
or
add
add
je
stc
push
mov
mov
addb
add
or
jae
fmul
jbe
sub
add
add
shll
xor
repz
add
add
add
push
add
testb
add
or
mov
xchg
lds
sbb
lcall
lods
or
xchg
add
test
rolb
jp
add
add
mov
add
pop
mov
add
mov
add
mov
add
rolb
and
jge
add
mov
stos
inc
aas
aas
jge
add
xchg
add
push
js
push
add
pop
testb
add
add
add
jo
inc
jmp
push
add
fwait
outsl
adc
sbb
xor
movsb
add
xor
add
xchg
imul
push
xchg
push
cwtl
add
ficoms
add
xor
inc
fsub
add
add
add
dec
addl
enter
enter
gs
jnp
in
dec
sti
loope
xor
int3
scas
push
add
mov
fstpl
add
dec
fidivl
add
xor
add
jge
add
fs
add
lret
add
add
jmp
add
add
add
cmc
data16
call
mov
add
add
add
clc
bound
mov
pop
sahf
fstpt
mov
sub
icebp
inc
cmp
mov
mov
or
add
ds
add
xchg
xchg
pusha
add
movsl
into
scas
pop
in
jb
pop
popa
aam
inc
add
cltd
addb
dec
adc
add
das
mov
xor
ja
test
xor
cmpl
dec
std
jo
fisttpl
sti
arpl
jl
add
add
add
add
xchg
sub
cmpl
testb
push
lret
add
add
push
test
lods
xchg
add
cmp
jg
mov
hlt
add
inc
add
add
pop
and
mov
jg
cmp
jp
jne
scas
xchg
arpl
add
cmpsb
add
add
jno
out
das
lea
icebp
add
cmp
add
mov
xchg
xor
int3
mov
cwtl
loope
lds
pusha
add
xchg
push
popf
cmp
sahf
add
incl
fisubl
add
test
mov
add
jb
cmc
add
arpl
sub
leave
push
xchg
add
add
dec
lahf
jae
lds
icebp
in
inc
add
inc
aas
lea
movsl
hlt
add
pop
dec
and
mov
add
pop
insb
or
nop
add
mov
sti
push
add
fstpt
xor
pop
add
aam
inc
add
mov
xor
add
push
add
pusha
add
or
mov
or
add
xchg
add
mov
mov
fmuls
lcall
jmp
add
lret
aad
ja
mov
nop
add
add
add
push
cmp
cmp
xor
add
xchg
mov
add
inc
add
add
rolb
add
push
mov
je
je
mov
ljmp
aaa
add
add
mov
pop
das
in
std
xlat
sbb
mov
add
add
add
leave
loopne
add
and
mov
add
xchg
sub
popa
jmp
and
mov
jae
add
jns
add
mov
daa
std
mov
outsl
push
daa
mov
add
push
push
add
mov
out
sbb
popa
xor
iret
push
add
mov
add
mov
add
out
das
movsl
nop
add
push
add
xlat
hlt
add
aas
out
sub
lds
ret
and
mov
mov
mov
pushf
or
ljmp
adc
movl
fwait
lods
inc
loope
lahf
xor
call
xor
into
sub
sahf
dec
xchg
adc
push
add
add
pop
mov
inc
add
cwtl
lods
aas
push
add
addb
add
add
inc
add
push
pop
push
add
cs
sub
add
repz
add
and
mov
sbb
pop
dec
add
cld
push
add
or
sbb
push
add
add
push
add
les
and
mov
es
add
mov
add
in
cli
movsb
add
mov
add
rolb
nop
add
add
pop
cmp
testb
dec
push
jge
add
mov
xchg
out
mov
mov
lock
sub
ret
ret
push
cmp
cmp
cld
add
mov
sub
xor
and
ljmp
enter
sbb
add
mov
imul
cwtl
ss
push
or
jne
adc
daa
stc
into
test
hlt
add
pop
xor
lret
add
add
popa
daa
xor
movsl
cmp
cmp
ficomps
mov
mov
in
jno
inc
push
xor
roll
add
out
fldl
mov
test
pop
out
cmp
loop
mov
push
in
add
and
push
and
mov
enter
add
xchg
pop
cmp
push
add
mov
add
roll
jl
add
add
mov
fisubl
ret
mov
mov
push
pop
mov
scas
push
mov
popa
clc
pop
lock
mov
add
stc
stos
xor
sbb
xlat
clc
cmp
mov
dec
addb
jb
imul
ret
ss
xchg
in
lret
sub
pop
push
add
lret
add
jbe
adc
enter
add
add
add
pushf
xor
mov
jns
rcll
arpl
jmp
sbb
stos
addb
pop
sbb
es
rcrl
add
mov
dec
imul
scas
decb
mov
add
add
add
mov
cmp
mov
mov
push
add
sbb
inc
add
mov
leave
dec
push
xor
mov
rolb
pop
pop
ret
loopne
mov
mov
mov
jle
xchg
sbb
fwait
nop
add
dec
add
sbb
mov
mov
inc
jg
cmp
aam
or
add
add
arpl
in
jp
add
add
inc
add
ret
pop
push
add
loop
dec
stos
mov
pop
add
inc
add
std
add
add
dec
or
sti
mov
rorl
testb
lods
inc
add
in
jo
inc
add
add
xor
sub
scas
das
call
add
add
sahf
adc
sub
cmpsb
add
in
daa
cmp
dec
jl
add
mov
add
mov
loop
lds
add
inc
test
or
sbb
data16
add
add
add
add
add
push
stos
cs
sub
add
lods
adc
insb
pop
push
dec
cwtl
addr16
testb
ret
insb
loop
vminss
add
add
jne
std
nop
add
out
add
aad
adc
add
mov
fs
mov
sahf
mov
mov
add
sahf
addb
and
mov
mov
lock
add
stos
mov
mov
ret
lret
add
or
mov
sub
adc
mov
add
add
add
cwtl
lret
aas
push
aaa
jbe
mov
add
add
add
adc
pop
nop
add
add
and
mov
mov
add
sub
call
jp
mov
push
add
mov
dec
sbb
mov
in
data16
js
xchg
add
fildll
add
bound
mov
fimuls
jmp
dec
jno
ret
add
cmp
add
add
ret
out
push
cmpsb
add
sbb
mov
add
pushf
jno
pop
jle
add
sub
or
aam
flds
add
mov
rcrl
add
inc
add
sub
mov
push
je
jmp
out
repnz
mov
xchg
add
add
gs
push
add
dec
fcomps
xor
stos
inc
ja
add
pop
xorl
into
push
sub
movsb
add
push
xor
inc
push
add
add
mov
dec
dec
adc
jg
int
cmp
ljmp
xor
sub
les
mov
add
mov
aad
pop
std
sub
add
ja,pt
add
orl
mov
es
add
cmpsl
in
pop
jmp
and
mov
mov
add
outsl
mov
mov
xor
xor
push
dec
decl
cmp
adc
loope
inc
cmp
xor
rolb
dec
or
cld
pop
test
adc
add
outsl
add
add
push
add
add
loopne
jge
add
xor
or
sub
mov
add
mov
adc
inc
sub
add
decl
shll
xlat
inc
and
icebp
lcall
dec
dec
add
stos
aad
add
das
rep
test
lods
dec
mov
and
mov
dec
dec
xchg
add
cmp
jg
es
cmp
add
mov
xchg
adc
pop
aam
das
loopne
hlt
add
pusha
add
rcll
js
add
in
add
mov
add
add
mov
lret
jp
mov
add
in
add
mov
add
add
rolb
hlt
add
jg
popa
dec
adc
cmp
add
dec
shll
push
add
sbb
inc
and
fcoms
in
push
fwait
pop
imul
mov
add
inc
add
add
std
jecxz
jmp
add
aad
add
repnz
xlat
jne
add
call
outsb
dec
adc
xor
mov
loope
cli
pop
enter
insb
jp
add
aam
mov
cli
adcl
mov
mull
add
mov
into
scas
loopne
jmp
add
lods
aam
inc
sti
push
add
push
mov
ja
mov
enter
sbb
hlt
add
add
inc
or
cmpl
xchg
add
add
mov
mov
fdivl
adc
insl
jl
clc
rol
xor
mov
fsubrl
and
subl
push
std
ljmp
add
sbb
lcall
ljmp
and
or
add
jnp
pop
into
sub
daa
push
add
add
xlat
dec
ret
or
cltd
fwait
xlat
inc
add
add
add
mull
add
lret
push
add
inc
inc
and
aam
mov
mov
arpl
sub
lret
pop
ljmp
inc
movsb
add
jne
jae
fwait
push
push
and
icebp
cmc
dec
mov
imul
xor
mov
inc
adc
add
rolb
je
test
loopne
mov
add
dec
cwtl
loop
addb
mov
add
stos
imul
dec
les
xchg
loope
inc
add
insl
sahf
xor
shrl
add
in
movsl
int3
cmp
cmp
je
mov
jbe
pusha
add
pop
inc
add
dec
push
repnz
add
push
add
clc
pop
add
push
add
mov
fiaddl
das
loop
mov
gs
adc
out
jb
sbb
add
lret
inc
sbb
and
add
mov
aam
imul
add
clc
push
add
pusha
add
mov
add
xor
add
mov
xchg
add
push
add
clc
jge
add
and
mov
out
lret
fdivl
add
push
fcomps
add
mov
adc
mov
mov
data16
add
add
outsl
and
mov
xchg
and
mov
call
daa
push
mov
and
mov
jmp
js
pop
lods
pop
and
mov
pop
inc
push
lea
aas
dec
sub
rolb
mov
add
pop
scas
cmc
dec
int
dec
pop
in
sbb
xchg
lods
dec
test
mov
cmp
cmp
dec
test
fisttpll
rolb
add
outsb
js
mov
add
adc
in
pop
cmp
lods
inc
mov
mov
mov
and
cmp
sub
add
mov
add
scas
jg
fwait
movsb
add
add
sbb
jb
lret
add
mov
cld
mov
fwait
sti
sbb
or
out
les
sub
jae
add
ret
pop
mov
mov
pusha
add
mov
dec
mov
sbbl
jmp
dec
sti
lds
mov
or
mov
add
jbe
or
mov
sahf
repz
add
add
add
sub
add
lods
daa
xor
addr16
bound
mov
or
add
and
jg
or
jg
add
adc
mov
mov
in
and
adc
jb
push
add
add
push
add
add
add
addl
pop
call
jg
mov
inc
add
add
and
dec
mov
jbe
sbb
les
addb
lret
imul
addb
add
push
add
sbb
lods
add
aas
imul
jbe
xchg
add
insl
fistpll
inc
lcall
add
add
scas
rolb
pop
addr16
popf
idivl
add
in
xlat
and
add
mov
add
repnz
clc
lret
shrl
mov
ja
xchg
add
fldt
xchg
mov
jbe
push
test
or
shl
add
add
add
pop
push
add
and
arpl
sbb
add
jnp
cld
outsb
aam
sbb
mov
pusha
add
mov
push
add
mov
jno
inc
add
jb
and
cld
add
mov
add
add
add
gs
cmpsb
add
fistps
mov
inc
add
stc
movsl
addb
loop
iret
cltd
movb
cs
inc
add
mov
jmp
adc
orl
sub
add
add
jp
mov
mov
add
cwtl
ret
rolb
sub
xchg
add
or
sbb
fldenv
push
xor
lret
jne
das
jecxz
outsl
test
mov
push
jmp
jnp
lods
stc
data16
insb
int3
xor
fldl
add
add
mov
lock
or
je
aad
stos
mov
and
adc
push
pop
add
movb
add
xchg
cs
addb
lahf
popa
or
in
mov
xchg
add
mov
pusha
add
add
mov
xchg
dec
cmpsl
into
mov
add
pop
cltd
mov
into
mov
inc
add
mov
or
xlat
xor
mov
test
jp
xor
jge
push
stos
inc
call
add
mov
or
push
lds
or
add
lock
popf
add
sub
jecxz
add
rolb
and
sub
add
add
jle
repnz
jl
add
xor
inc
push
add
mov
mov
jne
add
testb
push
add
mov
jle
add
data16
mov
js
jo
xor
or
jns
jno
testb
xchg
add
add
mov
jno
xor
out
add
mov
gs
add
add
add
icebp
mov
add
adc
sub
xor
loope
jbe
add
mov
jae
add
stos
out
arpl
jae
add
add
sub
adc
sbb
stc
mov
and
and
scas
sbb
cmp
ja
fcmovbe
add
cmp
adc
dec
and
sub
or
push
adc
movsb
add
cmpsl
cwtl
clc
in
jnp
dec
addb
add
mov
fdivr
fwait
mov
movsb
add
add
call
add
add
ret
fdivrl
add
ss
aam
ds
in
inc
rcpps
add
testb
xchg
fcompl
add
leave
pop
cmp
pop
ja
orl
xlat
mov
je
push
repz
add
into
std
pop
mov
dec
jo
cmp
add
mov
add
test
mov
mov
jo
jbe
loop
push
xchg
add
jbe
ds
lcall
mov
push
iret
orl
rorl
int3
fldt
mov
jg
pop
shll
add
adc
or
mov
or
addb
add
js
int3
out
cmp
outsl
call
add
add
add
add
faddp
add
mov
rolb
xor
cmp
mov
cmp
das
mov
int3
testb
add
imul
inc
add
add
sub
or
pop
gs
jae
add
add
stos
aam
cmp
inc
xchg
add
add
je
mov
cmp
add
add
ljmp
popa
int3
cs
fmull
pop
cld
sbb
xchg
add
lret
dec
xchg
dec
daa
rolb
loopne
das
xchg
faddl
add
out
lea
pop
insl
add
mov
add
add
add
sub
insb
int
lahf
dec
mov
dec
cs
add
add
movsb
add
push
rolb
in
mov
add
xor
addb
inc
add
mov
inc
add
pop
push
pop
rolb
xchg
add
mov
cmp
adc
push
add
add
and
loope
add
bound
mov
sbb
dec
lahf
ds
or
add
mov
pop
mov
xchg
pushf
push
add
cmp
fisttps
add
sub
sbb
push
add
jmp
lcall
push
add
repz
add
sub
lods
push
jb
stos
lret
inc
ret
push
ja
rcrl
je
xchg
jae
add
inc
add
add
aam
scas
sahf
insb
dec
test
dec
dec
mov
pop
or
add
ljmp
lcall
add
add
dec
vpcmpeqb
sub
add
jge
add
inc
add
lods
rorl
pop
xor
inc
jne
sub
sub
or
add
int
jo
rolb
dec
xchg
jecxz
fdivrl
sahf
fisubs
add
xor
push
pop
xchg
test
jae
xchg
call
add
jnp
fsubr
mov
add
mov
add
or
mov
or
xchg
or
sub
lret
mov
mov
or
jge
add
mov
dec
repnz
lret
mov
pushf
cli
push
sbb
sbb
mov
lods
addb
xchg
lods
cmp
aad
add
mov
add
add
or
test
lods
inc
aas
inc
xor
xor
jg
add
in
lahf
aaa
in
or
add
data16
add
call
cmp
dec
ror
inc
dec
or
push
add
fbld
sbb
add
fiaddl
push
and
add
and
dec
gs
and
rolb
aad
ljmp
std
sbb
adc
cmp
dec
adc
enter
sub
inc
call
loope
lcall
add
inc
add
mov
mov
adc
fiaddl
cmp
add
sarl
movb
enter
add
out
push
add
lods
mov
jnp
fucomip
xor
add
add
lods
inc
add
mov
mov
jmp
gs
dec
clc
push
add
mov
xchg
fstp
mov
pop
rolb
dec
or
add
pop
rcrl
or
dec
inc
dec
cmpsl
xchg
dec
rcrl
and
mov
and
mov
add
inc
mov
or
or
add
loopne
std
sahf
jg
jns
das
push
repnz
fmul
pop
add
testl
sbb
xchg
add
clc
movsb
add
add
mov
adc
mov
jno
add
inc
add
add
add
push
sub
add
ret
cli
pop
in
jns
xchg
add
sub
add
mov
mov
arpl
jbe
stos
mov
fimull
call
aam
xchg
add
add
add
jnp
pop
jb
sbb
cmpsl
pop
daa
lahf
pop
jb
inc
add
fwait
xor
mov
js
adc
fistl
and
add
jno
sub
mov
push
add
inc
add
add
xchg
or
mov
add
call
shll
movsl
mov
add
jnp
add
sub
add
and
mov
lock
out
cmp
movsl
or
add
jmp
add
mov
sub
das
dec
sub
add
add
add
jne
lds
les
xchg
dec
pushf
sbb
xor
xchg
add
subl
aad
xchg
add
add
xchg
enter
les
mov
jle
call
mov
add
sub
popf
jns
adc
loop
in
adc
xchg
jge
add
rolb
xor
sub
hlt
add
hlt
add
add
mov
icebp
xchg
aas
jns
insl
pushf
push
add
lret
inc
adc
shr
add
popf
add
cmpsl
js
in
add
push
add
inc
add
cld
cld
hlt
add
jo
inc
cmpsl
pop
std
movsb
add
xchg
rcrl
push
out
cld
cmp
mov
orl
jne
sti
rolb
add
push
inc
add
fs
or
imul
addr16
add
into
and
fiaddl
push
lret
ljmp
add
cmp
cmpl
cmp
mov
cmpsl
cmpsl
addb
fwait
inc
add
std
imul
inc
xor
int3
xchg
add
int
iret
lods
outsb
xchg
add
add
adc
stc
imul
loop
dec
jle
add
mov
and
add
jmp
add
fimull
fdivrl
push
add
inc
in
pop
inc
add
bound
mov
mov
add
repz
add
rolb
rolb
mov
rolb
add
nop
add
add
add
add
mov
mov
sub
adc
movb
cltd
fcompl
jp
rolb
addl
add
mov
or
mov
add
inc
jb
cmp
add
fistl
add
add
add
adc
jae
pushf
rolb
mov
xchg
add
pusha
add
add
add
imul
add
add
leave
mov
cld
js
imul
imul
mov
loopne
addb
add
jg
or
aam
test
mov
stos
xor
add
mov
inc
sbb
add
pop
xchg
add
inc
add
mov
mov
xchg
add
insl
pop
jmp
mov
sub
ds
jmp
add
paddusw
lock
lea
pop
and
jne
pop
mov
add
mov
pop
lea
pop
and
mov
jae
sbb
add
inc
add
lods
adc
and
outsl
pop
xor
sbb
pop
xlat
xchg
pop
adc
rolb
mov
mov
push
inc
add
push
add
in
mov
add
add
add
pop
pop
add
pop
sahf
sbb
movb
and
add
add
and
xchg
inc
dec
aam
push
outsb
jns
xchg
ljmp
add
stos
jle
jmp
cmp
insb
test
jmp
frstor
pop
popa
or
add
mov
adc
adc
push
push
adc
mov
int
push
ljmp
movsl
cwtl
pop
movb
add
xchg
or
ds
imul
add
cmp
mov
out
sbb
in
and
add
add
ja
add
mov
insb
mov
or
cmp
out
and
movb
pop
cs
ds
cmp
jb
pop
dec
lcall
in
sub
add
int3
stos
pop
ret
pop
call
les
adc
mov
add
add
push
out
push
sub
push
imul
push
test
or
sbb
int3
inc
popa
dec
enter
or
dec
dec
jnp
xor
ret
jae,pt
pusha
add
pusha
add
popa
or
test
outsb
rolb
mov
aam
adc
leave
test
ds
xor
and
mov
adc
add
add
mov
cmp
jo
movsl
and
mov
add
add
or
mov
lret
add
add
jl
sahf
outsl
ljmp
adc
popa
xchg
add
add
cmpxchg
in
cmp
fsubp
aas
inc
add
mov
movsl
decl
push
lret
jno
add
pop
xchg
outsl
addr16
testb
mov
push
add
and
add
mov
add
add
add
push
add
stc
add
add
call
add
movsb
add
xchg
fucomip
or
add
add
and
adc
jo
aas
mov
insl
xchg
add
cmpsl
add
mov
cld
push
add
add
add
add
add
loop
mov
pop
movsb
add
loop
out
pop
sbb
outsb
pop
xchg
xor
popf
inc
add
imul
les
cwtl
clc
sbb
add
add
rolb
stc
adc
add
add
fwait
xchg
pop
ja
pop
and
xor
mov
sub
mov
mov
mov
adc
lcall
js
and
aaa
mov
cli
mov
and
aaa
adc
arpl
iret
cld
into
popa
movsb
add
mov
push
add
add
in
std
pop
rolb
ret
mov
add
sub
add
add
bound
mov
lret
mov
push
sub
fisubrl
jmp
cs
jecxz
jne
jecxz
mov
add
pop
adc
add
add
add
std
out
je
test
cmp
lea
stos
mov
cltd
inc
aas
cmc
pop
push
jp
jns
mov
out
out
stc
ja
arpl
mov
aam
cld
repnz
mov
decl
clc
add
frstor
mov
fnstenv
add
add
fsts
icebp
daa
mov
out
lods
popa
xor
cltd
pop
jmp
xor
adc
sahf
xor
mov
adc
adc
add
xchg
fisubl
inc
add
mov
mov
mov
or
jno
or
add
je
push
add
xchg
add
and
mov
add
pop
inc
sub
xor
add
dec
in
in
pop
test
xchg
add
fldenv
sbb
dec
mov
addr16
popa
inc
sahf
mov
mov
sarl
add
and
mov
rolb
add
push
add
jle
stc
dec
arpl
cmp
inc
add
mov
add
mov
icebp
dec
push
add
test
xor
and
mov
lods
and
mov
push
dec
jo
aas
popa
push
add
mov
mov
or
gs
decl
movb
add
movsl
pop
add
rcl
xchg
shufps
jecxz
add
addb
add
jo
addb
add
or
dec
stos
push
add
movsb
add
pushf
adc
rolb
mov
pop
mov
add
ljmp
push
add
pop
decl
xor
outsl
add
add
push
add
add
movsl
aam
std
fldcw
mov
ds
or
inc
push
add
andl
mov
cmpsb
add
je
mov
outsb
ret
mov
add
cmp
mov
fwait
and
mov
xor
enter
in
das
or
add
mov
mov
insb
mov
pop
sbb
mov
jae
lock
and
mov
sub
xor
out
add
add
mov
and
add
cmp
add
pop
xorps
inc
add
add
in
mov
clc
repnz
add
jle
add
ret
jp
cs
clc
clc
insl
cmp
or
lods
loope
add
add
push
add
inc
jnp
add
mov
add
pop
js
add
rcrl
faddl
jg
push
add
add
ljmp
fmull
mov
popf
jne
icebp
fmull
add
in
pop
xorl
sub
add
xchg
or
dec
repnz
rolb
pop
jge
add
jb
je
movsl
mov
add
mov
movb
aad
test
add
mov
add
xor
add
mov
cmpsb
add
imul
sbb
add
add
add
xchg
add
add
jae
xor
adc
sbb
add
ret
add
add
or
add
mov
add
movsl
lea
xor
inc
add
outsb
stc
xchg
add
add
andl
mov
or
popa
push
mov
xchg
stc
cmp
mov
dec
sbb
dec
mov
daa
inc
adc
arpl
jnp
lock
inc
add
add
pop
or
push
add
stos
add
fsub
add
les
push
add
pop
adc
mov
pop
push
add
addb
add
add
add
jnp
cmpsl
mov
repz
add
pop
out
xchg
add
mov
sahf
or
add
mov
add
add
fistpll
lock
xchg
aaa
dec
in
jnp
add
imul
inc
add
mov
add
les
xchg
mov
add
sub
xlat
jl
cmpsl
int3
dec
out
xor
pop
dec
fists
aam
popa
xor
mov
add
stc
cmp
test
fsts
xlat
sbb
adc
add
xchg
add
add
add
pusha
add
sub
add
add
fcoml
add
add
xor
push
add
pop
sub
xchg
adc
jg
popa
push
add
mov
add
jge
iret
sub
add
enter
cmp
dec
dec
stos
and
mov
mov
jg
add
mov
aas
push
nop
add
add
jbe
out
adc
dec
inc
ret
bound
mov
inc
mov
loop
pop
lods
addb
or
or
in
pop
push
add
insl
test
mov
mov
mov
xchg
jo
test
scas
scas
testb
out
out
pop
jbe
test
test
bound
mov
dec
fistl
add
sbb
add
test
aam
inc
lock
sbb
ja
add
push
mov
fmuls
inc
cmp
dec
popa
and
sbb
add
xchg
mov
push
data16
add
mov
pop
inc
mov
mov
out
mov
add
mov
mov
test
aam
cwtl
mov
push
add
add
repnz
add
or
test
int
add
test
mov
lea
out
pop
int
add
pop
or
pop
mov
pop
cmp
add
mov
stos
pop
and
mov
outsl
fildl
mov
mov
push
inc
add
jo
xchg
add
jb
scas
rolb
add
xchg
jno
push
add
add
imul
loope
mov
mov
inc
add
movsl
mov
push
lock
mov
pop
mov
add
pop
dec
hlt
add
add
add
int
cmp
add
bound
mov
cmp
mov
leave
jg
add
outsl
inc
mov
adc
iret
out
push
add
push
add
add
mov
add
mov
repz
pushf
cwtl
ret
add
add
ja
out
xchg
add
fwait
add
add
mov
ljmp
cmp
mov
inc
imul
test
int
xchg
push
add
add
mov
xchg
lcall
movl
fisubrs
add
popf
dec
scas
nop
add
add
nop
add
add
pop
andl
cmpl
add
in
cmp
adc
mov
dec
pop
jno
add
movsl
lds
add
imul
and
mov
clc
loope
add
add
test
lret
push
cmp
add
movsl
addb
pop
bound
mov
add
lock
xchg
add
jo
cli
pop
push
repnz
aaa
cmp
andl
mov
push
dec
add
rolb
in
stos
mov
sbb
mov
push
add
add
addr16
sub
push
add
sahf
into
cmp
mov
data16
mov
add
inc
add
loopne
pop
jmp
add
jl
xchg
das
ret
rolb
xchg
pop
cmp
movb
pop
test
cmc
xchg
add
mov
xchg
lods
cmc
bound
mov
sarl
cltd
adc
cld
ds
add
add
add
movb
lcall
imul
push
add
jae
add
addb
mov
movsb
add
mov
add
xor
add
jg
add
ficompl
dec
popa
test
lods
mov
sbb
or
movb
test
punpckhdq
adc
or
xorl
add
xchg
sbb
xchg
out
rolb
insl
pop
outsl
arpl
nop
add
mov
mov
mov
mov
and
mov
add
mov
add
push
add
mov
and
mov
in
lret
cmpl
dec
sub
add
in
mov
out
xchg
xchg
add
je,pn
out
ds
xchg
addb
cld
xchg
add
jno
pop
std
jb
sbb
add
cmp
xchg
out
cmp
adc
inc
add
add
add
add
xchg
outsb
out
cmp
loope
hlt
add
mov
xor
add
push
xor
add
add
cmpsb
add
sub
or
lcall
sbb
imul
cld
push
shl
add
pop
xor
add
mov
pop
push
add
fldl
add
cmpl
add
sub
ja
add
xchg
dec
popl
jnp
push
jo
mov
mov
test
or
fisttpll
outsb
rolb
jnp
lods
xchg
pop
repz
jnp
lea
xor
mov
test
pop
aas
pop
loop
psubusw
movsb
add
sub
add
push
rolb
testb
sub
ljmp
test
add
add
or
or
add
or
pop
decl
xor
nop
add
mov
jbe
scas
cmp
call
fcomps
sahf
jmp
ret
leave
mov
int3
std
popf
stos
addr16
add
mov
add
or
push
outsb
insl
pop
fiadds
push
add
inc
fistpll
add
push
add
add
add
mov
add
dec
inc
add
popa
mov
fimull
add
fnstenv
add
or
add
or
fcompl
add
or
insl
int
dec
scas
sub
rorl
add
call
jmp
cmpsb
add
popf
std
or
loop
and
sub
arpl
test
add
filds
xor
jl
or
lcall
lods
rolb
dec
xchg
andnps
outsl
jno
fcoml
xlat
lods
jp
inc
and
out
and
fidivrl
inc
stc
lea
pop
ret
sub
das
mov
xor
cs
adc
and
fwait
pop
inc
jmp
push
add
add
push
add
call
jmp
inc
add
call
add
fdivl
stos
mov
push
dec
inc
add
jb
ret
dec
or
xchg
das
sub
xchg
xchg
dec
or
loope
fmulp
dec
inc
add
daa
stos
sub
outsl
pop
mov
xor
adc
stos
call
add
adc
sub
std
inc
add
enter
imul
inc
add
mov
jg
add
push
sub
rolb
ja
add
addb
popf
inc
add
repz
sti
jg
mov
mov
xchg
add
mov
add
das
adc
or
or
pop
les
push
add
bound
mov
add
xchg
add
lock
add
lcall
sbb
insb
dec
inc
nop
add
add
loop
inc
add
inc
add
aad
test
and
mov
cmp
clc
pushf
lret
or
addb
adc
std
sahf
sbb
mov
rolb
or
add
jmp
xchg
add
mov
addb
add
int3
sti
inc
add
add
sbb
and
add
add
add
add
push
add
add
xchg
outsb
daa
outsl
add
inc
add
inc
inc
pop
sub
addb
into
pop
dec
out
fstpl
je
in
jg
aas
ds
aaa
sbb
push
add
ret
mov
mov
xor
mov
xchg
xchg
repnz
xor
mov
add
cli
shrd
ljmp
lds
loope
fistps
lret
mov
add
ljmp
add
sbb
mov
mov
add
add
add
rolb
xor
cmp
data16
and
mov
add
sti
pop
daa
cld
out
mov
adc
cs
mov
jo
in
or
add
mov
add
dec
xor
addl
add
add
xchg
push
inc
jge
rolb
lods
repz
mov
sbb
leave
cmp
add
push
add
cmp
mov
add
iret
pop
lret
cld
pusha
add
or
fildll
jl
add
add
push
push
add
popa
addb
add
add
inc
mov
out
and
sub
add
xor
fnsave
push
jbe
mov
outsb
mov
mov
and
add
ret
lods
and
add
mov
and
inc
add
popf
js
fisubl
xchg
add
jp
add
push
push
add
add
stos
fisubrl
mov
add
add
pop
adc
pop
jnp
mov
ljmp
jne
mov
cmpsl
sub
data16
push
add
add
mov
add
adc
xchg
outsl
cmpsb
add
mov
add
out
rolb
cmpsb
add
add
cmp
add
popl
fisttps
add
jecxz
push
add
ret
dec
mov
add
lds
add
imul
lret
or
dec
adc
fistpl
add
nop
add
or
aam
push
mov
repnz
ret
rcl
sbb
fnstenv
andl
mov
add
mov
xchg
add
aas
jnp
rolb
orl
add
add
add
add
add
pop
mov
mov
mov
xor
add
add
add
bound
mov
add
shrl
xor
int3
ret
or
mov
repz
xor
je
and
movsb
add
test
dec
loope
add
mov
push
add
int3
jns
sub
push
add
mov
mov
ret
xchg
mov
add
add
dec
and
loope
add
stc
cmpsb
add
add
push
hlt
add
sbb
int
add
add
xor
add
add
or
add
cmc
mov
mov
add
out
data16
mov
in
push
add
mov
add
stc
xchg
add
pop
sbb
dec
mov
and
repz
or
shll
aad
add
insl
fcos
rolb
xor
jns
add
mov
lcall
mov
add
mov
push
add
mov
movsl
mov
pop
loopne
add
pop
ret
dec
mov
sbb
add
add
mov
add
add
push
jo
mov
hlt
add
push
add
push
add
sub
add
add
loopne
push
jbe
jp
add
pushl
int
push
sub
lret
js
add
dec
jl
cmp
loope
xor
add
mov
mov
div
dec
pop
stos
les
cltd
push
out
adc
and
add
rolb
jno
add
jb
testb
leave
cmp
add
pop
shll
adc
jnp
add
addb
push
mov
cmpsb
add
nop
add
stos
push
add
sbb
mov
lcall
cmpsl
repnz
add
mov
or
mov
cmp
jge
outsb
push
add
add
add
pop
lret
mov
mov
cltd
pop
mov
or
out
fisttpll
or
add
sub
add
add
outsl
jae
add
pop
mov
add
lds
insl
add
fiaddl
fisttpll
rolb
mov
addb
mov
push
add
sahf
jecxz
jg
add
int
add
jle
sub
add
dec
lea
add
add
movq
out
dec
mov
mov
stos
mov
int3
mov
xor
mov
aam
pop
sub
xor
mov
add
mov
adc
hlt
add
pop
lret
cltd
lds
and
inc
add
pop
loope
add
push
mov
add
add
sbb
and
mov
mov
xchg
daa
test
test
sub
pop
je
in
and
mov
out
xor
add
add
add
and
aam
jbe
sub
xor
sub
and
testb
push
out
xchg
out
push
add
lods
jo
pop
gs
fstl
add
rorl
add
mov
and
add
mov
adc
cmp
add
addb
insb
mov
pop
sbb
add
fnstenv
mov
mov
out
xchg
jne
add
add
add
add
add
scas
in
mov
jg,pn
add
sbb
hlt
add
add
inc
out
jo
push
stos
imul
add
shll
xchg
add
pushf
jae
shr
ret
inc
add
sbb
add
add
pop
aaa
sub
add
lret
stos
in
lock
add
add
add
je
movb
jns
pushf
roll
dec
outsl
aam
popl
frstor
add
add
add
cmc
shr
insb
lock
and
in
add
mov
jno
lock
out
dec
pop
lcall
gs
sahf
loop
mov
nop
add
or
add
bound
mov
aaa
pop
aas
stos
incb
sbb
xchg
add
addr16
add
xor
test
add
popf
or
add
mov
mov
pop
mov
mov
add
lds
add
ljmp
fadds
mov
pop
movsb
add
gs
add
fnstenv
jl
mov
cmp
cmp
add
add
pusha
add
add
mov
push
add
fildl
data16
stos
jns
jno
xchg
add
or
cmp
lcall
addb
push
add
add
add
add
arpl
add
add
inc
adc
out
pop
adc
out
add
add
sbb
iret
imul
mov
out
test
lods
enter
push
add
add
sbb
mov
out
pop
push
jno
sbbl
pop
stos
inc
add
frstpm(287
ret
dec
ds
xor
popf
stos
mov
add
add
add
loope
push
add
inc
jns
cmp
add
or
mov
arpl
add
in
rorl
outsb
pop
mov
popf
dec
jmp
push
gs
test
add
mov
sub
ds
inc
add
mov
add
add
add
push
hlt
add
mov
mov
inc
mov
mov
add
outsb
xor
add
add
add
loop
or
cli
sub
xchg
cli
adc
out
inc
outsb
or
push
sub
fisttps
sub
add
mov
sub
fstl
add
fwait
add
mov
add
mov
js
idiv
jge
pcmpgtd
pop
les
adc
inc
add
push
pop
xor
sbb
push
jno
add
sub
add
add
adc
or
les
xchg
jecxz
add
pop
add
outsb
jno
addl
pop
pop
pop
mov
mov
rolb
add
xor
js
jp
add
pop
stos
sbb
jo
jbe
repnz
imul
dec
out
adc
insb
mov
out
xor
xchg
add
mov
xchg
dec
adc
pop
pop
cmpsb
add
cltd
stos
mov
sub
add
add
add
ret
mov
ficompl
add
fsub
add
mov
leave
add
xchg
add
jecxz
add
adc
jg
add
adc
add
add
int
mov
in
jp
adc
dec
lea
lahf
sub
dec
lahf
rolb
add
arpl
ljmp
dec
ret
rcrl
add
push
add
pop
fadd
out
clc
mov
adc
mov
inc
fidivs
add
add
iret
aaa
int
push
add
in
xchg
mov
jge
add
add
add
mov
add
ljmp
jg
adcl
sti
adc
ljmp
push
add
add
xor
int3
data16
mov
and
adc
add
mov
jno
fiadds
add
inc
dec
xchg
outsb
xchg
add
mov
add
push
add
add
xchg
arpl
dec
or
scas
out
rolb
jmp
lods
mov
fnstcw
add
jb
loopne
mov
mov
rolb
int3
sbb
flds
mov
add
inc
and
mov
push
mov
pushf
icebp
add
data16
cmp
decb
repz
push
cmpsb
add
add
imull
add
addb
rol
or
add
test
add
mov
fldcw
push
add
add
xor
ss
ds
pop
call
add
xchg
add
imul
cmpsb
add
inc
jge
xchg
mov
lock
adc
cmpsl
mov
jns
mov
mov
add
add
ja
mov
jno
stos
and
xor
mov
addb
add
into
lock
arpl
inc
mov
sbb
lods
test
popa
pop
add
mov
repnz
and
push
add
add
pop
or
add
bound
mov
add
xlat
call
in
aad
add
add
add
xchg
mov
xor
test
mov
mov
rolb
jb,pt
loopne
loope
iret
mov
mov
push
add
mov
add
or
cmp
mov
mov
loope
add
add
dec
daa
push
add
in
arpl
jmp
addr16
and
mov
in
sahf
dec
add
add
adc
loop
jo
inc
jp
mov
add
or
xor
sub
add
mov
and
mov
jae
inc
aam
shl
das
lret
stos
pop
xchg
add
test
add
repz
jne
and
add
mov
cwtl
dec
inc
add
add
add
ja
xchg
dec
xchg
mov
add
repz
inc
sub
rolb
out
int3
push
dec
repnz
add
dec
fistps
push
sti
jno
add
add
add
cmpsl
inc
inc
push
cmp
cld
pushf
cmc
lock
add
mov
add
xor
icebp
cmp
mov
aam
je
adc
push
or
jns
add
add
mov
mov
rolb
aas
outsb
pop
or
or
enter
jecxz
add
mov
in
and
cmp
jae
add
jle
add
mov
incl
mov
jecxz
xchg
add
lret
fnstcw
or
jae
mov
inc
cwtl
aad
das
mov
mov
add
sbb
lcall
jg
rorl
sbb
pop
sbb
xchg
jbe
adc
cmp
mov
add
and
mov
ja
add
sbb
fiaddl
test
jne
jmp
mov
adc
mov
mov
sub
dec
std
push
cmpsl
sbb
mov
add
add
mov
add
add
inc
push
je
loope
iret
mov
xchg
add
rolb
jo
popf
jecxz
add
add
jl
push
seta
mov
leave
rcrl
jbe
ja
jae
xchg
add
out
or
sbb
xor
add
push
test
ret
add
das
in
out
lret
push
repz
jne
mov
mov
enter
add
add
pop
inc
add
mov
add
mov
add
or
mov
dec
xchg
sub
xchg
inc
adc
shll
movsb
add
and
jg
int3
in
sub
add
repz
add
out
mov
sbb
push
or
dec
pop
les
mov
jge
xor
xlat
cmpsl
movb
add
jbe
testl
ss
inc
add
pop
ljmp
adc
mov
xchg
add
add
cli
jg
imul
mov
add
outsl
inc
add
jecxz
test
add
add
and
mov
fsubrl
push
mov
add
add
leave
into
addb
add
xchg
pop
push
add
add
repz
mov
addb
ret
imul
inc
jecxz
add
xchg
mov
add
jecxz
add
jmp
and
mov
out
mov
xor
add
mov
jae
add
cmc
mov
frstor
mov
push
add
idivl
loope
add
xchg
add
mov
or
xchg
out
sbb
negl
test
mov
addb
pop
sahf
addb
mov
mov
addb
add
sub
rolb
je
jo
mov
adc
and
add
rolb
aad
jb
stos
sbb
add
lea
lods
call
stos
stos
sbb
stc
xor
jae
cmp
sbb
aad
pop
pop
inc
add
enter
add
mov
xchg
cwtl
lcall
cmc
adc
push
add
fidivrl
test
mov
mov
popf
mov
add
gs
loopne
cmpsl
dec
aas
push
add
sahf
lods
mov
out
push
add
pop
sbb
dec
mov
mov
mov
pushf
popa
xchg
add
add
add
nop
add
add
lods
and
mov
enter
jg
add
mov
fistl
lret
iret
add
add
xor
dec
lock
jmp
mov
mov
fwait
ja
mov
add
adc
add
mov
push
adc
mov
inc
add
add
mov
add
or
xor
add
mov
add
mov
xchg
enter
jl
add
xor
addb
add
imul
ret
sub
rcrl
adc
adc
mov
clc
aad
add
stc
push
icebp
add
pop
xchg
sub
mov
or
inc
pop
fiaddl
add
push
add
testb
movb
add
and
mov
roll
or
mov
stc
pusha
add
jnp
bound
mov
mov
add
xchg
add
add
push
mov
or
xlat
adc
pop
stc
jp,pt
jg
add
add
fisubrl
add
notl
dec
and
mov
xor
xorl
add
add
sub
lods
jbe
add
mov
stos
mov
sbb
scas
sub
add
jo
pop
rolb
pop
add
adc
enter
les
cltd
push
dec
sbb
add
ret
test
scas
ret
adc
push
std
aam
adc
dec
sub
in
adc
mov
mov
push
pop
lret
stos
ja
lea
fnsave
add
mov
add
mov
out
jnp
inc
addb
jecxz
movb
addb
add
mov
add
add
add
add
adc
enter
inc
add
xorl
aad
add
add
mov
in
sub
add
add
add
add
add
faddl
mov
test
dec
or
add
add
mov
add
pop
rorl
or
or
add
sub
add
jno
xor
nop
add
add
stos
scas
jae
lds
addb
add
jg
add
push
inc
add
add
ja
add
add
and
mov
push
add
add
cmpsl
add
mov
mov
add
xor
lret
and
mov
add
add
mov
adc
mov
out
pop
bound
mov
add
xlat
cmp
add
pop
ja
cld
push
add
mov
adc
lock
fldenv
push
jns
in
lods
sbb
mov
mov
in
addr16
add
add
jns
icebp
dec
lcall
adc
add
je
insl
aad
add
add
add
mov
add
psubusw
cmp
stc
out
decl
rcrl
add
ljmp
push
add
add
outsl
sub
add
inc
add
cmp
data16
sbbl
push
repnz
add
inc
mov
negl
mov
jno
out
popf
incl
ret
add
call
mov
xchg
cmpsl
xor
inc
adc
fistpll
add
outsl
adc
mov
mov
hlt
add
xlat
rolb
xor
add
rcll
movsb
add
pop
jmp
dec
rcpps
pushf
aam
les
add
enter
mov
or
add
mov
inc
add
add
mov
pop
jns
mov
cmp
adc
add
dec
adc
js
xchg
add
xchg
jno
add
add
add
jl
add
add
mov
jb
icebp
add
mov
add
pop
inc
xchg
add
add
mov
add
mov
push
es
fisubrs
insl
fldl
pop
push
add
lea
xor
add
push
ja
loope
add
cmp
add
popa
sub
add
std
pop
out
movb
add
addb
add
mov
add
mov
add
adc
in
sbb
add
add
pop
mov
mov
xchg
xor
popf
in
mov
popf
in
push
add
mov
rolb
lahf
cltd
cmp
imul
fsubrs
pusha
add
cmp
sub
add
adc
adc
aam
lea
addb
add
mov
adc
nopl
pushf
add
add
fcompl
repz
pushf
jecxz
ficoms
dec
test
jnp
xor
and
push
add
enter
add
adc
dec
leave
jecxz
ficoml
bound
mov
add
cmc
push
sub
sbb
add
cmp
cs
adc
push
mov
les
mov
mov
add
sti
xor
and
mov
mov
add
pop
fbstp
sub
add
add
fmull
rolb
adc
push
addr16
add
add
std
das
sub
add
add
mov
loopne
mov
xchg
push
rolb
mov
pop
and
inc
add
fisubs
mov
lahf
shl
add
pop
bound
mov
jmp
sbb
rolb
add
lret
icebp
fildl
shr
add
fisubl
rolb
testb
lods
cld
pop
mov
adc
pop
inc
add
add
jae
mov
add
addb
add
std
mov
ret
push
loopne
lcall
pop
mov
aam
cmpsl
and
int
xlat
in
and
cmpsl
sbb
jg
sub
in
clc
notl
fidivl
dec
jecxz
test
mov
in
or
sahf
or
lods
in
add
xchg
add
mov
rolb
xchg
add
add
fistl
mov
lret
add
add
cmp
add
xor
das
pop
into
cmpsb
add
add
add
add
into
adc
mov
add
push
and
mov
adcl
add
mov
add
push
or
add
lds
in
add
mov
jl
dec
into
je
js
add
add
mov
test
adc
jns
add
add
add
dec
icebp
test
aad
add
ds
cmp
add
lds
cmp
mov
addr16
dec
cld
push
add
and
mov
add
push
xor
inc
lods
inc
add
add
pop
xchg
add
loope
or
fcoml
and
add
mov
inc
add
addb
add
mov
jmp
mov
xchg
xlat
xchg
insl
push
rcrl
pop
int
and
test
add
std
sub
adc
mov
xor
dec
or
pop
and
mov
or
inc
addb
add
sbb
scas
xor
add
and
xchg
cmpsl
xor
scas
mov
pushf
rcr
enter
das
cld
and
mov
andl
add
aad
mov
add
jbe
int
call
mov
inc
pushf
test
mov
mov
xor
movsb
add
stc
or
stc
test
sbb
mov
add
orl
mov
dec
test
lahf
push
add
add
inc
mov
add
int
adc
jnp
popa
out
lods
jno
aaa
jbe
push
push
add
jae
movb
mov
cmp
lret
push
data16
lds
in
mov
sub
scas
insl
xor
or
sbb
mov
and
add
test
movb
add
cmp
stc
lret
dec
mov
icebp
je
mov
jle
mov
adc
xchg
sub
mov
call
inc
add
add
jns
add
fucom
add
inc
insb
and
pop
daa
in
push
das
cltd
inc
add
add
call
add
das
jle
inc
add
add
xchg
add
add
sti
lds
pop
fcomi
ds
in
addb
dec
pop
sbb
add
loope
add
mov
lahf
insb
fwait
aad
add
add
add
lcall
push
add
mov
sbb
pop
fiadds
test
inc
add
cmp
jno
xchg
add
xor
add
mov
mov
into
add
je
ret
jle
add
add
mov
ret
push
add
add
xlat
pushf
iret
sub
mov
push
add
mov
add
inc
add
mov
and
add
mov
testb
add
add
fwait
lahf
cmp
pop
loop
mov
and
add
pop
fistpll
add
add
push
add
and
pop
dec
adc
daa
xchg
add
add
imul
and
mov
mov
add
adc
add
hlt
add
testb
mov
push
or
xor
call
mov
add
in
enter
out
cld
imul
stos
mov
movsb
add
cmc
ds
or
or
add
xlat
mov
add
arpl
adc
push
sbb
jns
add
add
or
add
mov
add
xchg
jne
out
pop
lahf
xor
jne
decl
mov
add
add
lds
dec
push
add
cmpsb
add
add
ja
addb
add
std
dec
fnsave
lcall
add
je
cli
sbb
add
mov
jo
movsl
pop
sub
scas
sub
stos
xchg
cmp
ja
decl
add
cli
pop
cmp
add
rdpmc
fmull
inc
push
add
inc
add
das
ss
add
imul
loope
rcrl
add
jl
scas
icebp
clc
data16
xchg
add
loop
mov
adcl
fidivs
push
add
fadd
add
push
add
mov
sahf
inc
pusha
add
adc
or
loopne
fadds
or
xchg
adc
sub
fs
into
adc
fwait
jb
mov
sbb
adc
jb
or
sar
mov
jp
mov
sti
jg
add
rcll
add
dec
dec
push
lcall
addb
xchg
jae
and
mov
add
addb
jns
jp
rolb
aas
jb
jmp
cmp
cld
add
add
dec
jl
pop
xor
sbb
sbb
and
xchg
mov
es
push
lret
fcompl
lds
dec
mov
rolb
pop
jl
ficoml
mull
aas
rcl
std
icebp
gs
mov
sti
shll
or
cmp
loope
gs
push
dec
loope
mov
fldenv
aad
add
add
add
inc
pushl
mov
add
movsb
add
fbld
jo
mov
push
pop
ds
jae
sub
mov
pusha
add
sbb
add
mov
lds
rolb
mov
imul
inc
clc
cwtl
rolb
ret
xchg
jp
xchg
add
movl
and
mov
pusha
add
pop
lods
mov
testl
cmc
jnp
repnz
pop
xsave
mov
mov
adc
cmpsb
add
mov
cmp
add
add
xchg
mov
frstor
lods
lret
xchg
lret
insl
int
push
mov
fldenv
cmp
mov
mov
testb
int3
add
clc
outsb
add
add
add
inc
add
xor
clc
int
add
xor
cmpsb
add
fistpl
cli
imull
add
pop
or
out
out
mov
cmpsb
add
sbb
scas
repnz
dec
jno
mov
mov
push
add
lcall
cmpsl
mov
sahf
test
ret
push
add
into
ljmp
loopne
mov
dec
fwait
mov
dec
movl
push
add
mov
adc
mov
sbb
daa
jb
aaa
push
add
aad
mov
jge
and
or
mov
out
repnz
jo
cli
repnz
add
add
sahf
xor
and
pusha
add
mov
mov
add
jnp
add
cld
mov
xchg
add
pop
ret
add
cmp
and
dec
xor
aam
push
and
mov
popf
ja
add
add
sub
add
xchg
or
pop
mov
in
cmp
xor
lds
pop
mov
inc
pop
fidivrl
in
movb
add
scas
sub
add
add
jle
add
shl
add
dec
mov
and
xchg
add
and
push
hlt
add
into
movb
loope
mov
addr16
add
mov
add
mov
add
icebp
loop,pt
mov
aas
out
dec
pop
or
inc
add
jl
add
lock
add
lock
add
je
jns
add
rorl
pop
and
add
aam
call
jp
cld
pop
imul
or
add
add
pop
xchg
dec
inc
add
fstl
add
xor
fcoms
daa
sti
push
xchg
xchg
test
or
and
rolb
push
push
mov
insb
add
data16
mov
sahf
sbb
cmp
in
cwtl
mov
add
add
arpl
popa
test
add
rolb
addb
dec
movsl
push
inc
add
dec
xchg
dec
xchg
adc
push
add
cli
mov
or
sub
testb
jb
jnp
add
dec
jbe
push
add
add
add
add
cwtl
pop
jns
add
mov
out
jg
shr
sub
mov
pop
imul
lret
mov
jae
jbe
cmp
bound
mov
add
adc
and
add
xchg
add
into
jge
addb
and
roll
add
testb
add
add
out
cmp
mov
frstor
mov
add
add
mov
ljmp
rorl
sub
push
add
mov
shr
xchg
add
add
add
add
filds
fisubs
fisubrs
mov
pusha
add
jb
repnz
pop
jae
or
or
sti
in
jmp
adc
mov
push
add
enter
pop
std
fwait
push
lock
scas
adc
adc
xchg
mov
mov
mov
pop
imul
in
cmp
add
sti
sub
add
lahf
xchg
cmc
xchg
xchg
rolb
cmp
lret
mov
imul
inc
jle
mov
mov
and
mov
xor
enter
cmc
aas
pop
in
mov
int
pushf
testl
push
dec
test
lcall
out
jge
rcr
dec
aaa
mov
inc
mov
les
cmp
mov
dec
sub
add
push
arpl
jecxz
push
add
pop
mov
leave
lcall
lods
dec
push
add
inc
xchg
jnp
fistl
dec
pusha
add
add
add
add
out
add
and
mov
add
xchg
mov
jnp
add
add
dec
cvtpi2ps
sub
dec
ret
jns
inc
add
add
add
int
pop
jmp
xor
xor
cmpsb
add
repnz
add
add
push
add
xchg
test
sbb
iret
push
add
jb
shll
dec
xor
mov
mov
cmp
jmp
add
mov
out
sub
add
add
add
mov
push
add
add
cmc
jne
js
add
lea
xor
out
adc
mov
adc
mov
out
sti
add
mov
jne
icebp
sti
adc
lret
sti
push
fisubl
sub
fwait
rolb
mov
add
add
pop
xor
jae
lcall
sub
scas
leave
decb
lods
js
rolb
add
and
pop
jnp
add
pop
add
push
pop
dec
adc
outsl
stc
jnp
sub
test
mov
icebp
adc
bound
mov
xchg
add
sbbl
push
xor
jle
push
add
add
cld
add
push
add
ds
aad
push
add
bound
mov
add
negl
xchg
adc
popa
cwtl
mov
inc
add
popf
xor
mov
lcall
loopne
jle
outsl
cld
pop
xchg
add
xor
push
or
in
hlt
add
and
mov
fisubrs
scas
push
enter
mov
add
pushf
push
rcl
add
insl
mov
cmp
inc
xchg
add
add
xor
scas
adc
movsl
rolb
xchg
add
jmp
gs
add
mov
cmp
add
iret
aaa
cli
push
fbstp
dec
into
jl
mov
add
add
jl
jge
add
pop
outsl
hlt
add
add
push
add
leave
arpl
add
mov
mov
call
lret
sub
roll
adc
fldenv
dec
sbb
dec
imul
add
inc
xor
mov
leave
jb
mov
addb
add
add
mov
out
xor
add
pop
out
xchg
dec
cmp
lods
jne
cltd
mov
add
stc
addb
imul
mov
mov
add
push
add
add
add
ljmp
add
and
mov
xchg
stos
cmp
add
add
icebp
or
nop
add
loop
jbe
mov
cmp
add
dec
push
sqrtps
add
rcrl
add
jns
add
in
dec
in
out
pop
rcll
fildll
jecxz
es
add
xchg
cmpsb
add
sub
add
sub
add
cmpsl
sbb
adc
xor
lock
dec
aad
add
outsl
in
lret
add
dec
inc
add
out
sti
xor
mov
enter
in
mov
add
add
mov
adc
add
xor
jnp
add
mov
cs
mov
push
add
add
pop
sti
pushl
push
add
add
sti
loope
nop
add
and
add
add
add
ljmp
add
jns
adc
mov
test
pop
rcrl
mov
rolb
dec
js
sahf
push
repnz
les
mov
lcall
inc
xchg
sub
add
enter
test
sub
pop
pop
mov
push
aam
aam
imul
aas
mov
enter
das
cmp
cmp
cmpsl
push
add
fstp
dec
push
add
fstpl
movb
mov
testb
inc
fcmovbe
add
cs
jnp
lahf
or
xor
inc
add
mov
icebp
pop
bound
mov
add
xlat
addb
js
pop
or
pop
adc
out
mov
cmpsl
movsl
mov
adc
mov
sub
add
add
add
out
out
cmpsl
pop
ljmp
jno
mov
adc
push
rcr
add
into
aam
cmp
sbb
bound
mov
pop
imul
adc
mov
jle
add
addr16
add
jp
jmp
mov
hlt
add
pop
jno
aaa
mov
movsb
add
add
mov
mov
add
jno
add
inc
add
jmp
lods
cmp
or
sti
in
imul
inc
add
add
mov
xor
mov
push
cwtl
or
or
adc
cmp
jg
dec
fcoml
add
lock
adc
pop
cmp
sbb
pop
mov
add
je
je
cvtpi2ps
into
repz
dec
scas
rorl
xchg
sub
out
test
inc
add
nop
es
add
add
add
mov
xchg
ret
add
data16
pop
inc
add
aas
mov
stc
nop
es
jg
iret
push
stc
nop
es
add
insb
add
add
testb
je
nop
cld
nop
jmp
mov
in
fildll
push
mov
xchg
ret
das
cmp
or
stc
nop
es
add
inc
in
mov
add
nop
cld
nop
jmp
push
pop
lock
jae
add
stc
nop
es
mov
add
xor
aaa
ljmp
add
ss
jnp
mov
stc
nop
es
add
mov
in
inc
ret
add
sub
aas
push
cwtl
dec
add
stos
stc
nop
es
jne
jns
mov
decl
push
mov
xchg
ret
xor
and
and
test
nop
es
cwtl
push
stos
add
inc
xchg
nop
es
cwtl
bound
push
add
adc
cmp
cld
nop
jmp
jnp
add
cwtl
lock
fs
nop
es
jp
lock
add
nop
es
aam
jns
mov
jne
stc
nop
es
add
add
and
stc
nop
es
mov
mov
add
loop
jmp
add
nop
cld
nop
jmp
add
jle
push
mov
xchg
ret
aad
lods
jns
add
data16
nop
es
inc
mov
add
sbb
nop
es
xor
add
add
lret
push
push
stc
nop
es
add
jns
add
push
leave
pop
nop
cld
nop
jmp
insb
add
add
dec
lea
push
mov
xchg
ret
jns
add
lock
div
nop
cld
nop
jmp
add
add
add
aad
cmp
loopne
stc
nop
es
push
inc
add
add
jb
add
add
jmp
xor
and
nop
cld
nop
jmp
add
add
nop
es
xor
lahf
das
add
bound
pop
push
nop
cld
nop
jmp
add
in
add
mov
nop
cld
nop
jmp
push
daa
insl
add
insl
add
es
add
lods
add
add
push
pop
push
mov
xchg
ret
and
lock
or
sbb
add
stc
nop
es
adc
loope
aam
or
stc
nop
es
add
add
add
mov
xchg
ret
add
aad
add
fiaddl
xchg
ret
jp
insl
add
and
add
add
jb
jb
add
add
add
mov
sub
add
nop
es
xor
add
cwtl
jnp
pop
call
adc
add
add
cmp
div
stc
nop
es
jnp
inc
mov
aad
push
add
dec
sub
stc
nop
es
add
aaa
out
mov
stc
nop
es
lock
insb
loope
add
cld
nop
jmp
jne
add
jae
add
mov
add
pusha
stc
nop
es
pop
and
cmp
or
stc
nop
es
cwtl
add
stc
nop
es
add
mov
adc
add
nop
cld
nop
jmp
jl
add
add
in
mov
nop
cld
nop
jmp
cmp
out
add
nop
cld
nop
jmp
mov
cmp
add
xchg
pop
arpl
repnz
nop
es
add
das
add
test
es
add
add
insl
pop
jns
mov
stc
nop
es
add
add
add
clc
stc
nop
es
add
add
mov
decl
push
mov
xchg
ret
add
mov
add
xor
add
nop
cld
nop
jmp
dec
ss
lahf
test
nop
cld
nop
jmp
add
add
pop
and
mov
add
cld
nop
jmp
add
add
pop
lock
mov
mov
nop
cld
nop
jmp
add
add
add
or
add
add
add
cmpsb
add
dec
nop
cld
nop
jmp
add
add
add
mov
stc
nop
es
add
add
in
push
stc
nop
es
ss
test
ljmp
add
nop
es
or
add
push
fiadds
xchg
ret
lahf
daa
xchg
mov
push
mov
xchg
ret
out
add
add
add
lea
nop
cld
nop
jmp
jl
or
aaa
test
test
or
add
nop
es
push
push
incb
je
sub
incl
add
lret
stc
nop
es
out
add
mov
add
and
mov
xchg
ret
jne
in
cmp
add
nop
cld
nop
jmp
push
jnp
mov
add
fcomp
inc
add
add
mov
rcl
lods
jmp
nop
cld
nop
jmp
adc
add
adc
add
stc
nop
es
and
add
add
jns
outsl
shl
stc
nop
es
add
add
add
scas
jne
stc
nop
es
add
add
mov
stc
nop
es
cmp
mov
jb
test
add
add
stc
nop
es
push
jb
add
push
out
dec
stc
nop
es
add
jae
add
mov
stc
nop
es
add
mov
nop
cld
nop
jmp
jne
incl
mov
add
incl
insl
add
daa
test
mov
cli
jmp
add
shlb
notl
and
sbb
stc
nop
es
add
lock
mov
stc
nop
es
push
adc
add
add
mov
add
stc
nop
es
add
out
insb
add
je
stc
nop
es
add
add
push
push
mov
xchg
ret
pop
adc
push
pop
push
nop
cld
nop
jmp
add
aad
add
add
nop
cld
nop
jmp
out
jl
add
add
push
mov
xchg
ret
add
jp
adc
jp
clc
stc
nop
es
add
data16
daa
aam
xorl
stc
nop
es
add
add
xchg
fistl
mov
xchg
ret
lods
add
loope
add
nop
es
in
add
jg
sbb
jmp
jb
inc
pop
ljmp
ret
add
nop
es
add
add
dec
push
stc
nop
es
cwtl
add
add
imul
lret
pusha
nop
cld
nop
jmp
lock
imul
jne
lock
mov
stc
nop
es
add
in
test
clc
stc
nop
es
and
add
mov
dec
pop
stc
nop
es
add
add
loope
add
sbb
scas
enter
jb
add
jp
dec
adc
mov
xchg
ret
in
mov
add
add
stc
nop
es
aad
aaa
add
jp
jge
inc
and
nop
es
jnp
in
insl
xchg
popf
add
stc
nop
es
insb
add
repnz
es
add
test
cmp
nop
es
out
jae
mov
pusha
add
add
jb
pop
ss
add
add
jns
and
nop
cld
nop
jmp
add
adc
cmp
into
pushl
push
mov
xchg
ret
insb
add
add
aaa
pop
mov
stc
nop
es
aad
push
add
test
nop
cld
nop
jmp
in
add
add
stc
nop
es
xor
add
add
add
movb
out
jl
popa
add
nop
es
cmp
add
nop
es
cmp
js
lods
and
imul
es
cwtl
dec
jne
mov
jb
lock
out
bound
xor
stc
nop
es
cmp
add
mov
stc
nop
es
xchg
mov
add
mov
mov
xchg
ret
add
add
stc
nop
es
add
push
add
add
nop
cld
nop
jmp
add
xchg
jb
add
add
jl
in
cld
push
mov
xchg
ret
jns
add
jnp
pop
jne
nop
cld
nop
jmp
add
mov
stc
nop
es
mov
jns
add
add
cltd
and
nop
cld
nop
jmp
add
add
mov
cwtl
dec
jne
stc
nop
es
add
add
mov
add
add
add
push
sub
or
daa
cmc
inc
add
jae
adc
decl
mov
xchg
ret
cmp
addb
mov
stc
nop
es
add
add
decl
add
stc
nop
es
add
pop
cmp
jb
lods
insb
insb
add
add
stc
nop
es
add
imul
jns
inc
inc
add
cld
jmp
add
insb
mov
lcall
add
add
mov
xor
stc
nop
es
add
add
add
add
nop
cld
nop
jmp
jae
add
add
stc
nop
es
add
stos
add
data16
test
add
stc
nop
es
add
add
stc
nop
es
push
insb
lahf
jnp
pop
mov
stc
nop
es
add
out
jns
movl
add
add
cmp
or
nop
es
add
repz
xor
stc
nop
es
inc
add
add
cmpsb
add
sub
nop
es
ss
add
data16
popa
add
mov
xchg
ret
adc
add
mov
dec
and
add
pop
add
add
add
ret
add
stc
nop
es
add
push
out
add
add
mov
and
mov
stc
nop
es
or
mov
stc
nop
es
add
jmp
stc
nop
es
add
movsb
stc
nop
es
add
imul
jnp
enter
cld
nop
jmp
dec
add
add
aad
jl
stc
nop
es
add
add
add
cmp
popa
add
mov
xchg
ret
daa
add
jg
stc
nop
es
adc
add
add
rep
push
mov
xchg
ret
cwtl
add
add
incl
nop
cld
nop
jmp
das
aad
out
sbb
movsb
nop
cld
nop
jmp
add
mov
and
mov
es
or
add
inc
dec
pushl
stc
nop
es
xor
insb
add
add
mov
push
mov
xchg
ret
add
dec
mov
push
mov
xchg
ret
add
add
addl
sub
es
inc
add
cmp
pop
inc
add
movsl
bound
mov
add
mov
fs
nop
es
add
lods
add
rep
stc
nop
es
mov
add
add
mov
stc
nop
es
mov
pop
sbb
stc
nop
es
add
jns
add
jae
push
add
mov
stc
nop
es
cmp
in
mov
es
jns
add
nop
es
lock
add
add
push
push
add
lock
inc
add
shl
nop
cld
nop
jmp
daa
add
into
mov
stc
nop
es
aad
add
popa
stc
nop
es
mov
jns
jns
add
jmp
es
add
add
add
xchg
add
or
nop
es
add
add
insb
add
mov
stc
nop
es
mov
jb
and
or
jmp
or
add
inc
out
push
mov
add
add
mov
rcll
add
lods
stc
nop
es
add
or
add
call
stc
nop
es
add
add
add
es
add
jg
add
inc
mov
out
add
push
nop
cld
nop
jmp
add
add
daa
inc
popa
and
nop
jmp
jae
data16
add
stos
xor
stc
nop
es
add
xchg
ja
stc
nop
es
jb
out
add
push
push
stc
nop
es
jnp
pop
add
add
mov
movl
jp
add
add
pop
adc
inc
add
pop
push
mov
xchg
ret
lods
mov
out
add
adc
inc
add
pop
inc
add
add
stc
nop
es
add
loope
mov
push
mov
xchg
ret
add
dec
add
add
stc
nop
es
insb
lods
lahf
mov
add
aam
cld
push
stc
nop
es
in
cwtl
loope
jnp
mov
add
stc
nop
es
add
adc
xor
add
sar
es
out
incl
jnp
cwtl
mov
add
call
stc
nop
es
add
xor
mov
adc
cld
nop
jmp
add
jnp
out
ret
mov
stc
nop
es
add
xchg
inc
outsb
mov
stc
nop
es
aam
add
dec
push
stc
nop
es
lock
add
add
jb
jg
add
push
out
inc
jnp
js
nop
cld
nop
jmp
mov
dec
pop
adc
nop
cld
nop
jmp
add
xor
add
les
push
out
push
push
mov
xchg
ret
insl
das
add
test
stc
nop
es
adc
test
nop
cld
nop
jmp
ss
mov
add
add
popa
lret
cld
or
jmp
add
xor
inc
add
es
add
add
jns
add
inc
add
nop
jmp
add
add
in
incl
aaa
aad
lea
stc
nop
es
add
add
lods
push
and
lea
sub
nop
es
add
das
add
mov
jb
add
xor
pop
stos
add
cwtl
dec
push
mov
xchg
ret
add
cmp
popl
stc
nop
es
add
add
xchg
lods
mov
jb
add
mov
add
add
mov
xor
stc
nop
es
adc
mov
nop
es
adc
add
add
push
mov
xchg
ret
stos
add
add
ljmp
nop
es
add
add
nop
add
mov
stc
nop
es
lahf
xchg
imul
jle
push
mov
xchg
ret
add
add
cmp
das
mov
nop
es
add
add
add
add
stc
nop
es
push
insb
push
pushw
sub
stc
nop
es
daa
cmp
add
mov
stc
nop
es
add
and
add
es
push
add
ss
stos
dec
mov
push
mov
xchg
ret
add
add
add
jae
jb
nop
es
jne
data16
cld
nop
jmp
and
mov
inc
cwtl
sub
adcb
incl
test
add
test
nop
cld
nop
jmp
add
add
js
inc
sub
nop
es
add
add
add
nop
add
mov
mov
cmp
ret
add
jae
add
stos
mov
stc
nop
es
push
add
adc
ss
jb
stc
nop
es
add
push
stc
nop
es
adc
add
cmp
push
mov
xchg
ret
inc
pop
lock
ficoml
nop
es
add
add
cmp
add
push
mov
xchg
ret
xchg
add
add
xchg
add
stc
nop
es
xor
add
add
nop
es
add
add
add
add
stc
nop
es
bound
jg
jmp
jp
nop
cld
nop
jmp
lock
mov
and
mov
inc
add
add
add
dec
push
nop
cld
nop
jmp
lods
mov
lahf
mov
add
fs
add
es
add
add
jns
pop
int
add
nop
cld
nop
jmp
mov
jae
add
or
iret
rolb
xchg
ret
bound
jnp
ss
loop
mov
add
stc
nop
es
mov
insl
jmp
nop
es
jp
add
cmp
inc
add
add
sub
stc
nop
es
and
push
lahf
add
xchg
imull
stc
nop
es
in
add
push
add
sub
test
cld
nop
jmp
insb
add
and
test
pop
add
stc
nop
es
inc
add
mov
nop
cld
nop
jmp
add
add
push
stc
nop
es
add
stos
jae
in
lods
movsl
mov
outsl
nop
cld
nop
jmp
add
push
stos
inc
adc
inc
adc
nop
es
cmp
adc
add
add
stc
nop
es
jne
add
add
add
stc
nop
es
jne
jns
insl
add
repnz
add
push
add
xchg
and
mov
shr
stc
nop
es
add
aaa
add
add
stc
nop
es
add
out
aam
add
jle
popa
add
mov
xchg
ret
lock
add
lods
push
mov
xchg
ret
jg
add
add
mov
stc
nop
es
add
add
jno
add
pop
add
add
nop
es
add
add
push
mov
xchg
ret
mov
add
add
in
call
nop
cld
nop
jmp
add
and
add
sbb
nop
es
pop
add
pop
or
mov
add
add
nop
es
mov
push
cmc
pushf
mov
push
mov
xchg
ret
add
dec
add
add
stc
nop
es
in
mov
add
xchg
add
push
mov
xchg
ret
add
in
add
repz
xchg
stc
nop
es
add
add
add
stc
nop
es
pop
aad
pop
add
mov
stc
nop
es
jae
jl
push
mov
xchg
ret
add
add
mov
nop
cld
nop
jmp
add
add
mov
stc
nop
es
inc
add
mov
stc
nop
es
add
and
add
jb
stos
pop
stos
jae
insl
lods
jns
push
add
add
add
add
jae
ljmp
pop
pop
nop
cld
nop
jmp
pop
jb
xchg
jns
cmp
adc
pop
push
mov
xchg
ret
add
out
out
push
pop
sbb
nop
jmp
mov
add
jns
add
cmpl
nop
jmp
pop
insb
add
test
stc
nop
es
aaa
add
inc
mov
pop
test
push
mov
xchg
ret
mov
in
add
stc
nop
es
in
add
jb
push
add
cmp
dec
or
mov
xchg
ret
bound
add
inc
xchg
lea
nop
es
adc
add
movsb
add
xor
xchg
or
in
add
stc
nop
es
ljmp
push
mov
xchg
ret
mov
add
add
call
and
add
add
push
push
mov
xchg
ret
add
aad
jne
stc
nop
es
aad
jns
dec
mov
stc
nop
es
loope
cmp
push
mov
fadds
add
push
add
shlb
rorl
xor
nop
cld
nop
jmp
add
add
add
pop
stc
nop
es
stos
add
jns
mov
aaa
add
nop
add
nop
jmp
add
add
add
aam
add
stc
nop
es
aaa
add
add
popa
add
add
add
add
nop
cld
nop
jmp
cmp
daa
add
pop
push
mov
cmp
scas
add
mov
rolb
mov
aas
scas
mov
stc
nop
es
add
add
repz
or
stc
nop
es
jb
add
add
clc
push
push
mov
xchg
ret
push
jns
add
out
ficompl
mov
xchg
ret
daa
mov
add
jl
and
push
mov
xchg
ret
add
jnp
add
add
add
mov
stc
nop
es
add
add
add
insl
movzwl
stc
nop
es
in
jp
add
incb
nop
jmp
aam
das
add
add
add
push
mov
xchg
ret
mov
add
xchg
sti
add
nop
cld
nop
jmp
add
add
jne
stc
nop
es
add
add
add
mov
add
jmp
loope
add
jb
jns
add
stc
nop
es
aam
add
cwtl
add
push
mov
xchg
ret
add
add
add
das
adc
xchg
mov
add
lret
stc
nop
es
jb
aad
add
aaa
rorl
jne
stc
nop
es
inc
add
jl
add
dec
jne
stc
nop
es
add
mov
push
mov
add
jp
or
xor
and
mov
pop
stc
nop
es
add
aaa
das
inc
mov
icebp
adc
inc
cmp
add
clc
ljmp
add
cld
nop
jmp
add
movsb
add
mov
xchg
ret
aam
xor
mov
nop
es
or
push
xor
push
out
mov
stc
nop
es
add
add
add
jbe
stc
nop
es
daa
loope
add
jb
jl
and
xor
loope
push
stc
nop
es
jg
add
insl
lods
push
mov
xchg
ret
add
push
imul
nop
jmp
add
add
add
stc
nop
es
add
repnz
enter
jmp
add
jns
cmp
mov
add
add
push
mov
xchg
ret
out
add
jae
add
aas
jne
stc
nop
es
add
push
push
mov
xchg
ret
insb
add
incl
add
add
stc
nop
es
add
cwtl
imul
in
imul
and
mov
xchg
ret
push
add
add
jp
adc
add
add
daa
ss
mov
stc
nop
es
add
add
cmpl
fwait
adc
add
stc
nop
es
in
add
add
jns
add
add
xor
add
stc
nop
es
add
sub
rclb
adc
cmp
ret
xchg
add
ds
stc
nop
es
add
add
pop
push
push
mov
xchg
ret
jl
inc
mov
rolb
push
stc
nop
es
jb
loope
divl
and
nop
es
ss
inc
insb
insb
pop
rolb
mov
adc
popa
add
nop
es
jns
jae
mov
dec
cmp
nop
es
push
or
sub
nop
es
add
add
add
lea
push
mov
xchg
ret
add
pop
add
push
stc
nop
es
xchg
insb
data16
add
xor
stc
nop
es
add
lahf
sub
or
stc
nop
es
add
pop
add
fwait
push
push
mov
xchg
ret
add
add
mov
add
xchg
mov
add
stc
nop
es
jne
add
pop
add
stc
nop
es
jl
out
add
stc
nop
es
add
add
daa
jg
add
and
push
push
mov
xchg
ret
dec
cmp
test
std
cmpb
nop
cld
nop
jmp
add
add
mov
xchg
ret
add
in
cwtl
test
add
adc
add
add
lock
jne
push
mov
xchg
ret
add
insl
add
pop
ret
nop
cld
nop
jmp
add
insb
xor
sub
push
mov
xchg
ret
xchg
jg
inc
mov
add
stc
nop
es
push
add
add
mov
push
stc
nop
es
add
add
jg
pop
push
stc
nop
es
adc
add
xchg
lock
mov
xchg
ret
mov
dec
jl
jns
add
push
nop
cld
nop
jmp
xor
add
add
stc
nop
es
add
jns
adc
movzwl
stc
nop
es
data16
mov
push
stc
nop
es
add
add
add
stc
nop
es
add
mov
add
add
push
stc
nop
es
add
add
pop
add
stc
nop
es
add
jg
lahf
add
es
dec
add
aam
lahf
add
ret
push
mov
xchg
ret
add
jg
add
fimull
es
add
add
jb
add
nop
cld
nop
jmp
add
xchg
nop
cld
nop
jmp
add
stos
mov
jns
add
cmp
loop
stc
nop
es
cmp
xor
mov
nop
cld
nop
jmp
add
add
mov
nop
es
jns
aaa
jne
add
add
or
cmp
ret
add
push
out
add
stc
nop
es
add
jae
jae
push
mov
pop
add
fadds
test
add
add
sbb
cmp
sldt
add
mov
stc
nop
es
lahf
adc
inc
sbb
nop
es
add
add
pop
scas
mov
stc
nop
es
add
add
aaa
mov
stc
nop
es
mov
aam
add
pop
jmp
stc
nop
es
add
out
stos
pop
push
mov
xchg
ret
add
data16
add
pop
stc
nop
es
add
push
data16
mov
add
mov
stc
nop
es
insb
add
stos
cmp
test
add
stc
nop
es
mov
insb
push
add
dec
add
mov
xchg
ret
jg
jp
lock
stos
add
stc
nop
es
add
add
or
push
pop
add
stc
nop
es
insl
pop
insb
push
nop
cld
nop
jmp
add
jp
add
jns
daa
ret
add
dec
mov
nop
cld
nop
jmp
add
add
jg
add
addb
add
stc
nop
es
insl
lods
adc
cmp
add
add
stc
nop
es
mov
add
adc
nop
es
add
jns
insb
daa
ljmp
cmpb
xor
jp
mov
jmp
add
xchg
add
add
pop
into
mov
push
mov
adc
xor
add
mov
add
mov
add
add
add
mov
es
daa
add
add
add
mov
nop
cld
nop
jmp
push
add
add
aaa
pop
cld
nop
jmp
add
add
push
out
call
stc
nop
es
loope
push
add
xlat
lds
jb
add
mov
jl
add
add
dec
mov
stc
nop
es
add
cwtl
dec
pop
and
nop
cld
nop
jmp
add
add
add
insb
cli
mov
stc
nop
es
add
loope
push
xor
pop
mov
stc
nop
es
add
add
add
add
jno
push
push
mov
xchg
ret
add
add
enter
jb
add
lock
add
adc
jne
stc
nop
es
add
add
mov
stc
nop
es
lods
add
add
push
mov
xchg
ret
add
or
dec
nop
cld
nop
jmp
out
add
add
mov
stc
nop
es
pop
push
out
sar
dec
or
nop
es
cwtl
imul
add
mov
add
nop
es
jnp
ss
lods
xchg
sbb
popa
add
mov
xchg
ret
xchg
mov
nop
es
cmp
in
lock
mov
xchg
ret
jnp
mov
add
stc
nop
es
add
pop
incl
lods
mov
movzwl
stc
nop
es
push
pop
jnp
out
cmp
nop
cld
nop
jmp
add
aaa
jns
jns
add
push
mov
xchg
ret
add
add
add
adc
nop
es
jp
inc
add
decl
add
stc
nop
es
push
jl
pop
add
stc
nop
es
mov
cmp
addb
mov
stc
nop
es
inc
add
pop
mov
stc
nop
es
add
lods
add
jmp
nop
cld
nop
jmp
lods
add
add
add
sub
stc
nop
es
add
adc
push
add
add
out
jl
stos
add
push
mov
xchg
ret
mov
push
fwait
and
nop
cld
nop
jmp
add
jns
add
nop
cld
nop
jmp
add
jl
xchg
add
mov
xchg
ret
add
mov
loope
add
inc
push
mov
xchg
ret
add
mov
push
es
add
jns
insb
add
cmp
stc
nop
es
aad
test
insb
mov
stc
nop
es
add
add
add
jg
pop
nop
cld
nop
jmp
mov
adc
add
incl
arpl
inc
add
add
ljmp
push
mov
xchg
ret
bound
insb
add
lret
out
sbb
sbbb
add
loope
add
lsl
nop
cld
nop
jmp
in
add
mov
nop
jmp
ret
add
add
stc
nop
es
in
add
hlt
ljmp
subb
incl
add
mov
xor
add
nop
cld
nop
jmp
jnp
add
add
stc
nop
es
push
cwtl
add
mov
xor
add
dec
filds
add
mov
sahf
xchg
cli
test
nop
cld
nop
jmp
add
in
jae
nop
add
pop
stc
nop
es
add
imul
lods
mov
push
mov
xchg
ret
mov
add
out
lea
stc
nop
es
aaa
incl
add
add
es
add
add
clc
call
stc
nop
es
loope
add
pop
push
push
mov
xchg
ret
add
add
xchg
aam
add
sub
stc
nop
es
add
mov
fisttpll
mov
adc
nop
es
loope
aad
jb
add
rcll
add
nop
es
stos
push
add
loopne
gs
add
stc
nop
es
cmp
add
loope
adc
or
stc
nop
es
cwtl
push
or
mov
xchg
ret
adc
clc
mov
stc
nop
es
jns
or
mov
xchg
ret
add
ss
cmp
add
nop
es
add
push
out
add
jne
stc
nop
es
lahf
mov
add
push
mov
xchg
ret
insb
and
add
pop
idiv
stc
nop
es
add
add
push
and
mov
add
add
push
mov
xchg
ret
add
add
add
cltd
push
push
mov
xchg
ret
add
add
add
fwait
test
nop
cld
nop
jmp
add
lock
aam
mov
lock
stc
nop
es
add
xor
sti
call
stc
nop
es
jae
add
add
loopne
nop
cld
nop
jmp
jg
add
push
push
mov
xchg
ret
test
xchg
push
add
cmc
inc
add
nop
cld
nop
jmp
das
inc
add
jl
daa
sahf
lea
nop
cld
nop
jmp
add
add
add
stc
nop
es
add
add
ret
stc
nop
es
add
add
aad
pusha
add
add
stos
add
add
nop
cld
nop
jmp
add
add
in
stc
nop
es
add
jl
xor
nop
cld
nop
jmp
insb
add
jne
add
insl
pop
rcl
add
je
xlat
jb
sub
cld
nop
jmp
add
cmp
push
in
add
iret
test
nop
cld
nop
jmp
add
data16
mov
lea
stc
nop
es
jne
push
mov
add
cld
nop
jmp
jns
cwtl
add
ss
push
mov
xchg
ret
add
add
add
add
add
call
ljmp
adc
lcall
nop
es
add
inc
add
mov
stc
nop
es
aam
push
add
lods
push
mov
xchg
ret
add
out
sti
and
nop
cld
nop
jmp
add
loope
add
icebp
jne
add
xor
nop
cld
nop
jmp
xchg
xchg
add
add
add
nop
es
mov
pop
pushl
push
mov
xchg
ret
add
jp
add
cld
nop
jmp
jg
add
ljmp
lahf
add
stc
nop
es
or
add
mov
xchg
ret
add
ss
add
add
nop
es
add
inc
adc
mov
xchg
ret
out
add
mov
add
jmp
nop
cld
nop
jmp
add
add
xor
lret
mov
stc
nop
es
jnp
jns
jns
fcoms
cld
nop
jmp
add
add
add
mov
or
nop
cld
nop
jmp
out
add
mov
add
mov
add
nop
cld
nop
jmp
push
test
add
add
add
push
push
mov
xchg
ret
stos
add
inc
nop
cld
nop
jmp
aad
daa
lahf
add
add
push
mov
xchg
ret
add
jns
add
mov
mov
stc
nop
es
add
pop
into
popa
stc
nop
es
add
add
mov
add
stc
nop
es
imul
data16
dec
stc
nop
es
jb
add
xor
stc
nop
es
add
jne
add
push
stc
nop
es
insb
add
lret
mov
stc
nop
es
in
cwtl
add
aam
call
stc
nop
es
and
daa
inc
fisttpll
mov
add
nop
es
add
xchg
add
es
add
add
add
mov
es
add
inc
add
add
push
mov
xchg
ret
jns
and
lahf
add
nop
es
pop
add
cmp
push
mov
aas
aam
cmp
mov
add
out
pop
dec
push
sti
adc
push
stc
nop
es
and
add
mov
add
add
mov
stc
nop
es
loope
in
add
and
mov
mov
xchg
ret
and
add
sbb
nop
es
add
bound
add
pop
in
add
add
nop
es
insb
jl
add
sbb
sar
nop
es
jns
and
jns
dec
add
push
mov
xchg
ret
out
add
jb
inc
add
xchg
in
call
stc
nop
es
insb
jns
lods
pop
add
nop
cld
nop
jmp
add
add
nop
es
pop
add
add
xor
mov
adc
cld
nop
jmp
push
jne
add
xchg
add
jne
stc
nop
es
jns
push
add
add
inc
stc
nop
es
jns
add
add
cmp
add
rep
nop
cld
nop
jmp
das
add
ljmp
jp
dec
add
ret
add
add
in
pop
sub
mov
xchg
ret
and
mov
xor
add
add
stc
nop
es
insb
inc
add
imul
mov
cld
nop
jmp
pop
push
mov
jae
push
enter
int
inc
add
xchg
bound
inc
jecxz
push
mov
test
add
lcall
add
xchg
std
xor
stc
nop
es
insb
add
add
inc
push
mov
xchg
ret
jg
stos
add
add
pop
stc
nop
es
add
add
adc
add
add
nop
es
insb
jg
add
stc
nop
es
pop
pop
or
in
jae
mov
nop
cld
nop
jmp
mov
add
cwtl
pop
stc
nop
es
add
inc
insb
aad
add
add
xchg
das
add
jae
add
add
loope
pushf
sub
nop
cld
nop
jmp
add
or
ret
cltd
mov
stc
nop
es
jp
add
fldenv
nop
es
add
add
cmp
nop
cld
nop
jmp
jns
inc
add
out
jae
mov
push
mov
xchg
ret
add
out
add
imul
nop
cld
nop
jmp
aaa
xchg
pop
jg
add
aad
mov
push
mov
xchg
ret
adc
add
push
or
es
jne
add
add
jl
push
mov
xchg
ret
jns
mov
add
jns
add
stc
nop
es
add
xchg
add
jb
stos
add
nop
cld
nop
jmp
jns
ss
jb
out
push
nop
cld
nop
jmp
xchg
insb
or
add
les
clc
push
stc
nop
es
jg
ljmp
jecxz
push
stc
nop
es
add
add
insb
jae
inc
add
pop
loop
call
jmp
cmp
add
jne
add
test
stc
nop
es
add
cs
stc
nop
es
mov
add
lahf
cwtl
add
mov
stc
nop
es
data16
jne
lock
nop
es
and
lock
data16
mov
outsl
movsl
add
add
add
add
add
in
adc
lahf
pop
adc
jl
lret
scas
je
push
pop
iret
ficoms
popa
push
ds
push
out
dec
out
pop
pop
sub
jle
daa
testb
fld
imul
add
insb
fdiv
add
loope
add
push
mov
leave
daa
jno
data16
ds
outsl
out
push
add
icebp
imul
add
inc
add
add
add
lea
and
and
test
inc
std
mov
inc
fimuls
jle
jp
add
xchg
jae
add
push
add
add
jnp
add
lret
add
sub
add
jge
or
add
add
pop
rcrl
movb
ljmp
mov
push
add
js
addb
mov
shll
dec
add
mov
add
ja
outsl
sbb
daa
insb
add
addb
add
mov
mov
sub
movsl
je
sbb
add
add
jg
jg
push
lret
add
xchg
add
mov
mov
test
jns
iret
arpl
sub
add
mov
inc
aam
repz
add
xor
dec
xlat
sarl
jno
jae
mov
mov
mov
cmp
testb
das
adc
cwtl
and
add
in
out
nop
add
add
add
inc
add
xchg
xchg
pop
sub
add
xchg
add
out
cltd
push
je
mov
mov
or
and
jg
xor
sub
aam
test
add
lock
jg
cmp
push
push
add
mov
add
mov
pop
xor
pop
andl
mov
and
leave
out
jnp
xor
popf
jmp
call
dec
mov
adc
push
lock
fdivl
or
adc
add
mov
lds
push
add
add
cli
out
dec
jmp
scas
cmp
ret
mov
jmp
push
std
xchg
add
in
xchg
hlt
add
xlat
int3
jecxz
dec
pop
mov
dec
pop
push
jno
xor
ja
fisttps
or
cs
inc
add
arpl
cmpsl
fwait
xchg
add
push
pop
dec
cli
jb
enter
imul
cmpsl
push
fildll
test
test
pusha
add
into
out
add
add
or
jle
dec
push
add
repnz
add
xchg
mov
hlt
add
cmp
add
cld
cmp
jbe
sbb
add
sub
add
mov
xchg
add
add
sbb
xor
pop
scas
repnz
mov
aas
ret
and
mov
push
add
add
mov
add
dec
scas
js
add
lcall
jno
mov
xchg
inc
add
add
push
sbb
add
mov
cmpl
add
jnp
sub
fnstcw
add
insl
aaa
sub
jbe
pop
rolb
pushl
add
repnz
jmp
sbb
add
bound
mov
xchg
add
push
add
mov
sbb
and
add
mov
scas
mov
in
jg
mov
add
mov
rolb
jp
out
xor
arpl
xchg
sarl
add
jno,pn
inc
pop
hlt
add
pop
jns
xor
xchg
xor
add
or
dec
ror
ljmp
daa
hlt
add
mov
test
iret
or
sub
dec
pop
adc
add
add
outsl
dec
and
pop
aas
add
add
jns
mov
add
pop
mov
int3
xchg
add
dec
sbb
mov
in
mov
cltd
testb
in
cmp
and
mov
inc
xchg
leave
cs
adc
insl
push
add
add
sti
flds
add
mov
jae
addb
add
add
lret
in
inc
dec
in
std
movb
adc
cmc
sub
adc
enter
push
sbb
cmp
inc
add
add
xor
add
add
cltd
and
mov
adc
sbb
add
pop
cmp
mov
les
inc
add
jg
add
add
inc
add
adc
stos
in
mov
jno
mov
rolb
xor
cmp
and
add
add
mov
dec
std
imul
push
lret
xchg
add
js
je,pn
leave
sub
mov
add
add
out
mov
inc
add
fdivl
add
mov
lock
mov
jl
push
nop
add
dec
cmp
xor
roll
push
inc
add
jge
add
add
std
gs
cmp
add
les
fnsave
add
add
out
inc
add
add
jno
shll
stos
sbb
mov
adc
mov
sub
add
out
cld
dec
inc
xor
pop
add
push
popa
jne
jecxz
push
add
add
testl
repz
mov
aam
jmp
and
and
add
or
push
push
add
mov
lods
add
mov
mov
add
aaa
insb
std
sub
add
movb
es
jmp
clc
lahf
loop
mov
lock
add
pop
or
sti
add
mov
aaa
movsb
add
add
cld
and
addb
sub
adc
daa
xlat
test
add
add
push
add
sbb
mov
push
jge
add
xor
add
inc
add
mov
int3
daa
and
mov
mov
add
mov
inc
add
aas
popa
mov
mov
xchg
stos
aaa
lcall
sbb
neg
jge
cmp
shrl
leave
cli
arpl
andl
add
push
add
push
jb
lods
in
cwtl
in
rolb
pop
and
mov
in
add
mov
out
xchg
loop
repz
jp
push
fcomps
daa
rolb
jno
add
add
add
jmp
and
and
mov
int3
sbb
jmp
jne
push
add
adc
mov
add
add
sub
mov
add
add
mov
das
pop
add
mov
or
aaa
lret
dec
xchg
inc
add
add
mov
cmp
dec
pop
leave
sahf
mov
lds
mov
cmc
ret
sbb
cltd
divl
inc
cmp
mov
aaa
xor
out
adc
jmp
enter
and
js
ljmp
add
fldlg2
lahf
aad
add
cmp
add
lods
data16
pop
pop
mov
xor
rolb
mov
das
pushf
sbb
xor
add
add
add
je
pop
repz
push
add
mov
jo
adc
add
add
mov
add
mov
mov
das
inc
mov
adc
add
add
pop
mov
push
add
insl
xor
mov
push
fldl
mov
loop
jno
add
jo
adc
mov
add
add
ret
sub
mov
add
add
test
pop
xchg
adc
cmp
stos
adc
cwtl
sub
add
add
je
icebp
jae
add
or
add
add
add
ret
add
mov
add
and
mov
add
add
mov
push
add
mov
addr16
add
add
add
fnstsw
pop
mov
sub
add
push
add
loop
cmpsb
add
add
ret
xor
adc
inc
incl
add
push
in
pop
std
sbb
sarl
add
add
pusha
add
add
add
add
mov
add
inc
add
test
push
add
test
jmp
testb
lret
frstor
repnz
add
cmp
mov
sub
sub
jnp
add
xchg
cli
repz
and
mov
pop
mov
daa
dec
sub
jg
jle
insl
gs
daa
shrl
out
lods
mov
add
add
push
add
pushl
fadds
and
lahf
or
loope
and
test
sahf
fsubrl
cmp
add
aaa
pop
arpl
xchg
add
in
push
gs
add
mov
inc
loop
sbbl
in
xchg
lret
pmulhuw
adc
add
mov
jno
mov
pop
xchg
cs
add
xchg
push
add
inc
add
test
adc
add
outsl
jp
mov
test
push
add
jb
mov
and
add
jnp
lcall
cmp
xchg
push
rolb
xor
popa
dec
fistpl
xor
sub
add
mov
scas
inc
cmp
xor
imul
add
arpl
mov
ror
test
les
pop
lods
inc
adc
add
dec
test
aaa
ret
adc
push
roll
mov
mov
add
add
add
xchg
pop
imul
stos
push
or
fnstsw
enter
int3
out
and
mov
cltd
fidivl
insb
sub
rolb
movsb
add
add
xchg
add
add
dec
mov
sub
adc
int
sti
push
dec
stc
loope
cmp
mov
rorl
add
add
add
mov
sub
add
add
aaa
arpl
pop
test
aam
sub
inc
stos
ds
pop
jp
or
inc
add
sti
pop
popf
or
add
lret
lods
popf
iret
insl
movsb
add
xchg
add
add
leave
insb
popa
or
add
sub
add
add
mov
repnz
out
mov
add
inc
add
mov
and
pop
aaa
iret
cmpsb
add
pop
addr16
mov
cmpsb
add
add
stc
jge
xlat
shll
add
add
add
test
mov
testb
push
add
testb
add
jnp
cli
aam
pop
fchs
add
mov
add
jecxz
add
out
sbb
add
inc
add
add
jl
add
add
or
and
inc
stc
popa
data16
xchg
add
rol
pop
xorl
pop
xor
je
jle
fs
add
lods
mov
mov
es
add
dec
mull
add
add
mov
adc
jnp
inc
sti
mov
and
pop
jl
ret
imul
mov
add
push
add
add
enter
add
add
lret
ficomps
inc
add
add
mov
mov
dec
dec
shl
cmc
mov
add
add
add
add
dec
mov
dec
xchg
add
scas
outsl
lock
movsb
add
jo
aaa
imul
add
adc
pop
jb
xor
hlt
add
add
add
mov
adc
inc
xor
or
add
add
out
mov
pop
push
sub
shrl
rolb
lahf
mov
outsl
int3
mov
sub
add
add
add
dec
ja,pn
divl
mov
sarl
mov
fcmovbe
jl
add
out
mov
add
mov
jmp
add
std
xor
hlt
add
mov
int3
inc
push
sub
pushf
and
xchg
add
mov
add
pop
sub
jae
out
jo
aas
inc
adcl
push
add
ret
sbb
or
je
pop
add
mov
sbb
pop
dec
mov
pop
mov
lock
mov
add
pushf
adc
sub
cmpsl
cld
xlat
int3
ret
aad
sti
mov
push
dec
mov
movsl
pusha
add
pop
push
add
adc
add
and
mov
sbb
mov
push
sbb
push
mov
add
loopne
call
inc
add
dec
leave
movsl
and
mov
shll
push
add
jae
sti
cmpsl
cmp
bound
mov
push
sbb
sbb
add
add
cmp
and
xor
sbb
pop
mov
mov
add
pop
add
loop
pop
cmp
cwtl
push
add
std
push
int3
mov
int3
jmp
add
add
add
mov
add
add
mov
fdivl
out
int
xchg
sbb
loop
imul
push
jle
sub
add
ljmp
scas
sub
sti
fimull
add
dec
jne
add
popa
rolb
inc
clc
dec
push
add
mov
cmp
add
cli
jns
push
scas
dec
dec
je
test
jl
mov
mov
add
add
addb
into
jne
movsb
add
xchg
xchg
add
add
mov
div
lock
lods
jge
dec
pop
icebp
push
add
sti
cmp
repnz
cmp
addl
xchg
lahf
aaa
adc
out
pusha
add
std
cld
fistps
add
xor
push
sbb
jge
add
add
cmpsl
xlat
xor
add
push
testb
jmp
testb
fcomip
add
lret
jno
mov
addb
pushf
call
sti
add
mov
add
mov
pop
cli
add
mov
add
xchg
data16
mov
add
add
xchg
jne
nop
add
xchg
add
mov
add
sahf
lahf
cwtl
rolb
dec
sub
add
add
add
xor
adcl
movsl
hlt
add
add
xor
add
or
testb
gs
scas
mov
mov
int3
add
and
rolb
iret
mov
or
adc
pop
icebp
popf
iret
push
adc
add
addb
add
mov
fwait
adc
add
pop
add
xchg
add
add
sbb
lret
jl
mov
dec
stc
cmc
dec
push
shll
pushf
mov
xchg
cltd
sub
xlat
mov
or
add
enter
add
mov
clc
ffreep
add
add
add
lods
inc
or
push
add
mov
shll
sub
cmp
popf
pop
jmp
or
loopne
clc
sub
pusha
add
add
add
xor
pop
jmp
inc
add
push
movb
scas
loop
jne
js
add
addb
add
cmpsb
add
add
insl
jnp
dec
add
add
mov
call
inc
int
outsl
add
dec
addb
add
dec
mov
nop
dec
push
add
nop
add
cmp
cmp
xor
and
mov
add
dec
sti
sbb
xor
add
shll
add
addb
jmp
jb
enter
or
xchg
ficomps
mov
add
mov
xchg
xor
cmp
mov
mov
add
add
aaa
fsubrs
sub
add
aas
cltd
add
sub
add
sbb
add
add
fmuls
inc
or
adc
dec
xchg
add
in
add
add
mov
lods
mov
cmp
add
gs
scas
xchg
cwtl
sub
mov
jb
push
add
add
enter
cs
dec
mov
mov
jg
add
arpl
nop
add
enter
add
add
jmp
add
addb
add
repz
mov
push
add
xor
dec
sbb
imul
and
mov
add
add
rolb
mul
ja
sub
adc
in
lcall
cmpl
lret
mov
mov
into
cmp
insb
fiaddl
sbb
ljmp
add
add
fs
and
lahf
add
inc
add
xchg
ret
add
cmp
movsb
add
add
add
js
cmp
mov
mov
add
xchg
xorl
sbb
add
mov
test
xchg
add
add
stos
lcall
mov
mov
ja
test
dec
pop
push
aad
or
add
add
pop
rcrl
std
popa
cmp
fdivrs
add
push
add
add
add
test
add
jl
sbb
add
ficomps
add
pushf
stos
movb
fbstp
add
outsb
add
mov
rolb
mov
add
sbb
scas
xchg
jp
into
sbb
loope
mov
push
add
push
push
add
add
sbb
outsb
xchg
or
js
pop
jg
dec
jl
dec
jns
add
rolb
xor
or
cmp
and
mov
add
add
rolb
addr16
out
call
add
dec
xor
les
inc
addr16
add
mov
add
aam
lret
xor
adc
add
dec
and
mov
add
add
mov
dec
cmp
mov
add
scas
popa
mov
popf
aas
push
icebp
addb
xor
iret
add
add
add
add
add
mov
hlt
add
into
out
in
or
js
pop
cmp
out
xchg
movsb
add
ljmp
cmp
pop
add
adc
push
push
add
add
adc
lods
cmpsb
add
add
daa
jecxz
add
fmuls
mov
movsb
add
add
addb
add
adc
aaa
dec
and
js
mov
push
dec
sti
xor
add
pop
fcoml
add
add
add
add
add
add
push
repnz
ret
lods
test
out
pop
cmp
or
out
pop
jmp
push
mov
add
xor
scas
pop
shrl
test
push
add
jle
add
testb
and
add
inc
add
xlat
mov
push
jbe
bound
mov
inc
and
add
push
loop
sub
and
adc
sbb
add
xor
jo
cmp
rolb
add
rolb
mov
mov
jns
add
out
enter
add
add
xchg
xchg
add
inc
add
sti
dec
adc
out
lret
add
and
jle
add
sti
push
imul
lock
dec
push
fmuls
add
insl
mov
mov
pop
push
xlat
mov
add
add
and
jbe
sub
lods
dec
out
icebp
inc
add
jno
add
add
outsb
aad
out
push
add
ljmp
loop
adc
sbb
pushf
in
mov
inc
sub
mov
das
or
sbb
cltd
add
add
rorl
idivl
pop
out
mov
popa
rolb
sbb
add
add
cmp
fisttpl
sbb
xlat
in
inc
mov
ror
popf
pushf
push
rolb
ja
cld
lock
stos
bound
mov
add
add
add
pushf
push
cltd
arpl
enter
inc
mov
repnz
or
push
popa
dec
jno
fstpl
fistpl
daa
mov
add
insb
mov
lret
fwait
adc
inc
add
lods
pushf
outsl
in
and
mov
rorl
insb
jno
add
loop
test
or
or
aad
add
jl
add
pop
test
add
popf
adc
add
data16
add
jl
pop
loope
mov
lock
xlat
mov
push
or
add
out
or
pop
xchg
add
nop
add
add
xor
add
xchg
cltd
xlat
loopne
pop
mov
popf
xchg
add
push
add
scas
jbe
jae
mov
jb
fnstcw
xchg
add
xor
dec
subl
ss
push
addb
push
sub
rolb
int
add
add
movsl
out
add
xchg
les
movb
add
jecxz
add
rcrl
add
add
mov
add
add
add
inc
mov
mov
dec
call
out
add
add
add
add
adc
sub
add
add
add
enter
sub
or
fnstsw
jnp
xor
loopne
enter
adc
mov
add
add
movsl
fstpt
mov
inc
add
add
add
fdivrl
stc
mov
mov
addb
pop
les
pushf
testb
push
add
or
inc
add
push
xchg
and
mov
add
mov
mov
add
sub
adc
test
in
add
lret
sbb
add
scas
jp
xchg
add
add
sbb
and
mov
std
sub
add
fistpll
or
fnstcw
bndldx
subl
cmp
add
sahf
cmova
mov
into
mov
add
pop
in
sbb
test
dec
je
lods
iret
jecxz
push
xlat
in
xchg
int3
cwtl
outsl
jo
lret
push
movsl
cld
xlat
mov
or
lcall
aam
pushf
and
imul
add
loopne
push
add
mov
in
or
add
out
inc
add
cld
sar
push
add
add
mov
jno
add
cld
movb
punpckhwd
add
add
pop
rolb
jae
add
add
test
add
add
sub
xchg
jmp
lahf
sub
mov
mov
mov
test
insl
test
add
add
pushf
cs
inc
add
jmp
sub
mov
add
add
add
sub
sub
in
lea
push
xchg
out
out
xchg
add
or
loop
into
insb
ret
nop
add
add
inc
jb
aas
inc
mov
add
cs
cs
add
mov
stos
mov
push
add
lock
andl
xchg
dec
or
add
fsubl
inc
adc
aad
hlt
add
mov
add
add
cmp
into
daa
in
test
cmp
push
adc
lret
cmp
add
das
dec
add
mov
bound
mov
add
scas
inc
add
dec
or
dec
popf
mov
mov
cwtl
dec
push
inc
add
add
add
add
mov
dec
pusha
add
mov
jp
add
adc
xor
scas
in
sbb
add
xchg
inc
add
add
mov
pop
out
je
push
loopne
pop
cld
add
mov
lds
mov
stc
sbb
add
jl
push
jnp
inc
add
add
loope
add
push
add
add
mov
sbb
sbb
push
inc
add
add
andl
add
add
xlat
pcmpeqb
movb
mov
pop
push
push
jl
add
push
jge
push
add
mov
int
cmc
adc
seta
add
and
add
mov
sub
add
mov
adc
push
add
add
testb
insl
and
mov
cli
test
stos
add
add
lret
sbb
push
add
add
sbb
xchg
add
add
fcomps
scas
xor
movb
add
mov
mov
scas
pop
test
jae
arpl
push
add
ret
jecxz
or
movsb
add
lcall
loope
mov
js
add
push
pop
popa
rcrl
mov
add
ret
add
jb
dec
aaa
fildll
add
out
hlt
add
adc
mov
std
xchg
loope
repz
add
mov
data16
out
aad
mov
pop
jne
sbb
add
scas
js
or
sub
stos
inc
add
in
aad
sub
add
push
mov
test
xchg
add
cmp
in
test
idiv
push
add
stos
pushf
testl
scas
rolb
out
enter
mov
sub
decb
movsl
inc
lahf
adc
push
add
add
inc
cld
data16
jecxz
movsb
add
pusha
add
mov
repz
fcmovbe
add
sbb
fistpll
jl
add
lea
mov
mov
add
or
daa
mov
inc
data16
add
lea
ljmp
fidivrl
repnz
add
add
lret
imul
push
add
add
lods
bound
mov
jns
pop
mov
dec
adc
ds
adc
test
mov
mov
mov
sbb
call
fisubs
xchg
add
push
add
add
add
in
add
mov
insl
outsl
pop
jb
fwait
xchg
frstor
lret
lret
and
mov
add
mov
adc
add
cmc
mov
pop
lds
push
add
add
add
aaa
xchg
pusha
add
out
add
adc
add
loopne
data16
or
add
add
add
pop
or
out
xor
aas
aaa
jmp
add
mov
dec
mov
add
mov
xchg
add
sbb
sub
and
add
dec
inc
mov
mov
add
je
jecxz
dec
jecxz
gs
sub
or
mov
add
mov
sbb
inc
add
fwait
addb
sub
aas
push
add
add
jno
add
add
cmpsl
das
arpl
add
mov
push
add
in
sti
rolb
xor
lcall
and
add
mov
adc
or
pop
jmp
jecxz
loop
cld
cwtl
xchg
mov
jmp
xor
cmc
jnp
add
or
nop
add
jp
and
mov
pop
les
rolb
add
add
add
rolb
inc
add
add
sub
mov
scas
lods
push
add
sub
out
jne
fdivrs
xchg
add
adc
add
add
jge
add
das
dec
insl
add
mov
add
insb
push
add
sbb
add
insb
and
xlat
xchg
add
inc
add
pop
lret
addb
xlat
out
jnp
jp
and
mov
add
mov
jno
ds
enter
add
add
outsb
addr16
movsb
add
add
adc
add
in
pop
or
mov
add
rcl
test
sub
ljmp
mov
cwtl
test
pcmpeqb
cld
lods
pop
inc
ret
popa
jo
jbe
xor
adc
add
mov
in
xor
das
pusha
add
sub
jns
adc
xor
sbb
mov
ljmp
montmul
cmpsb
add
mov
rolb
in
mov
clc
pop
sub
push
add
adc
out
mov
shrl
add
mov
add
cld
andl
add
add
sbb
sub
cs
into
mov
add
add
xchg
sub
jmp
add
mov
inc
add
rolb
scas
lret
int3
mov
mov
aaa
gs
inc
xor
sub
test
jp
js
add
add
add
mov
js
or
push
out
xor
pop
in
or
jg
stc
inc
add
add
add
decb
mov
fldz
loope
add
add
dec
xorl
inc
add
fldenv
mov
push
xor
ja
adcl
sbb
nop
add
add
inc
xchg
add
gs
aaa
sbb
fimuls
mov
fisttps
jo
les
adc
scas
sti
mov
inc
add
push
add
or
call
jb
or
adc
add
add
cmp
xlat
xor
jae
lock
cli
jp
sub
ret
rolb
jno
add
les
inc
ja
je
xchg
scas
push
push
xlat
jae
add
mov
popa
js
add
add
jmp
js
xchg
add
jmp
add
mov
xor
movsb
add
pusha
add
xlat
inc
mov
cld
xchg
xchg
add
leave
add
rolb
sahf
add
add
add
xchg
scas
and
mov
cwtl
cmpsl
mov
add
in
je,pt
inc
add
shll
pop
dec
mov
or
stos
dec
add
cmp
add
mov
scas
pop
cld
js
rolb
xor
test
ret
sbb
lds
inc
cmp
clc
addb
sbb
add
scas
frstor
mov
add
lea
xor
int3
inc
add
inc
add
add
push
add
add
xlat
xor
push
add
add
add
cmp
sub
or
add
add
sbbl
xor
stc
jns
jmp
add
add
addb
xor
lea
addb
mov
ljmp
add
pop
and
mov
inc
add
sbb
and
push
sbb
fidivs
fcompl
add
add
push
add
mov
pop
cmpsb
add
ds
adc
sub
add
add
add
fildl
add
iret
sbb
sub
add
lock
pop
sbb
adc
sbb
adc
xor
add
mov
movsl
popf
jge
add
movsb
add
add
movb
shrl
mov
sub
lcall
addl
push
mov
mov
adc
inc
mov
adc
sub
std
adc
mov
add
clc
xor
iret
ficoms
jge
inc
add
inc
add
add
add
andl
mov
int3
and
mov
add
inc
add
rcrl
shrl
sbb
mov
push
add
jg
or
add
add
pop
insb
mov
mov
jno
add
call
push
push
ss
add
sbb
sub
mov
add
mov
add
xchg
pop
adc
adc
adc
adc
in
and
xchg
sub
scas
jle
test
add
mov
sub
sbb
iret
cmp
mov
add
mov
mov
aad
add
add
add
push
cmp
shll
add
push
add
and
jle
adc
lret
mov
lock
pop
xchg
mov
ret
inc
pop
mov
testb
push
add
and
mov
add
add
xor
add
add
in
test
xorl
cmp
jne
lahf
sbb
fiadds
add
arpl
gs
add
add
fdivs
add
mov
cmp
addb
jbe
lods
decb
icebp
mov
push
sub
add
pop
les
cmp
pop
dec
jecxz
mov
jns
dec
mov
ror
inc
add
sbb
jl
add
add
add
scas
shrl
add
xor
stc
daa
movb
insb
lcall
sbb
test
jge
xor
add
xchg
inc
dec
push
add
mov
add
xor
lcall
gs
std
inc
fdivs
faddl
add
push
std
in
dec
add
mov
add
inc
mov
lahf
or
cmpsb
add
or
add
add
lock
cmp
dec
mov
jp
mov
jl
mov
add
xor
add
in
dec
nop
add
inc
add
pop
or
pop
loope
add
or
push
add
out
imul
xor
pushf
out
add
and
dec
mov
cmp
insb
push
add
mov
mov
loope
add
lret
cmc
jmp
std
jo
mov
add
pop
inc
pop
sub
stos
inc
mov
and
mov
lret
push
add
dec
outsl
stc
scas
mov
add
cmpsl
out
mov
add
xor
in
out
clc
jae
add
push
lahf
or
ljmp
add
jno
rcll
andl
sub
pop
cmp
stos
cmpsb
add
xor
sahf
and
add
pushf
popf
sub
ror
mov
jb
fcmovnu
push
icebp
push
cli
aas
test
and
cwtl
push
mov
out
fsubs
add
add
mov
mov
add
add
and
sub
mov
and
int3
inc
add
xchg
add
pop
push
bound
mov
or
adc
scas
jmp
add
dec
imul
jb
lret
sub
rolb
xchg
jae
sbb
add
mov
imul
add
loope
dec
jns
add
fisubrl
outsb
sbb
add
enter
ljmp
xchg
add
rolb
or
and
xor
aam
or
repnz
add
add
addb
add
add
and
mov
sarl
mov
movsb
add
cmpsb
add
lods
add
mov
jge
xor
bound
mov
add
mov
add
fwait
sub
push
add
pop
je
in
inc
add
sbb
adc
mov
or
daa
pop
in
adc
mov
inc
push
mov
add
add
into
testb
ljmp
xchg
add
mov
xchg
push
add
xchg
add
scas
nop
add
add
daa
mov
inc
add
and
mov
test
in
adc
add
pop
inc
popf
in
push
mov
add
test
mov
test
addr16
lock
sbb
xchg
push
add
rolb
repnz
add
mov
loope
add
ret
dec
mov
stc
cmp
add
add
dec
lods
jmp
lret
or
addb
add
fisttps
mov
pop
das
xor
sub
ror
jne
lea
add
dec
push
add
xor
xchg
add
add
mov
add
add
scas
push
test
mov
test
gs
mov
push
cli
xor
push
add
imul
add
pop
sbb
inc
add
add
into
pop
xor
pusha
add
add
dec
pop
fstcw
lret
cmp
add
add
stc
sbb
or
xlat
pop
xchg
ret
mov
mov
add
mov
or
mov
jle
add
mov
mov
gs
leave
pop
jmp
aaa
and
mov
sub
add
add
sub
push
repz
push
add
add
into
pop
adc
ljmp
jmp
cmp
cwtl
stos
aad
or
jg
movb
add
insb
fcompl
or
repnz
cmp
add
add
sbb
mov
add
inc
and
pop
scas
pop
outsl
xchg
stos
jg
add
sub
test
addb
dec
popf
and
adc
or
fiaddl
dec
xchg
push
push
add
add
mov
add
in
add
inc
add
add
pushf
xchg
jecxz
addb
stos
out
or
rolb
push
add
in
sti
nop
add
gs
movb
cmp
mov
fnstenv
dec
push
add
mov
add
mov
inc
daa
mov
add
jp
lret
sarl
sub
add
xor
js
pop
xchg
pop
enter
push
add
stos
imul
mov
push
enter
or
xchg
or
add
fists
fisubl
add
outsl
pusha
add
add
adc
les
dec
in
in
add
rolb
jmp
imul
add
ret
icebp
dec
addr16
in
add
fstpt
add
iret
insl
or
add
das
push
repz
loope
add
add
mov
add
add
add
aad
rolb
loope
add
or
add
add
inc
add
add
outsb
adc
mov
mov
add
icebp
mov
mov
and
jb
sub
add
add
jns
add
xor
stos
push
push
add
pop
sbb
cmpsb
add
mov
sub
std
mov
add
imul
pop
cmp
test
arpl
add
jne
add
push
jne
addb
lock
add
add
add
mov
add
jp
add
cwtl
rolb
stc
lods
das
cwtl
pushf
int
add
sub
and
add
inc
fst
das
data16
lcall
add
xchg
add
inc
add
or
pop
jge
movb
out
imul
lods
inc
int
or
test
dec
jle
add
cli
jge
pop
int
mov
add
mov
add
push
add
mov
jne
outsl
cmpsl
mov
rolb
aad
add
pop
or
test
jp
scas
leave
adc
xchg
add
sbb
add
add
xchg
dec
addb
add
xor
push
testb
mov
mov
add
add
adc
xor
pop
mov
push
add
sahf
xor
lds
rolb
in
pop
fwait
cmp
add
clc
cli
rolb
loopne
aaa
push
inc
add
add
gs
pop
sub
cmpsl
mov
add
add
xchg
or
mov
sub
ljmp
testb
inc
add
stos
jmp
add
dec
pop
add
dec
pop
repz
push
add
mov
nop
add
gs
arpl
pop
jecxz
loop
cmp
add
mov
add
inc
add
sub
or
testb
xchg
add
inc
and
mov
add
or
sbb
xchg
add
mov
bound
mov
xor
sbb
repnz
add
xchg
add
add
ret
sub
add
add
add
mov
addl
and
and
add
adc
mov
inc
add
mov
in
lea
add
xchg
add
iret
ja
aad
add
mov
jno
lea
mov
inc
add
add
mov
pop
sbb
add
inc
pop
add
and
mov
and
mov
inc
cli
sub
mov
loopne
push
repz
add
je
push
add
jae
int
pop
imul
cwtl
push
add
mov
add
call
loope
jg
add
xchg
jl
inc
pop
mov
add
add
fnsave
dec
aam
mov
sbb
mov
add
lods
sbb
sahf
jp
add
adc
xor
pop
addb
clc
ret
imul
sbb
cmpsb
add
mov
fisubl
mov
mov
fstpl
inc
add
mov
mov
xor
add
and
mov
push
add
in
add
scas
scas
push
add
xchg
mov
xchg
push
xor
mov
lret
sahf
fdivrl
add
sahf
mov
outsb
jecxz
data16
scas
xchg
add
add
add
mov
fcoms
imul
movb
jae
add
add
add
testb
adc
cmp
sahf
hlt
add
repnz
add
sti
pop
xlat
dec
insl
stc
out
mov
pushf
push
add
add
adc
mov
fimull
dec
jp
enter
pop
lret
xor
inc
add
cmp
dec
addb
addr16
aam
insl
mov
inc
add
out
jno
rolb
cmp
mov
add
enter
add
ja
add
add
rolb
lcall
add
add
pusha
add
jo
testb
add
adc
inc
add
cs
and
repz
ret
add
add
aas
dec
dec
jb
movb
test
out
cmc
pop
add
sahf
mov
and
out
mov
add
push
movb
xor
pop
roll
add
in
ror
lcall
xor
dec
push
push
push
and
mov
pusha
add
xor
xchg
pop
push
add
add
out
jp
and
sbb
add
push
jmp
jge
dec
aad
mov
les
outsl
ljmp
decb
rolb
insl
pop
push
add
add
sub
mov
jp
sahf
xor
mov
js
cli
sub
inc
add
add
insl
and
mov
inc
fisubrl
add
add
syscall
or
jge
add
clc
dec
jle
cs
gs
sub
add
movsb
add
adc
cs
push
add
and
inc
cmp
and
xchg
add
js
mov
cmc
mov
sub
inc
adc
movb
in
int3
or
icebp
add
adc
in
outsb
sub
jbe
sbb
add
out
dec
test
ja
add
lahf
sbb
or
add
movsl
pop
xor
add
add
add
rolb
hlt
add
nop
add
mov
add
add
fisubs
mov
lea
fldl
mov
out
mov
cmp
add
sbb
add
add
pushf
outsb
mov
dec
sbb
mov
add
in
in
inc
gs
in
aad
jne
add
add
imul
inc
sti
and
hlt
add
sti
xchg
add
fcmovne
orl
add
mov
add
and
inc
add
js
add
add
sbb
in
dec
add
cmp
push
scas
mov
add
fwait
pop
pop
dec
xor
into
push
add
add
scas
stc
cwtl
sub
add
je
inc
add
dec
lods
imul
adc
dec
pop
push
cmp
sbb
clc
mov
xor
adc
pcmpeqd
dec
pop
dec
andl
mov
add
mov
ja
leave
fwait
xor
or
add
add
add
xchg
add
xchg
pop
adc
xchg
add
push
add
xchg
rolb
dec
xchg
mov
mov
ret
outsl
add
add
cwtl
inc
cmp
cmp
aad
push
pop
daa
aas
popa
xchg
lock
scas
and
mov
in
dec
jg
out
xor
add
pop
inc
adc
aas
pop
stc
push
xor
inc
add
add
add
jae
cmp
xchg
add
add
add
jecxz
add
repz
cmp
into
ja
jg
gs
test
jno
dec
mov
push
add
mov
add
add
add
push
imul
ljmp
pop
jnp
bound
mov
call
fisubrl
adc
or
sahf
popa
add
mov
add
repnz
mov
add
push
pop
cltd
dec
push
add
mov
add
add
add
daa
pop
into
test
roll
nop
add
and
mov
rolb
pop
mov
add
dec
mov
mov
insb
xor
shr
inc
add
cmp
add
cmc
call
sbb
add
xchg
add
xor
add
add
dec
add
pop
adc
mov
addr16
add
mov
xor
outsl
or
jo
add
mov
faddp
add
pop
push
xchg
push
add
sbb
sbb
dec
mov
add
add
dec
fldl
or
push
add
dec
xor
scas
out
hlt
add
les
push
and
add
add
jecxz
mov
test
add
add
mov
inc
add
repz
add
add
adc
rcll
insb
pop
addb
add
scas
add
mov
movsb
add
sbb
or
ret
hlt
add
push
cmp
movsb
add
add
cwtl
cmc
inc
add
dec
out
xchg
add
xchg
sub
add
add
cmp
mov
jb
sub
add
je
jno
mov
add
ds
fwait
imul
dec
loop
repz
mov
mov
add
add
jle
dec
fidivs
popa
int3
dec
mov
bound
mov
add
mov
pusha
add
outsb
xor
addb
push
add
sub
sbb
fwait
scas
jb
loop
mov
add
lock
mov
scas
add
add
incl
orl
add
testb
aaa
push
xor
add
add
icebp
filds
add
add
add
xor
arpl
pop
push
add
add
pop
add
add
and
mov
cmp
add
add
xchg
jns
and
das
aas
aas
mov
jl
push
mov
ret
add
and
mov
add
mov
add
test
imul
add
add
push
add
testb
adc
popa
iret
jnp
push
rolb
clc
sbb
bound
mov
shll
add
mov
add
out
sub
add
push
add
add
iret
sti
das
mov
adc
push
mov
sbb
sti
sub
imul
in
pop
inc
add
cwtl
push
mov
jnp
add
jle
inc
pop
addb
mov
mov
xchg
xchg
pop
and
mov
add
mov
add
jle
add
xor
cmp
std
inc
rolb
push
add
jns
add
aad
movsl
inc
add
ljmp
add
testb
add
pop
or
pop
lret
add
mov
pushf
fstps
sub
add
mov
cli
cmp
add
mov
stos
sti
fiaddl
mov
jae
add
add
test
xor
mov
daa
cmp
push
add
add
mov
sub
int3
outsb
add
mov
xor
sbb
dec
pop
daa
add
mov
je
hlt
add
outsl
data16
addb
xchg
sub
add
jl
adc
aam
stos
sub
icebp
ja
icebp
test
or
dec
xlat
jmp
pushf
inc
out
and
mov
add
sub
add
push
push
xor
xchg
add
mov
pop
jno
test
add
jbe
test
out
jg
add
add
add
stos
inc
add
shld
movsb
add
aad
jae
add
stc
mov
imul
xor
cld
pop
push
add
xor
mov
add
mov
sbb
btc
add
push
jne
xor
arpl
cmp
mov
add
push
add
mov
pop
sub
loop
xor
push
add
sbb
test
add
push
jmp
add
scas
cmp
cltd
hlt
add
add
add
fistps
hlt
add
lods
xchg
add
mov
add
add
cwtl
clc
pusha
add
mov
pusha
add
add
mov
mov
mov
add
add
xor
filds
mov
xor
dec
sbb
add
add
mov
add
cmp
loopne
ja
add
imul
or
sahf
fistps
movsb
add
mov
add
lahf
movsl
sub
add
add
popa
or
mov
iret
inc
repz
mov
jmp
add
repz
loopne
jle
jnp
add
xor
add
add
add
cmpsl
ja
popf
cmp
lods
sbb
add
add
inc
add
add
mov
pop
adc
pop
mov
add
xor
pop
mov
add
jbe
mov
insb
push
add
adc
sarl
jmp
pop
test
aas
out
bound
mov
add
lahf
sub
jbe
lods
mov
or
bound
mov
add
add
mov
pop
xchg
xor
push
adc
das
xor
dec
sub
dec
inc
add
pop
ljmp
mov
cmp
mov
add
add
call
add
pop
addb
int3
push
and
mov
push
jbe
mov
add
and
insb
xor
add
cmp
ret
and
mov
mov
lret
inc
push
add
insb
out
xor
pop
inc
add
add
jmp
sbb
sbb
xchg
shll
add
lret
add
add
aad
add
mov
rcrl
sbb
add
in
jl
jl
gs
aas
cs
push
pushf
sub
fdiv
ja
mov
mov
push
add
add
add
push
jne
nop
add
jns
add
add
pop
jmp
sub
add
dec
sub
push
add
std
inc
add
data16
mov
push
sub
aas
pop
jmp
addr16
add
cmpl
dec
cmp
add
add
add
insb
lret
addb
add
cmpsl
dec
test
add
or
push
rcrl
aaa
mov
jge
add
out
jb
movsl
adc
movsb
add
mov
mov
fisubrs
cmp
das
enter
add
dec
mov
mov
xchg
inc
push
add
add
add
add
add
push
mov
add
ret
roll
leave
or
dec
and
jnp
das
pop
xchg
add
xor
xchg
add
add
flds
mov
add
sbb
sub
mov
test
rolb
jne
add
pop
insb
fildll
loop
jle
add
adc
jne
add
jns
push
add
add
add
mov
add
add
sti
inc
add
jl
push
add
rolb
testb
jns
popa
cmpsb
add
add
fistps
lahf
sarl
movsb
add
jl
push
add
rolb
mov
loopne
dec
mull
add
mov
mov
repz
add
push
add
xchg
or
data16
add
das
les
jne
sub
add
sti
jbe
and
fwait
mov
add
in
jnp
sahf
in
rolb
dec
pusha
add
inc
add
js
add
xor
movb
add
inc
inc
add
mov
lcall
add
cmc
lods
fnstenv
mov
lret
pusha
add
add
add
rolb
mov
xchg
xchg
add
aam
cwtl
pop
testl
mov
inc
jnp
push
jg
mov
add
add
xchg
mov
mov
adc
pushf
push
add
add
add
push
jbe
or
add
insl
lods
jo
nop
add
mov
pop
sbb
mov
add
popa
je
repnz
rolb
xchg
sbb
daa
or
loopne
and
mov
add
add
jb
popa
fnsave
call
mov
and
outsb
imul
mov
push
add
add
add
add
repz
shll
push
add
jg
lahf
dec
ficompl
add
cmc
sti
addr16
add
push
add
jo
lock
lods
sbb
add
mov
jl
lds
into
je
and
adc
js
hlt
add
add
lcall
shr
sub
fsubs
and
jb
divl
add
dec
mov
mov
cltd
cmc
mov
jo
aad
add
xchg
add
lods
test
and
mov
add
push
jns
push
or
mov
add
mov
and
mov
xchg
or
add
cmp
mov
add
mov
cld
dec
imul
mov
add
push
mov
dec
xchg
add
add
or
xlat
adc
xor
std
cmp
dec
mov
sbb
sahf
stos
jecxz
cltd
sbb
or
add
pop
push
add
ret
fsubrl
and
mov
add
hlt
add
rcrl
push
jmp
aam
add
mov
add
ss
add
add
or
outsb
aad
add
add
add
ja
popf
inc
add
pusha
add
mov
mov
add
dec
nop
add
jle
lcall
add
add
cmpsb
add
add
fldenv
mov
pop
pop
in
push
add
mov
add
mov
jmp
mov
movsb
add
xchg
aam
mov
fdivl
lahf
ja
cltd
sub
addb
das
std
jo
pop
fsubrl
add
add
loop
mov
jge
add
mov
xor
testb
adc
jl
add
repnz
add
add
pop
jno
and
inc
add
mov
pop
test
pop
lret
dec
add
std
push
add
add
mov
push
add
inc
add
pop
pop
rolb
mov
test
xor
nop
add
orl
fs
add
sti
jecxz
test
add
insb
aas
xor
popa
add
add
jnp
xchg
add
add
push
inc
outsl
pop
xchg
add
xchg
popf
mov
xchg
add
out
jnp
cltd
popf
out
xchg
jecxz
fimull
jg
popl
add
mov
add
ja
int
add
repz
testl
clc
sbb
nop
add
add
jp
add
mov
and
mov
pop
xchg
or
aam
test
and
imul
cmp
push
add
pop
xchg
add
add
cmc
popf
mov
lret
add
add
xor
adc
sti
cwtl
popa
cmpsl
push
push
add
shr
rorl
fwait
and
xchg
fisubs
in
int3
movsl
xor
push
or
lahf
jmp
push
add
and
jns
add
add
loope
add
pop
out
scas
and
outsl
push
mov
xchg
add
stos
mov
test
xchg
cmpsb
add
clc
or
pushf
dec
push
add
mov
nop
xchg
clc
push
push
xchg
dec
dec
mov
add
aam
lods
jg
repz
add
fprem
cltd
loopne
xlat
shll
xchg
dec
dec
leave
push
ret
outsb
xor
sbb
testl
add
dec
in
sbb
mov
add
sbb
pop
push
add
addb
sbbl
testb
add
mov
int
outsb
xchg
add
inc
add
mov
xor
xor
or
call
push
sub
add
pop
mov
ja
jecxz
scas
xor
lods
mov
add
add
outsl
out
lds
movsb
add
ficompl
add
or
test
sbb
movsb
add
mov
push
add
mov
lahf
jns
dec
cmpsl
inc
add
jecxz
add
xchg
popa
push
add
add
lret
lea
jle
add
add
ret
push
cwtl
sbb
add
push
add
add
inc
add
rolb
or
mov
lret
push
rolb
int
cmpsl
sti
fdivs
outsl
dec
cmp
mov
add
add
add
mov
jb
dec
sub
aam
data16
pop
cmp
xor
xor
add
and
add
xchg
add
jmp
pop
test
fwait
hlt
add
add
jle
fcmovne
dec
and
xor
popa
mov
add
mov
push
add
and
rolb
jecxz
add
sbb
mov
pusha
add
inc
add
push
pop
enter
dec
mov
inc
sub
clc
or
sbb
ljmp
push
loope
pop
shll
jo
add
jno
pop
jge
movsb
add
scas
cld
mov
add
xor
ds
push
add
addb
add
add
pusha
add
popf
xchg
add
lds
fcmovne
rolb
insb
incb
dec
daa
xchg
mov
mov
into
add
add
xor
mov
mov
mov
out
jno
add
push
add
add
testb
jmp
sub
addb
dec
addb
xchg
iret
movl
push
add
pop
popa
imul
add
mov
add
and
push
xchg
add
sbb
add
dec
in
add
addb
push
add
add
clc
sub
add
push
aam
iret
push
leave
cmc
mov
sbb
lods
xlat
aas
insb
aaa
sbb
stc
or
adc
cmpsl
push
loop
mov
int
stc
rolb
push
add
add
in
adc
add
push
add
add
fsts
add
add
fucomp
add
dec
dec
bound
mov
xchg
rolb
sub
pop
ljmp
fsubl
add
mov
add
jg
adc
xchg
cs
stos
mov
sbb
add
sbb
add
add
hlt
add
and
adc
dec
pop
cmc
ret
lock
mov
add
cmp
fcmovbe
add
dec
inc
adc
jl
int3
aad
add
popa
mov
xor
test
test
pop
outsl
sub
push
add
lea
push
out
cwtl
add
mov
dec
sbb
loopne
cwtl
adc
sbb
add
cmp
add
inc
mov
adc
loope
ret
add
fcompl
inc
add
xchg
test
sub
mov
dec
mov
iret
sub
lea
add
lock
add
xchg
add
mov
add
add
add
les
inc
aad
add
inc
fistpll
lods
xor
and
movb
add
add
add
dec
dec
push
lock
xchg
sub
mov
aas
cmp
mov
invd
enter
and
add
mov
mov
mov
or
test
add
mov
or
scas
bound
mov
add
addr16
add
add
adc
fimuls
add
or
sahf
add
add
or
xor
and
inc
stos
scas
inc
add
mov
adc
lcall
pop
mov
xor
xlat
cmpsb
add
pop
fstpl
movsl
jo
or
fwait
xor
call
cmpsb
add
push
sti
pop
jb
push
add
dec
loop
lock
add
scas
pop
setns
add
clc
or
dec
ficoms
mov
xor
mov
loope
ja
add
mov
sti
pop
lret
nop
add
cltd
dec
pop
into
std
mov
mov
add
add
add
mov
sub
scas
clc
dec
shll
dec
in
xlat
adc
je
icebp
or
clc
pop
jnp
bound
mov
pop
inc
cmpsl
push
pop
loop
sub
add
mov
or
xchg
add
mov
cmp
mov
es
add
loope
add
insl
roll
add
jbe
mov
daa
dec
pop
adc
add
mov
adc
mov
movsl
shll
int3
dec
and
mov
mov
cmp
inc
add
insl
fwait
pop
scas
addb
rdmsr
add
add
lea
bound
mov
and
pop
mov
add
add
add
add
add
into
sbb
pop
add
xchg
out
in
dec
inc
mov
mov
ja
add
mov
jns
clc
outsl
sub
cmp
sub
enter
add
jle
outsb
push
add
rolb
lret
push
imul
imul
lahf
fdivs
xor
add
inc
add
fisubs
inc
add
and
mov
lock
sbb
add
add
and
add
xor
andl
lods
scas
mov
fists
add
add
push
add
add
out
push
and
mov
outsl
xchg
add
iret
or
add
dec
mov
and
mov
jnp
adc
cltd
add
jae
or
pop
inc
add
sahf
cmpsl
mov
rolb
fnstcw
lahf
dec
and
mov
aaa
cmp
dec
loope
add
fsubrs
add
imul
mov
and
les
stos
adc
lods
dec
stos
jae
mov
xlat
mov
das
test
mov
imull
or
add
mov
stos
pop
sbb
test
add
ja
lock
sub
stos
daa
jae
and
mov
push
add
add
shll
out
fstl
repnz
add
testb
cmp
jne
clc
sbb
lcall
add
xchg
js
add
push
aaa
or
add
add
push
add
add
push
shrl
lock
and
dec
adc
mov
sahf
sahf
ficoms
cmp
dec
dec
ljmp
testb
add
inc
add
and
in
mov
xchg
or
popa
push
jns
add
out
mov
add
mov
mov
add
insb
jnp
add
pop
insl
inc
ds
add
aad
ja
mov
adc
push
add
cmp
sub
in
sti
add
mov
add
jmp
sti
pop
lret
xor
ja
ret
aas
std
mov
jo
addb
dec
jmp
add
clc
pusha
add
mov
dec
outsl
add
mov
and
in
sub
sbb
xlat
cmp
rolb
add
add
mov
sbb
test
fcompl
fmul
pop
mov
add
and
sub
clc
jb
cs
jp
add
mov
in
lds
add
test
xlat
pop
xor
inc
add
mov
sbb
xchg
cmp
add
add
aas
push
lahf
adc
mov
add
add
and
mov
mov
add
mov
inc
add
mov
sarl
dec
xlat
mov
sbb
fsubl
xchg
mov
add
adc
rcl
add
insb
xor
jp
add
sbb
add
pop
mov
xchg
add
xor
xchg
sub
fists
cmp
mov
add
add
xor
pop
push
cli
aam
addb
add
fiaddl
mov
cltd
push
cmpps
in
mov
addb
add
mov
adc
push
add
add
lock
add
mov
jg
add
lahf
test
mov
xchg
add
rolb
push
add
sub
jmp
push
adc
hlt
add
sti
push
or
cmpsb
add
sbb
fsubs
adc
push
pop
divl
iret
arpl
or
inc
adc
jb
xchg
add
xchg
add
adc
rolb
mov
and
pop
cmc
pop
xor
mov
outsl
out
outsb
xor
sbb
xchg
das
rcrl
arpl
jno
add
movb
or
loopne
cmp
xchg
or
mov
add
add
nop
add
addb
add
mov
out
jp
or
add
mov
add
mov
adc
xor
add
add
add
stos
adc
xor
sar
pop
or
and
mov
add
add
sub
adc
xor
in
daa
aad
add
sub
mov
add
add
xchg
aaa
push
add
mov
ds
ljmp
cmp
add
mov
push
add
mov
stos
scas
nop
add
dec
adc
jnp
push
add
add
into
cld
sbb
cmp
pop
sbb
add
sub
add
inc
push
add
icebp
mov
add
or
add
mov
add
xchg
jl
sbb
inc
add
rolb
aas
loope
cs
add
push
add
push
add
add
ret
push
add
in
pop
add
jnp
pop
addb
jbe
cmpsb
add
lds
mov
or
gs
jo
in
adc
lods
xor
daa
test
sub
pushf
imul
sub
cmpsb
add
rolb
movsl
sbb
jmp
xchg
fwait
mov
ljmp
mov
add
sub
adc
xor
add
mov
add
jecxz
xor
mov
dec
les
mov
sbb
mov
aas
xchg
add
mov
std
mull
mov
rolb
outsl
xchg
adc
jo
dec
add
add
dec
test
add
pushf
adc
std
sbbl
add
data16
and
cmp
pop
sub
stos
jmp
aam
sbb
ss
add
add
add
pop
movsl
pop
repnz
fnstenv
mov
add
loope
hlt
add
push
add
mov
jae
pop
mov
sub
push
clc
call
or
jg
mov
add
inc
and
mov
jne
inc
ds
jb
pushf
mov
push
add
ljmp
test
xor
add
add
add
pop
popf
mov
mov
cmp
jb
leave
imul
sub
add
and
into
outsb
aaa
mov
aaa
push
arpl
test
add
ret
ja
add
and
mov
clc
movl
loopne
int3
outsl
leave
adc
mov
add
mov
dec
lcall
add
mov
dec
sbb
add
stc
mov
add
add
out
bound
mov
fiadds
add
add
mov
lds
movb
and
mov
adc
sbb
sub
pop
repnz
cwtl
ja
adc
push
add
jno
flds
ret
dec
shll
mov
imul
add
add
add
aad
mov
mov
mov
add
add
xchg
xchg
movb
push
add
addb
add
idiv
daa
fiaddl
push
add
aaa
ds
mov
mov
add
add
add
out
idivl
pop
ljmp
std
jno
in
xlat
xor
add
movlps
test
popa
xchg
add
mov
test
or
daa
pushf
add
xchg
add
and
mov
push
add
in
dec
pusha
add
add
add
mov
mov
test
mov
aam
fistps
gs
push
jmp
inc
add
andl
les
lock
bound
mov
ret
sub
sti
xchg
add
enter
jmp
add
push
hlt
add
adc
dec
xchg
cmpsb
add
mov
add
mov
rolb
int
add
xchg
cmp
sbb
xchg
or
lds
adc
pop
and
and
mov
mov
cltd
mov
clc
rolb
pop
or
add
lods
addr16
xchg
jae
nop
add
add
add
sub
push
lods
repnz
add
add
lods
enter
ret
push
aam
lret
test
dec
shrl
jmp
lret
addr16
sbb
das
mov
data16
add
out
add
add
in
sub
add
arpl
rolb
out
add
cmp
in
test
int3
mull
mov
sbb
or
add
add
sbb
pop
lret
cltd
pop
xchg
aam
sbb
dec
add
mov
or
add
add
lret
dec
add
jecxz
add
out
lods
out
jno
push
add
cltd
and
popf
jnp
adc
add
jg
inc
add
inc
add
adc
notl
jns
add
lds
mov
xrelease
addb
add
js
push
add
push
add
imul
add
add
push
add
add
add
mov
pop
sbb
jmp
mov
mov
push
std
push
xchg
inc
lods
popa
aaa
xchg
xchg
sub
add
hlt
add
insl
rolb
repz
xchg
cmp
arpl
xchg
aam
dec
movsb
add
mov
test
add
iret
xchg
push
add
fwait
or
into
jb
push
xchg
pop
pushf
adc
add
mov
lret
pop
mov
psrlq
in
rolb
jg
jge
std
sbb
cmp
or
addr16
push
add
mov
subl
rolb
mov
pop
aad
aas
mov
imul
add
dec
mov
jns
aad
and
pop
mov
cmp
mov
outsl
mov
mov
push
cld
and
enter
push
cmp
add
popf
jb
sbb
sbb
leave
sbb
add
push
pop
cld
repnz
sbb
dec
lcall
add
add
push
add
xchg
inc
add
lret
jnp
add
addb
divl
cmc
xor
pop
cmpsl
push
popf
xor
fimuls
add
in
imul
mov
add
ljmp
mov
add
inc
mov
and
mov
iret
pop
leave
mov
loop
cmp
pop
xor
xlat
pop
icebp
jl
add
popa
arpl
jo
jecxz
or
outsl
aas
adc
add
sub
lea
daa
repnz
ljmp
add
ret
fldl
add
jmp
add
sbbl
mov
add
addr16
and
mov
cmc
iret
cmp
outsb
addl
je
sahf
out
jno
loopne
lea
add
stos
jge
inc
movsl
fwait
adc
cmp
call
inc
and
mov
jle
adc
mov
dec
lret
out
sbb
add
sub
add
mov
add
sub
in
movb
mov
test
sbb
pusha
add
cmpsl
xor
xchg
jecxz
push
add
jge
decb
imul
in
cmpsb
add
arpl
xlat
adc
call
pop
bound
mov
stos
ret
mov
jnp
and
incl
popa
adc
inc
out
mov
add
xchg
popf
adc
sbb
add
dec
or
adc
loop
mov
inc
in
adc
loope
mov
push
add
add
jmp
push
add
test
jg
push
dec
cmpsb
add
mov
add
js
dec
in
and
and
mov
add
add
cmp
add
push
out
ret
arpl
sub
jecxz
add
add
add
jp
int3
outsb
in
int3
mov
fistpll
cmp
dec
or
popa
mov
hlt
add
add
outsl
adc
into
mov
add
xor
fdivl
add
insl
into
test
push
add
popl
mov
data16
adc
push
add
in
mov
fisttps
mov
iret
sbb
lods
jbe
xchg
sbb
or
mov
test
mov
add
add
mov
std
cmpsb
add
clc
jecxz
xchg
push
mov
cmp
jge
xchg
add
mov
add
push
xor
fmuls
push
cmpsl
sbb
in
stos
fsubrl
mov
mov
mov
add
hlt
add
xchg
add
cld
push
add
and
int3
add
out
lods
sbb
add
xchg
add
sub
add
xor
add
add
out
addr16
add
cmp
jg
jmp
in
or
add
mov
mov
sub
ficoml
fcoml
add
js
sti
int
add
cmpsb
add
adc
cmp
insl
mov
ja
xlat
cmp
mov
stos
jg
rolb
fldz
sbb
fisubrs
arpl
pop
in
jge
ret
jmp
stos
xchg
add
xchg
inc
add
das
shl
sub
push
mov
jg
cmp
add
push
add
cmp
nop
add
lods
fs
fwait
jnp
lcall
add
or
addb
xor
mov
cmpsb
add
sbb
add
add
mov
push
xchg
stos
aam
mov
add
fnsave
and
add
clc
or
add
rep
sbb
add
cli
push
xor
xlat
scas
inc
lods
popf
or
sbb
cmp
test
xchg
add
add
movl
addb
into
push
add
mov
push
pop
mov
push
add
add
mov
add
add
rolb
add
pop
mov
fcmovb
add
jo
mov
add
mov
test
add
add
mov
into
push
and
mov
push
add
mov
and
mov
jb
mov
cmpsl
cmpsl
jb
divl
sahf
push
add
mov
lahf
mov
jecxz
in
hlt
add
mov
popl
add
add
add
test
push
add
push
lret
push
add
pop
int3
adc
fldl
mov
loop
roll
out
lods
adcl
add
jae
mov
testl
add
push
in
data16
dec
lret
dec
lret
packssdw
add
movhps
add
add
add
add
lods
outsl
lret
popa
aam
xor
rolb
and
cmp
add
ret
xchg
add
push
loopne
jg
jne
add
sub
mov
std
lds
push
fsubl
dec
push
or
data16
mov
or
sbb
add
mov
ja
mov
insb
push
addb
xlat
add
lea
and
mov
add
test
scas
pop
add
mov
sahf
data16
cld
out
orl
clc
xor
test
xor
pushf
push
je
jo
adc
dec
jnp
sbb
add
add
mov
sbb
int3
int
hlt
add
fstpl
or
dec
pop
cmpsb
add
mov
inc
add
add
ds
jge
addb
mov
push
dec
jo
mov
fildll
xor
outsb
dec
add
adc
pop
lock
popa
stos
add
mov
pop
jp
js
dec
sub
mov
xchg
dec
movsb
add
add
lret
jmp
mov
add
push
add
pop
das
fwait
mov
add
pop
fwait
mov
pop
popa
xchg
xor
lds
mov
add
cmp
add
loope
int3
bound
mov
xor
addr16
jmp
or
sub
iret
stos
rolb
push
lock
mov
jge
stos
int3
xchg
pop
insb
pop
pop
jp
cmc
xchg
daa
rolb
repz
add
mov
add
jp
push
jmp
add
inc
add
lea
jg
push
add
jo
push
out
ficoms
cltd
pushf
add
mov
mov
dec
mov
push
lcall
fnstenv
inc
add
add
add
dec
add
add
scas
lds
add
ja
out
push
pop
and
add
add
add
add
mov
mov
add
cmp
cwtl
stc
stos
jle
mov
xchg
add
ret
push
cmp
add
mov
mov
add
stc
cmp
add
sti
pushf
lret
repz
mov
xor
sub
sbb
sub
mov
add
add
iret
push
enter
dec
or
push
and
mov
ficoms
jge
add
mov
mov
add
mov
add
add
loopne
mov
sub
insb
movsl
push
fsubrs
add
mov
xrelease
movb
fmul
rol
add
sbb
add
enter
mulps
sbb
add
mov
jns
mov
xchg
add
jp
fisubl
out
data16
jecxz
sbb
mov
mov
mov
in
hlt
add
jecxz
add
cld
inc
add
add
lds
cmp
pop
in
sarl
pushf
mov
outsl
aad
add
xor
lcall
mov
mov
add
ret
clc
fnsave
out
out
bound
mov
add
in
jb
into
cmp
xchg
sar
repnz
mov
mov
stos
mov
mov
leave
mov
mov
fidivrs
rolb
xor
add
add
std
inc
add
dec
stos
out
fs
mov
mov
add
inc
add
test
add
dec
into
rolb
mov
add
push
loope
add
add
and
call
aaa
jg
loop
imul
push
add
clc
xor
mov
add
push
xlat
testb
add
pop
addr16
add
xchg
or
mov
ljmp
or
shll
pop
pop
add
mov
jmp
dec
test
push
add
rcr
inc
add
mov
lret
dec
jecxz
add
push
add
dec
dec
inc
out
repnz
add
add
adc
ja
fisttps
add
hlt
add
or
addb
add
into
test
loopne
mov
lea
aam
gs
std
lahf
leave
push
add
jb
test
pop
pop
addb
add
mov
add
add
pop
inc
mov
sbb
xor
add
add
cld
jno
xchg
pop
data16
scas
xchg
add
in
xchg
adc
pop
cmpsl
data16
repnz
add
add
adc
cli
sub
mov
iret
push
add
add
xor
cmpl
mov
add
xchg
add
push
add
add
mov
add
inc
add
cld
loop
movsl
stos
or
ljmp
mov
mov
rolb
mov
test
xor
cmp
add
mov
inc
and
lcall
pushf
add
lods
jp
inc
mov
into
std
pop
rolb
cltd
mov
dec
repnz
fdivrs
std
mov
push
add
lods
adc
xlat
gs
mov
add
push
add
push
add
add
pop
popf
scas
cmp
add
add
add
add
clc
sub
push
pop
ret
les
in
loopne
cmp
add
add
add
sub
paddb
and
fisubs
fbstp
ljmp
pop
mov
add
add
or
inc
add
data16
jns
push
add
repnz
mov
mov
jmp
jmp
cmpsl
enter
add
push
stc
push
xchg
pop
movb
xchg
add
sub
add
add
jno
jbe
imul
mov
add
add
add
sbb
inc
add
cmpsb
add
fcomps
cmc
cmp
insl
add
aam
xchg
xor
sub
repz
mov
sbb
mov
add
pushf
add
test
fxch
mov
add
add
push
inc
sarl
pushf
imul
imul
sub
add
mov
pop
xchg
dec
sub
fs
shr
test
cmp
movsb
add
cli
sub
imul
add
jnp
leave
fcomp
call
gs
outsb
pop
add
test
ljmp
cmpsl
dec
push
add
add
add
mov
fists
add
xor
add
ljmp
add
adc
add
inc
loopne
arpl
pop
rolb
movsb
add
add
adc
ds
lds
add
mov
add
xor
pop
bound
mov
loope
movb
int
fwait
xchg
mov
scas
fwait
sub
xor
rcll
add
dec
xor
mov
mov
add
sub
call
add
add
add
xlat
outsb
xor
lds
inc
add
add
sub
clc
adc
sub
push
add
cmc
iret
add
pop
adc
or
mov
mov
xchg
add
add
fisttps
int3
ss
je
add
pop
mov
adc
or
mov
in
into
lcall
inc
rolb
test
dec
ljmp
mov
out
lcall
add
daa
inc
add
jae
loop
and
sahf
pop
add
js
aaa
and
cmp
mov
or
sbb
sti
cmp
add
fistpl
add
mov
jp
test
lods
int
and
inc
pop
cld
rcll
add
cmp
into
incb
insb
dec
subl
fldenv
add
add
xor
lods
mov
mov
lcall
add
xlat
and
mov
dec
push
add
add
aad
mov
mov
mov
add
add
lcall
lahf
fst
cmp
cltd
fiadds
ffree
jne
inc
xchg
add
add
cmp
ficoms
les
sahf
stc
cmp
cld
repnz
sbb
ds
add
push
add
add
add
add
into
cmpsb
add
xor
mov
add
lods
lea
pop
and
add
ret
xlat
fwait
mov
rolb
fnsave
add
fstpt
loopne
mov
out
add
jae
sub
add
icebp
cmp
outsb
adc
mov
int
add
xchg
add
push
add
push
add
xlat
adc
xlat
pop
jns
jno
add
add
mov
repnz
sbbl
push
add
push
add
sub
sub
xchg
adc
sbb
jmp
add
and
mov
add
int3
std
adc
lret
sbb
fldln2
mov
xchg
add
push
lahf
pusha
add
cmp
cmpl
add
add
mov
mov
inc
ret
das
in
ret
ja
mov
ja
bound
mov
ja
sub
addb
add
xchg
sub
mov
dec
sbb
add
sbb
mov
xor
shll
dec
xor
gs
int
mov
pop
pusha
add
push
add
loopne
jge
mov
add
rolb
addb
push
or
fld
int3
and
mov
cmc
add
mov
jl
fbstp
and
testb
add
ja
adc
lds
mov
cmc
repz
xchg
add
mov
add
mov
sub
scas
lods
sub
cmpsl
dec
test
add
add
add
add
iret
xor
je
rolb
lock
inc
insl
pushf
leave
out
dec
mov
mov
pusha
add
stos
pop
js
xchg
add
and
mov
or
push
add
jmp
sub
add
cs
add
lcall
xor
xchg
push
insb
ret
insl
repnz
pop
outsl
jl
repz
movsl
mov
jo
pusha
add
mov
add
pop
rolb
inc
xlat
adc
add
and
mov
arpl
add
add
gs
or
add
mov
cmp
cltd
mov
dec
push
not
add
or
mov
adc
cli
pop
pop
leave
dec
test
int3
in
jb
push
add
mov
mov
testb
into
mov
lds
dec
cmpsb
add
mov
and
add
insl
mov
dec
int3
std
xchg
cmp
divl
scas
push
add
add
add
movb
add
jmp
xchg
sub
sub
ja
add
js
pop
dec
mov
mov
mov
addb
and
add
push
jmp
pop
outsb
lcall
in
pop
sbb
cmp
lods
jno
dec
jg
int3
mov
add
jno
into
in
push
add
xchg
add
add
sbb
ds
sub
add
push
out
or
pushf
sbb
add
imul
testb
add
dec
jl
lock
jge
inc
add
outsl
sti
xor
mov
rolb
mov
bound
mov
lds
lods
ds
add
jl,pt
cmp
jl
data16
fs
dec
inc
and
sbb
add
push
sub
fadds
mov
sub
fadds
fsubl
add
dec
popa
loop
lret
push
int
add
pop
addb
pop
add
mov
mov
add
sbb
add
add
ret
lea
add
mov
inc
mov
add
into
mov
adc
mov
inc
add
jnp
add
scas
add
xor
pop
jae
or
xchg
push
xchg
cmc
lods
fdivl
and
mov
add
mov
out
imul
mov
jl
shll
mov
add
xor
bound
mov
addb
stos
les
pop
popf
mov
and
pop
pusha
add
testb
push
add
xchg
mov
test
add
lods
out
addb
out
jo
cwtl
hlt
add
add
pusha
add
dec
fisttps
or
dec
aad
out
mov
add
jae
xor
add
mov
hlt
add
imul
xchg
add
jle
add
add
subl
ret
jmp
rolb
push
jnp
add
lret
jp
inc
add
add
jne
jmp
add
and
mov
aaa
jge
xor
xor
leave
out
xchg
loope
jns
in
pop
jno
add
sub
add
add
cld
or
inc
add
push
add
xchg
test
add
add
adc
popa
lcall
repz
repz
add
insl
data16
mov
add
jns
add
add
mov
mov
and
mov
mov
rolb
xlat
mov
add
add
push
mov
or
xlat
rolb
in
icebp
mov
stos
mov
sub
sahf
sbb
add
leave
jmp
push
add
add
dec
lea
add
dec
or
add
add
lret
cli
fdivrs
mov
sub
arpl
add
mov
mov
jmp
cld
xchg
add
mov
dec
jl
jns
mov
add
inc
add
fcomps
jae
add
mov
add
add
add
repnz
add
fcmovnb
cli
add
add
sub
cmp
add
arpl
cld
add
push
lahf
negl
add
outsb
inc
pop
daa
pop
call
pop
mov
das
in
mov
inc
popf
call
pushf
enter
sub
imul
add
add
add
mov
jmp
jmp
mov
cmp
mov
movb
add
out
loopne
cltd
fstps
add
rolb
cmc
add
pop
jae
jns
add
rcrl
sbb
sub
add
lahf
jge
add
add
mov
mov
jbe
adc
into
out
in
mov
add
aam
mov
add
loopne
pop
rorl
mov
aaa
mov
jne
add
jecxz
add
add
add
add
sub
mov
cld
jmp
add
mov
add
sub
ret
sub
add
je
loope
lcall
add
sbb
xchg
add
dec
mov
add
cmp
push
mov
add
mov
mov
icebp
mov
addb
sbb
add
aad
insb
adc
add
sub
push
add
mov
adc
inc
add
add
dec
out
loop
call
aad
jg
pusha
add
add
mov
sbb
pushf
aam
xor
add
mov
push
add
repnz
mov
mov
and
mov
pop
fdivr
xchg
add
out
dec
cwtl
fwait
lret
movb
add
cmp
push
jno
add
sbb
pop
or
add
sbb
ljmp
jmp
cwtl
sub
daa
xor
rolb
sbb
add
cwtl
aad
sbb
aam
out
add
cmpsl
push
mov
xchg
or
add
add
mov
jb
add
mov
add
add
jo
inc
add
add
add
add
mov
add
mov
and
mov
lds
adc
jecxz
cmc
inc
add
or
add
sbb
mov
pop
xlat
and
mov
testb
lods
test
add
cmp
leave
sti
repz
mov
add
inc
add
repnz
push
bound
mov
xor
enter
lea
dec
scas
loope
add
mov
add
mov
jnp
add
adc
adc
lret
fdivl
fsubl
mov
dec
mov
jg
add
sbb
push
lods
mov
add
call
clc
scas
mov
xchg
out
int3
cs
add
mov
add
outsl
lahf
loopne
jecxz
cmp
data16
movb
add
add
add
add
sbb
rolb
ret
lods
xchg
add
add
add
data16
add
subl
dec
ja
xor
dec
pop
jp,pt
inc
daa
popa
std
or
xchg
add
call
movsb
add
inc
add
cmpsb
add
add
mov
das
sub
ret
dec
gs
fwait
mov
add
out
xor
push
add
mov
out
rol
add
mov
mov
xor
outsl
mov
jge
add
sub
mov
aaa
leave
in
push
add
or
add
pop
ret
inc
add
mov
add
out
gs
ret
jb
cli
stos
je
outsb
pop
add
dec
mov
pop
fucomi
sti
sti
pushf
jge
mov
xor
in
iret
testl
aaa
les
in
das
les
mov
mov
add
sbb
add
add
out
mov
pusha
add
add
addl
test
add
pop
mov
add
adc
movsb
add
sahf
or
scas
leave
mov
lcall
add
push
add
inc
dec
je
addb
add
mov
movb
add
pushf
jle
outsl
push
add
jns
add
insb
cltd
add
xchg
add
add
mov
mov
push
mov
pop
inc
adc
popf
inc
mov
pop
add
add
add
dec
pop
loope
enter
xchg
dec
jp
add
inc
and
jmp
lods
pushf
fistl
jl
aad
dec
shll
add
inc
add
add
mov
out
imul
add
add
add
repnz
add
lock
jno
cmp
out
fldt
add
sub
insb
mov
push
add
push
jg
add
into
mov
lret
test
outsl
pop
in
add
add
add
or
xchg
add
add
xchg
jp
mov
stos
add
shrl
mov
xorl
sbb
cmp
add
iret
adc
rorl
cmc
jmp
xchg
add
add
add
pop
fwait
out
call
dec
push
add
mov
jle
ja
add
idivl
or
clc
fadd
faddl
fdivl
add
mov
stc
push
add
imul
clc
test
xor
sarl
fisubl
cli
sub
jecxz
sbb
sti
or
testb
stc
movsl
push
add
jns
sbb
jmp
sbb
add
pop
ret
add
scas
inc
mov
mov
and
bswap
lahf
cs
add
mov
add
add
push
add
add
pop
sti
scas
fcoml
add
mov
add
push
call
setnp
roll
fdivrl
bound
mov
pop
xchg
mov
outsb
jns
add
jno
add
dec
out
pushf
sbb
add
and
mov
cmpsb
add
xchg
push
jae
pop
cmc
fstpl
mov
icebp
mov
cli
cld
in
inc
cmp
add
sub
add
add
sbb
sbb
int3
jp
xchg
add
add
mov
and
call
test
push
mov
add
mov
add
mov
mov
dec
mov
mov
repnz
mov
mov
jmp
mov
stos
fadds
add
call
inc
add
jae
in
aad
add
mov
or
add
pop
pop
adc
js
add
fucom
lret
mov
sub
in
jno
pop
sub
or
add
daa
jl
add
add
add
add
mov
pop
clc
jnp
je
pop
mov
add
add
add
fwait
mov
imul
add
mov
fsub
adc
lret
sub
les
int3
xor
mov
add
addb
lcall
xlat
mov
sti
repz
push
add
or
sub
add
sbb
clc
in
jo
addr16
add
add
add
test
fsub
push
add
stos
cmp
mov
push
and
lahf
enter
shl
add
cmpsb
add
out
xor
sbb
icebp
popf
bound
mov
add
mov
add
mov
test
add
and
rolb
cmp
inc
std
lret
leave
ja
push
nopl
jo
xor
inc
add
fstpt
cld
lock
add
dec
jo
dec
jle
addb
aas
cmp
mov
sub
mov
mov
push
add
mov
cmpsb
add
sub
fsubrs
mov
mov
push
add
add
mov
std
mov
mov
fsubrs
rolb
fstpl
jmp
add
repz
pop
fsubrs
push
add
clc
cmpsl
pop
push
add
testb
pop
mov
lahf
dec
mov
or
hlt
add
pop
mov
mov
xlat
jmp
jecxz
add
test
and
fstpt
jmp
pusha
add
lods
inc
xor
nop
add
inc
add
mov
mov
or
cmpsb
add
add
mov
loop
gs
addr16
cmp
add
push
add
int3
test
jle
add
add
stc
addb
pop
stos
into
fcomi
popf
add
mov
jae
cltd
xchg
adc
les
inc
add
mov
or
sub
xor
les
movsb
add
add
enter
aas
adc
imul
fcompl
pop
int3
pop
and
test
sub
add
sbb
rolb
or
iret
or
jmp
inc
add
ja
add
call
or
rolb
mov
add
add
add
daa
js
mov
add
add
int
pop
int3
mov
dec
pusha
add
in
inc
add
cmp
mov
lcall
je
inc
test
movb
int3
cwtl
std
cmpsl
pop
xchg
adc
xor
sub
adc
adc
cmp
fwait
mov
mov
jmp
cmpsl
sti
sbb
mov
xchg
addb
call
dec
insl
ficompl
sbb
sbb
mov
add
inc
add
xlat
jae
push
or
loopne
das
mov
stos
dec
sbb
add
and
or
add
push
add
mov
add
inc
add
add
movsl
fidivl
out
add
add
testb
stc
pop
icebp
pop
mov
repnz
daa
mov
in
arpl
jno
jno
rolb
lds
fldcw
and
mov
push
lods
int
add
add
jnp
lock
nop
add
add
clc
jnp
add
add
inc
add
pop
and
mov
mov
std
inc
add
sub
add
jbe
cmpsl
insb
adc
das
jae
sti
int
add
call
xor
push
cmp
mov
mov
rolb
cmp
addb
outsl
bound
mov
pop
in
outsb
cmp
jmp
jns
or
bound
mov
mov
outsb
addl
jns
add
add
mov
pop
into
lret
mov
push
pop
inc
and
add
or
mov
add
sti
loopne
mov
orl
dec
push
mov
fdiv
cmp
add
cmc
and
mov
test
or
push
add
mov
mov
add
add
pop
and
sub
xlat
xchg
add
mov
jmp
jo
add
add
mov
leave
pop
add
add
mov
test
push
add
mov
lods
icebp
lret
leave
adc
loope
add
cmp
add
out
stos
push
add
rolb
test
out
je
insb
jnp
or
add
add
add
arpl
add
mov
add
mov
fistpl
jp
push
ds
test
mov
mov
add
or
cmc
xchg
test
outsb
bound
mov
jo
mov
push
add
push
rorl
repz
scas
or
and
mov
add
add
add
fst
push
add
add
cmc
inc
add
rolb
adc
add
add
sbb
mov
add
push
add
mov
popa
leave
gs
cmp
xor
mov
push
add
sub
xorl
mov
icebp
jmp
add
and
add
dec
mov
xchg
add
add
adc
inc
push
add
mov
add
call
add
dec
push
jecxz
dec
mov
rolb
add
add
dec
add
mov
mov
mov
testb
add
jp
add
je
repnz
repz
add
add
movups
or
movsl
addb
mov
mov
add
pop
and
add
jnp
loop
lods
xchg
outsl
ja
lods
jge
xchg
lods
test
lds
xchg
add
out
jb
fcmovnu
scas
fwait
ret
add
int3
out
loop
jle
ds
xchg
out
nop
add
mov
adcl
addr16
add
add
aam
push
add
add
mov
je
test
cmp
add
or
pusha
add
in
jbe
in
xor
mov
adc
stos
pop
negl
inc
dec
xchg
rolb
mov
lds
rolb
push
mov
les
adc
jno
loopne
adc
add
stc
out
inc
add
jle
push
mov
aad
add
add
mov
add
adc
dec
imul
jne
add
pop
add
mov
push
xlat
mov
bound
mov
out
push
add
call
out
lcall
mov
push
push
shll
out
incb
add
ljmp
add
sbb
mov
fbstp
stos
jbe
pop
xor
cmp
add
aam
mov
int3
outsl
push
cmp
mov
jnp
add
mov
test
add
scas
jae
out
gs
inc
add
add
push
add
add
xchg
add
mov
push
add
fcompp
xchg
imul
add
add
jne
jo
repnz
add
add
mov
add
add
xchg
add
cwtl
jns
xchg
fwait
dec
into
jp
pop
and
mov
add
cmp
lock
std
addr16
add
fcomps
add
stos
mov
add
add
add
sub
sub
mov
add
daa
out
in
or
or
pmaddwd
push
add
add
test
icebp
xor
add
inc
pushf
fsubrs
ret
jl
jl
pop
push
leave
push
arpl
add
hlt
add
data16
adc
add
fsubrp
mov
push
add
or
xchg
mov
jg
add
int3
decl
xor
push
add
lret
jmp
mov
outsl
bound
mov
pop
push
add
and
inc
add
popa
sbb
lret
push
add
add
and
and
add
mov
xlat
mov
push
add
add
pop
push
push
add
pop
in
jecxz
mov
jl
add
xchg
add
mov
push
add
xchg
aam
jnp
sub
je
or
lock
ret
rorl
shll
jb
add
inc
add
imul
mov
dec
push
xchg
mov
mov
rolb
add
insb
mov
push
add
add
mov
into
dec
out
ud0
cmp
addb
sbb
lahf
lcall
movsb
add
cmp
mov
jne
icebp
adc
cmp
add
leave
xor
inc
add
aam
cmp
jmp
push
add
add
add
lea
xchg
and
mov
or
mov
push
mov
std
dec
insb
testb
mov
and
testb
orl
add
jnp
inc
sub
ds
xor
cs
jecxz
add
add
add
add
add
pop
aad
pop
into
outsl
out
or
in
cmp
dec
movd
in
add
lea
lock
sub
cwtl
pop
test
stos
test
std
jnp
ljmp
mov
adcl
mov
mov
sbb
fmull
dec
and
arpl
jmp
add
add
lea
xor
cltd
mov
shll
inc
imul
sti
add
inc
add
add
add
iret
mul
add
add
ret
test
pop
mov
add
add
scas
ljmp
shll
cli
inc
xchg
mov
add
pop
xor
cs
pop
stos
mov
or
arpl
mov
push
ret
popa
cli
hlt
add
into
stos
mov
add
ret
xchg
add
xchg
icebp
rolb
add
mov
popf
mov
scas
inc
add
add
out
je
jmp
add
jecxz
aas
loopne
or
jecxz
inc
add
mov
enter
jbe
repz
repz
outsl
xor
add
aaa
and
add
sub
hlt
add
add
mov
adc
add
jae
jb
add
add
fbld
outsl
call
addb
nop
add
xchg
movb
jmp
mov
push
add
in
or
lcall
add
sub
mov
dec
xchg
add
sub
add
enter
cmp
xchg
cmp
insb
adc
cs
xchg
add
ss
in
pop
push
lret
inc
xlat
inc
add
das
add
mov
rolb
push
add
add
add
add
add
ficoms
add
sbb
add
sub
adc
xchg
add
call
sbb
xchg
dec
jmp
pushf
pop
dec
xor
sub
or
scas
ja
add
xchg
jecxz
rolb
fcompl
rolb
pop
lret
jmp
jo
mov
xor
and
add
pop
dec
mov
in
cmp
fdivr
gs
pop
test
add
add
adc
mov
mov
add
fisttpll
sbb
cmp
jo
adc
mov
sahf
push
scas
insb
pop
pop
pop
loop
std
mov
int
and
ret
sbbl
aad
inc
add
add
cli
push
and
add
addr16
inc
add
add
add
mov
xchg
add
roll
mov
adc
jo
xchg
ja
mov
cmp
add
aaa
mov
lea
push
add
popf
movsl
add
add
mov
xchg
mov
sub
inc
add
fisttps
ljmp
mov
sub
add
imul
adcl
sahf
mov
jecxz
add
mov
jo
pop
and
add
add
mov
sbb
mov
out
pusha
add
out
xchg
cmp
fsubs
xor
and
mov
mov
pop
mov
sbb
movsb
add
adc
andl
add
or
and
mov
inc
add
test
add
jns
leave
fsts
cmpsl
movsl
mov
mov
pop
adc
mov
test
fstpl
insl
daa
and
int3
add
mov
adc
test
add
add
add
sub
lret
and
fxch
fwait
jl
pop
inc
add
xchg
add
aas
lods
cmp
subl
xchg
jl
jle
and
mov
pushf
fisubl
mov
inc
stos
pop
jecxz,pt
repz
mov
mov
add
or
stc
sbb
mov
add
divl
and
mov
aas
sti
jbe
dec
adc
test
jmp
test
fwait
and
aaa
sub
std
pop
xchg
insl
and
mov
add
pop
sbb
adcl
xor
xor
push
add
pop
xchg
fwait
into
stc
outsl
inc
add
lret
fsubs
popa
pop
add
shll
add
inc
or
add
add
movd
mov
add
add
push
dec
sbb
add
add
ret
mov
push
sbb
jp
cmp
mov
sbb
add
add
add
rolb
and
cmc
sahf
rolb
test
data16
add
or
mov
fdivs
popf
inc
add
mov
add
add
pop
cmp
push
fld
sub
loope
add
arpl
mov
dec
in
push
add
ficoms
movsb
add
push
ljmp
cwtl
adc
add
mov
ret
sub
lret
or
dec
add
or
xor
jne
arpl
sub
dec
push
add
or
mov
add
lcall
adc
fmul
js
inc
add
mov
mov
add
add
xchg
movb
iret
xor
out
aam
fdiv
daa
fisubl
mov
test
push
add
mov
in
cld
fsubrs
pushf
jno
adc
and
mov
insb
mov
mov
rolb
mov
add
mov
xchg
add
test
loope
movb
mov
aaa
xor
sub
loope
pop
aaa
ja
dec
sub
add
push
pop
iret
nop
add
add
sbb
fs
or
add
pop
sti
loop
leave
fisttpl
fistps
sub
arpl
push
and
xchg
add
dec
and
xor
js
add
in
fadd
into
repnz
add
add
sahf
or
add
sti
or
rorl
mov
add
sbb
outsb
pop
or
xor
movsl
xor
push
push
add
add
js
jle
add
add
add
add
adc
jb
aad
or
std
xor
xorl
adc
std
jnp
xchg
push
mov
add
iret
cmpsb
add
add
lods
mov
cli
fidivl
sbb
sbb
into
ficoml
popf
pop
aad
push
xor
add
add
add
mov
add
daa
add
mov
fldl
add
iret
das
fldl
add
add
add
xlat
cmp
add
js
les
adc
and
mov
inc
mov
sbb
mov
insl
cmp
sub
or
mov
les
mov
and
mov
add
add
sub
mov
sbb
add
xchg
add
in
dec
or
insb
dec
imul
add
inc
loopne
pop
adc
in
int
in
les
xchg
aam
aam
sti
push
sbb
add
cmp
add
mov
jg
mov
add
mov
add
xor
aas
sub
add
pop
sbb
add
sti
adc
cmp
add
push
add
dec
inc
xchg
add
push
add
in
xchg
imul
and
add
into
sbb
pop
jo
clc
dec
rolb
cmc
movsl
call
cmpsb
add
add
sub
std
stos
mov
xor
mov
push
add
add
mov
add
mov
lcall
pop
jge
enter
dec
movl
add
fstl
stc
pop
sub
inc
xor
push
rorl
add
loope
into
pop
les
rolb
add
adc
inc
add
mov
push
xor
arpl
js
lcall
add
in
and
sahf
fwait
dec
and
cld
cmp
or
jbe
pop
in
popa
into
add
push
add
fpatan
popf
testb
or
mov
ljmp
repz
add
jge
jb
lock
xor
xor
jo
jle
add
leave
addb
sbb
jg
lret
aaa
dec
loop
or
mov
add
pop
jge
jns
push
add
jne
add
cmpsb
add
sbb
fistpll
loope
pop
arpl
jnp
add
add
ja
add
cmpsl
out
fstpt
add
xchg
movsb
add
add
add
aas
cmp
rcll
push
push
cmp
sbb
add
add
clc
pop
add
mov
lock
fcmovnbe
in
lahf
faddl
scas
gs
lds
jmp
sbbl
ds
ljmp
lds
push
add
dec
sti
loopne
addb
hlt
add
push
sbb
cmp
mov
cmpsb
add
add
fsubrp
lock
ret
mov
add
sub
adc
xchg
test
data16
loop
lret
inc
add
sbb
sub
add
xchg
add
add
ret
dec
outsb
std
adc
mov
add
add
add
sbb
enter
fsubrs
ret
push
test
mov
sbb
add
orl
movsl
jns
push
add
dec
mov
add
push
add
addb
push
sahf
out
push
add
xchg
or
sbb
jbe
or
xchg
add
cmp
jmp
inc
add
mov
add
addl
add
add
aad
stc
sbb
xchg
sar
mov
add
and
ret
mov
cmp
xchg
add
les
add
jmp
add
shrl
rcl
xchg
cmp
aaa
dec
xor
mov
scas
test
fidivrs
pop
pop
ljmp
cmp
mov
ret
js
aam
push
add
add
mov
cld
subl
xlat
lret
out
mov
cmp
or
incb
addb
add
add
dec
push
popf
sbb
dec
adc
or
pop
inc
add
das
scas
in
or
add
pop
aam
pop
add
mov
xchg
add
jo
lods
jmp
fnstsw
sub
pop
push
add
add
add
add
add
jl
pop
mov
xchg
add
add
mov
add
mov
xchg
lahf
push
dec
mov
mov
mov
fwait
popf
mov
push
inc
add
dec
xchg
jnp
mov
ret
add
add
testb
add
repz
loopne
xlat
or
cli
addr16
sbb
xchg
pop
sub
sbb
daa
mov
adc
adc
mov
mov
dec
adc
add
sbb
inc
add
popa
dec
call
loop
add
sti
add
mov
add
add
mov
pop
incl
add
repnz
xlat
jmp
mov
pop
jl
adc
dec
mov
out
movsl
scas
add
add
mov
in
ret
pop
icebp
pop
scas
in
or
add
ds
mov
dec
xchg
sub
repz
add
gs
xchg
in
cmp
add
add
repnz
add
lahf
adc
leave
mov
add
xchg
mov
or
lods
push
add
mull
push
add
add
cmp
push
add
add
cmp
mov
jae
add
xchg
or
out
push
add
add
movsl
add
dec
jbe
xchg
add
rolb
pop
mov
add
sub
add
mov
push
jns
add
add
add
dec
pushf
lods
sub
add
jno
sub
xlat
add
out
ret
add
add
xor
nop
add
add
arpl
sub
lret
adc
lahf
nop
add
inc
mov
jnp
add
in
lods
test
es
cmp
jl
xor
shl
add
add
xor
mov
add
sbb
mov
test
sub
addb
dec
adc
rolb
mov
add
movsl
add
add
inc
add
and
test
mov
add
stc
mov
push
jl
mov
inc
add
mov
das
std
aaa
sbb
pop
sbb
mov
int3
jle
dec
jne
pop
sub
repz
out
dec
or
cltd
cwtl
rorl
mov
dec
jmp
add
imul
fcoms
add
xor
pop
sbbl
cs
addl
add
add
sbb
addb
out
add
dec
jbe
sbb
aas
les
sub
mov
push
push
mov
add
push
add
frstor
cmc
insb
mov
cmc
daa
dec
fwait
jbe
rcrl
popa
mov
ds
cld
out
add
sbb
add
add
xchg
jne
addb
add
add
mov
cld
jg
add
ja
xor
add
arpl
lret
ljmp
test
inc
in
inc
add
sub
add
idiv
inc
add
jbe
push
lret
dec
mov
inc
add
inc
jmp
add
inc
cs
mov
xchg
add
dec
dec
lahf
repnz
and
pop
pop
dec
xchg
jbe
mov
stos
mov
lock
mov
mov
int
add
mov
mov
movsl
mov
xor
stos
int
push
jne
sbb
insb
mov
hlt
add
add
mov
and
or
xor
sahf
fisubrs
add
cwtl
mov
std
fidivrl
add
ret
cmpsl
ljmp
add
xor
test
mov
jbe
sub
add
adc
mov
add
lret
outsl
leave
mov
mov
add
or
add
loopne
jnp
add
mov
bound
mov
add
mov
repz
xchg
aam
insl
fdivp
add
mov
mov
mov
cmp
jns
add
jl
mov
xchg
ja
add
add
mov
pushf
mov
mov
add
mov
jp
inc
out
push
sub
add
mov
cwtl
dec
xchg
loope
push
add
bound
mov
sbb
add
push
insb
outsb
enter
jae
pop
rcrl
mov
jb
stos
adc
lret
push
lret
push
ljmp
mov
add
decb
add
hlt
add
add
out
add
mov
push
add
add
mov
inc
mov
mov
add
sub
jmp
add
or
repnz
add
das
aam
cmpsl
mov
add
add
nop
add
fisubs
xchg
xor
add
jbe
aaa
cmp
and
mov
push
cld
pop
xor
xor
test
jne
ds
add
mov
sbbl
in
dec
sub
pop
out
mov
adc
ret
test
pop
mov
add
fildll
pop
mov
inc
add
cld
aam
clc
mov
in
out
mov
in
lea
xorl
cmpsl
add
repnz
fsts
dec
or
inc
add
add
mov
or
jno
dec
icebp
jo
cltd
imul
cmp
add
add
add
aas
outsb
std
dec
sbb
jle
add
mov
lcall
cmp
in
aaa
lahf
adc
add
fcmove
push
add
push
add
movsl
jbe
sub
adc
int3
mov
push
and
mov
mov
or
clc
in
rolb
jge
add
add
mov
loopne
mov
cld
lret
push
pop
into
test
and
mov
stos
sub
pop
jbe
pop
jl
mov
push
add
dec
xor
xchg
add
int3
cmp
add
mov
cli
sub
pop
ja,pt
jecxz
pop
outsl
call
add
push
add
mov
add
test
rolb
or
add
ljmp
cmp
ja
cmpsb
add
add
ret
les
inc
test
push
and
daa
rolb
pushf
or
mov
xlat
dec
inc
add
testb
mov
sbb
aaa
mov
cmp
int
call
add
adcl
aas
stc
lret
xor
dec
imul
add
cmp
add
mov
add
pop
or
dec
and
pop
sti
xor
out
add
add
mov
std
shll
add
mov
jmp
mov
add
inc
add
mov
xor
add
add
cmp
add
outsb
sub
add
mov
add
sbb
push
sti
or
add
push
add
rolb
jae
loope
test
cmp
add
adc
pop
ss
add
add
add
stos
testb
add
add
mov
shll
or
dec
imul
rolb
lods
mov
xchg
inc
add
add
add
xor
push
add
mov
loope
cmp
addb
jo
mov
pop
adc
and
or
jp
add
mov
mov
aas
jne
mov
add
pop
enter
sub
jmp
jmp
add
and
mov
add
mov
xchg
inc
add
scas
stos
sbb
dec
rolb
aaa
add
sub
into
jg
add
insb
inc
pusha
add
add
push
add
xor
decb
sbb
add
shld
add
add
mov
out
addb
aam
lea
push
add
push
add
add
mov
lock
sbb
mov
jg
add
mov
cmpsb
add
add
stos
data16
mov
adc
fsubl
loop
add
pop
adc
adc
mov
fdivrl
add
adc
xor
xchg
in
pop
inc
data16
xchg
push
fisttpl
fimuls
push
out
cli
stos
lret
aas
sahf
cmp
mov
stc
std
dec
adc
out
and
dec
jmp
or
add
push
mov
pop
rcrl
add
mov
ja
pop
or
das
sub
sarl
push
adc
add
aas
mov
sub
pop
push
sbb
dec
movsl
jns
jo
xchg
add
and
mov
add
add
out
or
ds
das
imul
sbb
pop
pop
fisttpll
add
lock
add
adc
testb
sti
test
add
inc
and
mov
cmc
cmp
add
adc
add
cld
sub
fbstp
push
lret
adc
icebp
cltd
js
add
add
add
mov
inc
add
aam
jmp
outsb
movsb
add
hlt
add
addb
test
add
dec
and
sbb
add
add
add
insl
inc
add
add
lret
mov
add
add
add
add
lret
adc
sbb
lahf
mov
mov
adc
fstp
mov
mov
ljmp
pop
aad
mov
xchg
xor
pop
lods
inc
repnz
add
inc
addb
scas
les
loope
or
stos
adcl
clc
inc
add
repz
pop
sub
dec
popf
inc
add
imul
fxam
outsl
leave
in
inc
add
cmp
cmp
mov
lock
mov
mov
sahf
fstps
ret
jno
movb
add
testl
lock
movsl
jg
jmp
xchg
add
and
cmpsb
add
add
lea
or
sub
outsb
push
cli
inc
aas
inc
subl
push
add
mov
stos
jbe
jmp
sub
into
mov
jp
incb
sub
add
scas
jge
pop
jmp
adc
cmp
dec
or
add
daa
lods
lret
rolb
shl
cld
ret
popa
das
mov
bound
mov
add
add
mov
mov
sti
dec
mov
test
dec
xor
pushf
xchg
sub
bound
mov
add
add
jne
mov
insb
dec
add
cmp
arpl
mov
testb
les
sti
jg
inc
xor
jg
add
scas
aas
or
push
sbb
jnp
sub
popa
inc
adc
into
cld
mov
mov
inc
mov
add
add
test
cmp
lock
sbb
add
fmull
loopne
fmuls
mov
insb
call
fbstp
inc
add
mov
ret
lahf
movsl
dec
sbb
jl
enter
dec
push
repz
rorl
fbld
mov
xchg
xchg
add
add
ljmp
add
push
adc
stc
lock
add
add
or
mov
dec
mov
lret
add
enter
add
xchg
hlt
add
fmull
filds
outsl
jne
shll
sub
add
mov
inc
add
mov
mov
push
or
imul
filds
xchg
sbb
xchg
add
andl
add
push
dec
jns
xor
lret
add
out
shll
stos
lcall
add
xchg
int
mov
icebp
push
push
add
in
push
rolb
xchg
add
mov
addb
dec
adc
test
or
stos
adc
mov
addb
dec
dec
xor
add
add
xchg
add
popa
lods
iret
loop
outsl
sub
iret
out
jne
add
add
add
fisubl
jo
insl
pop
jmp
test
add
add
add
mov
add
adc
mov
sbb
add
into
cld
fnstsw
xor
jb
sbb
add
add
adc
fwait
cmp
shrl
add
add
popf
xchg
sbb
dec
pop
call
add
add
add
xor
or
stc
xchg
add
add
out
inc
jne
pop
push
fiadds
add
daa
add
xchg
or
sbb
mov
int3
ret
sub
xchg
subl
adc
xchg
add
add
mov
push
sbb
add
ret
std
sbb
lock
nop
add
arpl
jb
movsb
add
push
add
add
fmull
and
mov
stos
stc
insl
or
jb
lods
jecxz
add
jno
imull
movsb
add
and
add
jmp
add
add
add
inc
add
add
push
inc
add
adc
jmp
add
add
lock
pop
pop
sub
add
xor
xor
add
cmp
mov
jae
push
fldenv
dec
add
sbb
out
pop
mov
xlat
jle
jae
inc
and
fwait
out
sbb
push
add
jae
add
fimuls
jle
mov
stc
fnsave
pop
jmp
out
mov
add
add
mov
das
sbb
add
add
inc
and
mov
lods
xlat
add
icebp
flds
xor
addb
mov
pusha
add
xchg
add
add
ljmp
adc
movd
add
add
push
add
insb
les
shrl
add
cmp
int
add
push
imul
add
push
jae
iret
mov
add
mov
cmp
add
mov
pop
insb
mov
mov
add
jnp
cli
jl
orl
add
push
add
mov
gs
add
scas
mov
adc
mov
add
dec
xchg
mov
add
mov
lea
xchg
mov
test
mov
hlt
add
cmp
mov
jl
xchg
and
mov
inc
add
or
mov
mov
clc
lret
imul
add
nop
add
jnp
add
or
sub
push
xor
add
shl
pushf
cmp
cmpsl
mov
xchg
cmpsb
add
loope
les
hlt
add
dec
sahf
sbb
pop
adc
ds
rolb
and
cmpsl
xlat
dec
push
cmpsl
ljmp
cmp
leave
or
dec
mov
imul
mov
add
and
mov
dec
and
xlat
dec
lds
pushf
data16
aam
xorl
lods
ret
push
add
dec
fdivrl
mov
add
add
mov
add
stos
push
inc
add
and
add
mov
add
test
cmp
addb
sub
push
mov
or
push
loopne
sti
inc
rcrl
xor
sti
and
mov
rcrl
fstl
add
add
add
fwait
mov
xor
add
repz
sub
add
dec
push
add
sub
xor
scas
xor
mov
pop
pop
xchg
mov
add
lcall
add
stos
call
mov
add
mov
add
mov
inc
add
jmp
xchg
adc
and
mov
add
add
add
popa
dec
cmp
or
mov
fisubl
push
pop
jns
dec
out
js
adc
push
stos
unpcklps
addr16
cwtl
adc
aas
mov
mov
add
add
sub
lcall
into
mov
dec
sub
add
sub
sub
add
add
fisubs
mov
mov
and
addb
mov
hlt
add
or
mov
add
mov
ret
cltd
lods
push
add
out
jne
add
test
jecxz
xchg
xor
addb
outsl
adc
add
add
in
loop
mov
lahf
or
pop
inc
add
add
add
mull
out
inc
add
pop
popa
fcmovnbe
fsts
mov
and
or
nop
add
inc
mov
pop
mov
sub
roll
pop
dec
add
out
mov
add
lods
cmp
mov
and
cli
sub
add
iret
add
add
add
add
add
lret
into
add
mov
pop
imul
add
xor
add
les
cmpsl
sbb
cltd
outsl
lds
cmp
leave
xchg
add
jle
xchg
add
add
add
add
xor
pop
mov
xor
call
lcall
mov
mov
add
add
add
add
mov
add
add
cltd
adc
dec
inc
add
bound
mov
add
inc
fistl
add
add
jbe
ja
clc
sub
adc
pop
push
movb
adc
add
fdivl
lret
lcall
lret
je
subl
scas
cmpsl
icebp
movsb
add
lret
push
fcoms
sti
push
add
inc
add
add
addb
push
mov
cmp
ficompl
xor
push
add
fdivrs
inc
add
addb
stos
inc
addb
add
popf
cmp
adc
call
fs
enter
sbb
xor
aaa
cmp
popf
push
add
aad
and
mov
or
cmpsl
xchg
int
add
add
aaa
rolb
mov
jecxz
adc
pushf
dec
addb
rolb
stc
imul
lds
ja
fists
jnp
add
lds
add
sub
add
add
test
or
xor
sub
insl
push
test
mov
push
add
add
push
pop
stos
ret
enter
add
add
push
test
cmp
sbb
add
add
add
addr16
mov
lods
popa
mov
mov
xor
ds
jbe
repnz
jg
add
out
pop
dec
inc
add
add
adc
mov
mov
fwait
lret
or
movsb
add
push
add
addb
add
add
fwait
out
sub
ds
ret
lock
mov
sbb
insb
daa
test
cmp
pop
iret
sub
out
cmpsb
add
add
ds
loop
mov
push
add
add
cmpsl
bound
mov
or
pop
sub
jle
das
push
add
add
ret
adc
movb
add
pop
xchg
sbb
inc
add
arpl
adc
icebp
jmp
add
add
int3
arpl
fwait
rcll
cs
arpl
fcomps
add
dec
mov
pusha
add
push
add
add
js
jb
mov
insl
inc
add
sbb
add
jne
xchg
add
add
addb
bound
mov
out
int
in
and
mov
test
lock
popa
push
add
add
add
add
mov
add
bound
mov
scas
ret
cltd
cmp
in
push
add
xchg
movb
add
aam
pop
dec
lret
adc
incl
add
out
enter
jmp
add
movl
mov
cli
sahf
xor
arpl
pop
xlat
imul
mov
std
or
mov
sub
lea
sub
mov
out
add
notl
dec
xchg
mov
adc
add
and
mov
add
fcmovb
add
fldcw
and
add
addr16
add
pop
xor
sbb
adc
xor
lret
add
mov
and
pop
lds
mov
xchg
add
bound
mov
add
repz
inc
mov
js
xchg
enter
add
and
test
mov
insb
aad
push
add
negl
add
les
jnp
add
mov
sub
pslld
inc
add
xchg
add
cmp
enter
jns
add
in
cs
add
add
addr16
data16
add
add
add
and
mov
pop
loopne
loop
xchg
mov
das
adc
push
add
mov
and
mov
stos
cld
cmpsl
sub
push
or
pop
pop
inc
add
adc
adc
add
mov
mov
push
aam
out
in
in
jp
add
sbb
mov
mov
pushf
flds
add
add
fstpt
arpl
xchg
add
push
test
dec
jle
inc
add
xlat
pop
jb
or
loope
adc
in
pop
mov
pop
pusha
add
mov
adc
push
add
or
pop
or
inc
add
add
add
out
push
mov
rolb
xchg
stos
jp
xchg
push
add
or
add
xor
aas
push
outsl
in
xchg
add
stos
clc
fdivr
pusha
add
inc
gs
xor
pop
mov
push
add
call
xchg
or
movb
xchg
into
imul
and
mov
cmp
add
lea
jp
xchg
add
add
loope
out
shll
adc
ret
pop
add
mov
popa
and
add
inc
push
add
dec
mov
popa
mov
test
mov
add
xchg
addr16
movb
sub
lret
xor
xchg
add
loopne
mov
jmp
addb
and
mov
ffreep
dec
stos
in
mov
add
test
pushf
sbb
add
jo
cli
xor
sbb
jle
add
gs
call
add
test
fnstcw
enter
inc
add
rolb
dec
pop
movsl
mov
iret
jbe
inc
add
mov
xor
sub
cli
testb
test
arpl
inc
add
xor
mov
das
lods
add
mov
push
in
ss
sub
int3
pop
inc
add
add
les
orl
add
inc
add
cmpsl
add
add
mov
push
add
addb
and
mov
mov
adc
nop
add
scas
cmp
loopne
lods
cld
cmp
sub
inc
add
outsl
fdivl
add
sub
pop
inc
xlat
adc
jbe
lret
add
add
push
add
add
ja
popa
add
test
popa
sti
in
rolb
movsb
add
cmp
jno
push
leave
or
movb
inc
int3
scas
sarl
cmp
add
add
fcmovnu
push
add
add
mov
mov
dec
cmc
add
add
jmp
mov
push
insl
mov
add
mov
push
add
insb
inc
add
inc
add
add
add
mov
add
pop
push
add
jns
mov
js
pop
xor
imul
enter
add
sti
xor
push
add
dec
in
inc
add
add
add
cmp
add
push
add
mov
test
add
add
push
mov
out
pop
ret
out
iret
out
mov
and
add
cmovne
lret
add
repz
mov
add
add
mov
inc
or
jbe
mov
cmp
add
scas
addb
mov
add
add
add
in
pop
insl
pop
adc
xor
int3
popa
mov
add
push
pusha
add
dec
ja
inc
in
sahf
test
jae
xor
inc
xchg
lea
cmp
lahf
xchg
add
add
scas
jl
cmc
xor
leave
pop
cmp
mov
cmp
jae
movsl
adc
stc
xchg
lock
mov
add
dec
jne
dec
subl
shll
cmp
or
int
rolb
outsb
insb
pop
stos
and
mov
inc
add
lea
sbb
ss
add
cmpsb
add
xor
shll
inc
xor
mov
and
cmpsl
add
pop
mov
add
stos
stos
push
add
add
mov
js
add
jp
enter
push
add
out
mov
sti
lds
add
stos
lock
mov
push
add
in
mov
or
rolb
add
push
addb
or
add
daa
inc
cmp
and
mov
sbb
lea
cs
add
and
outsl
push
pop
mov
outsb
bound
mov
sub
add
mov
xrelease
sub
inc
add
add
fistpl
mov
aas
inc
add
jne
scas
daa
jg
jmp
jb
push
test
push
add
add
add
mov
sub
add
fdivrl
xchg
add
add
jl
sub
sub
mov
xlat
jno
push
jne
add
add
add
xor
jno
add
inc
or
aad
inc
pop
ljmp
mov
lds
das
push
jbe
aas
xchg
add
add
push
add
inc
push
jbe
adc
insb
push
add
leave
push
add
and
add
test
add
push
jae
fdivr
shrl
push
add
add
push
adc
insb
fidivrs
js
fcmovnb
add
lods
aas
in
mov
push
add
add
push
lods
fcompl
push
add
adc
add
xchg
add
push
or
hlt
add
add
add
mov
mov
lret
ja
fldt
rolb
sbb
cmp
xor
mov
add
jp
jb
out
dec
and
pop
mov
dec
mov
and
mov
in
or
pop
aad
incl
add
add
jo
out
pusha
add
inc
add
add
add
xchg
inc
decl
push
jp
movsb
add
mov
mov
bound
mov
add
add
and
and
call
sbb
mov
imul
arpl
xchg
add
mov
mov
jge
jle
mov
addb
add
add
int
inc
rolb
or
mov
aad
push
sbb
xchg
in
pop
xor
xchg
enter
lods
jne
add
dec
nop
add
cld
repnz
arpl
into
insl
mov
add
jnp
fcoml
cmpsl
iret
cmpsl
int
fwait
in
subl
push
add
mov
into
xchg
bswap
fnstcw
sub
add
push
add
mov
andl
xchg
je
adc
fcomps
or
add
les
pop
cmp
mov
aaa
push
mov
jnp
add
add
push
add
add
xchg
add
add
xchg
add
mov
adc
in
outsb
pop
push
add
fptan
add
sahf
cmp
inc
add
mov
adc
dec
push
add
and
push
add
pop
or
sub
xlat
pop
jae
loopne
dec
and
aas
test
add
xchg
add
add
cltd
xor
or
push
add
nop
add
mov
pop
mov
lods
popa
add
mov
add
test
add
fdiv
add
or
mov
add
add
cmp
bound
mov
ljmp
push
add
outsb
fxch
lret
cmc
or
add
push
add
mov
lods
loop
lods
pop
cmpsb
add
movsl
lret
pop
imul
mov
dec
jg
or
add
add
add
or
int
or
add
push
add
movsl
pop
cwtl
adc
inc
rolb
add
stos
icebp
mov
add
push
xchg
add
hlt
add
leave
fcom
add
sbb
lret
add
in
pop
gs
cmc
in
add
and
jle
pushf
cmp
xor
add
add
ja
mov
push
add
or
add
mov
addb
add
mov
add
mov
mov
add
lret
ds
jle
add
pop
adc
or
lock
add
push
mov
add
add
sbb
add
int
add
cmpsb
add
call
ja
mov
cli
sub
lret
lods
stos
and
mov
cld
cwtl
add
cld
ds
sbb
push
add
add
mov
movsl
pushf
add
insl
pop
xor
add
je
sar
clc
jnp
gs
pop
sbb
jmp
popf
xchg
add
mov
push
add
add
add
add
enter
sbb
aaa
pop
cmp
cmp
imul
add
pop
mov
add
rcll
xor
add
out
add
or
add
and
repnz
add
add
ds
inc
rolb
or
cmp
add
add
xchg
adc
aas
mov
push
add
and
andl
or
cmp
inc
icebp
dec
rolb
add
add
add
add
xor
das
mov
loop
adc
sbb
lahf
push
add
fwait
dec
scas
lret
add
fwait
shrl
add
add
add
lcall
mov
mov
add
adc
addb
addb
add
rcll
jnp
call
sbb
add
add
mov
loop
mov
add
sub
or
push
add
repz
addr16
add
lods
cmp
add
inc
add
aaa
outsl
or
jle
arpl
add
call
lods
iret
aas
ja
xor
es
add
add
mov
stc
das
icebp
add
mov
movb
and
sub
in
add
add
push
add
pushf
out
add
xor
mov
sub
mov
aad
mov
add
mov
add
mov
pushf
jecxz,pn
or
adc
add
add
add
or
adc
add
mov
or
add
add
mov
testb
add
mov
out
lock
pop
jb
inc
movb
jmp
add
add
add
mov
xchg
repz
jbe
xchg
insl
imul
popf
lahf
fstps
jo
adc
imul
int3
jo
out
cli
movsl
std
cltd
jmp
xchg
add
seta
std
adcl
loope
add
pop
add
daa
pop
sbb
aam
das
or
or
adc
out
inc
push
add
aad
xchg
add
cmpsb
add
clc
icebp
cmp
add
add
inc
add
dec
lea
ficoms
mov
jmp
aam
and
sbb
fwait
jnp
jle
add
add
jno
add
shll
add
fwait
pop
xchg
mov
cmp
bound
mov
cmpsb
add
add
jne
jnp
rcll
ds
inc
add
mov
lods
jg
int
insl
pop
inc
pop
ja
add
mov
jb
adc
sbb
push
add
add
pop
xchg
mov
add
add
lahf
in
mov
gs
rolb
cmpsb
add
rdtsc
enter
dec
out
ret
sbb
mov
xor
add
ja
sbb
inc
add
pop
push
cmp
or
cwtl
inc
lcall
sarl
push
add
pusha
add
scas
xchg
add
xor
add
add
aad
scas
lock
adc
rolb
sbb
add
add
add
or
in
adc
xchg
pop
dec
sub
add
add
sub
nop
add
in
loopne,pn
mov
jb
xchg
rolb
adc
mov
rolb
jge
add
outsb
and
popa
lock
rcll
add
add
add
test
dec
or
scas
push
jne
adc
adc
repnz
mov
pushf
mov
mov
adc
cmpsb
add
add
sub
cmp
add
add
or
jb
jl
pop
cmp
cmp
movb
das
fbstp
cs
pop
adc
ja
adc
rcr
push
add
xor
and
mov
scas
enter
add
cmp
psubsw
add
add
lret
dec
xchg
add
jb
adc
add
dec
xchg
xchg
mov
mov
add
pop
xchg
jbe
add
fwait
les
adc
cmp
ljmp
xchg
cmc
push
dec
cmp
lea
arpl
push
add
ret
push
add
in
inc
add
add
inc
sahf
add
mov
add
lock
jmp
nop
add
enter
adc
jg
mov
dec
or
add
xchg
rolb
rcrl
add
lods
test
add
push
add
mov
jnp
mov
call
gs
mov
add
sub
adc
fistl
add
push
add
add
adc
dec
cmp
mov
mov
rolb
in
xchg
int3
add
adc
rolb
scas
xchg
in
jne
cli
jl
cmp
add
rolb
pop
fcmovnb
add
lret
add
js
add
aad
addb
add
add
add
fwait
pop
inc
add
mov
xor
add
add
add
mov
jp
pop
shl
add
add
and
mov
cmp
add
add
test
mov
dec
lahf
aam
cmp
add
add
pop
adc
std
mov
neg
dec
xor
addb
mov
movb
add
cmp
jnp
add
inc
adc
add
dec
inc
add
push
mov
add
repnz
pop
mov
or
rcll
mov
mov
dec
rcr
mov
dec
testl
add
mov
mov
outsl
jmp
add
mov
jo
scas
jmp
cmp
push
pop
inc
add
stc
push
add
pop
lret
into
data16
mov
aaa
cli
mov
mov
jge
add
add
sub
add
test
nop
add
add
push
sti
inc
xchg
ror
enter
in
add
jl
inc
add
rolb
inc
nop
add
xor
movsl
add
out
xor
pop
cmp
lods
or
add
insb
jae
jle
daa
loopne
jns
or
shll
mov
in
lret
rcl
add
add
add
in
out
push
inc
add
ss
push
add
arpl
add
ds
adc
add
inc
into
testb
add
add
add
imul
add
std
push
mov
insl
adc
cld
and
push
add
lock
push
add
add
add
mov
lret
add
int
sbb
test
dec
enter
cltd
mov
xor
pop
xchg
add
out
add
sub
pop
aas
cmp
js
popf
outsl
jne
fists
bound
mov
xchg
xchg
add
add
mov
add
testl
popf
ret
mov
add
pop
push
add
mov
add
mov
pop
adc
sub
aas
imul
popf
outsb
adc
int
push
add
xor
fucom
lock
out
and
mov
mov
mov
loopne
jg
jge
add
mov
jno
mov
dec
mov
insb
add
pop
jmp
pop
jnp
test
add
mov
add
outsl
sub
push
add
ljmp
and
mov
pop
xor
xchg
dec
jbe
ret
add
movsl
mov
add
mov
mov
insb
outsl
std
mov
test
addb
and
jbe
and
mov
mov
adcl
inc
add
or
call
add
jbe
rolb
add
push
add
subl
add
add
stos
xchg
in
orl
lahf
icebp
sbb
add
and
mov
jo
fistl
add
xchg
cltd
dec
xor
and
dec
dec
addb
mov
add
outsb
cmp
jno
add
and
mov
repz
stos
ficompl
add
add
add
loope
add
mov
adc
dec
add
add
lahf
push
cli
fadds
add
add
dec
push
add
add
add
xchg
dec
and
mov
mov
int3
jle
add
adcl
push
add
add
cmc
push
add
lods
dec
stos
jnp
out
add
jnp
in
sbb
inc
add
add
add
addr16
add
jmp
in
insl
inc
add
add
jecxz
jbe
mov
imul
add
add
mov
push
decl
add
adc
fwait
roll
add
dec
jne
pop
cmp
push
add
push
mov
sar
add
add
repz
sbbl
add
xchg
add
je
or
push
dec
push
mov
fimuls
rorl
stos
loop
mov
nop
add
pop
out
pop
mov
cltd
lods
mov
je
sub
fnstsw
loop
mov
add
mov
sub
mov
push
add
add
push
arpl
mov
lcall
push
mov
cld
fnstsw
dec
jle
add
add
mov
into
cmpsb
add
jle
shll
add
stc
bound
mov
add
add
mov
repnz
add
add
jmp
lahf
das
cli
sbb
fistpl
and
mov
cmpsb
add
pop
inc
add
jle
add
movb
inc
cltd
lret
pushf
inc
mov
mov
xchg
xchg
addb
out
test
pop
iret
test
mov
jb
push
leave
mov
mov
mov
mov
fistps
add
dec
push
add
in
cmp
sbb
ficoml
mov
jmp
add
mov
add
stc
adc
mov
and
mov
add
andl
mov
rolb
adc
add
lret
arpl
dec
addb
add
add
add
add
lea
add
rcrl
or
mov
and
mov
add
mov
mov
fwait
and
add
xor
int3
in
dec
dec
cmp
ret
int
push
mov
insl
imul
xor
pop
sub
xchg
out
or
dec
rolb
addb
outsl
xor
inc
jge
and
pop
in
jns
inc
outsl
add
cmp
add
add
ds
jno
cmp
add
add
pop
stos
addb
movsl
pop
icebp
push
cmpsb
add
add
mov
add
cltd
lahf
pop
mov
lods
imul
insb
outsl
testb
dec
cmp
jns
jg
push
add
cltd
pusha
add
add
sbb
leave
aas
xchg
add
loope
add
ret
mov
mov
add
cmp
frstor
add
pop
or
mov
adc
push
aad
lock
outsb
rolb
test
icebp
fidivrl
adc
xchg
add
stos
lret
movsl
arpl
inc
add
mov
popa
movb
sub
add
int
les
into
mov
add
dec
test
cmp
add
mov
add
add
pop
popf
xor
pop
in
dec
dec
dec
xlat
push
cmp
cmp
xchg
mov
lret
inc
call
into
sub
test
aad
push
add
aam
push
add
mov
repz
bound
mov
add
dec
jecxz
add
mov
mov
and
push
add
add
add
add
add
pop
adc
inc
add
fstpt
test
decl
dec
mov
push
add
dec
fidivrl
lods
aas
arpl
add
stos
aaa
adc
mov
leave
dec
mov
pop
and
int3
clc
ret
pop
rolb
mov
enter
adc
inc
enter
push
add
add
lods
cmp
cmc
jae
xchg
sub
dec
jge
add
mov
xchg
add
add
xchg
and
in
add
mov
lock
stos
xlat
xchg
adc
mov
pop
and
add
add
sub
pop
hlt
add
add
mov
dec
sub
add
test
add
insb
push
lods
mov
and
dec
cmpsb
add
xor
add
add
mov
scas
or
add
push
add
cmp
xor
jmp
test
and
add
pop
cltd
mov
xorl
cld
ret
dec
outsb
psraw
dec
imul
into
xchg
add
lock
sarl
add
insb
cmp
movb
add
or
repnz
sbb
pop
mov
push
add
mov
xor
sub
xchg
jecxz
add
test
nop
add
nop
add
pop
lea
mov
mov
xchg
mov
fimull
mov
adc
cmp
xchg
add
push
mov
pop
hlt
add
add
aaa
push
loope
pop
mov
cmp
out
dec
cltd
jno
pushf
xor
mov
and
cmpsb
add
lods
push
add
mov
xor
add
mov
loop
cli
xlat
ljmp
xchg
stos
outsb
testb
push
add
add
cmp
xor
jge
add
ret
inc
jo
lcall
pop
fnstcw
sub
cld
das
iret
mov
xchg
push
imul
mov
push
lods
mov
test
dec
fldl
nop
add
insl
dec
fmuls
add
inc
push
add
add
add
xchg
add
push
add
frstor
sbb
add
mov
data16
or
add
mov
fsubrp
pusha
add
fildll
je
or
add
mov
cld
adc
sahf
push
imull
loopne
sub
fwait
cltd
sub
mov
mov
inc
cmp
inc
adc
rorl
add
xor
jb
fdiv
loope
pop
inc
add
call
pop
loope
push
push
imul
scas
sti
jmp
add
in
mov
mov
popa
test
aad
add
dec
js
add
add
scas
mov
ficomps
add
add
cmp
add
mov
and
mov
daa
popa
loopne
and
mov
mov
sub
add
cld
cmp
jmp
sbb
add
xor
out
and
mov
in
add
mov
add
mov
add
mov
fmuls
mov
cmc
dec
and
les
cltd
jae
add
mov
add
and
mov
lcall
scas
inc
add
dec
inc
aaa
adc
xor
xlat
mov
add
dec
mov
add
mov
int3
stc
cmp
rolb
mov
dec
mov
loop
xchg
sub
ljmp
add
gs
int
inc
inc
pushf
lods
xor
pop
lds
add
leave
sub
mov
add
pop
xchg
cld
pop
xchg
add
enter
mov
mov
add
ret
es
add
ljmp
stos
sbb
out
dec
xchg
add
add
add
xor
add
add
aad
outsb
mov
add
pop
lret
add
daa
out
imul
jbe
fld
mov
mov
in
out
cmp
add
mov
sub
cmp
add
test
and
add
push
add
add
rolb
aad
mov
xlat
mov
jle
add
cmp
add
mov
mov
push
add
mov
into
icebp
je
and
sbb
mov
sub
xchg
add
add
hlt
add
mov
add
icebp
inc
add
fs
data16
or
add
add
jmp
sub
mov
mov
lock
add
testb
add
int
pop
mov
ja
sbb
outsl
jno
add
jb
stc
push
add
stos
nop
add
rolb
addb
mov
mov
jo
add
js
add
iret
cwtl
pop
imul
lock
fsubrs
jne
mov
pop
movb
nop
add
cs
add
push
jae
int3
sub
add
pop
add
add
lods
add
mov
cmp
sti
inc
add
dec
int3
out
jo
or
inc
daa
jl
add
test
stc
ljmp
dec
xor
and
mov
jl
fldl
add
mov
insl
mov
hlt
add
pushl
std
mov
lock
mov
sub
sbb
push
add
add
ja
lock
lahf
sbb
xchg
add
add
add
pop
bound
mov
in
lahf
ljmp
mov
dec
jmp
push
lret
inc
add
or
outsl
cmp
insb
cld
cmpsb
add
add
daa
daa
movsb
add
add
jne
add
test
xor
add
push
add
add
gs
jecxz
dec
push
add
add
xor
adc
mov
movsl
cmp
add
mov
adc
cld
scas
imul
xchg
add
add
inc
sarl
jbe
enter
add
add
inc
add
fcompl
mov
movsl
lahf
xchg
add
pop
inc
add
add
add
xchg
add
loopne
sub
aad
add
fs
jl
add
test
rolb
out
inc
add
pop
xchg
mov
das
jmp
imul
add
add
add
sti
mov
sbb
sub
pop
pop
bound
mov
add
mov
dec
addb
cmp
shld
add
or
add
add
add
rolb
daa
in
pop
add
inc
add
cld
in
mov
sub
stos
xor
out
pop
mov
xchg
sub
add
int
jp
or
and
mov
add
add
mov
inc
jo
ljmp
add
add
setnp
push
mov
shrl
test
icebp
dec
push
add
in
add
add
add
scas
push
shll
add
inc
out
movb
dec
sti
cld
mov
adc
mov
testb
add
push
xor
fldt
push
movsb
add
dec
sti
or
ret
dec
sub
mov
scas
popa
jne
and
mov
add
cmpsb
add
fs
sub
xor
sub
sbb
ja
inc
pop
jno
inc
mov
add
mov
data16
sub
xor
imul
ret
ds
add
push
imul
repz
add
mov
pop
pop
and
xchg
mov
test
movb
add
sahf
jecxz
mov
add
xor
mov
cmc
xchg
mov
mov
lret
add
repz
add
xchg
out
dec
enter
lea
add
inc
mov
jmp
loope
push
add
add
add
mov
mov
add
leave
fiaddl
mov
add
mov
mov
add
add
inc
out
daa
gs
loope
add
add
mov
cmp
add
sub
add
imul
jne
mov
xchg
add
inc
add
jmp
mov
add
add
cltd
mov
and
add
outsb
sti
bound
mov
push
jecxz
sti
sbb
iret
clc
fsubrl
dec
mov
dec
add
mov
push
enter
add
adc
dec
aas
or
add
dec
mov
jb
jns
outsb
mov
add
mov
cmp
add
test
cmpsb
add
sbb
out
loope
in
lods
xchg
add
clc
das
xchg
rolb
addb
test
rolb
imul
add
mov
add
movb
push
lret
jle
jl
cmp
cmpsb
add
inc
stos
push
dec
jg
stc
push
add
add
fcmovnbe
ficoml
bound
mov
fistps
lods
pop
lods
pop
faddl
cltd
jbe
pop
pop
inc
push
pop
inc
add
xchg
mov
cmp
sbb
outsb
stc
push
inc
add
ret
sbb
jbe
and
rolb
fwait
add
dec
int
sti
xor
and
vmwrite
imul
mov
inc
add
fwait
roll
add
fwait
inc
fidivl
icebp
add
repz
jbe
pop
scas
pushf
add
add
pop
mov
xchg
ljmp
add
add
add
add
add
jo
stc
sub
jns
repnz
add
dec
into
mov
es
rolb
mov
cwtl
loope
add
jbe
xor
inc
add
call
sub
cmpsb
add
add
ret
add
add
xchg
dec
adc
add
add
int
mov
movb
or
stos
fistpll
in
lods
mov
add
add
push
out
pop
cmpsb
add
mov
stos
xchg
fiaddl
mov
or
add
test
rolb
addb
std
xor
jmp
jnp
lret
fxch
dec
xor
daa
dec
loopne
in
lret
je
add
mov
mov
add
add
loope
add
mov
sti
leave
test
insl
shll
add
and
mov
pop
popf
movsb
add
push
add
dec
inc
adc
adc
orl
add
mov
mov
stos
ss
mov
daa
das
rolb
daa
mov
push
add
jno
incb
das
aad
add
add
mov
add
xlat
add
or
or
add
ret
pusha
add
add
iret
lock
inc
add
pop
and
mov
repnz
addr16
movb
movsb
add
add
aad
add
mov
lock
mov
test
sub
xchg
push
add
push
add
lock
add
jg
inc
and
mov
fstp
dec
in
xor
mov
mov
add
xchg
scas
sub
add
fildll
cltd
dec
mov
add
sub
mov
cmp
mov
pushf
pop
xor
xchg
push
jnp
add
mov
add
fs
lods
xor
sbb
inc
insl
cwtl
push
add
add
add
jno
add
sbb
addb
mov
fists
test
sbb
xchg
add
std
pop
mov
imul
data16
fidivl
adc
mov
dec
pop
loopne
dec
fs
dec
fidivs
lods
divl
add
jecxz
inc
add
add
fnstenv
xlat
out
faddp
add
lods
add
scas
push
mov
add
sub
mov
add
mov
add
cmp
add
inc
pop
insl
call
add
into
mov
pusha
add
jl
pop
out
jg
and
mov
add
add
mov
xor
jmp
mov
sti
subl
add
je
and
cld
mov
mov
mov
mov
add
cmpl
pop
or
scas
mov
mov
ret
scas
into
mov
mov
dec
cli
fistps
and
mov
pop
add
inc
add
add
dec
pop
in
sbb
add
add
mov
add
xchg
add
loope
fcmovnbe
xchg
inc
cvtps2pd
outsl
sub
add
lods
addb
out
jno
imul
andl
mov
data16
add
in
mov
dec
and
adc
add
repnz
add
mov
pusha
add
adc
cmpsb
add
mov
add
inc
add
mov
fstps
cld
inc
add
cltd
loopne
sub
and
sbb
mov
add
rolb
ret
and
adc
push
mov
icebp
mov
pop
push
add
add
pop
and
cmp
dec
adc
mov
dec
adc
cmp
movsb
add
add
jae
clc
push
outsl
fsubs
add
stc
rolb
add
lods
and
sub
shrl
cvtdq2ps
lahf
stos
jecxz
xchg
and
mov
add
push
add
and
nop
add
je
or
clc
stos
push
add
or
add
enter
add
add
add
add
add
lods
xchg
fisubrs
mov
sbb
mov
dec
mov
xchg
xor
add
rcr
leave
in
add
hlt
add
jno
pop
add
add
mov
mov
cltd
pop
dec
ljmp
ficoms
add
add
add
rolb
mov
jecxz
mov
add
cmp
rolb
dec
push
ds
insl
imul
sub
test
inc
add
add
in
fcomps
movsb
add
pop
adc
pop
clc
fisubl
add
aam
add
mov
add
jmp
add
stos
mov
jno
add
add
stc
lods
or
add
mov
testb
add
add
add
mov
xchg
add
add
les
or
add
mov
add
mov
out
ret
add
sub
iret
xchg
add
xor
dec
or
out
lea
in
push
add
and
mov
cli
xchg
add
sub
stc
clc
add
clc
ret
loopne
rolb
sub
push
add
lock
push
outsb
xchg
mov
jmp
add
mov
dec
jl
enter
int3
mov
jno
sbb
mov
add
mov
push
add
mov
in
cmpsl
out
add
ja
lds
xor
gs
stc
out
shrl
add
std
add
scas
imull
add
add
xchg
clc
loopne
imul
adc
add
add
sbb
loopne
ljmp
add
mov
add
push
mov
adc
ss
int3
dec
pop
fmulp
adc
dec
add
mov
add
mov
add
mov
loop
or
add
mov
test
or
push
add
push
add
jle
adc
jno
add
scas
nop
add
add
sbb
pusha
add
add
add
and
mov
add
mov
and
mov
add
adc
stos
or
aad
add
int3
imul
xor
jbe
push
loop
cli
rcrl
jae
loope
add
test
add
add
jb
mov
ret
mov
fiaddl
ljmp
adc
lea
pop
and
mov
sbb
jns
add
pop
jmp
add
inc
mov
jmp
into
pop
inc
mov
or
mov
add
lret
mov
add
add
mov
fwait
sub
add
mov
add
sub
cmp
sbb
add
xchg
add
pop
data16
add
add
add
add
add
adc
inc
test
dec
xchg
push
data16
push
add
sub
xchg
inc
jmp
js
inc
add
imul
add
and
mov
adc
lods
stos
movsb
add
add
ja
sbb
call
xor
aam
scas
add
add
add
scas
mov
add
push
pop
sbb
lock
out
in
int
int3
inc
add
add
data16
cli
lock
aad
add
or
mov
add
jge
add
add
ret
add
mov
inc
add
add
adc
aam
ja
add
cmp
jg
add
mov
stc
testb
pop
in
addr16
das
out
std
mov
outsb
add
add
jbe
enter
daa
mov
xchg
mov
add
mov
lds
inc
lret
mov
or
and
add
cmp
in
enter
mov
nop
add
add
add
mov
jg
add
mov
cli
bound
mov
testb
mov
cmp
sarl
mov
inc
pusha
add
mov
rolb
or
mov
add
add
lods
out
adc
mov
scas
dec
xchg
add
aad
fcoml
add
add
and
inc
add
out
cli
sti
and
add
add
mov
inc
add
add
add
mov
in
lods
pop
sahf
fdiv
add
addr16
in
cmpsl
fdivl
data16
add
fistps
push
xchg
jns
add
mov
mov
or
add
and
mov
add
mov
ficoms
insb
mov
lahf
lea
or
pop
inc
push
add
cmpsl
hlt
add
pushf
mov
push
outsl
push
add
pop
roll
cwtl
pop
popf
data16
inc
pop
xor
push
sub
movsl
push
stc
and
inc
jne
cmp
rol
test
add
or
xor
pop
fadd
add
add
mov
stc
jp
add
add
