cmpsl
or
dec
iret
inc
add
add
sbb
jmp
xor
std
dec
test
add
xchg
push
add
add
addb
add
push
add
jo
out
xor
add
push
add
pop
in
mov
addb
add
add
mov
imul
ljmp
icebp
xchg
add
dec
dec
jb
es
dec
mov
add
cmp
add
enter
insl
xor
neg
out
mov
lcall
pop
push
add
add
dec
adc
mov
mov
add
pop
inc
into
adc
pop
rcll
dec
repnz
lock
add
mov
add
and
mov
add
add
insl
sub
jo
dec
and
pop
jl
pop
pxor
imul
jae
fmull
add
jno
cwtl
dec
dec
repnz
outsl
jle
imul
test
lret
outsl
rolb
sub
push
add
pop
pop
add
mov
add
mov
xchg
data16
add
pop
ds
adc
pop
aad
mov
mov
mov
pop
ficoml
or
enter
addb
add
aas
xchg
ja
add
mov
mov
add
jle
test
mov
mov
lods
xor
mov
gs
jle
sub
add
add
jae
inc
sbb
xchg
add
xor
cmp
jae
mov
outsb
lahf
insb
iret
push
add
pop
movsb
add
inc
fdivs
add
mov
and
sub
xor
dec
nop
add
add
pop
cmp
pop
push
add
add
mov
jbe
cmp
add
xchg
jns
sbb
scas
mov
add
add
add
roll
mov
jmp
add
sbb
or
push
lret
testl
and
mov
or
mov
mov
add
adc
lahf
add
addr16
push
add
add
and
mov
sub
add
jg
add
add
push
add
mov
out
ljmp
fidivrs
inc
add
add
inc
add
aas
out
pop
fidivs
leave
cwtl
adc
sub
daa
ret
adc
mov
bound
mov
mov
add
adc
sub
add
ljmp
xchg
add
andl
xchg
add
mov
add
imul
fmuls
cmp
lock
add
cmp
add
movb
add
adc
pop
fcoms
insl
add
add
mov
add
and
push
add
or
adc
cmc
adc
rcll
stc
daa
pusha
add
push
sbb
inc
add
jne
add
add
mov
out
hlt
add
enter
cli
adc
das
sbb
add
mov
add
sub
stc
cmp
jo
add
mov
adc
mov
sub
inc
jns
lds
int
sbb
popa
xor
add
jl,pt
add
xor
pop
je
mov
test
add
add
subl
push
aad
add
cmp
or
test
popa
or
adc
scas
adc
aas
adc
ds
movsb
add
cmpsl
add
mov
add
mov
addb
test
add
push
add
scas
push
add
testb
add
cmc
pushf
cmp
mov
movsb
add
mov
aas
lret
dec
add
mov
rolb
imul
addr16
stos
leave
push
add
add
fwait
xor
in
rolb
cwtl
push
add
and
loopne
cld
sbb
add
xor
fcoml
outsl
fmuls
mov
loop
fsubs
jle
into
fcmove
arpl
add
jecxz
dec
dec
fwait
mov
add
js
imul
pusha
add
data16
add
pop
xor
and
test
mull
icebp
jbe
mov
dec
push
inc
add
imul
add
pop
cvtps2pd
fwait
dec
fbstp
mov
jae
test
add
stos
and
sbb
inc
pop
fnsave
roll
jns
push
add
add
add
mov
mov
xchg
addb
test
mov
add
loop
adc
pop
mov
stos
imull
sbb
add
add
std
push
add
push
add
daa
mov
addr16
data16
test
test
add
push
add
mov
add
add
add
mov
inc
ss
js
add
jl
xchg
add
mov
mov
movsb
add
add
add
imul
add
ret
stos
add
into
lods
and
and
dec
cltd
and
mov
sbb
pop
xchg
add
jle
pop
add
rolb
and
mov
loope
add
add
add
cmp
outsl
inc
add
add
adcl
jecxz
testb
addb
hlt
add
xchg
and
push
add
in
ljmp
xor
or
add
cli
daa
cli
add
cmc
stos
cmpsb
add
add
jge
mov
add
lds
add
cmp
mov
add
mov
movb
add
mov
add
je
gs
rolb
mov
sub
testb
add
insl
fisttpl
add
add
sti
daa
shrl
mov
push
and
insl
mov
add
sub
add
add
xor
aam
push
sbb
call
daa
mov
inc
add
cmp
and
push
out
adc
adc
ret
add
pop
and
mov
add
outsl
popa
jb
in
sbb
add
fstpl
dec
popf
xchg
add
pop
gs
dec
jp
sbb
loope
inc
add
out
inc
add
mov
jnp
add
add
add
cmp
sbb
add
mov
dec
sbb
mov
cmpsl
xor
imul
xor
nop
add
sub
addb
or
add
xchg
mov
sbb
bound
mov
adc
stos
out
mov
imul
add
in
pop
mov
add
add
add
js
push
sub
loope
rolb
adc
cmp
add
and
mov
add
aaa
outsl
cmp
sub
mov
and
and
imul
jp
out
out
dec
lret
xchg
add
xchg
lahf
jecxz
fwait
sub
pop
sub
out
adc
cmp
add
push
add
mov
inc
rolb
cmp
sub
add
xor
adc
outsb
lret
sub
mov
insl
stc
leave
mov
outsl
aaa
inc
add
mov
cwtl
testl
leave
loope
jl
lret
mov
sbb
aaa
pop
push
add
and
inc
add
jge
imul
add
add
add
xchg
dec
push
sbb
xor
add
sub
jbe
nop
add
movb
xchg
add
dec
inc
mov
add
mov
adc
aad
dec
mov
inc
add
mov
call
mov
lea
jbe
call
mov
add
add
add
in
and
ja
cmpsl
lea
xchg
jmp
xchg
pusha
add
xchg
iret
cltd
add
sub
lret
xchg
add
sbb
je
mov
jge
add
test
ja
add
int
mov
and
out
js
lcall
add
push
loopne
and
mov
mov
sbb
sarl
add
add
and
mov
add
addb
outsb
cmp
popf
add
dec
dec
add
adc
xchg
cmp
pop
push
add
icebp
mov
mov
mov
mov
addr16
xlat
ljmp
dec
loope
add
adc
pop
dec
sub
jp
add
push
add
add
fistpll
adcl
mov
dec
scas
pop
add
add
rolb
adc
pusha
add
pop
push
hlt
add
aad
in
das
add
mov
rolb
add
add
add
rolb
jo
sbb
mov
out
mov
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
sar
pop
pop
cmpsl
mov
add
into
jne
testl
movsl
out
movsb
add
ror
popa
pop
out
fcmovbe
xchg
add
ret
adc
pop
out
and
mov
push
mov
push
out
popf
loope
add
lcall
mov
add
pop
icebp
gs
lock
pop
add
movsl
rolb
add
add
inc
add
testb
adc
popa
dec
ret
pop
dec
addl
add
scas
lret
or
mov
add
mov
mov
ja
popf
jno
jnp
iret
or
mov
or
test
add
ja
data16
divl
pop
mov
add
jmp
jle
push
xchg
add
add
into
pop
cmp
add
and
add
add
cmp
fstps
fst
add
jne
add
mov
les
rolb
pushf
ljmp
fmuls
or
mov
vpmovmskb
xor
add
dec
inc
add
add
mov
faddl
popf
push
cwtl
xchg
add
push
mov
and
jb
clc
rolb
mov
cmp
pop
rorl
adc
mov
or
add
std
jno
add
add
add
mov
mov
mov
xchg
add
test
jge
xor
pop
arpl
inc
add
mov
lret
add
add
pop
lods
loop
shl
add
imul
add
add
nop
add
add
ret
lret
push
cwtl
mov
push
add
dec
pop
iret
pop
adc
or
xor
mov
sub
add
and
mov
add
ficomps
cmpsl
jecxz
scas
rolb
push
sub
jg
add
add
aas
xchg
fs
pop
inc
add
int
and
fcmovb
add
add
stos
push
add
adc
push
add
ficoms
xor
cmp
lods
dec
jmp
and
add
add
xchg
add
dec
loope
add
adc
mov
outsl
adc
psraw
mov
cmp
rorl
push
and
xor
xchg
ficoml
icebp
pop
pop
add
call
sub
push
add
add
fwait
data16
push
xchg
popa
stc
jbe
out
lret
dec
popa
push
mov
shl
add
or
add
stos
cltd
in
push
bound
mov
add
add
outsb
or
mov
pop
cld
or
add
mov
inc
cmp
add
mov
add
fcmovu
dec
fimull
mov
cmp
add
sbb
je
test
out
mov
add
pop
sub
filds
xchg
jno
xchg
sub
mov
add
int
add
ljmp
sahf
xchg
add
add
lcall
add
xchg
pushf
cmpsl
hlt
add
mov
mov
mov
add
adc
test
add
and
ljmp
and
lods
xor
add
ficoms
mov
add
cmp
in
or
mov
inc
pop
add
add
add
add
add
and
add
aaa
out
lahf
xor
in
rolb
sub
into
jo
jl
sbb
cmp
inc
insl
lds
aas
addb
nop
add
add
add
xor
add
add
mov
mov
or
cmp
aaa
sub
das
sub
add
sbb
rolb
gs
call
dec
scas
addb
mov
inc
add
add
in
push
add
jge
add
add
or
loop
iret
jo
pop
pushf
push
aad
loop
rolb
inc
xchg
mov
lret
lds
add
daa
jge
add
stc
push
sbb
add
sbb
xlat
out
shll
adc
add
add
jae
and
add
inc
add
pop
jmp
add
rolb
jo
testb
xchg
jmp
in
addb
adc
ret
fidivs
add
pop
idiv
xchg
add
adc
add
and
in
dec
rolb
jbe
test
fnstsw
pop
les
cmp
outsl
cmpsb
add
clc
inc
add
add
add
add
add
add
jnp
lret
test
add
addb
sbb
int3
lret
sub
dec
lea
add
add
push
jns
or
cmp
mov
add
inc
cmc
hlt
add
mov
int
add
adc
mov
sub
add
add
daa
adc
add
sti
shll
std
js
add
scas
adc
arpl
cmc
and
mov
sbb
dec
or
cltd
cmp
jno
mov
add
add
ljmp
adc
jnp
add
push
aad
or
pop
pop
push
mov
add
mov
cmp
icebp
cltd
sbb
sbb
add
cltd
mov
mov
andl
pop
jo
jne
dec
dec
add
lahf
cwtl
hlt
add
add
fiadds
sarl
std
out
and
mov
jecxz
mov
add
add
addb
dec
sub
push
push
add
xchg
rolb
test
cwtl
outsl
inc
inc
pop
lea
xchg
xor
sub
add
ljmp
xor
leave
dec
in
and
or
scas
sbb
add
clc
sti
pusha
add
add
add
hlt
add
add
mov
repnz
add
mov
lret
insb
inc
add
dec
jne
sbb
mov
dec
jno
pop
mov
add
mov
add
add
mov
add
imul
push
add
mov
loopne
pop
hlt
add
mov
sbb
mull
sub
add
test
sahf
mov
out
pop
pop
jge
cmp
movsl
movsb
add
add
addb
jo
dec
cmp
dec
sub
cmp
rcrl
pusha
add
add
mov
sub
pop
mov
mov
dec
test
add
mov
ficompl
icebp
stos
loopne
mov
mov
movsb
add
mov
cmp
sbb
gs
add
and
mov
or
addb
mov
add
add
rolb
lock
addl
out
add
mov
mov
cmp
movsb
add
cmp
dec
cmp
mov
bound
mov
daa
movsb
add
sbb
cmc
jns
add
and
mov
sbb
xchg
add
dec
jo
pop
cld
lcall
xchg
arpl
add
cmp
shl
pop
rcrl
adc
mov
add
ja
cltd
bound
mov
aas
in
imul
movb
mov
add
fwait
movsl
lods
mov
cmpsb
add
add
repz
xlat
sbb
mov
call
mov
inc
or
addb
push
add
add
add
out
add
add
movb
xchg
add
fcoml
cmp
jg
mov
fninit
add
dec
mov
add
add
xchg
dec
sub
rolb
dec
aad
int3
pop
aaa
push
add
add
cmp
push
xchg
mov
jne
imull
add
and
leave
out
pop
jle
add
jne
cltd
push
add
add
add
push
mov
push
dec
and
and
add
adcl
cmp
out
in
fildl
mov
mov
or
test
push
mov
add
dec
push
mov
xchg
add
add
jp
dec
xor
mov
add
push
add
cwtl
adc
lret
lea
add
dec
das
fildl
add
leave
fists
mov
jle
add
push
add
add
dec
xchg
add
mov
dec
imul
add
icebp
and
sub
xor
scas
xchg
or
add
add
add
mov
cltd
subl
sub
add
sub
add
add
mov
movsl
sti
in
gs
inc
add
popa
sbb
jge
xor
mov
add
xchg
jg
xor
xchg
add
xor
add
xchg
in
mov
mov
movsl
xor
add
adc
mov
mov
hlt
add
and
enter
pushf
dec
dec
inc
add
pop
jg
repnz
add
push
or
lock
mov
testb
cmc
aad
mov
jg
dec
or
or
pushl
lds
adc
lcall
add
xchg
cli
mov
sahf
lahf
ret
adc
sub
jle
add
mov
add
add
add
jbe
popa
inc
lods
sbb
mov
mov
push
add
add
sub
and
mov
add
shll
add
add
push
aaa
push
pop
jecxz
das
xchg
add
add
cmp
add
add
xlat
aas
sub
loop
sub
adcl
aas
xchg
into
sub
sbb
or
mov
add
mov
add
jbe
loope,pn
mov
lret
adc
pop
xchg
xchg
cwtl
ret
imul
mov
add
arpl
pop
mov
testb
add
mov
in
mov
movsl
and
mov
xor
pop
or
add
mov
add
cmp
mov
jmp
lret
xchg
ja
add
sar
pop
dec
and
hlt
add
add
mov
and
mov
add
sub
cli
fistpll
movb
add
or
dec
icebp
jno
aam
scas
mov
jo
daa
mov
xor
add
mov
sbb
mov
push
rolb
pop
push
xor
data16
pop
fstps
repz
mov
add
out
and
add
add
dec
mov
adc
testb
pushf
mov
add
outsb
cltd
mov
sub
pop
dec
movsl
jo
popa
jne
data16
cmp
cmc
and
jecxz
lahf
mov
inc
or
add
add
dec
xchg
add
add
or
aam
pop
add
in
mov
add
add
or
sahf
sbb
int3
mov
sbb
or
rolb
fistl
add
add
mov
add
mov
mov
testb
ret
daa
dec
add
add
jl
push
jecxz
and
cmp
add
mov
mov
testb
add
add
push
push
add
add
xchg
adc
inc
add
in
xchg
and
mov
addl
add
call
sub
int
mov
add
cmp
or
add
in
pop
mov
inc
add
fwait
pop
sarl
add
cmp
jbe
jmp
jae
xor
addr16
or
add
repnz
add
scas
mov
add
mov
add
int
push
add
sbb
add
add
jns
loopne
jp
cmp
or
add
in
mov
pop
testb
add
fnsave
and
or
sub
xor
jns
aad
add
jne
cmc
in
add
add
mov
adc
xchg
xchg
bound
mov
lahf
mov
testb
push
mov
stos
xor
mov
add
cmp
adc
jo
je
push
add
mov
ljmp
insl
arpl
mov
ljmp
add
push
lods
push
dec
inc
mov
cli
cltd
add
loopne
movb
call
movsb
add
mov
push
push
add
mov
add
insl
lods
cmp
xchg
dec
mov
lods
mov
push
inc
add
insl
sbb
add
mov
test
pop
add
push
sub
lret
add
push
out
sahf
scas
jg
in
rcll
pop
ffree
add
mov
add
cmp
pop
pop
mov
add
mov
imul
xor
mov
fimull
xchg
dec
out
data16
xchg
scas
push
add
xlat
mov
mov
sub
xchg
testb
dec
ret
inc
add
add
fstl
clc
jmp
sti
cmpsl
out
mov
push
add
in
sbb
pop
jg
add
inc
cmp
add
ror
test
push
add
add
add
add
hlt
add
add
xchg
add
mov
std
add
and
xor
add
gs
add
add
divl
add
jne
add
xor
add
sbb
add
sarl
mov
imul
loope
das
fmuls
dec
xor
add
movsl
pop
jle
or
data16
sti
rorl
add
pop
fwait
nop
add
in
sti
icebp
xor
lcall
add
push
sarl
mov
or
mov
add
xor
fwait
outsl
sbb
add
or
call
add
inc
add
add
add
dec
mov
add
push
pop
adc
fdivr
dec
add
add
xor
sub
dec
add
push
add
lods
subl
test
add
mov
clc
add
mov
leave
jecxz
and
rolb
jbe
sub
lds
add
das
or
cmp
dec
jmp
add
add
lock
pop
add
inc
nop
add
scas
and
add
mov
test
mov
add
add
pop
int
jle
test
popf
pop
mov
xchg
adc
add
cmc
or
xor
sbb
popf
inc
add
rcll
sbb
lea
dec
aam
idiv
sbb
mov
add
mov
das
dec
and
add
add
in
pop
lcall
outsl
sbb
add
scas
pmullw
dec
add
out
pop
call
fcomip
enter
insl
jne
fwait
push
cmpsl
ret
add
into
push
xrelease
add
sbb
fisubl
insl
ret
dec
fadd
insb
mov
sbb
lea
add
incb
add
pop
iret
push
add
or
xchg
cmpsb
add
mov
and
mov
add
add
cmp
inc
add
add
inc
add
mov
int3
rcrl
repnz
insl
cld
lods
lods
sub
imul
gs
adc
xor
mov
roll
fisubs
ficompl
and
mov
add
add
mov
mov
add
je
jne
js
mov
xchg
or
mov
adc
clc
sub
stos
xchg
cmc
rep
add
add
lret
loopne
rolb
aam
or
mov
insl
js
nop
add
add
xchg
jmp
mov
add
inc
add
testb
add
mov
mov
sub
add
add
cmpsl
inc
cmp
or
add
ret
add
repz
add
cmp
cmp
test
dec
sub
call
add
pop
mov
xchg
cmp
mov
mov
fcoms
add
stos
mov
or
xlat
add
add
mov
jg
mov
mov
mov
add
outsb
dec
jecxz
cmpsl
or
add
jae
cmp
jecxz
add
add
or
js
int3
insl
aad
add
xchg
stos
imul
ret
xor
dec
out
adc
outsl
mov
insl
jb
fildll
mov
cmp
movsb
add
addb
add
add
loop
hlt
add
add
sub
add
mov
or
xlat
and
mov
popf
outsl
popf
pop
jno
xor
data16
mov
in
cmp
add
add
pusha
add
add
rolb
mov
pop
out
fisttpll
add
inc
add
shrl
xor
fprem
or
xchg
adc
hlt
add
hlt
add
je
mov
add
or
pop
dec
xor
cmp
add
mov
push
add
push
out
addb
mov
fucom
add
stos
mov
sti
xchg
xor
add
mov
in
mov
xor
pop
outsb
addb
add
add
jp
adc
iret
mov
add
push
and
mov
xchg
dec
pop
mov
or
stc
inc
add
add
xor
call
pop
pop
out
cmpsl
push
lahf
imul
inc
add
push
adc
add
insl
xor
add
add
add
mov
pop
loope
add
addb
add
mov
pop
pushf
filds
outsb
xchg
pushf
sub
shll
jb
cmp
add
imul
add
jns
add
add
add
dec
lock
rolb
add
hlt
add
aaa
jo
mov
add
mov
push
jo
inc
add
inc
add
add
gs
pop
nop
add
arpl
add
ljmp
leave
lea
jecxz
sub
xchg
dec
out
dec
xor
loope
xchg
add
popf
push
add
rolb
add
ret
pop
sbb
add
rcr
push
push
add
sub
add
js
add
rolb
add
sub
lahf
aas
xchg
test
push
xchg
add
add
add
dec
ja
data16
pop
add
mov
push
add
in
sbb
xchg
js
add
add
pop
fdivrl
lret
bound
mov
add
add
add
cld
mov
repz
cs
mov
scas
mov
cmp
pop
movsb
add
cmp
aas
cmp
pop
cs
mov
add
push
test
cld
movsl
jle
ljmp
data16
push
add
inc
add
mov
mov
sti
xor
pop
jg
add
scas
xchg
rorl
mov
sahf
mov
bound
mov
stc
icebp
or
push
outsb
sub
sub
addb
aam
jo
and
mov
pushf
out
xchg
mov
rolb
jb
scas
pusha
add
inc
add
outsb
or
imul
add
call
add
adc
push
add
add
pop
xor
add
shll
ret
add
out
cld
adc
in
push
add
jae
push
push
lock
xor
xor
jnp
add
mov
add
mov
out
or
loopne
dec
out
jmp
add
das
xchg
add
cmp
outsb
adc
cltd
sbb
das
xchg
add
dec
add
scas
adc
dec
std
inc
pop
loop
adc
cli
stos
mov
rolb
popa
mov
sbb
push
add
repz
add
scas
cmpsl
test
rolb
add
mov
loop
jmp
push
add
insl
push
in
lea
sbb
sbb
test
in
jb
cld
add
adc
aad
or
lods
mov
pop
mov
mov
mov
add
push
mov
add
push
add
fwait
repz
add
add
add
int3
mov
xor
mov
adc
adc
in
out
fiaddl
push
add
xchg
mov
shl
add
out
jl
dec
std
idivl
aaa
mov
orl
add
iret
dec
mov
insl
ficomps
dec
pop
fsubs
pop
into
pop
mov
add
out
jmp
je
lods
dec
sub
and
ret
into
mov
dec
test
lods
xor
xlat
jg
or
add
mov
xor
inc
add
mov
jne
add
add
std
filds
mov
push
add
push
add
xchg
add
mov
add
push
add
xchg
jmp
movsb
add
sub
add
mov
pop
mov
add
ja
add
add
xor
test
popa
sub
cmp
add
out
add
bound
mov
rorl
dec
mov
mov
scas
mov
mov
xchg
mov
add
das
dec
sti
scas
decb
vcvtsi2sdl
add
lods
enter
test
repnz
add
std
scas
lret
mov
add
andl
cmp
add
and
std
jl
sub
fcomps
das
hlt
add
add
add
mov
and
les
mov
push
stos
dec
daa
xchg
add
push
jecxz
mov
fdiv
add
push
add
add
add
out
xchg
jno
push
add
mov
nop
mov
jnp
insl
push
dec
stos
cltd
ja
pop
pushf
stos
fildl
push
add
jnp
inc
rolb
inc
inc
add
popf
arpl
dec
inc
add
cmp
jp
add
jp
stc
or
push
out
loop
lret
aas
jmp
add
hlt
add
push
xor
xchg
add
add
aaa
mov
mov
in
jle
inc
add
sbb
add
inc
ret
in
in
les
inc
pop
xchg
mov
add
std
addb
add
stos
ret
jmp
sub
add
add
dec
push
popa
xor
pop
bound
mov
add
orl
jb
sahf
in
stos
pop
mov
add
and
mov
inc
test
pmulhw
test
out
and
add
xchg
in
xchg
nop
add
int3
repnz
mov
lods
inc
add
add
mov
js
push
in
fidivrs
cmpsb
add
add
dec
lods
aaa
enter
subl
or
leave
mov
and
sub
imul
pop
loop
outsb
sub
pop
notl
adc
add
pop
nop
add
dec
jno
xlat
sub
add
lock
popf
lods
mov
and
mov
sub
xchg
pop
dec
push
mov
add
jecxz
push
sub
add
mov
sbb
add
mov
cwtl
xor
add
lods
movb
test
rolb
popf
repz
frstor
add
icebp
or
push
add
mov
mov
add
add
jbe
hlt
add
add
adc
stos
out
jbe
cmc
dec
fildl
mov
mov
mov
add
add
fbld
add
lahf
fmuls
xchg
add
mov
add
add
clc
jno
in
mov
mov
lods
lahf
loopne
add
push
jecxz
sub
sarl
xor
decb
add
movsb
add
test
mov
fsubs
or
mov
add
add
in
lcall
add
push
add
add
xchg
ljmp
add
mov
inc
dec
mov
add
out
lret
pop
mov
add
add
movb
rolb
addb
xchg
orl
pop
fmulp
scas
imul
cmpsb
add
add
xchg
add
lea
sbb
subl
ljmp
add
sub
jbe
mov
lds
js
add
mov
imul
call
push
add
push
add
out
mov
sbb
push
jae
fisubrl
adc
add
lcall
push
xchg
pop
jp
lock
mov
dec
xchg
mov
lock
add
add
add
jns
add
pop
pop
js
into
jo
sbb
test
add
xchg
mov
add
add
mov
je
sbb
add
mov
push
cmc
mov
popf
xchg
or
add
add
ret
and
add
mov
out
aam
scas
repz
mov
jnp
lea
popa
fildl
add
add
lret
cmp
cmp
les
loop
and
xor
data16
sbb
addb
adc
icebp
es
sbb
js
leave
inc
add
aas
js
adc
cs
push
mov
into
lcall
add
jge
sub
pop
pop
into
jb
push
add
pop
mov
mov
add
mov
add
stos
push
add
int
in
xor
jp
mov
add
add
push
add
jne
add
push
xor
mov
jge
jo
mov
add
dec
jg
add
lods
mov
push
add
add
mov
pop
imul
pusha
add
push
stos
jl
dec
cmpsl
cmp
add
jl
add
xor
mov
frstor
sub
or
test
cltd
cli
and
sbb
pop
and
dec
outsl
mov
jp
mov
ja
xchg
xor
fimuls
adc
mov
bswap
insb
cmp
mov
out
je
cs
shll
dec
adc
mov
daa
pusha
add
add
add
jp
cmp
xchg
add
mov
add
mov
cld
pop
test
dec
testb
add
jp
adc
int
cmpsb
add
push
mov
xchg
mov
in
jecxz
jmp
hlt
add
push
push
cmpl
cwtl
lock
add
mov
sahf
pop
js
xchg
add
push
add
cmp
hlt
add
jle
add
add
icebp
loope
addb
push
icebp
dec
sub
mov
loopne
push
push
add
xor
add
pop
sbb
sbb
bound
mov
push
add
call
jb
iret
mov
cmpsb
add
add
subl
jnp
add
jns
and
hlt
add
in
add
daa
lods
and
mov
mov
add
lods
and
xchg
add
lcall
jl
jae
outsl
rolb
repz
fwait
stc
jmp
cmp
add
mov
and
mov
mov
jbe
aaa
mov
add
rcrl
add
jae
cmp
xor
sub
rolb
addb
testb
out
pop
rolb
cmpsb
add
push
jle
cmpl
insb
push
add
add
push
add
lahf
cmpsl
inc
add
add
pop
add
or
add
push
or
add
test
add
jl
push
push
adc
out
and
dec
push
add
push
mov
movb
test
in
adc
jecxz
adc
mov
ds
pop
clc
arpl
lcall
push
insb
jno
inc
jmp
add
pop
or
std
cld
xchg
add
loopne
push
add
mov
or
lret
cmp
cwtl
ja
out
mov
xor
adc
add
add
pop
pop
je
aas
fs
int3
imul
cs
mov
mov
jo
push
clc
rolb
cmp
mov
dec
dec
fisubl
add
in
mov
cmp
into
cwtl
in
aam
clc
jecxz
lods
aad
add
add
add
add
add
aas
add
mov
or
jne
mov
mov
sub
nop
add
mov
mov
add
in
add
add
fldt
add
add
rolb
insl
mov
add
add
mov
add
mov
movb
add
add
add
xor
jnp
mov
and
mov
movsl
or
enter
jge
add
add
cltd
push
add
add
xchg
add
and
adc
sub
jno
add
add
xor
sbb
xchg
lock
in
push
add
sub
mov
cmp
add
repnz
xchg
pop
and
not
mov
pop
mov
jle
fwait
cmp
wbinvd
imul
das
jl
add
add
jp
add
out
jg
inc
and
mov
or
mov
data16
cmp
add
add
mov
test
pop
idiv
aaa
sbb
test
ret
add
add
sub
js
rolb
add
add
std
leave
test
addb
mov
add
push
mov
cmp
xchg
out
add
dec
xchg
add
add
addb
add
pop
outsb
jae
mov
call
add
add
out
xor
add
add
lea
add
jp
fcoml
insb
add
adc
fimuls
shl
aad
add
add
add
add
mov
push
add
push
add
push
fdiv
pop
outsb
dec
loopne
movsl
cmpsl
push
adc
sbb
xor
mov
cli
aas
cli
xchg
add
sti
lds
add
or
sub
add
scas
add
xor
rolb
stos
xor
es
lret
mov
shrl
xchg
add
aaa
xchg
pop
push
xchg
add
push
clc
adcl
xor
mov
add
dec
and
mov
xchg
sahf
data16
mov
jg
imul
add
lahf
and
lahf
inc
add
jo
push
add
add
add
sbb
mov
in
sub
lds
add
rolb
mov
dec
out
ja
push
repnz
sub
xchg
mov
orl
add
add
les
pop
dec
inc
add
mov
loopne
nop
add
sti
pop
jmp
js
xchg
mov
xor
ja
int3
popa
xchg
add
add
sub
dec
outsl
sub
add
inc
mov
add
mov
mov
push
outsb
mov
add
fsubl
pop
mov
addb
add
add
push
add
cmp
add
add
mov
sub
add
call
add
lahf
lds
add
dec
cmp
and
ds
cmp
enter
add
call
jl
add
push
das
jbe
pop
imul
add
push
sub
jp
popf
movl
sub
add
add
fsubl
pop
mov
add
popf
xchg
fnop
add
inc
ljmp
shl
add
add
shr
inc
xor
mov
mov
mov
mov
or
xchg
add
add
mull
jae
cmp
add
rolb
inc
add
jo
add
inc
add
movsb
add
add
jne
lea
mov
add
sbb
inc
add
add
xor
add
and
mov
mov
add
pop
mov
sbb
lock
xor
pop
mov
jb
mov
mov
fmull
fsts
aaa
push
rcrl
mov
adc
enter
clc
mov
add
cld
movb
xor
lock
dec
stos
mov
adc
inc
add
add
add
movsl
push
mov
add
shll
sbb
mov
daa
dec
inc
add
add
xchg
cld
mov
add
xchg
add
das
popf
aas
jle
add
add
push
xor
push
add
lock
fwait
movb
xor
xor
lahf
jae
in
ficoms
add
cli
cld
add
add
add
stc
movsl
into
les
in
or
xlat
lea
mov
inc
cmpsl
or
add
out
stos
lcall
add
aad
and
repz
fmuls
fimull
add
add
rolb
test
xor
test
andl
addb
jmp
pusha
add
add
rolb
popa
cmpsb
add
cmp
test
add
xchg
add
in
adc
mov
test
push
ret
popa
xchg
add
aaa
or
and
mov
pop
jns
in
xor
les
adc
push
add
inc
add
call
add
sub
incb
push
aaa
mov
pop
xchg
add
xor
add
dec
arpl
add
les
adc
pop
shl
add
sti
movsl
xchg
add
out
xchg
add
add
add
xlat
or
add
in
movb
punpckldq
mov
sub
cmp
sub
cld
int
stos
popf
popf
test
add
pop
mov
add
add
sub
dec
leave
mov
add
add
add
push
add
add
add
xchg
ret
add
cmp
dec
fsts
push
add
fwait
dec
adc
jge
add
add
jp
testb
sub
fucom
sub
push
add
pop
das
mov
movsl
shl
add
cmpsb
add
mov
add
add
test
add
or
inc
add
sbb
add
add
mov
movb
mov
je
cmp
push
add
mov
xor
add
xchg
add
dec
or
add
mov
test
add
inc
add
mov
insb
xchg
add
xlat
sbb
add
mov
add
push
into
inc
cmpsb
add
and
pop
mov
outsl
loope
add
cltd
imul
add
jnp
test
dec
jge
mov
lahf
jmp
das
and
popf
and
aaa
dec
rcr
add
enter
add
cmpsb
add
push
dec
cld
fdivs
stos
sahf
mov
test
add
xchg
out
or
mov
lahf
sub
xor
add
rcll
add
cmc
pop
movsl
lcall
dec
out
xor
cli
adc
rcrl
add
jmp
add
sbb
mov
push
mov
sub
add
add
out
jmp
add
mov
sub
add
and
mov
push
add
and
pop
push
add
add
imul
lcall
fwait
sbb
mov
lods
jg
movb
mov
add
sti
xchg
pop
mov
cld
mov
add
dec
mov
mov
enter
add
or
add
lds
jae
add
jnp
dec
add
mov
ret
pop
xchg
pop
imul
xor
add
add
mov
data16
pop
popa
xchg
in
aam
and
mov
add
enter
add
add
repz
add
js
imul
mov
js
add
std
adc
out
inc
add
add
lds
pop
sbb
fidivrs
pop
lods
push
add
pop
fs
add
push
dec
mov
mov
jge
add
xor
dec
sti
dec
pop
aad
add
cmp
add
add
xlat
adc
dec
pop
lds
add
arpl
pop
xchg
imul
mov
add
je
adc
xor
add
xor
push
pop
jae
pcmpgtb
sbb
add
xchg
add
aas
add
sub
stos
lret
int3
lret
cmp
push
add
lds
mov
fstpt
dec
mov
cmp
in
ja
add
iret
ds
and
mov
sbb
leave
xchg
add
movsl
sbb
xlat
xchg
add
lahf
xor
jbe
jmp
insl
in
push
xchg
push
add
add
and
mov
mov
fidivrs
daa
mov
leave
and
lods
add
fisubs
add
rolb
and
add
add
add
mov
outsb
jb
mov
xor
dec
pop
testb
pusha
add
das
sbb
cli
stc
in
shrl
add
add
fdivrs
leave
mov
arpl
add
cli
and
mov
cmp
adc
cmp
movsl
aas
sti
cltd
stos
pop
cs
rolb
inc
add
iret
and
aam
push
add
mov
daa
jns
add
jg
add
xor
add
mov
cli
sub
aaa
ret
xlat
mov
push
mov
cltd
or
popf
cmp
pop
mov
insb
dec
cmpsb
add
ret
fwait
adc
jl
movsb
add
add
xchg
push
add
mov
stos
mov
mov
sbb
mov
mov
das
in
dec
add
mov
jb
je
pop
lods
add
adc
add
xor
push
xor
scas
push
add
sahf
jbe
rcrl
jne
mov
aam
bound
mov
les
jp
in
add
outsb
dec
xor
pop
aas
mov
pop
lock
clc
jnp
sub
add
or
xor
jmp
in
jns
scas
jmp
mov
add
add
adc
outsb
sarl
adc
mov
dec
cli
fdivs
adc
test
push
add
bound
mov
imul
pop
mov
xchg
sub
in
popa
cltd
mov
sarl
adc
bound
mov
jbe
js
add
lcall
add
add
pop
push
add
mov
jne
add
xchg
add
ret
add
or
jnp
dec
out
pop
js
sti
sbb
pop
shl
repz
fcoms
add
inc
add
add
add
add
add
or
add
lret
pop
sub
cwtl
pop
out
inc
jecxz
add
mov
rolb
jg
adc
andl
add
mov
mov
mov
dec
mov
dec
push
cmp
push
add
add
mov
add
popf
sahf
fwait
jo
xor
shl
mov
add
pop
test
rcrl
or
pop
sub
sub
add
add
mov
push
inc
addr16
add
mov
add
xchg
add
dec
pushf
call
mov
mov
nop
add
cmpsl
mov
xor
add
add
in
addb
add
pop
sub
test
cltd
jmp
out
mov
add
mov
or
push
sti
lret
movb
push
add
mov
or
xor
add
add
mov
mov
cmp
faddl
add
pop
fldt
mov
add
icebp
popa
add
add
add
fdivr
pop
mov
cmpsl
testb
xor
pop
stos
repz
cli
out
add
pop
xor
inc
add
add
adc
fsubs
mov
mov
jo
push
add
daa
add
into
sahf
repz
mov
add
mov
add
pop
cmovp
aad
dec
dec
sbb
mov
jmp
mov
add
and
mov
out
sub
mov
mov
mov
push
add
fstpt
jae
cli
mov
add
xchg
add
int
jbe
lea
mov
sub
pop
and
mov
ljmp
cmp
push
mov
add
mov
mov
pop
cmp
add
add
lahf
outsl
or
mov
add
or
mov
push
pop
lret
lods
imul
xlat
pop
dec
mov
aam
stos
and
addl
scas
xchg
push
scas
sbb
or
add
xor
add
cmc
jnp
dec
stos
jo
in
pop
fisttps
mov
fsts
sbbl
add
and
sub
mov
xchg
dec
jae
jnp
je
rolb
aaa
cli
push
add
add
test
sbb
add
outsb
imul
clc
in
lcall
out
sbb
lret
lcall
popf
add
xchg
lcall
ret
sahf
pop
loope
aas
inc
add
jp
xchg
add
pop
jnp
xchg
add
sbb
insl
sbb
add
add
repnz
adc
mov
add
ret
frstor
add
es
xor
sti
jge
mov
inc
pop
adc
pop
mov
push
add
add
add
xchg
add
pop
sub
in
daa
rolb
lock
lahf
in
pop
clc
loop
jle
sub
push
add
add
divl
add
lcall
cwtl
cmpl
popf
push
mov
add
pusha
add
add
dec
cltd
inc
add
push
lret
pop
mov
lea
jp
push
mov
lock
add
incb
mov
insb
iret
push
add
mov
sub
add
add
push
add
and
mov
sahf
jne
add
cmpsl
adc
add
repz
testb
add
add
pop
or
adc
loopne
cmpsl
movb
and
adc
movsb
add
add
add
add
add
fmull
cmpsb
add
insb
lock
mov
add
mov
inc
add
xor
out
es
test
push
add
xchg
scas
rorl
adc
mov
pop
mov
pop
dec
popf
shrl
test
shrl
mov
mov
push
xor
fistpl
pop
xor
add
push
xchg
or
pop
cwtl
test
pop
jne
sbb
add
int3
loope
dec
push
add
jnp
add
pushf
cmp
lock
add
add
pop
inc
mov
xchg
cmpsb
add
mov
add
jnp
cmp
sub
add
pop
or
lock
aaa
ja
aad
fwait
add
xchg
addb
add
jl
add
inc
idivl
call
add
add
movsb
add
rolb
mov
mov
aad
testb
js
xor
mov
in
daa
js
or
pop
dec
inc
add
and
jns
add
mov
out
hlt
add
add
or
cs
lret
clc
jmp
mov
cmp
pop
cwtl
mov
push
dec
mov
bound
mov
ret
add
insb
push
out
xchg
scas
imul
std
outsl
push
push
and
movsb
add
fwait
divl
enter
xor
jbe
lock
lods
push
add
xor
mov
sbb
lea
aad
inc
iret
mov
add
add
add
mov
mov
and
mov
pop
icebp
or
add
add
in
add
jb
mov
add
mov
add
xchg
add
add
add
add
test
addb
and
mov
adc
cltd
icebp
test
lds
mov
lods
xlat
repnz
add
fsubrl
add
add
scas
push
add
mov
arpl
shrl
das
jns
add
xchg
add
jnp
lret
mov
jnp
add
push
lcall
sbbl
leave
js
xchg
xchg
add
pop
sahf
test
mov
adc
sbb
pop
sub
add
das
sub
inc
xchg
xor
jae
stos
mov
mov
cmp
cmp
push
es
mov
cwtl
int
cmc
aad
xor
push
mov
and
add
mov
push
pop
or
push
add
icebp
filds
push
add
mov
and
cmp
xchg
add
pop
out
dec
sbb
mov
addb
inc
in
sbb
add
loope
add
cmpsb
add
mov
push
mov
xchg
add
push
jnp
aad
mov
imul
sub
add
fimuls
cli
sbb
or
add
add
add
sahf
out
into
adc
mov
add
stos
jno
ret
mov
xor
inc
add
add
out
jmp
add
sub
add
add
push
pop
pop
cmpsb
add
add
into
test
jg
push
testl
mov
add
add
mov
inc
add
in
jne
add
les
movl
sbb
fstl
add
add
add
push
add
add
add
jne
add
cmovg
xchg
pop
xor
and
fnstenv
or
lret
mov
test
inc
add
mov
sub
aaa
mov
xchg
add
movb
add
xor
jge
int3
adc
cmc
fistpl
inc
add
lret
mov
add
stos
push
add
jns
push
add
ds
ljmp
mov
add
mov
add
pusha
add
mov
lock
add
add
mov
add
add
add
add
mov
loopew
aaa
cmpsl
nop
add
add
push
cmp
rolb
out
jbe
pop
dec
lds
push
add
pop
add
xchg
lds
push
inc
js
xor
or
add
xchg
inc
add
cmp
add
add
jg,pt
lock
ja
xlat
lods
pop
pop
mov
loope
rolb
icebp
dec
lods
mov
imul
add
nop
add
shll
push
or
add
imul
add
add
sbb
add
push
add
mov
add
add
add
stos
xchg
inc
roll
add
call
ret
outsl
cmpsl
sbb
add
movl
sti
sub
add
divl
decl
xchg
xor
mov
mov
imul
add
add
add
mov
add
jge
es
or
ljmp
cmp
clc
push
add
add
xor
xor
mov
dec
mov
or
clc
jbe
xchg
outsb
push
add
in
loopne,pn
scas
mov
out
jo
jle
add
add
mov
mov
pop
lret
stos
jo
pop
dec
or
cli
insb
test
inc
imul
popf
adc
je
dec
mov
add
mov
push
add
mov
fistpll
sahf
and
push
add
mov
add
adc
fisubrl
add
mov
and
add
add
leave
int
bound
mov
sub
imul
add
add
add
mov
test
adc
test
loop
adc
add
mov
int3
icebp
inc
add
push
add
aam
mov
mov
add
lret
inc
mov
popf
cs
mov
add
pusha
add
add
add
mov
add
pop
adc
inc
add
push
add
mov
shll
das
addb
and
inc
add
mov
ret
inc
add
insl
cmpsl
mov
add
pop
montmul
cmpsb
add
arpl
je
cmpsb
add
out
push
add
mov
add
sahf
in
mov
mov
add
dec
xchg
pop
outsl
jbe
cmp
add
cmp
arpl
add
sahf
jno
add
ret
addb
bound
mov
into
mov
add
mov
push
xlat
out
pop
pushf
xchg
scas
pushf
jg
aam
cmp
xor
loop
pop
sti
cmpsl
lret
mov
jg
movsl
fiadds
mov
lret
js
add
add
mov
push
xchg
add
mov
adc
jle
add
sbb
add
add
add
add
sub
sti
fidivrl
mov
std
insb
leave
jg
add
mov
add
test
xchg
push
add
push
or
mov
rorl
add
push
mov
pop
xchg
add
mov
sub
into
mov
lret
movb
nop
add
test
lret
add
add
das
das
out
push
add
test
mov
pop
mov
push
cwtl
and
push
pop
lods
int3
mov
rolb
ret
shl
add
repnz
xchg
adc
mov
jns
int
push
add
mov
add
in
pushf
mov
add
add
jns
mov
es
add
dec
movl
add
xor
cmpsl
rolb
cltd
ja,pt
icebp
lret
bound
mov
pop
pop
mov
outsl
cmc
mov
xchg
rolb
and
mov
add
push
bound
mov
add
loope
and
sub
add
out
int
xchg
xchg
push
add
mov
roll
sub
mov
add
jns
xor
add
and
add
add
imul
add
rolb
cmp
mov
mov
xor
push
sbb
mov
add
or
xchg
jno
lcall
cli
int
out
lods
and
add
out
mov
mov
stc
idivl
pop
mov
mov
sbb
cmp
adcl
test
add
jbe
popf
push
add
pop
lret
jg
add
sti
and
in
icebp
mov
push
add
rcrl
add
lret
pop
ja
je
aaa
dec
dec
test
xchg
jg
aad
add
mov
dec
rolb
push
add
add
out
int
mov
add
js
std
call
mov
add
lea
add
add
and
push
pop
cmp
push
add
add
add
test
push
add
mov
rolb
pop
imul
and
mov
pop
std
sub
and
mov
jle
sbb
add
dec
test
pusha
add
xchg
add
rolb
mov
bound
mov
movb
outsl
push
xchg
mov
add
add
adc
cli
mov
add
add
cli
into
push
add
or
pop
mov
jb
cld
xor
add
jbe
mov
inc
test
movsl
je
dec
push
or
out
mov
and
mov
add
add
cmpsl
jns
pop
sbb
mov
add
js
add
xchg
add
add
addr16
or
inc
add
test
cmpsb
add
add
add
cmpsb
add
add
repnz
test
sbb
aas
or
cmp
jge
stos
mov
lods
mov
adc
pop
jns
add
ja
push
mov
add
mov
push
add
mov
lods
inc
data16
cmpsb
add
add
xor
lds
imul
es
fcmovnb
add
into
pop
jb
shll
data16
sarl
cmp
add
jb
push
add
add
enter
fsubrl
pop
pop
sub
xor
dec
mov
mov
adc
jo
ds
add
push
jne
add
mov
sti
cmovae
add
add
popa
sahf
into
mov
wbinvd
add
push
add
pop
jle
movb
adc
test
mov
test
add
mov
in
mov
fadds
mov
out
insb
mov
bsr
add
add
sub
addb
mov
pusha
add
xlat
push
add
add
je
or
add
jb
mov
data16
mov
repz
stos
rolb
in
rolb
xor
imul
adc
jl
pusha
add
xchg
int3
mov
sub
add
pop
fidivrl
out
dec
push
add
mov
mov
add
add
add
push
ret
subl
push
lret
sbb
aaa
jg
xchg
add
js
cli
and
add
mov
movsb
add
dec
daa
xor
cmp
add
inc
mov
inc
add
add
out
testb
xor
jb
jns
add
jg
ret
stos
inc
adc
xchg
add
addb
mov
push
add
stos
ss
push
add
push
add
add
les
scas
push
mov
dec
mov
setns
add
pop
add
mov
in
addb
sbb
add
cmp
add
icebp
lods
fisttpl
in
dec
push
sti
orl
xor
xchg
add
shrl
dec
sbb
mov
loopne
out
ret
leave
in
add
add
addb
cmp
add
cmp
popf
aaa
sub
add
int3
push
add
add
add
cwtl
test
xchg
add
and
mov
iret
rolb
add
add
dec
push
add
icebp
mov
mov
xor
ja
adc
jle
add
add
popf
fstpt
aam
in
add
mov
mov
add
fstpt
dec
sbb
add
test
mov
push
loop
dec
sbb
test
sub
data16
xchg
add
sub
push
add
pop
movb
dec
lock
mov
sub
ret
pop
dec
cmc
ds
inc
add
incb
rolb
mov
leave
sbb
add
fiadds
leave
movb
cmp
subl
add
mov
add
aaa
imul
add
add
mov
clc
cmp
mov
jns
add
bound
mov
inc
push
add
mov
or
add
mov
add
xlat
dec
pushf
cmp
hlt
add
add
mov
add
adc
leave
inc
test
xchg
decl
int
inc
add
sub
aad
cmp
bound
mov
mov
add
enter
add
lahf
push
add
add
in
add
sub
pusha
add
sbb
jle
mov
xchg
loope
add
stos
pop
imul
sbb
add
add
add
mov
add
mov
add
add
add
jmp
add
xor
dec
xchg
mov
mov
mov
add
add
add
cmp
xchg
orl
lock
cmpsb
add
inc
add
rcrl
pusha
add
mov
pop
sub
add
dec
dec
add
adc
jle
dec
scas
jnp
rolb
or
insl
xchg
add
sub
add
aad
cltd
mov
lcall
pop
inc
dec
out
mov
mov
or
scas
pop
pop
mov
xchg
std
pop
pop
inc
add
shll
or
add
add
add
loopne
sub
jnp
fildll
xchg
test
shrl
and
add
add
dec
inc
outsb
sahf
addb
add
in
dec
loopne
pop
lock
cmp
mov
out
jnp
add
inc
add
add
ja
add
addb
mov
add
mov
pop
bound
mov
add
xor
mov
xor
and
test
ret
sub
mov
adc
and
mov
into
fists
lret
rolb
pop
sbb
out
mov
xchg
imul
mov
test
sbb
cltd
pop
xor
movsl
imul
ds
rolb
addb
jo
fnstcw
movsb
add
or
mov
popa
cmp
add
cs
jmp
add
push
cld
mov
pop
mov
adc
je
ja
lds
add
lea
add
add
add
lahf
lret
push
pop
mov
pop
shrl
inc
test
xor
popl
or
add
sbb
mov
movsl
mov
mov
adc
lret
mov
sub
add
cs
xor
add
mov
add
cmpl
xor
adc
adc
pop
out
jmp
pusha
add
inc
add
inc
add
hlt
add
lret
add
into
adc
push
insl
ficompl
idivl
pop
in
call
jle
mov
popa
cwtl
jle
pop
outsl
fwait
pop
in
lds
and
inc
add
add
add
add
mov
imul
or
insl
push
jne
loopne
adc
add
ja
aas
pushf
cld
insl
loopne
imul
mov
add
add
rolb
cmp
add
pop
out
push
dec
adc
or
sub
xor
outsb
mov
movb
stc
testb
mov
jmp
pop
popf
aam
jns
lahf
jecxz
xchg
add
iret
scas
mov
testl
mov
add
imul
pop
sti
outsl
jle
cmp
imul
loope
or
add
pop
lret
out
mov
adc
ret
inc
add
cld
rcll
lds
and
add
cmpsl
mov
sti
pop
dec
mov
lcall
add
mov
out
ud0
add
mov
into
bound
mov
xchg
jbe
testb
push
add
mov
jge
add
les
sbb
outsb
fisttps
pop
and
cmp
sub
fistpll
mov
mov
add
add
mov
adc
outsl
sbb
add
adc
mov
add
test
mov
cmpsb
add
clc
add
mov
hlt
add
dec
xchg
xchg
into
cli
sahf
sub
add
jno
add
ljmp
pop
stos
mov
add
add
xchg
jae
add
stos
xchg
add
add
in
insb
cmp
pop
mov
add
add
mov
movsl
jle
cmp
mov
and
mov
pushf
xlat
jno
add
mov
xchg
add
mov
push
add
xor
cmpsb
add
test
add
mov
add
add
daa
push
add
add
insl
out
add
clc
xor
mov
adc
arpl
test
mov
push
add
xchg
add
add
aaa
mov
decl
sbb
xchg
add
jmp
add
mov
rcll
dec
adc
push
push
add
add
popa
pop
sbb
inc
add
in
push
add
addr16
push
add
roll
das
stos
jp
sub
add
add
add
add
outsl
push
add
add
xor
flds
push
add
cmp
aam
inc
pop
pushl
outsb
pop
fstpl
dec
clc
push
icebp
sbb
out
fists
dec
and
enter
fcmovnb
inc
std
imul
add
mov
add
nop
add
add
pop
out
bound
mov
cmp
fwait
call
jp
fnstenv
pop
pop
add
in
add
inc
loope
cmp
xor
jge
dec
jle
sbb
or
int3
add
mov
nop
add
add
rcr
jne
and
sbb
or
call
add
mov
add
mov
mov
imul
push
mov
xchg
add
xor
testb
pushf
scas
int
jo
xlat
ret
and
mov
add
add
inc
add
add
cmp
or
push
add
fisttpll
xchg
add
push
out
add
push
add
gs
js
ds
aad
add
mov
test
add
sbb
add
or
cmp
cmp
add
daa
cmpsb
add
adc
mov
mov
cli
mov
add
jmp
fsubrs
add
mov
push
mov
push
add
in
cmp
mov
in
adc
jae
sbb
js
add
jmp
fdivr
stos
std
aad
call
dec
scas
movsl
std
addb
hlt
add
stos
inc
add
repz
add
repz
add
add
add
cmp
mov
ret
enter
ss
add
repz
sarl
bound
mov
sbb
add
mov
xchg
mov
mov
jmp
sbb
add
add
add
xchg
and
ljmp
aad
sub
xchg
or
sbb
add
fdiv
cmp
add
add
fcoms
mov
scas
sbb
ljmp
push
sbb
add
or
xchg
add
out
addb
jns
sub
add
add
aaa
out
and
and
xor
popf
imul
out
mov
pop
call
add
pop
push
pop
dec
loopne
addb
add
mov
stos
inc
add
lods
leave
mov
js
add
jmp
ljmp
add
mov
cmpsl
lcall
add
add
add
jle
pop
jle
jmp
outsb
or
add
ljmp
out
fimuls
movsl
int3
pop
std
lcall
cmpsb
add
addb
add
stos
pop
cli
or
add
imul
xchg
add
mov
add
movsb
add
pop
out
jae
push
test
insb
add
mov
pop
add
mov
inc
pop
out
xor
and
mov
add
subl
rcll
stos
add
leave
fiaddl
pop
cli
push
add
add
inc
add
add
testb
add
fstps
xor
jmp
mov
daa
or
add
cmp
or
add
pop
shll
or
pop
pop
and
mov
or
pop
imul
sbb
stos
mov
add
xchg
adc
add
data16
movsl
into
repz
add
add
sbb
aam
scas
outsl
fdivrl
outsl
jbe
push
add
or
xor
lods
icebp
outsb
inc
mov
push
add
xchg
jns
inc
add
add
insb
decb
dec
stos
cmc
or
add
repnz
add
sub
inc
add
jge
rolb
or
inc
jnp
mov
pop
lahf
fcom
outsl
mov
add
mov
add
add
cwtl
addb
and
in
insl
xchg
mov
xlat
addl
jbe
mov
dec
scas
dec
pop
dec
mov
add
add
add
lods
pop
jne
mov
adc
cli
inc
add
hlt
add
push
stos
fnsave
jp
cmp
add
add
lret
aad
add
and
mov
mov
movb
in
add
gs
fldl
add
jmp
add
idivl
lods
dec
jns
ja
xchg
andl
xchg
add
add
cltd
push
mov
inc
add
sbb
add
cmpsb
add
add
xchg
mov
adc
addb
inc
add
imul
fstpt
xor
and
add
les
ja
mov
jle
or
insl
xor
push
add
scas
cmpsb
add
add
dec
sbb
push
mov
add
mov
add
mov
jb
jmp
bound
mov
mov
or
add
add
inc
add
sub
movsl
test
add
jbe
arpl
jecxz
fstps
shll
pop
and
mov
mov
out
aad
xor
and
mov
cld
test
add
xor
lcall
cmp
jne
and
or
js
mov
mov
add
movb
aaa
int
leave
je
add
add
inc
add
cwtl
fistpl
adc
in
insl
cwtl
pop
shll
add
mov
add
add
push
or
rcrl
je
test
out
outsb
mov
inc
add
insl
movb
dec
mov
loop
jns
dec
cmp
add
scas
push
add
into
fildll
fsub
add
out
add
gs
mov
repnz
imul
mov
dec
gs
add
pop
int3
lahf
int3
cld
rolb
add
shrl
xchg
mov
or
movl
testl
leave
daa
filds
mov
add
mov
adc
cltd
lea
add
add
add
lds
adc
jg
add
daa
xchg
lods
pop
daa
dec
dec
pop
or
inc
add
mov
pop
pusha
add
repz
lcall
and
mov
cmp
data16
shll
lcall
add
add
sbb
mov
add
add
mov
add
xor
and
cwtl
push
add
insl
mov
jns
add
out
dec
adc
and
test
setb
repz
into
pop
mov
dec
xchg
add
lods
aaa
cmp
lds
out
cmp
add
mov
mov
pop
xlat
pop
out
insb
pop
inc
jle
or
cmp
add
inc
add
mov
and
mov
add
add
icebp
inc
add
jge
pop
rolb
bound
mov
add
inc
add
test
add
add
add
add
das
das
cwtl
mov
popa
dec
pushf
push
movsl
gs
cli
mov
pop
ss
add
xchg
sub
and
loope
leave
sbb
dec
insl
out
rolb
iret
loop
jne
dec
add
hlt
add
out
insl
cmpsl
jecxz
or
in
cmp
das
mov
dec
das
fistpl
inc
test
push
outsl
shrl
sub
jl
inc
add
cs
jne
adc
add
js
add
lds
lret
add
jo
mov
cs
or
add
add
jae
fdivp
rcl
add
add
add
dec
pop
xor
je
mov
dec
icebp
testb
divl
fadds
dec
and
jb
ret
push
add
adc
jne
xchg
add
ficompl
in
pop
arpl
add
lcall
xchg
pop
ffree
add
pop
jecxz
movb
sbb
adc
pop
lods
inc
add
sbb
dec
xchg
addb
add
add
out
in
and
bound
mov
add
clc
popf
movsb
add
in
gs
pop
add
cmpxchg
stos
mov
add
and
jle
push
xchg
in
mov
sub
add
ja
fisttps
add
cli
ja
enter
iret
fmulp
lahf
dec
or
xor
in
cmc
int
add
add
pop
xor
push
push
add
int
add
pop
pop
fcompl
lahf
addb
add
sub
xchg
jns
sub
mov
scas
mov
sub
btr
and
jmp
dec
mov
cmp
add
icebp
mov
push
mov
xchg
add
mov
test
out
addb
sbb
sub
vpunpcklbw
mov
xlat
cld
lea
jno
outsb
mov
mov
dec
rolb
cmp
push
hlt
add
add
iret
jo
out
insb
pop
mov
add
int3
imul
das
push
add
add
mov
mov
sbb
xchg
add
movb
xchg
push
add
add
add
push
add
mov
inc
aas
pop
cmpsl
fdivl
add
insl
and
jle
adc
repz
adc
add
sbb
icebp
xor
pop
gs
add
xlat
fldl
inc
add
xchg
incl
int
lods
imul
inc
sub
and
mov
jae
les
mov
dec
and
xchg
add
adc
fnsave
inc
and
jno
add
addb
add
mov
in
sbb
jle
lret
fstpt
testb
out
out
ret
and
mov
ret
loop
xchg
cmpxchg
inc
add
sbb
mov
int3
push
enter
repz
jnp
add
xor
pop
push
inc
mov
aas
mov
push
jno
ret
rolb
fwait
gs
sub
add
mov
popa
xor
sbb
stos
int3
aaa
xchg
add
mov
out
add
leave
sbb
mov
add
add
jmp
das
cmpsl
aas
daa
mov
dec
addb
ret
add
ja
cltd
rcrl
adc
push
add
jnp
add
inc
lret
mov
rolb
imul
xor
jg
aaa
or
add
jmp
lea
add
faddl
jmp
xchg
sub
lea
add
bound
mov
sbb
enter
inc
add
add
mov
fistps
dec
xchg
jno
and
mov
lods
mov
add
add
lret
push
iret
sti
pop
pop
jmp
mov
lea
repz
test
jge
clc
push
sbb
push
add
add
or
mov
mov
std
outsl
jmp
cmpsl
mov
lea
std
stos
js
outsb
mov
cmpsb
add
sbb
iret
std
or
adc
sub
mov
add
push
and
add
movsl
jl
jge
cld
adc
xchg
mov
pop
rolb
inc
std
mov
fucomi
sub
lret
mov
add
into
fldcw
cmp
pop
jbe
push
add
fisubl
mov
add
in
int3
scas
fcomip
nop
add
movb
testb
sbb
mov
add
jb
sub
add
loopne
pop
adc
ficoml
mov
mov
or
mov
add
jbe
pop
movsl
sbb
cli
stos
jl
mov
mov
rcrl
cmp
add
add
add
mov
add
add
mov
mov
add
rolb
mov
int
rolb
and
mov
add
pop
iret
dec
in
add
mov
js
aad
push
lock
ffree
add
add
cli
cmp
dec
cmp
mov
insb
xor
add
add
stos
cltd
cmp
mov
out
push
inc
dec
test
rolb
in
cmp
and
mov
aad
out
fdivr
in
pushf
mov
cmc
repz
add
jecxz
test
add
add
add
mov
aaa
adc
lock
scas
cmp
add
aaa
aam
je
fnstcw
bound
mov
mov
sbb
mov
hlt
add
add
aad
aam
mov
add
mov
mov
add
mov
jo
pushf
pop
pop
xchg
add
add
mov
mov
cld
mov
rcll
add
xchg
add
add
or
nop
add
jg
or
addb
add
addb
mov
add
aaa
add
leave
repnz
dec
inc
adc
add
add
jbe
lcall
inc
add
dec
mov
and
push
cmp
pop
std
cwtl
jno
bound
mov
int
ret
or
push
out
adc
add
insl
xor
xchg
xchg
add
add
dec
imul
ja
push
mov
and
ljmp
inc
mov
cs
cmp
add
adc
test
stc
inc
add
pop
push
fcoml
add
xchg
add
xchg
push
add
cmp
add
jg
ret
add
popa
hlt
add
add
fldt
cltd
icebp
xchg
pusha
add
xlat
pushf
mov
jmp
sub
add
daa
repnz
add
add
rolb
les
nop
add
add
loop
adc
mov
push
add
gs
add
lods
jns
mov
dec
fnstcw
inc
nop
add
fwait
sub
mov
adc
push
popf
repnz
call
add
add
mov
add
pop
iret
sti
movsb
add
mov
cmp
cmp
push
mov
jns
add
xchg
add
add
or
add
add
add
fidivrl
or
sbbl
lods
inc
add
add
addr16
add
xchg
cmp
or
pop
push
adc
into
std
ret
sub
pop
hlt
add
rcr
mov
cmp
mov
add
faddl
add
add
add
mov
out
adc
xor
jno
add
add
xor
out
mov
outsb
jg
lds
imul
nop
add
mov
mov
movsb
add
push
add
add
test
xchg
xchg
mov
add
lds
push
lret
inc
sub
aaa
lea
push
add
add
add
add
cmc
fcoml
or
sbb
jnp
addb
dec
lock
fsubr
fwait
inc
add
lret
pop
add
jecxz
jno
push
add
rorl
and
mov
ret
cmp
add
xchg
call
jp
jne
sbb
test
std
dec
xor
xchg
add
xchg
add
sub
add
movb
push
add
inc
add
xor
lahf
mov
cmp
add
push
add
fsubs
data16
add
incl
add
pop
movsb
add
pop
add
lahf
lret
add
add
mov
xor
addl
pop
adc
inc
add
mov
fadds
cmp
mov
add
push
fsub
adc
xor
mov
dec
pop
cwtl
ljmp
push
add
add
adc
mov
dec
into
addb
add
lret
addb
xchg
clc
xchg
jmp
add
fisttpll
stos
xor
xchg
add
cmp
add
mov
add
add
mov
add
fdivrp
rolb
add
inc
lods
xchg
cmpsl
ds
jecxz
std
fs
mov
mov
add
imul
add
insl
aas
sbb
add
insb
add
mov
adc
jle
cmp
xchg
add
add
add
mov
add
adcl
mov
pop
stc
add
mov
mov
scas
into
push
push
add
daa
pop
filds
pop
cltd
adc
das
enter
mov
mov
inc
add
mov
in
sti
out
pop
mov
add
mov
add
jmp
add
dec
pop
das
sub
add
add
add
mov
cmp
add
add
inc
push
add
repnz
mov
add
push
mov
push
add
cmp
loopne
sub
jno
insb
mov
aam
mov
and
xchg
add
add
call
insb
cli
in
xchg
push
add
add
xchg
add
leave
sbbl
add
int
ljmp
xor
pop
add
add
ljmp
enter
pop
xlat
sub
scas
mov
mov
push
mov
jge
pop
mov
add
ss
sbb
or
les
cmp
or
add
pop
push
add
pop
adc
jmp
add
add
add
xlat
and
movsl
test
push
add
rcr
sub
add
add
push
scas
addr16
jne
fstl
testb
scas
xchg
stos
lret
enter
add
mov
push
push
push
daa
push
add
sbb
pop
fmuls
std
pop
stos
xchg
pop
sub
jecxz
add
add
jle
cs
add
mov
cmp
pop
add
iret
icebp
repz
add
xor
and
stos
xchg
add
add
mov
cmp
add
add
rolb
scas
lea
adc
icebp
dec
fcomps
ds
daa
popf
push
bound
mov
stos
mov
add
jbe
scas
sub
in
dec
cld
mov
add
in
and
add
ds
lcall
add
xor
bound
mov
mov
stos
lock
add
add
add
mov
outsb
add
add
mov
dec
aas
lcall
inc
add
xor
jno
aad
in
pop
dec
in
pop
pop
xchg
add
and
push
or
add
push
add
iret
test
jg
add
mov
sub
lds
add
enter
lea
cmc
cltd
sub
inc
mov
add
loopne
dec
pop
and
cmp
out
pusha
add
inc
add
mov
popa
add
push
rolb
decl
pop
je
lods
sub
jp
push
cmp
jbe
outsl
inc
adc
add
cmp
std
pop
pop
outsb
and
int3
movsl
lds
cltd
cmp
xchg
inc
rorl
rolb
loopne
mov
lods
pop
das
jbe
mov
mov
add
add
pop
add
cmp
cld
out
adc
jae
add
add
jmp
add
cli
das
cmp
add
and
mov
addb
add
add
add
test
push
mov
add
bound
mov
add
fbld
xchg
jle
add
or
jne
sbb
add
add
in
pop
mov
leave
bound
mov
add
add
cmpsl
mov
cs
in
add
test
fidivl
jbe
in
mov
xor
popa
ja
add
scas
decb
add
push
outsb
arpl
fcompl
test
add
cmp
add
xor
jb
ret
add
test
add
push
out
dec
xchg
pop
mov
ficoms
and
and
in
push
int
fs
cmp
cmp
fwait
or
test
cmp
into
data16
lock
sub
adc
cmp
adc
addb
sbb
push
fistps
pop
stos
rcll
aam
add
add
add
imul
mov
mov
rolb
ljmp
scas
out
pop
rolb
fdivrl
movsl
movb
xor
mov
add
dec
rolb
push
fs
bound
mov
xchg
xor
jle
add
jge
or
xchg
dec
cmp
adc
xor
lcall
in
gs
fcmovne
or
add
xor
add
add
movsl
jno
dec
xchg
ds
inc
add
js
sbb
mov
and
insl
mull
mov
add
hlt
add
add
add
xchg
add
add
sahf
decb
add
mov
aam
fists
add
movb
sahf
jbe
aas
sbb
add
push
rolb
xor
inc
adc
add
gs
jns
xor
test
jnp
add
jae
add
cld
add
add
sbb
loopne
jno
pop
push
add
sbb
add
mov
mov
int
nop/reserved
leave
mov
lahf
fcoml
sbb
push
test
xchg
ss
add
xchg
or
add
into
adc
xor
lock
add
iret
add
inc
add
mov
add
add
je
mov
jbe
pop
out
roll
pusha
add
jg
add
dec
ja
push
add
insb
in
mov
adc
hlt
add
add
aam
in
jg
call
push
mov
out
sub
sbb
xchg
ja
xchg
xchg
cmp
cmc
popa
mov
add
add
inc
pop
add
xor
jg
arpl
sbb
add
jno
arpl
add
xor
mov
shll
sbb
pop
repnz
lock
add
nop
add
lea
rolb
add
or
mov
mov
cmp
add
add
les
cmpsb
add
lahf
xchg
add
push
add
sbb
xor
fwait
mov
mov
add
mov
add
add
add
mov
lcall
add
imul
add
add
cltd
add
mov
stos
clc
mov
lds
call
or
rorl
push
add
mov
add
int3
push
aaa
jo
sub
add
xchg
add
add
sub
hlt
add
dec
cmp
add
add
cmpsl
andl
add
add
sbb
sbb
add
into
and
lea
mov
aam
mov
arpl
addb
sbb
and
inc
leave
insb
jno
jbe
xchg
int
add
sbb
sbb
add
lcall
cltd
push
add
adc
popf
out
hlt
add
add
dec
inc
pop
and
sub
cwtl
popf
enter
add
xor
add
jne
add
test
sub
sub
fstps
sub
jnp
push
xchg
aaa
jmp
lret
or
cmp
xchg
mov
stc
nop
es
add
test
add
stc
nop
es
xchg
add
mov
xor
pop
decl
stc
nop
es
jge
add
shlb
add
inc
loopne
nop
es
add
dec
mov
sub
je
stc
nop
es
fistpl
scas
decl
nop
cld
nop
jmp
xchg
dec
pushf
xchg
add
pop
ror
push
mov
xchg
ret
dec
add
fildl
mov
add
je
stc
nop
es
xchg
aaa
add
adc
nop
es
add
add
add
call
stc
nop
es
xchg
add
add
pop
add
stc
nop
es
add
pusha
mov
mov
popf
stc
nop
es
or
add
sub
nop
cld
nop
jmp
add
add
add
addb
xor
mov
xchg
ret
push
mov
stc
nop
es
add
pop
add
rolb
icebp
dec
pusha
stc
nop
es
rolb
jecxz
mov
add
push
stc
nop
es
sub
dec
mov
mov
push
mov
xchg
ret
add
push
add
add
add
xchg
inc
add
dec
sub
push
mov
xchg
ret
xchg
divps
add
mov
stc
nop
es
add
sub
stc
nop
es
add
xchg
mov
push
mov
xchg
ret
les
incb
pop
leave
fdivrl
stc
nop
es
add
mov
cmc
data16
jb
add
add
or
nop
cld
nop
jmp
add
arpl
add
mov
jne
stc
nop
es
daa
unpcklps
add
es
sub
push
add
push
add
add
mov
push
mov
xchg
ret
add
add
movb
add
stc
nop
es
mov
mov
add
stc
nop
es
or
add
add
add
dec
call
stc
nop
es
add
add
push
pop
aaa
pusha
add
cmp
nop
jmp
daa
call
add
data16
add
stc
nop
es
add
mov
fwait
add
push
mov
xchg
ret
or
pushf
or
sbb
jb
sub
sub
add
lcall
add
outsl
nop
cld
nop
jmp
aaa
add
push
add
jp
rcll
add
adc
sub
add
fcompl
cld
nop
jmp
enter
push
mov
packsswb
fmull
es
ret
add
dec
add
loop
scas
mov
stc
nop
es
add
or
scas
enter
jb
icebp
enter
add
mov
stc
nop
es
xchg
add
pusha
jmp
add
sbb
roll
xchg
ret
pop
dec
add
mov
sub
stc
nop
es
push
pushf
add
push
stc
nop
es
paddd
enter
push
stc
nop
es
sub
rclb
dec
call
nop
cld
nop
jmp
sub
push
add
incl
nop
cld
nop
jmp
push
add
add
fs
nop
es
add
add
jns
enter
jb
add
cmpsb
add
clc
add
stc
nop
es
dec
call
testb
mov
push
add
stc
nop
es
pop
add
push
out
mov
add
add
add
add
add
repz
out
push
stc
nop
es
push
dec
adc
add
add
lret
stc
nop
es
add
add
dec
nop
cld
nop
jmp
add
add
add
mov
enter
jb
mov
sldt
call
add
xchg
push
push
mov
ds
out
decb
or
mov
mov
mov
add
add
add
stc
nop
es
mov
add
addb
pusha
add
mov
stc
nop
es
add
aaa
dec
lcall
stc
nop
es
pop
add
mov
sbb
stc
nop
es
fildl
mov
jg
test
add
nop
es
cmpsb
xchg
push
add
mov
add
add
add
add
add
cld
enter
mov
stc
nop
es
gs
subb
push
stc
nop
es
jge
fildl
add
add
stc
nop
es
add
or
pop
lods
stc
nop
es
adc
add
pop
add
nop
cld
nop
jmp
add
adc
add
mov
es
add
stc
leave
jecxz
pop
stc
nop
es
ret
add
add
add
fstps
push
stc
nop
es
mov
add
sub
xor
mov
stc
nop
es
jge
call
add
stc
nop
es
mov
orb
add
add
stc
nop
es
push
add
inc
or
add
nop
es
add
add
mov
es
add
fldt
or
nop
es
pop
pusha
subb
mov
adc
nop
es
add
add
sahf
push
mov
add
add
add
int3
or
jle
push
mov
xchg
ret
ror
dec
stc
mov
test
add
or
add
add
add
pop
not
stc
nop
es
add
mov
add
dec
ss
dec
stc
nop
es
andb
sub
add
jne
stc
nop
es
add
add
add
and
and
nop
cld
nop
jmp
add
add
add
add
stc
nop
es
call
mov
mov
push
mov
xchg
ret
add
aaa
push
add
movsl
testl
mov
xchg
ret
jge
add
or
movb
dec
int3
inc
add
arpl
jmp
or
nop
es
pushf
sub
cmp
nop
cld
nop
jmp
pop
add
mov
stc
nop
es
xchg
add
into
add
add
mov
nop
cld
nop
jmp
mov
add
dec
test
nop
cld
nop
jmp
ds
add
into
add
and
pop
mov
nop
cld
nop
jmp
add
add
shlb
or
cld
nop
jmp
out
push
sub
add
cs
nop
cld
nop
jmp
pop
setne
pop
add
or
es
test
xchg
dec
add
loope
cwtl
add
stc
nop
es
add
add
pusha
stc
nop
es
aaa
push
push
sbbb
popl
stc
nop
es
jge
rclb
mov
add
cmp
es
xchg
les
add
dec
push
stc
nop
es
add
sub
stc
nop
es
rolb
adc
lea
stc
nop
es
add
add
pop
add
mov
stc
nop
es
mov
call
pop
mov
stc
nop
es
add
add
call
nop
es
call
or
sbb
nop
es
add
test
add
add
nop
es
jecxz
add
pushf
adc
loopne
push
xor
sbb
nop
es
add
add
clc
mov
stc
nop
es
push
or
add
push
stc
nop
es
ret
daa
add
xor
stc
nop
es
add
add
pushf
mov
and
mov
xchg
ret
enter
add
pop
inc
add
or
stc
nop
es
mov
cmpsb
dec
jmp
nop
cld
nop
jmp
leave
add
xchg
and
stc
nop
es
push
pushf
mov
leave
sub
call
stc
nop
es
add
jmp
nop
es
add
add
sahf
add
nop
cld
nop
jmp
push
add
add
pop
push
add
into
inc
add
add
add
jg
stc
nop
es
call
mov
stc
nop
es
dec
arpl
dec
incb
pusha
popf
shr
nop
cld
nop
jmp
pop
out
push
add
into
pop
shl
nop
cld
nop
jmp
arpl
push
add
pop
stc
lahf
xor
stc
nop
es
dec
adc
dec
leave
mov
push
mov
xchg
ret
dec
add
mov
stc
nop
es
add
test
add
dec
enter
xchg
stc
nop
es
add
mov
es
add
add
jge
stc
nop
es
test
push
incb
mov
mov
xchg
ret
jecxz
add
add
fimull
aaa
rolb
xchg
ret
add
xchg
push
shlb
adc
nop
cld
nop
jmp
mov
add
icebp
nop
cld
nop
jmp
adc
stc
add
add
mov
lret
cld
nop
jmp
add
or
add
mov
push
mov
stc
nop
es
add
push
add
and
stc
nop
es
call
add
dec
cmp
nop
es
add
add
aaa
dec
lea
stc
nop
es
or
add
add
mov
stc
nop
es
enter
mov
add
stc
nop
es
push
addr16
and
push
mov
xchg
ret
enter
arpl
les
add
add
nop
es
cmp
fldl
notl
adc
add
dec
add
fisttps
jb
stc
add
dec
add
sub
jb
cwtl
add
cwtl
add
add
hlt
add
call
stc
nop
es
jecxz
add
adc
xchg
shrl
nop
es
pop
add
subb
mov
stc
nop
es
dec
add
les
nop
cld
nop
jmp
mov
cmpsb
adc
or
dec
cmp
cld
nop
jmp
push
add
call
jl
stc
nop
es
add
jge
push
push
mov
xchg
ret
leave
mov
add
xor
pop
mov
stc
nop
es
add
add
stc
nop
es
add
stos
push
stc
nop
es
add
dec
daa
call
xor
stc
nop
es
daa
or
add
add
pop
mov
stc
nop
es
mov
add
push
mov
xchg
ret
add
dec
add
cmp
nop
es
add
jge
pop
mov
jbe
sub
adc
add
nop
cld
nop
jmp
add
test
mov
or
push
mov
xchg
ret
call
xor
lret
mov
nop
cld
nop
jmp
xchg
mov
mov
inc
add
sub
add
add
push
push
mov
xchg
ret
add
add
xor
stc
nop
es
xchg
add
pop
orb
cmp
nop
cld
nop
jmp
add
add
mov
nop
cld
nop
jmp
dec
sub
adc
leave
cmpsl
rolb
stos
cmpl
nop
cld
nop
jmp
add
add
push
sub
add
inc
add
add
add
add
stc
nop
es
add
pop
sub
flds
xchg
ret
add
push
sub
nop
cld
nop
jmp
cmpsb
pushf
adc
add
cmpsb
xchg
lods
pop
push
mov
xchg
ret
flds
add
addb
outsl
jmp
stc
nop
es
leave
add
push
out
or
movsb
push
mov
xchg
ret
sldt
adc
add
mov
stc
nop
es
les
imul
and
add
adc
add
sbb
adc
inc
add
incb
dec
add
jp
stc
nop
es
sub
dec
leave
daa
pushf
cvttps2pi
mov
push
nop
cld
nop
jmp
adc
cmpsb
pop
ud1
jle
clc
push
mov
xchg
ret
add
out
ret
stc
nop
es
add
pop
add
add
cld
push
stc
nop
es
stc
push
aaa
add
loope
inc
add
add
leave
daa
mov
dec
stc
nop
es
add
leave
pop
xchg
add
inc
add
popa
add
nop
es
add
mov
nop
jmp
adc
ds
add
shl
stc
nop
es
add
das
mov
stc
nop
es
ud1
add
add
jg
pop
push
mov
xchg
ret
add
adc
cli
push
stc
nop
es
add
imull
sar
es
add
push
je
insb
add
nop
cld
nop
jmp
add
leave
adc
add
je
in
mov
stc
nop
es
add
pop
add
mov
xchg
ret
lcall
mov
add
nop
es
rolb
mov
stc
nop
es
add
mov
push
stc
nop
es
lcall
push
jb
mov
stc
nop
es
jge
aaa
add
add
leave
sub
nop
es
daa
push
mov
into
mov
stc
nop
es
add
add
push
add
rolb
outsb
pop
push
mov
xchg
ret
add
lcall
lock
nop
es
add
jecxz
sub
test
mov
add
adc
add
add
add
xchg
mov
mov
xchg
ret
add
xchg
or
add
nop
add
repnz
nop
es
ds
call
aam
sub
stc
nop
es
pop
add
add
sub
jb
sub
nop
jmp
add
push
xor
add
stc
nop
es
add
xor
xor
push
mov
xchg
ret
or
dec
pushf
dec
push
push
mov
xchg
ret
mov
gs
iret
jne
stc
nop
es
adc
sub
jb
push
out
mov
or
nop
cld
nop
jmp
call
ret
xchg
adc
mov
push
mov
xchg
ret
stc
pop
enter
clc
call
stc
nop
es
add
leave
inc
loope
add
push
push
mov
xchg
ret
xchg
into
add
add
jne
imul
stc
nop
es
cwtl
mov
int3
mov
nop
cld
nop
jmp
jmp
xor
pop
pushl
push
mov
xchg
ret
add
add
stc
nop
es
add
lea
cld
nop
jmp
cwtl
add
adc
mov
aas
mov
stc
nop
es
add
add
repz
nop
es
dec
add
adc
add
mov
nop
cld
nop
jmp
mov
pop
add
gs
stc
nop
es
daa
sub
jge
lcall
mov
add
pop
test
fcomp
push
stc
nop
es
rcrb
add
add
jo
xchg
lret
pop
stc
nop
es
flds
add
xchg
add
mov
mov
stc
nop
es
mov
pop
add
push
mov
xchg
ret
add
adc
push
add
sbb
add
nop
es
jmp
aad
pop
push
mov
xchg
ret
jecxz
enter
mov
xor
stc
nop
es
add
call
aam
inc
add
or
into
add
addr16
xchg
add
add
nop
cld
nop
jmp
arpl
add
push
mov
xchg
ret
mov
add
add
add
push
stc
nop
es
addb
add
push
stc
nop
es
adc
mov
pop
xor
cmp
rclb
inc
push
add
add
icebp
testb
add
add
fcmovu
inc
add
pop
addb
push
faddl
es
add
add
add
xor
adc
loopne
or
jo
inc
add
add
sub
mov
xchg
ret
leave
add
pop
push
lret
add
mov
xchg
ret
add
add
add
mov
stc
nop
es
add
call
pop
call
stc
nop
es
mov
ret
add
repnz
add
nop
cld
nop
jmp
ret
adc
enter
add
cmp
nop
cld
nop
jmp
dec
adc
push
dec
jecxz
mov
cld
nop
jmp
pop
dec
cwtl
push
arpl
add
push
stc
nop
es
mov
call
push
sub
jne
stc
nop
es
add
add
add
icebp
scas
mov
push
mov
xchg
ret
add
add
push
mov
sar
movsl
add
cld
ljmp
data16
outsl
div
nop
cld
nop
jmp
sub
jecxz
add
add
mov
xchg
ret
stc
add
add
push
stc
nop
es
call
add
aad
add
add
es
dec
add
add
adc
enter
push
mov
xchg
ret
addb
add
xchg
les
popa
stc
nop
es
sub
ret
les
add
nop
cld
nop
jmp
push
mov
add
flds
pop
push
mov
loop
jg
inc
imul
pop
add
sub
sar
mov
xchg
ret
add
or
add
sbb
nop
es
mov
or
jg
stc
nop
es
add
push
arpl
add
add
mov
mov
xchg
ret
add
stc
dec
add
arpl
stos
stc
nop
es
dec
arpl
fildl
add
mov
dec
add
push
mov
xchg
ret
mov
or
test
ss
stc
nop
es
add
stc
nop
es
add
mov
cmpl
sub
call
add
jge
stc
nop
es
add
push
leave
adc
mov
loop
jno
add
call
stc
nop
es
mov
sub
jb
flds
add
add
into
add
sahf
sbb
add
push
add
add
enter
inc
add
xor
push
mov
xchg
ret
mov
into
add
add
mov
stc
nop
es
add
movsb
add
call
stc
nop
es
add
into
mov
push
imul
es
add
mov
add
mov
xchg
ret
add
add
or
nop
es
adc
add
add
push
stc
nop
es
add
fldcw
add
stc
nop
es
dec
add
add
add
stc
nop
es
add
dec
add
push
cli
inc
add
test
add
adc
xchg
jb
add
test
inc
add
add
add
add
xor
push
mov
xchg
ret
out
mov
adc
or
jb
lcall
jo
scas
dec
push
mov
xchg
ret
add
adc
push
movswl
stc
nop
es
add
pushf
mov
scas
pop
nop
cld
nop
jmp
adc
cmpsb
enter
add
popa
mov
mov
roll
xchg
ret
adc
call
xchg
add
movzwl
stc
nop
es
add
mov
nop
cld
nop
jmp
add
push
push
sahf
add
stc
nop
es
sub
sub
stc
nop
es
add
dec
mov
add
test
push
mov
xchg
ret
mov
add
push
mov
jmp
add
add
add
inc
add
in
add
add
add
fsts
sbb
mov
nop
cld
nop
jmp
push
enter
sbb
cld
nop
jmp
dec
jecxz
mov
push
dec
loope
xor
stc
nop
es
lcall
pop
shr
stc
nop
es
mov
add
add
mov
repz
add
add
add
add
cld
pop
push
mov
xchg
ret
jge
add
xor
push
mov
xchg
ret
add
add
mov
nop
es
push
add
mov
mov
jne
add
pushf
push
add
daa
ret
push
add
add
stc
nop
es
add
add
stc
sarl
mov
nop
cld
nop
jmp
add
repz
mov
xchg
ret
ds
adc
sub
or
in
add
or
add
xchg
mov
es
mov
mov
add
add
nop
cld
nop
jmp
add
add
push
stc
nop
es
xchg
push
addb
cwtl
adc
xor
add
pushf
add
stc
nop
es
push
add
add
push
stc
nop
es
add
add
stc
nop
es
jmp
call
add
jg
nop
cld
nop
jmp
sldt
xor
cli
push
nop
cld
nop
jmp
add
dec
add
add
std
add
nop
cld
nop
jmp
into
mov
add
mov
xchg
ret
into
pop
les
add
jne
nop
cld
nop
jmp
into
test
mov
dec
push
push
mov
xchg
ret
daa
lcall
pop
push
push
mov
xchg
ret
incb
enter
pop
mov
in
call
jmp
incl
add
mov
stc
nop
es
add
adc
mov
es
add
pusha
sub
add
mov
push
mov
xchg
ret
pusha
addb
icebp
jmp
add
add
cmc
decl
sub
lods
stc
nop
es
add
add
add
into
add
mov
stc
nop
es
adc
mov
repz
nop
es
add
pop
add
add
jb
stc
nop
es
sub
adc
jge
dec
imul
fsubr
lcall
add
into
test
stc
nop
es
ret
daa
add
adcb
add
rep
stc
nop
es
add
sub
mov
push
mov
xchg
ret
add
orb
pop
call
stc
nop
es
out
ljmp
jb
pusha
xchg
or
ret
add
stc
nop
es
into
add
pop
push
mov
dec
nop
cld
nop
jmp
fldcw
or
cmpsb
flds
add
pushl
push
mov
xchg
ret
icebp
mov
add
stc
nop
es
add
adc
add
or
push
mov
xchg
ret
add
pop
push
pop
push
xchg
add
push
mov
xchg
ret
pop
add
mov
nop
es
fldl2t
add
mov
push
add
add
ljmp
popa
mov
test
nop
es
mov
push
jne
stc
nop
es
adc
push
pop
mov
stc
nop
es
dec
pop
mov
bound
mov
divl
lock
stc
nop
es
enter
arpl
es
mov
add
jmp
add
nop
es
xchg
add
testb
mov
push
mov
xchg
ret
add
mov
add
fldl
xchg
ret
stc
add
adc
mov
nop
es
push
add
nop
es
push
add
add
jecxz
pop
test
es
pop
fistpl
or
push
mov
xchg
ret
add
add
repnz
stc
nop
es
pop
or
stc
nop
es
mov
gs
sbb
mov
xchg
ret
or
mov
aaa
mov
arpl
nop
es
call
push
stc
nop
es
mov
add
add
jb
add
add
mov
add
sahf
mov
nop
cld
nop
jmp
adc
add
es
rolb
pop
call
mov
nop
es
add
rorb
nop
cld
nop
jmp
dec
into
add
loope
add
stc
nop
es
add
add
add
mov
add
nop
es
sub
add
push
add
jle
stc
nop
es
dec
lcall
mov
add
nop
es
add
xchg
fmuls
test
stc
nop
es
add
mov
xchg
push
push
nop
cld
nop
jmp
adc
dec
gs
add
pop
call
in
stc
sub
add
repnz
add
add
test
add
ret
stc
nop
es
add
xchg
mov
ret
stc
nop
es
cwtl
mov
add
ds
and
arpl
sub
jge
stc
nop
es
daa
pushf
lcall
mov
repz
add
add
xchg
gs
push
mov
xchg
ret
call
add
add
stc
nop
es
adcb
inc
push
mov
xchg
ret
fstps
cwtl
add
or
xchg
inc
add
add
add
in
add
push
mov
xchg
ret
into
add
stc
nop
es
cmpsb
push
decb
add
add
add
idiv
lcall
and
call
or
add
add
add
inc
in
mov
xchg
ret
pusha
add
mov
sbb
nop
es
leave
rolb
push
pop
jecxz
add
push
mov
xchg
ret
or
aaa
push
add
add
stc
nop
es
les
clc
jne
stc
nop
es
daa
dec
push
call
jecxz
call
cmpsb
add
rclb
filds
xchg
ret
add
leave
sbbb
fisttps
jmp
add
add
add
add
stc
nop
es
add
dec
jecxz
mov
sub
mov
nop
cld
nop
jmp
jmp
mov
stc
nop
es
add
push
add
sub
xchg
add
mov
xchg
ret
call
inc
punpckhdq
mov
xchg
ret
arpl
pushf
pusha
stc
nop
es
leave
add
add
add
push
push
mov
xchg
ret
call
dec
into
push
inc
add
nop
es
add
mov
popa
stc
nop
es
jl
add
mov
stc
nop
es
sub
mov
nop
cld
nop
jmp
mov
add
fisttpll
es
add
addb
ret
pop
lea
stc
nop
es
mov
cmpsb
addb
lahf
push
push
mov
xchg
ret
shlb
cwtl
dec
add
pusha
stc
nop
es
add
add
sldt
loope
test
nop
cld
nop
jmp
add
mov
stc
nop
es
add
cmpsb
add
stc
nop
es
add
add
pop
stc
nop
es
mov
add
pslld
pop
add
stc
nop
es
mov
adc
stc
nop
es
aaa
xchg
ret
add
clc
add
in
mov
adcb
mov
xchg
nop
cld
nop
jmp
add
out
add
call
stc
nop
es
flds
out
arpl
xchg
loopne
loop
and
mov
push
push
mov
xchg
ret
xchg
add
enter
jge
mov
stc
nop
es
xchg
push
add
xchg
add
mov
add
stc
nop
es
add
xchg
sub
jp
stc
nop
es
add
test
stc
nop
es
add
mov
and
push
mov
xchg
ret
daa
mov
arpl
xchg
stc
nop
es
call
ret
add
leave
je
stc
nop
es
add
clc
testb
cmp
ret
xchg
mov
add
add
xchg
dec
mov
stc
nop
es
dec
ret
add
ret
add
inc
cmc
inc
add
add
mov
mov
jae
jb
nop
es
call
outsl
mov
push
mov
xchg
ret
sub
add
jmp
call
or
add
in
cmpsb
add
nop
jmp
add
mov
push
loop
nop
cld
nop
jmp
add
testb
add
add
push
mov
xchg
ret
dec
add
push
add
add
add
nop
es
or
mov
mov
nop
es
add
cwtl
add
add
add
repnz
insb
mov
stc
nop
es
add
add
sub
inc
push
add
add
add
nop
es
ret
add
call
sti
add
add
idiv
incl
call
dec
cmp
cld
nop
jmp
push
add
gs
dec
add
jg
stc
nop
es
lcall
popa
stc
nop
es
adc
add
push
add
add
mov
adc
cld
nop
jmp
add
pop
add
addr16
stc
nop
es
pop
arpl
mov
es
lcall
mov
stc
nop
es
add
mov
stc
nop
es
add
push
dec
pop
aam
cmc
shrl
mov
stc
nop
es
daa
add
sub
add
xor
jl
and
nop
es
add
mov
stc
nop
es
add
push
add
add
xor
add
nop
cld
nop
jmp
gs
mov
add
and
hlt
add
mov
xchg
ret
subb
pushf
push
push
mov
xchg
ret
pop
adc
add
shrb
push
mov
cltd
add
push
popa
xchg
xor
add
frstor
add
add
add
nop
cld
nop
jmp
add
pop
add
pop
pusha
stc
nop
es
add
enter
xchg
add
test
add
mov
xchg
ret
cwtl
dec
into
add
inc
stc
nop
es
jge
add
add
cmpl
nop
cld
nop
jmp
fnstcw
or
add
sub
push
stc
nop
es
add
xchg
add
push
add
pop
mov
stc
nop
es
add
add
stc
nop
es
mov
add
or
incb
aam
sub
nop
es
test
add
mov
stc
nop
es
leave
mov
gs
add
dec
add
mov
xchg
ret
setne
ds
out
lahf
add
stc
nop
es
add
xchg
add
enter
mov
stc
nop
es
adc
add
jge
sbb
dec
add
mov
xchg
ret
aaa
add
add
es
adc
cwtl
add
dec
add
nop
es
mov
aaa
push
dec
leave
add
stc
nop
es
add
movsb
add
mov
stc
nop
es
ds
add
mov
movb
add
call
push
mov
xchg
ret
sub
icebp
int3
dec
nop
cld
nop
jmp
add
cwtl
fildl
add
ds
and
nop
es
addr16
xchg
add
dec
add
xor
add
pop
push
mov
xchg
ret
icebp
add
push
pop
cwtl
mov
mov
stc
nop
es
call
add
xchg
stc
nop
es
add
cwtl
add
ret
add
nop
jmp
mov
add
sub
adc
cld
nop
jmp
add
pusha
add
add
movzwl
push
mov
xchg
ret
sub
mov
push
stc
nop
es
add
add
add
pop
ja
push
stc
nop
es
adc
add
jecxz
mov
push
mov
xchg
ret
add
add
fstpl
nop
es
dec
sbbb
mov
mov
xchg
ret
icebp
mov
pop
add
sar
nop
es
out
push
and
mov
adc
push
add
mov
push
mov
xchg
ret
dec
dec
add
add
stc
nop
es
sub
add
rolb
cmp
insb
in
add
call
mov
stc
nop
es
out
jecxz
sub
add
add
mov
nop
cld
nop
jmp
add
add
shr
mov
stc
nop
es
into
push
rolb
add
xchg
add
mov
xchg
ret
out
add
push
add
add
add
stc
nop
es
add
icebp
sub
adc
stc
mov
stc
nop
es
add
jmp
stc
nop
es
add
enter
sub
add
pop
repz
add
adc
adc
add
add
clc
dec
xchg
dec
add
push
mov
xchg
ret
add
push
aaa
push
dec
cld
push
mov
xchg
ret
add
pop
xchg
mov
stc
nop
es
add
ret
or
test
xor
cs
nop
es
sub
add
fistl
nop
es
sub
add
stc
sub
add
nop
cld
nop
jmp
jge
xchg
push
add
jb
fldenv
add
add
rolb
or
es
mov
jecxz
pop
stc
nop
es
add
add
lods
mov
stc
nop
es
out
enter
xchg
xor
cmp
test
stc
nop
es
add
sub
add
stc
nop
es
or
add
andb
mov
cmc
inc
add
add
add
daa
xchg
add
sub
stc
nop
es
add
add
add
pop
stc
nop
es
incb
adc
add
fdivl
add
stc
nop
es
add
add
xchg
add
es
pushf
addb
mov
add
dec
idiv
stc
nop
es
add
andb
jb
add
sub
or
push
mov
or
and
int
add
add
push
add
jmp
stc
nop
es
add
jge
sbb
add
nop
es
adc
add
stos
shl
stc
nop
es
sub
mov
and
push
mov
xchg
ret
add
adc
cli
jne
stc
nop
es
sub
push
fcoms
lahf
stc
inc
add
cwtl
call
add
add
mov
stc
nop
es
add
xchg
stc
gs
mov
xchg
ret
add
add
negl
jg
stc
nop
es
jge
add
call
stc
nop
es
add
push
mov
nop
add
adc
nop
es
stc
sub
or
popa
add
nop
es
add
mov
mov
das
je
stc
nop
es
call
lea
es
ret
daa
push
add
call
es
sub
push
mov
sub
nop
es
into
mov
pop
mov
nop
es
add
push
pushf
jge
les
add
add
push
mov
xchg
ret
sub
add
mov
add
nop
es
into
aaa
add
mov
stc
nop
es
xchg
add
sbb
nop
jmp
sub
add
push
nop
cld
nop
jmp
add
add
add
mov
dec
stc
nop
es
add
add
adc
add
nop
es
cmpsb
pop
push
and
push
mov
xchg
ret
mov
add
add
test
stc
nop
es
add
leave
add
mov
cmp
cld
nop
jmp
ds
minps
test
in
stc
nop
es
add
fldcw
add
sub
adc
icebp
adc
and
mov
xchg
ret
flds
or
stc
nop
es
orb
enter
test
stc
nop
es
add
add
jmp
jp
nop
cld
nop
jmp
jge
add
fyl2x
pusha
add
cld
nop
jmp
fsts
sub
test
add
mov
mov
xchg
ret
add
add
adc
lret
or
nop
cld
nop
jmp
sldt
scas
push
stc
nop
es
add
add
add
imul
es
mov
pop
adc
push
add
test
add
flds
incb
add
add
out
rep
stc
nop
es
mov
dec
add
add
nop
es
out
mov
mov
mov
xchg
ret
or
add
addb
push
in
pop
mov
push
mov
xchg
ret
adcb
add
nop
es
psllw
xchg
xchg
loop
repnz
add
add
nop
es
pop
add
push
cwtl
pop
push
sub
es
add
add
sti
push
stc
nop
es
add
gs
rclb
fwait
roll
xchg
ret
add
mov
stc
nop
es
mov
push
add
stc
nop
es
cwtl
add
add
mov
nop
cld
nop
jmp
add
call
cmpsl
outsb
shr
stc
nop
es
add
sub
add
jecxz
pop
push
mov
xchg
ret
add
leave
pop
add
nop
cld
nop
jmp
or
mov
daa
test
jne
nop
cld
nop
jmp
les
add
sahf
pop
nop
cld
nop
jmp
adc
add
enter
jmp
cld
nop
jmp
push
push
pop
add
lea
push
mov
xchg
ret
arpl
add
mov
lods
stc
nop
es
push
call
sub
mov
stc
nop
es
add
sub
hlt
add
add
cld
nop
jmp
add
or
sbb
std
incl
push
aaa
pop
pop
push
mov
xchg
ret
add
add
mov
stc
nop
es
cmpsb
add
addb
mov
test
jecxz
stc
nop
es
pusha
adc
or
xchg
cmc
stc
nop
es
add
add
call
cmp
ret
add
test
jp
jbe
stc
nop
es
subb
adc
sub
stc
nop
es
add
push
add
ret
add
sbb
dec
add
add
push
loop
scas
push
sti
push
add
daa
frstor
add
add
xchg
adc
jae
stos
les
dec
insb
add
jl
mov
rep
push
add
lea
and
mov
mov
out
pop
adc
xchg
add
cmp
repz
xchg
fldcw
rolb
adc
add
mov
and
imul
add
add
add
add
add
imul
gs
mov
ficoms
add
xchg
popa
mov
roll
xlat
aas
dec
pusha
add
push
das
mov
int
in
mov
test
int
inc
xchg
insb
xchg
inc
aaa
data16
push
add
add
lret
arpl
pop
add
mov
out
pop
mov
filds
xor
cmc
adc
or
and
mov
inc
dec
xchg
cwtl
cltd
fadds
xor
aas
adc
add
addr16
add
sarl
aas
and
mov
mov
inc
add
add
add
int
push
add
add
lcall
aas
mov
mov
add
add
aam
xor
ficompl
mov
add
es
add
mov
dec
pop
fcoml
add
add
dec
int3
jo
aaa
fildll
cmp
xlat
mov
dec
jne
lock
sti
popf
xchg
add
bound
mov
add
adc
in
push
add
in
adc
jl
add
dec
shll
add
popa
imul
inc
call
add
ja
add
cmpl
mov
repz
add
add
sub
mov
add
xchg
cmp
xor
mov
add
scas
xchg
add
ljmp
add
add
add
in
ret
jae
ret
sub
mov
faddl
pusha
add
mov
std
jg
imul
mov
adc
sub
mov
imul
dec
fbstp
add
add
roll
mov
add
out
add
add
imul
add
add
scas
mov
cmpsb
add
add
inc
pushf
push
insl
in
and
sbb
dec
cld
fcompl
inc
out
mov
xor
add
or
mov
add
pop
loopne
cmp
add
or
in
test
jl
loop
push
add
lcall
add
xchg
add
mov
scas
negl
lahf
cmp
mov
dec
nop
add
mov
scas
pop
stc
dec
loope
add
ds
cmpl
xchg
add
add
jecxz
mov
pushf
sti
jb
icebp
roll
xchg
cs
mov
ds
dec
mov
adc
sbb
ja
or
leave
mov
mov
divl
and
mov
add
loope
mov
int
push
add
add
add
adc
add
add
mov
pop
xor
bound
mov
or
pop
or
int3
jno
dec
fwait
dec
dec
xlat
pop
fcmovnu
add
movsl
jb
out
test
std
popf
inc
or
in
and
mov
mov
jnp
push
add
add
pusha
add
aad
mov
dec
data16
lods
mov
cmc
das
stos
daa
enter
add
int3
repz
push
add
mov
add
loopne
ret
push
add
imul
mov
add
stos
fidivrs
fisubrl
xchg
dec
int
or
add
mov
or
add
into
frstor
jb
rcll
dec
mov
enter
imul
fiadds
lret
aaa
ljmp
lods
and
jo
dec
add
les
and
mov
je
xchg
lods
rolb
add
cmp
enter
and
mov
enter
enter
or
and
mov
add
gs
mov
aam
scas
xor
dec
sub
add
ss
add
mov
loope
mov
add
aas
sti
cltd
mov
add
dec
sub
xor
dec
out
popa
daa
ljmp
push
add
jbe
mov
sbb
popa
xlat
rolb
imull
out
cmp
cwtl
add
xchg
inc
fnstenv
add
fnstenv
push
add
push
shll
add
prefetch
add
lret
sbb
ja
fiaddl
out
testb
add
mov
xchg
mov
mov
push
add
xlat
aad
cld
or
ja
out
mov
pop
push
popf
jns
fldt
icebp
sbb
les
sbb
ljmp
add
inc
add
icebp
sbb
jb
and
mov
sbb
add
add
xor
mov
mov
push
jl
push
add
in
add
pop
mov
sbb
lock
repz
fcmovnu
dec
das
xchg
push
add
mov
pop
or
cmp
add
dec
jno
jg
add
inc
add
add
out
adc
mov
mov
arpl
add
add
pop
iret
jmp
test
add
mov
add
jp
push
add
fistpll
in
mov
ja
jns
pop
push
add
inc
mov
out
mov
add
add
xchg
add
test
movb
daa
loopne
pop
mov
out
dec
ficomps
insb
call
dec
cmpsb
add
mov
add
arpl
or
xor
inc
sub
ljmp
jnp
fiadds
dec
addb
add
xlat
les
loop
icebp
xor
lret
jae
add
pop
dec
enter
sub
add
push
add
mov
add
ja
add
add
fsubs
mov
sub
push
add
inc
icebp
mov
jmp
addb
mov
push
add
add
add
add
js,pn
mov
out
pusha
add
cltd
sbb
stos
js
xor
xchg
add
loopne
dec
adc
mov
mov
push
xchg
mov
xchg
bound
mov
xor
mov
aad
rolb
outsl
xchg
add
fwait
xchg
xchg
mov
std
les
rolb
fsubs
mov
dec
out
xchg
jne
push
pop
lods
add
mov
imul
shufps
xchg
add
sti
fwait
scas
adc
mov
cli
sub
lea
mov
jb,pn
in
sub
sbb
mov
stc
aad
sub
push
add
add
movsb
add
add
movsb
add
dec
inc
and
and
mov
add
xchg
add
lahf
lds
add
adc
out
mov
btsl
enter
add
loop
int3
pushf
outsb
shll
add
push
add
adc
dec
imul
testb
add
xor
testb
fisubrl
dec
cltd
movsl
in
inc
cmpsb
add
sbb
mov
nop
add
jae
cld
add
movb
insl
or
xchg
movsl
icebp
adc
imul
aam
cmpsb
add
sub
and
sahf
adc
push
jbe
pop
or
sub
rolb
sbb
int3
cmp
sbb
add
stos
pop
adc
rolb
int
cmp
add
jg
outsl
into
pop
jp
ror
enter
bound
mov
cli
dec
and
scas
imul
mov
jp,pt
jb
cmp
pop
push
add
mov
popf
dec
xor
jnp
cmp
xchg
adc
es
js
add
push
adc
and
lahf
sbb
out
js
add
add
fwait
xlat
jp
cld
lcall
mov
loop
adc
cmp
add
jecxz
sahf
or
xor
nop
add
add
fnsave
lcall
add
cmp
testl
rolb
inc
add
adc
dec
push
add
mov
into
les
outsl
push
add
icebp
adc
push
add
add
or
test
lahf
xor
push
add
add
inc
addl
test
scas
push
aas
xor
mov
es
adc
mov
add
mov
add
icebp
and
mov
out
add
add
dec
xor
mov
lret
add
cmp
jp
loop
testl
arpl
push
mov
add
or
mov
lcall
add
add
gs
add
add
add
sub
rolb
cmp
sub
add
add
add
add
dec
data16
les
pop
xor
jmp
in
dec
or
add
faddp
and
mov
rolb
in
dec
jle
jns
add
iret
fbstp
mov
cwtl
scas
mov
lds
sbb
mov
add
add
fidivrs
addb
add
jge
data16
sub
imul
rolb
repnz
popf
bound
mov
add
add
and
xlat
or
in
mov
data16
in
inc
push
add
add
cmp
imul
cmp
add
add
and
out
xor
add
flds
add
add
dec
rolb
mov
add
xlat
inc
add
add
cmpsb
add
adc
mov
sbb
add
add
lods
jo
add
dec
imul
mov
mov
sbb
mov
pop
jno
sub
add
out
daa
rolb
addr16
testb
addb
sub
add
inc
dec
lahf
pop
xchg
xor
add
out
stc
xor
inc
add
stos
add
lea
std
adc
aaa
xlat
mov
xor
add
arpl
enter
outsb
data16
adc
add
sub
push
int3
and
mov
push
add
cs
pop
les
cmp
mov
fdivrs
in
mov
int3
sbb
add
inc
add
cld
pcmpeqw
clc
insl
mov
mov
add
mov
aam
pop
call
inc
mov
data16
addb
add
add
cld
call
std
cltd
fnsave
add
ret
dec
je
bound
mov
jb
stos
cwtl
nop
add
push
out
je
push
inc
add
fimuls
into
sub
push
add
add
ret
rolb
addb
add
push
add
into
sub
aam
loope
adc
sub
add
add
add
mov
add
mov
inc
aad
add
dec
scas
mov
add
bound
mov
pop
lea
push
add
mov
add
add
fimuls
jl
out
repnz
add
mov
enter
dec
add
fmull
or
fldl
push
add
mov
add
mov
std
jg
rcrl
dec
sar
add
mov
and
add
add
test
add
add
fisttps
add
pop
lret
push
xchg
out
xchg
add
add
inc
add
add
jb
mov
mov
add
mov
std
int
loopne
mov
repz
add
pop
inc
adc
adc
mov
add
add
adc
pop
mov
addl
add
cmp
mov
and
mov
cmpl
test
mov
in
add
add
add
data16
add
push
xor
scas
sub
add
jo
xchg
xchg
testb
add
ret
add
add
lret
lods
aaa
add
sbb
mov
xchg
lods
out
jge
fwait
cmc
dec
lods
subl
js
sub
adc
xchg
add
cmp
int3
fnstenv
lret
pop
dec
lds
movsb
add
pop
dec
add
and
sub
loope
sbb
int3
pop
xchg
in
push
mov
out
mov
add
insb
or
add
rolb
aaa
gs
add
imul
mov
mov
cmp
add
xchg
mov
add
cmp
movsb
add
add
sub
add
ret
or
add
pop
pusha
add
push
add
ret
jne
mov
stc
lock
cltd
filds
mov
pop
jg
sub
xor
add
pop
xor
fldcw
xor
jno
int3
hlt
add
std
scas
inc
and
dec
mov
add
inc
add
add
pop
mov
add
shl
add
add
leave
scas
mov
and
add
clc
jle
fisttps
push
jmp
arpl
lock
movsb
add
cmp
popf
stos
aam
out
mov
scas
cmp
sbb
enter
int
nop
add
jge
xchg
stos
inc
add
fimull
cmp
enter
popf
pushl
test
aas
xchg
in
sub
lahf
inc
and
aam
js
add
add
push
jnp
sub
sub
add
cmp
add
adc
and
mov
fidivs
add
push
fldt
xchg
or
ret
outsl
mov
cmp
cmpl
mov
test
pop
dec
outsl
popf
jo
notl
aaa
pop
mov
insb
cltd
les
in
cmp
mov
adc
jecxz
add
add
cltd
testb
scas
outsb
mov
lcall
mov
add
or
mov
rolb
dec
in
pop
and
push
add
add
or
lcall
addb
rolb
cmp
fldt
adcl
xor
sbb
mov
aas
out
out
test
push
add
jo
adc
adc
fsts
invd
mov
adc
push
dec
insl
pop
cmpsb
add
add
pop
das
test
in
add
mov
add
mov
shrl
lds
mov
mov
add
rolb
mov
faddl
add
sbb
lret
add
popf
sti
xchg
test
mov
and
mov
add
add
pop
add
mov
in
into
push
jmp
add
mov
les
add
mov
adc
adc
pop
addps
lret
dec
push
add
std
jnp
test
add
lret
addb
pushl
add
out
add
cmp
rolb
sbb
add
push
add
mov
jg
add
leave
dec
mov
mov
aam
xchg
add
in
add
mov
xor
xchg
add
loopne
rolb
or
out
popa
xchg
add
sub
int
mov
insl
cli
popf
rolb
in
xor
mov
daa
sbb
test
xor
pop
xor
sbb
add
mov
mov
add
add
add
je
inc
dec
into
ds
add
mov
imul
lds
mov
mov
add
sbb
push
add
sub
out
push
add
jo
aaa
push
add
xor
mov
mov
clc
out
xchg
sti
cs
add
ljmp
add
mov
fbld
outsb
lds
leave
out
pop
cmp
add
inc
add
add
sbb
add
clc
imul
sti
lea
push
std
call
adc
addb
xchg
outsb
pop
nop
add
mov
jg
mov
mov
ret
xchg
push
mov
add
add
add
and
xchg
pushl
dec
cli
sub
jle
sub
add
shl
and
cmpsb
add
add
inc
adc
test
and
sarl
push
add
add
or
inc
pop
les
movb
adc
sti
push
cmpsl
inc
xor
mov
add
mov
or
iret
pop
lret
lcall
cmp
outsb
jmp
dec
sbb
dec
ljmp
sbb
add
mov
pop
mov
add
dec
das
sub
leave
sahf
test
add
lahf
inc
add
pusha
add
out
add
add
mov
sbb
inc
inc
scas
addr16
inc
add
add
cltd
stos
mov
add
xchg
add
push
xlat
inc
add
jecxz
je
pop
out
add
daa
rep
push
add
push
imul
mov
push
cmp
imul
add
iret
mov
popf
aaa
dec
mov
loop
push
repnz
add
mov
add
adcl
pop
repnz
cmp
cli
lods
adcl
add
sub
mov
add
loop
jl
sbb
and
mov
cwtl
push
dec
cs
add
int
jge
jg
add
add
add
add
hlt
add
rolb
popf
add
dec
lcall
mov
data16
mov
ret
int
cmpsb
add
add
cmp
popa
add
mov
mov
or
sbb
or
ss
sbb
lods
xor
sub
loop
xchg
repnz
mov
outsl
jb
cmp
xchg
add
add
testb
mov
add
mov
repnz
add
add
add
add
xchg
add
adc
jne
pop
rolb
jo
xchg
cwtl
je
and
bound
mov
mov
cmp
ret
test
mov
add
add
add
rorl
rcrl
mov
leave
xor
fcompl
xor
sti
mov
add
aaa
xchg
rolb
push
add
cmp
pop
pop
pop
mov
mov
clc
push
and
movsb
add
frstor
imul
lods
inc
add
add
add
pop
mov
jo
xchg
xchg
add
jecxz
repz
xchg
add
call
gs
ljmp
add
add
add
mov
lret
add
addb
add
add
pop
lock
add
or
xchg
insb
mov
movsl
cltd
cltd
mov
push
movb
dec
arpl
adc
in
outsb
jp
add
add
sahf
sbb
add
mov
testb
add
add
cli
dec
sbb
jl
push
rolb
and
xchg
push
pop
out
loopne
and
mov
add
add
test
add
bound
mov
mov
xlat
jle
xchg
pop
add
mov
jmp
sub
and
mov
mov
lret
xor
mov
add
mov
lock
rolb
sub
add
cmp
loopne
leave
std
loopne
pop
cmpsb
add
pop
jnp
sub
add
add
sbb
int3
cmp
mov
add
dec
push
add
loope
add
push
xchg
add
add
mov
inc
add
fidivrs
repz
mov
add
or
add
pusha
add
cld
movb
dec
pop
fistps
add
mov
sbb
xor
out
fstp
popa
xchg
sahf
lock
out
add
cli
or
push
pop
and
pop
add
add
in
aam
test
adc
mov
add
popa
loope
sub
or
mov
in
add
push
scas
pop
fidivrs
stos
iret
cmp
add
stos
mov
mov
stc
stos
enter
je
push
and
dec
and
lahf
lcall
adc
cwtl
into
xchg
int3
mov
or
sahf
dec
inc
cmp
xchg
add
cs
add
lods
sub
adc
cmp
rolb
jnp
mov
pop
sbb
add
add
sub
mov
jge
inc
add
std
mov
std
mov
imul
add
add
testb
push
iret
stos
addr16
mov
shll
rolb
nop
add
xchg
or
add
stos
lret
add
add
add
push
popa
cmc
fimull
cmp
add
mov
add
add
jo
adc
cmpsl
addb
in
inc
add
dec
es
scas
pop
mov
add
lods
mov
add
rolb
aas
jp
add
imul
add
clc
push
and
out
in
inc
sahf
and
add
add
xlat
mov
add
adc
je
fsubrl
sub
test
mov
mov
sahf
js
add
sahf
jg
sub
das
adc
mov
cltd
or
clc
stos
mov
pop
inc
add
sbb
into
stc
push
add
cwtl
push
add
int
cs
push
add
add
js
std
mov
repz
pop
rolb
psubusb
add
addb
add
add
inc
das
dec
mov
jo
fisubl
pop
repnz
mov
test
or
push
dec
std
cld
movsb
add
add
add
arpl
mov
add
dec
vcvtps2dq
add
mov
sbb
add
add
add
and
mov
mov
mov
sub
orl
data16
data16
pop
pop
in
push
add
cmp
add
js
sub
cmp
dec
jae
add
sbb
add
inc
add
or
add
add
mov
or
cmpsl
repz
arpl
add
rolb
cmpsb
add
xchg
mov
rolb
cmp
add
mov
data16
daa
cs
jo
outsb
sub
push
add
add
hlt
add
push
stc
ret
add
rolb
mov
stc
xchg
insl
js
push
add
repnz
or
add
loopne
pop
and
mov
or
add
sbb
fcmove
jp
aad
aaa
in
pop
loopne
rcrl
bound
mov
add
pop
addb
mov
cmc
fld
add
or
push
add
sub
push
movsl
addr16
gs
adc
mov
flds
outsb
push
add
dec
roll
sbb
add
add
mov
jle
add
add
or
cld
pop
jmp
neg
in
pop
mov
arpl
add
fcompl
movsl
sahf
out
outsb
ror
mov
add
mov
adc
add
data16
adc
sbb
add
out
inc
add
out
sub
sub
add
add
push
mov
jnp
push
xor
decb
xor
and
add
data16
push
add
add
inc
call
addr16
add
jno
push
push
xchg
dec
sub
add
test
and
out
push
add
push
add
sbb
cmp
adc
add
inc
add
mov
jae
jp
call
or
popf
lds
movsb
add
mov
mov
pop
and
hlt
add
or
xchg
add
mov
dec
add
sub
push
add
push
add
add
add
push
add
pushf
mov
inc
scas
pop
stc
and
mov
rolb
jl
or
add
enter
dec
sarl
jmp
add
rorl
add
add
cmp
ret
adc
into
inc
test
add
and
add
ret
jl
add
cld
insb
add
scas
out
insl
daa
or
add
add
cmp
dec
xor
add
add
pop
outsl
mov
fsubr
aam
imul
testl
ja
ds
add
push
add
movb
add
add
jge
cmp
movsb
add
pushf
or
xchg
cli
rolb
push
add
mov
cmp
xor
jo
repnz
jne
testb
cmpl
pmulhuw
out
addb
add
adc
lret
in
in
xor
xchg
add
jg
jno
and
mov
cmc
or
adc
add
add
add
add
mov
nop
add
mov
cmpsb
add
xchg
jp
sti
dec
aaa
xchg
dec
jno
push
add
add
lods
sbb
in
or
jne
ljmp
xchg
outsb
testb
add
sub
mov
addb
add
add
add
add
pop
sub
les
inc
mov
xlat
jge
jno
ret
bound
mov
jae
jecxz
inc
add
out
ret
or
adc
mov
mov
add
mov
insl
push
test
xchg
xor
in
jbe
roll
jno
ret
mov
xchg
lock
ficompl
add
loopne
sub
fimuls
add
mov
cmpsb
add
jae
add
cwtl
xchg
cli
xchg
out
xor
add
and
bound
mov
addb
test
add
adcl
pop
je
roll
add
add
lret
dec
scas
addb
add
cmp
mov
xor
lods
pop
xchg
pop
leave
insl
pushf
push
add
inc
add
add
jno
sbb
add
in
ds
popf
fmul
sub
mov
add
xchg
and
push
pop
sub
or
xor
xor
push
add
mov
lds
push
fdivrs
xchg
adc
mov
popf
or
add
mov
xchg
lea
mov
call
xchg
int
xchg
add
scas
rolb
add
testb
add
roll
jg
jb
lock
mov
add
lods
cmp
sub
add
jae
mov
dec
pop
popa
in
sub
insb
cmp
sub
add
andnps
mov
pop
lcall
push
add
add
add
ss
movsl
testb
jno
loopne
fdivrp
fs
and
fsubl
mov
shl
test
add
xchg
add
adc
dec
mov
adc
pop
sbb
jmp
jno
js
add
mov
add
sub
jmp
icebp
mov
mov
add
in
dec
pop
rolb
add
dec
and
add
jae
add
add
push
add
and
add
lods
les
or
add
sahf
adc
mov
push
add
push
add
mov
xlat
jg
pop
push
push
pop
dec
out
nop
add
add
dec
cmpsl
mov
dec
adc
pop
inc
add
pop
scas
mov
aam
addb
add
cltd
sbb
add
mov
daa
cs
mov
clc
leave
out
das
cmpsb
add
add
add
imul
rcll
add
movsl
add
add
cld
jle
or
lahf
mov
fcompl
add
add
add
mov
add
sub
out
sub
gs
add
mov
add
test
add
mov
lods
je
push
add
add
xor
add
std
sbb
inc
add
pop
fistl
add
push
and
jb
dec
repnz
mov
xlat
jl
add
add
xor
inc
add
xchg
add
lcall
mov
testb
out
in
iret
mov
mov
test
and
je
cmpsl
ds
mov
mov
cmp
mov
adc
test
add
sti
mov
xchg
fiadds
add
inc
fldl
add
xor
popa
inc
add
stos
popf
mov
and
dec
mov
jnp
add
pushl
sub
add
addl
add
xchg
ljmp
cld
inc
push
int3
xchg
mov
dec
mov
adc
out
nop
add
fcmovnbe
or
add
jns
in
in
pop
aam
cmc
movsb
add
mov
and
mov
lahf
cmp
fwait
xchg
js
loope
add
add
mov
ja
and
cmc
push
rolb
mov
lret
push
add
add
push
add
mov
sub
lock
rolb
mov
sbb
in
in
adc
js
dec
sub
bound
mov
out
jo
mov
push
jle
xor
fisubl
sbb
cs
add
push
bound
mov
sub
pop
or
pop
xlat
imul
movsl
mov
outsl
in
fbld
add
addb
mov
call
out
sbb
jmp
leave
push
cmp
iret
movsl
jb
push
add
and
cmpsb
add
sbb
push
lret
dec
add
xchg
adc
sbb
rolb
addl
pop
testb
add
stc
stc
sahf
add
mov
inc
add
imul
testb
shrl
mov
push
imul
xchg
add
mov
xlat
jmp
xor
fwait
jmp
stos
mov
sbb
stos
xchg
add
scas
add
movb
adc
sti
aam
test
sub
add
cmp
add
add
loope
icebp
in
data16
sbb
repnz
iret
cmp
popf
out
mov
lods
mov
dec
push
scas
imul
test
bound
mov
add
popf
ret
adc
std
imul
jo
and
add
sub
adc
mov
out
push
add
fisubl
mov
add
popf
sbb
add
imul
cmp
ret
nop
add
add
push
add
aad
sbb
add
movsl
cmpsb
add
xchg
sahf
inc
add
popa
add
pop
xchg
data16
add
jne
add
add
add
mov
inc
add
mov
add
mov
sbb
mov
stos
cld
xor
pop
or
dec
xchg
imul
xchg
add
outsb
mov
pop
pop
mov
inc
add
cmc
fiaddl
pop
xchg
inc
add
xor
push
sbb
adc
lahf
add
mov
in
test
jae
add
xor
mov
add
sub
add
lret
fistpl
pop
and
mov
add
mov
pusha
add
jmp
add
mov
add
xor
add
mov
fwait
dec
xchg
test
sahf
push
add
pop
cld
mov
pusha
add
jns
sbb
jg
add
xchg
add
jbe
ret
add
mov
add
mov
and
daa
sub
xchg
shrl
mov
repnz
jno
add
jp
mov
add
cs
add
popa
cli
inc
add
int
add
add
add
add
or
xor
fisttpll
rolb
hlt
add
add
jne
outsl
arpl
mov
mov
add
fistpll
ja
dec
mov
xor
mov
mov
loopne
ficompl
inc
xchg
add
adc
push
push
sbb
mov
add
add
add
add
jo
js
in
addb
icebp
push
add
add
sbb
pushf
adc
add
add
adc
arpl
rdtsc
mov
orl
add
ret
test
add
add
mov
mov
mov
add
inc
and
mov
add
sub
jecxz
pop
aad
test
xchg
clc
sbb
ja
sti
aam
repz
add
add
jmp
das
dec
jnp
add
add
lods
lret
add
pop
adc
mov
inc
add
xchg
sbb
add
add
movsl
out
mov
popf
scas
sub
add
movsb
add
cli
cmpsl
clc
pop
inc
and
add
add
addb
xor
jne
add
cmp
or
xchg
ljmp
movsl
sub
add
fadds
push
pop
int
add
add
int
pusha
add
add
add
add
loop
pop
fldenv
fwait
mov
jbe
fisubrl
add
imul
push
add
mov
cmp
cmp
add
add
add
add
jno
loope
int
orl
loop
insl
ljmp
add
push
add
insl
pop
scas
push
or
jnp
sbb
cmp
or
add
pusha
add
mov
add
addb
ret
add
add
les
pop
pop
sarl
cmc
cltd
sbb
add
into
cmpsl
bound
mov
loopne
enter
out
jmp
add
jae
lcall
add
scas
jb
pop
movb
jg
add
adc
push
add
add
daa
ds
add
add
sub
xor
mov
pusha
add
call
dec
sbb
add
add
mov
add
out
push
jp
scas
mov
jno
stos
mov
sub
outsl
imul
rolb
push
ficoml
pop
push
add
add
xchg
mov
mov
and
or
cmp
pop
movsb
add
add
in
xor
cmpsl
outsb
fmulp
adc
dec
out
mov
out
inc
add
std
hlt
add
cld
inc
add
nop
add
repnz
add
add
aam
mov
sti
je
loopne
sub
add
mov
add
in
ficoml
int3
nop
add
sbb
add
add
jno
and
repnz
fsubrp
loop
mov
add
add
dec
and
rcll
or
jo
fidivs
add
and
sbb
fsubl
cmp
int
pop
movb
xor
fnstsw
inc
hlt
add
add
mov
sbb
add
lods
stos
jne
add
sbb
clc
jbe
or
or
add
mov
add
add
pop
xchg
add
add
rolb
lods
stc
sub
decb
imul
mov
in
mov
add
add
add
movsb
add
add
adc
push
add
data16
add
mov
sbb
add
test
xor
and
push
push
dec
lods
rolb
pop
lcall
popa
pop
pop
pop
fdivl
adc
add
add
adc
xor
mov
push
cmpsb
add
add
push
ds
add
add
mov
das
leave
pop
cld
ret
mov
fsubrl
add
pop
inc
xchg
add
or
and
mov
mov
push
aad
xchg
add
xchg
ret
add
popa
daa
hlt
add
loop
hlt
add
mov
add
adc
leave
shll
add
lret
and
mov
inc
mov
inc
add
rcrl
xchg
add
mov
mov
popf
add
add
adc
inc
stos
cmp
xor
dec
clc
out
loop
cltd
ja
add
aas
out
inc
add
add
fdivl
add
aam
movsl
flds
add
add
add
push
dec
pop
inc
add
mov
ja
jg
imul
add
je
cmpsl
stos
jnp
pop
cli
lea
push
mov
add
cmp
add
xchg
jo
jno
cmp
mov
icebp
pushf
pop
mov
inc
mov
testb
pop
sub
add
data16
or
mov
popa
aas
cmp
int
shll
or
lock
mov
and
cmp
std
lcall
jge
in
dec
and
mov
idiv
push
mov
add
cmpsb
add
insl
fdivrl
lods
push
cmp
sub
mov
js
sbb
cmp
xchg
add
lcall
sbb
or
adcl
jmp
rolb
mov
add
push
mov
leave
adc
das
mov
add
add
rolb
inc
out
ret
push
add
add
lgs
loope
add
daa
pop
xor
lret
add
mov
mov
add
add
das
pop
fwait
lret
pop
or
add
push
add
adc
sbb
out
dec
add
add
dec
sti
lahf
push
add
inc
movsb
add
jle
addb
xor
xor
or
sysret
cmpsb
add
arpl
insb
ret
mov
int
mov
and
mov
pop
cmp
aad
push
add
inc
mov
cld
arpl
sbb
movb
cmpsl
icebp
xchg
fcompl
adc
popa
jns
add
in
cmc
data16
mov
add
add
dec
pop
push
aam
jbe
xlat
int
lcall
rorl
addb
pop
stc
dec
and
mov
movsb
add
mov
push
repnz
popa
or
add
push
test
add
mov
popf
sti
dec
out
inc
stos
cld
adc
loopne
gs
xchg
js
repz
stos
dec
in
mov
dec
mov
add
add
pop
rcrl
sbb
loop
cmp
imul
repz
mov
add
or
sub
or
rcrl
aam
sti
add
pusha
add
incb
mov
arpl
jge
adcl
add
adc
add
loope
add
sbb
sbb
and
mov
mov
ret
stos
nop
add
add
add
int
stos
mov
ret
lret
cmp
sbb
mov
pop
add
mov
add
xor
stos
mov
add
ret
inc
adc
push
add
test
add
add
add
cmp
add
rolb
test
leave
testb
pop
movsl
imul
cmp
push
add
add
ret
clc
sub
in
imul
or
add
push
adc
push
xchg
data16
cmp
add
rorl
pop
or
arpl
inc
add
inc
add
pop
pop
inc
add
add
addr16
add
cmp
add
daa
add
mov
sub
ret
add
jns
shll
loop
insb
lret
add
pop
hlt
add
sbb
add
outsb
imul
push
mov
push
add
stc
jne
xchg
add
xor
aaa
cs
add
dec
sbb
insl
adc
jl
or
add
out
add
mov
pop
gs
or
add
movsl
cld
out
sbb
out
rolb
loope
push
add
ficoms
add
push
add
mov
add
add
lret
filds
nop
add
add
sub
jns
sub
add
jnp
sbb
jbe
scas
ss
add
cmp
jge
addb
incl
addb
pop
movsb
add
enter
add
sahf
push
add
frstor
add
cmc
mov
add
sti
mov
test
jno
add
dec
push
cmp
mov
sub
lret
add
mov
or
add
mov
sub
test
in
cmc
loope
add
repz
ss
ds
mov
scas
mov
outsl
add
mov
scas
out
add
xchg
pop
sub
out
mov
push
add
inc
add
add
je
outsb
insb
aam
adc
pop
jmp
mov
add
filds
out
mov
add
adc
stos
fsubrs
enter
mov
into
mov
shl
out
cmp
sti
add
cmp
add
dec
or
mov
mov
add
ret
mov
cmpsl
aaa
movsl
int3
push
mov
sahf
push
add
aaa
sub
mov
add
decl
jle
jne
or
sbb
lea
fucomi
jle
jmp
add
jge
mov
mov
popf
sar
sub
pop
and
ret
out
fbld
mov
cmpsb
add
ficoms
add
add
iret
cmp
sahf
pop
lcall
add
add
jl
sbb
add
add
fsubrs
rolb
pop
lahf
jp
add
mov
mov
mov
xor
int
add
mov
mov
and
pop
aas
rorl
add
add
lahf
jmp
data16
add
add
add
mov
stos
gs
int3
aaa
es
dec
adc
mov
sahf
add
mov
addr16
add
sbb
add
push
push
xlat
jp
xlat
cld
jp
cs
cmpsl
movsl
xchg
addb
add
jb
scas
icebp
rorl
jne
add
ret
pop
addb
mov
add
mov
cmp
int3
mov
add
xchg
mov
or
out
rolb
test
add
add
je
imul
add
add
repnz
mov
lods
test
mov
add
imul
sahf
aad
add
rolb
test
cmpsb
add
add
mov
add
xlat
out
cmp
add
add
mov
sbb
imul
sbbl
in
stos
movsb
add
stc
in
popf
push
aad
and
xor
lret
xor
les
movsl
addb
add
push
add
ror
jp
imul
add
mov
aaa
add
mov
ja
add
test
cmp
mov
add
add
add
loopne
xchg
rolb
push
icebp
xor
jle
push
add
aad
add
dec
xor
jg
inc
add
dec
loopne
orl
daa
mov
mov
mov
add
add
mov
cmp
js
push
stos
icebp
and
mov
rolb
jg
sub
mov
fidivl
add
testb
sub
faddl
add
add
push
add
mov
mov
aam
or
inc
add
add
clc
cli
popf
mov
sub
movsl
adc
mov
add
loop
pop
xchg
push
add
add
add
sub
rolb
dec
mov
add
inc
add
pop
bound
mov
dec
in
mov
call
jmp
sub
sbb
add
enter
repz
push
out
loop
mov
je
mov
mov
dec
cmp
in
pop
push
les
addb
mov
mov
sahf
push
mov
inc
popf
mov
sti
mov
sub
jae
add
popa
stos
lcall
call
add
push
out
lods
dec
pop
jbe
push
lea
and
mov
sub
cwtl
push
add
add
ljmp
add
mov
pusha
add
add
or
jns
add
scas
sub
inc
lcall
push
add
sti
dec
and
mov
lods
jge
cmp
add
out
dec
jne
dec
lock
mov
add
cmp
add
mov
in
or
xchg
movsl
pop
fstpl
jnp
insl
cmc
aas
and
mov
in
data16
jb,pn
xchg
add
dec
xchg
aas
fmull
add
add
dec
fst
add
mov
idivl
add
mov
push
adc
add
or
out
xorl
cmp
adc
addr16
pop
cmp
sbb
xchg
push
add
jmp
into
data16
dec
pop
mov
cmp
or
cwtl
push
add
fisubl
cmp
jns
in
fmuls
push
add
add
add
add
mov
sub
mov
add
test
sub
aad
mov
pop
js
mov
xchg
incb
add
repnz
ja
bound
mov
add
testb
add
aam
jle
mov
and
add
add
add
add
sbb
sub
loop
mov
add
add
bound
mov
add
mov
les
xchg
pop
push
add
add
xorl
add
daa
and
test
pop
xlat
lahf
push
mov
jae
les
and
flds
jl
add
add
arpl
add
cmp
mov
add
imul
cmpsl
aam
adc
add
add
outsl
and
or
inc
add
pop
push
jno
add
add
add
sti
scas
daa
bound
mov
aad
mov
push
add
mov
pop
mov
fldenv
or
xchg
add
sub
xchg
shrl
add
add
scas
mov
add
std
lds
add
add
rolb
add
pop
movsb
add
je
rolb
dec
cmp
imul
xchg
mov
add
add
mov
in
push
push
pop
sbb
insb
and
mov
push
add
loopne
insb
movsb
add
add
add
sahf
jns
add
cmp
rolb
inc
cmp
test
and
mov
stos
scas
ljmp
add
ljmp
loop
inc
add
mov
mov
xor
xchg
mov
add
dec
mov
adc
pusha
add
add
ret
add
test
sahf
rorl
xchg
add
mov
push
ficompl
add
lahf
add
mov
xor
add
inc
add
pop
fstpl
iret
dec
mov
aaa
ret
int3
mov
sarl
add
add
inc
add
add
jo
popa
push
dec
xchg
add
ret
in
push
dec
cltd
adc
int
add
mov
and
mull
jne
mov
cltd
or
cmpl
dec
push
mov
and
fsubrp
gs
movsl
mov
xchg
add
xchg
iret
inc
add
jne
add
add
mov
inc
add
lret
shll
inc
add
mov
stos
leave
test
add
cmpsl
xchg
jp
pop
lret
lcall
add
fsubrs
hlt
add
or
aaa
push
lret
pop
add
lea
mov
jp
rolb
out
outsb
adc
popf
xchg
sbb
pop
addr16
scas
jge
pop
adc
mov
add
xchg
mov
inc
xchg
add
dec
xor
mov
gs
add
loopne
or
xor
jmp
scas
xchg
fisubrs
jecxz
add
and
mov
add
mov
out
out
stos
jae
fwait
mov
cmp
lods
ljmp
add
pop
mov
test
add
data16
lods
xor
out
inc
pop
mov
js
or
add
lcall
fcom
mov
insl
dec
sbb
inc
add
addb
sbb
addb
add
lods
add
pusha
add
cmp
pop
inc
add
add
add
add
add
jnp
xchg
mov
add
push
rolb
fimull
neg
in
aam
imul
and
mov
xchg
cmpsb
add
or
sub
mov
clc
xor
icebp
data16
add
iret
rcrl
test
bound
mov
aam
mov
add
xchg
cs
pop
lods
xor
out
lret
cmp
shl
addr16
and
pop
mov
xlat
push
jmp
pop
xchg
or
add
add
push
add
ret
pop
int
mov
add
dec
or
add
mov
xor
dec
mov
add
push
pop
test
add
push
add
jbe
arpl
rolb
fstpl
cmp
jmp
mov
loopne
sahf
in
pop
push
inc
add
add
add
push
fndisi(8087
dec
ret
jge
ja
add
test
add
add
add
xchg
add
or
add
ljmp
inc
add
stc
xchg
add
add
addb
add
fldenv
add
cmp
xchg
push
or
sahf
xchg
add
in
popa
in
push
add
pop
xor
inc
add
add
add
decl
jnp
int3
pusha
add
jle
nop
add
mov
fdivrs
hlt
add
mov
push
push
add
ljmp
push
add
add
xchg
inc
fmuls
push
add
cmp
lret
adc
add
pop
cmp
scas
insb
in
pop
lods
xchg
mov
pop
rolb
ds
fcmovne
imul
xchg
add
xlat
add
push
sbb
iret
jo
test
repz
test
xchg
add
lret
scas
in
cmp
add
add
xchg
add
add
clc
sbb
insb
xor
movb
adc
icebp
les
scas
hlt
add
sbb
add
add
cmpsb
add
mov
mov
hlt
add
out
cmp
out
dec
cmp
add
inc
adc
add
mov
sub
incb
nop
add
or
add
mov
mov
ds
add
add
pop
or
add
popa
xor
sbb
add
push
push
mov
aaa
test
jg
fisttps
cmp
in
push
add
mov
add
cmp
test
pop
cmpl
pop
mov
icebp
stc
mov
or
add
add
inc
or
mov
enter
out
gs
mov
add
and
dec
or
add
addb
sbbl
mov
xchg
add
add
mov
outsl
push
add
cli
scas
dec
add
add
in
push
mov
jo
push
cli
scas
loopne
stos
dec
xchg
pop
test
xor
inc
xor
cmpsl
ret
iret
add
add
lds
jne
cli
sbb
mov
xchg
in
mov
pop
enter
add
cmc
aas
sub
repnz
mov
xchg
js
mov
xor
pop
xchg
cwtl
jbe
inc
add
xchg
aam
or
addb
add
adcl
fmuls
mov
sti
cld
stc
or
out
mov
add
sbb
and
cmovae
jecxz
and
mov
mov
lods
lods
adc
dec
sbb
push
int
push
add
dec
xor
or
xor
or
dec
aam
cmp
leave
dec
xor
jb
mov
pop
cltd
sti
or
mov
mov
add
dec
add
rolb
push
femms
fldt
add
imul
sbb
jae
mov
push
push
add
pop
inc
mov
pop
and
inc
add
popf
fs
push
mov
enter
movb
fldt
mov
fdivs
popa
xor
sbb
add
or
rolb
or
add
lock
pushf
mov
add
inc
or
xor
add
mov
data16
and
test
dec
mov
data16
mov
aas
add
add
add
mov
add
arpl
add
add
ljmp
sbb
fisttpl
stos
cli
adc
fbld
mov
inc
add
or
rolb
cwtl
jp
add
and
mov
jecxz
add
add
mov
leave
pushf
repnz
lods
push
jl
gs
fists
pushf
jns
or
xor
mov
mov
adc
sub
fisubs
pop
mov
lahf
mov
add
pop
jl
les
mov
add
push
add
or
add
jb
xor
inc
mov
std
fstpl
mov
movsb
add
dec
cmp
push
jb
or
testb
push
out
loope
add
add
inc
add
add
or
add
mov
jae
add
add
jne
or
arpl
imul
pusha
add
xchg
stos
out
rolb
testb
add
push
cmc
out
test
lret
mov
jns
adc
cmp
fwait
cmp
imul
leave
lock
mov
add
stos
stc
popf
cmp
add
add
in
daa
sbb
add
mov
cmpsb
add
dec
rolb
mov
add
inc
and
sti
sub
test
add
xor
addr16
cmp
out
mov
cmp
mov
and
add
add
push
push
xor
mov
pusha
add
xchg
dec
xchg
mov
adc
add
sahf
pop
test
dec
or
scas
cwtl
jbe
push
fistl
xor
rolb
mov
and
mov
cmc
imul
mov
data16
jmp
jmp
movsb
add
insb
cs
push
xor
dec
scas
popf
pop
nop
add
sub
sub
addr16
push
frstor
fisubl
add
push
add
outsb
xor
out
add
pop
sbb
pop
inc
add
rolb
cmc
fstl
add
psrld
jg
je
pop
add
mov
mov
lods
sub
add
push
inc
add
mov
iret
and
mov
mov
push
add
mov
add
repnz
pushf
dec
jno
repnz
and
mov
cmp
cli
scas
sub
flds
cmc
push
rolb
add
or
sbb
jae
mov
add
jp
rcll
lods
xor
cmpsb
add
push
add
shr
in
mov
mov
add
hlt
add
int3
pop
xchg
add
cmp
add
rcrl
add
filds
lea
out
dec
xchg
incb
jmp
loop
int
clc
mov
add
hlt
add
add
mov
fsubs
cmp
add
data16
add
add
add
jbe
imul
push
pop
mov
dec
mov
inc
add
add
ret
popf
add
mov
andl
xchg
add
and
mov
add
mov
jb
mov
mov
add
cmp
lock
mov
xor
inc
add
fstl
lock
jge
pop
xchg
notl
shll
add
dec
iret
mov
insl
jmp
fstps
adc
sub
adc
pop
pop
mov
into
daa
sbb
add
loop
inc
mov
add
xchg
data16
sub
xchg
add
cli
jbe
movsl
ret
add
mov
lret
xor
add
add
add
adc
add
mov
cmp
popa
mov
aam
and
mov
add
add
mov
in
lahf
xchg
add
lds
add
add
test
add
into
aad
push
add
inc
popf
cmp
and
mov
jae
add
aas
jl
orl
fimuls
pop
movsl
mov
add
add
into
pop
lods
mov
movsl
add
mov
add
pop
jnp
mov
add
leave
jg
add
mov
add
mov
rol
xor
add
mov
push
and
pop
inc
add
fnstcw
ficoms
ja
add
add
js
pop
movl
add
jb
out
jmp
add
add
add
sub
call
and
mov
rolb
repz
ljmp
add
cmp
jmp
push
fiaddl
add
pusha
add
sbb
cld
xchg
add
sub
or
push
cmp
mov
cmp
adc
rcrl
leave
lds
iret
sub
add
pop
or
add
mov
nop
add
add
mov
aaa
iret
dec
lret
sbbl
add
mov
jmp
cltd
rolb
xchg
xchg
loop
jg
cli
lods
cltd
or
pop
inc
add
mov
mov
jl
and
jecxz
sbbl
xor
scas
sub
add
fsubrs
and
fadd
add
mov
push
add
lahf
repnz
call
and
push
add
iret
xchg
add
push
and
popa
rolb
repnz
mov
gs
into
popf
aam
rorl
cmp
or
add
mov
pop
mov
incb
daa
jo
leave
fadds
mov
add
ja
xchg
add
jns
cmp
add
add
add
pop
xchg
insl
push
add
lret
xor
out
lods
aaa
dec
dec
mov
add
insb
movsb
add
add
adc
leave
je
insl
xchg
sbb
scas
add
add
fwait
mov
inc
add
mov
add
sahf
cmp
cmp
loop
ljmp
add
push
add
adc
notl
sub
mov
mov
into
nop
add
add
xor
push
add
stos
mov
mov
addb
jbe
mov
movups
sahf
sarl
mov
scas
sbb
dec
repnz
add
and
add
lock
add
inc
add
add
push
sub
in
jmp
ret
mov
mov
inc
add
add
arpl
bound
mov
sti
jg
pop
cmp
xchg
les
popf
jb
mov
fmull
in
adc
push
add
aas
lret
add
je
adc
inc
ds
add
popa
ud0
clc
mov
inc
add
mov
daa
lret
add
clc
out
ret
add
adc
or
add
and
add
add
xchg
add
fldenv
push
inc
add
add
add
sti
cld
mov
mov
add
insl
jb
cmpsb
add
add
add
add
push
mov
add
mov
sub
add
add
mov
xchg
std
dec
into
loop
or
cmp
into
and
sub
ret
add
sbb
fdivp
push
into
jno
inc
add
fmull
mov
pop
add
fdivrs
add
mov
aaa
lret
inc
pop
adc
and
cmp
cmpsl
xchg
popa
mov
push
sbb
cmp
movl
les
sub
add
je
sub
ja
push
in
test
ja
repnz
push
add
arpl
jp
lock
mov
hlt
add
add
adc
movl
rolb
mov
ljmp
fidivrs
std
jno
jne
add
or
mov
lock
mov
sbb
fisubrl
mov
out
xchg
add
jbe
int
in
add
jbe
into
ret
sahf
int
inc
fidivl
je
and
mov
or
add
data16
add
inc
add
int3
mov
cmp
imul
mov
xchg
mov
testb
mov
clc
adc
imul
or
add
sbb
ds
icebp
sysenter
add
adc
mov
add
mov
add
xor
dec
mov
adc
sahf
push
add
mov
stc
adc
mov
add
add
or
pop
dec
mov
and
inc
add
add
and
mov
cwtl
loop
lods
xchg
add
add
push
add
cmpsb
add
add
add
or
or
sahf
hlt
add
jne
loopne
xchg
fdivrl
das
jle
add
add
ret
add
popf
mov
add
aaa
mov
pop
orl
cmp
cwtl
rolb
sahf
daa
push
add
lret
lock
dec
dec
pop
mov
js
in
cmp
add
push
call
add
js
add
pop
adc
ja
test
add
jno
add
mov
mov
lea
aad
daa
sbb
out
fistps
cmp
and
mov
sbb
test
pop
cmp
add
add
push
imul
stos
iret
add
jg
mov
add
add
add
stos
call
add
push
punpcklwd
insb
addb
add
add
xchg
add
loope
cmc
bound
mov
jbe
test
add
ljmp
xchg
and
mov
jo
xlat
adc
outsl
mov
cs
fwait
into
pop
xchg
xor
push
add
aas
mov
testl
fucomp
jp
add
add
loope
jecxz
and
mov
ds
add
mov
imul
sbb
outsl
inc
les
add
mov
add
or
jae
add
int
push
xchg
add
mov
add
cmp
sub
jb
test
xor
lcall
rolb
addb
dec
and
cmp
mov
pusha
add
addb
add
sub
lods
push
les
ds
fwait
lods
cli
inc
add
jo
push
mov
add
mov
push
add
int3
test
hlt
add
ljmp
dec
mov
add
add
testb
add
test
pop
inc
mov
imul
daa
sarl
mov
ret
sub
and
add
and
add
jae
stos
xchg
add
flds
mov
pop
xchg
ret
data16
lcall
scas
xchg
push
add
add
lret
add
cmp
repz
mov
pop
addl
stos
fdivl
cs
test
cmpsl
call
popa
xchg
add
or
movsl
ret
lds
mov
add
test
lods
ret
ret
add
sbb
add
add
push
mov
aad
mov
mov
in
push
add
movb
add
jo
add
mov
ljmp
testb
add
ficompl
add
jecxz
jo
ja
add
add
add
ret
mov
inc
add
mov
clc
adc
mov
sarl
fcmove
sub
mov
fstps
fistps
loop
sbb
add
pop
fldt
adc
adc
cmp
sub
call
nop
add
add
xorl
lahf
mov
and
mov
jb
divl
jg
lret
aad
cmp
jne
cmpsl
cs
mov
test
mov
pop
mov
cld
sub
adc
rcll
aam
ja
add
add
stos
xchg
int3
xchg
add
insl
addb
mov
out
cmp
lret
out
and
mov
dec
xor
out
mov
push
add
out
aam
cli
add
mov
add
int3
lret
xchg
add
xchg
add
mov
lret
addb
add
jg
add
ret
mov
or
cmp
push
add
mov
cmp
push
mov
jbe
pop
push
in
outsb
out
xchg
add
fisubl
mov
add
sub
add
mov
add
add
add
add
push
mov
xor
sbbl
stos
pushf
fistpl
add
das
jns
jo
ret
add
adc
sbb
mov
in
add
ja,pt
jnp
ficompl
cwtl
std
push
mov
mov
add
add
bound
mov
push
xor
xchg
add
cltd
addb
add
add
xor
mov
pop
je
mov
lock
add
outsl
ja
fcompl
xchg
adc
int
ret
or
inc
xor
imul
orl
popl
fldl
dec
out
repz
jle
add
add
data16
push
loop
outsl
mov
add
ret
paddsw
aad
call
nop
add
cmp
loopne
testl
xchg
add
xor
ret
mov
sahf
xchg
imul
adc
pop
dec
mov
push
or
pop
rorl
mov
movsl
leave
cmp
xchg
adc
fwait
out
push
add
clc
movb
outsb
or
add
sub
js
add
sti
ds
out
rolb
cld
lcall
add
xor
addb
add
cld
adc
add
popa
push
add
add
add
adc
lds
cld
cmp
add
jns
add
inc
lock
or
pop
cmp
add
das
insb
add
mov
mov
xchg
add
repz
mov
push
add
add
scas
and
cmp
cwtl
mov
shl
sub
jns
je
iret
decl
push
gs
mov
movsb
add
add
add
test
cmp
icebp
or
mov
cmpsl
jmp
pop
outsl
scas
cmp
add
add
xor
insl
sbb
js
or
movsl
pop
daa
jl
mov
pop
push
pop
fxtract
add
or
add
xor
jae
stos
idivl
popf
xchg
add
push
clc
xor
add
dec
pop
lods
or
mov
mov
push
add
adc
add
add
mov
enter
add
inc
add
in
xchg
je
pop
sbb
inc
jg
in
xor
add
insb
aas
test
cmpsl
mov
and
imul
insb
xchg
pop
aaa
pop
out
add
ret
inc
loopne
mov
add
leave
and
mov
add
add
sbb
add
pop
mov
add
cltd
and
scas
mov
aas
insb
mov
add
leave
add
insl
imul
add
loope
add
xchg
or
push
loop
clc
int3
mov
and
sbb
pop
daa
xchg
mov
pop
sub
outsl
lea
popl
loop
adc
mov
add
add
cmp
and
mov
data16
and
addr16
inc
fmulp
data16
mov
jo
jge
pushl
mov
dec
aaa
mov
mov
mov
jl
mov
mov
shll
pushf
insb
cmp
outsl
xchg
repz
add
mov
out
add
rolb
push
xchg
add
and
mov
jle
dec
adc
in
icebp
xor
stc
pop
jne
lods
add
or
add
dec
sbb
add
sahf
ret
faddl
sub
add
je
push
add
xor
ret
mov
add
js
arpl
add
in
rolb
ret
add
pop
aaa
cmpsl
mov
mov
fdivrs
add
add
push
add
dec
mov
xor
xchg
dec
sahf
add
and
mov
in
mov
mov
xchg
jl
sub
cmc
loope
shll
lods
jecxz
repnz
add
jp
add
not
and
mov
hlt
add
xor
or
mov
add
and
and
notl
add
add
test
mov
pop
pop
mov
xor
scas
pop
cltd
call
add
aaa
sub
add
xchg
fdivr
frstor
in
out
jo
lcall
out
jge
xchg
add
push
add
add
int
testl
dec
or
mov
sub
push
add
lods
aaa
adc
push
cmpsb
add
cmp
lahf
addb
add
sbb
add
add
add
mov
lret
push
cmpsb
add
add
into
xor
add
add
ret
add
cmp
mov
push
rolb
sub
gs
or
inc
or
jae
cli
outsl
mov
pop
xchg
add
xchg
jb
ret
loopne
cmp
je
imul
and
push
push
pop
jo
xchg
add
mov
add
mov
push
add
mov
jb
movsl
insl
stos
imul
into
stos
or
inc
add
push
add
add
add
cmp
add
add
orl
mov
add
add
add
ror
hlt
add
mov
add
add
popf
cmp
add
call
add
sbb
add
add
repnz
inc
add
pop
repnz
mov
js
jbe
rolb
cmp
jne
fwait
lods
testb
sub
add
cmp
cmp
data16
dec
mov
xor
xorl
stos
cmp
add
push
add
mov
inc
add
leave
fistpl
int3
and
mov
fldl
xchg
add
add
add
push
mov
arpl
or
xchg
add
loopne
psrlw
add
fisttpl
out
imul
add
outsb
pop
mov
iret
int
mov
jge
cmpsb
add
addb
insb
lock
jmp
inc
call
add
enter
ret
loop
imul
mov
rolb
ljmp
out
add
mov
pop
sbb
cmc
seta
add
std
jle
adc
mov
ja
data16
add
adc
out
and
data16
sbb
dec
lret
add
add
repz
add
clc
and
aas
aad
cmp
add
add
lret
fiadds
movb
add
add
rolb
call
fstpl
push
add
adc
add
mov
roll
dec
mov
arpl
popa
in
and
mov
add
xor
cltd
jns
sub
test
cmp
push
add
add
mov
add
inc
add
xor
add
adc
or
add
add
cld
loop
andl
cli
ss
add
push
add
add
sub
jbe
pop
jns
and
in
inc
jg
or
pop
test
and
mov
cmc
sub
pop
push
fisubl
stc
aaa
sti
data16
add
aaa
xlat
mov
cmp
jmp
add
ja
add
push
add
add
and
add
stos
rolb
add
mov
add
and
cmp
add
add
dec
mov
sub
call
add
shll
add
in
add
mov
add
test
mov
add
add
in
ret
cli
in
add
xor
add
and
test
and
add
movb
add
add
jg
cld
popa
and
push
loop
jmp
jae
add
sbb
pop
push
add
mov
and
xchg
add
mov
test
jns
jecxz
sub
fistpl
inc
add
int3
test
jge
fsub
add
or
add
cmp
add
xchg
ljmp
xlat
leave
mov
add
add
add
div
add
xchg
add
add
cwtl
xadd
arpl
add
lcall
popa
cmp
cwtl
cmp
xchg
in
ja
add
adc
lods
je
pop
in
pop
loopne
ss
sub
mov
add
sbb
cwtl
dec
mov
mov
jg
faddl
add
sub
xchg
mov
and
mov
sbb
cs
adc
inc
add
add
pop
testb
push
test
rolb
adc
aaa
push
pop
and
add
sbb
add
dec
push
mov
inc
add
fwait
movsb
add
add
add
add
stos
movb
add
fwait
leave
cwtl
adc
das
sub
inc
add
add
pusha
add
mov
add
jno
add
mov
lahf
lods
lods
inc
push
jmp
or
add
ret
add
mov
add
push
xchg
xchg
out
push
loope
pop
push
dec
push
cmp
pop
dec
jmp
xchg
mov
jnp
lea
mov
out
cmp
mov
add
or
add
jnp
add
test
movsl
sub
add
push
add
cmpsb
add
adcl
stos
hlt
add
add
cmp
add
add
mov
imul
mov
fsubr
cmp
add
xor
add
out
push
add
sub
or
loop
sbb
xor
pop
cmpsb
add
add
imul
adc
ret
push
add
mov
test
popa
cmp
mov
and
popf
scas
and
popa
mov
aas
add
pop
and
add
inc
nop
add
add
fsts
mov
testb
std
test
add
add
lods
xor
test
pop
cmc
call
imul
jae
pop
gs
xchg
cmp
dec
fnstenv
add
and
bound
mov
add
xchg
add
sbb
add
testb
push
mov
adc
mov
and
mov
add
arpl
hlt
add
test
mov
dec
addl
add
add
nop
add
lock
test
cmp
jno
adc
or
sub
xchg
test
cmpsl
pop
xchg
add
addr16
pop
iret
inc
sub
add
adc
jbe
mov
and
mov
add
push
mov
xor
loopne
pushf
movb
add
arpl
mov
pop
cld
rolb
push
add
add
dec
aad
add
cmp
add
dec
addr16
add
add
xor
outsb
mov
movsb
add
add
pop
pop
xchg
aam
out
pop
jge
fnstcw
jmp
test
push
add
add
add
mov
mov
add
jmp
std
int3
fistpll
add
mov
imull
rolb
adc
lret
mov
adc
imul
add
cmp
add
sub
mov
push
add
add
nop
add
cmc
sub
das
fisubl
cmp
add
add
and
mov
testb
ds
add
rcll
mov
add
sbbl
lret
pop
mov
adc
sub
mov
roll
dec
pop
je
fnstenv
add
add
cwtl
shrl
inc
jp
cld
mov
fsts
add
je
out
push
in
inc
add
add
addb
add
add
pop
mov
in
out
shll
int3
scas
pop
popf
mov
nop
add
mov
add
test
daa
loop
cmc
cmpsl
mov
ja
ljmp
add
add
mov
addb
add
push
add
add
push
add
jb
mov
jbe
jb
pop
xchg
add
or
add
call
das
dec
lock
xchg
add
cs
add
add
out
pop
in
sub
mov
out
xor
popa
nop
add
lock
push
sbb
cmp
mov
add
inc
add
enter
xchg
add
int
add
dec
rcll
mov
push
and
testb
inc
add
mov
lahf
idiv
sti
fildll
add
or
pop
jnp
ficomps
sub
call
dec
insl
mov
push
xor
xchg
pop
shll
add
xchg
add
sbb
add
xchg
jmp
add
ss
imul
repz
lcall
jmp
push
add
out
imul
sub
lea
or
jne
add
aad
add
cltd
scas
xchg
daa
jge
dec
adc
mov
pop
out
add
add
jno
add
out
lret
add
add
jno
sub
pop
int
xor
leave
psubusw
add
mov
push
add
lcall
cld
add
lea
sub
ret
jnp
outsb
enter
add
or
add
add
and
cmovbe
cs
stos
xor
das
out
or
outsb
pop
in
jl
mov
mov
lahf
lcall
push
leave
and
mov
xchg
xor
leave
fsubs
and
mov
lea
ljmp
jg
add
add
arpl
sahf
das
testb
mov
out
and
mov
in
push
add
add
add
sbb
push
add
add
add
shl
bound
mov
add
push
add
add
dec
repnz
jl
add
add
mov
in
cmp
mov
add
ficompl
and
addb
mov
mov
test
cmpsb
add
lock
add
ljmp
sub
lret
add
ret
fstpl
add
add
push
sbb
add
mov
inc
add
lods
js
mov
mov
popf
scas
jne
add
add
mov
add
mov
add
mov
pusha
add
add
pusha
add
cmp
add
mov
push
add
repnz
sahf
push
lds
lfs
sbb
add
adc
stos
pop
clc
inc
jne
add
aaa
and
add
jb
addb
lret
fcoms
mov
call
js
push
add
add
add
out
add
or
add
cmp
add
mov
or
cltd
xchg
adc
out
push
add
insl
xor
add
adc
int
add
pop
xor
add
mov
sbb
push
cmp
mov
lods
inc
add
shll
jo
push
int3
xor
lcall
addb
add
pop
insb
out
push
mov
sahf
in
out
dec
pop
rolb
sarl
add
sti
adc
lcall
add
mov
add
and
mov
stos
xchg
mov
inc
dec
sub
add
icebp
dec
mov
mov
testl
ret
push
add
sub
adc
stos
js
mov
add
add
inc
sarl
idivl
add
add
call
test
or
mov
add
fstpl
mov
push
pop
pop
fdivrs
cmp
push
mov
lcall
xchg
add
mov
inc
test
add
loopne
test
push
add
and
add
out
and
std
dec
jle
xchg
add
bound
mov
add
dec
hlt
add
pop
pop
sub
add
popf
jnp
xor
pop
test
add
fiadds
mov
inc
pop
stos
jp
dec
mov
add
sbb
fstpl
xor
cli
mov
add
fwait
sbb
mov
pushf
shll
add
ja
sti
push
push
add
add
xor
lea
and
mov
cmc
addb
call
pop
in
inc
out
lea
hlt
add
roll
add
movb
add
jne
add
test
mov
arpl
mov
enter
add
add
add
pop
into
add
mov
add
add
add
add
add
mov
test
gs
cmp
add
movsb
add
je
cmp
sbb
subl
add
add
aam
mov
jp
add
add
mov
xor
cli
jne
mov
push
add
sub
addr16
xchg
outsl
sbb
sbb
mov
add
and
add
mov
push
add
leave
mov
inc
jge
add
add
dec
sub
fiaddl
add
hlt
add
cmpsl
fwait
push
psadbw
cs
and
add
ret
flds
add
inc
add
repnz
add
aaa
or
push
add
lock
imul
dec
fwait
cmpsl
xorl
mov
sbb
push
lds
sub
inc
loopne
sti
hlt
add
add
call
add
fstpl
mov
add
add
repz
dec
xchg
add
xchg
cltd
in
dec
cltd
rolb
dec
test
and
mov
in
adc
add
lret
les
pop
loop
inc
add
push
add
test
inc
cmp
pop
cld
bound
mov
sbb
cmp
xor
xor
add
pop
stos
add
add
inc
add
xor
push
repnz
add
add
add
jo
filds
push
add
add
mov
int
rolb
jmp
add
and
or
pop
push
lock
fdivr
or
sahf
rolb
pop
pop
add
push
mov
jnp
popa
mov
mov
add
sub
add
mov
add
lea
sub
add
lods
repnz
scas
es
add
xchg
add
cltd
fistpll
xchg
fsubrs
pusha
add
push
or
add
sub
add
jae
incb
mov
add
icebp
push
xor
ror
mov
lds
das
sysenter
add
add
jae
mov
or
xchg
jl
lods
mov
add
push
dec
loope
push
add
add
mov
add
xchg
add
inc
dec
and
inc
repnz
push
add
nop
add
int3
cmp
data16
add
add
add
jecxz
push
add
sbb
pop
mov
add
popf
test
mov
mov
outsb
mov
xchg
add
mov
add
jecxz
push
add
adc
inc
add
xchg
inc
add
inc
add
in
and
xlat
jo
mov
push
add
fcmove
jg
lahf
lods
addb
add
jae
add
jge
das
inc
add
push
add
bound
mov
inc
clc
dec
cmpl
addb
add
cli
scas
stc
adc
mov
out
xor
dec
xrelease
pop
and
mov
imul
xor
fdiv
add
dec
popf
and
inc
push
sbb
mov
cmpsl
repnz
add
add
cmp
add
add
fidivl
cltd
jno
jecxz
jg
inc
xor
data16
xchg
jbe
add
bound
mov
dec
jns
dec
ja
cld
rolb
int3
fldt
add
mov
add
fdivrs
dec
out
cmp
add
add
push
sub
outsl
mov
cs
movsl
cld
mov
fstpl
in
add
add
add
jecxz
loope
add
add
mov
scas
cmp
add
sub
loop
jo
xchg
add
ret
lahf
push
add
imul
ret
and
mov
repnz
add
add
nop
add
add
and
add
adc
and
addr16
mov
add
pop
jno
mov
popf
rolb
and
add
and
add
add
cmp
rcrl
inc
push
add
add
jae
push
add
xor
movsb
add
push
add
outsl
in
sub
add
outsb
or
rcl
add
add
jl
sub
add
sbb
add
insb
jmp
rolb
popf
cwtl
mov
lds
lds
test
fwait
insl
iret
rolb
out
sti
push
lea
add
and
inc
sahf
imul
movb
add
add
add
iret
vpslld
push
add
fnstsw
xchg
outsl
icebp
jne
adc
dec
mov
dec
push
in
pop
add
lock
add
daa
dec
dec
rolb
test
cs
add
loopne
std
test
fbld
jno
push
jnp
add
subl
cmp
push
add
lods
js
pop
loopne
nop
add
add
add
cmpsb
add
lea
pop
add
mov
idiv
add
xchg
mov
imul
sub
mov
add
call
call
pop
xlat
add
test
mov
sbb
adc
movsl
mov
lret
cltd
or
mov
adc
jecxz
mov
testb
jge
test
add
out
mov
xchg
pop
aaa
inc
add
inc
add
or
add
sbb
fcmovbe
add
in
push
add
mov
repnz
or
add
xor
add
lret
add
add
add
adc
cmpsb
add
mov
ret
lds
dec
pop
xor
jbe
sub
scas
jo
xlat
insl
nop
add
add
add
add
fsts
xchg
push
movb
out
cmp
out
aas
or
and
lret
loop
incb
add
roll
xchg
push
loop
cmp
add
scas
pushf
mov
mov
adc
pushf
add
jnp
in
mov
inc
add
ret
add
std
push
pop
push
xchg
adc
rolb
pop
jnp
int
add
ja
mov
inc
testb
jne
add
mov
flds
add
imul
scas
loop
movsb
add
cwtl
xchg
sub
mov
sbb
adc
add
imul
fwait
jle
sub
or
addb
mov
dec
std
xchg
add
jne
test
mov
lods
and
or
dec
jb
int
dec
bound
mov
xchg
add
push
inc
add
mov
add
mov
sub
jo
lods
int
pusha
add
ja
or
test
testb
lret
in
stos
bound
mov
push
add
push
add
pop
add
jns
or
add
sub
pop
fidivrl
add
xor
add
add
loope
xchg
inc
add
mov
pop
test
cltd
sti
repz
sub
add
dec
inc
add
add
cli
call
aaa
fdivp
add
add
mov
pop
push
add
jno
add
cmp
in
mov
add
data16
int
sub
jns
mul
mov
outsl
lcall
add
add
add
das
mov
call
mov
mov
pop
cmp
add
scas
add
mov
add
sub
and
addb
add
add
xor
jg
lret
mov
daa
mov
adc
sub
sbb
leave
imul
sbb
insl
mov
ja
add
mov
mov
addr16
pop
lock
xchg
inc
inc
add
push
add
jo
xor
mov
or
add
push
inc
mov
mov
shll
add
mov
pop
cmpsl
into
dec
jae
add
pop
stos
test
inc
add
mov
add
push
add
mov
and
or
adc
mov
stos
test
popa
mov
add
pop
push
cmc
add
mov
add
inc
stc
out
lea
cli
lea
rcll
insb
fsubrs
add
daa
jnp
xor
inc
daa
cmp
mov
xchg
add
mov
insb
hlt
add
rolb
xchg
loope
mov
add
xchg
add
enter
mov
imul
push
add
cmp
ret
daa
in
jmp
gs
add
push
mov
add
xchg
and
cmp
add
jmp
jp
add
add
pop
movsl
push
loop,pn
sub
add
sub
jne
ret
dec
into
fwait
pop
shrl
push
test
out
int3
xchg
add
stos
mov
inc
add
sub
jno
leave
imul
inc
add
je
repz
xchg
add
sub
add
add
mov
jmp
fwait
or
ja
frstor
add
mov
add
psrad
outsb
xor
mov
adc
mov
popf
add
jl
xor
roll
dec
decb
add
add
addr16
cmp
addr16
fwait
ret
out
or
imul
ljmp
scas
mov
int
jno
movsl
sarl
push
add
add
fwait
mov
add
cld
sub
cmpsl
mov
dec
outsl
fdivr
insl
pop
int3
jg
add
subl
xchg
movsb
add
xor
mov
fidivs
pop
stc
pusha
add
fidivrs
jae
add
ficompl
add
dec
pop
sahf
push
lret
out
jp
repnz
add
dec
addb
int3
enter
repnz
add
cli
insb
loope
dec
rcll
add
mov
insl
lret
xchg
inc
pop
cwtl
out
rol
jno
in
faddp
ret
bound
mov
mov
aas
cmp
cltd
clc
insb
sahf
sub
testb
in
ficoms
out
dec
push
add
addb
out
testb
add
push
and
lock
in
sub
add
pop
hlt
add
push
add
hlt
add
mov
mov
jl
in
sbb
ds
or
mov
out
in
sbb
xchg
add
xchg
mov
jmp
mov
addr16
sub
mov
sub
add
push
add
test
int
xchg
inc
add
jbe
arpl
mov
sub
repz
add
push
add
inc
inc
mov
outsl
shll
pop
fwait
addr16
add
add
js
add
sbb
fidivs
cmp
cld
mov
add
mov
sbb
int3
test
add
xor
pop
or
or
lods
cmp
xor
add
adc
dec
ljmp
xchg
pop
inc
je
push
add
jle
sub
xchg
xchg
sbb
mov
incl
fbld
add
lcall
xor
std
cld
sbb
test
inc
leave
leave
inc
pop
xor
and
xor
pop
shll
mov
sahf
or
scas
xchg
add
add
pop
bound
mov
and
mov
push
add
xor
repnz
inc
fcompl
pusha
add
add
test
add
cwtl
lcall
add
outsl
dec
or
add
add
and
lock
dec
sub
add
add
adc
push
add
arpl
add
mov
add
jno
xor
dec
ds
pop
cld
imul
add
mov
add
add
popa
or
cs
mov
add
mov
mov
add
mov
cmc
pop
xchg
sbbl
add
repz
add
add
call
add
rcrl
push
insb
xchg
add
xorl
xor
cld
add
pushl
dec
inc
inc
add
jnp
loope
push
fldl
inc
add
inc
add
out
mov
in
cmp
pop
arpl
add
pop
in
add
std
subl
xor
cld
shrl
mov
or
sub
mov
mov
ret
dec
xor
mov
add
pop
push
or
jae
addb
nopl
add
sub
scas
and
fsubl
sub
into
sub
out
and
mov
add
loope
push
jb
movsl
push
repnz
xor
pushf
fnstenv
pop
in
iret
fwait
xor
xchg
add
and
fwait
xor
inc
add
lret
in
jbe
mov
sub
jnp
add
iret
jns
add
cwtl
sub
add
add
dec
xchg
add
sub
push
adc
push
add
add
add
pop
cld
xchg
push
jl
js
fwait
push
add
insb
loopne
xchg
add
jl
dec
add
mov
test
cld
push
add
push
mov
cs
stc
repz
mov
mov
test
add
mov
add
popa
rcll
es
cmp
inc
mov
push
into
cli
fisubs
add
fstps
cwtl
jno
pop
cmp
add
mov
imul
in
int3
inc
jmp
mov
add
in
ret
popa
and
xor
mov
aaa
xor
outsl
rep
mov
mov
addb
out
jmp
dec
lret
rcl
push
add
clc
nopl
frstor
mov
add
add
lret
aam
mov
inc
or
add
adc
xor
mov
adc
add
out
int3
jo
xor
addb
mov
mov
and
rolb
ret
dec
sbb
add
add
stc
cmpsl
call
mov
scas
add
mov
xchg
loopne
pushf
ret
int
jne
add
add
std
outsl
aam
jno
xlat
orl
lret
add
jecxz
add
or
add
pushf
adc
ficoms
and
mov
add
add
jae
dec
mov
add
push
adc
call
scas
jne
out
mov
cmc
addr16
lcall
push
add
add
out
sub
add
add
add
stos
cmpl
mov
add
iret
mov
adc
add
mov
xor
mov
sub
mov
jge
das
fucomp
adc
sub
ret
xchg
push
add
fildll
add
and
xchg
sub
cmp
add
push
lods
in
and
xchg
add
add
add
fcomps
add
jle
add
cmp
dec
pop
mov
sub
int
pushf
or
add
cmp
mov
add
add
cmc
jmp
cmp
add
mov
data16
push
add
pushf
mov
stc
cltd
sbb
sbb
add
add
jo
je
xor
jns
add
inc
mov
lcall
add
cmc
cmp
add
cli
push
add
out
dec
pusha
add
inc
add
mov
hlt
add
push
add
test
and
xchg
fsubr
mov
mov
and
sbb
add
sbb
add
mov
or
add
stos
out
pop
sub
mov
addr16
mov
std
outsb
jg
les
pslld
or
inc
or
add
add
fstpt
or
mov
add
repnz
add
add
repnz
pop
shrl
clc
call
add
add
aas
popf
loop
test
jae
add
sbb
std
pop
and
xchg
push
add
rcl
inc
add
jne
add
push
pop
sahf
cmp
xchg
jno
jecxz
mov
data16
push
add
fists
mov
lret
out
add
add
mov
push
test
mov
cmc
cltd
testl
pop
xchg
inc
add
decl
push
sbb
add
xor
add
lret
scas
dec
mov
sub
add
add
jne
int3
cmp
jmp
mov
dec
sub
jle
xlat
lods
clc
sbb
test
pop
sub
mov
fs
mov
out
xlat
add
mov
fcomi
add
add
add
xchg
add
add
add
scas
js
add
add
aam
lea
outsb
jmp
add
rolb
fisttps
fldenv
add
pop
dec
push
fwait
cmpsl
arpl
add
das
data16
mov
add
add
add
jno
out
lds
push
add
call
push
add
mov
add
mov
testb
add
cmp
iret
sbb
movb
popf
bound
mov
inc
add
push
in
rcrl
push
add
add
out
add
fsubrs
ja
and
mov
add
fsub
dec
push
add
add
pop
lret
test
add
push
add
sub
fistpll
add
imul
fnsave
mov
mov
loop
ljmp
lret
cmp
jb
into
mov
out
or
push
and
add
sahf
mov
fucomi
js
add
xchg
add
test
lds
or
add
jmp
xor
decb
mov
test
add
add
inc
rolb
filds
mov
mov
jno
add
or
add
adc
nop
add
jb
mov
ja
aad
sub
add
iret
mov
add
mov
push
add
leave
sahf
imul
add
add
xor
scas
mov
add
dec
adc
mov
jne
xchg
adc
shll
stc
push
repnz
shrl
jge
adc
pop
sbb
add
pop
mov
or
add
out
push
lcall
add
cmp
add
add
cmp
cmpsl
mov
call
xor
lds
test
insb
jge
adc
xchg
into
stc
sub
add
and
mov
add
add
add
xor
fwait
in
push
add
add
lock
mov
ja
add
xchg
add
add
mov
add
xchg
add
mov
add
repnz
xchg
add
mov
adc
movsb
add
add
cmc
mov
hlt
add
add
scas
push
add
hlt
add
xor
imul
xchg
pmulhw
cwtl
cs
jbe
cld
clc
lea
stos
xlat
inc
repnz
stos
xchg
add
cwtl
imul
add
rep
adc
sbb
push
sub
aad
pop
std
sub
add
mov
sub
repz
loope
xlat
and
add
cwtl
xor
inc
sub
or
sbb
pushf
jb
push
pushl
addb
and
mov
mov
add
rcrl
push
addb
daa
idiv
out
sub
xor
xor
jmp
or
inc
add
add
repz
inc
xor
jnp
lcall
inc
inc
add
test
cli
gs
add
mov
mov
xchg
push
add
xor
mov
add
popa
js
add
add
mov
jbe
adc
push
es
in
xchg
add
xor
fcoml
push
adc
scas
shl
add
push
lcall
jne
add
sti
add
mov
push
push
add
add
jns
add
inc
add
fisubrs
gs
add
pusha
add
mov
xchg
add
out
add
jae
rcrl
and
mov
aaa
cmpsb
add
adc
sbb
jg
and
inc
mov
lret
sbb
into
cmp
xchg
fcom
push
add
push
add
cmp
add
add
test
or
xlat
dec
rolb
push
add
pop
rcll
jge
lods
and
mov
jne
mov
add
add
lods
push
add
enter
mov
add
add
pop
les
in
jle
add
sub
mov
xchg
add
cli
mov
add
outsl
inc
add
sub
mov
jbe
jb
rolb
stc
cld
mov
insl
xor
cmp
add
aas
and
add
inc
add
mov
cmovno
push
std
popa
pop
fisubrl
add
jl
push
add
lahf
sbb
add
sbb
mov
and
pop
sub
push
loopne
scas
jle
xchg
add
pushf
mov
inc
add
add
pop
clc
fmulp
jns
setge
test
add
mov
mov
add
sti
mov
cmp
addr16
mov
dec
test
imul
and
xchg
sti
movsb
add
add
or
push
out
add
sahf
jbe
pop
loopne
add
adc
push
add
xor
pop
bound
mov
add
call
xor
jge
repnz
mov
cmp
lods
and
add
mov
add
movb
dec
mov
stos
jnp
insl
pop
lds
fwait
mov
std
cmp
bound
mov
lcall
add
pop
mov
ret
inc
add
and
jo
inc
add
pop
insb
xchg
add
dec
adc
inc
filds
out
add
add
cmpsl
pushf
test
into
inc
or
cmp
scas
inc
add
out
pop
das
pop
sbb
out
outsl
cmp
push
fnstsw
cmp
int
cmpsb
add
push
add
add
fwait
or
add
aad
mov
cs
add
add
and
mov
gs
xor
jno
rolb
push
add
add
xor
add
lods
or
js
add
add
mov
iret
mov
add
dec
int
or
mov
push
add
out
pop
incb
mov
xor
rolb
add
mov
add
daa
lock
cmpsb
add
inc
inc
pop
cmp
in
jns
or
aas
mov
dec
mov
pop
dec
sbb
add
dec
mov
adc
dec
cmc
jae
ss
ret
outsb
cltd
stc
int3
adc
mov
mov
jb
ljmp
dec
add
sbb
add
das
sub
pop
lock
cmp
sarl
dec
stos
dec
loope
pop
outsl
fwait
or
push
add
and
mov
add
mov
notl
out
sbb
fldt
add
mov
add
int3
xchg
add
aad
les
inc
add
mov
add
add
add
nop
add
add
add
xor
sbb
or
data16
mov
xor
add
adc
inc
add
cmp
int3
movsl
in
int
jno
xor
arpl
aas
jecxz
add
add
fnstcw
sti
dec
dec
in
fmul
jg
cmp
add
push
mov
add
pop
inc
add
mov
mov
xor
add
enter
pop
adc
xchg
xchg
add
pop
cmpsl
addb
rolb
test
mov
test
repnz
add
lds
mov
jl
mov
add
out
cmp
stos
dec
sub
add
or
xor
add
add
loop
rcrl
aas
adc
mov
scas
jne
jge
add
gs
add
xchg
fwait
dec
repz
ja
add
and
mov
addr16
adc
mov
or
push
lock
js
dec
loope
xor
mov
jbe
jae
inc
add
mov
cmc
cmpsb
add
add
jae
push
stc
sub
imul
es
aaa
sbb
pushf
push
push
add
add
ret
test
add
add
mov
sub
out
scas
xor
add
rolb
imul
pop
push
add
mov
rcl
push
add
ds
add
add
add
add
xor
mov
shld
add
in
lods
pop
dec
jbe
add
mov
mov
mov
aaa
loopne
std
pop
imul
push
add
adc
mov
jno
add
xor
mov
add
sub
movsl
enter
xchg
loope
add
xchg
add
add
add
mov
mov
adc
add
and
mov
sarl
add
cmpsb
add
mov
mov
lret
inc
add
sbb
stos
sub
add
frstor
in
lret
rolb
pop
imul
pop
add
mov
add
dec
jo
mov
test
add
mov
sbb
testb
add
std
sarl
dec
out
inc
and
nop
add
lock
cmpsl
mov
xchg
add
mov
add
push
add
add
push
add
push
add
add
mov
rolb
add
jbe
scas
fldt
xchg
cwtl
mov
jnp
add
addb
jl
xor
cmpsl
test
mov
das
push
cld
add
add
dec
ds
js
jbe
shr
sbb
add
and
mov
add
enter
das
xchg
add
mov
add
sahf
cmp
add
add
push
pushf
xor
lock
add
add
stc
jge
test
jmp
add
push
sbb
add
push
mov
mov
rolb
sbb
aad
lret
add
xchg
sbb
shrl
add
sbb
dec
jno
add
add
push
add
add
popf
jmp
jecxz
sbb
scas
rolb
fbld
and
je
add
lahf
aaa
mov
rolb
add
cld
push
add
add
xor
fnstcw
hlt
add
add
add
xchg
add
incb
lods
jmp
add
jl
les
repz
jecxz
sub
sbb
add
mov
or
add
dec
ret
pop
ja
ret
jmp
xor
icebp
jecxz
repz
mov
out
sbb
mov
loopne
dec
pusha
add
call
add
testb
adc
add
movsl
push
cmp
sbbl
int3
jnp
dec
outsb
xchg
xor
add
and
mov
mov
enter
dec
xor
add
cs
add
sarl
push
add
leave
insl
sti
xchg
lcall
add
cmp
push
inc
or
xchg
pop
adc
addb
dec
testl
add
mov
sub
fstpl
leave
mov
mov
ffree
add
jne
in
add
add
bound
mov
add
es
movb
popa
mov
stos
fstpl
aas
sbb
add
push
add
mov
add
sbb
lock
je
pop
sbb
mov
add
add
adc
cli
jae
add
cltd
das
xchg
stos
and
jae
jnp
rolb
xchg
in
lock
scas
ds
popa
jb
jl
popl
int
and
in
xchg
popf
jno
add
dec
mov
jp
mov
test
push
xchg
add
data16
pop
push
add
out
or
add
xlat
add
xor
fidivrl
hlt
add
dec
mov
sbb
add
cs
add
pop
ds
inc
add
test
jns
push
fcoml
popf
das
xor
cli
imul
jecxz
outsl
das
pop
or
mov
pushf
jp
cmp
sub
pop
test
and
pop
dec
loopne
mov
jne
push
pusha
add
or
fidivrs
add
add
cmp
mov
repz
mov
add
add
or
push
add
push
cmp
add
cmp
das
push
add
lret
add
push
add
or
add
scas
gs
lods
pop
and
add
scas
add
addb
add
push
outsb
adc
outsl
lea
add
add
test
sarl
and
cli
es
adc
mov
fmull
ret
sbb
and
test
lea
movsl
mov
scas
data16
sbb
fidivl
jmp
xchg
add
add
add
add
mov
mov
mov
add
jb
insl
mov
sahf
or
lods
sbb
adc
test
sub
mov
jecxz
add
add
dec
sub
add
lock
cmc
inc
add
or
xchg
testb
addb
add
sub
orl
dec
stos
add
mov
jmp
add
xor
inc
add
loopnew
jmp
test
add
mov
or
mov
add
pop
in
das
lcall
push
add
pop
push
add
add
add
add
add
cmpsb
add
test
push
add
xchg
pop
gs
stc
addb
pop
loopne
pop
negl
cmp
add
testb
xor
int3
inc
pop
push
add
jnp
loopne
ret
add
xchg
add
test
test
sbb
loopne
movsl
mov
mov
add
jne
sbb
pop
add
add
xchg
add
sub
add
mov
cmp
scas
clc
or
inc
add
fdivrs
int3
adc
add
sbb
xlat
scas
loopne
xchg
and
add
add
mov
mov
mov
mov
into
bound
mov
stos
sbb
lock
add
add
out
add
mov
ret
imul
xchg
outsl
cwtl
std
mov
mov
adc
out
push
add
out
add
add
mov
add
adc
rolb
mov
adc
fistl
addr16
bswap
jge
add
mov
xor
mov
push
mov
out
jno
mov
rorl
add
dec
dec
je
inc
push
iret
and
rolb
stc
rolb
orl
pop
outsb
push
add
cli
lret
in
add
rolb
je
inc
add
rolb
sbb
mov
inc
repnz
mov
push
lea
push
add
in
adc
xor
fildll
and
sub
add
add
add
arpl
or
cmp
cmp
xchg
lds
inc
add
mov
add
add
gs
jne
sub
push
add
dec
cmovg
faddp
add
push
add
add
add
cmp
js
add
data16
push
add
popf
imul
dec
inc
mov
xor
add
sub
add
xor
add
jnp
add
outsb
cmp
add
cmp
add
add
jecxz
push
mull
pop
dec
jp
push
insl
xchg
adc
jle
inc
add
arpl
ljmp
adc
cs
insb
sbb
testb
inc
les
mov
int3
pop
pop
sub
add
add
stos
aas
jb
data16
lock
mov
pop
fnsave
mov
xor
ja
das
ds
add
shll
ljmp
mov
mov
mov
sbb
xor
add
addb
add
ljmp
lahf
daa
lret
inc
add
add
mov
shr
sub
add
ret
mov
push
leave
int
or
xor
out
or
lds
addb
xchg
xor
in
xchg
scas
cwtl
dec
jmp
fsubrl
add
les
pop
mov
add
push
jno
bound
mov
stos
adc
add
add
sub
sbb
rolb
inc
add
add
test
jbe
mov
add
dec
xchg
add
add
add
inc
movsb
add
pop
js
add
add
rolb
psrlw
mov
add
sbb
dec
push
push
add
test
stc
stc
cli
ret
adc
pop
cvtps2pd
inc
add
mov
mov
ret
jecxz
in
stos
cmc
jle,pt
xchg
mov
arpl
in
scas
adc
add
outsl
inc
push
push
shll
add
jp
lahf
adc
iret
rolb
pop
leave
cmp
or
add
insb
add
mov
insb
arpl
xchg
add
add
lret
jle
mov
in
xchg
mov
jnp
add
insl
mov
leave
les
mov
sbb
pop
mov
adc
stos
fbstp
cmpl
sub
std
xchg
and
dec
into
call
mov
aas
mov
lret
int
addb
add
adc
mov
add
add
xor
test
mov
or
or
sbb
mov
mov
inc
cmpsl
dec
sub
leave
sbb
das
aas
jle
in
mov
add
or
loopne
inc
lock
test
or
add
aam
inc
movsb
add
shll
xchg
or
jge
mov
mov
loop
xor
cmp
movsb
add
push
je
mov
add
add
xchg
add
and
mov
sbb
add
mov
xor
arpl
mov
push
add
loop
ret
sbb
imul
add
mov
aas
cmc
loopne
lret
sbb
add
incb
push
out
or
xor
loopne
cld
mov
enter
add
jecxz
sub
sub
out
std
nop
add
mov
popf
xor
pop
push
inc
jge,pn
pop
push
inc
addb
rorl
bound
mov
aad
push
mov
add
loope
mov
ret
repnz
jp
pop
xchg
lods
cmp
sti
arpl
lret
daa
std
int3
xchg
addb
pusha
add
add
cs
adc
add
gs
jmp
add
add
and
push
add
add
pop
mov
test
das
cmpsl
add
xchg
xchg
add
out
add
add
add
add
and
add
loope
and
add
xor
ljmp
mov
add
iret
jns
dec
imul
and
mov
out
ror
dec
xor
dec
push
cwtl
mov
pop
aam
das
add
mov
xor
fldenv
mov
mov
add
in
fsubrs
mov
addb
add
outsl
adc
xchg
out
xchg
add
nop
add
xchg
add
add
mov
xor
xchg
add
add
dec
das
aaa
out
mull
mov
add
mov
out
arpl
rcrl
add
iret
adc
popf
shll
les
and
mov
dec
dec
int3
mov
and
push
add
aad
add
sub
sbb
add
ret
mov
lds
int
lret
data16
scas
sbb
add
add
add
add
ljmp
xor
adc
xchg
addb
neg
out
add
add
add
mov
addr16
add
add
sub
aaa
out
ljmp
dec
lcall
inc
add
clc
orl
repnz
gs
sahf
add
cmc
cltd
adc
inc
shll
sbb
sbb
add
add
add
and
loop
popf
clc
cmc
outsl
aam
cmp
xor
xor
mov
repnz
add
cld
test
fldcw
cmp
pop
movsl
es
add
fwait
dec
and
lock
add
mov
lods
cmp
daa
ret
cli
cmp
add
mov
rcl
add
data16
mov
mov
mov
mov
add
jge
les
pop
data16
cmp
cmp
std
inc
add
mov
add
sbb
xor
pop
stos
sub
rolb
sub
add
xchg
lcall
add
popf
pop
or
xchg
jo
sub
add
add
cs
add
xlat
daa
mov
and
mov
push
cmp
add
add
sub
cmp
aad
add
add
ret
pop
pusha
add
fdivs
xchg
add
push
add
lret
jl
mov
push
add
xrelease
push
add
push
add
mov
sbb
gs
out
push
jo
mov
test
cmc
cmc
push
add
xchg
add
inc
add
mov
fadd
xchg
add
pop
lock
or
add
mov
popl
mov
add
mov
jg
push
sub
adc
shll
inc
dec
clc
test
loop
mov
std
enter
mov
movsb
add
add
mov
addb
mov
ss
mov
jmp
push
add
scas
fiaddl
addl
sub
cmp
outsb
test
int
add
in
xlat
fcmovnbe
add
add
mov
mov
xlat
add
mov
push
pop
imul
iret
fbld
push
add
add
mov
pop
roll
iret
stos
cli
pop
mov
adc
add
out
mov
push
add
sahf
icebp
push
add
int3
mov
xchg
add
add
pushf
xlat
dec
ljmp
leave
mov
popf
clc
xor
add
add
add
loope
ret
pop
out
jmp
add
add
adc
cmp
add
dec
pop
sub
add
add
pushf
jge
test
xchg
add
mov
inc
add
aam
inc
add
dec
xor
cmp
fs
mov
add
add
dec
or
add
lcall
add
js
call
jge
std
inc
add
add
dec
jo
and
or
push
mov
or
in
add
and
icebp
mov
lret
jne
daa
loop
in
xchg
int
loope
js
add
scas
mov
add
out
lods
mov
addb
in
pop
movb
sbb
jae
sub
add
sbb
add
add
in
inc
add
add
add
cs
add
lds
in
xchg
add
add
add
inc
add
mov
add
cmpsb
add
dec
dec
fistps
xchg
add
add
xchg
data16
mov
and
mov
lcall
lahf
add
lret
add
xor
pushf
sub
inc
add
and
and
add
fbld
adc
lcall
inc
or
add
inc
pop
das
adc
dec
dec
jbe
and
mov
cmp
add
add
fbstp
addb
add
lods
ljmp
addb
nop
add
int
jb
cmp
mov
cltd
in
xor
or
add
stos
mov
add
mov
push
or
in
jns
add
push
add
imul
gs
cmp
add
pop
or
popf
push
and
mov
mov
lret
add
mov
pusha
add
add
pop
dec
pusha
add
jl
jo
sbb
iret
lret
sub
addb
dec
fildll
add
outsl
inc
add
dec
push
push
add
aas
std
xor
xchg
shr
fsubl
cmpsl
xor
adc
sbb
add
cmpsl
xor
popa
lahf
or
add
mov
xor
mov
add
sbb
rolb
aas
mov
out
outsl
mov
push
xchg
push
pop
cmpsb
add
loope
mov
add
add
mov
add
movsl
sub
mov
into
mov
xchg
out
mov
nop
add
mov
or
ss
outsb
in
adc
imul
add
sbb
addb
inc
add
nop
add
add
inc
cmp
push
add
lcall
add
iret
add
mov
int3
cmp
adc
pop
inc
rolb
or
repnz
xchg
add
mov
mov
mov
aad
loope
add
mov
and
js,pn
or
pop
lret
push
mov
dec
and
mov
subl
jne
stos
loope
mov
dec
jo
insb
nop
add
fildl
sub
lahf
clc
out
popf
and
mov
add
dec
pop
call
add
and
push
add
imul
jae
pop
inc
add
enter
push
add
add
add
std
cltd
mov
add
mov
add
mov
jno
inc
lret
std
pop
imul
add
xor
pusha
add
nop
add
loope
jnp
add
add
cwtl
jbe
lods
cmpsl
pop
das
scas
arpl
out
jb
jge
adc
xchg
xor
or
lahf
in
adc
out
fwait
js
inc
mov
add
outsb
pop
mov
cltd
fidivl
sbb
lcall
sti
repz
insl
xlat
mov
lret
jb
cmc
mov
mov
out
mov
dec
imul
js
mov
add
repz
dec
dec
data16
test
fwait
xor
mov
rolb
jns
add
mov
add
ror
subl
mov
xlat
hlt
add
add
sub
add
add
lcall
add
cmpsl
xor
add
inc
iret
out
adc
jmp
mov
fadds
test
and
scas
xor
addb
in
pop
nop
add
in
fldcw
xor
nop
add
add
pop
fcoml
xchg
jle
add
arpl
add
add
mov
add
sti
js
add
jg
in
daa
mov
add
xchg
add
pop
nop
add
add
xor
leave
xchg
push
add
xor
jle
add
or
fiaddl
add
and
icebp
cmp
incb
pop
repz
add
or
push
add
xchg
add
inc
add
fdivs
jbe
clc
push
add
cmp
pop
ljmp
xor
add
or
ret
inc
repnz
popf
dec
rcll
mov
aad
cmpsl
je
rolb
pop
or
push
add
add
mov
insl
pushf
std
jae
cld
rolb
cmc
sbb
add
out
xchg
add
leave
loopne
jg
mov
add
sbb
out
dec
mov
sub
loopne
cmp
cmp
in
rol
mov
inc
add
mov
or
xor
ja
add
movsb
add
xchg
adc
rolb
xor
jbe
jle
add
add
add
rolb
xchg
add
add
jae
add
imul
adc
and
mov
push
mov
aam
jmp
add
xchg
push
imull
movsb
add
jne
out
add
pop
lods
mov
cwtl
or
add
mov
cmovg
mov
inc
mov
add
lcall
add
mov
leave
jnp
mov
add
add
into
les
out
fwait
mov
int
loopne
sbb
loop
cmp
push
add
add
push
jg
xchg
sbb
scas
mov
cltd
rolb
push
add
testb
add
add
fistpl
inc
xor
pop
mov
add
sub
mov
add
stc
xchg
cmp
add
or
pop
out
add
sahf
popf
add
push
stos
seta
add
add
add
jae
add
stos
xchg
mov
sbb
and
mov
cmp
nop
add
arpl
add
popf
and
ljmp
add
test
in
fsub
add
mov
push
add
mov
xchg
add
mov
inc
add
add
sub
loop
lea
mov
movntps
movb
addr16
mov
dec
mov
sub
mov
fimull
cmp
cwtl
mov
mov
mov
cld
ror
add
mov
jle
test
test
dec
int3
je
cmpsl
mov
das
int
add
add
insl
inc
add
stos
popf
insb
pusha
add
or
dec
add
adc
jo
data16
popf
sti
or
jo
pop
mov
js
adc
mov
fucomi
mov
xchg
mov
add
and
add
pop
popa
push
out
clc
or
add
push
push
add
lret
inc
jbe
jb
rcr
cmp
add
mov
mov
xor
push
add
in
jno
das
mull
sub
fmuls
enter
add
popf
add
xor
add
scas
add
add
dec
sub
call
add
sbb
add
mov
add
mov
add
adc
mov
into
push
inc
add
add
aas
pop
repz
pop
shrl
pop
cld
icebp
inc
xor
mov
jle
add
pop
sub
fldl
push
add
aas
mov
and
adc
mov
mov
add
jb
mov
outsb
jb
inc
dec
add
mov
push
add
lds
mov
add
std
ljmp
sub
dec
adc
cmp
sub
add
std
xor
add
bound
mov
mov
mov
movb
or
lahf
jle
sbb
add
mov
and
mov
mov
nop
add
xchg
add
mov
mov
mov
ffree
cmc
int
addb
jbe
inc
add
add
jo
add
mov
xor
xchg
jno
divl
sbb
iret
push
add
jae
add
add
mov
mov
mov
or
fdivl
fcmovnu
dec
jo
dec
sbb
cltd
cmpsl
inc
mov
lret
popa
popf
pushf
mov
in
js
dec
xor
rolb
mov
add
lcall
inc
push
add
jmp
add
jge
stos
rolb
bound
mov
inc
add
or
add
add
lods
nop
add
xor
imul
inc
add
mov
rolb
sbb
xchg
add
mov
setl
inc
add
sub
xor
das
mov
out
sub
push
add
leave
rorl
icebp
jb
xlat
movb
add
pop
add
jle
rcll
add
bound
mov
add
pop
mov
or
push
add
mov
int3
mov
aaa
xchg
add
sti
bound
mov
add
push
add
mov
jb
dec
sub
clc
sub
and
mov
add
andl
int
movsl
push
add
sub
mov
add
jnp
dec
add
das
les
aad
cmp
add
push
add
add
add
and
fldt
add
sub
out
pop
push
add
lods
pop
cmp
jge
clc
xor
inc
xor
xchg
std
mov
add
add
aad
rolb
lds
add
add
add
mov
inc
add
mov
jns
add
movsl
ss
fnop
add
ret
xlat
or
popa
gs
cmp
je
in
arpl
sahf
inc
nop
add
repz
add
and
add
add
add
add
dec
test
push
hlt
add
add
add
add
inc
js
add
mov
push
add
sbb
fwait
add
jbe
lret
push
pushf
js
jmp
push
add
mov
cmpsl
mov
movsl
ret
add
das
fwait
pop
addb
loope
add
pop
cld
fnsave
add
sbb
push
mov
stc
mov
imul
sbb
add
or
add
add
rolb
add
add
cmpsb
add
popf
sbb
add
pusha
add
faddl
add
jl
add
mov
add
outsl
xchg
add
or
iret
pop
dec
and
push
adc
or
add
push
push
add
cwtl
pop
outsl
test
dec
adc
xchg
fidivrs
std
mov
xor
int3
enter
enter
add
and
add
dec
jne
push
add
das
iret
lock
add
push
fadd
push
inc
in
add
mov
add
jbe
inc
add
das
and
mov
add
repnz
movsb
add
in
mov
add
mov
mov
mov
jb
xor
pushf
push
fwait
rcrl
mov
mov
add
adc
lahf
mov
imul
mov
jb
scas
mov
add
add
xor
mov
mov
add
xor
jbe
push
add
jo
pop
adc
add
outsb
jmp
add
aam
out
push
push
mov
xchg
daa
sub
add
mov
add
mov
add
movsb
add
rcll
add
mov
rolb
inc
add
cmp
add
out
cmpsb
add
jae
add
mov
imul
pop
rolb
ret
pop
or
addr16
add
jnp
xlat
lahf
repnz
add
adc
inc
add
xchg
jecxz
mov
jo
addr16
mov
cmp
or
sbb
bound
mov
sub
pop
and
sub
mov
or
iret
jbe
dec
push
add
pop
addr16
pop
xor
and
mov
mov
pushf
cmc
je
addl
and
int
add
add
aaa
mov
js
cmp
add
testb
jae
lds
add
jno
cmp
push
add
add
sbb
sbb
loope
xchg
add
je
dec
lods
adc
movb
leave
dec
lahf
cmp
add
add
add
rorl
cmp
dec
add
xchg
fnstcw
pushf
dec
or
cmp
data16
push
or
pop
ja
add
lods
or
jnp
add
lods
int3
fnstenv
fwait
test
add
enter
mov
mov
call
dec
mov
or
add
add
add
add
lret
bound
mov
add
push
xchg
mov
add
rolb
cmc
nop
add
add
outsl
icebp
mov
loop
inc
add
add
xor
pop
and
loope
rolb
add
mov
add
out
in
jg
add
cmp
sub
jns
add
cmc
and
add
mov
adc
movsl
cmp
add
sahf
pmaddwd
add
negl
andl
movsl
ret
lods
xchg
push
mov
add
lods
inc
add
cmp
les
xchg
add
hlt
add
add
mov
sub
add
gs
add
mov
add
fdivrl
das
add
pop
sub
in
jbe
pusha
add
jmp
or
add
in
cmc
push
cltd
or
xchg
cwtl
mov
clc
mov
cmc
add
je
frstor
add
js
add
outsl
add
out
sub
int
icebp
pop
mov
jnp
inc
add
add
add
xchg
add
lds
and
or
inc
add
cmc
add
cs
cmp
cmp
mov
add
add
ret
mov
popf
cmp
sbb
fnstcw
add
add
inc
cmp
add
add
mov
test
xlat
fnstcw
arpl
sbb
add
inc
mov
test
dec
imul
inc
add
mov
stc
rolb
jle
mov
add
mov
leave
sub
pop
mov
sahf
data16
test
add
jecxz
add
add
int
xor
add
mov
out
inc
and
insb
pop
or
mov
jbe
xchg
add
xchg
fsubl
jne
xchg
push
fdivrl
add
fwait
loope
call
add
add
add
add
jae
add
aam
ret
decl
incb
add
xchg
mov
xor
mov
pop
popa
stos
or
adc
lea
test
lea
or
xor
mov
out
add
mov
cltd
in
xchg
add
test
mov
pop
mov
cmp
into
lcall
movsl
stos
xor
sbb
iret
mov
leave
fsubrl
push
inc
add
add
out
jae
stos
adc
push
add
out
inc
cs
bound
mov
add
sub
and
mov
dec
jno
mov
sub
add
add
pop
test
or
mov
add
xchg
xorl
add
pushf
xchg
add
add
inc
adc
adc
sti
scas
add
cmp
clc
in
add
sub
sbb
call
lret
outsb
xorl
pop
add
sbb
out
sub
add
fidivrl
add
add
xchg
outsb
cli
add
cmp
cmp
add
xchg
add
add
add
inc
and
add
jg,pn
insl
dec
ds
jbe
add
stos
out
pushf
lea
inc
add
enter
sub
fisubrs
loop
mov
add
jp
aam
inc
add
jnp
dec
and
mov
and
fidivl
inc
ret
add
mov
dec
mov
sbb
sub
insb
mov
cmp
add
rolb
add
mov
mov
popa
mov
pop
and
ljmp
cmp
pop
mov
add
cmpl
add
nop
add
mov
add
inc
sub
add
mov
jge
add
add
inc
push
add
add
sub
std
jl
rcrl
add
dec
in
mov
add
add
fsubs
jg
add
sti
mov
repz
lcall
cmp
jno
add
popa
pop
cwtl
or
add
or
mov
jns
mov
fldcw
and
mov
in
mov
cld
dec
pop
lahf
or
add
add
mov
xlat
xlat
push
in
cli
lahf
and
mov
aaa
sti
xchg
add
mov
add
je
lea
add
mov
add
jl
movb
add
and
mov
sub
xchg
and
fmuls
push
imul
jno
arpl
mov
stos
dec
adc
std
aam
dec
and
jle
sbb
das
aad
data16
andl
les
push
les
pop
rolb
fimuls
dec
push
imul
add
push
or
add
add
add
inc
add
jecxz
mov
nop
add
out
mov
xlat
in
push
stos
daa
xchg
mov
push
add
mov
mov
pop
xlat
add
add
outsb
pop
inc
pop
add
popa
and
mov
popa
roll
add
iret
cmp
mov
add
or
push
pop
xor
add
ss
cmpsb
add
sbb
add
mov
mov
aam
mov
inc
add
ljmp
aad
jne
test
fisttps
add
cltd
cmp
mov
cmpsl
mov
stc
loop
insl
jle
loop
add
in
in
addb
xchg
mov
push
add
in
fwait
push
add
test
add
sbb
xchg
cmp
inc
stc
push
add
mov
aam
jmp
gs
lret
mov
add
mov
cmp
inc
add
push
mov
ret
push
repz
add
mov
pop
daa
nop
add
add
push
add
add
ljmp
imul
push
mov
add
ret
or
dec
sub
out
xchg
rol
pop
adc
xchg
cmp
test
out
mov
jo,pt
scas
xor
sbb
pop
cmc
adc
mov
test
mov
inc
add
mov
imul
sbb
add
push
xor
mov
pop
mov
sub
mov
repz
jl
pop
jae
pusha
add
and
add
add
pop
pop
inc
jno
dec
outsl
add
aaa
testb
xor
xor
add
jno
aam
bound
mov
jp
cmp
pop
or
jmp
add
mov
out
test
in
dec
pop
xor
dec
jle
add
mov
cmc
push
inc
add
mov
dec
push
add
mov
aaa
mov
loopne
rolb
add
iret
pop
mov
gs
jno
mov
idiv
xchg
add
mov
cmpsl
mov
add
xor
add
inc
add
clc
jns
add
scas
push
add
mov
fdiv
add
add
rcll
add
add
sbb
dec
mov
push
mov
add
ret
add
inc
add
movsb
add
add
add
mov
push
addb
dec
mov
sbb
add
add
add
add
mov
hlt
add
inc
add
mov
outsl
sbb
add
ds
add
dec
push
push
fstl
add
push
stos
int
mov
pop
xchg
ljmp
add
rolb
add
jl
mov
mov
add
mov
bound
mov
push
add
test
mov
add
mov
aaa
into
rolb
cmpsl
pusha
add
sub
out
sub
add
stc
cmc
imul
or
fwait
jecxz
loopne
sub
ret
decl
cmp
xor
inc
daa
xor
add
add
pop
testb
mov
pop
mov
dec
fidivs
lret
out
inc
pusha
add
cs
repnz
add
add
int
mov
add
leave
addb
pop
fisubs
adc
dec
sub
mov
shll
rolb
add
or
shll
out
cltd
mov
add
jnp
xorl
sub
mov
data16
les
test
add
mov
sub
jae
repz
in
es
cli
cmpl
xchg
add
push
add
scas
test
cmp
rcll
and
add
ret
mov
enter
jb
sbb
jg
xchg
add
mov
in
adc
pop
mov
mov
or
jns
xor
popa
pop
mov
aaa
add
dec
popf
dec
mov
add
mov
lret
sub
repnz
sbb
add
add
in
mov
or
movsl
xlat
mov
adc
es
adc
addb
mov
push
add
and
jne
jae
int3
pop
leave
aas
loop
xor
in
jnp
jnp
add
mov
sub
mov
test
out
sub
add
add
push
add
outsb
dec
lahf
data16
add
test
out
push
mov
add
mov
and
mov
xchg
jg
data16
push
add
out
in
lock
adc
aad
mov
pop
xor
rcrl
add
call
mov
fidivrl
add
xchg
add
testb
inc
iret
jb
insb
jmp
add
jo
movsb
add
add
or
add
jo
aad
add
add
icebp
psubq
add
shll
xchg
jo
in
lret
cmp
popa
add
mov
add
adc
add
js
add
sbb
stos
sub
pop
jns
mov
call
aam
rcll
push
add
add
mov
mov
push
popf
pop
xchg
add
aam
and
and
mov
xor
les
clc
aam
imul
les
stos
jge
call
fstpl
mov
cmp
outsl
mov
fstsw
xchg
add
mov
add
add
push
sti
scas
div
pop
in
add
pop
inc
push
jnp
sub
out
adc
push
add
jo
popa
ja
repz
jbe
xor
add
scas
cmp
inc
add
outsb
pop
push
cmpsl
stos
add
ret
test
ret
xchg
jge
nop
add
xchg
add
lret
jno
mov
dec
and
add
add
add
mov
xlat
insl
ret
sbb
add
sub
mov
jo
sahf
pop
mov
mov
shrl
add
inc
mov
mov
sbb
mov
hlt
add
ret
mov
mov
jb,pt
lret
inc
add
add
add
inc
add
cwtl
adc
orl
add
add
push
fiaddl
adc
js
pop
test
add
inc
push
outsb
xor
insb
lahf
xchg
add
into
test
in
stc
cmp
in
add
sub
add
rolb
pop
stc
or
addl
add
addb
add
stc
add
mov
add
js
sub
adc
movsb
add
xor
fisttpll
imul
cli
cld
rolb
mov
add
mov
rdmsr
add
sbb
xchg
bound
mov
xchg
mov
add
int3
mov
fucomip
out
ljmp
add
add
jg
imul
add
add
cli
dec
xchg
add
push
adc
sbb
addb
add
out
jne
xchg
add
mov
out
add
test
cli
jecxz
sbbl
js
xor
and
daa
cwtl
sub
lahf
test
jae
adc
add
enter
iret
fcmovnbe
add
jecxz
add
add
xor
push
nop
add
dec
repz
add
add
mov
stos
fisubs
mov
add
pop
mov
mov
mov
or
dec
xchg
add
push
and
pop
testb
mov
add
repnz
mov
add
pusha
add
mov
add
inc
addb
insb
xor
jb
test
in
xchg
add
mov
mov
add
fcoml
into
xor
or
xchg
add
push
or
push
rolb
loop
les
mov
outsl
adc
lret
lret
int
add
mov
jo
dec
mov
mov
mov
add
xor
add
and
dec
frndint
addb
xchg
int3
pop
xchg
add
mov
add
sbb
roll
add
das
jno
mov
xor
mov
jae
lock
cld
inc
add
xor
add
add
add
int
add
sbb
test
rolb
xchg
bound
mov
cmp
out
add
mov
mov
ret
out
xchg
cld
xchg
add
mov
repnz
pop
mov
or
lcall
sbb
and
sahf
loope
out
cmpsl
and
push
add
or
add
movsb
add
fdivrl
jbe
jmp
add
mov
push
add
mov
add
add
add
outsb
mov
add
loopne
sub
test
mov
inc
add
or
add
in
out
fisubs
add
leave
mov
add
add
lds
add
call
js
ja
xchg
mov
cmc
je
popf
movsb
add
out
xor
sub
enter
add
mov
lret
cmp
xchg
pop
hlt
add
add
add
mov
add
add
int
push
cmpsb
add
lret
sub
imul
xchg
fwait
pop
pop
jb
or
test
push
sub
add
inc
add
add
loopne
fmull
jge
add
call
ljmp
add
data16
aad
scas
sub
add
lods
ds
fisubl
pop
movsl
rolb
add
ds
sbb
add
sub
imul
add
add
inc
insl
in
int3
rolb
pop
ja
add
sbb
in
mov
jmp
add
insl
sbb
xor
jb
sbb
loop
xlat
mov
mov
adc
ret
loopne
or
add
add
mov
push
add
add
sub
mov
dec
jns
scas
sub
add
mov
sbb
sarl
pop
jno
push
add
mov
fcompl
xor
sti
push
add
jg
pop
and
add
adc
and
jmp
cli
inc
out
les
xor
add
sub
adc
xchg
add
add
testb
ficoml
inc
jns
xchg
add
add
push
mov
popf
jnp
add
stos
and
pushf
sbb
push
jno
pop
xor
pop
iret
cmp
add
add
xchg
add
pop
pop
scas
ror
mov
add
add
or
or
sub
jne
add
xor
jmp
mov
add
jne
sarl
add
push
dec
loop
jmp
add
sbb
or
or
jnp
pop
in
adc
and
mov
inc
add
sarl
out
xchg
push
fists
add
dec
jne
mov
out
mov
cmc
mov
add
dec
imul
ja
mov
sub
cld
mov
sahf
inc
push
int
add
addb
xor
add
scas
xchg
add
add
test
add
xchg
add
add
adc
add
pop
add
cmp
loope
mov
jp
lret
push
sbb
lds
nop
add
or
int3
rolb
inc
add
add
add
ret
lcall
xchg
add
mov
ret
add
add
lcall
mov
mov
dec
pop
cmp
push
add
mov
add
cld
data16
leave
mov
sbb
lret
je
push
daa
add
sbb
add
jmp
push
mov
pushf
jo
dec
fcoms
and
jo
rolb
leave
mov
add
push
insl
xlat
jae
push
add
add
les
enter
fs
sub
add
sub
les
cmpsb
add
pop
mov
cmp
add
mov
add
lahf
testb
lock
add
mov
clc
sbbl
add
add
add
call
test
bound
mov
sub
push
add
scas
cmpsb
add
add
pop
pusha
add
xor
lock
mov
out
in
or
push
add
lock
jmp
xor
leave
add
inc
out
sub
add
inc
jae
push
sbb
add
mov
ss
add
jb
dec
mov
int
add
add
add
add
add
add
adc
lcall
cmp
push
lods
popl
ret
out
push
mov
aas
cmp
fsts
aaa
sbb
add
sti
push
in
add
mov
add
add
add
add
add
cmp
push
add
push
push
jae
jle
add
frstor
bound
mov
add
add
add
std
pop
in
xorl
pop
inc
add
decb
pop
mov
mov
or
sub
sbb
jae
outsl
adc
out
mov
stos
movsl
pop
adc
add
imul
sub
hlt
add
vmovhps
push
loop
mov
add
push
mov
fistl
cmp
data16
mov
add
inc
xchg
add
xlat
f2xm1
add
add
or
xchg
add
xchg
in
addr16
lods
mov
push
nop
add
mov
or
sub
lahf
scas
push
sahf
aad
xchg
les
fsub
add
or
fstps
repz
lcall
add
pop
add
mov
and
lods
cmp
add
iret
add
xor
jge
cmp
sti
popf
mov
mov
ljmp
add
xchg
pop
test
je
add
sub
movsb
add
add
push
jg
add
sahf
or
inc
scas
les
in
push
xchg
adc
rolb
loop
xor
or
add
es
add
bound
mov
rolb
pop
cld
lahf
and
mov
mov
int
fisttpl
dec
push
add
mov
in
sub
add
fistpl
repz
mov
add
mov
pminub
arpl
add
lret
jne
push
sub
mov
and
imul
and
mov
fcmovb
add
add
sbb
xor
xchg
or
fisttpll
add
pop
inc
add
or
add
movsb
add
fnsave
jne
cwtl
inc
cmp
int3
jle
mov
jl
add
mov
cmp
outsl
std
jno
adc
cmp
in
dec
pusha
add
out
filds
mov
and
mov
inc
add
sbb
add
xor
imul
jl
add
cmpsb
add
mov
stos
arpl
add
add
add
mov
xor
rolb
push
add
mov
insl
loope
dec
leave
jns
add
add
pop
aaa
xchg
add
cmp
dec
out
cmpsl
daa
mov
add
jbe
fsub
add
mov
jge
add
add
out
jb
jp
fwait
daa
popa
jnp
nop
add
pushf
inc
addr16
add
movsl
mov
add
adc
cmpl
scas
cmp
ror
int3
aam
pop
ds
adc
pop
imul
mov
imul
jmp
cli
fs
aad
sub
xchg
popf
fs
lock
mov
add
add
