sub
dec
or
add
adc
mov
mov
arpl
add
mov
int3
sbb
xchg
pop
xchg
add
fs
ret
mov
fdivl
mov
cld
jge
gs
jns
add
movsb
out
shl
cmp
mov
leave
stos
mov
add
mov
aaa
into
and
add
popa
sbb
orl
jmp
push
push
mov
in
pop
ficoms
mov
imulb
mov
stos
sub
inc
loopne
mov
xor
mov
mov
fsubrs
xlat
jae
xor
add
push
pushf
stos
jne
mov
addb
sbb
aaa
adc
sbb
pop
or
roll
sub
add
arpl
add
cmp
sub
add
aas
test
mov
mov
push
icebp
add
aas
mov
cld
xor
xchg
lcall
add
mov
mov
popf
addl
lds
fsubrl
mov
dec
stos
fnstsw
or
mov
add
cmp
hlt
mov
dec
dec
inc
push
inc
mov
dec
stos
xor
enter
pop
enter
push
add
out
sar
popa
xchg
add
in
je
cmp
add
pop
fnstcw
xchg
add
and
add
mov
mov
cmp
add
dec
arpl
dec
test
into
sub
inc
jno
push
outsl
int3
xor
das
xchg
lods
test
push
mov
push
insl
loop
mov
stos
lret
add
cmpl
mov
add
add
in
scas
pop
pusha
add
daa
sub
mov
mov
pop
or
add
mull
rcr
add
mov
jne
or
push
mov
popa
test
dec
int
xlat
aad
call
sub
mov
stos
xor
mov
add
mov
sub
hlt
lock
cmpsb
xor
jbe
imul
pop
loopne
mov
mov
mov
mov
mov
outsl
dec
add
mov
repz
in
xchg
sbb
fisttps
jae
popf
jp
add
mov
add
movsl
jno
jmp
fisttps
xor
mov
sbb
cmc
mov
jp
add
mov
cmp
xchg
decl
xor
mov
lds
add
inc
mov
add
pushf
jl
add
sbb
mov
mov
push
xor
mov
enter
xor
in
es
cmc
inc
fstpt
xchg
mov
add
xchg
add
cmpsb
ljmp
stos
sbb
scas
repz
lods
jb
mov
stc
sahf
jle
ljmp
adc
lods
loop
mov
cmp
and
cmp
jbe
add
and
mov
and
lods
add
mov
add
push
lock
dec
jge
add
call
add
push
and
inc
push
enter
sub
or
pop
stc
push
push
add
xchg
sahf
fdivr
in
pop
adc
mov
push
push
rolb
stos
icebp
sbb
es
inc
add
dec
or
add
addb
jge
xor
mov
rcr
sahf
jge
push
jp
jge
sbb
data16
je
cli
push
jns
add
punpcklwd
add
jge
pop
into
dec
sub
test
call
mov
cmp
inc
add
lods
lfs
cmp
or
aaa
sbb
popa
das
lahf
inc
inc
add
cmc
pop
push
std
and
push
pop
jl
mulb
add
loope
movsb
sbb
repnz
scas
xchg
ljmp
fldl
mov
xor
mov
add
inc
add
mov
mov
jge
inc
jmp
movsl
sbb
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
pop
pop
xchg
roll
aam
les
movb
mov
loope
lret
icebp
pop
mov
mov
xchg
into
mov
pop
std
sub
clc
jl
add
mov
test
mov
xor
faddl
mov
dec
mov
xor
clc
lock
hlt
jp
jne
rolb
mov
push
sub
outsl
out
data16
mov
sarl
push
push
or
hlt
aad
test
rolb
mov
add
jnp
nop
add
sbb
and
cmp
pop
cmpsl
in
mov
mov
lret
loop
mov
lea
mov
dec
iret
bound
mov
add
ficomps
lds
xchg
xchg
jbe
test
mov
mov
mov
add
clc
into
push
popf
fisubrs
std
jb
mov
xchg
test
mov
xchg
push
push
inc
inc
add
adc
mov
es
addr16
data16
dec
ss
xor
mov
in
cmp
cmp
push
sub
imul
cmpsb
out
adc
add
or
add
test
repnz
add
sub
and
out
orl
xor
cli
lea
dec
and
mov
sub
add
mov
bound
mov
jbe
xchg
fstps
pushf
cltd
into
xchg
push
rolb
mov
movl
xor
or
inc
fwait
ret
movsb
ficompl
dec
lea
fwait
inc
pushl
xchg
mov
out
xsave
mov
dec
fiadds
xchg
inc
popa
sar
pop
pop
icebp
shll
mov
push
iret
pop
mov
mov
add
movsb
fildl
and
sbb
jmp
inc
mov
add
icebp
lret
jo
mov
jbe
lret
outsl
pusha
add
nop
add
or
xor
xchg
jbe
push
insl
aam
pop
add
xor
mov
out
cmpsb
fwait
pop
popl
mov
add
mov
mov
add
sbb
enter
mov
adc
mov
data16
jne
or
cmc
mov
hlt
hlt
sbb
rolb
mov
add
scas
fmull
mov
adc
je
adc
mov
add
mov
add
add
mov
mov
add
xchg
je
jge
add
pop
pop
jge
nop
add
je
fsub
pop
mov
imul
mov
into
pop
clc
mov
mulb
push
add
adc
mov
mov
mov
add
cltd
mov
mov
xchg
jmp
mov
jp
test
xchg
add
sbb
pop
cmpsl
cld
or
scas
ljmp
lock
adc
adc
mov
or
jae
addr16
add
mov
cmp
cmp
add
add
adc
and
mov
jns
push
lods
dec
pop
jbe
cmovnp
xor
mov
add
adc
cli
lea
out
jmp
xchg
or
push
scas
mov
aad
dec
lret
or
mov
mov
dec
sbb
inc
shll
add
mov
inc
cwtl
in
add
lret
in
stc
ss
addr16
stc
dec
mov
fisubl
add
jmp
popf
cmp
xchg
push
imul
inc
cmp
mov
add
xor
mov
add
mov
mov
pop
dec
mov
adc
cmp
pop
pushf
lds
cwtl
sub
addb
loop
mov
enter
sbb
pop
lahf
and
mov
mov
jmp
outsl
outsb
inc
add
es
mov
push
push
push
sub
jge
inc
test
sti
daa
iretw
xor
lea
aad
jge
fdivl
inc
add
fisubrl
dec
mov
xor
mov
jb
mov
mov
add
ljmp
pop
call
inc
add
lret
repnz
insl
fisttpll
or
add
mov
add
add
mov
add
dec
dec
pop
fidivs
das
jbe
add
sbb
add
mov
add
mov
in
ja
aaa
and
add
lods
push
push
pop
xchg
imul
add
mov
ficomps
mov
loop
mov
mov
jbe
adc
mov
addb
insb
push
stc
mull
add
out
adc
jle
shll
movsl
lods
aaa
jecxz
add
arpl
aas
jp
sub
ja
mov
adc
mov
xlat
cld
xchg
jbe
xor
imul
mov
mov
rcll
movsl
adc
xor
mov
sub
inc
add
add
push
stos
in
xchg
pop
lods
add
mov
add
mov
mov
mov
or
inc
add
mov
push
imul
mov
add
rolb
mov
aas
adc
mov
add
mov
push
bound
mov
cltd
std
scas
les
xchg
add
pop
push
add
add
shll
mov
cmp
mov
sub
mov
add
scas
sbb
aas
dec
nop
add
cld
and
jl
mov
mov
out
fsub
mov
mov
mov
adc
jns
rcll
jns,pt
adc
mov
mov
clc
xchg
adc
mov
inc
adc
mov
add
mov
jl
inc
fisttpll
addb
sbb
mov
mov
lret
frstor
aaa
test
add
dec
dec
push
mov
mov
aad
sub
push
hlt
mov
inc
sub
mov
into
jmp
movsb
sahf
and
mov
lock
bound
mov
lods
mov
scas
stos
shr
mov
and
aas
sub
cmpsb
sbb
add
pusha
add
inc
sbb
addb
int
inc
mov
sbb
shll
mov
insb
icebp
sub
or
jmp
add
mov
pop
add
mov
xchg
add
dec
sbb
mov
mov
add
outsl
lret
addr16
jecxz
out
cmpsl
orl
movsl
pop
jmp
add
ljmp
fbld
push
add
add
pop
mov
mov
adc
mov
loope
inc
lcall
adc
mov
mov
sbb
daa
addb
jle
sub
ficomps
into
dec
xor
mov
mov
add
mov
add
jo
mov
mov
popa
out
xor
mov
js
or
imul
mov
push
add
mov
add
and
sbb
add
fidivl
stc
xchg
pop
jecxz
add
test
sub
addb
mov
mov
adc
mov
add
mov
add
add
hlt
ret
or
xchg
roll
mov
sub
add
inc
sub
fdivrp
or
mov
cmp
stc
cmpsb
dec
mov
jge
test
xor
sbb
mov
mov
mov
add
add
inc
xor
mov
out
lock
dec
adc
mov
add
jns
mov
lods
mov
fbstp
add
lds
xor
pop
ja
jno
jl
stos
xchg
add
jnp
std
ficoms
inc
sbb
divl
jg
insb
ret
dec
jbe
mov
xchg
pop
cmp
movsl
outsl
pop
cmp
cmp
xchg
sub
jp
lock
je
loop
mov
icebp
xchg
mov
clc
or
ljmp
dec
stos
push
cmp
push
sbb
add
push
fldl2t
int3
lea
dec
or
icebp
sbb
ret
ds
add
mov
cld
jp
xor
mov
add
lcall
movsb
pop
cmpsl
outsb
cmp
ds
add
aas
adc
mov
add
divl
xchg
add
and
hlt
and
test
dec
mov
sbb
ljmp
mov
jae
out
pusha
add
lahf
movsb
adc
mov
mov
aam
sub
lahf
xlat
mov
pop
dec
cs
mov
decb
enter
mov
add
lock
add
mov
jp
inc
adc
mov
xlat
sbb
and
mov
mov
xor
add
lret
insb
xchg
les
aam
rcll
jge
push
push
out
push
dec
out
addb
jl
ret
add
mov
dec
jge
fisttpl
push
push
push
dec
loopne
mov
add
sbb
add
jb
mov
mov
imul
test
mul
icebp
cmp
in
sahf
push
add
mov
add
pop
iret
rcrw
cs
inc
add
add
xchg
rolb
mov
aad
sub
mov
mov
adc
int3
xor
mov
int3
mov
dec
cltd
cmp
icebp
addb
inc
mov
inc
pop
icebp
out
push
lea
lods
push
sub
cmp
leave
sbb
lcall
and
add
jg
adc
jb
mov
jg
jno
adcl
add
mov
fldl
lret
jae
push
pop
mov
rolb
push
movsl
test
mov
fwait
stos
lods
insl
mov
jecxz
outsl
bound
mov
jo
mov
jo
mov
filds
aam
dec
loop
mov
int3
push
add
cmc
xor
mov
add
pop
loope
jecxz
nop
add
adc
loop
mov
dec
push
add
pop
fwait
scas
ret
mov
add
and
mov
add
popf
xchg
mov
mov
fwait
jl
into
or
sub
mov
aam
sbb
xlat
jae
add
inc
mov
test
add
xor
pop
pop
push
add
les
xor
stos
cmp
cli
aad
addb
mov
mov
loope
push
jle
jmp
lret
fisttpl
cmp
pop
aas
imul
ret
int
jo
mov
add
sbb
jle
lds
xchg
jle
add
mov
int
or
cmp
xchg
xor
les
sbb
mov
lahf
rolb
xor
mov
movsb
jmp
xor
mov
ret
cmp
int
pop
sbb
cmpsb
cmp
pushf
lods
scas
gs
mov
call
ss
sub
mov
loop,pt
mov
adc
mov
mov
stos
xchg
xor
push
push
mov
inc
aas
jl
adc
adc
adc
jle
jmp
sub
jne
cltd
lods
das
xchg
popl
cmpsb
cmp
add
out
lahf
sub
cli
sti
push
imul
ja
insb
dec
outsb
push
jmp
add
mov
pop
jecxz
dec
adc
mov
rolb
mov
add
in
addb
notl
add
pop
fsubp
add
enter
add
aaa
in
xchg
bound
mov
mov
pusha
add
or
in
mov
rol
subl
mov
sbb
add
add
sbb
or
fisttps
mov
out
decl
cmp
icebp
loopne
mov
rolb
mov
sbb
leave
jno
into
into
stos
nop
add
mov
add
jp
jno
push
xlat
add
leave
or
hlt
jnp
mov
add
les
out
out
sti
adc
mov
cs
scas
sub
les
pop
int3
loopne
mov
and
cmp
cmpsb
outsb
in
push
add
pushf
es
add
add
mov
push
dec
mov
stos
pop
js
pop
jg
add
inc
xchg
add
xor
mov
and
lea
push
in
jne
nop
add
std
das
sbb
loop
mov
scas
pusha
add
scas
rolb
mov
bound
mov
rcrl
movsl
and
popw
rolb
mov
in
jle
dec
loop
mov
mov
add
push
push
fisubl
mov
lahf
ret
jp
fucomp
xchg
rolb
mov
pop
in
adc
push
in
ja
fs
fwait
add
mov
nop
add
mov
add
mov
insl
pop
or
xchg
xor
divps
sub
call
popf
in
cmc
push
pop
imul
bound
mov
inc
add
add
mov
outsb
dec
inc
fdiv
xchg
xchg
call
mov
cmpsl
mov
pushf
andl
call
add
mov
add
add
sbb
add
xor
inc
add
sbb
ret
mov
add
loopne
mov
cmp
divl
mov
ljmp
add
pop
sub
mov
mov
jmp
dec
and
add
add
inc
add
mov
add
mov
cld
push
pop
xor
into
sahf
cmp
mov
jne
mov
in
shl
mov
mov
add
sub
pop
fs
mov
in
fimull
add
add
movsb
in
add
mov
mov
sbb
rol
test
xchg
inc
adc
sub
aad
sbb
movsl
mov
add
mov
mov
sub
add
sub
cwtl
xchg
enter
cmp
roll
mov
add
push
xchg
add
xor
adc
andl
aaa
imul
push
xchg
iret
outsb
pop
cmp
xor
xor
rolb
mov
fucomi
or
addb
push
outsl
sbb
push
sub
add
mov
stos
rolb
mov
mov
bound
mov
cmp
cld
and
popf
adc
push
mov
je
xchg
lea
jg
jecxz
aaa
mov
ficoml
add
add
xchg
stc
xor
mov
mov
add
mov
add
dec
dec
mov
mov
add
jns
xchg
fiadds
fistpl
add
add
push
test
push
add
mov
cmp
add
stos
push
std
popa
add
ret
outsb
jmp
mov
jae
sbb
add
daa
pusha
add
add
test
ss
add
mov
loope
jne
mov
add
insl
inc
xchg
mov
lea
ret
lds
aam
jbe
sti
or
push
ljmp
leave
scas
mov
fwait
dec
pop
movsl
xor
mov
add
mov
xor
mov
mov
mov
xor
mov
add
mov
mov
mov
add
sbb
in
push
dec
nop
add
addb
rolb
mov
lea
dec
loopne
mov
mov
not
lret
outsl
jp
lds
psubsb
mov
add
mov
mov
repz
shl
jno
push
dec
push
stos
adc
jmp
xchg
arpl
scas
sbb
mov
push
rolb
mov
pushf
cli
lret
mov
xchg
cmp
outsl
rolb
sub
dec
ret
sub
sub
dec
jmp
mov
pop
cmc
xchg
dec
xchg
daa
mov
aaa
mov
lret
cmp
adc
push
mov
add
aas
cli
addb
push
test
fisttps
pop
pop
push
push
aad
mov
push
test
or
adc
mov
push
outsl
es
inc
ficoms
cmp
add
push
sub
mov
inc
mov
pop
xchg
lods
xor
mov
pop
jns
es
mov
je
xchg
cmp
data16
stos
leave
jne
fidivl
mov
xchg
add
and
xor
mov
add
je
hlt
mov
pop
ret
xor
movsb
orl
pop
jo
mov
in
sub
add
icebp
dec
test
pop
xchg
sbb
pusha
add
leave
cmc
mov
mov
sub
push
add
insl
adc
mov
cmpsl
std
push
add
rolb
popa
out
cmp
and
cmp
imul
cmp
mov
mov
test
push
movsb
add
addb
mov
add
xchg
rolb
mov
add
add
and
add
cmp
push
call
or
jns
ds
mov
bound
mov
mov
and
push
daa
ss
or
sub
mov
inc
mov
jmp
int3
imul
inc
add
add
sub
fisubs
add
add
cld
jge
add
iret
pause
add
sti
push
pop
das
adc
add
and
add
mov
add
push
js
add
inc
stos
dec
xchg
lods
insb
jl
mov
int3
pushf
push
add
add
orl
add
inc
add
pop
mov
jne
mov
mov
iret
inc
int3
sarl
add
or
jbe
and
clc
inc
add
rolb
mov
insb
repnz
mov
cmp
xchg
or
or
inc
pop
mov
jp
sarl
inc
add
inc
and
jne
aas
inc
add
push
fisubl
jg
adc
mov
out
popf
mov
mov
add
sub
push
add
dec
cltd
cmp
mov
dec
fstps
ret
aad
sub
jne
mov
mov
call
inc
cmp
add
mov
adc
insb
mov
sbb
xor
mov
sub
rolb
push
movsb
mov
andl
gs
cmp
inc
into
xor
mov
loope
test
xchg
arpl
add
mov
add
add
sub
inc
lock
cmp
add
mov
xchg
nop
add
mov
mov
jns
cltd
nop
add
repz
dec
jno
xor
mov
add
pushf
call
hlt
dec
sub
inc
jns
ljmp
mov
lahf
cwtl
ds
imul
mov
insl
in
pop
push
sti
cmpsl
sub
add
and
mov
cwtl
repnz
or
add
sub
bound
mov
dec
inc
add
add
add
iret
aaa
jl
add
add
push
xor
mov
mov
xor
je
xchg
nop
add
add
in
inc
mov
inc
sahf
jmp
stc
add
jp
sbb
and
fbld
add
iret
sub
add
add
and
mov
mov
add
imul
lea
and
and
repnz
push
rolb
push
stos
cs
dec
and
std
daa
into
or
add
mov
add
sbb
add
leave
rolb
push
sbb
push
arpl
rolb
mov
add
mov
das
mov
mov
xlat
adc
mov
jp
pop
test
hlt
or
xor
or
aam
repz
mov
ja
add
les
add
mov
add
lea
add
push
cmp
mov
fldenv
rolb
jmp
and
mov
ja
bound
mov
inc
dec
push
fdivp
add
adcl
mov
sbb
loope
les
dec
xchg
mov
dec
sbb
mov
fbld
mov
cmp
mov
arpl
sarl
int3
sbb
lahf
sahf
jo
mov
add
cltd
jae
repnz
lea
add
lock
sbb
add
jmp
push
fwait
add
mov
or
inc
dec
rolb
push
sbb
dec
pop
push
jle
add
mov
pop
nop
mov
ret
inc
mov
das
repnz
adc
sti
scas
and
fstp
xchg
xchg
add
jmp
mov
add
fcompl
add
xorl
cld
fiadds
and
xchg
inc
mov
fsub
popa
adc
mov
pop
and
pop
pop
aad
and
mov
mov
inc
add
test
cmpsb
push
pop
sub
add
add
mov
out
inc
add
add
mov
inc
add
xor
mov
pushf
push
std
cmc
xchg
and
mov
sub
rolb
leave
and
lahf
mov
adc
mov
loop
mov
scas
push
div
add
pop
dec
ds
addb
cmp
aas
mov
mov
push
and
mov
inc
add
aad
popf
xchg
pop
call
push
pushl
add
je
or
cmp
mov
outsl
adc
cmpsl
scas
fwait
lea
xor
mov
mov
jge
int3
sbb
mov
js
roll
xlat
sbb
sahf
or
cmp
adc
mov
das
add
adc
mov
int3
rolb
mov
xchg
pop
cmc
test
lcall
sbb
xchg
add
adc
in
out
add
add
mov
or
push
hlt
fsubr
cmp
dec
insl
int3
xchg
add
ret
into
cmc
mov
or
out
test
dec
and
mov
add
mov
lods
or
mov
mov
stos
or
ucomiss
mov
mov
mov
pop
lret
into
mov
mov
mov
xchg
jl
imul
pop
mov
xchg
mov
cs
inc
sbb
stos
adc
sub
push
xchg
aam
mov
adc
add
add
mov
cli
add
mov
pushf
or
push
outsb
jecxz
dec
push
add
dec
adc
fs
inc
add
mov
dec
mov
pop
jno
filds
into
pop
je
out
and
mov
jo
mov
test
mov
add
mov
jne
add
add
pop
mov
scas
add
mov
pushf
pop
xlat
fiaddl
xlat
adc
sbb
test
ffree
mov
mov
add
add
jnp
lret
add
mov
mov
sbb
add
add
xchg
dec
pop
mov
aam
push
pop
popl
movups
xor
fnstsw
add
mov
xrelease
gs
bound
mov
add
lret
mov
mov
add
add
inc
loopne
mov
mov
xchg
xor
mov
daa
inc
outsl
pusha
add
push
mov
push
add
imul
mov
add
add
les
mov
jmp
in
add
sbb
sti
in
inc
repnz
cmp
xchg
add
int3
imul
jae
outsl
ss
mov
or
repz
imul
mov
mov
inc
outsb
enter
or
test
loop
mov
add
mov
sub
push
add
mov
mov
dec
fs
push
fldl
pop
xor
pop
mov
pushl
dec
lret
mov
mov
mov
mov
mov
dec
repz
or
adc
popf
mov
mov
mov
in
mov
les
mov
dec
xlat
cmp
scas
lcall
mov
add
jns
mov
ljmp
in
nop
add
mov
add
add
or
mov
mov
jb
mov
push
push
mov
mov
cmp
add
iret
leave
jno
xchg
loop
mov
out
jne
xor
add
add
cmp
popa
repnz
mov
xchg
fnstcw
mov
ss
mov
add
mov
jno
div
add
mov
mov
pop
jecxz
jne
out
bound
mov
movsb
inc
add
out
addb
in
add
add
movsb
daa
pop
rorl
ja
rolb
ret
in
std
mov
pop
aam
push
pop
popa
jae
pop
addr16
mov
imul
add
jno
out
and
xchg
mov
mov
fbld
add
push
jl
dec
push
add
add
push
stos
xchg
sbb
sbb
pop
lcall
mov
movsb
bound
mov
rolb
mov
mov
fbld
mov
mov
add
das
xor
xor
arpl
gs
ficoml
add
mov
jmp
pop
repnz
and
mov
add
pop
mov
add
pusha
add
pop
imul
mov
inc
rolb
dec
in
movsl
das
push
es
lods
cli
push
in
adc
mov
mov
rolb
jecxz
sbb
mov
lock
push
and
je
leave
xchg
add
mov
add
pop
cmp
sub
mov
fsubrl
rolb
sub
pop
aas
mov
add
jnp
inc
in
clc
rolb
cs
sub
jmp
mov
pop
inc
and
sub
out
stc
std
xchg
inc
push
add
outsl
mov
jo
mov
mov
add
sub
inc
dec
or
pop
popa
rolb
loopne
mov
mov
lret
push
push
add
outsb
jnp
mov
add
xor
lods
lahf
clc
pop
mov
mov
inc
stos
jle
pop
xor
or
je
leave
sti
xchg
cmp
cmp
into
cmc
int
pop
scas
test
jl
rcll
push
or
movsb
jge
pop
ds
in
sub
push
mov
mov
out
cmp
mov
mov
mov
lea
aad
add
add
mov
mov
mov
cs
xor
sbb
push
mov
mov
ret
sbb
mov
xor
dec
ds
mov
fs
mov
stc
xor
call
aad
rorl
jmp
inc
add
pop
div
add
call
add
int
push
insb
sbb
lcall
lahf
leave
xor
mov
stos
aas
repnz
in
adc
pusha
add
stos
ror
jp,pt
jnp
out
inc
and
sbb
popa
adc
sbb
lods
into
mov
xchg
cli
pop
and
mov
sbb
pop
fnstcw
push
loopne
mov
pop
mov
stc
loopne
mov
add
push
cmp
mov
repnz
add
lret
outsb
jb
mov
or
sbb
add
sbb
xor
mov
test
mov
fstl
mov
in
stc
push
sbb
insb
mov
push
sub
inc
imul
mov
stos
aas
aad
xor
lret
jle
cmpsb
cld
lret
cmp
jno
dec
lea
mov
ja
add
repz
mov
movsl
or
adc
out
cmp
sub
jg
lods
fs
idivb
mov
js
jecxz
test
mov
roll
add
and
mov
mov
pop
mov
mov
adc
mov
mov
das
das
aam
add
rcr
add
dec
out
inc
sbb
mov
add
mov
mov
leave
push
add
lods
addb
testl
add
pusha
add
add
mov
cltd
add
pop
repnz
mov
mov
xchg
dec
xchg
jns
rolb
mov
ljmp
adc
mov
adc
mov
adc
inc
loop
mov
outsl
imul
and
mov
loopne
mov
cmc
xor
mov
imul
mov
push
loope
ret
movntq
add
mov
mov
test
popf
mov
pop
lods
add
inc
daa
mov
mov
leave
cmp
jno
scas
fstps
and
mov
push
pop
rorl
add
push
decl
push
dec
dec
bound
mov
popa
pop
fisubl
cwtl
stos
adc
adcl
stos
repz
add
mov
clc
loopne
mov
add
pop
cmp
add
push
adc
in
pop
push
les
and
loopne
mov
cmpsl
mov
add
cwtl
jns
hlt
and
test
hlt
pop
popa
shrl
sbb
das
lods
pop
sbb
bound
mov
into
into
xchg
add
mov
fmuls
add
sbb
fnstenv
pushf
lret
dec
push
pop
popf
scas
mov
sbb
enter
mov
pop
stos
mov
inc
add
mov
xchg
jae
outsb
mov
mov
insb
imul
and
adc
xor
xchg
adc
mov
pop
and
xor
mov
cmp
mov
mov
inc
or
fs
mov
jecxz
add
adc
mov
add
inc
add
pop
push
gs
jle
lret
sbb
mov
add
lea
test
test
add
into
roll
jne
imul
push
push
add
xor
ljmp
ja
hlt
cmp
pop
addr16
mov
nop
add
dec
testb
mov
add
mov
add
cmpsb
stos
pop
out
cmp
push
cmp
add
xchg
add
xchg
cmp
pop
addb
fwait
add
insb
movsb
ret
cmp
add
jns
lret
jg
and
das
repnz
cs
divl
sub
add
mov
imul
mov
dec
mov
add
cmc
jl
add
dec
pop
imul
fwait
pop
or
ficompl
push
popa
icebp
sub
pusha
add
cli
pop
dec
jbe
add
mov
or
lds
xchg
jne
inc
add
shll
mov
scas
cmp
dec
push
add
popf
ret
mov
ret
xor
mov
movsb
mov
mov
mov
stos
jnp
pusha
add
mov
mov
mov
mov
loop
mov
pop
into
mov
movsb
adc
inc
rolb
mov
scas
idiv
or
sbb
xor
xor
mov
or
push
sbb
test
sbb
pop
mov
mov
mov
mov
xchg
pop
adc
dec
lock
jne
mov
sti
outsl
push
rolb
xor
setge
xchg
add
aaa
mov
imul
mov
adc
nop
add
mov
scas
hlt
fisttps
je
in
repz
stc
test
aad
add
mov
inc
add
add
inc
pop
inc
out
cmp
in
aad
gs
lock
add
lret
in
shrl
das
dec
inc
add
cmp
mov
aaa
jb
mov
pop
push
add
sbb
xchg
aam
add
add
mov
mov
mov
stos
xchg
jbe
adc
loop
mov
mov
add
pop
mov
mov
pop
outsl
mov
xlat
decb
inc
pop
sub
negl
add
pop
mov
or
mov
jno
movsb
adc
mov
fdivrl
js
xchg
into
jae
aad
sbb
mov
xchg
add
dec
outsb
das
addb
cmpsb
dec
gs
lahf
lea
cmc
lret
std
pop
sub
into
sub
jb
mov
ja
push
add
add
mov
add
sub
fnstcw
mov
mov
cmp
pop
dec
stos
fidivs
pop
test
loopne
mov
jecxz
add
hlt
jecxz
mov
add
add
mov
rorl
jo
mov
mov
inc
dec
sub
cmpsl
mov
fwait
and
add
mov
int
or
sbbl
inc
add
lods
push
std
or
push
mov
add
stos
lahf
jecxz
test
add
jb
mov
adc
mov
add
cmp
jecxz
add
in
iret
sbb
xchg
outsl
jno
cmc
lea
sgdtl
mov
mov
add
pop
rolb
mov
pop
out
insl
fiaddl
rcll
mov
cltd
pop
inc
scas
lods
and
add
nop
add
add
sub
sbb
jb
mov
addr16
and
mov
mov
ret
ret
push
add
mov
jb
mov
ret
push
pop
out
adc
mov
mov
adc
out
mov
mov
mov
cmpsl
add
xlat
in
add
mov
cmp
mov
mov
mov
mov
push
icebp
sub
pop
pop
imull
inc
hlt
jno
out
mov
in
pop
cmpsl
dec
sub
int
adc
ficoml
sbb
cmp
mov
pop
in
mov
loop
mov
je
cmp
das
dec
add
mov
xlat
sbb
fcom
mov
mov
mov
dec
sbb
or
out
lods
jle
add
xchg
shrl
add
aam
stc
push
dec
mov
decb
dec
stos
push
add
js
xor
add
mov
enter
add
or
sbb
jmp
imul
bound
mov
pop
sub
jbe
add
aas
testb
sbb
adc
and
mov
stc
inc
jbe
add
add
jge
pop
mov
mov
addb
adc
repz
addb
push
inc
jns
cmpsb
fildl
inc
mov
mov
lret
cmp
arpl
jmp
shll
add
sbb
imul
add
sahf
and
mov
push
in
cltd
push
ds
inc
add
cmc
cmp
mov
ret
adc
pushl
int
pop
pop
push
sahf
push
out
add
mov
xlat
xchg
sbbl
add
test
push
xchg
sub
add
rolb
mov
cmp
pop
ficoms
add
ret
add
loopne
mov
cld
cmp
mov
dec
in
rolb
mov
add
add
inc
pop
ss
add
rorl
add
je
xlat
cmpsb
jb
mov
pop
lods
stos
push
fcoms
dec
ja
je
pop
cmp
es
imul
gs
mov
push
add
adc
and
add
scas
xchg
pusha
add
sub
adc
add
mov
jns
aaa
in
add
inc
add
mov
subl
leave
imul
lods
push
add
popa
xchg
outsb
leave
lock
add
adc
je
push
pop
cli
or
and
mov
bound
mov
mov
and
mov
fdivrl
insb
dec
xor
sub
add
add
add
out
lahf
jge
add
rolb
mov
hlt
mov
enter
add
nop
add
mov
and
outsl
imulb
ret
mov
add
sti
popf
and
sbb
into
in
pop
jg
aaa
int3
outsl
addb
dec
add
rolb
mov
icebp
push
add
into
push
add
mov
cmp
cmc
cmpsb
pop
dec
mov
add
pop
loop
mov
jno
and
int
add
pop
push
sarl
addb
testb
jbe
add
jnp
rolb
or
add
sub
ds
sbb
aas
addb
fisubs
sahf
in
test
add
add
adc
push
out
int3
push
fadds
jnp
pop
insb
sub
jle
mov
mov
lods
es
movsl
cmp
add
or
pop
mov
fbstp
pop
pop
sub
or
adc
mov
outsb
add
add
mov
add
jns
or
test
add
mov
insb
insb
add
stos
leave
mov
jb
mov
in
ss
mov
and
cmp
or
insl
js
js
sahf
push
add
addb
int
xchg
sti
push
add
pop
cltd
sbb
popf
cld
loopne
mov
lret
imul
cli
mov
divl
arpl
cmp
cmp
xor
mov
iret
aas
xchg
inc
cmp
add
or
add
aad
mov
insb
push
mov
jne
cmp
add
rcrl
cmp
sbb
arpl
mov
xor
mov
mov
add
or
imulb
add
mov
jmp
imul
inc
outsl
dec
xlat
push
adc
insb
xchg
jp
ret
pop
inc
push
add
jmp
sti
insl
xchg
outsb
outsl
jnp
addb
jl
ja
add
hlt
push
or
sub
mov
mov
xor
outsb
aad
add
mov
aad
add
pushf
mov
sbb
xchg
dec
test
add
mov
imul
in
dec
ss
fldl
ficomps
bound
mov
cli
test
inc
mov
cltd
fcoml
mov
cwtl
xor
xchg
adc
add
and
sbb
cmp
mov
cs
cld
push
mov
mov
mov
jo
mov
and
ja
push
push
decb
addb
sub
add
jl
jnp
aas
daa
sbb
mov
add
mov
cs
imul
movsl
adc
call
mov
add
mov
es
jg
sbb
add
mov
jmp
add
mov
add
filds
testb
cltd
scas
mov
and
mov
icebp
pop
xchg
mov
jmp
dec
push
push
test
dec
adc
pop
cmp
sahf
push
sub
add
addr16
pop
sub
push
push
fsubrs
add
out
jae
cmp
cmp
int
or
cs
lea
inc
icebp
cltd
jne
adc
xor
lods
xor
xor
int3
int
nop
add
inc
arpl
add
mov
pop
stos
scas
cmpsb
stos
push
mov
add
jno
repnz
mov
dec
aad
loopne
mov
scas
push
out
stos
pop
inc
lret
sarl
inc
cld
and
mov
cmova
addr16
add
adc
mov
cwtl
addb
outsb
adc
xchg
cmc
xchg
insl
dec
xchg
cld
pop
xor
mov
inc
enter
mov
mov
mov
cwtl
in
lds
addr16
add
xchg
add
insb
and
mov
cmp
loope
xlat
inc
dec
into
loopne
mov
adc
mov
mov
and
mov
imul
push
outsl
stc
jns
push
pop
test
nop
add
mov
push
add
mov
dec
xchg
int
add
shll
jg
inc
fidivl
sbb
test
std
or
add
and
mov
and
les
enter
add
and
mov
insl
icebp
xchg
in
add
loopne
mov
add
popl
cmp
pop
loop
mov
loop
mov
mov
add
imul
lock
ret
mov
mov
pop
int3
addb
xlat
inc
popa
adc
insb
loope
popf
pop
pop
mov
test
adc
adc
mov
push
mov
push
add
mov
sub
push
add
fnsave
ret
pop
nop
add
es
mov
mov
add
mov
add
cmp
enter
add
mov
add
push
fsubrs
or
in
jbe
das
xchg
push
push
lds
sbb
negb
xchg
or
ret
cmp
mov
push
pop
lods
mov
xor
mov
xchg
inc
lods
ja
jbe
add
add
mov
pop
hlt
adc
dec
pop
in
add
pop
sbb
sbb
add
add
fstpt
pop
mov
and
pop
sub
dec
or
cltd
sub
push
mov
mov
cmp
mov
add
add
jmp
gs
xor
rcl
add
lock
mov
mov
mov
or
popf
pop
rolb
mov
lcall
jge
add
pop
pop
mov
les
sub
insb
dec
jg
mov
xchg
mov
aad
add
mov
mov
jb
mov
add
add
inc
repnz
int3
lret
mov
push
push
mov
mov
sub
test
mov
add
adc
sti
hlt
pop
fcmovnbe
push
add
add
xchg
add
cmp
stc
lock
stos
jnp
roll
mov
loope
dec
dec
mov
xchg
subl
xchg
in
aam
bound
mov
cmp
and
mov
aas
les
mov
mov
pushf
mov
adc
jne
imul
mov
mov
mov
dec
cld
inc
add
xchg
in
insb
notb
fdivl
mov
fcoms
sub
mov
push
addb
out
jmp
int
xchg
add
and
add
add
jmp
mov
loope
in
adc
out
xchg
mov
mov
mov
inc
int
mov
pop
mov
fcoml
mov
mov
int3
outsl
dec
mov
in
sahf
daa
mov
mov
mov
add
mov
rorl
mov
fwait
cli
or
cmpsl
mov
add
fnstcw
push
xor
mov
inc
add
jnp
mov
mov
push
jne
jo
mov
jne
fistpll
mov
imul
fists
iret
addl
enter
loope
mov
jo,pt
mov
jae
push
cmp
mov
mov
mov
cld
xlat
jle
push
jl
inc
mov
mov
add
imulb
mov
pop
mov
mov
xchg
int3
mov
cmp
cld
sbb
lock
imull
outsl
inc
scas
add
fnstcw
mov
sbb
dec
push
in
xlat
sbb
jbe
out
les
jg
sbb
jg
ja
pop
pushf
jle
dec
cmp
xor
add
dec
sbb
icebp
xor
xor
mov
dec
sbb
lods
in
mov
movsb
gs
or
add
cmp
addb
inc
lods
jo
mov
cmpsb
mov
sub
std
xchg
and
add
add
mov
sbb
popaw
nop
add
sbb
push
addb
dec
and
mov
inc
push
addb
xchg
or
add
pop
sti
xchg
cmp
push
xor
mov
rolb
mov
addb
cmp
call
mov
xor
mov
adc
push
pop
dec
mov
add
adc
add
add
add
pop
mov
jbe
add
cmp
cmpl
xor
xchg
inc
mov
fdivl
mov
adc
dec
pop
cwtl
mov
dec
addb
jne
push
push
loope
jmp
or
mov
add
fs
inc
add
mov
pop
hlt
push
jecxz
xor
xor
dec
inc
ficompl
mov
mov
not
add
adc
inc
add
push
cmp
out
xor
pushf
ss
std
xchg
jmp
add
add
popf
js
pop
push
dec
jb
mov
xor
add
xor
mov
addr16
add
test
cmp
xchg
xchg
sub
add
cmp
jns
fwait
in
inc
and
mov
ret
cmc
daa
sub
add
add
add
mov
xor
mov
jecxz
or
addb
out
cmc
ret
hlt
clc
cmpsl
jae
add
sub
inc
rol
lods
jo
mov
inc
jnp
pop
add
mov
jns
repnz
fs
add
out
incl
sub
mov
stos
sub
pop
pop
and
add
mov
cwtl
fs
shl
mov
mov
add
movsb
inc
add
in
lds
mov
sub
mov
xchg
add
rolb
mov
inc
aaa
leave
loopne
mov
add
add
lods
add
pop
scas
subl
lea
jne
push
xchg
sbb
add
cmp
add
int3
call
mov
add
jno
out
push
mov
mov
rorl
dec
or
xor
adc
pop
std
mov
std
dec
xlat
mov
adc
mov
add
mov
mov
xor
mov
and
mov
imul
movb
test
mov
pop
int
out
rolb
fcomps
shll
mov
jno
add
cltd
push
mov
cmp
xchg
arpl
test
jnp
icebp
arpl
push
add
jne
inc
add
mov
or
sbb
mov
xchg
add
add
adc
imul
mov
sub
test
jo
mov
xor
lcall
add
aaa
stos
movsb
xor
mov
aam
xchg
or
mov
shrl
ljmp
or
ret
ljmp
sbb
inc
add
dec
enter
lds
add
push
xchg
enter
push
addr16
lods
pop
cwtl
mov
xor
mov
movsb
jle
add
leave
test
add
mov
mov
mov
xor
add
pop
or
std
or
ret
mov
sbb
outsb
ljmp
push
add
out
add
aas
insb
aad
fstpt
cmp
mov
lock
or
add
lret
push
cwtl
xor
mov
jnp
jge
pop
cld
jno
cmp
jnp
hlt
fistps
aad
pop
cltd
xchg
std
es
rolb
mov
mov
add
add
mov
int3
inc
leave
mov
iret
in
mov
mov
jge,pt
pop
roll
xchg
xchg
pop
push
cwtl
xchg
clc
movb
xor
mov
sub
addb
push
add
mov
mov
mov
pop
jne
cmp
add
push
mov
scas
jne
xchg
out
and
add
fsubrs
dec
xchg
rcrl
xchg
jae
mov
out
sbb
xor
add
addl
daa
jbe
loope
add
xchg
inc
xlat
dec
or
jno
fisubrl
jmp
jnp
outsb
sahf
or
fs
sub
leave
mov
cmp
xchg
into
jae
add
jb
mov
adc
xchg
add
imul
mov
fwait
ja,pn
mov
mov
mov
add
daa
inc
mov
adc
mov
mov
add
push
movsl
inc
add
mov
or
add
add
mov
test
aas
push
cmpsl
xor
add
sbb
daa
pop
inc
dec
xor
mov
add
mov
test
jb
mov
mov
cli
sbb
rcll
lcall
addr16
jg
dec
dec
mov
loope
lods
xor
mov
mov
psraw
pop
into
xor
mov
rolb
adc
mov
add
call
and
add
mov
mov
add
stc
gs
lods
into
mov
xlat
mov
add
add
lods
je
and
rolb
xchg
fadds
mov
in
out
std
pop
int3
pop
push
add
xor
and
clc
xchg
pop
in
push
mov
lock
int
pop
cmove
aas
fisubrs
mov
add
stc
popf
repz
jecxz
cmpsb
sub
int
sbb
add
or
add
stos
addb
mov
pushf
imul
jle
cmp
add
fstl
add
add
add
add
mov
lods
push
pop
xchg
add
add
dec
push
daa
mov
xchg
cmp
sbb
jo
mov
nop
add
js
inc
add
and
mov
jle
cld
xchg
leave
lcall
mov
lods
adc
mov
add
inc
add
bound
mov
lcall
test
ljmp
in
bound
mov
das
xchg
repnz
or
adc
mov
dec
or
sarl
gs
add
add
and
mov
scas
sbb
lds
insb
pop
ret
pusha
add
add
dec
scas
push
inc
add
outsb
inc
out
ja
imul
jg
test
xlat
in
add
mov
enter
lea
push
xor
roll
add
xchg
fmuls
rcrl
cltd
mov
mov
cltd
inc
sbb
jo
mov
add
out
add
and
enter
inc
ja
sahf
rcrl
and
lret
xor
mov
mov
mov
ljmp
mov
add
xchg
pusha
add
mov
mov
fmull
movsl
incl
add
push
add
and
mov
sbb
call
jg
lret
mov
xor
mov
push
add
mov
nop
add
in
out
lret
mov
xor
add
xchg
dec
popa
sbbl
outsb
xor
adc
mov
ret
push
inc
add
mov
mov
shrl
in
mov
push
add
movsl
ret
push
and
push
lahf
push
add
dec
push
jnp
add
add
jne
pusha
add
je
push
xor
dec
lods
or
sbb
push
jg
add
add
scas
adc
int3
inc
inc
add
dec
ljmp
and
mov
out
xorl
cmpsl
xor
mov
fstpt
call
mov
mov
mov
xchg
add
xchg
shll
mov
jo
mov
aam
pushf
clc
jmp
lret
push
pop
xor
or
es
mov
add
wbinvd
jg
mov
in
mul
nop
add
mov
fcomp
or
ss
mov
xor
into
clc
std
jnp
add
lahf
movsl
and
mov
sbb
or
lahf
jae
lods
mov
fistpl
sub
lcall
add
inc
cld
push
rcrl
or
rcr
dec
repz
and
mov
outsl
subl
add
pop
aam
push
add
lahf
inc
daa
and
into
mov
into
ret
nop
add
and
mov
mov
push
hlt
pusha
add
add
add
add
mov
pop
repnz
and
scas
push
mov
out
jge
mov
add
rolb
mov
cmpsb
fsubrl
mov
testl
stos
adc
mov
jle
add
into
aaa
popa
in
imul
xor
test
inc
cmp
add
sahf
inc
outsb
inc
aaa
xor
mov
inc
sahf
ljmp
test
mov
ret
xchg
inc
imul
or
mov
dec
negl
mov
mov
cmp
add
js
cmc
imul
and
sahf
dec
add
add
pop
lcall
mov
mov
pusha
add
push
xlat
cmp
mov
mov
jb
mov
add
push
xor
mov
xchg
add
cmp
add
out
inc
mov
in
fdivrs
nop
add
ja
cmp
jne
fsts
push
add
cmp
mov
cwtl
in
bound
mov
mov
ret
cmp
cmpsl
int
sahf
ljmp
add
data16
shll
out
sub
outsb
iret
mov
popa
and
movsl
lea
sub
mov
mov
pop
xor
mov
add
add
int
xor
inc
add
divl
xchg
add
add
loop
mov
sub
lock
push
add
dec
sbb
mov
add
loope
add
or
icebp
scas
pop
inc
dec
cs
cmp
adc
mov
lahf
xor
push
outsl
sub
and
bound
mov
dec
mov
add
aad
hlt
xchg
loop
mov
les
mov
sbb
mov
jae
or
sub
add
add
cld
cmp
ss
jge
arpl
inc
mov
jns
popf
fidivs
and
cmp
data16
mov
jbe
aad
mov
es
mov
jp
inc
bswap
dec
ror
addb
xchg
add
mov
iret
xlat
pop
fnstsw
push
or
push
leave
jae
and
jnp
jb
mov
aam
stos
inc
jmp
and
sti
loopne
mov
add
inc
mov
inc
add
aad
repz
pop
test
imul
mov
fwait
lea
cs
mov
mov
mov
mov
mov
and
andl
add
into
add
clc
adc
popf
clc
pop
stos
int3
insl
dec
jbe
mov
jp
int
add
inc
imul
cwtl
pop
sub
mov
inc
mull
fcompl
mov
and
mov
add
ja
in
hlt
out
add
fbstp
mov
addb
push
lock
rcll
mov
divb
mov
mov
addr16
add
xchg
roll
loop
mov
mov
sti
xchg
lock
outsl
mov
xor
rolb
mov
in
rcrl
stc
addb
push
mov
add
xchg
xchg
mov
adc
mov
in
mov
mov
inc
flds
add
in
jecxz
rolb
xchg
mov
das
jp
mov
stos
dec
ret
cmp
cli
call
inc
add
fwait
xor
mov
lods
xor
add
push
iret
fadds
stos
sbb
mov
sub
and
add
movsb
addb
js
pop
xchg
lock
cs
ficompl
or
cmp
push
adc
addb
cld
mov
lds
add
lock
shll
dec
icebp
outsl
fistpll
lret
mov
js
hlt
dec
sub
ds
cmp
stc
repz
mov
sub
push
mov
add
imul
push
add
imul
mov
dec
lea
loop
mov
xchg
and
mov
mov
cmp
dec
and
jge
mov
add
movb
sub
xlat
push
add
stos
sbb
add
ret
test
mov
ficoml
xor
mov
fdivrl
arpl
popf
dec
or
notl
rolb
mov
loope
cmp
add
scas
pop
dec
add
mov
or
mov
mov
in
cmp
dec
pop
dec
leave
mov
nop
add
add
mov
adc
mov
mov
sub
stc
add
in
lea
sarl
das
jp
jo
mov
mov
add
nop
add
sub
cld
test
add
dec
sbb
sbb
movsb
es
out
inc
add
mov
jns
mov
rcrl
jmp
into
mov
addb
addb
lods
sarl
lret
jecxz
add
pop
aas
mov
jmp
xchg
sub
lret
xorl
mov
add
out
rolb
mov
xor
push
add
add
loop
mov
mov
aaa
and
mov
add
mov
add
sub
mov
pusha
add
add
dec
dec
cmp
push
jns
mov
mov
inc
sub
xchg
push
sub
mov
push
cmp
addb
jge
mov
add
add
adc
adc
addr16
mov
cmp
adc
xor
fdiv
leave
fs
cmp
aas
and
xor
mov
mov
lcall
mov
jno
mov
push
imul
call
scas
jmp
dec
lods
or
push
add
or
int3
fisttps
jecxz
inc
fldenv
add
jae
add
add
mov
nop
add
cmp
and
push
aad
adc
scas
add
add
fimuls
mov
mov
out
rolb
mov
mov
add
xchg
and
or
dec
das
adcl
add
mov
inc
jle
loop
mov
lods
dec
in
dec
fucomi
test
and
sub
push
xchg
cwtl
cltd
call
and
mov
add
xchg
mov
mov
adc
gs
add
sbb
xchg
repz
js
pop
adc
mov
push
lret
dec
sbb
mov
rolb
mov
adc
push
pop
movsl
repnz
jecxz
push
sub
cmp
pop
out
jnp
add
cvtps2pd
adc
mov
pushaw
add
mov
ja
pop
fcmovnu
add
mov
xchg
add
mov
and
and
mov
adc
xor
inc
inc
mov
cld
xchg
loop
mov
add
jns
in
push
test
adc
push
push
sbb
inc
cli
imul
rolb
mov
sub
add
int3
fdivrs
cmpsb
xchg
xchg
push
popf
fwait
loop
mov
mov
ljmp
jl
sbb
sbb
add
pop
and
mov
loope
lahf
push
add
and
adc
mov
pop
push
fsts
cwtl
sti
shl
add
cwtl
sahf
and
out
movsb
jo
mov
nop
add
add
or
xchg
add
mov
jo
mov
outsl
scas
sub
xlat
arpl
jno
icebp
and
pusha
add
mov
stos
mov
or
cmp
mov
xchg
lods
inc
loopne
mov
les
mov
imul
addb
xor
jo
mov
mov
mov
mov
mov
cmc
pop
adc
lock
jge
add
xchg
xchg
add
neg
mov
xchg
xchg
fistl
add
cli
test
repnz
push
jle
imul
jmp
sub
jne
jb
mov
cmp
add
pop
xchg
out
lahf
js
lds
dec
enter
fwait
in
rolb
mov
push
addb
out
outsb
cmp
aas
sub
cmp
fildll
and
negl
pop
xor
rcrl
add
add
xor
add
insb
sub
imul
dec
loope
js
sti
adc
mov
add
sbb
dec
cmp
jecxz
inc
test
add
jno
incl
lret
addb
jae
jne,pn
mov
add
pop
popw
mov
sti
mov
bound
mov
add
insl
push
jmp
jns
popa
addb
mov
xor
mov
mov
cmp
sbb
inc
add
filds
out
jp
jl
push
add
repnz
jl
popf
lods
rolb
mov
mov
aam
push
ds
out
jmp
cwtl
and
mov
add
ja
fcmovb
lds
sbb
mov
lods
cmovs
add
outsb
insb
mov
add
ja
lock
bound
mov
in
adc
add
mov
pop
test
and
mull
add
push
cvttps2pi
mov
mov
rolb
mov
or
inc
add
add
mov
sub
ret
cmp
fwait
sub
mov
cmp
pop
idivl
and
mov
data16
add
pop
lds
mov
mov
add
add
in
cwtl
aam
cmpsb
dec
out
jmp
cs
xchg
sbb
inc
or
sbb
push
loopne
mov
cld
stc
frstor
pop
dec
push
nop
add
iret
addb
mov
mov
mov
pop
cli
mov
sti
loope
add
mov
mov
jne
add
mov
add
mov
loope
stos
sti
mov
ret
mov
mov
ljmp
mov
addb
mov
mov
add
mov
and
mov
popf
sub
add
mov
cmp
js
jns
xor
call
push
inc
push
jae
rolb
mov
pop
imul
pop
iret
dec
ss
mov
add
mov
loopne
mov
add
mov
mov
popa
pop
outsl
in
pop
out
ss
ret
sbb
scas
inc
or
cmp
gs
inc
fidivs
mov
scas
mov
push
nop
add
dec
stos
dec
lahf
fisttps
mov
mov
int3
xchg
add
or
cmp
lret
xor
pop
inc
and
mov
test
xor
pop
rolb
mov
mov
add
dec
jg
mov
scas
cwtl
push
add
mov
mov
imul
mov
lcall
outsl
xor
mov
jecxz
imul
inc
add
mov
mov
mov
mov
pop
cmp
xor
add
xchg
outsb
inc
inc
add
test
add
mov
fucomip
cmp
add
inc
mov
jns
xor
sub
add
mov
add
push
add
imul
mov
jbe
pop
es
dec
divb
mov
sahf
dec
mov
dec
daa
scas
loope
fisttpll
shl
mov
mov
mov
mov
fisttps
fs
add
cwtl
pop
mov
pop
repz
scas
addl
les
dec
pop
mov
cmp
jae
mov
jle
adc
out
dec
pop
adc
push
add
cmc
dec
dec
xchg
add
xlat
stc
nop
add
push
push
add
adc
mov
push
cmp
mov
xor
xchg
mov
xor
mov
add
dec
into
stc
mov
push
addb
jo
mov
or
mov
add
jecxz
loop
mov
mov
orl
xlat
or
cltd
and
mov
mov
xchg
dec
adc
mov
mov
jae
mov
out
hlt
cmpsb
test
das
xor
sti
jg
in
stc
mov
add
or
mov
adc
xor
and
imul
add
daa
in
or
in
push
ret
lcall
mov
push
clc
test
and
mov
push
dec
xor
mov
push
lods
lds
push
adc
mov
in
insl
fbld
pop
mov
mov
add
cwtl
push
imul
mov
mov
sub
stc
push
add
pop
cmp
push
mov
mov
stos
jmp
repnz
lea
test
and
add
scas
jmp
addr16
push
add
dec
lcall
add
add
in
adc
add
cmp
sbb
lods
dec
xchg
scas
cmc
mov
pop
popa
pop
out
das
xchg
scas
mov
insb
add
mov
mov
cmpsl
jno
cmp
mov
out
or
iret
mov
mov
pop
insl
sbb
enter
jno
jge
add
adc
mov
inc
add
lar
mov
cld
pusha
add
sbb
outsl
jnp
mov
fwait
sti
and
mov
sub
fdivs
add
mov
lock
pusha
add
push
cmpsl
adc
mov
inc
xor
rolb
mov
inc
add
mov
mov
mov
iret
or
fsts
enter
mov
pop
insl
push
inc
add
fistl
fcoml
aaa
or
in
rcll
xchg
mov
cwtl
pushf
add
add
inc
insl
dec
testb
cmp
cmpsl
pop
int
cmc
inc
and
pop
jp
out
dec
movsb
icebp
mov
lcall
mov
fists
int3
cmp
rorl
or
popf
xor
mov
pushf
lahf
or
mov
test
add
add
xor
add
inc
sbb
add
inc
fsubl
mov
add
or
jno
mov
ficompl
fdiv
movsb
and
pop
out
addr16
fdivl
jmp
mov
addb
dec
lea
add
mov
out
pushf
in
cmp
stos
fwait
jmp
push
push
sub
add
pop
imul
lret
sub
xchg
mov
notb
icebp
inc
dec
add
mov
lods
iret
stc
push
pop
loop
mov
mov
xor
insb
sbbl
cmp
push
mov
mov
les
sarl
sbb
add
cmpsb
cltd
add
sbb
pop
inc
ja
push
mov
dec
scas
in
add
push
add
scas
cltd
add
mov
add
push
int3
movsb
mov
test
jge
lods
pop
and
mov
push
or
sub
jno
fistpll
lods
sbb
mov
add
sub
add
out
fdivs
mov
push
iret
lock
mov
or
inc
pop
pusha
add
inc
iret
adc
mov
mov
aam
aam
add
mov
push
sbb
mov
add
sbb
movsl
repnz
fstpt
add
mov
dec
mov
mov
divl
lahf
jae
add
pusha
add
add
mov
xor
dec
pop
sbb
mov
jae
xlat
gs
out
test
mov
dec
dec
sub
cli
sbb
cmpsb
ds
mov
fildll
adc
sub
add
in
jnp
addr16
mov
add
mov
mov
psraw
jle
pop
out
dec
jge
add
aad
jmp
repnz
cmp
push
push
pop
add
add
xor
mov
lods
or
out
inc
push
mov
xor
dec
out
xchg
or
fidivrl
mov
sahf
int3
dec
mov
or
sbb
jg
idiv
push
out
mov
push
push
pop
adc
mov
call
add
mov
mov
inc
into
ljmp
stos
xchg
ret
movsl
imul
cmp
loop
mov
lock
or
push
dec
clc
inc
add
and
mov
add
push
enter
mov
mov
mov
and
mov
jns
ljmp
cs
addl
mov
fcmovne
cmp
lods
push
mov
inc
roll
addb
testb
add
adc
mov
jno
out
pop
movsl
outsl
push
loope
add
add
jle
inc
aad
ss
bound
mov
mov
bound
mov
mov
or
push
mov
or
add
add
in
and
mov
mov
push
add
add
mov
pop
in
add
inc
loope
jl
add
or
or
sub
inc
mov
dec
fdivs
lods
sub
add
mov
test
mov
adc
js
cmp
mov
lock
jecxz
insb
out
testb
mov
loop
mov
add
add
jmp
sub
add
in
and
jne
lods
cmp
mov
pop
cli
adc
mov
imul
push
mov
call
mov
cmp
jae
xchg
icebp
mov
icebp
pusha
add
or
sub
add
mov
cmp
add
mov
mov
mov
repnz
pop
cmp
mov
jno
jb,pt
mov
push
je
add
xor
mov
aas
out
jb
mov
jno
loop
mov
lcall
sub
dec
test
cmpsl
add
aad
or
add
fbstp
sbb
mov
mov
lahf
jno
int
mov
imul
mov
addb
mov
xchg
ss
xor
add
add
pop
inc
jns
add
or
add
call
aas
pusha
add
add
data16
mov
rolb
mov
lods
aad
push
add
lret
pop
mov
inc
add
add
add
dec
aas
gs
pop
rolb
mov
mov
push
push
mov
pop
push
mov
add
mov
mov
out
jno
mov
call
loop
mov
mov
mov
inc
popf
jge
dec
outsl
xor
mov
cmp
movsl
inc
aad
add
mov
imul
mov
pop
testl
cmp
or
lds
pop
cmp
imul
sub
sub
and
xchg
repnz
push
out
lcall
push
flds
mov
push
jecxz
add
pushl
xchg
out
jge
dec
mov
rcrl
int
mov
dec
fstps
addr16
jne
pop
and
dec
sbb
add
fs
add
into
ret
les
jmp
mov
jp
jno
scas
ljmp
insb
ret
mov
rolb
int
fwait
jae
lret
sub
add
in
add
mov
add
ds
dec
inc
cltd
test
popa
fnsave
sub
lock
and
mov
add
xchg
sbb
add
jg
add
mov
mov
add
xor
cmc
jo
mov
cltd
xchg
sub
iret
mov
lock
test
mov
ret
aad
and
mov
lahf
dec
cmp
add
ss
add
mov
add
push
push
std
clc
pop
daa
test
js
cmp
repz
adc
add
inc
arpl
out
cmp
add
and
add
mov
jg
xchg
adc
adcl
mov
imul
test
icebp
in
rolb
mov
sti
add
das
test
jge
add
add
nop
add
js
stc
test
mov
mov
xchg
movsl
dec
imul
fidivrl
cmp
cmpsl
xor
mov
test
mov
out
inc
mov
out
pop
fistpl
addb
xchg
add
or
rcrl
aas
cmp
mov
adc
mov
jmp
popf
popf
mov
add
xlat
mov
mov
stc
push
mov
mov
mov
int
dec
pushf
jecxz
imul
clc
xor
mov
outsb
push
imul
lods
cwtl
inc
adc
mov
pop
mov
rolb
mov
xchg
mov
mov
jp
add
jns
jl
add
add
mov
mov
add
add
add
mov
js
add
mov
mov
stos
mov
bound
mov
inc
add
add
loop
mov
add
pop
inc
movsb
ret
mov
xor
test
out
in
loopne
mov
cs
and
sahf
movsl
push
mov
and
add
jecxz
push
xor
mov
mov
push
adc
mov
xchg
jae
insb
ss
mov
les
add
jge
add
cltd
fwait
jns
xchg
pop
lahf
int
push
jns
and
add
pop
je
xchg
sti
mov
mov
lock
jmp
inc
xchg
add
mov
mov
mov
push
and
mov
rolb
mov
sbb
add
sar
add
push
xchg
cmp
cmp
bound
mov
pop
xor
imul
gs
adc
mov
lea
xchg
add
xor
mov
test
add
dec
mov
jno
sbb
mov
or
add
inc
mov
add
ss
popa
mov
ss
add
loope
adc
cmpsb
imul
lea
or
out
movb
mov
lcall
scas
into
and
add
mov
add
mov
insb
daa
adc
and
xor
adc
mov
loope
add
rcrl
jns
mov
mov
push
add
mov
cmp
add
xchg
push
jno
repz
and
mov
clc
add
mov
push
stos
pop
xchg
aad
add
ret
jg
push
push
jno
inc
inc
add
jl
addr16
fadds
cmp
rolb
dec
mov
inc
xchg
mov
shll
mov
clc
and
mov
mov
out
xor
cld
adc
xchg
imul
rolb
mov
mov
pusha
add
add
lcall
mov
push
int3
cltd
adc
mov
add
mov
cmp
fmuls
lea
mov
pop
out
dec
cmpsl
imul
jl
push
sub
mov
mov
inc
add
int3
push
xor
jl
mov
and
popa
ljmp
jno
push
mov
icebp
fdivrs
inc
call
jmp
xor
ja
push
out
out
and
mov
cmp
inc
add
hlt
push
icebp
add
mov
push
pop
push
push
das
sub
add
movsl
pop
test
cli
mov
xor
or
je
pop
fmuls
je
sbb
test
cwtl
dec
cld
enter
push
dec
xor
mov
inc
sbb
add
jo
mov
cmp
add
add
mov
mov
rcll
popf
inc
outsl
jl
lods
xchg
into
movsl
pop
or
mov
xor
mov
rolb
mov
add
mov
dec
or
cmc
std
jnp
add
mov
push
mov
enter
mov
lcall
jno
add
xchg
int
rolb
mov
and
popa
push
int
pushl
std
xor
mov
add
lret
dec
faddp
inc
inc
add
jne
lcall
mov
mov
add
es
and
mov
gs
mov
mov
movl
shll
jmp
or
imul
add
mov
fcomps
icebp
enter
or
pop
rcll
sbb
add
out
xor
mov
gs
jg
test
add
lods
dec
movsb
repnz
mov
or
mov
jb
mov
fildl
pop
mov
or
add
mov
adc
cmp
std
loope
loop
mov
aaa
jnp
push
addb
stc
out
out
mov
mov
dec
in
lds
jbe
dec
lcall
add
push
outsl
call
test
addl
xchg
xchg
mov
xor
mov
in
in
push
out
sbb
pop
push
add
out
or
push
addr16
add
cmp
lea
sbb
mov
add
fildl
add
stc
pop
repz
xchg
mov
mov
in
je
or
xor
mov
or
dec
push
pop
sub
pop
pop
inc
add
push
jnp
mov
fwait
cmpsb
enter
mov
add
das
xlat
xor
imul
add
in
das
push
add
mov
mov
mov
xchg
or
mov
ss
dec
arpl
push
in
lock
repz
jp
mov
add
inc
mov
test
jbe
push
jne
repnz
xchg
add
mov
ljmp
mov
addb
cmc
scas
movl
sub
dec
subps
mov
cmpsb
cmpsb
ljmp
xor
mov
mov
add
pop
rcrl
fwait
or
aas
imul
mov
adc
mov
enter
sbb
jnp
in
mov
jp
dec
xor
add
mov
mov
mov
lahf
addb
xor
mov
mov
add
push
in
xor
push
add
pop
jge
cmc
pusha
add
mov
daa
fstl
mov
add
jmp
add
add
mov
imul
cmp
in
rcll
lods
imul
adc
and
mov
mov
clc
loop
mov
jge
cmpsb
aam
xchg
in
cltd
sub
pop
dec
jbe
xlat
ja
js
dec
lea
dec
addr16
and
mov
pushf
xchg
fxch
and
mov
sub
mov
add
std
jecxz
xor
or
mov
pop
cltd
xor
mov
mov
jo
mov
cmp
xor
mov
add
int
jae
xor
mov
data16
rolb
cmp
ret
mov
add
ja
xor
mov
dec
icebp
aaa
rolb
mov
add
mov
mov
pop
fpatan
inc
adc
mov
mov
mov
das
xchg
or
jp
das
ss
sub
add
xchg
out
das
sbb
cmp
pop
fwait
leave
mov
mov
pop
in
cltd
std
lahf
cmpsb
ja
pop
sub
add
orl
clc
repnz
jae
cmpsb
add
pop
mov
fldl
xchg
ret
pop
add
mov
add
push
jne
clc
repnz
jae
into
pop
stos
fiadds
repnz
jae
mov
add
dec
mov
jmp
sub
add
pcmpeqw
mov
nop
jae
cmp
add
add
repnz
jae
add
add
adc
loop
call
fwait
cld
nop
jmp
xor
cmp
add
fwait
cld
nop
jmp
xor
add
clc
repnz
jae
add
sti
cmpsb
add
fwait
cld
nop
jmp
jne
add
sbb
test
adc
add
repnz
jae
mov
add
sub
clc
repnz
jae
sbb
adc
jecxz
push
clc
repnz
jae
mov
add
enter
sbb
test
add
clc
repnz
jae
push
popa
clc
repnz
jae
xor
add
sbb
jb
fwait
cld
nop
jmp
adc
iret
in
add
add
add
fwait
cld
nop
jmp
jne
add
add
xchg
add
jne
clc
repnz
jae
add
sbb
clc
repnz
jae
add
add
iret
pop
or
xor
add
fwait
cld
nop
jmp
cmpsb
cmp
cmp
repnz
jae
add
add
add
pop
push
push
mov
xchg
ret
enter
add
out
push
fwait
cld
nop
jmp
imul
loop
stos
push
push
mov
xchg
ret
add
add
fisttps
nop
jae
add
add
popa
add
cld
nop
jmp
pop
add
add
mov
push
mov
xchg
ret
xchg
cmpsb
ret
fisttpl
test
add
clc
repnz
jae
pop
dec
ret
clc
repnz
jae
rol
dec
sti
paddw
inc
nop
add
nop
jmp
xor
add
xor
loopne
mov
jne
clc
repnz
jae
add
loop
jmp
incl
add
and
add
jae
add
add
add
mov
fwait
cld
nop
jmp
add
add
test
or
mov
nop
jae
cmp
mov
iret
mov
clc
repnz
jae
push
ret
rolb
mov
xor
mov
cmpl
fwait
cld
nop
jmp
add
pop
add
clc
repnz
jae
add
add
enter
add
repnz
jae
and
jl
sbb
add
clc
repnz
jae
xchg
mov
loop
mov
mov
add
fwait
cld
nop
jmp
add
cmp
add
cmp
repnz
jae
xor
aas
mov
push
mov
xchg
ret
mov
add
add
loopne
mov
repnz
jae
std
add
add
sub
add
stos
stos
mov
add
push
add
jne
add
push
jge
mov
adc
repnz
jae
std
add
enter
popa
add
cld
nop
jmp
imul
aam
add
fwait
cld
nop
jmp
iret
sbb
add
aad
push
clc
repnz
jae
fldl
imul
add
add
mov
clc
repnz
jae
ret
lcall
jnp
repz
mov
xchg
ret
std
add
mov
pop
add
mov
mov
cmp
ret
add
xor
mov
int3
je
fwait
cld
nop
jmp
pop
add
add
icebp
fwait
cld
nop
jmp
fucomp
lods
add
sldt
jp
fdivr
repnz
jae
sub
add
add
mov
add
repnz
jae
add
cmp
add
pop
mov
clc
repnz
jae
add
push
add
clc
repnz
jae
sub
popa
add
repnz
jae
shrl
push
fwait
cld
nop
jmp
in
add
imul
add
sbb
add
clc
repnz
jae
add
in
loop
mov
push
mov
xchg
ret
fnstsw
pop
inc
xor
mov
and
sbb
repnz
jae
dec
pop
enter
and
mov
push
mov
mov
add
mov
cmc
add
add
jmp
aam
mov
cmp
mov
je
or
xor
add
aam
add
add
add
add
std
repz
add
push
mov
xchg
ret
pop
pop
add
add
cmpsb
out
subl
push
mov
xchg
ret
add
add
add
repnz
jae
setne
add
stos
test
push
mov
xchg
ret
mov
ret
rolb
mov
xchg
mov
pop
clc
repnz
jae
lods
add
add
aam
and
mov
clc
repnz
jae
sti
sbb
push
clc
repnz
jae
mov
add
sub
push
jae
add
adc
add
std
add
popf
mov
fwait
cld
nop
jmp
xlat
lods
dec
into
add
enter
clc
repnz
jae
fldl
add
add
add
add
adc
add
add
add
add
push
push
mov
xchg
ret
sub
add
lock
clc
dec
inc
clc
repnz
jae
add
dec
push
hlt
stos
dec
push
mov
xchg
ret
add
xlat
sti
pop
adc
into
push
mov
lahf
shlb
sub
test
xchg
mov
ret
cltd
xchg
mov
repnz
jae
roll
add
push
mov
sub
test
adc
lock
clc
repnz
jae
push
mov
stos
pop
lea
fwait
cld
nop
jmp
add
cmp
dec
repz
repnz
jae
add
add
call
movb
cld
nop
jmp
aam
add
sub
push
mov
xchg
ret
and
cmp
xchg
push
add
repnz
jae
add
xchg
sbb
insb
xor
clc
repnz
jae
sub
loop
pop
sub
clc
repnz
jae
sbb
sbb
push
clc
repnz
jae
add
dec
pop
add
add
add
mov
xchg
ret
std
jmp
add
add
repnz
jae
in
xor
jb
mov
add
add
repnz
jae
adc
mov
add
clc
repnz
jae
add
aam
decl
clc
repnz
jae
sbb
xor
repnz
jae
add
iret
aam
add
push
mov
clc
repnz
jae
roll
adc
sbb
nop
jae
xor
in
aam
pop
enter
mov
xchg
ret
in
enter
add
push
mov
add
clc
repnz
jae
add
push
mov
mov
jmp
add
add
incl
repnz
jae
add
add
pop
pop
aam
mov
clc
repnz
jae
loop
and
lods
mov
clc
repnz
jae
add
add
cmp
iret
add
add
add
dec
repnz
add
pop
add
fldl
sub
clc
repnz
jae
pop
pop
dec
add
iret
in
mov
clc
repnz
jae
add
adc
dec
mov
clc
repnz
jae
xchg
mov
fisttpll
nop
jae
add
sbb
lea
fwait
cld
nop
jmp
add
fstpl
sbb
push
loopne
mov
xchg
ret
add
add
mov
shr
push
mov
xchg
ret
cmc
add
dec
or
repnz
jae
enter
add
repnz
jae
add
in
sldt
xchg
ja
xor
nop
jae
add
rol
fldl
add
clc
push
mov
xchg
ret
add
sti
sti
aam
jp
clc
repnz
jae
and
xlat
iret
add
mov
add
add
repnz
jae
add
add
dec
jmp
clc
repnz
jae
add
add
add
clc
repnz
jae
add
push
dec
mov
clc
repnz
jae
mov
pop
mov
lea
clc
repnz
jae
add
in
aam
pop
push
clc
repnz
jae
iret
str
add
sti
pop
cmp
add
xor
ret
into
add
add
dec
mov
clc
repnz
jae
pop
pop
in
enter
add
clc
repnz
jae
add
push
add
lahf
push
clc
repnz
jae
add
cmp
iret
in
add
add
clc
repnz
jae
std
xor
dec
and
fwait
cld
nop
jmp
add
add
sub
cld
nop
jmp
push
xor
pop
prefetchw
add
fisttps
xchg
lds
xchg
ret
xlat
xor
testl
fwait
cld
nop
jmp
add
add
lret
repnz
jae
xlat
add
pop
pop
add
pop
adc
lock
fisttps
dec
in
inc
add
add
fldl
xchg
jnp
jns
add
or
ret
add
rep
clc
repnz
jae
incb
add
add
add
fwait
cld
nop
jmp
add
iret
add
cmp
outsb
jne
clc
repnz
jae
and
fdivl
add
clc
repnz
jae
add
fldl
cmp
mov
push
mov
xchg
ret
lcall
dec
add
out
push
fwait
cld
nop
jmp
in
pop
pop
add
xor
clc
repnz
jae
add
add
lods
sub
clc
repnz
jae
add
pop
dec
aam
add
xor
add
clc
repnz
jae
add
push
clc
repnz
jae
add
mov
sub
cmpsb
enter
cmp
ret
add
mov
sbb
add
clc
repnz
jae
xchg
ret
pop
mov
push
mov
xchg
ret
add
sysexit
add
mov
or
mov
add
add
lret
mov
xchg
ret
add
add
pop
iret
pop
pop
add
jmp
incl
add
sbb
pop
rorl
mov
nop
jmp
add
sldt
add
mov
push
mov
xchg
ret
std
add
add
rclb
pop
in
add
add
add
mov
nop
jmp
add
add
outsl
xchg
clc
repnz
jae
in
cmovg
add
add
mov
push
add
add
fwait
cld
nop
jmp
mov
mov
mov
mov
clc
repnz
jae
sub
xor
mov
fwait
cld
nop
jmp
std
xchg
in
add
clc
repnz
jae
pop
iret
add
pop
add
fwait
cld
nop
jmp
iret
mov
add
add
mov
inc
inc
add
and
clc
repnz
jae
add
mov
and
shr
fwait
cld
nop
jmp
add
add
jne
dec
test
fwait
cld
nop
jmp
push
decb
xor
mov
clc
repnz
jae
add
xor
sub
sti
fwait
cld
nop
jmp
or
jne
add
mov
xchg
ret
add
in
add
add
push
jae
imul
mov
ja
mov
fs
mov
inc
lea
jae
xchg
stos
cmp
mov
push
mov
xchg
ret
pop
sti
add
add
add
add
mov
mov
dec
pop
add
stos
add
dec
mov
mov
add
add
adc
shr
add
jae
add
dec
add
jge
dec
and
fwait
cld
nop
jmp
std
add
add
mov
push
push
mov
xchg
ret
xchg
sti
ret
sub
into
popa
clc
repnz
jae
add
add
in
add
clc
repnz
jae
xchg
pop
xchg
add
add
insb
add
clc
repnz
jae
sldt
pop
dec
adc
je
fwait
cld
nop
jmp
into
add
or
andl
xor
mov
pop
fwait
cld
nop
jmp
add
add
xchg
add
sbb
jne
je
repnz
jae
add
add
add
and
clc
repnz
jae
add
ret
mov
push
mov
xchg
ret
add
mov
add
push
clc
repnz
jae
add
sbb
and
cld
nop
jmp
std
add
str
add
testl
add
arpl
cld
nop
jmp
pop
xlat
add
xlat
xlat
xchg
popa
add
mov
xchg
ret
add
pop
call
clc
repnz
jae
add
sub
movsb
cld
add
fwait
cld
nop
jmp
in
sub
pop
pop
push
movb
cmp
ret
add
dec
in
cmc
and
nop
jmp
enter
and
in
xchg
add
add
clc
repnz
jae
add
mov
add
dec
push
clc
repnz
jae
xlat
add
add
push
mov
add
aad
add
add
add
and
add
jmp
ljmp
add
mov
add
xor
mov
clc
repnz
jae
enter
xor
mov
push
push
mov
xchg
ret
pop
adc
add
add
pop
mov
clc
repnz
jae
cmpsb
in
dec
stos
std
enter
loopne
mov
xchg
ret
adc
add
mov
jl
jne
clc
repnz
jae
in
sbb
xchg
cwtl
xchg
clc
repnz
jae
and
mov
enter
push
add
clc
repnz
jae
fisttpll
xchg
add
mov
jae
lods
add
in
add
add
xor
clc
repnz
jae
fstp
dec
cmp
jae
dec
add
add
mov
pop
fwait
cld
nop
jmp
lods
add
add
add
mov
out
shl
push
mov
xchg
ret
add
add
clc
repnz
jae
in
pop
ret
dec
into
add
add
mov
xchg
ret
add
add
repnz
jae
add
xchg
sbb
or
repnz
jae
pop
add
add
add
cvtdq2ps
in
add
mov
iret
add
add
mov
jne
fwait
cld
nop
jmp
push
add
jno
cmpl
fwait
cld
nop
jmp
add
imul
jge
clc
repnz
jae
mov
add
cmp
fwait
cld
nop
jmp
mov
xchg
mov
ss
shrl
and
add
add
mov
push
sub
or
add
stos
add
in
pop
lahf
lea
fwait
cld
nop
jmp
enter
aam
pop
call
fwait
cld
nop
jmp
add
add
or
repnz
jae
dec
add
fwait
cld
nop
jmp
add
mov
lods
ret
mov
clc
repnz
jae
ret
enter
pop
push
mov
xchg
ret
stos
in
add
adc
xchg
iret
pusha
clc
repnz
jae
iret
pop
cmp
add
add
lods
push
clc
repnz
jae
add
xor
aam
mov
push
mov
xchg
ret
add
xlat
mov
popa
fs
repnz
jae
or
fdivrl
clc
repnz
jae
dec
add
mov
and
add
jne
clc
repnz
jae
iret
xchg
push
addb
mov
je
add
clc
repnz
jae
mov
outsb
add
clc
repnz
jae
sub
imul
lock
mov
mov
push
mov
xchg
ret
iret
add
mov
sub
rcr
inc
add
xor
add
push
fwait
cld
nop
jmp
add
popl
add
xor
or
loopne
add
sbb
add
cmp
repnz
jae
sub
xchg
pop
dec
add
je
js
repnz
jae
add
xchg
add
mov
lea
fwait
cld
nop
jmp
add
add
add
iret
rolb
mov
add
push
mov
xchg
ret
add
add
loop
loopne
mov
mov
xchg
ret
std
add
mov
in
push
outsb
mov
clc
repnz
jae
pop
imul
das
inc
push
mov
xchg
ret
add
dec
mov
fcomi
clc
repnz
jae
mov
add
inc
sbb
push
mov
xchg
ret
incl
xchg
add
mov
clc
repnz
jae
jne
dec
adc
clc
repnz
jae
add
and
add
add
clc
repnz
jae
in
mov
xchg
add
mov
push
push
mov
xchg
ret
add
mov
cmp
push
mov
xchg
ret
add
add
add
mov
cmc
clc
repnz
jae
add
imul
repnz
jae
mov
add
out
pop
clc
repnz
jae
or
add
add
jmp
pop
mov
add
and
imul
fwait
cld
nop
jmp
add
add
push
lea
jo
fwait
cld
nop
jmp
pop
iret
popl
add
sar
call
clc
repnz
jae
add
add
push
push
mov
xchg
ret
add
ljmp
mov
push
mov
xchg
ret
add
push
inc
leave
cmp
push
mov
xchg
ret
xchg
add
add
mov
add
nop
jae
push
add
dec
xor
clc
repnz
jae
add
add
add
decb
mov
xchg
ret
add
jnp
jae
add
cmc
add
add
push
clc
repnz
jae
add
mov
les
clc
repnz
jae
add
dec
add
add
adc
cld
nop
jmp
jne
add
popl
mov
dec
popl
dec
push
pop
xor
aam
xor
clc
repnz
jae
pop
add
add
push
repnz
jae
pop
aam
sub
sti
pop
push
mov
xchg
ret
add
xor
mov
clc
repnz
jae
add
and
jmp
add
in
xchg
ret
push
stos
aas
push
jmp
jmp
mov
std
add
or
dec
add
cmp
add
add
cmp
add
add
icebp
add
push
mov
xchg
ret
mov
dec
add
mov
xchg
ret
add
add
or
jae
add
in
jne
mov
clc
repnz
jae
into
xchg
add
dec
movzwl
push
mov
xchg
ret
enter
cld
jb
clc
repnz
jae
mov
add
in
inc
add
add
das
movsl
dec
add
fwait
cmp
mov
xchg
ret
add
dec
xchg
and
enter
dec
cmp
repnz
jae
std
add
add
add
repnz
jae
xchg
and
add
push
mov
xchg
ret
in
pop
adc
add
shll
nop
jae
pop
sbb
add
clc
repnz
jae
add
ret
mov
jg
clc
repnz
jae
add
add
ret
mov
push
mov
xchg
ret
jl
stos
push
mov
xchg
ret
xlat
and
loop
push
out
sbb
xorl
add
mov
repnz
jae
add
add
rclb
mov
cmp
ret
add
pushl
clc
repnz
jae
add
add
sub
add
add
repnz
jae
into
add
iret
aas
push
clc
repnz
jae
add
add
add
mov
mov
push
mov
xchg
ret
cmpsb
pop
in
mov
mov
cld
nop
jmp
dec
add
seta
enter
mov
clc
repnz
jae
pop
mov
add
add
cmpl
repz
call
add
imul
jae
enter
add
jne
cmpl
fwait
cld
nop
jmp
enter
pop
xor
cmpsb
pop
push
push
mov
xchg
ret
add
add
add
mov
pop
clc
repnz
jae
paddw
add
icebp
push
cmpsb
add
aam
add
xor
add
clc
repnz
jae
lods
add
push
clc
repnz
jae
pop
aam
jne
add
and
nop
jae
add
add
jae
add
add
add
sub
jae
or
loop
in
sub
add
repnz
jae
dec
mov
enter
nop
jae
pop
add
aam
push
pop
jae
cld
nop
jmp
add
mov
add
cld
or
jmp
add
add
push
mov
xor
add
ss
push
sub
add
clc
repnz
jae
add
xor
add
call
clc
repnz
jae
sub
cmp
inc
add
push
mov
xchg
ret
pop
iret
iret
mov
bound
mov
add
clc
repnz
jae
in
add
imul
mov
xchg
ret
iret
add
pop
push
stos
nop
add
repnz
jae
add
add
xbegin
cs
add
aam
pop
add
add
pop
add
sbb
add
repnz
jae
add
movswl
test
lcall
jmp
decl
push
iret
in
push
mov
push
mov
movsl
add
icebp
sub
add
add
inc
jb
clc
repnz
jae
jne
mov
mov
xchg
ret
sbb
push
add
inc
and
push
mov
xchg
ret
add
mov
nop
add
add
nop
jmp
stos
aam
xor
enter
jge
clc
repnz
jae
add
add
sahf
mov
clc
repnz
jae
cmpsb
iret
add
incb
ficoms
in
cmp
add
add
ror
clc
repnz
jae
add
sbb
rep
clc
repnz
jae
xchg
add
xor
fisttpll
into
inc
add
add
cmp
add
push
mov
clc
repnz
jae
add
cmp
mov
add
fwait
cld
nop
jmp
add
mov
and
add
repnz
jae
iret
loop
mov
add
adc
inc
add
rorl
mov
fwait
cld
nop
jmp
sbb
add
push
clc
repnz
jae
stos
add
ret
mov
push
mov
xchg
ret
xor
pop
pusha
add
nop
jae
add
add
add
sbb
push
imul
incl
aam
mov
js
fwait
cld
nop
jmp
cmp
add
iret
or
xchg
repnz
repnz
jae
push
add
bound
mov
or
add
repnz
jae
fldl
add
imul
clc
repnz
jae
add
iret
pop
sti
adc
mov
dec
add
push
mov
xchg
ret
in
loop
stos
iret
xor
jge
dec
adc
cmp
cmp
ret
add
jne
jg
add
clc
repnz
jae
incl
pop
pmaddwd
pushf
add
clc
repnz
jae
add
and
add
ljmp
adc
jmp
add
sbb
test
stc
lcall
jmp
lcall
add
fildl
sbb
add
roll
or
pushf
in
inc
add
bound
mov
mov
fs
insb
clc
repnz
jae
mov
iret
add
clc
repnz
jae
add
add
aam
push
mov
sub
inc
add
rcll
mov
clc
repnz
jae
add
imul
add
add
add
into
in
incl
hlt
inc
add
add
add
enter
jae
in
dec
add
add
in
add
pop
rep
clc
repnz
jae
in
add
push
movzwl
fwait
cld
nop
jmp
sbb
pop
sub
nop
jmp
mov
cmp
add
outsl
call
clc
repnz
jae
add
add
rolb
mov
xor
add
clc
jmp
add
add
xor
nop
jae
add
add
pusha
clc
repnz
jae
add
mov
iret
icebp
push
pop
mov
clc
repnz
jae
add
mov
mov
rcrb
add
add
add
xchg
pop
pop
clc
repnz
jae
dec
add
add
mov
xchg
mov
push
push
mov
xchg
ret
xor
add
push
dec
cmp
repnz
jae
imul
clc
push
mov
xchg
ret
add
push
jne
xlat
xchg
imul
add
repnz
jae
add
add
aam
mov
clc
repnz
jae
add
add
cld
nop
jmp
add
add
add
aam
xchg
clc
repnz
jae
fstpl
roll
lea
push
mov
xchg
ret
and
stos
lods
add
jmp
incl
mov
add
iret
iret
dec
adc
add
test
add
add
or
add
clc
repnz
jae
into
cmc
mov
sub
push
mov
xchg
ret
dec
sbb
mov
cmp
nop
jae
rcll
lods
push
mov
xchg
ret
fldl
incb
dec
add
sbb
jmp
add
add
add
and
dec
stos
loop
add
pop
or
fwait
cld
nop
jmp
into
add
cmc
add
pop
clc
repnz
jae
in
add
add
sysexit
add
xor
or
repnz
jae
into
loop
mov
cmpl
in
add
dec
test
pushf
test
mov
clc
repnz
jae
add
dec
add
sti
adc
popa
clc
repnz
jae
aam
xor
fstpl
push
mov
xchg
ret
xchg
add
cmp
std
les
add
clc
repnz
jae
add
add
imul
clc
repnz
jae
iret
add
dec
and
cmp
clc
repnz
jae
mov
je
clc
repnz
jae
mov
pop
mov
repnz
jae
add
add
add
xchg
mov
mov
xchg
ret
sti
add
add
cmp
test
cld
nop
jmp
pop
aam
add
mulb
nop
jae
pop
ret
pop
add
xlat
sub
repnz
jae
add
cmc
xchg
and
mov
adc
je
clc
repnz
jae
add
add
add
enter
clc
repnz
jae
add
scas
push
clc
repnz
jae
add
lods
loop
cmp
pop
push
mov
xchg
ret
ret
add
xor
mov
add
repnz
jae
or
or
mov
xchg
ret
add
and
in
add
clc
repnz
jae
cmp
add
add
add
jae
iret
sub
iret
negl
add
clc
repnz
jae
add
enter
mov
repnz
jae
enter
aam
test
iret
inc
add
into
in
add
add
repz
add
add
add
xchg
add
cmp
rclb
out
out
inc
add
add
add
cmpsl
and
popl
clc
repnz
jae
enter
dec
into
int3
push
clc
repnz
jae
add
pop
verw
sub
add
mov
xchg
ret
add
add
push
loopne
mov
cmp
jno
inc
add
sbb
xchg
loope
addr16
movsl
clc
repnz
jae
xchg
mov
aam
xor
clc
repnz
jae
add
add
nop
jmp
add
in
add
sti
lods
iret
nop
add
jmp
add
into
roll
add
add
clc
repnz
jae
add
add
mov
add
inc
add
popa
add
repnz
jae
add
mov
or
jl
sbb
cld
nop
jmp
add
add
add
mov
pop
fwait
cld
nop
jmp
add
ret
xlat
pop
mov
push
mov
xchg
ret
add
add
dec
push
popl
add
repz
incl
add
add
or
mov
in
jns
pop
clc
repnz
jae
jne
xchg
sub
cmp
push
mov
xchg
ret
add
jne
clc
repnz
jae
std
add
sub
nop
jae
cmc
pop
add
add
add
stc
jmp
add
xchg
add
enter
mov
push
mov
xchg
ret
xchg
add
je
leave
mov
fwait
cld
nop
jmp
add
add
add
call
clc
repnz
jae
in
iret
add
mov
push
mov
xchg
ret
cmc
add
sti
cli
mov
clc
repnz
jae
pop
add
add
mov
add
fiadds
jge
clc
repnz
jae
and
cmp
mov
fmuls
test
repnz
jae
mov
arpl
clc
repnz
jae
add
pop
push
out
mov
fwait
cld
nop
jmp
jmp
add
incb
or
cmp
ret
iret
sub
add
xchg
sub
repnz
jae
add
add
add
dec
fwait
cld
nop
jmp
into
jne
or
mov
mov
call
clc
repnz
jae
fstl
add
mov
clc
repnz
jae
cmp
pop
push
mov
xchg
ret
xchg
add
add
mov
add
repnz
jae
and
add
jbe
clc
repnz
jae
add
add
jns
push
mov
xchg
ret
and
sbb
pop
test
push
mov
xchg
ret
xchg
cmp
add
movsl
ljmp
jae
std
add
add
add
jmp
add
sbb
ja
mov
clc
repnz
jae
add
dec
mov
clc
repnz
jae
enter
aam
imul
jmp
and
enter
in
ds
push
mov
xchg
ret
add
add
cmpsb
mov
repnz
jae
add
ret
pop
add
repnz
or
fwait
cld
nop
jmp
add
aam
push
clc
repnz
jae
pop
dec
in
xor
push
fwait
cld
nop
jmp
std
add
add
pusha
clc
repnz
jae
dec
mov
cmp
and
test
push
mov
xchg
ret
std
add
add
movsb
test
sub
add
out
inc
add
stos
add
inc
and
fwait
cld
nop
jmp
pop
xchg
add
push
add
stc
mov
clc
repnz
jae
add
add
mov
sbbb
add
pop
into
dec
add
clc
repnz
jae
loop
add
push
repnz
jae
mov
dec
add
xlat
and
jae
xor
iret
add
add
push
mov
xchg
ret
xchg
add
cmpsb
enter
les
add
add
repnz
jae
add
push
push
fldl
nop
jae
add
add
test
sub
dec
cmp
repnz
jae
pop
mov
sbb
mov
push
mov
xchg
ret
add
xchg
in
cmpsb
shl
addb
add
push
mov
xchg
ret
add
in
and
add
add
mov
clc
repnz
jae
add
add
cmpsb
imul
add
add
repnz
jae
add
xor
inc
clc
repnz
jae
sub
mov
inc
call
orl
add
iret
xchg
jg
inc
in
cld
nop
jmp
or
add
stos
mov
clc
repnz
jae
xlat
mov
dec
push
clc
repnz
jae
add
xchg
adc
add
pop
clc
repnz
jae
push
mov
or
push
mov
xchg
ret
pop
add
add
xor
mov
xchg
ret
add
add
add
push
clc
repnz
jae
add
or
add
xchg
or
mov
incl
xlat
add
add
mov
mov
enter
clc
clc
repnz
jae
add
add
dec
std
les
rolb
cld
nop
jmp
and
nop
add
add
repnz
xchg
ret
dec
mov
add
push
clc
repnz
jae
add
add
aad
nop
add
icebp
clc
repnz
jae
mov
add
push
fwait
cld
nop
jmp
add
add
add
xlat
out
pushl
push
mov
xchg
ret
add
in
rorl
loopne
clc
repnz
jae
pop
pop
pop
aas
popa
clc
repnz
jae
xor
pop
add
lods
test
fwait
cld
nop
jmp
add
add
pop
mov
repnz
jae
iret
add
dec
dec
add
nop
jae
imul
add
add
mov
mov
xorl
clc
repnz
jae
sbb
aam
clc
repnz
jae
popl
add
adc
mov
add
fwait
cld
nop
jmp
add
jne
jnp
les
cld
nop
jmp
xchg
aam
add
add
shrl
fwait
cld
nop
jmp
add
add
add
lods
add
push
add
clc
repnz
jae
adc
enter
add
and
incl
add
add
in
imul
inc
add
push
mov
xchg
ret
jne
add
add
pusha
clc
repnz
jae
in
in
xor
stos
sbb
enter
cmp
fwait
cld
nop
jmp
in
add
pop
add
xchg
jp
clc
repnz
jae
stos
mov
xchg
iret
and
add
clc
repnz
jae
mov
shufps
push
enter
jae
sti
loop
add
push
push
mov
xchg
ret
sti
add
add
add
cmpw
fwait
cld
nop
jmp
and
xor
shll
jmp
repnz
cld
nop
jmp
add
add
in
add
out
clc
lcall
fdivrp
incl
add
add
hlt
lcall
add
dec
in
adc
movzwl
clc
repnz
jae
adc
and
mov
add
clc
repnz
jae
add
add
mov
out
push
mov
add
mov
add
out
lcall
repnz
jae
pop
pop
in
add
imul
mov
push
mov
xchg
ret
into
add
loop
sbb
repnz
jae
sub
enter
rclb
inc
xlat
inc
add
or
adc
mov
cmp
repnz
jae
sbb
add
fdivrp
clc
repnz
jae
and
add
dec
or
add
add
add
test
mov
xchg
ret
dec
in
add
add
mov
clc
repnz
jae
iret
add
aas
pop
push
mov
xchg
ret
add
cmc
dec
xchg
add
push
mov
xor
icebp
mov
add
adc
and
xabort
nop
jae
cmc
popl
cmc
mov
add
repnz
jae
lods
lcall
jmp
xor
enter
rorl
loope
mov
clc
repnz
jae
iret
mov
add
mov
cmc
jg
push
mov
xchg
ret
decb
cmpsb
jne
wbinvd
mov
fwait
cld
nop
jmp
cmpsb
add
std
add
add
add
sub
repnz
jae
sub
add
add
lods
movzwl
clc
repnz
jae
and
sbb
clc
repnz
jae
loop
pop
dec
iret
lods
add
mov
xchg
ret
add
push
mov
xchg
ret
add
pop
mov
clc
repnz
jae
in
lods
mov
add
add
clc
repnz
jae
add
cmp
add
add
clc
repnz
jae
add
lods
cmp
repnz
jae
pop
add
imul
add
test
inc
add
add
sti
xor
clc
repnz
jae
adc
sbb
push
mov
clc
repnz
jae
and
iret
fldl
enter
clc
repnz
jae
add
pop
add
mov
add
mov
je
add
mov
clc
repnz
jae
mov
add
add
fwait
cld
nop
jmp
sub
mov
repnz
jae
std
sbb
and
dec
add
mov
mov
xchg
ret
add
lods
add
cld
nop
jmp
add
ret
xchg
cmp
mov
xchg
ret
pop
add
and
dec
mov
clc
repnz
jae
lods
mov
and
push
mov
xchg
ret
in
in
add
nop
jae
xor
pop
add
add
jne
add
push
mov
xchg
ret
and
mov
add
popa
add
mov
xchg
ret
in
add
stos
mull
mov
clc
repnz
jae
sbb
shr
clc
repnz
jae
xor
and
repnz
jae
add
sub
pop
mov
clc
repnz
jae
incb
add
mov
push
push
mov
adc
repnz
jae
add
add
nop
jmp
pop
mov
imul
dec
xor
ret
fwait
cld
nop
jmp
add
add
std
and
movsb
nop
add
or
clc
repnz
jae
add
add
push
mov
xchg
ret
add
add
add
cld
nop
jmp
and
iret
dec
add
mov
je
clc
repnz
jae
sub
add
add
cmp
decl
add
std
mov
jne
push
mov
xchg
ret
add
add
push
mov
xchg
ret
ltr
xor
je
push
jmp
add
incl
add
enter
pop
add
xor
icebp
fisttpl
nop
jae
iret
mov
roll
call
ljmp
incb
add
add
push
mov
adc
mov
push
clc
repnz
jae
add
imul
popa
add
mov
xchg
ret
pop
into
pop
dec
add
out
rep
clc
repnz
jae
add
add
mov
dec
add
clc
repnz
jae
mov
dec
xchg
mov
pop
push
mov
xchg
ret
add
dec
mov
jbe
clc
repnz
jae
iret
std
roll
add
repnz
jae
add
add
pushf
add
clc
repnz
jae
popl
add
in
add
clc
repnz
jae
xor
mov
lahf
scas
in
add
jp
sar
add
push
add
jle
dec
repnz
add
mov
rolb
mov
pop
movb
out
cmp
push
outsl
cmp
and
data16
add
addr16
add
popa
ret
ss
mov
mov
nop
add
gs
cmc
xchg
jns
popf
mov
add
jns
sbb
cli
cs
push
sahf
outsb
sub
pop
pop
cmp
mov
andnps
add
daa
movsl
cmp
adc
add
cmp
out
leave
enter
pop
scas
inc
add
xor
sub
mov
mov
mov
lret
dec
ja
test
push
jle
xchg
sub
adc
pushf
addr16
incb
incb
int
addb
into
cmp
mov
fldcw
add
add
and
mov
rolb
fldl
jp
dec
mov
scas
pushf
sahf
enter
je
add
pusha
add
mov
adc
xlat
jno
sbb
or
inc
add
out
pop
adc
mov
dec
fwait
in
and
mov
add
add
into
sbb
jno
mov
mov
mov
mov
adc
mov
dec
xchg
ja
lea
scas
mov
xchg
outsb
daa
outsl
pop
outsb
mov
xchg
fs
mov
ljmp
inc
mov
das
sub
add
clc
rolb
mov
inc
xor
xchg
repnz
pop
fwait
pop
lods
cmp
mov
adc
mov
mov
and
cmp
mov
sub
xchg
lret
adc
add
jne
mov
sub
outsl
mov
dec
pandn
add
lods
cmpsb
cmp
test
call
addr16
add
pushf
xor
add
ja
push
rcr
adc
add
mov
add
lahf
aas
mov
cwtl
repnz
xor
push
aaa
test
bound
mov
add
mov
stos
aaa
int
lret
iret
sub
mov
jp
mov
mov
xchg
or
arpl
mov
push
jl
bound
mov
inc
mov
or
inc
add
insl
mov
fisubrl
fstp
ret
and
sbb
psubusb
push
out
in
call
out
jge
push
test
inc
ret
push
pop
sub
lods
pop
mov
sbb
jecxz
dec
cmpsl
adc
js
test
loope
lea
icebp
dec
mov
enter
iret
imul
xchg
xchg
ds
not
outsb
sbb
cwtl
cmp
daa
adc
aad
jmp
push
push
mov
mov
mov
or
and
mov
mov
jo
mov
sub
and
mov
dec
jae
ljmp
movsb
iret
xchg
sbb
insb
or
dec
rolb
mov
add
lret
push
cmpsb
pusha
add
push
jnp
mov
lret
test
lock
mov
shll
add
dec
cmpl
add
push
push
xchg
pop
add
mov
add
outsb
popa
or
mov
lock
test
adc
xchg
xchg
rolb
mov
add
bound
mov
add
push
mov
cmpsl
xchg
push
mov
add
scas
enter
mov
adc
ds
outsl
sti
popa
fidivrl
in
gs
fidivl
add
mov
lcall
fs
movsb
fisubrl
adc
mov
sbb
push
add
mov
adc
push
add
add
xchg
cmp
and
jecxz
dec
insl
or
add
mov
jbe
xchg
add
cwtl
sbb
pop
repnz
adc
mov
jnp
xchg
mov
or
push
mov
arpl
mov
jo
mov
add
mov
add
adcl
arpl
mov
or
add
push
xchg
cs
sbb
ret
jle
sbbl
std
lods
xchg
push
std
xor
xlat
ja
mov
add
in
mov
add
popf
gs
mov
fiadds
mov
push
sub
inc
fnclex
add
inc
mov
movb
in
testb
outsb
in
add
jnp
dec
ljmp
out
jecxz
dec
mov
cmp
add
test
jmp
aad
mov
mov
nop
add
addb
roll
mov
mov
add
testb
dec
mov
test
arpl
add
inc
jo
mov
pushf
jo
mov
xor
mov
push
imull
pop
sub
addb
lea
add
mov
xor
or
push
mov
push
xchg
add
mov
das
jbe
repnz
les
ds
stc
and
mov
add
add
xor
daa
xor
mov
mov
push
pop
sub
pop
add
mov
test
pushf
ss
pop
testb
sar
loope
and
add
add
xor
mov
ret
dec
push
data16
push
adc
mov
inc
add
fiaddl
mov
scas
aaa
jnp
add
icebp
xchg
add
mov
add
push
mov
mov
mov
fidivrs
push
add
push
add
int3
add
push
add
mov
add
sbb
mov
mov
les
inc
mov
add
pushf
sub
mov
mov
in
fisubrs
add
mov
loopne
mov
test
adc
aas
mov
dec
inc
lods
sbb
mov
xchg
mov
cs
mov
adc
add
popf
lret
adc
xchg
lret
sbb
fcomp
xchg
rolb
mov
add
mov
push
xlat
rcrl
test
aas
mov
jo
mov
jmp
xchg
aad
add
add
add
jg
mov
add
mov
mov
inc
dec
and
mov
aad
jae
jno
test
leave
add
mov
aam
add
add
rolb
imul
in
pop
out
mov
mov
sbb
mov
cltd
and
fiadds
mov
add
testb
mov
sbb
push
sub
inc
pop
mov
xor
add
movb
popa
jb
mov
aam
test
mov
xchg
add
aas
inc
adc
mov
std
lds
stos
mov
fdiv
rolb
mov
pop
in
or
out
test
mov
inc
mov
movsb
mov
iret
popa
das
test
lcall
dec
push
mov
sub
in
fwait
loop
mov
add
lock
lea
pop
xchg
or
mov
add
mov
mov
mov
inc
add
or
sub
ret
sbb
inc
out
dec
and
mov
sub
pop
pop
vzeroupper
bound
mov
outsb
cmp
fiaddl
mov
movsl
gs
mov
sbbl
or
add
mov
mov
mov
xchg
and
pop
addb
jmp
sbb
lods
stos
in
rolb
mov
mov
repz
add
mov
cmp
pop
push
out
jne
add
test
add
sub
loopne
mov
mov
pop
out
add
mov
add
inc
add
jg
ret
xor
add
jp
or
add
test
add
call
sub
arpl
rolb
mov
sub
mov
inc
das
cli
mov
nop
add
jb
mov
int
add
shrl
add
mov
testb
std
adc
mov
aaa
push
out
lret
rolb
mov
pop
fsubs
lcall
arpl
fnstsw
xchg
imul
data16
in
sub
push
add
add
cmp
jae
ss
sbb
outsb
jnp
add
mov
and
test
add
mov
addb
pop
outsl
in
add
adc
mov
add
add
add
clc
pop
pop
jbe
fists
push
inc
mov
rolb
lods
push
xchg
test
xor
and
mov
jge
fnstenv
mov
in
dec
push
jmp
xchg
stos
mov
es
add
push
sub
sbb
add
xor
inc
pop
dec
inc
cs
and
outsl
jae
mov
mov
jnp
jae
add
xchg
ficoml
and
jo
mov
out
testl
ja
add
aam
daa
cmp
pop
out
mov
mov
loopne
mov
jb
mov
add
fldt
test
aas
lods
leave
and
dec
mov
mov
mov
mov
push
cmp
add
add
lds
mov
dec
xor
loopne
mov
addb
push
sub
pop
ss
xor
mov
dec
rolb
mov
mov
add
dec
lock
xchg
mov
cmp
cmpsl
xchg
and
sub
mov
bound
mov
nop
add
jecxz
outsl
rolb
mov
bswap
out
xchg
add
bound
mov
add
mov
push
cmp
lcall
lds
or
mov
lods
jae
iret
add
movsl
cmp
inc
mov
sub
push
push
cs
loopne
mov
mov
jle
das
pushf
sub
jo
mov
cmpsl
add
pop
push
scas
cmp
add
pop
aam
test
xor
cltd
cwtl
mov
std
outsl
jae
inc
xor
mov
notl
xchg
jne
inc
into
xor
lret
mov
jne
sbb
call
add
mov
mov
mov
in
jbe
negl
add
mov
lock
insl
pushf
sub
push
add
insl
dec
loopne
mov
movsb
xor
mov
out
sbb
jge
sbb
loope
add
mov
push
xchg
push
xchg
or
mov
mov
xchg
lods
mov
add
rorl
ret
test
jecxz
push
add
xchg
dec
or
cmp
clc
daa
cwtl
jne
test
mov
mov
js
pop
pop
cmp
add
add
insb
jo
mov
cwtl
or
addr16
aas
sahf
pop
addb
and
mov
dec
addb
mov
loop
mov
je
add
xchg
add
mov
lods
sahf
and
mov
cltd
sub
and
mov
push
sbb
stc
imul
jae
imulb
lret
stc
sti
xchg
jecxz
add
jp
fucompp
pop
push
mov
sub
push
add
cmpsb
jecxz
scas
pop
dec
stc
sbb
cltd
incb
lods
mov
add
loope
add
stos
ss
jle
add
ret
jo
mov
and
mov
cld
mov
pop
mov
lret
cmp
push
inc
nop
add
lret
xchg
add
aas
lcall
jno
xchg
jb
mov
outsb
jnp
test
push
pop
jg
dec
xchg
jmp
add
clc
xchg
fildll
push
cmp
mov
sbb
add
jns
push
jg
push
dec
jb
mov
ljmp
dec
or
sub
mov
add
mov
add
xor
mov
push
mov
mov
mov
jno
mov
test
add
call
rolb
mov
in
or
cmp
in
jae
popa
mov
ds
test
add
in
cld
mov
ljmp
mov
orl
mov
add
js
push
jl
les
add
or
or
paddq
outsb
jl
ret
jne
ret
push
insl
pop
or
xor
jnp
add
dec
xor
add
rep
lret
mov
int3
cs
dec
stos
jge
add
sbb
ljmp
jnp
jp
aam
imul
idivl
daa
mov
pop
rolb
xchg
data16
mov
push
cli
cwtl
push
push
pop
leave
add
out
push
add
add
jb
mov
adc
stos
jg
loop
mov
mov
or
mov
push
mov
jmp
mov
fdivl
lock
jo
mov
pop
movl
push
or
cld
ret
push
lds
fildl
mov
incl
or
inc
rolb
mov
iret
clc
inc
enter
mov
mov
jne
fnstsw
stc
aas
test
mov
mov
add
mov
or
pop
hlt
mov
add
dec
sahf
push
inc
add
rolb
mov
mov
xor
push
add
rep
dec
jl
ja
int3
in
int
adc
mov
loop
mov
jl
leave
cs
sub
repz
mov
mov
mov
pop
sbb
les
outsb
pushf
icebp
lods
call
pop
and
mov
in
fimull
inc
nop
add
aaa
out
nop
add
cs
imul
mov
fisttpll
sub
mov
add
jl
add
push
push
xchg
xor
push
jae
add
pop
sahf
sub
mov
out
insb
inc
aas
lcall
cmp
add
mov
int3
sbb
sbb
out
aam
lcall
leave
pushf
out
or
test
mov
mov
adc
add
cwtd
loopne
mov
mov
xchg
mov
call
mov
xor
xor
notb
enter
push
add
pop
adc
fwait
sbb
mov
sahf
lods
jg
inc
add
adc
outsl
pop
mov
and
push
add
jnp
dec
fisttps
push
cmpsl
cmp
push
add
mov
cmp
je
xlat
or
mov
push
or
mov
push
add
add
rcl
sbb
dec
fsubs
mov
mov
nop
add
jae
add
enter
push
mov
adc
push
fsubrl
cld
jno
into
adc
movsl
ss
leave
shrl
and
mov
movsb
mov
mov
mov
xchg
or
lock
mov
add
or
roll
into
inc
add
xchg
xchg
mov
push
xchg
or
inc
add
sbb
or
in
insl
rolb
mov
cmp
addb
cli
hlt
loopne
mov
sbb
mov
repz
mov
jg
call
add
mov
pusha
add
call
in
inc
add
mov
add
data16
iret
test
bound
mov
and
gs
cmp
and
and
xchg
mov
mov
mov
xor
mov
mov
add
mov
pop
movsb
mov
mov
mov
fldcw
pop
inc
and
xlat
not
push
leave
stos
lea
add
mov
sub
lcall
aaa
addr16
add
loopne
mov
in
outsb
pop
mov
pop
loop
mov
sahf
inc
add
inc
mov
mov
sub
mov
loopne
mov
push
or
add
add
cmp
lahf
stc
pop
ret
mov
int
inc
cld
push
dec
jne
inc
cmp
mov
testb
or
or
add
add
ljmp
mov
imul
xchg
out
rolb
mov
pop
arpl
add
mov
aam
fnsave
adc
cmpsl
mov
add
bound
mov
test
xchg
jbe
ja
lea
push
inc
add
int
mov
mov
call
lds
insl
addr16
bound
mov
movsl
xor
insb
xor
std
cwtl
int
dec
mov
mov
hlt
dec
cli
enter
add
notb
add
mov
xchg
xor
sbb
add
pusha
add
lods
imul
je
dec
mov
xchg
mov
mov
add
mov
into
lret
fmul
out
insb
jne
push
mov
bound
mov
add
xor
sbb
pushl
dec
xor
mov
test
push
repz
mov
pushf
loope
rolb
mov
addb
xchg
push
sub
cltd
jle
mov
xchg
mov
inc
ja
mov
adc
sub
xor
mov
hlt
popa
mov
mov
test
in
sub
lea
xor
mov
push
or
mov
icebp
cmc
xchg
cmp
add
out
inc
cmp
jns
in
add
add
add
push
add
add
add
mov
add
dec
jl
jo
mov
mov
push
xlat
xor
pusha
add
sub
loop,pt
mov
fstpl
mov
xor
mov
add
mov
dec
or
in
inc
sbb
mov
addb
and
insb
sub
or
add
lcall
pop
mov
js
fsubl
mov
add
insl
movsb
adc
insb
pop
loopne
mov
mov
add
add
add
dec
push
pop
push
pop
adc
or
mov
add
add
mov
mov
and
loop
mov
add
cmc
jb
mov
repnz
mov
dec
scas
mov
cmp
rolb
mov
add
dec
add
mov
add
pop
stc
pop
stc
fldcw
cmp
maxps
insb
outsb
pop
mov
ljmp
out
or
sub
cmpsb
outsl
mov
add
mov
cmp
aam
add
xchg
xchg
sbb
mov
add
mov
pop
popf
pop
mov
xor
inc
jle
mov
fldt
mov
jge
mov
pop
jp
mov
inc
add
loopne
mov
adc
xorl
add
mov
push
mov
cmp
add
jne
fisubrs
arpl
pop
lods
out
cmpsl
push
add
fwait
jne
testl
cs
inc
mov
cli
mov
scas
cmpsl
addl
add
stos
cmp
add
add
add
nop
add
jecxz
or
cltd
cld
jne
idivb
outsl
mov
dec
insb
mov
mov
mov
or
stc
sub
loop
mov
sbb
jns
add
add
mov
mov
sbb
aad
pop
test
pop
dec
fcmovnb
je
bound
mov
addb
xor
mov
lods
push
outsl
inc
fdivrs
cmp
icebp
shrl
lret
mov
nop
add
fldt
add
inc
out
pshufw
xor
add
mov
add
mov
add
add
mov
mov
hlt
ja
gs
mov
scas
imul
subl
adc
mov
xorl
jp
outsl
xchg
add
cmp
add
lret
addl
inc
dec
add
aas
sbb
es
xlat
mov
adc
mov
push
stos
xor
test
inc
adc
mov
mov
cwtl
push
repnz
pop
test
imul
stos
addb
cmp
pop
int
dec
xor
mov
fxch
std
inc
out
jno
rolb
mov
mov
js
xchg
cmp
bound
mov
inc
jb
mov
shrl
push
js
push
add
mov
nop
add
add
mov
cltd
loop
mov
or
aam
jns
out
push
inc
addb
sti
ljmp
mov
mov
add
pop
adc
mov
pop
fdivs
lods
cmp
add
add
jmp
add
mov
arpl
int3
inc
add
xchg
insb
push
inc
adc
add
cmp
xchg
add
or
out
mov
adc
movsl
jno
sub
add
mov
mov
fimuls
push
jle
cmp
mov
xchg
sbb
sahf
neg
roll
fimuls
and
inc
lods
into
xchg
lods
sti
lods
mov
pop
jmp
cmp
inc
fs
lods
fcmovne
dec
int3
incl
dec
xor
xchg
add
mov
icebp
sub
add
mov
mov
enter
push
mov
mov
cmp
cmp
add
mov
mov
inc
add
add
int3
daa
pop
xchg
lret
mov
mov
mov
push
add
adc
mov
outsb
add
dec
cmp
push
in
adc
mov
adc
dec
stc
fcmovnbe
fldt
add
mov
mov
addb
sbb
lods
xor
jl
add
jmp
sub
test
jmp
sub
mov
nop
add
div
sub
jno
xchg
daa
and
std
jno
adc
outsl
aaa
jg
loop
mov
xchg
cli
repz
add
xor
mov
add
stc
jno
int3
imul
jl
dec
out
in
jns
test
cld
jns
adc
mov
jmp
lahf
xor
dec
mov
lods
cmpl
adc
mov
fistpll
cs
insb
or
add
add
mov
popf
aam
xor
mov
cltd
xor
mov
mov
push
notb
xchg
dec
sbb
inc
add
mov
sub
xor
cmc
and
js
dec
sbb
fists
pop
call
mov
sbb
xchg
movsb
add
in
inc
rolb
mov
or
pop
loopne
mov
pop
xchg
sub
pop
cwtl
stc
adc
popl
aam
pop
cmpsl
mov
enter
fwait
sub
fsubrp
dec
iret
in
push
and
push
xchg
pop
cld
fisubs
mov
mov
mov
dec
lock
jae
repz
inc
add
mov
pop
mov
adc
or
cs
add
mov
jle
push
adc
fcomps
addl
add
pop
sbb
insl
enter
stos
outsl
int
addb
xchg
mov
pushf
cmpsb
xchg
dec
push
dec
rcll
xor
out
in
das
cltd
jnp
push
rolb
mov
xchg
add
rolb
mov
dec
mov
mov
stos
movsb
pusha
add
mov
xor
inc
add
shll
mov
bound
mov
pop
arpl
pop
cwtl
pop
ret
mov
fsubrs
add
pop
scas
pop
inc
add
inc
loop
mov
mov
adc
lods
mov
add
int3
je
outsl
push
add
sub
xor
mov
nop
add
mov
push
pop
sub
mov
mov
add
mov
adc
and
stos
int
sub
daa
xchg
dec
je
aam
push
xchg
push
imul
mov
mov
sbb
repnz
fucom
inc
pop
scas
mov
leave
into
mov
add
scas
je
xchg
sti
aad
cmp
pop
lret
mov
mov
mov
imul
mov
mov
mov
inc
mov
repz
mov
mov
es
mov
lock
and
add
cmpsl
mov
imul
mov
jp
ss
rorl
cmpsb
into
mov
mov
add
adc
lds
add
cs
lea
add
out
lock
mov
lcall
pop
pop
pop
adcl
je
adc
mov
pusha
add
lods
stos
mov
addb
imul
inc
add
mov
dec
adc
mov
das
std
fdivrp
iret
ret
in
shrl
je
pop
mov
fs
inc
lock
add
cmp
loope
movsb
punpckhwd
cmp
mov
push
ja
test
aam
arpl
dec
hlt
mov
add
aaa
push
fadds
scas
test
ljmp
popa
or
mov
mov
mov
in
daa
xor
mov
jae
pop
movsb
mov
adc
mov
sub
mov
mov
xor
mov
neg
jae
cmp
add
test
test
sbb
add
nop
add
insl
idivl
mov
addr16
xor
outsl
jno
add
scas
sub
jae
sbb
aaa
js
adc
out
fs
adc
mov
test
or
sarl
pop
mov
xor
pop
rcll
mov
mov
pop
sbb
add
mov
invd
insl
sbb
pop
lahf
or
jmp
cwtl
movb
sub
pop
inc
mov
push
aaa
push
add
mov
mov
mov
sahf
dec
rolb
int
mov
add
xor
mov
add
arpl
xchg
imulb
mov
mov
cmpsb
lahf
pop
xor
xchg
mov
insb
pop
je
scas
add
mov
xchg
push
repz
mov
and
in
cmp
rolb
out
add
add
mov
inc
mov
leave
arpl
mov
sub
add
mov
add
add
out
outsb
lock
dec
lcall
out
adc
call
add
mov
add
leave
roll
jbe
add
faddl
dec
sub
add
int3
sbb
sub
orl
fcomi
lods
sub
inc
fcmovne
jmp
jae
fwait
mov
jo
mov
test
or
push
adc
dec
dec
xor
mov
sbb
add
ds
fildll
test
xchg
sub
in
nop
add
xor
dec
add
mov
movsl
xchg
add
or
and
mov
sub
xchg
rolb
mov
test
push
cli
pop
jecxz
push
clc
addr16
lahf
imulb
repnz
xlat
or
rolb
mov
rcrl
xor
mov
adc
mov
add
pop
dec
fistps
fnstsw
mov
add
add
lcall
orl
pop
pushf
in
sti
push
ret
xchg
ret
arpl
or
adc
and
lcall
add
dec
push
cwtl
into
in
inc
mov
push
or
test
mov
dec
arpl
add
push
movsl
das
bound
mov
mov
add
add
adc
shll
and
mov
orl
mov
mov
sub
movsb
dec
cmp
add
inc
ret
fldenv
add
mov
lcall
loop
mov
loopew
cmp
or
adc
mov
pop
repnz
sub
xchg
cmc
inc
jo
mov
lods
enter
adc
mov
ja
pushf
mov
test
fs
popf
mov
jne
xchg
pop
sbb
add
xchg
jge
sbb
sbb
mov
mov
bound
mov
jle
icebp
dec
repz
add
add
imul
mov
les
add
mov
fidivrl
mov
popfw
cmp
pop
test
sti
sti
daa
in
add
mov
pop
mov
loopne
mov
hlt
dec
dec
mov
shl
int
fdivr
pop
pushf
jg
nop
add
or
nop
add
mov
xchg
add
mov
repz
lahf
xlat
loopne
mov
insb
outsb
mov
mov
inc
and
xchg
xlat
call
jg
repz
xor
add
or
dec
aad
xchg
xor
mov
fcompl
cmc
js
outsb
sbb
inc
mov
push
fadds
add
pop
mov
mov
add
mov
insb
xchg
xor
mov
adc
mov
jo
mov
out
es
loope
pop
in
jg
dec
sub
add
fwait
xor
add
mov
js
and
mov
arpl
cmpsb
jae
mov
mov
sub
lock
xchg
or
jb
mov
add
and
or
add
push
add
mov
mov
out
xchg
pop
testl
inc
cld
inc
add
sub
add
mov
sub
or
mov
mov
imul
pop
out
cmp
sahf
shrl
outsl
incl
add
xor
mov
pop
pop
mov
mov
movb
xchg
sahf
lds
shll
add
out
mov
mov
push
inc
pop
or
add
jmp
fimuls
icebp
jae
nop
add
mov
clc
or
movsl
std
addr16
xchg
andl
cmc
in
mov
lea
cmc
and
daa
xor
popa
enter
mov
dec
mov
mov
mov
and
ds
je
mov
mov
jg
mov
add
fcmovb
dec
push
inc
adc
mov
std
xor
jmp
ss
bound
mov
pop
imul
jns
adc
out
push
push
mov
in
push
add
add
jb
mov
ss
push
add
xchg
jno
rolb
mov
mov
fs
mov
lahf
jne
addr16
push
or
mov
ds
fdivr
xor
cvtdq2ps
push
out
cmp
add
inc
flds
fisttpll
jb
mov
adc
xchg
push
aaa
mov
mov
fs
int
out
sub
scas
faddp
mov
stos
adc
bound
mov
pop
repz
mov
cs
mov
pop
sbb
add
inc
adc
jmp
mov
push
add
loopne
mov
jmp
add
push
xchg
out
adcl
lds
mov
loope
mov
testb
mov
add
leave
ljmp
mov
imul
test
inc
out
dec
and
mov
loopne
mov
repz
xchg
add
fidivrs
add
and
rolb
mov
push
cltd
das
popf
out
cli
cltd
data16
xor
daa
fxsave
inc
add
push
mov
add
mov
sbb
sbb
and
mov
fidivrs
and
mov
add
mov
push
add
ds
jp
lods
xchg
cmpsb
pushf
cmp
dec
std
pop
xchg
imul
bound
mov
fwait
lcall
dec
shll
mov
data16
cmpsl
fwait
movb
adc
xor
mov
fmul
imul
js
adc
mov
sahf
push
and
hlt
inc
mov
dec
pop
xor
mov
push
push
cmc
movsb
loopne
mov
ss
mov
mov
mov
pusha
add
and
mov
mov
loope
and
mov
add
fistpl
lcall
push
out
adc
push
cmp
add
cmc
icebp
jbe
cmpsl
jecxz
cltd
fidivrl
dec
insl
or
fs
cmp
xchg
enter
inc
lcall
lods
leave
dec
dec
jle
jecxz
add
int3
in
and
mov
pop
clc
clc
sbb
xchg
mov
mov
or
add
push
add
cld
cld
xor
mov
jl
inc
add
mov
mov
mov
and
loop
mov
mov
adc
cltd
fbld
add
xchg
out
addb
adc
push
add
mov
mov
sbbl
ficompl
pop
dec
es
aam
add
mov
fs
pop
xchg
add
sbb
add
popf
and
pop
and
add
mov
add
loop
mov
jecxz
cmp
cmp
lret
add
and
mov
pop
sbb
movsb
out
stos
mov
mov
add
cmc
push
adc
mov
dec
idivl
xor
or
push
and
aas
in
pop
hlt
inc
add
addb
inc
jb
mov
push
pop
sbb
dec
mov
mov
sub
add
int3
mov
add
push
mov
push
test
mov
nop
add
mov
rolb
mov
mov
mov
add
stos
in
fisttps
cmp
cld
imul
sub
mov
push
jae
push
test
or
mov
out
sar
das
cld
clc
push
sahf
and
mov
xor
add
sub
xor
mov
or
clc
aas
mov
add
stos
and
aad
add
popa
pop
pop
cli
xor
pop
out
xchg
add
jns
into
mov
and
ret
push
sti
dec
xchg
sbb
xchg
and
test
loopne
mov
add
fwait
mov
mov
outsl
fmuls
add
mov
bound
mov
push
das
xchg
mov
add
mov
sub
add
push
imul
insl
es
jnp
out
cmpsl
rolb
mov
std
inc
ljmp
add
push
push
bound
mov
mov
push
sbb
lods
jl
mov
lods
cmp
fmulp
lcall
push
add
pop
jno
push
add
dec
mov
inc
cld
mov
xlat
shrl
inc
or
inc
add
pushf
int3
mov
add
mov
add
mov
adc
mov
add
aas
xchg
movb
add
mov
add
cld
or
add
mov
mov
mov
test
mov
add
fsub
add
arpl
rolb
mov
sbb
fdivr
mov
fists
and
xchg
cmpsb
sbb
pop
xor
inc
add
out
mov
mov
pusha
add
pop
leave
outsb
ret
cmp
enter
mov
cmp
sub
daa
leave
inc
sub
pushf
cmpl
std
mov
mov
adc
mov
jns
push
add
dec
int3
stc
push
push
test
les
mov
inc
add
jl
cmp
xor
add
push
mov
mov
jbe
add
dec
mov
jo
mov
push
lret
jecxz
popa
pop
fwait
jmp
dec
push
mov
add
mov
mov
sarl
or
fstpl
mov
inc
dec
nop
add
jg
xor
arpl
insl
push
add
cmc
mov
xchg
add
inc
gs
sub
mov
in
inc
add
sahf
mov
insl
movsb
lds
rolb
mov
jns
js
add
jg
mov
call
add
lods
push
push
sbb
or
lcall
das
xchg
add
push
aas
sbb
mov
dec
mov
add
add
nop
add
mov
inc
add
je
jmp
mov
adc
mov
es
fidivrl
add
add
std
cmp
mov
insl
pop
push
popf
and
mov
jge
ss
repz
ret
fwait
cld
jno
rolb
ficompl
repz
mov
push
add
cmpsb
pop
pop
inc
add
sub
addr16
ja
push
add
add
add
inc
xchg
jne
aas
push
jne
jl
mov
pop
push
les
push
icebp
jle
movsb
cwtl
push
pop
mov
mov
mov
fadds
sbb
js
and
add
add
mov
rolb
mov
xlat
add
mov
pop
jo
mov
int
dec
sbb
pop
sbb
cmp
popa
inc
add
adc
mov
ljmp
add
lods
es
mov
lcall
mov
inc
xchg
sub
out
in
add
dec
std
dec
push
mov
push
add
sarl
push
add
mov
jns
xchg
or
add
add
cmpsl
sbb
push
lret
push
xor
iret
cmp
test
push
aaa
in
mov
mov
popa
call
insb
pop
xor
mov
mov
gs
cli
rolb
and
fistps
loopne
mov
or
push
push
mov
mov
lods
inc
or
push
movsb
insl
inc
sbb
push
add
push
jnp
push
pushf
xchg
sar
xorl
add
mov
push
mov
pop
movsb
clc
insl
imul
add
mov
in
std
add
mov
cmc
insl
fstp
jp
mov
mov
mov
mov
mov
dec
dec
loope
or
adc
mov
mov
push
add
cld
jle
cld
xor
mov
add
mov
bound
mov
jbe
outsb
jns
mov
hlt
cmp
mov
es
add
out
sub
cmp
popf
imul
addl
rolb
mov
adcl
cmp
mov
xchg
movsb
add
cmp
mov
inc
popa
jno
lock
and
mov
and
xchg
popf
mov
lcall
mov
in
outsl
lds
push
mov
cmc
addb
lret
addr16
fs
call
mov
mov
incl
add
ret
jne
loop
mov
in
dec
add
outsl
or
add
fwait
cmpsl
push
dec
add
ret
jg
add
rolb
mov
mov
add
fidivrs
cmpsl
and
lret
sub
icebp
decl
sbb
imulb
insb
int
inc
xchg
add
cmpsl
push
add
repz
test
cmp
add
sbb
dec
nop
add
fs
jle
xor
pop
push
sub
nop
add
mov
jle
xchg
pop
cld
rolb
mov
add
into
shrl
add
mov
gs
mov
or
xor
push
sub
add
lret
add
mov
movsb
mov
add
daa
and
mov
mov
cmc
mulb
mov
test
xor
mov
mov
jb
mov
add
cwtl
push
inc
add
and
out
xchg
sbb
fs
inc
les
xchg
stc
clc
jae
aas
xchg
lret
ds
push
xor
mov
or
add
int3
fcom
cld
loop
mov
je
aad
add
pop
mov
int3
pop
fs
shl
mov
fnstenv
add
notl
cmp
or
add
sti
movsb
jne
loopne
mov
inc
mov
mov
mov
js
pop
dec
add
mov
lret
cmp
flds
out
xor
mov
adc
mov
ret
mov
cmpsl
leave
jmp
stos
in
add
test
add
inc
mov
cmp
add
mov
test
mov
sti
mov
movb
xchg
in
stc
xor
mov
fdivr
mov
inc
leave
xchg
xlat
mov
mov
enter
add
push
test
xchg
int3
daa
fdiv
inc
xchg
dec
push
sbb
add
pop
das
rolb
mov
and
mov
push
pop
dec
adc
add
repz
add
mov
es
hlt
pop
dec
or
cli
jl
in
sbb
addb
movsl
repz
add
push
mov
fwait
pop
push
add
mov
lods
jl
add
adc
std
dec
inc
hlt
mov
xchg
test
cmp
add
mov
push
adc
mov
iret
push
xchg
or
inc
aad
clc
ffreep
push
add
ret
fmull
xchg
int
push
in
lcall
clc
lods
movzwl
add
mov
subl
mov
jg
xor
mov
scas
push
shll
inc
add
mov
mov
cmpsl
dec
scas
sub
imul
push
test
icebp
sbb
jg
xchg
or
mov
negb
mov
lock
xor
push
loopne
mov
mov
add
add
cmp
fldenv
add
stc
loope
movsl
and
add
ret
js
push
in
inc
and
fistpl
lods
negl
scas
mov
jg
cltd
adc
mov
mov
mov
xor
or
add
mov
add
in
lret
aaa
gs
adc
push
popf
jle
mov
jo
mov
in
mov
mov
nop
add
mov
lcall
jo
mov
add
stos
fcoms
insb
sahf
dec
xchg
rolb
mov
mov
or
xchg
ficomps
subl
daa
call
push
pop
mov
mov
dec
mov
rolb
mov
mov
int
in
jae
test
pop
adc
mov
shrl
sbb
scas
dec
ja
push
rolb
pop
aaa
in
and
add
jmp
in
add
add
push
dec
or
lahf
pop
popa
fcompl
idivb
xchg
repnz
add
mov
add
cld
leave
push
pop
es
mov
mov
scas
rolb
aad
add
sbb
xchg
adc
and
mov
addb
mov
pandn
add
mov
add
xor
fstl
mov
fldt
add
and
ja
xor
das
mov
cmc
js
xchg
push
fdivs
mov
mov
push
sub
pusha
add
mov
mov
bound
mov
cmp
mov
mov
cmpsl
dec
mov
sbbl
es
jno
adc
jg
and
mov
test
ret
ret
aas
movsl
call
pushf
jge
je
cmp
out
sub
fnstenv
mov
sbb
mov
add
daa
mov
xchg
out
sub
pop
fucom
orl
xchg
std
jo
mov
mov
fdivrl
add
add
add
addr16
inc
pop
jecxz
nop
add
out
xchg
pop
fistpl
xchg
mov
dec
sbbw
adc
jecxz
stc
aaa
xor
mov
loopne
mov
scas
add
add
repz
push
add
jns
pop
mov
add
or
rolb
mov
movsb
in
add
pop
ret
sbb
ret
je
pop
movsb
ljmp
or
add
cmp
lret
xor
mov
lds
add
add
adc
mov
mov
stos
sbb
mov
mov
mov
jp
pop
add
sahf
aam
sbb
addl
lods
outsl
and
mov
sahf
shr
out
call
cmp
xlat
mov
cmp
add
test
add
dec
jmp
add
add
inc
hlt
and
adc
ja
stc
or
mov
mov
out
add
fwait
pop
das
dec
jecxz
add
lds
mov
lcall
mov
add
pop
inc
xchg
cmp
movsl
jns
addb
and
mov
out
popa
imul
sub
icebp
dec
jo
mov
mov
pop
cmp
ffree
cs
mov
cmp
xchg
dec
push
fisubrs
fwait
dec
xchg
mov
push
pop
ds
popa
xor
jne
in
mov
inc
test
jno
cmp
lret
testb
adcl
add
push
shll
cmc
dec
leave
jge
into
roll
fistl
or
pop
daa
out
pop
stc
inc
js
pushl
ret
mov
test
lret
cmpsl
addl
add
sti
sbb
mov
divl
xchg
cmpsb
mov
mov
add
es
add
adc
mov
xchg
aad
add
mov
jmp
add
mov
and
out
in
add
jl
mov
jo
mov
mov
adc
mov
les
add
loope
das
rolb
xchg
fsin
xchg
add
add
push
mov
add
mov
mov
inc
andl
add
pushf
or
ret
or
inc
add
add
das
sub
mov
mov
xlat
fcompl
loopne
mov
xchg
sbb
mov
mov
mov
leave
aam
or
xor
fcoml
dec
xor
cmp
mov
ss
push
addb
xchg
inc
xlat
jl
xchg
push
addb
mov
add
icebp
and
push
xchg
idivb
add
mov
and
inc
aas
movsb
aaa
mov
stc
fs
push
add
xor
add
add
mov
imul
xchg
adc
cmp
repnz
mov
aam
pop
xchg
mov
clc
fcmovnu
push
add
mov
mov
mov
add
stos
out
dec
iret
loop
mov
dec
das
repz
adc
mov
add
xchg
std
dec
jnp
jmp
addb
in
mov
iret
mov
aam
sbb
xchg
lods
dec
xchg
enter
cld
fnstenv
mov
xchg
mov
mov
push
lret
push
jle
aaa
pushf
xchg
mov
add
mov
test
add
xor
leave
test
dec
xchg
cmp
pop
test
or
add
inc
shr
mov
add
jno
push
add
add
cmp
pop
xchg
stc
pop
shll
les
mov
pushf
push
cmc
push
iret
lds
test
cmc
fstpt
leave
jmp
or
lods
flds
add
fldt
inc
negl
mov
lods
push
roll
adc
mov
leave
in
sub
inc
loop
mov
push
popa
pop
loope
and
cmp
test
add
add
add
mov
sbb
mov
dec
mov
leave
add
mov
push
add
push
bound
mov
add
add
mov
pop
cld
xor
mov
mov
mov
cltd
mov
adc
mov
adc
rolb
mov
std
fisttpll
gs
pop
and
mov
adc
mov
mov
in
lock
add
add
add
lds
push
xor
addb
repz
jb
mov
fists
mov
and
mov
inc
add
mov
test
in
shll
call
jnp
mov
pop
jne
xchg
cmpsl
addr16
add
sbb
jmp
cmp
xor
mov
push
add
add
mov
add
or
es
and
mov
jbe
add
mov
add
fadds
mov
mov
dec
fsub
add
push
gs
aas
bound
mov
out
movsb
xchg
sahf
movsl
lods
mov
xor
mov
xor
jl
lds
in
test
mov
mov
mov
push
add
in
add
add
aaa
xchg
cmpsl
out
int3
add
mov
aam
ds
jge
add
mov
bound
mov
les
addb
imulb
ss
fwait
jae
or
jmp
cs
shl
add
mov
mov
dec
xchg
adc
pushf
sti
das
outsl
jnp
mov
mov
lds
lds
xor
xchg
dec
push
sbb
lea
add
arpl
push
xchg
xor
mov
add
in
and
roll
xchg
mov
cld
dec
ret
stos
or
out
mov
ljmp
mov
lods
daa
lds
cmp
imul
inc
mov
mov
push
xor
mov
enter
mov
inc
jecxz
push
scas
xchg
push
add
cmp
add
push
mov
pushl
add
daa
es
movsl
sti
imul
mov
mov
jmp
xor
mov
pop
mov
cmp
adc
les
enter
add
call
fcoms
rcll
lret
pushf
cmp
movsl
scas
mov
add
push
add
pop
lcall
mov
insl
lods
dec
mov
mov
add
pop
dec
mov
sub
add
pop
das
cmpsl
inc
xchg
push
add
mov
mov
movsb
cmp
mov
mov
das
mov
out
in
xor
mov
repnz
testl
mov
push
xor
mov
mov
rcrl
into
int3
gs
pminsw
imul
mov
or
insl
roll
pop
popa
test
sub
cmp
push
outsl
cmp
push
lahf
push
mov
mov
les
addr16
addb
sahf
repz
ljmp
add
bound
mov
add
mov
fiadds
test
adc
mov
sbb
jp
das
and
mov
push
mov
add
aam
out
orl
dec
xor
cld
loope
mov
pop
divl
xchg
ds
syscall
cmp
inc
jbe
push
sbb
add
sub
test
add
inc
add
leave
out
xor
stos
icebp
jle
test
inc
pop
pop
push
pop
sub
adc
add
mov
mov
jp
jns
cmp
add
ss
add
rolb
mov
cmpsb
shrl
adc
xchg
loop
mov
add
nop
add
dec
imul
iret
adc
mov
mov
mov
es
lods
mov
testb
cs
mov
mov
mov
inc
sub
add
jge
psubw
add
add
pop
add
jl
lcall
bound
mov
enter
fwait
pop
mov
fildl
lods
mov
sub
sbb
aad
and
out
dec
cs
add
add
imul
in
imul
dec
lods
sbb
and
push
negb
add
pop
or
jb
mov
add
xchg
inc
lret
xor
mov
mov
xchg
loop
mov
jg
stc
div
imul
fsubs
inc
das
cli
sbb
daa
adc
mov
cmp
sub
lods
mov
add
add
lea
dec
test
outsl
idivl
cmp
xor
mov
mov
add
add
mov
xchg
test
push
dec
and
mov
add
pop
orl
aas
dec
jl
addb
mov
fs
mov
sbb
cmpsl
popl
mov
bound
mov
clc
sbb
outsl
xchg
lods
mov
in
or
add
clc
mov
ds
stos
ja
cwtl
test
add
jp
sbb
jb
mov
addb
xchg
add
pop
jo
mov
out
pop
mov
dec
mov
mov
mov
add
outsl
repz
daa
rcll
mov
add
rorl
sub
jmp
add
sub
add
and
in
and
cli
mov
inc
aas
sub
mov
aam
aad
shll
call
add
add
int
fcompl
pop
inc
add
sahf
test
into
xor
add
adc
mov
or
jp
aas
xor
xchg
cmp
das
mov
or
fld
inc
or
xor
add
inc
pop
xor
mov
or
add
ffree
daa
lods
std
inc
outsl
loop
mov
jl
bound
mov
mov
and
pop
mov
ss
fldl
pop
scas
addr16
dec
mov
sti
cmc
popf
movsb
insl
ja
pop
or
rolb
mov
stos
jno
dec
add
pushf
imul
daa
jg
mov
mov
pop
push
inc
dec
jns
or
ret
jl
dec
es
mov
push
jge
add
push
add
add
fwait
in
and
xchg
rolb
mov
dec
lret
inc
dec
mov
lcall
add
outsl
loop
mov
cwtl
mov
fwait
push
xor
mov
mov
dec
dec
mov
fdiv
nop
add
sub
xor
inc
call
add
mov
rolb
mov
sub
mov
inc
adc
dec
sub
add
gs
mov
mov
sbb
out
lret
mov
add
add
mov
push
fistpl
das
adc
mov
mov
add
rolb
add
mov
lock
jns
scas
lods
adc
mov
daa
mov
xor
mov
and
ficoml
jae
push
add
rolb
mov
dec
scas
das
add
add
xchg
mov
subl
sbb
test
add
ret
pop
fldcw
sti
cli
cmp
addb
mov
and
mov
add
mov
mov
adc
std
movsb
ret
out
cmp
movsb
insl
or
xchg
popa
lret
fisubrs
mov
sbb
imul
mov
add
test
inc
and
in
add
arpl
mov
add
or
mov
xchg
cli
push
add
repnz
pushf
sub
or
mov
add
add
push
mov
scas
push
in
mov
mov
repnz
cmp
pusha
add
pop
xchg
cmp
leave
sahf
sub
add
sarl
fcmove
mov
dec
mov
jmp
sub
add
lock
out
test
mov
xor
mov
add
pop
lcall
xchg
and
add
ss
jg
push
dec
dec
mov
jge
out
xchg
sbb
xor
mov
add
dec
cwtl
repnz
leavew
cwtl
inc
ss
lret
mov
add
push
loopne
mov
add
mov
pop
push
addb
push
push
add
mov
add
add
repz
mov
lds
lret
js
out
cmp
mov
jmp
fwait
lret
call
or
mov
dec
jge
mov
rolb
mov
and
add
add
aas
test
fldl
mov
test
sub
mov
mov
sub
ffreep
jb
mov
add
push
push
adc
jno
cs
fnstcw
out
outsb
cmpsl
dec
fs
mov
add
pop
std
fisubl
xor
mov
mov
dec
push
add
iret
mov
push
loop
mov
rolb
mov
pusha
add
add
std
nop
add
mov
and
mov
ja
sub
addb
in
sub
inc
sub
ret
mov
jge
scas
push
add
loopne
mov
inc
cmpsl
fildl
jno
in
mov
mov
mov
ret
jp
jl
aaa
inc
add
jb
mov
dec
mov
mov
sbb
mov
inc
push
test
mov
sub
test
mov
sbb
push
cwtl
jg
out
pop
xor
out
mov
pop
xlat
rolb
jp
lds
addr16
push
cs
and
loop
mov
sub
add
pop
xor
pushf
cwtl
cld
mov
lcall
fsubrs
add
dec
jno
js,pt
add
add
mov
add
scas
dec
rolb
cwtl
inc
mov
sub
xor
lcall
add
int3
jmp
rolb
js
mov
mov
xchg
jno
add
dec
pop
inc
add
mov
cmp
add
lret
mov
add
inc
push
mov
fucomp
bound
mov
xor
and
mov
test
insl
in
bound
mov
mov
pop
add
jns
je
or
mov
mov
add
roll
test
test
out
addr16
cli
popa
push
xor
test
xchg
adc
add
inc
ret
xchg
adc
inc
cmp
lods
aam
cmp
pop
jp
out
hlt
xchg
add
mov
add
cld
jns
mov
mov
xchg
sti
out
mov
push
inc
jbe
lods
push
gs
jge
push
or
aad
fwait
mov
out
jp
and
ljmp
fcoms
dec
test
mov
mov
movsl
mov
and
fstl
jo
mov
inc
cmp
add
pop
rcrl
fstpt
cltd
and
mov
fwait
mov
es
mov
jb
mov
push
fwait
jno
add
inc
ret
and
ror
sti
cmc
pop
inc
mov
mov
add
xchg
push
add
shr
outsb
dec
push
bound
mov
cmp
add
add
mov
fwait
dec
lahf
ja
fisttpll
inc
mov
xchg
loopne
mov
add
imul
push
cltd
je
push
fisubs
js
dec
lret
shr
rolb
in
xchg
aam
outsl
pushw
and
inc
add
sbb
adc
pusha
add
jno
fidivrs
xlat
fxch
repnz
notb
mov
int
pop
in
push
add
cmp
mov
add
xchg
je
mov
jnp
flds
lods
popa
insl
mov
jnp
and
leave
jno
int3
rolb
mov
add
jae
add
sbb
stos
stos
ret
aam
push
xor
add
test
add
push
mov
xor
mov
loopne
mov
add
pop
push
js
xor
imull
push
inc
inc
fwait
addr16
idivb
addl
adc
cmp
add
mov
mov
mov
or
fiaddl
mov
lds
rolb
int3
add
add
mov
xor
mov
dec
sbb
mov
jg
lds
lret
xchg
push
test
add
push
add
push
mov
inc
mov
pop
loop
mov
nop
add
in
imul
inc
pop
cld
jno
jae
cmp
jp
sub
mov
je
pop
aam
lds
int3
fistpl
aad
lret
cmp
pop
mov
jle
fcom
add
add
add
les
push
mov
dec
out
xchg
aad
add
xor
fbld
add
mov
add
jbe
addb
mov
fadds
push
fs
rolb
pop
and
lcall
or
arpl
inc
cs
fists
out
push
dec
rolb
mov
arpl
flds
add
cmp
cli
insb
mov
add
add
scas
sub
in
add
mov
or
push
loopne
mov
mov
fstpt
pop
push
mov
add
mov
mov
mov
add
sti
addb
push
pop
stc
mov
dec
popa
addb
aad
adc
rolb
mov
insl
pop
xchg
adcl
rolb
mov
add
fdivl
dec
lret
mov
xor
add
mov
mov
sub
xchg
movsl
push
les
and
mov
shll
jae
jnp
cmp
add
add
mov
out
dec
mov
or
mov
jl
adc
cmpsl
stos
aas
sbb
mov
sbb
inc
rolb
mov
jbe
sahf
stos
int
inc
add
call
dec
test
cmp
out
mov
pop
stos
iret
int
add
pop
lcall
stos
add
aam
jno
jmp
jg
mov
in
mov
add
cld
xor
stc
ds
rolb
mov
aam
inc
sahf
mov
lret
out
es
mov
xlat
mov
adc
popa
and
sbb
dec
sahf
cmc
add
inc
cltd
bts
lret
and
adc
adc
mov
and
fisttps
pop
adc
mov
xchg
dec
lret
xor
mov
add
lahf
xor
mov
add
add
xor
sbb
push
outsb
rolb
mov
cwtl
popf
std
movsb
xor
fwait
fwait
and
nop
add
inc
dec
cmp
or
std
mov
cs
cmp
out
sub
xor
mov
add
orl
fimull
push
cltd
scas
pop
aam
xor
lret
je
pop
scas
sbb
cmp
mov
hlt
pop
pop
xchg
xor
fnstenv
xlat
rep
cmp
in
push
call
mov
push
or
test
add
and
fcompl
pop
xor
nop
add
push
hlt
out
fnsave
mov
add
mov
add
ja
add
ljmp
add
mov
add
add
mov
inc
lret
movsl
mov
aam
popf
mov
js
loopne
mov
xor
mov
test
sub
cmp
adc
mov
xchg
ljmp
fucomi
jae
add
ret
pop
ret
mov
ja
stos
jg
mov
rcrl
xlat
xchg
add
add
mov
mov
lock
add
add
jns
sbb
mov
add
rolb
mov
add
mov
push
xor
mov
add
xlat
in
lahf
pop
lock
sbbl
pop
jb
mov
ja
jns
add
fidivrs
into
es
imul
enter
shll
lods
out
lods
int3
mov
xchg
fisttps
lret
add
icebp
inc
add
aad
jmp
and
add
je
les
xor
add
pop
int3
sbb
test
add
push
fimuls
xor
mov
leave
popl
add
mov
fstp
repnz
push
push
lahf
rcll
add
scas
mov
xchg
adc
mov
test
in
jbe
sbb
mov
leave
mov
xchg
repnz
xlat
xchg
and
and
mov
jl
or
add
out
dec
pop
jns
lahf
pop
push
nop
add
in
decl
mov
mov
ljmp
mov
sbb
movsb
sahf
iret
add
data16
cld
sti
mov
jnp
sub
nop
add
jg
dec
pop
and
mov
pop
and
mov
mov
add
push
sub
imul
add
add
int3
xor
rolb
mov
inc
push
gs
and
mov
mov
lahf
call
bound
mov
mov
daa
test
xor
push
push
inc
add
xchg
mov
ja
je
dec
outsl
rolb
mov
or
xchg
mov
dec
mov
xchg
rolb
mov
pop
nop
add
shll
cmp
xor
and
fs
ret
in
gs
cmp
jb
mov
add
cmp
add
scas
ljmp
add
sbb
push
mov
mov
cmp
add
mov
push
add
sahf
mov
pop
dec
dec
dec
fisttps
jp
add
mov
insb
fnstcw
push
aas
or
add
inc
add
repz
push
sub
pop
mov
lock
push
add
lods
scas
aad
dec
cmc
ret
xchg
and
dec
and
push
add
mov
add
fwait
out
pusha
add
lods
sbb
arpl
push
roll
adc
mov
add
ja
aaa
add
test
sbb
addb
or
push
repz
mov
test
add
mov
add
add
add
add
ret
xchg
bts
arpl
add
rol
in
data16
lea
and
mov
jne
push
mov
sub
add
mov
mov
insl
jae
jnp
jmp
mov
pop
or
or
mov
mov
pop
loope
rorl
xor
mov
or
jbe
test
repnz
push
cli
nop
add
add
mov
test
mov
jge
repz
ret
mov
mov
ret
hlt
xor
pop
lods
lds
stos
iret
lods
xchg
mov
in
mov
push
xchg
sbb
adc
lock
hlt
rolb
jle
mov
inc
add
les
js
add
loop
mov
mov
push
mov
inc
in
mov
add
push
cmp
rolb
sbb
out
adc
sbb
mov
fdivs
mov
mov
scas
push
fmuls
mov
mov
add
push
mov
and
cmc
jmp
xor
add
ljmp
xor
mov
mov
dec
out
ds
add
mov
jns
push
xor
mov
test
mov
push
mov
test
jo
mov
aad
mov
mov
cs
gs
jns
add
insb
and
outsb
stc
xor
pop
lods
adc
xchg
ds
jle
jns
adc
add
je
mov
fbstp
adc
nop
add
dec
inc
sbb
cmp
xor
out
stc
xor
mov
mov
xor
and
inc
test
add
incl
add
mov
adc
pop
add
mov
push
add
dec
jbe
pop
adc
push
add
scas
ret
pop
lods
call
std
pop
sub
mov
fwait
push
add
fisubrl
add
mov
addb
xchg
add
mov
jmp
pop
js
mov
and
cmpps
inc
xchg
adc
add
pop
out
jmp
insl
lret
mov
mov
mov
jmp
pop
jnp
ja
jmp
adc
mov
mov
mov
mov
into
inc
aaa
out
cmp
das
bound
mov
pop
fidivrs
pop
cmpsb
jns
xchg
jns
pop
in
aad
rolb
mov
into
rcrl
insb
or
sbb
sahf
push
clc
addb
jl
jne
cmp
sti
add
in
mov
mov
push
cmp
pop
movsb
fsub
add
sub
add
xlat
fnstcw
mov
or
es
adc
mov
add
rolb
mov
mov
jbe
pushf
loopne
mov
leave
icebp
aad
push
push
add
xor
std
and
mov
out
cmp
push
add
movlps
mov
dec
dec
sbb
sbb
mov
mov
pushf
imul
mov
jmp
dec
test
je
and
xchg
sbb
add
cld
addr16
into
sbb
add
mov
mov
mov
add
into
cld
fimuls
jbe
sbb
sub
add
sbb
insb
js
mov
push
push
stos
js
add
xchg
jae
cvtdq2ps
sbb
sub
mov
add
out
push
jbe
pop
inc
cmp
add
mov
notb
mov
add
cmp
dec
xchg
add
and
mov
jge
movsb
mov
mov
jb
mov
mov
mov
mov
movsl
leave
xchg
test
add
mov
mov
mov
sahf
fmuls
adc
mov
xor
add
add
mov
jge
fisttpll
nopl
adc
cmpsl
mov
les
leave
pop
pop
dec
sub
and
add
jg
and
pop
dec
mov
add
add
cmp
sbb
and
sbb
sub
add
mov
add
mov
sbb
ficomps
or
out
jg
aam
andps
add
daa
pushl
cltd
or
fstps
inc
inc
stos
lock
mov
fisttpll
or
cltd
call
es
xchg
rolb
mov
scas
adc
mov
dec
adc
scas
xor
pop
dec
sub
add
mov
mov
add
stos
clc
jns
push
add
ret
ljmp
push
adc
pop
and
mov
rcr
mov
add
imul
mov
in
push
jbe
mov
sbb
add
add
adc
int
add
fnstcw
xchg
pop
or
mov
pop
les
imul
add
pop
xchg
push
in
jnp
sbb
inc
and
add
jmp
icebp
pop
lret
lods
push
jnp
ficoms
fiadds
cmp
into
xchg
addb
scas
fimull
jbe
clc
pop
ja
outsl
enter
add
jmp
addb
xchg
sbb
add
addb
in
in
jecxz
rolb
mov
es
punpckldq
mov
mov
ret
rolb
mov
hlt
jecxz
jecxz
mov
push
add
popa
mov
and
mov
and
mov
nop
add
rcll
push
sub
in
lea
sbbl
insl
sbb
out
xchg
mov
mov
mov
add
mov
int
cmp
dec
sahf
adc
push
cmp
sub
cmp
xchg
jmp
std
cmp
loop
mov
and
mov
add
jecxz
xor
mov
mov
mov
add
add
aas
fisttpll
js
jno
cwtl
or
sbb
add
and
mov
mov
add
dec
mov
mov
xor
lret
mov
mov
sbb
dec
xchg
adc
sbb
mov
mov
add
movsl
adc
mov
popa
and
mov
add
call
add
mov
add
add
out
or
add
sbb
mov
add
aas
and
mov
mov
mov
add
mov
sub
push
cmpsb
xchg
mov
push
pusha
add
add
ret
out
pop
sbb
jmp
cmpsl
mov
mov
fs
mov
lahf
mov
dec
addl
add
in
adc
mov
frstor
fisubrl
cs
fidivl
inc
iret
pop
inc
add
xchg
nop
add
mov
les
nop
add
add
into
adc
inc
dec
sub
xchg
jne
int
je
dec
add
inc
add
mov
xchg
add
mov
dec
bound
mov
push
decb
test
aas
sbb
lock
fldcw
mov
xchg
popa
mov
repz
mov
add
add
pop
fsubrp
stos
pushf
push
pop
pop
mov
pop
clc
fcom
std
xor
mov
mov
push
sub
xor
mov
mov
repnz
add
or
pop
outsb
and
pushf
int
das
stos
into
fsubr
add
scas
lea
xchg
jnp
xor
cwtl
push
jno
hlt
fwait
lret
jge
add
fildl
les
pop
insb
pop
mov
ss
mov
add
mov
push
cmpsl
lret
popf
lock
sbb
iret
fnstsw
xlat
mov
mov
jmp
add
add
int3
lods
fbstp
mov
das
jo
mov
add
int3
inc
int
lret
push
adc
mov
jecxz
insb
es
or
repz
cmpl
test
fidivrs
and
add
clc
in
jns
sbb
imul
jle
add
add
add
mov
pusha
add
ljmp
mov
lret
inc
stc
movsb
lret
mov
add
sub
in
loop
mov
jno
outsl
test
or
mov
add
cmp
mov
sbb
je
sti
rolb
fstps
fimull
xor
mov
lds
xor
fwait
test
stos
fstps
mov
and
lds
sbb
cmp
mov
dec
dec
mov
lock
stos
imul
cmpsl
iret
mov
mov
loopne
mov
cmp
and
add
add
js
adc
mov
mov
popa
xor
pop
insb
out
adc
inc
adc
mov
test
dec
pop
les
add
mov
add
ret
xchg
push
mov
ret
xchg
add
and
mov
jl
fwait
pop
cmp
lods
dec
pusha
add
test
rolb
mov
cwtl
std
mov
sub
das
jns
add
daa
pop
jecxz
mov
mov
cmc
push
cli
outsb
push
fcomps
add
mov
dec
mov
mov
mov
mov
or
and
mov
and
js
mov
sbb
mov
sub
test
cmpsb
fistpll
mov
mov
dec
int3
pop
xchg
add
xor
loopne
mov
add
mov
out
mov
repz
dec
sti
mov
stos
cli
repz
add
add
mov
xor
push
add
cmp
lea
ljmp
jl
mov
mov
in
adc
or
pop
adc
mov
or
add
stos
addb
push
in
mov
jae
aas
mov
popf
fidivl
mov
int3
mov
inc
xor
dec
add
out
jle
push
aad
add
mov
cs
mov
mov
push
add
push
push
sarl
pop
lret
add
popa
iret
int3
int3
sbb
ret
pop
movsb
mov
mov
sub
add
orl
cmpsl
addb
push
mov
in
xor
lcall
xorl
lds
add
xor
add
add
cmpsb
mov
sbb
inc
add
mov
inc
ds
xor
add
dec
ljmp
xchg
adc
mov
out
mov
mov
sub
nop
add
cmp
jl
test
outsb
inc
dec
iret
insl
dec
dec
icebp
repnz
add
stos
cmp
call
or
mov
test
add
jns
nop
add
sti
lahf
rolb
pop
sbb
cmp
add
aaa
xor
insb
imul
sub
cli
in
add
mov
add
mov
pop
push
add
mov
loopne
mov
push
add
mov
mov
mov
loope
pop
adc
std
cmp
out
mov
ss
and
dec
inc
inc
mov
mov
cmp
add
xor
and
inc
mov
ficoml
add
push
cmp
stc
lret
sub
insl
rorl
add
mov
mov
fcomps
iret
lea
into
jmp
out
mov
out
mov
add
pop
in
dec
js
fstpt
rolb
mov
add
dec
je
adc
push
int3
xchg
cs
in
popf
push
push
add
movb
mov
add
jnp
and
mov
sub
sub
rolb
mov
mov
cmp
mov
sahf
push
push
scas
fcomp
push
iret
sbb
add
jle
or
push
add
lods
xchg
pop
sbb
call
mov
mov
lock
movsl
imul
add
enter
sti
out
add
mov
int3
and
mov
ret
fs
mov
inc
icebp
pop
push
adc
add
les
mov
and
sbb
jl
ds
add
mov
scas
imul
fldenv
test
add
push
in
or
mov
addr16
jmp
and
mov
push
and
fwait
lds
jbe
decb
mov
addb
lock
jmp
jp
and
pop
push
into
int3
adc
mov
out
jae
mov
gs
cmp
push
fwait
ret
lcall
jne
xchg
call
in
cli
cmp
xchg
push
clc
cli
lock
mov
add
in
bound
mov
xchg
xchg
add
or
mov
je
sti
icebp
adc
add
cmp
add
sub
int
add
jge
add
xor
mov
mov
repnz
and
in
pop
mov
xchg
mov
aas
lahf
frstpm(287
outsb
dec
or
adc
leave
aas
jmp
lock
mov
insb
lahf
mov
pop
mov
es
fdivrl
or
adc
fnstcw
fldl
ss
add
mov
add
cwtl
das
pusha
add
xor
or
push
cmp
popa
roll
add
test
scas
jbe
inc
sub
jge
push
jmp
fnstcw
rolb
mov
mov
loope
mov
add
mov
fiaddl
divl
test
jg
cmp
stos
or
test
add
xchg
aaa
rorl
loope
lods
cmc
enter
xchg
xor
in
dec
sub
mov
jl
js
and
jmp
xchg
add
mov
push
int
add
cmpsb
stos
push
sub
add
push
cs
add
add
xchg
adc
pop
inc
mov
add
sbb
sti
adc
and
add
inc
mov
rcrl
dec
and
out
push
add
mov
add
add
fdivr
imul
add
mov
xor
imul
xor
mov
sbb
jae
add
adc
mov
adc
or
dec
xor
leave
iret
je
add
add
mov
sti
jl
pushf
rcll
daa
and
mov
push
shrl
add
mov
add
mov
in
iret
mov
adc
outsb
xchg
icebp
add
mov
rolb
mov
rcl
je
dec
push
push
mov
jle
lret
xchg
nop
add
cmp
addb
jmp
sarl
cmpl
mov
pusha
add
mov
aaa
inc
add
mov
mov
or
sub
mov
scas
push
repnz
call
xchg
or
sar
jmp
mov
int
add
mov
je
mov
inc
push
cli
mov
dec
cltd
cld
inc
add
mov
leave
add
mov
fsubrl
and
adc
mov
repnz
int3
loope
bound
mov
mov
mov
xchg
sbb
mov
adc
mov
popa
dec
push
das
xorl
add
push
jmp
xchg
mov
xchg
push
xor
mov
adc
add
mov
cmc
mov
ss
push
loopne
mov
add
add
jb
mov
mov
mov
mov
ficomps
addb
mov
mov
data16
scas
lds
add
mov
icebp
clc
sbb
xor
ret
lock
out
and
imul
add
push
add
pop
dec
aaa
shll
lods
push
imull
icebp
shl
add
add
cmp
jmp
inc
add
add
dec
insl
ret
in
mov
add
adc
aam
js
xor
mov
imul
out
add
imul
mov
mov
movsb
lds
lea
pop
lcall
cltd
jo
mov
add
xchg
mov
aas
cld
cwtl
jae
inc
iret
add
je
cwtl
mov
mov
jmp
add
mov
fcmovb
out
push
push
add
aaa
mov
mov
pop
and
push
mov
mov
add
mov
cs
rolb
mov
add
ss
dec
sti
in
popa
adc
addr16
add
push
testb
mov
jno
pushf
mov
add
mov
andl
repnz
or
int
mov
stos
adc
add
mov
add
mov
mov
jno
imul
add
pop
cmp
or
sub
out
mov
in
sub
push
rcrl
add
sub
mov
add
mov
negb
ret
mov
xchg
xor
mov
mov
in
jno
arpl
add
jo
mov
xchg
addb
outsl
mov
mov
add
in
in
add
sahf
rolb
mov
mov
cmp
xchg
xchg
sahf
rolb
mov
addr16
mov
sahf
jno
push
add
cmp
mov
cmc
jb
mov
xchg
add
cmp
int3
sub
pop
repz
fstpl
mov
arpl
aam
mov
addb
imul
idiv
cmpsb
sub
add
ret
mov
sti
pop
mov
aaa
hlt
lods
sbb
jmp
mov
mov
pop
fs
xchg
pushf
xchg
add
push
mov
add
and
insb
cmp
mov
add
cmp
pop
or
insl
inc
push
add
dec
lods
jl
cmp
ret
xchg
aad
jbe
add
cwtl
insl
pop
loopne
mov
add
notl
inc
add
add
xchg
add
dec
mov
lret
arpl
repz
repz
mov
fwait
stos
rcrl
dec
lahf
pop
add
mov
add
mov
cli
test
jecxz
inc
add
outsb
pop
or
mov
xchg
jno
add
and
mov
mov
popa
and
mov
mov
imul
or
add
add
pop
push
add
fistps
add
jmp
mov
mov
mov
rolb
jbe
pop
jmp
addl
jl
cmp
shll
pushf
push
out
stc
sahf
cmp
pop
dec
into
popa
je
lock
mov
aaa
iret
jg
cltd
idivl
aad
aaa
inc
gs
mov
push
add
or
rcrl
add
jmp
jne
jmp
dec
lea
in
or
aaa
push
cwtl
imul
jecxz
or
test
jmp
add
mov
mov
add
ja
cmp
bound
mov
jbe
addb
dec
jns
addb
and
popa
xlat
inc
add
aas
adc
mov
push
cmp
add
mov
mov
jmp
dec
xchg
add
jnp
or
mov
cmp
add
sbb
or
pusha
add
pop
aam
add
cwtl
fs
cmp
jne
fisttpl
mov
mov
pop
in
out
jno
add
ds
dec
inc
cmp
jns
sub
pop
jno
scas
add
mov
movsb
push
add
mov
rcrl
cmp
lods
addr16
imul
das
jge
data16
mov
lret
into
push
adc
iret
inc
mov
mov
jmp
into
hlt
or
pop
fwait
outsb
leave
sbb
mov
sbb
enter
add
push
adc
mov
jle
in
inc
add
mov
add
cmpsb
cmp
add
push
pushf
lea
mov
push
out
clc
mov
lock
dec
cmp
into
and
jbe
dec
es
add
addb
mov
jnp
clc
test
push
int3
ds
adc
dec
rolb
mov
aam
cmp
pop
fisttpll
inc
or
addr16
stos
test
loop
mov
mov
lods
or
js
mov
and
add
cmp
dec
mov
jne
in
xor
mov
stc
fsubrl
clc
push
stos
bound
mov
rolb
mov
add
lea
inc
add
aaa
adc
test
sahf
inc
add
mov
and
mov
add
xor
and
out
xchg
jbe
loopne
mov
aas
jae
dec
cmpsl
sbbl
int3
test
mov
jl
pop
mov
add
out
pusha
add
add
test
mov
or
xor
mov
pop
ret
loopne
mov
scas
aaa
sbb
xchg
ljmp
add
add
add
sub
inc
rolb
mov
pop
or
add
sbb
fs
adc
mov
outsb
add
std
pop
jo
mov
add
fdivl
xorl
xor
add
add
sbb
pop
repnz
mov
mov
loop
mov
rcrl
add
dec
rcrl
cmp
pop
and
mov
das
cmpsb
lods
push
lret
xor
mov
add
loop
mov
mov
jae
push
pop
je
outsl
ljmp
mov
lods
in
mov
mov
ret
out
xor
enter
jae
inc
idivl
test
mov
xchg
je
dec
and
mov
mov
push
std
dec
jae
shr
lret
pop
aaa
cs
push
add
add
inc
xlat
orw
sub
dec
adc
mov
add
jp
gs
jb
mov
rolb
fbld
rolb
mov
loopne
mov
and
test
add
add
sub
or
dec
orl
add
mov
dec
jl
xchg
add
add
mov
out
add
mov
add
sbb
in
pushl
mov
mov
mov
jecxz
mov
add
add
lods
gs
mov
fstpt
push
xchg
mov
mov
lea
popa
call
mov
mov
ds
sarl
mov
mov
add
or
jb
mov
pop
stos
pop
dec
push
lea
mov
xchg
dec
mov
mov
movsb
inc
push
aad
and
mov
cmp
ds
in
inc
in
add
mov
jbe
cld
mov
mov
add
sbb
push
add
add
add
add
rcr
adc
hlt
sbb
pop
lea
add
jns
adcl
push
frstor
in
rolb
jle
cmp
rolb
mov
mov
add
mov
addr16
mov
inc
mov
push
add
jmp
add
lret
sbb
ss
add
aas
dec
je
mov
cmpsb
fstpl
push
add
mov
daa
add
jmp
into
sub
jne
stc
inc
dec
stos
push
dec
cmc
test
xchg
test
xor
mov
xor
mov
jge
push
movsb
mov
push
push
cmp
mov
sub
out
add
mov
add
sti
xchg
fsubl
add
fstl
pop
mov
cmp
enter
sub
mov
loope
insb
lds
add
add
mov
or
add
add
in
inc
add
xchg
xor
and
mov
add
mov
aad
sbb
mov
frstor
stc
js
dec
sub
dec
push
stc
fmuls
xchg
aad
popf
loop
mov
adc
mov
dec
std
pop
mov
jb
mov
add
pop
jnp
lock
mov
leave
xor
jle
sbb
fisubs
mov
leave
js
add
sbb
imul
dec
and
mov
jmp
inc
or
xor
mov
push
roll
mov
sub
inc
stos
sub
dec
and
sti
sbb
test
jp
inc
xlat
in
push
test
pop
sahf
ja
add
mov
add
adc
or
add
je
outsl
das
jge
or
inc
add
ljmp
add
sbb
sub
das
or
push
mov
add
data16
mov
adc
mov
pop
dec
jge
call
sbb
jns
sbb
or
push
aaa
push
jle
add
add
popf
inc
add
add
xchg
shrl
mov
add
pop
jae
and
pop
add
mov
adc
movsb
push
jmp
push
lock
push
add
add
imul
cs
ds
lock
and
aas
js
jge
cmpsb
dec
pop
fstp
jne
mov
cltd
mov
inc
cld
shll
jns
popa
addb
mov
mov
mov
stos
cli
push
xor
adc
fs
add
add
mov
mov
scas
or
mov
add
gs
lods
and
insl
addr16
add
or
insl
mov
or
add
gs
inc
add
stos
push
iret
arpl
add
xchg
outsl
push
dec
dec
ljmp
mov
sahf
sbb
mov
mov
jae
subl
mov
cmp
add
mov
mov
pop
push
push
outsb
mov
aaa
push
push
xchg
sti
ds
jns
iret
pop
add
mov
add
loopne
mov
mov
ds
adc
int
popf
and
insb
push
xchg
add
ret
fwait
mov
add
inc
scas
das
push
inc
adc
mov
repnz
jo
mov
add
jmp
nop
add
mov
add
sbb
push
in
xchg
ss
rolb
mov
fadds
popa
push
aas
arpl
fs
loopne
mov
add
lret
sub
cmp
outsl
ja
xor
mov
mov
repz
add
xlat
ljmp
push
in
lods
pop
pop
dec
test
add
mov
jae
nop
add
lods
mov
add
mulb
and
mov
ficomps
fcoml
insl
lock
loopne
mov
cwtl
mov
scas
rsm
mov
push
jnp
stc
xchg
cmpsl
jb
mov
rcr
rolb
fsts
cltd
sbb
mov
add
cli
mov
ret
xchg
push
xchg
dec
lret
idivb
push
roll
add
xor
mov
pushf
std
pusha
add
pop
xchg
ds
xchg
inc
sbb
loop
mov
mov
clc
push
and
mov
mov
mov
xlat
adc
mov
cmp
mov
mov
pop
int3
push
xchg
ja
add
mov
rolb
xor
decl
cmc
ljmp
mov
inc
rolb
mov
cwtl
lahf
pop
daa
and
mov
movsl
push
push
imul
lret
mov
push
cmp
add
inc
cmp
xchg
fs
xlat
call
inc
call
outsb
iret
imul
add
jl
lea
je
mov
lret
mov
ds
inc
xchg
add
add
xchg
push
adc
inc
add
int
and
mov
popa
rolb
mov
mov
mov
add
fstpl
mov
lret
mov
or
push
push
in
not
and
mov
fwait
jne
movaps
or
in
mov
add
mov
xor
mov
mov
mov
jl
data16
shll
lret
mov
mov
out
jbe
test
and
popf
stos
xchg
push
addb
mov
jbe
mov
movsl
push
inc
add
mov
lods
jnp
mov
shrl
add
or
punpckhwd
cmp
mov
cmp
mov
outsb
and
pop
or
mov
rorl
hlt
movq
or
pop
outsb
xor
mov
xchg
xchg
mov
mov
mov
enter
jecxz
add
mov
test
sub
add
aam
add
add
jbe
mov
add
mov
add
jg
sbb
jmp
or
pop
imul
je
push
cli
mov
xchg
ds
gs
xor
add
inc
sub
inc
add
mov
and
push
repnz
outsb
lcall
mov
push
imul
mov
cmpsb
hlt
pusha
add
out
push
and
in
inc
xchg
or
mov
and
cmc
rolb
mov
addb
mov
imul
inc
out
cmp
fwait
add
mov
xchg
add
pop
dec
les
cwtl
push
sti
in
sub
add
jnp
stc
testl
cmp
add
cmp
in
mov
jmp
int3
cmp
mov
and
add
inc
xor
cltd
jecxz
int
rolb
cmpl
adc
pop
and
mov
push
add
add
test
loope
xchg
add
add
js
rolb
outsl
sti
stc
dec
lret
xchg
or
sub
mov
mov
sub
push
fwait
pop
pop
dec
lods
jp
push
xchg
cmc
inc
out
pop
push
repz
mov
ret
pop
add
push
cmc
cltd
stc
inc
push
es
push
cmp
mov
add
icebp
ss
and
sahf
mov
mov
cmc
repnz
dec
mov
idivl
cmc
mov
mov
jno
idivb
xchg
mov
sub
repz
sub
sub
cmpsb
aas
cltd
fucom
cmp
add
jae
jl
mov
outsl
sbb
sub
fs
outsb
inc
nop
add
mull
fcmovu
out
add
jns
add
add
pop
je,pt
pop
int
pop
jmp
add
add
popf
je
add
aad
aaa
jo
mov
add
or
jne
xor
mov
out
mov
pop
sub
adc
or
test
ret
push
imul
insb
test
mov
je
dec
sti
mov
cmp
fisttps
mov
loop
mov
imull
pop
push
sahf
cmp
pushl
push
add
mov
outsl
pop
mov
mov
xchg
pusha
add
loopne
mov
rolb
dec
leave
outsb
dec
jecxz
mov
and
mov
push
push
lock
sbb
pminsw
add
push
pop
cld
pushw
stos
mov
or
addr16
xlat
fs
mov
js
notb
test
jae
lock
sub
pop
lret
jns
mov
or
std
xchg
sbb
mov
leave
xlat
ljmp
mov
inc
les
mov
mov
lods
mov
xchg
test
data16
mov
jp
xchg
pop
rolb
mov
xchg
sahf
call
add
inc
gs
lea
sbb
mov
std
rolb
mov
add
mov
dec
cmp
add
in
fstp
fadds
jecxz
in
rolb
fildll
popf
rolb
mov
add
jo
mov
in
in
sbb
cmp
mov
test
mov
roll
loopne
mov
add
dec
mov
inc
add
add
loopne
mov
and
mov
ja
in
cld
jb
mov
add
add
mov
and
xlat
xor
or
mov
jp
jp
xchg
roll
dec
sbbl
in
cmp
cmp
stos
jb
mov
add
mov
stos
sbb
in
add
rcrl
or
push
add
fistps
mov
add
mov
sub
mov
out
scas
fwait
scas
jge
in
xor
mov
bound
mov
mov
jg
push
inc
add
movsl
loop
mov
movl
mov
mov
dec
push
dec
xlat
aas
or
ret
jl
jb
mov
jno
cmpsb
mov
pushl
lea
js
icebp
sbb
and
mov
mov
negl
pushf
mov
leave
dec
fwait
or
or
adc
mov
clc
adc
add
cmp
add
cmp
add
push
jmp
cmc
movsl
xor
addr16
cmc
movsl
push
mov
int3
mov
jns
int
push
add
xor
mov
mov
gs
add
xor
mov
imul
push
add
and
pop
xor
xor
loope
shll
mov
cmpsb
dec
test
lret
cmc
xchg
inc
popa
cmp
push
pop
inc
add
repz
inc
add
mov
mov
sbb
lret
sbb
add
mov
dec
mov
in
fwait
mov
imul
jmp
addb
sub
add
in
jg
aas
sbb
add
add
jb
mov
and
pop
outsl
imul
mov
pop
jno
xor
jecxz
stc
jno
push
add
enter
mov
push
cmp
fs
add
mov
ja
add
add
ljmp
pop
ret
popf
loop
mov
iret
jnp
add
and
jo
mov
loopne
mov
inc
mov
test
mov
add
dec
icebp
jg
mov
outsb
inc
in
in
cmp
add
ja
or
cmp
cmp
add
mov
and
push
pop
shr
add
pushf
mov
jae
into
icebp
fwait
repz
mov
cmpsb
sahf
pushf
lret
movsl
out
add
shll
addb
cld
push
add
mov
pop
in
icebp
xchg
inc
jg
add
jecxz
pop
ret
sahf
mov
mov
call
sub
mov
ss
jo
mov
mov
popf
sub
fldenv
mov
mov
lods
mov
sbb
add
cmp
cmp
pop
jecxz
xchg
mov
add
jp
sub
cmc
scas
divb
inc
add
out
add
dec
ljmp
push
add
in
xchg
push
xor
mov
jnp
inc
mov
shr
fdivrs
mov
jle
fldt
pop
cmpl
adc
mov
cs
sbb
and
mov
add
out
lret
sbb
jl
add
aaa
stc
cmc
data16
enter
fidivs
add
add
loopne
mov
add
pop
scas
jnp
sahf
jno
cltd
cltd
cmpl
fnstsw
cmpsb
sub
xor
mov
mov
mov
leave
dec
and
sahf
sbb
add
imul
sahf
fdivr
jns
push
add
imul
cmp
data16
mov
mov
mov
mov
mov
jl
aas
jns
arpl
dec
test
sbb
mov
add
mov
idivl
aad
jge
aad
mov
xchg
int3
sub
gs
push
into
icebp
mov
pop
inc
add
inc
popf
mov
mov
add
mov
loope
pop
push
clc
clc
je
add
out
lahf
hlt
test
mov
or
loope
xchg
lret
ss
add
mov
push
inc
add
xchg
inc
add
test
addr16
sbb
loopne
mov
push
add
ljmp
inc
adc
mov
mov
pop
sbb
xchg
fcmovnb
or
push
lds
dec
fmuls
out
mov
icebp
sbb
mov
mov
adc
add
loope
leave
sbb
add
add
les
shr
adc
add
dec
add
mov
add
dec
inc
in
and
cld
pop
mov
mov
xor
mov
insb
popf
addb
js
pop
jp
sub
push
and
mov
mov
mov
mov
add
out
add
push
add
or
test
adc
sbb
add
fldcw
sbb
add
mov
ret
dec
push
in
add
mov
mov
bound
mov
add
inc
add
or
cmp
add
push
xchg
sbb
cltd
mov
mov
add
in
and
push
cmp
pop
jmp
jnp
jle
mov
lret
jge
add
adc
mov
gs
mov
pop
mov
movb
enter
push
add
out
sbb
push
test
add
mov
mov
mov
sbb
daa
mov
scas
xchg
inc
aam
sub
leave
push
mov
mov
xor
mov
pop
negl
dec
rolb
mov
aad
add
std
jo
mov
ret
outsl
xor
add
fsts
and
test
scas
add
mov
dec
fdivrl
jge
mov
repz
mov
das
bswap
add
or
add
insb
xor
push
dec
push
test
inc
insl
dec
mov
filds
rolb
mov
nop
add
jbe
mov
xchg
push
add
sub
cmpsb
arpl
or
fiadds
add
mov
add
or
add
lret
pusha
add
test
xorl
mov
dec
inc
mov
mov
ret
pop
sbb
push
pop
adc
jne,pt
cmp
shrl
frstor
addb
les
jle
and
mov
mov
add
stos
leave
ret
cmp
fwait
out
xor
push
xlat
jbe
jns
cltd
test
add
sub
or
stos
push
out
push
add
dec
loop
mov
pop
jg
add
mov
add
pop
lret
jl
add
sbb
inc
add
bsf
scas
or
push
jle
add
add
jno
aam
dec
pop
rolb
mov
pop
dec
mov
test
inc
and
mov
out
jnp
cmp
inc
les
dec
popf
mov
add
jnp
add
mov
add
dec
pop
cmp
push
cmpsb
jg
mov
ljmp
clc
inc
add
int3
rcrl
in
cmp
mov
push
dec
adc
movl
lods
jle
je
add
out
in
pop
or
adc
aas
iret
push
add
jnp
push
push
mov
mov
mov
movsb
repz
outsb
push
lods
push
pop
push
xchg
add
pop
mov
mov
inc
cmpsl
jmp
add
xchg
cmpsl
aas
and
addr16
add
fwait
sbb
mov
adc
out
aad
xchg
adc
add
dec
pushf
pop
lea
push
dec
lods
lock
add
mov
icebp
ljmp
mov
negb
imul
mov
cmc
rolb
mov
addb
test
add
jbe
inc
add
cs
lahf
dec
dec
and
mov
call
dec
xchg
xlat
lcall
nop
add
out
push
fldt
dec
jne
shld
decl
dec
rolb
mov
xchg
jmp
sbb
mov
mov
sub
push
push
cmpsl
sub
fwait
mov
js
inc
sbb
rolb
mov
in
test
push
add
cmp
rolb
mov
dec
insl
mov
sbb
adc
mov
cltd
outsb
sbb
leave
sub
aaa
iret
lds
imul
in
outsb
std
xor
and
mov
jne
sub
add
add
add
pop
push
cmp
in
in
into
push
fwait
out
mov
mov
sbb
mov
in
adc
add
add
mov
mov
add
add
push
add
mov
rolb
mov
add
mov
cwtl
sub
xchg
bound
mov
sbb
test
sub
test
mov
leave
cs
ja
out
fs
cmp
jecxz
xchg
mov
add
push
add
or
das
mov
das
adc
mov
outsl
xchg
inc
imul
mov
leave
mov
jae
jge
sbb
addb
xor
add
inc
jge
rolb
mov
push
fsubl
xor
add
mov
pusha
add
add
add
cs
add
sbb
pop
push
movsl
jl
loopne
mov
pop
push
mov
mov
testb
rcll
add
pop
cmpsb
pop
mov
add
sahf
imul
add
mov
cmpsl
cmp
jbe
jecxz
fdivrl
inc
add
jl
push
sub
dec
mov
mov
add
add
cmpsl
jge
xchg
pop
test
add
add
fldl
add
lahf
mov
mov
push
cwtl
add
addr16
xchg
add
mov
outsb
rorl
movsb
sub
jo
mov
mov
mov
rorl
cmp
dec
dec
mov
cmpsb
pusha
add
push
pop
sub
lcall
in
push
mov
fisttpl
test
mov
aas
xchg
add
jle
into
xchg
adc
mov
enter
loopne
mov
push
add
mov
mov
mov
mov
xchg
pop
push
movsb
jg
mov
jno
xchg
int
movsl
xor
mov
cld
pushf
loopne
mov
push
pop
sbb
pusha
add
fxch
or
hlt
mov
lret
out
push
sub
mov
cmpsl
adc
mov
das
cmp
gs
mov
mov
dec
sbb
or
and
mov
arpl
lahf
loop
mov
pop
xor
sarl
add
or
sbb
xor
mov
dec
or
push
clc
dec
adc
int3
stc
insb
es
cltd
repnz
arpl
cmpsl
push
idivl
insb
push
add
sub
adc
inc
inc
mov
jno
js
push
nop
add
add
adc
mov
jg
or
and
outsl
or
pop
fdivrl
xorl
rolb
ss
dec
data16
mov
add
mov
rep
push
popf
fs
outsb
sbb
add
aam
add
push
fldenv
mov
add
test
movsl
lcall
aad
xchg
add
les
add
mulb
mov
mov
ret
sub
loop
mov
sti
and
lret
in
add
add
test
mov
add
xor
mov
das
loop
mov
cmp
mov
add
roll
movsl
mov
xor
mov
iret
adc
arpl
dec
or
cltd
outsl
addr16
jo
mov
adc
mov
add
jmp
bswap
outsb
fnsave
rolb
mov
cmpsl
out
sub
mov
sbb
rolb
in
mov
add
and
pop
in
push
add
repz
repnz
sbb
pop
adc
mov
clc
cld
mov
push
stos
cmp
add
push
lock
jae
std
push
ret
cmpsb
push
fdivs
xchg
ds
pop
cwtl
jge
add
repz
insb
push
cli
iret
cmpsb
cmpsl
fcmovu
mov
xchg
xor
adc
mov
fcmovnu
inc
lock
mov
pop
dec
jg
mov
imul
jne
rcrl
ret
sahf
and
add
mov
pop
popl
outsb
shll
add
sub
jecxz
adc
mov
pop
sbb
mov
mov
addb
add
mov
mov
int
dec
mov
fbld
dec
in
push
add
out
cmpsl
and
xor
jmp
push
jecxz
pusha
add
fidivrs
out
inc
xor
fmull
pop
sub
dec
dec
mov
mov
popa
std
fdivrs
or
repnz
add
arpl
pop
stc
incl
jns
imul
fcompl
roll
out
scas
jmp
jno
repz
add
js
in
cmpsb
xchg
lret
jmp
aam
add
aaa
inc
add
fldcw
xchg
int3
in
sbb
ja
lds
add
out
movaps
push
loope
scas
mov
mov
sbb
pop
jo
mov
add
mov
ss
mov
add
add
cmp
add
into
addl
jmp
mov
aaa
xchg
mov
mov
jo
mov
add
mov
mov
repnz
add
repnz
mov
add
cs
sahf
jns
or
ret
cmpsl
adc
mov
clc
sbb
hlt
fldt
outsl
xchg
in
add
ret
test
xor
mov
sub
sub
arpl
out
aad
or
mov
inc
push
add
inc
add
mov
mov
outsb
push
aas
jno
repnz
add
addb
outsb
dec
xchg
jg
ds
bound
mov
add
inc
add
lret
add
and
imul
lea
add
mov
insl
xor
add
mov
imull
add
sub
test
mov
ljmp
mov
movsl
or
test
ret
add
mov
dec
stos
arpl
stos
dec
sbb
es
pop
daa
das
mov
mov
mov
dec
jge
add
add
add
addl
cmc
mov
mov
mov
add
or
mov
outsl
inc
add
je
inc
stc
faddp
or
mov
call
xor
lea
sbb
out
xchg
jae
inc
add
leave
aad
dec
dec
ret
xchg
mov
mov
cmc
into
cwtl
daa
add
ds
xchg
imul
mov
nop
add
fmuls
add
mov
jb
mov
stc
addl
add
xlat
pop
add
out
out
dec
push
add
jbe
add
jb
mov
xor
ffree
mov
mov
mov
xchg
add
add
lods
lahf
out
repz
inc
lea
daa
lock
mov
xchg
or
cmpsl
dec
ss
jge
xor
sub
fwait
adc
mov
sub
add
mov
test
pusha
add
mov
jne
add
rolb
es
dec
push
insl
push
je
push
inc
pop
mov
insb
int3
mov
mov
mov
add
bound
mov
add
jp
out
xor
mov
sub
jle
int3
inc
add
fadds
add
mov
or
rcl
les
push
rolb
mov
jb
mov
out
push
jmp
or
mov
mov
movsl
jno
inc
add
sbb
imul
jb
mov
int3
adc
mov
pusha
add
adcl
mov
mov
repz
test
add
sbb
inc
jno
or
enter
xor
mov
cmpsb
push
cmpsl
lods
pop
loopne
mov
rolb
mov
push
bound
mov
sbb
adc
xor
mov
xor
loopne
mov
scas
add
js
mov
or
xchg
add
add
sbb
or
stos
push
fmull
jmp
iret
xorl
insb
or
add
rolb
popa
movsl
jle
add
jns
add
inc
push
mov
add
in
or
pop
fstpl
movsb
scas
shrl
add
dec
xchg
cmp
push
add
mov
jno
xchg
sarl
sub
adc
mov
sbb
sbb
gs
sbb
pop
mov
sub
arpl
jmp
gs
and
mov
mov
mov
std
xchg
mov
mov
stc
pop
xlat
lcall
mov
mov
out
jb
mov
fwait
shrl
adc
mov
nop
add
xchg
lcall
add
sub
add
or
aas
xlat
push
std
dec
push
push
push
add
mov
je
pop
out
leave
pop
pop
cmp
sti
or
and
mov
pusha
add
xlat
stos
xor
aas
inc
and
mov
add
pushf
pop
dec
jno
pop
dec
fldl
xor
je
lret
stos
xchg
popf
dec
iret
jns
and
mov
inc
pop
ds
inc
add
lods
jl
clc
lds
les
xchg
push
mov
add
add
vmwrite
inc
push
stos
jle
add
add
mov
add
cmp
inc
add
rolb
jb
mov
pop
dec
pop
mov
daa
add
add
sub
add
pop
xor
sub
mov
fwait
mov
xor
mov
add
add
ss
add
cmp
mov
loopne
mov
rolb
mov
add
cmc
jge
add
push
jmp
push
addr16
dec
into
mov
sub
add
sbb
inc
inc
add
xor
add
sub
and
mov
ss
or
test
daa
inc
sub
sub
imul
mov
mov
rolb
pusha
add
cmc
gs
push
ret
test
add
cld
adc
nop
add
push
add
dec
movsl
and
mov
movsl
addb
or
add
push
dec
addb
in
fcompl
push
or
mov
mull
outsb
test
enter
pop
jp
push
cmp
mov
add
add
lret
iret
iret
imul
fdiv
sti
rolb
mov
idivl
push
lret
add
jno
dec
xorl
pusha
add
aad
mov
xor
mov
inc
add
jp
stos
dec
addr16
pop
inc
inc
in
mov
xlat
fcmovnu
dec
mov
sub
mov
mov
add
cmp
push
cmp
aad
add
jecxz
sbb
add
mov
adc
add
mov
xchg
in
cmp
add
xchg
cmc
inc
xor
pop
scas
xchg
mov
mov
dec
fbld
inc
fs
and
xor
inc
add
dec
inc
add
sti
push
add
ljmp
jae
imulb
das
jle
xlat
xchg
adc
mov
test
mov
cmp
leave
fwait
lea
mov
add
lock
lahf
inc
add
push
add
cmp
cmc
mov
mov
mov
cwtl
mov
int
hlt
or
or
mov
xchg
stc
mull
mov
add
mov
jecxz
idivb
loope
enter
outsb
inc
ret
repnz
rcll
out
push
mov
enter
jge
divl
adc
pop
mov
mov
nop
add
lcall
jne
clc
adc
jl
sub
rolb
mov
jg
or
xor
adc
mov
mov
add
fnclex
add
mov
add
inc
cmpsb
icebp
push
js
push
dec
test
add
jne
adc
cmp
cmp
test
fdivs
xchg
add
scas
mov
add
cmpl
push
addr16
insb
jb
bound
mov
add
inc
add
dec
sub
call
adc
mov
test
add
inc
ljmp
bound
mov
push
jge
cmc
push
faddl
leave
bound
mov
pop
dec
sub
es
pop
minps
addb
es
repnz
add
inc
popa
and
add
jmp
pop
sarl
add
fdivr
pop
out
sub
xchg
mov
nop
add
hlt
sbb
nop
add
add
add
loopne
mov
pop
in
out
pop
xor
add
add
dec
push
add
jns
add
rcll
pop
data16
mov
mov
das
ja
xchg
pop
sbb
push
pop
or
jbe
xor
mov
mov
lret
shr
cs
lahf
mov
push
in
popf
mov
ds
lahf
push
cmp
xchg
movsb
test
or
jg
iret
or
cmpsl
pop
inc
std
pop
inc
je
ja,pt
add
call
add
fisttpll
mov
add
jno
xchg
jae
inc
add
mov
imul
std
stos
and
inc
dec
cmp
sbb
std
mov
add
daa
jmp
adc
aas
notl
sub
lcall
pslld
mov
cmp
and
mov
pop
jl
ljmp
fists
adc
sahf
inc
addb
test
sub
push
stos
pop
mov
mov
inc
lret
mov
push
xchg
inc
xor
xchg
in
adc
test
lds
adc
jnp
arpl
cmp
cmp
add
push
xor
add
stc
hlt
mov
mov
xchg
xchg
mov
mov
dec
shll
and
lock
sub
mov
mov
negl
sub
push
add
cli
scas
dec
stos
xchg
sub
mov
add
mov
sbb
add
push
popa
imul
mov
lret
adc
mov
in
jl
jecxz
mov
adc
mov
jb
mov
mov
outsl
pusha
add
add
add
mov
xchg
popf
and
mov
add
inc
add
or
push
mov
jne
rolb
mov
mov
mov
push
and
mov
add
enter
pusha
add
ss
sub
ds
lret
mov
loopne
mov
adc
nop
add
mov
mov
out
mov
or
out
inc
add
and
jle
xchg
cmp
xchg
test
jns
rolb
mov
jne
ss
inc
or
jbe
hlt
arpl
push
cwtl
xor
cs
add
mov
test
mov
cmp
mov
insl
int
leave
cmp
scas
rolb
sbb
mov
mov
das
into
lret
add
jae
cmp
data16
or
and
mov
ret
sbb
sahf
inc
push
xor
mov
jae
test
cmpsb
aas
mov
cmpsl
ret
addb
push
in
add
cmc
lds
jb
mov
mov
int
pop
popa
cwtl
mov
ret
mov
mov
mov
mov
mov
iret
aad
add
mov
dec
pop
rolb
mov
nop
add
dec
jnp
add
jle
xor
mov
imul
dec
je
add
leave
or
mov
push
add
jnp
sub
cmp
jmp
repz
add
xor
mov
adc
xor
add
icebp
aaa
push
leave
imul
scas
addb
adc
mov
ja
xchg
stos
mov
or
js
inc
add
push
push
add
add
or
mov
das
mov
mov
add
scas
adc
lds
sub
sbb
xchg
int
jae
push
les
fiadds
add
mov
aas
icebp
push
xor
gs
or
inc
add
mov
add
mov
mov
mov
mov
sbb
ss
out
xchg
jle
sahf
adc
fldcw
push
stos
stos
out
addb
popf
xchg
mov
sub
je
rolb
push
data16
jp
sbb
jp
xor
mov
dec
inc
add
cmp
test
inc
cmp
mov
ret
stos
jge
lea
pop
dec
lcall
mov
fs
mov
inc
popa
jl
fs
push
add
push
inc
add
mov
xor
mov
add
in
push
adc
mov
mov
fisttpll
adc
jns
xlat
dec
dec
add
ret
les
cld
pop
inc
mov
and
stos
gs
popa
push
add
mov
dec
mov
xor
mov
movsl
pop
adc
mov
adc
inc
add
mov
add
mov
mov
icebp
xchg
mov
ss
dec
cmc
adc
cs
mov
dec
sbb
add
outsb
xchg
in
pusha
add
sbb
mov
or
inc
add
xor
leave
ret
aas
decl
add
jp
xor
push
xor
add
mov
ja
sahf
test
adc
adc
mov
mov
add
insb
fnop
add
lret
inc
jno
add
dec
dec
sahf
movsl
movsl
stc
aad
dec
aad
inc
sub
adcl
mov
in
pushf
loopne
mov
mov
xchg
jp
pop
mov
adc
jns
add
fisubl
xchg
je
mov
push
or
out
mov
pop
shl
paddsw
repz
mov
add
and
cli
outsl
xor
int3
outsl
adc
jns
pop
xor
jg
push
or
rolb
mov
leave
subl
mov
nop
add
out
add
test
rolb
mov
push
push
add
loop
mov
xlat
test
dec
dec
and
mov
imul
mov
dec
mov
mov
loope
dec
xchg
repnz
mov
insl
hlt
mov
or
xchg
pop
mov
inc
sbb
xor
outsl
sahf
or
insw
inc
lcall
jnp
or
rolb
dec
xor
xchg
fcoms
inc
imulb
pop
dec
xchg
jno
pop
pop
or
fdivrl
pop
cltd
sub
pop
rolb
mov
in
decb
add
test
sbb
mov
repnz
pusha
add
mov
sub
lahf
push
cmpsl
dec
pop
cltd
call
aaa
and
fldt
insl
and
mov
push
xor
mov
lods
lcall
enter
out
xor
arpl
and
daa
jns
repz
xlat
insl
sbb
add
adc
lods
cmpsl
mov
inc
out
inc
mov
dec
cltd
xor
aaa
ffreep
sbb
jne
lret
add
add
or
mov
outsb
dec
mov
jg
fisubrs
pushl
adc
adc
mov
push
pop
mov
push
add
out
adc
mov
adc
aaa
outsl
loope
data16
roll
jae
lahf
imul
leave
mov
mov
mov
pushf
sub
cltd
xor
jnp
test
cmp
cmc
repnz
mov
hlt
mov
mov
aad
pop
dec
fwait
sbb
ror
dec
gs
iret
mov
add
mov
mov
and
fisttps
xchg
int3
adc
sbb
pop
xor
sbb
mov
add
mov
mov
mov
pushf
xor
mov
inc
cmpsb
daa
sbb
clc
pop
cld
imul
cli
icebp
sbb
addr16
mov
es
cmp
outsb
lods
xlat
and
addb
adc
mov
lret
dec
and
sbb
lea
add
movsl
push
jae
push
mov
fnstsw
mov
push
pop
enter
xlat
rolb
mov
pop
and
mov
push
lock
fiadds
mov
jp
addr16
mov
rcrl
mov
add
mov
push
add
pop
cmpsl
jo
mov
testb
cmp
mov
xchg
cltd
cmp
push
sbb
leave
push
add
mov
or
fisubrl
jno
addb
sbb
add
pushf
xchg
es
loop
mov
sub
lea
adc
mov
fucomi
adc
sub
ja
jno
fstpl
push
add
stc
adc
scas
scas
ds
test
add
jmp
dec
xor
mov
scas
pop
je
adc
in
imulb
mov
jne
aas
push
in
dec
insb
pop
int
call
mov
cmp
aas
in
add
xchg
inc
outsb
cmpsb
mov
jns
push
add
mov
push
and
pusha
add
xchg
sub
mov
cld
gs
and
add
daa
lret
cmp
xor
mov
add
dec
bound
mov
add
mov
sub
in
mov
fcmovnbe
cmpsl
test
add
xor
mov
xor
mov
enter
out
iret
rolb
mov
shrl
push
push
add
mov
push
add
pop
add
mov
movsb
scas
mov
mov
pusha
add
out
aad
mov
add
add
scas
in
arpl
sbbl
or
add
jbe
mov
loope
sbb
cmp
add
mov
mov
imul
or
add
push
loopne
mov
fxch
jae
push
and
jle
fildll
dec
addb
inc
scas
sbb
je
dec
movsb
xchg
rorl
leave
adc
add
mov
les
mov
xchg
cmp
cltd
aaa
and
mov
dec
dec
add
cmp
mov
addb
repz
scas
imul
add
mov
mov
cltd
xchg
cmpsb
in
and
mov
test
sub
jne
icebp
sub
mov
lret
jmp
and
mov
cmp
sub
roll
inc
lret
in
bound
mov
add
ror
repz
out
add
mov
scas
out
je
iret
aad
mov
jne
add
mov
fs
dec
fs
ret
inc
mov
test
add
mov
xchg
pop
or
sub
das
add
mov
mov
jb
mov
mov
call
inc
push
mov
mov
in
sub
lret
in
xchg
loop
mov
add
inc
testb
je
rol
inc
add
repz
das
repz
mov
jecxz
inc
or
mov
mov
push
add
or
rolb
mov
ffreep
das
mov
mov
cmp
mov
pushf
pop
shll
imul
mov
into
jle
insb
and
lea
push
add
shll
mov
call
inc
xchg
add
aas
out
push
inc
add
add
adc
xor
mov
inc
or
xchg
jo
mov
sbb
test
add
push
movsl
cmpsb
sbb
adcl
fdivr
cld
mov
add
sbb
add
push
inc
add
mov
inc
add
lahf
out
pop
cmp
out
cmpsl
add
add
adc
mov
lcall
jns
jge
add
mov
shr
sbb
add
add
sub
ds
pop
mov
stc
push
in
ret
mov
add
inc
add
cmpsb
cmp
shrl
xchg
pop
popf
push
add
xor
mov
pop
mov
inc
movsb
xorl
mov
lods
xlat
nop
add
xchg
aaa
insb
jmp
adc
mov
out
push
mov
pop
and
mov
add
cltd
xor
ds
add
les
xchg
outsb
test
mov
xchg
into
or
jne
loopne
mov
mov
mov
mov
insb
adc
sbb
add
push
adc
outsb
fcomp
fmul
sbb
inc
mov
cs
jne
loope
pop
cld
xchg
mov
xchg
add
rolb
ja
add
xlat
pop
lods
sbb
fcomps
add
loop
mov
popf
xchg
adcl
jl
cmp
call
mov
cld
or
jb
mov
mov
in
inc
mov
jnp
paddw
movsb
mov
xor
mov
movsb
cwtl
lock
mov
and
lahf
adc
mov
cmp
jp
ss
stos
adc
addr16
sbb
cwtl
aam
add
mov
outsl
pop
out
sub
mov
int3
jno
mov
mov
fldl
push
cmp
leave
inc
jb
mov
jnp
add
int
mov
fidivs
pusha
add
test
cwtl
adc
add
dec
jns
xor
inc
mov
lods
in
loop
mov
in
inc
ret
sbb
add
add
mov
call
dec
adc
push
add
lcall
inc
ret
fsts
add
and
mov
xor
mov
add
stc
pop
jecxz
out
or
add
dec
or
pop
and
add
cmpsl
adcl
mov
addb
mov
mov
push
mov
js
jae
in
insl
push
add
out
fisubrl
cmc
pop
inc
imul
es
addb
test
add
mov
mov
inc
add
jecxz
and
mov
sarl
inc
cmpsl
sbb
sub
rolb
mov
add
out
lock
xor
mov
int3
imul
and
in
sbb
and
popa
push
enter
sysenter
rcrl
in
aam
loope
lret
and
mov
daa
ja
insl
inc
xor
in
add
sbb
cmpl
pushf
clc
lret
lea
mov
outsb
xchg
sbb
sub
mov
mov
add
adc
mov
mov
je
xor
mov
add
mov
mov
mov
cmp
jnp
add
inc
gs
add
mov
cwtl
popa
jecxz
test
sub
pop
add
xchg
add
aaa
insl
stc
loopne
mov
mov
mov
sbb
sub
add
jge
push
lcall
sbb
jae
dec
filds
iret
push
cmp
push
add
sub
cld
pop
fwait
data16
add
push
add
push
add
xchg
das
cmp
ss
xlat
addb
mov
out
cwtl
push
aad
dec
nop
add
inc
pop
popf
movsl
cmpl
jbe
adc
xchg
add
add
mov
add
mov
add
jge
add
rolb
lahf
inc
rolb
mov
add
fwait
jns
add
push
mov
repnz
add
mov
mov
add
mov
add
or
mov
loop
mov
stc
roll
and
mov
xchg
adc
sbb
inc
dec
dec
pop
inc
loop
mov
fstps
enter
jl
push
add
mov
sbb
jg
mov
mov
imul
cmc
ficomps
sahf
mov
add
mov
add
mov
mov
test
mov
xor
add
adcl
add
adc
mov
pushf
popf
into
xchg
mov
mov
add
jle
stos
inc
fimull
lds
add
push
pop
adc
mov
and
adc
fisttps
add
mov
mov
mov
add
mov
or
dec
lods
rolb
or
sub
pop
cmp
add
bound
mov
rcr
cwtl
clc
push
add
rolb
or
or
inc
inc
mov
nop
add
add
cs
movsl
push
mov
arpl
sub
cmp
push
enter
add
add
push
jecxz
xchg
icebp
mov
mov
fs
shrl
lods
rolb
mov
and
std
add
add
repnz
adc
lods
pop
daa
mov
add
popa
ja
xchg
int3
and
mov
jg
dec
mov
jo
mov
add
jnp
sub
test
push
sub
fnstcw
iret
nop
add
jns
movsl
or
jg
xor
mov
loopne
mov
add
sarl
add
scas
inc
jmp
les
lods
push
add
pusha
add
pop
push
add
dec
push
incl
stos
or
cmp
inc
add
and
mov
add
insl
xchg
rolb
mov
xor
mov
xor
mov
js
adc
and
add
mov
add
out
cwtl
in
sbb
or
data16
mov
add
mov
push
cwtl
add
cmp
xchg
stos
arpl
add
add
add
push
add
mov
push
add
movsl
gs
clc
pop
bound
mov
hlt
adc
pop
leave
popf
and
add
xor
add
sub
mov
loope
add
mov
test
das
ret
fistpll
jmp
mov
mov
mov
jp
icebp
push
push
pop
fdivrl
push
or
add
orl
sbb
popl
xchg
mov
mov
lods
dec
fisubrl
mov
inc
loop
mov
xchg
inc
pop
fdivrp
adc
mov
cwtl
cmp
mov
fdivr
xchg
add
add
add
jnp
lea
xchg
xor
mov
mov
daa
aad
hlt
loop
mov
add
mov
add
fwait
mov
xchg
sarl
or
std
sbb
add
test
je
inc
sub
push
sbbl
adc
mov
sbb
cld
imul
cwtl
jle
cmc
cltd
xor
mov
mov
mov
dec
jo
mov
add
sub
add
add
add
jle
cli
ljmp
add
pop
shl
ret
out
add
dec
incb
jp
lock
xor
test
mov
jno
sbb
jae
cwtl
in
mov
cmpsl
arpl
add
mov
add
push
push
in
bound
mov
out
js
and
pop
dec
sbb
out
pop
mov
insb
fisttpl
repnz
fcompl
icebp
cmp
lahf
bound
mov
dec
jne
or
scas
jns
scas
out
mov
mov
mov
and
movsl
mov
repz
add
jmp
cmpsl
dec
jnp
mov
aam
mov
add
mov
ds
out
std
out
test
push
add
das
pop
pop
punpckhwd
rolb
cmpl
inc
clc
mov
mov
lds
rolb
cmc
cmp
dec
xchg
push
scas
mov
data16
loop
mov
mov
add
icebp
dec
add
mov
dec
fwait
cmpsl
nop
add
mov
push
mov
sbb
xor
mov
pop
sub
pop
jo
mov
add
cmp
lods
add
sbb
mov
jmp
loopne
mov
xorl
out
pop
sahf
fsubrp
fsubp
sbb
cmpsl
jae
inc
inc
or
add
enter
mov
outsl
push
jg
add
mov
sbb
add
add
add
mov
add
lret
dec
out
xchg
imul
ljmp
mov
repz
xchg
mov
mov
mov
dec
and
mov
push
add
gs
cmp
mov
lea
pushf
xchg
adc
mov
pop
std
push
add
lret
jecxz
or
movsb
std
sub
add
arpl
add
pop
fcmovnbe
add
mov
and
fcmovu
mov
mov
enter
mov
push
inc
mov
mov
mov
add
dec
repz
add
jl
int
add
jno
neg
cmp
mov
fistpll
sbb
inc
lret
mov
test
push
add
cmp
push
in
lahf
jl
faddl
imul
sti
addr16
xor
push
jg
pop
mov
add
inc
add
mov
in
sub
add
add
mov
push
inc
addb
xor
pop
ljmp
movsl
repnz
movsb
dec
out
out
jmp
add
insb
pop
in
xlat
aaa
mov
sbb
pop
add
add
in
leave
rorl
adc
loop
mov
in
push
push
mov
mov
add
add
fstl
add
add
outsl
mulb
jmp
sbb
mov
pop
fdivs
repnz
enter
xor
xor
mov
add
call
pop
push
inc
int
fbstp
or
pop
fnstcw
add
pop
mov
mov
push
idivb
outsl
jne
dec
inc
cmp
jo
mov
pop
mov
pusha
add
fsts
test
add
mov
sub
aad
ljmp
rolb
and
mov
and
mov
mov
xor
mov
movsb
pop
dec
sbb
jecxz
add
mov
pop
xor
add
jno
pop
aad
push
add
mov
stos
adc
mov
add
adc
mov
jae
cmpsl
fimull
rolb
mov
fisubs
push
in
les
repnz
and
mov
sub
in
sbb
rolb
mov
push
fisttpll
jae
add
mov
stc
stos
sub
cs
iret
inc
sbb
mov
mov
add
xchg
jb
mov
adc
lods
and
mov
ss
fiadds
mov
aas
loope
xor
cmpsb
cmp
xor
mov
rorl
jge
add
add
xor
ss
and
inc
push
and
adc
mov
dec
enter
add
mov
inc
popa
gs
inc
pop
lea
scas
sub
cmp
mov
jb
mov
mov
pop
inc
fcom
add
mov
inc
add
sbb
inc
pop
jge
add
add
push
mov
xchg
mov
pop
inc
mov
pushf
inc
clc
les
push
sbb
or
stos
insb
dec
stc
movb
stc
push
add
add
pushf
jae
out
and
lock
mov
je
cli
in
fwait
pusha
add
fs
vmwrite
nop
add
add
or
add
mov
mov
jne
lock
push
add
stos
jge
cmp
pop
loopne
mov
add
cld
ret
sbb
mov
leave
cld
adc
sbb
sbb
fld
add
sub
addb
out
adc
sbb
add
sahf
pop
dec
sub
mov
add
cmp
outsb
shll
cmp
ds
sub
add
fildl
in
pop
daa
cli
addb
mov
mov
in
stos
fmuls
or
mov
mov
cmp
inc
lret
add
inc
jb
mov
cltd
or
repnz
xchg
ss
mov
clc
cwtl
cmpsb
sub
pop
dec
push
add
add
mov
insl
aad
cmp
add
pop
aad
push
add
pop
mov
mov
jno
cmp
loop,pn
mov
loopne
mov
in
loopne
mov
arpl
add
sbb
push
outsl
cmc
loope
inc
mov
mov
popf
cmp
mov
inc
add
and
pusha
add
cmp
dec
lods
js,pt
xor
add
xchg
mov
pop
sbb
push
mov
aas
clc
cmc
sub
out
sub
int3
and
repz
rolb
dec
inc
mov
dec
xlat
mov
aad
jg
jle
lods
stos
adc
jae
or
cmc
adc
add
mov
bound
mov
mov
sub
test
inc
mov
add
mov
sub
mov
testl
adc
dec
dec
push
inc
and
push
nop
add
lods
xchg
pop
js
inc
pusha
add
mov
mov
addb
xor
push
out
xchg
mov
ret
imul
add
dec
sub
sub
lock
push
ds
enter
dec
jl
das
push
movsl
xor
mov
mov
sub
dec
xor
addb
or
and
mov
lds
je
push
add
inc
adc
jmp
int3
jp
mov
mov
jo
mov
push
fsubr
xor
mov
dec
int
add
sbb
pop
sbb
fstpt
mov
mov
dec
push
inc
add
push
shl
lods
add
mov
jnp
loopne
mov
add
push
gs
mov
cli
xor
pop
mov
add
add
in
add
mov
mov
cmc
mov
pusha
add
add
jl
inc
lret
mov
xchg
hlt
inc
rolb
mov
fstp
or
add
negb
lret
or
pop
aam
or
jmp
lret
dec
or
inc
add
push
stos
mov
sbb
sahf
les
push
cmp
xchg
xchg
push
lds
mov
push
xchg
mov
xor
mov
addl
mov
les
add
in
mov
adc
pop
xlat
mov
arpl
inc
add
imul
fsubp
mov
ds
js
faddl
xchg
add
fiaddl
or
or
cltd
sbb
lods
push
fisttpll
outsb
add
xchg
jp
dec
pop
mov
pusha
add
addr16
add
add
push
dec
imul
mov
pop
adc
and
mov
mov
add
fsts
mov
sub
mov
xor
xor
mov
add
mov
ret
inc
add
mov
inc
add
adc
iret
stc
cmp
add
jl
and
mov
add
sub
fildll
add
xchg
popa
in
dec
aam
pop
stc
jg
leave
rolb
mov
and
mov
addb
adc
mov
rolb
mov
add
mov
inc
imul
lods
jp
scas
mov
sahf
pop
arpl
add
xor
jb
mov
add
pushf
rolb
mov
and
in
mov
sbb
fucomi
dec
push
pop
pop
push
pop
insb
sub
xor
xchg
add
ffreep
jae
pop
cmp
je
movsl
popa
sbb
mov
and
mov
rolb
jae
test
mov
add
add
pop
adc
imulb
fmulp
imul
ficomps
inc
push
xor
mov
pop
in
das
pop
arpl
xor
popf
cmpsb
xchg
pop
xchg
xchg
aad
mov
add
sti
or
adc
loopne
mov
add
mov
pop
mov
mov
xor
ja
xor
mov
pushf
jno
sbb
add
mov
xchg
add
in
xchg
adc
mov
addb
pop
jae
pop
addb
in
mov
mov
rolb
mov
inc
add
jnp
jnp
xchg
adc
int3
and
cmp
add
mov
daa
das
cwtl
adc
mov
mov
or
mov
enter
out
stc
cmp
fistpll
scas
dec
imul
push
add
add
mov
add
into
push
xlat
jne
jnp
scas
out
pop
out
jbe
push
add
mov
lds
arpl
mov
out
mov
movsb
hlt
push
xchg
xchg
or
mov
das
or
add
mov
jo
mov
mov
or
mov
add
pop
ja
jnp
cli
and
mov
rolb
mov
mov
stos
jne
xchg
scas
push
mov
jne
add
jecxz
inc
add
mov
pop
mov
dec
mov
mov
aaa
mov
adc
adc
cli
lret
lea
test
pop
and
xor
mov
mov
add
je
test
add
mov
xor
cltd
iret
jbe
and
add
add
mov
stos
cmp
cmpl
push
pop
dec
xor
mov
or
loopne
mov
loope
dec
pop
xchg
clc
mov
in
push
mov
fldenv
dec
sarl
jcxz
add
add
mov
add
mov
movsb
pushf
inc
cmp
imul
mov
addb
sbb
repnz
mov
daa
lods
js
mov
into
cld
fcmovnu
mov
mov
add
and
add
xchg
xchg
icebp
or
mov
test
push
fcmovnb
add
fs
cmp
scas
push
xchg
push
rcll
add
imul
arpl
pop
outsb
mov
pop
jb
mov
mov
mov
add
jns
mov
imull
pop
adc
jp
mov
aas
sbb
notb
mov
dec
pop
gs
popa
js
popa
and
adc
add
push
inc
add
mov
mov
jnp
push
add
mov
mov
icebp
push
add
add
clc
aaa
jnp
cltd
enter
in
pop
or
cmp
mov
outsb
jmp
sub
cmp
std
mov
mov
cltd
inc
sbb
addb
cmpl
test
mulb
dec
out
repz
ds
mov
jmp
push
push
movsl
daa
gs
add
jge
loop
mov
add
iret
lea
add
cld
sub
jp
hlt
call
mov
sahf
mov
mov
cmpps
aad
outsb
sub
add
add
pop
push
lcall
divb
pop
push
pop
inc
je
add
xchg
into
neg
das
imul
adc
mov
adc
mov
fwait
pop
rcrl
dec
imul
leave
loop
mov
jnp
add
or
mov
add
cmpl
adc
mov
pop
mov
sahf
out
rolb
mov
jecxz
in
mov
cmp
push
and
mov
add
jb
mov
test
stc
lret
and
mov
inc
sbb
loop
mov
negb
les
gs
movsl
test
cwtl
jp
lret
test
scas
lods
sbb
inc
stos
das
fidivrs
ja
jno
sub
scas
and
mov
pop
push
sub
movsl
cmp
xor
imul
icebp
or
lret
add
add
sbb
nop
add
jge
jge
push
into
out
adc
mov
and
add
hlt
aam
mov
lock
add
dec
lret
jbe
mov
rep
push
add
ret
stc
int3
mulb
add
clc
jb
mov
out
mov
adc
dec
mov
lock
sbbl
sub
add
xchg
add
add
pop
cmpsl
sahf
icebp
mov
cmpsb
outsb
stos
jb
mov
mov
push
push
pop
xor
in
pop
cmp
add
into
dec
dec
stos
enter
rolb
mov
addr16
mov
jp
mov
push
arpl
push
xor
mov
sbb
dec
repz
or
cltd
rolb
vmread
xor
mov
add
ds
enter
lock
stos
stc
test
popa
push
jecxz
lods
cmpsl
jae
cwtl
mov
adc
add
mov
push
dec
mov
aas
sub
sbb
and
sbbl
mov
mov
add
dec
mov
fimull
cltd
stos
xchg
add
xor
add
fs
and
pop
xchg
xchg
testb
cmp
arpl
inc
lcall
add
dec
or
and
mov
fsubr
sar
pop
cli
mov
mov
mov
add
loope
inc
jmp
loop
mov
add
mov
mov
mov
cmp
add
mov
lahf
jp
insb
mov
add
xor
mov
bound
mov
rorl
and
mov
add
sub
xor
add
rolb
mov
mov
mov
or
test
push
outsb
xchg
std
aaa
fwait
cmc
pop
cmp
add
mov
js
pop
xchg
add
call
repz
or
add
add
xchg
not
mov
or
adc
mov
add
and
adc
jae
mov
out
int
lds
xor
pop
jecxz
rolb
into
push
lcall
add
jnp
dec
xchg
fs
daa
leave
sub
mov
inc
adc
mov
rolb
mov
add
fdivp
xor
push
dec
stos
pop
test
loope
out
hlt
test
dec
stc
xor
mov
xchg
xor
sti
sub
xchg
loop
mov
push
lods
push
mov
jo
mov
repz
mov
mov
jne
dec
mov
mov
mov
mov
roll
ljmp
mov
xchg
scas
lcall
jno
add
aam
mov
add
xchg
xchg
cmp
inc
mov
int3
or
sub
mov
rcl
add
cmpsl
or
push
lcall
mov
or
call
add
dec
push
add
add
outsl
jns
pop
sbb
push
outsl
sub
lods
cmp
add
cmp
aam
push
add
pop
inc
and
jp
mov
add
fisttps
jecxz
add
mov
add
mov
call
mov
mov
cmpsb
fbld
int
notb
icebp
movsb
andl
pop
push
lret
xor
call
add
mov
data16
and
mov
outsl
or
cld
jae
add
mov
aad
lods
mov
xlat
rolb
mov
and
add
mov
cmpl
scas
rolb
mov
jl
cmc
gs
aas
xchg
add
add
dec
test
cmp
jmp
jae
aad
out
xchg
aam
pop
xor
add
add
add
decl
rolb
insb
out
bound
mov
add
mov
insb
stc
popa
aam
jbe
int3
ret
in
sbb
jns
sub
add
mov
add
inc
jmp
addr16
sub
aas
sbb
push
add
add
sub
push
add
lds
dec
insl
repz
add
cmpl
jae
out
fsubl
lahf
ss
mov
mov
jecxz
repz
pop
mov
mov
pop
inc
mov
jbe
scas
shll
mov
add
add
mov
inc
aaa
arpl
lret
inc
add
es
xor
cmp
push
in
or
pop
cld
ficomps
inc
insl
cwtl
aas
xchg
dec
cld
fucomp
and
mov
and
mov
and
mov
sub
push
add
arpl
mov
xchg
sub
mov
add
scas
outsb
sbb
scas
push
cmp
cmpsl
incb
sub
xchg
gs
or
add
add
cmpsb
push
lea
mov
add
pop
cmp
mov
adc
push
adc
pusha
add
mov
add
add
add
add
mov
add
add
mov
cmpsb
rcrl
push
add
mov
and
mov
fcomip
cli
add
mov
add
sub
add
mov
push
add
add
mov
test
push
jle
das
in
xchg
jl
mov
xchg
mov
cmp
xchg
cwtl
pop
leave
inc
xor
mov
shrl
pop
xchg
add
xor
je
or
add
addr16
sub
add
mov
std
fstps
mov
in
add
mov
mov
sub
mov
mov
sub
gs
add
add
push
add
scas
cmp
cli
mov
lret
roll
in
add
ljmp
sbb
cli
dec
test
fimull
movsl
fwait
ss
ljmp
aas
jge
ljmp
inc
add
jp
mov
add
addr16
mov
xchg
xor
xor
mov
ret
stc
jns
repnz
add
fcompl
popa
push
inc
add
bound
mov
icebp
jno
int
push
mov
add
mov
mov
inc
ljmp
sub
mov
add
and
sahf
hlt
int3
imul
add
jnp
mov
pop
insb
testl
dec
xor
mov
pop
jnp
add
cmc
xor
mov
dec
jae
sub
decb
dec
rorl
pusha
add
mov
mov
decl
loop
mov
mov
cmpsb
int3
not
add
mov
jne
add
push
push
fnstenv
add
mov
sub
mov
pop
or
xchg
jle
cmp
mov
rcrl
mov
add
enter
mov
mov
add
mov
mov
insb
fnstcw
or
addr16
in
lret
pop
iret
add
out
add
add
