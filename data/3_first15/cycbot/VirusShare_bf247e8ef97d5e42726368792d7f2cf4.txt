data16
rorl
dec
xlat
xchg
mov
leave
mov
mov
jge
popf
insl
in
pop
movsb
add
sub
inc
test
sti
sub
les
xor
xchg
add
xor
addb
add
pop
mov
cld
xor
add
sbb
inc
iret
mov
sub
jg
dec
out
out
out
and
enter
sub
sub
hlt
add
jns
adc
add
mov
add
mov
xchg
rcll
push
inc
mov
dec
cmpsl
fwait
repnz
mov
xchg
inc
ret
pusha
add
jb
cmp
rolb
insl
inc
lds
add
adc
add
ret
xchg
inc
add
xchg
scas
adc
add
add
icebp
fists
cli
mov
cmp
push
xor
loope
add
test
imul
add
add
out
add
add
fcoms
add
xlat
mov
iret
jno
subl
rorl
add
add
add
mov
add
jmp
les
xchg
or
add
mov
mov
nop
add
cltd
dec
pop
repnz
and
mov
mov
mov
add
mov
inc
add
shrl
add
add
fildl
add
mov
sub
mov
add
xor
push
adc
dec
inc
scas
fcomp
ficoml
jmp
push
add
lds
mov
jo
mov
cmp
cmpsl
xchg
imull
adc
jo
stc
ror
xor
test
pushf
jne
testb
pop
rolb
cmpsb
add
add
mov
mov
cwtl
push
add
lods
lret
mov
shl
mov
stc
add
in
test
add
xor
mov
scas
push
jmp
sbb
push
scas
adcl
push
pop
inc
xlat
push
add
dec
mov
xchg
testb
mov
cmc
mov
cmp
or
lods
jle
mov
clc
xchg
add
call
jmp
add
loopne
out
pop
xchg
fstpt
add
mov
out
bound
mov
add
mov
sub
pop
loope
nop
add
inc
xchg
add
daa
clc
in
scas
dec
xchg
ja
add
add
jecxz
pop
mov
push
add
pop
xchg
fldenv
sub
sbb
or
add
xor
daa
xchg
and
mov
add
aad
add
test
bound
mov
leave
sti
rcll
add
movb
into
xchg
xchg
bound
mov
mov
mov
or
push
add
mov
add
in
pushf
shll
sub
add
add
testb
add
or
add
pop
out
das
sbb
mov
add
add
add
mov
lret
xor
push
add
add
or
mov
test
add
addb
push
add
cmp
add
or
popa
jge
add
mov
add
add
movb
add
mov
adc
je
jns
lcall
add
mov
popa
adc
pop
mov
jbe
hlt
add
push
sbb
add
mov
and
mov
jmp
add
add
inc
add
shrl
andps
stos
inc
add
mov
add
add
fistl
jne
fcoms
into
jge
add
pop
xchg
add
mov
cs
and
mov
outsl
pop
fistps
add
pop
xor
leave
mov
cmp
push
outsl
pusha
add
adc
push
jp
xlat
adc
out
sub
dec
mov
jbe
rolb
icebp
lahf
in
addb
cltd
inc
inc
add
mov
sub
cmc
data16
push
add
outsb
stos
jecxz
mov
in
fnstsw
ror
adc
insl
mov
add
pop
insb
mov
sbb
push
xlat
test
fcmovb
xor
fidivs
mov
jmp
iret
cld
addb
push
add
hlt
add
lret
and
ret
lds
movsb
add
out
popa
pop
test
add
sahf
mov
in
cli
xor
add
mov
subl
and
pop
push
add
add
in
xlat
inc
add
mov
shll
ret
add
in
push
lret
out
push
fisttps
mov
and
sbb
jp
rolb
add
jns
sti
les
pop
and
jo
push
add
jae
lods
setg
insb
js
mov
adc
std
addb
add
sbb
add
mov
adc
add
pop
adc
std
sbb
testb
add
mov
pop
pop
xor
add
cli
sti
or
test
add
mov
mov
add
lock
ret
out
lds
mov
mov
dec
xchg
add
add
cmpsl
lds
mov
add
cmp
add
sub
add
sub
xchg
leave
outsl
faddl
add
ds
arpl
jmp
aaa
loopne
sub
cmc
xchg
push
add
inc
add
int3
xchg
sahf
mov
lea
or
les
lea
push
mov
in
es
aad
scas
outsl
push
push
mov
mov
je
leave
add
add
jae
add
sub
sbb
mov
incb
add
add
lret
pushf
jo
cwtl
fstl
cli
test
les
pop
cmp
add
cmpsl
mov
add
test
mov
gs
add
sbb
add
xorl
test
dec
adc
and
add
push
add
add
mov
cmpsb
add
push
imul
sarl
push
add
add
adc
loop
sbb
pop
aam
popa
jae
add
xor
add
sbb
add
add
or
fsubl
add
aam
fsub
mov
push
sti
and
jl
addb
int
lahf
xor
addb
stos
pop
rolb
popf
sti
scas
xchg
add
cmp
sti
add
mov
pop
sbb
jb
xchg
add
push
add
and
add
pushf
jmp
xor
pop
cmp
mov
jnp
cmpsl
mov
add
sti
cmpsl
sahf
cwtl
adc
shl
add
add
mov
inc
add
arpl
cmp
hlt
add
jne
or
les
movsb
add
dec
pop
scas
rcrl
sahf
mov
mov
push
add
mov
hlt
add
xlat
sub
mov
sahf
popf
add
mov
add
xchg
add
loope
insb
xor
mov
bound
mov
add
or
lods
sahf
xchg
daa
mov
add
bound
mov
aas
lret
out
sbb
jp
sbb
pop
sbb
pop
test
jb
cmpsb
add
pop
push
cmc
nop
add
rolb
sti
sahf
push
xchg
testl
hlt
add
add
add
cmp
mov
daa
xchg
lret
ror
data16
add
add
sarl
add
outsb
add
mov
pusha
add
test
sbb
mov
cmc
pop
fsubs
add
lods
push
mov
imul
adc
adc
pushl
add
add
js
dec
pop
or
add
lret
mov
in
rolb
xor
mov
add
add
addb
adc
mov
jb
mov
outsb
into
mov
jo
popf
xlat
dec
xor
pop
mov
test
push
add
fdivrs
push
mov
add
inc
sub
xchg
loopne
jg
lock
lods
dec
movsl
push
add
ljmp
aaa
rolb
rcr
jp
cltd
inc
and
or
add
add
add
add
add
in
pop
mov
add
pushf
mov
lods
adc
pop
nop
add
pop
rolb
add
pop
push
repnz
pusha
add
lahf
adcl
into
nop
add
adc
or
add
jae
das
insl
jmp
jp
push
add
pop
mov
fimuls
add
leave
mov
aam
ljmp
sahf
mov
add
pop
mov
out
xchg
mov
add
jo
mov
cwtl
pop
sub
ret
mov
out
mov
add
add
loope
push
addr16
testb
jp
add
jecxz
in
pop
push
xchg
rorl
les
adc
and
add
or
add
icebp
sbb
movsl
out
and
addb
add
add
mov
add
add
xchg
outsb
int
add
add
add
xchg
add
aam
movsb
add
flds
push
add
in
pop
mov
cmpsb
add
mov
mov
data16
mov
add
aad
jp
add
jle
add
loop
jbe
lock
loope
add
pop
test
mov
jbe
jle
sub
stos
jae
add
lods
adc
dec
mov
in
addb
add
mov
ds
nop
add
in
xor
data16
xchg
sahf
xchg
xor
adc
xor
dec
or
mov
call
push
add
ljmp
add
dec
ret
rorl
cld
jmp
add
rorl
in
push
add
push
inc
mov
sub
add
adc
lods
jmp
imul
sti
daa
add
call
je
leave
inc
leave
pop
cwtl
aad
mov
pop
and
je,pn
sub
add
add
and
mov
fstps
adc
popf
fdivrs
aad
or
repz
inc
add
std
adc
arpl
popf
mov
add
sbb
push
add
sbb
add
mov
adc
add
add
fsubp
inc
in
xchg
fiaddl
jno
add
lods
popa
cmpsl
jge
add
add
add
dec
pop
pop
cli
and
imul
nop
add
add
add
int3
and
add
push
add
mov
cmp
add
jg
int3
ds
in
fidivrs
aad
add
popa
cmp
sbb
add
mov
xor
add
addr16
mov
add
sbb
mov
add
mov
sbb
loop
add
mov
add
cs
arpl
dec
cmp
add
pusha
add
jle
int
push
lcall
add
add
push
fsubs
lock
adc
in
pusha
add
dec
xchg
xor
add
pushf
repz
addb
xchg
fwait
mov
add
test
mov
xchg
add
inc
add
sbb
add
adc
add
xchg
add
mov
int
add
bound
mov
rolb
movb
add
mov
add
mov
add
xchg
mov
add
push
iret
popa
fwait
ret
mov
sbb
inc
call
mov
mov
repz
mov
add
add
jg
shl
add
add
mov
fildl
sbb
pop
jecxz
iret
add
add
imul
add
mov
mov
add
xchg
aas
adc
inc
add
add
ret
xchg
mov
xor
jp
int3
mov
fmull
add
add
add
jb
iret
jg
stos
jg
cmpsb
add
test
mov
mov
in
into
out
mov
add
or
outsl
mov
add
sub
lds
mov
push
cwtl
sbb
in
cmp
and
cs
pop
cmp
cltd
pop
jge
fsubl
add
add
add
add
mov
insb
sbb
add
mov
or
leave
add
shll
insl
add
mov
js
cli
mov
sub
add
mov
add
mov
add
fwait
push
adc
dec
lock
mov
movb
pop
add
adc
xorl
mov
mov
js
xor
jbe
xor
inc
add
cmpsl
aam
cmp
xchg
add
add
call
add
mov
dec
in
nop
add
mov
mov
add
add
xchg
imul
lods
call
pop
mov
mov
add
mov
add
sub
lds
iret
nop
add
test
test
call
add
test
or
add
xchg
inc
out
or
cmc
cmp
add
popl
lahf
jbe
pop
lds
add
add
add
dec
fwait
popf
lods
mov
jns
aad
icebp
das
xlat
push
add
fdivrs
add
jbe
cltd
adc
sbb
fcmovbe
ja
push
add
add
mov
pop
mov
movsl
jne
scas
or
adc
add
mov
add
mov
add
jle
ret
testb
mov
mov
or
xlat
rolb
cmc
adc
fnstsw
inc
add
movsl
test
pop
adc
cmp
sti
fistps
sub
xlat
je
pop
outsl
inc
lahf
xor
jbe
cmpl
xor
add
aad
push
add
push
int
pusha
add
add
inc
add
pop
outsb
ja
mov
fucom
mov
add
add
push
mull
xor
pop
out
sub
mov
test
add
inc
xlat
add
mov
dec
jge
mov
fsubrl
aaa
insb
xchg
ljmp
aad
dec
dec
mov
cli
mov
push
sbbl
addr16
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
mov
push
pop
push
push
jmp
jmp
add
add
add
add
add
sub
sub
push
add
add
lret
rolb
test
out
xchg
add
add
sbb
pop
jnp
rolb
lods
pop
pop
ds
xor
ja
inc
loop
or
aad
dec
xchg
add
add
xor
aaa
movb
add
pop
dec
mov
ret
icebp
mov
push
add
cmp
pop
mov
mov
or
nop
add
sub
add
add
clc
test
mov
ljmp
mov
jmp
lea
cmp
mov
add
cmp
mov
add
adc
mov
add
loopne
jecxz
add
in
pop
jb
mov
pop
or
arpl
leave
and
add
ficoms
dec
cmp
add
pop
jl
push
add
mov
adc
repnz
addl
jae
mov
jecxz
mov
imul
cmpsb
add
push
add
dec
mov
fdivr
inc
jg
in
fs
add
cmp
sbb
stos
movsl
ds
lcall
mov
jae
add
inc
pop
pop
xor
mov
ror
xor
jno
add
add
and
jo
mov
pop
ja
add
add
das
loope
rcll
jo
jbe
xchg
mov
loop
adc
inc
test
imul
mov
stos
sub
jno
fs
cmp
mov
lret
mov
call
mov
mov
mov
lret
into
out
sub
push
test
pusha
add
mov
movsb
add
sbb
test
addb
mov
jne
lret
scas
sbb
addb
into
sbb
add
cmp
add
xchg
pushf
or
jns
addr16
pop
xor
addb
dec
sbb
push
add
call
add
fstps
loope
inc
add
addb
shrl
out
cli
in
xor
int3
jmp
dec
mov
adc
fstpt
ret
fidivrs
xor
iret
or
push
jecxz
pop
test
clc
test
push
add
jnp
add
add
add
xor
push
add
jb
jecxz
add
rcrl
loope
pop
fsubl
lods
imul
out
notl
outsl
jecxz
push
and
and
dec
fsubs
in
in
test
test
dec
in
jae
mov
js
add
push
cmc
sbb
repnz
inc
add
movsb
add
adc
in
ljmp
test
xchg
and
add
mov
add
pop
fbld
add
or
dec
mov
mov
add
icebp
cwtl
xchg
and
add
or
add
fstl
inc
ja
pusha
add
push
mov
mov
add
dec
adc
pop
sti
outsl
cld
jb
mov
mov
mov
push
add
mov
dec
and
jg
add
add
cmpsb
add
in
imul
add
add
scas
arpl
test
icebp
sub
pop
addb
stc
and
outsb
sub
test
jb
stos
dec
mov
lret
je
mov
or
das
mov
inc
in
adc
ss
data16
xor
cwtl
loopne
xor
mov
add
pop
js
int3
ficompl
push
add
je
mul
fmul
inc
add
mov
dec
inc
add
add
ret
sti
hlt
add
out
pop
mov
outsl
sbb
mov
sbb
mov
int3
cmp
push
add
in
jg
loop
fnstsw
add
mov
inc
add
mov
sub
mov
stc
mov
fsubs
xlat
add
sbb
add
addr16
mov
add
push
inc
add
mov
bound
mov
fdivs
jnp
int
das
cli
inc
add
xchg
sbb
add
pusha
add
inc
or
push
mov
xor
sub
add
mov
loope
add
sub
test
add
add
add
xchg
add
pusha
add
add
add
xor
sub
jmp
add
add
add
add
mov
add
add
call
sub
rolb
jne
add
fst
pop
jnp,pt
add
ret
pop
jnp
push
mov
add
or
or
add
add
jns
mov
inc
ret
imul
movsb
add
sbb
add
and
adc
in
push
popf
cmp
xchg
movsl
dec
mov
pop
loope
add
add
ljmp
add
enter
mov
dec
daa
add
add
add
dec
dec
int
jb
hlt
add
jmp
and
add
pop
push
sub
jmp
imul
mov
add
add
bound
mov
xchg
add
adcl
add
push
xor
push
gs
pmulhw
jecxz
pop
xchg
fnstcw
add
fdivs
enter
sub
pop
or
out
outsl
enter
aas
cmc
leave
inc
adc
sbb
shll
add
mov
fmull
add
arpl
movl
add
add
add
push
add
xor
xchg
adc
out
pop
sahf
add
and
int
add
xor
mov
add
add
out
mov
jle
sub
xchg
sub
mov
enter
mov
add
add
pushf
xchg
jle
and
add
inc
add
mov
sub
jno
testl
mov
jle
add
mov
addb
xor
fiaddl
add
loope
sahf
lods
movsb
add
sbb
mov
orl
pop
sarl
mov
lds
iret
pop
jecxz
add
popf
movb
add
sub
xchg
aas
out
out
push
add
mov
add
je
in
xor
cwtl
addb
and
pusha
add
add
cmc
iret
lock
fistps
int3
dec
jmp
out
inc
push
fdivrp
pushf
xor
cwtl
xchg
add
adc
int
out
ficoml
push
add
jp
mov
out
stos
inc
js
push
mov
mov
add
iret
adc
test
add
in
imul
div
add
ljmp
or
add
out
pop
mov
adc
lret
and
mov
xchg
in
xchg
add
aaa
dec
mov
inc
cmp
dec
ret
je
in
sub
add
lahf
adc
mov
add
xchg
pop
sbb
mov
dec
mov
repnz
add
add
push
outsl
add
mov
jl
add
fsubrs
rolb
add
ljmp
cld
outsb
fbstp
cwtl
push
add
mov
add
cmc
cmp
add
add
jp
add
test
dec
push
add
fwait
or
add
xor
add
call
xorl
add
mov
inc
jno
xchg
mov
inc
inc
aam
popf
loope
fstl
and
scas
xor
mov
add
sbb
xchg
push
add
add
jmp
add
add
xchg
mov
push
add
les
fsubr
jo
notl
xor
mov
push
add
push
sbb
stc
xor
jb
ljmp
sbb
add
addb
add
add
cs
into
jo
bound
mov
or
jge
add
add
or
inc
add
pop
sahf
test
add
add
add
std
lods
mov
in
sarl
sbb
adc
call
pushf
push
sub
popf
sbb
addb
sbb
xor
jge
push
sbb
dec
cmp
sti
inc
mov
adc
rorl
add
sbb
addr16
mov
add
add
xor
into
stc
adc
sub
add
movsb
add
mov
add
in
xor
repnz
stos
ret
mov
cmp
add
ja
arpl
pop
or
fdiv
add
add
add
mov
jbe
xor
push
sbbl
pop
arpl
xchg
add
lods
and
mov
je
das
ret
sbb
sbb
push
add
lock
mov
add
cmp
or
jge
pop
and
jmp
call
xchg
add
add
add
push
add
add
stos
mov
orl
mov
inc
add
add
dec
cld
mov
add
add
add
pop
addb
addb
std
fistl
insb
sahf
rorl
loop
cmpsl
loop
rorl
add
inc
xchg
sbb
addb
add
popf
dec
jle
dec
insl
xchg
sbb
pop
pop
les
adc
inc
inc
mov
inc
cmp
les
xchg
add
add
add
pushl
or
pusha
add
jmp
xor
add
jecxz
sub
rcr
mov
and
adc
xor
sbb
add
lods
jnp
add
insl
xor
cmpsl
inc
add
dec
ds
add
popa
mov
bound
mov
bound
mov
push
add
mov
mov
add
dec
push
add
sbb
fnsave
add
add
add
or
outsb
push
add
pop
clc
fwait
push
add
out
lds
sbb
mov
pop
testb
pushf
mov
mov
cwtl
mov
pop
nop
add
mov
mov
add
add
xchg
xchg
pop
add
cmp
mov
add
push
movsl
jnp
add
add
pushf
mov
jg
add
push
inc
arpl
frstor
jne
stc
into
push
popf
dec
xor
cld
outsl
arpl
enter
fwait
das
fs
insb
sub
test
in
jge
xchg
add
add
add
mov
dec
or
xor
stos
push
add
add
add
or
in
test
add
cmp
xchg
lods
and
bound
mov
or
push
xor
push
xchg
xor
insb
lcall
nop
add
add
or
add
dec
insl
and
cld
fists
or
add
mov
add
add
cmp
fisubrs
cwtl
push
lret
inc
add
sub
push
jae,pn
add
mov
dec
je
add
mov
ds
lahf
xor
jge
mov
add
inc
add
icebp
outsl
or
je
add
mov
or
arpl
xchg
jl
add
movb
mov
jp
das
cmp
add
mov
sub
mov
add
test
add
add
scas
andl
add
and
mov
fadds
add
insb
leave
mov
or
jmp
add
cmp
testl
incl
std
les
ja
add
add
mov
push
add
out
ret
dec
insb
pop
push
add
icebp
mov
cld
adc
push
mov
ljmp
cwtl
lahf
cld
imul
aaa
add
add
add
push
add
jbe
jno
add
rolb
and
loope
clc
push
ljmp
add
dec
test
push
cmp
rolb
add
xor
cmp
inc
jg
xor
cmc
jle
add
add
ds
pusha
add
add
iret
mov
out
push
push
mov
mov
or
jbe
mov
mov
rcll
aas
or
addb
cmp
push
add
add
push
add
enter
mov
add
data16
jp
fildl
jmp
popf
dec
fldt
add
mov
repz
add
cmp
sub
in
leave
pop
psubw
out
xchg
aaa
adc
dec
mov
add
add
or
add
mov
int
and
xor
in
ja
add
rolb
movb
inc
add
add
sub
mov
dec
cmpsl
inc
mov
insb
rep
xor
dec
inc
sbb
add
sub
xchg
cmp
imul
lret
stos
dec
popf
ja
add
push
bound
mov
jns
push
xchg
jnp
sbb
jle
pop
pop
dec
cltd
ficoml
ret
cs
imul
add
add
add
add
push
add
stos
pusha
add
mov
out
sbb
jge
add
add
and
mov
add
sub
mov
filds
dec
dec
push
add
add
ret
push
add
add
pushf
mov
pop
mov
add
add
xchg
add
xchg
out
sub
add
cmp
cmp
lods
ja
lods
cld
into
clc
int3
out
pop
mov
jg
add
add
mov
push
add
mov
cmp
pop
jbe
hlt
add
push
paddusw
add
inc
add
and
mov
outsl
push
into
jecxz
repz
and
jns
clc
mov
add
out
sbb
mov
push
add
add
in
lods
sub
dec
inc
add
inc
add
gs
inc
rorl
fisttpl
or
xchg
add
add
jno
pop
icebp
mov
cmp
aad
mov
and
daa
dec
in
fs
xlat
mov
imul
jp
int3
addr16
stos
mov
add
and
and
mov
ror
int
sub
add
add
movsb
add
jae
add
add
mov
fistpl
notl
add
add
sbb
ret
into
cmp
popa
std
or
rcll
int
ljmp
mov
xchg
pop
xchg
xlat
scas
push
add
add
into
and
add
mov
fsubrs
add
mov
mov
ljmp
test
hlt
add
add
mov
xchg
hlt
add
testb
mov
push
popa
jmp
icebp
jb
sbb
mov
xlat
xchg
frstor
add
cmpsl
mov
inc
add
mov
xlat
cmp
mov
add
add
hlt
add
cmp
add
push
push
xchg
imul
xchg
adc
nop
add
dec
das
enter
jno
add
repnz
xchg
push
add
or
lret
xor
mov
testb
test
add
cmp
in
dec
aas
test
cmpsl
sub
add
xchg
add
jp
sarl
or
loope
mov
addb
lods
jo
mov
mov
and
and
mov
pop
and
and
mov
into
mov
jmp
add
sub
add
add
cmp
into
mov
cmpsl
xor
add
jmp
es
sub
pop
mov
sub
add
dec
mov
inc
add
pop
push
mov
push
add
add
add
xchg
xchg
add
cmp
idivl
dec
adc
movb
adc
pop
daa
pusha
add
imull
lods
adc
lret
in
push
mov
div
push
xor
jecxz
or
add
add
repz
and
add
and
bound
mov
xchg
testb
cmpsb
add
adc
lret
out
xor
add
mov
mov
test
iret
or
sahf
mov
outsb
xor
push
sub
sahf
in
dec
fdivrs
mov
lret
sbb
movsb
add
add
add
pusha
add
ret
add
add
add
loop
pop
add
add
add
mov
xchg
add
adc
mov
add
mov
call
mov
add
imul
sbb
lret
pop
xor
mov
fwait
sbb
mov
dec
stos
mov
rcl
mov
inc
xlat
xor
sub
loopne
out
paddw
add
ret
xlat
in
mov
jae
add
lahf
aas
add
add
pop
cmc
addb
int3
rolb
xchg
push
pop
pop
or
bound
mov
add
mov
pop
jmp
mov
sub
mov
ret
in
pop
push
add
add
add
add
jb
das
scas
ja
add
out
cmp
push
add
jns
mov
test
push
inc
add
adc
add
fistps
insb
fwait
mov
adc
or
mov
out
aad
or
mov
bound
mov
add
add
add
push
add
add
scas
movsb
add
dec
or
mov
add
test
add
pusha
add
cs
push
add
inc
enter
sub
int3
sbb
jae
add
dec
jae
in
push
add
mov
mov
repz
in
dec
jmp
add
add
xlat
xlat
mov
scas
out
add
add
sub
add
add
add
add
nopl
lods
dec
ret
mov
mov
sti
xchg
add
add
movb
xchg
and
push
add
mov
add
adc
and
mov
pop
sti
popf
xchg
add
stos
pop
shrl
add
mov
add
in
jp
mov
mov
add
xlat
loop
test
push
add
mov
notl
imul
jo
jne
and
addl
push
icebp
ret
mov
or
pushf
addb
sbb
add
test
inc
sahf
pop
xchg
inc
add
push
add
shr
test
inc
add
fcom
add
bound
mov
movsb
add
xchg
mov
lock
sbb
mov
mov
dec
inc
in
mov
add
mov
add
add
mov
add
add
add
inc
add
insl
mov
dec
add
js
add
add
lret
jo
inc
bound
mov
add
jg
adcl
push
jno
xchg
add
or
aad
add
add
add
shl
dec
pop
sbb
push
icebp
outsb
jnp
enter
add
add
testl
cmpsl
lods
mov
pop
cld
rolb
add
sbb
push
cmp
das
cmp
xor
dec
rolb
sub
insb
cltd
push
add
loop
pushf
movsb
add
ljmp
mov
popf
outsl
push
addb
pop
into
js
test
addl
mov
aad
cmp
ret
inc
imul
add
cmc
cmp
dec
in
loope
out
xchg
inc
add
into
es
popl
cmp
scas
cs
cmpsb
add
repz
add
add
jnp
lea
add
add
add
fwait
addl
add
xor
rolb
mov
add
add
add
mov
cmp
psubq
inc
add
add
mov
jle
pusha
add
add
xchg
test
xor
xchg
or
push
mov
add
mov
add
xchg
lods
pop
mov
pop
ljmp
add
lea
mov
dec
pop
jae
out
adc
jp
pop
ja
xor
negl
lods
cmp
mov
sub
int
add
movsb
add
notl
mov
data16
sbb
add
test
push
add
xchg
cmp
cli
pop
imul
daa
cmp
add
data16
add
dec
aad
or
les
xchg
or
add
sti
out
sub
add
push
pushf
mov
inc
rolb
pop
shll
stc
or
js
jp
add
cs
jmp
add
in
push
add
add
add
test
mov
int
test
pusha
add
fcmovnb
add
adc
jnp
lds
add
fistpll
mov
cs
add
imul
jno
add
insl
addb
pop
push
ja
add
mov
outsl
movsb
add
mov
lahf
js
movl
ret
mov
movsl
and
mov
shrl
and
jl
fldenv
insl
std
mov
jmp
push
addb
aam
add
mov
add
mov
mov
or
movb
jecxz
test
add
mov
mov
jmp
ret
mov
inc
int
fwait
ret
sahf
add
xor
cmpsl
fsubr
push
add
dec
cmp
dec
jle
add
mov
mov
int
sar
lods
pop
mov
or
jecxz
sub
fadd
xchg
addr16
mov
scas
cltd
adc
in
mov
sub
push
add
add
add
lods
aas
dec
and
add
add
push
add
mov
push
add
cld
scas
xor
clc
sbb
idivl
loopne
dec
outsb
hlt
add
std
cmpsl
dec
dec
jo
adc
sahf
dec
push
mov
add
adc
mov
add
mov
add
add
mov
add
jb
mov
adc
add
and
mov
push
movsl
xor
mov
push
add
cmp
xchg
dec
adc
loopne
cmpl
lcall
mov
lods
dec
filds
add
adc
push
mov
add
lahf
popa
lret
inc
add
popf
or
sub
scas
addr16
ja
add
mov
or
add
add
pusha
add
mov
loop
jl
mov
cmpsb
add
mov
popf
aaa
push
add
test
adc
jmp
xchg
add
adc
mov
sbb
adc
mov
in
in
mov
das
add
ja
xor
pusha
add
out
xchg
sbb
add
pusha
add
daa
add
or
test
ja
add
cmpsb
add
sub
add
jno
or
sub
and
mov
dec
les
sbb
add
add
stos
cli
loop
mov
xor
addb
ljmp
jg
add
add
pop
cmp
jb
push
out
xor
jbe
sbb
add
aaa
mov
add
inc
adcl
mov
addb
and
lahf
fdivs
aas
in
call
add
sub
in
add
mov
cmpsb
add
add
cli
inc
jns
and
jecxz
add
pop
test
xchg
fdivr
loope
out
jnp
add
and
in
popa
mov
ljmp
mov
inc
dec
push
add
add
add
mov
mov
mov
mov
or
or
imul
rcrl
add
bound
mov
dec
out
adc
sbb
sub
adc
gs
add
and
jmp
pop
jp
int
aad
ljmp
add
inc
add
cmc
xchg
insl
mov
addb
std
sub
and
mov
jl
add
add
mov
cmp
xchg
inc
mov
mov
mov
jl
add
nop
add
xchg
add
testb
out
jbe
add
dec
mov
repnz
xchg
addb
add
add
and
mov
sbb
add
outsl
pop
divl
add
add
xchg
xor
xor
push
pop
cli
stc
push
mov
pop
daa
in
sbb
std
rolb
jle
and
iret
rolb
push
add
adc
or
push
ret
adc
add
out
loope
add
mov
push
add
xchg
xor
mov
adc
add
repz
add
into
aas
adc
push
add
or
leave
push
add
fidivrs
push
jo
xor
push
add
test
jns
add
gs
add
in
data16
push
add
add
dec
lds
adc
mov
add
xchg
dec
or
jp
add
add
jno
mov
jnp
add
and
add
es
pusha
add
jo
sub
push
lret
les
xchg
mov
xlat
adc
shll
add
xchg
add
push
addb
and
sbb
add
ljmp
mov
repz
lock
mov
add
out
into
jbe
pop
adc
dec
nop
add
leave
mov
add
loope
adc
add
add
add
mov
flds
repnz
jno
adc
xor
adc
fidivl
stos
jg
adc
mov
imul
pushf
push
add
mov
mov
add
add
mov
mov
stos
cmp
mov
rolb
add
hlt
add
lock
add
jbe
jmp
sahf
xchg
jno
add
add
pop
int
push
add
push
std
xrelease
stos
stos
mov
add
or
push
add
cld
sbb
pop
test
pop
mov
add
push
jno
add
push
add
mov
in
data16
arpl
add
add
out
push
push
pop
filds
dec
mov
cmp
add
sti
lods
js
add
rolb
sub
push
add
mov
mov
roll
add
pop
mov
icebp
inc
mov
add
sti
loopne
shll
pop
lcall
cli
jbe
inc
pop
aas
or
lods
imul
mov
xor
sub
add
leave
imul
xchg
add
add
rcll
test
imul
add
add
adc
push
add
add
jbe
sub
adc
pushf
into
jno
icebp
mov
mov
mov
mov
test
std
insb
jl
sub
add
add
mov
add
testb
cld
in
jecxz
or
data16
add
add
adc
jmp
js
inc
add
aam
int3
jp
insl
dec
mov
addb
into
add
stc
sub
add
add
nop
add
adc
xor
mov
cltd
roll
jp
testl
inc
add
into
outsb
cld
outsb
sub
aaa
cs
das
xchg
xchg
cmp
pop
jne
add
add
sub
mov
ja
jno
add
arpl
push
add
add
or
rcr
test
rolb
push
aaa
in
shrl
addr16
testl
aad
add
andl
lahf
into
adc
or
aas
lods
fiadds
scas
dec
or
add
mov
addb
jne
add
shll
stos
ret
xchg
push
add
jg
out
mov
add
add
int
add
outsl
or
in
push
add
lea
add
add
jmp
add
frstor
pop
repnz
lret
addb
add
add
mov
add
add
pop
mov
xchg
adc
xchg
inc
add
test
add
outsl
jle
outsb
pop
mov
xor
gs
popa
lods
jnp
addr16
jg
xchg
add
mov
insb
cmp
jmp
sub
dec
mov
test
push
add
and
dec
mov
add
add
add
addb
add
cmpsl
pop
xor
add
int3
iret
jnp
les
mov
fwait
xchg
rolb
cmp
stc
and
aaa
pop
mov
mov
jne
or
ljmp
std
adc
or
aam
add
mov
cmp
inc
push
add
imul
inc
add
push
mov
ret
jg
xchg
mov
pop
test
mov
xchg
add
pop
addl
mov
and
mov
jbe
xor
sub
mov
add
jle
fnstenv
cli
push
add
sbb
add
cmp
clc
stos
call
cmc
sbb
movsb
add
movsb
add
inc
add
cmp
lods
jge
add
inc
add
inc
add
cmp
arpl
js
add
call
push
add
mov
add
pusha
add
inc
fcmovbe
add
ret
mov
daa
add
or
cs
aad
add
insb
lahf
icebp
test
pushf
movl
rcll
fdivrl
int
aas
jbe
and
addb
fwait
add
add
mov
push
in
sbb
pop
incb
fstps
add
out
xchg
push
daa
fildll
ret
add
ds
jl
movb
ja,pt
sub
fidivrs
stos
xchg
dec
sbb
mov
add
add
aad
test
movsl
or
std
sub
pop
xchg
mov
inc
inc
add
movsb
add
jmp
stos
or
add
je
dec
or
jmp
add
add
nop
add
jnp
mov
and
mov
add
jg
xchg
stos
sub
out
mov
and
sahf
out
xor
in
cmp
popa
fwait
int
add
mov
add
leave
fucomip
dec
sub
add
mov
lret
sub
cmp
add
mov
out
mov
adc
xchg
add
cltd
sbb
add
insb
std
aam
xor
and
lods
sbb
in
gs
and
mov
add
testb
jg
and
mov
add
out
addb
leave
jb
cmp
add
add
add
mov
arpl
add
movb
add
ds
in
mov
inc
lahf
sbb
leave
xor
push
add
add
in
loope
push
add
add
test
dec
lods
rolb
fs
add
push
add
or
in
xchg
or
cmp
stos
adc
mov
out
sarl
add
shrl
cmp
inc
add
add
jne
out
addb
push
add
or
out
or
add
in
popf
fisttps
add
add
sub
push
add
push
add
out
dec
sti
movb
inc
mov
inc
je
push
add
addb
add
or
cmpsb
add
mov
ret
hlt
add
xchg
add
add
pop
faddl
mov
sti
imull
add
lret
jo
or
inc
dec
sub
adc
ficomps
lcall
scas
sub
add
jecxz
push
add
add
add
repz
mov
push
add
aad
out
rolb
jmp
movb
loope
jns
pop
int
jge
bound
mov
add
pushf
xchg
jp
add
add
add
add
daa
dec
mov
insb
data16
add
add
pop
into
mov
lds
push
mov
or
add
push
add
outsb
xlat
jecxz
or
int3
loop
repz
cld
sbb
and
add
pop
xchg
rolb
add
xchg
add
fwait
mov
pop
cmc
and
add
add
adc
jp
add
rolb
bound
mov
lods
rolb
hlt
add
jge
push
add
add
jg
lock
imul
add
cld
aad
out
push
push
add
adc
cmpsb
add
mov
add
and
mov
add
jne
add
mov
add
push
xchg
sub
insl
and
add
pushf
pop
adc
pop
fdiv
jb
pop
add
mov
testb
mov
add
mov
mov
sti
xchg
aas
cs
addb
add
jne
push
add
data16
add
add
push
add
lahf
test
test
add
pop
cs
repnz
test
cmp
jecxz
or
add
push
add
add
mov
jg
push
add
jmp
cld
dec
xchg
add
sub
inc
add
insb
adc
adc
add
add
pextrw
insl
sub
daa
adc
xor
pop
cli
lret
mov
aam
xchg
out
xor
push
jp
mov
and
add
add
inc
add
daa
push
cli
and
mov
adc
fistps
add
loope
add
add
pop
fcmovbe
add
add
hlt
add
jnp
imul
add
add
insb
das
xor
sub
std
int3
rolb
adc
loope
adc
int3
and
testb
push
pop
pop
aam
mov
pop
cmp
aad
push
add
aam
movsb
add
add
daa
sbb
push
mov
outsl
lods
cmp
adc
or
add
out
dec
scas
insb
iret
xor
in
jl
mov
lods
pop
jl
mov
and
mov
fstps
cmp
scas
pop
xchg
add
add
inc
add
dec
jno
or
add
sbb
and
mov
mov
add
add
xchg
add
aaa
add
add
push
add
jno
add
add
add
add
dec
into
repz
addb
push
add
popa
arpl
jnp
add
add
repnz
mov
test
ret
inc
add
pop
xchg
add
clc
repz
add
popa
scas
add
pop
movsl
dec
xor
addb
cmp
pop
sub
mov
cltd
push
repnz
mov
nop
add
adc
test
add
sbb
pop
rolb
add
add
mov
dec
add
add
jo
adc
add
add
add
mov
xchg
sub
xor
pop
loopne
scas
scas
js
fwait
enter
scas
clc
addb
loopne
out
mov
pop
xor
repnz
add
mov
add
mov
jne
add
mov
mov
add
push
add
int3
adc
pop
out
outsl
popl
mov
xchg
mov
mov
and
mov
jl
pminsw
mov
push
testb
xchg
add
mov
add
or
add
das
test
add
cwtl
movsb
add
cmc
cmp
add
stc
cltd
sub
mov
push
in
mov
repz
cmp
arpl
add
push
cmp
das
cld
sub
xor
cmp
inc
mov
mov
jnp
mov
add
pusha
add
add
lret
popf
pop
outsb
dec
sub
stos
leave
sub
add
push
add
add
mov
sbb
or
aaa
adc
sub
jg
inc
add
jo
shl
add
pushf
xchg
cld
fcompl
xchg
cmpsl
gs
or
adc
insl
xor
stc
pop
fwait
adc
add
mov
bts
add
subl
test
mov
add
sbb
pop
std
lea
int3
add
mov
xchg
add
mov
add
fbstp
imul
mov
cld
lcall
add
lds
adc
stc
xchg
add
hlt
add
jl
push
mov
add
add
add
rolb
jne
test
jbe
dec
and
or
add
sub
sbb
add
pop
mov
sarl
add
dec
push
fsubrl
add
add
sbb
iret
pop
je
out
lea
mov
sub
out
mov
pop
scas
jge
test
les
add
xchg
add
roll
mov
add
roll
mov
test
rolb
inc
add
addr16
add
roll
movsb
add
add
mov
lahf
jmp
add
stos
test
dec
sub
jae
add
add
mov
adc
push
push
out
push
cmc
inc
sti
xor
pop
in
mov
mov
lcall
shr
fmuls
sub
icebp
imul
addr16
xchg
add
mov
testb
out
dec
in
sbb
add
push
push
add
add
leave
jne
push
add
mov
or
add
dec
pusha
add
push
notl
jle
mov
xchg
add
add
dec
or
mov
adc
loopne
adc
movsl
mov
scas
mov
add
lds
movsl
scas
adc
pop
std
xchg
add
ja
cmpsb
add
mov
in
aas
jl
mov
jbe
call
jne
add
test
pop
mov
je
push
pop
std
iret
cwtl
imul
sarl
or
mov
mov
sub
adc
cmp
push
add
std
xchg
dec
dec
call
sti
mov
jno
xchg
add
outsl
inc
add
testb
out
das
sbb
xchg
add
add
rolb
push
add
xorl
pop
xchg
add
lods
or
jp
jp
test
mov
dec
rcrl
notl
test
add
mov
es
add
out
imul
dec
add
add
add
fnstsw
adc
fldenv
add
or
pop
push
add
xor
sbb
add
dec
dec
push
rcrl
jmp
imul
add
dec
rolb
icebp
fldt
add
adc
cmpsb
add
test
into
pop
sub
add
pop
jb
cwtl
je
and
inc
add
add
out
ret
mov
xchg
add
add
pop
lret
outsl
fidivs
add
cwtl
xor
jecxz,pn
add
in
mov
add
ret
int
mov
add
lods
test
xor
add
inc
add
add
add
add
and
push
xchg
cltd
adc
inc
inc
sub
add
lea
mov
rolb
stc
stc
jb
push
test
pop
mov
add
add
rol
add
ljmp
add
add
or
add
mov
iret
sahf
xor
mov
jg
mov
add
cmpsl
rolb
add
rolb
bswap
xchg
add
shll
push
add
or
data16
sbb
movsl
hlt
add
cmp
add
or
add
aas
sub
add
ja
mov
add
add
cmp
fldenv
mov
sbb
imul
inc
test
fdivs
mov
cmp
testb
jmp
in
push
add
mov
xchg
movsl
jbe
jo
dec
push
repnz
xlat
adc
add
mov
cmp
inc
add
dec
in
sbb
mov
mov
aaa
insb
cmp
cmp
testb
lret
hlt
add
and
mov
add
inc
add
dec
fxch
daa
lds
inc
push
push
add
fbstp
push
add
xchg
add
add
lock
pop
movsb
add
and
adc
fadd
add
add
mov
pop
lcall
cltd
dec
mov
mov
add
sub
mov
push
arpl
push
mov
add
out
sub
add
ljmp
and
pop
fistps
mov
add
add
sahf
ret
push
pmulhuw
push
add
push
pop
mov
into
insb
movb
movsl
test
mov
les
mov
fwait
pop
mov
jbe,pt
push
add
xor
push
fucomi
movaps
add
insl
loop
das
cltd
mov
adc
fs
jecxz
add
inc
add
add
sub
mov
rorl
cmp
mov
jl
dec
cli
movsb
add
pop
add
mov
nop
add
add
and
add
mov
addb
mov
mov
iret
and
add
mov
and
mov
adc
pop
adc
sub
sti
ss
push
add
add
inc
add
push
add
fldcw
add
insl
ljmp
push
movsb
add
add
push
add
mov
add
into
jmp
adc
mov
and
mov
mov
sti
dec
fwait
sub
outsb
insb
xor
je
addb
sbb
mov
push
sahf
xchg
push
add
add
out
jb
mov
sub
jne
into
pop
fildl
mov
mov
cmp
xchg
push
add
push
mov
add
nop
add
loope
jns
add
add
push
add
cmc
outsb
aad
rolb
sub
sub
daa
sbb
add
add
daa
push
fisttpl
cmp
enter
add
add
lods
lahf
cs
add
add
sbb
stos
fwait
dec
pop
mov
add
fdivrl
js
add
add
fdiv
movsb
add
add
add
jl
pop
movsl
js
outsb
push
inc
add
pop
cmp
add
dec
rcll
sar
jecxz
add
mov
popa
int
fwait
call
or
add
add
pop
test
cmp
jge
add
xor
insl
int
add
add
fistl
ljmp
sbb
add
cmp
fcoms
mov
sahf
ja
add
add
add
pop
and
shll
and
aaa
sub
add
addb
and
mov
inc
pop
mov
cmpsl
shr
add
int3
mov
ret
or
xor
ja
sub
jl
mov
mov
add
mov
cmp
xchg
into
add
mov
dec
push
add
add
pusha
add
push
mov
pop
jnp
inc
lahf
inc
add
int3
das
jo
loope
or
pop
in
out
popa
sub
das
sub
add
cmp
decb
xor
int3
mov
pop
into
mov
mov
inc
add
add
dec
mov
popa
rolb
stos
js
cs
add
addr16
jge
inc
add
push
outsl
sub
add
divl
mov
in
inc
mov
enter
add
add
addr16
add
fmul
loopne
out
jbe
addr16
push
icebp
fisubrs
mov
push
adc
xchg
add
fisttps
out
mov
lods
out
push
or
and
mov
add
xlat
xor
xor
cmp
dec
jns
mov
push
ret
fiadds
out
in
sub
or
mov
pop
add
add
add
sbb
jbe
cmc
add
pop
repnz
std
bound
mov
add
push
and
mov
mov
jns
add
ljmp
mov
aaa
inc
add
test
sub
add
sbb
adc
or
sub
das
jo
xchg
lcall
add
push
pop
mov
adc
push
outsb
ja
cmp
clc
adc
mov
or
cmc
mov
add
push
in
mov
std
dec
xchg
add
daa
mov
jmp
es
in
pop
mov
mov
popf
adc
jle
xchg
bound
mov
push
add
add
aas
out
shr
xchg
ljmp
add
data16
outsb
sbb
add
int3
xchg
popf
popa
or
clc
stos
daa
inc
add
pusha
add
int
mov
mov
dec
or
and
mov
add
add
sti
mov
xchg
xchg
lods
ror
add
rolb
add
hlt
add
out
fidivrl
rolb
call
enter
rolb
insl
jmp
add
add
add
cmpsb
add
out
lahf
jbe
aas
add
and
adc
mov
add
leave
out
jo
hlt
add
add
add
repnz
add
jo
repnz
imul
add
add
push
leave
sbb
or
sbb
testl
arpl
jge
add
xor
repnz
rolb
inc
mov
jb
sbb
insb
sbb
addb
ja
scas
ljmp
dec
mov
jno
pop
stc
imul
jle
inc
add
mov
ret
sub
fdecstp
add
rolb
add
movsb
add
jg
xchg
jecxz
add
fabs
xor
add
add
push
add
xor
sub
pop
or
pop
cmpsb
add
sti
jmp
dec
orl
test
mov
loope
add
cmp
xchg
add
add
add
push
add
leave
dec
dec
xor
or
adc
add
xor
add
cld
imul
add
mov
add
add
and
sbb
xor
xor
lcall
pop
daa
mov
fsubrl
fisubl
add
sbb
push
fmull
and
sub
inc
loope
repz
cmp
test
xor
adc
mov
dec
fiadds
sub
xchg
pop
out
lea
jae
add
mov
nop
add
push
add
dec
jno
push
add
jge
jne
mov
pop
sbb
pop
addb
clc
inc
add
test
ja
inc
mov
insl
dec
and
add
clc
ljmp
fwait
jmp
push
push
push
add
dec
in
gs
xchg
pop
test
dec
push
fsts
add
mov
jbe
sahf
shll
pop
xor
xchg
add
mov
ds
sbb
loop
push
ret
stc
roll
pop
lea
add
repnz
aaa
loope
pop
movb
fucomi
aad
cmp
cld
fwait
and
mov
add
inc
pop
outsl
in
test
rolb
hlt
add
dec
data16
jne
test
push
xlat
out
pusha
add
test
pop
fidivs
add
insb
xor
adc
pushf
cld
sub
insl
bound
mov
push
sub
or
add
or
add
add
add
add
xchg
cwtl
test
add
out
jnp
xchg
add
pop
les
jl
mov
xlat
arpl
xchg
add
addb
int3
inc
add
and
mov
call
add
out
rolb
scas
sahf
xchg
add
adc
push
popa
lods
mov
add
add
ret
cmc
jns
add
add
ja
cltd
push
and
cmp
scas
pmaxub
add
add
mov
addb
je
sbb
int3
popa
sbb
cmp
js
push
add
add
dec
dec
xchg
add
lea
js
ja
pop
shrl
les
lds
mov
inc
fstl
lret
cmp
in
pop
test
data16
bound
mov
inc
lea
mov
clc
push
add
add
mov
and
mov
mov
popa
or
add
mov
and
mov
dec
dec
sub
inc
add
aas
pop
sub
add
xor
adc
add
int3
add
mov
mov
adc
leave
jnp
lret
add
add
mov
sub
mov
xchg
xlat
inc
add
mov
mov
pusha
add
aaa
sbb
gs
cmpsb
add
mov
and
mov
mov
push
or
aas
inc
or
xchg
iret
rolb
push
jp
add
add
add
inc
add
cmp
add
sbb
jmp
mov
sub
dec
scas
push
sarl
adc
data16
xlat
bound
mov
cmp
mov
push
push
cmpsl
xchg
dec
sti
out
ret
ja
dec
xchg
cwtl
or
mov
push
cli
mov
cltd
dec
sti
fnstcw
and
add
or
xchg
xor
mov
in
lcall
aam
add
add
push
loopne
aaa
mov
add
outsb
imull
mov
or
loopne
xor
fists
ljmp
data16
add
push
loope
scas
cmp
adc
xchg
add
jnp
xchg
adc
jno
add
add
cmp
fcmovnb
add
std
ror
movsl
mov
repnz
mov
movsb
add
push
daa
nop
add
add
stos
dec
sub
and
xchg
add
dec
outsb
mov
add
or
lcall
pop
push
add
shl
repnz
add
add
add
inc
add
decb
jmp
add
lods
lcall
mov
scas
fmuls
add
add
rorl
add
mov
add
test
add
mov
add
mov
cmp
les
int
out
rolb
add
add
movsb
add
addb
add
data16
jnp
add
add
add
mov
add
lds
mov
jns
shll
xchg
xchg
add
dec
jno
mov
push
cli
cmp
out
lret
add
fnstenv
add
adc
fcom
add
pop
pop
add
mov
inc
add
mov
add
fisttpll
cmp
add
pusha
add
dec
inc
xorl
add
push
add
add
rol
fcmovb
add
add
pushl
and
cmp
dec
push
or
adc
cmpl
add
or
add
xchg
inc
add
ficoms
add
mov
mov
daa
lret
and
mov
add
mov
pop
jl
push
mov
out
push
imul
pop
dec
dec
jne
xchg
add
push
mov
leave
scas
cltd
outsl
and
sub
add
sub
jp
cmp
adc
cmp
mov
jns
pop
rol
add
int
in
push
add
into
in
push
das
cmpl
add
mov
xor
add
add
pop
sbb
jp
scas
loopne
dec
movsl
and
add
add
insb
nop
add
add
data16
pushf
lea
add
mov
add
add
inc
add
add
addb
adc
notl
xor
sub
cmc
cltd
data16
int
call
sub
lock
or
and
das
dec
dec
mov
hlt
add
lahf
aam
testb
dec
ds
xchg
add
add
mov
add
mov
add
sbb
cmovs
cltd
loopne
stos
inc
cmp
and
repnz
add
or
add
xchg
jns
add
xchg
cs
push
dec
or
add
mov
mov
add
sub
ljmp
xor
outsb
ret
mov
mov
sbb
mov
adc
mov
rolb
or
in
mov
push
add
mov
daa
add
mov
xlat
jno
out
pushf
fwait
pop
jae
or
add
inc
mov
sub
inc
add
add
int
add
add
sbb
sbb
jbe
add
mov
repz
add
lods
xlat
adc
cmp
and
aad
dec
dec
xadd
gs
dec
inc
push
repz
xchg
add
mov
mov
sub
addb
std
adc
mov
repnz
dec
jne
ljmp
add
add
adc
imul
movsl
jl
fidivrs
dec
mov
call
cli
and
or
fwait
add
sub
fbld
cltd
xchg
std
mov
pop
popa
mov
pop
or
adcl
rolb
add
incb
add
arpl
out
fildl
add
or
add
pop
addb
add
add
lea
inc
arpl
scas
lds
cmpsb
add
aad
ret
in
fldl
add
add
or
add
add
add
push
imull
rolb
xchg
mov
movsb
add
add
or
enter
lds
xchg
int3
push
add
add
les
call
stos
int3
or
lods
fld
add
sub
int3
testb
stos
ficoml
int3
xor
fidivs
bound
mov
xchg
enter
add
or
je
data16
addb
jae
idivl
sbb
arpl
add
or
loopne
enter
fbstp
test
xor
xlat
subl
das
imul
rorl
mov
cmc
xchg
fiadds
daa
add
lods
mov
mov
mov
jmp
add
ss
jp
ficomps
xchg
push
add
ja
and
push
add
add
mov
add
lods
data16
sub
add
add
mov
add
push
add
addb
movsb
add
pop
mov
add
inc
add
add
xchg
in
adc
in
in
push
repz
nop
add
add
add
in
subl
cmpsl
xchg
nop
add
add
cli
enter
or
adc
outsl
cmp
add
inc
add
jle
loop
sbb
sub
add
jmp
pushf
xlat
ds
jecxz
adc
xchg
add
jl
sbb
add
cmp
add
scas
xchg
add
add
add
test
add
cmp
in
hlt
add
gs
add
stc
daa
xor
hlt
add
add
xchg
add
stc
inc
aas
jecxz
in
cmp
fistps
add
add
test
xlat
ds
imul
dec
pop
add
test
push
push
call
add
lods
add
sbb
jecxz
cli
pusha
add
call
add
and
aad
iret
ret
mov
cmp
in
test
add
dec
and
mov
inc
popa
sub
and
lock
ret
and
pop
testb
add
lds
cli
mov
xor
xor
in
stc
pop
cwtl
aaa
or
mov
sub
and
inc
ret
rolb
sbb
add
mov
pop
mov
push
cs
add
inc
xlat
or
add
data16
sbb
fstpl
das
and
mov
push
add
add
add
mov
or
jmp
push
mov
adc
pop
aam
add
pop
adc
insb
and
mov
add
pop
xor
int3
call
push
add
loope
add
cwtl
mov
push
push
add
outsl
mov
sbb
add
icebp
leave
add
addb
data16
cmpsl
arpl
add
dec
loope
sarl
add
dec
negl
push
add
add
add
xorl
mov
imul
sbb
pop
pop
sahf
push
mov
popl
out
mov
lea
aam
add
mov
js
jae
add
add
popf
hlt
add
call
jle
add
mov
je
jno
sbb
cmp
xlat
add
mov
add
nop
add
add
out
sbb
pop
outsb
gs
rol
add
xor
insl
testb
rolb
add
xor
push
sub
fstpt
xchg
movl
pop
data16
in
or
ljmp
aad
aaa
jmp
add
add
pop
sbb
mov
add
add
lret
mov
add
add
add
add
sub
das
rolb
inc
add
lock
repz
imul
lea
inc
add
xchg
add
sub
rolb
xlat
dec
fwait
inc
sbb
add
add
mov
xchg
jmp
data16
add
inc
add
sbb
lret
xorl
inc
add
add
aas
je
mov
and
jns
add
add
push
add
add
add
movb
subl
inc
das
mov
pop
cli
stos
pop
sub
add
xchg
fldcw
add
add
add
filds
fwait
add
mov
cmp
dec
mov
out
jae
add
or
out
lods
xchg
inc
add
ret
scas
dec
pop
loop
pop
movaps
cmp
test
add
xchg
in
fldcw
inc
add
pop
daa
pushf
in
push
add
sub
push
push
add
sahf
das
idiv
inc
shr
fdivrl
pop
enter
pusha
add
icebp
aad
mov
mov
xor
push
or
and
xor
and
xor
sub
lods
lock
test
mov
mov
mov
push
mov
sahf
push
jle
mov
rolb
lea
add
add
xchg
ret
pushf
or
jo
mov
mov
adc
cmpsl
push
in
daa
mov
dec
xchg
add
movsb
add
sub
fmuls
add
mov
addr16
rcr
mov
add
xchg
push
sbb
mov
add
movsb
add
fwait
cmp
pop
dec
or
mov
test
add
ret
sbb
insl
jb
ret
fildll
pop
in
push
add
fnstsw
loopne
add
and
mov
out
push
pop
or
lds
out
dec
insl
mov
or
add
les
cmc
mov
jge
pop
push
ds
xchg
add
les
hlt
add
pop
adc
fisttps
jp
shll
xor
adc
es
cmp
add
inc
xor
xorl
jno
add
sbb
mov
jae
add
pop
pop
add
jnp
add
test
jns
leave
mov
add
xor
pop
cmp
test
add
add
arpl
or
jns
add
add
add
add
cmpsl
clc
inc
mov
push
int
jo
pcmpeqb
push
add
lods
fidivrl
pop
test
lock
adc
rolb
fldl
add
inc
cmp
add
add
sub
jmp
rcrl
xchg
lods
push
addb
imull
add
add
add
add
push
scas
push
add
fstpt
jecxz
out
dec
ja
jne
icebp
nop
add
add
data16
or
loop
loope
pop
dec
mov
test
mov
sbb
mov
add
and
mov
pop
push
mov
shll
in
mov
or
jmp
add
lock
xchg
add
add
sub
cmpsl
aam
ret
das
pusha
add
stc
movsb
add
lods
adc
je
cmpl
add
mov
ret
lret
aad
pusha
add
adc
inc
mov
repz
adc
add
cmp
add
loopne
testb
add
add
cld
ds
lahf
shrl
add
gs
pop
mov
add
fists
data16
adc
add
out
xlat
ret
mov
add
add
add
jo
jmp
push
call
outsl
stos
inc
add
add
pop
or
add
add
adc
adc
outsb
pushf
sub
pop
push
add
and
mov
push
add
mov
xor
add
push
mov
xor
aam
push
add
ud1
add
pop
fwait
or
jle
add
add
cmp
loop
rolb
cmpsb
add
add
bound
mov
sarl
incl
ja
adc
cmp
pushf
add
out
push
jo
adc
and
add
jnp
ret
and
ret
testb
add
add
xchg
add
rolb
mov
add
mov
aam
dec
sahf
jmp
add
add
xor
aaa
dec
movb
inc
add
add
insl
xchg
fsqrt
ljmp
pusha
add
add
jb
repz
rolb
add
add
into
push
add
adc
push
repnz
sbb
testb
jp
xor
ljmp
push
add
ss
push
cmp
das
jae
add
sub
fistl
or
mov
cmc
fwait
add
mov
fdivrs
jg
inc
add
cmp
pop
pop
and
and
popf
xchg
add
add
add
or
add
add
fisttps
addr16
flds
mov
xor
rolb
cmp
mov
add
add
sbb
mov
js
lods
fiaddl
add
add
mov
mov
fwait
mov
movsl
clc
xlat
iret
mov
aad
xor
add
xor
cltd
dec
test
mov
sub
cltd
mov
sub
lret
cmp
dec
outsb
push
add
push
in
lods
push
ds
sub
add
add
mov
mov
push
rcll
add
inc
jl
add
popf
lret
inc
add
iret
xchg
fsubrl
rolb
pop
aad
fwait
add
out
mov
add
mov
jg
add
adc
adc
or
mov
aaa
jmp
add
cmc
gs
mov
adc
insl
arpl
add
add
or
adc
sbb
jno
int3
xchg
mov
icebp
cmpsb
add
add
pusha
add
in
addb
jge
fwait
or
rolb
das
xchg
add
rolb
adc
or
nop
add
add
in
jge
xchg
xchg
mov
add
pop
incb
pop
xor
lcall
jp
add
test
std
cmpl
dec
jb
jl
icebp
js
test
test
fildll
addb
repnz
add
test
rolb
dec
loope
xchg
add
addb
mov
cmp
push
add
std
fildl
mov
cmp
push
gs
push
add
stos
pop
mov
add
out
pop
mov
insl
mov
pop
daa
loop
into
insb
mov
pushf
add
add
stos
xchg
add
add
add
or
xorl
sbbl
or
xor
movsb
add
add
adc
add
sub
xchg
scas
add
pop
comiss
nop
add
add
push
add
add
mov
add
les
pop
inc
add
add
mov
and
add
test
add
pushf
adc
and
add
out
movb
stos
pop
pop
pop
pop
cs
add
test
or
pop
pop
test
movb
movsb
add
mov
jmp
push
jle
add
add
bound
mov
add
add
and
mov
testb
pop
mov
dec
inc
add
xor
test
mov
mov
mov
xchg
negl
push
add
addb
dec
dec
cmp
inc
mov
mov
jle
mov
add
hlt
add
add
xorl
jne
mov
add
shll
and
mov
add
push
add
test
adc
push
sub
inc
std
in
and
mov
xlat
mov
add
mov
xchg
mov
add
add
add
shll
add
adc
adc
lds
add
add
and
js
add
fld
add
add
inc
push
and
cmpsb
add
xchg
dec
out
stc
pop
out
or
add
cmp
fsubr
popa
add
add
rorl
in
bound
mov
hlt
add
add
popa
cwtl
adc
or
add
push
add
bound
mov
je
int
xchg
add
mov
bound
mov
add
jg
add
sub
shll
dec
add
mov
mov
add
add
push
popa
xor
fisttpll
data16
std
xor
add
mov
add
add
fsts
mov
cmp
add
add
cmpsb
add
mov
aam
ja
sbb
add
insb
dec
push
imul
fdivrp
jmp
mov
in
jae
or
loopne
sub
add
xchg
xor
mov
add
cmp
sub
mov
jecxz
add
pop
out
arpl
nop
add
inc
mov
repz
cmp
data16
add
fwait
lret
xor
sbb
add
add
or
inc
add
cs
dec
clc
addr16
add
xchg
mov
dec
leave
ja
cmpsb
add
inc
add
add
andl
add
add
and
mov
mov
inc
sub
imul
mov
and
or
rolb
add
add
inc
outsb
rolb
jecxz
adc
shrl
jmp
inc
rolb
mov
mov
add
hlt
add
xor
lds
add
nop
add
xor
daa
mov
xor
mov
add
add
lock
add
pop
adc
add
in
cmp
add
ja
add
cmpsb
add
xchg
sub
stc
inc
pop
adc
add
dec
inc
add
jae
ljmp
jg
pop
gs
adc
adc
stc
push
add
vpcmpgtb
or
and
pusha
add
xor
mov
hlt
add
dec
or
push
call
sbb
sti
out
addb
add
stos
sub
sbb
popa
in
notl
nop
add
jle
add
mov
shrl
add
add
or
shll
outsl
jecxz
xchg
push
cmpsl
popa
mov
inc
add
loope
jmp
mov
rolb
add
mov
mov
add
test
mov
cmpl
call
xor
pusha
add
shrl
int3
out
jne
xor
mov
or
push
add
jae
xchg
jae
outsb
les
inc
das
pop
sub
insl
jne
add
add
add
add
cmc
xchg
add
or
add
add
dec
fnstsw
cmp
jp
add
mov
or
xor
xchg
movsb
add
sub
sbb
test
das
and
mov
add
add
mov
dec
sbb
mov
cmpsb
add
pop
sub
outsb
push
test
jnp
add
add
mov
add
clc
xlat
cmp
ja
adc
iret
sub
add
cmp
stos
cli
aad
xor
aaa
adc
sbb
sbb
pop
imul
jbe
out
mov
and
add
mov
insb
push
add
ljmp
leave
push
mov
xor
bound
mov
adc
add
xchg
add
add
loop
out
pop
das
hlt
add
repz
lret
add
sbb
popa
add
add
add
pop
ds
aaa
add
add
test
add
ficoms
fisttpll
lcall
add
andl
dec
push
add
sahf
jmp
loopne
dec
mov
adc
xchg
add
inc
add
lcall
jo
ss
aaa
add
dec
push
cmp
add
lret
pop
sbb
fistpl
jmp
fs
dec
insb
mov
sbb
sub
and
jne
cmpsl
xchg
add
add
arpl
cmp
loopne
es
cltd
adc
out
mov
push
add
pop
stos
inc
add
outsl
or
xor
call
add
add
add
frstor
xchg
push
or
pop
ret
aam
pop
or
mov
fisttps
add
inc
add
add
scas
cli
popf
fcmovne
inc
add
adc
jnp
add
sbb
add
int
jb
inc
cmc
lcall
add
add
test
sbb
lahf
jno
jg
aaa
nop
add
pop
mov
jo
lods
je
jl
push
mov
rolb
xor
add
add
outsb
mov
addb
icebp
stos
add
lods
jae
add
je
or
cmp
add
mov
add
add
add
mov
add
add
push
add
test
and
sub
inc
add
fisubs
sub
jnp
adc
mov
mov
or
xchg
add
test
adc
cwtl
cmpsb
add
fadd
lods
out
or
add
dec
nop
add
repnz
mov
dec
mov
scas
insl
cmp
add
pusha
add
out
add
add
sub
inc
add
loopne
push
cli
adc
lods
jbe
push
add
std
rolb
add
rolb
push
fdivrp
sbb
add
mov
fwait
pop
push
pop
mov
inc
pop
mov
sbb
inc
add
addb
rcll
outsb
je
arpl
xchg
in
xor
jle
clc
fldcw
adc
add
int3
inc
add
aad
cli
sub
add
imul
in
xchg
add
or
sbb
add
mov
add
rolb
push
test
movsb
add
add
push
add
add
add
add
jo
scas
xchg
addb
inc
aam
mov
fidivl
pop
push
xor
int
repz
add
lret
sahf
ret
call
add
push
jns
loop
adc
mov
mov
daa
ja
jle
xor
add
pop
addb
add
insb
data16
pop
push
negl
mov
add
fimull
add
add
mov
add
add
roll
movnti
je
mov
leave
insl
rolb
test
xor
sub
fucomip
xchg
cmp
jg
add
bound
mov
fsubr
repnz
add
movsl
roll
inc
add
and
testb
push
push
add
in
sub
inc
add
add
in
lods
lcall
mov
add
mov
ds
dec
lock
add
inc
xor
mov
push
add
out
add
add
test
add
add
add
pop
fiadds
int
add
mov
out
push
les
pop
push
add
add
add
jbe
lcall
es
mov
xchg
mov
push
pop
sarl
push
lcall
xlat
outsl
mov
add
add
inc
add
mov
adc
push
repnz
add
add
mov
add
add
out
aam
fwait
lret
add
add
mov
fcomps
adc
cmp
add
cmp
xor
call
push
sbb
xchg
mov
pop
adc
cmc
insb
jne
add
add
jmp
add
cltd
rolb
mov
fsubs
add
popf
jge
jle
imul
add
leave
jno
add
pshufw
add
cltd
inc
add
aam
pop
xor
out
rolb
testb
add
mov
add
rolb
loop
fwait
test
or
add
add
iret
sbb
xchg
dec
in
hlt
add
mov
lahf
sbb
push
add
pop
mov
jbe
movsl
fstpt
lea
sub
shll
leave
aas
ret
roll
mov
add
loopne
adc
xor
rcll
add
push
add
add
cltd
mov
pop
cmovle
sub
pop
sbb
add
add
xchg
xchg
mov
sti
cld
mov
je
pop
test
ja
xorl
enter
pop
jle
test
sbb
mov
aaa
out
cltd
xchg
dec
pop
hlt
add
jmp
add
cmp
rolb
lret
fisttpll
frstor
insb
mov
nop
add
add
xor
push
sub
add
add
sub
inc
add
push
cmp
loope
add
aam
in
xor
and
mov
add
xor
xor
popf
push
add
and
mov
sbb
mov
iret
xchg
add
and
mov
test
add
adc
and
add
jnp
push
add
ffree
add
add
mov
jns
leave
ss
repz
pop
xchg
cmp
mov
add
cmp
add
and
mov
xchg
data16
xchg
add
stos
lds
testb
mov
popa
hlt
add
rolb
call
mov
scas
movsl
push
add
inc
xchg
or
fwait
mov
nop
add
jg
popa
and
sub
add
xor
add
insb
add
outsl
lret
call
add
inc
add
or
loop
xchg
add
mov
addr16
add
sti
pop
pop
insl
scas
pop
cmpsl
inc
add
inc
inc
push
rolb
outsb
cmp
test
aad
cmp
add
js
add
cld
dec
fcompl
add
pop
adc
jl
mov
loopne
add
push
leave
movb
add
in
add
add
cli
push
int3
pop
testl
in
mov
pushf
fnsave
push
lea
in
cltd
leave
gs
add
cmpsl
adc
mov
ficompl
mov
add
bndldx
mov
adc
pop
test
cwtl
xor
inc
fwait
shll
add
add
jle
stc
das
imul
stc
sarl
xorl
mov
loope
pop
ret
sub
add
jle
add
add
addb
add
icebp
push
add
xlat
and
scas
ljmp
add
add
dec
mov
dec
sub
pushf
sub
scas
mov
out
test
daa
dec
pop
and
mov
kmovb
sbb
cs
xlat
xchg
inc
jle
jnp
out
notl
scas
lahf
push
add
mov
mov
pop
lods
or
add
mov
xchg
add
xchg
sub
sbb
mov
mov
add
add
add
add
add
cwtl
pop
push
add
aaa
pop
addb
inc
sub
jne
and
shll
sti
add
mov
test
mov
jp
pop
sub
add
add
insb
pop
mov
xchg
stc
loop
arpl
or
add
mov
lcall
rcl
cmpsb
add
push
fimull
sbb
roll
mov
inc
add
xchg
add
cmc
jno
test
pop
insb
push
add
jnp
mov
lret
inc
add
cmp
sub
and
add
mov
push
add
adc
mov
lret
imul
add
fidivl
push
add
std
or
jl
sbb
push
pusha
add
add
add
jb
push
dec
adc
xlat
popf
popf
or
add
les
test
out
rolb
lods
jl
xchg
add
push
add
cs
js
xor
dec
int
add
fdiv
ret
js
add
sahf
sbb
dec
popa
jbe
inc
add
cmp
add
pusha
add
loopne
jno
aam
xchg
add
and
sub
jge
iret
lods
cwtl
cltd
add
outsl
movsb
add
xor
ret
add
mov
jnp
pop
adc
subl
flds
add
add
mov
add
mov
add
out
ja
cmc
pop
fimuls
outsb
cltd
ja
add
cmp
adc
ret
cmc
inc
cwtl
pop
fildl
lds
add
ljmp
das
roll
push
sbb
adc
mov
jl
add
scas
enter
jbe
out
xlat
and
mov
and
inc
pop
xlat
cltd
xor
in
imul
jg
mov
pop
mov
testb
fwait
push
add
daa
stos
lock
add
mov
popa
adc
add
fwait
sbb
insl
pop
aad
in
xor
imul
sbb
stos
out
sub
outsb
sahf
test
lods
movb
add
and
mov
mov
xor
inc
lahf
add
jg
add
adc
mov
mov
ja
push
or
inc
add
add
add
rolb
jnp
in
scas
cmc
out
xchg
add
das
add
mov
add
push
add
add
cmc
sub
mov
int3
in
test
xchg
testb
enter
fwait
adc
cmp
or
add
add
add
mov
and
mov
stc
xchg
add
mov
mov
mov
fstl
add
test
rorl
data16
xor
mov
xor
bound
mov
add
popf
push
faddp
lods
nop
add
mov
mov
add
cwtl
and
mov
xchg
inc
sbb
add
mov
mov
add
and
push
add
dec
hlt
add
add
push
or
add
cltd
push
pop
setns
rolb
out
jnp
xchg
mull
add
pop
pop
repnz
aas
mov
or
jge
push
add
add
adc
add
adc
mov
frstor
aaa
fldpi
xchg
inc
add
add
add
add
add
rolb
call
dec
pop
mov
loop
mov
clc
pop
sub
into
xor
dec
sbb
mov
fsubl
add
pop
pop
into
dec
pop
sti
clc
jb
les
jge
dec
mov
jae
data16
rolb
aad
pop
and
add
jno
lea
add
add
call
mov
lods
and
stos
add
xchg
add
mov
xchg
inc
data16
out
cmpsb
add
mov
pop
mov
add
scas
push
push
jno
add
int
add
add
cli
add
mov
aas
or
add
sub
xor
std
das
stos
add
add
add
add
add
add
lahf
xchg
dec
cmp
mov
aaa
xor
mov
add
sub
lock
and
adc
add
sub
xor
shll
xchg
add
or
addb
in
xchg
add
push
push
jne
sbb
aaa
inc
add
mov
leave
or
xor
mov
in
jb
rolb
adc
ficoml
xchg
inc
add
rolb
daa
dec
xchg
daa
mov
jbe
fsubrs
add
out
cmpl
adc
stc
xchg
adc
cmp
out
sub
pusha
add
scas
mov
pop
jb
mov
mov
mov
add
add
xlat
pop
sbb
mov
loopne
pusha
add
mov
jge
inc
aad
test
mov
add
cld
mov
add
icebp
mov
dec
out
xchg
add
pop
adc
add
or
mov
cmp
add
cmc
mov
fldenv
mov
clc
mov
sbb
mov
adc
shl
test
test
js
shrl
xor
dec
clc
loop
pop
pop
scas
xchg
int
add
out
in
mov
jns
mov
lret
mov
sub
hlt
add
inc
add
lea
cmp
xchg
add
inc
add
test
jp
push
fadds
add
mov
jg
xchg
das
add
pop
adc
sbb
mov
mov
aas
push
add
add
add
les
test
sti
fcmove
pusha
add
mov
sahf
add
mov
mov
arpl
adc
adc
mov
inc
fwait
jmp
cmp
lods
jle
add
das
test
mov
mov
push
and
addr16
add
fwait
add
inc
out
mov
add
rcr
pop
lock
add
iret
shll
aaa
lods
sbb
lcall
in
mov
jg
scas
out
into
movsb
add
add
add
add
int
int
add
jg
sub
xor
test
add
dec
sub
popa
in
imul
pop
dec
dec
outsb
jae
mov
roll
lahf
adc
sub
add
mov
pop
aas
push
movb
cltd
movsl
js
mov
mov
dec
test
xchg
add
add
mov
pop
adc
rolb
cmp
mov
leave
inc
mov
movsl
xchg
add
mov
add
sahf
push
add
fcmovu
mov
in
sbb
jl
or
cmp
mov
bound
mov
fildl
mov
sub
sub
in
fdivl
sahf
test
movsb
add
push
add
dec
lods
sub
not
ljmp
mov
cs
add
add
inc
jbe
aam
mov
add
jbe
inc
add
mov
lret
xlat
and
mov
add
add
and
test
add
sahf
imul
add
add
and
or
adc
test
add
add
fisubrl
mov
sbb
lea
loop
outsl
mov
das
xchg
outsl
cltd
ret
daa
les
lds
pop
imul
add
aad
imul
add
add
jge
add
adc
roll
aaa
adc
enter
add
add
add
add
adc
add
ficomps
push
mov
or
cmp
jb
push
add
lcall
xor
add
and
mov
add
jae
add
ficompl
mov
sti
xor
cmp
pop
bound
mov
jge
cmp
stos
inc
jp
cmc
mov
fnstsw
nop
cld
nop
jmp
add
inc
push
mov
xchg
ret
add
xor
mov
in
stos
mov
stc
nop
es
add
add
add
add
add
nop
cld
nop
jmp
push
add
fiadds
into
add
je
stc
nop
es
add
pop
mov
nop
cld
nop
jmp
hlt
nop
stc
add
nop
cld
nop
jmp
add
or
add
add
pop
lea
nop
cld
nop
jmp
pusha
movsl
add
fimuls
jb
lods
add
add
movsl
add
add
add
dec
incb
xchg
ret
mov
in
adc
in
pop
jne
stc
nop
es
add
inc
add
movsb
stc
nop
es
aaa
pusha
add
nop
sub
in
push
nop
cld
nop
jmp
hlt
add
hlt
pushl
push
stc
nop
es
add
add
add
push
inc
mov
test
add
stc
nop
es
insl
mov
out
mov
es
add
dec
xor
stc
nop
es
movb
in
add
es
fisttps
add
lods
add
mov
add
and
imul
es
xchg
add
ss
add
stc
nop
es
xchg
add
mov
jb
xchg
add
add
shr
stc
nop
es
add
mov
pop
nop
movsl
push
mov
stc
nop
es
and
cmpsb
mov
nop
es
cmp
add
nop
hlt
adc
mov
stc
nop
es
add
add
add
mov
xchg
ret
add
xchg
rolb
dec
add
stc
nop
es
pop
iret
repz
add
add
rolb
lea
stc
nop
es
add
test
push
mov
xchg
ret
xchg
adc
add
add
xor
add
stc
nop
es
add
add
nop
es
or
xor
jb
dec
add
add
add
nop
es
add
add
imul
xlat
add
repz
nop
es
add
pop
repz
add
stos
push
stc
nop
es
add
add
add
int
pop
jae
cld
nop
jmp
add
or
dec
cmp
nop
es
xchg
add
and
push
mov
xchg
ret
adc
nop
or
sbb
mov
xchg
ret
add
pop
add
add
adc
add
add
add
adc
add
dec
cmp
nop
es
incl
add
ja
cmp
add
nop
es
add
or
nop
es
movsl
add
add
hlt
add
rorl
jb
add
dec
pusha
stc
add
pop
testb
push
push
mov
xchg
ret
add
and
movsl
push
mov
cld
nop
jmp
add
mov
add
nop
adc
es
pushl
add
add
add
mov
stc
nop
es
add
add
stc
nop
es
lret
mov
in
and
stc
nop
es
xchg
add
or
jmp
stc
nop
es
incl
or
stc
nop
es
mov
ja
add
sub
add
nop
es
add
or
hlt
scas
add
stc
nop
es
add
xor
fiadds
data16
mov
xchg
cld
cmp
xor
and
push
push
mov
xchg
ret
cmp
pop
fiadds
repz
mov
xchg
ret
pusha
add
cmp
es
pop
add
in
sub
stc
nop
es
in
add
lods
add
xor
push
stc
nop
es
ja
mov
add
add
sbb
add
add
jl
add
add
or
add
add
xchg
cmpsb
dec
jns
stc
nop
es
in
xchg
mov
or
in
popa
cmpsl
das
inc
stc
nop
es
jl
add
and
add
out
mov
add
add
push
mov
xchg
ret
add
add
es
es
xchg
or
and
jbe
jbe
adc
jnp
mov
stc
nop
es
xchg
or
cld
nop
jmp
add
add
add
xchg
jbe
add
mov
test
stc
nop
es
iret
and
xor
mov
push
mov
xchg
ret
add
leave
xor
stc
nop
es
add
or
and
inc
aad
add
add
add
nop
es
add
imul
jle
add
stc
nop
es
push
mov
leave
mov
stc
nop
es
pusha
add
add
cwtl
mov
stc
nop
es
add
mov
jo
inc
add
mov
hlt
add
call
stc
nop
es
adc
add
jne
stc
nop
es
mov
cmp
popa
add
mov
xchg
ret
add
and
dec
insl
push
push
mov
xchg
ret
xchg
xchg
hlt
mov
das
mov
stc
nop
es
xchg
pusha
mov
jl
les
add
add
nop
es
and
add
je
nop
cld
nop
jmp
ss
add
js
arpl
stc
nop
es
add
add
imul
nop
jmp
mov
fs
or
shr
inc
and
nop
es
add
lods
mov
dec
jne
stc
nop
es
or
stc
nop
es
jbe
insl
incl
add
add
stc
nop
es
add
add
xchg
enter
stc
nop
es
add
ss
enter
jb
incl
add
or
mov
jne
stc
nop
es
in
fs
rolb
stos
push
stc
nop
es
add
add
dec
hlt
in
shll
sbb
add
nop
es
add
add
call
or
add
add
add
nop
cld
nop
jmp
or
cmpsb
addl
adc
nop
es
repz
in
pop
push
mov
xchg
ret
mov
in
lods
pop
mov
add
sub
nop
es
or
cli
push
push
mov
xchg
ret
pusha
xchg
add
add
stc
nop
es
add
add
add
push
add
add
add
stc
nop
es
mov
ja
and
jecxz
repz
mov
ja
nop
cld
nop
jmp
into
pusha
filds
stc
and
push
mov
xchg
ret
ss
mov
int3
add
nop
cld
nop
jmp
xchg
mov
jl
add
add
mov
cmp
nop
cld
nop
jmp
mov
and
adc
and
mov
cld
nop
jmp
mov
in
add
push
mov
xchg
ret
int3
add
in
mov
add
leave
sub
and
add
pusha
cmpsb
movsl
add
dec
xor
push
mov
xchg
ret
add
add
add
xor
add
stc
nop
es
add
mov
mov
xchg
ret
xor
and
hlt
add
pop
call
stc
nop
es
add
and
decl
xor
inc
add
in
mov
and
nop
es
ffreep
xchg
xchg
mov
in
fiaddl
add
icebp
add
lea
add
jge
nop
cld
nop
jmp
lret
stc
jl
int3
add
hlt
add
stc
nop
es
add
add
push
mov
xchg
ret
movsl
add
ja
add
movsl
xor
lret
xor
nop
cld
nop
jmp
mov
pop
add
lret
add
add
nop
es
decl
nop
es
add
ja
add
dec
cmp
nop
es
add
jbe
add
adc
movswl
stc
nop
es
add
mov
add
call
nop
cld
nop
jmp
add
cld
push
push
mov
xchg
ret
add
lods
add
push
add
push
stc
nop
es
add
add
push
xchg
push
add
popf
mov
stc
nop
es
adc
add
add
mov
stc
nop
es
add
and
dec
call
stc
nop
es
dec
cmpsb
add
scas
call
stc
nop
es
add
adc
leave
mov
push
mov
xchg
ret
dec
jbe
and
int3
lea
nop
jmp
add
and
mov
add
and
mov
xchg
ret
add
xchg
mov
popa
push
mov
xchg
ret
add
ss
mov
stc
nop
es
add
fists
pop
add
add
add
stc
nop
es
lods
dec
add
add
add
add
add
sbb
add
adc
push
stc
nop
es
xor
subl
sbbb
add
xchg
xor
xor
add
add
stc
nop
es
add
scas
add
push
mov
xchg
ret
mov
add
add
scas
add
nop
cld
nop
jmp
add
add
or
insb
pusha
stc
nop
es
add
push
pop
add
jnp
push
mov
xchg
ret
add
or
jne
push
mov
xchg
ret
incl
adc
ss
and
add
stc
nop
es
add
xlat
xor
pop
push
mov
xchg
ret
stc
or
movb
or
iret
or
andb
incl
mov
sbb
jle
push
mov
xchg
ret
sub
xor
rcrl
push
stc
nop
es
add
adc
xor
add
pop
imul
nop
cld
nop
jmp
nop
add
into
cmp
nop
cld
nop
jmp
add
pusha
add
test
sub
aas
loop
add
add
add
and
stc
nop
es
adc
add
pop
iret
hlt
add
add
stc
nop
es
mov
lret
pusha
filds
or
nop
es
mov
add
add
dec
outsl
popa
fs
nop
es
movsl
add
mov
stc
nop
es
aaa
add
pop
mov
cmp
inc
add
add
push
add
push
push
mov
xchg
ret
or
jl
xchg
mov
rolb
add
nop
es
add
incl
jle
push
mov
xchg
ret
jbe
add
add
stc
nop
es
fs
add
add
push
mov
stc
nop
es
adc
xchg
add
add
add
pop
push
mov
xchg
ret
add
add
add
add
jmp
fs
nop
es
add
pusha
nop
cld
nop
jmp
adc
add
incl
pop
popf
je
stc
nop
es
add
orb
jmp
pop
dec
add
mov
cld
nop
jmp
adc
add
add
sbb
add
stc
nop
es
in
jl
es
roll
xchg
ret
lret
cmp
add
add
fisttps
mov
es
add
add
add
nop
cld
nop
jmp
add
add
add
incl
rolb
ljmp
add
add
add
adc
mov
xchg
ret
add
add
add
jp
jbe
stc
nop
es
jbe
add
push
mov
xchg
ret
sub
add
nop
cld
nop
jmp
int3
add
movb
aas
inc
push
mov
xchg
ret
ja
xchg
add
mov
push
mov
xchg
ret
add
add
adc
mov
inc
add
into
mov
sub
stc
nop
es
add
add
test
nop
es
in
pusha
add
add
stc
nop
es
adcl
add
mov
scas
enter
jb
add
or
mov
push
mov
xchg
ret
add
sahf
inc
nop
cld
nop
jmp
add
add
add
in
add
inc
es
push
push
mov
xchg
ret
fistpll
add
mov
stc
nop
es
add
or
stc
nop
es
sub
pusha
dec
lock
jg
dec
cmp
nop
es
add
mov
add
jb
insl
add
mov
sub
es
add
insl
add
xchg
movsb
add
sti
push
mov
xchg
ret
xchg
xchg
add
and
add
les
stc
nop
es
nop
add
add
nop
cld
nop
jmp
add
iret
dec
xchg
add
loope
nop
es
mov
xor
aaa
es
add
add
lret
out
inc
add
xchg
add
addr16
push
mov
xchg
ret
ja
fs
pop
adc
mov
xchg
ret
add
mov
call
nop
cld
nop
jmp
fs
mov
mov
out
dec
movzwl
stc
nop
es
add
add
add
popa
add
mov
xchg
ret
mov
push
ret
stc
nop
es
lods
lret
adc
pop
add
fsubrl
sti
inc
add
push
add
push
mov
xchg
ret
add
xchg
sub
nop
cld
nop
jmp
xchg
xchg
xor
mov
stc
nop
es
and
lods
or
es
push
push
mov
xchg
out
add
add
jnp
into
push
test
xchg
loop
jb
fidivrs
cmp
stc
nop
es
pop
add
add
enter
jb
iret
add
add
adc
nop
es
addl
dec
add
mov
nop
es
and
add
stc
jne
stc
nop
es
lods
pusha
imul
jb
daa
test
es
add
add
add
push
mov
add
cltd
xchg
add
add
add
stc
nop
es
mov
add
nop
jmp
push
add
filds
add
dec
gs
add
stc
nop
es
push
push
mov
add
jp
popa
add
nop
es
sub
imul
stc
nop
es
add
or
enter
scas
roll
xchg
ret
into
into
xor
mov
push
mov
xchg
ret
xchg
add
ja
iret
jne
stc
nop
es
cmp
or
push
cmp
rclb
outsl
inc
add
add
add
in
push
mov
nop
add
mov
push
filds
or
add
add
stc
nop
es
add
mov
stc
nop
es
add
ljmp
andb
add
add
hlt
mov
pop
jne
stc
nop
es
ss
add
add
popa
add
nop
es
xchg
pusha
add
stc
nop
es
hlt
into
into
mov
jbe
xor
out
pop
stc
nop
es
add
lret
add
add
mov
test
push
add
stc
nop
es
lods
cmp
lods
mov
stc
nop
es
pop
stc
add
adc
push
inc
add
mov
add
nop
cld
nop
jmp
mov
add
lret
add
mov
stos
push
stc
nop
es
add
cmp
dec
mov
stc
nop
es
xor
inc
decl
push
mov
xchg
ret
fidivs
add
dec
add
mov
xchg
ret
add
aaa
add
movsb
add
add
cld
nop
jmp
xchg
stc
adc
fwait
cmpw
nop
cld
nop
jmp
add
int3
fdivrp
lea
in
add
ss
cmp
ja
data16
imul
rolb
add
incl
movsl
add
jb
xor
xor
add
add
adc
nop
es
dec
mov
add
adc
add
push
mov
xchg
ret
add
push
es
insl
mov
stc
nop
es
add
cmpsl
mov
popf
stc
nop
es
add
fsubrp
mov
call
sbb
add
add
add
nop
jmp
add
jl
add
stc
nop
es
xchg
in
incl
jl
pcmpgtb
add
nop
es
ja
pop
mov
stc
nop
es
mov
nop
add
filds
lods
ret
nop
cld
nop
jmp
xchg
xor
add
push
in
inc
add
add
or
fildl
nop
cld
nop
jmp
add
add
pop
mov
jae
push
mov
xchg
ret
add
jmp
stc
nop
es
add
mov
xchg
ret
pusha
add
iret
add
add
add
mov
stc
nop
es
adc
push
lea
es
add
int3
sub
and
and
push
mov
xchg
ret
pusha
add
jbe
lret
stc
nop
es
add
int
cmp
ret
nop
cld
nop
jmp
add
roll
pop
and
nop
es
add
and
scas
push
stc
nop
es
add
pop
add
xor
add
mov
pop
push
stc
nop
es
imul
imul
add
lret
xor
xorl
nop
cld
nop
jmp
add
add
stc
nop
es
sub
add
stc
nop
es
add
xor
mov
ds
add
xchg
stc
xchg
int3
add
fiadds
fbld
adc
push
nop
cld
nop
jmp
cmp
fsubrp
jl
hlt
mov
movzwl
nop
cld
nop
jmp
sub
adc
sub
nop
es
mov
jbe
xor
stc
nop
es
stc
adc
add
nop
es
add
movsl
ss
jmp
cmpsb
imul
add
add
or
nop
jmp
pusha
jbe
add
imul
mov
xchg
ret
add
add
push
push
fimull
add
nop
es
fidivs
add
cld
nop
jmp
add
iret
lret
call
stc
nop
es
stc
int3
repz
jge
stc
nop
es
add
xor
add
and
sbb
nop
es
add
add
add
imul
in
adc
or
dec
add
insl
add
stc
nop
es
in
adc
pusha
add
or
popa
stc
nop
es
cmp
in
jmp
add
dec
xchg
stc
nop
es
mov
and
add
sbb
nop
es
add
lahf
push
nop
cld
nop
jmp
add
insl
hlt
jl
or
rolb
das
mov
nop
cld
nop
jmp
insl
add
adc
bound
mov
int3
mov
stc
nop
es
ja
add
fimull
nop
jmp
jmp
add
mov
add
stc
nop
es
add
lret
push
nop
cld
nop
jmp
mov
add
xchg
test
xor
push
mov
xchg
ret
and
int3
add
lea
cld
nop
jmp
cmp
pop
add
sub
sti
jne
stc
nop
es
or
mov
add
rep
stc
nop
es
add
add
dec
mov
es
addl
push
incl
add
push
mov
mov
xchg
ret
add
add
in
mov
nop
cld
nop
jmp
repz
add
mov
scas
mov
stc
nop
es
add
and
sub
nop
cld
nop
jmp
add
add
add
inc
add
add
sti
add
add
push
add
and
push
mov
xchg
ret
in
lods
add
xchg
cmovns
lahf
incb
xchg
ret
add
rep
add
mov
push
mov
xchg
ret
add
add
push
stc
nop
es
add
insl
nop
add
push
mov
xchg
ret
add
add
xchg
sub
add
push
mov
xchg
ret
add
add
add
cmc
add
mov
push
pop
stc
nop
es
add
pusha
mov
popa
jl
push
mov
xchg
ret
add
add
add
add
arpl
int
sar
es
add
add
ja
add
push
add
stc
nop
es
add
inc
jecxz
popa
stc
nop
es
movb
nop
ja
add
add
jl
stc
nop
es
add
add
je
stc
nop
es
in
add
add
nop
es
add
add
int3
adc
add
nop
cld
nop
jmp
xchg
add
mov
jae
push
mov
js
mov
fsubl
add
pop
loop
lock
nop
es
mov
add
out
mov
stc
nop
es
or
adc
pop
xor
stc
nop
es
incl
and
push
stc
nop
es
add
pop
jl
xor
cmp
mov
nop
es
add
mov
add
nop
es
add
mov
pop
push
mov
xchg
ret
add
add
repnz
stc
nop
es
or
inc
pop
mov
stc
nop
es
repz
xor
aaa
lret
data16
stc
nop
es
insl
add
aaa
mov
stc
nop
es
in
add
add
sbb
add
nop
cld
nop
jmp
add
add
xor
cld
nop
jmp
add
in
adc
xchg
jbe
add
push
mov
xchg
ret
movb
adc
outsl
add
stc
nop
es
add
mov
stc
nop
es
and
xchg
ss
sub
jmp
or
jl
add
int3
push
xchg
add
add
push
mov
xchg
ret
fiadds
mov
jne
stc
nop
es
xor
int
repz
mov
xchg
ret
add
mov
pop
repz
add
add
stc
nop
es
adc
into
add
push
add
nop
jmp
imul
mov
add
add
add
or
mov
add
mov
xor
nop
xchg
push
enter
stc
nop
es
add
add
jb
pop
add
add
add
xchg
cmc
jo
imul
fldl
xchg
ret
into
add
mov
pop
push
mov
xchg
ret
ja
add
mov
add
add
sbb
inc
add
imul
test
nop
cld
nop
jmp
add
add
adc
jg
stc
nop
es
adc
xor
mov
stc
nop
es
dec
add
add
orl
push
mov
xchg
ret
add
fidivs
add
popa
stc
nop
es
ljmp
xchg
add
stc
nop
es
add
imul
mov
stc
nop
es
add
add
xchg
stc
nop
es
aaa
mov
xchg
adc
add
stc
nop
es
imul
adc
push
nop
cld
nop
jmp
and
xor
mov
stc
nop
es
fidivs
add
aaa
add
mov
dec
mov
push
mov
xchg
ret
into
add
addr16
add
nop
es
add
jbe
repz
add
cmp
inc
push
adc
stc
nop
es
filds
in
dec
ret
mov
nop
es
xchg
stc
add
add
movsb
stc
nop
es
mov
and
es
xor
add
add
stc
nop
es
repz
or
out
cli
add
nop
cld
nop
jmp
jl
xchg
add
in
into
xchg
add
pop
stc
nop
es
add
add
mov
stc
nop
es
add
add
int3
and
stc
nop
es
add
add
add
add
stc
nop
es
mov
add
add
dec
add
push
mov
xchg
ret
hlt
xchg
xor
stc
movsl
mov
mov
stc
nop
es
or
dec
push
stc
nop
es
fs
xchg
in
dec
xor
jae
ret
nop
cld
nop
jmp
add
adc
add
push
mov
xchg
ret
pop
cmpsb
xchg
and
add
es
in
pop
xchg
addl
mov
cld
nop
jmp
add
add
xchg
lret
movsl
dec
push
push
mov
xchg
ret
add
hlt
fs
in
add
add
call
icebp
stc
lods
add
add
stc
nop
es
dec
add
sbb
nop
cld
nop
jmp
pusha
call
es
add
push
mov
xchg
ret
add
add
mov
add
nop
es
add
mov
subl
jb
xor
and
nop
sub
jae
jb
cld
nop
jmp
add
push
stc
nop
es
add
xor
add
push
mov
xchg
ret
imul
add
push
add
stc
nop
es
adc
cmp
jb
or
and
mov
nop
cld
nop
jmp
add
xchg
pop
je
loopne
jmp
mov
nop
es
jl
stc
dec
movzwl
nop
cld
nop
jmp
add
add
mov
cld
nop
jmp
into
xchg
add
dec
aaa
add
pop
dec
dec
nop
cld
nop
jmp
add
add
add
push
mov
enter
add
add
lods
sbb
loopne
add
mov
nop
cld
nop
jmp
jmp
lods
stc
nop
es
add
add
imul
cli
add
stc
nop
es
add
add
mov
repz
mov
nop
es
add
adc
xor
stc
nop
es
add
ja
mov
sub
les
push
mov
xchg
ret
add
add
cld
nop
jmp
repz
add
add
cmp
nop
cld
nop
jmp
xor
add
add
add
dec
stc
nop
es
add
fbstp
mov
nop
cld
nop
jmp
xchg
pop
add
lods
add
or
div
nop
cld
nop
jmp
in
add
outsb
test
nop
cld
nop
jmp
cmpl
mov
test
nop
es
add
add
mov
adc
nop
es
add
imul
loop
into
jmp
nop
cld
nop
jmp
add
test
mov
nop
cld
nop
jmp
add
add
cmp
orb
pushl
fs
mov
add
add
pop
stc
nop
es
add
lods
add
or
nop
and
mov
mov
stc
nop
es
in
adc
add
sub
add
dec
in
add
xor
xchg
in
mov
stc
nop
es
add
out
shll
add
mov
mov
stc
nop
es
aaa
add
mov
add
push
add
add
nop
es
mov
fadds
jne
stc
nop
es
add
repz
lods
inc
add
adc
or
jb
add
repz
add
dec
add
stc
nop
es
jl
ja
add
add
jecxz
push
stc
nop
es
xchg
add
add
add
cld
nop
jmp
add
add
add
nop
es
fists
add
adc
add
sub
in
add
add
jecxz
ss
pop
xor
sbb
lcall
outsb
idiv
ljmp
ss
xor
pop
push
mov
xchg
ret
add
incl
add
and
jb
mov
fmulp
and
add
push
mov
xchg
ret
hlt
add
add
stc
nop
es
add
add
add
pop
stc
nop
es
add
pop
add
add
into
data16
nop
jmp
aaa
stc
xchg
mov
stc
nop
es
cmpsb
movsl
and
lcall
nop
es
add
add
mov
clc
inc
add
pusha
add
and
push
mov
xchg
ret
dec
add
and
mov
xchg
ret
or
push
mov
jbe
stc
nop
es
and
nop
xchg
loop
mov
mov
stc
nop
es
dec
mov
push
add
popa
add
nop
es
add
add
add
add
push
mov
xchg
ret
add
pop
into
add
push
jb
add
add
inc
fiadds
jb
stc
nop
es
xchg
xor
mov
nop
es
mov
cmp
repz
lret
stc
nop
es
xchg
in
mov
add
and
mov
stc
nop
es
add
mov
andl
mov
nop
jmp
add
and
pusha
add
mov
or
mov
inc
add
cmpsb
movsl
add
cmp
add
add
incl
add
test
insb
add
stc
nop
es
add
add
mov
and
nop
cld
nop
jmp
add
add
pusha
movsb
add
mov
push
mov
xchg
ret
add
push
push
mov
xchg
ret
mov
add
add
fiadds
jg
stc
nop
es
or
ss
jp
inc
stc
nop
es
add
sub
lret
stc
nop
es
add
insl
add
add
nop
add
stc
nop
es
jmp
mov
mov
pause
cld
nop
jmp
filds
iret
lods
aaa
filds
xor
sub
push
mov
xchg
ret
sub
test
add
or
jmp
add
add
data16
outsl
push
stc
nop
es
dec
add
es
add
add
add
add
stc
nop
es
add
add
add
stc
nop
es
in
mov
pusha
mov
sbb
popa
add
mov
xchg
ret
pop
or
sub
es
xchg
add
xchg
mov
stc
nop
es
adc
iret
add
mov
cmp
es
add
add
add
push
xor
mov
push
mov
xchg
ret
sub
pop
mov
push
mov
xchg
ret
add
add
add
stc
nop
es
ficoms
or
es
mov
lea
mov
cmp
ret
pop
add
inc
add
and
stc
nop
es
repz
add
add
call
push
mov
xchg
ret
aaa
add
and
cmc
and
mov
nop
cld
nop
jmp
add
add
mov
mov
xchg
ret
mov
stc
pusha
mov
add
stc
nop
es
nop
add
in
add
stc
nop
es
add
add
aaa
add
adc
stos
mov
stc
nop
es
into
mov
loopne
nop
cld
nop
jmp
and
add
ss
mov
add
movsb
add
adc
fdivr
nop
es
and
mov
ja
sub
nop
es
adc
xchg
imul
fs
imul
stc
nop
es
add
in
or
add
stc
nop
es
adc
add
add
xor
cmc
adc
nop
es
add
add
push
stc
nop
es
add
in
add
push
push
mov
xchg
ret
xchg
add
adc
jo
call
push
mov
xchg
ret
and
incl
cld
jmp
stc
nop
es
add
or
pop
add
push
mov
xchg
ret
mov
cmpsb
sbb
jmp
mov
add
repz
add
add
shr
stc
nop
es
add
mov
and
aas
mov
stc
nop
es
aaa
mov
out
mov
stc
nop
es
add
adc
jmp
pusha
lret
add
ss
mov
nop
cld
nop
jmp
jl
add
rolb
aad
nop
nop
cld
nop
jmp
movsl
int3
lret
dec
adc
add
decl
jmp
add
xchg
and
jb
aaa
hlt
add
cmp
addl
jne
nop
cld
nop
jmp
add
lods
adc
add
nop
add
add
cmpw
stc
nop
es
add
add
mov
push
mov
xchg
ret
mov
daa
repz
mov
stc
nop
es
add
hlt
xchg
add
add
ret
pop
rep
push
mov
xchg
ret
jl
add
add
pop
mov
stc
nop
es
add
add
int3
mov
aam
and
mov
add
idiv
mov
filds
clc
nop
cld
nop
jmp
and
lods
add
or
jmp
call
loope
call
mov
mov
stc
nop
es
add
pop
or
stc
nop
es
and
sub
add
stc
nop
es
cmp
sub
nop
cld
nop
jmp
add
and
mov
stc
nop
es
add
pusha
add
insb
jmp
stc
nop
es
add
popa
nop
cld
nop
jmp
dec
in
add
add
adc
scas
movzwl
stc
nop
es
into
xchg
adc
xchg
sti
mov
push
mov
xchg
ret
add
aaa
add
int
dec
cmp
nop
es
add
adc
scas
push
stc
nop
es
add
ja
int3
in
nop
add
in
stc
nop
es
imul
add
nop
jmp
push
lods
adc
xor
add
mov
nop
es
imul
nop
sub
stc
nop
es
add
add
pop
add
add
fdivr
incl
add
out
mov
stc
nop
es
sub
add
aam
into
je
stc
nop
es
jbe
dec
lods
sub
stc
nop
es
mov
mov
nop
es
pusha
add
add
add
inc
jb
stc
nop
es
adc
mov
xlat
jb
addr16
imul
nop
jmp
add
add
add
xchg
add
push
stc
nop
es
xchg
cmpsb
add
or
add
dec
jne
stc
nop
es
xchg
add
popa
or
push
aad
add
add
in
pusha
or
adc
stc
nop
es
insl
add
and
mov
xchg
ret
add
add
mov
nop
es
add
add
lods
nop
cmp
nop
jmp
add
pusha
add
add
xchg
cs
stc
nop
es
add
add
pop
add
enter
jb
add
pusha
add
xor
out
sub
stc
nop
es
add
add
mov
nop
cld
nop
jmp
add
add
push
push
mov
xchg
ret
in
jbe
jl
lret
cld
nop
jmp
stc
filds
add
nop
or
ret
nop
cld
nop
jmp
add
popf
je
stc
nop
es
xor
add
shl
add
add
add
pop
lcall
clc
incl
add
pushl
pop
popl
stc
nop
es
jl
mov
outsb
mov
push
mov
xchg
ret
lods
add
xchg
cld
mov
stc
nop
es
pusha
adc
dec
xchg
stc
nop
es
add
add
add
add
add
addb
add
es
adc
and
add
test
stc
nop
es
lods
add
add
mov
xchg
ret
adc
hlt
add
xchg
ja
add
int
jmp
roll
xchg
ret
add
cld
nop
jmp
add
mov
pushl
fisubrl
cli
stc
nop
es
stc
adc
add
add
call
nop
cld
nop
jmp
movb
add
mov
aam
add
add
or
mov
nop
cld
nop
jmp
add
in
add
push
cmp
testb
addb
pop
stc
nop
es
add
add
pusha
xor
fidivrs
push
mov
xchg
ret
sub
adc
add
stc
nop
es
add
xchg
mov
insl
dec
push
push
stc
nop
es
add
add
xor
add
mov
jno
stc
nop
es
add
xchg
add
call
nop
cld
nop
jmp
incl
add
test
popa
loopne
add
pop
add
lret
pop
mov
stc
nop
es
cmp
pop
pop
jmp
loop
nop
cld
nop
jmp
xchg
add
xlat
and
mov
mov
stc
nop
es
es
dec
add
add
stc
nop
es
pop
pop
jbe
mov
nop
cld
nop
jmp
xchg
add
cmp
inc
adc
nop
es
sub
jl
lea
stc
nop
es
stc
imul
add
add
stc
nop
es
add
xor
nop
cld
nop
jmp
add
add
daa
pushf
mov
push
mov
xchg
ret
xchg
in
or
add
stc
nop
es
movsl
add
mov
push
mov
xchg
ret
cmp
mov
add
add
pop
stc
nop
es
cmp
add
nop
add
push
mov
es
add
lret
into
hlt
adcl
nop
es
mov
mov
inc
and
stc
nop
es
movb
es
mov
push
mov
js
jl
ret
add
add
ljmp
enter
nop
cld
nop
jmp
dec
pop
or
inc
stc
nop
es
cmpsb
imul
add
mov
nop
cld
nop
jmp
add
es
in
adc
push
lock
in
mov
stc
nop
es
add
movsl
add
xor
sub
nop
es
cmp
add
cmp
nop
es
nop
adc
add
adc
mov
pop
nop
cld
nop
jmp
add
add
outsb
test
nop
cld
nop
jmp
add
ss
mov
add
add
lock
add
add
in
xchg
inc
mov
loopne
dec
push
mov
add
push
bound
cld
lcall
cld
dec
fisubrl
and
add
sub
mov
ljmp
ds
adc
aaa
pop
in
and
add
mov
nop
add
je
dec
push
add
or
add
dec
fucomp
lds
sub
push
add
add
mov
loopne
addb
testb
testb
jno
sbb
dec
int
repz
jae
or
pop
pop
add
adc
or
sbb
push
add
pop
xlat
xor
scas
call
push
pop
add
mov
sbb
mov
push
or
xorl
add
fidivs
add
dec
dec
sub
xchg
xchg
lods
hlt
add
sbb
arpl
add
pop
sub
add
jb
ljmp
add
xchg
mov
inc
add
add
or
adc
xor
xor
iret
dec
add
add
mov
add
mov
je
add
add
mov
pusha
add
xor
fsubr
sbb
addr16
cld
fwait
push
dec
push
mov
btc
xchg
inc
adc
scas
inc
sbb
add
dec
sbb
add
add
and
mov
push
and
add
movb
sbb
add
sbb
mov
lds
adc
ljmp
add
call
push
enter
fnstsw
add
add
lods
push
add
mov
add
imull
jnp
mov
hlt
add
scas
loop
mov
jnp
add
dec
cmpsl
add
mov
xchg
add
add
xchg
xchg
mov
jne
add
mov
lcall
push
mov
add
add
xor
pop
jp
fidivl
add
in
and
mov
or
test
popf
inc
sbb
repnz
xlat
outsb
lods
adc
js
add
jae
fsubrs
hlt
add
mov
push
out
add
add
sti
jg
add
dec
push
sbb
mov
add
mov
xchg
and
mov
inc
or
push
adc
daa
shl
ss
add
repnz
add
ja
or
cmpsl
push
rcr
in
adc
add
add
mov
push
dec
and
iret
add
pop
call
dec
mov
add
lret
sbb
add
add
sarl
pop
aaa
popa
sbb
jge
add
aaa
test
add
jo
insl
daa
clc
fwait
sbb
clc
dec
inc
add
add
add
mov
popa
insl
mov
int3
push
add
ja
add
add
add
dec
loopne
inc
add
and
adcl
add
aam
pushf
popa
cmp
dec
and
add
inc
cmpsl
xchg
add
add
lcall
push
add
add
in
sub
jb
or
add
xchg
cmp
xchg
mov
add
cli
and
mov
clc
push
pop
test
add
hlt
add
inc
add
or
add
add
add
add
xor
add
fisttpll
add
rolb
stos
into
cmpsl
and
add
add
push
and
or
lcall
pop
adc
jnp
add
add
add
add
mov
cltd
mov
stc
loop
mov
cmpsb
add
adc
loop
ljmp
xchg
push
add
ret
sbb
adc
dec
repnz
and
pushf
jb
nop
add
mov
aaa
sub
call
add
in
sbb
sub
add
jg
movsb
add
sub
add
add
add
add
mov
cmp
sub
ror
or
lea
out
les
inc
add
inc
xchg
and
mov
add
test
dec
mov
cs
pop
dec
daa
mov
cmp
add
outsb
xchg
push
mov
add
testb
in
out
xchg
add
gs
dec
xor
movb
cli
xor
rcrl
clc
xor
add
jecxz
add
add
aam
sbb
ds
mov
mov
mov
add
imul
add
cmp
or
dec
scas
mov
rolb
add
iret
fisubl
imull
jae
stc
xchg
add
lret
add
dec
gs
add
lods
adc
add
add
mov
rolb
add
shll
add
ret
pop
dec
mov
popa
xchg
cmp
dec
out
mov
stos
jbe
xor
push
add
add
add
lods
hlt
add
pushf
loope
add
lcall
or
add
inc
iret
dec
rcl
add
add
pop
pusha
add
add
dec
inc
das
xchg
add
add
leave
cld
loop
test
popf
xor
pop
testb
and
xor
add
xchg
inc
add
clc
cltd
addb
mov
inc
cwtl
jmp
addb
add
inc
add
xchg
xor
mov
add
sbb
push
mov
mov
add
jecxz
add
adcl
mov
add
aad
mov
add
divps
and
mov
std
push
stos
add
cmpl
icebp
sbb
push
rolb
or
clc
aaa
adc
add
xchg
fisttpl
add
out
mov
test
add
add
xor
lea
mov
add
mov
add
test
pop
scas
sbb
testl
mov
jns
push
pop
cmc
mov
add
cmp
add
add
adc
add
mov
movsl
fisttpll
add
cld
pop
stos
mov
enter
jg
inc
enter
fwait
add
mov
rolb
adc
inc
add
ja
dec
lds
add
inc
add
xor
mov
scas
pusha
add
orl
aam
pop
jmp
add
mov
dec
and
mov
jp
add
dec
arpl
add
ret
adc
push
push
dec
and
mov
jle
xchg
loope
sti
xlat
rolb
pop
out
aam
test
sub
add
add
clc
adc
lea
push
add
jl
add
inc
add
pop
inc
add
push
add
add
add
or
loopne
aas
push
add
mov
push
call
lods
push
add
mov
push
cltd
and
cwtl
or
daa
js
mov
push
add
sub
ret
or
add
add
add
das
rolb
mov
jbe
add
mov
add
cmc
mov
cmpsb
add
jnp
cmp
jg
sub
sar
add
and
int
ds
sbb
sub
imul
add
mov
and
add
cmp
add
mov
fmuls
sbb
sbb
jae
enter
add
ja
xchg
add
fimuls
outsl
lods
xor
sub
mov
jecxz
dec
xor
dec
sbb
mov
jo
in
lock
mov
jge
dec
and
add
sub
inc
mov
pop
xchg
cmc
cmp
cld
ja
sub
ss
stos
out
aam
cmp
mov
add
mov
adc
add
mov
lods
inc
pop
clc
repnz
xchg
dec
pop
jge
cmp
jle
add
push
add
add
mov
jbe
or
xor
adc
inc
add
les
add
add
add
addb
pop
mov
in
add
cli
push
jp
cmp
add
push
scas
cmpsb
add
add
add
and
mov
add
add
add
add
add
les
stc
xor
ret
mov
test
adc
ret
mov
hlt
add
adc
xchg
add
mov
les
loopne
popa
pop
mov
lock
rolb
popf
or
xor
add
xlat
lds
add
mov
dec
mov
inc
add
add
movsl
scas
sbb
idivl
rolb
pop
inc
jl
mov
aaa
aam
mov
fimuls
addb
mov
add
xchg
dec
mov
jl
dec
and
mov
int
cmpsl
cmp
add
std
add
push
add
mov
sbb
jge
cltd
push
add
ja
in
in
jb
rcrl
fisubrs
cmp
add
jp
roll
fimuls
push
mov
shll
repz
addr16
inc
add
leave
fsubrl
add
add
add
xor
cli
jnp
mov
add
sub
mov
mov
fs
sub
xchg
pusha
add
push
jl
add
push
add
add
add
push
add
cmp
call
add
inc
add
and
lahf
xor
pop
jge
add
pop
iret
les
jg
das
xchg
iret
enter
sub
mov
sbb
xchg
mov
add
or
add
add
and
cmp
mov
cli
out
mov
adc
add
jmp
ja
add
add
mov
rol
add
push
add
fmuls
add
shrl
test
add
cwtl
inc
cli
out
sbb
add
sub
lret
pop
jl
lret
pop
jb
sar
cld
xlat
cmp
add
cmc
jbe
nop
add
leave
sub
into
cmpsl
addb
in
lds
add
add
out
sub
add
fimull
add
sub
cmp
add
add
sbb
add
add
xor
add
repnz
leave
add
add
test
mov
add
push
add
lods
adc
inc
add
jnp
in
pop
mov
add
inc
cmpsb
add
call
add
test
into
sti
addb
add
mov
cmp
mov
add
add
add
in
lret
or
fwait
cmp
lcall
sbb
clc
adc
testl
mov
bound
mov
add
repz
mov
xor
cmp
add
or
push
add
add
push
add
cwtl
xchg
add
add
inc
add
push
enter
add
add
sub
add
xor
cli
mov
inc
add
add
pop
jp
add
add
sahf
cmp
sahf
pop
jg
jne,pn
mov
xchg
add
lcall
mov
add
pusha
add
arpl
in
fcomps
add
sub
add
add
imul
daa
inc
add
jmp
add
add
pop
stos
cmp
hlt
add
andl
clc
lods
mov
jae
add
lock
add
mov
arpl
add
dec
push
add
stos
xor
or
adc
call
adc
or
add
sbb
imul
rolb
mov
mov
add
jge
shrl
add
inc
repz
insb
aas
jp
add
cltd
mov
add
lods
mov
fiadds
imul
add
scas
or
out
outsb
ds
hlt
add
mov
mov
aaa
arpl
add
mov
daa
sbb
stos
push
add
pop
xor
js
idiv
fistpl
add
jne
jnp
call
add
xor
mov
dec
cmpsl
mov
fcoms
mov
inc
add
add
xor
jg
sbb
add
insb
and
adc
xor
call
lds
add
cmpl
pop
insl
repnz
add
push
inc
add
add
leave
or
cmp
add
add
out
scas
lret
jae
add
add
or
cld
cmp
out
icebp
in
rolb
imul
mov
add
add
or
add
sbb
push
sahf
push
repnz
add
cmpsb
add
add
cld
daa
mov
shrl
aas
xlat
lahf
stc
loopne
cltd
jns
mov
and
add
add
cmp
add
aaa
leave
cmp
inc
lock
mov
popf
test
lret
mov
jle
add
push
add
out
xchg
push
jae
add
add
mov
add
mov
insl
and
xchg
mov
xchg
mov
iret
scas
inc
xor
add
aaa
pop
xchg
in
push
repz
imul
imull
add
lods
pop
jge
outsl
or
mov
push
and
movsb
add
cmp
xor
inc
jmp
lret
sub
outsl
lock
imul
data16
and
dec
in
dec
and
sub
dec
cs
add
pushf
cmpsl
push
add
add
push
add
mov
mov
add
add
movsl
daa
jns
dec
or
lcall
add
mov
pop
cmp
test
clc
mov
xor
and
push
add
push
cld
mov
mov
and
fists
dec
addb
sbb
add
repz
pop
add
adc
dec
sahf
rolb
pusha
add
xchg
xor
cld
rolb
cmp
or
add
add
add
cs
add
dec
mov
ja
add
add
dec
cmp
and
fld
add
lea
cmc
mov
int
mov
sub
cmc
mov
xchg
add
ja
add
add
cld
outsl
mov
xchg
add
add
ds
add
fs
add
add
adc
movsb
add
mov
mov
popa
f2xm1
add
cmp
add
sti
stos
add
out
mov
and
mov
add
addb
push
add
outsl
mov
jg
outsl
xchg
mov
nop
add
add
mov
sahf
cmp
add
adc
cmc
jb
cmp
pop
mov
xchg
lds
xor
repz
add
add
add
jge
inc
mov
add
icebp
jmp
lret
adc
fistl
add
add
cmc
push
add
rol
mov
fistpll
jbe
or
dec
cmp
out
dec
jno
add
add
push
add
mov
adc
push
add
cmp
add
xchg
add
jecxz
jo
out
add
mov
add
xor
add
add
data16
mov
lcall
loopne
and
mov
adc
lods
dec
sbb
add
push
add
iret
and
xor
add
int3
pop
push
add
inc
inc
add
pusha
add
mov
add
fisttpll
jo
hlt
add
push
add
addb
add
mov
dec
push
add
mov
pop
and
mov
or
add
mov
add
adc
mov
insb
xlat
lock
add
add
add
loope
or
dec
pop
mov
sbb
popf
jl
pop
sbb
add
add
cld
mov
dec
addb
add
push
add
cltd
mov
fisttpll
hlt
add
int
cli
inc
mov
jns
mov
push
inc
lcall
add
dec
in
sti
mov
fmuls
ljmp
add
add
jl
jne
push
add
add
xchg
xor
pushf
movsb
add
add
add
add
fbld
add
faddp
inc
add
loopne
mov
add
add
add
mov
sbb
int3
xor
ret
movsl
xor
push
add
sub
add
push
add
lret
inc
jecxz
aad
adc
push
add
push
jae
addr16
add
add
mov
int
les
pushf
pusha
add
test
adc
das
pop
mov
add
inc
aad
add
mov
repz
into
hlt
add
xchg
add
stos
xchg
add
ljmp
add
outsb
sub
xchg
add
pop
add
add
pop
or
mov
loope
add
mov
les
jmp
mov
orl
sub
or
btr
stos
cmpsl
jo
cmp
inc
adc
add
inc
add
mov
bound
mov
push
and
cli
sbb
add
cmpsl
inc
add
add
push
add
cli
inc
testb
add
mov
mov
addb
mov
add
add
push
and
mov
mov
add
stos
lret
mov
addb
ret
repz
sub
add
add
stc
outsl
sbb
add
insl
lahf
xchg
push
cmp
xor
add
cmp
stc
inc
xchg
jp
add
pop
push
sbb
push
add
cmp
ljmp
add
add
cmp
pop
sub
add
popf
adc
xor
push
add
gs
add
add
addb
add
and
les
add
add
push
pop
xchg
adc
adc
xorl
popa
sbb
dec
sbb
add
add
add
mov
dec
cmp
add
inc
mov
and
push
pop
in
xor
add
push
push
add
push
pop
dec
in
scas
out
mov
add
sbb
mov
xchg
fldt
cwtl
out
mov
add
addl
rcll
ror
popf
push
push
cmpsl
pop
aas
sbb
add
jmp
jae
shl
add
in
dec
mov
add
fcmovb
xor
pop
or
and
mov
pushf
push
add
add
mov
shll
pushf
leave
dec
call
add
adcl
shll
sub
jno
sub
data16
scas
repnz
lcall
jmp
ret
int3
dec
mov
inc
push
add
jge
test
in
pop
jno
add
sahf
in
xor
jae
add
fsubl
dec
in
push
sti
dec
mov
or
fucomp
mov
or
xchg
add
add
and
mov
adc
mov
cs
jg
mov
mov
je
mov
insl
mov
cs
dec
jge
rorl
mov
add
add
push
add
out
and
mov
add
mov
cmp
dec
and
pop
rolb
and
add
add
jp
mov
xlat
jbe
in
xchg
xchg
add
gs
sub
pop
jl
push
scas
jbe
xor
repnz
add
adc
add
lods
mov
scas
inc
lods
push
add
ljmp
lret
sub
dec
mov
outsl
addb
add
ret
ja
std
push
add
arpl
ss
mov
add
lods
push
add
add
cmc
adc
jo
lock
add
popa
ret
add
rcrl
and
mov
imul
add
mov
sbb
add
aas
mov
je
data16
mov
xchg
je
or
mov
pop
lahf
jp
sbb
add
xchg
pop
notl
es
xchg
add
in
mov
xor
lea
add
adc
dec
and
mov
fistpll
mov
mov
add
push
add
pop
and
les
dec
ret
add
data16
add
leave
imul
jb
nop
add
add
mov
xor
cld
mov
cmp
add
mov
jbe
daa
and
add
les
jl
mov
dec
push
push
adc
add
jge
pop
test
xchg
loop
mov
dec
fimull
jge
add
scas
add
add
add
js
add
lods
in
mov
cmp
lret
xorl
add
rolb
jp
popf
push
add
or
rolb
daa
push
lcall
enter
mov
add
add
mov
mov
mov
pusha
add
xchg
cwtl
xor
pusha
add
lods
imul
rolb
jnp
push
add
add
into
dec
fstpl
ficoms
add
in
stos
int
aaa
dec
cld
lea
js
mov
mov
xchg
arpl
add
out
mov
cmpsb
add
sbb
add
mov
add
add
add
inc
add
leave
aam
mov
sbb
and
mov
add
mov
shll
push
add
mov
das
jecxz
add
arpl
arpl
add
cmp
fwait
call
add
mov
add
jecxz
hlt
add
add
add
mov
xor
addb
push
popf
xchg
add
add
mov
and
mov
add
adc
add
mov
add
movsb
add
mov
dec
sub
inc
add
shll
imul
and
and
loopne
push
add
add
gs
xsaveopt
add
add
mov
sti
push
add
fcmovbe
add
inc
add
add
add
lret
enter
push
add
aam
lock
fnstsw
sbb
cli
addl
stos
add
jg
add
mov
sbbl
cmp
repz
add
ret
add
lcall
pop
xchg
add
add
add
inc
mov
iret
adc
and
push
add
inc
jns
fildl
add
adc
add
add
mov
das
arpl
push
scas
jns
add
and
pop
fstpl
icebp
xlat
repz
rolb
mov
cmp
cmc
and
mov
das
inc
sub
add
hlt
add
xchg
add
add
or
or
adc
ljmp
inc
add
or
add
mov
add
inc
add
ljmp
cmp
cmp
add
pop
imul
add
or
or
mov
sbb
sub
cmp
shll
mov
mov
inc
add
pop
xor
jle
add
test
cmp
add
add
das
mov
test
mov
leave
cmc
sbb
add
push
xor
cmp
out
lahf
inc
ja
add
mov
fstpt
add
add
dec
testb
add
jne
cmp
mov
mov
add
add
mov
outsl
cmp
cmpsl
adcl
pop
lret
xchg
add
mov
dec
xor
add
add
inc
push
mov
stos
lcall
in
dec
int3
add
mov
fidivs
or
xor
leave
xchg
mov
sbb
add
fxtract
add
cmpsl
or
ljmp
dec
in
mov
sub
add
inc
add
dec
pop
lcall
jne
add
in
add
add
xchg
add
cmp
pop
sub
cmovs
add
fdivrs
mov
add
add
add
xchg
add
add
lcall
add
jno
or
push
aad
popf
pop
mov
add
mov
test
add
lret
data16
mov
add
add
jmp
jmp
add
add
aad
add
fdivr
mov
mov
lea
dec
sbb
mov
cmpxchg
cmp
aad
add
out
pop
jl
push
add
sub
push
add
cmp
add
add
mov
add
push
stos
mov
add
jg
dec
or
mov
jb
push
add
sbb
add
add
sub
add
lahf
xchg
mov
jns
push
inc
mov
xor
push
ds
add
xor
add
mov
rolb
add
add
or
test
sbb
xchg
sti
and
mov
pop
sbb
mov
stos
jg
adc
dec
dec
jl
and
ds
push
push
cmp
jge
jle
add
cmp
rolb
xor
mov
inc
add
pop
or
xchg
inc
rolb
push
add
enter
mov
xor
ret
cmpsl
pop
int
xchg
add
jmp
adc
movsl
push
mov
loopne
lcall
xlat
jmp
add
mov
add
aad
xchg
testb
lgs
ret
pop
push
hlt
add
add
push
add
mov
add
mov
pop
push
add
iret
pushf
sbb
aad
add
xchg
pop
jmp
lret
fmull
add
add
add
push
add
inc
push
cmc
dec
jmp
add
cmpsb
add
cltd
test
sbb
add
xor
mov
test
dec
movsb
add
jmp
cmp
add
mov
add
push
test
sub
push
add
enter
mov
add
and
mov
sbb
add
add
add
loopne
ljmp
add
ret
add
inc
jmp
dec
cmp
lods
mov
add
pop
popa
dec
mov
mov
stos
inc
add
addb
aam
aam
sbb
mov
fisubl
icebp
push
add
pop
and
cmc
dec
inc
inc
negl
cmc
xchg
mov
idivl
add
sbb
or
add
add
shrl
lret
cld
mov
scas
add
push
add
jb
lcall
sbb
mov
je
in
sbb
insl
js
add
ret
add
add
add
add
decl
fcmovne
mov
cmpsl
sub
cli
or
push
add
add
inc
call
shll
scas
push
add
jle
add
mov
sub
adc
rolb
add
jmp
add
movsb
add
cmp
rolb
pop
sub
mov
add
dec
and
mov
jmp
push
add
jno
add
push
add
add
sub
mov
add
mov
add
mov
add
push
push
fstpt
mov
mov
xchg
jns
and
cmp
fcompp
addr16
sub
dec
add
in
test
fcoms
push
add
popf
test
jae
add
add
das
addb
dec
mov
rcrl
add
lret
add
testb
xchg
and
add
adc
and
outsb
mov
add
ret
aaa
loop
mov
dec
push
or
incl
in
adc
test
addb
add
mov
jl
scas
cli
sti
int3
out
addl
and
stos
jne
add
jne
jmp
add
mov
test
and
out
cmp
mov
mov
sbb
add
add
mov
add
sub
add
scas
je
mov
pop
mov
mov
pop
mov
adc
xchg
mov
inc
add
add
ds
cwtl
inc
add
test
mov
adc
add
test
add
add
or
imul
add
mov
and
push
scas
mov
std
mov
inc
add
add
sub
pop
add
xor
cwtl
hlt
add
add
cmc
int3
mov
pusha
add
add
add
mov
data16
je
cmc
hlt
add
jns
add
cli
enter
aam
stos
out
int3
ret
jecxz
sbb
xor
or
sbb
popa
lods
aad
fisubl
add
pop
mov
orl
add
rcrl
aad
int
add
add
add
aad
xchg
xchg
add
sbb
cmp
push
and
push
push
add
or
add
loopne
clc
ret
cmp
or
cld
cld
pop
ret
add
add
xchg
sbb
bound
mov
add
mov
add
mov
lock
pop
lock
push
add
test
jecxz
push
add
mov
insb
dec
enter
lods
hlt
add
sub
push
cmpsl
lahf
sub
sub
add
add
insl
mov
add
scas
stos
mov
scas
scas
faddl
addb
mov
add
cmp
popa
or
cld
jle
in
add
movsl
rcl
add
sbb
add
fadd
add
mov
stc
jg
or
mov
add
mov
in
pop
je
cmp
repz
in
xchg
enter
add
mov
adc
ds
stos
xor
xor
add
dec
lock
ljmp
incb
push
add
in
ljmp
dec
cmpsb
add
add
or
ret
add
cltd
pop
xor
mov
sub
mov
xchg
out
aad
add
dec
adc
add
add
push
push
add
push
leave
incl
add
inc
cmp
clc
pop
push
fstpt
cmpsb
add
add
push
add
add
adc
test
aad
mov
add
sbb
popf
pop
iret
mov
xorl
push
add
push
add
stos
icebp
ja
pushf
fidivs
mov
pop
repz
ficoms
adc
jmp
in
inc
sbb
rcrl
pusha
add
int3
cmp
adc
addb
shll
fistl
sub
add
xor
inc
sbb
add
arpl
ficompl
sahf
ja
and
and
mov
lods
sbb
add
pushf
adc
mov
jno
hlt
add
test
inc
add
int3
fnsave
clc
xchg
add
lahf
shll
outsl
mov
lods
ret
jno
push
xorl
xchg
mov
mov
mov
or
jmp
xchg
data16
rolb
and
les
movb
xchg
add
pop
push
add
xor
out
pop
sbb
test
sub
cwtl
sub
add
cwtl
jmp
les
jnp
cmpsb
add
dec
addr16
or
or
fcmovnbe
add
jecxz
add
mov
bound
mov
mov
addl
mov
xor
fmuls
ljmp
fnsave
mov
pop
jecxz
xchg
fdiv
mov
mov
sbb
mov
or
mov
sub
pop
bound
mov
add
mov
rolb
sub
pop
push
add
mov
add
mov
add
mov
jmp
add
mov
add
testb
add
add
flds
add
push
add
leave
xchg
add
xchg
add
insb
fdivrl
ss
movsb
add
cmp
sbb
fucomip
sbb
pop
popf
xchg
mov
mov
pop
movsb
add
test
xor
and
mov
or
pusha
add
scas
mov
xchg
pop
dec
inc
add
mov
mov
aam
sbbl
add
mov
add
sub
call
add
in
mov
addb
sbb
xchg
or
pop
lret
adc
lret
test
mov
push
add
rolb
lcall
jge,pt
ret
pop
stos
adc
pop
sbb
jbe
imul
adc
cmp
inc
outsl
scas
pushf
addl
sub
pop
push
add
add
leave
test
xor
dec
fcmovnu
inc
and
dec
sub
pop
adc
rolb
adc
sbb
movsl
add
and
arpl
add
add
add
scas
test
push
add
or
mov
sub
popl
inc
add
inc
cmp
outsl
out
inc
add
add
add
jb
add
and
stos
add
add
adc
fsubrl
and
add
cltd
jae
test
pop
pop
push
add
pop
push
add
add
add
sub
add
sti
roll
loopne
add
add
xor
loope
add
add
fmul
push
pop
dec
xchg
add
or
repz
cmp
out
in
xchg
addb
add
pop
cmp
xor
dec
sbb
in
scas
test
leave
and
add
push
or
addb
add
enter
add
xchg
or
mov
dec
int3
dec
jecxz
add
add
push
inc
jmp
lret
cli
push
popf
pop
pop
decb
inc
add
jae
add
add
xor
movsl
out
add
add
add
add
iret
insl
mov
add
mov
jnp
add
add
pop
add
insl
sbb
out
ret
mov
imul
xchg
add
stos
push
sub
movb
add
test
and
mov
cmpsl
pop
sahf
xor
cmpsb
add
in
mov
rcpps
adc
inc
add
das
popa
jmp
ficomps
cmpsl
mov
add
push
add
dec
sbb
fwait
xchg
add
add
lret
dec
cmp
and
xlat
fsubl
mov
add
pop
mov
decl
add
mov
imul
dec
clc
in
lea
aad
inc
movsb
add
sbb
add
add
xor
mov
push
add
add
add
fdivl
aas
psrad
stos
insl
mov
je
out
mov
lret
pop
sbb
add
out
xor
in
or
outsl
xor
cmp
cwtl
sbb
inc
add
xor
testb
add
or
rcr
sbb
add
lea
add
or
add
add
mov
iret
inc
add
pextrw
and
add
mov
add
mov
in
lret
add
mov
inc
dec
lret
nop
add
add
jns
lcall
scas
out
push
add
add
add
add
testb
fwait
xchg
xor
mov
data16
aad
cmp
add
add
shll
mov
push
add
add
add
inc
add
jge
dec
sub
mov
or
adc
or
and
mov
jbe
imul
add
push
dec
jge
add
popf
subl
cmp
dec
lock
out
in
mov
test
jns
outsb
testb
inc
mov
xchg
add
test
xor
cmp
mov
inc
rolb
cmp
or
add
pushf
fldcw
ret
mov
add
and
mov
mov
lret
pop
je
dec
pop
xchg
xor
shll
add
cmpsl
mov
dec
dec
das
movsl
rolb
stc
sahf
ja
dec
dec
lahf
jg
add
mov
jnp
aam
push
mov
daa
or
sub
sbb
sub
add
sub
add
xchg
add
add
bound
mov
pop
sti
fadds
test
sub
movb
stos
pop
fildll
cmp
jae
add
popa
cmpsl
rolb
lods
fcmovnu
addb
imul
popf
inc
mov
add
in
push
add
jb
lock
inc
add
add
add
and
add
jmp
and
mov
call
add
pop
rolb
push
xchg
xor
push
add
leave
mov
fsubs
stos
sub
lods
push
mov
add
sbb
into
xchg
jl
add
outsl
add
popa
push
add
add
mov
sbb
jne
add
add
mov
imul
pop
ret
add
rolb
sbb
repnz
add
add
jp
shll
testb
sub
add
add
sbb
add
mov
iret
xchg
clc
dec
sub
pushf
in
sbb
das
and
mov
sub
xor
inc
add
or
inc
add
loope
add
add
add
add
lock
push
dec
jae
add
iret
jne
add
test
push
adc
add
mov
jno
fists
insl
add
jb
jg
cli
mov
mov
mov
push
add
scas
popa
nop
add
sub
xchg
add
add
stos
fmulp
testb
add
xchg
sbb
jb
adc
jb
lcall
xor
mov
add
add
adc
mov
aam
and
repz
jmp
mov
pcmpeqb
jmp
pop
adc
and
adc
gs
add
movsl
jp
outsl
ds
add
xchg
add
xchg
add
add
and
outsb
aas
push
add
mov
or
add
jle
cli
fildll
test
mov
movb
jne
and
test
pop
xlat
loope
add
outsb
and
mov
repnz
add
adc
ret
xlat
loopne
mov
add
xchg
les
pop
iret
push
xlat
cmp
daa
mov
cwtl
xor
mov
scas
dec
mov
sub
add
mov
cmpsl
fldcw
sbb
push
dec
inc
add
dec
in
pop
int
repnz
scas
fisubl
mov
mov
add
mov
sub
add
fs
cmp
add
nop
add
ret
add
jmp
add
clc
lcall
xchg
repnz
loopne
add
les
sub
add
imull
fists
xor
mov
add
pop
inc
lcall
rolb
sbb
xlat
jb
lock
add
mov
frstor
xor
cmp
mov
or
cmp
jno
int
push
push
and
mov
add
push
add
in
add
das
arpl
sti
add
add
lods
pminsw
add
inc
add
jle
pop
xor
jnp
push
stos
mov
jnp
add
add
pop
loopne
inc
lahf
ljmp
add
out
add
mov
insb
pop
pop
addb
lea
loope
daa
pop
je
sbb
mov
call
adc
ljmp
mov
fndisi(8087
cmp
out
sbb
add
push
mov
adc
jge
in
jnp
hlt
add
lret
mov
sti
repnz
enter
or
inc
add
gs
test
xor
gs
ljmp
add
daa
mov
or
add
fwait
xor
and
mov
xchg
jae
nop
add
sub
xor
xor
in
repnz
cmc
lods
int3
push
testl
test
add
rolb
mov
sub
call
adc
je
pop
adc
mov
adc
enter
in
fcmovnb
add
inc
push
add
repnz
stos
cmp
push
add
and
js
add
add
push
arpl
dec
loop
cmp
repz
in
adc
add
add
jns
jo
or
out
data16
pop
pop
jecxz
add
mov
and
stos
pop
test
add
repnz
inc
mov
rolb
mov
pop
mov
inc
add
add
ljmp
push
add
add
fcoml
mov
inc
add
loope
xrelease
xor
nop
add
cmpsb
add
mov
popa
ret
or
mov
scas
gs
out
cmp
imul
incb
jmp
xchg
add
arpl
lcall
mov
fsubrl
add
inc
or
add
popa
push
add
or
incb
mov
addb
out
out
push
jns
insb
xor
adc
add
adc
repnz
cwtl
fidivl
cmc
sub
add
mov
xor
pop
fmull
scas
cmc
xchg
push
inc
lret
jmp
inc
add
and
jl
push
add
add
push
add
mov
add
add
aad
add
add
mov
cmp
cs
add
insl
dec
test
and
add
xor
add
test
push
xor
sub
ja
pop
push
fdivrl
add
out
mov
and
mov
add
test
push
add
testb
cwtl
test
out
data16
and
lods
sahf
test
add
ljmp
add
add
ds
pop
jo
dec
jecxz
pop
std
mov
xor
add
and
mov
add
add
fcoml
cwtl
xor
xchg
sti
push
add
dec
sbbl
add
insb
insl
pop
inc
add
add
movsl
in
pop
rolb
cmpsb
add
aas
rolb
sarl
fstpl
add
dec
rolb
mov
add
add
cwtl
fsubrl
mov
cmp
add
adc
xchg
add
add
add
cld
pop
mov
lods
aad
ja
stos
jge
add
sbb
xchg
imul
out
outsl
adc
ljmp
addb
movsl
repz
rorl
dec
jae
mov
pusha
add
int
fcoms
je
push
add
mov
dec
dec
insl
in
data16
pusha
add
xor
iret
mov
add
in
lcall
data16
stos
vmovaps
mov
cltd
cmp
aaa
into
gs
add
fistl
jge
mov
push
sub
gs
xor
repz
call
add
add
mov
dec
stos
cmp
aad
mov
loopne
lock
add
add
add
add
add
add
adc
cmp
lds
call
jae
in
out
lahf
mov
lahf
or
loope
cmp
mov
shll
pop
dec
rolb
stc
ss
cmc
or
repz
add
clc
pop
stc
adc
cmp
lods
ret
out
shrl
call
add
add
rolb
sti
inc
add
insb
data16
movsb
add
rolb
push
add
lea
adc
into
xchg
add
ficomps
or
data16
testb
test
add
mov
addb
pop
fwait
xor
cs
sahf
lods
test
add
mov
jmp
add
mov
add
add
add
test
arpl
cld
dec
dec
jge
pop
mov
mov
xchg
add
mov
add
add
jbe
nop
add
mov
add
testb
cmpl
loopne
jg
fxch
test
je
push
bound
mov
loopne
movsb
add
lock
mov
rolb
mov
cmp
pop
movsl
pop
mov
into
fisubl
shrl
movb
xchg
add
xor
jp
cmp
sbb
mov
add
inc
add
rorl
insl
dec
xchg
add
mov
mov
insb
repnz
xchg
add
fmull
add
pop
mov
mov
jb
lds
sbb
add
in
add
sub
add
xor
cltd
add
mov
xor
and
lods
push
add
push
cmc
out
bound
mov
xlat
add
mov
add
jmp
add
mov
push
xor
lock
add
xchg
add
popa
and
mov
mov
fsub
push
xchg
add
add
add
sahf
loop
in
pop
stos
and
iret
xor
jno
add
cmpsl
loopne
cmp
add
xchg
outsl
arpl
pushf
pop
mov
repnz
add
jo
popa
cld
outsl
jae
sbb
subl
ret
mov
outsl
jbe
addb
add
add
pop
push
dec
pop
jo
add
mov
add
mov
popf
fmul
or
jbe
inc
push
dec
adc
pop
add
inc
push
add
ja
aaa
je
xchg
mov
test
pop
movsl
add
inc
ja
add
add
or
inc
add
add
add
pop
jnp
sahf
xchg
addb
rolb
ljmp
je
mov
call
add
call
cmc
inc
dec
sbb
cld
pop
adcl
mov
mov
xchg
inc
add
add
cwtl
fdivr
add
out
add
add
mov
add
sbb
xor
mov
ret
add
mov
add
sbb
jns
in
add
mov
and
decl
mov
mov
adc
lret
jge
add
add
outsl
aam
in
pop
pop
cmp
lahf
cmpsb
add
mov
add
or
shrl
add
adc
ja
add
or
adc
mov
ds
cli
or
test
add
das
pop
test
add
mov
add
add
stc
neg
cmp
rcr
pop
mov
movsl
les
rolb
add
sbb
add
push
pop
push
sub
add
ret
insl
andl
add
add
jns
sbb
or
mov
rolb
in
dec
jg
mov
add
les
mov
add
call
add
add
insl
pop
xlat
lods
jl
stos
popa
repnz
data16
je
lea
sarl
sbb
add
push
pop
mov
cli
ficoms
add
fcmovne
int
push
add
movb
add
add
jne
hlt
add
mov
fdivr
loope
pop
pop
mull
add
push
add
add
adc
fcompl
push
add
mov
mov
add
add
rolb
aas
or
add
sbb
and
add
sbb
add
add
fnstcw
mov
add
dec
sub
push
xor
out
cwtl
fbstp
jecxz
fistpll
sub
add
mov
leave
jle
cmpsb
add
ret
sbb
add
add
dec
mov
add
add
lods
scas
sbb
es
add
pop
jne
push
pop
rcr
fidivrl
nop
add
pop
loopne
out
lods
inc
add
add
cmc
push
adc
mov
sti
cmpsb
add
mov
inc
lahf
push
dec
rcll
bound
mov
stos
or
add
pop
in
out
add
add
pusha
add
add
push
add
add
mov
add
push
into
dec
push
movsb
add
add
pop
jecxz
add
or
add
enter
addr16
inc
or
bound
mov
clc
cmp
lods
daa
push
add
and
mov
pushf
aam
dec
pop
cmpsb
add
jl,pt
and
mov
jge
add
clc
rolb
mov
adc
out
movsl
jns
inc
push
sub
push
add
mov
popf
pusha
add
pop
inc
add
xchg
pop
movsb
add
add
fwait
lods
test
gs
jl
stos
jnp
call
cmp
add
mov
xor
push
add
pop
jo
ret
cmpsl
imul
pop
add
movsl
cwtl
pop
push
add
cltd
dec
data16
mov
add
inc
add
or
push
jno
cld
adc
test
scas
repnz
push
add
mov
movsl
cmp
add
add
add
sub
cli
xor
pop
inc
add
cld
or
inc
push
jmp
mov
or
scas
jnp
paddsb
jmp
fcoml
xchg
add
sti
mov
lahf
insl
sub
rolb
xchg
add
jle
mov
jle
add
mov
add
add
push
add
mov
pop
sbb
add
cmpsl
sub
mov
movsl
dec
add
mov
rolb
scas
cmpsl
test
loope
mov
add
lahf
xchg
xchg
add
mov
mov
pop
iret
fwait
push
add
mov
mov
shll
add
mov
add
xchg
add
xor
addb
push
pop
push
xchg
add
mov
add
or
add
xchg
in
jmp
mov
mov
add
icebp
sub
pop
loopne
and
xchg
fldt
mov
mov
lods
fisttps
and
mov
in
addb
cwtl
xchg
add
nop
add
pop
adc
mov
lcall
test
mov
xchg
add
adc
mov
gs
jnp
add
mov
pop
xor
push
mov
add
mov
aaa
mov
add
fildl
je
loope
sbb
cmp
icebp
mov
repz
movb
adc
jmp
xor
push
add
dec
cmpsl
sub
aas
fwait
icebp
mul
and
mov
xor
scas
pop
sub
xchg
add
pop
sbb
push
add
js
cmp
les
cli
adc
in
imul
fcompl
sub
adc
cmpsl
xchg
push
inc
mov
movsb
add
stc
lret
lock
sbb
jb
in
add
or
pop
loopne
cwtl
xchg
add
mov
cmpsb
add
add
push
lret
add
rolb
rolb
ret
jae
mov
mov
add
xor
sub
mov
dec
sahf
mov
add
add
sti
loope
or
mov
out
je
iret
jmp
scas
out
movsb
add
mov
push
add
xchg
sub
add
jo
and
mov
mov
loope
add
adc
and
call
jne
loopne
cmpsb
add
ret
add
mov
add
and
push
xor
push
fiadds
stc
sbb
add
lea
add
add
jmp
add
mov
add
add
dec
push
add
cmp
sub
mov
jmp
add
mov
add
mov
testb
add
std
add
push
add
add
arpl
mov
rolb
mov
out
test
aaa
fstl
sbbl
add
mov
add
pusha
add
xchg
ja
lods
adc
push
or
loopne
outsb
push
add
jmp
xor
inc
add
rolb
or
mov
scas
sbb
or
add
add
add
add
xchg
arpl
jae
fwait
data16
pop
outsl
test
add
roll
mov
imul
sti
mov
and
dec
fcoml
mov
add
inc
inc
add
mov
mov
add
or
shll
repnz
scas
jb
scas
mov
test
cmp
mov
aad
pop
in
xchg
push
add
add
add
adc
cltd
mov
sub
ret
in
mov
mov
nop
add
add
mov
push
cmp
aam
dec
mov
aam
xor
cmp
add
cli
push
add
cli
popa
cmp
push
add
add
mov
mov
push
adc
loopne
out
add
add
mov
into
pop
cmp
lock
jmp
add
sti
mov
add
leave
xchg
push
outsl
ljmp
pop
jecxz
sbb
or
in
fcmovnbe
add
gs
mov
add
in
add
sarl
inc
add
dec
lea
pop
jb
les
movb
rolb
movsb
add
ss
jbe
inc
xchg
jb,pt
inc
add
add
mov
pop
aad
dec
xchg
add
add
add
adc
clc
sbb
push
addb
mov
call
add
dec
gs
add
mov
or
addb
push
enter
sub
add
pop
jae
faddl
mov
adc
sbb
pop
or
inc
add
dec
mov
push
add
xor
subl
add
and
add
add
push
call
cwtl
cli
push
add
gs
je
jbe
ret
add
test
stos
adc
mov
repz
add
add
adc
push
add
add
add
mov
repz
cmpsl
call
add
dec
imul
cmpsl
mov
xor
jne
add
and
mov
js
add
sub
push
push
add
xlat
mov
inc
lret
bound
mov
cs
imul
adc
hlt
add
mov
movsb
add
push
add
add
add
shl
sub
add
adc
xor
test
rcll
mov
add
stc
pop
dec
xor
cmp
mov
add
loope
testl
sub
add
sbb
add
lea
adc
packsswb
add
lea
xor
mov
xchg
add
lods
mov
sbb
and
mov
mov
nop
add
jno
jp
add
push
add
add
je
loop
andl
pop
jp
add
mov
add
repnz
test
jnp
add
mov
inc
add
mov
mov
ret
mov
add
mov
fcoml
negl
lea
mov
jle
push
test
mov
add
rcll
add
pop
out
imul
add
mov
xor
xchg
jp
mov
pusha
add
mov
and
xchg
and
insl
sti
dec
or
test
int
stos
add
loop
or
outsb
lret
lahf
mov
ret
add
add
je
push
loope
add
add
inc
add
dec
std
push
add
test
mov
mov
prefetcht2
add
xchg
add
arpl
xchg
jg
lahf
and
mov
add
sbb
add
mov
adc
jns
lods
cmp
cmpsb
add
or
in
out
notl
add
pop
push
scas
sbb
fst
in
in
add
loopne
add
imul
add
loope
sub
bound
mov
jge
add
adc
jmp
xchg
popa
std
out
addb
add
add
add
seta
aam
jmp
sahf
inc
add
dec
dec
mov
mov
add
pushf
mov
xchg
mov
pop
into
dec
nop
add
bound
mov
pusha
add
xchg
int3
xor
leave
xchg
push
nop
add
add
sti
popf
add
pop
out
add
ret
mov
add
gs
add
mov
add
fisubs
mov
add
mov
push
add
xchg
push
mov
add
arpl
add
in
jns
lret
pop
cmp
add
dec
fstpl
scas
adc
mov
push
add
int3
ret
inc
jns
mov
addb
shll
inc
outsb
bound
mov
jp
mov
add
arpl
and
jne
inc
mov
adc
add
aaa
rolb
mov
mov
add
add
push
or
int3
aas
adc
fisubs
mov
add
icebp
push
add
cmp
das
dec
or
pop
mov
aaa
mov
mov
shll
add
add
int3
jb
and
add
sbb
cmp
add
inc
add
xchg
add
push
add
jp
sbb
add
push
add
mov
or
out
pop
push
pop
lea
mov
sub
add
mov
insl
inc
adc
xchg
and
mov
add
mov
add
sub
fidivs
add
add
out
and
or
or
xor
dec
rolb
aad
add
add
inc
push
stc
mov
addb
mov
repz
mov
xchg
jae
add
add
mov
sbb
xlat
or
adc
cmp
hlt
add
add
scas
inc
add
or
repnz
dec
ret
xor
add
push
add
movsl
xor
insb
lods
neg
pop
stc
sbb
loope
add
popa
mov
scas
je,pn
xor
loope
add
add
pop
daa
hlt
add
add
mov
mov
add
outsl
push
add
xor
pop
fcoms
push
add
les
add
mov
xor
or
pop
fwait
pop
push
add
add
or
shrl
mov
add
push
add
jg,pt
add
add
fistpl
xchg
addr16
add
add
dec
sbbl
mov
xchg
mov
jl
adc
hlt
add
call
jl
fdivrp
add
add
jb
decb
add
cmp
aaa
add
sbb
jno
pop
sub
aaa
cmpsl
xchg
lahf
cmpsl
bound
mov
add
sub
add
jnp
addr16
and
testb
outsb
mov
or
rdtsc
mov
mov
pop
and
mov
scas
lods
jne
add
data16
cmc
addb
sbb
pop
lods
pop
inc
fisttps
jle
add
add
mov
add
add
repz
fcomps
mov
jge
stc
out
test
cli
jle
jno
loop
push
add
sbb
add
mov
add
add
ficoml
xchg
cwtl
lods
xchg
add
add
add
or
rolb
add
arpl
pop
dec
push
xchg
pushf
mov
add
pop
lods
mov
add
add
fbstp
outsl
daa
xchg
add
and
add
mov
je
jcxz
cmp
or
pop
cwtl
sbbl
and
add
or
add
mov
add
insl
sbb
add
cmp
inc
cmp
add
pop
aam
filds
sbb
ljmp
out
das
push
add
mov
push
add
fimull
add
shll
out
insb
movsb
add
jg
adc
fnsave
add
ljmp
add
xchg
add
push
add
dec
cltd
out
test
jle
ret
xchg
jbe
or
push
add
stos
stos
xor
stos
mov
add
mov
add
sub
repnz
add
pop
out
jb
loopne
loop
out
outsb
mov
fstpl
jg
xor
xchg
add
dec
push
add
add
and
push
jmp
mov
xor
in
add
stos
out
lret
aaa
testb
adcl
xchg
xchg
add
sbb
xor
mov
mov
sbb
adc
or
add
add
add
add
cmp
xor
aaa
or
add
add
add
pand
jb
jp
lods
movsl
testb
into
jl
add
aam
bound
mov
add
mov
out
mov
add
mov
xchg
add
push
push
add
mov
pop
sub
jne
scas
fistpl
add
push
push
jge
dec
mov
loope
pop
inc
push
sbb
jbe
pop
push
andl
out
je
test
jae
test
sbb
popf
aam
pop
icebp
jne
ljmp
add
add
sbb
add
add
cltd
shrl
fcmovnb
add
fcomps
mov
fwait
addb
add
add
add
push
repz
mov
lcall
addb
fidivl
test
mov
add
sti
cltd
xor
inc
add
cmp
pushf
sub
leave
or
push
add
add
add
mov
lahf
inc
add
xchg
addr16
cmp
push
add
add
add
jle
mov
addb
add
jae
jl
add
add
clc
xchg
add
and
mov
mov
push
add
push
add
lods
ds
test
dec
add
xchg
cs
add
pop
mov
sbb
sbb
add
into
mov
cmpsl
sub
add
mov
ret
sub
jae
mov
mov
or
mov
cmp
daa
icebp
pop
arpl
mov
add
scas
add
pop
sub
add
jge
add
out
pop
pop
jp
mov
jno
add
push
add
cmp
mov
loopne
adc
inc
add
add
add
add
add
push
add
add
and
mov
rol
add
cmc
data16
push
or
mov
addb
filds
add
adc
mov
add
in
testb
add
add
sbb
mov
testb
sub
add
cmp
fisubs
add
addb
jns
into
and
add
mov
adc
out
cmp
cmp
aas
mov
add
xchg
xor
mov
fisttpl
pop
lret
les
mov
cld
stos
sub
add
add
sbb
xchg
pop
jle
test
mov
mov
add
imul
add
add
add
leave
add
add
jle
les
bound
mov
add
mov
mov
jae
add
mov
pop
inc
add
lods
imul
lock
push
add
add
pop
repz
sbb
mov
add
jo
cmp
xor
hlt
add
add
add
cld
pop
mov
add
add
add
add
jmp
lahf
pop
sbb
arpl
scas
enter
and
add
or
cmp
sahf
pop
mov
add
add
add
add
add
lods
data16
add
les
das
add
pop
das
adc
xchg
addb
dec
lahf
cmp
sub
repnz
addr16
bound
mov
add
enter
mov
cmpsb
add
mov
mov
sbb
add
popf
bound
mov
mov
push
in
pop
cs
ror
iret
or
add
ud1
fiaddl
pop
fwait
dec
cmp
testb
into
pop
addb
fwait
add
xlat
push
add
jo
popa
lahf
mov
jg
mov
dec
or
pusha
add
add
jmp
add
jae
add
add
lods
and
add
cmp
pusha
add
add
enter
adc
dec
addb
add
cltd
and
mov
cltd
xor
je
push
add
jmp
inc
add
add
mov
mov
addb
mov
movsl
push
mov
xchg
dec
pop
mov
mov
std
dec
sbb
movsb
add
add
add
ret
pop
icebp
out
push
out
add
push
clc
stos
cmp
add
stc
idivl
sti
mov
or
popa
fcompl
add
add
mov
mov
add
pushf
xor
jp
stos
sbb
jns
push
add
add
rolb
xchg
nop
add
ljmp
add
dec
mov
lahf
in
inc
add
inc
xor
mov
stos
dec
addb
mov
add
call
xor
add
or
xchg
add
add
mov
out
in
jle
pop
mov
hlt
add
mov
subl
sbb
int3
add
mov
ret
popa
jmp
inc
add
add
mov
out
cmp
add
add
add
xor
fistpl
inc
jg
dec
stos
pop
int
movsl
into
sbb
add
dec
mov
push
decb
add
jp
xchg
add
addb
fdivs
adc
decb
add
mov
mov
xor
mov
xor
add
add
ljmp
mov
out
fwait
xchg
add
mov
sub
add
sbb
imul
mov
add
mov
cmp
daa
cmp
jb
pop
add
mov
add
adc
add
mov
add
add
add
cmp
les
ja
xor
out
mov
jbe
into
decl
jne
add
add
lods
int3
rcll
ret
popa
mov
and
push
test
mov
add
add
in
jge
movb
into
mov
xchg
add
xchg
add
add
add
outsb
outsl
data16
xlat
sbb
add
pop
xchg
sbb
fmull
jae
mov
xchg
ret
inc
add
out
add
add
xchg
out
faddl
add
mov
lret
push
pop
push
add
xlat
cwtl
lea
ljmp
cmp
add
shll
add
sub
xor
aaa
test
mov
sbb
cmpsl
cltd
xchg
inc
push
mov
pusha
add
xchg
add
fdivl
add
mov
leave
jb
mov
bound
mov
decl
add
stos
mov
sbb
imul
repz
and
ret
xchg
scas
cltd
sahf
mov
inc
add
roll
jae
arpl
jecxz
or
push
adc
fwait
xlat
aad
fmull
icebp
push
add
add
inc
dec
rolb
frstor
dec
ja
add
mov
add
jnp
add
add
hlt
add
mov
add
pop
popa
movsb
add
dec
lret
stos
lcall
jmp
xor
add
add
sahf
inc
and
mov
std
pusha
add
xlat
add
fdivl
dec
roll
adc
je
dec
cld
mov
sbbl
adc
mov
adc
sahf
pop
aas
insl
mov
movsl
int
mov
add
ret
into
add
add
add
jg
add
sub
repz
testb
add
loope
sti
cmp
movb
mov
xchg
and
data16
add
pushf
addb
add
cs
popf
fldl
dec
jnp
add
add
mov
add
mov
jp
add
dec
mov
add
mov
stc
dec
hlt
add
in
loop
std
fiadds
add
aas
jnp
lds
and
mov
and
mov
rolb
and
add
mov
jae
nop
add
add
or
adc
lock
jb
dec
push
and
mov
jae
jne
adc
add
movb
out
mov
sub
sub
mov
pop
daa
insl
adc
xor
add
cwtl
arpl
add
pop
dec
sbb
lock
add
push
add
add
mov
stos
testb
add
fnstenv
leave
movsb
add
adc
jp
inc
fistps
dec
jns
loopne
mov
add
or
add
pop
xchg
cmpsl
rcll
fistl
pop
push
add
add
rolb
pop
stos
jmp
punpcklbw
mov
cwtl
outsb
stos
addb
pop
lds
cli
xlat
popf
loopne
outsb
enter
add
inc
add
fmull
call
mov
testb
push
add
ljmp
add
add
loope
lds
sbb
lods
xchg
les
push
in
sbb
cmpsb
add
cmp
cli
scas
subl
outsl
push
push
add
add
jns
add
jmp
push
add
mov
xchg
mov
xor
mov
int3
lahf
movsb
add
push
repz
push
add
loopne
pop
mov
inc
add
fwait
rolb
jge
jns
add
add
xorl
add
add
push
loope
add
ja
inc
cmp
shl
add
adc
mov
add
icebp
xchg
inc
add
ja
fldl
repnz
cmp
add
xchg
pop
jg
add
testb
mov
iret
xchg
add
add
jno
fbld
pop
mov
add
add
mov
cltd
data16
push
xchg
mov
xchg
add
jbe
pop
std
sbb
cmpsl
pop
repnz
add
add
add
push
outsb
mov
rcll
ret
test
rolb
xchg
sbb
add
xlat
lret
addb
push
push
bound
mov
ret
add
and
call
je
mov
push
out
icebp
fstpt
add
test
xchg
add
cmp
add
mov
inc
dec
mov
outsb
xchg
or
mov
jno
adc
lret
sub
or
mov
sbb
sarl
mov
add
cs
add
repnz
push
add
and
add
movsb
add
call
add
add
nop
add
fdivl
inc
jno
add
xor
add
cmp
mov
imul
inc
xor
mov
or
mov
cmc
test
add
xchg
sub
dec
popf
inc
inc
ljmp
and
add
mov
add
sub
sbb
mov
sbb
add
dec
lahf
inc
cmp
stc
mov
insl
mov
ljmp
fnstsw
mov
push
mov
xchg
fdivrs
add
or
add
add
mov
sbb
jmp
jmp
ljmp
add
pop
out
add
add
sub
jae
fadds
testb
add
or
mov
cmpsl
mov
dec
jnp
mov
mov
dec
cmp
push
mov
add
dec
in
std
mov
lea
rolb
ljmp
inc
add
xor
hlt
add
std
dec
stos
inc
pop
mov
mov
lods
mov
inc
cwtl
mov
add
add
rolb
addl
lret
add
add
fistpl
and
mov
jns
add
add
sub
xchg
add
dec
pop
iret
popf
dec
inc
sbb
add
loopne
stc
loop
jbe
stos
pop
sbb
add
cld
inc
add
sbb
inc
add
lret
xchg
add
mov
push
add
inc
std
jb
jg
fnstsw
add
stos
test
jmp
mov
add
add
xchg
icebp
push
mov
add
cmpsb
add
leave
rolb
rolb
das
jp
fcompl
pop
testb
cmpsl
ret
imul
add
add
lret
add
add
jnp
mov
add
mov
add
dec
jnp
bound
mov
push
inc
into
add
mov
add
mov
mov
adc
xor
inc
rolb
and
mov
cmpsl
dec
aad
mov
xchg
sbb
mov
mov
rolb
dec
pop
sbb
xchg
add
push
xor
pop
and
xor
sti
lea
add
movb
icebp
inc
add
xchg
add
cli
aam
loope
dec
adc
fcompl
mov
jae
add
test
mov
ret
scas
int
pop
ljmp
int3
add
into
or
cmpsb
add
int
mov
xchg
dec
pop
loopne
cwtl
dec
cmp
scas
pop
scas
jecxz
clc
outsl
jns
loopne
xor
adc
add
arpl
add
mov
xlat
dec
sbb
movsb
add
cltd
add
pop
popf
mov
dec
sub
testb
data16
test
popa
clc
mov
and
mov
mov
adc
mov
add
sbb
add
mov
push
pop
ds
lock
mov
add
pop
rolb
dec
add
rolb
xchg
mov
mov
sbb
shll
sbb
add
mov
fnstcw
add
popf
jo
lahf
out
push
mov
add
push
add
movb
cmp
push
add
cltd
push
dec
hlt
add
xor
push
and
mov
add
xor
xorl
mov
add
lahf
mov
dec
jp
inc
add
add
clc
push
add
mov
mov
jmp
cwtl
out
and
jb
mov
xor
data16
add
aam
dec
pop
mov
rolb
movsl
xor
xchg
nop
add
xchg
mov
add
repz
lret
je
neg
mov
add
mov
add
and
jmp
xchg
add
add
orl
scas
test
fldt
xor
gs
add
jbe
xchg
ret
aaa
lret
xchg
je
popf
mov
mov
add
inc
add
add
ret
testl
cmp
add
add
loopne
dec
mov
insb
xor
call
addb
dec
mov
mov
fstps
add
or
loope
push
add
aam
movsb
add
add
add
inc
dec
and
sub
add
mov
mull
add
adc
stos
xor
xlat
sti
scas
cmp
sub
adc
pop
dec
push
loopne
mov
add
push
rolb
fsts
jbe
xchg
add
push
add
add
jns
jg
mov
add
js
mov
jg
out
pop
inc
lods
rolb
pop
xchg
sbb
xchg
cli
ljmp
add
aas
outsb
pop
sub
add
lds
mov
daa
inc
mov
mov
add
cmpsb
add
mov
fistps
add
dec
sahf
sbb
cmp
jl
icebp
inc
cld
lods
imul
rol
lahf
jo
mov
lea
lret
mov
sbb
add
add
and
xor
add
add
sub
add
push
sub
add
addb
add
loope
add
add
pop
insl
int3
mov
add
mov
jmp
mov
add
sbb
fst
add
pop
mov
add
push
add
sahf
pop
js
add
aad
add
idivl
dec
movsb
add
mov
sete
pop
and
mov
or
and
mov
cltd
add
out
cld
ds
add
or
push
add
pop
adc
mov
movb
add
push
xchg
cli
aad
sbb
mov
or
dec
add
mov
sub
xchg
adc
lea
xor
ret
js
bound
mov
mov
xchg
add
insb
sub
in
ret
pop
push
add
mov
mov
xor
pop
push
add
daa
pusha
add
mov
add
mov
mov
xchg
add
stos
xchg
add
addr16
add
mov
add
out
pop
cmp
add
sbb
mov
cli
pusha
add
mov
ret
lcall
lea
add
add
add
iret
jl
cli
mov
mov
add
add
mov
mov
and
sub
or
sub
out
dec
jge
sbb
add
dec
add
mov
loop
fisubrs
add
paddsb
add
sub
fiaddl
add
mov
sbb
rorl
inc
lea
lods
fsubrs
xor
test
add
loopne
arpl
rolb
push
add
dec
xor
hlt
add
ja
add
add
call
fucomip
mov
add
fldcw
in
mov
add
add
outsl
jbe
or
xchg
add
call
xchg
add
lahf
adc
add
add
xchg
add
lret
bound
mov
or
mov
mov
xchg
add
add
les
xchg
pop
mov
jno
add
xchg
stos
mov
out
shll
fbstp
add
lods
jg
jae
and
add
add
add
xchg
add
pushf
lcall
add
add
hlt
add
leave
out
data16
adc
mov
add
dec
add
jne
push
test
js
pop
mov
inc
mov
jmp
dec
ret
add
adc
add
add
add
mov
inc
xchg
das
clc
mov
out
insl
ret
add
add
mov
add
xchg
add
mov
add
add
mov
xchg
addr16
data16
iret
mov
in
jne
mov
adc
popf
scas
aaa
mov
cmp
add
adc
add
mov
cmp
add
xchg
jg
outsl
jbe
and
mov
add
aad
dec
jne
lea
iret
dec
jecxz
sub
add
addb
add
adc
sub
add
insl
cli
and
mov
add
mov
mov
add
bound
mov
push
clc
and
jmp
pop
cmp
rolb
mov
push
add
add
add
sbb
add
pop
out
or
add
xchg
adc
scas
sub
lcall
add
scas
int3
pop
movsb
add
int
add
pop
outsl
adc
dec
or
xchg
add
mov
add
mov
mov
add
add
sub
mov
ret
aam
or
add
mov
sbb
ficoms
pop
push
insl
in
cmp
pop
jne
ret
add
fisttpl
outsb
pop
nop
add
loop
push
add
add
add
dec
loope
roll
fcmovnbe
add
sarl
mov
mov
fwait
xchg
outsb
rolb
xchg
fs
or
inc
lods
xor
out
imull
sbb
je
sub
adc
out
aad
adc
xor
iret
mov
add
cmp
repnz
add
add
mov
int3
push
ds
add
mov
mov
or
cmpsl
or
add
insl
js
popl
add
lds
pop
mov
stos
adc
mov
ret
pushf
sub
sti
loope
add
jmp
mov
jl
mov
test
in
lods
jae
ljmp
push
add
addb
mov
push
mov
pop
cmc
and
mov
data16
ret
add
add
sbb
add
add
add
lret
test
sbb
xchg
add
mov
add
out
push
push
xchg
add
ds
test
add
push
add
mov
and
mov
add
mov
mov
sub
imul
out
test
repnz
fldl
addb
or
push
mov
sub
add
enter
inc
add
dec
fldl
add
cli
repz
xchg
add
add
insl
stc
pop
dec
rorl
lds
push
sub
push
dec
mov
inc
cmpsl
jns
jg
sbb
add
add
sbb
xchg
add
jg
in
insb
roll
add
jmp
mov
and
mov
add
pop
jnp
lahf
aas
sbb
add
add
add
pop
movsl
testb
add
add
adc
incb
cmpsl
and
add
add
add
pop
jbe
jge
add
pop
inc
add
lea
add
testl
aam
push
add
add
pop
sub
pop
ficoml
int
add
je
leave
add
pmullw
jno
pop
movb
mov
jno
add
xchg
aad
push
addb
in
mov
add
lcall
add
add
fisubl
xor
add
add
and
lods
or
add
add
filds
add
and
mov
add
add
add
add
add
add
add
add
mov
cmp
pop
adc
stos
mov
ja
les
data16
test
or
add
cmpsb
add
mov
mov
cmpsl
aad
add
add
push
nop
add
push
xor
add
pop
jmp
scas
or
jp
stc
std
incb
sub
add
xchg
mov
mov
scas
jo
mov
cmp
mov
inc
xchg
jecxz
adc
pushf
icebp
or
jo
pop
call
push
and
sub
add
add
dec
dec
mov
add
dec
xor
cmpsl
int
push
add
les
iret
aam
mov
pop
cs
imul
add
sbb
mov
inc
and
test
adc
add
xchg
dec
fidivl
inc
ljmp
pmaddwd
inc
dec
aas
lds
add
test
add
mov
repnz
dec
mov
add
pop
addr16
inc
das
cs
push
or
hlt
add
cmp
ja
add
push
or
add
stc
mov
clc
or
mov
les
ljmp
push
add
sub
push
jg
mov
add
mov
add
xchg
add
mov
out
stos
sbb
xor
add
aaa
aam
repz
push
add
add
add
outsl
icebp
jbe
or
add
cmp
out
add
add
sbb
mov
pop
and
cmp
mov
dec
lahf
ds
bound
mov
call
aas
leave
xlat
out
stos
out
scas
add
aaa
test
nop
add
lds
add
sub
lcall
pop
xchg
jns
jge
dec
in
aas
add
clc
nop
add
add
repnz
add
xor
fmuls
add
add
das
imul
mov
add
scas
sbb
in
sub
jmp
add
ret
inc
in
inc
add
push
add
das
mov
clc
mov
add
add
les
xor
sub
adc
stc
popa
les
leave
jp
jp
add
mov
cwtl
cmc
jl
fsubl
stos
sbb
add
and
ret
fidivl
add
fisttps
dec
loope
add
dec
push
add
jmp
jns
push
add
xchg
pop
add
out
mov
or
add
adc
mov
jle
scas
fstpt
adc
movsl
iret
lds
add
sub
add
dec
dec
insl
adc
pusha
add
add
add
mov
inc
and
mov
popa
xchg
sahf
dec
clc
xchg
add
sub
sbb
inc
add
add
mov
add
rolb
add
imul
xchg
add
xchg
dec
test
icebp
iret
xor
mov
testl
pop
or
mov
add
add
pop
out
popf
pop
cmpsb
add
add
mov
or
testb
add
out
push
add
insl
data16
aad
cs
add
add
out
fbstp
mov
add
in
bound
mov
call
sti
push
sub
mov
add
mov
inc
rcl
into
js
insl
shll
push
lock
xor
adc
cld
std
sub
add
add
xchg
adc
xchg
add
add
mov
xor
push
in
cmpsb
add
cmp
add
jle
xchg
stos
xor
xchg
bound
mov
or
sti
or
addb
pop
and
sti
and
mov
add
mov
add
loope
shr
test
fdivl
stos
mov
lahf
icebp
scas
xchg
mov
cmpsl
xchg
add
movsl
lods
push
add
divl
lods
or
lea
js
ds
sub
add
out
or
add
add
pop
lock
xchg
adc
push
add
rorl
lcall
adc
jle
pop
mov
repz
mov
ret
scas
in
sbb
push
mov
mov
add
jbe
stos
sahf
lret
add
mov
jmp
scas
lahf
aaa
pop
popf
lea
test
add
mov
ds
push
and
mov
add
pop
cmpsb
add
imul
test
mov
add
add
cmpsb
add
hlt
add
add
add
add
jge
xchg
or
fadds
in
jg
add
mov
add
scas
xchg
add
sbb
xor
fcomp
das
xchg
add
and
push
xor
inc
add
add
push
sbb
cmp
leave
sub
cmpsl
push
stos
mov
add
fbld
aas
pusha
add
add
add
rcl
add
js
add
mov
cltd
sbb
aam
jg
jl
jno
mov
icebp
cltd
mov
neg
jge
mov
or
add
inc
jmp
inc
sbb
bound
mov
lahf
sub
push
add
fldenv
ss
adc
or
or
in
in
js
sbb
fcompl
add
add
add
data16
lock
lock
adc
push
add
xor
xor
push
add
mov
mov
add
cmc
cmp
add
or
xchg
adc
and
mov
rolb
add
add
hlt
add
add
jmp
mov
add
js
dec
gs
xor
cmc
arpl
sub
bound
mov
xchg
mov
fdivr
in
adc
sbb
lods
imul
add
sub
jecxz
mov
bound
mov
sbb
adc
cltd
addr16
add
xchg
dec
mov
scas
lahf
int
add
xor
scas
push
add
int
fnstcw
jle
and
mov
add
push
xor
or
push
add
and
inc
add
add
out
pop
dec
or
jne
xor
jae
fsubrs
sbb
mov
stos
mov
cmp
fstp
mov
outsb
mov
xor
js
addr16
out
xchg
add
fcmovne
xor
add
add
xchg
add
add
sti
movsl
sti
cmp
mov
mov
cmp
push
add
inc
orl
add
add
add
cmpsb
add
and
icebp
pop
shll
add
lods
pop
inc
add
mov
add
push
add
add
fstpl
add
lcall
or
add
push
scas
push
and
aad
sbb
xchg
test
add
dec
test
pop
movb
push
ja
add
inc
add
mov
test
add
mov
sub
push
enter
push
add
add
cmp
add
aam
insb
cli
or
pop
je
adc
xor
mov
pop
and
sub
aad
enter
mov
dec
add
rolb
pop
outsb
mov
jecxz
lret
movsl
add
mov
xor
add
mov
test
addl
sub
add
jne
cmp
add
jne
push
add
mov
add
add
xchg
pop
add
add
mov
pop
xor
test
add
add
add
adc
imul
mov
add
cmp
mov
pop
jp
inc
mov
stc
scas
mov
fwait
out
aaa
mov
add
push
test
add
fcoms
imul
out
std
pusha
add
cmp
add
cli
add
push
push
stos
fs
dec
pop
inc
adc
aad
imul
popa
arpl
fisubs
nop
add
jle
pop
movb
add
movsb
add
bound
mov
add
cmp
pop
pop
xor
or
xchg
add
add
sahf
and
fadd
add
dec
push
pop
imul
lods
cmpsb
add
lock
and
dec
and
dec
out
cmpsl
mov
fildl
sub
and
rolb
cld
pop
mov
add
test
mov
dec
stos
pusha
add
push
add
add
and
jmp
push
dec
les
pushf
sub
adc
push
add
mov
data16
add
add
add
iret
xchg
loope
jmp
add
sub
add
mov
xrelease
mov
dec
fidivl
add
fwait
mov
xchg
inc
add
push
and
mov
cmp
inc
and
subl
add
add
add
add
mov
lret
or
push
add
add
ret
pop
or
push
add
sbb
add
add
push
and
mov
scas
dec
std
add
addb
add
add
mov
add
mov
cwtl
push
pusha
add
mov
mov
mov
add
popf
sbb
repz
sub
add
xchg
rcl
push
add
xchg
cmp
aaa
mov
add
add
jge
les
ret
outsl
lds
pop
jge
push
dec
movsb
add
add
mov
jae
inc
jb
add
shll
add
and
mov
fistps
imul
pusha
add
inc
cs
test
cwtl
movsl
push
add
add
add
add
mov
loopne
xor
jno
add
mov
inc
add
xor
leave
cmp
add
std
dec
and
add
add
jae
add
iret
sub
add
add
bound
mov
push
dec
testb
add
add
icebp
stos
inc
add
add
popa
pop
mov
sub
repz
hlt
add
cmp
in
push
add
in
repz
push
sub
or
addb
mov
int
das
adc
cmp
in
push
ljmp
sub
adc
testb
pop
aam
fxch
inc
add
jge
add
stos
das
mov
add
movsb
add
add
movb
mov
mov
add
add
call
cs
add
mov
sbb
sahf
out
in
ret
cmp
lock
add
add
pop
push
mov
mov
cmp
mov
lret
mov
movb
scas
fdivl
cmp
addb
add
cmp
adc
and
mov
xchg
dec
dec
mov
add
add
stc
mov
add
add
add
xchg
movsb
add
add
jb
inc
adc
shll
pop
and
mov
jbe
sbb
and
dec
mov
cmpl
mov
xor
sub
test
les
ljmp
mov
daa
out
xchg
add
pop
and
mov
int3
add
add
subl
mov
add
add
hlt
add
pop
mov
sbb
and
js
add
sub
inc
and
mov
aam
addb
lret
sub
add
add
dec
stc
jp
fucomip
pop
adc
iret
adc
cmp
popa
aas
jbe,pt
add
mov
gs
bound
mov
add
inc
movb
add
aam
push
jbe
lods
dec
nop
add
add
ja
add
ljmp
mov
add
sub
inc
add
adc
mov
pop
dec
hlt
add
enter
stos
mov
and
mov
and
ljmp
and
push
out
movb
add
mov
xchg
add
add
pop
sub
dec
mov
dec
sbb
add
mov
adc
mov
add
mov
xor
adc
mov
add
xchg
imul
repz
inc
or
addb
add
add
ja
lods
pop
lea
add
add
int3
test
and
add
pushf
test
lock
add
sbb
add
mov
push
add
out
in
cmp
push
int3
push
and
lods
dec
rcrl
test
cltd
ret
mov
add
and
add
mov
cmc
and
sbb
jp
add
cmp
jp
add
sbb
imul
bound
mov
mov
add
inc
add
jmp
movb
push
test
add
cmpl
rcrl
push
outsl
mov
jnp
jle
add
xchg
add
movb
pop
or
push
add
add
cs
arpl
mov
add
das
lret
and
fstl
js
mov
test
add
add
push
xor
or
test
pop
aaa
rcl
sbb
addb
dec
inc
add
mov
mov
add
es
cs
add
add
add
adc
mov
shrl
inc
loop
out
pop
mov
fldl
mov
cwtl
jl
pop
clc
je
mov
add
sbbl
pop
jb
loope
add
xlat
mov
mov
test
xchg
cmp
aaa
pop
cmp
add
rcrl
pop
movb
add
add
mov
out
mov
push
add
sub
adc
pushf
push
adc
push
add
cltd
pop
push
frstor
add
mov
add
xchg
dec
mov
das
mov
imul
cmpl
inc
add
int3
mov
das
addb
add
add
mov
add
lods
pop
and
mov
sbb
add
add
cli
leave
mov
dec
arpl
imul
push
movb
add
in
mov
add
or
xor
movsb
add
inc
inc
add
sahf
lret
jae
add
ret
in
cli
lods
call
loopne
fadds
mov
and
mov
push
jne
add
mov
lea
rolb
dec
nop
add
mov
add
gs
in
cli
xlat
pop
lahf
sub
lods
or
out
out
add
in
cld
addr16
add
scas
mov
popa
repnz
outsb
mov
add
add
pop
and
jg
test
lods
jb
fadds
adc
dec
outsl
push
ret
cmp
add
cmp
add
cwtl
aaa
xchg
cltd
mov
add
cmp
repz
push
push
add
add
push
push
add
xchg
cmpsb
add
arpl
jmp
int
mov
stos
mov
imul
or
cmp
stos
and
jl
xchg
add
adc
ds
lahf
scas
sbb
add
mov
in
mov
data16
ljmp
out
jns
mov
cmp
sbb
add
mov
mov
sub
cmpsb
add
xor
push
add
add
pop
testb
add
mov
lods
roll
lods
lock
pop
jno
popf
jb
lahf
daa
ljmp
pop
cmp
clc
lret
stos
je
xor
lods
xor
push
add
xchg
add
mov
push
add
imul
mov
arpl
mov
pop
lcall
aad
add
add
lcall
add
add
rolb
inc
das
or
ret
stos
inc
stos
insl
sub
test
sub
daa
jns
or
lret
push
xchg
add
add
insb
lret
mov
cmp
add
and
mov
adc
xchg
add
mov
xchg
add
cmp
add
je
in
cld
mov
cmovne
in
sbb
stc
jge
sbb
popa
imul
sub
add
sti
aam
inc
jmp
add
add
adc
ds
add
add
add
nop
add
in
bound
mov
push
add
mov
in
push
js
das
add
mov
add
fnstsw
add
add
dec
je
lcall
movb
add
fbstp
in
and
mov
adc
adc
fcmovnu
jg
xchg
xchg
add
or
std
inc
into
xchg
dec
dec
dec
cmp
fstps
lds
mov
cmp
or
add
add
adc
xor
jp
add
arpl
nop
add
add
dec
lock
dec
ja
insl
sub
scas
add
add
dec
xchg
arpl
sbb
jae
rolb
add
ret
add
add
jne
testl
add
add
insl
test
pop
int3
add
add
cltd
cltd
and
mov
das
jo
popa
sbb
movsl
push
dec
cmp
add
inc
add
add
add
es
xchg
add
cld
outsl
pop
pop
sbb
lret
adc
cltd
stos
ret
add
cs
mov
add
and
add
iret
jge
add
xchg
add
pop
jb
push
mov
mov
jmp
mov
movb
add
in
mov
jne
xchg
lahf
adc
add
add
or
into
mov
add
sub
add
jl
add
std
jp
mov
jbe
mov
out
inc
add
sub
jno
add
bound
mov
arpl
or
mov
or
addb
lret
imul
add
in
sub
mov
sbb
mov
cwtl
dec
movsb
add
icebp
test
xchg
add
push
add
or
add
and
cmp
jp
mov
cli
les
jnp
pop
sub
imul
add
fidivs
adc
add
loope
iret
push
add
lret
pop
inc
in
and
add
cwtl
add
arpl
gs
sbb
adc
rolb
and
gs
dec
mov
mov
jb
sub
lds
addb
scas
shl
scas
imul
addb
cmp
push
add
add
mov
inc
add
mov
inc
pop
les
icebp
testl
add
add
stc
xor
test
add
add
add
add
mov
cltd
dec
les
add
mov
add
aam
test
fld
out
inc
add
cmpsl
xor
add
rolb
and
leave
rolb
imul
insb
push
sbb
add
add
sub
mov
mov
and
mov
xchg
add
mov
add
add
add
inc
add
rorl
aaa
dec
testb
sub
mov
or
fdivl
mov
jns
popf
dec
mov
or
lret
add
sbb
sti
mov
add
aad
je
rol
into
mov
cmpsl
mov
cmp
lret
inc
add
add
fisubrs
rolb
imul
push
mov
add
add
test
mov
add
imul
mov
fsubrs
xchg
add
or
dec
adc
loope
add
add
mov
adc
push
js
add
mov
push
dec
mov
add
ffreep
mov
add
add
add
insl
add
add
iret
rolb
or
add
xor
fcomps
scas
or
jne
add
dec
popa
and
inc
add
scas
sub
sbb
insb
sub
outsl
shll
movsl
cmp
mov
lcall
xchg
add
xor
addb
push
fstp
jo
testb
mov
add
pop
push
add
add
int3
test
out
sbb
xchg
add
pop
sbb
addb
jle
or
popf
loopne
jg
add
mov
add
iret
pop
mov
test
mov
dec
cmovno
test
xchg
add
loope
push
add
out
out
inc
rcrl
scas
movsb
add
add
add
mov
dec
inc
add
mov
loopne
xor
sbb
add
add
imul
stos
jb
aam
jmp
add
into
mov
fcomp
add
pushl
or
pop
sbb
fists
cmpsl
decl
int3
test
pushl
xchg
add
mov
push
fcompl
or
pop
fsubrl
push
add
das
iret
mov
mov
adc
arpl
add
test
jl
lahf
inc
add
rolb
mov
subps
jge
add
mov
pop
mov
adc
test
push
mov
testb
clc
mov
scas
lret
sti
les
or
adc
nop
add
cmp
add
lret
xor
scas
jb
cld
dec
mov
cmp
add
ja
add
dec
sbb
stos
sahf
ffree
add
aas
shrl
out
test
adc
int3
sahf
cwtl
xor
loope
dec
mov
leave
adc
iret
mov
and
add
ficoml
addb
sbb
cmp
dec
xlat
je
pop
jg
fisubrs
add
sub
push
arpl
aam
add
mov
pop
sub
xchg
add
or
inc
and
fdivrs
imul
rolb
dec
sub
add
push
cmp
sbb
pop
cli
lret
add
add
repnz
fiaddl
arpl
fistl
shl
xorl
mov
mov
add
loopne
pop
in
je
jae
add
add
add
sub
les
push
inc
enter
pushf
or
mov
add
jo
sti
mov
add
sub
cltd
push
pop
incl
outsb
mov
jo
addb
ret
pop
mov
and
mov
std
out
mov
sub
xor
fwait
pop
jo
aam
xchg
add
add
fiaddl
stos
lahf
das
pop
mov
enter
pop
sub
add
add
sahf
testb
movsl
ljmp
add
filds
mov
add
mov
aas
inc
cmpsl
out
aad
add
test
movsl
stos
xchg
or
dec
xor
cmc
jae
adc
push
add
adc
outsl
stos
mov
jno
stos
sbb
add
push
add
loop
add
test
pop
inc
push
add
jge
mov
jo
inc
add
xchg
add
xor
jle
and
xchg
out
cld
xlat
pop
bound
mov
and
mov
pop
scas
js
enter
pop
out
mov
jae
add
aad
dec
cmp
push
add
push
add
jnp
add
and
mov
imul
fwait
xor
nop
add
rolb
add
jmp
add
sub
daa
push
cmp
rolb
ljmp
add
imul
ja
enter
cmpsb
add
add
dec
pusha
add
push
adc
bound
mov
lcall
add
addr16
mov
mov
mov
arpl
mov
aas
add
mov
add
hlt
add
add
inc
add
add
mov
jbe
xchg
add
dec
dec
imul
mov
xchg
add
xor
nop
add
inc
add
mov
push
fildll
and
mov
sbb
test
add
bound
mov
xor
jle
sbb
sbb
mov
add
and
add
or
add
jmp
inc
mov
jle
add
mov
sbb
mov
mov
fisttps
push
add
pop
or
and
adc
cmp
push
mov
pop
push
add
imul
pop
lret
add
add
adcl
add
lods
xor
int3
movsb
add
icebp
rolb
notl
data16
imul
mov
stc
cld
adc
aaa
dec
push
add
imul
add
jbe
xor
sub
jno
add
std
sub
rolb
cmc
pushf
dec
add
add
inc
add
push
add
xchg
cmp
xor
mov
add
jp
dec
mov
jmp
add
cwtl
xchg
sub
and
enter
add
lahf
and
inc
push
aaa
mov
jb
xlat
cmp
adc
mov
cmovle
xor
daa
addr16
in
and
add
inc
cs
sbb
dec
insb
dec
nop
add
lahf
jl
cmc
jmp
sbb
aam
sub
mov
outsb
push
add
push
dec
outsl
mov
add
adc
mov
adc
movb
sti
dec
adc
xchg
enter
sbb
or
adc
cmpsl
inc
add
mov
bound
mov
ffree
add
fistpll
add
sub
add
add
insl
shll
cmp
xchg
add
test
push
add
in
mov
mov
xchg
add
jle
lock
fbstp
xorl
pop
lret
cmp
add
in
push
pop
into
pop
or
lds
leave
push
add
test
add
fwait
or
sahf
dec
add
cs
dec
adc
movsl
pop
testb
outsl
xor
push
add
add
adc
mov
mov
fcmove
jle
add
cmp
aad
add
dec
lcall
inc
add
add
or
out
repz
repz
adc
fidivl
add
stc
and
push
in
xchg
cld
icebp
ficoms
cli
pusha
add
pop
dec
scas
ror
add
add
add
xchg
mov
int3
dec
test
add
add
pusha
add
add
repnz
das
pushf
lods
and
mov
push
add
rolb
push
mov
xlat
add
les
testl
mov
inc
fwait
or
add
insl
negl
sub
pop
clc
data16
add
sbb
addb
add
add
hlt
add
add
xchg
sbb
add
add
les
lret
cmp
fsts
sub
add
add
add
adc
pusha
add
mov
mov
icebp
cltd
out
xor
add
jno
pop
inc
add
add
xor
inc
add
sub
adc
jp
add
add
movsb
add
add
ja
and
test
rolb
xor
mov
mov
cmpsl
jle
ds
inc
sub
lfs
xchg
stos
mov
dec
sbb
add
add
popf
in
ljmp
xor
dec
push
add
xchg
add
add
inc
add
push
rol
xchg
int
dec
xchg
adc
sbb
fwait
push
add
je
iret
daa
shrl
inc
add
inc
aam
das
sub
int3
icebp
dec
addb
aaa
clc
nop
add
mov
in
adc
add
jp
pop
xchg
add
mov
jmp
mov
cmp
add
ret
mov
movsl
xor
mov
loope
add
push
add
add
add
dec
or
data16
mov
add
std
fldenv
or
dec
jmp
sub
add
add
lret
popf
pop
int3
in
sub
jbe
imul
cmp
add
adc
xchg
add
add
add
push
adc
iret
or
iret
and
gs
pop
push
add
pop
sub
lret
and
mov
ret
lock
add
mov
cld
dec
adc
fiadds
aad
add
iret
repnz
cmpl
cmp
stos
inc
add
mov
add
mov
int
add
add
add
stos
push
add
addb
pop
imul
push
adc
sbb
add
jo
sbb
add
fbstp
call
sbb
mov
or
add
push
adc
dec
cs
adc
jmp
sub
xor
push
add
mov
aam
push
mov
call
xor
adc
pop
movl
and
fildl
add
repnz
cmc
fbstp
add
add
fnstenv
add
add
add
out
mov
xlat
mov
mov
sbb
xor
or
add
lahf
xchg
add
add
add
mov
call
mov
call
test
adc
dec
inc
add
add
in
sub
jmp
pop
pop
pop
adc
outsl
jle
add
add
mov
add
loop
or
add
lds
arpl
add
sub
mov
add
mov
add
mov
jecxz
add
mov
lds
add
mov
dec
int3
or
rolb
pop
xor
adc
and
mov
enter
inc
repnz
add
sub
add
jle
push
add
inc
sub
xchg
add
in
xchg
in
inc
add
mov
insb
jp
dec
sbb
add
inc
add
jbe
sbb
cmp
mov
adc
push
mov
add
jg
lods
insl
inc
add
nop
add
jnp
out
nop
add
jno
pop
and
push
add
push
add
add
add
lock
inc
add
imul
icebp
push
data16
add
mov
dec
les
in
in
cmc
push
add
add
cmpsb
add
add
pop
fstps
hlt
add
aaa
mov
add
add
adc
or
mov
add
push
add
pushf
testb
add
add
add
add
xchg
sub
add
xchg
arpl
bound
mov
sub
sbb
add
cmc
xchg
inc
rorl
and
add
xchg
scas
add
testb
add
xor
pop
mov
jp
insl
sub
decl
sti
push
add
ja
cmp
jge
adc
lret
jns
stos
testb
aas
or
enter
rolb
aam
or
add
add
imul
mov
aam
or
rolb
cli
fdivrl
push
add
notl
data16
add
add
femms
pop
test
out
mov
add
add
mov
add
jl
add
mov
sbb
fisubrs
add
add
int
add
mov
push
add
inc
add
fsts
sub
xchg
adc
sbb
pop
in
push
add
add
mov
xchg
add
add
add
mov
xchg
addb
jb
aaa
cmp
jle
add
out
nop
add
adc
inc
js
lcall
pop
cmpsl
cmc
leave
int
out
bound
mov
add
ljmp
add
std
or
cmp
lds
fwait
jnp
mov
add
jb
stos
dec
testb
cld
mov
mov
imul
cli
xor
js
push
jmp
mov
test
mov
test
cmpsb
add
sub
add
xor
add
add
sti
mov
pop
dec
or
inc
add
add
mov
imul
mov
add
push
add
popf
fs
mov
rolb
dec
mov
mov
cmpsb
add
jp
add
stc
xor
outsb
jns
add
add
add
add
add
arpl
loope
or
add
or
lds
sub
add
or
add
mov
dec
inc
jnp
add
inc
lcall
add
and
jmp
inc
add
sbb
push
cmc
and
add
popa
cmp
xor
inc
jns
add
fnsave
jo
mov
ja
sbb
ret
mov
inc
add
pop
pop
cmp
cld
int3
in
dec
shl
sbb
add
pop
mov
mov
mov
test
rolb
add
mov
sub
xor
inc
pop
mov
in
sub
sub
add
add
cmpsl
fdivrl
add
dec
gs
add
stc
pop
mov
subl
pusha
add
insl
in
pop
popa
out
dec
fiaddl
push
add
add
mov
jne
cmp
loope
out
or
add
mov
add
jmp
push
add
fstps
push
xchg
loope
add
aas
push
add
lea
ret
push
add
aaa
mov
mov
in
push
lods
lcall
xor
hlt
add
xor
xchg
add
sub
xor
mov
dec
sub
add
mov
rolb
mov
inc
add
jae
out
rolb
inc
mov
dec
push
add
mov
add
ret
data16
add
add
pop
ljmp
push
add
add
rolb
aaa
sbb
add
rol
and
mov
cli
pop
mov
and
push
push
add
fldenv
ret
add
stc
in
add
add
jb
sub
adc
in
fcmovnbe
sbb
rolb
int
loop
add
mov
insb
cmp
sahf
sub
mov
and
push
add
mov
dec
or
mov
shrl
add
inc
add
jno
flds
mov
das
adc
pusha
add
dec
aad
xchg
push
sbb
cltd
icebp
xlat
pop
cli
mov
mov
bound
mov
out
push
les
pop
mov
add
test
jge
inc
add
loopne
imul
xchg
fcmovb
add
add
cmp
push
add
sbb
in
cld
lahf
mov
imul
inc
add
add
add
push
add
test
jecxz
ds
add
imul
adc
into
mov
add
sti
cmp
enter
mov
xchg
idivl
push
add
pop
data16
ljmp
and
mov
fwait
shll
add
mov
cli
movb
das
mov
pop
into
enter
add
das
dec
jnp
xchg
jmp
add
int
mov
add
add
rep
mov
jl
iret
cmp
popa
cwtl
cmc
add
mov
add
das
xor
mov
sbb
adcl
insl
pop
cmp
ds
je
adc
les
mov
rolb
out
xchg
fwait
sbb
add
inc
icebp
xchg
add
in
push
add
ret
add
cld
out
jbe
sub
mov
mov
lock
inc
add
xchg
adc
pop
xlat
pop
cmpsb
add
mov
add
pop
test
push
mov
add
add
adc
xlat
xchg
hlt
add
push
add
int3
inc
mov
addl
push
mov
add
mov
dec
or
or
add
int3
js
add
into
dec
adc
xchg
clc
inc
mov
jae
test
mov
push
repnz
add
add
add
insb
mov
push
cli
jp
add
jae
add
sarl
sub
addb
add
test
add
add
fs
or
xor
popa
mov
pusha
add
mov
inc
add
adc
pop
mov
cld
jge
add
add
pusha
add
lds
adc
sbb
add
out
xchg
add
and
mov
xchg
mov
ficompl
add
fsubrl
repz
cmp
cli
mov
add
sbb
add
mov
mov
sti
gs
enter
mov
and
mov
jb
jb
and
xor
lret
insl
rolb
sahf
xor
add
sub
add
popa
cmp
pop
xor
cltd
cmp
mov
out
sbb
inc
stos
dec
cmc
jg
cmp
rcl
je
push
add
mov
lcall
cmp
or
add
mov
add
or
in
add
add
or
add
out
xchg
xchg
add
sub
int
add
add
out
sbb
add
rolb
mov
dec
mov
jmp
in
xchg
xchg
leave
cmp
and
add
add
insl
movb
repnz
fdivr
pusha
add
xor
add
rolb
xor
mov
pop
inc
icebp
push
add
ja
mov
lds
dec
adc
mov
mov
jp
add
out
adc
mov
rolb
inc
add
add
test
mov
jmp
or
movsl
fnsave
add
hlt
add
add
roll
mov
inc
add
add
les
in
xor
sbb
inc
add
push
xor
ja
add
fwait
and
xchg
add
add
add
in
rorl
out
xchg
insb
lea
xchg
mov
adc
testb
add
dec
hlt
add
mov
cmp
cwtl
inc
add
jecxz
add
movsl
imul
out
cwtl
call
lahf
aas
das
gs
lcall
add
mov
outsb
pop
lret
imul
test
stos
mov
add
fstps
and
mov
add
cmp
add
add
rolb
dec
fisttps
add
arpl
jmp
negl
push
add
cmp
push
xchg
add
sub
in
mov
mov
daa
and
mov
add
add
in
add
cmp
clc
arpl
add
add
add
jl
int3
mov
lods
push
aad
add
add
sarl
out
int3
rolb
xchg
ret
add
add
lret
add
pop
add
add
xchg
lods
out
mov
add
add
pop
repz
pusha
add
call
add
xor
arpl
add
add
add
lcall
push
add
push
add
in
stc
mov
add
add
mov
add
add
or
outsl
dec
les
into
gs
in
and
inc
add
add
icebp
mov
outsl
pop
lahf
addb
popa
leave
test
pop
cwtl
stos
jg
add
repz
push
add
cmp
shll
mov
xchg
add
mov
test
or
add
test
jns
insl
or
pop
out
add
fistl
js
add
push
out
cmp
jg
arpl
mov
xor
sbb
or
fsts
mov
mov
xor
je
loopne
xchg
int3
lret
mov
jns
mov
mov
dec
or
jg
sbb
and
add
mov
xchg
aaa
mov
sub
sbb
stc
icebp
pop
addb
inc
add
add
xor
repnz
cmpsl
inc
add
xor
add
fwait
mov
enter
mov
ja
pop
jne
rcll
add
test
inc
ja
lret
xlat
mov
push
add
fst
jns
pop
mov
test
mov
sahf
mov
add
sbb
in
or
mov
in
loopne
inc
inc
add
inc
add
jb
jno
add
mov
add
xchg
sbb
repnz
dec
or
mov
outsl
movsl
sub
add
push
mov
add
cli
js
popf
inc
add
add
add
pop
lret
xor
leave
fcomi
stc
fsubp
push
add
xchg
add
aad
popa
jp
add
insb
aam
repnz
imul
add
repz
stc
adc
mov
pop
and
shrl
leave
lods
loope
add
add
add
mov
add
sahf
sub
and
lods
sarl
ret
movsl
nop
add
xchg
into
sub
add
lcall
sub
movsl
ret
nop
add
mov
dec
ja
push
adc
dec
outsb
mov
and
sub
leave
outsl
addr16
testb
inc
add
xchg
push
add
adc
mov
fcoml
and
mov
add
dec
add
mov
rolb
cmc
xchg
mov
pop
movsl
add
sbb
add
test
pop
push
add
int3
jnp
mov
cmp
addb
pop
repnz
add
add
mov
pop
ret
jge
pop
mov
xlat
xchg
pop
or
and
mov
sbb
add
pop
push
test
addb
fwait
mov
test
pop
fstpt
mov
jno
lea
xchg
add
ljmp
jge
add
fmull
add
in
dec
lret
add
mov
cmpsb
add
hlt
add
fwait
xchg
test
mov
dec
pop
jnp
add
pop
cmp
xchg
add
add
add
add
push
add
loopne
and
fwait
jge
add
mov
negl
cli
xor
in
dec
ret
add
add
mov
test
mov
add
mov
add
jo
fcoml
add
and
mov
out
dec
ljmp
add
fists
jle
add
and
mov
test
sbb
fbld
add
mov
jl
add
movsb
add
add
add
ja
and
test
lret
cmc
jle
pushf
in
xor
push
add
add
ret
mov
add
sbb
jb
jmp
pop
jle
stos
fildl
xlat
xchg
cltd
push
add
aad
dec
call
pop
jle
mov
mov
mov
call
add
add
insb
cmp
dec
andl
movsb
add
mov
dec
jge
add
add
dec
cmpsl
mov
xor
pop
sbb
inc
add
icebp
mov
cltd
lahf
imul
loope
in
ja
movsl
scas
mov
cmpsb
add
scas
inc
add
xor
cli
out
jmp
mov
cmpsb
add
mov
add
pusha
add
jmp
mov
mov
mov
pop
sbb
jb
jns
add
lds
addr16
or
push
ds
xchg
dec
dec
jo
xchg
lea
add
push
sarl
add
movsl
rcrl
cmpsl
int3
data16
in
sub
xor
and
mov
insb
iret
and
mov
aam
push
cmp
add
pop
mov
fiadds
mov
mov
dec
jb
mov
aad
add
or
loop
mov
jns
out
push
add
rorl
add
sti
jl
in
adc
sarl
jbe
cltd
pushf
push
add
mov
add
pop
or
repnz
push
add
cmp
adc
loop
push
mov
fwait
cmp
fdivs
and
rolb
mov
fdiv
add
mov
add
add
fs
ret
addb
jb
jmp
add
add
mov
xor
shrl
mov
lcall
add
add
mov
inc
add
mov
sub
adc
dec
and
lods
or
add
out
rolb
inc
mov
shll
add
int3
sbb
mov
inc
add
mov
add
popa
push
add
lret
mov
add
arpl
inc
add
sub
add
add
cmc
loope
add
mov
add
add
test
lret
inc
add
outsb
pop
addb
popa
orl
adcl
emms
jne
movb
orl
push
ljmp
add
push
add
add
mov
mov
xchg
mov
lret
pop
in
pop
cmpsb
add
dec
inc
add
add
stos
test
mov
mov
xchg
adc
and
pop
rolb
jb
mov
outsl
push
push
add
pop
push
add
mov
add
cwtl
out
in
pop
pop
ficompl
xchg
popa
addr16
mov
sbb
pop
leave
cmpsl
adc
rolb
add
xor
mov
xor
rorl
clc
mov
pop
add
xchg
and
pop
mov
sbb
add
ja
and
mov
add
jne
loope
fisubs
xor
popf
push
add
aas
ljmp
arpl
add
mov
call
mov
add
xlat
add
xchg
add
cmp
add
sbb
add
mov
fucomp
mov
push
imul
push
add
add
inc
push
jg
cmp
add
pop
addr16
add
add
pop
arpl
push
add
add
lret
lds
pop
xchg
add
imul
stos
inc
add
movsb
add
cmp
or
les
xor
lcall
mov
sbb
out
pop
shr
mov
or
out
fmul
sbb
popa
cli
pop
mov
mov
add
fsts
add
add
sub
add
jae
mov
mov
sub
add
mov
jmp
jno
sub
in
jl
add
push
add
add
add
pop
ljmp
mov
mov
xchg
add
xor
in
nop
add
mov
add
push
add
add
add
sbb
rol
mov
in
mov
das
ja
add
lret
add
mov
test
pop
pop
mov
adc
outsb
enter
sub
pushl
add
cli
testb
add
and
mov
enter
mov
scas
mov
test
lock
and
out
mov
adc
lcall
in
sahf
mov
add
add
add
mov
push
add
inc
sbb
out
insb
stos
arpl
push
out
sbb
and
mov
xchg
movsl
ja
xor
js
add
insb
movsb
add
sub
repz
mov
bound
mov
mov
aam
mov
adcl
cmpsb
add
cwtl
ss
add
jo
movsl
adc
or
xchg
add
sbb
mov
add
in
lods
inc
add
adc
addr16
pop
add
mov
cmp
add
add
add
mov
xchg
orl
fwait
push
mov
mov
sbb
add
adc
add
fsubrs
add
aam
mov
adc
inc
or
inc
add
addl
add
jb,pt
push
pop
les
xchg
cvtps2pi
mov
fcompl
add
push
ret
push
adc
mov
adc
xor
mov
repnz
add
outsb
and
xor
testl
cmpsl
inc
xchg
xorl
pop
xor
fldenv
add
add
data16
add
pop
aas
outsb
std
dec
test
ds
add
clc
cmp
fiadds
add
fucomp
jns
mov
push
sub
add
andl
daa
mov
and
add
xlat
dec
rolb
sub
arpl
mov
push
add
mov
xchg
add
add
push
add
ret
loopne
sbb
cmp
popa
pusha
add
sub
add
mov
and
add
add
add
add
push
push
or
clc
cmpsb
add
add
push
jecxz
xlat
inc
add
and
rol
add
add
out
or
fstps
std
fcmovb
add
add
or
mov
xchg
pop
outsb
mov
and
mov
xor
pop
push
add
dec
mov
add
cmpsl
xchg
std
int3
cmp
add
rcrl
add
xchg
add
add
jge
dec
out
add
mov
fdivrs
lea
add
fstl
push
add
addb
dec
push
add
mov
in
push
add
adc
add
rcrl
loop
cmpsb
add
add
add
pop
rolb
adc
push
add
add
xchg
add
outsb
jb
test
cs
add
jmp
add
add
testl
sahf
fidivl
sbb
add
lea
add
dec
inc
add
add
mov
add
add
push
fdivr
mov
aaa
repz
add
ljmp
xor
sbb
push
xchg
cmp
add
push
add
add
mov
add
sub
push
add
filds
add
add
aam
sbb
inc
pushf
pop
mov
add
inc
add
add
pop
sub
test
mov
add
or
bound
mov
sub
inc
or
and
insb
sub
add
fistl
loop
fists
mov
add
clc
imul
mov
loopne
xorl
add
mov
add
std
punpckhbw
mov
cmc
fsubs
sbb
ja
imul
add
arpl
lret
xlat
rolb
add
adc
xchg
add
pop
cwtl
test
cmpsl
popa
adc
inc
inc
add
xchg
pop
xchg
add
mov
add
cmc
dec
push
sub
push
stos
and
push
add
pop
movsb
add
aad
hlt
add
jnp
jle
cmp
xchg
add
push
add
test
mov
or
cmpsl
jno
push
data16
jge
add
mov
add
jbe
mov
arpl
roll
aam
std
mov
add
dec
in
subl
pop
jle
add
rcr
cmpsl
and
mov
add
sbb
add
add
bound
mov
add
addb
dec
mov
sub
add
mov
add
cmp
add
loop
cmc
pop
mov
add
lahf
or
add
add
mov
cmp
add
sbb
in
sahf
sti
mov
into
add
cmp
add
lret
or
addb
add
ljmp
ret
pusha
add
cmp
jo
xchg
adc
add
add
lock
sub
add
add
or
sub
adc
loope
lea
pushf
data16
add
xor
stc
mov
mov
cs
cltd
aad
adc
pop
pop
xor
into
cmp
lods
push
add
push
add
imull
fsubrs
cmp
rolb
scas
imul
add
cmp
pop
or
jb
fistpl
ss
mov
test
cmp
aam
push
mov
out
addb
jge
and
shld
shrd
add
mov
sbb
jnp
add
pop
bound
mov
test
leave
rolb
shll
enter
push
loop
xlat
mov
lahf
xchg
scas
and
aas
or
mov
pop
rolb
cmp
popa
aas
das
scas
lea
add
addr16
ror
or
outsb
insb
dec
adc
cltd
inc
add
inc
mov
add
jge
push
add
add
stc
push
test
push
or
decl
cmpsl
ljmp
add
add
rorl
rolb
add
pop
cmp
cmp
das
adc
xchg
add
add
stos
bound
mov
cmp
or
add
ss
xchg
addb
js
cmp
ljmp
int
call
inc
jo
pop
pushf
mov
add
pop
sbb
add
ljmp
imul
sahf
inc
add
push
outsl
add
push
sub
dec
addb
add
xlat
in
jns
rolb
jge
add
clc
adc
sbb
add
add
push
add
dec
push
or
jmp
aam
in
or
or
rolb
mov
incl
fists
jae
sub
add
inc
add
add
add
jb
push
mov
sub
add
lds
add
add
mov
fiadds
mov
ret
jns
xor
test
xor
mov
add
sbb
or
jb
cmp
add
sub
out
ljmp
add
and
mov
jns
clc
jns
mov
inc
add
into
jp
pusha
add
push
cmpl
jecxz
jnp
ds
mov
lods
mov
test
dec
sbb
out
add
jl
mov
lcall
test
mov
in
add
xchg
pop
aas
mov
fnstenv
xchg
inc
add
inc
add
aaa
aaa
cmp
lods
dec
xlat
inc
xchg
add
add
add
add
jg
scas
xchg
jne
sub
mov
or
xor
mov
add
lea
loopne
push
add
mov
aas
ja
das
push
add
imul
push
add
loope
add
cmp
xor
mov
xchg
mov
dec
test
xchg
repz
testb
add
stc
inc
add
inc
push
add
repnz
in
dec
das
or
add
cmp
add
mov
add
arpl
js
sub
outsl
lcall
xor
cwtl
shll
aaa
cmp
push
mov
imul
add
add
les
std
scas
cmp
fmull
mov
lret
sub
add
mov
add
xorl
add
inc
add
add
jnp
adc
in
nop
add
pop
xlat
rcrl
adc
pusha
add
movsb
add
add
mov
add
or
lret
js
scas
mov
add
add
mov
in
sbb
xorps
adc
jp
in
xchg
add
mov
out
add
in
add
add
pop
cmp
xchg
push
repz
das
ds
add
push
add
xchg
into
pop
testb
adc
loopew
xchg
add
pushf
adc
cmpsb
add
add
add
add
sbb
inc
out
push
inc
add
add
add
mov
add
shll
test
out
lods
or
int3
xchg
inc
add
add
mov
cmp
lods
cld
movb
imul
fs
add
int
add
out
inc
add
fstps
cwtl
push
mov
into
sub
push
cmpsl
nop
add
add
mov
mov
cmpsl
outsb
je
fmul
adc
push
or
jnp
xchg
inc
add
add
add
pop
cmp
inc
add
add
add
push
add
pop
pusha
add
add
iret
fcmovnb
lahf
jbe
xor
add
jle
pop
add
or
scas
aaa
repnz
add
add
out
lret
repz
add
movsb
add
test
adc
pusha
add
xchg
inc
add
mov
add
imul
or
dec
repz
add
jo
and
add
adc
in
add
mov
repnz
xor
pop
and
mov
clc
mov
xor
dec
pop
int
add
xchg
add
add
xor
push
push
add
push
add
lock
test
sti
mov
lahf
xor
clc
loop
xchg
ja
pop
dec
imul
cmc
test
pop
in
fisubl
movsl
out
bound
mov
aaa
std
cli
lahf
das
pushf
repz
cli
rolb
lahf
popf
ljmp
ret
push
xor
add
rcrl
mov
jp
add
add
add
test
fcoml
daa
test
jne
mov
or
push
data16
mov
rolb
jo
das
or
and
mov
add
pop
test
les
mov
adc
mov
pop
jecxz
xchg
add
add
xchg
addb
add
lods
sahf
in
xor
add
int3
fistps
jo
mov
pop
stos
rolb
xchg
add
xor
sbb
cmc
addb
int
in
jnp
add
mov
mov
dec
mov
pop
pop
sub
pop
inc
add
outsb
xor
or
add
mov
add
std
mov
and
sub
add
jae
pop
out
xorl
out
mov
mov
adc
inc
add
xor
sbb
sub
push
add
test
add
add
insl
add
mov
jp
inc
add
add
mov
add
xchg
or
test
std
adc
out
je
call
loopne
addb
scas
in
mov
mov
mov
mov
add
call
add
add
ljmp
pop
cmp
mov
add
pushf
add
mov
in
xor
in
lods
dec
rolb
adc
rcl
add
stc
push
add
fucomi
sbb
sahf
pop
fcoml
dec
sbb
pop
adc
adcl
rcrl
add
mov
loop
inc
add
add
test
push
add
movb
lods
or
addr16
ds
pop
add
add
repnz
add
sti
popa
addr16
mov
add
add
sbb
push
or
jne
test
jae
ret
pop
mov
or
cld
sub
and
push
add
ljmp
pop
add
mov
add
xor
jge
jecxz
add
mov
add
dec
iret
mov
add
add
add
mov
cvttps2pi
mov
negl
sbb
out
enter
pop
sbb
add
lret
gs
push
add
mov
out
lock
xor
inc
aad
imul
mov
inc
add
add
cmp
and
fwait
addr16
xchg
outsl
jbe
in
dec
pop
mov
xor
es
add
jl
scas
pop
iret
and
push
test
in
lret
cmp
xor
repz
inc
lret
pop
hlt
add
add
xor
data16
filds
add
mov
mov
or
adc
sahf
sbb
mov
push
mov
lret
lcall
dec
pushf
hlt
add
and
aaa
jnp
ss
add
sahf
cwtl
or
stos
sahf
mov
jne
add
push
xor
adc
and
mov
dec
movsl
mov
add
add
aad
xchg
pop
xchg
add
mov
mov
add
jmp
addb
push
dec
repz
xor
dec
enter
xor
test
and
sub
movsb
add
push
add
xchg
push
add
nop
add
add
mov
aaa
inc
int3
nop
add
add
pop
lods
ds
test
divl
add
call
xlat
popf
mov
xchg
add
inc
pop
mov
add
adcl
add
mov
push
add
mov
add
add
lods
sub
add
mov
dec
out
mov
jno
inc
add
out
and
mov
dec
and
inc
imul
xchg
add
add
sub
int
pusha
add
mov
jge
cmp
push
or
scas
nop
add
ficompl
stos
in
repnz
loope
sub
add
jb
enter
add
add
int
add
imul
mov
jg
out
dec
push
add
std
mov
or
js
cld
ret
cwtl
jmp
nop
add
cmc
pop
loop
add
testb
test
add
add
add
cltd
pop
sub
in
push
jo
pop
adc
push
or
inc
add
add
push
lahf
jae
jb
mov
imul
cmp
add
mov
cmp
js
xchg
ret
push
add
bound
mov
lock
add
add
xor
xor
jae
add
adc
add
adc
mov
add
add
add
es
add
lahf
aas
leave
mov
cmp
das
inc
test
lret
mov
daa
loope
nop
add
dec
fwait
pop
pop
int3
lods
sbb
push
xchg
subl
iret
ds
sbb
add
xchg
hlt
add
loop
mov
test
movsb
add
add
add
lock
out
in
repnz
fidivrs
add
int
adc
daa
sub
fisubrl
mov
leave
cmc
xchg
add
add
inc
add
bound
mov
dec
mov
mov
add
stc
cmp
outsb
jae
fcompl
mov
push
add
addr16
