push
shrb
pop
ljmp
xlat
loop
repz
pop
test
mov
pop
imul
sub
pop
add
add
add
push
jb
add
xor
add
out
das
out
xchg
add
outsb
faddl
pop
cltd
pop
xchg
jne
inc
pop
dec
jnp
lock
push
or
add
add
in
mov
pop
pop
push
add
fidivs
pop
xlat
mov
sub
in
dec
inc
add
cmp
pop
xchg
cmc
inc
pop
dec
jg
lea
add
push
xchg
push
xchg
xchg
xchg
sbb
add
lcall
mov
in
jnp
pop
and
add
adc
add
add
add
test
sar
sbbb
leave
rcrl
lret
pusha
add
adc
add
aam
sub
add
in
pop
mov
scas
add
add
pop
push
dec
xchg
xchg
mov
mov
add
jb
add
dec
ds
jns
add
add
add
pop
aaa
or
imul
add
idiv
rcrb
add
inc
pop
mov
jae
add
dec
movsl
pop
dec
push
incl
add
imul
xchg
pop
sbb
xchg
pop
fidivl
xchg
wbinvd
cltd
mov
add
fwait
mov
into
pop
pop
pop
xor
add
sub
add
pop
dec
aam
mov
pop
inc
pop
imul
jecxz
ljmp
pop
aaa
je
pop
les
shr
pop
mov
pop
les
es
mov
add
divb
jo
add
pop
rcrb
pop
cmc
insl
divb
add
fsubs
daa
pop
mov
add
or
add
in
mov
addr16
cmpsb
pop
xchg
and
jp
cwtl
sarb
sbb
add
mov
mov
mov
mov
divl
mov
fcomp
jbe
adc
xchg
rcrb
adc
add
add
dec
shll
push
add
adc
add
pop
int3
adc
add
sub
inc
add
inc
add
fsubrl
pop
aam
pop
aas
xchg
xor
add
fcomps
pop
add
add
pop
stos
xchg
mov
jae
add
add
cld
daa
pop
cmp
clc
lea
dec
add
pop
jo
add
in
and
add
xchg
lods
sub
xor
add
add
add
cmc
dec
xchg
jecxz
lods
mov
add
add
and
add
mov
pushf
pop
inc
add
and
jecxz
rcrl
stos
mov
jb
add
mov
inc
add
xchg
push
gs
sahf
arpl
add
mov
sti
enter
pop
sub
imul
add
add
and
test
lods
xor
add
jge
sub
pop
adc
add
imul
jecxz
or
int3
insb
xchg
pop
aaa
loopne
xchg
or
pop
fucomp
call
mov
add
pop
xchg
es
jo,pn
add
add
stos
xchg
xlat
ss
adc
leave
mov
jae
add
add
out
mov
inc
add
lret
pop
xchg
xor
add
pusha
add
pop
xor
add
es
inc
pop
adc
dec
mov
pop
or
or
push
add
pop
in
stc
gs
movsb
pop
or
add
dec
loope
test
sbbl
add
pop
pop
dec
rcrl
add
dec
mov
pop
aaa
sub
add
ss
pop
xchg
sbbl
shrb
stos
or
mov
add
cli
xchg
test
call
bound
add
jne
sbb
and
add
add
lock
add
add
pop
gs
push
adc
or
cmp
lret
outsl
jne
lea
inc
add
aaa
enter
add
add
dec
lds
push
add
sbbb
inc
pop
dec
mov
xor
sub
enter
sahf
mov
insb
dec
and
add
pop
mov
add
mov
xor
decb
add
sub
roll
pop
fcompl
std
cmp
add
cmp
pop
call
sub
pop
sub
rcrb
jl
fmull
push
pop
xchg
lcall
sub
add
insl
xor
call
imul
pop
jecxz
adc
fiadds
add
mov
cs
add
and
add
pop
mov
test
rcrb
pop
test
test
loope
bound
add
add
iret
sbbb
pop
es
mov
sbb
rcrl
iret
icebp
pusha
add
jnp
add
das
xchg
nop
lret
sub
std
popa
add
push
cmp
lcall
sbbl
ficoms
cmovge
inc
add
sbb
add
cmp
mov
add
pop
stos
test
pop
daa
pop
insl
jbe,pn
lret
or
stc
cwtl
jno
add
cli
dec
loopne
cltd
sbb
push
pop
adc
add
mov
shl
pop
push
add
pop
mov
pop
ret
pop
xchg
push
bound
add
daa
pop
mov
pop
dec
xchg
pop
pop
mov
outsl
lea
and
stos
jmp
xchg
loopne,pn
shr
dec
inc
pop
lock
add
sbb
add
jne
xlat
adc
add
push
mov
adc
add
ss
cmp
pop
add
add
push
add
mov
pop
iret
call
rcrl
pop
xchg
jge
or
ja
pop
push
mov
and
mov
int3
mov
mov
and
add
lcall
pop
pop
xlat
mov
cwtl
and
jg
jno
add
pop
and
add
mov
sbb
add
pop
push
pusha
add
loope
ficompl
sbb
jnp
pop
jnp
add
add
add
sub
and
add
pop
xor
pop
inc
pop
sbb
jne
jbe
add
dec
jge
pop
mov
out
jg
mov
add
cltd
out
xor
add
pop
in
jo
pop
insl
loope
xor
add
pop
pop
int
movsb
pop
pop
pop
in
xchg
mov
rcrb
fidivrl
mov
add
pop
test
pop
pop
mov
pop
push
add
into
pop
rcl
push
add
jb
add
aam
pop
lds
mov
add
rcrl
xor
add
add
outsl
shlb
jb
add
add
add
push
pop
mov
mov
and
add
add
pop
fwait
ljmp
fistpl
cmp
cld
push
imul
nop
push
daa
pop
mov
cli
popf
mov
pop
hlt
jecxz
mov
mov
mov
cmc
in
ds
out
dec
pop
jnp
mov
add
repnz
add
add
jp
mov
add
pop
scas
std
add
add
popa
add
inc
add
mov
jne
dec
mov
sbbl
add
das
cld
mov
sbbl
movsb
pop
xor
add
jns
add
cmp
loope
fmul
pop
sarb
pop
fildll
jle
pop
aas
bound
add
mov
call
and
xchg
popa
add
gs
dec
lea
fcoms
xchg
out
dec
mov
mov
pop
sbb
pop
cmp
pop
push
clc
ret
pop
dec
roll
add
and
add
xchg
mov
insb
adc
add
pop
std
sub
add
jmp
pop
jbe
aad
nop
rclb
add
mov
lret
sub
xor
add
popf
pop
pop
shll
mov
add
test
outsl
mov
sub
fidivl
pop
xor
add
out
loop
ret
pop
xor
add
dec
pop
inc
add
mov
jbe
mov
sub
sub
mov
popa
add
xchg
xchg
loopne
dec
cmp
pop
out
hlt
or
sub
mov
pop
mov
std
mov
jmp
rclb
pop
xor
add
int
cmpsl
pop
in
fstpl
pop
pop
outsl
sbb
pop
cmp
add
dec
stos
cmc
shrb
popa
add
fistl
ljmp
mov
cmp
jbe
int
fs
arpl
add
sub
pop
clc
lea
add
pop
fcmovnbe
jno
add
cwtl
loope
dec
push
add
movsb
pop
xor
add
inc
pop
mov
cmp
fistps
pop
xchg
mov
add
pop
jmp
or
pop
jns
xchg
adc
add
pop
loope
xchg
mov
add
pop
pop
xchg
outsb
in
ds
cwtl
pushf
mov
in
mov
stos
adc
add
cmc
mov
add
add
ficompl
pop
or
mov
sub
pop
adc
add
pop
and
add
test
aas
adc
add
mov
mov
push
lret
xor
or
scas
cmp
inc
pop
mov
clc
fwait
rorl
out
mov
cltd
fisttpll
add
mov
xchg
ja
pop
mov
lea
add
pop
pop
and
pop
dec
sbbl
add
repnz
movsb
pop
cmp
rcrb
mov
pop
jb
add
add
popf
sbb
clc
mov
stos
pop
and
pop
cmp
pop
fwait
inc
add
fidivrl
add
add
pop
fwait
aaa
scas
push
pop
push
mov
cmp
xchg
add
xor
add
pop
mov
pop
test
add
cwtl
lret
jbe
pop
or
add
sbbb
and
add
pop
daa
pop
movsb
pop
iret
dec
cld
xchg
call
mov
adc
jl
mov
mov
scas
lahf
mov
add
push
and
add
pop
ret
pop
sub
pop
mov
pop
inc
add
push
into
out
test
lock
dec
sar
loope
sub
xchg
pop
cmp
cs
incl
iret
add
add
jno
add
add
stos
pusha
add
or
add
jbe
pop
push
add
loope
and
add
and
add
call
loope
xchg
pop
loop
mov
push
add
push
add
filds
je
pusha
add
pop
enter
pop
mov
int3
mov
sbbl
pop
mov
jne
aad
add
inc
add
dec
add
add
add
pop
pop
inc
add
enter
add
test
add
fs
mov
add
add
add
mov
fdivl
push
les
pop
fsubs
imul
xor
add
shl
pop
jno
add
add
sbb
jns
adc
add
pop
and
add
pop
sahf
sbbb
ss
add
hlt
mov
push
pop
inc
add
cli
inc
add
movsl
pop
dec
stc
or
sbb
fs
loopne
xor
sbbb
pop
insb
sub
pop
scas
sbbl
mov
rcll
add
daa
pop
sub
pop
rcrb
sub
pop
aas
hlt
sub
pop
lret
push
inc
add
ja
xchg
jp
xchg
xchg
jp
mov
add
cmpsl
pop
repz
pop
pop
aaa
decb
dec
lods
pop
jb
add
add
les
mov
inc
add
in
pushf
mov
add
rcl
jp
jae
add
pop
xlat
fwait
pop
sbbb
pop
rcrl
cltd
aad
sub
cli
jl
daa
pop
push
aad
add
adc
add
inc
pop
xchg
test
add
mov
jb
add
pop
stc
sub
pop
mov
add
jecxz
jg
fsubrl
outsl
lret
xchg
ret
jg
add
sub
jg
add
cmpsl
pop
bound
add
imul
cmp
mov
pop
pop
pop
and
cmp
pop
xor
pop
mov
add
daa
pop
rcrl
add
pop
inc
pop
rolb
add
aam
push
jmp
pop
popf
xchg
xchg
loop
pop
adc
add
add
pop
cmpsb
pop
jo
add
pop
jns
mov
add
inc
add
test
xchg
and
add
addr16
movsb
pop
push
pop
scas
aaa
mov
add
lds
xor
push
add
stos
stos
je
xor
add
sbbb
jle
inc
pop
jle
imul
pop
icebp
add
xor
adc
add
add
movsb
pop
sbb
sub
add
xchg
adc
add
add
test
insb
inc
add
scas
lock
ds
sbb
jge
pop
xor
add
inc
pop
movsb
pop
mov
pop
das
aam
pop
iret
pop
out
je
pop
or
pop
jp
add
lret
inc
pop
sti
adc
add
add
sbbb
add
daa
pop
ds
addr16
jecxz
lods
sub
cmp
add
add
add
pop
and
add
add
in
ja
pop
inc
add
push
add
mov
aaa
js
pop
jmp
add
ficompl
pusha
add
pop
jns
pop
add
add
sti
xchg
jl
and
add
cwtl
and
add
pop
xchg
in
xor
add
inc
add
lahf
push
add
mov
add
inc
add
jge
mov
mov
add
pop
imul
jno
add
popf
sub
add
mov
sub
pop
sbb
hlt
sbb
add
add
add
jg
pop
sub
pop
dec
dec
lahf
and
add
pop
lock
pop
movsb
pop
nop
mov
add
add
ss
mov
jmp
or
add
push
in
sub
pop
stos
xlat
dec
jl
add
pop
mov
sti
stos
sub
add
popa
add
and
add
pop
jecxz
bound
add
pop
lret
lahf
mov
pop
jae
add
xor
pop
fisttpll
add
jns
inc
pop
js
mov
ss
repz
inc
add
fdivl
pusha
add
rcrb
add
pop
sbbl
add
std
movsl
pop
shlb
add
lea
add
mov
or
jge
pop
inc
add
push
jmp
ficoms
pop
jns
add
lcall
rcrl
pop
push
cmp
add
mov
mov
mov
dec
stos
jbe
sbb
xchg
add
roll
add
pop
ror
in
call
pop
pop
xchg
jmp
cmp
pop
cmp
int3
loop
lea
add
mov
adc
add
mov
das
and
add
pop
loop
jb
add
insb
out
pop
jle
xlat
inc
pop
call
in
movsl
pop
mov
add
mulb
pop
loopne
stc
call
xchg
or
ret
inc
add
add
add
pop
lret
xlat
inc
add
aas
push
add
popa
add
sbb
mov
and
add
xchg
imull
add
flds
pop
lds
pop
add
jge
pop
push
pop
testl
jle
add
xchg
pop
pop
jae
add
sub
pop
rorb
jg
mov
sub
add
pop
lret
dec
dec
outsl
pop
nop
xchg
dec
dec
xchg
push
add
jg
push
add
ss
ret
pop
inc
pop
call
add
mov
into
gs
in
and
add
pop
push
pop
mov
popf
add
add
push
repz
pop
popf
push
and
fcmovbe
inc
add
sti
sbbl
pop
lds
hlt
mov
add
arpl
add
add
pop
pop
lods
sbbb
jecxz
and
adc
add
in
mov
es
cmp
mov
addr16
js
addr16
mov
sbb
mov
pop
xor
fidivrl
add
jmp
test
pop
repz
pop
clc
mov
push
add
mov
pop
inc
pop
cmp
pop
testb
dec
push
add
test
incb
add
xor
lcall
les
stc
mov
pop
repnz
add
add
jns
add
mov
aam
add
add
pop
mov
sbb
pop
pop
repz
add
pop
dec
insb
repnz
add
pop
fnstcw
add
cmp
inc
pop
lods
es
test
pop
pop
mov
sbb
adc
add
or
add
and
add
enter
add
add
xor
add
and
or
sbb
jge
xlat
test
sbbb
daa
pop
loope
mov
add
cmp
inc
add
lods
cmp
add
pop
or
mov
movsl
pop
lret
scas
jnp
jge,pn
or
cwtl
xor
add
pop
movsb
pop
mov
jb
add
add
pop
dec
dec
nop
aam
cli
testl
clc
je
mov
pop
pop
je
jo
add
add
or
fcompl
out
lock
xchg
lods
cltd
inc
add
sbbb
add
add
xor
add
mov
pop
sub
mov
mov
or
inc
add
in
gs
lods
jmp
add
add
cmp
jecxz
outsb
mov
add
add
pop
inc
add
fistpl
cmp
sarl
xchg
add
add
das
mov
stc
dec
xchg
dec
fiaddl
add
sub
pop
cli
es
fmuls
pop
jo
add
inc
add
lret
ffree
pop
test
add
mov
dec
call
pop
xchg
loope
repnz
sbbl
add
add
insb
stos
fadds
xor
add
or
add
add
add
cmpsb
pop
adc
add
add
cmp
pop
dec
inc
add
movsb
pop
scas
mov
add
gs
xchg
inc
add
fldenv
jnp
ljmp
pop
aad
pop
pop
cli
pop
push
lahf
out
push
les
test
add
or
pop
es
in
cmpsb
pop
shll
pop
fwait
jmp
xchg
ds
jmp
pop
and
fstpt
mov
dec
pop
push
pop
jmp
mov
pop
sbb
sahf
mov
ror
fists
add
add
add
xor
add
add
add
add
push
clc
pcmpeqd
lret
popa
add
jmp
cmpsl
pop
inc
pop
fwait
daa
pop
mov
jmp
add
cld
cmp
lds
dec
insl
adc
imul
cmpsl
pop
and
xor
add
pop
jbe
pop
bound
add
mov
out
pop
cltd
xlat
loope
popf
mov
test
ret
pop
and
add
push
pop
lret
push
mov
pop
fldt
pop
fidivrs
add
leave
nop
xchg
xor
add
add
cmpsb
pop
fdivr
adc
lds
sbbl
pop
jmp
scas
push
pop
outsl
push
and
add
add
jno
add
sbb
test
loope
push
add
mov
sbb
shlb
add
sub
sub
pop
fcompl
pop
lret
sbb
jl
imull
mov
cmp
pop
cld
jb
add
adc
add
pop
xchg
push
repnz
pop
pop
lahf
xchg
pop
push
jg
push
rcrb
mov
xlat
rcrb
add
pop
loopne
push
mov
mov
add
add
add
mov
out
into
mov
xlat
jnp
pop
enter
pop
xchg
dec
and
pop
sbbb
add
add
lahf
bound
add
pop
outsl
jno
add
cltd
mov
jns
loope
mov
pop
sbbb
arpl
add
pop
mov
ret
pop
loopne
icebp
fwait
push
lods
scas
test
xchg
mov
scas
movsl
pop
sub
add
sbb
jnp
mov
add
repnz
push
pushf
mov
dec
jmp
and
fs
iret
adc
inc
add
lods
dec
aaa
icebp
ficoms
add
xor
add
add
add
sub
and
decb
adc
add
mov
pop
push
add
mov
pop
jmp
movsb
pop
mov
xchg
lea
add
inc
add
push
fsub
pop
iret
sbbb
inc
add
insb
cs
pop
mov
add
cmpsl
pop
in
or
inc
add
pop
xchg
pop
pop
xchg
sbbl
ret
pop
xchg
stos
push
dec
scas
xor
add
mov
into
insl
dec
dec
mov
xor
add
mov
fwait
inc
pop
push
add
cmp
add
add
int
pop
lock
add
ret
add
insl
mov
pop
adc
dec
mov
lahf
add
add
adc
add
add
or
pop
dec
out
xchg
push
mov
pop
mov
lahf
idivb
or
aad
sbbb
mov
es
mov
hlt
outsb
cmp
or
rolb
add
pop
jae
add
jmp
mov
add
push
add
jmp
je
out
clc
fiaddl
add
sub
pop
test
pop
mov
adc
outsb
xchg
and
shrb
add
mov
add
add
mov
xchg
arpl
add
pop
xchg
inc
pop
pop
xchg
pop
and
add
add
jmp
mov
adc
mov
add
rcrb
pop
iret
rcrl
cmpsl
pop
mov
add
iret
test
add
add
outsl
gs
push
push
add
pop
jmp
pop
sbbl
mov
inc
add
movsb
pop
lcall
pop
in
sbb
mov
add
test
cs
jnp
add
jp
xor
lahf
bound
add
addr16
pop
cld
stos
jnp
or
aaa
fnstsw
inc
pop
pop
inc
pop
outsb
sbbl
inc
pop
es
sbbl
adc
cwtl
fbld
sub
add
and
add
pop
sahf
cs
cmp
sub
mov
les
adc
add
add
add
js
add
inc
add
mov
xor
add
popa
add
imul
xor
pop
adc
or
add
scas
dec
and
sub
pop
mov
add
xchg
movsl
pop
xchg
cmp
add
mov
adc
add
bound
add
add
adc
add
push
add
int3
pop
out
or
add
or
dec
out
int
jo
add
sub
pop
push
add
sbb
add
mov
pop
out
test
clc
pop
push
add
or
xlat
cli
inc
pop
filds
add
add
pop
mov
fdivrs
shll
add
int
add
mov
pushf
outsb
loope
dec
int3
imul
pop
adc
mov
xor
add
adc
add
push
ds
xchg
mov
pop
mov
pop
adc
add
pop
jno
add
outsb
dec
jecxz
jp
push
add
icebp
sbbl
sbb
add
add
add
or
dec
les
push
mov
add
xchg
sbb
or
pop
mov
dec
mov
inc
add
mov
iret
stc
into
enter
add
in
fnsave
add
xchg
ja
daa
pop
add
arpl
add
iret
sbb
add
xlat
mov
addr16
xchg
jbe
pop
pop
cmp
stos
jbe
mov
out
movsl
pop
lret
add
lcall
push
mov
xchg
sbbb
dec
cmpsl
pop
fld
pop
int
or
add
jb
add
mov
mov
jp
fwait
push
pop
xor
add
xchg
daa
pop
in
jmp
es
add
sbbl
pop
notb
add
cwtl
outsb
jo
add
dec
or
js
mov
add
loope
out
adc
int3
pop
mov
sbbl
pop
pop
adc
add
movsl
pop
sarl
or
add
cli
jecxz
mov
in
sub
add
xlat
or
pop
push
mov
sbbl
jno
add
add
xor
add
mov
pop
repz
add
iret
dec
sbbl
aaa
cmp
jnp
int3
call
fs
push
add
add
add
jb
add
add
jne
in
and
add
and
add
pop
mov
push
loopne
sub
add
sub
sub
pop
and
add
add
pop
jae
add
pop
cmpsl
pop
jo
add
and
add
in
sbbl
sub
add
pop
in
push
xchg
push
add
jo
add
fwait
add
and
loope
jle
aas
sbb
or
in
mov
push
sub
jmp
add
cmp
pop
pushf
sbb
jno
add
push
imul
mov
sbbb
fiadds
adc
add
dec
inc
add
lea
and
add
add
cs
add
pop
jbe
pop
pop
add
add
mull
out
shll
dec
jno
add
jecxz
enter
add
sub
add
lods
adc
pop
inc
pop
es
sbb
pop
push
pop
or
add
pop
out
adc
out
add
add
pop
dec
pop
test
pop
mov
sbb
cmpsb
pop
sub
fidivs
add
mov
pop
cli
in
xlat
dec
push
add
mov
push
mov
sbbl
scas
shrb
push
add
fs
dec
test
pop
add
add
add
push
sbb
dec
and
add
pop
jp
out
stos
mov
pop
add
add
inc
pop
nop
dec
push
in
loopne
cmc
cli
js
pop
rorb
pop
jne
add
xchg
push
lock
pop
pop
xlat
in
mov
shr
dec
jle
pop
out
test
add
sbb
pop
aaa
into
enter
rcll
add
jo
add
or
add
add
lret
pop
jmp
jg
pop
jmp
inc
add
rol
pop
mov
adc
add
push
add
add
inc
pop
leave
imul
pusha
add
jle
int3
mov
insb
sbb
hlt
dec
sbb
outsb
jo
add
mov
add
aaa
and
add
in
dec
dec
mov
arpl
add
test
pop
out
add
add
adc
add
js
add
icebp
cmp
outsb
inc
add
sub
ficomps
das
mov
ja
into
dec
push
xor
mov
add
and
add
stos
ljmp
pop
mov
cmpsb
pop
sbb
pop
mov
inc
add
filds
out
or
insb
out
lcall
das
or
xchg
add
loop
sub
sub
add
add
dec
mov
xor
and
add
out
std
sbb
aad
push
pop
cli
enter
add
stos
cmc
fcoml
pop
stos
iret
mov
xchg
cmc
jbe
pop
sahf
pop
sub
in
inc
pop
sub
or
pop
push
cltd
xor
add
adc
add
imul
sub
push
xchg
mov
bound
add
add
inc
add
test
out
xlat
mov
movsl
pop
sub
fwait
rcrb
fistps
push
inc
add
mov
add
or
jg
mov
jae
add
fsubs
pop
pop
in
insl
ljmp
mov
bound
add
ja
mov
negb
xlat
push
ja
pop
pusha
add
dec
adc
add
sbbl
cltd
pop
and
add
fstsw
add
xchg
lahf
xchg
int3
leave
cmp
pop
jns
push
add
pop
mov
add
arpl
add
adc
add
sahf
pop
dec
outsb
push
dec
in
or
or
mov
cs
popf
sbb
xchg
sub
bound
add
xor
add
add
js
mov
test
add
and
add
stc
mov
nop
test
add
or
jp
xor
scas
and
ficoms
clc
cmp
jo
add
add
pop
pop
sub
call
pop
inc
pop
movsl
pop
jle
mov
push
push
fdivp
xchg
loope
add
add
add
iret
sbb
pop
clc
mov
jecxz
sub
pop
pushl
push
add
pop
cmp
cwtl
inc
add
xchg
pop
mov
add
pop
fcom
imul
mov
adc
repz
push
add
ret
ds
push
in
mov
adc
iret
mov
into
mov
xchg
lock
inc
add
xchg
pop
cmp
and
add
sub
imul
pop
lret
je
pop
adc
add
and
add
add
add
movzwl
add
dec
pop
pop
mov
adc
add
jecxz
jl
in
cmp
pop
xchg
xchg
call
add
dec
sahf
pop
xor
pop
mov
pop
imul
add
add
add
outsl
xchg
ret
pop
pop
popf
loopne
insb
leave
cld
pop
stos
push
add
pop
dec
jecxz
inc
pop
adc
add
add
mov
clc
mov
pusha
add
ds
xor
je
in
cwtl
cmp
daa
pop
into
nop
or
push
or
pop
jae
add
mov
pop
fld
pop
or
add
lea
pop
out
pop
sbb
scas
repz
mov
mov
stos
add
out
push
add
mov
and
hlt
popf
inc
add
mov
add
add
sarl
xor
add
gs
and
add
sbb
fcoml
repz
and
add
cmp
sbb
and
add
cmpsl
pop
or
push
add
xchg
jg
pop
inc
add
lods
mov
cmpsb
pop
in
inc
add
adc
add
std
pop
or
cs
and
add
cmp
rcrb
add
mov
push
pop
cmovns
add
xor
add
cld
or
divb
add
dec
scas
loope
or
add
jl
rorb
aad
xor
add
lahf
movsl
pop
daa
pop
and
add
add
add
jl
add
lcall
imull
adc
inc
pop
dec
pop
pop
cli
ss
add
add
test
pop
or
pop
dec
add
add
add
jb
add
cli
or
in
ja
push
pop
sbbb
pop
cmc
pop
or
sarl
inc
pop
adc
add
popf
lcall
das
bound
add
es
lock
add
push
add
fst
pop
ret
pop
ss
jge
mov
pop
mov
pop
inc
add
faddp
pop
pop
push
sbb
inc
add
or
leave
clc
jmp
rcll
and
add
pop
sbb
inc
pop
lods
lods
gs
aas
jo
add
jns
xchg
sub
cmc
mov
rolb
add
cmp
add
pop
xchg
loopne
mov
pop
xor
add
sbb
pop
mov
add
add
adc
pop
and
add
pop
pop
mov
fmuls
cmpsl
pop
or
add
out
daa
pop
in
gs
repz
xor
add
add
jae
add
add
cmpsl
pop
xor
add
sbb
pop
fbstp
out
mov
push
inc
add
mov
add
inc
add
sub
fidivrl
nop
dec
mov
hlt
pop
jae
add
pop
push
in
inc
add
jle
add
push
add
pop
aaa
inc
pop
sub
les
pop
and
add
sbb
adc
add
popa
add
movsb
pop
mov
add
add
add
adc
add
and
std
jns
xor
clc
mov
test
sub
ja
mov
imul
xlat
mov
adc
pop
jg
mov
cli
out
out
xor
ss
imul
pop
sbb
inc
add
cli
repnz
lods
jne
pop
sbb
pop
sub
pop
sbbb
add
push
mov
cwtl
rorb
jb
add
add
xor
add
ret
pop
test
add
movsb
pop
es
fidivs
add
leave
fs
and
add
pop
jnp
add
pushf
les
add
sbb
add
iret
dec
pop
stos
mov
pop
jg
dec
leave
pusha
add
loope
add
xor
lea
mov
rcr
addr16
cmpsl
pop
lods
xchg
insb
cmp
xchg
mov
add
dec
mov
int
sbb
add
dec
jne
pop
ret
pop
xor
pop
lret
ret
mov
mov
pop
cmp
add
stos
and
add
pop
out
and
add
add
pop
fs
xchg
sbb
int3
mov
mov
iret
lcall
jne
pop
aam
repz
add
repz
dec
mov
add
or
sbb
dec
pop
movsb
pop
lods
lds
mov
lret
fldenv
pop
test
mov
loop
in
dec
xchg
std
pusha
add
push
add
cli
sub
pop
into
mov
negb
pop
jg
pop
stos
xlat
negl
add
add
mov
sub
sbb
pop
mov
clc
push
push
hlt
es
enter
in
ja
pop
imul
aam
pop
cmc
cmp
xor
add
xchg
pop
pop
pop
mov
add
dec
or
or
dec
inc
pop
add
cmp
enter
add
fs
xor
sbbl
add
sub
lret
jmp
mov
push
push
scas
pop
pop
insb
push
add
xor
add
pop
and
add
test
mov
add
xor
mov
adc
add
pop
cld
pop
and
add
fisttpl
les
add
lods
or
add
add
clc
xchg
movsl
pop
and
add
add
add
add
and
add
add
enter
pop
inc
add
ja
jno
add
push
sbbl
mov
std
sub
jae
add
add
enter
sbbl
pop
sbbb
mov
cmpsb
pop
ret
add
inc
pop
in
sbb
add
mov
pop
xor
clc
lret
or
aam
or
sbb
add
adc
add
sbb
dec
jg
add
add
dec
test
or
repz
add
or
mov
adc
add
ljmp
pop
pusha
add
es
xchg
mov
pop
shl
jg
push
sub
hlt
cwtl
xor
add
pop
clc
stc
gs
jp
and
jne
sti
push
add
add
push
jecxz
test
imul
add
sbb
ljmp
inc
pop
stos
leave
lds
pop
les
pop
push
sbbl
jbe
sbbl
fidivrl
cmp
adc
add
add
ds
pop
mov
addr16
ret
pop
mov
add
sbb
add
pop
loopne
mov
add
rorl
mov
pop
mov
add
mov
hlt
cld
iret
and
add
add
shl
jmp
pop
mov
xor
add
add
mov
loopne
mov
int
pop
push
pop
adc
add
sbbb
pop
mov
add
jo
add
add
cmp
pop
je
pop
popa
add
fnstcw
jno
add
pop
sub
mov
js
clc
adc
add
add
pop
pop
test
or
cmp
push
inc
pop
sbb
ficompl
xchg
ja
stc
sbbb
sbb
pop
mov
pop
cltd
mov
out
les
repnz
mov
pop
ret
pop
in
push
add
adc
add
imul
pop
pop
pop
iret
pop
mov
mov
in
sbbl
jge
out
jg
pop
adc
add
jecxz
push
mov
stos
adc
add
ss
loop
sbbl
bnd
pop
js
imul
and
add
add
and
add
loope
outsl
push
add
jecxz
mov
xchg
dec
fxch
or
sbb
pop
dec
xchg
arpl
add
add
add
sbb
enter
inc
add
add
add
jp
mov
sbb
pop
xchg
mov
add
fistps
pop
inc
add
jns
pop
shll
or
mov
pop
pop
and
add
dec
sub
xor
add
imul
push
add
mov
pop
or
pop
mov
pop
inc
add
lahf
sbb
int3
dec
cmp
add
pop
xchg
icebp
sbb
pop
sti
sbbl
add
mov
and
add
add
out
inc
pop
das
clc
mov
pop
or
push
mov
add
sbb
add
add
jg
cli
repz
aaa
or
pop
into
les
scas
fs
leave
rclb
add
pop
ljmp
mov
pop
jnp
pop
out
pop
dec
mov
pop
and
add
in
dec
lahf
cmp
pop
and
add
pop
push
add
repnz
fsts
sti
cwtl
cmc
fwait
bnd
fildll
cmpsb
pop
push
and
add
add
add
xor
dec
dec
and
add
arpl
add
jbe
mov
xor
add
push
add
sbb
mov
fisubl
fwait
sub
add
add
lahf
testl
ja
lods
inc
add
mov
test
leave
add
add
add
insl
imul
pop
lock
add
add
add
add
out
daa
pop
push
add
mov
push
pop
inc
pop
or
pop
adc
add
add
fisubl
add
popl
pop
cmpsb
pop
jl,pt
adc
add
pop
mov
push
inc
add
out
and
test
pop
sbbl
add
pop
lds
pop
push
ja
outsb
imull
insb
xchg
adc
add
pushf
cmpsl
pop
loope
fs
sub
add
add
aam
cli
and
sbbl
add
add
js
xor
add
add
xor
sub
jnp
ja
add
jae
add
inc
pop
push
add
test
cli
xor
cmp
push
jne
scas
push
pop
iret
fdivrp
sub
add
add
push
pop
mov
xor
add
push
add
pop
pusha
add
push
pop
sbb
add
and
jae
add
pop
insl
sub
pop
int3
into
jg
pop
or
pop
mov
sub
pop
icebp
loopne
test
sub
xchg
lods
xchg
sbbb
sbbl
cmp
js
pop
enter
roll
add
xlat
mov
pop
into
sti
repnz
jnp
add
mov
add
outsb
repnz
pop
or
add
add
fcmovu
pop
movsl
pop
repz
fidivrl
sbbl
add
add
gs
aaa
in
fsubrs
add
mov
mov
add
dec
movsl
pop
nop
sahf
int3
repnz
mov
lret
into
lret
pop
push
mov
mov
aam
add
jg
pop
lahf
lcall
pop
dec
sbb
repnz
cwtl
test
add
inc
add
out
mov
pop
lret
cmp
add
lods
sbb
pop
mov
add
inc
add
jl
or
mov
push
add
loope
mov
jg
add
setns
push
add
jp
jle
push
add
xchg
int
imul
mov
lds
push
inc
pop
loopne
dec
bound
add
add
mull
mov
add
out
movsb
pop
inc
pop
daa
pop
mov
and
mov
test
in
pop
inc
pop
xchg
lea
add
pop
cmp
add
loop
out
and
add
pop
popa
add
arpl
add
jg
add
lds
mov
cmpsl
pop
movsb
pop
or
lcall
out
pop
rclb
add
adc
add
out
lahf
mov
and
add
testb
insb
lahf
gs
ljmp
add
flds
add
sti
sub
add
add
add
push
pop
aas
jg
test
add
mov
iret
mov
setp
add
push
add
enter
push
add
lea
add
add
add
add
mov
pop
sub
loope
lret
movsb
pop
xor
add
xchg
fisttpl
push
pop
rcrl
insb
cltd
jle
mov
pop
add
add
pop
mov
jb
add
add
rcll
add
clc
sti
xchg
lds
jge
add
dec
lods
gs
inc
add
scas
and
add
out
test
pop
clc
pop
pop
dec
popa
add
test
pop
mov
pop
lods
test
je
or
out
cs
dec
inc
add
sub
add
daa
pop
adc
add
sbbb
add
add
mov
pop
aaa
ret
pop
xchg
cmpsb
pop
jmp
jl
call
mov
sbb
stos
cmpsl
pop
icebp
pop
pop
popa
add
sub
or
sbb
outsb
or
imul
pop
jg
sub
add
test
outsl
adc
mov
sbbl
mov
pop
stos
mov
cmp
pop
loope
sbb
std
sbb
xor
add
pop
pop
push
add
fstpt
ja
inc
add
hlt
mov
iret
jno
add
incl
pop
xchg
mov
adc
add
add
cmp
lods
mov
add
mov
or
pop
movsl
pop
ss
pop
cmp
mov
mov
or
pop
xchg
sbb
jecxz
push
xchg
cmp
push
pop
outsb
add
add
push
pop
pop
mov
or
aaa
pop
cmp
add
int
jle
fstps
mov
add
push
fildl
fucomip
and
add
add
xor
add
or
out
pop
cmpsl
pop
into
sti
cmp
outsl
add
add
add
lret
mov
mov
pop
stc
lea
add
pop
out
cltd
mov
loopne
and
add
stos
jle
fwait
pushf
inc
pop
mov
mov
ret
out
push
ret
adc
aam
add
into
push
cmp
imul
mov
add
mov
pop
ljmp
add
jp
mov
push
idiv
add
mov
lea
pop
lods
cmp
aas
mov
pop
xchg
and
add
add
mov
pop
cmp
add
add
cld
mov
popl
pop
sub
pop
fldcw
pop
stos
leave
jno
add
add
cmp
pop
dec
push
fistpl
add
add
xchg
sub
and
add
pop
lea
add
cmpsb
pop
mov
sbb
add
xor
add
shlb
add
cli
aad
fwait
aam
push
add
cmp
pop
sub
cli
cld
inc
add
aaa
or
add
push
mov
mov
das
mov
mov
pop
mov
cmp
movsl
pop
push
add
adc
cmp
pop
test
push
mov
scas
or
pop
addr16
es
mov
jns
pop
es
in
sbbl
mov
loope
negb
add
jbe
pop
aas
lahf
adc
sbbl
pop
jnp
pop
lds
and
adc
add
lahf
mov
ds
mov
add
jo
add
add
pop
or
inc
add
out
enter
arpl
add
cmp
bnd
pop
iret
jns
subps
sbb
pop
aas
pop
lods
mov
push
movsb
pop
xchg
pop
daa
pop
mov
add
ljmp
add
jae
add
and
xor
mov
imul
icebp
sbb
mov
push
mov
and
add
cld
sub
ja
push
add
sbbl
add
pop
insb
fcoml
inc
add
add
pop
fs
xlat
jecxz
stos
cmp
pop
xor
rcrl
add
lock
cmp
jle
stos
adc
add
push
pop
lods
sub
pop
pop
sahf
jle
add
xchg
ds
adc
add
and
add
mov
mov
ljmp
addr16
mov
insl
sbb
fiaddl
pop
stos
mov
mov
pop
jno
add
sti
or
movsb
pop
jno
add
nop
stc
inc
add
mov
fwait
jl
ds
xchg
test
dec
repnz
push
jns
clc
dec
push
push
pop
dec
add
add
push
add
and
add
mov
jne
jbe
add
sbb
fcmovbe
mov
mov
ret
mov
call
mov
add
lock
cld
push
add
popf
mov
push
pop
inc
add
loopne
pop
daa
pop
aad
add
mov
add
add
and
mov
xor
add
mov
nop
xor
add
cmp
add
or
add
shr
in
pop
daa
pop
repnz
add
jae
add
pop
push
aaa
pop
stos
outsb
jg
add
add
pop
rcrl
add
pop
or
rcrb
pop
cmp
add
aas
mov
aas
lcall
ja
add
xchg
neg
mov
loop
loope
inc
add
adc
add
sbb
add
stc
les
stos
mov
mov
add
add
mov
xor
add
movsl
pop
dec
shll
inc
add
out
insl
lret
leave
xor
cltd
sahf
pop
xor
add
inc
add
std
mov
pop
lock
add
lods
es
lret
xchg
lds
pop
xor
icebp
jne
dec
xor
clc
test
pop
aam
add
addr16
add
out
in
mov
xchg
jo
add
add
add
pop
jle
add
add
push
pop
and
jno
add
and
add
outsb
lods
fwait
rol
pop
std
xchg
into
xor
add
sbbb
in
mov
sbbl
add
mov
pop
pop
dec
jnp
pop
or
add
outsb
cmc
in
filds
add
stos
in
push
pop
movsl
pop
xlat
xchg
pop
inc
add
xor
push
lods
dec
mov
jnp
pop
jg
insl
push
mov
cmp
mov
pop
or
add
add
pop
add
add
inc
pop
insl
cltd
push
add
push
add
test
push
arpl
add
pop
es
jp
pop
ljmp
out
es
rolb
cmp
xor
and
add
sbbb
xor
add
pop
xchg
jmp
xor
add
inc
add
jno
add
cmp
dec
lods
mov
cld
jmp
add
cmc
clc
ss
cli
ret
pop
imul
sub
fidivrs
movsb
pop
insb
xlat
pop
dec
mov
pop
nop
jge
pop
xor
add
lahf
mov
adc
add
pop
or
cli
loop
pop
outsb
call
cmpsl
pop
jp
pop
xor
add
pop
sub
pop
sbbl
pop
out
sub
in
adc
add
mov
mov
mov
add
popa
add
push
pop
mov
add
add
xchg
sub
add
clc
jo
add
add
and
add
pusha
add
adc
pop
lret
add
lahf
xchg
jmp
pop
and
add
les
imul
fistl
dec
sbbb
add
pop
out
jl
pop
jno
add
imul
add
add
or
xchg
sbb
add
pop
pusha
add
ljmp
lahf
jecxz
lods
lret
fidivrs
test
fs
lock
imul
pop
ret
pop
mov
pop
push
test
pop
adc
add
pop
stc
sub
sbbb
add
xchg
pop
mov
pop
and
mov
in
and
add
jmp
mov
add
xchg
mov
das
dec
xlat
in
out
lret
int3
loopne
pop
mov
inc
pop
pop
push
pop
mov
les
iret
pop
aas
fidivrl
fcmovnb
pop
sub
into
jle
xor
add
pop
shlb
clc
jnp
xor
add
mov
add
enter
jne
add
int
pop
sub
mov
pushf
mov
stc
jnp
add
cmp
pop
pop
dec
cltd
js
js
pop
sbbb
pop
or
div
add
pop
insl
imul
pop
dec
adc
add
es
mov
pop
inc
pop
cld
adc
add
push
pop
mov
lods
pop
sahf
sbb
pop
js
loop
push
test
lea
add
mov
or
pop
xor
xchg
add
add
add
add
sub
sub
dec
xor
add
in
or
pop
lods
xchg
add
add
es
scas
les
rcrl
dec
imul
icebp
fwait
sbb
gs
into
lcall
pop
pop
outsb
pop
inc
pop
or
shlb
leave
pop
pop
out
bound
add
add
cwtl
sbb
rcrb
pop
ret
insb
xor
add
outsb
push
stc
push
pop
mov
icebp
push
pusha
add
clc
mov
mov
test
add
mull
pop
inc
pop
xor
add
gs
jmp
xlat
mov
pop
mov
inc
pop
dec
dec
lcall
and
add
shll
mov
add
add
pop
xchg
nop
mov
loopne
in
loop
cmp
insl
rcrb
add
add
push
sbb
mov
add
mov
cs
outsb
pop
jg
pop
and
adc
add
outsl
push
add
dec
mov
inc
pop
gs
cmc
mov
pop
pop
cli
pop
xchg
repz
pop
and
add
sti
lcall
fimuls
xchg
adc
add
out
jne
jecxz
in
dec
add
add
dec
mov
test
pusha
add
pop
imull
pop
hlt
mov
adc
add
add
jmp
sbb
cwtl
lcall
add
add
rcrl
jbe
adc
add
negb
add
jb
add
sub
add
in
lret
adc
add
add
pop
les
cltd
insl
insb
dec
mov
add
and
pop
es
sahf
ret
pop
push
jb
add
mov
jbe
int3
mov
pushf
popa
add
and
jo
add
add
cmp
add
pop
dec
xchg
gs
and
add
mov
dec
sbb
add
test
pop
jp
mov
push
sbb
pop
mov
or
test
mov
add
or
add
movsb
pop
insb
lods
cmp
add
jl
add
sbbl
xchg
pop
pop
sbbb
add
mov
mov
pop
inc
add
inc
pop
icebp
cmpsl
pop
in
and
add
push
push
add
insl
cmp
mov
lcall
lods
xchg
aaa
int3
add
add
pop
inc
pop
and
add
clc
mov
jne
add
imul
mov
pop
push
add
add
push
mov
iret
sar
and
add
push
add
nop
push
add
call
fsubp
pop
cmp
popa
add
sarl
aaa
fiadds
pop
jl
cmpsb
pop
mov
pop
push
add
mov
push
pop
cmpsl
pop
or
lds
mov
mov
pop
jg
add
sbb
add
push
lcall
mov
add
sub
repz
int
out
cld
loopne
lods
mov
add
cmp
insl
push
jg
inc
add
dec
sub
dec
cmp
add
aaa
mov
jno
add
add
add
iret
repz
sbbl
fcoml
sbbl
pop
daa
pop
jmp
add
add
cmp
or
pop
pop
ret
pop
xchg
and
add
xor
add
mov
insb
sub
pop
jbe
xor
add
sbbb
dec
shll
or
add
mov
push
mov
add
push
add
push
push
add
aas
push
pop
pop
add
add
lcall
int3
or
and
add
in
lds
lds
inc
pop
add
add
mov
add
test
mov
je
aaa
xchg
stos
push
add
and
add
imul
cmp
arpl
add
add
jecxz
inc
add
and
add
mov
push
add
repnz
adc
add
pop
cmpsl
pop
lea
cmp
les
lea
dec
jmp
sbb
test
pop
in
adc
in
push
xchg
cmc
test
push
add
mov
pop
frstor
mov
in
inc
pop
cmp
xchg
fdivr
repnz
jbe
pop
leave
sarb
add
sub
add
test
es
sbb
xor
add
inc
pop
fldt
pop
dec
push
pop
fiaddl
mov
cmp
pop
dec
xchg
mov
pop
add
add
pop
aad
test
pop
adc
add
cmp
lock
add
add
pushf
lods
iret
mov
fisubl
xor
add
pop
dec
scas
inc
pop
std
sbb
aas
add
add
outsb
sarb
mov
sti
jmp
pop
std
pop
insl
mov
leave
adc
add
test
lcall
add
fdivrp
inc
add
push
add
inc
add
pop
insl
inc
pop
cmp
pop
fnstenv
add
ret
pop
lret
push
add
sbbl
sbbl
pop
insb
sbb
add
pop
hlt
stc
or
fs
mov
call
dec
insl
fwait
rcrl
cli
mov
fimull
sbb
mov
add
push
std
xchg
xchg
add
mov
pop
push
fs
pop
push
sti
cli
xor
add
inc
pop
xor
add
pop
cwtl
cld
jnp
xor
add
int3
enter
add
in
lcall
mov
add
add
aas
hlt
insb
movsb
pop
test
lret
pop
add
add
hlt
or
sbbb
pop
leave
mov
pop
lds
pop
lock
jmp
pop
cmp
notb
add
cmp
aam
inc
add
icebp
jecxz
mov
jb
add
adc
mov
pop
ljmp
cmpsl
pop
xchg
and
add
pop
adc
daa
pop
xor
add
add
cmp
add
jbe
lds
pop
shll
or
pop
add
add
add
into
jmp
push
push
jae
add
add
mov
lods
nop
cmp
sbbl
adc
cmp
pop
mov
pop
mov
pop
mov
pop
ss
cmp
inc
add
push
add
jmp
jecxz
mov
push
inc
pop
sub
out
push
add
cld
inc
add
pop
gs
ret
pop
inc
pop
cmp
sub
add
aam
add
mov
pop
push
pop
or
mov
add
dec
mov
mov
pop
bound
add
mov
shlb
addr16
add
add
dec
dec
inc
pop
and
add
loopne
jns
xchg
push
fistl
adc
add
les
add
mov
pop
daa
pop
push
add
add
pop
stc
push
enter
push
add
sahf
popa
add
cmp
pop
int3
or
add
pop
mov
pop
mov
and
add
mov
pop
push
push
xor
add
jecxz
les
fsts
in
sub
xor
push
push
push
call
test
jne
inc
push
call
sub
test
je
xor
or
movzbl
shr
push
mov
sub
push
mov
push
push
push
call
push
call
leave
ret
mov
and
mov
imul
sub
add
xor
pop
add
es
nop
jmp
jmp
shr
jmp
fmulp
fadds
add
mov
pop
bound
add
jge
add
add
sti
sbb
dec
and
add
jmp
pop
dec
mov
ficomps
xchg
enter
movsl
pop
lods
mov
and
jmp
mov
jp
outsl
hlt
lods
dec
xor
ficomps
negl
lcall
jmp
and
in
push
add
push
clc
mov
add
dec
mov
pop
pop
sub
rcrl
in
xchg
je
jmp
pushf
jb
add
add
fisubrl
jmp
ret
jp
or
lret
enter
repnz
pop
or
add
add
gs
insl
leave
loope
jge
lods
mov
push
push
ret
xchg
push
dec
arpl
dec
inc
pop
and
add
push
and
add
sub
pop
ficompl
pop
mov
inc
add
sbbl
sbbl
add
push
cmpsb
pop
fsub
pop
repnz
ret
pop
mov
or
pop
inc
add
cmp
lea
jmp
inc
pop
shlb
add
stos
mov
add
ret
pop
mov
pop
and
paddusw
int
and
add
mov
add
je
add
fisubrl
add
cmp
dec
pushf
mov
popa
add
fs
loopne
lds
pop
add
add
dec
outsb
lods
jge
push
js
add
out
repnz
lret
jnp
out
or
add
mov
aas
and
add
pop
jbe
addr16
lock
add
shll
adc
add
mov
push
xchg
arpl
add
pop
inc
pop
in
mov
sbbb
and
add
add
lret
xchg
arpl
add
and
jmp
sub
fistps
push
int3
sti
dec
pop
inc
add
sbb
add
fpatan
jmp
add
mov
jmp
pushf
arpl
pop
add
fs
mov
and
add
test
jbe
pop
adc
add
add
sbb
add
ljmp
inc
pop
xor
pop
mov
push
ret
adc
adc
add
jmp
fbstp
cmp
insl
mov
jo
add
pop
pop
and
add
fiaddl
add
in
jne
and
add
pop
pop
jno
add
pop
mov
negb
call
stc
sbb
add
sbb
pop
cmc
jg
add
add
add
in
lock
add
cwtl
shlb
enter
add
xlat
fwait
or
add
xchg
out
pop
jbe
nop
adc
add
adc
add
mov
pop
xchg
pop
cwtl
aam
sub
jmp
test
mov
roll
add
cmp
add
or
sbbl
mov
add
std
pop
jns
stos
mov
sub
pop
imul
adc
add
sbb
xchg
sbbb
pusha
add
jb
add
add
rcrl
cwtl
aas
sbbl
xchg
lret
add
add
add
lret
add
sbbb
imul
xchg
push
mov
cmp
lret
pcmpeqw
pop
int
add
mov
add
aas
dec
sahf
aaa
les
sti
les
add
pop
call
bound
add
mov
add
les
inc
add
aad
jns
mov
leave
and
add
lock
stos
aas
jns
pop
test
jb
add
push
add
stos
jle
ja
mov
add
or
insb
mov
daa
pop
test
sbb
adc
add
xchg
lret
leave
add
add
xor
add
add
test
mov
push
sub
gs
outsl
dec
add
push
add
add
mov
xchg
push
dec
pusha
add
add
add
push
in
or
sub
add
in
das
mov
stc
sbb
sbb
add
std
sbb
sbb
dec
cmp
out
push
add
pop
pop
push
scas
push
mov
fcompl
arpl
add
pop
dec
sahf
cmpsl
pop
idivl
mov
add
sub
pop
es
std
insl
mov
rcrl
add
cmp
das
movsl
pop
pop
pushf
push
pop
xchg
test
bound
add
pop
loop
mov
xchg
mov
add
inc
add
fmul
sbb
add
jp
add
sub
add
or
cmp
pop
cmpsl
pop
sbb
das
add
jmp
or
add
jns
sbb
mov
jne
pop
inc
pop
jno
add
out
mov
bound
add
sahf
mov
rorb
sbbl
jmp
out
popa
add
jae
add
or
add
add
hlt
sub
pop
jmp
push
and
add
aad
test
pop
sub
add
mov
pop
mov
arpl
add
sbb
push
pop
daa
pop
push
pop
dec
fldcw
pop
sbbb
dec
cmp
add
add
cmpsb
pop
pop
pop
dec
cmp
and
add
add
jecxz
inc
add
or
cmp
call
loop
repz
pop
pop
pop
add
add
mov
sbb
add
add
fcompl
add
pop
arpl
add
add
repz
add
lea
add
cmpsl
pop
sahf
addr16
xchg
cmpsl
pop
dec
mov
sbb
loopne
push
add
iret
inc
add
rcrl
xlat
pop
pop
pop
scas
xor
add
pop
mov
cmp
jp,pn
cli
inc
add
cltd
cltd
push
cli
cmpsl
pop
xchg
fs
dec
pop
gs
ja
pop
int
or
add
fisubrs
not
mov
insl
add
inc
outsl
and
sti
scas
mov
icebp
lds
add
ret
insb
mov
pop
cmpsb
pop
adc
add
dec
out
das
mov
cmp
mov
inc
add
ret
cmc
arpl
add
add
add
jmp
pop
sub
pop
push
lds
pop
jb
add
and
add
xchg
jbe
pop
cmpsb
pop
adc
enter
mov
jo,pn
add
int
mov
adc
add
xor
add
pop
lret
sub
loopne
in
addr16
push
push
jmp
fldl2e
pop
aaa
arpl
fs
push
mov
in
lahf
fimuls
repnz
lods
mov
inc
pop
js
dec
ret
pop
movsl
pop
lods
jecxz
mov
pop
adc
add
pop
das
add
add
pop
movsb
pop
testl
daa
add
arpl
aam
ljmp
jle
jmp
adc
adc
inc
pop
jae
add
leave
jle
arpl
add
add
mov
mov
mov
repnz
add
push
jg
add
dec
fistps
pop
mov
xor
add
add
aad
and
add
add
mov
pop
mov
sub
insl
lcall
pop
cmc
push
add
sbb
mov
sub
add
scas
ss
imul
add
add
sub
add
push
pop
aad
mov
jmp
push
dec
jp
pop
mov
stc
push
xor
push
ret
xorb
pop
fnsave
sbb
fwait
sbbl
mov
scas
lock
add
and
stc
add
add
mov
adc
fs
inc
pop
test
pop
sbb
pop
add
add
sub
lods
out
or
add
fdivl
jae
add
jle
lret
gs
inc
add
movsl
pop
mov
or
sti
fs
xlat
lret
add
in
mov
pop
pop
pop
xchg
lahf
or
lcall
adc
out
aam
and
push
xchg
outsl
in
gs
push
jo
add
pop
pop
push
push
loop
rorl
mov
push
add
jmp
sbb
add
sub
or
add
pop
aas
adc
bound
add
jne
cmp
jmp
mov
pop
mov
adc
add
pop
rcll
pop
int3
rcrl
shr
add
xchg
pop
inc
arpl
jo
add
pop
mov
add
mov
add
add
ficompl
push
movsb
pop
add
add
aaa
out
fcomps
xor
add
add
dec
mov
cld
and
xchg
sbbb
inc
pop
inc
pop
dec
push
add
jp
push
xor
add
inc
add
lea
mov
jmp
or
xor
dec
mov
sarl
add
pusha
add
movsb
pop
cmp
pop
out
xchg
xor
add
rcrl
jns
pop
pop
pop
jmp
aad
scas
jge
pop
pop
outsl
dec
pop
adc
dec
fdivrs
push
pop
cs
rcrl
ficoml
jmp
push
sub
pop
repz
incb
add
not
jmp
ljmp
dec
inc
add
jge
mov
add
sbb
imul
cmpsl
xor
arpl
pop
rol
pop
xchg
xchg
lds
add
clc
pop
push
in
pushf
add
sub
add
lret
idivl
int3
mov
mov
std
lret
clc
pop
mov
das
push
in
sub
add
jae
add
outsl
xor
pop
add
sbb
add
pop
mov
mov
jnp
pop
jno
add
decl
imul
pop
and
add
pusha
add
fmull
and
add
pop
shl
pop
gs
pop
and
inc
add
and
add
add
lock
pop
pop
xor
add
pop
push
mov
jmp
push
sub
movsl
pop
add
test
es
pop
fists
mov
pop
fwait
jnp
js
dec
flds
pop
shl
jae
add
lea
mov
in
sbb
enter
test
adc
add
sti
mov
sub
xchg
inc
add
xchg
sahf
clc
mov
add
fwait
sbb
xchg
inc
add
mov
xchg
pop
mov
pop
adc
pop
mov
add
into
mov
add
ret
pop
test
cmp
pop
cmp
jg
pop
jb
add
pop
cmp
pop
aas
push
test
push
jp
pop
jmp
pop
or
add
enter
sti
xlat
jns
mov
fisubrl
loope
mov
sbb
jmp
into
mov
ljmp
mov
pop
push
add
add
add
and
add
mov
add
int
pop
into
and
add
mov
cmpsb
pop
xor
add
add
imul
add
add
xchg
ljmp
inc
pop
sbbl
pop
pop
pop
call
pop
jno
add
add
cltd
dec
pop
imul
pop
jp
xchg
lods
add
add
add
add
pop
push
inc
enter
sbb
add
aaa
push
scas
lret
sub
and
add
sub
pop
adc
add
and
repnz
add
xchg
sbb
cmp
add
in
call
pop
pop
jp
movsl
pop
push
pop
insl
aas
cmpps
pop
aas
or
add
and
add
fildll
add
dec
mov
enter
xor
add
shrl
ljmp
jp
mov
pop
add
pop
xchg
add
add
pop
lret
pop
jge
add
pop
push
add
xor
add
out
add
pop
cmpsb
pop
adc
add
dec
pop
add
add
cltd
pop
test
test
pop
inc
add
dec
js
add
sub
add
loop
pop
inc
pop
xchg
xchg
in
shld
cli
push
push
add
push
add
push
pop
xor
fxch
sub
aam
js
add
xor
add
push
add
outsb
push
add
push
add
sub
pop
stos
mov
dec
mov
xor
add
jecxz
sbbb
pop
das
pop
aad
stc
adc
add
add
sub
adc
add
and
add
push
sbbl
mov
mov
add
add
pop
pop
push
push
xor
enter
pop
pushf
sbbl
push
add
and
add
add
jne
xor
add
or
pop
sti
dec
cld
adc
pusha
add
dec
cmp
inc
pop
xor
add
pop
pop
cmp
sbbl
pop
adc
add
add
mov
push
stc
sbb
and
add
cmpsl
dec
arpl
and
ds
pop
cmp
push
out
mov
pop
mov
add
pop
rcrl
cmpps
adc
cmc
pop
add
inc
pop
adc
adc
mov
addr16
and
add
pop
mov
ret
pop
inc
pop
sub
pop
int3
cmp
popf
xchg
jne
jmp
arpl
sbb
loope
stos
mov
pop
pop
fcomip
push
push
push
cltd
int
pop
in
add
add
jae
add
add
es
jmp
lock
pop
sarb
sub
add
dec
fldt
pop
mov
popf
jo
add
sbb
sti
jmp
dec
adc
aaa
pop
dec
dec
mov
pop
adc
mov
xchg
sub
test
pop
repnz
xchg
jecxz
aad
fldcw
mov
add
shll
pop
mov
test
dec
lahf
add
ret
daa
pop
fistps
add
sbbl
out
in
cmp
inc
add
cs
push
mov
jmp
sub
or
pop
add
add
xor
adc
add
push
lods
sbbb
jmp
adc
loop
add
enter
fisttps
xor
pop
rcrl
add
sbb
add
loop
mov
mov
pop
stmxcsr
sub
mov
inc
pop
lahf
push
movsb
jmp
pop
mov
ljmp
mov
pop
sub
dec
lret
push
add
pop
sahf
out
push
mov
jmp
mov
pop
push
add
or
pop
icebp
pusha
add
repz
mov
push
mov
pop
iret
outsb
repz
add
add
popf
scas
hlt
fmul
mov
add
fisubrs
das
xchg
sub
add
lret
inc
pop
hlt
sub
pop
jl
push
pop
dec
sub
add
mov
cmp
sbb
add
bound
add
add
pop
sbb
xchg
fidivl
test
js
lea
add
push
popl
add
aad
test
mov
pop
mov
pop
out
sti
xchg
cld
and
add
gs
pop
rcr
sbb
out
and
arpl
cmp
pop
mulb
jmp
add
aaa
es
or
out
and
add
aaa
pusha
add
and
add
add
mov
aas
or
add
jmp
xchg
pop
fdivs
pop
je
sbbb
outsl
or
test
add
int
cmp
and
add
test
jmp
mov
add
pop
es
icebp
loop
or
jbe
sbb
mov
insb
dec
mov
test
pop
sahf
push
mov
pushf
jge
adc
add
jmp
in
out
outsl
adc
sbb
sub
add
cmp
xchg
adc
add
jno
add
test
in
jne
fstl
add
or
lret
jecxz
mov
pushf
jl
add
cmpsl
pop
into
out
je
xchg
sbb
adc
add
cmp
xor
add
pop
loopne
gs
add
xchg
dec
jmp
jmp
arpl
popf
sub
add
push
add
arpl
add
aaa
fstpt
push
jae
add
add
xor
pop
push
loope
inc
add
arpl
sub
add
mov
add
xor
add
add
mov
cli
inc
add
call
push
add
push
bound
add
add
pop
add
add
pop
aad
pop
hlt
mov
pop
call
in
xchg
and
jmp
daa
jp
arpl
pop
repnz
add
pop
adc
jmp
add
repz
add
mov
and
add
push
pop
jmp
jne
add
push
and
add
or
pop
and
add
dec
push
jge
xchg
and
add
pop
inc
pop
jnp
add
push
add
mov
repnz
pop
push
jb
add
add
mov
add
add
add
add
loope
sub
pop
add
add
sbb
add
outsb
pop
ds
test
add
ficoms
jmp
pop
arpl
cmp
add
add
add
rep
push
add
shll
xchg
pop
xchg
jge
pop
sbb
dec
push
jmp
xchg
adc
push
cmp
sbb
cltd
jae
add
ret
inc
push
push
js
lds
adc
add
add
inc
pop
jnp
mov
pop
xchg
lods
xchg
test
mov
pop
pop
ret
pop
je
nop
xchg
xchg
aas
mov
pop
pop
pop
insl
or
and
add
pop
shlb
add
mov
fs
sbbb
add
mov
imul
add
xor
and
add
in
pusha
add
adc
add
add
mov
test
testl
add
popl
add
ljmp
sbb
lds
jns
pop
sub
dec
aaa
push
add
cmp
adc
add
out
scas
cmpsb
pop
or
test
dec
jle
pusha
add
fs
dec
mov
pop
pop
loop
and
sub
pop
gs
je
cmp
in
out
xlat
xchg
lods
ret
pop
ficompl
es
aaa
out
aaa
dec
push
add
fucomip
sbbb
add
jno
add
jo
add
mov
add
and
add
jmp
pop
jmp
dec
ds
subb
xchg
mov
aas
pop
out
pushf
inc
pop
jae
add
jmp
xor
test
pop
lea
lcall
adc
add
pop
jge
imul
test
loope
divb
sbb
pop
mov
int3
sbb
fwait
shll
adc
add
cmp
je
fscale
xchg
pop
ror
mov
out
jne
add
aaa
je
mov
add
add
mov
mov
add
jmp
dec
sahf
dec
push
iret
inc
add
flds
or
les
sbb
das
stos
imul
in
add
add
repnz
lret
movsl
pop
jge
cld
sub
das
sbbb
test
pop
insl
addr16
pop
pop
sahf
test
ljmp
mov
mov
sgdtl
add
mov
inc
pop
pop
out
cmp
xchg
cmp
add
add
or
mov
fiadds
mov
adc
add
mov
addr16
cmc
mov
mov
pop
mov
lods
push
jmp
arpl
cmp
mov
mov
negl
test
or
jmp
or
mov
dec
mov
add
jp
jl
sbbb
add
sub
cmp
pop
lods
dec
into
fidivs
inc
pop
mov
pop
sahf
iret
push
rcll
push
ret
adc
daa
lods
fdivrp
push
inc
pop
push
add
cmp
pop
xor
add
jge
sbbl
stos
xor
add
xor
add
pop
inc
add
sarl
xlat
add
add
dec
es
sbb
sub
dec
jmp
push
adc
pop
outsl
cmp
and
add
pop
arpl
add
sbb
loop
mov
test
aaa
stc
push
add
jns
test
fwait
jno
add
imul
add
mov
jb
sub
add
xchg
xor
pop
add
add
push
pop
mov
pop
decl
mov
add
arpl
pop
xor
stos
dec
mov
pop
xchg
pop
repz
add
pop
jb
add
add
add
movsl
pop
xlat
xor
add
cmp
pop
pop
sub
ss
jbe
in
mov
add
add
rorl
pop
mov
shr
xchg
add
sbb
arpl
fimull
mov
add
pusha
add
imul
sbb
add
mov
or
pop
pop
fmull
dec
xchg
rcrb
mov
add
pop
cmp
pop
ficoms
add
add
add
test
pop
and
add
jmp
push
adc
add
sbb
add
loop
mov
mov
add
enter
or
sub
add
inc
pop
inc
add
add
add
push
push
push
ret
or
arpl
xchg
pop
in
sbb
pop
jmp
push
xchg
inc
pop
jp
pop
inc
pop
push
pop
pop
call
std
mov
lret
outsl
push
sbbl
push
ja
inc
pop
into
ja
add
adc
jmp
out
stc
sub
dec
mov
cmp
cld
push
sbb
rclb
xchg
pop
lcall
mov
add
add
lcall
pop
pop
inc
add
adc
add
and
add
rcrl
dec
mov
gs
jle
lock
add
add
dec
sub
pop
leave
and
add
out
pop
aas
sub
test
pop
and
add
es
sbb
add
pop
push
add
std
fnsave
add
mov
pop
movsb
pop
mov
add
mov
imul
mov
add
xchg
icebp
push
add
decl
test
call
adc
add
pop
scas
insb
push
push
pop
aam
mov
pop
adc
add
push
movsb
pop
sub
or
or
push
push
test
xor
add
sub
loop
xor
add
scas
inc
add
mov
add
push
ret
dec
lahf
push
add
and
add
out
pop
nop
sbb
add
xor
add
nop
popf
rcrb
pop
xor
add
add
pop
pop
sbb
pop
adc
mov
lcall
pop
jmp
nop
pop
les
jmp
mov
push
push
push
ret
sbb
sub
xor
add
leave
jle
sbb
pop
lret
mov
inc
add
push
pushf
mov
pop
mov
jle
bound
add
pop
cmp
inc
add
fdiv
xchg
mov
out
inc
pop
es
sbb
sldt
ds
arpl
pop
sbb
sbb
clc
incl
arpl
lds
rclb
add
adc
cmp
jae
add
add
xchg
into
popa
add
ljmp
xchg
push
xchg
fwait
mov
adc
add
enter
in
and
add
xor
add
pop
iret
flds
add
mov
add
sbb
add
mov
add
inc
add
add
add
xchg
push
add
sbbb
mov
sbb
add
cmpsl
pop
adc
stc
fadds
add
les
out
or
jl
add
enter
movsb
pop
dec
mov
aas
mov
pop
pop
cld
das
mov
aas
repz
jp
mov
or
xor
test
stos
sahf
add
add
jne
pop
cmp
push
pop
mov
dec
popf
lahf
add
add
dec
outsb
mov
lods
movsl
pop
jne
mov
add
xor
mov
xchg
push
pop
pop
leave
imul
pop
jmp
pop
add
pushf
filds
inc
mov
int3
push
pop
sti
push
loop
out
fstpl
pop
decb
or
pop
mov
add
sub
push
inc
pop
xchg
cmc
add
repz
xor
add
outsl
clc
les
mov
gs
inc
add
and
add
add
mov
roll
add
add
mov
adc
jbe
add
mov
lahf
xor
add
add
sbbb
pop
rorl
inc
push
ret
mov
pop
or
jmp
inc
add
test
add
cli
xor
add
insl
jbe
out
push
add
sbb
pop
xchg
jno
add
push
jg
out
ja
jbe
imul
imul
and
add
aas
xchg
in
mov
sub
add
lret
push
pop
ficoms
add
add
adc
add
cmp
jmp
adc
ds
sti
pop
inc
add
mov
add
add
jne
stos
sub
inc
pop
cmpsb
pop
xchg
rcrb
inc
add
popf
push
dec
into
push
adc
mov
iret
sub
dec
push
pop
dec
aaa
call
pop
xor
xor
add
add
fiadds
aam
add
ret
mov
out
cwtl
xchg
stos
sub
cmp
add
add
add
pop
pop
sahf
test
insl
popf
int
add
cmpsl
pop
push
mov
and
jns
pop
pop
sbb
scas
fldl
add
mulb
add
outsb
push
pop
jns
pop
cmp
inc
add
jae
add
mov
jl
jp
push
lods
mov
iret
add
add
mov
pop
sbb
stos
rorl
push
add
sbb
pop
mov
pop
cmp
add
aas
mov
arpl
add
mov
xor
add
mov
pop
jno
add
push
in
add
in
jne
out
lcall
xchg
add
add
xchg
xor
add
jle
pop
in
xor
pop
rcrb
decl
mov
add
fucomip
std
fsubr
dec
jmp
adc
add
pop
adc
add
lds
adc
add
mov
add
pop
adc
add
mov
mov
inc
pop
push
add
scas
jno
add
xchg
cmp
jnp
mov
add
push
ret
aaa
mov
add
popf
jae
add
sub
into
push
add
in
insb
xor
add
mov
dec
jmp
xor
cli
cwtl
pop
pop
ret
out
cmc
sbbl
dec
mov
pop
adc
add
adc
add
add
jo
add
sbbb
add
jo
add
lret
test
xchg
pop
push
ret
ret
xor
add
push
add
mov
mov
pop
dec
mov
lods
idiv
lcall
push
arpl
add
lahf
lea
inc
pop
cld
mov
add
loope
sbb
sub
pop
lods
mov
pop
pop
jecxz
pop
movsl
pop
inc
pop
filds
add
xor
add
ret
pop
mov
inc
pop
ret
pop
jmp
repnz
in
roll
pop
sub
and
add
add
add
shrl
ljmp
add
sbb
xchg
sbb
jns
inc
add
mov
sbb
aas
jmp
fs
mov
hlt
push
add
mov
pop
rcrb
add
add
sti
xchg
xor
sub
or
faddp
pop
lcall
or
add
add
xchg
xchg
lods
out
sbb
add
add
pop
les
cmpsb
pop
call
add
setge
sub
push
add
mov
add
cmp
mov
xor
sub
pop
rcll
add
daa
pop
lds
push
cmpsb
pop
js
jmp
adc
add
pop
stos
xor
add
add
pop
jmp
pop
mov
or
add
inc
add
insl
inc
add
sbb
add
add
pop
pop
jp
pop
repz
mov
jmp
arpl
dec
ljmp
add
add
gs
jno
add
mov
jmp
filds
dec
pop
cmpsl
out
push
inc
pop
popf
mov
add
aaa
push
xor
add
add
int
cmp
mov
add
ret
fbld
jmp
push
daa
sti
arpl
adc
push
bswap
mov
sbb
jne
pop
jg
pop
call
or
pop
xor
add
in
mov
lret
pop
cs
rcrb
in
xor
add
add
add
jmp
sbb
arpl
xchg
les
pop
js
pop
sub
sahf
mov
jp
xor
pop
fcompl
push
jmp
push
ret
fs
pop
xor
pop
xor
add
mov
fidivs
ffreep
pop
loopne
mov
outsb
rol
pop
xor
add
inc
pop
cmp
jmp
out
ja
add
outsb
push
add
sahf
cli
movsl
pop
daa
pop
pop
jae
add
add
pop
sub
pop
dec
ds
xchg
sbb
pop
popf
sub
clc
jbe
pop
pop
neg
pop
rol
pop
stc
jmp
add
in
jb
add
pop
inc
pop
jmp
push
and
add
add
insl
push
add
cwtl
inc
pop
push
rcll
or
stc
pop
add
add
test
pop
pop
out
pop
push
add
adc
add
add
xor
add
add
test
add
xchg
mov
inc
pop
leave
movsb
pop
mov
jae,pt
add
pop
lock
aam
sbbb
aaa
sbbl
pop
or
add
xor
add
aas
cmp
out
mov
pusha
add
out
add
add
add
xchg
lock
test
rcrl
pop
push
shl
jmp
dec
add
pop
mov
add
inc
pop
das
and
lods
roll
add
add
fildl
add
mov
xlat
pop
sub
lcall
out
xor
cmpeqps
add
pop
inc
add
xchg
dec
cld
sbb
mov
mov
add
and
pusha
add
fprem
and
add
pop
notl
add
mov
add
movsl
pop
xchg
punpckhdq
pop
xchg
es
xchg
jle
jp
pop
es
mov
enter
add
lret
jmp
add
pop
dec
push
add
pop
int
cltd
int
pop
jo
add
add
int3
jg
loope
fcmovnb
pop
and
add
aas
gs
or
add
mov
mov
int
sbb
xchg
pop
fcmovnbe
and
add
imul
jmp
arpl
or
add
xchg
sub
add
xor
aam
cmp
sbbb
adc
add
inc
add
in
dec
add
sbb
stos
jb
add
add
push
jmp
and
jno
add
or
lahf
add
add
pop
jge
mov
add
imul
sahf
fstps
notb
xor
add
rcrl
push
add
push
lods
rcrl
shll
add
sbb
add
call
pop
popf
test
pop
cld
mov
mov
mov
cmp
add
inc
add
out
dec
push
arpl
add
add
cmp
add
dec
das
inc
pop
rcrb
cld
rcll
out
leave
xchg
popa
add
ret
sbbb
lods
sbb
add
sbb
leave
jmp
arpl
xor
pop
xor
add
pop
icebp
cmpsl
pop
insl
aaa
mov
and
add
pop
push
sub
and
outsb
mov
pop
scas
jl
jmp
bound
add
enter
aam
lahf
imull
add
fidivs
out
cmpsl
pop
xchg
stos
fiaddl
adc
add
icebp
dec
add
or
add
dec
push
inc
pop
adc
add
sub
xor
add
out
and
add
inc
pop
jle
addr16
mov
dec
lods
repz
fnstenv
add
push
pop
cmpsl
pop
adc
add
roll
mov
add
add
lret
lahf
scas
mov
pop
jg
call
or
mov
jno
add
add
cmp
pop
mov
add
add
lods
out
rorl
fs
movsb
pop
xchg
xchg
xchg
pop
push
add
mov
mov
loopne
out
out
out
add
add
outsb
test
jo
add
mov
pop
outsb
push
pop
in
mov
sbbl
pop
cmp
pop
push
add
dec
sbb
arpl
cmp
icebp
adc
add
pop
dec
mov
je
add
and
add
add
testb
xor
add
daa
pop
sbb
popa
add
xlat
xor
add
pop
scas
aam
pop
pop
xlat
mov
add
sbbb
add
clc
pop
jmp
inc
pop
sub
add
xor
add
add
mov
add
and
add
lret
add
cmpsl
pop
in
xchg
inc
add
sbb
add
aaa
mov
jmp
or
arpl
pop
push
pop
and
add
add
ja
mov
pcmpeqd
inc
pop
loop
xor
add
add
xchg
add
add
sarl
inc
add
sbb
sub
lock
add
inc
pop
test
add
pop
xchg
jge
add
popf
mov
int
test
call
add
fs
imul
add
outsb
or
out
jl
aas
arpl
add
xor
add
add
pushf
mov
in
mov
in
or
pop
sub
mov
filds
add
inc
pop
dec
mov
sub
testb
ret
pop
inc
pop
sbb
jb
add
add
mov
pop
imul
mov
add
mov
fucomip
push
push
add
std
pop
add
add
gs
dec
and
add
repz
add
ret
mov
pop
or
dec
ja
mov
xchg
mov
push
ret
into
sub
mov
add
pop
sahf
in
add
add
mov
jmp
pop
addb
dec
mov
xchg
xlat
rorb
cmpsl
pop
cmpsb
pop
ret
pop
rcrb
pop
ja
push
pop
and
add
xor
inc
add
incb
pop
dec
xor
arpl
add
stos
dec
gs
mov
xchg
pop
out
inc
pop
out
fs
pop
xchg
aaa
out
sbb
add
pop
sub
add
xor
add
add
ja
add
lcall
cld
fildl
add
pop
add
add
enter
or
cmpsl
pop
nop
cmp
add
aaa
mov
push
cmp
ret
int
pop
rolb
pop
insl
push
add
jg
pop
arpl
add
call
add
pop
pusha
add
aas
dec
ljmp
add
add
add
rcrl
mov
dec
mov
pop
iret
mov
leave
rclb
add
hlt
jge
and
adc
add
fcmovu
fs
lret
pop
push
aas
enter
test
pop
mov
mov
jmp
xor
cmc
cmp
add
pop
xchg
or
jge
pop
ret
pop
sbb
mov
pop
enter
add
add
pop
inc
add
daa
pop
out
fwait
and
add
add
cmp
push
or
jmp
push
dec
xor
pop
or
test
push
jmp
adc
dec
out
jne
jbe
pop
sbbb
add
xor
add
rcrl
add
sub
jecxz
std
push
pop
fsub
pop
repnz
jecxz
inc
add
jp
add
pop
dec
sub
add
lock
push
mov
jmp
push
and
xchg
test
repnz
pop
xchg
test
sbb
pop
inc
pop
out
inc
pop
repz
rcrb
pop
cmpsb
pop
rcrl
add
push
stos
jmp
mov
daa
jp
pop
mov
inc
add
sti
cmc
push
push
pop
add
add
dec
push
add
je
leave
setno
or
add
test
pop
aam
pop
mov
sub
adc
add
pop
cmp
adc
add
das
jnp
mov
cmp
pop
pop
ljmp
sub
rcrl
add
cmp
lds
sbbl
pop
testb
mov
push
add
dec
lock
add
cmp
sbb
decl
mov
adc
xor
add
pop
jmp
dec
arpl
pop
sbbl
js
add
push
cli
pop
shlb
leave
mov
pop
xchg
cli
push
add
mov
pop
pop
xchg
add
add
add
pop
aas
and
add
cmp
add
lcall
aaa
jno
add
add
ret
pop
pop
mov
pop
fs
fwait
pop
rcrl
add
movsb
pop
lret
aad
pop
xor
pop
jnp
lret
add
add
int3
repz
shlb
mov
lds
cmp
cwtl
lods
es
das
pop
jg
adc
add
pop
test
movnti
mov
pop
adc
add
js
sub
je
jmp
aaa
xchg
test
mov
add
fsubr
sahf
mov
or
push
inc
add
dec
or
mov
adc
add
pop
add
add
scas
sub
add
loopne
hlt
insl
cltd
arpl
add
add
add
jmp
out
pop
shl
pop
shll
add
dec
push
add
or
mov
cltd
jae
add
add
xor
add
pop
stc
cmpsl
pop
stos
push
add
loopne
lea
out
out
int3
mov
pop
push
xchg
jb
add
adc
add
add
push
mov
fdivrl
pop
pop
ficoml
add
out
cmp
loop
lcall
or
mov
add
pop
add
insl
aas
cs
xor
add
add
adc
add
icebp
pop
mov
add
test
mov
clc
out
xchg
pop
aad
add
daa
pop
les
push
add
xchg
jl
add
push
add
inc
pop
fstpt
add
add
xor
add
add
js
and
add
ds
add
les
inc
pop
sbbl
add
lock
gs
jl
add
add
mov
std
dec
test
gs
inc
add
xchg
add
add
xor
add
add
mov
add
pop
stc
out
je
add
dec
repz
add
pop
adc
lds
dec
icebp
pushf
nop
les
in
inc
pop
mov
push
ret
cmpsl
and
jmp
add
outsl
fcompl
add
dec
fidivl
lcall
pop
xor
add
jb
add
js
mov
xor
add
pop
shrb
jle
pop
pop
dec
pop
jb
add
aam
pop
inc
pop
mov
pop
add
add
mov
add
les
out
mov
pop
cmp
and
add
and
rcrl
pop
fldcw
cld
mov
dec
pavgw
add
push
jmp
add
inc
add
call
add
push
push
add
lock
rcrb
sahf
arpl
add
ljmp
add
sbb
mov
add
arpl
fs
xchg
and
aas
xchg
xchg
pop
loop
dec
push
and
pop
arpl
add
add
pop
sbbl
ljmp
mov
add
add
adc
add
add
add
xor
add
outsl
push
add
div
fwait
mov
pop
xor
add
add
inc
pop
mov
pop
xchg
lret
sbb
mov
sahf
lret
or
or
cmpxchg
inc
pop
push
add
and
add
je
add
fcmovne
repz
jno
add
jmp
add
cs
and
add
pop
push
pop
mov
pop
fdivp
ficoms
add
inc
pop
cli
pop
lds
aas
xchg
icebp
adc
add
xor
aaa
jg
loopne
sub
adc
mov
dec
cwtl
sbb
pushl
xor
out
mov
lds
inc
add
call
sbb
rcrb
sub
xlat
mov
add
pop
imul
pop
mov
test
sti
xor
jne
cmp
add
lods
les
add
inc
pop
xor
addr16
mov
std
add
insb
leave
call
in
pop
sarl
xchg
lcall
mov
pop
pop
pop
mov
pop
outsl
cmpsb
pop
sub
test
jmp
pop
nop
cmp
in
or
repnz
cmc
fwait
in
mov
mov
adc
pop
fiaddl
pop
or
call
push
ret
push
cmp
mov
mov
jmp
ret
pop
pop
cmp
inc
pop
ret
pop
push
push
dec
mov
pop
xor
add
pop
ja
pop
add
add
pop
dec
scas
xchg
test
pop
loope
stc
dec
ja
mov
pop
out
lret
add
mov
pop
xchg
imul
push
add
sbb
inc
add
inc
add
in
rol
pop
cmp
pop
mov
add
adc
add
mov
xor
add
or
xchg
repz
pop
jp
add
stc
cmp
add
xchg
mov
add
mov
cltd
ret
add
dec
loopne
sbbl
pop
or
add
enter
push
add
sbbl
xlat
xor
add
mov
jp
int3
jns
inc
add
push
pop
out
test
roll
pop
mov
xchg
fisubs
add
and
add
rcrb
add
rcrb
xchg
cs
mov
cwtl
stc
js
xchg
jae
add
jg
mov
pop
fcmovnbe
pmaxub
out
jmp
arpl
cmc
push
pusha
jmp
push
ret
mov
lods
sbbb
bound
add
repz
fs
arpl
add
pop
cs
inc
add
mov
pop
nop
les
into
out
mov
add
add
xor
add
xchg
sbb
jae
add
int3
xchg
add
out
out
leave
xchg
es
repz
leave
sub
fdivrl
jl
insb
icebp
mov
sbbb
pop
mov
cmp
add
ds
and
sbb
pop
sub
pop
sbbb
add
cli
incb
pop
sti
les
pop
into
fdivrs
pop
or
les
add
jo
add
pop
xor
add
sahf
pop
mov
sbbb
add
dec
cmp
push
add
jmp
arpl
arpl
in
dec
jno
add
cmpsb
pop
xchg
ljmp
add
add
jmp
mov
arpl
add
pop
mov
pop
sub
add
pop
ja
sub
stc
in
xchg
fcomp
sbbb
mov
pop
les
mov
jle
fimuls
mov
fnsave
add
push
pop
and
add
cmp
test
outsb
xchg
outsb
inc
add
jo
add
pop
out
push
sub
nop
stc
inc
pop
xchg
mov
jle
add
add
add
sub
ss
pop
pop
sub
lahf
movsb
pop
xor
add
out
in
xchg
jbe
dec
movsl
pop
test
fldt
add
ljmp
add
aam
ljmp
arpl
add
mov
mov
pop
adc
mov
mov
cmpsb
pop
cmp
pop
mov
rcrb
test
pop
mov
add
xchg
sub
dec
imul
pop
int
mov
add
fnsave
pop
mov
pop
mov
sbbl
push
jo
add
int3
mov
insl
rep
pop
sub
add
push
add
loop
call
mov
inc
pop
sbb
mov
and
add
leave
sub
jl
pop
pop
adc
add
pop
and
add
pop
push
les
sbbl
jnp
sbbl
jmp
xor
add
xor
daa
pop
pop
mov
add
pxor
lahf
and
add
add
mov
test
iret
mov
pop
pop
xchg
scas
sbbl
pop
or
pop
xlat
out
or
dec
or
dec
mov
cmp
add
call
cmpsl
pop
pop
pop
stos
pusha
add
pop
pop
mov
jmp
mov
xor
add
cld
mov
je
xchg
xor
pop
fwait
es
push
jmp
mov
add
sub
add
add
add
mov
imul
pop
mov
das
cmp
add
mov
pop
and
add
gs
loop
jno
add
cmp
movsb
pop
in
xchg
lods
xchg
adc
add
add
jns
xor
add
push
add
ja
inc
pop
loop
pop
lock
pop
in
lcall
pop
xor
in
movsb
mov
cmp
cmpsl
add
loopnew
adc
pop
scas
mov
add
pop
clc
sub
pop
rcrb
les
loope
cmp
jmp
sub
movsb
pop
dec
arpl
add
mov
jmp
fistpll
add
nop
xlat
sahf
sbb
jno
add
add
add
add
add
gs
dec
mov
cwtl
xor
add
push
cmpxchg
mov
add
add
add
adc
lock
add
leave
fdivrs
pop
aas
icebp
pop
pop
dec
hlt
daa
pop
xchg
add
dec
inc
add
add
and
add
lods
lret
fwait
cs
lahf
ljmp
and
add
xor
sarb
rcrb
add
add
add
pop
push
mov
pop
lret
outsb
sub
add
cmp
scas
pop
adc
add
and
xor
enter
add
inc
pop
test
popl
add
aad
push
add
or
add
clc
icebp
in
lret
add
pop
adc
sbb
adc
add
and
cld
adc
add
pop
insb
arpl
add
sub
add
add
add
pop
leave
adc
add
dec
outsl
test
and
add
pop
js
xchg
xchg
dec
les
add
xor
add
mov
pop
xor
add
imul
jmp
push
arpl
add
jmp
lods
xor
add
sub
sub
xor
sahf
cmp
push
add
pop
aaa
adc
add
add
add
pop
out
or
xchg
sub
jnp
pop
pop
stos
out
mov
mov
bound
add
add
ja
out
mov
mov
or
cmp
add
push
ret
ds
lock
pop
popa
add
aaa
repnz
lahf
mov
pop
pushf
push
ret
pop
decl
cmc
lcall
and
enter
xor
add
stos
rcrb
inc
pop
sbb
jmp
sbb
sub
pop
mov
dec
hlt
jbe
repz
movsl
pop
rclb
pop
and
add
pop
enter
out
adc
sbb
inc
pop
fstpt
push
dec
jne
add
add
lods
iret
fdivr
loopne
mul
pop
or
pop
iret
xor
add
adc
add
pop
fbstp
add
xchg
es
scas
xchg
mov
add
cmpsl
pop
lcall
pop
sub
add
mov
add
aaa
or
lods
mov
cmp
mov
jmp
arpl
enter
popf
out
pusha
add
out
stc
push
add
dec
and
add
pop
aad
jb
add
pop
adc
add
add
testb
add
pop
pop
lods
adc
add
imul
lods
adc
jg
sarl
xchg
xor
add
cmp
scas
lea
pop
mov
sbb
xchg
lods
std
repz
add
sahf
xchg
mov
movsb
pop
repnz
add
jns
aaa
push
bnd
push
or
sbbl
pop
test
pop
xchg
test
mov
in
lea
pop
add
add
loopne
fmull
pop
mov
in
jmp
cmp
pop
push
popf
adc
add
pop
fs
out
pop
rcrl
add
xor
push
ret
arpl
sbb
add
mov
mov
aas
fdiv
add
fsubrp
mov
cmp
pop
loopne
sub
dec
inc
add
xchg
rorb
pop
jmp
pop
push
xchg
pop
jne
or
and
add
pop
add
add
add
and
and
pushl
jmp
sbb
add
jmp
pop
ss
ret
pop
lahf
jmp
push
add
jo
add
pop
push
lret
pop
test
add
call
pop
rcl
clc
idiv
xor
add
pop
ja
jp
pop
mov
jae
add
add
xchg
jno
add
movsl
pop
add
add
add
adc
add
mov
push
push
ret
add
push
fdivl
add
pop
les
into
mov
mov
add
jmp
add
push
pop
add
arpl
cmpsl
pop
movsl
pop
xchg
cmc
mov
repnz
dec
bound
add
jp
pop
jb
add
dec
loopne
mov
aad
scas
cli
sub
lods
sti
xor
add
pop
pop
jno
add
add
push
mov
add
add
mov
outsl
mov
stos
ret
pop
dec
in
test
pop
jb
add
or
pushf
lock
jmp
inc
fnstenv
add
shlb
outsb
cld
adc
add
add
adc
dec
xchg
pop
pop
dec
fucom
pop
pop
icebp
jecxz
outsl
ret
pop
jnp
sbbl
repz
pop
sbb
xchg
popa
add
dec
ss
lock
into
mov
shlb
inc
add
arpl
add
sbbb
add
inc
add
mov
lret
loopne
cmp
sub
pop
sti
jg
scas
xchg
mov
and
mov
mov
add
lods
loope
cmp
pop
adc
add
add
mov
or
pop
dec
fildll
iret
bound
add
lcall
xor
add
idivl
pop
ss
add
movsb
pop
aas
fildll
dec
popf
filds
sub
pop
jno
add
add
sub
add
cmc
pop
insl
sub
push
les
rcrl
jnp
aaa
xor
add
jmp
add
ret
pop
or
rcll
add
cmp
pop
test
repz
sbb
or
mov
adc
add
add
ja
pop
mov
pcmpgtd
fcomip
pop
pop
fmull
pop
repnz
jno
add
divl
mov
pop
cmp
addr16
jge
sbbb
add
push
jo
add
lret
cs
aaa
xchg
push
add
loope
and
add
and
add
xor
add
add
push
add
dec
xor
and
dec
push
ret
push
add
xchg
sub
dec
testb
cmp
pop
cli
imul
add
pop
fs
dec
pop
lock
and
add
mov
out
sbbl
test
and
add
pop
sti
or
jo
add
pop
xor
int
pop
lahf
stc
testb
lds
add
imul
pop
inc
add
pop
pop
pop
movsl
pop
push
aaa
fwait
inc
pop
xchg
movsl
pop
stos
call
add
xor
add
aaa
nop
pop
ja
inc
add
sbb
mov
pop
sbb
pop
movsb
pop
lret
lds
add
pop
pop
add
add
inc
pop
loop
cmp
add
add
add
inc
pop
sbbl
imul
push
add
je
pop
movsb
pop
out
setp
xlat
shlb
pop
inc
pop
fbld
scas
daa
pop
out
ss
add
mov
add
lret
lds
nop
inc
add
ret
lcall
mov
add
cli
or
and
jmp
arpl
sub
pop
cltd
inc
pop
pop
test
inc
add
into
aaa
xchg
aam
add
adc
xchg
aam
pop
cmp
add
xchg
xchg
out
lds
and
add
pop
out
dec
icebp
popa
add
lock
add
fs
xor
add
test
pop
arpl
add
pop
dec
xchg
jnp
pop
xchg
xlat
adc
or
js
leave
fadds
rcrb
xchg
adc
pop
push
dec
mov
push
push
jne
push
ret
inc
pop
fiadds
add
mov
pop
pop
pop
xor
fsubrs
inc
add
or
bound
add
das
or
add
icebp
and
push
pop
or
pop
aad
pop
pop
stos
mov
jbe
pop
jne
dec
fimull
jns
or
add
rcrb
cld
mov
add
or
pop
repnz
addr16
hlt
les
lock
mov
pop
cmc
call
pop
and
add
push
add
push
ret
ret
add
insb
jae
add
sbb
rcr
decl
dec
jp
arpl
add
mov
or
pusha
add
ljmp
addr16
add
mov
pop
or
jno
add
inc
pop
stos
cmp
imul
sbbl
pop
push
add
js
xchg
pop
mov
add
sbb
pop
push
mov
pop
cmpsb
pop
jb
add
pop
jmp
aam
add
pop
jl
pop
test
jle
pop
scas
addr16
pop
pop
cmovnp
add
stos
ljmp
gs
pop
push
mov
jbe
push
add
popf
mov
and
add
inc
add
mov
add
hlt
jl
fstpt
add
into
sar
fwait
imul
jmp
jmp
jne
sbb
mov
inc
add
sbb
fs
dec
clc
jne
pop
sarb
aas
xor
add
inc
pop
mov
int
popa
add
repnz
sbb
pusha
add
jecxz
pop
xchg
in
iret
inc
add
scas
dec
rcrl
inc
add
mov
push
test
fs
sbbb
stc
jmp
out
xor
sarl
pop
outsl
or
pop
movsb
pop
icebp
cmp
or
pop
sub
imul
arpl
pop
pop
pushf
push
push
add
enter
xor
add
shlb
add
add
mov
pop
aam
pop
add
lock
pushf
ss
dec
xor
add
add
fists
add
sbb
add
xchg
xchg
rcrb
jne
jmp
pop
or
pop
jb
add
popa
add
push
mov
mov
out
out
pop
aam
int
pop
incl
shr
out
adc
add
dec
mov
fistpl
rorl
or
out
dec
mov
push
add
lret
aas
fsub
pop
cmpsb
pop
sbb
add
and
add
jne
pop
inc
add
aaa
sahf
mov
fwait
mov
add
mov
ja
lods
cld
aaa
insl
js
xchg
mov
add
add
cmp
insb
push
mov
jmp
fstps
arpl
mov
cs
fmuls
pop
lods
add
add
iret
sub
scas
cmp
push
repz
add
mov
imul
pop
ret
fwait
push
pop
inc
add
jno,pn
add
pop
in
xor
add
out
popa
add
lcall
add
add
add
jmp
lahf
in
jnp
add
xor
add
rclb
pop
adc
add
add
rolb
add
add
stos
mov
in
mov
add
xchg
pop
fildl
add
add
push
xchg
mov
cwtl
mov
add
xchg
pop
pop
and
add
add
pop
mov
xor
add
lods
or
push
jl
jmp
add
lea
add
or
and
mov
inc
add
lock
or
add
push
mov
pop
mov
icebp
mov
inc
add
pop
sub
popa
push
ret
outsl
inc
arpl
pop
dec
sub
rcrb
add
cmc
push
sbb
pop
lahf
sbb
inc
and
adc
add
ret
cmp
pop
xchg
add
not
in
cmp
test
xor
or
mov
pop
les
pop
cltd
sbb
add
add
pop
mov
add
sti
pop
fbld
dec
dec
popf
addr16
enter
jns
test
loopne
push
add
jmp
add
repnz
ljmp
repz
pop
and
cld
lock
das
outsb
jne
add
jmp
daa
outsl
adcb
pop
leave
pop
cmp
nop
imul
push
pop
rcrb
add
int3
sbb
jne
push
ret
mov
add
pop
enter
lret
dec
jge,pt
add
jnp
jge
sub
clc
aam
jno
add
pop
inc
add
inc
pop
and
xlat
pop
es
sub
fsubrl
ja
add
add
and
add
pop
pop
xor
add
add
add
add
add
adc
add
fwait
pop
cmp
push
scas
adc
add
jne
add
jnp
sbbb
addr16
jno
add
or
call
adc
into
aad
jnp
popa
add
out
fsqrt
rcrb
jle
add
mov
jmp
push
inc
add
aas
test
pop
or
or
xchg
enter
cld
rcrl
pop
nop
cmc
pop
mov
pop
lcall
imull
je
pop
lods
ss
je
add
add
fwait
mov
add
push
xor
add
pop
jb
add
add
jge
cmp
push
fdivrp
pop
mov
dec
dec
imulb
jle
rcrl
dec
jns
stos
aaa
or
leave
sbb
cmp
aaa
call
push
add
gs
push
xchg
add
out
jge
sbbb
mov
pop
in
repz
mov
jmp
arpl
add
movsl
pop
sub
mov
pop
cmp
add
pop
addr16
add
add
test
pop
lcall
inc
pop
jbe
add
sub
and
mov
pop
lret
repnz
in
jg
pop
pop
pop
dec
lret
sub
add
push
je
xor
add
in
and
add
stc
jne
or
aad
xor
inc
add
pop
aad
add
lea
add
fnstcw
xor
add
enter
jge
cs
add
scas
jp
add
inc
add
jae
add
add
pop
push
xchg
ljmp
mov
jecxz
cltd
dec
rcrl
call
mov
add
pop
inc
adc
push
dec
xor
in
sti
sub
adc
add
popf
cltd
loope
ja
cli
push
pop
cmc
dec
aaa
xor
add
mov
add
int3
sbb
add
call
movsb
pop
call
movsb
pop
and
add
stos
loope
pop
and
dec
int
add
and
add
pop
sbb
pop
and
add
xchg
push
add
movsl
pop
cli
lret
pop
leave
gs
sbbb
jnp
push
add
jno
add
mov
add
xchg
ss
sbbl
dec
mov
add
cmp
sti
int
inc
pop
scas
outsl
jmp
arpl
pop
pop
add
mov
sti
cmpsl
pop
mov
daa
pop
pop
jbe
pop
sbb
pop
fs
iret
sub
add
adc
add
add
add
call
ja
add
add
arpl
test
fldcw
sub
sbb
add
jae
add
mov
add
pop
push
rcrb
rolb
add
add
add
in
fidivl
add
add
stos
mov
movsl
pop
push
mov
gs
adc
add
iret
xor
dec
xchg
out
outsl
pop
or
and
add
pop
jnp
pop
cmp
jno
add
add
adc
add
mov
push
pop
push
add
push
pop
pop
dec
mul
pop
in
sub
xlat
mov
add
mov
es
mov
je
cmp
mov
and
pop
hlt
das
cmp
add
add
add
pop
xor
pushf
cli
pop
dec
nop
fs
lds
rol
pop
xlat
jae
add
add
clc
and
add
xor
add
shll
sarl
insb
adc
add
pop
push
test
fldenv
push
mov
push
in
mov
sbbl
and
add
add
mov
cmp
es
fiaddl
add
add
into
mov
add
mov
add
jb
add
inc
pop
add
add
fldcw
insb
sahf
xor
add
sub
pop
and
add
pop
mov
and
add
jle
add
adc
add
push
ja
jmp
pop
jmp
cmp
add
mov
pop
dec
add
mov
or
inc
pop
testb
stos
mov
aas
add
add
xor
add
adc
add
add
cli
xchg
sbb
push
add
arpl
outsl
stos
iret
pop
aam
sbb
ja
stos
unpckhps
pop
out
cmp
jmp
sub
int
pop
repz
cwtl
mov
pusha
add
adc
pop
or
mov
add
adc
add
fcmovnbe
or
pop
imul
add
inc
add
stc
push
add
adc
add
add
mov
mov
dec
sbbb
gs
push
add
ret
pop
gs
fidivs
shrl
clc
inc
add
inc
add
dec
rcrb
xchg
pop
pop
jecxz
sti
pop
test
jmp
dec
ds
pop
mov
testl
sbb
ret
jmp
arpl
sub
pop
xlat
sub
repz
mov
mov
pop
mov
mov
xor
pop
jno
add
cmp
push
repnz
add
lcall
add
mov
jnp
jl
fcompl
sbbb
aaa
rorl
movsb
pop
inc
pop
out
push
xor
xchg
pop
pop
call
lret
add
mov
test
sbb
mov
aad
in
or
xor
add
add
nop
nop
xor
add
add
pop
shl
pop
pop
fistps
sti
push
int
add
xchg
xchg
arpl
fcoms
add
roll
xor
mov
add
es
dec
xor
add
and
add
or
pop
repz
add
mov
xchg
dec
add
add
ret
pop
xor
add
sub
add
add
movsb
pop
stc
imul
sti
push
mov
push
ret
mov
pop
jb
add
dec
arpl
add
inc
pop
mov
test
jno
add
inc
add
mov
jnp
shlb
add
movsl
pop
pop
sbbb
mov
sbb
jecxz
sti
xchg
ss
add
add
jae
add
add
lret
lret
dec
push
add
jbe
add
sar
jns
pop
mov
add
add
pop
enter
sub
fsubrl
dec
movsl
pop
jp
out
js
pop
adc
jecxz
popf
mov
ret
pop
ret
xchg
and
pop
test
add
dec
arpl
ret
mov
popa
add
sbb
mov
sbb
dec
cmp
into
leave
ljmp
pop
dec
test
add
push
add
decl
mov
jmp
ds
jge
decl
test
pop
fadds
ret
push
add
mov
add
xlat
cmp
or
pop
inc
pop
jmp
jmp
jbe
add
mov
mov
mov
aam
daa
pop
adc
add
xor
add
lss
lods
pop
xchg
movsb
pop
pop
pop
dec
sub
pop
and
add
xor
add
add
dec
sbb
jg
lea
lock
mov
adc
add
pop
mov
fisubl
pop
mov
pop
push
add
repnz
and
mov
inc
add
arpl
ljmp
pop
push
imul
dec
pushf
in
pop
or
add
mov
and
iret
imul
sub
rcrb
pop
adc
pop
roll
add
add
pop
jg
mov
stc
cmp
pop
loop
xchg
dec
jp
add
cs
sbb
pop
int3
stos
mov
adc
add
jp
or
add
pop
scas
fstp
lods
fwait
adc
add
add
mov
out
rcrb
aam
cmp
popa
inc
add
cmpsl
fldcw
push
add
mov
push
pop
mov
enter
pop
sbb
mov
int3
decl
dec
dec
mov
mov
push
add
fnsave
pop
push
push
push
lods
jno
add
cmc
mov
add
jmp
push
or
mov
sbb
mov
mov
imul
pop
mov
add
jo
add
jmp
arpl
push
add
jb
add
add
hlt
mov
sub
sarl
inc
add
adc
xchg
in
xchg
aas
cmp
add
pop
hlt
mov
pop
add
sbb
ljmp
dec
imull
add
sub
pop
or
or
fiaddl
pop
dec
sub
leave
xchg
mov
inc
add
jo
add
push
cmp
add
push
add
mov
pop
out
lahf
je
pop
xchg
xlat
adc
add
pop
inc
pop
in
jnp
add
add
pop
pop
xchg
dec
push
mov
nop
repnz
sti
xchg
pop
jnp
jg
daa
pop
mov
push
into
xor
add
movsl
pop
xchg
or
inc
pop
sub
add
or
fiaddl
add
adcb
dec
mov
push
pop
sub
rolb
mov
add
scas
mov
rcrb
mov
add
adc
mov
push
jmp
enter
arpl
pop
cmpsb
pop
mov
inc
add
and
add
scas
icebp
leave
fnstenv
add
pop
xchg
adc
packsswb
add
popa
add
push
leave
mov
sbb
xor
xchg
aam
pop
cmp
pop
mov
bound
add
lods
movsl
pop
aad
lret
pop
stos
arpl
add
pop
or
sahf
and
add
dec
dec
loop
adc
xchg
sub
cmp
xchg
sub
pop
gs
popf
xor
jg
jmp
and
arpl
pop
decl
aad
lcall
cmp
add
add
add
jae
add
out
lods
clc
fisubs
mov
ffreep
mov
add
push
add
mov
pop
loope
fisttpl
decl
test
add
arpl
add
popa
add
cmpsl
pop
fucomip
rcrb
and
add
inc
add
imul
pop
jo
add
loop
dec
icebp
aam
or
dec
inc
add
and
sbb
dec
sti
es
mov
pop
xor
add
xchg
pop
dec
and
add
add
add
add
mov
pop
movsl
pop
stos
out
sub
scas
mov
xor
add
fwait
inc
add
jp
test
push
dec
cmpsl
pop
xchg
mov
out
jne
push
lds
rolb
add
jle
imul
ret
pop
inc
add
sbb
mov
pop
stos
test
xlat
xchg
in
inc
pop
sbbb
pop
insl
stc
popa
add
scas
push
pop
sub
pop
inc
pop
mov
sar
popa
add
mov
add
sbbb
pop
xor
add
pop
push
adc
add
pop
mov
xchg
cmp
add
inc
add
mov
jne
push
ret
in
loop
loopne,pt
frstor
add
add
jecxz
mov
testb
add
pop
inc
pop
aad
test
sub
outsb
dec
pop
sbb
and
add
pop
cmpsl
pop
or
add
add
add
and
add
push
sub
and
add
push
jno
add
mov
add
fs
mov
pop
and
add
add
pop
cmpsb
pop
inc
add
dec
mov
das
dec
add
dec
push
push
orb
add
jle
out
loop
outsl
push
add
enter
stos
xor
add
add
push
jae
add
ja
add
mov
pop
stos
cli
add
scas
js
pop
pop
jecxz
sub
sbbb
lods
mov
pop
add
add
jp
xchg
mov
push
lcall
xchg
bound
add
pop
bound
add
pushf
loope
fmuls
fwait
dec
js
add
add
gs
inc
pop
stos
outsb
sbbl
pop
sbbb
test
pop
ds
fdivr
sub
push
jmp
fldcw
ret
pop
js
not
ror
xor
add
popl
add
add
ljmp
add
sahf
divb
add
or
pop
fs
sub
icebp
ljmp
and
mov
mov
jb
add
cs
and
add
adc
add
pop
and
xor
add
add
scas
mov
cmp
bound
add
add
pop
in
rcrl
ret
pop
jo
add
jge
and
add
mov
pop
imulb
pushf
mov
add
xor
add
add
add
jns
add
cmc
daa
pop
xor
add
add
dec
mov
pop
insl
sbbl
xchg
add
idivb
jmp
sbb
push
add
add
mov
mov
or
clc
cmp
sbb
scas
fsubs
add
cltd
mov
pop
xchg
jns
flds
loopne
push
inc
add
inc
add
push
pop
adc
inc
pop
loop
sbb
add
outsb
adc
add
jge
cmpsl
pop
or
pop
sbbb
fs
mov
imul
push
add
stos
pop
cmc
mov
pop
xchg
add
adc
mov
sti
cmp
jb
add
pop
xchg
mov
lcall
ret
out
mov
addr16
jne
icebp
sbbb
sbbb
add
cmc
mov
sbb
add
repz
add
fidivl
pop
sub
dec
dec
getsec
in
es
in
pop
mov
pop
jge
add
loop
xor
add
pop
das
fstl
add
cli
lret
sbbl
aaa
xor
add
pop
fs
jg
and
add
pop
lods
imul
inc
pop
test
push
add
addr16
outsb
jno
add
into
loopne
xor
rcrb
jnp
add
lods
test
push
pop
inc
add
in
xchg
inc
pop
adc
add
dec
iret
hlt
dec
jecxz
mov
fldl
mov
movsl
pop
pop
into
enter
aas
dec
sub
cwtl
lea
add
popa
add
shl
xchg
mov
add
and
add
add
pop
and
add
in
xor
add
lea
add
or
add
push
add
test
fstpt
pop
bound
add
cmp
mov
inc
xchg
ret
adc
add
rcrb
add
sbb
pop
mov
pop
xchg
dec
mov
popf
push
fwait
pop
pop
cmp
pop
outsl
adc
add
add
pop
or
add
xor
add
out
fs
push
popa
add
jmp
sub
ret
pop
sub
in
cmp
push
jmp
arpl
mov
cmp
pop
mov
scas
push
mov
add
in
movsl
pop
fcom
jnp
cwtl
ss
popl
add
pop
pop
or
pop
bound
add
scas
test
cmpsb
pop
in
fistpl
test
int
and
lods
in
cmp
add
add
mov
pop
adc
test
pop
push
pop
ret
pop
push
pop
add
add
sub
push
mov
push
ret
push
arpl
test
cmp
popa
add
dec
cmp
ret
pop
insb
mov
add
add
add
mov
push
ret
pop
arpl
arpl
or
add
jl
inc
add
adc
pop
lds
pop
inc
pop
jecxz
mov
sbbb
enter
add
pop
sbbb
ficoml
add
add
add
pop
sbb
pxor
icebp
aad
pop
mov
bound
add
pop
jecxz
gs
nop
cmp
push
add
ja
int
push
pop
enter
xchg
repz
sbb
add
int3
stos
mov
sbb
out
push
add
sub
add
jge
repnz
sbb
pop
sub
pop
movsl
pop
mov
pop
cmpsb
pop
xor
add
or
test
jmp
sub
sbbl
in
movsb
pop
mov
dec
rol
pop
jg
pop
stos
mov
add
add
pop
xchg
mov
and
add
and
inc
pop
mov
pop
xor
add
mov
pop
jb
add
jp
pop
mov
fucomi
xor
add
pop
add
add
xchg
fwait
enter
add
xchg
sbb
jmp
lods
arpl
fimull
ja
jae
add
pop
shrb
mov
iret
mov
adc
add
in
into
ret
pop
jmp
scas
lock
pop
cmp
clc
push
add
rcrb
or
sub
incl
jne
jmp
and
add
es
push
out
pop
popa
add
icebp
cmc
outsl
ss
pushf
dec
pop
stc
mov
pop
add
je
add
dec
arpl
outsl
pushf
sbbb
ja
nop
cwtl
or
xchg
mov
pop
std
dec
pop
ret
pop
sbb
sub
lcall
pop
and
rcrb
pop
mov
add
notl
add
in
xor
add
divb
add
mov
add
mov
pop
pop
fldl
add
aaa
int3
rcrb
add
les
aad
mov
inc
pop
jmp
mov
xchg
in
xchg
inc
add
add
mov
es
loope
push
add
jns
push
mov
add
punpckldq
add
push
add
hlt
xor
add
or
pop
fucompp
mov
pop
cwtl
xchg
nop
push
frstor
lahf
cmp
pop
sahf
repz
pop
push
sbb
xlat
cmp
add
int3
or
rolb
pop
or
in
pop
clc
jnp
call
jmp
mov
call
out
xchg
xchg
frstor
add
scas
push
add
stos
std
dec
adc
add
test
sbbb
sbb
sbb
movsb
pop
hlt
cmp
pop
lods
stos
dec
xor
add
pop
popf
add
add
dec
xchg
bound
add
add
add
sbb
pop
xor
add
add
add
aas
pop
xor
std
repnz
lret
xor
add
jmp
jl
xchg
mov
push
pop
mov
add
scas
bound
add
add
in
jge
aam
sti
add
add
cltd
and
sbbl
fdivrs
sub
xchg
imul
lret
bound
add
or
inc
mov
push
aaa
jecxz
ss
xacquire
mov
cmpsb
pop
push
stos
dec
call
add
add
cmp
cmpsb
pop
and
add
pop
jb
add
push
ret
sti
sub
shrl
inc
pop
into
je
idivb
fsubr
or
inc
add
test
mov
out
repnz
dec
xor
add
pop
sbbl
dec
sub
jb
add
push
lods
xchg
jo
add
add
insb
mov
sahf
sub
cmp
int
testl
ss
decl
arpl
daa
fs
pop
and
pop
outsl
test
sub
fcoms
ja
pop
mov
lods
mov
loopne
cmp
mov
push
jmp
push
mov
and
add
add
push
sbbl
adc
add
jae
add
adc
mov
arpl
in
adc
add
pop
inc
pop
lret
cmp
add
scas
insl
mov
add
and
pop
jg
push
pop
popa
add
fwait
jecxz
fdivl
adc
add
add
cmpsl
pop
mov
pop
scas
inc
pop
inc
add
add
add
pop
loop
pop
pop
adc
add
pop
push
add
out
sbb
mov
cmp
add
push
add
fs
push
adc
mov
add
cmpsl
mov
fbld
ds
jbe
shl
pop
inc
pop
cmp
dec
inc
pop
daa
pop
loopne
clc
jno
add
add
test
pop
sub
rcrb
mov
fistl
cmpsb
pop
push
pop
and
in
je
inc
pop
test
jbe
stos
and
add
inc
pop
pop
movsb
pop
aaa
push
mov
pop
in
cmpsb
pop
jge
add
fnclex
pop
pop
mov
add
mov
and
add
pushl
jmp
outsl
daa
cmp
mov
push
add
dec
mov
pop
jmp
cs
mov
lret
xchg
lret
push
pop
sub
cmpsl
pop
gs
xor
add
sub
pop
mov
fcoms
dec
sbb
add
inc
add
nop
mov
pop
mov
and
add
pop
cmpb
ret
pop
push
add
mov
pop
scas
push
cli
int3
sbbl
xchg
pop
add
add
mov
xor
add
push
push
jmp
push
ds
popa
add
dec
add
add
mov
mov
add
cmp
pop
add
mov
add
in
ds
pop
mov
xchg
add
insb
or
add
lret
scas
mov
mov
dec
sbbb
div
jmp
inc
sbb
out
pop
orps
pop
pop
jl
fisubl
add
mov
fldt
ret
arpl
add
mov
pop
shlb
sti
cwtl
jnp
jmp
cmp
cmpsb
pop
fnsave
add
add
add
pop
and
add
repz
sbb
and
add
into
pop
push
add
cld
in
xlat
lds
pop
and
add
pop
in
pop
insl
filds
add
jecxz
mov
in
movsb
pop
test
rcrb
inc
pop
pop
pusha
add
xor
add
push
mov
pop
cwtl
mov
cmp
lods
popa
add
cmpsb
pop
aas
out
xor
add
add
scas
adc
aad
pop
cwtl
dec
leave
clc
out
dec
sub
mov
pop
dec
push
add
dec
push
add
sub
mov
jmp
dec
arpl
fldl2e
xchg
adc
add
popf
xor
add
cld
mov
pop
clc
ljmp
xchg
add
rcrl
pop
addr16
jle
add
adc
add
xor
add
xor
add
add
enter
xor
add
lret
pop
popf
cmpsb
pop
xchg
test
pop
mov
pop
and
add
mov
cmp
pop
loop
add
add
sti
sbb
sar
arpl
arpl
mov
push
inc
add
mov
lahf
addr16
inc
pop
dec
ljmp
imul
pop
out
inc
pop
jle
pop
jge
inc
add
cltd
les
pop
push
push
xor
add
or
inc
pop
pusha
add
push
jecxz
or
imul
add
rcrb
add
xchg
push
pop
adc
add
xor
pop
icebp
mov
pop
loopne
in
lret
aaa
test
fcoml
add
rep
pop
rcrl
add
jp
cmp
roll
add
je
pop
pop
xchg
push
add
paddb
add
mov
sub
xchg
dec
inc
add
dec
pop
sbb
push
lcall
test
lock
add
out
inc
pop
adc
add
into
cltd
dec
inc
add
jae
add
imul
add
dec
leave
mov
les
pop
lcall
add
mov
add
cmp
pop
mov
pop
mov
pop
pop
dec
insl
ds
mov
add
cmc
push
cmc
xor
add
into
push
popf
fidivrs
jae
add
add
push
aam
into
jo
add
into
pop
ja
out
jle
add
jnp
xchg
sti
mov
or
fldenv
int
pop
pop
cltd
mov
xchg
das
insb
inc
add
test
add
jmp
pop
mov
pop
xlat
bound
add
dec
jg
push
jbe
pusha
jmp
mov
out
mov
addr16
sub
add
jle
push
add
repz
inc
add
add
add
rorl
push
filds
enter
add
test
pop
push
lret
repz
add
pop
pop
push
lahf
daa
pop
daa
pop
in
adc
add
pop
je
sbb
cmp
pop
test
sbb
out
add
add
pop
fcoms
add
inc
add
hlt
adc
or
pop
jmp
cmp
sbb
mov
sarl
xchg
sbb
test
jmp
push
pop
jecxz
adc
add
cld
push
pop
add
add
add
cld
bound
add
push
lods
les
mov
sbb
hlt
test
iret
mov
jmp
xor
dec
cmp
inc
pop
jl
pop
cmp
add
das
sub
xor
add
pop
pop
ficoml
add
sbb
rcrl
sbb
add
lahf
pushf
mov
daa
pop
sbbl
ret
neg
jb
add
pop
insl
jl
and
mov
imul
fstl
add
sub
ret
pop
imul
add
test
scas
pop
adc
add
xchg
ja
sbbb
add
bound
add
pop
sub
adc
add
pop
lahf
ret
pop
lret
xor
add
add
add
mov
je
add
pop
call
sbb
fnstenv
adc
xor
insb
jp
pop
enter
or
dec
cmp
shll
add
jae
add
add
mov
mov
jmp
xchg
and
jle,pt
pop
mov
lcall
pop
push
cmp
jmp
pop
cmp
pop
pop
and
add
movd
add
add
fs
pop
cmp
add
sbb
pop
and
add
pop
out
fwait
or
lret
add
push
ds
dec
xor
push
add
call
pop
shrb
sbb
adc
add
pop
aaa
jae
add
ss
mov
add
add
add
out
mov
imul
rcrb
stc
mov
add
cmpsb
pop
adc
add
sub
add
das
call
add
adc
test
pop
jecxz
popf
inc
pop
idivb
lock
mov
add
pop
pop
stos
insl
inc
pop
out
pop
xchg
fsts
add
fldt
pop
and
sub
aas
repz
pop
adc
add
pop
cs
pop
push
add
ss
ltr
pop
pop
in
push
pop
or
xchg
sub
inc
pop
les
pop
sub
add
iret
ja
lret
cmp
cmp
jg
jnp
insb
xchg
jle
pop
mov
xchg
inc
pop
lret
and
add
mov
inc
pop
clc
out
xchg
xchg
pop
insb
cld
ljmp
rcll
add
pop
daa
pop
inc
pop
mov
sbb
add
jmp
cmpsl
push
push
push
cs
nop
imul
add
pop
in
addr16
dec
movsl
pop
es
enter
pop
lods
test
add
jnp
ja
pop
pop
inc
add
mov
mov
xor
negb
xchg
cld
mov
cmc
cmpsl
pop
and
add
inc
pop
in
cmpsl
pop
ret
aas
shll
int3
and
add
add
or
les
add
jae
add
popf
dec
mov
call
jno
add
dec
and
add
mov
add
add
dec
mov
pop
jmp
xor
inc
inc
add
mov
xor
test
inc
jmp
sbb
in
push
xlat
popa
add
cs
pop
pushf
lock
add
mov
cmp
sbbb
dec
sbb
mov
pop
call
jge
enter
and
add
add
jmp
xchg
add
push
add
add
add
add
xchg
mov
xchg
push
cmp
pop
imul
pop
loope
loopne
cmc
push
rcrb
pop
cmp
cmp
dec
jbe
add
pop
jp
push
push
add
fimuls
add
add
hlt
pop
pop
daa
pop
adc
add
imul
in
mov
add
adc
mov
mov
jae
add
pop
mov
push
or
add
lods
jne
sbbb
pop
mov
jo
add
jbe
and
call
sub
pop
inc
pop
sbbb
sti
das
scas
je
add
mov
pop
xor
ror
jmp
and
pop
and
jne
fmuls
out
xchg
mov
js
jns
add
xor
add
hlt
jno
add
icebp
mov
add
and
add
pop
repz
add
xchg
fidivrs
add
push
loopne
and
add
adc
add
pop
pushf
sub
mov
push
jmp
push
push
add
cltd
imul
inc
hlt
push
ret
outsl
arpl
add
inc
pop
and
sub
pop
and
add
fdivl
ljmp
add
add
pop
xchg
pop
cmc
cmp
lods
jmp
add
dec
arpl
arpl
in
pop
mov
movsl
pop
push
add
adc
add
js
mov
xchg
add
fcomip
jb
add
pop
dec
loopne
rcrb
popa
add
pop
sub
jmp
xor
add
push
and
pop
insb
mov
add
xchg
push
or
pop
loopne
push
flds
add
lock
mov
pop
jmp
mov
test
add
add
lea
add
movsl
pop
pop
lea
fisttpll
loope
repz
int3
jg
pop
arpl
add
in
sbbb
je
pop
pop
mov
sbb
nop
sub
pop
hlt
lcall
add
fs
xlat
les
in
add
add
rcrb
loop
inc
add
rcr
jg
jle
into
pop
xor
add
pushf
mov
add
dec
jp
mov
push
jo
add
add
lock
add
aas
sub
xchg
jl
lea
imul
add
inc
pop
rcrl
mov
pop
push
add
inc
pop
scas
inc
pop
and
add
mov
fisubl
lods
jmp
push
add
adc
pop
aad
pop
mov
pop
fisttps
mov
ret
pop
mov
pop
push
incl
daa
in
adc
jl
sbbb
add
jnp
add
mov
cli
inc
pop
jae
add
sbbb
pop
push
inc
pop
rol
pop
in
xor
add
mov
add
sub
pop
adc
outsb
test
add
lods
popa
add
mov
and
adc
stc
std
lcall
clc
mov
adc
add
imul
pop
mull
add
in
mov
mov
xchg
fidivl
jp
add
jl,pn
xchg
out
rcrb
pop
jns
pop
adc
hlt
int3
inc
add
movsb
pop
mov
jmp
add
xchg
fs
and
push
pop
jnp
adc
add
test
mov
add
add
popa
add
stc
push
or
dec
jno
add
mov
inc
add
push
xor
sub
cmpsb
pop
es
adc
add
sti
jp
add
in
sub
jne
imul
xor
pop
ret
add
adc
pop
xor
add
outsb
pop
adc
add
sahf
ds
pop
test
movsl
pop
ds
pop
pop
in
sbb
sbbb
pop
lcall
pop
jp
dec
dec
sub
push
ret
pop
add
daa
pop
arpl
add
lret
pushf
daa
pop
pop
mov
gs
les
popa
add
ret
pop
xor
add
mov
jmp
pop
rorb
add
add
pop
pop
sub
xchg
jbe
mov
pop
xchg
and
dec
ljmp
imul
xchg
mov
pop
shr
mov
je
push
add
pop
jno
add
add
jle
pop
sub
add
iret
in
xor
add
bound
add
or
js
pop
outsl
and
add
add
ror
mov
push
fcos
jmp
pushf
pop
daa
testl
add
push
add
fs
fsubrp
stos
sarl
adc
add
enter
add
add
std
xor
add
xchg
push
xchg
push
sbb
lahf
mov
add
add
cmp
dec
mov
pop
aam
add
push
add
rcrb
pop
stos
mov
pop
cmp
pushf
sbb
mov
fldl
add
cmpsl
pop
fstl
popl
cmp
pop
test
pop
cmp
pop
push
dec
add
out
arpl
sbb
mov
jmp
arpl
dec
enter
sbb
das
fidivs
pop
test
pop
xchg
repz
pop
add
add
mov
push
ret
cmpsl
pushf
inc
and
js
inc
pop
jmp
lea
repnz
out
mov
addr16
push
add
das
push
pop
add
add
pop
jecxz
jg
add
cmpsl
pop
pop
pop
sub
jl
in
xchg
clc
pop
sbb
jle
pop
pop
pushf
incb
cltd
mov
push
add
sbbb
pop
das
sbb
cltd
jmp
add
add
add
add
add
loop
mov
xchg
pop
and
add
add
sub
scas
mov
movsl
pop
aam
pop
pop
jg
or
add
dec
addr16
outsb
dec
gs
addr16
mov
pop
popa
add
popf
imul
popl
pop
mov
add
add
imul
pop
lods
sbb
xor
add
mov
add
jg
mov
fucomip
dec
sti
sti
push
decl
arpl
or
pop
xchg
shrl
dec
daa
pop
ljmp
nop
stos
loop
fwait
or
pop
pop
adc
pop
ret
pop
mov
rcrb
sbb
pop
fdivrs
stos
cmp
icebp
daa
pop
sbb
add
divb
add
add
incb
add
sbb
scas
mov
or
and
dec
jge
enter
ja
pop
mov
rcrl
lods
push
ret
add
arpl
pop
lods
stc
js
aam
add
out
mov
or
pop
dec
aas
and
add
add
es
icebp
pop
int
pop
jb
add
xor
dec
jmp
xor
jns
loope
adc
fbstp
pusha
add
sub
or
fsubr
pop
shlb
add
stos
jmp
into
arpl
daa
cmp
jbe
add
or
dec
jmp
cmc
adc
daa
aaa
fnstcw
mov
add
insl
inc
add
scas
cmpsl
pop
xchg
mov
add
inc
add
movsl
pop
mov
mov
jle
repz
mov
jmp
adc
sarb
les
add
add
fnsave
test
pop
sbb
add
jp
ljmp
pop
int3
inc
pop
cmpsl
pop
push
enter
add
add
pop
negb
pop
inc
pop
dec
lret
push
mov
jmp
xorb
inc
add
jbe
cli
fs
xchg
mov
pop
mov
add
mov
push
pop
push
out
popf
in
sti
adc
es
mov
pop
pop
sbbb
sub
jmp
fbld
arpl
sbb
pop
xchg
xor
out
rcrb
xchg
jmp
mov
add
mov
jmp
arpl
xor
add
pop
aam
lock
test
xor
add
rcrb
xchg
gs
jne
inc
add
js
pop
lock
mov
pop
pop
cmpsb
pop
imul
inc
pop
insl
sbbb
das
push
pop
xchg
adc
xlat
sub
mov
pop
mov
add
jmp
push
adc
jmp
jp
aaa
arpl
sbb
pop
frstpm(287
pop
push
add
cmpsl
pop
pop
or
pop
xchg
jne
add
imul
push
pop
test
add
add
cmpsl
nop
rol
pop
adc
add
pop
imull
push
test
sahf
fs
or
cwtl
pop
cld
push
pop
xor
lcall
cmc
jp
dec
xorb
aas
adc
add
pop
xchg
fucom
pop
inc
pop
rcrl
dec
inc
pop
in
xor
add
add
add
add
imul
inc
pop
repz
jno
add
and
add
sub
rcrb
mov
jno
add
pop
jmp
or
jo
add
pop
dec
ret
xchg
lea
jmp
aam
outsl
mov
xor
add
add
mov
push
jmp
dec
arpl
arpl
sbbl
add
insl
or
loope
push
add
add
arpl
arpl
xor
add
pop
jno
add
push
clc
sub
pop
jb
add
xchg
jmp
sti
xchg
pop
pop
bound
add
pop
sub
pop
xchg
or
lcall
in
mov
cmpsl
pop
push
adc
arpl
add
jns
jp
mov
pop
imul
pop
jae
add
add
add
adc
sti
mov
add
mov
testb
mov
or
mov
pop
lods
add
test
fimull
mov
fistps
into
inc
pop
cmp
pop
xor
add
inc
add
dec
inc
add
sub
inc
add
dec
in
iret
or
dec
loopne
or
pop
jo
add
add
in
bound
add
nop
mov
add
es
xchg
dec
scas
push
sbb
add
adc
inc
arpl
sti
mov
pop
pop
pop
cmp
js
pop
rcrb
fwait
mov
jle
sbbl
jmp
mov
add
jecxz
dec
lea
xchg
dec
rcrb
cmpsb
pop
sub
mov
adc
add
clc
scas
lcall
pop
stc
pop
std
fs
fisttpl
out
repz
jb
add
add
adc
add
pop
in
imul
dec
mov
pop
call
mov
xchg
loop
je
jne
pop
stos
setbe
or
pop
sbb
jbe
jmp
xchg
arpl
adc
add
repz
add
out
cwtl
dec
hlt
sti
aad
add
add
pop
add
inc
add
add
add
add
xlat
icebp
clc
sbb
pop
xchg
test
sub
in
push
add
sbb
add
mov
jmp
jg
bound
add
stos
push
xlat
push
lahf
lods
dec
out
popa
add
out
jmp
cmp
add
movsb
pop
dec
jmp
jge
pop
cmp
add
jmp
push
ret
cmp
add
xor
add
pop
jle
imul
add
or
in
lock
xor
add
adc
sbbb
pop
cwtl
push
add
loope
adc
inc
pop
pop
push
add
cmpsl
pop
sbbb
mov
out
adc
add
call
in
add
data16
ljmp
loopne
ret
jns
into
push
pop
mov
push
add
xchg
push
add
inc
pop
push
sbb
loopne
call
push
xor
add
arpl
pop
xor
pop
pop
aas
sbb
jl
mov
outsb
dec
gs
jmp
or
aam
mov
add
pop
mov
add
popf
xor
add
pop
stos
adc
ja
mov
or
xchg
add
std
mov
sbb
pcmpgtb
aas
test
or
add
ljmp
testl
fidivrs
jae
add
add
and
add
add
sub
add
pop
mov
pop
mov
divl
pop
xchg
rcrl
pop
push
add
icebp
out
lret
enter
loope
and
add
pop
test
arpl
add
pop
inc
add
push
bound
add
pop
pop
mov
jmp
dec
fldenv
rcrl
xlat
mov
jmp
sub
adc
inc
add
xor
pop
popa
add
lahf
add
out
or
pop
jmp
add
or
insl
rcrl
fwait
push
add
cmc
pop
xchg
cmovb
add
or
inc
pop
jno
add
pop
loope
inc
add
or
add
mov
dec
cmp
dec
xchg
and
add
in
scas
mov
lahf
xchg
sub
pop
daa
pop
sbbb
stos
jp
pop
js
ljmp
add
add
cmpsb
pop
stc
mov
mov
push
ret
arpl
clc
imul
or
test
ss
inc
pop
lret
add
cmp
pop
arpl
add
cmp
sub
ret
call
pop
adc
add
xor
add
inc
pop
xor
pop
mov
xchg
test
jg
lcall
cmp
add
mov
pop
push
add
cmp
shr
movsb
pop
movsl
pop
xchg
repnz
cli
movsb
pop
jae
add
xor
pop
aam
pop
lahf
mov
pop
push
je
jmp
sub
xchg
push
daa
pop
jmp
dec
jl
nop
scas
push
add
fldt
pop
xchg
cmp
loopne
jo
add
mov
dec
push
add
mov
cwtl
xor
pop
sbbl
sahf
push
xchg
pop
ja
add
cltd
mov
cli
xor
pop
pop
xlat
xchg
or
push
pop
movsb
pop
cmpsl
pop
cli
test
pop
mov
frstor
add
pop
add
pop
jge
cmp
add
mov
add
add
sbb
mov
pop
xchg
clc
sbb
iret
inc
add
pop
arpl
mov
es
dec
push
adc
add
lock
in
repz
in
adc
movb
cmpsb
mov
aad
shl
popa
add
sbbb
jge
sbb
jle
sahf
cmc
aaa
arpl
add
rorl
add
or
pop
shrb
add
add
add
pop
pusha
add
xchg
add
mov
add
inc
xor
dec
cmc
sub
or
pop
nop
addr16
outsb
sbb
loopne
push
add
mov
pop
pop
add
add
jl
pop
out
mov
pop
xchg
xchg
xchg
pop
shrb
fadds
add
mov
add
xchg
pop
mov
mov
cmp
sbb
jb
add
add
pop
fwait
add
add
add
cwtl
ficoml
push
add
in
pop
fisubrl
mov
and
pop
xchg
out
outsl
jge
add
add
dec
dec
dec
sub
shr
scas
xchg
decl
aam
aam
add
pop
scas
test
idivl
lcall
sub
sub
mov
jns
pop
ja
add
xchg
and
add
mov
in
adc
add
add
js
movsb
pop
movsb
pop
mov
xchg
add
add
lret
add
mov
pop
stos
aam
pop
loop
pop
push
sbbl
add
pop
outsb
add
add
call
jmp
pop
arpl
std
add
add
or
add
add
cwtl
push
add
in
cs
dec
repnz
sbbl
push
xchg
lods
arpl
add
adc
add
sub
movsl
pop
not
sub
mov
add
lahf
xchg
add
push
lods
push
xchg
add
add
add
mov
jmp
arpl
cmp
xor
add
rcrl
jo
add
add
addr16
bound
add
push
add
icebp
lods
mov
pop
push
mov
leave
loop
addr16
jle
pop
jp
fcompl
pop
cld
mov
sahf
loop
pushf
imul
mov
jo
add
mov
push
inc
add
lods
add
sbb
add
popf
mov
insb
mov
outsb
cmp
fiadds
add
add
aas
add
add
add
fs
test
pop
sbb
add
jmp
mov
outsl
adc
add
lret
les
mov
add
fsubrl
add
add
add
ljmp
add
xor
add
add
pop
sub
pop
cmp
lock
lock
or
jnp
pop
mov
imul
push
add
sbbl
mov
ds
lods
gs
sbb
jne
jmp
fldenv
pop
sbb
cmp
add
es
push
ret
add
cmp
mov
xchg
and
jge
leave
je
pop
mov
push
lods
jp
add
cltd
jnp
pop
add
add
mov
inc
pop
in
sbbb
dec
xor
add
jg
xchg
cmpsl
pop
decl
mov
push
jmp
cmpsl
or
arpl
add
or
push
xchg
cmpsl
pop
cli
std
sbb
faddl
pusha
add
out
xor
add
mov
adc
add
dec
das
and
add
pop
adc
add
daa
pop
aaa
lds
xchg
fsubrl
jns
push
add
sti
pop
mov
inc
pop
lock
add
pop
adc
imul
clc
fsubs
jmp
sbb
inc
arpl
mov
push
pop
rcll
add
mov
adc
add
sub
inc
lods
push
clc
inc
pop
adc
ljmp
push
ret
or
dec
pop
scas
popl
add
pop
inc
add
inc
add
ret
or
pop
out
aam
mov
scas
xor
mov
mov
fsts
add
inc
add
add
add
sahf
fnsave
in
cmpsl
pop
inc
pop
jmp
jmp
cmp
or
pop
inc
add
stc
jae
add
xor
add
pop
mov
insl
fcoms
and
add
daa
pop
hlt
inc
pop
int3
pop
mov
mov
cmp
movd
add
jmp
adc
adc
add
add
aam
pop
mov
data16
add
mov
ret
sub
or
lods
cli
push
negb
cmc
cwtl
lods
mov
mov
pushl
into
fidivs
add
push
push
ret
push
push
arpl
fdivrl
cmp
mov
in
cmpsl
pop
shll
add
mov
call
mov
pop
dec
cmp
pop
hlt
ja
mov
aas
bound
add
inc
add
aam
pop
inc
pop
adc
add
cmp
add
pop
popa
add
or
pop
movsl
pop
and
adc
add
pusha
add
pop
pop
decl
out
cmp
pop
notb
add
adc
mov
cmp
call
arpl
mov
lods
int3
push
pop
mov
or
push
add
or
je
pop
in
int3
mov
pop
sub
stos
fimuls
in
sbbl
push
inc
add
fcmovnb
pop
out
cmpsl
pop
or
negb
push
push
pop
sub
popf
inc
pop
adc
add
inc
pop
jns
add
dec
scas
push
add
mov
into
lahf
add
add
and
add
repnz
iret
lahf
stos
push
or
in
iret
dec
mov
adc
push
cmp
push
ret
mov
push
dec
dec
jp
pop
and
add
cmpsb
pop
popl
pop
sahf
pop
inc
pop
jo
add
jp
scas
out
cmp
clc
and
add
xchg
sub
add
cli
jnp
in
lds
pop
adc
add
pop
insl
jb
add
add
pop
jb
add
add
loop
int
cmp
xchg
scas
pop
mov
add
pop
lds
add
dec
mov
pop
aas
cli
out
xor
lret
pop
sahf
xchg
mov
pop
pop
mov
xor
cmp
sub
sub
pop
inc
add
je
sbbl
sbbb
pop
ret
aas
mov
pop
xlat
in
xchg
jge
stos
repnz
iret
sbbb
pop
push
outsl
xor
add
pop
xchg
add
add
add
and
add
add
mov
jb
add
ljmp
cld
push
add
movsl
pop
cs
fcom
cli
insl
lret
pop
ret
pop
pop
pushf
xor
add
push
push
jmp
add
fistpll
add
out
xor
add
sub
decl
or
add
mov
loopne
pop
imul
xchg
fdivr
loop
into
addr16
ret
pop
je
insl
shr
add
add
add
gs
pop
sti
xchg
arpl
add
je
jne
add
ffreep
pop
push
in
jle
ljmp
add
icebp
adc
mov
fstpl
es
ret
pop
jecxz
push
pop
push
in
fisubrl
pop
sahf
repnz
cmp
ljmp
pop
inc
pop
sbb
test
add
xchg
dec
mov
add
daa
pop
sbb
test
sahf
xchg
pop
xchg
sahf
scas
popf
adc
add
push
mov
add
push
add
add
std
ljmp
add
add
add
bound
add
add
lar
add
and
add
pop
sub
jae
add
add
popf
pop
pop
jbe
mov
cmp
cmpsl
pop
ror
loope
inc
add
sub
add
call
pop
in
repnz
push
xor
add
push
jb
add
push
cmp
mov
stos
add
add
mov
push
jmp
arpl
jmp
inc
jmp
push
arpl
push
mov
add
mov
pop
in
mov
loop
push
lret
add
mov
pop
jmp
je
test
iret
scas
int3
mov
push
sti
mov
pop
mov
sbb
inc
jb
jmp
or
cli
loope
sbbb
add
sub
add
in
scas
es
pop
push
scas
push
jb
add
imul
adc
add
jno
add
add
jnp
pop
pop
jbe
ret
pop
mov
add
in
mov
jno
add
add
fidivrs
pop
and
pop
nop
mov
pop
lods
and
add
add
adc
and
cmpsb
pop
out
sub
add
mov
in
fst
pop
mov
pop
rcrb
jb
add
in
bound
add
xchg
adc
add
hlt
sub
lahf
es
repz
xchg
nop
lds
rcrl
repz
add
nop
mov
mov
jmp
arpl
sbbb
and
add
and
add
fdiv
outsb
jg
inc
pop
pop
push
add
je
and
leave
or
xor
add
push
scas
push
add
mov
or
xchg
dec
adc
add
push
imul
fs
cwtl
fnsave
add
push
add
mov
xchg
gs
int
pop
in
hlt
mov
mov
xchg
xchg
xor
add
enter
mov
pop
pop
negl
or
mov
jmp
arpl
pop
lret
or
adc
add
pop
jnp
push
pop
pop
sub
push
ret
add
pop
test
pop
lret
jo
add
jo
add
push
lods
cmp
pop
and
add
jno
add
cmpsl
pop
cmp
add
cmp
add
add
add
xor
add
cmp
adc
add
fstl
add
pop
ret
pop
enter
mov
pop
rcrb
add
pop
bound
add
pop
add
jae
add
les
ret
sbbb
insb
jne
pop
xchg
jnp
pop
cmpsl
pop
in
mov
fisttpl
in
out
cld
xor
add
add
xor
add
stos
pushf
stos
and
add
push
rcrb
fisubs
add
pop
lret
adc
fwait
pop
lret
out
push
add
cmp
mov
ds
mov
add
fs
sub
xor
add
add
lcall
pop
sub
cmpsl
pop
mov
mov
mov
jmp
add
or
sub
mov
pop
xchg
mull
hlt
enter
cwtl
mov
fidivs
xor
add
jmp
dec
enter
dec
lods
cmp
add
jnp
push
fs
pop
ret
pop
add
add
pop
rcrb
cmp
cmc
pop
lret
sahf
icebp
cs
add
mov
cli
ja
mov
xchg
mov
adc
add
xor
add
pop
pop
push
add
xor
add
dec
daa
pop
outsb
sbbb
add
test
pop
pop
cmc
loop
pop
sub
in
je
jge
pop
dec
inc
add
jmp
add
mov
scas
or
pop
js
sbbb
jge
jmp
lods
inc
arpl
pop
insl
arpl
add
stos
pushf
and
add
pop
jp
add
inc
add
outsb
hlt
gs
leave
and
add
pop
lcall
loopne
movsl
pop
xor
sbbl
add
loope
inc
pop
out
fwait
jp
add
out
imul
or
lahf
push
pop
cwtl
je
lods
pusha
add
xchg
int3
push
add
xchg
out
or
fimull
add
sahf
lret
add
mov
stos
pop
sbb
push
mov
rcrl
je
pop
and
add
add
sbbl
add
pop
stos
inc
add
rcrb
mov
pop
mov
sbbl
or
add
ret
pop
paddd
gs
faddl
aaa
inc
add
inc
add
int3
ja
xchg
pop
inc
pop
js
mov
push
or
stc
sar
lcall
mov
pop
xchg
push
pop
sbb
xor
add
add
add
add
out
js
pop
mov
pop
lahf
out
add
add
add
add
pop
xor
add
lock
fstl
add
popf
inc
pop
enter
movsb
pop
mov
add
std
and
lahf
and
add
pushf
out
fimuls
pop
add
add
pop
test
push
mov
insl
pop
je
add
add
xchg
add
adc
add
gs
in
lcall
inc
pop
mov
add
jmp
pop
inc
je
pop
mov
fsubrl
enter
add
xor
add
push
rcrb
out
push
fisttpll
add
jmp
shl
pop
daa
pop
jp
add
xchg
in
imul
sti
pop
daa
pop
sbb
pop
les
xor
add
add
cs
mov
pop
inc
add
add
xor
add
pop
mov
sbb
push
add
pop
pop
cmp
mov
pop
dec
adc
add
cmp
mov
shll
add
add
or
add
add
int3
arpl
add
adc
add
add
bound
add
addr16
mov
leave
lods
mov
stc
push
pushf
inc
pop
add
add
sti
in
loop
mov
inc
add
les
adc
add
pop
mov
fs
les
add
negl
xchg
rcrl
mov
insb
pop
lock
add
cmp
jnp
jge
stos
adc
add
jmp
and
add
and
add
outsl
xchg
test
jmp
arpl
mov
pop
lods
int
adc
add
lret
stos
ret
pop
mov
rol
pop
dec
fisubrs
hlt
rcrl
hlt
pop
cld
out
add
add
cwtl
or
addr16
sbb
pop
xchg
cli
xor
add
mov
jo
add
pop
mov
out
sbb
add
or
pop
outsl
xchg
add
add
pop
pop
stc
sub
pop
mov
into
jno
add
mov
cmp
pop
sbb
add
sbbl
fs
rcrl
pop
adc
lahf
sub
popf
scas
adc
add
add
push
add
xor
add
pop
pop
aam
lahf
sbb
mov
repz
pop
loop
call
sub
pop
push
pop
mov
sbb
iret
cmpsl
pop
test
es
lcall
pop
dec
shl
sub
add
xlat
and
dec
outsl
popa
fs
ret
pop
xchg
inc
pop
cmp
dec
nop
xchg
sahf
int3
push
push
mov
fadd
sahf
add
add
xchg
fnstenv
scas
popa
add
or
mov
add
pop
sahf
pop
or
aad
lcall
pop
test
iret
jbe
mov
pop
ss
inc
pop
jp
pop
cwtl
push
jo
add
or
add
and
add
test
xchg
push
std
testl
push
pop
ljmp
add
ja
or
fwait
bound
add
push
add
out
jbe
pop
mov
arpl
add
add
int
cltd
leave
dec
jp
pop
loop
mov
pushf
and
add
in
pop
push
adc
inc
pop
dec
pop
jp
cmc
pop
pop
adc
add
add
sti
xchg
rcrb
xor
add
ljmp
ds
dec
sbbb
add
adc
add
pop
xchg
pusha
add
sub
pop
sti
sbb
bound
add
dec
aam
movsl
pop
fsubrp
es
rcrb
rcrl
add
pop
lret
add
dec
and
add
aad
mov
lods
and
stos
mov
mov
fs
testl
push
js
pop
or
add
cmpsl
pop
mov
sbb
jmp
mov
jne
or
lret
pop
in
xchg
sub
dec
aas
xor
add
loopne
fsts
arpl
add
repz
push
dec
mov
test
sub
sub
add
mov
sahf
cmp
insl
sub
loop
shrl
push
jmp
jmp
aaa
push
jne
rcl
leave
mov
decb
adc
add
add
outsb
xlat
push
or
jmp
adc
in
pop
les
cmpsb
pop
pop
xchg
pop
inc
pop
ja
inc
add
pop
faddp
pop
jecxz
psadbw
mov
call
sti
pop
sbb
shr
sbb
add
out
adc
adc
add
pop
push
add
xchg
dec
mov
pop
and
add
in
dec
es
loop
jmp
mov
add
or
xor
push
ret
jmp
pop
adc
daa
add
cmpsl
pop
mov
js
mov
jmp
test
sahf
pop
xchg
cltd
push
add
mov
dec
push
in
or
mov
sbb
popa
add
aas
cmpsl
pop
lds
aaa
outsl
mov
cmp
sub
cs
popa
add
addr16
cmp
je
ficoms
ficoml
add
int
pop
fisubl
add
push
add
mov
decl
fs
pop
sbb
jbe
jmp
arpl
arpl
ss
pop
das
xor
add
cmp
add
add
dec
mov
dec
and
add
fwait
lock
xor
add
push
ret
sub
pop
adc
lahf
rcr
xchg
mov
repz
rcrl
test
xchg
jmp
in
jmp
fs
mov
and
lret
pop
test
pop
add
movsb
pop
fs
icebp
addr16
fisttps
pop
es
jmp
mov
adc
dec
in
je
jmp
jmp
ret
adc
jecxz
fdivs
inc
jmp
pop
enter
fs
add
xchg
mov
add
call
decb
iret
inc
pop
xor
add
std
mov
add
adc
add
push
das
lret
ljmp
pop
add
mov
add
add
arpl
int
or
xchg
mov
dec
cmp
mov
mov
jb
add
jmp
daa
arpl
xchg
in
mov
bound
add
adc
add
pop
or
mov
add
push
add
and
add
cs
pop
cmp
pushf
aaa
inc
add
and
push
add
cmp
pop
hlt
rcrl
mov
sbbb
pop
movsb
pop
stos
mov
test
cltd
mov
jg
outsl
in
jmp
sub
add
xor
add
jb
add
dec
int
add
push
or
inc
adc
xor
add
or
push
pop
mov
add
add
or
and
mov
dec
mov
pop
out
or
and
and
add
mov
add
sub
and
add
add
jmp
and
xor
and
add
gs
sub
xchg
mov
or
cmpsl
pop
jno
add
outsl
sbbb
insl
int3
int3
repz
add
mov
add
jno
add
pop
xlat
clc
stc
push
bsf
dec
and
mov
add
sahf
mov
inc
pop
aas
shr
pop
pop
sbbl
std
mov
push
add
add
add
gs
push
sbb
cltd
pushl
jge
or
std
dec
ss
lcall
fldl
lock
pop
mov
add
icebp
mov
pop
pop
pusha
add
inc
add
jno
add
pop
add
add
and
add
arpl
add
or
push
jmp
push
adc
add
int
add
fnstcw
mov
add
add
lds
aaa
and
sub
sbb
push
pop
sbb
add
inc
add
adc
add
bswap
sbb
push
mov
into
or
cld
fs
add
add
pop
cmp
mov
pop
sbb
outsb
cltd
rcrb
mov
add
add
add
xchg
js
in
in
and
and
add
xor
push
cmp
add
inc
add
or
add
add
pop
ja
mov
jecxz
mov
add
adc
pop
aam
sti
popa
add
cmovnp
mov
add
add
xor
add
jmp
test
or
mov
pop
sbb
pop
inc
pop
and
outsl
incl
repz
push
into
or
iret
cmp
add
jmp
arpl
call
rorl
sbb
daa
ds
pop
faddl
pop
dec
dec
jecxz
and
fs
jb
add
add
inc
add
xchg
jecxz
call
pop
outsb
ss
push
mov
pop
iret
int3
jns
pop
inc
pop
push
and
add
mov
pop
adc
add
add
add
pop
push
cmc
xchg
fxch
push
pop
fs
sub
aam
xchg
sbbl
add
add
jmp
pop
sbb
bound
add
pop
mov
add
into
les
jb
add
insl
adc
add
pop
sub
into
xchg
jg
pop
scas
push
add
incl
jne
jmp
dec
enter
pop
sbbl
pop
pop
dec
adc
out
sti
mov
add
add
and
dec
mov
add
mov
mov
pop
push
lea
iret
imul
mov
add
mov
add
decl
test
mov
jmp
or
pop
icebp
pop
sub
stc
stc
xor
sbb
out
add
jns
pop
mov
pop
add
mov
lret
mov
sbbb
mov
pop
cmp
pop
mov
push
add
xchg
add
cmpsl
pop
add
add
cltd
xchg
xor
jmp
pop
jp
dec
mov
add
jecxz
bnd
sub
add
push
add
mov
pop
int
pop
pushf
push
add
xor
jb
add
add
add
hlt
inc
pop
adc
int
je
push
ret
pop
mov
int3
pushl
arpl
arpl
jmp
xchg
call
jmp
xor
mov
icebp
sbb
pop
das
negl
pop
cmp
add
ret
ljmp
inc
insb
insb
push
ret
and
pop
pop
xor
iret
jmp
and
add
add
rcrb
xchg
jecxz
fimull
shr
jbe
jmp
xchg
jbe
sub
sbbb
xor
jns
add
add
jmp
jp
push
pop
daa
dec
das
push
pop
into
inc
pop
mov
fmuls
inc
add
cmp
pop
mov
and
add
add
inc
add
add
add
push
out
pop
pop
and
add
add
pop
dec
popa
add
loop
add
add
add
push
add
push
add
pop
into
jle
out
adc
add
push
out
pusha
add
pop
pop
leave
movsb
pop
imul
pop
inc
add
nop
ret
fwait
adc
mov
pop
in
pop
dec
jmp
out
ljmp
je
add
dec
inc
add
arpl
pop
xchg
dec
outsl
lahf
stc
gs
mov
mov
add
add
add
jg
insl
push
add
cmpsl
pop
adc
add
inc
add
and
add
pop
out
sbbb
xor
add
add
adc
cmpsl
pop
aam
mov
pop
stc
adc
add
xchg
jno
add
push
adc
mov
sbb
mov
add
add
add
sub
add
mov
pop
push
add
pop
inc
pop
faddl
add
add
push
pop
pop
insl
sti
icebp
mov
add
add
xor
add
add
jg
pop
bound
add
add
or
pop
pusha
add
xor
add
cltd
mov
pop
inc
add
sub
arpl
add
add
add
addr16
add
add
repnz
add
stos
sub
in
or
add
shlb
dec
loope
stos
mov
clc
sbb
icebp
jmp
or
jecxz
lcall
pop
imul
clc
insb
or
inc
pop
icebp
test
pop
xlat
cld
pop
mov
pop
and
xor
add
add
lcall
lock
push
add
mov
pop
and
xor
add
add
pop
inc
pop
sbbb
fldcw
clc
lret
xor
jmp
fists
or
pop
mov
xchg
add
ds
in
pop
xchg
dec
pop
test
arpl
add
pop
mov
add
jmp
xor
mov
dec
add
add
add
loop
pop
add
add
rcll
add
add
inc
pop
mov
add
aad
push
add
ffree
pop
dec
mov
int3
push
push
push
ret
dec
es
sub
sbb
adc
add
pop
aaa
and
add
pop
ret
pop
das
test
sbb
out
call
sahf
iret
mov
int3
into
movsb
pop
pop
and
add
pop
pop
push
mov
jmp
and
cmc
dec
jl
ret
jmp
sti
test
dec
mov
aaa
mov
pop
pusha
add
sub
add
add
add
negl
sbb
add
or
add
int
or
aaa
lock
ljmp
mov
inc
add
push
lret
add
add
xchg
add
pop
push
dec
jno
add
pusha
add
add
push
add
int3
jno
add
fbld
dec
push
jmp
arpl
add
pop
pop
hlt
push
add
jb
add
sbb
fwait
call
jae
add
xchg
or
pop
adc
cmpsb
pop
loope
lahf
mov
incl
lret
lcall
mov
add
std
loope
pop
jae
add
add
cmp
pop
lcall
pop
mov
adc
add
adc
add
mov
pop
in
enter
mov
jmp
daa
jne
mov
scas
ds
fwait
sub
add
inc
pop
inc
pop
rorb
add
bound
add
add
mov
aam
enter
mov
push
mov
add
std
aad
pop
pop
lds
sbb
adc
dec
arpl
cmp
xor
add
pop
inc
pop
rcrl
push
push
ret
daa
daa
xchg
xor
xchg
xchg
mov
clc
mov
pop
lds
add
ret
fdivrs
mov
leave
xchg
mov
fnstsw
in
mov
add
add
bound
add
mov
pop
and
cmpsl
pop
and
add
pop
jnp
popf
call
xor
add
pop
and
add
pop
stc
jne
enter
add
test
mov
or
sub
lea
pop
fs
inc
pop
repz
pop
pop
cmpsl
pop
scas
or
or
inc
add
xor
add
mov
fidivs
add
add
clc
js
pop
mov
pop
shrl
pop
sbb
out
sub
dec
and
add
xchg
pop
scas
cltd
pop
xchg
sbb
push
add
jo
add
leave
mov
add
dec
int3
inc
add
mov
pop
mul
pop
jns
pop
xor
aam
mov
add
movsl
pop
sub
imull
mov
popf
pop
lahf
gs
stos
or
jne
xchg
movsb
pop
cmpsl
pop
cmpsb
pop
add
add
pop
pop
xor
in
test
push
add
mov
pop
bound
add
cltd
shlb
add
pop
pop
add
cmpsb
pop
sbbl
pop
pop
and
add
pop
scas
icebp
cwtl
pop
add
add
roll
add
hlt
mov
jns
mov
and
add
inc
add
loope
sub
and
add
fs
scas
lods
enter
inc
pop
jmp
dec
aam
jnp
fisttpll
fs
lods
in
push
pop
je
jae
add
pop
or
inc
add
sbb
lret
mov
mov
pop
sub
pop
mov
pop
mov
movsb
pop
fldenv
jmp
lods
fistps
into
pop
pop
hlt
ret
mov
xchg
bound
add
jge
pop
adc
add
add
fsubs
shrl
pop
cltd
sbb
icebp
inc
pop
stos
test
js
icebp
xchg
int3
iret
popa
add
add
add
xor
add
insb
xor
add
jo
add
inc
add
sub
je
sub
push
add
jne
cmp
pop
sbbl
add
jmp
add
jbe
and
add
mov
hlt
rcrb
pop
cmp
add
pop
mov
pop
mov
mov
add
adc
add
stc
push
jmp
jmp
arpl
pop
push
add
xchg
xor
fwait
cmpsl
pop
and
pop
insb
mov
pop
pop
mov
and
add
mov
outsl
push
add
pushf
push
sub
bound
add
cmpsl
pop
push
mov
mov
das
lea
add
inc
pop
mov
pop
mov
insl
pop
ss
lret
fnstcw
add
pop
mov
xchg
jecxz
pop
push
pop
inc
add
inc
pop
pusha
add
jl
pop
outsb
aad
pop
sub
or
add
rcrl
add
and
divps
ret
pop
push
movsb
pop
sbbb
cmpsb
pop
lds
pop
loope
pop
ljmp
daa
pop
mov
popf
pop
pop
lods
fisttpl
cmc
push
add
pop
jl
or
add
mov
lahf
adc
add
add
add
mov
or
push
add
pop
cwtl
jb
add
push
pop
pop
fiadds
add
add
or
add
add
and
add
pop
jecxz
iret
mov
mov
jns
sub
icebp
or
push
xor
add
aad
shlb
add
pop
movsb
pop
stc
test
ljmp
test
add
jmp
sub
pop
cmp
js
cmpsl
pop
lods
out
test
push
dec
test
add
add
jnp
fadds
lret
sub
mov
cmp
icebp
jb
add
icebp
jmp
pop
ret
pop
mov
fs
jmp
dec
arpl
outsl
iret
inc
pop
sub
call
jb
add
mov
divb
add
movsl
pop
sub
mov
ljmp
rolb
push
ret
daa
jo
add
bound
add
add
sub
pop
mov
add
repnz
pop
sbb
pop
leave
out
mulb
jbe
push
jo
add
in
in
jge
mov
negb
popa
add
inc
add
dec
scas
pushf
scas
arpl
add
add
int3
add
add
add
call
dec
mov
xor
add
sbb
push
inc
add
pop
arpl
add
dec
pop
aam
lea
add
ret
pop
js
pop
je
dec
stos
jno
add
add
inc
add
dec
in
pop
dec
ljmp
pop
mov
pop
movsl
pop
repz
mov
cmp
add
sarb
scas
ss
lret
popf
loope
mov
add
outsl
arpl
sbb
ljmp
pop
or
pop
dec
aam
pop
divl
add
jl
fstpt
xor
add
les
scas
inc
add
nop
adc
add
jmp
daa
into
arpl
dec
arpl
mov
jmp
popa
add
push
inc
pop
testb
sbb
mov
gs
mov
ja
cwtl
push
push
mov
lret
add
xor
push
xchg
or
jecxz
call
mov
cmpsl
pop
cli
fadds
inc
pop
sbb
xlat
ljmp
add
hlt
adc
pop
sbb
add
pop
pop
jnp
and
add
pop
rcr
and
add
push
add
pop
arpl
add
pop
mov
sub
call
adc
xor
add
cmp
pop
mov
dec
cmpsb
pop
and
dec
push
cld
js
pop
pop
or
pusha
add
push
add
sbb
pop
testb
rol
pop
dec
clc
std
test
aaa
mov
pop
add
pushf
test
in
xor
inc
add
lret
mov
sbb
lea
inc
add
push
jb
add
dec
and
cmp
pop
gs
popf
lds
sbbb
xchg
or
ficompl
add
das
mov
cmp
mov
negb
pop
cmc
or
fwait
jmp
xor
jmp
inc
push
xchg
into
aaa
lahf
add
ljmp
rclb
pop
loop
cmpsb
pop
insb
ja
imul
add
pusha
add
push
add
gs
testl
pop
xchg
xchg
pop
mov
add
dec
es
je
lods
fimull
lock
inc
pop
test
add
push
add
popf
stos
imul
mov
add
add
shrb
add
adc
add
pop
mov
inc
pop
je
js
xor
add
jmp
out
pop
setno
pop
pop
fmuls
out
jns
sbb
lds
push
add
or
out
lret
rcrb
add
sbb
inc
add
ljmp
cmp
sbb
add
gs
lret
xor
add
pop
jge
pop
mov
sub
push
cmp
jmp
dec
or
add
test
pop
sbb
lea
push
jmp
fnstcw
movsl
pop
js
jne
jmp
ljmp
leave
dec
inc
add
mov
rclb
add
pop
aam
loopne
stos
jmp
pop
xor
add
int
pop
test
icebp
ret
pop
daa
pop
inc
add
cmpsl
pop
xor
add
pop
dec
stos
mov
xor
add
add
leave
test
pop
and
add
fildll
push
adc
add
in
add
pop
mov
aaa
mov
mov
pop
fidivrl
push
pop
ja
aad
pop
loop
pushf
icebp
sbb
jmp
into
and
movsb
pop
inc
pop
add
add
ja
pop
jmp
cli
bound
add
add
mov
fstp
dec
xor
add
add
xor
add
pop
xor
add
add
push
sub
bound
add
add
in
cmp
add
jge
pop
fwait
jg
in
out
jl
add
push
add
cwtl
sub
aas
pop
lock
xchg
ss
adc
add
add
jmp
fnstcw
fildll
adc
add
lcall
jg
pop
push
push
push
ret
arpl
xchg
sti
xor
add
ret
filds
pop
push
add
inc
pop
cmp
pop
int3
dec
fbld
add
pop
loopne
lret
add
in
lods
add
add
loopne
sub
cmp
jle
add
rep
mov
xchg
out
fsub
pop
mov
mov
jp
adc
sbbb
jae
add
sbb
add
int3
test
push
mov
xchg
add
xchg
lods
push
pop
cmp
add
add
insb
jecxz
mov
imul
je
add
pop
inc
add
psubq
sub
lock
add
mov
xor
mov
add
lahf
inc
pop
xor
and
add
pop
bound
add
fnstenv
add
mov
stos
and
mov
add
pop
icebp
insb
or
pop
sarl
add
or
in
jno
add
mov
add
pop
jmp
pop
cmpsb
pop
repz
xchg
das
enter
cmp
lret
int
pop
or
add
add
add
lds
sbb
add
pop
rcrl
add
add
xchg
mov
mov
insl
dec
mov
pop
in
cmp
fisttps
in
idivb
add
dec
push
sar
pushl
xchg
mov
pop
fisubrl
and
add
add
imul
pushl
shr
repnz
call
dec
pop
arpl
shr
je
out
push
add
test
jp
lea
add
loopne
repnz
add
mov
shlb
add
dec
decl
push
inc
add
andb
pop
fiadds
sub
push
das
insl
pop
or
mov
sbb
pop
test
lret
or
jmp
add
mov
es
or
and
jns
inc
pop
mov
in
lcall
add
aaa
mov
push
add
test
sbbl
pop
inc
add
xchg
push
pop
enter
pop
and
add
shrb
clc
dec
xor
mov
fucomip
cmpsl
pop
iret
push
mov
push
ret
ljmp
sbbb
xchg
xor
je
add
lods
mov
add
cmp
jns
pop
sbb
xchg
std
pusha
add
sbb
mov
add
arpl
pushf
stc
cmp
ds
loopne
sub
aas
push
pop
and
add
add
add
add
rcrb
stos
test
aad
pusha
add
and
fisubrl
pop
xor
add
and
or
out
jne
roll
add
pop
lahf
icebp
std
daa
pop
pop
sub
adc
add
add
test
add
pop
imul
add
ror
cmc
pop
js
xchg
inc
add
inc
pop
je
popf
mov
test
mov
pop
push
add
gs
mov
jns
fucomi
inc
add
and
lods
cmp
es
lods
xchg
ror
dec
pusha
add
mov
or
sbb
fcoms
xchg
dec
jns
add
mov
dec
jmp
cmp
xor
add
dec
cwtl
mov
pmullw
inc
add
add
add
pop
xchg
xchg
inc
pop
mov
pop
roll
add
loopne
adc
add
and
add
add
add
add
add
mov
jns
cmpw
jmp
daa
test
fwait
sti
pop
cmp
add
clc
loop
push
add
adc
add
add
dec
cmpsl
pop
jle
jmp
cmp
mov
mov
daa
sub
sbb
add
inc
add
in
les
dec
fcomps
sub
and
add
clc
or
out
adc
add
add
inc
add
loop
xchg
mov
movsb
pop
test
and
icebp
mov
add
in
daa
rcr
jg
out
xchg
icebp
jmp
mov
add
cli
es
mov
sbb
add
pop
add
add
pop
inc
add
cmp
inc
pop
and
bound
add
push
pop
cmc
mov
xchg
add
jl
add
or
mov
add
mov
push
ret
arpl
adc
sti
out
rcrl
add
pop
mov
es
jecxz
enter
pop
dec
and
add
add
jmp
arpl
inc
pop
lock
sbbl
and
add
mov
pop
inc
add
dec
aad
leave
out
imul
or
pop
rcrl
arpl
add
xchg
mov
add
cwtl
push
add
xor
dec
add
push
add
cmc
sbb
sbb
lods
push
mov
push
ret
outsl
xchg
push
add
adc
sbb
jg
jmp
fs
cmc
out
into
jecxz
hlt
inc
add
xor
sbbb
das
lret
mov
outsl
mov
add
add
pop
inc
add
pop
xchg
pop
nop
js
out
inc
add
fs
in
cmc
in
pop
xor
add
pop
out
push
sti
call
mov
mov
or
lods
into
jae
add
sub
jge
add
mov
or
stos
pop
push
pop
dec
mov
pop
push
or
sarb
pop
divl
incl
push
ret
mov
dec
mov
pop
push
sbbb
add
mov
aad
lcall
mov
add
add
add
pop
lret
jbe
les
ret
das
repz
int
add
jge
rcrl
pop
push
mov
sub
dec
dec
or
rcll
add
add
pop
or
lret
stos
fucom
pop
push
ss
loop
sbb
pop
and
add
stos
out
arpl
add
testl
add
mov
movsb
pop
mov
pop
mov
negb
add
scas
sbbb
pop
inc
add
push
into
decl
outsl
outsl
push
in
add
cmp
xor
add
jb
add
xor
jbe
add
in
push
add
and
add
stos
and
stos
cwtl
ret
inc
pop
adc
pop
xor
add
add
push
xor
add
sub
add
and
add
pop
inc
add
jecxz
shlb
fwait
pusha
add
mov
dec
popa
add
sbb
add
add
pop
or
faddp
pop
pop
or
repnz
pop
dec
mov
xlat
jbe
mov
scas
mov
add
popf
rcrb
out
xchg
pop
xchg
pushf
push
scas
add
add
xor
pop
mov
ficomps
hlt
es
fadds
mov
pop
jl
fiadds
add
shrl
rclb
add
adc
add
mov
pop
aaa
and
inc
add
shll
add
add
pop
pop
inc
pop
daa
pop
add
out
add
add
pop
dec
jnp
mov
push
cmpsb
pop
mov
push
pop
mov
mov
pop
sbb
in
outsl
mov
int
sbb
add
xchg
ret
pop
jge
pop
add
add
test
shl
jmp
sbb
adc
pop
loope
xchg
icebp
iret
jp
xchg
outsl
mov
xlat
in
loope
mov
add
pop
rcrb
pop
scas
ret
pop
mov
pop
inc
add
sbb
ficompl
add
add
sub
stos
dec
xchg
insb
mov
test
pop
sahf
sti
fcomps
push
dec
jno
add
push
add
test
jmp
dec
dec
in
nop
arpl
add
inc
add
ret
pop
outsl
xchg
fwait
sbb
xchg
sbbl
add
dec
mov
pop
lods
stc
sbb
push
mov
ss
add
mov
mov
pop
aam
pop
pop
mov
jp
jecxz
sbb
mov
xchg
and
pop
cs
mov
add
add
arpl
add
mov
jbe
and
add
sbb
cmc
idivl
sub
jae
add
add
add
mov
rcrl
imul
xor
add
in
mov
mov
pop
lods
ljmp
inc
add
push
mov
jmp
pop
arpl
xlat
sub
jns
xchg
push
xchg
cmp
add
add
mov
or
mov
jmp
cmp
fsubrl
push
or
sub
movzwl
jmp
fsincos
cmc
hlt
mov
cmp
pop
rcrb
pop
scas
decl
or
arpl
lea
add
cmp
mov
pop
jmp
or
add
add
add
pop
fs
into
mov
cld
pushl
mov
repz
add
push
shr
push
ret
add
xchg
mov
pop
xlat
jge
add
pop
cmc
ret
xchg
out
push
mov
add
pop
dec
xadd
loop
sbbl
mov
inc
add
mov
into
or
or
pop
lods
inc
add
push
add
movsb
pop
xchg
sarl
fstps
aas
jnp
pop
inc
pop
pop
xchg
add
test
pop
cmpsb
pop
fmull
add
add
push
dec
jb
add
fbld
add
inc
pop
mov
pop
je
push
add
mov
add
add
mov
cwtl
pop
outsl
test
shl
je
add
mov
cs
sub
xchg
cmp
add
mov
push
imul
dec
sbbl
pop
stc
mov
jne
xchg
jno
add
mov
xchg
sbbb
add
inc
add
dec
dec
les
movsl
pop
sbb
int3
cli
insb
sbbb
out
sub
cmp
pop
mov
pop
xor
add
mulb
add
add
ljmp
inc
add
push
add
popf
or
add
mov
cmpsl
pop
sub
add
outsl
sub
cmp
add
jmp
cmpsl
mov
add
push
add
in
mov
push
mov
sahf
add
sub
aas
add
jmp
pop
arpl
mov
jne
jmp
arpl
pop
sbbb
fidivrs
push
dec
jns
pop
out
divl
add
inc
and
jmp
arpl
inc
add
sbbl
push
add
push
add
sub
add
leave
jae
add
push
adc
mov
add
std
jge
pop
sbbb
add
sbbl
pusha
add
jbe
pop
mov
cs
test
jp
shrl
dec
sbbb
sub
lahf
dec
aaa
dec
insl
sbbl
push
jo
add
pop
xor
add
add
dec
out
test
pop
sub
outsl
fstps
pop
inc
pop
hlt
mov
test
inc
pop
inc
add
mov
ret
pop
mov
rcrb
mov
addr16
dec
and
add
add
cmp
cmpsb
pop
ja
pop
lea
pop
pop
and
aaa
xchg
out
jle
sub
sarl
dec
push
add
movsl
add
fwait
mov
add
ljmp
dec
jecxz
pop
je
pop
inc
add
test
fcomi
sbb
lods
std
jne
pop
jns
push
imul
or
add
test
jp
pop
push
add
les
into
pop
ja
out
dec
xor
add
push
xchg
jmp
push
xchg
aam
pop
imul
out
rcll
pop
or
pop
mov
add
pop
and
add
add
fnstenv
rcrb
pop
xor
add
add
push
add
jecxz
test
add
add
add
lret
sbb
hlt
adc
add
add
push
pop
mov
pop
dec
inc
add
inc
add
jne
cmp
jmp
add
add
jle
jbe
add
add
add
fwait
dec
scas
adc
add
jl
pop
outsb
mov
mov
cmp
push
pop
loopne
jl
iret
pusha
add
pop
sti
mov
dec
movsb
pop
inc
pop
mov
add
jl
fnstenv
push
js
ja
pop
cmp
pushf
dec
scas
cmp
cmc
cmp
movsb
pop
and
cwtl
nop
add
add
mov
add
push
dec
pushf
jl
rcrl
mov
pop
cld
js
pop
add
popa
add
jg
sbb
pop
loope
pop
add
add
push
mov
xchg
adc
add
sbb
cmp
imul
fldl
mov
jne
test
and
or
jle
add
add
pop
dec
jo
add
push
and
add
adc
add
mov
iret
and
add
je
or
scas
adc
add
mov
pop
sbbl
es
inc
pop
stos
mov
pop
adc
add
mov
cmp
add
add
add
fst
mov
mov
add
sub
pop
test
add
xchg
xchg
fs
sbbl
jo
add
decl
jmp
in
enter
push
lcall
arpl
daa
adc
inc
add
dec
pop
jle
stc
sub
pop
push
add
ja
pop
movsl
pop
cmp
das
inc
add
lret
rcrb
pop
insb
sbb
sbb
push
sub
imul
mov
push
mov
sbb
pop
mov
call
dec
pop
lcall
pop
scas
fiadds
add
xchg
xchg
std
fcoms
add
sub
dec
pushf
decl
mov
sbb
in
in
jp
add
push
add
jne
dec
mov
pop
movsl
pop
jnp
out
mov
cwtl
lahf
jle
sbbb
stc
and
outsl
loop
pop
pop
jae
add
add
mov
add
add
add
jnp
add
cld
mov
add
cmpsl
pop
sbb
push
ret
pop
fsts
add
xor
popf
shl
pop
lret
adc
add
ret
pop
sub
add
pop
mov
mov
mov
movsl
pop
popa
add
pop
pop
dec
fprem1
int3
and
add
pop
mov
add
insb
or
addr16
fcoml
jae
add
pop
cmp
test
add
adc
add
lds
seta
add
add
add
js
jmp
or
or
pop
xchg
fbld
movsl
pop
sbb
add
push
pop
in
fwait
js
pop
sub
sub
mov
jmp
pop
xchg
mov
xor
out
sub
repnz
add
or
cmp
mov
push
pop
mov
pop
inc
add
push
pop
fwait
stc
je
sbb
pop
gs
sahf
mov
add
pop
push
add
fidivrl
and
pusha
add
adc
add
adc
je
les
mov
mov
dec
push
add
and
adc
mov
pop
mov
push
mov
repz
add
jmp
add
xor
add
ja
pop
mov
pop
icebp
add
add
jno
add
xor
add
push
dec
fcompl
pop
arpl
add
dec
cmpsb
pop
push
add
sbb
call
fisubrl
add
pop
roll
mov
mov
out
sbb
pop
mov
pop
push
in
jmp
arpl
or
adc
add
add
mov
sub
incl
dec
adc
daa
pop
shrl
mov
jmp
sub
dec
dec
jl
jbe
pop
dec
je
cli
xor
add
mov
pop
dec
jg
pop
shrb
out
xor
add
and
add
pop
ja
and
fstpt
pop
les
cs
pop
std
mov
pop
add
add
add
xor
jae
add
pop
lods
push
add
mov
push
jmp
sbb
sbb
repnz
adc
add
rcl
outsb
cmp
dec
aam
add
enter
mov
push
add
shlb
pop
adc
jle
movsb
pop
loop
cwtl
sbb
pop
jnp
es
std
into
or
pop
in
pop
test
pop
or
test
pop
movsl
inc
add
clc
stos
add
dec
in
mov
jg
pop
push
ret
andb
arpl
mov
pop
loope
popa
add
pop
pop
loope
leave
test
xor
add
fldenv
add
ffreep
pop
repz
into
cmpsb
pop
mov
pop
frstor
xor
add
or
pop
cmc
jne
pop
bnd
aas
xchg
pop
cmp
daa
pop
mov
add
pop
jo
add
pop
pop
adc
add
pop
rcrb
dec
pop
and
add
loope
enter
pop
filds
dec
imul
add
loop
in
fnsave
add
add
icebp
in
sub
add
out
clc
xchg
add
shlb
add
jp
pop
clc
into
xor
add
adc
adc
add
push
xor
add
adc
add
test
faddl
add
lds
pop
test
sbb
xor
pop
test
outsb
or
pop
lea
lret
jmp
push
sbb
add
add
add
cwtl
mov
pop
xchg
mov
add
aas
addr16
mov
mov
add
add
rcrl
pop
decl
mov
sub
inc
jp
ljmp
test
mov
popa
add
mov
add
fbstp
lock
add
fwait
cmc
cmp
shlb
add
mov
mov
int
add
loop
mov
add
or
mov
xor
add
add
pop
aaa
push
add
ret
xlat
mov
add
add
pop
add
add
add
lods
or
add
pop
arpl
add
fbstp
mov
pop
sti
arpl
add
std
mov
je
jmp
arpl
ds
and
add
xor
add
aam
pop
lods
mov
lret
sbbl
pop
or
test
or
pop
push
pop
cmp
pop
stos
mov
test
pushf
or
inc
pop
adc
add
jg
and
out
mov
inc
add
arpl
and
lahf
mov
pop
loope
push
sbb
pop
jno
add
add
push
add
jno
add
or
pop
mov
jmp
out
enter
pop
xchg
out
rcrl
add
pop
fcoml
inc
pop
xchg
add
cli
or
add
ljmp
dec
inc
add
pop
stos
call
xchg
mov
arpl
inc
add
mov
popa
add
cltd
pushf
sbb
mov
add
and
add
daa
mov
js
dec
sbbl
add
add
inc
add
jecxz
ljmp
adc
mov
clc
adc
add
add
xor
add
add
push
add
jns
xchg
aas
cmpsb
pop
dec
shlb
add
in
dec
pop
mov
repnz
add
stos
stos
push
outsl
pop
movsl
pop
sbb
cmp
push
ret
dec
jnp
test
pop
int
and
xor
add
add
jmp
pop
cld
aaa
enter
mov
mov
jmp
add
rol
pop
shlb
mov
leave
mov
add
sub
add
mov
sahf
stos
mov
inc
add
pusha
add
sub
add
sub
add
loop
jbe
add
mov
xor
ljmp
pop
mov
mov
add
or
add
pop
jne
add
ret
pop
pop
iret
cmc
dec
sub
pop
call
add
and
mov
add
test
push
add
lds
sbbl
xchg
imul
xchg
sbb
mov
outsl
incl
sti
jmp
arpl
enter
and
add
add
cltd
scas
fwait
mov
pop
imul
pop
ja
push
pop
mov
nop
or
sub
jmp
xchg
arpl
lock
fdivrs
loope
lods
pop
lcall
jmp
mov
xor
add
sbb
dec
sbb
xchg
inc
pop
aam
cmp
cltd
insb
cmp
mov
push
mov
test
xchg
sbbb
add
dec
push
mov
loopne
cli
and
pop
rcrb
mov
pop
inc
add
mov
pop
and
add
inc
pop
hlt
fistpl
and
add
jno
add
jo
add
inc
add
lret
repz
pop
jmp
xchg
xchg
ret
aaa
cmp
pop
push
mov
mov
mov
jmp
jp
call
sbb
or
add
add
test
add
jns
add
out
outsb
mov
imul
pop
add
movsl
pop
cmp
add
inc
pop
sbb
in
scas
cmp
jno
add
jbe
add
xchg
xchg
add
add
insb
lds
jle
cmpsl
pop
mov
xchg
outsl
push
std
dec
push
or
add
sahf
push
aam
lcall
pushf
sub
out
call
mov
in
mov
and
add
mov
pop
push
add
jmp
fistps
xor
or
es
jbe
add
gs
out
jl
sbb
add
adc
add
add
mov
jmp
add
adc
add
sbb
add
jbe
sbb
insb
sub
inc
pop
push
mov
add
xchg
pop
test
pop
pop
mov
add
cmp
jne
orb
pop
insb
mov
mov
add
rcll
add
notb
pop
add
add
insl
push
add
ret
pop
paddq
push
and
add
aad
gs
xchg
mov
out
sbb
test
mov
lret
pushl
pop
pop
mov
dec
jae
add
js
imul
cld
out
push
adc
mov
inc
sub
add
pop
xor
inc
pop
repnz
pop
ss
mov
xchg
mov
sub
mov
ret
dec
fbld
mov
inc
pop
xchg
test
pop
push
pop
test
mov
xor
add
add
push
add
jmp
fldcw
arpl
xor
add
arpl
add
pop
push
lock
pop
and
add
push
add
cld
sbb
ss
add
stos
dec
lret
inc
add
mov
mov
rcrl
inc
pop
std
popa
add
pop
mov
sbbb
out
fldt
fidivl
add
cmpsb
pop
pop
sbb
add
adc
aad
dec
sbb
pop
xchg
out
push
add
imul
mov
imul
pop
je
int3
jnp
add
leave
leave
aam
das
pop
sbb
pop
scas
push
stos
fmulp
mov
xchg
shlb
add
decl
test
mov
jmp
mov
sub
pop
or
add
je
mov
inc
pop
out
jae
add
cmpsl
pop
out
mov
add
mov
ja
addr16
or
pop
mov
push
pop
mov
pusha
add
ja
or
mov
pop
mov
insl
xlat
popf
push
add
lods
stc
push
insb
push
sbb
sub
jne
int
shr
jmp
mov
ret
push
insb
hlt
incb
add
pop
adc
fisubs
add
mov
jl
movsb
pop
shlb
add
mov
test
sbbl
cmp
and
add
loop
pop
pop
lds
add
add
test
nop
and
add
fstps
test
add
pop
pop
fadds
add
mov
jecxz
out
push
add
pop
jns
add
adc
add
pop
out
xor
add
movsl
pop
mov
daa
pop
fbld
add
pop
jl
shrl
and
add
and
aad
pop
fisttpl
add
pop
pop
outsl
lret
sub
pop
push
push
insl
cmp
pop
popf
jae
add
jg
outsb
in
insb
sbb
jmp
arpl
fs
add
add
int3
mov
pop
dec
push
add
icebp
cmp
add
imul
jns
pop
jb
add
pop
sbb
dec
into
movsb
pop
mov
add
int
pop
xchg
daa
pop
adc
pop
pop
cmp
stos
insb
add
add
pop
jns
ret
pop
pop
outsb
xchg
fsub
pop
or
jge
int
xor
add
ja
js
add
clc
mov
add
insb
pop
mov
rcrl
pop
xor
lahf
mov
outsb
mov
repnz
insl
cmp
je
bound
add
mov
add
imul
out
std
mulb
bound
add
and
out
push
test
mov
dec
test
cmp
repnz
cmpsb
pop
ret
pop
fdivp
and
pop
ret
cmpsl
pop
sbbl
pop
mov
pop
add
add
xchg
sbb
lret
mov
ljmp
push
add
in
pop
mov
add
cwtl
jo
add
dec
out
xchg
cltd
pop
test
add
or
aam
push
lahf
test
lea
adc
fldenv
add
xlat
scas
call
pop
pop
scas
mov
clc
pop
xor
pop
dec
repnz
movsb
pop
xor
add
dec
jmp
add
pop
pusha
add
movsb
pop
pop
insl
loop
pop
sbb
add
ds
push
call
jae
add
add
popa
add
ljmp
mov
jmp
dec
inc
fs
add
cmp
add
daa
pop
cmp
add
adc
cltd
bound
add
add
out
mov
movsl
pop
call
push
decl
push
pop
dec
push
fcoml
add
xchg
dec
mov
xchg
pop
cmc
and
add
add
xchg
push
add
jne
push
pop
rcrl
inc
add
cwtl
xchg
pop
push
add
cmp
add
add
pop
and
add
nop
mov
cmpsl
pop
adc
add
add
sub
add
mov
pop
sub
add
add
out
inc
add
arpl
add
add
sbbb
pop
mov
inc
add
lret
adc
ljmp
sub
lea
jmp
and
lret
add
clc
pop
cltd
lods
sbb
push
add
aaa
cmc
sbb
rcrb
mov
cmp
add
dec
xchg
add
add
adc
or
push
or
and
pop
mov
add
cmc
or
add
pop
arpl
add
dec
stos
xchg
mov
dec
mov
pushf
pusha
add
or
enter
inc
pop
add
add
pop
pop
in
cmp
pop
dec
dec
das
sbb
sbb
pop
lret
je
dec
sub
scas
push
add
or
cld
xchg
clc
push
jo
add
sbb
pop
adc
add
or
pop
and
add
fisttpll
or
pop
les
pop
pop
mov
pop
ljmp
les
nop
cli
inc
pop
mov
cmp
pop
cmc
xchg
and
add
or
femms
push
or
jb
add
pop
sbb
cmpsl
pop
inc
add
sbb
add
lods
mov
pop
bound
add
pop
mov
pop
lods
xor
add
popa
add
jp
pop
lea
add
pop
daa
pop
mov
pop
enter
mov
fstpt
inc
pop
mov
cltd
out
fists
add
sbbb
int3
mov
je
pop
jle
or
jge
addr16
mov
push
xor
shlb
and
push
ret
arpl
adc
add
stos
hlt
outsb
in
jnp
mov
cmp
stc
xchg
aas
adc
add
dec
jne
mov
jmp
mov
push
cmp
out
xor
mov
jmp
add
cmp
pop
pop
gs
repz
jle
jg
mov
inc
add
pop
xor
add
sub
pop
add
add
pop
inc
add
sub
and
add
add
lods
inc
add
test
xchg
fcompl
add
add
arpl
add
add
lods
in
inc
pop
inc
pop
jno
add
lds
cs
add
or
jmp
dec
pop
jne
sub
add
insl
mov
loope
in
dec
jnp
icebp
jbe
add
mov
or
add
xor
add
sub
outsb
xchg
pop
add
add
add
scas
repz
movsb
pop
aam
add
lods
fidivl
inc
pop
lods
inc
add
iret
mov
add
add
mov
jmp
lods
push
sub
adc
add
int3
iret
les
pop
into
jg
add
or
mov
mov
lret
jl
pop
scas
mov
adc
add
add
popf
ljmp
push
mov
push
push
add
mov
movsl
pop
leave
cmp
add
movsb
pop
out
xor
add
xchg
mov
inc
pop
hlt
inc
add
cmp
pop
cwtl
adc
add
or
aad
pop
test
inc
pop
cltd
int3
enter
js
add
repnz
fcompl
push
and
add
cmc
leave
sbb
dec
mov
add
stos
faddl
add
jmp
pop
dec
arpl
push
daa
pop
stos
xor
add
pop
cld
sbb
add
pop
pop
fdivl
jp
xchg
xor
add
add
lret
mov
xchg
pop
std
jno
add
in
add
add
add
lds
pop
divb
add
sbbl
push
sahf
sbb
pop
out
mov
fdivl
pop
push
xchg
cltd
xor
mov
pop
xor
push
lock
repnz
xor
add
add
mov
hlt
push
adc
fcom
xor
mov
pop
mov
add
xchg
fldl
pop
cltd
adc
sub
pop
pop
sbb
cmp
add
mov
in
sbb
pop
sar
cmp
pop
faddl
add
das
sbbl
add
cmpsl
pop
jl
push
nop
in
pop
cmp
add
add
mov
add
leave
fs
pop
sbbb
je
cwtl
movsb
pop
cmp
pop
inc
pop
ljmp
lahf
and
add
or
xchg
add
sbb
xchg
inc
pop
rcrb
or
pop
jnp
outsb
cmp
pop
inc
add
ret
shrb
add
jb
add
add
add
add
add
jl
add
sbbl
add
cmp
inc
pop
lock
jne
jmp
xor
add
es
pop
into
cmp
add
add
cli
xchg
popa
add
mov
add
pop
dec
sub
jge
add
sarb
cmp
add
int3
jle
add
out
jle
inc
pop
cmpsl
pop
jmp
pushl
and
cltd
cld
and
add
push
mov
add
into
dec
jbe
sub
inc
pop
lahf
std
shl
pop
dec
fidivl
jg
jle
mov
and
jns
add
adc
add
adc
add
jnp
pop
es
bound
add
pop
add
add
lcall
shrl
jge
in
sti
inc
add
cmp
mov
sbb
adc
add
dec
add
add
in
mov
mov
addr16
pop
mov
call
js
add
inc
pop
outsl
pop
lcall
add
add
fisubs
add
xchg
jae
add
add
push
sahf
xchg
add
sbb
test
mov
ret
pop
jnp
and
add
jecxz
dec
jno
add
add
dec
and
add
add
hlt
dec
out
lock
aam
aam
call
ret
repz
add
lods
dec
xlat
push
mov
mov
jns
add
mov
pop
mov
das
int
out
fs
int3
mov
pop
push
mov
es
out
ret
pop
push
pop
insb
or
push
add
imul
add
add
add
pop
pop
je
sbb
loop
ss
lahf
dec
adc
add
add
jo
add
pop
cwtl
sbb
pop
sub
add
add
add
add
xchg
ret
pop
pop
inc
pop
mov
xchg
mov
in
dec
cld
and
add
pop
mov
rcrl
pop
pop
outsl
mov
pop
cmp
xor
sbb
add
out
push
jl
mov
pop
mov
add
sub
addr16
movsl
pop
xchg
sbbl
cwtl
push
add
or
sti
not
rcll
pop
xchg
push
add
pop
and
add
add
jae
add
or
xchg
or
pop
in
mov
aas
mov
jno
add
movsl
pop
jae
add
aad
sub
pop
mov
fistpl
mov
or
aad
xor
add
aad
xchg
popa
add
pop
mov
pop
iret
jle
mov
add
xchg
aas
mov
pop
stc
and
xor
add
or
add
inc
add
test
add
mov
mov
ret
adc
or
add
jnp
imul
xor
call
jl
add
loopne
sti
shll
add
sbb
in
xchg
js
pop
and
fidivl
adc
push
add
dec
or
sbbb
inc
add
mov
mov
jl
push
scas
jne
fcmove
and
add
pop
es
ret
add
cld
in
pop
lea
bound
add
adc
add
pop
das
lods
or
add
mov
jge
aas
jmp
add
xor
pop
jge
pop
mov
pop
in
fbld
shlb
sub
mov
ja
push
icebp
stos
xor
add
push
add
call
mov
xchg
cltd
adc
add
lock
xchg
int3
test
sbbl
scas
mov
jnp
imul
mov
add
loop
dec
call
xchg
rcrb
add
pop
adc
rcrb
add
pop
mov
inc
add
rorl
mov
sbb
push
cmp
and
add
sti
and
add
inc
pop
push
pop
xor
add
lret
clc
les
aaa
mov
fsubl
add
scas
mov
sub
stos
les
pop
xchg
pop
jg
push
insl
fimull
add
add
ficomps
add
pop
mov
add
loop
add
sub
testb
pop
lret
faddp
pop
jecxz
lods
sbbb
pop
sbb
pop
mov
or
cmp
imul
les
add
push
sub
fstpl
pop
dec
dec
addr16
fisttps
xor
xlat
imul
jl
pop
stc
dec
jbe
mov
add
add
fsts
pop
loope
lods
xchg
adc
add
pop
cmpsl
pop
push
pop
fprem
mov
jnp
cld
rorl
pop
xchg
das
adc
icebp
push
fnstcw
jbe
pop
mov
pop
gs
mov
sub
pop
lcall
stos
cmpsl
pop
mov
pop
add
xor
add
add
pop
pop
gs
rcrb
nop
xchg
shlb
pop
sub
cmpsl
pop
repnz
add
mov
pop
jnp
xor
pop
push
ds
imul
out
xor
sub
mov
add
add
and
add
xor
add
call
shl
mov
cmpsl
pop
lret
adc
add
or
loopne
add
add
es
insl
inc
pop
jno
add
lds
push
add
call
pop
mov
add
xchg
push
pop
and
add
add
sub
pop
scas
inc
pop
jo
add
in
add
add
add
mov
mov
mov
outsb
ljmp
cmp
add
push
pop
loope
lahf
bound
add
or
test
push
es
sahf
or
sub
bound
add
test
lds
addr16
adc
pop
stc
sbbl
jo
add
pop
xchg
gs
fwait
lods
loop
lcall
daa
pop
stos
insl
sbb
aam
ret
lahf
or
cmc
mov
inc
pop
mov
pop
mov
pop
ja
pop
nop
ds
jg
pop
pop
lds
loopne
mov
or
mov
mov
add
es
aaa
fcmovnbe
push
mov
jae
add
jg
mov
sub
sbb
xor
lods
adc
add
pop
mov
loop
xor
add
add
test
pop
push
add
enter
pop
lcall
insl
add
inc
pop
fwait
push
pop
inc
add
or
add
add
popa
add
cs
ja
rcrl
add
ljmp
into
mov
pop
rcrl
pop
ret
pop
fildll
pop
stos
jge
pop
lcall
add
pop
sbbb
push
cli
pop
pop
test
jecxz
xor
mov
sahf
mov
fs
sub
pop
dec
cmp
add
rcrb
push
daa
pop
sub
add
mov
and
mov
dec
pushf
xchg
or
add
cmpsl
pop
add
repz
call
insl
xor
add
pop
out
fnsave
shl
xchg
jecxz
fmuls
cs
add
mov
iret
mov
add
fsubr
cltd
push
add
imul
add
add
pop
not
std
stos
adc
inc
add
xchg
lods
mov
push
jg
jne
cwtl
adc
add
fidivs
add
call
and
xchg
dec
sub
mov
add
jo
add
pop
pop
mov
pop
int3
inc
add
mov
das
sub
dec
dec
adc
iret
jbe
add
xchg
test
imul
sbbb
shrb
pop
iret
jns
scas
push
in
js
add
mov
add
inc
pop
sarb
addr16
pop
mov
lret
sbb
icebp
cmpsl
pop
mov
nop
pop
sahf
pusha
add
jge
add
insb
xor
dec
aam
pop
adc
add
rcrb
pop
inc
pop
stc
mov
aam
pop
jb
add
jl
add
lret
loop
shl
repz
or
add
add
dec
pcmpgtw
outsb
push
xchg
decl
pop
sbbl
scas
jecxz
addr16
stos
xor
nop
pop
das
push
push
xor
loopne
mov
add
sub
add
jecxz
fidivrs
add
add
add
jno
add
adc
add
jne
pop
push
iret
les
pushf
popf
pop
sbbl
push
add
push
add
aad
sub
dec
pop
jmp
popl
add
pop
aad
mov
sbbl
inc
add
cs
add
lds
pop
loopne
jbe
add
sub
pop
bswap
pusha
add
jno
add
xor
add
movsb
pop
add
imul
add
fcomps
lea
pop
add
add
mov
ret
pop
push
mov
add
mov
add
adc
pop
pop
les
xchg
add
add
shlb
add
pop
push
daa
pop
rorb
cmp
pop
push
add
mov
sbbl
popa
add
or
or
add
stos
call
add
mov
add
push
add
mov
lea
xor
add
cld
inc
pop
insl
xor
add
aad
and
add
mov
jecxz
sbb
and
cmp
mov
add
mov
fnstsw
pop
fcoml
add
add
add
and
add
in
cli
mov
add
add
pop
pop
mov
sahf
call
mov
imul
aaa
jmp
enter
pop
rcrb
pop
sbbb
jge
pop
jl
sbbb
add
pop
shlb
add
sbb
pop
dec
mov
fidivl
add
in
movsl
pop
adc
or
or
and
add
push
dec
cltd
xchg
push
add
or
pop
das
dec
inc
add
pop
xchg
inc
add
mov
je
jbe
pop
movsb
pop
jae
add
add
add
out
out
dec
sub
add
out
ret
pop
dec
sbbb
add
mov
gs
xor
add
nop
dec
jge
jne
ret
pop
mov
add
rcrl
push
add
push
pushf
xchg
xchg
push
add
and
add
out
or
add
jbe
mov
pop
push
add
ret
jg
dec
mov
ret
pop
lods
adc
add
int
mov
pop
push
add
lock
icebp
add
add
pop
or
jg
add
mov
test
fisubs
add
push
in
fs
cmpsb
pop
jle
add
jmp
lret
fbstp
leave
imul
xchg
dec
je
mov
add
ret
pop
ret
pop
scas
add
add
add
xor
lock
jae
add
add
test
das
adc
add
pop
xchg
xchg
or
pop
int
cli
in
sbb
adc
add
add
sub
sti
push
scas
movsl
pop
dec
mov
repz
pop
sub
ret
pop
pop
sbb
add
mov
pop
sbb
mov
in
and
add
add
mov
push
add
aad
adc
add
add
pop
daa
pop
pusha
add
icebp
fchs
pop
push
stos
out
aad
push
sbbb
leave
sbb
cld
jae
add
add
fdivs
aad
bound
add
mov
mov
push
add
in
test
cs
adc
pop
sbb
popf
and
pop
push
loopne
sahf
mov
fwait
or
cmpsl
pop
hlt
xchg
pop
cmc
movsl
pop
sbbb
jp
push
sti
cmp
into
mov
ja
jecxz
sub
scas
or
es
call
pop
cmpsb
pop
pop
shl
pop
hlt
ret
enter
sub
pop
cmc
jnp
add
add
add
imul
movsl
pop
jmp
add
pop
dec
sub
mov
pop
add
add
pop
mov
add
add
add
and
add
pop
aam
aam
arpl
add
js
pop
push
add
pop
or
xor
pop
movsb
pop
pop
pop
inc
add
clc
fbld
cmp
add
ret
pop
cwtl
pop
lahf
popa
add
xor
sbbb
outsb
mov
mov
mov
jecxz
iret
bound
add
pop
xchg
lret
push
mov
pop
push
pop
lods
ret
pop
pop
imul
add
stc
xor
add
pop
loop
jne
cltd
and
add
pop
xor
paddq
lret
iret
fnstenv
cmp
adc
add
in
movsl
pop
and
add
outsl
pop
mov
jg
add
mov
dec
adc
add
adc
add
cmpsl
pop
inc
add
fimuls
clc
out
and
add
add
les
mov
imul
push
lds
repnz
pop
xlat
call
pop
xor
lock
or
fisubrl
int3
roll
add
add
pop
jns
mov
enter
add
stc
mov
mov
pop
rcrb
daa
pop
mov
lods
mov
add
daa
pop
insl
cmp
cmpsl
pop
pop
movsb
pop
cmp
add
stos
push
stos
jae
add
add
lock
add
rcrb
cmp
add
add
aas
pop
xor
add
mov
add
fldcw
mov
in
into
mov
ret
pop
sub
lret
pop
fisubrs
mull
add
cmpsb
pop
cmpsl
pop
sub
add
imul
insl
xchg
popa
add
xchg
xor
cwtl
in
add
add
pop
mov
ljmp
mov
mov
xor
ret
pop
adc
cmc
pop
aam
test
add
or
add
mov
add
adc
add
add
push
add
mov
rcrl
mov
add
add
pop
les
mov
pop
out
xor
add
test
add
fadds
add
cld
test
add
add
add
dec
lret
add
test
pop
inc
add
cmp
jne
add
jns
movsl
pop
lods
fs
int3
adc
add
mov
adc
or
pop
xchg
pop
les
add
mov
pop
das
dec
add
jg
outsb
and
add
add
pop
out
out
mov
notb
add
or
pop
sbbl
test
mov
push
icebp
inc
pop
cld
and
ficoml
jns
add
lcall
jo
add
pop
jnp
frstor
add
js
sbb
sbb
insl
mov
imul
std
jmp
lds
pop
jbe
mov
sbb
pop
push
pop
stos
jl
test
pop
popf
jmp
outsb
enter
sbb
push
lods
loopne
loopne
imulb
stos
push
ret
pop
test
pop
mov
sahf
xchg
imul
adc
cmp
add
sarb
ret
pop
or
mov
add
aas
sbbl
pop
stos
pusha
add
out
mov
jae
add
mov
cmp
out
cs
xchg
js
pop
lds
or
pop
sbb
sti
dec
push
add
push
mov
cmp
insb
popa
add
mov
std
int3
sbb
movsb
pop
gs
mov
push
add
stos
bound
add
add
sub
add
mov
add
adc
add
mov
cmp
pop
bound
add
add
add
cmp
add
sub
dec
pushf
mov
pop
sub
cmp
pop
jns
pop
xor
add
out
das
shr
loope
xor
add
pop
ret
pop
xor
and
add
add
lods
pushf
mov
aad
pop
fisttps
pop
pop
je
hlt
scas
test
add
add
add
mov
add
xchg
push
pop
aaa
mov
lock
les
and
add
add
add
sbbb
pop
addr16
out
imul
fstl
cmpsb
pop
bswap
fwait
sbb
push
ljmp
int
and
add
add
repz
xlat
fcmovb
pop
sbb
add
mov
mov
add
mov
in
mov
not
mov
pop
movsl
pop
mov
push
add
inc
pop
and
add
add
pusha
add
dec
dec
aad
cli
fld
pop
xor
add
add
test
mov
pop
fdivs
mov
fnsave
add
and
xchg
stos
pop
jp
dec
mov
add
ljmp
and
inc
add
fdivrs
inc
pop
dec
repnz
pop
add
add
add
jle
and
mov
add
in
sbbl
pop
es
and
add
pop
pop
fs
leave
in
sbb
pop
mov
in
mov
lea
pop
cmp
lock
add
pop
mov
ljmp
mov
push
shrb
add
pop
mov
arpl
add
std
gs
aaa
inc
add
inc
add
mov
out
sub
mov
inc
pop
pop
dec
sub
add
aad
sub
add
xor
add
xor
add
sub
pop
stos
jnp
pop
bound
add
and
add
lds
xor
add
mov
mov
pop
in
xchg
movsl
pop
mov
pop
mov
pop
jbe
push
mov
add
add
sbbb
pop
fidivl
sub
xchg
xor
add
pop
mov
cmp
lods
sbb
repz
add
jecxz
lret
pop
cmpsl
pop
scas
test
jmp
add
cmp
out
leave
in
lret
cmc
xor
add
pop
les
pop
fildll
dec
adc
add
pop
push
jecxz
and
add
je
inc
pop
sbbl
pop
mov
pop
push
add
jnp
push
pop
lods
mov
add
xchg
test
mov
icebp
and
add
add
gs
sysret
pop
xor
mov
cmp
scas
sbb
add
mov
and
pop
out
push
add
popf
jle
add
mov
sub
xor
add
pop
test
addr16
cmp
pushf
scas
shl
pop
dec
mov
add
pop
dec
fbld
add
push
xor
add
rcll
add
sbb
neg
bound
add
test
pop
es
add
sbb
xchg
sbbl
xor
add
xor
pop
xchg
push
push
add
push
add
ja
add
lcall
addr16
dec
mov
inc
add
jne
js
sub
add
js
pop
pop
sub
aas
iret
ljmp
pop
jbe
mov
add
hlt
cmp
nop
adc
mov
add
add
add
xor
add
push
add
pushf
mov
inc
add
jns
pop
ret
pop
or
imul
xor
add
fwait
ret
pop
mov
inc
add
mov
lods
jp
pop
pop
cmp
add
jbe
add
mov
les
adc
add
cs
pop
pop
stos
outsl
loop
sahf
dec
jnp
sete
pop
jb
add
add
add
lods
sub
out
call
jbe
sub
mov
pop
cwtl
adc
add
pop
lock
add
pop
mov
add
popf
xor
add
xchg
les
inc
pop
or
lock
push
pop
pop
ja
in
insb
movsb
pop
jle
mov
pop
xor
pop
fs
sbbl
add
pop
fstpl
xchg
xor
add
xor
add
jne
pop
jg
jb
add
pop
lahf
pop
lds
clc
xor
pop
pop
les
add
aad
inc
add
or
dec
into
es
popf
or
pop
sub
pop
dec
fwait
add
add
add
insb
bound
add
dec
jle
stc
jns
pop
pop
pop
insl
rcrb
int
cli
insb
xchg
dec
or
loopne
movsl
pop
jmp
lods
out
loopne
add
dec
out
mov
and
add
add
outsb
dec
popf
inc
add
mov
pop
imul
cld
std
ds
pop
jbe
mov
scas
mov
add
sbb
outsl
inc
pop
ret
pop
inc
add
pusha
add
jae
add
cli
push
add
cs
sbbl
insb
mov
sbbb
out
lods
mov
rcrl
add
imul
pop
cmp
pop
sahf
xchg
bound
add
xor
add
xor
pusha
add
arpl
add
pop
cmp
fimull
jmp
pop
push
stos
adc
add
add
jecxz
outsl
loope
fcoml
jmp
sub
add
mov
mov
mov
xchg
aam
lods
lds
jp
pop
test
std
and
add
add
sub
pop
frstor
pop
jne
ret
pop
jecxz
sub
cmpsl
pop
sub
enter
in
ret
pop
push
sbb
add
add
add
imul
cmp
pop
ss
add
popa
add
lock
add
jb
add
lahf
arpl
add
add
push
pop
aad
add
add
add
add
lret
cmp
pop
sbbb
enter
pop
clc
sub
mov
sbbb
jmp
fnstenv
add
in
sbb
dec
rcrb
scas
xor
dec
clc
cmp
add
pop
movsl
pop
stos
scas
jnp
pop
lods
shrb
mov
xor
sbbl
pop
test
into
rcrb
mov
xor
add
add
add
in
pop
pop
sbbb
faddl
pop
jmp
add
adc
lret
lret
mov
pop
push
ss
sbb
les
xchg
stos
sbb
pop
mov
std
pop
out
rcrl
mov
add
add
in
add
add
test
cmp
popf
in
and
add
xchg
mov
add
pop
dec
xchg
xchg
loopne
sahf
ja
mov
jno
add
pop
loope
jg
pop
dec
dec
inc
add
mov
es
pop
sub
cwtl
in
enter
jbe
fs
fwait
xchg
and
add
push
add
inc
pop
ss
push
repnz
iret
in
lock
dec
sbbb
add
lcall
jmp
add
lods
negb
add
lds
loopne
xchg
mov
pop
jns
pop
or
add
xor
add
cmp
or
pop
mov
lods
out
imul
xchg
in
or
pop
and
add
aas
testb
pop
bound
add
add
pop
in
cmp
cli
rcrl
add
jnp
pop
sub
cmc
pushf
jae
add
pop
mov
aad
mov
loopne
in
hlt
inc
pop
push
mov
je
pop
jae
add
mov
add
pop
xchg
xchg
add
cmpsb
pop
iret
jae
add
jae
add
xchg
cltd
jecxz
rcrl
mov
pusha
add
and
pop
sbbb
pop
mov
add
add
adc
add
add
arpl
add
pop
pop
xchg
cmp
or
movsb
pop
and
mov
sbb
pop
pop
int
pop
nop
popa
add
push
add
jne
dec
fstpl
push
add
scas
je
std
jge
hlt
fnsave
add
mov
lcall
pop
push
test
movsl
pop
bound
add
pop
ja
xchg
rol
pop
sbb
push
pop
addr16
test
movsb
pop
ljmp
add
cmpsb
pop
or
push
pop
inc
add
mov
pop
ljmp
mov
fimuls
outsb
test
add
jne
add
in
daa
pop
je
mov
insl
lahf
mov
and
add
pop
mov
pop
and
sub
pop
mov
jp
jle
pop
sub
daa
pop
iret
jnp
stc
sbb
push
add
cmc
dec
fidivrl
sbb
add
add
add
pop
add
add
pop
cmp
ja
add
cltd
mov
xchg
xchg
cs
add
xor
lods
fucomp
jp
pop
in
xchg
repnz
add
xor
add
lds
leave
sub
pop
add
add
inc
add
xor
add
push
sub
pop
lcall
add
aam
xor
add
mov
das
out
pop
push
add
push
add
dec
sbbl
pop
mov
add
mov
cwtl
pop
and
add
aad
pop
pop
inc
add
cs
mov
mov
rcrb
out
sti
pop
mov
add
les
push
loop
and
add
mov
repz
pop
cmp
test
cmp
push
pop
enter
add
sub
dec
call
rcrb
add
mov
pop
push
add
mov
pop
scas
mov
pop
xor
mov
add
sbbb
pop
pusha
add
jl
cmp
icebp
sub
add
pop
int
pop
or
xor
add
mov
sti
es
cmpsb
pop
sahf
mov
pop
and
add
add
add
push
fbld
push
dec
repz
les
sbb
mov
fbld
bound
add
mov
sub
mov
pop
in
test
jae
add
pop
xchg
into
mov
int3
mov
pop
xchg
test
pop
loope
xchg
and
add
and
gs
add
pop
loope
shrb
dec
daa
pop
xor
add
pop
mov
xchg
mov
adc
add
jae
add
pop
mov
pop
test
add
add
dec
pop
add
add
pop
add
add
add
movsb
pop
xor
add
out
mov
mov
add
inc
add
cmp
add
out
cmp
loopne
test
pop
xchg
xor
add
add
xor
add
pop
stos
scas
scas
out
xor
add
negb
mov
mov
and
add
sarl
fsts
add
xor
add
pop
mov
add
rorb
and
fs
push
sbb
pop
ret
push
jne
pop
repz
pop
clc
xchg
pop
sbb
pop
adc
add
aas
sub
xchg
mov
scas
sub
pop
icebp
jo
add
add
stc
jge
jp
pop
inc
add
pop
jbe
add
or
mov
movsb
pop
in
rcrl
insb
les
ret
add
repnz
add
dec
inc
add
pop
push
inc
pop
mov
daa
pop
dec
ja
add
jo
add
xchg
xchg
inc
add
scas
adc
add
fwait
stos
mov
sbb
loope
pop
sub
loop
in
sbbb
mov
add
xor
pop
sbb
cmp
hlt
sub
mov
xchg
sbbl
add
add
pop
sbb
adc
add
add
loopne
push
add
fst
addr16
std
cs
fwait
out
sbbb
pushf
les
add
mov
pop
add
add
add
sub
pop
jl
pop
jecxz
sahf
enter
mov
add
int
pop
loopne
mov
stc
and
add
add
rcr
add
push
sbbl
das
outsb
lret
and
je
or
pop
jle
ja
out
jmp
pop
ret
pop
sbb
mov
ds
jbe
xchg
jno
add
and
xchg
jns
shlb
cmp
pop
cmp
sub
add
pop
push
inc
pop
pop
mov
lods
xchg
outsl
push
sbb
faddl
add
mov
add
add
add
pop
into
lahf
xor
add
pop
aaa
inc
add
jo
add
sbbb
pop
sub
repnz
pop
cmc
lds
test
es
sbb
add
pushf
lock
add
add
sti
cmpsl
pop
mov
in
xchg
punpckldq
add
and
add
xchg
mov
push
add
xor
add
pop
push
sbb
pop
lods
fcoml
inc
pop
pop
movsb
pop
cli
mov
inc
add
dec
iret
stc
leave
mov
mov
sbbl
xor
add
add
add
add
xchg
pop
in
arpl
add
push
out
push
mov
add
adc
add
xchg
dec
cmp
add
jnp
sub
mov
add
jge
js
push
pop
cld
mov
or
inc
pop
xchg
out
fwait
or
pop
iret
pop
pop
mov
add
pop
pop
jmp
add
fcomp
out
js
pop
push
add
sti
outsb
cltd
es
pusha
add
xlat
add
repz
dec
pop
pop
outsl
prefetch
or
mov
shll
add
dec
in
push
pop
mov
pop
test
dec
pop
fwait
rcrb
clc
nop
popa
add
jne
jmp
add
pop
negl
rcrl
ss
pop
test
add
jecxz
dec
add
add
add
stos
lods
add
add
add
es
sbb
push
add
addr16
es
and
add
mov
ss
add
pop
xchg
add
add
pop
xor
add
shl
mov
pop
outsl
lock
pop
inc
add
mov
dec
cs
pop
iret
inc
add
and
add
in
mov
jo
add
add
adc
add
add
add
shlb
add
push
mov
int3
or
movsb
pop
push
popf
or
add
jb
add
dec
xchg
xchg
pop
stos
or
mov
jno
add
jb
add
pop
sbbl
das
jl
inc
pop
mov
sbb
mov
repz
add
pop
dec
mov
xchg
lock
push
pop
jae
add
test
push
cmp
stos
cmp
xchg
out
push
adc
add
push
add
out
sub
fs
mov
add
lods
loop
sub
sbb
add
rorb
std
stos
pop
add
testl
add
outsl
and
add
pop
cmpsl
pop
popf
aam
pop
aaa
adc
scas
add
pop
mov
into
pop
ss
mov
xchg
push
add
out
mov
add
adc
add
pop
aam
lods
and
mov
pop
daa
pop
out
js
sbb
push
iret
dec
cmp
add
prefetchw
outsl
repnz
pop
repnz
cmp
gs
xchg
or
aaa
dec
xchg
xchg
cld
loope
out
fisttpll
pop
iret
sub
add
negl
cld
cs
add
and
add
or
add
add
mov
jmp
pop
and
add
add
lahf
movsb
pop
add
add
pop
test
pop
jmp
outsb
pusha
add
cmp
sahf
pop
mov
mov
pop
xchg
or
lods
ja
push
pop
adc
xchg
sbb
shrl
scas
repnz
add
test
sub
popa
add
add
adc
add
sbb
in
outsb
xor
add
pop
lcall
mov
pop
or
pop
mov
cmp
add
xchg
lret
add
add
in
shrl
jne
mov
jmp
lods
and
add
add
gs
sbb
add
adc
add
jecxz
lds
cld
mov
das
cmc
push
loop
out
pop
int
rcrl
add
shlb
dec
mov
push
inc
add
and
add
shlb
add
pop
pop
negl
mov
pop
xchg
sub
cmp
fildl
pop
movsb
pop
sub
add
bound
add
add
xchg
repnz
fdivr
fnstcw
add
add
hlt
pushf
lret
xchg
pop
jb
add
mov
pop
test
div
shlb
add
into
addr16
xlat
sub
movsb
pop
imul
outsl
std
push
aam
jb
add
add
add
add
sar
jle
shll
pop
pop
lds
add
sbbl
mov
pmulhw
cltd
inc
pop
jl
pop
mov
mov
inc
add
mov
add
add
ja
rcrl
xor
add
add
cmp
mov
sub
std
inc
add
sbbb
xlat
mov
lods
pop
mov
rep
rcrb
cmp
pop
adc
add
pop
pop
mov
xchg
ljmp
add
lahf
gs
daa
pop
fildll
lock
ja
inc
add
fisubrl
pop
adc
pop
lea
ret
pop
pop
pop
iret
outsl
jno
add
jp
pop
and
add
test
mov
sub
add
sbb
add
add
pop
filds
add
add
jbe
pop
xchg
or
aad
pop
xor
add
add
incb
push
add
xlat
lods
dec
sbb
pop
xchg
add
lahf
lret
pop
stos
push
add
push
pop
int
pusha
add
jnp
inc
pop
imul
pop
mov
icebp
leave
mov
loopne
xchg
dec
iret
sbbb
add
dec
pop
xchg
inc
pop
jg
push
add
lods
lods
int3
mov
jae
add
sbb
leave
cmp
add
mov
arpl
add
add
int3
pop
inc
pop
rclb
mov
testb
push
rcrl
clc
add
add
add
mov
mov
cmp
add
cwtl
sbb
loope
je
sbb
add
add
xchg
rol
pop
loope
insb
push
add
xchg
add
xor
add
xchg
fcompl
pop
imul
mov
in
mov
pop
sbbb
outsl
flds
pop
je
or
push
add
mov
add
mov
shr
jp
daa
pop
inc
pop
pushf
lds
jle
push
out
mov
jge
loope
mov
pop
enter
pop
mov
pop
mov
mov
pop
push
into
push
sbbb
aas
add
and
jae
add
ja
dec
add
add
pop
test
mov
shrb
add
cld
xlat
xchg
out
inc
add
inc
pop
les
push
outsb
jo
add
xchg
pop
negb
lcall
or
add
sti
out
pop
pop
jns
sbb
pop
rorl
pop
inc
add
fidivl
add
adc
add
pop
cld
call
mov
add
pop
push
add
inc
add
rcrb
pop
inc
pop
lret
dec
addr16
rcrb
add
add
outsb
xor
add
pop
pop
push
add
repz
mov
pop
or
mov
test
out
dec
lock
aad
or
cmpsb
pop
inc
pop
xor
add
inc
add
or
pop
xchg
dec
or
lahf
mov
aaa
bound
add
xchg
push
add
int
jo
add
add
inc
add
std
jl
mov
pop
jecxz
in
add
or
sub
ds
pop
arpl
add
add
into
sbb
pop
sbb
add
xchg
scas
out
xchg
repz
sahf
jns
in
popa
add
mov
add
movsb
pop
xor
add
pop
js
pop
lret
or
lods
jl
pop
jo
add
add
stc
pop
jnp
xchg
rorb
add
test
add
push
sbb
add
sahf
dec
mov
mov
xor
add
or
mov
pop
ja
pop
mov
add
scas
xor
pop
pop
rcrl
or
pop
gs
bndstx
mov
pop
fildll
ds
hlt
scas
pop
mov
popf
sbb
icebp
add
add
pop
stc
mov
pop
mov
pop
push
add
bound
add
cmp
add
pop
popf
push
push
mov
ljmp
xchg
outsb
in
sbb
pop
out
mov
fisubs
add
and
js
rcll
add
fcomp
mov
push
mov
jo
add
pop
xchg
sbb
pop
std
or
inc
add
decb
clc
mov
mov
push
mov
push
add
mov
pop
add
sbbl
int3
fs
pop
nop
sub
add
add
push
push
pop
bound
add
mov
add
add
pop
xor
add
pop
mov
cmp
pop
sbb
mov
sbb
pop
cmpsl
pop
loope
add
or
add
xchg
std
sbb
jns
ret
mov
add
sub
pop
shrl
lret
movsb
pop
sbbb
pop
popf
push
add
sbbl
pop
pop
xchg
jge
sbbb
pop
jo
add
add
dec
xchg
pop
loop
inc
pop
es
fsubrs
mov
imul
xor
add
pop
dec
add
pop
pop
push
imulb
outsl
inc
pop
cmp
add
add
jle
repz
repnz
add
add
add
dec
mov
xor
daa
pop
hlt
enter
scas
dec
or
inc
pop
or
add
outsl
dec
es
out
xor
add
fidivl
add
mov
sbb
add
pop
sbb
pop
sbb
arpl
add
and
add
and
add
pop
dec
pop
xchg
xchg
cmp
es
out
and
push
pop
aaa
test
xchg
mov
add
into
cld
out
hlt
or
pop
push
sub
or
and
shrd
gs
je
pop
inc
pop
test
inc
pop
bound
add
pop
jg
mov
inc
pop
jmp
pop
push
add
xchg
add
add
add
sbb
add
dec
fidivs
jecxz
lods
arpl
add
mov
and
add
nop
inc
add
cwtl
cmp
dec
outsl
xchg
in
mov
in
std
pop
and
es
out
push
dec
inc
add
mov
sarl
out
sbbb
pop
rorl
nop
insl
fwait
sbb
add
sub
adc
add
add
jns
jmp
test
sbb
add
jno
add
sbb
push
or
add
add
push
xor
add
mov
adc
add
add
pop
aad
add
and
imul
sahf
mov
pusha
add
pop
pop
mov
js
into
fwait
pop
jns
into
pusha
add
push
add
lds
stos
or
xchg
pop
das
cld
sub
push
xchg
mov
sbb
add
enter
sub
adc
add
pop
add
add
sbb
mov
inc
add
xchg
add
insl
shl
xor
add
add
sbbb
mov
add
add
push
shll
add
aad
leave
daa
pop
lret
out
mov
push
pop
bound
add
add
add
add
pop
outsb
mov
jo
add
push
sub
sub
lods
lods
cmp
add
pop
mov
adc
add
and
add
dec
push
add
loopne
popf
iret
out
lret
fwait
xchg
jno
add
xor
add
pop
inc
pop
jmp
add
sub
xchg
xor
add
ja
scas
lret
pop
out
mov
mov
pop
push
add
insb
aaa
push
xor
add
or
add
mov
pop
sbbb
pop
movsl
pop
jne
jne
inc
add
mov
in
hlt
xchg
outsb
aam
sub
iret
xor
add
pop
ret
add
sbb
pop
jg
xlat
lcall
sub
pop
jne
jmp
shll
add
pop
pop
ds
pop
pop
dec
or
dec
mov
add
and
add
insb
xor
add
cs
pop
test
inc
pop
ss
cmp
pop
ficomps
pop
sar
ljmp
adc
add
add
adc
add
add
mov
xchg
and
mov
inc
pop
sub
dec
mov
xor
add
and
add
pop
xchg
xchg
outsl
std
sahf
mov
popa
add
in
aas
push
pop
cld
jns
pop
aaa
seta
add
pop
jmp
cmp
add
lcall
and
add
sbb
add
mov
adc
pop
inc
pop
into
lods
shrb
pop
addr16
inc
pop
inc
pop
mov
iret
xchg
xor
add
dec
sbb
dec
sbbb
jmp
add
sbb
out
pushf
cmc
mov
sbb
sarb
mov
enter
inc
add
dec
fstps
pop
cmpsb
pop
pop
pop
aam
push
xchg
add
adc
hlt
mov
nop
sbb
push
mov
add
push
add
jg
pop
cltd
shll
pop
or
popf
daa
pop
or
lret
ljmp
pop
sub
pop
sbbb
jbe
and
add
ljmp
dec
fbstp
jno
add
fs
add
and
insb
mov
inc
pop
fsubs
sub
sahf
pop
fdivrl
xchg
mov
pop
push
pop
aaa
pop
cwtl
fsts
pop
imul
add
mov
add
jge
add
rorl
add
push
loopne
lods
sbb
out
sbbb
add
movsl
pop
adc
jo
add
xchg
or
pop
fmuls
fcoms
add
add
add
dec
arpl
add
orps
aad
nop
rcl
jmp
inc
add
lds
in
add
add
clc
push
stos
sbb
pop
mov
adc
add
xchg
pop
popf
xchg
les
shll
add
sbb
je
lods
bound
add
sub
mov
adc
add
jp
lahf
leave
test
pop
les
pop
adc
add
add
add
pop
outsl
and
xchg
in
mov
scas
jb
add
push
fucomp
movsb
pop
pop
cmc
fstp
fcmovbe
icebp
mov
pop
icebp
sbb
call
lcall
jo
add
add
imul
mov
sbb
lret
out
imul
add
jmp
mov
add
inc
pop
pop
pop
out
decl
add
cli
sbbl
sbbl
das
lea
mov
xlat
popa
add
mov
frstor
mov
mov
cld
lds
or
pop
sub
pop
fwait
mov
push
xor
scas
clc
int3
mov
pop
repnz
push
jo
add
pop
jno
add
push
fldl
add
xor
add
lcall
mov
loopne
or
mov
add
leave
out
out
sub
add
jne
pop
cmp
cmc
scas
call
cmp
pop
lds
xchg
lods
inc
pop
dec
mov
xchg
insl
pop
ficomps
add
add
jge
pop
cmpsl
pop
mov
test
pop
std
push
xor
add
mov
pop
and
pop
jmp
cs
into
adc
add
pop
xlat
imul
push
and
in
inc
pop
icebp
pop
pop
sub
inc
pop
push
mov
pop
rclb
jb
add
sbbb
in
es
lret
dec
lods
sub
pop
sub
pop
insl
lret
xchg
mov
mov
stc
ret
jae
add
jne
lods
adc
add
sbb
pop
std
pop
rcrl
outsb
cmpsb
pop
xor
add
add
sahf
lock
pop
lods
jne
pop
xchg
pop
sbbl
add
pop
or
xor
add
enter
xor
add
fsubs
add
cmp
pop
pop
loope
inc
pop
aaa
xchg
mov
push
add
nop
mov
pop
xor
add
loop
cli
iret
loopne,pn
sbb
call
add
and
add
add
addr16
adc
add
scas
leave
cmpsl
pop
push
or
inc
add
nop
pop
jl
ret
pop
and
add
test
dec
cwtl
les
movsb
pop
cmpsl
pop
js
adc
add
pusha
add
popa
add
icebp
cmp
add
add
imul
and
mov
loope
and
add
cmp
inc
pop
repnz
xor
add
add
sub
outsl
push
pop
js
call
jg
xchg
out
add
add
xchg
jg
mov
pop
add
add
cmp
mov
dec
or
pop
ljmp
add
push
add
pop
inc
pop
dec
xchg
add
mov
pop
gs
xchg
mov
pop
xchg
pop
and
inc
add
fwait
cmp
pop
out
out
sbb
cmc
pop
or
add
sub
outsl
fcoms
out
mov
pop
rcr
in
lods
and
and
add
jae
add
pop
fldl
pop
mov
mov
pop
push
pop
xlat
mov
cmp
jo
add
rcrl
lods
mov
mov
xor
add
mov
pop
push
pop
push
add
push
xchg
aad
test
ljmp
stos
cld
rclb
mov
jg
add
add
push
add
and
add
inc
add
fs
mov
mov
inc
add
mov
xchg
js
sub
pop
pusha
add
test
pop
or
adc
add
mov
mov
push
add
sub
ret
cmpsl
pop
ret
pop
in
adc
add
cmp
lret
aaa
pop
mov
pop
clc
xor
add
pop
sbbl
repz
add
add
fs
lea
jae
add
decl
mov
add
popa
add
and
add
mov
pmulhw
sbb
and
add
pop
imul
add
add
lcall
in
dec
and
in
xor
pop
mov
mov
das
iret
xor
add
adc
out
jo
add
push
adc
add
rcrb
add
add
add
lahf
inc
pop
outsb
jp
dec
dec
in
popf
ja
mov
jbe
cli
lea
pop
push
add
mov
add
inc
pop
jmp
ret
pop
enter
add
pop
int
pop
cmpsl
pop
dec
mov
dec
das
push
cld
sub
xchg
cmp
push
add
sub
int
das
sbbb
js
add
inc
pop
mov
lods
rcrb
add
sbb
pop
sbb
pop
pop
xor
pop
lods
cmp
push
mov
pop
lahf
insl
mov
dec
das
rcrb
mov
add
add
dec
xor
cmp
xor
add
js
add
add
add
lods
aam
pop
xor
add
pop
pop
ja
add
sub
add
xchg
aam
pop
mov
jmp
pop
jbe
adc
arpl
add
pop
sbb
es
dec
arpl
add
mov
dec
sbbb
pop
in
sub
aad
adc
xchg
in
sbb
pop
add
lods
movsl
pop
mov
aam
jge
bound
add
pop
es
adc
add
add
js
ret
pop
jae
add
adc
add
jp
loope
push
add
and
add
pop
sub
mov
push
loopne
jb
add
mov
popa
add
repz
add
lods
test
ljmp
sbbl
outsb
addr16
insl
pop
pop
xchg
pop
xor
add
push
cmp
add
out
pop
jg
lods
aad
pop
jb
add
out
mov
fidivs
cmpsl
pop
aam
int
into
je
add
clc
insb
dec
and
add
ss
pop
mov
sub
or
pop
push
pop
pop
lods
jae
add
movsl
pop
sbbl
pop
dec
mov
pop
aas
pop
dec
add
add
idivb
pop
and
loopne
imul
bound
add
mov
cmpsl
pop
mov
inc
pop
xchg
push
add
add
pop
movsl
pop
mov
jmp
pop
xor
add
xor
add
add
push
add
sahf
add
add
loope
pop
or
pop
cmpsl
pop
cmpsb
pop
clc
loope
xchg
mov
pop
jge
pop
lret
xchg
fwait
rcrb
add
add
int
add
lcall
add
inc
pop
jg
inc
add
cmpsb
pop
movsl
pop
jo
add
sbbb
add
add
repnz
hlt
push
add
and
xchg
sbbb
add
or
call
sub
xchg
loope
das
pop
js
dec
nop
or
filds
test
pop
fimull
push
pop
lea
add
nop
xchg
jns
daa
pop
movsb
pop
adc
add
mov
pop
xor
mov
stos
mov
push
pop
xchg
scas
xchg
jns
flds
jg
pop
loopne
inc
pop
jmp
popf
ljmp
std
imul
pop
std
push
pop
jg
pop
jne
idivl
js
push
ret
pop
pop
sbb
lret
stc
test
and
add
mov
into
jne
jbe
hlt
mov
pop
neg
aaa
mov
mov
pop
jb
add
test
inc
pop
inc
pop
xchg
out
bound
add
das
lcall
dec
repz
out
dec
arpl
add
add
or
pop
push
add
mov
pop
rorb
add
add
xchg
shrl
sbb
rcrl
pop
pop
sbb
scas
notl
add
lea
add
add
es
popf
repz
add
mov
push
add
nop
ljmp
pop
sti
imul
cld
std
sbb
mov
pop
adc
add
cli
xchg
inc
pop
push
cs
and
jb
add
adc
pop
insb
mov
mov
bnd
add
mov
mov
addr16
fistps
sub
inc
pop
sti
mov
cs
clc
movsl
pop
inc
add
push
add
sbb
inc
add
ljmp
xor
add
jo
add
add
pushf
sub
stos
call
rcrl
jmp
sub
add
call
mov
adc
mov
ret
mov
int3
jl
pusha
add
je
or
test
mov
xchg
aaa
dec
std
cmp
mov
xor
add
cs
add
int3
cwtl
mov
add
nop
cwtl
inc
pop
scas
add
add
es
loope
lcall
pop
stc
pop
dec
test
pop
sbb
jmp
fwait
jmp
pop
loope
es
dec
rcrb
pop
or
shll
push
add
pop
pop
push
dec
test
mov
pusha
add
xchg
push
fucom
pop
es
mov
push
add
mov
jne
inc
add
je
xchg
sub
add
lret
cld
push
add
mov
push
pop
push
ret
pop
int3
out
push
pop
decb
ror
sbb
sti
xchg
adc
add
aad
pop
push
aas
clc
shll
dec
repnz
add
pop
mov
stos
gs
sub
add
add
out
jmp
ffree
pop
push
lds
mov
add
in
xor
pop
mov
add
mov
pop
push
add
test
pop
sbbb
sbb
mov
xor
add
les
in
xor
add
pop
fsubrl
lds
pop
and
add
add
jge
sbb
add
divl
mov
sub
aas
mov
shll
pop
or
test
pop
mov
mov
sbbl
add
pop
xchg
push
lods
sar
xchg
lret
arpl
add
dec
xchg
loop
ss
add
loop
dec
mov
add
mov
mov
jl
sbbl
jecxz
sub
add
ds
das
dec
rep
sti
fidivl
xchg
loop
mov
pop
add
pop
es
enter
fildl
ret
pop
mov
mov
pop
push
out
dec
push
add
icebp
add
pop
stc
cmp
adc
add
push
pop
jecxz
jle
add
sub
pop
test
push
add
and
add
pop
pop
fildl
add
pop
fidivrs
xor
add
add
xor
jne
xchg
adc
add
lret
jp
add
daa
pop
leave
sub
add
aas
jg
pop
in
fistpl
push
mov
add
fwait
popf
cwtl
jl
pop
and
add
xor
pop
and
call
mov
outsb
mov
jnp
sahf
pop
pop
sbb
call
pushf
sbb
sbb
add
add
call
mov
add
pop
mov
shr
pusha
add
out
into
push
sub
loopne
fdivr
xlat
test
jae
add
pop
cmp
cmp
push
lret
cmc
movsb
pop
sub
xor
add
gs
mull
add
add
push
add
loop
adc
pop
lahf
ret
pop
loop
pusha
add
les
xchg
inc
pop
lock
pop
jo
add
dec
dec
jae
add
add
js
jmp
pop
mov
add
or
out
insb
mov
pop
aaa
add
add
pop
mov
inc
add
mov
add
cmp
pop
mov
add
mov
in
pop
in
inc
add
cmpsl
pop
xor
lock
fnstsw
outsl
aas
and
add
push
add
lea
or
pop
xchg
scas
clc
daa
pop
adc
pop
sbb
mov
add
inc
pop
pop
push
mov
mov
xor
pop
out
faddl
add
xor
pop
push
add
fisubl
dec
std
jge
add
mov
add
rcll
in
dec
sbbl
ficomps
add
jne
pop
scas
out
mov
pop
fcoml
in
scas
bswap
popf
addr16
cltd
jbe
adc
add
add
into
pushf
xchg
cmp
test
adc
add
mov
add
xchg
pop
adc
add
adc
add
jp
pop
insb
pusha
add
into
xchg
sbbl
repz
jns
pop
mov
imul
fcmovnb
pop
outsb
outsb
dec
jmp
pop
mov
jne
repnz
loope
es
cld
fwait
js
mov
mov
shr
pop
das
mov
sbb
add
out
add
xchg
pop
test
lret
mov
enter
adc
or
add
ficompl
pop
xchg
lds
sbb
add
add
in
arpl
add
and
add
add
pop
push
inc
pop
inc
add
cmpsl
pop
adc
add
jp
pop
aam
pop
sbbl
pop
mov
int
pop
xor
add
add
add
mov
pop
pop
aaa
xor
add
xchg
aas
jae
add
and
add
add
xchg
in
inc
add
testl
dec
or
pop
xor
outsl
push
scas
pop
out
sub
push
mov
rcrl
cs
adc
add
and
add
pop
jmp
in
in
pop
dec
push
add
xlat
adc
add
add
xchg
xchg
aam
pop
aas
pop
xor
add
mov
jb
add
pop
mov
test
xor
pop
push
add
jb
add
bound
add
adc
add
in
imull
xor
add
hlt
stos
out
add
add
add
inc
pop
pushf
xor
add
add
xchg
fcoml
add
lret
aaa
jg
pushf
clc
xor
dec
sub
sub
mov
add
xchg
outsb
push
add
sub
call
add
mov
push
jmp
xor
add
fistl
jno
add
cmp
out
aam
add
rcrl
sub
in
cmp
pop
outsl
xor
add
dec
out
adc
cld
push
add
xor
pop
push
add
fcmovb
pop
popa
add
pop
stc
xor
pop
popa
add
jo
add
aam
push
add
mov
push
lahf
int
mov
inc
add
inc
add
dec
jp
add
mov
pop
push
loope
inc
add
popf
notb
add
pop
int3
push
add
scas
dec
pop
pop
dec
cmc
nop
cmpsl
pop
mov
pop
push
add
mov
add
pop
mov
push
add
dec
and
add
or
add
jb
add
js
add
add
adc
add
push
add
out
call
lret
add
add
jl
pop
pcmpeqd
xchg
xor
add
jmp
pop
icebp
jle
das
inc
pop
pop
push
add
out
pop
mov
push
add
stos
mov
shr
js
and
add
mov
es
fsubrs
enter
cltd
stos
bound
add
mov
lret
dec
pop
inc
pop
jns
out
idiv
scas
popa
add
movsb
pop
sbb
pop
daa
pop
loope
xchg
jmp
outsl
fildl
dec
add
add
cmpsb
pop
mov
pop
inc
add
enter
iret
out
inc
pop
bound
add
mulb
add
fstl
add
js
push
pop
sbbl
add
xor
add
movsb
pop
mov
inc
add
mov
mov
pop
xor
pop
clc
sbb
scas
sbbl
insb
cwtl
dec
mov
add
add
lods
lea
add
les
testb
icebp
adc
add
xchg
fidivs
add
in
sbb
push
add
imul
mov
add
or
add
sub
pop
outsb
test
repnz
add
pop
mov
mov
sbb
out
outsb
mov
test
fiaddl
sbb
push
inc
pop
js
xor
add
pop
and
push
add
and
add
cli
sbb
dec
andps
loope
push
or
add
dec
xor
add
loop
pushf
dec
rcrl
pop
push
rcrl
add
add
add
outsb
ja
push
add
idiv
push
add
jb
add
sub
add
jne
cmp
popf
xchg
rcrl
add
scas
mov
adc
add
dec
adc
add
mov
pop
jmp
imul
or
adc
xlat
sbbl
pop
dec
dec
sbb
add
mov
xchg
jnp
pop
cmp
pop
fs
sub
jne
adc
add
add
in
leave
das
mov
add
sbbb
divb
setg
add
mov
inc
add
push
add
lahf
into
hlt
push
jb
add
sbb
jnp
or
add
mov
js
mov
pop
out
test
je
popa
add
sbbb
pop
out
sbb
add
mov
fbld
pop
jnp
add
pop
jp
xor
add
lods
xchg
xchg
ljmp
popf
in
fisubl
add
add
out
ss
mov
pop
popf
ljmp
push
add
add
add
xor
icebp
and
add
add
add
inc
pop
lcall
add
xchg
icebp
dec
sbbb
add
outsb
iret
xchg
xor
rcl
decl
xor
add
pop
xor
add
pop
push
pop
and
add
fs
int3
push
inc
pop
insb
mov
xchg
mov
add
outsl
int3
sbbl
xchg
pop
les
jns
mov
scas
sub
add
inc
pop
aas
aam
icebp
out
sub
push
lds
mov
pop
pusha
add
dec
out
push
int3
xchg
jmp
add
cmp
cld
cli
mov
adc
add
loop
sub
sub
add
adc
add
jo
add
dec
pop
je
in
inc
pop
jb
add
pop
xchg
and
push
push
sbbl
or
inc
add
sbb
pop
cmp
mov
add
inc
pop
stc
add
add
add
add
gs
cmp
add
call
pop
xor
add
ljmp
add
lds
into
outsl
dec
int3
jns
add
adc
add
and
add
or
mov
xchg
mov
sbbl
pop
xchg
fisttpll
lret
pop
call
pop
and
add
insb
sub
add
leave
scas
and
add
xor
add
stos
lds
sahf
aam
adc
add
in
pop
and
or
pop
in
icebp
or
pop
test
sbb
mov
add
mov
sub
jno
add
pop
xchg
jp
cli
jg
cmp
pop
lds
pop
cwtl
in
add
fsubl
ljmp
push
lahf
in
clc
or
add
push
leave
pop
pop
rclb
int3
xor
add
movsl
pop
dec
and
pop
sub
pop
xchg
mov
insl
push
je
add
mov
add
add
add
push
add
and
add
add
jnp
mov
and
add
add
call
add
jnp
fcmovne
mov
adc
add
mov
incl
test
movsl
pop
xor
pop
test
pop
fistps
add
push
add
sbbl
add
pop
insb
xchg
out
daa
pop
mov
add
arpl
add
ret
pop
out
mov
test
cld
mov
insl
dec
cmpsl
pop
jbe
pop
dec
jmp
pop
lds
pop
out
stc
addr16
mov
add
pop
out
jl
add
dec
ljmp
push
mov
out
lods
inc
pop
loopne
jb
add
fwait
push
sahf
pop
mov
pop
pop
push
or
pop
ret
pop
xchg
pop
sbbb
cmp
pop
mov
pop
cmp
add
add
fldcw
movsl
pop
sbb
mov
mov
sbb
jg
push
add
popf
jo
add
jp
ja
mov
push
add
jecxz
push
jb
add
xchg
popf
or
cmpsb
pop
pusha
add
pop
sub
pop
inc
pop
je
add
mov
cld
pop
stos
xchg
sub
pop
mov
scas
mov
pop
add
add
mov
pop
insl
insb
repnz
and
add
loop
loopne
fcomp
cld
inc
pop
dec
fldcw
pop
cmc
jnp
shl
pop
cmc
add
add
add
aaa
pop
repnz
and
add
xor
cltd
push
pop
dec
jb
add
imul
add
adc
add
jle
pop
lret
mov
scas
mov
pop
aad
or
sbbb
dec
push
fisttpl
pop
clc
pop
mov
inc
pop
and
xchg
add
push
aaa
test
pop
sbbb
pop
xchg
push
mov
adc
pop
dec
or
ljmp
mov
inc
add
push
pop
out
xchg
loope
jl
pop
fildl
add
add
add
add
mov
add
sti
rcrb
das
inc
add
xor
add
lock
sub
sub
mov
imul
lods
xchg
aaa
out
push
lcall
add
add
jge
icebp
xchg
mov
mov
push
add
inc
pop
push
add
ja
enter
pop
jbe
fiadds
pop
adc
add
xchg
mov
pop
push
adc
add
int
sbb
pop
je
sbb
ja
pop
cvtdq2ps
pop
pop
shlb
add
gs
ljmp
lods
sbbl
push
add
mov
mov
add
or
add
jle
das
sbbl
add
test
lcall
fldcw
adc
add
add
or
pusha
add
pop
and
add
std
pop
pushf
fbstp
add
iret
push
xchg
jo
add
mov
jecxz
arpl
add
xor
add
stos
lds
mov
add
mov
xor
add
pop
hlt
pop
int3
or
add
sbbl
out
nop
jmp
xor
cwtl
das
loopne
push
add
add
and
add
pop
aad
pop
ret
pop
xchg
js
mov
pop
rcrb
sbbl
inc
pop
cld
sub
shlb
pop
jmp
add
mov
pop
cmp
lea
pop
popf
push
add
sub
jl
bound
add
add
call
add
inc
add
stc
jne
lcall
pop
xor
test
divb
add
pop
inc
pop
cmpsl
pop
and
cmp
pop
sub
add
pop
or
pop
test
pop
push
adc
add
sub
add
scas
sbbb
mov
sbb
test
pop
addr16
les
sbb
pop
sub
dec
fcmovu
pop
pop
rcrb
push
push
sbbb
and
add
loop
insl
es
pop
insl
loop
in
push
add
pop
and
add
add
aad
add
stos
xchg
cld
pop
xor
add
mov
out
inc
pop
cltd
mov
add
aas
lds
pop
in
fwait
mov
aam
imul
mov
add
mov
or
add
fisttps
sub
pop
daa
pop
stc
sbb
xlat
adc
pop
sbbb
in
fwait
jbe
sub
repz
fildll
movsl
pop
adc
add
pop
pop
push
add
pushf
xor
push
sbbb
add
cwtl
cmpsl
pop
and
add
inc
add
jl
pop
imul
add
add
pop
cmovne
shr
out
jle
ret
pop
push
adc
cwtl
mov
push
add
push
pop
aad
pop
xchg
js
mov
pop
or
pop
push
add
jbe
das
aaa
js
pop
jb
add
sbb
pop
dec
dec
dec
je
or
mov
xor
add
cwtl
dec
cli
mov
mul
pop
out
sub
daa
pop
imul
lcall
loop
repz
add
and
add
fisubs
add
sbb
pop
jbe
mov
add
cmc
sub
neg
ja
jnp
xchg
dec
fs
adc
add
add
packssdw
pop
sbb
add
add
add
add
stc
mov
add
mov
add
mov
rcrb
add
iret
xchg
gs
in
dec
inc
pop
repnz
add
mov
ja
add
rcr
les
pop
mov
pop
sbb
pop
xchg
call
inc
pop
in
clc
push
jge
pop
or
push
add
insb
sub
and
and
pop
sbb
jle
sub
and
add
scas
rcrl
leave
cmpsb
pop
les
mov
je
out
iret
iret
out
sbb
pop
movsb
pop
pop
pop
popa
add
xchg
add
adc
add
push
add
dec
xchg
cwtl
loopne
outsl
fildl
mov
add
outsb
mov
add
mov
pop
mov
sub
push
add
adc
xor
ljmp
pop
gs
pop
adc
add
pop
cmpsl
pop
rcr
out
test
add
add
mov
jns
pop
or
shrb
iret
cmp
frstor
dec
jne
sbb
lret
fidivrs
jae
add
shll
add
mov
cmpsb
pop
mov
sti
pop
mov
pop
nop
rcrl
bound
add
add
or
es
push
add
insl
jle
stc
icebp
call
dec
stos
or
les
je
xchg
test
test
test
and
add
push
pop
pushf
bound
add
xchg
pop
xchg
repnz
add
les
dec
and
dec
push
xor
pop
mov
mov
mov
xor
jns
pushf
jmp
add
pop
test
add
cmp
lods
xchg
xchg
popa
add
cmp
add
movsl
pop
pop
cltd
arpl
add
add
cli
jl
pop
stos
cmp
add
add
cmp
lds
pop
cmc
cmp
xchg
aam
fstl
inc
pop
sbb
les
pop
pop
xor
add
test
add
inc
pop
jg
add
lock
add
jge
pop
das
sbb
and
add
pop
loopne
cmp
add
mov
scas
or
pop
mov
sub
dec
add
add
pop
rorb
add
flds
add
cld
and
add
add
add
stos
dec
pop
sbb
add
jle
pop
cmpsl
pop
icebp
sbbl
mov
or
sbbb
pop
out
pop
push
pop
test
pop
outsl
scas
mov
pop
popf
mov
rolb
add
mov
pop
pop
clc
sarb
ljmp
add
adc
add
add
add
xchg
in
inc
pop
popf
xor
add
stos
fnsave
mov
jg
je
pop
add
add
jp
pop
xchg
and
add
pop
nop
insl
test
dec
and
add
cmpsl
pop
pop
xchg
add
jno
add
sbb
pop
cs
xchg
sahf
movsl
pop
lods
addr16
xor
add
push
add
push
add
mov
mov
cmp
pop
mov
into
push
mov
add
pop
dec
idivb
sub
sub
mov
add
clc
inc
pop
xchg
sub
lds
add
push
lahf
inc
pop
scas
aad
jo
add
cmp
ljmp
pop
xor
add
lahf
xor
add
lods
adc
add
mov
jmp
sbb
loope
rclb
das
or
mov
xlat
ss
inc
add
repz
add
dec
xor
add
or
pop
mull
and
bound
add
arpl
add
mov
add
lcall
insb
push
add
aaa
out
inc
pop
push
add
lock
add
jg
push
pop
add
cmpsb
pop
das
lods
stos
arpl
add
add
pop
adc
in
stos
inc
pop
icebp
test
fistpl
xchg
sbb
in
push
pop
push
roll
jno
add
sbb
pop
in
inc
add
push
add
cmpsb
pop
jb
add
aad
xchg
lock
sbb
pop
inc
pop
mov
mov
pop
pop
popa
add
inc
add
cmp
sub
xchg
lcall
dec
repz
push
aad
lods
fisubrl
pop
sbb
dec
mov
sub
pop
push
pop
push
rcrb
pop
pop
cs
sbb
push
add
call
push
cwtl
adc
add
cmpsl
pop
cmp
jmp
adc
aas
into
and
add
cmp
pop
pop
aam
push
add
jge
add
add
xor
add
add
je
ret
mov
add
add
sub
gs
stos
dec
push
add
adc
add
xor
add
mov
cli
cli
sbb
add
xor
add
std
cmp
lea
xor
and
lock
aaa
dec
adc
pop
and
add
pop
mov
mov
icebp
insl
sahf
fs
cmp
pop
call
in
test
pop
cld
pop
pop
mov
mov
xchg
fs
lret
mov
lret
pop
pop
adc
add
add
mov
add
mov
pop
sbbl
sbb
es
fsts
add
pop
sbb
out
fnstsw
hlt
mov
add
pop
mov
or
sbbl
lahf
and
add
cltd
test
mov
pop
and
add
sub
and
add
sbb
pop
iret
jnp
add
jo
add
sahf
pop
sbbb
inc
add
inc
add
mov
pop
sub
cli
sub
mov
pop
iret
push
add
xchg
inc
add
scas
arpl
add
pop
je
movsb
pop
fwait
add
add
inc
add
loopne
arpl
add
pop
cld
fidivrl
in
add
add
das
cmp
push
pop
mov
lods
icebp
add
add
pop
in
adc
bound
add
add
add
mov
pop
push
addr16
pushf
add
add
adc
add
add
mov
in
sbbl
clc
sub
rcrl
out
cli
cmp
pop
or
add
fwait
aas
outsb
mov
cmp
movsb
pop
iret
sub
je
sbb
decb
add
add
lret
jmp
add
add
add
pop
mov
leave
lods
bound
add
xchg
add
mov
xchg
adc
loopne
push
cli
jmp
pop
rcrb
adc
mov
mov
aam
arpl
add
outsb
cmp
inc
add
loopne
and
add
sbb
pop
enter
pop
adc
add
pop
inc
pop
jecxz
testb
pop
movsb
pop
pushf
mov
add
dec
je
push
cmp
mov
add
repnz
add
mov
mov
sub
add
add
rcrb
int3
pop
cli
fwait
or
sahf
sub
pop
adc
add
daa
pop
mov
pop
xchg
rorl
pop
mov
cmp
dec
mov
out
and
or
dec
dec
int
pop
scas
lahf
push
jmp
pop
xchg
jbe
pop
jl
add
mov
add
loop,pt
iret
bound
add
and
add
add
add
add
push
add
lods
cli
jno
add
lock
or
inc
pop
mov
lods
inc
pop
jmp
sub
imul
pop
notl
add
lea
add
pop
movsl
pop
push
cmpsb
pop
pop
daa
pop
mov
pop
or
add
xchg
fwait
pop
pop
jno
add
add
aam
add
jecxz
jnp
pop
xor
add
add
dec
and
add
sbb
pop
push
add
call
pop
push
add
inc
add
push
ja
add
ss
daa
pop
jb
add
enter
pop
lcall
mov
add
call
add
inc
pop
mov
inc
add
xor
add
lds
pop
dec
pop
ret
pop
push
add
adc
add
add
sbbb
xor
add
les
add
pop
pop
push
pop
mov
adc
add
add
and
inc
pop
fisttpll
inc
pop
add
pop
arpl
add
or
push
sbbl
adc
add
lcall
mov
add
pop
inc
pop
mov
jge
xchg
and
add
mov
adc
add
ret
adc
add
pop
popf
push
pop
fdivl
sbb
movsl
pop
loop
lods
cwtl
cmp
sbbl
pop
sub
rcrl
xchg
cmp
stc
adc
add
xchg
negb
or
inc
pop
mov
pop
mov
dec
or
push
add
jne
cmp
pop
push
push
cltd
mov
xchg
cmp
pop
mov
pop
insb
imul
les
inc
pop
ss
jbe
cltd
mov
add
add
jp
add
clc
lcall
add
pop
repnz
adc
add
lock
hlt
cmp
add
cmp
push
dec
stos
dec
or
xchg
sbb
add
pusha
add
out
icebp
int
add
adc
add
sbb
mov
mov
mov
pop
xchg
add
cmp
mov
les
push
add
add
add
pop
pop
cmp
pop
ds
aam
cmp
or
pop
jb
add
mov
jg
add
aaa
dec
dec
mov
hlt
pusha
add
fcomip
aaa
cmc
and
add
dec
mov
pop
fadds
add
add
sti
ret
pop
cld
jle
add
xor
add
sub
shlb
icebp
inc
add
sbb
pop
sarb
jg
aas
movsb
pop
stc
fisubs
mov
in
or
xchg
sbb
pop
insb
sar
arpl
add
movsl
pop
mov
clc
js
cmpsl
pop
mov
shr
xchg
mov
pop
xchg
call
pop
jmp
outsb
pop
xchg
add
add
pop
test
sahf
sbbl
test
rcrb
xchg
aam
cmp
dec
inc
pop
cmp
shll
gs
mov
add
mov
add
es
inc
pop
jmp
add
pop
ret
pop
pop
out
xchg
add
add
add
pop
int3
enter
cmp
dec
fiadds
add
pop
inc
pop
cs
xchg
ds
fs
cltd
sbb
push
add
arpl
add
add
pop
mov
pop
inc
pop
inc
add
mov
out
int
inc
add
push
add
dec
jle
or
pop
jnp
enter
ret
pop
dec
cmp
add
pop
bnd
add
sahf
xchg
cmp
sub
imul
pop
aam
pop
or
pop
or
pop
fld
pop
ljmp
add
add
or
in
lcall
or
pop
pop
inc
pop
ja
push
pop
stos
pop
sub
pop
fildl
pop
test
push
rorl
pop
ficomps
cmc
and
cmpsl
pop
sub
pop
fisubrl
loop
mov
add
xchg
test
sbb
push
mov
mov
xchg
mov
dec
cmpsl
pop
mov
sbbb
xchg
and
mov
xchg
xchg
clc
xchg
fwait
or
aad
pop
pop
mov
pop
rclb
pop
jle
pop
mov
pop
mov
dec
mov
add
stc
mov
pop
and
ret
pop
push
add
outsb
repnz
loop
xchg
jmp
decb
and
add
add
insb
faddl
add
out
in
lock
pop
inc
pop
mov
pop
in
aam
pop
shrb
add
mov
shll
aad
jne
push
add
in
cmp
pop
test
add
add
fnsave
addr16
mov
push
pop
push
add
iret
xor
add
cmp
pop
and
add
pop
dec
mov
xor
add
and
add
or
pop
adc
add
lahf
xor
add
pop
sub
aaa
dec
pop
insb
mov
adc
add
mov
add
add
es
sub
and
or
pop
sbb
dec
int
popf
sbbl
xchg
imul
pop
fcoml
rolb
pop
sub
and
add
dec
hlt
pop
nop
pop
int
pop
cli
or
dec
jl
and
add
mov
adc
add
rcrl
add
ds
hlt
test
lahf
fmuls
add
pop
and
add
fidivrl
sbb
aaa
sub
add
lea
pop
pop
pop
aaa
aad
mov
pusha
add
sbb
stos
cmp
movsl
pop
rolb
xor
add
jp
push
add
adc
add
add
and
add
movsb
pop
pop
or
pop
in
sarb
pop
adc
add
pop
lods
sub
pop
sub
aaa
mov
add
fldl
cmp
gs
insb
pop
pusha
add
je
add
incb
ljmp
pushf
int3
xor
add
pop
and
add
jmp
add
loope
outsb
insb
cltd
push
test
pop
or
clc
sbb
pop
mov
add
fldpi
add
add
cmp
push
add
imull
xor
add
jecxz
popf
cmp
add
xor
add
pop
mov
or
add
jns
pop
flds
pop
mov
adc
add
xor
add
xchg
pop
rcll
fs
mov
pop
sbb
or
in
aas
jo
add
incl
pop
sbb
pop
push
xchg
mov
cmpsb
pop
ret
mov
pop
dec
loop
dec
into
bound
add
add
adc
add
add
and
add
dec
aaa
lret
xchg
jo
add
outsl
jb
add
add
add
shl
sbb
iret
fwait
add
add
sbbb
add
cli
pusha
add
outsl
xchg
jno
add
add
and
add
add
pop
adc
add
cmpsb
pop
ja
pop
test
ds
shlb
add
sbbl
jmp
add
into
push
add
add
add
cs
jnp
inc
pop
sub
gs
shlb
or
add
pop
push
lahf
inc
add
stos
sbb
mov
mov
add
pop
pop
nop
sub
xor
jmp
add
mov
es
or
add
xor
add
add
mov
arpl
add
mov
push
pop
push
push
add
imul
or
add
add
add
and
add
pop
insb
add
adc
mov
pop
dec
into
into
mov
xor
add
push
add
shrb
push
int
pop
or
ja
std
mov
hlt
jno
add
add
and
add
scas
mov
in
movsl
pop
fs
out
fildll
add
xor
add
cmp
sbb
pop
push
pop
and
fisubs
sbb
sahf
or
pop
inc
add
int3
pop
loopne
in
mov
fcoml
adc
add
push
push
add
test
hlt
and
cmp
insl
push
ss
sub
dec
mov
dec
mov
pop
cmpsb
pop
and
sbb
dec
js
add
lret
pop
inc
pop
xchg
cwtl
pushf
fsubl
add
pop
pop
or
add
add
add
xchg
fsubl
outsb
jecxz
sahf
adc
add
iret
jmp
loope
mov
add
lcall
pop
insl
fidivl
xlat
dec
push
add
insb
inc
add
scas
fsubp
pop
sbbb
push
add
cmp
sti
jmp
pushf
rcrl
or
pop
in
fisubrl
jne
adc
dec
mov
pop
clc
clc
pop
sbb
pop
std
pop
sub
mov
in
cmp
add
mov
incb
int3
xchg
xchg
test
ret
sbbl
outsb
enter
add
pop
lahf
mov
pop
sbbl
sbb
bound
add
rorb
lds
pop
xlat
mov
les
lock
in
jns
cltd
lret
push
add
inc
pop
and
add
mov
pop
cmpsb
pop
outsl
rcrl
jo
add
scas
leave
int3
sbbb
and
add
jb
add
and
add
cmp
ljmp
pop
mov
mov
sti
and
add
add
int
hlt
mov
pop
les
cmp
pop
jle
pop
pop
nop
pop
mov
push
add
outsl
mov
pop
rcrl
pop
stos
lea
add
pop
daa
pop
xor
add
sbbb
sub
pop
popa
add
repnz
or
sbbb
out
cmp
jg
or
in
mov
movsb
pop
lods
mov
add
sbbl
add
notb
add
cltd
in
inc
pop
imul
add
insl
mov
ljmp
mov
pop
icebp
mov
imul
scas
sbb
or
add
mov
jae
add
pop
adc
add
scas
ret
pop
fcomp
jno
add
add
pop
daa
pop
cmp
div
jmp
pop
dec
adc
add
rorb
dec
ja
cmpsb
pop
sbb
dec
pop
push
jne
pop
fstl
mov
lds
add
add
ret
pop
jge
mov
xor
add
pop
fwait
pop
inc
add
or
add
pop
pop
pop
aad
iret
and
out
rcrb
pop
add
add
mov
jge
mov
add
mov
cmpsb
pop
jbe
pop
ja
pop
xchg
pop
cmp
bound
add
mov
pop
xchg
test
xchg
out
pop
push
xchg
sbb
cld
pop
mov
xchg
cmp
jno
add
pop
adc
add
and
add
xor
add
pop
mov
cmc
xchg
pop
jne
jno
add
add
leave
pop
cmp
or
pop
xchg
pop
sub
add
pop
hlt
dec
inc
add
pop
mov
add
lret
enter
js
jle
pop
cmpsb
pop
cmp
insb
mov
add
out
popa
add
insl
cmp
mov
sub
mov
popa
add
mov
push
push
pop
in
xchg
pop
push
add
bound
add
movsl
pop
negb
pop
sbb
fists
fucomip
repz
aas
xor
add
sbbl
adc
pop
cmp
lods
lds
es
loope
pop
xor
add
pop
jb
add
ja
pop
xor
add
add
pop
cmc
inc
pop
mov
psubusb
add
pop
cs
js
inc
add
out
mov
dec
xchg
mov
add
add
add
add
dec
sub
mov
mov
sbbb
jne
pop
dec
movsb
pop
pop
xor
pop
popf
fisttps
add
pop
in
pushf
es
lret
in
lods
in
jecxz
inc
pop
cli
arpl
add
pop
jl
loopne
jne
add
mov
mov
push
aad
add
lcall
pop
clc
cltd
add
add
mov
mov
add
int
cmp
pop
jg
js
pop
or
pop
sub
pop
pop
stc
pusha
add
push
pop
les
scas
sarb
test
adc
loopne
push
test
iret
into
jne
xchg
xchg
push
pop
js
pop
bound
add
mov
pop
xor
add
dec
into
pop
stos
out
push
dec
inc
pop
imul
ss
dec
pop
dec
cmpsl
pop
rcrb
pusha
add
jo
add
add
pop
icebp
sub
add
xor
add
sbb
add
pop
or
mov
add
mov
add
mov
pop
ja
pop
nop
push
and
shr
jecxz
mov
pop
lcall
xchg
pop
push
add
psllw
ret
lock
add
jne
jbe
pop
addr16
sbbl
add
add
insb
push
xchg
dec
daa
pop
cmp
add
lods
cwtl
mov
rcrb
lock
push
add
mov
dec
pop
js
and
add
xor
add
outsl
fists
adc
mov
adc
add
push
insl
xchg
xor
add
add
push
add
dec
fdivl
add
mov
pusha
add
cmc
jno
add
pop
hlt
loope
fcomi
mov
cmpsb
pop
or
jae
add
adc
add
add
outsb
sub
pop
repnz
es
call
pop
dec
mov
sub
fisttpl
mov
push
stos
push
les
pop
outsl
out
mov
xchg
add
clc
push
insl
sbbl
insl
cmp
pop
pop
adc
add
aaa
rcrl
add
mov
pop
repz
movsl
pop
pop
iret
pop
lds
bound
add
fcmovnb
pop
ss
and
cltd
xchg
faddl
pop
imul
xchg
sar
add
add
pop
stc
xchg
pusha
add
pop
scas
mov
add
fwait
push
pop
pop
mov
pop
lock
push
jne,pn
dec
popa
add
ss
mov
rcrl
mov
add
jbe
mov
and
movsb
pop
and
fisubl
add
inc
add
rorb
sub
pushf
fcomps
and
out
adc
pop
dec
sbb
add
add
pop
bound
add
add
test
add
in
dec
sbb
pop
sbbl
pop
or
inc
pop
lock
fstpt
cmpsb
pop
inc
pop
nop
mov
mulb
add
fstps
pop
jb
add
jb
add
add
add
js
out
mov
fs
pop
jg
in
pop
dec
fsubrs
in
and
add
fwait
pop
pop
pop
or
jb
add
out
and
cmc
in
mov
add
add
pop
lds
xchg
icebp
jbe
sbbb
js
pop
loop
xchg
inc
pop
mov
cmpsl
pop
out
dec
idivb
je
adc
add
out
ja
pop
cs
push
add
imul
testl
pop
shll
add
ret
bound
add
pop
jl
jae
add
add
add
jl
movsb
pop
lret
sub
test
sbb
and
add
scas
mov
push
sbbb
fwait
mov
pop
push
jle
lock
jecxz
push
insb
leave
dec
jle
pop
adc
add
inc
pop
push
sbb
cmp
iret
test
test
pop
in
sub
pop
jo
add
ljmp
xor
pop
cltd
xchg
lds
adc
add
pop
cmp
lret
mov
pop
jb
add
dec
and
add
add
adc
rcrl
cmp
add
add
add
add
push
decl
add
sahf
sub
pop
int3
hlt
xor
add
fistpl
out
sbb
pop
jae
add
cmp
cmp
cmp
adc
add
pop
aad
xor
xchg
pop
sub
pop
pop
pop
fstps
push
cwtl
xchg
sbb
mov
cmp
jle
dec
mov
pop
cltd
dec
adc
adc
add
int3
ret
pop
ret
cmp
add
inc
add
movsl
pop
fucomp
and
gs
cli
adc
add
icebp
in
jge
pop
inc
add
push
notl
add
xchg
pop
rcrb
aam
dec
arpl
add
mov
mov
xor
add
movsb
pop
cs
pop
dec
test
mov
aas
cmp
gs
dec
cmpsl
pop
in
sbb
mov
pushf
xchg
cmc
push
pop
add
add
push
ficoml
xchg
pop
imul
jb
add
scas
pop
xor
add
jge
add
fcom
mov
repnz
mov
dec
mov
les
add
dec
mov
cli
test
faddp
pop
sbb
pop
jg
pop
pop
pop
repz
daa
pop
outsb
stc
pop
loopne
pop
ljmp
mov
fnstcw
fdivr
adc
ljmp
jmp
mov
fnstsw
mov
fisttpll
pop
xlat
jle
dec
push
add
loopne
sbb
add
sub
push
sbbl
pop
cmpxchg
in
int
add
add
pop
stc
push
ljmp
fwait
cmp
add
neg
lods
or
add
push
add
mov
add
jg
scas
xor
add
sbbl
xor
rcrl
pop
jnp
inc
pop
jbe
aam
sbb
xor
add
movsl
pop
push
add
mov
dec
pop
pop
std
movsb
pop
aas
mov
add
xor
add
add
xor
add
add
add
add
inc
pop
add
add
add
dec
mov
add
pop
lret
or
add
add
out
jge
int3
cltd
mov
je
imul
pop
fsub
pop
cmpsb
pop
inc
pop
jp
cmp
mov
and
add
fnstenv
add
cmp
or
pop
jle
add
stos
jbe
add
aaa
pusha
add
fidivrl
push
scas
sub
fisubs
cmc
jl
sbb
jae
add
add
jo
add
mov
jbe
add
push
mov
jb
add
add
sub
sbb
std
inc
add
cmp
lret
inc
pop
pop
je
mov
pop
aaa
cmc
out
cmpsb
pop
lock
pop
push
add
lcall
pop
mov
xchg
mov
cmp
or
scas
mov
add
insb
and
add
pop
or
and
dec
dec
imul
add
push
add
add
pop
inc
pop
movsb
pop
in
lods
or
jns
cmp
add
jmp
add
pop
cmp
insl
jo
add
sub
mov
jl
inc
add
push
sahf
in
es
ret
sub
inc
pop
lods
lea
loope
inc
add
loopne
jns
cmp
xchg
repnz
fs
or
jbe
adc
ret
clc
sahf
es
shlb
add
rcrl
add
push
xor
mov
pop
scas
dec
je
pop
and
add
add
mov
ret
pop
sub
inc
add
cmp
mov
aad
jb
add
add
outsb
jne
add
stos
add
add
fiaddl
add
lods
xchg
mov
cmp
add
dec
xchg
mov
mov
cli
cltd
fnstenv
add
inc
pop
fisttpl
add
mov
or
icebp
ljmp
pop
jp
add
pop
ffreep
pop
dec
rcrb
push
add
lods
pop
test
add
hlt
fcom
xor
mov
add
cmp
addr16
mov
or
js
add
xor
add
add
xchg
inc
pop
or
dec
add
add
mov
add
out
or
xor
add
sbb
add
add
pop
mov
shll
mov
sbbl
popa
add
or
adc
add
in
aam
pop
push
outsb
mov
add
cs
cltd
sbbl
add
stos
ret
pop
sub
insb
aad
push
cmp
in
fsubr
inc
pop
negl
lods
xchg
sub
add
pop
bound
add
add
and
add
pop
rcrl
pop
push
rolb
push
in
popa
add
push
out
xchg
movsb
pop
and
add
and
add
pop
inc
pop
xlat
je
aaa
mov
or
loopne
popf
sub
add
hlt
adc
add
jp
add
jbe
inc
add
aas
sub
cld
loop
pop
ds
pop
iret
add
add
imul
add
dec
mov
add
inc
add
or
add
je
insl
bound
add
int3
pop
pop
out
aas
imul
xchg
out
sbbl
sub
dec
and
add
mov
add
add
inc
pop
xchg
push
add
std
mov
adc
bound
add
add
or
add
xchg
add
lds
js
cs
add
insl
insb
sahf
pop
outsb
into
mov
daa
pop
cmp
ss
add
add
add
pop
mov
add
cltd
aad
xchg
fldl2e
fnstenv
add
push
inc
add
rolb
pop
mov
addr16
add
add
sbbl
add
icebp
es
or
add
das
outsb
xor
add
dec
daa
pop
mov
and
add
lret
lods
nop
loopne
stos
stc
arpl
add
add
les
pop
fisttps
out
pop
pop
fstpt
test
pop
add
add
sbb
sarb
pop
sub
test
pop
or
sbb
push
add
mov
mov
add
add
lock
sti
pop
jl
mov
add
int
mov
dec
fldcw
lret
cmp
pop
sbb
adc
add
add
inc
add
out
xchg
sbb
pop
dec
pop
cltd
dec
add
add
sbbb
lcall
sbb
popa
add
sbbb
add
outsl
cmpsb
pop
jp
xor
add
inc
pop
mov
pop
pop
cmpsl
pop
xchg
pop
mov
shlb
scas
mov
mov
negb
sahf
cmp
adc
add
push
cmp
or
jo
add
add
out
xchg
imulb
cwtl
loop
mov
lock
nop
les
add
add
add
jl
mov
std
fidivs
add
lock
pop
jecxz
cmp
jnp
lock
add
cmp
or
and
add
rcrb
rcll
pop
jmp
pop
sbbb
add
add
add
xchg
mov
add
push
divb
pop
sahf
xor
add
xchg
mov
dec
mov
add
insl
insb
aaa
decb
jb
add
mov
fs
mov
xor
add
add
divl
add
and
jb
add
imul
rcr
test
stos
insb
or
lock
fwait
cli
sbb
xor
sub
ss
dec
push
add
stos
aam
cli
xor
add
out
enter
pop
push
xchg
iret
nop
xchg
xlat
jb,pt
add
pop
dec
stos
lods
repz
push
add
clc
sbbb
add
push
add
inc
pop
mov
mov
add
add
add
adc
add
xor
add
pop
xchg
bound
add
in
or
lahf
xchg
xor
add
jg
scas
pop
or
rcrl
mov
add
outsb
rcrl
fs
lret
cmpsl
pop
ret
imul
mov
sub
mov
mov
xchg
xchg
push
jmp
add
jb
add
repnz
pop
mov
sbb
add
add
push
pop
push
hlt
cli
aad
addr16
cmp
pop
adc
add
mov
add
and
add
pop
add
add
mov
push
rorl
cli
xchg
scas
fbld
testb
add
add
movsl
pop
cmp
adc
add
sub
daa
pop
bound
add
add
ja
cs
push
sbb
test
push
add
push
mov
add
add
jno
add
add
movsb
pop
ds
stc
cmp
jns
add
sbb
add
out
cli
push
or
pop
lock
in
clc
sub
pop
in
jns
add
xor
add
add
dec
les
add
fistpll
mov
pop
mov
xlat
ret
add
xchg
push
push
push
pop
jne
popf
bound
add
mov
sbbb
pop
push
aaa
xor
insl
rcrl
pop
cmp
and
add
cltd
mov
pop
sbbl
js
pop
jl
mov
pop
xchg
stos
mov
add
aas
mov
pop
jb
add
pop
adc
add
push
add
jp
fistpl
add
or
push
add
inc
pop
or
jg
pop
stos
mov
daa
pop
aaa
adc
add
push
ljmp
cmp
pop
fst
mov
add
mov
push
sbb
sbbb
icebp
popf
ret
sahf
sub
pusha
add
sub
mov
mov
js
pop
cmpsb
pop
mov
add
xor
add
add
rcrl
mov
pop
push
dec
xlat
push
add
and
add
pop
imul
scas
mov
xchg
mov
lods
jbe
fidivrs
dec
xor
addr16
repz
pop
stos
adc
add
rcrl
pop
loopne
push
mov
test
xor
add
aad
cmp
rcr
push
cmp
into
mov
add
pop
fnstsw
pop
and
add
add
pop
push
addr16
pop
imul
pop
xchg
pop
ss
das
xchg
scas
into
stos
nop
lods
test
xchg
lds
and
add
pop
pop
mov
sbb
inc
pop
out
shrb
add
imul
sbb
add
add
add
add
mov
cmp
mov
bound
add
xor
add
ret
lock
add
jmp
lds
inc
add
or
pop
imul
xchg
push
stos
loop
push
pushf
cmp
stc
xchg
icebp
jg
pop
xor
inc
pop
xchg
add
add
sbb
repz
or
pop
jbe
sub
mov
js
push
add
stos
out
popa
add
xchg
movsl
pop
pop
xchg
inc
pop
and
inc
add
in
scas
add
add
sbb
flds
add
add
hlt
push
sub
xchg
add
add
mov
pop
std
push
or
pop
sub
inc
pop
sbbl
fimuls
cmc
fcmovb
pop
pop
divl
add
pop
pop
xlat
mov
add
pop
or
hlt
or
mov
imul
sbb
sbbb
jg
cli
lahf
jne
add
lea
push
cli
push
adc
insb
or
mov
jnp
cmpsl
pop
xchg
lods
mov
lret
out
out
sbbl
insl
mov
mov
imul
mov
add
add
in
lahf
inc
add
sbb
shr
lock
cmp
jge
add
sgdtl
add
sbb
lret
aad
add
jl
rcrb
add
call
xchg
sub
lds
sbb
fisubrl
cld
xor
add
mov
add
push
add
add
or
popf
fstps
pop
insl
adc
ja
pop
out
ret
cmpsl
pop
push
add
xchg
jecxz
into
iret
adc
add
aas
jns
jl
add
mov
pop
add
add
sbb
in
out
test
add
mov
push
pop
pop
cld
push
xor
sub
pop
inc
add
fldenv
xor
add
add
adc
add
pop
dec
std
xchg
sub
cmp
pop
cmc
cmp
add
aam
mov
push
add
add
add
add
or
push
pop
test
loopne
or
bound
add
cmp
jge
add
cmpsl
pop
lcall
add
adc
jg
bnd
out
test
add
daa
pop
or
add
aas
jnp
mov
pop
rcll
add
add
jge
mov
xchg
pop
leave
fisubrs
pusha
add
jo
add
rorb
pop
popa
add
es
jne
pop
lock
fisttpl
mov
add
fisubrl
lock
sti
nop
clc
lods
scas
adc
add
bound
add
aas
add
rolb
and
adc
add
sbbl
add
push
in
push
in
inc
add
jg
add
in
inc
pop
mov
pop
adc
add
add
das
test
rolb
add
cmpsb
pop
xchg
jbe
stc
and
add
add
std
sbb
add
xor
add
ret
add
xor
add
pop
mov
pop
insb
mov
pop
push
divl
add
pop
mov
push
fs
pop
xor
add
mov
add
push
mov
mov
xchg
xchg
pop
test
push
pop
outsl
lret
mov
jl
dec
inc
pop
push
add
fwait
jbe
repz
jl
add
dec
pop
sbbb
adc
add
pop
and
add
add
pop
sbbb
add
pop
lcall
mov
leave
push
pop
mov
idivl
xor
add
add
dec
lret
add
push
cmp
add
adc
add
and
add
dec
sub
add
jne
pop
aad
add
mov
pop
mov
int
add
lods
and
add
add
in
add
add
pop
rcrl
fisubl
add
pop
js
or
pop
mov
and
add
cltd
xchg
iret
or
les
xchg
pop
flds
lds
and
add
pop
cmc
xor
pop
test
stos
xor
jbe
and
add
in
push
add
xchg
rcrb
add
sbb
pop
sar
xchg
pop
leave
sub
popl
add
push
jg
loope
mov
rcrl
push
and
add
cld
inc
add
ljmp
add
push
add
shlb
inc
add
rcrl
sbb
popf
jl
sarb
nop
push
mov
add
daa
pop
sbb
add
pop
leave
ret
pop
jns
in
pop
jmp
test
pop
int3
mov
add
add
jns
shrb
mov
pushf
mov
cmp
push
add
pop
and
add
aam
add
and
add
mov
lret
out
pop
mov
lret
sbbb
push
pop
mov
divb
add
add
pop
ljmp
pop
dec
pop
gs
mov
add
lds
sbb
insl
int
pop
imul
pop
dec
mov
pop
and
pop
push
add
arpl
add
test
rcrl
lea
add
mov
fcmovbe
aaa
cmp
add
cwtl
sbb
pop
sbb
add
jae
add
sbbl
add
add
and
add
pop
xlat
jbe
pop
pop
inc
pop
repz
pop
mov
and
add
xlat
outsl
outsl
inc
pop
test
jmp
add
add
jmp
imul
idivb
sahf
lds
add
inc
pop
add
add
mov
inc
pop
test
add
mov
jnp
enter
pop
popf
push
sbb
sub
add
adc
gs
inc
add
fwait
stc
cmpsl
pop
lock
add
rcrb
aas
in
and
test
add
add
pop
nop
add
add
pop
pop
les
in
push
gs
cli
xor
add
test
out
add
push
add
int
dec
repnz
pop
adc
add
pop
lcall
fwait
shl
pop
sbbb
add
add
stos
ret
pop
mov
icebp
mov
cmpsb
pop
adc
add
jbe
add
pop
xor
add
dec
movsl
pop
fs
aam
add
push
leave
rcl
sbb
in
lret
jg
faddl
xchg
and
testl
cmp
add
jg
leave
xchg
pop
lahf
mov
pop
sarl
xchg
sbbb
add
adc
nop
icebp
jns
add
in
dec
mov
adc
les
pop
stos
push
aad
sub
add
or
in
dec
sbbl
push
pop
rcrl
pop
shlb
cltd
and
add
mov
cmp
pop
pop
mov
and
add
scas
sub
imul
add
sbb
pop
mov
mov
push
add
xor
add
add
lret
cmp
push
ret
pop
hlt
sbb
add
cltd
xchg
add
add
add
adc
add
mov
pop
push
add
icebp
test
out
xchg
jb
add
repz
xchg
pop
jle
push
add
enter
sbb
add
add
shrl
pop
cmp
stos
not
jne
mov
jp
xchg
xchg
test
fidivl
add
pop
jecxz
dec
add
mov
add
jle
sahf
dec
sub
into
push
loope
adc
fdivrs
pop
pop
pop
arpl
add
pop
adc
push
add
gs
push
sub
mov
scas
dec
scas
mov
add
test
movsl
pop
push
add
rcrb
pop
popf
sbbl
dec
lock
add
mov
stc
imul
add
inc
add
rcrb
pop
es
push
push
mov
ret
pop
mov
jge
pop
rolb
xchg
movsb
pop
adc
add
loop
and
ret
pop
xchg
ja
xlat
inc
add
lcall
clc
and
add
sarl
pop
xchg
dec
outsb
movsl
pop
outsl
mov
pop
shr
jo
add
and
add
pop
cmp
pop
sub
xchg
pop
add
add
pop
scas
pop
dec
jmp
add
mov
int
pop
sbbb
sub
pusha
add
leave
cmp
add
mov
add
daa
pop
rcrl
insb
mov
pop
push
mov
adc
add
pushf
mov
sub
pop
pop
or
sub
pop
push
lds
pop
mov
jae
add
add
pop
fcoml
jge
pop
aaa
lahf
mov
out
lret
add
add
mov
daa
pop
cmc
mov
stos
movsb
pop
scas
popa
add
fwait
jmp
pop
int
cmp
sbb
cltd
fcoml
pop
bound
add
mov
xchg
shl
pop
cmp
lret
jb
add
add
cmp
in
dec
push
mov
xchg
dec
sbb
push
add
dec
out
xlat
mov
sbb
dec
dec
jne
pop
stc
or
nop
jp
pop
loop
jecxz
sti
xor
add
jl
jl
pop
inc
pop
cltd
mov
mov
add
cltd
fdivrs
call
add
bound
add
add
or
dec
dec
inc
add
popl
add
add
jne
xchg
fstl
lcall
test
popf
aas
rcrb
cmp
lahf
xor
add
and
add
pop
jns
pop
push
add
sahf
cs
add
loopne
cmp
push
mov
pop
aam
inc
add
pop
xlat
push
cmpsl
pop
cs
sub
clc
mov
add
fcmovne
lock
xor
add
pop
lock
add
repz
fidivrs
call
add
scas
fs
cli
add
add
insb
out
xchg
mov
es
push
push
add
adc
add
pop
and
adc
add
cltd
dec
adc
add
out
jle
inc
add
js
jns
inc
add
call
test
jo
add
add
test
lcall
add
add
add
loop
pop
push
pop
outsb
lock
pop
mov
add
fsubs
add
add
cltd
aad
mov
arpl
add
leave
sbb
pop
adc
add
add
enter
add
add
inc
add
add
dec
cwtl
pop
in
test
pop
dec
cmc
adc
movsb
pop
xchg
js
add
jl
inc
pop
cmp
pop
dec
jge
pop
jo
add
mov
mov
mov
pop
bound
add
push
mov
add
sbb
ja
sub
push
pop
psllq
movsl
pop
fs
mov
stc
inc
add
cmp
lods
sarl
push
out
rcll
sbbl
nop
xlat
std
add
add
cld
pop
mov
xor
add
add
add
add
addr16
push
imul
add
push
sti
add
jae
add
cmp
pop
insb
rcrb
bound
add
leave
adc
add
cmp
push
add
leave
addr16
lea
jg
out
xor
add
pop
push
roll
add
xchg
push
push
mov
pusha
add
or
push
pop
inc
pop
mov
test
add
push
push
fisubl
pop
jle
dec
rcrb
add
add
mov
pop
sti
cs
loop
shlb
add
in
and
add
add
ds
adc
add
sub
pop
repz
add
outsl
lret
add
add
mov
cmp
add
mov
add
sbbb
sbbb
int
adc
pop
and
add
add
shl
pop
stos
test
add
and
add
cltd
or
push
add
add
add
mov
add
sub
cli
pop
mov
jp
pop
sub
dec
sbbl
arpl
add
mov
add
xchg
cmp
icebp
and
add
add
xor
add
pop
in
shrb
rcr
cwtl
xchg
fildl
mov
cli
mov
and
dec
push
xchg
push
mov
add
inc
pop
stos
outsl
jle
ret
pop
sbb
pop
adc
pop
imul
add
add
add
pop
gs
in
lcall
cltd
sarl
pop
std
repnz
fidivl
push
cmp
aad
movsb
pop
adc
sub
or
add
dec
xchg
pop
sbb
daa
pop
and
add
pop
mov
push
sti
jbe
pextrw
pop
inc
add
sbb
add
jae
add
add
pop
add
add
dec
mov
adc
add
mov
and
add
add
and
dec
jge
mov
push
mov
pop
fwait
rcrl
outsl
xchg
movsl
pop
sbb
ljmp
jle
xchg
das
nop
cld
xor
add
lea
sti
xchg
xlat
jmp
or
aas
inc
add
xchg
and
add
pop
cs
outsb
cmp
imul
es
lret
lahf
adc
add
pushf
push
inc
add
cmp
movsl
pop
sti
test
and
jmp
pop
pop
test
pop
testb
pop
ja
pop
jle
mov
outsb
lea
jp
loope
mov
add
add
pop
pop
das
pop
insb
in
sets
or
out
lcall
pop
push
cmp
or
xchg
push
add
sbb
add
enter
loop
sarb
add
pop
call
pop
lret
lock
sub
mov
mov
rol
pop
cmpsb
pop
sbbl
xchg
mov
mov
add
imulb
rcrl
push
pop
sbb
pop
xchg
inc
pop
push
and
add
add
int
cmp
pop
or
add
fcomip
jno
add
pop
pusha
add
jmp
mov
lds
fldcw
call
add
add
movsl
pop
adc
aas
sbb
cmpsb
pop
xor
pop
mov
mov
sub
inc
add
adc
add
add
xor
cmp
mov
lret
imull
and
sbbl
pop
into
arpl
add
jne
decb
dec
xlat
icebp
xchg
xchg
xchg
les
and
add
add
leave
inc
add
mov
pop
arpl
add
and
add
mov
push
pop
inc
pop
or
clc
pop
pop
rcrb
loopne
mov
xchg
insb
icebp
mov
xor
add
dec
add
add
push
mov
add
add
add
js
sbbl
int
mov
lahf
cmp
add
push
add
lret
lods
out
sbbl
pop
call
add
mov
shrd
add
pop
bnd
lds
add
push
add
mov
pop
dec
push
int3
push
pop
mov
je
push
sbbb
and
pop
repnz
and
add
fwait
divl
insb
push
add
cmp
pop
pop
popf
pop
loope
sbb
xor
inc
add
mov
pop
std
daa
pop
call
outsb
push
add
sbb
mov
xor
add
add
sub
pop
jge
loopne
or
mov
cmp
lret
pop
add
add
pop
sub
ljmp
add
jp
add
mov
in
inc
pop
iret
sbb
mov
add
add
cmpsl
pop
mov
mov
push
add
jno
add
cmovae
add
add
or
xchg
jmp
stos
inc
add
pop
sub
sbb
cmp
add
add
je
pop
rcrl
add
jo
add
les
add
add
in
or
shll
add
nop
pop
pop
dec
sub
imul
xor
nop
dec
push
jbe
pop
mov
rcrl
jp
ffree
pop
stos
jbe
push
pop
fnstenv
mov
pop
lock
add
pop
add
add
add
dec
jnp
pop
sahf
aad
pop
dec
pushf
addr16
into
cwtl
call
xchg
and
pop
pop
cmp
push
pop
xchg
mov
in
jns
pop
cld
jl
pop
outsb
cmpsl
pop
jmp
pop
sbbb
pop
fldt
addr16
popf
pop
xlat
xchg
and
sbb
pop
add
fildll
pop
inc
add
mov
testb
fs
lahf
loopne
push
add
sahf
push
pop
adc
add
rolb
pop
scas
fdivs
add
pop
cmpsb
pop
cli
jl
add
adc
add
add
sub
call
out
xor
add
and
add
leave
inc
add
sbb
mov
pop
cmp
mov
add
inc
add
mov
jmp
pop
add
add
jg
add
jge
mov
enter
add
sbb
leave
jecxz
sahf
sub
test
add
cmpsl
pop
sbb
jnp
mov
pop
shll
add
adc
add
ret
xchg
xor
add
mov
sahf
jae
add
sub
xchg
cmp
add
push
pusha
add
out
sub
xchg
add
adc
add
sbbl
or
sbb
add
add
add
mov
add
add
inc
pop
mov
pop
aas
cmp
pop
pop
fimull
into
sbbl
sti
or
and
add
push
fimull
stos
inc
add
rcrb
add
add
add
add
pop
fildl
pop
aad
dec
rcrl
mov
cld
adc
rolb
add
add
add
pop
inc
add
imul
stc
in
adc
mov
add
je
dec
hlt
sub
pop
testb
or
mov
xchg
jg
pop
add
add
jge
or
sbb
or
pop
stc
pop
jnp
cmp
jge
pop
imul
sub
mov
int3
xlat
bound
add
das
xchg
dec
mov
add
or
push
test
pop
mov
add
scas
ss
mov
add
dec
pusha
add
sti
xchg
cmp
pop
xchg
jl
add
inc
pop
mov
and
add
jmp
pusha
add
sbbl
pop
pop
cmc
rcrb
xchg
xchg
lret
imul
test
jmp
leave
pop
xor
push
push
add
add
leave
pushl
aaa
dec
in
inc
add
negb
and
ljmp
paddusb
mov
jg
scas
pop
sbb
sbbb
in
adc
add
into
das
or
es
sbbb
pop
cmp
int
pop
push
add
mov
pop
gs
pop
mov
add
jb
add
add
cmp
add
add
hlt
xchg
aaa
inc
pop
fdivs
add
pop
adc
test
jne
lcall
add
pop
xor
add
dec
dec
pusha
add
decb
xchg
int3
and
add
add
mov
push
pop
out
scas
mov
xor
add
adc
add
jg
add
mov
pop
and
add
les
hlt
or
movsb
pop
pop
aam
add
mov
mov
add
es
and
add
popa
add
int
insl
std
cld
in
mov
scas
divb
lods
add
add
push
mov
add
ret
pop
pop
test
pop
mov
xchg
xlat
sbbl
pop
xor
add
fmuls
dec
dec
xrelease
and
add
lcall
push
rorb
loop
jne
leave
mov
cmp
add
dec
and
add
add
gs
xor
add
add
pop
js
inc
pop
scas
push
mov
add
and
add
add
mov
xor
add
add
sub
xchg
mov
pop
and
add
mov
pop
fisttpl
lock
jnp
xchg
pop
es
sbbl
in
or
pop
xor
add
mul
pop
rcrb
les
pop
cmpsb
pop
dec
xor
push
outsl
inc
add
rcrl
test
add
rcrb
pop
and
add
add
pop
jle
xchg
ror
js
add
int3
fsts
cmpsb
pop
sbb
out
es
pop
inc
add
xchg
int
add
xor
add
mov
pop
sti
popf
push
pop
lret
adc
add
pop
mov
popf
push
add
push
scas
shll
add
add
pop
inc
pop
mov
pop
test
or
jb
add
and
add
add
or
test
add
jb
add
add
inc
add
pop
test
stc
pop
jle
add
pusha
add
lret
shll
add
out
lcall
stos
into
stc
pop
cwtl
jno
add
add
xchg
jecxz
mov
or
pop
pop
mov
push
add
xchg
loope
pop
and
add
mov
pop
in
adc
add
sbbl
add
dec
lahf
jge
jl
add
add
add
out
lahf
cmp
divb
sub
pop
mov
add
add
clc
mov
cmp
sti
pop
pop
psubsw
pop
loopne
jecxz
push
cmp
add
xchg
pop
out
mov
cmc
push
mov
add
jno
add
xor
add
out
push
ljmp
addr16
lods
sub
sbb
pop
xchg
nop
add
add
loop
cltd
shrb
out
adc
add
pop
mov
push
aaa
ret
sbbb
fcmovbe
mov
add
jg
sub
pop
lret
xchg
repz
xor
add
sti
xchg
add
add
icebp
ds
fmull
mov
test
ds
inc
add
mov
int
pop
sahf
ret
pop
xchg
sbb
rclb
and
pop
loope
ja
pop
push
pop
push
dec
lods
out
sbb
push
cmpsl
pop
insl
aaa
sub
fwait
sbb
cltd
inc
add
push
fs
out
mov
sub
add
setle
pop
mov
cmpsb
pop
icebp
lret
pop
adc
add
add
pop
mov
pop
imul
add
sub
inc
pop
pop
push
add
jo
add
sub
add
fstl
add
sub
pop
sbb
inc
pop
ljmp
pop
xchg
adc
lret
lea
pop
sbbl
xchg
jmp
pop
jnp
or
movsl
pop
pop
in
repz
add
add
lds
pop
mov
idivb
outsl
scas
sbb
pop
mov
mov
lret
mov
push
movsb
pop
mov
push
or
iret
js
pop
adc
add
adc
add
aas
ret
pop
xchg
lret
and
add
xchg
push
add
jle
dec
adc
add
cmp
mov
add
jg
add
pop
aaa
loop
roll
gs
pop
dec
add
sbbb
add
enter
pop
jmp
es
push
fisubrs
cltd
imul
dec
and
add
add
adc
add
add
add
pop
cld
ljmp
scas
sub
jl
loopne
push
cmpsl
pop
lahf
lea
lret
fildl
addr16
mov
add
iret
xchg
sahf
loopne
dec
dec
aaa
aaa
add
and
add
clc
les
sbbl
mov
sub
cld
int
dec
test
pop
pop
mulb
add
loope
adc
add
fcomi
sbb
pop
in
mov
add
out
or
add
pushf
leave
out
fidivl
mov
fcmovnu
stos
inc
pop
lods
cmp
mov
loop
in
gs
xchg
out
inc
pop
mov
jno
add
and
add
add
add
lods
outsb
push
add
dec
adc
xlat
pop
mov
add
sub
int3
push
xor
add
add
xor
add
pop
aaa
in
push
pop
cmp
loope
xchg
pop
dec
push
lock
dec
cli
sub
bound
add
add
pop
insl
mov
pop
mov
mov
xchg
add
add
das
push
push
add
jo
add
dec
pop
stos
mov
jl
mov
popa
add
outsb
int3
cmpsb
pop
jb
add
dec
or
jmp
pop
adc
push
xor
add
push
adc
pop
jns
inc
pop
out
mov
add
sub
xchg
leave
cltd
xchg
pop
fistps
push
lock
add
jne
pop
jg
sub
pop
jg
pop
jl
lret
pop
inc
add
rcrl
mov
bound
add
test
gs
sbb
add
add
out
test
sbb
add
lods
shll
aas
adc
add
loopne
int
sbbb
dec
leave
popf
pop
mov
ret
pop
cmp
lock
mov
iret
movsb
pop
add
add
loopne
aad
in
lret
jae
add
cld
add
add
add
add
pop
mov
jns
cmp
call
mov
pop
pop
enter
jmp
inc
pop
ja
add
rcrb
add
add
les
sub
pop
aam
and
add
imul
inc
pop
sbb
pop
jae
add
inc
pop
sbb
jl
neg
inc
pop
inc
pop
icebp
mov
dec
or
aad
mov
pop
cmc
jecxz
sbbb
add
jle
add
out
inc
add
lods
sbbb
pop
jae
add
add
lcall
add
repz
pop
xor
add
imul
add
pop
xchg
push
cwtl
inc
add
test
or
bound
add
cld
ret
pop
xchg
dec
pop
repz
add
mov
mov
add
cli
mov
mov
pop
dec
pop
loope
jo
add
lods
lods
or
pop
lahf
jnp
adc
add
pop
lds
gs
jle
pop
mov
pop
into
stos
jle
sahf
lods
out
jl
pop
xchg
ljmp
shr
or
pop
and
bound
add
pop
or
mov
scas
popa
add
fadds
dec
xchg
jle
outsb
xchg
add
add
cmp
add
pop
insl
outsl
push
pop
fistps
or
sahf
jo
add
adc
add
add
sahf
stc
pop
dec
xor
add
pop
sbb
jns
add
insb
popf
ror
shrb
add
imul
dec
push
pop
cld
insl
add
add
arpl
add
dec
sbbb
jl
add
mov
add
js
popa
add
shll
add
add
add
add
add
inc
add
mov
pop
push
add
or
mov
sbb
pop
dec
test
add
sbbl
into
jmp
xchg
sbb
jne
ret
out
enter
mov
stos
inc
add
xchg
or
jae
add
pop
dec
nop
xchg
jae
add
pop
fiaddl
ja
pushf
imul
mov
ror
jb
add
shl
xor
push
add
popf
ljmp
xchg
loop
cmpsb
pop
in
lods
xor
add
pop
ds
xchg
xor
xchg
hlt
add
add
lods
mov
xchg
dec
pcmpeqb
add
adc
add
mov
inc
add
or
aad
xchg
loop
push
add
cwtl
pop
mov
pop
fcoms
add
leave
dec
pop
aad
push
add
dec
ss
cmp
pop
and
add
inc
add
jl
add
add
fucom
pop
and
sub
es
lcall
pop
mov
in
add
add
negb
mov
mov
lock
add
iret
add
je
add
popf
and
jmp
pop
pop
cmp
es
mov
add
hlt
dec
fwait
and
mov
movsl
pop
xchg
loop
es
push
jmp
and
add
cmp
arpl
add
gs
xor
or
pop
or
cmpsl
pop
jl
jnp
ja
pop
pushf
jb
add
fs
lods
jmp
outsl
ficompl
jo
add
in
sbb
pop
test
add
je
loopne
dec
ret
pop
in
cmpsl
pop
mov
xchg
test
jl
mov
daa
pop
test
sub
add
mov
hlt
cmpsl
pop
cmpsb
pop
add
add
mov
lcall
insl
icebp
cmc
mov
scas
xor
sub
fs
icebp
movsb
pop
add
add
mov
test
popf
mov
mov
pop
loop
leave
or
jecxz
sbbl
outsl
push
inc
pop
into
in
mov
shr
fbstp
fdivrs
fbld
pop
pop
sbbb
lds
pop
aad
in
shll
add
bound
add
and
add
out
inc
add
inc
pop
pop
push
add
out
movsb
pop
stc
cmpsb
pop
inc
add
int
cltd
cmp
pop
adc
add
mov
add
add
sub
pop
faddl
add
ss
pop
xchg
in
push
fldcw
mov
pop
rcrb
insl
dec
inc
pop
xchg
bound
add
test
pop
test
addr16
cld
js
sbbb
push
jle
jp
mov
cld
rcrb
pop
push
add
mov
add
setp
add
pop
paddsb
test
and
xor
add
iret
sub
dec
aam
add
xor
add
add
mov
nop
int3
pop
pop
add
add
mov
movsl
pop
lea
adc
add
pop
test
add
in
xchg
pushf
xchg
add
add
arpl
add
pop
inc
pop
js
add
cmp
inc
pop
mov
sbb
sub
pop
nop
mov
iret
push
add
arpl
add
js
add
lcall
add
out
shll
divl
insb
loope
ss
jne
pop
scas
lret
mov
add
push
add
ds
mov
test
mov
scas
lcall
popa
add
adc
pop
je
mov
add
cld
add
add
pop
cld
push
rcl
testl
pop
jle
pop
test
add
add
add
add
outsl
lea
add
add
mov
add
xchg
pusha
add
push
pop
enter
push
add
and
add
add
into
mov
adc
add
pop
pop
je
xchg
pop
adc
add
stos
and
add
js
mov
push
inc
add
dec
mov
loop
adc
add
sti
adc
sub
add
lock
hlt
sbb
movsb
pop
imul
sub
and
add
push
out
xchg
test
pop
pusha
add
adc
add
jg
pop
push
pop
mov
pop
mov
add
mov
add
and
push
add
jp
add
outsb
testl
pop
shlb
jg
sbb
ljmp
pop
push
mov
mov
outsb
push
test
pop
add
add
std
dec
jbe
fdivr
sbb
pop
add
add
jo
add
loopne
mov
add
pop
or
add
xchg
pop
ds
add
nop
das
and
jnp
icebp
jmp
jb
add
inc
add
push
adc
add
rorl
adc
add
pop
pop
leave
rcrl
test
push
inc
pop
cmpsl
pop
cs
add
aaa
repnz
adc
add
out
sbb
add
pavgw
xor
add
or
add
sub
add
cmpsl
pop
push
pop
sbbl
push
pop
pop
cs
pop
sbb
xor
add
and
push
arpl
add
push
add
pushl
sbb
insl
out
or
add
xchg
push
add
movsl
pop
pop
pop
dec
iret
jge
pop
pop
pop
xlat
stos
stos
int
xor
add
add
lock
jns
pop
sbb
mov
cmp
int3
xor
add
fcos
sbb
mov
add
repnz
leave
inc
add
js
in
stos
fadds
xchg
pop
ss
cmp
pop
sbbb
pop
dec
pop
insl
pop
enter
and
add
inc
pop
sbb
dec
adc
add
add
jbe
add
loopne
inc
add
enter
lcall
mov
arpl
add
add
xor
add
add
add
aam
pop
mov
ja
mov
xchg
mov
pop
cmp
and
add
push
pop
in
stc
in
dec
sbbb
cmpsl
pop
pop
cmp
jge
jb
add
add
mov
push
dec
pop
cmp
mov
dec
adc
add
mov
imul
addr16
adc
add
pop
pop
test
pop
or
sbbb
pop
jae
add
xor
add
add
mov
repz
add
adc
dec
sbb
fmul
pop
fidivrl
dec
and
aad
sub
pop
adc
add
sub
mov
xchg
cmpsl
pop
add
add
xor
add
stc
dec
sbbb
mov
ret
pop
push
add
ret
aad
imul
add
add
pop
jg
mov
fcompl
pop
xchg
adc
add
pop
jo
add
sbbl
add
insl
push
pop
movnti
cmp
pop
xchg
xchg
add
iret
out
xlat
mov
fucomi
xlat
mov
push
pop
dec
mov
add
add
jae
add
icebp
imul
inc
add
and
add
shlb
inc
pop
adc
stc
and
add
int3
fcomps
clc
fildll
xchg
pop
in
stos
sbbl
fsubs
bound
add
pop
sub
aam
add
mov
add
ljmp
inc
add
mov
add
fcom
cmp
add
pop
sbb
pop
xchg
add
lret
xchg
push
in
bound
add
pop
mov
inc
add
jae
add
cmc
sti
or
stos
iret
dec
and
add
pop
shlb
add
cmp
add
adc
add
add
fsubr
ret
pop
enter
add
jae
add
add
mov
cmpsl
pop
push
popa
add
push
rcrb
mov
sub
pop
pop
sbb
add
add
adc
adc
push
add
sub
pop
sbbl
outsl
stos
dec
cmc
jmp
pop
dec
rcrl
or
pop
rcrb
movsb
pop
inc
add
mov
rcrl
movsl
pop
cmc
inc
add
mov
add
xlat
inc
add
int
add
add
xor
add
add
add
testl
xchg
mov
pop
xor
dec
jg
add
add
mov
pop
negl
xchg
das
add
add
jo
add
mov
inc
add
lds
mov
pop
fildl
add
push
and
add
fs
inc
pop
enter
pop
xlat
sbb
rep
pop
dec
xlat
xor
add
add
jecxz
sbb
add
add
inc
add
mov
adc
add
add
xchg
mov
sar
sbb
lcall
xchg
pop
cmpsl
pop
stc
insb
jbe
xchg
sbb
push
add
adc
add
cli
imul
pop
fimuls
pop
mov
add
jecxz
inc
pop
add
add
sbbb
lock
add
dec
lock
movsb
pop
ljmp
fcom
into
mov
pushf
xor
add
cltd
int3
fxch
adc
add
xor
cmc
je
add
xchg
sub
jp
xor
add
addr16
or
add
loopne
cmp
pop
je
xchg
push
jno
add
add
xor
add
jnp
pop
sbbb
add
pop
bound
add
decb
or
mov
adc
add
cmp
sub
pop
filds
out
push
add
stc
lea
pop
mov
jnp
leave
xor
add
cmpsb
pop
pop
rcrl
add
add
fmuls
cvttps2pi
in
cmp
sub
adc
sub
pop
dec
and
and
push
add
in
mov
or
fpatan
fisttpl
pop
jmp
mov
pop
daa
pop
sbb
mov
pop
cmp
test
cmp
add
pushf
adc
add
add
cmc
int3
testb
add
mov
lock
mov
lods
popa
add
sub
cs
dec
inc
pop
call
cmp
adc
add
mov
test
adc
add
sub
into
movsl
pop
sti
fwait
and
add
cmc
sbbl
mov
mov
add
xor
add
add
and
add
enter
cwtl
popf
jle
add
ds
inc
add
adc
add
inc
add
outsb
pop
sbb
pusha
add
pop
mov
mov
pop
pop
test
pushf
popa
add
or
add
mov
add
inc
add
jae
add
xchg
imul
add
push
add
add
or
add
sbbl
add
test
pop
dec
outsb
sub
into
cmpsl
pop
add
add
imulb
add
gs
aaa
and
lcall
add
jo
add
add
xor
add
inc
pop
xlat
int3
int
or
add
aaa
add
add
mov
xchg
pop
test
mov
out
insl
shl
pop
stos
add
add
ss
add
pop
fnstenv
add
neg
add
inc
pop
test
sbb
add
push
pop
or
sub
add
dec
fisubs
mov
sahf
mov
mov
popl
add
fsts
pop
movsb
pop
and
ljmp
add
add
add
add
push
add
and
add
enter
sbb
cwtl
rorl
pop
bound
add
mov
jp
pusha
add
mov
je
pop
hlt
jb
add
push
add
add
push
add
jo
add
add
add
mov
out
fcmovnbe
add
add
ret
movsl
pop
lahf
push
sbb
pop
xor
add
add
xlat
cmp
add
fldl2t
sti
test
mov
cli
mov
sbb
cmpsb
pop
repnz
bound
add
add
mov
iret
bound
add
incb
add
cwtl
inc
pop
xor
add
mov
sbb
pop
adc
add
pop
xor
add
xor
add
add
add
lock
jg
add
js
add
add
pop
pop
pop
mov
and
add
jne
pop
repz
add
mov
pop
push
dec
test
loopne
ljmp
cmpsb
pop
je
cmp
jbe
jl
mov
rclb
sbb
add
sar
sub
mov
push
add
push
xchg
sbb
pop
push
add
add
add
dec
mov
decb
lcall
out
inc
add
mov
pop
add
add
rcrb
add
add
and
add
pop
dec
xchg
icebp
jnp
aas
xchg
pop
ds
jbe
pop
push
pop
aaa
mov
pop
dec
push
add
jmp
jp
pop
mov
jp
add
ds
and
inc
pop
xchg
add
sub
pop
xor
xchg
int
pop
sub
jae
add
pop
and
jo
add
mov
add
pusha
add
pop
push
jbe
push
fmuls
pop
hlt
push
add
rorb
adc
add
out
ret
pop
lock
test
pop
int
add
pop
loop
lods
loope
cs
cmp
pop
ds
call
xor
add
push
add
jecxz
lock
mov
or
add
notb
fimuls
add
bound
add
add
and
add
ljmp
add
sub
add
pop
imul
add
lahf
negl
jbe
test
sub
add
mull
test
add
push
pop
add
add
test
add
add
add
add
adc
add
add
idivb
pop
gs
fldcw
test
cld
pop
mov
mov
test
inc
pop
fsubp
pop
pop
pop
jno
add
jo
add
rcrb
pop
mov
arpl
add
xor
add
mov
mov
pop
cmp
fidivrs
nop
stos
repz
add
pop
cmpsl
pop
lahf
push
je
add
xchg
inc
pop
out
or
pop
xchg
js
pop
xchg
stc
sub
pop
xchg
mov
ds
lods
aad
pop
sbbl
push
jbe
pop
push
fsub
pop
xor
add
dec
dec
js
xchg
mov
pop
xchg
or
sbbl
pop
pop
icebp
flds
leave
in
enter
add
test
pop
push
cmp
pop
xchg
ret
pop
xor
pop
mov
add
cmc
push
add
mov
pop
rolb
add
cmpsb
pop
fs
out
sbbl
add
fistpl
js
or
pop
cmp
pop
xchg
sbb
cmp
xor
xchg
add
add
add
jl
add
push
push
cmp
xchg
ss
pop
add
add
scas
call
das
bound
add
pop
mov
adc
add
pop
cli
jns
mov
rcrb
add
cwtl
mov
das
pop
push
pop
mov
mov
ret
pop
push
add
jns
pop
aas
inc
pop
or
ljmp
hlt
cmpsb
pop
and
or
mov
divb
add
inc
pop
repz
pop
inc
add
test
sbb
pop
dec
pop
lret
xchg
int3
add
jne
jo
add
pop
dec
xchg
pop
jmp
das
xor
add
pop
aas
xor
add
sub
add
mov
pop
pusha
add
push
fnstenv
dec
cmp
enter
xchg
fsts
sbbl
movsl
pop
and
add
repz
cmpsb
pop
je
cmp
mov
add
jge
adc
bound
add
jo
add
add
jmp
mov
int3
mov
pop
sub
push
cmp
mov
push
cmp
test
add
call
add
mov
sub
test
cmp
ret
pop
pusha
add
gs
loopne
pop
lds
xor
add
jae
add
dec
fsubrp
mov
inc
pop
aas
inc
pop
push
gs
push
add
arpl
add
loopne
cmp
je
pop
jle
mov
adc
add
mov
jle
cmp
pop
fldt
mov
pop
inc
pop
jbe
fidivl
pop
cmpsl
pop
push
jbe
cmp
pop
jg
pop
aam
cld
das
pop
enter
pop
je
adc
add
ds
mov
pop
dec
fwait
or
add
pop
jmp
ds
mov
xchg
fwait
test
pop
shr
ret
pop
or
pop
inc
pop
dec
int3
xchg
mov
into
clc
pop
pop
or
jne
inc
pop
shll
mov
aas
pop
sbb
jno
add
mov
add
xchg
xchg
push
add
rol
pop
jl
add
add
xor
add
add
add
jns
sub
dec
push
inc
add
xchg
cmove
add
add
stos
mov
add
loope
in
sahf
xchg
stc
xchg
xchg
sub
add
outsl
push
add
sub
pop
or
add
mov
push
add
cltd
jg
and
add
mov
add
lea
in
repz
add
leave
push
add
notb
je
push
add
add
add
add
or
xor
sbb
sbb
add
aad
xchg
orps
rcrb
pop
mov
scas
add
push
pop
xor
mov
lret
xchg
pop
jp
test
or
pop
push
cmp
test
pop
je
nop
outsl
mov
pop
mov
push
add
in
sbbl
sbb
xor
add
pop
cmp
add
mov
add
iret
push
xchg
pop
mov
mov
xor
add
pop
pop
lds
add
pop
pop
inc
add
add
add
cld
notb
add
mov
dec
add
add
aad
ficompl
inc
add
jb
add
mov
xchg
loopne
pop
xchg
iret
jl
cmp
sti
xor
pop
and
pop
fwait
loopne
int3
sub
test
jbe
cmp
pop
mov
mov
pop
adc
add
rcl
mov
and
and
ds
outsl
inc
pop
or
pop
push
cltd
bound
add
pushf
lret
and
add
pop
leave
gs
mov
pop
lcall
dec
scas
add
add
pop
mov
in
fisubl
pop
clc
sub
inc
pop
fs
lret
mov
inc
add
repnz
add
jle
xor
and
add
pop
ficoms
add
decb
mov
popa
add
hlt
adc
add
outsb
sub
or
mov
add
cmp
pop
fistps
pop
sbbl
pop
pop
mov
pop
adc
add
pop
mov
pop
jg
pop
push
pop
hlt
mov
adc
add
add
adc
add
inc
pop
gs
push
jecxz
lds
ror
fwait
repnz
add
mov
add
out
enter
mov
sub
shrb
pop
or
sbbb
repz
pop
push
jb
add
push
rcrb
sbb
pop
stos
push
mov
add
sahf
xor
add
sbb
add
dec
dec
in
enter
pop
mov
das
adc
sub
add
pop
push
dec
push
lods
call
stos
lahf
fdivrp
out
insl
xchg
fs
and
add
dec
push
add
mov
std
arpl
add
add
jmp
popa
add
jo
add
pop
xor
add
in
pop
shrb
hlt
pop
aam
inc
add
inc
pop
dec
frstpm(287
pop
fdivrp
cld
and
add
pop
pop
pop
mov
pop
clc
faddl
pop
jmp
add
inc
pop
adc
add
add
std
pop
adc
add
ret
daa
pop
repnz
mov
add
lods
sbbl
xor
add
test
inc
add
dec
push
add
repz
xchg
and
dec
lock
add
test
add
jecxz
inc
pop
je
add
int3
mov
pop
rep
cli
aaa
mov
or
jbe
cli
scas
push
add
cmp
cwtl
gs
adc
add
sbb
mov
mov
mov
mov
xor
add
pop
xor
add
cmp
add
jae
add
cmp
mov
das
jecxz
sti
lcall
add
push
add
sbb
add
jecxz
push
add
insl
xlat
xchg
pushf
jne
test
pop
mov
add
pop
sbbb
add
int
pop
aad
pop
jno
add
stos
inc
add
mov
jp
add
repz
push
loopne
xlat
int
add
mov
add
and
add
repnz
pop
fcompl
jno
add
inc
add
mov
aad
in
out
lret
add
sub
mov
loopne
repnz
ss
pop
sarl
jno
add
pop
or
add
rclb
fsubrl
out
xor
add
mov
pop
lds
add
cmc
and
add
sbbb
pop
sbb
pop
insl
mov
rorb
lods
ds
push
add
add
xchg
cmc
xor
arpl
add
or
pop
xor
add
add
sub
pop
xchg
into
push
add
xor
jns
add
outsl
mov
xchg
loope
sbbb
iret
inc
pop
xchg
std
pop
pop
xchg
push
mov
lds
pop
cmp
add
js
pop
dec
jmp
jae
add
jmp
pop
mov
pop
and
pop
sub
cwtl
into
mov
lret
pop
pop
pop
mov
add
pop
imul
pop
mov
pop
pop
mov
pop
mov
add
cmp
ret
stos
fs
inc
pop
jp
sbb
jle
sub
mov
add
cs
sub
mov
lds
add
add
sbb
add
mov
pop
cmp
sbbb
add
add
test
add
lods
popa
add
xchg
ret
pop
mov
pop
push
mov
stos
jmp
pop
sahf
push
pop
fcompl
mov
in
sbb
pop
or
pop
mov
add
push
add
or
js
add
enter
sbb
pop
roll
js
dec
enter
pop
xchg
aad
xchg
shll
add
add
add
mov
cmpsb
pop
cld
stc
mov
pop
xchg
xor
add
add
xchg
fadds
add
pop
xor
add
push
pop
shlb
cmp
pop
pop
dec
sahf
lds
add
mov
ljmp
add
out
xor
mov
jge
pop
leave
movsl
pop
inc
add
cli
mov
hlt
addr16
arpl
add
popa
add
lret
aad
add
jp
cmp
add
leave
bound
add
add
xchg
push
add
xchg
cmp
lret
pop
sub
pop
mov
add
xor
add
xchg
lods
and
pop
mov
pop
xchg
add
add
add
test
add
sub
test
add
or
add
jo
add
add
xor
add
add
add
int3
pop
popf
pop
xor
add
mov
pop
sbbb
loopne
in
push
aam
frndint
stos
in
jle
cmp
mov
pop
mov
inc
add
insl
push
fsubrl
sbb
in
leave
dec
jns
lret
mov
pop
lods
pop
notl
add
sahf
push
outsb
add
add
insb
push
add
push
jns
cli
mov
mov
arpl
add
pop
test
add
mov
and
add
pop
sbbb
pop
mov
mov
sbbb
pop
lods
push
add
mov
mov
nop
in
pop
xor
pop
sbbb
repnz
into
pop
xchg
or
jg
pop
sbb
jge
pop
sahf
out
cmp
aaa
les
and
pop
pop
pop
hlt
aam
cmp
add
add
and
sbb
jecxz
dec
pop
arpl
add
pop
ret
add
add
sub
pop
lds
add
xor
cld
je
xor
jb
add
mov
mov
sbb
add
ljmp
pop
jnp
add
or
pop
arpl
add
cmp
ret
fidivrs
pop
mov
sub
add
idivl
into
dec
je
add
int3
add
push
pop
fiaddl
mov
mov
or
inc
add
aaa
and
add
push
add
ss
or
out
xor
add
add
add
add
jns
pop
pop
mov
and
add
das
ret
pop
xchg
arpl
add
into
dec
insb
pusha
add
pop
movsb
pop
mov
inc
pop
xchg
add
cltd
rcrl
pop
fdivrs
dec
mov
pop
sbbl
in
mov
movsl
pop
push
add
sbbl
add
pop
xor
add
xchg
pop
sti
xor
ss
fs
or
jmp
xor
add
punpckhwd
add
add
add
cmp
xor
mov
pop
je
xor
add
outsl
xchg
pop
aas
push
jno
add
lret
ja
cmp
mov
jns
pop
mov
js
jno
add
jns
imul
pop
pop
js
ds
xlat
nop
inc
pop
ss
pop
xor
add
lds
add
pop
add
add
add
and
sub
fstps
pop
in
push
clc
or
pop
jecxz
mov
adc
add
gs
xor
add
pushl
sbbb
add
scas
push
pop
iret
test
mov
shlb
add
and
add
pop
scas
push
pop
stc
inc
add
mov
pop
int
add
mov
inc
add
add
add
mov
add
add
add
pusha
add
addr16
dec
mov
jp
pop
and
es
js
jge
adc
add
sbbl
pop
xlat
sbb
jae
add
sti
es
add
add
and
add
outsl
imul
add
jae
add
cmp
add
mov
pop
dec
pop
lock
add
add
add
mov
add
lahf
sub
addr16
repnz
add
inc
pop
xchg
jg
pop
sbbb
pop
fldl
jae
add
enter
lods
repz
pop
xchg
shlb
mov
add
mov
sbbl
push
add
stos
sbbb
adc
add
pop
dec
test
in
jg
add
lea
dec
xor
add
add
pop
stc
dec
sbbb
jecxz
or
lock
push
add
ret
pop
jmp
pop
dec
pop
stc
inc
add
out
arpl
add
movsl
pop
pop
jbe
cmp
mov
insl
pop
aaa
test
in
adc
add
push
sbbl
sbb
inc
add
aam
lock
pop
or
xlat
mov
and
jbe
jp
pop
notb
sahf
and
add
and
add
add
and
xchg
mov
pop
out
push
add
jp
push
pop
sub
enter
loopne
mov
in
lods
cmpsb
pop
fwait
jge
mov
mov
mov
lahf
outsl
adc
add
add
divl
add
testl
pop
incb
into
xlat
popa
add
popa
add
js
inc
add
adc
add
mov
dec
mov
pop
mov
pop
iret
negb
cmp
add
outsb
push
add
into
outsl
jno
add
pop
enter
add
add
stc
mov
lods
xor
add
mov
sbbl
adc
movsb
pop
push
jb
add
add
add
addr16
or
push
pop
into
inc
pop
xor
add
jge
sarb
movsb
pop
fdivrs
push
fcmovu
inc
pop
pop
loopne
pop
pop
imul
popf
dec
stos
mov
idiv
fldz
jnp
jns
decb
mulb
or
add
sbbl
add
out
pop
sbb
mov
jl
pop
lcall
pop
pop
rcrl
add
mov
fstpl
mov
pusha
add
movsb
pop
xchg
add
adc
add
into
insl
dec
add
add
or
jge
scas
in
mov
inc
pop
lds
sbb
adc
jo
add
or
cs
pop
inc
pop
sub
mov
imul
repnz
dec
rcrb
xor
add
add
push
dec
xchg
xor
add
add
mov
pop
or
add
into
cmp
dec
lcall
pop
jge
xchg
and
add
lds
push
mov
pop
insl
and
add
add
cmp
mov
pop
in
dec
mov
pop
or
sbbb
pop
sub
add
mov
icebp
cmc
rcll
daa
pop
dec
popf
ret
pop
mov
pop
fdecstp
or
add
mov
add
add
jl
jo,pn
add
pop
pop
adc
add
add
scas
je
int3
scas
adc
arpl
add
sbb
cltd
or
arpl
add
pop
pop
ret
pop
div
aaa
jl
fstpl
cmp
adc
jo
add
fs
out
pop
cmp
add
xchg
sti
in
fmuls
pop
mov
pop
lea
in
out
ds
pop
std
aam
cmp
fcmovne
lock
cs
pop
mov
jo
add
loope
or
sbbb
add
add
xor
add
add
inc
add
lret
pop
cmpsl
pop
xlat
mov
sub
inc
add
sbbl
pop
sub
loop
outsl
xchg
pop
out
xchg
mov
sbb
mov
push
mov
loopne
fistpll
jne
inc
pop
inc
pop
xchg
mov
pop
jmp
sbb
flds
add
rorl
add
hlt
sbbb
cmpsl
pop
into
in
add
inc
pop
pushf
repnz
add
dec
gs
mov
ja
mov
in
mov
pop
mov
sbbl
pop
pop
sub
push
icebp
adc
add
xor
mov
pop
lret
xchg
les
fdivrl
adc
inc
add
das
and
add
mov
lds
add
lds
pop
dec
clc
es
movsl
pop
xchg
add
add
add
popl
pop
add
add
and
add
pop
xchg
sbb
js,pt
aad
dec
fdivs
add
mov
adc
add
add
adc
add
add
xchg
sub
add
add
add
mov
adc
frstor
add
sbb
jnp
mov
pop
sub
stos
push
xchg
and
ljmp
pop
clc
int3
push
pop
les
pop
les
xchg
sub
pop
sbbl
scas
add
add
stc
enter
aam
pop
call
scas
and
or
xor
pop
std
test
jle
pop
inc
add
movsl
pop
xchg
fidivrs
sti
xchg
cmp
nop
push
pop
sbb
pop
or
ret
pop
fisttpl
jecxz
mov
add
xchg
pop
xchg
popf
jle
ds
add
add
fwait
add
add
add
add
mov
mov
add
push
imul
dec
push
lret
mov
pop
push
jno
add
pop
cwtl
add
add
add
jecxz
scas
sbb
mov
push
pop
enter
or
mov
sbb
pop
loopne
stc
mov
pushf
xchg
pop
cmp
xor
add
add
add
pop
xchg
nop
cmc
imul
add
jae
add
pop
and
add
add
add
sbbb
add
push
sub
fnstenv
and
add
pop
sahf
lods
mov
or
sbb
stos
inc
add
and
sbb
je
pop
push
add
std
sub
xor
add
push
push
jg
outsl
dec
mov
pop
jmp
repz
push
add
stc
xchg
mov
add
ret
jo
add
add
dec
les
pop
ljmp
mov
pop
in
sbb
pop
add
add
cmp
xchg
int
cmp
pop
outsl
mov
dec
lods
sbb
iret
or
add
sub
sbb
mov
lds
pop
pop
inc
add
mov
int3
push
add
sbb
mov
shl
pop
loopne
shl
pop
clc
in
repz
pusha
add
inc
pop
mov
fsubl
pop
imul
add
push
dec
icebp
xor
add
arpl
add
mov
fidivl
add
and
add
leave
pop
in
push
add
les
sbbb
mov
lock
dec
push
add
das
mov
add
lret
cmp
jne
sbb
add
mov
add
and
add
add
mov
xchg
stos
inc
add
dec
test
add
daa
pop
movsb
pop
sub
pop
aaa
dec
test
adc
add
adc
add
push
dec
bound
add
add
flds
lahf
and
add
add
mov
inc
pop
cld
and
cli
xor
add
rcrl
test
pop
scas
inc
pop
rcrl
hlt
dec
jne
mov
mov
add
inc
pop
pop
add
add
add
jle
add
lods
xchg
daa
pop
xchg
jge
pop
xchg
push
pushf
pushf
dec
gs
mov
xor
sbbb
fsubs
add
pop
das
jecxz
inc
add
xor
add
cmp
rcr
adc
push
cmp
pop
jo
add
lds
pop
shll
add
sbb
mov
pop
test
mov
sbb
pop
jns
add
cs
add
pop
or
mov
dec
xor
add
add
pop
hlt
in
sbbl
pop
test
and
add
mov
pop
push
add
adc
add
or
add
add
rcrl
pop
lcall
add
mov
pop
cmp
mov
sub
add
pop
daa
pop
xchg
jnp
add
and
rorl
pop
sbb
push
cltd
sbb
add
test
inc
add
ds
mov
sbb
xchg
pop
pop
ljmp
mov
pop
ret
pop
iret
inc
add
xor
add
sbb
mov
bound
add
pop
jbe
ljmp
pop
xchg
lods
aad
pop
mov
mov
test
pop
and
add
dec
cmp
xchg
repnz
stc
mov
add
imul
add
jp
and
into
in
jne
add
sbbl
mov
jmp
pop
mov
xchg
ds
adc
add
cmp
pop
xor
add
out
xchg
clc
inc
pop
mov
pop
and
add
lds
adc
add
je
repz
out
js
mov
add
add
aad
pop
out
push
aaa
jo
add
imul
aas
pop
cmc
insb
add
add
add
lods
push
jnp
or
add
sbb
pop
jl
sbbb
ss
pop
scas
cmpsb
pop
jne
mov
add
pop
mov
fbstp
add
add
lahf
iret
add
add
outsb
mov
pop
int3
mov
sub
in
push
das
xor
add
pop
lds
pop
mov
or
add
lret
inc
pop
add
or
inc
pop
imul
push
add
push
repz
addr16
daa
pop
push
add
push
fsubp
pop
pop
inc
pop
adc
add
sbbl
pop
sbb
add
pop
cmpsl
pop
sbb
pop
adc
add
lds
adc
pop
clc
ljmp
fs
sbb
add
dec
and
pop
adc
outsb
or
pop
jmp
pop
outsl
dec
outsb
daa
pop
adc
add
add
pop
lods
pop
xchg
cmc
pop
xchg
cmp
lcall
pop
dec
xor
add
fs
pop
rcrb
pushf
sbbl
xchg
sbbb
add
add
cmp
add
pop
mov
cmc
lds
xor
add
popf
cmp
test
les
lock
dec
mov
add
sti
and
add
add
ds
pop
loope
mov
add
and
add
add
sbbl
test
pop
ss
pop
pop
jns
loopne
dec
inc
pop
jo
add
out
add
add
push
pop
pop
xlat
xchg
jmp
pop
aaa
lret
dec
clc
adc
add
pop
pop
jmp
pop
mov
or
mov
jo
add
mov
pop
jp
xor
add
pop
pop
cmp
aas
insb
lahf
lods
pop
into
dec
push
add
fsts
jns
pop
lret
leave
rcrb
or
dec
imul
add
test
add
pop
and
add
sub
pop
js
add
mov
jbe
popf
testb
pop
lds
pop
xor
repnz
add
inc
pop
xor
add
pop
xor
add
fwait
scas
sbbb
and
add
xchg
lret
jnp
call
in
push
pop
cmp
mov
dec
sub
add
ret
pop
je
add
mov
pop
jg
mov
adc
je
or
add
pushf
insb
sbb
dec
and
add
xor
add
xchg
pop
into
or
add
jnp
adc
add
sbb
mov
mov
frstor
cmc
mov
add
mov
jg
sbb
push
add
in
jne
xor
add
pop
xor
add
enter
std
rcrl
sbb
pop
mov
dec
sbb
add
pop
push
add
fldt
xor
addr16
repz
and
add
cmp
jg
bound
add
cmp
pop
mov
xchg
add
outsb
mov
pop
cmc
push
mov
pop
push
xlat
outsb
ss
push
xchg
stos
rcrl
add
xchg
mov
push
mov
jmp
mov
pop
jb
add
xor
xchg
add
dec
push
adc
add
imul
add
sbb
scas
jno
add
je
fimull
add
xlat
xchg
xor
pusha
add
shrb
mov
add
call
std
leave
mov
add
add
xor
add
inc
add
mov
dec
mov
sub
pop
les
int
and
add
pop
out
hlt
lock
js
pop
add
add
mov
pop
and
add
add
inc
pop
clc
adc
add
pop
ficoms
dec
xor
add
pop
jb
add
pop
cld
movsl
pop
dec
lods
mov
add
mov
pop
sahf
mov
add
std
and
add
int3
pop
out
add
add
add
add
add
add
mov
pop
mov
cli
sti
push
add
push
add
sbbb
add
pop
mov
fwait
gs
test
es
in
fwait
imul
add
add
mov
imul
mov
mov
add
loopne
sub
xor
add
cmp
add
pop
pushf
and
add
jle
pop
jnp
test
push
or
outsb
inc
pop
outsb
cmp
jnp
mov
add
fcmovnb
pop
pop
test
adc
jne
das
js
pop
xor
add
add
push
add
add
add
insb
and
add
pop
faddp
pop
in
sbb
pusha
add
jno
add
fistpl
js
add
out
test
and
ss
cmp
adc
add
imul
shll
je
cwtl
xchg
aad
outsl
push
pop
fnstenv
add
and
add
or
mov
add
mov
add
lods
in
adc
add
add
ljmp
add
mov
lret
shll
inc
pop
shrb
in
dec
xor
add
pop
mov
std
ret
loop
icebp
arpl
add
rcrb
add
xchg
jae
add
add
add
jmp
fs
stc
pop
inc
add
es
pop
imul
daa
pop
inc
add
int
pop
movsl
pop
cmpsl
pop
scas
les
mov
insl
or
pop
sbb
pop
cld
aam
pop
mov
add
add
aas
sti
aad
add
add
pusha
add
nop
and
add
pop
mov
and
add
add
cmp
pop
pop
out
pop
out
int
daa
pop
movsb
pop
loop
pop
mov
cli
xor
leave
adc
add
leave
lods
movsl
pop
pop
pusha
add
pop
push
mov
mov
les
popa
add
sub
jecxz
mov
mov
out
int3
mov
pop
mov
out
test
pop
mov
les
inc
add
push
lahf
mov
scas
adc
adc
mov
add
ficoml
pop
imull
cmp
pop
jns
loopne
addr16
int
add
in
and
add
lahf
je
xchg
mov
popf
pop
xor
add
cmp
dec
adc
add
add
sbb
sbb
xlat
mov
pop
pop
fdivs
adc
add
pop
mov
sub
pop
ficoms
add
pop
mov
add
ret
push
add
jb
add
pop
push
add
hlt
add
add
insl
jmp
pop
add
fisttpll
inc
pop
aaa
sbbl
pop
ss
jg
pop
popl
imulb
cmc
stc
mov
jle
pop
mov
cmp
lods
sbb
add
dec
sbbb
add
pop
xchg
pop
mov
sub
inc
add
xchg
in
stos
xor
add
imul
je
xor
add
xor
add
pop
cmp
add
imul
pop
sub
add
ret
pop
or
ret
push
push
sbbb
pop
rcrb
pop
and
add
push
add
cmp
add
dec
stos
xor
sub
add
fistpl
add
add
pop
lahf
xor
pop
mov
or
add
fwait
das
pop
insb
adc
dec
inc
add
or
pop
aaa
fldenv
gs
fmul
mov
lods
or
mov
pop
int
punpckhdq
add
adc
add
add
aad
pop
mov
sub
incl
add
mov
xor
add
pop
lcall
pop
pusha
add
mov
add
pop
pop
mov
cmpsb
pop
mov
cmpsl
pop
and
aad
add
insb
insl
or
add
add
mov
jl
pop
scas
add
add
dec
push
pop
xlat
inc
pop
adc
add
mov
or
outsb
in
les
pop
dec
int
mov
aad
pop
sub
push
xor
add
adc
add
xor
add
ficoms
add
add
mov
sbb
add
jbe
fcomip
sbb
cmp
add
icebp
cmpsl
pop
test
pop
cld
jno
add
or
pop
jne
xchg
mov
inc
add
cmp
ljmp
loope
inc
add
loop
mov
add
cmp
xchg
aas
ret
pop
std
pop
mov
aaa
mov
aad
fidivs
mov
hlt
rcrb
out
add
stc
sahf
in
cld
movsb
pop
xchg
sar
mov
add
add
mov
add
dec
xor
add
mov
and
push
add
in
xchg
mov
gs
sbb
dec
out
sbb
sub
cmpsb
pop
lods
and
add
fcmovnu
jecxz
jne
cmp
gs
into
sbbb
add
push
add
xor
add
pop
xchg
and
add
pop
sti
lds
push
fs
lods
ret
pop
ret
pop
repnz
pop
sbb
xchg
add
xchg
dec
mov
push
sbb
add
fmull
pop
push
inc
add
popa
add
lock
xor
add
jno
add
sahf
dec
lods
adc
cmpsl
pop
sub
add
pop
pop
imul
add
int3
mov
pop
adc
add
dec
nop
push
cmp
jg
inc
pop
aas
jl
test
pop
xor
stc
adc
add
add
clc
push
add
cmc
jnp
sub
pop
les
lea
pop
insl
xchg
pop
inc
pop
add
add
cmpsl
pop
xlat
xchg
pop
push
add
jb
add
lahf
rcrb
imul
les
pop
mov
push
mov
mov
or
pop
dec
scas
dec
stos
bound
add
add
bound
add
cmp
inc
pop
sbb
ret
cmp
add
mov
xor
add
cmpsl
pop
xchg
xchg
mov
adc
sbbb
push
mov
pop
lahf
sbb
pop
mov
lret
pop
dec
adc
add
dec
fwait
xlat
mov
and
add
in
icebp
push
pop
nop
imulb
mov
pop
pop
sbbl
or
out
pushf
stos
mov
mov
pop
xor
icebp
jns
mov
pop
stos
sbb
pop
or
scas
adc
add
mov
enter
push
sbb
mov
add
pop
lods
loop
push
lea
jbe
add
ret
mov
xchg
dec
mov
outsb
stos
test
int
sbb
add
pop
mov
mov
sbb
loopne
icebp
js
icebp
insl
outsl
int3
ljmp
mov
push
aad
fisubs
mov
xor
add
add
adc
add
pop
jge
sbb
aas
dec
push
mov
add
les
shll
cli
dec
mov
mov
push
add
xchg
sbbb
ret
pop
gs
sbb
sub
add
add
mov
mov
pop
adc
add
add
iret
or
cmc
inc
pop
loope
es
mov
mov
adc
add
push
or
xor
sub
mov
xchg
idivl
jp
jmp
xchg
fs
push
pop
and
add
cmp
cmp
add
pop
add
add
mov
int3
out
pop
adc
add
xor
inc
add
mov
hlt
jl
xor
add
xor
add
pop
shrl
inc
add
cmpsb
pop
cmp
or
pop
mov
pop
xor
add
cld
sbbb
xor
add
push
dec
xchg
fsubrs
in
inc
pop
jmp
pop
bound
add
sbb
add
std
jmp
add
stos
imul
lock
pop
mov
pop
mov
add
adc
movsb
pop
sbbl
inc
add
imul
outsb
or
cltd
jp
das
push
add
mov
mov
call
jne
es
sbb
pop
in
sub
pop
sbb
add
sub
xchg
iret
shr
adc
push
adc
add
sbbl
add
add
stos
dec
mov
lahf
pop
add
add
lahf
outsl
mov
out
sti
mov
xor
add
icebp
sbb
pop
sbb
iret
js
xor
add
lcall
mov
sti
arpl
add
mov
add
add
pop
dec
loop
push
das
sahf
mov
xchg
inc
pop
add
add
add
outsb
adc
jo
add
pop
aad
mov
pop
sarl
clc
xchg
mov
add
sbb
sbbb
ja
negb
pop
and
add
pop
jns
pop
into
bound
add
insl
fimull
outsl
fwait
icebp
leave
cs
add
push
pop
push
add
jbe
pop
addr16
in
rcrb
sbb
pop
repz
dec
sub
add
add
inc
pop
lahf
aas
test
mov
fidivl
out
int3
mov
add
roll
or
lcall
add
into
int
scas
jle
pop
aaa
sbb
add
icebp
cmp
add
or
add
add
ss
sbbb
add
sbb
add
jae
add
xor
add
aaa
pop
jnp
imul
add
pop
pop
jl
push
add
test
mov
sbbl
or
add
pop
addr16
cmpsl
pop
jo
add
pop
fcom
daa
pop
cmp
add
push
add
mov
jg
pop
pop
xlat
sahf
les
jb
add
or
add
pop
test
pop
out
mov
dec
aad
pop
addr16
push
add
add
lock
pop
push
pop
push
pop
pop
mov
ss
outsb
rcrb
add
repnz
pop
loope
lcall
pop
sbb
add
rorl
fnsave
adc
add
jmp
pop
cld
dec
loope
gs
dec
xor
jmp
pop
jae
add
xor
add
aad
dec
fwait
les
ret
pop
mov
add
fldt
fstl
imul
in
lret
das
pop
dec
es
lret
pop
pop
jnp
les
pop
adc
add
push
add
pop
sbb
dec
les
sub
mov
mov
scas
mov
pop
les
fstpt
sub
fs
jns
pop
mov
cmp
push
jns
pop
push
pop
mov
lahf
call
test
or
xor
pop
adc
add
add
add
pop
cwtl
jnp
xchg
mov
out
iret
stos
jne
inc
add
in
mov
ja
inc
pop
enter
inc
add
lret
dec
bound
add
add
in
outsb
mov
pop
jno
add
xor
add
sarb
shll
add
fsts
add
cmp
add
sbb
pop
xor
add
add
sti
std
push
jo
add
and
add
outsb
sbb
dec
jne
push
pop
lea
mov
pop
cmp
addr16
int
pop
scas
insl
lret
bound
add
xor
push
out
nop
stos
aad
fmuls
and
add
iret
pop
dec
add
add
pop
mov
pop
mov
xchg
pop
push
mov
pop
dec
jae
add
add
pop
mov
jg
pop
xor
add
add
and
dec
xor
add
mov
sbb
imul
incl
mov
imul
pop
jmp
add
xchg
fmull
sbb
into
dec
pop
jbe
lcall
pop
add
ds
lds
ljmp
out
fidivrs
xchg
jns
cmp
pop
jge
hlt
filds
adc
add
mov
jns
push
movsb
pop
add
add
mov
add
add
xchg
pop
sbb
xchg
aad
push
pop
sub
lahf
pop
cmpsl
pop
sahf
mov
push
add
adc
add
cwtl
lea
add
cmp
aam
scas
xchg
or
out
fimull
mov
inc
add
cwtl
adc
aas
inc
pop
push
pop
sbbb
pop
and
add
filds
add
mov
ljmp
add
add
outsl
pcmpeqb
jae
add
pop
out
dec
fwait
push
stos
jno
add
add
lock
cmp
add
lock
cmp
pop
cltd
lcall
lock
pop
fwait
insl
mov
dec
pop
or
lock
push
pop
pop
pop
jo
add
jbe
pop
fstl
add
fdivp
idivb
pop
iret
cmp
add
cmpsl
pop
adc
outsb
stc
gs
scas
int3
jo
add
lcall
mov
movsb
pop
dec
and
add
add
add
pop
mov
lock
pop
inc
add
push
push
in
lcall
sbb
test
pop
lret
mov
pop
aaa
jo
add
add
add
jg
pop
cwtl
ret
es
jns
mov
mov
add
add
inc
pop
or
test
pop
push
add
xor
cmp
pop
enter
stc
mov
push
add
shld
test
or
lret
push
mov
sahf
xor
add
add
sahf
test
js
xchg
lods
cld
sbb
push
int
and
jmp
popa
add
int
fldl
mov
pop
add
add
decb
rcrb
add
clc
jp
jg
sbb
inc
pop
jl
out
push
or
add
cwtl
cmp
add
sbbl
pop
fwait
jl
add
shr
out
mov
mov
scas
cld
arpl
add
push
add
pop
mov
int3
pushf
dec
pop
xchg
and
pop
and
add
inc
add
and
inc
add
imul
pop
std
xchg
add
out
aas
mov
mov
repz
add
or
xchg
xor
add
and
fldcw
mov
pushl
add
inc
pop
xor
bound
add
pop
pop
mov
add
cltd
cld
sbbl
pop
xchg
ret
add
lret
jg
js
movsl
pop
jp
pop
ds
test
add
pop
mov
pop
mov
push
pop
jmp
add
mov
mov
test
lcall
imul
sbb
rorb
adc
dec
jbe
sub
add
or
inc
add
xor
pop
mov
add
pop
inc
pop
mov
add
hlt
adc
add
cltd
dec
in
aad
clc
xchg
daa
pop
shr
jnp
mov
add
push
pop
out
add
add
out
xchg
pop
mov
adc
add
jnp
into
fistpll
ret
lret
pushf
sbb
or
sub
cli
jae
add
imul
ss
sbb
jb
add
pop
xor
add
add
sub
add
add
stc
out
adc
add
pop
mov
add
sub
sbb
add
sub
sub
cmpsb
pop
in
pop
je
add
inc
add
xor
add
pop
sbbl
in
daa
pop
sbb
add
pop
xchg
ret
pop
ds
or
pop
ds
cmp
jb
add
pop
idivl
add
fadd
pop
xchg
mov
inc
add
lds
or
cld
test
pop
je
pop
ss
cld
out
sbb
nop
lds
sbbl
add
fwait
pushf
sub
adc
add
xchg
hlt
jb
add
pop
clc
aas
filds
pop
popf
hlt
cmpsl
pop
stos
jmp
add
sbb
lea
imul
repnz
in
stc
popa
add
flds
mov
in
cmpsb
pop
xchg
mov
pop
cmp
push
add
lret
test
add
sbbl
repnz
les
add
clc
es
aaa
jns
pop
jl
and
adc
add
cmc
jmp
test
push
mov
lods
pop
mov
jae
add
add
jle
adc
sbb
sub
repnz
sbbb
mov
fisubl
push
add
int
pop
xchg
push
pop
pop
scas
out
jle
cmp
sbb
les
pop
in
lret
mov
add
add
and
into
call
popa
add
inc
pop
sub
pusha
add
dec
xchg
push
add
mov
lcall
inc
pop
xor
add
mov
and
shl
pop
repnz
imul
add
pop
outsl
cmp
psubusw
adc
add
enter
mov
pop
sti
mov
mov
nop
jae
add
outsl
mov
pop
sub
mov
pop
repnz
lcall
push
cld
in
mov
into
arpl
add
pop
push
and
adc
add
xchg
rcrb
adc
ja
sbb
add
add
gs
js
push
pop
cmp
or
sbbb
fidivl
add
cmp
ror
popf
push
add
mov
out
mov
dec
mov
insb
movnti
pop
jecxz
cmp
movsb
pop
xchg
shlb
add
add
jb
add
add
mov
xor
sbb
pop
out
mov
inc
pop
cmpsl
pop
out
ret
pop
mov
iret
add
dec
push
add
nop
mov
mov
rcrb
aad
pop
mov
add
pop
fs
cmc
sub
pop
cmp
pop
iret
sbb
or
ret
test
xchg
cmpsb
pop
mov
fstl
pop
imul
pop
cltd
sub
int3
gs
xor
add
lret
add
arpl
add
add
pop
adc
add
add
pop
bound
add
pop
cmp
or
cmp
insb
mov
cmc
mov
mov
sbb
push
pop
sarl
pop
pop
out
rcrb
loop
sub
pop
out
arpl
add
add
or
add
cwtl
xor
dec
xchg
cmpsl
pop
inc
add
mov
push
xor
add
xor
addr16
punpcklbw
add
inc
add
push
add
je
add
das
imul
ljmp
or
pop
push
add
test
add
stos
movsb
pop
notl
add
mov
pop
sbb
lds
cmp
xchg
bound
add
pop
lahf
or
xchg
jecxz
adc
add
outsb
sti
into
xor
add
popf
sbbl
cwtl
xor
add
add
pop
mov
fucom
pop
adc
add
xchg
cmpxchg
add
pop
pop
lcall
scas
scas
dec
dec
fsubrs
jmp
scas
loope
int
xchg
cltd
loope
add
add
pop
inc
add
dec
inc
pop
rcrb
pcmpeqd
sti
les
sub
xor
add
add
fs
push
add
lcall
add
sub
add
popf
in
sbbl
and
add
xchg
lret
icebp
sbb
mov
pop
dec
test
pop
lahf
outsb
fneni(8087
pop
jae
add
test
pop
push
mov
test
inc
pop
gs
repnz
js
add
mov
cmpsb
pop
loopne
xchg
inc
pop
mov
scas
xor
pop
mov
pop
and
add
pop
jbe
out
jb
add
pop
push
add
pmulhuw
sbb
push
jle
pop
fs
mov
sub
pop
icebp
inc
add
push
add
push
mov
pop
mov
ds
mov
pop
out
sbbl
push
fisttpll
mov
imul
or
ja
stos
sub
add
sbb
daa
pop
bound
add
add
mov
add
add
pop
pop
lcall
dec
push
lods
mov
add
out
mov
push
sub
test
pop
jnp
jo
add
dec
out
add
add
add
sbbb
cmp
push
pop
push
add
inc
add
je
pop
test
or
adc
add
mov
jge
dec
dec
js
adc
pop
add
and
fistps
cmp
mov
and
mov
or
pop
mov
cld
aaa
into
aaa
loope
cwtl
sbbl
add
jecxz
mov
mov
jns
xchg
cmp
inc
add
std
cmp
add
and
add
sub
pop
fldt
jno
add
add
dec
push
add
ds
ja
and
add
pop
sub
xchg
fmulp
idivb
inc
pop
enter
sub
popf
lea
add
push
sarl
fisttps
add
into
dec
sbbb
inc
pop
notl
add
push
xor
mov
pop
sbbb
xchg
cltd
lret
pop
lcall
enter
mov
pop
adc
add
cmc
mov
popa
add
addr16
sbb
inc
pop
ljmp
insl
ds
add
add
add
add
pop
xor
add
add
repz
ja
mov
mov
movsb
pop
sub
add
xor
add
pop
ret
pop
add
mov
les
pop
dec
ret
pop
sub
add
repnz
add
pushf
push
out
cmpsl
pop
test
pop
xchg
sbb
add
add
inc
pop
inc
pop
imul
pop
jmp
pop
and
add
xchg
xor
xor
scas
or
push
or
lret
sub
add
imul
mov
add
pop
sbbl
