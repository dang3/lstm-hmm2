xchg
neg
dec
jnp
sbb
mov
xor
cmp
add
add
jle
cltd
aad
cmp
andl
mov
insl
push
add
out
add
add
pop
insl
push
or
jo
decb
mov
mov
imul
orl
fcmovnu
inc
add
adc
add
mov
and
cmp
mov
jmp
cmp
addb
roll
js
xchg
sbb
fsubl
addr16
lret
mov
imul
arpl
rolb
enter
mov
mov
add
lahf
mov
add
int3
les
add
mov
add
xchg
cmp
jp
add
jb
pop
add
loop
dec
inc
fcoml
movsl
adc
jae
add
adc
pop
add
clc
dec
je
aam
pop
mov
test
add
test
sbb
adc
mov
add
xlat
fiaddl
pop
add
adc
adcl
pop
jno
add
sbb
outsb
jo
movb
pop
xchg
nop
add
add
int
hlt
add
xor
outsb
xchg
aad
js
cltd
jnp
xchg
loop
ffreep
add
rcll
add
add
ja
add
xchg
push
add
mov
mov
push
rolb
enter
add
or
pop
ret
cmc
dec
enter
gs
arpl
add
add
add
and
mov
pop
push
add
add
add
repnz
mov
add
sub
add
in
push
add
add
outsb
jno
sti
out
sti
and
hlt
add
add
dec
adc
test
add
or
test
aas
sbb
int3
xchg
add
addb
fdiv
jno
cwtl
inc
or
aad
rolb
add
lea
sbb
adc
jmp
or
pop
data16
loope
daa
testb
push
add
add
jae
add
add
add
clc
adc
dec
pop
inc
add
dec
movb
pop
aaa
stos
sahf
jb
lock
jg
add
pop
cmp
add
sbb
jns
or
mov
dec
movzwl
add
int
mov
int3
mov
add
mov
mov
xchg
adc
xchg
add
ret
add
dec
data16
fsubs
fsubp
add
sub
xchg
add
in
add
test
add
add
add
test
movb
faddp
cs
inc
add
lahf
in
rolb
add
add
in
stc
loop
mov
jnp
jo
cwtl
fwait
fwait
jg
iret
aaa
stc
push
mov
les
out
lods
int3
xlat
fnstsw
pop
mov
imul
sbb
jl
add
pop
sub
add
cs
add
add
push
add
lahf
push
rolb
jne
imul
pusha
add
xor
cmp
jbe
jae
add
add
add
add
mov
or
mov
mov
xlat
xchg
add
mov
mov
dec
fwait
adc
lret
pop
xor
push
add
mov
cwtl
call
jge
popf
mov
fisubs
mov
mov
addb
add
sbb
daa
roll
push
add
pop
mov
cld
iret
arpl
push
add
add
scas
jnp
inc
add
add
addl
mov
add
or
cmp
and
lds
sbb
add
icebp
loope
inc
mov
addb
lret
add
push
rolb
cmp
pop
xlat
lock
add
test
sbb
push
add
add
jno
cmp
xor
cmp
hlt
add
add
inc
add
push
in
cli
loop
mov
add
add
data16
mov
sub
mov
add
hlt
add
addr16
movsl
cli
adc
add
push
add
sub
rolb
mov
push
add
or
ret
sub
mov
sub
mov
add
fistps
mov
add
arpl
add
inc
sub
add
pusha
add
test
sbb
add
jecxz
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
into
out
int3
inc
add
loope
add
push
or
mov
lea
mov
inc
add
xchg
add
add
rolb
add
fcompl
sbbl
mov
add
mov
sarl
repnz
push
add
jns
mov
mov
add
jne
mov
mov
mov
fmuls
sbb
cld
addb
jae
dec
xchg
int
and
add
push
out
mov
add
pop
aad
push
lods
mov
fcoml
add
or
out
jno
add
xor
xor
jle
and
addl
push
add
add
mov
push
add
in
add
movaps
jl
add
arpl
add
rolb
in
js
add
push
add
add
mov
nop
add
add
sub
pop
loop
or
test
xor
xlat
loop
mov
add
push
add
dec
pushf
sbb
mov
jle
lret
jae
add
push
add
outsb
int3
outsl
and
pop
mov
popa
movsl
popf
cmp
data16
add
add
add
xchg
into
test
cmp
sbb
pop
stos
mov
rcl
add
mov
jp
cmpsb
add
push
add
adc
loope
dec
outsl
push
xlat
das
insb
xor
xchg
arpl
xor
jmp
add
loop
jl
rolb
cld
mov
mov
add
jg
iret
out
inc
add
add
cmc
xchg
or
add
and
mov
in
pop
cmpsl
push
mov
sbb
mov
stc
cmp
pop
cmp
daa
movsl
lahf
sbb
or
add
stos
and
mov
sub
xlat
mov
lret
pop
lret
push
add
std
push
add
xchg
mov
mov
mov
aas
adc
movsl
pop
out
hlt
add
inc
add
and
adc
sub
mov
mov
push
add
sbb
pop
icebp
dec
inc
mov
push
mov
mov
cmp
sub
das
clc
call
jg
add
add
add
cli
mov
sub
nop
add
add
jmp
add
and
mov
into
or
mov
cmpsl
add
jmp
and
mov
sub
add
add
rolb
mov
pop
and
add
into
into
outsl
popa
add
jmp
add
inc
add
test
push
add
and
into
xchg
push
add
add
add
cmp
inc
sub
cmpsb
add
std
or
inc
add
sbb
push
ljmp
push
add
add
xchg
add
or
cmpsl
mov
add
inc
mov
scas
sub
jbe
pop
add
lods
xor
add
add
addb
enter
add
mov
sub
add
add
inc
add
sbb
add
push
add
xchg
pop
jne
loop
movb
mov
pop
test
xchg
and
mov
loopne
or
addb
add
mov
inc
sub
in
ja
dec
mov
cli
pop
pusha
add
or
sbb
jmp
cmp
add
mov
decb
icebp
and
add
ret
push
xchg
push
cmpl
roll
add
mov
add
sbb
iret
sbb
xor
dec
hlt
add
mov
rcl
test
jne
cmp
addb
add
fistpl
pop
data16
repnz
add
add
xchg
cmpsb
add
and
fwait
mov
lahf
inc
add
add
mov
add
bound
mov
push
lds
dec
mov
add
add
sub
lods
or
addb
cld
dec
shl
xchg
sahf
cmp
push
movsl
jno
test
add
xchg
sub
out
add
mov
insl
mov
mov
pop
sbb
add
rolb
mov
mov
adc
cltd
mov
out
mov
call
movb
add
jae
jo
insb
mov
pop
sbb
add
push
or
add
mov
add
mov
jno
inc
add
jmp
bound
mov
ljmp
jno
pop
pop
rolb
and
or
add
jp
scas
movups
lahf
and
xor
jmp
inc
add
std
or
jecxz,pn
add
mov
add
add
add
xor
popf
out
movsl
xor
mov
fistl
ja
sbb
add
iret
fstpl
add
dec
cli
adc
add
js
jle
cld
and
add
add
push
mov
pop
pop
jae
push
add
add
mov
add
add
sbb
jle
add
sbbl
in
cld
ljmp
add
inc
rolb
scas
test
adc
pop
pop
mov
add
jne
addb
add
scas
sub
xchg
mov
fcomi
or
xchg
out
call
cli
jo
jbe
cmp
outsl
dec
testb
ljmp
cmp
add
add
add
pop
xor
out
dec
js
inc
add
cmc
das
mov
xchg
add
xor
add
add
lds
inc
add
xor
jae
cmp
inc
add
pcmpeqb
repnz
addb
add
mov
xor
cmp
cltd
ds
ja
add
cmc
mov
mov
or
test
movsb
add
or
push
add
mov
lahf
cli
nop
add
xor
addl
pop
roll
imul
or
add
add
add
pop
in
addb
mov
outsb
mov
mov
cmp
inc
add
inc
sahf
aas
outsb
push
std
movsl
and
ficompl
add
xchg
leave
bound
mov
loop
add
push
add
dec
rolb
scas
and
mov
pop
xchg
add
adc
arpl
outsb
loope
add
mov
add
test
fstpl
adc
out
fisubrs
mov
fisttps
pop
mov
add
addb
xchg
sub
cmpl
in
mov
xchg
add
add
inc
add
cwtl
test
fnstsw
lcall
mov
add
add
out
js
dec
outsl
push
add
test
add
call
fwait
cmpsb
add
popf
mov
add
add
les
out
addr16
addb
std
jmp
mov
add
ljmp
sbb
xor
leave
andl
add
mov
push
add
sub
pop
xchg
arpl
scas
mov
inc
add
mov
add
pop
or
call
add
add
dec
dec
mov
repnz
add
std
inc
jg
enter
mov
mov
add
mov
daa
cltd
and
add
add
aaa
dec
and
mov
lock
subl
std
mov
mov
repnz
jns
movb
sub
cmc
xchg
pop
pop
testb
add
mov
add
mov
add
aas
jae
add
cmp
hlt
add
mov
lds
add
mov
mov
stos
repz
hlt
add
aad
xchg
cmc
jmp
xchg
aas
addb
pushf
jns
add
mov
add
in
loop
mov
jp
stos
decl
in
xchg
add
roll
mov
add
add
cmpsl
or
cld
pop
pop
out
lods
int
add
in
iret
cmc
leave
inc
add
rolb
sub
insb
mov
jl
das
push
add
add
std
add
pop
xlat
mov
add
add
adc
sbb
and
adc
push
add
add
mov
rolb
pop
in
pop
ficomps
add
push
add
fucom
add
jle
sub
and
nop
add
mov
out
cld
lret
mov
popa
mov
push
xor
ja
js
add
arpl
sbb
add
xor
arpl
add
jne
mov
add
das
std
jg
jnp
jbe
sti
pop
push
add
mov
mov
push
add
add
push
add
or
icebp
dec
sub
xchg
cmp
add
out
adc
mov
mov
mov
add
and
mov
jmp
push
lret
movsl
icebp
lret
aam
stc
and
lret
mov
push
js
lds
or
add
mov
inc
add
mov
add
jle
movsl
mov
stc
test
call
jo
addb
lahf
add
les
and
add
add
add
les
mov
enter
add
push
add
mov
lods
jno
sub
xor
je
out
dec
movl
add
add
clc
out
pop
lret
add
inc
add
add
mov
or
rolb
aam
fcomi
loopne
test
jg
fsubrl
ja
xchg
lahf
push
sub
add
xchg
add
or
ret
xor
push
add
addr16
pop
push
lods
addb
add
add
enter
adc
imul
repnz
mov
mov
mov
mov
mov
std
xchg
add
adc
popa
cmp
add
add
add
mov
ds
inc
lea
add
mov
mov
mov
lret
push
inc
add
add
xchg
xor
jle
add
out
sbbl
mov
pop
lcall
sub
xor
mov
incl
in
leave
xchg
add
test
inc
add
pushf
mov
adc
add
dec
pop
arpl
add
loop
mov
xor
sub
add
dec
sbb
insb
dec
xor
cmp
add
fstpt
sub
sbb
lds
add
mov
insb
pop
out
dec
sbb
iret
call
in
addb
cmp
xchg
mov
add
add
dec
jecxz
inc
xchg
jo
nop
add
push
add
pop
and
mov
xor
fwait
pop
insl
sub
cmp
loope
add
and
jb
inc
js
repnz
lock
add
inc
add
dec
cli
cmp
add
add
add
add
shr
mov
add
add
inc
add
inc
dec
dec
fldln2
pop
and
mov
adc
aam
shld
add
pop
pop
push
add
pcmpgtb
xchg
add
sbb
push
add
add
bound
mov
add
mov
stc
inc
add
add
jl
add
scas
cmp
mov
jo
jge
push
add
cmpsl
xor
mov
mov
add
xchg
insb
js
sbb
inc
add
movb
add
mov
bound
mov
inc
add
fldl
and
add
jmp
add
mov
add
add
mov
enter
inc
add
les
or
sbb
add
mov
add
adc
add
setnp
pushf
js
das
add
clc
mov
adc
add
add
jne
add
add
add
add
or
leave
hlt
add
and
xchg
addb
xor
rolb
add
add
mov
mov
sbb
add
or
in
add
mov
cmpsb
add
aam
dec
and
or
clc
popl
mov
aas
xlat
jge
cmp
add
or
mov
rolb
add
cmp
dec
xchg
xor
jmp
add
xchg
add
outsl
mov
pusha
add
add
add
add
out
iret
fldl
add
add
in
xor
call
add
ret
cmp
sub
pop
lcall
out
sub
sahf
andl
adc
and
pushf
repnz
lods
addb
sub
pop
pushf
inc
add
out
pop
addb
das
add
dec
dec
xorl
add
sti
aad
ffree
add
enter
xchg
out
call
ret
adc
mov
imul
add
cs
add
popf
cli
or
add
fidivl
mov
add
fsubs
outsl
xor
adc
cmp
hlt
add
psadbw
lret
gs
insb
and
outsl
shr
cmc
out
popa
push
add
or
pusha
add
cltd
xor
repz
add
movsl
pop
movsl
jbe
sbb
xor
add
pop
push
xchg
add
add
inc
insb
mov
adc
inc
add
fcmovne
lret
add
add
xor
dec
les
popa
add
pop
pop
movsl
push
add
lock
inc
ja
mov
add
repnz
or
jmp
loopne
sub
add
push
mov
inc
jmp
push
add
inc
add
ret
xor
sti
inc
add
bound
mov
add
lahf
push
add
add
add
fadd
rolb
sbb
pop
xor
push
add
loopne
pop
mov
add
add
add
mov
mov
add
add
jae
mov
std
jo
jns
aas
fcom
add
add
sub
cmp
add
sub
push
mov
or
xor
daa
add
add
fldenv
push
add
aam
xchg
add
mov
iret
jne
sbb
lret
add
and
mov
cltd
pop
dec
jb
dec
mov
add
mov
add
in
inc
add
dec
dec
ss
int3
mov
and
dec
cmpsl
sahf
add
or
repz
sub
test
add
cli
inc
add
dec
je
cmp
or
in
pop
pop
int3
mov
sbb
pop
movsb
add
lods
sbb
test
sbb
pop
cmp
mov
push
jecxz
add
or
add
mov
add
lcall
fistpll
jmp
fdivs
sahf
das
cmpsl
hlt
add
negl
add
add
pop
xchg
sahf
pop
cmp
repz
cmp
rolb
call
out
pop
lods
or
out
xchg
lahf
enter
lods
pop
and
mov
imul
fwait
mov
fucomi
scas
xor
fldenv
add
add
sub
jmp
outsl
dec
mov
mov
add
mov
xorl
test
imul
add
les
daa
push
add
sub
sub
cmpsl
dec
xor
inc
sub
sub
dec
clc
jno
call
push
add
mov
jne
add
ds
and
add
mov
jecxz
daa
int
cmp
jg
shr
int
add
add
jno
inc
inc
jl
xchg
push
add
xor
sti
xchg
dec
inc
add
add
mov
mov
add
sub
nop
add
add
sub
les
add
xchg
add
cltd
sbb
cmp
add
or
loop
out
lret
leave
mov
out
pusha
add
add
addr16
rolb
aaa
lcall
loopne
daa
out
pusha
add
mov
and
aad
sahf
inc
push
xchg
lds
adcl
ds
sbb
jb,pn
addb
add
jge
adc
xlat
sbb
repz
sub
jae
add
add
push
add
insl
testb
outsl
and
add
out
mov
add
add
add
rcrl
add
punpckhwd
add
cmp
add
mov
lret
push
sbb
sti
outsl
int3
cmp
xor
lfs
jle
insl
int
add
add
lret
add
add
push
adc
les
sbb
jns
add
xor
mov
loope
add
stc
lods
sbb
lods
gs
rolb
mov
outsl
stc
movsl
imul
mov
add
push
in
and
mov
xchg
pop
push
jns
jb
dec
leave
ds
out
fimull
add
add
jge
dec
dec
loop
pop
adc
and
arpl
add
dec
xchg
add
add
dec
aas
test
adc
sti
and
out
xlat
arpl
jp
add
into
les
loope
stos
push
add
jns
sbb
sub
xchg
push
xchg
add
mov
test
xor
pop
int3
or
cmc
inc
add
stos
mov
testb
in
push
adc
lods
mov
add
aad
data16
add
lods
outsl
stos
les
xor
mov
jns
gs
add
sbb
add
push
fldenv
aam
jecxz
add
mull
popa
cmp
push
ljmp
sbb
loopne
adc
add
add
add
mov
popa
mov
or
add
xchg
nop
add
imul
ud1
cmp
cltd
ljmp
out
dec
testb
mov
add
push
stos
mov
add
lahf
sub
add
inc
add
xchg
add
push
push
add
add
add
orl
add
add
add
mov
jo
outsl
movb
mov
jle
sub
add
mov
decl
lods
dec
xchg
in
mov
push
test
std
push
add
movsl
aad
add
add
pushf
rolb
sub
pop
xorl
add
add
enter
pop
jne
jae
data16
in
cmc
rorl
popa
add
add
mov
outsb
mov
out
inc
and
pop
add
xchg
repz
add
lret
data16
inc
or
add
in
jno
imul
push
add
mov
add
add
or
adc
pop
loope
addb
data16
mov
jl
testb
add
xchg
add
cmp
bound
mov
push
cmp
das
sbb
xchg
popf
setno
popa
testb
pop
sbb
add
inc
xchg
cmp
aam
imull
jne
sbb
adc
pop
jmp
ja
jne
add
add
and
loope
mov
dec
add
repz
add
mov
stc
and
add
pushf
and
mov
push
add
adc
add
push
add
xchg
add
test
xor
repnz
add
xlat
or
sbbl
mov
pushf
lret
add
mov
add
add
rolb
add
add
rolb
add
add
bound
mov
inc
pmaxsw
push
add
in
data16
call
push
add
inc
add
imul
xor
out
into
movb
pop
jbe
pushf
pop
adc
add
add
pop
fimull
fadd
mov
add
movsb
add
dec
enter
add
cs
add
testb
add
add
leave
addr16
push
add
ret
idivl
jecxz
inc
add
insl
cltd
lock
xchg
cmc
mov
pop
mov
aas
sub
int3
int
xor
sbb
adc
ret
or
xchg
lret
movl
xchg
add
push
add
add
add
pop
xchg
aas
fsubrl
jne
push
add
xor
sub
ss
add
cmp
add
add
xchg
hlt
add
imul
movsb
add
xor
add
fimull
cli
dec
fdiv
les
idivl
add
ljmp
add
enter
faddp
inc
add
fisubs
cwtl
sahf
ret
fcmovnu
shll
add
xchg
sub
jecxz
add
lods
test
jl
add
mov
mov
add
in
pop
fnsave
sub
inc
add
out
out
push
add
imul
add
inc
cmpsl
lods
out
sahf
adc
scas
pop
jmp
cmp
test
and
mov
idivl
lea
inc
add
add
imul
mov
add
insb
mov
push
outsl
jle
inc
in
add
sar
stc
clc
jnp,pt
ret
add
insb
mov
xor
or
sub
mov
sub
fistl
mov
or
mov
bound
mov
add
and
mov
fildll
xchg
add
add
add
add
inc
add
add
push
add
mov
xchg
fdivrl
pushf
frstor
out
xchg
add
add
add
add
divl
mov
lea
mov
add
dec
jno
adc
mov
pop
sub
test
insb
add
dec
sbb
add
add
add
add
in
arpl
fdivl
add
and
mov
rolb
lahf
mov
mov
scas
cli
mov
dec
lea
mov
add
loope
mov
sahf
push
and
add
rolb
lods
gs
add
mov
ret
or
rcll
add
mov
dec
pop
sbb
add
push
hlt
add
divl
add
xor
mov
add
jb
je
rcl
add
add
add
outsb
jg
movsb
add
add
mov
ret
movsb
add
loop
lds
xor
and
mov
add
jae
imul
aad
pop
xchg
cmc
jle
add
mov
bound
mov
add
push
add
add
lcall
add
rolb
ja
add
add
lret
and
mov
mov
and
mov
pop
dec
pop
insb
clc
xchg
mov
and
xor
and
mov
sbb
stos
pushf
mov
jns
loopne
in
jo
loope
jo
jle
add
add
mov
fstpl
mov
cli
fadd
add
mov
loop
xchg
sbb
mov
add
xor
addb
mov
fbld
mov
mov
and
cmpsl
inc
add
mov
or
lods
into
fnstcw
mov
or
mov
sbb
lahf
movsl
lcall
add
add
icebp
daa
inc
es
mov
mov
je
pop
testb
addr16
cmp
dec
push
add
mov
mov
push
lret
and
mov
hlt
add
cmp
mov
arpl
xchg
add
out
movsl
loop
insb
out
insb
loopne
cmp
xor
mov
add
mov
push
out
ret
add
aas
ja
add
sub
sbb
fwait
push
data16
mov
add
add
gs
add
fcoml
add
add
cmp
xor
xchg
icebp
bound
mov
xlat
push
add
add
add
lds
mov
add
lcall
inc
mov
add
add
in
jbe
rolb
repnz
pushf
sub
rolb
repnz
arpl
add
push
cmp
push
sahf
mov
pop
xchg
add
fidivs
add
pop
inc
add
sbb
dec
xor
fsubrl
add
dec
pop
and
add
bound
mov
popf
mov
add
mov
mov
add
hlt
add
add
jns
add
add
aad
nop
add
add
sub
insb
in
iret
mov
arpl
shrl
add
mov
add
jmp
cld
inc
mov
std
mov
jns
or
add
mov
sbb
mov
ret
add
dec
in
mov
pop
fstpt
les
mov
pop
or
addb
aaa
xor
jmp
int3
dec
fmull
cmpsb
add
fimull
mov
out
jnp
jl
mov
add
add
add
arpl
add
add
mov
filds
mov
jg
cmpsb
add
lds
leave
push
add
hlt
add
ljmp
xor
ret
xlat
xor
add
int
iret
mov
jno
aaa
or
push
jno
outsb
clc
pop
outsl
xchg
add
xchg
mov
faddl
pop
dec
mov
ret
incb
jno
add
push
fnsave
into
cmpsl
and
aaa
pop
lods
adc
data16
test
mov
add
lea
xchg
in
js
add
xchg
add
add
dec
xor
fdivrs
lods
imul
ds
addb
in
ret
add
loop
jb
fldl
sti
jl
add
add
addb
call
add
cmp
cmpsb
add
and
dec
mov
negl
add
add
daa
adc
insb
pushf
loope
add
pop
sub
add
ret
mov
testb
insl
pop
pop
mov
mov
pop
movb
xchg
inc
add
pop
jecxz
push
add
jl
jle
fdiv
add
add
add
xorl
xorl
jnp
jo
pop
stc
xchg
add
repnz
add
je
pop
lods
dec
inc
add
add
sub
push
add
adc
lock
mov
inc
nop
add
xchg
js
in
sub
dec
popa
loopne
clc
or
add
fstpl
sub
into
pushf
jbe
pop
cmpsl
xchg
mov
mov
jno
add
mov
add
dec
push
push
add
dec
imul
dec
loope
push
arpl
add
rcll
inc
add
add
cld
jecxz
xchg
into
stc
lret
add
add
add
add
add
imul
add
jl
clc
dec
sbb
dec
adc
add
fs
mov
fbstp
jnp
add
les
and
scas
mov
add
popa
je
push
mov
jge
sbb
dec
adc
movsb
add
shl
pop
inc
add
xchg
add
pop
or
pop
lahf
or
jnp
cmc
xchg
xchg
addb
cwtl
out
pop
sub
pushf
lcall
out
xor
sub
inc
xlat
push
add
insb
mov
jno
test
int
add
loopne
xchg
add
pop
mov
lcall
push
fiadds
add
aad
imul
and
xchg
add
add
test
xor
fwait
iret
push
add
mov
stos
cmc
jl
mov
jmp
and
adc
add
pop
ss
hlt
add
mov
pop
adc
int3
fdivp
and
arpl
outsb
std
dec
les
rolb
in
sbb
loopne
cld
mov
pop
je
xchg
add
add
lahf
daa
sub
add
enter
jle
arpl
inc
cmpsb
add
cmc
movsl
int
lods
bound
mov
mov
add
mov
adc
xchg
stos
in
in
out
xor
mov
add
scas
jecxz
mov
add
lahf
cld
or
stos
sub
add
cmp
insb
cwtl
add
cmp
add
fwait
pop
add
mov
mov
clc
add
jbe
dec
ret
push
inc
add
add
add
mov
fcomip
add
addr16
add
add
add
add
or
sub
test
xchg
add
rolb
push
add
mov
add
cltd
mov
dec
imul
pushf
fwait
daa
jl
and
mov
add
jne
add
insb
xor
dec
gs
push
sbbl
pop
cmp
adc
pop
and
mov
js
sub
add
add
add
sub
xor
outsb
icebp
aad
in
adc
stos
orl
out
lret
cwtl
lods
stos
std
data16
add
xor
decl
add
add
mov
mov
add
sub
cltd
hlt
add
gs
add
mov
lcall
lahf
ret
cmp
lcall
jbe
mov
jae
jne
add
pop
mov
nop
add
add
daa
cmp
mov
add
sbb
ljmp
adc
scas
gs
push
add
cli
addr16
arpl
shll
or
add
mov
adc
add
add
mov
sub
mov
xchg
add
daa
cmpsl
call
add
or
insb
dec
mov
inc
or
add
int3
add
xchg
imul
enter
sbb
add
add
sbb
mov
push
outsl
lcall
mov
or
and
sub
repz
call
add
add
mov
enter
sahf
iret
push
add
lock
add
test
add
add
cmpsb
add
outsl
fcoms
cmp
add
add
add
out
popa
or
cmp
or
sub
add
mov
add
cwtl
daa
adc
inc
add
test
dec
mov
adc
rolb
sub
loop
pop
jmp
add
push
in
fldenv
insl
xchg
or
add
rolb
and
addb
adc
fldl
add
ds
add
add
cmp
push
jmp
or
mov
rolb
xchg
add
jns
addl
xor
mov
mov
inc
jge
adc
enter
xor
xchg
pop
clc
nop
add
or
xor
adc
hlt
add
pop
mov
dec
mov
mov
add
data16
push
add
add
je
cmp
xor
daa
outsl
xor
enter
cli
sahf
xchg
add
dec
scas
stc
push
add
push
mov
adc
push
mov
rorl
cmpsl
or
call
repz
test
add
add
add
add
dec
pop
sub
dec
mov
jp
add
and
mov
cmc
jns
cwtl
rolb
lret
scas
repnz
imul
imul
add
cwtl
mov
sbb
xor
loope
hlt
add
add
fldcw
xor
leave
dec
sub
mov
mov
push
add
into
push
jmp
mov
daa
das
add
mov
data16
fiadds
call
cmp
xor
add
inc
add
xor
lcall
xchg
fdiv
xchg
add
lahf
jb
push
jno
add
add
mov
add
mov
mov
jnp
xor
add
repz
push
adc
bound
mov
js
add
sahf
dec
ds
add
lea
adc
add
popa
adc
shr
cmp
add
outsb
arpl
jo
dec
clc
popf
rolb
pop
stos
pop
push
add
jge
add
add
push
add
inc
or
add
test
jbe
jns
jnp
or
add
add
sub
add
inc
add
lcall
adc
iret
insl
cli
mov
iret
mov
gs
lock
add
push
je
addb
mov
sub
leave
rolb
sbb
add
adc
mov
out
adc
mov
add
fnstcw
sub
in
push
cwtl
adc
mov
loop
cmp
cmp
add
xchg
add
mov
add
add
mov
lret
or
pop
sub
pop
mov
rolb
fisubrs
xchg
add
add
add
add
add
add
jb
pop
mov
and
mov
mov
pop
and
mov
test
or
push
loopne
mov
stc
addb
cmp
add
mov
add
dec
dec
bound
mov
mov
fwait
jecxz
push
or
sbb
ficoml
jge
dec
mov
add
or
mov
aad
cmp
in
ljmp
inc
add
add
in
dec
pop
xchg
in
mov
add
add
jae
add
mov
and
mov
pop
add
mov
out
dec
add
fildl
testb
pop
mov
jns
jne
js
stos
ficoml
push
add
xor
sub
inc
adc
add
mov
mov
mov
and
rolb
inc
add
or
stc
lahf
push
add
dec
int3
hlt
add
sbb
xchg
adc
sub
add
mov
out
xor
rolb
data16
in
add
add
add
dec
ljmp
push
mov
dec
mov
xchg
add
movsb
add
out
lcall
leave
mov
cmpsb
add
push
leave
mov
inc
add
add
addb
aas
int3
sub
mov
lret
fcoms
push
ljmp
add
mov
stos
std
jns
push
je
adc
aad
push
add
sbb
sbbl
add
add
cmp
lret
jae
ljmp
add
pop
jp
inc
mov
loop
arpl
aad
lcall
push
sub
mov
repnz
mov
cmp
adc
or
mov
bound
mov
xchg
xor
add
jecxz
mov
add
addb
rolb
sbb
fucomp
mov
xchg
aaa
cmpsl
and
mov
lcall
or
add
aaa
dec
xchg
add
jge
add
add
icebp
adc
xchg
sti
lret
icebp
xor
add
addb
add
cmc
push
add
add
sbb
mov
loopne
lret
dec
stos
lods
imul
jmp
push
add
push
mov
add
mov
cmpsl
xchg
adc
rep
aam
je
cmpsb
add
cld
push
fildll
jne
cs
cld
test
and
mov
sbb
ss
ja
pop
mov
mov
add
add
aad
mov
int
add
sbb
inc
int
add
adc
add
add
pop
push
add
mov
stos
cmpsl
cltd
push
mov
lds
add
mov
add
dec
inc
add
add
daa
int3
push
add
inc
add
call
add
cmp
add
or
add
bound
mov
pop
bound
mov
in
mov
cmp
add
or
add
jne
add
shll
inc
add
testl
add
fimuls
hlt
add
dec
inc
adc
add
fcomps
clc
xor
push
add
scas
movsl
mov
dec
test
add
mov
andl
nop
add
add
add
add
push
enter
movsl
sbb
add
mov
out
scas
movsb
add
add
jl
mov
leave
add
add
repnz
scas
incl
add
icebp
repz
mov
add
filds
loopne
cmp
add
pop
ss
fidivrs
sbb
dec
add
mov
pop
inc
mov
xchg
mov
and
mov
add
add
add
sahf
aas
sbb
arpl
sub
ljmp
pushf
xor
scas
jns
xor
xor
and
dec
clc
jmp
cltd
add
adc
mov
in
adc
test
adc
in
leave
lock
push
testb
add
lret
push
pop
sub
add
mov
cmp
add
loopnew
cld
sbb
add
sbb
dec
lock
out
cmp
rcrl
lods
in
lock
add
adc
addb
sbb
inc
add
add
add
jne
add
test
out
out
ret
cmp
into
dec
gs
enter
mov
js
and
mov
add
mov
movsb
add
add
xchg
add
jns
add
and
lret
xor
mov
arpl
das
mov
fwait
movsb
add
xchg
mov
test
push
add
xchg
add
sub
or
add
outsl
lock
cmpl
out
mov
mov
xlat
inc
addb
add
and
add
mov
add
add
add
sub
loopne
xchg
mov
sbb
add
add
jmp
mov
stos
icebp
push
add
adc
mov
add
insl
lock
add
mov
add
dec
mov
mov
mov
inc
add
mov
xchg
dec
rolb
dec
movsb
add
push
add
push
sub
dec
and
cltd
test
adc
data16
fcmovbe
add
add
add
inc
add
xor
sub
out
ss
push
int
testl
inc
add
add
out
scas
inc
add
add
loop
inc
test
xchg
add
add
scas
adc
adc
xor
loopne
jp
jle
push
fdivrp
std
fs
jmp
addb
add
inc
lods
mov
cmp
xor
adc
add
mov
add
xchg
add
add
add
inc
or
pop
outsl
add
stc
stos
lea
add
out
mov
add
shll
push
add
add
ret
push
add
ret
lret
sub
cmp
pusha
add
sti
cwtl
mov
ja
rcrl
add
mov
pop
xchg
inc
add
jno
mov
ror
std
xchg
and
mov
push
xchg
cmp
or
ret
pusha
add
push
mov
inc
add
cmp
add
lcall
add
jmp
add
add
popa
leave
jge
add
sub
add
out
xchg
push
add
out
rorl
pop
ret
movsb
add
pop
xchg
inc
fldcw
mov
mov
ja
add
pop
push
pop
add
js
add
and
mov
dec
or
stc
adc
leave
addb
dec
repnz
mov
ret
push
add
and
aaa
mov
mov
jo
push
and
add
iret
push
loop
imul
add
add
xchg
lods
push
lret
fdivs
mov
divl
mov
jno
xchg
leave
pushf
sbb
mov
cmpsl
adc
cmp
sub
rolb
call
rolb
push
mov
dec
mov
add
adc
iret
sbb
test
lds
jo
movsl
inc
dec
push
inc
add
add
stos
loop
call
fwait
scas
mov
add
or
add
sub
pop
loope
push
add
mov
add
mov
mov
push
and
adc
addl
imul
add
loope
mov
dec
push
add
add
in
dec
sbb
insb
repz
add
mov
add
cltd
inc
inc
add
add
push
add
add
std
int
jno
aas
push
add
add
scas
std
xlat
mov
shrl
sub
icebp
xchg
add
add
add
cmpsl
jmp
mov
cmpsb
add
mov
add
rcr
and
xor
popf
clc
mov
mov
rolb
lds
mov
add
and
jp
cmc
in
add
movb
pop
ljmp
mov
xchg
into
rolb
xchg
addr16
inc
and
jo
pop
dec
dec
xlat
dec
les
dec
and
in
add
add
pop
dec
loopne
bound
mov
inc
xchg
jno
jb
cmp
enter
mov
add
jmp
pusha
add
or
add
cld
fisubl
add
cwtl
loope
iret
sti
sub
out
add
jle
fldt
cwtl
mov
add
and
mov
or
aas
ret
add
outsl
test
aas
sti
in
push
add
popf
repz
mov
adc
lds
test
adc
clc
jmp
add
cmp
xchg
stos
xlat
xor
mov
mov
adc
push
call
xchg
xchg
and
mov
add
or
pop
cs
add
add
add
dec
dec
cltd
add
mov
test
add
mov
or
xchg
add
sbb
jg
inc
dec
add
dec
add
add
rolb
dec
sub
add
aam
lea
cmp
pop
mov
inc
add
mov
add
mov
add
add
add
inc
add
add
in
xchg
je
aad
pop
frstor
add
lods
sub
adc
sbb
jae
icebp
shrl
jmp
cmpsb
add
add
adc
mov
inc
or
add
push
add
repnz
rolb
sub
test
popa
push
sub
addb
add
fisttpll
lea
adc
and
mov
push
push
sbb
data16
out
imul
adc
add
mov
push
jl
push
add
jle
jne
adc
lea
add
sbb
cmp
add
or
add
add
mov
insl
push
add
add
mov
ret
push
add
add
cld
ds
mov
and
add
add
repz
insl
aas
fcoml
out
xlat
les
in
arpl
add
jb
dec
and
rolb
push
js
add
jo
mov
add
add
adc
les
cmpsl
lea
mov
in
add
inc
add
add
cmp
aaa
mov
outsl
imul
sahf
rcpps
loopne
repz
pusha
add
lock
int
add
mov
repz
cld
pop
imul
ret
dec
mov
mov
sbb
je
sub
test
ret
mov
call
xlat
mov
xor
cmp
push
insb
pop
sub
xor
mov
cs
add
or
cltd
add
adc
pushf
xchg
lods
int3
loopne
mov
sbb
testb
stos
lods
adc
add
clc
pop
pop
push
lcall
test
jmp
test
xchg
sub
popf
inc
add
add
loop
inc
add
mov
add
lret
sti
or
sbb
add
addb
adc
bound
mov
popf
mov
inc
aad
sbb
lcall
jbe
jae
fidivl
ficoml
call
add
add
add
and
add
push
mov
add
aad
push
add
iret
or
or
mov
loope
cmp
ss
mov
pop
add
inc
jg
push
in
or
pop
enter
add
mov
push
add
add
add
in
stc
ss
sbb
xchg
roll
add
inc
add
inc
sub
cmc
dec
push
add
cs
pop
add
mov
sub
add
jne
add
add
xor
mov
inc
les
xchg
add
add
fxch
jp
add
add
je
add
movnti
mov
push
add
push
popa
pop
stos
mov
scas
or
add
xchg
out
push
cmc
add
mov
dec
gs
sbb
xor
scas
push
push
add
and
mov
ret
sub
imul
mov
pop
stc
loope
jae
ret
int3
push
add
bound
mov
dec
xor
mov
pop
in
loopne
xor
add
cli
inc
fimull
xchg
push
add
add
push
add
and
dec
and
mov
aas
out
imul
push
and
mov
testb
arpl
add
mov
call
mov
add
outsl
adc
dec
hlt
add
add
mov
cmp
and
test
int
dec
rolb
jne
add
push
push
add
fsubrs
add
mov
mov
add
cmp
jo
xchg
ds
lret
pop
push
add
xchg
add
add
pop
push
add
adc
pop
testl
add
fisttpl
push
cs
add
cltd
pop
out
xlat
mov
pusha
add
fildl
add
add
pop
inc
add
add
sub
ret
movsb
add
add
add
je
les
inc
rolb
jo
adc
rolb
icebp
push
add
sbb
aaa
cmp
cwtl
inc
movb
add
stos
sbb
mov
cli
inc
add
mov
int3
imul
lret
push
and
add
add
pop
scas
clc
push
loope
nop
add
ret
mov
fsubrp
sub
add
cmc
stos
stos
in
gs
xor
clc
bound
mov
adc
mov
cld
out
pop
push
mov
dec
dec
mov
add
add
outsb
shll
add
ds
inc
add
testb
ja
jo
mov
cli
rolb
push
add
testb
mov
mov
test
in
int
lea
sbb
add
loopne
fsub
hlt
add
add
mov
aas
adc
add
mov
inc
add
add
sbbl
pop
cmpsb
add
add
icebp
stc
or
test
add
dec
lahf
xchg
sahf
cmp
lods
hlt
add
cli
pop
add
or
cmc
jmp
inc
add
add
sahf
mov
add
add
data16
add
mov
add
fisubs
add
inc
add
pop
add
xor
les
repz
sbb
add
jnp
add
incb
aad
jmp
mov
add
and
add
pop
mov
das
dec
mov
cs
add
mov
inc
add
repnz
movb
je
mov
rolb
cmp
mov
push
xchg
add
add
xchg
add
lods
cmp
push
add
pop
and
mov
popf
cmp
add
xchg
xchg
pop
dec
inc
add
add
add
add
sub
cwtl
ret
aad
pusha
add
add
xor
shll
jno
cld
cwtl
sahf
push
add
imul
add
mov
add
add
outsl
push
adc
in
adc
sub
add
add
dec
jp
xor
sub
add
pop
in
push
add
ja
mov
mov
scas
rdmsr
add
lret
aas
xchg
pop
xchg
sbb
add
add
mov
add
adc
mov
add
addb
repnz
pop
clc
mov
or
push
add
add
mov
ds
add
repz
nop
add
add
invd
sub
ror
jecxz
cmpl
mov
sbb
add
aas
sub
pop
jb
pop
adc
mov
mov
add
rolb
jo
into
sbb
xor
fucomp
inc
ret
mov
incl
mov
shll
push
add
and
mov
mov
lret
add
or
addr16
mov
pop
aam
mov
add
mov
adc
cmp
addb
add
xchg
add
add
add
add
fstp
jl
mov
add
fs
add
pop
int
dec
lds
dec
adc
scas
fcmovu
mov
mov
mov
and
mov
adc
fidivl
fmuls
xor
and
dec
sbb
dec
mov
dec
lods
sub
xchg
mov
dec
jb
call
iret
out
pop
addb
or
dec
loope
int
testl
sub
lea
and
add
cld
lock
ja
nop
add
fucomip
das
or
adcl
mov
add
bound
mov
sub
add
sub
add
inc
rcrl
pushf
loopne
out
incb
add
mov
testb
hlt
add
jg
add
sbb
jbe
sbb
add
int3
xchg
shll
lahf
rolb
test
jle
sub
pop
inc
sar
out
push
add
dec
inc
jo
pop
aas
inc
add
sub
cltd
pop
cmpsl
rcrl
aad
add
loope
add
iret
daa
push
add
mov
add
adc
rep
jbe
mov
push
pop
ljmp
add
and
mov
lret
fistpl
pusha
add
jg
ljmp
clc
sbb
add
add
pop
cltd
cltd
ljmp
lcall
jno
js
add
insb
fwait
sub
jo
pop
mov
add
push
add
add
addb
fadds
add
xchg
add
or
cld
sti
daa
int
shl
add
mov
cmc
lea
cwtl
in
cmp
add
add
lods
cmp
mov
add
outsb
repz
push
add
xor
cmp
add
add
add
pop
xchg
mov
xchg
std
sub
dec
hlt
add
sbb
adc
sbb
add
add
mov
dec
lea
add
add
rolb
add
add
add
rcl
add
sbb
mov
mov
add
add
mov
push
scas
xchg
add
mull
add
dec
fwait
subl
ret
push
jmp
sbb
add
add
jecxz
dec
stos
pop
mov
in
lods
ficoms
lret
sub
out
jb
mov
xchg
and
lret
mov
mov
repz
push
jbe
mov
add
fs
insl
insb
and
mov
push
xor
lock
adc
add
jo
cmp
or
add
test
xchg
fnstenv
sbb
pusha
add
xor
mov
das
int3
mov
fcompl
jle
fildll
sbbl
add
mov
out
push
pop
add
add
add
into
xchg
clc
lock
mov
add
jnp
add
add
lds
out
add
xor
aam
adc
loop
and
mov
cmp
mov
fnstsw
add
pop
dec
and
mov
push
add
and
test
add
add
cltd
mov
adc
adc
add
add
add
jle
add
notl
mov
add
les
rolb
inc
jge
xor
movsl
dec
int3
cwtl
loop
inc
add
lea
add
push
add
fwait
mov
fsubl
repnz
lods
sub
insl
xor
aas
pop
inc
add
add
sbbl
je
out
cmp
fwait
addb
lds
in
adc
mov
loop
int
add
add
add
add
mov
push
enter
jne
add
mov
aam
ja
lods
inc
add
jg
mov
mov
add
mov
add
cs
add
mov
add
lret
jno
add
mov
cwtl
add
pop
push
add
add
data16
jbe
mov
dec
mov
negl
jmp
mov
mov
push
add
cmp
xchg
add
fstpl
xchg
shrl
pop
jg
mov
stc
rorl
ljmp
mov
xchg
add
add
inc
bound
mov
fistl
cmpsb
add
xchg
cmc
xchg
fmull
adc
pop
and
mov
js
mov
jp
sbb
lahf
xchg
add
inc
add
cmpsl
shll
and
movsb
add
adcl
jae
add
jb
mov
mov
pusha
add
scas
sbb
les
jmp
sbb
test
cli
dec
xor
stc
sub
lret
cmp
add
cmp
add
inc
pop
jg
xchg
imul
sbb
leave
int
mov
jle
lret
xchg
inc
add
and
cli
scas
add
dec
lds
add
add
leave
jo
mov
imul
mov
add
push
das
insb
out
inc
add
es
das
mov
xchg
add
add
adc
xor
xchg
add
mov
jno
ja
int
mov
xor
out
inc
cmc
mov
and
mov
mov
add
and
mov
add
add
imul
jno
inc
add
add
addb
cli
mov
add
push
add
rolb
lods
popa
fdivrs
in
cmp
cmc
aad
testb
mov
mov
sti
in
add
test
loop
xchg
add
add
adc
add
arpl
xchg
add
dec
pusha
add
push
std
into
xchg
add
aad
cs
movb
loope
jl
addr16
int
insl
sub
aaa
int3
jmp
jp
inc
dec
sbb
bound
mov
in
or
add
and
mov
cmp
xor
jo
lds
cmp
mov
fstl
add
popl
or
leave
pusha
add
jb
outsl
xor
adc
pusha
add
mov
sub
add
add
add
push
add
push
xchg
add
add
inc
sub
jae
stos
gs
dec
dec
sbb
dec
pop
pop
lret
jg
imul
mov
pop
sbb
fldcw
add
ret
add
aas
int3
sub
popf
mov
stc
iret
testb
add
add
mov
xor
add
mov
or
in
daa
in
add
sub
lcall
iret
arpl
xchg
pop
mov
jne
mov
addr16
add
pop
inc
inc
add
pop
insb
scas
push
add
add
dec
inc
jp
add
dec
iret
and
adc
out
and
test
jbe
sub
add
cmp
pop
mov
xor
pop
in
lock
add
pop
push
add
mov
xchg
add
xor
add
adc
inc
popa
add
fstl
cltd
lods
dec
cmc
pop
mov
or
or
cmc
jl
add
add
or
mov
in
bound
mov
add
pop
mov
outsl
test
pushf
dec
stos
pusha
add
dec
and
mov
mov
mov
add
add
mov
mov
mov
xchg
add
jle
stc
mov
mov
add
into
mov
cmc
loopne
mov
mov
add
mov
add
sbb
icebp
cmp
add
add
test
dec
jle
add
jecxz
or
repz
stos
movsl
mov
jbe
pop
imul
mov
add
push
pushf
test
out
xchg
add
shll
xor
sahf
dec
adc
sahf
sbb
xchg
and
xchg
or
les
sbb
inc
add
add
mov
repnz
loope
add
fistpl
mov
ljmp
pop
lea
add
fwait
jnp
and
add
lock
mov
mov
call
add
ret
push
sahf
xchg
addl
adc
add
into
mov
inc
add
push
fiaddl
mov
add
loope
bound
mov
sti
jbe
lds
jle
dec
push
add
movb
std
rolb
fwait
gs
add
cmpsl
mov
add
adc
inc
add
cltd
add
jmp
imul
jge
adc
xlat
es
lahf
nop
add
mov
rolb
push
je
and
dec
jmp
sbb
fbld
lret
pushf
inc
add
addb
inc
add
add
lret
popf
jecxz
xor
inc
add
add
mov
jo
bound
mov
arpl
add
add
jge
add
mov
push
add
xor
test
das
mov
add
mov
or
pop
mov
imul
pop
in
mov
adc
test
jl
push
add
xchg
mov
fstl
js
testb
add
jp
movsl
xchg
mov
data16
mov
push
sbb
stc
scas
stos
clc
dec
push
in
and
mov
scas
dec
xchg
add
add
into
aam
test
or
ja
mov
add
addb
pop
mov
push
add
add
xor
cwtl
mov
push
movl
cld
sub
add
loopne
and
enter
popf
mov
add
test
push
inc
cmpsl
lods
pop
xor
add
add
pop
arpl
out
repz
mov
add
add
sub
inc
iret
cld
lcall
outsl
movsl
cmp
xor
add
add
fimuls
push
arpl
mov
jp
insb
cld
lds
mov
add
add
add
vmptrst
dec
ret
xchg
add
dec
inc
add
out
cmc
add
and
add
xchg
inc
out
lret
mov
add
mov
mov
add
int3
mov
and
inc
or
sbb
in
xor
mov
sbb
in
cltd
cmp
add
fucomp
push
push
add
add
pop
aad
jne
std
ret
imul
cmp
adc
xor
sbb
cmpsl
dec
dec
xchg
scas
lea
imul
fldenv
test
sub
ret
mov
dec
icebp
cmp
add
enter
xchg
add
xchg
add
mov
sbb
add
mov
add
int3
push
add
add
mov
out
xor
add
leave
out
add
aas
fcompl
in
xchg
add
std
pop
lds
and
mov
int3
dec
scas
jne
push
cmp
movb
test
mov
add
add
add
add
hlt
add
push
adc
add
xchg
mov
cmc
push
movsl
cltd
adc
mov
lcall
cli
imul
cmp
incl
pusha
add
xor
stos
or
add
mov
cld
push
int3
frstor
add
mov
mov
in
int
cmc
loopne
mov
jmp
add
add
pop
test
scas
insl
xchg
pushf
scas
push
clc
mov
movsb
add
sahf
lods
shr
jecxz
add
dec
inc
add
add
add
inc
add
add
mov
add
add
add
cmp
mov
push
xlat
adc
ja
popl
cmc
mov
add
add
mov
adc
les
mov
insl
jmp
mov
cld
push
add
loope
hlt
add
lods
fstpt
mov
stos
mov
mov
rolb
addb
lds
cmp
xchg
cmpsl
and
add
add
add
mov
xchg
fisubrl
dec
jae
fists
fcmovu
loope
add
pop
dec
or
sbb
clc
sbb
inc
add
repnz
arpl
add
add
dec
fucom
add
ja
lret
andl
jo
adc
mov
ja
or
sti
sub
mov
stos
rolb
jae
xor
leave
rolb
repnz
mov
int3
xchg
sub
bound
mov
and
mov
test
add
push
bound
mov
push
xchg
mov
jno
mov
mov
sbb
test
add
or
add
add
add
add
and
add
in
loopne
aam
stos
inc
sbb
xor
fsub
aam
fldl
stos
fstpt
inc
push
outsl
movsl
stos
addb
mov
xchg
add
ja
jle
stc
mov
sbb
inc
mov
mov
mov
rolb
shll
add
add
sub
push
jo
lods
jl
jle
add
dec
movsb
add
push
fistl
sub
add
or
mov
or
jno
in
rolb
xchg
add
add
add
aaa
jnp
add
fisttps
jne
add
mov
dec
iret
inc
push
add
hlt
add
repz
repz
lret
sbb
fstl
add
add
out
add
daa
les
out
jo
sub
xor
inc
lods
repnz
sets
testb
inc
ss
ficoml
pop
daa
lods
cmpsl
cmpsl
xchg
add
jb
rolb
lock
loop
fisubs
jb
popf
aad
and
mov
inc
mov
mov
add
fldl
shrl
add
add
mov
cmc
rolb
push
add
sub
mov
add
push
add
pop
xor
out
add
mov
lret
adc
inc
add
sub
xchg
addb
scas
mov
je
add
mov
add
lcall
jmp
add
popa
xchg
add
xchg
add
inc
add
andl
add
xor
add
dec
mov
xchg
add
lahf
sub
sub
cmp
shrl
ret
inc
xlat
sahf
mov
inc
aam
inc
add
sub
add
je
xor
add
push
add
fucomi
pop
rorl
cmp
aad
push
add
mov
xchg
jecxz
cmp
xchg
cld
jnp
inc
imul
loope
bswap
insl
call
pop
xlat
cmpl
cltd
cmp
add
pop
push
add
std
test
jne
call
xchg
out
fiaddl
mov
in
movb
add
pop
ret
inc
add
jg
nop
add
addb
fldl2e
mov
cld
pop
adc
mov
cmpsb
add
repnz
add
add
add
xchg
cmpsb
add
scas
or
xchg
rcr
addb
or
mov
mov
add
outsl
jg
pop
repnz
push
sbb
cmp
sub
add
mov
add
sahf
arpl
mov
cltd
ret
push
cmp
add
daa
leave
mov
add
pop
out
add
add
movsb
add
add
pop
mov
add
xchg
pop
xor
add
in
js
add
add
lds
adc
xchg
add
mov
popa
gs
add
out
loopne
mov
cmp
testb
add
les
push
add
add
add
rcll
adc
sub
fdivrl
add
mov
cmp
add
jmp
add
jne
xorl
sub
scas
add
add
pop
sbb
enter
xchg
ret
mov
ret
sbb
jge
pop
add
xchg
add
add
mov
add
test
add
lcall
push
add
pop
adc
loop
testb
xchg
sub
mov
add
stos
lahf
sbb
add
addb
push
clc
mov
adc
dec
iret
adc
int
push
add
sti
jns
dec
jno
add
mov
add
pop
and
xor
jnp
fucomi
jbe
movsl
gs
out
movsb
add
add
test
cli
sahf
mov
or
inc
add
mov
add
dec
jns
add
aam
dec
insb
push
xor
mov
pop
cmp
add
add
lahf
imul
fstps
add
add
inc
mov
push
add
or
out
add
or
pop
fcmove
mov
jge
inc
add
add
add
in
xchg
or
or
add
xor
mov
mov
pop
adc
int
data16
mov
mov
mov
movb
add
cwtl
std
rcll
add
push
ret
add
xchg
add
imul
mov
das
pop
add
in
addb
add
ret
movb
and
mov
sub
jbe
jbe
in
dec
dec
pop
sub
xchg
or
sub
add
loopne
iret
fwait
mov
js
xchg
loopne
in
xor
pop
dec
fcmovbe
ret
mov
mov
add
mov
call
jae
push
add
loop
dec
clc
inc
add
testb
mov
add
xchg
pop
call
xchg
outsb
or
add
inc
fs
popa
daa
lods
push
and
lea
into
mov
add
cmpsb
add
sub
xor
sbb
add
mov
out
or
add
and
and
add
pop
gs
std
nop
add
jnp
je
cmpl
add
add
js
mov
stos
xchg
add
add
outsb
cmp
push
sbb
arpl
push
movsl
test
add
add
testb
movsb
add
add
xchg
add
movb
out
popf
inc
add
incl
outsl
fidivrs
out
and
mov
lods
cs
rolb
addb
ja
movsl
scas
adc
jbe
mov
add
aaa
in
inc
mov
push
add
in
cmp
jne
or
add
lea
mov
add
inc
push
jle
add
jns
adc
call
outsb
inc
add
add
xor
inc
clc
cmp
add
jb
jmp
add
fsubr
jo
or
mov
cmp
repnz
arpl
dec
cmp
out
cmp
add
mov
add
add
and
fsubrl
jl
inc
mov
inc
add
fucomi
lcall
xchg
clc
inc
jo
movb
sbbl
add
sub
add
cmp
inc
add
andl
das
or
ss
xor
insb
dec
pusha
add
dec
int
ret
mov
add
out
add
movb
add
add
add
int
add
adc
xor
js
iret
ds
sbb
fbstp
mov
stc
addb
ret
push
add
cmc
fmuls
sahf
lds
pop
jge
movsl
insb
add
mov
sbb
rolb
popa
add
fisttps
imul
pop
or
mov
xlat
lods
cs
daa
enter
outsb
mov
xchg
incb
sbb
cmp
inc
std
push
add
add
addb
add
inc
pop
nop
add
js
or
push
add
fdivrl
mov
mov
add
clc
xchg
xchg
mov
adc
jp
rolb
mov
cmp
add
cmc
rorl
aam
push
add
add
cwtl
sbb
add
add
mov
add
add
rolb
lods
shll
jmp
fdiv
add
mov
cld
add
mov
add
inc
fimull
xchg
add
loopne
in
jecxz
cmpl
jnp
xlat
xchg
in
jnp
add
add
movsb
add
add
add
sahf
lds
outsl
test
movsb
add
add
push
pop
insb
sahf
push
fists
add
mov
mov
addl
xor
fidivrl
xchg
ja
pusha
add
jge
add
pop
movsl
test
jg
mov
pop
add
mov
loop
test
sub
mov
mov
jle
out
imul
lret
mov
add
pop
imul
cmp
add
or
add
add
add
lds
add
adc
in
pop
jae
mov
pop
addb
cmpl
sub
add
add
add
add
add
add
ret
xor
dec
adc
add
cmpsb
add
mov
add
add
mov
adc
loop
mov
cltd
out
add
in
pop
lea
and
data16
adc
add
add
clc
xor
nop
add
add
xchg
add
jns
iret
mov
cmp
mov
mov
add
mov
add
sbb
leave
repz
mov
stos
mov
rolb
mov
filds
push
add
add
add
add
add
pusha
add
cs
add
push
add
sti
leave
sub
sti
int3
icebp
imul
push
loope
ds
aad
and
jno
mov
add
lds
sti
or
add
xchg
add
inc
add
shr
jae
ret
out
pop
sub
xchg
add
data16
and
out
add
inc
add
hlt
add
add
add
dec
xor
das
or
mov
xor
movsl
inc
out
push
add
add
dec
je
cmp
mov
jns
lods
xchg
movb
cs
add
cld
add
mov
outsl
rolb
addb
scas
xchg
xchg
add
add
pop
add
mov
pop
roll
lods
in
pop
inc
add
inc
insl
cs
addl
push
cld
push
add
jbe
sbb
mov
mov
lock
test
or
jnp
add
test
add
jecxz
or
sbbl
lahf
add
add
jno
add
fsubr
and
add
sub
add
pop
hlt
add
test
jp
icebp
add
stos
adcl
sub
xchg
add
add
add
add
loopne
arpl
sbb
add
add
add
push
push
add
add
pop
addl
add
fsubs
pop
rolb
repnz
cmpsb
add
sub
insl
and
cld
jo
mov
hlt
add
divl
xor
and
inc
inc
ret
push
add
mov
call
movsl
mov
add
mov
add
inc
test
popa
dec
jp
jmp
dec
inc
add
jg
test
les
test
cltd
and
fldcw
inc
add
and
mov
rolb
mov
add
addb
jbe
loope
insl
lock
add
mov
outsb
popa
bound
mov
jmp
add
mov
lret
je
push
jecxz
add
push
movsb
add
into
xchg
lea
pop
pop
and
mov
addb
lea
xor
xor
mov
add
jae
cmp
add
insb
loopne
fmul
mov
imul
add
add
scas
test
add
adc
xchg
rolb
dec
mov
xchg
add
mov
testb
or
popa
outsb
loopne
imul
mov
or
push
add
mov
aad
add
lds
add
or
sarl
cs
mov
mov
add
jmp
xor
rolb
jo
icebp
xchg
cmpsb
add
in
imul
insl
rcpps
pusha
add
mov
add
bound
mov
out
add
out
shr
adc
pop
repnz
pop
xchg
xor
out
adc
add
ss
ss
mov
add
repz
push
add
add
xorl
mov
mov
testb
call
int
cmc
mov
add
add
add
and
mov
add
cmp
add
dec
inc
add
mov
add
push
add
add
sub
add
insb
insb
mov
aas
mov
mov
addb
sti
mov
add
repnz
fstpl
add
adc
movsl
imul
ret
imul
inc
icebp
push
add
lret
push
js
clc
aad
fsub
cltd
int3
addb
or
lock
inc
add
cmpl
jo
mov
mov
in
in
add
add
add
lds
mov
addb
add
add
adc
jnp
jbe
jne
test
movl
add
add
add
mov
enter
add
mov
sbbl
pop
stos
leave
scas
popf
xor
xchg
outsl
lea
or
ficoms
cmp
push
add
add
inc
mov
xlat
cmp
jle
add
add
add
add
add
add
subl
add
cmpsb
add
out
fisubs
add
test
iret
out
div
lock
add
add
lret
mov
mov
dec
add
cmp
jnp
add
or
add
add
and
mov
add
inc
add
add
pop
add
cmp
pop
sbb
add
add
mov
jne
add
dec
mov
dec
jmp
cmp
shll
jne
cmp
cld
pop
repz
push
mov
cwtl
jp
stos
mov
xor
mov
dec
mov
loopne
push
test
in
scas
adc
ret
add
add
addr16
add
add
add
sbb
addb
je
pop
jno
add
add
cmpsl
rcl
add
lcall
cmp
add
adc
push
add
adc
adc
mov
add
add
add
add
rolb
jg
pop
insb
testb
add
jno
xchg
add
jl
add
xor
xchg
pop
add
jl
pushf
pop
je
cmp
mov
add
pop
les
push
or
inc
icebp
add
mov
mov
movsl
adc
aas
js
jecxz
daa
mov
xchg
add
dec
lcall
add
movsl
fisubrs
add
add
inc
add
lods
into
rol
add
push
add
adc
imul
gs
arpl
cld
sbb
xchg
add
add
sbb
add
data16
xor
out
bound
mov
xor
rolb
pushf
jg
das
lret
cmp
and
mov
outsb
out
lds
jp
inc
add
xchg
mov
arpl
int3
sbb
aad
movb
jae
sahf
test
push
sub
jle
add
add
jmp
and
mov
cld
and
idivl
mov
xchg
add
mov
loope
rcll
in
sub
arpl
mov
sbb
out
xchg
add
shll
add
mov
dec
cmp
add
fidivrs
inc
add
arpl
repz
add
addb
testb
fnsave
mov
push
add
add
mov
add
jecxz
lcall
insb
push
test
xchg
fwait
push
adc
adc
xor
xchg
fiadds
js
jp
mov
inc
inc
adc
mov
mov
push
add
pop
xchg
into
or
add
and
mov
filds
imul
pop
repnz
or
xchg
in
icebp
ret
sbb
add
add
subl
add
fwait
nop
add
mov
jp
sub
add
jbe
jl
adc
rolb
popf
fmull
cld
sub
inc
add
add
add
out
add
icebp
jns
inc
fsubs
pop
insl
fs
push
add
add
mov
add
adc
in
cmp
inc
add
pop
call
add
add
add
and
mov
lods
xor
add
mov
add
add
in
jns
inc
sbb
add
mov
dec
jb
push
add
add
repz
cltd
dec
sub
js
add
and
dec
sub
add
pushf
aad
cli
rorl
add
in
imul
jbe
movsb
add
mov
iret
cmp
test
loopne
fisttps
xchg
xor
or
push
loopne
xlat
mov
push
and
mov
enter
dec
adc
lret
testb
popa
add
test
fisttpll
sbb
or
mov
mov
icebp
jle
add
imul
rolb
ljmp
add
mov
sbb
add
xchg
add
pop
mov
aam
sub
call
cmp
add
and
insl
fisttpl
mov
rcll
add
pop
jns
add
add
push
add
xchg
push
add
daa
sti
mov
jns
add
movb
sahf
sbb
outsl
hlt
add
stos
adc
mov
int
jnp
out
xor
pusha
add
add
add
dec
pop
jg
xlat
pop
dec
js
inc
popa
pop
xchg
add
push
sub
out
dec
sarl
testb
xlat
repnz
iret
pop
cmpsb
add
cwtl
nop
add
add
pop
sbb
add
fsubrl
or
mov
clc
dec
stos
jbe
rcrl
imul
lods
jmp
out
pushf
push
add
ficoml
add
inc
in
cmp
addr16
jle
add
add
add
jno
inc
add
add
test
dec
fsubrl
fidivs
add
add
mov
push
scas
push
in
test
test
ret
test
push
inc
mov
pop
out
xor
xchg
aaa
jg
xchg
add
iret
insl
aas
ret
shrl
int
add
jecxz
mov
cmpsl
dec
cmp
data16
outsl
push
xlat
rcll
add
add
out
cmp
pop
sti
add
js
add
mov
rep
cmp
add
push
adc
mov
add
add
mov
add
add
sub
cmp
add
mov
ficoml
mov
movsb
add
pop
mov
pop
dec
in
mov
add
add
add
and
data16
add
int3
sub
or
mov
je
mov
xchg
rolb
andl
push
movsb
add
adc
adc
add
add
ss
adc
xchg
adc
sub
imull
add
loope
adc
rcl
inc
fadd
ret
add
das
mov
sub
xor
cmp
mov
adc
xor
add
scas
pop
mov
lahf
xchg
cmpsl
clc
jp
add
add
add
push
add
lret
std
mov
add
out
and
inc
stos
pushf
mov
les
lds
jae
divl
ja
sbb
add
addb
out
pop
dec
mov
add
addb
add
rcr
add
add
add
pop
insl
rolb
testb
addb
sub
dec
sti
stc
stos
mov
popa
rcll
lahf
adc
add
mov
add
test
movnti
lcall
imul
out
mov
add
xor
and
adc
add
add
mov
lods
mov
mov
out
dec
add
mov
inc
lcall
jo
add
add
mov
insb
xchg
add
movb
jge,pn
cmpsl
aad
movsl
dec
pop
out
jbe
lret
xor
out
and
js
or
insb
jae
out
xor
sub
add
add
add
add
nop
add
mov
mov
mov
inc
cmp
inc
rolb
add
xor
ret
movb
sbb
lods
out
leave
sahf
inc
and
paddd
mov
sbbl
add
cmpsb
add
xchg
cli
jne
add
add
and
adc
xor
add
mov
add
mov
mov
adc
sbb
push
cs
xchg
xor
testb
add
add
sahf
xor
sub
mov
add
add
into
mov
add
add
in
roll
add
push
add
push
gs
add
xchg
add
call
adc
push
add
add
mov
data16
cwtl
mov
sub
xor
lcall
and
mov
add
in
add
mov
push
add
push
add
xchg
dec
dec
stc
jb
push
add
add
lahf
push
add
pop
add
push
add
daa
push
add
xor
push
mov
xor
mov
add
lcall
and
mov
add
repz
xchg
outsl
ret
xchg
push
jae
add
inc
add
mov
add
test
or
cld
pop
jb
push
inc
jecxz
or
add
sbb
add
js
cmp
rorl
das
loopne
push
jo
cli
or
addb
add
push
pop
cmc
adc
xor
sub
pop
fstps
add
rolb
pushf
dec
out
icebp
push
jmp
data16
and
jno
out
lcall
stos
inc
add
movb
in
in
ljmp
or
aam
xchg
add
push
xchg
popa
cmc
bound
mov
add
dec
xor
gs
mov
add
mov
jmp
add
adc
sbb
push
imul
add
and
test
data16
add
push
ja
mov
rolb
shrd
or
adc
add
add
add
inc
add
or
add
add
pop
ret
add
add
popa
mov
inc
xor
clc
repnz
jae
add
mov
clc
repnz
jae
add
add
add
cmp
repnz
jae
mov
add
mov
push
add
mov
rolb
inc
push
mov
xchg
ret
add
add
add
repnz
jae
add
jecxz
mov
push
mov
xchg
ret
scas
scas
roll
add
dec
and
push
mov
xchg
ret
add
add
and
clc
repnz
jae
add
cltd
lock
push
mov
inc
add
mov
push
mov
xchg
ret
add
add
ss
bound
mov
push
clc
repnz
jae
add
add
add
idivb
push
mov
xchg
ret
cltd
xor
pop
mov
aam
add
ss
push
stos
add
mov
xchg
ret
sub
add
xor
add
clc
repnz
jae
jmp
jp
imul
nop
jae
cld
and
xchg
add
add
push
push
mov
xchg
ret
dec
add
xor
cmp
roll
xchg
ret
test
add
xor
cld
nop
jmp
add
das
pop
add
scas
inc
jl
ljmp
jmp
add
xor
fwait
cld
nop
jmp
xor
scas
add
add
or
jge
clc
repnz
jae
add
sbb
push
xchg
mov
push
add
mov
fwait
cld
nop
jmp
add
add
clc
repnz
jae
lock
fadds
xchg
add
add
repnz
jae
cld
add
pop
pop
push
fwait
cld
nop
jmp
pop
and
test
push
push
mov
jns
ltr
rorb
add
add
js
je
mov
xchg
fldl
xchg
ret
push
lock
add
and
fbld
xor
add
clc
repnz
jae
add
fisttpl
nop
jmp
nop
test
dec
add
add
pop
clc
repnz
jae
shll
push
cld
nop
jmp
xor
add
shr
pop
cmp
fwait
cld
nop
jmp
add
add
pop
fwait
cld
nop
jmp
add
mov
add
mov
testl
jae
jmp
xor
fwait
cld
nop
jmp
aam
add
add
add
fwait
cld
nop
jmp
push
add
add
testb
cli
jne
clc
repnz
jae
add
mov
data16
rep
add
clc
repnz
jae
out
add
and
sub
add
mov
repnz
jae
pop
add
add
lcall
adc
add
xchg
add
xor
pushl
push
mov
xchg
ret
push
push
add
clc
repnz
jae
scas
mov
add
decl
mov
inc
add
pop
sbb
inc
imul
push
lret
xchg
ret
push
add
stc
add
clc
repnz
jae
add
add
scas
add
inc
adc
add
repnz
jae
push
lock
jae
sti
push
add
push
mov
push
mov
xchg
ret
fadds
add
sti
in
pop
clc
repnz
jae
or
ss
add
add
repnz
jae
fcmovnu
nop
bound
mov
mov
clc
repnz
jae
push
xchg
add
add
fistpl
clc
repnz
jae
dec
add
add
xor
loop
push
mov
xchg
ret
stc
and
add
add
add
add
bound
mov
repnz
jae
pop
shrl
add
dec
or
mov
xchg
ret
data16
add
mov
cmp
ret
mov
add
add
stc
and
mov
pusha
add
rcll
add
testb
mov
clc
repnz
jae
add
add
mov
xchg
add
push
clc
repnz
jae
lods
dec
xchg
jmp
out
mov
clc
repnz
jae
aam
scas
xchg
sub
jns
push
mov
xchg
ret
fdivs
add
add
add
repnz
jae
pop
jmp
ret
push
mov
xchg
ret
das
jecxz
add
add
add
jmpw
xchg
ret
add
xor
add
mov
clc
repnz
jae
push
xchg
rolb
jmp
fadds
xchg
ret
add
push
push
add
movb
add
popa
iret
push
push
mov
xchg
ret
add
push
movb
mov
xchg
ret
pop
add
mov
clc
repnz
jae
dec
scas
add
testb
and
add
add
adc
add
stc
cld
add
push
clc
repnz
jae
scas
add
cltd
push
add
movb
push
clc
repnz
jae
cmpsb
add
add
out
mov
ja
add
repz
mov
xchg
ret
das
add
add
mov
nop
jae
add
add
movb
fwait
iret
inc
add
add
add
mov
clc
repnz
jae
add
dec
je
fwait
cld
nop
jmp
add
add
pop
fwait
cld
nop
jmp
mov
das
pop
add
pop
jne
clc
repnz
jae
das
add
add
jb
repz
dec
fwait
cld
nop
jmp
add
xchg
add
sbb
add
repnz
jae
add
clc
repnz
jae
add
jmp
push
add
add
add
rolb
std
cmp
fwait
cld
nop
jmp
lock
pusha
mov
push
pop
pop
mov
clc
repnz
jae
fadds
fldenv
clc
repnz
jae
add
add
nop
dec
mov
clc
repnz
jae
add
add
push
clc
repnz
jae
pop
pusha
mov
add
lock
clc
repnz
jae
nop
add
jb
push
scas
add
push
mov
xchg
ret
mov
add
cltd
mov
add
clc
repnz
jae
add
push
add
push
clc
repnz
jae
pusha
add
add
push
hlt
sub
pop
adc
int3
repnz
add
add
xchg
clc
repnz
jae
xor
add
add
push
fwait
cld
nop
jmp
add
add
add
push
fistl
xor
push
mov
xchg
ret
push
sbb
mov
xchg
ret
add
add
sbb
ja
inc
push
mov
xchg
ret
add
pop
xchg
and
mov
add
add
clc
repnz
jae
scas
jmp
add
pusha
add
add
pop
xor
xor
data16
sbb
jne
sbb
repnz
jae
add
jecxz
add
add
inc
and
clc
repnz
jae
dec
jmp
add
mov
fwait
cld
nop
jmp
xchg
add
idivl
push
mov
xchg
ret
stc
add
stc
mov
fwait
cld
nop
jmp
sub
mov
mov
clc
repnz
jae
add
add
das
pop
bound
mov
dec
add
push
mov
xchg
ret
testb
pop
push
iret
shr
clc
repnz
jae
adc
sub
nop
jmp
add
add
test
add
repz
cld
nop
jmp
pop
cmpsb
add
stc
add
pusha
ja
mov
clc
repnz
jae
add
mov
mov
les
mov
add
fwait
cld
nop
jmp
add
cltd
testb
add
cld
nop
jmp
and
add
cld
pop
add
into
mov
clc
repnz
jae
add
jecxz
in
push
clc
repnz
jae
add
add
push
add
mov
add
pop
clc
repnz
jae
add
add
or
push
mov
xchg
ret
mov
add
mov
clc
repnz
jae
add
lea
mov
adc
repnz
jae
add
cmpw
fwait
cld
nop
jmp
roll
add
inc
ljmp
mov
add
hlt
add
data16
and
xor
fwait
cld
nop
jmp
jmp
jle
adc
mov
inc
add
add
hlt
add
cmp
clc
repnz
jae
xor
lea
clc
repnz
jae
adc
push
pop
and
clc
repnz
jae
add
pusha
lods
pop
das
cmpsb
add
add
cmpsl
mov
add
add
repnz
jae
das
add
push
adc
dec
cmp
repnz
jae
hlt
add
add
clc
repnz
jae
jmp
add
mov
repnz
jae
scas
data16
jecxz
add
jmp
push
mov
xchg
ret
pop
add
scas
add
add
mov
add
clc
repnz
jae
add
add
mov
jae
xor
add
or
clc
repnz
jae
lock
add
lcall
adc
add
lea
fwait
cld
nop
jmp
mov
add
add
add
fwait
cld
nop
jmp
add
cltd
add
lea
jae
sti
and
lods
add
add
add
mov
fwait
cld
nop
jmp
sti
add
int
jp
add
clc
repnz
jae
cltd
cltd
cltd
out
mov
cmpsb
add
mov
push
clc
repnz
jae
add
leave
clc
repnz
jae
add
xchg
add
jmp
subl
push
mov
xchg
ret
pop
add
clc
repnz
jae
pop
add
add
xor
repnz
jae
push
add
adc
cmp
fwait
cld
nop
jmp
add
add
or
push
add
nop
testb
cld
add
add
rcl
add
mov
fwait
cld
nop
jmp
add
add
add
add
add
adc
mov
xchg
ret
push
stos
adc
sub
orb
jae
add
adc
dec
add
add
xor
add
scas
mov
clc
repnz
jae
xor
mov
add
add
pusha
clc
repnz
jae
scas
push
nop
sti
add
add
cmpsb
add
clc
repnz
jae
aam
aam
add
mov
in
lea
clc
repnz
jae
sub
add
add
add
or
ljmp
xor
repz
mov
xchg
ret
add
add
inc
xor
ljmp
sub
repnz
jae
add
push
sbb
add
repnz
jae
push
xor
clc
repnz
jae
jmp
add
lcall
inc
add
aam
mov
sub
jg
inc
add
pop
add
xchg
pop
add
scas
enter
jae
scas
add
mov
fwait
cld
nop
jmp
sub
das
push
add
nop
jae
add
add
sbb
push
push
rolb
hlt
add
push
add
add
fwait
cld
nop
jmp
nop
add
add
mov
xchg
ret
pusha
jecxz
add
std
cmpl
fwait
cld
nop
jmp
add
xchg
out
push
mov
je
add
sub
add
mov
pop
clc
repnz
jae
add
inc
das
stc
add
sti
rep
clc
repnz
jae
add
mov
in
xor
and
push
mov
xchg
ret
add
dec
cltd
add
mov
lret
clc
repnz
jae
pop
inc
jmp
xor
test
and
add
repnz
jae
push
add
mov
clc
repnz
jae
sti
add
sti
das
jecxz
cmpsb
add
and
fwait
cld
nop
jmp
sub
add
add
fwait
xchg
clc
repnz
jae
add
add
adc
decb
nop
jae
add
ret
repnz
jae
pop
mov
add
xchg
loop
popa
into
and
push
mov
xchg
ret
add
lods
add
insb
mov
clc
repnz
jae
add
add
test
lds
clc
repnz
jae
xor
add
scas
rorl
jae
pop
push
stos
aam
add
inc
in
clc
repnz
jae
add
add
add
jmp
add
push
xor
mov
add
nop
jae
add
xchg
add
mov
push
mov
xchg
ret
cmpsb
stc
and
sub
sar
repnz
jae
hlt
push
add
add
fmul
pop
clc
repnz
jae
sti
push
and
sub
call
add
push
data16
jmp
pop
add
add
repnz
jae
push
sbb
add
dec
fwait
cld
nop
jmp
add
add
and
fadds
dec
add
push
mov
xchg
ret
stc
pop
xchg
fsubrs
nop
jae
dec
add
sbb
inc
add
mov
xchg
ret
mov
add
and
ljmp
jne
add
add
add
sti
push
clc
repnz
jae
nop
or
add
add
cwtl
mov
clc
repnz
jae
add
add
pop
das
push
push
clc
repnz
jae
add
aam
cmc
and
fwait
cld
nop
jmp
lods
push
push
add
out
mov
clc
repnz
jae
pop
stos
add
pop
pushl
push
mov
xchg
ret
add
add
std
push
clc
repnz
jae
pop
xchg
add
add
xor
repnz
jae
cltd
and
adc
add
cld
nop
jmp
add
sub
clc
repnz
jae
lods
add
add
test
add
add
add
add
clc
repnz
jae
add
jmp
clc
repnz
jae
jmp
add
cmpsb
outsb
mov
clc
repnz
jae
push
add
pop
clc
repnz
jae
add
stc
sti
push
push
adc
add
repnz
jae
add
out
jmp
clc
repnz
jae
cltd
push
add
sbb
cmp
repnz
jae
inc
cltd
adc
jne
clc
repnz
jae
add
push
add
jge
outsb
and
repnz
jae
add
add
pop
mov
push
mov
xchg
ret
add
add
dec
add
clc
repnz
jae
mov
add
xor
push
mov
xchg
ret
push
xor
add
das
mov
clc
repnz
jae
add
pop
add
add
clc
repnz
jae
lods
add
out
mov
in
inc
add
lock
or
add
dec
add
clc
repnz
jae
pop
rcrl
and
hlt
add
add
repnz
jae
adc
add
inc
fmuls
into
inc
add
cltd
das
add
cld
nop
jmp
add
push
add
push
jmp
xchg
add
sti
cltd
add
and
add
clc
repnz
jae
testb
add
movsb
push
mov
xchg
ret
mov
add
repnz
jae
add
add
dec
cmp
repnz
jae
fsubrs
adc
cmpsb
add
xor
and
icebp
fmull
test
sbb
nop
jae
push
les
cld
nop
jmp
add
or
lods
add
ficoml
in
add
add
mov
add
adc
pop
fisubrs
rcll
movl
xor
dec
fwait
rep
clc
repnz
jae
add
add
add
add
mov
clc
repnz
jae
add
xchg
add
dec
fwait
cld
nop
jmp
push
scas
push
jne
clc
repnz
jae
add
add
cmp
clc
repnz
jae
add
xchg
add
clc
repnz
jae
add
add
das
xor
add
jns
inc
add
scas
pushaw
dec
stos
add
push
mov
xchg
ret
pop
stc
test
pop
xchg
add
and
hlt
add
nop
jae
adc
add
push
mov
clc
repnz
jae
add
cltd
in
push
jns
rcrb
add
add
add
add
add
jae
add
test
das
push
xchg
out
clc
repnz
jae
jmp
test
adc
add
repnz
jae
inc
push
repnz
jae
dec
add
add
decl
clc
repnz
jae
add
add
dec
or
repnz
jae
add
hlt
add
mov
addb
int
dec
clc
dec
inc
clc
repnz
jae
add
dec
add
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
add
repnz
jae
add
in
add
push
mov
xchg
ret
fadds
add
jecxz
aad
addr16
push
mov
xchg
ret
add
add
mov
clc
repnz
jae
pop
sti
cmp
nop
jmp
add
add
push
mov
clc
repnz
jae
push
inc
add
clc
repnz
jae
add
add
add
push
clc
repnz
jae
adc
data16
jecxz
es
add
mov
out
add
or
push
inc
add
or
nop
jae
add
mov
sub
repnz
jae
xor
mov
sbb
add
fimuls
jae
xchg
pop
push
add
add
adc
add
call
push
mov
xchg
ret
roll
mov
add
clc
repnz
jae
cmpsb
push
add
in
add
enter
cmp
ret
cltd
xor
add
add
test
add
fwait
cld
nop
jmp
add
jmp
jae
cltd
lods
mov
hlt
inc
test
jae
cmpsb
inc
pop
add
add
mov
clc
repnz
jae
out
mov
xchg
push
mov
xchg
ret
jmp
add
add
push
repnz
adc
test
popa
add
xchg
hlt
add
cmp
push
mov
xchg
ret
lock
add
add
mov
clc
repnz
jae
add
push
lods
nop
add
add
clc
repnz
jae
add
add
inc
add
mov
pusha
clc
repnz
jae
scas
sti
add
cmc
cltd
ret
fwait
cld
nop
jmp
cltd
push
pop
mov
clc
repnz
jae
add
scas
push
pop
add
adc
lcall
ret
lods
add
pusha
add
enter
jmp
add
lods
add
scas
or
or
push
mov
xchg
ret
and
add
add
sahf
ror
clc
repnz
jae
add
xor
add
test
out
clc
repnz
jae
das
push
inc
loopne
repnz
jae
pop
cltd
add
mov
jno
jecxz
out
lea
fwait
cld
nop
jmp
mov
add
inc
xor
inc
mov
fwait
cld
nop
jmp
push
jo
jmp
icebp
clc
repnz
jae
or
sti
movsl
lcall
add
push
add
clc
repnz
jae
xor
add
nop
jae
roll
scas
add
xchg
mov
clc
repnz
jae
inc
add
add
add
out
inc
add
xchg
cld
xor
add
shl
clc
repnz
jae
add
pop
add
mov
xchg
ret
lods
jecxz
add
neg
add
add
enter
bound
and
dec
push
push
fadds
xchg
adc
add
repnz
jae
add
add
repnz
jae
mov
fdivrs
add
repnz
jae
jmp
call
clc
repnz
jae
add
add
lcall
repnz
jae
xchg
das
push
daa
xor
sbb
clc
repnz
jae
nop
scas
out
and
jne
fwait
cld
nop
jmp
add
cld
nop
jmp
inc
push
jmp
add
xchg
add
je
clc
repnz
jae
add
and
sub
jae
sbb
sub
push
out
fldenv
arpl
cld
nop
jmp
dec
add
add
add
push
mov
xchg
ret
add
push
add
mov
clc
repnz
jae
add
add
add
add
cld
nop
jmp
ss
mov
add
add
add
mov
clc
repnz
jae
add
loope
je
clc
repnz
jae
add
out
mov
clc
repnz
jae
add
mov
jl
clc
repnz
jae
push
stos
add
add
xchg
mov
xor
add
clc
repnz
jae
sti
add
repnz
jae
cltd
pop
add
les
xor
sbb
test
add
clc
repnz
jae
add
pop
scas
xchg
clc
repnz
jae
lock
in
add
jmp
push
mov
xchg
ret
stc
cltd
pusha
add
cmpsl
xchg
add
clc
repnz
jae
mov
in
add
adc
mov
repnz
jae
lods
or
mov
clc
repnz
jae
xor
add
stos
clc
repnz
jae
add
roll
cltd
push
out
pusha
mov
or
repnz
jae
imulb
pop
add
pop
and
add
add
repnz
jae
mov
add
mov
lods
add
clc
repnz
jae
add
stos
data16
jne
fwait
cld
nop
jmp
jmp
add
clc
repnz
jae
das
scas
add
js
pop
or
add
add
cltd
in
add
add
sub
add
repz
push
clc
repnz
jae
stos
add
add
add
add
in
incl
adc
fcmovne
es
clc
repnz
jae
in
xchg
xchg
sbb
fwait
cld
nop
jmp
add
push
push
repnz
jae
push
stos
add
icebp
mov
clc
repnz
jae
cmpsb
push
add
add
add
clc
repnz
jae
cltd
stc
add
add
mov
sbb
add
add
fwait
cld
nop
jmp
add
mov
add
adc
add
repnz
jae
push
dec
imul
rorb
add
add
sbb
repnz
jae
add
sti
cmpsb
jmp
push
add
clc
repnz
jae
cltd
das
mov
popa
cld
add
fwait
cld
nop
jmp
add
stc
sbb
ss
jmp
push
fadds
add
cltd
add
add
scas
pop
and
mov
add
pop
and
clc
repnz
jae
sti
xchg
push
clc
repnz
jae
aam
or
mov
nop
jmp
add
add
mov
add
add
xorl
clc
repnz
jae
shrl
mov
add
add
add
add
add
push
lds
clc
repnz
jae
jecxz
lock
mov
add
jne
clc
repnz
jae
stos
add
jae
out
add
testb
add
pop
xor
clc
repnz
jae
dec
add
std
inc
clc
repnz
jae
add
add
das
add
test
fwait
cld
nop
jmp
add
add
or
sub
fwait
cld
nop
jmp
sti
mov
add
add
add
inc
clc
repnz
jae
add
push
push
push
mov
xchg
ret
jmp
test
int3
sub
clc
repnz
jae
add
add
xchg
add
mov
xchg
ret
or
cld
das
add
nop
jae
mov
xchg
add
mov
cmpsl
pop
imul
clc
repnz
jae
out
add
add
jb
lahf
cmp
fwait
cld
nop
jmp
sbb
add
jmp
stc
add
add
add
add
adc
data16
shrl
sbb
repnz
jae
push
add
add
add
movzwl
clc
repnz
jae
add
cltd
add
add
mov
clc
repnz
jae
add
add
mov
mov
xchg
ret
nop
add
mov
das
lock
test
repnz
lcall
add
add
add
adc
hlt
incl
dec
add
testb
in
or
leave
fwait
cld
nop
jmp
add
add
into
pop
clc
repnz
jae
xor
add
scas
or
push
mov
xchg
ret
mov
add
xor
clc
repnz
jae
push
add
loope
add
clc
repnz
jae
pop
xor
sub
add
clc
repnz
jae
add
scas
cltd
sti
scas
dec
push
push
mov
xchg
ret
add
testb
stc
cwtl
cmpl
fwait
cld
nop
jmp
fadds
das
nop
cmpsb
add
incl
add
das
lock
add
add
fwait
cld
nop
jmp
add
add
mov
or
add
push
roll
xchg
ret
add
or
add
fcomp
inc
add
scas
and
add
clc
repnz
jae
or
arpl
add
fwait
cld
nop
jmp
add
add
decl
push
mov
xchg
ret
cltd
adc
add
push
push
mov
xchg
ret
add
scas
add
fidivrs
clc
repnz
jae
lods
push
add
ret
add
mov
clc
repnz
jae
add
testb
mov
clc
repnz
jae
mov
add
push
add
repz
mov
xchg
ret
pop
add
xor
mov
push
mov
xchg
ret
add
lea
push
mov
xchg
ret
add
hlt
add
movb
add
clc
repnz
jae
add
dec
addr16
add
mov
jae
add
push
rep
clc
repnz
jae
add
pop
das
push
push
mov
xchg
ret
jmp
hlt
hlt
add
jae
repnz
jae
add
add
xor
repnz
jae
add
mov
xchg
cmpl
sbbl
add
add
cld
sub
nop
jae
jmp
pop
outsl
and
clc
repnz
jae
add
add
add
loopne
inc
add
out
add
add
repnz
jae
in
sti
xor
or
popa
add
repnz
jae
add
inc
mov
test
or
dec
add
mov
xchg
ret
add
sbb
cltd
outsl
mov
fwait
cld
nop
jmp
jmp
cmpsb
add
push
clc
repnz
jae
add
das
inc
pop
dec
adc
pop
pop
push
clc
repnz
jae
and
push
add
mov
xchg
ret
sti
push
add
cli
mov
clc
repnz
jae
add
in
outsl
movzwl
clc
repnz
jae
push
add
mov
dec
movzwl
clc
repnz
jae
pusha
add
clc
repnz
jae
add
add
data16
das
aad
jmp
pop
lods
add
xor
das
add
pop
cwtl
imul
clc
repnz
jae
adc
add
push
clc
repnz
jae
add
add
mov
push
mov
mov
jg
add
add
mov
add
pop
push
clc
repnz
jae
add
add
pop
push
mov
xchg
ret
add
cld
push
cltd
push
add
push
mov
xchg
ret
mov
add
clc
repnz
jae
add
and
andl
cmp
out
add
sub
idivb
repnz
jae
sti
add
add
xchg
xor
clc
repnz
jae
mov
xor
add
adc
repnz
jae
add
hlt
in
add
loop
mov
xchg
ret
stos
add
add
mov
clc
repnz
jae
sti
add
mov
loope
repnz
jae
lods
add
sub
jae
sti
stos
xchg
dec
add
xchg
mov
jmp
jmp
mov
add
insb
mov
clc
repnz
jae
dec
pusha
add
push
add
dec
push
clc
repnz
jae
sbb
sub
clc
repnz
jae
push
shrl
xchg
add
add
repnz
jae
pop
push
insl
cmp
fwait
cld
nop
jmp
add
add
jl
sbb
repnz
jae
add
pop
clc
repnz
jae
das
lock
aam
add
nop
push
add
nop
jae
add
cmpsb
cmpsb
add
cmp
jg
clc
repnz
jae
push
cltd
sbb
jmp
sti
add
inc
pop
hlt
sti
add
jmp
sbb
add
scas
hlt
cmpsb
add
push
mov
xchg
ret
sti
add
add
add
sub
clc
repnz
jae
xor
add
xchg
mov
nop
jae
pop
stos
add
add
add
mov
clc
repnz
jae
data16
pop
clc
repnz
jae
mov
dec
aam
and
add
popa
clc
repnz
jae
add
fadds
add
inc
add
repnz
jae
add
nop
add
mov
clc
repnz
jae
mov
out
add
cld
and
test
out
lcall
loopne
incl
add
repnz
jae
mov
jmp
add
mov
clc
repnz
jae
add
inc
add
cli
lcall
add
sub
sub
fsubs
add
push
add
add
nop
jmp
add
xchg
addl
add
add
nop
jmp
scas
data16
out
add
add
push
mov
xchg
ret
push
xor
lods
push
mov
xchg
ret
add
lods
push
popl
clc
repnz
jae
scas
add
add
ss
sub
clc
repnz
jae
push
xchg
add
andl
incl
add
push
data16
and
push
mov
xchg
ret
mov
add
sub
popa
clc
repnz
jae
mov
mov
ror
clc
repnz
jae
push
shrl
push
add
clc
repnz
jae
cld
mov
add
cmpsb
stos
mov
push
mov
xchg
ret
add
scas
add
ud1
fs
repnz
jae
add
sbb
mov
adc
repnz
jae
add
mov
pusha
mov
mov
xchg
ret
pop
add
pop
add
add
clc
repnz
jae
testb
pop
add
push
add
xor
push
mov
xchg
ret
mov
add
pop
add
mov
xchg
ret
data16
or
nop
jae
add
add
add
add
pusha
clc
repnz
jae
add
cltd
in
inc
fildl
into
call
clc
repnz
jae
mov
add
adc
repnz
jae
cld
add
test
dec
call
clc
repnz
jae
das
mov
mov
mov
clc
repnz
jae
stos
add
sti
add
add
push
clc
repnz
jae
add
push
inc
push
add
shll
add
inc
clc
repnz
jae
push
pusha
sub
in
movsb
add
je
clc
repnz
jae
add
jmp
incl
push
lock
sti
mov
das
inc
xchg
add
mov
cld
nop
jmp
jmp
add
push
fs
repnz
jae
add
push
inc
add
out
and
push
mov
xchg
ret
add
add
add
jae
cld
lock
or
in
add
jge
aas
add
add
cmpsl
sbb
lods
mov
push
aad
add
sbb
das
adc
add
mov
clc
repnz
jae
xchg
add
fadds
call
jmp
mov
push
not
push
mov
xchg
ret
pop
xor
nop
rolb
jp
dec
adc
mov
xchg
ret
push
add
aam
adc
aad
jmp
shr
add
add
and
jmp
flds
xchg
ret
add
add
add
add
add
push
mov
xchg
ret
testb
add
int3
call
clc
repnz
jae
inc
cltd
xor
loop
mov
icebp
fwait
cld
nop
jmp
jmp
and
add
repnz
jae
or
add
inc
add
add
neg
shr
clc
repnz
jae
inc
add
jne
clc
repnz
jae
add
add
mov
fistps
fdivr
call
pop
add
pop
add
repnz
jae
cltd
jecxz
push
adc
das
mov
clc
repnz
jae
inc
xor
nop
jae
add
or
mov
xor
add
enter
jae
push
add
stos
mov
mov
out
add
clc
repnz
jae
add
out
test
add
xor
repnz
jae
add
mov
addb
add
push
push
mov
xchg
ret
add
pop
add
pop
xchg
add
clc
repnz
jae
add
add
jne,pt
fwait
cld
nop
jmp
add
mov
clc
repnz
jae
jmp
push
sti
cmp
fwait
cld
nop
jmp
test
xchg
cmpsb
das
in
loopne
mov
clc
repnz
jae
hlt
xor
push
cld
nop
jmp
add
mov
add
push
push
mov
xchg
ret
data16
add
in
add
add
and
fwait
cld
nop
jmp
das
push
adc
add
dec
xor
clc
repnz
jae
add
add
jp
lret
clc
repnz
jae
hlt
in
push
push
add
add
mov
clc
repnz
jae
add
push
jmp
enter
jae
add
add
jecxz
mov
add
movswl
clc
repnz
jae
add
xchg
mov
jge
inc
add
pop
add
pop
inc
add
fwait
cld
nop
jmp
pop
add
xor
notl
jne
fwait
cld
nop
jmp
mov
jp
test
repnz
jae
add
sbb
movb
inc
add
pop
push
mov
xchg
ret
fdivr
add
add
pop
jae
mov
jmp
add
add
add
cld
add
enter
cmp
ret
pop
or
mov
push
ljmp
mov
lcall
hlt
xchg
das
jmp
clc
repnz
jae
fucomi
stos
add
add
add
ret
sbb
nop
jae
data16
dec
add
out
dec
div
fwait
cld
nop
jmp
scas
add
out
jecxz
sbb
push
add
ret
rep
fwait
cld
nop
jmp
imulb
add
sbb
add
js
mov
add
add
add
fildl
ljmp
inc
add
add
add
repnz
jae
push
add
add
add
inc
add
nop
jmp
add
add
cmp
push
mov
xchg
ret
lock
pop
cltd
add
push
clc
repnz
jae
add
add
mov
mov
cld
nop
jmp
fsubrs
nop
das
ss
inc
add
push
clc
repnz
jae
add
add
cld
cmpsb
add
dec
adc
ret
add
pop
add
sub
test
fwait
cld
nop
jmp
xor
or
nop
jmp
add
add
add
dec
push
push
mov
xchg
ret
add
add
push
xchg
sti
stos
mov
clc
repnz
jae
add
pusha
pop
sub
jmp
das
add
hlt
add
add
lret
mov
clc
repnz
jae
stos
xor
add
mov
out
inc
add
add
add
push
sbb
repnz
jae
stc
cltd
add
clc
repnz
jae
add
jmp
push
mov
xchg
ret
hlt
add
add
add
rol
push
mov
xchg
ret
stos
cltd
cltd
ss
push
push
mov
add
aam
testb
add
ret
outsb
jecxz
sahf
pop
push
mov
xchg
ret
dec
add
add
xor
nop
jmp
mov
add
add
push
inc
or
mov
xchg
ret
add
scas
add
inc
push
mov
xchg
ret
pop
add
push
push
mov
xchg
ret
add
add
clc
repnz
jae
xchg
jmp
add
add
je
clc
repnz
jae
add
add
test
fwait
cld
nop
jmp
add
push
xor
xchg
jnp
fwait
cld
nop
jmp
pop
add
add
popl
nop
jae
add
xchg
add
add
popa
clc
repnz
jae
and
data16
add
add
xor
clc
repnz
jae
add
add
fdiv
add
push
clc
repnz
jae
dec
add
cmpsb
xor
pop
add
clc
repnz
jae
push
mov
mov
clc
repnz
jae
cltd
add
pop
mov
das
insb
pop
fwait
cld
nop
jmp
add
add
hlt
scas
pop
xor
mov
clc
repnz
jae
stos
add
add
out
lcall
ljmp
add
add
add
lea
clc
repnz
jae
das
fucomi
test
fdivs
mov
popf
fwait
cld
nop
jmp
das
xchg
add
add
mov
xchg
ret
push
test
scas
add
mov
repnz
mov
clc
repnz
jae
cltd
jmp
mov
add
pop
jae
repnz
jae
mov
add
xor
jae
add
mov
dec
lea
clc
repnz
jae
das
idivb
add
clc
repnz
jae
jecxz
add
stos
sbb
out
loop
add
add
add
loope
mov
fwait
cld
nop
jmp
lods
add
pop
push
push
mov
xchg
ret
cltd
add
add
cld
and
add
fwait
cld
nop
jmp
push
add
cld
nop
jmp
inc
jecxz
and
nop
jae
add
add
das
add
add
add
popa
inc
pusha
add
clc
repnz
jae
add
add
add
ficomps
mov
xchg
ret
jmp
pop
sub
ja
clc
repnz
jae
add
dec
mov
clc
repnz
jae
pusha
push
scas
dec
cmpsb
divb
nop
jae
jmp
add
sti
mov
push
mov
xchg
ret
add
add
pop
add
push
push
mov
xchg
ret
pusha
add
roll
add
je
push
add
repnz
jae
add
mov
stos
add
push
mov
xchg
ret
mov
add
push
push
mov
xchg
ret
cld
stc
ss
pusha
mov
pop
mov
clc
repnz
jae
inc
add
push
push
jecxz
add
mov
xchg
ret
add
add
mov
push
mov
jnp
int3
dec
sbb
add
push
xchg
pop
in
push
mov
add
dec
imul
add
aam
add
cld
nop
jmp
add
add
add
add
das
push
mov
cmp
jno
xor
add
popl
add
mov
add
mov
sbb
pop
dec
jo
lock
add
loopne
and
mov
add
add
add
xchg
std
mov
mov
jp
add
rolb
leave
fcoms
bound
mov
arpl
in
int
sbb
addb
lahf
mov
add
xchg
add
add
fisttpl
mov
dec
dec
xchg
add
add
fsubrl
add
push
add
lea
je
xchg
add
inc
add
xor
test
pop
mov
xchg
add
add
mov
mov
in
and
mov
cmp
add
addb
in
jg
ret
sbb
aam
fcomps
and
inc
add
in
addb
add
cli
pop
das
inc
xchg
add
aam
or
add
add
push
add
inc
aad
lock
rolb
rolb
dec
cmpsb
add
add
rcll
ljmp
arpl
imul
popl
xlat
in
push
jo
test
fsubs
sub
mov
movsl
sub
add
testl
add
hlt
add
imul
xlat
xchg
add
adc
lcall
loop
outsl
jmp
add
cwtl
sub
sub
add
jp
sbb
add
fwait
push
pop
std
fists
rolb
dec
ljmp
sub
cltd
mov
jg
xchg
add
pop
or
cwtl
xchg
aam
pop
pop
rolb
jnp
dec
test
add
inc
mov
sbb
add
add
das
mov
jle
pop
std
inc
jle
dec
sub
xorl
push
sub
inc
add
sbb
dec
jb
or
mov
add
add
int3
add
add
cld
out
add
add
popf
addb
in
leave
das
add
add
jno
nop
add
xchg
add
sbb
inc
add
adc
imul
add
add
push
add
movsb
add
add
fistpll
dec
addr16
loopne
and
mov
fwait
push
add
adc
imul
loope
sbb
dec
int3
pushf
mov
fidivl
adc
test
adc
out
add
lret
enter
add
addb
leave
sbb
mov
inc
mov
add
jg
pop
in
jns
iret
jbe
and
call
sbb
and
imul
inc
aad
and
mov
pushf
mov
dec
mov
xor
pop
out
gs
mov
adc
adc
iret
fadds
addb
push
add
jne
add
add
mov
add
cmp
fstpl
inc
add
xchg
icebp
xchg
mov
ljmp
call
adcl
jne
push
mov
cld
jg
jecxz
sub
inc
jo
mov
xor
or
inc
mov
add
mov
add
add
mov
mov
add
inc
incl
push
mov
stos
insb
push
add
add
add
add
sub
jg
jae
push
add
ret
mov
sbb
add
mov
add
mov
add
imul
add
pusha
add
sahf
mov
add
xchg
pop
aam
add
add
xlat
push
add
icebp
testb
ja
call
pusha
add
add
add
out
push
add
add
cmpsl
test
scas
sub
add
dec
add
mov
loop
ret
add
xchg
add
out
push
jbe
jb
sub
pop
test
inc
add
fwait
sti
add
sti
sahf
jl
dec
pop
mov
add
mov
add
loopne
mov
add
pop
data16
movntq
inc
pop
stc
dec
loopne
push
pop
int
repz
mov
add
rolb
orl
data16
mov
repnz
notl
in
adcl
or
push
mov
scas
sahf
lea
pop
mov
add
stos
pushf
mov
inc
add
roll
jo
adc
sbb
add
das
fidivrs
xchg
add
sbb
add
ret
xchg
add
lods
inc
and
add
add
or
add
add
add
adc
add
std
sub
push
ficomps
inc
icebp
jle
nop
add
mov
adc
add
pop
jmp
jge
jg
add
lds
mov
add
cli
aad
cmpsl
fmull
frstor
add
sub
dec
rolb
fmulp
imul
push
add
push
add
add
clc
push
add
daa
flds
jmp
dec
jmp
data16
insb
cmpsb
add
lock
rolb
jg
gs
sub
pop
push
sbb
add
add
adc
loop
push
add
add
push
or
xchg
mov
inc
add
add
add
add
push
rolb
push
add
pushf
mov
std
inc
fists
add
add
movsl
cwtl
and
mov
sub
jmp
jnp
add
cwtl
xchg
add
add
push
mov
push
mov
add
mov
jl
cld
sub
xlat
add
mov
std
push
out
jno
push
add
xchg
js
add
mov
sbb
lods
sbb
call
popa
mov
cltd
add
mov
insb
add
xor
dec
cs
mov
mov
push
add
or
insb
call
stc
fld
mov
iret
inc
add
in
sahf
mov
xchg
add
sub
add
setb
ja
sbb
fsts
cmp
add
add
add
add
sub
js
lock
mov
sub
add
push
add
dec
mov
rcll
scas
sbb
aaa
nop
add
add
lret
add
mov
push
add
fistpll
add
icebp
inc
inc
add
sub
nop
add
mov
fsubrs
xchg
fstpt
in
xor
add
mov
sub
lock
add
mov
pop
and
testb
fidivrs
loop
add
hlt
add
xchg
sub
sbb
cld
jmp
jge
push
testb
add
mull
xor
test
inc
add
mov
push
add
testb
add
test
sub
fmuls
inc
fists
cld
add
sub
add
or
xor
inc
add
add
add
lcall
add
and
mov
cmp
pop
daa
add
xor
outsl
adc
das
xchg
jo
or
jb
lea
xor
or
adc
pushf
push
pop
insb
sub
mov
pop
pop
mov
test
out
leave
push
push
ret
rorl
add
dec
nop
add
xor
mov
fistl
pusha
add
sbb
daa
xlat
mov
movsb
add
lret
dec
lds
xchg
pop
xchg
cmp
clc
lcall
hlt
add
sbb
add
lret
rcrl
add
mov
add
call
add
cmpl
push
push
jo
sub
fwait
movlps
out
jmp
xorl
mov
jl
add
aaa
pop
sbb
xchg
lcall
push
fisubrl
xlat
mov
arpl
dec
mov
add
adc
pop
in
popf
fxch
mov
xor
push
cltd
aas
xchg
jno
clc
dec
mov
mov
arpl
bound
mov
test
xchg
leave
and
mov
pop
les
adc
mov
push
mov
and
mov
add
imul
pop
dec
aas
mov
stos
lods
notl
push
add
add
pusha
add
cmp
movb
add
sub
cs
cmp
push
dec
test
add
lea
aam
loop
inc
push
add
jp
cmc
scas
fmuls
adc
add
add
mov
lret
xchg
add
stos
sub
idivl
and
testb
dec
cli
scas
mov
leave
sahf
bound
mov
jns
mov
and
inc
mov
mov
and
add
mov
sbb
add
cmpsl
daa
or
movsb
add
add
add
mov
arpl
add
push
lret
loopne
and
pop
push
xor
add
add
mov
add
add
call
nop
add
icebp
or
xchg
add
add
jns
rolb
aaa
movsl
mov
popa
sbb
mov
movsb
add
add
jae
xchg
outsb
cmp
push
add
ljmp
aad
jo
loope
shr
outsb
mov
fstpt
adc
in
add
add
add
inc
add
popl
add
and
add
add
mov
dec
push
mov
arpl
push
jle
add
rolb
dec
data16
mov
ret
adc
popf
aad
ds
inc
xor
rolb
push
les
and
mov
mov
add
add
pusha
add
orl
cwtl
sbb
add
dec
sub
xlat
adc
cltd
les
mov
in
movsl
mov
jno
sbb
loope
popa
push
push
fdiv
pop
push
add
add
arpl
add
xchg
jge
or
stos
lret
iret
jge
outsb
les
pop
xchg
loope
in
mov
add
inc
and
add
movsb
add
jae
cwtl
movsb
add
add
mov
loop
stos
push
mov
mov
dec
sarl
add
out
out
cmp
clc
inc
push
add
add
les
int3
mov
repnz
cs
jmp
xor
xchg
add
add
jno
scas
push
pushf
jne
lods
les
jne
popa
stos
idivl
das
push
inc
add
testl
fiaddl
adc
fstps
testb
add
std
mov
outsb
sub
out
jl
jecxz
and
mov
add
or
jno
in
insb
adc
lahf
cmp
fwait
dec
scas
cld
xchg
scas
xchg
xchg
add
fidivl
add
jge
add
aam
test
sar
xchg
push
add
rolb
add
cld
inc
mov
inc
add
and
repz
rolb
inc
add
movb
stos
sub
xchg
xchg
add
cli
cmp
add
js
cltd
xchg
xlat
dec
dec
pop
cmp
sbb
add
dec
push
add
mov
add
outsb
mov
mov
test
add
add
add
dec
test
xor
add
add
cmp
add
call
fdivrs
movb
xchg
add
pop
nop
add
js
cmp
add
dec
mov
ficoml
enter
lds
fwait
outsb
xchg
lahf
xchg
add
xor
add
imul
mov
sbb
adc
sub
jnp
repnz
push
add
cld
dec
sbb
fcomps
cwtl
loope
cmp
jg
xchg
add
add
add
xlat
push
add
add
add
mov
sub
inc
out
xchg
add
jne
pop
mov
add
lock
mov
push
int
add
hlt
add
add
add
add
sahf
jnp
cmp
aam
daa
jecxz
scas
or
rolb
xor
out
repnz
mov
mov
xchg
and
cmc
nop
add
pop
add
and
add
adc
aaa
push
add
sbb
add
xor
adc
out
mov
adc
and
sub
adc
cmp
add
mov
mov
int
cwtl
mov
popf
or
notl
stc
out
lcall
add
mov
icebp
push
and
mov
imul
push
xchg
and
mov
daa
mov
adc
pop
mov
cs
adc
xchg
add
and
lret
cmc
mov
push
rolb
rolb
or
rolb
adcl
jae
pop
adc
addb
inc
xorl
rolb
popf
data16
cs
add
add
add
das
mov
sub
xor
enter
add
fists
rolb
dec
sbb
mov
shll
add
add
jnp
add
popa
xchg
cli
insb
sub
shr
xchg
add
mov
add
aaa
addr16
xchg
add
push
pop
testb
sub
mov
sub
add
jnp
data16
push
add
inc
xchg
add
adc
testb
add
daa
xchg
loope
add
xlat
and
xchg
int
add
mov
lea
and
mov
mov
mov
push
ret
js
lahf
and
mov
cmc
dec
pop
mov
call
jle
add
add
add
xchg
movb
add
sbb
add
in
repz
cmp
mov
push
add
or
and
lods
mov
push
add
push
mov
pop
js
cmp
fisubs
scas
push
and
jp
or
jl
jne
repz
mov
sbb
add
outsl
cld
push
add
std
inc
icebp
rolb
xor
and
add
stos
into
ret
stc
jo
sahf
push
jb
xchg
lcall
cmc
mov
add
add
push
cmp
mov
or
je
lods
out
sub
add
push
mov
pop
lret
xchg
sbb
mov
pop
cmpsb
add
test
push
rolb
mov
aad
pop
out
pop
test
lret
cmp
add
sub
add
mov
sub
add
test
xor
mov
pop
push
add
mov
jg
add
mov
les
add
add
add
mov
inc
add
das
jle
outsb
mov
les
jo
aaa
jne
fldt
mov
mov
pop
rolb
add
mov
add
add
add
ret
std
and
mov
fwait
lea
sbb
data16
add
add
inc
add
fcmovnb
cmpsl
mov
ficoml
fidivs
push
cmpsb
add
add
jmp
adc
jecxz
mov
push
add
add
mov
add
repnz
cli
or
imul
add
pushf
or
add
cmp
add
mov
add
into
into
movsb
add
test
adc
fisttps
sbb
jo
inc
add
add
inc
repnz
add
lods
sbb
mov
int
in
cmp
repnz
xor
add
or
popa
fnstcw
add
sbb
mov
dec
add
inc
add
insb
jo
stos
mov
xor
and
mov
add
cld
shr
push
add
nop
add
rolb
icebp
jl
and
mov
inc
xchg
icebp
mov
add
inc
pusha
add
dec
xchg
fstp
ja
loope
add
jge
push
add
add
dec
dec
data16
int
and
mov
add
add
and
mov
mov
cld
jo
adc
add
lock
jecxz
fcom
add
add
add
add
push
fldl2e
arpl
pop
aaa
mov
test
add
cli
push
add
mov
mov
das
movsb
add
push
add
or
cmpsl
xor
idivl
add
inc
add
add
add
mov
add
aaa
pop
mov
add
fiaddl
adc
pushf
cmp
out
jle
addr16
ja
add
cmpsl
addr16
stos
addb
dec
stos
fisttps
mov
xor
aad
add
add
add
pusha
add
ja
iret
push
add
addb
push
add
add
mov
mov
in
inc
cwtl
mov
mov
or
inc
add
add
adc
mov
add
xchg
loopne
in
cmpsb
add
pop
test
gs
bound
mov
xlat
sub
ljmp
testb
add
lods
xor
add
aaa
mov
and
mov
out
aas
fistpll
ljmp
mov
add
add
lods
sarl
jmp
xchg
lcall
in
mov
xor
sub
push
add
mov
pop
dec
sbb
add
mov
add
rolb
ljmp
xchg
fcompl
mov
insl
shll
fimull
sbbl
bound
mov
ret
mov
pop
inc
add
add
add
xor
addl
test
add
add
movb
add
jmp
add
add
loop
imul
jns
xlat
push
add
test
jp
ljmp
add
jo
pusha
add
jns
add
pop
xor
or
and
add
sub
mov
xor
loop
mov
add
inc
add
add
scas
xchg
loop
pop
movb
or
sbb
push
add
cs
fcmovnb
mov
add
add
add
dec
xlat
hlt
add
mov
sub
add
add
ja
and
mov
add
or
add
adc
enter
fisttpll
add
cmp
xchg
add
mov
inc
or
adc
lock
rolb
jmp
cmp
sub
nop
add
add
jle
dec
cltd
rolb
mov
add
pop
mov
mov
add
enter
add
mov
scas
enter
sub
add
add
xchg
add
add
jno
out
adc
mov
clc
ret
aas
lods
push
add
add
mov
add
push
add
inc
add
movsb
add
int
into
sbb
jecxz
fs
add
add
add
mov
pop
aam
mov
add
mov
add
out
mov
add
push
xchg
adc
sbb
mov
add
aad
lret
sbb
xor
mov
rolb
adc
mov
add
mov
loopne
sbb
add
ljmp
cld
xchg
push
or
adc
inc
mov
cmpsb
add
add
add
mov
jae
int3
xor
call
pop
jmp
cs
ja
add
mov
in
add
add
push
add
clc
movsl
ret
mov
stc
dec
pop
sbb
popf
or
sub
add
data16
or
test
add
daa
xchg
add
mov
add
sub
add
xor
add
add
fsubrs
xor
push
adc
add
add
lock
ret
mov
push
add
mov
shrl
add
cwtl
out
stc
scas
mov
imul
dec
lahf
bound
mov
jo
xor
and
mov
pop
mov
in
bound
mov
dec
mov
adc
call
js
and
sub
mov
add
jge
xor
mov
add
cmpl
add
add
add
insb
mov
cmp
dec
jo
popa
aas
mov
xor
mov
sbb
out
nop
add
pop
sub
xor
in
cmp
mov
jl
add
hlt
add
add
xor
in
xor
add
cli
xchg
cli
iret
movb
push
data16
leave
out
sub
add
add
cli
sbb
call
add
add
jge
jnp
mov
aam
lcall
or
popl
xor
dec
test
dec
or
mov
pusha
add
ret
rcrl
mov
jnp
mov
rcrl
xchg
add
mov
inc
mov
push
add
add
adc
mov
fwait
js
mov
mov
mov
add
add
repz
lods
icebp
pop
sub
hlt
add
repz
add
add
add
add
add
xor
fiaddl
add
dec
xchg
add
add
adc
jle
cld
fsubr
add
add
inc
add
add
fdivs
inc
aas
stc
add
insl
and
inc
add
scas
repnz
mov
xor
mov
add
add
jno
add
jle
mov
add
sbb
loopne
and
sub
add
dec
mov
mov
xchg
add
adc
rcll
or
inc
lcall
es
icebp
cmp
sub
sahf
push
cmp
add
add
fsubrs
in
int3
js
add
ja
sbb
addr16
pop
cmpsb
add
add
xor
addb
aas
leave
mov
inc
les
push
pop
ret
mov
xchg
add
out
leave
xchg
add
fdivrs
add
pop
xchg
fsub
sub
add
add
add
adc
push
imul
dec
insb
rolb
xlat
test
jge
pop
mov
mov
mov
out
add
push
test
aas
mov
addb
jo
jecxz
inc
push
add
stos
cmp
bound
mov
mov
and
pop
nop
add
subps
cs
pop
insb
pop
pop
pop
pop
fwait
pop
or
mov
jmp
mov
and
dec
dec
rolb
push
add
movb
add
inc
add
add
or
sbb
ffreep
add
les
std
rolb
mov
ficoms
sub
aad
sub
ljmp
add
push
add
mov
addb
lahf
xchg
shll
jb
enter
arpl
mov
je
mov
adc
mov
xbegin
lods
jmp
add
jno
cmp
adc
fcmovu
test
pop
inc
stos
in
push
add
mov
jecxz
daa
jmp
jns
adc
mov
add
add
cmpsb
add
sbb
adc
lcall
rcll
sarl
sbb
add
jmp
jmp
push
add
jne
add
xchg
pop
sub
ljmp
jo
rolb
mov
sbb
add
add
add
add
add
daa
push
add
push
jae
jno
pop
push
add
in
mov
insb
in
pop
dec
arpl
add
sub
sbb
shll
daa
pop
es
add
sbb
lahf
dec
rolb
fsub
outsl
in
inc
add
pop
adc
add
mov
add
jl
add
add
add
lahf
fisubrl
insb
xor
in
outsb
add
add
mov
dec
push
cmp
sbb
xor
pop
pop
mov
lock
add
or
jmp
idivl
add
arpl
mov
push
add
loope
mov
adc
cli
out
das
inc
add
divl
shl
imul
jp
add
pop
pop
mov
sub
fildl
inc
dec
aam
cmp
cltd
movsb
add
movsl
rolb
mov
add
add
int3
call
pop
loop
jp
or
add
add
mov
scas
adc
add
add
add
sahf
fwait
pop
sub
pop
push
add
mov
dec
push
sbb
repz
add
mov
or
mov
das
stos
je
leave
mov
add
add
mov
arpl
add
add
add
and
add
add
add
add
push
add
jecxz
cmpsb
add
mov
icebp
incb
sub
out
in
shll
shll
pop
or
jb
insl
jle
sub
add
jnp
add
dec
jne
add
into
jno
or
loop
rolb
cmpsb
add
add
push
and
mov
or
add
addl
jns
sbb
js
add
sub
add
mov
cli
addr16
mov
stos
add
mov
push
add
je
dec
ja
sti
call
dec
movsb
add
lds
dec
movsl
lret
xor
outsb
fwait
js
add
inc
add
mov
push
add
cs
negl
jp
inc
icebp
testl
add
add
cld
sub
sbb
dec
lea
pop
inc
add
icebp
sbb
jg
cmpsl
leave
cwtl
sbb
ret
and
in
mov
dec
xlat
in
sbb
in
jle
add
movb
add
test
add
cmpsb
add
jae
xor
inc
fdiv
add
stos
dec
mov
add
lret
add
jge
xchg
push
or
add
ret
sub
jb
sub
add
jae
out
addb
mov
push
add
cmc
test
add
dec
pop
mov
ja
dec
xchg
mov
sub
addb
arpl
cmp
and
and
mov
mov
mov
dec
dec
add
cli
xchg
hlt
add
rolb
adc
and
mov
and
mov
mov
jl
sub
xchg
add
fsubr
jae
inc
add
das
scas
xor
jle
add
and
mov
cmp
push
add
xchg
add
out
in
add
icebp
and
jo
jg
sub
add
pop
and
mov
add
ljmp
push
xchg
add
add
adc
add
inc
pop
fnsave
xchg
add
adc
fdivs
add
add
jbe
pop
sub
test
mov
popa
jge
jnp
xchg
and
xchg
add
stos
fldcw
mov
sbb
fsubs
xchg
bound
mov
mov
mov
decl
pop
dec
dec
mov
add
cld
and
add
cmp
add
pop
in
inc
cwtl
movb
mov
mov
mov
add
sbb
add
sub
add
mov
and
add
mov
add
add
js
add
add
pop
dec
data16
in
roll
adc
dec
adc
out
in
xor
repz
aam
sub
mov
repnz
add
ja
leave
jnp
pushf
rolb
add
addb
imul
loope
insb
cmp
add
mov
out
jb
inc
add
fucomp
xchg
add
add
pusha
add
outsl
xor
cmp
mov
repnz
push
fdivrs
add
add
add
add
stc
out
lods
out
mov
adc
jb
repnz
add
fnstsw
loope
sbb
mov
and
mov
imul
mov
add
or
add
push
jl
repz
mov
addb
xor
sbb
js
sub
and
jns
add
jb
push
add
pop
addb
aaa
test
iret
addr16
addr16
pop
push
add
test
add
testb
dec
jl
pop
mov
add
add
push
add
xchg
sbb
arpl
inc
xor
outsl
daa
stc
and
mov
in
adc
cmovle
lods
cltd
mov
mov
add
xchg
add
fsubrs
add
pop
xchg
mov
das
inc
pushf
mov
mov
ja
add
jge
add
pop
test
int3
hlt
add
jmp
repz
rolb
ljmp
add
add
add
jo
inc
movb
add
xor
mov
add
mov
and
out
call
add
mov
cmpsb
add
enter
sub
push
add
insl
pop
jle
fstl
add
sub
sub
mov
add
mov
add
addb
add
in
xorl
mov
pop
mov
push
xchg
add
xchg
xchg
clc
movsb
add
in
stc
rolb
inc
ss
add
adc
out
xor
push
imul
stc
xor
mov
loope
aaa
stc
cmpsl
rolb
add
sub
add
add
add
push
inc
gs
icebp
sub
loopne
adc
xlat
les
mov
imul
add
movb
sub
add
repnz
push
xor
or
cmp
push
add
lret
jno
mov
push
push
add
add
jle
out
fcoms
add
jnp
sbb
movsl
fistps
je
inc
add
int
gs
shl
add
push
add
add
add
lods
push
lcall
adc
repz
mov
adc
mov
mov
xchg
dec
je
js
lcall
idivl
mov
add
ds
imul
rolb
pop
pop
mov
jns
add
or
pop
pop
adc
pop
adc
jno
dec
pop
ret
cmc
or
add
mov
cmpsl
add
push
fcomip
add
push
add
into
aad
push
inc
add
add
cmc
fs
add
bound
mov
add
into
xchg
movsb
add
jnp
out
add
mov
add
scas
fdivl
xor
lods
mov
lret
loope,pn
and
xor
lock
bound
mov
jmp
sbb
pop
or
lea
addr16
mov
add
sub
cltd
xchg
mov
int3
sbb
fnsave
add
add
or
je
int3
push
add
pop
fidivs
pop
jmp
add
inc
std
adc
and
pop
dec
mov
ret
sub
addb
add
mov
sbb
add
add
call
pop
scas
fsub
xchg
addl
or
add
rolb
popf
inc
aam
mov
data16
lock
imul
gs
insl
mov
add
jns
lcall
xchg
cli
movb
mov
in
cwtl
cmpl
push
iret
cmp
mov
popf
mov
testb
cmp
mov
cmp
adc
xlat
jne
adc
daa
jmp
sbb
fwait
mov
sbb
inc
pusha
add
inc
jg
adc
dec
mov
jl
add
add
mov
cld
push
lret
out
data16
mov
add
cli
or
jmp
add
inc
add
aam
xor
out
fwait
loop
aam
mov
cltd
outsb
push
popa
adc
cltd
or
aaa
out
xchg
add
pop
xor
mov
jb
add
insl
sub
push
add
dec
lods
testb
add
mov
rolb
fsubs
mov
xor
add
xchg
cmpsl
push
popa
pop
js
inc
adc
imul
test
cmp
add
iret
pop
ljmp
rorl
inc
add
sub
mov
cs
and
mov
out
add
loopne
andl
popa
add
adc
stc
mov
cs
pop
outsl
push
out
inc
outsb
fdivl
fdivrl
into
xor
jnp
sbb
xor
sbb
in
test
add
test
cli
push
add
testb
aad
jg
or
jne
adc
adc
rolb
push
sub
inc
sbb
mov
iret
lods
xchg
push
add
mov
or
mov
lret
xlat
xor
mov
xchg
cwtl
ds
add
data16
add
jae
add
mov
jno
lret
add
mov
pop
push
mov
fs
add
mov
les
imul
lock
and
add
popf
hlt
add
xchg
push
add
xor
mov
add
mov
add
add
scas
xlat
das
clc
or
rolb
iret
ret
inc
jb
insb
nop
add
mov
sahf
add
jne
add
cmp
add
movsb
add
xchg
xlat
cmc
aas
inc
or
data16
add
int
add
add
pop
xchg
sbb
and
add
std
dec
dec
xor
dec
inc
or
mov
mov
and
mov
add
jp
add
add
mov
mov
adc
dec
aaa
pusha
add
les
cmpsb
add
add
imul
mov
mov
pop
scas
add
mov
mov
dec
cmp
fs
cltd
sti
add
mov
mov
popf
in
adc
mov
mov
cmp
add
into
sub
jae
add
adc
lcall
push
add
imul
in
add
push
add
add
mov
mov
dec
out
add
stc
lock
inc
add
add
jae
jge
nopl
sbb
add
mov
add
fidivl
mov
mov
sbb
push
imul
xchg
add
add
imul
mov
push
sbb
add
add
ja
inc
and
xchg
add
sub
add
test
add
add
stos
lods
and
add
outsb
mov
push
add
repnz
add
xchg
add
je
add
mov
aas
bound
mov
movb
xchg
mov
ljmp
fwait
bound
mov
adc
pushl
add
aad
cli
mov
mov
mov
in
test
xchg
add
add
adc
push
add
add
ret
jge
test
cltd
pop
pop
out
push
add
mov
loop
pop
pop
repnz
fwait
pushf
jne
sahf
mov
jns
jmp
icebp
mov
popf
and
mov
add
dec
xchg
xchg
iret
add
shll
lret
and
jle
rolb
jmp
add
mov
inc
add
add
jae
test
out
push
add
jae
mov
lret
add
xchg
add
add
add
push
add
push
add
jo
in
or
add
lds
add
fsubrs
stos
pop
in
int3
lcall
outsb
xchg
add
into
xor
add
mov
add
ds
stos
cmp
sub
cmpsb
add
imul
add
lods
pop
mov
mov
and
jge
fstpl
rolb
lods
clc
ljmp
mov
addb
add
sbb
push
push
mov
push
xlat
std
xchg
and
mov
jns
add
sti
jbe
jns
add
es
or
jmp
push
add
push
js
dec
fdivl
xor
sahf
dec
add
hlt
add
add
pushf
clc
lock
mov
loopne
cmp
add
xor
sub
pop
cmp
sub
jg
mov
addb
mov
add
push
inc
add
add
fwait
jg
mov
and
mov
cld
roll
add
bound
mov
add
add
mov
and
mov
outsb
push
add
lcall
jo
pop
push
add
add
jns
add
mov
mov
add
xchg
add
gs
fistpll
cmc
inc
roll
cmp
add
push
lahf
cmp
jnp
xchg
stos
ficoml
jno
inc
add
sbb
add
mov
xorl
testb
push
jo
shll
add
xor
sub
icebp
add
add
sbb
pusha
add
or
add
aad
add
cmpsl
fstl
pop
xor
jnp
add
add
or
add
xor
push
add
add
add
add
jnp
inc
add
add
shll
add
sbb
outsl
push
add
add
cli
jecxz
adc
data16
fsubrl
daa
out
iret
inc
add
mov
rolb
ret
add
mov
pop
mov
in
out
imul
loop
test
inc
add
pop
pop
jecxz
popf
sbb
add
outsl
and
mov
arpl
add
mov
mov
daa
decb
mov
add
cli
sub
test
mov
add
loop
push
add
sub
cmp
mov
cmpsl
mov
xchg
add
test
insb
mov
add
pop
jne
add
cmp
lods
jp
push
add
psubsw
ret
cmc
stos
xchg
sbb
cmp
mov
test
stos
push
jge
aaa
inc
add
push
add
rolb
test
das
stc
in
sub
pop
lret
icebp
add
andl
daa
in
adc
pop
cmp
add
rolb
mov
sbb
mov
add
add
lret
and
pushf
addb
scas
into
add
add
add
aaa
xchg
or
out
jle
add
pop
pushf
cmp
sbb
add
adc
loopne
jae
add
cmp
insl
fcoms
int3
mov
movb
das
rcr
rolb
fptan
add
repnz
cmp
add
add
add
xor
test
ds
pop
addr16
mov
fsubl
cmp
push
add
fwait
mov
int
pop
mov
add
sbb
push
add
mov
insl
mov
in
ficoml
movb
jg
add
add
push
lock
push
add
jl
test
and
loopne
iret
mov
repz
add
mov
dec
mov
sbb
push
add
mov
jecxz
push
add
test
pop
push
add
add
js
jl
add
mov
adc
mov
aaa
icebp
mov
popf
push
add
mov
scas
add
add
pop
fsubs
add
daa
jl
sahf
ret
push
add
add
add
add
out
push
add
xlat
fwait
stos
or
rolb
inc
add
add
out
inc
mov
repnz
lea
mov
add
mov
addr16
lods
dec
fwait
daa
jl
mov
mov
fstpt
sti
cli
and
rolb
popa
movb
push
add
pop
pop
insb
faddl
push
add
mov
cltd
adc
adc
pop
and
mov
js
dec
or
jge
arpl
xchg
add
and
mov
adc
call
add
add
mov
mov
push
add
imul
fldl
add
add
mov
pop
bound
mov
xchg
add
mov
adc
add
mov
pop
in
imul
cmp
rolb
mov
sub
xchg
jno
xor
push
add
add
pusha
add
jae
cmpsb
add
bound
mov
add
xlat
lahf
cmp
sahf
cmp
call
xchg
add
lds
and
dec
cwtl
inc
add
inc
sub
fnsave
jb
or
mov
cmp
pop
xor
mov
jle
xchg
add
add
adc
sbb
push
mov
add
pusha
add
add
pop
scas
adc
inc
cmpsb
add
lahf
sbb
pop
and
pop
add
rolb
addb
or
ds
popf
pop
pop
jl
loope
adc
mov
add
xchg
xor
mov
inc
add
mov
iret
test
in
mov
xchg
jbe
push
in
cld
and
dec
data16
pop
mov
nop
add
xor
cmp
popf
mov
movsl
std
push
lret
addb
add
mov
out
mov
add
pop
inc
fiaddl
add
and
sahf
and
adc
call
add
push
or
add
test
sub
fnstcw
xor
test
imul
jle
mov
sbb
inc
add
adc
in
fsubl
rolb
cmp
faddl
loop
inc
add
inc
add
nop
add
pop
cmp
sub
add
ret
mov
add
jae
add
add
addb
and
cmp
iret
out
aas
adc
test
rolb
add
add
add
or
pop
adc
in
divl
add
pushf
xchg
pop
jae
ljmp
repnz
insl
test
popf
bound
mov
dec
add
out
aam
outsl
xchg
add
add
add
add
ficomps
cli
scas
pop
adc
repnz
addb
aaa
pop
in
enter
scas
lock
mov
jl
add
add
loop
testb
mov
mov
or
add
xchg
notl
mov
nop
add
add
add
add
ud1
loopne
lea
iret
stos
pop
fwait
mov
loope
adc
push
cmpsb
add
test
rolb
pop
mov
push
adc
and
mov
decl
div
data16
add
mov
mov
jb
ja
add
in
or
ja
lret
sub
add
add
push
lret
jge
add
or
pop
push
mov
sbb
add
add
add
mov
mov
add
mov
adc
jnp
add
add
in
mov
add
add
rcr
mov
pop
adc
jo
std
push
jae
sbb
pop
adc
add
mov
into
pop
dec
leave
enter
dec
aas
push
dec
fiaddl
or
insb
lods
xor
adc
lock
xlat
cmp
jae
add
sub
add
lcall
ret
enter
jae
xchg
leave
push
inc
add
and
add
enter
add
add
add
paddd
pushf
pop
addr16
add
add
aas
xchg
xchg
inc
add
add
or
push
add
add
push
add
cmp
mov
add
out
push
add
add
out
bound
mov
inc
std
cmp
add
aaa
xor
aas
dec
or
inc
push
add
daa
cmp
xor
xor
scas
and
mov
rcrl
add
add
mov
out
pop
cmp
add
cmp
jnp
pushl
pop
loop
cwtl
sub
ret
mov
mov
pop
mov
ror
insl
and
mov
add
sbb
add
add
roll
add
add
cmp
std
aad
add
add
cmp
push
xchg
mov
clc
stos
fidivs
adc
push
add
add
imul
add
daa
in
les
or
movsl
dec
iret
fwait
mov
sbb
add
add
jp
mov
mov
dec
adc
add
mov
daa
jecxz
mov
daa
sub
add
inc
addb
add
in
inc
add
add
jns
add
add
add
sub
pop
push
add
and
push
add
ret
add
mov
aas
ds
or
sahf
mov
add
cmp
cmpsl
xchg
ret
aas
xor
mov
lods
fs
lods
ret
das
push
fnstcw
stos
sub
pop
cmp
test
add
add
inc
dec
dec
or
jp
ljmp
cmc
sbb
ret
jbe
inc
add
bound
mov
xlat
push
call
loop
mov
push
add
add
add
mov
push
test
into
lahf
xor
lock
fldcw
add
fst
add
mov
pop
add
cmp
jns
cltd
adc
lcall
push
add
add
gs
mov
add
pop
sub
push
add
shl
lret
and
inc
add
add
mov
mov
sbb
jecxz
add
mov
test
hlt
add
add
add
andl
add
add
fldenv
add
data16
loop
imul
pop
repnz
xchg
add
pushf
xchg
add
cs
jne
add
or
xor
mov
xchg
dec
lret
dec
aas
inc
add
xchg
mov
stc
fs
jp
loopne
cmp
jo
or
mov
mov
lds
imul
mov
out
push
add
mov
cwtl
mov
add
imul
mov
out
iret
and
mov
clc
xlat
add
xor
push
add
fistpll
xor
subl
mov
xchg
fs
add
dec
sbb
add
iret
jne
jnp
add
push
add
dec
sub
add
pop
adc
orl
mov
lea
add
sbb
inc
inc
add
gs
add
cmp
push
add
add
movsl
int3
xor
add
add
in
mov
fistpll
add
or
ljmp
jle
xchg
xor
lds
mov
cmpsl
fmul
fidivrl
mov
or
jns
inc
add
pusha
add
cmp
add
add
inc
push
pop
sti
inc
jae
dec
arpl
add
sti
xlat
xrelease
add
loope
es
jl
add
xor
daa
inc
testb
lods
dec
rolb
xor
add
cmpsb
add
cltd
inc
add
add
dec
repnz
les
pusha
add
pop
sbb
sub
movsb
add
movsl
cmc
dec
add
jg,pt
or
shrl
arpl
in
adc
rolb
pop
mov
cmpsl
pop
andl
mov
jmp
push
sub
inc
adc
add
add
add
jne
add
imul
nop
add
add
add
mov
add
popa
insl
ljmp
lahf
inc
mov
fwait
jge
push
add
mov
imul
add
mov
mov
inc
add
add
adc
mov
mov
mov
push
fcomi
sbb
xchg
mov
push
add
add
xchg
add
add
mov
sbb
adcl
add
jp
dec
test
mov
mov
add
add
add
sub
insl
repz
jae
out
arpl
mov
fwait
push
fwait
jbe
mov
fbld
in
addb
addb
push
packssdw
mov
push
add
and
mov
add
xor
ret
adc
adc
add
mov
or
add
cltd
sub
add
mov
add
call
rolb
xor
add
add
mov
sbb
cwtl
out
inc
pop
xor
out
clc
mov
jno
add
add
ficomps
add
xchg
lcall
adc
movsb
add
fsubl
add
add
lret
jl
inc
add
stc
mov
add
jbe
push
push
add
cmp
mov
add
into
lods
pop
aaa
or
push
sub
inc
add
xlat
or
add
push
add
mov
pop
sub
add
mov
cli
xor
push
std
xor
mov
icebp
rolb
les
mov
dec
test
fistpl
add
mov
out
pop
dec
dec
das
adc
sbb
xchg
jbe
push
add
add
xchg
push
adc
movsb
add
add
xchg
mov
push
add
mov
add
add
and
nop
add
adc
xor
or
cld
sbb
in
lret
add
xchg
ret
add
add
mov
sbb
add
add
std
sub
jp
dec
rorl
add
je
mov
ljmp
sbb
mov
pop
push
jle
movsl
int3
or
mov
pop
sbb
xchg
push
add
jns
sahf
sbb
jge
cmc
aas
sub
leave
sub
ret
mov
and
add
add
filds
mov
adc
or
loopne
pop
data16
push
pusha
add
mov
pop
insl
pop
out
xor
add
add
mov
add
add
imul
call
js
scas
or
addr16
xchg
inc
add
push
jp
fiadds
ret
inc
add
pop
enter
mov
dec
ret
adc
loope
dec
pop
mov
add
xor
fnsave
into
aas
leave
push
sbb
mov
js,pn
call
scas
movsb
add
inc
add
add
addb
cmp
jbe
or
and
rolb
aas
xlat
mov
ja
jo
cltd
push
mov
adc
imul
xor
xor
es
jno
jns
rep
add
lcall
lods
push
pop
xor
movsl
stc
testb
cli
push
aaa
stos
insb
enter
sahf
lfs
jg
push
jno
and
add
mov
mov
jle
imul
mov
lods
mov
fdivl
add
imul
add
add
jns
dec
jns
pushf
test
outsl
dec
mov
mov
mov
fldenv
add
lock
add
mov
cmp
fidivs
sbb
pusha
add
popf
cld
out
add
add
add
add
add
cmp
movb
ja
out
jl
jb
mov
xchg
sbb
dec
mov
xlat
push
xchg
sbb
mov
je
mov
add
daa
jne
testb
add
sbb
add
add
outsl
loope
add
dec
and
in
push
add
mov
add
inc
add
in
add
sbb
add
add
add
in
add
add
sbb
fidivrs
push
jle
vcvttpd2dqy
fwait
mov
mov
inc
add
add
mov
add
rolb
push
add
add
mov
add
pop
add
add
sub
add
leave
enter
mov
dec
sahf
push
mov
inc
add
sbb
push
dec
in
out
rolb
add
xor
xor
ljmp
aad
sbb
add
ret
imul
mov
add
das
jg
pop
and
mov
add
add
lret
add
mov
mov
sub
add
pushf
mov
out
das
rorl
or
add
add
xchg
js
mov
or
movsl
bound
mov
add
add
lea
adc
mov
bound
mov
test
popf
and
pop
add
add
add
or
rolb
cmp
popa
xchg
add
cmpsb
add
dec
or
lcall
inc
add
mov
add
out
loope
repz
and
mov
add
mov
adc
hlt
add
pusha
add
jmp
mov
add
cmp
negl
sahf
test
addr16
les
mov
mov
lret
mov
add
xor
and
add
popa
out
lods
mov
sub
xor
lahf
cmp
insl
mov
xchg
add
add
push
mov
pcmpeqd
sub
jp
pop
aam
adc
and
mov
inc
add
add
adc
push
add
add
dec
fistl
mov
js
cmp
add
mov
cld
pop
lock
cmc
mov
add
imul
add
sbb
clc
mov
push
add
xor
repnz
add
mov
test
fimull
add
add
pop
into
cmpsb
add
dec
roll
add
xlat
ret
cmp
add
add
add
push
add
scas
fwait
pop
xor
push
add
shll
add
punpckldq
mov
add
outsb
fidivrl
xor
pop
test
das
pushf
and
mov
cs
fists
lret
int
add
mov
push
pop
hlt
add
lea
xchg
add
rcrl
jmp
cltd
fcomps
shl
lcall
testb
test
add
add
imul
add
jecxz
repz
testb
out
rolb
add
xor
sub
add
add
inc
add
out
add
dec
lcall
push
add
add
clc
lret
mov
adc
in
fwait
pop
roll
add
ds
add
in
outsb
dec
and
mov
or
insb
fwait
mov
add
loop
mov
mov
add
push
dec
add
lahf
fcoml
outsb
fdiv
add
xchg
insl
mov
scas
daa
bound
mov
addb
sbb
mov
jle
testb
add
add
jg
add
mov
jbe
xor
pusha
add
repz
out
test
pop
mov
mov
add
add
int3
lahf
jg
add
add
in
inc
add
sbb
add
add
add
add
sbb
incb
sub
sahf
mov
in
test
pop
add
mov
xor
lahf
fstpt
inc
lods
add
sub
add
push
add
mov
or
mov
sbb
test
mov
mov
mov
movl
fs
add
test
add
sbb
add
fidivl
add
hlt
add
rolb
mov
add
add
test
dec
sbbl
sub
mov
add
mov
mov
add
add
xor
push
popf
ficoms
xor
mov
int3
push
add
out
mov
adc
add
inc
sbb
pop
xor
mov
push
xlat
lea
add
jo
inc
add
jbe
aam
mov
bound
mov
add
add
add
enter
inc
jne
ja
nop
add
arpl
add
inc
add
xor
testb
add
cmp
mov
in
add
mov
mov
dec
loopne
jge
add
sub
jl
inc
mov
sub
xchg
insl
das
inc
hlt
add
jb
out
mov
xor
test
inc
add
add
int3
xor
add
lea
movb
mov
add
testb
push
fsubrs
add
xchg
add
aaa
pop
movsl
call
aam
xchg
add
insl
insb
sub
jecxz
push
add
pop
addb
add
addb
add
pop
mov
add
add
dec
ljmp
das
add
mov
add
jno
pop
add
pop
in
add
or
movsb
add
pop
mov
add
mov
rolb
add
and
cmc
jns
add
andl
xchg
iret
xchg
add
mov
push
add
cmpsl
cmp
mov
push
ret
mov
add
sub
xor
mov
adc
add
add
push
add
iret
cwtl
push
add
add
rolb
bsf
adc
jp
mov
fsts
int3
outsb
add
stos
stos
das
icebp
sbb
jae
add
sbb
in
leave
cltd
test
ja
add
cli
mov
or
cmp
jg
add
mov
inc
add
jns
fiadds
sbbl
pushf
enter
fbld
add
loope
and
mov
xchg
add
rcrl
cmpsl
testb
add
add
add
add
add
add
mov
mov
out
and
mov
add
adc
cs
xchg
cmp
cli
inc
orl
or
adc
out
loope
add
jmp
fldcw
and
movsl
or
ret
xor
movsl
mov
leave
mov
inc
dec
out
lahf
xor
mov
push
add
sub
lret
fldz
and
mov
add
into
roll
das
cmp
lock
xchg
mov
cli
xchg
add
mov
add
les
ljmp
push
or
ljmp
add
mov
sbb
cmp
add
add
mov
sub
xor
add
mov
mov
jbe
sbb
xchg
sub
add
add
add
rolb
imul
add
testb
add
loope
mov
add
xchg
add
movsl
sub
push
add
add
dec
rolb
lods
addr16
add
data16
and
cmp
jecxz
sbb
stos
imul
add
lret
outsl
in
pop
gs
add
add
inc
stos
test
add
xor
push
stc
adc
jno
push
add
les
roll
rolb
and
mov
add
xchg
dec
pop
psadbw
push
add
fldcw
cwtl
scas
or
insb
jmp
add
add
cld
test
sub
mov
add
cmp
mov
add
add
xchg
call
lods
leave
pop
sub
ret
lds
divl
xchg
add
mov
popl
push
add
add
inc
or
add
mov
pop
pushf
inc
add
mov
testl
and
mov
or
sub
xchg
cmp
mov
inc
add
mov
into
or
aad
add
xor
jnp
pop
loop
inc
loopne
and
mov
push
add
add
repnz
rolb
bound
mov
mov
xchg
and
inc
add
mov
ja
inc
xchg
mov
add
adc
pop
pop
or
mov
rsqrtps
inc
add
movb
jp
mov
cmpsb
add
inc
and
in
cmp
sub
add
add
add
jmp
xchg
mov
add
std
adc
mov
push
lret
lds
add
push
lahf
pop
pop
xchg
add
in
daa
addb
add
add
pop
aas
ja
push
bts
ret
leave
cld
movsb
add
add
adc
std
pop
pushl
fistpll
or
movb
fistps
add
movsl
and
add
hlt
add
testb
push
add
adc
rolb
in
dec
mov
aaa
pop
and
inc
out
push
mov
mov
std
sub
add
push
mov
fmull
addr16
cmp
xchg
add
in
xchg
or
xchg
add
mov
xor
std
lahf
repz
sahf
lds
data16
mov
icebp
inc
push
add
rolb
push
add
imul
nop
add
xchg
ds
pop
push
add
add
push
aad
add
add
add
sub
push
add
jmp
inc
les
sub
add
add
pop
sbb
ret
jle
xor
in
pop
jo
cwtl
daa
movsb
add
test
inc
add
sbb
push
add
mov
mov
fwait
mov
add
adc
mov
out
mov
add
add
add
mov
xor
bound
mov
mov
pop
cli
stc
out
xorl
popa
notl
cwtl
je
test
inc
add
add
add
push
add
add
bound
mov
je
jne
rcll
movsl
xor
aas
jecxz
dec
inc
lret
mov
add
lds
xchg
pop
adc
enter
jg
fsubrs
cld
repz
loopne
sub
add
add
xchg
add
sbb
add
ds
popa
or
mov
in
lds
push
add
pop
cmpsl
jne
jl
add
push
add
add
je
and
sub
outsb
jge
dec
ljmp
add
mull
mov
push
add
cmc
jae
add
add
mov
cmp
dec
dec
mov
add
jnp
fists
rolb
int
cltd
ret
add
scas
adc
cmpsl
xor
xchg
mov
enter
and
mov
jae
dec
nop
add
or
and
mov
add
xlat
outsb
mov
mov
repz
mov
cmp
sbb
add
add
rolb
cmpsl
push
add
pop
add
mov
add
scas
inc
add
add
xchg
rolb
mov
jl
daa
stos
mov
add
add
xlat
bsf
add
jg
fmull
mov
push
add
icebp
mov
add
lds
cmp
js
dec
fldcw
add
clc
leave
mov
jno
pop
sub
push
jle
push
pop
jno
add
fsts
scas
fs
add
mul
add
ljmp
loop
adc
lcall
pop
dec
push
dec
cmp
sub
cld
adc
in
and
stos
add
mov
add
jmp
add
or
add
test
add
lcall
enter
mov
jno
add
lock
fs
addb
xor
mov
fsub
add
mov
adcl
fisttpll
daa
sbb
movb
add
mov
mov
pop
mov
addr16
add
xor
inc
fldl
pop
inc
add
ljmp
dec
adc
jmp
int3
arpl
adc
add
aaa
xlat
or
dec
cmc
pop
outsl
enter
add
inc
ljmp
fldcw
cmpsb
add
jmp
mov
add
repnz
into
sbb
dec
aaa
rolb
and
cmpsl
mov
mov
add
push
add
adc
add
adc
xor
mov
add
stc
outsb
jl
stos
inc
push
add
cwtl
sub
jp
movsl
repz
add
add
sbb
and
adc
addl
mov
int3
jecxz
int
std
aaa
sub
mov
sbb
add
xchg
xchg
xor
or
mov
std
mov
add
jbe
test
sub
add
mov
add
ds
xchg
mov
popf
jnp
add
sub
xor
add
arpl
add
rolb
and
test
push
add
arpl
add
dec
orl
loop
sub
jle
add
mov
xor
pop
push
xchg
add
test
add
cmp
and
mov
fidivl
and
mov
pop
fnstenv
outsb
mov
ds
sbb
mov
pop
or
add
out
leave
jle
push
add
mov
cmp
mov
add
jmp
add
rolb
jb
cwtl
mov
mov
sbb
add
dec
pop
xor
sub
and
sub
stos
clc
lds
lods
cli
je
mov
rolb
popf
and
and
add
jmp
and
aaa
cmp
neg
mov
lods
inc
or
out
cmpsl
push
cmp
addb
movb
add
inc
add
adc
jmp
add
clc
mov
pop
sahf
adc
or
lcall
xchg
ss
add
int
arpl
filds
imul
out
rolb
popf
jno
inc
movb
add
std
mov
loopne
inc
adc
mov
mov
loope
xlat
je
mov
add
adc
pusha
add
push
add
mov
push
into
jne
push
add
mov
psubw
je
xchg
rolb
lret
repz
add
inc
add
lods
lods
scas
aas
jae
add
add
int3
push
add
leave
push
popf
test
sub
cmp
addb
pop
xlat
ss
and
insb
int
dec
add
add
add
mov
arpl
jp
loopne
loopne
dec
and
fsubr
or
add
mov
sti
data16
je
in
ja
add
mov
mov
pop
xchg
vmovsd
add
add
dec
orl
add
sbb
dec
mov
inc
add
mov
or
test
mov
add
addb
mov
test
add
pop
loop
in
repnz
cmp
test
or
mov
inc
fistpll
and
mov
add
xchg
add
movb
sub
add
das
sti
xlat
jnp
xlat
mov
sti
fmull
scas
inc
pusha
add
add
sub
imul
mov
push
daa
js
ret
xchg
cmp
sahf
fucomp
xchg
pop
fistpl
adc
add
enter
mov
jb
cwtl
or
fists
lahf
inc
add
loopne
dec
lock
insb
out
out
mov
js
ret
addb
icebp
sub
aad
mov
mov
lock
psubusb
roll
add
add
xchg
aad
or
ret
mov
arpl
std
dec
jecxz
pop
add
mov
add
mov
movb
and
mov
imul
in
adc
repnz
loopne
mov
cmp
add
mov
mov
cmp
repz
push
xor
repz
movsb
add
cmp
add
add
pop
inc
add
sub
insl
insl
dec
iret
outsb
call
xchg
sahf
jge
fsts
mov
inc
add
stos
adc
into
ds
dec
xchg
aam
gs
pop
sub
pop
sub
add
add
mov
xchg
add
mov
scas
mov
adc
arpl
xor
add
or
add
add
mov
add
iret
inc
add
mov
add
add
push
add
add
pop
dec
dec
cmpsb
add
testb
mov
jge
add
add
sub
loope
jle
daa
sar
in
test
imul
fidivrs
sahf
pop
sbb
xchg
xlat
sbb
add
in
push
xor
jo
jbe
xor
addl
sub
scas
scas
dec
ret
jo
in
dec
xchg
mov
div
add
sahf
ljmp
add
loopne
int
push
mov
js
add
sub
xchg
push
push
out
mov
lret
xor
xchg
mov
test
add
dec
imul
fidivs
add
add
lahf
inc
mov
andl
js
add
lock
add
add
jecxz
sahf
aam
mov
add
adc
pop
mov
icebp
sub
mov
call
add
sahf
popl
add
dec
sub
add
lahf
sahf
push
add
ss
sub
test
scas
jle
lods
and
aam
jl
dec
dec
call
or
push
add
testb
mov
lods
sbb
adc
stc
outsb
repz
add
loop
and
pop
jnp
test
testb
outsb
mov
add
mov
cltd
adcl
mov
add
adc
add
fdivrl
addr16
pop
mov
cmp
push
add
mov
addb
mov
mov
push
push
cmp
push
pop
in
test
sti
cmp
add
lcall
add
in
add
imul
xor
add
mov
mov
int
add
dec
addb
add
add
out
pop
cmp
pop
sub
mov
add
in
test
xor
adc
sbbl
filds
mov
sub
xor
cmpsb
add
sub
mov
icebp
sbb
mov
add
hlt
add
insb
mov
cwtl
adc
sbb
mov
add
mov
iret
int3
and
mov
add
inc
add
movb
add
add
lcall
add
add
cmp
pop
jge
jge
xchg
add
stc
hlt
add
and
mov
pop
mov
push
add
mov
aas
xchg
rolb
pop
cmc
and
frstor
clc
adc
jbe,pt
jp
add
pop
jecxz
sbb
xor
testb
and
add
in
sahf
dec
and
mov
pop
lret
mov
add
mov
add
sub
int3
add
and
adc
data16
cmp
pop
std
mov
mov
xor
std
mov
add
add
push
add
add
add
add
insb
test
add
aas
adc
inc
ds
jecxz
loopne
stos
xchg
ret
lret
bound
mov
addb
inc
mov
jns
add
jmp
repnz
xchg
add
mov
adc
mov
dec
xor
mov
mov
add
push
adc
shll
movsb
add
inc
cmp
ret
lds
add
into
dec
push
add
mov
add
ret
xchg
mov
pop
hlt
add
sbb
add
xchg
add
addb
jae
dec
aam
in
add
xchg
add
xlat
movsl
and
add
int3
xchg
add
outsb
xchg
cmp
clc
dec
das
hlt
add
enter
dec
push
xor
mov
lock
insb
push
jae
sub
or
add
mov
add
adc
add
add
add
jp
into
sub
dec
pop
int3
mov
add
add
mov
add
mov
mov
icebp
push
add
xchg
add
addb
add
cmp
mov
add
fcmovne
jo
icebp
ret
add
dec
repnz
pop
jae
add
int3
mov
add
aam
lahf
xor
addb
add
xchg
add
into
sub
mov
inc
cmpsb
add
out
call
call
repnz
or
pushf
rolb
into
daa
inc
seto
inc
mov
lea
and
pslld
push
aam
mov
addr16
xor
int
add
cli
bound
mov
mov
sub
ret
test
and
mov
pop
add
mov
lods
call
or
add
bound
mov
jmp
add
mov
insb
mov
xor
cmpsb
add
lahf
push
add
sub
jecxz
inc
add
es
int
add
dec
push
add
scas
lcall
ljmp
and
loop
decb
mov
adc
inc
add
rsqrtps
mov
dec
repz
or
add
js
pusha
add
dec
jmp
and
pop
push
add
incl
add
mov
pop
les
lahf
daa
mov
jb
ds
add
arpl
rolb
xchg
xchg
mov
inc
add
pop
add
pop
je
cmp
pushf
icebp
mov
shll
add
add
call
add
scas
mov
add
addb
out
outsb
add
mov
frstor
sbb
mov
add
add
imul
jns
add
outsb
jbe
lea
adc
mov
lods
sbb
aam
pop
std
pop
cmpsb
add
ffree
add
into
jns
add
cmp
and
xlat
icebp
stos
std
xlat
pop
outsb
out
or
push
add
cmp
add
lret
add
dec
pop
mov
add
pusha
add
out
cmp
cmp
xor
mov
jl
out
or
pop
lock
add
add
xchg
xchg
rorl
push
add
add
dec
jp
jne
add
mov
add
add
mov
out
add
add
sbb
out
add
add
add
add
cmp
sbb
add
jle
insb
sub
add
and
add
add
leave
fdivrl
add
pop
insl
push
add
js
add
add
ret
inc
dec
test
add
xor
mov
sub
dec
hlt
add
cmp
add
icebp
mov
sahf
ja
or
mov
add
jmp
add
mov
fcmovbe
jbe
xchg
add
add
fwait
sti
adc
or
lcall
fistpll
xor
add
ret
lods
add
enter
in
js
and
mov
add
rol
push
add
add
adc
aam
xorl
or
add
xchg
movsl
int3
xchg
add
xchg
dec
mov
lret
sub
or
add
push
add
cmp
pop
add
sub
pop
sarl
lock
cli
push
inc
add
add
and
mov
sbb
push
add
mov
inc
add
add
mov
push
add
stos
mov
jnp
add
add
mov
pop
lock
xchg
adc
scas
in
jnp
sti
xor
test
ficompl
pop
mov
add
pop
cmp
ljmp
sub
add
iret
add
rolb
inc
js
add
sub
add
cwtl
add
mov
rolb
iret
mov
mov
add
mov
mov
fiadds
add
sbb
jl
incl
dec
jnp
lcall
je
shl
or
out
nop
add
pop
cmpsb
add
add
pusha
add
add
mov
or
add
lret
add
add
mov
add
movsl
bound
mov
sti
jae
pushf
ljmp
dec
pop
xchg
mov
rolb
arpl
xor
pop
bound
mov
lods
pop
push
test
push
cmc
jmp
add
jle
test
mov
mov
mov
push
add
mov
xchg
pop
fs
jnp
add
ret
cltd
inc
fimull
test
rolb
add
mov
dec
lods
add
and
imul
ja
jg
addr16
aas
aam
jns
pusha
add
xchg
sarl
ljmp
aam
push
add
add
xchg
in
mov
les
test
lods
xor
mov
sub
jle
in
leave
loop
int
stc
or
add
cmp
add
loopne
mov
xchg
scas
addr16
out
stos
fistps
pop
mov
pop
ds
add
fadds
jmp
push
add
add
outsb
push
sbb
cmp
add
add
add
add
mov
in
loop
xor
enter
addl
mov
js
push
add
in
mov
add
inc
add
add
inc
add
les
lea
adc
and
mov
add
add
or
popa
cmpl
add
push
lahf
xor
add
test
cmpsl
arpl
adc
xor
popa
scas
sub
push
xchg
cwtl
push
add
fisttpl
stos
test
std
bound
mov
es
xor
mov
inc
add
or
mov
xor
and
mov
push
add
mov
pusha
add
mov
push
mov
add
add
mov
add
add
push
add
shl
add
outsl
loope
inc
add
test
xchg
add
mov
pop
xchg
push
add
out
ret
fwait
cmp
add
adc
dec
jne
fdivrs
pop
or
xchg
data16
jae
les
js
addb
push
add
add
mov
lods
or
and
mov
scas
nop
add
addl
gs
aaa
cmpsb
add
xor
insl
adc
inc
decb
push
add
mov
pop
mov
add
leave
dec
leave
or
pop
xlat
aad
add
push
adc
pushf
mov
and
xchg
in
into
jb
xor
insl
jp
pushf
std
or
add
je
inc
mov
add
add
pop
xor
mov
daa
jmp
xchg
scas
or
cmp
sbb
add
repnz
bound
mov
fisttps
idivl
mov
add
add
mov
int
dec
addl
ljmp
add
push
add
inc
add
add
inc
arpl
aam
stos
or
dec
jl
adc
adc
add
add
dec
addb
add
add
jae
mov
push
add
aaa
pop
aam
mov
add
sbb
add
add
pop
adc
pop
hlt
add
add
cmpsb
add
add
inc
hlt
add
scas
xchg
add
rolb
inc
add
add
fwait
push
mov
stc
addl
mov
sbb
lret
fwait
in
cli
loope
cmc
adc
sub
mov
add
add
mov
add
rolb
jnp
add
add
add
add
push
add
into
pop
push
mov
out
addr16
add
fidivs
mov
mov
aaa
aaa
sbb
adc
pop
mov
push
rolb
add
add
add
fldl
sahf
dec
leave
pop
add
mov
sti
cmc
int
setno
add
mov
mov
jp
add
add
in
fisttps
mov
dec
mov
mov
loopne
pop
dec
mov
inc
jbe
fstl
dec
out
sti
test
add
jno
repnz
ret
aad
lods
icebp
int
mov
add
ficoml
hlt
add
xor
adc
test
dec
adc
iret
inc
xchg
rcr
icebp
sub
inc
inc
add
sub
xor
hlt
add
jp,pt
add
push
add
loopne
push
pushf
jp
xchg
stos
dec
cmpsb
add
mov
cmp
inc
add
add
add
mov
inc
in
or
jg
out
or
mov
inc
test
or
out
add
sub
add
push
add
ds
add
adc
icebp
mov
add
add
add
jecxz
mov
jmp
fcomp
mov
add
jmp
add
mov
add
lcall
mov
add
loop
cmp
lcall
add
add
add
dec
ja
fisttpl
out
iret
daa
push
jmp
repnz
add
out
mov
jecxz
add
shl
add
fsubl
add
jmp
aad
cltd
loopne
jne
inc
add
add
cmp
add
add
popf
and
add
test
push
jb
jmp
popf
stos
test
or
add
popa
sub
int3
outsb
mov
out
fcoml
inc
add
aas
test
std
pop
cmp
xor
inc
nop
add
ja
add
add
add
mov
mov
sbbl
add
add
pop
daa
jns
add
add
mov
fisttpl
add
add
sub
add
jle
add
add
add
cwtl
sahf
mov
mov
add
add
pop
mov
insl
xor
insb
pop
mov
or
repnz
add
addr16
add
add
in
inc
mov
pop
inc
push
add
pop
pop
bound
mov
pop
cmpsb
add
mov
lods
jp
ljmp
fisttpl
mov
cltd
jb
addb
lods
xchg
add
add
add
add
pop
lock
push
add
cmc
mov
jmp
mov
or
mov
sub
push
pop
gs
or
das
and
mov
js
jp
pop
icebp
or
add
inc
add
add
or
add
add
add
decb
and
lcall
and
sbb
add
pop
dec
loope
xchg
repnz
inc
mov
or
add
add
lahf
push
test
add
in
pop
xorl
inc
xor
push
clc
or
sahf
jmp
xchg
add
xor
aas
inc
add
add
fsts
dec
popf
inc
addr16
add
cmpsl
in
loope
jne
mov
lds
int
add
add
pop
psubusw
add
testb
adc
add
xor
aad
adc
sub
out
jp
in
data16
add
lret
data16
push
add
add
test
inc
add
and
insl
test
add
lea
add
add
push
add
add
add
data16
mov
add
pop
mov
loope
jecxz
inc
add
into
data16
mov
dec
or
add
add
add
dec
jne
add
pop
ret
arpl
push
out
mov
movb
push
add
call
add
add
int
add
les
or
mov
mov
inc
add
lret
movsl
pop
cmp
gs
imul
mov
mov
rolb
movsb
add
mov
inc
add
adc
int
outsb
outsl
xor
jmp
ds
sarl
inc
in
mov
loop
jge
jns
lods
fwait
cmp
mov
add
addb
add
add
rep
clc
jmp
xor
scas
std
inc
add
add
in
rolb
lds
ljmp
inc
shll
jo
adc
dec
jge
fcoms
lods
dec
xor
add
arpl
fnstsw
data16
add
add
add
sub
add
shll
fsubrl
add
mov
sbb
out
sahf
rolb
imul
mov
outsl
pop
cli
and
mov
ret
xor
add
out
jo
rolb
adc
mov
push
cmp
add
add
mov
js
sub
and
mov
and
jb
movsb
add
add
and
add
xchg
outsl
and
cmc
jg
push
or
add
cmpsb
add
add
xchg
add
xor
testb
xchg
jo
aas
jge
mov
jo
lods
mov
lods
js
push
add
mov
jno
add
xlat
daa
jb
xchg
add
add
jo
sbb
fistps
jecxz
in
stc
jl
adc
or
xor
inc
xchg
add
add
add
adc
out
loop
int3
lret
pop
addb
add
add
add
adc
es
int3
or
cmp
adc
dec
push
add
add
stc
mov
jns
push
add
fincstp
dec
push
add
fistps
add
rolb
push
cwtl
adc
xchg
cmpsb
add
insl
pop
mov
add
adc
neg
inc
add
in
int
push
add
mov
add
add
addl
aad
popf
out
add
fmul
movsl
mov
mov
fistl
add
flds
pop
pop
icebp
cs
outsb
fs
add
jmp
add
dec
testb
add
movsl
and
add
inc
into
stc
dec
mov
add
sbb
xor
ret
mov
mov
push
cmc
aas
jg
pop
add
mov
fldt
int3
clc
mov
add
push
add
rorl
push
leave
sbb
sub
xor
testb
dec
test
inc
add
mov
xchg
add
pop
ljmp
or
nop
add
xor
mov
add
and
mov
ljmp
testb
mov
stos
sbb
mov
loop
mov
jb
dec
mov
push
add
add
add
aad
or
frstor
je
xchg
mov
mov
test
xor
jge
sbb
push
add
repz
loopne
fists
add
push
inc
add
inc
cs
add
test
push
pop
cwtl
js
dec
dec
add
cmp
add
inc
lods
out
adc
aad
xor
pushf
jp
xor
add
inc
or
clc
addb
add
mov
add
add
add
mov
mov
mov
mov
addb
mov
add
add
mov
or
push
add
jo
push
add
push
cmp
lock
sbbl
mov
pusha
add
push
add
mov
add
pop
push
xor
inc
xor
add
mov
test
push
add
inc
add
mov
add
push
mov
sub
adc
push
pop
test
adc
cmp
and
mov
sub
out
mov
dec
sbb
sub
add
leave
rcl
call
add
cmc
mov
dec
adc
rolb
pop
xor
enter
or
or
std
pop
add
mov
cmpsb
add
movsl
leave
jne
jae
add
add
add
out
mov
and
mov
enter
adc
fisubrl
push
xchg
sub
add
call
add
mov
outsl
mov
add
add
push
mov
rolb
push
add
jbe
loope
add
xchg
or
cmp
add
out
xchg
mov
mov
popf
iret
aad
add
add
outsb
sti
lds
add
inc
movl
popf
out
mov
adc
mov
outsb
push
add
mov
stos
bound
mov
add
in
cmc
jg
add
loopne
aam
jecxz,pt
movsb
add
add
add
mov
rolb
sub
ljmp
xchg
add
add
xchg
popf
in
push
pop
jecxz
or
mov
add
sub
lock
incb
add
mov
xor
aad
hlt
add
mov
testb
add
jmp
add
inc
add
add
ds
jp
rolb
sti
mov
add
mov
jno
outsb
outsl
std
add
mov
movsb
add
jge
inc
add
test
add
add
add
cmp
add
xchg
add
nop
add
push
cmc
rolb
cltd
and
mov
push
add
jno
and
iret
inc
xor
push
add
add
iret
icebp
fwait
testb
out
sti
mov
pop
adcl
add
xor
mov
pop
inc
add
rolb
cwtl
jmp
pop
rolb
fwait
aam
dec
mov
mov
jbe
imul
insb
lock
adc
jnp
add
push
cmp
std
add
repnz
rolb
ljmp
ds
add
sub
popf
mov
lock
xor
mov
sbb
xchg
add
add
jecxz
iret
adc
push
add
sub
pop
adc
jle
icebp
test
mov
add
xchg
and
pop
out
or
mov
mov
inc
add
pop
or
aas
mov
adc
mov
sub
xchg
add
insl
stc
aad
test
xor
pop
mov
add
xor
xchg
xchg
add
add
aad
xor
add
add
mov
leave
cmp
adc
xchg
fdivp
add
loopne
lret
lahf
jno
jecxz
pop
sahf
cmpsl
sbb
add
jl
xlat
ret
and
out
cltd
repnz
fcomps
pop
push
add
nop
add
add
mov
pushf
or
add
lcall
sub
mov
add
mov
push
add
add
xlat
sbb
ror
inc
mov
cmp
cmpl
mov
add
addr16
mov
mov
add
popf
imul
mov
orl
cmp
cwtl
rolb
adc
cmpsb
add
xor
adc
inc
add
jge
add
dec
sub
sbb
add
add
lret
add
mov
push
add
mov
add
xchg
cmp
add
hlt
add
rolb
cmp
push
mov
push
sub
add
add
rolb
imul
fld
and
add
lahf
sub
jmp
outsb
jp
pop
add
and
mov
add
int3
mov
inc
push
add
bound
mov
mov
mov
test
repnz
and
add
add
bound
mov
mov
pop
cwtl
popa
int
daa
fldt
cmp
cmp
ret
jle
pusha
add
mov
push
mov
mov
inc
sbb
lret
jo
hlt
add
sbb
data16
xlat
sub
fcoms
add
rolb
sub
add
mov
test
rolb
aad
inc
add
mov
jbe
cmpsl
mov
xchg
push
add
add
add
dec
dec
jl
add
or
add
sbb
inc
dec
mov
shll
sub
or
adc
ds
cld
rolb
cmpsb
add
xor
pushf
sbb
pushl
push
add
pop
jp
add
dec
movsb
add
in
inc
add
add
jb
pop
push
add
push
add
nop
add
or
push
xchg
das
sub
imul
out
jae
imul
out
xor
mov
dec
lea
imul
mov
imul
jne
or
icebp
push
add
divl
add
add
jo
test
push
add
loopne
rolb
mov
mov
add
add
or
pop
lock
daa
adc
shll
add
sbb
add
lcall
in
data16
xlat
cmp
jmp
movsl
scas
ret
pushl
mov
adc
mov
mov
xchg
cmp
sub
add
lea
xlat
leave
sub
mov
pop
mov
xchg
mov
lods
jb
add
aad
add
insb
mov
mov
cmp
add
dec
repnz
mov
add
leave
or
xchg
add
jb
ja
add
sub
mov
pop
pop
mov
and
mov
das
inc
dec
rolb
je
bound
mov
add
imul
lret
aas
or
inc
mov
mov
add
xor
bound
mov
sbb
stos
dec
pop
push
cmc
xchg
xchg
add
cmp
mov
xchg
add
mov
sarl
add
add
add
and
mov
jge
insb
sub
ja
push
add
push
add
cld
test
je
cmp
push
jecxz
ja
add
add
add
repz
cmpsb
add
pop
and
es
pop
push
dec
mov
and
loop
jno
add
rcrl
addb
das
filds
out
push
ljmp
mov
lret
xchg
or
repnz
add
add
add
cmp
add
lcall
in
or
add
pop
das
stos
mov
cmc
lods
stc
add
mov
arpl
jae
js
pop
imul
dec
bound
mov
xchg
add
push
add
lret
add
mov
jmp
insl
xor
hlt
add
jnp
add
sti
ret
daa
inc
add
add
add
xchg
add
xchg
add
push
add
addb
add
rolb
cli
hlt
add
inc
cmc
rolb
add
pminsw
jmp
dec
dec
sub
add
add
add
add
xchg
add
out
mov
test
loopne
adc
and
fldenv
inc
cmp
mov
cmc
mov
add
addb
add
lds
and
mov
add
xchg
add
add
and
add
lret
ds
aam
jns
jg
ret
fwait
dec
loope
xor
adc
add
arpl
jb
and
mov
mov
rcrl
jnp
add
and
sbb
insl
mov
repnz
inc
add
aaa
hlt
add
mov
repnz
adc
add
mov
add
movb
add
mov
mov
leave
dec
jbe
inc
mov
push
mov
add
pop
in
addr16
out
xchg
adc
xlat
push
std
cmpsb
add
add
loop
push
add
add
mov
out
fisubs
mov
xchg
lods
pop
pop
pop
sub
out
add
xchg
adc
cwtl
rorl
adc
into
jae
pushl
add
or
add
mov
iret
cltd
lcall
add
leave
xchg
aam
popf
test
cmp
add
add
insb
inc
add
in
je
cmp
add
out
pop
lret
stos
pusha
add
xor
jmp
mov
loopne
cmpsl
inc
add
push
lds
push
add
lahf
fistpll
cli
pop
and
sbb
int3
add
add
add
rolb
test
popa
sahf
jae
add
fisttpll
addb
loopne
lret
jae
call
add
jno
sub
xchg
add
les
addl
jnp
add
call
and
pop
pop
fsubs
leave
testb
cld
jmp
clc
cld
stc
outsl
fildll
and
cmc
and
movsb
add
add
in
mov
inc
ficompl
jbe
push
sub
pop
mov
mov
add
xorl
xchg
add
in
addb
jno
add
push
loope
add
add
add
jne
sub
pop
jecxz
xchg
sbb
add
xchg
push
add
inc
imul
mov
add
cld
mov
add
add
mov
mov
mov
lock
lret
pop
fsubp
add
and
cltd
sbb
push
add
outsl
push
mov
add
mov
or
shrl
mov
fwait
test
xor
mov
insb
mov
outsl
repnz
pop
sub
loop
sub
or
add
add
dec
sbb
inc
add
add
hlt
add
push
lods
pop
mov
xor
notl
lahf
and
adc
pop
cmp
cmp
in
inc
add
cmp
push
push
add
lea
xchg
fldl
add
fcoml
xor
aad
add
jnp
sub
adc
shll
mov
orl
ret
cwtl
add
pop
outsb
clc
das
dec
int
pop
mov
adc
add
add
or
ds
test
out
pop
out
inc
add
inc
add
adc
add
rolb
mov
pop
and
add
xchg
or
fs
addb
add
add
mov
mov
cld
int
aaa
and
mov
mov
add
mov
adc
in
add
sahf
sub
add
add
sti
push
add
insb
mov
push
push
add
add
cld
cli
movsl
ror
scas
push
add
and
add
xor
inc
add
add
add
mov
int
cltd
add
lods
add
out
sub
add
fwait
ja
addr16
jmp
faddp
add
repnz
xor
fmuls
cmp
int
push
add
scas
xlat
push
add
das
xlat
lahf
xor
jo
insb
cmp
cmp
fsubrl
pop
xor
add
xor
fs
add
add
add
add
inc
add
ljmp
add
push
rolb
les
mov
mov
mov
add
jnp
add
xor
adc
cli
cmp
sbb
ds
jmp
mov
jns
rolb
mov
push
add
add
add
pop
add
xchg
dec
cmpsl
xor
add
add
mov
lea
jo
mov
jecxz
and
mov
mov
testb
hlt
add
xchg
add
add
add
mov
ljmp
mov
add
pushf
push
std
pusha
add
jbe
in
cmpsb
add
leave
pushf
int
sbb
add
outsb
mov
push
cmp
push
add
mov
mov
jb
mov
xchg
add
dec
add
je
cmp
mov
popf
xchg
or
add
add
ja
nop
add
mov
add
pop
insl
fisttpl
dec
xchg
cwtl
imul
mov
mov
mov
add
add
mov
adc
popf
inc
add
ja
dec
mov
add
cmp
stos
out
loopne
pop
cwtl
mov
xor
lea
frstor
iret
mov
rcrl
lret
add
jbe
mov
push
pop
bound
mov
psubd
add
hlt
add
repz
jno
cwtl
or
cmpsb
add
loop
xor
lret
imul
movsl
sub
mov
in
inc
add
jg
sub
dec
dec
and
add
movl
sub
mov
arpl
nop
add
add
push
test
rolb
addb
mov
rolb
stc
xchg
add
push
jnp
add
add
adc
sub
add
jno
add
arpl
out
pop
inc
inc
add
in
js
jns
add
imull
mov
imul
mov
movb
loopne
pusha
add
outsl
mov
add
add
dec
pop
movsb
add
aad
add
mov
add
mov
add
and
in
pop
xchg
mov
add
or
das
filds
movsl
or
loop
pop
ret
mov
push
adc
add
push
sub
lods
mov
xor
or
add
mov
add
add
lock
lret
mov
icebp
nop
add
add
cmp
inc
addb
pop
bound
mov
pop
xor
arpl
iret
mov
add
and
cmp
add
mov
mov
ds
xchg
mov
clc
pop
dec
mov
dec
cmp
add
adc
test
repnz
add
ret
mov
xchg
stos
inc
xorps
add
or
and
ljmp
aas
mov
out
or
add
pop
mov
sti
into
jg
xchg
add
arpl
add
test
in
testb
out
sub
sub
add
jnp
sub
add
popa
pop
mov
add
popf
in
or
ljmp
sti
push
mov
add
sbb
add
and
jg
add
xchg
add
sbb
loopne
dec
pop
pop
adc
adc
push
lods
cwtl
popf
iret
push
mov
pop
fwait
test
add
add
pushf
stos
xor
and
lret
dec
stos
addb
add
add
jae
scas
sub
mov
cmc
in
adc
incl
in
fwait
adc
add
jne
int
add
mov
movb
add
mov
popl
jbe
adc
push
fists
enter
add
push
lahf
add
add
add
pop
bound
mov
std
aas
add
mov
add
aam
jnp
push
add
inc
add
jbe
inc
jae
add
cmpsb
add
add
add
xor
mov
int3
inc
add
sahf
subl
pop
rolb
addb
add
add
add
ret
mov
jns
addb
leave
dec
or
add
mov
push
add
in
mov
cmpsl
sub
or
pop
daa
iret
pop
aam
adc
and
adc
push
and
hlt
add
rolb
in
jno
test
ss
add
and
mov
sub
lret
add
mov
mov
mov
add
xchg
add
cmpsl
lret
mov
inc
fistl
out
rolb
popf
ret
jp
js
add
scas
jg
loopne
mov
jge
add
ja
push
add
popf
pop
add
cmp
cmp
lock
cmp
add
loopne
jp
add
add
add
push
add
pop
rol
xchg
add
jb
mov
data16
mov
inc
add
cs
addb
aad
cltd
lret
or
add
dec
mov
lods
daa
pushf
rolb
icebp
jbe
negl
das
pop
stos
push
and
add
insb
popf
loopne
sbb
mov
popf
add
mov
mov
and
test
mov
cmc
inc
push
subl
mov
add
popf
imul
add
es
pop
stos
xchg
add
rolb
add
add
int3
cmp
mov
xchg
and
cmpsl
mov
adc
cmp
inc
xchg
fcmovne
and
adc
test
ja
sbb
out
mov
sti
pop
fdivrs
rolb
lret
push
sbb
pop
add
add
in
push
add
mov
add
mov
mov
push
add
iret
pop
inc
cmp
jno
adc
lea
in
test
or
add
adc
int
dec
push
jle
jg
outsl
aam
add
push
rolb
in
add
cmp
xor
jmp
ja
mov
inc
xchg
mov
movsl
icebp
test
bound
mov
lret
addr16
add
mov
mov
mov
movsl
jmp
testl
out
push
add
int
js
add
jnp
out
nop
add
inc
add
mov
add
or
mov
add
in
or
add
inc
mov
scas
mov
mov
pushf
or
mov
or
pop
pop
sub
icebp
jl
sbb
fmull
test
lods
pop
addb
sub
add
push
add
add
add
add
fdivp
add
mov
add
movsl
mov
inc
add
mov
push
clc
insl
scas
jb
push
jae
add
add
test
add
add
fisttps
mov
add
mov
sbb
push
xchg
inc
imul
cmp
push
add
xor
and
and
mov
and
add
rolb
add
int3
mov
xchg
testb
inc
out
imul
lahf
jae
add
mov
outsl
les
rolb
lock
stos
outsl
ficoml
add
xchg
xor
rolb
sahf
sub
popf
cmp
add
cmpsl
and
mov
ss
sti
jbe
push
add
das
jle
lds
jg
fsubrp
sbb
mov
jae
data16
rolb
mov
roll
mov
fisubrl
and
adc
fisttps
add
push
add
xchg
add
jno
rolb
mov
add
cltd
lock
inc
add
mov
add
mov
mov
fstl
adc
add
xchg
add
movsb
add
sub
and
add
add
push
data16
push
add
jo
outsb
insl
pop
jge
add
or
jne
inc
add
mov
mov
add
mov
pop
cltd
jno
push
xchg
insl
stos
jecxz
add
inc
lea
add
xchg
or
enter
movsb
add
pop
in
test
add
add
or
push
xor
jae
icebp
ds
add
add
stc
jmp
lods
cltd
xchg
add
lods
stos
sub
xlat
int
pusha
add
data16
loop
inc
add
es
add
out
jno
xor
add
hlt
add
movsl
icebp
push
add
push
add
add
add
push
add
out
xor
int3
fistpl
add
test
aad
add
add
lahf
push
int
int3
push
xor
imul
inc
add
fdivrl
add
xchg
add
sub
add
add
add
jmp
add
add
mov
or
jbe
fldl
add
mov
add
add
add
add
mov
add
rcll
xchg
add
jbe
mov
add
add
and
add
add
mov
fistl
test
add
lcall
shrl
add
inc
addb
mov
mov
mov
movsb
add
add
xchg
inc
add
mov
inc
add
in
and
mov
add
xchg
aam
cld
push
and
sub
add
add
xchg
add
sub
out
pop
in
xchg
mov
and
xor
add
lock
in
add
iret
or
add
add
inc
cmp
enter
adc
push
adc
push
ficomps
rcrl
cld
mov
pop
jl
int
imul
cmpsb
add
inc
add
add
icebp
sbb
mov
or
sub
loopne
out
or
addr16
inc
add
mov
inc
add
jo
lds
add
mov
testb
jbe
mov
xor
dec
inc
add
add
es
cmp
add
ret
inc
add
pop
sbb
mov
mov
pop
lcall
add
in
cmc
pop
lock
ds
or
jbe
cmpsl
sbb
add
add
sbb
mov
add
and
mov
sub
add
and
sahf
out
inc
cmp
pop
divl
push
add
sbb
add
add
arpl
gs
popa
adc
sub
cltd
adc
dec
imul
mov
and
test
inc
dec
sub
add
xchg
std
xor
xchg
sub
xor
or
adc
mov
cwtl
mov
repnz
ds
sub
cmpsl
imul
sub
shll
add
add
add
add
xchg
syscall
mov
mov
mov
mov
add
repnz
fiadds
mov
add
add
addl
add
add
pop
rcl
inc
in
hlt
add
dec
aad
xchg
inc
add
sbb
push
inc
add
aam
lcall
add
jnp
add
arpl
inc
rolb
hlt
add
adc
shll
mov
push
add
pop
js
mov
movsl
addb
add
clc
ret
add
outsl
sbb
cmp
mov
aam
in
adc
leave
sbb
pop
mov
enter
xchg
inc
movsb
add
xchg
and
push
add
test
pushf
adc
xchg
lret
inc
lea
daa
sub
add
add
mov
mov
add
mov
dec
add
mov
add
js
add
movsb
add
orl
mov
push
inc
cmpl
je
lock
in
xor
test
scas
mov
ljmp
add
add
add
outsl
and
ja
add
sub
add
in
sbb
ds
data16
add
in
sub
and
mov
add
in
ret
jb
aaa
jne
test
add
add
out
daa
xchg
add
dec
lcall
data16
add
or
adc
push
add
push
int
jbe
add
add
into
add
loop
push
add
aam
xor
mov
dec
je
dec
insb
inc
out
cmpsl
jle
cld
xchg
xor
fldenv
sbb
cmpsl
mov
add
rolb
addr16
rolb
lret
pop
testb
add
leave
arpl
pop
aas
mov
add
pop
movb
and
mov
or
pop
or
cmp
mov
xchg
test
push
add
stos
test
push
add
leave
mov
add
jle
hlt
add
mov
loop
mov
pop
dec
jb
insb
jo
mov
fwait
sub
dec
jle
push
lea
add
movsb
add
lahf
test
dec
push
add
dec
sub
add
dec
or
add
gs
add
push
add
mov
add
jg
testb
add
rolb
int
roll
insl
std
pop
sbb
mov
and
mov
rolb
mov
mov
mov
pop
sbb
add
leave
jns
push
fisubrl
jp
jbe
addb
jbe
and
mov
inc
add
push
add
or
pop
call
es
cmpsb
add
sbbl
mov
inc
add
add
sbb
adc
rcll
ds
mov
jno
sbb
push
stos
pop
jnp
add
xchg
mov
mov
outsb
out
movb
add
movsb
add
loop
les
push
je
inc
add
xchg
add
add
mov
lods
mov
aas
add
add
lret
and
add
bound
mov
jnp
mov
sub
mov
mov
add
test
add
rorl
pop
cmp
add
inc
push
add
mov
xchg
lahf
notl
add
dec
jle
cmpsl
dec
push
and
mov
mov
addr16
lods
sub
add
fs
add
clc
cmp
mov
xchg
add
into
mov
xchg
into
pop
sbbl
xor
xor
imul
add
add
inc
mov
mov
jnp
cli
sub
sar
fnstenv
add
mov
popa
xchg
js
add
out
jns
add
push
data16
cmp
leave
js
add
in
pop
sahf
dec
add
jbe
sbb
dec
std
fsubs
add
mov
xchg
cli
push
add
add
cld
sarl
fisubrs
lock
jae
inc
add
popf
push
add
mov
lods
jne
loop
sub
lret
hlt
add
xor
sub
add
xchg
push
jmp
or
insl
dec
arpl
inc
and
mov
add
stc
stc
or
sub
or
xlat
lahf
xchg
add
push
xlat
test
sti
mov
adc
nop
add
mov
dec
fdivp
add
mov
add
inc
adc
fstps
xchg
add
jmp
cmc
jmp
imul
fstps
mov
in
or
sbb
add
inc
add
xor
and
push
pop
nop
add
int3
aaa
jae
sti
xchg
add
lcall
add
std
fsubs
stc
movsl
push
inc
mov
xchg
je,pt
into
mov
and
add
mov
movb
add
dec
lret
add
lods
insl
dec
insl
inc
add
push
add
pop
jg
and
mov
clc
mov
stos
das
out
add
cmp
scas
test
add
add
push
cmp
jmp
pop
and
mov
aas
cmp
lea
std
cmp
add
sbb
mov
fnstcw
stos
mov
pop
cmp
fildll
into
mov
lock
add
ljmp
add
add
and
and
mov
add
add
mov
jge
add
mov
and
push
std
push
push
add
cli
xor
and
add
add
jne
loopne
outsb
pop
xor
cmp
mov
xchg
testl
xchg
xchg
lock
inc
jge
add
add
test
lret
add
add
cltd
mov
add
and
mov
and
add
adc
je
test
mov
add
or
push
add
add
add
add
push
add
cmp
add
mov
sub
cli
jle
push
out
push
add
les
jg
lods
arpl
lret
mov
add
add
push
push
inc
add
cmp
outsl
dec
dec
jmp
pushl
leave
and
imul
mov
mov
dec
lahf
mov
add
add
mov
mov
add
inc
add
sahf
dec
and
mov
add
mov
clc
fisttpl
pop
add
mov
add
cmp
add
add
mov
sub
sub
add
sti
mov
fisttps
add
add
out
sub
add
pop
mov
loopne
lret
sbb
sbb
add
xor
add
loope
es
pop
mov
pop
cmp
cmp
add
mov
xlat
outsl
jo
mov
nop
add
jne
add
mov
add
loope
add
lret
out
mov
iret
cmpsl
push
dec
pop
arpl
inc
add
add
add
fisttpll
addl
dec
fwait
mov
test
add
jle
addb
mov
add
mov
cmc
fst
add
sar
insl
lret
mov
mov
cwtl
movsl
movsb
add
add
add
add
sbb
cmp
add
scas
and
cmp
add
add
mov
adc
pusha
add
add
cltd
incl
add
push
add
add
add
mov
jmp
add
pop
add
je
push
add
mov
sub
out
dec
inc
jno
aam
inc
aad
pop
inc
mov
jae
aas
jmp
into
repz
jge
insl
cmpsl
fisubrs
cmpsl
adc
out
add
lcall
addl
or
sahf
xchg
addb
jns
inc
mov
jge
aas
jno
cmpsb
add
xchg
push
add
add
or
in
lds
cmp
add
out
data16
pop
cmpsl
dec
out
pop
mov
or
mov
jne
push
mov
jp
add
sbb
icebp
adc
sti
clc
cltd
inc
xchg
rolb
sti
popf
sahf
jae
adc
add
add
add
add
add
sti
fisttps
and
mov
fildll
hlt
add
addb
add
add
xchg
push
add
xchg
add
je
lret
sub
leave
push
add
mov
add
bound
mov
ja
sub
pop
cmp
jmp
clc
jg
addr16
rolb
loopne
pop
and
jno
fadd
add
add
ds
push
jmp
lock
push
jge
jbe
adc
add
push
mov
pop
negl
in
inc
add
fsub
add
jno
jno
xlat
and
mov
sbb
jnp
in
push
outsb
ljmp
add
pop
xlat
jne
ss
add
ja
add
jnp
jmp
fcmove
adc
fcmovbe
add
addb
arpl
nop
add
inc
add
inc
add
push
add
xor
lret
jns
clc
loope
sub
jg
add
mov
cmpsb
add
add
add
cwtl
adc
adc
loop
sub
push
add
add
cld
scas
sbb
add
outsb
arpl
push
add
int
out
sbb
xor
add
add
cli
pop
inc
add
mov
jnp
jp
insb
loopne
adc
in
inc
add
inc
mov
add
add
add
or
push
stc
xchg
add
add
add
push
add
pop
fldenv
popf
fstl
mov
add
add
stos
xchg
add
inc
mov
add
add
add
mov
adcl
add
cmp
test
stc
movb
cmp
add
dec
jne
push
xlat
jns
inc
add
add
jb
fstps
dec
je
pop
xchg
add
aam
inc
add
insb
or
pusha
add
mov
dec
ret
sbb
add
add
add
cmp
add
fwait
mov
mov
xor
pop
mov
add
add
fildll
add
out
addb
add
add
sbb
jp
add
dec
mov
push
cwtl
add
xor
lret
addr16
imul
add
add
inc
add
data16
or
aad
and
movsl
je
dec
aas
xor
push
add
adc
rolb
lea
pop
int
add
enter
adc
fcmovbe
scas
nop
add
test
inc
add
sub
dec
or
sbb
ja
add
xor
testb
jl
add
ds
push
add
inc
mov
mov
daa
bound
mov
orl
outsl
rolb
mov
test
fldcw
cs
inc
test
and
dec
sub
lea
add
testb
add
mov
in
faddl
sub
sbb
jnp
dec
push
add
int
inc
jae
mov
mov
mov
push
mov
xchg
add
add
jns
add
add
add
rolb
inc
jp
mov
add
mov
rolb
pop
jbe
leave
dec
addr16
add
les
or
inc
add
mov
add
cmpsl
push
adc
out
je
mov
je
push
repnz
add
imul
cmp
add
add
add
data16
outsl
or
jb
cmp
mov
das
ret
mov
add
lahf
sbb
movb
dec
ret
or
inc
add
pushl
pop
ljmp
add
or
xchg
or
jbe
js
push
mov
mov
ret
pop
mov
add
sub
add
mov
hlt
add
xor
add
jg
pop
imull
lret
sbb
cli
fwait
mov
fisttps
addb
mov
lret
add
mov
cmp
add
dec
sbb
add
inc
add
cmp
cwtl
mov
inc
add
div
mov
add
add
js
popa
enter
iret
out
push
adc
mov
add
gs
mov
arpl
add
add
add
ja
into
cmpsl
test
add
rolb
dec
adc
outsb
inc
push
add
fldl
xchg
push
add
xchg
cmp
add
imul
adc
int
pmaxub
fcoml
dec
adc
pop
rolb
mov
int
dec
imul
call
inc
sub
dec
inc
add
les
xchg
add
adc
add
mov
xor
repz
or
add
in
cmc
add
add
jmp
popf
jae
not
add
add
or
ljmp
addb
inc
aam
mov
cmpsb
add
sub
pushf
movsb
add
cmp
add
add
sub
testb
aam
pop
enter
fcomip
sbb
jg
add
lret
aas
xor
add
add
mov
adc
add
pop
push
add
cmp
mov
arpl
addb
add
fcompl
jae,pt
add
gs
aaa
daa
sti
stc
mov
ljmp
jge
in
or
mov
setge
test
divl
add
dec
jns
inc
mov
and
push
inc
add
add
add
shll
jbe
hlt
add
jne
add
lods
pop
push
add
sbb
out
gs
jae
mov
add
dec
push
call
iret
mov
or
jmp
xchg
add
push
fmul
jmp
cmp
push
repnz
mov
xchg
xchg
add
cltd
mov
mov
xor
xchg
inc
jle
mov
loopne
fbstp
add
movb
and
mov
lds
cld
lods
push
leave
daa
adc
xchg
add
pop
xchg
popa
pushf
arpl
aaa
xchg
add
mov
lea
add
add
inc
add
and
mov
gs
add
adc
and
popf
mov
dec
sbb
lea
stc
add
add
mov
push
jmp
in
lds
push
add
pop
popf
mov
pop
and
sub
add
mov
into
pop
lds
and
push
add
sbb
mov
movsl
lods
push
add
add
addl
jne
xchg
mov
imul
add
sub
stos
cld
popa
imul
insl
and
add
add
jp
cmpsl
jle
add
add
dec
inc
add
mov
aam
pop
lea
mov
arpl
out
add
ret
test
and
mov
repz
dec
hlt
add
movsl
fmull
movb
aam
pusha
add
test
jnp
cld
fdivl
int3
testb
add
inc
add
out
dec
lods
std
cmp
addb
sti
xchg
mov
popf
inc
pop
dec
inc
add
mov
jo
leave
sub
push
rcll
test
xor
add
ljmp
mov
add
xchg
add
cmpsl
or
ja
mov
sub
add
inc
mov
fwait
addr16
add
mov
pop
int3
pop
into
add
xor
sub
fwait
test
cmp
dec
cmpsb
add
add
inc
add
mov
xchg
add
bound
mov
mov
mov
stos
pop
pusha
add
add
add
xor
xchg
je
sbb
add
inc
ljmp
mov
add
js
into
nop
add
out
push
movl
add
add
xor
push
add
pop
addb
xor
lock
add
int
push
and
lret
xor
jl
sbb
mov
add
adc
lds
push
xor
push
test
lods
enter
js
add
enter
push
or
xchg
dec
lods
xchg
add
and
or
or
enter
adc
mov
add
repz
lock
xchg
add
ret
arpl
in
popa
out
aaa
jp
xchg
imul
add
mov
jle
add
in
ficoml
cltd
cmpsb
add
in
outsb
ffreep
inc
add
fld
add
rolb
xchg
push
mov
pop
insl
jge
mov
leave
out
add
ret
fwait
jge
jbe
pushf
mov
or
add
sbb
into
adc
sbb
cmpsb
add
sbb
lods
aad
ljmp
sub
add
and
or
and
imul
push
cli
cmp
add
xchg
aas
add
add
xchg
add
add
push
pop
and
movsb
add
out
push
add
add
add
cmp
rolb
imul
pop
or
test
cmp
add
cmp
std
sub
add
sbb
add
addb
enter
add
xchg
dec
sbb
inc
loope
add
lret
xchg
add
imul
add
insb
xor
ds
inc
rcll
cmp
pop
out
xor
add
mov
sahf
mov
mul
mov
inc
jle
pop
bound
mov
loope
add
add
call
sub
hlt
add
and
xor
inc
add
add
imul
add
loopne
jnp
xor
push
add
std
insb
scas
push
dec
sub
add
add
out
jns
add
test
add
popa
xor
iret
call
iret
enter
lcall
sub
add
iret
fnsave
in
movsl
sahf
int3
xlat
mov
add
add
push
rolb
add
xchg
mov
and
fadd
add
jle
movb
rolb
jnp
jns
mov
fldt
ljmp
repnz
ret
push
add
dec
lret
push
mov
repz
xchg
xor
mov
mov
and
sub
sbb
inc
fidivs
out
jno
andl
add
insl
xor
addb
add
sbb
add
and
mov
mov
cmp
mov
mov
int3
addb
lea
shll
icebp
pop
push
push
pop
pusha
add
add
add
bound
mov
rolb
in
dec
add
icebp
shll
cmp
rolb
xchg
jb
clc
cmp
xchg
add
mov
add
jl
adc
mov
add
xor
sahf
xor
add
add
and
mov
add
mov
jp
jp
jecxz
or
test
pushf
pop
movsl
lock
ds
fsts
add
push
jg
add
xchg
lock
jmp
add
mov
add
add
add
pop
pop
inc
add
lock
add
and
mov
xchg
add
scas
mov
add
inc
pop
cmpsl
push
adc
in
jo
add
test
test
jp
pop
sbb
add
out
mov
add
or
je
addb
add
fstl
add
adc
add
pop
aaa
push
xchg
repz
jb
out
add
mov
insl
ficoms
out
jnp
imul
add
add
or
xor
int3
flds
cld
sub
sbb
mov
cli
imul
add
idivl
add
add
add
add
mov
dec
inc
add
sti
in
inc
mov
add
mov
cmp
out
add
fmul
jb
mov
add
pop
mov
sbb
adc
add
xor
adc
mov
add
add
cwtl
push
pop
faddl
mov
push
add
sub
add
inc
add
add
mov
test
mov
pop
jg
sub
mov
add
mov
add
jmp
insl
inc
stos
or
mov
mov
jmp
and
mov
push
icebp
movb
popa
popa
sub
add
add
fisttpll
loopnew
xchg
test
cmp
xlat
test
mov
xchg
sub
mov
sub
scas
and
mov
jp
add
push
add
add
or
mov
add
outsl
dec
adc
add
add
mov
add
xchg
add
and
mov
in
ds
jbe
iret
xchg
add
mov
add
cmp
add
popa
mov
lret
jb
popa
inc
pushf
xchg
aam
mov
scas
add
icebp
outsb
leave
imul
add
mov
rolb
in
dec
enter
jmp
outsl
aas
dec
js
pop
fisubrl
xor
movb
sbb
jg
add
add
ja
sub
and
inc
add
jns
mov
cmpsl
dec
add
add
and
inc
rolb
mov
popa
in
rolb
push
add
movsb
add
add
add
lahf
and
add
ret
mov
dec
sbb
add
mov
add
cmpsl
xchg
adc
in
pop
xorl
add
sub
jae
arpl
rolb
push
sbb
fcom
add
jl
add
mov
add
lret
fwait
ret
in
sbb
add
dec
popf
jmp
ds
icebp
jecxz
add
insl
test
out
add
mov
jns
add
add
mov
cmp
aam
xchg
add
add
add
add
add
add
out
sub
or
add
pop
inc
in
sbb
mov
mov
add
jmp
add
outsl
daa
pop
jae
add
pop
aam
leave
pop
mov
mov
shll
push
add
lcall
jle
add
jns
xchg
push
add
add
pop
popa
xchg
add
mov
add
movb
adc
fwait
xor
add
rolb
sub
mov
add
add
add
in
inc
xor
lahf
add
stc
mov
add
add
sbb
push
add
movb
mov
and
sbb
mov
mov
loopne
xor
lahf
xor
rolb
dec
dec
mov
mov
mov
add
sbb
pop
cmp
mov
out
addb
xchg
add
add
popf
ret
insl
fnstcw
hlt
add
adc
push
add
add
xchg
add
stos
scas
sti
leave
xchg
in
rcr
dec
cmp
movsb
add
mov
xchg
inc
add
inc
jecxz
mov
scas
mov
add
add
lret
out
insb
mov
mov
int
push
js
sub
add
cwtl
inc
sbb
add
dec
pop
dec
leave
and
mov
add
ret
jns
or
xor
imul
add
add
inc
sbb
cmp
add
pop
cmp
add
rolb
xchg
add
add
test
add
add
add
add
add
add
add
mov
sti
xchg
ffree
testb
and
mov
lds
add
and
and
mov
mov
add
in
jne,pn
mov
imull
add
aam
jecxz
add
cli
jge
ret
rolb
cmp
mov
xchg
add
xor
mov
add
pop
cmpsl
rolb
add
add
sti
or
jbe
dec
stos
dec
sub
jbe
gs
add
dec
daa
mov
add
mov
nop
add
add
push
add
add
add
add
mov
mov
movsl
imull
xor
fistpll
add
in
add
xchg
mov
cmp
add
out
xchg
adc
rolb
sahf
xchg
ret
in
jp
mov
shld
loope
add
rcrl
push
push
cli
jl
lahf
xor
adc
push
add
les
cmp
fmull
adc
adc
fwait
or
out
rolb
pop
jg
sbb
mul
in
ret
xchg
jo
lea
push
add
add
add
iret
in
mov
jb
ljmp
lret
jl
fwait
push
xchg
add
adc
mov
in
adc
in
adc
pop
test
lea
dec
loopne
mov
pop
and
add
scas
test
dec
rolb
add
bound
mov
jmp
push
push
add
int
add
add
insb
movsb
add
enter
add
test
push
mov
sub
add
add
sbb
jmp
push
add
xorl
add
mov
push
xor
pop
or
insl
add
repz
fucomp
ret
out
add
pop
outsl
cmp
js
add
lahf
lods
adc
sub
aas
addr16
aas
aaa
arpl
lcall
add
add
xor
lret
mov
inc
add
andl
adc
iret
or
movsb
add
pop
jo
dec
add
push
add
test
je
popf
xchg
xchg
mov
mov
push
add
in
add
mov
in
and
mov
jo
stos
es
ret
lret
mov
add
add
add
add
stos
cmpsl
packssdw
rolb
add
add
mov
jmp
add
add
div
add
mov
pushf
aad
or
jmp
add
jp
popa
cmpsb
add
clc
adc
out
cltd
in
inc
add
add
pop
add
rolb
cmp
fwait
cmp
test
add
aad
inc
lock
add
int
push
add
ret
ficomps
add
sub
loopne
inc
addr16
rcrl
add
add
add
jp
add
aas
inc
add
imul
mov
mov
push
add
pushf
xchg
add
fldcw
add
data16
sub
inc
add
mov
add
int
jecxz
data16
lahf
cmc
into
inc
xchg
dec
in
mov
lret
dec
push
dec
leave
fcmovnu
push
mov
popf
push
inc
add
xorl
rolb
push
add
stos
and
inc
add
stos
or
add
add
imul
rolb
dec
ljmp
outsl
insl
dec
lahf
push
inc
jo
mov
sub
call
add
xchg
jne
lret
add
add
add
mov
push
decl
fcompl
cmpsb
add
sub
add
orl
add
mov
xor
xchg
add
add
and
sbb
enter
lahf
mov
add
inc
add
add
mov
inc
add
add
add
mov
add
add
add
mov
inc
add
inc
add
add
jg
cld
xchg
jmp
inc
ss
xchg
add
dec
mov
std
lcall
dec
test
and
pop
loope
cmp
or
test
pop
cmp
inc
add
add
pop
sti
pushf
lock
or
push
dec
andl
and
mov
xor
outsb
and
add
cmpsb
add
add
push
xchg
add
loop
jno
dec
outsb
hlt
add
add
sbb
cmp
roll
mov
mov
sub
add
fmulp
fdivrl
push
add
add
orl
and
mov
sahf
data16
mov
sub
add
push
push
add
mov
movsl
sub
add
rolb
pop
mov
mov
lret
rolb
sbb
in
in
or
iret
aaa
stos
sbb
add
dec
dec
add
push
add
add
scas
pop
loopne
xor
outsb
add
out
mov
fbstp
adc
fsubp
add
ja
sbb
add
mov
lods
push
add
loop
dec
outsl
lods
cmpsb
add
rolb
add
add
stc
mov
lea
roll
add
add
xchg
add
add
ja
insl
cmpsb
add
mov
mov
icebp
adc
lock
rolb
sar
jbe
adc
add
dec
sahf
mov
add
push
pusha
add
sub
add
dec
cltd
lds
add
testb
and
mov
sbb
add
add
add
dec
movsl
jl
add
or
and
mov
lahf
adc
push
clc
mov
jnp
push
pop
add
into
pop
sbb
cli
adc
int3
inc
mov
add
bound
mov
jp
add
adc
clc
mov
add
movsl
rolb
outsb
leave
lcall
out
or
loope
add
cmp
mov
xchg
add
adc
mov
aad
stos
iret
addb
add
add
imul
int
in
popa
adc
add
lcall
push
add
xchg
jno
add
mov
adc
cmpl
sbb
add
add
mov
pushf
xchg
sub
add
ja
imul
pusha
add
addb
add
outsl
leave
addb
add
add
cmp
add
sub
jl
add
ja
add
add
pop
aas
pop
mov
lret
mov
popf
cmp
ljmp
or
outsb
add
mov
add
rolb
add
add
add
add
push
cld
mov
add
in
xor
adc
mov
aad
repz
add
xchg
add
test
add
insb
mov
mov
jb
repnz
xchg
add
xchg
push
xor
adc
imul
xchg
sti
mov
lahf
and
mov
adc
xchg
add
aad
add
out
xchg
add
pop
mov
fcoml
jge
rolb
mov
out
cmpsb
add
add
dec
jmp
xor
fdiv
inc
add
fmull
add
push
add
and
cmpsb
add
ja
addb
into
pop
out
out
push
add
add
hlt
add
add
rolb
xor
adc
or
adc
mov
add
add
mov
inc
add
and
sub
add
add
fistpll
add
out
test
add
add
add
cmp
aaa
mov
fldenv
inc
mov
add
outsb
sbb
add
xor
js
jo
cmpsl
aaa
outsl
ljmp
and
fistpl
dec
movsl
int3
push
pop
sti
mov
scas
in
mov
data16
add
clc
cmp
add
add
loopne
movsb
add
mov
or
mov
popa
mov
mov
loopne
fcmove
pop
pop
aam
jo
mov
add
lahf
addr16
add
add
fwait
pushf
addb
mov
popa
dec
clc
jb
adc
jns
xor
sub
add
push
add
add
push
add
add
mov
add
add
xchg
cmc
mul
aas
mov
push
pop
jbe
hlt
add
cli
push
xchg
fldt
ljmp
add
mov
add
and
add
sbb
xor
xor
cmpsb
add
add
add
sub
mov
add
add
mov
pop
lock
xor
pop
out
repnz
add
add
jmp
scas
movsb
add
add
cs
add
lods
mov
mov
loope
ret
pop
adc
jbe
dec
lds
jae
mov
sbb
add
cmp
push
dec
cmp
lods
xor
aam
cmpsb
add
ds
scas
popf
and
mov
add
push
add
les
mov
add
or
fidivs
add
mov
mov
jle
add
pop
adc
xor
add
mov
call
jecxz
add
xor
pop
shll
xchg
and
mov
add
push
add
test
adc
push
cmp
add
add
add
int
movb
sub
loopne
cltd
jg
and
pop
in
push
pop
lock
cltd
movsl
sub
pop
lcall
rcr
enter
add
les
add
jae
test
add
mov
add
mov
adc
add
lds
dec
cmp
add
add
add
mov
add
cmp
cmpsl
inc
add
add
add
add
imul
add
pop
stos
out
fs
movsl
cmp
pop
pop
dec
sub
xlat
inc
mov
push
add
and
add
and
mov
rcr
sub
mov
inc
arpl
add
add
pop
inc
add
add
mov
inc
adc
stos
dec
and
mov
add
out
add
dec
jl
add
dec
xchg
add
xchg
add
mov
add
out
int
add
xor
lahf
and
mov
pusha
add
add
aam
pop
aam
lahf
out
jbe
rolb
test
push
add
es
jb
pop
pop
cmp
add
sub
xor
mov
jge
pop
mov
sub
push
add
dec
push
ja
in
rorl
jno
add
jb
lock
add
in
jle
add
aaa
call
in
adc
sbbl
aaa
jg
mov
add
mov
and
mov
mov
jbe
and
add
mov
addr16
add
mov
mov
aam
push
add
cmp
jmp
adc
pop
cmp
les
jle
mov
add
add
inc
add
popa
mov
fisttps
mov
std
xor
add
add
addr16
add
add
or
add
subl
jb
push
add
add
mov
jnp
cmp
in
fisttpl
add
cltd
cld
sub
addr16
lahf
stc
add
jb
jge
rolb
add
xchg
movb
or
push
add
add
mov
sub
lret
repnz
add
pop
mov
add
sbb
sub
je
gs
sti
and
mov
stc
xor
fscale
or
into
cmpsb
add
imul
push
mov
add
xchg
push
add
adc
mov
and
mov
push
add
fldl
dec
out
xchg
inc
add
adc
push
aam
hlt
add
dec
cmp
add
add
aad
sti
les
aaa
sbb
rolb
add
add
xor
lcall
mov
jmp
add
jge
jmp
cmp
mov
pop
les
add
mov
mov
in
pop
push
pop
repnz
and
cmp
add
add
lret
mov
mov
jg
jecxz
loop
mov
xor
dec
mov
xchg
add
sahf
repnz
scas
out
dec
mov
xchg
mov
les
ljmp
mov
or
lcall
mov
dec
push
adc
mov
add
dec
push
add
add
add
andl
add
mov
cmp
mov
mov
xor
mov
lcall
je
cli
push
dec
sti
mov
inc
add
pushf
jmp
add
xchg
add
add
add
in
std
stos
mov
add
xlat
rolb
and
add
xor
test
xchg
add
add
addb
pop
call
loope
pop
out
out
aaa
rol
mov
jbe
icebp
xor
add
add
pop
jl
add
neg
hlt
add
addl
fldt
push
or
add
xor
pop
add
mov
adc
add
add
fsubr
inc
add
movl
stos
jmp
and
mov
push
and
cmp
pusha
add
xchg
xlat
insl
lods
ljmp
add
mov
pop
gs
mov
sbb
sub
pop
lret
lods
pop
cmpsb
add
cmpsl
fiaddl
mov
and
ds
das
aas
test
mov
mov
cmp
cs
test
or
icebp
xor
jno
inc
mov
add
add
dec
adc
push
incb
inc
xor
leave
push
add
xchg
mov
cli
or
adc
or
sub
push
orl
dec
inc
lock
mov
mov
push
or
mov
cmp
add
xor
ret
in
and
xchg
inc
or
dec
cs
jp
add
lret
mov
loopne
pop
mov
mov
dec
scas
imul
lret
adc
testb
out
sbb
mov
add
gs
mov
cmpsl
jl
lahf
dec
sti
mov
add
mov
and
mov
and
shrl
lret
in
aas
in
or
add
mov
fdivrs
mov
std
ljmp
add
dec
movsl
cmpsl
rolb
aas
jmp
add
push
add
gs
imul
xchg
add
pop
fistpll
jb
pop
sbb
mov
add
js
add
adc
iret
out
push
inc
add
test
lods
add
jno
add
aam
test
push
testb
sbb
repz
fisubl
mov
and
mov
jp
loopne
add
mov
add
xchg
mov
fistps
pop
movsl
mov
lahf
inc
add
lds
scas
push
add
cmp
add
mov
jbe
sub
out
mov
je
mov
pop
scas
sub
jae
add
imul
jle
add
into
push
int
or
mov
pushf
adc
loop
mov
jb
in
fildll
cmp
std
inc
and
and
insl
test
lods
pop
jns
outsl
das
cltd
imul
push
sbb
je
xchg
add
xor
int3
fadds
push
add
mov
mov
cmp
testb
aam
lret
pop
adc
mov
jnp
mov
movsb
add
add
mov
add
add
mov
cmpsb
add
add
add
test
mov
add
aas
sub
sahf
adc
or
lret
iret
sar
jecxz
xchg
add
mov
add
add
popa
mov
clc
pop
int3
pop
outsb
add
xchg
add
add
in
ss
add
add
xchg
add
inc
cmp
add
adc
add
scas
mov
xchg
add
mov
mov
add
add
inc
stc
mov
and
xchg
loop
inc
push
into
push
add
xchg
add
add
or
sub
clc
or
lahf
cmp
add
add
pop
test
sbbl
daa
mov
mov
mov
xchg
add
jns
adc
and
mov
xor
cmc
icebp
leave
cmpl
push
add
jmp
jo
dec
push
sub
cmp
sub
sub
int
add
frstpm(287
hlt
add
adc
int3
movsl
xlat
inc
add
add
inc
add
add
loope
inc
add
inc
lret
mov
cld
test
add
add
loope
push
add
cwtl
filds
add
add
add
pop
sbb
add
mov
addb
jnp
scas
and
mov
adc
push
popf
jns
add
mov
movsl
fstps
repnz
hlt
add
jae
sub
aas
jb
jecxz
les
inc
add
iret
fstl
std
and
lret
test
in
mov
xor
testb
add
jg
or
cli
nop
add
xchg
jbe
mov
test
add
and
mov
add
mov
add
add
shl
jmp
cld
addb
fimull
xlat
ret
push
add
and
andl
mov
aas
sti
jmp
add
movb
add
add
jecxz
inc
add
add
add
pop
mov
repz
mov
out
push
xchg
adc
mov
add
test
int
add
jno
add
inc
add
jge
lods
sub
xchg
sub
ud0
je
divl
fstl
add
mov
stc
movsb
add
mov
dec
xchg
mov
push
lock
mov
mov
loope
jne
jno
sahf
mov
in
cmp
pushf
mov
pop
daa
push
add
dec
sbb
add
lcall
int3
fstps
mov
imul
icebp
int
add
outsb
xchg
xchg
add
les
in
stos
push
add
sbb
stos
inc
add
add
add
add
leave
dec
rolb
cmc
jo
jns
jmp
add
mov
add
stc
popa
inc
mov
fnstcw
in
add
idivl
daa
rolb
jbe
xor
inc
add
or
insb
out
movq
inc
add
mov
push
add
fsubrl
or
es
sbb
