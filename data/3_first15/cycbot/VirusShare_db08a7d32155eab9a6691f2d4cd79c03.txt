xchg
sub
into
and
fdivs
aas
xchg
dec
jge
add
cmpsb
add
add
loopne
ficoms
add
fimull
notb
add
pushl
xchg
imul
mov
movb
lea
add
mov
js
cs
dec
cli
push
add
sub
addl
lds
insl
or
pop
push
add
lahf
int
add
push
outsl
outsl
add
pushl
nop
adc
inc
add
push
dec
jno
sbb
pop
add
loope
outsb
mov
add
ljmp
das
lods
popf
mov
add
add
cmc
addl
mov
add
add
ljmp
push
cmp
sub
into
add
jmp
mov
mov
or
add
sbb
pop
mov
add
add
add
add
notl
ljmp
inc
add
fidivl
mov
add
add
add
pop
fildll
test
cmp
jae
add
sahf
and
xor
in
mov
mov
add
add
push
mov
add
call
mov
jae
push
pop
add
lcall
cmpsb
add
pushl
addl
and
aaa
pop
adc
add
sbb
add
jle
sbb
dec
add
push
addb
jmp
push
cmpsl
add
jo
add
ret
add
add
ljmp
pop
adc
loop
jnp
add
and
xchg
mov
mov
aad
mov
pop
pushf
push
bound
jge
jb
add
add
cmp
push
sbb
sub
add
inc
add
add
decl
mov
jp
in
jno
add
add
sbb
fistps
jno
cmp
in
lods
add
sbb
add
movb
in
cmp
sarl
sahf
scas
mov
add
pushl
add
aam
add
lds
add
gs
enter
scas
mov
add
mov
cmpsl
add
cmpsl
add
fwait
sbb
add
add
add
decl
and
sub
adc
fnstcw
add
or
repnz
jmp
add
jo
std
mov
lds
and
and
repz
mov
push
jg
add
mov
add
decl
cmp
inc
add
add
add
dec
aam
aam
add
mov
push
add
pop
add
mov
sub
xchg
clc
sbb
sbb
push
cmc
ljmp
lods
outsb
xor
xor
sti
movl
mov
sbb
mov
sbb
jno
bound
scas
inc
add
add
js
xchg
stos
dec
dec
scas
jns
add
jmp
add
add
push
xor
sbb
push
test
xchg
push
addl
add
decl
mov
and
sub
movsl
add
add
stos
sub
xchg
xchg
rolb
outsl
sbb
stos
lock
jg
add
xor
or
aaa
and
popa
add
add
scas
jae
mov
dec
enter
sub
xor
call
and
jne
dec
push
call
test
je
movzbl
add
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
mov
cld
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
xchg
adc
in
aas
adc
loop
push
adc
pop
addb
sub
iret
xchg
out
fnstenv
pop
out
insl
testb
add
mov
movb
xchg
mov
aas
lds
cmp
or
call
or
add
add
fcmovnb
add
aam
mov
int3
push
xor
add
add
xchg
cmpsl
add
cmp
mov
push
push
jno
fwait
lahf
sbb
jmp
aas
enter
daa
add
outsl
pop
push
data16
adc
fistpl
mov
rolb
pop
leave
test
ljmp
add
add
cmc
inc
add
movsl
add
dec
xchg
sub
dec
imul
mov
sub
mov
push
out
adc
xor
add
inc
in
data16
add
scas
adc
scas
jae
mov
and
lds
xlat
add
xor
inc
add
insl
cmp
add
addb
and
ljmp
mov
adc
loopne
push
fnstcw
inc
add
or
loop
xchg
cmp
insb
scas
mov
bound
testl
add
add
add
sub
jmp
adc
dec
dec
or
jecxz
and
mov
add
push
sti
mov
add
sub
pop
sti
std
lahf
jnp
data16
sahf
mov
add
mov
jge
inc
add
add
add
add
pop
push
pop
jae
cmpsb
add
fwait
nop
and
outsl
inc
add
jmp
push
push
or
pop
ret
loop
pop
pop
jne
loop
jne
mov
sti
into
sub
add
aaa
or
push
add
push
ret
popa
or
add
lods
aad
decl
cmc
insb
jl
add
add
push
sbb
ds
inc
add
lock
add
push
cmc
jg
and
je
sub
flds
rorl
add
cld
jp
add
sbb
icebp
sub
add
outsb
mov
jp
add
movsb
add
add
or
es
add
sbbl
push
leave
xor
inc
add
add
bound
mov
dec
inc
add
out
dec
sub
addl
inc
add
movl
add
dec
outsl
pop
add
inc
add
jnp
jge
add
lcall
les
mov
jb
addl
out
inc
add
mov
add
add
iret
sub
add
pop
xchg
fnstsw
dec
add
fidivrs
or
add
das
adc
btr
add
xchg
or
ret
addb
add
jae
sbb
add
lock
mov
add
hlt
lock
pop
push
ret
js
push
testb
jle
push
lret
hlt
mov
decl
jmp
into
push
aam
mov
add
push
xchg
xchg
mov
add
xchg
aas
pop
jns
into
mov
daa
add
pushf
divb
aaa
mov
add
sub
fists
push
mov
ret
pop
lcall
add
jmp
addr16
in
dec
adc
js
sbb
daa
add
xor
add
add
movsl
add
add
add
sub
mov
jae
test
xchg
outsl
pop
inc
add
xchg
and
jmp
add
sub
add
and
xor
ret
add
sahf
dec
movsb
add
xchg
loope
push
in
mov
aad
add
stos
arpl
hlt
std
mov
addl
incl
shrb
repz
pop
xchg
in
adc
mov
outsl
mov
add
mov
in
dec
and
add
and
lcall
dec
push
inc
add
add
cmp
loope
pushf
inc
add
ds
sub
add
push
jno
lock
fstl
add
sbb
add
sbb
add
js
addl
in
movsl
add
xor
add
xor
dec
adc
cmpsb
add
pop
mov
sub
mov
xchg
cmp
add
sarl
inc
add
test
addb
push
mov
aad
jl
add
sti
mov
xor
ret
add
add
imul
ds
inc
add
add
add
add
push
cmp
test
add
inc
add
aad
cmpsb
add
add
add
push
add
pop
sub
push
lock
addl
pop
mov
mov
jmp
jle
push
fbld
add
fldl
addb
jo
mov
add
add
mov
mov
push
sub
push
ret
aas
lock
add
add
in
cmp
dec
jae
add
add
sbb
add
dec
cmpsb
add
and
push
cwtl
xchg
popa
add
xor
outsb
lcall
xchg
jle
push
push
mov
sub
add
pop
add
inc
add
xor
incl
arpl
add
jnp
add
push
xchg
cmc
add
mov
jne
add
add
loope
loop
xor
mov
repnz
mov
ljmp
lods
jo
add
pop
addl
into
lahf
xor
outsl
std
iret
ret
add
fisttpll
fdiv
mov
mov
add
mov
add
sub
mov
jmp
mov
push
push
dec
sbb
dec
add
call
aaa
jno
add
mov
cmp
push
insl
dec
fistpl
add
fiaddl
add
dec
push
fidivs
imull
enter
cmp
pop
lret
add
add
dec
jb
xchg
roll
bound
jecxz
cmpsb
add
jae
xor
ret
add
roll
xchg
loop
out
imul
mov
add
loope
jmp
adc
sahf
add
jmp
push
push
pop
jb
push
pop
icebp
addl
add
sub
inc
add
dec
pushf
cltd
mov
and
popa
add
add
adc
testl
lret
adc
add
je
push
inc
add
add
decl
adc
add
pop
add
add
sbb
jecxz
iret
push
or
push
in
mov
dec
adc
sti
inc
add
mov
xchg
mov
add
push
xchg
arpl
loop
fiadds
inc
add
xchg
clc
cmp
push
idivb
outsl
inc
add
sbb
mov
mov
add
or
ret
decb
imulb
call
adc
pop
pop
sbb
and
jmp
mov
in
insl
mov
add
pop
add
and
movb
push
imul
mov
aam
add
sarb
xchg
mov
xor
or
add
in
mov
add
insb
cltd
loope
cmp
jne
add
add
push
ret
add
add
or
cmp
add
add
scas
cmp
cmp
into
loope
adc
cmp
add
pushl
ljmp
insb
jae
addl
mov
lret
iret
pop
dec
addb
add
add
xor
pushf
cmp
add
ret
add
mov
jg,pn
mov
xor
add
fucomi
ja
pop
lds
dec
inc
add
add
lods
insb
shlb
popf
lret
and
xlat
mov
xchg
idivl
and
iret
test
mov
xchg
shlb
shl
add
leave
push
add
add
jg
add
add
add
pusha
add
add
cmp
add
push
jmp
js
cmp
push
add
jmp
popa
or
xchg
ljmp
xchg
iret
hlt
rol
add
xchg
mov
inc
add
outsb
xlat
jle
mov
cld
xchg
imul
sbb
mov
dec
std
xchg
loope
dec
xor
xor
ss
and
insl
dec
fmull
cltd
jl
ja
mov
jmp
push
das
aam
add
add
movl
add
aam
add
pop
test
jmp
push
add
jns
jae
cmp
and
dec
cmp
add
add
add
jnp
lret
loopne
out
test
js
ss
xor
jne
ja
cmp
mov
jl
ss
jo
add
add
mov
jmp
lcall
mov
das
enter
movsl
add
pop
lcall
sbb
in
push
daa
add
leave
mov
fdivr
sbb
cmp
sub
test
je
add
add
add
or
mov
jbe
stos
mov
add
movsb
add
xchg
mov
pop
inc
add
jge
add
mov
add
icebp
test
iret
cmp
sbb
add
add
add
xlat
icebp
idivb
decl
lods
mov
add
pop
add
add
mov
stos
imul
add
xor
leave
push
ret
push
pop
push
mov
fimull
dec
ret
add
or
int
add
shll
out
mov
mov
add
jmp
std
imul
rcr
add
jmp
and
outsl
jae
add
push
dec
nop
bound
loope
push
in
dec
push
jl
add
pop
lea
xchg
push
out
jnp
dec
stos
enter
add
decl
add
pop
jb
xor
out
cmp
lods
mov
adc
add
sbb
mov
add
addr16
shlb
daa
add
and
addl
aaa
sub
add
test
lods
adc
add
sub
inc
add
add
pusha
add
add
adc
cmpsb
add
add
sbb
outsb
roll
add
add
mov
add
aam
add
jmp
ja
daa
add
inc
add
inc
add
mov
addb
loope
test
addb
jne
inc
add
repnz
or
xor
pop
sahf
add
jmp
add
mov
mov
int
cmp
cmpsb
add
add
mov
cmp
jmp
cmp
cwtl
pop
add
push
in
sarl
push
aad
inc
add
pop
jg
xchg
cltd
and
mov
add
data16
add
add
pushl
add
push
mov
adc
xor
sub
loopne
mov
inc
add
in
cmp
add
fsubrs
xlat
add
ljmp
add
push
jne
icebp
rorl
aaa
mov
sub
jmp
js
dec
adc
inc
add
add
adc
sbb
pop
fsubl
jg
add
push
das
adc
lock
add
jo
in
fidivl
jmp
add
mov
mov
add
xchg
mov
popa
add
xchg
loop
outsl
jmp
add
push
add
lcall
or
cmc
jp
aaa
pop
jne
add
decl
loop
pop
pushf
repnz
push
inc
add
jb
push
fnstcw
sti
scas
cmp
mov
mov
clc
or
pop
add
and
inc
add
add
xor
sti
mov
mov
add
jns
add
dec
repz
and
lahf
clc
push
add
sbb
sarl
mov
add
int3
xor
rolb
jnp
stos
in
xchg
inc
add
xchg
rolb
lock
pop
jmp
xor
dec
roll
aas
xchg
xor
add
xlat
loopne
lods
mov
pop
int3
je
enter
movl
mov
push
loopne
ja
aaa
test
decl
test
cmc
xor
add
mov
add
mov
mov
dec
in
out
push
mov
add
loop
test
stos
mov
add
mov
mov
push
ret
or
nop
mov
icebp
cmp
lcall
xchg
insb
dec
push
mov
jp
imul
push
gs
add
cmp
add
pusha
add
add
loop
pop
xor
add
dec
mov
lea
xor
pop
xchg
push
and
stos
pushf
insl
lcall
outsb
les
les
aam
add
push
test
nop
sbb
mov
add
mov
add
push
push
jmp
stos
cmp
add
dec
dec
sub
add
bnd
call
or
loopne
push
mov
roll
addb
push
jmp
push
insb
mov
fstps
lahf
icebp
aam
inc
add
jno
inc
add
test
add
inc
add
add
decl
jne
fistpl
lret
fdivs
push
mov
add
daa
add
ljmp
pop
sub
jmp
popa
in
ljmp
daa
add
pop
push
ret
jle
mov
stos
outsb
roll
test
rorb
or
add
push
sub
add
popf
or
in
mov
enter
movb
xchg
xchg
mov
mov
add
add
add
push
xor
stos
mov
mov
mov
cmp
push
jmp
das
js
push
and
aaa
sbb
xchg
rcll
or
xor
add
add
sub
mov
pop
lret
aaa
xchg
adc
add
repnz
mov
add
das
push
inc
add
icebp
mov
lds
out
mov
test
mov
push
add
jns
movb
sub
add
lcall
add
push
add
push
or
cmpsb
add
add
add
ss
add
mov
rorl
add
dec
aad
add
pop
aas
cmp
jbe
repz
jp
aad
or
call
add
add
add
add
xchg
sub
mov
mov
jbe
add
sub
add
pushl
pusha
add
add
mov
sti
jl
cld
xor
add
inc
add
add
stc
and
xchg
lock
incl
sub
pop
pop
add
cli
mov
mov
add
add
add
cwtl
push
add
add
xchg
test
xchg
stos
fistpll
add
push
adc
mov
add
add
inc
add
push
rolb
add
add
in
shl
add
pop
and
pop
push
adc
lds
add
lcall
cltd
aad
iret
jnp
mov
bound
adc
imul
lret
arpl
inc
add
add
add
push
rolb
and
inc
add
loope
cwtl
jbe
inc
add
add
mov
test
adc
add
mov
add
add
add
and
outsl
mov
add
ljmp
je
push
jle
add
xor
mov
inc
add
inc
add
cmpsl
add
add
jmp
add
jne
shll
push
push
ret
pop
push
mov
add
fsts
mov
aam
add
aas
push
mov
mov
lret
add
add
add
mov
jae
add
aad
fmuls
addl
push
insl
mov
clc
jmp
mov
or
push
fcmovu
enter
scas
dec
das
in
lods
paddq
push
insb
mov
fsubl
movsl
add
mov
mov
add
and
ja
cmp
pusha
add
push
cld
pop
add
out
sbb
test
dec
add
jmp
inc
push
dec
notl
cld
jo
incl
add
xchg
and
add
iret
add
mov
add
jmp
shl
cmp
push
fdivp
sahf
mov
dec
lock
shrb
push
nop
imul
in
adc
lea
adc
add
add
ret
add
jb
mov
add
add
sub
push
popa
into
arpl
mov
add
mov
inc
add
loope
repnz
dec
add
xchg
aas
mov
add
cmp
lods
mov
add
pop
inc
add
add
loop
mov
lret
add
cmpsb
add
sbb
out
or
add
jb
add
pop
addl
pusha
add
repnz
aam
aam
add
push
insb
inc
add
add
test
outsl
add
decl
add
popa
add
fstps
das
imul
mov
pop
pop
cs
add
add
imul
jmp
push
add
mov
movsb
add
jmp
repnz
test
add
add
push
xor
pop
or
and
test
jmp
mov
cmp
jl
push
outsb
push
icebp
jmp
push
aam
push
mov
ds
ljmp
add
decl
push
ret
fstps
dec
jge
xor
add
testl
cwtl
popf
icebp
mov
sbb
add
add
mov
add
test
push
shl
add
iret
into
cld
in
mov
cld
jmp
lahf
in
in
jl
jo
add
xchg
addl
add
dec
fistps
jne
addl
inc
add
and
xor
ljmp
xchg
pop
add
loopne
popa
add
mov
adc
sub
add
pop
roll
xchg
adc
add
cwtl
les
cmpsl
add
mov
mov
pushf
roll
add
jns
jmp
cld
and
mov
pop
neg
mov
jmp
pop
dec
mov
pop
add
jmp
add
mov
inc
add
add
or
pop
adc
add
jb
arpl
xchg
insb
popa
add
add
fwait
add
jmp
add
jmp
add
lcall
decl
adc
andl
jae
ljmp
add
in
dec
or
inc
add
jns
add
pop
add
loop
sahf
pop
in
xlat
xchg
sahf
fcomps
mov
add
push
into
push
add
jmp
push
sub
and
pusha
add
int3
imul
mov
out
loopne
fcmovnu
vphadddq
test
out
std
das
lods
insb
xchg
jo
rolb
int3
or
pop
cmp
inc
add
pop
add
dec
mov
add
mov
loop
push
stos
aas
add
add
jmp
push
sub
add
je
rolb
adc
jnp
jae
push
xchg
adc
cltd
ja
aam
add
add
add
add
mov
pop
lea
ret
inc
aam
jo
add
mov
add
std
jmp
mov
dec
jae
cltd
pop
xchg
fdivrl
jmp
push
or
mov
add
in
popf
mov
add
add
fcom
pop
add
xor
inc
add
inc
add
mov
mov
ja
push
xor
or
mov
add
mov
or
pushl
jne
add
cmp
sub
xlat
int3
lret
aad
fwait
mov
popa
jmp
xor
aas
push
mov
add
lret
gs
std
adc
dec
jns
add
add
fst
cmp
sbb
inc
add
scas
mov
add
jmp
testl
xor
fs
popa
add
pop
xor
add
std
and
xchg
mov
ss
insl
jne
add
mov
add
sahf
mov
pop
add
lret
push
pop
mov
mov
xor
aaa
imul
cmpsb
add
push
dec
xchg
out
mov
inc
add
dec
xchg
mov
add
add
cmp
add
psllq
push
inc
jmp
adcl
fucomip
push
cmpsb
add
xor
aad
mov
add
add
add
add
jmp
shll
ret
add
movsb
add
movsl
add
sbb
icebp
jmp
aas
sub
mov
std
pop
mov
add
js
add
movsl
add
xor
add
shrl
dec
aam
push
fldl
add
lods
pop
add
push
loopne
jg
mov
add
cli
ljmp
jle
add
inc
jmp
or
cmpsb
xor
cmp
pusha
add
add
add
add
xchg
sub
repz
int
and
js
xor
imul
into
push
mov
test
add
push
ret
or
add
in
mov
sub
xchg
inc
add
mov
push
ret
add
mov
sbb
dec
roll
push
add
loop
out
inc
add
rol
add
and
xor
popa
add
add
addl
xchg
inc
add
lcall
outsb
sbb
add
add
mov
add
push
in
sub
push
pop
add
cli
or
daa
add
jecxz
add
mov
add
or
add
ljmp
insl
add
push
ret
cld
lret
insb
mov
add
call
xchg
fstps
pushf
push
ret
sbb
subl
add
rcrl
jp
lahf
mov
mov
lea
add
fldcw
sbb
jno
jle
add
jg
jb
add
pushl
add
ret
dec
jle
call
insb
pop
push
add
or
in
sbb
push
mov
stos
push
cmp
jmp
cld
push
ss
cmp
repnz
scas
pop
inc
add
add
call
add
call
jmp
mulb
cltd
repz
cmp
add
add
add
test
and
xchg
jb
add
enter
cmc
push
leave
insl
jp
es
mov
or
pop
and
lahf
pusha
add
pop
push
ret
push
jle
testb
insb
push
jge
mov
pushl
sub
ljmp
ss
clc
mov
add
jns
call
push
ret
or
and
cmp
mov
lahf
daa
add
flds
push
cs
xlat
mov
add
push
faddl
js
add
aas
mov
add
outsl
movl
aaa
jle
sbb
add
add
cmp
in
mov
adc
add
mov
pop
or
sbb
add
add
add
jecxz
ss
add
xor
cli
mov
add
lret
push
fnstcw
add
fcmove
mov
lret
jmp
push
push
cmp
or
dec
addb
pop
test
dec
insl
cmp
mov
and
xor
leave
xlat
rcr
mov
stc
adc
push
insl
push
dec
mov
ret
add
xchg
jno
add
jl
add
add
jmp
test
lahf
pop
push
push
fsubrs
push
push
mov
mov
add
push
call
add
lods
cltd
movsl
add
xchg
test
push
decl
jmp
and
adc
add
or
mov
add
push
inc
add
xchg
pop
add
call
sub
add
and
xchg
addl
add
push
add
inc
add
int3
mov
ficomps
in
and
mov
jmp
xchg
mov
sub
ret
push
and
push
testl
jbe
mov
fidivs
call
movsb
jmp
aas
popa
inc
enter
addr16
hlt
dec
dec
out
cmp
pop
repz
xlat
add
add
mov
push
out
leave
xor
add
shrb
mov
push
mov
dec
repnz
xchg
mov
rolb
add
adc
roll
add
daa
add
cli
rorl
lahf
clc
ljmp
sbb
ret
add
je
loop
jno
dec
inc
add
xchg
cmp
addl
pop
add
mov
add
jmp
add
jb
sahf
aaa
mov
pop
jmp
jge
add
loopne
enter
stos
aam
xchg
pop
addb
cli
daa
add
or
xchg
ret
add
lods
clc
enter
leave
fldcw
aaa
mov
add
mov
dec
and
add
pop
add
xor
addb
add
fwait
pop
cmpsb
add
jecxz
ja
add
jns
xchg
xlat
fldl
push
push
ret
inc
push
and
flds
mov
dec
pop
repnz
xchg
mov
in
dec
nop
inc
add
out
insl
sbb
jge
jp
and
adc
jmp
push
and
ss
pop
add
cld
jno
mov
pop
mov
inc
add
xor
mov
push
mov
arpl
adc
notb
xchg
pop
add
push
arpl
aas
cmp
add
cmp
add
add
add
pushl
cltd
insl
cmpsl
add
add
in
in
out
xchg
or
in
or
xor
push
sbb
add
decl
roll
movsb
add
bound
sbb
xchg
lcall
in
jnp
add
out
out
mov
scas
fsubrs
add
clc
ret
push
inc
add
fistpll
push
aaa
scas
lds
enter
jle
mov
jmp
pop
js
popa
add
call
sahf
mov
cmp
aaa
cmp
push
sahf
js
add
ss
add
loopne
dec
push
add
add
mov
add
push
jb
loopne
push
jo
dec
add
dec
ss
and
addl
push
add
inc
add
xchg
inc
add
pop
jb
pop
stc
outsl
addb
add
aaa
sub
out
mov
aad
dec
es
add
aas
cmp
imul
add
loop
add
rolb
add
jbe
in
iret
popf
mov
jmp
or
out
mov
pop
dec
pop
ljmp
das
sub
addb
push
pop
pushf
scas
mov
stc
or
cmp
add
push
ss
dec
loopne
cmpsb
add
push
lea
jmp
push
pop
push
insb
xor
pusha
add
add
add
decl
dec
addl
bound
jo
add
add
insb
scas
push
or
call
ror
in
add
test
movsb
add
add
mov
roll
add
add
sbb
lahf
inc
add
pop
data16
add
push
dec
insl
adc
add
hlt
repz
xor
lret
fsubrp
and
out
aad
add
add
jle,pt
add
add
xor
add
add
fisubl
mov
stos
add
push
add
decl
je
fldenv
pop
cmpsb
add
add
pop
in
dec
or
add
test
jge
add
addb
dec
imull
inc
add
add
add
fdivl
cmp
push
add
add
lahf
int
xchg
xchg
cmc
out
inc
add
cmp
lods
fdiv
inc
add
push
xor
sub
js
xchg
mov
sbb
xlat
mov
scas
aad
add
add
jne
shl
add
scas
popa
add
pop
cmpsb
add
add
add
arpl
xchg
xchg
push
popa
add
dec
add
incl
loopne
inc
add
ret
add
mov
add
sarl
mov
jp
and
xchg
add
lcall
or
insb
mov
inc
add
mov
call
pushl
sbb
add
pushl
add
inc
add
add
or
scas
je
dec
xchg
and
jmp
add
push
jmp
aas
sbb
loop
push
cmp
faddl
call
and
loopne
add
cld
xor
mov
test
mov
xchg
add
dec
data16
add
js
stos
outsb
add
xor
xchg
add
push
test
test
lret
inc
add
and
test
sbb
xor
inc
add
add
fmuls
sub
hlt
jmp
ficompl
add
jmp
add
add
nop
pusha
add
cmp
testb
add
out
ja
mov
add
dec
pop
loopne
stc
dec
cmp
stos
mov
add
in
jmp
dec
dec
dec
addl
inc
add
sahf
sbb
test
lock
add
mov
add
std
roll
pushl
adc
add
xchg
push
xor
add
dec
inc
mov
add
sub
sbb
jmp
jmp
jmp
inc
sbb
cmp
add
mull
cmpsb
fwait
add
ficoml
add
decl
lcall
adc
add
fldenv
incl
jecxz
pop
aaa
sbb
xlat
dec
lds
push
mov
fiadds
inc
add
and
dec
enter
data16
sbb
and
mov
leave
js
lds
cmpsb
add
shlb
lock
js
xrelease
add
adc
into
add
add
ss
outsb
sub
addb
movsb
add
mov
add
mov
roll
ret
add
fidivrl
add
div
js
dec
cmp
and
push
mov
dec
jb
add
push
cmpsl
add
jne
jmp
dec
addb
adc
and
and
aas
leave
adc
inc
add
cmp
xor
sbb
mov
add
decl
jmp
and
das
and
jle
push
jmp
mov
into
add
lcall
jle
ja
add
fldl
inc
add
dec
test
add
lcall
add
cmpsb
add
test
pushf
int
lods
fisubrs
add
xor
add
daa
add
mov
sub
cmp
add
pushl
dec
pop
lret
add
pusha
loopne
aas
push
cld
add
sub
jecxz
xor
pop
add
mov
incl
repz
mov
add
add
movsl
add
add
movl
out
or
cmp
out
mov
add
add
call
jl
inc
add
push
mov
push
and
cld
mov
xor
jmp
mov
insb
mov
add
mov
fcompl
jne
adc
add
add
jbe
xchg
and
out
in
inc
add
cmp
cltd
add
clc
push
data16
xor
fidivrl
dec
movl
push
addb
and
mov
mov
add
mov
sbb
add
mov
pop
mov
push
repz
roll
pop
ret
push
dec
lock
in
jg
add
jbe
dec
pop
lcall
fldl
add
fnstenv
xor
jns
in
roll
ja
ljmp
xor
fmuls
imul
add
imul
add
movl
add
or
test
or
add
jecxz
fsts
mov
jp
inc
add
add
mov
add
not
imul
roll
add
add
inc
add
xchg
mov
aad
pop
ljmp
and
jnp
aas
fcoms
mov
test
pusha
add
add
lret
mov
call
xchg
shr
and
popa
add
jecxz
or
add
add
jmp
add
add
insl
mov
add
inc
add
imul
add
add
inc
add
or
data16
insl
inc
add
fisubl
dec
ret
add
mov
inc
add
add
test
push
push
jge
add
mov
pop
fucomip
in
jg
in
cmpsb
add
loop
xor
push
sub
lds
sub
ds
add
add
popa
add
mov
or
pushf
mov
ljmp
or
jg
add
rep
add
in
push
sti
xor
inc
add
pusha
add
add
dec
inc
add
and
lcall
sub
add
jmp
ljmp
fsubr
dec
push
add
xor
add
incl
mov
add
pushl
sbb
into
out
call
pop
push
cmp
dec
mov
add
cmp
in
ss
jnp
out
cld
xlat
adc
add
lret
push
jl
add
inc
add
repz
shr
pop
add
mov
clc
cli
cmpsl
add
movl
add
outsl
inc
add
add
add
add
inc
add
push
add
jmp
push
aas
lcall
push
jg
add
mov
add
shl
add
xchg
push
push
mov
loope
xor
mov
add
add
cmp
add
popa
add
adc
mov
add
andl
push
lock
push
inc
add
inc
add
cwtl
or
xchg
jg
sbb
fsubp
add
jl
pop
add
fcoml
and
addr16
ja
inc
add
add
mov
imulb
lea
add
inc
add
add
adc
add
push
add
mov
ss
std
and
add
std
popa
add
add
add
add
and
leave
pop
lods
rorb
aas
push
jae
add
shlb
jmp
jmp
into
inc
inc
add
out
arpl
pop
mov
xchg
int
dec
addl
out
pushf
mov
mov
gs
out
jge
cmp
mov
jmp
inc
mov
into
push
add
lcall
add
cmp
leave
push
jo
dec
das
dec
jns
idivb
rolb
lcall
add
out
data16
jnp
lret
js
insb
pop
out
int3
in
out
repz
roll
add
call
lods
add
add
enter
ljmp
add
hlt
sub
loop
pop
imul
incl
stos
pop
add
push
add
jnp
jle
cwtl
lods
stc
sbb
push
jmp
jge
mov
jns
adc
dec
test
test
adc
xor
add
add
add
inc
inc
add
mov
ljmp
push
push
jg
stc
into
xchg
in
test
sbb
outsl
arpl
and
add
das
mov
aaa
mov
in
fldenv
xor
cli
mov
arpl
outsb
and
xchg
add
call
add
add
jl
add
aas
inc
add
clc
pop
fwait
mov
aas
pop
mov
clc
out
fiadds
xor
lret
out
fsts
out
ret
add
add
xor
push
jne
push
ret
sbb
mov
pop
push
add
jmp
jle
mov
movl
je
add
lcall
jg
int3
cld
push
inc
add
xlat
loopne
mov
je
add
addb
fdivrl
pop
mov
add
stos
inc
add
add
bound
das
dec
mov
stos
mov
add
les
imul
push
or
js
inc
add
push
push
into
dec
out
pop
xchg
sarl
cs
cmovl
push
add
call
mov
call
out
inc
add
add
add
insl
xchg
dec
sti
dec
sbb
jge
jmp
push
add
mov
add
ret
add
scas
mov
push
add
iret
cmp
add
cmp
out
push
jns
add
stc
jl
add
mov
add
add
and
call
lea
add
add
adc
in
inc
add
sub
add
decl
aam
inc
add
inc
add
adc
jns
lret
dec
enter
fmuls
ror
in
addb
add
pop
sti
bound
xor
add
add
add
sbb
add
add
add
jmp
sub
cld
data16
daa
add
fldenv
add
call
jle
repnz
jmp
sub
add
push
icebp
jmp
push
inc
and
add
or
mov
add
and
mov
adc
xor
add
ficompl
out
flds
add
ljmp
out
movsb
add
pop
jne
xchg
xchg
inc
add
xchg
dec
movb
add
sahf
dec
inc
add
add
sbb
add
popf
push
movsb
jmp
push
push
ja
pushl
jmp
in
mov
jno
repz
cltd
add
cmpsb
add
xchg
scas
sahf
decl
push
add
or
push
mov
add
or
jns
test
xchg
cmc
mov
xor
jbe
add
add
xchg
ljmp
add
add
jae
xchg
call
and
xchg
adc
sub
cmp
add
adc
lret
and
js,pn
pop
push
fisttpll
xchg
test
lret
mov
jmp
or
aaa
add
cmp
mov
add
sub
ljmp
jl
push
xchg
add
fcomip
mov
aad
add
je
mov
mov
dec
out
call
add
bound
nop
jno
stos
pop
imul
insb
push
add
sbb
add
js
aas
push
out
cmp
aaa
ffreep
add
lods
icebp
push
add
jmp
add
mov
pusha
add
cld
imul
mov
xchg
sbb
scas
iret
pushf
cmc
and
cld
jl
pop
scas
xchg
arpl
add
xlat
xchg
aas
mov
add
jmp
xchg
jbe
mov
add
icebp
inc
add
test
lahf
push
lahf
cld
mov
das
or
dec
mov
push
add
jmp
add
and
addl
out
stos
sub
call
dec
fistpll
cmp
add
aam
push
insb
push
mov
jmp
mov
push
enter
lret
jno
in
push
adc
add
inc
add
dec
insb
das
pop
arpl
icebp
jle
add
incl
add
flds
lods
xor
in
cmp
pop
xchg
xor
in
popa
add
and
addl
fstl
lods
add
jmp
jecxz
xchg
cmp
add
push
sbb
dec
push
push
push
hlt
enter
dec
pop
mov
sbb
pushf
adc
ja
and
sbb
xor
add
iret
out
ret
add
sbb
aas
bound
not
fisttps
iret
cmp
add
ds
fiadds
add
mov
mov
add
mov
add
inc
add
call
pop
fists
add
mov
inc
add
add
in
imul
movb
sub
and
addl
mov
add
popf
push
dec
into
xchg
mov
push
test
xchg
dec
jmp
leave
dec
neg
ljmp
fdivrl
adc
and
leave
mov
dec
mov
sub
inc
add
push
enter
pop
xchg
shll
movb
into
mov
scas
pop
cmp
add
add
int
jge
add
xlat
cmpsl
add
xor
out
testb
and
dec
cltd
dec
push
jmp
int
xchg
sahf
in
stos
enter
mov
fsubl
and
xchg
sbb
fidivs
add
push
push
ret
lcall
jge
add
sbb
fildl
inc
add
add
mov
add
sbb
push
or
faddl
add
jne
jmp
addr16
push
lea
add
jmp
dec
jle
jle
inc
jmp
jb
push
into
pop
pop
pop
xchg
xchg
addb
mov
adc
ljmp
xchg
cmc
dec
into
fwait
xchg
aas
or
add
pop
sub
add
mov
or
stos
push
cwtl
roll
xchg
repz
push
out
mov
dec
rcrl
add
sub
arpl
roll
dec
dec
mov
mov
in
imul
add
or
add
sahf
mov
ret
jmp
cmpsb
mov
push
fxch
leave
fnsave
repz
jle
sbb
in
fadd
add
jmp
pop
sub
add
cltd
sti
addb
cwtl
sub
movl
add
add
add
fnsave
roll
roll
mov
jmp
das
enter
or
jp
add
les
imul
aad
add
xlat
mov
add
add
pop
mov
dec
inc
add
test
inc
add
pop
cli
std
repz
jo
scas
les
pop
mov
scas
jmp
ds
jle
add
adc
imul
mov
movsl
add
xlat
adc
je
repnz
sub
add
popa
add
insb
fsub
add
cmp
or
sbb
inc
add
add
mov
add
add
inc
add
cli
xchg
mov
ja
pop
add
pushl
mov
call
mov
adc
push
lcall
loopne
out
dec
cld
rorb
int
add
lock
add
mov
add
pop
pop
insb
addb
add
mov
jmp
mov
rolb
int
pop
mov
add
sbb
dec
inc
add
mov
enter
ljmp
xlat
je
test
add
mov
dec
mov
sub
insl
addl
call
add
add
xchg
imul
add
dec
mov
add
mov
loopne
addl
mov
jge
ja
adc
addb
xor
jmp
mov
cmpsb
add
add
add
xchg
out
pop
aas
add
stos
mov
mov
xchg
cs
xchg
jle
fwait
insb
mov
and
stos
xor
sub
xlat
mov
fcomp
and
in
xor
call
pushl
shr
fs
pushl
pop
add
insl
xlat
imul
xchg
mov
out
testl
shl
add
mov
sub
xchg
daa
add
lret
cmpsl
add
pushl
jmp
mov
fists
data16
add
add
cwtl
fidivrs
add
outsb
lret
outsb
int3
adc
stos
insb
add
lcall
loop
pop
daa
add
mov
cmc
or
je,pt
sub
jmp
or
jle
sti
mov
pop
addb
adc
jns
add
pop
add
inc
add
mov
xor
mov
add
add
popf
mov
add
loopne
add
xchg
inc
add
test
add
ret
add
sub
sub
cmp
lahf
adc
add
push
aas
daa
add
int3
sbb
add
and
stos
add
fsubp
add
pushl
jmp
add
push
push
add
loopne
addb
mov
mov
aam
test
fsubs
lea
add
lcall
sub
sub
inc
add
pop
jmp
pop
push
push
fstps
push
shl
ficomps
ds
push
sbb
sbb
push
add
adc
sub
push
xor
add
cmc
cmc
test
dec
fbstp
or
roll
decl
add
add
mov
jg
or
in
pop
push
lea
jmp
ljmp
ja
pushf
push
add
ljmp
movl
dec
mull
mov
push
movsb
push
ret
lcall
std
decb
ja
mov
jo
xor
push
roll
cmp
fsubr
cmp
adc
sub
pop
clc
std
lahf
stos
inc
add
jmp
add
jnp
add
cmp
add
push
ljmp
xchg
xchg
out
inc
add
mov
jmp
add
nop
pop
stos
xchg
rcl
adc
inc
add
add
sbb
inc
add
mov
sub
mov
add
add
inc
add
hlt
push
out
enter
add
or
add
fidivl
inc
add
dec
dec
lods
popf
push
or
lds
mov
and
stc
add
enter
add
add
dec
pusha
add
add
add
mov
jmp
xor
sub
je
mov
dec
mov
xchg
in
das
dec
fildl
jae
add
lcall
lret
stos
jno
jnp
and
rol
add
addb
push
xchg
xchg
in
mov
mov
mov
inc
add
pop
push
dec
stos
std
add
mov
add
std
gs
insl
add
xchg
cmpsb
add
add
push
imul
incl
jl
push
dec
jb
xchg
xchg
jnp
add
and
shlb
and
decl
add
push
cmpsb
cld
aam
movsb
add
scas
cmp
add
jmp
mov
or
cld
fisubrs
inc
add
pusha
add
jo
add
mov
xlat
movsb
add
add
les
mov
add
addl
add
mov
add
lods
inc
add
pop
add
add
cwtl
jg
repnz
pop
imul
push
push
ret
or
into
insb
sub
into
pushf
mov
aas
add
push
js
cld
lcall
jnp
in
cli
or
int3
imul
mov
xchg
loopne
jns
add
add
cmp
add
hlt
pop
add
add
outsl
xchg
pop
xchg
xchg
lcall
arpl
xor
cmp
incl
push
jp
cs
mov
push
ret
add
jg,pt
aas
adc
call
add
and
mov
add
stos
insb
xchg
repz
outsl
add
incl
mov
lods
scas
fwait
jnp
fs
cli
and
jmp
hlt
inc
add
shrl
add
insl
mov
insl
push
add
in
test
popa
add
add
add
add
imul
add
pop
mov
add
jbe
jne
or
add
pop
xchg
mov
int
xchg
repz
add
add
push
or
push
jle
xlat
call
mov
add
adc
xchg
jg
xchg
je
pushl
loop
jb
xchg
movsl
add
mov
daa
add
or
cmp
flds
pop
lcall
call
lahf
push
add
push
push
jecxz
sbb
jmp
add
add
add
add
add
add
jnp
mov
mov
add
push
aas
in
in
and
sahf
xor
xor
add
push
push
add
ss
addr16
add
out
sahf
xchg
lahf
cmp
pop
rcrb
lcall
push
inc
add
das
add
jle
mov
out
cmp
push
add
add
and
pop
dec
sbb
rolb
addb
aaa
and
fdivs
out
loopne
sbb
mov
in
lock
call
add
ljmp
push
pop
push
test
loopne
or
fsubrs
push
push
cli
adc
sbb
mov
fidivrl
pusha
add
add
push
addb
pop
xor
decl
jo
mov
fnstsw
add
cmp
ljmp
outsl
jp
add
add
add
data16
sub
cmp
push
add
add
push
pop
mov
adc
add
add
sub
add
add
loop
jae
ljmp
add
and
jne
cmp
mov
mov
hlt
loop
daa
add
push
mov
mov
pop
and
fwait
addl
add
jne
cltd
daa
add
push
add
add
xchg
adc
mov
jmp
push
ret
add
xchg
mov
pop
roll
roll
or
sar
jae
repz
push
add
and
mov
add
add
add
xlat
sbb
mov
dec
jl
addl
push
addl
xor
insb
shlb
add
or
addl
int
add
or
ret
add
mov
add
jmp
add
cmp
sbb
xor
add
push
sub
add
dec
nop
cmovns
add
push
or
cmp
jmp
push
aam
addr16
add
jnp
jo
pushf
data16
xor
xor
mov
and
mov
pushl
ljmp
push
dec
mov
xor
xchg
and
addb
jns
add
enter
dec
outsl
xchg
movb
jg
add
mov
mov
mov
add
add
add
add
pushl
ja
push
sub
add
xlat
add
pushl
add
dec
pop
int
fwait
repnz
inc
add
push
inc
push
stos
pop
jecxz
insl
mov
push
xor
and
jmp
pop
push
xor
sub
jmp
repz
lret
fnstenv
adc
clc
mov
add
inc
add
jg
out
cwtl
imul
add
loopne
in
sbb
mov
mov
add
lahf
cmpsb
add
inc
add
in
dec
cltd
xor
push
push
jecxz
xor
in
or
add
and
or
sub
into
and
mov
loop
data16
mov
imul
jmp
push
shlb
shll
ljmp
sbb
rolb
lret
cld
xchg
adc
add
lods
in
inc
add
insb
pop
faddl
jmp
sbb
xchg
shlb
addb
push
sarl
addl
add
inc
add
xchg
mov
add
pusha
add
out
jo
pusha
add
js
pushf
pop
jb
sub
add
sub
add
ret
jmp
std
js
int
add
jnp
adc
mov
sbb
add
decl
stos
xchg
add
call
xchg
lock
and
ret
add
add
xchg
or
fidivrl
fcmove
cs
test
add
pushf
ja
pushf
mov
add
bound
push
and
lret
add
add
mov
inc
add
imul
add
roll
mov
add
adc
pop
cmp
add
mov
jmp
mov
jge,pt
scas
les
jb
add
add
add
jae
dec
cmp
add
out
xor
cmpsb
add
imul
dec
push
adc
movb
loope
imul
out
push
cmpsl
add
inc
add
push
nop
sub
add
clc
jne
add
mov
jl
add
lret
imul
dec
jbe
outsl
mov
add
xor
push
ret
add
xchg
int
cmp
mov
add
pop
lods
mov
je
jmp
jle
popa
add
fsubrs
sbb
shr
rcrb
cmp
cwtl
lahf
addb
je
add
add
pop
addb
mov
add
add
out
ret
add
lock
test
add
xchg
jge
jle
add
add
add
ret
add
fxch
lcall
fmul
shll
outsl
fprem
cld
arpl
jb
jg
out
cwtl
popa
add
imul
aam
scas
mov
add
push
out
inc
add
adc
lcall
or
add
rorl
out
aam
add
cmp
push
add
add
pop
lret
or
and
jge
add
shl
add
hlt
and
cltd
cmp
rclb
mov
xor
add
lods
repnz
cmpsb
add
call
jmp
das
insb
sub
jmp
data16
cli
pop
faddp
add
sbb
cli
iret
pop
mov
cmp
jmp
add
add
mov
into
incl
mov
lds
jl
sahf
cmp
xor
xor
fstl
add
mov
add
sbb
stos
push
stc
mov
xlat
mov
insb
xchg
roll
cmpsb
add
sub
pop
je
jg
push
mov
mov
out
xor
add
decl
sbb
add
pop
add
ss
stos
mov
pusha
add
lds
add
jmp
push
mov
add
jle
fisttps
dec
and
add
call
add
or
add
fistl
hlt
jb
sub
mov
ds
add
pop
ljmp
inc
add
add
add
add
add
push
jmp
and
push
add
mov
add
decl
or
movsl
add
inc
add
clc
sub
mov
jne
xchg
push
push
push
ret
pop
cmp
lcall
flds
lods
je
movl
add
ljmp
jecxz
movsb
add
insl
pop
dec
xchg
lcall
push
add
pop
xchg
sub
add
in
xchg
xchg
cltd
out
addb
addl
mov
mov
jle
and
test
lods
shlb
adc
test
cwtl
movsl
add
add
lret
sbb
inc
and
daa
xlat
pushl
ret
push
cmp
adc
xor
add
add
nop
movsl
add
jmp
repz
mov
xchg
ret
sub
add
loopne
push
inc
add
mov
cmp
jns
xchg
cmp
dec
fcmovne
push
cmp
add
and
add
cld
fidivl
rolb
adc
idivb
add
sbb
pop
cmp
adc
push
mov
add
pop
ror
pop
call
add
and
pop
push
mov
push
push
adc
add
or
add
xchg
or
adc
nop
push
cmpl
jmp
inc
and
and
jbe
pop
enter
jge
add
add
ljmp
add
movb
dec
stos
jae
bound
leave
mov
mov
add
and
enter
mov
js
out
push
jno
add
rcl
rclb
inc
add
cltd
aas
push
push
add
aas
adc
add
aam
lcall
add
decl
mov
jmp
push
push
pop
jae
std
inc
add
sahf
out
rolb
add
mov
xlat
call
add
lock
push
outsl
movsl
add
add
add
pop
sbb
shll
xchg
pop
enter
jne
rclb
push
mov
ds
add
lds
lret
test
mov
lock
ret
xor
mov
add
lods
push
stos
mulb
les
out
sbb
cmp
out
inc
jmp
push
or
daa
add
add
jno
movl
lahf
mov
cld
lods
mov
pop
dec
clc
dec
daa
add
repz
in
jg
call
dec
clc
hlt
mov
mov
add
inc
add
nop
ret
add
xor
addl
add
movsl
add
add
and
mov
mov
and
add
cwtl
repnz
fcmovu
lret
std
jge
mov
add
add
cmpsb
add
pop
addb
add
mov
add
pop
jmp
add
mov
or
lods
jns
push
jnp
add
nop
in
pop
movb
out
scas
addb
inc
add
sbb
add
add
in
add
xlat
sbb
test
add
jmp
aam
pop
cli
ljmp
pusha
add
dec
lcall
repz
test
mov
les
fcomi
ljmp
sbbl
negl
add
ljmp
sub
out
sub
lods
popa
add
add
lea
adc
mov
cmp
fdiv
stc
clc
lock
mov
add
xchg
ljmp
jnp
add
je
add
pop
mov
add
push
ret
lret
test
test
int3
mov
mov
add
jo
pop
xchg
push
mov
push
ret
adc
xor
add
addb
add
inc
add
rolb
movsl
add
jmp
add
add
incl
add
popf
cli
xchg
addb
inc
add
js
movl
ja
aas
mov
add
sub
js
jl
push
xchg
mov
add
xchg
cmp
xchg
sub
mov
jne
sub
add
add
mov
out
dec
jge
aam
adc
jns
dec
mov
add
or
mov
add
add
pusha
add
add
add
add
mov
jmp
ljmp
repnz
stos
inc
add
mov
mov
pop
in
test
or
add
enter
adc
add
in
pushf
fwait
xchg
pop
add
xor
jg
jne
add
jmp
add
add
add
jae
add
or
add
decl
cmp
add
add
add
daa
add
add
dec
popa
add
cltd
adc
addl
lods
loopne
xchg
movsl
add
mov
add
xor
add
test
jns
add
add
mov
movb
int3
add
dec
add
add
lods
and
idiv
xchg
or
mov
out
xor
addl
push
xchg
adc
iret
mov
dec
pop
cld
aam
xchg
aad
add
fwait
mov
rclb
dec
dec
outsb
add
xchg
pop
fucom
add
mov
xchg
sub
add
add
imul
fs
xor
sbb
cmp
in
fistps
push
add
jmp
sub
in
js
jnp
add
add
call
arpl
das
mov
add
add
in
movsb
add
movb
add
add
stc
mov
sbb
mov
push
loope
sub
adc
push
sub
and
loope
push
pop
insb
fstpl
jecxz
nop
cmpsl
add
mov
sub
addl
sbb
jo
add
out
jae
jmp
roll
dec
or
fadd
add
call
add
out
repnz
outsb
fbstp
add
mov
inc
add
pop
imul
mov
pop
add
xchg
jns
ljmp
xchg
add
add
lahf
inc
add
adc
add
pop
mov
add
add
lods
cmp
sbb
xor
js
mov
pop
imul
rcr
flds
addl
cmp
addb
add
scas
push
pop
push
adc
icebp
mov
fbstp
mov
pcmpgtb
data16
test
jns
add
pop
enter
fadds
add
inc
add
ljmp
cmpsl
add
add
add
add
add
xor
add
call
movb
add
xchg
mov
std
iret
jg
jmp
xchg
add
jmp
add
add
add
add
push
dec
adc
jmp
aas
lock
ret
filds
out
dec
ss
push
dec
cmp
pop
mov
or
or
cmp
pop
and
test
nop
cli
adc
movl
pushf
mov
imul
or
jp
add
inc
pop
mov
cmpl
jmp
and
jb
jns
xor
inc
add
dec
nop
push
fnstenv
sub
addr16
add
add
ja
add
add
leave
or
pop
add
in
in
xchg
add
add
push
or
das
or
dec
add
movl
sub
jl
lcall
add
roll
add
mov
add
xchg
mov
xor
sti
test
cmpsl
add
fs
sub
inc
add
stc
imul
add
ss
and
addl
add
addl
and
stos
push
js
cmp
sbb
aad
and
dec
add
mov
pop
push
repnz
inc
mov
sbb
pop
add
or
shl
inc
add
add
add
lahf
push
add
lcall
pushf
clc
les
cmpsl
add
das
sbb
sbb
mov
dec
ds
data16
lahf
adc
jb
and
mov
mov
jmp
mov
add
push
scas
jb
add
dec
mov
cwtl
pop
and
and
ljmp
lret
jle
jno
repnz
push
add
bound
sbb
mov
data16
decl
add
jp
mov
test
add
dec
push
jmp
into
and
inc
inc
add
fidivrl
out
mov
int
add
fcomi
jp
mov
sti
ljmp
xchg
imul
mov
roll
icebp
push
fcmovnu
sti
lcall
je
testl
and
fsubrl
jmp
add
sub
roll
add
mov
inc
add
mov
add
jl
movl
push
pop
add
or
pop
nop
call
leave
add
push
testb
insb
push
mov
push
ret
or
aad
sub
pop
pushf
xchg
cld
fs
rcrl
pop
dec
push
bound
jge
mov
jmp
arpl
sub
mov
add
lock
pop
and
pop
leave
dec
and
pusha
add
dec
jb
add
inc
add
sbb
into
xor
add
ljmp
add
cmpsb
add
add
and
adc
add
jb
jecxz
lahf
outsl
add
sahf
dec
rorb
fistps
add
decl
adc
add
mov
add
movl
movb
add
negb
cli
mov
add
dec
pop
cmp
stos
jae
jge
addl
out
outsl
jns
pop
inc
add
jnp
lahf
inc
add
push
push
inc
add
xor
sub
cmpsl
add
repz
add
add
add
add
mov
dec
pushf
mov
popf
push
sub
add
pop
mov
insb
or
stc
jg
add
sbb
or
jmp
mov
out
fsts
push
fdivrs
ljmp
pop
or
sub
lar
lcall
sub
add
push
testl
jp
shl
fmul
jne
add
add
repz
add
pmullw
adc
in
jbe
sbb
popa
add
push
add
lcall
xchg
cmc
daa
add
add
sub
add
add
inc
add
repnz
inc
add
mov
lods
xor
add
push
sbb
xchg
pop
outsb
push
jns
bound
mov
movl
repnz
add
js
pushl
jecxz
mul
add
push
pop
enter
stos
add
jae
mov
ljmp
jnp
sbb
pop
inc
add
cmp
daa
add
notb
add
ficoms
aam
add
push
mov
mov
jl
jmp
jle
int
add
incl
xchg
adc
inc
add
call
push
ret
enter
cli
jb
mov
lds
dec
add
add
inc
add
aad
add
and
inc
add
add
aam
inc
add
add
add
bnd
shlb
ss
pop
mov
jge
js
add
add
add
add
pushl
xor
outsl
sub
adc
xor
insl
mov
ja
dec
imul
dec
sti
and
movzbl
jae
sbb
sldt
push
mov
adc
addb
add
addb
add
popa
add
add
aaa
inc
add
addl
vpcomuq
sbb
push
ret
insb
adc
rcrb
ret
cmp
in
loope
push
into
ret
loop
jne
add
add
adc
loopne
inc
add
sub
jmp
and
sahf
into
aaa
inc
add
add
add
ja
pushl
in
rcrb
add
dec
outsb
dec
inc
add
mov
mov
or
dec
cs
pop
test
xor
fisubrs
es
inc
add
nop
mov
movl
sbb
scas
negl
add
add
jmp
sub
fidivrl
aaa
push
push
scas
addl
add
add
or
add
or
mov
call
push
aam
insb
push
scas
lea
add
test
dec
inc
add
adc
call
imul
add
adc
add
mov
and
add
mov
inc
add
sub
cld
add
lcall
int3
push
pop
call
aam
xlat
mov
test
bound
roll
add
push
or
rcl
dec
or
xlat
mov
add
jmp
pop
add
sbb
data16
add
mov
add
mov
lods
jbe
neg
cli
es
add
int3
aad
add
jbe
inc
add
movl
xlat
addl
aam
rolb
inc
add
ret
add
ss
xchg
xchg
call
add
sbb
nop
cmp
or
gs
ret
sbb
push
push
lahf
rolb
add
add
adc
and
cs
pop
test
out
mov
add
add
push
cmp
or
mov
ret
inc
xor
xchg
cmp
add
jb
addb
mov
inc
add
sub
add
add
add
pop
scas
adc
xchg
jl
mov
movsl
add
add
imul
jle
idivb
out
enter
jge
push
inc
add
cmp
mov
add
lret
lret
jbe
dec
mov
lea
jnp
hlt
mov
incl
incl
add
in
jns
add
scas
mov
testl
add
add
add
xor
and
adc
cmp
mov
add
jmp
push
pop
sbb
inc
jnp
inc
add
jmp
add
mov
mov
movsb
add
scas
cmc
in
out
jb
add
mov
add
jb
sub
mov
and
inc
add
jp
jno
std
or
mov
xchg
in
jb
out
and
lds
cmpsb
add
jp
xor
push
ret
adc
popa
in
xlat
sbb
adc
add
cmp
es
cwtl
sbb
mov
add
add
mov
test
imul
add
sub
jmp
push
push
fildll
xlat
lret
call
ss
rorb
mov
adc
mov
add
idivb
or
icebp
or
add
das
xor
rolb
mov
or
mov
rcrl
lcall
lret
in
jl
and
cmp
addb
faddl
fiadds
mov
cs
test
jmp
adc
sub
sub
outsl
inc
add
add
push
adc
cmpsl
mov
xchg
pop
mov
negl
dec
push
push
mov
ljmp
arpl
inc
add
ds
outsl
scas
je
add
lods
jne
add
add
lods
not
pop
in
std
sub
or
jecxz
pop
jg
adc
or
inc
add
mov
xchg
inc
add
lahf
roll
dec
jge
mov
lret
add
sub
mov
add
loop
xor
enter
mov
jmp
insb
subl
push
arpl
pop
add
push
aad
add
insb
movb
add
call
jns
roll
scas
and
stos
mov
mov
push
push
add
add
push
inc
add
and
mov
sub
sbb
lods
pop
pop
mov
loope
push
bndldx
or
shr
icebp
test
les
dec
pop
lods
jl
mov
in
push
decl
adc
popa
rcrb
fstpl
pop
jno
fdivrl
add
add
rolb
in
inc
add
cmp
push
out
pusha
add
add
shll
add
dec
ret
outsb
mov
dec
push
ret
test
adc
mov
scas
dec
aas
adc
push
ret
add
pop
and
add
out
js
dec
ds
jne
leave
mov
fildl
add
add
loope
rolb
sub
mov
push
mov
dec
mov
add
or
inc
add
lea
add
mov
mov
add
shrb
bound
ret
pop
aam
jle
add
and
pop
fisttpl
push
add
jg
cli
mov
inc
add
jb
insb
das
sub
lahf
imul
add
call
into
cmp
push
add
mov
cld
sub
sub
movb
push
bound
pop
mov
push
dec
push
inc
add
add
inc
add
mov
sahf
fdivrl
add
add
pushl
fs
pop
addl
add
in
push
xchg
mov
add
pop
into
xchg
ret
add
jmp
mov
jmp
stos
fbld
stos
cli
fidivrs
in
jmp
dec
mov
mov
push
sbb
dec
cmpl
pop
or
out
push
add
xchg
mov
mov
xchg
push
sub
xor
or
add
in
ret
scas
std
pop
sub
add
movsb
add
data16
xchg
loope
adc
icebp
scas
roll
stos
jmp
insb
push
div
push
sub
je
jmp
push
xchg
test
add
cld
filds
jmp
add
mov
add
repz
jecxz
cmp
add
cli
lret
push
pop
adc
add
and
jnp
stos
insl
pop
sbb
je
leave
or
mov
cmp
das
dec
ret
add
add
fwait
sbb
popf
ja
inc
add
pop
inc
add
add
addl
add
jg
add
push
add
pusha
add
add
mov
or
test
lret
add
in
push
stc
and
push
jno
add
stos
repz
ds
xchg
and
inc
add
gs
add
sub
jmp
cmp
lea
ljmp
and
sub
mov
jp
add
ffreep
add
cmp
out
stos
mov
mov
and
outsl
mov
push
movsb
add
cld
fwait
inc
add
das
fimull
cmc
sub
loope
fbld
push
add
nop
dec
lock
in
add
mov
add
push
stos
addb
add
sub
jg
out
aas
push
pop
pop
add
lret
pop
xor
cmp
add
add
ret
xchg
jl
nop
mov
or
add
call
adc
test
outsb
push
cs
cmp
dec
mov
push
add
dec
repz
pop
hlt
das
mov
fs
ret
add
add
movb
repnz
das
mov
decl
pop
adc
stos
mov
in
cmp
mov
xchg
nop
add
inc
add
int3
xchg
cmp
xchg
scas
jb
add
jmp
add
xor
daa
add
imul
je
mov
add
das
mov
add
mov
pop
hlt
iret
repnz
push
sbb
dec
sbb
les
lret
out
mov
xor
add
or
das
ss
inc
add
inc
add
push
jmp
mov
add
mov
scas
test
push
clc
cld
addl
or
jge
ja
jns
or
pop
inc
add
jnp
add
and
repz
cmp
pusha
add
cmp
negl
add
xchg
rolb
pushl
addb
lcall
add
jmp
add
lea
lds
aaa
mov
add
add
cmp
pop
and
arpl
pop
out
je
add
push
dec
xchg
pop
add
inc
add
mov
sti
test
push
add
pusha
add
addl
add
add
and
mov
pop
jl
shlb
mov
jmp
adc
add
jo
rolb
out
mov
add
fisubrs
jne
jmp
push
add
data16
add
out
adc
and
dec
and
lds
outsl
sti
cmp
lcall
and
add
push
decl
pop
push
ret
push
inc
das
decl
inc
add
sbb
inc
in
std
notl
mov
push
lcall
test
icebp
xlat
mov
inc
add
add
arpl
mov
enter
add
iret
xchg
negb
jmp
add
xchg
test
das
lcall
movsl
add
rolb
add
pushl
dec
repz
int
test
jmp
push
lods
addl
outsb
insl
and
sub
dec
add
adc
enter
pusha
add
push
jns
add
dec
cmc
inc
add
sub
add
add
mov
inc
add
add
addb
add
add
cld
scas
add
decl
add
je
loopne
or
cmp
imul
cmp
jmp
subl
popa
add
rep
adc
ljmp
roll
add
add
jmp
push
adc
lcall
add
popf
and
cmpsl
add
pop
cmp
push
ja,pn
add
lahf
mov
cmp
cmp
repnz
stc
push
fimull
dec
jmp
lcall
fistpl
sti
add
lcall
jnp
inc
add
mov
cmp
repz
add
and
sub
imul
test
xor
mov
add
js
pop
add
scas
ret
mov
sbb
add
bound
les
stos
mull
add
mov
add
pop
mov
mov
push
add
add
cmpsl
add
pushf
mov
mov
jmp
into
push
cmpl
and
and
push
call
dec
mov
jmp
cmp
incl
das
mov
add
addb
or
push
and
fiaddl
jnp
jmp
out
pop
call
add
mov
paddusw
out
mov
add
add
cmp
ret
add
jbe
xchg
xchg
js
add
or
jg
testb
call
iret
fnsave
add
add
inc
add
lahf
imul
add
in
jae
sbb
jb
into
adc
add
aad
add
loop
push
lcall
push
and
fists
mov
sub
dec
nop
mov
add
add
push
add
mov
inc
add
pop
pop
fistl
mov
mov
sub
aaa
inc
add
mov
lret
dec
mov
add
add
dec
cwtl
pop
add
addb
add
call
pop
sarb
push
add
xchg
cld
fisubrs
add
add
call
jle
add
jne
daa
add
cmp
idivb
fwait
lock
cmp
call
fmull
and
sub
divl
add
cmp
aad
add
test
add
and
jmp
push
adc
dec
push
dec
mov
jl
cmp
xchg
lea
add
aam
mov
addl
sbb
divl
inc
add
cmp
imul
out
lahf
stos
loopne
aas
add
inc
add
inc
add
bound
mov
fimull
pop
xchg
sahf
movl
add
loop
lahf
add
push
addl
clc
mov
xchg
dec
jg
add
je
add
movsl
das
add
aam
mov
add
mov
sub
jmp
push
ret
push
pop
xchg
xor
add
into
imul
in
sbb
jmp
push
ret
push
insb
pop
nop
repnz
jo
mov
in
add
add
adc
stos
pop
add
push
adc
push
mov
insl
push
ljmp
jecxz
mov
push
pop
jb
add
sbb
and
mov
call
push
jmp
push
xchg
push
enter
push
mov
add
jmp
add
add
in
mov
bound
roll
fdiv
or
mov
jmp
push
and
xchg
ljmp
pop
loopne
adc
pop
je
bound
sbb
dec
pop
inc
add
add
push
jmp
pop
mov
aam
sbb
imul
xor
addb
push
push
in
adc
dec
pop
flds
jmp
fists
cmpl
add
jmp
add
stos
dec
hlt
lcall
xor
arpl
jo
ficomps
scas
xchg
push
sbb
push
dec
mov
add
scas
test
into
addb
add
aam
movl
sbb
add
add
test
ljmp
add
mov
dec
cltd
pop
xor
insb
iret
je
dec
cltd
adc
xchg
out
xor
add
mov
sub
fcomi
push
add
sbb
add
fistpll
sbb
call
or
aaa
pushf
push
scas
mov
scas
cltd
clc
or
mov
add
out
test
inc
add
add
addb
ljmp
jp
mov
add
add
add
dec
cwtl
mov
xchg
xchg
jmp
pushl
xchg
pop
jecxz
decb
add
push
addb
cmp
add
movb
out
aam
add
add
add
mov
pop
iret
scas
xchg
jle
add
je
sbb
cmpsl
call
fldl2e
jecxz
faddl
mov
add
jmp
lcall
fistpll
add
ljmp
add
mov
mov
add
mov
in
aad
or
add
add
inc
add
add
in
or
add
push
or
vmwrite
incl
lcall
vmwrite
jg
jp
mov
shr
int3
call
inc
xor
out
dec
imul
in
push
f2xm1
xchg
test
daa
add
jnp
add
out
out
add
jmp
int
add
sarb
dec
adc
nop
mov
jp
enter
ffree
add
scas
adc
pop
pop
popf
sub
in
test
pop
loop
test
lds
cs
or
sub
xchg
or
sbb
add
test
xchg
rolb
add
clc
push
jmp
enter
sbb
pushf
and
push
add
jmp
lcall
pop
sti
mov
mov
mov
decl
test
pop
inc
add
cmp
dec
jmp
sbb
into
addr16
dec
xchg
stc
pop
ljmp
out
mov
jns
add
mov
add
jmp
jmp
push
mov
sbb
xchg
pop
add
popa
jmp
push
inc
into
push
add
loopne
decl
test
ljmp
addl
fimull
stos
fsubl
add
add
add
clc
mov
add
add
movl
int3
mov
rcrb
add
cmp
push
push
pusha
jmp
mov
xor
xlat
aad
addb
cmp
add
jmp
or
sub
decb
lret
bt
ja
cmc
or
sahf
icebp
mov
shlb
or
add
scas
jl
out
cmp
loope
xor
inc
add
sahf
scas
jge
add
test
pop
xor
mov
scas
cmp
xchg
xor
xchg
mov
add
rolb
sbb
add
sub
mov
jmp
aaa
test
xlat
roll
leave
rolb
xchg
ds
add
dec
xchg
loopne
aad
pop
jmp
xor
repnz
dec
sti
in
adc
mov
mov
insb
mov
add
mov
add
pop
clc
dec
sbb
pop
adc
addl
add
mov
add
add
push
aas
stc
in
mov
cwtl
mov
dec
or
sub
loopne
aas
imul
shlb
mov
and
ja
outsb
dec
adc
fwait
sub
inc
add
push
jmp
in
lcall
mov
pushf
jo
pop
int3
mov
mov
ret
add
mov
push
mov
cmpsb
fists
cmpsb
add
add
pop
and
fwait
in
cmp
dec
lret
mov
cmp
testl
addl
sub
cmp
cltd
in
mov
or
jg
pop
add
lret
lods
mov
sub
neg
inc
add
add
movsb
add
mov
decl
mov
inc
add
push
xor
add
inc
add
rcrl
add
insb
bound
xor
testb
xchg
cmp
les
cmpsb
add
add
push
jmp
push
fadd
add
add
jg
and
add
lcall
and
in
sar
incl
fsts
push
add
inc
add
pop
mov
mov
xchg
adc
mov
add
sbb
add
sub
inc
and
jmp
in
push
pop
sbb
stos
xchg
push
fcmovnb
add
in
mov
inc
add
add
ror
aam
mov
dec
imul
cmc
ljmp
sti
cmp
jmp
adc
push
add
jmp
inc
or
sbb
dec
mov
and
jb
je
add
add
add
ljmp
push
jne
push
ret
sbb
in
in
mov
imul
sahf
or
lds
add
incl
add
out
fimuls
jae
xor
pop
mov
add
test
ret
popa
cwtl
adc
out
push
ljmp
sub
sbb
mov
mov
hlt
mov
add
mov
ss
jmp
push
rolb
jae
add
or
icebp
les
addl
add
fcoml
cmp
in
mov
in
cmp
jne
add
insl
lods
jbe
mov
loop
pop
push
jns
mov
mov
fs
add
iret
int
add
add
and
xchg
inc
add
sbb
mov
add
inc
add
xor
xor
inc
add
add
xchg
aas
dec
icebp
dec
daa
add
push
je
sbb
inc
into
lcall
stos
popa
push
push
push
add
lcall
ret
add
fldenv
daa
add
mov
mov
add
addl
or
jnp
mov
add
pop
push
ret
push
dec
adc
in
aas
insl
in
and
stc
je
add
hlt
in
inc
add
decl
call
cmp
push
inc
add
push
ret
mov
push
push
add
decl
test
loop
jmp
push
inc
add
add
xor
movb
or
add
jle
xchg
cmp
add
dec
ror
fwait
cwtl
jl
add
in
jb
lcall
addl
jl
add
int3
jmp
cmp
adc
test
int3
lds
outsb
xor
nop
push
sbb
dec
push
inc
add
lock
sbb
add
inc
add
or
sbb
stos
jns
and
adc
test
add
dec
mov
es
or
addb
jmp
mov
jmp
push
mov
cmp
fmul
mov
sub
push
call
addb
add
call
add
inc
add
xchg
in
imul
and
bnd
test
idivl
mov
movb
add
dec
add
insb
xrelease
xor
arpl
push
add
daa
add
xchg
out
jne
bound
mov
fldl
test
iret
jmp
push
add
loop
jmp
add
push
push
push
xlat
or
fcoms
out
enter
int3
mov
rorl
adc
add
mov
aad
adc
add
nop
fisttpl
add
ljmp
mov
negb
lret
cmp
sahf
or
add
add
dec
fldenv
add
rol
add
add
jne
push
pop
and
mov
popa
add
addl
add
add
add
add
mov
mov
add
jbe
out
pop
add
aas
dec
push
aas
or
add
mov
add
std
mov
sub
jnp
pop
jmp
or
push
push
push
mov
sbb
ljmp
in
xchg
add
aam
fsub
add
add
cmpsl
add
jmp
push
adc
add
movsb
add
pusha
add
push
sub
jmp
subl
xlat
xchg
adc
test
rolb
jne
push
ret
pop
or
ds
ljmp
push
mov
jno
lcall
adc
sub
add
cmp
mov
mov
mov
ljmp
add
pop
mov
incl
aam
ljmp
mov
xor
mov
movsl
add
or
add
subl
adc
cmpsl
add
sub
add
decl
add
popf
jnp
add
ljmp
add
incl
jo
stc
pop
fldenv
jns
movl
add
sarl
or
mov
loope
or
xchg
sbb
lcall
pop
pop
adc
add
xor
add
inc
add
xchg
push
and
mov
je
arpl
loope
xor
mov
pop
jg
add
leave
dec
dec
addb
bound
cmp
iret
hlt
rcrl
insl
pop
cmpsb
add
push
and
out
fwait
mov
add
sti
scas
popa
add
add
add
sub
add
cmpsb
add
call
mov
push
ret
cmp
pop
lds
and
jmp
push
push
ja
add
in
inc
add
add
add
ret
sbb
sub
add
add
movb
push
mov
adc
cmp
mov
fstpt
push
ret
or
sbb
pop
pop
es
and
jle
add
pop
cmp
lods
in
mov
ljmp
pop
mov
cmp
addb
testl
bt
lahf
lea
mov
add
adc
clc
or
add
addr16
sti
sub
add
rorl
stos
fdiv
xchg
pop
roll
decl
sarl
ss
test
stc
loope
imul
data16
decl
inc
inc
add
inc
push
push
sbb
xchg
mov
clc
imul
add
insl
mov
add
add
add
mov
jae
push
pop
nop
roll
fisttpll
movsl
add
lret
mov
add
jmp
push
aas
lods
pop
adc
aam
fdivrs
fstp
int3
mov
add
insl
add
inc
add
dec
xor
add
add
add
add
add
incl
add
add
cs
add
ljmp
scas
xchg
mov
lcall
clc
jmp
inc
pop
popl
push
fsubrl
leave
test
sub
ljmp
fildll
adc
mov
call
add
add
add
mov
add
add
aad
jbe
add
xor
decl
inc
push
ret
inc
add
pop
adc
xor
imul
mov
in
ja
add
add
test
dec
lret
sub
test
push
cmp
add
sbb
jmp
jmp
enter
push
cmp
sbb
sub
add
lcall
xchg
pop
mov
add
out
pop
pop
aas
shl
add
data16
test
mov
ljmp
popa
insb
push
jmp
push
das
es
add
jne
mov
push
mov
pushf
sub
add
imul
xchg
mov
add
or
push
xor
add
sbb
and
and
push
xchg
cmp
insb
cmpsl
add
popa
add
add
sbb
outsl
jns
jmp
push
and
jbe
jno
add
repnz
adc
call
cmp
xchg
clc
add
addb
mov
add
add
pushf
jecxz
xor
imul
add
and
sub
popf
push
mov
mov
add
add
imul
add
add
jmp
scas
jnp
imul
adc
xor
decl
add
cld
sub
test
jp
add
ret
call
jge
xchg
sub
mov
dec
jmp
gs
and
shr
cmpsl
add
jne
add
add
inc
mulb
push
and
lock
add
push
xor
lret
mov
add
mov
add
xchg
adc
sbb
pusha
add
push
mulb
pop
out
dec
inc
add
add
ret
jmp
popa
js
cmp
cmpsl
add
jp
push
rolb
pop
add
push
mov
and
dec
mov
adc
ffreep
add
in
or
push
push
ret
xor
nop
push
rolb
int3
sub
add
add
test
pop
add
jmp
push
add
fildll
xchg
movl
add
pushl
add
pushf
arpl
add
sbb
add
add
dec
and
and
pop
mov
lds
mov
or
loope
fimull
dec
mov
sbb
add
or
stos
into
push
sti
and
sub
add
aam
add
add
ljmp
mov
test
roll
xor
dec
pop
lret
jp
add
aaa
test
mov
add
push
push
fcoml
and
push
mov
lcall
push
and
pop
call
ss
mov
sub
rcll
ljmp
insb
pop
mov
imul
adc
loope
scas
and
lods
movl
add
sbb
ret
decl
jnp
push
pop
or
inc
add
iret
pushf
mov
addl
mov
jnp
insl
daa
add
sahf
xor
data16
mov
or
add
jmp
add
outsb
movsb
add
mov
add
icebp
or
add
jb
adc
lcall
addr16
fisubl
xor
add
add
in
gs
addl
add
mov
sarl
add
insb
pop
jge
lds
stc
dec
cmp
lds
sub
add
pop
mov
cmpsb
push
dec
add
incl
call
inc
mov
ret
push
sbb
mov
pop
sbb
scas
dec
inc
add
jmp
add
fidivrl
aam
add
es
pop
add
das
arpl
mov
dec
or
addl
add
push
data16
rolb
ror
dec
xor
add
iret
mov
addb
rclb
lea
pop
cltd
pop
lahf
push
test
sbb
push
sbb
enter
add
push
pop
in
jle
not
jmp
sbb
or
roll
scas
fwait
ret
jmp
jmp
mov
cmpsb
add
pop
dec
add
xchg
das
movb
add
add
mov
push
ret
sbb
aas
add
xlat
ret
add
add
cld
cli
sbb
add
lcall
roll
add
mov
add
pop
add
add
lret
cmp
jmp
pop
ss
movl
jge
xchg
mov
push
cmp
add
ljmp
add
das
xchg
inc
add
push
loope
add
in
call
jmp
enter
push
icebp
and
lds
jns
add
add
mov
add
clc
add
dec
out
push
movl
pop
out
jmp
xchg
lcall
add
add
out
cmc
pop
lds
leave
adc
pusha
add
add
mov
push
fisubrs
cmp
add
stc
int3
jg
idivb
pusha
add
xchg
fimuls
jmp
add
add
jle
push
jmp
push
adc
es
lret
xchg
test
adc
jb
mov
push
or
pop
cmp
fistl
mov
xchg
or
add
roll
mov
add
roll
jle
sbb
imul
cli
pop
addl
push
repz
add
mov
jnp
add
js
jo
add
or
add
jae
xchg
inc
add
cltd
add
jne
push
lods
jg
xor
test
cli
pop
sbb
movsb
add
xchg
lret
dec
jo
pop
push
ret
insb
adcl
jmp
int3
outsb
cmp
repnz
and
les
add
add
leave
push
add
add
call
sbb
cmc
call
addr16
pop
add
add
dec
add
call
lock
and
repz
mov
pop
mov
or
adc
aaa
addl
std
sub
out
idivb
or
mov
xchg
in
push
shll
popf
lcall
add
dec
fwait
nop
jne
in
movsb
add
bound
sti
pusha
add
mov
insb
lds
fcmovnu
or
addps
pop
add
pushl
push
xchg
insb
lret
rolb
or
je
push
rol
add
xlat
lcall
xlat
fdivrl
xchg
ds
scas
adc
mov
mulb
inc
add
jae
rol
add
add
int
and
mov
sti
test
jne
in
iret
repnz
cmpsb
add
add
inc
add
loopne
std
xlat
pop
addb
add
add
push
mov
lahf
hlt
insb
inc
add
rolb
dec
sub
add
push
jo
mov
mov
and
pusha
add
js
pop
pop
jbe
ficoms
cltd
mov
add
cmpsb
add
push
push
or
jmp
or
fidivs
cltd
jb
lcall
xchg
push
fistpl
leave
adc
add
pushf
sub
dec
jmp
rcrl
mov
jmp
xchg
sub
and
xchg
in
icebp
adc
pop
xchg
mov
stc
or
notl
add
call
push
mov
add
shr
xchg
loopne
xchg
in
adc
push
adc
loopne
add
add
and
add
mov
add
add
mov
int3
pop
rclb
cmp
movsb
lcall
adc
data16
stc
xor
sbb
sub
add
out
xchg
hlt
bswap
add
inc
add
push
xor
add
je
jmp
in
add
aas
xchg
imul
jae
adc
je
add
cmpsb
add
add
add
cmc
rol
add
mov
push
mov
add
ljmp
fucomip
lods
test
ss
in
inc
add
jg
movsl
add
add
jae
jb
inc
pop
inc
add
sub
idiv
push
ret
incl
xor
dec
xlat
enter
fmul
repz
ljmp
add
mov
cmp
adc
add
push
push
push
add
mov
sub
add
add
loop
jmp
arpl
mov
add
xlat
inc
add
lcall
ret
add
jmp
cmpsb
or
add
push
nop
xor
fsubrs
jno
and
fildl
mov
jmp
test
in
mov
add
jae
or
je
inc
add
iret
ret
add
movups
loopne
push
add
inc
add
arpl
and
les
loope
dec
jmp
add
xchg
sub
cmpsl
add
add
dec
mov
mov
mov
mov
cmc
movsb
add
add
xor
add
mov
lahf
std
cmp
add
add
insb
loopne
nopl
pop
jmp
sub
jb
push
clc
sbb
aaa
arpl
xor
mov
jmp
sub
xor
add
add
sbb
jo
add
push
hlt
push
call
or
les
and
jecxz
jl
outsb
sbb
jo
mov
add
add
mov
js
popa
add
push
into
add
jmp
add
flds
lcall
inc
add
pop
push
dec
jmp
addb
fisttpl
xchg
mov
imul
add
jmp
lret
in
mov
add
xchg
les
xchg
dec
movb
add
mov
in
jp
add
pop
add
or
xchg
mov
add
psraw
cs
xor
add
popf
mov
movsb
add
stc
out
repz
lcall
xor
cmc
ficoms
jns
xor
imul
add
ret
add
cmp
pushf
int3
jmp
mov
jae
add
add
mov
dec
scas
pop
stc
adc
jmp
push
xor
mulb
mov
jl
push
ret
test
ret
add
fldcw
lock
outsl
mov
mov
and
mov
call
jmp
xchg
lcall
in
out
push
fstp
sbb
lods
lret
jmp
fcmovbe
icebp
in
aas
imul
rep
add
add
mull
enter
add
lret
mov
cld
bound
mov
pushf
outsl
push
dec
mov
add
add
jmp
cmp
add
inc
add
mov
mov
imul
loop
xor
daa
add
jp
scas
ret
add
lods
cwtl
iret
cli
mov
mov
popf
xchg
arpl
in
cmp
or
sbb
int3
mov
sbb
sti
mov
mov
xchg
add
mov
add
add
add
lods
xchg
in
cmp
jge
jo
int
arpl
nop
push
xchg
mov
or
aas
mov
push
push
jmp
sub
mov
cwtl
dec
jb
hlt
adc
cltd
xor
dec
mov
or
mov
pop
add
cmpsl
add
cmp
add
ret
add
leave
test
movl
push
ret
cld
add
jns
dec
lods
adc
xor
popa
add
mov
xchg
dec
enter
jae
add
shll
add
add
adc
movb
repz
cld
jmp
add
pop
jecxz
data16
shr
fidivl
arpl
push
pop
out
and
cmp
adc
jo
add
sbb
add
adc
add
nop
fucomip
fdivl
sbb
add
or
int3
movl
arpl
mov
sahf
dec
sarl
cmp
ljmp
push
pusha
add
jne
push
ret
xor
mov
jo
out
add
incl
incl
cmp
jo
std
cmp
jle
add
mov
add
inc
enter
xchg
inc
add
ljmp
movl
cmp
dec
xchg
sbb
fcomp
test
add
sti
jns
add
or
add
std
and
add
incl
jmp
add
xchg
push
push
mov
gs
ret
mov
js
sub
ss
adc
lock
add
xchg
push
mov
push
pusha
add
inc
add
das
adc
rcrb
out
sub
inc
add
add
sub
pop
js
sti
pop
lret
iret
mov
lods
mov
test
loopne
xchg
jno
or
xor
xor
decl
pusha
add
cmp
jmp
sbb
add
aaa
fists
push
ret
push
into
mov
push
inc
add
pop
mov
lcall
xchg
mov
jp
add
add
movl
jne
add
cmpsl
add
loopne
adc
dec
pop
enter
and
push
fists
mov
pop
ret
add
add
add
sub
lret
mov
out
cmc
sub
dec
or
enter
bound
jle
jnp
add
movb
sub
inc
add
and
mov
test
popf
add
nop
inc
add
push
cmp
sahf
ss
dec
and
fildl
add
shr
into
rolb
pop
addl
add
xor
add
ret
add
mov
aad
push
inc
add
push
jmp
lcall
add
in
dec
lock
push
add
mov
add
add
xchg
pop
inc
add
mov
stos
sub
inc
add
add
in
popf
rcrb
sbb
fsub
add
dec
roll
jl
mov
xchg
adc
add
jl
sahf
filds
fwait
add
roll
xor
int
add
push
jmp
cmpsb
cmp
fcmovb
add
inc
add
into
pop
add
mov
jmp
cmp
push
fldenv
pop
addb
addb
fistpl
cltd
loope
lret
mov
cltd
mov
add
call
sti
xchg
out
pop
jmp
inc
push
push
add
add
popa
add
dec
fstps
fiadds
jne
xor
insl
push
ffree
add
bound
or
add
add
leave
pop
sar
adc
scas
mov
add
notl
push
repz
xchg
ss
add
cmp
add
mov
jmp
push
dec
mov
push
les
cmp
add
sti
popl
add
adc
push
cmp
dec
cs
mov
in
insb
xchg
xchg
inc
add
add
pushl
setbe
push
mov
adc
add
popa
add
add
ljmp
mov
add
negl
or
dec
mov
repnz
repz
cmp
filds
sti
roll
or
nop
push
call
loopne
add
push
pop
popa
mov
add
pushf
push
cmp
jmp
push
ja
repnz
dec
ja
add
scas
fs
add
sbb
jmp
cmp
add
incl
dec
mov
push
xchg
lret
nop
enter
leave
add
dec
loope
into
shll
or
sysenter
mov
add
xchg
mov
add
add
sbb
es
fxch
jmp
int3
sub
add
test
pop
adc
add
pop
adc
fildll
add
add
add
jge
add
in
out
in
sbb
mov
add
call
jmp
pop
cmp
leave
imul
add
bnd
imul
rolb
pop
ljmp
repnz
lcall
add
adc
nop
mov
inc
add
movsb
add
mov
jmp
add
add
mov
add
cmp
and
push
push
call
aaa
mov
fwait
call
enter
jae
addb
push
test
call
push
ret
arpl
repz
lret
mov
xor
das
sub
xchg
fwait
mov
call
push
sub
push
push
push
jmp
aam
cmpsb
push
push
mov
mov
js
add
imul
out
or
pop
repnz
cs
mov
mov
xor
add
add
jle
add
fldt
pop
ss
call
outsb
sahf
inc
add
add
insb
push
cld
insl
jbe
add
add
repz
ret
add
jmp
add
cld
fdivp
cld
mov
mov
mov
roll
dec
push
xchg
jmp
add
sbb
jmp
mov
sub
add
ds
add
jmp
push
inc
cmpsb
das
loope
sbb
jmp
push
pop
or
add
ficomps
mov
add
or
add
aam
adc
out
das
jae
and
and
out
jne
std
arpl
jmp
xor
out
test
in
movsb
add
push
popa
add
add
int3
inc
add
aad
jmp
inc
rorl
add
add
push
mov
add
inc
add
mov
stos
lret
rolb
incl
jmp
mov
xchg
xor
loopne
push
lock
jae
add
add
inc
in
call
inc
stos
adc
pop
fidivrs
iret
addb
rep
add
sbb
inc
add
stos
sub
sbb
js
pop
scas
mov
inc
add
mov
addl
enter
mov
push
jno
add
xor
pop
in
stos
cwtl
cmp
cmp
add
dec
cmp
aad
jmp
lahf
aaa
inc
add
adc
lock
jae
or
xchg
cltd
push
mov
lahf
cmp
sbb
add
push
sub
dec
pop
out
sti
cwtl
xor
pop
rep
movsl
add
into
stos
test
add
mov
ljmp
mov
ret
sbb
ret
xchg
enter
add
xor
dec
aas
xor
ljmp
add
rolb
fsubrs
dec
jmp
inc
cmp
jnp
add
mov
shrb
nop
cld
nop
fwait
jb
decl
push
xchg
ret
add
add
jbe
add
add
add
je
add
in
call
sub
add
add
nop
mov
rclb
pop
mov
add
pop
xchg
hlt
dec
out
adc
jp
je
jbe
decl
inc
add
add
add
add
lcall
ja
fsts
ret
add
xchg
pop
push
add
push
mov
add
xchg
jl
pop
arpl
js
sahf
xchg
fldcw
insb
mov
add
jmp
push
lock
mov
add
nop
int
and
insb
sub
add
mov
mov
jmp
filds
notb
add
in
add
mov
test
sub
add
push
scas
and
imul
push
add
imul
fstpl
add
add
add
stos
shrb
int
add
or
or
dec
adc
cmp
test
rcr
add
ljmp
das
add
lret
cli
pushf
sbb
into
jge
arpl
jmp
stc
movsb
add
in
cmpsb
add
sbb
cltd
je
sbb
test
je
ljmp
out
pop
jae
sahf
mov
add
mov
jno
xor
dec
and
je
jge
sub
add
add
int3
push
push
ljmp
push
mov
mov
cmp
push
add
dec
dec
jbe
sbb
add
add
pushl
add
js
cld
insb
sbb
ficoml
add
mov
aaa
or
inc
add
push
rolb
movsl
add
add
push
incl
or
rep
jmp
sbb
fsts
cmp
push
push
jmp
aam
into
insb
ret
cmp
data16
jp
ljmp
add
xchg
int3
rorb
inc
add
push
push
out
aas
dec
dec
andl
icebp
pop
call
fadd
add
add
add
jmp
jle
lahf
xchg
push
fimull
ret
add
das
mov
mov
push
ret
push
das
xor
addl
add
add
add
add
sub
xor
mov
jmp
lret
pop
pop
mov
dec
nop
movl
add
call
push
add
ljmp
stos
lods
mov
add
ljmp
mov
mov
aam
cli
dec
mov
add
mov
add
adc
fcom
add
in
inc
add
cli
ds
ret
add
cmpsl
add
outsb
inc
add
stc
out
movsl
add
inc
add
push
iret
insb
jle
xlat
out
inc
add
inc
add
outsl
mov
dec
js
adc
mov
adc
adc
js
add
int3
add
dec
jae
fists
nop
and
jp
mov
add
sbb
je
add
pop
mov
jmp
lcall
inc
add
mov
dec
rolb
dec
lea
mov
pop
cli
dec
xchg
mov
add
mov
cmpsb
add
push
loope
fsubl
add
popf
clc
imul
in
dec
rolb
nop
insb
cmp
add
add
cmp
mov
add
mov
jne
jmp
sub
mov
add
ror
xchg
js
cmp
outsl
add
and
sbb
add
jnp
pusha
add
shl
add
les
push
add
add
sub
test
hlt
and
xchg
imul
dec
push
cmpsl
add
call
jmp
pop
mov
add
add
addl
or
testl
add
aad
add
sub
ljmp
add
inc
lock
insl
sbb
sbb
push
push
push
sbb
adc
daa
add
icebp
xlat
dec
sbb
and
adc
pop
add
out
push
pop
jmp
notb
mov
push
push
add
add
cs
movsb
add
push
stos
push
ret
push
sub
arpl
xchg
cmp
add
sub
adc
sub
leave
jne
add
cltd
lret
cs
add
push
sbb
pop
inc
add
ficoms
push
lahf
pop
add
movl
add
add
iret
fisubrs
sub
xchg
leave
repz
cs
add
into
loop
jecxz
dec
adc
cmp
ret
add
ja
add
add
push
pop
mov
mov
jne
mov
add
arpl
outsb
ret
add
add
lahf
add
ljmp
xor
and
popf
mov
add
mov
push
inc
add
pop
add
lock
add
add
mov
scas
mov
add
push
ret
popa
insb
stos
xorl
stc
movl
add
add
jmp
rol
jmp
pop
cmp
int3
incl
mov
ret
add
mov
pop
mov
xor
push
inc
add
add
add
out
sti
jns
add
leave
jmp
push
cmp
pusha
add
or
add
pop
mov
jl
enter
movsl
add
xchg
push
mov
jg
add
mov
push
push
push
push
dec
into
neg
jl
addb
inc
add
cmpsl
add
add
cmpsl
add
pushf
push
aas
or
mov
sub
adc
or
inc
add
sub
add
addl
sbb
dec
push
inc
add
in
popa
div
test
add
ret
add
aas
dec
add
shrl
lret
mov
rcrb
notl
jmp
push
push
push
pop
mov
ljmp
mov
add
jl
insb
lods
adc
pop
cmpsl
add
pop
test
arpl
lcall
cmpl
xchg
dec
sti
sub
add
pop
test
pop
ret
add
cmp
lret
scas
iret
fdivs
mov
fcomps
mov
fisubl
add
jg
cmpsb
add
add
dec
mov
inc
add
inc
add
cld
mov
mov
jmp
addr16
scas
in
fcmovu
clc
mov
sbb
mov
loopne
pushl
pop
pop
loopne
popa
add
add
lods
push
push
push
push
ret
enter
testb
jmp
jmp
movswl
jmp
push
lcall
push
shr
dec
xor
lods
push
hlt
jae
sbb
out
iret
lds
frstor
rorb
loope
mov
fildl
pushl
pop
cld
lea
cs
jmp
ljmp
push
or
mov
ret
add
xchg
arpl
sub
adc
add
mov
mov
adc
into
data16
add
in
and
dec
movl
out
out
cmp
cmpsb
add
bound
push
into
not
jmp
inc
add
add
add
ds
xchg
cmovno
pop
push
pop
mov
cmp
add
fistl
xchg
mov
add
mov
jecxz
inc
add
stos
cmp
add
add
add
jmp
mov
mov
cmp
pusha
add
sub
mov
jmp
mov
fdecstp
push
push
and
inc
add
sub
jae
add
int3
jp
pop
pop
stc
sub
pop
fildll
add
add
decl
jmp
ljmp
bnd
xor
iret
outsl
pop
mov
xor
pop
jl
movsl
add
fistps
push
dec
test
mov
add
sbb
in
lcall
and
mov
mov
add
jmp
mov
lret
lcall
bound
daa
add
add
cli
sub
cmp
xor
add
or
mov
add
pushl
shr
clc
call
push
jle
ljmp
push
add
decl
add
and
push
mov
push
addb
aad
in
popa
add
add
push
loope
cltd
icebp
xor
add
out
out
idivb
add
cld
mov
add
add
jmp
fcomip
push
add
add
add
lock
xor
shr
mov
jne
push
push
or
cs
mov
sub
loope
mov
addl
xor
add
add
lahf
enter
jmp
les
push
sahf
cld
mov
idivb
mov
add
add
add
lock
ljmp
push
inc
add
cmpsb
cmp
stos
fnstenv
jle
add
add
sbb
push
popa
add
sub
jl
sbb
or
and
add
and
testl
add
push
add
add
mov
inc
add
push
enter
mov
add
das
inc
add
movntq
fmuls
adc
push
sub
aas
inc
add
add
add
movsb
add
push
ret
push
sbb
stc
push
mov
push
mov
xchg
sbb
sbb
jbe
jo
mov
movl
and
ds
xchg
mov
movsl
add
or
add
roll
fisubrl
add
add
add
lock
adc
add
test
daa
add
nop
dec
cmp
ljmp
jg
add
add
iret
push
mov
push
mov
inc
add
push
enter
shrl
cmp
lcall
jbe
ds
mov
add
jle
cmpsl
add
jne
jmp
dec
inc
add
jne
cs
jge
add
lea
mov
add
jae
add
popf
adc
push
inc
add
jae
ds
or
jae
mov
out
lods
mov
cmpsl
add
and
fwait
sar
or
add
lahf
mov
cmc
xchg
notb
add
call
mov
mov
xor
test
xchg
les
push
pushf
mov
mov
cld
adc
add
jae
add
rcl
inc
add
add
add
add
aam
pop
push
das
add
incl
push
xchg
dec
ficompl
leave
lahf
pop
out
push
sbb
iret
scas
xchg
mov
inc
add
inc
push
push
push
inc
int
mov
fsubp
add
decl
add
pushl
xor
or
add
pop
movl
jo
add
lods
loope
outsb
or
scas
add
sbb
in
push
add
icebp
push
ror
cli
xchg
roll
jge
xchg
cmp
jb
pop
dec
xor
add
push
mov
sbb
mov
dec
add
ljmp
push
mov
mov
add
or
add
jne
add
ss
add
push
sbb
push
ret
mov
movsl
add
scas
jo
push
cmp
add
pop
jge
add
cmp
add
xchg
test
cmc
dec
jns
add
jmp
dec
movb
cmp
xchg
jb
add
xlat
mov
clc
push
push
push
ret
push
out
fisubrs
inc
add
push
mov
aaa
movb
inc
add
cld
std
pop
inc
add
add
addl
pusha
add
je
add
mov
add
mov
cmp
jne
pop
aaa
xor
push
fcmovne
jmp
mov
in
out
and
jle
addl
jecxz
imul
movl
into
dec
test
call
adc
shrb
test
push
sub
jmp
push
push
loopne
pop
adc
dec
add
sbb
xchg
loope
pop
add
sub
jne
ret
out
push
add
cmp
flds
js
add
add
mov
add
mov
cmpsl
add
jmp
mov
mov
adc
add
mov
jg,pn
add
out
fidivl
pop
sub
pop
icebp
jp
add
fisttpl
push
daa
add
bound
addl
add
inc
add
add
push
add
ds
jmp
inc
add
pushf
daa
add
roll
add
add
cwtl
add
mov
adc
add
roll
sbb
add
xchg
push
ss
add
imul
add
jl
add
iret
mov
xlat
ds
out
movl
add
adc
jmp
xchg
lahf
das
push
ffree
add
test
mov
or
add
out
xor
push
jmp
add
daa
add
cwtl
push
mov
fisttps
ds
add
push
push
ret
inc
leave
and
scas
xor
add
inc
add
cmp
cmpsl
add
and
movl
inc
add
jmp
sub
pushl
mov
cld
test
mov
add
addb
add
pop
lods
shlb
and
loop
mov
jb,pt
jbe
sbb
inc
lcall
fildll
xor
and
mov
and
ljmp
jmp
add
stos
push
add
mov
add
add
add
sub
sbb
add
add
add
in
test
mov
mulb
cmp
add
out
push
daa
add
inc
add
add
dec
mov
je
lods
je
das
xchg
sub
popa
add
outsl
loope
xor
fcmovu
and
out
pop
cmpsb
add
adc
adc
les
mov
outsb
push
scas
int
in
inc
add
add
mov
add
add
add
add
rolb
call
add
add
out
test
stos
push
cmpsb
add
cltd
fsubr
mov
jo
les
bound
sub
jne
add
aam
jl
add
xorps
add
mov
fnsave
out
scas
roll
and
and
lds
jl
push
repz
add
scas
in
adc
repz
push
mov
and
and
add
icebp
movb
add
lea
add
dec
xor
sbb
ret
push
ret
xor
xchg
cld
xchg
pop
sub
add
add
add
jnp
push
sbb
push
ret
push
or
jne
imul
movl
push
loopne
stc
xlat
adc
cmpsl
add
add
movsb
add
lret
mov
ljmp
in
cmp
aam
cmpsl
add
add
loope
dec
dec
or
cmp
cwtl
sahf
mov
mov
cmp
shl
add
pushf
sbb
leave
aam
mov
push
int
add
add
ljmp
inc
add
dec
xor
mov
call
aas
cmp
pop
pop
nop
xor
dec
mov
add
outsl
data16
xchg
aaa
pop
add
add
jg
jle
add
cmc
push
ds
ret
add
loopne
lret
jbe
add
inc
add
add
lcall
add
add
add
mov
xor
scas
stos
mov
add
add
mov
out
pop
add
add
imul
mov
inc
add
add
inc
add
scas
out
inc
add
mov
adc
xchg
pop
push
stc
sub
sbb
fsubl
aad
add
pop
popa
add
add
test
jg
mov
stos
add
jbe
leave
ja
xchg
das
std
pushf
xchg
cmp
jg
add
mov
add
mov
push
or
xor
imul
xlat
xchg
mov
push
fiadds
jns
xor
push
pushf
cmp
out
pop
in
add
data16
iret
lcall
shll
xlat
jo
add
add
addb
add
sub
push
mov
mov
pushf
push
das
test
add
mov
incl
adc
push
push
sbb
cmp
dec
pop
outsb
out
adc
pop
mov
fidivrl
aaa
pushf
xchg
mov
sbb
mov
push
data16
out
xlat
test
add
pushf
inc
add
dec
mov
jne
sub
ficomps
add
dec
dec
scas
inc
add
sbb
adc
out
loop
mov
cwtl
inc
add
add
sarb
lcall
adc
jle
dec
movsb
add
push
inc
add
int3
imul
adc
neg
lahf
xor
std
dec
data16
push
jecxz
pop
or
adc
add
out
nop
mulb
add
test
pop
pushf
jmp
add
call
stos
jae
pop
ss
push
popf
jmp
lds
fisubrs
xor
add
jbe
sub
out
xchg
dec
xor
add
inc
add
jge,pn
lcall
add
ljmp
pop
addl
inc
add
mov
add
mov
push
daa
add
rolb
fistps
xor
inc
add
in
addl
add
int3
xor
mov
sbb
add
ljmp
sahf
add
jmp
add
add
pop
sbb
inc
add
add
push
add
jle
sbb
push
movsl
add
sub
dec
test
out
shlb
std
stos
popa
add
add
push
jg
ror
or
pushf
dec
xchg
jmp
add
cmp
into
mov
cltd
testb
push
dec
xor
xchg
xchg
sbb
add
xor
shrb
add
in
adc
add
jbe
add
lahf
add
js
add
jl
outsl
dec
sbb
xlat
enter
mov
add
cmp
scas
xchg
and
cld
fwait
mov
jns
add
jb
jbe
mov
dec
sbb
pop
cmc
sub
rolb
ja
add
sub
dec
mov
sub
test
roll
cs
jnp
mov
add
in
test
push
add
jmp
add
lock
and
adc
pop
xchg
ljmp
push
les
test
movb
ret
add
data16
push
adc
adc
loope
loope
inc
add
add
cmc
addl
add
add
into
scas
clc
xchg
jmp
add
xchg
inc
add
push
add
test
jecxz
movb
add
test
or
inc
add
ret
add
f2xm1
xor
imul
jmp
push
add
aam
adc
scas
jno
ret
jmp
ficomps
iret
testb
mov
pushl
add
pushl
mov
add
add
test
inc
add
repz
incl
xor
scas
dec
mov
add
test
mov
shll
lds
cltd
jae
pop
add
cmpsl
add
inc
add
jb
movb
lret
js
movsl
add
add
outsl
lods
cmpsb
add
test
and
iret
ret
add
jl
push
cwtl
or
mov
out
push
cmp
add
ret
in
test
adc
dec
and
lret
sub
ja
cmp
push
mov
add
add
add
aaa
xchg
pop
add
addl
add
loop
add
and
roll
cltd
fcmovnu
sub
rolb
ljmp
inc
add
loope
arpl
dec
cmp
add
lds
insl
push
jb
xchg
xchg
xchg
test
push
into
cmp
push
and
imul
fisubs
add
in
mov
xchg
push
sbb
add
decl
add
add
ds
flds
add
aas
mov
sbb
mov
or
xchg
add
call
cltd
mov
and
pusha
add
pop
ret
add
das
aam
push
adc
adc
mov
popa
add
hlt
lea
inc
add
mov
add
add
add
or
add
push
add
test
lods
mov
cmp
addb
rolb
add
and
pushf
jae
mov
pop
add
test
ljmp
add
bound
pop
or
sti
mov
add
add
daa
add
add
jmp
add
jo
sbb
fsub
add
dec
test
in
mov
add
add
test
add
ret
add
add
imul
add
push
add
inc
add
mov
xchg
jbe
mov
test
cld
fsts
bound
lea
push
addb
add
sbb
or
sahf
and
scas
dec
jp
jl
add
push
lds
dec
stos
push
test
push
dec
inc
add
add
add
inc
add
jge
xchg
cs
arpl
and
ljmp
mov
mov
lret
jle
add
mov
push
xchg
lcall
imulb
loopne
in
std
je
push
daa
add
add
dec
xchg
and
and
dec
lds
outsb
loop
jo
and
cmp
inc
add
push
mov
xor
test
mov
add
sbb
add
jbe
add
mov
leave
insb
leave
loopne
bound
jecxz
sub
pushf
inc
add
loopne
mov
add
dec
xchg
cmovns
lcall
add
jae
popf
dec
push
jb
cmp
das
push
cwtl
incl
mov
loopne
lret
sbb
add
add
inc
add
fstpl
sub
insl
js
xchg
inc
add
add
add
inc
add
add
add
add
xlat
mov
fucomp
inc
add
add
addr16
add
add
dec
test
jl
call
jb
add
mov
add
dec
dec
aas
add
inc
add
add
incl
decl
xchg
insb
jns
les
pop
int
add
rcr
sti
aad
jno
add
add
pusha
add
add
ss
mov
adc
pusha
add
clc
scas
inc
add
push
cld
jle
movsl
add
add
adc
jmp
add
lds
cld
dec
dec
fimuls
mov
mov
lret
roll
add
xor
pop
xchg
dec
add
in
push
sub
mov
add
mov
pop
testb
addr16
mov
addl
push
aaa
cmp
sub
scas
insb
in
movsl
add
add
pop
jns
inc
add
call
xor
mov
std
movsb
add
add
add
iret
cld
xor
pushl
aaa
dec
mov
push
add
add
imul
add
lea
fdiv
in
popf
in
movb
inc
add
or
lcall
fbld
lods
push
or
add
push
add
sti
pop
arpl
and
test
push
aam
lret
add
leave
pop
mov
inc
add
add
sbb
ds
add
push
js
cmpsb
add
add
pop
jnp
mov
aaa
pop
inc
add
cmp
cmp
les
add
add
and
into
add
decl
mov
and
cwtl
and
add
or
push
add
add
pop
addr16
int3
cwtl
sub
insl
cmp
jl
add
mov
cld
sbb
pop
jmp
lcall
pop
lds
jecxz
lret
jmp
add
pop
mov
dec
xor
call
insl
jo
popa
add
rcll
push
add
adc
lcall
mov
lods
out
test
pop
fldcw
ret
add
add
push
outsl
jns
mov
add
lret
add
jecxz
ljmp
mov
enter
sbb
push
add
mov
add
or
ds
adc
add
fwait
cmpsl
add
add
xor
shr
inc
add
aas
cmp
inc
add
add
jp
outsl
in
cmpsb
add
cmp
mov
scas
ret
cmpsb
add
decl
mov
lret
add
add
insl
shr
xchg
ja
stos
add
cltd
ds
pop
dec
cmp
fwait
std
call
mov
cmp
add
add
mov
add
add
xchg
inc
add
push
add
in
movl
lcall
push
stos
mov
stos
lds
mov
jns
lock
add
add
add
or
cmp
test
popa
add
push
outsl
mov
xor
in
jle
add
add
in
outsl
sbb
mov
addb
sub
loop
mov
xchg
jg
sub
add
jns
lds
popa
add
add
pushl
scas
and
sub
add
mov
mov
or
xchg
fnstsw
test
enter
xchg
jne
mov
add
add
add
les
xchg
pop
bound
out
sahf
cld
xor
add
cmp
add
sahf
push
add
jmp
dec
js
sbb
sub
add
bound
add
cli
and
sbb
mov
add
mov
add
incl
add
jge
add
push
nop
adc
push
movb
out
iret
mov
add
call
add
add
xchg
jnp
jno
jge
out
push
jle
lds
xchg
sub
xor
xchg
iret
aaa
push
dec
sub
add
aad
add
jmp
imull
jp
jp
add
mov
add
fidivrs
fnstenv
adc
lahf
into
std
jge
add
pop
mov
test
ja
in
sahf
std
and
dec
jno
mov
xchg
add
call
sbb
add
lcall
sarl
loopne
movsb
add
hlt
ret
add
in
dec
adc
fidivrl
das
inc
add
incl
in
jns
movl
int3
ficoms
xchg
or
add
cmp
add
push
sbb
sbb
add
add
pop
xchg
pop
xchg
mov
aas
inc
add
add
bound
dec
insb
lods
jbe
ror
push
ljmp
cs
add
sahf
add
mov
mov
insl
sti
shlb
inc
add
int
add
pop
lret
mov
add
push
push
push
and
dec
sub
lds
sub
xor
sti
push
and
adc
add
mov
stos
ret
and
cli
cmp
shl
ret
add
and
adc
ss
mov
outsb
mov
cmpsb
add
adc
jmp
add
add
rolb
shll
add
test
jno
dec
jmp
lret
icebp
mov
testb
add
push
mov
add
mov
pop
cs
shll
mov
or
les
addl
lds
push
mov
add
mov
aas
adc
add
pusha
add
xor
add
mov
xor
movsl
add
sahf
pop
jmp
jle
add
add
add
std
mov
sbb
add
add
add
add
or
lods
push
and
cmp
add
lds
addl
mov
into
mov
add
loope
jo
add
sub
add
add
jne
add
cmp
add
clc
add
dec
addl
cmpsl
add
fadds
add
lcall
lcall
fcoml
jnp
sbb
adc
jp
stc
enter
cli
ds
dec
xchg
pop
fildl
dec
mov
hlt
lods
addl
lret
data16
add
outsb
add
loopne
add
mov
mov
inc
add
iret
out
stc
or
popl
sbb
jbe
add
add
add
out
sub
mov
in
iret
pop
inc
add
add
inc
add
dec
hlt
movb
push
pop
adc
add
xchg
add
add
call
push
xlat
iret
add
pop
shlb
add
add
add
into
fsubl
add
loope
int3
bound
std
ret
add
xchg
push
jnp
incl
add
xchg
aas
and
addb
roll
add
jg
add
mov
sbb
jns
std
xchg
pop
fcompl
popl
call
add
fucomp
mov
add
sub
add
add
jmp
add
sbb
les
in
adc
je,pt
pop
xchg
mov
insb
addb
movsb
add
add
outsb
cmc
or
adc
bound
jns
add
mov
dec
and
leave
push
inc
add
out
aad
addb
add
pop
mov
or
cwtl
lods
aad
cmpsl
add
mov
inc
add
ljmp
sub
xchg
add
ss
pusha
add
add
jmp
add
mov
je
leave
loopne
add
add
sbb
lret
movl
add
and
sbb
pop
out
pop
cmpsb
add
sbb
inc
add
jmp
add
add
std
call
sbb
mov
add
aaa
mov
hlt
sbb
xchg
or
sbb
rcrl
lret
adc
or
add
fcmovbe
outsb
outsb
pop
aad
jne
add
push
loopne
ret
or
movsb
add
add
xchg
repnz
popf
imul
incl
sti
push
jae
push
addl
cmp
aas
into
jb
sub
add
int
test
xor
js
sub
add
xor
xor
rolb
aaa
dec
call
add
or
or
ret
cmpsl
add
add
add
rorb
add
ret
sub
dec
cmp
lock
cld
mov
add
call
loopne
addl
push
jbe
fldl
dec
cmp
add
ja
add
fwait
xchg
mov
mov
push
inc
add
adc
add
ja
pop
mov
je
mov
add
add
add
inc
add
adc
and
das
mov
add
stos
stc
fldenv
add
outsb
das
pop
loopne
cmp
mov
mov
mov
inc
add
or
add
or
mov
call
pop
out
movb
push
add
icebp
aas
in
lret
addl
ja
jle
insb
test
sub
pop
adc
clc
sti
mov
add
xchg
jb
jae
inc
add
add
je
sar
jns
fdivrp
ret
add
inc
add
lahf
dec
and
push
dec
and
popa
add
add
lcall
mov
pop
dec
int
mov
in
loop
loopne
imul
xor
inc
add
adc
sarl
mov
test
sbb
add
cmp
lcall
add
out
stc
in
cmp
sbb
into
sbb
add
or
out
mov
mov
js
push
pop
or
add
mov
mov
imul
add
mov
popa
add
add
add
xchg
push
mov
sbb
add
add
pop
push
es
sub
test
dec
mov
xchg
jg
jbe
add
push
fwait
mull
add
pushl
and
pop
xlat
ret
add
mov
test
mov
loope
rcl
es
xor
imul
add
add
call
bound
dec
lods
add
mov
mov
push
cwtl
fisubrs
pop
dec
testb
pop
push
repnz
add
add
xor
jge
rolb
push
cwtl
sbb
in
push
mov
mov
cmpsb
add
bnd
jnp
inc
add
test
and
ret
aad
add
popf
jae
add
hlt
jmp
sti
jbe
inc
add
cwtl
push
xor
sub
popa
add
xor
cmp
jbe
inc
add
imull
bound
mov
addr16
das
push
sub
add
jg
cld
pop
lds
fsubrl
add
push
pusha
add
add
add
lcall
add
pop
and
jmp
test
aam
or
pop
sub
add
pushl
push
out
add
or
loopne
or
sub
outsl
loope
or
test
loope
sub
fidivs
and
or
xchg
notb
mov
pop
inc
add
add
call
fisttpl
add
add
add
push
mov
add
add
cmp
lret
dec
sub
add
int
insb
mov
add
add
mov
dec
inc
add
adc
incl
lock
mov
lea
mov
push
addb
stos
call
push
xchg
hlt
add
icebp
sbb
inc
add
out
pushf
cwtl
push
shl
add
lcall
cmpsl
add
xchg
jne
add
sub
pop
or
repz
add
mov
adc
pushl
cmc
ffree
add
xchg
fsincos
cs
push
pop
fsubrl
addb
loop,pt
fcmovu
jo
sbb
cld
cmp
dec
movsb
add
fwait
movb
lret
bound
test
xchg
gs
add
fisttps
lcall
mov
push
jae
add
xor
stc
clc
inc
add
fwait
or
mov
jg
xor
jp
lods
xchg
inc
add
inc
add
add
ds
mov
add
add
add
add
clc
inc
add
add
lret
popf
push
test
lock
add
and
fisttps
mov
add
popa
add
dec
pop
insb
movsb
add
imul
insl
xor
imul
xchg
loope
mov
mov
iret
lahf
mov
sbb
push
add
push
add
scas
fnstenv
push
sub
movb
mov
add
ds
add
sbb
inc
add
push
int3
aad
add
cwtl
cmp
fisubl
rclb
add
jl
lret
jno
insl
dec
add
negl
mov
add
jl
xor
aad
hlt
or
or
aas
out
lea
mov
jle
rcrb
adc
pop
add
lcall
add
add
in
mov
aaa
dec
push
inc
add
test
int3
pop
shll
add
add
insb
add
cs
mov
sbb
loop
ret
add
icebp
enter
cmpsb
add
add
ja
fiaddl
dec
out
cmc
dec
jae
enter
lcall
add
add
xor
sub
mov
xchg
int3
lcall
jne
mov
add
sub
xchg
jp
scas
inc
add
data16
xor
data16
addb
repz
leave
pop
jbe
pop
dec
movsb
add
pop
bound
rolb
dec
rolb
pop
in
push
cmp
test
cmp
push
mov
pop
lock
out
and
xor
je
add
std
xchg
jo
push
ret
dec
imul
stos
sbb
enter
mov
add
test
rorl
push
ret
dec
jmp
jp
add
mov
adc
and
fcmovne
sbb
adc
aam
dec
aad
sub
sbb
xor
bound
add
cmp
inc
add
add
sti
cmp
repnz
jnp
add
stos
cmp
ret
add
add
sahf
test
sbb
sub
add
lods
add
call
adc
or
les
or
mov
mov
xchg
push
js
jnp
add
decl
jle
push
mov
addl
mov
pop
fwait
in
sub
add
mov
add
add
daa
add
or
adc
xchg
or
add
add
add
dec
nop
sbb
add
and
jae
enter
movsb
add
mov
les
push
sbb
and
dec
outsb
notb
movl
jg
cmpsl
add
pop
jo
cwtl
in
cmpsb
add
or
push
lods
inc
add
mov
add
pop
shrb
scas
jno
adc
sbb
outsl
dec
mov
movl
cwtl
data16
mov
jno
lock
loope
fidivl
adc
movb
lock
lcall
inc
add
add
adc
and
je
adc
add
push
insb
lea
add
in
ja
lcall
jae
fbld
add
test
add
xchg
call
cs
add
push
or
dec
fwait
adc
loopne
loop
fbld
add
push
loopne
addl
add
add
add
imull
cwtl
dec
xchg
jbe
adc
add
xchg
dec
in
es
cs
push
or
jns
add
adc
cld
ret
add
lcall
add
fisubrs
cmp
inc
add
arpl
jb
pusha
add
mov
rorl
sub
add
add
add
xchg
pop
inc
add
fs
mov
cmpsb
add
add
push
aam
popf
mov
mov
xor
jl
pop
les
cmp
jecxz
mov
add
inc
add
add
or
lds
lds
das
mov
dec
addl
xlat
jns
add
fwait
jo
ds
add
add
push
aas
jns
add
ljmp
lcall
lcall
dec
xchg
xchg
shrb
sub
add
iret
cmp
and
lods
test
decl
aam
imul
jmp
add
test
test
mov
add
add
push
addl
jno
and
add
popa
add
push
adc
xor
mov
test
jmp
notl
add
shr
cltd
adc
out
xor
in
adc
sub
js
ja
flds
aad
add
fcomps
and
and
or
enter
pop
xchg
inc
add
aam
dec
and
jne
push
shll
mov
in
xchg
sbb
cmp
stc
repnz
add
add
lds
ja
mov
lds
and
or
in
and
into
mov
cmc
repnz
jb
mov
fldl
lcall
pop
mov
mov
add
mov
xchg
jb
icebp
adc
ret
popf
xchg
xchg
push
add
aas
mov
aas
hlt
lea
inc
add
mov
pop
jb
mov
lcall
scas
ja
pop
sub
sub
lods
pop
popf
cmp
mov
add
popa
add
call
pop
lods
xchg
sub
add
aad
fdivl
lret
push
and
jo
cmp
add
in
test
ljmp
mov
test
imul
mov
jne
add
movsb
add
add
add
repz
pop
mov
aad
add
add
mov
ja
add
jg
and
fwait
push
push
jns
lods
sbb
cmpsb
add
testl
adc
cltd
xchg
jle
mov
in
mov
add
mov
pop
mov
lret
lahf
jecxz
movsl
add
fwait
mov
add
add
popa
add
fldt
inc
add
je
adc
dec
jl
cli
insl
fnsave
loop
cmp
cmpsl
add
pop
fwait
sbb
sti
pop
in
jg
add
push
jg
outsb
mov
cmpsl
add
popf
mov
test
xchg
ret
add
in
nopl
addb
push
dec
imul
dec
push
lret
addr16
insl
jecxz
mov
add
mov
add
stc
clc
sar
aam
jle
dec
push
mov
pushf
stos
dec
push
sti
sbb
sbb
loopne
mov
push
jl
ds
test
rcll
push
imul
add
add
add
out
inc
add
sbb
dec
cmp
sub
cmpsb
add
jbe
add
sbb
dec
or
cltd
shl
sbb
jmp
lahf
inc
add
sbb
les
xor
loope
mov
add
sbb
sbb
repz
pop
xchg
ja
sbb
jno
jnp
dec
xchg
pop
cmp
mov
lret
cmpsb
add
add
inc
add
push
add
cmpsb
add
aam
sbb
add
add
add
stc
push
aad
add
mov
mov
pushl
cli
lahf
scas
mov
push
popl
movl
push
cmp
adc
shll
lods
mov
add
add
out
cmc
pop
adc
inc
add
dec
roll
add
add
jb
add
movzbl
rorb
xor
push
mov
cli
mov
xchg
push
inc
add
sub
scas
pop
mov
add
call
inc
add
push
sub
mov
push
push
inc
add
add
stos
repnz
ds
jmp
add
lods
lcall
adc
imul
rorl
and
jp
xchg
xchg
hlt
dec
aaa
mov
mov
add
sahf
mov
cld
pop
stos
mov
add
jmp
add
add
in
jecxz
lcall
repnz
mov
inc
add
lahf
xor
and
sub
and
mov
nop
inc
add
xlat
popf
inc
add
aaa
jne
rolb
add
inc
add
inc
add
mov
in
mov
add
xlat
jns
add
out
xchg
mov
dec
fisttpl
fisttpll
adc
jns
add
in
mov
sbb
clc
repz
pop
pusha
add
mov
cmc
data16
xchg
or
jo
add
add
add
inc
add
inc
add
add
insb
pop
iret
movsl
add
jmp
inc
add
add
leave
xchg
stc
mov
test
jns
or
cmpsl
add
popa
add
lods
dec
jg
mov
std
call
adc
xor
add
rclb
outsl
jns
add
stc
and
add
das
in
mov
add
add
ljmp
add
add
add
xor
movsl
add
cli
push
mov
cmpsb
add
addb
shlb
pop
ret
les
jno
outsb
push
or
add
jg
pushf
rcrl
add
add
call
add
call
addb
xor
stos
jne
mov
dec
inc
add
repnz
push
inc
add
add
add
shll
out
add
push
repnz
rcll
and
pop
stos
cmpsl
add
in
mov
add
addb
add
mov
cltd
cmp
add
mov
testb
add
add
inc
add
push
fwait
imul
add
mov
cmp
adc
or
into
sbb
xlat
out
lods
scas
mov
stc
cs
incl
jnp
and
xor
shrb
nop
jl
mov
dec
aam
icebp
add
add
ljmp
addl
test
mov
std
aas
inc
add
push
pop
push
add
cli
test
mov
popa
add
test
add
jb
xchg
mov
add
add
add
mov
addl
push
cli
movb
add
outsb
aaa
jmp
add
dec
mov
add
int3
jnp
cmpsb
add
inc
add
xchg
imulb
jge
dec
xchg
lods
fldenv
add
add
inc
add
call
ror
cld
pop
jo
outsb
and
mull
test
cwtl
stos
nopl
addb
aad
add
pushf
jg
add
mov
add
add
insl
dec
insb
jecxz
xlat
xchg
sbb
mov
or
sti
pop
loop
imulb
add
es
xlat
pop
scas
adc
lds
xor
sbb
clc
adc
cmpsb
add
add
add
add
loopne
add
sti
pop
add
rclb
mov
jnp
dec
notl
jmp
dec
fidivl
fwait
pushf
mov
and
add
add
pop
add
push
hlt
rcrl
adc
out
js
or
rcll
stos
in
xor
add
cmp
add
daa
add
fiaddl
jecxz
loopne
add
call
jl
add
shll
call
sbb
add
fwait
mov
stos
mov
ljmp
pop
inc
add
add
dec
insl
sbb
mov
or
dec
pushf
jbe
imul
icebp
mov
add
mov
out
pop
outsl
inc
add
cmp
sub
add
out
in
jmp
add
je
jg
add
jbe
outsl
push
jns
or
or
jns
add
add
add
mov
add
aas
cmp
add
stos
push
leave
adc
sbb
aas
scas
mov
jbe
pop
int3
jl
jge
movl
loop
aad
cmp
sbb
add
add
add
push
push
push
sbb
or
sti
xor
leave
mov
mov
imul
pusha
add
add
add
scas
fwait
ret
loopne
aas
xor
fdiv
ret
push
add
fsubrl
add
ffree
add
ja
jno
add
inc
add
add
divb
mov
add
fcmovnb
add
add
inc
add
stos
add
inc
add
pop
addb
sarb
add
mov
add
addb
rorb
cltd
aad
add
test
or
and
mov
add
add
enter
add
adc
add
addl
add
push
fwait
addl
add
mov
dec
inc
add
add
or
jne
push
cmp
mov
xor
shlb
ret
imul
xchg
and
jg
mov
add
jp
cltd
adc
arpl
pop
popa
add
imul
xchg
jp
push
pop
stos
adc
add
add
add
cmp
xor
mov
mov
jl
aam
rclb
add
add
add
lea
movsl
add
jle
add
dec
add
call
ret
add
ja
add
rolb
push
add
mov
add
inc
add
mov
sub
movl
not
cmp
pop
add
jl
mov
add
add
add
addl
bound
dec
test
xchg
pop
push
fdivl
je
outsl
mov
test
jl
jbe
add
daa
add
add
addb
rolb
mov
mov
mov
jo
xchg
and
cmpsl
add
decl
fcompl
out
pushf
xchg
xchg
xchg
cmp
xchg
dec
sub
call
add
jle
sub
add
lock
add
add
ds
mov
xor
outsl
xchg
mov
xchg
sub
call
cmc
mov
imul
lods
and
je
adc
pop
inc
add
cmp
lcall
por
insl
mov
cmc
jae
sti
roll
xor
mov
mov
inc
add
add
and
movl
add
xchg
sub
cld
adc
lds
call
adc
jmp
movd
add
add
or
sub
jmp
add
jl
fsubs
jge
imul
dec
sbb
adc
pusha
add
add
repnz
sub
les
push
mov
or
imul
leave
jge
in
add
hlt
sub
fsubr
cmp
mov
mov
or
add
cmp
adc
add
inc
add
cmp
pop
in
jnp
movsb
add
or
call
mov
add
dec
sbb
iret
test
lret
fidivl
or
shll
js
std
lods
mov
lahf
add
incl
jmp
push
or
add
das
cs
repz
cmpsl
add
dec
popf
ja
mov
or
or
bound
fnsave
leave
mov
pop
mull
or
stos
sub
les
imul
data16
sbb
in
data16
outsl
in
call
add
imul
push
shll
push
inc
add
shrb
add
incl
ja
and
xor
decb
push
add
cmp
int3
ret
popf
jns
test
inc
add
add
movb
add
and
imulb
and
ljmp
pop
add
add
dec
adc
fiadds
pushl
testl
cmpsb
add
je
mov
xor
add
pop
roll
mov
decb
in
mov
js
push
sti
add
mov
sbb
mov
add
incl
mov
mov
loop
loopne
stos
mov
xchg
imul
xlat
xchg
xchg
xchg
adc
test
imul
cmp
in
and
imul
nop
jae
lret
and
adc
xchg
rolb
add
rorl
test
dec
mov
roll
or
inc
add
add
out
push
movsl
add
loope
or
aas
addb
movsb
add
jb
add
cmpsl
add
outsl
addb
lods
inc
add
push
clc
sbb
push
test
pop
xchg
rclb
xor
arpl
cmp
xchg
adc
cwtl
incb
das
arpl
inc
add
add
ret
add
mov
xchg
popf
push
pop
push
dec
jb
dec
dec
lods
xchg
xchg
cmp
add
jmp
mov
add
jno
add
int
mov
mov
sub
add
xor
add
movsl
add
je
mov
add
xor
nop
pop
dec
jnp
sub
add
shlb
add
add
insl
push
add
insb
idivl
add
add
add
cmpsb
add
add
std
sbb
shl
add
lds
dec
cmp
add
mov
add
mov
add
add
leave
add
out
inc
add
dec
shlb
nop
xchg
jl
mov
hlt
pop
cli
adc
push
add
xchg
loopne
popa
add
mov
add
adc
mov
pop
adc
roll
popl
jmp
add
stos
daa
add
iret
mov
add
xchg
test
pop
movsl
add
jno
bound
and
sbb
movsb
add
ficoml
sub
add
fwait
int3
pop
jne
stos
mov
add
int
dec
mov
jo
xor
lcall
jle
mov
aad
mov
ret
mov
dec
push
cmc
pop
pop
mov
xchg
mov
add
add
sbb
add
mov
add
pushf
popf
pop
inc
add
mov
call
push
mov
add
add
push
mov
fcmovb
add
mov
addb
rolb
fdivl
add
add
cmp
add
add
in
xor
add
mov
addr16
ret
add
cmp
mov
ljmp
add
add
test
jbe
les
xchg
pop
sbb
movl
sbb
add
jmp
movsl
add
sub
add
push
addl
push
pop
mov
shl
add
mull
dec
test
and
pop
pop
jmp
jnp
push
iret
pop
shl
add
adc
add
fisttpl
add
call
sbb
add
adc
add
pop
and
dec
pmaxub
call
xor
lea
add
jne
jecxz
stc
dec
inc
add
dec
inc
add
in
outsb
pop
test
sub
mov
add
sub
xchg
mov
add
xlat
push
aam
addl
lods
sub
hlt
push
push
sar
push
out
lret
ficoml
les
ljmp
add
cmp
js
add
cmp
mov
loope
sub
push
xlat
mov
add
push
cmp
pop
mov
sbb
insb
mov
rcrl
cmp
adc
dec
cmp
into
push
mov
xchg
and
aad
add
xchg
addl
cmp
pusha
add
rorl
outsb
cmp
push
jnp
jle
xchg
and
out
addb
add
pop
mov
jl
sub
mov
scas
outsb
mov
add
add
sub
mov
hlt
push
fdivs
xchg
inc
add
lret
sbb
mov
sbb
jecxz
aad
add
xchg
inc
add
xchg
mov
push
mov
add
xchg
dec
mov
aad
jb
enter
sti
inc
add
add
fwait
testl
push
inc
add
mov
mov
rcll
inc
add
int
mov
push
push
mov
jl
cld
ss
enter
popa
add
add
test
add
mov
add
fcomps
xchg
dec
push
push
pop
sub
lds
xchg
mov
stos
push
outsb
test
cmpsb
add
xchg
stc
mov
out
push
jecxz
das
lahf
sub
add
cmp
loope
fwait
in
outsl
push
test
shlb
cmp
xor
ja
mov
movsb
add
add
scas
daa
add
and
sub
movl
data16
loopne
xchg
mov
pusha
add
add
cmp
mov
sub
add
add
rolb
or
outsl
xor
push
ret
ljmp
xor
add
sbb
lea
in
test
nop
inc
add
fcmovb
add
add
dec
filds
add
int3
jge
add
add
fldt
add
jo
mov
mov
ljmp
xchg
dec
test
ja
cld
out
scas
push
in
cmp
inc
add
in
sbb
mov
sbb
add
ljmp
addl
add
add
mov
add
add
or
mov
add
pop
fistpll
pop
loop
data16
cmp
loopne
adc
mov
add
addl
xchg
in
xor
add
stc
lods
mov
roll
mov
cmp
xor
inc
add
test
or
jne
push
cmp
fwait
movd
add
test
push
and
fldenv
mov
add
je
rolb
push
repnz
scas
in
xchg
add
mov
jo
ljmp
xlat
cld
sub
jnp
mov
outsl
mov
add
mov
repz
mov
arpl
fisubrl
fcompl
jae
and
mov
jnp
push
sbb
lods
mov
add
roll
add
cmp
popf
sbb
cs
inc
add
enter
sub
out
out
out
sbb
xchg
testb
cwtl
push
mov
outsl
rcrl
cmp
add
fldl
call
hlt
in
jge
add
xchg
aas
ds
add
cwtl
jae
popa
add
jbe
cmc
push
add
sahf
or
pop
pop
or
cmpsb
add
mov
jmp
add
add
dec
call
cmc
mov
jecxz
inc
add
lret
shrl
in
inc
add
and
iret
add
or
lret
js
adc
add
inc
add
mov
add
roll
in
cmp
add
add
inc
add
nop
inc
add
icebp
sbb
xchg
in
fdiv
aaa
cmpsb
add
add
sub
in
and
stc
pop
loopne
sub
aad
das
sub
stos
icebp
or
jp
incl
data16
ljmp
push
sub
add
mov
pop
add
leave
out
aad
pusha
add
mov
add
notl
xchg
sbb
add
and
mov
and
inc
add
or
inc
add
cltd
movsl
add
int
inc
add
add
add
jne
push
inc
add
pop
xchg
into
push
lds
mov
add
xchg
pop
sbb
add
dec
add
aas
or
mov
cmp
lds
add
call
lea
add
cltd
mov
movb
add
stc
ficoms
cli
mov
pushf
add
add
popf
sub
add
sbb
aam
add
add
xor
les
aad
fwait
mov
add
testb
cmp
adc
add
mov
cmpsl
add
pop
fstpt
outsb
adc
into
insb
aam
popf
mov
jle
addb
pop
xchg
mov
add
ss
add
mov
add
xor
and
xchg
imul
jmp
push
add
jmp
jmp
add
push
add
or
add
sub
mov
sub
ljmp
pop
add
jle
enter
addl
mov
bswap
add
ljmp
or
add
add
jmp
add
jnp
add
lods
sti
add
jge
test
in
mov
and
int
jo
jecxz
in
movsl
add
popf
fwait
or
insb
sub
mov
push
mul
add
mov
aaa
aam
jmp
cli
pop
xor
addb
add
pop
jnp
add
call
imul
pop
fldenv
mov
movl
add
adc
add
daa
add
add
in
cmp
dec
push
iret
fdivp
mov
adc
shrb
push
outsb
stc
aad
outsl
sbb
pop
out
add
push
popf
mov
out
pop
sub
xor
add
repnz
mov
lahf
sub
add
push
jge
add
push
push
adc
add
add
add
jns
cmpsl
add
int
lcall
add
push
data16
imul
rorb
into
push
add
add
add
pop
push
xor
xor
jmp
add
add
add
add
movsl
add
mov
cmc
clc
fnstcw
push
add
mov
pop
add
inc
add
push
mov
iret
roll
add
sbb
pop
mov
test
add
add
jp
and
les
inc
add
add
faddl
addl
test
add
lds
cmpsb
add
and
test
pop
call
mov
add
add
add
cltd
int3
ret
fiaddl
jmp
in
lods
mov
movsb
add
ljmp
lret
enter
add
add
ret
add
std
lcall
cltd
xor
lahf
inc
add
add
movl
test
push
sar
into
jne
add
jo
add
scas
mov
push
sti
data16
lods
jns
and
and
dec
addl
xchg
aas
rcrb
jb
cmp
jo
sbb
shlb
xchg
outsl
inc
add
decl
xor
dec
cmp
add
addb
cwtl
mov
rolb
add
pop
push
sub
rolb
xchg
mov
ja
sbb
inc
add
add
add
icebp
sub
movsl
add
add
fildll
cli
mull
fwait
leave
lods
xor
fimuls
outsl
cli
jb
dec
cs
das
add
jmp
inc
add
add
ss
add
add
jno
add
idivb
jae
jno
xchg
jp
dec
and
fstps
adc
das
clc
jns
jne
loopne
xchg
mov
add
xchg
cmp
mov
jp
inc
add
cwtl
and
bswap
jb
add
add
aam
jle
pop
add
add
mov
xchg
push
repnz
pop
aas
adc
add
cmp
out
pushf
addl
add
sbb
cmc
lahf
add
fldenv
add
mov
aaa
mov
pop
movsl
add
add
add
lahf
mov
jl
sbb
add
cltd
pushl
inc
add
jecxz
ret
add
adc
add
cld
mov
mov
add
add
add
push
add
sbb
mov
jb
add
lods
cmpsb
add
cmp
add
add
lret
add
xor
fnstcw
add
stos
into
mov
add
mov
add
jp
scas
fs
lcall
bound
fxch
lret
add
addl
sbb
add
outsl
xor
in
out
imul
outsl
repnz
decl
out
jns
pop
add
mov
sbb
adc
pop
out
cmp
imul
lahf
sub
add
stc
cltd
roll
add
add
jnp
inc
add
add
cs
data16
push
divl
lods
pop
test
mov
scas
and
inc
add
add
add
cmp
fwait
imul
mov
mov
add
add
adc
out
xchg
inc
add
iret
stc
pusha
add
xchg
jge
cmpsb
add
add
sub
add
jl
add
jp
mov
aaa
pop
cld
lret
add
jns
flds
add
je
push
jl
addb
add
pop
xchg
divb
cmp
into
fsubrl
add
xchg
negb
stos
popf
push
in
dec
add
pop
and
mov
add
cs
ret
add
aaa
cmpsl
add
add
lret
bound
or
dec
add
push
xchg
jo
add
add
test
jae
sub
push
inc
add
daa
add
shlb
add
dec
enter
jge
jno
jl
add
cmpsb
add
add
add
or
inc
add
fsubs
dec
push
out
add
dec
fcmovb
add
or
dec
mov
loopne
inc
add
add
sub
mov
adc
add
pop
ret
addl
scas
cltd
mov
cmp
jns
add
dec
jns
push
movb
add
aas
pusha
add
fcoms
dec
add
jmp
add
pushf
add
add
push
movb
or
fdivs
lahf
int3
xor
add
loopne
scas
sub
popf
jbe
sarl
lea
push
aam
add
mov
inc
add
sti
mov
add
add
add
cmc
lret
mov
push
push
lods
dec
adc
add
sbb
out
push
dec
hlt
jne
adc
adc
push
and
cmpsl
add
into
mov
fwait
add
add
sarb
sub
mov
xor
test
insl
pop
mov
lea
adc
mov
lahf
rolb
ret
add
pop
xchg
xor
lock
call
in
jge
popa
add
mov
fdiv
aas
mov
sbb
fildll
add
stc
sbb
adc
add
and
dec
fldcw
add
inc
add
lcall
ljmp
cmp
inc
add
mov
data16
push
add
bnd
fwait
cltd
mov
cmp
and
xchg
mov
pop
std
or
add
add
add
inc
add
scas
repnz
add
push
push
add
adc
rolb
lock
add
add
sbb
add
xchg
bound
mov
loope
xchg
mov
dec
xchg
mov
mov
mov
addl
add
add
call
pop
sahf
leave
ja
mov
pop
dec
pop
xchg
xor
add
add
lods
je
add
fnstsw
xchg
notb
cmc
test
sbb
add
inc
add
push
lods
and
dec
mov
pushf
xchg
ret
add
add
or
add
ret
or
stc
cltd
cmp
mov
add
push
inc
add
call
push
cmp
test
shl
add
jb
ljmp
outsl
testl
movb
add
clc
fmul
dec
add
dec
fadd
add
les
adc
fldl
incl
add
lret
lret
push
mov
ds
add
add
cmpsb
add
jbe
add
mov
xchg
mov
pop
push
lret
daa
add
cmp
insl
and
push
push
stos
push
mov
add
in
xor
add
aaa
out
icebp
bound
out
in
mov
push
lds
mov
das
dec
push
es
add
add
addb
mov
movsl
add
and
and
in
dec
out
mov
je
add
mov
add
add
xor
js
cmc
hlt
pop
and
aam
call
add
fmuls
fstpl
jmp
pusha
add
dec
repz
xor
add
add
scas
pop
das
mov
aam
ret
add
jns
rorb
push
inc
add
mov
ss
out
pop
cmp
add
add
pop
mov
add
imul
mov
lcall
outsb
push
push
pushf
and
adc
dec
or
inc
add
jmp
add
add
into
sbb
out
scas
stc
mov
add
add
clc
or
cmp
add
add
mov
add
test
add
lahf
dec
add
push
jmp
sbb
std
cmovge
xchg
ja
fsubs
es
add
pop
add
add
ljmp
xchg
mov
add
mov
or
jmp
add
cmc
fdivs
cli
cmp
lods
jb
lret
lods
addl
aas
adc
pushf
push
xlat
test
pop
mov
xor
fldt
xor
pop
lret
sahf
adc
jb
add
pusha
add
cmp
push
adc
shrb
cld
in
cmpsb
add
movsb
add
adc
add
sarb
mov
movb
mov
fstl
cmp
cmc
pop
add
add
push
les
lret
iret
ds
jmp
jl
mov
jecxz
and
jge
add
adc
xor
add
add
icebp
lea
sub
adc
pusha
add
add
pop
mov
stc
xor
add
add
addb
emms
dec
cmp
in
lcall
fisttps
int3
mov
cld
jp
dec
cmc
out
mov
or
mov
repnz
cmp
add
aas
aam
add
cmp
add
jp
sub
mov
leave
lahf
mov
push
fs
lods
inc
add
push
out
sbb
imul
sub
add
add
and
ds
xor
add
cmp
fistps
in
jne
xchg
and
cli
mov
add
cmp
add
add
add
mov
aas
cmpsb
add
test
lock
cmpsb
add
and
repnz
add
xchg
push
or
sub
jmp
cmp
add
lock
adc
cltd
mov
test
push
dec
lds
das
loop
sbb
popa
add
leave
push
cmp
clc
test
mov
add
call
fwait
cli
jnp
xor
ffreep
add
lods
push
dec
call
mov
dec
xchg
add
decl
add
mov
pop
add
rolb
cmp
inc
add
cwtl
push
add
leave
adc
clc
dec
pushf
inc
add
pop
or
and
xchg
mov
and
not
xchg
cld
stos
pusha
add
mov
add
jae
cs
ljmp
mov
dec
nop
mov
push
add
rcrb
jg
add
add
arpl
scas
mov
mov
dec
inc
add
call
mov
add
decl
nop
lods
repz
addl
addr16
mov
push
lods
stc
data16
pop
sbb
mov
cmc
mov
test
add
test
les
sbb
add
add
cli
into
std
loopne
adc
cmp
jecxz
iret
push
addr16
jle
add
add
and
cld
pop
or
mov
sbb
push
xchg
outsb
pop
inc
add
jge
and
add
jmp
add
in
push
scas
sbb
adc
pop
pop
mov
cwtl
pop
lods
push
push
pop
scas
xor
add
arpl
je
add
add
xchg
push
add
loop
xchg
jnp
int
add
add
or
movsl
add
mov
push
scas
mov
push
jl
add
jg
add
iret
or
ret
out
pop
dec
mov
add
pushf
inc
add
sub
and
pushl
popa
add
mov
add
push
add
incl
ret
add
sbb
dec
mov
xchg
add
imul
cmp
popa
add
jmp
add
daa
add
push
mov
mov
pop
sbb
mov
add
inc
add
add
add
not
sbb
dec
int3
inc
add
add
add
dec
adc
push
jns
pusha
add
inc
add
lea
je
and
and
pop
pushf
mov
stc
loope
stos
push
mov
loopne
movb
test
pushf
out
mulb
mov
xor
inc
add
add
je
or
test
xchg
rolb
fdivs
pop
stos
pop
pop
add
incl
push
dec
dec
das
dec
add
add
repnz
dec
stos
lahf
adc
das
cwtl
cmp
mov
or
sbb
add
dec
jecxz
push
add
out
mov
call
add
add
add
add
xchg
and
repnz
pop
xlat
enter
pop
adc
fidivrl
pusha
add
add
arpl
jle
and
fnstcw
popf
fwait
cmp
jecxz
sarb
jmp
out
add
call
inc
add
add
cmp
add
mov
push
mov
mov
add
pushf
addl
js
add
pusha
add
push
and
dec
dec
roll
mov
add
mov
aaa
adc
adc
iret
sbb
mov
pop
add
mov
cwtl
and
xor
std
inc
add
add
add
jg
add
xchg
mov
roll
fldl
