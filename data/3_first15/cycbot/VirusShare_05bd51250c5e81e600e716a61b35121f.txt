and
loopne
mov
mov
loopne
loope
loopne
cmpsl
cmpsb
loopne
cmpsl
cmpsb
loopne
frstor
loopne
fsubs
loopne
shlb
loopne
push
mov
loopne
js
loopne
jnp
loopne
xor
loopne
sub
mov
mov
loopne
pop
test
mov
cmpsl
loopne
into
movsl
loopne
dec
test
loopne
cmpsl
test
mov
cmpsb
loopne
mov
loopne
fwait
movsl
loopne
mov
loopne
jle
loopne
or
loopne
cmp
loopne
adc
loopne
push
cmpsb
loopne
mov
mov
cmpsl
loopne
or
loopne
sub
loopne
xchg
mov
loopne
add
mov
loopne
push
loopne
mov
loopne
mov
loopne
pop
mov
loopne
xchg
mov
loopne
sub
loopne
cmpsb
movsb
loopne
mov
movsb
loopne
xor
loopne
scas
cmpsl
loopne
dec
mov
loopne
cmpsl
loopne
cmp
mov
cmpsb
loopne
cmp
loopne
pop
mov
loopne
shrl
loopne
inc
movsb
loopne
sbb
loopne
movsl
movsl
loopne
cmpsl
loopne
cltd
mov
loopne
hlt
cmpsl
loopne
out
loopne
mov
test
mov
cmpsb
loopne
pop
mov
loopne
test
loopne
or
loopne
pop
mov
loopne
jg
loopne
mov
mov
loopne
fsubl
loopne
or
loopne
addr16
sub
movsb
loopne
iret
cmpsl
loopne
sbb
loopne
ret
movsb
loopne
in
loopne
popf
movsb
loopne
leave
cmpsb
loopne
cmp
loopne
mov
movsl
loopne
dec
test
loopne
push
test
loopne
or
movsb
loopne
adc
loopne
mull
mov
cmpsl
loopne
jns
loopne
cld
test
mov
test
mov
test
mov
mov
loopne
push
loopne
movsl
loopne
arpl
loopne
in
loopne
cmpsb
loopne
out
loopne
int3
cmpsb
loopne
mov
loopne
and
mov
loopne
into
mov
loopne
lret
mov
mov
loopne
inc
cmpsl
loopne
xchg
mov
loopne
pop
mov
loopne
lcall
mov
test
mov
test
mov
test
mov
cmpsb
loopne
test
mov
cmpsb
loopne
mov
mov
loopne
out
loopne
mov
cmpsl
loopne
mov
loopne
cld
movsl
loopne
cld
cmpsl
loopne
push
mov
loopne
shrb
mov
test
mov
mov
loopne
dec
mov
loopne
inc
mov
loopne
pop
cmpsb
loopne
insl
movsb
loopne
outsl
mov
loopne
int
loopne
stc
movsb
loopne
jp
loopne
fisubrs
loopne
movsl
loopne
mov
mov
loopne
mov
mov
loopne
repnz
loopne
xchg
test
mov
test
mov
movsb
loopne
loope
loopne
cmpsb
cmpsb
loopne
mov
test
loopne
shll
mov
cmpsl
loopne
sub
movsb
loopne
jb
loopne
dec
test
loopne
into
mov
loopne
dec
movsb
loopne
sub
loopne
lea
loopne
out
loopne
stc
mov
loopne
loopne
loopne
add
loopne
jns
loopne
jae
loopne
cmp
loopne
sbb
loopne
loope
loopne
and
loopne
enter
xchg
loopne
xchg
mov
loopne
mov
mov
loopne
mov
loopne
adc
movsb
loopne
or
loopne
in
loopne
js
loopne
mulb
loopne
mov
loopne
mov
loopne
shrb
loopne
inc
movsb
loopne
push
test
mov
cmpsb
loopne
cmp
loopne
int3
mov
loopne
movsl
movsl
loopne
xchg
mov
loopne
mulb
loopne
or
mov
loopne
into
cmpsl
loopne
cmpsb
loopne
call
test
loopne
mov
test
mov
cmpsb
loopne
pop
mov
loopne
pop
movsb
loopne
call
cmpsb
loopne
test
loopne
mov
test
mov
mov
loopne
stc
movsl
loopne
sbb
mov
mov
loopne
aam
loopne
pop
cmpsl
loopne
call
test
mov
mov
loopne
andl
fisubl
mov
cmpsb
loopne
jecxz
loopne
mov
mov
loopne
lea
loopne
fsubrs
loopne
dec
test
loopne
addr16
cmc
mov
loopne
and
loopne
lds
loopne
cld
cmpsl
loopne
iret
cmpsl
loopne
xchg
movsb
loopne
mov
loopne
jl
loopne
lret
mov
loopne
mov
loopne
push
test
loopne
inc
cmpsb
loopne
pop
movsb
loopne
out
loopne
jns
loopne
xor
cmpsl
loopne
loopne
loopne
sub
loopne
adc
loopne
and
loopne
pop
movsl
loopne
mov
cmpsb
loopne
test
loopne
mov
test
mov
mov
loopne
or
mov
loopne
push
test
loopne
cmpsb
loopne
shll
loopne
jb
loopne
mov
test
loopne
fisubs
loopne
cmp
loopne
add
loopne
add
loopne
loopne
loopne
fildll
loopne
mov
movsl
loopne
call
mov
loopne
sbb
loopne
pop
test
mov
cmpsb
loopne
xchg
loopne
sub
loopne
xchg
mov
loopne
xchg
mov
loopne
mov
loopne
xor
loopne
shrl
loopne
lods
cmpsb
loopne
push
loopne
xchg
mov
loopne
xchg
mov
loopne
sti
cmpsl
loopne
inc
movsb
loopne
adc
mov
mov
loopne
inc
movsb
loopne
andl
mov
movsl
loopne
shlb
mov
mov
loopne
inc
movsb
loopne
scas
cmpsb
loopne
out
loopne
dec
mov
loopne
xlat
mov
loopne
xor
test
loopne
inc
movsl
loopne
or
loopne
push
mov
loopne
loopne
loopne
stc
cmpsl
loopne
jg
loopne
lods
cmpsl
loopne
dec
movsl
loopne
mov
cmpsb
loopne
pop
test
mov
test
mov
cmpsl
loopne
jmp
cmpsl
loopne
enter
lret
mov
mov
loopne
push
mov
loopne
movsb
loopne
pop
cmpsb
loopne
sub
loopne
in
mov
loopne
mov
loopne
movsw
loopne
mov
loopne
mov
loopne
inc
test
mov
mov
loopne
ljmp
mov
movsl
loopne
std
movsb
loopne
je
loopne
aad
loopne
xchg
movsb
loopne
and
loopne
cmc
mov
loopne
or
loopne
xor
loopne
dec
movsl
loopne
scas
movsl
loopne
andb
mov
cmpsl
loopne
xor
loopne
sbb
loopne
xor
loopne
iret
movsb
loopne
lret
mov
test
loopne
jp
loopne
or
cmpsl
loopne
shlb
loopne
push
mov
loopne
je
loopne
imul
loopne
mov
movsb
loopne
shrb
loopne
loope
loopne
lock
loopne
push
loopne
sub
loopne
add
loopne
insl
movsb
loopne
aam
loopne
test
movsb
loopne
mov
movsl
loopne
mov
mov
mov
loopne
inc
cmpsl
loopne
imul
mov
cmpsl
loopne
cmpsl
loopne
xchg
movsb
loopne
jp
loopne
xchg
loopne
fisubs
loopne
or
loopne
stc
test
mov
movsl
loopne
mov
movsb
loopne
adc
loopne
imul
loopne
call
mov
loopne
test
mov
cmpsl
loopne
jmp
loopne
pop
cmpsl
loopne
xchg
loopne
pop
mov
loopne
jnp
loopne
mov
mov
loopne
push
mov
loopne
xchg
test
mov
mov
loopne
daa
cmpsl
loopne
sbb
loopne
insb
movsb
loopne
in
mov
loopne
xchg
loopne
push
mov
loopne
lods
cmpsb
loopne
mov
loopne
test
loopne
insl
cmpsb
loopne
add
loopne
andl
mov
movsb
loopne
jle
loopne
out
loopne
xor
loopne
cmpsl
loopne
aaa
cmpsb
loopne
fs
mov
mov
loopne
cld
mov
loopne
pop
mov
loopne
sub
cmpsb
loopne
xor
loopne
scas
movsl
loopne
mov
mov
loopne
push
movsb
loopne
cmp
movsl
loopne
sub
loopne
lret
mov
test
mov
test
loopne
imull
loopne
mov
movsb
loopne
stc
cmpsb
loopne
fsubs
loopne
add
loopne
cmp
mov
mov
loopne
dec
mov
loopne
out
loopne
outsb
mov
loopne
mov
loopne
loop
loopne
js
loopne
ss
loopne
xchg
movsl
loopne
movsb
cmpsl
loopne
cmp
loopne
sbb
loopne
cmp
cmpsl
loopne
mov
loopne
aaa
mov
loopne
adc
loopne
mov
cmpsl
loopne
xchg
mov
loopne
iret
mov
loopne
les
loopne
sub
loopne
jno
loopne
loopne
loopne
jle
loopne
push
cmpsl
loopne
xchg
mov
loopne
sub
loopne
adc
loopne
pop
mov
loopne
fsubs
mov
mov
loopne
cmpsl
loopne
sbb
mov
cmpsl
loopne
arpl
mov
cmpsb
loopne
xlat
movsl
loopne
push
test
loopne
jno
loopne
cmc
cmpsl
loopne
int3
movsb
loopne
push
mov
loopne
mov
movsl
loopne
jmp
loopne
aaa
test
mov
cmpsl
loopne
ja
loopne
cmp
mov
test
loopne
bound
loopne
std
mov
loopne
xchg
mov
loopne
jecxz
loopne
adc
loopne
inc
movsl
loopne
mov
movsb
loopne
or
loopne
mov
cmpsb
loopne
push
test
loopne
mov
loopne
pusha
cmpsl
loopne
movsl
movsl
loopne
cmpsl
loopne
fisubs
loopne
cmp
test
mov
cmpsl
loopne
jo
loopne
mov
loopne
add
loopne
stos
cmpsl
loopne
in
loopne
or
loopne
int3
mov
loopne
stos
movsb
loopne
pop
movsb
loopne
lea
loopne
andb
mov
mov
loopne
inc
test
mov
mov
loopne
popa
mov
loopne
sbb
loopne
pusha
movsb
loopne
cmp
loopne
pop
cmpsb
loopne
adc
loopne
out
loopne
movsl
loopne
out
movsb
loopne
fsubs
mov
test
loopne
data16
loopne
inc
test
loopne
jns
loopne
dec
movsb
loopne
mov
loopne
jmp
loopne
jae
loopne
repnz
loopne
ret
mov
mov
loopne
in
cmpsl
loopne
jo
loopne
dec
movsb
loopne
lods
cmpsl
loopne
and
loopne
loopne
cli
cmpsl
loopne
mov
loopne
leave
movsb
loopne
mov
loopne
mov
mov
loopne
hlt
mov
loopne
loop
loopne
les
loopne
jo
loopne
sbb
mov
loopne
cld
mov
loopne
xchg
cmpsb
loopne
sub
loopne
cwtl
movsl
loopne
mov
loopne
pop
mov
loopne
xor
loopne
arpl
loopne
sub
loopne
jb
loopne
lcall
mov
mov
loopne
sbb
loopne
and
loopne
ds
loopne
jne
loopne
test
loopne
daa
mov
loopne
cmpsb
mov
loopne
test
loopne
mull
loopne
sbb
loopne
add
loopne
cmp
loopne
imul
mov
mov
loopne
cmp
loopne
test
cmpsb
loopne
xor
loopne
mov
movsl
loopne
lods
movsb
loopne
mov
loopne
sub
loopne
xor
loopne
mov
loopne
and
mov
cmpsb
loopne
loop
loopne
loopne
int
loopne
je
loopne
enter
and
loopne
js
loopne
stc
cmpsl
loopne
in
cmpsl
loopne
fisubs
loopne
fldcw
loopne
mov
mov
loopne
sti
mov
loopne
addr16
mov
cmpsb
loopne
xchg
cmpsl
loopne
pop
movsb
loopne
jle
loopne
dec
movsb
loopne
fsubs
loopne
mov
loopne
sub
loopne
mov
loopne
or
movsb
loopne
add
test
loopne
cmp
loopne
pop
cmpsb
loopne
and
loopne
jp
loopne
jmp
loopne
lret
movsb
loopne
inc
cmpsl
loopne
ja
loopne
mov
loopne
insb
test
mov
cmpsl
loopne
mov
loopne
pushf
cmpsb
loopne
ret
mov
mov
loopne
sub
loopne
fwait
mov
loopne
jne
loopne
sti
cmpsb
loopne
xor
loopne
mov
loopne
mov
loopne
loope
loopne
and
loopne
pop
movsl
loopne
data16
loopne
sub
loopne
mov
mov
mov
loopne
add
loopne
or
loopne
icebp
movsb
loopne
cld
cmpsl
loopne
adc
loopne
push
movsl
loopne
pop
movsl
loopne
movsb
loopne
and
loopne
xchg
cmpsl
loopne
test
cmpsb
loopne
aad
loopne
add
mov
loopne
jmp
loopne
cmpsl
test
mov
test
mov
cmpsl
loopne
shlb
loopne
push
cmpsl
loopne
out
mov
loopne
sbb
loopne
in
loopne
dec
test
mov
cmpsl
loopne
lods
movsb
loopne
or
loopne
ja
loopne
push
mov
loopne
pop
movsl
loopne
cs
loopne
mov
movsl
loopne
iret
test
mov
movsl
loopne
andl
loopne
cltd
cmpsb
loopne
insl
test
mov
cmpsl
loopne
inc
movsb
loopne
aam
loopne
push
test
mov
cmpsl
loopne
and
loopne
mov
loopne
ret
mov
movsl
loopne
mov
cmpsb
loopne
sub
test
mov
movsl
loopne
scas
mov
loopne
push
test
mov
cmpsl
loopne
icebp
mov
loopne
lods
cmpsb
loopne
aas
mov
loopne
fldt
loopne
xor
cmpsb
loopne
test
mov
loopne
outsb
mov
loopne
and
loopne
add
loopne
int
loopne
shlb
loopne
sbb
loopne
je
loopne
cmpsb
loopne
push
mov
loopne
dec
mov
loopne
push
mov
loopne
adc
mov
cmpsb
loopne
int3
movsb
loopne
jp
loopne
loop
loopne
ret
cmpsb
loopne
andb
mov
cmpsl
loopne
into
cmpsb
loopne
in
loopne
mov
mov
loopne
ja
loopne
loopne
pusha
cmpsb
loopne
xchg
loopne
or
mov
loopne
inc
mov
loopne
fsubs
mov
cmpsb
loopne
mov
mov
loopne
repnz
loopne
pop
cmpsl
loopne
arpl
mov
cmpsb
loopne
mov
loopne
adc
loopne
push
mov
loopne
or
mov
loopne
sti
movsb
loopne
mov
test
mov
mov
loopne
das
mov
loopne
sbb
loopne
rep
loopne
push
movsb
loopne
push
mov
loopne
mov
mov
loopne
lret
mov
test
mov
movsl
loopne
xchg
mov
mov
loopne
in
cmpsb
loopne
inc
movsb
loopne
and
movsl
loopne
cmpsb
mov
loopne
sbb
loopne
add
loopne
fisubl
loopne
icebp
mov
loopne
xor
loopne
pop
mov
loopne
andb
mov
cmpsb
loopne
or
loopne
inc
mov
loopne
push
test
loopne
xchg
cmpsb
loopne
sub
loopne
fsubl
loopne
push
movsb
loopne
xor
test
mov
movsl
loopne
popf
cmpsl
loopne
out
mov
loopne
out
loopne
jb
loopne
js
loopne
cwtl
cmpsl
loopne
adc
mov
loopne
mov
loopne
jmp
loopne
xor
loopne
or
mov
mov
loopne
sbb
loopne
shll
loopne
mov
test
loopne
xchg
loopne
out
loopne
adc
loopne
xchg
mov
loopne
andb
in
mov
loopne
add
loopne
ljmp
mov
movsb
loopne
nop
mov
loopne
mull
loopne
lea
loopne
ret
mov
loopne
loope
loopne
mov
loopne
cmpsl
loopne
loopne
inc
movsb
loopne
das
movsb
loopne
push
cmpsl
loopne
lods
mov
loopne
pop
cmpsb
loopne
mov
loopne
cmp
loopne
scas
mov
loopne
movsl
loopne
mov
cmpsl
loopne
shll
loopne
push
test
mov
mov
loopne
push
test
mov
mov
loopne
mov
mov
loopne
loopne
loopne
scas
mov
loopne
push
mov
loopne
xor
loopne
and
mov
cmpsb
loopne
sbb
loopne
jno
loopne
out
cmpsb
loopne
js
loopne
ret
movsl
loopne
pop
cmpsb
loopne
movsb
test
mov
test
mov
movsl
loopne
les
loopne
loopne
loopne
mov
loopne
ja
loopne
push
movsl
loopne
aaa
mov
loopne
mov
loopne
mov
loopne
bound
loopne
bound
loopne
lods
mov
loopne
xchg
mov
loopne
mov
loopne
adc
loopne
mov
loopne
ds
mov
mov
loopne
push
test
loopne
addr16
loopne
loopne
pop
mov
loopne
call
test
mov
mov
loopne
ss
mov
movsb
loopne
in
loopne
cmpsl
movsl
loopne
push
loopne
stos
movsl
loopne
ss
mov
test
mov
cmpsb
loopne
imul
mov
movsl
loopne
insl
mov
loopne
push
movsl
loopne
popf
movsl
loopne
xor
loopne
ja
loopne
insl
test
mov
movsb
loopne
cmpsb
movsb
loopne
mov
mov
loopne
movsl
loopne
dec
cmpsb
loopne
fwait
cmpsl
loopne
andl
mov
movsb
loopne
shrl
loopne
mov
mov
loopne
cmp
mov
loopne
mov
loopne
add
loopne
and
mov
movsl
loopne
mov
loopne
fbld
loopne
xor
mov
loopne
mov
loopne
adc
loopne
imul
loopne
and
loopne
leave
movsb
loopne
cmp
mov
cmpsl
loopne
xchg
cmpsl
loopne
andb
mov
cmpsb
loopne
cmc
mov
loopne
push
test
mov
mov
loopne
sahf
mov
loopne
fbld
loopne
xor
loopne
adc
loopne
cmpsl
loopne
into
mov
loopne
mov
loopne
jne
loopne
test
cmpsb
loopne
sub
loopne
iret
mov
loopne
ret
mov
cmpsl
loopne
jns
loopne
cmp
loopne
and
mov
movsl
loopne
outsb
mov
loopne
andl
mov
test
mov
movsb
loopne
and
test
mov
movsl
loopne
lea
loopne
push
test
mov
mov
loopne
xor
loopne
jns
loopne
xor
loopne
jg
loopne
movsl
movsb
loopne
adc
movsb
loopne
data16
loopne
cli
cmpsl
loopne
aaa
mov
loopne
int3
movsb
loopne
loope
loopne
jb
loopne
shll
mov
cmpsb
loopne
aam
loopne
jns
loopne
add
loopne
jecxz
loopne
icebp
mov
loopne
aad
loopne
popf
movsl
loopne
jl
loopne
scas
movsb
loopne
push
movsb
loopne
stos
test
mov
movsb
loopne
shll
loopne
fldenv
loopne
jbe
loopne
ret
mov
cmpsb
loopne
je
loopne
jno
loopne
int3
cmpsb
loopne
mov
test
loopne
int
loopne
lcall
mov
mov
loopne
jmp
loopne
jbe
loopne
enter
bound
mov
movsl
loopne
mov
loopne
daa
cmpsl
loopne
push
movsb
loopne
outsl
mov
loopne
push
movsb
loopne
mov
loopne
cwtl
mov
loopne
dec
mov
loopne
popa
movsl
loopne
xchg
cmpsb
loopne
mov
loopne
add
loopne
fsubrs
loopne
mov
mov
loopne
dec
movsb
loopne
lret
cmpsb
loopne
cmpsl
movsb
loopne
pop
test
mov
cmpsl
loopne
sbb
loopne
shll
mov
movsb
loopne
iret
mov
loopne
mov
loopne
push
movsb
loopne
inc
mov
loopne
inc
cmpsl
loopne
jns
loopne
sti
mov
loopne
ret
mov
mov
loopne
cmpsl
mov
loopne
repnz
loopne
mov
loopne
mov
loopne
pop
cmpsl
loopne
add
loopne
sti
movsl
loopne
cwtl
movsb
loopne
les
nop
inc
add
mov
popa
add
nop
inc
add
pusha
add
xor
add
clc
xor
push
clc
xor
clc
loopne
sbb
or
clc
mov
int3
xor
add
inc
add
jecxz
add
add
sbb
jg
add
dec
test
fnstenv
repnz
mov
mov
je
sub
gs
shl
clc
in
lret
frstor
add
repnz
mov
sbb
clc
pushf
in
mov
fstpl
imul
call
adc
add
add
clc
ja
pop
clc
push
and
add
inc
add
mov
sbb
loopne
jecxz
sbb
ss
clc
fbstp
add
jmp
clc
cmp
mov
clc
add
add
mov
clc
fstl
clc
mov
mov
add
pop
clc
shl
in
sbb
clc
mov
xor
add
add
lret
clc
jb
add
clc
sbb
xor
clc
movsb
clc
or
adc
add
add
bound
add
sti
sub
clc
and
xchg
xchg
pop
leave
fidivrl
aam
movsb
clc
sub
add
xor
add
imul
je
or
add
add
add
xchg
ds
icebp
push
mov
clc
mov
adc
add
xor
shlb
inc
add
add
add
cmp
clc
shr
adc
add
es
imul
and
add
adc
add
jbe
mov
in
pop
jecxz
xbegin
add
xor
add
add
jl
xbegin
aam
add
test
push
cmp
lea
add
daa
clc
mov
xor
add
clc
inc
add
mov
test
test
mov
mov
add
stos
xor
aaa
xlat
mov
gs
or
clc
jecxz
cld
divl
mov
hlt
out
imul
in
iret
mov
lret
out
repz
jle
mov
jae
add
push
add
data16
cmp
add
nop
mov
ds
add
lahf
ret
clc
fs
fdivrl
jne
clc
aad
jns
xlat
cltd
iret
mov
adc
add
clc
jns
add
xor
add
jmp
clc
mov
enter
ds
clc
loopne
or
clc
mov
dec
sub
xor
fdivl
add
clc
test
push
add
stc
push
jb
add
clc
repnz
clc
xabort
jmp
fs
push
sbb
push
mov
mov
clc
cmp
inc
clc
jae
add
test
nop
jnp
add
scas
pop
jl
lahf
xabort
cmp
add
out
pop
cmp
lcall
out
push
add
pop
and
add
clc
jb
add
xchg
faddl
clc
popf
mov
add
clc
sub
add
add
push
add
rcll
pusha
add
clc
or
test
bound
add
add
add
adc
out
scas
clc
jbe
clc
or
clc
jmp
cmp
ja
sbb
add
push
add
clc
movsb
clc
xchg
pop
clc
iret
push
add
xchg
push
cld
push
add
jmp
lods
lods
test
repnz
add
jmp
add
test
loopne
adc
add
add
push
add
mov
add
and
push
aad
adc
add
clc
icebp
jbe
sti
loope
sub
dec
sbb
mov
add
int3
std
data16
cmp
sbb
loopne
cwtl
pop
mov
ret
add
jge
int3
leave
cs
pop
clc
bound
add
mov
xchg
ljmp
adc
add
clc
sbb
xchg
cmc
adc
sbb
clc
inc
add
or
cmp
mov
add
clc
lock
stc
ret
add
stos
movsl
clc
xchg
in
icebp
insb
cmp
clc
cwtl
pop
lea
xchg
mov
push
pop
add
add
add
jge
inc
add
cmp
test
jo
add
outsb
add
add
sahf
ja
clc
cs
jbe
clc
adc
add
fs
inc
clc
lahf
test
sub
cmp
clc
incl
inc
clc
lret
lods
fistpl
push
fcoml
add
cmp
mov
dec
pop
mov
jno
add
mov
fwait
stos
shl
clc
mov
mov
cmp
dec
or
add
inc
clc
in
adc
add
add
cmc
js
fscale
cld
aaa
sahf
pop
xchg
loopne
outsl
lahf
push
clc
adc
add
adc
add
nop
dec
pop
mov
cmp
add
jae
add
clc
sti
dec
sti
sub
add
add
pop
jp
and
lods
and
add
add
mov
add
loope
xchg
xlat
incb
lods
cltd
je
clc
aas
sub
clc
gs
cmp
lcall
inc
clc
sti
daa
clc
push
add
into
cld
loopne
mov
mov
cmp
push
add
pop
dec
inc
add
sti
mov
add
or
push
add
mov
mov
xchg
jmp
clc
gs
ret
add
sahf
ds
clc
and
add
jecxz
and
add
fsincos
movb
push
and
in
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
inc
add
nop
adc
sbb
add
push
ss
ret
mov
push
add
jl
xor
add
call
loopne
mov
aas
xchg
cli
mov
mov
notb
add
add
clc
inc
add
cmpsl
clc
xchg
push
ficoms
add
mov
xchg
mov
add
je
xor
clc
js
add
sub
add
push
add
ds
clc
push
and
outsb
add
add
xchg
sahf
push
push
add
getsec
push
dec
cld
jmp
add
jge
adc
iret
adc
add
sbb
cld
jmp
imul
sarl
clc
test
clc
pop
cmp
or
xor
dec
data16
scas
outsl
addr16
pop
ja
adc
clc
dec
dec
lret
inc
clc
sub
test
jle
adc
add
shr
sub
add
jl
add
sar
aaa
mov
dec
sar
xor
add
add
sub
mov
dec
pop
xor
jbe
cmp
add
mov
mov
clc
or
add
add
push
mov
cld
jmp
sub
xchg
bound
add
xor
add
insl
lods
xor
cld
jmp
pop
sbbb
clc
cmp
mov
clc
loope
cmp
es
push
ret
clc
ja
or
lret
stos
inc
add
jb
add
push
push
cld
jmp
movsb
lods
loop
fwait
push
fsubs
push
inc
cld
jmp
sub
inc
push
add
clc
je
lea
add
pop
mov
clc
sub
repz
clc
cld
lods
pop
sahf
jnp
clc
test
clc
mov
adc
add
outsb
mov
ss
ret
jge
xabort
xor
add
jp
xor
mov
add
and
add
push
imul
mov
fisubrl
add
xchg
sbb
inc
aad
jne
clc
cli
stos
jbe
aas
adc
add
fsubrl
iret
inc
add
mov
add
out
cmp
clc
int
dec
xchg
xchg
xor
add
push
add
insb
mov
pushf
mov
mov
xchg
xchg
pop
cmc
sbb
pop
sub
clc
test
repnz
ja
sar
clc
xor
clc
pop
clc
adc
add
adc
add
add
adc
add
add
lahf
ljmp
cmp
ss
ret
movsb
push
jg
fistpl
in
scas
add
ret
clc
adc
add
stos
int
inc
add
scas
movsb
clc
adc
add
cmp
clc
adc
es
pop
clc
das
mov
ljmp
add
aas
pop
ds
cmp
clc
adc
add
aam
add
in
cmp
sbb
aas
jne
clc
nop
mov
scas
and
sar
inc
add
mov
push
pop
clc
adc
add
cmp
pop
sbb
inc
clc
fidivs
inc
clc
lahf
mov
clc
push
xchg
dec
imul
xchg
stos
mov
lea
inc
clc
mov
clc
ret
clc
popf
cmc
xchg
mov
add
xchg
cs
clc
or
add
dec
je
clc
pop
leave
pop
outsb
cmc
lahf
in
jbe
mov
cld
jmp
add
gs
insb
ljmp
cld
jmp
xchg
and
add
test
fsubl
add
clc
and
mov
add
clc
cwtl
nop
scas
sbb
cld
dec
dec
pop
addr16
out
xchg
xor
fisubrs
dec
out
stos
adc
add
mov
add
add
add
call
xabort
inc
add
stos
inc
add
leave
in
aas
inc
add
inc
add
ss
es
dec
lods
in
popa
add
fcmovnb
clc
push
push
cld
jmp
cmpsb
cmpsb
xor
dec
int3
mov
clc
fs
stos
out
cmp
mov
add
das
add
or
dec
push
fildl
leave
in
sub
in
ss
add
cli
scas
jg
and
mov
jg
xor
mov
add
xor
add
rorb
clc
cmp
hlt
adc
add
add
out
inc
cld
jmp
add
jp
and
clc
movsb
clc
mov
hlt
jecxz,pn
in
ljmp
cwtl
mov
jp
ja
clc
movsb
clc
add
add
lods
popa
add
mov
sub
add
jbe
push
add
cld
jmp
mov
clc
aam
clc
cmp
bound
add
sbb
add
dec
clc
stc
add
add
adc
clc
ljmp
jg
add
xchg
sar
add
add
scas
js
repz
push
clc
push
pusha
add
mov
repz
mov
cld
jmp
fildll
clc
cs
push
in
dec
adc
add
xlat
jae
add
xbegin
add
and
cmpsb
clc
ljmp
add
lret
clc
fistl
mov
add
test
call
add
clc
stos
int
mov
add
dec
nop
jae
add
jge
clc
push
add
cld
jmp
mov
pusha
add
xor
or
das
sbb
clc
sbb
enter
ss
ret
sub
lea
add
add
jmp
xchg
and
add
add
add
in
loope
in
jbe
jbe
daa
clc
jg
or
and
add
add
add
dec
addr16
sti
stos
test
clc
inc
clc
jns
mov
clc
repz
test
dec
and
add
mov
popf
aas
enter
jb
add
clc
mov
xor
add
add
cmc
aam
add
daa
clc
inc
clc
push
clc
mov
js
sar
clc
mov
popa
add
sarl
mov
cld
jmp
data16
dec
rorb
add
cltd
inc
add
out
add
add
clc
loope
lret
xor
add
mov
mov
add
pushf
dec
xor
add
push
add
loop
popa
add
mov
add
pop
cmp
xor
add
add
xchg
xchg
mov
sbb
pushf
add
add
pop
test
jne
std
into
pop
mov
add
add
clc
adc
dec
cli
xchg
int
imul
clc
cmp
js
xor
add
clc
add
add
imulb
add
ret
clc
cmpsl
clc
iret
lea
jp
xor
add
mov
filds
stos
jnp
clc
mov
add
stos
mov
ss
ret
das
jno
adc
add
add
jg
adc
xchg
add
add
clc
cmp
push
cmpsb
inc
add
popa
xor
imul
xchg
mov
clc
mov
jmp
fwait
das
dec
mov
fstpt
je
jl
push
add
adc
add
xchg
clc
xchg
testb
fidivl
add
test
pusha
add
daa
clc
and
add
shl
clc
je
cmp
and
mov
cmpsb
clc
inc
add
icebp
pop
test
and
add
add
add
jne
jmp
mov
clc
xchg
pop
push
pop
push
decl
add
xchg
outsl
popa
je
xor
cld
jmp
and
cmpsb
dec
mov
pop
push
popf
pop
cmp
addr16
xor
add
fs
in
cmpsb
clc
jnp
repz
out
mulb
clc
outsl
cmc
loope
and
add
sar
pop
lea
sub
jbe
sub
dec
xlat
out
xor
add
and
push
ret
ja
pop
jnp
mov
clc
in
inc
add
cmp
arpl
add
ljmp
add
add
imul
add
xchg
outsb
stos
or
add
mov
clc
adc
clc
mov
sub
negb
or
add
scas
sub
clc
dec
mov
cli
imul
lret
hlt
and
add
add
push
add
sbb
add
cwtl
dec
out
cld
dec
mov
add
movsl
clc
lods
mov
scas
sbb
jmp
je
dec
adc
cmp
gs
inc
add
mov
mov
add
sub
outsl
call
movsb
ss
ret
movsb
sub
lods
or
pop
cld
jmp
lods
push
pop
add
movsl
clc
pop
clc
repz
xbegin
mov
mov
clc
fs
or
mov
add
jmp
add
mov
cmp
add
jnp
push
cld
jmp
sub
imul
sbb
jne
jg
test
movsl
clc
into
js
popf
pop
cmp
cmpsb
clc
test
xor
add
clc
push
cld
mov
and
add
dec
and
add
cmp
add
and
cld
jmp
sahf
push
or
add
out
pop
sbb
fbstp
add
push
jnp
dec
sar
cmp
inc
add
dec
jb
add
add
inc
add
out
xlat
pop
clc
movsl
clc
cmp
mov
and
and
sub
clc
mov
fldl
add
sub
adc
add
add
xor
add
sbb
jmp
scas
sahf
aaa
and
adc
add
inc
add
xor
add
fs
jle
adc
add
fists
add
mov
add
out
jb
add
add
mov
mov
add
cld
jmp
mov
and
add
xor
add
movsb
clc
nop
cmp
clc
or
push
adc
add
xchg
pop
testb
xor
add
xbegin
clc
js
push
aam
test
mov
and
jmp
sbb
sub
stc
jp
push
xchg
leave
sbb
xchg
mov
xchg
aas
or
clc
aaa
dec
pop
mov
and
add
add
or
add
clc
bound
add
aas
jp
ss
xchg
sar
inc
add
jp
clc
xchg
imul
clc
cmp
clc
mov
jmp
cmp
clc
test
xor
add
movzwl
cld
jmp
sub
clc
cmpsb
clc
sbb
cld
jmp
xchg
cmp
mov
add
add
mov
add
out
push
xchg
aam
out
mov
rorl
dec
dec
fs
inc
clc
test
popf
and
add
add
pop
add
cwtl
mov
add
xchg
sar
add
lar
add
xor
add
cmpsl
clc
aas
shll
repnz
push
add
iret
aas
dec
inc
add
cmp
jle
add
adc
imul
clc
popa
add
add
or
pop
cld
jmp
cwtl
dec
sub
adc
xchg
cmp
xchg
in
addr16
push
pop
sbb
lock
add
clc
add
add
jg
out
xchg
test
out
in
dec
sbb
loopne
cmp
js
mov
or
jb
add
cmpsl
clc
iret
in
ds
clc
pop
push
cwtl
cmp
sar
mov
cld
jmp
sub
clc
pop
dec
sahf
mov
add
addr16
arpl
add
pop
cmp
sbb
jb
add
leave
jb
add
clc
adc
icebp
cmovns
push
js
jmp
sub
xchg
inc
clc
jb
add
mov
icebp
sbb
push
add
int3
lret
add
clc
sub
fadds
clc
repnz
clc
pop
xor
add
insl
mov
add
xchg
aam
clc
dec
jle
out
inc
add
std
out
mov
popa
add
jns
clc
movsl
clc
xchg
lcall
incb
add
imul
xor
cld
jmp
lea
add
push
clc
inc
clc
leave
mov
cmp
test
add
cli
add
clc
popf
mov
cld
jmp
jp
or
add
je
push
push
pop
fsubrs
xlat
adc
add
xor
mov
add
out
lods
imul
inc
clc
pop
out
push
xlat
xor
add
cltd
jne
jne
movsl
clc
mov
clc
jmp
clc
sub
adc
jne
cld
jmp
mov
sbb
cld
jmp
fwait
cmp
inc
add
xchg
outsl
iret
in
fs
push
xor
pop
dec
sbb
nop
ljmp
push
addr16
cmp
loopne
push
aas
rorl
inc
add
adc
add
xbegin
clc
fdivrl
xbegin
iret
xabort
and
add
dec
clc
cli
jne
jmp
adc
xchg
inc
add
xchg
sbb
mov
xchg
jo
add
mov
clc
stos
cmpsl
clc
es
pop
sub
mov
sbb
add
jg
and
add
xchg
xbegin
add
nop
sub
dec
dec
pop
xchg
fnstenv
cmp
int
xbegin
fwait
or
push
clc
lret
sbb
mov
add
mov
lock
test
mov
pop
mov
add
add
jg
addr16
fisubl
add
add
dec
jae
add
clc
sar
mov
and
in
cs
pusha
add
cwtl
gs
loop
cs
and
imul
lods
sub
add
mov
clc
mov
fcmovne
inc
clc
add
add
add
decl
test
jmp
add
and
add
clc
cmp
or
clc
leave
int
jecxz
ret
xor
add
and
and
jo
add
fisubrs
clc
test
and
add
imul
add
jbe
aad
test
jp
clc
cmp
add
inc
clc
cld
or
daa
clc
out
xchg
popa
add
icebp
dec
out
jmp
je
cld
jmp
clc
repz
sbb
out
bound
add
add
dec
push
cltd
cmp
mov
cld
jmp
sbb
push
mov
stc
popf
push
icebp
popa
jmp
in
popf
icebp
cmpsl
clc
loopne
popl
add
add
sbb
add
int3
mov
daa
jp
add
insb
push
sub
adc
jg
pop
xchg
mov
insl
out
int3
push
mov
add
enter
fadds
add
dec
lret
ja
push
imul
and
xor
add
xor
add
enter
or
add
dec
add
in
jge
and
add
jno
add
psadbw
cmp
push
insb
movsb
clc
sahf
pop
loope
dec
pop
clc
cmp
mov
cld
jmp
es
xchg
lock
clc
int3
mov
sbb
cltd
insb
addr16
es
and
add
clc
inc
add
into
mov
pop
nop
or
aaa
sti
je
pusha
add
sub
imul
sbb
add
scas
push
test
inc
add
push
add
cld
jmp
outsl
dec
jp
lahf
icebp
mov
cmp
fidivrs
pop
push
xbegin
clc
std
fsubrs
insl
mov
nop
push
notl
add
xabort
mov
addr16
mov
fnsave
add
mov
add
add
push
push
inc
add
pop
outsb
cmc
cmpsl
clc
repz
add
out
lret
in
dec
adc
add
aas
inc
add
jmp
add
in
insl
clc
fs
mov
gs
scas
xchg
push
clc
jmp
sub
jge
add
or
cld
jmp
sub
test
leave
iret
dec
jle
clc
fldt
jno
add
add
test
fnstenv
add
xlat
cmp
add
insb
lea
add
clc
push
ljmp
fwait
std
jae
add
inc
and
ss
ret
inc
or
add
add
mov
mov
sarb
sub
add
sbb
inc
add
sbb
add
and
add
clc
je
aad
clc
test
clc
stos
cmp
clc
nop
decl
es
add
xchg
pop
shll
add
sbb
inc
xor
cld
jmp
and
imul
inc
add
fwait
cld
or
add
jmp
sub
mov
add
test
testl
jnp
inc
clc
push
add
scas
mov
je
xchg
in
cmc
inc
clc
inc
add
call
fwait
cmp
add
es
push
sub
add
cmp
test
jmp
add
sar
clc
mov
ret
mov
cld
jmp
inc
xchg
xor
adc
add
jg
add
rolb
lods
das
inc
add
mov
scas
cmpsl
clc
cmc
mov
mov
add
ljmp
add
add
mov
add
push
shr
cld
jmp
sub
and
mov
push
clc
or
inc
add
sub
inc
clc
gs
cmpsb
clc
in
cmp
clc
lret
dec
mov
or
clc
adc
pop
int3
cmc
or
aaa
xor
add
nop
cs
adc
add
mov
clc
sarb
ret
cmp
add
pusha
add
das
cmp
add
cmpsl
clc
push
or
and
add
notb
add
cmp
jb
add
clc
icebp
dec
mov
add
mov
clc
cmp
pop
mov
mov
cmpsb
clc
push
icebp
fdivrp
repz
push
movsb
cld
jmp
dec
jge
jp
add
jle
pop
test
jns
clc
push
call
cld
jmp
or
xor
cld
jmp
push
push
or
inc
add
cmp
and
add
clc
xchg
mov
add
mov
clc
mov
clc
dec
push
add
insl
pop
daa
clc
mov
clc
inc
add
repz
add
sub
test
xor
add
clc
sub
cs
fs
mov
jbe
sbb
jmp
aaa
insb
sahf
jge
rcrb
push
divl
dec
inc
add
pop
sbb
call
cld
jmp
data16
add
divl
add
jge
clc
lret
es
or
adc
add
jo
add
bound
add
call
testb
inc
clc
xbegin
insb
xchg
rcl
pop
adc
add
add
cmc
inc
clc
ljmp
pop
fs
add
add
adc
stos
cmp
jne
cmp
xchg
loopne
xabort
in
clc
xbegin
clc
dec
divl
out
outsl
sbb
or
pop
adc
add
add
add
add
add
add
mov
pop
std
je
adc
add
mov
aad
hlt
add
add
dec
mov
clc
push
aad
xchg
mov
jmp
jp
add
add
push
cs
cld
jmp
pop
sub
adc
cmp
push
add
fidivrs
inc
clc
ficomps
and
add
add
sti
inc
add
addr16
je
add
call
clc
data16
rcr
sub
mov
dec
lock
or
cld
jmp
outsl
test
int3
jo
add
add
adc
add
clc
or
test
fbstp
clc
inc
add
cmp
out
pop
test
add
mov
loopne
int
inc
ss
ret
jno
sub
ja
add
mov
data16
mov
add
hlt
ljmp
cld
jmp
das
sub
or
add
cld
jmp
jge
add
add
cld
jmp
das
sub
add
mov
sub
and
and
add
push
clc
lcall
and
into
dec
stc
cmc
mov
add
or
clc
repnz
add
clc
push
ss
clc
addr16
mov
and
add
adc
add
arpl
jmp
push
sub
hlt
cmp
and
add
add
xabort
cmp
cld
jmp
test
sub
xor
add
clc
idivb
jg
mov
mov
clc
lods
mov
fstpt
lret
loop
pop
push
add
cmp
cmp
lret
mov
jp
int3
data16
outsl
loope
iret
call
add
scas
loopne
test
add
daa
clc
repz
in
data16
into
pop
loope
ret
clc
jns
add
fwait
sbb
mov
cld
jmp
mov
push
jnp
add
ret
clc
mov
clc
and
add
scas
push
dec
jbe
outsb
das
aaa
push
xor
cld
jmp
sahf
sub
mov
clc
das
fs
repnz
add
lock
int3
pop
out
xchg
adc
add
clc
lret
loopne
xchg
adc
clc
test
stc
sbb
add
add
leave
aas
clc
loop
sub
add
adc
add
into
daa
clc
imull
pop
xbegin
jg
fcoml
cmp
in
xlat
es
iret
adc
add
stc
dec
inc
clc
addr16
aad
clc
cld
popa
add
xor
add
lcall
add
lret
mov
clc
aaa
pop
enter
add
movsl
clc
dec
add
add
cmc
inc
clc
test
sahf
sbb
dec
movsb
clc
xabort
clc
data16
mov
xbegin
lahf
pop
mov
ss
xor
add
clc
fdivrl
cmp
out
add
or
add
xchg
loope
fidivrl
add
cld
jmp
shrb
data16
lods
add
add
clc
jns
bound
add
clc
sub
cmp
xchg
cld
jmp
sub
inc
pop
jmp
cmp
xchg
fwait
lret
clc
or
stos
add
or
xabort
ja
nop
xlat
aaa
cld
popa
add
loopne
cmp
xchg
lods
pop
sub
ja
clc
and
add
clc
lea
xabort
push
clc
gs
cmp
jge
clc
fstl
add
aaa
mov
repnz
in
sar
add
mov
push
in
jmp
xor
mov
in
in
add
add
cs
add
pop
xor
add
add
lret
movsl
clc
movsb
clc
test
xor
add
clc
sub
clc
std
jecxz
mov
out
ja
inc
add
cmp
add
jmp
add
adc
add
loopne
xor
pop
stc
icebp
xchg
ret
clc
push
and
cmp
test
in
sbb
or
pop
cmp
clc
out
dec
loop
insb
add
add
cmpsb
clc
stos
pusha
add
adc
add
loopne
lods
enter
clc
iret
cmp
clc
pop
clc
aam
fwait
push
push
add
push
add
rcr
pop
pop
leave
out
in
out
mov
jae
inc
add
cmp
add
cwtl
or
push
cmovle
mov
clc
mov
into
leave
insb
mov
leave
outsb
push
add
pop
add
add
inc
add
push
call
cld
jmp
sub
mov
clc
sti
xchg
cmp
xbegin
jo
add
lea
add
add
and
aad
mov
rcrl
mov
lea
add
pop
cmp
add
cld
jmp
push
je
fcmove
jge
loop
jb
add
add
cli
fistl
add
clc
dec
xor
add
xabort
add
mov
clc
jno
add
push
add
dec
test
shl
xor
mov
clc
pop
mov
hlt
loope
and
add
stos
cmp
inc
add
out
lods
cmp
xor
pminsw
cmc
pop
adc
add
adc
add
inc
add
inc
add
ret
mov
add
bound
add
inc
add
cld
and
add
adc
add
clc
clc
mov
shlb
sbb
add
add
add
clc
pop
in
daa
clc
and
pop
sar
adc
jo
add
add
cltd
out
cmp
clc
push
clc
clc
outsl
sub
dec
loope
cmp
repz
add
add
clc
movsl
clc
push
clc
int
sbb
pop
add
add
or
outsb
loope
push
jp
clc
test
push
add
arpl
add
cmp
repz
add
inc
clc
scas
ficoms
jmp
inc
scas
sbb
jb
add
cmp
jmp
subb
int3
cmpsl
clc
int3
mov
clc
and
add
clc
leave
mov
add
or
lock
xchg
sub
sbb
movsb
clc
jno
add
aam
xchg
movsb
clc
and
add
bound
add
add
push
cld
jmp
dec
mov
dec
bound
add
mov
add
clc
jg
clc
inc
add
test
in
shrb
dec
pop
lahf
add
add
clc
fwait
in
cmp
clc
adc
add
add
aaa
sub
add
aam
gs
mov
test
add
add
cmp
pop
push
lea
add
add
gs
repnz
lods
jge
int3
mov
and
ja
imulb
addr16
sub
adc
add
jp
pop
push
test
add
mov
mov
mov
mov
add
mov
sbb
clc
xor
mov
push
clc
dec
dec
in
add
add
clc
push
repnz
add
push
sub
clc
pop
jmp
clc
xor
add
mov
lods
imul
cld
sbb
outsb
into
sub
iret
xabort
clc
clc
fnstenv
and
clc
nop
inc
jle
add
jmp
push
pusha
add
out
xlat
jg
mov
jmp
es
push
popf
jb
add
add
add
add
jne
pop
clc
dec
clc
push
add
mov
add
sahf
mov
add
sti
dec
mov
jmp
aaa
xor
dec
int
sarb
sarl
lods
int3
pop
push
add
mov
add
xchg
mov
cld
jmp
sahf
jp
mov
sti
cmp
add
inc
test
and
add
sub
add
je
cmp
add
std
pop
lods
sub
cmp
add
dec
add
add
incl
repz
jmp
adc
push
sbbb
out
jmp
add
das
sub
sar
sbb
test
hlt
mov
mov
jmp
clc
dec
ret
clc
lea
jmp
dec
sub
out
jmp
sar
clc
lea
enter
lcall
pusha
cld
jmp
sub
ja
pushw
push
add
mov
sar
xor
lods
cmp
inc
clc
cld
movsb
clc
fidivl
add
out
mov
mov
add
test
push
push
pop
clc
movsl
clc
add
add
xbegin
nop
push
clc
jg
mov
jle
add
add
add
pop
mov
clc
sbb
add
mov
ss
ret
jge
adc
clc
out
mov
enter
insb
cs
add
cli
out
pop
sar
add
xor
popf
bound
add
out
movsb
clc
pop
je
std
scas
xchg
mov
clc
lahf
sbb
dec
cmp
daa
clc
icebp
sbb
aam
clc
adc
add
hlt
pop
repnz
mov
clc
iret
js
clc
and
add
cld
jmp
mov
jno
cltd
jne
add
add
xor
add
mov
clc
cmp
add
inc
add
nop
xor
add
mov
sar
dec
in
mov
add
js
inc
add
pop
xlat
xchg
dec
movsl
clc
or
jns
sub
fdivs
mov
in
data16
roll
add
push
clc
push
cs
mov
movsl
clc
out
int3
xor
add
clc
mov
add
lods
sbb
xor
add
pop
cwtl
pop
in
xbegin
xor
add
cld
cmp
add
notb
repnz
add
jmp
loopne
test
add
aas
scas
cmpsb
clc
or
pop
imul
ss
ret
xchg
jno
sub
clc
push
mov
aas
cli
or
jnp
clc
in
loopne
cmp
clc
jg
add
xchg
arpl
add
dec
fmulp
dec
jbe
pop
cld
jmp
fwait
test
bound
add
add
sbb
es
push
out
outsb
ljmp
pop
xlat
xor
call
jp
adc
std
popa
add
mov
or
sub
jge
lret
cwtl
cmp
add
add
add
cs
clc
or
mov
add
icebp
jae
add
clc
call
jmp
aas
mov
sbb
lahf
push
loop
cmp
jecxz
inc
clc
aaa
push
add
dec
test
mov
add
test
push
insb
inc
add
push
mov
cld
jmp
push
sub
cltd
fidivl
and
add
add
add
push
ss
ret
das
dec
fwait
sub
add
dec
cmpsb
clc
insb
xchg
mov
inc
add
jns
clc
test
add
pop
push
les
ret
dec
push
push
cmp
xchg
xbegin
add
iret
xchg
adc
add
dec
xchg
xbegin
mov
xchg
mov
mov
push
add
cld
jmp
cmp
jl
mov
inc
loope
incl
cmp
imul
hlt
popf
pop
jmp
pop
ss
ret
or
push
cld
inc
add
sbb
pop
ror
testl
cld
jmp
jne
xchg
cld
sahf
mov
stos
mov
sbb
add
sar
clc
and
add
sar
clc
nop
xchg
and
add
add
push
add
pop
call
cmpsb
clc
stc
loopne
inc
add
push
in
lret
add
add
inc
add
hlt
clc
jnp
xor
cld
jmp
aaa
jp
mov
sbb
jmp
and
xorb
add
pop
or
xor
add
ret
cld
jmp
je
scas
das
movsb
cmc
ss
popf
popa
add
pop
mov
add
rcrb
mov
mov
in
lea
in
add
imul
push
add
mov
cmp
add
pop
cmp
mov
clc
mov
cmc
inc
clc
push
mov
push
mov
icebp
lods
add
sub
add
ja
add
sub
ficompl
mov
add
add
loopne
fimull
cltd
push
pusha
add
jnp
clc
shl
mov
add
clc
aad
loop
cwtl
mov
ja
in
fisubs
add
or
pop
xchg
pop
xchg
push
add
loop
and
add
into
adc
pop
push
add
adc
movsb
clc
daa
clc
sbb
enter
add
jp
dec
test
mov
clc
adc
add
xchg
jle
clc
xor
add
clc
add
add
and
cmp
clc
mov
add
cwtl
add
add
loop
das
dec
shl
jmp
sbb
fisubrs
loop
jns
add
add
add
add
add
es
stos
daa
clc
dec
int3
pushf
add
add
jle
push
clc
xor
xabort
repz
clc
jo
add
inc
clc
and
add
xor
add
add
fs
cli
fadds
add
insb
lcall
ss
ret
cmpsb
sub
pop
dec
jmp
inc
clc
ljmp
ss
ret
sub
add
test
or
clc
clc
cli
adc
clc
fistpll
xor
cld
jmp
mov
xchg
clc
mov
add
and
add
hlt
divl
mov
lods
ss
ret
xchg
cmp
lock
popa
add
lret
and
sub
insb
adc
xor
xchg
mov
jne
jne
adc
add
sub
clc
add
add
clc
push
add
clc
sar
add
mov
mov
gs
movsb
clc
or
nop
imul
jbe
add
add
mov
add
pop
int
clc
stc
out
jbe
clc
jno
add
add
or
clc
ret
clc
push
out
cmp
clc
mov
push
xchg
and
xchg
inc
add
aad
jge
cmp
mov
add
hlt
xlat
push
repz
mov
ss
ret
push
es
popf
cli
inc
clc
fyl2xp1
mov
inc
add
cmp
push
mov
mov
clc
inc
clc
xor
add
push
jmp
ja
inc
add
pop
fildl
cmpw
cld
jmp
xor
xor
xbegin
clc
xor
add
inc
add
sbb
loope
lret
cmp
cmp
lret
and
add
fcompl
add
add
cmp
jae
add
add
sub
add
xchg
fs
hlt
xchg
test
clc
in
ret
add
xchg
adc
sbb
clc
sar
or
pop
clc
int
dec
mov
test
fmulp
insl
data16
mov
push
ret
mov
ja
mul
clc
outsb
push
jp
jnp
clc
or
or
add
fwait
icebp
sbb
push
jmp
clc
mov
xor
add
setg
je
aaa
xchg
jne
add
push
lods
adc
clc
and
scas
addr16
jns
add
movsl
clc
stos
sub
mov
sub
jmp
movsb
inc
sbb
fcoms
iret
cmp
pop
inc
add
fistl
clc
add
add
jne
cld
jmp
adc
push
lea
add
iret
arpl
add
add
or
in
mov
add
out
inc
add
fdivrs
cmp
clc
outsb
outsb
and
add
add
add
dec
add
add
push
ss
ret
jg
sub
clc
cld
icebp
cmp
mov
add
fisubrs
iret
inc
clc
adc
add
adc
add
dec
dec
jecxz
push
outsl
nop
cmp
clc
adc
add
pop
dec
sub
testl
clc
out
in
jno
add
movsb
clc
clc
sbb
jo
add
clc
mov
mov
cld
jmp
ja
and
add
pop
jp
bound
add
inc
clc
jo
add
cs
xor
add
jecxz
or
xor
add
notb
add
or
lret
jg
add
push
cld
jmp
push
test
add
dec
pop
scas
ss
incl
or
add
test
out
aaa
rcrb
cltd
in
stc
stc
dec
pushf
inc
add
jae
add
clc
push
push
cld
jmp
sub
dec
jno
cmpsb
clc
jae
add
add
xchg
clc
js
add
test
clc
adc
add
daa
clc
mov
add
cmp
clc
out
dec
je
negl
fwait
pusha
add
push
cmp
cld
jmp
or
pop
cmp
test
movsb
clc
add
add
xor
add
daa
clc
pop
lret
clc
cmp
clc
fisubl
clc
in
pushl
idiv
jmp
aas
sahf
sub
dec
xchg
rorb
clc
jae
add
clc
xchg
xchg
into
jmp
inc
clc
addr16
xbegin
xor
add
clc
pushf
mov
xchg
lock
jle
clc
mov
fmul
xor
add
jo
add
add
mov
clc
or
insl
dec
adc
dec
arpl
add
sbb
jecxz
jne
lret
negb
add
clc
pop
inc
clc
mov
clc
or
add
stc
fdivrp
pop
cld
jmp
sub
jp
adc
add
movsl
clc
sbb
adc
mov
aaa
add
jp
jno
sub
add
xor
add
xchg
push
clc
clc
xor
add
add
loopne
add
add
add
testl
clc
pop
int
xor
add
sarb
clc
lahf
push
push
ret
push
je
jmp
mov
repz
jg
dec
lods
adc
add
idivb
ficoml
add
jl
nop
mov
idivb
int3
ret
clc
je
add
jge
scas
pop
lock
add
or
add
add
cs
frstor
clc
mov
dec
xor
add
insl
cmp
pop
movsl
clc
sbb
test
clc
call
sub
xor
add
fisttpll
jmp
mov
push
ffree
clc
mov
pop
adc
add
mov
add
repnz
test
cld
jmp
jge
jge
and
push
jne
cld
jmp
jno
add
add
push
in
cmp
ss
cmp
pop
and
add
test
mov
pushf
cmp
add
push
add
add
add
aas
in
dec
adc
add
jge
clc
mov
clc
push
add
jecxz
xchg
inc
clc
xchg
stos
cmp
dec
push
clc
jbe
jns
and
mov
sub
imul
ficompl
mov
cld
jmp
sbb
mov
int3
testb
in
std
mul
clc
sub
pop
adc
add
xchg
sar
jne
and
xchg
pushf
lock
adc
add
cmp
cld
jmp
dec
aas
jge
mov
mov
pop
mov
inc
add
sar
xchg
xchg
ljmp
or
cmp
repz
sbb
dec
inc
clc
inc
clc
loopne
cmp
scas
loope
clc
mov
cs
add
mov
sub
clc
test
mov
clc
mov
add
xchg
jmp
clc
stos
cmp
clc
inc
add
fstpl
clc
dec
mov
sub
cmp
add
scas
aad
jl
pop
pop
dec
inc
clc
sub
insl
cmp
add
add
pop
sahf
icebp
mov
inc
clc
cwtl
inc
add
test
push
xbegin
clc
dec
jmp
clc
pop
mov
dec
scas
imul
dec
pop
clc
jns
push
fildl
ret
clc
pusha
add
ss
sub
inc
add
pop
add
add
clc
aas
test
bound
add
data16
jns
inc
clc
xbegin
std
add
add
add
dec
push
sar
mov
push
cld
jmp
push
sub
sub
jb
add
sub
jmp
sub
imul
pop
push
add
xchg
sbb
jmp
xor
jg
dec
jae
add
or
outsl
xchg
and
cmc
cmp
in
pop
mov
pop
mov
inc
add
inc
add
shll
add
push
out
ja
clc
lods
cmp
movsl
clc
cmp
inc
clc
imul
add
sbb
push
jbe
mov
clc
aas
clc
gs
loop
and
add
std
out
dec
adc
jmp
subb
cmpsb
sub
pop
ljmp
and
cmpsl
clc
mov
add
jb
add
and
add
add
clc
jnp
pop
in
lods
jg
test
push
call
cld
jmp
or
aaa
xchg
mov
clc
cli
sbb
clc
and
ss
clc
sar
add
add
add
and
add
clc
push
clc
add
add
clc
nop
mov
clc
mov
push
cli
adc
add
inc
add
cltd
sbb
jmp
test
sub
je
jmp
jmp
or
sub
imul
clc
out
movsb
clc
mov
xbegin
add
cltd
mov
loope
and
je
and
mov
call
pop
xbegin
clc
mov
jbe
out
aas
adc
add
cmc
add
push
add
cld
jmp
notb
inc
add
scas
jmp
cld
jmp
push
sub
insb
mov
xor
add
clc
ljmp
clc
repnz
ja
add
sbb
jnp
clc
xchg
push
jo
add
popf
mov
clc
repz
add
lret
clc
mov
sti
clc
dec
sahf
jecxz
xor
add
add
add
or
outsb
xor
clc
jecxz
outsb
fisubrs
mov
sbb
lods
mov
clc
data16
shrl
push
jg
out
arpl
add
jmp
add
push
clc
mov
add
iret
pop
cli
jno
add
add
out
int
test
or
lods
popf
push
xchg
rcrb
aaa
sub
adc
add
stc
mov
stos
dec
jle
push
clc
inc
add
movsb
clc
or
add
jo
add
jl
test
clc
lods
inc
clc
add
add
mov
cld
jmp
xchg
sub
and
add
scas
and
add
fnstcw
fucomip
call
dec
push
cmp
clc
lods
jns
dec
dec
cs
clc
cmp
testl
add
sub
repnz
nop
adc
add
add
lods
and
add
sar
add
xor
add
add
aam
ffreep
clc
adc
clc
cmp
cmpsb
clc
ljmp
js
push
cld
jmp
mov
pop
nop
mov
stos
fmuls
mov
in
cmp
clc
sbb
pop
cli
sub
clc
push
jmp
or
sub
inc
add
pushl
sar
jmp
add
add
pop
lea
add
add
pusha
add
add
cmp
cwtl
mov
dec
xor
add
mov
clc
js
lock
ret
clc
or
or
sbb
add
jecxz
mov
inc
clc
mov
clc
push
mov
clc
lock
add
or
clc
stc
cld
pushl
ss
ret
push
mov
sbb
fldenv
clc
sbb
xor
add
cmp
nop
inc
add
lock
push
add
clc
fsubrs
xor
clc
mov
lahf
test
dec
dec
in
fimuls
add
add
stc
dec
lods
add
add
mov
jmp
or
and
clc
adc
add
clc
dec
cltd
incl
jo
cld
jmp
test
lods
lock
add
mov
int3
test
add
xor
add
ret
clc
pop
xchg
popf
scas
xchg
pop
popa
add
out
fcmovbe
or
dec
jecxz
insb
das
rorb
add
lock
clc
inc
clc
icebp
and
lret
enter
insl
jb
add
lcall
inc
clc
xchg
add
add
jae
add
add
jns
lea
add
cld
jmp
movsb
xchg
das
mov
mov
cmp
clc
pop
mov
std
fdivrp
ljmp
and
xchg
inc
add
cmpsl
clc
xor
clc
mov
scas
mov
cmp
clc
pop
jne
push
jl
mov
enter
clc
test
movsl
clc
pushf
xchg
add
add
push
test
das
and
clc
cmp
add
js
adc
add
outsb
fs
xbegin
inc
clc
push
xchg
pop
es
nop
bound
add
add
clc
pop
fcmovb
clc
fcompl
dec
or
jl
clc
and
add
hlt
lods
xchg
call
clc
pop
data16
fs
xchg
jle
add
fiadds
and
add
xor
cld
jmp
push
add
xchg
xor
add
add
clc
cltd
lret
in
cwtl
xchg
cltd
adc
add
clc
fidivrl
xor
add
scas
add
pop
out
jns
clc
and
add
roll
test
cld
jmp
jg
cmp
cmp
jmp
lea
add
xchg
jno
add
add
daa
clc
push
add
shl
clc
push
jae
add
push
ret
aaa
adc
add
cmpsb
clc
mov
sbb
push
add
jmp
clc
lret
add
mov
xor
add
add
clc
or
sbb
jmp
jb
add
xor
add
clc
push
clc
mov
nop
repnz
std
fcomps
test
pop
or
pop
ds
push
inc
add
sub
fwait
and
ja
xbegin
add
mov
clc
mov
pushf
push
add
in
sarl
cld
jmp
insl
mov
mov
loop
cmpsb
clc
pop
sub
add
cmp
mov
push
cld
jmp
cmpsb
mov
mov
add
mov
hlt
sbb
inc
add
ja
or
adc
add
lods
clc
xchg
cwtl
aam
jno
add
movsl
clc
imul
clc
sub
add
pop
jmp
add
or
add
lea
cld
jmp
sub
clc
rolb
pop
arpl
add
add
clc
or
and
add
xchg
lcall
add
jae
add
add
or
aam
in
push
add
or
add
mov
add
add
xor
outsl
lret
loop
repz
dec
xor
add
push
cld
jmp
scas
dec
sub
xor
mov
clc
movsl
clc
cmp
mov
popf
xchg
popf
pop
jnp
clc
lcall
std
leave
jg
add
repnz
imul
add
add
jg
mov
push
ret
aas
outsl
in
sar
add
add
add
xlat
jle
or
enter
clc
pop
ret
clc
xchg
rolb
mov
add
add
mov
in
dec
ss
clc
mov
ljmp
sub
add
jae
add
movsb
clc
adc
add
push
add
lods
jno
add
shlb
add
dec
out
add
mov
xchg
leave
mov
sbb
inc
clc
popf
mov
sbb
clc
stos
pop
mov
cld
jmp
cmp
test
sub
pop
pushf
adc
add
jmp
sbb
insb
jl
jl
leave
xor
dec
mov
out
cmp
add
xor
scas
push
mov
xchg
out
inc
jmp
add
add
sahf
xchg
hlt
add
add
imul
clc
dec
cs
mov
clc
push
out
xchg
push
pusha
cld
jmp
sahf
insb
sub
adc
jp
jp
clc
sub
sar
notl
rsm
or
add
mov
clc
jne
jns
push
cmp
cmp
test
int
jo
add
add
lods
jecxz
cltd
and
add
push
shrb
push
add
mov
clc
stos
xor
clc
mov
add
shr
inc
add
decl
icebp
ljmp
or
and
sub
jmp
adc
mov
cld
jmp
sub
and
add
lret
addr16
mov
cmp
aaa
lcall
jmp
sub
clc
sub
sbb
jo
add
clc
adc
or
jb
add
clc
mov
hlt
pop
xbegin
dec
sahf
pop
mov
sub
enter
in
decl
sbb
add
or
add
cmp
cmp
clc
lock
enter
aaa
js
inc
clc
outsb
push
fnstcw
mov
add
jg
clc
fiadds
add
clc
xchg
dec
aam
clc
scas
add
add
clc
call
lret
jle
jle
add
push
add
adc
add
jno
add
sub
add
xchg
daa
clc
jle
outsb
or
push
add
cld
jmp
mov
jg
add
addr16
sahf
xchg
scas
push
ljmp
or
add
mov
add
pop
inc
add
pop
jo
add
cmpsl
clc
and
add
clc
mov
data16
cmp
out
sar
cmp
xor
add
clc
inc
add
dec
pusha
add
sub
pop
jns
scas
cld
in
sar
clc
cltd
es
pop
clc
dec
scas
test
insb
rep
clc
jecxz
adc
add
jecxz
fdivrp
mov
cld
jmp
sahf
mov
mov
add
sub
cmp
dec
out
cld
jmp
push
dec
mov
sar
sar
mov
cmp
fidivl
fsubrl
gs
mov
cld
jmp
cwtl
xchg
adc
jb
add
cld
push
dec
add
test
enter
sar
xabort
sub
or
jl
test
pop
fistl
add
je
loop
repnz
bnd
push
and
clc
jecxz
cmp
add
sar
enter
jge
sub
jb
add
xchg
aaa
xchg
pusha
add
push
inc
clc
push
add
push
xor
sbb
clc
or
sar
call
cld
jmp
xor
mov
cmc
xchg
adc
add
clc
insl
dec
test
mov
jb
add
add
mov
nop
inc
add
jp
jno
dec
push
add
in
mov
push
add
pop
clc
int
sub
mov
clc
in
bound
add
add
add
test
clc
mov
call
inc
clc
sbb
inc
add
imul
aad
mov
mov
add
popa
add
push
xor
add
xor
clc
xor
add
adc
add
cld
push
xchg
ret
clc
cs
pushf
sbb
add
in
std
pop
loopne
add
add
iret
mov
add
mov
cmp
das
pop
jnp
fsubl
shl
clc
lea
mov
inc
clc
xchg
xchg
int3
pop
out
lods
xchg
xbegin
add
add
fdivrl
clc
xchg
inc
clc
loopne
je
add
cmp
add
loop
add
add
test
hlt
push
add
pusha
add
sahf
sti
xchg
mov
add
xbegin
dec
cld
jmp
mov
add
shlb
test
enter
push
jb
add
mov
add
xor
add
popf
mov
scas
push
add
adc
add
sbb
and
add
in
push
xchg
push
add
jne
into
mov
fcomps
je
cld
jmp
jle
jnp
je
jl
cld
jmp
outsl
std
pop
cld
aad
inc
add
xor
add
clc
adc
add
mov
dec
data16
mov
sarb
mov
aaa
dec
jae
add
add
jmp
js
clc
addr16
sbb
cld
jmp
cwtl
xchg
lea
add
clc
add
add
mov
cld
jmp
inc
cmp
int
lods
test
int
or
jne
cmp
imul
pop
cld
jmp
insb
xchg
sub
and
movsl
clc
out
loope
inc
clc
jbe
popf
cmpsb
clc
test
push
mov
mov
bound
add
xchg
mov
imul
push
aaa
arpl
add
rcl
aam
pusha
add
mov
mov
xchg
sbb
fimull
push
mov
add
add
mov
sub
add
add
pop
out
sar
add
add
adc
bound
add
sbb
js
add
cld
jmp
jge
jae
add
add
loope
sti
inc
add
dec
fbstp
cmp
add
add
add
adc
dec
stc
cmp
in
imul
mov
sub
clc
xchg
lea
nop
ja
es
repnz
clc
cmp
add
xor
add
clc
movsb
clc
arpl
add
add
dec
mov
jnp
mov
cld
jmp
cmpsb
xchg
shrl
jbe
cld
jmp
adc
add
pop
pop
insl
cmp
clc
cwtl
or
jecxz
push
add
push
mov
cld
jmp
popa
add
add
and
clc
addr16
out
cmpsb
clc
mov
add
add
cld
sub
jb
add
data16
pushf
imul
jns
clc
jge
pushf
cld
jmp
mov
pop
sahf
xchg
push
dec
push
pop
ss
ret
je
das
es
add
pop
pop
bound
add
je
or
sbb
inc
add
es
hlt
inc
clc
cmp
sar
scas
jecxz
push
xor
cld
jmp
sub
clc
dec
cmc
mov
and
add
adc
add
pop
clc
dec
pushf
test
clc
xor
clc
sub
clc
int
fwait
mov
pop
outsb
dec
daa
clc
xor
add
xor
add
add
xor
add
and
jae
add
loop
test
mov
mov
pushl
cld
jmp
aas
jp
sbb
push
mov
test
cmp
sub
dec
insb
movsb
clc
xor
add
add
push
add
iret
add
add
xchg
lods
mov
add
add
das
or
ss
ret
mov
js
sahf
sbb
inc
clc
push
clc
ja
in
int
clc
mov
clc
sbb
push
jae
add
clc
cs
mov
jne
cld
jmp
and
clc
sub
add
cmc
decl
push
add
add
lods
out
lahf
dec
mov
push
lahf
jae
add
jae
add
decl
add
jmp
xor
das
cmp
sub
add
cmp
mov
add
mov
jmp
add
jg
dec
in
mov
clc
imul
into
mov
clc
pop
jno
add
add
add
add
sbb
clc
and
add
aad
clc
icebp
xlat
into
test
adc
add
add
mov
mov
mov
add
jg
iret
add
orl
jp
add
pop
mov
lods
out
aad
cmp
add
sar
push
add
jmp
sub
iret
ja
cmp
clc
add
add
cmp
je
clc
mov
cld
jmp
insb
into
fistps
mov
daa
clc
dec
pop
mov
xchg
scas
or
test
fidivrs
jmp
movsb
inc
cmpsb
lods
ficoml
add
fidivrs
add
add
in
sub
movsb
clc
mov
je
clc
dec
mov
and
add
add
xchg
sarl
cwtl
mov
cld
fld
clc
xchg
dec
push
fldt
test
add
cld
jmp
sar
fisubl
je,pn
cltd
test
sbb
in
adc
add
ret
clc
rorb
cmp
cld
jmp
push
push
scas
cmpsb
ret
add
pop
aad
xor
add
lcall
pop
jmp
addr16
add
add
shrl
clc
mov
leave
inc
add
pop
cmp
jne
and
mov
push
add
mov
sar
add
in
dec
out
jg
add
fwait
push
clc
negl
cmp
incl
test
cmp
jmp
add
clc
scas
pusha
add
sub
shll
sar
add
xchg
inc
clc
addr16
inc
clc
gs
dec
ss
push
sar
clc
in
decl
mov
add
sbb
push
into
xchg
mov
add
push
push
arpl
add
clc
das
dec
enter
cmp
add
ds
out
into
add
add
mov
push
add
imul
add
xor
cld
jmp
sbb
aam
pop
cmp
clc
push
bound
add
dec
sbb
and
inc
add
and
clc
adc
add
push
sbb
add
mov
mulb
pushf
mov
jmp
dec
imul
test
out
xchg
popa
add
test
dec
arpl
add
in
dec
outsl
cmp
pop
add
add
inc
add
sar
clc
jbe
or
dec
jno
add
xor
insl
push
loope
inc
add
aad
push
shrl
add
cld
jmp
das
inc
jno
jnp
add
sub
clc
bound
add
clc
das
push
mov
cld
jmp
fwait
insb
ja
je
xlat
dec
xchg
lock
clc
aad
xabort
xchg
cltd
adc
add
clc
pop
mov
cld
jmp
sub
adc
add
clc
mov
xor
add
add
add
jbe
sub
sbb
cmpxchg
add
clc
inc
add
push
xor
add
or
dec
pop
cmp
clc
test
add
mov
addr16
in
xchg
mov
clc
adc
rcr
inc
clc
xchg
sub
or
clc
mov
mov
clc
and
add
clc
dec
xor
add
mov
clc
sar
cli
stc
dec
rcll
ret
clc
cmp
push
sarl
clc
lret
divb
xchg
mov
ja
cmp
pop
sbb
add
inc
add
out
fcmovnb
clc
sub
add
add
sahf
movsb
clc
sbb
cwtl
mov
clc
jmp
xchg
mov
clc
lret
imul
mov
clc
cmp
and
add
xchg
adc
clc
je
mov
adc
add
add
pushf
cmp
cmp
cmp
mov
mov
movsl
clc
stos
xchg
bound
add
sub
mov
inc
add
jno
push
cwtl
xchg
fs
sti
cmp
inc
add
adc
add
or
add
enter
mov
mov
add
adc
add
add
outsb
push
add
adc
imulb
add
cmp
add
mov
mov
lcall
pop
clc
inc
add
repz
push
add
sbb
clc
and
in
call
add
ljmp
in
adc
sub
sbb
ds
and
imul
cld
jmp
sbb
xor
add
clc
adc
add
pop
aam
scas
out
mov
jns
mov
and
jge
cld
jmp
push
ja
ds
clc
cmp
sar
pop
mov
add
fs
jno
clc
pop
adc
add
push
sub
add
arpl
add
mov
push
xchg
ret
clc
pop
fcoml
cwtl
test
clc
cmp
negb
or
movsl
clc
mov
addr16
ds
cmp
xor
pop
scas
mov
xbegin
add
clc
loop
add
int3
clc
fdivrl
clc
into
pushf
int3
push
add
or
add
hlt
rep
popf
jb
add
clc
push
popf
push
add
xor
add
add
mov
jmp
inc
es
push
sub
push
inc
clc
sar
addr16
es
cmp
mov
sbb
add
or
cwtl
and
add
pop
clc
mov
lea
popa
add
jmp
add
aad
dec
pop
data16
push
sub
add
jge
add
add
dec
add
add
stos
leave
jns
cmp
add
jne
cld
jmp
sbb
add
out
out
add
add
je
aad
imul
add
add
push
clc
mov
fiadds
sar
jp
xchg
mov
jl
sbb
jmp
sub
clc
mov
call
ss
ret
sub
clc
xlat
nop
int
jns
clc
test
pop
add
add
ffree
clc
mov
mov
je
clc
sub
jbe
push
clc
mov
adc
add
inc
clc
mov
add
cld
jmp
sub
lea
jp
adc
clc
loope
test
sub
clc
sar
push
js
dec
divps
aad
clc
leave
inc
add
out
mov
mov
clc
or
mov
add
adc
add
in
mov
lret
inc
add
sub
pop
in
adc
add
add
add
xlat
xchg
mov
mov
insl
cmp
add
add
dec
aad
sub
jne
or
bound
add
mov
nop
int3
mov
jl
lcall
and
add
and
xchg
mov
fcomip
call
das
scas
cld
aad
add
addr16
pop
jo
add
and
or
pop
test
stos
test
add
rorl
and
add
lahf
add
add
add
clc
das
cmp
inc
add
xor
cmp
xchg
stos
push
add
jmp
iret
out
clc
clc
add
int3
das
mov
das
shrl
push
adc
jmp
scas
sub
xlat
xor
add
int
clc
mov
cmp
repnz
mov
stc
fwait
idiv
and
fldenv
pop
mov
sar
aaa
std
and
add
enter
sbb
jmp
add
dec
cmp
clc
xor
jns
mov
clc
fldt
loope
addr16
outsl
outsl
add
add
movsb
clc
jnp
inc
clc
rcl
or
sahf
aam
mov
clc
sahf
pusha
add
das
sub
out
dec
jl
jae
add
repz
pop
hlt
repz
add
mov
xchg
inc
clc
xchg
ljmp
sub
xchg
test
and
add
jecxz
gs
xchg
xor
add
mov
clc
mov
add
ss
add
test
cmc
sub
add
jo
add
add
cld
jmp
cwtl
inc
movsb
xchg
sbb
aaa
xchg
ficompl
cmp
clc
lea
out
pop
cmp
inc
clc
cmc
xor
add
and
add
add
ret
clc
cmp
add
rcl
cmp
or
inc
clc
pop
das
stos
mov
add
int3
in
lods
pop
scas
add
testb
mov
xchg
sti
pop
mov
clc
clc
mov
clc
and
jb
add
add
lahf
ficompl
gs
sub
in
or
add
clc
je
add
jbe
add
out
cmp
insl
data16
inc
clc
adc
cmp
mov
push
add
inc
clc
inc
add
mov
and
add
clc
or
adc
add
pop
in
repz
ret
push
dec
add
add
xchg
push
add
dec
and
lods
das
xor
add
movsb
clc
or
mov
sub
lods
xchg
data16
fwait
cwtl
loop
mov
clc
sbb
sub
jmp
xchg
movsb
cmp
cmp
ljmp
xchg
outsb
pop
add
add
xbegin
add
sbb
xchg
enter
jmp
lods
lcall
cld
jmp
test
insb
imul
push
add
cmp
clc
lret
es
sarl
jge
loope
adc
add
mov
clc
add
add
push
jae
add
or
insb
push
add
movsl
clc
mov
ss
ret
jno
das
cmp
add
test
mov
ds
sahf
and
add
fs
jno
add
adc
jmp
jp
or
sarb
mov
clc
or
pop
jnp
add
cmp
lods
mov
add
clc
iret
cmp
add
clc
or
addr16
inc
add
cmp
add
call
outsb
push
xchg
sbb
add
add
dec
shrl
xabort
pop
clc
push
scas
xor
add
aam
push
add
cld
jmp
ja
clc
inc
add
and
add
push
clc
xchg
xchg
aas
cmp
dec
jg
cwtl
sar
add
test
int
in
pushf
and
add
and
mov
mov
add
sub
clc
fcomp
xor
add
add
add
push
clc
idivb
clc
cmp
inc
clc
fwait
stc
xchg
xchg
repnz
pop
xor
add
add
push
in
pop
clc
cs
popf
dec
mov
in
loop
js
push
sub
mov
add
ret
clc
es
outsb
stos
popf
xor
add
cld
jmp
stc
lret
add
or
jmp
data16
mov
movzwl
cld
jmp
insb
sub
add
cs
add
push
clc
scas
xchg
lods
mov
add
jno
add
add
incl
repz
jmp
or
clc
outsl
popf
inc
add
pop
loope
jmp
add
clc
in
loope
push
push
mov
sbb
jmp
pop
jge
inc
and
mov
add
cld
jmp
lock
add
clc
cmp
xchg
dec
or
xbegin
xchg
movsb
clc
cmp
lea
add
inc
sub
fs
add
test
add
cld
jmp
cmp
mov
push
lcall
add
test
and
add
sbb
clc
xor
adc
add
data16
pop
mov
nop
inc
add
sub
clc
repnz
lods
dec
testb
adc
add
jp
xchg
mov
adc
sub
clc
cmp
sar
jns
add
dec
jns
mov
mov
adc
add
mov
dec
repz
lock
test
jge
pop
adc
add
adc
clc
xchg
xchg
cmp
and
add
mov
clc
mov
roll
add
mov
jecxz
imul
in
or
adc
add
into
lods
mov
clc
add
add
add
xor
add
jg
aaa
adc
clc
adc
add
loopne
jmp
dec
add
hlt
stos
sbb
jmp
sahf
nop
add
fwait
cmp
add
mov
test
out
mov
dec
mov
xor
clc
xchg
shl
clc
jnp
lret
adc
add
clc
sbb
push
inc
clc
jp
sub
ror
cld
jmp
cmp
push
sub
add
mov
add
imul
jmp
or
sarl
je
inc
add
add
testl
cmp
cmpsb
clc
scas
jno
add
cmp
std
jo
add
lret
js
out
cmpsb
clc
sarb
pop
inc
clc
push
add
int3
int3
dec
lock
mov
cld
jmp
icebp
aas
sub
clc
jnp
add
and
add
add
jbe
xchg
fldl
add
xor
jle
jmp
xbegin
clc
pop
mov
add
add
mov
movsl
clc
loop
mov
add
add
jmp
or
sar
aas
sar
repz
add
inc
clc
movsb
clc
frstor
dec
and
out
add
add
add
and
xlat
jp
clc
enter
add
iret
stos
into
mov
clc
xchg
or
jmp
cld
jmp
mov
adc
cld
jmp
sub
out
imul
loope
addr16
and
mov
dec
sbb
imul
push
push
add
push
bnd
and
add
add
clc
lock
add
icebp
push
clc
cwtl
push
add
inc
add
loopne
icebp
gs
sbb
sti
aas
sub
dec
sub
or
add
fists
div
push
jmp
jmp
add
dec
testl
pushf
xchg
mov
sub
mov
and
add
or
ds
arpl
add
idiv
in
cmp
add
cmp
add
repnz
outsb
inc
clc
in
in
mov
hlt
jmp
inc
clc
mov
clc
mov
add
or
fcmovb
clc
popf
xchg
dec
push
jg
scas
lret
insl
pavgb
lods
outsl
mov
ret
clc
outsl
push
cld
pop
rol
clc
out
out
shl
cmc
cmp
add
add
clc
cmp
shlb
jno
add
clc
mov
in
inc
add
xor
pop
inc
clc
pop
inc
add
mov
add
add
imul
jno
add
clc
fcompl
clc
mov
add
mov
add
cld
jmp
lods
xor
add
repz
pop
enter
movsl
clc
daa
clc
call
add
add
add
xor
clc
in
push
xor
add
xchg
pop
in
adc
add
jbe
out
jae
add
push
scas
ret
xchg
cs
inc
clc
loop
cmp
mov
mov
push
ret
or
ja
add
add
adc
add
jae
add
cmp
lea
mov
add
sub
push
iret
cmp
pop
imul
cvtdq2ps
ljmp
clc
lock
cmp
add
cmp
negl
push
cld
jmp
push
add
add
js
sbb
ret
icebp
jmp
pop
inc
clc
mov
pop
adc
jmp
cwtl
sbb
clc
pusha
add
cmc
xor
add
clc
incl
std
aam
call
pop
xchg
fwait
movsl
clc
test
inc
clc
xor
jns
xor
jns
cmp
add
rolb
push
add
add
add
cmpsb
clc
daa
clc
jp
clc
je
sbb
fwait
loop
popa
add
out
lret
push
push
cld
jmp
sub
push
jp
sbb
mov
adc
add
clc
dec
jl
xor
clc
jle
add
sbb
or
mov
js
clc
adc
mov
add
jns
ds
clc
jle
jae
add
in
cs
cld
adc
and
add
mov
push
cmp
push
cld
jmp
sub
jg
clc
mov
rcll
inc
clc
sub
add
add
movlps
add
stos
mov
cwtl
push
mov
add
xor
dec
in
fadd
clc
dec
sbb
push
ret
sub
dec
push
fldl
clc
xchg
sub
adc
push
add
out
dec
push
add
add
dec
lock
cmp
and
add
rcrl
stos
mov
push
cmp
inc
clc
cmp
rolb
int
sub
lcall
jge
add
dec
xabort
push
jae
add
jle
clc
nop
pusha
add
dec
inc
add
sbb
push
ret
mov
fwait
xor
aam
add
add
lods
out
push
pop
ss
ret
outsl
fwait
cwtl
test
cmp
add
sub
stc
sar
add
or
push
mov
cld
jmp
pop
cmp
repnz
ret
clc
push
xor
add
add
scas
mov
lahf
inc
clc
popf
xchg
cmp
hlt
popf
dec
jne
ret
mov
add
pop
jecxz
das
jbe
add
push
add
inc
clc
push
outsb
loopne
add
add
sahf
fldenv
add
je
out
dec
fwait
dec
lahf
cmp
clc
inc
clc
sar
clc
jge
out
inc
add
leave
arpl
add
add
mov
pop
clc
lret
add
scas
das
dec
sub
inc
add
cmp
clc
sarb
icebp
cmpsb
clc
jno
add
ss
ret
mov
sub
push
loop
scas
bound
add
add
add
xabort
clc
repz
add
incl
jbe
add
cmp
mov
add
pushf
ljmp
xabort
jno
add
sub
sahf
add
sbb
call
add
cld
jmp
aaa
push
sub
clc
decl
push
ret
dec
xor
das
mov
add
add
add
sahf
or
popf
clc
xchg
icebp
pop
xor
jbe
add
mov
dec
cmp
and
add
mov
cld
jmp
pop
pop
mov
pop
icebp
sbb
push
add
and
add
clc
sti
inc
clc
mov
push
add
leave
jge
adc
add
push
add
mov
add
mov
clc
xchg
push
add
inc
clc
or
add
sbb
push
mov
add
je
test
xbegin
clc
cmp
mov
add
clc
into
outsl
push
push
add
adc
add
icebp
cmp
sub
negl
repnz
add
clc
mov
add
into
mov
add
dec
clc
iret
leave
dec
rorl
xchg
es
pop
sbb
cld
jmp
adc
jae
add
add
adc
add
pop
push
clc
pop
add
pop
clc
push
add
fcoml
stos
roll
add
jo
add
mov
add
clc
and
add
lret
jnp
clc
mov
lods
push
popf
and
add
js
add
jg
clc
push
add
push
add
int
clc
out
das
sub
xlat
dec
aaa
hlt
jbe
clc
mov
xor
add
mov
movsb
clc
inc
clc
pop
aas
push
int
clc
push
add
xchg
js
add
divb
ret
clc
push
add
and
add
add
dec
push
dec
push
add
or
add
cltd
sub
adc
add
add
pop
push
sub
clc
mov
mov
cld
jmp
popa
add
into
xlat
inc
add
jg
fistpll
adc
cmp
mov
jg
clc
or
bound
add
inc
clc
es
xchg
sbb
add
aad
rcl
jne
clc
test
add
xor
add
pop
push
add
cs
addr16
push
inc
inc
add
cmpsb
aas
jno
stos
pop
or
add
clc
xbegin
add
pop
clc
dec
scas
push
clc
pop
clc
pop
cmp
add
cld
jmp
inc
mov
mov
xchg
mov
stos
sub
and
add
clc
xchg
push
add
push
add
add
jo
add
add
cld
jmp
xchg
sub
cmp
imul
push
add
add
jmp
mov
push
movsl
clc
mov
imul
fisttpll
stos
mov
clc
out
cld
mov
pop
inc
add
xchg
add
add
lcall
mov
add
dec
cld
jmp
cwtl
or
sub
shrb
ret
cld
jmp
scas
sub
movsb
or
sbb
test
out
cld
jmp
jae
add
clc
stos
mov
clc
push
add
push
xchg
stos
leave
js
clc
fwait
iret
clc
xbegin
clc
out
into
sbb
sub
clc
and
push
clc
dec
pusha
add
mov
add
xor
add
pop
xchg
aad
add
sub
and
add
in
mov
adc
add
sbb
xchg
filds
clc
lahf
push
add
jecxz
inc
clc
sar
fcmovnb
clc
sub
push
clc
push
or
add
cmp
add
adc
add
add
jle
add
cld
jmp
insb
cmpsb
lods
popa
or
mov
xchg
mov
pop
and
add
cmp
jecxz
pop
cmp
add
mov
sub
testb
xor
add
cmpsl
clc
bound
add
add
clc
imul
add
cmp
clc
mov
clc
sbb
inc
clc
mov
push
ss
ret
sub
mov
clc
xchg
ja
xbegin
sbb
jmp
sub
test
mov
add
jmp
imul
jecxz
iret
int
insl
mov
and
cld
jmp
mov
loop
in
fstl
fcoml
add
add
dec
jmp
mov
mov
clc
out
test
mov
push
push
cld
jmp
pop
adc
int3
xor
add
xlat
mov
addr16
cmpsl
clc
xor
aam
jmp
add
dec
outsl
and
add
mov
out
jno
add
jae
jmp
adc
adc
add
add
jle
cs
sbb
clc
xchg
push
add
outsl
jns
jle
dec
xabort
gs
fs
lods
add
add
clc
xchg
fdivp
add
lcall
sti
bound
add
mov
add
add
clc
ret
clc
xor
xchg
cmp
packsswb
add
xor
add
in
imul
add
xor
add
clc
sti
aad
xchg
and
add
add
push
add
mov
ja
add
xchg
and
xchg
xchg
daa
clc
inc
add
fsts
or
push
jmp
jno
ja
add
repz
clc
dec
mov
add
sbb
push
ret
sub
sub
in
or
add
mov
add
add
add
aad
mov
xchg
out
test
pop
inc
clc
int
sar
xchg
nop
fs
xor
add
imul
cld
jmp
sub
jno
js
jp
add
add
inc
clc
testl
les
cld
jmp
lods
fs
dec
xchg
lret
repnz
scas
adc
add
add
clc
decl
test
dec
add
cld
jmp
xor
add
add
add
pop
or
add
push
popa
add
into
push
add
add
dec
xchg
out
jae
add
pop
cmpsl
clc
aam
add
jl
clc
inc
clc
cs
dec
add
and
add
xchg
or
add
hlt
aas
fistl
add
xor
add
cld
and
add
pop
test
mov
add
clc
inc
clc
movsl
clc
mov
call
add
aad
jmp
push
ret
push
adc
out
data16
dec
scas
out
lcall
mov
pop
clc
mov
data16
sar
xchg
xchg
cmp
mov
loop
vmread
movsl
clc
rolb
addr16
sbb
int3
int3
sahf
mov
clc
mov
loopne
pop
xchg
mov
sar
inc
clc
pop
mov
data16
xor
lcall
xor
add
mov
cld
jmp
inc
insb
data16
stos
imul
push
iret
mov
ret
clc
push
add
data16
pusha
add
mov
push
add
ss
jle
add
inc
clc
add
add
add
add
out
inc
clc
cmpsb
clc
cmp
clc
nop
mov
add
mov
add
imul
add
dec
push
mov
clc
jge
xchg
rcll
add
push
outsb
pop
lods
repnz
lcall
in
test
jmp
popa
and
cwtl
xchg
adc
add
add
iret
mov
loop
jnp
clc
lea
xabort
add
jp
lahf
cmp
add
in
add
jp
add
insl
dec
jle
xor
add
cmp
push
movzwl
incl
movsb
sub
ficompl
adc
add
xchg
jns
push
add
cmp
mov
clc
push
push
clc
mov
add
xchg
and
add
test
in
adc
add
clc
mov
inc
clc
push
in
push
add
inc
add
loopne
sbb
clc
xchg
nop
ds
clc
js
clc
xor
add
mov
nop
popa
add
mov
push
ret
pop
xchg
adc
add
mov
sbb
xor
add
add
clc
fisttpl
int
fcmovne
or
add
or
jno
add
out
lahf
popf
add
add
cmp
mov
add
add
data16
pmaxsw
clc
lock
ja,pn
cmp
xor
aad
jg
cmpsl
clc
and
add
das
call
add
xchg
movsb
sub
jbe
sahf
int3
push
sub
ss
ret
sub
xor
cmp
add
clc
jne
add
fwait
jns
jno
add
sbb
push
clc
mov
push
mov
add
or
adc
jmp
sub
add
lret
add
jae
add
add
pop
ret
lcall
pop
push
add
mov
pop
call
cli
ror
xbegin
cmp
cs
clc
sbb
add
out
jp
or
imul
mov
push
cmp
lcall
clc
incb
push
push
ss
ret
cwtl
push
sub
adc
push
add
jge
mov
dec
sub
loopne
sub
inc
add
movsl
clc
xchg
divl
add
pop
cli
mov
cmp
outsl
into
adc
mov
push
add
cmp
jge
pop
xor
add
scas
xor
dec
and
add
clc
jmp
in
inc
clc
fs
fs
pop
xchg
xchg
sbb
jmp
xor
pop
lods
or
test
mov
add
clc
movsl
clc
lods
xbegin
mulb
add
lea
add
inc
add
in
cmpsb
clc
outsl
aas
or
ja
sub
outsb
add
mov
dec
jbe
rol
clc
pop
popa
add
das
fldln2
fwait
sarl
mov
mov
inc
clc
scas
mov
aas
push
push
gs
ss
xchg
add
add
xor
add
jb
add
add
add
and
xor
add
add
xor
add
pop
shrl
push
or
lock
add
add
es
inc
push
jno
add
movsb
clc
pop
clc
inc
clc
pop
mov
add
sbb
cmpsb
clc
jmp
cmp
clc
mov
jmp
and
rol
clc
out
bound
add
xchg
ds
jp
je
pop
sahf
xchg
mov
add
lahf
sbb
cmp
push
add
cld
jmp
fildll
outsb
ds
aas
jle
add
iret
std
pop
ljmp
in
sub
clc
sbb
fiaddl
ss
mov
clc
mov
pop
scas
mov
jns
xchg
dec
mov
in
das
cmp
clc
mov
or
and
and
inc
add
or
clc
outsl
bound
add
mov
loope
jno
add
clc
xchg
call
clc
aam
cmc
dec
or
clc
lock
xor
add
add
add
ljmp
cmp
cmpsb
clc
xchg
scas
sbb
sub
add
cli
cltd
jp
es
jl
daa
clc
push
add
jmp
popf
mov
inc
clc
jb
add
imul
jmp
and
sub
negl
add
mov
movsl
clc
into
cmp
loop
xor
add
ret
clc
dec
xchg
lods
shl
fisttpl
clc
jl
or
arpl
add
clc
test
push
fstpt
push
push
cld
jmp
or
xbegin
add
xchg
outsb
mov
loope
fwait
xor
add
sbb
jae
add
loop
dec
push
add
mov
cmp
xchg
cmp
pop
ret
add
data16
dec
out
fdivl
adc
add
clc
fsubrs
mov
or
clc
rorl
xchg
std
add
cltd
push
add
or
pop
clc
call
mov
in
divl
add
into
push
add
inc
add
lock
clc
enter
test
aam
dec
int
clc
repnz
push
add
jmp
sub
fidivl
add
push
dec
inc
clc
push
add
xchg
cmp
insb
or
dec
cmpsl
clc
fsubrp
cs
xor
clc
or
cmpsb
clc
cmp
add
add
xchg
sbb
je
cld
jmp
fcmovu
sar
inc
clc
push
pop
jmp
clc
jg
fdivrp
mov
pop
std
pop
clc
xor
add
add
cmp
add
mov
cld
jmp
inc
aaa
cmp
jmp
push
add
mov
pop
sahf
mov
clc
push
add
pop
cs
clc
pushf
mov
or
clc
cmp
jecxz
lcall
add
push
je
test
rcrl
stos
leave
in
mov
xor
add
clc
gs
fsubr
jl
clc
push
scas
dec
leave
imul
adc
jmp
test
sub
mov
cld
jmp
sub
clc
xchg
push
rorl
add
cmpsb
scas
and
push
add
aad
dec
in
cmp
add
int3
imul
add
clc
int3
jnp
clc
mov
mov
or
dec
and
add
add
add
shll
stos
scas
jg
sbb
add
cmp
clc
inc
clc
cwtl
mov
add
jnp,pt
inc
clc
cltd
sub
dec
aaa
das
cmp
fcomps
mov
mov
ret
clc
mov
add
pusha
add
mov
add
cld
cmpsb
clc
add
add
pop
mov
cmc
xchg
pop
clc
or
int3
jle
int
jecxz
sub
cld
jmp
cmp
clc
icebp
adc
add
adc
xor
mov
cld
jmp
sub
xor
add
jns
das
mov
add
add
clc
push
add
dec
test
inc
add
xchg
sar
xor
leave
mov
add
add
clc
pop
mov
jp
clc
xchg
hlt
pop
aas
js
dec
mov
mov
mov
add
jno
add
jmp
shrb
xbegin
mov
add
xchg
fistpll
imul
in
aas
ret
clc
sub
add
int3
xchg
movsb
clc
repnz
clc
mov
add
mov
dec
cld
jmp
inc
add
movsb
movsb
aad
insb
mov
lret
add
ret
clc
test
jmp
ss
ret
add
push
inc
clc
fcmovu
nop
jle
add
add
pop
add
add
clc
fcmovne
pop
ret
clc
idivb
lahf
xchg
jne
jo
add
and
add
clc
fildll
adc
add
clc
dec
xchg
jp
lahf
ret
sahf
je
pop
sbb
add
adc
add
aam
clc
mov
clc
data16
sub
add
mov
xor
add
mov
clc
mov
mov
ret
sub
imul
ja
cld
xbegin
jo
add
clc
xbegin
pop
test
add
add
int3
js
clc
ret
lcall
or
jmp
sub
out
and
add
push
add
out
imul
xor
xor
add
inc
clc
mov
xor
add
add
jne
hlt
mov
pushf
arpl
add
sar
pop
and
add
es
and
add
pop
fcmovu
jge
es
adc
add
fidivl
and
add
xor
add
cmp
add
jecxz
insl
popl
add
pop
cmpsb
clc
pop
test
sbb
mov
cld
jmp
fs
sbb
jmp
pop
adc
sbb
clc
stos
cwtl
mov
mov
clc
mov
clc
mov
mov
icebp
idivl
inc
clc
clc
jp
arpl
add
sarl
jl
fisubrs
clc
push
xchg
jo
add
mov
clc
jnp
clc
je
clc
and
add
inc
clc
mov
or
add
mov
out
xbegin
sub
add
cli
push
add
dec
sbb
push
ret
sub
push
add
lock
push
add
add
add
fs
dec
pop
pop
ljmp
inc
clc
xor
or
mov
mov
jbe
sub
das
es
mov
mov
cmp
sarb
iret
es
daa
clc
fmuls
movsb
clc
or
mov
clc
cmp
out
jne
clc
aad
sbb
clc
push
push
cld
jmp
xor
push
sub
add
in
cmp
push
mov
add
xchg
cmp
adc
add
mov
push
add
stos
mov
add
outsb
clc
test
clc
int3
lahf
sar
mov
cld
jmp
sub
inc
cmc
loop
xchg
lcall
clc
in
lea
mulb
clc
push
inc
add
std
xor
add
cwtl
jle
insl
mov
jmp
push
dec
cmpsb
imul
add
stos
in
jns
mov
add
cli
hlt
ficompl
adc
push
add
push
xchg
leave
add
shll
adc
add
mulb
add
clc
push
add
mov
add
out
sbb
push
dec
lods
and
mov
add
mov
and
add
jmp
clc
and
sub
out
in
mov
add
mov
xchg
imul
xchg
add
add
add
fs
cltd
jae
add
add
fnstsw
dec
in
pushl
push
sbb
adc
add
repnz
add
jno
add
mov
cld
jmp
add
add
jne
clc
cmp
clc
dec
popf
notb
add
add
mov
clc
inc
add
faddl
fildl
clc
mov
push
cmp
clc
and
add
lods
xbegin
push
add
cld
jmp
add
mov
clc
and
add
add
sub
pop
in
push
int
add
pop
add
sub
add
add
inc
jl
and
add
outsb
or
add
cmp
leave
mov
repnz
inc
clc
pop
lods
sbb
clc
decl
add
jmp
mov
test
clc
dec
push
test
clc
test
movsb
clc
test
out
aaa
sar
push
pop
mov
sbb
into
movsl
clc
push
pusha
ss
ret
adc
or
cld
jmp
jp
mov
popa
pushf
pusha
add
cmp
lods
cmp
sti
imul
add
mov
clc
jp
std
inc
add
jle
clc
push
add
cltd
in
cmp
clc
inc
add
lock
cmp
aam
xor
add
clc
sti
xor
add
mov
add
add
or
clc
mov
mov
xchg
inc
add
fbld
add
xchg
cmp
add
ljmp
aas
xor
add
mov
add
ret
clc
sahf
xor
add
clc
daa
clc
pop
push
add
inc
add
mov
add
out
jno
add
add
cmp
push
add
xchg
sbb
push
clc
and
add
daa
clc
leave
popf
sub
inc
add
cltd
into
insb
sub
add
adc
add
clc
cmp
xchg
pushf
pop
xor
add
add
sub
xlat
mov
and
mov
lret
loopne
jbe
add
xlat
js
pop
neg
jnp
clc
daa
clc
mov
jnp
scas
cmp
pop
ss
ret
add
add
test
add
cld
jmp
ja
call
add
mov
aas
lods
cmp
add
add
or
pop
dec
clc
fucomi
jle
cmp
in
fcoms
add
and
add
xlat
arpl
add
rorl
add
mov
das
or
clc
dec
ret
pop
xchg
lods
dec
inc
add
stc
cltd
aam
shr
xor
add
clc
jns
inc
clc
cwtl
insl
inc
add
push
clc
cmp
adc
clc
mov
mov
clc
cltd
add
add
xlat
jb,pt
add
add
or
clc
xchg
mov
clc
daa
clc
cmp
outsb
xchg
dec
mov
cmpsb
clc
lea
add
add
mov
out
inc
add
jl
stos
sahf
test
jmp
push
scas
mov
gs
xchg
aam
out
dec
mov
add
add
cmp
push
cmpl
cld
jmp
movsb
pop
imul
add
mov
aam
add
push
call
cld
jmp
sub
add
jle
fs
sti
ljmp
scas
enter
out
ja
xchg
push
add
ss
ret
push
pushfw
pop
std
push
ret
clc
dec
aam
mov
clc
dec
das
stos
inc
add
sub
scas
decl
fldt
lcall
jmp
mov
outsl
ja
in
sub
out
xchg
sub
outsb
cmp
add
add
jne
cld
jmp
push
icebp
cld
jmp
lods
cmp
cmp
add
xbegin
push
add
mov
clc
jle
mov
stc
call
sub
sahf
pusha
add
fistpll
adc
add
xor
add
add
ror
in
cmc
fsubrl
lock
jp
daa
clc
adc
add
ds
jge
mov
ret
clc
std
adc
add
cld
jmp
push
sbb
fs
outsb
add
add
aas
cmp
push
add
xor
add
add
add
popa
add
mul
clc
mov
clc
xabort
jae
add
xchg
sub
jp
clc
xor
add
clc
xchg
lock
clc
sbb
add
mov
inc
clc
imul
xbegin
xor
add
clc
sbb
clc
sub
add
adc
add
clc
and
clc
daa
clc
fiaddl
add
loope
pop
xchg
cmp
cmp
stc
scas
pop
int3
mov
mov
mov
stos
in
loopne
repnz
nop
inc
clc
cmc
das
inc
add
jo
add
clc
in
or
dec
dec
and
or
ja
aad
test
add
mov
add
insl
pop
and
add
fcomps
jmp
clc
pop
pop
addr16
sar
dec
test
sar
aam
pushf
xchg
push
add
inc
clc
cmpsl
clc
es
inc
clc
fs
mov
in
shrl
sbb
or
cld
jmp
fs
mov
cmp
clc
js
ljmp
stos
int3
lahf
mov
mov
clc
jmp
stos
sub
clc
sub
clc
pop
call
jmp
cwtl
aaa
test
clc
cmp
add
rcpps
add
clc
xor
add
sti
mov
push
add
cld
mov
testb
and
adc
add
add
clc
jl
adc
clc
cmp
je
clc
fs
inc
clc
pop
and
add
clc
mov
pop
add
std
dec
or
add
mov
dec
icebp
iret
int3
lret
iret
sar
add
shl
clc
push
add
stos
je
clc
repnz
outsl
fidivs
clc
dec
sti
scas
test
cltd
dec
loop
mov
clc
push
clc
xchg
repnz
enter
std
and
add
in
out
in
pop
cmp
js
clc
dec
mov
add
or
mov
sub
clc
adc
add
adc
add
clc
sti
dec
mov
es
mov
sar
add
add
nop
mov
jmp
sub
and
jg
xor
add
mov
ss
ret
push
mov
into
inc
add
sub
inc
clc
pop
cmp
add
imul
inc
clc
test
add
add
nop
sub
and
add
sub
fidivl
in
cli
push
std
and
add
or
clc
sbb
add
cli
xor
add
lods
incl
sub
addb
add
sar
push
add
fwait
sbb
inc
clc
push
ljmp
sahf
xor
add
and
add
add
scas
pop
clc
test
clc
dec
dec
daa
clc
jecxz
lret
ret
clc
ljmp
out
shlb
enter
xchg
in
jge
clc
inc
clc
cmp
add
add
inc
add
push
clc
ds
mov
adc
jmp
jge
add
push
jge
inc
cld
jmp
sub
pop
mov
into
push
clc
mov
push
cld
jmp
xor
adc
xchg
mov
pop
lock
call
xbegin
ja
js
clc
mov
clc
lret
add
push
add
data16
and
add
in
cmpsl
clc
lahf
incl
jne
cld
jmp
es
xchg
cwtl
xlat
ja
push
clc
push
push
ss
ret
fwait
add
sbb
add
repz
scas
mov
outsl
imul
or
movsl
clc
xlat
jnp
add
add
xabort
clc
cmp
clc
adc
add
clc
sub
add
add
jle
data16
and
xchg
ret
clc
xchg
mov
daa
clc
insl
mov
add
add
mov
sbb
clc
xchg
add
ljmp
mov
clc
frstor
clc
aas
stos
test
js
mov
bound
add
add
cmc
sbb
pusha
add
add
or
add
loopne
data16
and
add
jl
cmpsl
clc
mov
clc
adc
cld
jmp
adc
repnz
repz
clc
and
add
clc
mov
add
sbb
add
inc
add
xchg
pop
arpl
add
mov
mov
scas
dec
cmp
add
dec
mov
push
push
mov
lock
xor
outsb
xor
ds
add
pop
mov
add
popa
add
outsl
iret
push
clc
mov
fs
and
add
clc
das
lods
xlat
dec
cmp
add
cmp
push
add
xor
add
add
xabort
clc
jl
xor
add
add
enter
sub
pop
jmp
clc
pusha
add
out
push
stc
out
and
add
jp
mov
jbe
clc
mov
cmp
cmpsl
clc
xchg
inc
add
js
clc
adc
add
sar
mov
adc
add
cmp
cld
jmp
xchg
adc
mov
add
shlb
jmp
or
push
pusha
add
dec
cmp
push
jmp
scas
cmp
inc
add
lock
iret
dec
nop
fmuls
clc
daa
clc
ds
in
and
add
leave
stos
movsl
clc
call
add
rorb
xchg
dec
cwtl
xlat
fs
aad
or
push
cmp
add
cld
jmp
pop
inc
and
add
jae
add
dec
xor
add
div
xchg
stos
push
jle
clc
add
add
aad
fcomps
loop
repnz
cmpsb
clc
je
add
dec
into
mov
clc
fwait
jae
add
sbb
add
dec
cmp
clc
test
jnp
adc
add
sahf
pop
mov
add
pop
push
add
cs
loope
dec
mov
add
sub
clc
jne
add
stos
xabort
clc
cwtl
xchg
sub
mov
clc
cmp
cmp
add
add
add
mov
cmp
add
jmp
fwait
sub
inc
add
cwtl
pushf
xor
add
pop
lcall
sub
push
add
sarb
jne
add
inc
clc
add
add
add
imul
add
es
out
cwtl
inc
add
sub
fmulp
imul
add
xchg
out
clc
cltd
pop
or
jnp
xchg
add
add
clc
unpcklps
mov
push
sub
je
or
clc
cmp
add
add
fstpt
add
clc
aam
add
movsl
clc
mov
lea
cmp
cmp
add
int
clc
rcll
lock
daa
clc
iret
mov
cmp
pop
bound
add
clc
sbb
add
xchg
or
xabort
clc
jae
add
idivb
add
add
push
clc
popf
add
imul
mov
jmp
das
popa
sbb
add
xchg
insb
stos
lret
dec
and
add
add
add
clc
cmp
add
jae,pt
add
cmp
pop
push
das
push
movsl
clc
push
sahf
lahf
inc
add
lahf
clc
add
add
jg
add
dec
mov
push
sbb
scas
sub
aas
sub
fsubr
pushf
enter
stos
sbb
jae
jge
push
sub
cmp
cmp
mov
add
insl
jmp
push
sahf
lahf
xlat
cld
int3
mov
add
add
mov
add
mov
cs
in
imul
outsl
dec
fidivs
add
pop
inc
clc
adc
add
jge
clc
push
xchg
push
cld
jmp
loop
jmp
mov
sub
push
push
cld
jmp
scas
outsb
mov
sub
pop
mov
cmp
clc
xchg
xor
jb
add
lods
mov
sbb
sub
cmovg
outsb
loop
jge
fimuls
jge
xchg
pop
aad
add
mov
mov
add
data16
xor
add
push
add
xbegin
cld
jmp
pop
sub
mov
push
clc
ret
dec
jle
std
rcll
cmpl
jb
ljmp
iret
test
jg
clc
dec
pop
clc
pusha
add
leave
ret
clc
pop
sub
mov
clc
or
mov
adc
add
clc
mov
add
cmp
mov
mov
adc
add
add
dec
sub
add
scas
lret
sub
enter
and
in
fsub
clc
xchg
out
cmp
sar
jmp
mov
xbegin
xchg
or
mov
cmp
xchg
push
cld
jmp
or
add
add
mov
in
cmc
ljmp
sub
rolb
scas
mov
push
add
in
fmul
jnp
cmc
sbb
jbe
in
mov
push
pop
xor
add
add
pushf
adc
js
pusha
cld
jmp
andb
mov
adc
add
clc
pop
cmp
adc
mov
arpl
add
xbegin
mov
add
push
add
out
jle
add
jecxz
inc
clc
sbb
jb
add
clc
sbb
jge
cld
jmp
dec
or
outsb
and
mull
clc
cmp
pop
cmp
add
mov
dec
rcr
pop
mov
loop
imul
movsl
clc
aam
clc
das
sbb
sub
add
sub
push
insb
mov
add
cld
jmp
popa
aaa
lea
adc
add
add
movsb
clc
out
ret
push
outsb
xor
add
test
mov
test
clc
inc
clc
sahf
adc
add
mov
add
aam
mov
fdivp
call
add
fstpl
add
sub
push
fcoml
cmp
cmpsl
clc
cli
into
loopne
sbb
add
cmp
add
es
or
clc
sbb
jmp
cmp
cmpsb
push
jmp
pop
fs
xor
add
add
xlat
jno
add
clc
out
push
out
xabort
add
aas
mov
nop
or
test
mov
pop
clc
fs
test
add
lock
add
inc
add
push
clc
dec
mov
sbb
mov
lcall
mov
cwtl
inc
clc
jmp
and
test
bound
add
mov
push
sub
clc
jmp
add
push
mov
add
add
jb
add
je
cmc
call
ficomps
jno
add
clc
sbb
jne
ss
ret
fwait
cmp
cmp
clc
clc
sar
imul
push
adc
sub
push
add
mov
sub
clc
jae
add
mov
in
xor
add
xabort
add
fmull
sar
pop
mov
xor
add
clc
test
cmp
and
sbb
cli
cld
jmp
xor
xor
sar
inc
clc
push
clc
cmp
imul
add
test
adc
mov
push
cld
jmp
inc
repz
add
add
add
cld
jmp
mov
in
lret
adc
xchg
decl
add
add
xor
clc
arpl
add
sahf
dec
iret
shlb
cmp
clc
cmp
xchg
mov
and
add
clc
ss
mov
jge
clc
fdivrs
sbb
leave
gs
lods
js
gs
pusha
add
test
outsb
outsl
ret
clc
in
and
add
pop
aad
in
adc
sub
clc
add
add
or
add
inc
clc
imul
clc
cmp
sub
add
add
jb
add
clc
pop
pop
push
in
fsub
clc
in
imulb
lea
clc
hlt
adc
clc
addr16
push
icebp
cld
jmp
pop
or
out
push
mov
cld
jmp
sub
jno
add
loopne
movsl
clc
xchg
aad
clc
test
std
scas
aad
inc
clc
and
leave
bound
add
std
clc
xchg
test
mov
clc
add
add
xchg
adc
add
clc
inc
clc
push
add
sarb
jmp
jl
clc
jo
add
add
je
mov
cmp
clc
mov
cmp
or
dec
sar
into
mov
clc
mov
cs
mov
sahf
pop
bound
add
clc
or
jmp
lret
aas
insl
xor
rcrl
add
add
sbb
xchg
clc
cmp
sbb
es
xchg
push
add
jle
pop
jb
add
xchg
sub
clc
test
clc
add
add
clc
cmp
cmp
push
sub
jbe
jmp
add
push
pop
cld
jmp
push
or
inc
add
push
add
mov
pop
leave
bound
add
xchg
daa
clc
sbb
gs
mov
lret
cmp
clc
jb
add
add
leave
sbb
std
xchg
ja
in
arpl
add
mov
add
in
and
or
push
add
add
add
movsl
clc
clc
xchg
in
in
and
cmp
add
fbstp
add
push
add
cwtl
pop
clc
cmp
add
das
xchg
insb
cmpsl
clc
add
add
cmp
clc
push
add
imul
xbegin
lret
stc
daa
clc
popf
nop
adc
add
xchg
inc
clc
dec
es
daa
clc
xchg
ss
lret
add
clc
cld
rcr
stos
aaa
fstpl
mov
ss
ret
push
sahf
add
je
xchg
clc
test
push
pop
cmp
add
mov
push
ret
sub
adc
add
add
sbb
add
daa
clc
cmp
loope
xchg
xchg
popf
int3
pop
inc
add
or
add
hlt
pop
clc
mov
or
dec
adc
out
pop
mov
add
movsb
clc
mov
clc
jmp
ja
cmp
or
clc
mov
imul
in
jle
clc
pop
inc
clc
insb
pop
clc
adc
add
imulb
push
out
incl
sub
insb
ret
clc
xchg
inc
add
pop
aaa
jae
add
lock
insl
pop
pop
mov
clc
cs
clc
add
add
add
ret
clc
in
add
add
add
push
lret
mov
or
clc
and
add
dec
pop
clc
popf
imul
add
add
loopne
gs
fidivs
add
clc
or
mov
add
xchg
test
inc
add
in
call
cmp
sti
add
add
add
lahf
push
push
add
xor
add
cli
cli
int3
movsl
clc
fdivr
cmp
sar
jbe
xchg
mov
mov
push
lods
xor
add
jne
clc
cld
push
add
jmp
movsl
clc
bound
add
in
inc
clc
clc
cmpsb
clc
sbb
sub
xbegin
add
jnp
add
mov
or
clc
jne
pop
sti
push
loop
add
add
clc
nop
cmp
mov
in
sahf
cmp
add
jecxz
sti
mov
add
xor
add
cwtl
mov
lret
and
fdivp
sbb
push
scas
cld
mov
popl
sbb
add
clc
shl
clc
cmc
xchg
loopne
mov
clc
mov
mov
dec
xor
adc
add
shlb
add
insl
fdiv
adc
add
clc
or
clc
cmp
jg
add
stos
sarl
add
clc
out
jge
jnp
out
jp
add
lods
sub
xchg
add
repz
xbegin
add
iret
out
pop
push
sbb
add
adc
add
adc
add
clc
cmp
xchg
cltd
pop
and
add
push
ret
jg
mov
pushf
sbb
jmp
or
push
xchg
xabort
add
scas
dec
cmp
clc
js
xchg
cmp
mov
add
mov
or
imul
hlt
and
cmp
add
cs
mov
and
jmp
sub
inc
add
mov
mov
add
enter
jb
add
add
add
adc
in
cmp
ret
jo
add
add
ljmp
xor
add
push
dec
xor
add
clc
pop
outsb
decl
ss
ret
cwtl
je
xchg
test
add
add
sti
jge
or
xbegin
adc
add
add
cmp
add
sar
adc
add
nop
fidivl
add
or
inc
add
out
and
inc
clc
out
std
sub
stos
mov
sub
mov
add
mov
outsb
int3
push
sub
call
push
add
bound
add
clc
xor
add
fsub
clc
or
add
sub
xchg
sahf
dec
mov
mov
dec
mov
clc
sub
add
out
arpl
add
clc
xchg
cmpsl
clc
fisttps
arpl
add
call
inc
add
cmc
cmpsb
clc
js
int3
scas
push
add
and
add
dec
cmp
call
dec
jo
add
or
cmp
mov
clc
push
out
pop
clc
jp
pop
clc
dec
cmp
jmp
ret
clc
insl
fwait
xchg
mov
inc
clc
inc
clc
mov
scas
fnsave
add
sbb
and
add
lahf
mov
clc
lods
incb
add
ret
cld
jmp
cmpsb
popa
sub
je
add
add
aaa
ds
lock
loop
sti
mov
insl
mov
add
in
pusha
add
aaa
pop
sub
decl
ss
ret
push
or
add
leave
mov
add
cltd
ficompl
xbegin
add
sub
cmp
clc
loop
jns
add
push
nop
lcall
push
mov
cmp
push
popa
cld
jmp
test
rol
clc
cmp
add
cmp
mov
xbegin
clc
outsl
pushf
mov
inc
add
dec
loope
dec
mov
add
mov
jnp
and
add
add
clc
aaa
mov
clc
pushf
in
out
lcall
add
jmp
sub
lea
adc
add
into
mov
mov
jmp
sub
and
clc
push
pop
push
add
fdivrp
cmp
add
or
rcr
insb
out
sbb
clc
pop
clc
dec
mov
add
mov
jmp
add
add
pop
rclb
clc
cltd
scas
aas
clc
pop
shlb
clc
ficompl
clc
sbb
push
add
mov
fcoml
add
add
xbegin
clc
cld
cmp
sbb
lret
hlt
xchg
pop
lods
push
mov
clc
das
cmp
clc
sbb
xchg
cmpsb
clc
out
and
add
scas
pop
clc
inc
add
data16
mov
jmp
and
dec
inc
clc
enter
add
xor
add
add
pushf
jo
add
je
clc
fstpt
add
add
dec
mov
clc
push
cmp
add
dec
clc
jns
int3
and
add
test
bound
add
hlt
jo
add
lock
scas
mov
in
repnz
push
add
jg,pt
push
movsl
cld
jmp
fs
scas
insb
mov
add
mov
cmpsl
clc
lea
nop
ret
js
mov
push
cld
jmp
sub
push
fcoml
pop
loop
mov
sbb
add
fwait
mov
clc
test
leave
fwait
leave
addr16
mov
add
add
add
cld
add
add
inc
add
sti
jle
add
sar
or
add
gs
xabort
pop
lret
stos
pusha
add
lock
outsl
mov
cmp
scas
and
aad
push
add
sub
jmp
push
fwait
inc
add
cmp
in
popa
add
xor
add
js
clc
mov
clc
mov
clc
xchg
movsb
clc
xor
scas
mov
jg
dec
out
nop
mov
popa
cld
jmp
scas
lea
push
sub
imul
clc
sahf
inc
add
cmc
clc
cmp
clc
das
jno
add
clc
mov
rcr
out
cmp
fiaddl
clc
stc
lods
pop
push
lea
ret
fwait
or
mov
dec
clc
sbb
jne
je
aam
lea
add
ja
add
out
fistl
and
data16
scas
jecxz
mov
fildll
push
add
sar
rclb
icebp
cmpsb
clc
add
addr16
clc
mov
xchg
sar
push
cmp
clc
cmc
adc
clc
inc
add
je
jl
cmp
add
add
fisubrl
adc
add
std
and
add
mov
ret
movsb
clc
mov
cld
jmp
dec
cmpsb
dec
push
clc
adc
add
mov
clc
xchg
push
add
xchg
mov
mov
fsubs
clc
out
lret
data16
mov
cmp
pop
clc
mov
clc
dec
fistpl
add
loopne
pop
add
add
or
add
add
jmp
sub
add
pop
cmp
sahf
pop
inc
add
outsl
clc
mov
int
push
int3
sarb
and
add
xchg
outsb
popf
in
pop
clc
jno
add
add
mov
sbb
jnp
fs
jb
add
clc
adc
add
add
repnz
sbb
add
movsb
clc
loop
shrl
clc
hlt
dec
pusha
add
arpl
add
add
test
or
int3
loopne
jne
jae
add
add
mov
xchg
adc
add
inc
add
mov
jmp
cld
jmp
sub
fstpt
lahf
pushf
faddl
add
add
add
mov
imul
cld
jmp
pop
mov
test
xabort
sar
cmp
imul
and
add
cwtl
jl
add
jg
ja
insb
mov
test
clc
push
clc
ret
clc
jl
inc
add
loopne
add
add
add
out
fs
ret
mov
aam
pop
dec
sub
decb
xchg
fisubs
add
cli
rcrl
jecxz
pop
sub
mov
and
add
clc
nop
popa
add
sub
mov
cld
jmp
lods
mov
push
fsub
clc
test
fcmovbe
jmp
add
add
add
add
sbb
clc
xor
add
clc
push
add
push
out
mov
clc
repz
or
cmp
rorl
loopne
addr16
std
pop
push
push
mov
in
sbb
add
clc
or
lock
notb
add
mov
dec
pop
mov
pop
cmpsl
clc
mull
xchg
dec
decl
inc
fcos
decl
push
out
cmp
js
mov
add
bound
add
das
push
loopne
xor
add
jmp
cld
jmp
test
test
cmp
pop
xchg
inc
clc
movsl
clc
into
push
sahf
movsl
clc
out
repnz
clc
imul
popf
data16
sub
mov
ret
jp
icebp
aaa
add
ss
ret
sub
push
push
add
cs
sbb
push
add
cld
jmp
inc
sbb
insb
out
push
add
lcall
sub
inc
clc
xchg
push
mov
sbb
mov
cld
jmp
test
sub
dec
push
add
cmp
dec
push
add
adc
add
add
add
push
clc
sar
clc
shrl
inc
add
rclb
stc
jne
lcall
mov
clc
dec
call
xchg
jns
rcll
add
cld
jmp
xor
cwtl
dec
cltd
jns
in
jg
clc
xchg
test
iret
jae
add
xor
add
movsb
clc
mov
fwait
in
jnp
add
dec
adc
add
sar
add
xchg
jbe
or
clc
dec
cmp
dec
dec
loopne
jp
push
clc
cmp
clc
popa
add
and
add
std
cmp
cmp
sbb
add
mov
mov
mov
cmp
mov
clc
sbb
clc
ficomps
adc
and
add
cld
jmp
sub
mov
movsl
clc
xabort
inc
add
mov
pop
es
xchg
scas
cltd
xor
add
inc
clc
sub
clc
cmpsl
clc
mov
jnp
aad
aam
daa
clc
xchg
popa
add
ljmp
clc
or
add
clc
mov
pop
dec
jmp
sar
std
push
mov
cld
jmp
ja
jno
fcoml
add
jnp
dec
ss
ret
sub
inc
push
inc
clc
pop
ja
es
pop
xchg
lea
add
add
add
dec
and
add
clc
sub
clc
jae
add
lret
sub
inc
clc
loop
xchg
mov
pop
stos
mov
sub
mov
clc
push
outsb
push
push
push
cld
jmp
sub
cmpsb
and
add
test
out
out
movsl
clc
cmp
and
add
clc
or
clc
and
add
push
add
cld
jmp
popa
fs
clc
insb
jnp
add
enter
inc
add
and
add
hlt
mov
push
out
sub
add
inc
clc
lret
pop
imul
push
ret
adc
sbbb
add
add
add
cmpsl
clc
in
sub
fcoms
add
mov
mov
ljmp
clc
gs
std
lods
fstpt
xchg
sbb
stos
leave
mov
stc
push
push
xor
add
add
add
mov
cmp
push
bound
ret
dec
test
adc
add
pop
cmp
insl
sbb
fsubl
mov
add
clc
sbb
mov
cmp
ret
add
sar
or
push
popf
mov
into
cmp
push
mov
cld
jmp
sub
insb
aas
bound
add
jmp
and
clc
xchg
lock
push
add
mov
and
add
add
add
xor
add
cld
jmp
xchg
loop
cmp
add
idivl
insb
adc
add
sti
jp
pop
cld
jmp
push
mov
test
call
dec
imul
xbegin
add
mov
mov
test
icebp
pop
clc
push
inc
clc
dec
add
add
add
cmp
add
add
test
pop
pop
mov
mov
dec
sbb
cld
jmp
add
aaa
sbb
clc
and
add
xor
add
testb
jmp
clc
mov
cmpsb
clc
or
fiaddl
add
sub
push
rep
cld
jmp
sub
clc
jno
add
cld
jmp
test
ja
in
test
push
lahf
call
roll
add
push
iret
fisubrs
cld
jmp
lea
or
je
inc
clc
mov
inc
add
aas
ljmp
clc
repnz
clc
ss
pop
addr16
xor
clc
or
xchg
xor
add
push
mov
add
sub
ds
and
adc
add
cmp
inc
clc
cmp
add
insl
sub
xchg
sbb
outsb
xchg
xchg
clc
cli
push
clc
into
std
mov
jns
sub
outsb
clc
add
add
mov
add
leave
sub
clc
cli
sub
stos
mov
xor
add
xor
add
cmp
fisubl
add
dec
sahf
fs
lea
clc
ret
clc
insb
inc
add
aam
clc
lea
mov
mov
sub
mov
add
clc
inc
clc
movsl
clc
xchg
jg
xchg
cld
jmp
sub
test
clc
cli
and
xor
add
add
mov
add
pusha
add
jp
and
add
add
mov
jbe
mov
test
rorb
xlat
push
mov
clc
jno
add
jl
xlat
xor
add
jmp
sub
test
add
push
push
ret
sub
xchg
cld
jmp
mov
add
cmpsl
clc
fmulp
popf
jb
add
inc
clc
leave
into
clc
mov
out
decl
sub
pop
dec
js
cli
ret
in
divl
fisubs
or
fiadds
xchg
xchg
pop
pop
movsl
clc
sub
add
leave
mov
push
push
ds
data16
mov
cmp
in
cmp
lret
cmp
add
add
sub
xabort
clc
test
fdivs
paddd
clc
pop
adc
sahf
enter
mov
fmull
ja
clc
dec
or
fldcw
int3
test
mov
push
add
icebp
sub
add
jmp
subb
inc
clc
shr
psllq
add
dec
enter
or
add
clc
xor
add
adc
add
add
jmp
add
mov
dec
aad
xchg
dec
cmp
or
clc
cmp
mov
add
xor
lods
mov
xchg
push
add
pop
stos
cmp
adc
add
imul
pop
push
add
je
mov
fists
add
add
jmp
aas
sahf
cmpsw
clc
dec
push
clc
push
pop
fcomp
ss
push
cld
jmp
sub
add
stos
inc
add
sbb
adc
clc
in
push
add
lahf
lret
gs
rclb
sar
clc
add
sbb
add
jl
add
mov
cmp
add
jns
inc
clc
jbe
clc
mov
out
push
decl
cld
jmp
xchg
dec
nop
mov
push
jno
dec
addr16
notb
add
in
or
xor
add
add
lahf
push
add
loope
std
fistl
imul
cld
jmp
push
add
sbb
add
popa
add
mov
clc
adc
add
sahf
lret
mov
js
test
stc
inc
clc
push
push
mov
inc
add
inc
push
les
add
cmp
add
ficoms
and
dec
xchg
xchg
push
add
fidivs
pop
mov
clc
pop
push
add
lret
lods
pop
loopne
stos
dec
scas
out
push
jns,pn
das
rorb
pop
je
cmp
mov
adc
clc
in
xor
add
in
mov
cld
jmp
or
mov
jge
ljmp
add
or
clc
mov
lods
clc
mov
inc
add
push
xor
add
jae
add
lcall
push
mov
movsl
add
add
dec
inc
clc
pop
ret
clc
pop
or
add
es
in
jno
add
clc
lods
mov
adc
clc
or
ret
cld
jmp
adc
cmpsb
clc
pop
sub
push
std
xabort
xor
add
mov
cld
jmp
sub
clc
enter
inc
add
lret
add
add
into
add
add
clc
stc
dec
cmpsb
clc
cmp
add
push
cmp
aaa
sar
jo
add
mov
ss
ret
adc
push
add
adc
clc
mov
jmp
clc
xor
icebp
fnstenv
add
jae
add
cmpsl
clc
push
mov
aam
clc
call
add
sbb
mov
int
clc
dec
nop
ljmp
sbb
xor
add
add
xchg
pop
cmpsb
clc
pushf
fwait
jecxz
test
jb
add
test
and
add
dec
pop
scas
insb
mov
clc
int
sub
pop
aam
cmp
ss
add
cmp
aaa
pop
mov
call
add
add
xor
add
push
add
jmp
or
mov
in
clc
adc
cmp
in
push
clc
push
xchg
push
pop
cltd
or
test
clc
nop
mov
add
add
in
xchg
mov
cld
jmp
lea
dec
call
cld
jmp
pop
sbb
add
int3
dec
stos
xor
add
add
push
add
rcr
in
push
call
clc
lret
scas
jno
add
sti
enter
add
add
sub
clc
outsb
dec
mov
mov
mulb
add
loopne
outsb
dec
insb
adc
add
repnz
std
repz
pop
fneni(8087
clc
pop
cli
data16
imul
or
loop
mov
lods
out
cmp
add
in
bound
add
add
clc
sub
add
clc
lock
dec
outsl
pop
inc
clc
mov
cld
jmp
clc
xbegin
loopne
mov
and
add
pusha
add
pop
or
add
bound
add
clc
mov
lea
add
add
ds
mov
add
pushf
mov
leave
lcall
add
add
clc
push
add
jnp
int
clc
loopne
cmp
add
add
add
popf
add
add
pop
repnz
mov
scas
sbb
fwait
cmp
pop
adc
add
mov
mov
add
add
and
test
mov
sbb
decl
sub
mov
clc
aam
clc
clc
dec
enter
xabort
clc
fisubrs
mov
lock
test
outsl
push
ret
xchg
mov
clc
and
add
ss
add
add
add
test
daa
xchg
ljmp
sbb
add
test
pop
pop
scas
jl
clc
dec
dec
and
add
pop
mov
adc
outsb
jp
clc
hlt
inc
add
or
ja
jmp
clc
movsb
clc
cmp
mov
fstl
add
daa
clc
roll
add
test
add
repnz
add
add
add
cmp
and
jmp
sub
sbb
xchg
in
ret
mov
clc
mov
clc
testl
fisttpll
add
sti
or
inc
add
lods
icebp
add
add
idivb
sbb
jmp
jno
je
pop
insl
push
clc
fdiv
nop
mov
aas
or
inc
add
je
lahf
cmp
clc
mov
cmp
add
push
add
ficoms
or
jmp
je
sub
add
pop
incl
jno
call
add
inc
add
pop
add
add
mov
stos
cmp
clc
mov
add
repnz
clc
inc
clc
std
jnp
cmp
psubsw
adc
add
movsl
clc
pop
movsl
clc
int
gs
bound
add
xchg
push
inc
clc
sbb
mov
mov
inc
add
decb
clc
jo
add
add
add
pop
leave
cs
clc
pushl
shlb
push
ret
test
cli
dec
xor
add
add
sbb
jmp
sahf
xchg
push
sub
add
inc
clc
mov
cmp
clc
in
loope
jno
add
clc
sub
or
jmp
sar
and
add
xchg
lcall
clc
cmp
clc
cmp
mov
add
cmpsb
clc
pop
outsb
test
ror
imul
fsubs
scas
clc
mov
or
jmp
sub
add
mov
cli
jns
lods
popa
add
out
mov
pusha
add
jge
clc
sbb
movsb
cld
jmp
jge
push
or
rcll
add
dec
sub
inc
add
sti
dec
hlt
mov
clc
movsl
clc
stos
js
clc
cmp
or
add
lods
ss
ret
cmp
jp
clc
ds
pushf
mul
clc
xchg
test
push
clc
sahf
or
adc
add
mov
cld
jmp
xchg
jmp
jmp
clc
xchg
gs
icebp
dec
jbe
cltd
and
add
ds
add
mov
clc
inc
add
cmp
clc
mov
push
ret
push
mov
mov
push
ret
jg
insl
daa
clc
out
pusha
add
or
add
mov
arpl
add
add
jmp
inc
clc
push
clc
loope
mov
add
outsl
stos
xchg
in
jae
add
xor
clc
mov
lret
mov
add
add
xchg
pop
pop
jno
add
add
add
mov
xchg
sti
leave
and
add
sub
add
pop
mov
push
lahf
ljmp
inc
inc
int3
push
loopne
bound
add
out
cmpsb
clc
sbb
jmp
sub
dec
pop
lea
add
add
dec
cmc
or
clc
fcomp
testb
xor
std
cmp
add
sahf
cwtl
cmp
lea
add
cld
and
add
adc
add
mov
push
popa
add
xor
add
cmp
add
cltd
add
add
add
dec
stos
loope
xbegin
loop
xchg
pop
sahf
push
sar
jnp
add
ficoms
xbegin
add
push
mov
dec
js
add
add
add
int3
inc
clc
lock
dec
cli
insl
stc
ret
clc
ret
sbb
cld
jmp
add
add
mov
cltd
pop
aas
push
add
mov
ljmp
cld
jmp
jge
add
clc
mov
jmp
clc
idivl
int3
and
add
jle
lods
mov
add
mov
add
clc
lods
jmp
pop
pop
loop
xor
add
leave
pop
clc
out
jno
add
add
inc
add
movsb
clc
mov
mov
cmp
mov
cmp
jmp
sub
dec
popf
push
xchg
push
clc
and
fnstenv
mov
mov
int
cld
enter
xchg
xchg
fs
dec
dec
xabort
movsb
clc
test
sahf
mov
sub
adc
add
cmc
dec
js
xchg
test
fs
jle
scas
sub
out
stc
push
insb
lcall
push
mov
inc
add
sar
outsb
test
fistl
repz
jmp
push
sbb
in
adc
dec
sbb
cld
jmp
insb
xor
sub
xchg
lods
sahf
out
fildl
clc
mov
add
movsb
clc
icebp
inc
clc
mov
clc
pop
popa
add
cli
test
sub
cmp
clc
xchg
shl
clc
or
cld
cmp
leave
sbb
dec
icebp
fisubrl
inc
in
jmp
outsl
sub
jge
cmp
clc
aad
clc
inc
add
test
pop
dec
imul
sub
out
or
test
mov
loop
cwtl
xor
add
clc
push
popf
cwtl
cmp
push
add
dec
aas
mov
pop
push
add
jmp
push
pusha
add
mov
add
mov
xor
outsl
addr16
mov
clc
sar
clc
ficompl
clc
mov
clc
movsb
clc
jmp
push
ss
in
cmc
faddl
add
test
cmp
add
mull
add
mov
fs
clc
rorl
sbb
clc
testb
ljmp
lahf
dec
cmp
repz
add
add
add
je
mov
add
nop
fisttpll
dec
fisttpl
stc
pop
xchg
cmp
clc
cs
fadds
add
das
divl
test
sbb
dec
sete
push
out
cli
fwait
in
push
inc
clc
mov
clc
push
jae
add
sub
or
imul
iret
adc
add
sub
add
pop
mov
jne
popf
cmp
mov
and
mov
cmp
clc
xchg
sbb
xchg
int3
aam
add
add
add
or
add
jmp
sub
filds
clc
mov
popa
cld
jmp
cmp
push
sub
add
sub
or
outsl
movsl
clc
pop
push
inc
clc
push
add
push
mov
mov
cmp
dec
jle
jmp
or
stos
arpl
add
lret
clc
in
mul
clc
js
xlat
pop
sar
stc
nop
mov
add
imul
jmp
pusha
add
in
sub
cmc
pop
xbegin
clc
and
add
sub
add
lock
add
fildll
lcall
clc
data16
jbe
clc
filds
clc
btc
cmp
mov
scas
dec
pop
mov
clc
lods
outsb
xor
add
ljmp
int
jnp
mov
xor
add
add
mov
add
push
imul
and
add
aas
mov
test
push
mov
pop
mov
xor
ljmp
sub
add
sbb
jno
add
add
adc
add
add
and
add
add
add
push
add
cld
jmp
sub
jg
dec
push
imul
pop
mov
add
addr16
stc
cmc
outsl
div
js
mov
mov
pop
cmpsl
clc
adc
add
cmp
mov
clc
fucomip
sbb
inc
clc
fdivr
outsb
cmp
mov
sub
or
iret
or
push
jo
add
sbb
clc
xor
add
clc
das
stos
mov
daa
clc
xabort
aaa
dec
leave
test
inc
add
cmp
pop
mov
jnp
xor
add
lock
mov
or
lods
push
mulb
add
in
jg
push
clc
xor
scas
rep
add
add
ds
clc
clc
sbb
add
insb
rorb
repz
sbb
jg
fiadds
clc
std
outsb
pop
insl
shl
clc
mov
inc
add
adc
add
and
xlat
imul
mov
add
inc
add
add
add
adc
add
mov
inc
clc
scas
xor
add
cmp
sub
clc
push
loope
sbb
test
inc
add
int
std
xchg
sub
sbb
cld
jmp
das
sub
and
add
mov
in
add
adc
add
add
jns
lock
jmp
clc
iret
out
xlat
int3
lret
mov
cmp
adc
add
xchg
sar
aam
xchg
xor
add
and
movsl
clc
push
add
push
bound
add
clc
loop
mov
add
add
add
jge
mov
add
add
add
out
int3
sub
add
pop
pop
cmp
clc
pushf
push
clc
call
mov
push
rolb
mov
push
add
xbegin
mov
add
cmp
cltd
outsl
cmp
clc
fcmovb
clc
add
xchg
std
mov
addr16
and
add
into
test
sbb
pop
xor
add
clc
add
add
lods
sbb
add
add
cmp
xchg
mov
mov
mov
jbe
lods
pusha
add
cld
fdivrl
data16
push
add
push
cld
pop
sub
dec
or
xlat
jmp
out
dec
lret
adc
add
jmp
push
clc
sti
aad
add
add
clc
jb
add
cmc
shl
clc
cmp
addr16
ret
clc
adc
sub
and
add
jbe
cld
jmp
inc
sub
icebp
stc
sub
cmp
mov
clc
sub
adc
add
rol
clc
xchg
xchg
test
lret
add
in
sbb
out
sub
clc
sbb
xor
add
add
test
add
adc
add
dec
ja
cmp
pop
je
inc
add
sar
add
xchg
in
xchg
test
out
pop
cmp
popa
add
mov
clc
add
add
clc
fsubrl
xchg
popl
add
sub
jle
add
cmc
ljmp
add
out
jnp
in
repnz
xor
add
add
jg
add
clc
cmp
aas
pop
adc
add
cmp
clc
pop
clc
push
mov
push
xor
daa
clc
nop
pop
mul
clc
inc
add
pop
adc
add
rol
clc
pop
popa
add
test
aaa
dec
adc
imul
arpl
add
add
paddusb
clc
loope
sbb
clc
xlat
dec
cli
cs
add
push
sbb
add
and
lods
enter
cmpsb
clc
push
add
mov
clc
test
adc
mov
add
jmp
fwait
aas
sub
pop
fisttpl
jmp
es
enter
mov
test
inc
add
das
scas
sar
clc
push
add
ja
insl
cmp
clc
out
mov
inc
clc
jns
outsl
repnz
clc
jg
clc
test
cmp
sub
add
test
jle
fisttpl
clc
test
xchg
add
add
add
mov
xchg
repnz
push
gs
mov
clc
cmpsb
clc
and
add
sbb
jmp
or
and
add
add
pushf
sti
fwait
aaa
dec
sbb
clc
adc
clc
add
add
add
inc
sub
jmp
je
lods
sti
dec
cmp
clc
mov
sub
clc
cmp
dec
imul
call
xor
add
cmp
cld
jmp
fwait
lahf
fbld
insb
flds
out
xor
add
mov
clc
int
clc
inc
add
movsb
clc
aas
mov
add
mov
shlb
add
clc
dec
xchg
inc
clc
sbb
add
pop
dec
inc
add
push
mov
movsb
jo
lcall
sbb
mov
lea
xchg
cmp
clc
jmp
add
mov
sub
jl
mov
jl
lcall
clc
mov
clc
inc
clc
adc
mov
fs
popf
jg
insb
clc
jns
add
loope
es
xchg
push
mov
ljmp
inc
clc
pop
xor
add
adc
add
adc
add
insb
mov
push
in
xchg
jge
clc
sub
jae
add
add
jp
cmp
inc
clc
ljmp
add
lcall
clc
mov
bound
add
lcall
clc
jmp
jno
add
mov
cld
jmp
das
imul
clc
xor
add
add
dec
cwtl
mov
ljmp
pop
xchg
sbb
cld
jmp
adc
add
clc
sahf
insb
add
call
addr16
test
adc
pop
inc
clc
ds
clc
jle
pop
clc
lahf
mov
dec
shrb
add
add
add
into
aad
push
test
inc
clc
cmpsl
clc
ret
clc
fs
dec
movsl
clc
test
clc
or
jbe
add
out
out
pop
adc
add
lods
repz
add
clc
inc
add
sub
add
mov
clc
inc
clc
bound
add
clc
lcall
jmp
aas
sub
jp
stos
jmp
add
mov
clc
stos
or
clc
and
mov
mov
addr16
jae
add
mov
inc
add
cltd
adc
clc
rclb
add
sub
add
jl
clc
inc
add
in
test
cmp
clc
enter
add
cmc
cmp
clc
and
cmpsl
clc
movsb
clc
es
mov
clc
cmp
add
add
cmp
add
add
clc
inc
clc
js
mov
xor
cld
jmp
xor
and
pop
mov
add
cmp
ja
clc
sarl
jmp
sub
inc
mov
je
clc
sti
ret
clc
test
and
add
in
and
add
add
out
fisubs
add
push
add
mov
add
flds
add
clc
push
clc
adc
clc
pop
inc
add
mov
std
mov
imull
sbb
push
adc
jmp
nop
ja
mov
add
jne
adc
add
clc
pusha
add
jecxz
in
leave
sti
fxch
sar
add
mov
add
cli
sub
xlat
cmp
clc
push
push
jle
clc
mov
ja
clc
mov
clc
dec
pop
lcall
rcll
add
int3
leave
cmp
add
dec
jns
gs
mov
call
fisubl
adc
add
clc
pop
xor
add
movsb
clc
inc
clc
pop
lods
outsb
xabort
push
stos
pop
mov
clc
mov
clc
and
sub
bound
add
add
pop
cmp
clc
cmp
adc
jmp
movsb
movsb
ds
add
sti
fisubs
clc
in
dec
jae,pn
add
xchg
sbb
xchg
insb
lock
cmpsb
clc
std
cmc
jecxz
adc
or
xor
add
inc
add
push
clc
push
sub
mov
out
inc
add
xchg
daa
clc
jnp
sbb
loopne
push
add
mov
add
bound
add
bound
add
jmp
jge
aaa
cmpsb
gs
testl
fildll
xor
add
adc
add
add
inc
add
pop
aam
clc
popa
add
fdivs
cmc
push
mov
cmp
cld
jmp
je
dec
lods
std
insb
dec
xchg
or
test
data16
and
xchg
add
jecxz
mov
xchg
sub
neg
add
add
insb
lcall
add
add
jp
jne
outsl
in
cltd
in
and
add
jne
ss
clc
xchg
xchg
imul
mov
gs
testb
lahf
stos
pop
mov
clc
inc
add
js
add
pop
mov
out
ljmp
ja
or
add
out
dec
mov
cld
cld
mov
fiadds
xor
clc
stos
cmp
test
add
mov
add
add
out
jg
dec
mov
sar
cmp
pop
ds
test
clc
js
clc
lods
out
rolb
mov
inc
clc
ret
je
inc
clc
push
add
pop
adc
add
nop
sub
stc
test
cld
jmp
popa
add
inc
add
xchg
pop
pop
cmp
clc
sti
movsl
clc
clc
or
lods
inc
clc
jmp
cmp
mov
call
push
mov
cld
jmp
cmp
cltd
cmpsl
clc
mov
cld
jmp
lea
jb
add
ljmp
inc
add
mov
add
in
ss
add
loop
xchg
mov
dec
jp
repnz
jne
xchg
repnz
add
jge
bound
add
clc
cmp
add
jg
clc
pop
cmp
clc
mov
jle
sar
jmp
bound
add
clc
fisubs
cmp
add
clc
jl
clc
jns
fs
jp
sti
fsubrl
dec
sbb
adc
add
clc
and
add
push
add
adc
clc
divb
sbb
clc
add
jg
mov
dec
mov
sbb
jmp
or
sbb
pop
pushl
and
dec
out
cld
jmp
sarl
sub
pop
cltd
fistps
push
ret
cwtl
or
sub
cmp
clc
js
ss
cld
cmp
add
jnp
dec
insl
fdiv
imul
clc
das
dec
sbb
add
and
add
in
or
in
inc
lock
jbe
mov
xchg
repnz
jmp
xor
add
mov
gs
jmp
das
xor
add
mov
hlt
test
pop
cmp
add
push
mov
lcall
sub
add
aam
loop
pop
fs
push
out
pop
ret
clc
ffree
clc
scas
outsl
leave
aad
sbb
mov
clc
lret
clc
add
add
add
ljmp
or
push
add
popa
add
fildll
cmp
je
mov
add
add
mov
sbb
push
in
push
ret
popa
aas
add
lahf
lods
cmp
clc
push
pop
clc
in
cli
mov
push
add
rcrl
jbe
add
add
cmpsl
clc
lret
push
add
adc
add
inc
clc
scas
out
fadd
clc
stc
negb
adc
add
clc
add
add
je
lret
jno
add
mov
cld
jmp
push
adc
ljmp
iret
ds
add
pop
push
add
mov
push
out
jge
in
lock
ficompl
psllw
add
add
test
push
jg
clc
cmp
cmp
test
push
mov
jmp
fisubl
add
in
sar
inc
add
sahf
es
dec
cmp
imul
clc
fisttpll
push
add
scas
pop
dec
jbe
or
loope
push
clc
adc
add
ja
loopne
push
outsb
test
sub
sbb
jae
add
data16
daa
clc
aas
fadds
sbb
add
sbb
add
scas
mov
push
cld
ljmp
sahf
sbb
and
pop
lahf
or
pushl
ss
ret
dec
sbb
push
add
sub
xor
add
add
xchg
dec
cmp
clc
sbb
mov
clc
shrl
inc
cld
jmp
sub
dec
das
cmp
outsb
sar
rclb
pop
sbb
clc
cwtl
jp
push
aam
pop
sbb
clc
adc
add
clc
scas
iret
enter
mov
mov
js
xchg
jmp
daa
clc
sub
lahf
in
in
add
repnz
add
jne
cmovne
push
clc
imul
jnp
popa
cld
jmp
mov
aas
sub
xor
add
jbe
clc
cld
cli
and
add
aas
add
add
add
outsl
movsb
clc
in
insb
mov
clc
outsl
add
add
inc
add
in
inc
clc
mov
lret
add
add
add
and
add
sti
cli
test
add
pop
mov
mov
popf
call
xchg
pop
fwait
dec
test
lret
es
sahf
mov
sub
icebp
mov
jmp
sub
add
add
lods
clc
icebp
adc
add
cmp
fistps
clc
jp
clc
jno
add
addr16
push
adc
add
add
push
repnz
pop
ret
jo
add
mov
dec
push
add
pop
jo
add
and
add
jno
add
adc
imul
es
sub
xchg
push
dec
xchg
push
pop
push
push
add
lock
pop
pop
mov
push
push
add
mov
clc
jl
clc
add
add
clc
jns
clc
sar
fcmovnu
movsb
clc
push
cld
jmp
data16
add
xchg
push
add
adc
add
insb
fsub
clc
test
lods
push
in
dec
popf
mov
pop
push
leave
push
add
add
fnstenv
add
and
add
test
mov
add
add
dec
mov
add
mull
add
imul
cmp
dec
shl
inc
clc
or
push
add
mov
jae
add
clc
mov
icebp
inc
add
inc
clc
dec
clc
outsl
repz
add
add
pop
mov
daa
clc
sbb
jmp
push
aas
fs
clc
movsb
clc
js
add
push
add
add
dec
jne
add
or
add
add
pop
sbb
mov
scas
mov
div
xbegin
add
pop
mov
int
lret
je
add
push
add
pop
cmp
jns
gs
and
add
add
and
add
mov
add
cmp
push
add
fsts
lret
stos
adc
add
add
aad
kmovw
imul
jp
xchg
cmp
icebp
bound
add
jmp
add
sar
pop
dec
clc
sbb
ret
pop
out
repz
add
dec
fbld
clc
rclb
pop
std
sbb
push
cld
jmp
push
into
aam
clc
cmp
clc
imul
add
inc
add
jle
loope
jmp
clc
sub
test
jge
out
xchg
sar
clc
enter
lret
clc
jns
sar
pusha
add
or
add
aad
clc
stc
mov
decl
mov
push
cld
jmp
sub
stos
mov
mov
mov
mov
mov
jg
call
iret
or
clc
mov
jo
add
and
in
repnz
mov
push
adc
add
add
xor
add
mov
add
js
scas
mov
inc
add
cmp
clc
je
sbb
add
clc
dec
xor
and
mov
adc
jmp
sbb
sbb
jmp
xchg
pop
jg
cmp
js
shll
lods
cmpsl
clc
in
dec
xor
add
add
das
adc
add
add
jmp
add
add
add
add
pop
shll
add
inc
add
xor
add
test
sarl
mov
popa
add
sub
add
lret
fistpl
add
hlt
sar
mov
sub
movsl
clc
xchg
inc
add
aaa
mov
add
dec
xor
jns
xchg
testb
inc
add
dec
mov
jmp
es
jl
daa
clc
and
add
inc
cmp
jmp
sub
or
pop
clc
addr16
and
in
psubb
pushf
mov
cmp
scas
and
xchg
mov
mov
cld
jmp
sti
cmpsl
clc
cld
roll
sbb
fisttpll
nop
xchg
pop
push
add
pusha
add
and
add
loop
test
and
add
clc
ret
clc
movsl
clc
cld
mov
clc
mov
fistpll
adc
add
add
mov
add
clc
cmp
jae
add
cmp
dec
jle
ficoms
add
ljmp
imul
sub
xor
add
add
pushl
dec
xor
add
sub
pop
xchg
dec
lods
sbb
gs
mov
add
cs
and
mov
clc
and
add
scas
xor
clc
leave
loop
fs
dec
jp
inc
add
in
xor
add
jmp
clc
gs
imul
add
data16
aas
mul
clc
dec
jne
clc
nop
jo
add
dec
int
push
add
mulb
add
jne
push
mov
add
add
add
add
dec
push
scas
mov
clc
enter
clc
data16
and
inc
clc
ja
or
clc
xchg
not
test
inc
clc
mov
in
xchg
fsub
clc
push
mov
gs
push
add
cmpsl
clc
in
in
dec
bound
add
jae
add
pop
xor
add
add
jb
add
es
in
leave
jns
pop
ret
clc
push
add
mov
mov
cmc
icebp
ret
sbb
mov
fcom
int
in
sbb
add
lret
inc
add
xchg
jb
add
mov
clc
cld
aad
clc
mov
sub
clc
mov
add
add
add
mov
add
xchg
or
add
addr16
clc
cli
xchg
imul
clc
jle
add
sbb
mov
clc
xchg
mov
pushf
loop
push
add
add
add
mov
clc
adc
sbb
mov
paddsb
adc
add
mov
jnp
push
add
fcomp
sub
xchg
cmp
test
hlt
aas
sbb
mov
clc
mov
pop
clc
xor
ucomiss
lret
dec
cltd
dec
repz
data16
push
sar
mov
clc
add
add
clc
push
pop
pop
dec
push
jle
mov
clc
mov
stc
sub
in
jle
clc
int3
and
add
add
pop
stc
jle
mov
icebp
mov
add
roll
pop
std
lea
xor
aas
lcall
add
cmp
clc
adc
cmp
add
add
rorl
cmpsb
clc
ret
iret
iret
cmp
jne
ds
setl
add
imul
clc
push
sub
daa
clc
scas
push
add
push
clc
pop
inc
clc
clc
jl
add
scas
test
enter
push
pushf
xchg
daa
clc
lock
add
cmp
mov
sbb
jo
add
stos
xlat
out
jp
push
mov
clc
xchg
xchg
clc
cmpsl
clc
enter
clc
mov
add
add
jmp
clc
or
clc
xchg
rcrb
and
in
mov
and
sub
sbb
loope
jp
fstpl
add
outsl
imul
add
imul
int3
lea
add
add
or
xchg
sete
pop
and
add
jmp
insb
sub
clc
and
add
lods
dec
cld
cmp
add
sub
add
cwtl
sub
mov
xchg
push
outsb
dec
mov
and
dec
enter
add
in
sub
clc
mov
ror
add
add
lods
lret
add
jno
add
add
add
add
ret
push
add
movsl
clc
or
pushf
scas
jb
add
add
rorb
mov
je
clc
loopne
add
add
jns
clc
pop
clc
pop
es
push
in
test
cmp
clc
push
mov
xchg
jle
dec
and
inc
add
mov
call
add
dec
sub
sub
mov
in
inc
add
dec
jecxz
adc
add
movsl
clc
pusha
add
scas
into
mov
push
jns
clc
iret
daa
clc
arpl
add
clc
outsl
mov
push
add
mov
cmpsl
clc
aaa
insb
inc
add
mov
clc
push
clc
push
popf
push
add
in
adc
add
clc
xchg
push
shll
flds
clc
stos
loop
pop
mov
clc
xor
imul
add
jp
clc
or
sub
clc
enter
xchg
in
fisubl
add
add
aam
aas
push
clc
fbstp
add
mov
add
daa
clc
mov
clc
fcmovne
dec
pop
cltd
ss
insb
imul
movhps
popa
add
sahf
aas
dec
and
add
cmp
add
mov
or
inc
clc
xor
add
mov
pop
and
add
mov
cmp
dec
dec
clc
out
jno
add
inc
clc
xor
clc
fldcw
jbe
lret
addr16
icebp
jl
loope
dec
add
add
sub
sbb
into
pop
mov
loopne
cwtl
push
sbb
clc
test
fidivl
sar
inc
clc
xbegin
clc
movsl
clc
xchg
mov
mov
jmp
vmovaps
clc
sbb
jnp
iret
sub
sbb
in
iret
shlb
add
add
add
add
sbb
add
xchg
repz
clc
pushf
das
xabort
clc
lea
jns
add
or
sbb
clc
xor
add
aas
cmp
clc
fisubrl
push
jl,pn
jg
mov
xor
dec
mov
mov
ret
add
add
adc
add
add
cli
popf
pusha
add
mov
add
leave
movsl
clc
push
push
mov
add
ss
cmpsb
clc
pushf
ja
popf
clc
iret
or
lret
add
inc
add
jnp
add
clc
inc
add
xchg
cmpsb
clc
addr16
shlb
add
loope
jne
jp
mov
pushf
popa
add
in
test
add
sbb
add
out
sbb
push
adc
add
lret
addr16
xor
add
xor
add
gs
aas
inc
clc
jnp
test
sub
lret
inc
add
inc
clc
fsubs
clc
mov
sub
clc
popa
add
out
int3
mov
jnp
dec
lret
mov
push
clc
aam
mov
lahf
mov
ret
clc
mov
push
clc
xchg
add
outsl
fldcw
popf
xchg
sbb
dec
pop
fdivp
mov
mov
insl
pop
aas
jge
clc
scas
popf
pop
int3
jg
push
outsb
lods
adc
clc
outsl
inc
clc
jmp
or
outsl
mov
push
aad
add
sub
es
popa
add
ret
clc
pop
icebp
adc
add
aas
pop
imul
mov
clc
or
aaa
cmp
or
add
xor
add
add
std
scas
pop
push
add
fcoml
add
add
test
ss
popa
add
movsl
clc
insl
mov
js
clc
mov
std
cmpsb
clc
decb
outsl
ljmp
add
loope
xabort
add
fldl
jp
clc
xor
add
add
sahf
cmp
add
das
hlt
cmp
add
out
push
adc
add
clc
add
add
add
sub
stc
imul
stc
mov
clc
mov
or
mov
clc
mov
add
fisubl
add
test
loope
cmp
sub
cmp
clc
mov
add
xchg
inc
add
fadd
clc
movsb
clc
es
das
jb
add
jmp
and
add
add
mulb
add
cld
lea
ret
clc
mov
mov
add
popa
add
add
pop
fwait
add
add
add
xchg
loopne
aaa
out
push
add
sar
jmp
test
lock
cli
lret
mov
add
dec
jns
clc
push
cmc
cs
or
inc
add
sar
fsubl
add
cmp
jl
push
jecxz
push
xchg
enter
cmp
mov
clc
or
add
xchg
sub
push
clc
jge
clc
dec
lea
imul
add
cmp
or
hlt
add
xlat
jg
outsb
lock
sub
inc
clc
sar
clc
add
add
inc
clc
xlat
out
sub
pop
mov
mov
sub
mov
mov
and
add
push
add
jl
mov
repnz
testl
clc
sahf
icebp
inc
clc
mov
clc
js
clc
cmp
inc
add
add
add
aad
int3
and
add
cli
test
je
clc
push
fcompl
sar
jns
lock
sub
mov
fwait
ret
clc
leave
jb
add
add
add
xchg
adc
add
pop
clc
mov
psubusb
ds
sbb
sub
movsl
clc
xchg
cmp
clc
sbb
add
ret
lcall
push
adc
iret
call
add
insb
gs
pop
loopne
jo
add
lock
push
jg
add
add
xbegin
into
or
add
pop
in
inc
add
xor
add
lret
xchg
xchg
rol
clc
outsl
pusha
add
fcmovnbe
xlat
add
add
cwtl
jmp
pop
mov
sar
push
clc
xor
add
mov
inc
add
mov
or
add
es
cwtl
push
clc
jmp
mov
shlb
sub
clc
push
in
scas
sub
clc
lret
fsubr
jge
cmp
clc
mov
add
cmp
add
sahf
lea
add
dec
inc
add
ret
clc
test
in
repz
inc
add
cmp
jmp
add
cmp
clc
xchg
ds
add
adc
add
clc
xor
add
add
fwait
jno
add
lods
cmp
clc
arpl
add
ja
jns
mov
cmp
int3
and
clc
es
stos
mov
add
sar
mov
add
insb
inc
add
aaa
jle
or
clc
push
inc
clc
popf
sbb
jecxz
lret
or
incl
add
add
mov
inc
add
daa
clc
mov
add
lods
pop
mov
push
add
dec
xor
add
clc
mov
sub
push
add
test
cmp
inc
clc
test
mov
and
add
in
sub
sahf
push
xor
add
clc
daa
clc
jb
add
aad
add
sbb
movsb
clc
cmp
adc
add
or
scas
cmpsb
clc
arpl
add
stos
daa
clc
sahf
add
add
add
push
clc
mov
je
push
fs
xchg
jl
data16
loop
int
aad
add
frstor
push
add
mov
inc
clc
push
clc
into
mov
clc
imul
add
clc
mov
add
cmp
clc
dec
mov
daa
clc
clc
cwtl
sarb
add
repz
add
dec
mov
mov
clc
punpckldq
add
cmpsl
clc
xchg
xor
add
mov
clc
cmp
clc
adc
add
add
jbe
mov
cmp
cmp
add
pop
xor
add
add
pop
jge
clc
cmp
rorl
xchg
decl
ss
add
bound
add
repnz
in
sar
add
dec
adc
add
pop
add
dec
sub
cmpsb
clc
fstpt
clc
fldenv
add
and
add
add
aam
daa
clc
cmp
push
inc
clc
scas
mov
ret
clc
lcall
cmp
and
add
mov
add
pop
movsl
clc
fists
clc
pop
push
popf
push
fs
or
mov
clc
mov
push
add
inc
add
outsl
loope
popl
add
add
lret
sbb
insb
inc
add
dec
and
addr16
dec
insl
push
sub
clc
and
clc
push
fdivl
mov
add
negb
mov
int3
mov
adc
add
jecxz
in
fisubrl
jns
inc
clc
xabort
loopne
mov
test
mov
fsubrl
mov
add
dec
bound
add
mov
clc
add
add
add
add
cs
push
cltd
sub
sahf
movsl
clc
dec
out
jmp
sub
add
das
push
add
popl
add
bound
add
iret
dec
sar
add
mov
add
dec
sub
popf
ss
arpl
add
js
sbb
sahf
daa
clc
adc
add
aam
adc
add
aad
add
cmpsb
clc
arpl
add
in
jbe
xchg
sub
add
sub
add
mov
cpuid
clc
push
xchg
iret
mov
sbb
mov
inc
clc
mov
clc
lahf
dec
adc
add
pop
jno
add
clc
gs
jge
mov
loopne
mov
clc
cmp
add
add
jne
dec
aaa
mov
add
stos
push
rcrb
cmp
clc
clc
cmp
mov
in
aas
adc
add
clc
mov
cmp
arpl
add
clc
jge
add
xchg
sar
mov
clc
mov
add
sarl
xchg
gs
cmc
ja
push
add
add
mov
clc
testb
jmp
lret
in
clc
or
clc
dec
clc
ss
inc
clc
int
clc
cld
pop
ds
stc
push
add
cld
rep
adc
add
scas
pop
repnz
fnstcw
xbegin
pop
push
add
add
add
clc
cmpsb
clc
xchg
push
aad
add
cli
push
scas
scas
sub
pop
cmp
clc
sub
sub
add
imul
mov
clc
clc
ret
clc
sbb
push
add
push
lods
scas
push
add
xchg
sar
clc
xor
add
clc
shlb
das
push
add
sbb
add
cmp
add
pop
clc
pushf
mov
pop
and
data16
lcall
clc
sub
mov
iret
movsb
clc
js
clc
add
stc
loope
ret
xor
add
pop
mov
mov
scas
loop
xor
inc
clc
xchg
cs
jb
add
add
es
jne
add
push
inc
add
jg
xor
pop
ret
clc
mov
add
stc
add
add
xchg
jo
add
lahf
push
mov
imul
fldenv
mov
and
add
in
push
add
loopne
mov
out
push
add
insb
pop
xchg
add
add
xor
add
inc
add
scas
cwtl
xchg
decl
push
add
test
sti
pop
clc
sbb
xabort
push
add
scas
insl
mov
mov
add
sbb
jno
add
repnz
add
xchg
jmp
clc
gs
and
add
xchg
sbb
mov
add
jg
clc
gs
fdivr
data16
dec
cmp
add
cmp
or
gs
or
clc
sbb
add
pop
or
fdiv
lea
mov
add
adc
add
clc
fcmovu
sbb
mov
xchg
push
add
stos
in
fisubl
add
adc
add
clc
jae
add
add
cmc
adc
add
out
clc
addr16
add
add
repz
daa
clc
jno
add
add
popf
inc
add
fwait
adc
add
clc
push
shll
mov
mov
fwait
hlt
iret
test
cmp
clc
dec
hlt
dec
ds
mov
add
clc
fsubr
mov
clc
cli
jle
and
add
clc
iret
dec
mov
clc
jecxz
xor
add
xabort
aaa
test
xchg
bound
add
clc
pop
clc
clc
int
mov
ds
jle
clc
rclb
add
cmp
or
data16
dec
mov
loopne
sbb
test
lret
add
dec
add
add
mov
sahf
idivb
mov
rclb
add
clc
push
mov
repnz
add
xchg
xchg
cmp
clc
jb
add
gs
or
cli
test
pop
sbb
clc
out
sub
or
cmp
or
sarl
out
push
pop
push
lods
xor
add
add
add
add
add
dec
rcl
and
add
clc
adc
add
add
inc
add
imul
into
jge
clc
out
push
cmpsl
clc
xchg
mov
clc
jmp
test
clc
cwtl
jmp
jmp
aam
mov
mov
cmp
test
mov
sar
inc
clc
add
xchg
cmp
clc
out
cmp
add
mov
cmp
mov
add
add
movsb
clc
xor
sbb
clc
das
hlt
outsb
es
mov
cld
and
add
sub
clc
fidivrs
clc
xchg
or
or
add
jl
push
add
mov
mov
add
add
ret
and
add
add
xchg
fucomi
push
out
aas
mov
mov
fstpt
adc
add
mov
shrl
pop
insb
xor
add
add
lock
clc
mov
clc
xchg
iret
shlb
add
mov
add
mov
clc
add
jl
clc
sub
add
cmpsb
clc
out
jp
inc
clc
test
add
and
add
or
cmp
clc
mov
out
in
jne
test
in
push
je
clc
cmc
mov
xchg
out
jae
add
and
add
pop
lea
add
scas
jb
add
xchg
push
add
gs
push
cli
dec
pop
daa
clc
dec
nop
dec
pop
clc
pop
cmp
out
out
in
mov
cltd
shll
add
xor
add
jl
lods
mov
push
inc
clc
ds
clc
dec
mov
out
out
ss
sbb
cmp
dec
push
cmp
clc
mov
lock
js
scas
in
loopne
repz
mov
dec
sub
xor
add
insl
repnz
ljmp
xabort
mov
xor
add
clc
out
ja
popf
xlat
adc
cltd
in
jae
add
adc
add
int
test
push
ss
lods
jecxz
and
add
pop
clc
out
test
jae
add
mov
add
add
dec
jle
fs
jo
add
mov
ficomps
imul
clc
adc
add
call
scas
mov
mov
sub
outsb
add
add
dec
mov
int3
pop
cmpsb
clc
xor
add
add
sub
mov
fdivl
clc
sbb
add
mov
loopne
ffreep
clc
arpl
add
inc
add
aad
add
adc
add
sbb
clc
push
ds
jns
adc
add
fmulp
push
add
xor
add
pusha
add
cld
loopne
repz
push
cltd
add
add
add
fiaddl
add
dec
cmp
add
lods
mov
pop
ret
clc
mulb
add
cwtl
dec
xor
add
cli
pushf
push
divl
stc
pop
pusha
add
ja
cmp
loope
cmp
rcr
loope
es
add
add
jl
arpl
add
add
bt
insb
adc
add
add
add
push
xchg
inc
clc
cltd
push
bound
add
add
popf
fs
mov
add
pop
adc
add
add
mov
jle
clc
rorl
jnp
clc
aam
jle
pusha
add
sub
add
bound
add
sahf
jae
add
popa
add
out
pusha
add
icebp
cli
mov
loopne
pop
xabort
ret
inc
add
syscall
clc
jae
add
popf
mov
clc
dec
pop
lret
cmp
or
int3
adc
add
xor
fadds
clc
into
dec
jns
jnp
ficompl
push
insl
sbb
pop
clc
call
sar
scas
int3
or
add
outsl
decb
repz
clc
aaa
stos
das
inc
clc
in
cmp
add
mov
test
push
add
jge
add
adc
insl
add
add
add
movsb
clc
mov
in
cltd
in
aas
cmp
add
add
cmp
test
clc
add
add
add
sar
jnp
cmp
add
add
ja
add
add
inc
clc
cmp
and
clc
repnz
push
add
mov
outsb
cwtl
xchg
arpl
add
cli
inc
add
sti
inc
clc
and
add
cwtl
sub
and
add
outsb
outsl
jge
clc
call
sub
add
or
mov
add
xchg
lahf
xor
add
add
and
add
add
mov
aaa
sbb
fwait
cmp
xchg
in
cmpsb
clc
cmp
adc
add
clc
out
data16
and
add
mov
add
sub
cmp
add
add
add
adc
add
test
xor
inc
add
sbb
or
clc
pusha
add
out
cmp
clc
into
adc
add
clc
movsl
clc
incl
clc
push
add
pop
icebp
hlt
mov
xchg
cmpsb
clc
sbb
insl
cltd
jno
add
clc
jl
clc
lock
dec
mov
mov
repnz
jge
clc
out
cmp
mov
add
xchg
mov
add
sar
sarl
ljmp
in
imul
add
or
jae
add
vucomiss
bnd
add
scas
enter
jp
sub
or
clc
push
dec
jbe
sbb
clc
xor
add
rcrb
in
ds
push
add
xor
add
loope
jnp
xchg
int
clc
es
dec
aas
lods
jge
scas
jmp
mov
clc
or
clc
mov
icebp
lock
mov
sub
cmp
clc
mov
sub
pop
add
add
add
outsb
int3
and
push
clc
cmpsl
clc
aam
dec
lea
mov
stos
dec
mov
int3
inc
add
mov
cmp
jl
xchg
sub
pop
call
add
xor
add
clc
push
sbb
mov
add
mov
xchg
cmp
add
or
mov
shl
inc
add
aad
add
sub
cmp
ret
clc
cmpsb
clc
pop
addr16
sub
add
push
data16
mov
add
mov
xchg
inc
clc
test
adc
add
xchg
mov
dec
cmp
xchg
xor
add
sbb
add
inc
clc
leave
mov
mov
cmp
scas
ljmp
add
clc
fistpl
sub
dec
lret
adc
add
add
ds
clc
out
mov
add
loope
dec
nop
fistl
add
add
add
addr16
negl
cwtl
push
fidivrl
add
mov
imul
clc
cltd
mov
rolb
cltd
mov
or
add
add
clc
enter
clc
push
mov
add
fs
mov
add
add
add
add
mov
add
cmp
es
xor
add
push
xchg
outsb
movsb
clc
iret
movsb
clc
pop
clc
lea
add
decl
add
mov
xlat
xchg
adc
add
int3
out
jne
clc
imul
add
add
ret
clc
cwtl
shl
clc
gs
in
cmp
bound
add
add
sar
cmp
mov
gs
leave
dec
jo
add
inc
clc
jp
addr16
mulb
sub
pop
and
insb
mov
test
clc
push
add
rcpps
add
lcall
lret
add
cmc
sbb
sbb
int3
test
jecxz
cmp
mov
clc
nop
mov
clc
inc
add
mov
add
and
rcll
sar
popa
add
dec
test
vandnps
mov
fmul
xchg
cli
divb
add
add
xor
xchg
fsincos
es
loop
lods
out
lock
jle
fs
insl
scas
lahf
cmp
or
leave
xchg
add
add
dec
ljmp
add
add
push
add
push
xor
mov
xchg
jp
add
mov
lods
int3
jnp
stos
xlat
call
ja
jnp
ror
jns
clc
lods
fs
outsb
or
sar
rol
clc
sub
rcr
inc
add
jbe
clc
lahf
push
aam
cs
clc
mov
add
enter
mov
or
xchg
int
hlt
and
add
lret
xbegin
test
push
clc
scas
push
clc
xbegin
jno
add
add
cmpsl
clc
outsl
push
fsts
push
jmp
jge
cmc
jge
mov
sti
in
ret
rcrl
clc
jmp
mov
add
stos
aad
xchg
pop
clc
jl
into
ljmp
xor
add
clc
pop
or
sub
dec
in
push
aad
add
decb
clc
or
pop
mov
mov
or
clc
das
xor
add
add
jo
add
clc
jge
lahf
fs
cmp
add
add
in
adc
add
js
clc
mov
gs
pop
lock
clc
lock
add
cmp
iret
fwait
push
push
add
mov
movsl
clc
adc
add
clc
or
scas
mov
sarl
clc
mov
xor
add
sar
clc
sub
add
mov
divb
add
ss
add
or
dec
inc
clc
pop
xor
popa
add
mov
jno
add
add
push
xchg
mov
jg
add
int
jl
shr
shr
xchg
xor
add
clc
push
movsl
clc
pop
lahf
and
inc
add
outsb
sub
clc
imul
xor
add
int3
test
xor
dec
sub
mov
adc
add
add
or
jge
push
or
mov
cmp
add
sti
jbe
add
mov
add
daa
clc
mov
add
push
mov
dec
shll
sar
push
fcoml
ret
pop
cld
ret
cmp
sbb
add
ss
sub
stos
mull
mov
cs
mov
xor
add
ja
std
insl
lods
jmp
mov
clc
and
xchg
lret
inc
clc
cltd
aaa
imul
cltd
int3
popl
fs
mov
inc
add
push
clc
dec
mov
clc
jmp
out
and
add
fidivl
add
fcmovne
fs
ficomps
in
pop
clc
jg
jbe
clc
push
add
mov
sub
cmpsl
clc
in
fldcw
clc
pmuludq
adc
add
add
cli
hlt
xor
add
cmp
add
outsl
testb
icebp
mov
sub
scas
ret
clc
or
mov
into
out
xchg
mov
add
add
js
cmp
add
pop
add
add
shl
idivl
ds
loop
out
stc
outsb
and
add
arpl
add
lahf
clc
shlb
add
cwtl
aad
clc
fwait
imul
fcomip
inc
clc
mov
add
add
clc
mov
add
add
pusha
add
or
cs
clc
psadbw
dec
add
clc
xchg
push
xor
add
clc
stc
push
add
add
imul
test
cmp
iret
mov
clc
out
or
xor
add
clc
xor
add
add
fistpl
add
xor
add
xor
add
add
clc
mov
clc
inc
clc
daa
clc
pop
mov
jge
clc
test
knotw
or
and
add
mov
mov
add
test
pusha
add
call
clc
daa
clc
leave
insb
cld
dec
inc
add
xbegin
or
mov
add
xchg
inc
add
cmpsl
clc
call
and
add
in
aas
adc
mov
clc
dec
ret
add
shlb
add
dec
fsubrs
rolb
fstp
mov
cmp
or
repz
sub
add
mov
scas
jecxz
adc
add
movsb
clc
xchg
push
xchg
sub
sub
xchg
shl
push
sbb
fiadds
mov
dec
sbb
xchg
add
add
inc
add
inc
clc
lods
shrl
clc
mov
mov
clc
cmpsb
clc
dec
cmp
pushl
out
out
in
mov
inc
clc
lock
clc
mov
jae
add
inc
add
fs
push
add
fs
stc
iret
outsl
xchg
in
sar
inc
clc
loopne
aam
fbld
or
insb
in
imul
clc
push
mov
add
xchg
xor
clc
std
testl
mov
clc
pop
inc
clc
adc
add
mov
pop
in
clc
push
jns
add
cli
jnp
add
cmp
jmp
dec
cmp
or
xchg
jle
test
mov
add
dec
jb
add
divl
clc
add
push
add
dec
adc
out
dec
mov
fisubl
clc
add
xchg
pop
pop
fiaddl
add
mov
add
addr16
inc
add
dec
lahf
fs
mov
leave
add
add
clc
daa
clc
lods
and
add
add
inc
add
or
clc
jle
mov
lock
sbb
add
sbb
mov
xchg
inc
clc
test
jo
add
push
add
mov
fidivrs
aam
test
push
push
add
shrl
and
add
add
dec
adc
add
out
cli
mov
add
pop
jns
in
or
clc
add
add
clc
ljmp
clc
xchg
xor
add
clc
cmpsb
clc
ss
add
and
add
aas
or
clc
cld
dec
pusha
add
inc
clc
add
push
xchg
adc
pop
cmpsb
clc
adc
nop
cld
fstl
clc
cwtl
cmp
cmp
clc
in
ret
clc
sub
add
xor
add
xor
pop
dec
add
add
clc
mov
add
aas
or
insb
aam
mov
test
js
lcall
in
out
push
add
scas
jns
clc
gs
mov
pop
dec
clc
push
add
aad
mov
add
add
clc
xor
add
sub
dec
cld
insb
push
adc
add
add
jbe
fwait
gs
xchg
mov
stc
sub
mov
mov
sar
and
add
inc
add
sti
sub
scas
xabort
loop
mov
rorl
adc
add
add
iret
cwtl
lock
add
add
add
mov
lcall
hlt
ljmp
jp
lcall
add
clc
push
add
jne
xchg
fisttps
mov
scas
push
add
int3
cmp
int
inc
clc
decb
in
or
push
in
addr16
xor
add
clc
cmp
sbb
clc
loop
mov
into
xchg
int3
cmpsl
clc
fists
sbb
dec
jnp
mov
mov
add
add
mov
add
or
clc
fidivrl
fsubrs
ss
xchg
mov
xlat
mov
and
add
sbb
adc
add
cmp
clc
scas
push
add
loopne
call
leave
sbb
clc
mov
add
xchg
cmp
push
inc
add
cmp
mov
or
add
dec
mov
add
jmp
sub
dec
ret
mov
add
cmpsl
clc
ljmp
imulb
or
clc
sahf
push
add
nop
mov
add
mov
clc
mov
xlat
loop
push
out
jns
xor
add
push
addr16
cmp
clc
adc
add
test
cltd
data16
jp
adc
add
pop
and
add
frstor
clc
mov
daa
clc
dec
lahf
movsb
clc
inc
clc
inc
add
idivl
clc
xabort
pop
repnz
sub
stc
mov
add
xor
add
add
aad
rcl
loope
mov
mov
add
lcall
or
fdiv
vmovlhps
inc
add
test
enter
add
push
fwait
and
add
add
dec
ja
mov
add
call
mov
clc
xor
enter
add
or
clc
fidivrl
mov
scas
dec
mov
int3
or
sub
clc
lret
sbb
in
out
outsl
loop
xchg
sbb
add
int
fcomp
bound
add
add
jecxz
test
push
add
addr16
out
inc
add
sbb
mov
and
dec
jbe
cmp
clc
pop
xor
add
mov
jge
or
sbb
fildl
add
insl
adc
add
xchg
ljmp
clc
jecxz
sub
push
cmc
mov
clc
bound
add
and
add
add
push
add
into
movsb
clc
mov
clc
daa
clc
pop
or
sub
mov
mov
clc
pop
mov
mov
add
or
into
add
jo
add
add
jbe
aaa
hlt
push
add
fmull
lret
movsb
clc
sub
clc
ret
clc
add
and
add
add
popa
add
jl
clc
test
pop
aad
incl
cmp
clc
out
cmpsl
clc
pop
dec
jnp
add
and
add
mov
clc
mov
stos
iret
xor
add
add
dec
mov
clc
sar
clc
dec
jns
lcall
in
popa
add
jnp
add
mov
js
clc
xchg
sbb
ret
clc
repnz
xchg
jb
add
dec
inc
clc
popf
pop
ds
push
mov
sbb
pop
in
inc
clc
dec
cmp
add
xor
add
clc
mov
xchg
pop
jecxz
enter
clc
inc
add
or
adc
lea
clc
push
add
int3
xor
or
add
negl
add
mov
add
leave
push
repz
add
add
push
cs
scas
in
loope
xchg
cmp
clc
movsl
clc
sar
inc
clc
inc
add
clc
dec
out
jge
sbb
clc
data16
sbb
add
clc
cmp
add
fnsave
add
mov
add
add
clc
ret
clc
inc
add
push
rclb
add
dec
and
add
lret
jne
ljmp
xchg
clc
ja
add
mov
clc
iret
xchg
shl
clc
sahf
movsb
clc
sbb
inc
clc
cmp
jae
add
je
mov
clc
xchg
mov
mov
and
xchg
xor
add
fwait
cmp
jg
movsl
clc
enter
xchg
mull
ret
clc
jbe
clc
lock
jno
add
lea
out
sub
clc
enter
jmp
xchg
mov
inc
clc
mov
jl
clc
jbe
outsb
mov
add
clc
cltd
aaa
gs
shlb
add
inc
clc
mov
repnz
add
xchg
pop
xor
add
add
dec
cmp
add
es
cmpsl
clc
cmp
scas
xbegin
add
fnstsw
clc
jbe
clc
or
stos
xabort
int
clc
xlat
xchg
push
add
jge
clc
ret
clc
xor
add
mov
or
lahf
or
clc
jl
clc
xor
add
ret
clc
js
stos
add
add
mov
jns
inc
clc
aad
xchg
mov
or
add
cmp
clc
into
aam
test
clc
inc
add
bnd
mov
jge
or
dec
xchg
lods
ljmp
clc
popa
add
push
std
popa
add
aad
add
inc
add
xor
jo
add
mov
add
push
clc
mov
pop
add
sbb
in
push
sub
sbb
lea
hlt
mov
rclb
add
movsb
clc
clc
jo
add
popf
cmc
lods
aaa
stc
cmp
add
push
popa
add
pop
clc
mov
or
add
out
mov
test
aas
rolb
add
ja
sub
test
add
add
dec
cld
cwtl
mov
lahf
pushf
rcr
out
jp
insb
or
add
jle
clc
sub
ret
fs
daa
clc
pop
lcall
pop
xchg
in
inc
clc
frstor
mov
clc
daa
clc
jb
add
add
cmp
inc
add
imul
xlat
sbb
sub
stc
mov
clc
std
xor
add
add
iret
sub
add
add
repz
add
aaa
inc
add
push
add
cmp
adc
fisubl
clc
into
movsb
clc
inc
clc
mov
clc
mov
add
xchg
push
add
lret
scas
push
ja
push
clc
lret
pop
push
add
scas
add
xor
add
add
adc
add
xlat
cmp
add
out
jns
clc
and
scas
xor
clc
mov
mov
add
aas
cmp
sub
xchg
fwait
inc
add
jle
pusha
add
or
popf
push
clc
pop
sbb
mov
jp
clc
notb
add
fcmovne
fadd
clc
cmp
xchg
js
pop
jno
add
cmp
cmp
mov
add
call
clc
mov
add
mov
dec
mov
cmp
out
cmc
js
adc
add
add
cmp
push
bound
add
and
add
push
and
add
sbb
pop
push
stos
adc
clc
js
inc
add
xlat
daa
clc
fldt
clc
in
mov
icebp
mov
lock
clc
popl
lret
cmp
add
fwait
sahf
xchg
dec
unpckhps
add
and
add
add
mov
mov
clc
lock
clc
push
add
push
into
stc
jb
add
test
sub
clc
je
clc
loope
mov
cmp
int
xchg
pop
pop
sti
and
add
add
lcall
sbb
lods
ljmp
std
jns
mov
inc
clc
mov
add
in
mov
mov
add
add
add
loop
pop
inc
clc
mov
in
mov
xchg
sbb
xor
add
add
sbb
hlt
cmp
pusha
add
mov
add
mov
clc
lret
out
cmp
mov
and
add
out
xchg
mov
adc
add
js
and
add
mov
movsb
clc
xchg
or
pop
lahf
mov
and
add
lahf
mov
aad
aad
dec
xbegin
lahf
mov
enter
and
clc
js
es
add
add
add
dec
inc
clc
pop
clc
cmpsl
clc
clc
imul
fimuls
clc
in
mov
sub
mov
gs
aas
or
loope,pn
add
out
cli
stos
mov
mov
lahf
xlat
dec
je
xchg
loope
cmpsb
clc
mov
test
xchg
xchg
or
clc
and
add
adc
add
jle
into
mov
xor
add
add
cmpsl
clc
js
clc
push
add
movsb
clc
fcompl
push
mov
xor
add
add
notb
add
xabort
add
daa
clc
popa
add
pop
stos
mov
mov
js
movsb
clc
mov
clc
pop
push
ja
sar
jle
adc
mov
jmp
fnsave
add
push
clc
fiaddl
add
push
jae
add
jae
add
add
or
mov
add
aam
in
stos
int
inc
add
xlat
xor
add
add
jae
add
paddsw
xchg
sbb
clc
leave
lahf
xbegin
out
jno
add
mov
sub
clc
ret
clc
xchg
mov
pop
ds
clc
fstpl
mov
xchg
and
add
mov
gs
dec
hlt
in
adc
inc
add
push
mov
clc
std
add
add
pop
add
add
arpl
add
ss
or
daa
clc
pop
pop
mov
es
insl
or
clc
push
leave
dec
cmpsb
clc
or
pop
cmp
fiaddl
add
mov
sti
pop
jp
push
ss
and
add
add
jle
push
clc
je
and
cmp
clc
testb
mov
add
leave
pop
clc
daa
clc
mov
clc
iret
es
test
clc
xchg
mov
cmp
add
mov
std
cmp
leave
mov
clc
call
pop
icebp
mov
clc
fiadds
jbe
clc
daa
clc
jle
add
shll
add
inc
add
lcall
clc
popf
push
add
xor
fdivrp
cs
lock
push
add
add
add
dec
adc
iret
mov
add
add
cmp
mov
js
cmpsl
clc
adc
add
pop
pop
xchg
xchg
cmc
scas
movsb
clc
sbb
push
dec
in
mov
jnp
inc
clc
mov
clc
out
push
clc
dec
or
inc
clc
xor
add
jmp
add
add
jbe
add
cmc
jle
add
add
add
add
notl
cli
and
add
jbe
add
fstl
add
loope
cmpsl
clc
out
sbb
inc
clc
push
add
pop
cmp
add
add
add
jle
rorb
cmp
or
imul
inc
clc
pop
inc
clc
lods
mov
clc
and
add
xor
add
fiadds
and
insl
inc
add
inc
clc
cmp
lea
add
mov
fs
mov
scas
leave
enter
icebp
aas
mov
clc
xchg
icebp
xlat
outsl
jae
add
sar
mov
xbegin
sub
add
mov
pusha
add
mov
xchg
or
xchg
push
add
xchg
xchg
ljmp
mov
dec
mov
cmpsl
clc
test
dec
xor
add
std
or
add
das
cltd
xchg
mov
insb
mov
jns
sbb
dec
jns,pn
add
js
clc
jp
add
jp
sub
push
out
dec
sbb
add
inc
clc
inc
clc
pop
repz
add
loopne
mov
add
jl
adc
add
dec
pop
imul
clc
push
cmp
adc
inc
add
sub
clc
mov
pop
fs
in
inc
add
lods
out
scas
mov
add
sti
fdivp
ror
and
add
cmp
add
add
loope
or
cwtl
push
clc
mov
cmp
clc
adc
add
loopne
out
fcmovu
ljmp
add
insb
mov
mov
add
cmpsb
clc
lret
or
dec
mov
add
xor
add
clc
sar
add
enter
pop
clc
in
jge
add
jbe
out
jno
add
mov
stos
testb
add
mov
add
add
xor
add
adc
add
add
xor
aam
jg
add
pop
in
mov
mov
clc
add
add
cmp
push
add
cmc
sub
add
mov
mov
das
add
add
add
out
sub
cmp
mov
out
arpl
add
pop
sar
xor
add
xbegin
int
push
jp
stos
jmp
rcll
cli
jns
lcall
dec
insb
and
add
add
scas
sbb
add
jl
repz
add
add
fists
add
mov
add
in
pop
xor
add
loope
repnz
pop
icebp
sbb
add
add
mov
ds
clc
shrb
lcall
mov
add
add
sub
cmp
clc
imul
movsb
clc
push
add
jp
push
add
test
add
clc
pop
data16
insl
mov
adc
add
pinsrw
or
aam
clc
xorps
xchg
clc
loope
sbb
add
gs
push
int
dec
into
ror
mov
push
sbb
cmp
out
ret
clc
jg
clc
jo
add
dec
jo
add
add
test
mov
enter
inc
clc
aad
add
scas
outsb
inc
add
insl
push
add
loope
shrb
add
clc
dec
aas
movswl
lcall
int3
jne
ja
xchg
das
mov
jle
add
pop
or
add
sbb
out
aaa
xor
dec
popf
mov
popa
add
add
add
clc
ret
clc
jle
sar
bound
add
inc
add
test
add
int3
pusha
add
dec
mov
lods
xlat
pop
cmp
add
add
adc
add
add
add
test
clc
enter
add
and
add
popa
add
jns
and
add
sti
add
add
mov
clc
and
add
add
add
in
out
add
add
clc
cmc
enter
or
xbegin
dec
or
push
shr
arpl
add
clc
inc
clc
cmpsl
clc
lods
add
clc
imul
enter
das
mov
icebp
aas
push
in
pop
or
add
add
inc
add
cs
xbegin
ja
add
jge
or
fs
sub
adc
add
add
fs
iret
aas
mov
clc
or
add
jge
add
enter
mov
adc
add
clc
jg
add
inc
add
cmp
mov
clc
je
adc
cmovnp
arpl
add
arpl
add
shl
push
clc
loope
ljmp
clc
in
sbb
ss
scas
clc
sbb
scas
mov
jmp
ret
clc
rolb
add
popa
add
sub
clc
lea
int3
ljmp
jecxz
pushf
pushf
sub
clc
cmp
fsubs
inc
add
xchg
lret
aad
jl
lahf
mov
clc
sbb
xor
mov
add
add
dec
sbb
stc
push
stos
push
xchg
push
push
add
inc
clc
mov
add
cmp
add
clc
xabort
in
adc
clc
jmp
mov
clc
vshufps
jno
add
clc
jmp
int
add
gs
push
clc
imul
popf
lret
clc
or
int
clc
jnp
clc
mov
inc
add
je
mov
fisubrs
or
mov
clc
and
add
add
je
add
jae
add
xor
add
jle
es
pop
clc
lods
rol
clc
jmp
xchg
sti
sub
ffreep
clc
mov
add
push
add
loope
xor
add
sub
and
add
lods
xlat
pusha
add
mov
add
mov
add
nop
imul
clc
idivl
cs
test
scas
push
mov
mov
jmp
xabort
lock
inc
clc
cld
repz
add
mov
add
add
rcrb
clc
repnz
pop
mov
push
clc
mov
test
pop
push
mov
clc
sbb
add
in
push
and
add
jl
add
or
std
aam
clc
add
add
add
inc
add
sar
cmp
add
jl
clc
inc
add
xchg
pop
insl
mov
clc
inc
clc
test
dec
pop
clc
and
add
loope
push
aas
jl
negb
clc
mov
add
ss
fiadds
mov
add
add
xor
add
jle
jbe
clc
mov
int3
sbb
inc
add
xor
add
repnz
sti
iret
shll
add
add
jnp
clc
and
add
movsl
clc
sbb
enter
inc
add
ss
mov
int3
add
lahf
jg
bound
add
clc
sarb
xchg
cmp
cmp
add
ret
add
das
out
adc
dec
adc
fisubs
add
jmp
xabort
clc
add
arpl
add
clc
je
sbb
fiaddl
and
add
lahf
mov
clc
loop
repnz
fcom
movsl
clc
lret
push
sub
add
cmp
add
add
sub
push
clc
sub
add
jmp
and
add
clc
fs
push
add
outsl
enter
cmp
xor
add
clc
das
and
add
fsts
mov
in
sar
repz
clc
int3
mov
clc
lcall
inc
add
sbb
add
jmp
xchg
in
xor
cmp
in
js
jb
add
add
add
cmp
arpl
add
jl
sbb
sti
ss
clc
clc
stos
inc
clc
cmp
mov
je
jmp
clc
xchg
scas
sbb
clc
mov
clc
mov
sbb
shl
clc
and
popf
jo
add
mov
aas
jle
sub
arpl
add
clc
lcall
or
shrb
add
clc
dec
sahf
jp
clc
cmp
add
dec
vshufps
aad
clc
in
cmpsl
clc
outsb
xchg
bt
dec
mov
fwait
imul
pop
xchg
inc
add
cwtl
clc
mov
add
xchg
mov
add
add
fs
mov
add
sbb
mov
lods
mov
xor
test
fwait
out
push
ret
popa
add
test
clc
pop
outsb
scas
jecxz
jns
jne
dec
into
aam
mov
clc
mov
sub
in
push
stc
cmpsl
clc
incl
add
clc
sbb
push
sbb
sar
push
clc
cmp
clc
insb
cmpsb
clc
xbegin
stos
xor
add
pop
js
cmp
clc
dec
add
add
sbb
insb
mull
add
jbe
clc
inc
clc
mov
sbb
je
adc
clc
xchg
add
add
clc
fs
and
add
mov
cmp
add
cmc
sar
xabort
pop
cmp
pop
sarb
and
jg
clc
inc
clc
sbb
gs
inc
clc
xchg
nop
in
aas
cmp
jecxz
inc
clc
sub
fwait
and
js
add
ret
clc
sti
jecxz
dec
incb
xchg
stc
jne
sar
clc
pusha
add
adc
add
mov
cmp
jno
add
test
push
add
inc
clc
stc
int
add
jg
clc
lcall
add
es
sar
add
sub
mov
add
lods
sbb
insl
and
clc
nop
push
mov
xor
lods
pop
jmp
add
movaps
xchg
fstpt
mov
mov
add
sub
sbb
push
jle
pop
mulb
std
jmp
imul
dec
jnp
mov
add
pop
loop
dec
ljmp
insl
movsb
clc
xbegin
call
mov
add
adc
add
add
jnp
loopne
clc
sbb
add
cmp
add
scas
cmc
xor
add
clc
std
inc
add
inc
clc
mov
add
fidivs
add
cmp
xchg
push
xchg
inc
add
mov
cli
dec
icebp
dec
mov
push
lock
into
adc
imul
cmp
in
pop
data16
sar
cmp
add
ss
ret
clc
mov
clc
mov
mov
dec
add
add
add
into
lahf
mov
mov
pop
and
mov
stos
dec
mov
clc
mov
clc
pop
stos
cmpsb
clc
shll
fwait
mov
mov
clc
jno
add
clc
ja
mov
sarb
jo
add
lods
insl
jl
inc
add
cmp
clc
cmp
add
pop
clc
inc
clc
or
pop
insl
pop
mov
ret
clc
cmc
repz
xchg
out
sbb
ss
lret
adc
mov
clc
mov
xchg
test
jne
cmp
xchg
mov
adc
hlt
push
add
mul
clc
cmp
add
sbb
fdivl
bnd
ret
xchg
ds
inc
clc
mov
dec
gs
cld
test
mov
clc
ret
jnp
mov
pop
mov
divb
xor
add
mov
clc
leave
mov
mov
mov
in
add
xabort
sar
cmp
or
mov
add
add
add
inc
clc
mov
movsb
clc
inc
clc
push
or
add
rolb
add
mov
mov
loope
xchg
sar
push
fwait
roll
add
mov
push
daa
clc
dec
sub
clc
sbb
sar
clc
lcall
add
fiaddl
ret
xchg
testl
inc
clc
jb
add
xchg
push
mov
iret
inc
clc
sti
push
jo
add
mov
clc
imul
add
add
test
jle
sub
icebp
and
xor
add
add
clc
jp
leave
cmp
bound
add
clc
and
add
mov
clc
pushf
or
add
push
cmpsl
clc
int3
sub
add
in
ret
jmp
xchg
push
cmp
repnz
xabort
clc
pop
test
rol
clc
pop
test
bound
add
jecxz
ret
jno
add
pop
scas
pop
mov
jb
add
push
add
in
imul
mov
mov
mov
clc
sub
add
add
aas
das
js
clc
je
scas
outsb
mov
clc
mov
xor
add
sbb
mov
jge
js
fists
add
sub
add
push
scas
cltd
pop
das
adc
clc
jecxz
xchg
cs
push
add
push
xchg
or
sbb
jo
add
add
icebp
xchg
cmpsb
clc
test
jp
add
or
push
inc
clc
sub
add
xchg
hlt
cmp
xlat
jmp
je
hlt
mov
clc
dec
cwtl
clc
inc
clc
xchg
insl
stos
div
icebp
and
filds
cmp
push
loope
pop
clc
sub
mov
clc
std
jbe,pn
mov
add
xchg
xlat
mov
add
shrb
xchg
outsb
cmpps
clc
sbb
add
add
add
add
add
lock
jns
dec
jg
cmp
add
nop
std
jmp
xor
add
add
add
movsb
clc
clc
jae
add
add
inc
add
push
clc
mov
clc
test
in
je
sub
in
inc
clc
in
sub
ss
xor
add
adc
add
clc
fisubrl
mov
clc
push
test
xabort
xchg
nop
xchg
mov
lret
clc
cli
test
cmp
add
or
mov
pop
dec
xor
add
clc
mulb
mov
addr16
fisttpll
clc
cs
jb
add
sub
stc
adc
add
mov
jbe
loop
xchg
push
jg
add
pop
add
pop
cltd
xor
repz
test
es
imul
push
add
xlat
adc
add
fidivl
jle
clc
ds
jge
clc
repz
inc
clc
dec
dec
sbb
clc
inc
clc
dec
scas
pushf
mov
inc
add
fs
sbb
jmp
aam
clc
data16
push
clc
ja
aas
pop
clc
adc
clc
arpl
add
or
pop
xchg
jle
clc
mov
fsubs
clc
dec
push
jns
sbb
lahf
inc
clc
mov
mov
lret
xchg
dec
push
push
add
fchs
clc
stos
cld
lret
add
add
jl
jmp
adc
add
je
add
pop
or
and
add
jae
add
add
or
add
clc
cmpsl
clc
js
clc
adc
add
clc
enter
mov
std
xor
aaa
das
ja
into
std
cmp
add
pusha
add
cli
cmp
and
adc
clc
cltd
and
add
add
mov
push
add
jns
add
and
add
jbe
clc
push
out
insb
lods
dec
pop
push
add
adc
add
clc
std
pop
or
clc
and
mov
pop
clc
xor
mov
and
add
clc
jp
sub
add
mov
add
add
dec
mov
add
add
add
push
add
or
mov
jge
jno
add
clc
add
add
clc
and
add
sub
dec
cmpsl
clc
loope
lock
clc
mov
fwait
pop
mov
mov
dec
cmpsb
clc
insb
imul
xor
add
imul
mov
cmc
dec
shl
jmp
add
add
add
add
add
jge
pop
stc
in
cmp
aad
repz
fistl
add
cli
mov
inc
add
iret
xchg
scas
mov
mov
cmp
or
sub
clc
fmuls
xlat
mov
add
cmpsb
clc
imul
add
push
push
push
clc
push
add
cltd
and
popa
add
cmpsl
clc
ja
adc
add
and
test
add
sbb
xor
add
push
hlt
push
adc
add
jge
test
jae
add
out
dec
cs
pop
add
add
xchg
lahf
stc
cli
aam
mov
xchg
pop
mov
clc
adc
add
add
add
fnstenv
clc
xor
add
jne
jmp
fsts
add
adc
add
dec
xchg
fidivrs
sahf
cmpsl
clc
inc
add
sbb
clc
ficoml
mov
clc
xchg
pushf
xabort
push
add
cmp
add
movsb
clc
xor
add
add
testl
pop
sahf
push
add
adc
add
mov
lods
pop
lods
fwait
data16
cmpsl
clc
mov
cmp
lock
ja
pop
push
ja
dec
xabort
pop
jnp
clc
cmp
cmp
pop
mov
std
xchg
mov
inc
clc
testl
jbe
out
mov
clc
inc
add
call
icebp
cmp
sar
xchg
xchg
cmp
clc
cmp
clc
pop
adc
xor
add
clc
push
add
push
arpl
add
clc
lcall
clc
jo
add
xchg
insb
sbb
out
xchg
test
sar
add
jle
add
pop
loope
es
push
add
pop
push
push
add
ss
sahf
dec
mov
inc
clc
or
clc
push
imul
vmaxps
loope
mov
sar
clc
cmp
test
inc
clc
cmp
add
aam
clc
mov
loop
jle
cmp
clc
outsb
testl
jecxz
jb
add
jp
and
add
add
cmp
ficoms
add
clc
notb
movsb
clc
cmp
add
xabort
into
movsl
clc
out
movsl
clc
pop
std
jno
add
xchg
mov
add
pop
clc
inc
clc
lea
mov
and
add
sub
pop
mov
shlb
movsb
clc
cmp
in
int
lcall
loope
adc
add
add
test
xchg
fwait
mov
lret
aam
add
das
adc
cmp
ds
dec
repz
int
add
add
add
mov
push
add
pusha
add
or
movsl
clc
outsl
fsubs
cmpsb
clc
cmp
add
xlat
mov
add
scas
call
sub
ret
imul
add
dec
cltd
mov
gs
push
adc
add
clc
out
xchg
jecxz
mov
jp
clc
and
add
add
lods
lret
sbb
outsl
out
popf
repz
xor
add
add
clc
pop
pop
cmp
or
add
xbegin
fistps
xlat
pusha
add
jns
in
mov
clc
aam
xchg
lea
clc
cmpsl
clc
fstpt
add
add
add
insb
xabort
add
loop
fnstenv
call
mov
push
xor
add
clc
mov
add
and
pop
hlt
push
fldcw
lea
sbb
out
jb
add
insl
pop
clc
dec
jp
push
push
aam
cmp
clc
mov
pop
pusha
add
xchg
out
in
ror
scas
cmp
addr16
dec
jbe
in
pop
ja
jmp
cltd
xor
add
imulb
dec
ljmp
filds
mov
outsl
repnz
sahf
std
xor
fsubp
clc
xor
or
imul
jae
add
push
popf
imul
imul
add
cmp
leave
hlt
ljmp
clc
stc
aad
jecxz
and
add
xor
add
clc
movsb
clc
push
add
dec
add
add
jo
add
dec
cwtl
scas
jnp
out
testb
dec
fcomps
inc
clc
jno
add
add
enter
pusha
add
movsb
clc
test
sub
mov
movsb
clc
push
mov
add
sbb
clc
jle
cld
outsb
pop
push
es
inc
clc
xor
add
hlt
mov
add
xbegin
add
add
shr
mov
clc
clc
clc
push
add
psubsw
add
sub
dec
inc
clc
fdivrs
add
and
add
clc
das
and
add
clc
nop
sbb
fs
or
add
je
add
jo
add
add
inc
clc
push
or
jmp
xchg
sar
cmpsb
clc
mov
add
imul
add
mov
add
lock
add
mov
cmp
clc
popa
add
pop
aad
adc
decl
mulb
clc
je
add
add
add
add
adc
add
cltd
out
es
inc
add
sub
xbegin
add
mov
ds
clc
sbb
add
dec
popa
add
mov
sub
cmp
je
arpl
add
add
xchg
bound
add
hlt
insl
push
adc
jo
add
cmp
stos
mov
daa
clc
push
cwtl
mov
clc
mov
cmp
pop
hlt
xchg
hlt
xlat
clc
imul
dec
outsl
insb
push
inc
add
dec
push
test
lahf
sbb
sub
pop
cmp
add
mov
mov
mov
mov
inc
clc
jecxz
call
fsts
dec
enter
add
add
leave
mov
add
push
lahf
jl
pop
ljmp
loope
nop
xabort
clc
in
jle
clc
mov
dec
and
add
add
mov
mov
add
das
loope
sub
fs
mov
iret
js
test
cltd
call
push
lock
nop
nop
aad
lret
mov
push
out
outsl
mov
mov
test
clc
aas
mov
add
int3
std
pushf
cmp
adc
add
push
push
inc
clc
out
cltd
xlat
xabort
arpl
add
add
addr16
test
dec
imul
xbegin
fisubrl
add
mov
dec
jb
add
inc
clc
lret
imul
inc
add
and
add
hlt
icebp
sub
inc
clc
adc
add
inc
clc
rolb
add
add
adc
add
test
inc
clc
dec
jmp
sbb
sub
clc
fs
add
repz
mov
sub
cmp
call
sbb
mov
bound
add
popa
add
add
pop
inc
add
lcall
add
pop
icebp
flds
xchg
push
jp
jge
fistpll
add
clc
add
add
mov
iret
jg
add
mov
add
clc
xor
add
add
stos
lods
sub
add
push
add
ja,pt
add
and
push
adc
add
in
mov
clc
jns
jb
add
inc
add
out
bound
add
psubusw
dec
popa
add
lock
insl
sbb
jne
iret
mov
pop
aas
and
pop
add
add
jns
clc
mov
xor
add
ss
jle
cmp
dec
or
jp,pt
clc
mov
add
add
and
add
add
cltd
notb
add
pushf
imul
insl
movsb
clc
mov
add
push
add
in
push
add
pop
xor
add
cmp
xchg
repnz
je
clc
xor
add
lcall
cld
shrl
xabort
clc
test
inc
clc
out
repnz
clc
lock
add
clc
xchg
cld
jno
add
pop
outsb
fisttpl
add
insl
xlat
push
cmc
int
clc
pop
xchg
fsts
add
jge
dec
or
add
clc
adc
iret
loopne
dec
out
je
clc
movsl
clc
mov
cmp
test
std
sbb
add
icebp
mov
mov
out
nop
push
loope
jb
add
jle
clc
jle
xor
add
add
jne
and
push
clc
xor
inc
clc
push
lret
clc
call
clc
cmp
pop
pop
mov
jns
outsl
xor
xor
add
sbb
sbb
add
lea
fnstcw
pop
aas
adc
add
clc
inc
clc
das
clc
and
add
xor
add
cmp
add
into
push
mov
enter
add
or
pushf
sbb
cs
cs
das
xor
adc
aad
sub
clc
fs
sets
push
das
xchg
xchg
xor
add
outsl
lea
sbb
clc
in
jno
add
cmp
jp
ds
mov
push
cmp
add
pop
mov
pushf
ss
push
or
dec
xchg
mov
add
mov
pop
mov
clc
aad
jo
add
xchg
sub
add
clc
data16
xor
add
add
test
mov
add
add
stos
imul
sub
add
out
test
movsb
clc
jne
xchg
pushf
sar
adc
cmp
mov
out
adc
dec
iret
mov
dec
mov
push
pop
clc
add
add
icebp
xbegin
add
mov
and
add
xlat
shll
add
add
add
pop
scas
inc
add
mov
inc
add
adc
add
add
cmpsb
clc
test
ja
in
ret
clc
add
mov
jle
ret
mov
add
test
sub
clc
fists
clc
push
cmp
stc
dec
test
outsl
loop
fbld
fisubrl
inc
add
into
xor
add
clc
xchg
xor
add
xchg
cmp
lods
mov
xor
dec
dec
addr16
push
or
dec
push
clc
push
lea
xchg
test
xchg
popa
add
movsb
clc
adc
add
clc
add
add
jge
add
test
clc
cmp
sbb
gs
mov
add
sbb
fdivl
sbb
dec
mov
clc
mov
push
int
sub
mov
data16
mov
push
filds
gs
daa
clc
sub
sbb
gs
jne
sub
clc
cmp
cmp
pop
clc
outsl
mov
add
insb
pop
push
clc
pop
lods
adc
push
or
cmpsb
clc
xabort
fists
add
fnstcw
clc
pop
xchg
dec
xchg
cmp
inc
clc
ret
clc
pop
sbb
std
or
mov
xor
add
sub
push
add
aas
mov
jmp
imul
aaa
imul
clc
push
out
test
jg
add
mov
add
add
add
or
rol
clc
inc
add
mov
outsl
or
mov
clc
mov
add
nop
adc
loopne
push
add
mov
sub
stos
outsb
mov
add
jg,pn
mov
scas
sub
add
pusha
add
gs
cmpsb
clc
cmp
jecxz
cs
cmp
adc
add
clc
stos
and
add
add
into
push
jmp
mov
sti
xchg
cmp
add
jecxz
sbb
std
cmp
clc
push
add
fdivrs
pop
cltd
dec
or
dec
pop
cmp
sbb
clc
clc
aaa
jecxz
into
jb
add
xbegin
clc
or
stos
lock
into
xor
add
cmp
clc
or
add
mov
mov
add
cmp
xor
into
mov
clc
popf
cmp
jno
add
clc
or
add
in
aam
ficoms
add
cmp
stos
fistpll
add
jecxz
ljmp
adc
add
and
add
dec
inc
add
adc
inc
clc
nop
xor
add
cmp
jbe
pop
mov
push
sbb
int3
stos
cmp
ljmp
sbb
stc
test
jmp
add
push
lahf
mov
push
clc
cmp
xchg
sub
clc
std
pop
in
neg
popa
add
mov
aas
cmp
push
clc
adc
add
mov
clc
data16
int3
out
pop
xchg
xlat
cmp
in
lcall
mov
clc
lods
inc
add
popa
add
xor
add
add
clc
mov
add
cmp
jg
je
sbb
clc
test
clc
pop
sub
or
clc
xor
out
cmp
inc
add
lods
adc
add
add
add
clc
insl
inc
add
hlt
sti
addr16
and
add
add
pop
testl
imul
or
sub
pop
lock
add
and
add
add
push
sti
shrb
cmp
clc
stos
inc
add
inc
clc
jnp
clc
pusha
add
cmc
cs
adc
add
and
add
imul
mov
add
adc
clc
ds
clc
fcoms
add
or
addr16
mov
dec
mov
fsubl
clc
and
add
add
push
add
and
add
cmp
pushf
adc
add
ret
adc
add
adc
add
mov
add
mov
add
gs
pop
ret
clc
xchg
aad
push
add
sub
clc
jno
add
xchg
add
add
jg
xchg
pushf
sar
clc
test
xor
add
push
repnz
lret
cmp
clc
inc
clc
pop
pop
shlb
add
add
add
cmpsl
clc
add
or
add
xor
add
dec
je
clc
or
cmp
clc
adc
add
jae
add
mov
add
lret
fdivl
add
in
push
das
inc
clc
mov
jp
outsl
mov
dec
sar
loopne
in
data16
dec
sbb
push
shlb
add
jnp
clc
test
out
sar
stc
xabort
clc
cmpsl
clc
stos
mov
add
pop
sub
add
add
loope
popf
push
dec
repz
clc
sbb
popa
add
dec
mov
clc
ss
dec
lret
rcrl
std
inc
clc
cmp
jge
mov
scas
mov
clc
xor
add
add
cmp
ficomps
cmp
xor
add
clc
in
sar
clc
xor
add
fs
push
clc
cli
xor
add
or
and
add
sar
mov
add
or
dec
idivb
clc
dec
loop
lods
mov
fisttps
cmc
sar
xor
add
add
sahf
mov
mov
add
mov
mov
prefetcht0
clc
jno
add
add
fdivs
clc
iret
repz
data16
sub
pop
cmp
shrl
clc
loopne
sbb
in
jmp
push
add
cmp
xor
add
add
mov
jo
add
cmp
jecxz
sbb
add
aas
or
push
leave
cmp
clc
out
sti
push
or
testb
cmp
add
out
jge
mov
jp
hlt
xchg
sub
inc
clc
mov
add
cmp
clc
enter
faddp
clc
arpl
add
loope
lret
clc
int
mov
jle
leave
mov
mov
add
clc
vandnps
jge
jo
add
jne
push
clc
je
dec
and
jbe
mov
outsl
hlt
jmp
pop
pop
test
nop
out
shl
outsl
call
jne
clc
fsubrp
sbb
clc
sub
push
cmp
clc
add
add
clc
cmp
fs
nop
cmp
fdivp
add
add
add
icebp
dec
inc
add
mov
clc
fs
aaa
pop
adc
inc
add
nop
xchg
bound
add
outsl
loopne
mov
push
add
push
clc
out
inc
clc
mov
fs
jp
clc
sub
xchg
push
ljmp
cmc
cld
or
clc
sar
clc
loopne
or
clc
push
clc
ljmp
lcall
clc
inc
clc
sbb
ret
jmp
add
dec
mov
mov
push
xchg
sbb
jne
add
nop
or
add
mov
ja
add
lret
cmc
mov
add
pop
scas
xor
das
mov
add
clc
push
cltd
adc
add
es
cmpsb
clc
clc
jb
add
add
outsb
sub
lock
add
ret
clc
jne
pop
xbegin
mov
clc
mov
mov
pop
sbb
adc
add
das
xchg
add
add
scas
sbb
popa
add
call
cmp
add
mov
lcall
inc
add
xchg
rolb
clc
js
loopne
pusha
add
cli
clc
mov
lods
sbb
xchg
lods
pop
je
seto
sbb
jecxz
or
add
sbb
lock
add
fisubrs
lock
dec
and
add
add
mov
sbb
jle
jns
clc
push
add
pop
data16
xchg
add
add
or
add
clc
cmp
in
dec
xbegin
aam
push
repz
clc
mov
in
push
bound
add
call
imul
arpl
add
add
xchg
cmp
clc
cmp
adc
add
cwtl
jns
insl
lods
jmp
add
clc
in
std
outsl
mov
clc
lock
add
scas
lahf
push
push
ljmp
xchg
movsb
clc
or
out
inc
clc
xor
add
clc
add
add
frstor
add
lcall
ja
add
add
xchg
test
add
mov
clc
aam
jl
test
clc
popf
mov
adc
clc
jb
add
push
cwtl
push
clc
ficompl
clc
xor
add
clc
jp
push
add
mov
push
jge
clc
ds
xchg
das
jmp
pop
dec
mov
jl
cmp
cwtl
xchg
xchg
adc
add
clc
xchg
adc
add
add
sub
xchg
sub
lret
fstpl
xchg
sub
add
add
jb
add
clc
mov
mov
dec
cld
icebp
enter
add
and
add
add
add
outsl
insl
sar
inc
add
xchg
out
cmp
xor
add
cmp
lods
jo
add
cmp
pop
clc
sub
clc
inc
clc
adc
dec
mov
pop
clc
xor
add
add
add
add
add
sbb
cmp
out
jmp
clc
lods
popf
or
clc
loop
ja
add
xchg
aas
lods
sar
xchg
aaa
cld
notrack
add
adc
add
xor
add
dec
test
fcmovne
xlat
mov
jne
jle
out
out
in
add
je
stos
xlat
push
push
loope
inc
add
outsl
push
inc
clc
mov
add
or
cwtl
fisttpl
clc
ds
add
in
xbegin
and
add
mov
clc
jo
add
aam
mov
clc
mov
clc
test
ficoms
add
pop
pop
jnp
xchg
addr16
shl
clc
shrl
fwait
cwtl
add
add
mov
add
add
insb
adc
add
mov
add
mov
clc
xor
cmpsl
clc
gs
adc
and
sbb
clc
popl
add
clc
mov
add
rcll
clc
pop
fsubrl
sub
cmp
js
xabort
add
in
hlt
in
fistpl
pop
out
sub
xchg
pusha
add
arpl
add
fmul
or
mov
clc
in
int
in
xchg
jge
clc
gs
mov
mov
add
xbegin
aam
mov
mov
mov
add
or
pop
faddl
cwtl
pusha
add
cli
loop
cs
clc
mov
xchg
pusha
add
inc
add
enter
push
add
jbe
clc
cmpsl
clc
or
or
in
mov
test
mov
add
out
aas
inc
clc
add
add
xchg
scas
add
add
xchg
popf
into
pop
lock
xchg
cmp
add
sub
add
mov
sub
mov
add
jno
add
fwait
mov
clc
or
das
loope
popa
add
and
add
add
jne
cmp
clc
cmp
or
clc
pop
clc
cmp
clc
inc
add
nop
xchg
into
lcall
clc
iret
pop
mov
clc
aaa
inc
add
aad
add
testb
pop
clc
lock
repnz
clc
push
leave
test
push
add
je
test
sar
aaa
xchg
mov
pushf
mov
out
cld
adc
add
addr16
sarl
and
add
cli
push
sbb
clc
jmp
clc
jae
add
adc
adc
add
jnp
and
stos
adc
add
js
cmp
clc
mov
add
xabort
xabort
xor
add
clc
gs
inc
add
cmp
out
test
jl
pusha
add
cmc
mov
paddb
ret
mov
clc
pop
sbb
pop
lahf
xchg
inc
add
aas
js
dec
bound
add
nop
sub
clc
fs
jb
add
das
lods
pusha
add
sub
inc
add
stos
sbb
clc
dec
mov
clc
lcall
push
add
and
add
xor
add
stc
xchg
inc
clc
fisttpl
jns
push
js
dec
loope
mov
push
je
push
popa
add
ret
clc
paddusb
xchg
adc
add
add
sub
lret
adc
add
add
clc
cmp
inc
add
sti
test
add
add
add
dec
inc
clc
jne
clc
xor
add
clc
inc
add
add
repz
add
sbb
cmp
add
insl
lret
push
pop
mov
or
pop
xor
add
add
mov
clc
push
add
mov
fimuls
jnp
fistps
outsb
pusha
add
sub
adc
add
outsb
cmp
and
add
add
push
cmp
add
cmpsl
clc
insl
sub
sbb
fistpll
adc
add
add
add
clc
cmpsl
clc
sbb
jg
inc
add
pop
dec
xlat
scas
sti
hlt
jo
add
add
fistpl
add
add
add
data16
shl
out
adc
add
mov
clc
cmp
add
jbe
clc
adc
add
pop
imul
lods
pop
mov
repz
xchg
pop
clc
jg
out
int
xchg
xbegin
adc
dec
rcl
in
push
xchg
out
mov
add
inc
clc
pop
or
loop
pop
push
adc
xor
lea
add
push
jle
ret
clc
out
cmp
and
fsubr
inc
add
mov
mov
add
cmp
add
int3
cmpsl
clc
imul
clc
out
dec
adc
add
mull
or
or
lock
add
push
clc
dec
xor
add
clc
inc
add
xchg
clc
arpl
add
add
inc
add
mov
clc
hlt
mov
sub
push
clc
out
lock
xchg
popf
jp
clc
out
sub
ds
fbld
add
mov
inc
clc
fisttps
clc
ds
clc
test
lcall
jno
add
daa
clc
repz
add
cmp
add
add
clc
inc
clc
xchg
popa
add
fldl
clc
cmp
push
arpl
add
imul
clc
xchg
adc
add
popf
fwait
and
mov
sbb
dec
das
aam
cmp
or
je
pop
ss
fbstp
add
push
add
stos
dec
mov
add
mov
add
jp
imul
outsb
mov
clc
sub
xor
add
int3
and
add
data16
int3
and
add
incl
add
fcoms
add
aam
repz
lcall
notl
add
enter
clc
mov
clc
jle
push
mov
lret
xchg
in
pop
push
add
jecxz
xor
add
xchg
rcrb
clc
dec
sub
add
sbb
mov
imulb
dec
xor
add
shlb
add
pop
insl
aas
imul
clc
push
add
lret
sar
clc
jae
add
arpl
add
add
scas
dec
mov
cmp
clc
call
lods
iret
inc
clc
xabort
xor
add
and
add
clc
xchg
test
xchg
mov
adc
add
sbb
add
clc
and
cmp
adc
add
fdivl
add
mov
stc
je
pushf
mov
clc
sbb
mov
out
and
adc
add
add
xchg
sub
add
and
add
and
lahf
add
cld
cmp
gs
adc
add
push
jp
and
add
mov
xchg
clc
pop
dec
mov
cmp
xchg
loop
mov
dec
roll
clc
or
clc
sub
fcom
xchg
hlt
clc
mov
clc
and
add
movsl
clc
dec
lods
xchg
xchg
mov
sbb
shlb
leave
pop
lcall
xchg
add
add
pop
out
leave
pop
imulb
mov
hlt
out
push
cmp
stos
push
lret
cmp
xchg
mov
pop
clc
leave
cmp
clc
nop
xlat
movsl
clc
or
sbb
sbb
cmp
xbegin
pop
test
ss
roll
add
sub
fcomps
jmp
popa
add
pop
jle
clc
mov
add
xchg
sahf
lea
mov
clc
adc
ss
int3
xor
outsl
outsb
jmp
add
out
pop
das
cmp
popf
cmp
xchg
shll
clc
imull
sub
in
jmp
fsts
add
add
loope
cmp
repz
mov
cwtl
ffree
clc
aam
or
add
aaa
mov
and
add
cmpsl
clc
fisubl
add
hlt
fmul
fldenv
mov
pop
mov
add
sar
mov
test
mov
idivl
es
and
add
sbb
add
add
inc
clc
clc
push
and
add
stc
rcrb
add
pop
scas
pop
push
clc
aas
test
add
add
clc
xchg
push
mov
test
inc
add
xor
add
add
sub
sar
xchg
movsl
clc
xor
add
sub
sub
sarb
push
add
push
clc
dec
lock
add
add
lods
mov
lea
clc
imul
add
mov
enter
sub
popf
jno
add
clc
cmp
out
mov
add
xchg
lret
and
repnz
add
mov
add
ds
xor
add
clc
fdivs
add
mov
das
fisubl
add
mov
imul
pop
cmp
add
sbb
inc
clc
xchg
out
mov
sbb
clc
jecxz
out
ss
out
mov
in
and
add
cmovs
clc
jo
add
mov
push
add
pop
fildl
clc
ss
and
pop
sbb
dec
lods
jp
clc
test
add
ss
arpl
add
xor
add
add
mov
popa
add
cmp
out
repnz
jge
scas
cltd
inc
add
jp
cmp
sub
xor
add
jbe
add
push
aas
pop
jb
add
add
mov
mov
clc
pcmpgtb
inc
add
mov
add
out
inc
add
out
nop
inc
add
cmp
add
dec
test
mov
clc
push
imull
sti
ljmp
cltd
pop
sbb
add
add
dec
pop
or
clc
mov
cli
nop
enter
inc
clc
shll
add
fwait
sar
add
add
add
mov
add
clc
aaa
mov
lods
inc
add
and
adc
add
clc
loop
mov
add
dec
int3
sar
test
lea
mov
clc
mov
ja
add
inc
clc
int3
fstl
fs
cmpsb
clc
push
cmpsb
clc
rolb
dec
inc
add
test
xchg
shr
pop
push
inc
clc
push
dec
mov
clc
movsb
clc
xchg
aad
out
add
enter
mov
inc
add
stos
imul
clc
mov
nop
std
mov
push
add
and
pop
test
xchg
aas
movsl
clc
scas
filds
add
add
js
clc
sbb
jecxz
jl
xchg
arpl
add
clc
hlt
or
mov
or
clc
lods
inc
add
sbb
clc
inc
clc
mov
pop
cs
sub
add
add
add
pop
clc
lret
inc
add
je
sar
sub
cmp
xor
jge
push
add
cmp
clc
adc
add
add
test
clc
repnz
cmp
clc
pusha
add
sbb
mul
clc
xbegin
clc
jae
add
cmpsb
clc
sbb
add
stc
adc
add
add
imul
mov
int3
pop
outsl
pop
xor
add
inc
clc
rcll
dec
mov
lods
xor
push
sar
or
add
sub
imul
push
sub
daa
clc
xchg
xchg
outsb
pop
ficompl
fldcw
lods
pushf
int
clc
push
add
jne
add
mov
fs
sbb
js
clc
scas
aad
clc
hlt
add
add
ja
adc
add
mov
add
arpl
add
data16
add
in
jns
pop
shlb
add
add
add
add
add
jae
add
mov
sahf
das
cmp
notl
add
mov
int
xchg
pop
dec
fs
xchg
cmc
add
lods
pop
xchg
xlat
push
cmp
inc
clc
outsl
xor
add
clc
outsl
inc
add
cli
jae
add
inc
add
popf
xchg
in
add
decb
cmpsb
clc
or
clc
fs
aas
mov
add
push
ljmp
fisttps
decl
jno
add
jo
add
clc
in
loope
inc
clc
clc
mov
add
sahf
mov
add
cli
xchg
dec
jle
push
dec
sbb
fstpl
fdivl
dec
push
jbe
xchg
dec
jg
scas
out
call
out
adc
add
add
lret
or
gs
pushf
repz
add
ret
sarb
cmp
add
jecxz
sbb
lahf
fisubrs
clc
fisubs
add
add
clc
xor
add
add
dec
adc
add
clc
push
dec
pop
das
pop
shrb
and
daa
clc
in
lods
xchg
outsb
jns
clc
fdiv
pop
mov
enter
or
xchg
dec
xchg
out
insl
test
es
adc
add
mov
clc
cmp
pop
pushf
sbb
aad
mov
movsl
clc
ret
lret
jne
clc
pop
sbb
jb
add
dec
push
insl
add
add
hlt
daa
clc
loope
mov
clc
imul
lahf
cmp
or
clc
shrb
lret
add
mov
add
outsl
shl
push
cli
bound
add
ja
add
cmp
add
mov
clc
mov
clc
int
add
push
adc
add
arpl
add
mov
int
add
aaa
clc
cs
bound
add
add
sti
dec
sub
push
enter
clc
dec
and
sub
loope
mov
push
clc
mov
or
pop
mov
adc
add
add
fisttpll
inc
clc
in
divb
clc
lahf
ret
clc
cmpsb
clc
xlat
sbb
add
xor
add
aad
daa
clc
pushf
insl
mov
clc
popa
add
icebp
std
xor
add
and
add
lods
cli
jmp
into
movsb
clc
jbe
xlat
imul
sti
inc
clc
movsl
clc
cmp
clc
out
cltd
aam
sti
sbb
xchg
shlb
or
add
repz
cli
jmp
jae
add
push
mov
pop
call
pop
jns
mov
add
push
add
mov
clc
jg
xchg
mov
add
and
add
clc
jge
clc
stc
jle
ds
scas
and
cld
bound
add
clc
shrb
lods
mov
sub
daa
clc
and
add
sub
sar
mov
add
sub
add
int
add
sbb
dec
mov
jnp
clc
xchg
stos
adc
mov
sub
or
jl
fisubl
lcall
add
mov
shlb
add
int
clc
out
add
add
add
inc
add
mov
push
bound
add
fldl
add
add
mov
mov
and
add
mov
xlat
pop
loopne
test
in
add
add
sar
xchg
inc
add
clc
into
sub
sbb
ret
add
jmp
clc
enter
clc
aad
nop
dec
out
repz
stc
gs
in
pop
test
notl
adc
clc
or
push
sub
mov
sub
jns
jmp
add
clc
cmp
ret
clc
test
cltd
mov
add
jl
clc
jne
pushf
sbb
mov
fwait
mov
sub
cmp
dec
pop
adc
sbb
clc
incl
add
fidivl
lcall
popf
mov
clc
mov
dec
stos
dec
imul
push
add
cmp
add
js
add
or
clc
mov
repnz
cmp
dec
xlat
fstl
dec
lret
clc
jg
add
iret
jnp
clc
xbegin
and
add
add
fistpl
vmovlps
add
clc
lret
outsb
jle
loop
repnz
int
jb
add
xchg
popa
add
mov
add
into
loopne
fucomp
sbb
mov
imul
add
cld
bnd
imul
outsl
in
mov
clc
pop
clc
inc
add
lock
clc
cli
mov
push
add
dec
pop
fs
in
mov
inc
clc
frstor
clc
push
inc
add
movsb
clc
in
dec
sub
fwait
movsl
clc
jnp
dec
push
clc
sbb
clc
jl
sub
clc
js
sbb
dec
outsb
data16
pop
pop
mov
sti
rol
clc
pop
adc
add
add
mov
add
add
clc
adc
add
clc
stos
arpl
add
inc
clc
push
stos
cmp
mov
pushf
mov
xor
add
sgdtl
add
das
pop
pop
add
jmp
pop
inc
add
pop
cmp
and
add
in
frstor
add
imul
loopne
rcr
mov
add
xchg
mov
out
push
clc
imul
add
cmp
mov
fcompl
outsl
dec
stc
dec
inc
clc
pop
mov
test
add
pop
jg
mov
aad
jmp
es
cltd
jmp
bound
add
add
xlat
int3
xchg
fistps
adc
add
pop
insb
loopne
jns
add
dec
push
add
sahf
ds
fisubl
add
add
mov
test
fsubl
add
mov
mov
lret
outsl
sbb
ja
add
pushf
enter
or
pop
dec
hlt
xor
clc
xlat
xlat
cmp
push
add
bswap
pop
clc
sar
jmp
jns
push
mov
ret
clc
jl
add
loope
cmp
clc
xchg
push
add
xchg
shll
add
mull
mov
add
lock
lahf
lret
jnp
clc
or
add
nop
xor
add
add
xchg
inc
add
ljmp
add
push
mov
movsl
clc
xchg
jecxz
pop
sbb
out
movntps
lret
mov
clc
stos
in
lods
xlat
mov
xchg
cmp
clc
xor
add
aaa
xor
rcrb
add
nop
jmp
clc
adc
add
xor
adc
add
add
add
push
outsb
and
add
mov
add
mov
popf
sbb
add
cmp
aaa
inc
clc
adc
add
xor
add
add
xlat
aas
lea
clc
add
mov
clc
pop
push
fimull
es
cmp
in
je
mov
sub
clc
inc
add
cmp
add
cs
xor
add
mov
movsb
clc
into
add
add
or
add
mov
push
add
and
add
and
add
mov
das
aas
fs
fnstenv
add
inc
clc
mov
add
add
pusha
add
mov
in
jmp
xchg
popa
add
mov
cmpsl
clc
stc
mov
dec
int
cmp
sbb
clc
mov
cmc
aas
out
in
stc
pop
sub
add
mov
push
clc
cmc
or
clc
popf
and
add
rcl
cmpsl
clc
or
into
outsl
out
bound
add
cmp
mov
push
add
insb
cs
jne
clc
sbb
dec
push
sbb
push
pop
arpl
add
testb
mov
aas
lcall
fimull
mov
add
aad
sar
cmp
cmp
in
jns
adc
add
imul
add
sbb
std
outsb
pusha
add
jae
add
ljmp
inc
clc
xlat
add
and
add
pop
pop
rolb
fs
pushf
push
add
jne
in
rolb
add
div
negb
aam
mov
stc
adc
add
add
xchg
sbb
mov
clc
mov
xor
add
dec
lahf
mov
rcrl
fnstsw
lea
inc
clc
mov
ja
data16
mov
nop
or
add
loopne
daa
clc
push
clc
mov
adc
add
lock
clc
aam
jecxz
jmp
clc
daa
clc
cmp
scas
fs
xchg
mov
clc
cmp
clc
mov
out
fwait
ljmp
nop
pop
mov
xchg
or
jb
add
repnz
mov
add
sarl
cltd
shlb
lahf
or
cmp
insb
xor
cmc
adc
jae
add
xabort
xchg
mov
add
add
add
inc
clc
rcrb
sti
fsubs
cmp
jle
jmp
jg
mov
cmp
in
push
cmp
ja
clc
aaa
jbe
mov
add
add
fnstcw
clc
xor
add
add
dec
dec
ljmp
jmp
loopne
repnz
movsl
clc
or
hlt
mov
jge
clc
aas
test
jp
clc
dec
int
sub
into
cmp
clc
add
add
mov
outsb
cli
sub
add
clc
xbegin
outsl
xlat
shll
and
add
fwait
dec
xlat
fnstcw
outsl
sbb
add
jge
cmp
outsb
ss
mul
clc
add
add
aas
pop
cmp
add
add
lret
clc
fnstsw
fwait
add
mov
mov
popa
add
fwait
clc
or
add
stc
xor
add
clc
xbegin
cmp
xchg
mov
xor
std
push
pop
cmp
add
mov
movsb
clc
push
ret
clc
xchg
xchg
or
clc
or
pop
xor
add
add
jno
add
cmp
clc
pop
cmp
clc
aaa
inc
add
sub
shrb
add
add
daa
clc
jbe
mov
push
inc
clc
call
lcall
int3
mov
jecxz
psubusb
clc
dec
dec
stos
outsb
inc
add
mov
add
fs
xor
add
clc
xor
add
clc
scas
pop
inc
add
lods
into
insl
popa
add
mov
test
add
cmp
mov
ja
clc
push
add
jae
add
fnstsw
repz
repz
cmp
aas
cmp
mov
cmp
add
mov
pop
pop
std
inc
clc
mov
clc
imul
add
daa
clc
xchg
xchg
aas
jp
iret
mov
sub
clc
dec
mov
clc
inc
add
jo
add
push
add
sub
cmpsb
clc
pop
sbb
clc
cmpsb
clc
fdivs
sbb
scas
cmp
cmp
xchg
cmpsb
clc
and
add
push
cld
sbb
int3
dec
idivb
out
jmp
jle
clc
inc
clc
mov
inc
add
push
add
ds
clc
mov
mov
mov
movsl
clc
or
sti
push
mov
pop
mov
push
clc
repnz
cmp
ss
lret
sbb
add
add
sbb
add
aad
pop
pop
pop
jmp
xabort
cmp
mov
sub
add
nop
add
add
dec
cmp
add
add
push
add
cmp
adc
pxor
clc
jp
jns
fldcw
adc
add
negb
or
xbegin
clc
lret
add
mov
out
daa
clc
mov
xchg
fidivrl
aas
in
jmp
sbb
pop
add
add
clc
fidivs
cmp
xchg
add
add
insb
xchg
mov
loopne
arpl
add
jbe
pop
inc
add
and
add
insl
sahf
and
mov
sub
clc
gs
xabort
pop
pop
clc
jp
cld
das
fwait
mov
add
das
jns
cmp
inc
clc
add
adc
add
add
adc
add
mov
sub
jl
clc
and
add
adc
add
decl
push
jmp
add
into
add
add
lret
dec
push
sahf
addr16
cmp
clc
out
jg
ljmp
add
popf
push
cmpsl
clc
or
data16
mov
data16
mov
and
add
fsubl
xor
clc
jno
add
add
add
add
fsubrs
add
insl
icebp
sti
xchg
iret
mov
jo
add
xbegin
movsl
clc
cmp
or
into
jle
add
sbb
pop
lock
clc
das
push
add
ret
clc
cmpsb
clc
push
clc
aad
test
lods
xor
ret
clc
cmp
lahf
das
in
sub
add
add
sar
ja
gs
add
das
and
add
xbegin
adc
add
inc
add
bound
add
lods
push
dec
lods
mov
push
add
jge
add
inc
clc
cmp
shll
dec
pop
push
or
mov
add
aaa
enter
add
push
inc
clc
movsl
clc
lods
pusha
add
clc
push
push
add
push
inc
add
pop
sub
add
push
mov
clc
add
add
insb
jge
int3
xor
add
adc
add
add
add
cmpsb
clc
pop
inc
add
in
mov
cmpsb
clc
insb
mov
jno
add
pop
xlat
mov
push
clc
je
clc
pop
or
add
in
test
cmp
clc
int
clc
repnz
add
ret
clc
add
add
loope
mov
push
adc
add
push
add
and
add
xor
add
add
frstor
clc
pop
mov
add
mov
mov
clc
xlat
leave
nop
and
add
mov
add
or
loope
lret
dec
cmp
pop
mov
adc
add
clc
sub
popf
cwtl
ds
cmc
jle
dec
faddl
add
pushf
jae
add
fimuls
clc
xor
add
stos
into
add
mov
pop
xbegin
scas
pop
in
bound
add
clc
xchg
enter
cli
add
add
add
out
cs
pushf
jns
pop
repz
or
xchg
jge
inc
add
sbb
cmp
xor
add
mov
fucomi
movsl
clc
pop
ficoms
out
ss
add
lret
push
int3
sub
add
add
add
clc
inc
add
add
add
cmp
clc
test
cmp
clc
mov
push
clc
push
loop
cmp
and
add
add
mov
add
mov
pop
rorl
adc
add
leave
cmpsb
clc
fistl
clc
out
aas
pop
jg
push
jge
xchg
cld
push
dec
fbstp
clc
loopne
cmpsl
clc
cs
inc
clc
flds
lahf
inc
clc
stc
insl
or
fsubrs
mov
add
mov
clc
lret
add
inc
add
pop
stc
xchg
xabort
xchg
dec
jp
clc
and
add
clc
mov
clc
mov
mov
dec
outsb
rorl
cmp
and
add
test
jbe
add
ja
shll
add
add
pop
clc
mov
add
cltd
dec
add
add
add
adc
inc
clc
xor
rclb
add
clc
add
add
fsubl
clc
push
popf
or
add
inc
add
lods
pop
clc
outsb
inc
add
mov
add
mov
add
int
clc
sub
cmpsl
clc
icebp
cmp
add
cli
inc
add
and
add
add
cltd
icebp
or
jb
add
add
mov
out
in
test
cmp
aas
in
lahf
or
test
lret
sbb
daa
clc
int
clc
mov
xor
add
clc
jl
clc
dec
xor
add
pavgw
clc
fwait
push
add
and
add
clc
sbb
inc
clc
inc
clc
in
xor
add
repz
sbb
lret
add
pop
in
jne
jbe
xor
add
cmp
iret
scas
sbb
test
mov
clc
xor
add
pop
pop
jle
sub
xchg
ljmp
and
add
nop
xchg
icebp
push
bound
add
add
pop
insl
lods
jae
add
xbegin
mov
clc
sahf
mov
add
inc
add
outsb
xchg
outsb
mov
test
or
xor
add
adc
add
cmpsb
clc
ret
push
cmpsb
clc
filds
std
das
test
lret
dec
gs
mov
add
xor
add
add
add
add
arpl
add
pop
mov
lcall
add
lods
out
mov
clc
xor
add
add
daa
clc
bound
add
add
outsl
xor
add
clc
insl
xbegin
es
ds
xchg
mov
in
je
iret
jbe
pop
mov
add
jl
std
stos
xchg
push
add
mov
imul
add
in
icebp
data16
es
jb
add
loop
or
add
enter
jl
clc
kmovw
cmp
add
jbe
add
addr16
mov
dec
loope
mov
int
mov
mov
add
inc
add
xchg
inc
add
fsubrs
cmp
clc
pushf
lods
fwait
fwait
mov
add
dec
out
addr16
add
add
push
popa
add
repnz
out
fwait
push
add
mov
jmp
movsl
clc
xor
add
or
jl
add
jns
fsubrl
dec
std
push
mov
fs
inc
clc
jl
pop
test
cmp
add
call
add
or
test
cmp
in
pop
sub
cmp
clc
and
add
cmpsl
clc
aad
pusha
add
dec
jl,pt
clc
and
add
clc
fs
xor
add
sbb
add
add
test
add
dec
jbe
push
add
cmpsl
clc
dec
sbb
int3
ret
clc
gs
jo
add
ds
clc
or
jecxz
push
add
lret
je
or
cld
into
das
adc
aas
mov
clc
adc
add
mov
sahf
outsl
notb
add
fstp
xchg
cmpsb
clc
mov
movsb
clc
pushf
adc
jbe
clc
aaa
mov
icebp
push
clc
xchg
push
es
int3
adc
clc
hlt
jns
stos
rol
clc
jno
add
clc
data16
mov
fsubl
jno
add
or
mov
mov
add
jp
inc
clc
es
jae
add
repz
add
jge
and
add
rcl
xor
add
insl
mov
test
clc
popa
add
or
clc
sub
jecxz
dec
aad
dec
pop
dec
popa
add
xor
pusha
add
aas
sub
and
add
add
arpl
add
cs
jne
jl
cmp
add
fisubrl
lahf
mov
fcoml
add
sti
outsl
and
add
das
cmp
mov
dec
add
add
rcrb
sbb
clc
dec
cmp
push
add
out
mov
loop
rcrl
loopne
mov
ret
bts
add
add
clc
jne
clc
and
mov
clc
out
mov
clc
cltd
xchg
sub
cmp
add
clc
or
cmp
mov
pop
clc
mov
clc
adc
add
add
jae
add
js
cli
outsb
mov
es
adc
add
pop
mov
iret
pop
clc
dec
test
cwtl
popa
add
ret
clc
inc
add
cmpsl
clc
aaa
loopne
hlt
in
push
ja
jp
push
add
xchg
cmp
push
add
add
pusha
add
cmp
or
fdiv
rorb
clc
das
mov
fnstenv
add
jnp
pushf
testb
add
add
xchg
clc
push
out
dec
je
xor
add
jo
add
clc
mov
add
lret
out
insl
jo
add
add
add
jbe
xchg
push
add
jo
add
add
mov
mov
xchg
pop
and
add
mov
icebp
fbstp
add
clc
add
add
pop
add
add
leave
mov
cmp
ficoms
add
mov
push
clc
or
add
cmp
test
rcll
inc
add
push
adc
add
mov
inc
add
and
add
aam
add
pop
pop
lcall
fsubr
lock
clc
cmp
mov
pop
fwait
sarl
dec
dec
insb
call
add
add
push
add
push
add
dec
enter
add
add
sub
xchg
xbegin
add
cmp
add
cmp
sahf
adc
clc
jg
push
clc
fsubrp
inc
add
out
pusha
add
in
in
inc
add
lahf
mov
sar
mov
cmp
std
and
add
add
and
add
clc
es
test
add
imul
cmc
testb
sub
adc
add
mov
cmp
add
sar
sar
xor
add
lahf
sbb
test
or
xchg
pop
lea
add
lcall
add
hlt
xor
add
out
mov
test
add
fisttpll
pop
fs
sbb
add
pop
cwtl
ss
add
popa
add
inc
add
xor
add
add
add
add
pop
aam
leave
arpl
add
push
xchg
xlat
dec
and
add
add
jbe
push
push
add
xor
add
stos
mov
clc
add
add
add
add
add
scas
push
cltd
or
add
mov
movsb
clc
xchg
stos
jne
add
cwtl
xor
add
mov
add
adc
add
add
add
sbb
add
add
sub
into
fs
rclb
clc
insb
xchg
mov
add
sbb
shll
jo
add
jae
add
add
clc
aam
add
mov
clc
cs
and
add
xchg
inc
add
ds
pop
fdivl
add
add
notb
add
xor
add
aas
sbb
add
lcall
inc
add
pop
adc
add
xlat
push
clc
test
add
adc
add
cmp
daa
clc
into
cli
call
mov
add
cmc
inc
clc
mov
dec
dec
in
out
xor
clc
jl
add
mov
push
clc
ret
sub
clc
imul
cmpsl
clc
sbb
xchg
mov
add
add
push
shrb
or
xor
scas
lock
test
jbe
push
inc
add
adc
add
mov
add
in
stos
dec
ret
clc
mov
clc
and
add
adc
add
dec
fdivrp
xchg
das
clc
add
mov
clc
adc
outsl
pop
add
dec
mov
bound
add
jae
add
clc
jmp
add
pop
cmp
clc
or
lcall
xchg
jp
clc
mov
xor
add
cmp
jb
add
add
add
sbb
add
insb
inc
clc
cmp
add
add
iret
mov
add
pop
and
rorb
outsb
push
xbegin
sbb
push
and
add
lahf
cmp
outsb
faddp
clc
add
add
add
mov
insl
cs
clc
jl
testl
loope
cwtl
add
add
flds
adc
add
int
add
pop
sbb
sarb
clc
dec
ret
clc
leave
mov
arpl
add
add
jg
clc
cmpsl
clc
xabort
and
add
add
aaa
sub
dec
ret
cmp
add
aam
cmp
sarb
xchg
fdivrp
xchg
ja
sar
clc
aas
fstl
clc
sti
scas
mov
cmp
clc
xchg
aaa
fsubs
aam
sub
clc
cli
push
in
or
clc
jmp
adc
out
loope
lock
mov
add
mov
imul
loop
ret
clc
mov
pop
roll
add
decb
fs
push
add
std
insl
jl
push
clc
das
mov
mov
clc
nop
ljmp
cld
add
add
sub
clc
pushf
sub
push
arpl
add
out
lret
add
mov
arpl
add
clc
sbb
clc
mov
pop
pusha
add
push
add
cmp
jecxz
pop
mov
cmp
lcall
fisubs
movsb
clc
loop
xchg
mov
xchg
jno
add
sbb
add
add
pop
sub
std
xor
add
inc
add
or
add
data16
xlat
lahf
xbegin
jp
clc
and
xchg
mov
add
xbegin
movsb
clc
add
add
rorl
cmc
xor
add
insl
xor
mov
add
jmp
sub
clc
mov
arpl
add
clc
insb
mov
pop
push
add
test
lea
pop
clc
or
mov
xor
clc
jae
add
mov
outsb
sbb
clc
mov
fsin
insl
call
add
and
add
clc
and
add
ret
dec
cmp
pop
sahf
scas
push
inc
add
gs
cmpsl
clc
inc
clc
and
add
dec
push
add
stos
fldpi
push
add
jo
add
insb
mov
or
cli
jge
clc
xor
mov
pop
clc
stos
daa
clc
jmp
clc
into
mov
enter
test
sub
dec
call
add
clc
push
dec
sahf
jnp
out
sub
mov
ds
sub
clc
sub
dec
mov
pop
in
cs
fstpl
daa
clc
mov
add
cmp
clc
jne
xchg
adc
add
es
jl
push
add
movsl
clc
int3
ffree
clc
dec
test
add
ret
clc
mov
aad
cmp
add
jle
add
cmp
add
add
xchg
sar
add
add
or
xor
add
clc
mov
push
repz
shll
jmp
add
or
or
loope
lcall
clc
sub
add
mov
iret
in
push
or
clc
mov
jmp
movsl
clc
push
shlb
test
ret
fsubrs
add
add
xor
add
jg
sbb
adc
into
outsb
mov
js
xchg
mov
cli
repnz
mov
xor
add
cmc
lcall
jl
clc
imul
clc
and
add
nop
pushf
xchg
or
imul
mov
into
sub
mov
jae
add
pop
test
outsb
pushf
sbb
mov
mov
add
aam
clc
in
jo
lret
push
data16
mov
lock
clc
dec
sti
jno
add
add
movsb
clc
jne
clc
and
add
ret
clc
push
inc
add
ljmp
add
cmp
pop
fwait
cmp
lahf
repz
jle
ror
cli
and
sahf
inc
add
lods
jge
push
clc
mov
add
cmp
jo
add
cmc
sub
push
add
xor
clc
insl
scas
xor
add
add
mov
cmp
mov
add
sub
add
add
clc
and
add
add
das
insl
repz
es
int
stos
insl
outsl
clc
clc
mov
sbb
add
sub
clc
int3
cmp
adc
add
out
outsl
mov
clc
inc
add
cmp
add
addr16
out
icebp
pop
pop
sub
add
sub
mov
je
add
inc
clc
jne
xor
add
add
in
in
lock
es
dec
xchg
cmc
gs
jmp
add
mov
loopne
inc
add
nop
aam
xlat
outsb
cmc
mov
clc
daa
clc
enter
inc
clc
hlt
xchg
in
pop
je
xchg
dec
iret
hlt
clc
insl
clc
dec
dec
cld
dec
aad
add
insb
sar
clc
pop
jae
add
or
or
dec
jle
clc
fimull
fs
sbb
dec
jecxz
jae
add
clc
aam
inc
clc
push
add
jge
shrb
jle
clc
xor
xchg
cmp
enter
inc
add
mov
cmp
outsb
fwait
mov
mov
fwait
gs
in
dec
push
pop
outsb
mov
cmp
fs
xchg
pop
add
jns
sarl
adc
xlat
mov
cmp
add
jnp
add
inc
add
and
jns
outsb
aad
clc
pop
xchg
push
clc
xchg
das
mov
add
in
push
cmp
jge
mov
xchg
std
xchg
and
add
clc
and
add
cld
fimull
das
cmp
adc
add
add
pop
jnp
add
cmp
clc
or
in
pop
pop
scas
lahf
adc
add
inc
clc
mov
insl
repz
push
jmp
test
mov
std
sub
clc
icebp
popa
add
xchg
call
adc
add
add
add
fisttpll
mov
push
add
push
inc
clc
push
sbb
add
pop
cmpsb
clc
pop
negb
jecxz
push
cmp
push
sti
jo
add
lret
inc
clc
imul
clc
sub
add
and
addr16
cmc
push
stos
popa
add
xlat
and
add
clc
aad
lock
pop
clc
push
clc
fsts
add
push
nop
stos
das
cli
pop
cld
mov
sbb
add
jge
cmp
clc
mov
sub
mov
dec
sar
pop
mov
add
aad
or
clc
pusha
add
call
in
mov
mulb
inc
clc
in
out
mov
clc
lret
xchg
xor
into
cmp
sbb
clc
mov
test
ds
fwait
cmp
clc
loope
or
adc
add
xchg
jo
add
sbb
xbegin
stos
jge
add
scas
inc
add
push
or
add
clc
mov
sub
je
mov
decb
add
mov
push
add
enter
mov
add
add
ss
clc
iret
xabort
add
cmp
clc
add
add
dec
jno
add
push
add
jns
je
xor
out
std
dec
icebp
sbb
push
xor
add
clc
aam
push
add
push
xchg
xchg
mov
fs
aas
pop
stos
and
push
sub
xbegin
push
aam
scas
cmp
mov
cmp
clc
movsb
clc
mov
clc
sbb
add
lcall
push
pop
mov
add
inc
clc
push
clc
imul
clc
jae
add
bound
add
mov
jae
add
cmp
das
out
mov
clc
add
add
sahf
out
inc
clc
xlat
jmp
xabort
clc
xchg
dec
ja
cmp
cli
call
clc
mov
jbe
clc
outsb
cvttps2pi
jb
add
clc
cmpsl
clc
roll
bound
add
clc
lret
add
clc
jle
pop
in
mov
cmp
add
test
xlat
push
outsl
xchg
in
mov
clc
cwtl
arpl
add
clc
or
add
popf
dec
aad
clc
mov
pop
clc
xchg
adc
and
jnp
clc
arpl
add
frstor
clc
insl
imul
xchg
adc
add
inc
add
adc
add
inc
add
mov
clc
std
and
add
mov
clc
mov
lea
clc
inc
add
xchg
push
add
in
fildll
clc
sbb
push
jmp
push
clc
inc
clc
clc
ret
clc
jl
clc
inc
clc
add
xor
add
mov
add
maxps
scas
mov
clc
xor
add
add
rcrl
jmp
lock
outsl
sbb
add
pop
xchg
cmp
dec
mov
lahf
fwait
mov
clc
jmp
clc
pop
jg
in
cmp
in
push
dec
mov
int3
inc
clc
sar
xchg
jno
add
hlt
sbb
add
or
add
xor
add
inc
clc
das
or
and
add
cmp
clc
sub
xor
add
out
jmp
xchg
aas
psubq
add
pusha
add
addr16
loopne
cli
decl
push
clc
mov
push
sub
addr16
xchg
pop
in
inc
clc
js
lcall
push
add
xchg
inc
clc
push
clc
jne
inc
clc
js
popa
add
jns
jae
add
xchg
out
pusha
add
mov
clc
cmc
inc
clc
xor
cmc
mov
pop
add
add
xchg
addr16
bound
add
add
clc
inc
clc
sti
adc
add
clc
or
add
repz
add
fcmovnbe
cmpsb
clc
cmp
clc
insl
sub
pushf
adc
add
icebp
and
add
clc
aam
clc
pushf
leave
ret
clc
and
add
shll
add
add
add
add
imul
add
inc
add
pop
push
ror
nop
test
stos
sub
or
dec
negl
pushf
xor
add
jl
cmp
or
fdivrs
xchg
push
mov
mov
clc
mov
std
inc
add
jge
aas
repnz
add
mov
roll
add
popf
add
push
cmp
pop
or
jle
adc
cmp
dec
sbb
lock
or
popa
add
add
add
pop
ret
clc
xchg
inc
add
xchg
mov
divl
mov
and
loope
ss
mov
add
enter
mov
outsl
cmpsb
clc
mov
cmp
movsl
clc
and
add
mov
in
scas
outsl
mov
sahf
into
push
xor
add
clc
inc
clc
cmp
out
idivl
dec
inc
clc
cmp
lods
loopne
push
and
add
inc
add
loop
jno
add
add
jmp
fistl
add
inc
add
das
int
add
mov
clc
mov
xor
mov
sbb
clc
xbegin
mov
adc
add
add
add
jecxz
leave
ljmp
xchg
cmp
cld
jecxz
jb
add
push
add
adc
add
into
out
sar
mov
xbegin
cmp
pop
add
add
mov
mov
fcoms
push
mov
clc
push
clc
mov
out
xchg
xor
mov
clc
jb
add
pop
inc
add
insb
pop
leave
call
add
push
clc
mov
aad
add
jg
pop
je
clc
sbb
sbb
aas
jne
lea
cli
fs
and
add
lods
xchg
push
pop
pushf
lock
jno
add
add
aam
add
clc
pop
xor
add
add
fwait
std
call
repnz
add
sbb
clc
inc
add
push
insl
aam
int
clc
mov
clc
xor
add
mov
inc
clc
int3
mov
add
loope
sbb
add
sub
xor
add
out
repnz
pop
pop
sar
out
mov
mov
add
leave
sbb
dec
push
add
mov
clc
dec
dec
rclb
dec
imul
clc
mov
add
out
aad
xbegin
call
insl
loopne
in
cmp
add
sar
fmuls
fs
mov
inc
clc
pusha
add
aam
inc
add
sub
dec
mov
fcmovnb
clc
mul
clc
adc
clc
pop
inc
add
push
in
in
addr16
cmpsb
clc
xchg
adc
add
add
sbb
test
adc
add
add
inc
clc
pop
clc
push
sahf
push
xchg
ljmp
clc
mov
jmp
mov
xor
add
test
add
mov
aaa
or
cmp
clc
data16
pop
repz
rcrl
sub
ret
clc
test
ret
clc
mov
loope
es
cli
pop
jmp
clc
jnp
ja
add
pusha
add
mov
mov
add
js
pusha
add
jo
add
sbb
or
push
stos
js
add
lret
in
lods
sarb
push
add
out
dec
ret
clc
movsl
clc
xor
clc
push
xchg
push
push
adc
mov
loope
jp,pt
clc
pop
clc
sbb
clc
ds
mov
or
clc
cld
ficompl
mov
aas
cmp
add
scas
xlat
xor
clc
repnz
outsb
push
clc
lods
inc
add
mov
cmc
cmp
add
add
lea
add
add
ja
lea
int
ret
clc
stos
dec
inc
clc
xchg
arpl
add
leave
xor
xor
add
add
mov
sub
clc
pop
insl
push
xchg
aas
fmul
call
or
cmp
xchg
xorps
out
lcall
sub
add
add
add
cmp
pop
mov
add
inc
add
add
add
shr
pop
clc
mov
clc
or
clc
jecxz
ja
pop
push
add
mov
cmp
pop
clc
and
icebp
inc
add
loopne
jnp
fiadds
iret
cmp
es
fs
test
clc
cwtl
add
add
inc
add
sub
dec
adc
add
clc
imul
inc
clc
sbb
clc
je
mov
add
add
add
add
imul
add
cmp
inc
clc
lods
mov
lret
sub
fwait
bound
add
add
pop
pop
xchg
faddl
mov
sub
add
or
pushf
add
scas
out
aaa
xchg
fstpl
ja
gs
mov
mov
sbb
inc
clc
jle
enter
bound
add
add
enter
movsl
clc
movsb
clc
repz
dec
scas
xchg
pusha
add
jo
add
ljmp
or
adc
add
add
sahf
adc
add
cli
sub
clc
push
add
into
loope
lcall
add
iret
mov
and
add
ss
mov
push
add
jg
clc
shr
mul
clc
int
add
mov
add
sahf
cmp
lahf
sbb
sub
clc
and
add
add
mov
clc
mov
clc
xor
add
cmc
jecxz
adc
add
clc
data16
push
add
jp
clc
jle
popf
lcall
es
mov
add
pop
pop
clc
rcrb
cmp
xchg
fisubrl
add
mov
add
xchg
int3
cltd
cltd
and
in
arpl
add
add
add
inc
add
pop
in
or
add
mov
pop
dec
or
mov
sub
scas
xor
add
add
in
cmp
clc
int3
or
imul
jae
add
push
sar
mov
xchg
fwait
sub
clc
sub
mov
mov
dec
pop
clc
adc
add
clc
xbegin
aas
mov
xchg
aad
mov
mov
ss
lahf
mov
dec
xor
add
clc
xchg
mov
pusha
add
and
add
lret
fs
inc
clc
sbb
outsb
stc
push
pop
std
sub
loopne
loopne
out
jno
add
add
mov
inc
clc
dec
lret
dec
lcall
clc
push
add
dec
loopne
test
in
push
add
ja
xchg
push
or
jb
add
push
and
add
adc
add
cmpsl
clc
js
fs
dec
adc
add
add
clc
and
add
add
testl
jae
add
cmpsl
clc
frstor
daa
clc
sub
out
sar
dec
xor
add
das
push
add
fcompl
add
cmp
add
test
imul
pop
clc
mov
add
mov
inc
clc
cli
sub
clc
dec
imul
push
xchg
push
add
xchg
and
add
gs
es
inc
clc
xchg
pop
iret
call
out
mov
sub
clc
lret
push
and
add
push
pop
adc
dec
pop
in
stos
xlat
fsubrl
jg
add
lahf
jmp
dec
aam
xor
add
add
aam
cmp
adc
add
add
repnz
add
xlat
clc
cmp
add
sub
add
mov
clc
aas
sub
out
nop
lahf
movsb
clc
out
xchg
bound
add
add
cmpsl
clc
jp
clc
sar
mov
push
sbb
clc
int
mov
mov
or
add
cld
push
xchg
sbb
mov
mov
jne
add
das
out
pop
cmp
jp
clc
aad
popa
add
dec
cmpsb
clc
cmc
add
lcall
clc
mov
add
test
clc
jp
clc
sti
mov
xchg
fs
clc
mov
daa
clc
mov
adc
inc
add
jb
add
pop
mov
add
add
add
add
dec
iret
lods
and
add
stc
hlt
xbegin
clc
sbb
xor
lods
xor
add
lahf
push
add
pushf
inc
clc
decl
mov
add
dec
loopne
punpckldq
add
mov
outsl
or
ret
clc
sti
scas
or
or
test
adc
add
add
xor
add
lret
mov
xchg
xchg
pushf
cmp
stos
int3
cmp
add
add
xor
add
cli
sarb
icebp
cmp
ss
xor
add
int3
sub
add
out
out
mov
push
add
mov
mov
push
xchg
mov
roll
add
clc
fnstcw
movsl
clc
xor
add
mov
sub
inc
clc
sub
clc
shll
add
sub
stos
imul
sub
cmp
repnz
add
bound
add
mov
clc
and
add
clc
jl
jne
daa
clc
or
das
mov
xbegin
rorb
loopne
cmp
scas
and
add
add
mov
sar
push
pop
xchg
test
lahf
jnp
cmp
clc
inc
add
mov
mov
dec
lret
dec
dec
add
or
lods
nop
es
arpl
add
jl
mov
sub
clc
popa
add
jb
add
clc
jmp
rolb
clc
shr
sbb
in
popf
jge
push
add
sub
sbb
clc
jae
add
dec
outsl
lods
push
jg
add
cli
imul
aaa
je
clc
iret
cli
push
aaa
inc
clc
lcall
dec
fs
adc
dec
pop
into
movsl
clc
std
xor
clc
adc
add
lcall
movsb
clc
push
add
and
add
or
add
add
fdivrl
add
sahf
out
jp
das
jo
add
push
xor
inc
clc
mov
fcmovne
sar
nop
or
inc
add
in
loope
mov
add
lcall
cmp
add
clc
add
adc
add
testl
lahf
mov
insl
jns
clc
imul
push
jnp
in
or
add
dec
and
sti
sbb
sahf
pushf
adc
add
clc
lret
dec
clc
test
sub
adc
add
test
xchg
add
add
clc
sbb
add
data16
into
jbe
cmc
addr16
ret
clc
jmp
jo
add
mov
das
dec
or
pop
pop
loopne
and
add
aad
mov
push
push
test
mov
scas
fisttpl
add
cmp
outsb
push
jp
add
into
cmp
fwait
cmp
jo
add
movsb
clc
add
add
add
add
xchg
es
adc
add
xbegin
sbb
clc
or
clc
jmp
clc
jns
add
add
add
scas
cmc
xabort
add
jle
mov
add
popf
fstps
clc
cmp
and
add
insl
dec
fwait
mov
push
add
sub
sahf
lods
mov
clc
repz
clc
cmp
clc
cltd
push
ja
clc
pusha
add
mov
dec
push
xlat
pop
xchg
and
add
and
cld
data16
cs
xchg
in
push
jmp
add
inc
clc
push
add
pop
loope
jp
clc
add
and
sub
clc
shll
repnz
and
add
insb
add
in
add
add
clc
lods
lret
xchg
sub
clc
inc
add
mov
ja
xchg
scas
ja
add
das
daa
clc
xor
add
inc
clc
xchg
cmp
add
lods
outsl
dec
into
ja
add
jecxz
sar
daa
clc
cmp
push
add
lret
jno
add
repnz
insl
pop
jns
add
adc
dec
fs
sub
fidivs
clc
fs
pop
push
inc
clc
push
clc
es
mov
or
add
xbegin
movsb
clc
data16
repnz
cwtl
int
and
add
add
xor
add
add
add
sar
rcrb
sub
add
fistl
adc
add
push
lret
aas
xchg
or
clc
xchg
cmpsb
clc
pop
xchg
cmpsl
clc
lods
sbb
mov
push
int3
xbegin
clc
jbe
out
mov
mov
add
add
out
cli
xor
add
dec
mov
clc
std
cmp
jnp
mov
clc
adc
add
ss
xor
outsl
add
dec
sbb
clc
sar
rol
clc
cmp
xbegin
cltd
and
add
add
sub
clc
repz
add
add
adc
add
push
lods
push
add
popf
sbb
pop
mov
sub
enter
loop
or
mov
add
adc
add
push
add
jg
clc
loope
pop
mov
repnz
or
imul
add
jnp
adc
add
clc
sbb
jne
sub
clc
stc
inc
add
dec
push
mov
pop
mov
clc
cmp
push
add
arpl
add
clc
fiaddl
testb
pop
sbb
add
loop
mov
clc
add
add
xchg
in
cmp
sub
add
push
and
test
xchg
prefetch
or
negl
add
clc
mov
shrb
adc
add
push
add
aad
xabort
sub
adc
add
add
enter
add
ja
fwait
mov
rcrb
aam
push
or
and
xchg
insb
push
or
sti
lcall
pop
clc
pop
mov
sti
or
clc
sub
xor
add
clc
imul
xlat
xchg
inc
add
sbb
sbb
int3
test
inc
clc
ja
add
outsl
adc
add
mov
jno
add
mov
add
out
test
adc
add
lahf
cmpsb
clc
out
push
aaa
cmp
add
mov
or
popf
ja
adc
add
clc
mov
clc
mov
add
mov
cld
pop
out
dec
scas
das
inc
add
es
sar
clc
sahf
cmp
add
adc
mov
mov
clc
nop
test
add
loope
jecxz
test
xchg
pop
or
add
lahf
xor
add
arpl
add
or
add
sub
add
inc
add
xlat
fisubs
add
push
add
add
xchg
inc
clc
int3
jno
add
clc
stos
sbb
into
add
std
lock
xabort
daa
clc
testb
mov
add
add
clc
repnz
add
adc
add
push
in
xor
add
lahf
sti
dec
push
inc
add
rorb
clc
mov
scas
fiadds
add
out
sub
add
inc
add
push
jno
add
add
lea
add
lahf
lea
add
jbe
push
repnz
and
inc
clc
dec
dec
imulb
hlt
pcmpgtw
pop
in
in
sub
clc
enter
sar
clc
mov
add
xor
add
scas
in
mov
dec
imul
repnz
push
stos
inc
add
imul
adc
add
cltd
jns
cmp
scas
cld
or
fs
das
dec
add
pushl
add
add
jl
clc
mov
iret
pusha
add
dec
push
add
add
in
push
xor
clc
cltd
loopne
xbegin
add
pusha
add
sbb
clc
cmp
clc
cmp
clc
mov
scas
push
loop
test
ljmp
dec
sbb
fs
sbb
add
dec
popa
add
jb
add
loop
sub
nop
jne
clc
add
add
add
add
add
push
cmp
add
lret
add
sbb
clc
cmp
cs
gs
mov
aad
inc
clc
out
sub
clc
ja
jne
xor
add
push
mov
out
xor
clc
imul
add
cs
sub
push
mov
add
adc
add
lret
add
mov
mov
add
add
add
add
clc
movsl
clc
sub
xor
add
and
add
push
add
dec
cmp
sar
clc
lods
fsub
clc
pop
clc
adc
daa
clc
mov
repz
sub
clc
inc
add
mov
add
inc
clc
clc
pop
push
add
into
push
clc
adc
clc
imul
mov
pop
inc
add
ja
fs
aad
rcll
add
and
add
add
sbb
aas
loop
int3
mov
add
and
add
add
add
imul
ljmp
clc
insb
jno
add
clc
pop
fidivrl
sar
cmp
cmp
push
clc
inc
clc
inc
clc
loopne
cld
mov
mov
sub
xlat
js
clc
imul
sub
clc
rcll
in
mov
push
clc
push
add
mov
add
leave
cs
cmp
cltd
iret
sbb
fisttpl
lock
xbegin
clc
mov
clc
dec
add
add
cli
xor
add
mov
add
popf
or
arpl
add
xchg
stc
aad
clc
movsl
clc
mov
sti
sar
xchg
cmp
out
stos
xor
add
clc
cmp
fdivrs
enter
clc
push
add
inc
add
dec
icebp
lcall
add
add
add
push
rorb
add
popa
add
leave
mov
jecxz
push
inc
clc
gs
call
cld
loop
sbb
add
dec
cs
hlt
inc
add
cmp
or
data16
add
add
clc
sub
lods
push
add
pop
sub
clc
and
add
adc
mov
mov
movsl
clc
jnp
xor
add
outsl
or
lcall
sub
ds
stos
dec
hlt
mov
mov
clc
ljmp
add
jecxz
fsub
clc
cwtl
mov
jb
add
xchg
into
lods
and
add
clc
aaa
std
lahf
outsb
sub
cltd
fwait
stc
loope
sarb
fucomp
scas
out
cmp
jns
clc
scas
pop
std
xchg
xchg
xbegin
add
clc
sub
cmp
clc
adc
sub
nop
test
pop
xchg
and
add
jge
mov
clc
aas
pop
hlt
negb
fcmovnbe
jb
add
add
add
clc
xlat
push
mov
mov
push
cltd
inc
add
es
or
faddl
add
mov
clc
mov
std
add
add
lcall
cmpsb
clc
movsl
clc
pop
gs
js
add
fisubrl
and
add
clc
int3
jae
add
and
add
mov
mov
ds
sbb
in
repz
clc
pop
mov
je
cmp
test
adc
add
stos
push
cmc
sub
jp
icebp
insb
xchg
idiv
pushf
mov
test
xlat
mov
mov
inc
clc
fwait
rcrb
movsl
clc
and
add
clc
out
adc
add
or
xlat
xchg
push
clc
and
add
add
and
add
pop
sar
mov
test
cmp
icebp
int
push
das
pop
clc
scas
xchg
mov
fcomps
sub
add
push
jae
add
jle
loopne
mov
clc
dec
dec
ret
clc
in
push
clc
xchg
pop
clc
hlt
inc
clc
pop
mov
out
push
fs
ljmp
addr16
loop
dec
mov
lods
aam
mov
jns
dec
aaa
adc
add
sar
or
daa
clc
cs
mov
clc
mov
lock
mov
inc
add
push
adc
add
xor
add
or
clc
jmp
imul
push
add
xabort
arpl
add
jno
add
push
push
jo
add
add
clc
adc
add
pop
or
add
add
sbb
enter
add
add
in
dec
sbb
aad
clc
jg
cmp
add
data16
jbe
sbb
mov
clc
ljmp
daa
clc
mov
in
loop
out
mov
imul
clc
sbb
cmp
clc
mov
add
sub
add
add
mov
in
mov
clc
cmp
add
pop
fwait
pushf
lea
add
pop
adc
mov
iret
popf
mov
loopne
ret
clc
filds
add
mov
clc
pop
ljmp
add
inc
add
iret
rorl
inc
add
push
add
es
fstpt
test
pop
xchg
into
clc
scas
mov
jmp
inc
clc
gs
das
lahf
push
scas
rcll
add
jmp
icebp
bound
add
clc
dec
inc
clc
mov
inc
clc
out
inc
add
or
clc
scas
aas
ss
addr16
add
add
clc
out
pop
sub
enter
cmpsb
clc
fbstp
add
add
add
lcall
aam
lret
sar
pop
clc
push
add
sti
jns
dec
sti
dec
daa
clc
or
clc
or
sbb
clc
mov
fsubrl
clc
mov
test
pop
lock
clc
xchg
sahf
mov
mov
clc
fldcw
sbb
add
pop
scas
imul
aad
add
adc
adc
add
cld
loopne
jmp
es
jl
aaa
and
add
push
and
add
jno
add
clc
fisubs
sub
add
lock
loop
push
push
add
ja
lret
cmp
mov
mov
je
fnstcw
lods
scas
out
jae
add
int
mov
add
adc
fs
adc
add
xchg
cmp
cld
xabort
jae
add
clc
nop
stos
cmc
into
sub
shlb
mov
or
fldl
add
mov
sub
add
cmp
inc
add
mov
clc
ret
clc
nop
inc
add
push
add
add
add
clc
xchg
ds
mov
ja
sbb
pop
out
aaa
pop
clc
or
clc
es
fs
sbb
clc
dec
mov
hlt
nopl
add
imul
lock
or
add
fstps
add
adc
add
xbegin
popa
add
inc
clc
mov
fmuls
cmc
sar
add
imul
mov
mov
clc
inc
add
fnstenv
mov
mov
clc
negb
rolb
gs
test
stos
cmp
clc
inc
add
cmp
clc
fsubl
clc
cmp
iret
fdivrp
dec
xchg
pop
mov
cmp
push
add
inc
clc
cli
es
xchg
jg
add
nop
fs
jns
mov
mov
clc
popa
add
mov
add
xor
add
into
js
clc
mov
and
add
add
mov
cmp
enter
pop
aam
push
add
imul
in
adc
add
mov
xor
add
in
mov
add
shrl
aad
inc
clc
push
add
imul
xchg
loopne
insl
jnp
mov
mov
cmpsb
clc
xor
jo
add
xchg
fldenv
add
dec
adc
add
add
add
js
push
pop
mov
add
lret
stos
and
add
clc
add
fwait
shll
add
clc
xchg
dec
sar
xchg
xchg
sub
fsubl
add
pop
xchg
mov
mov
nop
out
je
lret
mov
add
or
add
cmpsl
clc
push
dec
hlt
int
xor
add
sahf
jg
aam
sub
add
repz
cltd
aad
mov
mov
add
icebp
cmp
mov
int
adc
cmp
add
clc
dec
out
mov
iret
adc
add
and
add
add
mov
repz
add
and
add
mov
adc
mov
push
clc
jns
lea
das
mov
dec
clc
insl
jge
jg
push
add
jp
fwait
push
bound
add
jns
sti
mov
jl
lods
jb
add
dec
xor
add
cmp
test
xchg
test
mov
adc
add
add
out
pop
mov
mov
add
and
add
fisttpll
add
add
add
xchg
repz
mov
sbb
add
aas
adc
add
add
cmpsb
clc
out
jno
add
add
add
and
inc
clc
mov
pushf
mov
push
jp
daa
clc
inc
clc
and
add
cltd
pop
clc
loopne
ret
push
add
imul
fldt
add
add
jmp
clc
adc
dec
push
add
sahf
enter
pop
adc
add
add
xchg
add
add
add
lock
and
mov
popf
lods
std
test
xbegin
jo
add
lods
jnp
cmp
add
in
call
dec
inc
add
aam
inc
add
dec
add
jp
addr16
imul
xchg
mov
add
add
xor
add
insl
lret
mov
dec
adc
mov
clc
xchg
xchg
pop
xbegin
rcll
dec
xabort
add
addr16
cmp
xchg
rcr
cld
loop
xchg
leave
pop
mov
sahf
xor
add
add
fsin
cmp
clc
sti
xor
add
cmp
cmp
xor
add
inc
add
xlat
aam
clc
jle
add
push
cltd
xchg
mov
xchg
jl
jmp
clc
mov
add
clc
adc
add
clc
xchg
inc
clc
daa
clc
push
clc
ja
xchg
aaa
add
add
add
xchg
push
in
jns
add
test
add
cmpsb
clc
rolb
add
dec
cld
xchg
bound
add
add
int3
adc
add
mov
cld
sub
add
add
movsl
clc
imul
cmp
sbb
add
dec
adc
das
pop
mov
clc
bound
add
and
add
inc
add
clc
test
clc
or
test
add
jl
out
je
clc
fnstsw
clc
and
add
clc
adc
add
fdiv
mov
add
mov
sar
dec
cmp
adc
add
jb
add
sbb
xor
add
xchg
ret
clc
mov
ficompl
clc
mov
pop
mov
pop
mov
ljmp
add
add
add
push
lret
cli
jb
add
jae
add
add
cwtl
jne
cmp
adc
add
add
pop
clc
xchg
xchg
xchg
sub
cmp
mov
push
pop
or
push
sub
add
pop
add
add
adc
add
outsl
xor
add
scas
mov
sar
and
sarl
jne
movsl
clc
fcomip
sbb
clc
inc
add
jmp
adc
add
xor
add
sub
add
xchg
lea
add
es
and
add
inc
clc
sbb
loope
mov
aaa
leave
mov
jns
mov
push
sub
add
dec
test
push
jle
clc
shr
jnp
adc
pop
jae
add
jle
movsb
clc
jg
cmp
mov
jns
loopne
pop
icebp
pop
sbb
or
ja
fimuls
xchg
xchg
push
fsubs
mov
clc
xchg
dec
nop
jnp
sub
add
dec
pop
int
clc
nop
add
add
push
clc
js
inc
add
xor
cmp
jl
cld
dec
pop
xchg
pop
adc
add
xor
add
add
mov
test
clc
mov
imul
ret
clc
jle
out
and
add
add
pusha
add
pop
adc
add
add
sbb
add
loope
js
add
cmp
add
lods
mov
clc
jecxz
cmp
in
stos
imull
clc
jns
clc
bound
add
mov
mov
or
jne
push
add
pop
or
sub
icebp
and
shll
pop
clc
mov
add
in
jg
mov
clc
mov
cmp
clc
jge
pop
push
clc
lahf
cmp
inc
clc
dec
pop
out
ljmp
cld
or
add
clc
daa
clc
cmp
jecxz
or
clc
mov
add
dec
cmp
add
cmpsl
clc
cmp
jp
add
mov
add
rol
clc
and
out
push
push
es
dec
sar
repnz
out
cs
clc
sbb
mov
clc
scas
pushl
mov
outsl
test
xchg
and
out
enter
aam
clc
pop
outsl
pusha
add
mov
clc
push
cmp
mov
movsb
clc
sbb
lea
add
fcoms
lret
inc
add
pop
clc
sub
lods
cwtl
cli
cmpsb
clc
int
clc
pop
sbb
add
iret
pop
mov
and
add
push
add
hlt
jge
clc
mov
add
jnp
fs
push
add
inc
clc
repz
or
clc
imul
clc
scas
rcl
inc
add
loope
xchg
push
fisttps
pop
fnstcw
clc
add
stos
dec
bnd
ja
shll
in
clc
ret
clc
fcoms
clc
mov
add
push
add
aas
in
jno
add
stos
jae
add
push
add
jge
sbb
add
sub
clc
js
add
jno
add
gs
xchg
gs
cmp
adc
clc
add
add
inc
add
cwtl
mov
add
jo
add
or
repnz
add
out
xchg
std
cwtl
dec
or
int3
sbb
sub
adc
add
stos
cmp
lea
xchg
pop
mov
cmc
mov
and
inc
clc
repnz
add
call
clc
out
mov
loope
push
inc
clc
xchg
cmp
add
add
lods
xchg
adc
add
sbb
clc
inc
add
pop
pop
cmp
lock
clc
push
add
pop
mov
and
add
lret
jns
out
and
cmp
jge
jne
divb
cs
or
clc
add
out
imul
xor
add
arpl
add
cmc
sub
add
push
lods
and
daa
clc
xor
add
cli
ds
aam
add
xchg
sub
add
push
push
clc
cmp
clc
scas
rorl
std
mov
add
mov
cmp
dec
or
clc
dec
jle
clc
adc
add
cmp
add
cmp
cld
xchg
stos
mov
aas
ficomps
mov
dec
mov
clc
movsl
clc
das
pop
xchg
insl
or
add
js
popa
add
icebp
dec
das
adc
add
cmp
add
mov
xchg
jecxz
and
add
clc
nop
mov
or
add
jbe
xbegin
repz
add
data16
mov
mov
fisubl
xlat
test
clc
add
add
add
inc
add
pop
mov
nop
leave
adc
adc
add
add
fcoml
add
aas
xor
add
push
add
insb
pusha
add
add
add
sub
clc
mov
push
add
sub
push
sbb
xchg
xchg
out
add
add
add
add
add
lods
mov
and
pop
fistpl
clc
pusha
add
mov
push
xchg
adc
add
clc
mov
clc
clc
push
sahf
ljmp
sub
jg
mov
test
mov
clc
stc
sub
out
or
idivl
out
in
dec
mull
add
sbb
clc
test
out
test
cmp
or
sbb
sbb
inc
clc
fcoms
clc
je
pop
adc
inc
add
insl
lret
scas
cmp
clc
mov
clc
mov
ja
faddp
clc
mov
add
clc
pop
or
ds
mov
sbb
enter
call
ds
in
and
add
push
sbb
popa
add
xor
add
xchg
sbb
loopne
mov
xor
add
add
cmp
and
add
clc
in
aas
scas
push
mov
jne
add
jo
add
add
clc
inc
clc
mov
fs
xor
add
cmc
incl
clc
cmp
ret
clc
inc
clc
out
push
add
movsb
clc
vshufps
add
add
addr16
mov
inc
clc
fmul
int3
dec
clc
pop
push
imul
mov
aam
daa
clc
adc
add
push
clc
mov
jo
add
loopne
int3
loop
cmp
clc
dec
gs
add
mov
and
add
add
mov
dec
iret
and
add
pop
dec
mov
add
xchg
xor
add
push
xbegin
sbb
clc
int3
sub
push
add
cmp
add
xchg
mov
jmp
clc
ss
clc
pushf
dec
push
add
scas
mov
leave
dec
xor
add
outsl
adc
add
clc
dec
and
add
ret
clc
pop
imul
or
pop
ret
loop
push
mov
add
clc
inc
clc
out
fs
movsb
clc
sub
clc
insl
in
bound
add
clc
push
inc
add
push
add
out
pop
call
clc
aaa
test
ss
mov
add
shrb
or
cs
cli
popf
and
add
xor
add
pushf
stos
cmpsb
clc
lods
jmp
and
add
lcall
push
bound
add
clc
aam
inc
clc
call
xlat
cli
rcrl
lcall
add
clc
lret
inc
add
aam
inc
add
mov
jge
clc
jmp
dec
pop
clc
mov
cmp
dec
add
add
cmp
mov
add
sub
add
push
add
outsb
add
add
xchg
mov
repnz
popa
add
jle
jecxz
dec
out
push
add
clc
jp
xbegin
bsr
sbb
push
add
ret
clc
push
add
adc
je
add
movsb
clc
sbb
iret
inc
add
and
clc
dec
test
add
mov
clc
push
fisttps
sub
clc
inc
add
push
cmp
idivb
movsl
clc
pop
es
dec
jnp
popf
imul
mov
inc
add
sub
roll
add
jle
jae
add
repnz
clc
ret
add
inc
add
or
dec
xor
cmp
inc
clc
fimull
dec
inc
clc
mov
outsb
push
jp
adc
adc
popa
add
scas
xchg
pop
popf
dec
addr16
cmpsb
clc
jle
sub
add
push
push
add
xchg
jno
add
sbb
clc
push
add
or
loop
mov
push
pushf
mov
add
fistpl
mov
adc
add
add
repnz
and
add
shll
add
or
in
aad
clc
push
out
es
inc
clc
pop
jecxz
pop
clc
push
add
nop
xabort
add
sbb
inc
clc
jno
add
loope
outsb
pop
xchg
ret
clc
pop
cmc
jno
add
add
cmp
push
mulb
dec
sar
mov
clc
dec
cs
clc
jb
add
clc
jle
sub
mov
clc
jns
cltd
xchg
jecxz
paddusw
lods
mov
adc
add
dec
sub
scas
imul
add
mov
add
inc
add
out
or
mov
jge
clc
mov
mov
add
mov
clc
or
insb
daa
clc
out
ret
clc
sub
add
int3
outsb
js
or
popa
add
aas
or
clc
sar
cmp
clc
movsl
clc
pop
and
lret
jp
arpl
add
test
or
mov
pop
lcall
outsb
fwait
xchg
and
and
add
add
enter
cltd
cmp
add
add
mov
psubsb
add
sar
push
add
jle
clc
xor
ljmp
bound
add
add
add
jmp
cmp
and
add
clc
push
clc
fldenv
add
add
aaa
dec
sbb
clc
pop
and
add
add
sbb
push
xchg
cmp
clc
push
aas
pop
push
clc
divb
add
cmp
add
clc
aam
clc
frndint
data16
jb
add
fwait
sarb
lock
add
add
add
xor
add
add
test
clc
push
add
adc
add
add
jmp
clc
jecxz
cmp
insb
push
mov
clc
daa
clc
jge
int
ffree
clc
clc
inc
clc
mov
dec
lods
aaa
cmp
push
out
cmp
push
add
xor
add
clc
push
add
mov
xor
add
add
ret
clc
cmp
mov
clc
xchg
adc
add
ret
xchg
fbstp
add
inc
clc
iret
ja
add
pop
fs
popf
push
add
test
sub
add
clc
ja
xabort
outsl
mov
jp
cmp
sub
add
loop
scas
sbb
and
cmp
jne
add
cmpsl
clc
push
add
push
imul
mov
clc
xor
add
mov
clc
sahf
cs
clc
add
repnz
sbb
in
stos
lahf
out
pop
hlt
out
inc
add
mov
clc
dec
sbb
xchg
sar
out
mov
clc
mov
xchg
cmpsl
clc
push
rorl
aam
clc
inc
clc
cmc
sbb
in
sub
pop
inc
add
cmp
pop
dec
or
clc
stos
xchg
mov
ret
clc
fst
cmp
clc
cmp
sbb
add
test
pop
xabort
jae
add
mov
xchg
xbegin
clc
push
add
ja
add
dec
or
push
scas
dec
sub
aaa
call
add
add
add
dec
test
outsl
test
out
cmp
add
mov
sbb
add
and
add
add
clc
stc
popf
adc
clc
dec
dec
aas
push
mov
ja
cmp
stos
push
add
pop
adc
clc
xchg
mov
add
int3
cmp
clc
xchg
xor
pushf
jno
add
add
out
and
add
add
add
ja
xchg
iret
or
clc
mov
lret
add
add
sar
clc
push
add
arpl
add
add
popa
add
cmpsb
clc
and
int
fisubs
add
je
das
or
movsb
clc
leave
jmp
cmpsb
clc
ja
clc
and
add
lahf
jl
clc
mov
mov
add
inc
add
out
cmp
cmp
clc
mov
sub
clc
popf
push
call
clc
inc
clc
ss
push
cmp
add
or
cwtl
insl
jns
sbb
add
shr
cli
lock
add
jnp
fxch
je
adc
icebp
loope
aam
cmp
sub
cmp
clc
unpckhps
sti
adc
clc
rcrl
fcompl
add
ds
push
add
add
mov
clc
inc
add
movsb
clc
repz
cmp
pop
jl
iret
enter
add
jae
add
cmp
push
fistl
add
mov
add
sar
push
cmp
add
neg
inc
add
sar
add
xchg
dec
adc
add
clc
jecxz
in
rcrl
outsb
mov
mov
add
adc
add
clc
loope
gs
dec
cmp
clc
out
clc
stos
pop
cmp
add
and
add
clc
rcrl
dec
xchg
mov
pop
dec
cmpsl
clc
ja
cmp
mov
add
fisubrs
xor
add
adc
add
divl
add
add
add
add
mov
out
sbb
clc
fwait
scas
clc
cmpsb
clc
bound
add
add
addr16
push
ficompl
or
clc
cmp
cld
rcrb
mov
jl
add
mov
add
imul
test
push
and
add
dec
and
repnz
rolb
xor
add
jge
fidivrl
add
stos
pop
add
add
add
pop
clc
pop
mov
pop
jge,pt
push
aam
jo
add
repnz
dec
psubb
or
add
mov
clc
jl
push
add
jb
add
add
mov
jg
xchg
sbb
clc
push
add
cwtl
sub
and
add
add
or
clc
daa
clc
or
add
scas
mov
add
sbb
movsl
clc
fdivs
add
fs
fbstp
jns
add
add
data16
add
pop
cmp
lret
mov
notb
out
push
pop
xchg
lods
sar
clc
sub
add
clc
xor
add
leave
sbb
cmp
add
jne
clc
repnz
in
stos
or
js
inc
clc
pop
dec
pop
xchg
and
add
ret
clc
jge
pop
clc
adc
add
add
jns
nop
mov
gs
mov
mov
jb
add
clc
inc
add
cmp
clc
jb
add
clc
ss
clc
xabort
cwtl
sti
xchg
ret
clc
push
add
push
add
fwait
add
iret
lahf
xor
add
add
add
add
clc
pop
mov
add
imul
clc
int
mov
dec
pop
loopne
jge
xchg
cmpsl
clc
clc
mov
clc
aam
mov
and
bound
add
xchg
mov
add
clc
outsb
enter
scas
jbe
sbb
inc
add
icebp
push
add
sub
cmp
add
dec
loopne
push
and
add
sub
mov
or
clc
xchg
into
jnp
js
xor
add
clc
lea
stc
lcall
clc
add
add
clc
push
xchg
fldenv
pop
xabort
jp
imul
push
add
xchg
clc
dec
push
clc
add
add
sbb
clc
cmp
sarb
push
popf
fmull
clc
mov
jns
pop
push
inc
add
pop
clc
aam
fwait
or
add
clc
aad
clc
or
add
clc
adc
add
push
clc
clc
add
add
jmp
popa
add
jg
das
notb
add
xor
add
lret
sub
clc
out
in
jbe
push
fildl
add
imul
push
push
jp
clc
inc
clc
gs
and
add
mov
inc
add
xchg
aam
clc
out
testl
dec
push
add
sub
clc
in
movsb
clc
ja
call
movsb
clc
je
xabort
add
test
push
add
fwait
cmp
clc
cmp
loop
xchg
ss
xchg
or
in
push
cmp
add
mov
add
imul
or
icebp
stc
xbegin
clc
ljmp
add
test
outsb
sub
idivl
cwtl
lock
mov
xchg
sub
add
test
add
stc
cmp
test
add
add
lods
and
jb
add
aad
cli
xor
add
clc
inc
clc
mov
add
pop
clc
dec
jae
add
mov
add
xor
add
fisubrs
mov
mov
dec
aas
and
add
insb
out
xchg
xor
add
add
mov
sbb
and
add
cmp
movsl
clc
roll
aad
clc
sbb
clc
cmp
push
add
cli
cmpsl
clc
iret
jp
ss
add
add
add
dec
pop
or
inc
clc
fiadds
std
jbe
push
push
test
mov
add
enter
rcrb
das
and
push
and
add
add
gs
stc
outsb
fldcw
arpl
add
clc
push
clc
mov
sub
xor
add
add
clc
fwait
enter
addr16
shll
adc
add
clc
fstpt
clc
push
clc
sbb
in
mov
pop
add
add
aad
clc
std
pop
sbb
push
pushf
push
add
pushf
fimuls
and
add
scas
mov
pop
call
in
mov
add
dec
cmp
add
fldenv
add
jbe
enter
jge
pop
out
xchg
cltd
cmp
clc
test
mov
clc
xchg
mov
push
nop
loop
dec
dec
call
ja
imul
stos
lock
add
sub
outsl
cmp
fucom
clc
clc
mov
clc
sahf
pushf
movsb
clc
mov
add
add
imul
stc
sar
clc
push
insb
fdivl
add
cmp
xchg
mov
lods
push
xchg
cmpsl
clc
pop
sbb
xabort
ja
loopne
insl
and
sar
popa
add
movsl
clc
test
pop
sub
stos
sub
sbb
sbb
add
fcompl
add
repnz
rcrl
clc
movsb
clc
loopne
int3
cmp
inc
clc
scas
xor
add
shrl
mov
add
lea
jp
clc
vcvtps2pd
add
ds
add
arpl
add
addr16
out
sub
push
mov
sub
mov
xor
clc
and
add
clc
mov
clc
mov
mov
add
in
mov
clc
shlb
add
add
dec
xor
add
xchg
test
push
mov
sub
arpl
add
add
mov
and
add
inc
add
push
or
cmpsl
clc
fimull
mov
sbb
cmc
jbe
jle
pop
ss
or
jmp
ljmp
in
adc
clc
or
add
add
mov
dec
int3
push
add
sub
add
add
rcrb
jp
clc
or
xchg
xor
add
out
jg
ss
sbb
cmp
dec
iret
out
xchg
xor
clc
mov
sbb
outsb
lahf
repnz
dec
inc
add
xchg
xlat
mov
ljmp
clc
leave
mov
bound
add
mov
add
xchg
push
scas
test
add
sbb
sar
mov
or
stos
aaa
jns
clc
xor
cmp
cmpsb
clc
lock
mov
cmp
scas
iret
es
sbb
clc
aas
xor
add
ret
clc
and
add
je
leave
stc
movsl
clc
pusha
add
das
imul
add
fiadds
clc
adc
add
add
push
add
mov
hlt
jo
add
clc
add
insb
shlb
add
icebp
fldt
and
scas
cmp
cmp
ds
add
push
add
push
add
push
clc
fs
sub
clc
pop
inc
clc
iret
cld
lcall
clc
mov
inc
clc
mov
pop
loop
add
add
pop
push
clc
mov
adc
clc
ret
clc
sbb
int
lea
push
ss
add
cwtl
cmp
into
mov
cs
divb
add
das
push
leave
pop
out
ljmp
add
add
add
jbe
mov
clc
mov
push
clc
arpl
add
mov
ljmp
xor
add
out
shlb
and
add
add
or
pop
clc
pop
pop
sbb
repz
push
sar
dec
pop
mov
out
push
add
mov
xlat
scas
mov
xchg
mov
add
cmp
jbe
add
add
sbb
lret
loop
adc
add
iret
int3
ljmp
add
or
mov
add
das
inc
add
flds
add
inc
clc
jmp
add
sub
cmp
add
lret
movsb
clc
or
int3
pop
clc
ret
clc
cli
jg
dec
lea
es
insl
mov
add
loopne
sub
add
mov
leave
jnp
clc
test
cmpsb
clc
fnsave
clc
loope
jge
pop
idiv
sbb
movsl
clc
push
inc
clc
iret
inc
clc
ljmp
sbb
into
xchg
add
add
inc
add
pop
xchg
push
add
xchg
lcall
nop
fiaddl
add
gs
ds
repz
dec
jg
cltd
and
add
data16
cmc
push
mov
jl
clc
mov
xchg
push
add
cmp
push
add
movsb
clc
adc
clc
push
or
add
add
movsl
clc
jecxz
inc
add
or
clc
mov
add
bound
add
clc
push
lret
dec
shl
clc
ds
jns
data16
sbb
clc
dec
inc
add
or
clc
adc
add
add
pop
outsl
mov
xchg
push
jne
mov
add
fstpt
xchg
pop
jmp
test
rcll
inc
clc
es
push
add
mov
clc
mov
ljmp
ret
clc
cltd
cmp
jo
add
lea
add
adc
mov
or
sub
clc
decb
clc
scas
jmp
mov
clc
fs
mov
jb
add
add
add
add
add
clc
dec
movsl
clc
push
clc
mov
clc
pop
stos
mov
add
add
jl
clc
mov
clc
cmp
inc
clc
mov
adc
cmp
mov
push
movsb
clc
fsubrl
clc
dec
aam
push
test
pop
loopne
push
add
bound
add
add
hlt
inc
add
mov
add
pop
test
clc
mov
mov
stos
push
insb
mov
jbe
adc
add
push
icebp
js
sbb
xchg
push
pusha
add
int3
add
pushf
inc
clc
lret
add
scas
cmp
std
mov
loop
push
xbegin
mov
lahf
mov
clc
stos
jg
cmpsl
clc
cltd
cmp
clc
sbb
pop
sbb
add
sar
sahf
inc
add
dec
xor
add
pop
lods
out
mov
aad
clc
lahf
push
loope
dec
mov
clc
fsubp
clc
inc
clc
dec
test
clc
lods
ret
sub
add
clc
mov
jo
add
and
jb
add
mov
clc
ret
leave
out
out
int3
decb
insb
imul
add
add
or
test
lret
popa
add
sub
add
or
clc
inc
clc
out
cmp
cmp
data16
into
sbb
sbb
add
add
fucomip
xchg
dec
mov
clc
xchg
inc
clc
inc
clc
or
dec
inc
clc
xor
add
add
mov
clc
test
gs
cmp
js
xchg
repnz
adc
add
pop
leave
mov
adc
add
clc
mov
sahf
mov
add
inc
add
bound
add
add
xchg
insb
add
add
add
push
xchg
jbe
clc
sbb
incl
mov
jae
add
pop
pop
clc
rcr
fnstcw
sub
in
inc
clc
mov
out
cmp
sbb
clc
mov
sub
clc
pop
pop
pushf
data16
addr16
jmp
cmp
add
das
jne
xchg
jbe
clc
xabort
clc
inc
clc
or
arpl
add
add
sbb
rolb
add
clc
imul
cmpsl
clc
pop
jns
popa
add
call
add
and
popa
add
add
clc
sbb
aas
dec
push
add
out
add
add
clc
imul
cmpsl
clc
and
add
add
adc
add
je
leave
cmp
jmp
inc
clc
lock
addr16
addr16
add
add
add
clc
aad
clc
inc
clc
add
add
cmpsb
clc
xlat
xchg
add
add
add
pop
cmp
clc
inc
clc
or
popa
add
fs
xlat
mov
xor
add
clc
xor
cmpsl
clc
test
clc
std
jb
add
lret
mov
jno
add
mov
clc
int
dec
fmuls
inc
add
nop
jle
movsb
clc
xor
push
clc
mov
mov
pop
fidivl
add
xchg
cmp
clc
mov
xbegin
push
add
lret
clc
addr16
xor
add
fs
aad
push
add
jle
clc
jp
add
inc
add
fsts
add
in
sub
add
sahf
push
add
movsl
clc
ljmp
lahf
and
add
cmc
dec
lock
idivl
mov
dec
loopne
fildl
ss
fcmovbe
jge
add
and
xchg
loope
fs
mov
pop
sbb
jo
add
iret
sar
leave
mov
clc
mov
add
movsb
clc
in
add
add
cmp
mov
add
sub
add
jle
clc
repnz
and
add
clc
xor
add
add
clc
daa
clc
add
add
cmp
add
sbb
pop
or
fcmovnbe
inc
add
iret
mov
adc
mov
add
sub
add
stos
cmp
xor
add
call
add
add
pop
pop
xbegin
cld
sar
add
xchg
jmp
clc
fldcw
outsl
or
pop
sahf
xchg
push
add
sub
sbb
adc
add
jl
dec
mov
insb
xchg
ret
clc
jmp
mov
clc
fwait
cmc
inc
add
mov
aam
iret
popf
das
cmp
cmp
clc
int3
sub
cmp
sbb
clc
fwait
cs
clc
inc
clc
jo
add
and
add
imul
add
dec
out
pop
icebp
push
cmp
and
je
and
add
shrl
jle
and
adc
add
xor
inc
clc
cmp
jne
xchg
js
clc
adc
add
mov
mov
fucomip
add
add
clc
cmpsl
clc
mov
add
insb
cmp
ss
clc
xor
add
imul
add
sub
fistps
add
add
lea
add
sbb
aas
mov
add
bnd
addr16
mov
xor
add
clc
insl
pop
adc
add
fstpl
cmp
mov
add
ds
jl
clc
stos
mov
add
test
sub
iret
aaa
inc
add
mov
clc
frstor
add
and
add
pop
adc
add
add
add
add
add
cmc
sub
add
gs
jp
clc
add
inc
add
ljmp
mov
pop
cmp
inc
clc
push
add
sbb
clc
mov
cmp
xor
add
add
add
fnstcw
mov
xchg
incl
add
popa
add
xor
add
add
push
sub
sbb
mov
das
adc
add
add
lea
adc
add
clc
cmp
out
hlt
add
add
clc
jecxz
mov
pop
cmp
das
cli
sub
mov
sub
clc
cld
clc
sub
clc
sub
sbb
mov
dec
inc
clc
mov
icebp
out
or
xabort
mov
clc
arpl
add
and
cli
in
dec
mov
mov
clc
pop
pop
mov
clc
pop
out
push
inc
clc
add
add
loop
and
add
and
add
clc
fwait
fs
mov
dec
xor
add
add
dec
dec
jmp
clc
int
imul
pop
cltd
cld
mov
clc
add
add
or
add
bound
add
add
push
mov
in
inc
add
int
add
ja
and
loopne
fdivrl
clc
pushf
mov
sbb
das
inc
clc
xchg
sar
scas
mov
add
loop
push
add
ror
xchg
fisubrl
add
jmp
add
nop
jns
mov
add
das
int3
xbegin
dec
push
sbb
imul
data16
adc
add
ljmp
repnz
scas
pop
pop
lods
outsl
push
inc
clc
dec
adc
add
clc
jp
xchg
fnsetpm(287
clc
or
add
sbb
add
icebp
bound
add
add
push
add
pop
adc
add
pop
xchg
jle
sti
loop
push
mov
add
lods
outsb
lock
add
push
add
mov
movsl
clc
jle
add
inc
clc
cltd
or
jmp
loopne
mov
lods
ljmp
je
add
push
add
imul
push
add
xor
xor
mov
clc
aam
insb
and
add
mov
lock
aam
clc
loopne
dec
xchg
inc
clc
fstps
popa
add
mov
clc
xchg
dec
mov
leave
push
push
add
mov
clc
fldt
scas
cmp
add
jp
push
add
and
add
clc
jg
lods
hlt
xchg
cmp
clc
add
add
call
add
loopne
pop
pop
xchg
dec
test
clc
out
fisubs
cli
push
mov
add
jle
mov
clc
into
or
push
add
ja
pusha
add
xchg
repz
add
ss
clc
fildl
or
or
clc
mov
stos
std
xor
add
out
xchg
and
add
pop
clc
loope
sub
data16
pop
clc
cmpsb
clc
ljmp
sub
clc
mov
push
clc
out
sbb
xchg
jp
add
jno
add
fdivrl
or
add
add
mov
sub
dec
gs
mov
sbb
ds
iret
jbe
inc
clc
xchg
jp
adc
add
clc
and
ret
clc
stos
inc
clc
jg
jne
clc
pushf
pop
jne
cld
sar
arpl
add
test
lret
mov
or
or
dec
popl
sahf
outsl
fsubr
push
cmp
add
ret
clc
sbb
pop
jne
out
sub
pusha
add
repnz
clc
or
xlat
and
inc
add
jmp
insb
adc
inc
add
mov
mov
scas
int3
mov
add
sbb
clc
out
scas
fsubl
add
or
sub
add
clc
gs
clc
jnp
add
sub
daa
clc
mov
add
clc
push
es
fists
add
clc
push
cmp
add
jle
inc
add
pop
pop
in
dec
sar
ds
add
xlat
xabort
incb
fdivrl
add
ds
jl
das
xbegin
pop
push
add
jp
xchg
or
clc
je
clc
lods
int3
push
or
jns
repz
add
bound
add
xchg
xchg
inc
clc
sub
or
sbb
lcall
jae
add
clc
mov
add
or
clc
sbb
jno
add
add
cmp
push
add
sub
clc
inc
clc
xchg
push
add
cmp
add
inc
clc
xlat
outsb
test
sti
aas
cwtl
jmp
arpl
add
clc
bound
add
add
call
ss
outsb
stos
and
add
clc
sahf
fisubs
add
cmp
out
ss
outsl
loope
and
xor
pop
fs
in
fcmovne
hlt
mov
cmp
add
cmp
mov
scas
xchg
in
movsl
clc
test
jno
add
add
add
add
cli
clc
push
outsb
stc
push
clc
lea
iret
sar
push
cmp
cmp
fldl
add
add
clc
jl
dec
pushf
mov
add
lahf
inc
add
cmp
cmp
add
vmread
clc
cmp
sub
call
inc
add
int3
or
dec
push
add
jnp
add
or
jl
add
imul
xor
add
jecxz
addr16
daa
clc
loope
mov
add
fldl
aam
cmp
out
mov
inc
add
mov
clc
ss
mov
add
clc
int3
cmp
xchg
clc
cmp
add
add
into
popa
add
loop
and
add
pop
clc
jae
add
add
add
test
cmp
lock
sub
jae
add
clc
aam
clc
or
mov
add
clc
add
add
out
dec
cmpsb
clc
mov
sbb
testb
add
add
jne
clc
aam
pop
clc
mov
clc
mov
outsb
sar
cmp
jl
mov
jnp
mov
pop
clc
sbb
add
xchg
xbegin
call
clc
mov
add
xor
scas
mov
mov
rorl
jb
add
clc
mov
gs
add
add
lcall
clc
fcomps
std
or
add
jmp
clc
xchg
stos
fisubrl
add
outsl
icebp
pop
jne
clc
lock
ja
clc
dec
push
add
add
std
or
clc
movsb
clc
mov
add
add
add
add
clc
sub
add
sub
push
mov
test
pusha
add
popf
in
fadd
clc
clc
and
add
adc
add
adc
clc
pop
fs
jnp
dec
jnp
mov
popl
add
xor
add
add
push
add
fisubrl
aam
add
add
adc
pushf
pushf
xchg
pop
inc
add
dec
in
xchg
loop
jno
add
shufps
add
mov
clc
dec
inc
add
xchg
sub
mov
lret
add
jae
add
xor
add
pop
jns
clc
mov
cmp
or
add
mov
dec
ret
clc
xor
adc
add
repnz
mov
clc
push
rorl
pop
cltd
stc
fdivs
inc
add
push
xchg
std
shr
jae
add
out
sbb
cmc
in
mov
hlt
sbb
nop
mov
clc
mov
fwait
xchg
cmp
imul
clc
mov
add
push
mov
add
clc
push
add
inc
add
cmp
std
out
and
add
add
xchg
pop
add
dec
fwait
test
fdivs
cmp
adc
add
cmp
push
clc
and
add
clc
xchg
and
jge
sbb
cmp
scas
rclb
add
pushf
int
pop
add
add
loop
test
pop
xabort
add
bound
add
pop
xchg
dec
test
cmp
sti
bound
add
mov
xlat
fs
push
add
clc
adc
add
adc
add
or
xor
add
cmp
push
cmc
fwait
or
clc
adc
add
popf
cwtl
adc
add
fwait
lcall
add
mov
es
sbb
es
inc
clc
mov
add
scas
jo
add
clc
jmp
loope
jmp
inc
add
add
add
lea
pop
cs
clc
mov
fistpll
xor
add
mov
jne
fwait
push
add
jmp
add
arpl
add
repnz
movsb
clc
std
jg
add
add
pop
enter
js
clc
movsb
clc
fsubrl
clc
lahf
mov
mov
popa
add
jns
movsl
clc
shll
mov
cmp
mov
ret
rol
clc
nop
int3
pop
clc
fmuls
scas
ljmp
nop
mov
jne
clc
xlat
sarl
pop
xlat
lods
sbb
dec
dec
mov
clc
pop
loop
icebp
test
jle
mov
clc
stos
cmp
inc
add
lret
nop
cmp
js
in
in
push
add
clc
mov
outsb
inc
clc
es
mov
dec
enter
mov
cmp
into
int
mov
jle
add
hlt
sbb
clc
xchg
divb
add
push
clc
xlat
cmp
nop
add
add
ljmp
clc
dec
out
outsb
fistps
ficoml
add
jle
out
popf
lret
add
mov
add
add
addr16
cmpsl
clc
inc
clc
and
mov
clc
pushf
and
add
push
push
mov
fs
icebp
stos
aas
jbe
mov
add
cmove
int3
leave
mov
daa
clc
neg
in
or
sbb
jo
add
adc
clc
dec
cmp
mov
add
sub
ljmp
inc
clc
into
lods
pop
bound
add
dec
mov
lahf
cli
mov
push
add
clc
pop
sti
pop
leave
hlt
cmp
inc
clc
jp
jp
clc
mov
fnstsw
mov
cld
mov
add
jb
add
cmp
dec
pop
cmp
add
pop
cmpsb
clc
and
jnp
enter
das
pandn
dec
int3
inc
clc
stos
fs
pop
imul
data16
xchg
das
mov
add
imul
ret
jmp
lret
in
imul
clc
xchg
jl
jo
add
xchg
arpl
add
clc
push
add
pop
jmp
jle
mov
cld
sar
jbe
enter
loope
mov
loop
stos
cmpsb
clc
lahf
lods
outsb
or
add
lock
add
jns
clc
cmp
mov
pop
insb
mov
push
sahf
push
lods
and
lahf
pop
xchg
or
xlat
mov
xchg
xchg
stos
or
mov
clc
dec
jae
add
and
add
filds
cmp
mov
mov
iret
jp
add
out
ret
add
aas
bound
add
gs
inc
clc
and
add
xchg
popf
or
add
xor
add
add
push
add
or
add
mov
nop
mov
iret
dec
jns
add
sbb
mov
add
addr16
inc
clc
and
add
add
xbegin
dec
imul
add
add
inc
add
sbb
clc
stc
in
cmpsl
clc
daa
clc
fldenv
add
push
aam
punpckhdq
cmp
pop
rolb
add
push
add
xor
add
add
mov
mov
jmp
add
xchg
mov
clc
adc
add
clc
lret
add
add
pop
clc
ret
icebp
push
and
add
xchg
xor
add
test
pop
mov
sti
mov
dec
leave
jne
mov
jo
add
xor
clc
cmp
clc
mov
adc
mov
dec
in
xchg
ss
jbe
cwtl
sub
mov
clc
adc
add
add
loopne
mov
or
lcall
jmp
dec
or
add
adc
add
popf
cmp
xchg
sub
clc
xor
add
pop
lahf
pop
sub
dec
pop
pop
xlat
dec
inc
clc
adc
add
and
add
xor
movsl
clc
nop
aam
fwait
inc
add
cmpsl
clc
loope
out
out
int3
mov
sub
lahf
mov
ds
xor
add
clc
jae
add
shll
inc
add
lods
push
add
jns
and
add
push
cmp
or
xchg
pop
fdivl
add
cmp
clc
add
clc
popa
add
sbb
add
add
sub
stc
test
cmc
mov
jno
add
push
add
dec
xchg
jge
ret
lret
je
add
jne
mov
add
add
cmp
call
dec
mov
fsubrl
clc
call
data16
fs
movsb
clc
add
add
clc
or
push
push
pop
sarb
inc
clc
and
add
movsl
clc
aad
add
cmpsl
clc
mov
dec
outsl
push
in
lods
add
aam
clc
xor
or
ljmp
clc
xor
inc
clc
or
clc
sub
clc
and
add
mov
dec
adc
add
cmp
mov
dec
add
dec
adc
add
clc
sti
ss
rcll
inc
clc
jnp
push
add
mov
add
in
and
add
jae
add
add
jbe
mov
add
clc
xchg
cmp
sub
add
add
lret
jns
or
add
inc
add
dec
arpl
add
jo
add
mov
add
pushf
cmp
mov
add
and
add
stos
xbegin
and
clc
and
add
mov
mov
mov
sbb
add
add
clc
jl
xchg
cmc
ja
add
push
sub
outsl
mov
fsubrl
add
add
and
add
push
add
mov
add
dec
mov
or
fildl
add
dec
ja
lahf
cmp
clc
xor
sub
jl
jle
push
add
dec
mov
repnz
mov
push
add
xchg
in
cmp
aam
clc
pop
into
enter
cmpsl
clc
jns
add
sub
add
adc
add
push
test
add
inc
add
enter
clc
sub
jmp
lea
ljmp
add
test
popa
add
fs
cmp
mov
clc
pop
shll
or
add
test
cmpsb
clc
test
clc
sub
lea
xbegin
rcrl
clc
sbb
sub
jae
add
icebp
and
add
mov
add
sar
mov
xchg
pop
sub
add
clc
xchg
int
repnz
add
push
push
cmp
mov
sbb
clc
lods
and
add
gs
jle
adc
add
ljmp
cltd
lret
movsb
clc
repnz
add
aaa
sbb
inc
add
ret
clc
data16
mov
add
xchg
jle
mov
add
add
sub
add
lcall
add
add
add
add
add
cli
into
pushf
std
push
add
loopne
mov
clc
lock
clc
fldl
lret
rolb
add
mov
add
mov
lods
decl
mov
add
arpl
add
clc
mov
outsb
xchg
test
mov
push
inc
clc
xor
add
jbe
fnstsw
sbb
add
add
add
and
add
xlat
nop
inc
clc
jg
xchg
inc
add
pop
mov
add
sar
pushf
das
ret
clc
jnp
loop
sub
clc
mov
das
mov
pusha
add
jne
clc
out
xchg
adc
negl
sub
idiv
popf
pop
mov
test
push
mov
hlt
fnsave
xchg
arpl
add
clc
dec
ret
clc
into
push
push
xor
ret
clc
lods
ja
xor
mov
clc
jp
clc
push
jl
outsb
sub
sbb
clc
add
add
fxch
sub
xchg
sbb
clc
pop
movsl
clc
fwait
test
xlat
push
enter
add
add
push
add
ret
clc
cs
jl
popf
mov
scas
mov
dec
and
add
sub
clc
mov
add
hlt
out
loopne
adc
add
loope
rcrl
add
xchg
cmpsb
clc
jbe
mov
add
and
add
mov
mov
add
cmc
dec
out
xchg
fiaddl
add
leave
sbb
add
jp
cmp
enter
dec
xor
add
pushf
push
arpl
add
gs
sahf
mov
xchg
sub
testl
inc
clc
pop
add
add
mov
pushf
arpl
add
add
push
add
cli
jecxz
mov
data16
aas
movsb
clc
inc
clc
dec
insl
xor
adc
dec
stos
jno
add
add
sub
loope
lcall
movsb
clc
push
add
lods
pop
clc
jle
add
or
int3
xchg
xor
add
inc
add
push
add
push
add
ljmp
xchg
dec
mov
clc
das
jae
add
clc
movsl
clc
nop
dec
fstps
repnz
add
clc
sbb
add
out
hlt
nop
imul
mov
pop
inc
clc
pop
mov
clc
mov
inc
clc
xor
add
clc
popf
cs
push
mov
clc
into
mov
mov
add
clc
insb
mov
cli
fisubl
add
mov
clc
or
mov
js
in
jmp
sti
dec
adc
stc
aaa
cmp
clc
fs
mov
cmp
clc
mov
add
fwait
jnp
sbb
or
push
aas
jo
add
jmp
int3
sbb
clc
mov
add
jnp
clc
xchg
jp
clc
cmp
cwtl
jecxz
lret
add
enter
jb
add
add
leave
xlat
es
idivl
or
icebp
xor
add
and
jb
add
jmp
xchg
insb
aad
pop
adc
xabort
jl
ja
fs
fmuls
sar
clc
sbb
test
sub
loopne
jo
add
clc
into
mov
inc
clc
outsb
aas
mov
add
push
add
ss
repz
mov
leave
xchg
insb
addr16
aaa
das
cmp
mov
pop
sahf
sahf
nop
hlt
push
add
adc
add
inc
clc
dec
and
add
xchg
cmp
nop
lods
iret
jae
add
mov
clc
mov
aad
clc
mov
add
and
add
mov
and
add
stc
jmp
test
jl
gs
mov
jmp
ret
add
dec
sub
add
test
add
add
xbegin
add
jno
add
aad
sbb
clc
cmp
fdivrl
jne
cmp
xor
push
stos
mov
clc
in
ljmp
inc
add
cmp
clc
cmp
arpl
add
pop
clc
fisubl
clc
jmp
or
add
sub
xchg
jnp
aad
pushf
aam
cltd
pop
cmp
and
bound
add
mov
clc
push
adc
add
or
jle
bound
add
sub
cmp
adc
add
dec
push
add
scas
jo
add
clc
scas
xchg
gs
xor
pushf
cmp
clc
nop
sub
add
and
in
pop
mov
clc
xlat
jne
add
push
ficoml
stc
into
fstpl
sti
ljmp
push
add
sbb
push
out
lahf
push
clc
push
fnstcw
add
icebp
lea
sbb
mov
shll
and
adc
add
clc
inc
clc
in
clc
cs
mov
push
cmpsl
clc
gs
gs
bswap
dec
cmc
pop
jp
pop
mov
add
nop
cmpsb
clc
inc
clc
xor
add
and
add
clc
xchg
mov
add
dec
ret
add
sti
and
fcomps
mov
and
add
mov
clc
inc
clc
mov
clc
movsl
clc
pusha
add
daa
clc
jg
aam
lea
or
gs
shlb
aad
popa
add
leave
xchg
cmp
loope
adc
clc
loop
addr16
adc
add
cmp
add
adc
add
js
mov
add
out
sub
xbegin
push
add
pop
cli
mov
xchg
hlt
jp
add
pop
cmp
faddl
clc
or
pop
jp
pop
fwait
xor
add
inc
add
or
shlb
clc
adc
add
add
xor
add
jecxz
insl
cmp
push
insl
repz
repz
and
add
or
ja
xlat
fnstenv
add
cmp
xchg
popf
ja
add
xchg
dec
mov
xchg
xchg
cwtl
jns
clc
int3
or
cmp
pop
xchg
or
clc
shrb
clc
pop
fwait
jge
add
insl
lret
data16
jecxz
xchg
test
add
clc
out
aaa
data16
fs
sar
mov
add
push
add
fnstenv
clc
test
pop
add
add
add
cmp
adc
add
lods
mov
add
out
cld
data16
xor
add
clc
or
ss
add
inc
clc
sbb
mov
test
mov
je
clc
mov
clc
xor
add
clc
xabort
pop
clc
xor
add
add
mov
jbe
minps
setg
stos
add
add
add
cli
pop
and
add
inc
clc
nop
cmpsb
clc
push
fdivp
movsl
clc
lahf
stc
xchg
xchg
lods
insl
gs
testl
mov
push
test
inc
add
push
clc
cmp
add
add
mov
leave
data16
scas
clc
dec
and
add
clc
add
add
test
push
clc
stos
xchg
xabort
movsb
clc
das
stos
mov
clc
push
add
xchg
shl
clc
jnp
lahf
jge
cmp
add
sub
in
stos
xabort
or
clc
dec
jle
add
mov
add
sar
add
outsl
mov
clc
pop
or
ret
icebp
sar
fldcw
add
mov
clc
sub
jp
sub
mov
mov
jno
add
push
sub
mov
clc
mov
mov
xabort
and
add
cmp
ss
cmp
add
adc
add
mov
lret
clc
fdivrl
das
pop
push
jmp
insl
data16
clc
mov
lods
divl
add
add
clc
icebp
pop
lcall
mov
pop
push
mov
add
jns
add
enter
aaa
aam
mov
repnz
loopne
test
out
inc
add
xbegin
dec
addr16
push
pop
sub
mov
add
add
mov
sbb
inc
add
icebp
sub
mov
clc
jb
add
add
add
clc
gs
ja
test
jne
clc
pop
iret
ja,pn
lock
xchg
add
add
clc
ds
add
and
add
mov
insl
movsb
clc
push
in
in
mov
add
add
sub
mov
clc
mov
clc
into
sbb
dec
stos
fcmovbe
int3
ds
add
sahf
negl
sub
clc
sbb
clc
sbb
and
dec
bsf
cmp
clc
push
add
mov
push
push
add
imul
sub
add
jae
add
clc
fisubrl
pop
jg
mov
in
push
movsl
clc
cmp
shll
pushf
and
add
loop
push
add
xchg
mov
mov
jno
add
clc
push
add
test
addr16
inc
clc
sahf
cmp
add
aaa
js
clc
push
lea
add
mov
clc
aam
adc
add
loopne
or
pop
shrl
add
cwtl
jo
add
add
clc
mov
bound
add
fs
popf
add
or
cmp
clc
sahf
add
add
sar
xor
cmp
shrb
ljmp
int
jo
add
mov
jle
push
loope
sbb
gs
dec
iret
mov
and
add
lahf
cs
add
fwait
pop
mov
insl
mov
sbb
fldl
add
xor
add
fsts
add
pop
dec
loope
xchg
cwtl
adc
add
xor
add
sbb
dec
add
add
clc
add
add
xchg
adc
add
push
add
ss
jge
shl
clc
data16
xchg
cmp
push
clc
mov
add
add
mov
cmp
add
mov
stc
pop
clc
xchg
clc
aam
movsl
clc
cmp
filds
clc
popf
mov
or
rorb
push
add
in
jmp
cmp
clc
mov
in
rcrb
jg
xchg
negb
add
or
add
cld
sub
inc
add
cmp
xor
add
sub
push
add
scas
sub
clc
cmp
jne
aam
and
add
add
add
dec
int3
leave
and
add
add
xor
add
clc
push
or
clc
cmp
cld
mov
dec
sub
inc
add
jecxz
in
imul
imul
mov
adc
add
int
scas
dec
adc
add
insl
jge
mov
add
pop
mov
je
clc
test
or
add
vmwrite
repz
add
clc
das
xor
add
jecxz
push
add
inc
add
das
xchg
add
add
pushf
xbegin
add
mov
add
push
out
das
add
add
add
js
sbb
xchg
pop
mov
lret
clc
xchg
call
outsl
test
stc
push
test
addr16
test
clc
sar
add
adc
add
mov
clc
push
dec
fsubr
xchg
jl
xchg
je
fdivr
clc
jae
add
fidivs
add
sbb
push
pusha
add
imul
fs
sti
mov
clc
scas
js
pushf
inc
add
add
add
add
jno
add
repz
mov
clc
cmp
jnp
add
pop
jnp
pop
jne
inc
add
adc
add
out
add
add
clc
popf
xor
add
sar
push
add
clc
pushf
daa
clc
cmp
lods
lods
push
dec
sahf
push
add
cwtl
mov
ds
mov
or
clc
std
xor
push
add
pop
inc
add
movsb
clc
pop
xor
adc
test
sbb
add
stos
mov
dec
sbb
pusha
add
sbb
clc
hlt
scas
outsl
push
add
std
adc
add
add
loopne
sub
inc
add
or
add
jo
add
je
clc
insl
xor
add
xchg
push
mov
add
adc
add
add
loop
cmp
test
add
sbb
inc
add
out
mov
mov
nop
pop
pop
in
xor
add
add
xchg
dec
inc
add
add
add
jnp
fwait
pushf
and
add
filds
clc
cs
loop
mov
add
add
adc
add
xchg
in
add
add
pop
add
xchg
adc
add
add
fadd
clc
sub
jne
add
fcoml
add
in
enter
push
add
add
add
add
add
or
loop
sbb
add
xbegin
rcrl
add
jns
sbb
add
clc
dec
in
test
rcll
add
fldt
mov
add
pushf
xor
clc
arpl
add
add
sar
add
dec
pop
sarb
inc
clc
das
lods
test
inc
add
fisubs
add
xchg
mov
clc
inc
clc
push
add
mov
add
sbb
clc
mov
add
and
sar
cmc
jae
add
cld
fmul
xchg
cltd
enter
add
push
xchg
cmp
and
add
lret
cwtl
push
jae
add
push
clc
ret
clc
fstpl
cmp
clc
in
pop
clc
pop
and
add
xchg
sbb
add
push
cmc
aam
mov
sahf
lods
aas
xchg
ficoml
add
mov
clc
xchg
pop
aaa
mov
clc
imul
add
clc
fwait
scas
mov
sbb
jns
outsl
sub
pop
ret
clc
sub
mull
clc
pop
in
sti
js
out
fbstp
push
sub
popa
add
push
add
sub
push
fs
jo
add
add
or
clc
jecxz
shl
jne
lods
jbe
fwait
dec
movsb
clc
sti
fwait
mov
cmp
lods
dec
jns
clc
aaa
test
clc
nop
xor
add
fs
sub
lea
insl
adc
add
add
add
and
outsb
sub
or
fldenv
add
js
aas
mov
into
pop
pop
clc
jecxz
sar
xchg
jp
mov
inc
clc
and
add
and
add
add
mov
clc
bound
add
add
insl
lcall
inc
clc
sbb
mov
cmp
scas
int3
push
jno
add
add
jo
add
ficoms
scas
leave
dec
mov
jmp
int
sbb
add
sar
mov
imul
clc
xchg
xchg
add
push
clc
cmp
clc
test
test
xchg
dec
xchg
add
xchg
jo
add
add
fwait
add
add
cmp
sbb
add
adc
add
clc
jo
add
add
clc
loop
mov
pop
aam
mov
hlt
adc
add
add
clc
leave
cwtl
lods
in
push
fidivrs
in
fs
iret
into
iret
sahf
mov
or
clc
aaa
xchg
mov
scas
mov
add
clc
cmpsb
clc
and
add
add
xchg
loopne
leave
adc
add
mov
adc
xchg
fistl
clc
int
mov
clc
sub
lods
dec
mov
jnp
jno
add
movsb
clc
mov
xchg
dec
pop
mov
mov
add
clc
nop
mov
add
pushf
add
out
inc
clc
mov
xchg
fs
aam
clc
xchg
cmp
clc
mov
sub
fistpll
clc
dec
icebp
imul
add
xchg
inc
clc
dec
pop
gs
xor
add
fisubs
add
repz
jbe
aas
test
sub
jne
movsl
clc
pusha
add
add
xchg
movsl
clc
popf
adc
add
add
icebp
movsl
clc
test
addr16
jge
mov
cmp
cmpsl
clc
clc
fistps
mov
add
mov
ja
xor
clc
xchg
out
jbe
add
decl
jmp
fsubs
mov
das
add
add
cmc
ret
pop
divl
xchg
call
add
cmp
dec
or
jge
nop
cli
jmp
add
scas
xabort
into
jl
sub
movsb
clc
sbb
pop
outsb
rorb
in
imul
das
inc
add
fwait
inc
clc
mov
clc
dec
push
or
clc
and
add
leave
daa
clc
sbb
add
clc
push
xchg
mov
clc
adc
add
clc
xchg
sbb
add
clc
mov
inc
add
pushf
clc
push
outsl
mov
shlb
add
in
jl
clc
sub
inc
add
xor
add
add
add
clc
pop
test
lods
stos
mov
dec
and
add
daa
clc
sbb
push
clc
push
add
add
imul
add
es
aad
daa
clc
sti
mov
xchg
jmp
add
nop
icebp
sar
xchg
sar
add
aad
repnz
mov
adc
dec
outsl
fdivr
sbb
xor
sahf
sbb
add
sub
icebp
mov
stc
scas
loop
and
enter
lret
clc
cli
xor
add
cmp
add
jp
bound
add
mov
push
xchg
icebp
leave
sub
clc
stc
in
dec
push
add
outsb
std
push
add
mov
add
lea
xchg
pop
lea
dec
push
push
sahf
mov
mov
add
jno
add
cmp
clc
mov
dec
mov
add
xor
add
gs
pop
repnz
add
comiss
add
and
add
add
fcomi
pop
xchg
ja
int
jmp
add
fwait
sbb
in
sar
add
add
clc
jno
add
push
push
sub
jl
clc
cltd
icebp
scas
sahf
scas
or
clc
jae
add
or
add
dec
xabort
xchg
xchg
ficompl
aaa
pop
cmp
add
add
add
ja
mov
lods
dec
es
push
movsl
clc
into
mov
rorl
jp
or
lret
clc
xor
mov
movsl
clc
bound
add
clc
gs
cmp
push
add
sbb
pushl
cmp
add
insl
fdivl
add
punpckldq
add
clc
dec
out
mov
mov
xor
add
addr16
into
fnstcw
clc
lahf
and
add
in
flds
add
inc
clc
or
add
aam
add
inc
clc
pop
aaa
bound
add
add
add
add
fdivs
clc
sar
push
sub
xchg
and
jge
std
movsb
clc
pop
dec
push
clc
mov
push
cwtl
loopne
xbegin
mov
arpl
add
add
aaa
loope
pusha
add
clc
out
mov
add
pop
repnz
inc
add
aad
add
add
add
notb
add
insl
cltd
mov
dec
add
add
xchg
scas
adc
add
sbb
add
clc
sub
clc
stos
xchg
xchg
push
jnp
add
inc
add
add
clc
mov
add
sub
and
lods
movsl
clc
mov
and
add
insb
imul
cld
in
jnp
add
or
clc
mov
xchg
mov
sti
adc
add
clc
adc
add
add
rolb
or
pop
in
call
add
pop
push
add
inc
clc
pop
fdivrl
add
add
xchg
lea
add
clc
stos
std
adc
add
add
loop
xchg
adc
add
ficompl
pop
and
add
clc
add
add
xchg
rolb
add
mov
xbegin
dec
adc
cmp
xor
push
sub
clc
fcomip
xabort
dec
or
icebp
ss
xchg
xchg
repz
add
jnp
out
mov
loope
pushf
scas
out
mov
mov
xlat
xabort
pop
cli
loopne
insb
xchg
arpl
add
into
clc
xabort
pop
sbb
daa
clc
xor
add
fwait
cs
add
mov
cmp
dec
jmp
add
std
push
add
in
xchg
mov
sub
jmp
out
or
mov
add
xchg
or
clc
push
clc
das
jmp
sahf
adc
add
idivl
clc
lret
xor
imul
xchg
pop
testb
iret
push
add
inc
clc
jae
add
clc
jge
clc
stc
je,pn
cs
sbb
and
add
clc
xchg
insl
inc
add
dec
mov
dec
inc
add
push
add
in
jo
add
add
out
mov
rolb
mov
and
dec
frstor
or
mov
bnd
or
add
add
jno
add
cmp
js
xchg
mov
fbld
mov
cs
daa
clc
and
mov
clc
lods
add
mov
clc
dec
pop
cmp
mov
add
sar
add
fidivrl
mov
add
dec
cltd
pop
ja
clc
push
add
xlat
push
clc
movsb
clc
clc
and
test
mov
dec
iret
bound
add
clc
mov
cli
sar
pop
fs
fbstp
imul
jecxz
arpl
add
clc
aas
mov
clc
addr16
nop
sbb
cmp
shrb
in
xlat
adc
add
xlat
cmp
icebp
into
xchg
sar
dec
ds
clc
push
pop
mov
add
cmp
aam
or
fldcw
lods
rcll
add
or
push
add
xchg
xor
add
lods
out
test
call
stc
xchg
mov
add
dec
int
movsb
clc
mov
clc
cltd
sar
out
rcrb
or
clc
je
mov
or
clc
xchg
fstps
add
cmp
clc
cmp
add
xchg
aad
or
clc
mov
add
enter
add
xchg
sarl
adc
pop
pusha
add
push
add
inc
add
mov
outsl
sbb
clc
mov
int3
fs
xchg
or
xchg
pop
sbb
sar
push
clc
push
shll
add
add
add
add
jne
pop
clc
mov
or
ds
stc
in
cmp
mov
clc
pop
pop
pop
xor
imul
in
leave
xchg
stc
dec
pop
out
inc
clc
mov
clc
scas
dec
mulb
sar
jmp
clc
mov
clc
int
xlat
sub
add
push
add
sti
adc
add
xchg
jae
add
pushf
mov
mov
xor
add
in
sub
xor
add
xchg
mov
jno
add
cmpsl
clc
jecxz
mov
clc
and
add
and
add
pop
or
pop
lahf
cmp
add
add
clc
ljmp
and
add
popf
fistpll
add
dec
jge
cld
pop
inc
add
cmp
push
add
pop
mov
sbb
add
mov
cwtl
xchg
movsb
clc
outsb
inc
clc
push
lock
data16
in
cmp
clc
jp
or
add
imul
add
test
pop
mov
add
arpl
add
clc
jbe
xor
add
vrsqrtps
add
add
test
aam
cmp
add
mov
add
jb
add
add
adc
add
mov
add
xchg
and
add
add
fdivs
pusha
add
and
cwtl
leave
sub
test
pop
add
imul
movsl
clc
pop
jl
add
out
fs
pop
add
add
add
ja
jecxz
lea
add
dec
test
jmp
das
je
xabort
sub
lret
clc
and
add
lret
push
cmp
push
pop
insl
push
clc
sahf
repnz
test
push
sbb
add
sarb
add
sbb
push
jmp
clc
mov
add
mov
stos
fs
lret
cmpsb
clc
sub
add
and
mov
add
cmpsb
clc
out
pop
mov
dec
sti
inc
add
enter
xor
add
clc
and
pop
mov
fld
clc
pop
sub
push
add
add
inc
clc
xor
add
xor
add
push
add
ficomps
movsb
clc
or
pop
push
add
or
add
imul
and
add
lods
xor
add
popa
add
jmp
sbb
inc
clc
rcll
or
jno
add
mov
aas
push
xor
add
and
add
mov
outsl
xor
add
fadds
add
in
outsl
adc
add
idivb
add
dec
cmpsb
clc
push
add
in
inc
clc
jno
add
aas
jb
add
pop
adc
add
clc
cld
jmp
add
dec
add
add
jp
add
movsl
clc
jno
add
jg
adc
add
clc
fs
lret
sub
clc
jb
add
xor
rorb
std
pop
clc
mov
add
sar
push
insb
repz
clc
mov
dec
in
xchg
and
add
pop
inc
add
add
clc
xor
loopne
jo
add
or
pop
dec
sub
mov
add
mov
mov
fisttpll
clc
fs
or
mov
jecxz
mov
cmp
lods
push
in
insl
dec
jnp
enter
pop
dec
lret
imul
push
iret
sub
dec
or
sub
fcmovne
test
mov
add
xabort
test
addr16
lahf
aad
movsl
clc
cs
scas
xor
add
clc
push
repz
add
clc
sti
adc
add
fsubrl
clc
push
outsl
cld
scas
cmp
clc
rcr
push
sti
mov
xor
add
test
mov
outsb
popa
add
iret
stc
imulb
fsubrs
mov
mov
add
or
clc
rep
clc
push
inc
add
cmc
cmp
mulb
fistps
clc
or
sub
inc
add
pop
and
add
add
push
add
jg
mov
clc
popf
loop
sahf
fnstsw
ret
push
add
adc
add
add
push
clc
sub
or
clc
arpl
add
pop
cmpsl
clc
loope
sub
clc
cmp
out
or
add
add
lret
lea
repnz
clc
jo
add
sahf
mov
ja
clc
inc
clc
push
mov
clc
lock
loopne
das
mov
xor
add
add
daa
clc
jle
dec
cltd
fdivrl
test
jo
add
mov
add
das
xbegin
jne
in
xor
pop
sub
sub
add
add
clc
push
loopne
xor
add
push
loopne
cli
dec
push
sar
rcrl
add
nop
push
daa
clc
mov
testl
add
and
cmp
add
xchg
pop
clc
xchg
mull
clc
xabort
inc
clc
push
jno
add
shll
fcomps
imul
jmp
push
add
stos
jb
add
add
or
jl
stc
in
xchg
xchg
ljmp
cs
lea
add
mov
clc
sar
adc
add
and
add
clc
pop
pop
clc
div
sub
mov
push
add
add
inc
clc
mov
and
add
add
cltd
mov
add
push
sbb
je
push
add
movsb
clc
imul
popf
icebp
ret
add
popf
cwtl
push
arpl
add
inc
clc
fistpl
fcmovbe
cmc
add
add
lret
sub
add
sub
and
add
jecxz
push
clc
push
sar
clc
bound
add
fsub
clc
daa
clc
sar
clc
sub
fisubs
sub
add
test
pop
clc
mov
fwait
mov
jbe
xchg
add
jnp
xbegin
and
add
clc
jmp
bound
add
clc
mov
clc
loop
add
fldcw
in
add
add
clc
outsl
into
lahf
xabort
add
idivb
clc
insb
mov
xchg
fisubrl
clc
dec
imul
fsubs
clc
loope
dec
jl
cs
aas
lods
push
add
daa
clc
jge
in
call
add
sbb
jg
sbb
sti
pusha
add
imul
aam
sar
faddl
add
je
jno
add
adc
add
push
loopne
in
dec
mov
lea
movsl
clc
loop
test
add
enter
dec
jno
add
cmp
and
dec
ljmp
clc
mov
hlt
add
add
add
add
inc
clc
test
mov
clc
loope
in
sbb
push
jns
clc
std
inc
clc
or
add
cmp
inc
clc
xor
add
or
pop
enter
add
push
xchg
or
add
pop
cmp
clc
data16
mov
push
cltd
push
add
mov
clc
jg
clc
adc
add
add
adc
xchg
mov
lea
js
fisubl
and
add
clc
add
add
jecxz
jp
clc
pop
inc
clc
push
add
adc
and
add
add
out
inc
clc
fidivrl
pop
clc
xchg
jl
sbb
add
loopne
cmp
jae
add
push
add
roll
add
addr16
cmp
ss
cmp
add
lret
fsubs
clc
movsl
clc
test
or
add
cmp
add
inc
clc
scas
mov
add
xor
push
pop
mov
cmp
mov
cmpsl
clc
push
dec
jp
add
cld
adc
add
fidivrs
mov
movsb
clc
pop
push
add
xor
clc
pop
cmpsb
clc
in
mov
imul
movsl
clc
pop
push
add
jg
cltd
mov
or
mov
nop
out
and
add
clc
loopne
dec
jp
loopne
dec
sbb
mov
je
data16
test
and
add
out
fidivl
adc
lcall
inc
clc
inc
add
addr16
out
adc
test
cli
pushf
jbe
or
add
push
push
sub
sbb
xchg
lcall
mov
add
daa
clc
pop
popf
push
add
adc
add
sbb
loopne
nop
nop
cli
mov
popf
jns
ljmp
cmp
out
mov
adc
add
clc
and
add
lods
sub
fsubr
sar
clc
imul
popa
add
or
clc
cmp
inc
add
movsb
clc
loope
or
clc
xchg
adc
fwait
mov
lods
int
add
ficomps
cmp
icebp
in
mov
ret
clc
add
add
pushf
dec
fsubrl
clc
sbb
clc
jmp
clc
fcomps
stos
cmp
inc
add
ljmp
sbb
mov
or
lret
outsl
out
popf
lock
clc
bound
add
or
ljmp
add
pop
aam
clc
sahf
lret
aas
xchg
ljmp
je
add
lods
push
clc
sar
clc
stos
aam
into
push
aaa
dec
cmp
cmp
add
dec
ja
add
mov
pop
daa
clc
sar
cltd
fisttpll
jg
jae
add
dec
clc
jno
add
jmp
scas
push
add
mov
and
add
add
xchg
jg
add
pop
dec
mov
xor
cs
stos
das
or
aam
xchg
xor
xchg
jge
jg
clc
icebp
cs
mov
sbb
push
push
add
xor
add
add
clc
xor
lret
clc
push
sahf
pop
aam
jns
or
clc
lcall
add
ss
or
add
cs
mov
or
push
add
int3
push
clc
inc
clc
test
daa
clc
aas
mov
clc
add
add
inc
add
add
add
ljmp
xchg
lods
mov
add
xchg
mov
or
mov
clc
mov
jl
push
jns
jmp
mov
idivb
mov
fdivrs
clc
daa
clc
xor
add
add
pop
lods
add
dec
sbb
push
clc
sbb
mov
insb
adc
add
xchg
dec
mov
movsb
clc
xchg
into
imul
jae
add
pusha
add
push
clc
mov
or
mov
clc
add
add
and
lods
jp
xor
add
cmpsb
clc
stc
lcall
clc
mov
mov
cltd
pop
adc
mov
cmp
out
insb
scas
jnp
clc
xchg
aaa
lret
mov
xbegin
push
cltd
jle
clc
sar
sbb
add
add
mov
xbegin
add
dec
cmp
mov
clc
xchg
dec
pop
jne
dec
or
clc
ljmp
add
cmp
mov
clc
xchg
scas
sbb
clc
aam
mov
clc
inc
add
daa
clc
adc
fisubrs
cmpsl
clc
xchg
cmp
loopne
fnstenv
clc
pop
adc
add
lods
sti
in
es
test
cmp
clc
test
cmpsl
clc
call
push
fidivs
add
scas
in
push
jb
add
clc
jle
imul
clc
push
xchg
xabort
clc
mov
pop
or
add
fwait
inc
clc
das
rolb
clc
inc
clc
push
jle
add
jb
movsl
clc
xchg
push
fs
ret
clc
fs
cmpsb
clc
js
sbb
jns
test
jno
add
add
cwtl
in
dec
jne
xchg
jecxz
int
cwtl
loopne
nop
or
clc
push
xor
pop
outsb
sar
lods
das
xchg
call
push
add
cmpsl
clc
lods
ss
lret
inc
add
mov
clc
jo
add
clc
hlt
int
mov
inc
clc
out
imul
sbb
pushf
test
in
fisubrs
sar
mov
mov
push
jle
add
jge
clc
push
mov
mov
clc
clc
mov
clc
dec
daa
clc
mov
jno
add
dec
xchg
fimuls
pop
lcall
addr16
mov
clc
xor
add
loope
lea
pop
xabort
inc
add
xchg
cmp
clc
ds
or
arpl
add
clc
mov
add
add
jno
add
mov
and
add
add
xchg
cwtl
into
shrb
jecxz
shll
add
push
add
add
adc
add
repnz
add
xchg
gs
jle
adc
add
push
xor
push
clc
push
add
cltd
inc
clc
mov
jns
mov
dec
add
add
pop
ljmp
in
add
xor
add
mov
sub
lret
add
test
clc
and
add
mov
jecxz
testb
add
stc
ja
clc
xchg
into
adc
add
popf
clc
stos
ss
aam
add
pusha
add
dec
mov
pusha
add
f2xm1
insb
fadd
clc
pop
jbe
pushf
and
add
add
add
das
cmp
add
mov
sub
in
jae
add
sar
xabort
sbb
pop
push
clc
mov
add
fisubrs
add
mov
clc
adc
repz
add
repnz
dec
or
clc
out
int
mov
mov
inc
clc
and
add
push
aad
sub
inc
add
bound
add
and
add
add
sbb
clc
inc
clc
scas
jbe
clc
call
leave
xchg
outsb
jbe
pop
jle
add
add
test
xchg
sub
popa
add
push
add
repnz
and
pop
pop
add
add
clc
pop
aaa
mov
add
addr16
or
cmpsl
clc
cld
jmp
xchg
aas
lods
and
add
clc
test
fists
sub
add
ds
push
dec
mov
clc
mov
aad
xchg
dec
adc
clc
jg
ljmp
add
add
mov
add
neg
xlat
cmp
and
pop
cmp
clc
aaa
dec
xbegin
xchg
cmc
fs
inc
clc
mov
arpl
add
sti
fnstcw
xchg
stos
sbb
or
mov
clc
lcall
nop
sbb
add
add
mov
sbb
clc
and
add
cmpsb
clc
jns
clc
daa
clc
loope
in
pop
and
add
clc
pushf
mov
lahf
inc
clc
pushf
incb
add
jge
xchg
xlat
sar
clc
pop
jecxz
xchg
add
add
insl
addr16
dec
mov
and
add
clc
push
pop
cmp
add
dec
pop
adc
xchg
mov
add
mov
clc
fs
mov
push
mov
jmp
in
pop
stos
test
add
pop
pop
clc
hlt
ret
clc
mov
daa
clc
and
add
add
pop
xchg
jae
add
leave
pop
lahf
pop
pop
and
add
pop
daa
clc
sub
ljmp
fnstcw
clc
pop
xor
add
clc
push
jns
and
add
and
add
sub
dec
mov
add
dec
push
clc
leave
xor
cmp
dec
push
mov
cmp
ffreep
clc
mov
mov
sub
add
out
repnz
clc
dec
push
add
xor
in
mov
add
clc
pop
dec
mov
cmp
mov
popa
add
mov
js
clc
pop
add
add
add
aas
jno
add
lahf
jnp
mov
adc
add
pop
jno
add
pop
jbe
inc
add
push
add
lods
fstps
fwait
sti
cmc
lock
cmp
aaa
call
outsl
pop
test
add
fwait
mov
mov
dec
cmp
clc
adc
clc
ret
xbegin
pop
test
add
add
add
push
add
movsl
clc
hlt
sub
outsl
lock
cmp
sar
sahf
ja
jecxz
in
notl
add
mov
clc
mov
clc
pop
dec
sub
out
lods
mov
pop
int3
clc
ret
clc
lods
scas
and
add
jge
add
adc
add
push
jle
xor
clc
cmp
mov
icebp
loopne
out
sub
lret
add
add
xor
add
add
add
out
mov
jo
add
add
or
mov
add
xchg
mov
sahf
cmp
and
xor
add
add
int3
cltd
mov
push
clc
jg
cmp
adc
add
clc
mov
clc
test
lock
jecxz
mov
clc
inc
clc
cmp
jmp
cmpsl
clc
push
mov
push
add
ljmp
push
clc
cltd
loopne
bound
add
out
push
fldenv
rcr
add
add
iret
inc
add
fs
xlat
pusha
add
outsl
cmp
xbegin
rcr
ret
clc
mov
jnp
sub
clc
xchg
test
mov
cmp
add
jno
add
add
mov
pop
or
inc
clc
sar
mov
inc
add
jno
add
pop
addr16
mov
clc
scas
sar
jnp
clc
pop
xchg
jb
add
or
clc
outsb
sar
repnz
add
das
inc
clc
ljmp
push
ja
add
fbstp
push
clc
pop
cs
push
clc
xor
add
lods
aam
sbb
cmp
clc
and
add
fistps
mov
clc
push
inc
add
jmp
in
jl
clc
jl
sub
sub
js
outsb
dec
jno
add
jp
sbb
inc
clc
imul
add
add
mov
add
gs
sub
pop
sub
clc
mov
pop
inc
add
inc
clc
gs
bsf
test
dec
popl
cmp
mov
clc
mov
loope
repnz
add
or
xchg
seta
add
js
mull
add
shl
cmp
add
adc
add
push
fistps
roll
xchg
lret
pop
mov
add
pop
sar
cmp
clc
or
lods
cmpsl
clc
cmp
pushf
add
add
into
cs
add
imul
clc
mov
test
adc
add
add
xor
clc
jae
add
mov
add
nop
adc
das
inc
add
stos
test
adc
add
push
and
add
add
mov
push
and
add
push
lret
push
call
inc
clc
pop
push
mov
clc
lahf
xchg
mov
xchg
dec
mov
clc
inc
clc
xor
add
add
xchg
cs
clc
cmp
inc
clc
inc
clc
pusha
add
jno
add
cld
sub
cmp
add
mov
clc
xchg
fcompl
and
add
clc
stc
mov
clc
dec
pop
ljmp
movsb
clc
jne
push
push
add
push
addr16
hlt
fsubr
xchg
scas
lahf
mov
clc
std
cmp
clc
adc
add
clc
push
aaa
mov
clc
hlt
cs
cwtl
outsb
inc
add
popa
add
sbb
add
gs
lret
clc
cmp
xchg
pop
clc
or
cmp
add
mov
clc
fbstp
clc
push
sar
aam
adc
add
cmp
add
jge
fnstenv
add
clc
or
into
cmp
mov
add
jge
lret
add
cli
dec
aam
mov
xlat
inc
add
push
mov
clc
mov
mov
clc
jb
add
clc
cmpsl
clc
enter
jnp
fdivp
mov
das
inc
add
inc
add
clc
and
add
mov
add
clc
loope
jl
clc
insb
jns
mov
add
jecxz
pop
cmp
xchg
pushf
xbegin
jl
lret
xchg
mov
inc
add
and
add
add
push
sub
add
pop
clc
cmpsl
clc
je
int3
aam
add
jae
add
nop
aad
sub
add
lahf
and
add
sbb
clc
jg
shrb
dec
push
cmp
inc
add
call
fimuls
fmulp
in
pop
mov
cmc
jo
add
add
add
add
clc
icebp
cmp
xchg
jp
lcall
mov
or
push
loope
fs
mov
add
lahf
sub
clc
arpl
add
scas
fwait
shlb
add
arpl
add
mov
repnz
clc
es
cli
xchg
inc
clc
xor
add
add
xchg
sbb
clc
shlb
add
out
cmp
or
push
add
add
in
xor
clc
push
add
cmp
push
out
or
sub
add
mov
mov
add
pop
push
add
cmp
in
in
or
jle
add
gs
lret
add
and
add
inc
clc
and
add
add
cmc
fcoms
add
cmc
mov
shl
mov
ficoml
add
jno
add
add
clc
leave
lods
rcr
loopne
xabort
push
mov
fdivs
mov
add
fs
sub
out
sub
fnstcw
dec
xbegin
gs
mul
clc
mov
clc
mov
jge
add
sub
pop
clc
xabort
dec
sbb
add
clc
mov
clc
mov
clc
jg
outsb
cmp
loopne
jae
add
mov
push
fldl
xlat
and
add
add
clc
stos
nop
test
icebp
je
cmpsl
clc
lock
mov
stc
pop
inc
add
xor
add
add
xor
fmull
xchg
lahf
xor
lea
mov
clc
pop
cmp
fxtract
cld
xchg
pusha
add
test
or
add
clc
movsb
clc
cmp
mov
add
pop
sub
xchg
std
xor
add
clc
je
stos
fiadds
clc
jmp
je
mov
dec
ljmp
add
jecxz
test
ret
clc
cld
clc
sbb
pop
clc
add
add
pop
js
mov
add
add
push
add
icebp
fistl
add
popf
js
clc
adc
add
cmp
fsubrl
inc
add
jae
add
pop
test
ds
clc
cmc
test
out
js
mov
mov
in
xor
add
mov
clc
hlt
or
clc
inc
add
movsl
clc
mov
fildll
clc
clc
cltd
mov
add
add
sub
out
inc
clc
mov
std
test
push
add
fmul
test
nop
xchg
inc
clc
js
clc
leave
cmp
leave
xabort
lock
sti
and
add
aad
sbb
into
sbb
xchg
test
movsb
clc
aas
jnp
das
insl
pushl
cmp
add
mov
xor
clc
push
cld
pop
fnstsw
mov
inc
clc
pushf
out
pop
sbb
dec
mov
mov
or
mov
idivl
jbe
clc
and
fstpl
cmp
ljmp
clc
sbb
add
xabort
loope
enter
clc
nop
or
add
pop
fadds
clc
fisttpl
push
sahf
aaa
aaa
xchg
adc
add
xchg
pop
shll
sub
add
mov
cmpsb
clc
dec
int3
mov
fsubl
inc
clc
lret
sbb
sub
push
jle
clc
jl
clc
sbb
or
lcall
and
lahf
cmp
clc
or
add
das
jp
clc
dec
ficoms
lcall
cli
or
lods
int3
out
cli
sbb
fstps
add
add
add
clc
scas
aaa
scas
adc
add
lock
hlt
adc
leave
movsb
clc
mov
add
xabort
sarb
xchg
inc
clc
scas
mov
add
cmp
add
test
gs
xor
clc
data16
mov
sbb
lret
dec
cmp
push
clc
fdivrp
insb
and
xchg
add
add
mov
mov
inc
add
js
mov
add
pop
jo
add
loop
loop
add
add
push
dec
xor
add
add
add
movsl
clc
aaa
out
ret
in
iret
fs
mov
jp
mov
pop
jbe
imul
enter
outsl
test
clc
jle
add
add
movsb
clc
or
push
into
jge
test
push
add
cmp
add
add
add
clc
xchg
cmp
imul
clc
repz
and
add
add
add
add
jo
add
sub
add
clc
das
mov
jp
add
xbegin
loopne
dec
flds
nop
sub
clc
mov
clc
rcrl
stos
cs
sti
pop
ret
clc
sub
jbe
pop
scas
dec
inc
add
sbb
clc
xchg
add
add
clc
scas
aam
cmc
mov
add
add
or
mov
jle
add
cli
add
inc
clc
push
out
enter
pop
inc
add
mov
xor
mov
clc
cmp
dec
adc
add
pop
in
test
call
add
add
ss
iret
cmp
cmp
clc
cmp
clc
adc
add
add
loopne
int
clc
pop
in
outsb
repz
cmp
add
stos
popa
add
and
add
mov
shl
clc
ja
clc
xchg
jecxz
mov
in
push
add
xabort
mov
push
cmp
add
lret
cmp
clc
fcmovne
add
add
cmpsl
clc
test
das
sar
test
pop
or
add
sbb
add
clc
fst
imul
clc
jno
add
clc
fs
xabort
cwtl
out
fsub
clc
pop
out
inc
add
dec
cwtl
mov
loop
aam
nop
pop
das
sub
clc
push
push
clc
fs
aas
fsub
clc
cltd
je
ja
clc
adc
add
push
daa
clc
sar
cmp
clc
movd
int
add
add
clc
adc
add
add
adc
add
cmp
fsubl
mov
push
test
add
icebp
mov
clc
inc
clc
das
rolb
add
clc
pop
clc
pop
popf
xchg
ret
or
add
or
jns
xbegin
into
clc
jl
hlt
add
add
insb
pop
add
add
stos
js
add
pop
dec
bound
add
add
std
jb
add
add
mov
add
jge
mov
clc
repz
clc
hlt
popa
add
jo
add
test
lcall
push
add
xor
add
stc
pop
jmp
jmp
loopne
mov
xchg
fistpll
lock
add
js
xchg
scas
cmp
add
add
add
test
mov
cmp
popa
add
pushf
push
add
mov
out
mov
add
sahf
sbb
jbe
add
pushf
cs
pop
fiadds
scas
ljmp
inc
clc
pop
xchg
and
add
add
or
dec
icebp
fs
pop
sar
cmp
xchg
je
add
push
clc
clc
mov
add
sbb
cmp
outsb
mov
ret
clc
and
aaa
mov
push
clc
das
sarl
std
pop
jge
clc
ja
inc
clc
push
or
cmp
clc
cmp
cmp
clc
cli
dec
pop
inc
clc
int3
add
add
xchg
out
push
sbb
jge
clc
dec
out
sub
pop
lcall
scas
adc
add
sar
popf
push
pusha
add
icebp
push
insb
pop
sar
sub
jnp
add
pop
rep
jl
fs
mov
aaa
icebp
mov
clc
dec
leave
inc
clc
fstl
add
adc
cmp
mov
jo
add
mov
mov
add
cwtl
cmp
pop
lcall
ss
add
mov
fidivrl
loopne
xchg
lods
jo
add
add
jbe
test
add
inc
clc
cmp
push
push
pop
cwtl
adc
adc
add
and
mov
cmp
dec
cltd
outsl
xchg
fucomp
push
add
xor
add
shr
jmp
pop
sar
xor
add
xor
add
mov
clc
fstpl
stos
mov
clc
out
clc
bound
add
push
out
fistl
add
in
sti
dec
and
add
in
cmp
js
jb
add
clc
mov
lods
push
ret
add
push
pop
lea
mov
jae
add
add
lret
clc
dec
repnz
add
xchg
mov
sbb
clc
jecxz
int3
xor
fisubrl
mov
clc
stos
add
add
mov
inc
clc
loop
sub
clc
jmp
jae
add
test
adc
add
clc
jbe
cmp
fwait
ret
clc
cmp
aam
lods
mov
stc
out
add
push
clc
lods
cmp
mov
clc
es
sti
decl
add
data16
arpl
add
add
add
add
out
lret
dec
mov
clc
cmp
sub
test
loope
sbb
add
lock
mov
clc
inc
add
into
sbb
test
arpl
add
pop
clc
add
add
add
add
xchg
dec
ljmp
add
cwtl
and
add
clc
mov
dec
sbb
mov
clc
ret
clc
call
add
xor
add
clc
or
loopne
hlt
xor
xor
xchg
mov
sub
cmpsb
clc
in
and
add
clc
adc
add
add
stos
and
add
xor
add
add
push
xchg
jmp
push
add
sub
add
jl
clc
leave
je
clc
pop
jp
and
divl
mov
clc
xchg
test
pop
js
mov
clc
cmpsb
clc
lret
mov
sub
add
gs
enter
lock
in
sar
inc
add
jmp
dec
mov
add
es
jg
shlb
test
iret
mov
or
lods
mov
clc
cmp
rcrb
mov
inc
clc
jg
iret
xlat
pop
sub
shrl
outsb
inc
add
cmp
jnp
add
shll
lret
lret
call
ss
data16
stos
push
add
dec
loopne
daa
clc
iret
adc
add
and
add
xbegin
cmp
clc
xchg
and
add
jle
sub
inc
add
pop
mov
scas
sar
inc
clc
mov
mov
clc
in
push
clc
mov
add
add
cmp
cmp
add
push
ljmp
test
iret
mov
repz
clc
sbb
scas
mov
es
mov
push
mov
add
xor
add
and
add
adc
add
add
enter
cmp
clc
pop
lret
dec
and
add
add
mov
cmp
clc
mov
ret
clc
and
add
clc
enter
push
fisttpl
xchg
lret
js
mov
clc
cmp
clc
pop
push
xor
jnp
clc
fwait
in
mov
add
pop
mov
pop
js
pop
xlat
popa
add
cmp
call
popf
inc
clc
sub
setge
cmpsl
clc
repz
xor
add
lcall
clc
jnp
jo
add
cmpsl
clc
adc
add
add
imul
clc
pusha
add
pop
pusha
add
and
add
mov
clc
stos
jbe
enter
mov
clc
mov
add
shrl
fs
mov
add
negl
add
add
add
inc
add
jbe
clc
int
clc
ja
clc
inc
clc
out
mov
push
fsubr
mov
mov
inc
clc
inc
clc
je
int3
loop
dec
sub
lahf
es
roll
clc
sub
cmp
push
fs
add
push
adc
add
clc
dec
test
in
aas
repz
pop
or
add
cmp
insl
pop
cmp
mov
jecxz
bound
add
push
ret
lea
sbb
clc
inc
add
add
add
pop
pop
sbb
mov
cmpsl
clc
jno
add
xchg
mov
add
inc
add
sbb
clc
sahf
and
add
clc
cmp
clc
jnp
repnz
add
sub
sahf
xchg
mov
add
xchg
inc
add
test
add
add
fstpl
pop
mov
clc
mov
xchg
sbb
clc
iret
xabort
add
imull
sahf
push
aam
or
add
or
push
mov
lret
mov
add
add
clc
test
lods
xchg
test
or
add
add
clc
sti
dec
dec
jge
mov
clc
test
pop
jl
inc
clc
pop
sbb
stos
sti
cmp
xchg
mov
popf
fsubp
clc
in
xor
add
in
pop
loopne
jb
add
add
and
xchg
sarb
hlt
jmp
xchg
add
add
mov
add
fnstenv
add
xor
clc
data16
cmp
cmp
clc
mov
pop
cli
lret
mov
adc
add
cmp
add
clc
mov
clc
jne
dec
cs
cs
xor
add
add
fildl
add
cmp
pop
dec
pop
test
add
pusha
add
mov
fdivrs
clc
or
in
lock
pop
push
add
add
clc
movsl
clc
dec
cmp
jmp
pop
mov
dec
out
add
add
repz
mov
loop
add
add
fsubs
clc
xchg
or
clc
leave
jge
add
fistpl
dec
mov
add
add
cmp
cld
mov
in
sub
cmp
xchg
inc
add
and
add
leave
pushf
sbb
add
clc
test
in
adc
add
mov
clc
gs
mov
add
push
jnp
in
xchg
cli
and
daa
clc
fldenv
add
sbb
clc
xlat
xor
add
mov
cmp
add
mov
loope
jns
clc
aas
jno
add
add
add
adc
clc
mov
ljmp
ljmp
add
add
add
aas
mov
add
dec
push
clc
loop
adc
add
jbe
jo
add
add
sarl
pop
arpl
add
shlb
mov
mov
clc
push
mov
loope
adc
add
dec
and
cmp
cmp
xbegin
clc
lret
add
add
push
add
inc
clc
dec
inc
add
mov
inc
add
xor
jecxz
out
push
dec
in
inc
add
adc
add
mov
pop
in
insl
cmp
add
add
pop
fsubs
inc
clc
lea
int3
jl
add
dec
or
in
aas
pop
scas
mov
clc
ret
clc
push
add
cmp
xchg
xchg
sti
mov
add
xchg
inc
add
scas
cli
jbe
mov
add
add
add
test
clc
mov
clc
xchg
and
add
repz
lods
pop
and
fcmovnb
clc
sub
clc
inc
clc
push
sub
mov
clc
cld
scas
and
add
add
clc
pop
leave
pop
jb
add
ss
sbb
fisttpl
jns
test
push
add
movsb
clc
mov
jae
add
out
cmp
mov
clc
cmc
adc
add
add
pop
and
mov
add
mov
iret
xbegin
add
clc
mov
and
clc
sahf
imul
pop
stos
mov
clc
inc
add
cmp
mov
or
clc
fsubrs
pop
lret
or
add
xor
add
add
xor
add
in
mov
and
add
clc
mov
xchg
in
xor
clc
cmp
icebp
clc
rorb
fwait
mov
add
and
add
and
add
ret
clc
push
add
adc
clc
sub
add
cmp
clc
sub
mov
sub
pop
mov
dec
aaa
dec
add
add
jb
add
adc
push
add
add
add
sbb
or
xor
clc
mov
clc
cmp
loop
outsb
cmp
push
add
jbe
daa
clc
push
add
sbb
ret
add
out
adc
ret
je
cmp
pop
dec
mov
add
mov
mov
ficompl
scas
loope
dec
jmp
cmp
fs
xchg
test
and
add
clc
and
add
ficompl
je
add
add
clc
into
notl
add
mov
add
jae
add
clc
cs
arpl
add
popa
add
lret
push
dec
in
inc
clc
ss
add
clc
loop
lret
cwtl
or
clc
shll
clc
cmp
imul
imul
lret
push
pop
mov
clc
xor
add
adc
add
add
push
add
pop
pushf
lret
test
data16
pop
dec
outsb
insb
es
mov
jno
add
add
add
pop
inc
add
jg
add
mov
sub
sbb
fs
or
xchg
mov
cmpsb
clc
xchg
xchg
imul
ja
jmp
add
adc
add
test
js
clc
mov
mov
adc
add
clc
xor
add
add
add
and
sar
add
push
cmp
lods
xlat
push
add
pop
and
add
data16
cmp
fistpll
add
pop
or
add
add
xchg
jne
add
mov
add
clc
ficomps
sbb
clc
add
add
jecxz
cld
daa
clc
dec
cmp
mov
gs
dec
lea
add
rorl
mov
mov
push
stos
hlt
or
sahf
aad
clc
push
add
sbb
lea
sar
add
mov
pop
imul
test
add
add
add
mov
adc
add
cmc
jbe,pt
sub
adc
add
add
fucomip
pop
mov
clc
cmp
aas
pop
dec
nop
push
sar
leave
movsl
clc
jecxz
sub
das
push
clc
push
dec
cmp
loopne
cltd
mov
mov
add
and
add
clc
push
clc
ljmp
sbb
push
add
movsb
clc
ja
add
xchg
out
push
cwtl
iret
dec
cmp
add
clc
push
clc
jmp
test
dec
inc
clc
sbb
clc
xor
add
clc
cmpsl
clc
mov
fcompl
cmc
idivl
repnz
pop
in
mov
add
and
inc
add
fcoml
dec
jmp
or
scas
clc
clc
dec
lret
movsb
clc
jnp
mov
inc
clc
sub
adc
add
movups
add
cmp
out
inc
clc
cmp
clc
dec
mov
add
fldenv
add
hlt
stos
repnz
clc
fadds
icebp
out
sub
clc
cmp
push
clc
sbb
repz
add
mov
clc
inc
add
fisttps
iret
jge
stos
jo
add
dec
lret
gs
and
add
cmp
jg
js
add
gs
cmp
daa
clc
xlat
xchg
add
add
adc
add
and
add
mov
in
movsl
clc
shll
add
in
push
xabort
clc
cmp
cs
push
out
jb
add
xlat
sar
cmp
clc
scas
hlt
iret
cmp
clc
aad
jb
add
mov
cmp
clc
bound
add
clc
cmp
shr
imul
inc
clc
fisubl
mov
pop
clc
dec
jecxz
jle
xor
add
add
inc
add
add
add
bndldx
jbe
add
nop
repz
clc
adc
add
clc
jo
add
clc
xlat
sub
clc
je
inc
clc
addr16
ja
clc
insb
ljmp
lea
clc
push
clc
punpckldq
add
mov
add
mov
add
xchg
push
add
push
mov
pop
inc
add
insl
xchg
and
add
mov
push
clc
cwtl
sbb
cmovp
add
or
push
add
in
pop
insl
push
mov
jnp
add
int
clc
mov
stos
jnp
ret
clc
mov
xbegin
dec
cmp
outsl
lods
imul
add
clc
mov
dec
aam
es
divb
add
add
dec
sar
in
inc
add
push
insb
scas
lahf
pusha
add
cli
jno
add
dec
repz
push
add
mov
enter
add
das
and
push
add
mov
mov
call
clc
mov
sbb
clc
dec
out
mov
in
xor
mov
ljmp
sar
xlat
or
icebp
jmp
clc
pop
data16
sahf
in
cmp
das
pop
mov
add
sub
lods
nop
lcall
sahf
or
clc
cli
pop
clc
mov
adc
add
pusha
add
cs
repz
add
mov
push
add
sub
jl
mov
add
mov
fistpll
cli
outsb
inc
add
sub
add
fbld
fwait
cmc
leave
inc
add
sbb
xchg
aad
xlat
xchg
mov
loop
pop
cmpsb
clc
mov
add
dec
enter
movsb
clc
adc
add
add
add
or
push
push
clc
pop
pop
clc
mov
test
dec
popf
sub
add
int
clc
dec
rcrb
ss
and
add
fdivrl
test
clc
or
add
dec
cmp
add
mov
inc
add
scas
xbegin
nop
inc
clc
and
add
adc
inc
add
loope
daa
clc
iret
mov
or
add
mov
inc
add
pop
nop
mov
fs
js
call
jns
add
mov
cmp
cmp
je
das
hlt
vmread
add
adc
add
call
test
add
lods
out
test
loop
arpl
add
mov
lahf
xchg
pop
lret
add
jo
add
call
dec
add
add
test
mov
and
and
clc
idivb
dec
jo
add
mov
arpl
add
mov
clc
cmp
xchg
ficomps
dec
mov
add
add
add
clc
push
out
xabort
clc
jns
add
cmp
add
xchg
mov
cwtl
xchg
fnstcw
testb
jne
add
mov
add
add
xor
clc
loope
mov
add
int
add
xbegin
dec
hlt
mov
add
add
insl
and
sar
xlat
and
add
dec
es
mov
add
movsb
clc
mov
clc
in
into
push
mov
push
xor
add
add
sub
add
stos
in
dec
and
push
cmp
inc
clc
hlt
ds
jmp
dec
dec
add
test
or
test
cmp
add
add
clc
repnz
mov
adc
add
clc
push
add
mov
add
dec
jp
clc
adc
add
add
fimull
add
or
add
jge
in
sahf
mov
cld
xchg
and
add
add
stos
and
add
push
pop
add
add
mov
into
cmp
add
add
jnp
clc
push
pusha
add
in
bound
add
mov
add
cmpsb
clc
jle
add
popa
add
loope
sbb
and
sbb
clc
stos
stos
xor
jbe
add
sbb
add
add
add
es
rcll
add
movsb
clc
dec
jmp
clc
jmp
add
xchg
jae
add
push
hlt
jp
add
mov
clc
adc
add
add
sub
cmpsl
clc
fcmove
fcomps
and
pop
scas
sbb
add
mov
negb
pop
test
add
data16
or
or
clc
repnz
fildl
daa
clc
dec
stos
mul
clc
pop
dec
and
add
cli
mull
icebp
lret
mov
scas
push
clc
clc
cltd
jbe
xchg
xor
add
mov
sar
das
lock
add
cli
dec
cs
mov
add
xchg
lods
jbe
mov
test
add
clc
xchg
cli
rcll
add
mov
add
xchg
or
scas
cmp
clc
sbb
add
aaa
mov
push
or
jmp
hlt
in
data16
out
mov
clc
mov
clc
push
add
adc
add
or
mov
add
js
cmp
xlat
xabort
ja
add
adc
add
sub
clc
pop
pusha
add
xor
aaa
cld
mov
cmp
clc
in
jge
cmp
popa
add
loopne
cltd
mov
jecxz
popa
add
cli
bound
add
add
leave
push
push
clc
lods
jmp
cmc
mov
sahf
cmp
clc
sar
mov
hlt
mov
or
xor
xor
add
clc
or
mov
add
cmp
filds
clc
in
jno
add
xchg
xor
aad
clc
shll
test
clc
xchg
cmp
push
add
data16
inc
add
xchg
add
add
clc
push
add
ror
add
add
cmp
adc
sar
pop
lret
nop
rcrl
xor
add
pop
icebp
or
add
mov
clc
stc
xchg
lock
ljmp
xor
movsb
clc
mov
into
add
add
add
add
dec
mov
arpl
add
clc
sbb
clc
sub
add
xbegin
je
jmp
out
outsb
loopne
repnz
add
insl
inc
clc
pushf
sub
out
loope
pop
inc
add
popa
add
xchg
ja
pop
inc
clc
insb
adc
pop
xchg
sbb
push
outsl
adc
add
dec
jmp
clc
inc
add
push
add
ret
clc
jecxz
loope
hlt
inc
clc
aas
repnz
out
mov
imulb
scas
adc
add
cmp
cmp
cmp
xchg
enter
dec
xchg
ss
jmp
add
loope
cli
in
xchg
or
clc
cmp
call
fdivrs
mov
add
adc
add
ja
add
mov
cmpsl
clc
sub
clc
adc
add
xchg
bound
add
push
add
dec
sbb
ficoms
mov
clc
adc
add
daa
clc
hlt
movsb
clc
cld
jo
add
sahf
inc
clc
das
jecxz
adc
leave
xchg
push
icebp
push
clc
stc
pop
notb
add
inc
add
dec
shrb
or
add
sub
add
push
sbb
xchg
mov
rorl
pop
cmp
xabort
clc
ret
mov
in
or
in
je
clc
lcall
jecxz
mov
push
add
mov
clc
fnstcw
outsb
xchg
mov
sahf
jns
jg
mov
add
xchg
mov
mov
xbegin
enter
clc
or
es
cmp
clc
xchg
in
es
push
or
dec
pop
xchg
mov
pop
fsubl
clc
mull
imul
push
jno
add
std
adc
clc
into
cmp
popf
movsl
clc
xor
add
xor
add
pop
lcall
add
mov
inc
clc
test
aam
bound
add
xor
add
clc
cmc
cmp
clc
add
add
clc
sub
std
pop
es
push
inc
clc
cmp
rclb
add
add
ret
js
add
pop
clc
aad
pop
jne
clc
mov
add
sub
add
daa
clc
cwtl
and
add
clc
popa
add
pop
sbb
popf
dec
cmpsb
clc
pop
pop
cli
hlt
dec
data16
or
add
or
sbb
add
loopne
jns
jno
add
clc
fildl
mov
outsb
mov
test
outsl
mov
test
add
scas
clc
jb
add
add
clc
mov
inc
add
daa
clc
stos
jg
clc
imul
add
add
push
mov
clc
cli
stc
das
sub
add
rorl
out
dec
clc
xchg
push
add
imul
mov
pop
outsb
arpl
add
out
lods
xchg
lahf
pusha
add
mov
shlb
add
fmull
insb
outsb
mov
movsb
clc
rorb
addr16
mov
add
add
lock
add
aaa
cld
inc
clc
jnp
pop
pusha
add
daa
clc
int
jno
add
clc
mov
cmp
add
sub
add
add
lcall
std
lock
roll
add
clc
mov
add
push
add
xchg
xlat
dec
clc
arpl
add
clc
arpl
add
dec
dec
mov
mov
add
add
add
add
clc
mov
sti
jnp
add
pop
clc
mov
sub
xchg
iret
pop
pop
fisubl
push
jle
clc
jne
and
mov
mov
clc
adc
pop
inc
clc
cmp
clc
daa
clc
jno
add
mov
add
push
push
rcl
sti
sbb
shll
cmp
xchg
jns
sbb
xchg
xchg
in
ljmp
add
jb
add
gs
loop
mov
icebp
ds
ret
jo
add
pop
push
out
js
push
add
or
add
xor
add
add
sbb
add
aaa
dec
cmp
clc
inc
clc
pop
cmp
insl
outsb
clc
jae
add
add
pop
ss
icebp
sar
xchg
cmc
cmpsl
clc
push
and
xor
add
add
pop
scas
xchg
fnstcw
hlt
or
clc
imul
dec
call
clc
mov
clc
jecxz
in
mov
aam
clc
push
dec
cmp
jbe
lods
sbb
mov
pop
fnsave
add
push
and
push
add
sahf
mov
add
pop
pop
loop
mov
clc
xor
add
clc
sahf
pop
sar
fs
push
sub
clc
addr16
push
xchg
out
mov
adc
add
mov
fdivl
fs
ret
cmp
clc
enter
clc
loope
mov
clc
testl
push
add
add
add
xor
test
pop
mov
dec
and
add
dec
lret
in
cmpsb
clc
jbe
clc
ficomps
clc
and
clc
fnstsw
clc
jbe
or
jnp
data16
pop
outsl
rcrl
clc
popa
add
fstps
jbe
scas
xchg
pop
iret
mov
emms
pop
clc
cltd
xor
add
clc
repz
clc
push
stc
fisubs
add
add
clc
je
clc
mov
pop
xchg
fwait
cmp
insl
cli
sar
std
or
mov
jne
mov
clc
push
out
cmpsl
clc
stc
inc
clc
push
mov
sub
clc
bound
add
cmpsl
clc
push
clc
mov
mov
sbb
daa
clc
test
jl
add
outsl
sbb
pop
sar
lea
add
xchg
xor
add
outsb
xlat
sbb
clc
mov
mov
push
data16
xabort
in
pop
jno
add
mov
mov
xchg
mov
clc
into
push
stc
sbb
clc
dec
cmp
add
mov
data16
xabort
loope
or
jne
jmp
clc
jg
clc
fs
mov
clc
xchg
sub
mov
add
nop
mov
inc
add
push
add
pop
insl
js
movsl
clc
push
add
pop
mov
clc
jne
testb
add
pop
clc
dec
sub
in
insb
cwtl
out
icebp
xor
add
movsl
clc
cmpsl
clc
mov
into
push
jb
add
loope
call
sub
ljmp
sbb
jo
add
mov
outsb
movsb
clc
push
rclb
adc
clc
jns
clc
aam
popf
stc
mov
std
fnstcw
ret
clc
nop
loope
mov
in
add
add
bnd
clc
ret
clc
dec
into
cmp
in
ret
add
xor
arpl
add
fadd
clc
push
add
mov
pop
insb
sbb
clc
jmp
add
enter
in
insb
cmp
daa
clc
aas
sahf
push
clc
push
add
cmp
add
xchg
or
lahf
mov
cmp
add
add
push
add
and
push
mov
add
sahf
mov
xchg
mov
add
xor
add
fsubrp
pusha
add
or
sub
sbb
add
mov
mov
clc
push
or
ficompl
push
clc
mov
push
sub
add
or
add
cmp
ds
repz
test
clc
testl
inc
add
sarl
add
cmp
clc
inc
add
lea
aas
and
add
xor
add
stos
loopne
outsb
data16
cmp
testl
add
mov
mov
push
sub
je
cmp
jb
add
add
inc
clc
inc
add
mov
pop
mov
add
rcrb
clc
inc
add
loope
sbb
lock
jbe
mov
repnz
rcll
iret
sub
or
add
out
dec
ds
add
iret
leave
icebp
icebp
or
das
cmp
xchg
mov
dec
cwtl
xbegin
fdivl
add
insb
leave
gs
pop
daa
clc
jae
add
dec
stc
or
cmp
mov
add
lods
ja
mov
clc
xchg
xor
add
pusha
add
inc
add
jnp
push
movsb
clc
cld
std
aam
add
xor
add
sti
rcll
mov
add
xchg
jnp
mov
clc
cmp
clc
loop
mov
clc
fldt
push
clc
sub
cmp
add
aas
sbb
pushf
xchg
sub
ss
negl
add
outsb
lahf
es
out
sarl
xchg
cmp
adc
add
cmp
dec
xor
sbb
aas
inc
add
ret
mov
clc
stos
lret
push
add
xabort
clc
cs
clc
xor
clc
sub
clc
ljmp
add
clc
das
dec
cltd
and
add
mov
add
jmp
add
clc
jne
push
cmpsb
clc
sub
mov
stos
icebp
icebp
and
add
pop
push
push
add
dec
jecxz
sbb
ja
pop
xchg
mov
mov
push
xbegin
clc
xor
clc
push
cmp
clc
movsl
clc
fildll
adc
add
fsincos
jae
add
xchg
jmp
push
clc
push
xabort
mov
repz
out
mov
inc
clc
dec
repnz
idivb
clc
adc
add
add
clc
xchg
or
in
or
jp
clc
scas
jbe
mov
cmp
push
clc
call
clc
push
dec
out
mov
fnstcw
in
ret
or
add
out
push
add
mov
add
adc
add
add
add
popf
call
cmp
push
add
out
mov
jl
mov
add
ret
pushl
add
fsubrl
pop
dec
jb
add
clc
inc
add
je
push
clc
or
add
mov
and
idiv
mov
xchg
mull
add
or
xchg
inc
add
bound
add
in
mov
mov
out
mov
in
lcall
jne
add
shrb
insb
loop
xor
add
pop
cs
stc
mov
add
sbb
mov
dec
sub
inc
add
movsb
clc
pop
cmp
add
add
add
bound
add
jp
insb
je
movsl
clc
lahf
mov
add
jbe
mov
rcll
push
dec
pop
lods
or
jecxz
or
inc
add
rcll
add
pop
cmp
mov
add
lret
sbb
clc
fldt
movsl
clc
push
mov
in
or
add
push
cmc
xchg
jmp
clc
mov
std
or
clc
sub
add
mov
sbb
add
arpl
add
add
sub
hlt
add
mov
popa
add
add
out
and
add
xlat
mov
add
add
mov
mov
jle
sub
mov
clc
mov
clc
cmpsl
clc
push
push
add
add
add
cmp
popa
add
fists
negl
jg
outsl
push
add
cmp
fsubl
add
leave
dec
jmp
mov
lcall
mov
outsl
and
clc
pop
inc
clc
pop
roll
inc
add
loopne
fistpl
fstpt
clc
or
mov
insb
data16
cmc
arpl
add
in
mov
scas
loopne
std
mov
clc
nop
lahf
push
pushf
and
add
stos
cmpsb
clc
cmp
clc
mov
clc
ja
ja
clc
cmp
outsl
mov
mov
clc
fsubp
clc
adc
in
xor
mov
aad
mov
mov
add
clc
out
xor
std
outsl
pop
mov
xchg
jbe
add
push
clc
test
ficoms
jne
cli
cmp
movsb
clc
add
add
mov
push
mov
push
cmpsb
clc
inc
add
jmp
sarl
cmp
movsb
clc
rol
clc
imul
mov
add
mov
nop
sti
push
add
jmp
pop
xchg
pop
cmp
pop
cmpsl
clc
xchg
cmp
pop
gs
push
add
fs
icebp
inc
clc
xor
cmp
das
mov
add
adc
add
add
fadds
push
clc
mov
add
adc
clc
pop
out
mov
ljmp
clc
fstl
add
iret
scas
repnz
roll
add
clc
fildll
and
add
add
mov
enter
clc
push
adc
add
arpl
add
add
iret
sub
inc
add
ds
mov
cmpsb
clc
jns
add
push
add
stos
push
adc
add
add
add
stos
outsb
dec
mov
clc
mov
mov
add
add
sub
shlb
add
clc
hlt
ja
mov
xchg
out
mov
clc
mov
add
or
aaa
jno
add
pop
fsubs
bound
add
lcall
add
inc
add
insb
or
add
xabort
clc
pop
xchg
shlb
add
lods
mov
clc
xor
add
lahf
pop
fstpl
clc
fcmovu
jbe
clc
jecxz
je
clc
mov
mov
int
dec
adc
add
clc
mov
cltd
hlt
push
mov
dec
sbb
add
add
add
add
or
lock
pop
jmp
add
xor
add
mov
add
ficoms
shlb
xbegin
mul
clc
or
cltd
push
push
mov
add
clc
push
add
adc
add
jne
imul
clc
into
sbb
add
jno
add
clc
dec
jnp
add
cmpsl
clc
in
mov
clc
xor
add
clc
sar
add
add
mov
add
sahf
pop
leave
pop
clc
xor
add
cmp
lods
pop
clc
push
add
inc
add
fsubs
shl
clc
xchg
dec
movsl
clc
jb
add
gs
popa
add
or
jbe
ds
sbb
add
loope
lret
outsb
clc
js
adc
or
clc
adc
add
aam
clc
inc
add
push
xbegin
jp
sbb
add
scas
sarb
into
mov
jns
leave
and
push
add
push
and
fidivrl
sbb
clc
push
fwait
mov
lock
add
sub
dec
and
add
add
cmp
shrl
call
add
add
shlb
clc
jmp
je
sar
add
mov
push
jne
stos
inc
clc
mov
clc
loope
inc
add
xchg
pop
mov
loope
cmp
inc
clc
dec
jb
add
add
repnz
push
aaa
loopne
mov
xchg
mov
push
xchg
jle
add
or
out
add
jne
sub
cmp
sub
sbb
mov
add
jno
add
clc
clc
aaa
aaa
xabort
adc
add
add
test
add
and
add
xbegin
push
clc
mov
add
test
jnp
in
data16
mov
mov
add
jle
clc
inc
clc
sub
lods
sbb
pop
or
fsubp
clc
repnz
clc
xor
add
adc
add
sub
jecxz
push
clc
inc
add
ror
and
cmp
clc
pop
sar
clc
jmp
dec
mov
mov
pop
sbb
xabort
call
sub
clc
jecxz
adc
add
adc
fwait
bound
add
loopne
pop
in
cmp
jge
int
pop
rcrb
pop
pop
cld
xor
add
clc
je
clc
cmp
testb
xchg
mov
inc
add
cmp
inc
add
mov
clc
jae
add
clc
xchg
inc
clc
add
add
add
cmp
mull
ds
clc
out
mov
imulb
jp
ljmp
daa
clc
push
add
push
jne
jo
add
add
add
clc
xchg
int3
int
or
data16
lret
mov
add
sub
push
imul
jne
add
pop
mov
and
int3
jg
dec
arpl
add
or
push
add
and
fcoms
mov
mov
and
or
adc
add
mov
add
lods
leave
mov
add
cs
xor
add
clc
xchg
ret
add
and
push
cli
out
push
ss
sti
jecxz
adc
clc
and
add
mov
xor
add
add
nop
rcrl
cmp
or
add
mov
das
cmp
clc
cli
out
dec
jl
sarb
scas
cmp
sub
push
mov
aas
cmp
add
add
arpl
add
sti
out
std
cmp
inc
clc
cld
mov
mov
add
and
add
mov
push
add
sbb
clc
sub
add
repnz
cltd
dec
add
int3
xor
add
mov
add
out
push
or
add
mov
inc
clc
push
add
and
add
mov
and
add
add
cmp
lret
hlt
push
add
mov
sbb
mov
mov
add
or
iret
sub
pop
pop
clc
data16
cmp
add
cmc
fnstsw
add
popf
cmp
clc
sbb
xor
add
clc
leave
ret
clc
popa
add
imul
inc
clc
mov
clc
leave
adc
add
add
loop
xchg
mov
add
cwtl
cmp
jecxz
cmp
push
int3
int
clc
aam
add
lock
clc
repz
cmp
mov
adc
add
jbe
mov
add
xlat
push
jmp
add
or
clc
fadd
clc
jne
sub
add
add
mov
push
mov
clc
push
add
jle
add
stos
fcmovu
adc
add
add
je
xor
add
xchg
aam
add
adc
add
add
add
add
push
add
xor
add
in
in
push
clc
or
shll
adc
add
mov
xor
add
loop
jge
addr16
je
fwait
adc
add
mov
xchg
mov
add
push
mov
push
ja
push
pusha
add
adc
dec
sti
testl
cmp
add
stc
xchg
cmp
or
mov
add
xchg
push
add
jae
add
jbe
inc
clc
jnp
add
mov
lock
sbb
add
inc
clc
rorb
aam
mov
por
jle
add
dec
lcall
in
pop
loope
push
clc
dec
popa
add
push
dec
mov
xchg
xchg
fsubrs
add
outsl
stos
fidivs
int
mov
ret
jbe
push
add
xbegin
clc
xor
add
cmpsb
clc
mov
xchg
shll
mov
clc
out
in
es
and
add
xchg
add
add
adc
xchg
rcr
sbb
add
fbstp
fldt
jne,pt
clc
in
push
pop
js
add
pop
pop
test
lods
sub
clc
or
clc
pop
in
xchg
xor
add
loop
add
add
xchg
dec
call
cmp
add
push
clc
lea
add
add
jg
add
test
daa
clc
push
xchg
test
stos
mov
lret
cli
or
add
cmpsb
clc
loop
mov
std
lods
in
aad
dec
mov
add
clc
add
add
out
in
ror
cli
clc
addr16
sub
push
mov
push
enter
clc
icebp
cmpsl
clc
fisttps
std
push
jae
add
add
sub
add
ror
push
xabort
mov
leave
push
add
aad
cmp
dec
adc
hlt
sub
arpl
add
add
ljmp
clc
sub
sar
add
test
iret
inc
clc
icebp
dec
cmp
push
iret
jge
mov
loop
movsb
clc
sub
push
gs
pushl
or
daa
clc
pop
pop
aam
clc
fdivp
call
clc
dec
mov
mov
clc
stos
aad
jmp
xor
add
clc
inc
add
push
add
data16
std
mov
mov
add
mov
clc
dec
mov
clc
adc
add
jle
aaa
or
clc
mov
cmpsl
clc
xor
add
int3
test
push
bound
add
pop
lcall
clc
mov
sub
sbb
adc
add
mov
bound
add
mov
add
call
inc
clc
sub
clc
clc
mov
and
clc
sub
add
push
add
sar
mov
xchg
xor
and
add
cltd
ret
clc
mov
je
out
clc
xbegin
int3
xor
add
clc
arpl
add
pop
jb
add
mov
clc
push
jo
add
clc
xor
test
je
clc
add
cltd
mov
clc
cmp
push
pop
iret
test
sbb
pop
push
push
das
and
add
add
xlat
sar
add
dec
inc
add
lahf
jge
push
inc
clc
add
add
and
mov
push
addr16
jne
adc
mov
add
fs
jmp
imul
clc
bound
add
mov
add
mov
adc
mov
add
gs
or
add
clc
icebp
push
pusha
add
ss
clc
jle
push
add
sub
mov
cmp
mov
popf
cmp
pop
mov
cmp
icebp
cmp
add
ja
mov
mov
clc
outsl
dec
cmp
cltd
or
add
mov
outsl
insl
jno
add
clc
pop
or
add
inc
clc
adc
clc
push
out
sar
int
ss
fiadds
sar
dec
lea
push
daa
clc
movsl
clc
jmp
mov
clc
xchg
add
mov
cmc
mov
scas
xchg
sub
mov
je
add
mulb
add
rorl
insl
aaa
cmc
xchg
cmpsb
clc
xlat
ds
daa
clc
mov
clc
adc
add
clc
sti
add
add
out
jnp
in
loope
lret
mov
add
mov
add
adc
add
dec
sub
fxch
mov
clc
stc
adc
add
jbe
add
xor
fidivrl
xor
add
xchg
fmuls
adc
add
add
xchg
inc
clc
or
sub
sub
ss
add
add
mov
clc
push
lods
out
mov
clc
pop
cmp
loop
pop
fnsave
add
imul
js
push
xchg
xchg
clc
mov
lods
into
mov
mov
sub
shll
cmc
out
xor
stc
test
call
cmp
clc
inc
clc
lods
xchg
adc
jecxz
xchg
negb
inc
clc
lret
cltd
sbb
add
xor
xchg
cmp
add
dec
jne
mov
aas
xchg
pop
cmp
xchg
aaa
std
fisttpl
mov
xor
add
add
add
clc
add
add
or
jmp
rolb
add
cmpsb
clc
push
add
push
add
cmp
cmp
add
add
push
add
push
xabort
shl
push
and
add
dec
mov
add
dec
neg
ljmp
into
ljmp
pop
fneni(8087
clc
lods
dec
cmp
add
inc
add
sbb
mov
hlt
repnz
addr16
mov
add
mov
arpl
add
enter
loope
sti
cmp
add
dec
sti
clc
loopne
mov
fwait
pop
clc
jns
push
mull
add
fldcw
cmovs
add
fisttps
pop
push
xchg
jb
add
or
ds
and
add
clc
or
or
add
add
lahf
add
add
lock
in
ds
add
mov
adc
add
push
add
mov
jge
and
add
add
or
aaa
inc
add
mov
fs
lret
movsb
clc
mov
clc
fcoml
clc
inc
clc
and
add
add
div
mov
std
add
add
clc
push
add
add
ficoms
clc
or
add
cltd
mov
out
inc
clc
jo
add
add
dec
inc
add
jbe
xchg
mov
add
inc
clc
data16
push
clc
test
jp
out
add
add
pop
pop
mov
or
test
out
sub
cmp
add
out
jo
add
clc
xlat
pop
cmp
lret
outsb
and
add
inc
add
or
xchg
stos
stos
jl
jmp
aas
dec
loopne
mov
insl
sbb
outsb
or
pop
clc
out
add
add
clc
add
hlt
scas
adc
imul
add
fidivrs
in
mov
push
clc
test
clc
data16
pushf
int3
push
add
cmc
push
sar
add
ljmp
pop
clc
xchg
dec
or
add
add
and
add
add
cmp
push
add
nop
mov
add
imul
mov
xchg
cmp
add
shlb
add
push
clc
jle
notl
fsub
clc
pop
sub
add
push
sahf
jmp
clc
xor
add
add
enter
xchg
jne
cmp
clc
jmp
mov
cmp
stc
xbegin
add
mov
xor
add
xchg
inc
clc
hlt
inc
add
sbb
xor
clc
bound
add
add
out
dec
int3
int
add
imul
pop
mov
cmp
add
clc
cmp
int3
jp
lahf
push
mov
add
insl
cli
xor
add
adc
add
outsl
cvtps2pi
add
in
xchg
in
imul
mov
dec
ret
clc
jno
add
out
pop
cmp
sar
mov
clc
sar
and
add
and
add
add
mov
sbb
add
ljmp
lahf
lcall
mov
add
mov
clc
mov
stos
pop
popf
sar
movsb
clc
mov
mov
dec
jle,pn
clc
cmp
mov
xor
jmp
sub
add
clc
dec
pusha
add
out
push
add
popa
add
stc
lret
add
add
mov
clc
or
clc
fiadds
add
insb
mov
add
inc
add
mov
ror
mov
clc
shrl
movsb
clc
xabort
clc
cmp
clc
je
mov
add
cmpsl
clc
cmp
clc
cmp
add
and
add
add
mov
push
in
mov
clc
cmp
inc
clc
lods
pop
movsl
clc
clc
add
xchg
ret
clc
sbb
out
or
out
xchg
cmp
xor
add
into
in
xlat
and
add
xor
add
add
or
clc
pop
push
add
and
add
and
add
dec
jle
inc
add
out
pop
clc
push
mov
add
sbb
add
adc
add
mov
clc
repnz
push
add
jge
mov
mov
vminps
dec
fucomip
jne
icebp
fadds
fcoms
daa
clc
push
xor
add
clc
cmp
push
add
xor
add
add
cmp
cmp
clc
jmp
mov
inc
add
cwtl
sbb
add
xchg
int3
inc
add
push
inc
add
dec
js
clc
jns
lret
pop
sar
xlat
or
jne
add
xchg
mov
clc
inc
clc
push
add
mov
je
clc
mov
in
hlt
dec
mov
clc
jge
inc
clc
mov
mov
add
loop
and
add
jle
clc
cli
xchg
sub
int
movsb
clc
add
add
clc
mov
push
and
fs
jecxz
mov
popa
add
lret
adc
add
clc
cmp
test
mov
jns
mov
gs
push
add
arpl
add
cmp
mov
mov
leave
inc
clc
mov
xlat
out
pop
mov
outsb
shll
loopne
xchg
int3
add
add
arpl
add
jp
add
mov
cmp
imul
dec
shlb
roll
popa
add
mov
xor
add
clc
add
add
cmpsl
clc
sub
add
mov
in
and
add
clc
mov
decb
clc
ss
call
out
inc
clc
jo
add
add
shr
cld
mov
add
fcomi
jnp
clc
into
cwtl
fcomps
clc
jl
add
cld
pop
leave
or
enter
add
test
out
push
inc
clc
push
xor
add
clc
inc
add
or
add
loope
jge
inc
clc
leave
cmp
add
data16
push
add
sahf
ds
clc
nopl
insb
inc
clc
mov
and
add
clc
dec
aaa
shrl
lret
out
sahf
sbb
add
or
std
inc
clc
and
add
mov
sar
cmp
and
add
hlt
addr16
mov
adc
add
clc
in
cmp
clc
push
add
cmp
or
xor
clc
mov
sub
sar
add
mov
pop
adc
add
clc
test
cmp
add
clc
cmp
aas
and
add
clc
aaa
push
pushl
add
add
xor
add
dec
lods
mov
sbb
dec
fists
dec
dec
movsl
clc
mov
ret
add
cmp
je
pop
decl
inc
add
pop
ss
aas
imul
loop
pop
clc
add
clc
cmp
pop
jnp
negb
mov
outsl
cmp
cmp
add
add
sub
add
pop
hlt
std
stos
insl
sar
and
add
mov
pop
clc
and
add
clc
sar
dec
push
jl
mov
and
add
dec
pop
int3
jle
lret
test
imull
push
in
icebp
std
cmp
add
and
sub
jbe
mov
clc
and
add
sbb
mov
mov
clc
arpl
add
shll
add
mov
or
out
loopne
lcall
out
mov
jnp
mov
add
add
add
ret
in
into
and
cmc
cltd
or
add
mov
adc
add
mov
aaa
aam
clc
dec
and
add
add
adc
add
add
dec
jp
clc
test
clc
dec
aas
popf
inc
add
data16
push
pusha
add
cmp
mov
add
add
fxam
clc
aam
clc
mov
dec
int3
into
xchg
push
fwait
adc
pop
jle
ljmp
leave
pop
into
test
icebp
clc
nop
sahf
lret
add
add
call
xchg
inc
add
out
push
add
imul
jmp
clc
jl
shrl
cmp
ret
clc
cmp
clc
cmp
iret
es
sar
stos
mov
xor
add
repz
cli
dec
testl
jbe
mov
mov
dec
jne
mov
out
mov
xor
add
add
cltd
test
stc
jns
clc
int3
in
test
add
in
cmp
add
add
mov
sub
in
add
add
adc
clc
scas
and
add
clc
stc
cmp
or
push
cli
int3
pop
clc
fidivrs
clc
dec
insl
add
mov
push
xchg
pop
xchg
sbb
clc
push
add
pop
add
add
test
add
add
clc
sahf
aam
in
sar
mov
push
add
int3
out
aad
push
add
out
cltd
inc
add
xchg
pop
xor
add
cmp
sbb
clc
or
clc
pop
xor
add
jl
sahf
leave
jge
loop
sbb
cmpsb
clc
xchg
sbb
sbb
rorb
shll
clc
inc
add
inc
clc
fildl
clc
leave
xchg
mov
inc
clc
mov
js
out
inc
add
bound
add
add
sbb
aaa
pop
push
or
xchg
cwtl
inc
add
loopne
pop
clc
sub
xchg
xchg
xchg
out
in
dec
mov
rcrl
clc
scas
inc
clc
inc
clc
xchg
cmp
pop
fwait
bound
add
pop
stos
sbb
cmpsl
clc
or
add
add
xbegin
add
mov
add
add
mov
pop
out
jae
add
sub
imul
push
add
aaa
test
clc
and
add
stos
lods
cmp
add
es
xabort
push
add
xchg
sbb
push
clc
vsubps
outsb
xchg
adc
add
adc
add
mov
xor
dec
push
add
fwait
imul
daa
clc
rcr
xchg
in
mov
jmp
clc
ret
clc
bound
add
push
add
push
popa
add
loope
jno
add
add
test
add
push
add
mov
add
pop
faddp
clc
clc
shlb
add
add
xor
dec
or
add
jmp
add
lahf
push
imul
add
mov
add
arpl
add
clc
sbb
mov
pushl
add
add
sbb
add
leave
and
add
add
flds
cmc
push
in
sahf
cltd
sbb
add
cli
loop
mov
cmp
add
icebp
flds
lock
mul
clc
out
jo
add
cmp
add
aam
enter
add
test
in
popa
add
push
lcall
push
add
add
mov
add
imul
mov
add
add
jns
clc
popf
or
inc
clc
mov
shrl
add
inc
clc
inc
add
pop
int
pop
or
add
xchg
sbb
imul
rcrl
xlat
jb
add
scas
fnstsw
aaa
rorb
sbb
inc
clc
xor
loopne
aam
mov
test
insb
lret
ja
add
or
sti
ljmp
pop
fidivs
enter
mov
inc
add
jbe
mov
add
sar
pusha
add
jle
dec
or
out
imul
insl
and
add
into
stos
int
popf
mov
dec
push
add
cmp
add
pop
sar
push
add
imull
dec
xor
add
mov
sub
loope
iret
cli
outsb
inc
add
mov
push
mov
xor
cmpsl
clc
aad
add
xor
add
clc
cmp
cld
sub
xor
add
add
and
add
movsl
clc
repz
mov
ret
add
add
push
add
jmp
lea
cmpsl
clc
push
fsubrl
fiadds
clc
inc
add
xor
add
clc
ljmp
clc
xor
add
add
or
add
mov
sub
pusha
add
sub
sbb
xor
xor
add
and
mov
push
mov
xchg
push
add
cmp
xor
sar
xchg
test
cmp
clc
xor
add
cld
fwait
cmp
add
clc
xchg
dec
mov
clc
jecxz
push
dec
lea
push
fidivl
add
jecxz
dec
sar
ja
loopne
stos
stos
xchg
mov
xor
add
jle
clc
sbb
cmp
out
sbb
data16
inc
clc
pop
fistl
std
adc
add
xchg
aam
clc
aas
push
mov
aaa
nop
lods
clc
adc
add
xor
add
int3
dec
mov
clc
push
ret
add
lret
jae
add
mov
pushf
knotw
mov
adc
add
jnp
push
add
pop
mov
dec
add
add
add
adc
add
jmp
daa
clc
jb
add
dec
inc
clc
dec
bound
add
adc
dec
vmulps
clc
jae
add
clc
pop
cmpsl
clc
es
mov
pushf
call
fldl
int
clc
pop
inc
clc
mov
arpl
add
push
xchg
push
add
sbb
add
cmp
clc
sahf
push
loop
pop
cmp
adc
add
test
arpl
add
and
add
clc
add
repnz
mov
aaa
aas
add
add
loope
lcall
inc
clc
clc
sbb
add
ret
clc
jns
mov
clc
testb
pop
clc
ret
shlb
add
xchg
dec
clc
into
mov
push
push
add
mov
clc
mov
leave
jl
leave
fstpt
add
imul
add
cmp
jb
add
add
fwait
cli
inc
clc
fldt
add
cmpsb
clc
leave
cmp
int
aad
adc
add
div
cmp
dec
shr
sub
push
sbb
push
mov
rolb
add
add
add
daa
clc
xchg
pop
xchg
call
add
fs
jge
clc
scas
add
bound
add
sahf
mov
sahf
stc
sub
clc
or
add
int3
movsl
clc
and
add
outsb
inc
add
xor
add
sahf
lock
add
repnz
lret
or
sbb
sar
clc
bnd
add
add
add
cmp
clc
fidivrl
add
pop
clc
dec
imul
jbe
call
mov
pop
dec
or
mov
pop
clc
stc
push
lods
mov
cmp
mov
sbb
clc
data16
arpl
add
push
add
cld
in
adc
mov
add
hlt
sub
int
push
jnp
clc
popf
addr16
ja
lods
imul
or
add
push
add
jo
add
clc
rcrl
cmp
loope
pop
mov
clc
dec
dec
push
mov
push
adc
add
clc
rcr
clc
push
jns
or
clc
cmp
in
push
cltd
lock
hlt
inc
clc
out
inc
clc
add
sub
dec
cmp
decl
dec
pop
arpl
add
add
jmp
clc
mov
arpl
add
js
add
mov
or
mov
clc
xlat
fdivl
add
clc
test
push
fsubrp
xchg
pop
into
rclb
push
add
outsb
es
xabort
clc
mov
adc
add
add
add
add
push
sbb
dec
ret
clc
xchg
mov
mov
cmp
add
int
clc
push
pusha
add
pushf
cmc
mov
push
sub
clc
cmp
test
add
arpl
add
or
add
lea
fs
inc
clc
inc
clc
cmp
aaa
inc
clc
loop
roll
add
aam
sub
daa
clc
mov
cmp
xchg
inc
add
jp
clc
outsb
fidivrs
test
arpl
add
loope
pop
nop
sar
jb
add
jmp
into
jno
add
clc
dec
mov
dec
inc
clc
cmp
mov
push
add
enter
mov
add
add
add
ret
movsl
clc
mov
inc
clc
insb
je
cld
jmp
xor
add
push
scas
push
add
sub
clc
test
add
in
mov
jge
add
mov
scas
js
popf
aam
xchg
pop
pop
loope
dec
das
xabort
add
mov
mov
and
add
stos
push
cmp
dec
mov
aas
and
xlat
inc
add
loope
pusha
add
push
add
add
add
add
sub
int
pop
xchg
inc
clc
cmp
repz
mov
ljmp
xabort
clc
sub
add
loop
mov
jp
xchg
and
add
add
sub
sub
clc
aad
ds
mov
add
testb
sbb
add
adc
add
xabort
add
sbb
xchg
das
sti
loope
mov
out
push
add
aad
loop
xor
add
cmpsb
clc
xbegin
add
repnz
ds
mov
dec
out
bound
add
aam
add
add
idivl
clc
inc
add
mov
xabort
add
out
add
dec
cwtl
sbb
fcmovu
in
mov
mov
insl
push
clc
mov
hlt
cmp
add
rorl
push
add
mov
clc
push
add
xor
clc
outsl
cmp
mov
xbegin
pushf
mov
repnz
add
add
enter
clc
and
add
clc
in
mov
add
jo
add
lock
xor
add
clc
insb
ja
xchg
in
mov
sbb
xchg
adc
add
add
mov
lods
daa
clc
rorb
xchg
fnstenv
add
inc
add
movsb
clc
cmp
add
cmp
daa
clc
adc
add
add
lcall
fwait
cmpsl
clc
stos
xchg
gs
shrl
xor
add
clc
shrb
jp
fwait
adc
add
test
int
clc
jnp
clc
js
clc
fdivrp
xor
sbb
mov
push
push
add
in
push
add
rorb
xchg
pop
lods
dec
xchg
movsl
clc
pop
loopne
pop
jl
loop
add
add
pop
imul
clc
out
fstps
cmp
push
jge
clc
push
add
sbb
jnp
clc
sbb
add
mov
push
add
sub
inc
clc
or
xor
add
push
clc
and
add
add
cmp
sahf
out
dec
mov
add
add
pop
xbegin
or
dec
mov
clc
ret
fcom
outsl
lock
clc
shlb
add
cmpsl
clc
movsb
clc
inc
clc
or
add
mov
leave
testb
xbegin
mov
cmp
clc
or
xchg
std
lcall
fdivl
push
add
mov
add
inc
clc
push
add
dec
aaa
mov
insb
or
clc
in
data16
adc
jecxz
mov
cmp
gs
in
inc
add
ja
jbe
clc
fmull
arpl
add
and
add
dec
xchg
cmp
outsl
mov
dec
bound
add
and
pushf
mov
add
push
inc
add
jae
add
stos
push
add
add
sbb
or
out
push
clc
mov
clc
aad
in
call
call
add
scas
test
loope
fwait
imul
cmc
cmpsl
clc
pop
mov
icebp
push
lcall
dec
pop
test
lret
clc
in
mov
add
clc
jge
arpl
add
lods
addr16
mov
clc
inc
add
cmc
mov
add
fistps
clc
xchg
shll
add
clc
clc
loopne
cmp
imul
clc
lret
add
add
xbegin
cltd
insl
xlat
mov
outsl
daa
clc
jl
add
sub
add
insl
or
cmp
das
xchg
pusha
add
fmuls
clc
scas
xchg
aaa
or
add
daa
clc
imul
add
xchg
mov
cli
push
push
rcrb
clc
mov
inc
clc
outsl
imul
int
ret
clc
test
lock
add
dec
cli
xchg
mov
mov
test
pushf
xchg
xchg
imul
add
insb
sub
add
add
lret
cmp
shll
add
loope
sub
add
test
mov
daa
clc
in
inc
add
stos
push
js
lods
es
iret
inc
add
dec
and
add
jge
lahf
mov
add
dec
push
add
test
in
dec
hlt
dec
inc
add
sti
stc
xchg
fsubrp
div
repz
inc
clc
inc
add
pushf
dec
leave
stc
push
add
mov
aam
xchg
call
movsl
clc
stos
inc
clc
push
add
clc
movsl
clc
or
daa
clc
inc
clc
mov
clc
push
add
pop
out
lcall
push
add
inc
clc
popf
loop
scas
dec
jl
clc
clc
leave
or
push
in
sbb
in
xor
add
add
pushf
xbegin
jmp
mov
and
jg
clc
dec
lahf
in
sahf
jp
daa
clc
push
outsl
icebp
stos
cmpsb
clc
clc
inc
add
or
clc
or
clc
out
mov
sarb
xbegin
clc
inc
add
jp
leave
mov
add
add
icebp
rcll
inc
add
lods
mov
jg
or
cvtpi2ps
mov
and
test
add
mov
adc
lea
pop
testl
add
inc
add
loopne
in
mov
inc
add
and
add
movsb
clc
jb
add
or
adc
add
add
push
push
in
lahf
fisubl
clc
cmpsl
clc
repnz
mov
cli
pop
and
add
or
add
pop
jne
add
aas
xchg
dec
mov
add
push
ja
clc
out
xchg
mov
add
insl
sub
add
xlat
mov
inc
clc
inc
clc
addr16
fiaddl
add
xabort
fwait
or
ret
clc
adc
mov
xchg
inc
clc
inc
clc
jo
add
out
jle
jg
push
cld
cwtl
cld
stos
pop
rclb
jg
out
inc
add
fcmovne
fldl
clc
add
add
add
add
clc
out
into
sub
add
or
inc
clc
test
jge
mov
mov
addr16
inc
add
cmp
fnstcw
clc
push
add
mov
in
ret
clc
mov
fdivrs
push
and
add
clc
iret
inc
add
icebp
mov
clc
sysenter
jmp
clc
into
cwtl
sbb
clc
jb
add
xor
add
out
dec
nop
xchg
xchg
sub
add
jp
clc
fmull
mov
iret
fcomps
xor
xchg
popf
roll
add
adc
add
clc
out
sbb
arpl
add
xor
clc
outsl
cmp
imul
clc
lret
sub
add
cmp
jne
push
add
in
inc
add
out
xor
add
fistps
cli
mov
clc
xchg
or
xchg
repz
add
stos
cltd
fwait
lock
clc
push
clc
jns
mov
add
add
and
add
mov
clc
cwtl
cmpsl
clc
enter
xbegin
add
sbb
daa
clc
clc
fs
adc
add
and
add
test
bound
add
add
push
xchg
jno
add
addr16
hlt
sub
aad
add
add
mov
mov
movsb
clc
test
das
jne
push
xchg
inc
add
ret
clc
lret
jl
fldcw
mov
icebp
jns
sub
jo
add
inc
add
sbb
clc
sahf
movsb
clc
jle
xabort
clc
inc
add
sbb
cmp
sbb
in
ljmp
clc
mov
pop
sbb
mov
movsb
clc
cmp
clc
pop
stc
ss
add
pop
int
add
clc
in
lret
add
push
add
leave
xchg
mov
add
das
sub
clc
sbb
push
jle
cmp
add
add
stc
jmp
mov
cmp
clc
es
leave
loopne
push
enter
ret
clc
mov
fimull
add
pop
cli
xchg
icebp
das
sar
add
push
lock
imul
xchg
cmp
clc
dec
push
add
lea
add
jmp
mov
add
fcoms
add
jns
cmp
adc
add
add
sbb
pop
clc
lea
sub
clc
fadd
clc
cmc
jne
out
or
clc
popf
jmp
lret
aaa
ljmp
lock
pop
sarl
mov
add
sar
add
out
pop
cmp
add
ret
test
mov
dec
dec
push
add
adc
add
add
enter
add
shll
add
inc
add
ret
clc
sub
and
add
ss
iret
ljmp
add
pop
fdivr
jnp
clc
stc
enter
xor
add
push
push
scas
add
add
test
mov
push
lret
cmp
pop
or
cmpsb
clc
je
js
clc
repz
dec
out
inc
clc
pop
negb
add
add
cmp
and
add
add
data16
adc
add
pushf
ktestw
adc
add
leave
fists
add
insb
bound
add
dec
loope
mov
mov
push
cmp
add
jg
add
pop
xor
or
add
sarl
add
jb
add
or
daa
clc
sbb
or
into
push
sahf
sar
sahf
xlat
xchg
movsl
clc
fldt
adc
add
loop
divb
xabort
clc
inc
add
lock
jns
push
mov
clc
xchg
ficompl
add
add
lea
add
add
add
push
scas
xchg
fnstenv
lahf
shlb
push
lea
add
ljmp
add
xor
add
add
jbe
inc
add
mov
clc
adc
add
sbb
pop
or
push
mov
cmpsb
clc
cmpsb
clc
popa
add
add
add
fcom
mov
std
mov
add
add
lret
cltd
je
add
push
add
sub
fildll
add
mov
in
cmp
clc
lcall
inc
clc
jecxz
outsl
xchg
fstpl
pop
mov
movsl
clc
sub
add
mov
lea
clc
pop
jnp
pop
xchg
mov
pop
cmp
leave
in
clc
cmpsb
clc
jecxz
pop
mov
in
cmp
clc
bswap
push
aad
xor
add
xor
add
adc
add
loop
xor
add
xchg
rcpps
add
push
add
sahf
clc
insb
addr16
aas
jmp
push
add
nop
xchg
outsb
cmp
clc
add
add
add
xabort
mov
mov
clc
sar
out
jnp
clc
shlb
push
add
cmp
add
lahf
rcrl
add
enter
add
add
add
lcall
dec
push
cmpsl
clc
sar
pop
mov
stc
sar
sar
sub
adc
repz
cmp
add
jae
add
add
sbb
add
add
add
add
add
jl
cmp
sub
repnz
sub
in
mov
xchg
clc
imul
add
call
inc
clc
js
bound
add
add
clc
sub
dec
pop
sub
pop
frstor
add
mov
mov
xchg
cmc
pusha
add
mov
xor
add
imul
clc
jmp
xchg
je
and
xchg
fucom
clc
ret
clc
sub
imul
jo
add
clc
push
add
mov
repz
jg
popf
or
clc
jp
popf
jns
mov
mov
clc
adc
add
clc
repnz
add
pop
clc
cmp
fwait
add
add
imull
clc
jg,pt
in
fsub
clc
xchg
pop
scas
jge
std
pushf
and
cmp
shrl
call
add
mov
add
cld
mov
mov
clc
inc
add
cmp
mov
pushf
dec
inc
add
test
add
add
cmp
clc
xor
add
pop
enter
cmp
mov
daa
clc
mov
add
in
mov
in
push
add
stos
push
popf
js
xchg
sbb
add
cmp
add
jmp
clc
mov
dec
in
xlat
or
stos
pushf
inc
add
inc
add
push
cmpsl
clc
inc
add
push
add
out
cwtl
ficoms
cmp
adc
add
clc
inc
add
jl
clc
adc
add
xor
add
pop
add
add
inc
clc
sub
clc
aaa
call
add
jno
add
ds
clc
mov
rorl
movsb
clc
int
cmpsb
clc
push
add
mov
inc
clc
in
inc
clc
frstor
add
clc
fstl
dec
and
clc
adc
call
push
add
add
sahf
std
fidivrs
sbb
test
das
push
add
inc
clc
jno
add
clc
dec
lods
and
add
add
push
pop
cmp
stos
lock
imul
das
sbb
and
add
sbb
imul
clc
loopne
fsubr
pop
stos
into
test
movsb
clc
adc
push
and
add
arpl
add
inc
add
cs
push
test
add
sar
dec
fbstp
mov
mov
clc
insl
iret
pop
and
out
addr16
sub
mov
jle
clc
mov
inc
add
add
add
mov
sbb
clc
inc
add
push
mov
rcr
lahf
push
sbb
xbegin
dec
sar
clc
aas
inc
clc
mov
clc
cmp
sahf
mov
int3
pop
clc
outsl
add
add
sub
mov
in
jge
rcrb
rcrb
push
clc
fldl
clc
and
add
clc
repz
add
pop
jno
add
add
out
dec
rcll
clc
lahf
scas
nop
adc
add
push
jmp
dec
jmp
add
into
enter
push
add
outsb
ja
dec
ja
inc
add
sti
dec
jg
fimull
xor
adc
xchg
jno
add
inc
add
xchg
or
pop
imul
repnz
clc
jns
push
mov
in
dec
imul
xchg
mov
clc
fstl
mov
int
imul
xchg
xchg
jnp
jnp
clc
test
nop
xor
xor
add
mov
pop
xchg
inc
add
push
mov
scas
sbb
add
add
adc
add
icebp
mov
fists
clc
push
mov
add
mov
add
push
shlb
xchg
mov
mov
push
sub
ljmp
xchg
call
test
cli
inc
clc
mov
adc
add
xabort
mov
push
cmp
test
cmp
sar
add
cwtl
and
fs
out
dec
pop
mov
cmp
cmp
flds
add
sbb
jecxz
mov
add
add
pop
sbb
cmp
lods
push
hlt
or
mov
clc
add
xabort
xchg
mov
test
add
add
mov
clc
ss
into
das
or
sub
mov
xabort
fxtract
stos
dec
or
shlb
add
push
mov
jo
add
cmp
clc
repnz
cld
call
xchg
and
add
add
fndisi(8087
clc
cmp
mov
or
out
dec
fbld
mov
mov
adc
add
call
or
int3
outsl
add
add
out
push
sbb
add
add
sahf
push
ja
shlb
dec
mov
clc
xor
add
push
lods
aas
sub
and
jle
jl
push
jno
add
arpl
add
dec
or
cmp
frstor
add
xchg
sub
pushf
mov
outsb
adc
add
or
sbb
add
and
add
out
popf
arpl
add
scas
xabort
xchg
or
popa
add
xor
add
imul
lock
add
fildll
mov
call
add
mov
out
pushl
bound
add
adc
add
or
lret
or
clc
repz
clc
cld
xchg
cmp
hlt
call
mov
clc
mov
mov
and
sub
clc
and
add
sbb
add
cmp
sbb
popa
add
test
and
add
das
mov
and
add
data16
add
clc
mov
clc
add
add
in
lods
jno
add
testb
add
add
add
pop
clc
ud0
add
xchg
dec
sar
clc
mov
add
sub
popa
add
iret
and
xchg
scas
sbb
push
add
adc
add
daa
clc
cmpsl
clc
sti
rep
push
add
lahf
je
fsubl
push
mov
pop
mov
dec
test
add
or
xor
sbb
clc
pop
enter
mov
popa
add
cmp
clc
push
mov
incl
clc
pop
mov
add
mov
out
mov
mov
clc
int3
pop
ret
clc
cmp
push
add
cli
sub
cmp
clc
xchg
fnstenv
add
imul
add
pop
into
jo
add
add
clc
idiv
fneni(8087
clc
pop
pop
push
clc
lret
jns
mov
sar
mov
clc
pop
or
push
mov
or
dec
add
clc
mov
mov
add
frstor
clc
push
and
in
out
and
aas
pop
jmp
clc
xabort
dec
pop
in
stc
fbld
jbe
clc
fildl
add
sbb
sub
clc
inc
add
clc
pusha
add
push
dec
call
lods
pusha
add
sub
cmp
cmp
mov
or
fsubrl
cmp
inc
add
jne
clc
xchg
sub
mov
add
std
lret
leave
out
sahf
int3
inc
clc
mov
je
add
pop
cmp
sbb
mov
push
cmp
add
hlt
lods
push
pushf
inc
clc
fwait
mov
push
loope
push
add
lea
add
insl
scas
ss
mov
add
clc
sgdtl
add
mov
iret
out
mov
mov
clc
js
jo
add
test
xchg
jl
clc
adc
add
ret
cmpsb
clc
sub
add
add
xchg
movsl
clc
jb
add
clc
push
ret
clc
pop
jle
mov
push
aas
lret
mov
mov
insl
dec
aad
xbegin
jno
add
clc
cmp
jecxz
iret
pop
imul
add
inc
clc
sub
clc
add
add
sar
loop
incb
add
clc
mov
inc
clc
iret
mov
add
add
fidivl
mov
add
push
mov
inc
add
repnz
add
mov
imul
pop
out
and
add
inc
add
dec
pop
cmp
add
add
jne
rcrl
cmp
clc
fsts
add
cmp
clc
cmp
dec
mov
mov
add
and
pusha
add
aas
outsl
stos
xchg
mov
add
fldt
ljmp
aaa
outsb
test
jp
pop
xchg
mov
jne
stos
mov
cmp
jle
add
test
push
add
adc
add
xor
add
mov
clc
ficoms
clc
fiaddl
add
xchg
out
popa
add
cmp
dec
mov
cmp
aad
clc
sub
add
sar
or
mov
fsubrs
pop
push
add
pop
jecxz
movsl
clc
jae
add
push
add
bound
add
add
pop
lcall
inc
add
lea
add
imul
add
xchg
and
outsl
push
pushf
xabort
mov
loop
dec
push
ss
jae
add
add
or
gs
clc
aam
bound
add
clc
push
add
add
mov
add
jno
add
dec
or
aas
aam
mov
clc
jp
jb
add
sahf
pop
mov
cwtl
incl
add
push
mov
sbb
add
inc
add
pop
sbb
mov
add
xor
es
push
mov
ljmp
mov
jle
das
xchg
adc
aad
jno
add
xor
add
mov
clc
dec
pop
clc
leave
and
add
sub
mov
pushf
xbegin
shrl
mov
xor
add
add
es
inc
add
pop
addr16
mov
push
clc
bound
add
sub
xchg
nop
ss
clc
out
xchg
and
add
adc
add
cmp
loopne
dec
scas
or
das
stc
inc
add
popa
add
mov
ret
clc
pop
mov
cmp
jbe
add
jnp
clc
push
or
mov
dec
cmp
add
in
inc
add
pop
movsb
clc
cmp
add
sub
mov
in
xchg
push
add
add
add
dec
pop
lock
add
loopne
xchg
sub
cmp
clc
xor
add
xor
add
clc
in
jo
add
cmc
outsl
or
imulb
add
mov
add
fcmovne
cmp
jno
add
clc
push
sbb
and
add
pop
or
add
pop
mov
clc
mov
sbb
pushf
sbb
inc
add
inc
clc
dec
mov
lret
inc
clc
vmovlps
add
jb
add
add
das
adc
add
add
sub
int
sti
add
add
dec
test
dec
cmp
out
popf
push
add
mov
fcmovu
inc
add
cmp
lea
cmp
popf
idivb
clc
cltd
dec
mov
lods
cwtl
cmp
xchg
cmp
add
sub
sbb
dec
and
add
test
clc
xor
add
out
jp
add
out
in
lcall
xor
add
sahf
sbb
out
mov
clc
lcall
clc
int3
mov
xor
add
jne
xchg
cli
jle
cmpsb
clc
dec
test
jmp
inc
add
arpl
add
inc
clc
jns
clc
je
clc
cmp
into
jl
nop
enter
clc
call
sbb
inc
clc
mov
clc
gs
dec
sbb
mov
pop
clc
xor
add
idivl
clc
call
add
add
pushf
jle
clc
pop
pop
cmc
mov
dec
fists
add
push
add
stc
xor
add
mov
add
cmp
dec
lods
pushf
cmp
add
movsl
clc
cmp
add
arpl
add
lcall
hlt
xchg
clc
and
add
clc
repnz
clc
add
in
sbb
pop
push
add
mov
cmp
add
pextrw
sub
pop
ret
clc
mov
fsubrs
add
dec
sub
pop
push
add
sbb
sub
cmp
pop
dec
jbe
sbb
or
test
aam
sar
cmc
out
iret
stos
popa
add
repz
add
iret
arpl
add
mov
dec
mov
stos
daa
clc
negb
popa
add
pop
push
clc
lret
fwait
adc
add
clc
es
mov
clc
cmpsb
clc
nop
cs
mov
sub
cmp
mov
add
xabort
push
in
mov
clc
cltd
pop
mov
clc
xchg
call
clc
and
add
add
ret
clc
std
inc
clc
mov
mov
add
fstps
lcall
clc
mov
clc
and
clc
cmc
std
pop
push
add
and
inc
add
add
mov
js
or
clc
pop
int3
std
cmp
cs
jmp
clc
ret
clc
clc
inc
clc
ret
or
clc
rcr
int3
clc
pop
imul
and
add
xbegin
testl
push
enter
xbegin
adc
add
sti
lea
rcl
jns
push
add
push
mov
jg
clc
and
dec
and
ret
pop
test
xor
add
repz
add
clc
adc
pop
mov
lret
add
add
mov
jle
clc
imulb
xchg
push
or
out
clc
jbe
loopne
cmp
add
mov
add
xchg
inc
clc
int
aas
test
and
add
jae
add
add
in
popa
add
mov
xor
add
sbb
pop
sub
pop
xchg
mov
out
pop
xor
xor
xor
add
add
out
testb
add
loope
dec
cmp
clc
insl
xchg
mov
push
add
fisttps
pop
loop
pop
pop
jmp
jl
mov
inc
add
push
jnp
out
add
add
add
clc
cmpsb
clc
mov
leave
stc
and
add
clc
test
and
add
popf
mov
add
push
add
int3
sbb
add
jo
add
cmp
push
add
movsb
clc
push
add
imul
add
adc
add
add
rol
clc
addr16
mov
cmpsb
clc
stos
mov
mov
adc
add
clc
pusha
add
add
add
add
sub
push
xor
add
mov
pop
xor
add
mov
into
and
mov
icebp
sahf
loopne
sar
add
push
jle
jb
add
in
test
jo
add
clc
push
add
add
and
add
add
aad
mov
fstl
in
or
jmp
jae
add
je
clc
scas
xchg
data16
mov
out
test
movsl
clc
cmpsl
clc
sar
rolb
add
xabort
clc
ljmp
fbstp
fsts
cmp
out
mov
inc
add
pushf
push
xchg
and
jmp
push
jge
sub
adc
add
push
add
ljmp
clc
movsl
clc
jnp
add
add
add
clc
mov
adc
add
sbb
xchg
inc
add
or
imul
push
popa
add
lods
gs
outsl
repnz
jnp
clc
js
mov
pushf
cwtl
push
pop
cmpsb
clc
ret
clc
pop
loopne
xor
add
clc
cmp
push
jecxz
xlat
insl
dec
js
mov
clc
stc
inc
clc
mov
ret
clc
fs
xchg
mov
fnsave
adc
add
push
clc
xor
je
sub
add
adc
pop
jl
out
and
add
adc
add
clc
insl
sbb
and
add
add
inc
clc
sti
sbb
mov
pop
test
test
clc
cmp
mov
add
pop
fistps
cwtl
xor
gs
inc
clc
sarb
add
in
push
add
hlt
gs
loopne
push
add
cmp
and
gs
xlat
jp
insb
add
add
fdivs
add
mov
lea
mov
cmp
add
cmpsb
clc
xchg
xor
add
outsb
clc
or
pop
inc
clc
call
popf
aaa
lock
mov
sub
add
cmp
add
sar
adc
add
clc
outsb
fisttpl
add
adc
push
clc
int
clc
mov
sub
call
data16
push
scas
or
jae
add
and
add
add
jb
add
imul
clc
cmp
add
add
lods
je
mov
add
test
mov
enter
jo
add
ficoms
add
aad
xor
add
lock
mov
add
leave
xlat
outsb
sub
clc
cmp
push
add
addr16
aas
adc
add
mov
mov
xlat
clc
mov
push
fdivrp
jb
add
jae
add
pop
arpl
add
std
fdivl
add
mov
jl
clc
mov
clc
mov
cmc
pop
cld
xchg
xor
dec
push
aad
xchg
cmp
aad
add
out
and
add
sar
clc
mov
adc
add
xchg
sub
clc
out
adc
add
xor
add
pushf
call
clc
jg
test
and
add
add
mov
in
mov
aas
cmp
or
add
shl
clc
push
add
ljmp
clc
enter
clc
cmp
add
imul
add
data16
lret
rcrb
sub
cwtl
js
push
push
mov
jle
clc
mov
add
mov
clc
jp
dec
xchg
mov
cmp
repnz
test
data16
or
clc
mov
xchg
dec
adc
add
clc
insl
stos
xor
add
dec
xor
add
add
add
or
sub
dec
sub
add
cli
insb
xchg
mov
add
arpl
add
ds
clc
push
add
mov
xor
clc
add
add
add
cltd
imul
mov
add
add
clc
out
xchg
jp
gs
fwait
mov
adc
add
pop
clc
pop
dec
imul
clc
in
sub
mov
push
cld
xor
add
clc
jne
xor
dec
ret
mov
sub
mov
ret
clc
xchg
shll
lods
add
add
add
add
rcrb
repz
add
add
cmp
outsl
fstps
xor
clc
cs
inc
clc
mov
dec
adc
add
mov
ja
sbb
add
or
cmpsb
clc
fwait
xchg
outsl
adc
add
adc
clc
popf
dec
jo
xchg
jg
loope
xchg
imul
and
fs
cs
sahf
xor
add
mov
add
or
pop
clc
pop
push
outsb
xchg
test
je
lret
fistl
add
push
jmp
movsb
clc
xlat
mov
clc
or
mov
sub
rcll
add
add
sbb
add
loopne
add
add
imul
fidivrl
scas
lahf
gs
mov
or
clc
mov
add
add
add
adc
sar
clc
lret
inc
clc
shlb
add
leave
scas
aam
clc
adc
add
clc
mov
sub
clc
or
sub
push
fidivl
add
sar
push
add
scas
jmp
aam
scas
mov
sbb
fbld
adc
add
mov
clc
bound
add
xor
jg
adc
add
push
add
add
clc
xor
add
add
cmp
sbb
mov
clc
add
push
clc
repnz
ret
add
daa
clc
mov
dec
pop
aam
clc
or
add
inc
clc
jecxz
insb
repnz
shll
mov
add
xor
add
add
mov
jb
add
sub
sub
jae
add
jae
add
clc
jg,pt
mov
clc
inc
add
sbb
mov
inc
clc
movsl
clc
cmp
sti
in
dec
pushf
sbb
clc
or
or
cmpsb
clc
add
add
jle
add
jecxz
mov
jecxz
lcall
sub
pop
das
leave
cmp
inc
clc
pushf
aam
loop
cmp
fwait
leave
and
add
jnp
jg
dec
xor
add
clc
adc
add
add
xchg
outsb
jnp
add
pop
jb,pn
add
add
add
clc
in
push
scas
ffree
clc
js
in
leave
jno
add
add
popa
add
jno
add
pop
jge
cmpsb
clc
imul
xchg
mov
inc
clc
mov
add
inc
add
ret
mov
inc
clc
add
xchg
cmp
clc
es
imul
add
and
push
movsb
clc
add
add
out
cvtps2pd
add
jae
add
out
lea
mov
clc
cmp
lods
mov
clc
xchg
out
cmpsl
clc
jg
add
testl
and
add
add
stos
sar
xor
add
add
cltd
add
je
xbegin
ds
stos
xchg
loopne
pop
dec
insb
and
jns
add
lret
in
clc
push
add
push
adc
inc
add
fst
cmp
iret
cmovnp
mov
add
fs
xchg
push
hlt
gs
xor
add
push
mov
fbld
add
cmp
arpl
add
mov
add
jl
jge
clc
pop
arpl
add
jmp
inc
clc
dec
stc
inc
add
shrl
call
add
popl
clc
xchg
loope
xor
add
add
push
add
add
clc
lcall
clc
sar
fldenv
clc
int3
push
xchg
jbe
inc
add
aaa
mov
clc
jecxz
leave
xchg
lcall
adc
add
daa
clc
inc
clc
test
mov
add
xor
add
inc
clc
mov
mov
addr16
mov
clc
lahf
pop
cld
pop
clc
inc
add
loopne
pop
jnp
adc
clc
clc
cli
mov
add
es
aas
jno
add
and
add
clc
aas
inc
clc
xchg
cmp
cli
jne
clc
fld
clc
lods
mov
scas
testl
cmp
dec
lret
lods
and
add
clc
stos
fnstsw
or
iret
test
add
adc
add
clc
pusha
add
pop
xchg
sbb
add
clc
push
fimull
js
push
add
xchg
daa
clc
xlat
dec
jno
add
sahf
inc
add
iret
pop
clc
xchg
rcl
xchg
lahf
inc
clc
pop
clc
popa
add
stc
insl
mov
mov
clc
insl
xor
add
inc
add
xor
add
clc
arpl
add
add
insl
insl
fs
fnstenv
add
fcomi
xor
add
add
mov
add
mov
popf
cmp
clc
add
add
and
add
cld
jnp
clc
dec
sbb
add
mov
mov
clc
sbb
cmpsb
clc
lea
movsl
clc
xor
add
test
popf
in
sub
add
lock
add
add
ds
mov
movsl
clc
ja
sarl
clc
das
cmp
xlat
movsl
clc
inc
add
inc
clc
ljmp
sti
pop
fsubl
add
push
faddl
push
sub
jae
add
jb
add
adc
add
add
nop
adc
add
mov
mov
xchg
push
add
mov
and
and
push
int3
icebp
mov
add
add
ret
clc
insl
out
test
mov
clc
inc
clc
popf
mov
rorb
ja
rcrb
push
add
pop
mov
clc
hlt
jbe
clc
js
clc
xchg
in
lret
add
clc
mov
add
mov
pop
jg
add
cmpsb
clc
xchg
push
clc
xlat
cmp
pushf
xchg
inc
clc
das
arpl
add
mov
insl
xchg
inc
add
cltd
and
add
add
cld
data16
push
add
std
inc
clc
sar
add
xchg
cs
cmp
dec
stos
mov
add
mov
add
push
mov
clc
mov
add
mov
add
and
mov
lcall
std
fidivrs
fucomp
bnd
add
pop
and
xabort
xor
add
clc
data16
mov
ficompl
jo
add
cwtl
fmul
js
add
mov
das
lret
xchg
add
add
pop
lret
mov
or
jb
add
add
mov
push
inc
add
decl
jns
add
repz
cmpsb
clc
pop
int
add
jo
add
add
add
cmp
dec
fists
add
cwtl
jmp
data16
sar
aas
outsl
or
es
outsb
lret
add
jo
add
mov
clc
cmp
cmp
clc
mov
add
clc
pop
sub
adc
add
fs
and
clc
outsb
inc
clc
and
add
fidivrs
xlat
repnz
add
lods
into
mov
add
insb
xchg
sbb
loopne
rolb
add
add
add
dec
sbb
xchg
cmp
int3
lahf
fisttpll
clc
popf
idiv
mov
cwtl
pop
or
clc
xabort
cs
lret
fcomp
inc
clc
push
push
add
mov
cmp
lock
sti
cmp
test
mov
clc
ret
clc
cmpsb
clc
jge
loop
inc
clc
aaa
jns
add
xor
clc
add
add
sbb
clc
scas
jle
bound
add
call
add
add
mov
add
popf
cld
popa
add
vrsqrtps
add
gs
adc
add
ror
add
add
sbb
test
outsl
push
add
rcrl
lret
clc
sub
in
clc
or
adc
add
or
sub
clc
xchg
cmp
pop
gs
scas
ffree
clc
mov
mov
jne
clc
int
decb
add
aad
clc
jae
add
add
xchg
inc
add
mov
add
js
popa
add
popf
pop
loope
xor
add
clc
xor
add
movsl
clc
movsb
clc
dec
lods
iret
xor
add
add
xor
clc
sub
clc
iret
cmpsl
clc
add
add
pusha
add
add
add
cmp
add
cmp
clc
mov
clc
adc
loop
cmp
clc
dec
and
add
cmp
in
jbe
or
add
push
and
add
xchg
or
add
fisubs
add
clc
insl
test
out
stos
out
sahf
dec
stos
mov
push
add
dec
cmp
clc
imul
sbb
add
cmc
pop
insl
jae
add
push
pop
clc
jo
add
lret
lods
test
incb
cmp
add
xor
clc
push
add
sub
clc
bound
add
outsl
cmp
loopne
add
add
add
add
cmp
add
repz
popf
add
add
dec
fs
adc
add
sahf
fwait
pop
je
iret
out
xor
add
mov
fwait
pusha
add
mov
hlt
fisubrs
cmp
clc
out
lods
mov
xor
add
add
cmp
ja
clc
stc
cmp
clc
jle
aam
add
add
into
ds
xor
add
xor
add
clc
in
push
push
jmp
scas
in
stos
jnp
clc
loopne
dec
or
add
push
add
pop
push
js
fidivrl
push
stc
cmp
add
je
push
mov
pop
lret
pop
int3
daa
clc
int
fwait
das
out
arpl
add
sahf
fstps
jge
add
cmp
cmp
call
call
add
sar
add
dec
loop
sarb
stc
sub
clc
or
cmp
clc
sar
stos
and
xchg
ds
clc
sub
add
push
pushf
push
add
xor
add
add
pop
lock
add
add
popf
int
jecxz
iret
movsb
clc
sbb
mov
mov
cli
int
push
add
add
add
clc
sarb
pmaxsw
clc
xchg
js
add
sub
mov
addr16
or
add
add
ss
xor
mov
clc
dec
add
clc
enter
inc
add
push
xchg
cmpsl
clc
xchg
fists
js
push
inc
clc
or
xchg
cmp
xlat
imul
cmp
int3
mov
stos
pop
adc
ret
clc
add
pop
clc
fdivp
add
out
inc
clc
or
jae
add
scas
sub
cmp
sbb
xor
add
fsubrs
clc
bound
add
loop
sbb
add
in
mov
add
xbegin
icebp
clc
xchg
cmp
push
or
jns
or
cmp
pop
xchg
xabort
jbe
or
mov
add
cld
jno
add
ljmp
sti
sarl
repz
cmp
fs
and
add
add
pop
sub
add
std
leave
jl
xlat
in
jl,pt
push
clc
push
dec
mov
nop
jg
jg
jno
add
add
cmp
push
clc
rcll
sub
sbb
add
dec
inc
add
mov
mov
gs
aaa
out
jp
inc
add
divl
mov
out
aad
jg
mov
out
mov
gs
jae
add
jmp
sti
pop
mov
lock
add
jnp
add
mov
jns
fmull
mov
lret
out
mov
clc
mov
clc
push
cmc
js
clc
jmp
lret
popa
add
jns
test
cmp
clc
sar
mov
sar
xbegin
enter
cltd
cmpsb
clc
enter
clc
shr
sar
push
add
mov
clc
fimuls
sbb
popf
rcrl
pop
pushl
add
jl
clc
fs
inc
add
dec
and
add
add
add
mov
add
loopne
xchg
xchg
faddp
clc
stos
sub
add
imul
add
clc
mov
fabs
clc
adc
add
pop
outsl
addr16
pop
cmp
mov
add
lret
dec
sar
js
inc
clc
aam
push
fidivrs
add
dec
call
clc
push
gs
pop
stos
adc
add
scas
xchg
cltd
ds
lods
sar
inc
clc
xbegin
jbe
push
add
ds
das
shlb
add
shll
ret
clc
loop
inc
clc
ja
fiaddl
inc
add
dec
add
inc
add
add
inc
add
xbegin
jae
add
cmpsl
clc
push
jmp
add
iret
test
add
or
jb
add
push
aas
fwait
test
jmp
mov
push
add
mov
mov
clc
inc
add
cmp
and
movsl
clc
cmovno
add
add
out
mov
stos
cmp
add
add
clc
out
lcall
mov
add
dec
inc
add
mov
add
fdivrl
clc
adc
add
fucomi
fmulp
and
add
out
xor
add
inc
add
test
sub
clc
push
ja
fdivrl
dec
je
add
push
mov
clc
push
add
scas
call
jge
out
cmp
add
and
add
js
or
clc
popf
ficoml
add
sbb
push
clc
icebp
and
add
clc
mov
add
add
mov
in
cmp
and
or
clc
xchg
inc
clc
pandn
dec
in
pop
xor
add
dec
jbe
clc
mov
iret
sar
cmp
mov
testl
dec
jge
jge
add
xchg
roll
sar
xchg
pop
clc
cltd
or
clc
scas
fisubrs
jno
add
daa
clc
jmp
imulb
iret
jbe
test
inc
add
ljmp
add
pop
jmp
inc
clc
scas
jl
lahf
pusha
add
mov
add
pushf
in
jns
rolb
clc
jp
clc
mov
imul
add
cmp
add
lret
clc
sub
add
je
aad
mov
add
clc
xchg
lret
mov
pop
and
add
add
ds
sub
je
lea
aas
inc
add
cmp
rcl
jo
add
popf
mov
clc
xchg
dec
push
cmpsl
clc
out
jbe
clc
mov
xchg
es
push
inc
clc
hlt
sarl
lods
loopne
jo
add
mov
sar
add
add
add
add
push
clc
xchg
clc
pop
inc
add
dec
xchg
mov
or
xor
cmp
cmp
add
fdiv
xchg
xchg
xlat
imul
clc
shr
nop
cmpsl
clc
pusha
add
sbb
add
movsb
clc
mov
sub
add
mov
clc
push
add
and
add
mov
add
add
add
daa
clc
notl
adc
add
mov
clc
rcll
add
jge
add
imul
add
mov
clc
mov
clc
in
or
aam
xor
add
imul
mov
xor
add
cmc
and
add
clc
jl
or
inc
add
js
add
sub
sub
jb
add
leave
popa
add
mov
popa
add
mov
push
add
add
add
xor
add
imul
add
clc
arpl
add
clc
xchg
mov
clc
lahf
nop
xchg
das
loopne
clc
rorl
clc
in
cs
sub
add
shll
add
aas
sub
clc
int3
xchg
jno
add
hlt
iret
into
or
add
add
xchg
cmp
add
sbb
cmp
add
add
and
jnp
xor
es
clc
decl
enter
jg
add
cmp
adc
add
add
loop
loopne
or
int3
fldenv
sbb
xor
add
jbe
aaa
iret
push
add
cmp
add
pop
clc
pop
iret
xor
add
loope
sahf
push
fistpl
and
add
std
sti
push
or
add
ret
and
add
xchg
jns
clc
unpcklps
clc
mov
add
inc
add
sbb
sar
test
mov
das
aaa
mov
add
mov
clc
xchg
cmp
or
cwtl
test
dec
ljmp
jne
clc
fsubrs
clc
cwtl
mov
mov
mov
lods
or
lods
xbegin
or
add
inc
add
int
pop
inc
add
mov
add
pavgb
xor
add
clc
push
sahf
cmpsl
clc
or
clc
je
add
ss
shlb
repz
clc
bound
add
adc
clc
iret
lock
and
add
add
clc
cmp
nop
adc
clc
sbb
int
add
sub
ret
clc
notl
cmpsb
clc
es
adc
add
add
clc
daa
clc
sbb
sahf
cmp
adc
add
and
add
clc
sahf
fistl
sub
sbb
rdseed
fsubr
sbb
add
sbb
loopne
int3
sub
loop
jae
add
mov
bound
add
sub
mov
lret
mov
mov
add
cmc
int3
ret
test
clc
push
clc
loope
jmp
clc
inc
add
gs
push
add
cmp
inc
add
adc
add
popa
add
aad
test
push
add
xor
add
sub
clc
xor
add
jae
add
movsl
clc
dec
push
add
sbb
or
cmp
or
push
push
mov
out
pop
mov
cmc
dec
inc
clc
int3
popf
in
mov
clc
dec
adc
add
push
ds
xor
add
add
jg
add
daa
clc
fwait
mov
clc
clc
sbb
xabort
loopne
adc
add
clc
mov
pop
clc
fildll
add
add
clc
pop
mov
pusha
add
in
jae
add
push
add
adc
add
pushf
aas
dec
add
add
cli
dec
hlt
xchg
test
xchg
cmp
gs
or
sbb
pop
in
jmp
cmpsb
clc
mov
add
repnz
add
ja
clc
data16
push
es
mov
loope
sub
add
test
das
jge
clc
lods
arpl
add
or
mov
xor
inc
add
mov
mov
mov
rcrb
and
add
jae
add
add
add
fbld
clc
imul
xchg
mov
cld
pop
sbb
clc
pop
clc
hlt
push
clc
push
add
adc
clc
mov
jge
clc
ds
xor
push
icebp
das
and
add
add
clc
sub
mov
xchg
outsb
pushl
add
add
sub
mov
clc
rclb
xchg
mov
cmp
jno
add
addr16
jle
ja
inc
clc
mov
xor
add
je
int
adc
pinsrw
clc
dec
inc
add
cltd
cmp
test
pop
insl
in
lahf
push
icebp
pop
mov
mov
mull
add
push
add
push
push
add
movsl
clc
out
js
clc
popl
mov
jge
clc
add
add
jl
je
pop
pushf
inc
clc
pop
std
leave
negl
add
add
mov
cli
in
adc
add
scas
mov
push
add
movsl
clc
sbb
addr16
jmp
add
sbb
add
call
add
jl
push
negl
mov
clc
pop
fstpt
push
xor
rcrl
add
sub
add
cmp
add
shrl
pusha
add
and
add
clc
jno
add
clc
and
clc
ficoms
add
add
fnstcw
xabort
sub
pop
out
stc
sbb
out
mov
clc
ja
mul
clc
hlt
jae
add
das
sahf
and
clc
cld
xchg
ret
clc
into
mov
xor
add
push
or
mov
sub
fists
mov
clc
movsl
clc
mov
clc
and
add
add
push
add
inc
add
pop
xor
clc
mov
sub
test
mov
add
add
sahf
lods
out
outsl
pop
das
jmp
bound
add
or
sub
xchg
jp
adc
pop
mov
add
fldenv
sarb
je
push
xchg
and
int3
cmp
clc
xchg
flds
clc
data16
mov
fistpll
std
sub
loop
data16
out
xchg
int
dec
mov
add
add
add
jbe
add
aad
push
dec
and
add
add
test
add
lods
cmpsl
clc
jbe
dec
sbb
add
cmp
jl
in
push
xlat
mov
add
inc
add
mov
push
add
push
adc
add
and
mov
pop
mov
pop
mov
je
cmp
cmp
rolb
add
add
xchg
daa
clc
shll
add
and
add
xchg
lret
inc
add
mov
clc
jl
mov
clc
xor
mov
pop
lods
dec
mov
add
add
add
jae
add
dec
and
mov
clc
pop
sub
add
jle
out
lcall
clc
data16
aas
cmpsb
clc
push
add
ja
lahf
cld
adc
add
add
cmc
and
jo
add
push
arpl
add
paddq
pop
aad
sbb
inc
clc
sbb
clc
out
cmp
cmp
clc
cltd
out
or
xchg
scas
cld
gs
mov
push
add
test
fists
clc
shrb
mov
clc
adc
add
add
xchg
pop
bound
add
cmp
inc
clc
icebp
fistpl
pop
and
sbb
clc
cmp
clc
fucom
clc
loop
pop
jae
add
clc
cli
cmpsb
clc
push
iret
xor
sarb
mov
clc
xchg
inc
clc
hlt
aas
sub
data16
nop
xchg
or
mov
mov
jl
mov
call
push
je
popf
mov
add
cmp
add
gs
jo
add
clc
cmp
adc
add
decb
jns
clc
in
inc
add
cmp
xchg
rclb
mov
mov
and
cmp
aad
clc
cmp
mov
clc
mov
xchg
mov
clc
or
or
daa
clc
sbb
mov
add
mov
lcall
sbb
xchg
fwait
lret
xchg
call
mov
flds
add
sbb
inc
add
or
in
or
add
sar
jecxz
ja,pt
add
mov
clc
cmc
push
popa
add
xchg
into
fmull
xchg
jl
pop
arpl
add
int3
fists
add
sub
cwtl
pop
std
push
add
push
add
xabort
and
add
xchg
xbegin
js
or
adc
add
clc
push
add
cmp
mov
adc
aad
jge
add
aas
aad
je
clc
test
sti
mov
clc
lahf
sbb
clc
and
add
clc
int3
cld
sbb
clc
data16
jb
add
js
fidivrl
scas
clc
bswap
shll
bound
add
clc
mov
bound
add
push
stos
mov
add
xor
add
add
add
call
push
clc
mov
and
add
add
pop
dec
daa
clc
imul
jmp
add
add
add
fistl
shlb
add
add
sub
add
push
and
add
popf
fs
pop
jbe
mov
jns
clc
and
add
gs
ljmp
xchg
std
ja
fdiv
cwtl
sub
add
add
xlat
mov
push
add
mov
sub
clc
incb
xchg
enter
add
push
int3
stc
push
xchg
adc
add
in
sbb
add
add
push
add
out
or
jo
add
lock
ss
mov
mov
clc
mov
jg
clc
jno
add
sbb
iret
iret
and
in
or
movsb
clc
test
lock
iret
lods
or
and
add
cmp
add
cmc
pushl
cmc
xor
add
rcll
out
repnz
sub
add
mov
add
add
add
adc
add
add
add
movsl
clc
out
adc
clc
adc
add
clc
stc
insl
ja
xchg
int
dec
inc
clc
iret
daa
clc
call
add
clc
or
sub
arpl
add
add
cmp
inc
add
push
add
push
dec
jl
inc
clc
enter
out
mov
data16
mov
imul
ds
and
add
pop
clc
jmp
cmp
add
add
add
add
daa
clc
pop
shl
mov
cltd
cwtl
mov
and
mov
xchg
scas
mov
not
push
cmp
add
pop
xchg
mov
pop
cmp
clc
fs
mov
mov
clc
mov
cmc
and
clc
mov
add
sbb
add
repnz
jl
mov
add
add
rorl
jns
clc
xlat
repz
jle
sub
lret
pop
out
push
xor
add
push
inc
add
inc
add
sbb
clc
lods
adc
fs
mov
jo
add
add
hlt
cld
loop
cmp
xchg
mov
sub
mov
clc
jp
frstor
add
lods
add
testl
mov
jbe
mov
pop
sbb
clc
sub
fnstsw
sub
clc
inc
add
jo
add
add
jno
add
add
enter
add
test
mov
dec
or
xchg
pop
or
clc
mov
add
add
in
lret
arpl
add
mov
lcall
inc
add
fstps
fistps
cmpsb
clc
pop
imull
add
mov
clc
mov
dec
js
mov
pusha
add
lods
in
sbb
add
lods
bound
add
clc
in
xchg
dec
xor
add
clc
add
test
push
add
or
push
jne
clc
in
jmp
and
add
add
or
data16
or
xabort
mov
xchg
adc
scas
mov
outsb
pop
out
cmp
das
push
add
popa
add
mov
xor
xchg
cmp
add
aam
mov
add
or
loop
mov
insl
out
xchg
add
mov
in
ret
call
ja
js
jg
leave
enter
jl
pop
repnz
or
dec
ret
xchg
hlt
insl
das
and
add
roll
inc
add
inc
add
fldenv
int
clc
cmp
and
mov
cli
inc
add
mov
lret
push
clc
jno
add
add
ljmp
dec
loop
xor
add
ljmp
xbegin
cmp
sbb
sar
add
mov
sti
mov
jb
add
mov
clc
out
push
add
std
push
or
add
test
dec
or
scas
dec
push
add
std
lahf
jae
add
scas
xchg
xor
add
adc
fstp
inc
add
jp
clc
sub
add
ljmp
pushf
data16
lods
cmp
xor
add
add
inc
add
mov
add
je
lahf
mov
jge
mov
add
iret
aas
cmp
clc
mov
test
cmpsb
clc
cld
jo
add
add
pop
jle
adc
add
fdivrl
addr16
inc
add
push
cli
ss
mov
dec
and
add
clc
sub
add
imul
clc
mov
int3
scas
push
ds
icebp
xchg
mov
dec
sbb
add
shll
inc
add
adc
add
lahf
xabort
data16
in
push
add
jl
clc
fwait
xabort
fildl
xor
cmp
mov
clc
xor
add
clc
jnp
rcrb
clc
and
dec
je
outsl
inc
add
cmp
roll
ret
clc
sti
scas
xchg
add
add
adc
add
clc
std
adc
add
fdiv
sub
mov
jns
pop
mov
decb
test
add
jg
movsl
clc
cmp
mov
clc
insl
mov
add
gs
and
add
mov
clc
stos
test
sar
clc
dec
icebp
popa
add
or
push
or
add
das
sar
in
cwtl
clc
xchg
cmpsb
clc
xor
add
add
and
sub
adc
add
add
lret
cmp
clc
cmp
clc
fwait
pop
cmp
add
add
or
jmp
clc
es
lret
and
aad
xor
mov
cmp
ss
sbb
mov
cmp
pop
sbb
clc
pushf
sub
clc
add
add
icebp
ficoml
movsl
clc
out
pop
mov
clc
rolb
adc
add
mov
xor
add
add
pop
xchg
inc
clc
add
in
stc
jae
add
ja
xchg
sbb
add
pop
cmp
add
adc
add
ljmp
add
add
mov
mov
dec
xchg
sub
jb
add
clc
mov
clc
out
inc
clc
sbb
add
imul
jmp
cmp
stos
inc
clc
test
popa
add
fstl
add
outsl
outsb
mov
lods
add
add
add
add
cmpsl
clc
mov
add
add
pop
xchg
hlt
push
lret
add
cwtl
or
mov
clc
xchg
mov
dec
in
gs
mov
add
inc
clc
mov
clc
dec
inc
clc
ret
clc
clc
cmp
loope
sub
push
mov
cmp
adc
jno
add
pop
scas
cmp
mov
pop
dec
fcoml
xchg
push
add
push
shl
clc
xchg
mov
inc
clc
xchg
je
sub
add
lea
mov
fists
add
rcll
add
out
fdivrs
clc
adc
add
lret
shl
fildll
mov
aad
push
add
clc
gs
inc
clc
mov
lods
sub
clc
mov
dec
stc
loope
jno
add
sbb
clc
adc
add
rolb
cli
xor
add
add
and
add
add
fs
repz
pop
mov
or
or
clc
sti
cmp
rcr
xor
add
inc
add
sub
insb
mov
or
add
jp
push
out
fwait
xchg
imul
aaa
mov
test
mov
xchg
xchg
dec
call
inc
clc
pop
in
call
clc
test
test
data16
add
add
arpl
add
add
xchg
jecxz
aaa
push
mov
pop
cmp
jae
add
sar
enter
inc
clc
mov
push
xor
add
clc
lods
shrb
inc
add
mov
aaa
xchg
push
je
scas
cmp
cmc
cmp
js
add
inc
add
mov
clc
xchg
imul
insl
cmp
clc
leave
nop
aas
shl
xor
clc
mov
pop
inc
add
hlt
xabort
add
loop
cmc
outsb
xchg
inc
add
ss
xchg
lods
arpl
add
mov
and
add
clc
mov
rcl
sub
cmp
add
jnp
xabort
outsl
sbb
xor
add
add
ds
add
mov
clc
test
stos
loop
xchg
sbb
clc
cmp
or
adc
clc
jl
clc
aad
call
add
mov
push
add
mov
sbb
push
add
and
add
pop
ss
dec
sahf
in
xchg
sbb
inc
add
fcompl
and
add
inc
clc
push
clc
loope
jmp
clc
fcomps
mov
add
add
lret
mov
cmp
mov
sub
mov
pop
jne
dec
mov
sti
mov
cmp
xchg
cltd
jp
add
jns
aas
xchg
mov
clc
or
cmp
add
jmp
sub
add
outsb
jl
add
pop
and
add
clc
cmpsl
clc
mov
sub
clc
das
mov
push
add
pusha
add
je
clc
clc
cltd
push
test
xor
sbb
jno
add
aaa
test
cmp
mov
add
add
gs
icebp
inc
clc
cmp
ja
clc
cltd
mov
mov
adc
add
leave
xor
add
adc
add
cltd
cmp
push
add
or
ss
xor
add
xchg
adc
add
ds
clc
inc
clc
xchg
popf
mov
cmp
add
sti
fs
adc
add
push
dec
je
add
cli
dec
or
pop
cli
ljmp
clc
addr16
sub
jne
outsl
ss
add
xabort
js
mov
mov
cmp
outsl
loopne
aad
push
fcmovnu
jae
add
test
clc
setnp
enter
add
lock
add
xor
add
mov
es
pop
or
add
sub
add
mov
xchg
daa
clc
push
mov
push
in
sar
int
ret
clc
fstpl
clc
jae
add
xchg
xchg
sbb
cmpsl
clc
xor
add
clc
mov
insl
fidivrs
xor
add
lea
xor
add
cmp
imul
icebp
add
add
jp
and
in
ljmp
xabort
dec
stos
cs
ror
loopne
or
out
mov
js
pop
clc
adc
test
inc
clc
xchg
adc
add
int
add
push
mov
push
clc
mov
pusha
add
into
adc
and
add
out
push
add
xor
add
pop
clc
mov
clc
sbb
add
rcrb
pop
aaa
mov
clc
adc
add
add
add
adc
add
mov
movsl
clc
xchg
popf
jae
add
fwait
test
notl
add
mov
add
fcoml
aad
jo
add
add
add
clc
sahf
scas
pop
mov
push
add
fidivrs
addr16
lcall
jae
add
xchg
cmp
push
ljmp
dec
inc
clc
mov
ret
clc
loop
mov
lea
clc
push
je
and
cmp
cmp
fcoml
add
call
jp
test
xor
add
jne
cmp
add
add
add
adc
add
cmp
xabort
clc
pop
or
add
add
or
rcrb
add
add
leave
cmp
add
rclb
add
cwtl
sti
sti
dec
gs
gs
push
xbegin
mov
out
add
inc
add
or
test
test
clc
movsl
clc
gs
jo
add
clc
cs
int
or
mov
iret
jb
add
loope
vmwrite
add
mov
sbb
jg
clc
fiadds
clc
pusha
add
mov
movsl
clc
xchg
adc
add
cmpsb
clc
movsb
clc
push
in
inc
clc
es
fisubs
add
fs
xchg
rol
clc
frstor
mov
add
adc
clc
cmp
push
clc
clc
outsb
dec
jle
add
in
nop
mov
jmp
adc
clc
test
clc
clc
pop
ja
mov
clc
dec
into
outsl
pusha
add
jo
std
jno
add
inc
clc
inc
clc
sbb
fwait
mov
inc
clc
aam
jg
push
add
mov
add
jge
add
add
daa
clc
fldt
and
add
cmp
clc
aas
push
add
lret
jb
add
add
mov
clc
je
sbb
imul
or
clc
mov
add
mov
bound
add
add
movsl
clc
mov
in
push
xor
sbb
add
das
cwtl
jo
add
clc
or
clc
sbb
fdivrs
test
inc
add
or
std
sub
clc
rcll
add
clc
xchg
inc
add
test
add
push
add
adc
add
dec
out
int
clc
push
pop
cld
inc
add
and
add
inc
clc
inc
add
pusha
add
mov
add
fstpl
adc
add
clc
pusha
add
mov
jb
add
sbb
clc
gs
fcmovnu
js
clc
lods
dec
fisubrl
push
clc
dec
mov
mov
mov
clc
inc
clc
sub
clc
add
add
sbb
add
mov
outsl
clc
fwait
lea
add
and
clc
sar
daa
clc
or
fcoml
mov
cmp
clc
mov
push
clc
sti
in
and
add
int3
pop
cmpsb
clc
mov
dec
loopne
jnp
clc
vmovaps
clc
mov
add
xor
add
add
push
add
cmpsl
clc
clc
ds
clc
nop
jge
cwtl
aad
aaa
xor
xbegin
add
add
shll
add
jno
add
lahf
fcompl
add
add
ret
clc
push
outsb
in
aaa
cwtl
dec
fistps
jno
add
clc
je
inc
add
gs
mov
cltd
mov
adc
add
xchg
cltd
movsb
clc
aad
clc
outsl
fcoms
add
mov
mov
add
clc
or
fcoml
clc
adc
add
inc
add
rolb
add
fstpl
lea
clc
inc
add
loopne
ror
into
push
dec
popa
add
xor
add
add
inc
clc
int3
add
mov
push
fldt
enter
add
add
jae
add
inc
add
cmpsl
clc
xrelease
sub
add
in
mov
lcall
add
clc
cmp
clc
fists
add
xchg
ds
sbb
add
jmp
add
mov
lcall
clc
ds
dec
jle
add
pop
add
add
sub
daa
clc
sarl
mov
aam
jbe
ja
add
lods
aaa
sub
add
loope
jno
add
xchg
sbb
clc
xor
mov
rclb
add
je
sbb
mov
js
xchg
push
add
mov
jae
add
or
add
mov
mov
jmp
sbb
add
add
cmp
bound
add
add
xchg
imul
sar
call
add
mov
clc
lea
out
addr16
pop
cmp
add
mov
test
add
add
scas
pop
and
add
clc
shr
cmp
add
mov
xabort
mov
jg
pop
pop
push
add
fimull
cmc
movsb
clc
scas
test
push
add
out
arpl
add
add
inc
add
bound
add
add
daa
clc
xchg
sub
cmp
dec
fisubl
add
clc
rcl
gs
iret
subps
insl
xabort
rclb
sar
add
dec
cmp
clc
dec
mov
fs
scas
jne
in
xchg
ds
lahf
xor
add
cwtl
repnz
aas
loope
sbb
gs
adc
add
lahf
xor
add
add
cmc
pop
aaa
std
lret
dec
or
add
mov
arpl
add
push
clc
clc
pop
into
fwait
xchg
push
xchg
push
test
add
adc
add
clc
rcl
pop
addr16
sar
clc
sub
add
add
pop
push
clc
mov
imul
pop
dec
movsb
clc
lods
in
push
push
add
out
mov
add
jae
add
add
inc
clc
push
repz
and
add
stos
jmp
notl
add
clc
test
clc
xor
add
aas
or
nop
sar
clc
sahf
sti
cmp
add
clc
sub
push
stc
test
scas
mov
add
cmp
mov
notb
clc
xchg
lsl
add
ja
add
add
icebp
or
xchg
pop
add
mov
es
addr16
and
add
and
add
rcrb
mov
ljmp
clc
cmp
add
xor
add
add
in
and
add
lods
xchg
fists
cld
push
fmull
lea
daa
clc
mov
adc
add
movsl
clc
mov
cmp
sbb
clc
dec
arpl
add
fistpl
and
add
jl
clc
leave
pop
fdivrs
dec
cmp
clc
add
add
fldl
add
pop
fisttpll
pop
xchg
xor
mov
cmp
add
add
mov
gs
enter
fdivl
sysenter
lahf
imul
inc
add
and
add
cmp
in
push
add
sub
fwait
sti
mov
mov
clc
fwait
cmpsb
clc
mov
repz
clc
mov
roll
add
out
xor
add
adc
add
mov
fisubs
add
pop
mov
clc
mov
clc
repnz
cltd
dec
aaa
mov
inc
clc
mov
jne
clc
movsl
clc
hlt
and
mov
push
add
inc
add
ret
clc
test
and
add
addr16
movsb
clc
inc
clc
mov
stos
xor
add
clc
jp
add
sar
mov
testb
sub
add
adc
lret
add
out
movsb
clc
loopne
bound
add
je
clc
data16
aad
add
dec
dec
cmp
pop
clc
sbb
das
call
jno
add
add
sbb
jbe
mov
clc
and
add
jb
add
popa
add
enter
add
mov
arpl
add
pusha
add
mov
pop
in
xor
arpl
add
xor
add
aad
sar
xchg
int3
mov
and
clc
mul
clc
and
add
clc
mov
cmp
push
add
push
mov
add
add
add
dec
fcoml
add
lods
pop
scas
push
push
jbe
xlat
stc
scas
mov
in
push
cmc
lcall
push
cmp
clc
enter
mov
es
xbegin
add
add
sub
pop
clc
and
add
sbb
add
std
cwtl
dec
testb
in
stc
cmp
jecxz
cmp
ds
and
add
add
sub
out
test
add
jnp
mov
add
daa
clc
dec
push
xlat
lret
cmc
and
add
dec
fucomp
dec
mov
cld
cmpsb
clc
xchg
mov
add
lods
sub
mov
xor
add
and
add
add
insl
hlt
jbe
test
and
pop
jge
ss
leave
mov
mov
mov
cmp
mov
push
clc
mov
clc
sub
clc
ljmp
ds
clc
lcall
popa
add
inc
clc
sar
xchg
xchg
clc
xor
fs
sar
movsl
clc
mov
lock
icebp
add
adc
add
mov
add
xor
add
add
cld
fst
jnp
add
loop
sbb
cmp
test
adc
add
clc
stc
sbb
add
dec
rcrl
lods
imulb
scas
jae
add
clc
and
add
xlat
rcll
outsb
mov
dec
mov
clc
or
sub
add
jb
add
iret
jl
inc
clc
das
sar
sar
or
pop
pop
cmp
mov
lcall
stos
shr
fstpl
imul
add
lcall
pop
aad
xchg
pop
jecxz
adc
add
outsb
lock
xchg
test
dec
mov
movsb
clc
add
jge
gs
push
jo
add
clc
outsb
lahf
cwtl
test
xor
add
mov
clc
xchg
insb
daa
clc
fucom
clc
push
clc
push
clc
repnz
sahf
je
xor
add
aam
add
add
add
out
jge
test
sub
jb
add
xchg
xchg
mov
clc
xchg
out
in
insl
lret
and
add
int3
pop
ja
leave
addr16
inc
clc
add
add
scas
out
inc
clc
mov
bound
add
mov
jno
add
out
insb
add
add
add
sub
add
int
clc
addr16
xchg
ret
clc
repnz
add
std
cmp
clc
sahf
xchg
and
push
out
xchg
gs
cmp
mov
jae
add
xchg
popf
insl
inc
add
jecxz,pt
jbe
rcrl
into
sub
add
clc
mov
and
add
cmpsl
clc
stos
xor
fwait
lcall
clc
jne
clc
mov
sar
loop
hlt
hlt
or
loope
lock
cmpsl
clc
iret
xchg
loop
mov
rolb
xor
jns
mov
sub
clc
dec
jecxz
push
add
adc
add
cmpsl
clc
fisubrl
add
std
lahf
mov
clc
mov
imul
add
aaa
cld
mov
clc
push
aas
mov
cmp
cwtl
adc
add
mov
pop
adc
add
mull
add
dec
xor
add
clc
mov
mov
xchg
cld
rol
clc
sub
or
mov
clc
stos
xabort
clc
rorb
dec
ja
jle
add
mov
stos
ja
inc
add
mov
clc
push
xabort
mov
iret
jae
add
addr16
dec
mov
clc
int3
xchg
or
insb
add
add
clc
cmp
in
jb
add
mov
clc
mov
add
pusha
add
pop
jge
fwait
aam
add
xor
add
clc
pop
adc
add
inc
clc
data16
jecxz
xchg
sbb
fldt
xchg
sub
mov
jns
push
mov
or
and
sub
cltd
pop
cmp
clc
xchg
mov
clc
hlt
push
data16
bound
add
mov
jno
add
shlb
sar
testl
push
add
sbb
clc
mov
add
clc
outsl
sbb
sub
shl
clc
jo
add
lcall
or
push
mov
lahf
cmc
ficompl
push
add
push
add
fwait
iret
sub
push
add
mov
add
sub
add
bnd
clc
clc
and
add
add
cmp
mov
xor
add
mov
add
mov
adc
add
mov
add
outsb
lock
clc
sub
test
add
bound
add
push
pop
and
add
add
add
adc
add
stc
in
add
add
add
adc
add
add
inc
add
cmpsb
clc
jnp
jbe
xchg
divl
add
add
mov
clc
mov
inc
clc
dec
dec
add
add
dec
mov
lret
int
fldcw
jae
add
mov
push
add
mov
dec
sub
mulb
inc
add
adc
add
xlat
into
sbb
loope
rorl
test
insl
test
mov
add
pop
mov
scas
int
lret
or
add
mov
add
aam
clc
mov
lods
gs
or
gs
fmul
insb
mov
scas
dec
push
xchg
outsl
pop
movsb
clc
daa
clc
and
add
outsl
daa
clc
push
add
xabort
clc
and
add
add
mov
clc
push
sub
add
cmp
jbe
inc
clc
shll
add
clc
rorl
fs
jmp
and
data16
ja
add
mov
add
stos
cli
fiadds
add
nop
inc
add
mov
or
add
movsl
clc
push
call
mov
icebp
mov
insb
add
addr16
lret
fcomip
xor
fucomp
in
in
jmp
mov
add
rcl
outsl
je
add
lret
sbb
bound
add
clc
mov
adc
add
fwait
inc
add
xchg
pop
sub
xchg
stos
incb
ret
clc
dec
iret
mov
sub
add
mov
add
ret
push
not
ss
out
ljmp
add
add
cmp
lcall
movsl
clc
out
push
add
fcomi
in
xchg
inc
add
out
cld
xchg
loope
ffree
clc
cmc
enter
pop
add
and
add
add
clc
leave
dec
test
pop
clc
in
mov
cmp
sarl
jnp
add
or
clc
cmp
add
cmp
clc
cmp
add
jae
add
call
add
push
add
loop
test
xchg
icebp
mov
inc
clc
in
test
push
add
lods
and
ljmp
mov
clc
xchg
leave
cmpsb
clc
push
inc
add
in
stos
out
daa
clc
dec
clc
jae
add
push
pop
lahf
clc
aaa
fnstsw
push
sub
insb
movsl
clc
stc
dec
popa
add
jae
add
add
add
xchg
adc
stc
dec
push
add
shlb
add
add
int
xor
add
pop
clc
ret
mov
jle
clc
pop
ss
das
mov
add
aam
inc
add
es
pusha
add
sub
bound
add
xor
add
push
clc
jno
add
add
clc
mov
pop
push
add
jge
in
mov
clc
pop
mov
clc
fcoml
mov
clc
and
imul
clc
xchg
sub
xor
clc
xabort
add
into
pushf
cmp
add
adc
add
js
cli
out
xchg
scas
vcmpps
clc
mov
add
push
pop
lahf
clc
xchg
fs
xor
jmp
faddl
clc
sub
xor
ret
clc
lods
imul
leave
sub
jl
mov
pop
dec
aaa
ja
jge
add
sti
aas
or
dec
pop
pop
push
test
je
cmp
clc
daa
clc
xbegin
xchg
loop
call
mov
jae
add
push
sahf
mov
clc
clc
push
add
ret
add
fs
bound
add
add
clc
popf
mov
clc
ficompl
clc
leave
daa
clc
sbb
add
in
pop
and
add
cmp
add
dec
call
push
dec
test
aaa
dec
jno
add
add
jge
add
add
add
jo
add
int3
add
and
add
clc
xor
add
leave
jge
mov
clc
cmp
add
jge
add
dec
lods
popf
inc
clc
jg
cmp
pop
inc
clc
mov
clc
js
sub
add
xchg
pop
pop
jae
add
cmp
push
insl
nop
and
add
outsb
mov
cwtl
clc
mov
clc
mov
loopne
xlat
test
lods
pop
movsb
clc
mov
push
jmp
and
adc
add
dec
inc
clc
dec
out
sbb
add
ret
ja
jno
add
out
testb
clc
es
adc
mov
es
sti
ds
fdivs
add
pop
sub
pop
adc
add
movsb
clc
aad
clc
inc
add
mov
clc
sti
mov
or
jg
clc
enter
lfs
xor
lret
stos
loopne
jns
ja
add
je
clc
cmp
clc
pop
cmp
inc
clc
ret
clc
out
jb
add
add
pop
xchg
clc
bound
add
add
push
mov
add
stc
cmp
adc
add
xabort
outsb
int
cmp
xor
add
aad
in
jmp
pop
cmp
clc
pop
outsl
cmpsb
clc
jg
and
add
push
cmp
add
jg
clc
hlt
lock
add
add
clc
mov
add
push
fcmovb
clc
addr16
test
clc
jne
clc
or
fbld
add
dec
dec
cmp
std
data16
icebp
or
mov
dec
dec
cmpsl
clc
jnp,pn
clc
lret
xchg
lret
ret
clc
cmp
add
add
and
cwtl
push
add
add
dec
rcrl
inc
add
inc
add
and
add
jle
clc
loop
push
and
push
jo
add
add
sub
lret
jae
add
add
pop
mov
cltd
adc
add
jnp
repz
enter
add
cmc
push
sti
mov
dec
divb
add
xchg
adc
add
clc
mov
clc
lods
negb
nop
imul
loop
and
add
mov
data16
test
cltd
in
data16
clc
cld
je
add
lea
xchg
pop
imul
clc
rolb
sub
add
mov
clc
push
add
inc
clc
cmp
mov
int
add
jno
add
add
mov
xchg
movsb
clc
lret
push
add
push
add
mov
sar
pop
jo
add
add
or
and
add
je
scas
int3
xchg
testl
clc
or
mov
sub
add
adc
loopne
gs
mov
add
mov
inc
add
jp
fistpl
ja
add
add
lcall
pop
test
lcall
leave
stc
out
xabort
sbb
clc
inc
add
or
clc
daa
clc
mov
and
xchg
ljmp
cli
shr
xchg
xor
add
xor
add
pop
push
arpl
add
add
mov
clc
enter
add
scas
jo
add
hlt
add
add
add
pushf
pop
outsl
push
push
xchg
clc
lods
dec
ja
jbe
xor
add
sti
mov
add
push
add
adc
add
clc
movsb
clc
push
mov
mov
mov
test
movsb
clc
pushl
add
add
faddl
add
jg
adc
add
clc
mov
clc
push
in
test
mov
clc
push
xchg
or
push
jg
loope
clc
call
dec
std
cmp
lods
je
and
cmp
popl
add
xor
add
adc
popf
scas
das
out
test
cmp
add
mov
or
clc
divb
add
inc
clc
mov
dec
push
clc
sbb
icebp
cmp
fists
mov
push
sub
push
or
js
clc
aas
inc
clc
xabort
mov
clc
cli
cltd
push
insb
xabort
xor
lcall
xlat
mov
and
xchg
fmulp
into
outsb
sar
add
into
out
push
clc
jno
add
pop
js
push
xchg
jno
add
add
pop
jo
add
pop
testb
pusha
add
mov
clc
mulb
nop
std
xchg
cmp
test
mov
clc
or
add
jo
add
shll
call
mov
clc
pop
jl
adc
mov
push
insb
loopne
pop
mov
hlt
dec
sub
push
data16
lret
in
mov
sar
es
pop
xchg
sahf
cltd
jle
cld
jl
mov
mov
fidivs
icebp
push
add
stc
inc
add
insb
mov
sarl
clc
xchg
cmp
adc
add
fnstcw
push
pushf
sbb
hlt
jb
add
and
add
push
lahf
es
mov
clc
gs
xor
add
cmp
and
pop
or
loop
loope
push
add
test
out
or
add
add
jg
pop
fimull
imul
clc
sti
in
mov
add
out
aaa
xchg
xbegin
inc
add
mov
pop
inc
clc
xchg
mov
loope
or
cld
movsb
clc
mov
pop
adc
add
lock
clc
out
aad
clc
lock
push
pusha
add
ret
aad
add
cmp
xor
add
xchg
sbb
hlt
repnz
scas
mov
add
or
add
clc
inc
add
push
mov
clc
sub
jmp
add
cld
add
add
clc
sbb
test
sbb
fcmovu
fnstenv
add
mov
scas
gs
into
gs
or
mov
mov
clc
mov
xchg
mov
in
repz
jb
add
pop
notl
mov
cmp
add
arpl
add
and
add
jbe
add
cs
pop
push
clc
leave
jle
add
mov
clc
arpl
add
clc
loop
pop
in
xchg
xabort
fsubp
clc
repz
clc
inc
add
cli
or
mov
jns
adc
clc
jne
in
dec
pushf
ds
add
iret
pop
and
add
add
lret
jne
dec
mov
xbegin
dec
mov
in
push
clc
push
in
pusha
add
push
clc
shrb
jno
add
xbegin
add
clc
fidivrs
repz
add
add
clc
je
clc
jns
add
jg
push
add
inc
add
enter
imul
add
add
lock
clc
mov
or
test
call
add
add
cmp
pop
sbb
clc
ss
out
adc
add
clc
and
xlat
clc
enter
clc
push
add
sbb
jnp
and
add
add
outsb
repz
jns
push
or
add
imul
clc
movsb
clc
sbb
clc
xchg
mov
add
jne
sub
jbe
adc
add
add
add
imul
clc
or
fistpl
jmp
cmp
dec
sti
outsb
call
fs
inc
add
mov
mov
mov
cmp
fdivrs
add
inc
clc
xchg
aas
xor
add
mov
inc
clc
push
add
jmp
xchg
std
dec
adc
clc
rolb
add
arpl
add
add
dec
jmp
or
clc
inc
add
xchg
mov
mov
add
pushf
adc
add
inc
add
sub
movsl
clc
repnz
sar
clc
int
add
int3
sub
mov
imul
or
add
add
clc
jnp
mov
or
or
inc
clc
fisubs
add
out
add
mov
es
mov
sti
es
jns
pop
inc
add
jae
add
push
clc
cmp
cmp
test
add
fs
inc
add
and
add
add
add
cmp
das
fwait
jns
pop
mov
pop
fcomps
pop
fstpt
insl
dec
jl
clc
mov
jp
scas
in
out
fwait
lcall
ds
add
sub
inc
add
sbb
adc
add
addr16
push
fwait
dec
push
cwtl
mov
push
cmp
jo
add
add
push
data16
or
clc
arpl
add
dec
and
adc
add
sub
add
jg
leave
add
add
mov
add
scas
imul
dec
icebp
mov
jecxz
add
popa
add
push
push
add
and
add
dec
and
add
fs
push
add
xchg
cmp
movsl
clc
loop
enter
sbb
adc
mov
add
mov
cmp
outsb
pop
push
clc
cpuid
clc
test
jmp
data16
push
pop
clc
ss
sti
mov
out
hlt
stos
jecxz
jmp
add
mov
adc
add
imul
clc
lahf
cmp
add
dec
in
leave
lock
out
xchg
fwait
add
test
test
enter
add
cli
test
fsubrs
leave
sub
and
pop
jge
data16
mov
and
repnz
mov
mov
mov
clc
cmp
ds
je
mov
out
int3
mov
sbb
xchg
leave
adc
ds
clc
push
imul
clc
popf
leave
and
cmpsl
clc
cmp
clc
data16
xor
add
repz
sti
jnp
clc
outsb
pop
pop
hlt
lods
popf
clc
shlb
fstpl
pop
fxch
movsl
clc
cmp
mov
clc
cmp
mov
popf
cltd
pop
mov
and
jmp
xchg
push
pop
cmc
ds
jb
add
pop
mov
xor
add
ret
clc
sar
push
add
test
or
xbegin
xchg
mov
and
add
add
adc
add
mov
cli
pop
xchg
cmpsl
clc
jo
add
cmp
lods
xor
add
adc
xor
add
clc
int3
inc
add
sub
clc
int
leave
xchg
jo
add
push
pop
movsl
clc
and
add
std
pop
repz
add
enter
and
add
pop
ljmp
add
add
push
sar
add
inc
add
pusha
add
mov
inc
add
repz
push
add
lock
add
clc
mov
pop
xchg
push
adc
add
add
cmp
push
clc
inc
clc
cli
cwtl
ljmp
nop
cmp
inc
clc
xchg
aas
bound
add
add
add
add
clc
sbb
add
pop
clc
cmp
aad
dec
loop
mov
and
add
add
clc
imul
xchg
adc
add
xor
add
add
dec
out
xchg
pop
faddl
clc
clc
neg
pop
loopne
in
faddp
clc
sub
lcall
push
inc
clc
and
add
xbegin
mov
cli
and
add
xchg
jae
add
add
fs
imul
clc
pop
and
add
stos
cmp
pop
movsl
clc
adc
add
add
movsl
clc
sahf
nop
push
add
lea
clc
repnz
add
push
iret
mov
hlt
inc
clc
inc
add
mov
add
iret
and
xchg
mov
ret
xor
clc
jae
add
repnz
clc
outsb
imul
mov
clc
imul
add
mov
lret
fwait
mov
stc
dec
out
cmp
add
add
push
out
add
add
sbb
jb
add
aas
jns
cmpsl
clc
xchg
movsb
clc
into
scas
in
loop
hlt
loopne
lods
loop
add
add
clc
js
clc
pusha
add
lahf
arpl
add
push
clc
push
popa
add
stc
xabort
mov
add
add
dec
sbb
push
jg
inc
add
cmp
add
push
out
into
sbb
loop
push
and
jns
push
jecxz
sbb
inc
clc
sub
xchg
mov
int3
inc
clc
or
and
add
mov
xchg
cltd
repnz
cmp
insl
js
add
adc
add
stos
test
xchg
cmp
clc
and
add
clc
jmp
loop
sub
xabort
add
pushf
xor
add
sar
and
enter
xchg
ficoml
in
outsb
ficoml
out
add
add
mov
mov
enter
xor
add
ja
jmp
inc
clc
imul
jmp
mov
xabort
add
sub
add
mov
add
cmp
and
add
data16
jmp
add
pusha
add
jl
sti
push
jg
cmc
xabort
add
xbegin
jmp
and
add
cmp
aad
add
loope
sbb
jne
add
cmp
clc
adc
add
bound
add
data16
pop
call
clc
das
dec
inc
add
sbb
mov
pop
push
cmpsb
clc
mov
inc
clc
adc
add
daa
clc
xor
add
jno
add
add
ss
add
push
lods
dec
pop
jo
add
adc
add
dec
sbb
data16
adc
add
call
xchg
sub
mov
outsb
jecxz
cli
cmp
pushf
out
es
add
mov
clc
push
lock
iret
push
push
clc
xchg
xchg
xor
add
sar
add
hlt
push
and
add
dec
test
push
push
xchg
lods
dec
mov
clc
lea
outsb
mov
inc
add
outsb
test
pop
clc
clc
xchg
sar
push
clc
xchg
pushf
lret
mov
cmp
xlat
in
ds
add
cmp
mov
add
dec
and
add
fldenv
pop
or
jge
adc
add
clc
jp
ja
add
mov
jecxz
jge
clc
incl
inc
add
cmpps
clc
or
jbe
fcmovnb
clc
pop
push
add
mov
cs
adc
add
clc
inc
add
xor
sbb
out
shlb
clc
adc
add
jb
add
aad
push
add
jl
fcomip
repnz
sub
icebp
int
xor
add
add
add
add
add
jbe
clc
imul
clc
ficoms
xor
clc
ja
loope
push
sbb
mov
add
dec
adc
add
stos
push
add
fisttpll
addr16
nop
pop
fmull
push
clc
or
jnp
inc
clc
ljmp
pushf
jge
add
xchg
and
add
sar
add
fs
sbb
mov
sar
mov
jge
inc
add
xor
loopne
jecxz
pop
imul
clc
inc
clc
fidivs
clc
push
movsb
clc
jns
or
mov
or
clc
into
fsubrl
cmp
clc
or
imul
out
test
mull
add
ror
data16
xor
add
inc
clc
mov
lret
insl
test
inc
add
out
jb
add
loope
loope
mov
clc
cwtl
mov
sti
popf
and
add
add
in
mov
faddp
clc
out
cli
sub
ficomps
cld
out
mov
add
clc
mov
push
add
insl
hlt
mov
push
mov
jg
xchg
push
addr16
loopne
fs
test
in
jl
and
add
push
clc
pop
loop
xchg
jmp
test
push
in
jmp
cltd
shll
add
mul
clc
xabort
xchg
cwtl
mov
int3
nop
cli
inc
clc
and
add
pcmpgtw
inc
clc
js
add
loop
xor
add
add
lock
cmp
add
mov
in
xor
scas
inc
clc
sub
push
add
aad
arpl
add
add
aaa
xor
add
clc
fstps
xlat
sbb
cmp
dec
or
and
add
add
fwait
mov
add
add
push
imul
add
mov
xchg
pop
pop
sar
adc
inc
add
out
mov
ds
inc
add
mov
test
adc
mov
data16
in
js
pop
pop
lcall
push
clc
test
push
add
cmp
cltd
xor
add
add
sub
clc
fdiv
jno
add
cmp
ja
clc
cli
push
lods
add
repnz
filds
add
fcmovnb
clc
lret
bswap
xchg
fdivrs
mov
clc
dec
ja
iret
leave
dec
xabort
dec
sub
add
test
push
xchg
movsl
clc
jae
add
cmp
clc
xor
clc
call
test
sbb
pop
jb
add
clc
adc
add
clc
xchg
lret
out
stos
add
add
pop
or
add
aam
sub
or
es
mov
clc
inc
add
mov
xchg
sar
clc
data16
xor
add
in
xabort
int
clc
and
add
mov
mov
shrb
and
add
add
mov
push
clc
mov
push
add
add
add
and
add
clc
jge
clc
sti
data16
movsl
clc
dec
mov
sbb
lcall
add
in
adc
add
jno
add
sub
push
clc
inc
add
cmp
loope
addr16
enter
popa
add
xchg
mov
sbb
push
push
xor
add
mov
pop
leave
iret
test
das
lea
add
pop
mov
push
add
mov
clc
push
xor
loope
sbb
lahf
leave
iret
insl
test
mov
jmp
bound
add
add
mov
cmpsl
clc
sti
jle
mov
sbb
aaa
test
add
xchg
cwtl
dec
int3
pushf
cmc
mov
pop
push
add
mov
xor
add
mov
movsl
clc
lock
xor
add
jg
mov
das
lods
out
dec
clc
inc
add
push
daa
clc
arpl
add
add
gs
mov
cwtl
loope
daa
clc
xor
push
out
xbegin
sbb
xor
add
mov
mov
mov
clc
loopne
sub
jp
mov
pop
clc
push
add
in
ja
clc
or
mov
or
cmp
add
mov
add
dec
adc
add
imul
xor
xor
add
and
or
cmp
add
lock
dec
push
data16
mov
pop
stc
sub
add
pop
clc
mov
add
into
ljmp
add
or
clc
mov
clc
fwait
cmp
mov
add
js
mov
clc
add
add
loope
xchg
sbb
pop
add
add
mov
cmp
push
adc
jp
add
mov
clc
int3
add
clc
es
test
mov
jg
add
add
add
cmp
vmovlps
add
push
add
dec
add
add
filds
add
jle
clc
test
mov
std
push
xbegin
sub
dec
push
jmp
mov
js
data16
fisubs
add
shlb
repz
jl
jg
add
fs
mov
repnz
add
push
add
jb
add
inc
clc
adc
add
clc
das
mov
jmp
add
jno
add
iret
pop
inc
clc
or
add
aad
mov
mov
adc
add
clc
cmpsb
clc
ja
imul
mov
xchg
cmp
lcall
imul
xor
clc
adc
arpl
add
inc
clc
push
add
adc
add
add
sub
fbstp
add
jg
add
decb
fwait
sbb
add
add
js
xbegin
int3
xchg
scas
cmp
pop
pusha
add
stos
stc
sub
fsubr
movsb
clc
int3
push
sub
clc
pop
pop
clc
push
lret
pop
sbb
clc
dec
and
aam
in
inc
add
in
xor
add
add
add
clc
es
cvtdq2ps
in
sbb
fdivrl
clc
mov
add
fadds
arpl
add
add
cli
pop
xor
add
cmp
pop
jne
hlt
cmp
cmp
in
lahf
sbb
nopl
clc
mov
add
mov
cmpsl
clc
push
data16
jecxz
cmpsb
clc
sbb
and
add
clc
in
cmc
lea
aaa
or
add
clc
in
cmp
push
mov
or
adc
add
add
or
popa
add
daa
clc
and
add
add
mov
lcall
add
mov
clc
xor
add
clc
add
add
add
mov
clc
mov
cmpsl
clc
ret
clc
mov
or
loope
cmc
cmpsl
clc
dec
mov
out
sub
clc
mov
cmp
add
jnp
add
mov
sub
add
sub
pop
pop
ds
aad
popa
add
or
add
lock
test
es
xbegin
clc
fisttps
add
divb
add
cmpsl
clc
dec
jne
lods
mov
insl
fcomps
sar
clc
mov
clc
dec
lods
mov
out
adc
add
adc
add
add
add
clc
hlt
enter
xchg
iret
ds
add
inc
clc
mov
xlat
in
inc
add
push
add
push
add
clc
clc
cs
add
add
jnp
sar
jae
add
clc
stos
or
push
add
in
lock
lock
add
loope
imul
dec
gs
inc
clc
or
add
pop
adc
add
add
add
dec
and
add
fcmove
xchg
xabort
clc
add
das
mov
rcrl
xor
add
add
adc
add
xlat
xchg
fst
lcall
and
adc
add
xchg
test
mov
clc
fwait
bound
add
sbb
xchg
adc
add
cmp
cmp
iret
jmp
add
xor
add
lret
add
dec
sbb
inc
clc
push
sbb
cmp
call
xchg
jg
clc
push
jg
jbe
dec
mov
add
push
push
add
pop
xor
add
add
dec
mov
xchg
inc
clc
jge
clc
mov
jns
cld
cltd
cltd
sbb
clc
fdivs
imull
pop
test
movsb
clc
pop
lcall
test
pop
fs
sub
clc
scas
push
fs
nop
std
mov
lahf
or
nop
clc
mov
mov
and
sbb
and
add
clc
sbb
add
add
or
loopne
sbb
ret
clc
mov
cmp
add
push
add
sub
add
add
outsb
cmp
clc
lahf
adc
add
and
add
lret
imulb
icebp
mov
clc
mov
cmp
clc
cmp
pusha
add
jnp
lret
and
ljmp
dec
xbegin
sbb
clc
ror
stos
loope
gs
negl
and
add
mov
mov
pop
cwtl
mov
clc
test
push
into
push
fs
stc
mov
je
add
ljmp
xchg
sbb
adc
jb
add
add
out
es
js
add
push
popl
clc
add
add
xchg
mov
sub
or
ret
insl
lock
clc
rol
clc
sar
add
mov
mov
mov
add
jle
clc
out
ss
int
clc
outsb
xor
jmp
aam
and
add
pushf
adc
push
add
pop
xor
jo
add
add
push
xchg
std
test
scas
scas
and
push
clc
xchg
outsl
dec
add
leave
iret
or
lods
cmp
pushf
and
add
or
jg
addr16
mov
aam
cmp
insl
clc
inc
add
fiaddl
add
xchg
dec
jl
out
and
mov
push
dec
dec
jecxz
lods
xchg
mov
clc
inc
add
jbe
clc
add
mov
add
cmp
add
add
mov
jle
push
out
xchg
sub
clc
inc
add
fcmovb
clc
add
add
add
mov
add
testl
dec
xchg
test
jl
xor
in
xlat
and
add
clc
sbb
fcmove
xor
add
add
add
and
add
xchg
cmp
in
push
mov
sub
mov
and
add
aaa
mov
and
add
clc
jno
add
std
jecxz
jns
addr16
sbb
je
pop
aas
test
push
sub
clc
jl
fnsetpm(287
clc
dec
inc
clc
jle
sar
lods
jae
add
cmp
sub
add
add
outsb
jg
mov
xchg
jns
clc
mov
testb
or
add
add
gs
jne
add
scas
mov
outsl
mov
sub
clc
call
aas
pop
xchg
ret
clc
stos
add
add
clc
push
add
in
gs
push
add
nop
popa
add
xor
add
pop
repnz
add
xchg
loop
adc
add
mov
add
xchg
sub
add
clc
sub
mov
insb
sahf
std
jge
imul
push
clc
add
add
add
clc
cmpsl
clc
mov
add
add
shl
ficoms
cmpsl
clc
cmp
pop
push
add
dec
out
sub
xor
lock
popa
add
insl
mov
jbe
fnstcw
scas
testb
add
pop
sti
out
mov
adc
add
cmp
clc
icebp
into
xchg
inc
add
sub
push
repz
mov
mov
clc
inc
add
mov
lret
rol
clc
test
dec
add
add
aad
clc
and
add
adc
add
mov
clc
insl
push
hlt
inc
clc
mov
sbb
clc
stc
mov
ficomps
xchg
icebp
push
add
mov
clc
lock
mov
dec
and
jo
add
cmp
clc
pop
mov
push
push
add
mov
cltd
in
dec
ret
clc
and
and
add
push
cmp
popf
insb
inc
add
mov
dec
daa
clc
jl
cmp
adc
inc
clc
fwait
mov
lret
lcall
clc
push
loope
mov
loope
cltd
imul
pop
dec
ficoms
movsl
clc
lock
pop
clc
sbb
clc
sbb
clc
cmp
clc
jp
xor
add
sbb
mov
jno
add
mov
js
xor
add
sbb
mov
sahf
call
js
clc
dec
and
add
xchg
sbb
out
inc
clc
mov
add
fimuls
data16
mov
xor
and
test
inc
add
push
daa
clc
cmp
cmp
add
