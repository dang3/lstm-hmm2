call
jo
mov
popf
lock
hlt
pop
mov
xchg
or
mov
inc
enter
sub
decl
addb
adc
mov
add
add
add
cld
inc
or
pop
hlt
ret
fwait
lcall
adc
mov
test
mov
shll
push
out
mov
subl
stos
xchg
lcall
jmp
in
cmp
insl
mov
orl
pop
sbbl
dec
insl
loop
mov
lds
mov
add
add
jecxz
pop
sti
ss
cltd
out
pushf
jae
add
mov
mov
sub
mov
rolb
mov
loopne
mov
les
cltd
inc
sub
cmovns
rolb
mov
push
xlat
popf
mov
add
pop
lods
sub
add
inc
cmc
adc
mov
vpmacssdd
xchg
add
pop
lret
fxch
jo
mov
pop
in
and
mov
lock
add
cmp
aad
iret
sbb
dec
cmpsl
int3
in
mov
jne
add
add
mov
mov
sarl
mov
nop
add
push
add
mov
insl
ret
sbb
add
das
inc
jns
je
stos
jae
sbb
xchg
add
xchg
fidivl
xchg
imul
call
mov
adc
mov
sbb
add
mov
xor
add
ret
xchg
mov
inc
mov
pop
sti
aam
and
mov
cwtl
scas
cmpsl
test
mov
sahf
outsb
sub
add
push
popf
pop
sbb
idiv
fistl
sbb
mov
mov
push
xor
mov
push
xchg
lret
in
add
sarl
xchg
mov
mov
out
or
fxch
addl
rolb
inc
push
xchg
mov
setns
loope
xlat
push
jmp
and
mov
pop
scas
test
pop
or
or
addb
adc
dec
inc
call
inc
shrl
pop
outsl
jo
mov
sub
add
jecxz
pop
sbb
adc
jecxz
lcall
pop
inc
push
jbe
lcall
mov
or
dec
aas
xchg
mov
jecxz
push
add
mov
cmp
mov
sbb
add
add
add
xor
mov
out
fdivrl
add
pop
in
mov
mov
repnz
bound
mov
addb
nopl
lods
mov
and
mov
mov
add
xor
jbe
add
test
adc
mov
mov
pusha
add
or
int3
add
mov
adc
cmp
mov
mov
jle
cmp
out
inc
insb
in
cmc
push
mov
mov
or
or
in
push
mov
mov
fisttps
mov
mov
dec
fistpll
mov
add
mov
pop
adc
mov
mov
cld
mov
ljmp
jnp
cmp
pushf
ficoms
xor
outsl
fsubrs
int
cmpsb
lods
fwait
dec
int
fisubl
gs
adc
mov
repz
imul
jmp
add
inc
or
mov
loopne
mov
mov
dec
loop
mov
fwait
push
dec
cmp
and
ret
aaa
nop
add
xor
mov
mov
pop
call
add
pop
push
pop
mov
rorl
mov
les
pop
xor
out
or
jae,pn
outsl
outsl
add
in
cmp
into
pushf
popa
push
scas
jne
and
add
jne
roll
inc
inc
inc
adcl
add
jae
pop
adc
adc
and
jge
call
and
mov
ja
xchg
inc
xchg
mov
mov
pop
js
add
cmp
pop
scas
push
sti
push
popa
mov
repz
add
add
movsl
scas
add
rolb
mov
and
inc
add
xor
popf
mov
jnp
out
add
loopne
mov
roll
test
sbb
mov
loope
add
jp
addb
daa
and
mov
pop
std
negl
adc
lds
inc
insb
sahf
int3
mov
out
in
jne
in
dec
sbb
enter
dec
push
dec
fimull
fcmove
sub
roll
mov
push
fldenv
add
add
lea
out
fdivl
addr16
or
insb
shrl
add
decl
cmc
push
push
sub
adc
mov
add
mov
add
jne
add
push
sahf
ja
adc
mov
pusha
add
mov
mov
inc
sahf
inc
fsubrs
shll
xchg
add
and
fcomi
cwtl
push
les
and
fs
mov
and
mov
mov
call
add
push
leave
sarl
mov
add
mov
or
imul
push
ljmp
cmpsb
aad
inc
push
mov
test
add
mov
lcall
inc
mov
add
dec
dec
dec
mov
pusha
add
add
push
add
testl
inc
add
jo
mov
add
leave
add
mov
data16
inc
xor
cwtl
imull
and
mov
mov
popf
addb
add
mov
mov
das
jle
dec
rolb
mov
outsb
xor
dec
addr16
cmp
enter
add
pop
cmpsl
push
pop
pop
push
test
or
outsl
push
push
bound
mov
movsb
imul
addr16
push
repz
sti
sbb
sbb
or
add
add
xchg
fnstcw
in
aas
mov
xchg
mov
mov
ds
movsl
pushf
lret
and
pop
pop
aaa
dec
add
jmp
nop
add
push
add
mov
dec
lds
icebp
jg
or
mov
addb
xlat
push
cmpsl
dec
mov
inc
aad
adc
mov
pop
addb
push
xchg
insb
mov
lret
fcoml
movb
popa
mov
scas
jg
push
add
add
in
icebp
daa
ja
clc
fmuls
out
icebp
or
mov
stos
subl
dec
pushl
mov
pushf
push
add
pop
imul
popw
pop
cwtl
adc
mov
adc
imul
jge
mov
xchg
or
inc
mov
mov
add
mov
add
addb
hlt
jge
daa
dec
movsb
cltd
or
mov
add
in
mov
add
adc
mov
adc
fisubrl
adc
test
fwait
adc
add
fwait
popa
jle
mov
pop
inc
jns
mov
ss
out
xchg
test
sbb
push
into
cmpsb
imul
arpl
insb
xchg
add
bound
mov
loopne
mov
mov
outsb
pop
cwtl
lret
xchg
sbb
enter
mov
popf
push
inc
mov
or
xchg
pusha
add
push
xor
mov
or
cmpsb
sbb
and
add
ss
sub
and
sti
mov
es
popl
add
popa
enter
imul
rolb
mov
jl
insl
scas
iret
cmp
add
leave
cli
pop
mov
fstl
mov
pop
sahf
or
add
add
bound
mov
mov
int
out
pusha
add
or
adcl
icebp
test
cmp
jecxz
lods
adc
mov
inc
add
mov
rolb
mov
je
xlat
sbb
push
add
mov
mov
push
aas
test
aam
dec
popf
xor
jp
rolb
adc
adc
pop
dec
dec
rolb
mov
lods
xchg
add
mov
or
adc
mov
jmp
ja
rolb
mov
lcall
fistps
in
test
xchg
mov
sbb
dec
jae
fs
xchg
and
mov
adc
push
addb
jmp
addb
pop
cmp
inc
push
leave
rolb
mov
add
mov
dec
negl
ud2
push
std
roll
push
popl
dec
push
cmp
stos
xchg
xchg
sub
adc
mov
add
mov
into
leave
mov
mov
mov
sbb
mov
xchg
add
mov
push
mov
cwtl
lds
add
and
mov
xor
int3
dec
stos
leave
in
jmp
xor
mov
mov
xchg
insl
repnz
mov
sbb
imul
mov
scas
lret
push
icebp
aaa
popf
rcll
add
dec
dec
cmp
add
mov
insl
negl
or
notl
mov
mov
enter
push
adc
divb
addb
mov
jae
push
xchg
ja
ljmp
mov
pushf
das
js
add
mov
mov
xchg
add
or
dec
dec
add
scas
push
and
mov
xor
adc
add
stc
add
mov
test
sarl
stos
and
mov
cmp
mov
aam
call
mov
aad
sbb
loope
push
aaa
lea
and
pop
std
repnz
mov
mov
scas
or
pop
sub
mov
pop
push
daa
insl
out
call
mov
lods
or
bound
mov
add
mov
add
popf
add
push
pop
mov
mov
in
and
jo
mov
add
mov
xchg
arpl
sbb
leave
fs
leave
dec
out
dec
cmp
int
icebp
loop
mov
and
add
ret
mov
push
inc
cmpsb
not
jo
mov
ja
jo
mov
insl
push
lock
mov
jb
mov
icebp
addb
nop
add
mov
push
andl
mov
popa
dec
iret
lea
in
addb
xor
mov
pop
dec
jg
push
push
rolb
mov
add
lret
pop
stos
push
inc
add
cld
stos
mulb
mov
xchg
fnstenv
pop
aas
test
ljmp
or
testl
pop
cmp
into
pop
aas
xchg
push
add
jnp
add
add
and
arpl
cmpl
jno
add
add
inc
add
sti
cmp
ja
ljmp
xor
lds
lods
or
jbe
mov
dec
mov
repnz
andl
mov
addb
loopne
mov
mov
mov
iret
fprem1
and
mov
ljmp
or
sub
inc
pop
dec
test
or
xchg
sub
push
add
int3
push
jmp
push
das
imul
decl
xchg
pop
xor
dec
xchg
nop
add
dec
xchg
add
mov
pop
lcall
int
js
faddl
sub
stc
aam
cmp
adc
sahf
adc
inc
sub
sbb
adc
aas
bound
mov
add
jl
sbb
cmp
or
add
cmp
cmp
add
pop
leave
clc
repz
sub
mov
mov
push
xchg
hlt
dec
cwtl
rolb
mov
ret
mov
in
inc
in
jg
inc
sti
test
cmp
jae
gs
add
dec
int3
sbb
add
mov
lock
add
leave
fadds
jb
mov
je
add
pop
cmp
xor
mov
lods
jge
orl
mov
mov
rcrb
clc
or
pop
sbb
push
inc
mov
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
aad
adc
in
add
mov
jo
mov
lods
fists
xor
inc
and
add
js
das
sub
pushl
addb
adc
mov
rolb
mov
adc
mov
add
add
cwtl
push
and
mov
push
jns
push
add
push
addb
push
dec
insl
lahf
or
pop
or
stc
rcr
add
add
lcall
or
ljmp
outsl
mov
xchg
sub
add
insb
mov
mov
mov
adc
stos
lea
loope
xor
adc
sbb
stos
xor
icebp
inc
add
add
push
pop
dec
lret
mov
data16
jle
adc
je
cltd
addb
xchg
add
add
mov
cmp
lds
pop
enter
and
xor
or
pop
imull
push
xlat
adc
cs
test
or
jge
add
sub
add
and
rolb
mov
add
or
lods
cwtl
imul
add
mov
mov
mov
subl
add
xlat
push
sbb
in
in
movl
dec
sahf
ljmp
leave
xchg
pop
loope
fisubl
pop
into
inc
negl
mov
mov
cmp
mov
add
mov
sti
mov
add
gs
mov
adc
add
mov
xor
and
mov
es
xchg
add
in
pushf
sub
add
add
mov
mov
jmp
xchg
jge
mov
cmc
cmp
mov
pop
inc
imul
int
outsl
sbb
rcr
lret
neg
aaa
adc
mov
adc
mov
cmpl
add
mov
js
shll
leave
ds
cmp
and
mov
add
lods
xchg
mov
pop
mov
mov
lea
add
add
cmp
xor
leave
adc
mov
in
cmc
mov
jb
mov
or
xchg
out
jae
pop
inc
add
and
mov
stos
inc
add
add
mov
mov
mov
push
inc
jmp
xchg
mov
jecxz
cltd
adc
mov
pop
mov
ret
jl
jmp
movsb
xor
out
sub
and
mov
sub
mov
add
jo
mov
cmp
mov
add
mov
mov
leave
xchg
xchg
jmp
add
push
mov
cmp
inc
jbe
add
out
and
mov
stc
inc
or
mov
mov
aad
push
cltd
cmp
cmpsb
popa
xchg
lcall
lcall
mov
cltd
and
mov
or
sbb
push
dec
incl
push
jae
sbb
paddb
sbbl
fildl
aaa
xor
jmp
outsl
push
add
adc
mov
mov
mov
mov
pop
pop
fadds
xchg
and
scas
dec
inc
je
adc
sub
scas
mov
repz
enter
js
sbb
std
push
push
jecxz
push
fwait
push
push
mov
mov
add
mov
jge
outsl
mov
mov
sub
and
push
add
bound
mov
cld
jge
push
sub
cmp
pop
add
push
data16
data16
pop
aad
pop
dec
mov
mov
lret
into
scas
mov
stos
out
repz
shl
cmp
push
jne
aam
fs
daa
and
sbb
xor
jbe
push
xchg
enter
frstor
mov
mov
cmpsb
rolb
xchg
add
lret
mov
and
mov
sub
mov
repnz
add
addb
insb
movl
aad
or
jb
mov
add
mov
das
cli
dec
cmp
leave
arpl
rcll
cmp
out
mov
popfw
sbb
aaa
push
rep
repz
dec
ja
insl
mov
repz
popf
cmp
je
pushf
pop
add
mov
ss
lds
dec
out
out
cmp
add
data16
out
lcall
fcomps
int
pop
rolb
mov
or
fsubs
jl
les
in
popa
sbb
sahf
push
push
cmp
ss
rolb
mov
movsl
sub
mov
mov
test
cmp
addr16
sti
sbb
dec
push
jl
testb
mov
movsl
inc
add
add
popa
out
mov
idiv
js
ja
scas
inc
add
pop
rep
js
push
add
test
add
aam
jecxz
dec
jae
sbb
pop
rolb
mov
push
add
push
cmovs
or
jg
add
xchg
inc
add
call
pop
stos
sti
repz
scas
cmpsb
aam
adc
mov
rcl
mov
stc
xor
scas
bound
mov
test
fmuls
test
add
mov
sbb
mov
add
cmp
mov
push
push
mov
rolb
mov
mov
or
sub
jns
xchg
in
or
add
test
rolb
adc
fcmovb
add
int3
sbb
sbb
mov
ret
addb
sub
mov
add
mov
int3
and
lea
lds
in
push
shrl
negb
pop
out
inc
inc
data16
push
or
and
add
data16
bound
mov
sub
and
mov
add
xor
ret
dec
push
xor
mov
ds
std
jecxz
add
add
mov
add
lds
pop
loope
adc
mov
daa
push
loop
mov
and
aaa
dec
xchg
mov
mov
xchg
jbe
insb
imul
leave
dec
pop
mov
fwait
jo
mov
bound
mov
loop
mov
mov
addl
mov
dec
cmp
inc
lds
mov
add
add
mov
out
dec
xchg
fwait
push
add
mov
xor
mov
mov
mov
mov
idiv
lret
push
mov
dec
mov
mov
or
jmp
repnz
xlat
lds
sub
ljmp
stos
cmc
mov
add
add
fnstcw
lret
sbb
mov
add
dec
fnsave
or
cmp
jnp
xor
leave
lock
ss
test
rolb
mov
mov
loop
mov
add
fwait
or
adc
xchg
cld
aad
fucom
nop
add
push
xorl
mov
add
scas
sbb
or
rorl
pusha
add
xchg
sarl
pop
or
mov
xor
fstps
xor
lods
sbb
xchg
add
push
add
mov
dec
xor
mov
inc
add
add
add
xchg
test
or
int3
pop
enter
xchg
loop
mov
and
add
adc
test
jns
addb
adc
add
mov
addb
das
dec
push
jbe
and
mov
repz
rolb
mov
frstor
xchg
mov
add
addb
inc
subl
outsl
pop
leave
punpcklwd
xor
mov
add
dec
xor
mov
arpl
mov
add
mov
mov
movsb
cmpsb
xchg
mov
or
mov
add
mov
add
and
imul
add
mov
imul
outsb
pop
in
dec
fcompl
inc
add
lcall
lds
das
mov
dec
fsts
add
mov
pop
sbb
xchg
mov
shl
mov
idivb
and
mov
icebp
pop
cli
stos
fs
add
imul
addr16
lea
add
add
cmc
clc
pop
xchg
decb
in
add
mov
je
add
mov
js
jmp
pop
in
jns
add
call
mov
pop
pop
imul
in
mov
add
add
add
cmpsb
jmp
jb
mov
lods
dec
push
test
in
xchg
hlt
out
adc
imul
mov
rolb
mov
sbb
or
mov
pusha
add
dec
int3
fisttps
add
add
sbb
aam
aaa
icebp
jbe
test
mov
dec
xlat
shrd
mov
mov
inc
add
jecxz
test
mov
xchg
lock
cs
jl
bound
mov
mov
sbb
movl
jae
es
add
mov
jecxz
cltd
les
add
repz
pop
pop
mov
mov
fdivl
rolb
mov
sbbl
out
lods
sbb
out
adcl
jnp
bound
mov
aaa
add
mov
add
jg
jp
add
adc
dec
fistps
cmp
add
ficompl
add
pushf
daa
inc
add
or
mov
add
loop
mov
pusha
add
cmpsl
shrl
jmp
sub
insb
adc
lret
aad
cmp
jg
andl
or
roll
add
pop
pop
roll
or
inc
into
jnp
add
rorl
jmp
mov
jl
cltd
inc
lock
adc
mov
out
xor
and
outsb
mov
pop
mov
jns,pn
and
mov
xor
add
xchg
test
out
sub
inc
push
pop
leave
cmp
adc
mov
xchg
push
add
mov
in
lods
xchg
pop
pop
jae
imul
mov
mov
xchg
add
jg
add
mov
test
mov
lret
inc
sbb
addb
mov
jae
add
sub
add
popf
aaa
imul
add
mov
cs
sar
or
in
push
push
add
sub
ret
mov
icebp
pushf
das
arpl
add
sbb
std
vpunpcklqdq
mov
icebp
in
add
and
inc
add
xor
mov
mov
rolb
mov
jecxz
rolb
add
repnz
test
fwait
cmp
sti
lahf
and
mov
add
mov
mov
dec
divb
add
add
loope
cmpsl
add
add
mov
mov
pop
cld
cmp
cmc
arpl
adc
cmp
test
adc
add
and
dec
mov
mov
loopne
mov
add
mov
add
add
pop
lock
call
mov
into
cli
mov
fucomp
out
push
add
mov
and
dec
imul
adc
mov
mov
sahf
adc
mov
in
jmp
stos
daa
mov
outsl
stos
lock
xchg
scas
mov
out
dec
imul
inc
test
mov
inc
add
imul
adc
mov
sbb
mov
jbe
and
mov
add
jno
pushf
into
adc
daa
cltd
insl
cli
or
or
cmpsl
and
outsl
lret
mov
add
leave
addr16
add
pop
fadds
mov
jnp
mov
mov
ret
stos
pop
xchg
add
or
lds
add
cmp
jne
lods
sbb
mov
popf
cltd
mov
xor
mov
and
add
mov
clc
jge
xchg
adc
xchg
push
leave
sbb
pop
pop
add
mov
mov
mov
add
mov
pop
hlt
xor
mov
and
imul
test
add
jl
aad
mov
add
sbb
test
aas
sbb
pop
inc
add
not
rolb
mov
stos
test
fcompl
inc
movsb
jnp
mov
fcoml
mov
test
add
out
jae
pop
xor
mov
shll
in
cs
loop
mov
rolb
mov
test
or
add
jmp
dec
call
ret
in
xor
add
lods
lods
xor
into
jb
mov
rolb
mov
add
loope
sbb
add
mov
and
inc
stos
outsl
es
lea
add
add
jnp
jmp
push
xorl
add
hlt
test
mov
iret
push
ds
sbb
inc
or
insl
out
jo
mov
add
xchg
leave
xchg
or
mov
pushf
xor
jne,pt
fbld
dec
scas
add
mov
add
ret
xchg
inc
xchg
jno
and
notl
xor
dec
cmp
and
mov
int3
dec
lahf
and
stos
mov
or
add
xor
adc
add
mov
arpl
mov
push
cwtl
loope
mov
dec
mov
mov
pop
jmp
stos
and
mov
xchg
add
add
cld
cmpsl
clc
sbb
add
dec
sbb
rcll
js
mov
pop
aad
jl
fdivl
dec
std
arpl
xchg
sub
addb
loope
or
add
inc
add
xor
mov
mov
sub
mov
mov
add
push
mov
xchg
dec
jecxz
jmp
add
dec
lods
jle
xchg
jl
fnstsw
mov
rolb
mov
lret
sbb
cmp
cwtl
mov
push
daa
dec
in
mov
rcrl
fcompl
add
adc
mov
in
mov
gs
pop
xor
push
fdivs
add
and
mov
jae
sbb
xor
leave
xor
inc
add
pop
imul
lret
addl
jno
push
adc
pop
and
mov
icebp
cmp
push
sarl
add
cmp
mov
push
mov
or
mov
insb
push
mov
jnp
addr16
clc
ret
dec
imul
scas
das
mov
fistpl
and
mov
jp
push
jp
ret
and
mov
sbb
adc
addb
add
int
pop
jl
mov
mov
jbe
dec
jns
enter
add
mov
adc
cmp
dec
or
fwait
mov
push
add
out
cmp
pop
cmp
xchg
push
pop
out
stos
mov
xlat
addb
jnp
mov
adc
push
add
movsb
adc
mov
aad
mov
push
mov
repnz
dec
std
jb
mov
repz
adc
bound
mov
sub
in
pop
es
mov
popa
jl
xchg
lahf
aad
sub
add
add
aad
out
aas
mov
or
xchg
or
dec
sarl
fcoml
pop
repz
mov
popf
in
mov
add
mov
mov
int
jmp
add
xchg
andl
fsub
or
dec
fdivrl
pop
sbb
addb
jecxz
iret
enter
xorl
rolb
mov
jbe
add
mov
add
outsl
mov
mov
mov
add
adc
mov
mov
add
mov
mov
mov
aas
pop
jae
dec
mov
add
clc
mov
and
jg,pt
aas
xchg
sub
daa
js
mov
sbb
int
addr16
add
outsb
sub
out
out
addb
js
add
in
into
imul
add
fldlg2
addb
cmpsb
rolb
mov
and
mov
add
std
dec
push
lock
sub
das
aas
nop
add
dec
addb
sub
sbb
mov
std
xor
add
in
lcall
pop
rolb
mov
mov
jmp
addb
ffree
aas
mov
addb
pop
push
mov
mov
ss
aam
mov
mov
push
inc
mov
mov
mov
inc
movsl
inc
imul
push
lret
add
push
add
cli
sbb
lds
lods
ds
std
mov
addb
loope
add
jecxz
jae
cli
add
mov
jo
mov
outsb
cmp
add
pop
add
mov
mov
add
add
inc
in
mov
test
imul
add
aam
das
ss
xor
add
enter
aas
std
sbb
xchg
add
pusha
add
add
scas
jb
mov
lcall
add
cwtl
cmpsl
std
das
rolb
mov
mov
and
shll
mov
mov
jo
mov
movsl
insl
call
add
mov
lcall
lahf
and
push
fiadds
jnp
jbe
mov
ljmp
or
mov
fsubs
je
call
mov
lods
lods
mov
aas
ljmp
or
add
pop
xor
scas
mov
sub
add
repnz
dec
dec
out
push
and
and
jl
cmp
enter
xchg
pop
adc
out
mov
jb
mov
pop
outsb
jg
cwtl
pop
loope
adc
popf
js
fucomip
or
in
fidivrl
movsl
mov
arpl
pop
jl
jg
cmp
lahf
pop
and
hlt
jg
add
add
stos
fwait
mov
sbb
add
cmp
sahf
sbb
xor
adc
js
aam
xor
mov
pop
into
test
dec
scas
int3
or
sbb
adc
mov
in
lret
mov
pop
das
add
mov
jns
add
add
sbb
pop
pop
xorl
mov
sbb
sbb
cmp
shll
outsb
fwait
push
in
mov
aaa
lock
mov
mov
lret
int
loop
mov
mov
push
xchg
inc
cmp
test
enter
dec
cli
or
daa
mov
mov
mov
cli
xor
mov
pop
int
test
cmpsb
pop
adc
jb
mov
add
mov
ret
aad
mov
mov
addb
mov
push
cmp
add
mov
test
aad
dec
xchg
and
insl
sbb
add
test
dec
clc
out
add
leave
call
pop
jbe
ret
lahf
push
xchg
xchg
or
add
ret
or
mov
into
iret
cmpsl
ljmp
sub
fstps
inc
popf
mov
mov
orl
jnp
adc
rorl
lods
ret
mov
pop
fistps
add
mov
cli
aad
mov
and
mov
xor
outsl
icebp
das
inc
sub
add
add
outsb
xor
mov
test
mov
loop
mov
mov
jmp
pop
mov
mov
sbb
lahf
jecxz
das
cmpsl
leave
or
aaa
or
mov
mov
mov
pop
mov
and
loop
mov
mov
add
add
mov
leave
inc
xchg
jg
jb
mov
add
mov
add
cmp
add
es
push
scas
in
add
mov
insl
jbe
or
add
push
jge
mov
mov
pop
iret
out
jg
pushf
test
js
js
test
inc
test
mov
adc
mov
push
sbb
out
ret
out
lcall
das
pop
jmp
add
lods
pop
je
out
and
nop
add
dec
push
aas
dec
pop
inc
aas
fidivrl
and
fdivrl
jns
adc
add
cmp
inc
fcmovb
add
xor
negb
test
sub
ss
add
aam
fstps
or
cmp
and
mov
lds
push
jne
jg
js
add
ficomps
mov
shrl
push
iret
out
idivb
pop
dec
stos
in
incb
pop
fisttps
es
push
dec
mov
mov
inc
jns
sbb
add
sbb
cmpsl
cmp
jmp
xor
mov
cmp
loop
mov
lods
push
sub
dec
sub
outsl
dec
dec
jmp
pop
fmul
sub
add
mov
push
stos
rolb
stc
xchg
enter
icebp
push
dec
lret
test
sub
out
repnz
dec
xchg
je
jno
add
cmp
movsl
aam
or
into
repnz
lea
mov
mov
add
mov
add
fstps
jecxz
adc
or
ret
push
aas
out
jne
mov
add
mov
loopne
mov
inc
add
mov
or
jbe
mov
pop
fidivrl
cmpsb
addb
imul
or
mov
add
push
ja
add
mov
push
fistps
mov
repnz
mov
sub
icebp
clc
inc
and
mov
jmp
mov
push
fsubp
add
xor
aam
mov
mov
jae
daa
in
cmp
push
ja
add
mov
cmp
or
or
test
sbb
enter
test
mov
mov
dec
jge
hlt
cmp
xchg
lahf
ja
adc
in
cmp
stos
fsubrs
addb
idiv
cmp
mov
call
add
mov
gs
adc
vpshlb
and
mov
popa
sbb
add
dec
jmp
add
nop
add
lret
add
icebp
sbb
leave
mov
adcl
mov
and
in
sbbl
gs
sbb
jb
mov
push
sti
xchg
xor
cmp
jp
cmp
leave
xchg
clc
pop
adc
or
xlat
push
xor
rolb
mov
add
cs
in
add
sub
mov
enter
aam
add
mov
mul
add
jl
xchg
fisubl
arpl
jl
jbe
pop
inc
cmpxchg
mov
mov
mov
dec
mov
orl
add
add
inc
popa
ficompl
cmp
aad
dec
inc
add
mov
aaa
mov
jb
mov
std
jecxz
int
aaa
mov
lcall
sub
add
add
xchg
inc
add
mov
push
cmpsl
jns
mov
mov
pop
jne
jecxz
jl
mov
in
sub
loopne
mov
jbe
leave
sub
mov
push
add
mov
in
mov
sahf
stos
icebp
sub
subl
int3
xchg
pushf
xchg
add
pushf
jp
add
xorl
mov
add
dec
and
iret
inc
add
xor
movsl
scas
add
mov
mov
mov
mov
sub
pop
inc
ljmp
add
sub
mov
mov
mov
mov
jl
xor
or
mov
sbb
pop
pop
or
inc
psrld
mov
jle
bound
mov
jge
cli
repnz
cmp
jnp
or
push
sbb
mov
jmp
and
mov
add
add
add
add
sub
test
push
pop
adc
add
xor
bound
mov
inc
mov
stos
push
mov
mov
mov
add
xchg
in
xchg
mov
and
in
add
loope
lods
adc
add
arpl
jp
add
push
das
mov
xchg
xchg
add
mov
sahf
cld
idiv
cs
test
jmp
sbbl
mov
popl
push
sbb
stc
ljmp
add
nop
add
xchg
add
inc
sbbl
scas
adc
mov
push
add
add
aas
aad
add
call
add
mov
sahf
test
pop
js
xchg
in
dec
clc
or
mov
fisttpl
sub
sbb
mov
mov
xchg
mov
jg
add
nop
add
mov
xor
js
das
js
jg
push
pop
or
add
mov
call
xlat
cmc
mov
das
mov
add
scas
pop
dec
in
cmp
fisubs
pop
fistps
add
add
jmp
mov
inc
add
jb
mov
fstpt
and
idiv
jno
rolb
mov
add
add
jbe,pn
jb
mov
xchg
xor
jmp
add
push
orl
inc
mov
xor
inc
sbb
jns
pop
std
sahf
rolb
mov
pushf
sbb
sub
sub
gs
fidivrl
std
adc
mov
call
mov
loopne
mov
cmp
xor
xor
mov
pusha
add
inc
int3
sub
dec
arpl
jp
xor
outsl
pop
fisttpl
rolb
bound
mov
mov
jo
mov
sub
push
aaa
cmpsb
pop
sub
fcoml
mov
mov
idivb
int
dec
movsl
call
mov
pop
lock
add
data16
mov
pop
pop
xor
mov
stos
pop
ljmp
sub
xchg
add
pop
jge
test
and
add
jb
mov
add
mov
and
mov
fwait
sbb
les
sbbl
mov
cmp
aas
sbb
sbb
leave
mov
scas
push
cmpl
pushf
fdivr
lcall
cli
fistpll
sbb
mov
mov
enter
add
push
mov
repz
faddl
add
add
mov
lahf
xchg
out
add
es
in
sbb
xor
add
mov
adc
mov
lret
lahf
mov
js
or
ret
dec
movsl
icebp
jg
test
int
mov
nop
add
aaa
gs
push
ret
scas
int3
xor
dec
mov
add
mov
jb
mov
outsl
push
sti
mov
loope
inc
into
lods
xor
rolb
mov
out
mov
cmp
movsb
clc
xchg
dec
data16
xchg
jecxz
mov
mov
test
sahf
daa
mov
aad
iret
rolb
mov
sbb
adc
pop
call
hlt
fbstp
int3
ret
mov
xchg
add
ja
add
mov
cmp
pop
pop
mov
mov
add
lcall
cmp
std
dec
xchg
cld
xchg
popf
pop
cmp
mov
mov
add
inc
sahf
nop
add
sahf
xor
cmpsl
sbb
daa
int3
and
mov
xor
mov
add
jne
mov
or
fwait
xchg
xchg
add
mov
orl
add
adc
fcmovbe
fiadds
lcall
add
out
add
mov
sub
call
sahf
push
jmp
out
and
lret
stc
xor
xor
mov
stos
jl
and
je
leave
inc
pop
aaa
push
add
mov
sti
xor
add
inc
bound
mov
add
jecxz
cmpsb
ds
mov
xor
data16
jo
mov
mov
jae
add
out
jg
in
push
je
cmp
mov
mov
rcrl
mov
mov
sub
test
jnp
fisubs
sti
rolb
mov
add
sti
rolb
mov
lcall
push
int
inc
cwtl
xchg
sbb
mov
and
mov
cmp
rorl
add
cmp
fidivl
pop
add
jnp
popa
push
pusha
add
mov
or
sbb
add
lea
test
mov
jl
pushf
lahf
dec
push
push
dec
ja
test
mov
add
and
mov
adc
mov
mov
mov
xchg
ljmp
sbb
xchg
or
and
mov
add
lock
add
fbld
test
cltd
test
rolb
mov
add
cmp
jnp
mov
xlat
lret
cmp
push
add
mov
addb
xchg
add
fadds
add
mov
mov
inc
add
push
add
scas
leave
outsl
jns
gs
cmp
xorl
inc
pushl
mov
mov
push
out
cmp
and
mov
sub
into
add
in
xor
daa
cmp
add
and
fcmovbe
add
mov
add
out
jno
adc
mov
mov
inc
pusha
add
bound
mov
push
add
test
popa
ret
aaa
int
lahf
bound
mov
inc
cmp
sbb
mov
mov
inc
rcr
fildll
cmpsl
xchg
pop
cli
fisubl
cli
pop
scas
ret
addr16
loop
mov
add
inc
add
addb
cmp
ds
add
hlt
fcompl
lea
pop
push
sub
and
je
jle
in
dec
rcll
adc
mov
sub
push
jb
mov
lret
add
sbb
stc
adcl
push
cmp
dec
ret
xchg
lds
test
imul
push
out
push
mov
and
add
js
in
xchg
add
inc
add
js
add
xchg
inc
add
mov
sub
scas
xlat
movsb
sub
adc
dec
ret
push
imul
jg
add
mov
mov
fwait
sub
push
fnstenv
call
pop
insl
mov
inc
push
fstpl
ljmp
ret
icebp
xlat
leave
mov
and
incb
jb
mov
add
mov
jg
jo
mov
mov
add
inc
add
add
or
mov
test
jmp
ss
cmp
pop
clc
jmp
in
mov
inc
mov
cmpsb
cwtl
rolb
into
loop
mov
adc
mov
sub
mov
and
inc
and
call
or
add
add
mov
xchg
sub
cmc
addb
imul
lods
cmp
push
add
dec
test
cmp
subl
jo
mov
xchg
jb
mov
hlt
into
mov
mov
push
jne
mov
dec
stc
les
in
jg
repnz
jmp
movsl
push
dec
jae
cli
mov
mov
in
dec
and
xchg
cwtl
addb
cmp
ss
add
xor
sahf
stos
push
xchg
push
iret
jg
clc
int3
xchg
jg
add
mov
in
imul
mov
mov
jo
mov
lods
adc
adc
scas
decb
add
dec
rolb
mov
add
mov
and
or
shl
add
sbb
cmpsb
xor
fcmovnu
std
or
gs
mov
add
popa
mov
push
pop
jb
mov
fwait
rorl
dec
push
daa
sub
jbe
dec
dec
push
cltd
popf
xchg
sbb
sbb
rolb
mov
add
mov
addb
mov
mov
cld
jp
mov
out
loopne
mov
mov
and
mov
inc
add
jae
jnp
xchg
repz
pop
cs
mov
mov
add
add
jbe
iret
jmp
rcll
xorl
pop
or
sub
rol
add
iret
fsubr
lret
add
mov
fisubs
add
daa
int3
fidivl
adc
mov
fs
clc
adc
mov
push
add
mov
js
sbb
push
push
xor
ljmp
mov
mov
mov
add
stc
out
lds
sbb
push
add
outsl
fadds
add
rolb
mov
dec
and
sbb
xor
jg
lea
sub
std
test
xchg
push
cmp
jecxz
mov
mov
add
das
pusha
add
adc
stc
stos
pop
out
push
xlat
dec
jecxz
add
mov
adc
add
scas
mulb
loope
dec
and
mov
mov
sub
jbe
add
jbe
jo
mov
shrl
test
xor
mov
xor
mov
add
or
lock
dec
lret
insl
sbb
lret
cwtl
add
mov
jmp
lea
cmp
add
loopne
mov
mov
loop
mov
add
and
je
pushf
lret
in
pop
inc
mov
lahf
pop
cmp
in
adc
mov
lds
sub
je
dec
xor
lods
sub
cwtl
inc
cmp
cmp
je
pop
int3
or
inc
add
or
sub
lods
addr16
out
or
dec
stos
jecxz
out
cmp
cltd
xchg
lcall
les
push
or
add
push
add
jae
add
mov
mov
mov
aas
jbe
xor
mov
add
mov
inc
dec
cmp
dec
push
push
popf
in
mov
add
lock
adc
inc
pop
loope
xlat
dec
xor
ds
scas
or
push
add
xchg
add
jb
mov
add
outsl
in
mov
xchg
roll
jbe
popl
aas
cmpsb
fcmove
push
pop
insl
in
xor
iret
push
dec
dec
push
scas
lea
mov
mov
in
stc
dec
scas
pop
jo
mov
jl
mov
add
mov
jns
sbb
ja
fwait
ror
sub
add
mov
xchg
cmpsb
jle
jbe
adc
add
mov
call
rolb
mov
sbb
insl
xchg
inc
adc
mov
jo
mov
add
ret
sub
add
gs
cld
inc
add
pop
repnz
addb
fwait
and
pop
repz
add
add
cmp
add
sub
inc
add
pop
aas
pop
or
pop
adc
insw
mulw
pop
sub
add
mov
movsb
xor
enter
mov
add
es
add
lea
add
test
jl
pop
filds
int
ljmp
xchg
push
mov
pop
mov
mov
in
lods
jbe
cmp
push
add
pop
mov
add
xchg
int3
cmp
cli
cmp
push
mov
add
int
test
scas
rolb
and
sub
lods
add
mov
clc
cmp
push
add
in
iret
gs
and
and
add
mov
mov
imul
adc
data16
jle
lcall
loopne
mov
arpl
xor
mov
push
pushl
mov
mov
cmpsb
cmp
mov
push
addb
adc
cli
cmc
add
mov
and
mov
mov
dec
mov
lds
add
call
mov
add
or
xchg
loop
mov
sbb
adc
jmp
add
add
push
and
incl
add
lock
fstps
mov
jne
mov
mov
lret
sub
pop
in
shll
popa
cmc
xchg
sub
dec
jl
addb
addb
and
mov
add
js
or
add
pop
stos
xor
push
add
mov
icebp
idivl
adc
mov
sub
add
fdivp
add
xor
mov
inc
add
xor
add
mov
mov
mov
insl
xchg
add
mov
push
cmpsl
stos
push
dec
jmp
mov
mov
or
pop
out
or
mov
push
icebp
bound
mov
sub
rolb
mov
stc
sub
inc
sbb
decl
inc
icebp
mov
and
and
mov
iret
rolb
mov
jae
stos
xor
pop
cli
mov
stos
pop
sub
mov
xor
mov
out
dec
or
stc
push
add
add
mov
mov
stos
add
mov
mov
dec
inc
out
add
aad
inc
add
add
sti
inc
icebp
adc
mov
pushf
sbbl
dec
and
mov
out
push
in
scas
scas
in
outsb
not
add
jmp
lods
mov
mov
cmp
inc
add
add
lahf
cltd
xchg
add
sbb
lods
inc
enter
jge
mov
loope
jmp
add
mov
inc
add
jl
cmpl
movsb
fsubrl
les
dec
add
fs
xchg
add
addr16
cltd
notl
leave
outsl
push
push
add
fimull
xchg
mov
add
negb
add
add
out
add
loop
mov
mov
xor
mov
fcmovu
popl
inc
adc
mov
sub
mov
int3
pusha
add
sub
dec
dec
inc
add
dec
repnz
pop
loop
mov
adc
mov
inc
xchg
add
mov
lock
pushf
jecxz
nop
add
stos
outsl
xor
lods
mov
add
sub
fldcw
add
mov
stc
or
scas
cs
mov
divl
xor
mov
nop
add
dec
call
popa
lock
aad
xor
xchg
push
add
in
cmp
xor
mov
push
jle
inc
call
sbb
loopne
mov
insb
push
add
mov
mov
rolb
inc
pop
ret
or
lret
or
lods
clc
xchg
add
mov
add
cwtl
enter
add
and
push
scas
into
push
push
call
cmp
mov
cltd
mov
roll
movsl
or
push
pop
ret
lods
push
add
mov
add
mov
mov
jne
sub
clc
cmp
jns
push
cmc
jb
mov
inc
fsubl
call
jge
jecxz
pop
jo
mov
rolb
and
xchg
or
xchg
addr16
insb
cltd
shld
in
mov
mov
add
daa
imul
add
xorl
fisttpl
mov
mov
aam
push
dec
scas
dec
sahf
xlat
pusha
add
mov
mov
lcall
mov
xchg
pop
or
dec
bound
mov
pop
lods
mov
sbb
mov
add
mov
mov
cmp
xchg
int
push
cwtl
mov
arpl
popf
std
add
mov
loope
sub
mov
mov
add
add
sbb
xor
mov
inc
or
adc
mov
inc
add
xchg
pop
push
jmp
push
jns
add
addb
scas
inc
adc
shrl
push
ret
loop
mov
jmp
mov
xchg
adc
mov
repnz
xchg
arpl
or
outsb
lret
cmp
test
jmp
ds
adc
leave
aad
xchg
loop
mov
mov
or
pop
ljmp
ja
add
in
xchg
adc
mov
icebp
lcall
mov
bound
mov
mov
mov
dec
pop
outsl
xchg
add
ret
lock
mov
in
push
hlt
orl
lds
add
xor
mov
dec
movsb
inc
sub
sub
lahf
sbb
data16
cmc
add
add
jmp
pusha
add
cmp
add
pop
jns
and
mov
jnp
loop
mov
call
add
push
cmp
xor
mov
sahf
daa
lret
add
pop
rolb
mov
mov
sti
lret
add
pusha
add
or
jecxz
nop
add
push
test
and
mov
in
shl
add
test
xor
mov
mov
loop
mov
enter
stc
cmp
adc
xchg
add
jbe
cmp
xor
mov
add
insb
jne
xchg
push
out
pushl
scas
inc
popa
and
test
sbb
out
xor
or
aad
stos
cld
xor
mov
dec
je
repz
outsl
dec
pop
test
mov
inc
mov
mov
mov
and
sub
xchg
bound
mov
mov
rolb
pop
inc
sti
push
add
iret
out
cmc
icebp
aas
imul
mov
std
fldl
mov
xor
mov
inc
sbb
adc
mov
mov
mov
pop
jmp
push
icebp
jl
xlat
das
gs
mov
jp
enter
jae
xchg
lds
mov
push
ret
jg
pop
and
mov
add
and
mov
leave
mov
add
lret
data16
inc
imul
mov
inc
sahf
xor
aam
dec
test
adc
mov
mov
lea
mov
movsb
sbb
push
fs
mov
pop
mov
jg,pt
loope
mov
xchg
mov
mov
cmp
xor
mov
mov
in
xchg
les
add
xorl
adc
sbb
sub
dec
cmp
and
mov
stos
ljmp
mov
out
popa
jne
bound
mov
loop
mov
clc
out
ret
push
cmp
addb
push
xor
mov
add
insb
jne
mov
add
jg
jp
movsl
mov
lock
ret
xor
imul
test
mov
add
add
lods
in
sti
mov
int3
xlat
mov
mov
rcll
mov
mov
mov
jmp
inc
push
add
mov
xor
out
lock
ficomps
repnz
and
add
push
add
pop
add
jae
mov
das
jbe
push
jecxz
mov
cwtl
inc
add
add
cmp
add
add
mov
aas
in
add
jne
jl
sbb
movsb
xor
sub
pop
xor
sbb
vmread
add
int
test
add
pop
fcmovbe
insb
mov
das
xchg
mov
in
pop
and
xchg
xchg
pop
push
lahf
mov
shrl
push
lahf
sub
nop
add
pop
jns
or
sbb
insb
or
incb
repz
outsb
arpl
add
jnp
add
xchg
add
test
pcmpeqd
cwtl
pop
jge
mov
mov
mov
mov
sar
pop
mov
jb
mov
mul
add
mov
pop
sbb
or
mov
mov
imul
mov
aam
sub
mov
mov
ret
fcomp
mov
iret
jl
sub
mov
sub
add
aam
data16
lret
out
cmp
push
repnz
std
or
mov
fwait
pop
scas
inc
mov
xor
mov
sbb
add
sub
add
sbb
arpl
cmpsb
dec
and
mov
dec
push
pop
mov
es
adc
mov
aas
and
pop
les
add
or
add
jp
jmp
popl
add
ss
out
add
sbb
mov
clc
mov
add
add
and
mov
sub
icebp
addb
sub
data16
mov
and
mov
sar
popa
rolb
mov
cmp
or
sub
mul
mov
fistpl
sub
in
std
dec
xchg
das
lcall
inc
add
lcall
mov
add
adc
mov
add
jle
xor
xchg
sarl
mov
pusha
add
fadds
popf
jmp
mov
xchg
in
push
or
xchg
test
add
fildl
add
aas
jb
mov
add
lods
mov
std
mov
mov
mov
mov
imul
mov
or
addb
je
pop
jb
mov
bound
mov
addb
pop
pop
push
jno
jne
sbb
mov
rolb
sbbl
mov
scas
popa
or
inc
add
mov
rorl
push
mov
fidivrl
mov
add
mov
sbb
sub
gs
jg
sub
in
and
mov
xchg
je
sahf
and
dec
mov
mov
lret
insl
xchg
add
mov
add
push
insb
cmpsl
out
sub
push
out
sbb
dec
nop
add
adc
add
aad
sti
jl
pop
fsubs
lds
test
jmp
adc
mov
insl
push
add
addb
sbb
pop
and
mov
cmp
aas
cmp
mov
or
mov
mov
mov
xchg
je
out
pop
mov
add
fmuls
outsb
lods
cmp
jns
add
lds
push
xchg
add
or
jl
sbb
faddl
mov
pop
pushf
js
mov
lret
sub
rcrl
popl
add
jp
xchg
push
xchg
pop
dec
scas
or
add
test
and
or
pop
jnp
mov
adc
push
jmp
jns
push
xor
stc
sar
sbb
pop
ret
mov
mov
ljmp
fsubl
insl
sbb
sub
xlat
or
sub
fadds
mov
mov
ja
add
cmc
add
mov
in
cmp
add
faddl
cli
mov
popw
push
cmp
mov
inc
add
xchg
int3
jmp
pushf
addr16
xchg
add
xor
add
jmp
mov
adc
mov
lea
add
dec
cs
xchg
adc
mov
ret
rcl
push
int3
inc
add
mov
inc
iret
outsl
or
dec
and
mov
daa
or
xchg
and
mov
fidivl
and
mov
adc
pop
pushl
fcmovnbe
push
mov
je
loope
cmc
xchg
inc
mov
mov
ljmp
pop
cwtl
mov
xchg
add
fsubrl
sub
mov
cmp
mov
fwait
pop
mov
mov
test
inc
fildll
mov
add
mov
add
jbe
jae
stc
fdivrs
scas
lret
test
or
out
add
mov
mov
arpl
movsl
mov
cmp
and
add
mov
add
push
int3
cli
xor
nop
add
fists
out
mov
cmp
add
mov
rcl
add
mov
aam
scas
cmp
add
mov
rolb
mov
add
xor
mov
mov
xor
mov
pop
and
cmpsb
cmc
enter
in
push
add
jl
add
sub
xchg
adc
mov
faddl
mov
ja
mov
jno
jmp
pop
fisttps
lahf
dec
jecxz
sub
xor
out
jb
mov
add
sbb
rorl
inc
add
mov
scas
jnp
jne
in
pusha
add
add
das
mov
add
mov
cmp
jnp
dec
test
mov
mov
mov
and
scas
push
xchg
add
and
call
add
fdiv
add
adc
mov
sbb
nop
add
rolb
mov
movsl
stos
jg
jg
call
loop
mov
data16
idivb
fucomp
incb
les
je
mov
adc
mov
add
or
ss
add
sahf
addb
adc
or
dec
icebp
sub
inc
or
addr16
inc
mov
enter
or
loopne
mov
lods
inc
add
inc
inc
add
add
mov
pop
mov
and
add
adc
mov
mov
in
lods
cmp
or
mov
inc
push
addr16
sbb
add
mov
add
dec
add
mov
das
ss
inc
add
fs
in
fstpl
arpl
dec
loopne
mov
mov
pop
arpl
mov
add
rolb
mov
xchg
sbb
push
push
inc
adc
xchg
mov
inc
add
mov
inc
movsl
mov
or
adc
mov
ja
popa
stc
pop
cmp
lods
stos
ja
filds
mov
das
movsb
jae
dec
mov
scas
sub
mov
cmp
mov
add
stos
pop
repnz
leave
mov
mov
mov
addb
push
add
add
or
or
mov
mov
xchg
rorl
lea
pop
add
add
scas
sub
sbb
in
lret
sub
stos
adc
dec
lock
leave
iret
sub
mov
add
add
sti
iret
mov
xchg
out
jecxz
mov
imull
and
adc
add
mov
mov
lret
adc
add
sbb
test
mov
popa
cld
sar
fadds
in
xchg
push
jge
mov
add
push
mov
popa
cmp
pop
mov
rolb
fdivs
mov
cmp
and
inc
gs
test
cmpsb
push
lods
mov
dec
bound
mov
shl
xor
mov
mov
dec
push
add
mov
fsubs
data16
outsb
cmp
mov
add
mov
iret
fsubrl
mov
inc
pop
inc
add
iret
lods
jle
test
add
or
add
xchg
push
stc
xor
add
mov
mov
xor
mov
out
call
mov
cmp
and
push
fcompl
inc
add
inc
addr16
cmp
mov
divl
add
ljmp
dec
push
enter
add
add
push
mov
repnz
mov
mov
insb
addb
in
mov
mov
add
xchg
repz
and
mov
add
mov
arpl
sbb
inc
mov
jge
and
mov
insb
loop
mov
mov
push
cmpsb
xor
mov
push
cwtl
pusha
add
push
add
fcompl
push
gs
push
pop
js
add
add
push
sti
mov
push
mov
add
add
add
leave
hlt
pushf
addr16
fst
icebp
ja
hlt
pop
fs
in
add
add
mov
popf
xor
mov
pop
xchg
mov
adcl
mov
aam
loopne
mov
iret
push
add
into
add
stc
xor
imul
add
mov
cmpsl
xlat
inc
retw
ss
stos
mov
add
and
mov
rolb
mov
and
clc
push
add
jo
mov
dec
aas
hlt
mov
cmpsb
js
lock
jnp
or
mov
mov
in
pushf
push
ret
lahf
push
add
lea
mov
xchg
add
mov
es
inc
mov
mov
xorl
or
gs
mov
pop
cmp
stos
mov
fld1
pop
inc
fidivs
add
inc
in
inc
push
call
mov
sub
rolb
mov
add
pop
inc
imul
mov
mov
inc
add
add
add
xchg
mov
fmuls
mov
cmp
add
add
flds
push
mov
mov
jg
testb
lahf
xor
push
mov
mov
add
push
lock
push
xchg
addb
fdivs
jge
add
and
inc
add
sub
cwtl
out
pop
jmp
xor
sbb
add
mov
fimull
enter
mov
sbb
leave
and
mov
add
pop
fisubrs
dec
test
aas
inc
adc
mov
add
dec
fdiv
pop
shll
ret
xorl
mov
add
mov
jb
mov
out
test
pop
leave
add
inc
mov
test
inc
pop
mov
adc
ror
cmpsb
mov
imul
mov
mov
jae
pop
fsubl
xchg
mov
mov
dec
aad
dec
xchg
leave
test
test
jne
mov
xor
mov
loope
fisubl
mov
and
mov
jg
and
mov
das
mov
mov
cltd
movaps
fcmovnbe
test
add
add
push
lods
decl
mov
pop
sub
testb
je
mov
out
sbb
into
mov
addb
jmp
and
lock
ficoms
or
add
add
lret
sti
test
insb
inc
sub
data16
fidivrl
clc
cli
popa
out
pop
jne
dec
push
mov
mov
jmp
aaa
inc
or
icebp
adc
test
call
add
popf
adc
add
cwtl
mov
jns
aas
xchg
cmp
fstp
push
mov
adc
fsubrs
jo
mov
jge
fistl
insb
xor
mov
mov
add
fldl
mov
dec
push
add
mov
imul
sti
push
add
dec
cmc
outsl
xchg
add
divb
mov
add
mov
movsl
mov
jecxz
push
add
aas
jl
mov
cmp
sbb
add
pop
jnp
fucom
add
dec
mov
lret
movsb
hlt
sahf
das
add
mov
ss
or
cwtl
pop
adc
mov
and
mov
dec
fadd
mov
aas
or
leave
lahf
mov
test
push
xchg
cmc
push
jp
pop
or
outsb
cmp
xchg
outsl
imul
mov
std
sub
push
sub
add
add
and
or
pop
xchg
sbb
add
cmp
push
adc
xor
es
dec
sbb
mov
addb
lds
stos
addb
mov
add
add
cmp
add
add
add
pop
call
mov
stos
lcall
insl
sbb
ds
inc
lods
cmpsl
and
aas
sbb
sbb
jno
jnp
int
cmp
add
xchg
mov
and
mov
add
add
xchg
sahf
ds
mov
add
popa
jae
xchg
or
push
add
outsl
inc
incb
or
mov
mov
arpl
adc
mov
cmp
aaa
hlt
cmp
mov
pop
add
mov
mov
jmp
add
sbb
sub
mov
sbb
lret
xor
mov
into
hlt
addb
lock
mov
add
add
push
cmpsb
loopne
mov
add
add
mov
inc
loopne
mov
add
clc
inc
add
inc
add
sub
popf
mov
mov
xchg
jb
mov
push
fidivrl
mov
into
out
and
mov
pop
jno
add
fidivrs
das
inc
divb
sti
pusha
add
mov
cltd
lret
addb
add
in
dec
test
add
add
mov
add
pop
lret
add
lock
adc
add
lcall
je
pop
cmpsb
adc
add
jnp
in
shll
into
xchg
mov
xchg
cmpsl
mov
scas
mov
mov
xor
rolb
mov
mov
mov
pop
repnz
arpl
add
mov
enter
mov
mov
dec
lods
mov
mov
stc
addb
movb
add
xchg
push
push
rcll
pop
outsl
inc
decb
out
fidivrl
pop
inc
add
lcall
mov
push
fidivrs
fdivp
jmp
add
xor
sbb
dec
int
xor
or
imul
jecxz
dec
and
mov
sti
scas
xor
xor
add
mov
jno
xlat
bound
mov
test
add
sar
jns
inc
addb
cld
push
xchg
imul
cld
scas
dec
and
add
add
daa
add
mov
mov
inc
jb
mov
dec
lret
addb
xor
insb
punpckhdq
jns
or
sarl
add
mov
xchg
add
sbb
add
pop
psrad
mov
pop
jbe
add
mov
lods
push
jmp
xchg
add
ss
jg
pop
jb
mov
adc
mov
imul
pop
dec
out
jnp
vaddpd
add
in
or
xchg
and
mov
cmp
rolb
mov
repz
mov
or
call
mov
mov
add
mov
jp
les
ds
mov
xchg
lods
mov
jns
mov
mov
xor
pop
out
push
lods
dec
mov
mov
add
scas
imul
sbb
cmpsl
add
mov
aad
add
xor
mov
mov
cmp
imul
pop
xchg
mov
outsb
dec
data16
clc
add
mov
lret
cmpsb
loop
mov
add
fidivs
mov
arpl
sbb
mov
add
mov
push
nop
add
fisubrl
add
addb
ljmp
repnz
add
add
mov
cltd
xchg
mov
mov
test
std
mov
add
xchg
dec
push
rolb
mov
subl
jno
hlt
pop
test
or
ljmp
mov
addb
push
add
push
inc
add
jo
mov
mov
sub
shl
mov
mov
add
movsl
and
add
mov
inc
repz
xlat
repz
and
jmp
dec
jo
mov
mov
sub
cmpsb
test
dec
popa
push
add
sub
inc
add
test
add
xrelease
sbb
add
xchg
add
inc
les
data16
xchg
sbb
pop
mov
inc
add
popa
lret
lret
into
mov
cmp
imull
insb
rcr
sahf
movsb
xor
scas
cmp
arpl
jmp
add
mov
mov
leave
push
add
xchg
pop
mov
test
aaa
push
adc
mov
out
push
cli
or
std
xchg
add
adc
mov
or
mov
das
sahf
loop
mov
jno
add
or
push
mov
mov
je
inc
xchg
sub
mov
mov
jno
xchg
insl
mov
mov
dec
leave
aaa
outsb
test
mov
inc
xor
mov
jbe
push
dec
sbb
mov
sub
lods
xor
mov
pop
pop
pop
push
mov
fcom
add
call
test
bound
mov
inc
dec
xchg
lods
mov
and
mov
fnsetpm(287
clc
mov
xchg
inc
pop
xchg
sub
jne
jle
movsl
int3
push
cld
ds
out
repnz
inc
add
jno
mov
adc
mov
add
popf
mov
out
jmp
clc
mov
movsl
xchg
add
pop
ss
pop
outsb
test
adc
jne
xchg
enter
mov
add
jae
add
mov
or
pop
test
insl
or
mov
call
sbb
cld
push
cmp
fisubrl
cmc
mov
push
std
mov
add
mov
dec
inc
insl
fnstenv
jecxz
jbe
add
add
setns
add
mov
mov
aam
push
mov
jle
add
mov
dec
jle
mov
mov
xor
fcoms
mov
rcll
in
icebp
imul
cmp
daa
lret
add
sub
sbb
or
outsb
xchg
std
cmp
mov
fdivrl
add
sub
add
add
push
fs
cmp
mov
fdivrs
push
dec
lods
xchg
pop
sub
add
jnp
mov
lahf
dec
subl
std
mov
loop
mov
add
mov
mov
ud2
or
adc
sub
mov
lcall
int3
ss
inc
add
push
cmp
xor
mov
add
mov
add
notb
bound
mov
scas
pop
movsb
push
nop
add
mov
in
test
addb
or
cmp
mov
push
cmp
cmp
arpl
inc
lods
mov
jp
and
mov
add
stc
jmp
rolb
mov
mov
add
add
lea
mov
jnp
scas
inc
jcxz
repz
add
scas
les
mov
add
jg
mov
add
add
mov
inc
sub
xchg
sbb
add
mov
xchg
mov
push
add
xlat
dec
leave
lcall
add
jp
xlat
jne
push
pop
pop
or
add
inc
data16
mov
inc
sbb
out
and
sbb
daa
inc
or
cli
cwtl
imul
into
cmp
dec
imul
imul
mov
sbb
sbb
in
and
mov
push
add
mov
jl
lds
push
rolb
mov
pop
lods
or
mov
arpl
fldl
add
test
add
and
sbb
inc
and
mov
jnp
cmp
mov
mov
add
xchg
add
aad
test
fdivl
mov
mov
test
push
mov
jecxz
sahf
mov
mov
inc
push
dec
sbb
cmpsl
mov
xor
sbb
popa
jb
mov
sbb
pop
cmp
jb
mov
mov
xor
mov
arpl
sub
pop
add
sbb
xchg
les
add
mov
addr16
and
mov
pop
sbb
std
or
insb
sti
push
sahf
or
mov
pop
sub
aaa
in
mov
inc
add
aas
idivl
dec
pop
adc
dec
and
js
imul
dec
es
sub
xor
pop
jae
mov
mov
add
enter
mov
adc
mov
in
dec
sbb
testl
dec
test
pop
mov
adc
add
adc
jg
rolb
mov
jbe
daa
dec
add
stos
mov
add
int
insl
jnp
movsl
inc
lret
imul
mov
mov
mov
sbb
mov
xchg
add
add
mov
adc
pop
push
xchg
push
cs
insb
iret
shl
push
test
rolb
mov
scas
xchg
inc
add
push
add
mov
mov
aam
ds
push
add
mov
adc
clc
mov
leave
or
test
fistps
mov
push
sub
aas
adc
inc
push
push
rolb
mov
xor
jb
mov
shll
add
mov
mov
ss
mov
push
pop
jb
mov
jno
add
fsub
rolb
add
mov
lods
mov
xor
mov
dec
push
imul
rolb
mov
ret
ret
inc
test
inc
cmp
cmp
mov
and
int
adc
add
sub
das
negb
in
mov
mov
shll
add
pushf
ljmp
iret
adc
jecxz
sub
add
mov
push
push
add
push
loopne
mov
lods
or
imull
mov
dec
pop
sti
xor
mov
mov
mov
sti
test
push
jnp
iret
pushf
pop
inc
test
mov
inc
add
add
add
jb
mov
mov
mov
mov
inc
inc
mov
mov
cltd
jp
dec
inc
scas
lds
adc
mov
adc
pop
rolb
mov
rolb
mov
test
add
cmc
mov
add
and
pop
loope
dec
sub
addb
sbb
bswap
sbb
orl
mov
shr
or
addr16
outsb
mov
out
mov
or
cmp
clc
push
mov
movsb
mov
sbb
add
cs
stc
sbb
add
mov
mov
xchg
jno
enter
and
add
cmpsl
pop
stos
adc
mov
js
mov
fwait
leave
gs
add
push
movsb
xchg
mov
jnp
mov
push
add
fldt
sub
add
and
mov
mov
cmp
pop
jo
mov
aaa
loope
loope
pop
sbb
cmp
mov
mov
mov
push
in
pusha
add
pop
xchg
inc
add
mov
in
fiadds
add
leave
cwtl
addb
jb
mov
pop
mov
fistpll
adc
mov
sbb
add
add
and
mov
das
hlt
fisubl
add
sbb
xlat
xchg
pop
int3
lods
push
enter
mov
pop
push
mov
mov
dec
mov
mov
movsl
sti
iret
and
mov
pushf
out
into
daa
pop
rol
add
add
mov
ja
mov
add
xchg
add
jecxz
add
mov
mov
inc
inc
xchg
pop
lret
mov
add
jmp
out
fs
add
mov
nop
roll
dec
mov
cmp
add
mov
add
mov
pop
push
add
sbb
daa
and
mov
mov
mov
add
mov
fcomip
xor
clc
dec
scas
mov
xchg
ds
rolb
mov
add
lea
add
add
mov
loop
mov
neg
fildl
xchg
add
fs
sub
mov
fsubrl
push
add
pop
cmpsl
fnstsw
jbe
in
dec
shl
add
dec
into
cmp
aaa
inc
fdivs
add
xlat
stos
dec
xor
add
mov
jns
std
jl
repnz
dec
sub
dec
inc
rolb
xor
mov
fstps
bound
mov
add
add
mov
testb
add
pop
pop
mov
lret
xor
mov
test
add
mov
push
and
inc
out
mov
pop
and
mov
or
or
lds
fwait
mov
stos
pop
ret
and
mov
and
mov
fildl
cmpsl
xor
mov
jecxz
scas
sub
popa
jmp
add
pop
xchg
add
popf
pop
aaa
addb
sbb
popa
fisttpll
repnz
add
push
test
mov
xor
xor
cmp
pushf
pop
xchg
dec
sub
cmpsb
aad
xchg
jge
add
xchg
int
push
push
insb
push
hlt
fcomip
add
in
fisubs
add
sub
mov
dec
push
or
add
mov
or
dec
mov
sbb
add
mov
pop
inc
test
and
push
ds
cmp
push
mov
sbb
push
repz
add
jge
add
lods
popa
adc
jnp
lods
fcoms
or
adc
inc
cmp
gs
add
in
xor
mov
add
cmp
add
lods
cltd
push
add
out
add
mov
add
jns
pop
loope
mov
popf
inc
push
test
mov
sbb
mov
rolb
outsb
lcall
pop
les
push
fisubs
addb
mov
jecxz
add
mov
mov
sbb
gs
imulb
dec
mov
add
loope
add
mov
cmpsl
push
add
test
jb
mov
add
movsb
mov
push
push
adc
mov
push
sarl
lds
jb
mov
inc
lock
mov
arpl
in
pop
xchg
jbe
add
in
xchg
mov
jns
dec
jmp
mov
or
shll
sbb
cmp
xor
aaa
mov
hlt
lss
mov
pop
mov
addb
rorl
stc
xchg
jecxz
adc
add
outsb
push
mov
inc
stos
cmp
in
pop
inc
add
mov
call
adc
ret
dec
dec
mov
mov
add
mov
xor
mov
pop
cmc
stc
outsb
int
xchg
add
add
push
mov
sahf
mov
pop
in
xchg
and
mov
add
out
add
mov
dec
or
mov
scas
sub
xor
add
sbb
popa
add
mov
add
jo
mov
jbe
xor
bound
mov
lock
add
mov
xor
js
testb
mov
sbb
test
jne
pop
dec
push
xor
add
popf
or
mov
jge
and
mov
or
stc
ss
or
negl
mov
push
add
lahf
mov
add
add
add
pop
cmp
mov
xchg
dec
movsl
mov
push
xor
ret
addb
mov
addl
mov
test
ret
sub
insb
xchg
xlat
lahf
jmp
movsl
xchg
cwtl
sub
fisttpll
mov
ds
jb
mov
loopne
mov
rorw
and
add
mov
in
out
je
sub
fucom
shrl
mov
xchg
cwtl
decb
or
pop
and
mov
sbb
xor
mov
mov
adc
add
in
push
lods
data16
addb
movsl
add
add
xchg
jno
add
add
jecxz
mov
push
call
popa
cwtl
mov
mov
bound
mov
in
mov
pop
mov
mov
xchg
lret
repnz
pop
lcall
rolb
mov
mov
ror
aas
push
cmc
ljmpw
inc
dec
outsb
lret
mov
cltd
repnz
adc
mov
cld
adc
xor
mov
cmp
jge
addb
jmp
or
movsl
out
pushf
ss
push
sub
dec
rolb
xor
or
push
cwtl
in
adc
dec
pop
inc
dec
imul
test
push
aas
mov
add
rolb
mov
sahf
push
outsb
xor
inc
lea
mov
repnz
mov
call
lahf
aas
rolb
inc
movb
mov
fisubs
pusha
add
mov
addb
leave
inc
jecxz
add
js,pt
pop
dec
sbb
ss
mov
fnop
add
pusha
add
mov
cld
pop
pop
mov
divl
mov
push
leave
mov
js
loopne
mov
es
xor
mov
mov
sub
push
add
pop
or
cmp
add
adc
mov
add
add
mov
add
mov
xchg
scas
js
jno
add
mov
mov
pop
mov
mov
mov
jno
shll
add
in
xor
mov
lret
outsb
cmp
jo
mov
add
fidivrs
inc
inc
add
out
fcomps
push
enter
mov
scas
in
mov
push
pop
jl
fcoml
mov
enter
mov
outsl
fdivl
mov
daa
lret
xchg
add
mov
loop
mov
fisubrs
add
mov
mov
movsb
enter
out
xchg
test
add
lods
and
js
mov
add
push
add
test
ficoml
sbb
adc
call
fadds
and
or
mov
clc
mov
adc
mov
sub
add
add
loope
xchg
jmp
xchg
add
add
add
mov
mov
int3
add
mov
loop
mov
bound
mov
mov
call
and
mov
bound
mov
push
imul
mov
bound
mov
push
sub
push
add
sub
mov
jmp
add
movsb
mov
inc
add
mov
or
mov
movsl
rolb
mov
xor
mov
rolb
mov
jp
stc
adc
xchg
loope
in
pxor
mov
and
loope
add
dec
mov
cmp
mov
xchg
add
leave
sbb
mov
cmp
pop
repnz
add
insb
mov
add
aam
push
sahf
push
push
push
adc
jbe
out
dec
outsl
dec
xchg
or
pop
cwtl
mov
mov
add
adc
mov
aas
ljmp
lret
push
adc
int3
mov
lock
mov
add
inc
div
sti
je
sbb
lret
or
mov
sbb
add
addb
loop
mov
mov
add
rol
xor
cmc
push
leave
das
xor
lcall
divb
cli
leave
inc
fwait
addb
aad
mov
out
cmc
jl
insl
cmc
out
xchg
pop
xchg
and
lock
int3
scas
jle
test
mov
mov
ffreep
in
inc
mov
push
xor
mov
pop
cld
scas
aas
outsl
outsl
jmp
mov
add
inc
icebp
in
mov
mov
add
popf
sbb
pxor
sbb
cmp
int3
loopne
mov
dec
jecxz
and
add
add
mov
addb
mov
add
pop
stos
sbb
int3
pop
adc
in
add
mov
into
iret
inc
add
mov
mov
mov
xchg
cmp
std
pop
xchg
xchg
push
add
lods
into
jg
dec
fstp
pop
out
adc
mov
inc
add
mov
inc
sti
repnz
mov
add
or
fs
into
mov
lret
sub
sbb
or
xchg
fisttpl
add
add
rcrl
mov
mov
dec
and
mov
hlt
data16
add
mov
dec
push
add
xlat
lock
jle
loop
mov
mov
sub
out
scas
dec
xor
mov
xor
mov
inc
test
jo
mov
and
add
insb
int3
mov
filds
fcomp
cmp
ljmp
popa
push
inc
out
mov
mov
push
add
mov
mov
add
insl
lods
jns
xor
add
mov
pusha
add
test
mov
stos
mov
mov
mov
add
lret
mov
das
cmp
mov
mov
notl
push
imul
ficoms
orl
cmp
mov
add
mov
pop
popa
ja
addr16
adc
aam
mov
scas
ss
mov
mov
mov
jg
enter
call
add
dec
mov
aaa
fldt
mov
stos
enter
add
and
jb
mov
pushf
add
mov
cwtl
cwtl
movb
imulb
sub
sbb
add
push
loopne
mov
push
sub
mov
mov
fdivr
jle
ds
push
imul
rcll
arpl
add
inc
aaa
pusha
add
add
es
adc
rolb
jne
add
mov
rcrl
mov
mov
mov
mov
fstps
sbb
mov
add
add
test
mov
fwait
into
push
test
and
mov
adc
pop
sub
add
add
sub
test
int3
in
push
cmp
sub
add
bound
mov
repnz
sub
js
aaa
and
add
add
into
aaa
std
mov
and
xor
mov
jmp
and
hlt
inc
add
stos
je
mov
aas
dec
jge
pop
std
add
mov
fstl
mov
test
xchg
push
aam
add
addb
sub
mov
pop
mov
loope
repnz
mov
inc
push
cwtl
movsl
in
bound
mov
inc
int
add
scas
mov
mull
dec
jecxz
cmp
or
insl
gs
pop
les
notb
mov
sub
insb
pop
int
and
mov
js
cmp
movsb
mov
cmp
xor
mov
mov
leave
push
cmpsl
sub
pop
add
xor
mov
jmp
add
sub
add
mov
add
mov
xchg
bound
mov
add
inc
add
in
nop
leave
jmp
jne,pt
add
mov
mov
push
mov
nop
leave
jmp
jecxz
inc
add
jo
add
movsl
mov
mov
cmp
ret
jbe,pn
add
roll
in
cmpl
push
mov
nop
leave
jmp
jne
add
add
cmp
out
inc
add
add
cs
pushf
enter
adc
add
repnz
nop
cld
jae
sub
lret
leave
clc
repnz
nop
cld
jae
out
xchg
or
add
jbe
in
mov
clc
repnz
nop
cld
jae
adc
fimull
mov
clc
repnz
nop
cld
jae
or
add
icebp
add
mov
adc
repnz
nop
cld
jae
add
add
add
lea
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
or
add
pop
clc
repnz
nop
cld
jae
imul
add
jecxz
add
add
add
jne
roll
add
add
and
mov
stos
push
mov
nop
leave
jmp
add
rcrl
xchg
icebp
mov
jae
pop
mov
clc
repnz
nop
cld
jae
mov
loop
push
mov
nop
leave
jmp
roll
lods
jmp
cs
clc
repnz
nop
cld
jae
add
mov
add
add
clc
repnz
nop
cld
jae
adc
nop
add
pusha
add
push
mov
nop
leave
jmp
add
add
outsl
test
push
mov
nop
leave
jmp
imul
mov
cmpl
push
mov
nop
leave
jmp
add
add
add
or
mov
xchg
ret
or
clc
add
add
mov
cmp
in
nop
leave
jmp
push
add
inc
mov
lock
push
mov
xchg
ret
add
rolb
int3
add
add
mov
ret
mov
nop
nop
cld
jae
add
add
xor
movzwl
clc
repnz
nop
cld
jae
add
dec
add
scas
cmpw
push
mov
nop
leave
jmp
xchg
sub
add
add
and
add
repnz
nop
cld
jae
jbe
add
push
push
mov
nop
leave
jmp
popa
popa
add
add
add
add
add
mov
in
nop
leave
jmp
popl
clc
fs
add
aam
fisubrs
rcll
testl
add
cli
add
mov
add
add
add
repnz
nop
cld
jae
mov
push
mov
xchg
ret
xchg
add
dec
shll
cmp
in
add
add
pushf
add
add
inc
push
push
insl
cmp
mov
xchg
ret
add
add
add
add
push
mov
nop
leave
jmp
or
jmp
add
cmpsb
imul
nop
nop
cld
jae
lods
add
mov
shll
lock
push
mov
nop
leave
jmp
add
jne
add
mov
xchg
ret
pushf
add
add
jmp
jmp
cmpl
push
mov
nop
leave
jmp
adc
add
add
lret
xlat
popf
mov
clc
repnz
nop
cld
jae
jbe
xchg
aam
mov
mov
repnz
nop
cld
jae
jecxz
jge
xadd
mov
mov
inc
add
mov
add
popl
jno
call
nop
nop
cld
jae
add
add
out
add
add
in
nop
leave
jmp
add
add
loop
mov
or
push
mov
nop
leave
jmp
add
icebp
jbe
adc
mov
clc
repnz
nop
cld
jae
add
push
test
dec
sub
push
testl
cs
adc
add
es
lods
clc
repnz
nop
cld
jae
xchg
pushf
xchg
add
add
add
clc
repnz
nop
cld
jae
jecxz
add
pop
push
mov
xchg
ret
jmp
add
cli
push
cmpsb
cmp
fmull
nop
cld
jae
jno
add
add
add
add
repnz
nop
cld
jae
clc
jbe
loopne
mov
mov
pop
push
mov
nop
leave
jmp
add
fisubl
stos
lea
push
mov
nop
leave
jmp
loopne
add
push
clc
repnz
nop
cld
jae
mov
sldt
test
nop
nop
cld
jae
add
add
inc
add
add
clc
repnz
nop
cld
jae
add
sldt
icebp
sbb
nop
cld
jae
cs
add
add
jo
test
adc
push
clc
repnz
nop
cld
jae
add
add
cli
jecxz,pt
sahf
mov
clc
repnz
nop
cld
jae
xchg
jge
mov
mov
mov
mov
clc
repnz
nop
cld
jae
jmp
push
add
mov
push
test
inc
sub
repnz
nop
cld
jae
bound
xchg
cli
aam
cmp
push
mov
nop
leave
jmp
xchg
int
jo
pop
clc
repnz
nop
cld
jae
push
add
cli
jecxz
push
or
and
clc
repnz
nop
cld
jae
jge
add
out
loopne
sbb
nop
cld
jae
add
lds
ja
clc
repnz
nop
cld
jae
add
lds
rolb
add
mov
push
mov
xchg
ret
add
int
jo
add
and
clc
repnz
nop
cld
jae
add
xchg
add
out
add
push
mov
nop
leave
jmp
lods
shr
adc
add
call
clc
repnz
nop
cld
jae
jecxz
xchg
add
lock
add
add
add
adc
add
and
loop
mov
decl
clc
repnz
nop
cld
jae
jne
out
add
xchg
mov
push
mov
xchg
ret
add
or
filds
mov
cmp
ret
add
add
mov
in
jl
add
push
add
aam
outsb
es
xchg
push
mov
xchg
ret
int3
fiaddl
lods
jbe
add
add
rclb
repz
xchg
ret
jne
add
mov
repnz
nop
cld
jae
dec
xchg
jno
add
cli
add
mov
clc
repnz
nop
cld
jae
jo
xchg
jbe
push
je
clc
repnz
nop
cld
jae
fiaddl
xchg
in
nop
leave
jmp
add
add
sets
loopne
mov
xchg
xor
jge
mov
adc
or
mov
ljmp
xchg
clc
repnz
nop
cld
jae
jne
jge
add
add
xor
mov
xchg
ret
pop
add
jecxz
or
mov
push
mov
nop
leave
jmp
add
int
loopne
imul
repnz
nop
cld
jae
mov
addb
mov
add
clc
repnz
nop
cld
jae
push
add
jne
add
clc
repnz
nop
cld
jae
add
jno
add
repnz
nop
cld
jae
add
add
out
mov
mov
push
mov
nop
leave
jmp
add
jecxz
pop
clc
repnz
nop
cld
jae
lods
mov
xchg
clc
pop
inc
clc
repnz
nop
cld
jae
add
add
add
add
push
push
mov
xchg
ret
add
jmp
add
clc
add
repz
mov
nop
leave
jmp
fs
add
pushf
add
js
js
push
mov
nop
leave
jmp
jbe
icebp
add
add
add
push
mov
nop
leave
jmp
aam
add
jg
push
mov
nop
leave
jmp
add
cli
lods
add
push
push
add
or
inc
and
clc
repnz
nop
cld
jae
mov
ficoml
mov
xchg
ret
add
add
add
add
nop
leave
jmp
or
add
add
dec
add
nop
nop
cld
jae
add
add
pushf
lret
pop
mov
clc
repnz
nop
cld
jae
jecxz
add
add
push
mov
xchg
ret
dec
loopne
mov
out
or
movsb
push
mov
nop
leave
jmp
add
add
add
add
popf
push
add
clc
repnz
nop
cld
jae
sldt
call
outsl
push
mov
nop
leave
jmp
add
cli
add
aad
sub
add
push
mov
nop
leave
jmp
jbe
jbe
lret
arpl
add
repnz
nop
cld
jae
jbe
or
cmp
clc
repnz
nop
cld
jae
fiaddl
cli
jbe
lods
mov
clc
repnz
nop
cld
jae
lret
icebp
add
lods
mov
clc
repnz
nop
cld
jae
add
dec
inc
add
aaa
inc
fcomi
icebp
push
mov
nop
leave
jmp
add
jo
cli
add
nop
leave
jmp
add
add
add
add
fimull
nop
cld
jae
adc
jecxz
add
aaa
and
push
clc
repnz
nop
cld
jae
add
add
inc
add
jl
and
repnz
nop
cld
jae
add
lods
jo
mov
clc
repnz
nop
cld
jae
add
add
xchg
aad
add
add
unpcklps
call
nop
nop
cld
jae
add
add
aam
mov
push
mov
xchg
ret
add
adc
add
lea
mov
cmp
ret
roll
jbe
xchg
add
add
mov
nop
leave
jmp
add
mov
add
inc
sbb
lcall
add
rolb
int
sub
aam
mov
in
nop
leave
jmp
add
add
je
clc
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
fs
clc
add
aam
adc
mov
nop
nop
cld
jae
add
mov
add
repnz
nop
cld
jae
xchg
clc
add
icebp
add
loope
adc
dec
inc
clc
repnz
nop
cld
jae
adc
jbe
or
repnz
nop
cld
jae
jbe
fs
sub
icebp
das
mov
clc
repnz
nop
cld
jae
adc
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
inc
add
add
lds
add
nop
nop
cld
jae
add
add
or
aam
or
nop
cld
jae
icebp
cmpsb
or
push
test
repnz
nop
cld
jae
add
add
cli
in
push
push
mov
xchg
ret
jno
add
mov
sbb
mov
add
add
adc
add
add
add
or
clc
repnz
nop
cld
jae
add
lock
clc
repnz
nop
cld
jae
lldt
mov
jnp
repz
repnz
nop
cld
jae
clc
adc
add
push
clc
repnz
nop
cld
jae
int3
add
add
add
add
xor
and
nop
nop
cld
jae
add
or
inc
push
mov
xchg
ret
add
add
cmpsb
dec
add
inc
mov
add
clc
repnz
nop
cld
jae
jge
aam
and
push
mov
xchg
ret
add
jbe
add
popa
pop
cltd
mov
clc
repnz
nop
cld
jae
push
cmp
cli
add
sub
movb
add
clc
repnz
nop
cld
jae
inc
add
stos
push
mov
xchg
ret
add
add
add
jb
mov
sub
clc
repnz
nop
cld
jae
int
add
push
add
add
clc
repnz
nop
cld
jae
add
push
add
scas
cmpl
push
mov
nop
leave
jmp
divl
das
pop
push
mov
nop
leave
jmp
add
add
aam
add
push
clc
repnz
nop
cld
jae
jne
loopne
lahf
xor
clc
repnz
nop
cld
jae
mov
add
add
or
rclb
nop
leave
jmp
add
or
add
nop
cld
jae
jno
cli
add
adc
sub
cmp
clc
repnz
nop
cld
jae
xchg
fiaddl
jl
cmp
repnz
nop
cld
jae
out
add
mov
dec
call
clc
repnz
nop
cld
jae
shrb
or
clc
repnz
nop
cld
jae
push
int
loopne,pn
lods
add
sub
push
mov
nop
leave
jmp
scas
add
jge
shll
clc
repnz
nop
cld
jae
add
jbe
add
add
fucomi
rolb
add
repnz
nop
cld
jae
add
add
mov
nop
cld
jae
add
inc
add
jge
rcl
push
clc
repnz
nop
cld
jae
mov
cli
scas
xchg
or
mov
dec
push
clc
repnz
nop
cld
jae
int3
add
add
add
jb
mov
repnz
nop
cld
jae
add
jmp
ds
rolb
mov
mov
nop
leave
jmp
mov
add
add
add
pop
mov
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
pop
or
add
roll
fildl
nop
nop
cld
jae
add
jo
imul
mov
lock
add
add
add
imul
popa
idivb
add
clc
repnz
nop
cld
jae
jbe
add
add
call
clc
repnz
nop
cld
jae
add
add
dec
mov
push
mov
xchg
ret
testl
add
fnstsw
clc
repnz
nop
cld
jae
popa
cli
xchg
shll
inc
in
push
mov
xchg
ret
add
add
add
add
adc
repnz
nop
cld
jae
roll
add
and
mov
inc
das
lea
push
mov
nop
leave
jmp
add
scas
ss
add
clc
repnz
nop
cld
jae
add
add
add
pop
pusha
add
push
stc
inc
add
add
xchg
inc
add
add
mov
xor
clc
repnz
nop
cld
jae
add
or
lret
notl
mov
pop
clc
repnz
nop
cld
jae
add
inc
clc
roll
out
xor
or
inc
push
mov
xchg
ret
inc
add
loopne
mov
clc
repnz
nop
cld
jae
icebp
jne
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
loopne
add
cli
add
lcall
add
add
jecxz
jo
add
in
pop
clc
repnz
nop
cld
jae
lret
add
jge
fidivl
mov
clc
repnz
nop
cld
jae
inc
add
fisttpl
nop
nop
cld
jae
add
imul
repz
inc
cmp
mov
xchg
ret
add
dec
add
cmp
push
dec
pop
jmp
jmp
push
lds
add
add
icebp
cli
jbe
aam
and
fiadds
nop
nop
cld
jae
lock
cli
lds
into
je
clc
repnz
nop
cld
jae
ror
push
and
push
mov
xchg
ret
add
sub
add
push
mov
xchg
ret
add
add
or
inc
jmp
dec
or
repnz
nop
cld
jae
mov
imul
lcall
repnz
nop
cld
jae
lret
int
and
clc
repnz
nop
cld
jae
inc
add
xchg
jne
mov
clc
repnz
nop
cld
jae
add
sub
rolb
mov
repnz
nop
cld
jae
push
xchg
add
adc
jae
pop
push
mov
nop
leave
jmp
add
add
lock
call
clc
repnz
nop
cld
jae
add
push
inc
cltd
push
push
mov
nop
leave
jmp
jbe
jecxz
inc
add
jo
imul
cmp
repnz
nop
cld
jae
fisubrl
lret
ret
push
mov
xchg
ret
clc
jmp
or
add
lcall
nop
cld
jae
add
add
add
rclb
in
inc
add
add
adc
add
jmp
add
repnz
nop
cld
jae
or
add
lods
popa
push
mov
xchg
ret
xchg
add
cli
adc
xchg
add
clc
repnz
nop
cld
jae
add
add
rolb
add
mov
push
mov
xchg
ret
idivl
add
repz
cmp
mov
xchg
ret
add
mov
add
jno
inc
addb
pop
inc
clc
repnz
nop
cld
jae
lods
fiaddl
adc
add
or
repnz
nop
cld
jae
add
add
xchg
push
push
mov
nop
leave
jmp
cs
mov
clc
das
jmp
clc
repnz
nop
cld
jae
add
bound
xor
mov
ret
mov
xchg
ret
add
icebp
add
adc
pop
pushl
push
mov
xchg
ret
add
aam
lahf
push
push
mov
xchg
ret
add
add
jne
add
mov
clc
repnz
nop
cld
jae
icebp
add
add
mov
mov
mov
clc
repnz
nop
cld
jae
inc
cmp
cmpsb
jnp
subl
jae
add
cmp
test
nop
nop
cld
jae
jbe
rcr
clc
repnz
nop
cld
jae
or
cmpsb
add
add
jmp
incl
ds
lods
add
icebp
mov
mov
xchg
ret
imul
mov
add
clc
repnz
nop
cld
jae
jbe
lods
add
or
add
repnz
nop
cld
jae
add
or
add
add
xor
add
push
mov
nop
leave
jmp
fimull
inc
mov
push
mov
nop
leave
jmp
xchg
add
int3
ret
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
xchg
jge
push
lock
mov
jmp
cmp
ret
notl
inc
or
xchg
int3
dec
jmp
add
loopne,pn
psllw
jne
loopne,pn
sub
add
add
ret
clc
repnz
nop
cld
jae
jo
add
add
lahf
je
clc
repnz
nop
cld
jae
add
mov
nop
leave
jmp
rolb
lods
add
lods
jbe
mov
clc
repnz
nop
cld
jae
add
add
push
add
loopne
shl
add
ror
jbe
add
dec
repnz
cmpsl
mov
popf
clc
repnz
nop
cld
jae
inc
icebp
add
jne
clc
repnz
nop
cld
jae
fiaddl
add
add
popf
mov
clc
repnz
nop
cld
jae
add
popa
mov
push
fs
iret
or
cld
jae
add
mov
add
in
nop
leave
jmp
add
or
jne
scas
add
inc
mov
shl
clc
repnz
nop
cld
jae
cmp
push
add
rcrl
mov
xchg
ret
bound
add
dec
rep
clc
repnz
nop
cld
jae
add
add
jmp
add
cli
push
mov
nop
leave
jmp
cli
jmp
jno
imul
das
jne
push
mov
nop
leave
jmp
add
add
mov
xor
mov
nop
nop
cld
jae
add
scas
add
test
icebp
clc
repnz
nop
cld
jae
or
add
mov
xchg
ret
add
lret
jbe
xchg
les
repnz
adc
inc
add
div
add
pop
add
jbe
add
clc
repnz
nop
cld
jae
add
jns
jge
clc
repnz
nop
cld
jae
add
add
icebp
mov
test
clc
repnz
nop
cld
jae
add
xchg
lock
add
add
add
leave
push
mov
nop
leave
jmp
ds
dec
add
icebp
xchg
add
mov
xchg
ret
add
icebp
add
popa
mov
cmp
mov
xchg
ret
clc
cmpsb
jo
pushf
int3
loopne
add
pop
clc
repnz
nop
cld
jae
popa
add
mov
repz
mov
xchg
ret
bound
add
jecxz
add
fmuls
mov
xchg
ret
add
lods
push
shrb
sbb
mov
xchg
ret
add
cmp
jecxz
add
mov
call
push
mov
nop
leave
jmp
add
add
imul
in
nop
leave
jmp
xchg
add
pop
lods
mov
mov
nop
leave
jmp
cli
bound
add
xchg
sub
clc
repnz
nop
cld
jae
jmp
mov
fs
xor
push
mov
xchg
ret
icebp
add
add
mov
push
mov
xchg
ret
cmpsb
add
add
inc
xchg
es
notl
xchg
out
mov
clc
repnz
nop
cld
jae
add
bound
dec
push
and
push
push
mov
xchg
ret
jge
add
lret
add
mov
adc
cld
jae
add
pusha
clc
repnz
nop
cld
jae
fcmovbe
fiaddl
add
cli
out
jb
mov
mov
incl
add
xchg
add
or
add
add
clc
repnz
nop
cld
jae
jge
icebp
add
and
in
nop
leave
jmp
shll
aam
jne
decl
nop
nop
cld
jae
add
pusha
add
repnz
nop
cld
jae
add
add
add
xchg
adc
adc
add
xchg
lods
add
or
add
bound
xor
in
nop
leave
jmp
fiaddl
flds
jo
push
mov
nop
leave
jmp
cmp
or
mov
add
out
add
push
mov
xchg
ret
add
add
aad
mov
push
adc
clc
repnz
nop
cld
jae
imul
add
add
push
mov
nop
leave
jmp
out
add
add
add
pop
loopne
add
add
jo
add
xchg
mov
add
mov
and
pop
add
add
jl
cmp
add
outsl
and
push
mov
xchg
ret
jecxz
add
jge
lret
dec
cmp
repnz
nop
cld
jae
add
mov
cli
add
xor
mov
add
mov
pop
add
add
cli
add
push
push
mov
nop
leave
jmp
add
add
cmp
cli
sbb
adc
add
clc
or
add
add
add
aam
add
rcrb
repnz
nop
cld
jae
pop
add
add
add
clc
repnz
nop
cld
jae
roll
cmp
aam
xor
clc
repnz
nop
cld
jae
ficoml
add
add
lock
mov
push
clc
repnz
nop
cld
jae
push
add
add
xchg
push
add
clc
repnz
nop
cld
jae
add
add
enter
nop
cld
jae
add
add
add
int
mov
clc
repnz
nop
cld
jae
add
lret
int
ret
js
add
clc
repnz
nop
cld
jae
adc
add
add
mov
xchg
ret
lods
or
add
sub
int3
std
pushl
add
aam
add
lea
repz
repnz
nop
cld
jae
add
add
aam
add
add
mov
fisttps
mov
adc
repnz
nop
cld
jae
fiaddl
jge
add
repnz
nop
cld
jae
roll
adc
call
call
in
nop
leave
jmp
add
add
jp
clc
repnz
nop
cld
jae
jbe
add
aam
add
mov
push
mov
nop
leave
jmp
add
add
jbe
add
jnp
nop
nop
cld
jae
popa
icebp
add
add
jmp
nop
leave
jmp
xchg
mov
idivl
add
add
adc
mov
nop
leave
jmp
adc
or
jecxz
lods
pusha
jmp
incl
jmp
add
pop
add
jo
add
cmpsb
add
add
out
rep
clc
repnz
nop
cld
jae
add
inc
jbe
icebp
jo
fdivrs
push
sub
in
nop
leave
jmp
int
clc
lds
xchg
notl
enter
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
fs
add
cli
xchg
fdivr
repnz
nop
cld
jae
lock
icebp
icebp
lcall
leave
jmp
add
rcl
icebp
adc
mov
add
add
repnz
nop
cld
jae
add
adc
nop
nop
cld
jae
add
add
fs
sti
push
mov
nop
leave
jmp
dec
jo
add
add
mov
nop
cld
jae
bound
add
insl
and
push
mov
xchg
ret
add
int
add
or
nop
leave
jmp
lock
xchg
rcll
mov
xor
push
mov
nop
leave
jmp
add
pushl
push
mov
nop
leave
jmp
adc
adc
add
xchg
loop
mov
mov
add
repnz
nop
cld
jae
add
add
or
push
rep
push
mov
nop
leave
jmp
jne
jo
add
xchg
add
inc
add
or
in
nop
leave
jmp
jo
jbe
inc
icebp
add
fdivrl
clc
repnz
nop
cld
jae
clc
jo
fwait
add
push
mov
nop
leave
jmp
lods
jno
sub
lods
jbe
mov
add
aam
add
add
add
imul
imul
sbb
repnz
nop
cld
jae
cli
add
add
dec
add
add
repnz
nop
cld
jae
add
add
jne
add
add
push
mov
xchg
ret
jo
out
add
mov
xchg
in
mov
push
mov
xchg
ret
xchg
xchg
add
push
add
lea
push
mov
xchg
ret
add
imul
std
push
mov
sahf
in
pop
mov
add
sahf
add
xchg
add
popa
add
mov
xchg
ret
cs
add
xchg
lods
bound
add
clc
repnz
nop
cld
jae
add
add
icebp
mov
add
mov
popa
add
add
lods
jp
push
mov
xchg
ret
add
add
mov
dec
icebp
sub
or
clc
repnz
nop
cld
jae
sub
cli
push
push
mov
xchg
ret
popl
or
or
bound
imul
push
mov
xchg
ret
add
imul
add
pusha
add
push
push
mov
xchg
ret
int
add
sub
lock
in
call
clc
repnz
nop
cld
jae
jecxz
testl
repnz
nop
cld
jae
add
lods
jno
add
nop
cld
jae
mov
jo
popa
push
lock
hlt
clc
repnz
nop
cld
jae
cli
aam
dec
and
aam
push
clc
repnz
nop
cld
jae
add
xchg
add
add
clc
repnz
nop
cld
jae
add
rcl
add
or
mov
clc
repnz
nop
cld
jae
jecxz
push
add
add
mov
push
mov
xchg
ret
pushf
add
idivl
add
add
jge
add
incl
push
mov
nop
leave
jmp
add
loopne
add
repnz
nop
cld
jae
push
lods
dec
add
add
sub
add
repnz
nop
cld
jae
add
icebp
add
shrl
mov
add
mov
add
mov
aad
add
push
add
push
mov
xchg
ret
lods
aam
clc
lret
or
popa
add
mov
nop
leave
jmp
push
push
add
fisubl
mov
lea
push
mov
xchg
ret
int3
sub
clc
cmp
add
push
push
mov
xchg
ret
fs
inc
add
add
mov
clc
repnz
nop
cld
jae
scas
lds
and
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
xchg
int
add
push
mov
nop
leave
jmp
add
bound
jp
arpl
clc
repnz
nop
cld
jae
jecxz
add
arpl
pusha
clc
repnz
nop
cld
jae
xchg
add
mov
add
nop
nop
cld
jae
add
add
xchg
clc
repnz
nop
cld
jae
add
icebp
loopne
push
clc
repnz
nop
cld
jae
aam
mov
aam
adc
dec
mov
clc
repnz
nop
cld
jae
add
mov
mov
nop
leave
jmp
popa
jno
jecxz
add
add
pushl
clc
repnz
nop
cld
jae
mov
add
xchg
jae
push
clc
repnz
nop
cld
jae
add
cli
cli
or
mov
push
mov
xchg
ret
push
inc
add
mov
incl
jg
clc
repnz
nop
cld
jae
inc
add
popa
inc
clc
roll
call
push
mov
nop
leave
jmp
add
add
jecxz
push
clc
repnz
nop
cld
jae
pop
int
jbe
loopne
jge
add
sub
add
icebp
add
mul
jo
add
add
add
add
clc
repnz
nop
cld
jae
jge
add
push
mov
clc
repnz
nop
cld
jae
add
add
xchg
add
mov
jmp
and
jo
add
add
push
add
in
nop
leave
jmp
add
verr
imul
pop
icebp
clc
repnz
nop
cld
jae
add
lds
or
rcll
in
nop
leave
jmp
add
cli
lods
add
jno
xchg
andl
mov
dec
add
clc
repnz
nop
cld
jae
add
add
ja
outsb
je
repnz
nop
cld
jae
jne
add
lods
push
clc
repnz
nop
cld
jae
test
add
lea
nop
cld
jae
add
add
lock
adc
in
nop
leave
jmp
icebp
cs
dec
int3
aam
subl
clc
repnz
nop
cld
jae
add
mov
jne
push
mov
xor
add
in
add
mov
sbb
add
add
insb
add
pop
push
mov
nop
leave
jmp
btr
add
decl
nop
nop
cld
jae
add
add
add
add
nop
nop
cld
jae
out
cli
add
mov
jbe
add
repnz
nop
cld
jae
add
loopne
add
add
push
clc
repnz
nop
cld
jae
cmpsb
jbe
cmp
clc
add
in
nop
leave
jmp
add
and
je
clc
repnz
nop
cld
jae
add
push
dec
cs
clc
repnz
nop
cld
jae
jbe
inc
int
add
inc
xor
movsb
addb
push
popl
nop
nop
cld
jae
fiaddl
out
xchg
scas
scas
push
add
fwait
add
mov
or
sub
roll
int
or
repnz
nop
cld
jae
imul
add
mov
repnz
nop
cld
jae
add
add
icebp
inc
add
jne
clc
repnz
nop
cld
jae
adc
popa
aas
sub
clc
repnz
nop
cld
jae
jmp
mov
jmp
mov
push
mov
nop
leave
jmp
xchg
lret
mov
push
mov
nop
leave
jmp
or
inc
or
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
pop
xchg
add
mov
mov
dec
mov
push
mov
xchg
ret
cli
add
add
sub
rolb
mov
add
repnz
nop
cld
jae
pushf
cmpsb
popa
lods
mov
add
mov
repnz
nop
cld
jae
pxor
cli
add
popa
lret
insb
inc
jb
push
mov
nop
leave
jmp
add
add
add
int
pop
jae
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
out
aam
jbe
setb
mov
popl
clc
repnz
nop
cld
jae
add
lods
or
add
dec
add
clc
repnz
nop
cld
jae
add
jg
clc
repnz
nop
cld
jae
icebp
add
dec
inc
loopne
add
mov
clc
repnz
nop
cld
jae
add
pop
pop
push
mov
nop
leave
jmp
push
popa
add
add
add
int
lahf
mov
clc
repnz
nop
cld
jae
mov
popl
xor
mov
add
clc
repnz
nop
cld
jae
aam
cmpsb
ficoml
repnz
nop
cld
jae
imul
jbe
clc
cmp
test
nop
cld
jae
add
add
rcll
push
in
add
add
loopne
mov
mov
clc
repnz
nop
cld
jae
jo
add
or
test
loop
call
in
nop
leave
jmp
adc
ds
testl
push
mov
nop
leave
jmp
mov
add
jae
mov
clc
repnz
nop
cld
jae
add
add
add
cmpsl
popl
nop
nop
cld
jae
add
add
add
mov
mov
xchg
ret
add
add
arpl
in
add
pop
and
push
add
add
xor
imull
mov
clc
repnz
nop
cld
jae
int
bound
push
push
and
mov
in
inc
add
push
adc
add
icebp
add
and
adc
shr
clc
repnz
nop
cld
jae
add
add
rolb
mov
loop
push
mov
xchg
ret
add
add
push
add
push
mov
add
add
and
fstpl
add
add
pop
jo
outsl
push
push
mov
nop
leave
jmp
add
add
add
movb
mov
nop
leave
jmp
add
add
popa
jnp
jne
clc
repnz
nop
cld
jae
add
add
add
lahf
pushl
push
mov
xchg
ret
roll
add
add
sub
push
mov
nop
leave
jmp
add
lret
lock
leave
add
clc
repnz
nop
cld
jae
or
add
xchg
add
or
clc
repnz
nop
cld
jae
bound
add
mov
clc
repnz
nop
cld
jae
xchg
add
adc
add
ja
pop
pop
push
mov
xchg
ret
add
jmp
aam
inc
dec
add
push
push
mov
xchg
ret
fisubrl
add
andl
nop
cld
jae
aam
cmpsb
not
add
repnz
nop
cld
jae
add
add
jbe
loopne
movsb
fisttpll
inc
fldl
xchg
ret
add
rorb
mov
repnz
nop
cld
jae
add
mov
jmp
add
clc
repnz
nop
cld
jae
out
ds
cmp
repnz
nop
cld
jae
jbe
loopne
add
add
clc
repnz
nop
cld
jae
add
addb
mov
add
stos
and
cld
jae
pop
xchg
nop
cld
jae
icebp
add
add
add
lock
add
in
nop
leave
jmp
loopne
add
add
fwait
add
clc
repnz
nop
cld
jae
add
rcll
popl
or
add
repnz
nop
cld
jae
int
add
test
add
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
add
add
cmp
push
mov
nop
leave
jmp
sldt
popa
add
add
mov
nop
nop
cld
jae
int3
add
add
lock
nop
nop
cld
jae
cli
push
inc
add
or
test
nop
cld
jae
jbe
mov
out
add
push
cmpsb
sbb
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
pop
mov
add
nop
cld
jae
sldt
inc
int
add
mov
push
mov
nop
leave
jmp
add
push
push
mov
xchg
ret
add
add
loopne
mov
jp
leave
push
mov
xchg
ret
fimull
add
add
add
add
mov
cli
mov
clc
repnz
nop
cld
jae
add
in
pop
push
mov
nop
leave
jmp
add
add
or
push
push
mov
xchg
ret
jbe
jbe
add
fisubrl
clc
repnz
nop
cld
jae
popa
mov
add
jbe
xchg
clc
push
push
mov
xchg
ret
scas
add
clc
add
cs
add
push
mov
xchg
ret
popl
pxor
popa
lods
add
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
xchg
add
nop
nop
cld
jae
jne
add
cli
cmpsb
lods
sti
jmp
add
pop
pushf
aam
cmp
adc
mov
icebp
add
push
mov
nop
leave
jmp
jne
lds
or
add
int3
mov
in
add
sub
add
add
in
leave
jl
mov
inc
and
clc
repnz
nop
cld
jae
jo
push
add
addb
out
add
mov
xchg
ret
add
lods
lock
scas
add
addb
push
decl
mov
clc
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
aam
add
xchg
aam
push
push
mov
xchg
ret
add
mov
jmp
xchg
push
fidivrs
push
mov
nop
leave
jmp
add
add
dec
pop
add
clc
repnz
nop
cld
jae
add
add
clc
add
mov
push
mov
xchg
ret
jge
int
mov
sti
clc
repnz
nop
cld
jae
int3
adc
or
dec
mull
sti
ljmp
cmp
add
jbe
add
add
add
add
ja
clc
repnz
nop
cld
jae
adc
adc
les
push
mov
nop
leave
jmp
add
add
shrl
add
repnz
nop
cld
jae
scas
adc
pusha
add
xor
push
add
add
add
lahf
add
mov
mov
push
mov
xchg
ret
add
popl
add
dec
add
pop
clc
repnz
nop
cld
jae
bound
inc
cs
add
addl
mov
cmp
in
nop
leave
jmp
jno
add
imul
je
clc
repnz
nop
cld
jae
jmp
add
mov
je
repnz
nop
cld
jae
lods
or
add
popf
div
push
mov
nop
leave
jmp
add
add
add
bound
lret
add
clc
repnz
nop
cld
jae
imul
cmpsb
add
dec
je
clc
repnz
nop
cld
jae
add
test
repnz
nop
cld
jae
jbe
adc
add
adc
mov
jne
clc
repnz
nop
cld
jae
jecxz
dec
adc
shl
rolb
mov
mov
add
leave
jmp
add
mov
clc
repnz
nop
cld
jae
jmp
sub
add
notb
dec
movzwl
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
xchg
add
add
jnp
dec
or
mov
xchg
ret
jmp
jbe
jne
add
add
nop
nop
cld
jae
mov
mov
enter
in
nop
leave
jmp
jmp
fs
or
repnz
nop
cld
jae
sub
inc
add
roll
push
push
mov
xchg
ret
inc
add
lods
add
xchg
jbe
mov
nop
cld
jae
add
add
add
nop
cld
jae
add
mov
add
add
and
mov
nop
leave
jmp
shlb
add
adc
push
mov
nop
leave
jmp
dec
roll
add
add
mov
mov
xchg
ret
add
add
add
lods
add
xchg
xchg
add
sub
push
mov
nop
leave
jmp
add
cli
add
add
data16
repnz
nop
cld
jae
testl
dec
clc
repnz
nop
cld
jae
add
cli
add
lds
add
cld
jae
cs
add
rclb
in
nop
leave
jmp
inc
add
or
lret
movsb
pusha
add
mov
leave
add
add
add
xchg
xor
mov
xchg
ret
or
add
add
add
xchg
cmp
repnz
nop
cld
jae
int3
pop
add
rolb
jge
icebp
mov
jmp
clc
repnz
nop
cld
jae
add
pushf
cli
fiaddl
add
idiv
push
clc
repnz
nop
cld
jae
mov
add
add
lods
add
nop
nop
cld
jae
add
icebp
rolb
mov
clc
repnz
nop
cld
jae
add
pop
pop
clc
repnz
nop
cld
jae
add
add
int3
jbe
and
add
add
clc
repnz
nop
cld
jae
mov
lds
mov
push
mov
xchg
ret
aam
aam
add
sbb
repnz
nop
cld
jae
xchg
add
adc
xor
fcomip
inc
add
push
inc
add
jbe
add
addr16
jne
xchg
cli
je
clc
repnz
nop
cld
jae
adc
add
add
push
mov
nop
leave
jmp
add
jbe
cmpsb
lret
movswl
clc
repnz
nop
cld
jae
add
add
pop
rolb
push
sub
test
fdivr
clc
repnz
nop
cld
jae
add
inc
lock
repnz
nop
cld
jae
add
aam
pop
dec
xor
mov
xorl
clc
repnz
nop
cld
jae
jge
loopne
mov
push
mov
xchg
ret
add
add
icebp
add
rolb
add
add
push
add
add
rol
cmpsb
add
add
repnz
nop
cld
jae
icebp
adc
jo
push
dec
xchg
clc
repnz
nop
cld
jae
add
lods
add
icebp
or
lods
add
clc
repnz
nop
cld
jae
popa
mov
addr16
cwtl
mov
push
mov
nop
leave
jmp
or
add
pop
jmp
add
add
jmp
roll
pop
lods
test
insl
sbb
pop
push
add
js
pop
addb
jo
add
nop
nop
cld
jae
add
add
jbe
imul
nop
cld
jae
jmp
add
lods
icebp
add
push
mov
nop
leave
jmp
mov
add
add
xchg
mov
mov
ret
push
mov
nop
leave
jmp
add
jbe
out
lock
add
fwait
mov
clc
repnz
nop
cld
jae
out
add
jecxz
aad
jnp
nop
nop
cld
jae
pushf
aam
popa
icebp
add
movzwl
clc
repnz
nop
cld
jae
add
add
add
dec
add
repnz
nop
cld
jae
add
add
add
push
add
push
mov
nop
leave
jmp
add
add
add
push
mov
xchg
ret
imul
add
add
add
mov
xchg
ret
inc
add
int3
jg
test
cli
clc
repnz
nop
cld
jae
lods
int3
add
test
out
clc
repnz
nop
cld
jae
lock
add
add
mov
mov
push
mov
nop
leave
jmp
scas
add
add
mov
cwtl
mov
clc
repnz
nop
cld
jae
mov
push
mov
sbb
add
lds
add
ja
loop
and
add
push
push
and
mov
in
nop
leave
jmp
push
add
add
jne
shl
push
mov
nop
leave
jmp
add
aam
aam
mov
push
mov
xchg
ret
add
mov
adc
jbe
add
or
in
nop
leave
jmp
add
clc
jno
add
mov
xor
push
mov
xchg
ret
icebp
add
add
add
cmpsb
mov
leave
push
mov
nop
leave
jmp
inc
add
add
push
jecxz
lods
push
mov
xchg
ret
cmpsb
add
popa
add
add
jo
mov
push
inc
add
add
add
sub
jbe
in
add
clc
repnz
nop
cld
jae
imul
add
repz
pop
adc
repnz
nop
cld
jae
bound
fs
add
adc
add
clc
repnz
nop
cld
jae
pushf
add
xchg
rep
clc
repnz
nop
cld
jae
add
add
mov
lahf
push
clc
repnz
nop
cld
jae
or
add
add
add
add
mov
xchg
ret
add
loopne
mov
lods
out
iret
push
clc
repnz
nop
cld
jae
push
xchg
add
add
out
jge
and
push
mov
xchg
ret
add
psubsb
mov
adc
repnz
nop
cld
jae
lock
shr
clc
repnz
nop
cld
jae
add
loopne
add
mov
push
mov
nop
leave
jmp
cli
add
loopne
add
adc
mov
add
clc
repnz
nop
cld
jae
mov
add
cld
jae
add
mov
add
in
inc
add
mov
xor
jle
ret
add
add
insl
outsb
add
and
dec
aas
sbb
stos
mov
mov
inc
mov
add
rolb
mov
add
inc
add
into
dec
dec
lret
aam
xchg
pop
subl
aaa
xchg
xor
adc
mov
sub
insb
daa
adc
xor
mov
jbe
outsb
rolb
mov
test
push
rcrl
mov
add
addr16
cmp
lods
roll
inc
call
mov
xor
mov
add
push
repnz
icebp
fildll
or
fisubrl
sub
xor
fcom
sbb
push
std
lock
mov
pop
mov
mov
add
fwait
mull
or
ret
sbb
xchg
fidivrl
lods
push
adc
jbe
push
xor
pop
xchg
loope
cmp
and
mov
rorl
rorl
sub
test
mov
fsubrl
add
mov
push
mov
add
jae
int
inc
jae
bound
mov
push
add
les
movsb
das
pop
mov
shll
outsl
push
ret
push
arpl
js
add
mov
rolb
mov
push
add
mov
sub
jb
mov
dec
ja
jb
mov
cli
lods
js
pop
xor
cld
cs
in
or
scas
test
add
loop
mov
lds
out
sub
xor
sub
jae
arpl
lret
fnsave
and
fdivrs
add
lcall
mov
in
mov
or
sub
mov
dec
jecxz
dec
arpl
cwtl
lock
jp
mov
js
push
call
sti
cmp
ss
pop
dec
loopne
mov
add
jmp
stos
or
add
mov
out
ljmp
mov
inc
add
lahf
mov
sbb
mov
cmp
mov
sarl
add
hlt
out
bound
mov
push
ret
dec
aas
loop
mov
pop
ret
popf
dec
popf
fs
lds
mov
xlat
addb
in
push
mov
test
int
cmp
push
cmp
push
inc
inc
xlat
insl
leave
push
cmp
divb
cmpsb
mov
jo
mov
add
ss
mov
mov
out
jg
cmp
aas
push
mov
divb
sub
add
faddp
dec
mov
jp
pushf
push
popa
mov
push
add
mov
neg
int
mov
mov
mov
add
dec
movsl
adc
push
cmc
std
test
hlt
addb
loop
mov
cmp
aaa
mov
ljmp
cltd
in
mov
mov
cmp
fwait
nop
add
in
cmpsl
mov
push
into
les
cmpsb
rolb
mov
mov
add
lds
mov
testl
add
addb
push
addb
pushf
xor
aad
add
popf
call
add
xchg
add
fsubrs
pop
pop
jmp
mov
sbb
fnstcw
sti
test
rsqrtps
mov
inc
jae
sub
dec
pusha
add
mov
aad
push
or
into
in
lock
pop
pop
cmpsl
addb
stc
out
fidivl
mov
leave
sbb
hlt
push
insl
fldl
sbb
add
ss
mov
inc
push
jge
in
in
pop
lahf
clc
call
addb
jo
mov
sub
mov
push
add
sub
xor
stc
jns
mov
bound
mov
fucomi
bound
mov
add
inc
add
and
push
xchg
add
add
mov
pop
and
add
add
gs
repnz
js
mov
mov
add
movsb
rolb
mov
lods
gs
ret
sub
es
mov
mov
lock
pop
icebp
xor
jmp
or
addb
movsb
add
add
cmp
or
mov
cmp
lahf
mov
cltd
pop
insb
jo
mov
adc
push
add
inc
pop
xor
mov
outsb
mov
mov
mov
add
push
rolb
mov
push
and
mov
add
mov
push
loop
mov
xchg
jle
repnz
add
xchg
pop
fbld
gs
insl
jne
out
ds
mov
or
mov
mov
lods
test
stos
fnstcw
lcall
into
pop
cld
mov
add
mov
leave
push
add
sti
xchg
add
sub
mov
testl
dec
shll
mov
dec
loop
mov
adc
mov
lea
rolb
mov
mov
add
repz
addb
mov
cmp
add
mov
mov
jl
out
cli
inc
xlat
jmp
sbb
mov
add
mov
dec
outsl
hlt
push
ja
out
ljmp
fnstenv
mov
pop
js
add
add
mov
mov
arpl
mov
mov
pop
xor
mov
out
test
xchg
inc
lds
cmp
dec
or
rolb
lret
mov
pop
jb
mov
add
lret
fistpll
dec
xchg
sub
mov
add
mov
or
add
addb
icebp
cmp
and
mov
fucomp
mov
add
lock
test
test
jl
add
pop
out
cwtl
xorl
cli
es
cmc
add
mov
xchg
xchg
js
jno
add
mov
bound
mov
addb
ret
enter
and
int3
push
add
xchg
loopne
mov
add
incl
in
fwait
sub
and
ds
sub
mov
jg
fwait
xchg
fstp
dec
pop
daa
fidivl
add
dec
sbb
mov
inc
xchg
pop
sbbl
out
xor
cmp
mov
pop
mov
imul
outsl
ret
sub
cmpsl
cli
push
add
stc
xor
add
ficoml
mov
xchg
pop
xchg
xchg
add
mov
mov
mov
ja
add
addb
int
mov
pop
xchg
mov
sub
pop
je
sti
imul
add
push
aad
xor
fisubs
in
imul
mov
mov
in
mov
add
jge
dec
mov
pop
ja
adc
mov
fildl
mov
push
stos
dec
pop
dec
dec
gs
rol
leave
int
cltd
into
mov
dec
addr16
jcxz
add
xchg
push
pop
xchg
xchg
mov
and
mov
aad
lods
push
add
loopne
mov
push
sbb
aas
adc
jg
xor
mov
ja
jmp
or
jg
les
pop
xchg
sbb
cltd
xor
add
scas
pop
inc
add
aaa
iret
arpl
push
int3
push
add
out
cmpsb
lahf
mov
mov
mov
xchg
pop
pop
and
mov
add
mov
and
fidivrl
push
adc
mov
jle
and
stc
sbb
or
lret
mov
por
pusha
add
or
dec
insl
add
xchg
fldenv
mov
scas
jnp
daa
je
or
xor
and
push
mov
enter
bound
mov
jl
adc
mov
lret
inc
rolb
mov
out
xchg
xor
mov
es
mov
data16
add
xchg
movsb
outsl
aas
insl
fmull
call
and
mov
pop
cli
jle
pop
pop
jnp
xchg
or
es
lret
sub
sbb
add
push
add
pop
inc
mov
add
mov
inc
das
fwait
rol
stc
push
repz
fbstp
sbb
xor
mov
loop
mov
lock
inc
add
andl
sbb
nop
add
mov
jne
mov
mov
shll
push
stc
scas
out
add
mov
add
aam
out
incl
gs
lods
inc
cld
sbb
sub
pop
es
push
aas
mov
shll
inc
add
addb
das
sub
sbb
add
add
hlt
daa
fcmovnbe
add
xchg
and
sbb
xor
mov
fldl
adc
mov
adc
mov
pop
adc
jg
adc
in
inc
lahf
bound
mov
cmpsl
cli
test
add
clc
ret
jno
lret
mov
and
mov
lret
push
jb
mov
repnz
mov
inc
icebp
lret
mov
and
out
xchg
add
mov
mov
xchg
test
adc
mov
add
sbb
xchg
mov
mov
add
mov
out
outsl
lds
sbb
in
cmp
add
add
xor
jae
shll
mov
pop
call
add
mov
add
mov
cmp
xchg
xor
popa
and
addb
popf
adc
inc
popa
daa
sbb
mov
mov
aaa
cmp
push
fmul
or
lret
sbb
xchg
repnz
xor
mov
pop
pop
mov
adc
mov
dec
mov
mov
jmp
add
rcll
out
jo
mov
or
fstps
cli
push
notl
fcompl
jecxz
pop
je
fs
lret
mov
or
add
cmc
xchg
jb
mov
sbb
icebp
mov
cwtl
jne
cld
and
mov
mov
add
sbbl
and
loop
mov
mov
add
mov
mov
mov
mov
mov
fdivrl
or
add
fstp
in
mov
mov
cld
dec
push
add
mov
push
int
inc
add
pop
push
push
mov
sbb
notl
rolb
mov
mov
mov
add
loope
mov
add
mov
cmpl
mov
cwtl
sub
movsl
cmp
popf
push
add
rolb
and
add
fisttpl
mov
fdivs
testb
out
xchg
add
mov
xor
daa
fwait
roll
add
cld
ds
jbe
jne
add
mov
jge
ljmp
sbb
dec
mov
jns
int3
mov
lods
mov
add
incb
cmc
jge
outsb
movsb
jg
fnstcw
xchg
ja
push
mov
add
xchg
cmc
imul
mov
add
sbb
mov
jecxz
jno
std
jae
mov
pop
push
mov
rolb
mov
jno
sti
fildll
mov
mov
mov
stos
std
cli
jmp
add
rolb
mov
jecxz
pop
pushf
mov
scas
cmp
add
cld
pop
out
cmp
pop
or
push
add
add
jno
add
and
mov
loope
or
add
xchg
mov
pop
sub
mov
mov
jg
sbb
add
in
hlt
idivb
fwait
lahf
loop
mov
cmp
in
scas
mov
mov
sbb
xor
addr16
mov
add
jbe
add
adc
add
sub
or
push
cmc
les
insb
leave
mov
and
mov
je
frstor
fmull
jmp
mov
sahf
push
in
rolb
ljmp
adc
mov
ljmp
mov
xorl
jb
mov
pushf
out
test
jns
xor
mov
mov
in
mov
add
cwtl
jne
jne
or
xlat
rolb
mov
or
add
aaa
dec
pop
enter
test
or
xchg
aad
sub
aam
aad
int3
sbb
add
sub
add
ja
add
fimull
add
cmp
sub
xchg
add
push
add
in
mov
or
mov
movsb
lahf
lea
add
add
rolb
mov
sbb
mov
fldl
in
incl
sub
jae
fadd
cmp
mov
imul
cmp
cli
cltd
xor
mov
jne
lcall
add
jl
sbb
add
xor
mov
popa
cmp
xor
mov
mov
add
add
add
mov
push
push
add
add
and
mov
push
jb
mov
fsubrl
add
sti
lahf
push
jae
mov
xchg
add
lods
test
mov
add
mov
push
fiadds
mov
ret
in
adc
inc
add
loope
hlt
xor
mov
movsl
jae
add
notl
xor
fists
ss
or
scas
adc
mov
add
mov
inc
enter
xor
pop
imul
jmp
add
ss
mov
nop
add
mov
jmp
add
add
inc
add
sub
jg
add
popf
loop
mov
in
arpl
add
push
je
add
lcall
fxch
and
mov
xchg
out
dec
jne
ror
test
dec
push
cmpsl
addb
xchg
add
xor
mov
dec
jnp
int
mov
xchg
xchg
sub
rolb
cltd
fldenv
cwtl
xchg
loopne
mov
add
cmc
rolb
mov
cltd
pop
mov
cmp
scas
pop
jno
enter
dec
cltd
push
xor
mov
add
mov
test
push
mov
mov
mov
mov
popf
jae
pop
push
daa
out
les
or
mov
inc
jmp
pmuludq
add
mov
mov
pop
pusha
add
add
mov
jl
add
mov
lods
mov
in
cli
sbb
sub
mov
inc
std
ljmp
mov
outsl
pop
cmp
xor
mov
mov
jbe
dec
jae
add
mov
pop
decb
popa
leave
jmp
cld
jne
addr16
test
ss
jbe
add
test
adc
test
jl
mov
iret
mov
mov
sbb
adc
mov
add
loope
movsb
cmpsb
outsb
movnti
popf
pop
test
push
add
cmp
pop
imul
mov
popa
push
imul
rolb
mov
in
push
mov
mov
xchg
inc
inc
dec
in
mov
cmpsb
push
add
shrl
sbb
lods
setg
mov
inc
sub
push
add
and
les
fcoms
std
inc
sbb
mov
lods
jno
movsl
mov
cld
aaa
lcall
push
fidivl
mov
add
dec
and
pop
pop
sub
add
inc
add
add
mov
mov
inc
cwtl
mov
pop
dec
rcrl
mov
inc
dec
fs
mov
outsl
jns
dec
pushf
mov
pusha
add
cmp
sub
push
add
jnp
cld
push
nop
add
push
push
add
jecxz
add
movsb
jmp
aam
pop
xor
mov
sub
adc
mov
lea
jge
inc
mov
mov
push
arpl
add
insl
in
lcall
sti
addr16
pop
stc
inc
mov
add
mov
stos
int3
and
mov
sub
xchg
add
mov
push
xchg
inc
add
add
push
and
test
dec
mov
testb
sub
fdiv
ret
xchg
test
xor
push
repnz
add
in
add
faddl
fisttpll
jecxz
insl
movsl
jge
adc
cld
loopne
mov
mov
cmp
add
lret
mov
shl
leave
and
lock
inc
add
mov
clc
mov
pop
fidivrs
jmp
add
fisubl
je
sub
hlt
dec
push
xor
mov
add
or
movsl
cmp
mov
mov
dec
popa
lea
sbb
in
imul
out
xor
dec
xor
loop
mov
mov
pop
repnz
dec
scas
cmp
push
push
loope
js
cmp
scas
jns
js
dec
or
push
add
int
or
ficompl
mov
faddl
cmp
jne
add
mov
xor
mov
into
cmovle
ss
mov
add
fsubrl
add
dec
fadds
mov
mov
mov
pop
in
jb
mov
add
lods
cli
mov
mov
mov
dec
outsb
or
add
adc
cmpsb
and
mov
call
mov
sbb
pop
sbb
pop
xor
les
xlat
push
test
add
mov
and
push
dec
hlt
add
pop
sahf
test
jp
rolb
cmpsb
dec
fsts
add
mov
aam
or
mov
das
ret
andl
les
mov
in
outsb
xchg
lcall
sbb
push
jo
mov
out
test
add
int
test
cmp
int
fcompl
add
mov
sub
add
add
fs
add
rolb
mov
pop
data16
add
xchg
jecxz
cmpsl
bound
mov
fidivs
add
inc
arpl
add
mov
jmp
roll
stos
jge
adc
mov
cmp
rolb
insl
loopne
mov
xchg
mov
add
dec
and
mov
add
mov
pop
out
pop
mov
pop
adc
mov
pop
stos
lcall
push
adc
cmp
mov
or
sub
in
lcall
pop
and
mov
ret
fwait
push
xchg
jae
push
movsl
adc
add
add
sub
inc
scas
repnz
stos
in
inc
jg
inc
aad
sbb
rolb
mov
mov
lods
or
and
mov
fucomi
adc
mov
pop
cmp
bound
mov
addb
jle
add
outsb
int3
aad
sub
scas
cs
ljmp
push
out
cmp
sub
loope
push
inc
add
decl
lret
clc
cmp
insb
fnclex
add
aam
test
sbb
mov
lock
or
add
add
sub
dec
jo
mov
ss
push
inc
add
cmp
xchg
add
inc
ficomps
ljmp
repz
sub
scas
scas
add
xor
mov
or
push
dec
inc
stc
rolb
mov
sub
mov
mov
cli
pop
push
test
cmc
test
mov
jmp
push
aaa
mov
add
add
mul
imul
pop
xor
push
sbb
mov
push
mov
sub
or
rolb
aad
add
test
mov
dec
daa
xchg
imul
inc
bound
mov
add
out
rorl
scas
or
stos
xchg
inc
enter
inc
sbb
cmp
jle
mov
mov
jmp
add
mov
xor
imul
push
jo
mov
movsb
mov
lret
loope
popf
adc
mov
shll
push
rolb
mov
mov
daa
add
mov
mov
mov
mov
mov
add
adc
push
add
stos
insb
pop
sub
adc
clc
stc
or
mov
push
popa
add
jae
pop
and
add
mov
shr
mov
jb
mov
addb
jbe
pop
ljmp
popa
cltd
xchg
cmc
imul
sbb
push
sbb
cmp
sahf
xchg
mov
mov
pop
push
push
lock
add
push
sahf
inc
dec
push
jae
adc
mov
add
mov
ret
mov
stos
push
add
mov
add
cmc
or
adc
mov
push
fisubrl
mov
add
insl
inc
inc
cmp
add
movsl
add
mov
cmpsb
sub
incb
sbb
ficoml
mov
insb
and
mov
add
movsb
stos
sahf
adc
mov
add
mov
outsb
aad
scas
xor
add
jns
movsl
add
mov
add
add
jno
sub
idivb
fwait
ja
add
movsl
fdivr
or
dec
adc
mov
in
xchg
jg
loopne
mov
pop
xchg
jnp
xchg
pop
sbb
cmp
add
enter
add
jb
mov
hlt
fs
xor
daa
pop
cld
xchg
push
cmp
jmp
add
add
push
jnp
pop
jge
mov
lcall
add
mov
mov
add
mov
jne
aaa
stc
xor
mov
lcall
fld
shll
add
add
rolb
mov
test
sub
in
iret
addb
stos
lods
push
sbb
mov
mov
jge
iret
adcl
loope
jg
jmp
mov
mov
pop
jmp
mov
pop
fstpl
movsb
xchg
adc
pop
roll
add
mov
pop
and
cmp
mov
jge
dec
push
and
test
adc
lock
mov
xchg
sub
push
das
adc
sahf
push
push
mov
add
mov
jnp
xor
mov
jmp
add
movsw
insb
push
dec
sub
pop
pop
fsub
dec
bound
mov
sbb
cmp
mov
lds
add
addb
or
mov
adc
ss
roll
mov
imul
les
lahf
and
add
lock
jbe
repz
adc
mov
movsl
lock
je
aaa
aaa
lods
movsb
push
pop
icebp
mov
add
xchg
ds
jmp
add
push
ret
dec
insl
out
jle
clc
ds
xor
mov
stos
orl
pop
hlt
and
mov
lds
push
xlat
int3
xor
sti
fidivrs
xorl
jnp
sub
sub
int3
push
pop
imul
cmp
mov
mov
xchg
loop
mov
inc
pusha
add
push
add
ja
sub
pop
mov
add
lods
cmp
xchg
xlat
dec
push
idivb
int3
and
mov
ja
mov
clc
rolb
mov
lds
mov
push
push
inc
xor
mov
pop
cli
gs
xchg
movsb
jge
jnp
push
psubb
mov
add
jno
lret
push
mov
cmp
adc
mov
in
scas
xchg
es
or
hlt
popf
jecxz
rolb
mov
jns
in
nop
add
out
lcall
jp
cmpsb
arpl
add
lcall
mov
mov
lahf
mov
jp
in
dec
fidivrl
jo
mov
scas
mov
add
imul
scas
sub
mov
mov
add
adc
mov
add
push
mov
add
mov
hlt
jp
and
fcomps
add
loope
dec
mov
sahf
imul
push
orl
adc
fsubs
add
inc
add
mov
incb
inc
add
add
arpl
movntq
and
dec
add
mov
mov
push
sub
out
fbstp
leave
adcl
mov
sbbl
and
mov
addb
test
mov
lods
clc
repz
mov
sarl
lds
add
mov
leave
out
dec
push
ret
inc
xchg
mov
insl
mov
or
mov
rol
add
div
mov
pop
call
les
and
cmp
mov
inc
add
mov
xchg
loop
mov
add
mov
add
mov
mov
mov
call
and
andl
mov
add
pop
xchg
add
pop
dec
adc
mov
push
ss
pop
or
cmpsl
push
lret
in
out
lds
sub
int
add
lods
dec
xchg
and
mov
add
xor
xlat
xchg
addb
mov
adc
push
add
cmpsb
mov
add
add
xor
mov
adc
into
lahf
cmp
and
mov
jb
mov
mov
add
add
hlt
cli
and
lock
push
add
mov
test
add
cmpsb
nop
add
add
jge
push
add
subl
and
and
lds
mov
addb
out
fadds
jl
inc
add
or
add
mov
add
or
or
cmpsl
stos
lcall
loope
pop
pop
out
jle
and
mov
inc
push
ljmp
jge
xor
mov
push
roll
add
pop
jbe
sbb
aad
jge
outsl
adc
lods
inc
add
rcl
mov
movsl
je
mov
push
or
xchg
sub
mov
sbb
pop
jp
pop
std
js
imul
mov
jl,pn
pop
stos
cmp
add
pop
fwait
xchg
test
mov
pop
leave
icebp
inc
add
cwtl
xor
jno
lds
out
nop
add
mov
and
loop
mov
mov
in
les
add
das
repnz
add
jge
push
mov
outsb
and
jl
xchg
scas
add
fwait
cltd
push
std
dec
imul
cmp
mov
jmp
or
cmp
lea
rolb
mov
ss
add
lods
rolb
mov
int3
push
push
add
out
sbb
add
mov
sarl
in
inc
add
call
ds
cmpsb
sub
ja
add
int3
sahf
ss
jecxz
sarl
popa
rorl
mov
add
addl
add
push
cmpsl
and
add
dec
mov
mov
push
add
popf
push
sub
add
por
sbb
mov
sub
outsb
push
scas
ss
fwait
mov
mov
addb
sbb
mov
add
mov
add
jbe
add
mov
mov
dec
mov
imul
insb
push
mov
es
rcrl
jno,pt
pushf
int
fcmovu
mov
imul
add
sub
mov
jns
push
mov
adc
mov
imul
mov
jl,pn
arpl
sbb
ja
pop
jg
push
pusha
add
imul
clc
jbe
iret
pop
test
add
mov
lret
add
mov
mov
dec
mov
rolb
mov
movsl
filds
add
es
out
sti
dec
int
mov
dec
imul
pop
adc
mov
cltd
xor
sbb
xchg
sbb
aas
sahf
aaa
mov
mov
cmp
ret
push
jl
add
les
mov
adc
insb
fdivrl
sub
lret
addr16
mov
push
push
jl
add
scas
and
lcall
push
add
out
xchg
inc
outsb
add
add
add
add
sbb
and
mov
sbb
add
inc
inc
add
inc
add
scas
dec
adc
dec
movsb
xor
mov
xchg
cmc
mov
sub
add
nop
add
std
mov
xor
imul
mov
push
and
mov
pop
mov
mov
mov
push
lods
pop
mov
dec
adc
mov
cmc
das
aaa
push
add
mov
lea
jmp
mov
push
adcl
lret
mov
mov
add
sti
jge
ret
mov
test
sbb
cmpsl
adc
mov
sahf
addb
sbb
test
aas
cli
insl
rolb
sub
into
cmp
aaa
mov
mov
cli
lock
in
adc
xchg
mov
aaa
ret
inc
mov
mov
test
test
cmp
mov
xchg
ret
mov
mov
cmp
push
pop
cli
sub
add
mov
add
aas
push
ficomps
dec
inc
add
add
aam
add
inc
mov
sub
inc
add
sti
fldenv
mov
cmovge
sub
pop
insb
lea
pop
mov
add
in
mov
nop
add
pop
pusha
add
dec
test
pop
std
cmp
and
lret
lret
aaa
insl
inc
mov
jmp
add
add
xchg
push
pop
mov
mov
mov
rolb
mov
add
sbb
ret
xor
add
xchg
arpl
mov
mov
lret
xchg
xchg
es
jmp
add
insl
xor
mov
ja
add
pop
or
xor
mov
mov
js
add
mov
std
aaa
mov
fs
sbb
adcl
clc
fidivrs
mov
add
test
add
jne
rolb
cmp
in
cmp
scas
rolb
mov
mov
xor
or
add
mov
dec
fiadds
loop
mov
add
mov
stos
rolb
adc
faddl
dec
lods
mov
aad
add
mov
push
add
bound
mov
inc
jp
adc
int
sub
add
call
xor
mov
call
pop
jo
mov
decl
mov
add
insl
in
notb
mov
cmc
cwtl
addb
imul
add
add
xlat
out
in
daa
adc
dec
xor
addl
roll
enter
call
test
lret
dec
call
add
mov
sbb
cltd
inc
pop
push
leave
xlat
xor
cmpsl
mov
xor
mov
mov
in
shrl
sub
dec
stos
popf
push
sub
xor
add
outsb
out
fs
aam
imul
push
xchg
pop
adc
mov
mov
stos
jecxz
mov
pusha
add
into
adc
mov
sbb
xor
sub
stos
mov
mov
shll
add
jp
add
push
cmp
cmpsb
push
add
sub
fs
addb
mov
inc
aas
and
addr16
in
int
add
xor
add
cmp
jecxz
loope
outsb
cmp
add
add
mov
xor
mov
pushf
adc
in
cmp
sbb
fildll
xchg
add
test
addb
aam
xor
mov
add
adc
dec
mov
push
lods
mov
mov
into
popf
cmp
xor
mov
mov
call
mov
jg
lock
inc
xor
mov
or
fcoms
mov
xor
mov
rolb
mov
jmp
ud2
or
xchg
sbb
out
stos
aad
mov
add
push
mov
or
cmpsl
movsl
aaa
jg
aas
sub
xchg
jge
add
jo
mov
and
mov
add
jnp
testl
mov
test
add
jge
aaa
pop
les
imulb
sbb
add
mov
adc
mov
xor
adc
mov
loopne
mov
add
iret
js
stos
pop
jmp
mov
push
pop
lock
add
adc
mov
adc
xor
mov
add
pop
cwtl
pop
jnp
lods
and
add
lea
add
pop
rolb
mov
sbb
into
jnp
dec
cmpsb
add
adc
inc
add
xor
cmp
int
xor
mov
sub
loope
addl
bound
mov
movsb
mov
sub
stos
xor
mov
addb
mov
sub
mov
lods
aad
add
enter
push
cltd
imul
fnstsw
out
loop
mov
fwait
and
sbb
mov
sbb
add
add
dec
out
sahf
roll
leave
popa
rolb
int
sbb
mov
add
lds
add
lock
cmpsb
mov
cwtl
movsb
cmpsl
ret
mov
aaa
pop
sbb
jo
mov
pop
mov
dec
add
push
je
pop
xor
mov
pop
sub
xor
mov
ljmp
loope
xchg
mov
lahf
and
call
mov
mov
add
je
add
mov
repnz
add
xchg
xchg
or
imul
mov
cmp
dec
pop
inc
add
popa
push
call
rolb
mov
add
and
jae
push
and
mov
cld
js
icebp
clc
xor
mov
dec
mov
mov
fsub
add
in
mov
mov
and
mov
add
mov
mov
mov
add
pusha
add
sub
and
lds
mov
add
mov
das
add
mov
inc
jb
mov
lcall
and
mov
jecxz
ret
cmp
push
add
movsb
lods
push
addb
xchg
hlt
xchg
sbb
add
inc
repz
add
sub
stos
popa
inc
add
mov
xor
and
xchg
dec
xchg
xchg
xchg
lea
add
push
sahf
pop
pop
insl
cmp
mov
xchg
add
add
pop
push
test
lods
cld
xchg
cmp
add
jmp
xchg
fcomps
loopne
mov
outsl
sbb
pop
mov
scas
add
mov
adc
mov
xchg
xabort
adc
lcall
das
jmp
mov
add
test
mov
scas
sbb
icebp
sub
mov
jmp
sub
je
imul
pop
rolb
mov
cmpsb
loop
mov
mov
add
sti
fs
mov
mov
rolb
mov
xchg
add
add
xorl
inc
pop
in
and
stos
fwait
imul
lods
les
push
add
cmc
rolb
sahf
push
or
add
pusha
add
add
cmp
add
xchg
addb
and
mov
add
inc
sbb
push
cs
ret
inc
jno
add
and
mov
xchg
jmp
in
push
xorl
mov
adc
push
nop
add
daa
fucomip
cmp
gs
add
lods
repnz
ret
inc
add
and
mov
mov
mov
adc
add
jmp
addb
mov
dec
pushf
fstps
push
out
add
add
mov
mov
jae
cmp
push
adc
mov
in
xlat
and
mov
add
mov
add
aad
and
mov
aad
xchg
push
call
inc
add
sahf
jnp
ss
lock
mov
nop
add
movsl
inc
pop
sub
into
pop
stc
mov
lret
hlt
and
add
or
add
dec
jmp
rcl
pop
cld
in
sbb
add
xchg
jns
add
push
test
mov
mov
loopne
mov
add
shll
fwait
xor
mov
or
add
mov
add
mov
ret
sub
aas
scas
fs
xor
dec
stos
rolb
mov
sbb
daa
fistps
mov
jne
fadds
add
in
outsl
xorl
pop
int3
mov
add
nop
add
mov
ret
xor
adc
mov
fimull
popf
jnp
jg
jle
test
lahf
fisttps
in
lss
mov
lcall
sbb
and
xchg
xchg
mov
into
add
add
mov
cmp
add
xchg
int3
outsb
stos
dec
addb
lock
mov
rolb
mov
push
or
aad
lahf
imul
lcall
sbb
push
lret
das
cli
and
sahf
sub
mov
in
cltd
push
add
mov
fildl
stos
xor
in
js
add
add
mov
cmpsb
mov
mov
cmp
clc
add
mov
nop
add
jnp
mov
add
repnz
xor
cmp
and
mov
mov
arpl
sbb
into
or
add
xchg
jg
mov
mov
mov
out
add
mov
sbb
jb
mov
add
sub
push
sbb
mov
lea
add
aas
pop
pop
jl
jo
mov
xchg
dec
aas
add
popf
sti
movsb
je
cwtl
pusha
add
stos
icebp
sbb
sub
mov
mov
scas
push
cmp
in
and
or
push
adc
add
mov
aad
test
add
ss
add
pop
mov
pop
lret
and
add
dec
inc
lret
add
mov
add
imull
ds
cltd
lcall
add
inc
insl
mov
lret
push
push
add
or
nop
add
mov
mov
pop
sarl
loop
mov
mov
scas
loope
stos
stos
fdivs
test
idivb
mov
push
add
push
add
mov
cmp
das
jno
add
mov
jl
scas
xchg
in
add
add
sarl
addr16
inc
add
mov
xchg
iret
int
and
and
mov
add
add
popf
mov
lret
sub
add
mov
lock
dec
dec
cmpsb
lods
or
jecxz
pop
adc
mov
dec
cltd
xchg
leave
mov
push
mov
out
lretw
lea
cmp
loope
lods
adc
mov
pop
mov
and
jle
mov
cmp
xor
jns
outsl
sbb
mov
mov
addb
mov
xor
pop
jle
and
add
push
hlt
pop
ljmp
push
adc
lret
pop
push
in
pop
sbb
xor
std
and
add
mov
mov
addr16
test
scas
pop
and
mov
test
and
fisubl
fisubl
push
pusha
add
xchg
jne
test
xor
mov
insb
movsl
scas
scas
mov
jmp
cmp
push
push
sbb
cmp
mov
add
mov
add
add
addb
scas
into
int
repnz
add
sub
repnz
and
mov
cmpsl
mov
mov
jns
add
jmp
xorl
test
add
shll
in
mov
pop
cmp
nop
add
add
add
push
mov
inc
dec
mov
inc
lds
clc
outsl
stos
lods
incl
jb
mov
mov
das
pop
mov
subl
mov
xor
jo
mov
mov
jp
add
and
mov
jg
mov
imulb
dec
es
popf
daa
popf
xor
or
xlat
test
dec
fdivs
pop
xchg
xor
jecxz
cwtl
daa
push
mov
mov
jno
bound
mov
in
pop
int
fimull
jl
pusha
add
cmp
shrl
add
mov
xor
mov
ss
test
cli
hlt
lods
cmp
inc
cmc
ds
add
add
mov
fidivrl
loopne
mov
cmc
sbb
cmp
and
mov
add
mov
int3
aam
xchg
adc
mov
inc
lcall
outsl
ja
mov
out
fs
orl
mov
pop
pop
dec
stc
and
add
mov
add
mov
mov
lret
mov
test
popa
cmpsb
in
sbb
dec
test
aas
mov
jns
jo
mov
add
mov
mov
sub
fs
add
add
mov
sbb
jne
pop
mov
jne
sbb
jo
mov
sub
cmp
add
iret
adc
xchg
lods
mov
add
mov
mov
cwtl
push
fistps
outsl
or
add
dec
nop
add
add
dec
aam
test
movsb
jmp
add
xchg
mov
or
mov
out
jecxz
add
mov
sbb
loop
mov
add
cmp
mov
loopne
mov
mov
add
add
dec
dec
cmpsb
xchg
sbb
mov
cmc
xor
mov
je
out
sub
xlat
or
sbb
mov
negb
sub
inc
loop
mov
dec
aaa
sub
sub
jns
add
cmp
pop
hlt
jp
cmp
insl
mov
add
push
shll
push
icebp
stos
cmp
inc
nop
add
into
lcall
dec
jae
int
in
scas
xchg
inc
add
mov
add
aad
add
outsb
cmp
add
jae
xchg
cmp
or
addb
lods
imul
mov
push
add
outsb
add
mov
xchg
pusha
add
enter
pop
jnp
add
sub
sub
add
or
test
mov
add
add
jno
imull
xchg
outsb
mov
mov
fs
scas
ror
les
mov
pushf
sbb
mulb
mov
xor
lods
scas
mov
mov
ret
mov
mov
push
push
cmp
add
adc
xchg
add
lds
ret
adc
mov
insb
sub
mov
in
dec
in
push
not
xor
outsl
je
enter
mov
jge
xlat
mov
add
add
add
or
lcall
aad
add
xor
div
repnz
shll
pop
jo
jle
rcl
add
stos
sbb
add
mov
popf
cmp
push
add
test
ret
cli
xchg
mov
adc
mov
or
or
add
mov
popa
scas
mov
mov
mov
ljmp
rcrl
lods
aas
aaa
pop
lret
cs
out
adc
mov
stos
insl
cltd
inc
add
push
cwtl
sub
xchg
and
mov
or
sbb
repnz
mov
pop
clc
xchg
add
push
imul
mov
cmp
push
add
jbe
adc
mov
add
rolb
mov
xchg
insl
call
lcall
sbb
mov
jp
dec
xchg
mov
repz
andl
add
add
add
jp
inc
adc
push
add
jnp
add
pop
dec
and
cli
ret
ljmp
std
xchg
mov
frstor
lcall
sub
or
pop
xor
mov
insb
bound
mov
and
pop
sub
xor
mov
shll
add
lods
pop
subl
inc
mov
cmpsb
lahf
xchg
in
push
add
sbb
xor
jo
mov
lods
scas
addb
lahf
arpl
addb
cltd
mov
add
leave
push
xor
insb
ret
movsb
cli
stc
rolb
mov
dec
addr16
cmp
mov
mov
jge
inc
dec
jmp
xchg
pop
addb
or
sub
jecxz
lret
mov
mov
pop
xor
mov
fisttps
dec
cmp
dec
sbb
add
and
mov
xchg
add
mov
bound
mov
sbb
cmp
imul
adc
add
mov
lock
jno
ds
mov
xchg
add
mov
dec
mov
mov
mov
scas
data16
enter
add
adc
mov
sbb
lods
hlt
sbbl
popf
xchg
sbbl
bound
mov
mov
adc
mov
rolb
mov
ret
mov
add
jno
add
addr16
movsl
stc
add
xlat
mov
xor
add
jns
mov
icebp
jecxz
jbe
loope
adc
mov
faddl
add
mov
mov
repnz
add
shrl
imul
test
add
mov
test
mov
jo
mov
clc
xlat
jp
cs
xchg
mov
in
mov
rolb
mov
loop
mov
addb
ficompl
std
add
sub
aam
insl
bound
mov
lods
cmp
dec
sti
inc
mov
xchg
daa
adc
push
les
sub
dec
hlt
daa
add
loope
sbb
stc
push
adc
mov
add
mov
add
xor
mov
push
test
test
push
xchg
xor
std
fisttpll
andl
or
inc
xlat
std
ds
sbb
add
out
or
rolb
cmp
push
inc
nop
add
call
std
clc
xor
mov
add
mov
or
dec
ss
pop
sub
outsl
outsl
adc
lret
fiaddl
cmp
and
scas
decb
mov
add
adc
xlat
jb
mov
add
lea
add
mov
mov
pop
cmp
mov
mov
mov
mov
jg
mov
xor
add
add
ds
xchg
mov
outsb
loopne
mov
push
add
sbb
jns
jp
jns
cmp
push
lock
ret
pop
push
iret
lret
nop
add
add
add
mov
push
in
push
add
xchg
sbb
scas
or
jp
test
inc
test
loopne
mov
inc
mov
xor
mov
or
pop
dec
mov
cs
stc
and
iret
mov
lea
iret
outsl
and
mov
fsubl
sub
out
rolb
mov
int3
and
repz
mov
mov
cltd
popa
pop
out
cmp
xor
mov
iret
incl
inc
add
fcoms
mov
pop
xchg
push
mov
xchg
push
jo
mov
jo
mov
add
and
add
pop
out
repnz
mov
mov
xchg
jb
mov
cmp
mov
mov
cmp
add
jge
cmpsl
int
fstl
add
jno
std
xor
add
mov
pusha
add
mov
stos
mov
add
add
add
cmpsl
jno
cltd
adc
arpl
jmp
data16
adc
pop
mov
int3
jle
or
test
dec
and
mov
xlat
xchg
jnp
cmp
cmp
mov
mov
mov
cmp
mov
in
mov
mov
mov
mov
add
gs
lcall
mov
ljmp
call
adc
loope
add
xor
add
pop
inc
mov
mov
mov
mov
popl
add
mov
stc
rolb
mov
addr16
in
es
notb
out
add
add
push
jecxz
clc
fimull
jge
mov
add
popf
stos
nop
add
movsl
stc
out
jg
loopne
mov
nop
add
outsb
sub
cmpsb
stos
push
hlt
pop
pop
pop
test
std
xchg
add
mov
scas
adc
pushf
jl
push
add
ret
xchg
mov
mov
adc
mov
fmuls
xlat
adc
mov
add
xchg
adc
mov
nop
add
addb
fistl
mov
pop
pop
dec
add
mov
mov
push
add
xlat
add
mov
and
push
sbb
loop
mov
mov
xchg
add
cmpsl
leave
jmp
adc
push
pushf
mov
push
sbb
push
out
adc
add
mov
frstor
mov
ret
ret
adc
mov
pop
cli
movsl
pop
out
mov
mov
or
fs
in
test
mov
xor
les
cmp
clc
jb
mov
jne
push
test
das
jecxz
xchg
jb
mov
mov
mov
jno
add
add
iret
jo
mov
add
bound
mov
sbb
mov
mov
popf
lsl
push
mov
lcall
clc
pop
test
or
mov
mov
xchg
sbb
out
jnp
mov
xor
out
addr16
adc
mov
ret
push
test
adc
pop
imul
addb
sub
add
mov
pop
gs
mov
test
loope
add
mov
or
mov
test
push
mov
ss
in
cmp
add
mov
lock
push
dec
and
add
repnz
dec
sub
add
pop
test
cli
sahf
test
call
cmp
sahf
in
aam
add
rcrl
mov
mov
push
dec
hlt
xor
sub
aam
adc
lcall
repz
mov
aam
sub
pop
mov
aad
mov
add
mov
add
loopne
mov
xchg
jmp
andl
lods
inc
add
mov
mov
inc
shll
mov
cmp
mov
add
add
dec
jb
mov
jle
shll
add
sub
lret
cmp
xor
ret
mov
scas
icebp
jne
add
mov
pop
sbb
add
stc
push
mov
add
cmp
lea
rcll
mov
punpcklwd
inc
dec
sbb
xchg
add
cmp
outsl
push
add
inc
add
ljmp
mov
jle
jmp
push
aad
mov
pusha
add
jne
add
inc
sub
cmp
maxps
adc
mov
cmp
iret
xor
mov
push
inc
add
mov
mov
and
mov
cmc
fnstsw
stc
pop
lds
mov
pop
mov
lock
pop
add
mov
insb
pop
dec
xor
data16
cmp
add
push
add
and
mov
out
pop
imul
mov
mov
sbb
add
sbb
add
add
push
jge
lea
dec
mov
cmp
lea
ljmp
popa
pop
adc
mov
mov
add
jnp
jecxz
add
loopne
mov
les
cvttps2pi
mov
inc
dec
data16
mov
ret
push
or
sub
push
cmpl
adc
mov
outsb
pop
cmp
push
add
mov
mov
add
mov
mov
dec
mov
shl
pop
jae
cmp
mov
imul
or
push
cltd
movsl
cld
cmp
ljmp
mov
add
cmpsl
loopne
mov
mov
jmp
push
mov
or
mov
loop
mov
js
pop
je
jbe
ljmp
fcoml
add
add
mull
add
sub
loope
arpl
imul
inc
out
aad
rolb
mov
mov
add
add
mov
push
pushf
jl
das
repz
xor
add
aad
jne
mov
cmp
jp
frstor
push
gs
inc
add
pushf
pop
xchg
add
mov
add
fxch
xchg
mov
jnp
pop
movsl
sbb
addr16
and
mov
mov
addb
xor
mov
dec
mov
test
add
and
cwtl
dec
pop
in
sbb
jb
mov
cmp
pop
repz
and
ss
outsl
mov
nop
add
add
pushf
gs
mov
mov
ljmp
add
mov
add
add
mov
or
clc
lea
lcall
imul
orl
xchg
pop
lods
add
cmpsb
in
lcall
lods
orl
adc
scas
rolb
sbb
int
add
mov
pushf
lods
cmp
inc
xchg
clc
rolb
mov
adc
sub
pop
mov
push
gs
fcoml
add
stos
aaa
inc
mov
add
pop
add
add
mov
loop
mov
mov
pusha
add
add
and
mov
inc
outsl
js
jae
lea
inc
sbb
dec
sub
xor
pop
push
cmp
pop
sub
hlt
dec
mov
mov
xchg
sub
and
mov
popf
and
mov
pop
mov
or
cmp
pusha
add
xchg
add
push
cmp
iret
mov
xor
mov
adc
mov
mov
or
jmp
and
xlat
adc
mov
out
fcmovnbe
xor
in
cmp
pop
cmp
js
jbe
pop
stos
ja
aam
push
dec
cwtl
mov
inc
aaa
scas
cmp
ds
or
cmpsb
sahf
push
dec
fdivrs
push
test
fistpll
lds
mov
push
mov
mov
stos
enter
aad
add
jb
mov
inc
add
mov
cmc
or
subl
sbb
xor
adc
mov
pop
cmp
nop
add
and
sub
inc
add
nop
add
push
pop
scas
insl
jmp
ret
fstps
je
sbb
outsl
fwait
mov
mov
jl
inc
cmp
les
testb
das
mull
repz
mov
and
mov
adc
out
dec
mov
mov
inc
add
mov
add
xor
inc
cmp
add
push
jl
xchg
mov
add
pushf
js
add
inc
xchg
add
dec
jno
push
dec
popa
cmp
mov
fildl
sbb
and
mov
inc
int3
pop
gs
add
lds
pop
mov
pop
aad
sub
and
lcall
popf
jnp
add
push
sbb
inc
bound
mov
pop
mov
mov
cmp
loop
mov
loop
mov
push
add
push
sub
sub
std
jb
mov
xlat
pushf
mov
adc
mov
cltd
mov
mov
cltd
jae
add
jne
add
pop
imulb
lret
push
add
add
xlat
jmp
ds
jmp
add
cmp
mov
sahf
push
xlat
divb
xchg
add
mov
pop
push
mov
mov
mov
add
mov
mov
mov
cmpsb
lahf
or
mov
ret
stos
les
mov
add
mov
mov
into
xchg
pop
ja
into
jg
rolb
pop
sbb
sub
push
adc
mov
push
ficoms
mov
mov
pop
sub
xchg
testl
jae
fsubrl
cltd
fidivrs
mov
ret
push
dec
push
lret
fidivrl
add
mov
add
pop
dec
das
mov
xor
mov
mov
jne
mov
ret
sbb
movsl
mov
xchg
xchg
sub
mov
into
call
mov
mov
repz
mov
fadds
xchg
jp
call
cmp
jp
and
mov
stos
repnz
mov
dec
arpl
add
fsubl
xchg
lods
xchg
push
nop
add
push
and
mov
lcall
lret
cmp
push
mov
incl
cmpsb
or
aam
cmpsl
dec
xchg
icebp
aas
outsl
add
adc
popf
mov
add
pop
jne
fxam
nop
add
mov
mov
repz
call
pop
add
mov
push
pusha
add
mov
out
out
pop
in
ds
cmp
add
sub
inc
mov
and
add
pop
adc
mov
xchg
out
push
inc
bound
mov
das
loopne
mov
or
mov
jecxz
arpl
fistl
add
adc
mov
mov
fidivl
sub
lret
sub
mov
add
nop
add
jae
cmp
add
lret
add
mov
call
sbb
out
mov
pop
xchg
and
add
cmp
add
pop
sub
lods
ds
add
pusha
add
cs
mov
mov
arpl
fadds
jle
push
add
push
xchg
push
insb
mov
adc
pop
test
mov
sbb
add
xchg
push
add
xor
movsl
push
cmp
pop
pop
roll
cmp
daa
push
mov
add
hlt
jo
mov
pop
pop
or
mov
mov
inc
xor
sbb
mov
push
jbe
arpl
sbb
add
out
loopne
mov
add
rolb
filds
mov
pusha
add
rolb
fldcw
das
or
inc
add
pop
add
mov
mov
mov
mov
inc
add
add
xor
and
cwtl
jb
mov
jmp
pusha
add
add
repz
pusha
add
stc
push
das
or
gs
ret
out
gs
mov
add
cmpsl
mov
add
sbb
push
add
movsl
rolb
lahf
lods
addb
inc
xchg
inc
add
sbb
inc
mov
in
popl
or
bound
mov
jnp
dec
out
pop
mov
arpl
add
add
mov
push
jmp
movsb
popf
push
add
xchg
and
add
hlt
xor
jp
rolb
mov
daa
in
mov
addb
rolb
mov
data16
or
pop
cmp
jp
pop
pop
clc
inc
sub
flds
aaa
sti
dec
xor
mov
fnsave
mov
mov
movsl
xchg
std
jne
xchg
scas
sub
add
lea
es
jae
pop
mov
xlat
xchg
add
mov
arpl
mov
mov
mov
xlat
test
mov
dec
repz
mov
mov
outsl
loope
or
push
fiaddl
mov
test
inc
fcmovbe
pop
scas
mov
mov
xor
popf
lret
test
sub
mull
vpmulhw
sbb
jle
dec
mov
imul
mov
add
add
dec
inc
add
dec
in
divl
stc
std
mov
inc
or
popa
dec
xlat
mov
adc
mov
mov
stos
mov
jb
mov
dec
jno
stc
mov
add
int3
scas
mov
dec
addr16
mov
cs
jg
ret
aam
xchg
lods
and
popa
andl
sarl
jge
pusha
add
sub
jecxz
and
mov
sub
cmp
arpl
sub
sub
mov
add
pop
adc
cwtl
rcrl
cmc
out
test
add
aaa
mov
add
outsb
ss
add
fildl
imull
jge
pop
stc
sbb
fs
lea
out
jne
add
inc
xchg
in
xchg
mov
pushf
cmpsl
loop
mov
xlat
pop
push
scas
mov
sub
xchg
cwtl
mov
add
int
push
insb
pop
int3
movl
jmp
int
cmp
adc
mov
or
jns
shll
xchg
mov
ret
cld
push
add
mov
in
outsb
fs
mov
push
add
and
loop
mov
cs
test
and
mov
cmp
xchg
das
xor
mov
movsb
lahf
cmp
pusha
add
outsl
adc
mov
rolb
mov
pop
push
jnp
jb
mov
daa
rolb
mov
sub
jecxz
imul
decl
lahf
cmp
sub
cmp
xchg
push
cld
jle
lock
cs
xor
push
int
mov
dec
das
lods
fsubr
push
push
push
xchg
mov
fistps
or
xor
mov
add
add
insb
call
add
mov
mov
mov
ret
and
cmpl
popf
or
mov
add
pop
mov
movsl
jnp
into
rolb
mov
mov
hlt
movsl
pushf
stc
rorl
inc
out
movsl
fsubr
and
aas
cmc
xchg
clc
add
xchg
cmp
mov
cld
jns
test
cmpsl
cmpsb
out
fimull
add
loop
mov
inc
xchg
sbb
addb
mov
aas
aaa
mov
xchg
mov
loop
mov
inc
dec
pop
xchg
mov
pop
arpl
or
jl
sub
inc
rol
loope
orl
into
mov
or
arpl
or
in
lahf
std
stos
pop
inc
fwait
popa
popa
cmp
ret
mov
icebp
repnz
insb
rolb
mov
add
fwait
sub
dec
cli
lds
jge
ljmp
xchg
jecxz
add
negb
inc
rolb
mov
mov
dec
pop
rolb
mov
out
outsb
jbe
mov
rolb
mov
mov
shrl
add
xlat
push
add
bound
mov
or
mov
adc
mov
dec
cmp
pop
dec
push
loop
mov
cmp
mov
add
push
sar
mov
daa
ss
sbb
push
fldcw
xchg
adc
add
cs
mov
dec
lods
addb
xchg
pop
push
mov
add
add
and
jb
mov
jnp
in
cld
pop
pop
inc
mov
mov
popa
jge
pop
in
add
je
add
add
push
ja
scas
adc
mov
mov
pushl
dec
inc
mov
jmp
mov
cmpsl
inc
jae
and
fildll
pop
add
mov
aam
add
jbe
pop
push
pop
ds
out
fbstp
pushf
pop
add
scas
rorl
mov
adc
mov
cli
lret
pop
push
xor
mov
add
inc
flds
mov
mov
add
mov
lahf
outsb
mov
test
or
and
stos
mov
cmp
mov
cmp
push
idivb
ret
out
and
push
push
mov
test
mov
mov
mov
add
adc
clc
cltd
push
divb
mov
sbb
sub
add
adc
mov
mov
dec
add
data16
inc
faddl
add
mov
mov
dec
stos
cmp
pop
xchg
pop
faddl
mov
push
in
mov
flds
jb
mov
pop
cltd
push
add
addb
or
sbb
add
add
add
cmpsl
xchg
gs
aas
mov
inc
add
add
pop
push
jno
inc
es
jmp
repnz
xor
enter
mov
xor
int3
incl
mov
mov
dec
test
cltd
popa
jbe
das
push
punpcklbw
mov
cmp
xchg
add
add
mov
add
js
add
mov
add
sub
aaa
fwait
xchg
add
mov
fs
outsb
xlat
and
out
xchg
jp
mov
push
cmp
ret
daa
xchg
jp
add
enter
add
sub
add
mov
mov
add
imul
aam
mov
add
add
add
jg
dec
je
imul
jp
mov
rolb
mov
add
cmp
sti
mov
test
cwtl
pop
xlat
imul
std
test
add
stos
sub
add
pop
mov
add
mov
sub
inc
add
add
rolb
jbe
and
jnp
add
enter
push
call
mov
movsb
mov
sbb
je
cs
xor
jb
mov
cmp
push
pop
in
push
mov
add
xchg
jns
push
mull
add
push
pop
fs
lea
add
test
stos
mov
repz
aad
cwtl
sub
add
or
add
inc
mov
push
xchg
add
dec
jle
icebp
xchg
mov
or
lahf
pop
cmc
jnp
mov
rorl
daa
dec
aam
sbb
jne
in
add
xor
mov
mov
vcvtpd2dqy
mov
or
add
add
xor
mov
inc
add
fbstp
add
mov
repnz
mov
daa
test
jns
inc
mov
mov
out
xchg
mov
adc
mov
add
mov
clc
mov
add
inc
add
mov
cmp
mov
jecxz
add
mov
movsb
or
filds
mov
rolb
roll
add
and
mov
fildll
addb
into
or
mov
mov
cmp
pop
mov
mov
cltd
sub
push
mov
add
popf
cltd
negb
cmc
lds
xchg
outsl
jle
rcrl
fsubl
ljmp
testl
cmpsl
jb
mov
inc
fsubrs
cld
push
outsb
xor
int
jne
xor
mov
pop
sbb
pop
cmp
xchg
aam
push
add
push
cli
icebp
sub
pop
mov
mov
add
add
inc
outsl
xchg
es
pop
fwait
xor
loope
xchg
daa
and
add
testb
xor
mov
mov
cmp
lds
scas
mov
loope
das
jmp
clc
mov
mov
mov
mov
loope
add
addb
jl
jo
mov
loope
add
repz
js
inc
pushf
mov
out
sti
jl
xchg
add
cmp
insl
pop
ficompl
in
mov
ss
mov
push
mov
loopne
mov
test
jb
mov
rolb
mov
sbb
out
push
mov
out
cmp
fsubrl
add
mov
mov
mov
adc
mov
lcall
add
rorl
xchg
adc
jge
add
mov
ss
adc
add
loopne
mov
add
rep
add
outsl
rolb
mov
cs
dec
lods
out
call
loopne
mov
aam
add
scas
mov
add
jnp
add
cld
xorl
cmp
jnp
in
ds
jnp
add
inc
cmp
add
add
push
test
jae
lcall
lahf
pushf
icebp
xor
add
mov
mov
jbe
add
addb
cmc
adc
or
jl
out
push
add
cmp
es
mov
mov
cwtl
mov
add
notl
insb
ljmp
popf
jo
mov
faddl
faddl
or
test
xor
or
in
or
ret
xchg
add
xchg
add
pop
cld
push
dec
sub
add
mov
mov
inc
arpl
jge
je
call
int
add
das
xchg
addb
push
push
fisubrl
mov
add
inc
push
cmp
inc
addb
ficoml
aad
jo
mov
mov
cmpsb
jno
push
pop
lods
mov
add
mov
sbb
cmc
sar
addb
dec
int3
test
sub
push
test
pop
icebp
pop
ds
push
or
iret
in
shrl
xlat
mov
cs
push
cli
arpl
sbb
mov
sbb
mov
add
dec
fildl
pop
or
jg
iret
notb
add
mov
dec
aad
adc
adc
mov
insb
ret
in
lds
cmp
jmp
add
aad
cmp
negl
add
jg
xchg
add
ds
add
fsubrs
out
sbb
mov
add
test
adc
cwtl
lock
pop
sub
xchg
inc
and
or
outsb
or
cltd
dec
mov
add
add
sub
int3
dec
imul
in
shll
in
rcrl
add
lret
jno
add
cwtl
xor
or
adc
cwtl
vmovaps
fwait
jl
jb
mov
cmp
add
mov
fcoms
push
sub
mov
leave
xchg
in
arpl
sub
inc
add
pop
mov
push
or
lods
jl
rolb
mov
mov
add
popa
jg
neg
mov
mov
add
ljmp
xchg
pop
sbb
divb
mov
sub
adc
pusha
add
into
roll
add
mov
or
cltd
sbb
and
mov
xchg
jle
fistl
add
popa
sbb
cmp
mov
cmovnp
push
sub
test
hlt
sahf
inc
bound
mov
push
pop
mov
aas
std
xchg
add
dec
outsb
shll
add
rolb
mov
add
test
in
sub
add
in
hlt
pop
xor
add
out
add
add
sbb
jnp
out
bt
stc
mov
add
rolb
mov
out
test
mov
outsb
push
ds
mov
jge
cmc
pop
lods
mov
add
rolb
hlt
add
lods
popl
sbb
xor
mov
rolb
mov
xor
mov
rcll
mov
mov
ret
nop
add
add
dec
or
pop
sub
je
fcomps
mov
jle
leave
push
or
mov
inc
add
or
adc
mov
fwait
imul
popf
popf
inc
stos
mov
in
into
in
arpl
pop
cmp
cmp
mov
test
jns
in
mov
add
jno
rolb
mov
in
inc
aad
in
pop
aad
and
xor
add
pusha
add
es
scas
fcoms
aam
out
add
adc
sub
pop
jnp
insl
add
jne
mov
mov
mov
stc
outsl
xchg
rolb
mov
je
inc
imul
adc
adc
shrl
sbb
stc
push
mov
add
cld
or
mov
addb
mov
int
xor
add
mov
lock
mov
jne
test
mov
mov
dec
mov
mov
push
das
out
mov
or
cmp
add
lcall
mov
xor
iret
fistps
or
cmc
push
movsb
loop
mov
enter
push
xchg
adc
dec
mov
mov
fldenv
push
mov
mov
insb
jbe
leave
pop
arpl
outsl
enter
aam
mov
cmpl
jle
aam
add
out
cmp
popf
sbb
iret
mov
and
mov
push
add
mov
pop
in
pop
jmp
add
testb
add
xchg
mov
leave
xor
xchg
xchg
faddl
outsl
les
sub
testl
scas
jmp
mov
mov
xchg
lcall
ret
push
fucom
daa
mov
adc
add
mov
cmp
add
ret
hlt
dec
push
adc
mov
add
sti
inc
xor
mov
jne
shll
add
and
mov
in
mov
cmp
loop
mov
rolb
mov
in
push
pop
in
cs
imul
xchg
xchg
mov
ret
imul
stos
push
aam
inc
add
cmpsb
mull
cmp
mov
add
ret
ljmp
inc
pusha
add
fcompp
inc
pop
xchg
add
les
in
adc
adc
push
lods
adc
pop
mov
add
add
pop
rolb
mov
insb
flds
add
out
test
gs
adc
mov
add
adc
jp
int3
out
adc
xor
mov
jno
add
lret
cmp
add
lock
inc
sub
add
add
and
ljmp
es
jno
dec
add
mov
mov
addb
pushf
mov
aas
inc
clc
jp
hlt
ja
xor
mov
add
and
mov
ficoml
mov
mov
mov
out
lea
jmp
lcall
add
cltd
shll
mov
hlt
pop
sub
aas
pop
roll
cmp
sti
pop
hlt
mov
mov
sbb
xchg
sbb
mov
jbe
ja
add
out
jo
mov
dec
cmp
dec
xchg
xlat
cmpsl
cmp
or
add
adc
mov
push
addb
dec
sub
in
adc
mov
mov
int
ret
or
sbb
aaa
mov
add
dec
mov
addr16
imul
mov
aaa
into
mov
pop
scas
mov
push
or
push
cmpsl
cltd
stos
xchg
mov
sbb
add
lret
push
out
or
pushf
jmp
mov
or
mov
push
lret
rorl
mov
rolb
mov
or
add
outsl
mov
push
loope
rolb
mov
inc
add
add
adc
popf
add
mov
lcall
xchg
add
xor
mov
addb
or
stc
rolb
aaa
stos
in
clc
in
adc
xchg
loop
mov
into
call
mov
sbb
repz
or
lcall
dec
fcoms
pop
or
mov
add
adc
lds
and
add
mov
add
in
out
sti
scas
mov
mov
cmpsl
or
add
mov
out
cmp
dec
xor
add
add
sbb
push
cltd
je
outsl
into
jmp
inc
add
sbb
add
in
cli
rorl
xlat
and
mov
add
popa
push
lods
jns
jl
add
add
mov
mov
add
dec
icebp
xchg
sbb
test
adc
mov
push
aad
fs
add
fidivl
nop
add
mov
mov
jecxz
in
stc
emms
in
into
sub
inc
rolb
mov
mov
mov
dec
imul
mov
mov
mov
mov
arpl
add
mov
xlat
jnp
add
mov
incl
mov
imull
adc
dec
out
pop
dec
pop
rolb
fsubrs
xlat
jmp
imulb
add
mov
mov
fisttpl
insl
fimuls
add
rolb
xor
mov
mov
outsl
pop
mov
fmull
rolb
mov
mov
xchg
enter
ja
ss
fimull
jne
push
push
fisttps
mov
mov
divl
mov
add
ret
inc
sub
mov
ss
popf
test
cld
test
fisttpl
ds
ret
sbb
jl
aam
add
cmp
lea
add
pusha
add
cltd
cmp
add
add
adc
and
mov
fdivp
add
sbb
sub
mov
mov
dec
push
add
add
jge
popa
jnp
pop
mov
or
add
add
cltd
in
or
mov
dec
lods
sub
add
cmc
jne
aaa
pop
cmpsl
pop
and
mov
mov
out
and
mov
outsb
pop
push
mov
mov
mov
pop
mov
lret
add
mov
loope
add
scas
pop
loopne
mov
inc
lcall
add
xchg
mov
mov
lret
cmp
adc
fstl
push
mov
test
loop
mov
insb
dec
sub
stos
arpl
aad
lcall
sarl
or
mov
add
adc
mov
nop
add
movsb
dec
dec
pop
leave
bound
mov
ret
mov
call
mov
mov
sbb
popa
les
sbb
mov
lea
jp
imulb
clc
rolb
mov
or
add
lcall
dec
or
and
dec
and
xchg
jmp
in
mov
shl
mov
push
out
cmc
mov
add
test
mov
dec
pop
jg
pop
inc
add
add
cmp
cmp
int3
lcall
mov
xor
cmp
out
add
fidivl
lods
sub
inc
mov
loopne
mov
shrl
add
adc
insb
pushf
adc
add
jg
mov
aaa
sub
mov
mov
sub
push
sbb
jmp
mov
rolb
stos
cmpsl
xor
add
mov
dec
data16
xor
and
add
add
push
mov
cmc
push
add
daa
adcl
mov
cmp
outsb
mov
arpl
push
fs
sti
sahf
adc
scas
and
lods
dec
push
add
add
add
addr16
lcall
sub
aam
jbe
add
pop
cmp
dec
hlt
iret
and
lods
jecxz
mov
fcmovne
mov
test
in
sbb
add
cli
sti
pop
xor
mov
mov
pushl
add
loop
mov
mov
notl
loopne
mov
stc
inc
andl
mov
leave
addr16
jecxz
add
add
pop
push
push
hlt
push
add
gs
mov
fs
mov
fsubr
insb
insb
xor
mov
pcmpgtb
je
stos
pusha
add
or
jbe
jne
add
jbe
inc
jno
rcrl
int3
sbb
add
mov
scas
mov
add
mov
iret
cltd
xor
fists
mov
mov
sbb
inc
add
and
mov
jecxz
flds
pushf
lret
inc
add
outsb
repnz
fildll
or
mov
xchg
out
cmp
mov
in
insl
mov
add
test
mov
or
xchg
ds
jle
mov
add
add
dec
xor
dec
add
mov
xchg
repnz
mov
push
aas
push
add
add
ljmp
bound
mov
add
cmp
mov
pop
push
pop
stos
test
inc
adc
push
add
mov
inc
add
mov
popa
mov
xor
mov
int
mov
mov
es
roll
test
enter
jle,pt
nop
add
pop
addb
aad
les
mov
dec
push
add
add
mov
push
stos
decb
jb
mov
rolb
or
addb
loope
add
mov
call
push
sub
ljmp
mov
jbe
add
imul
lret
add
icebp
xor
adc
mov
and
cmp
ljmp
add
std
loopne
mov
add
imul
and
mov
lcall
push
jmp
lret
add
add
insb
in
jl
out
and
dec
clc
cli
addr16
into
test
mov
mov
mov
add
jl
inc
add
sbb
mov
mov
addb
enter
lods
sbb
or
or
std
mov
mov
lods
cwtl
mov
lds
cmp
add
out
jb
mov
adc
xchg
jno
mov
movsl
inc
int
jg
add
faddl
mov
jb
mov
inc
jne
add
mov
outsb
cs
adc
mov
aad
add
push
pop
push
add
xor
add
mov
mov
fcoml
mov
mov
add
push
push
jge
add
mov
cmpsb
jae
ss
mov
mov
mov
icebp
aas
sub
out
mov
loop
mov
pusha
add
sub
pop
inc
add
pop
fistpll
sbb
cld
inc
add
lds
mov
add
stos
or
or
loopne
mov
xor
and
add
out
cmpsb
addr16
data16
mov
add
outsl
cmpsb
lret
add
loopne
mov
pop
mov
dec
dec
lods
fnstenv
cmpsl
or
inc
int
sbb
xchg
lock
sbb
pop
bound
mov
out
dec
leave
fwait
push
add
mov
nop
add
cmpl
jmp
ret
rolb
sahf
out
mov
pop
rolb
mov
mov
xchg
push
cld
push
add
adc
and
lea
add
mulb
frndint
sbb
jae
jge
dec
pop
jns
mov
add
rolb
mov
gs
jge
jle
mov
dec
add
mov
add
addr16
sbb
add
cmpsl
mov
add
nop
add
adc
std
add
cs
sbb
xchg
mov
mov
add
sub
mov
mov
test
out
adc
mov
inc
add
in
lcall
movsl
das
push
sbb
pushf
das
jge
pop
aad
xlat
push
cli
and
mov
add
jae
pop
mov
xchg
xchg
jns
pop
cmove
mov
push
es
xor
fcmovu
movsl
iret
inc
jg
push
cmp
pop
or
push
repz
test
add
jge
data16
adc
mov
xor
mov
pop
jmp
lds
add
xor
repnz
icebp
add
jmp
push
lods
addb
cli
testl
ret
hlt
mov
iret
cmp
add
add
mov
lock
or
mov
enter
mov
and
add
loop
mov
clc
add
add
add
mov
in
icebp
jl
outsl
cmp
sub
and
mov
xor
js
jns
lcall
cmpsb
or
cmp
pop
or
inc
add
and
and
movb
mov
mov
mov
mov
jno
loopne
mov
add
xor
ljmp
mov
mov
inc
and
xchg
xor
pop
insb
xchg
fstl
fcmovnb
out
repnz
add
mov
outsb
sub
add
mov
orl
xor
sbb
pop
out
addr16
je
movsb
imul
inc
call
add
rolb
mov
daa
jge
fisubs
pushf
jo
mov
fldt
mov
pushl
pop
out
lret
add
jo
mov
adc
add
mov
rorl
mov
add
mov
mov
pop
lods
cli
jb
mov
loope
cmp
inc
add
pop
xor
pop
shl
sbb
add
ficoms
add
dec
pop
sbb
addb
gs
push
das
fldenv
ret
outsb
or
add
and
mov
mov
pop
iret
pop
lock
in
cltd
mov
fsubrl
add
mov
jg
xor
fisttpll
mov
daa
pop
ds
repnz
xchg
loope
imul
add
jg
popw
call
jl
in
dec
cmpsl
fwait
cmpsl
pusha
add
xchg
movl
daa
lcall
inc
add
add
jnp
call
ds
mov
mov
pop
mov
mov
outsb
aaa
enter
add
add
sbb
xchg
insl
cmp
add
cmp
insb
or
add
rol
and
add
push
jne
xor
incl
xlat
sub
xor
push
sarl
cltd
jae
add
lods
sahf
test
jae
in
pop
lods
data16
xchg
lea
add
dec
test
stos
stos
aam
add
mov
add
push
aam
adc
dec
dec
test
fisubrl
js
outsb
add
insb
or
cmp
stos
cmp
clc
xor
mov
repz
mov
mov
add
std
bound
mov
push
push
add
lods
call
movsb
pop
jb
mov
addr16
inc
add
or
mov
xorl
mov
push
dec
dec
in
add
xor
ret
add
add
xor
mov
fistps
fxtract
push
mov
add
clc
ljmp
pusha
add
cmp
add
fldl
mov
mov
aad
iret
adc
pop
pop
xchg
cmp
or
shr
lret
imul
pop
push
imulb
mov
call
cwtl
push
add
jne
enter
dec
mov
and
mov
add
loopne
mov
addb
push
imul
push
leave
push
notl
ret
pop
pop
dec
pop
sbb
in
mov
iret
cmp
stos
cmp
test
cld
xchg
mov
mov
outsb
sub
insb
jae
sbb
pop
xlat
movsb
pop
clc
mov
xor
add
fdivrs
xchg
adc
sahf
out
cmpsl
ret
mov
adc
ret
rolb
mov
add
ljmp
and
and
mov
add
rorl
cmp
adc
mov
into
stos
mov
mov
add
mov
xlat
or
inc
sbb
outsb
xor
mov
adc
pop
mov
ja
add
pop
movsb
pushf
or
mov
mov
mov
sbb
mov
dec
lret
jecxz
adc
mov
aas
cltd
cmp
sbb
aam
mov
sti
jae
push
mov
mov
pop
scas
sbb
add
add
mov
push
mov
icebp
jg
fdivl
or
add
and
push
jo
mov
or
in
push
xchg
xor
mov
push
mov
add
push
add
push
ja
xor
add
sbb
xchg
cmpsb
mov
jae
push
cmpsl
rolb
mov
mov
add
add
jnp
pop
or
call
pop
push
ret
mov
add
mov
std
inc
add
xchg
cmpsb
jae
testl
cld
and
add
push
cmc
stos
testb
int3
addb
mov
cli
xchg
test
aam
dec
into
mov
mov
in
jle
lret
add
gs
mull
mov
out
push
les
xor
jecxz
dec
cmp
push
jecxz
aas
inc
mov
adc
mov
push
xchg
inc
push
dec
je
add
inc
addb
mov
jb
mov
jmp
add
push
mov
les
icebp
jp
cmpsb
and
rolb
mov
and
mov
iret
loop
mov
xor
mov
jb
mov
add
add
dec
outsb
fsubl
ja
arpl
jge
std
das
cmp
add
fwait
add
xchg
imul
rolb
sub
lahf
ret
push
fs
push
mov
inc
add
dec
xchg
pop
stos
jp
inc
das
fadds
add
add
xchg
inc
jb
mov
add
mov
add
js
jo
mov
idivb
cmc
insb
lahf
jae
inc
mulb
mov
in
mov
sbb
rcr
aam
mov
rcll
push
filds
or
mov
call
add
mov
add
aam
xchg
add
cmpsb
rolb
mov
xchg
aaa
dec
add
add
add
cmp
mov
mov
push
inc
pop
mov
aad
cmc
popa
cli
shll
mov
sbb
cmp
xor
insb
or
add
add
insb
jecxz
push
pop
aad
jbe
lds
mov
les
or
adc
ljmp
sbbl
add
js
add
pop
clc
mov
addb
negl
mul
popa
cmp
in
jb
mov
mov
aaa
scas
je
and
fisttpll
sbb
pop
mov
cltd
cmp
mov
push
mov
cli
scas
les
xchg
xchg
ljmp
push
sub
or
ret
mov
into
mov
fstl
test
mov
jmp
cs
lea
or
add
mov
je
stc
xchg
jl
add
iret
push
push
cs
pop
cwtl
cmpsb
test
pop
xchg
add
dec
adc
mov
js
lcall
mov
mov
add
mov
add
insb
push
add
mov
addr16
adc
pop
shll
inc
js
ljmp
cmp
add
pop
sti
lahf
test
jnp
mov
fsubrs
jno
push
add
pusha
add
jb
mov
cmpsl
mov
mov
out
fistpl
fcomi
test
lret
mov
ret
or
add
fdivr
dec
je
add
mov
mov
adc
mov
xchg
and
mov
sbb
fbld
lret
rolb
mov
add
jb
mov
in
mulb
mov
and
jge
adc
mov
add
js
add
add
mov
xor
hlt
gs
mov
fwait
call
adc
mov
pushf
and
jae
pop
xor
mov
aam
xchg
outsb
repz
lock
rolb
mov
nop
add
mov
out
inc
movl
add
push
icebp
adc
repnz
nop
add
jmp
cltd
scas
dec
in
push
add
dec
jg
adc
mov
pop
jge
mov
or
cli
dec
or
rcll
add
gs
testb
jl
sahf
jle
movsb
jns
xchg
jecxz
aas
lods
insb
xchg
or
push
sub
out
mov
mov
mov
add
xlat
xor
mov
mov
pusha
add
mov
stos
dec
mov
xchg
rolb
mov
add
xor
sub
sub
repnz
test
dec
fidivs
add
mov
adcl
pop
mov
aas
fstpt
mov
sub
pop
jp
notb
add
sub
add
rcrl
mov
movsb
ja
inc
lds
ror
rcll
loop
mov
add
mov
lods
pop
dec
or
mov
enter
dec
incb
inc
adc
mov
pop
es
mov
jp
mov
daa
or
fidivl
add
or
jmp
push
int3
lea
sbb
sub
jp
mov
add
jle
test
ret
in
and
mov
inc
testl
add
mov
sub
mov
add
inc
fbld
jmp
aaa
cmp
mov
mov
test
add
mov
or
add
push
add
dec
rolb
mov
jg
call
add
add
add
add
outsl
test
rol
mov
sbb
movsl
dec
pop
xchg
add
mov
or
adc
addr16
mov
mov
dec
rolb
mov
insl
test
mov
mov
lods
negl
adc
cwtl
xlat
outsl
and
add
mov
outsb
jb
mov
inc
adc
repz
add
add
rolb
mov
inc
aaa
xchg
push
jo
mov
mov
mov
loopne
mov
mov
lahf
popa
mov
cmp
std
fs
fwait
dec
call
adc
bound
mov
lret
movsl
pop
xchg
add
mov
adc
add
add
scas
inc
add
mov
ret
leave
ljmp
sbb
test
mov
push
add
mov
add
movsl
and
das
push
add
test
mov
mov
ljmp
mov
inc
les
xor
mov
nopl
xchg
iret
mov
lret
cmpsl
inc
icebp
mov
add
adc
lahf
xchg
push
add
mov
call
pop
cmpsl
fimull
clc
into
inc
xor
mov
add
bound
mov
sahf
ss
adc
mov
mov
add
mov
cmp
mov
sbb
mov
xchg
add
fidivrs
outsl
imul
jl
or
add
pop
push
adc
mov
add
add
sbbl
or
xorl
ja
pushf
jno
add
jl
fwait
ja
aad
push
add
lahf
lods
and
mov
pop
jmp
jmp
jmp
dec
sti
pop
mov
mov
bound
mov
shll
cld
mov
leave
pop
pushf
mov
add
cltd
xchg
mov
call
and
mov
pop
scas
jo
mov
sub
add
pop
jo
mov
mov
mov
adc
mov
add
mov
jecxz
js
add
nop
add
gs
mov
jb
mov
ljmp
inc
add
mov
mov
icebp
int3
inc
das
scas
mov
mov
cmpsb
inc
add
push
add
mov
test
and
mov
aaa
or
stos
xor
dec
stos
jl
and
sbb
shll
mov
mov
fimull
push
rolb
sahf
adc
cmp
dec
xor
mov
add
bound
mov
add
mov
pop
xor
mov
jo
mov
push
cmp
outsl
mul
inc
add
push
lock
sti
push
add
fwait
xor
das
push
add
jg
add
push
outsb
pushf
xchg
popf
xchg
lahf
xchg
and
mov
mov
mov
dec
out
pop
popa
mov
jns
in
adc
add
pop
mov
ret
or
mov
jp
lcall
rolb
mov
xchg
jp
insb
cmp
add
adc
mov
les
push
cmp
add
add
clc
lea
test
loope
and
out
xlat
jge
mov
dec
mov
inc
add
push
cmpsl
cltd
inc
xchg
mov
xor
mov
add
mov
in
fimuls
adc
add
mov
lods
cwtl
mov
leave
jecxz
not
sbb
xor
lds
jecxz
or
pusha
add
jmp
aaa
pop
cmpsb
push
add
dec
add
sub
inc
lods
in
mov
leave
insb
outsb
xchg
xchg
pop
pop
test
cmpsl
in
bound
mov
push
add
and
push
xor
cmp
ffree
add
lea
lock
testl
mov
xchg
in
in
sub
and
mov
push
add
dec
movsb
and
xlat
cwtl
cmp
jo
mov
sbb
push
lcall
mov
mov
pop
lcall
xchg
and
mov
mov
cli
jnp
xor
mov
lea
in
lds
addb
pop
jle
insb
es
add
lret
mov
popf
push
dec
test
push
add
xor
lock
mov
xor
cmc
in
shll
fcompl
dec
mov
into
mov
mov
in
cli
in
dec
data16
nop
add
ss
sbb
pushf
xor
mov
addb
add
mov
add
insb
lods
xor
add
imul
mov
mov
and
mov
fstpl
inc
sbb
xor
mov
mov
mov
add
sub
add
fsubrp
out
sbb
mov
loope
jb
mov
test
insl
jle
or
dec
adc
mov
ss
push
mov
mov
in
movsl
stc
popf
pushf
testb
sub
aam
add
ret
out
mov
dec
lock
fnstcw
and
jl
sbb
sub
add
int
add
adc
rolb
out
xor
mov
leave
xchg
mov
push
add
imul
inc
orl
aam
jae
xchg
sti
fistpl
fldl
pop
push
mov
insl
insb
add
lea
add
fistpl
push
pusha
add
insb
jae
add
xor
push
or
ret
cmp
pop
cmpsl
dec
out
hlt
lods
in
rolb
sbb
outsb
bound
mov
xchg
mov
add
mov
add
push
add
pusha
add
sub
adc
push
mov
mov
xor
rolb
mov
jns
mov
add
mov
mov
out
data16
add
clc
jne
in
lock
imul
mov
pop
jns
push
or
xchg
in
inc
add
imul
add
cld
push
repz
mov
and
mov
sub
add
repz
mov
rcll
mov
testb
jmp
int
outsl
fists
dec
out
inc
adc
mov
xchg
lea
push
mov
lahf
mov
bound
mov
adc
cmp
addr16
mov
push
dec
adc
into
xor
mov
add
sbb
pusha
add
int3
fdivr
or
ds
mov
mov
or
add
das
pop
in
pusha
add
out
fwait
dec
aam
mov
leave
push
test
mov
decb
pop
inc
push
rcll
pop
mov
mov
lcall
add
enter
mov
cmc
mov
mov
ret
aaa
jae
les
add
adc
mov
dec
mov
cld
jl
sti
push
cmp
es
jo
mov
pop
cld
add
mov
imul
call
mov
loope
jmp
inc
and
mov
fidivs
add
out
xchg
and
mov
add
xchg
add
inc
sub
in
add
add
scas
adc
add
add
jo
mov
pushf
ret
stos
xchg
jno
sbb
xor
mov
cmc
and
pcmpeqb
add
inc
add
and
in
rolb
cli
sti
jge
mov
mov
andl
stos
inc
insb
aam
jae
lods
pop
sbb
mov
add
add
pusha
add
loopne
mov
mov
add
out
push
aad
mov
imul
mov
sti
imul
and
mov
cwtl
fiaddl
dec
pop
out
imul
or
mov
stc
mov
mov
xchg
fdivrl
enter
adc
mov
mulb
mov
test
cmp
lods
rolb
mov
popa
cmp
add
lock
nop
add
dec
sub
sbb
mov
sub
push
adc
mov
mov
les
mov
and
mov
sbb
fistps
adc
out
std
mov
add
mov
das
test
in
aaa
cld
pop
je
int
cltd
pop
push
lret
adc
or
sub
lods
inc
add
iret
repz
mov
add
inc
adc
add
inc
add
add
mov
jne
xor
rcrl
mov
jns
dec
push
pop
push
icebp
sti
sbb
cwtl
lahf
and
sti
out
js
push
mov
xchg
add
loop
mov
add
jo
mov
mov
pushf
lret
frstor
xchg
mov
push
cmpsl
sub
mov
loope
cmp
lcall
pop
negl
and
mov
add
sub
mov
mov
cs
mov
aaa
add
mov
outsb
jge
in
ret
test
or
cld
add
mov
ds
adc
mov
notb
mov
mov
add
push
ss
inc
xchg
leave
int3
mov
hlt
jno
sbb
stc
cmc
hlt
inc
pop
sub
test
add
bound
mov
and
push
pop
and
movsl
cli
ljmp
loop
mov
dec
pop
and
xor
sub
fnstsw
repnz
ds
dec
inc
je
aam
add
loop
mov
rorl
mov
hlt
jp
add
pop
in
jbe
push
fimuls
adc
mov
add
mov
loopne
mov
or
rolb
mov
loope
sub
inc
xchg
inc
add
fistpl
sub
xor
mov
movl
inc
icebp
jo
mov
cs
iret
cmp
and
adc
lock
fstpt
dec
dec
aas
in
aas
pop
jno
repnz
push
pop
lcall
push
add
inc
add
mov
add
outsb
loopne
mov
test
and
mov
outsl
mov
jl
mov
sbb
insb
or
add
pop
dec
cltd
inc
add
ret
push
lock
add
add
mov
dec
cwtl
or
mov
mov
mov
add
mov
icebp
xchg
sbb
les
sub
aam
daa
pop
push
xlat
int3
std
stc
pop
push
add
popf
in
add
ret
mov
cld
ss
mov
in
dec
adc
dec
outsl
cld
pop
adc
mov
icebp
jp
out
push
add
mov
push
aaa
test
pop
fsubp
add
mov
adc
pop
aad
inc
add
std
sbb
test
mov
inc
add
out
test
fdivrs
fildl
sahf
dec
int
mov
jmp
add
mov
aam
pop
repz
inc
inc
add
rcl
mov
sub
inc
ds
inc
pop
mov
mov
add
leave
push
iret
push
mov
bound
mov
lods
adc
mov
cmp
cmp
mov
jnp
sbb
push
add
mov
sub
add
add
add
mov
add
xchg
mov
fsubrl
add
xor
mov
fsubrl
stos
mov
mov
loopne
mov
fwait
jmp
cmp
in
fwait
out
xor
cs
or
dec
aad
cwtl
insl
add
add
add
lahf
mov
jecxz
inc
and
mov
movsl
xor
dec
xor
mov
ss
cli
jmp
cmp
ret
mov
pop
jle
dec
lret
pop
repz
sahf
mov
push
mov
sbb
cmp
xchg
add
push
jg
jmp
push
inc
inc
jo
mov
and
fisttpl
aad
mov
outsl
inc
cld
and
cmp
mov
add
mov
aad
cli
push
adc
mov
mov
repnz
mov
fimuls
mov
dec
sub
push
push
aas
dec
xchg
jno
lea
ja
and
add
add
push
push
cmp
punpckhbw
or
dec
outsb
add
cmp
inc
add
addr16
divb
add
push
or
addb
inc
add
jle
clc
cmc
cmpsb
xor
fidivrl
or
test
dec
cmpsb
cltd
cltd
inc
add
pop
add
mov
nop
add
les
or
leave
mov
sub
pop
cmp
cmp
add
and
test
aad
outsl
lock
mov
or
pop
mov
mov
add
decb
scas
push
insl
das
aam
mov
sbb
jge
rolb
scas
xchg
adc
or
add
push
or
fs
jg
leave
mov
mov
insb
fwait
insb
iret
pop
fcoml
daa
xchg
icebp
pusha
add
mov
push
ret
jg
repz
pop
lods
dec
pop
inc
adc
out
nop
add
mov
clc
jno
add
pop
push
test
cmp
add
jmp
mov
fstpt
std
outsl
cmp
mov
mov
into
cmp
add
xorl
xor
cld
mov
call
dec
mov
mov
lret
and
add
adc
adc
mov
sbb
sbb
xlat
adc
mov
mov
jb
mov
mov
sbb
stos
lahf
mov
mov
out
lret
cmovno
jb
mov
add
test
add
push
hlt
inc
add
jmp
imul
outsl
sub
fists
hlt
push
movsl
mov
jmp
push
add
add
dec
sahf
iret
mov
std
xchg
int3
rolb
mov
add
lea
mov
or
mov
bound
mov
dec
sub
into
mov
mov
mov
push
aas
fs
std
shl
pusha
add
add
mov
fucomip
sbb
jp
lds
aaa
jne
addb
or
fs
push
jge
and
mov
or
mov
movsb
sbb
stc
addr16
stc
in
xor
mov
inc
lret
sub
fbld
adc
mov
sbb
mov
mov
inc
add
int3
fdivrs
or
repz
mov
out
add
cwtl
inc
loope
test
icebp
sub
fstp
pop
stos
call
iret
mov
add
movsb
mov
adc
imul
xor
add
mov
dec
mov
out
pop
enter
ds
xchg
xchg
mov
add
outsb
sarl
sub
add
int3
add
mov
cld
or
push
in
in
cmpsl
mov
dec
imul
das
ds
mov
dec
and
mov
stc
outsl
in
xor
mov
lcall
inc
dec
sub
mov
xchg
dec
lret
outsb
cli
mov
mov
add
mov
xlat
addr16
insb
or
lret
mov
xchg
iret
scas
and
xor
mov
rolb
mov
hlt
es
lock
iret
inc
aam
add
pushf
dec
mov
cs
test
jae
add
sbb
mov
xor
mov
int
add
and
mov
scas
mov
add
fimull
enter
jbe
mov
addb
inc
int
add
add
cwtl
xchg
mov
lods
rol
enter
cs
xchg
mov
mov
mov
mov
ret
cmc
push
add
cmp
push
mov
sub
enter
mov
stos
rcll
xor
add
leave
lahf
or
lea
and
adc
outsb
lock
pop
adc
mov
and
push
sbb
push
sub
mov
cmp
adc
xchg
pusha
add
add
pop
adc
mov
adc
adc
dec
int
inc
mov
jmp
insb
loopne
mov
or
jg
lods
bound
mov
or
test
mov
inc
inc
add
sahf
nop
add
add
in
repnz
addb
clc
loope
xlat
outsl
xchg
push
cmp
into
outsw
xor
mov
stc
enter
mov
mov
xchg
push
filds
rolb
dec
dec
hlt
jbe
xchg
mov
sbb
call
enter
scas
lea
jg
lea
xlat
jno
addr16
push
scas
sub
add
add
add
rorl
outsl
loope
xchg
add
lret
inc
iret
fwait
insb
and
mov
add
push
cmp
int3
cld
into
xchg
in
in
pushf
nop
add
add
xchg
add
loope
int3
jp
mov
add
mov
insb
das
popf
out
adc
xchg
mov
xchg
in
addl
rolb
mov
push
rcr
idivl
lcall
arpl
add
fisttps
adc
out
xchg
out
add
out
inc
aam
addb
or
in
jnp
leave
xchg
pop
ret
inc
cmp
add
imul
repz
mov
adc
mov
jmp
add
mov
xchg
enter
ljmp
sub
lea
or
push
jl
pop
jbe
mov
cmp
js
or
push
add
mov
decb
pop
mov
mov
and
add
sbb
or
ja
xchg
leave
pop
add
mov
daa
jle
add
popa
xor
add
mov
scas
fldt
add
mov
lret
into
cltd
push
adc
add
mov
mov
outsl
cmpsb
xchg
shrl
mov
fildl
push
push
add
lods
cwtl
add
push
mov
cmp
xlat
mov
xchg
add
mov
sahf
repz
mov
pop
lods
mov
fcmovnb
add
sub
clc
pop
xor
mov
push
nop
add
pop
xor
outsb
js,pn
lock
inc
inc
inc
or
insb
xchg
inc
outsl
pusha
add
and
inc
add
push
jae
add
jmp
push
add
test
movsb
aad
or
mov
pop
jae
and
mov
mov
daa
cld
xor
mov
jmp
cmp
rep
out
pop
push
insb
jne
xchg
xchg
adc
mov
add
lock
sbb
xchg
adc
data16
pop
scas
push
fwait
sbb
repz
jle
push
sub
daa
push
jb
mov
add
add
lret
fidivrl
add
mov
sahf
mov
mov
outsb
sub
sub
add
lcall
repnz
rolb
mov
adc
mov
out
test
jb
mov
add
in
add
add
add
add
jns
andl
add
jg
iret
cmp
add
pop
mov
fstps
orl
jo
mov
add
stos
jl
xchg
pop
out
mov
cld
into
cmc
lcall
sarl
fisubl
mov
push
test
add
add
xchg
mov
push
insb
push
add
mov
sub
fimull
cld
lret
add
test
mov
cwtl
stos
push
add
cld
mov
cmpsb
ja
xlat
loope,pt
rolb
mov
bound
mov
add
add
sbb
sbb
cmp
push
lcall
mov
pop
cwtl
xor
add
add
lds
add
or
jb
mov
movsb
addb
inc
add
inc
iret
inc
mov
js
sub
jns
dec
popa
lds
or
nop
add
out
sub
addb
jo
mov
jge
mov
sbb
test
filds
add
push
bound
mov
out
ret
stos
aaa
fcompl
mov
int3
inc
ficomps
xchg
clc
sub
or
mov
and
mov
sarl
dec
dec
movsl
xchg
jg
or
pop
bound
mov
hlt
aad
loope
inc
cmp
add
int3
popf
lds
sbb
add
jno
enter
mov
add
add
add
push
popf
push
add
mov
daa
insb
jl
rorl
lea
pop
xor
pop
push
bound
mov
out
pop
push
add
lahf
ss
sub
test
stos
into
notl
xchg
ljmp
xor
mov
out
mov
cs
test
dec
gs
mov
xor
or
or
test
aaa
leave
sti
loope
sbb
cs
add
pop
stos
dec
insb
shll
mov
add
add
mov
sbb
add
je
add
dec
scas
dec
dec
dec
out
cmp
in
add
mov
or
inc
pop
sbb
icebp
insl
and
mov
mov
mov
add
cld
xor
mov
add
test
or
addr16
mov
add
mov
mov
push
mov
mov
add
adc
aad
test
add
adc
lahf
cmp
jl
cld
insb
scas
mov
push
xlat
mov
jb
mov
lret
in
shl
sahf
cmpsl
add
out
sahf
adc
mov
mov
add
add
loop
mov
xchg
arpl
add
mov
test
inc
mov
scas
test
inc
dec
cli
mov
and
mov
sahf
ficomps
mov
mov
sbb
mov
inc
push
fiaddl
cmc
filds
add
add
rolb
icebp
xchg
jae
xchg
ud1
mov
add
mov
add
mov
fwait
sub
in
sub
dec
or
sub
mov
pushf
cmp
adc
mov
sub
mov
outsl
aaa
js
cmp
dec
jg
push
scas
dec
inc
ret
and
lahf
rorl
jns
add
pop
jne
ss
mov
mov
aas
jmp
je
push
aaa
jns
xchg
test
aad
stc
dec
xor
mov
jnp
jne
mov
mov
sar
jae
ret
ss
add
inc
add
xchg
test
pop
pop
xchg
arpl
gs
push
jmp
iret
mov
add
add
jne
push
jecxz
mov
adc
fildll
jmp
testl
rolb
mov
mov
add
loope
jmp
nop
add
lcall
pop
xor
mov
stc
aad
dec
pop
rolb
push
repz
push
push
mov
sbb
mov
mov
mov
xchg
add
into
adc
imul
mov
stos
ja
add
je
mov
pop
outsl
adc
mov
js
sbb
daa
and
mov
push
rolb
scas
dec
stc
adc
mov
inc
add
mov
pop
sbb
fcomp
aam
bound
mov
pusha
add
mov
add
xor
mov
popa
and
iret
sbb
mov
leave
mov
add
out
call
movsl
in
cmp
inc
mov
inc
mov
scas
rolb
mov
add
add
in
pop
ljmp
add
mov
add
mov
cmp
das
std
pusha
add
mov
pushf
scas
in
gs
mov
aas
lock
outsb
push
dec
les
out
addb
cmp
xchg
jno
div
ljmp
push
add
cwtl
lds
lcall
rolb
mov
cmp
xchg
mov
mov
or
nop
add
mov
sub
imul
mov
iret
out
mov
int3
and
mov
stc
stos
jl
push
and
stos
and
mov
mov
out
decl
push
test
repnz
rorl
inc
pop
out
mov
cs
push
push
add
mov
decb
add
add
pop
add
xor
add
xchg
add
add
mov
sbb
pop
jge
xchg
les
add
push
push
mov
adc
mov
push
ja
rorl
repz
xchg
add
mov
push
lret
iret
cld
icebp
xchg
jo
mov
add
cld
jmp
jnp
pop
push
outsb
jg
jl
add
aam
arpl
mov
add
popa
mov
repz
jae
add
add
repnz
nop
add
mov
add
mov
ret
dec
ficompl
cmp
addb
popa
adc
jb
mov
mov
arpl
add
and
sbb
mov
lock
add
adc
mov
mov
testl
inc
mov
cmp
add
jle
pop
push
adc
add
xchg
add
xor
mov
pop
fisubs
mov
xchg
inc
mov
jmp
mov
bsf
fcomps
sahf
into
xchg
sbb
push
add
adc
jg
mov
push
mov
ljmp
xchg
das
imul
mov
fmuls
sahf
test
or
dec
sbb
sbb
cwtl
inc
imul
cmp
mov
xchg
add
aam
into
cmp
inc
std
mov
mov
sub
dec
clc
sbb
lret
add
sub
mov
mov
in
pushf
cmp
xlat
cmp
mov
mov
cwtl
or
test
outsl
insb
push
add
mov
add
js
cmp
xor
mov
orl
mov
addb
cltd
add
mov
sub
in
mov
xor
pop
push
in
xchg
and
mov
add
in
lods
dec
jecxz
sub
les
add
push
cmovnp
push
push
xor
mov
mov
dec
popa
xchg
enter
cmp
jns
jbe
mov
test
mov
mov
mov
jecxz
pop
test
dec
in
jge
jmp
add
push
pop
and
adcl
stc
cmp
enter
hlt
daa
sbb
iret
inc
je
mov
rolb
mov
push
mov
repnz
scas
pushf
dec
lea
add
jne
add
aad
xchg
sbb
mov
rorl
add
aad
add
outsl
stos
jae
lods
xor
mov
jne
sbb
aaa
push
int3
adc
jle
imul
popf
addl
rolb
mov
ja
add
jmp
lods
and
mov
pushf
or
outsb
loop
mov
rolb
cmpsb
cli
lea
add
fists
das
int
inc
cmp
push
adc
mov
jl
sti
test
fnsaves
pop
ljmp
out
pop
sbb
cwtl
push
mov
sub
jp
push
adc
sub
std
test
imul
movsl
or
and
mov
add
mov
iret
adc
out
shl
ds
add
shrl
inc
sbb
sbb
mov
pop
andl
and
adcl
jbe
push
out
cmp
cmpsb
mov
sbb
dec
mov
out
stos
sbb
add
psllw
cmpl
imul
xchg
mov
mov
xlat
adc
mov
add
ljmp
or
mov
jmp
dec
sbb
je
jae
pop
sbb
mov
jns
lock
sub
sub
add
loopne
mov
pop
iret
std
jb
mov
mov
scas
cwtl
push
arpl
mov
mov
mov
mov
add
xor
lods
cld
sbb
cwtl
and
fs
je
in
push
xchg
jb
mov
sbb
fwait
int3
pop
or
add
add
jbe
mov
int
add
mov
std
dec
cmc
inc
sbb
jae
rolb
enter
test
mov
into
cs
mov
rolb
sahf
in
push
add
dec
xchg
push
jmp
mov
stos
hlt
xor
adc
fstl
ss
lods
and
add
adc
popf
pop
in
adc
mov
imul
add
xor
xor
pop
dec
xchg
sub
and
adc
add
jne
mov
mov
add
lods
lret
dec
lea
lds
mov
cmp
int
outsb
loop
mov
xor
mov
mov
inc
stc
push
add
sbb
daa
rcl
cmpsb
sti
or
inc
add
mov
xor
mov
std
scas
xchg
mov
mov
mov
test
cmp
mov
shll
add
xor
gs
add
jb
mov
xor
dec
jbe
add
inc
lods
inc
sub
mov
mov
xchg
jge
dec
subl
inc
leave
gs
mov
imull
js
jle
lret
add
xchg
pop
jbe
hlt
ss
dec
test
inc
fwait
inc
stos
decb
add
and
mov
mov
or
cmp
pop
flds
call
mov
rolb
mov
in
jmp
jno
and
out
lods
aam
nop
add
in
pop
aam
leave
xchg
jge
push
imul
scas
outsl
add
rolb
mov
clc
add
je
add
lea
dec
pop
stc
or
add
mov
mov
add
sub
xchg
add
cmp
les
fldenv
mov
and
stos
stos
lock
inc
add
jb
mov
add
mov
xor
inc
movsb
xchg
popf
pop
sbb
cmpsb
or
add
mov
xchg
cs
aas
push
lcall
mov
loop
mov
sub
mov
mov
and
aam
call
push
mov
pop
andl
cmp
lds
pop
dec
fmul
mov
push
les
lea
in
add
add
mov
jecxz
add
sbb
xchg
and
mov
int3
clc
push
cmp
sub
adc
xlat
in
stc
lcall
addb
lock
sub
mov
pop
mov
add
roll
add
add
xchg
sub
sbb
add
push
mov
rolb
mov
add
clc
jmp
xchg
mov
push
push
bound
mov
push
push
or
xlat
ret
in
add
add
or
icebp
cltd
mov
push
nop
add
ret
dec
sub
lods
mov
js
call
pop
dec
fdivrs
je
test
icebp
mov
jbe
xchg
mov
sub
mov
cmp
add
add
cwtl
pop
dec
out
cltd
inc
test
fldl
xchg
jg
mov
mov
xor
add
push
mov
jle
cld
pop
call
in
inc
stos
push
mov
add
sahf
or
mov
or
pop
or
test
ja
xchg
jbe
xchg
jmp
dec
pop
daa
jo
mov
jle
cs
icebp
sub
mov
sub
in
aad
mov
ret
xchg
mov
add
mov
pop
inc
aas
dec
iret
pushf
cld
mov
cwtl
dec
ss
mov
add
inc
repz
mov
andl
cmp
adc
mov
icebp
adc
cmc
jge
add
cmpsl
lds
add
mov
add
sub
adc
mov
add
jge
out
mov
daa
sub
xlat
es
inc
add
mov
add
xor
addr16
pop
dec
adc
ss
int
rolb
ljmp
dec
xchg
inc
dec
jl
in
cmpsb
adc
add
repnz
mov
adc
xchg
inc
adc
es
movsb
stos
stos
mov
mov
and
adc
and
es
repz
aas
lods
push
cltd
inc
pushf
push
add
add
mov
mov
adc
mov
test
push
sbb
mov
add
ljmp
fbld
dec
xlat
sbb
mov
pop
inc
add
daa
sahf
ljmp
pop
cmp
cmpsl
mov
add
cmp
add
pop
rolb
test
inc
add
mov
test
ret
lods
jns
mov
arpl
mov
jbe
inc
push
dec
out
mov
mov
add
xchg
xchg
out
jmp
mov
jne
add
mov
mov
mov
mov
call
xor
cli
pop
lahf
sub
sbbl
mov
imul
clc
cmp
jl
add
mov
mov
add
lods
loopne
mov
add
inc
jb
mov
pop
mov
xchg
lcall
mov
mov
jecxz
rolb
mov
mov
add
push
inc
add
sub
adc
addr16
mov
mov
xchg
xor
mov
fisubl
