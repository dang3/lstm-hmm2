out
je
dec
out
or
fcompl
mov
sti
push
add
cmp
leave
bound
mov
mov
mov
scas
cs
lcall
mov
fwait
out
add
mov
adc
mov
adc
or
pop
and
mov
mov
mov
push
push
xlat
mov
out
out
sub
inc
add
add
mov
mov
mov
xchg
mov
jg
add
add
mov
mov
add
mov
pushf
mov
mov
rolb
mov
push
jbe
mov
add
insb
mov
xchg
pop
test
mov
mov
mov
rol
lahf
pop
mov
pop
or
mov
call
lret
mov
mov
bound
mov
sbb
jmp
lret
sub
add
aaa
gs
adc
mov
push
jecxz
pop
fldenv
adc
jo
mov
repnz
mov
incl
add
inc
sarl
mov
push
inc
add
add
xor
je
sub
push
out
lods
sub
sub
loop
mov
int
mov
int
adc
mov
ja
cmp
arpl
stc
and
lds
add
add
mov
mov
rcrl
and
add
sbb
and
xchg
add
lea
testl
in
ljmp
or
mov
mov
movsb
push
add
xlat
sbb
xor
push
cmp
int3
ljmp
push
or
scas
inc
stc
pop
dec
loope
add
add
sub
cmp
loopne
mov
add
iret
xchg
cmp
xor
dec
jae
add
mov
jle
iret
pop
cmp
push
xlat
xchg
add
dec
mov
addb
insb
out
lcall
adc
nop
add
rolb
mov
push
pop
sbb
add
pop
mov
out
push
hlt
mov
iret
jg
add
jae
jp
sub
add
add
cli
xor
mov
fcompl
ficoms
hlt
xor
push
add
push
pop
or
xchg
push
stos
mov
je
aad
mov
sub
and
adc
ljmp
pop
and
and
xlat
sub
sahf
jbe
xor
icebp
add
mov
xchg
das
cmpsl
pop
cld
ret
dec
push
add
jae
jb
mov
add
jnp
adc
mov
mov
mov
mov
xchg
jo
mov
mov
sbb
mov
imul
jl
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
jb
mov
jmp
mov
sti
es
fxch
cmp
xchg
dec
jo
mov
add
add
insb
je
add
add
mov
mov
stos
cmc
mov
ficomps
cmc
cmc
jg
add
sub
pop
mov
pop
aam
xor
jne
mov
jnp
mov
add
sub
in
lea
lods
sub
ret
fcomip
add
xchg
xchg
stc
dec
cli
sub
lea
push
pop
xchg
add
rep
cli
push
add
mov
push
mov
add
mov
into
les
movq
into
push
add
icebp
je
in
mov
push
lds
ret
es
rolb
mov
xor
add
js
daa
jg
jmp
cmc
pusha
add
insl
mov
pop
rolb
mov
fwait
lret
add
mov
add
xchg
gs
dec
mov
pop
cwtl
test
mov
out
xor
test
push
xlat
xor
mov
lret
add
mov
mov
mov
jl
flds
mov
mov
and
mov
cwtl
push
push
xchg
sbb
mov
mov
add
lret
cmpsl
test
add
mov
das
fists
stos
push
loope
addb
lahf
mov
iret
sahf
int
add
pop
ja
jl
jo
mov
fldt
ja
add
or
stos
jno
dec
int3
inc
add
push
push
sbb
jle
aaa
pop
inc
addb
xor
mov
rolb
mov
add
sbb
fidivl
add
mov
loop
mov
mov
xor
stc
xchg
inc
addb
gs
xor
mov
pop
adc
mov
test
mov
add
lock
add
add
mov
aad
add
mov
aas
add
mov
cmp
addb
pop
xchg
sbb
add
mov
cs
cs
mov
rolb
mov
add
aam
add
mov
das
lods
lea
fsubrl
orl
and
mov
lret
inc
jns
jmp
add
movsl
decl
roll
mov
push
mov
jns
addb
push
popf
sbb
imul
ret
xor
mov
push
sub
add
inc
add
mov
mov
imul
add
jb
mov
dec
addr16
iret
out
dec
outsl
cli
push
add
mov
lea
mov
mov
dec
cmp
or
xchg
negl
sbb
jmp
or
mov
scas
cmpsb
mov
xchg
xchg
je
pusha
add
push
add
add
xor
and
mov
xor
mov
aaa
push
push
out
test
sbb
mov
xchg
push
cmp
sahf
jmp
add
mov
jg
add
lock
inc
add
movsl
popa
cmp
movsb
or
sub
push
push
in
xchg
mov
lret
lahf
inc
sbb
mov
repnz
cli
enter
movsb
jg
push
in
pushf
xchg
test
lahf
jo
mov
cmp
or
push
mov
fisubl
in
int
fcompl
xchg
jl
sahf
mov
jg
add
inc
mov
sahf
cmp
call
insb
fstpt
mov
rolb
mov
mov
fwait
aas
scas
int
sbb
mov
mov
mov
and
test
movsb
clc
pop
pop
mov
add
stos
mov
inc
sub
add
mov
add
mov
add
sahf
push
ja
or
add
xchg
out
inc
xchg
addb
sub
xor
add
add
sbb
mov
mov
gs
adc
lods
mov
sti
lea
rolb
mov
fisttpll
fists
jb
mov
push
mov
pop
repnz
jl
mov
mov
rolb
mov
mov
jecxz
stos
rcl
ja
aas
outsl
xor
decb
cmp
add
push
test
sbb
rolb
mov
addb
jg
add
dec
mov
pop
cltd
dec
xchg
or
inc
fninit
jle
rcll
and
gs
mov
lcall
push
js
add
aas
data16
leave
out
lock
cmp
add
mov
in
scas
insb
dec
out
adc
shr
lret
lock
sbb
lods
add
sar
pop
out
mov
pop
push
aam
out
push
inc
xor
inc
add
and
mov
test
rolb
mov
pop
xchg
xchg
sahf
mov
cmp
mov
inc
mov
cmc
aam
inc
inc
add
sbb
leave
mov
add
mov
add
mov
repz
rolb
mov
das
fs
mov
cltd
ds
pop
cmpsb
cmpsl
sbb
scas
aam
add
xchg
jnp
dec
and
stos
cmp
mov
mov
lcall
cmc
in
in
add
adc
mov
and
sbb
dec
aad
fs
cmp
jmp
add
add
add
nop
add
outsl
mov
ds
ret
dec
push
mov
and
mov
push
xchg
cmp
jl
jo
mov
pushf
pop
mov
mov
sti
pushf
xchg
add
or
sbb
popa
in
mov
ja
fisubrs
dec
arpl
add
mov
lcall
in
clc
rolb
mov
addb
sub
in
outsl
jb
mov
add
xchg
enter
and
bound
mov
sbb
repz
sub
rolb
mov
add
mov
inc
add
adc
in
nop
add
sub
outsl
gs
roll
mov
xor
fidivrs
sub
dec
xchg
hlt
cltd
mov
mov
cmp
cwtl
jmp
pop
hlt
loop
mov
insl
xchg
outsl
das
pop
bound
mov
sbb
in
mov
in
jl
sub
mov
mov
or
lds
push
add
mov
loope
add
roll
mov
add
std
and
mov
mov
cmp
push
lea
outsl
lcall
mov
mov
xor
mov
push
mov
and
mov
push
add
lahf
xlat
mov
dec
lods
in
insl
fdiv
cltd
sbb
cltd
nop
add
loop
mov
cli
xor
mov
pop
arpl
add
mov
xorl
pop
mov
es
mov
or
int
es
inc
add
add
fistpl
movsb
push
add
stc
lcall
dec
fnstenv
xchg
add
add
cmp
outsb
divl
pushf
jmp
jbe
push
sub
push
push
jecxz
add
sub
add
lds
jmp
mov
out
das
inc
shll
sub
add
push
add
xchg
mov
adc
add
add
mov
mov
cmp
popf
mov
add
lea
pusha
add
stos
xor
mov
aad
push
mov
mov
add
add
sbb
push
das
jmp
sub
cmpsb
pop
sub
xor
mov
add
ljmp
lods
pmuludq
mov
sbb
sub
rolb
mov
sub
imul
ss
insl
jge
lret
sub
and
mov
arpl
push
add
mov
addb
addr16
push
push
xchg
lcall
fistpl
cs
push
ret
out
nop
add
sub
loop
mov
jne
in
jno
push
add
movsl
cmpsl
ss
sub
cld
mov
addl
test
repnz
add
aaa
std
insb
mov
mov
add
mov
mov
mov
push
bound
mov
stos
xlat
out
insl
je
fcomp
jg
jb
mov
mov
lds
sbb
movsl
sbb
sub
dec
xorl
mov
adc
mov
lcall
mov
xchg
mov
icebp
in
mov
scas
mov
call
xchg
inc
add
enter
xor
xchg
mov
out
pop
jbe
dec
push
mov
pop
dec
sbb
cwtl
mov
pop
ret
mov
mov
imul
jbe
push
mov
rolb
mov
cmp
imul
popa
mov
imul
xchg
popf
inc
in
jle
add
xor
int
je
dec
imul
fidivrl
loope
sub
jbe
jl
or
push
mov
aam
sbb
rolb
mov
add
mov
mov
push
add
pop
xchg
push
pop
pop
call
pop
lds
add
mov
add
mov
add
cmp
fcmovne
xor
cwtl
pop
call
loop
mov
inc
repz
mov
repz
cmp
inc
ret
dec
add
mov
push
xchg
xchg
add
addb
aam
and
mov
dec
sbb
in
add
add
loop
mov
sub
or
mov
adc
jb
mov
cbtw
lret
popf
or
push
mov
cli
sbb
push
aad
add
sub
pop
pop
inc
xor
sbb
push
ss
loopne
mov
adc
mov
hlt
mov
sub
dec
insl
test
add
xlat
arpl
push
add
mov
idivb
in
mov
mov
add
mov
mov
mov
mov
cwtl
mov
mov
add
adc
pop
scas
pop
fbld
and
add
and
mov
cmp
imul
adc
mov
pop
pushf
les
jecxz
jns
sbb
mov
xor
adc
mov
js
mov
mov
mov
dec
lahf
cmp
add
faddl
jmp
sbb
out
addb
aas
and
xor
mov
xchg
push
std
cmc
lcall
test
sub
sahf
aam
out
add
mov
aad
lret
jge
add
and
xorl
jge
add
fs
sbb
pusha
add
jge
add
ss
add
xchg
sbb
out
pop
in
lock
add
out
outsl
test
jns
add
mov
add
cmpsb
loop
mov
aaa
sahf
dec
xchg
add
adc
mov
fsubrl
mov
pop
adc
add
scas
pop
lods
jg
or
je
push
fiaddl
mov
lcall
mov
inc
hlt
cmp
dec
stc
stos
enter
lahf
movsl
imul
push
inc
dec
dec
or
push
ss
and
add
aad
xchg
daa
mov
rolb
out
lds
sbb
mov
mov
add
lock
pop
ret
out
jae
lahf
cmp
add
mov
cmp
lods
sub
repz
sti
add
mov
insl
jno
add
add
jo
mov
mov
loop
mov
add
mov
lahf
jecxz
add
call
add
aaa
inc
push
xor
xor
mov
push
rolb
mov
out
std
sbb
sub
add
cld
jl
jnp
lods
pop
ds
push
and
in
xchg
push
in
frstor
sbb
ljmp
mov
sbb
push
add
or
mov
std
andl
add
mov
cmpsl
cld
push
lret
xor
imulw
movsl
imul
out
cltd
and
mov
rorl
rolb
mov
dec
fildll
mov
test
hlt
enterw
xor
bound
mov
add
mov
mov
sbb
jnp
add
fldcw
mov
add
add
mov
add
mov
lods
lds
pop
sbb
pop
aaa
xchg
nop
add
fildl
add
movsb
lock
loope
out
ja
fnsave
fbld
pop
xorl
jnp
and
adc
mov
in
mov
jle
addb
pop
scas
pextrw
dec
xor
sub
pop
test
or
addl
nop
add
test
adc
scas
or
xchg
pop
push
push
adc
mov
adc
js
int3
jecxz
xor
mov
jge
mov
mov
add
lahf
mov
mov
and
adc
mov
push
xor
subl
jbe
out
add
mov
mov
mov
ret
das
jg
and
mov
add
mov
fadds
fsubs
scas
nop
add
xchg
add
aaa
and
mov
jg
fldlg2
imul
imul
pop
aam
sti
sub
iret
aaa
out
in
scas
addr16
into
imul
fsub
gs
mov
mov
mov
and
mov
dec
xchg
idiv
xor
pop
hlt
loopne
mov
mov
rcr
add
mov
xchg
cmpsl
cwtl
jle
cmc
adc
fdiv
clc
cmp
dec
int
add
jmp
in
dec
rcll
arpl
lcall
mov
jg
add
rolb
xor
pusha
add
repz
test
jmp
xchg
sti
adc
leave
xchg
push
mov
inc
cltd
repnz
mov
test
loop
mov
xor
lods
lret
xchg
lock
call
inc
stc
sbb
add
pop
rolb
scas
add
or
loop
mov
rcrl
add
call
loop
mov
imul
sub
inc
fimull
pop
insb
mov
add
xchg
add
xchg
add
add
sub
add
in
movsl
mov
mov
pop
mov
and
mov
dec
jo
mov
jmp
xor
daa
xchg
in
dec
add
push
mov
sbb
in
add
mov
lret
ja
int3
lock
movsl
inc
pushf
cmp
mov
push
add
jno
pop
jmp
mov
mov
push
inc
es
mov
mov
nop
add
and
ret
dec
divl
mov
or
add
mov
rolb
or
mov
pop
mov
insl
imul
mov
cmp
lret
add
mov
xchg
jmp
add
mov
and
ja
jmp
pop
pop
lods
adc
add
addb
clc
nop
add
int3
js
add
int
push
loop
mov
test
pop
aad
inc
lcall
pop
xchg
jb
mov
inc
jae
fnstcw
out
mov
lret
or
mov
movb
mov
mov
pop
jmp
jo
mov
ss
dec
clc
in
lret
lahf
pushf
xchg
jecxz
cmp
cltd
xchg
in
outsb
ds
out
add
out
jmp
jae
xor
cmp
add
jl
popf
push
sub
dec
sub
ljmp
in
mov
mov
cmp
imul
adc
xchg
cmpsl
and
or
test
lcall
xchg
jo
mov
xchg
sbb
int3
addb
xor
add
dec
push
arpl
add
inc
mov
mov
push
rolb
mov
jp
ds
es
rorl
lcall
popa
fldenv
adc
push
lcall
fdivrl
push
insb
test
dec
adc
cmp
mov
push
addr16
popf
jo
mov
mov
pop
cltd
mov
push
xor
mov
ds
leave
xchg
add
push
xor
dec
fsubl
add
enter
mov
push
enter
xchg
lret
mov
rcrl
into
mov
in
sub
movsl
das
insb
insb
mov
movsb
in
sub
aaa
in
loope
add
cltd
cld
pusha
add
inc
mov
mov
jae
rolb
mov
or
inc
mov
mov
mov
jno,pn
pop
and
filds
ljmp
jmp
nop
add
pop
push
loopne
mov
push
push
mov
jno
sbb
movl
pop
ret
sub
jnp
mov
in
mull
xor
add
ret
dec
mov
mov
add
pop
push
add
sub
cmp
sub
test
pop
dec
pop
popa
mov
in
shr
push
fucomi
jmp
popa
int3
lcall
add
adc
mov
frstor
mov
mov
jge
jl
aas
lds
add
mov
pushf
fsubrs
imul
mov
lock
add
sbb
add
inc
fldcw
inc
add
xlat
xor
mov
shll
sbb
sbb
add
mov
inc
mov
push
mov
push
dec
or
mov
pop
ljmp
stos
and
inc
add
xor
mov
fsubrp
adc
mov
add
xchg
xchg
and
mov
dec
int3
jbe
test
mov
add
aam
xor
mov
ret
ret
pushf
mov
inc
add
lea
clc
push
adc
jg
add
adc
sub
push
cmpsl
add
mov
add
pushf
pushf
xchg
mov
pop
mov
popa
xchg
add
mov
add
lcall
jle
cwtl
js
add
imul
test
add
xor
or
iret
add
mov
push
add
add
dec
fwait
in
or
mov
push
dec
add
mov
icebp
adc
stc
ja
push
add
mov
popa
xor
outsb
stos
xor
or
inc
add
push
insb
cmp
inc
loop
mov
pop
into
xlat
fsubp
pusha
add
push
xchg
and
jbe
addr16
xchg
and
mov
outsb
mov
ja
inc
push
divb
add
outsl
xor
add
loope
rolb
mov
lret
dec
faddl
push
sbb
push
ljmp
mov
sarl
xor
add
movl
add
jmp
inc
arpl
jbe
out
aad
test
jno
push
inc
add
sbb
movsl
or
mov
test
add
fbstp
adc
mov
xchg
dec
repz
xor
inc
add
or
insl
data16
mov
jb
mov
pop
int
dec
cmp
pop
mov
add
sub
add
mov
aad
fsubl
mov
pushl
jb
mov
outsl
jecxz
movsb
push
sub
mov
cltd
fildl
test
in
and
xchg
jns
add
mov
adc
mov
adc
fs
mov
mov
push
les
adc
mov
jmp
mov
es
jmp
mov
mov
mov
fucomp
inc
leave
clc
outsb
sahf
lods
add
mov
xor
int
int3
adc
add
roll
sti
push
add
xor
mov
mov
sub
adc
mov
insb
mov
add
mov
fsubs
repz
gs
add
das
lret
mov
imul
sbb
cmp
test
scas
ljmp
aas
xor
adc
push
or
fistpl
loopne
mov
adc
add
popf
stc
scas
sahf
cmp
add
jmp
sti
lods
nop
add
pop
addb
mov
je
dec
adc
and
mov
add
fidivrs
fs
lret
insb
jnp
es
xchg
add
test
insl
cmpsl
push
mov
mov
mov
pop
xchg
cmp
sub
add
ja
pop
or
iret
mov
xlat
mov
jecxz
adcl
mov
mov
test
xor
add
cmp
mov
jl
out
inc
pop
nop
add
hlt
add
mov
add
mov
dec
mov
test
fcoms
xlat
dec
fsts
mov
push
add
call
add
mov
in
mov
imul
xchg
push
in
cmpsb
fmull
pushf
aad
push
mov
sub
movsb
es
cld
addb
aam
movsb
mov
inc
add
xlat
cmp
dec
mov
dec
mov
mov
xchg
lods
mov
lds
add
push
push
add
mov
add
mov
das
push
sbb
jmp
jb
mov
fsubr
add
je
out
test
jg
fdivp
add
idivb
ljmp
shrl
jne
aas
daa
cmp
push
dec
outsl
pop
mov
push
test
lahf
cmp
mov
ljmp
rolb
mov
xor
push
sarl
push
cmovbe
neg
inc
add
cmp
push
leave
mov
add
ss
dec
icebp
mov
rolb
mov
push
adc
sbb
add
ljmp
jno
add
mov
mov
sbb
adc
mov
imul
out
mov
fildl
punpckhbw
daa
xchg
push
inc
cmpsb
adc
add
dec
decb
adc
fs
pusha
add
sti
add
and
mov
add
push
push
gs
jns
xor
sub
xchg
xchg
add
das
or
cwtl
cltd
mov
mov
add
mov
mov
movq
lret
cmp
ret
xor
mov
lcall
pop
js
ljmp
loope
add
outsl
xchg
mov
popf
sbb
int
pusha
add
inc
add
push
adc
mov
pop
xchg
stc
pop
aam
xor
mov
icebp
lock
mov
aas
add
and
outsb
push
add
mov
mov
jae
insl
xchg
xor
loope
sub
and
mov
add
add
mov
fcmovnb
out
or
mov
mov
add
add
add
cmp
jge
cmp
push
in
fadd
add
mov
das
jmp
add
add
add
ret
or
xor
mov
movsb
ljmp
loopne
mov
imul
std
cmpsl
mov
fcomps
and
mov
outsl
icebp
inc
lgs
loopne
mov
pop
rolb
mov
decl
jno
rolb
mov
fcompl
and
cmpsb
repz
hlt
push
aad
jae
pop
push
mov
add
mov
add
scas
pop
ficompl
add
leave
mov
xchg
sub
lcall
cmpsb
rolb
mov
mov
lcall
pop
dec
xchg
insl
sbb
cmpsb
pop
addb
in
mov
mov
sub
daa
xchg
ret
std
jle
outsl
mov
jmp
mov
stos
mov
lahf
xchg
jmp
add
inc
add
hlt
inc
sbb
pop
lods
cmp
jo
mov
loopne
mov
leave
in
notb
add
in
inc
sbb
pop
in
scas
pop
mov
test
dec
imull
nop
add
js
push
add
pop
add
mov
sub
add
mov
add
vminsd
pop
jae
jmp
pop
inc
iret
dec
lock
xchg
cmp
push
lea
pop
sub
gs
cmp
int
sub
sbb
add
mov
out
sbb
mov
icebp
sbb
filds
stos
in
repnz
xchg
sahf
or
pop
gs
out
leave
xorl
mov
xchg
mov
dec
loope
shrl
enter
jne
mov
mov
push
jno
mov
adc
mov
inc
sbb
lret
addb
jle
popa
jmp
add
mov
lock
cld
pop
adc
aam
mov
add
fldt
lock
sti
or
add
test
add
add
add
or
scas
or
add
mov
sub
cmp
adc
rolb
mov
insb
cmp
add
xor
mov
add
mov
add
mov
xor
mov
dec
push
roll
mov
pop
adc
sbb
inc
push
out
daa
sub
mov
mov
cmp
mov
dec
xchg
imul
push
add
mov
enter
dec
stos
out
mov
pushf
jle
pop
mov
leave
xchg
jp
lahf
jne
cli
sub
fstpl
ljmp
arpl
stos
or
sbb
pop
out
movsl
aas
loopne
mov
scas
pop
addb
jae
xchg
outsb
and
sub
out
mov
add
mov
add
add
vorps
mov
mov
mov
mov
mov
pop
inc
add
loope
lahf
push
mov
mov
loopne
mov
mov
popa
hlt
imul
and
ret
aad
cmp
sub
and
xchg
xchg
cwtl
dec
insb
jo
mov
mov
ja
mov
rolb
mov
pop
jmp
add
jae
cmpsl
push
add
xchg
mov
addb
aas
addb
or
insl
cmpsb
mov
push
jnp
daa
sahf
fstps
pop
sub
xor
mov
add
xchg
jno
add
mov
fldenv
pop
mov
mov
clc
bound
mov
enter
cmp
rcll
cmpl
adc
mov
adc
and
mov
mov
mov
decl
jp
dec
gs
mov
inc
cmp
add
mov
dec
mov
loop
mov
inc
cmp
insb
lea
cltd
cmc
add
mov
jmp
and
movb
mov
lds
or
daa
pushl
pop
arpl
decb
and
lret
mull
dec
mov
test
add
inc
enter
jp
add
dec
punpckhdq
add
inc
ret
and
movsb
jmp
and
mov
add
add
bound
mov
cwtl
inc
ret
ja
and
xchg
add
dec
in
movsb
jmp
mov
dec
dec
imul
xor
add
mov
pushl
pop
aam
mov
jns
add
dec
or
pusha
add
test
fisubs
push
stos
xchg
jo
mov
mov
or
popa
push
add
cmp
mov
mov
out
push
or
mov
push
add
lock
mov
movsl
inc
add
mov
mov
add
mov
jae
jb
mov
jns
add
int3
sub
ss
stos
push
adc
arpl
iret
shll
arpl
lret
xor
imul
jp
les
addb
sub
pop
pop
jnp
and
mov
out
push
push
and
movsl
xchg
add
mov
add
sub
sahf
jle
add
xchg
xor
mov
xor
sbb
push
cmp
xor
mov
mov
jnp
xchg
push
push
cmp
test
push
mov
addb
ja
add
stos
push
pop
js
dec
int
add
rolb
in
lcall
enter
add
add
rolb
in
repz
add
xlat
adc
mov
mov
mov
add
pop
jno
imul
dec
arpl
ds
repnz
leave
pop
adc
add
lods
sbb
add
in
clc
pop
and
mov
pusha
add
fldt
pusha
add
mov
outsl
dec
shrl
psrlw
push
xchg
add
imul
inc
or
or
add
jp
js
and
mov
xor
add
mov
inc
int
xor
mov
mov
add
add
addb
inc
and
add
jns
arpl
repz
add
lock
pop
lcall
push
daa
push
dec
into
lock
jnp
pop
cli
pop
xchg
outsb
mov
int
aad
jmp
in
jo
mov
into
lds
push
sbb
aam
divb
les
xor
add
mov
xchg
mov
add
cmp
add
add
xor
mov
xor
mov
add
push
inc
push
stos
jp
ret
and
sbb
fists
jp
sbb
rorl
stc
or
jl
enter
or
fdivrs
mov
insb
jns
stos
mov
mov
mov
mov
add
adc
mov
add
xchg
xchg
add
lds
add
jle
stos
pop
xchg
dec
xchg
addb
inc
pop
push
add
outsl
xor
add
lret
mov
mov
add
mov
or
sub
aas
int3
push
pop
inc
add
add
add
add
sbb
jbe
add
jns
cmp
enter
std
pop
aaa
shll
int
hlt
fiaddl
pop
jnp
cwtl
movl
mov
gs
add
push
stos
jnp
sbb
iret
int
hlt
mov
fistl
mov
adc
mov
addr16
stos
leave
int
clc
repnz
addb
jae
add
lods
cmc
addr16
out
add
mov
fisttpll
sbb
popa
jecxz
bound
mov
mov
push
ficoms
les
inc
and
push
mov
mov
mov
add
mov
or
lds
cltd
and
add
mov
out
xor
lcall
cmp
xchg
sub
stc
xchg
mov
pop
das
leave
imul
xchg
add
mov
adc
mov
jp
push
adc
pop
cmpsl
sbb
in
outsb
fists
pop
ja
aas
mov
rolb
mov
jg
push
mov
mov
lret
imul
sbb
data16
push
pushf
enter
mov
mov
mov
mov
data16
and
pop
lds
xchg
iret
sbb
or
mov
or
and
xor
mov
mov
mov
sub
cli
ret
loope
dec
inc
add
lock
rolb
dec
ljmp
lds
dec
sub
or
mov
jbe
pop
pop
lcall
loop
mov
add
add
add
jno
rcll
mov
mov
jp
add
inc
dec
mov
cwtl
jo
mov
and
mov
mov
sti
repnz
mov
add
xlat
insb
out
add
mov
and
add
xchg
push
in
add
jl
add
and
rcl
aaa
test
add
cmp
mov
in
add
mov
repz
fstl
xchg
xor
mov
push
inc
push
pop
and
popf
fdivp
mov
rolb
mov
add
cwtl
lods
sub
mov
add
lret
or
ror
cltd
or
lahf
test
add
mov
aaa
lock
lret
sub
add
mov
mov
mov
push
insl
movsl
data16
cmp
xchg
push
add
mov
push
stc
xchg
mov
lds
push
push
pop
fbld
add
add
jno
addb
test
imul
cmp
add
test
mov
inc
mov
xchg
loope
add
lret
lock
hlt
xchg
add
jmp
inc
add
mov
inc
pop
les
ds
stos
cmp
cltd
std
sbb
pop
cmp
mov
rep
mov
test
add
outsl
and
rolb
sbb
das
daa
jo
mov
mov
sub
mov
push
inc
daa
cs
dec
arpl
out
cmp
add
andl
dec
addb
in
lret
add
bound
mov
mov
jns
fnstsw
push
jo
mov
jp
add
mov
repz
js
ret
pop
ss
adcl
add
add
cmp
data16
lahf
push
out
cli
dec
mov
jecxz
insl
inc
cmp
or
jecxz
mov
lods
xchg
loop
mov
add
and
xchg
push
xchg
inc
inc
add
mov
rolb
lret
js
lret
pop
adc
popf
add
in
add
out
mov
pop
clc
cwtl
cmp
cmp
mov
add
inc
lret
std
xor
add
mov
add
movsb
std
mov
add
push
out
add
inc
cmc
mov
jg
mov
add
mov
rcrl
push
push
push
xchg
lret
rolb
mov
add
outsb
push
add
add
mov
movsb
das
enter
xor
mov
mov
stos
ja
cmpsb
in
jmp
and
xor
mov
fcoml
jp
mov
jnp
cmc
into
pop
dec
push
mov
test
out
jg
add
aad
pop
mov
xchg
inc
xchg
loope
or
lds
cltd
hlt
pop
mov
bound
mov
pop
adc
mov
cmpsb
pop
jge
divb
mov
test
push
aaa
test
mov
mov
adc
mov
in
add
add
ja
jg
sbb
call
push
aad
aaa
push
cmpl
add
mov
xlat
xor
jge
add
js
cmp
and
mov
mov
sbb
cmp
mov
lcall
dec
cmp
add
add
test
cmpsl
adc
xchg
es
add
mov
and
mov
and
lret
mov
sbb
je
adc
mov
xor
mov
inc
repz
add
stos
pop
bound
mov
mov
jmp
add
add
addb
fcmovnbe
addb
out
movsl
add
cmc
jns
ljmp
divl
je
leave
int
and
push
mov
imulb
pop
xchg
xor
dec
mov
loopne
mov
mov
cltd
ds
xchg
es
pop
and
jb
mov
push
ret
les
xchg
insl
or
sub
add
push
or
mov
mov
call
roll
mov
xor
in
insl
lahf
jge
repz
jno
sbb
push
es
inc
add
sti
sbb
jb
mov
sub
add
dec
stc
dec
les
xorl
add
fmulp
ficoml
add
daa
incb
push
add
stc
mov
xchg
mov
xlat
add
add
lds
fs
sub
fiadds
out
mov
mov
mov
add
lret
bound
mov
out
hlt
enter
adc
stos
cmp
add
out
add
clc
mov
mov
add
mov
das
test
push
xchg
add
mov
cmpsl
jecxz
and
mov
dec
jg
ljmp
into
movsb
cmp
add
inc
inc
push
add
adc
mov
mov
push
add
cmp
std
pop
data16
cmc
test
lcall
xchg
mov
xor
or
push
mov
mov
out
mov
movsl
mov
sub
lret
mov
addb
jecxz
mov
inc
add
jmp
call
add
mov
jle
mov
lcall
and
arpl
add
push
bound
mov
mov
fdivr
and
mov
add
insl
pop
cmc
rolb
push
orl
add
sub
cmp
add
pop
cmp
add
mov
add
push
ret
push
lahf
clc
andl
stc
js
push
pushf
ret
cwtl
cmpsb
xor
mov
lea
jecxz
add
arpl
fisttps
enter
movsb
pop
mov
jns
add
push
outsb
xor
jmp
add
inc
pop
pusha
add
imull
jne
int
push
mov
daa
push
push
xchg
mov
dec
pop
xchg
inc
adc
add
push
aad
aaa
out
loop
mov
ljmp
outsb
popf
inc
xor
mov
xchg
leave
cmp
cwtl
adc
mov
inc
or
push
xor
movl
push
loopne
mov
pop
cld
pop
hlt
enter
ret
aad
pop
faddl
and
mov
mov
ret
dec
lods
mov
jne
sub
add
lock
mov
repnz
mov
mov
and
cmp
inc
inc
mov
jmpw
out
je
or
mov
filds
lcall
ja
in
nop
add
ret
dec
mov
push
xchg
sarl
add
mov
mov
jecxz
or
movsb
and
mov
incb
pop
lea
adc
addb
adc
add
cmp
mov
add
rolb
mov
outsl
repnz
add
mov
add
sub
add
mov
rcll
mov
mov
mov
mov
sub
call
sahf
das
xchg
js
pop
dec
lret
add
adc
add
or
into
flds
ret
loopne
mov
dec
sbb
fiaddl
add
push
stos
sti
fstps
cwtl
xchg
add
mov
jg
xor
adc
mov
push
ret
fs
mov
stos
adc
addb
or
mov
adc
sub
int
add
push
add
jecxz
xor
lock
repz
mov
in
push
fstpt
add
movsb
jg
lret
stc
in
jns
add
rolb
xor
mov
sub
mov
mov
inc
push
push
rcrl
repnz
push
stc
add
mov
inc
lret
cmp
mov
out
in
cmpsb
adc
mov
lcall
add
add
mov
jo
mov
mov
jnp
add
testw
add
mov
cli
xchg
jne
sub
add
mov
push
test
jb
mov
add
and
mov
jne
xchg
sub
xor
mov
gs
leave
mov
cs
sahf
leave
rolb
mov
div
and
pop
rolb
mov
dec
rol
add
dec
xchg
repnz
cmp
mov
and
jae
add
aad
adc
cwtl
bound
mov
mov
push
fnsave
cs
push
repnz
mov
addr16
push
jmp
lcall
xchg
add
mov
or
imul
pop
out
xchg
cltd
or
and
pop
pop
add
mov
mov
rolb
mov
out
mov
cmp
imul
data16
adc
mov
pushf
push
jne
cmp
add
incb
jb
mov
mov
mov
int3
pop
inc
in
jge
scas
inc
xchg
in
xor
mov
aaa
cmpsl
add
mov
mov
push
mov
leave
and
mov
push
bound
mov
repz
mov
inc
dec
sbb
dec
sbb
notl
add
mov
add
mov
call
dec
ret
ljmp
sub
jl
fistpl
mov
imul
test
add
mov
cmp
fdiv
ss
sub
sbb
test
insl
mov
pop
addps
shrl
pop
mov
mov
sub
inc
push
push
push
adcl
sar
dec
ja
jae
add
xchg
push
add
test
stos
pop
cmpsl
or
inc
add
loope
rolb
mov
push
in
nop
add
mov
stos
hlt
inc
add
out
mov
mov
add
mov
add
sbb
cwtl
jp
lahf
outsl
xchg
inc
sub
or
sahf
xor
mov
ficoms
aad
add
addr16
mov
cmp
xor
adc
mov
mov
cmpsb
add
mov
add
sbb
xor
aad
mov
inc
add
mov
mov
jle
add
mov
mov
dec
xor
and
ds
stc
inc
add
dec
fidivrs
push
inc
inc
cld
fs
mov
dec
and
mov
xchg
pop
or
pop
hlt
scas
cld
ljmp
add
adc
mov
ja
add
mov
cmp
nop
add
xor
mov
lcall
mov
bound
mov
adc
mov
out
ret
xchg
iret
xor
xor
mov
sbb
ds
mov
mov
cltd
fimull
sub
add
mov
mov
out
mov
mov
add
xchg
mov
cmpsb
test
push
fldl
popa
lods
sbb
mov
jmp
jno
std
lcall
push
inc
lods
insl
sub
mov
mov
add
mov
xchg
add
cltd
loopne
mov
test
cmovge
fnstenv
pop
mov
push
xor
or
jmp
add
test
push
add
test
cwtl
mov
mov
cli
adc
stos
push
lret
loope
cmp
pusha
add
xor
mov
add
scas
popf
rcll
dec
scas
add
cli
or
mov
and
mov
jns
test
add
movsl
mov
dec
testb
lock
sub
je
mov
stc
lcall
inc
mov
add
mov
hlt
nop
add
push
mov
je
dec
fmull
shr
cmp
lcall
add
and
cltd
adc
pop
sub
rolb
mov
enter
les
les
and
mov
lret
cld
mov
icebp
into
daa
imul
pop
sbb
jge
dec
mov
gs
addr16
or
and
mov
mov
stos
jg
pop
hlt
rolb
mov
cmp
add
mov
stos
xchg
and
mov
mov
ret
xor
mov
js
add
mov
sahf
stc
aas
jo
mov
out
mov
push
mov
mov
imul
in
es
adc
mov
mov
into
mov
adc
imull
out
jp
mov
adc
mov
jge
movsl
cmp
mov
adc
mov
in
xchg
jmp
jge
ret
dec
sub
mov
add
add
mov
add
add
faddl
inc
pop
leave
mov
dec
lahf
add
aam
mov
sbb
xor
add
mov
mov
popf
dec
sub
add
or
or
xor
mov
dec
test
sbb
pop
cmp
and
mov
add
and
scas
xor
mov
pop
push
in
fimull
cmp
mov
add
and
jo
mov
cltd
lock
inc
add
add
push
clc
or
je
movsb
push
or
mov
add
add
mov
pop
cmp
addb
out
das
adc
mov
imul
cli
cwtl
add
mov
and
mov
add
mov
repnz
jb
mov
ds
mov
and
mov
mov
ss
mov
and
push
jno
pop
popf
and
popa
into
jnp
sub
mov
lahf
cmp
int3
call
mov
add
mov
add
es
mov
scas
or
add
add
pop
and
imul
jle
add
add
and
mov
cld
in
add
cmp
or
mov
sub
mov
cmp
cmp
les
movsl
mov
or
dec
inc
add
dec
mov
out
and
mov
and
cmp
add
sti
xlat
mov
mov
fbld
xchg
pop
add
mov
mov
sbb
and
sub
lahf
or
push
call
xchg
sti
cmp
lcall
fstps
mov
scas
rolb
mov
cld
imul
imul
add
rolb
dec
push
add
pop
hlt
das
pop
add
or
ss
add
pusha
add
mov
add
je
sbb
mov
xor
mov
daa
mov
pop
lahf
fstps
jle
lods
insl
add
mov
xchg
add
pop
mov
mov
cmpsb
ds
lret
addr16
xchg
dec
and
xor
and
add
movsb
rolb
mov
gs
add
loop
mov
xor
mov
mov
cmpsl
inc
xorl
pop
push
mov
add
enter
push
add
sarl
inc
aad
call
mov
mov
add
stc
push
std
popf
clc
sarl
sbb
mov
arpl
repnz
and
mov
sub
repz
jnp
shrl
mov
movups
add
push
push
test
cmpsb
mov
mov
push
jp
pop
hlt
imul
xor
lock
jns
addb
push
in
fcmovb
xchg
lahf
lret
mov
mov
jge
pushf
inc
mov
mov
xchg
adc
xchg
add
sbb
aas
lods
lret
mov
mov
out
or
bound
mov
pop
push
add
push
jnp
or
mov
or
lods
test
sbb
mov
sti
pop
xor
dec
ficomps
xchg
push
scas
mov
pop
push
ficomps
sub
pop
jb
mov
push
addb
jne
dec
sub
outsb
xor
mov
push
mov
cmp
add
mov
add
add
shll
iret
push
add
mov
mov
push
jns
inc
sub
mov
add
mov
arpl
pop
sbb
add
mov
xchg
add
fdivrl
stos
ret
adc
in
add
cmp
and
mov
loopne
mov
jae
je
or
std
jmp
mov
add
jp
mov
jo
mov
sbb
add
mov
insb
xor
xor
mov
or
jmp
add
cs
inc
add
xor
mov
dec
push
mov
pop
in
cmpsl
pop
sbb
mov
adc
mov
jl
pop
cmp
xchg
out
cmp
mov
mov
jnp
add
pop
dec
push
insb
jecxz
sub
mov
stos
inc
add
adc
mov
lcall
push
pop
inc
call
sub
lret
sub
jns
fwait
cmp
aad
sbb
or
inc
jp
sbb
das
add
mov
sahf
jecxz
aad
inc
dec
sahf
mov
mov
jg
jb
mov
add
cmp
in
jp
push
rolb
sahf
push
add
lea
popf
cmp
test
arpl
mull
cwtl
popf
sub
jae
dec
jb
mov
push
in
mov
add
nop
add
std
dec
sbb
mov
adc
mov
add
mov
das
xchg
sbb
cmp
add
lret
out
je
inc
add
shrl
stos
enter
push
enter
aaa
jno
cmp
push
sub
bound
mov
test
add
jns
lock
mov
sbb
outsl
xlat
ds
add
into
mov
or
and
mov
adc
popf
lret
loop
mov
mov
mov
sbb
xor
mov
lods
hlt
bound
mov
mov
mov
aas
das
mov
add
mov
pop
jl
cmp
cmp
mov
jecxz
rolb
mov
dec
lock
adc
scas
adc
mov
rolb
pushf
jg
add
mov
mov
mov
jge
stc
xchg
cmpl
gs
imulb
xchg
sub
add
mov
lods
lods
addb
jnp
notb
mov
mov
add
cmc
iret
add
mov
mov
mov
mov
pusha
add
cs
sub
xchg
bound
mov
stc
repz
mov
mov
lret
fcmovne
jecxz
and
jne
dec
lock
orl
ljmp
adc
and
pop
ja
repnz
mov
add
add
loop
mov
les
neg
push
ds
jbe
add
repnz
mov
aad
outsb
or
push
add
jbe
pop
into
rolb
mov
fnstenv
pop
pusha
add
rolb
rolb
mov
jl
fnstsw
xor
jb
mov
xor
mov
mov
add
lret
mov
js
and
mov
or
out
and
rcrl
mov
lods
cmp
je
add
pop
sbb
dec
js
pop
adc
mov
add
mov
sbb
sub
push
jle
cmp
push
shll
mov
add
jp
pop
lret
adc
mov
rolb
mov
inc
add
rolb
pop
cld
adc
mov
add
aad
add
add
add
imul
out
and
cmp
and
ljmp
pop
push
hlt
or
mov
hlt
dec
lea
lret
dec
fistps
std
mov
add
data16
das
adc
mov
and
add
mov
add
add
mov
add
mov
hlt
rcll
add
add
int
sub
std
mov
jmp
adc
jle
sbb
add
mov
dec
pushf
jo
mov
es
out
mov
add
and
mov
pop
sbb
mov
mov
fists
lret
adc
push
mov
scas
dec
sbb
pop
movsb
mov
lods
push
fs
push
mov
mov
inc
push
mov
jnp
loopne
mov
cmp
rolb
dec
fisttpl
push
insb
dec
and
inc
xor
mov
shll
xor
sbb
or
dec
enter
addb
and
mov
fsubrs
add
jo
mov
sub
xor
mov
mov
pop
xchg
add
cmp
push
mov
mov
cmp
sub
jp
pop
push
add
rolb
mov
test
lahf
imull
fistl
adc
mov
mov
scas
inc
movsb
xor
int3
push
push
xchg
in
lods
sub
cmp
test
jns
and
mov
adcl
nop
add
sub
mov
or
mov
mov
push
setae
arpl
popf
and
mov
fsts
pusha
add
imul
mov
mov
mov
lahf
lock
movsl
aas
jge
ds
mov
jbe
push
repz
mov
mov
repnz
data16
xor
mov
add
cmp
add
loopne
mov
cltd
sbb
andl
mov
mov
rolb
xor
mov
add
dec
sahf
addb
push
add
test
add
jb
mov
lea
push
mov
mov
dec
mov
mov
mov
pop
movsb
shrl
mov
mov
mov
mov
test
jge
fistps
inc
add
mov
sbb
add
sbb
and
rolb
mov
and
mov
add
mov
push
add
cmpsl
jae
lods
lahf
push
jns
add
movzwl
dec
ds
lahf
outsl
sbb
loope
add
scas
and
scas
sub
mov
mov
mov
enter
dec
push
add
ds
lods
sti
pop
hlt
or
mov
push
je
fcomps
jg
add
rolb
mov
icebp
in
jmp
cmc
test
mov
add
adc
inc
cs
decb
add
push
add
jnp
jae
popf
jge
mov
add
mov
fstl
or
dec
pop
aam
xchg
enter
out
int
cmp
add
dec
mov
add
loop
mov
ds
lods
loop
mov
ja
dec
rolb
mov
push
pop
push
pop
popa
mov
mov
aam
jbe
jnp
add
sub
call
pop
bound
mov
mov
add
repz
js
add
mov
add
pop
push
cmpsl
cmpsb
inc
jmp
pop
xchg
xchg
xchg
arpl
pop
xchg
sub
xor
push
jo
mov
add
inc
add
xor
cld
xchg
cs
out
add
fs
ss
icebp
lods
ja
pop
sbb
xor
mov
cmp
push
test
inc
sbb
lock
mov
mov
lods
outsb
rolb
mov
lea
mov
add
dec
or
bound
mov
insl
rcrl
pop
xchg
push
push
push
je
and
add
pusha
add
mov
add
fs
ret
mov
addb
stc
xor
add
sbb
add
lret
gs
das
pop
jp
cmpsb
cmc
push
mov
mov
push
add
mov
ljmp
add
add
test
shrl
icebp
cmpsb
test
sar
inc
cmp
lret
test
iret
out
add
mov
add
mov
mov
jne
add
je
repnz
test
int
iret
xchg
mov
xchg
xor
insl
push
jo
mov
mov
outsl
sub
daa
js
add
mov
pop
ljmp
lahf
xor
add
mov
sbb
mov
call
xor
mov
je
in
cmpsl
cmp
mov
sbb
bound
mov
jae
imul
add
jo
mov
jge
stos
int
clc
addb
sahf
cli
xchg
cs
aaa
dec
mov
shll
mov
out
dec
cmp
sahf
mov
cs
mov
int
js
add
loopne
mov
mov
and
and
mov
mov
mov
xchg
cli
mov
mov
add
mov
jp
adc
mov
lcall
mov
cmc
ret
mov
mov
and
mov
out
cli
xor
mov
arpl
or
les
pushf
xchg
pop
fs
mov
in
jmp
push
cmp
mov
lock
aaa
in
out
insl
movsb
ss
adc
xchg
mov
and
lret
lcall
mov
mov
xchg
xor
mov
fisubrs
xchg
popf
sahf
imul
add
push
push
mov
aam
pop
imul
bound
mov
aam
inc
xor
add
pop
pop
inc
test
xchg
les
mov
jp
add
mov
add
lea
loopne
mov
add
mov
and
scas
dec
lcall
lock
sbbl
orl
jg
loopne
mov
add
mov
out
and
mov
arpl
ds
in
lds
add
mov
add
inc
cltd
fcmovnbe
xchg
inc
add
jo
mov
push
call
add
push
adc
mov
add
push
es
scas
sub
into
cmpsb
aad
testb
add
lret
mov
test
ficoml
stos
imul
pusha
add
fbstp
popa
iret
js
sub
data16
mov
adc
mov
and
aas
xchg
inc
int
lods
cwtl
pop
ret
es
jg
test
inc
je
cmp
sbb
xor
pusha
add
and
mov
sahf
and
in
and
add
loopne
mov
xor
leave
rcl
mov
mov
xchg
mov
mov
mov
inc
pop
add
mov
mov
jmp
mov
addb
mov
mov
hlt
push
xchg
cmpsl
jp
xchg
xor
shll
mov
lcall
mov
mov
add
clc
cltd
rolb
add
rolb
mov
and
test
add
sbb
insb
fwait
mov
mov
mov
mov
jecxz
out
push
add
fwait
addb
push
fsts
rolb
mov
adc
add
push
pop
rolb
mov
iret
mov
jle
inc
dec
pop
and
fstp
jl
add
or
mov
or
inc
and
mov
in
out
jnp
inc
xchg
adc
mov
cmp
add
jecxz
jo
mov
rolb
mov
sbb
cmp
das
das
out
or
scas
inc
mov
addb
mov
xchg
or
xor
mov
mov
sub
add
test
push
add
add
sub
add
xchg
sub
incb
xlat
test
add
cwtl
je
or
add
jbe
add
jb
mov
leave
push
add
mov
mov
mov
mov
es
mov
dec
fwait
je
add
add
xchg
add
test
mov
repz
inc
subl
out
xor
add
jb
mov
push
cmc
mov
bound
mov
xlat
pop
dec
push
shl
add
mov
mov
ss
push
add
adc
mov
mov
sbb
mov
add
insl
mov
mov
xchg
add
mov
mov
mov
mov
mov
mov
push
xor
daa
pop
inc
test
mov
inc
and
mov
adcl
add
xor
add
dec
inc
in
loop
mov
xchg
add
pop
sbb
adc
imul
and
mov
scas
sub
add
shll
cmc
nop
add
pushf
cmp
mov
insb
mov
mov
pusha
add
shl
add
rolb
mov
cmp
add
add
rcrl
aaa
cs
mov
daa
and
rcrl
or
mov
in
out
pop
in
inc
aam
xchg
popf
nop
add
xor
add
xor
add
sbb
pop
pop
and
hlt
xor
ljmp
mov
mov
mov
js
jbe
push
fiaddl
add
push
test
or
testl
add
xchg
add
cmp
cmpsl
stos
loope
test
xor
add
add
add
popa
stos
jo
mov
std
cld
or
addr16
sub
xor
mov
mov
sahf
push
add
adc
mov
xor
mov
lea
aaa
movsl
adcl
mov
cwtl
pusha
add
aad
push
aad
inc
nop
add
fs
xchg
xchg
xor
mov
sub
enter
mov
cmp
push
or
xor
mov
xchg
jae
add
push
add
mov
scas
sbb
xor
add
adc
mov
mov
jns
add
stos
mov
ret
mov
arpl
and
pop
notl
fidivrs
mov
inc
or
add
xor
add
mov
mov
fcmove
sbb
or
mov
mov
loopne
mov
das
lcall
inc
pop
mov
add
mov
pop
test
pop
aas
lret
mov
jmp
fwait
sub
test
sbb
and
dec
ds
xchg
push
mov
daa
rolb
mov
out
mov
cmp
js
mov
sahf
xor
xchg
push
jle
push
faddl
push
add
add
repnz
pop
lods
cmpsb
sub
sbb
xor
mov
jge
inc
mov
jge
mov
push
xchg
mov
jecxz
add
pushf
rcrl
add
add
mov
add
leave
and
mov
and
dec
std
jae
xchg
nop
add
ret
mov
mov
rolb
stos
jae
aam
cltd
hlt
add
cltd
fstps
mov
add
mov
fnstsw
push
cli
in
add
jae
enter
stc
xlat
jmp
mov
lods
mov
imul
jmp
shll
mov
inc
push
push
scas
jmp
dec
cld
cmp
add
repz
sahf
cmp
push
std
mov
das
movsb
pop
jo
mov
bound
mov
mov
mov
pop
movsb
xchg
repnz
and
push
ret
mov
sti
dec
sub
fsubp
cwtl
cmc
test
dec
addr16
fisttpll
add
loopne
mov
mov
stc
aam
xor
inc
add
ret
jbe
adc
add
jns
out
pop
scas
xor
pop
add
aaa
and
mov
mov
icebp
pusha
add
popf
jo
mov
mov
mov
jb
mov
xor
mov
idivl
xchg
add
mov
mov
movsb
bound
mov
push
loope
loope
xor
fidivs
mov
cmc
pushf
lds
cmp
mov
or
aas
int3
inc
xor
mov
add
fnstsw
and
popf
pop
fistpll
mov
push
iret
in
pusha
add
sub
inc
add
sub
stc
mov
testl
add
lods
mov
add
js
add
or
and
sub
xchg
mov
stc
mov
sbb
add
pushf
mov
add
mov
loopne
mov
cmc
hlt
push
out
loop
mov
std
inc
push
fstl
flds
add
add
jnp
mov
add
mov
push
inc
mov
dec
fcomi
imul
sub
fildll
or
outsl
and
idivb
int
rcrl
aam
pop
mov
call
loope
lret
iret
stos
scas
mov
mov
add
mov
divb
add
jp
fldenv
gs
jae
incb
data16
mov
rolb
mov
jl
xchg
in
or
aad
sbb
mov
push
js
add
jnp
push
movsb
cmpsb
fwait
push
adc
popa
mov
push
fstpt
mov
outsl
mov
mov
add
int
push
out
fmul
arpl
mov
mov
ja
dec
mov
inc
stc
stos
inc
add
sbb
sti
push
popa
mov
daa
jmp
aam
adc
dec
mov
add
jbe
cmp
je
jmp
ljmp
add
push
mov
jp
jnp
sub
cmpsl
dec
mov
mov
add
cli
es
das
ljmp
push
adc
mov
fdivrs
in
adc
mov
pop
mov
mov
jbe
int3
xchg
sbb
sbb
outsl
dec
mov
or
incb
pop
nop
add
add
mov
add
ljmp
add
div
adc
or
push
call
add
cmpsb
xchg
imul
mov
xchg
xchg
and
cwtl
fldl
inc
dec
ret
outsl
jno
or
stos
stos
rolb
lret
add
testb
mov
aam
mov
mov
ljmp
mov
add
mov
shll
out
sarl
pop
push
dec
pop
and
mov
add
lahf
mov
fwait
add
mov
or
jb
mov
jb
mov
mov
cmp
mov
lods
orl
mov
mov
jae
push
or
js
bound
mov
popf
aad
dec
dec
push
popa
xchg
push
sub
inc
dec
cli
idivb
mov
or
pop
js
movsb
inc
add
sub
mov
test
int3
pusha
add
loop
mov
xchg
dec
mov
imul
jae
add
add
stc
loop
mov
mov
cld
scas
dec
sub
in
test
cli
das
andl
mov
cltd
inc
in
and
mov
sub
push
addb
xchg
adc
mov
jecxz
xor
mov
sahf
adc
mov
rolb
mov
jge
aad
out
int3
idivb
nop
add
les
xchg
sti
inc
mov
lods
bound
mov
inc
add
rol
imul
mov
pop
pop
hlt
jmp
add
push
hlt
pusha
add
loope
pop
lcall
ret
movsl
fistpll
add
mov
adc
mov
xlat
add
mov
cmp
fwait
sub
mov
xor
mov
cmp
fimull
cmovb
mov
mov
and
mov
cmp
add
mov
fildl
or
mov
out
fsin
mov
mov
rcrl
daa
mov
mov
add
inc
jl
adc
mov
cwtl
inc
sub
test
mov
test
pop
or
out
pop
jmp
inc
add
leave
gs
add
imul
push
in
sahf
aam
mov
sub
jo
mov
insl
mov
inc
xchg
add
stos
pop
push
cwtl
outsb
scas
sub
ja
fisttpl
or
sti
dec
cld
mov
dec
aas
movsl
call
mov
pop
inc
mov
mov
fsubrp
jg
push
mov
cmp
lret
out
fldcw
add
mov
add
mov
adc
mov
aam
jmp
pop
sbb
jl
gs
sbb
xchg
mov
sahf
aad
lods
call
cltd
dec
inc
xchg
or
stos
rolb
les
jb
mov
add
xchg
stos
bound
mov
xchg
adc
sbbl
add
fdivrl
add
hlt
test
adc
cwtl
les
mov
sub
jmp
add
lret
dec
jnp
jecxz
adc
mov
movsb
aad
add
mov
or
rolb
mov
mov
cmpxchg
or
loope
ss
stc
or
mov
add
and
aad
adc
xchg
dec
inc
rolb
mov
leave
insl
mov
int
dec
mov
addr16
push
cmpsl
cs
add
mov
jge
mov
add
data16
add
mov
add
fstl
rorl
xchg
outsb
and
mov
add
ret
lret
outsb
sbb
inc
push
push
call
add
lds
mov
mov
inc
and
dec
adc
fstpt
xchg
cmp
lcall
mov
mov
ret
cmc
dec
int
xor
xor
mov
mov
mov
xor
push
enter
xor
mov
add
aad
adc
popf
inc
inc
add
ret
adc
insl
sbb
inc
xor
mov
out
stos
dec
rolb
out
jno
je
push
scas
sub
adc
jp
leave
xchg
cmp
ficoms
push
adc
xor
dec
mov
stos
sub
pop
sti
scas
out
jmp
leave
pop
add
sbb
sub
addb
mov
lret
popa
sub
jae
jb
mov
add
push
and
and
mov
add
adc
push
mov
std
in
test
add
add
sub
fucomip
push
push
jbe
xchg
xchg
fs
lret
inc
add
cli
cmp
adc
add
pop
xchg
arpl
les
mov
mov
movsl
icebp
daa
cmp
out
jge
leave
mov
pusha
add
pop
cld
stos
mov
shl
add
xchg
jle
add
icebp
mov
xchg
notb
sub
lock
sbb
and
jns
testb
inc
add
xor
mov
mov
mov
inc
stos
addb
push
cmp
mov
stc
jb
mov
xchg
lcall
inc
xor
movsb
push
push
jo
mov
and
mov
addb
orl
pop
inc
pop
aad
stc
addb
jge
mov
mov
mov
mov
mov
push
add
xchg
xchg
ficoms
mov
jae
add
add
mov
ret
pop
add
out
pop
mov
mov
add
leave
lods
bound
mov
dec
mov
roll
outsb
inc
pusha
add
xor
mov
mov
repnz
jnp
lea
add
push
js
loopne
mov
movsl
jae
add
popf
mov
mov
stos
sbb
adc
mov
mov
movl
hlt
jbe
cmp
mov
clc
dec
adc
mov
fst
mov
inc
add
dec
stos
xorl
jge
add
jecxz
mov
jp
aas
iret
sti
inc
dec
push
pop
jl
add
popf
arpl
mov
sub
mov
mov
add
inc
add
and
insl
xchg
adc
outsb
xchg
loopnew
mov
fsub
mov
or
jns
pushl
jge
addb
shll
inc
add
and
mov
stos
sbb
loope
ficoml
add
add
mov
add
sbb
shl
mov
pop
fsts
out
add
sub
addr16
rolb
mov
dec
fstpl
push
and
mov
jbe
mov
mov
test
mov
fwait
rolb
xor
push
dec
and
push
aad
push
insl
testb
aaa
inc
add
mov
and
mov
sub
add
push
add
test
sub
scas
xchg
xlat
sbb
es
xchg
nop
add
mov
pop
stos
pop
fwait
or
add
je
add
imul
cmpsl
loope
lds
inc
add
lahf
in
cmpsl
xorl
and
mov
xchg
cmpsl
cmc
scas
fisubrl
cli
movsb
fadds
movsl
addb
push
outsb
add
mov
xor
mov
into
test
pop
jbe
add
test
mov
push
fisubs
xor
jae
dec
inc
add
push
sbb
add
mov
or
push
es
aaa
mov
mov
and
jge
mov
mov
imul
dec
call
mov
adc
mov
add
dec
push
pop
push
mov
mov
mov
mov
xchg
sbb
dec
add
sti
lret
sti
sub
sbb
push
cmp
bound
mov
add
aaa
ret
subl
mov
mov
mov
test
mov
cmpsb
cmp
test
insl
push
jge
xchg
or
popf
push
sbb
xor
rolb
dec
jns
xchg
sbb
jp
jmp
mov
aaa
pushf
daa
or
insl
movsl
pop
cmpsl
dec
icebp
and
cmpsb
pop
sbb
loope
mov
negl
mov
pusha
add
sbb
xor
mov
iret
in
add
out
inc
ja
cmp
add
pusha
add
mov
push
add
add
mov
add
out
xchg
add
out
das
scas
mov
lods
jno
add
or
stc
pop
and
scas
mov
sub
lods
and
mov
add
lods
in
mov
xchg
sbb
mov
adc
adc
add
add
mov
icebp
cld
addr16
and
mov
mov
stc
fwait
adcl
mov
sub
outsl
out
cmp
mov
add
repnz
bound
mov
in
and
mov
inc
aas
sti
lock
int3
and
mov
dec
xchg
xlat
rol
fs
hlt
adc
sub
add
push
dec
jbe
cmc
out
xor
mov
orl
decb
lock
mov
mov
mov
jecxz
sbb
incl
cmp
add
add
rolb
inc
movsb
inc
mov
cmpsl
add
adc
call
sub
je
mov
sub
sub
add
aaa
or
in
lret
mov
cmp
movsb
inc
mov
hlt
adc
scas
xor
add
and
add
ljmp
movsl
jecxz
and
mov
fs
fsubrl
sbbl
loope
adc
adc
mov
sub
imul
and
mov
cltd
addb
inc
imul
mov
xor
add
ret
les
dec
ficomps
lcall
mov
into
push
inc
out
jb
mov
insl
xchg
adc
mov
inc
aam
inc
push
xchg
ljmp
gs
insl
or
add
aaa
inc
add
cs
call
repnz
lods
cmp
xchg
xchg
addps
sbb
aam
add
sub
add
ret
mov
pop
mov
add
mov
sub
sub
gs
xlat
and
insb
pop
jne
inc
loopne
mov
pop
sahf
push
movsb
ljmp
icebp
in
inc
add
lea
push
incl
mov
iret
popf
movsl
int3
adc
mov
push
add
push
or
jo
mov
and
adc
mov
sti
out
faddp
add
xchg
mov
fidivl
mov
push
stos
pop
ljmp
mov
mov
adc
add
add
adc
mov
enter
fwait
jmp
addb
in
mov
or
add
pushf
test
pop
add
mov
add
cli
jg
leave
in
orl
and
add
imul
mov
push
roll
xor
mov
nop
add
jle
add
negl
xor
xchg
push
lock
test
daa
jmp
jl
addr16
sbb
sbb
mov
mov
dec
aas
sub
mov
jnp
jecxz
rolb
mov
jle
addr16
iret
movsl
xchg
stos
jbe
inc
push
int3
icebp
mov
scas
lea
dec
jle
movsb
add
dec
add
and
sub
add
pusha
add
test
or
dec
je
push
pop
push
sbb
sub
icebp
and
mov
add
jae
add
add
cld
bound
mov
mov
add
or
adc
mov
mov
add
pop
add
and
mov
mov
dec
xor
mov
add
mov
gs
test
sub
rolb
mov
add
push
inc
add
lds
fadds
clc
add
add
mov
mov
jmp
add
dec
inc
cltd
mov
pop
lcall
sbb
mov
add
fcomps
test
das
pop
jl
mov
fistpll
pop
mov
frstor
mov
mov
mov
push
mov
loopne
mov
orl
fnsave
cmpsl
or
addb
adc
popa
inc
dec
pusha
add
sbb
sti
xlat
and
mov
aaa
xchg
insb
rorl
mov
mov
data16
mov
loope
add
mov
jmp
repnz
mov
add
dec
jle
xchg
or
mov
mov
mov
cmp
add
xchg
aas
insb
xchg
cmpsl
gs
fisttps
cli
sub
scas
icebp
mov
std
adc
jnp
jge
add
adc
shll
popf
xchg
insb
push
sub
jg
add
fwait
mov
add
ds
repz
and
cmc
ds
scas
cmp
cmp
add
repz
mov
lret
push
inc
mov
inc
add
and
xor
inc
push
inc
add
pushf
stos
ret
mov
out
or
mov
mov
inc
rolb
mov
fistpl
lea
sbb
add
mov
leave
or
add
adc
mov
xor
mov
cmp
inc
add
stc
add
mov
xlat
inc
daa
fistpl
pop
add
in
and
add
mov
aam
dec
shll
mov
dec
and
add
mov
mov
inc
add
mov
xor
add
ja
test
mov
add
mov
pop
pop
int
sub
divl
mov
add
and
out
mov
jne
add
inc
stc
test
xor
mov
sub
dec
xchg
add
loop
mov
mov
add
lock
aam
sub
cmc
test
mov
mov
fcoml
out
sbb
add
mov
pop
dec
lret
test
sub
mov
add
jae
xor
mov
add
addl
sbb
pop
out
out
mov
push
jbe
add
lods
aas
lret
std
int3
pop
fsubr
sbb
lahf
push
mov
lds
sub
add
add
inc
add
repnz
nop
cld
jae
mov
popa
push
mov
xchg
ret
add
add
add
mov
nop
leave
jmp
add
add
and
fstl
repnz
nop
cld
jae
add
add
jb
clc
repnz
nop
cld
jae
sbb
add
mov
xchg
pop
stos
clc
repnz
nop
cld
jae
fisubl
add
mov
clc
repnz
nop
cld
jae
add
popf
jg
dec
push
push
mov
nop
leave
jmp
add
add
and
notb
jb
clc
repnz
nop
cld
jae
add
add
mov
nop
cld
jae
mov
lock
add
jae
mov
nop
leave
jmp
je
add
push
mov
xchg
ret
add
mov
lods
push
push
mov
xchg
ret
sub
add
pop
push
push
mov
xchg
ret
mov
add
movsb
and
push
mov
xchg
ret
add
pop
int
mov
shlb
mov
inc
test
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
jne
push
push
mov
repnz
nop
cld
jae
js
js
mov
jl
sbb
repnz
nop
cld
jae
add
jne
add
xor
clc
repnz
nop
cld
jae
add
in
add
shrb
dec
push
mov
nop
leave
jmp
add
sbb
movsb
push
je
add
int3
stos
clc
repnz
nop
cld
jae
in
and
je
add
add
add
add
repnz
nop
cld
jae
popf
mov
xor
push
mov
xchg
ret
data16
lahf
push
add
and
add
add
mov
push
js
xchg
popa
push
mov
nop
leave
jmp
or
add
push
add
sub
pop
jmp
xchg
lock
add
pop
popl
add
add
pop
je
cmpw
push
mov
nop
leave
jmp
add
or
insl
push
jle
mov
add
in
nop
leave
jmp
movsb
add
in
push
clc
repnz
nop
cld
jae
xchg
mov
mov
lea
push
mov
nop
leave
jmp
add
ret
add
mov
clc
repnz
nop
cld
jae
add
add
jne
add
clc
repnz
nop
cld
jae
cld
int
add
fstpt
push
mov
nop
leave
jmp
add
jo
add
pushl
clc
repnz
nop
cld
jae
add
add
or
push
mov
nop
leave
jmp
movsb
aaa
pushl
jne
add
jnp
aam
add
mov
mov
push
mov
nop
leave
jmp
lahf
mov
push
clc
repnz
nop
cld
jae
and
mov
mov
clc
repnz
nop
cld
jae
add
movsb
aaa
movsb
add
addr16
fstps
mov
xchg
ret
push
mov
sub
test
add
fs
add
repnz
nop
cld
jae
add
aad
add
add
push
mov
xchg
ret
add
add
and
add
push
pop
push
inc
in
mov
clc
repnz
nop
cld
jae
and
and
push
mov
xchg
ret
mov
add
add
add
cmp
repnz
nop
cld
jae
mov
sub
shll
push
mov
or
jbe
data16
lea
pop
clc
repnz
nop
cld
jae
scas
add
movsb
inc
fimuls
nop
nop
cld
jae
add
push
add
add
adc
jmp
movsb
adc
add
js
lock
and
and
mov
mov
clc
repnz
nop
cld
jae
add
out
dec
jne
clc
repnz
nop
cld
jae
add
cs
push
mov
nop
leave
jmp
push
mov
add
add
hlt
roll
cmp
nop
nop
cld
jae
add
lock
in
repnz
pop
mov
add
shr
icebp
add
add
mov
clc
repnz
nop
cld
jae
mov
cli
add
clc
repnz
nop
cld
jae
xchg
movsb
add
pop
fiaddl
or
inc
add
add
add
push
mov
nop
cld
jae
fidivrl
add
sub
sub
push
mov
xchg
ret
cld
add
mov
add
clc
repnz
nop
cld
jae
scas
movsb
lock
aad
test
repnz
nop
cld
jae
or
mov
mov
clc
repnz
nop
cld
jae
rolb
jo
popf
mov
push
mov
xchg
ret
jg
jg
add
mov
mov
xchg
push
mov
nop
leave
jmp
add
sar
movsb
enter
nop
nop
cld
jae
push
add
mov
nop
nop
cld
jae
add
add
mov
add
shrl
repnz
nop
cld
jae
mov
add
sub
repnz
nop
cld
jae
sub
add
mov
push
sub
dec
int3
inc
add
add
mov
dec
push
mov
nop
leave
jmp
scas
push
dec
xchg
add
in
adc
add
xor
jmp
add
lahf
add
mov
in
fiaddl
dec
push
clc
repnz
nop
cld
jae
add
or
data16
add
mov
dec
cmp
repnz
nop
cld
jae
add
mov
nop
cld
jae
push
add
add
add
in
lcall
mov
nop
leave
jmp
sub
pop
add
aaa
clc
ret
clc
repnz
nop
cld
jae
insl
add
mov
xlat
sub
test
add
clc
repnz
nop
cld
jae
add
add
mov
mov
add
push
mov
xchg
ret
add
add
ret
out
push
clc
repnz
nop
cld
jae
cld
xchg
jo
mov
adc
mov
xor
clc
repnz
nop
cld
jae
add
add
sbb
repz
add
mov
xchg
insl
sub
pusha
push
mov
xchg
ret
add
sub
mov
add
mov
xchg
ret
add
in
push
or
repnz
or
add
repnz
nop
cld
jae
add
jg
loopne
clc
repnz
nop
cld
jae
jo
add
jg
mov
dec
cmp
repnz
nop
cld
jae
movsb
add
movsb
jo
add
clc
repnz
nop
cld
jae
sub
out
jne
clc
repnz
nop
cld
jae
add
ss
pushl
push
mov
xchg
ret
sub
and
mov
stos
add
push
mov
xchg
ret
mov
add
push
mov
nop
leave
jmp
in
mov
add
mov
clc
repnz
nop
cld
jae
sub
add
mov
subl
push
mov
xchg
ret
add
insl
add
test
clc
repnz
nop
cld
jae
add
add
add
add
mov
xchg
ret
adc
add
add
test
add
clc
repnz
nop
cld
jae
add
pop
push
mov
nop
leave
jmp
sbb
add
in
mov
repnz
nop
cld
jae
add
sbb
movsb
mov
jg
clc
repnz
nop
cld
jae
add
loopne
insl
in
in
push
ret
stos
call
jmp
add
aaa
add
sub
add
repnz
nop
cld
jae
add
add
movsb
and
add
fists
repnz
nop
cld
jae
add
mov
push
add
sbb
pushl
clc
repnz
nop
cld
jae
add
pop
add
inc
daa
jg
dec
push
clc
repnz
nop
cld
jae
add
sub
jg
leave
clc
repnz
nop
cld
jae
add
xchg
add
int
mov
repnz
nop
cld
jae
mov
add
nop
nop
cld
jae
add
add
jge
clc
repnz
nop
cld
jae
add
test
pop
insl
add
outsb
push
push
mov
xchg
ret
add
je
or
clc
repnz
nop
cld
jae
sbb
movsb
movsb
push
imul
nop
nop
cld
jae
add
add
mov
ret
lods
add
clc
repnz
nop
cld
jae
pop
mov
lock
mov
clc
repnz
nop
cld
jae
lahf
add
mov
adc
mov
movb
add
clc
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
incl
mov
fmuls
loopne
add
mov
pushl
or
nop
nop
cld
jae
add
add
aas
jne
clc
repnz
nop
cld
jae
mov
pop
or
mov
nop
leave
jmp
sub
mov
test
push
mov
nop
leave
jmp
add
and
je
clc
repnz
nop
cld
jae
lock
adc
mov
mov
rcrl
cld
jae
add
rolb
shlb
movl
add
push
insl
add
add
pop
movswl
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
push
mov
or
inc
add
add
lock
inc
bound
mov
dec
cmp
repnz
nop
cld
jae
xchg
add
in
mov
clc
repnz
nop
cld
jae
rcl
jne
ljmp
repnz
nop
cld
jae
mov
dec
push
mov
nop
leave
jmp
movsb
movsb
add
sbb
add
dec
push
push
mov
xchg
ret
add
push
jo
add
scas
add
clc
repnz
nop
cld
jae
scas
xchg
add
movsb
movsb
mov
dec
add
repnz
nop
cld
jae
add
int
add
xlat
xor
xchg
mov
repnz
nop
cld
jae
movsb
or
add
in
pop
je
clc
repnz
nop
cld
jae
add
sbb
sub
push
mov
nop
leave
jmp
mov
inc
sbb
nopl
add
repnz
nop
cld
jae
mov
push
push
mov
xchg
ret
scas
add
aaa
jle
enter
in
nop
leave
jmp
movb
mov
mov
push
mov
xchg
ret
mov
dec
xchg
aaa
add
aad
add
clc
repnz
nop
cld
jae
add
inc
insl
jne
clc
repnz
nop
cld
jae
lahf
add
shl
clc
repnz
nop
cld
jae
add
add
dec
or
test
nop
nop
cld
jae
mov
add
push
mov
xchg
ret
popf
add
mov
sqrtps
in
nop
leave
jmp
add
insl
insl
add
inc
clc
repnz
nop
cld
jae
add
mov
movsb
push
out
jnp
mov
push
mov
nop
leave
jmp
add
add
sbb
push
mov
nop
leave
jmp
add
incl
add
rolb
mov
mov
push
mov
xchg
ret
and
add
js
add
push
mov
nop
leave
jmp
add
add
lahf
aaa
and
add
add
mov
fidivrl
add
and
mov
and
push
mov
xchg
ret
movsb
and
xor
mov
add
clc
repnz
nop
cld
jae
and
xor
mov
xchg
dec
lods
clc
repnz
nop
cld
jae
pop
add
movb
add
test
clc
repnz
nop
cld
jae
sbb
add
push
std
mov
clc
repnz
nop
cld
jae
fcmovb
jg
inc
or
mov
xchg
ret
aaa
add
add
xchg
add
sub
add
clc
repnz
nop
cld
jae
je
push
in
sub
ljmp
push
mov
nop
leave
jmp
movb
loopne
push
add
jb,pt
push
mov
nop
leave
jmp
add
adc
test
push
mov
add
nop
add
add
pusha
mov
add
add
nop
add
mov
nop
leave
jmp
aad
add
lock
add
aad
push
clc
repnz
nop
cld
jae
sbb
add
cmpsl
push
mov
repnz
nop
cld
jae
push
lock
adc
in
nop
leave
jmp
lahf
add
add
test
add
nop
nop
cld
jae
push
push
add
xor
push
mov
xchg
ret
add
or
add
adc
mov
clc
repnz
nop
cld
jae
dec
add
add
in
and
sub
push
mov
xchg
ret
js
insl
sbb
add
add
mov
clc
repnz
nop
cld
jae
add
enter
push
mov
xchg
ret
add
movsb
add
adc
mov
push
mov
xchg
ret
or
add
pop
jmp
mov
dec
pushw
mov
mov
push
add
or
adc
adc
daa
and
repnz
nop
cld
jae
mov
loopne
and
mov
clc
repnz
nop
cld
jae
lock
push
movsb
mov
cmp
clc
repnz
nop
cld
jae
int
add
jno
add
push
mov
xchg
ret
mov
inc
cmp
and
inc
add
push
insl
mov
sbb
pop
jmp
loopne
sbb
aaa
add
rolb
push
push
push
mov
xchg
ret
add
or
add
jne
clc
repnz
nop
cld
jae
add
ljmp
or
repnz
nop
cld
jae
add
jge
in
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
push
insl
add
push
mov
xchg
ret
add
add
push
cld
mov
and
clc
repnz
nop
cld
jae
or
mov
pop
push
mov
xchg
ret
add
add
pop
mov
mov
clc
repnz
nop
cld
jae
movsb
add
mov
incl
push
mov
nop
leave
jmp
mov
inc
mov
nop
cld
jae
sub
je
and
jle
clc
repnz
nop
cld
jae
add
js
push
xchg
jg
and
push
mov
nop
leave
jmp
add
int
lea
clc
repnz
nop
cld
jae
aaa
add
outsl
push
push
mov
nop
leave
jmp
push
aad
add
push
add
clc
repnz
nop
cld
jae
add
mov
jg
sub
popa
add
mov
nop
leave
jmp
popf
add
mov
repnz
nop
cld
jae
add
test
ja
jne
clc
repnz
nop
cld
jae
pop
pop
in
nop
add
push
mov
xchg
ret
add
and
mov
test
push
add
clc
repnz
nop
cld
jae
mov
lock
mov
clc
repnz
nop
cld
jae
decl
popl
pop
mov
fdiv
stos
clc
repnz
nop
cld
jae
mov
in
mov
lock
dec
rep
push
mov
nop
leave
jmp
cld
add
add
jo
out
push
clc
repnz
nop
cld
jae
add
push
add
in
push
clc
repnz
nop
cld
jae
mov
add
or
repnz
nop
cld
jae
add
add
movsb
adc
mov
add
clc
repnz
nop
cld
jae
je
mov
add
push
mov
xchg
ret
pop
add
mov
push
mov
xchg
ret
or
add
add
add
add
ss
add
mov
pop
jg
jmp
add
repnz
nop
cld
jae
mov
cld
or
add
clc
repnz
nop
cld
jae
pop
pushw
test
add
adc
sub
imul
cld
jae
aaa
add
ficompl
add
clc
repnz
nop
cld
jae
add
lock
or
mov
nop
leave
jmp
js
add
add
mov
sub
add
add
add
dec
add
pop
add
clc
repnz
nop
cld
jae
xchg
add
push
mov
add
mov
xchg
ret
inc
test
popf
mov
scas
enter
nop
cld
jae
jo
ficoml
js
mov
push
push
mov
nop
leave
jmp
add
cmpsb
fsubr
enter
add
je
movsb
add
aad
mov
add
dec
jmp
incl
sbb
jg
lock
add
jb
jae
clc
repnz
nop
cld
jae
mov
aaa
out
add
nop
nop
cld
jae
dec
add
int
add
jmp
sar
nop
nop
cld
jae
add
and
add
nop
nop
cld
jae
mov
add
movsb
xor
mov
mov
clc
repnz
nop
cld
jae
loopne
add
mov
repnz
nop
cld
jae
add
movsb
add
loopne
xchg
mov
add
clc
repnz
nop
cld
jae
pop
add
push
clc
repnz
nop
cld
jae
add
add
insl
mov
clc
repnz
nop
cld
jae
add
mov
add
repnz
nop
cld
jae
add
sbb
add
mov
clc
repnz
nop
cld
jae
sub
mov
aas
shr
clc
repnz
nop
cld
jae
pop
mov
lret
and
push
mov
xchg
ret
add
shlb
mov
mov
mov
push
mov
nop
leave
jmp
add
add
movsb
add
add
add
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
incl
lahf
mov
jmp
inc
movsb
mov
add
in
aas
nop
clc
repnz
nop
cld
jae
add
and
or
dec
sub
clc
repnz
nop
cld
jae
add
jg
movsb
ja
and
push
mov
xchg
ret
mov
add
and
mov
clc
repnz
nop
cld
jae
add
push
in
xchg
movsb
xchg
or
nop
nop
cld
jae
mov
push
xchg
sub
push
push
add
clc
repnz
nop
cld
jae
lock
and
clc
repnz
nop
cld
jae
sub
mov
mov
dec
or
mov
xchg
ret
add
std
add
jmp
add
add
lahf
pop
add
or
add
jne
xchg
jp
push
mov
nop
leave
jmp
add
add
movsb
loopne
add
inc
add
dec
push
mov
xchg
ret
add
add
mov
andl
nop
leave
jmp
add
lahf
pop
inc
repnz
xchg
add
ja
sub
repnz
add
and
and
in
add
push
mov
xchg
ret
add
pop
movsb
xchg
mov
sub
psubsw
ljmp
push
adc
js
jo
add
js
loopne
mov
je
pop
mov
clc
repnz
nop
cld
jae
cld
jne
scas
je
and
mov
pop
sub
push
mov
xchg
ret
mov
push
add
repnz
nop
cld
jae
add
add
aam
add
repnz
nop
cld
jae
add
cld
and
mov
nop
nop
cld
jae
mov
js
popf
test
nop
nop
cld
jae
mov
add
js
mov
clc
repnz
nop
cld
jae
add
movzwl
clc
repnz
nop
cld
jae
mov
stos
mov
clc
repnz
nop
cld
jae
jo
sub
in
adc
pop
pop
push
mov
nop
leave
jmp
add
movsb
add
jecxz
shr
clc
repnz
nop
cld
jae
add
add
xchg
dec
popl
in
nop
leave
jmp
in
add
mov
stos
mov
push
mov
xchg
ret
add
mov
pusha
add
mov
sub
sub
inc
add
pop
cld
add
in
add
cmp
inc
add
ret
scas
add
jg
mov
push
mov
nop
leave
jmp
add
add
push
push
dec
cmp
repnz
nop
cld
jae
add
test
fiadds
xchg
ret
add
lahf
ret
add
sbb
mov
popa
add
repnz
nop
cld
jae
je
dec
fcmovb
add
test
push
mov
nop
leave
jmp
movsb
add
mov
mov
xchg
ret
add
add
add
mov
dec
adc
mov
xchg
ret
movsb
mov
add
add
push
mov
nop
leave
jmp
add
movsb
pop
movb
add
inc
adc
repnz
nop
cld
jae
add
sbbl
clc
repnz
nop
cld
jae
incl
add
cmpsl
mov
popf
clc
repnz
nop
cld
jae
jne
adc
add
push
mov
xchg
ret
dec
add
movb
mov
add
repnz
nop
cld
jae
add
ret
push
push
mov
xchg
ret
inc
pop
add
movsb
add
xchg
add
rep
clc
repnz
nop
cld
jae
popf
mov
mov
call
clc
repnz
nop
cld
jae
pop
add
fsubrs
jae
inc
push
add
add
add
or
clc
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
imul
jae
jg
popf
add
add
mov
xchg
ret
sub
sub
add
adc
sub
test
repnz
nop
cld
jae
add
or
movsl
push
mov
nop
leave
jmp
movsb
cld
pop
add
add
and
mov
popa
add
mov
xchg
ret
and
jmp
repnz
nop
cld
jae
push
add
ret
add
nop
nop
cld
jae
sub
in
add
mov
arpl
push
popa
clc
repnz
nop
cld
jae
push
jo
and
decl
or
push
mov
nop
leave
jmp
movsb
add
pop
int
mov
clc
repnz
nop
cld
jae
cld
sub
mov
mov
push
push
mov
xchg
ret
in
add
scas
add
mov
clc
repnz
nop
cld
jae
and
movzwl
push
mov
nop
leave
jmp
mov
add
add
repnz
nop
cld
jae
add
lock
pop
add
mov
add
push
mov
xchg
ret
add
movsb
add
add
addb
mov
clc
repnz
nop
cld
jae
add
add
add
add
and
push
add
push
add
dec
add
add
xchg
add
or
nop
nop
cld
jae
jmp
jl
inc
and
clc
repnz
nop
cld
jae
movsb
add
pop
add
outsl
loopne
mov
xchg
ret
add
push
mov
mov
nop
leave
jmp
add
loopne
movsb
xor
xchg
or
mov
nop
leave
jmp
mov
adc
add
jae
mov
clc
repnz
nop
cld
jae
dec
add
sub
add
clc
repnz
nop
cld
jae
cld
add
add
clc
repnz
nop
cld
jae
in
add
and
mov
xchg
ret
xchg
add
xchg
add
repz
repnz
nop
cld
jae
lahf
add
add
sbb
dec
cmp
push
mov
nop
leave
jmp
add
add
insl
dec
add
nop
nop
cld
jae
sub
mov
sbb
imul
clc
repnz
nop
cld
jae
in
add
rolb
mov
push
mov
xchg
ret
add
mov
mov
repnz
nop
cld
jae
insl
je
push
add
popf
js
adc
in
nop
leave
jmp
sub
insl
pop
add
in
mov
add
add
in
nop
leave
jmp
or
push
imul
repnz
nop
cld
jae
int
mov
add
repnz
nop
cld
jae
and
movsb
ljmp
add
in
push
push
mov
xchg
ret
add
ret
jo
popf
mov
repnz
nop
cld
jae
aad
add
push
jne
clc
repnz
nop
cld
jae
sub
mov
popa
add
repnz
nop
cld
jae
add
add
add
ret
clc
repnz
nop
cld
jae
inc
add
sbb
add
clc
repnz
nop
cld
jae
sbb
add
and
sbb
cld
add
add
test
data16
adc
dec
test
call
push
mov
nop
leave
jmp
ret
add
clc
repnz
nop
cld
jae
sub
add
mov
mov
nop
nop
cld
jae
add
sub
repnz
nop
cld
jae
mov
cmpsl
push
add
push
mov
nop
leave
jmp
or
pop
jg
mov
clc
repnz
nop
cld
jae
add
popf
add
add
adc
mov
xchg
ret
push
mov
mov
push
mov
nop
leave
jmp
inc
add
sbb
add
push
mov
nop
leave
jmp
inc
lahf
add
call
push
mov
nop
leave
jmp
int
add
aam
pop
clc
repnz
nop
cld
jae
jo
fidivrl
sub
clc
repnz
nop
cld
jae
xchg
add
push
clc
repnz
nop
cld
jae
add
add
mov
push
push
mov
xchg
ret
mov
dec
aaa
or
in
add
add
repnz
nop
cld
jae
add
movsb
sbb
add
rclb
nop
leave
jmp
mov
scas
loopne
rolb
mov
aad
add
add
add
cltd
xor
clc
repnz
nop
cld
jae
add
scas
add
add
pop
push
mov
xchg
ret
add
add
insb
add
push
mov
nop
leave
jmp
push
add
sub
mov
jg
clc
repnz
nop
cld
jae
add
push
xchg
pop
push
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
pop
pop
or
pusha
add
add
cld
jae
inc
cld
adc
and
sbb
nop
nop
cld
jae
add
add
add
out
incl
jo
push
aad
add
or
mov
xor
push
mov
xchg
ret
add
xor
cmpl
push
mov
nop
leave
jmp
add
add
movzwl
clc
repnz
nop
cld
jae
dec
push
push
mov
add
add
add
bound
push
add
mov
add
cmc
js
notl
in
nop
leave
jmp
or
add
sbb
and
add
clc
repnz
nop
cld
jae
add
sbb
in
push
push
mov
nop
leave
jmp
add
add
add
mov
repnz
nop
cld
jae
xchg
js
fisttpll
lds
xchg
ret
add
add
add
add
pusha
add
xlat
jne
add
push
mov
xchg
ret
sub
push
add
add
mov
push
mov
xchg
ret
movsb
add
pop
inc
xchg
in
decb
nop
cld
jae
sub
or
add
sbb
clc
repnz
nop
cld
jae
and
cld
pop
mov
push
push
mov
xchg
ret
add
add
aad
pop
add
add
push
mov
xchg
ret
aad
add
push
movsb
add
and
stos
clc
repnz
nop
cld
jae
add
popl
cltd
sub
clc
repnz
nop
cld
jae
in
add
add
hlt
pop
call
clc
repnz
nop
cld
jae
loopne
add
add
adc
add
in
nop
leave
jmp
push
add
mov
lock
inc
or
dec
cmp
repnz
nop
cld
jae
xchg
add
cld
je
testb
pusha
push
mov
nop
leave
jmp
fidivl
movsb
lahf
add
mov
clc
repnz
nop
cld
jae
add
movsb
jge
clc
push
mov
xchg
ret
je
sbb
int
push
add
add
push
mov
nop
leave
jmp
add
sbb
push
sub
mov
clc
repnz
nop
cld
jae
add
add
popa
add
repnz
nop
cld
jae
mov
mov
cmpl
push
mov
nop
leave
jmp
add
icebp
lods
pop
clc
repnz
nop
cld
jae
mov
add
aad
add
mov
clc
repnz
nop
cld
jae
mov
add
mov
shl
push
mov
nop
leave
jmp
add
add
mov
mov
add
add
in
nop
leave
jmp
add
data16
jmp
add
add
mov
movsb
movsb
add
mov
clc
repnz
nop
cld
jae
add
add
mov
fisubrs
sar
nop
nop
cld
jae
and
add
lahf
add
das
pop
push
mov
xchg
ret
int
mov
pop
data16
push
push
mov
nop
leave
jmp
pop
add
and
fiaddl
add
lret
and
clc
repnz
nop
cld
jae
in
lahf
xchg
add
das
add
clc
repnz
nop
cld
jae
add
add
jno
clc
repnz
nop
cld
jae
cld
add
fnstcw
clc
repnz
nop
cld
jae
cld
movsb
add
push
mov
xchg
ret
or
jo
sbb
call
in
nop
leave
jmp
add
insl
add
xchg
add
clc
repnz
nop
cld
jae
or
push
mov
mov
mov
add
rolb
xchg
sbb
sahf
mov
push
mov
nop
leave
jmp
add
push
scas
decl
push
mov
xchg
ret
mov
mov
repnz
nop
cld
jae
add
add
lock
je
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
sub
add
pop
push
mov
xchg
ret
pop
mov
add
mov
pop
add
clc
repnz
nop
cld
jae
add
je
add
clc
repnz
nop
cld
jae
in
xchg
add
push
sub
subl
jae
and
and
nop
nop
cld
jae
lahf
rolb
mov
add
add
insl
add
clc
repnz
nop
cld
jae
add
add
add
mov
mov
sar
repnz
nop
cld
jae
jo
sbb
in
sbb
and
push
mov
xchg
ret
add
shlb
and
cmp
nop
nop
cld
jae
add
loopne
jne
cs
clc
repnz
nop
cld
jae
lahf
int
push
mov
mov
stc
hlt
inc
add
aad
pop
push
mov
xchg
ret
insl
pop
add
inc
pop
add
pop
mov
clc
repnz
nop
cld
jae
mov
lods
push
mov
xchg
ret
push
mov
mov
mov
into
inc
push
mov
xchg
ret
push
movsb
add
mov
xchg
push
mov
xchg
ret
aaa
cld
pop
popf
push
add
pop
mov
clc
repnz
nop
cld
jae
xchg
aad
add
add
inc
and
repnz
nop
cld
jae
mov
add
mov
push
mov
xchg
ret
cld
in
loopne
and
movsb
mov
mov
mov
nop
nop
cld
jae
rclb
pop
add
movsl
pop
push
push
mov
xchg
ret
lahf
add
dec
add
ret
mov
sub
clc
repnz
nop
cld
jae
add
add
push
mov
clc
repnz
nop
cld
jae
xchg
xchg
add
add
sbb
clc
repnz
nop
cld
jae
aad
add
and
push
push
mov
xchg
ret
jo
add
or
or
push
mov
xchg
ret
jg
add
add
add
stos
add
push
mov
xchg
ret
movsb
sbb
add
in
add
repnz
nop
cld
jae
push
or
add
mov
push
mov
xchg
ret
je
jo
add
mov
clc
repnz
nop
cld
jae
add
add
mov
jp
push
mov
nop
leave
jmp
add
in
add
push
push
push
mov
xchg
ret
add
sub
sub
nop
cld
jae
pop
lahf
add
mov
lea
push
mov
xchg
ret
add
add
leave
push
mov
xchg
ret
jne
push
aad
add
jne
mov
clc
repnz
nop
cld
jae
and
mov
mov
rclb
add
inc
add
dec
add
shrl
dec
cmp
mov
xchg
ret
add
add
scas
add
sub
sti
clc
repnz
nop
cld
jae
xchg
loopne
add
in
mov
nop
cld
jae
mov
insl
inc
sub
add
clc
repnz
nop
cld
jae
add
push
sbb
rcrl
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
add
add
mov
push
call
push
mov
nop
leave
jmp
add
add
xor
mov
clc
repnz
nop
cld
jae
je
loopne
test
pop
mov
push
mov
nop
leave
jmp
movsb
and
add
dec
add
clc
repnz
nop
cld
jae
add
add
jne
add
repnz
nop
cld
jae
adc
jg
xchg
popf
add
push
mov
xchg
ret
aaa
sub
or
frstor
clc
repnz
nop
cld
jae
add
mov
mov
add
lcall
pop
lcall
push
mov
xchg
ret
add
jo
mov
dec
push
push
mov
nop
leave
jmp
push
mov
ret
fldl
repz
mov
xchg
ret
pop
or
add
repz
repnz
nop
cld
jae
add
xchg
mov
mov
xchg
ret
add
mov
sbb
or
clc
repnz
nop
cld
jae
add
or
add
clc
repnz
nop
cld
jae
add
add
dec
cli
dec
push
mov
xchg
ret
or
or
mov
icebp
adc
mov
rolb
mov
mov
add
repnz
nop
cld
jae
and
jo
icebp
out
subl
clc
repnz
nop
cld
jae
je
add
pop
mov
clc
repnz
nop
cld
jae
add
int
or
add
data16
arpl
clc
repnz
nop
cld
jae
cld
add
push
cld
pop
push
mov
nop
leave
jmp
mov
in
add
xchg
add
pop
push
mov
xchg
ret
xchg
add
push
jo
and
repnz
nop
cld
jae
add
loopne
lahf
add
add
rep
push
mov
xchg
ret
push
or
adc
ret
test
push
add
push
ret
add
add
movsb
add
addl
call
in
nop
leave
jmp
adc
xchg
rorl
push
mov
add
testb
cmp
cwtl
xor
sbb
mov
nop
leave
jmp
in
js
add
add
add
mov
jmp
clc
repnz
nop
cld
jae
add
and
or
popa
jo
mov
incl
in
nop
leave
jmp
add
push
inc
lock
push
add
inc
mov
add
add
push
data16
cld
add
pop
sub
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
lock
add
es
add
push
mov
xchg
ret
shlb
inc
icebp
push
mov
nop
leave
jmp
add
mov
pop
mov
add
push
mov
xchg
ret
xchg
jo
add
add
and
mov
mov
cld
jae
add
mov
add
outsl
pusha
clc
repnz
nop
cld
jae
je
movsb
mov
in
pusha
push
mov
xchg
ret
and
int
movsb
add
add
pop
mov
clc
repnz
nop
cld
jae
add
add
add
aam
mov
clc
repnz
nop
cld
jae
jg
add
nop
nop
cld
jae
sbb
add
add
popf
xchg
nop
cld
jae
mov
in
mov
cmp
mov
in
nop
leave
jmp
mov
and
cmp
push
mov
nop
leave
jmp
add
add
lahf
movzwl
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
mov
add
in
push
xor
dec
push
mov
xchg
ret
push
push
sub
fcmove
add
clc
repnz
nop
cld
jae
pop
inc
add
add
fsubrl
mov
nop
nop
cld
jae
js
add
frstor
xor
add
clc
repnz
nop
cld
jae
or
je
clc
repnz
nop
cld
jae
add
lea
push
mov
nop
leave
jmp
add
mov
ror
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
insl
add
movsb
or
rolb
mov
repnz
nop
cld
jae
dec
add
add
push
mov
jbe
add
push
xchg
mov
rolb
mov
in
nop
leave
jmp
lock
add
mov
push
mov
xchg
ret
push
add
add
add
add
jmp
sbb
in
nop
leave
jmp
pop
and
incl
add
or
mov
push
push
mov
nop
leave
jmp
jg
add
sbb
cmp
call
in
nop
leave
jmp
add
push
push
push
mov
xchg
ret
movsb
rcrb
or
lret
mov
clc
repnz
nop
cld
jae
mov
sub
add
mov
xchg
ret
aad
int
or
dec
shrl
push
mov
nop
leave
jmp
add
sarb
je
clc
repnz
nop
cld
jae
mov
push
mov
xchg
ret
pop
add
add
mov
data16
lret
in
nop
leave
jmp
add
mov
cld
clc
repnz
nop
cld
jae
add
arpl
mov
clc
repnz
nop
cld
jae
mov
push
cmp
mov
nop
leave
jmp
add
sbb
test
mov
add
je
clc
repnz
nop
cld
jae
sbb
add
nop
cld
jae
add
ret
add
add
rcl
add
add
sub
sbb
cmpl
push
mov
nop
leave
jmp
sub
dec
push
clc
repnz
nop
cld
jae
or
mov
push
push
mov
xchg
ret
push
add
insl
add
clc
repnz
nop
cld
jae
add
push
add
jecxz
mov
clc
repnz
nop
cld
jae
mov
jmp
in
nop
leave
jmp
add
add
add
or
ds
push
mov
xchg
ret
add
mov
add
popl
add
inc
adc
mov
xchg
ret
sbb
xchg
add
add
mov
fdivr
repnz
nop
cld
jae
xchg
pop
xchg
add
add
into
imul
clc
repnz
nop
cld
jae
sbb
add
pop
jg
fnstcw
clc
repnz
nop
cld
jae
or
movsb
les
push
push
mov
nop
leave
jmp
add
scas
jne
pop
add
add
push
sbb
mov
clc
repnz
nop
cld
jae
inc
mov
mov
call
clc
repnz
nop
cld
jae
mov
pop
clc
repnz
nop
cld
jae
insl
add
mov
add
clc
repnz
nop
cld
jae
dec
inc
mov
add
mov
nop
leave
jmp
add
add
mov
push
lcall
add
testl
xor
and
imul
push
mov
nop
leave
jmp
inc
add
mov
pushl
push
mov
xchg
ret
add
add
add
pop
clc
repnz
nop
cld
jae
add
adc
pop
add
mov
sub
push
mov
nop
leave
jmp
mov
cmc
orl
add
and
add
insl
pop
mov
clc
repnz
nop
cld
jae
test
int
add
je
mov
push
mov
nop
leave
jmp
add
movb
push
repnz
nop
cld
jae
ret
mov
jne
push
mov
xchg
ret
sbb
loopne
and
in
nop
leave
jmp
or
add
cld
push
add
add
add
out
inc
add
add
add
add
mov
cmp
nop
cld
jae
add
fcmovb
push
add
mov
or
pop
std
call
add
mov
add
repnz
clc
repnz
nop
cld
jae
add
add
mov
and
mov
clc
repnz
nop
cld
jae
movsb
or
ret
and
push
clc
repnz
nop
cld
jae
movsb
mov
pop
mov
call
in
nop
leave
jmp
sub
dec
push
push
mov
xchg
ret
je
mov
add
adc
mov
add
jmp
add
in
aaa
add
add
add
add
mov
clc
repnz
nop
cld
jae
popf
insl
scas
mov
mov
mov
nop
leave
jmp
add
add
adc
test
dec
mov
push
mov
nop
leave
jmp
mov
jge
nop
nop
cld
jae
add
add
add
xor
call
clc
repnz
nop
cld
jae
fisubl
scas
add
clc
repnz
nop
cld
jae
ret
add
add
add
adc
movb
cmp
ret
add
sub
or
mov
test
push
clc
repnz
nop
cld
jae
add
jne
push
sbb
mov
repnz
nop
cld
jae
and
js
add
sub
repnz
nop
cld
jae
xchg
mov
add
in
popa
clc
repnz
nop
cld
jae
add
add
and
add
je
clc
repnz
nop
cld
jae
push
popl
xchg
clc
repnz
nop
cld
jae
dec
sub
mov
js
push
mov
nop
leave
jmp
add
add
mov
mov
xor
ja
jmp
add
add
pushf
icebp
repnz
clc
repnz
nop
cld
jae
push
add
js
add
mov
xchg
ret
push
add
push
inc
cmp
in
lret
iret
add
add
mov
sbb
jae
dec
inc
push
mov
nop
leave
jmp
add
or
popf
add
popf
scas
dec
add
push
mov
nop
leave
jmp
movsb
mov
jg
mov
clc
repnz
nop
cld
jae
add
mov
jb
push
mov
xchg
ret
mov
movsb
mov
stc
loopne
add
scas
add
in
sub
add
add
push
loopne
mov
mov
clc
repnz
nop
cld
jae
add
mov
popa
add
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
adc
add
and
movsb
jb
mov
sti
add
add
in
nop
leave
jmp
add
add
lret
add
clc
repnz
nop
cld
jae
add
mov
arpl
add
in
nop
leave
jmp
add
pop
je
mov
mov
push
mov
xchg
ret
add
add
add
add
mov
push
js
add
add
add
pop
mov
cs
push
mov
xchg
ret
add
push
pop
add
clc
repnz
nop
cld
jae
aaa
mov
or
test
add
add
xlat
mov
jno
jo
add
jg
mov
lahf
adc
mov
fbld
not
addr16
stos
imul
aas
cli
mov
sbb
xlat
sbb
out
jl
push
add
push
sub
ss
sbb
cmpsl
jae
push
jo
mov
scas
fs
add
das
sub
or
xchg
mov
mov
push
daa
inc
test
add
jbe
clc
xchg
dec
sbb
inc
cmp
add
rolb
fisubs
jl
add
stos
dec
sbb
xchg
add
in
es
into
aad
inc
add
cmp
push
dec
inc
and
push
sbb
mov
add
mov
mov
add
mov
add
scas
fwait
dec
or
xor
addb
cmp
les
mov
pop
daa
sahf
scas
sbb
imul
fisubl
push
add
jae
rorl
add
rolb
mov
pop
shll
mov
js
add
push
mov
les
int3
sahf
mov
data16
mov
cmpsl
inc
clc
jle
movsb
dec
xor
add
cmpsb
sub
push
add
mov
add
mov
jo
mov
push
add
leave
xor
fucomip
stc
mov
mov
pop
test
mov
test
iret
jae
int
ja
pop
mov
add
daa
clc
stos
xchg
dec
popa
pop
ds
jp
ds
add
inc
push
mov
lret
add
out
inc
or
mov
sub
jecxz
clc
push
cmpsb
jg
test
rcrl
mov
mov
sbb
mov
fs
cltd
fnop
add
mov
leave
adc
mov
data16
cmp
add
pop
sahf
adc
add
imul
xchg
enter
imul
cwtl
lcall
mov
mov
mov
in
fdivl
cmc
ljmp
addb
lods
je
data16
push
add
jb
mov
dec
add
out
xchg
loope
pop
fisubrl
xor
out
jmp
add
mov
push
pop
pop
mov
inc
loope
ficompl
and
das
mov
cmpsl
inc
cmc
pop
or
out
sub
cli
cs
mov
dec
push
add
push
imul
add
add
imul
jb
mov
cltd
aam
icebp
scas
repnz
mov
stc
ss
push
ss
or
jp
add
repnz
mov
mov
mov
mov
cmp
test
add
mov
add
pop
mov
cmp
ss
xchg
roll
add
inc
das
cs
sbb
shll
ss
add
mov
mov
add
inc
jb
mov
call
add
mov
lock
add
pop
cmp
mov
mov
mov
push
iret
lock
mov
add
inc
add
mov
jno
fnstsw
test
adc
sub
sbb
mov
lahf
out
fisubrl
push
daa
faddl
fwait
loopne
mov
mov
mov
push
rorl
daa
push
add
lea
add
push
pop
cmp
and
mov
ja
pop
rolb
fiadds
ds
xchg
fdivrs
test
mov
lret
jge
ljmp
jmp
hlt
push
sub
pop
fisubs
add
xorl
mov
jo
mov
into
jge
add
mov
scas
dec
xchg
add
add
push
sub
push
jl
add
les
add
es
xor
dec
mov
mov
imul
mov
rorl
jnp
add
lcallw
xor
xchg
mov
jb
mov
mov
pop
push
out
icebp
xchg
cmp
push
jo
mov
mov
push
adc
mov
mov
adc
outsb
inc
insl
sub
mov
xchg
sbb
stos
mov
and
mov
dec
lahf
mov
ljmp
into
cltd
test
jg
jae
mov
sub
push
xchg
add
mov
roll
mov
add
cmp
not
pop
lods
into
push
das
pushf
add
mov
dec
popa
ss
sahf
dec
jns
add
xchg
sbb
mov
cld
ljmp
jmp
aas
cmp
jmp
push
add
add
add
mov
sbb
fisttpl
mov
add
cwtl
ljmp
stos
xor
mov
sbb
and
mov
mov
pushf
push
sub
daa
mov
jmp
add
add
or
rolb
mov
cmpsb
sub
scas
enter
in
adc
xlat
cmp
aas
loopne
mov
pop
cmp
add
cwtl
pop
mov
and
cmp
jecxz
push
cmp
mov
sub
sahf
test
dec
or
add
jne
dec
cmp
sub
mov
push
adc
sbb
xchg
mov
rolb
stc
adc
push
add
and
mov
add
add
add
mov
add
mov
lret
mov
jne
adc
mov
aad
add
xor
test
mov
add
fcomi
add
stc
adc
mov
lret
aam
cmc
xchg
add
mov
mov
outsb
push
mov
cmpsb
sbb
inc
ret
mov
leave
mov
sub
push
inc
sub
mov
add
fmuls
scas
inc
leave
or
or
xchg
mov
mov
push
add
nop
add
jmp
sbb
add
sub
decb
sbb
add
pop
and
add
movsb
fidivrs
cltd
scas
loop
mov
cmp
mov
arpl
add
xchg
test
add
loop
mov
add
mov
mov
cwtl
sbb
insb
cmpsb
jmp
add
sbb
add
je
lea
loop
mov
and
loop
mov
test
sbb
mov
add
popa
xor
add
inc
js
pop
xchg
mov
mov
fucomi
retw
xchg
add
mov
add
das
fwait
scas
jb
mov
rolb
mov
out
mov
mov
add
mov
mov
out
push
fs
cltd
in
jno
add
mov
mov
xlat
bound
mov
les
add
loop
mov
add
stc
addb
in
cmpl
sbb
xor
mov
mov
pop
push
out
out
sbb
loop
mov
mov
jo
mov
xor
mov
mov
and
jecxz,pt
dec
movsl
mov
in
out
add
dec
sbb
jl
ss
movsb
mov
mov
movsl
sahf
jns
cmp
mov
push
clc
jecxz
pop
push
add
add
mov
mov
sbb
xor
add
mov
loopne
mov
mov
stos
sbb
std
cmpsl
das
sub
add
or
sarl
and
mov
mov
insb
jnp
and
mov
mov
add
add
lret
jno
jge
lock
pop
mov
icebp
fwait
fwait
sahf
mull
rolb
dec
faddl
mov
xchg
lds
xor
mov
mov
mov
xchg
jl
enter
jno
lret
shll
mov
cld
clc
jne
mov
push
add
js
add
test
sbb
dec
dec
pop
loop
mov
push
cmp
add
add
ss
xchg
mov
add
mov
jmp
jne
lock
or
leave
jmp
cmp
popf
inc
xchg
imul
jne
xchg
or
mov
push
jae
das
fucomp
repnz
pop
cmp
cmp
imul
push
cmc
loopne
mov
mov
or
inc
int3
or
test
add
and
addb
pop
popa
jg
es
add
mov
cmp
nop
add
imul
adc
in
dec
sbb
loop
mov
add
xchg
add
add
mov
aam
dec
mov
mov
pop
leave
xor
js
jne
add
mov
xchg
mov
lods
sti
je
icebp
mov
imul
add
mov
cmp
ret
pusha
add
aad
xchg
stos
mov
inc
into
in
addb
lea
or
inc
add
imul
daa
pop
fdivr
scas
xchg
cld
daa
inc
add
lcall
mov
movsl
testb
cld
jo
mov
pusha
add
addr16
ja
dec
dec
lret
add
mov
stos
fsubrl
xchg
xor
mov
add
repz
sbb
popf
pusha
add
mov
je
imul
ja
outsb
addb
mov
clc
lea
adc
cli
xor
mov
or
movsb
mov
mov
lods
clc
push
loop
mov
add
mov
add
sbb
jp
ljmp
cmp
add
das
dec
push
rolb
mov
pushf
fisttpl
mov
add
bndldx
shrl
idivl
mov
ds
pop
imul
arpl
add
out
test
adc
pop
or
scas
popf
pop
xchg
lds
mov
outsl
push
sub
inc
jo
mov
add
sbb
stos
push
add
pop
pop
movsl
pop
ret
movl
aas
out
jl
sub
inc
stos
mov
ss
outsl
arpl
add
cmp
add
sbb
cmpsl
mov
xchg
mov
add
sti
sbb
nop
add
mov
adc
lret
lods
jge
lahf
movsb
imul
mov
js
cli
ds
jbe
push
mov
addr16
imul
insl
cmc
cmp
jnp
jle
jge
xor
add
cli
in
xor
mov
loopne
mov
repz
adc
stos
sbb
jbe
jbe
add
adc
mov
fstpl
add
mov
mov
arpl
arpl
dec
lret
mov
jge
mov
loop
mov
jmp
cmpsl
adc
lret
mov
movsl
sub
aas
sub
jns
insl
adc
mov
add
cmpsl
inc
xor
mov
add
sub
repz
jecxz
bound
mov
add
and
add
add
sub
jg
das
add
sub
pusha
add
fdivl
inc
scas
xchg
test
sti
jmp
pop
insb
sub
imul
lcall
add
call
push
ficomps
add
mov
out
sub
add
and
ficomps
mov
fmuls
pushf
cmp
sub
jp
lea
cmp
addb
mov
mov
addl
add
repz
xlat
sbb
xchg
call
xor
out
lea
mov
test
inc
mov
mov
int3
mov
mov
dec
icebp
ja
xchg
sbb
sub
mov
mov
add
xor
mov
or
pushl
mov
test
lea
mov
mov
xchg
add
insb
jo
mov
out
xor
test
cmpl
orl
bound
mov
mov
add
in
inc
add
push
mov
fidivl
jae
and
mov
fildll
mov
xchg
pop
ficoml
subl
inc
cli
mov
mov
aam
add
jnp
add
mov
cltd
sbb
aad
cmpsl
sbb
sbb
repz
inc
push
xlat
test
mov
in
repnz
dec
cld
call
lea
ret
and
les
adc
mov
shl
add
push
loope
enter
sub
jne
lea
push
rolb
sbb
xchg
pusha
add
pushl
addr16
xor
add
out
pushf
dec
jne
add
test
push
add
gs
cmp
mov
xchg
add
sub
outsb
pop
in
or
std
rolb
mov
push
sbb
in
repz
mov
cmp
cli
push
rolb
mov
adc
mov
ja
divb
pushf
sub
test
or
add
add
das
push
add
pop
loopne
mov
add
add
jge
stos
cmp
xchg
addb
cmpsb
add
mov
pop
adc
lret
inc
add
jcxz
adc
mov
add
mov
add
jb
mov
nop
add
pop
fisttpll
movsb
popl
xor
mov
sbb
flds
mov
add
sub
lret
rolb
mov
xchg
or
insb
call
es
and
cmpsl
and
mov
aam
rorl
aas
or
arpl
mov
jge
mov
stos
push
inc
hlt
fdivr
or
jecxz
fdivrl
pop
push
dec
push
add
add
sub
pop
out
or
add
sub
clc
popf
mov
mov
cmp
push
in
or
iret
mov
add
mov
dec
les
sbb
ret
add
xor
mov
mov
mov
outsb
out
jbe
and
cwtl
repz
movsl
mov
mov
pop
ficompl
add
ja
mov
mov
mov
add
inc
lret
pandn
adc
int
ret
adc
xchg
xor
add
xchg
into
popa
mov
scas
jle
add
mov
repz
mov
cli
and
mov
mov
add
add
fidivrs
pop
mov
out
test
add
push
add
outsl
lods
mov
and
push
fnstcw
mov
mov
cmp
rolb
in
xchg
aaa
fidivs
stc
cmpsb
add
dec
les
mov
add
mov
jo
mov
enter
lea
stos
out
xchg
push
clc
xchg
add
and
mov
add
add
jne
pop
aaa
sbb
ljmp
mov
add
cmpsb
push
clc
and
lock
sti
call
daa
jg
pushf
out
or
les
cs
mov
add
addb
sub
add
xchg
mov
push
clc
pushf
lock
lahf
jno
xor
les
cmp
cli
mov
add
aam
or
mov
jo
mov
add
add
dec
enter
mov
cld
out
add
add
mov
jg
cmpsl
fldcw
movsl
push
decb
add
add
ja
add
dec
in
ret
mov
add
add
mov
sub
and
mov
aam
jecxz
notb
push
in
xor
push
faddl
movsl
out
pop
and
test
mov
add
add
jmp
add
mov
ljmp
imul
rcll
loop
mov
insl
psubw
mov
push
outsb
and
mov
push
addb
les
cmp
mov
add
in
aad
cmp
dec
jle
sub
jle
pop
movsb
adc
inc
add
sahf
test
add
addb
and
mov
pusha
add
adc
add
dec
cmp
add
add
sub
xor
cli
mov
xor
mov
mov
negb
and
mov
stc
rolb
mov
or
lahf
xlat
add
mov
fsubs
in
arpl
pop
mov
add
scas
pop
loopne
mov
cmp
mov
mov
add
or
sub
push
rolb
mov
xor
xor
lods
lcall
pop
call
rolb
mov
add
stos
push
mov
add
push
add
mov
std
fdivs
add
sbb
rcl
add
pop
lea
inc
loop
mov
sub
faddl
test
ficoms
dec
mov
scas
jle
pushf
fistpl
fisttpl
mov
adc
addr16
push
adc
out
stc
scas
shrl
mov
mov
gs
lods
fwait
mov
jnp
add
call
sbb
cld
xlat
pop
fwait
mov
int
cs
test
add
mov
add
lods
outsb
inc
add
ret
std
imul
mov
lret
inc
inc
add
int
sbb
cmc
leave
imul
xchg
rolb
mov
insl
add
test
lods
inc
adc
repz
je
shr
pushf
mov
pushf
insl
inc
cld
jge
pop
cltd
ds
push
sub
mov
add
add
mov
dec
or
mov
xchg
je
adc
test
xlat
xchg
loope
or
jge
cmp
add
push
sbb
add
add
mov
js
rolb
mov
push
sub
pop
in
fimuls
je
add
add
jge
add
mov
mov
mov
xchg
loope
fisubrs
cmp
out
mov
mov
imul
imul
stc
aad
or
add
jb
mov
and
scas
fisubs
mov
add
adc
jmp
iret
jo
mov
cmpsb
mov
andl
mov
xchg
mov
mov
cli
in
dec
sub
adc
mov
daa
mov
lds
adc
mov
add
xor
mov
add
sub
aas
lea
add
inc
test
pop
out
enter
add
dec
lock
bound
mov
add
enter
add
scas
add
movups
mov
dec
out
js
sbb
mov
adc
mov
lret
nop
add
mov
cltd
jle
addl
pop
pop
mov
sbb
cltd
cs
dec
ss
fistl
movsl
xchg
stc
pop
mov
and
inc
and
mov
mov
mov
xchg
fs
push
lahf
int
aaa
jecxz
fcomip
fwait
mov
jae
pop
mov
test
popf
push
std
punpckhbw
jb
mov
mov
test
add
loopne
mov
jbe
decl
hlt
in
fstps
xchg
mov
shll
add
scas
or
jmp
pushf
mov
mov
push
shll
sub
out
jmp
add
xchg
sub
or
add
xchg
loopne
mov
pusha
add
mov
add
iret
into
adc
mov
jmp
adc
xor
mov
imul
mov
into
xchg
mov
es
sbb
cwtl
sbb
add
add
ret
fnstcw
cwtl
je
push
pop
and
pushf
hlt
arpl
or
mov
pusha
add
xchg
mov
or
inc
test
popa
mov
add
rcrl
sahf
or
push
add
or
mov
and
mov
cwtl
pop
pusha
add
xchg
loopne
mov
mov
test
out
gs
mov
mov
push
pop
addb
stos
or
push
icebp
divl
rorl
or
pop
jmp
fs
xor
xchg
into
inc
add
xor
jecxz
popf
sbb
jno
add
lcall
or
add
adc
add
xlat
xor
mov
sub
pushf
inc
testl
sub
jae
pushf
outsl
inc
add
xlat
cmp
jmp
pop
mov
iret
or
fwait
into
mov
jae
fiaddl
xor
mov
or
mov
loopne
mov
add
out
xor
mov
cmpsl
mov
jmp
mov
add
addb
leave
enter
stos
int3
fmull
push
add
xor
stos
leave
out
popa
jl
add
loopne
mov
add
push
mov
jbe
stos
popf
addr16
nop
add
mov
xchg
mov
sub
and
mov
add
xlat
sub
jbe
add
shr
rolb
mov
into
lahf
fidivs
cmpsl
nop
add
mov
pop
inc
popa
xor
cld
fidivrl
int
adc
mov
add
insl
sbb
pop
xchg
ja
and
insb
dec
inc
jnp
add
or
cld
iret
cmp
mov
js
xchg
pop
outsb
fmull
fisubl
add
hlt
enter
mov
inc
mov
pushf
jns
add
sub
push
insl
mov
or
sbb
mov
or
dec
repz
add
lods
scas
sub
add
filds
mov
mov
inc
fwait
sub
dec
add
lret
inc
add
mov
add
ret
push
mov
adc
cmp
xchg
dec
sar
vcvtsi2sd
cmp
inc
testb
inc
and
mov
add
cmp
scas
movsb
adc
jnp
lahf
pop
xor
push
insl
sub
jno
jae
lcall
xchg
push
push
pop
pop
hlt
sub
add
mov
dec
imul
ljmp
xchg
add
test
gs
xlat
mov
in
out
stos
rcrl
mov
jg
pop
push
leave
rolb
mov
repz
daa
mov
or
cmpsb
jecxz
mov
add
sbb
add
insl
out
jg
xor
mov
add
xchg
pop
enter
in
stos
cli
mov
cmp
add
cpuid
add
add
aad
add
xchg
inc
pop
lahf
adc
mov
jo
mov
mov
fcmovne
aad
in
lods
mov
out
shll
xor
xchg
imul
or
mov
xchg
inc
ss
pusha
add
cmp
hlt
outsb
mov
mov
jbe
js
ljmp
pusha
add
lea
scas
hlt
clc
outsb
ljmp
sub
insb
mov
inc
add
mov
lock
mov
mov
mov
jge
loop
mov
add
cmc
xlat
divb
out
add
test
mov
pop
stos
pop
fisubrl
js
sbb
cmp
mov
jmp
dec
cli
test
mov
pop
push
stc
mov
add
mov
test
icebp
movsl
pop
adc
mov
cmpl
imul
push
ja
mov
mov
movsb
cmp
xor
add
add
mov
test
repz
sub
ja
nop
add
add
mov
inc
add
rorl
xchg
xor
mov
movsl
aam
test
int3
jnp
out
faddp
leave
push
push
aaa
out
dec
add
xchg
movsb
push
into
sub
ss
pop
lock
mov
add
mov
jmp
mov
sub
dec
pop
lcall
jl
xchg
leave
sbb
pop
push
add
call
adc
pop
repnz
add
mov
call
add
lock
pop
movsb
mov
cli
dec
jo
mov
outsl
je
loop
mov
imul
xorl
out
adc
movsl
mov
or
fidivl
xchg
jb
mov
xor
mov
mov
mov
mov
jo
mov
push
icebp
mov
add
addb
pop
ljmp
cs
and
mov
es
out
or
add
adc
mov
popa
jmp
inc
aad
push
push
cmpsl
clc
dec
cmp
in
scas
or
jecxz
fs
fistl
movsb
dec
aaa
mov
jle
inc
or
sub
dec
xor
lea
lret
pop
outsb
dec
out
je
sbb
add
jle
add
mov
insb
adc
and
mov
ret
cs
add
std
sbb
ret
clc
insl
jecxz
xchg
ss
adc
mov
inc
out
cmp
mov
dec
pop
xchg
add
pusha
add
cmp
jmp
dec
and
mov
shll
pop
in
pop
out
add
dec
push
cltd
loopne
mov
sub
sub
jne
cmpsb
jns
cmp
mov
mov
mov
bound
mov
loop
mov
add
add
pop
pop
xchg
sub
cmc
lret
sbb
mov
jg
jno
inc
push
add
adc
stos
je
add
cmp
fisubrs
mov
lahf
jns
add
lods
add
mov
jge
add
mov
jnp
adc
mov
add
pushf
xor
cmpsl
stc
jae
movsl
jbe
xor
mov
fstl
add
pusha
add
add
mov
cmp
or
add
mov
add
dec
jle
subl
cwtl
sbb
je
dec
outsb
dec
or
rolb
mov
sbb
negb
mov
mov
ret
or
cli
or
adc
flds
in
fildll
sub
xor
pop
dec
cmp
sbb
add
cwtl
jge
fcomi
popf
mov
sub
cwtl
aad
and
insb
sbb
es
pop
lock
sbb
jno
add
insb
lcall
lods
inc
mov
push
je
incb
push
pop
lcall
add
mov
add
add
add
xor
je
cmp
cli
je
push
add
jl
lahf
fadds
jl
pusha
add
notb
outsb
jp
cld
push
adc
mov
sbb
mov
push
or
xlat
push
dec
outsl
hlt
sub
aaa
cwtl
lea
out
rcll
notl
xchg
loop
mov
sub
ror
stos
addb
les
icebp
outsl
popf
daa
mov
ss
fsts
inc
add
mov
sub
aaa
roll
push
in
test
push
push
mov
ret
lea
xchg
and
mov
lea
mov
jno
cmp
mov
pop
cmp
push
rolb
adcl
mov
xor
mov
lret
cmp
jmp
bound
mov
mov
mov
mov
mov
lock
std
mov
ret
cwtl
add
adc
mov
mov
mov
jnp
std
stos
and
push
dec
xor
dec
rep
movsl
ds
mov
cli
jnp
jmp
loopne
mov
add
mov
fnstsw
sub
ja
ss
mov
rorl
pushw
das
cmc
jecxz
daa
lock
add
add
popf
push
or
lret
fwait
push
lret
cli
test
or
pop
push
xchg
push
add
push
stc
jle
push
loopne
mov
fsubs
mov
add
pop
int
in
ja
cmpsl
out
in
lret
sbb
push
scas
in
inc
add
mov
jo
mov
mov
add
test
scas
out
decl
sub
add
mov
mov
fiaddl
repz
and
push
out
and
mov
jo
mov
mov
fiadds
pop
scas
sbb
add
pop
xor
push
mov
addb
xor
fadds
xchg
jno
int3
xor
movsl
xchg
add
cmp
xchg
loop
mov
rolb
mov
stc
clc
push
xlat
cmp
lea
dec
and
aad
mov
addb
or
int3
sub
movsb
out
jecxz
add
lods
xchg
mov
lret
dec
xchg
inc
and
ja
or
mov
arpl
mov
dec
call
mov
inc
add
lret
es
out
iret
add
mov
cmpsl
outsl
xlat
stos
or
add
ds
fstpl
lahf
inc
add
mov
sub
data16
pop
cltd
xchg
jb
mov
xor
cmpsb
int3
imul
sub
in
pop
cmp
mov
aaa
jmp
call
inc
mov
imul
jb
mov
cmpsl
lock
xor
test
inc
rolb
mov
mov
into
test
pop
add
rolb
or
mov
sbb
xor
mov
or
mov
mov
xchg
inc
loope
jge
add
xlat
mov
fmull
pop
or
test
repnz
fisttpl
adc
cmp
outsl
fsubrs
cmpsl
push
cmp
mov
xor
sbb
push
jl
out
imul
insb
mov
rolb
mov
test
add
xor
or
test
add
ja
ds
push
add
js
add
mov
pushf
jge
sub
sub
add
sar
out
mov
or
outsb
rorl
add
add
mov
push
ds
ret
inc
add
mov
xor
bound
mov
cltd
inc
xor
add
push
movl
sbb
mov
mov
mov
mov
jmp
fcomps
pop
lcall
pop
adc
xor
mov
add
jb
mov
stos
aad
rolb
mov
jge
or
add
insl
hlt
pop
jmp
push
jbe
bound
mov
mov
adc
mov
int
jae
repz
jmp
lock
mov
mov
add
out
imul
mov
cmpsl
mov
addb
dec
jae
xor
and
mov
push
cld
mov
add
mov
inc
fsincos
lahf
cltd
cli
cmpsb
and
add
add
add
into
jle
add
pusha
add
adc
mov
add
adc
mov
lods
inc
pop
push
cmp
mov
lods
fistps
lea
and
mov
mov
or
rolb
icebp
mov
add
add
add
and
out
add
add
lret
xor
dec
stc
outsb
inc
adc
mov
add
pop
sahf
rolb
mov
add
ljmp
add
mov
repnz
push
jb
mov
dec
pop
in
dec
xor
arpl
daa
aam
add
add
out
pusha
add
loopne
mov
jmp
addb
es
mov
les
mov
addb
popa
mov
jg
add
xor
gs
mov
sbb
cmpsl
pusha
add
xchg
lahf
xor
push
fwait
scas
mov
fisubl
add
add
jne
sub
pop
out
cmp
add
jne
lret
mov
mov
xchg
scas
lods
aas
enter
cs
add
cmp
add
pop
nop
add
mov
mov
imul
cmpsb
cmpsb
adc
mov
hlt
xlat
sub
or
cmp
std
pop
push
add
dec
add
fildl
out
mov
fs
aas
es
pop
mov
sar
iret
inc
add
mov
and
xchg
add
add
add
add
lods
add
add
inc
jne
out
sub
test
add
or
sahf
iret
mov
dec
jnp
sbb
fcomps
inc
add
add
add
add
add
mov
fimull
mov
inc
mov
mov
add
lahf
sub
enter
mov
cmc
addr16
loop
mov
jbe
or
add
out
jo
mov
lock
mov
push
dec
fsubr
cltd
in
sub
jge
push
enter
and
mov
lds
mov
mov
mov
mov
add
jl
cmp
add
icebp
shll
mov
xchg
fmull
rolb
lret
mov
jge
push
sub
test
mov
in
enter
sub
and
mov
lock
xchg
add
xchg
test
adc
or
mov
repnz
stos
pusha
add
add
mov
add
lods
loop
mov
add
add
xor
push
cs
rolb
mov
arpl
fdivrl
mov
sub
sahf
jge
insl
sub
mov
add
add
mov
repz
je
rolb
mov
fs
or
cli
scas
out
jg
dec
jmp
add
repnz
mov
mov
aam
cs
ret
jecxz
aas
hlt
pop
ret
xchg
mov
mov
ja
test
rolb
mov
mov
push
sub
add
mov
cli
icebp
popf
xor
mov
cwtl
adc
mov
push
xchg
add
xchg
arpl
add
rorl
movsb
sub
mulb
test
in
sub
add
inc
add
mov
mov
leave
pop
mov
mov
mov
xchg
or
inc
add
mov
fs
jne
xchg
or
scas
mov
int
add
pushl
iret
stos
cmc
outsb
inc
icebp
int
and
inc
add
mov
mov
leave
decb
test
ss
pop
mov
mov
imul
mov
imul
xchg
xor
mov
xchg
push
imul
add
addb
adc
push
shrl
incb
mov
pop
stos
and
pop
imul
mov
jecxz
in
repz
pop
lcall
pop
sbb
add
mov
pop
cmp
out
outsl
pop
inc
lahf
iret
pminub
mov
lea
jmp
adc
mov
iret
xchg
dec
push
add
rolb
xor
mov
or
sub
inc
out
lret
pusha
add
xchg
jg
ds
add
lds
sti
dec
ret
and
ret
scas
icebp
mov
cmp
mov
into
cmp
ficomps
add
add
jle
and
mov
std
imul
inc
xchg
add
in
pop
repz
mov
leave
pop
lods
fwait
pop
sbb
sub
movsb
repnz
cmp
std
dec
add
mov
inc
add
mov
out
push
pop
lahf
fisubrl
xor
add
into
push
out
jns
in
dec
je
mov
add
add
divb
dec
insb
int
hlt
out
fldl
and
add
inc
add
and
mov
push
add
push
add
fcmovu
cmpsb
lock
add
dec
mov
adc
inc
add
mov
add
daa
repnz
xor
jmp
xchg
pop
xor
jae
pop
cmc
popf
out
jmp
add
mov
mov
add
xchg
sub
add
sbb
mov
xchg
add
or
add
jb
mov
js
sahf
outsb
lahf
out
testb
mov
sbb
cli
leave
pop
inc
add
stc
or
mov
mov
insl
add
push
movsb
jle
inc
insb
xchg
rolb
mov
or
dec
mov
cltd
movsb
push
in
inc
addr16
sbb
jno
jns
jecxz
cli
xchg
setae
and
mov
mov
mov
jge
add
xor
jmp
adc
adc
adc
add
cwtl
insb
lret
adc
add
mov
cmc
test
cld
or
rcr
xor
mov
adc
xor
lds
pop
and
adc
and
sbb
pop
pop
add
jns
mov
rolb
mov
dec
test
xor
xchg
add
mov
add
imul
ds
ret
xchg
jnp
mov
mov
bound
mov
daa
fidivrs
add
pop
adc
cmp
stos
out
movsb
xor
add
xor
mov
xchg
add
daa
mov
loope
or
jg
jmp
xchg
add
mov
mov
add
popa
test
or
loop
mov
add
add
outsl
or
dec
pop
idivb
out
mov
lock
filds
mov
add
mov
in
jo
mov
scas
or
sbb
inc
add
lds
pop
and
les
int
adc
mov
sub
add
imul
or
add
add
insl
cmp
mov
inc
mov
dec
pop
ret
mov
mov
add
xor
inc
clc
addb
and
mov
adc
mov
mov
xchg
pop
cltd
sub
mov
mov
add
mov
add
add
sub
dec
ja
add
mov
repz
add
mov
sub
call
and
jns
test
hlt
bound
mov
lahf
mov
and
imul
dec
push
negb
push
fdivrl
outsb
out
xor
bound
mov
add
inc
flds
add
add
jmp
mov
mov
add
sbb
cld
push
fnsetpm(287
mov
aaa
ret
iret
push
push
xor
xchg
adc
mov
mov
mov
jne
sub
mov
adc
mov
mov
or
dec
mov
cmp
mov
lahf
pop
das
dec
idivl
fiadds
rolb
mov
adc
mov
idiv
pop
cs
test
mov
sbb
in
mov
xchg
aaa
movsb
jmp
pushf
xchg
add
ljmp
mov
sub
test
jl
fildl
aas
bound
mov
test
and
mov
add
ss
pop
mov
add
adc
jmp
in
mov
xlat
xchg
push
mov
cmp
add
xchg
push
mov
add
dec
arpl
add
push
sub
push
inc
add
mov
std
pop
dec
xchg
add
add
in
lret
pop
fst
push
pusha
add
mov
lock
pop
cwtl
out
dec
ljmp
jecxz
mull
mov
mov
imul
loop
mov
dec
cmp
add
add
ljmp
jmp
add
inc
out
fld
xor
mov
jno
push
jmp
stos
mov
dec
add
add
mov
add
pop
lcall
daa
roll
mov
or
mov
mov
mov
cmp
mov
cwtl
in
test
push
arpl
xor
mov
fdiv
xchg
sbb
jge
addb
mov
lea
addb
ret
xor
pop
addb
fbld
or
addb
push
add
lds
out
xor
popf
pop
adc
repz
inc
rolb
mov
adc
mov
add
mov
add
add
pop
sbb
or
sbb
mov
je
sbb
add
popf
add
insb
sti
inc
add
add
mov
dec
popf
aam
je
mov
add
rolb
mov
xchg
cmp
inc
add
inc
fcoml
adc
mov
cmp
out
cld
adc
hlt
popf
lods
add
mov
mov
xchg
insl
dec
mov
cmp
and
sub
push
adc
ficoms
cltd
adc
push
cmpsl
mov
repnz
test
xor
mov
add
add
sbb
cmp
mov
je
jo
mov
sti
imull
lods
mov
dec
push
ja
fadds
jbe
je
out
in
push
sub
rol
adc
mov
mov
test
mov
aaa
inc
adc
inc
add
add
data16
idivb
jns
stos
xchg
fstpt
mov
add
add
pop
xor
add
mov
mov
add
mov
hlt
lods
repz
inc
add
mov
mov
mov
mov
dec
pop
mov
lret
jne
jl
pop
inc
pop
aad
mov
mov
mov
out
adc
xor
add
mov
mov
rolb
mov
and
add
bound
mov
mov
mov
push
and
inc
push
add
mov
in
movsl
lahf
xor
mov
sbb
or
sbb
xor
loopne
mov
imul
sahf
and
jbe
add
mov
mov
inc
add
mov
int3
mov
mov
xchg
add
cmc
stos
lods
rolb
mov
add
dec
into
xchg
dec
enter
jg
sbb
mov
push
cmpsb
add
pmuludq
and
mov
and
add
sbb
push
pushf
xor
mov
insl
aaa
gs
xor
mov
xchg
lock
mov
add
inc
gs
sbb
add
cmpsb
push
jg
or
sti
ljmp
xor
mov
mov
mov
mov
lods
addr16
xchg
out
xorl
rorl
adc
xchg
sub
add
aam
add
in
fidivs
mov
add
add
lock
rolb
mov
mov
int3
mov
push
add
xchg
push
int
xchg
mov
mov
mov
or
cmp
decb
xchg
je
stos
rorl
push
push
add
xor
pop
inc
cmp
mov
call
push
dec
mov
push
stc
ficoms
xlat
cmpsb
push
aad
out
ja
cmpsb
or
hlt
pop
imul
lret
mov
adc
mov
lret
stc
in
adcl
sub
test
add
pop
mov
out
nop
add
addb
mov
test
int3
xor
mov
repz
inc
sti
and
mov
xchg
add
or
pop
outsl
push
es
clc
xchg
repnz
mov
adc
mov
or
cld
and
mov
pop
pushf
pop
pop
sbb
xlat
addb
aas
mov
scas
or
pop
mov
cmpsl
pop
fwait
cmpsb
inc
add
jp
sub
pop
mov
cld
loop
mov
mov
sbb
lods
pop
out
jnp
inc
add
int
adc
add
adc
mov
pop
push
lcall
jnp
aas
and
idivl
jp
add
and
hlt
aaa
push
rcr
rcl
mov
adc
add
mov
pop
cld
into
shll
mov
mov
out
js
jge
push
jo
mov
jbe
pusha
add
add
xor
push
jb
mov
jle
scas
mov
mov
jg
and
mov
sub
inc
pushl
scas
arpl
lahf
and
imul
sbb
mov
add
pop
jbe
ficomps
in
into
pop
sbb
and
sbb
mov
mov
iret
push
inc
mov
mov
mov
pop
fistpl
add
mov
mov
jl
xchg
add
aad
mov
add
cmp
mov
negb
pop
faddl
jns
xchg
fldl
sbb
add
dec
xchg
add
mov
das
cmp
add
xlat
jle
sbb
or
sbb
cmpsb
pop
mov
addb
inc
daa
mov
xlat
cwtl
pop
mov
lods
out
jmp
filds
ja
add
leave
fsub
int3
pop
fs
add
fsub
sub
adc
mov
cmpsl
fs
lods
xchg
xor
inc
das
repz
je
add
cmpsb
mov
add
mov
and
mov
hlt
dec
lcall
cltd
sub
test
add
popf
jl
add
mov
add
cmp
or
dec
xorl
mov
ss
inc
dec
adc
mov
pushf
daa
cmp
fsubl
add
cli
lahf
ja
add
movsl
cmp
mov
outsb
push
add
adc
outsl
jecxz
cmpsb
pop
cmp
cltd
rolb
mov
mov
add
fmuls
mov
mov
dec
das
dec
insl
xchg
dec
int3
or
in
js
or
adc
mov
mov
mov
add
cld
data16
daa
cwtl
ja
xchg
test
test
add
push
les
cmp
insl
icebp
jb
mov
jb
mov
sbb
inc
add
or
mov
mov
xchg
add
in
and
jg
sbb
jno
aas
jbe
lret
xor
mov
mov
pop
mov
movsb
pop
int
popf
dec
jne
jno
stc
and
add
jmp
jmp
test
pusha
add
sub
xchg
xor
mov
push
pop
mov
addb
push
and
js
sbbl
push
mov
rolb
jmp
sub
and
mov
jmp
insb
test
test
imul
sbb
popa
jmpw
imul
adc
add
mov
jecxz
loop
mov
lock
mov
add
push
adc
mov
daa
mov
cltd
lret
lcall
xlat
mov
lret
mov
repnz
adc
mov
add
pop
fcomps
pop
stc
add
insb
imul
mov
lock
roll
addl
add
rcll
sbb
xor
inc
inc
jl
xlat
test
mov
frstor
movsb
mov
sub
dec
loopne
mov
push
test
lcall
fdivrs
decb
sbb
icebp
pushf
xchg
sub
pop
aam
xor
add
mov
insb
gs
cli
pusha
add
cmp
cli
rolb
mov
testl
fbstp
xor
add
mov
ljmp
cwtl
das
adc
cmp
mov
and
mov
add
mov
cmp
add
mov
add
mov
add
test
mov
lods
insl
clc
fcomip
jle
mov
fcomps
es
cmpsb
mov
add
jmp
not
xchg
push
addb
mov
sahf
js
jl
les
add
dec
pushw
xchg
xchg
inc
scas
cmpsb
and
add
mov
mov
sub
pop
lds
cmp
pop
out
sbb
mov
js
gs
xor
mov
or
mov
sahf
pop
cltd
sub
pop
cld
fildll
imul
add
lcall
inc
stc
mov
add
cmp
js
into
cs
ja
cmpsl
jmp
add
pop
in
cmp
sub
lea
mov
fistps
dec
dec
xchg
aaa
mov
les
dec
mov
or
add
mov
add
ljmp
incl
shrl
add
add
repnz
pop
scas
add
mov
dec
mov
mov
mov
mov
notb
icebp
cmp
add
flds
xor
mov
sbb
aam
mov
pop
xchg
lea
inc
pop
cld
sbb
add
cli
mov
pop
pop
jl
inc
fstpl
dec
rolb
mov
neg
enter
das
test
cld
cld
rolb
mov
add
cmp
mull
add
dec
and
psubusb
push
add
xor
mov
add
add
fisubrl
fcomi
push
add
sbb
loope
add
pop
movsb
mov
cmpsl
repz
insl
mov
cli
loopne
mov
xchg
hlt
pop
mov
add
test
pop
in
fsubrl
pop
add
push
and
cmpl
icebp
mov
gs
loop
mov
jne
in
sub
pop
xchg
test
aad
mov
jne
fdivs
pop
mov
mov
mov
mov
fwait
shll
int3
sti
hlt
sub
mov
lret
and
mov
rol
add
add
pop
dec
xchg
or
leave
rolb
mov
xor
in
jg
add
mov
pushfw
bound
mov
rolb
mov
adc
mov
jae
jmp
test
daa
xlat
mov
add
add
pop
dec
pmullw
leave
add
mov
rolb
mov
sbb
add
adc
mov
cmp
mov
addb
insl
and
jge
jne
pop
push
not
inc
mov
decl
add
js
mov
stc
mov
jmp
add
pop
mov
popf
lods
ret
xchg
jge
leave
roll
mov
xchg
js
add
xor
add
dec
call
mov
sub
loope
insb
mov
inc
cmp
testb
subl
int
ljmp
jg
push
les
add
jno
in
inc
jg
lods
mov
mov
fiaddl
cs
pop
pushf
addl
mov
cltd
sub
push
das
loop
mov
mov
add
mov
movsl
into
jmp
aam
lea
xchg
add
mov
fiadds
mov
mov
pop
xor
mov
adc
lcall
mov
and
sub
mov
rolb
mov
mov
sbb
xor
push
inc
jg
push
fdivl
cmpsb
xor
jle
pop
lret
jg
fiadds
cltd
add
inc
mov
sbb
add
add
push
mov
imul
push
outsl
insb
ja
xchg
adc
cmp
into
fsubrs
mov
mov
pushf
mov
les
push
add
cmpl
clc
pop
jmp
jbe
xor
mov
notl
ds
add
xchg
cmp
jns
push
sub
xor
sbb
dec
lds
mov
mov
sub
add
jecxz
cmpl
pushf
repnz
xchg
mov
mov
fsubrl
nop
add
push
lret
insb
adc
mov
daa
aam
jae
push
clc
xchg
push
enter
pop
jge
dec
mov
sbb
mov
stos
xchg
mov
clc
out
stos
roll
inc
add
mov
dec
xchg
add
mov
fs
cwtl
bound
mov
icebp
xchg
jge
leave
aam
jp
push
sbb
add
rolb
mov
xchg
ljmp
mov
mov
imul
mov
flds
mov
inc
add
add
jae
adc
int3
and
add
fisttps
sub
incb
mov
dec
imul
insl
pop
push
ret
popf
call
pop
xchg
add
sbb
push
sbb
lock
loop
mov
add
lods
sub
dec
xchg
insl
outsb
aas
pop
int
dec
xchg
pop
jno
xor
mov
test
rorl
xchg
lea
pop
adc
pop
aaa
ds
mov
mov
out
add
in
addb
mov
vhsubpd
add
rcrl
pop
inc
add
pusha
add
mov
mov
sbb
or
mov
adc
insb
lahf
fdivs
add
cld
je
scas
adc
pop
and
aad
mov
loope
mov
add
dec
mul
add
push
pop
clc
aaa
xchg
sub
sub
rolb
aam
adc
mov
lods
pusha
add
pop
inc
imulb
sbb
cmpsl
pop
aam
lahf
mov
add
add
xchg
pushf
sarl
pop
insl
aam
dec
lret
mov
or
pop
movsl
popl
mov
mov
arpl
out
xchg
mov
std
add
mov
pop
xchg
daa
push
gs
adc
mov
inc
mov
cmp
mov
add
sti
xor
mov
dec
out
rolb
mov
cs
mov
xor
mov
adc
mov
push
add
add
mov
add
repnz
xlat
nop
add
push
popf
jle
roll
les
pop
sub
mov
adc
push
pushf
inc
out
push
enter
mov
lods
mulb
add
lods
test
inc
fisubs
add
push
fwait
mov
mov
pop
xor
mov
mov
mov
cmpsb
test
mov
stos
inc
or
push
mov
in
add
sbb
add
add
insb
in
cmp
mov
sbb
add
mov
sbb
ds
inc
in
fwait
loopne
mov
insb
cmp
push
adc
dec
add
and
mov
test
data16
hlt
pop
into
addl
mov
repz
loopne
mov
jae
sbb
popf
mov
icebp
stos
and
mov
xor
scas
imul
cwtl
xor
mov
mov
pop
in
test
add
imul
mov
sub
mov
mov
dec
scas
and
movsb
lods
cmp
cmp
dec
mull
add
add
lahf
in
ret
xchg
out
or
add
mov
mov
data16
add
pushf
and
sbb
jle
push
shll
shrl
pop
mov
add
add
mov
mov
mov
fstps
add
addb
popf
mov
add
push
mov
mov
mov
aam
add
or
lahf
push
ljmp
pop
movsb
cld
iret
cmp
mov
jmp
add
mov
fisttpll
xchg
cli
popa
int
mov
repz
daa
mov
mov
jne
repz
and
rolb
mov
es
or
add
pop
lahf
into
enter
and
adc
push
inc
add
jno
add
add
add
inc
add
mov
mov
xchg
add
mov
mov
jle
loope
aad
push
mov
div
arpl
imul
add
xchg
pop
pop
sbb
mov
popw
enter
lret
shrl
xor
mov
cmovno
sub
test
add
out
xor
mov
in
scas
jmp
movsl
lock
or
add
rolb
mov
add
xchg
bound
mov
je
repz
aam
rolb
mov
cmp
add
add
xor
mov
inc
add
mov
push
mov
scas
out
sarl
mov
jecxz
in
pop
pop
xchg
add
mov
aaa
jmp
push
lret
adc
sbb
das
ds
inc
sahf
enter
xchg
fadds
sub
ret
pxor
mov
add
jmp
fs
pop
das
jp
add
mov
add
aam
or
cmp
add
mov
xchg
icebp
mov
mov
jle
xor
imul
sub
stc
aad
and
push
pop
ffree
int3
and
mov
cltd
xor
mov
or
add
and
pop
testl
cmp
aam
mov
test
add
mov
inc
fldcw
push
inc
repnz
add
mov
or
das
rolb
fsts
pop
fs
dec
cmc
repnz
add
mov
arpl
cmpsl
inc
push
push
pop
dec
and
iret
into
add
addb
cmp
in
jae
js
add
adc
mov
cmp
add
out
aad
jmp
mov
insb
jle
sbb
std
add
hlt
pop
out
cmp
add
mov
push
add
xchg
add
jae
mov
fadds
mov
aas
and
negl
inc
test
mov
call
or
mov
cmc
fsubrp
mov
nop
add
dec
mov
mov
stos
cli
into
mov
dec
lcall
add
jle
repz
pop
enter
sbb
add
push
out
rolb
imul
outsb
int
addb
dec
or
addb
add
mov
aam
add
jmp
cwtl
scas
pop
mov
insl
mov
dec
subl
inc
jo
mov
in
mov
jno
mov
mov
mov
add
cmp
fisubl
add
fidivs
jmp
add
add
add
aad
xlat
mov
add
push
sbb
cmp
add
idivb
lds
add
int3
inc
enter
mov
repz
and
mov
mov
mov
sbb
jle
add
loop
mov
jo
mov
mov
aam
pop
mov
pop
cli
lods
push
push
push
add
sbb
insl
in
int
jge
cmpsb
std
mov
mov
sbb
rolb
mov
adc
adc
aad
sbb
repnz
rcll
out
mov
or
int
ja
out
or
es
in
sub
and
mov
mov
imul
cli
mov
rolb
push
dec
adc
mov
mov
test
iret
and
mov
pop
inc
mov
mov
add
sub
and
mov
in
add
adc
inc
mov
mov
add
test
jle
add
fdivl
jne
dec
icebp
jno
mov
add
leave
sahf
inc
xchg
mov
std
or
add
mov
pop
and
mov
int
call
jnp
daa
push
dec
sub
ljmp
lock
movsb
or
sub
dec
enter
addb
outsl
pop
lcall
pmuludq
xor
sbb
sbb
xchg
das
loope
loope
pop
sbb
pop
lcall
push
jp,pn
mov
addb
int3
lcall
les
adc
mov
ljmp
subl
movsb
jne
cwtl
pushw
adc
pop
out
xor
mov
ret
movsl
adc
add
mov
dec
pop
jp
sub
addr16
push
lock
inc
fs
and
mov
insb
push
mov
and
push
xchg
ja
mov
into
scas
fisubrl
add
lds
popf
adc
mov
js
sub
mov
sub
frstor
or
stc
lods
sbb
mov
mov
jl
leave
pop
clc
test
sub
lods
add
dec
sub
xchg
or
push
repnz
mov
movsl
lock
loope
mov
xchg
inc
lods
mov
aaa
mov
pop
mov
mov
add
mov
add
pop
jmp
mov
js
pushf
aaa
and
dec
dec
mov
ja
orl
add
xchg
aaa
imul
out
push
cmp
sbb
jno
pop
mov
mov
xor
mov
mov
nop
add
pop
adc
push
addb
adc
mov
out
xor
mov
push
xlat
mov
subl
out
aam
movsb
or
add
or
add
add
jl
testb
inc
mov
out
rolb
mov
clc
and
mov
dec
movsb
idivb
mov
in
outsb
push
sbb
mov
add
add
jp
fisubs
add
add
push
in
push
add
push
mov
scas
jno
add
fdivl
les
push
pop
jbe
movsb
mov
add
loope
inc
aam
ljmp
leave
push
fdivl
adc
jb
mov
add
in
cli
insl
and
mov
cmpsl
into
sahf
push
out
call
icebp
xor
pushf
mov
jl
cmp
add
mov
inc
js
dec
mov
add
or
sbb
jno
jmp
aaa
mov
add
jl
add
loope
data16
sub
movsl
mov
xchg
pop
cltd
push
cli
fbstp
mov
and
loope
adc
in
popf
in
jmp
add
mov
xor
gs
sbb
add
sarl
movsl
das
int3
loope
dec
jns
pop
popf
mov
xor
loopne
mov
popf
out
lahf
icebp
ffreep
mov
dec
enter
push
shll
push
aad
imul
mov
ds
out
clc
push
lret
cltd
stos
xchg
xlat
loope
rolb
mov
add
adc
mov
and
mov
cld
cli
inc
xor
mov
pusha
add
lods
dec
dec
imul
mov
mov
xchg
mov
call
add
and
pop
insl
jmp
cmpsb
push
test
xor
mov
fstps
jmp
dec
cmp
or
flds
aad
jmp
cmp
pop
rolb
mov
es
add
cmp
mov
loopne
mov
das
scas
xor
cmp
addb
addb
add
mov
add
leave
into
dec
sbb
call
stos
pop
int3
addb
add
arpl
in
dec
or
add
cwtl
jmp
add
fcoms
add
imul
mov
fwait
adc
add
add
addr16
fstl
add
push
add
xchg
inc
or
mov
dec
mov
add
push
ret
dec
cmp
pop
lret
rolb
mov
push
icebp
aad
call
add
cmp
ret
ret
xor
mov
add
mov
inc
cmp
pop
and
sbb
fwait
dec
jge
push
aad
ljmp
ret
mov
int3
mov
push
xchg
pop
add
mov
pop
into
or
ss
mov
mov
les
cli
jne
lret
das
and
dec
xor
mov
mov
xor
add
and
mov
stc
in
or
and
aad
pop
adc
arpl
cmpsl
jo
mov
in
cld
mov
rolb
ds
test
ds
add
ret
call
das
and
mov
and
jg
add
push
add
mov
mov
mov
xchg
xor
gs
outsb
test
adc
add
pop
dec
or
push
add
adc
aaa
and
lds
mov
push
xor
mov
testb
xchg
in
sub
pop
ja
int3
stc
inc
ljmp
mov
xchg
xchg
fstpl
dec
mov
cmp
aad
mov
add
roll
lret
jb
mov
push
sub
sub
loop
mov
in
dec
adc
mov
inc
mov
mov
add
sub
xlat
xor
cmp
call
mov
add
mov
add
test
or
add
xor
add
mov
fmuls
push
pop
add
fidivs
add
mov
jg
jp
cmp
addb
mov
mov
mov
add
jbe
sub
sbb
loopne
mov
repz
jnp
cmpsl
cmc
test
leave
sub
lea
ljmp
push
xor
and
pop
inc
inc
test
cmc
notb
add
movsl
popa
out
arpl
mov
mov
stc
mov
in
or
lahf
pop
andl
mov
add
icebp
pop
xchg
ds
std
dec
jns
add
mov
mov
adc
mov
dec
mov
add
popa
out
addb
lock
insb
mov
inc
movsb
push
or
enter
ret
mov
pusha
add
mov
addb
mull
mov
push
pop
cmpl
imul
repnz
mov
stos
pop
xchg
mov
std
es
rolb
mov
outsb
sbb
jg
jl
aad
mov
inc
add
hlt
sbb
mov
mov
stos
jbe
add
mov
or
mov
dec
negb
sbb
inc
movsl
dec
jmp
mov
jmp
out
das
rolb
push
push
adc
add
inc
mov
mov
jno
lcall
test
mov
cmp
int
aad
lock
or
xor
cmpsb
push
test
test
add
xchg
adc
jb
mov
dec
mov
mov
sbb
ss
pop
jo
mov
fsubr
ja
dec
mov
add
rolb
mov
jecxz
adc
mov
ret
add
add
mov
fistl
mov
and
mov
inc
add
mov
pop
sub
out
int
mov
jmp
inc
popa
dec
lock
add
fsub
insl
imul
jmp
stc
ds
jge
addr16
imul
cmpsl
and
add
inc
daa
sbb
loop
mov
add
jecxz
dec
sub
inc
lahf
jo
mov
add
add
ficoml
insb
mov
data16
fistpl
jl
aaa
repnz
cltd
in
adc
mov
sti
push
mov
fs
add
mov
mov
ds
ret
inc
adc
mov
lds
adc
out
add
xor
cmp
and
test
jg
sbb
popf
imul
das
pop
add
iret
stc
pop
into
aad
or
mov
movsl
sbb
mov
push
in
int
jne
ret
nop
add
sldt
mov
stc
movd
push
fmuls
rolb
dec
xor
ret
cld
lea
les
test
cs
sarl
cmp
jae
xchg
add
xor
mov
add
aas
int3
dec
imul
mov
mov
rolb
mov
sub
add
push
push
jns
add
add
movsb
aad
dec
mov
hlt
sbb
add
je
nopl
mov
mov
fsubrs
rcll
bound
mov
cmp
pop
movsl
test
insl
push
push
mov
add
movsb
test
ret
lods
cwtl
fisttpll
mov
jno
xchg
inc
add
add
out
add
jbe
cmc
mov
mov
inc
mov
sub
addb
fdivrl
sbb
subl
rolb
mov
inc
gs
sbb
aad
add
scas
xor
mov
mov
dec
cmp
pop
cmp
bound
mov
mov
mov
pop
test
out
mov
aas
scas
jge
roll
jg
loope
rolb
mov
jecxz
push
int3
repnz
adc
mov
and
mov
imul
mov
mov
add
mov
mov
faddp
add
rolb
mov
call
mov
js
and
add
add
push
cmp
dec
mov
mov
outsl
jge
or
add
sbb
add
mov
add
jp
cmp
xor
jne
and
adc
mov
jp
add
cmp
stos
mull
dec
or
add
out
popa
mov
cmpsb
pop
mov
fldl
mov
dec
xor
mov
add
outsb
jecxz
scas
rolb
mov
or
adc
mov
cmp
add
xchg
jns
xchg
in
mov
jge
adc
sbb
rorl
xor
and
mov
add
or
xchg
scas
aas
pop
push
fstps
arpl
push
inc
add
mov
add
add
and
mov
push
inc
dec
pop
ja
cli
in
or
mov
je
jne
mov
and
mov
add
aas
repz
mov
das
je
cltd
clc
push
add
lcall
push
pop
lea
scas
cmp
repz
cs
mov
mov
adc
push
add
mov
add
add
mov
push
out
push
jecxz
add
scas
lahf
mov
insb
punpckldq
mov
or
addb
jo
mov
in
sbb
addr16
fadds
add
arpl
lea
add
pushfw
addb
xor
inc
add
add
fnstsw
add
mov
add
adc
clc
inc
inc
push
cs
stc
rolb
mov
cli
int
rolb
mov
add
mov
jmp
test
mov
add
iret
and
mov
jecxz
aaa
sub
pushl
push
add
out
jae
add
adc
mov
add
addb
mov
dec
cltd
and
mov
lds
in
int
jb
mov
xor
cmpsl
lcall
mov
pop
dec
jno
aam
add
popa
pop
ds
jl
xor
mov
mov
fnstcw
mov
mov
add
in
out
push
xchg
das
loope
in
push
js
inc
mov
mov
nop
add
xchg
cmp
adc
mov
mov
rorl
ss
mov
push
fisttps
jno
out
add
add
ds
loopne
mov
jle
jecxz
add
and
add
insl
jns
inc
pop
out
xchg
add
adc
sub
mov
punpcklwd
jnp
out
pop
stc
loopne
mov
inc
lods
adc
mov
ret
out
movsl
stos
jle
add
fdivrl
scas
sbb
cmc
cli
loope
add
add
jne
sub
aaa
or
int
jge
mov
loopne
mov
and
mov
and
les
popf
xchg
je
fimull
les
ret
scas
xor
add
sbb
mov
scas
nop
add
add
fwait
pop
cmp
cmp
in
pushf
mov
sbb
lahf
insb
mov
out
mov
fxch
xchg
and
das
icebp
jmp
int
inc
add
gs
mov
mov
add
cmpsl
adcl
mov
movsb
add
mov
push
mov
mov
add
mov
mov
les
mov
add
pop
xchg
roll
mov
mov
inc
jp
add
aad
xchg
inc
cwtl
mov
stos
je
mov
sbb
rolb
dec
jb
mov
aam
rolb
mov
xchg
add
mov
test
test
jnp
sbb
add
popf
sub
insb
ret
xchg
arpl
out
mov
das
dec
sub
sub
dec
push
fsubr
dec
sbb
jmp
and
ficoms
mov
fmuls
jns
pop
mov
mov
xlat
xor
add
das
inc
add
movsb
bound
mov
popl
test
jle
xor
mov
mov
cs
test
add
mov
sbb
dec
cmp
inc
lahf
sub
repz
ret
add
mov
outsb
in
or
mov
mov
outsl
cli
fdivl
add
mov
sub
stos
cli
fists
loop
mov
fidivrs
jo
mov
dec
fmuls
or
mov
out
sub
xlat
test
mov
add
sbb
cmc
cmp
insb
add
xchg
add
fisttpl
pop
xlat
in
xor
mov
lock
jp
movsb
or
out
jecxz
ds
sub
popf
test
mov
mov
jnp
gs
mov
ljmp
add
add
mov
cld
add
mov
xor
mov
mov
add
mov
add
mov
mov
outsl
sbb
jo
mov
pop
pop
pop
test
sbb
sbb
pop
add
cld
xlat
or
loop
mov
mov
notb
cmp
and
add
mov
add
in
inc
cmp
mov
fbld
aad
cmpl
fsubrl
call
add
xchg
pusha
add
push
ret
mov
mov
bound
mov
add
cld
xor
rolb
repz
out
jmp
mov
imul
xchg
stos
cmpsb
xchg
sti
test
add
fstps
mov
adc
jae
fnstsw
adc
dec
insb
data16
mov
dec
test
inc
in
add
mov
mov
lret
lods
dec
repz
jg
add
mov
and
cltd
fstps
xor
add
add
jns
push
mov
cmp
pop
stc
push
add
add
mov
mov
xor
addb
flds
mov
in
imul
dec
outsl
ret
or
mov
pop
push
movsb
push
cmpsb
mov
xor
push
cmpsl
addb
mov
mov
add
jbe
mov
xlat
inc
adc
mov
ljmp
stc
cltd
inc
jb
mov
mov
push
sbb
pop
and
jns
mov
add
xchg
jne
dec
cs
popa
sti
int3
xchg
push
pop
and
inc
idiv
test
mov
inc
inc
sub
pop
mov
mov
push
nop
add
scas
nop
add
adc
add
mov
jp
in
les
add
mov
jecxz
mov
mov
add
add
mov
clc
xlat
or
cmpsl
pop
or
pop
iret
int
cmp
and
cmp
cmpsb
pop
loop
mov
mov
mov
inc
test
mov
adc
mov
lods
test
add
mov
jbe
mov
xorl
xor
lods
push
cmp
sub
dec
mov
mov
nop
add
ss
fcomps
xchg
fdivs
nop
add
mov
add
fs
das
aam
mov
sahf
sub
aad
push
add
mov
add
xor
fsubrs
imul
add
ret
in
popf
int3
jno
sub
push
add
or
add
insl
outsl
or
ds
mov
cmc
scas
mov
rolb
add
inc
add
adc
mov
inc
xchg
orl
arpl
sbb
push
sbb
sub
sub
inc
and
inc
add
sbb
dec
iret
xchg
or
push
cmpsl
mov
sub
rorl
xchg
jbe
adc
mov
add
pop
imul
mov
pop
mov
xlat
scas
jnp
jbe
cmp
add
xor
mov
sbb
mov
pop
xchg
cmp
enter
add
mov
push
fxch
xor
es
mov
mov
loope
data16
add
fcoms
add
int
mov
repz
and
add
push
mov
into
leave
mov
push
cmp
jg
jae
inc
enter
mov
add
fldt
mov
shr
push
add
pop
lahf
ljmp
or
and
fidivrl
mov
mov
inc
add
lret
jns
aaa
ret
sub
inc
sub
or
jne
inc
cmpsb
mov
bound
mov
cli
pop
outsb
xor
cwtl
cwtl
insb
mov
es
mov
add
add
or
lock
push
lds
sub
bound
mov
add
and
mov
dec
mov
sub
mov
addb
into
das
mov
out
cmp
movsl
shrl
jmp
mov
bound
mov
add
leave
shll
mov
mov
insl
sarl
add
mov
imul
mov
mov
test
cmpsl
jge
movsl
add
mov
cmp
mov
cmp
clc
aas
in
jbe
std
adc
mov
add
rolb
aam
pushf
sub
add
push
add
and
push
add
sbbl
int
nop
add
add
pop
push
add
mov
mov
sarl
ljmp
pop
jbe
cwtl
in
lods
lea
arpl
push
adc
mov
jo
mov
pop
pop
xor
mov
mov
add
je
stos
jmp
in
adc
jmp
add
cmp
or
xor
or
jle
add
add
dec
les
add
add
les
sub
out
stc
xchg
outsb
ss
insl
xchg
loopne
mov
mov
add
scas
vpextrw
lds
add
insl
jno
es
mov
mov
xchg
fistps
daa
and
cli
addb
add
mov
cli
inc
add
fs
movb
sub
or
add
popa
divl
mov
lret
mov
mov
mov
mov
cmpsb
xchg
adc
lahf
push
filds
mov
mov
imul
dec
aas
inc
add
ljmp
scas
xchg
jnp
mov
xor
mov
cmp
xor
fiadds
sbb
add
cld
test
mov
mov
sti
and
mov
fisubs
popa
pop
sub
sti
adc
mov
pusha
add
enter
out
sbb
push
sbb
add
addb
cmp
sbb
mov
mov
add
add
hlt
adc
mov
and
inc
jb
mov
mov
loope
mov
addb
imul
mov
scas
inc
push
add
sub
sbb
fnstenv
out
add
fmul
mov
add
mov
cli
movsb
das
ds
cli
push
sbb
mov
pop
cli
add
mov
test
add
mov
add
mov
nop
add
mov
mov
inc
add
cmp
jo
mov
aad
xor
mov
mov
pusha
add
dec
dec
jne
mov
mov
xchg
leave
mov
mov
ljmp
push
mov
jae
loopne
mov
fdivl
mov
ret
pushf
jae
por
sub
add
add
mov
adc
arpl
inc
add
xchg
add
xor
out
std
pmaxsw
cmp
inc
in
dec
test
stos
jg
aad
mov
dec
insb
mov
add
mov
cmp
xor
mov
push
je
and
push
outsb
push
xchg
sub
jae
cmp
lcall
push
add
mov
add
cmpsl
ljmp
mov
ret
data16
adc
mov
and
mov
xor
mov
decb
cmp
mov
in
xchg
shll
jae
shll
sbb
or
sbb
add
shl
mov
jmp
add
into
loope
xor
sbb
mov
xchg
gs
pop
inc
fs
jne
ja
fucomip
dec
mov
aas
and
and
xlat
mov
int3
pop
mov
mov
pop
cmpsb
cmp
fnstenv
mov
pop
fisubrl
incb
inc
pusha
add
add
in
lcall
mov
mov
push
or
int3
sub
xchg
testb
in
mov
jbe
pop
cwtl
xor
and
add
mov
fists
lret
pusha
add
mov
add
test
push
xor
fs
lods
int
cltd
lahf
and
repz
cmp
pop
cs
nop
add
in
sub
add
push
add
add
lds
mov
sub
mov
sbb
test
lret
mov
test
scas
adc
mov
and
repnz
push
add
pop
adc
mov
lcall
jge
mov
es
addb
mov
add
pop
xchg
push
push
mov
mov
faddp
add
inc
add
sbb
fs
push
add
push
sub
test
flds
int
pop
fiadds
lcall
shrl
fstp
adc
mov
test
jno
xlat
pop
aas
cmp
add
nop
and
mov
je
add
dec
fs
test
lock
inc
add
add
into
xor
mov
addr16
add
out
mov
lcall
pop
pop
lret
clc
neg
push
in
sub
sbb
ds
cwtl
mov
mov
movsl
sbbl
mov
out
fidivl
or
dec
or
add
cmc
mov
add
sub
test
ficoml
add
mov
int
adc
mull
loope
inc
sub
mov
js
cmpsl
out
int3
cmp
add
mov
dec
mov
dec
xchg
mov
add
and
rolb
jmp
add
jb
mov
pushf
fdivs
add
mov
adc
int
ret
adc
jne
mov
mov
je
and
mov
jae
loop
mov
cmp
xchg
clc
mov
sbb
mov
or
mov
mov
das
xor
mov
or
add
cmp
popa
dec
xor
sub
mov
inc
decl
addb
sub
gs
pop
xchg
add
mov
adc
mov
cmp
popf
addb
jecxz
dec
ljmp
push
push
mov
into
loop
mov
mov
loope
and
mov
add
mov
inc
add
cmp
adc
mov
mov
mov
bound
mov
dec
fwait
pop
dec
enter
in
cli
mov
mov
add
pop
mov
cmp
cmp
add
movsl
adc
repnz
adc
add
and
add
mov
sub
cmp
out
leave
rolb
pushf
mov
repnz
cmp
mov
mov
mov
add
imul
inc
dec
ljmp
rorl
leave
and
mov
mov
mov
xchg
add
mov
adc
mov
and
subl
xor
mov
in
mov
xor
sti
mov
pop
xor
mov
add
jecxz
add
cmc
sahf
cmc
xchg
xchg
aaa
clc
ljmp
or
mov
xor
mov
inc
bound
mov
mov
adc
sahf
dec
mov
mov
bound
mov
push
lahf
mov
loope
or
sbb
mov
add
je
cmp
mov
inc
call
imul
sub
notl
xor
xchg
xchg
add
add
sbb
add
add
add
enter
enter
add
mov
add
lahf
decb
lods
adc
rolb
mov
loopne
mov
xorl
mov
xor
or
lods
ret
ss
sti
scas
cmp
add
fnstcw
ds
stos
in
mov
mov
fnsave
add
arpl
jae
fistpl
test
lret
test
add
dec
xchg
sbb
push
dec
imul
lock
leave
jl
ret
enter
jecxz
mov
scas
push
mov
push
cmpl
xlat
fs
add
jne
out
outsl
call
stc
adc
add
add
mov
sbb
dec
xchg
fldl
fwait
pop
mov
dec
sbb
inc
and
push
popf
push
sarl
mov
popa
dec
mov
lock
pop
ljmp
xchg
scas
sub
sbbl
pop
in
pop
pushf
repnz
ret
pop
adc
mov
loop
mov
mov
cmp
inc
jae
sbb
sub
add
add
test
pop
xor
mov
jo
mov
and
leave
and
mov
sub
pop
mov
fisubs
add
xor
add
stos
lods
enter
or
add
cwtl
lds
outsl
es
mov
cmp
mov
mov
lcall
int3
or
xchg
leave
pop
int
dec
add
xor
outsb
inc
or
in
insl
ljmp
in
xchg
sbb
push
pop
fbld
enter
ds
fcoml
mov
fstps
imul
pop
push
sub
add
jne
push
mov
dec
jecxz
mov
fisttps
int3
mov
sbb
mov
sbb
mov
mov
out
jge
imul
inc
add
stc
ret
nop
add
push
popf
cmpsb
dec
pop
leave
loope
pop
lret
mov
mov
mov
xchg
test
in
and
mov
in
ret
lret
dec
push
test
mov
sahf
scas
mov
cmpsb
or
call
bound
mov
adc
add
mov
arpl
push
loope
add
out
loopne
mov
mov
xchg
mov
lret
mov
add
filds
add
add
fldl
mov
in
xor
add
pop
xchg
jecxz
add
adc
mov
sbb
mov
sub
add
nop
add
mov
lods
aaa
inc
pusha
add
dec
iret
stc
pop
adc
mov
in
test
add
add
add
mov
dec
mov
mov
lea
mov
add
clc
sar
push
lods
lock
sub
dec
mov
push
add
pop
mov
loop
mov
lds
mov
aas
lahf
repnz
mov
mov
mov
xchg
ss
cld
xchg
and
add
mov
mov
popa
ss
test
mov
push
push
addr16
push
in
inc
xor
iret
cmp
addl
mov
mov
mov
adc
mov
fwait
arpl
cmp
add
mov
movsl
test
pushf
out
add
aam
jp
int
cltd
scas
mov
jmp
push
mov
add
add
add
inc
push
repz
int
push
add
lods
mov
mov
out
jge
aam
add
jne
mov
lods
inc
add
lret
dec
aaa
mov
outsb
lods
cld
int
ret
ret
iret
rolb
jle
jle
movsb
and
push
sbb
cmp
pop
popf
cld
mov
movsb
push
pop
and
mov
enter
mov
add
addb
lods
fistpll
rolb
mov
mov
inc
add
inc
addr16
add
daa
xchg
mov
and
mov
push
and
push
bound
mov
mov
jae
shr
xor
mov
mov
jbe
push
lea
fldl2t
fiadds
and
push
mov
lea
addb
scas
popa
movsb
adc
mov
sub
adc
mov
bound
mov
xor
mov
mov
cmp
push
dec
mov
sbb
lea
and
add
push
arpl
adc
mov
push
nop
add
repnz
mov
add
pushf
nop
add
mov
sbb
stos
pop
xchg
add
push
add
std
pop
mov
sbb
pushf
push
jb
mov
xor
mov
mov
push
sbb
cmpsl
lret
sbb
test
insb
ds
jecxz
push
dec
adc
lret
xchg
stos
clc
push
add
rolb
mov
movsb
mov
lea
push
leave
sbb
cmp
cwtl
xchg
mov
mov
add
rolb
and
add
mov
pop
rolb
mov
movups
mov
add
and
sbb
add
xchg
push
jbe
add
addb
lret
mov
cmp
inc
add
fnstsw
rolb
unpckhps
fbstp
dec
push
push
xchg
cli
out
or
mov
mov
and
sbb
lods
loope
adc
add
inc
gs
lock
out
or
push
arpl
jg
rorl
fwait
jp
add
add
leave
sub
jge
mov
xchg
pop
dec
mov
add
add
mul
mov
xchg
add
add
orl
mov
push
ds
adc
mov
adc
mov
insl
xchg
sbb
ret
test
fsubl
dec
sbb
mov
add
addb
push
push
adc
mov
adc
push
ficomps
mov
adc
add
js
xor
sbb
jl
jbe
fldt
push
adc
mov
push
add
push
inc
mov
test
hlt
or
fs
add
mov
push
add
or
xchg
out
and
mov
add
xchg
ja
add
jo
mov
mov
dec
sbb
jbe
sbb
loop
mov
sbb
mov
mov
add
cmpsb
sbbl
mov
or
rcl
arpl
inc
imul
sbb
adc
mov
add
icebp
adc
fsubrs
lret
js
push
add
aam
mov
ret
movsl
mov
pusha
add
or
leave
int3
mov
mov
mov
mov
add
mov
dec
mov
add
insb
std
dec
addr16
add
mov
repz
stos
clc
out
mov
mov
stos
pop
xlat
iret
movsb
ja
jne
push
add
mov
xchg
jns
mov
lret
mov
mov
jle
push
cli
pop
jae
scas
sbb
jle
sub
pop
mov
repz
mov
imul
add
rolb
mov
inc
xchg
aas
xor
jg
rolb
mov
cmpsl
dec
popf
sub
mov
lock
inc
add
mov
add
mov
push
xchg
pop
jg
addb
ret
jmp
sbb
cmp
push
mov
in
mov
addb
mov
mov
or
in
lret
lahf
pusha
add
sti
jnp
cmp
cmp
or
inc
jbe
add
out
push
inc
add
push
addb
in
pop
ret
in
fwait
push
imul
add
add
out
push
loopne
mov
mov
pusha
add
mov
mov
adcl
add
popf
dec
std
mov
push
add
sub
call
fadds
add
sub
mov
add
gs
push
mov
sets
popa
push
sbb
mov
add
push
add
pop
js
add
mov
add
add
clc
cmp
jmp
jg
adc
adc
mov
insb
xor
mov
pop
pop
addr16
push
pop
mov
mov
cmp
cltd
movsl
movsl
fmulp
xor
add
push
mov
mov
ret
ja
dec
jb
mov
cmp
pop
mov
mov
iret
adc
in
lock
mov
mov
dec
mov
mov
sub
dec
xor
js
pop
jle
inc
push
jns
add
vxorps
add
neg
xlat
gs
lea
out
int
jb
mov
push
pop
inc
mov
sbb
xchg
adcl
add
add
mov
add
mov
add
or
sub
sub
add
xchg
inc
arpl
add
jno
clc
stos
lahf
or
mov
lock
xchg
pop
dec
mov
aad
lods
sbb
test
inc
in
push
add
xchg
add
mov
popf
outsl
dec
sbbl
lahf
insl
repz
int
test
add
mov
add
mov
push
es
mov
and
movsb
push
dec
xchg
xor
mov
mov
sub
fcoms
rcrl
mov
sub
add
ret
movsb
and
mov
add
mov
out
sbb
mov
mov
lahf
data16
push
jns
inc
xchg
add
cmp
add
fsts
inc
mov
mov
punpcklwd
cs
push
jmp
push
add
pop
lock
mov
add
insl
icebp
enter
mov
cs
mov
fxch
hlt
mov
mov
add
nop
add
mov
dec
xchg
add
rolb
mov
push
aad
cwtl
mov
testl
mov
jae
push
add
jns
inc
fmull
rolb
mov
dec
gs
std
mov
dec
pusha
add
rcrl
push
add
add
or
add
mov
fdivrs
push
leave
sub
lods
dec
leave
mov
jmp
dec
sub
add
rcrl
push
adc
pushf
sbb
mov
add
and
movsb
cmc
sbb
add
xchg
mov
or
and
add
add
nop
add
inc
add
mov
cli
or
or
add
mov
lds
push
pop
lock
cmp
mov
or
pop
pop
push
add
ret
mov
mov
add
lock
mov
xlat
mov
lahf
scas
imull
add
lea
mov
sbb
add
and
jp
pop
mov
hlt
sbb
add
mov
add
mov
das
imul
xchg
add
add
add
mov
add
cmp
mov
push
adc
push
add
jb
mov
mov
cmpsl
push
fwait
out
adc
mov
bound
mov
insl
popl
mov
adc
mov
mov
jl
insl
sub
inc
add
mov
adc
lea
icebp
fldenv
xor
mov
mov
ret
pop
popf
lcall
jg
mov
dec
inc
or
mov
add
add
push
sti
mov
mov
sub
nop
add
insb
jmp
mov
mov
cmpl
jae
aas
hlt
and
add
xchg
lret
mov
lock
mov
testb
push
lods
in
jecxz
push
push
pop
lock
sbb
cmp
add
add
jb
mov
add
add
add
or
mov
jg
jbe
cmp
xor
je
add
shll
sbb
dec
shrl
daa
sub
fists
fistl
add
inc
lret
fisubl
sti
and
mov
add
aaa
push
dec
sub
fsub
add
cmp
mov
mov
pop
push
jecxz
addb
std
add
mov
mov
out
int3
shld
mov
push
add
nop
add
mov
mov
jmp
fs
push
add
icebp
es
and
xlat
cmp
icebp
add
mov
add
dec
shr
test
je
mov
push
add
push
inc
push
aad
aaa
pop
or
ror
push
mov
fimull
sbb
std
out
jecxz
lea
and
mov
data16
and
mov
or
jle
pop
dec
not
inc
add
mov
mov
rolb
mov
mov
mov
cltd
dec
ret
xchg
aad
and
add
push
int3
mov
pusha
add
mov
stos
cmc
mov
in
lea
fs
fistps
imul
adc
decl
inc
add
mov
mov
test
mov
loopne
mov
into
fildll
jns
add
shll
mov
cmp
add
add
and
pushf
adc
mov
sbb
add
lret
stos
adc
mov
sub
imul
aas
lahf
jmp
jbe
in
movsb
jb
mov
stc
int3
iret
mov
adc
add
mov
shll
add
mov
pop
jmp
icebp
or
fldl2e
dec
or
mov
xor
pop
scas
addb
inc
lcall
insl
and
cmp
add
outsb
mov
mov
mov
outsb
scas
mov
test
icebp
add
push
add
xchg
sbb
cwtl
fstpl
popa
jmp
in
xor
pop
xchg
mov
and
mov
dec
lret
mov
add
push
dec
mov
cmpsl
mov
add
add
inc
add
xchg
inc
add
mov
add
push
roll
adc
mov
rorl
mov
add
dec
sub
mov
mov
aaa
icebp
dec
cmc
repz
mov
daa
cmp
mov
lret
mov
mov
mov
pop
sahf
and
mov
add
adc
push
mov
add
xchg
mov
mov
add
add
xchg
test
lock
sub
add
arpl
mov
dec
dec
and
fbld
xor
and
push
dec
inc
inc
add
push
xor
mov
scas
sti
cltd
cmp
shll
add
icebp
pop
add
into
add
dec
and
pop
mov
adcl
jbe
push
bound
mov
adc
push
add
sahf
xor
pop
pusha
add
pop
fidivrs
rolb
or
xchg
sub
push
adc
mull
test
mov
mov
add
mov
dec
cmpsb
and
add
adc
dec
dec
adc
mov
mov
push
fndisi(8087
inc
ljmp
jne
pop
jmp
pop
rolb
mov
aad
notb
add
add
and
push
mov
mov
xchg
cmp
mov
daa
mov
addr16
jle
lock
sub
add
mov
scas
das
and
repnz
dec
dec
mov
lahf
fisubl
add
mov
push
test
outsl
push
add
ret
cmp
sub
or
add
mov
lahf
pushf
mov
add
cmp
push
sbb
aaa
ja
pop
js
rcrl
sbb
inc
sbb
adc
mov
jle
xor
jmp
mov
test
dec
xor
xor
rcrl
mov
cltd
lds
add
fsubrl
jbe
xchg
jb
mov
inc
pop
lds
inc
mov
loopne,pn
mov
add
jl
jo
mov
mov
mov
movsl
push
add
mov
lock
xor
pop
jg
add
add
inc
mov
rolb
mov
out
and
mov
mov
data16
faddl
add
jle
sub
jle
sbb
or
jg
add
and
sbb
add
std
mov
jmp
mov
mov
mov
inc
movsb
int3
mov
jb
mov
inc
je
scas
add
pop
rcr
pop
jae
lock
mov
adc
add
lds
sub
addr16
add
pop
or
in
sub
lods
or
lods
pop
push
push
pop
xor
mov
or
add
ficoms
outsb
lock
cmc
clc
lods
push
push
dec
mov
out
add
mov
in
aam
push
add
mov
push
imul
addb
push
adc
sub
aas
adc
mov
push
add
dec
push
std
mov
mov
and
mov
cli
jmp
mov
add
lds
clc
cmp
js
and
stc
jnp
add
rolb
mov
add
scas
xchg
mov
add
addb
inc
add
cmp
or
das
mov
add
out
sbb
test
mov
lret
mov
lret
ljmp
sub
adc
mov
push
cmp
cmpsb
loopne
mov
lret
dec
xchg
outsl
in
movb
mov
mov
jge
xchg
lock
add
xor
mov
push
xchg
out
cmp
lret
add
push
add
clc
lods
rolb
mov
fsubl
mov
mov
aaa
imul
je
mov
mov
dec
jae
addb
stc
push
addb
insb
sti
mov
add
pop
mov
mov
add
ljmp
jbe
cltd
je
movsb
mov
in
mov
pop
jbe
nop
add
lds
mov
repnz
jle
add
add
push
mov
xor
add
inc
pusha
add
dec
inc
cmc
add
mov
daa
fimuls
add
jno
mov
add
add
je
aas
aas
popa
scas
ja
add
add
cmp
add
mov
xlat
push
stc
push
cmc
mov
mov
fs
push
add
cmp
jae
add
mov
mov
shrl
fildll
mov
sub
mov
hlt
mov
add
cld
xor
pop
jae
pusha
add
add
test
push
jns
jge
das
and
mov
mov
add
mov
aad
xor
movsl
in
add
in
xor
mov
add
shrl
mov
dec
leave
loop
mov
push
icebp
jle
xor
add
mov
mov
push
dec
jle
cld
sub
pushf
rolb
mov
rcrl
mov
sbb
call
call
push
lock
sub
jno
add
repz
jno
push
lods
sbb
add
js
jmp
add
fildl
stos
sbb
xchg
add
push
xchg
xorl
sbb
sub
mov
jecxz
adc
mov
add
mov
xchg
sbb
sahf
insb
and
rolb
mov
add
add
in
add
dec
mov
and
mov
pop
xor
ds
inc
add
sub
add
adc
idiv
pop
out
mov
xlat
fnstcw
add
sbb
mov
sub
cmp
je
rcl
push
add
jo
mov
in
jecxz
add
xchg
jecxz
add
scas
enter
lahf
mov
mov
addb
mov
mov
ret
jmp
add
sbb
mov
arpl
dec
xor
mov
lds
sub
ljmp
jg
outsl
add
data16
mov
inc
out
test
repz
in
xor
mov
inc
daa
addb
dec
sahf
xchg
cld
out
push
or
adc
arpl
xor
out
add
repz
fistps
xor
mov
popf
or
jecxz
in
add
mov
mov
add
inc
add
mov
sbb
fists
cmc
inc
add
add
cmpxchg
test
fldt
leave
mov
mov
out
push
add
js
das
sti
pop
push
in
insb
inc
clc
push
rolb
mov
jl
add
dec
rolb
mov
mov
mov
icebp
jno
xchg
test
imul
jb
mov
or
lds
orps
xor
dec
ret
and
cltd
xor
mov
dec
hlt
mov
sbb
int
adc
mov
pop
inc
pause
add
dec
push
addb
push
jl
push
push
cmc
lds
ds
add
add
mov
add
add
add
mov
mov
sbb
adc
mov
pop
fildll
mov
movsl
orl
dec
hlt
popa
in
cwtl
out
mov
stc
xchg
fiaddl
addb
int3
int3
ret
and
mov
lock
or
xchg
lock
add
lahf
repz
xchg
js
in
rolb
mov
sahf
inc
insb
jnp
ret
jno
scas
test
sub
add
push
jg
push
add
push
add
les
add
push
jge
mov
add
mov
clc
dec
jp
clc
sahf
sti
and
add
or
out
and
mov
or
ret
out
add
pop
sbb
cmp
ret
sbb
mov
add
mov
sahf
sbb
mov
dec
sub
or
lock
cmpsl
add
daa
adc
bound
mov
sub
pop
test
xchg
in
sub
pop
divb
jbe
mov
and
mov
sub
pop
rolb
mov
inc
add
inc
add
repnz
pop
jle
addb
mov
or
outsb
push
repz
mov
push
add
add
add
lock
insl
scas
out
popa
pop
jle
jns
outsb
xor
xor
mov
xor
dec
lcall
dec
daa
and
hlt
mov
push
daa
cmp
das
pop
sub
jge
adc
pop
out
aas
lds
nop
add
dec
adc
test
and
mov
xlat
fmulp
jp
or
and
pop
mov
push
add
or
insl
out
and
xor
out
inc
es
jnp
in
push
add
xchg
inc
add
mov
push
fcomi
rolb
scas
insb
cld
jl
imul
dec
adc
mov
add
pop
ds
pop
dec
pop
xchg
xor
lret
mov
jmp
cld
jle
cmc
loope
mov
add
push
dec
sbb
jg
out
xchg
cmp
sub
lahf
test
bound
mov
jae
test
fs
sbb
add
xchg
jns
rolb
fnstenvs
mov
sbb
mov
repz
pop
outsb
dec
rolb
mov
add
test
lock
add
add
mov
add
xchg
adc
mov
jne
push
push
add
movsb
aas
shll
add
xor
mov
sub
ljmp
flds
frstor
xchg
add
shll
add
xchg
sahf
fistps
mov
add
out
dec
ret
fcmovnb
cmpsl
mov
pop
cmp
jecxz
xor
push
add
mov
mov
add
add
inc
mov
ds
pushf
add
add
mov
xor
insl
mov
repnz
add
add
mov
inc
mov
mov
out
dec
mov
test
ja
xchg
add
pop
mov
mov
out
mov
clc
mov
mov
fwait
push
add
aaa
push
lock
jnp
jno
dec
imul
ljmp
mov
aam
aaa
push
push
push
cmp
mov
mov
fnstsw
pop
jb
mov
sbb
loop
mov
add
dec
sbb
cmp
push
add
mov
and
cltd
and
xor
stos
inc
cli
xlat
pop
fisttps
sbb
push
add
int
add
xor
sti
cmp
add
mov
pop
pop
sub
ja
scas
cmp
adc
mov
sub
mov
mov
add
test
rolb
mov
push
add
repz
add
adc
add
call
add
add
jg
fnstsw
fldl
and
and
arpl
mov
mov
pop
clc
sbb
imul
shrl
mov
xchg
pop
out
cmp
jo
mov
add
push
leave
fdivrs
mov
jbe
add
clc
and
fnsave
mov
je
mov
push
movsl
pop
lret
sub
mov
add
push
adc
xor
add
inc
inc
xchg
insb
lcall
pop
repnz
retw
inc
xchg
addl
daa
pop
jne
and
fldt
jmp
cltd
leave
push
call
pop
dec
dec
ret
jno
cmc
jge
jns
movsl
out
add
xchg
nop
add
jbe
aaa
lds
or
add
pop
xor
mov
inc
sub
lds
and
add
fdivrs
dec
or
add
fcom
add
test
in
in
movsb
cld
pusha
add
into
loopne
mov
cmc
mov
mov
sbb
jno
jb
mov
aam
cmp
mov
mov
outsb
aam
addb
pop
mov
add
cli
cmc
cmc
dec
pop
arpl
ficomps
lds
mov
jle
push
adc
loopne
mov
mov
loope
lock
mov
add
mov
and
mov
stos
pop
leave
faddl
mov
aas
stos
lea
mov
add
add
hlt
mov
scas
xchg
mov
pop
addb
mov
add
add
std
jbe
add
daa
inc
add
dec
lret
add
pop
bound
mov
aad
dec
test
or
mov
je
add
mov
add
rolb
mov
mov
pop
dec
lcall
cmp
mov
push
add
jb
mov
cmp
lret
cwtl
pop
xchg
adc
add
inc
lret
lcallw
pop
add
or
add
push
pop
push
pop
mov
jmp
les
and
imul
sub
mov
adc
mov
cld
stos
insb
data16
or
mov
push
mov
cld
jbe
test
adc
cltd
ljmp
xchg
jae
add
adc
add
jl
inc
dec
je
adc
adc
lahf
xchg
push
add
mov
lods
fs
shll
add
adc
sub
addb
clc
mov
mov
jne
mov
aam
addb
out
dec
add
mov
cld
pop
xor
cmp
mov
xchg
ja
add
mov
jp
jle
stc
push
xchg
add
mov
test
test
test
add
loopnew
mov
add
pop
cmpsb
adc
sub
pushf
push
ljmp
mov
arpl
flds
jne
inc
icebp
inc
add
leave
ret
cmp
mov
mov
mov
mov
add
add
sub
xor
push
jbe
xor
mov
push
add
imul
popf
adc
pop
xor
mov
mov
push
add
push
cmp
add
stc
fisttps
pop
pusha
add
das
push
push
mov
mov
ja
int
mov
mov
add
mov
rolb
aas
xor
out
stc
in
inc
fs
jmp
scas
jl
cmp
xlat
mov
gs
cmpsb
pop
lcall
add
add
mov
push
sahf
xchg
push
dec
push
push
rorl
inc
add
mov
xchg
and
pop
in
or
mov
push
leave
dec
and
mov
loope
and
lock
push
or
insl
insb
or
push
xor
pop
fimull
xor
add
add
adc
lea
mov
dec
dec
mov
arpl
mov
into
stos
sub
mov
mov
jecxz
shrl
mov
repz
cmpsb
ret
or
lcall
pop
sub
and
mov
call
xor
or
imul
ljmp
in
mov
aam
bound
mov
popf
and
sub
push
add
push
add
mov
inc
addb
lea
add
mov
in
stc
aas
or
pop
xchg
push
mov
das
push
xchg
lcall
cs
cmpsl
xchg
adc
mov
inc
mov
loope
pop
int3
dec
or
lds
mov
jle
mov
cmpl
rolb
push
add
movsl
jge
mov
push
add
ja
scas
push
add
ja
xor
mov
mov
addr16
mov
pop
divl
or
rolb
mov
jbe
push
add
mov
sub
add
mov
jecxz
add
xor
mov
xchg
aaa
cmp
decb
and
push
int3
jo
mov
test
push
and
mov
lret
clc
adc
add
add
lods
int
or
mov
dec
mov
popa
cmc
xor
inc
pop
adc
movsl
fcomps
add
add
mov
jo
mov
cmc
js
add
sub
imul
lcall
outsb
aaa
jge
jle
mov
add
mov
movsl
push
stc
sub
mov
xchg
inc
sbb
cmpsb
sbb
in
adc
cmp
pop
or
stos
push
add
cmp
cmp
xchg
xchg
jecxz
test
push
fisttps
mov
mov
shrl
pushf
out
pop
xor
mov
mov
movb
mov
out
fimull
lods
adc
inc
les
pop
in
mov
gs
insl
sub
adc
jl
hlt
in
dec
cs
add
mov
mov
add
mov
push
sbb
cmp
sub
add
xchg
add
dec
shrl
lea
mov
ret
daa
les
add
adc
add
inc
xor
mov
ret
movsl
xor
jo
mov
add
mov
imul
lahf
data16
into
dec
add
mov
xlat
pop
push
into
xchg
add
faddl
add
pop
and
jno
cltd
jg
arpl
movsb
mov
and
add
ficompl
xor
add
in
popf
jno
movsl
push
pop
push
xchg
inc
add
inc
sarl
mov
mov
cli
out
pop
mov
into
cmp
pop
rolb
mov
cld
scas
push
add
mov
mov
ret
lret
negb
jecxz
mov
cmp
mov
ljmp
pop
clc
out
cltd
xchg
push
rorl
sti
sub
cmp
mov
mov
pop
cld
cmpl
mov
or
in
lret
push
mov
mov
jne
ficomps
xchg
sbb
inc
adc
mov
in
lods
subl
movsl
push
add
or
add
shll
pop
rolb
mov
cmpsl
sbb
add
mov
adc
mov
sub
mov
add
ror
push
mov
add
test
in
jmp
iret
loop
mov
int3
pusha
add
mov
pop
ret
rolb
imul
add
add
adc
mov
out
jnp
into
mov
inc
add
add
mov
add
inc
int3
int
pop
shrl
popf
mov
push
iret
jno
mov
add
mov
mov
cmp
add
add
std
mov
movsl
mov
repz
test
lods
cmc
jmp
je
push
xchg
mov
add
sub
cli
cwtl
clc
mov
mov
lret
sub
shl
addr16
cmpsb
xlat
jle
notb
lahf
cmpsb
mov
mov
cs
test
stc
xor
frstor
popf
imulb
inc
outsb
addr16
je
ret
dec
jle
mov
jl
xchg
add
mov
add
adc
mov
in
cmp
and
mov
ljmp
xchg
add
stos
bound
mov
dec
into
ret
std
mov
dec
fmul
fcompl
push
mov
add
out
inc
xlat
adc
mov
int
push
push
js
pop
aas
cmp
pop
popf
fisubrl
or
mov
mov
mov
add
jo
mov
mov
adc
mov
loope
loop
mov
push
shll
in
adc
dec
aaa
mov
mov
int
mov
iret
jbe
xor
add
cmp
aaa
adc
mov
repz
push
and
cltd
fildll
popf
lahf
inc
add
mov
add
or
add
sub
add
mov
mov
lret
lods
lahf
mov
test
xchg
mov
mov
mov
and
mov
sub
mov
push
mov
fwait
daa
sbb
sbb
push
inc
cmpsb
mov
inc
dec
xchg
test
movsl
ret
push
lods
mov
push
dec
push
sub
or
add
cwtl
push
mov
lock
fcom
add
mov
jnp
rolb
idivb
add
mov
add
mov
mov
and
lock
pop
ss
aam
jb
mov
cltd
cli
popa
cmp
enter
push
ds
add
insl
cwtl
jl
lret
add
inc
add
mov
cmp
add
rolb
jp
sbb
loope
rolb
mov
add
lret
daa
mov
cwtl
out
out
loope
xchg
imul
add
dec
mov
out
imul
mov
mov
nop
add
push
and
mov
rolb
mov
inc
add
inc
out
addb
ljmp
jecxz
sbb
add
add
mov
xchg
mov
addb
loope
test
out
jb
mov
push
leave
cmp
imul
mov
add
fwait
push
jae
sub
xor
movsl
jmp
sarl
jae
sbb
push
sbb
repz
cmp
jno
or
pop
testb
sti
push
mov
mov
xchg
jg
add
cmpsb
les
xor
mov
cli
sbb
add
pop
dec
call
mov
inc
jl
add
or
cmp
mov
xchg
and
mov
add
mov
xor
mov
int3
stos
dec
fwait
push
lods
mov
lea
mov
cltd
nop
mov
or
ss
data16
add
pop
cltd
ret
roll
mov
mov
movsl
cmc
adc
mov
int3
nop
add
xchg
nop
add
mov
mov
enter
popf
add
cltd
imul
mov
xor
pushf
imul
adc
mov
mov
les
clc
push
sub
mov
add
icebp
xchg
pop
adc
mov
mov
push
add
add
inc
test
lahf
jns
jnp
das
xor
insl
insb
push
adc
mov
inc
repz
bound
mov
int
xor
add
int
lock
mov
fildl
out
jmp
fistpll
mov
add
std
mov
mov
xor
mov
sahf
ja
xchg
daa
stc
and
mov
jns
lret
sbb
mov
xor
mov
mov
mov
sbb
push
ljmp
pop
jmp
enter
jno
xchg
cmpl
mov
imul
jo
mov
add
add
dec
outsl
pop
in
in
add
mov
out
xor
or
add
stc
rolb
mov
mov
outsl
mov
int
sbb
sbb
add
popf
jg
or
add
mov
ret
das
or
add
iret
mov
xchg
dec
xlat
ss
sub
shrl
push
add
add
lret
xchg
fs
add
mov
mov
mov
lods
loope
add
xchg
add
push
jecxz
fldt
mov
rolb
mov
add
sub
pop
jno
xor
shll
mov
mov
adc
mov
lock
popa
fadds
add
mov
add
jns
lcall
in
sbb
jnp
and
mov
aad
ret
adc
mov
or
add
inc
rcrl
addb
in
ret
addb
jo
mov
mov
or
jl
add
push
popa
xchg
ja
addb
sbb
add
add
cmp
in
push
int3
ds
adc
add
mov
jl
leave
sti
and
add
lret
and
mov
mov
scas
movsl
or
imul
das
or
arpl
xorl
pop
add
add
and
mov
add
jmp
add
out
mov
jecxz
add
lahf
or
hlt
popf
inc
add
mov
adc
add
dec
push
add
call
ja
mov
mov
call
push
dec
cmp
cmp
lods
and
mov
add
cld
cltd
js
cs
js
test
mov
add
test
add
sar
outsl
cmp
das
mov
mov
add
lret
add
lahf
xchg
dec
push
and
mov
add
dec
push
sub
cmp
add
mov
add
daa
adc
add
mov
add
mov
push
sub
sti
push
pop
hlt
fucom
add
into
push
fcmovnb
add
addb
nop
add
loope
fwait
enter
lret
test
add
out
loope
add
xchg
cmp
out
cmpsb
jb
mov
aad
mov
testb
movsb
lods
xchg
pusha
add
push
in
or
and
mov
sbb
add
bound
mov
dec
call
mov
dec
mov
pop
mov
sub
mov
mov
mov
fidivs
mov
push
outsl
jp
or
icebp
jae
repnz
jbe
call
in
stc
xor
mov
mov
push
mov
sarl
add
into
and
mov
dec
pop
dec
and
mov
sub
popf
mov
inc
sub
out
lahf
push
stc
xchg
mov
mov
inc
pop
inc
fstps
sub
dec
xchg
add
mov
repnz
jmp
cli
into
in
xchg
loop
mov
dec
or
insl
in
fcoml
cmpsb
mov
insb
add
jp
add
add
or
jl
fisubs
icebp
push
add
mov
sub
imul
out
data16
and
xchg
or
or
add
popf
dec
pop
cwtl
cmp
in
jbe
or
mov
add
pop
adc
mov
add
aad
jmp
pop
in
cmp
xor
stos
xchg
and
pop
movsb
es
add
cli
jg
mov
je
cli
xor
mov
dec
or
jg
dec
les
mov
mov
lea
mov
mov
fucom
add
cmp
ficoml
and
in
repz
cmpsb
or
roll
mov
push
test
iret
push
sarl
mov
mov
sbb
add
mov
ret
push
cwtl
rolb
mov
insl
add
add
mov
sti
push
add
iret
cmp
out
repnz
push
rolb
mov
les
dec
cli
inc
add
mov
add
jle
pop
and
mov
add
adc
mov
xor
push
mov
push
pushf
mov
lcall
add
pop
jp
xchg
cmp
add
mov
xchg
adc
lcall
mov
sub
inc
inc
add
add
add
add
into
mov
mov
push
sub
mov
mov
test
add
dec
sub
adc
mov
add
cmp
adc
fsubrl
inc
xchg
fnstcw
test
xchg
xchg
lcall
inc
add
xchg
fdivs
add
ds
or
pop
jae
movsl
pop
lods
jmp
mov
gs
lea
sahf
mov
xchg
cli
xchg
mov
mov
add
rolb
mov
xchg
fcmovbe
mov
inc
add
pop
cmp
add
or
add
cmp
sbb
movsl
inc
cltd
xor
mov
rolb
mov
insl
out
inc
push
xchg
rolb
mov
jno
addb
mov
scas
lret
dec
xchg
mov
cmc
or
iret
xlat
xchg
mov
mov
pop
push
outsb
sahf
out
cmc
pushf
dec
filds
mov
push
popf
ja
in
inc
add
popf
jns
xchg
or
add
add
mov
inc
leave
mov
adc
mov
sub
outsb
cmpsb
jae
movsb
out
insb
inc
inc
push
adc
test
pop
data16
pusha
add
mov
jb
mov
add
xor
mov
mov
mov
add
loopne
mov
popa
adc
mov
repnz
lcall
mov
mov
mov
jbe
cwtl
inc
jo
mov
int3
popf
mov
sub
in
mov
mov
int3
mov
cwtl
xchg
add
movsl
push
xchg
mov
add
xchg
setge
fdivrl
test
xor
xor
mov
js
dec
mov
fildll
dec
cli
and
mov
lods
dec
xchg
arpl
mov
add
aaa
dec
gs
add
mov
ret
fs
xchg
int3
and
mov
adc
mov
insl
test
icebp
push
out
adc
xlat
arpl
mov
loopne
mov
loopne
mov
add
mov
ret
adc
pusha
add
test
push
mov
mov
or
and
mov
addr16
je
hlt
mov
mov
cmpsl
inc
sub
push
cmp
or
add
inc
add
mov
sbb
add
inc
or
add
mov
mov
mov
out
mov
add
ret
push
and
mov
xor
imul
add
xchg
enter
scas
xor
pop
dec
inc
dec
lcall
push
mov
insb
push
je
cmp
repnz
pop
push
add
mov
js
add
mov
mov
mov
maxps
cmc
jge
pop
aaa
mov
mov
add
and
add
mov
push
in
test
idivl
arpl
mov
push
inc
cmp
add
push
insb
daa
out
in
dec
insb
cmp
adc
mov
dec
add
add
mov
mov
xor
mov
mov
add
add
or
into
adc
mov
dec
xchg
cmp
add
addb
shrl
fsubr
mov
loope
ds
bound
mov
add
xchg
ds
leave
pop
imul
mov
cltd
push
xchg
push
jmp
sbb
add
shll
add
repz
imul
in
pop
xchg
push
add
add
in
push
sahf
dec
loopne
mov
cmp
inc
mov
stc
sbb
jnp
adcl
mov
lret
icebp
mov
nop
add
xchg
inc
addr16
dec
sbb
sti
xor
mov
add
cmpsl
xchg
arpl
mov
add
mov
lock
mov
push
clc
mov
addb
rolb
mov
mov
into
push
les
test
add
jecxz
roll
flds
add
xor
pop
add
rolb
mov
jmp
pop
jne
cld
add
mov
push
and
mov
dec
fcmovbe
add
insb
insl
in
add
xor
sarl
icebp
fsubrs
mov
jmp
add
push
add
scas
jns
fwait
cmpsb
fcmovnb
lds
add
ljmp
add
add
scas
in
lcall
imul
mul
add
add
cmp
pop
mov
fadd
and
dec
and
fdivl
dec
push
cltd
scas
pop
in
jg
adc
pusha
add
sar
mov
aam
inc
xchg
test
jg
add
adc
push
cld
cwtl
test
test
mov
push
add
mov
cwtl
or
push
add
mov
js
int
rolb
mov
sbb
sbb
clc
xchg
sub
cld
rolb
sbb
add
add
add
dec
mov
mov
int3
adc
add
test
or
add
jp
cmp
cmp
hlt
mov
add
add
jae
in
mov
adc
mov
add
sub
dec
sub
pop
sub
xlat
rolb
mov
fidivs
sbb
jb
mov
into
cmc
ds
adc
mov
add
sbb
push
add
xor
add
and
gs
add
mov
mov
mov
bound
mov
stos
or
add
inc
sahf
xchg
sub
jg,pn
mov
stos
mov
movsb
arpl
repz
xchg
inc
cmp
cwtl
and
fnstcw
movsl
jae
aad
pop
push
add
dec
icebp
mov
add
sub
call
scas
loop
mov
jle
dec
xchg
lock
push
xor
sub
push
jns
push
and
add
xor
mov
adc
mov
and
or
add
dec
imulb
or
mov
dec
shll
dec
inc
add
add
pushf
add
mov
imul
inc
in
movsb
scas
sbb
out
iret
sub
lds
xchg
ljmp
add
add
mov
les
add
add
cltd
xor
mov
fisubs
notl
sbb
jnp
add
repnz
and
iret
in
mov
add
fisttps
sbb
mov
rolb
bound
mov
add
leave
push
pusha
add
mov
mov
sub
mov
mov
add
call
sahf
mov
movl
pusha
add
mov
mov
inc
scas
or
add
decl
push
mov
les
cs
frstor
fcompl
out
add
bound
mov
adc
popf
cmp
shrl
and
and
add
xor
mov
mov
int
insl
dec
add
mov
mov
je
iret
pushf
imul
add
add
mov
dec
push
xchg
add
lea
iret
sbb
sub
das
xchg
lock
inc
out
dec
or
sti
mov
test
popl
pop
jns
testb
and
jecxz
push
mov
adc
mov
mov
dec
rolb
mov
add
sbb
jp
add
mov
add
adc
add
mov
add
pushf
imul
addb
fucomi
sbb
rolb
mov
mov
mov
inc
add
daa
lahf
push
in
testl
add
mov
push
adc
mov
add
std
pop
xchg
mov
and
mov
xor
mov
and
jae
cmp
out
push
dec
jp
stos
pop
pushf
dec
lcall
jl
cli
or
jecxz
sahf
outsl
mov
xchg
mov
lods
and
mov
imul
pop
cli
add
pop
or
dec
dec
and
xor
cmc
jecxz
add
iret
adc
enter
add
add
roll
roll
xor
cmp
add
dec
aad
ja
dec
jae
repz
add
and
pop
js
add
push
jge
loopne
mov
ret
add
mov
add
gs
ja
repnz
push
pop
test
aam
ret
mov
or
clc
or
push
out
sbb
add
pop
and
mov
push
push
in
add
xchg
loopne
mov
mov
cmpsb
sbb
mov
push
fdivp
dec
xor
add
and
xor
xor
stos
stos
mov
sbb
dec
aaa
xor
add
lcall
js
loope
movsl
jmp
xchg
push
adc
mov
lds
xor
mov
sub
adc
mov
and
mov
pop
repz
sti
jl
aas
fdivl
js
les
nop
add
sar
clc
ret
and
popf
ds
leave
addb
inc
test
and
sbb
aas
cmp
ljmp
jno
xchg
sbb
add
mov
test
mov
add
xor
or
add
sub
pop
push
add
xchg
sbb
push
pusha
add
dec
push
movsl
jb
mov
dec
ja
mov
cmp
jnp
cmp
add
mov
jbe
rolb
mov
add
add
add
mov
jae
dec
imul
push
lds
fsubrl
sbb
fcmovnbe
hlt
sbb
mov
cmp
lods
pop
jle
gs
popl
into
stc
push
add
dec
or
xchg
add
push
add
arpl
push
add
aaa
mov
add
add
or
push
xor
adc
stc
repnz
add
push
add
mov
cld
aas
push
stc
rolb
mov
mov
add
mov
dec
xchg
loope
adc
mov
mov
sbb
dec
and
xchg
movsl
out
adc
jns
out
mov
mull
and
mov
mov
add
dec
xor
mov
es
adc
mov
loope
pushf
adc
leave
jns
lret
fisttpll
cmc
ficompl
jns
jge
add
cmc
and
adcl
mov
add
sbb
jb
mov
sub
add
push
in
xchg
xchg
and
mov
test
or
adc
add
jne
inc
fwait
loope
add
fiadds
mov
xchg
mov
mov
add
mov
int
fadds
xchg
xchg
sahf
addb
in
push
aad
mov
stos
cmp
push
bound
mov
fistpl
call
add
push
cld
push
add
or
ds
sarl
mov
or
inc
fdivrp
mov
addr16
pusha
add
iret
mov
cs
add
fwait
push
std
inc
lgdtl
jns
push
pusha
add
add
pop
add
test
test
repz
bound
mov
mov
dec
inc
and
cmp
jle
cmp
ds
sbb
incb
push
cs
xor
arpl
test
lret
pop
mov
and
mov
cli
notl
push
dec
rcr
imul
add
mov
jnp
mov
lahf
mov
mov
jno
gs
out
lea
xor
mov
les
mov
pop
xor
add
mov
sub
imul
and
mov
inc
add
inc
mov
mov
add
mov
add
mov
adc
mov
add
mov
inc
lods
xchg
mov
and
dec
int3
mov
mov
aaa
pop
cmp
add
loope
addb
add
insb
daa
aaa
pop
int3
push
outsl
mov
and
pop
pop
and
jecxz
add
mov
mov
repnz
mov
add
push
add
into
cmc
cmp
cmp
fsubrs
add
mov
xlat
lods
cld
adc
pop
pop
je
add
sub
lea
mov
fcomip
out
jl
ljmp
repnz
cmp
mov
std
xchg
mov
add
mov
mov
enter
xchg
clc
xor
mov
sub
xor
mov
jmp
test
out
test
dec
imul
add
mov
mov
das
or
add
cltd
out
xchg
jle
test
pop
push
push
sub
and
clc
fstpl
or
test
stos
or
add
add
mov
inc
push
in
cmp
div
add
outsb
mov
mov
push
inc
add
add
sbb
in
add
and
mov
mov
push
add
mov
or
xlat
push
xchg
clc
mov
add
add
sub
lcall
dec
int
sahf
addb
dec
clc
fwait
inc
cmpsl
pop
cmpsb
push
add
push
sub
add
add
add
pop
xchg
pushf
pop
dec
xchg
cmc
jae
sbb
adc
add
mov
test
test
lcall
movntps
je
std
loopne
mov
test
add
ret
or
adc
push
dec
clc
ja
add
imul
aam
inc
mov
mov
cld
shld
fucomp
popf
adc
cmpsb
mov
mov
mov
mov
call
sti
xchg
cltd
das
leave
mov
mov
xchg
insb
or
adc
mov
outsl
add
xlat
adc
pusha
add
aas
arpl
insb
cmp
fs
mov
leave
bound
mov
add
add
outsl
rolb
sbb
aaa
fdivrs
add
inc
push
lahf
mov
add
jge
stos
incb
loope
add
mov
cltd
mov
mov
call
mov
pop
ss
add
inc
add
add
nop
add
pop
fwait
scas
sbb
aaa
mov
mov
imul
mov
dec
rcll
sbb
outsl
ret
scas
pop
jne
add
loope
mov
add
mov
dec
sub
mov
pop
mov
mov
jp
xchg
cmpsl
cmpsl
xchg
mov
cmc
add
add
add
inc
cs
mov
fnstsw
mov
inc
cwtl
fistps
or
test
test
scas
push
and
dec
adc
rolb
mov
lock
xchg
add
daa
cmp
pop
cwtl
and
int
add
idivl
insb
pop
out
or
pushf
mov
mov
mov
add
push
add
push
scas
loope
add
pop
mov
insl
inc
ja
int
and
sbb
mov
add
push
push
push
loop
mov
and
ss
and
mov
dec
les
rolb
push
fimull
outsb
and
lea
js
or
mov
ljmp
call
mov
pop
movsl
jg
pusha
add
inc
xchg
and
jns
insl
decb
add
test
mov
stc
sub
dec
cs
add
mov
movsb
test
mov
ds
mov
sub
sbb
xlat
ss
mov
cmp
and
loop
mov
mov
push
imul
cmp
push
sub
adc
dec
ss
add
xchg
cmp
cmp
subl
mov
or
push
sub
sar
int
add
ljmp
clc
clc
push
xor
sbb
inc
imul
stos
rolb
mov
rolb
mov
inc
stos
mov
add
pop
pop
xchg
xor
or
add
mov
scas
loop
mov
add
add
and
test
shlw
cmp
lods
repz
add
push
push
add
add
add
add
negb
pop
sub
xor
clc
dec
push
das
lahf
push
mull
xchg
in
outsl
js
fisubrs
or
pop
dec
xor
mov
pop
iret
scas
push
adc
mov
add
mov
lds
aaa
insl
pop
lahf
fsubl
repz
mov
xor
movsl
xchg
imul
add
in
mov
mov
mov
push
push
jb
mov
cmp
in
add
mov
std
pop
sub
lods
mov
sub
jecxz
out
icebp
lods
add
mov
leave
cmp
xchg
jge
mov
mov
add
inc
imul
in
cmp
cmp
add
add
aas
inc
mov
mov
xchg
enter
mov
mov
jg
push
jae
icebp
int3
add
mov
lds
inc
rcr
jb
mov
outsl
mov
add
mov
popa
xor
sahf
mov
imul
rolb
mov
sub
xchg
adc
mov
mov
add
mov
xor
jbe
push
adc
faddl
es
outsb
push
mov
pop
cmp
mov
hlt
imul
mov
add
cmpsb
fcmovnu
jecxz
or
lret
xor
add
cmp
mov
mov
sbb
dec
xchg
fnstsw
test
adc
add
filds
cmc
cmp
pop
xlat
mov
in
add
add
pop
sub
adcl
test
pop
adc
mov
adc
add
mov
mov
addl
ret
outsb
hlt
inc
in
data16
icebp
dec
test
lret
push
add
jmp
cmc
mov
xchg
stc
loopne
mov
add
push
add
inc
test
data16
mov
add
movsl
movsl
inc
add
cmc
sahf
lahf
mov
cs
inc
add
add
repz
insb
adc
mov
and
imul
inc
les
rcrl
ret
mov
loope
and
add
sti
ficoml
rolb
mov
pop
adc
add
mov
add
les
push
insl
roll
add
mov
or
adc
mov
add
mov
add
add
jbe
push
sub
lds
inc
std
pop
fs
and
out
aam
push
std
cli
rcrl
int3
es
leave
cmc
ja
mov
mov
cli
outsl
cmpsb
and
mov
add
mov
shrl
adc
mov
data16
mov
mov
mov
pop
cmp
mov
mov
jns
inc
add
add
outsl
and
mov
or
cmp
add
add
jno,pn
lahf
sub
fwait
cmp
or
add
push
add
mov
or
sub
aas
aam
inc
push
jecxz
lahf
popf
rcl
cmp
ret
jle
cwtl
lahf
mov
mov
jb
mov
movsl
repnz
int3
les
call
add
jl
lock
adc
sub
xchg
aas
sub
sbb
jbe
mov
mov
hlt
pusha
add
xor
mov
mov
mov
iret
int3
dec
sub
and
adc
xor
mov
mov
bound
mov
xor
mov
jg
xor
add
mov
lods
cmp
add
xchg
push
xchg
insb
adc
sub
add
nop
add
test
mov
mov
mov
and
cmpsl
mov
fistps
push
movb
push
mov
fidivl
mov
mov
aam
fmulp
xchg
and
mov
pop
push
sbb
stc
or
mov
add
jmp
jo
mov
mov
out
addb
ds
pop
mov
mov
out
addb
fsub
js
insl
enter
mov
push
repz
fwait
aam
out
lahf
popa
inc
add
inc
jno
in
imul
inc
adc
mov
mov
mov
pop
fsubs
fiadds
mov
out
leave
inc
les
idiv
je
push
add
cmp
jmp
cmpsb
add
mov
jns
push
push
outsl
daa
jge
push
hlt
aad
and
mov
add
and
adc
mov
xlat
test
aas
mov
add
loopne
mov
mov
jmp
dec
adc
sti
lock
mov
add
aaa
cmc
je
mov
pusha
add
jnp
pop
iret
inc
popa
dec
sub
mov
lret
aaa
and
add
jns
xor
mov
add
sbb
jo
mov
popf
mov
add
cli
jo
mov
ret
iret
outsl
push
sbb
in
inc
mov
cltd
cmp
cmp
add
call
push
in
notb
mov
rolb
mov
dec
cmp
mov
add
jae
add
lahf
imul
or
lock
add
add
mov
paddusw
loop
mov
add
sarl
push
aaa
add
fucom
add
fmulp
addl
lods
imul
imull
inc
sbb
pushf
mov
and
mov
out
sub
dec
cmp
mov
add
mov
add
popf
stos
mov
xchg
push
int
add
lods
int
mov
mov
mov
call
out
sub
add
das
inc
adc
insb
xchg
cmp
mov
cmp
mov
mov
add
test
mov
sub
cmpl
add
aam
dec
inc
icebp
sbb
sub
pop
lret
movsb
xorl
push
add
add
fwait
mov
mov
mov
cmp
add
lcall
inc
inc
bound
mov
xor
mov
pop
in
test
ret
add
mov
add
add
mov
frstor
xchg
pop
out
sbb
add
movsl
stos
scas
mov
jecxz
test
sub
push
xchg
addb
or
loop
mov
jp
push
add
dec
dec
mov
xor
sarl
mov
es
ja
or
addr16
mov
pop
mov
mov
add
or
out
cmp
push
ds
and
into
roll
add
js
xor
xchg
jbe
jle
jecxz
and
add
adc
scas
xchg
test
pop
push
cmp
call
je
add
pop
xchg
out
mov
mov
add
jge
push
ja
dec
loopne
mov
add
into
inc
adc
mov
cmc
xchg
xchg
inc
jb
mov
int
cmp
and
jp
mov
cmp
mov
or
arpl
les
mov
mov
adc
out
dec
xlat
lea
mov
add
movswl
xchg
push
inc
lahf
add
push
dec
adc
mov
mov
mov
sub
push
mov
add
mov
std
dec
and
mov
cmpsl
xchg
xchg
add
add
lret
aad
jg
inc
rolb
mov
mov
sbb
aaa
jecxz
add
adc
test
mov
cmp
inc
mov
hlt
cmc
or
mov
xor
pop
or
add
cmpsb
sbb
mov
add
xchg
add
dec
insl
sbb
mov
mov
test
mov
add
xor
pop
xchg
add
jae
inc
rolb
mov
arpl
dec
iret
sbb
pusha
add
enter
ret
jbe
addb
mov
sub
add
loopne
mov
add
cltd
dec
scas
and
mov
sub
sbb
add
sub
cld
sbb
rolb
clc
mov
clc
int
or
sti
xchg
push
pop
psrld
mov
loopne
mov
add
jecxz
cmp
dec
mov
mov
push
inc
add
cmp
pop
jl
jmp
lret
and
in
test
sti
imul
cltd
daa
push
add
add
adc
mov
cwtl
cmp
pop
je
inc
xchg
xlat
cmp
sbb
inc
fs
pop
ljmp
mov
jle
mov
std
ja
lea
add
add
cmp
cmc
ss
jl
add
test
shrl
inc
je
bound
mov
shll
mov
mov
adc
mov
xchg
push
add
inc
add
mov
add
xchg
shrl
and
movsb
in
rolb
rolb
dec
and
popl
mov
rolb
gs
mov
sbb
loopne
mov
xchg
mov
mov
add
add
add
