das
xlat
enter
add
out
data16
adc
ja
dec
out
not
shll
mov
sub
mov
add
mov
pop
adc
mov
add
repz
cmp
mov
xor
push
idivb
dec
repz
cmpsb
lahf
pusha
add
rolb
pop
push
mov
call
and
push
dec
iret
mov
mov
fs
stc
lret
mov
bound
jno
adc
std
and
add
test
fcoml
idivb
or
dec
insb
pop
add
imul
popf
repnz
addb
pop
cwtl
roll
sub
mov
rclb
sub
push
jge
mov
aas
rol
add
adc
inc
ds
fisttpll
jo
push
daa
inc
add
cmp
mov
stc
pop
mov
dec
xorl
pop
push
xchg
mov
mov
sbb
add
add
xor
mov
inc
add
pop
fs
add
movsb
adc
orl
stos
inc
adc
cld
mov
pop
sbb
in
js
dec
gs
mov
cmp
jnp
loop
bound
mov
pop
inc
add
mov
mov
test
pushf
fmuls
lods
adc
aad
cld
pop
push
dec
add
fadd
add
dec
std
fcompl
add
lock
push
cs
mov
xadd
lea
jle
out
mov
inc
jge
les
fwait
xchg
shl
fnstcw
leave
fnstsw
add
aaa
push
fs
add
js
mov
cwtl
stos
fildl
mov
xchg
bnd
hlt
sub
add
mov
inc
adc
inc
add
pop
hlt
push
mov
test
sbb
loope
fldt
add
pop
lret
fdivrs
xchg
lret
pop
aad
add
mov
es
jno
jg
icebp
in
imulb
jmp
push
jp
push
aad
add
hlt
stc
mov
fsubrs
mov
pusha
add
pusha
add
jo
popf
adc
stos
jmp
stos
mov
inc
mov
aas
cmp
sbbl
lea
mov
add
dec
out
daa
pop
std
lret
test
mov
sbb
jne
xchg
mov
lret
mov
add
cmpsl
sahf
cmp
inc
add
arpl
push
push
std
in
movsb
loopne
xor
mov
mov
xchg
gs
popf
or
add
push
iret
mov
jb
mov
sbb
movb
add
out
cmp
insl
pop
add
jge
add
das
cmp
xchg
xchg
scas
leave
sbb
scas
call
mov
cmpsb
es
fldenv
cmp
jecxz
mov
aaa
loope
aaa
sub
add
xchg
cmp
out
and
movb
jno
add
cli
add
mov
add
cmp
xchg
push
stos
popa
mov
or
push
add
add
add
mov
hlt
lret
sbb
adc
or
aaa
push
jl
hlt
addb
call
add
movsb
mov
in
push
mov
movsl
popf
fsubr
jne
inc
mov
movsl
fnsave
jl
jg
negb
fucomip
mov
jo
add
mov
lock
addb
or
mov
aam
ja
lret
aaa
sbb
cwtl
ret
jl
dec
fmul
popa
es
inc
mulb
xchg
mov
out
cwtl
clc
int
inc
add
movsl
jl
jnp
inc
add
mov
and
sub
xor
inc
add
cld
les
out
test
sahf
xor
add
push
xor
test
push
test
or
cmp
fs
mov
das
xchg
lcall
mov
xor
std
lcall
pop
shll
fbstp
pop
mov
jp
in
mov
mov
loop
add
inc
add
outsb
je
int
lcall
popa
push
sbb
out
mov
popa
mov
fcomps
imul
bound
addb
push
pop
cmp
mov
mov
je
mov
popf
add
es
adc
test
lret
jge
add
mov
xor
push
add
mov
mov
sbb
hlt
adc
pushf
pop
scas
or
xlat
ret
xchg
xchg
rolb
repz
add
mov
clc
std
mov
mov
sbb
aam
xchg
dec
test
pop
adc
inc
add
sub
mov
jmp
popa
fs
mov
repz
add
clc
lret
cmc
sub
pop
mov
lret
aas
mov
scas
int3
mov
daa
push
push
add
repz
popf
loop
add
add
xchg
pslld
pop
in
adc
add
push
xor
lds
lods
test
sbb
sub
push
pop
int
pop
inc
test
add
lock
cmpsl
cmp
in
mov
daa
push
ljmp
mov
mov
inc
add
loope
iret
fcoml
mov
and
mov
dec
pop
in
js
adc
call
addb
movb
fwait
addb
jns
add
jae
add
cmpsl
mov
ret
push
mov
xchg
bound
rolb
fidivs
test
arpl
in
les
add
add
ja
inc
xor
test
and
mov
add
dec
cmpsb
fmul
sub
dec
ds
in
and
addb
push
adc
rclb
lahf
pop
sbb
push
rcl
add
pop
mov
xor
mov
je
adc
rol
mov
jb
jle
add
into
xchg
jae
jp
nop
divb
bound
mov
push
add
outsb
ficomps
hlt
data16
mov
ret
scas
xchg
add
mov
pop
test
imul
repz
cltd
rolb
cmp
icebp
or
push
add
gs
pop
addb
pushf
jecxz
pop
and
push
es
scas
mov
xor
out
sbb
add
add
adc
popf
movsb
divb
test
jnp
mov
arpl
add
dec
pushl
adc
in
add
ja
idiv
push
cmp
stos
inc
add
lretw
sub
aaa
xchg
mov
xchg
adc
cwtl
jns
mov
lock
mov
mov
pop
cmp
sub
push
xchg
xlat
jle
loope
add
notb
lds
lret
dec
ret
push
mov
adc
cwtl
cmp
add
add
div
aam
inc
add
pop
in
adc
lods
movsb
mov
cwtl
add
inc
sbb
jb
sub
mov
dec
cltd
shrb
les
sub
rolb
or
jl
xchg
jae
pop
lret
hlt
inc
add
inc
add
mov
pushf
mov
addb
add
add
sub
or
push
add
int3
sbb
jge
push
add
lock
lcall
test
pop
jo
mov
cli
jno
or
push
and
add
in
out
stos
add
outsl
and
mov
test
and
les
xchg
ret
movb
loope
scas
xchg
repz
clc
icebp
out
pusha
add
mov
pop
adc
int3
sub
pop
push
or
pop
xor
pop
push
jb
add
add
sub
hlt
fimull
mov
dec
mov
pop
sub
jb
scas
popa
movsb
pop
call
sarl
jl
pop
cld
xor
inc
repnz
xchg
mov
enter
pushf
andl
push
xchg
mov
xchg
jg
mov
aas
aas
fdivs
fwait
push
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
pop
add
mov
cs
push
push
lret
jmp
add
add
aas
stos
lret
mov
sbb
jnp
out
jecxz
scas
ret
jg
js
mov
add
imul
addr16
in
add
inc
fnstenv
cld
xchg
cmp
xor
ficoms
hlt
lea
cmpsl
and
inc
outsl
dec
lods
popf
daa
pop
outsb
dec
cmp
daa
jb
xchg
cmpsl
and
or
xor
mov
imul
mov
adc
push
rcrb
mov
sbb
push
jb
add
rolb
mov
push
mov
mov
push
mov
and
stos
sub
fmul
xchg
ret
cs
add
daa
mov
lea
cmp
xchg
fidivrs
dec
mov
xchg
nop
cwtl
add
int
nop
mov
cmpsl
jne
jnp
xorl
mov
add
lods
loope
stc
repz
cwtl
mov
inc
rcll
cli
lods
out
mov
or
and
or
push
test
in
popf
fstp
out
dec
stc
mov
scas
or
sub
out
mov
lds
pop
cltd
testb
cli
mov
add
fdivrl
add
mov
mov
addb
and
shrl
push
mov
addb
jl
outsl
dec
in
mov
cwtl
sbb
scas
cmp
shrl
mov
add
push
lock
add
rcrl
inc
add
sub
lds
pop
insb
inc
add
mov
push
outsl
pop
sub
and
daa
push
cs
and
or
xchg
xchg
xchg
xor
xchg
mov
dec
cltd
fimuls
add
fdiv
push
add
push
add
cmp
jb
cmc
dec
aam
testb
ljmp
mov
roll
jns
or
out
rcrl
adc
cs
pushf
adc
xor
ljmp
add
and
adc
xor
andl
adc
fmulp
xchg
inc
scas
sbb
outsl
cmp
xor
sub
sub
repz
insw
test
push
add
addb
cmp
sbb
add
or
mov
push
shrl
fs
cmp
daa
xor
fisttps
adc
out
add
push
loope
fcomps
xchg
shlb
lret
sbb
fistps
xchg
push
lods
in
das
dec
pop
dec
es
cli
ret
andl
cmc
xchg
imul
mov
add
cmp
inc
add
mov
add
out
cs
jmp
addb
jne
aad
fdiv
pop
push
mov
push
stc
stos
or
insl
jge
push
test
iret
out
xor
cwtl
adc
int3
xor
sbb
test
inc
add
add
out
mov
dec
mov
out
and
push
xor
push
je
loopne
add
mov
insb
dec
jae
js
shrl
mov
mov
test
mov
add
jmp
sub
adc
jmp
mov
cli
pop
mov
mov
loop
add
dec
sub
fwait
pop
pop
pop
fiaddl
cmp
or
mov
loop
add
pusha
add
addb
test
dec
add
lods
pop
inc
add
xchg
pop
inc
add
fcmovu
or
dec
ret
add
fidivs
loop
inc
push
int
das
cli
xchg
int
jle
mov
out
lods
pusha
add
dec
sbb
out
and
testl
leave
in
pop
dec
lahf
mov
add
cmp
pop
out
jno
xchg
cmp
add
jbe
test
popa
incl
jb
add
add
fidivrs
sar
scas
lret
fidivs
and
push
pop
adc
into
lret
or
inc
add
add
jl
sbb
jle
jmp
cmp
inc
mov
mov
stos
addr16
pop
mov
add
lahf
and
sbb
mov
xor
imul
add
sub
jmp
shl
movl
call
sub
pop
pop
sbb
pop
sbb
and
add
cmpsl
xor
mov
adc
mov
cmp
add
int
sti
sub
fwait
jmp
aad
outsl
adc
bound
jns
mov
les
jge
and
imul
sbb
es
daa
inc
mov
push
push
fsub
cltd
sub
and
pop
mov
add
mov
push
outsb
push
push
ret
std
test
out
lea
std
out
aaa
xchg
xor
ljmp
cltd
cltd
call
cmp
jg
jns
pop
sub
popa
xor
push
inc
xor
faddl
push
dec
out
xchg
call
cmp
rcll
outsb
jge
addb
jmp
cmpsl
mov
daa
nop
jle
inc
mov
dec
xchg
sub
lds
xchg
sbb
test
mov
lret
xor
sub
add
xchg
bound
sub
sub
cmp
repnz
paddq
inc
add
add
sbb
or
xchg
mov
xchg
arpl
mov
jmp
and
sub
push
inc
add
inc
dec
cli
fs
mov
add
push
pop
fidivrl
lods
dec
int3
ljmp
xlat
cld
jnp
add
daa
sbb
cltd
pop
loop
pop
loop
jo
popf
pop
cwtl
dec
xor
add
iret
int
add
hlt
xchg
pop
push
xor
dec
pop
ja
add
and
int3
xlat
imul
loopne
aaa
pop
jnp
and
and
push
and
jp
add
test
push
pop
inc
add
or
cltd
out
and
out
xor
add
jl
jg
cmp
add
push
cltd
sbb
sbb
push
add
add
adc
ljmp
ljmp
cmp
lods
dec
clc
in
pushf
dec
int3
repz
scas
das
sbb
stos
pushf
fldt
test
insb
mov
outsb
xlat
sbb
iret
dec
cmpsl
mov
add
popf
into
dec
or
dec
or
add
imul
outsb
push
pop
iret
mov
shlb
scas
movb
jb
sub
or
add
movsl
dec
push
popa
push
add
cmpsb
mov
mov
movb
pop
add
cmc
sarl
add
enter
movb
inc
add
jp
jne
adc
stos
jp
mov
insl
les
rolb
imul
ret
add
insl
shrl
push
add
pop
addb
sub
inc
inc
cmc
addb
sbb
push
lahf
out
je
hlt
push
addb
in
arpl
dec
xchg
cld
or
add
lock
mov
ja
je
xchg
movsl
addl
nop
aas
inc
add
ja
cmpsb
mov
pop
jg
dec
mov
jle
daa
sub
add
pop
out
dec
into
or
adc
inc
add
jecxz
aad
rolb
mov
sub
mov
in
test
cmp
js
add
std
xchg
sbb
lahf
lock
fnstsw
ret
bound
into
fdiv
bound
pop
adc
and
mov
adc
sub
cmp
adc
or
scas
inc
pop
add
es
imul
adc
jne
ret
aaa
pop
add
cs
add
or
cli
cmp
mov
dec
adc
cmp
mov
cmpsl
rol
add
pop
sub
lret
enter
sub
mov
mov
addr16
negb
ret
lcall
add
cmp
cli
enter
xchg
pop
xlat
or
imul
sub
adc
jns
addr16
scas
xchg
sti
inc
push
dec
pop
mov
xchg
mull
adc
push
push
xor
dec
ja
add
sub
leave
push
mov
mov
lret
mov
push
add
jo
pop
jb
inc
add
in
test
test
dec
sub
test
mov
mov
push
add
jl
add
add
pop
in
push
ds
pop
aam
daa
sbb
das
les
fmul
push
or
ja
xchg
jnp
add
cmp
cmpsl
push
lds
or
cmp
add
push
add
scas
stos
push
test
sub
sbb
mov
mov
ss
ret
dec
mov
mov
push
addr16
pop
call
sbb
pop
lds
inc
add
jb
cmp
xchg
inc
add
clc
jne
pop
add
add
xor
pop
dec
inc
add
addb
aam
loop
mov
lret
inc
iret
mov
add
or
les
dec
incb
cmpsl
xchg
push
or
int3
inc
add
fstpt
xlat
clc
aaa
cld
leave
adc
lods
mov
push
in
or
loop
mov
sbb
mov
push
and
push
add
fldl
aas
ljmp
ljmp
loopne
lds
pop
mov
push
push
fcoml
pushf
std
mov
or
mov
std
push
pop
mov
aad
or
sbb
mov
push
imul
push
lds
jne
aad
testl
cmp
movsb
mov
jp
pusha
add
xor
mov
add
pushf
fdivrp
jecxz
add
push
add
mov
mov
cmp
xorl
aaa
test
sbb
popa
ret
fisubs
add
stc
dec
push
add
into
pop
mov
add
jmp
addr16
mov
pop
bound
adc
fildll
rcrl
mov
stc
mov
jl
mov
das
mov
fcoms
mov
push
and
outsl
push
mov
call
addb
jp
add
cld
sub
sbb
dec
sub
xor
adc
ja
mov
and
sub
cmp
jns
jg
sbbl
les
nop
sub
mov
sub
add
cmc
xor
mov
arpl
jbe
mov
repnz
lods
sub
mov
mov
lds
jl
lock
add
and
mov
mov
add
sub
fstl
adc
xor
push
jge
inc
add
hlt
js
outsb
in
shll
in
shll
sub
add
mov
cmp
out
hlt
pop
mov
and
cld
rep
movsl
ljmp
sarb
pop
out
pop
testl
loopne
daa
leave
xchg
test
arpl
loopne
adc
ljmp
leave
movb
loope
and
pusha
add
addb
scas
hlt
adc
sub
mov
cmp
out
or
add
call
lret
jne
rcll
pop
sub
mov
push
mov
iret
ret
sub
in
and
pop
inc
test
mov
addb
scas
sti
imul
add
push
sbb
inc
add
and
ja
push
push
aaa
stc
les
arpl
les
aam
push
push
sbb
inc
add
stos
ds
xor
insl
jmp
xchg
jecxz
add
and
pusha
add
cwtl
stc
push
add
jb
jnp
xor
add
ret
dec
xor
lds
aad
shrl
fsubs
idivl
bound
xchg
mov
xchg
addb
or
push
or
sub
push
and
xchg
add
inc
add
add
jo
and
or
or
repnz
adc
aad
mov
dec
add
fisubrl
les
ficompl
push
idiv
mov
stc
enter
jne
inc
ret
add
mov
hlt
sbb
add
mov
jl
hlt
mov
xor
add
testl
stc
outsb
gs
and
mov
ret
xchg
pop
test
jbe
xor
dec
xlat
leave
cmp
lds
dec
imul
loope
dec
stos
movsl
mov
inc
add
sub
lock
xor
mov
add
psrlw
loopne
lds
cmp
adc
enter
and
mov
xchg
add
jns
addb
mov
adc
bound
xor
jmp
mov
inc
fcmovu
aaa
js
or
lods
sbb
scas
mov
lock
aam
sbbl
into
pop
dec
lds
scas
xchg
sub
push
sbb
loope
out
not
mov
mov
sarl
xor
in
idivl
cmp
fsubl
xchg
sti
xlat
test
xchg
jnp
sbb
xor
sub
mov
push
add
pop
test
add
and
add
lret
ljmp
add
inc
mov
sbb
push
and
adc
lahf
cmp
enter
adc
aad
xchg
data16
inc
add
jmp
or
lret
jne
and
mov
aas
inc
xor
bound
pop
das
int
lock
leave
test
pop
sbb
rolb
dec
sbb
insb
lock
lret
add
adc
mov
add
inc
add
out
dec
call
sub
test
add
add
mov
pop
out
add
std
popf
xor
mov
xchg
sub
loopne
add
fwait
iret
ljmp
test
int3
ss
xor
add
mov
sahf
add
icebp
pop
fiadds
mov
fistps
inc
dec
push
in
xor
xchg
clc
mov
out
je
add
es
in
ror
lods
sub
push
dec
iret
mov
add
push
outsl
push
sarb
imul
sbb
fwait
add
scas
enter
mov
bound
jmp
inc
add
inc
sahf
add
mov
push
pop
sbb
hlt
push
arpl
rol
cmpsl
ss
jle
addb
push
mov
xchg
subl
pusha
add
es
lods
xor
loopne
daa
add
stc
xchg
pop
dec
push
mov
dec
sbb
rcrl
adc
jns
pop
scas
push
stos
loopne
dec
inc
add
out
out
push
adc
add
mov
add
add
or
dec
imul
xchg
stos
and
jp
add
push
pop
xchg
push
or
outsl
icebp
ja
xchg
sbb
arpl
add
inc
add
mov
cmp
test
lock
outsl
pop
testl
lret
add
or
mov
idivb
cwtl
sbb
cltd
jp
xchg
mov
xchg
popf
push
scas
and
push
imul
push
stos
push
or
dec
mov
fcoml
scas
mov
jne
mov
cmp
add
imul
mov
push
jmp
mov
pop
push
ljmp
cmc
mov
add
cmc
loope
jge
je
add
jb
pop
sbb
fidivrl
dec
push
in
push
popa
push
add
xor
int3
jo
adc
cmp
or
and
mov
jmp
dec
test
add
imul
mov
add
add
jns
fisubl
popa
sub
cmp
add
add
sub
fisttps
movsb
xor
dec
xor
addb
xlat
mov
mov
fsubrs
pop
cmp
nop
mov
or
enter
sbb
sub
xchg
fs
in
sbb
pop
out
add
adc
mov
cs
movsb
rolb
call
sub
xorl
jae
in
jge
jp
and
adc
out
int
add
lock
or
push
pop
sti
sbb
xor
add
mov
jmp
ret
inc
out
stos
in
pop
adc
js
mov
xor
scas
ret
movb
sbb
aaa
addb
add
dec
in
lret
cli
mov
push
inc
mov
and
adc
add
jnp
lret
push
inc
add
rorb
push
sbb
lret
iret
add
imul
inc
add
and
add
sbb
aas
add
cli
imul
push
pop
rorl
sbb
pop
lods
mov
pop
aad
fimull
cmc
out
scas
push
mov
divb
add
xlat
mov
jae
imul
imul
adc
stc
adc
jno
push
xor
push
jl
popa
ja
mov
aas
repz
dec
fs
mov
mov
add
rcrl
sarl
and
int3
in
jg
lea
sub
stos
inc
add
inc
lock
push
jbe
mov
or
mov
sub
add
ja
push
pop
repnz
pop
pop
jbe
cmp
add
mov
add
mov
leave
ret
lods
adc
pop
sub
filds
xchg
stc
bound
and
push
jmp
nop
dec
and
add
mov
mov
je
out
stc
shlb
fdivrs
add
push
aas
push
mov
aas
pusha
add
pop
sbb
adc
jl
jp
sbb
cli
or
adc
xor
add
xchg
movsb
inc
add
mov
mov
add
add
insl
out
inc
sbb
mov
mov
mov
add
dec
or
sub
scas
push
jge
test
out
mov
sub
jns
fcomp
fisttps
imul
aam
scas
lahf
push
sbb
or
movsl
adc
mov
cltd
mov
cmp
add
loopne
jb
imul
not
cmp
lret
mov
mov
mov
adc
loop
out
mov
mov
js
add
test
jo
mov
mov
jns
cmp
xchg
loop
inc
test
jg
add
jne
popf
sbb
inc
add
cs
mov
or
sbb
sahf
adc
popa
jbe
out
push
xchg
add
fisubrs
xchg
fwait
or
imulb
repnz
aad
pushf
sti
scas
sti
inc
xor
sbb
jbe
sti
push
mov
sbb
and
aaa
jmp
cs
rolb
mov
into
lahf
mov
repz
mov
in
idivl
mov
repz
xchg
popa
gs
jle
std
add
or
sub
rolb
mov
or
aas
movsb
cmp
add
sqrtps
fadd
inc
jmp
xlat
mov
aam
jns
in
clc
js
cwtl
aam
jecxz
lret
lret
mov
add
push
push
aad
jne
push
lret
mov
lea
cmp
into
pop
xchg
cmp
movsl
lods
jno
jmp
scas
dec
mov
add
pusha
add
xor
lock
fwait
push
addb
xor
sahf
fildll
div
mov
adc
dec
ror
push
repnz
cli
inc
add
jp
mov
add
and
shrl
xchg
enter
mov
push
xor
ds
cs
pop
add
adc
push
lret
mov
in
push
movb
sub
sbb
add
iret
addr16
and
inc
nop
lcall
pop
test
insb
sub
insl
add
bound
mov
sbb
fwait
adc
pop
mov
outsl
jp
test
push
mov
icebp
mov
mov
sbb
nop
les
jg
mov
enter
dec
xchg
cmpsb
xor
or
fcoml
cld
cmp
fadd
or
add
loope
roll
notb
pop
sbb
sahf
pop
sbb
pop
push
loopne
cmp
lods
mov
adc
addb
and
adc
out
js
mov
mov
out
fcmovnb
in
rolb
lret
aam
xlat
sub
das
aad
mov
inc
add
mov
pop
dec
xchg
imul
test
orl
add
outsb
cmp
mov
addr16
pop
cmp
and
cmp
xor
inc
add
arpl
add
scas
movsb
imul
mulb
add
cmpsb
rolb
add
inc
xchg
scas
push
and
imul
jl
jno
pop
push
mov
jno
add
xchg
mov
add
jnp
leave
jecxz
test
jo
lods
bound
inc
add
push
add
push
pop
lahf
movsb
jne
add
jbe
cmc
mov
mov
or
lock
repnz
lcall
fists
jecxz
add
xor
dec
repnz
sti
lds
add
and
js
std
mov
loopne
add
or
dec
js
fnstenv
pushf
pop
and
mov
insl
fisubl
clc
test
add
and
add
das
xchg
inc
add
les
push
adc
mov
ja
xchg
stc
fs
stc
lret
push
add
sarl
dec
rorb
cltd
pop
and
clc
jno
test
jnp
sub
jg
pop
push
shll
or
pop
or
pop
mov
pop
xchg
and
inc
add
xchg
or
mov
test
clc
or
dec
iret
leave
sbb
mov
in
pop
cmp
jns
movsl
cmpsl
fimull
sub
add
add
mov
adc
nop
pop
xchg
jge
repz
and
outsb
mov
out
pop
out
dec
push
addb
adc
sbb
jp
mov
out
pop
pop
stc
fmuls
or
and
fnstsw
test
es
dec
inc
pop
mov
jne
push
and
xor
and
std
aaa
imul
cmp
leave
mov
cmp
gs
lret
xor
fcomp
out
pop
xchg
mov
add
adc
xor
mov
imul
fxch
dec
dec
icebp
jle
lds
and
in
fcmovbe
sbb
stos
inc
add
cmp
imul
popf
jl
push
and
pop
out
and
das
mov
test
add
fidivrl
xor
movsb
jl
xchg
test
mov
pop
inc
cld
sti
movsb
and
pop
push
in
in
pop
aas
pop
ret
xor
outsb
xor
cld
jb
add
fs
aaa
add
sub
cwtl
cmp
js
in
jne
cs
lahf
in
movb
jns
push
inc
add
loopne
push
cwtl
addr16
pop
add
pop
stc
push
sub
sub
movb
fdiv
cmp
jnp
jg
pop
lret
xchg
lahf
notb
xchg
jmp
mov
pop
mov
fcoms
push
ja
xor
mov
mov
add
shr
pop
pushl
imul
mov
shrl
jp
mov
popf
in
rclb
xchg
adc
mov
lea
enter
mov
fs
push
add
inc
add
ss
hlt
and
into
repnz
jmp
push
nop
pusha
add
jg
sar
inc
add
dec
movsb
xchg
pop
xor
add
add
inc
add
shll
push
pop
push
sbb
mov
ja
add
and
rorb
lea
jnp
jg
push
fnsave
subl
in
or
inc
repz
sti
mov
mov
jne
add
sbb
sbb
iret
inc
repnz
test
cmp
sbb
dec
lret
repz
pop
sahf
je
jnp
scas
adc
daa
lret
adc
add
add
cmpsl
jmp
dec
stos
cltd
incl
loop
add
xlat
cs
xor
pop
jne
add
stos
ficoms
inc
or
sbb
sti
pushf
pop
outsb
paddb
inc
or
gs
inc
jp
gs
ss
jne
sub
fucom
cmc
inc
add
rolb
rolb
xchg
enter
cmp
add
mov
mov
testl
mov
les
pop
out
mov
adc
aaa
cs
dec
jg
push
inc
add
insb
loop
addb
pop
jae
aaa
cmpl
vcvtsd2ss
add
imul
xor
sub
add
jo
shll
dec
lcall
fsubp
jge
cli
rolb
movb
jmp
add
icebp
jbe
cmp
ret
mov
mov
add
addb
loope
stc
imul
aam
div
aam
imul
push
dec
inc
stc
mov
fsubs
cmpsl
mov
sbb
add
fists
dec
scas
and
cmp
rolb
lock
pusha
add
out
gs
ret
nop
int
in
arpl
jge
or
jne
push
xor
sub
and
and
popa
div
mov
mov
scas
shll
pop
jno
add
mov
mov
pop
aas
hlt
je
jle
jmp
flds
add
sub
imul
adc
xchg
fsubrs
imul
sahf
adc
aam
or
xor
pop
inc
add
loope
into
adc
jbe
loope
and
cltd
add
dec
xor
add
adc
add
test
xchg
mov
cmovs
test
imul
int3
aad
out
xchg
je
scas
iret
add
int3
clc
icebp
dec
jnp
add
fwait
cmpsb
inc
and
mov
xchg
and
jecxz
insb
imul
test
xor
stos
rcrl
dec
cltd
pusha
add
fnstsw
add
cmp
mov
xchg
pop
add
ficompl
mov
das
and
loop
bound
sbb
stc
mov
cmp
mov
add
mov
add
push
xlat
adc
mov
inc
add
push
dec
inc
add
dec
push
imul
pop
lods
add
jle
mov
mov
es
inc
add
nop
lods
inc
hlt
in
roll
divb
sbb
adc
xchg
aas
popf
stos
xor
add
or
icebp
pop
mov
xor
and
add
pop
movsb
cwtl
fistps
jnp
xchg
push
mov
cmp
lods
sahf
enter
add
fistl
ds
push
mov
add
fstpt
loope
inc
or
cmc
pop
inc
add
mov
dec
loope
mov
sub
jle
add
iret
pop
call
cwtl
fidivs
pop
mov
and
cltd
mov
or
jl
lods
dec
mov
add
stos
jp
mov
testb
nop
cld
insb
inc
add
add
xchg
inc
adc
pop
call
lea
or
xor
sub
dec
xlat
pop
add
mov
mov
add
call
in
mov
test
int3
mov
imul
xchg
jecxz
inc
or
popf
cltd
rolb
add
or
sbb
lcall
loopne
les
gs
out
imul
aas
loopne
into
gs
and
cmpsb
das
cmp
addr16
popf
and
daa
dec
in
xchg
popa
or
mov
fldl
adc
rcr
cwtl
roll
pop
les
cmpl
pusha
add
xor
add
je
orl
lds
dec
rolb
lahf
xchg
mov
push
stos
xor
adc
add
push
and
push
addb
dec
out
push
addl
add
fidivrl
lahf
add
int
pop
xchg
jb
jae
cmpsl
ret
imul
stos
cmp
add
dec
ret
add
or
ljmp
inc
les
mov
jbe
add
add
adc
xor
add
inc
add
lcall
and
fsts
inc
add
movl
lock
xor
dec
dec
aam
lds
daa
jmp
loopne
and
cwtl
fwait
add
popf
insl
adc
addl
inc
add
cmpsb
inc
push
lea
and
addb
repnz
jle
add
sub
pusha
add
add
pop
sbb
lock
imul
cmp
add
pop
imul
dec
ljmp
push
add
setae
add
pop
or
movb
pop
add
push
add
sub
mov
sub
stos
mov
dec
inc
shl
jge
lds
and
mov
movb
aaa
jne
rclb
add
mov
lret
push
cli
fwait
outsl
repnz
imul
fsubp
imul
gs
or
enter
lret
clc
lahf
popa
pop
std
test
adc
mov
push
pop
sbb
mov
movb
mov
jno
add
mov
les
ja
decl
int3
push
sub
jb
cmpl
bound
mov
js
out
xor
jbe
out
sbb
sub
lcall
inc
add
or
xor
dec
push
push
inc
add
enter
popf
fistpll
in
loopne
addb
bound
and
or
inc
pop
push
lret
push
and
rcrl
add
pop
ret
jo
xchg
mov
xor
gs
pusha
add
loopne
xchg
addr16
insl
cli
or
aam
mov
inc
add
mov
push
fwait
int3
aas
mov
push
scas
popa
movb
xor
popf
add
ret
imul
fisubl
mov
and
inc
add
rcrl
add
aaa
std
sub
or
gs
pop
adc
adc
pop
imul
arpl
or
es
push
jnp
adc
movb
stos
sbb
add
lods
push
or
pop
orl
out
lea
test
addl
adc
mov
lds
fsubrl
enter
xlat
aaa
adc
mov
mull
add
lahf
mov
jb
and
lret
in
mov
pop
repz
popa
int
jecxz
pop
sbb
into
pop
xchg
inc
add
add
sbb
lds
push
mov
fucomp
aaa
mov
add
fmuls
movb
pusha
add
cmp
pusha
add
mov
add
outsb
sbb
inc
sub
and
addb
sahf
int3
movsb
outsl
mov
push
or
test
insl
lock
jne
repnz
xor
popa
ret
mov
add
add
loop
mov
add
test
mov
test
jbe
add
movsl
imul
xchg
fsts
clc
lcall
mov
jecxz
lds
sbb
sbb
aam
add
add
mov
lock
mov
adc
mov
add
cmp
arpl
xchg
das
mov
stc
fisubrs
inc
add
and
rcr
add
mov
jb
enter
ss
jecxz
pusha
add
in
pop
adc
push
xchg
or
jno
xor
or
neg
add
sub
push
movsb
sub
xchg
and
stos
sbb
mov
add
sarl
cltd
jnp
ja
sti
cmpsb
nop
fwait
ret
add
aas
loop
inc
mov
es
out
cmp
stos
mov
inc
scas
push
leave
cs
jmp
mov
pop
push
mov
push
aaa
js
negl
push
push
jmp
xchg
mov
and
sub
test
mov
in
mov
scas
aaa
jle
jbe
xchg
mov
out
and
iret
cltd
or
mov
sub
ret
sub
sub
push
lcall
add
insl
mov
add
add
js
aaa
scas
and
or
sbb
adc
push
xchg
adc
adc
daa
pop
jmp
xchg
mulb
je
aas
jecxz
insl
ret
xor
cmpsb
xchg
setb
push
bound
dec
ds
fcmovnb
sub
xchg
pop
addb
data16
push
lcall
in
push
lret
lea
scas
jns
ficomps
push
xchg
lret
fsubs
dec
cmpsl
add
xchg
int
sbb
dec
jp
dec
pushf
fsubr
sbb
sub
sbb
add
or
mov
mov
in
adc
in
cmp
and
mov
inc
add
mov
xchg
les
leave
mov
xchg
mov
sub
cmp
inc
jg
jbe
shrb
push
inc
in
leave
sub
and
xchg
inc
mov
add
jl
fsubl
mov
mov
add
mov
insl
dec
xchg
jns
add
addb
shrb
or
sahf
inc
add
jns
xchg
aaa
adc
add
sbb
inc
add
add
rcl
inc
js
xchg
xchg
push
shll
xchg
shll
shl
jl
jno
jmp
jnp
push
test
mov
add
sub
jb
es
add
mov
inc
and
fisttpl
pop
lret
outsb
out
xor
rolb
sti
cmp
jae
add
cmp
push
and
popf
pop
mov
test
inc
fiadds
dec
and
xor
jns
inc
sub
add
dec
out
mov
push
add
add
or
lods
rolb
xchg
lods
adc
cltd
loop
mov
mov
ljmp
add
sub
mov
icebp
sbb
fdivrs
loope
mov
into
mov
cmpsl
je
mov
in
sbb
stos
jne
push
enter
jmp
les
fdivrl
mov
or
vcvtdq2ps
jmp
sbb
mov
inc
add
cmpsl
es
hlt
jmp
adc
ljmp
add
sub
lcall
mov
in
les
push
lods
push
jl
sub
add
in
repnz
push
ss
mov
pop
xchg
mov
loope
xorl
xor
into
adc
test
and
cmp
cwtl
jae
es
jle
jmp
inc
ja
pop
popa
inc
pop
out
data16
push
add
mov
inc
add
xchg
add
and
or
divb
jmp
lcall
sets
fsubs
push
mov
adc
pop
inc
fsub
pushl
ja
xchg
push
mulb
ds
xchg
add
jno
stos
inc
add
test
add
jo
add
ret
push
test
iret
sti
inc
add
mov
sbb
repz
imul
movl
aad
mov
das
push
cmp
imul
add
fstpl
push
push
xchg
push
xchg
sbb
pop
into
mov
mov
mov
ss
aas
adc
dec
test
repz
add
add
clc
push
movsb
out
xchg
mov
sub
cmp
add
fsubl
cmp
mov
int
push
adc
pop
jl
imul
mov
ja
sarl
cld
mov
push
add
ss
popf
in
scas
fcoml
add
in
mov
push
mov
add
or
push
in
dec
add
push
shll
ret
and
stc
cli
lret
mov
jp
cltd
sub
nop
lods
or
add
mov
cs
repnz
cmp
add
jb
test
in
dec
test
andl
cmp
xor
nop
pop
notl
pop
mov
js
das
push
and
nop
xchg
test
add
cmp
aas
mov
sbb
jne
sub
mov
mov
add
daa
push
dec
loopne
rol
add
mov
add
push
or
loope
out
std
jmp
add
mov
icebp
lret
xchg
jbe
add
mov
pop
icebp
cmpsb
mov
stos
imul
cmp
push
inc
movb
loop
add
jnp
gs
cli
scas
inc
add
adc
in
nop
addb
fistps
imul
sbb
pop
mov
cwtl
mov
xlat
push
cmpsl
mov
dec
sbb
pushf
jae
mov
mov
mov
add
mov
and
cltd
es
jnp
and
add
add
fmul
pusha
add
cwtl
pusha
add
jns
inc
add
pop
mov
add
pop
enter
inc
pop
sub
sbb
cmp
fcmove
or
in
loopne
sbb
xchg
ss
test
hlt
pop
bound
std
xchg
test
ja
add
xor
movsl
mov
jno
or
jb
rcll
and
pop
cmpsb
inc
add
jge
cmp
popf
out
inc
add
stos
dec
ljmp
fcomps
add
mov
data16
cmc
cld
sbb
movsb
sub
push
test
pushf
jecxz
leave
cmp
and
push
and
test
in
and
test
mov
sub
mov
push
jnp
jecxz
js
imulb
push
xchg
jbe
dec
lods
pop
push
jae
and
dec
data16
mov
xchg
jecxz
and
jmp
jns
pushf
inc
add
mov
cs
push
adc
and
add
and
add
mov
jecxz
fsubr
pop
add
sbb
mov
pop
jno
jecxz
dec
cwtl
testb
xor
add
mov
stos
add
dec
mov
pop
add
lock
xorl
pop
cmp
push
add
inc
push
rcrl
xchg
and
push
push
dec
xor
das
bound
xor
adc
jecxz
lock
jne
clc
xchg
lds
pusha
add
jge
pusha
add
imul
test
add
push
or
dec
sti
cmp
pushf
mov
fsubrs
es
pop
mov
shlb
gs
mov
stos
pop
adc
add
and
mov
mov
mov
imul
push
std
and
dec
dec
mov
adc
imul
loop
add
std
or
icebp
aas
cmp
add
adc
outsl
jns
repz
add
jb,pt
push
sub
es
adcl
add
xchg
or
mov
xchg
adcl
pushf
pop
lcall
sahf
pop
out
lret
ja
std
or
mov
cwtl
imul
mov
mov
sub
push
sbb
ret
add
add
call
add
mov
test
scas
xchg
aaa
fucom
cltd
out
cmc
or
test
loop
mov
xchg
or
add
je
ficoms
mov
mov
cmp
or
adc
mov
lcall
add
mov
xor
loope
push
and
in
adc
repnz
iret
dec
dec
mov
mov
jns
cmpsb
loopne
hlt
adc
adc
andnps
pop
roll
or
leave
and
and
xor
mov
pop
push
or
nop
sbb
xchg
xchg
pop
and
mov
sbb
mov
or
repz
push
mov
pop
inc
lcall
xchg
into
or
loop
push
adc
or
decb
push
test
xor
ds
mov
es
cld
inc
or
clc
xor
lods
arpl
add
sub
nop
jmp
sbb
adc
adc
cltd
in
iret
or
mov
cwtl
stos
cli
dec
mov
loope
add
jae
sti
das
sbb
aas
ss
add
bnd
bound
pop
xor
xchg
mov
fnstcw
mov
filds
dec
aam
cmpsb
daa
fnstcw
nop
inc
add
sub
sbb
dec
dec
out
add
mov
jge
std
mov
add
nop
and
hlt
or
push
in
lret
imul
adc
ja
pop
push
xchg
inc
rcrb
add
jno
add
add
scas
dec
inc
add
dec
arpl
les
mov
shl
sti
push
ficoml
dec
mov
add
fimuls
cwtl
aas
fisubrs
mov
loope
jle
jmp
add
jge
mov
movsb
fwait
adc
push
add
jge
insb
jns
in
adc
sub
imul
xchg
fdivr
mov
pop
xchg
into
pop
in
cmp
subl
push
lcall
mov
cwtl
adc
pop
sbb
sti
scas
mov
shlb
adc
or
cmpsb
sub
ja
add
add
fistl
leave
fcomi
subl
push
das
mov
cmp
inc
add
pop
inc
add
dec
add
icebp
in
out
adc
or
xchg
fsubp
cmp
ret
insb
addb
xor
add
cmp
addb
dec
adc
pop
mov
add
lcall
add
add
add
lcall
jmp
add
adc
cmpsl
jmp
push
adc
adc
add
cli
fsubrs
xlat
push
add
arpl
mov
mov
fidivrl
out
mov
ret
mov
shll
sbb
loopne
icebp
jl
ret
ret
mov
add
add
rcrl
inc
cs
mov
int3
lds
negl
add
push
cmpsl
and
sub
test
scas
adc
jno
into
push
xchg
sti
sub
test
push
jge
add
mov
xchg
imul
dec
pop
adc
add
ljmp
mov
mov
pusha
add
xchg
mov
test
sbb
push
pop
mov
add
xchg
repz
cltd
in
into
inc
add
jo
xchg
mov
enter
mov
push
mov
add
and
push
shl
popa
rolb
add
inc
stos
and
fcmovbe
pusha
add
aas
cmp
repnz
fnstsw
out
stos
loope
stc
push
dec
sub
add
add
ret
lea
and
test
lds
fstp
int
test
dec
imul
and
inc
add
into
les
insb
jecxz
mov
xchg
ds
cmp
mov
push
cmc
adc
mov
imul
inc
jle
mov
cmp
insl
mov
push
repnz
add
fsubr
loope
mov
sahf
imul
add
popf
fidivs
ret
and
pop
mov
popa
mov
mov
dec
movsl
jmp
jmp
add
jmp
mov
rolb
stos
scas
inc
add
ret
rolb
sbb
mov
add
add
or
sbb
mov
xor
lds
add
rorl
fstl
sub
lret
sub
mov
add
notl
sti
hlt
pop
repnz
stos
xchg
mov
push
popa
xchg
fsts
or
add
jno
push
jg
xlat
push
and
inc
add
pop
lret
repnz
icebp
insl
or
popf
cli
mov
add
pop
jae
clc
loop
xor
aas
fisubl
pusha
add
dec
ret
mov
popf
fstpl
mov
jmp
stos
mov
out
lahf
dec
sub
xchg
xor
add
mov
xchg
add
mov
adc
fs
pop
push
mov
add
sbb
lock
jno
cmp
addb
mov
push
insl
jne
call
add
or
sbb
shl
std
jnp
daa
sub
sub
les
inc
add
add
lock
pop
das
inc
add
pop
pop
sbb
add
je
add
or
dec
ret
fiadds
add
aas
inc
add
pop
cmp
rolb
jbe
push
lea
add
stc
ja
inc
gs
mov
add
mov
mov
dec
jmp
cmp
jge
add
mov
aad
sub
mov
pop
stos
and
in
popa
out
cwtl
out
mov
mov
into
push
mov
out
mov
popa
add
add
xlat
orl
push
fsubrs
shlb
add
out
or
sub
insb
push
mov
add
sbb
dec
inc
dec
fnsave
bound
sub
pop
cmp
sbb
stc
rcrl
int
or
hlt
xchg
lret
and
inc
and
inc
add
mov
xor
aaa
jmp
lods
push
aad
mov
add
mov
add
xchg
dec
outsl
movsl
js
pop
sahf
add
das
js
and
add
cmpsl
xor
push
negb
dec
or
das
sub
xchg
insl
mov
inc
mov
sub
push
mov
push
mov
sbbl
jmp
int
pop
jnp
pusha
add
stos
stos
mov
lret
inc
int
stc
inc
inc
xor
inc
add
add
add
out
test
movb
adc
fcoms
sbb
xor
lods
cmp
pop
mov
cli
mov
lods
add
cmp
cmpsb
addps
xchg
dec
mov
add
jmp
lcall
fimull
jbe
mov
test
add
addb
add
aaa
dec
mov
inc
add
mov
stos
jbe
or
mov
aaa
loopne
fldcw
pop
call
adc
cmp
out
imul
divb
dec
sub
add
sbb
mov
insb
les
aas
mov
dec
add
xchg
roll
orl
aam
sbb
pop
mov
mov
add
or
mov
and
in
scas
cs
add
daa
fcomps
aas
inc
add
ja
in
hlt
divl
ja
ja
sbbl
xor
push
decb
add
data16
jg
stc
fnstsw
fdivrp
mov
inc
add
fildll
lea
add
jmp
mov
shrl
cmp
pop
arpl
xlat
mov
outsb
repnz
sbb
dec
xor
jmp
push
fcmovnbe
int
inc
add
arpl
or
movsl
cmp
sub
mov
ljmp
gs
cs
adc
inc
add
clc
and
dec
enter
add
push
xchg
outsb
xchg
lds
fdivl
les
stos
jp
add
dec
jno
rolb
mov
push
lret
push
lahf
mov
insb
or
sbb
fcmovnbe
in
inc
add
es
or
insl
pushl
and
push
in
sbb
out
and
dec
ljmp
xor
mov
or
push
push
add
xor
bound
sti
rolb
stc
cmp
addb
dec
cmp
lods
cmp
xchg
lds
add
add
or
dec
out
ljmp
pop
cmp
sbbl
hlt
dec
addr16
pop
dec
push
test
call
adc
unpckhps
outsb
fdivrs
insb
sub
out
iret
xchg
or
sti
aas
add
mov
add
leave
add
mov
sub
push
repz
mov
add
rolb
add
fwait
popa
cmp
jp
in
outsb
icebp
jmp
mov
adc
fistl
xchg
lea
cmp
push
xchg
or
xor
or
pushf
lret
dec
insl
loopne
sub
xchg
dec
inc
aad
add
xchg
frstor
in
xor
and
lock
jecxz
fsubrp
xlat
fcomip
dec
ficoml
sbb
mov
mov
out
mov
testl
inc
add
int
in
pusha
add
pop
xchg
mov
inc
loope,pt
dec
js
mov
add
test
add
outsb
and
mov
xchg
mov
out
pop
repz
push
mov
push
inc
into
clc
lods
les
popf
dec
pushf
int
lret
movsb
add
add
movsl
sarl
clc
arpl
mov
jbe
cmp
xchg
or
push
xchg
imul
xchg
sub
popa
push
add
add
int
dec
xchg
std
fwait
or
jl
sub
inc
int3
addb
enter
sbb
xchg
mov
sub
jge
xchg
xchg
xor
push
scas
push
aas
fwait
dec
push
adc
xchg
outsl
cmp
mov
pop
mov
fcompl
test
cmpsl
jle
mov
pop
adc
jg
or
fsubs
sub
movsl
mov
sub
add
cli
jnp
jg
sbb
out
mov
shlb
clc
mov
cli
jnp
adc
fwait
push
pop
rolb
cmpsb
lods
lea
add
es
cs
cli
pop
test
call
rolb
stos
pop
sbb
dec
xor
js
int3
sub
add
xchg
adc
mov
inc
add
out
mov
push
gs
inc
sub
cmp
pop
ja
inc
mov
loope
dec
ljmp
xor
pop
adc
mov
add
add
xchg
lret
add
mov
testl
jbe
xlat
stc
sub
mov
pop
dec
ret
add
addr16
mov
jp
leave
fs
hlt
push
add
rol
add
cmpsb
mov
push
push
adc
loop
cmp
ds
mov
enter
add
xlat
dec
fsubs
sahf
or
and
mov
fs
fwait
out
xor
cmp
pop
lea
cs
movsb
clc
leave
addr16
dec
cmp
jmp
mov
xchg
cmp
cld
pusha
add
push
or
enter
jb
add
ja
xor
stc
mov
cld
shrb
mov
xchg
dec
mov
fsubrl
push
mulb
add
daa
mov
bound
dec
push
add
pop
push
repnz
add
dec
and
ret
movsl
mov
add
adcl
add
and
ret
sub
out
cltd
ljmp
sbb
jle
sbb
movsb
push
dec
xchg
pop
test
cmc
rcrl
dec
pop
rolb
enter
add
inc
std
addb
outsb
pop
and
bound
sahf
ret
out
jne
push
push
sub
callw
xchg
js
adc
je
int3
enter
shll
inc
cwtl
dec
lock
inc
mov
in
daa
mov
std
dec
and
sbb
mov
add
pushf
mov
add
add
mov
movb
insl
mov
add
mov
push
push
insb
movsl
insl
xchg
mov
sub
out
rcrl
mov
stos
lods
add
xchg
or
scas
lret
inc
add
push
outsl
pop
addb
fdivl
cli
mov
sahf
xchg
sub
in
rorb
jg
xlat
cli
jne
dec
dec
add
loope
add
movsl
mov
shrb
cmp
jne
aas
xor
arpl
push
cmp
js
cli
js
mov
call
sti
sub
mov
cmp
jne
js
lods
add
sub
cmp
sahf
pop
addr16
mov
in
les
xor
inc
add
lea
adc
adc
mov
push
pop
adc
stos
rorb
xchg
imul
push
and
fwait
xchg
mov
in
inc
popf
ss
imul
test
lcall
outsl
test
dec
push
scas
jns
rorl
pushf
ret
enter
add
inc
add
cmp
cltd
arpl
scas
fsub
pop
roll
out
clc
pusha
add
pop
pop
dec
jle
add
ret
mov
les
or
out
pop
pop
popf
pop
mov
inc
add
push
fcomps
sbb
xchg
push
in
hlt
push
xchg
stos
pop
jae
push
movsb
iret
push
int3
or
cltd
fwait
mov
mov
into
aam
sbb
cli
and
lret
stos
ja
aam
out
add
idivb
add
shl
das
movsb
mov
jo
add
dec
mov
mov
sub
les
dec
dec
lods
mov
in
push
daa
pop
scas
pop
mov
add
add
xor
xchg
ds
nop
xchg
adc
aas
inc
add
add
test
lds
add
add
or
xchg
push
das
call
rcrb
aad
add
ljmp
gs
and
add
xor
jg
nop
inc
push
fcmove
in
push
insl
xor
sbb
cmp
ret
add
mov
stos
arpl
mov
xor
and
cmp
xor
push
lds
sbb
hlt
js
sub
xchg
nop
ret
pop
xchg
pop
inc
add
ljmp
xlat
xor
add
mov
rolb
lret
les
inc
pop
iret
stos
or
pop
and
loopne
cld
pop
dec
popf
enter
movsb
std
dec
addb
sbb
xchg
mov
or
inc
add
out
jno
push
shlb
fdivrs
sar
dec
outsb
push
rcl
add
mov
mov
mov
fxch
leave
fildl
cmp
jl
popa
ret
leave
add
inc
leave
mov
ret
repz
pop
cmp
cli
stos
arpl
add
jo
hlt
sbb
movsl
cmpsl
inc
add
into
je
rcrl
xchg
dec
loope
push
test
jmp
xchg
mov
inc
sbb
add
add
call
mov
mov
xchg
cld
fs
imul
aaa
fdivl
adc
add
xor
mov
in
lea
movsb
es
arpl
pop
cltd
fcompl
lods
inc
xchg
lea
mov
aam
inc
mov
xor
sub
jne
or
inc
iret
rcrb
cs
add
push
add
dec
sbb
mov
cmpsl
pop
insl
clc
imulb
pop
add
inc
add
sbb
aad
scas
cmpsb
inc
add
add
jge
jle
pop
pop
push
push
jl
in
push
cltd
mov
or
push
out
dec
aam
jne
and
inc
xor
jecxz
adc
movb
add
dec
push
dec
lods
movb
add
fcomi
xchg
les
cwtl
sub
mov
fstl
jno
out
push
gs
inc
add
aaa
jne
dec
ret
dec
sahf
mov
cltd
out
mov
popa
cmp
lock
jge
sbb
add
push
cmc
hlt
xchg
cmpl
out
enter
inc
lea
stos
aaa
testb
add
psrld
push
cwtl
pop
sbbl
adc
mov
cmp
in
in
and
xchg
jle
pop
popf
jp
xchg
in
adc
jb
rclb
in
mov
mov
mov
add
mov
xor
pop
mov
outsb
jp
movsb
sahf
fisubrl
pop
add
push
fwait
xlat
dec
xor
addb
fbstp
shl
pop
sub
push
sbb
ds
sti
mov
push
ja
dec
js
fldenv
inc
add
imul
add
fnsave
gs
sub
xchg
cmp
test
inc
add
pop
imul
addb
outsb
ss
mov
mov
lret
lret
add
pop
mov
push
inc
fldl
lock
mov
jmp
enter
pop
jmp
xchg
mov
fucom
popf
jno
mov
sbb
mov
add
lret
jae
icebp
dec
sbb
mov
movsl
nop
jmp
dec
enter
out
cmp
cld
movb
sahf
mull
jae
mov
xchg
sbb
cmp
cmpl
insl
xor
int3
sub
subl
mov
lods
lcall
fcmovnu
fstpl
mov
pop
stos
addb
xchg
push
nop
sub
cmpsl
es
lahf
cmc
xchg
fucomip
xchg
out
push
cwtl
repz
or
jg
inc
add
clc
sbb
mov
push
add
mov
adc
js
dec
dec
mov
add
xchg
in
shll
jle
loop
add
enter
out
fs
arpl
inc
movsb
jbe
shll
stos
xchg
rcr
std
or
mov
ss
adc
lods
into
dec
and
popf
sbb
sbb
cmc
and
xor
sub
mov
lret
inc
dec
push
jle
dec
test
jno
mov
nop
sti
xchg
imul
sbb
mov
add
hlt
sti
imul
loopne
xchg
fmuls
pop
jp
jle,pn
ret
push
add
and
cmp
fwait
lahf
out
cwtl
addb
pusha
add
cmc
lcall
sbbl
test
insl
dec
lahf
imulb
daa
or
inc
enter
xchg
xor
jge
lea
sub
add
gs
inc
add
dec
popa
scas
loop
and
push
jo
jl
fisttpl
pop
stc
movb
rolb
lock
add
ljmp
mov
add
out
outsl
imul
jbe
sub
hlt
addb
add
sub
add
cmpsl
and
add
loop
cltd
xchg
movb
or
mov
and
das
in
cltd
movb
xchg
mov
add
stos
jae
push
pusha
add
mov
pop
ds
popf
xrelease
add
jmp
stc
hlt
adc
addb
jmp
in
aas
jbe,pn
cmpsl
and
bound
loop
mov
push
add
sti
xor
scas
xor
xlat
aaa
inc
add
test
gs
iret
inc
add
sub
loope
xor
in
mov
inc
add
cmp
ja
xchg
in
clc
and
iret
sbb
add
rolb
jmp
pop
dec
pmaxsw
cmp
jbe
iret
fcmovnbe
mov
jbe
xlat
repnz
cmp
repnz
lock
icebp
lock
call
fisttps
xchg
addb
dec
sbb
push
xchg
movsb
mov
add
xchg
jmp
dec
mov
mov
add
or
ja
ds
out
cmc
sbb
mov
pop
int
xchg
xchg
pop
iret
and
popa
mov
xor
jmp
add
dec
sahf
adc
cmp
sub
subl
push
pop
sbb
mov
mov
push
imul
mov
push
push
pop
leave
fiaddl
das
fwait
jecxz
rorl
call
ljmp
and
add
xchg
cltd
out
sub
cmp
das
leave
cld
test
jl
add
loopne
clc
out
outsb
add
js
mov
jo
jp
and
add
inc
add
mov
inc
add
push
jae
add
pop
lds
fmuls
ss
ret
movsl
sahf
imul
add
pop
jo
adc
and
and
dec
aas
sarb
inc
add
pop
stos
out
sub
add
in
or
lret
mov
rorl
add
gs
sbb
mov
leave
xchg
push
inc
inc
add
add
icebp
stos
fsub
or
mov
and
sub
insl
loop
sarl
stos
mov
js
fisttpll
addb
cmpsl
inc
mov
movb
mov
mov
in
and
test
add
in
pop
pop
adc
hlt
or
lcall
incb
dec
test
add
inc
add
cwtl
inc
add
push
and
addr16
jno
adc
mov
mov
cmpsl
loope
out
lods
je
add
mov
inc
add
jle
fistl
leave
repz
in
dec
dec
test
sub
icebp
sub
xlat
cmc
in
rolb
sub
in
std
and
ror
mov
or
inc
mov
xchg
or
aam
or
or
dec
fbld
xchg
push
cltd
es
mov
out
outsb
cld
pop
xchg
loop
movsb
shr
stc
mov
packsswb
inc
int
cmp
ss
xlat
out
mov
mov
in
xor
xor
mov
rolb
sub
cli
negb
into
cltd
fldcw
xor
fwait
and
add
out
dec
shlb
add
sar
push
shl
sub
rcll
shrl
insl
mov
addr16
jno
dec
movsl
and
icebp
jbe
inc
in
add
add
adc
stc
push
pop
xchg
jb
xchg
sub
dec
mov
pushf
out
aam
add
repz
jp
mov
add
cmc
loope
xchg
aam
mov
add
mov
pandn
call
iret
push
loop
cmp
dec
sahf
adc
sbb
pop
inc
fcmovbe
jb
repnz
jb
xor
into
inc
jno
scas
imul
repz
inc
cmp
add
adc
test
jp
xor
mov
lret
mov
bound
out
add
insl
mov
mull
add
enter
cmpsb
add
dec
test
cli
jo
dec
addb
sbb
or
push
xchg
push
mov
pop
pextrw
cmpsb
out
add
lds
cmp
sub
ljmp
sub
scas
gs
xchg
int3
dec
int
and
adc
sub
nop
or
jns
nop
lods
sub
add
icebp
sti
mov
cmp
push
and
cld
or
lcall
add
lock
add
xchg
loope
in
cmp
add
or
mov
and
fsts
xor
jmp
mulb
dec
jne
mov
data16
in
or
pop
fsubs
sub
add
mov
sbb
testb
jmp
in
mov
add
adc
cmp
or
imul
inc
add
sub
jae
gs
add
jb
negb
add
add
mov
cwtl
inc
sbb
mov
and
jecxz
jge
xor
dec
mov
sub
jo
add
sub
rcll
movb
add
xor
repz
push
dec
sub
xor
scas
cmp
add
cwtl
mov
xchg
hlt
jns
outsl
addb
push
js
lods
out
ljmp
or
cmp
xchg
aam
sti
sbb
test
xchg
xchg
sub
sbb
add
or
mov
outsl
xlat
and
jae
pop
out
mov
popa
leave
lret
inc
add
or
mov
or
add
std
ret
divb
inc
add
test
leave
fldl
add
and
movsb
repz
stc
loope
in
fimull
enter
mov
scas
lret
fisttps
mov
adc
lret
imul
pmullw
cmp
mov
xor
outsb
jmp
pop
push
pop
fs
test
pop
xchg
fisubl
push
shl
scas
into
movb
cmpsb
jecxz
js
jae
and
xor
mov
test
enter
and
sbb
or
mov
fisttpll
pop
imul
pop
fidivrs
lret
sbb
inc
test
ret
aad
cmp
push
scas
sub
sub
sub
sti
clc
pop
test
imul
xchg
and
cwtl
adc
popa
cwtl
shll
and
xlat
es
add
lcall
jo
movb
fs
imul
lock
mov
ret
inc
add
mov
cs
add
jle
or
test
mov
rorl
jp
add
and
fs
in
add
outsb
adc
inc
gs
int
flds
add
movsb
cmp
add
pushf
fcomi
les
shlb
xlat
dec
adc
and
mov
or
sub
aam
fs
xchg
inc
add
roll
sbb
mov
fldt
jne
mov
pop
push
pushf
popf
stos
leave
sbb
sub
add
mov
jl
in
ja
add
call
push
stc
in
mov
add
jmp
in
pop
mov
push
and
add
and
mov
out
sbb
add
mov
cmpsl
fldt
xchg
sub
xchg
ret
sbb
aaa
out
test
jmp
lret
movb
and
imul
jb
add
outsl
scas
sahf
or
cmp
and
push
cltd
xlat
je
test
mov
adc
xchg
into
and
jbe
imul
call
jg
add
mov
outsb
addb
xchg
sbb
inc
add
mov
adc
add
imul
and
repnz
and
push
ret
push
aas
aam
clc
fwait
inc
add
jb
sub
ret
cmp
cmp
pause
scas
repnz
sarb
add
mov
pop
inc
push
xchg
pop
movsb
push
jp
inc
int
add
or
lea
stc
sbb
shll
mov
adc
rolb
xchg
xchg
xchg
jl
fsubp
mov
pop
mov
addb
fmulp
mov
stc
pusha
add
push
sbb
add
mov
add
xchg
or
aaa
cmpsl
jp
xchg
loopw
out
ja
clc
test
jmp
adc
stos
inc
mov
adc
sbb
xor
cmp
sbb
xor
aas
adc
bound
das
and
sub
fcoml
ret
push
inc
add
sub
outsl
mov
inc
add
add
cmpsl
movsl
popl
ficompl
xchg
lret
cmp
jo
pusha
add
test
stc
push
stos
in
roll
pop
loop
jno
push
test
add
add
inc
add
adc
aad
bound
pop
sbb
rol
add
cmp
dec
aas
xlat
fisttpll
addb
jae
add
cmp
popf
int3
or
mov
jg
xchg
adc
hlt
inc
mov
call
sub
paddq
mov
add
pop
addb
rolb
fwait
popa
fsubl
mov
cli
cmp
loope
and
aaa
call
adc
and
aad
mov
hlt
mov
outsl
inc
add
sub
int
cmc
sub
jo
pop
enter
add
pushf
xchg
mov
mov
out
movsb
jnp
cmc
sbb
out
fisubrs
aaa
mov
jle
xlat
jb
int
ljmp
and
mov
jg
adc
and
add
mov
ja
cmp
fwait
jae
push
pop
xrelease
jb
pop
cmp
int
lods
xchg
popa
xor
add
outsl
les
cmp
inc
and
add
mov
add
dec
sbb
xor
out
rolb
ljmp
xor
inc
in
popa
push
ds
pop
jmp
xchg
cmp
add
dec
push
cli
xor
out
sahf
movb
stos
push
jg
je
pop
mov
cmpsl
mov
add
add
cmp
jmp
add
outsl
aaa
ror
dec
popa
jbe
in
addb
addb
xchg
add
adc
mov
je
sub
hlt
les
cmc
pop
and
xchg
mov
pop
adc
sahf
push
mov
add
mov
out
jecxz
bound
xchg
sar
pop
sti
or
fstpt
out
fdivl
fwait
or
add
out
mov
imull
sbb
inc
ret
inc
pop
inc
add
das
insb
shlb
lock
cmp
push
cmp
xor
es
and
and
add
push
in
cs
outsl
dec
aad
sbb
jbe
addb
loop
mov
add
jmp
or
push
mov
pusha
add
mov
aad
lock
mov
out
movsb
adc
imul
lret
push
inc
add
mov
fld
les
outsl
nop
inc
movsl
incl
and
add
add
xor
icebp
dec
mov
add
sbbl
dec
inc
dec
addb
pop
ret
out
lods
jb
pop
ficoml
push
aad
jo
aad
in
sub
mov
add
xor
insl
mov
adc
clc
mov
pop
out
cmpsb
push
jne
push
cs
sti
cmp
movb
add
or
mov
jne
lods
test
insl
jl
rcrl
addb
add
add
or
pop
mov
dec
movb
sarl
jbe
dec
repz
dec
mov
fsubrl
dec
fs
std
stos
aam
and
mov
sub
add
aad
test
mov
jbe
jge
and
popa
iret
sbb
mov
movsl
or
add
mov
cwtl
cmpsl
aad
jmp
fistpll
mov
jmp
data16
and
xor
or
cmp
mov
mov
add
push
mov
rcll
outsl
outsl
fnstsw
lods
aaa
mov
and
mov
add
add
xlat
jne
and
aam
mov
sti
xor
out
repz
sbb
ficompl
add
fcoms
xchg
adc
pop
xchg
sbb
dec
mov
andl
dec
fimull
addb
arpl
mov
shrl
inc
mov
stos
lods
fistl
dec
insl
ret
jno
cmp
pop
insb
je
out
inc
add
bound
lea
divb
mov
push
jge
in
adc
mov
call
cli
lret
mov
xor
lds
mov
xchg
rclb
mov
fs
or
dec
nop
xchg
pop
aam
mov
bound
into
lds
xor
loopne
pop
ret
mov
in
in
sbb
arpl
inc
add
mov
add
inc
movsl
filds
add
lock
add
add
push
add
xor
mov
mov
push
in
jo
cmpsl
outsl
pop
je
add
pop
add
loop
jle
faddl
daa
or
lea
push
add
jo
sahf
and
add
and
sub
in
mov
xlat
mov
sub
ret
repz
inc
or
ret
aad
pop
loop
sar
pop
xchg
jae
push
enter
or
add
push
aas
movsb
dec
and
loope
add
xlat
mov
fucomip
pusha
add
aas
pop
mov
jle
push
mov
inc
add
add
rorl
pusha
add
sbb
or
mov
or
mov
dec
jmp
adc
xchg
leave
imul
out
lret
dec
dec
mov
inc
notb
std
jg
cmp
aam
add
mov
test
into
mov
lret
lret
add
fnstcw
mov
xchg
repz
mov
cld
push
mov
sub
mov
out
cmc
fbld
mov
jne
imul
mov
add
dec
mov
enter
out
mov
add
out
xchg
push
mov
jecxz
push
fidivl
mov
test
or
mov
cmc
mov
cmpsb
dec
jmp
mov
adc
out
shl
fstps
nop
out
lret
dec
aaa
jecxz
cli
iret
and
xor
ja
jmp
inc
or
jecxz
xor
fdivr
daa
jp
lds
push
inc
add
idivb
repnz
jne
jb
pop
movl
push
iret
inc
add
dec
add
cmp
es
add
sub
inc
add
lock
sbb
add
in
jg
movb
in
decb
ret
inc
add
xchg
out
add
dec
aaa
jno
ret
iret
mov
nop
into
mov
out
inc
add
mov
dec
sub
pop
js
rcr
inc
add
in
cmp
pop
popl
jno
and
out
pop
xchg
push
jb
jle
add
repnz
aas
push
add
aaa
imul
inc
add
add
addb
mov
sbb
and
push
add
jne
out
movb
cmp
les
sbb
les
pushf
jecxz
or
inc
insb
lock
cmp
and
sbbl
xchg
pop
xor
add
mov
jnp
popa
jnp
jmp
or
or
cmp
xlat
icebp
int3
fcoms
lock
pop
clc
stos
jmp
jl
icebp
sub
aaa
test
shrb
imull
mov
fwait
xchg
repz
scas
inc
arpl
add
movsl
pop
repz
pop
mov
xchg
mov
xor
add
sub
sahf
add
shrl
shll
jnp
mov
fisubl
add
inc
mul
xchg
fwait
xlat
xor
add
dec
pop
fadds
bound
sarb
call
js
push
add
shlb
or
loopne
pop
inc
cmp
and
lcall
ret
lahf
jp
dec
sub
xor
jns
scas
rolb
xor
iret
addl
arpl
into
push
mov
and
inc
add
pop
leave
fistps
cli
ljmp
add
data16
popf
xor
pop
jno
stos
and
rcr
jno
insl
ds
and
add
bound
cmpsl
add
xlat
jne
dec
jbe
push
mov
jl
add
cmp
neg
insl
lock
jo
scas
mov
ja
add
pop
inc
add
jecxz
push
fwait
inc
add
outsl
jmp
mov
add
sub
add
pop
cmc
mul
push
popa
dec
mov
add
or
movb
ljmp
movsb
stos
inc
add
inc
inc
add
out
js
fstl
or
sub
in
xor
pusha
add
cwtl
dec
fbstp
add
inc
add
rorl
imul
xchg
cld
push
mov
xchg
arpl
in
add
popa
dec
sbb
cmc
fisttpl
lea
push
das
icebp
js
int
std
repz
lahf
cs
add
or
xchg
xor
addr16
or
aad
push
cmpsb
imul
jmp
lret
int
or
cmp
xor
ljmp
or
adc
out
inc
add
adc
mov
imul
int3
outsl
push
add
mov
fisttps
xchg
addb
jbe
incb
fs
add
inc
sub
outsl
insl
cmpsb
push
je
pop
xchg
aas
xlat
push
push
addr16
fidivrs
add
mov
add
stos
mov
leave
cmp
add
add
adc
sbb
or
mov
mov
inc
sub
xor
sbb
or
and
xchg
gs
mov
pop
lcall
xlat
xchg
dec
adc
neg
jae
aaa
pop
lea
push
add
jle
inc
add
push
xchg
cmp
jge
lret
sub
add
mov
push
add
imul
sub
movsb
scas
cmpsb
loopne
push
insl
jle
push
dec
mov
cmp
add
stc
add
pop
add
mov
pop
les
sahf
mov
push
xchg
and
sbb
jle
xchg
inc
shl
sarl
fcoml
push
sahf
repnz
mov
aas
jp
add
out
xor
sub
loope
out
and
not
adc
add
push
fwait
repnz
mov
in
add
jecxz
pushf
push
and
dec
mov
ret
in
and
rolb
xchg
mov
sbb
mov
inc
dec
mov
add
loop
scas
adc
or
adc
pop
push
filds
add
xor
xor
outsb
enter
mov
dec
movsb
ret
sbb
dec
mov
out
dec
gs
jb
mov
ljmp
lret
pop
idivl
sub
or
sbb
inc
add
xor
out
dec
jge
push
iret
pop
sub
call
rolb
xor
int3
jge
sbb
add
pushf
and
fsubr
js
push
xchg
mov
pusha
add
pusha
add
add
mov
popf
cmp
xchg
scas
sub
xchg
inc
imul
xor
push
dec
popl
je
fsubr
jle
xchg
and
mov
push
aas
out
push
sub
xchg
mov
ret
int3
ss
out
xlat
inc
add
out
push
adc
xorl
fmuls
xlat
rclb
sti
jnp
sbb
lss
iret
sarl
add
jbe
mov
jns
jl
sbb
xorl
es
aam
lods
cmp
and
lds
jno
add
in
add
cmc
mov
xchg
mov
and
sub
push
add
and
pop
enter
jnp
xor
push
mov
ljmp
add
add
push
inc
add
mov
das
jge
addb
sbb
seto
test
inc
add
mov
xchg
cltd
push
jg
inc
add
nop
inc
add
jg
sahf
pop
bound
loope
add
imul
sub
or
mov
add
das
pushf
lds
push
jmp
add
clc
jns
jnp
add
sub
xchg
sbb
movsl
jb
sub
add
mov
push
cld
jge
or
mov
add
inc
add
xor
jle
out
in
std
mov
bound
popf
daa
popl
adc
loopne
mov
inc
add
jae
in
add
add
mov
lcall
mov
add
aam
add
xor
and
mov
in
pop
aam
mov
lods
xchg
dec
jmp
popa
dec
xor
into
xchg
or
mov
or
ret
push
fistpll
pushf
pop
xchg
iret
dec
adc
adc
insb
mov
les
nop
cmpsb
push
push
ret
xchg
aas
movsl
cmp
mov
xor
jge
sub
pushf
mov
add
lret
pop
adc
fcomps
xchg
inc
add
jns
test
insl
push
outsl
xor
push
inc
cltd
add
mov
mov
sbb
mov
outsl
pop
lret
js
pop
pop
test
cld
dec
pop
inc
add
fistl
jg
adc
insb
negl
dec
jne
fadd
leave
stos
hlt
lret
pop
aas
lods
inc
adc
cwtl
ds
in
lahf
movsw
test
into
cwtl
or
sahf
pop
xchg
inc
rcrb
cmc
lea
or
addb
mov
aad
lret
bound
in
mov
add
and
xchg
movsl
int
dec
data16
sbb
jns
mov
jl
out
xorl
dec
arpl
adc
add
dec
push
add
add
inc
add
push
sub
sbb
outsl
xchg
mov
add
das
jg
and
stc
inc
add
add
add
sbb
int
test
cli
idivl
xchg
lds
imul
repz
mov
push
dec
jge
inc
jge
xor
aas
sarb
shll
popa
mov
repz
add
cmc
pop
add
add
adc
mov
mov
cmpsb
sbb
les
push
add
mov
push
movb
push
movsb
popa
push
call
cmp
push
push
rolb
lret
cmpsl
jno
adc
cmp
cwtl
xchg
mov
shr
gs
mov
add
or
lods
in
imul
xchg
mov
push
das
jl
test
loope
adc
mov
mov
in
mov
push
xor
add
cmp
jmp
into
stos
push
add
inc
inc
xchg
jno
je
in
outsl
repnz
data16
test
movb
mov
pop
cs
dec
jmp
add
sub
jle
push
std
or
and
xor
cmp
bsf
mov
je
and
xchg
sbb
jnp,pt
sahf
outsb
and
add
or
test
ficoml
add
pop
pop
pushf
outsl
aas
add
addb
pop
test
jae
adc
add
out
xchg
dec
xchg
addb
in
and
inc
add
add
or
lret
add
movb
push
mov
insl
repnz
test
int
push
pop
xor
mov
jno
movb
and
shr
add
popf
jecxz
xor
js
jecxz
ja
jl
mov
shlb
mov
xchg
les
mov
fdivl
mov
xchg
or
add
movb
xor
iret
push
add
jbe
xor
bound
popa
fnsave
dec
push
hlt
pushf
sahf
imul
cmpsl
insl
lcall
iret
mov
std
sub
add
enter
sub
mov
shrl
pop
adc
jb
push
rcrb
fisttpl
sub
call
lock
add
xchg
pop
inc
outsb
setno
clc
fwait
addb
scas
ljmp
aas
add
insl
lahf
mov
push
pop
inc
mov
out
mov
out
stos
lods
add
ja
and
mov
add
into
xchg
jnp
lahf
int3
xchg
insl
mov
mov
nop
jmp
out
dec
inc
add
inc
add
add
sub
pusha
add
add
call
or
imul
pop
mov
adc
mov
imul
add
scas
dec
cmp
jecxz
cmpsb
clc
adc
add
sub
or
mov
scas
negl
mov
pop
sub
in
icebp
stc
sahf
pop
or
and
cmp
cltd
loopne
jbe
add
ret
testb
lcall
popf
ret
cs
inc
xlat
cmp
ljmp
cmpsb
mov
adc
pop
mov
sti
jg
pop
iret
xchg
cmp
imul
jae
add
add
push
xor
pop
pop
and
push
xor
repnz
add
repnz
into
mov
sbb
pop
or
add
ljmp
xor
lret
dec
xchg
mov
cmp
les
gs
imul
push
fdivrs
add
divl
mov
add
pop
pop
xor
mov
outsb
jnp,pt
js
ljmp
arpl
xchg
jp
addb
in
sub
movsb
sub
add
shlb
sbb
rcr
pop
rcl
bound
mov
inc
add
insb
jo,pn
scas
jmp
sbb
outsl
lds
nop
jb
pop
mov
mov
daa
loopne
repz
out
sub
rcll
add
dec
mov
lds
add
xchg
outsb
loopne
and
pop
gs
jp
pop
xchg
jne
mov
pop
jp
and
xor
cwtl
in
cmpsl
pop
inc
push
arpl
jno
mov
lahf
lea
shl
and
push
xor
jg
add
mov
aas
ret
dec
lea
cwtl
test
or
divb
dec
pusha
add
stos
and
sbb
loope
arpl
add
fucomi
inc
add
push
lods
aaa
cmpsb
pusha
add
subl
sbb
mov
push
add
mov
pop
out
cmpsb
sahf
add
xchg
test
add
addb
pop
pop
sbb
ja
and
jg
add
loope
loop
jne
push
int
and
pop
adc
sub
mov
popf
aas
sub
addr16
je
add
pop
test
add
add
in
jnp
adc
sbb
scas
adc
sbb
iret
xchg
enter
push
pop
stos
xchg
int
stos
adc
into
aad
aaa
push
or
jae
xor
push
jle
cmpsl
lock
add
pop
outsb
repz
add
xor
iret
les
out
adc
in
push
sbb
shl
push
ss
xchg
xor
and
mov
pop
mov
add
sbb
cmpsb
cmp
insl
call
push
insb
in
cld
shlb
sub
lock
mov
into
mov
jbe
rorb
mov
sbb
lds
mov
nop
inc
sub
and
push
lods
push
xor
adc
fucom
adc
loope
add
mov
sbb
and
add
fmull
lea
aad
cs
jo
imul
out
loopne
cmp
rolb
fisubrs
iret
lahf
jp
dec
subl
les
xchg
jmp
pop
jle
dec
adc
xchg
xor
pop
jl
insl
and
inc
xlat
mov
adc
dec
sub
js
dec
push
das
gs
filds
add
out
xchg
jns
add
adc
or
pop
je
adc
sub
add
dec
sahf
dec
sahf
cltd
fwait
adc
in
insl
mov
adc
mov
mov
inc
add
jo
pop
cli
adc
int3
adc
fnstcw
push
sbb
inc
mov
push
cld
adc
int3
pop
repnz
adc
xor
in
add
mov
leave
push
insb
adc
addb
aaa
ficomps
je
popf
sbb
out
das
push
sbb
addr16
sub
fst
or
fsub
lret
sbb
icebp
ljmp
divl
mov
loope
add
add
cmp
mov
xchg
push
add
sub
adc
enter
and
and
les
mov
cmp
je
add
shrb
fisubrl
sahf
jnp
inc
add
mov
inc
add
push
and
mov
sbb
adc
add
add
mov
jl
xlat
mov
out
ret
inc
and
add
mov
ficompl
movsb
and
jnp
js
cmp
cmp
outsl
cltd
pop
sub
out
mov
lds
push
inc
jl
mov
cs
in
hlt
sbb
loopne
and
sub
mov
mov
inc
xchg
insb
test
enter
push
push
jle
add
inc
add
add
add
xor
mov
sbb
add
lahf
hlt
mov
add
push
mov
add
mov
stc
jb
add
add
cmpsl
mov
cwtl
push
nop
jmp
add
lahf
dec
add
add
je
fisttps
jb
insl
xor
cmpsl
pusha
add
xchg
aad
inc
stc
jb
add
adc
nop
jmp
xlat
in
mov
mov
int3
sti
cmp
push
mov
xchg
ret
add
int
adc
add
sbb
inc
add
add
xor
push
stc
jb
add
and
stc
jb
add
add
add
sahf
and
push
mov
xchg
ret
add
add
jne
stc
jb
in
add
add
add
stc
jb
add
lcall
lods
adc
add
xchg
add
lods
add
lret
mov
add
stc
jb
add
inc
cmp
push
mov
xchg
ret
add
or
call
and
add
sbb
dec
pop
stc
jb
inc
add
jge
or
push
testb
add
in
mov
xlat
or
xchg
xor
jne
push
mov
xchg
ret
add
lods
lcall
add
add
add
mov
jb
mov
add
jno
fwait
mov
stc
jb
xor
lahf
cmpsl
insb
add
nop
jmp
add
mov
jge
cld
or
and
add
inc
add
pop
nop
jmp
cltd
and
xor
xchg
es
js
rclb
jmp
and
add
and
push
mov
xchg
ret
dec
add
add
stc
jb
add
xchg
out
lcall
sub
add
add
cmpsl
or
add
mov
xor
mov
stc
jb
or
lods
das
and
pop
ljmp
pop
add
add
sbb
rolb
stc
push
xchg
add
jl
add
insl
add
je
stc
jb
mov
movb
andb
xchg
add
gs
fstl
jb
add
add
add
insl
add
jae
pop
stc
jb
add
add
shlb
add
sahf
xor
nop
jmp
or
inc
lahf
xor
mov
jb
cli
cli
xchg
and
orl
jb
pop
das
add
sbb
add
mov
stc
jb
int
add
ficoms
jmp
in
add
int3
add
jge
aaa
mov
stc
jb
jl
rolb
add
push
mov
xchg
ret
pop
and
jns
add
aad
inc
add
lahf
les
mov
insb
stc
jb
add
add
repnz
xor
nop
jmp
xchg
add
add
mov
stc
jb
jno
add
fmuls
jb
add
add
mov
stc
jb
adc
insl
add
mov
stc
jb
jno
fimull
xchg
cmp
incl
add
in
rep
nop
jmp
and
xchg
mov
mov
mov
stc
jb
add
mov
xchg
push
mov
xchg
ret
jno
lods
push
lea
jmp
jno
arpl
add
add
adc
mov
adc
jb
add
sbb
sbb
push
int3
add
xlat
in
mov
stc
jb
lahf
xlat
lods
add
and
jb
stc
jb
stc
inc
rorb
call
stc
jb
xlat
jno
add
add
sub
add
add
add
dec
add
xchg
xchg
stos
mov
stc
jb
add
add
stc
jb
add
xlat
add
add
or
stc
jb
lcall
mov
stc
jb
dec
add
rcll
add
stc
add
fnstenv
push
mov
xchg
ret
dec
add
add
ret
stc
jb
in
xlat
shrb
insl
dec
jns
mov
nop
jmp
dec
data16
add
dec
push
stc
jb
addl
cld
mov
nop
jmp
add
out
jmp
faddl
xchg
ret
push
xor
add
adc
pop
je
nop
jmp
add
add
je
mov
nop
jmp
cmpsl
dec
xchg
adc
or
xchg
or
dec
add
add
add
add
mov
xlat
mov
mov
stc
jb
add
data16
das
iret
sub
push
mov
xchg
ret
jno
add
add
push
mov
xchg
ret
lahf
push
add
sti
add
stc
jb
add
int3
inc
adc
push
stc
jb
push
add
xlat
mov
add
xchg
std
inc
add
sbb
mov
nop
xchg
testl
dec
clc
dec
inc
stc
jb
dec
add
mov
incl
xchg
ret
add
add
stc
push
push
mov
xchg
ret
add
add
xlat
in
jle
movb
out
inc
add
add
add
stc
jb
add
add
xor
mov
pop
nop
jmp
add
jno
data16
inc
push
cmp
nop
jmp
int
cmpsl
add
mov
stc
jb
add
rclb
gs
add
insl
or
test
mov
push
mov
xchg
ret
in
cmpsl
loopne
mov
push
mov
xchg
ret
push
lods
add
or
mov
rcl
add
xor
stc
jb
add
insl
add
add
stos
lea
nop
jmp
and
adc
add
stc
jb
add
add
les
stc
jb
insl
dec
add
dec
add
stc
jb
xchg
int3
imul
pop
and
jb
add
push
add
add
test
decl
nop
jmp
inc
add
cmpsl
add
push
xchg
shrl
popa
add
jb
das
xchg
add
add
jecxz
ret
inc
and
aam
xor
stc
jb
cltd
add
cmpsl
add
xchg
ret
pop
push
mov
xchg
ret
imul
pop
xor
push
mov
xchg
ret
adc
aas
adc
pushl
add
add
push
adc
dec
addr16
jb
add
xchg
jbe
mov
add
pusha
push
mov
xchg
ret
in
xchg
add
push
add
add
nop
jmp
add
int3
xchg
add
insl
inc
adc
or
jb
add
adcl
xor
add
stc
jb
add
repz
mov
xchg
ret
jl
cltd
insl
add
in
push
stc
jb
adc
add
nop
jmp
int3
pop
add
add
push
nop
jmp
add
arpl
add
jno
sbb
mov
xchg
ret
add
add
mov
stc
jb
jmp
out
stc
jb
jno
hlt
loope
pop
push
mov
xchg
ret
jno
add
add
jne
stc
jb
xchg
add
push
stc
jb
dec
xchg
inc
xchg
add
xchg
xor
mov
stc
jb
add
add
inc
adc
jb
add
add
adc
loop
nop
jmp
push
lret
adc
push
mov
xchg
ret
cmpsl
int
hlt
sbb
fldl
xchg
ret
add
add
xchg
cwtl
add
stc
jb
jge
jl
add
cmpw
nop
jmp
add
lea
push
mov
xchg
ret
mov
jge
nop
jmp
int3
add
fwait
movzwl
stc
jb
add
pop
in
mov
stc
jb
sbb
add
in
mov
stc
jb
add
add
dec
nop
jmp
mov
inc
add
jl
add
bound
pop
rcll
stc
jb
add
mov
add
shl
fisttps
test
or
add
jb
add
int3
jno
dec
nop
jmp
add
inc
adcl
andl
push
stc
jb
add
shlb
popa
stc
jb
lret
cli
fsts
add
mov
mov
in
add
add
xlat
add
push
stc
jb
add
sbb
and
jb
add
add
push
add
mov
push
push
mov
xchg
ret
add
dec
xlat
add
sbb
pop
add
add
inc
lods
fisttps
cmp
add
dec
add
add
lahf
inc
add
ds
add
imul
inc
add
imul
stc
jb
xchg
jno
add
loope
mov
stc
jb
add
add
add
ja
push
sub
mov
xchg
ret
lcall
lea
push
mov
xchg
ret
add
mov
or
add
stc
add
add
add
movsb
fcoml
in
add
add
add
outsl
fiaddl
fsubs
mov
xchg
ret
mov
add
add
call
nop
jmp
mov
adc
inc
loopne
mov
xchg
ret
add
push
fisubrl
push
mov
xchg
ret
xchg
add
add
add
push
mov
xchg
ret
add
in
sub
stc
jb
add
add
orl
stc
jb
lods
inc
adc
xlat
add
mov
xor
stc
jb
int3
add
add
add
mov
add
add
jb
mov
add
sub
stc
jb
adc
xchg
jno
add
movsb
stc
jb
add
inc
add
lods
out
push
stc
jb
lahf
das
push
add
adc
nop
jmp
add
mov
lahf
xchg
dec
mov
push
mov
xchg
ret
inc
xchg
stos
mov
stc
jb
add
jl
sbb
inc
xchg
mov
stc
jb
dec
cltd
add
add
add
stc
jb
add
and
call
stc
jb
inc
cmpsl
cltd
lcall
jmp
add
add
xor
jb
mov
data16
jne
stc
jb
cmpsl
imul
jb
add
add
add
xor
mov
stc
jb
inc
jge
pop
xor
push
pop
add
nop
jmp
add
add
add
stos
pop
push
mov
xchg
ret
xchg
out
mov
add
mov
cmp
add
add
lahf
stc
add
inc
add
stc
jb
xlat
add
add
jge
dec
add
pop
add
push
mov
xchg
ret
out
lcall
nop
jmp
jge
dec
xlat
add
jno
xchg
imul
sbb
add
aad
imul
out
add
aam
add
stc
jb
dec
xlat
dec
cmpsl
add
push
and
nop
jmp
add
xlat
add
inc
add
nop
jmp
xlat
int3
add
inc
add
jl
repz
mov
xchg
ret
add
add
inc
add
add
mov
xchg
ret
add
and
lret
jmp
stc
jb
add
push
mov
xchg
ret
mov
add
add
xor
add
add
jl
out
xchg
add
jne
stc
jb
jno
add
mov
push
mov
xchg
ret
xor
add
in
add
stc
jb
xlat
xchg
mov
add
xchg
adc
cmpl
addb
jmp
test
cli
inc
add
xchg
add
add
jl
stc
jb
add
addl
insb
stc
jb
int3
add
jbe
stc
jb
add
add
stc
jb
lods
orl
leave
pop
stc
jb
cltd
arpl
xor
add
test
pop
push
stc
jb
jno
add
jb
imul
stc
jb
add
add
add
pop
push
push
mov
xchg
ret
add
mov
stc
jb
xor
adc
inc
stc
jb
cltd
jno
add
add
adc
iret
inc
stc
jb
add
out
add
fbld
popa
add
jb
add
push
jno
add
mov
push
push
mov
xchg
ret
add
insl
add
or
dec
cmp
jb
mov
add
add
pop
push
mov
xchg
push
pop
add
dec
add
dec
mov
stc
jb
dec
add
add
add
dec
cmp
jb
add
add
mov
stc
jb
add
hlt
popf
add
stc
jb
add
push
add
or
jp
or
push
mov
xchg
ret
jl
add
inc
push
mov
xchg
ret
add
int3
out
xor
mov
adc
jb
push
mov
and
movswl
stc
jb
insl
add
add
xlat
mov
push
push
mov
xchg
ret
imul
call
stc
jb
add
inc
cmp
mov
xchg
ret
add
add
push
fldenv
stc
jb
add
add
movsb
pop
mov
stc
jb
add
pop
add
xor
and
mov
rclb
add
mov
insl
add
add
add
stc
jb
add
add
je
stc
jb
mov
mov
pop
push
mov
xchg
ret
shrb
inc
pop
or
cmp
mov
xchg
ret
jmp
push
add
stos
dec
nop
jmp
push
out
add
xchg
xchg
lret
or
stc
jb
xchg
and
add
es
test
call
decl
add
stc
movsb
sbb
jmp
sbb
add
dec
add
dec
cltd
dec
cmp
popa
add
mov
xchg
ret
add
dec
mov
nop
jmp
insl
cli
mov
insl
or
or
mov
xchg
ret
add
mov
andb
add
cltd
out
add
sldt
stc
jb
lods
lcall
lcall
call
xlat
dec
cli
add
xchg
clc
pushl
push
mov
xchg
ret
jmp
nop
jmp
add
push
lret
add
and
mov
call
and
add
int
lret
add
stc
jb
xchg
add
add
cmpsl
add
outsb
and
jb
xor
daa
mov
jbe
nop
jmp
add
xchg
add
and
cmpsb
xchg
movb
xor
loopne
and
stc
jb
add
add
cltd
out
cmp
nop
jmp
add
add
add
jmp
stc
jb
add
lret
stc
jb
add
add
insl
mov
je
nop
jmp
xchg
add
add
movzwl
nop
jmp
add
cmpsl
int
clc
mov
stc
jb
adc
add
neg
call
stc
jb
push
sbb
data16
js
js
nop
jmp
insl
add
xchg
add
add
push
mov
xchg
ret
add
inc
and
stc
jb
int3
inc
imul
push
mov
xchg
ret
lahf
int3
xlat
add
xor
push
mov
xchg
ret
add
add
mov
mov
stc
jb
add
add
stc
add
push
push
stc
jb
inc
imul
arpl
stc
jb
and
adc
aaa
mov
inc
aad
subl
push
mov
xchg
ret
mov
fyl2xp1
stc
jb
add
imul
icebp
inc
add
add
test
nop
jmp
mov
stc
popw
cltd
mov
daa
ss
adc
jb
add
add
add
or
jb
cmpsl
add
add
jno
icebp
lods
pop
stc
jb
arpl
stc
push
decb
cmc
add
add
dec
add
add
mov
mov
xchg
ret
add
add
mov
stc
jb
jno
add
outsl
pop
push
mov
xchg
ret
xlat
add
add
push
push
mov
xchg
ret
add
cmpsl
andl
jmp
xlat
int
int3
xchg
and
sbb
mov
adc
jb
add
iret
xchg
nop
jmp
add
lahf
add
andl
stc
jb
mov
jl
mov
dec
jecxz
je
stc
jb
xchg
add
inc
icebp
adcl
jmp
sbb
add
lcall
mov
add
cli
xchg
add
add
or
mov
movsl
and
inc
or
add
add
add
pushf
push
mov
mov
fst
popa
sbb
add
sbb
lret
stc
jb
and
int
int3
xchg
imul
add
stc
jb
add
rep
push
mov
xchg
ret
add
add
adc
add
xchg
inc
add
add
add
aas
stc
jb
add
inc
xlat
jno
add
stc
jb
add
dec
add
jb
cmpsl
mov
das
push
add
push
push
mov
xchg
ret
add
add
sub
test
adc
add
jb
add
pushf
mov
stc
jb
add
add
insl
daa
jnp
push
mov
xchg
ret
int3
lcall
repz
bound
je
push
mov
add
add
hlt
add
test
add
add
add
sbb
pop
stos
push
nop
jmp
out
xor
add
adc
lahf
and
push
mov
xchg
ret
add
jb
int3
add
add
cmpsl
gs
and
stc
jb
add
xor
pusha
add
stc
jb
dec
add
dec
fs
mov
push
mov
xchg
ret
add
aas
push
nop
jmp
add
adc
sbb
add
stc
jb
cmpsl
sbb
add
add
arpl
add
push
mov
xchg
ret
add
stc
jb
add
push
add
mov
lea
stc
jb
mov
add
jl
mov
jmp
add
jmp
loopne
jb
jno
dec
insl
add
nop
mov
push
inc
add
aas
mov
stc
jb
inc
int3
add
add
and
dec
add
stc
jb
sbb
add
add
jmp
jb
add
inc
imul
add
int3
int3
or
dec
add
mov
xchg
ret
add
cmpsl
inc
adc
arpl
mov
push
mov
xchg
ret
cmpsl
dec
add
je
ret
stc
jb
add
pop
add
mov
stc
jb
add
mov
imul
add
xlat
add
jmp
cmpl
add
xor
add
out
stc
jb
and
sub
jne
push
mov
xchg
ret
xchg
add
stc
jb
add
hlt
cli
add
arpl
nop
jmp
add
add
add
int3
add
stc
jb
xor
add
dec
arpl
add
adc
push
push
mov
xchg
ret
inc
and
add
mov
stc
jb
lahf
xlat
hlt
dec
add
adc
out
call
insl
xor
addb
push
mov
push
outsb
add
and
lea
xchg
cli
pushl
xlat
stc
jl
idiv
jb
insl
mov
cmpsl
add
add
leave
push
mov
xchg
ret
in
add
mov
call
add
add
test
test
jb
int
add
jle
incl
stc
or
add
add
push
aad
xor
push
mov
xchg
ret
add
add
jmp
inc
add
hlt
add
push
mov
xchg
ret
add
add
xor
std
xchg
stc
jb
xlat
inc
push
stc
orl
and
stc
jb
add
add
in
sub
stc
jb
xlat
adc
add
and
add
aaa
repz
incl
rolb
dec
adc
jmp
nop
jmp
lahf
jno
adc
iret
ror
stc
jb
mov
inc
jge
lahf
les
dec
call
stc
jb
add
push
stc
jb
jno
or
pop
mov
nop
jmp
cmpsl
lret
push
inc
sub
jb
add
add
cmpsl
add
jb
add
xlat
mov
imul
add
add
xlat
add
sbbb
add
add
adc
add
xor
add
push
add
xchg
add
jge
add
jge
iret
mov
stc
jb
jno
add
add
stc
jb
mov
dec
lahf
add
mov
nop
jmp
das
das
add
add
push
data16
fimull
andb
incl
arpl
cld
mov
stc
jb
xor
add
add
mov
fwait
and
nop
jmp
subl
ljmp
or
add
xlat
insl
lcall
mov
xchg
ret
lret
add
rcrb
jmp
int3
lods
dec
int
add
cs
stc
jb
insl
lahf
das
add
adc
cmpl
nop
jmp
add
push
mov
xchg
ret
add
jno
xchg
xor
cmp
nop
jmp
cltd
data16
jmp
popa
addb
sarb
inc
and
nop
jmp
adc
add
mov
stc
jb
push
inc
and
mov
out
pop
pop
stc
jb
add
imul
add
stc
jb
add
icebp
nop
jmp
in
add
mov
push
mov
xchg
ret
cmpsl
xchg
xchg
add
xorb
decl
xchg
jno
add
xchg
mov
in
add
xor
notl
inc
adc
and
add
add
jb
xchg
add
das
mov
nop
jmp
dec
das
mov
cmp
add
jb
inc
add
xor
xor
test
cmc
stc
jb
mov
add
in
add
nop
jmp
add
mov
insl
push
add
jp
pushl
stc
jb
cmpsl
shlb
add
mov
stc
jb
xlat
add
mov
push
mov
xchg
ret
xchg
add
sub
add
stc
jb
add
jb
add
insl
rclb
jl
lahf
mov
stc
jb
inc
add
mov
jb
add
add
add
arpl
adcb
add
flds
cld
stc
jb
dec
or
mov
xchg
stc
jb
add
xlat
add
xchg
adc
addb
popa
nop
jmp
jl
add
addl
ja
inc
add
arpl
mov
push
mov
xchg
ret
rclb
stc
jb
add
add
jno
add
ret
dec
push
nop
jmp
insl
add
dec
jno
xchg
add
jne
icebp
push
stc
jb
inc
add
int3
add
hlt
imul
stc
jb
cmpsl
push
cmpsl
xchg
mov
jb
add
jmp
adc
add
stc
jb
das
arpl
mov
in
mov
push
mov
xchg
ret
dec
xchg
add
jecxz
sub
jb
inc
jno
dec
xlat
push
das
add
xor
add
stc
jb
mov
mov
add
mov
jb
add
arpl
orl
mov
sub
jb
mov
add
xchg
icebp
call
incl
add
push
push
push
push
mov
xchg
ret
imul
xor
stc
jb
add
add
call
stc
jb
add
add
popa
add
mov
xchg
ret
add
jno
xor
add
stc
jb
inc
hlt
add
jb
jne
add
jmp
int3
data16
pop
jmp
or
incl
cltd
sbbl
sbb
inc
push
add
stc
jb
cli
xlat
add
pop
lea
push
mov
xchg
ret
add
lds
add
add
jb
add
cli
add
bound
pop
pusha
push
mov
xchg
ret
int3
add
add
jne
mov
stc
jb
rolb
lcall
add
stc
jb
add
mov
nop
jmp
add
and
add
push
mov
xchg
ret
int3
add
imul
add
xchg
ret
jl
inc
xchg
enter
nop
jmp
add
add
jno
lea
push
mov
xchg
ret
int3
add
nop
jmp
jl
int3
add
add
add
xchg
jmp
jae
pushl
adc
add
add
rclb
nop
jmp
mov
adcl
addr16
add
arpl
xor
stc
jb
add
add
je
push
call
jb
inc
xlat
insl
add
stc
aas
xor
stc
jb
int3
or
add
xchg
int3
les
dec
push
stc
jb
add
add
add
lahf
jo
jb
stc
jb
add
or
add
jb
xlat
add
pop
ss
lods
nop
jmp
out
jno
add
in
add
and
stc
jb
add
jmp
push
push
mov
xchg
ret
cmpsl
add
cmpsl
jmp
jb
hlt
or
les
daa
scas
push
stc
jb
lods
add
add
push
cld
inc
add
xchg
dec
add
fistl
jb
or
push
xlat
xor
das
add
xor
inc
add
add
dec
add
stc
jb
add
imul
aaa
cmp
sbbb
lcall
add
cmp
sbb
add
xlat
sbb
add
mov
add
stc
jb
ror
dec
xchg
data16
xor
nop
jmp
xchg
dec
mov
addb
or
jmp
lahf
hlt
cltd
add
mov
stc
jb
jmp
sbb
jb
dec
lods
add
add
mov
push
mov
xchg
ret
cmpsl
inc
add
add
stc
jb
add
add
insl
xor
stc
jb
add
add
add
adc
lods
mov
nop
jmp
jno
add
insl
add
call
add
jno
add
cmp
mov
xchg
ret
inc
mov
pop
adc
pusha
fldl
xchg
ret
jge
add
sti
push
stc
jb
hlt
pop
jno
add
addl
in
stc
jb
jno
jmp
jmp
xlat
jge
xlat
add
out
dec
push
mov
xchg
ret
add
sub
incl
add
insl
add
xlat
sar
pop
jne,pt
stc
jb
xchg
lahf
stc
ss
sbbb
jmp
flds
jo
fisttpll
test
jb
xor
add
test
nop
jmp
hlt
add
in
pushf
xchg
stc
jb
lods
add
pop
push
nop
jmp
cmpsl
dec
jl
xchg
insl
xlat
dec
add
sar
sbb
incl
dec
add
add
xlat
repnz
popa
add
jb
add
add
dec
add
add
ss
into
call
stc
jb
add
cmpsl
jge
dec
dec
nop
jmp
lcall
cli
adc
stc
jb
orl
lods
cmp
nop
jmp
cli
pop
add
add
lea
stc
jb
lods
push
lahf
stc
add
push
mov
xchg
ret
add
pop
push
mov
xchg
ret
push
add
lret
add
jmp
mov
xlat
jl
add
shl
fsubrs
stc
jb
arpl
add
add
testl
nop
jmp
int3
xlat
mov
loope
pop
fimuls
jb
pop
cltd
add
add
int3
push
stc
jb
int3
dec
xlat
orl
popa
push
push
stc
jb
lcall
mov
jb
add
add
mov
dec
rep
stc
jb
add
add
add
xlat
cmp
add
jb
dec
add
int3
push
add
mov
push
mov
xchg
ret
imul
jge
add
and
add
in
push
push
mov
xchg
ret
add
add
loope
jp
repz
jb
xchg
jmp
pop
sbb
popa
add
jb
or
mov
adcb
add
add
add
mov
cmpsl
out
inc
add
xlat
das
sub
mov
push
stc
jb
xor
jmp
jne
stc
jb
insl
sbb
in
test
nop
jmp
add
add
inc
inc
int3
add
jb
jno
add
add
mov
push
mov
xchg
ret
xchg
add
add
mov
in
add
mov
cli
lahf
addb
mov
ficoml
in
pop
pop
push
add
jnp
add
test
add
in
add
mov
push
add
sub
mov
hlt
add
orb
adc
subb
incl
add
add
push
add
std
add
stc
jb
jge
add
add
stc
jb
add
arpl
and
jb
inc
add
add
pop
rep
nop
jmp
add
sbbl
add
stc
jb
add
int
pop
add
nop
jmp
add
add
lcall
and
jmp
lret
add
adc
nop
jmp
mov
add
sti
movzwl
stc
jb
xlat
adcl
jb
add
lods
jno
inc
and
ret
stc
jb
lcall
sbb
popa
stc
jb
int
adc
push
icebp
aaa
mov
mov
xchg
ret
inc
add
stc
jb
add
mov
add
fwait
mov
push
mov
xchg
ret
inc
int3
cli
cmp
int
inc
add
add
mov
stc
jb
add
arpl
add
jb
mov
add
jb
add
imul
test
or
ljmp
add
in
xlat
les
addb
sbb
cmpb
add
in
add
add
add
add
stc
jb
add
add
add
mov
xchg
ret
add
out
mov
nop
jmp
add
dec
add
xor
mov
xorb
jno
int3
add
sub
decl
inc
add
add
jecxz
push
stc
jb
add
add
add
add
into
mov
nop
jmp
adcl
mov
movswl
nop
jmp
add
add
sub
or
incl
add
xor
mov
xchg
ret
xchg
add
arpl
jb
xchg
add
add
nop
jmp
xlat
add
add
add
sbb
adcb
add
add
in
stc
jb
push
in
add
pushl
push
mov
xchg
ret
xlat
int3
xchg
mov
call
stc
jb
xlat
cmpsl
add
cmp
sar
sbbb
add
add
add
dec
lods
shll
add
stc
jb
add
jge
cltd
add
jmp
fcos
pushl
mov
pop
lea
nop
jmp
cli
add
mov
lcall
loop
call
add
add
call
nop
jmp
sbb
cli
and
mov
stc
jb
dec
cltd
add
out
mov
stc
jb
shlb
add
ret
mov
mov
push
mov
xchg
ret
insl
add
lea
stc
jb
int3
add
add
nop
jmp
add
add
pushf
mov
stc
jb
add
hlt
out
mov
nop
jmp
jno
push
mov
das
add
push
push
mov
xchg
ret
add
cmpsl
add
pop
push
push
mov
xchg
ret
add
jmp
dec
stc
jb
cmpsl
adc
jge
mov
loope
jmp
mov
int
add
outsl
jne
nop
jmp
add
shl
push
add
push
mov
xchg
ret
add
cmp
stc
jb
add
lods
add
and
addb
push
push
mov
xchg
ret
add
xchg
lcall
push
mov
xchg
ret
mov
jl
inc
jb
je
stc
jb
add
inc
mov
jb
add
pop
push
add
or
popa
add
mov
xchg
ret
addl
in
stc
jb
add
add
add
jb
int3
add
xchg
test
rep
nop
jmp
mov
add
jl
add
stc
jb
data16
xor
hlt
lcall
mov
cmpsl
lods
sbb
cmpsl
jl
add
push
stc
jb
inc
dec
inc
lahf
xlat
scas
add
stc
jb
and
add
add
ret
in
inc
add
das
add
add
mov
push
mov
xchg
ret
add
cltd
lods
push
push
mov
xchg
ret
add
jmp
rclb
faddl
xchg
ret
add
adc
test
jb
add
add
add
stc
jb
xor
mov
jnp
mov
add
lret
add
lods
cmpsl
dec
inc
push
mov
xchg
ret
xlat
add
and
xchg
xor
add
nop
jmp
lcall
xchg
filds
cmc
jmp
and
pop
xchg
inc
in
mov
stc
jb
adc
jno
mov
pop
push
mov
xchg
ret
add
add
shl
push
mov
xchg
ret
pop
add
xor
mov
stc
jb
xlat
int
add
add
int
pop
nop
jmp
add
add
cmpl
lock
decl
mov
leave
shr
stc
jb
inc
add
xchg
add
mov
add
mov
xchg
ret
xlat
inc
add
je
push
stc
jb
int
lods
add
dec
xlat
data16
mov
stc
jb
adc
arpl
inc
or
jb
out
mov
and
mov
stc
jb
shrb
push
mov
push
cltd
and
stc
jb
add
int
inc
dec
out
mov
stc
jb
add
pop
add
insl
cmp
jmp
inc
add
xor
cli
add
xchg
lret
mov
xchg
ret
xchg
add
add
pusha
add
nop
jmp
arpl
mov
dec
inc
and
in
lea
nop
jmp
xor
add
jmp
stc
in
incl
add
mov
stc
jb
add
add
push
add
add
push
mov
xchg
ret
add
out
les
out
mov
stc
jb
hlt
add
push
mov
xchg
ret
dec
jl
add
mov
add
push
mov
cwtl
xlat
mov
add
add
add
pop
cmp
ss
xchg
sub
les
sbb
sbb
imulb
addb
push
lahf
xor
and
cli
pop
fimuls
out
cmp
out
or
mov
and
xor
lock
loope
les
jg
mov
mov
pop
into
sbb
add
cld
call
sbb
add
cmp
imul
lcall
rcrb
mov
add
mov
add
dec
in
rolb
cs
repz
loopne
jnp
jecxz
addb
aaa
ret
pushf
push
inc
arpl
arpl
lret
pushf
push
add
movsl
shrb
add
jmp
cmp
lahf
dec
outsb
arpl
ljmp
lds
push
xchg
jmp
fld
add
gs
sub
out
jmp
loopne
pop
xchg
test
and
lcall
ret
cmp
push
arpl
jmp
es
into
scas
iret
stc
stos
jg
out
ret
pop
jg
add
dec
cmp
sub
add
cmp
fcmovnu
lods
in
mov
inc
add
addr16
push
xchg
stos
xor
in
cmpsl
in
push
subl
push
jo
cltd
sbb
mov
xor
pushf
mov
je
or
outsb
add
cld
lahf
add
xor
outsl
bswap
jo
addb
repz
test
inc
add
sti
dec
lea
rorl
je
repz
xchg
and
insb
mov
push
add
or
daa
mov
imul
arpl
or
xor
test
sahf
ret
jmp
mov
mov
xor
ret
lods
mov
add
cmp
dec
push
sub
sbb
and
shll
add
mov
popf
push
jno
add
data16
xor
rolb
mov
xchg
cwtl
mov
add
outsb
ss
sub
iret
icebp
pushf
addb
call
in
push
cwtl
push
cmp
add
pusha
add
scas
push
jp
jae
mov
and
test
popa
add
dec
repnz
add
fcoms
lds
stc
les
into
mov
fildll
lods
mov
add
xchg
int3
jne
punpcklwd
xchg
je
add
add
jo
addl
xor
adcl
add
std
push
mov
pop
jl
xlat
pop
jae
or
push
add
sbb
add
push
jl
iret
sub
inc
add
mov
mov
daa
xlat
mov
add
das
int3
dec
adc
jo
add
mov
jmp
and
jno
outsb
and
aas
in
push
mov
idivb
mov
adc
dec
ja
and
outsb
movsb
and
add
xchg
jnp
test
imul
bound
adc
add
jge
repnz
dec
test
sub
inc
add
sbb
xchg
mov
add
jnp
nop
inc
or
sti
jle
xor
add
add
cltd
lahf
dec
add
sbb
add
das
rorl
add
push
nop
stc
adc
les
jns
ja
xor
add
outsb
es
aas
arpl
mov
add
cmp
mov
mov
jbe
mov
jne
cmp
loopne
pop
scas
mov
insb
iret
es
dec
clc
and
repz
jbe
add
cmpsb
jno
add
ret
add
iret
inc
add
movb
pop
fcmovnbe
dec
cmp
add
mov
fs
and
aas
xor
sbb
movb
int3
shlb
add
add
jne
dec
mov
mov
fucomp
or
insl
insb
and
mov
shlb
push
aam
lcall
data16
inc
pop
shl
jnp
out
pop
cltd
outsb
ja
or
pusha
add
inc
scas
movsb
cli
inc
add
xchg
push
into
xchg
mov
cmpsb
cmp
scas
movb
cmp
jl
add
xor
std
inc
mov
inc
add
xchg
mov
adc
jle
ret
inc
add
push
cli
mov
outsl
mov
data16
and
pop
dec
std
and
int
sbb
out
push
popa
ljmp
addr16
addb
add
dec
sbb
pop
shll
aaa
sub
dec
push
and
mov
add
mov
jbe
fists
jp
add
dec
ss
rcrb
sbb
cmpsl
cmc
cli
test
or
push
pop
sub
jb
bound
jns
ja
call
mov
int3
dec
insl
or
into
mov
cld
xor
clc
daa
mov
push
mov
mov
add
and
add
add
push
pop
ret
sbb
iret
incl
sbb
add
cmp
daa
inc
lods
clc
lods
cli
jmp
gs
shl
bound
scas
mov
inc
add
shll
mov
int
add
or
inc
mov
stos
mov
lds
mov
fists
sahf
mov
scas
sub
shrl
jo
add
mov
dec
xchg
enter
add
xlat
pop
dec
test
add
mov
mov
pop
out
mov
mov
fldt
loope
xor
aaa
lods
sbb
mov
ret
xor
pop
jae
mov
push
scas
lret
lahf
imul
aad
fisttpl
arpl
add
mov
cmp
call
arpl
add
cmp
pushl
dec
and
pop
ret
lea
lcall
add
xchg
jne
pop
fstpt
xchg
sbb
cwtl
test
adc
mov
daa
clc
arpl
dec
xchg
in
in
add
or
or
jae
gs
jae
mov
sbbl
sub
fisubrl
cmp
popf
inc
call
inc
call
add
out
loopne
add
pushf
fmull
dec
dec
add
shll
pusha
add
push
cmp
repnz
leave
and
into
mov
add
lcall
push
fstps
sbb
inc
add
pop
fs
mov
scas
xchg
fwait
mov
jae
scas
adc
lds
jge
pop
cld
inc
add
enter
cltd
jbe
das
xor
mov
xor
fimull
cmp
pop
fcoml
jmp
shrb
jmp
bound
mov
or
xchg
mov
sbb
fdivs
pop
aam
bnd
adc
rcl
jp
xchg
cmc
and
out
leave
mov
add
rolb
out
push
xchg
or
in
ret
cmpsb
xlat
xchg
push
clc
jl
pop
mov
shlb
jb
lods
in
int3
das
loopne
popf
add
test
push
movsl
ljmp
xchg
push
push
cmpl
fcoms
jns,pn
cmpsb
imul
or
add
enter
jg
and
pusha
add
add
stc
sarb
std
jp
push
add
into
sub
or
add
add
leave
cmp
iret
in
mov
xor
ljmp
pop
sbb
pop
movsw
nop
xor
add
and
int3
xor
loope
ljmp
in
inc
loop
adc
insl
enter
push
xor
mov
jecxz
add
in
xchg
push
mov
bound
hlt
ret
sub
sbb
lahf
mov
insb
sub
mov
insl
sarl
in
or
fninit
jae
mov
jmp
pop
sbb
iret
cltd
adc
inc
add
mov
sbb
test
lods
xor
sub
cli
dec
pop
fwait
add
dec
scas
js
div
test
lcall
or
add
cmp
sbb
ret
jecxz
mov
mov
mov
xchg
fnsave
arpl
mov
and
add
andl
cmc
mov
or
push
addb
xor
cs
adc
dec
sbb
jl
lahf
das
dec
fs
addl
fcoml
lea
adc
push
test
int
outsb
jae
ds
xchg
adc
mov
test
mov
leave
mov
push
mov
jp
fbld
add
movsl
sub
hlt
adc
loope
into
mov
loop
mov
lahf
loop
scas
out
addb
push
jnp
cmpsb
fwait
and
jne
lods
xbegin
sub
adc
cwtl
bound
pop
fiaddl
fistpll
sbb
xor
jmp
xchg
insb
push
test
xchg
test
lret
mov
std
adc
add
cmpsb
pop
mov
test
mov
addb
rolb
sbb
xchg
mov
or
add
jb
mov
pop
dec
cmc
ljmp
lahf
fbstp
es
call
leave
lock
enter
leave
xor
fdivr
jecxz
dec
nop
inc
sbb
add
adc
add
xchg
dec
addb
movsb
fildl
xchg
addb
or
test
imul
outsl
mov
dec
shrl
outsl
popa
xchg
push
int3
cmp
addr16
sbb
lea
cltd
jbe
push
mov
jl
xor
std
sbb
add
aad
adc
jo
cltd
xchg
jnp
inc
dec
sbb
cwtl
loopne
jno
das
out
add
out
cmpsl
test
mov
add
dec
xlat
stos
ss
loop
add
pop
inc
add
pop
bnd
cmp
repnz
movl
orl
loop
mov
and
push
push
push
shll
sbb
add
push
mov
in
dec
hlt
jnp
add
int3
mov
out
mov
rolb
dec
mov
je
icebp
push
fs
ja
adc
mov
pop
mov
pop
push
mov
fstpl
daa
sub
negl
mov
push
add
lret
sbb
cld
inc
add
mov
inc
add
add
jo
mov
add
lret
jae
and
mov
add
pop
sbb
jl
mov
clc
lahf
sbb
lods
mov
add
pop
pop
fwait
mov
inc
add
sbbl
pop
jle
sub
call
scas
std
jle
adc
xchg
xor
dec
in
pop
lods
jno
push
xchg
add
shr
pop
or
mov
leave
dec
lret
call
mov
pusha
add
daa
mov
cld
popf
jmp
add
dec
int
jp
lcall
add
add
add
add
jmp
sbb
pop
jecxz,pn
aad
cmp
add
mov
bound
adc
mov
shrl
call
xchg
scas
test
loop
mov
ljmp
clc
je
cmp
add
std
out
mov
pop
pop
and
cmp
adc
mov
dec
jne
rcrb
leave
xchg
or
and
xchg
aam
clc
xchg
and
nop
mov
push
arpl
jecxz
cs
les
mov
mov
add
scas
lret
push
jnp
cmp
sub
or
movsb
iret
je
insb
popa
incb
jle
popf
mov
add
fstp
mov
fs
fstp
jbe
cs
add
testl
imull
mov
cli
movsl
xlat
loope
push
not
and
fisttps
adc
inc
add
add
and
rep
and
js
aaa
mov
dec
out
ds
cmpl
dec
inc
add
dec
fistl
fistps
cli
icebp
cmpsl
xorl
cwtl
or
add
sbb
xchg
fadd
loope
decl
add
test
insl
loopne
add
xor
lods
mov
call
es
mov
lahf
jecxz
mov
scas
jb
loope
jl
mov
stos
xchg
enter
addb
clc
fisubrl
pop
xor
scas
into
mov
xchg
testl
inc
add
push
pushf
jmp
clc
sbb
add
jg
dec
cwtl
jle
mov
cmp
aaa
fisubrl
or
jmp
mov
push
add
loopne
add
jae
mov
mov
pushf
pop
mov
or
xchg
pop
int
sti
clc
pop
out
push
test
add
push
sbb
add
xlat
repnz
xchg
pop
push
sbb
and
cmp
inc
ficoms
mov
sub
push
mov
sti
adc
ja
xor
jae
repz
add
mov
add
xor
test
cmpsl
xchg
cmp
les
push
xor
mov
in
mov
sub
xchg
lret
add
mov
dec
test
add
dec
cmp
fiaddl
ss
lea
sbb
adc
insb
dec
xchg
mov
pop
fmulp
cmp
mov
add
add
cmp
sbb
stos
out
and
xchg
out
inc
xchg
out
pushf
mov
repz
dec
ja
mov
dec
xlat
ret
mov
push
sahf
test
fcomp
mov
mov
jnp
inc
jae
xor
add
xchg
or
push
mov
add
xor
inc
addb
jmp
add
cmp
or
fnstsw
push
or
addr16
sub
cmp
xchg
mov
pop
rorl
xchg
icebp
pop
cmp
mov
aas
movb
jns
jge
or
add
pop
in
fnstenv
sarb
movsb
cltd
push
add
andl
mov
add
adc
inc
add
push
rcl
jmp
inc
mov
in
addb
mov
mov
popa
push
repz
pop
mov
aam
loope
aad
dec
mov
cmpsl
inc
add
inc
add
sbb
leave
mov
push
mov
rolb
or
lods
mov
lcall
mov
pushf
mov
dec
sub
add
in
inc
xchg
or
fcmovnu
rolb
add
dec
pop
xor
inc
add
daa
inc
add
out
push
nop
testl
add
jnp
cmc
loope
fwait
loopne
imul
adc
lods
mov
repnz
stos
pop
mov
add
and
jge
scas
sbbl
cmp
es
icebp
sub
cld
rorl
xor
inc
lds
imul
xchg
pushl
push
int
ja
mov
mov
add
jnp
jle
mov
call
testb
addr16
add
add
and
in
lahf
sub
mov
add
bnd
inc
sbb
jmp
inc
push
mov
icebp
mov
les
stos
sbb
repnz
push
add
sub
orl
jmp
add
popf
mov
rolb
pop
movsb
out
jge
notl
nop
ds
insb
fcomps
sub
add
and
add
mov
test
xor
loop
add
inc
add
loop
jge
shll
xchg
mov
lcall
testl
mov
push
xor
loop
mov
lods
loopne
or
and
add
add
insb
cld
jbe
or
pop
push
add
clc
add
ljmp
xchg
cld
add
stc
daa
push
xlat
loop
mov
inc
arpl
sbb
cmpsb
push
dec
insl
mov
and
ret
fdivrl
leave
fcomi
dec
enter
adc
and
adc
jbe
pop
mov
ret
in
or
cmc
push
aas
leave
shll
rolb
and
dec
dec
jg
adc
aad
int
inc
add
mov
xor
mov
add
in
scas
out
adc
ds
jp
jno
leave
dec
dec
mov
jne
push
lcall
push
jmp
add
daa
xchg
sbb
popf
xor
test
stos
fcompl
insl
iret
dec
fsubp
dec
xor
add
mov
fwait
sarb
inc
jle
stos
movsb
pop
shlb
add
xor
jb
cmp
nop
stos
in
cmc
jns
in
rolb
pop
loopne
push
gs
add
rcll
bnd
dec
push
pushf
cmp
add
movsl
sub
or
hlt
fmul
xchg
punpckhbw
fstpl
push
loopne
icebp
in
sarl
pop
lret
xchg
sub
ds
scas
pop
mov
loop
xor
fadd
int3
cmp
cli
dec
lahf
inc
lcall
ss
mov
jns
loope
pop
add
inc
clc
jns
cwtl
and
ss
sahf
ja
mov
mov
add
pop
fwait
dec
jl
inc
add
inc
incb
cmc
mov
popa
std
pop
push
push
add
inc
bound
cwtl
imul
push
pop
popa
push
xor
add
dec
and
push
push
push
mov
add
jge
repz
add
scas
loope
add
dec
lds
mov
add
mov
pop
nop
adc
or
mov
int3
or
sbb
add
add
add
sbb
add
cmp
push
mov
out
and
jae
xchg
daa
xor
test
leave
test
mov
add
lret
and
ret
mov
mov
xchg
mov
jne
sub
push
push
and
sbb
fldcw
xchg
test
and
cmp
inc
and
sub
icebp
mov
loopne
leave
lods
pop
push
clc
or
pop
xchg
arpl
add
push
add
shlb
sub
mov
cmc
cmp
mov
cmp
into
mov
pop
pop
dec
mov
sub
ret
les
mov
inc
add
adc
and
add
add
cmp
add
dec
or
xor
push
dec
fsin
cmpsl
in
adc
sub
aad
add
leave
outsl
lods
sbb
lods
jbe
cwtl
jecxz
cmpsb
and
movsb
dec
int3
addb
jle
add
and
movsb
adc
sub
pop
mov
cmp
rorl
into
lcall
insb
cmp
xchg
jb
pop
jmp
inc
movb
xchg
jp
int
test
mov
push
out
cmp
lods
dec
insb
hlt
sbb
add
gs
daa
cmp
daa
pop
mov
dec
sub
add
add
mov
sbb
lds
in
outsl
nop
bound
loopne
pop
jae
es
add
gs
bnd
or
rcrb
and
push
add
sbb
test
fmuls
jbe
fildl
aam
clc
dec
dec
mov
mov
or
lcallw
jae
push
in
jns
and
es
sbb
add
test
add
add
fadds
adc
lret
xchg
add
xchg
lahf
pop
sarb
cmp
popa
hlt
loop
jae
inc
add
iret
pop
inc
clc
add
in
add
add
ds
fstpt
sub
mov
add
add
adc
fidivrs
lds
rolb
sbb
cli
insb
clc
addl
cmp
fcmovnbe
mov
mov
mov
adc
in
cs
add
adc
loope
ja
cs
add
pop
ja
add
ds
nop
jle
push
xchg
testb
sbb
mov
push
xchg
pop
xchg
and
sbb
add
leave
jl
xchg
pop
loop
popa
je
addb
add
add
dec
out
inc
add
test
push
repnz
pop
mov
lgs
push
test
neg
pushf
ret
mov
loopne
arpl
xlat
faddl
mov
shl
out
imul
fstl
dec
rol
add
push
pop
add
out
cld
in
adc
stos
add
xchg
or
mov
jmp
inc
add
insb
jmp
int
pop
js
stc
pop
dec
cltd
jl
icebp
call
insl
ret
test
sub
jne
add
adc
insl
adc
inc
cmp
bound
mov
mov
xchg
cmpsl
push
pushl
xlat
xor
add
jl
rolb
ret
xor
nop/reserved
jnp
mov
pushf
and
mov
or
pop
and
xor
imul
sub
imulb
gs
push
and
and
xchg
cmc
mov
fwait
pop
iret
mov
sub
mov
lret
scas
or
sub
dec
adc
iret
xor
out
mov
mov
mov
add
pusha
add
add
scas
call
xor
or
imul
jecxz
lcall
xor
mov
push
xchg
in
call
sub
sub
gs
or
xchg
mov
enter
fwait
pop
lahf
mov
push
push
stos
adc
adc
push
or
jecxz
and
sub
inc
add
outsl
dec
in
mov
int3
xchg
movb
imulb
pop
rolb
lods
outsb
test
mov
jmp
push
scas
inc
add
inc
add
sub
cmp
lcall
pop
addb
or
pop
lcall
mov
shl
xchg
nop
ficompl
loopne
aam
mov
mov
and
pop
xorl
sbb
and
inc
add
hlt
in
addb
enter
xor
and
dec
and
fs
in
jecxz
cmp
cmp
rcrb
sub
jno
sahf
or
popf
cmp
add
cwtl
shrb
pop
sbb
ss
out
jge
adc
idivl
pop
stc
add
movsb
pop
sbbl
ljmp
xchg
mov
jns
cmpsl
xchg
cmpl
fisubs
jns
dec
jb
add
ja
lds
adcl
mov
test
inc
xor
mov
mov
adc
in
dec
mov
add
lods
lds
mov
jno
clc
cmpsb
mov
add
inc
add
mov
add
out
mov
addb
shr
push
pop
movsl
xchg
aad
cwtl
and
les
icebp
xor
xor
pop
xor
fwait
in
sti
aam
push
lret
pop
or
mov
test
add
pushf
sub
dec
shll
aam
adc
mov
sbb
dec
stos
fistpll
inc
add
sahf
ret
lds
jecxz
mov
into
add
scas
arpl
xchg
cld
xlat
xor
adc
mov
push
pop
pop
adc
enter
mov
inc
add
test
js
je
outsl
or
fcmovbe
xor
addb
andl
sub
add
leave
push
mov
cs
loop
jecxz
add
or
mov
jb
imul
aad
or
sbb
or
fdivl
inc
xchg
cmp
sub
aas
cmp
cli
loope
test
ds
daa
mov
les
inc
push
aaa
jmp
push
cmp
rcrb
or
and
aam
push
lea
adc
jl
cmpsl
lds
push
add
ljmp
dec
inc
add
mov
dec
or
std
popa
and
adc
and
popa
ja
cmp
loope
and
push
pop
pop
stos
jae,pt
aaa
scas
pop
mov
push
mov
add
iret
jg
sub
add
adc
add
sti
movsl
dec
lret
and
inc
outsb
push
add
popw
decb
ljmp
add
fucomip
in
add
xchg
inc
push
cmp
fldenv
and
inc
fdivs
pop
or
movsl
cltd
and
rolb
flds
imul
insb
jbe
add
or
add
inc
scas
adc
popl
mov
mov
xor
jae
sti
stos
cmp
sub
lods
jge
test
jns
test
pop
sbb
iret
sbb
in
lahf
jne
cmc
dec
cmp
arpl
or
pushf
xchg
sub
sub
or
mov
out
test
add
jb
lods
rclb
lock
dec
mov
call
leave
push
mov
dec
call
in
test
xor
pop
das
add
mov
mov
mov
addr16
out
mov
fs
mov
jns
add
push
pop
jg
mov
jge
add
mov
jmp
lcall
push
mov
gs
xor
jle
sbb
cmp
jnp
jmp
add
mov
cltd
mov
xchg
scas
mov
and
dec
fadds
sbb
and
add
mov
int
mov
testb
in
and
push
pusha
add
dec
mov
sub
push
add
jb
add
lods
hlt
cld
fdivrl
add
inc
add
test
pop
icebp
sbb
movsb
add
push
adc
cwtl
sbb
add
mov
cli
jge
mov
aaa
pop
xchg
sahf
and
icebp
pop
cld
fsub
mov
sti
pop
push
cwtl
jmp
xchg
dec
test
add
mov
dec
xchg
mov
nop
movsb
dec
and
sbb
fisttps
test
stos
xchg
jp
call
xchg
xchg
xlat
inc
add
xor
add
lock
insb
pop
xor
stos
and
iret
xchg
adc
jo
scas
divl
scas
pop
nop
clc
or
or
jnp
repz
mov
dec
das
lods
pop
leave
es
repnz
jbe
into
sub
inc
add
xor
sub
scas
xchg
ret
add
cmp
aas
inc
add
inc
add
add
scas
jb
sahf
jno
popf
or
frstor
adc
popf
fnstsw
mov
std
icebp
aam
test
dec
cmp
cmpsl
mov
or
cmpsl
xchg
dec
lods
ss
adc
outsb
mov
or
clc
je
lea
dec
sbb
fwait
gs
sahf
les
push
sub
mov
xor
push
sub
sub
iret
addb
push
rolb
sbb
imul
int
or
sbb
ss
je
ret
pop
pop
or
daa
sub
cwtl
movb
leave
dec
mov
push
add
sub
xchg
sub
or
adcl
inc
lods
test
out
decl
stos
lds
movb
lret
call
push
add
in
test
popf
divb
xlat
pop
jle
add
ss
int3
flds
add
aas
mov
movsb
es
int3
clc
aaa
push
push
adc
rolb
pusha
add
shrb
fldenv
mov
adc
scas
aam
mov
and
adc
repnz
ljmp
xor
repz
ret
add
call
je
dec
push
popa
cwtl
push
push
add
lods
addr16
bound
adc
es
jp
mov
mov
mov
mov
or
and
add
out
sahf
scas
call
ss
daa
mov
pop
rcr
mov
rolb
jmp
jns
cmp
cmp
dec
ret
ja
cmpsl
lretw
add
inc
add
addb
jmp
push
add
add
push
ret
add
mov
lahf
dec
shlb
mov
xchg
cmp
add
sub
ffreep
std
mov
add
xchg
int3
out
iret
repz
pop
add
sar
stos
jns
dec
dec
repnz
or
movsb
pop
mov
add
add
mov
enter
add
inc
xlat
insb
dec
xchg
cmp
or
pusha
add
roll
push
add
loopne
fs
aaa
test
outsb
adc
punpcklwd
pop
push
shlb
cwtl
lock
push
in
jb
sarl
sub
xchg
sarl
pop
xor
lahf
sbb
jmp
cs
ret
stos
repz
jl
sub
jl
push
xor
mov
mov
leave
addb
push
imul
adc
add
push
movb
insb
xor
lds
xor
push
sub
cs
movsb
jb
push
add
lds
add
cmp
jae
push
in
leave
insl
nop
or
or
or
jg
xor
sub
loop
test
movb
and
inc
add
mov
inc
push
ja
and
dec
lret
arpl
push
add
mov
daa
add
lret
cld
aad
or
ret
xchg
jg
add
add
pop
loop
add
mov
inc
add
test
bsf
int3
sub
sarl
adc
int3
jae
mov
leave
jle
subl
sbb
stos
insl
test
pop
movb
sbb
jle
pop
or
cli
add
pop
fcmove
cwtl
mov
aaa
roll
ret
cmc
outsb
cld
push
mov
fdivs
out
addb
or
aaa
shlb
adc
mov
pop
mov
fdivrs
inc
add
sbb
jne
add
sub
add
jmp
sub
mov
lods
cmpsl
mov
or
loope
add
add
add
pop
aam
add
lods
imul
repnz
push
dec
cltd
or
jne
imul
cltd
push
sbb
jns
pop
cld
test
pop
sti
iret
adc
jo
imul
add
cmp
mov
cmp
dec
rclb
mov
push
add
add
cs
mov
das
mov
add
gs
call
das
test
stos
loopne
repz
sub
test
xor
out
inc
dec
cmp
cmp
cltd
scas
arpl
add
cs
mov
mov
fdivrs
out
jnp
add
lock
push
fwait
into
fnstsw
cmp
xchg
sbb
add
xor
scas
hlt
xor
cmp
and
mov
lods
pop
mov
pop
fwait
pop
in
xchg
scas
xchg
fisubrl
in
repz
push
lcall
lret
inc
add
sbb
pop
data16
fmuls
lds
mov
ljmp
add
repnz
out
add
adc
testb
leave
aad
cli
dec
pop
lods
pop
lds
movsb
cmp
jle
add
inc
add
add
add
mov
push
cmp
xor
dec
fistpl
sub
jecxz
add
loope
add
mov
add
popa
add
in
dec
fsubrl
xchg
scas
arpl
addr16
rol
cmc
and
push
leave
lret
and
fidivrl
xor
cmp
dec
mov
je
mov
clc
sbb
add
fmull
outsb
pop
aas
inc
add
dec
bnd
js
sub
inc
js
fsubrl
push
xlat
in
into
repnz
fbld
xor
xor
das
xchg
rcrl
jl
jo
or
sub
cmc
hlt
aas
pop
or
hlt
mov
jmp
add
cmp
xchg
loope
adc
insb
int3
cmp
data16
add
jbe
adc
fldl
cmp
sbb
pop
ficoml
push
aam
jae
jmp
cmp
in
hlt
push
lahf
inc
add
loop
cmp
add
pop
dec
arpl
jne
jl
inc
add
jo
jl
cmp
test
pop
sub
cltd
cmp
inc
cmp
xchg
iret
lock
xor
mov
dec
js
sti
mov
add
fbld
in
aaa
cmpsl
out
iret
cli
add
test
ret
incl
outsb
cltd
inc
or
data16
xchg
sbb
push
and
and
xlat
test
xchg
jg
pop
cmp
mov
aas
sub
outsb
lcall
fsubrs
in
push
jnp
fists
adc
pushf
repnz
stc
pop
mov
sbb
out
enter
out
mov
inc
stc
and
mull
shrl
cltd
fucomi
rolb
inc
sub
lea
dec
lret
or
cmpsb
xor
ja
call
arpl
jno
dec
adc
shr
pop
jp
dec
mov
call
jbe
pop
and
mov
mov
jp
stos
or
pop
or
test
adc
ffree
add
cmc
dec
addr16
adc
pop
pop
cmpsb
mov
mov
repnz
mov
and
push
add
decl
in
add
jecxz
add
hlt
lret
ljmp
pop
inc
xor
mov
add
push
jnp
xchg
scas
bound
lods
xor
js
repnz
shll
addb
pop
test
add
in
xchg
out
scas
push
aam
mov
pusha
add
and
mov
jnp
xor
cmp
mov
mov
inc
add
lahf
dec
dec
sub
push
xchg
stc
or
and
in
add
inc
pop
fisubs
jne
lock
mov
sub
pushf
pop
push
rcll
fsubrs
lods
sbb
sahf
ss
js
add
sbb
int3
push
add
add
enter
xchg
mov
mov
in
dec
scas
xor
mov
dec
and
add
dec
sahf
test
add
xchg
imul
mov
out
xchg
add
mov
in
pop
fcomps
popf
push
in
jecxz
lret
and
ss
or
gs
loopne
rolb
je
add
add
adc
arpl
dec
lahf
jbe
sbb
adc
test
push
add
jmp
cwtl
nop
mov
mov
add
mov
adc
rcll
xchg
mov
or
dec
aad
gs
inc
add
sbb
aas
cltd
addb
mov
and
pop
ret
jge
out
xchg
nop
adc
js
add
jb
push
xchg
mov
rolb
add
je
sbb
mov
add
adc
aad
xchg
fwait
lret
stc
cwtl
dec
mov
xor
or
add
mov
add
jo
arpl
mov
jae
mov
push
sbb
cmp
push
mov
and
stc
lret
int
jbe
add
scas
dec
sbb
out
dec
arpl
lods
rolb
ret
mov
mov
cwtl
dec
inc
add
or
icebp
cs
jl
movb
pop
adc
arpl
inc
addr16
cmp
sub
cmp
shl
out
cmpsb
add
cmp
xlat
mov
popl
outsl
cmp
outsb
xlat
sbb
aas
cmc
mov
push
hlt
mov
pop
inc
add
pop
mov
add
cld
hlt
cld
sbb
test
and
in
add
or
mov
push
inc
add
scas
daa
adc
dec
xor
pop
and
hlt
push
dec
xchg
xchg
push
and
cmp
divl
add
xor
aas
fcom
mov
nop
pop
negl
jno
addr16
aaa
movsb
xor
mov
repz
cmpsl
push
and
cmpsb
push
addr16
xchg
push
add
push
call
xchg
jb
add
add
es
lods
ljmp
add
pop
add
add
jno
les
cwtl
mov
push
fwait
xchg
cmc
shll
sbb
xchg
mov
js
mov
mov
into
inc
cmpsl
inc
mov
inc
popf
arpl
fistpl
pop
faddl
aaa
popa
dec
xor
sub
sub
add
sub
adc
scas
nop
xchg
xor
pop
insb
adc
gs
dec
push
dec
repz
add
or
xchg
and
dec
loope
inc
inc
sub
sahf
push
push
xor
push
add
outsl
jb
and
push
fwait
movb
stos
popa
and
stos
or
lret
int3
mov
mov
icebp
fisubl
add
sub
mov
sbb
mov
stc
and
mov
add
ljmp
rolb
add
lods
dec
rcll
add
js
shrl
and
sbb
push
dec
sbb
pop
adc
out
cmp
add
insb
push
ja
fbld
sub
pop
ja
sbb
lret
daa
pop
cmp
shl
lods
lods
jl
les
add
icebp
xchg
setnp
xor
add
pop
int
aam
inc
jno
cmp
dec
sbb
sbb
jnp
icebp
aad
lea
in
mov
jle
bound
rcrl
sarb
rcl
dec
ret
pop
pop
mov
in
dec
dec
out
cld
ret
ds
xchg
cwtl
icebp
mov
pop
inc
rolb
add
mov
jo
out
add
ret
xor
mov
jle
and
mov
cmp
jns
clc
fcomi
insl
fwait
dec
mov
inc
add
pop
ds
jno
cmp
and
icebp
stos
in
xlat
add
popa
push
lock
xchg
call
add
inc
pop
push
pusha
add
adc
cli
pop
push
outsl
mov
js
pop
ljmp
mov
jb
sbb
cwtl
mov
inc
mov
mov
cmpsl
ret
fnstenv
sbb
lcall
add
mov
cmc
lret
addb
cltd
cmp
add
cmp
jo
xor
xchg
xor
pushf
cmp
add
out
outsb
sbb
add
dec
inc
sar
or
add
aaa
mov
jl
pop
jge
add
aad
pop
inc
fnstsw
push
add
add
xchg
pop
jp
dec
cmp
fabs
repz
mov
shl
mov
dec
and
stc
pop
mov
loop
mov
sbb
jnp
repnz
mov
out
add
lods
notb
popf
cmp
adc
and
or
jnp
fldenv
jge
push
je
pop
adc
and
bound
pop
or
jle
xorl
stc
sbb
mov
jmp
fwait
adc
jge
in
and
add
jnp
pop
jb
inc
xchg
inc
add
fwait
xlat
jmp
inc
rcrl
add
cmc
gs
and
dec
insl
call
prefetcht2
pushf
mov
add
scas
xchg
scas
in
sbb
cld
add
cmp
aam
push
fidivl
out
cld
inc
dec
mov
add
add
lcall
sub
mov
lock
out
or
fisttpll
fs
jg
ret
inc
add
xorpd
add
mov
mov
test
push
cmp
in
and
sbb
sbb
push
sub
jg
add
mov
push
data16
aas
hlt
clc
out
xchg
addr16
stos
jb
ret
es
dec
inc
ffree
or
aam
test
outsl
mov
and
lret
cmc
add
mov
dec
ja
aas
les
movsl
sahf
rorl
in
arpl
loopne
add
outsl
or
inc
add
in
gs
addb
xchg
daa
push
test
mov
repnz
mov
jecxz
mov
dec
push
insl
xchg
out
push
mov
gs
or
ljmp
cmp
jle
push
mov
cmp
addb
jnp
shll
add
data16
movb
fldcw
add
pop
scas
das
ret
aas
addr16
xchg
scas
push
ds
inc
add
notl
jecxz
aad
fcmove
xor
adc
movb
int
insl
ret
sub
add
test
dec
mov
mov
cmp
or
pushf
jne
add
add
mov
pop
mul
pop
cli
jns
add
sbb
cld
lret
inc
add
insl
jo
bound
outsl
pop
ja
scas
or
notl
xchg
inc
add
clc
in
scas
daa
sub
imul
movsl
int3
xlat
adc
pop
incb
add
mov
insl
das
scas
xchg
insl
dec
lods
mov
insl
inc
add
loop
mov
rolb
pop
cmpsb
xchg
insb
add
dec
shrb
fnstenv
cmp
jns
xlat
inc
push
mov
sub
lods
mov
cs
popa
js
push
and
and
mov
cld
jo
adc
stos
mov
add
fldcw
sub
and
jmp
fldenv
add
xorl
repnz
mov
pop
sbb
xor
cmp
xorl
push
jge
shll
and
jmp
imull
add
and
test
and
push
pop
int3
addb
fdivrs
je
aad
mov
into
movsl
inc
xor
adc
or
mov
movsl
repz
ret
enter
add
add
scas
lcall
lahf
mov
mov
outsl
add
in
inc
add
mov
cmp
add
mov
sahf
into
inc
add
std
adc
add
out
add
jo
mov
mov
jae
popf
xor
or
ja
xor
scas
rorb
mov
pop
push
pop
cmp
add
add
ficomps
jbe
add
add
test
cmp
pushf
sub
push
or
mov
addb
lahf
loopne
push
sub
push
iret
fists
stos
mov
sbb
sbb
push
jmp
fwait
loope
das
cmp
outsb
sysret
popa
mov
lock
fiadds
fdivrs
setb
mov
dec
je
sbb
pop
rolb
and
xor
ja
mov
lahf
push
cltd
xor
inc
mov
push
push
inc
add
add
pop
push
mov
jp
mov
lods
aaa
std
mov
fidivrs
int
cld
ret
sub
addb
in
sti
les
test
into
mov
arpl
arpl
or
push
dec
ss
out
inc
add
add
inc
sbb
adc
mov
xor
stos
fistpll
adc
jecxz
movsl
repnz
add
lret
popa
out
mov
mov
sub
sub
push
add
iret
sti
clc
dec
add
pop
pop
rcll
sub
add
sti
cmpsb
mov
lea
add
rcl
cmp
fiadds
fistpl
rorb
popa
xor
mov
sbb
inc
ss
add
and
lods
in
jg
stos
cwtl
aas
jno
test
push
mov
cmp
xchg
adcl
pop
cmp
jmp
add
stc
mov
pop
fwait
sbb
bound
cmpsl
addr16
pop
ds
add
insl
mov
stos
out
pop
or
pop
iret
pop
pop
pop
mov
les
sbb
xor
ss
sub
mov
cmp
add
dec
ss
outsb
add
int3
mov
add
js
aad
insl
or
icebp
inc
add
andl
lock
out
repnz
flds
arpl
or
sbb
xlat
cmp
mov
dec
mov
xchg
sbb
daa
movb
outsb
ret
mov
adc
cld
xchg
rolb
cmpsb
mov
sahf
pop
or
dec
mov
add
clc
adc
fstps
sub
adc
fimull
je
add
push
and
dec
pop
push
mov
mov
int
daa
lea
push
add
ret
add
cmc
es
add
inc
inc
add
add
andl
lret
fcoms
shll
jecxz
inc
add
xor
xor
ffreep
add
pop
cs
subl
or
push
imul
loop
push
in
and
add
out
insl
enter
loop
hlt
or
dec
in
adc
xor
or
inc
add
sbb
or
xor
sbb
add
or
pop
or
stc
cmpl
pop
es
jl
movsb
cmp
push
inc
out
pop
addr16
push
xor
lea
ror
push
inc
add
cmpsb
cltd
iret
lods
outsb
jae
test
xor
popf
int
pmulhuw
jb
cli
dec
fildl
add
push
jl
mov
jecxz
cmpsl
out
into
es
mov
dec
push
std
sti
xor
add
rcr
fcoms
pusha
add
lock
add
jg
dec
sbb
not
jo
push
add
ficoml
jp
mov
call
into
out
xchg
push
push
mov
ds
add
in
sbb
xor
test
mov
push
aam
enter
push
push
lods
hlt
adc
push
add
in
jb
lock
jne
push
or
test
pop
mov
xchg
or
add
stos
roll
addb
out
xor
ljmp
ja
or
bound
xchg
cwtl
or
leave
stos
inc
add
jge
icebp
fsubrs
add
mov
add
jne
mov
pop
addb
add
ja
cmc
mov
mov
fistps
sbb
add
add
enter
inc
xor
in
mov
stos
loope
lret
inc
add
inc
add
mov
out
aad
push
add
push
and
clc
jo
xchg
movb
stos
addb
or
popa
stos
ds
nop
inc
add
test
in
pop
rcrb
mov
inc
addr16
loopne
insl
pop
push
adc
dec
mov
aaa
mov
cmp
add
inc
out
jno
inc
pop
xlat
ljmp
xor
mov
imul
ret
mov
in
and
mov
push
pop
xchg
and
dec
add
mov
cwtl
or
adc
movb
cmpsb
out
adc
push
xchg
pushf
aas
ja
jge
sub
lds
sti
icebp
jne
add
lock
mov
xchg
xchg
or
jo
imul
fistpl
out
xchg
bound
lods
addb
xchg
stos
repnz
fistpll
xor
mov
add
stos
mov
insl
mov
pop
and
mov
cmp
lea
outsb
cli
push
scas
push
sarl
pop
or
outsb
jl
fsubrl
clc
lret
xchg
pop
ja
in
inc
add
addb
jbe
push
sahf
daa
xor
clc
dec
subl
adc
push
add
je
add
movsb
ret
mov
int
jl
dec
jp
imul
add
sub
out
decl
add
mov
jbe
nop
mov
rcl
pop
dec
fdivrl
inc
add
dec
sbb
enter
push
es
imull
pop
or
rcrb
push
xchg
xor
nop
xor
in
in
ret
addr16
sahf
pop
sub
push
stos
push
les
aam
mov
movb
pop
test
xchg
jle
xor
add
add
mov
sub
insb
sbb
jecxz
mov
lock
adc
add
add
addr16
addr16
and
add
push
lds
add
jp
cmp
cld
add
lea
imul
jmp
in
push
lret
or
addr16
sbb
nop
out
addr16
mov
insl
leave
mov
mov
in
dec
gs
push
xchg
jecxz
outsb
xor
pop
rcr
adc
dec
xchg
ret
lods
and
mov
dec
mov
cmpsl
jb
push
insl
pop
pmuludq
add
ljmp
in
icebp
mov
dec
jne
or
cmp
sti
sub
push
dec
lret
xchg
inc
add
jo
scas
les
push
cmc
push
or
out
jbe
fiadds
mov
scas
rcrl
xor
and
mov
imul
pop
mov
or
dec
sbb
pop
cmpsl
mov
add
hlt
inc
lcall
cmp
fcmovbe
rcl
or
imul
cs
jb
jns
test
in
inc
add
iret
lods
lea
sub
aad
xchg
stc
mov
push
push
xchg
adc
out
movb
ja
fistps
call
sbb
xlat
shr
fildl
sub
fildl
add
jo
mov
add
inc
add
loope
cmpsl
and
add
mov
pusha
add
jmp
inc
push
pop
icebp
mov
pop
pop
addr16
repnz
lahf
push
dec
adc
mov
cli
or
ret
dec
sti
mov
xchg
cli
fwait
stc
dec
jmp
jo
add
cmp
ds
out
clc
leave
shll
push
mov
lret
lret
testl
sub
add
inc
out
lock
mov
mov
lods
pop
mov
and
repnz
or
sbb
pop
cmp
cld
push
cmp
pop
ljmp
jecxz
cmp
pop
pop
aam
pop
imul
xor
nop
gs
push
sub
jle
add
mov
fsubs
es
mov
cli
outsl
xor
push
nop
inc
add
test
lret
lea
test
push
mov
cwtl
xchg
movsb
test
mov
push
sbb
or
out
xchg
xchg
dec
int3
scas
xchg
dec
addb
push
test
in
in
mov
add
stos
iret
and
add
icebp
lcall
sub
xchg
adc
imul
movb
out
xchg
inc
add
popl
pop
xchg
inc
add
rcl
push
jbe
add
inc
addb
fildll
test
aam
and
test
mov
push
sbb
mov
jne
jo
sub
fistpll
repz
xchg
sub
jg
sub
cmp
bound
lods
mov
pop
inc
lcall
std
cmp
adc
mov
scas
mov
lods
mov
gs
lods
pop
stc
push
movsb
xorl
jecxz
negb
push
nop
out
jb
int3
inc
add
sahf
stos
icebp
das
lea
repnz
push
imul
fimull
jle
sbb
mov
pop
stos
out
into
into
adc
pop
int
and
jbe
xchg
cmp
movsb
jmp
sbb
fdivs
fldz
pop
out
lock
pop
nop
sub
or
pop
stos
int3
adc
mov
mov
dec
je
daa
inc
fucom
ret
js
adc
fistps
fnstenv
add
cmpsb
inc
popf
mov
add
sub
iret
sbb
pushw
enter
xchg
fsubrp
jp
inc
add
sbb
jb
imul
and
shrl
shrb
add
xlat
rcll
cmpl
and
jne
test
addb
js
jmp
ds
mov
xchg
inc
mov
popf
mov
lret
enter
mov
dec
cmp
dec
repz
mov
jle
fsubr
pop
adc
fstps
add
repz
stc
aad
dec
lods
test
scas
push
in
call
xor
xchg
movsl
lock
fwait
mov
mov
cmp
mov
pop
add
shrl
mov
leave
jge
adc
jns
dec
push
aad
push
das
push
mov
rclb
nop
aas
push
pop
sub
sbb
dec
adc
mov
sbb
pop
pop
sti
push
jmp
jmp
add
add
jge
adc
jno
add
mov
imul
add
test
add
xchg
xchg
push
mov
dec
pop
sahf
add
add
sbb
inc
or
add
cwtl
rcr
cmp
in
adc
sbb
aaa
nop
imul
dec
xlat
cmp
lods
cmp
aam
inc
add
add
roll
push
les
fs
pusha
add
jnp
inc
add
adcl
das
cltd
aaa
mov
das
push
out
jbe
sub
and
jge
mov
push
mov
cmp
xchg
lcall
sub
xchg
in
lret
mov
inc
add
pop
xor
cmpsl
clc
imul
and
xor
sbb
mov
insl
push
dec
hlt
push
scas
mov
cs
sarl
les
jge
pop
fcoml
insb
enter
icebp
pusha
add
push
in
jbe
lods
mov
popa
sbb
add
sub
sub
adc
xor
pop
pop
repz
add
fwait
int3
mov
aas
shll
cmp
hlt
shlb
fdivr
dec
lods
dec
loop
icebp
sar
sbb
in
aas
dec
std
stos
dec
jle
push
jbe
pop
fdivp
adc
loope
mov
adc
cmp
add
add
sub
xor
and
mov
dec
adc
or
gs
xchg
xor
inc
push
addr16
int
fnstcw
fisubrs
aad
inc
icebp
sub
incl
lods
shrl
jbe
fidivl
cmpsl
dec
ljmp
lea
sarl
adc
mov
into
fstpt
and
xor
popw
imul
into
cltd
addr16
mov
cmp
push
sub
cwtl
jno
call
xchg
scas
outsb
push
fs
and
insl
lea
push
shrb
jno
inc
xor
jmp
add
push
add
sub
inc
mov
inc
add
loop
in
out
push
mov
xchg
aad
into
pop
xchg
inc
gs
inc
add
sbb
imul
jne
inc
dec
fidivrl
adc
mov
imul
insb
cmp
and
dec
dec
data16
push
add
imul
bound
xchg
lods
jns
add
rolb
add
dec
hlt
push
mov
cltd
popf
iret
or
fabs
and
or
mov
movsl
cltd
dec
sub
out
mov
hlt
stc
push
xchg
imul
ja
popa
fcompl
mov
insb
jl
inc
pop
sub
test
hlt
loopne
out
inc
sahf
xchg
iret
adc
xchg
jo
data16
inc
mov
mov
add
je
icebp
test
add
add
insb
xchg
jno
adc
stos
xor
mov
addb
adc
add
outsl
filds
push
stos
jecxz
or
mov
push
sub
push
fisubs
dec
jns
mov
push
repnz
stc
mov
aam
pusha
add
and
rcl
faddl
fildll
fwait
movb
pop
aad
insl
cmp
add
je
in
add
add
jno
fildl
call
aad
mov
ss
mov
les
and
push
inc
add
or
insb
aad
xchg
sub
fsts
mov
outsb
or
cmp
add
mov
out
mov
leave
in
jmp
stos
ret
addr16
aam
ficomps
lret
int3
arpl
push
adc
sub
aas
nop
mov
add
adc
dec
xchg
inc
add
stos
jne
and
xchg
lret
test
inc
add
sbb
mov
sti
js
xlat
push
mov
push
pop
or
clc
out
cmp
movsl
in
or
fbld
scas
outsl
ficoml
inc
add
imul
inc
add
jno
inc
add
inc
add
nop
loope
pop
pop
jmp
add
scas
xor
roll
xchg
int
inc
add
in
std
jnp
sub
jg
push
leave
in
hlt
jp
lahf
push
in
ret
inc
insb
jle
mov
arpl
xchg
fnstsw
mov
dec
jnp
add
in
adc
fcomi
ljmp
mov
pop
ss
loop
aam
sub
add
jae
je
add
add
addb
pop
das
push
ljmp
aad
cmp
add
inc
movsl
adc
add
sbb
fisubl
xor
adc
dec
call
add
mov
xchg
xchg
mov
inc
add
push
scas
mov
xor
mov
mov
add
aam
jb
dec
ret
mov
insb
dec
iret
fwait
sbb
push
ret
mov
cmpsb
orl
fidivrl
add
out
cs
addb
std
push
xor
adc
ljmp
xchg
test
cmp
mov
les
jno
dec
mov
push
inc
pop
loopne
add
popf
decb
inc
mov
dec
cmp
xor
add
aaa
into
or
sahf
std
adc
cld
mov
je
add
mov
jb
icebp
push
xchg
mov
ret
lret
fildll
and
mov
fmul
lods
push
fildll
int3
js
push
out
stos
stos
cmc
adc
add
mov
scas
xchg
push
jg
aam
pop
xor
mov
lahf
mov
insl
pushl
lods
dec
lds
adcl
pop
lds
pop
adc
inc
add
pusha
add
fmuls
cmc
imul
pop
cmp
pop
dec
jmp
cmc
call
mov
int
cli
sbb
xlat
push
push
ja
push
sbb
lcall
inc
nop
sub
push
or
rolb
pop
push
xchg
mov
adc
int
add
mov
bound
jno
fs
pop
or
lahf
xchg
shll
mov
or
add
and
cwtl
lods
inc
inc
add
aas
push
adc
add
lret
test
xor
cwtl
sbb
sbb
lock
or
inc
fcompl
imul
mov
inc
loopne
sbbl
dec
adc
gs
add
mov
push
mov
pop
fcomps
stos
pop
fistpll
xchg
jge
jnp
pop
push
int
in
lcall
bound
add
inc
add
adc
aad
iret
mov
pop
mov
add
mov
aas
les
in
add
add
or
outsb
jmp
pop
ficoml
stc
movsb
pop
dec
sbb
jecxz
gs
getsec
sub
mov
sahf
mov
scas
bound
mov
adc
add
imul
pusha
add
push
adc
in
xchg
mov
xor
sub
xchg
test
xchg
add
xlat
int3
nop
adc
in
sbb
rolb
add
xchg
in
pop
movsb
adc
and
adc
mov
add
bound
dec
mov
mov
arpl
inc
cli
pop
call
hlt
lret
mov
mov
mov
lock
inc
daa
add
xchg
mov
add
adc
daa
push
in
test
test
pop
cmp
stos
mov
aas
inc
add
add
ja
add
call
add
mov
and
fstp
sbb
sub
mov
adc
in
xchg
xchg
sbb
das
mov
xor
outsb
fisubrl
rolb
pop
sbb
in
mov
scas
add
dec
popa
aam
aam
cmp
add
jno
lds
pop
insb
mov
add
imul
pop
xchg
jmp
cmc
pop
cmc
imul
sbb
rcrb
or
enter
jne
sbb
xchg
add
movsl
push
inc
pop
inc
add
inc
mov
cmp
add
movb
insb
push
inc
lcall
add
push
cmp
add
mov
push
loop
jbe
loop
jno
mov
and
cmp
push
sti
lods
xor
mov
or
lods
dec
outsb
mov
aad
es
loopne
test
mov
sub
outsl
ds
push
cmc
into
pushf
rolb
add
xor
add
loope
inc
add
and
xchg
fdivrl
clc
sub
lret
mov
repz
jp
movsb
mov
std
add
les
adc
fisubs
arpl
insb
add
inc
call
out
stos
popa
xchg
push
mov
push
push
mov
push
inc
add
jg,pt
mov
addb
xor
repz
in
scas
jg
mov
adc
out
mov
scas
sahf
addb
sub
rorl
lods
fsubr
std
lret
rclb
xchg
dec
test
addb
pushf
icebp
ja
mov
mov
jbe
lock
notb
push
sub
add
gs
adc
jnp
cmp
das
cmp
jg
aas
data16
pop
and
test
add
pop
pop
xchg
inc
cmp
add
out
mov
pusha
add
call
add
arpl
sub
cli
fwait
and
push
xor
lods
push
sub
mov
sub
pop
xchg
pop
into
cli
mov
std
test
cli
sbb
mov
and
idivl
push
ljmp
inc
inc
add
cmp
mov
sbb
xchg
adc
fisubrl
mul
jecxz
and
push
cld
in
fiadds
add
jge
xchg
jmp
adc
add
and
push
movsb
sbbl
lret
or
sahf
inc
add
mov
into
mov
mov
pop
rclb
xchg
scas
flds
add
fdiv
sub
cmp
pop
cmp
cld
adc
out
inc
movsl
jle
push
or
pop
cmpsl
xor
movsl
cmpsl
and
jmp
mov
sbb
movsb
mov
or
pop
cmpsl
leave
out
add
pop
pushl
add
jp
sub
pop
pusha
add
sahf
in
pop
mov
fdivrl
addb
stos
loopne
sbb
jnp
cld
jb
mov
jg
mov
pop
lret
push
add
mov
or
add
xchg
std
sbb
daa
je
in
js
pop
cli
xor
lods
add
mov
subl
add
or
pop
lods
inc
adc
mov
dec
xor
enter
mov
sbb
cwtl
shl
movsb
out
sub
dec
movsb
imul
in
dec
push
xchg
mov
sbb
xor
sub
sub
nop
sub
mov
fwait
pushl
test
mov
idivl
inc
lret
mov
test
or
jne
call
xchg
lret
sbb
hlt
or
lcall
lret
push
test
pop
cwtl
sahf
ficompl
sahf
pop
push
add
movsb
jge
icebp
sub
sbb
jbe
fisubrl
add
add
adc
adc
pusha
add
and
mov
add
jno
imul
mov
add
jb
jge
test
push
jb
or
ficoml
add
mov
outsb
imul
xchg
ss
insb
push
mov
mov
sub
das
bnd
push
sbb
mov
daa
cmp
test
lods
insl
imul
ja
lahf
sub
xchg
sbb
lods
add
jnp
insl
data16
add
daa
daa
or
sbb
ss
cwtl
mov
add
test
pushw
insl
aad
loope
cltd
bound
mov
fs
jge
aaa
insb
movsl
cmpsb
scas
jecxz
das
cmpsl
push
cmp
cmp
add
add
in
add
dec
arpl
and
int
jge
mov
jae
inc
add
jae
insl
mov
ljmp
ds
scas
jno
scas
adc
cmc
shrb
push
cmc
pop
push
movb
in
sahf
mov
push
js
xchg
out
xorl
test
sbb
mov
mov
xchg
pop
jnp
mov
test
cmp
sub
repnz
nop
shlb
fs
xchg
loopne
add
jnp
add
xchg
imul
shl
ficoms
jg
cld
inc
add
add
push
push
xchg
pop
inc
add
ljmp
and
testl
xor
cltd
mov
add
lea
pusha
add
insb
xchg
fists
push
lods
inc
add
dec
arpl
jl
or
hlt
jno
int3
out
or
out
jno
xchg
test
jno
add
ret
add
call
push
adc
lods
sbb
and
stos
sbb
ret
inc
insl
xchg
lret
push
aam
jae
xchg
repz
imul
addr16
add
mov
inc
add
mov
mov
jno
stos
scas
mov
jo
movb
add
xchg
mov
cmp
addb
enter
enter
ret
or
push
sub
repnz
xor
sahf
xor
loopne
sub
pop
sub
loope
in
cltd
jbe
mov
add
in
repz
jg
mov
cltd
addb
add
fs
jbe
xchg
gs
add
in
xchg
push
test
cmp
mov
data16
lret
push
shlb
mov
iret
cmp
mov
add
movsb
push
fwait
sbb
lods
adc
xor
inc
add
jbe
pop
sbb
mov
lcall
out
out
out
lock
xorl
out
sbb
pop
and
add
fmul
mov
shll
movsl
mov
pop
out
fwait
jae
popa
sbb
aas
pop
ds
call
adc
add
shrl
popf
sbb
lods
inc
add
add
leave
int3
std
add
inc
add
pop
xchg
pop
push
jno
loopew
add
dec
mov
xor
lret
cmpsb
fcmovb
add
push
sbb
cmp
mov
lock
sbb
out
pop
cmp
movsb
pop
mov
sahf
addb
addb
dec
pop
loope
add
stos
push
sbb
ljmp
hlt
rolb
cwtl
adc
repnz
dec
xor
cs
xchg
and
divl
sbb
add
in
dec
and
jns
inc
add
ljmp
dec
loop
mov
cmp
lret
std
sub
and
mov
add
add
lods
dec
fcmovb
add
adc
test
xchg
pop
push
sbb
cmc
or
adc
rcll
movsb
push
int
add
aad
and
shlb
add
in
adc
in
push
adc
mov
cltd
jge
add
xchg
into
int
lods
and
pop
dec
pop
cmp
mov
ja
leave
dec
sub
pop
lahf
pop
ss
ucomiss
jnp
out
fucomip
pop
out
or
add
scas
xor
ror
cli
in
leave
push
push
xchg
inc
add
pop
ja
fmull
loopne
aaa
xchg
test
inc
shl
xor
das
fwait
in
dec
dec
add
addl
add
pop
dec
push
rcrb
mov
dec
popa
or
sub
sbb
xlat
inc
clc
pop
inc
add
lods
stc
movsl
das
ret
lods
shrl
inc
add
inc
scas
dec
into
sub
nop
dec
test
xchg
dec
orl
add
movb
xchg
movsb
lret
nop
std
pop
movb
mov
les
add
mov
cmp
xchg
cmp
mov
stos
std
cwtl
cmpsl
jo
add
mov
es
pop
enter
jno
add
and
cmp
inc
add
dec
mov
add
cltd
mov
sub
test
pop
xchg
dec
ljmp
jne
pop
aas
jle
icebp
ds
mov
pushf
pop
cmp
cmp
add
sub
daa
repz
dec
xor
sahf
cltd
sbbl
xchg
pushf
inc
add
add
leave
dec
rcll
jo
add
sub
js
push
push
shl
mov
add
mov
xchg
call
pop
mov
push
or
mov
mov
inc
mov
popa
addb
push
pop
inc
sbb
jae
add
repz
pusha
add
add
add
add
or
sbb
loop
mov
pop
push
adc
mov
insl
mov
jmp
out
cmp
add
jmp
fldl
push
push
xlat
xlat
xor
sub
movzbl
mov
shrl
addr16
sub
pushf
movsb
ljmp
mov
push
insb
add
iret
popf
cmp
sbb
lods
xchg
addb
out
mov
insb
jnp
jg
cmc
rolb
add
cmp
sbb
jp
inc
inc
sub
jno
mov
sub
aam
inc
add
cltd
dec
arpl
dec
inc
jl
jmp
sub
cmp
add
add
sub
hlt
in
inc
add
mov
cmc
movb
arpl
testb
sbb
out
mov
loop
dec
rcrb
scas
lods
xchg
pop
hlt
ret
jnp
push
jb
addr16
popf
addb
addb
xchg
jp
je
push
or
cmp
mov
and
push
je
add
pop
lds
mov
mov
add
jle
lret
movsb
adc
mov
imul
add
std
fmull
mov
movsb
cmc
cltd
lds
add
push
pop
repnz
roll
cmpsb
popa
sahf
into
lahf
shl
xchg
jno
jbe
ds
add
dec
fsubs
jl
movsb
sub
ljmp
mov
cmp
add
loopne
je
lea
shll
les
mov
inc
and
push
inc
add
les
test
inc
out
dec
mov
es
loope
mov
xchg
dec
push
rcll
shrl
shlb
stos
mov
das
mov
mov
rclb
cmp
ja
and
jnp
adc
cltd
dec
bound
pushf
pop
xor
mov
mov
sbb
xor
xchg
xchg
mov
sub
jecxz
xchg
pop
cs
cmp
add
leave
mov
mov
ret
sbb
and
mov
fisttpll
stos
dec
hlt
pusha
add
shrb
std
cld
adc
xchg
inc
add
adc
test
inc
add
pop
inc
and
cmp
loop
sub
in
mov
aad
aaa
stos
bound
cmpsl
xchg
mov
fists
loopne
faddp
mov
sbb
dec
cmp
icebp
lret
fisubrs
in
add
inc
pop
test
jmp
cmp
dec
imul
repnz
out
inc
daa
lret
inc
add
and
or
add
adc
stc
outsb
pop
pop
test
dec
aas
inc
add
add
xchg
out
movb
cmp
aas
lods
sbb
ljmp
add
ret
test
lods
and
lret
inc
sub
add
aaa
addr16
btc
sbb
lea
loopne
in
xchg
loope
mov
add
icebp
sti
jae
out
mov
sbb
mov
nop
js
adc
or
aaa
add
fstps
rcl
daa
js
enter
mov
out
cld
fisttpll
iret
icebp
aaa
cmpsb
xchg
mov
aam
xor
in
jb
loope
mov
jbe
sbb
pop
arpl
das
sub
mov
cmp
inc
inc
mov
dec
xchg
jecxz
mov
int
rolb
pop
pop
cs
loopne
es
add
pusha
add
jl
int
xchg
lods
out
pop
mov
mov
stos
notb
fists
aam
pop
xor
addb
push
add
adc
lock
hlt
out
test
roll
add
push
jnp
and
fsubrs
outsl
mov
xchg
mov
rol
repnz
add
aas
out
sub
sub
xchg
clc
test
jle
lds
pop
lods
push
pop
es
push
cmp
scas
push
dec
hlt
dec
jo
jae
mov
jne
scas
cmp
add
cmpsl
cli
xchg
mov
mov
jo
punpckhbw
fsubs
add
rcl
mov
lret
iret
in
cmp
cmpsl
js
add
cmp
outsb
add
pop
out
addb
leave
jnp
add
out
cmp
and
shlb
dec
dec
lret
xchg
test
fmul
sub
outsl
xchg
pop
dec
sbb
lds
cmp
and
inc
mov
out
stos
lds
jg
pop
xchg
outsb
sti
sub
mov
inc
jl
pop
xor
add
inc
addb
cmp
bound
mov
mov
out
js
pop
clc
jg
loopne
cmp
or
sub
add
or
mov
out
clc
cmpsb
bnd
sti
dec
jns
shr
mov
mov
lret
lock
mov
sbb
or
mov
ljmp
jp
dec
push
inc
mov
cmp
add
add
ret
data16
fwait
mov
sbb
push
mov
bound
mov
cs
jb
mov
push
dec
in
inc
xchg
mov
fisubrs
lock
out
jl
cmp
ss
jle
mov
sbb
add
arpl
fwait
push
mov
test
ret
cmpsb
nop
sub
leave
lret
sbb
int3
and
je
sbb
push
ret
leave
mov
dec
sar
in
sbb
sub
pusha
add
sub
pop
addl
dec
test
es
scas
pop
hlt
int
addb
mov
pop
adc
fstl
ljmp
jmp
xchg
jg
mov
mov
push
leave
int3
xchg
adc
cmpsl
sub
fwait
into
dec
or
and
lss
mov
leave
add
xchg
mov
push
cmp
fs
dec
cwtl
imul
pusha
add
add
add
bound
jae
aas
inc
add
addb
cmpsl
gs
divl
arpl
pop
cmp
test
mov
test
clc
cmp
adc
push
ret
es
sbb
sbbl
sub
push
movb
mov
aaa
decl
bound
add
xor
movb
push
cmp
add
xor
addb
ja
mov
xor
arpl
sub
mov
push
push
jmp
loope
mov
int
jns
add
inc
add
pop
ss
cld
jmp
sbb
rolb
mov
fcmovnbe
xchg
xor
dec
cmp
fisttpll
or
mov
jl
cmp
jno
jmp
mov
incl
pop
orl
rorb
jmp
inc
stos
cmp
dec
mov
adc
jge
xchg
ss
loope
sarl
fdiv
aad
pop
insb
mov
test
outsl
inc
add
jns
xor
jg
jmp
dec
into
sub
adc
xor
imul
dec
loop
sub
pop
dec
outsl
movb
test
sbb
add
xchg
pop
insb
cmp
sbb
into
cmp
cmp
mov
or
addb
push
ret
cmp
out
mov
outsb
xlat
sub
push
les
shrb
pusha
add
inc
pop
pop
push
test
mov
add
pop
inc
in
repz
add
jno
add
enter
adc
adc
movsb
cmp
mov
inc
mov
mov
gs
lock
lahf
aam
rolb
leave
mov
insl
xchg
mov
loope
aaa
je
pop
mov
leave
jne
mov
in
dec
sti
jl
and
sub
aad
add
jecxz
mov
test
jg
add
xchg
pop
pop
imul
push
dec
mov
add
je
pop
cltd
lods
frstor
sub
add
pop
dec
nop
jl
sub
jo
std
sbb
add
jo
cmp
jne
std
mov
push
or
cld
dec
jo
in
xchg
inc
movb
pop
or
add
cld
and
rcrl
cmp
jb
mov
stc
push
js
or
movb
in
stos
js
add
sub
add
xor
in
cli
fcmovu
sarl
inc
add
cmp
outsl
inc
jl
jno
lret
sbb
pop
addb
add
xchg
cmp
repz
addb
scas
scas
pushf
dec
jno
daa
dec
pusha
add
daa
xchg
mov
pop
test
push
add
mov
aaa
mov
add
ja
stc
das
insb
enter
movsl
inc
add
xor
sub
mov
push
enter
add
add
jno
xor
xchg
add
inc
arpl
or
push
add
or
lods
loopne
inc
jne
and
lds
pop
jl
xchg
lock
mulb
add
cmpsl
lret
rolb
fwait
sbb
pop
bswap
lahf
mov
xchg
fisubs
inc
add
add
ss
ret
xchg
out
jmp
dec
stos
aaa
popa
push
add
add
mov
jge
cld
test
fistl
dec
cmpsb
testb
fistpll
testl
add
ror
out
sub
push
add
cld
push
mov
jecxz
cmp
pop
lahf
and
aas
push
adc
xor
push
movsb
adc
insl
dec
or
add
das
das
arpl
cltd
out
pop
mov
sahf
push
fsts
pop
pushf
and
int
bound
js
addb
cmpsl
sbb
incb
sbb
ret
test
add
lock
add
addb
js
xor
mov
add
adc
cmp
sub
cmp
push
inc
add
outsb
sbb
mov
pop
icebp
fisubs
mov
add
imul
push
mov
inc
push
sbb
lret
mov
sbb
push
outsl
pop
push
popf
fisubrs
sti
test
jnp
jmp
mov
add
inc
popf
cltd
xchg
dec
shrb
add
jl
sti
push
cmc
inc
add
mov
fistpll
mov
inc
inc
test
out
xchg
mov
cmp
jl
dec
cmp
dec
leave
jo
sub
rcrl
add
and
mov
mov
enter
add
add
out
xor
mov
adc
pop
adc
rcrl
xlat
repz
pop
cs
mov
lcall
xchg
push
push
shlb
or
jae
jnp
lds
xor
cmp
in
scas
out
add
add
push
adc
scas
inc
pop
mov
pop
push
into
dec
add
xor
mov
jecxz
xor
test
outsb
lea
push
lcall
add
push
mov
popa
daa
and
jmp
in
xlat
jno
in
push
lret
mov
add
gs
jmp
sub
sub
sbb
jo
adc
jo
lods
xlat
ljmp
call
pop
cmp
mov
shr
mov
push
dec
lods
jmp
add
pop
negb
cld
popf
pop
lock
add
lock
ss
flds
mov
ss
or
addl
xchg
iret
jo
mov
fcoms
ficomps
fwait
push
rorl
sub
int3
in
xchg
lea
mov
dec
push
sbb
ret
test
add
xchg
rorl
xor
fcomp
in
dec
jo
push
shl
adc
movsb
or
lret
xchg
div
clc
loope
cld
add
add
addl
add
jge
mov
test
scas
mov
jle
cltd
adc
add
jl
lcall
testl
mov
inc
loopne
xchg
into
aas
add
test
or
insl
call
sbb
mov
mull
sbb
psrlq
push
in
loop
dec
mov
cmp
add
stos
ds
and
cld
or
mov
dec
pop
dec
cmpsb
dec
dec
push
xchg
push
or
in
dec
das
jnp
in
das
loop
sub
shll
addb
dec
add
pop
jle
dec
repz
push
sbb
out
in
daa
xor
push
mov
aam
popf
test
imul
cmpsl
dec
jo
add
sbb
jecxz
mov
mov
pop
mov
jp
mov
je
push
jbe
lock
jo
pusha
add
lcall
mov
insl
add
pop
hlt
jne
mov
inc
jl
or
nop
or
add
xor
bound
push
dec
lods
sarb
addr16
fs
mov
testl
rolb
add
mov
sbb
arpl
sbb
xor
pop
cwtl
pop
addb
in
pusha
add
add
xlat
adc
repz
inc
imul
fmull
ret
ja
out
dec
dec
sahf
addb
or
adcl
outsb
inc
cmpsl
lret
add
add
leave
test
pop
out
xor
adc
xor
jbe
or
popa
add
pushf
jge
push
fwait
mov
fsub
loopne
shrl
push
in
mov
inc
lea
addr16
dec
mov
xchg
jle
add
orl
pop
repz
push
push
add
test
push
add
jo
mov
dec
cmpsb
mov
add
clc
mov
jae
shl
movb
enter
stos
cmpsb
sub
add
imul
add
aas
scas
inc
add
mov
add
cs
sub
js
das
xchg
sub
iret
add
enter
dec
push
int
mov
divl
mov
enter
mov
or
pop
int
movsb
sti
lock
xor
cmp
push
sti
push
dec
mov
cmp
and
jle
adc
mov
mov
popf
out
mov
push
cmp
pushf
jne
std
dec
mov
in
xchg
and
lcall
add
add
jl
add
xchg
pop
cmc
jne
stos
loopne
nop
push
mov
sar
mov
addb
aam
inc
add
mov
jmp
stc
test
or
mov
std
or
lods
push
ljmp
aad
jg
fnstcw
mov
in
sti
xor
mov
pop
push
loopne
stos
cwtl
imul
in
adc
addb
push
hlt
mov
adc
xchg
mov
imul
adc
jg
js
and
push
xchg
adc
pushf
lret
inc
add
push
jp
outsl
ss
popa
adc
aam
or
loope
push
xchg
mov
fwait
jne
xchg
aad
jnp
addb
dec
cmp
xchg
iret
lea
add
and
pop
mov
fs
mov
jb
jge
mov
jb
pop
out
lods
js
shrl
fwait
lea
adc
or
es
inc
add
sbb
out
fsubrs
mov
mov
dec
add
xor
jo
daa
dec
xor
ficompl
inc
add
lock
inc
add
mov
es
push
scas
pop
dec
cmp
stos
fisubrs
imul
mov
xchg
sbbl
inc
add
jmp
sub
add
adc
adc
dec
and
dec
shlb
mov
jae
adc
mov
aad
aas
sub
jbe
add
inc
lret
das
inc
add
add
test
out
dec
or
mov
lret
ds
dec
in
pop
hlt
lret
add
cld
jno
movsb
jbe
lcall
sub
cmp
std
lret
or
cltd
adc
mov
xor
daa
scas
insl
test
lret
add
xor
pusha
add
inc
lret
sbb
push
movb
xor
dec
hlt
adc
inc
icebp
dec
xchg
shlb
outsb
scas
pop
xchg
and
test
arpl
add
push
mov
jb
lods
sub
jbe
cmp
adc
out
adc
fcompl
cmpl
sub
jns
and
int3
test
add
cmpsb
jmp
or
sub
into
mov
mov
mov
pop
adc
add
or
icebp
flds
add
cli
out
xchg
hlt
ds
lahf
xor
gs
out
int
add
cmpsl
lds
fidivl
jecxz
push
add
test
addb
sbb
decb
rolb
and
cs
inc
add
out
and
push
mov
int3
imul
nop
xor
add
mov
sub
or
xchg
lret
std
sbb
and
pushf
pop
mov
or
xchg
fildll
push
in
fadds
dec
std
push
jno
mov
add
pop
push
shrb
repz
and
pop
jno
or
cld
ss
jge
mov
popa
dec
roll
lods
push
shr
add
sub
xor
cmpsb
addb
movsl
addb
xor
aaa
and
dec
sub
add
push
push
add
pop
aaa
js
icebp
ss
push
sbb
inc
dec
dec
std
inc
add
aad
js
mov
fnsave
sahf
xchg
xor
xchg
movsl
bound
cmc
jle
stos
mov
stos
fstps
push
rol
fcmovne
push
sbb
adc
add
mov
or
mov
cmp
cmpsl
ja
and
sbb
inc
mov
in
cmpsl
test
xor
jae
in
pop
dec
stos
dec
mov
adc
lds
jp
cmp
leave
dec
es
addb
or
add
addb
xchg
add
xchg
lahf
shrl
pop
mov
jle,pt
insl
out
fmulp
pop
mov
xor
pop
test
sahf
cmc
jb
clc
push
xchg
push
sbb
mov
insb
add
cmc
mov
ljmp
add
ret
mov
lods
pop
repnz
inc
mov
es
shlb
loop
xlat
fwait
jp
mov
fistpll
inc
divps
repz
push
add
add
jg
xor
pusha
add
add
jl
jge
push
nop
out
xchg
inc
add
outsb
cmc
push
mov
add
mov
sub
push
add
add
inc
in
or
lock
push
dec
cmpsb
and
jmp
addb
test
iret
lock
jg
and
fstpt
jmp
xchg
lds
int3
ljmp
sub
add
jle
mov
pop
jle
loope
xchg
enter
add
pop
or
popa
pusha
add
push
jb
push
mov
mov
addb
mov
subl
nop
sbb
movsb
ret
push
add
pop
out
cmp
add
out
iret
sub
into
push
lods
insl
adc
add
sti
ficomps
xchg
mov
mov
loopne
pushl
std
inc
mov
pop
inc
add
clc
add
daa
mov
in
lret
add
xor
add
dec
int3
test
loope
add
pop
or
jecxz
add
fs
out
fwait
and
insl
rorb
push
mov
addb
lods
out
push
fcompp
ret
loopne
jecxz
fisttps
js
insl
pop
int
mov
sub
xlat
cmp
push
xchg
pop
loopne
add
scas
movsl
sub
les
repz
ret
outsb
xchg
sub
hlt
pop
call
and
int3
hlt
xchg
sahf
sub
jl
add
cmpsb
lahf
mov
push
mov
jbe
daa
sahf
xor
add
mov
into
mov
js
push
mov
aas
xor
mov
add
pop
sub
mov
in
mov
push
push
fildll
or
adc
mov
lods
inc
mov
cmp
rcr
hlt
int3
pop
aaa
loope
fsubl
ja
pop
xlat
enter
addb
push
in
enter
ret
addr16
ljmp
enter
shll
xchg
adc
ret
dec
dec
pop
xor
or
cli
pop
leave
fistpl
and
mov
les
test
loope
jns
mov
dec
add
push
or
jno
mov
movb
aaa
ret
adc
ret
ds
aas
jmp
mov
jge
mov
mov
sbb
or
sbb
cmpsb
aad
fs
jbe
jb
jle
scas
movb
loope
sbb
add
ficoms
and
insl
aas
outsb
leave
push
jbe
inc
add
and
or
lds
enter
lret
add
cmp
cmpsb
mov
and
int
mov
addb
xor
test
sarl
repnz
cmp
aas
dec
dec
pusha
add
daa
in
xchg
inc
ret
jmp
scas
sbb
cmp
xchg
and
mov
mov
movsb
bound
push
push
dec
xchg
adc
sbb
fld1
jmp
push
mov
xor
mov
inc
add
add
jnp
mov
xchg
int3
mov
jns
add
adc
sub
add
xor
lcall
add
insl
xlat
pop
idivb
loopne
push
iret
test
xchg
fstps
je
shlb
pop
cmp
movsl
cmp
fiaddl
xchg
push
movsb
cld
jbe
or
adc
push
jle
lcall
lahf
lret
aaa
push
mov
push
add
mov
lret
sub
movsl
or
push
aad
sbb
in
leave
iret
fisubrl
sub
aaa
ret
pop
je
jle
mov
lea
inc
add
movsb
xchg
and
jecxz
mov
inc
add
sahf
xchg
lcall
xor
fcmovb
add
insb
das
jmp
and
faddl
in
cltd
mov
add
inc
into
cmp
in
xor
out
sub
mov
ja
repz
sub
push
std
test
imul
inc
lret
xor
pop
pop
test
xor
adc
pop
cmp
stos
std
xchg
aaa
fnsave
repz
mov
in
pop
inc
add
jge
dec
sbb
cmp
dec
pop
fstps
or
das
insb
arpl
add
cli
jg
das
dec
inc
add
repz
aas
das
sub
nop
das
or
mov
jae
add
rol
add
adc
cmp
push
sub
int3
and
arpl
jge
mov
scas
jge
push
inc
add
mov
add
addb
enter
arpl
in
jns
rolb
push
movsb
pusha
add
push
add
add
push
push
vsubsd
sbb
inc
js
cmc
jge
dec
daa
arpl
imul
sbb
sub
into
andl
outsb
aaa
leave
ds
pop
push
popf
xchg
imul
add
cmpsl
fldenv
add
mov
pop
lods
xlat
mov
mov
add
push
pop
outsb
mov
push
repnz
cmp
mov
cmc
xchg
dec
mov
insb
and
push
stos
inc
stos
adc
sub
mov
ret
imul
mov
lock
test
in
into
or
movsb
dec
push
jp
add
int
mov
pop
scas
mov
dec
out
jne
cltd
std
call
test
inc
add
mov
fstpt
mov
lcall
push
ds
cltd
movb
jne
mov
cmc
sub
repz
pop
dec
sub
insb
ljmp
and
out
and
lds
inc
add
lea
pop
jecxz
xor
cwtl
xchg
mov
mov
movsb
mov
xor
add
popf
or
mov
sub
push
ljmp
xchg
cmp
push
jns
xchg
loop
rcl
mov
mov
pop
and
ss
lret
imul
out
jp
clc
xchg
jne
fsts
clc
xchg
lret
fwait
add
xor
mov
pushf
sub
pusha
add
test
inc
add
jmp
les
add
les
cmpsl
jmp
add
aad
jno
mov
clc
negl
mov
daa
or
ret
push
adc
add
sbb
cmpsl
ja
aad
stos
or
mov
inc
add
std
mov
lods
or
ffreep
sbb
adc
sub
aam
and
inc
add
pop
xchg
rcll
inc
xchg
icebp
cltd
mov
jnp
pop
hlt
shll
push
mov
or
xchg
cmp
and
push
adc
in
mov
out
push
cmp
mov
in
daa
xchg
inc
add
pop
xor
loop
add
int3
jo
xor
inc
add
cli
push
add
jns
imul
push
sub
mov
push
mov
pop
sbb
sub
sbb
sbb
adc
hlt
xchg
mov
xor
subl
inc
add
push
xor
mov
add
lods
xchg
lret
xchg
lods
jne
lds
pusha
add
cltd
pop
pop
out
sbb
in
cmp
cmpsl
fldt
pusha
add
add
dec
jae
push
imul
nop
mov
lock
jo
and
cmpsl
shlb
jo
cli
xor
xchg
jecxz
jmp
stos
pop
testl
fstps
xor
in
pop
lret
xor
lock
rolb
mov
les
andl
xor
dec
inc
add
scas
xchg
push
pusha
add
jmp
inc
add
dec
xor
mov
mov
dec
xor
xor
add
dec
in
pushf
ljmp
jmp
add
push
push
ja
movb
mov
push
lods
repnz
fld
add
sbb
and
roll
in
aas
popf
les
sub
cmpsl
pop
in
adc
stos
push
test
mov
stos
aad
dec
xchg
ljmp
add
jno
mov
add
mov
addb
jle
mov
add
mov
sbb
xchg
dec
push
imul
push
sbb
add
add
mov
add
loop
out
rolb
js
sarb
or
ret
imul
in
push
arpl
add
and
inc
add
mov
fistl
dec
jb
loop
cmpsb
ret
fdivl
call
fldt
addl
add
rorl
mov
gs
push
sbb
popa
lock
pop
inc
xchg
aas
roll
out
pop
push
insl
xchg
mov
lds
clc
jecxz
lret
addb
push
xchg
cmpsl
not
pop
push
xor
xchg
jle
cmpsl
mov
loop
jo
mov
add
adc
add
push
add
addb
neg
daa
inc
add
add
push
jp
mov
add
add
xor
inc
add
xchg
mov
mov
fistpl
mov
clts
add
and
add
fsubrp
ret
mov
das
out
imul
insb
sbb
repnz
mov
mov
cmp
jbe
adc
sub
adc
fisubs
sbb
inc
add
adc
idivb
sbb
aad
je
push
inc
add
cmpsl
dec
test
inc
ljmp
les
rcrl
and
lret
pop
movb
loope
je
lds
cltd
xchg
push
pop
mov
es
lcall
int
jl
jl
je
adc
or
out
sbb
fcoml
inc
add
xchg
xor
setnp
sbbl
mov
lock
inc
add
lret
mov
xor
add
push
add
int3
jae
fldt
xlat
pop
ret
pop
mov
xchg
add
rorl
add
xchg
add
push
add
jl
sbb
inc
aaa
das
add
xchg
inc
enter
arpl
arpl
ja
xchg
mov
movb
jge
sbb
xor
jle
std
pop
inc
add
test
sub
sbb
cmp
xor
cmp
pusha
add
and
add
insl
cmp
call
add
addb
out
loop
or
in
lods
in
daa
dec
cmp
dec
lock
and
jmp
add
ret
pop
clc
nop
cmpsb
lods
in
dec
mov
cmpsb
aad
dec
dec
dec
aas
mov
xor
sub
ljmp
cmp
inc
divb
jns
and
adc
into
stos
push
inc
jge
or
loopne
or
fcmovnu
stos
std
rcll
xchg
pushf
fs
cmp
cmp
add
lcall
lret
and
iret
pop
jmp
paddusb
or
rolb
insb
xorl
add
xchg
xchg
stos
repz
xlat
adc
ficomps
pop
and
sub
popf
xchg
add
mov
hlt
fstp
jp
pushf
add
mov
iret
das
or
add
stos
les
ljmp
into
cmp
add
and
aas
xor
xchg
xor
cld
mov
or
aam
add
icebp
pop
js
mov
jns
ss
xlat
movsb
daa
jnp
jns
sub
inc
add
hlt
jecxz
jecxz
jecxz
inc
add
xchg
fucomip
in
aas
mov
cs
xchg
lods
lret
not
jle
ja
xchg
testl
sub
or
mov
in
and
sub
cli
dec
cmp
bound
push
cmp
fst
scas
loopne
mov
inc
mov
lods
fsubrs
sub
mov
push
inc
jle
das
imul
in
dec
pop
rcrb
sbb
int
xchg
jl
dec
sub
inc
add
and
jne
inc
add
popa
lret
movb
xor
insb
add
adc
insl
xchg
fcomip
iret
psrlq
stos
xchg
pusha
add
psrad
jp
sbb
push
add
fldl
into
sti
add
jno
inc
add
add
sub
loop
push
scas
and
scas
mov
jecxz
hlt
or
add
add
sub
add
inc
add
cld
insb
add
js
sub
aaa
mov
or
push
fdivl
cwtl
fnstsw
add
out
dec
insb
in
jae
add
mov
add
add
pop
in
sti
xor
ljmp
andl
mov
ss
leave
mov
sbb
arpl
push
mov
sub
popf
pusha
add
add
cmp
adc
cmp
jp
pop
sbb
mov
fildl
add
cmp
sub
jmp
pop
js
mov
and
mov
pop
lods
imul
mov
push
adc
mov
add
int
add
movb
rolb
movb
fists
push
jae
ss
mov
pop
in
pop
push
popf
dec
cmp
mov
movb
push
rcl
jns
push
cmpsb
jb
push
ret
inc
les
jbe
repz
scas
cmp
ss
jne
sbb
or
mov
mov
in
out
leave
fnstcw
ss
add
add
movb
scas
mov
push
inc
add
leave
stos
mov
imulb
push
outsl
xchg
out
jp
arpl
aad
mov
mov
out
scas
adc
push
jns
dec
push
frstor
pop
fdivr
cmpsb
sub
add
nop
fnstsw
stos
xchg
add
frstor
pop
mov
xchg
sarl
loope
push
das
xchg
stos
cmp
sub
add
lea
jle
lahf
sub
sti
ss
mov
cmpsb
xchg
imul
imul
repz
jns
xor
das
sub
push
add
fcoms
xor
or
popf
rolb
gs
jg
out
cmpsb
and
push
sub
shl
imul
lods
mov
mov
mov
cli
xchg
mov
loop
les
mov
in
outsl
jle
xchg
push
mov
pop
xlat
adc
fidivrs
pop
jnp
add
jb
mov
push
hlt
nop
lret
iret
rolb
cmp
or
jo
inc
add
cli
aad
jns
shl
addr16
rcrl
xchg
mov
add
add
xor
or
mov
mov
push
xor
jns
jbe
shl
or
push
pop
rolb
insb
lea
inc
mov
insl
mov
fldcw
pop
mov
inc
imul
pop
adc
rolb
dec
or
push
xlat
ja
movsb
jmp
xor
push
mov
test
dec
sub
ret
and
outsb
push
fs
cld
jnp
jb
scas
jns
mov
and
in
cltd
push
insl
divb
test
mov
into
and
call
push
inc
cwtl
aad
push
into
mov
add
dec
dec
push
fs
xor
movsl
negb
movsl
ja
push
sub
cmc
sub
add
inc
pop
push
stc
testl
jno
dec
add
pop
in
jae
fstps
sbb
roll
xchg
pop
test
fwait
stos
test
test
mov
pop
lea
data16
sarl
jecxz
pop
mov
jecxz
mov
pop
adc
xchg
inc
out
rcrb
mov
cmp
outsl
aad
pop
sbb
dec
int3
es
push
pop
xor
arpl
xchg
push
add
jmp
jne
mov
rol
stc
dec
sbb
add
inc
add
add
xchg
sbb
push
das
jae
add
lock
rcr
sbb
fs
push
mov
cmpsb
shll
addb
dec
lcall
adc
popf
pop
test
add
add
stos
xlat
adc
jnp
enter
repnz
cwtl
and
push
insl
mov
mov
add
dec
ret
push
or
and
push
dec
push
xchg
iret
sbb
cmpsb
leave
outsl
dec
xchg
pop
xor
jmp
mov
xor
add
add
sub
fcomps
frndint
mov
add
jecxz
and
repnz
loopne
inc
aas
fiaddl
mov
inc
add
adc
and
ljmp
test
cltd
clc
inc
add
scas
les
sbb
mov
add
push
outsb
cs
jns
in
inc
leave
jle
add
and
jecxz
movb
add
xchg
adc
sbb
add
fs
popf
cmp
sbb
dec
cmp
mov
enter
cmp
add
push
mov
adc
sub
xchg
insb
out
dec
sub
loope
repnz
cmpsl
loopne
inc
loopne
rorb
or
pop
jle
xor
xchg
test
int
movb
pop
dec
mov
lret
popf
sahf
cmp
pusha
add
jae
cltd
nop
idivb
out
cwtl
and
inc
add
negb
ja
dec
iret
cltd
xlat
movb
inc
add
or
js
cltd
lret
mov
xor
mov
arpl
cltd
bnd
xchg
push
lock
sbb
add
add
add
inc
aas
sbb
inc
cmc
dec
shl
repnz
dec
leave
test
dec
xor
fimull
xchg
fwait
mov
or
enter
add
in
insl
shrl
cli
cwtl
mov
xor
les
push
and
es
addr16
clc
push
pop
pushw
stos
int3
mov
jno
mov
ret
xchg
je
stos
dec
dec
pop
leave
cli
out
aam
into
ror
sbbl
inc
add
into
sti
rolb
cs
jne
xchg
jecxz
js
mov
pop
popa
movb
jo
jbe
mov
rcrl
xchg
icebp
fwait
repz
add
xchg
inc
add
fdivl
lock
sti
lds
dec
or
mov
push
mov
sahf
aaa
jo
lods
push
add
mov
mov
push
push
inc
add
pop
push
push
cmp
stos
push
cwtl
sub
add
add
in
pusha
add
add
lcall
adc
xor
pushf
aas
loope
gs
xchg
or
or
add
arpl
decl
push
add
cmc
and
fs
push
sbb
enter
add
rolb
add
ret
mov
ret
movb
cmp
cmpsl
or
dec
and
loope
or
jne
addb
ljmp
cmpl
call
pop
fdivrl
out
jo
jno
out
push
sub
add
mov
nop
jnp
fs
ret
sub
sbb
add
popf
sbb
insl
mov
ret
ljmp
dec
xchg
outsl
push
or
push
pop
cld
adc
push
addb
outsl
mov
add
loopne
add
lcall
jnp
dec
jge
adc
and
test
jmp
and
rorl
repnz
xchg
scas
sti
add
ljmp
xlat
or
cmp
add
cmp
lret
add
movsb
and
mov
stc
push
and
inc
mov
shl
adc
or
mov
lret
mov
adc
lret
add
testb
insl
lcall
loop
aaa
add
arpl
xchg
shrl
insl
arpl
mov
mov
mov
inc
add
mov
add
rcrb
add
xor
add
dec
jnp
and
jl
pop
dec
ficomps
adc
icebp
ljmp
sub
xlat
inc
add
data16
lods
test
fwait
push
xlat
jae
xchg
clc
int
iret
sbb
mov
cwtl
out
fnstsw
aad
pop
mov
jp
lock
jb
insb
dec
mov
xchg
incl
sub
nop
imul
stos
push
sub
enter
js
and
jae
inc
add
and
fsts
in
fwait
add
fcoml
aas
sbb
add
sub
daa
add
in
orl
pop
sub
and
adc
mov
sbb
push
sti
mov
add
cs
cli
sub
dec
mov
jle
add
sbb
push
int3
insl
and
sbb
pop
mov
mov
sahf
test
in
jge
movb
jl
sub
xorl
push
fisttpl
test
xor
pop
iret
pop
cmp
popf
push
xor
inc
je
lcall
movzwl
scas
ucomiss
sbb
arpl
push
je
push
or
int3
xor
rcll
add
add
sub
sbb
adc
mov
inc
mov
test
jne
dec
pop
or
lahf
outsb
mov
ret
add
cs
push
ja
lret
lahf
or
mov
movb
sub
hlt
jmp
jg
mov
neg
adc
add
mov
jo
and
inc
dec
jle
addb
clc
xchg
dec
xchg
mov
and
daa
jb
sub
pop
pop
leave
cltd
add
add
push
ret
repnz
rcll
ret
aad
dec
int3
ja
mov
push
add
pop
fwait
rcll
scas
cwtl
sbb
lock
sub
aam
add
dec
cltd
fldcw
stc
lods
mov
lods
shll
shl
inc
or
loopne
stos
or
jo
xlat
cmpl
push
push
push
add
stos
rorl
dec
add
lcall
sub
enter
mov
ret
jae
jno
jns
jl
jle
or
push
mov
push
mov
std
inc
dec
xlat
and
xor
scas
mov
scas
and
mov
xchg
lcall
dec
bound
sub
add
xlat
mov
cmpsl
stc
je
mov
add
in
scas
sub
inc
add
add
add
test
dec
outsl
pop
cmp
jmp
rolb
ficompl
add
xor
sbb
add
push
aaa
sbb
repz
je
dec
scas
mov
xchg
push
dec
sub
pop
add
out
lds
jne
pop
pop
push
test
mov
add
inc
add
test
push
in
dec
stc
mov
add
pop
mov
and
mov
add
test
outsb
imul
aam
xor
dec
pop
aad
pop
adc
mov
in
dec
test
icebp
add
mov
cmc
loopne,pn
push
aad
mov
sub
jo
inc
mov
sbb
pop
adc
sbb
cli
stos
roll
roll
pop
outsl
repnz
xchg
sub
jl
in
add
lret
repnz
popa
pop
cmp
pop
and
int
cld
aaa
inc
add
cwtl
addr16
ds
ficoml
insl
es
jo
das
movb
inc
add
mov
adc
out
cs
xchg
dec
adc
add
loop
sbb
inc
add
inc
add
lock
lods
jecxz
add
add
repnz
enter
into
sbbl
dec
push
pop
fptan
rolb
push
adc
inc
mov
pop
pushf
mov
testb
sbb
push
int3
xor
mov
add
jge
test
push
add
scas
jb
nop
sbb
mov
pop
adc
mov
push
cmpsb
sub
adc
push
das
adc
xor
push
or
cmp
sbb
xchg
ja
lret
test
int
outsl
je
test
rcrb
adc
push
push
sar
mov
lods
divl
cmc
dec
mov
cld
imul
ret
test
cmp
fldl
jge
dec
popa
outsl
pop
test
jno
dec
or
aad
insl
int3
sbb
popf
outsb
sbbl
shrb
aaa
and
imul
int3
mov
mov
push
inc
jno
sub
daa
ds
out
gs
aam
sbb
and
add
je
add
inc
add
les
cld
push
adc
std
and
push
push
insl
loopne
add
jno
ds
add
add
mov
dec
mov
push
pop
dec
and
cmp
mov
and
dec
jne
push
push
mov
pushl
loope
push
fmul
mov
and
adc
jno
rcrl
push
outsb
sbb
mov
pop
or
push
add
push
add
mov
add
nop
imul
mov
and
loope
or
push
mov
dec
cmpsb
fistps
fcmovne
xchg
insb
loope
mov
jb
add
mov
mov
cwtl
or
mov
add
fldcw
inc
add
dec
adc
jbe
jl
imul
out
add
mov
les
adc
sahf
jge
mov
inc
add
xlat
fsubp
mov
add
and
jo
lret
mov
lahf
cmp
jb
push
pop
mov
pop
cld
mulb
push
aas
test
add
push
mov
jb
test
jb
pop
movsl
loope
call
mov
es
adc
cwtl
mov
jae
out
add
cmp
cwtl
adc
stos
pop
lcall
inc
add
add
mov
dec
mov
jmp
cmp
mov
and
mov
dec
mov
mov
faddp
push
jne
sbb
das
repnz
jno
movsb
iret
mov
repz
add
inc
add
outsb
in
dec
mov
dec
push
add
jge
jmp
push
mov
cmp
out
lea
xor
cmp
addb
jo
rolb
jns
jae
stc
fidivrs
mov
out
jb
popa
imul
scas
lahf
pop
push
cs
dec
sub
adc
rcrl
sub
push
pop
mov
pop
scas
arpl
and
outsb
pop
ljmp
lret
fsub
test
jge
test
jns
add
movsb
mov
in
pop
pop
sub
jno
cmp
js
pop
std
inc
add
pop
scas
xchg
pop
dec
or
in
mov
fwait
xchg
inc
mov
inc
out
adc
pop
test
and
aam
push
jecxz
jns
inc
add
add
pop
stos
out
add
mov
and
mov
loop
cmp
leave
adc
xor
dec
test
adc
test
mov
add
lcall
dec
icebp
jle
push
insb
into
ret
add
jbe
lods
jg
cmpsb
adc
push
pop
cwtl
sbb
addr16
mov
xor
out
jae
mov
addl
xor
xchg
pusha
add
xor
js
or
aaa
xchg
scas
or
aad
outsl
mov
loopne
mov
or
imul
call
roll
add
push
cld
pop
or
pop
fsubp
xor
xor
in
sbb
mov
push
outsb
fmuls
add
add
cs
mov
fstl
push
lret
push
add
add
add
fsts
stos
jno
lds
or
lods
push
sub
and
push
fdivrl
add
dec
sub
outsb
add
fdivs
imul
pop
cmp
or
xor
add
testl
mov
adc
xchg
xor
loopne
dec
sbb
addr16
jg
out
in
cwtl
imul
sub
jb
addr16
add
addb
or
jp
mov
push
and
dec
push
mov
add
adc
inc
mov
rorl
add
push
cmc
pop
sahf
gs
jb
push
out
out
pop
xor
rolb
inc
add
dec
aad
add
sbb
add
adc
cltd
sub
imulb
push
clc
loop
loopne
mov
add
mov
adc
add
rolb
cld
out
hlt
test
ret
sub
dec
bound
sub
xor
rolb
cmc
dec
dec
lcall
inc
pop
repnz
mov
xor
cmp
xchg
jecxz
fadds
pop
push
daa
add
lods
lods
jp
and
jb
rolb
inc
testl
lea
and
icebp
mov
aam
fisubs
push
imul
fstps
mov
jb
inc
pop
gs
les
xchg
loopne
imul
scas
mov
je
loop
adc
fs
rolb
jnp
js
aad
sub
xchg
mov
add
les
rcr
shrl
dec
loope
mov
add
outsb
ficompl
lcall
mov
cmp
mov
es
lahf
push
add
inc
fstl
add
out
aas
aaa
lret
std
or
mov
scas
imul
rclb
hlt
rcrl
popf
gs
cmp
shlb
subl
in
dec
popf
addb
jp
and
or
rolb
push
stc
imul
movsb
jmp
mov
fimuls
fnstcw
cmp
push
add
ss
mov
fdivrl
push
in
fbstp
jno
mov
add
out
idiv
adc
mov
sbb
clc
xor
jmp
scas
aam
pop
ss
mov
sahf
dec
sbb
dec
jae
cmp
mov
jae
add
or
jbe
push
add
and
cmp
sbb
add
add
inc
out
cmpsl
push
add
cmp
jno
or
sub
sbb
adc
shll
xor
xor
push
out
stos
movsb
push
and
mov
inc
lea
ljmp
or
lods
filds
mov
jp
enter
jno
jle
push
stos
mov
cmp
stos
mulb
cli
sub
mov
loop
mov
add
sti
mov
adc
jo
sbb
sbb
daa
call
mov
inc
add
push
out
add
xchg
push
push
cmpsb
insb
mov
stos
outsl
jo
xor
stos
aas
mov
add
ftst
cmp
js
rolb
repnz
pop
xor
jo
out
xchg
mov
mov
rcrb
std
pop
add
ljmp
add
push
sahf
adc
pop
jae
arpl
std
lock
add
sub
test
test
mov
push
push
loop
dec
xchg
bound
jnp
push
imul
in
fldenv
jbe
popf
cli
sarb
push
sbb
sbb
mov
pop
dec
xchg
sub
xchg
add
pop
mov
cli
rolb
cmp
cli
insb
mov
sahf
or
data16
rcll
ljmp
addb
add
cs
adc
adc
mov
aam
pop
inc
xor
sarl
jbe
mov
and
adc
xchg
xchg
mov
and
xor
sbb
xor
mov
fst
sbb
pop
orl
pop
mov
testl
jge
dec
idiv
pop
aad
mov
jnp
add
inc
push
das
mov
add
xor
jl
fidivs
push
ret
lods
dec
mov
jbe
cs
addb
rolb
push
imull
add
cmp
in
mov
movsb
fisubl
addb
or
add
outsb
pop
inc
xchg
sbb
mov
add
ja
mov
push
add
int
icebp
aaa
int3
js
inc
out
pushl
xchg
pop
fldcw
push
inc
add
jne
inc
add
inc
pop
add
repz
jecxz
call
pop
sub
xor
jl
add
jno
add
or
and
lret
inc
add
shl
sbb
icebp
add
imul
mov
dec
jae
int3
dec
add
dec
out
fistl
scas
dec
fcmovne
push
loop
out
insl
mov
push
and
pop
fcmove
cwtl
push
aas
add
sbb
je
cmp
xchg
sarl
sub
add
xchg
mov
mov
dec
ds
loope
xor
decb
dec
xor
add
shl
add
xchg
and
mov
pop
lods
jae
inc
bound
jno
cli
dec
cmp
leave
inc
data16
xlat
add
addr16
in
icebp
push
cmpsb
rorb
scas
addr16
test
cli
aas
rol
loopne
pop
fucomi
pop
mulb
push
andl
push
or
mov
mov
jo
mov
inc
cltd
cmpsb
xchg
rorb
sub
rolb
mov
dec
in
movsl
aaa
int
test
xchg
jne
xchg
insl
mov
add
adc
lds
clc
loop
in
mov
cld
pop
add
aas
repz
push
or
cmpsb
popa
jg
mov
fcomp
pop
addb
push
sbb
pusha
add
ss
adc
aad
addb
insb
out
dec
and
cmpsb
stos
push
sub
mov
sbb
dec
inc
sub
fildll
push
mov
roll
xor
jns
xor
mov
or
add
sbb
jmp
imul
or
inc
add
pop
decb
adc
testl
cltd
add
mov
cmc
xchg
pop
sbb
add
push
push
mov
add
mov
cmp
and
pusha
add
rolb
inc
add
mov
jecxz
popl
add
or
or
push
dec
out
addr16
xchg
ljmp
pop
adc
cmp
xchg
xor
add
add
shl
xchg
ss
dec
lret
jb
es
add
in
xchg
pushf
adc
nop
push
mov
loope
js
pop
add
test
push
adc
jle
dec
cmp
aad
inc
divb
mov
inc
add
mov
in
add
fsubl
mov
jp
mov
pop
aaa
fldt
sahf
mov
stc
jg
and
dec
pop
sub
and
add
ret
sahf
xor
mov
cwtl
loope
inc
add
pop
xchg
addb
cs
add
mov
sbb
mov
pusha
add
adc
lcall
adc
xchg
arpl
pop
add
dec
ret
data16
add
adc
add
add
in
mov
add
mov
sub
dec
add
loope
add
lcall
out
inc
mov
add
in
aad
add
xchg
cs
ds
mov
add
dec
cltd
shll
ficompl
es
fstl
movsb
jle
or
cmp
repz
add
mov
adc
fdivl
lods
sarl
jp
jo
loope
jo
popa
test
dec
fisubl
mov
push
adc
rolb
add
pusha
add
sub
shrb
mov
popf
and
ljmp
mov
xchg
add
fcmovnb
add
pop
pop
mov
add
inc
and
jp
fists
addb
les
loop
push
das
push
push
adc
clc
aad
mov
push
adc
das
jae
nop
ret
push
js
lret
lods
ljmp
or
jmp
and
cmpsb
pop
cmp
shll
sbb
pop
inc
jp
icebp
sub
mov
mov
push
ds
xor
aad
mov
mov
fwait
dec
ficompl
in
repnz
mov
and
add
push
shlb
in
roll
sub
xchg
cmp
loop
insl
jge
je
aas
es
mov
pop
sbb
and
jb
bound
jo
rolb
lahf
xor
aas
in
sbb
sbb
push
jno
vmread
pop
enter
cwtl
jns
add
xor
push
cmp
test
dec
into
int3
cli
pop
dec
shrl
test
add
dec
mov
clc
sbb
fisttpl
jmp
rolb
add
call
add
stc
sub
shlb
nop
lea
sbb
add
leave
push
lock
jp
sti
adc
in
sub
pop
and
pop
in
xor
sbb
mov
out
xor
movsb
das
xchg
sbb
sahf
les
mov
cltd
and
adc
cmpsl
imul
adc
je
adc
push
adc
cs
sub
mov
inc
arpl
daa
xor
mov
mov
jae
xlat
je
mov
xchg
dec
jmp
out
xchg
add
movb
push
fs
lahf
lods
mov
mov
add
sub
leave
ljmp
pusha
add
mul
dec
fwait
daa
sbb
jo
or
loopne
loope
mov
shll
add
lods
jl
mov
inc
add
cmp
stc
pop
bound
outsb
nop
pop
addb
xchg
cmp
push
xchg
add
xchg
leave
ljmp
inc
push
add
cmp
cmp
lret
lds
add
loop
xchg
cmc
ljmp
mov
xchg
mov
xchg
adc
push
push
pop
rolb
lock
pop
imul
nop
dec
aas
add
fcoml
add
imul
add
loopne
push
outsl
arpl
inc
and
scas
repz
adc
pop
jl
dec
and
mov
add
lods
into
int
push
mov
insb
sbb
push
aad
add
pushf
xor
lcall
or
or
sahf
add
fwait
cmp
mulb
mov
pop
jmp
add
add
pop
mov
dec
or
pushf
inc
test
out
inc
rcrl
aaa
and
or
add
movb
repnz
cmp
fidivrl
adc
adc
sub
out
sti
addb
rcr
jp
jbe
add
iret
jns
je
mov
in
arpl
xor
push
scas
insb
adc
aad
push
test
add
push
test
sub
insl
and
pop
sbb
add
or
xor
add
outsl
add
ret
mul
in
aam
xor
pop
hlt
push
scas
mov
jmp
xchg
in
rclb
in
cltd
or
mov
mov
adc
jnp
xor
jmp
movsl
lock
xor
imul
ficompl
xchg
and
loop
jge
add
cld
clc
aas
dec
add
std
xchg
lds
lret
dec
pop
xchg
ja
test
lcall
cmpsb
mov
stos
es
ror
cmp
dec
dec
mov
push
jg
ds
add
jmp
arpl
jne
cs
repnz
add
cwtl
sbb
pop
xchg
mov
cltd
xor
add
fldln2
cmpsb
cmpl
pop
xchg
loope
cld
testb
jnp
aas
lret
jecxz
cmp
xor
mov
mov
ret
pop
adc
xor
lods
les
xchg
sbb
mov
mov
sub
inc
mov
fistpl
pushl
loopne
ss
fistps
pop
int3
xchg
ret
sub
push
sbb
push
and
add
es
add
pop
adc
adc
dec
mov
movsl
add
xorl
lods
pop
psllw
mov
mov
cmpsb
and
or
cmp
mov
xchg
daa
inc
add
xor
pop
lret
add
push
add
in
inc
rcrb
mov
pop
pushf
sub
or
fsub
push
inc
add
aam
push
testl
sbb
mov
sub
inc
add
jns
daa
in
dec
sub
push
xor
jns
add
arpl
jnp
pop
push
sete
icebp
push
mov
gs
cmp
lcall
and
inc
add
fisubrl
push
ret
lret
inc
enter
hlt
mull
leave
sbb
addb
jmp
pop
imul
sbbl
cmpsl
cmp
popa
cltd
mov
in
xor
inc
add
insb
add
jl
lea
sbb
fsubr
xor
shll
scas
mov
divb
aaa
roll
jno
mov
pop
adc
lret
pop
sub
fbstp
imul
sahf
test
xchg
push
popa
mov
shrd
shrl
addb
scas
sbb
add
outsl
adc
dec
in
int
mov
je
into
push
cmp
pushf
std
push
out
in
int
xorl
pop
mov
lret
xchg
mov
add
lods
mov
dec
clc
sbb
add
add
mov
call
fcomip
add
push
cld
and
mov
aam
rclb
or
xchg
mov
jle
mov
mov
xor
jbe
sbb
lahf
outsb
and
adc
stos
out
ror
mov
movsb
les
fnstsw
add
xchg
mov
xchg
fstpl
xor
cmpl
mov
inc
and
add
daa
std
out
cmp
and
dec
inc
add
jle
imulb
mov
or
in
mov
sbb
scas
mov
add
and
inc
add
xchg
pushf
lret
mov
pop
mov
dec
lock
cltd
imul
fptan
xchg
cltd
ja
insl
cmc
jns
jge
addr16
mov
or
addb
cmp
inc
add
movb
push
out
aaa
mov
pop
adc
xchg
insb
into
outsb
or
sbb
add
pop
xor
dec
pop
pop
push
addb
mov
inc
add
in
xchg
push
push
cmp
jno
iret
cmp
or
faddl
sub
mov
inc
add
inc
mov
mov
movb
jns
sub
mov
sub
pop
mov
push
mov
cltd
rolb
sbb
cmp
movb
fsubs
mov
jnp
movsl
xchg
cmp
movsl
aam
adc
and
inc
fists
inc
add
cli
int3
sub
add
push
mov
lock
lahf
jae
push
and
add
loopne
mov
orl
fldcw
sub
push
mov
lahf
adc
pop
push
or
mov
cmc
cmp
repnz
push
movb
push
add
insl
and
mov
push
sahf
push
aad
popf
cli
gs
fmuls
je,pn
add
mov
ja
inc
add
dec
imulb
push
inc
add
sbb
push
lds
in
jmp
stc
cmp
in
ds
loopne
sub
mov
cmc
mov
push
shrb
roll
clc
jl
or
stc
fcmovbe
lcall
shll
pop
sub
fs
xlat
rclb
fs
add
add
or
pop
shrb
pop
stos
jo
add
neg
test
insb
sbb
insl
mov
add
fcompl
adc
mov
fdivs
stc
push
mov
fucomip
roll
xchg
push
les
jl
xor
mov
aas
es
loop
add
adcl
and
or
xchg
pop
push
cmp
aaa
idivl
add
ficompl
testl
lock
incl
add
cli
push
mov
mov
add
rcrl
pop
sub
cli
xchg
mov
dec
cmpsl
mov
dec
fsubp
push
xor
mov
stos
out
mov
and
ljmp
jno
pop
sbb
gs
add
ficomps
add
fbld
add
ljmp
arpl
cmp
sub
out
lods
inc
add
das
and
aad
fwait
test
lcall
insb
fadd
add
lods
shlb
scas
jg
xchg
xchg
cmpsl
mov
loop
addb
add
jns
and
mov
jb
mov
shlb
pop
cmp
push
arpl
pop
push
out
pop
fwait
cmp
add
inc
add
adc
push
and
cmpsb
test
add
fildl
add
filds
add
lock
sbbl
test
pop
test
stos
int
and
xchg
in
pop
cmp
daa
sub
mov
repz
add
or
stc
call
mov
sub
sub
sub
xchg
sarb
jg
pop
enter
fcmovnb
mov
mov
dec
and
les
push
add
xlat
sub
cwtl
fwait
xor
add
inc
add
call
mov
mov
dec
enter
inc
add
adc
mov
cltd
mov
dec
xorl
enter
adc
dec
xchg
imul
aam
ss
mov
cwtl
sbb
sbb
out
pop
scas
adc
or
mulb
popf
dec
mov
mov
inc
xor
xchg
push
adcl
cld
dec
jecxz
subl
mov
loope
pop
adc
mov
gs
add
xchg
mov
cmp
mov
daa
fdivrl
and
add
mov
mov
cmpsb
mov
add
inc
xchg
dec
add
shr
int3
mov
or
add
lods
xchg
out
mov
stos
data16
mov
out
cwtl
mov
rolb
outsb
sub
aam
mov
rolb
mov
jp
neg
addb
xor
icebp
outsl
pop
inc
mov
leave
and
rolb
jae
fnsave
push
mov
mov
movb
nop
in
aas
ret
addb
rolb
sub
sbb
orl
xchg
clc
lcall
out
out
add
adc
xchg
mov
cmp
mov
movb
push
stos
inc
cld
jbe
add
jle
adc
xor
leave
fildl
int
mov
aas
lea
leave
cltd
pop
mul
xchg
sbb
add
pop
add
add
cmpsb
cmp
lcall
push
inc
add
es
inc
sub
jge
inc
add
xchg
adc
jl
dec
push
and
int
lret
rolb
jecxz
dec
rcll
cmc
ja
test
jb
jp
mov
pop
ds
fbld
fimull
das
out
ret
mov
out
ror
leave
inc
pop
imul
xchg
stos
ficoms
mov
add
sub
int3
mulb
scas
aas
repnz
push
shrl
add
cmp
mov
add
cwtl
cmp
jno
or
es
or
sbb
outsb
cmpsl
test
cmc
and
cmc
add
jbe
movsl
cmp
jge
add
mov
es
ds
add
gs
stc
mov
pop
fs
xchg
pop
clc
arpl
add
xor
sub
jp
dec
push
addl
enter
add
adc
out
lcall
add
mov
pop
dec
test
je
dec
jmp
adc
mov
xor
test
sub
mov
rcrb
and
mov
orl
addb
xchg
pop
mov
int3
ret
gs
addr16
inc
add
and
mov
enter
rolb
out
mov
add
and
jge
in
add
add
test
jle
pop
inc
add
lahf
xor
sahf
mov
inc
sbb
mov
or
mov
pushf
mov
test
and
stc
movb
push
add
leave
xchg
dec
push
pop
shlb
nop
in
call
dec
mov
mov
add
add
add
