push
push
xchg
inc
xchg
xchg
test
xchg
nop
ret
add
push
inc
inc
aam
add
add
inc
les
xchg
inc
add
adc
add
add
xchg
add
push
inc
rcl
ret
aam
rol
push
add
push
add
add
ret
push
adc
adc
push
push
test
inc
push
ret
add
rclb
add
xchg
inc
add
add
xchg
add
xchg
push
inc
add
xchg
test
xchg
xchg
xchg
inc
add
add
push
addb
rolb
add
inc
xchg
add
add
add
inc
ret
add
adcb
rolb
push
rclb
test
push
nop
push
ret
push
push
add
les
push
add
push
aam
xchg
addb
rolb
push
nop
xchg
add
ret
adc
test
xchg
add
adc
inc
push
ret
rol
nop
xchg
add
add
xchg
nop
add
inc
push
xchg
inc
push
push
add
add
add
les
xchg
add
rolb
push
add
push
add
test
xchg
push
push
aam
aam
test
inc
push
add
push
add
add
inc
add
adc
rclb
test
add
push
ret
xchg
aam
add
xchg
push
inc
xchg
inc
inc
add
mov
xchg
rolb
push
push
xchg
inc
add
add
inc
add
adc
add
inc
add
push
add
adc
add
adc
nop
add
push
xchg
push
rclb
push
rcl
adc
addb
inc
rclb
add
aam
push
adcb
xchg
addb
aam
push
adc
add
add
push
les
add
add
ret
add
inc
add
rclb
add
inc
movb
add
aam
rclb
xchg
inc
push
push
add
xchg
adc
add
rclb
rol
add
xchg
movb
adc
add
xchg
adc
add
aam
add
mov
test
ret
adc
rol
addb
xchg
push
inc
push
push
rolb
inc
push
push
add
add
push
rol
push
xchg
xchg
inc
rolb
rolb
add
add
add
adc
rolb
rcl
add
inc
xchg
addb
test
adc
xchg
add
push
adc
rolb
xchg
xchg
xchg
rclb
add
push
push
rclb
add
adc
push
push
push
rclb
add
rolb
inc
add
add
test
xchg
add
push
push
adc
inc
xchg
test
xchg
push
add
push
xchg
adc
inc
inc
add
rolb
addb
rclb
adcb
add
push
add
xchg
add
add
add
add
xchg
add
aam
adc
add
push
push
inc
add
xchg
inc
add
push
les
xchg
adc
rcl
rclb
adcb
inc
add
push
add
add
adc
inc
aam
inc
add
push
push
les
push
adc
add
mov
inc
rolb
ret
add
rol
inc
add
xchg
test
add
nop
push
movb
push
adc
mov
adc
add
add
rolb
ret
inc
xchg
add
add
add
movb
add
add
xchg
xchg
add
push
add
addb
addb
xchg
push
rcl
rolb
aam
adc
inc
add
push
add
add
add
test
add
rclb
adc
test
test
test
rolb
add
nop
xchg
add
add
add
push
nop
xchg
ret
xchg
add
push
inc
test
rolb
push
xchg
movb
add
add
add
nop
add
xchg
add
push
push
rol
add
push
adc
push
xchg
adc
add
inc
adc
addb
test
rolb
inc
rcl
adcb
add
xchg
inc
inc
push
les
adc
aam
push
add
xchg
nop
test
adc
xchg
add
add
add
push
xchg
add
nop
add
xchg
add
add
xchg
add
push
push
add
adc
add
test
rcl
adcb
adc
push
add
push
add
add
rclb
add
xchg
push
rolb
inc
push
rolb
push
xchg
rolb
rolb
adc
addb
xchg
push
push
add
adc
test
xchg
addb
xchg
add
adc
inc
ret
add
rclb
add
addb
adc
add
push
xchg
inc
rolb
adcb
xchg
push
inc
push
add
add
inc
push
push
add
inc
xchg
aam
les
inc
add
push
add
push
inc
nop
inc
test
adc
inc
aam
add
add
push
add
xchg
add
xchg
add
add
add
add
rolb
adc
add
add
inc
adc
add
add
inc
rol
xchg
add
add
inc
xchg
xchg
add
rolb
movb
inc
xchg
adc
add
add
push
adcb
add
rclb
add
add
add
adc
inc
xchg
rclb
push
push
inc
nop
add
adc
les
inc
add
inc
add
add
rclb
push
inc
push
adc
adc
add
rcl
xchg
add
xchg
adc
rclb
les
push
inc
push
rolb
push
add
add
xchg
test
adc
adc
push
nop
push
push
add
test
test
test
les
add
rolb
push
push
push
rol
adc
add
add
add
test
addb
xchg
push
add
add
inc
add
push
xchg
add
aam
xchg
adc
add
xchg
inc
movb
add
push
add
test
adc
aam
add
add
test
push
push
inc
add
add
inc
adc
rclb
add
add
add
xchg
xchg
inc
add
addb
addb
add
adc
ret
adc
push
add
add
push
add
inc
adc
push
xchg
add
xchg
adc
nop
add
adc
aam
inc
xchg
adc
aam
les
ret
add
ret
push
push
adc
adcb
inc
adc
adc
add
add
adc
push
push
test
rolb
push
add
push
ret
adc
add
test
add
xchg
push
add
add
push
push
test
push
add
aam
addb
adcb
addb
aam
add
add
push
inc
add
add
push
add
inc
add
add
rolb
add
add
adc
les
push
ret
rolb
xchg
xchg
adc
test
push
push
add
ret
movb
rclb
xchg
xchg
xchg
add
push
add
add
push
rolb
push
inc
addb
add
push
test
add
add
add
push
adc
adc
ret
add
adcb
inc
push
adc
xchg
push
rclb
xchg
add
add
add
rclb
inc
add
nop
add
inc
add
xchg
movb
add
addb
xchg
rolb
add
adcb
inc
aam
add
rcl
inc
add
adc
inc
inc
adc
adc
aam
nop
rol
add
add
adc
rclb
add
addb
addb
aam
push
mov
rolb
add
push
push
adc
aam
adc
rolb
add
add
add
add
rolb
adc
add
add
push
inc
add
adc
inc
push
push
add
xchg
inc
add
add
test
inc
xchg
xchg
push
push
nop
rolb
push
nop
push
les
xchg
nop
add
addb
adc
inc
add
inc
rolb
adc
add
push
push
add
add
add
xchg
add
inc
xchg
test
movb
push
add
add
push
adcb
test
addb
push
push
add
rol
push
push
nop
aam
inc
add
inc
add
add
aam
rclb
xchg
xchg
add
xchg
add
aam
test
add
push
adc
push
push
xchg
push
rolb
add
rolb
xchg
push
aam
add
xchg
adcb
add
xchg
xchg
addb
inc
inc
xchg
inc
xchg
aam
inc
rolb
addb
push
xchg
add
ret
add
rclb
inc
add
movb
inc
push
push
inc
add
add
nop
les
test
nop
add
addb
add
add
add
inc
aam
add
push
push
nop
add
rclb
adc
add
add
add
adc
rclb
push
addb
push
movb
add
add
adcb
movb
inc
inc
add
push
add
inc
push
push
inc
les
push
xchg
adc
push
push
inc
push
ret
add
mov
add
rolb
aam
push
inc
addb
nop
inc
push
xchg
add
push
add
rol
xchg
adc
adc
add
push
add
ret
rolb
addb
inc
addb
inc
rolb
add
add
test
xchg
xchg
add
push
adc
xchg
add
inc
inc
add
add
inc
nop
aam
rclb
aam
adc
test
xchg
addb
add
add
adc
les
xchg
adc
movb
add
push
ret
add
add
push
push
push
inc
add
nop
adc
push
add
adc
add
push
inc
adc
inc
add
adcb
inc
add
nop
push
movb
add
add
inc
inc
inc
rolb
push
push
inc
test
add
push
ret
add
xchg
rclb
rol
add
add
add
push
aam
adc
adc
les
ret
push
xchg
addb
adc
add
add
rolb
xchg
adc
test
add
push
add
xchg
add
xchg
adc
add
add
add
aam
push
add
add
add
add
push
add
adcb
xchg
add
push
add
push
add
push
adc
addb
add
rclb
xchg
inc
inc
rclb
xchg
rclb
rcl
adc
inc
inc
adc
inc
nop
push
nop
add
xchg
rol
add
xchg
push
inc
ret
add
inc
xchg
add
add
inc
add
adc
xchg
xchg
add
add
push
aam
adc
add
add
push
les
add
ret
nop
add
aam
aam
test
add
adcb
add
aam
aam
test
xchg
add
add
add
addb
ret
inc
push
inc
xchg
add
rclb
adc
adc
nop
add
xchg
xchg
add
adcb
add
xchg
rclb
adc
push
add
rolb
ret
add
adc
rol
push
test
inc
nop
push
push
add
adc
add
add
addb
add
aam
add
add
les
addb
inc
les
xchg
addb
rclb
test
xchg
les
push
adcb
rcl
add
add
push
inc
xchg
xchg
adc
add
inc
add
adc
add
push
movb
push
add
add
add
inc
ret
add
add
rclb
add
les
push
ret
inc
xchg
inc
add
push
xchg
inc
rclb
ret
les
inc
xchg
xchg
ret
xchg
rol
rcl
test
add
add
add
add
add
test
add
les
les
nop
movb
les
push
push
adc
inc
xchg
aam
xchg
xchg
aam
test
push
push
adcb
add
xchg
aam
aam
rol
adcb
ret
push
xchg
add
addb
movb
add
les
nop
add
push
les
aam
adc
les
addb
xchg
add
adc
push
test
add
push
inc
adc
add
rclb
aam
xchg
add
add
rol
rclb
add
xchg
nop
nop
add
add
xchg
nop
adc
add
push
add
add
inc
add
inc
push
push
xchg
add
inc
test
inc
addb
push
add
inc
xchg
push
xchg
xchg
push
rolb
push
aam
add
inc
add
push
nop
rol
add
add
inc
movb
xchg
rol
push
add
addb
rol
xchg
xchg
inc
nop
xchg
xchg
nop
ret
inc
inc
push
add
inc
add
addb
adc
add
rolb
add
rclb
add
rclb
add
adc
push
add
inc
rolb
test
adc
rol
rclb
push
push
aam
nop
add
inc
inc
push
add
adc
push
aam
add
add
rolb
adc
inc
push
adc
xchg
addb
rclb
xchg
adc
movb
addb
xchg
add
addb
inc
push
adc
xchg
adcb
rolb
add
add
ret
push
xchg
push
add
adc
adc
addb
xchg
add
aam
adc
nop
inc
rolb
xchg
push
rol
add
push
xchg
add
ret
add
addb
add
add
xchg
rol
ret
movb
rclb
addb
adc
rclb
movb
aam
push
push
rcl
add
push
add
push
push
push
rolb
test
add
inc
adc
push
adc
add
rolb
add
adc
push
push
push
add
add
rclb
addb
xchg
push
nop
adc
add
adc
add
push
add
test
push
push
aam
add
addb
rclb
add
rol
push
adcb
add
adcb
add
adc
addb
adc
aam
nop
aam
add
rolb
push
add
xchg
xchg
push
push
xchg
aam
inc
add
inc
push
addb
add
inc
nop
adc
add
add
push
inc
add
movb
add
push
movb
push
add
inc
add
add
adc
push
xchg
add
adc
movb
rclb
inc
push
adc
inc
movb
les
add
addb
add
add
xchg
rcl
adc
push
push
add
xchg
inc
push
adc
add
xchg
nop
push
add
add
add
push
xchg
xchg
push
add
push
push
xchg
push
xchg
add
inc
rclb
addb
add
add
push
aam
push
aam
inc
xchg
add
add
rcl
inc
inc
rol
push
rclb
inc
adc
test
push
rolb
inc
push
add
inc
inc
push
rcl
inc
rclb
adc
adc
add
add
add
adc
push
inc
add
push
add
les
add
adc
add
add
push
adc
add
add
push
push
ret
ret
add
push
nop
push
rclb
rolb
add
xchg
inc
nop
inc
add
rclb
push
push
add
push
inc
inc
adc
add
inc
add
push
push
push
push
push
inc
add
rclb
inc
xchg
les
inc
les
add
xchg
inc
inc
adc
add
rolb
adc
add
nop
push
adc
xchg
add
add
addb
adc
aam
adcb
adc
push
xchg
add
adc
xchg
xchg
inc
inc
inc
push
inc
rclb
inc
nop
inc
push
push
push
add
xchg
movb
add
push
add
add
push
les
aam
add
push
add
adc
inc
add
xchg
rolb
xchg
adc
rcl
xchg
push
test
ret
adc
push
adc
add
add
inc
movb
ret
push
add
nop
push
add
push
rcl
ret
push
les
rolb
push
add
inc
rclb
adc
add
add
adc
add
xchg
inc
add
xchg
xchg
addb
add
aam
add
add
inc
adcb
add
xchg
add
xchg
adc
adc
add
add
add
push
add
add
push
add
add
addb
inc
les
add
rolb
add
nop
inc
rclb
add
push
aam
push
add
inc
rolb
xchg
push
add
test
add
add
les
add
add
adc
add
add
xchg
test
inc
adc
adc
xchg
adc
rcl
inc
adc
rolb
add
add
add
adc
rolb
inc
add
xchg
inc
add
xchg
add
xchg
add
nop
adc
rol
test
add
push
add
push
inc
add
addb
xchg
movb
inc
addb
xchg
xchg
push
push
add
add
add
push
nop
push
les
push
adc
add
xchg
rclb
xchg
adc
push
push
add
rclb
nop
add
add
push
add
inc
test
add
add
push
push
les
xchg
add
rolb
xchg
les
adcb
ret
nop
inc
rclb
push
push
push
les
push
xchg
add
nop
rolb
push
add
add
add
add
addb
rolb
aam
push
ret
add
inc
add
add
ret
inc
xchg
xchg
ret
add
addb
inc
push
rolb
push
add
push
push
adc
push
ret
rcl
inc
xchg
nop
add
add
xchg
inc
nop
add
push
xchg
test
xchg
add
movb
inc
xchg
add
add
adc
inc
inc
xchg
push
add
add
add
adc
test
push
rolb
push
addb
push
rolb
inc
push
add
adc
add
adc
push
aam
push
inc
rolb
push
add
xchg
nop
rclb
nop
adc
xchg
adc
push
rcl
add
push
add
push
xchg
xchg
adc
xchg
adc
push
adc
adc
push
add
rcl
push
addb
rolb
rclb
add
push
push
xchg
add
rclb
push
inc
rclb
push
xchg
test
inc
push
inc
xchg
xchg
add
add
addb
adc
add
push
push
add
add
add
adcb
add
adc
push
push
rcl
ret
rclb
add
les
add
test
add
adc
xchg
push
addb
adc
test
adc
adcb
push
push
add
add
test
rclb
adcb
adc
push
add
test
push
test
xchg
rolb
adc
push
nop
add
add
xchg
nop
inc
inc
push
adc
adc
add
push
adc
adc
aam
nop
ret
adcb
inc
nop
push
inc
test
ret
add
add
push
adc
push
addb
test
adc
nop
push
add
push
push
nop
inc
xchg
rolb
rclb
rolb
adc
push
ret
adc
add
xchg
add
push
push
addb
test
xchg
push
adc
push
xchg
rolb
add
add
push
xchg
push
inc
inc
inc
aam
ret
les
push
inc
add
rolb
push
rolb
aam
add
ret
les
test
adc
inc
adc
add
push
adc
push
push
adc
add
aam
add
push
add
ret
adc
rclb
inc
aam
add
xchg
xchg
add
aam
add
rclb
rolb
adc
push
add
push
adc
add
push
add
les
xchg
nop
rcl
test
movb
xchg
rclb
xchg
push
add
push
add
aam
add
ret
add
adc
add
addb
adc
add
add
inc
add
xchg
rolb
add
les
aam
rolb
push
add
rclb
xchg
add
test
movb
rol
rolb
test
xchg
add
adc
inc
rol
xchg
push
nop
add
push
push
push
add
adc
xchg
nop
push
adc
add
add
push
add
adc
add
rolb
aam
add
xchg
adc
push
inc
nop
push
add
xchg
push
xchg
movb
add
xchg
push
rcl
push
inc
nop
inc
push
addb
addb
add
inc
add
adc
addb
les
add
adcb
xchg
xchg
xchg
add
add
add
add
adcb
push
nop
nop
push
xchg
add
push
add
push
add
add
xchg
push
rolb
xchg
push
les
les
add
xchg
les
add
add
inc
xchg
add
add
xchg
rolb
rclb
ret
ret
adc
adc
push
add
inc
push
les
xchg
add
les
add
inc
rclb
add
add
push
inc
add
rol
rclb
push
rolb
add
add
push
aam
aam
add
add
add
rol
adc
push
push
nop
push
push
add
test
inc
push
add
push
inc
adc
push
nop
add
ret
add
xchg
aam
push
inc
add
add
inc
test
xchg
add
add
add
rolb
push
test
add
rclb
add
add
rolb
inc
rclb
adc
add
add
push
push
inc
push
push
add
inc
ret
add
add
rcl
xchg
xchg
add
inc
push
adc
push
inc
push
push
push
push
adc
add
push
push
adc
adc
inc
adc
xchg
add
xchg
add
push
push
add
push
adc
push
adc
rclb
movb
adc
add
inc
add
addb
adc
push
adc
xchg
add
add
inc
add
add
push
xchg
add
inc
inc
rclb
inc
xchg
inc
add
add
add
push
loop
dec
push
pop
sbb
test
mov
sbb
addl
out
in
xor
cmpl
xlat
or
cwtd
push
jl
fcomi
cwtd
cmp
icebp
aas
loopne
and
jno
jmp
pushf
stos
loopne
adc
movsl
mov
ret
addb
incb
mov
sub
iret
dec
cwtd
xor
jl
mov
adc
mov
xchg
loope
xchg
decb
mov
lods
pop
inc
mov
fsubrs
out
push
jbe
jo
in
jmp
call
mov
inc
int
ljmp
push
arpl
aad
push
and
insb
xchg
popf
dec
loopne
sar
push
sbb
gs
insb
xchg
incb
incb
mov
int
jge
shrb
into
push
decb
mov
leave
lods
push
enter
loopne
mov
mov
sub
fistps
jg
dec
jl
xlat
decb
mov
inc
mov
stc
adc
xor
movsl
sub
inc
jno
and
ss
test
or
pushf
add
inc
rclb
sti
jmp
idiv
jae
aaa
sub
cmp
push
out
push
cs
xchg
adc
xchg
mov
ljmp
pusha
lahf
cli
inc
mov
cwtd
decb
mov
mov
cmp
pop
pop
mov
sbb
or
incb
pop
aas
jge
scas
jge
adc
or
incb
roll
xor
inc
lods
mov
imul
sub
push
stc
decb
mov
pop
shll
idiv
mov
mov
inc
mov
jecxz
sbb
xchg
mov
loop
inc
sar
mov
insl
movsb
jo
add
sub
enter
stos
lahf
push
pop
call
aaa
push
hlt
push
imul
push
stc
call
aam
mov
or
decl
pop
inc
mov
movsl
cmpsl
mov
fcoml
cmp
push
mov
popf
pop
mov
stos
jbe
lret
mov
loop
call
xchg
jmp
inc
stc
in
sarl
cld
gs
push
adc
fisubrl
pushf
lcall
mov
incb
outsl
jne
pop
mov
ror
xorl
popf
test
icebp
stos
sbb
fndisi(8087
cmp
insl
das
mov
jp
inc
mov
pop
mov
cmp
popf
inc
mov
mov
lret
mov
xchg
imul
clc
cmp
dec
inc
mov
push
outsb
xchg
fcoms
inc
mov
stos
mov
imul
xor
shl
inc
mov
cmc
mov
mov
out
add
out
and
dec
cmpsl
movsl
mov
dec
imul
dec
jb
sub
out
push
aad
cmc
mov
arpl
dec
mov
add
mov
icebp
sub
xor
jecxz
bound
rorb
cwtd
stos
imul
mov
mov
add
inc
aad
cmp
lcall
test
sub
decb
inc
sahf
jns
out
jecxz
stos
mov
out
mov
lret
mov
mov
jns
jge
shr
ss
adc
cs
sbb
mov
pop
pushf
aad
add
decb
sub
jb
or
adc
xchg
les
popf
rcrl
std
pop
jo
js
lock
cmp
punpckhdq
xor
mov
mov
ds
or
fwait
insl
add
cmp
cmc
dec
mov
cmp
inc
or
sub
int
xor
lea
scas
lods
pushf
loope
out
mov
ret
repnz
int3
push
jbe
lock
mov
pusha
lahf
repz
adc
popf
incb
jge
mov
lcall
cmp
jae
dec
xor
jle
rorl
movsl
lods
xchg
mov
out
icebp
jne
cmc
ja
pushf
addb
arpl
jns
rcll
and
cwtl
cmp
into
roll
icebp
push
jbe
xorb
in
inc
mov
adc
push
adc
imul
sti
call
sub
lret
jbe
cmc
and
pop
push
stos
pop
mov
ret
sbb
stc
cmp
adc
dec
mov
push
incb
xchg
fs
pop
add
sbb
decb
test
xchg
movsb
sbb
lock
xchg
aad
add
inc
mov
push
stc
fisttpll
mov
xor
xchg
scas
push
xchg
push
loope
mov
mov
mov
stc
incb
rcrl
call
add
fsts
test
ds
mov
das
inc
mov
sahf
cmpb
mov
aad
test
xor
cmp
sbb
push
movsl
or
das
bound
mov
imul
incb
fildll
pop
or
decb
dec
push
sub
and
fcoms
popf
lods
ds
fcompl
dec
add
pop
dec
and
lock
dec
and
jns
or
incb
mov
icebp
dec
add
out
shll
sbb
sti
and
fildll
mov
popf
pop
sub
mov
and
push
inc
mov
jno
cmp
cmp
add
cs
xor
xchg
pop
sub
incb
pop
pop
push
stc
out
cmpsl
fnsave
sub
daa
sbb
mov
jp
addr16
mov
xchg
pop
pop
insl
push
bound
movsl
pop
and
push
stos
insb
xchg
outsl
jae
fwait
sahf
fs
outsl
add
out
into
fiadds
lcall
cli
mov
rcll
lret
xor
cwtd
jns
iret
movsl
jge
push
mov
ret
arpl
cld
cltd
add
and
sti
sarl
xchg
adc
push
and
mov
arpl
sar
fsubr
ret
mov
mov
mov
xor
aad
pshufw
mov
jno
cmove
push
test
scas
les
mov
mov
call
xchg
sub
aaa
ss
out
jnp
movsl
cwtd
mov
pop
loope
cmp
shlb
jno
mov
lds
xchg
xor
or
or
mov
mov
mov
lret
dec
popa
xchg
mov
mov
incb
pop
insb
xchg
imul
cwtd
daa
pop
push
fcmovu
sbb
jle
push
stc
lods
mov
aad
stc
xchg
jmp
mov
das
inc
and
insl
ret
mov
pusha
lahf
pushf
loop
fwait
test
nop
push
mov
call
mov
jg
scas
fiaddl
or
lret
sbb
push
cmp
mov
mov
xlat
push
ds
cwtd
decb
das
dec
mov
fisttpll
mov
aas
sahf
int3
ja
pop
pop
mov
cmp
adc
mov
sub
decb
sub
test
add
decb
xchg
and
scas
repz
mov
stc
push
es
adc
cld
faddp
rcrl
out
or
incb
insl
push
loopne
gs
mov
mov
adc
adc
push
xor
mov
std
insl
inc
xchg
jmp
pusha
lahf
decb
add
mov
push
incb
out
mov
and
rorb
mov
dec
mov
pop
sbb
sub
incb
std
and
inc
mov
in
push
repnz
and
xchg
fwait
dec
ds
imul
out
jne
cmp
mov
xchg
daa
imul
mov
fs
incb
in
imul
cwtl
and
imul
sbb
adc
rorl
sahf
and
push
cltd
jmp
and
lret
xchg
incb
jnp
test
scas
movsb
cmp
add
xor
shlb
stc
mov
xchg
cmpsb
je
xor
mov
and
call
mov
testl
mov
xorb
repnz
mov
cmpsl
rclb
xchg
push
into
adc
rolb
scas
jnp
rorb
xor
out
out
mov
sub
cmp
dec
mov
ljmp
add
popf
stos
adc
pop
inc
mov
arpl
aaa
inc
xor
push
stc
int
add
stos
into
mov
xchg
add
xchg
xorb
sbb
scas
ficoml
sti
xor
inc
mov
inc
mov
icebp
stos
sbb
addb
adc
cs
andl
xor
xchg
dec
cwtl
ds
jae
aad
mov
repz
je
imul
sahf
ja
sbbl
movsl
and
cmpsb
cwtl
jbe
mov
and
dec
pop
mov
jnp
push
icebp
decb
icebp
jecxz
push
pop
add
adc
cli
push
cmp
outsl
fcompl
jae
dec
mov
outsb
xchg
xchg
leave
dec
mov
mov
call
rclb
out
popf
pop
addb
dec
mov
leave
aad
mov
fstp
imul
decb
mov
sbb
push
adc
adc
out
mov
adc
push
outsl
push
xor
js
push
adc
mov
pop
idivl
lds
inc
mov
dec
out
cmpsl
out
dec
cmp
popa
mov
sar
xor
movsb
jp
pop
inc
mov
xor
testl
lahf
pop
lcall
cmc
out
imul
sbb
es
dec
sub
mov
xchg
dec
in
imul
jno
daa
popa
jle
sub
mov
cmp
sar
or
bound
mov
push
scas
insl
cmp
dec
add
out
mov
inc
mov
or
cmc
push
mov
es
and
in
push
push
stos
mov
cld
cmpsb
ljmp
cmp
dec
dec
mov
xlat
insl
pop
bound
push
testb
mov
cmp
xor
lahf
aam
sar
iret
sbb
xchg
push
stos
daa
adc
test
push
leave
fisubs
xchg
incb
into
push
mov
leave
imul
xor
int
lock
jb
pop
in
add
pop
out
es
jmp
ljmp
mov
in
insb
xchg
sub
sarl
adcl
dec
mov
mov
movsl
mov
movsl
mov
xchg
pop
mov
imul
push
cmc
mov
push
sahf
lock
xchg
ljmp
dec
mov
push
xor
repz
mov
push
xchg
imul
mov
mov
pop
femms
icebp
and
cmpsb
imull
mov
adc
aad
fdivl
sahf
and
pushf
iret
and
xor
rorb
sbb
or
add
decb
leave
daa
cmc
cmp
das
lods
pop
daa
dec
mov
cli
pushf
cld
mov
jl
sub
test
hlt
pop
stos
pop
lock
mov
mov
ds
ss
inc
mov
addr16
sbb
idiv
test
mov
jecxz
shlb
xor
mov
jbe
jp
aad
iret
pop
sar
mov
cmpsl
sub
mov
cli
push
outsl
push
inc
xchg
stc
pop
mov
mov
xor
loopne
mov
pop
sbb
sbb
cmp
stc
xlat
pop
sub
outsl
pop
mov
popf
jb
xchg
out
outsb
xchg
and
xchg
outsl
sub
cmp
sub
cmp
cld
inc
adc
mov
xchg
jb
int
mov
ret
jmp
das
sub
xor
fisttps
and
push
cmc
leave
ficomps
mov
or
push
jb
adc
mov
jns
cld
stc
ds
mov
iret
outsl
je
mov
repnz
sub
cs
rcl
xor
dec
inc
jnp
jb
movsb
stos
popf
dec
pushf
dec
dec
mov
dec
mov
notb
and
sbb
add
adc
cmc
in
out
adc
cmpsl
sahf
inc
xchg
sbb
test
imul
xchg
xor
call
ljmp
pop
dec
mov
jmp
sub
or
jo
gs
inc
out
out
sahf
movsl
fisubs
xchg
inc
lahf
loopne
push
repz
fsts
jbe
aad
enter
cmpsb
jge
aad
lods
and
sbb
lahf
inc
loope
xchg
push
es
divl
push
pusha
lahf
decb
pop
pop
xchg
and
jmp
mov
xchg
mov
das
sbb
jns
mov
in
cmp
cmp
xor
jo
pop
test
jle
orl
insb
xchg
and
inc
and
jb
and
jnp
mov
mov
fs
arpl
lcall
fisttpl
adcl
pop
xchg
mov
adc
popf
cmpsb
inc
lahf
nop
cld
xor
ret
jb
repnz
and
in
in
arpl
mov
jge
das
movsl
insl
in
fwait
test
adc
mov
incb
push
das
stc
add
pop
push
xchg
jnp
and
jmp
adc
cmc
mov
nop
shll
xlat
incb
clc
add
lods
in
sub
incb
test
adc
sub
push
mov
cmp
ljmp
dec
mov
inc
mov
pop
bound
push
lods
fstps
bound
std
nop
clc
or
fst
fdivrl
test
push
out
jl
mov
mov
std
mov
xlat
into
jbe
out
shlb
filds
sbb
js
ret
incb
lahf
out
dec
mov
push
pop
mov
mov
lahf
mov
jns
mov
mov
push
stc
das
push
negb
dec
xor
stc
mov
movsl
adc
or
incb
stos
lods
jmp
mulb
call
sahf
xor
mulb
aaa
dec
mov
scas
adc
dec
mov
adc
push
stos
xor
ljmp
sbb
pop
lret
jbe
sbb
test
mov
insl
loope
dec
inc
mov
shlb
iret
pushf
scas
inc
mov
xchg
loop
inc
mov
cli
cmp
leave
cli
xchg
jns
jge
jnp
cmp
les
mov
sub
repz
incb
add
sub
push
add
sbb
imul
push
pop
insl
int
pop
dec
mov
inc
mov
fnstenv
jle
lock
outsb
xchg
incb
mov
icebp
decb
je
sub
rorb
jmp
mov
cmp
movsb
inc
mov
mov
add
pop
outsl
cld
jb
mov
stc
pop
or
stos
stc
mov
and
loope
mov
dec
lcall
out
aaa
mov
std
xchg
fsubrl
dec
mov
sti
decb
repz
pop
push
gs
clc
mov
imul
xchg
and
outsb
xchg
push
mov
stos
add
push
sbb
adc
mov
out
cmp
xchg
cmp
bound
hlt
jnp
scas
mov
bound
clc
pop
test
cs
push
lods
inc
push
xchg
inc
sbb
xchg
incb
xchg
addb
decb
ffreep
xchg
test
out
adc
xchg
iret
stc
ret
jnp
inc
or
cmc
aam
out
mov
mov
add
loope
xlat
int
rolb
push
dec
cmp
dec
sub
adc
enter
inc
or
fsin
pop
xor
push
and
mov
icebp
dec
int3
inc
mov
lock
stos
movsb
add
incb
decb
aas
popa
cmpsb
enter
xchg
nop
pop
insb
xchg
incb
ja
adc
xchg
scas
mov
clc
jo
das
js
cmp
mov
pop
dec
mov
fwait
sbb
xlat
push
mov
xchg
or
out
add
incb
fwait
stc
outsb
xchg
in
mov
xor
xchg
and
pop
push
bound
cli
inc
ret
push
xchg
lods
xchg
stos
inc
outsb
xchg
scas
daa
pop
pop
mov
jbe
mov
push
push
and
mov
and
jecxz
sbb
mov
xchg
push
dec
mov
jno
push
test
stc
test
hlt
or
aad
or
fisttpll
push
cmp
mov
push
stc
cmp
fbstp
sub
and
lcall
loop
lcall
fwait
decb
idiv
into
cmp
fsubrl
cld
cmpsl
mov
je
shr
nop
or
movsl
stos
loope
xchg
sub
lock
ret
in
daa
inc
mov
jo
push
or
push
mov
popa
xor
xchg
iret
jb
sub
ljmp
and
mov
stos
push
or
daa
jbe
sub
xchg
insb
xchg
incb
in
aaa
dec
push
add
xchg
cmpsb
mov
stc
mov
mov
addr16
cmpsb
adc
inc
repnz
lret
xor
test
or
adc
mov
stos
enter
inc
int
fsin
mov
in
stc
pop
ja
mov
das
xor
mov
add
sti
mov
mov
adc
fwait
out
mov
andl
push
xchg
adc
mov
jns
lret
jne
shl
out
jbe
imul
ds
fidivrl
les
nop
pop
jp
imul
sti
repnz
sub
dec
dec
mov
xor
mov
jmp
fwait
mov
movsb
mov
ljmp
stc
mov
enter
xlat
mov
into
xchg
adc
dec
mov
ljmp
pop
imul
or
fstpt
repnz
pushf
fnstenv
cmp
dec
mov
test
jmp
pusha
lahf
sti
jnp
mov
add
mov
or
xchg
fcoml
dec
stos
jnp
mov
mull
mov
decb
stc
loopne
push
push
push
stc
mov
xchg
dec
mov
outsl
and
push
mov
xor
pop
icebp
es
aam
sti
jae
pushf
jo
aaa
in
fwait
scas
push
insb
xchg
xor
test
std
xchg
cmp
xlat
imull
lret
jb
mov
popf
mov
cmp
cmp
aad
or
decb
adc
clc
inc
xchg
mov
loopne
ss
scas
adc
insb
xchg
cs
xor
lcall
cmpsl
mov
pop
sub
or
in
and
pause
push
sti
mov
mov
mov
fs
incb
sbb
shlb
pusha
lahf
jbe
out
ret
xchg
lret
in
fwait
loop
mov
mov
cmp
into
jg
or
pop
mov
and
xchg
les
mov
pusha
lahf
aad
fs
incb
push
rolb
push
cmp
pop
fwait
clc
and
sar
out
lahf
adc
imul
sar
fucomi
popa
cwtd
decb
insl
add
decb
sbb
xchg
pop
mov
fldt
decb
push
icebp
fxch
lcall
les
div
xchg
xor
ja
mov
pusha
lahf
imul
inc
mov
cmc
mov
add
ret
lock
in
sub
dec
mov
incb
sbb
pop
outsl
stc
dec
dec
mov
rcll
std
jno
aas
adc
fsin
mull
js
nop
pop
and
and
or
cmp
popf
sub
scas
popa
faddl
std
push
int
cmpsb
int3
adc
sbb
lods
ds
test
push
icebp
lahf
jmp
fcomps
pop
adc
arpl
mov
cmpsl
mov
mov
pop
mov
push
js
pop
inc
mov
pop
ja
inc
mov
cmpl
nop
mov
fsin
icebp
addr16
adc
xor
xlat
dec
out
or
dec
xchg
sti
adc
in
ret
xor
cmp
mov
jns
idiv
mov
push
add
std
out
push
sbb
popa
fs
incb
dec
mov
scas
or
fadds
mov
and
push
in
subb
aas
cwtd
inc
and
sub
cmpsl
push
shl
sbb
ret
cs
pop
xchg
divl
xchg
and
push
push
call
mov
mov
xchg
xchg
outsb
xchg
inc
mov
push
stc
xchg
repnz
inc
es
dec
repnz
mov
shrb
mov
ds
sub
decb
cmc
repz
shlb
cmpsb
cmp
fisubs
sub
pop
sbb
in
fisttpl
add
push
fmul
out
or
xchg
pop
mov
movsl
or
mov
add
not
inc
mov
fs
popf
popa
pop
pop
or
movsl
jecxz
xlat
pop
inc
mov
gs
xchg
sbb
fwait
popa
and
sub
mov
sub
cwtd
ja
xchg
les
jns
inc
mov
xor
inc
fwait
pop
out
xor
sar
xchg
adc
decb
cmp
es
push
adc
push
push
decb
jns
pop
jo
subb
jns
mov
add
add
mov
cmp
pop
dec
mov
sub
or
cmc
mov
mov
stos
outsl
mov
icebp
xchg
mov
push
imul
repz
insb
xchg
imul
jg,pt
xchg
sbb
pop
outsl
shll
add
popf
sub
xchg
jle
fs
call
inc
inc
xor
xor
push
or
movsb
inc
add
incb
aad
cmpsb
jnp
mov
mov
mov
sti
pusha
lahf
decb
cmpsl
push
test
les
push
add
jnp
in
shr
out
push
icebp
incb
cli
ret
or
pop
out
and
out
inc
mov
adc
sti
outsl
out
cmp
lcall
sahf
dec
in
dec
mov
xor
fmulp
cmp
jae
enter
mov
mov
test
sahf
sub
leave
mov
or
mov
fwait
decb
aaa
in
cmp
scas
push
test
push
fistpll
enter
ret
stc
incb
pop
xchg
sbb
icebp
insl
sbb
push
dec
mov
adcb
inc
mov
movsl
and
in
mov
add
decb
test
adc
insl
pusha
lahf
lods
cwtl
sarb
and
popf
xor
arpl
lcall
aaa
movsl
add
repz
fs
incb
sub
sub
jb
shll
pop
add
xchg
add
bound
jb
stos
push
movsl
adc
jnp
inc
xor
dec
icebp
ret
jg
jl
pop
mov
mov
lea
mov
jl
push
dec
mov
pop
enter
mov
shll
and
jo
cmc
pop
jo
sbb
xchg
std
out
test
xchg
imul
xchg
xor
xchg
sub
mov
sar
xchg
in
in
xchg
cltd
mov
fcomps
dec
pop
xor
push
inc
and
in
push
jge
cld
in
pushl
les
out
mov
dec
mov
lea
pop
lahf
ljmp
aam
cmc
outsb
xchg
dec
mov
cmc
sub
mov
test
negb
in
inc
mov
imul
scas
fs
fsubrs
cld
and
incb
inc
in
call
loop
mov
inc
mov
mov
popf
adc
xchg
fdivrp
iret
xchg
iret
cld
cmp
inc
ja
js
mov
cltd
loop
pop
iret
iret
cli
mov
mov
adc
cwtd
negb
out
sub
incb
mov
mov
xlat
bound
daa
pop
adc
and
movsb
push
jp
stos
ror
je
cmp
test
out
cmp
and
xchg
inc
and
das
call
insb
xchg
dec
adcb
scas
shr
push
xlat
or
mov
dec
dec
ss
jae
rcll
jne
iret
test
loope
lods
mov
test
sub
incb
lahf
jmp
mov
mov
fsin
rcrb
mov
ds
mov
jno
push
mov
test
pop
push
call
outsl
cmp
popf
add
add
in
add
lea
push
push
push
mov
push
push
push
clc
test
je
jmp
mov
add
lea
or
mov
shr
shr
add
push
push
push
call
leave
ret
ret
xchg
mov
or
xchg
shl
add
lea
sub
shr
dec
not
sub
mov
clc
jne
push
pop
add
lea
clc
jmp
jmp
push
mov
sub
lea
orl
andl
cld
push
call
test
je
in
dec
and
push
push
push
call
mov
lea
test
jne,pn
popf
ljmp
aas
iret
daa
add
mov
rcll
out
js
lret
les
cmp
stos
adc
in
add
out
icebp
mov
in
dec
mov
insb
xchg
pop
jmp
js
cmpsl
out
mov
mov
inc
mov
je
imul
aad
sbb
cmp
push
ja
pop
or
mov
pop
inc
mov
in
pop
sbb
test
xlat
add
sub
icebp
aas
push
inc
mov
and
inc
mov
pop
ss
mov
push
and
xchg
fwait
pop
daa
push
pmullw
call
out
outsl
or
cmp
dec
std
leave
mov
pop
int3
fbld
scas
pop
mov
or
sbb
lock
add
sar
and
decb
or
sarl
jnp
jns
pop
shll
xchg
aad
loope
jmp
mov
aas
dec
sub
mov
addl
jp
movsb
or
mov
fdivrs
daa
mov
out
xor
adc
xchg
adc
stc
aas
sbb
push
sbb
ja
jns,pt
out
or
testl
add
push
jle
dec
xor
sbb
test
outsb
xchg
dec
adc
push
xorl
mov
sti
push
ficompl
enter
add
movb
mov
sub
pushf
mov
test
inc
rclb
sub
xor
fsin
out
push
icebp
inc
int
icebp
mov
push
push
into
enter
test
fucomp
xor
insl
push
icebp
arpl
dec
mov
hlt
push
stc
and
push
loopne
and
imul
or
sbb
sahf
fsts
xchg
mov
icebp
cwtd
xchg
rcrb
loope
clc
xchg
xor
xor
pop
and
mov
mov
adc
dec
mov
sub
adc
adc
sub
inc
inc
mov
jp
negl
cltd
xchg
inc
mov
xchg
mov
lods
daa
jl
cmp
lret
in
nop
fld
es
mul
out
pop
mov
fimull
popf
mov
popf
lods
arpl
ljmp
and
jo
shlb
push
cs
mov
pop
jb
push
mov
popf
push
xor
rdtsc
jmp
mov
bound
dec
stos
adc
lret
sub
lods
adc
mov
and
cmpsb
jge
push
xchg
push
pop
or
mov
sbb
mov
imul
adc
loop
adc
cmp
outsb
xchg
xchg
xchg
icebp
jl
and
std
sbbb
sbb
jae
lahf
incb
sbbl
cmp
pop
idivl
cwtl
cmp
mov
mov
cmpsl
ja
xor
insb
xchg
out
cmp
pop
rclb
pop
jle
in
out
mov
popf
loopne
lahf
rcrb
jbe
cmpsb
das
jo
fcompl
fsub
add
inc
cwtl
test
cmpsl
shlb
in
sar
inc
mov
imulb
aad
add
incb
mov
mov
cwtl
nop
fs
and
add
jmp
jle
jb
std
cmp
lock
sti
fsubl
stos
dec
gs
fsts
adc
adc
fcom
cmp
mov
mov
or
nop
rclb
inc
mov
inc
test
xor
gs
inc
fwait
gs
xor
xlat
adc
mov
inc
inc
mov
inc
inc
or
sbb
jns
insb
xchg
sbb
sub
mov
in
aaa
in
jl
adc
cwtd
addr16
test
fisubrl
loopne
insl
pop
ret
pop
mov
xor
inc
fsubs
pushf
jmp
sarl
sbb
cmc
frndint
add
sbb
sbb
jne
adcb
jl
jecxz
dec
mov
cmpsl
or
rcll
stos
in
jns
enter
outsb
xchg
push
jmp
mov
stos
adc
pop
js
inc
imul
xchg
xor
sti
stos
or
lahf
jl
ss
je
pop
pop
pop
mov
pop
fidivrs
movsl
xchg
ljmp
shll
mov
pushf
inc
mov
int
outsb
xchg
imul
cld
adc
out
pop
xlat
jno
ljmp
xor
dec
xchg
push
jp
sub
ds
xor
xor
and
cld
iret
mov
arpl
mov
adc
jle
xchg
pop
outsl
or
and
ja
xor
add
mov
dec
out
fisttpl
inc
mov
or
testl
push
icebp
decb
dec
and
cmp
insb
xchg
cmpsl
add
xor
xchg
or
sub
mov
sbb
mov
jnp
jbe
lret
inc
loop
and
in
xor
mov
test
cmpsl
or
and
gs
es
mov
std
out
jno
pop
rol
dec
or
decb
cmc
cmp
insl
scas
push
loopne
xor
jo
lock
stos
xor
mov
pop
sub
loop
xor
dec
mov
and
sar
add
fsubl
fsin
es
fldt
and
mov
leave
bswap
or
push
loop
iret
sub
sub
mov
sub
push
icebp
inc
mov
jle
and
flds
std
cmp
xchg
adc
or
cwtl
cmpsb
pop
aad
jne
push
imul
nopl
fsubl
inc
mov
dec
je
xlat
dec
mov
das
xor
insb
xchg
adc
xlat
jnp
adc
cmp
mov
test
mov
xor
mov
ds
call
rcrl
or
loopne
cltd
decb
scas
mov
cld
cmp
mov
pop
add
das
push
stc
fildll
decb
js
sbb
mov
pop
fs
fbstp
xchg
sub
mov
sar
jae
loopne
push
lea
xor
sbb
push
pusha
lahf
jmp
ret
decb
mov
mov
lods
scas
sbb
mov
std
shll
lcall
sbb
mov
into
rorb
mov
arpl
sub
aad
pop
jge
jne
outsb
xchg
icebp
aas
cmpsl
lret
xlat
lcall
mov
ret
outsl
xchg
cwtd
dec
sub
xor
xchg
lea
fnstenv
xchg
push
xchg
pop
xor
sbb
cmp
stc
shll
loopne
imul
pusha
lahf
pop
mov
jns
nop
pop
push
jg
je
movl
mov
movsl
pop
jp
mov
ss
std
fcmovu
outsb
xchg
mov
out
test
xor
mov
mov
in
adcb
push
test
in
jnp
pop
xor
inc
cmp
insl
mov
lahf
jp
adc
sub
push
movsl
sbb
sub
nop
loop
rcll
stos
mov
pop
enter
sub
push
jle
pop
dec
mov
imul
negl
xor
adc
sub
call
incl
mov
test
sub
inc
xor
pop
lcall
xor
int
decb
cmc
adc
sbb
outsl
repz
pushl
mov
movsl
push
aas
shl
or
imul
push
lahf
dec
mov
xchg
fsin
pushf
push
jo
jnp
ret
jnp
out
arpl
loop
arpl
cld
int3
cmovno
xchg
decb
and
or
incb
inc
and
push
cwtd
push
cmp
adc
loopne
mov
push
icebp
jle
popf
cwtl
mov
mov
jbe
mov
inc
mov
add
fidivrs
int
pop
fisubl
jbe
mov
adc
incl
push
sbb
mov
push
sbb
cltd
pop
and
xchg
into
negb
sub
cmpsl
fsubr
test
jp
aad
push
cltd
xchg
in
inc
es
xor
and
sar
push
cmpsl
sub
push
icebp
mov
lds
inc
mov
hlt
stos
dec
sbb
loop
mov
repz
fsubl
push
sbb
decb
add
push
clc
mov
adc
out
cltd
sbb
mov
and
in
xchg
cli
mov
mov
aas
pushf
xor
test
stc
xor
pusha
lahf
cmp
outsb
xchg
and
in
fidivs
xchg
shll
push
stc
incb
fs
cmc
sbb
fcmovnu
dec
mov
nop
aad
inc
jno
pushf
or
iret
out
ss
repnz
loopne
xor
scas
fidivrl
adc
jp
stos
sub
incb
mov
pushf
cwtl
cmp
pusha
lahf
decb
divb
es
into
inc
sbb
sbbl
loope
pop
lea
repz
push
icebp
dec
sbb
xchg
hlt
addr16
mov
inc
mov
mov
sar
jmp
adc
add
pop
cmp
or
xchg
push
test
insl
enter
inc
push
sub
xchg
pop
hlt
xlat
scas
sbb
arpl
repnz
dec
mov
push
mov
push
pop
xor
xor
cmc
mov
inc
mov
add
decb
xlat
decb
imul
ret
sbb
sti
std
mov
ret
add
and
ljmp
cld
es
scas
fdivrs
cmp
inc
push
and
sbb
xor
pop
cld
loopne
insb
xchg
inc
incl
ja
mov
adc
mov
add
cld
mov
jp
or
sar
out
lcall
movsl
fst
pop
shr
out
jno
popf
jecxz
outsl
popf
lods
iret
xor
inc
out
cmpsl
jmp
fwait
and
stos
in
stc
mov
and
pop
inc
mov
cltd
aas
clc
push
shll
fwait
and
outsl
xchg
pop
mov
dec
aas
aaa
push
gs
cltd
les
dec
mov
fstpl
and
sbb
rcl
inc
test
xchg
mov
push
stc
and
dec
add
decb
and
and
xor
dec
int3
mov
mov
test
xchg
imul
lock
decb
sbb
test
add
idiv
mulb
popa
xchg
sub
popa
push
roll
xchg
mov
negl
mov
push
push
nop
js
rcr
imul
sti
mov
nop
ret
scas
pop
out
xchg
decb
ret
int
lahf
xor
and
clc
jno
sar
fldcw
jo
into
das
xor
outsb
xchg
push
or
xchg
out
sub
or
adc
sbb
in
add
adc
push
push
pusha
lahf
insb
xchg
sub
pusha
lahf
jecxz
mov
adc
sbb
adc
and
and
push
mov
outsb
xchg
incb
decb
pop
push
icebp
push
mov
push
dec
mov
es
popf
jp
cmp
fildl
mov
add
in
or
mov
test
jnp
dec
mov
mulb
stos
mov
inc
mov
lock
rclb
mov
cmp
cld
sub
loop
addr16
lea
push
and
sbb
repz
and
xor
xchg
aam
sti
andb
cmp
sbb
pushf
popa
adcl
stc
in
xor
inc
add
icebp
jbe
adc
push
dec
add
cmp
shrb
jp
xchg
out
inc
dec
mov
movsl
mov
sarl
lahf
inc
or
xchg
jmp
or
lods
xchg
aas
mov
sti
test
xchg
icebp
es
add
fsubs
sarb
sar
inc
mov
sbb
mov
jmp
insb
xchg
push
sahf
cmp
jp
sub
lods
mov
bound
jae
or
push
sub
pop
hlt
adc
inc
movsb
mov
dec
lock
push
xor
sub
jns
push
icebp
push
xor
daa
cmp
inc
mov
xlat
dec
mov
dec
add
imulb
movsb
mov
dec
fs
imul
mov
sahf
sbb
mov
fwait
mov
incb
push
mov
ficoms
cmp
ljmp
lock
cmpsl
pop
dec
mov
push
stc
pop
fcomp
lea
movsb
pop
xor
sti
gs
lahf
decb
xchg
mov
fs
imul
ljmp
push
icebp
incb
rorl
scas
inc
mov
insl
cli
das
es
dec
mov
ljmp
push
enter
sub
push
mov
fcoms
loope
mov
add
mov
popf
push
sarb
mov
mov
sub
fs
loopne
pop
push
push
mov
cwtl
jg
sar
fidivl
push
dec
xchg
mov
flds
sub
incb
std
inc
fsubl
incb
cmp
mov
mov
cmc
push
lcall
sub
loope
sbbb
hlt
add
inc
inc
mov
out
lret
pop
jle
shlb
pop
out
in
jg
dec
mov
jp
fnstenv
cmpsl
mov
sbb
or
sbb
add
mov
adc
pop
cmp
inc
mov
es
std
ret
fsin
ljmp
add
adc
out
ja
pop
mov
sarl
aad
adc
aam
and
flds
adc
fyl2xp1
les
xchg
idiv
clc
nop
nop
nop
nop
jae
add
add
dec
add
popf
int3
cmp
clc
nop
nop
nop
nop
jae
xchg
enter
mov
add
das
or
ficoms
divb
lahf
fistpl
push
mov
xchg
ret
ljmp
xor
add
mov
push
mov
xchg
ret
add
add
sub
jne
clc
nop
nop
nop
nop
jae
mov
add
sqrtps
nop
nop
nop
nop
jae
rolb
add
add
enter
jns
je
clc
nop
nop
nop
nop
jae
mov
add
mov
dec
fisubrs
inc
cmp
mov
xchg
ret
jns
add
leave
add
add
push
mov
xchg
ret
add
add
add
adc
jne
add
out
mov
adc
nop
nop
nop
nop
jae
add
pop
adc
add
fmulp
mov
mov
xchg
ret
mov
add
int3
pop
test
xor
out
ss
dec
sbb
push
mov
xchg
ret
add
add
ljmp
mov
jne
clc
nop
nop
nop
nop
jae
xchg
stos
enter
xchg
cmp
in
leave
nop
jmp
dec
add
fmulp
push
popf
dec
out
sub
rcll
jg
add
add
pop
jne
fldl
jb
pop
push
pop
pop
cmp
popf
fwait
clc
nop
nop
nop
nop
jae
add
mov
xor
into
sub
or
sar
nop
nop
nop
nop
jae
add
add
int
add
add
dec
jl
mov
clc
nop
nop
nop
nop
jae
sub
sti
add
test
add
push
clc
nop
nop
nop
nop
jae
sub
fcmovu
add
mov
mov
push
xchg
dec
clc
nop
nop
nop
nop
jae
xchg
mov
rolb
das
add
int
mov
inc
jecxz
nop
nop
nop
nop
jae
out
sub
adc
add
fstpl
nop
nop
nop
nop
jae
jb
out
jb
enter
add
subl
push
mov
leave
nop
jmp
add
xrelease
mov
nop
nop
jae
add
xor
out
add
add
push
jns
adc
leave
nop
jmp
ficoml
int3
pop
add
inc
jns
jne
inc
adc
nop
nop
nop
jae
test
add
popf
add
add
add
push
dec
pop
add
stos
add
add
sub
dec
add
add
add
nop
push
mov
leave
nop
jmp
or
add
sbb
fs
nop
nop
nop
jae
push
add
or
icebp
arpl
test
add
add
nop
nop
nop
nop
jae
sub
adc
sub
xor
push
clc
nop
nop
nop
nop
jae
xchg
inc
pop
add
adc
adc
int
pop
push
mov
xchg
ret
add
std
mov
jns
or
xchg
dec
mov
mov
stos
mov
insb
mov
add
insl
add
add
add
je
clc
nop
nop
nop
nop
jae
jbe
add
add
mov
icebp
pusha
lahf
ds
popl
sti
clc
nop
nop
nop
nop
jae
adc
add
add
jge
push
mov
xchg
ret
add
add
add
xchg
inc
mov
push
mov
xchg
ret
jns
add
or
xlat
add
rolb
add
add
sub
pop
cmpl
nop
push
mov
leave
nop
jmp
add
pop
sub
xchg
add
out
neg
call
nop
jae
mov
add
sub
add
add
imul
pop
clc
nop
nop
nop
nop
jae
add
mov
adc
add
fimuls
shrb
nop
nop
nop
nop
jae
mov
lret
mov
ss
cmpsb
cmc
subl
push
mov
xchg
ret
enter
add
add
sub
or
rcrl
nop
nop
nop
nop
jae
add
add
pushf
into
add
add
push
mov
jb
xchg
jmp
xchg
add
ds
pop
inc
mov
xlat
push
xorl
clc
nop
nop
nop
nop
jae
sub
enter
int
pop
jae
push
mov
leave
nop
jmp
int3
lcall
pop
mov
nop
nop
nop
nop
jae
jb
into
pop
add
add
int3
add
mov
clc
nop
nop
nop
nop
jae
adc
xor
add
xlat
adc
into
adc
add
nop
nop
nop
nop
jae
adc
add
mov
clc
nop
nop
nop
nop
jae
xlat
add
add
add
and
jecxz
clc
nop
nop
nop
nop
jae
jbe
add
add
adc
dec
push
add
int3
out
je
nop
push
mov
leave
nop
jmp
imul
add
fcmove
dec
mov
cld
cmp
nop
nop
jae
add
add
jns
std
add
fldl
add
jle
ret
clc
nop
nop
nop
nop
jae
sti
add
add
out
adc
into
std
add
leave
push
mov
xchg
ret
push
in
add
sti
or
xchg
sub
nop
nop
nop
jae
add
add
mov
das
sub
cwtd
fs
incb
fisubl
add
nop
push
mov
leave
nop
jmp
add
add
push
clc
nop
nop
nop
nop
jae
add
sub
xchg
test
add
add
push
xor
call
leave
nop
jmp
mov
inc
add
mov
add
sub
mov
xchg
ret
pop
stos
add
mov
sub
inc
add
nop
nop
nop
jae
pop
pushf
inc
add
add
add
add
icebp
adc
rep
clc
nop
nop
nop
nop
jae
add
add
in
or
or
mov
xchg
ret
add
imul
inc
out
add
add
clc
nop
nop
nop
nop
jae
fisttpll
add
add
mov
xchg
decb
jg
add
aaa
aad
push
add
sub
add
call
leave
jl
add
pop
add
adc
fcmovbe
cmpl
nop
nop
nop
nop
jae
add
repz
sub
and
nop
nop
nop
nop
jae
jne
into
add
add
xor
insl
int3
shll
pop
sbb
arpl
cmc
add
sbb
add
nop
jmp
sub
sti
add
std
xor
mov
clc
nop
nop
nop
nop
jae
xchg
add
add
out
and
jno
rclb
nop
jmp
xchg
add
xchg
xor
popa
clc
nop
nop
nop
nop
jae
add
das
or
mov
or
nop
push
mov
leave
nop
jmp
jne
add
shr
add
mov
into
inc
mov
popa
clc
nop
nop
nop
nop
jae
xchg
xor
int3
add
or
jo
add
mov
clc
nop
nop
nop
nop
jae
add
leave
mov
test
sub
leave
call
clc
nop
nop
nop
nop
jae
add
add
xlat
add
add
nop
nop
nop
jae
fldl
add
out
add
add
cmp
nop
push
mov
leave
nop
jmp
push
push
popf
pushf
add
enter
pushf
mov
call
nop
jae
add
add
add
insl
push
push
mov
xchg
ret
add
leave
dec
add
add
popf
out
add
xchg
adc
clc
push
add
xlat
ficoml
add
add
mov
int
add
repz
add
clc
nop
nop
nop
nop
jae
add
add
add
add
fimull
test
enter
in
leave
nop
jmp
add
add
add
sub
mov
leave
nop
jmp
lcall
lret
dec
mov
push
mov
xchg
ret
or
add
mov
inc
je
clc
nop
nop
nop
nop
jae
mov
push
xchg
push
notl
clc
nop
nop
nop
nop
jae
add
add
xchg
fstpl
pop
call
nop
jmp
xchg
add
add
mov
insl
add
clc
nop
nop
nop
nop
jae
add
xchg
add
add
stos
clc
nop
nop
nop
nop
jae
popf
add
or
sti
add
or
add
inc
adc
push
mov
leave
nop
jmp
add
jns
int
ror
add
pusha
clc
nop
nop
nop
nop
jae
add
out
add
fimuls
pop
mov
pop
inc
add
lcall
sub
adc
sbb
clc
nop
nop
nop
nop
jae
mov
add
add
add
clc
nop
nop
nop
nop
jae
add
push
lcall
push
dec
mov
or
sub
in
leave
nop
jmp
enter
add
sub
add
fcoml
test
nop
push
mov
leave
nop
jmp
inc
das
mov
push
ljmp
add
jae
xchg
cmpl
nop
jae
add
inc
int3
adc
nop
push
mov
leave
nop
jmp
add
adc
adc
mov
mov
add
push
mov
xchg
ret
add
sub
into
ficoms
add
out
ljmp
inc
add
xlat
sub
add
add
mov
fdivrs
add
repz
add
jb
rclb
rolb
jl
fistpl
clc
nop
nop
nop
nop
jae
add
add
add
and
nop
nop
nop
nop
jae
sub
sub
mov
pop
or
jo
mov
clc
nop
nop
nop
nop
jae
add
add
into
int3
add
bound
fwait
xchg
xchg
clc
nop
nop
nop
nop
jae
inc
dec
sub
enter
call
leave
nop
jmp
jb
jb
repz
push
call
clc
nop
nop
nop
nop
jae
imul
sub
jbe
test
vxorps
push
mov
xchg
ret
dec
imul
das
sub
push
push
mov
xchg
ret
add
add
xor
sub
sub
outsl
lea
clc
nop
nop
nop
nop
jae
add
add
add
lret
es
in
call
clc
nop
nop
nop
nop
jae
popf
jns
jbe
add
test
nop
push
mov
leave
nop
jmp
add
mov
add
nop
nop
nop
nop
jae
add
add
add
int
in
add
clc
nop
nop
nop
nop
jae
add
push
xchg
imul
add
int3
fiadds
mov
xchg
ret
out
repz
xchg
add
ds
jmp
sbb
push
mov
xchg
ret
mov
shlb
pop
add
into
add
mov
pusha
clc
nop
nop
nop
nop
jae
imul
add
mov
sti
add
out
fimull
add
nop
nop
nop
nop
jae
into
add
sub
fiadds
ljmp
nop
nop
nop
jae
jns
add
adc
add
out
add
icebp
nop
push
mov
leave
nop
jmp
add
add
add
adc
sti
push
push
mov
xchg
ret
add
add
leave
add
or
incb
rorl
testl
sub
xor
add
xchg
pop
push
clc
nop
nop
nop
nop
jae
ljmp
leave
add
add
dec
and
clc
nop
nop
nop
nop
jae
add
push
add
fcmovu
add
add
add
push
mov
xchg
ret
add
in
or
mov
arpl
dec
sub
nop
nop
nop
nop
jae
add
add
mov
add
aad
fdivp
mov
push
mov
xchg
ret
add
or
das
adc
adc
xor
clc
nop
nop
nop
nop
jae
popf
lret
mov
mov
push
push
mov
xchg
ret
add
add
adc
or
mov
popa
mov
nop
push
mov
leave
nop
jmp
ljmp
fadds
lret
xchg
clc
nop
nop
nop
nop
jae
adc
add
sub
add
jne
lahf
add
clc
nop
nop
nop
nop
jae
sub
jne
out
nop
jge
clc
nop
nop
nop
nop
jae
imul
add
sub
clc
nop
nop
nop
nop
jae
out
out
add
mov
dec
fldenv
push
mov
leave
nop
jmp
repz
sub
add
pushf
add
jns
mov
clc
nop
nop
nop
nop
jae
or
mov
dec
in
xlat
add
add
ret
mov
nop
push
mov
leave
nop
jmp
out
rolb
add
add
sub
jo
add
loope
add
add
nop
jae
add
inc
add
add
lcall
push
mov
xchg
ret
ljmp
add
pushf
stos
rcr
stos
clc
nop
nop
nop
nop
jae
jns
mov
jne
add
jb
add
push
clc
nop
nop
nop
nop
jae
xchg
xchg
add
int
adc
mov
push
mov
xchg
ret
xchg
jo
add
jo
add
cwtd
pushf
sbb
push
mov
leave
nop
jmp
in
lcall
jo
fistpl
clc
nop
nop
nop
nop
jae
add
adc
lcall
mov
xchg
ret
add
mov
sub
add
leave
add
rcll
insb
inc
add
mov
xchg
add
das
add
xchg
cmp
jmp
nop
nop
jae
sub
int
add
adc
push
mov
xchg
ret
add
dec
fiaddl
add
jbe
push
mov
add
fisttpl
inc
push
push
insl
add
stos
add
add
inc
mov
clc
nop
nop
nop
nop
jae
add
sti
stos
add
sbb
and
call
nop
nop
jae
jb
add
das
into
add
rol
clc
nop
nop
nop
nop
jae
sub
add
inc
jns
lcall
pusha
lahf
adc
nop
nop
nop
nop
jae
pop
or
add
sub
dec
lret
push
clc
nop
nop
nop
nop
jae
xchg
out
add
add
call
clc
nop
nop
nop
nop
jae
mov
add
add
jns
call
mov
nop
nop
nop
nop
jae
add
push
int
add
in
repnz
nop
push
mov
leave
nop
jmp
add
add
pop
fiaddl
add
pop
lret
movswl
clc
nop
nop
nop
nop
jae
out
fiadds
add
sti
mov
xor
push
mov
xchg
ret
add
add
add
add
fwait
push
mov
xchg
ret
add
add
out
inc
add
jg
test
add
clc
nop
nop
nop
nop
jae
add
jo
out
xlat
and
in
loope
add
add
stos
sbb
mov
push
icebp
add
sbb
mov
push
mov
xchg
ret
add
add
add
sub
pop
add
mov
pop
add
push
jge
add
sbb
stc
mov
ret
clc
nop
nop
nop
nop
jae
add
jo
add
popf
xor
sti
xor
rcll
mov
xchg
ret
add
add
add
add
push
sub
cmp
nop
nop
nop
jae
adc
add
popf
adc
xlat
fldl
jne
jo
mov
xchg
ret
out
add
add
xlat
sub
add
or
push
clc
nop
nop
nop
nop
jae
out
sub
add
sub
jae
sbb
nop
push
mov
leave
nop
jmp
add
add
adc
in
sub
incb
mov
clc
nop
nop
nop
nop
jae
add
add
xchg
add
sti
pop
pop
add
clc
nop
nop
nop
nop
jae
fadds
mov
pop
mov
mov
leave
nop
jmp
add
pushf
xor
sub
mov
sahf
pop
aas
int
add
pop
add
add
cmp
popf
call
nop
push
mov
leave
nop
jmp
add
mov
add
jne
clc
nop
nop
nop
nop
jae
add
add
leave
stos
clc
nop
nop
nop
nop
jae
out
add
int3
lret
mov
int3
frstor
sarb
mov
stos
imul
add
in
xlat
add
mov
add
mov
popl
add
add
clc
or
jmp
xchg
xchg
clc
nop
nop
nop
nop
jae
mov
jo
add
sub
incl
add
add
add
out
or
ljmp
sub
push
mov
xchg
ret
add
add
add
int
add
lahf
cld
clc
nop
nop
nop
nop
jae
add
mov
pop
sub
add
imulb
add
adc
dec
dec
in
int3
sub
sti
mov
xchg
clc
nop
nop
nop
nop
jae
add
add
cli
int
les
clc
nop
nop
nop
nop
jae
in
pop
add
add
sub
add
nop
nop
nop
nop
jae
mov
add
repz
scas
lea
clc
nop
nop
nop
nop
jae
out
stos
lcall
cmp
pop
inc
add
add
lcall
leave
add
mov
clc
nop
nop
nop
nop
jae
add
add
xchg
cld
clc
nop
nop
nop
nop
jae
add
std
mov
add
mov
nop
push
mov
leave
nop
jmp
xlat
out
xlat
jbe
add
add
int3
pop
dec
mov
add
fwait
fwait
nop
push
mov
leave
nop
jmp
or
add
lcall
mov
sub
test
add
nop
push
mov
leave
nop
jmp
mov
lret
add
push
push
mov
xchg
ret
jbe
push
int3
inc
add
out
mov
xchg
add
push
nop
push
mov
leave
nop
jmp
fcomps
add
dec
sub
je
xchg
inc
les
jo
add
jb
adc
add
jne
add
add
mov
clc
nop
nop
nop
nop
jae
into
pop
add
xchg
add
out
and
cmc
clc
nop
nop
nop
nop
jae
xor
repz
out
add
and
or
nop
jmp
add
jns
mov
cmp
add
clc
nop
nop
nop
nop
jae
std
std
add
sti
sub
mov
xchg
ret
das
add
add
pop
add
mov
jne
clc
nop
nop
nop
nop
jae
int
dec
add
add
xchg
mov
add
push
mov
xchg
ret
add
fstp
add
leave
fstl
sub
bound
cmp
nop
push
mov
leave
nop
jmp
add
repz
out
add
add
std
ficomps
mov
mov
repnz
int3
add
add
fistl
ret
push
clc
nop
nop
nop
nop
jae
add
in
add
add
popf
pop
in
lahf
xor
clc
nop
nop
nop
nop
jae
sub
pop
mov
leave
mov
adc
add
nop
nop
nop
nop
jae
add
add
add
add
mov
add
pop
add
testl
add
stos
and
add
xor
clc
nop
nop
nop
nop
jae
int3
xlat
add
add
xlat
xchg
or
incb
push
clc
nop
nop
nop
nop
jae
pop
xlat
out
add
adc
add
stos
add
mov
clc
nop
nop
nop
nop
jae
mov
add
add
mov
mov
xchg
ret
add
add
add
add
add
sub
xchg
xlat
xor
clc
nop
nop
nop
nop
jae
rcrb
jbe
leave
add
push
mov
inc
mov
mov
xor
cmpsl
add
sub
mov
push
mov
add
lock
insl
push
lea
add
lods
add
add
addr16
fs
pop
fld1
push
mov
xchg
ret
fcmovbe
ljmp
push
enter
clc
clc
nop
nop
nop
nop
jae
out
add
add
mov
dec
add
enter
nop
nop
nop
nop
jae
rolb
adc
shlb
add
xor
cwtl
lods
popa
clc
nop
nop
nop
nop
jae
add
pop
xor
sub
add
jnp
jne
push
mov
xchg
ret
jb
xor
enter
xor
jns
clc
nop
nop
nop
nop
jae
or
sti
xchg
add
add
add
sbb
add
add
mov
fucom
mov
clc
nop
nop
nop
nop
jae
add
out
add
mov
add
add
mov
nop
push
mov
leave
nop
jmp
add
xchg
dec
add
add
mov
icebp
jne
clc
nop
nop
nop
nop
jae
mov
ljmp
nop
nop
jae
add
add
add
jb
add
add
clc
nop
nop
nop
nop
jae
jo
jo
inc
ficoml
xchg
add
into
pusha
lahf
incb
add
clc
nop
nop
nop
nop
jae
sub
mov
add
add
mov
rcll
mov
xchg
ret
add
add
add
fimuls
mov
or
mov
xchg
ret
add
add
jb
add
push
add
mov
push
cmpsb
mulb
clc
nop
nop
nop
nop
jae
mov
add
add
dec
int3
cwtl
cmp
subb
sub
add
add
pop
add
cmp
jnp
nop
nop
nop
nop
jae
add
xchg
add
add
repz
jb
mov
subb
nop
push
mov
leave
nop
jmp
add
add
dec
mov
leave
pop
push
mov
xchg
ret
pop
add
add
out
test
jne
nop
push
mov
leave
nop
jmp
inc
std
add
add
lret
fld1
clc
nop
nop
nop
nop
jae
xchg
add
fldl
add
mov
pop
pop
clc
nop
nop
nop
nop
jae
mov
pop
add
leave
push
add
push
ja
mov
and
add
nop
nop
nop
nop
jae
add
add
jns
push
addr16
nop
push
mov
leave
nop
jmp
jne
adc
dec
sub
add
add
pop
push
mov
xchg
ret
fdivrs
add
pop
add
jbe
orl
add
test
stos
pop
ljmp
push
clc
nop
nop
nop
nop
jae
add
mov
fdivrs
jns
add
mov
in
add
add
mov
addl
or
ret
adc
add
mov
add
cmp
int3
addr16
add
fdivrp
fldl
add
xor
sub
add
push
pusha
clc
nop
nop
nop
nop
jae
add
jne
add
adc
imul
jbe
push
push
mov
xchg
ret
add
add
sub
in
mov
push
mov
leave
nop
jmp
add
into
lcall
lea
nop
push
mov
leave
nop
jmp
add
das
imul
sub
clc
nop
nop
nop
nop
jae
mov
add
sti
add
add
inc
xchg
pop
push
mov
xchg
ret
jo
add
in
add
imulb
jg
clc
nop
nop
nop
nop
jae
add
sub
add
imull
add
lcall
adc
dec
push
clc
nop
nop
nop
nop
jae
adc
push
add
sub
add
push
add
nop
nop
nop
nop
jae
add
add
add
leave
lret
rclb
mov
add
add
add
inc
sub
imul
clc
nop
nop
nop
nop
jae
pop
int3
lcall
add
fiadds
mov
jmp
imul
add
dec
dec
jo
add
ljmp
fsubrs
aad
and
decb
pop
xor
int3
xor
xchg
nop
nop
nop
nop
jae
fldl
adc
popf
or
inc
mov
clc
decl
enter
pop
fnsave
add
lcall
clc
nop
nop
nop
nop
jae
jbe
add
dec
add
int3
add
add
mov
rorl
push
mov
leave
nop
jmp
add
add
add
out
xchg
push
mov
xchg
ret
add
imul
repz
add
add
loop
in
shr
clc
nop
nop
nop
nop
jae
add
in
int3
xchg
out
rolb
mov
nop
push
mov
leave
nop
jmp
or
add
push
clc
nop
nop
nop
nop
jae
sub
pop
sub
mov
add
mov
xchg
pop
dec
das
mov
add
add
or
inc
nop
push
mov
leave
nop
jmp
inc
fiadds
add
sub
xor
push
mov
xchg
ret
add
mov
dec
xchg
rep
clc
nop
nop
nop
nop
jae
add
add
sub
test
shl
clc
nop
nop
nop
nop
jae
int3
add
add
fildl
jne
push
mov
xchg
ret
add
add
int3
sub
or
aas
push
clc
nop
nop
nop
nop
jae
leave
sub
int
repz
clc
nop
nop
nop
nop
jae
mov
xchg
xor
js
cld
push
mov
xchg
ret
xlat
add
in
fiadds
add
int3
add
xor
jae
nop
nop
nop
nop
jae
add
sub
mov
mov
add
nop
nop
nop
nop
jae
imul
mov
call
clc
nop
nop
nop
nop
jae
add
add
adc
add
nop
nop
nop
nop
jae
fidivl
jbe
add
loope
incl
add
nop
nop
nop
nop
jae
add
adc
mov
mov
xchg
ret
add
mov
adc
mov
xchg
ret
add
add
sub
or
inc
push
push
mov
xchg
ret
fsubr
add
xor
xchg
fcoms
nop
jmp
adc
imul
out
or
add
jns
rcrb
nop
nop
nop
nop
jae
jne
lcall
push
cmp
nop
nop
jae
add
add
add
sti
lock
clc
nop
nop
nop
nop
jae
leave
add
mov
jnp
test
adc
add
nop
jmp
add
std
inc
add
xor
sbb
push
mov
xchg
ret
xor
add
add
out
push
push
mov
xchg
ret
inc
xlat
add
enter
add
add
add
nop
nop
nop
jae
out
add
fisttpll
inc
add
dec
push
mov
xchg
ret
add
add
add
add
sbb
repz
mov
xchg
ret
add
add
or
jbe
cwtl
push
adc
xchg
mov
clc
nop
nop
nop
nop
jae
test
sub
add
add
pop
mov
clc
nop
nop
nop
nop
jae
add
imul
add
into
das
je
clc
nop
nop
nop
nop
jae
pop
xlat
add
das
or
sbb
cmp
nop
push
mov
leave
nop
jmp
add
fcom
jo
out
fiaddl
add
and
jbe
add
nop
push
mov
leave
nop
jmp
or
sub
mov
add
aas
add
imul
add
add
enter
add
xlat
incb
nop
nop
nop
jae
add
sti
xlat
sti
add
dec
cltd
xchg
clc
nop
nop
nop
nop
jae
pop
add
imul
imul
add
nop
and
sar
nop
nop
nop
jae
push
add
add
add
sub
insl
push
clc
nop
nop
nop
nop
jae
add
jo
sub
or
orl
orl
add
mov
out
adc
xor
push
mov
xchg
ret
into
out
adc
xchg
add
dec
add
or
pop
test
xchg
ret
xor
push
add
add
xor
out
test
outsb
xchg
pushf
jp
adc
nop
nop
nop
jae
int3
inc
rolb
jb
lret
add
lods
clc
nop
nop
nop
nop
jae
sub
xchg
stos
add
into
add
add
stos
clc
nop
nop
nop
nop
jae
add
add
add
xchg
add
mov
imul
clc
nop
nop
nop
nop
jae
jo
in
int3
add
sub
adc
cmc
fcompl
mov
sub
xchg
jb
add
add
add
add
nop
nop
nop
nop
jae
adc
mov
add
add
cmp
nop
push
mov
leave
nop
jmp
add
adc
fisttps
mov
leave
nop
jmp
mov
add
mov
loopne
clc
nop
nop
nop
nop
jae
add
add
loop
clc
nop
nop
nop
nop
jae
add
fiadds
mov
add
add
les
mov
clc
nop
nop
nop
nop
jae
ljmp
sar
repz
mov
sub
push
mov
leave
nop
jmp
add
fst
jns
cltd
incb
fistpl
nop
push
mov
leave
nop
jmp
add
mov
add
test
inc
xor
clc
nop
nop
nop
nop
jae
add
add
lret
xor
pop
jae
nop
nop
nop
nop
jae
enter
rorb
add
jp
sar
mov
jl
and
nop
nop
nop
nop
jae
add
int
out
xlat
add
imul
nop
nop
jae
popf
mov
add
xor
add
push
mov
leave
nop
jmp
add
jo
or
add
clc
nop
nop
nop
nop
jae
add
dec
pushf
sub
sub
sub
push
decb
jmp
nop
nop
jae
add
add
add
stos
add
fiaddl
ljmp
nop
nop
jae
ljmp
inc
ja
es
add
nop
nop
nop
nop
jae
fldl
lcall
call
clc
nop
nop
nop
nop
jae
add
xor
lret
jb
lahf
push
jle
add
nop
push
mov
leave
nop
jmp
leave
jns
sub
xchg
pusha
lahf
incb
std
lods
sub
mov
leave
nop
jmp
push
add
sub
add
ljmp
nop
nop
nop
jae
push
mov
sub
jg
push
mov
xchg
ret
mov
add
lret
add
rorb
mov
shrb
xlat
incb
add
push
mov
xchg
ret
add
add
inc
xchg
add
add
imul
in
leave
nop
jmp
pop
out
push
inc
jo
lea
push
mov
xchg
ret
jne
leave
add
mov
add
cltd
push
clc
nop
nop
nop
nop
jae
add
add
add
pop
add
add
add
nop
nop
nop
jae
add
add
lret
rorb
add
clc
nop
nop
nop
nop
jae
add
add
mov
inc
jbe
in
push
mov
push
scas
push
add
add
add
add
outsl
jbe
lods
into
ds
fbstp
add
mov
sbb
push
mov
add
add
mov
into
xchg
stos
add
data16
add
sbb
mov
xchg
ret
jo
adc
xlat
jns
mov
sbb
jne
clc
nop
nop
nop
nop
jae
add
add
incb
stc
out
cli
rol
clc
nop
nop
nop
nop
jae
add
add
add
fiaddl
add
mov
add
add
nop
nop
nop
nop
jae
add
lret
add
add
pusha
push
mov
xchg
ret
push
or
fisubrs
xor
jne
fs
sbb
clc
nop
nop
nop
nop
jae
add
add
mov
clc
nop
nop
nop
nop
jae
mov
add
sub
add
in
leave
nop
jmp
add
out
add
add
inc
add
jns
iret
push
clc
nop
nop
nop
nop
jae
add
imul
pop
add
pop
clc
nop
nop
nop
nop
jae
sub
add
adc
add
push
mov
add
add
add
mov
inc
add
and
enter
nop
nop
nop
nop
jae
add
jne
sub
adc
add
clc
nop
nop
nop
nop
jae
add
add
or
add
xchg
rorl
mov
leave
nop
jmp
sub
in
add
popf
add
std
std
push
mov
add
add
mov
shr
loop
inc
ds
call
clc
nop
nop
nop
nop
jae
add
jb
add
xchg
insb
xchg
es
je
push
push
mov
xchg
ret
mov
jb
das
add
add
sub
jbe
mov
clc
nop
nop
nop
nop
jae
test
xchg
add
jbe
add
movsl
shr
push
mov
xchg
ret
add
jbe
adc
adc
mov
push
icebp
incb
sar
nop
nop
nop
jae
out
dec
jo
add
add
mov
clc
nop
nop
nop
nop
jae
add
out
add
dec
mov
fsubl
push
push
mov
xchg
ret
mov
xor
std
add
or
imul
sub
add
clc
nop
nop
nop
nop
jae
adc
add
add
subl
sti
lcall
sub
add
add
mov
add
div
xchg
insb
inc
add
scas
sub
cmp
push
mov
xchg
ret
leave
add
xchg
add
imul
ds
push
clc
nop
nop
nop
nop
jae
int
add
xlat
add
add
add
push
mov
xchg
ret
int
add
add
add
push
mov
leave
nop
jmp
add
std
mov
add
scas
xor
nop
push
mov
leave
nop
jmp
out
sub
add
mov
nop
push
mov
leave
nop
jmp
jbe
jbe
int3
add
mov
clc
nop
nop
nop
nop
jae
mov
sub
imul
cmp
mov
xchg
ret
adc
add
add
mov
pop
clc
nop
nop
nop
nop
jae
add
imul
int
add
pop
cmp
add
push
mov
xchg
ret
dec
add
add
jb
add
add
nop
nop
nop
nop
jae
mov
add
int3
add
push
push
mov
xchg
ret
mov
lret
add
add
enter
sar
nop
nop
nop
jae
add
add
sti
add
sti
xchg
xor
jne
clc
nop
nop
nop
nop
jae
add
add
jb
out
sub
push
mov
xchg
ret
std
int
push
jne
add
add
std
into
addl
nop
nop
jae
mov
add
into
adc
push
in
sahf
scas
add
nop
push
mov
leave
nop
jmp
pushf
add
sub
imul
idiv
sahf
or
mov
leave
nop
jmp
xor
stos
add
sar
add
loop
clc
nop
nop
nop
nop
jae
jo
int3
add
rolb
push
push
mov
xchg
ret
add
adc
add
imul
add
imul
call
nop
jmp
enter
xor
add
or
nop
nop
jae
add
adc
mov
sub
popa
fistpl
nop
push
mov
leave
nop
jmp
add
in
adc
je
clc
nop
nop
nop
nop
jae
add
add
xchg
adc
nop
push
mov
leave
nop
jmp
fldl
add
add
xchg
jb
rep
clc
nop
nop
nop
nop
jae
out
int
add
std
rolb
adc
cmpsl
add
nop
push
mov
leave
nop
jmp
push
xlat
out
lcall
repz
sbb
push
mov
xchg
ret
lcall
jo
add
mov
mov
inc
mov
nop
nop
nop
nop
jae
jb
add
mov
push
mov
add
inc
add
sldt
stc
pop
xchg
add
push
add
fs
pop
lea
clc
nop
nop
nop
nop
jae
add
or
add
xor
lret
incb
dec
push
push
mov
xchg
ret
out
add
int3
add
sub
into
mov
push
mov
leave
nop
jmp
add
add
stos
sub
int3
add
imul
clc
nop
nop
nop
nop
jae
add
fldl
lcall
clc
nop
nop
nop
nop
jae
adc
mov
add
xor
nop
nop
jae
sub
fadds
add
add
out
xchg
movsl
dec
nop
push
mov
leave
nop
jmp
mov
add
out
inc
mov
add
fs
decb
push
cmpsl
add
clc
nop
nop
nop
nop
jae
pushf
int3
push
in
adc
pushf
add
rolb
nop
mov
pop
push
mov
xchg
ret
add
add
add
xlat
add
js
call
clc
nop
nop
nop
nop
jae
add
add
add
pop
add
and
jae
les
push
mov
xchg
ret
jb
or
int
test
das
add
mov
push
mov
xchg
ret
enter
mov
add
adc
add
div
clc
nop
nop
nop
nop
jae
jne
add
leave
add
xchg
std
mov
clc
nop
nop
nop
nop
jae
add
xor
add
call
nop
jae
push
jo
mov
enter
pop
mov
das
dec
enter
add
add
add
cmp
and
nop
jmp
rolb
add
leave
sub
push
nop
push
mov
leave
nop
jmp
inc
inc
xlat
add
pop
pop
out
add
incb
push
mov
xchg
ret
pop
add
add
in
test
in
add
aas
jecxz
add
add
pop
add
pop
add
add
add
iret
mov
clc
nop
nop
nop
nop
jae
das
dec
add
mov
rclb
jne
clc
nop
nop
nop
nop
jae
into
inc
fdivs
add
adcl
mov
leave
nop
jmp
add
add
add
mov
pop
push
mov
xchg
ret
xchg
add
shrb
repz
jbe
push
sti
xchg
push
mov
xchg
ret
int3
or
add
test
into
repz
mov
push
mov
xchg
ret
add
leave
mov
pop
add
ljmp
nop
nop
nop
jae
int3
shlb
out
into
int3
dec
sub
xor
nop
nop
nop
jae
add
or
fmul
add
mov
clc
nop
nop
nop
nop
jae
add
repz
add
adc
mov
and
nop
nop
jae
sub
add
jns
popf
rep
nop
push
mov
leave
nop
jmp
push
sub
sub
into
add
mov
push
mov
xchg
ret
add
enter
add
sub
mov
add
nop
push
mov
leave
nop
jmp
add
add
add
dec
sti
or
adc
nop
push
mov
leave
nop
jmp
mov
adc
mov
mov
xchg
push
mov
xchg
ret
adc
add
out
xchg
jb
push
xor
clc
nop
nop
nop
nop
jae
popf
out
lcall
adc
frstor
jle
jb
nop
push
mov
leave
nop
jmp
add
add
mov
cltd
sub
push
mov
xchg
ret
ljmp
stos
popf
lcall
add
clc
nop
nop
nop
nop
jae
das
mov
add
mov
clc
nop
nop
nop
nop
jae
pushf
add
pop
add
sub
lret
mov
pop
xchg
inc
add
test
add
out
fiaddl
add
add
pushl
clc
nop
nop
nop
nop
jae
add
add
repz
push
xlat
jo
add
push
mov
xchg
ret
sub
test
sub
fiaddl
cmpl
sub
inc
pop
inc
add
add
add
out
mov
sti
adc
test
mov
xchg
ret
or
sub
adc
add
dec
mov
clc
nop
nop
nop
nop
jae
or
rolb
sub
add
push
inc
add
add
add
std
add
dec
add
or
nop
push
mov
leave
nop
jmp
add
add
mov
add
dec
mov
or
push
mov
xchg
ret
jne
ficoml
xchg
icebp
fld1
push
mov
xchg
ret
rolb
xchg
jo
mov
add
sahf
mov
jno
mov
xchg
add
incb
xchg
sub
push
push
mov
xchg
ret
adc
push
out
add
pop
add
push
jns
clc
nop
nop
nop
nop
jae
add
add
add
into
xlat
into
add
add
dec
mov
in
mov
clc
nop
nop
nop
nop
jae
add
mov
add
idiv
or
push
mov
xchg
ret
in
dec
add
add
into
push
add
add
nop
nop
nop
nop
jae
xchg
push
add
enter
add
nop
nop
nop
nop
jae
add
stos
add
popf
add
add
into
nop
cmp
fmuls
push
nop
push
mov
leave
nop
jmp
add
add
push
add
add
add
dec
mov
scas
rolb
and
jne
leave
add
xor
add
jo
pop
out
fwait
push
push
mov
xchg
ret
jne
dec
mov
add
out
add
adc
nop
nop
nop
nop
jae
pushf
out
pop
add
into
inc
or
sub
call
nop
jmp
sti
push
int3
out
add
xchg
adc
push
mov
leave
nop
jmp
add
add
jne
add
leave
call
clc
nop
nop
nop
nop
jae
xchg
jns
add
cwtl
lcall
nop
jae
mov
int3
leave
mov
ds
incb
nop
nop
nop
nop
jae
jns
add
pop
adc
add
mov
push
mov
leave
nop
jmp
add
pop
dec
int3
add
int3
mov
test
add
nop
push
mov
leave
nop
jmp
adc
into
dec
add
ficompl
sar
dec
push
nop
push
mov
leave
nop
jmp
add
add
ljmp
push
mov
leave
nop
jmp
add
add
xor
jb
inc
fiadds
mov
xchg
xchg
ret
das
add
add
mov
jns
add
add
cmp
push
mov
leave
nop
jmp
stos
enter
sub
fadds
xchg
push
mov
add
add
dec
add
dec
add
add
add
add
mov
mov
push
mov
xchg
ret
adc
xchg
ljmp
inc
add
cmc
ja
dec
cmp
push
mov
leave
nop
jmp
add
add
inc
add
push
clc
nop
nop
nop
nop
jae
stos
stos
mov
jns
sub
push
mov
sbb
dec
adc
add
or
into
add
sub
sub
daa
addl
nop
nop
jae
pushf
mov
add
add
sub
clc
nop
nop
nop
nop
jae
add
add
add
add
xchg
adc
sbb
nop
nop
nop
nop
jae
add
sub
test
push
imul
add
nop
nop
nop
nop
jae
stos
imul
adc
add
mov
xchg
ret
out
lcall
add
test
add
jne
add
xlat
adc
sub
fidivs
sub
add
std
xor
push
mov
xchg
ret
dec
test
jne
in
add
xchg
add
add
clc
nop
nop
nop
nop
jae
add
in
add
add
nop
ficoms
addb
or
ret
leave
lret
add
add
push
insb
xchg
incb
inc
clc
nop
nop
nop
nop
jae
sub
sub
out
add
out
inc
fidivs
mov
leave
nop
jmp
add
add
pop
xchg
add
adc
dec
mov
nop
push
mov
leave
nop
jmp
add
in
out
sti
cltd
push
clc
nop
nop
nop
nop
jae
add
fmuls
stos
imul
cmp
std
roll
in
leave
nop
jmp
sub
fisttpll
push
in
push
clc
nop
nop
nop
nop
jae
adc
add
xchg
add
add
add
adc
nop
nop
nop
nop
jae
add
add
add
add
sub
jle
jmp
inc
fldl
mov
add
add
sbb
ljmp
add
add
test
xlat
add
in
add
fistpl
nop
jae
fdivp
jbe
add
add
int3
add
dec
or
mov
leave
nop
jmp
add
add
add
sbb
nop
nop
jae
leave
push
add
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
pop
or
loop
mov
xchg
ret
adc
sub
out
pop
add
sar
mov
pop
nop
push
mov
leave
nop
jmp
sti
add
add
pop
mov
add
inc
std
dec
mov
xorb
arpl
and
add
imul
add
mov
pop
nop
push
mov
leave
nop
jmp
repz
pop
fadds
xlat
dec
add
push
icebp
outsb
xchg
incb
loop
inc
add
add
in
test
mov
imul
scas
imul
nop
push
mov
leave
nop
jmp
push
jo
add
add
mov
clc
nop
nop
nop
nop
jae
in
enter
add
jb
sahf
xlat
push
push
mov
xchg
ret
push
mov
add
adc
add
mov
push
mov
xchg
ret
into
add
add
out
push
adc
rolb
mov
cltd
add
push
mov
xchg
ret
sub
xchg
ljmp
fnstsw
nop
nop
nop
jae
or
add
mov
add
loope
dec
cmp
nop
nop
nop
nop
jae
add
push
xlat
into
add
jns
mov
clc
nop
nop
nop
nop
jae
fiaddl
int3
popf
add
imul
mov
push
mov
xchg
ret
push
add
std
enter
add
sti
add
nop
push
mov
leave
nop
jmp
sub
or
ljmp
clc
nop
nop
nop
nop
jae
add
add
add
popf
jne
clc
nop
nop
nop
nop
jae
mov
add
pop
clc
nop
nop
nop
nop
jae
add
add
add
add
add
add
pusha
lahf
jno
inc
and
nop
push
mov
leave
nop
jmp
add
sub
add
add
add
push
iret
mov
clc
nop
nop
nop
nop
jae
pushf
add
add
xor
jne
mov
and
ficompl
nop
nop
nop
jae
fimull
lcall
add
nop
push
mov
leave
nop
jmp
mov
int
add
popf
in
push
nop
push
mov
leave
nop
jmp
add
xlat
leave
add
xchg
mov
cmp
mov
leave
nop
jmp
inc
add
out
in
into
add
add
test
mov
nop
push
mov
leave
nop
jmp
add
out
in
fldl
add
and
inc
add
add
mov
add
or
sub
adc
add
nop
nop
nop
nop
jae
add
add
mov
clc
nop
nop
nop
nop
jae
add
or
pushf
xlat
add
push
mov
xchg
ret
add
adc
add
add
mov
add
cwtl
xchg
sbb
mov
xchg
ret
pop
int3
add
add
add
add
pop
iret
xchg
clc
nop
nop
nop
nop
jae
add
mov
dec
add
stos
clc
nop
nop
nop
nop
jae
sub
xlat
add
add
push
inc
sbb
nop
jmp
add
std
fcomp
add
mov
xchg
pushl
push
mov
xchg
ret
dec
int
add
jns
jne
add
nop
fsubl
mov
lea
xchg
ret
add
mov
add
ljmp
popl
in
leave
nop
jmp
jbe
sub
add
add
add
clc
nop
nop
nop
nop
jae
add
sub
out
jb
jmp
nop
nop
jae
xlat
adc
add
inc
dec
add
add
add
cmpl
nop
nop
nop
jae
mov
add
xlat
ret
mov
clc
nop
nop
nop
nop
jae
stos
test
add
push
mov
imul
add
std
add
adc
adc
pop
cmc
and
clc
nop
nop
nop
nop
jae
jb
add
je
add
clc
nop
nop
nop
nop
jae
pop
add
add
enter
out
std
mov
xor
mov
adc
nop
nop
nop
nop
jae
mov
mov
add
add
xor
push
mov
inc
add
add
adc
sub
add
add
jnp
cmpsl
push
mov
jnp
popa
and
and
popf
sub
add
dec
add
mov
fadds
and
inc
and
nop
nop
nop
nop
jae
inc
add
add
add
add
or
mov
add
jl
add
add
insl
mov
pop
clc
nop
nop
nop
nop
jae
add
mov
add
add
add
jb
add
clc
nop
nop
nop
nop
jae
int3
add
inc
add
enter
mov
cmpsb
xor
jne
clc
nop
nop
nop
nop
jae
lcall
stc
pop
nop
push
mov
leave
nop
jmp
das
add
add
std
add
into
out
nop
push
mov
leave
nop
jmp
repz
or
add
xchg
mov
repz
nop
nop
nop
nop
jae
inc
add
dec
add
fiaddl
leave
jbe
pop
mov
nop
nop
jae
enter
add
sub
int
adc
leave
add
push
mov
xchg
ret
stos
add
stos
int
add
ljmp
arpl
add
nop
nop
nop
nop
jae
add
int3
add
int
add
call
nop
jmp
add
in
fdivs
subb
push
mov
leave
nop
jmp
jns
add
jo
int3
adc
nop
nop
nop
jae
dec
add
add
xlat
add
adc
xlat
mov
mov
xchg
ret
dec
popf
add
add
add
adc
icebp
jmp
enter
add
add
out
add
pop
leave
lret
add
jecxz
push
mov
xchg
ret
mov
add
adc
xchg
dec
add
das
out
nop
push
mov
leave
nop
jmp
add
xchg
fidivl
ljmp
mov
nop
nop
nop
jae
mov
xchg
mov
inc
test
nop
push
mov
leave
nop
jmp
dec
add
push
mov
inc
popf
out
add
jge
mov
adc
add
mov
add
and
inc
ret
push
jno
cmc
mov
clc
nop
nop
nop
nop
jae
inc
add
dec
add
mov
push
loopne
nop
nop
nop
nop
jae
add
add
das
add
insl
add
clc
nop
nop
nop
nop
jae
fcmovbe
fldl
jbe
add
add
pusha
lahf
incb
aaa
popl
xchg
ret
add
sub
xor
out
inc
or
mov
es
inc
add
mov
fiadds
sub
add
incb
clc
nop
nop
nop
nop
jae
pushf
fldl
add
call
clc
nop
nop
nop
nop
jae
add
add
repz
sub
test
nop
push
mov
leave
nop
jmp
adc
out
push
test
ljmp
jge
nop
push
mov
leave
nop
jmp
into
fadds
push
add
push
add
add
push
mov
leave
nop
jmp
add
add
out
xlat
add
dec
inc
in
fwait
push
mov
xchg
ret
add
add
imul
nop
nop
nop
nop
jae
jns
mov
add
xor
std
incb
clc
nop
nop
nop
nop
jae
add
add
add
ljmp
cmp
push
mov
leave
nop
jmp
or
imul
jmp
iret
or
nop
jae
enter
pop
test
sub
xlat
push
jb
nop
push
mov
leave
nop
jmp
sub
add
pushf
add
pop
push
mov
xchg
ret
xor
dec
inc
add
add
jno
xor
add
nop
push
mov
leave
nop
jmp
add
sub
add
into
leave
cwtd
popf
fistpl
push
mov
xchg
ret
mov
add
push
mov
test
add
add
add
shr
sahf
mov
push
clc
nop
nop
nop
nop
jae
ljmp
test
test
add
push
clc
nop
nop
nop
nop
jae
add
xor
add
adc
cwtd
cs
outsb
xchg
incb
stc
decb
sar
nop
nop
nop
jae
add
mov
sub
dec
nop
push
mov
leave
nop
jmp
add
add
add
jo
fmul
mov
clc
nop
nop
nop
nop
jae
xor
sub
out
out
stos
stos
or
cltd
je
clc
nop
nop
nop
nop
jae
int3
add
mov
int
mov
clc
nop
nop
nop
nop
jae
add
add
stos
fldl
enter
fld1
clc
nop
nop
nop
nop
jae
add
add
add
out
icebp
mov
mov
clc
nop
nop
nop
nop
jae
int3
lcall
lret
inc
fistpl
push
mov
xchg
ret
add
add
add
xlat
repz
clc
nop
nop
nop
nop
jae
jbe
add
xlat
add
sti
fadds
or
mov
xchg
ret
add
lret
add
lret
jo
ficomps
nop
nop
jae
rolb
add
add
sub
mov
xchg
ret
add
add
add
sub
mov
cmpb
nop
jae
add
xlat
add
dec
adc
add
fcoms
xchg
ret
clc
nop
nop
nop
nop
jae
fisubrs
add
add
add
popf
stos
pop
clc
nop
nop
nop
nop
jae
mov
xlat
add
int3
add
out
add
subl
nop
push
mov
leave
nop
jmp
add
add
add
lcall
clc
nop
nop
nop
nop
jae
jne
add
cld
clc
nop
nop
nop
nop
jae
rolb
dec
add
fstp
sub
and
test
xlat
decb
push
repnz
nop
nop
nop
nop
jae
jbe
into
xor
or
mov
add
add
sbb
sbb
clc
nop
nop
nop
nop
jae
fiadds
add
add
add
add
mov
clc
nop
nop
nop
nop
jae
repz
ljmp
add
adc
nop
nop
nop
nop
jae
add
dec
xor
stos
leave
mov
push
mov
xchg
ret
mov
into
mov
sub
popa
clc
nop
nop
nop
nop
jae
add
jb
add
add
sub
mov
clc
nop
nop
nop
nop
jae
add
add
push
sbb
nop
nop
jae
add
add
xor
out
add
add
add
call
nop
nop
jae
add
add
push
xlat
in
or
mov
push
mov
xchg
ret
add
add
adc
add
sti
add
clc
nop
nop
nop
nop
jae
jbe
add
xor
sub
add
clc
nop
nop
nop
nop
jae
add
xlat
das
lcall
mov
mov
clc
nop
nop
nop
nop
jae
add
fadds
add
sub
lods
push
mov
xchg
ret
popf
add
mov
leave
fldl
sub
push
mov
xchg
ret
das
add
add
sub
repz
nop
nop
jae
sub
int
add
sub
mov
jmp
in
add
test
pop
mov
add
popf
repz
push
insl
mov
clc
nop
nop
nop
nop
jae
add
pushf
add
add
jb
or
fs
decb
inc
xchg
inc
add
add
add
lret
fiadds
add
jecxz
clc
nop
nop
nop
nop
jae
add
xlat
lret
add
nop
nop
nop
nop
jae
jne
push
add
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
nop
nop
jae
add
add
xchg
add
add
call
nop
push
mov
leave
nop
jmp
mov
add
jne
bound
rclb
jmp
test
jb
add
add
nop
push
mov
leave
nop
jmp
sub
lcall
jo
out
fidivrs
nop
nop
nop
jae
stos
add
sub
mov
add
into
int3
vaddsubps
push
ja
add
add
add
fiadds
add
rclb
push
test
xchg
ret
add
add
add
add
pop
clc
nop
nop
nop
nop
jae
add
add
mov
or
ljmp
mov
xchg
ret
add
test
std
add
xchg
das
push
push
mov
xchg
ret
add
or
in
lret
arpl
clc
nop
nop
nop
nop
jae
xor
sub
jbe
cmp
mov
add
cmpsl
jae
add
jecxz
aam
adc
mov
decb
dec
cmp
mov
xchg
ret
dec
pop
mov
dec
pop
sti
out
lcall
std
clc
nop
nop
nop
nop
jae
lret
add
leave
add
add
clc
nop
nop
nop
nop
jae
xlat
lcall
jbe
jle
xorl
clc
nop
nop
nop
nop
jae
jne
inc
or
push
sub
and
jno
cmp
nop
nop
nop
jae
add
add
jb
or
clc
nop
nop
nop
nop
jae
out
test
or
ficoms
lcall
nop
nop
nop
nop
jae
add
leave
popf
pop
popf
fwait
clc
nop
nop
nop
nop
jae
add
push
dec
add
sub
add
jbe
lss
fucomp
inc
add
add
sti
add
mov
shlb
call
inc
add
sti
add
push
fiaddl
add
add
lods
pushl
push
mov
xchg
ret
adc
sub
add
or
and
nop
nop
nop
nop
jae
adc
jne
imul
or
and
mov
xchg
ret
add
add
rolb
sub
add
clc
nop
nop
nop
nop
jae
test
sti
add
lea
push
mov
xchg
ret
add
add
inc
sub
nop
jmp
pop
sub
xlat
mov
pop
add
out
xor
xor
nop
nop
jae
enter
sub
jb
add
mov
sub
nop
nop
nop
jae
or
fisttpll
loop
push
mov
xchg
ret
sub
add
add
imul
xor
push
mov
xchg
ret
out
add
leave
add
leave
push
add
adc
nop
nop
nop
jae
add
leave
fisubrl
fimuls
sbb
push
mov
leave
nop
jmp
add
add
add
xchg
push
clc
nop
nop
nop
nop
jae
add
add
sub
mov
adc
clc
nop
nop
nop
nop
jae
or
dec
ljmp
pop
clc
nop
nop
nop
nop
jae
pop
jbe
xor
adc
add
fwait
nop
push
mov
leave
nop
jmp
dec
inc
add
add
sbb
pusha
lahf
incb
in
xor
push
mov
xchg
ret
mov
mov
ljmp
push
clc
nop
nop
nop
nop
jae
push
add
repz
add
out
mov
add
add
add
out
fiadds
add
and
add
pop
pop
add
add
cmpsb
call
adc
sbb
pop
cmp
lahf
popa
xchg
push
mov
sub
hlt
or
inc
cmp
test
sub
test
push
add
rorb
mov
add
mov
add
adc
daa
dec
jl
ret
popf
xchg
adc
lock
inc
xor
add
cmp
bound
out
cwtd
dec
insb
xchg
sub
dec
or
std
adc
repz
icebp
adc
xlat
lmsw
bound
adc
push
cmp
or
jne
xor
add
lahf
inc
jnp
jne
pop
dec
mov
cmpsl
das
and
std
inc
into
lods
rcll
sub
ds
lods
push
je
cmp
sbb
jae
adc
out
loope
mov
and
int
pop
das
inc
test
jnp
out
cmpsl
push
xchg
sahf
arpl
xor
mov
cmp
xchg
in
lea
fnstcw
lret
jle
idiv
enter
jecxz
repnz
xchg
sub
mov
mov
pop
jecxz
jno
fildl
incb
jns
mov
rcrb
sbb
sbb
es
xchg
lahf
subb
mov
or
xchg
lock
mov
jg
lea
aas
xchg
sub
adc
andl
nop
lahf
dec
jnp
out
dec
mov
pop
and
pop
aam
out
pop
or
xor
fisttps
je
push
fsubl
testl
add
incb
fisubrl
sar
dec
mov
push
aaa
push
test
sbb
pop
pop
out
test
mov
lahf
into
sub
call
cmp
mov
sar
adc
scas
shlb
cmpl
adc
pop
cmc
push
inc
repz
mov
loop
mov
stc
mov
mov
loopne
pop
popa
xor
fsin
filds
std
imul
sbb
push
stc
daa
sbb
imul
sbb
mov
or
mov
push
int
cmpsb
cmpsl
mov
frstor
jbe
out
sub
push
add
xchg
decb
jns
popf
xor
das
sbb
xchg
xchg
in
in
lret
fnstcw
pop
movsl
mov
je
lods
lea
jp
sti
cmc
push
icebp
aas
je
mov
lcall
cmp
xchg
mov
test
daa
mov
add
jo
aam
xchg
inc
pop
xchg
push
stc
out
stc
push
into
xchg
pop
lcall
lods
sbb
insl
sbb
shrb
xor
mov
lcall
je
xor
es
sarb
adc
andb
dec
aas
imul
push
gs
adc
sbb
sarl
or
outsb
xchg
mov
es
in
test
mov
addr16
incb
jae
daa
and
and
dec
lcall
sub
adc
stos
sub
decb
dec
mov
push
push
dec
mov
pop
add
cmpsl
xchg
xor
test
lds
aas
movsb
insl
bound
movsl
repz
xor
mov
test
dec
jo
xlat
lahf
pop
insb
xchg
xorb
insb
xchg
mov
push
icebp
mov
cmp
push
incb
sub
pusha
lahf
xor
test
pop
xchg
jns
xchg
std
sarb
mov
mov
xchg
icebp
aaa
subb
pop
outsb
xchg
incb
xor
stc
dec
mov
xor
and
decb
mov
push
pop
pop
insl
nop
sub
ds
stc
test
jno
or
sub
mov
mov
jnp
cwtl
pop
popf
test
xorb
push
test
dec
xchg
gs
decb
pop
push
jge
movsl
adc
out
sbb
pop
fidivrl
repz
idivb
dec
repnz
outsl
sbb
jecxz
inc
mov
test
lods
mov
fs
fnsave
popf
pop
mov
test
hlt
out
and
incb
sti
je
sbb
xchg
sub
push
sub
cmp
sar
test
les
adc
add
movsb
jbe
push
sbb
icebp
incb
ja
pop
int3
mov
adc
xchg
aas
sbb
pop
jmp
lret
lmsw
jb
inc
mov
lock
mov
cmovle
push
and
push
fldl
mov
add
incb
adc
cmp
std
incb
std
jo
and
jp
cld
pop
inc
mov
mov
sar
jge
xchg
std
cmp
xchg
dec
sub
adc
ja
jecxz
jae
inc
mov
testl
mov
mov
jno
sti
push
mov
push
adc
es
test
jge
lahf
decb
fsin
jo
pushl
pop
mov
lods
sub
mov
clc
ss
in
ja
xchg
scas
jge
test
mov
out
xchg
rcrb
rol
sub
lock
xchg
pop
jns
icebp
sahf
mov
xchg
jb
mov
jmp
popf
jp
jp
push
add
fldcw
xlat
fdivl
adc
mov
push
idiv
stos
mov
decb
rcrb
jns
sbb
dec
xchg
mov
push
icebp
pop
aad
call
jae
stc
or
jge
mov
imul
mov
add
incb
mov
hlt
lcall
adcl
or
cmp
xor
outsb
xchg
incb
icebp
cmp
dec
mov
loop
into
dec
mov
lds
lahf
int3
fldenv
inc
add
stos
cmp
mov
xchg
sub
pusha
lahf
cmp
int3
inc
ds
cmp
popa
and
dec
mov
xor
inc
out
in
mov
jnp
in
fildll
pushf
rcrb
adc
xorl
xchg
dec
mov
xor
xchg
inc
iret
nop
xchg
int3
ja
ret
mov
mov
pop
nop
ret
notb
mov
int3
shlb
scas
lret
pop
xor
outsl
dec
subb
adc
out
jecxz
mov
cmp
sub
fs
pop
cmpsb
dec
push
cmpsb
xor
adc
lcall
lcall
leave
push
gs
dec
jb
sbb
xor
pop
scas
testb
in
int3
inc
cli
sub
sbbl
push
icebp
in
in
mov
and
pop
test
mov
sti
add
add
fiadds
std
incb
jmp
pusha
lahf
outsl
xchg
aam
mov
cltd
push
jmp
mov
cs
roll
insl
and
in
jb
xchg
inc
mov
insl
fcmovnb
mov
test
test
repnz
testl
movsl
fidivl
jns
mov
or
test
mov
loope
xchg
cmp
imul
addl
scas
sbb
fidivs
dec
cltd
mov
mov
push
xchg
imul
lods
inc
push
and
inc
mov
adc
cli
cmpsl
xchg
sbb
fnclex
add
ret
or
mov
mov
cmp
lret
mov
pop
push
sbb
xchg
ret
stos
inc
mov
inc
mov
in
xchg
incb
std
aaa
jb
mov
pop
pop
or
sub
lahf
dec
out
add
fwait
ds
cmp
insl
ljmp
mov
shll
push
dec
pop
jne
enter
insl
cmpsb
notl
icebp
insl
mov
imul
scas
shlb
lods
jl
mov
jo
imul
incb
pop
xor
std
subl
xchg
decb
mov
jp
adc
sahf
lea
js
loop
repz
and
std
cmpsl
addr16
xor
ljmp
mov
mov
popf
mov
sbb
jecxz
setle
call
rolb
stos
or
or
jg
testb
adc
std
out
cwtd
outsl
mov
scas
inc
int
mov
popf
add
xor
add
and
lret
jmp
lds
repz
imulb
sub
adc
fisubl
movsl
cld
in
jb
mov
lods
lock
cmc
mov
inc
mov
add
or
out
mov
sub
sti
inc
mov
push
rclb
ret
dec
mov
inc
mov
and
hlt
sti
fsts
inc
lods
jl
sbb
pop
fwait
movsb
filds
popf
aas
push
test
dec
mov
dec
mov
add
inc
out
mov
popf
movsl
add
decb
pop
int3
out
out
lcall
push
mov
shlb
sub
loope
mov
and
daa
jae
xchg
out
push
push
jnp
mov
xchg
sub
xchg
sub
jg
dec
inc
mov
aas
jge
pop
ds
decb
idiv
push
xchg
std
jecxz
sahf
xor
jp
cltd
inc
ret
jg
pop
int3
ljmp
dec
push
icebp
incb
loopne
enter
pop
fs
incb
in
mov
xchg
decb
ret
cmpsb
sbbl
and
mov
imul
inc
mov
int3
insb
xchg
xchg
push
paddsb
add
pop
pusha
lahf
push
sub
pop
rolb
aad
push
mov
popa
ret
popf
adc
sub
mov
shll
cmc
jnp
outsb
xchg
repnz
and
mov
fildl
incb
lods
subl
xchg
pop
push
icebp
inc
shlb
jmp
or
leave
push
cmp
repnz
and
outsl
cmp
push
xor
mov
mov
mov
xchg
pop
jecxz
icebp
mov
aaa
scas
mov
nop
pop
addl
mov
push
mov
loop
popa
cs
rolb
xor
cmp
stc
out
mov
sbb
push
mov
sar
mov
sub
sbb
push
popf
pop
bound
in
xorl
jp
mov
cld
mov
mov
cld
fcoms
faddp
add
mov
add
mov
lds
mov
das
mov
in
cltd
cmp
push
xchg
push
icebp
loop
aaa
in
xor
cmc
dec
pop
mov
mov
rol
mul
test
jp
icebp
sti
nop
lds
in
sbb
xor
xchg
scas
xchg
repz
mov
jb
sub
fsin
jnp
push
bound
xchg
scas
mov
jae
cmp
sar
adc
dec
mov
mov
js
cwtl
sbb
cli
mov
decb
test
xchg
sar
mov
push
mov
mov
into
inc
shrb
aas
imul
je
or
repnz
sub
xorb
sbb
cmp
lods
les
xor
sbb
sub
sbb
cmp
mull
mov
mov
scas
rolb
cmp
insb
xchg
js
adc
addr16
cmp
sub
and
jg
pop
xor
cwtl
out
xchg
fnsave
xor
addr16
mov
test
loopne
adc
loope
sar
inc
in
aad
push
icebp
sti
mov
adc
daa
cwtd
cmc
fisubrl
cmp
inc
mov
mov
sar
outsl
popf
lods
movsb
add
rcrl
aam
dec
jle
or
lds
push
jp
mov
fs
xchg
push
iret
dec
ret
decb
stos
xchg
rcll
shrl
jecxz
fs
inc
adc
loopne
jp
fsubrp
scas
sbb
pop
xchg
sbb
sti
push
add
decb
out
sub
lahf
pusha
lahf
decb
push
es
pop
test
jnp
push
dec
loope
nop
mov
shll
les
pop
push
mov
xchg
dec
sbb
bound
adc
pop
mov
xchg
nop
mov
cmpsb
inc
insb
xchg
divb
adc
cltd
incb
aam
cmpsl
push
jge
push
and
aam
addr16
rorb
jnp
sub
loop
xor
xor
nop
dec
jae
scas
test
addl
push
int
add
cwtd
shrl
push
std
je
outsl
jmp
mov
cli
inc
or
testb
imul
push
mov
stos
pop
inc
mov
push
fidivrs
or
sbb
dec
ret
cli
popa
lret
es
shlb
es
scas
sbb
into
test
sbb
cs
imul
popa
stc
test
idiv
movsb
sti
xor
popf
cmp
sub
stc
mov
stc
and
out
cmpsb
je
popf
call
fs
xor
cmp
or
mov
es
movsb
pop
mulb
aad
into
xchg
dec
lods
dec
int3
cmp
call
mov
incb
adc
addl
movsl
mov
mov
inc
mov
push
lcall
xchg
rcl
cmp
xlat
xchg
pop
or
incb
and
scas
leave
imul
xchg
xor
gs
sti
test
push
adc
into
mov
push
mov
mov
cmp
cld
scas
fsubrl
push
pop
dec
mov
hlt
mov
popf
cmp
jno
xchg
push
xchg
inc
push
icebp
dec
cmp
repnz
and
lahf
sbb
jns
push
fidivrl
stos
mov
jbe
mov
bound
push
int
add
incb
repnz
cmp
push
adc
mov
js
pop
movsb
jb
int3
ljmp
xchg
and
outsb
xchg
push
adc
push
jle
pop
xchg
dec
mov
xchg
mov
mov
cmp
sub
adc
add
pusha
lahf
addr16
neg
and
and
dec
imul
xorb
adc
lds
std
add
push
lret
int3
fcmove
push
cmp
fsin
and
fcmovnb
xlat
pop
rorb
icebp
test
dec
inc
mov
mov
ss
mov
add
movsl
in
cwtd
sub
jnp
push
inc
mov
repz
pop
xlat
cmpsl
gs
std
scas
mov
sub
fsub
pop
pusha
lahf
sbb
mov
lock
mov
nop
xor
cmp
sar
mov
ja
xchg
scas
shll
out
push
ljmp
idiv
das
mov
sub
xchg
fcomi
push
repnz
icebp
fldcw
decb
pop
mov
popa
pop
leave
jo
xchg
push
icebp
nop
push
icebp
decb
cltd
xchg
cwtl
mov
xor
push
dec
pop
inc
mov
clc
stos
loop
sub
lcall
cltd
cli
leave
je
icebp
dec
mov
das
inc
mov
push
cmpsl
xchg
cwtl
or
icebp
mov
es
mov
repz
out
mov
sti
ror
and
mov
out
mov
mov
loopne
mov
decb
ror
jge
fidivrs
fldt
xchg
and
lret
scas
xchg
xchg
shrl
inc
aad
mov
xchg
sbb
push
xor
into
addr16
fbstp
rcl
push
sti
jecxz
pop
xor
push
dec
mov
cmc
dec
mov
roll
out
sar
es
fadds
cmp
loopne
imul
call
add
inc
mov
sub
push
fstpl
mov
ja
addr16
cmp
mov
and
movsl
mov
cmp
mov
xchg
gs
stc
scas
adc
subl
decb
sbb
enter
push
imul
movsl
pop
xor
inc
add
call
jbe
jne
int
pop
aad
mov
sbb
call
jle
mov
cs
xor
jmp
adc
pusha
lahf
dec
outsb
xchg
sti
dec
mov
xor
fs
and
sbb
clc
adc
pusha
lahf
incb
int3
bound
je
mov
repz
jo
fwait
dec
sub
stos
addl
insl
sti
inc
mov
xor
dec
cs
mov
mov
mov
sbb
xlat
aas
push
xchg
inc
cmpsl
mov
stc
fs
cli
mov
test
repz
sub
decb
cli
sbb
jp
popf
mov
hlt
push
icebp
incb
inc
or
mov
xor
call
mul
lret
cmp
movsl
cmp
dec
mov
or
movsl
in
mov
pop
cmp
fildll
decb
add
inc
pop
out
cmp
xchg
pop
inc
testb
decb
jbe
jge
sbb
mov
push
incb
out
or
mov
ja
in
mov
movsl
aad
xchg
and
xor
mov
ljmp
filds
inc
mov
mov
in
fwait
mov
lea
jecxz
xchg
pusha
lahf
incb
jbe
or
call
mov
aam
adc
cmc
inc
or
cmc
or
mov
lock
pop
gs
je
pop
inc
mov
in
pop
je
dec
jmp
int3
sub
xchg
insl
sbb
and
arpl
ffree
pop
cmp
in
mov
add
fstps
xchg
pop
add
pop
cmc
jno
pop
mov
in
bound
outsb
xchg
icebp
popa
fsubrs
mov
fisubl
repz
shl
xchg
lea
add
jl
repz
sbb
sub
inc
rcrb
push
testl
mov
ljmp
push
icebp
fsubr
cli
mov
mov
jmp
jno
stos
fbstp
cmpsl
aam
fsubr
jbe
mov
or
incb
push
pushf
inc
rol
push
cli
leave
adc
loopne
xchg
mov
mov
sub
scas
loope
jl
stos
arpl
decb
xor
ret
sbb
push
shr
cmp
adc
add
addr16
xlat
mov
aam
sub
sbb
push
stc
mov
push
or
aaa
mull
fstpt
push
icebp
ficoms
imul
imul
test
sar
iret
mov
xor
test
mov
lods
cwtl
in
add
sub
xlat
mov
dec
in
sbb
jg
enter
xchg
and
dec
hlt
mov
test
test
mov
xor
jg
or
xor
and
sbb
adc
stc
rolb
jmp
xor
or
add
cmp
cltd
mov
mov
insb
xchg
testl
aaa
lea
fimuls
inc
mov
dec
popa
cltd
into
sbb
lea
outsl
sahf
or
es
and
cmpsl
xor
outsl
xchg
popf
jecxz
ljmp
jo
sbb
fmull
cwtd
gs
mov
mov
mov
inc
dec
mov
adc
out
je
aas
jbe
lds
push
and
out
push
ret
test
add
ss
sub
push
les
stc
aas
adc
jg
lds
dec
add
xchg
xor
inc
mov
jns
arpl
aad
ret
mov
orb
iret
jmp
jb
dec
mov
jbe
xchg
sub
jge
bound
mov
stc
sbb
adc
ret
or
fcompl
fwait
stos
shrb
popa
ds
fbld
push
mov
push
add
ds
outsb
xchg
incb
lret
jnp
mov
xlat
jp
xchg
push
add
cmpsb
pop
loope
sar
test
or
cltd
fmuls
push
push
stc
bound
loope
cmp
jmp
lret
push
xchg
dec
mov
stos
rorl
adc
js
jae
movsb
sub
test
ja
loope
xchg
pop
sbb
cmpb
or
xchg
push
popa
cmp
adc
dec
jle
ljmp
decb
rorl
mov
fwait
jge
clc
mov
pop
clc
pop
xchg
mov
mov
mov
jp
stos
mov
outsl
lret
push
cmp
mov
xchg
cs
ja
mov
sar
fistpl
dec
pusha
lahf
jbe
stos
xchg
pop
adc
testb
sub
shrb
dec
mov
shll
add
fstpl
and
cmp
lods
push
mov
sub
jg
test
mov
mov
lahf
lret
mov
pop
mov
je
rcll
dec
mov
lahf
mov
popf
sub
pushl
insl
fidivs
repz
or
mov
les
pop
orl
cwtd
lcall
call
decb
repz
lods
inc
inc
in
xlat
repnz
push
cs
repnz
mov
sbb
adc
push
icebp
mov
movsl
push
cld
xchg
dec
inc
cli
cmp
push
fxch
pop
addl
sub
decb
aad
pop
aam
add
push
enter
stos
jmp
push
lods
and
je
mov
repz
push
icebp
jg
loopne
push
mov
movsb
mul
test
popa
je
add
clc
cmpsl
inc
mov
hlt
adc
mov
fdivrs
popf
decb
mov
mov
out
mov
lahf
decb
decb
cmp
and
in
fldt
aad
inc
mov
pushf
hlt
out
cli
lahf
test
and
mov
icebp
push
fwait
in
aaa
js
push
sbb
cmpsb
mov
sbb
out
inc
mov
idiv
pop
ficompl
mov
dec
mov
add
add
pop
pop
mov
pop
rcrl
and
pop
jb
cs
push
std
daa
add
jno
fwait
out
lock
xchg
xchg
test
pop
sbbb
dec
mov
lods
sub
outsb
xchg
fistpl
in
fildll
xchg
leave
mov
aad
pop
shrl
push
sub
out
sub
bound
mov
cld
cwtd
incb
decb
icebp
decb
stos
fnstsw
stos
lcall
or
cltd
add
addl
mov
mull
fdivrl
loope
mov
lcall
sahf
inc
jno
fsin
xchg
xlat
scas
jae
scas
imul
pushf
pop
jmp
mov
push
addr16
ds
sbb
cmc
push
test
jae
mov
insb
xchg
lcall
sbb
push
stc
mov
or
incb
movsl
mov
cmpsb
push
icebp
cwtl
cld
loope
lahf
push
subb
clc
sub
adc
pop
adc
ret
lods
in
rorl
inc
fwait
cltd
mov
loop
xchg
movl
mov
mov
es
gs
leave
push
scas
scas
dec
fwait
cmc
cmp
fidivrs
xor
decb
std
mov
cmc
xor
out
cltd
and
decb
fcmove
dec
fldenv
pop
push
xchg
push
ljmp
push
notb
gs
fdivr
jo
in
mov
sar
adcb
xchg
mov
popf
loope
push
stc
pop
and
shr
fscale
inc
ret
lock
stc
sbb
adc
mov
jg
mov
aam
xchg
jg
inc
mov
and
fdivrs
cmpsl
mov
push
scas
sbb
rolb
in
das
in
aad
mov
movsb
push
in
jmp
pop
std
aad
dec
ds
xchg
add
jg
sbbb
adc
and
mov
aam
xor
jl
sarl
xor
xlat
dec
sub
jae
popa
cmc
js
rorl
in
mov
lock
leave
xor
aaa
nop
dec
cld
or
popa
inc
mov
movsl
icebp
sbb
cmpsb
fsubrl
jno
outsb
xchg
sub
out
lea
push
sub
and
ss
and
mov
mov
inc
mov
jne
rclb
int
push
enter
push
and
decb
incb
pop
fidivl
or
push
mov
arpl
xchg
cmpsl
inc
sbb
popf
stos
xchg
lret
aam
fnsave
jno
repnz
mov
inc
and
stc
adc
xchg
mov
adc
hlt
repnz
mov
dec
pop
and
aas
mov
mov
push
lahf
pop
stc
adc
pusha
lahf
dec
xchg
aad
idiv
outsb
xchg
pop
loope
cmp
movsl
das
jle
mov
lahf
loopne
and
movsl
mov
cwtd
mov
icebp
xchg
out
mov
shll
insl
inc
popa
gs
pop
les
incb
stc
fnstenv
xlat
jmp
adc
dec
mov
rcl
in
inc
mov
and
movsl
repz
mov
xor
arpl
pop
fdivrl
in
xchg
push
stos
mov
push
insb
xchg
clc
adc
daa
shrl
dec
sbb
ljmp
aad
fadd
stos
adc
incb
fwait
insb
xchg
xlat
adc
jne
into
fiaddl
out
jle
cmp
mov
mov
lret
mov
jae
mov
cmc
pop
mov
aad
cmp
out
mov
xchg
cmp
dec
pop
jns
ret
jbe
int
fwait
cmp
gs
test
pop
sub
mov
xchg
sbb
bound
pop
addr16
add
add
incb
inc
mov
xlat
xchg
or
push
icebp
pop
mov
mov
incb
sub
mov
xchg
shlb
xor
fdivrp
mov
xor
fwait
xor
adc
add
sbb
mov
inc
mov
push
aas
lret
decb
icebp
dec
movsl
jle
sbbl
mov
inc
pop
icebp
test
add
push
xchg
ret
cmp
dec
mov
loopne
push
incb
push
cmp
jl
mov
adc
fsin
lret
es
adc
loop
repz
fcmovne
mov
or
dec
mov
out
pop
movsb
jo
fistl
daa
movsl
mov
mov
fsin
and
stc
test
xor
pop
sbb
je
sub
sub
fisttpll
icebp
incb
outsl
cli
push
pop
aaa
cwtl
inc
mov
ljmp
or
xor
mov
adc
mov
aas
subb
lret
push
xchg
nop
out
cmpsb
repnz
stos
out
mov
into
xchg
jmp
movsb
clc
sub
mov
ljmp
cmp
pop
nop
dec
mov
inc
mov
subl
test
add
stc
xchg
stc
cmpsl
dec
mov
das
repnz
scas
test
dec
mov
int3
fs
decb
popa
shll
dec
mov
mov
decb
jge
xchg
decb
jmp
imull
jb
mov
lret
out
and
mov
ficoms
cmp
jge
daa
xor
jp
pop
dec
std
popf
pop
fsubr
sarb
ret
aam
cmp
pop
cmp
cmp
imul
jge
and
mov
int3
int3
push
movhlps
enter
push
repnz
fldt
adc
je
jg
mov
mov
xchg
add
mov
and
decb
insl
std
iret
sahf
and
pop
loop
mov
mov
add
pusha
lahf
mov
dec
mov
les
ret
mov
sub
xchg
pop
fmull
pop
or
cmc
incb
cmp
xor
cmp
popf
cmp
insl
or
incb
fstl
xchg
and
push
dec
das
fdivr
jne
popa
aam
lea
icebp
push
je
rcl
and
lcall
adc
and
cmp
fdivrl
pop
vmwrite
add
in
sub
repz
sahf
cwtd
jno
mov
push
lea
jg
stc
jle
sti
clc
bound
pop
sub
mov
dec
mov
mov
inc
mov
test
shufps
jmp
adcb
mov
mov
aad
pop
or
ljmp
popa
push
jbe
test
cltd
jecxz
cmc
aaa
mov
iret
mov
push
mov
jl
pushf
sti
mov
popf
repz
cmp
in
je
jo
xchg
ret
cmp
or
pop
popf
shr
orl
nop
arpl
pop
and
adc
adcb
pslld
push
test
mov
scas
push
lods
cmp
cmp
jl
daa
inc
mov
je
mov
and
stc
jno
or
jo
jne
xor
popa
ficoms
repz
pop
icebp
dec
mov
cmp
enter
repz
pop
in
push
loopne
sahf
call
push
stc
push
es
js
mov
bound
mov
in
rclb
arpl
and
jns
adc
jno
add
call
cs
scas
aas
std
xor
cltd
mov
dec
mov
xor
mov
xchg
dec
mov
cli
imul
nop
dec
sub
jno
or
stos
mov
mov
pop
inc
mov
jmp
fcmovnu
jg
or
lcall
mov
mov
addr16
inc
int
mov
pushf
cmc
xchg
fidivs
std
cmp
aam
std
pop
mov
iret
mov
xchg
lcall
push
imul
add
decb
cmc
jb
popa
dec
mov
push
fisubs
cltd
jbe
sti
dec
stc
xor
inc
mov
push
stc
in
stc
mov
xchg
incb
emms
int3
cs
enter
jbe
dec
mov
stc
clc
mov
outsl
mov
add
gs
xchg
out
aaa
sarl
scas
imul
mov
dec
mov
lea
jbe
sar
or
mov
dec
mov
dec
mov
adc
xchg
sbb
out
fdivr
push
dec
mov
int
ljmp
dec
mov
out
sub
sbb
xor
aad
rcll
mov
sbb
xchg
decb
jl
cltd
mov
idivb
xchg
subb
inc
mov
ljmp
sub
fisubs
ja
xchg
xchg
mov
sub
pop
loope
inc
jnp
lret
inc
orl
pop
pop
xchg
scas
lock
cmc
pop
mov
sbbl
xor
xchg
push
stc
aam
add
push
xor
out
push
pop
mov
push
outsb
xchg
out
lret
xchg
hlt
jae
je
push
or
cli
fists
sbb
inc
iret
ds
mov
pop
mov
loope
bound
cwtd
hlt
arpl
pop
jle
cmp
jnp
in
and
adc
cmc
xchg
dec
mov
jle
les
xchg
incb
bound
movsb
push
pop
les
inc
mov
lret
xchg
popa
pop
cs
inc
mov
shlb
fsin
sbb
mov
les
rclb
mov
dec
pop
push
icebp
incb
mov
push
xor
push
mov
lock
scas
push
sub
lods
and
mov
std
incb
movsl
push
pop
push
xchg
xchg
shrb
xchg
hlt
cmp
mov
and
sub
je
inc
or
dec
lret
cli
cmp
mov
aaa
sahf
inc
mov
add
push
cmp
sbb
into
push
sub
out
std
insb
xchg
out
push
mov
push
adc
cltd
sbb
xchg
xor
mov
fwait
in
xchg
mov
mov
dec
mov
mov
ret
mov
out
idiv
mov
lods
jle
xchg
incb
add
aad
in
mov
jne
icebp
shl
adc
ss
out
shrl
gs
decb
push
xor
sbb
mov
push
mov
mov
mov
in
loop
notb
sbb
lods
sbb
mov
outsl
in
jmp
icebp
mov
incb
and
pop
inc
mov
mov
inc
mov
lds
stc
cwtd
sub
sub
pop
shll
sub
dec
push
stc
std
adc
xchg
mov
rcrb
sbb
mov
mov
adc
aad
mov
stc
imul
push
loopne
xchg
std
xchg
mov
sbb
lahf
sub
jb
sti
cmc
mov
in
jnp
inc
roll
mov
aam
sbb
mov
stc
and
decb
and
adc
jns
mov
mov
aad
fmuls
sbb
xchg
rcrb
lahf
dec
adc
mov
inc
mov
in
mov
push
mov
sti
aas
dec
mov
cmp
cmp
test
fistpl
mov
mov
imul
mov
cmpsb
dec
mov
push
or
repnz
test
mov
add
mov
mov
sub
decb
idiv
xchg
jb
cmp
add
test
dec
mov
pop
int3
dec
mov
jecxz
mov
sub
sbb
mov
in
jmp
xchg
add
push
lret
xchg
jnp
aam
xchg
mov
movsb
mov
xchg
int3
pushf
lds
sahf
dec
cwtd
aaa
push
sarb
leave
jb
sub
es
fmuls
add
jno
lret
push
mov
mov
xchg
daa
pop
cmp
decb
repnz
into
adc
dec
pop
adc
pusha
lahf
xlat
pop
jne
inc
idiv
in
shl
arpl
xchg
jmp
nop
enter
in
jg
dec
mov
loope
mov
fcoms
pop
cmpsb
push
pop
and
mov
aad
in
leave
add
ret
add
mov
mov
int
add
fadd
mov
aad
xor
mov
jge
xor
jbe
test
fbstp
fucomp
inc
pop
and
mov
mov
fiaddl
sub
mov
hlt
mov
mov
push
xor
push
lcall
jecxz
lods
and
mov
lahf
cmp
fildll
decb
int3
cmp
mov
mov
into
insb
xchg
sbb
and
xor
gs
and
push
dec
push
add
push
cmpb
fidivrl
pop
repz
push
xchg
out
mov
jmp
jnp
mov
scas
push
mov
mov
mov
mov
adc
mov
jmp
ficoms
xor
std
pop
or
sbb
daa
shrl
lret
sbb
mov
jno
mov
loopne
frstpm(287
imull
loopne
nop
fnstsw
jmp
nop
je
out
movsb
notb
or
incb
and
cwtd
decb
icebp
shl
ds
js
outsb
xchg
decb
push
cltd
dec
mov
push
stc
incb
jns
repnz
ds
mov
add
inc
nop
cs
stos
mov
xlat
pusha
lahf
sti
movsl
mov
mov
leave
popa
loopne
adcb
pop
mov
cmc
rclb
pop
inc
mov
adc
dec
mov
jnp
mov
xor
cmp
cli
call
mov
aas
push
stc
das
jp
lcall
aam
dec
mov
sub
incb
push
sub
or
xor
mov
add
ljmp
dec
inc
clc
cld
dec
arpl
sar
test
cld
push
pop
in
aaa
les
cmc
mov
mov
cmp
outsb
xchg
decb
nop
fwait
dec
mov
sub
mov
push
cmp
and
idiv
and
xchg
dec
decl
in
aam
lcall
inc
mov
mov
sbb
fsin
es
bound
enter
inc
mov
xor
or
iret
les
jmp
js
dec
aas
outsb
xchg
jns
inc
stos
dec
mov
add
push
sub
add
loope
out
jmp
mov
adc
push
and
xchg
sub
adc
bound
fsin
ret
mov
mov
xchg
decb
cmc
insl
imul
adc
outsb
xchg
incb
imul
inc
mov
dec
xchg
stos
sbb
mov
mov
mov
xor
sub
lcall
fucom
or
inc
mov
and
jmp
pop
jae
insb
xchg
push
sub
gs
mov
jne
mov
pop
hlt
jo
mov
inc
mov
fwait
mov
addb
mov
cmc
sub
adc
and
xchg
and
shrl
cli
or
shr
test
or
in
cmp
fimull
cld
loope
inc
mov
inc
call
cld
clc
mov
dec
aam
dec
mov
movsb
mov
fwait
mov
test
mov
cwtl
sbb
aas
cmpb
push
test
vpsubusw
xchg
sbb
dec
mov
iret
in
mov
gs
mov
decb
cltd
mov
mov
hlt
add
daa
jge
test
mov
mov
mov
idiv
add
cmc
mov
adc
enter
jnp
or
adc
mov
mov
push
stc
sbb
lods
push
fistl
loop
dec
xchg
mov
fsub
nop
fsubs
nop
pop
mov
out
jnp
fsts
jae
pop
sbb
mov
jb
cwtd
jne
clc
jb
repz
cmc
decb
inc
dec
mov
aas
jg
xchg
cmpsb
adcl
sarl
or
pop
add
decb
ss
ret
adcl
dec
mov
push
sbb
adc
test
adcb
fs
push
adc
dec
mov
out
fxch
dec
mov
or
out
js
mov
xlat
es
cwtl
or
cs
and
incb
adc
cwtd
incb
mov
aad
int3
loop
mov
sahf
adc
fcompl
mov
mov
jne
stc
mov
test
xchg
push
popf
mov
and
incb
popa
or
aaa
and
adc
ficompl
adc
mov
pop
mov
pop
mov
test
cmc
pop
scas
sti
mov
push
rcr
or
cmp
lahf
incb
stc
js
ret
dec
mov
mov
mov
xchg
icebp
in
mov
xchg
decb
mov
ja
push
push
in
sahf
aas
fcmove
das
xchg
sahf
add
lret
mov
lret
fistpll
fs
incb
stc
pop
xchg
or
nop
mov
dec
mov
add
mov
sub
lods
pop
rcrl
fwait
jo
fistl
rcrl
clc
in
sub
aaa
or
cwtd
and
test
xchg
push
icebp
mov
push
incb
sbb
add
mov
repz
out
xchg
stos
roll
stc
in
pop
outsl
add
dec
sub
je
inc
adc
fs
pop
push
or
dec
jg
xchg
adc
sub
mov
fwait
xchg
xchg
ss
jo
rcrl
repnz
scas
popf
dec
add
sbb
movsb
arpl
arpl
outsb
xchg
incb
lock
cli
mov
mov
and
test
stc
jg
lds
ja
icebp
mov
sub
loop
popa
add
jl
xchg
jno
test
adc
out
repz
mov
jbe
sbb
pop
push
mov
int
cltd
enter
and
mov
mov
pop
adc
jns
xor
sar
mov
bound
xchg
popf
incb
mov
fwait
cwtl
lds
push
xor
mov
loop
call
dec
cmp
dec
imul
pop
clc
mov
imul
mov
pop
inc
mov
xlat
decb
push
xor
xchg
adc
jo
fsin
leave
fists
xor
xchg
call
leave
or
jno
insb
xchg
incb
and
decb
divl
mov
dec
mov
add
ficomps
push
cmpsl
dec
bound
mov
mov
popa
xor
shll
jp
sti
loopew
pop
scas
mov
mov
pop
adc
sbb
mov
mov
mov
xchg
xchg
aad
ds
fidivl
mov
pop
lcall
les
sbb
jp
mov
lea
mov
mov
enter
std
incb
push
stc
ljmp
into
enter
les
roll
pop
pop
popf
arpl
xor
sti
fisttpl
cmp
sahf
mov
sbb
cmpsl
push
sub
addr16
inc
dec
mov
cmp
loop
xor
daa
xlat
in
ja
aad
psubb
mov
int3
jnp
iret
popa
xchg
imul
mov
ja
pop
xchg
xor
scas
scas
fidivrl
vaddss
mov
std
aaa
aam
and
decb
mov
push
pop
mov
fsubrs
adc
shrl
add
lods
mov
fcoms
cltd
stos
mov
jo
lods
cmp
jle
cmpsl
add
outsb
xchg
decb
xchg
lret
cltd
dec
mov
test
stc
outsb
xchg
mov
mulb
pop
sarl
jb
mov
sti
incb
in
sbb
cmp
sbb
cmpsb
push
pop
jl
ds
stc
mov
test
cltd
loopne
jb
loop
mov
std
incb
jne
adc
sub
mov
daa
insb
xchg
icebp
inc
movsl
cli
mov
decb
mov
outsb
xchg
incb
pop
jbe
nop
scas
ja
aad
fimuls
jmp
mov
push
stc
adc
btr
xlat
pop
sbb
stos
mov
xchg
imul
lret
jle
xchg
repz
ljmp
decb
shr
add
adc
mov
fbld
jbe
jp
xchg
out
clc
daa
imul
hlt
aaa
bound
pop
mov
das
sub
xlat
cmp
lahf
fists
dec
mov
mov
pop
mov
jl
and
cmp
mov
push
lret
mov
mov
rcrb
adc
push
das
pop
push
mov
sti
sahf
insl
xchg
repnz
std
test
adc
aaa
xchg
sbb
jl
scas
jno,pt
xor
mov
pop
mov
pushl
jp
mov
jno
repnz
xchg
add
inc
jmp
push
popf
cld
push
icebp
mov
xor
call
into
cwtl
out
leave
fmull
loope
std
or
inc
ja
cs
xor
test
pop
push
stc
sbb
fwait
cli
add
insl
or
cmp
outsb
xchg
incb
fisttpll
jbe
loope
pop
dec
ret
inc
mov
add
dec
fcom
in
xchg
cmpsb
or
decb
push
inc
mov
decb
mov
mov
pop
inc
mov
add
cli
adc
ret
jmp
fistpl
decb
xchg
stos
stc
dec
mov
test
aad
xorl
rcl
push
cli
pop
dec
and
mov
pop
jo
cmp
jbe
xchg
test
pop
mov
mov
stc
loopne
sbb
gs
scas
outsb
xchg
xor
aad
insb
xchg
incb
imul
cmpl
int3
cwtd
flds
or
incb
cmpl
mov
jno
stc
inc
xchg
test
and
jp
movsl
iret
mov
and
stc
in
jmp
loop
mov
inc
mov
fldcw
fwait
ret
jg
inc
sbb
pop
dec
es
cmp
decb
nop
xchg
adc
ja
ds
xorl
jecxz
cmpb
mov
mov
mov
aaa
lahf
push
inc
cmpsb
sbb
lret
adc
push
xor
jb
fcoml
xchg
sbb
dec
mov
fistps
xor
jbe
and
pop
pop
inc
mov
cs
imul
out
jmp
lds
aas
mov
xchg
imul
dec
mov
nop
ret
test
inc
scas
mov
dec
mov
aad
adc
jle
fcomp
mov
adc
mov
push
mov
sbb
jnp
mov
js
mov
leave
xchg
testb
clc
cmp
xchg
or
es
pop
jecxz
push
loop
push
mov
mov
test
adc
xor
cmc
ljmp
pop
jg
out
mov
lods
stos
xchg
adc
xchg
and
mov
cmc
lcall
aad
cwtd
sub
fcmovu
push
adcl
sbb
mov
sbb
xor
mov
jno
adc
mov
aas
jnp
xchg
jno
add
testl
shrl
decb
std
push
icebp
es
or
fcmovnbe
cmpb
pop
sub
decb
in
xor
mov
mov
cld
jbe
mov
sbb
mov
decb
mov
jae
popf
jno
jo
fsin
popf
int
jge
fidivs
loop
dec
mov
in
shll
les
xchg
fwait
stos
vpmulhw
jl
pop
mov
es
fidivs
xor
lcall
fwait
cmc
ret
in
fistpl
scas
or
loopne
inc
mov
sti
decb
daa
push
subl
cmp
incb
dec
mov
fistl
es
cmp
xlat
inc
mov
lea
sub
jg
imul
dec
mov
inc
arpl
cmp
pushf
stos
pop
movb
decb
ficoml
in
les
sub
mov
push
sub
mov
loopne
or
mov
lock
cmp
and
mov
or
sbb
cmp
sbb
icebp
jge
xchg
arpl
iret
mov
lahf
movsl
in
mov
mov
mov
decb
mov
push
shrl
jecxz
push
and
add
popa
pop
mov
lcall
xchg
into
and
adc
jmp
stc
sub
or
test
ds
mov
mov
or
arpl
cmp
mov
popf
sbb
adc
imul
mov
xor
sbb
imulb
lcall
ffreep
das
pop
imul
and
xor
leave
jecxz
fcoms
vcvttpd2dqy
shll
incb
jle
cs
xlat
in
insl
nop
ss
cmp
jmp
jle
xchg
xchg
jmp
aam
cmpsl
out
mov
mov
mov
lods
adc
push
dec
mov
pop
xorb
iret
aam
stc
sub
xor
add
adc
sbb
pop
inc
mov
icebp
push
icebp
inc
ror
cs
xor
cld
fidivs
mov
js
sbb
frstor
push
mov
mov
in
ds
pusha
lahf
push
dec
cli
mov
pusha
lahf
mov
loope
xchg
or
outsl
daa
jbe
inc
mov
insl
pop
stos
cwtl
push
pop
xor
xor
repz
std
jbe
pop
mov
ficompl
inc
xor
cltd
push
popa
lret
into
mov
jge
push
cmp
push
xor
inc
mov
dec
mov
inc
mov
mov
outsb
xchg
incb
outsl
fisubrl
adc
or
daa
lods
aam
fnstcw
jno
fs
incb
push
push
stc
movsl
mov
inc
mov
pop
jae
jno
mov
lods
cmp
jge
inc
mov
decb
decb
xchg
dec
mov
mov
bts
jg
lret
idivl
stos
pop
cwtl
cmp
ds
mov
enter
dec
stos
in
fisttpll
idiv
in
pop
xchg
incb
sahf
pushf
lods
push
stc
decb
inc
inc
enter
add
mov
icebp
incb
incb
into
lret
dec
mov
loop
mov
aad
stc
stos
pop
xchg
mov
mov
dec
sub
cmpsb
adc
mov
sbb
dec
mov
dec
insb
xchg
jnp
xchg
dec
push
loope
jecxz
andb
inc
std
xchg
fdivl
fwait
dec
repnz
mov
push
in
lahf
stc
sbb
xor
and
gs
mov
imul
sbb
fcoml
push
add
mov
leave
test
jo
xor
mov
js
cmc
loope
pushf
pop
popa
mov
sbb
testl
mov
cmc
gs
and
lock
das
jle
adc
and
in
xchg
ds
mov
in
lock
pop
enter
push
in
xchg
in
inc
insl
pop
sahf
out
ret
in
inc
cmp
push
pop
call
test
aas
lds
fcmove
ficomps
in
mov
dec
mov
loop
pop
adcb
jl
add
mov
xor
jge
fs
mov
push
stos
in
push
cmc
cli
push
stc
jl
mov
popf
mov
addr16
adc
xchg
push
inc
or
arpl
xor
shl
and
pop
arpl
or
pop
in
cli
in
push
lcall
sub
aas
lret
stos
jge
push
inc
mov
sbb
cmc
enter
stc
jb,pt
je
movsb
dec
mov
in
adc
loope
xchg
filds
flds
inc
mov
push
inc
mov
mov
xlat
insl
les
xchg
test
cmp
lret
jo
ret
mov
inc
mov
sbbb
dec
cmp
push
fsubl
aas
or
incb
jecxz
lahf
out
push
ficoml
mov
div
das
mov
xchg
mov
pop
enter
xor
push
xchg
add
in
push
stc
incb
dec
lret
jle
int
into
mul
jb
jl
fmuls
pushf
cwtl
push
je
adc
jno
inc
mov
mov
mov
movsl
scas
cmpsb
test
cmp
and
cmc
and
xchg
and
mov
mov
cmp
ja
in
lret
cld
pop
mov
std
inc
cwtd
mov
xchg
cltd
adc
shl
enter
dec
push
cmp
lods
xchg
push
loopne
inc
pop
and
adc
cmp
xor
cwtl
xor
xor
cmp
std
pushf
enter
push
add
mov
push
test
xchg
scas
ror
jbe
lahf
jo
jbe
repz
jge
sub
mov
adc
sub
inc
mov
gs
and
push
icebp
sahf
addr16
lret
add
lcall
repz
cmc
cmp
jp
mov
pop
fs
and
stos
test
mov
xchg
push
clc
jae
loop
mov
fs
mov
scas
stos
xchg
or
incb
xchg
fcomps
cmp
pop
iret
jbe
insl
idivb
mov
mov
hlt
int3
bound
outsb
xchg
outsl
pop
dec
pop
xchg
inc
scas
hlt
test
fwait
imul
imul
popf
push
das
in
lcall
insb
xchg
inc
or
push
imul
sub
adc
fsin
dec
push
or
inc
add
jg
loope
scas
pop
lahf
movsb
movsb
lret
repnz
adc
sub
loope
pop
adc
js
jns
out
push
mov
mov
add
aaa
xchg
sub
repz
inc
aas
mov
fcmovbe
pop
iret
mov
cmp
js
cmpsl
std
or
roll
adc
adc
xchg
xor
arpl
xchg
ljmp
in
sbb
rcrb
mov
roll
xchg
mov
xor
sar
fistpll
jns
sar
bound
incb
popa
xor
incb
cmpsb
push
jmp
jl
push
in
popa
insb
xchg
decb
sbb
sar
mov
pop
inc
lret
dec
sub
dec
mov
sub
sti
mov
scas
lock
adc
cld
enter
inc
xor
sahf
aam
dec
mov
inc
xchg
ljmp
xchg
clc
dec
mov
mov
and
mov
in
jne
jo
push
dec
mov
push
push
icebp
insb
xchg
jne
jne
adc
adc
mov
dec
bound
jb
stos
aad
sti
stos
iret
sbb
lods
push
sub
sti
out
sub
popf
xchg
xchg
decb
int
mov
push
xorl
xchg
lock
push
stc
xor
sar
push
shr
mov
lods
ljmp
popf
push
stc
jmp
repz
sar
inc
leave
pop
jb
cwtl
and
cmpsb
lret
jne
adc
mov
int3
mov
pop
inc
mov
push
icebp
xchg
lods
imul
inc
sub
jge
fs
ficompl
adc
stos
mov
dec
mov
cmp
int
add
sbb
fwait
nop
movsl
pop
adc
and
loopne,pt
push
paddusw
mov
dec
sahf
fdivrl
jb
orb
jns
stc
pop
out
sub
es
pop
cwtl
xchg
popa
push
stc
pop
lret
lods
andb
sbb
pop
adc
mov
pop
xchg
dec
mov
ret
insb
xchg
incb
pop
inc
or
je
push
push
cmp
out
in
das
shlb
adc
mov
insl
xchg
orb
enter
aaa
jg
xlat
fsubrl
and
decb
icebp
out
cwtd
mov
leave
sbb
mov
outsb
xchg
test
js
into
jno
xchg
dec
jp
sbb
jmp
cmc
mov
and
xor
jbe
scas
push
mov
jns
push
xor
sar
imul
fsubp
lahf
enter
icebp
cmpsb
popa
out
mull
or
dec
xchg
popf
or
aas
inc
mov
inc
fisubrl
aad
sbb
aaa
push
or
scas
sbbb
mov
les
inc
ficoms
cwtl
decb
mov
insb
xchg
decb
inc
cmp
outsb
xchg
insb
xchg
pop
fwait
fwait
sub
jne
xchg
pop
sbb
pusha
lahf
sbb
jl
mov
xchg
lret
stc
sbb
clc
push
int3
mov
lea
cmp
aad
adcl
ljmp
out
daa
stc
aaa
das
faddp
mov
and
mov
add
icebp
mov
je
rorb
mov
dec
mov
push
pop
ss
lahf
icebp
shlb
decb
rorl
shll
insb
xchg
decb
sahf
mov
movsl
adc
mov
push
cli
fwait
jnp
shrb
clc
iret
dec
mov
inc
aas
cltd
push
lahf
xchg
iret
in
push
negl
into
les
inc
mov
decb
popa
rcl
clc
jecxz
push
stc
incb
cmpsb
in
push
adc
lahf
inc
mov
mov
pop
inc
mov
fbld
frstor
adc
dec
mov
add
mov
sar
cld
cld
sub
inc
mov
adc
jb
mov
aam
jmp
mov
pop
lret
aas
jae
cwtl
jns
clc
cmp
adc
aad
adc
jne
xorb
lahf
in
loope
jge
stos
xchg
cmp
xchg
imul
sbb
movsb
adc
cmpsb
into
push
icebp
hlt
xchg
xstore-rng
cmpsl
jmp
nop
mov
popa
jle
pop
adc
loope
gs
into
pop
scas
loope
ljmp
fstps
jmp
or
icebp
bound
out
gs
mov
cmpsb
xchg
leave
jne
dec
hlt
outsl
std
add
fidivrs
cmc
decb
jnp
subl
pop
or
jp
cmp
sbb
dec
mov
jae
jb
iret
xor
push
je
pop
shll
loop
sbb
push
dec
cmp
test
xchg
into
cmc
dec
sbb
aas
sti
dec
mov
or
mov
ret
fcoml
xor
xchg
movsb
sub
and
cmc
lret
dec
mov
sub
cs
lods
mov
notl
mov
popa
adc
std
fsubrs
fidivs
sbb
mov
mov
fldcw
fnstenv
cwtl
in
lods
xchg
lds
jmp
add
loop
ljmp
aaa
cmp
adc
add
or
shll
mov
mov
fstpl
jbe
je
cltd
cmpsl
mov
sbb
mov
arpl
out
imul
and
push
cmpsb
hlt
xor
inc
lock
sub
ret
les
cmp
shrb
sar
add
idivl
xor
inc
mov
sbb
pop
xchg
cmc
fnop
cltd
mov
xor
incb
aas
fsubrp
push
icebp
and
dec
dec
loope
mov
mov
testb
cli
cld
adc
in
cltd
cmp
mov
cmp
js
sbb
sub
push
sbb
popa
add
lods
xor
lcall
pop
cmpsb
sub
xor
adc
lcall
int3
mov
movsb
in
xchg
jecxz
test
pop
jle
repz
adc
cmp
jne
sbb
sbb
xchg
shrl
xchg
xor
imul
cmp
int
fbstp
jno
divl
push
test
sbb
xchg
in
or
jg
icebp
adc
push
lea
push
push
mov
jle
adc
mov
sbb
jecxz
call
jmp
nop
xor
push
lret
ja
std
dec
pop
adc
mov
addl
lahf
sarl
sbb
je
insb
xchg
pop
xor
inc
mov
sub
test
je
mov
sub
cwtl
popf
cld
mov
push
cld
cwtd
xchg
sub
idiv
int3
cmp
fwait
decb
jge
xor
pop
pushf
ja
mov
in
jp
xchg
push
sub
adc
js
movsb
mov
jmp
cmc
outsb
xchg
pop
fwait
in
xor
cli
cmp
icebp
decb
iret
push
jecxz
sar
xorl
in
mov
frstor
in
push
and
bound
adc
sub
push
in
inc
mov
jbe
aaa
fldenv
aaa
aas
nop
insb
xchg
sbb
cmp
mov
shll
mov
call
shll
lahf
adc
or
xchg
popa
xchg
sub
mov
movsl
imul
adcb
sub
aas
test
xor
mov
inc
adc
mov
sbb
sar
mov
xchg
std
pop
int3
add
icebp
push
mov
outsl
dec
mov
sbb
aad
insl
inc
cmpsb
mov
and
scas
cmp
imul
ret
gs
xor
cmpsl
cmpb
movsb
fistps
aas
fadds
aas
paddsb
sbb
fstpl
xor
jae
pop
mov
xor
jge
jae
adc
xchg
stc
into
sub
hlt
loop
or
xor
cmp
mov
or
jnp
cmp
pop
or
inc
jp
add
incb
jbe
inc
mov
lds
sar
inc
mov
js
jp
push
adc
into
xchg
out
dec
mov
mov
xor
cmc
ss
cwtl
aad
add
xor
in
fwait
xlat
add
mov
outsl
mov
sahf
test
fnclex
jne
mov
int3
stos
pop
mov
adc
lret
sub
dec
mov
sub
cmp
pushf
cmp
dec
cli
dec
hlt
mov
cmp
std
decb
outsl
out
dec
push
or
repnz
das
or
and
out
cmp
decl
test
int
sbb
mov
or
das
and
incb
imul
cmc
jle
pop
fdivs
ds
push
dec
popf
mov
cmp
push
add
inc
cli
int
sbb
push
scas
jo
jp
clc
aas
outsl
dec
sub
adc
jbe
ljmp
ss
repnz
cmpsb
aam
jp
mov
sqrtps
icebp
std
shrl
loope
sub
fsin
mov
ficompl
xor
or
and
repz
xor
sbb
stc
test
cwtl
sub
fistpl
dec
mov
xchg
xlat
out
xchg
xor
je
jo
xchg
je
mov
call
xchg
decb
aam
cmp
xchg
mov
inc
xor
or
push
sbbl
sbb
sahf
pop
sar
push
xlat
pop
sbb
and
bound
lea
insb
xchg
mov
popf
mov
add
inc
pop
test
cld
lds
ss
sub
inc
cmp
sar
mov
push
push
pushf
lret
push
icebp
incb
mov
popf
xor
ret
cmc
mov
jno
sbb
in
jecxz
test
rcr
jbe
mov
xchg
mov
les
pop
sbb
daa
adc
sbb
cmp
xor
mov
inc
lods
xchg
jp
adc
mov
adc
dec
mov
rcrl
pop
adc
mov
stc
jmp
lods
int
in
sti
incb
std
inc
and
decb
test
push
mov
je
or
stos
cmp
pop
rcll
fisubs
push
stc
testl
insl
scas
xchg
pop
inc
pop
movsb
or
mov
sub
push
and
int
pop
hlt
jae
jnp
mov
mov
adc
inc
inc
mov
iret
das
repnz
mov
fsin
xchg
test
bnd
mov
decb
rclb
or
ss
shl
adc
or
jg
jo
sti
scas
jae
pusha
lahf
cmc
in
mov
fdiv
mov
push
popa
adc
fs
inc
push
cmp
fwait
inc
jge
sar
pushl
cmp
test
xchg
jns
or
shrb
decb
adc
std
cmp
shll
lcall
xchg
xchg
insb
xchg
mov
addr16
push
ljmp
aad
mov
fwait
ret
add
mov
idiv
rclb
sbb
orb
outsl
xor
cmp
dec
mov
lcall
scas
or
dec
mov
pop
scas
push
aas
out
out
aas
ret
cmp
sbb
inc
xlat
sub
push
dec
mov
fdivl
mov
sbb
push
incb
inc
dec
jp
std
dec
cs
cwtl
xor
adc
insl
mov
jbe
mov
pop
pop
dec
jle
cltd
jne
clc
stos
icebp
push
icebp
fldl
or
mov
xor
test
mov
sarb
rorl
bound
inc
pop
inc
sbb
fmulp
push
push
mov
shrl
clc
or
call
popl
push
lds
aaa
jo
cmc
and
aad
pop
gs
sub
pop
lods
neg
popa
dec
cs
sbb
dec
sbb
divb
sbb
outsb
xchg
decb
arpl
cmp
xchg
cmp
idiv
es
sub
adc
push
dec
js
mov
dec
mov
int
mov
xor
fistpll
sar
leave
aaa
dec
lods
pop
stos
je
mov
xchg
incb
cltd
cmp
mov
shrl
mov
les
sub
and
in
outsl
orb
incb
in
test
add
incb
pop
xor
ret
pusha
lahf
jmp
mov
fisttpl
pop
mov
dec
mov
fisubrs
xchg
jns
aas
inc
mov
in
push
into
pop
sarl
fwait
adc
aam
insl
cmc
xor
pop
popf
push
dec
mov
inc
movsbl
mov
in
add
mov
int3
hlt
sbb
add
cmp
or
mov
fsubs
das
jl
cmpsl
lds
adc
out
dec
pop
test
daa
mov
lods
mov
std
mov
sub
ljmp
push
inc
mov
xchg
in
aam
repnz
loope
mov
push
mov
push
cli
push
icebp
imul
pusha
lahf
jno
jae
add
mov
sbb
jle
and
inc
mov
stc
int3
dec
mov
es
jecxz
sti
incb
and
push
lahf
into
popa
pushf
mov
xchg
xchg
bound
xchg
xchg
stos
push
stc
cs
pusha
lahf
decb
out
cmp
out
sar
sbb
movsl
push
ljmp
xchg
cmpsb
idiv
xor
pop
xchg
imul
xchg
mov
mov
cmpsb
shll
jmp
push
cli
add
jmp
xlat
mov
and
leave
cmpsb
testl
jb
or
icebp
jmp
mov
decb
mov
push
movsb
pushf
scas
inc
lret
inc
mov
and
lods
push
mov
mov
mov
dec
fs
cmp
adc
idiv
gs
out
addb
xchg
out
sub
cmp
or
cmp
test
xchg
pop
out
lret
jmp
je
lahf
dec
mov
aam
cmp
cmpsb
test
xchg
js
and
inc
int3
loopne
xor
cmc
pop
cmp
lock
push
jp
pop
cmp
push
stc
sbb
sbb
lret
jp
daa
jns
xor
cwtl
xchg
mov
insb
xchg
xchg
stc
xor
mov
mov
insl
xchg
imul
and
incb
sub
push
dec
loope
fs
inc
sbb
outsl
cwtl
pop
pop
insl
add
cmpsl
cmp
addr16
lea
shr
ds
xchg
xor
pop
shl
gs
mov
ret
test
sbb
mov
sub
mov
xchg
adc
addb
cmp
std
sbb
rorl
seto
jl
xchg
pop
lds
mov
addr16
gs
fisubl
imul
lcall
icebp
incb
xchg
subl
cmp
call
xchg
loop
sub
and
jbe
mov
xchg
repz
mov
call
mov
push
inc
mov
shlb
push
cmp
mov
mov
and
decb
clc
sbb
xchg
lock
sarb
sub
stc
js
out
cs
out
test
movl
out
mov
mov
leave
sbb
dec
neg
sub
mov
pop
sbb
sti
decb
loopne
and
xchg
outsl
xlat
cmp
pop
int
repz
inc
mov
sbb
mov
pushf
call
into
xchg
sbb
insb
xchg
popa
inc
mov
incb
pop
scas
adc
and
js
adc
inc
fdivl
icebp
daa
cs
mov
dec
rcr
dec
cltd
mov
fwait
gs
rclb
jb
push
icebp
fwait
subl
mov
in
ljmp
add
pop
xchg
mov
mov
enter
cs
and
test
mov
icebp
xchg
nop
lds
mov
clc
shl
test
flds
mov
mov
sub
xlat
addr16
popf
cwtl
ss
ret
push
stc
sub
popa
push
cld
push
sbb
pop
shll
in
xchg
cld
pop
ret
pusha
lahf
mov
fsubs
mov
ss
into
xor
xlat
decb
inc
aam
xchg
mov
ljmp
jne
cld
and
inc
add
incb
incb
mov
pushf
cmpsl
js
icebp
pop
in
sbb
mov
fstps
fcmovnu
into
nop
or
pop
fsincos
mov
sub
mov
sbb
icebp
incb
repz
adc
adc
xor
fadds
stc
inc
lock
xchg
mov
sar
xor
cltd
adc
lcall
xchg
mov
mov
mov
iret
push
stos
aas
mov
sar
adc
pop
insb
xchg
mov
adc
xor
cmp
sbb
ljmp
gs
jno
sti
imul
jae
repz
jl
mov
and
aad
in
mov
insl
cwtd
addr16
mov
mov
dec
mov
jmp
inc
sbb
dec
mov
mov
or
cmp
pop
pop
lret
cmp
lods
fcmovu
lahf
arpl
pop
icebp
sub
mov
sub
incb
fbstp
insb
xchg
js
mov
in
in
mov
jg
outsb
xchg
push
insl
popf
inc
mov
je
out
and
dec
sub
dec
xor
out
fistpl
xor
jl
and
ljmp
jg
xor
mov
xlat
adc
xlat
ss
incb
xor
mov
jp
dec
je
xchg
fcmovu
or
jno
out
xchg
out
shrl
push
incb
mov
add
incb
mov
pusha
lahf
decb
mov
jecxz
mov
push
test
push
sbb
je
arpl
dec
ss
mov
xlat
jmp
sbb
sub
dec
dec
mov
movsb
subb
mov
cmp
out
outsl
mov
jae
adc
sub
incb
jns
inc
in
ja
push
xchg
bound
cmp
or
jge
xor
int3
lods
and
incb
sbb
and
neg
pop
add
dec
adc
pop
xchg
cmp
std
mov
and
jl
cli
into
dec
mov
jo
ret
mov
movsb
mov
jnp
jns
xchg
mov
push
rcrl
js
xchg
jg
jns
cld
xchg
fincstp
clc
xchg
out
pop
xor
mov
xor
cmp
repz
xor
das
jns
ret
or
incb
imul
pop
into
ds
aad
cwtd
jne
or
loope
cli
pop
xor
push
icebp
sub
adc
inc
mov
les
jge
lods
lret
idiv
push
stc
cmp
icebp
jg
cmp
repnz
xchg
jnp
vphaddudq
cmp
and
imul
fwait
lock
pop
sub
incb
out
add
out
fwait
and
push
sarb
add
inc
dec
mov
mov
sar
daa
jne
sbb
pop
inc
mov
xor
idiv
pop
xchg
xchg
xchg
add
push
arpl
aad
pop
mov
fmulp
ljmp
fcomip
loopne
jp
sar
add
push
or
xchg
mov
cmc
les
cmpsl
insl
and
mov
test
xor
sti
je
fildll
out
mov
and
into
insb
xchg
dec
fistpll
lahf
jmp
and
neg
fcmovnbe
in
push
imul
cmp
xchg
add
add
xchg
add
scas
adc
sbb
arpl
arpl
inc
jmp
lock
jbe
repz
adc
xchg
stos
push
pushf
inc
mov
adc
push
push
popf
das
scas
jb
frstor
and
scas
insb
xchg
outsb
xchg
inc
mov
dec
mov
or
decb
pushf
and
loopne
push
lea
pop
lock
lods
hlt
stos
pop
ror
cltd
jg
fdivl
stc
decb
mov
pop
gs
js
push
or
jbe
add
xor
sbb
subb
mov
mov
lret
pop
add
mov
cltd
or
sbb
in
or
jbe
pop
mov
pop
jge
es
lret
cltd
shll
inc
mov
ja
dec
mov
ficomps
mov
test
cwtd
cltd
xor
call
fcmove
xchg
cmc
mov
pop
dec
mov
lods
jb
xor
imul
and
inc
inc
mov
jl
xor
out
mov
pop
cltd
mov
push
incb
decb
icebp
decb
sbb
jecxz
and
pop
outsb
xchg
call
lcall
jb
dec
subl
mov
addr16
sbb
push
stc
jle
leave
in
stc
daa
gs
roll
sub
movsl
fistl
mov
cltd
and
fwait
xor
and
dec
xchg
mov
inc
mov
sar
xlat
inc
mov
mov
fwait
iret
mov
xor
inc
cltd
fnstsw
repz
popf
pop
in
cs
nop
jmp
pop
fcompl
push
push
fldcw
xlat
dec
inc
mov
popf
cmp
jp
lahf
ror
jb
in
test
add
or
dec
mov
int3
shll
cwtd
push
sti
mov
inc
mov
cmp
cmp
ljmp
sbb
push
fimuls
divl
cwtd
cmp
test
cwtd
out
xchg
aaa
cwtd
decb
cltd
repnz
xchg
sarl
xor
and
mov
decb
add
int3
jne
insl
lahf
idiv
sub
sbb
or
daa
push
rol
dec
add
xor
decb
jne
xor
mov
mov
lods
ror
roll
pop
pop
or
adc
incb
pop
jne
les
fsts
lock
rolb
aas
pop
in
cmp
arpl
push
jmp
loope
imul
pop
js
jmp
fldt
sti
push
aam
push
imul
stc
dec
mov
cmp
push
mov
ja
jno
push
divb
xchg
incb
mov
jp
mov
call
dec
or
lret
mov
dec
jno
shr
into
stos
subl
xchg
rcrb
mov
dec
mov
dec
fildl
inc
dec
mov
xchg
cltd
mov
lods
dec
mov
adc
aas
jne
jl
mov
int3
mov
sub
push
cmp
rorl
dec
add
mov
cmc
bound
jge
or
fsubl
pop
sbb
es
push
lods
sbb
or
ds
sub
jno
inc
mov
sbb
imul
mov
iret
pop
pop
sbb
adc
sub
es
jnp
dec
mov
inc
mov
and
mov
bound
adc
push
mov
lret
test
dec
pop
inc
jns
xchg
cs
xor
pushf
addr16
mov
inc
lcall
xchg
inc
mov
push
mov
cmp
movl
or
int
test
insb
xchg
decb
scas
pop
addr16
adc
cmp
cwtl
jle
mov
mov
adc
jmp
lret
jp
mov
mov
mov
and
js
icebp
adc
jae
xor
pop
lock
mov
cld
sub
insl
xor
lock
icebp
rcl
rcrl
jle
jns
xor
stos
sbb
adc
repz
xor
popf
divb
insb
xchg
fsubl
cwtd
ds
add
sar
pop
clc
loop
adc
loop
pop
xchg
arpl
xor
fisubrs
out
aaa
call
adc
loop
mov
dec
test
pop
ja
mov
mov
notl
adc
xchg
sub
je
sar
aad
ljmp
dec
inc
mov
das
popa
out
pusha
lahf
jne
xchg
std
fdivrp
jmp
pandn
sbb
mov
xlat
bound
hlt
test
stc
sbb
mov
push
xor
cmp
inc
mov
fsin
mov
cltd
loope
jmp
cmpsb
pop
cmp
mov
cs
or
loop
ret
and
xor
push
sbb
out
outsb
xchg
decb
idiv
test
sub
cmpsl
nop
scas
mov
shr
movsb
dec
mov
pop
sub
incb
std
and
das
scas
mov
mov
adc
mov
or
dec
inc
mov
ljmp
xchg
pop
popf
lcall
gs
loope
fwait
push
test
idiv
jg
xchg
daa
xchg
mov
cwtd
mov
les
cs
test
adc
cmpl
xchg
pop
add
decb
icebp
neg
cs
enter
mov
mov
sar
enter
mov
cwtd
sbb
adc
xchg
cltd
ja
stc
rolb
pop
mov
push
and
incb
fwait
setae
outsl
sub
decb
cmc
decb
mov
mov
inc
mov
push
js
push
shl
inc
xlat
js
mov
repz
jle
add
xchg
popf
cmp
sub
adc
shll
sub
dec
push
loopne
outsl
jns
into
dec
scas
aam
jnp
pop
and
test
dec
xchg
and
jns
mov
and
rclb
loope
adc
call
icebp
xchg
mov
arpl
loop
lcall
aad
jp
mov
jecxz
add
jg
cmpsl
rol
mov
mov
mov
jmp
inc
mov
jno
cwtd
incb
decb
adc
sar
jg
es
stos
jmp
cwtl
aam
popf
cmp
repz
sarl
or
or
mov
adc
jmp
sar
clc
nop
push
sub
idiv
mov
arpl
insb
xchg
cmp
xchg
lahf
ljmp
inc
mov
in
je
jg
and
jecxz
mov
cwtd
jne
and
das
xchg
mov
shrl
dec
dec
loope
mov
scas
jp
gs
loope
outsl
out
fiadds
stc
out
in
fdiv
popa
jecxz
lods
ljmp
jle
add
shl
add
leave
push
cmp
sbb
repz
out
jp
in
pop
frstor
cltd
jg
sbb
mov
cwtd
and
shl
loop
jae
sbb
or
fdivr
dec
mov
push
or
decb
push
and
incb
std
shll
cmc
cld
pop
mov
push
icebp
decb
in
clc
inc
out
aam
mov
xchg
gs
mov
addr16
jno
insl
sbb
scas
rcrb
dec
mov
insb
xchg
xchg
cmp
jle
lock
pushf
aaa
ret
insb
xchg
sahf
pop
mov
ret
mov
out
leave
mov
dec
dec
mov
ljmp
inc
mov
leave
push
sub
xor
or
pushf
xchg
jbe
ror
jp
mov
mov
cmp
or
ficomps
jns
clc
xchg
lahf
jmp
mov
idivl
idiv
mov
es
or
incb
into
sub
outsl
push
sbb
pop
gs
pop
std
aaa
add
cmpsl
in
xchg
lods
int
popf
cmpsb
mov
ss
xchg
insb
xchg
incb
jmp
xor
mov
push
fisubl
cmp
lret
mov
decb
lea
shll
loope
es
or
push
outsb
xchg
decb
push
icebp
arpl
mov
mov
or
dec
fimull
icebp
jg
rol
mov
out
daa
cmp
jns
pop
jmp
icebp
lret
inc
mov
mov
push
jb
sti
pushf
das
out
scas
mov
xorl
mov
jmp
push
mov
imul
bound
push
decl
adc
mov
mov
std
xchg
mov
inc
mov
push
mov
faddl
dec
adc
shrl
cwtl
mov
mov
sub
inc
mov
add
dec
aad
dec
dec
push
lret
repz
pop
mov
fcomip
shll
test
xchg
add
lcall
sti
decb
sub
xchg
jo
or
xor
aas
das
jmp
inc
add
incb
xchg
push
icebp
cmpsl
addr16
mull
sbb
std
xchg
inc
xor
mov
out
xor
inc
test
loope
movb
decb
rolb
xor
mov
nop
gs
lret
in
popf
xchg
repnz
loop
sbb
mov
leave
popf
add
nop
pop
mov
mov
or
mov
test
je
icebp
iret
int
lahf
cmpsl
cmpsb
out
sub
push
adc
mov
pop
lret
xor
push
jae
pop
adc
jmp
ret
push
mov
push
mov
scas
nop
pop
std
xchg
nop
aas
sub
std
push
scas
lods
adc
shll
fcom
lods
rcrl
fwait
mov
sub
pop
add
pop
pop
adc
jne
cltd
jge
xor
inc
inc
mov
fs
icebp
pushf
scas
in
cmc
shll
jo
sti
pop
mov
pushf
pushf
imul
nop
dec
push
xchg
imul
dec
mov
out
shl
mov
idiv
pop
shlb
clc
xlat
mov
outsl
into
out
ja
stc
sahf
outsb
xchg
xchg
add
idiv
imul
int
cmp
repnz
mov
xor
in
ljmp
fsubl
mov
in
mov
movl
xchg
xlat
mov
rolb
stc
decb
sub
adc
daa
sbb
cmp
aas
out
mov
and
lods
cwtd
ljmp
in
and
cmpsb
dec
mov
call
mov
jle
inc
mov
or
lcall
clc
stos
insb
xchg
cli
xor
icebp
xor
movsl
test
mov
add
push
ss
std
add
je
dec
jmp
lods
jae
xlat
push
jo
add
xchg
push
inc
mov
mov
decb
mov
inc
dec
pushf
xchg
mov
fcmovnb
mov
dec
addl
loop
jp
mov
fcoml
repz
ret
push
adc
frstor
push
icebp
and
push
test
pop
addr16
xor
add
push
int3
lret
or
and
mov
mov
cwtd
decb
xor
or
bound
std
mov
xchg
cmc
mov
dec
xor
outsl
outsl
rcrb
mov
xlat
jmp
loop
daa
stc
dec
mov
ds
cmp
jmp
adc
sti
add
stc
decb
push
ljmp
mov
xchg
insl
cmpsb
xor
sbb
mov
in
iret
jnp
es
ss
and
pop
sbb
or
popa
popa
xor
loop
xchg
push
adcl
inc
mov
or
decb
push
repz
in
test
and
push
jp
sub
sbb
adc
sar
push
cltd
sarl
mov
xchg
adc
add
ret
jmp
call
scas
add
xor
pusha
lahf
incb
outsl
flds
incb
repz
mov
das
cs
outsb
xchg
and
cmc
push
and
pop
adc
loope
dec
imul
repnz
fsub
out
ljmp
push
mov
inc
mov
push
mov
cmp
sbb
push
dec
insl
loopne
ds
xor
adc
test
icebp
pop
cwtd
aam
dec
inc
mov
jbe
add
es
cs
mov
jns
cmc
decb
mov
xchg
fisubl
mov
fsin
nop
jns
xchg
fadd
setnp
pop
or
stos
popf
sub
stc
adc
mov
sar
in
out
xlat
decb
push
inc
mov
decb
xlat
sbb
xchg
incb
in
dec
mov
sbb
test
cli
fdivrs
lods
icebp
pop
shl
das
fbld
mov
fisttpll
decb
test
hlt
ljmp
stc
sub
push
xchg
cltd
hlt
int3
movsb
adc
stc
fistps
aad
mov
jno
mov
int3
adc
adc
mov
push
sti
jnp
xchg
out
in
shrl
cmp
gs
pop
lea
fwait
jb
and
fdivr
mov
inc
and
stos
mov
decb
mov
int3
dec
aad
fnsave
push
hlt
xlat
push
cmpsb
arpl
push
mov
hlt
mov
decb
mov
mov
sub
aad
xorb
xor
bound
mov
mov
out
cmc
outsl
cs
out
push
icebp
push
dec
jecxz
or
push
cmp
rcl
fsin
mov
pop
add
out
testb
and
mov
test
mov
insb
xchg
pop
or
incb
aad
cmpsl
xchg
mov
sti
xor
fdivr
inc
mov
jecxz
jae
sub
incb
incb
stc
and
pop
enter
ljmp
jo
ret
jmp
mov
and
mov
ja
gs
push
fadds
loop
outsl
sub
incb
inc
sbb
aas
cmp
repnz
lea
mov
pop
lcall
and
lret
inc
push
fidivs
adc
mov
addb
push
xchg
rolb
je
ljmp
sahf
jb
push
jmp
outsl
arpl
pop
or
xchg
es
ret
or
push
mov
mov
in
push
mov
fsin
mov
xchg
in
push
stc
sahf
jae
pop
aaa
int
sub
push
js
call
inc
mov
std
les
icebp
hlt
cmp
xchg
cmpsl
dec
jne
pop
lret
cmp
bound
or
pop
xchg
mov
ja
fstpt
xchg
aad
loopne
cmc
pop
imull
lods
sbb
je
outsb
xchg
fdivrl
aam
fsin
pop
repnz
jle
adc
cmp
and
pop
sti
outsb
xchg
sub
push
mov
add
pop
xchg
adc
pop
or
xor
sub
push
fwait
cltd
sti
push
arpl
stos
push
cwtl
dec
sbb
sbb
ja
std
lods
push
icebp
xor
decb
cmc
decb
arpl
mov
xchg
inc
outsb
xchg
jecxz
ds
xchg
nop
mov
mov
mov
xor
pop
dec
fs
jecxz
push
mov
xor
xor
adc
xor
outsl
mov
scas
rorl
lock
cs
bnd
mov
jns
jg
loopne
std
fs
pop
ljmp
or
dec
aam
lcall
cmpsb
sub
incb
std
ds
cmpsb
sbb
push
push
hlt
cmp
decb
test
add
incb
adc
in
sbb
mov
into
shll
jnp
je
mov
aad
enter
outsb
xchg
nop
jg
in
xchg
inc
mov
mov
push
sbb
mov
xchg
mov
or
incb
mov
out
inc
mov
mov
sar
xchg
and
dec
add
incb
mov
sarb
jl
cmp
push
push
ja
std
scas
in
add
cmp
jp
cwtd
popf
adcl
push
cmp
icebp
cmp
jle
fistps
fcompl
mov
fsin
or
std
add
test
push
cmc
mov
pop
jmp
mov
xchg
clc
rclb
bound
lea
lock
xor
in
ficoms
andb
sub
bound
testl
xchg
imul
sub
decb
cmp
mov
clc
add
mov
cltd
pop
js
xchg
bound
incb
jbe
outsb
xchg
aam
out
mov
push
jle
sub
lods
mov
inc
mov
cwtd
incb
cmp
popf
mov
xchg
and
imul
idiv
addr16
sbb
iret
mov
int
test
aam
jp
xlat
push
cmp
stc
std
fwait
cmp
aam
outsb
xchg
dec
rcr
push
stc
jne
popa
insb
xchg
sbb
dec
mov
add
fsin
jae
cs
cwtd
inc
test
push
icebp
xor
std
fdivl
xchg
aad
imul
cltd
xchg
bound
test
mov
jae
xchg
pop
shlb
lea
push
xlat
lret
sbb
xchg
mov
cld
xlat
aas
xor
mov
fisttpll
repz
mov
cmpb
cmp
inc
test
cwtl
ss
xchg
adc
mov
xchg
jae
mov
es
xlat
xor
mov
mov
jmp
jecxz
xchg
mov
xor
fadd
push
push
icebp
out
aam
and
mov
adc
mov
pop
mov
or
cli
cltd
je
cwtd
push
outsl
mov
mov
in
imul
testl
mov
xlat
inc
mov
cmpsb
icebp
jge
xchg
out
fwait
sbb
pop
adc
pop
sti
jnp
stos
movsl
cmp
inc
mov
xor
fdivrp
nop
mov
sbbb
cmp
push
dec
inc
sub
aas
rclb
mov
out
je
push
jns
gs
adc
repz
ljmp
mov
cltd
dec
shrl
std
cli
adc
pusha
lahf
scas
rcr
xor
imul
aad
jmp
out
out
xchg
xchg
jb
mov
rcrl
sbb
jae
stos
arpl
inc
inc
mov
shlb
pusha
lahf
incb
inc
fidivrl
popf
sbb
out
loop
pop
and
dec
push
testb
stos
sbb
mov
frstor
adc
sbb
fsin
cmp
jae
dec
in
push
jecxz
imul
lcall
loope
dec
mov
mov
fists
fisubl
cltd
sbb
incl
xchg
fldt
sti
jo
cmpsl
dec
test
std
xor
std
xor
or
push
push
jl
sbb
cs
dec
mov
dec
into
mov
fldt
ljmp
in
add
scas
mov
ss
in
adc
pop
cld
iret
jecxz
xor
fdivrl
fs
decb
call
pop
dec
mov
jmp
pushf
dec
mov
mov
clc
push
icebp
push
push
fbstp
dec
je
mov
fisubl
std
add
sbb
scas
pop
mov
mov
pop
jnp
arpl
sbb
lods
cmp
fidivrl
inc
ljmp
mov
pop
dec
sbb
push
movsb
fcomip
packssdw
loopw
stos
jne
sar
movsl
cmp
fisttpll
jno
mov
jle
xor
stos
pusha
lahf
decb
xchg
cli
mov
mov
lret
push
sbb
jns
jne
mov
and
stos
jnp
daa
sbb
arpl
in
xor
jno
dec
aad
mov
push
inc
les
imul
dec
mov
fcomps
inc
lahf
out
mov
mov
sahf
sub
and
xlat
mov
orl
cmp
mov
push
inc
ja
dec
mov
inc
call
lea
xlat
fistl
mov
icebp
incb
pop
mov
sahf
mov
sbb
aas
or
incb
std
decb
push
sahf
test
and
decb
cmc
xor
sub
fsubr
jmp
jg
dec
mov
loope
scas
cmp
ficoms
jns
adc
incb
inc
mov
idiv
gs
mov
or
pop
popa
imul
mov
sti
jg
inc
mov
leave
dec
push
test
mov
xchg
pop
subb
in
inc
mov
imul
dec
imul
in
inc
add
insl
dec
mov
pop
andl
stc
ja
loope
add
rorl
xchg
loop
cmpsl
repz
mov
decb
ss
movsb
fucompp
test
loope
repz
mov
sub
addr16
js
stc
dec
out
jnp
gs
push
sbb
xor
loope
adc
pop
ficomps
mov
bound
push
and
mov
jno
fsub
imul
ficompl
sar
cmp
adc
incb
mov
pushf
inc
add
testl
and
scas
adc
leave
popf
mov
mov
xchg
fistl
pop
das
mov
mov
hlt
mov
push
stc
decb
dec
mov
xchg
pop
xchg
imul
rorb
pop
mov
nop
dec
mov
lods
push
mov
stos
pushf
and
jb
push
out
lock
sti
incb
decb
fdiv
mov
sti
fldenv
cltd
outsb
xchg
sbb
icebp
xchg
dec
mov
pop
jle
sbb
fstps
mov
push
cmpl
pop
mov
sbb
and
decb
stc
je
jmp
cmp
add
in
jg
jmp
lahf
jnp
cmp
fst
adc
sbb
mov
mov
je
xchg
call
xchg
mov
and
ss
cmp
in
sbb
ret
insb
xchg
outsb
xchg
jo
mov
mov
push
dec
push
in
jle
dec
mov
inc
loopne
add
rorb
jbe
sbb
adc
push
sbb
adcb
popf
jne
mov
mov
jecxz
fwait
es
fimull
fxch
rorl
test
insb
xchg
inc
or
int3
std
cmp
lahf
and
adc
fmulp
jno
in
std
cld
les
lods
sub
adc
es
enter
mov
cmp
je
adc
jne
and
pop
jp
mov
pop
cmp
adc
in
ret
xchg
push
inc
mov
pop
adc
sbb
or
outsl
xchg
orl
incb
into
insb
xchg
cmp
fcompl
xor
stc
bound
or
mov
inc
mov
ja
fidivrs
loopne
sar
mov
sbb
jnp
xor
pop
cmp
adc
je
repz
scas
movb
push
and
xlat
inc
icebp
iret
stc
arpl
inc
mov
and
std
mov
out
mov
dec
mov
out
and
sub
scas
adc
in
test
dec
xchg
lcall
out
ret
clc
mov
sar
inc
mov
sbb
repnz
mov
rcrb
sub
jp
xchg
cmp
dec
nop
cmp
mov
xor
fdiv
mul
and
pop
dec
push
inc
mov
mov
mov
outsb
xchg
dec
mov
loope
sbb
fbstp
pop
jno
imul
xchg
mov
pop
fwait
or
mov
jmp
je
idiv
cs
pushf
cmp
hlt
mov
rcrl
fisubrl
mov
iret
cmp
mov
inc
mov
repz
mov
jbe
fstpl
popf
aad
std
ja
stc
and
cmp
inc
mov
push
jno
sbb
pop
mov
rorl
jge
xor
add
insl
and
xor
in
mov
xor
outsl
and
ret
jo
xor
dec
mov
inc
cmp
movsb
leave
insb
xchg
roll
jns
stos
shll
pop
pop
pop
push
int3
es
movsl
add
jge
mov
popa
pop
lea
mov
incb
incb
xlat
pop
jne
ficomps
add
jg
xchg
jae
xchg
sub
push
sbb
lahf
adc
cli
dec
mov
and
ljmp
jmp
decb
insb
xchg
decb
andl
lcall
fwait
pop
fwait
popf
mov
aaa
cmp
xchg
and
imull
mov
xchg
popf
xchg
aam
imul
push
notl
sub
adc
jp
sub
rep
add
decb
idiv
test
and
incb
dec
mov
test
es
inc
cli
jne
repnz
mov
popf
xchg
jmp
stc
pop
andl
push
pop
das
inc
mov
repz
mov
lock
dec
adc
js
mov
mov
fisubrl
sahf
xchg
mov
adc
outsb
xchg
clc
icebp
push
ret
add
sub
icebp
sbb
push
xchg
dec
int3
sbb
or
aad
xor
cmpsb
xchg
sahf
mov
cmp
popf
dec
aaa
add
jecxz
and
xchg
gs
pushf
test
sbb
pop
insl
mov
outsl
fcomip
orb
mov
es
sub
shl
pop
pop
pop
cmp
xchg
rep
mov
fsin
fldenv
cld
mov
inc
mov
imul
xchg
push
jae
mov
stc
adc
stc
fistpll
push
test
xchg
leave
stos
push
mov
mov
ja
std
adc
xorb
jae
inc
mov
xor
sti
cmpsb
fs
decb
jns
xchg
flds
stc
xchg
mov
inc
sub
and
incb
andb
jl
cmc
xor
xlat
sahf
jb
jb
aas
push
dec
mov
stos
jle
pop
hlt
or
dec
push
add
fwait
lcall
sub
inc
mov
jns
aam
lahf
mov
movsb
or
jmp
sbb
outsb
xchg
cmc
sub
dec
iret
jle
xchg
jnp
pop
gs
dec
mov
fwait
push
bound
in
test
sbb
test
dec
mov
insl
pop
dec
pop
sub
fcoms
in
mov
sub
mov
pop
lds
test
mov
cli
std
in
mov
mov
roll
jg
aam
sub
mov
jge
mov
popa
mov
jo
or
jmp
sti
fwait
dec
mov
push
int3
aam
pushf
lods
push
incb
mov
shll
and
in
mov
loopne
add
mov
mov
push
shll
mov
ficomps
pushf
mov
and
out
mov
loop
stc
in
fsubl
outsl
maskmovq
mov
mov
mov
into
lds
xchg
xor
sbbb
jno
inc
mov
es
dec
pop
dec
dec
mov
or
gs
jb
sub
fnstsw
cmp
jl
lret
mov
sub
inc
add
shrb
imul
add
inc
mov
push
stc
pop
int
icebp
mov
jecxz
xchg
daa
gs
mov
mov
cli
fs
jmp
pop
stc
inc
mov
mov
xchg
dec
les
and
je
cmc
pop
lret
lcall
push
lahf
cli
aam
inc
mov
fdivrs
mov
xchg
in
or
push
incb
xchg
cld
enter
insb
xchg
mov
mov
outsl
jecxz
inc
mov
mul
pushl
pop
pop
icebp
mov
std
mov
sbb
sbb
cs
dec
mov
jp
pop
pop
mov
outsl
movsb
scas
popf
mov
iret
or
aas
xor
jb
icebp
pusha
lahf
incb
std
dec
pop
sbbl
xorl
imul
add
shr
and
sbb
test
pop
mov
mov
sub
and
stc
xchg
mov
les
or
mov
fsin
xchg
call
sub
sbb
push
xlat
aas
sbb
cmp
or
push
xchg
pop
fwait
pop
out
jp
popa
inc
mov
popf
inc
stos
or
mov
jle
sar
xchg
sbb
dec
mov
inc
mov
sbb
sub
push
mov
pop
movsl
jecxz
xchg
jl
fwait
xchg
sti
daa
mov
icebp
cli
test
mov
push
rcll
fld
pop
inc
mov
pushf
jle
sbb
nop
inc
mov
das
lret
scas
xor
xchg
cld
and
out
dec
incl
mov
xor
push
and
push
icebp
xchg
push
pop
std
inc
add
flds
mov
adc
outsl
stos
pop
xchg
sti
lret
jne
leave
rcrb
sub
xlat
sub
incb
dec
sbb
ljmp
mov
jns
mov
inc
mov
leave
shrl
mov
dec
push
rcr
fsts
outsb
xchg
rcl
adc
in
scas
add
mov
arpl
pop
cs
pop
in
push
orb
mov
je
test
clc
test
lock
shrl
iret
aam
ror
imul
in
lahf
or
stc
inc
mov
sub
test
xorl
popf
popf
arpl
movsl
out
pop
repz
and
decb
loope
fs
insl
xchg
in
dec
mov
stc
je
pop
xchg
daa
and
xor
sti
pop
inc
mov
cmc
cmp
ss
pop
jmp
movsb
ja
repnz
loopne
mov
dec
mov
icebp
mov
add
xchg
enter
mov
fs
xchg
jle
cmc
cltd
jb
jp
pushf
sahf
dec
jecxz
loop
fsin
mov
hlt
adc
cmp
and
decb
idiv
cmp
mov
push
xor
out
mov
mov
dec
fwait
xchg
jae
xor
jl
ret
paddw
add
dec
fwait
outsb
xchg
es
adc
scas
or
movsl
cmpsl
mov
inc
mov
jnp
adc
xchg
pop
xor
add
jg
inc
call
pop
loop
xchg
decb
mov
rolb
jge
les
incb
incb
jae
or
in
gs
int3
idivl
push
xchg
cmp
fildl
sub
inc
cli
or
mov
xchg
decb
in
xchg
mov
dec
mov
sub
add
gs
adc
pop
addr16
decl
popa
mov
loope
sbb
rolb
in
cmp
push
adc
out
int3
es
push
jo
fsubp
xlat
cli
mov
xor
int3
outsl
add
push
lds
sbb
xchg
jle
xchg
xchg
cmp
sahf
imul
fstps
inc
cltd
and
incb
bound
fbstp
xor
or
fwait
push
dec
mov
mov
jg
xchg
mov
mov
shr
jno
fstps
ljmp
and
cmp
adc
ljmp
hlt
xchg
cwtd
cmp
cmc
decb
pushf
aam
dec
mov
sbb
and
adc
pop
cltd
xor
adc
in
xor
cld
pop
xlat
repz
stos
ficompl
adc
nop
and
mov
mov
pop
add
cmc
mov
sbb
xor
and
mov
gs
fsubp
xchg
cltd
insl
mov
sbb
mov
sti
push
insl
mov
sub
inc
mov
shrl
xor
loope
jl
dec
mov
push
and
popa
xchg
or
sar
jg
adc
stos
lods
pop
aam
fldl
pushf
jae
sar
push
test
leave
shll
xchg
decl
jge
pop
mov
insl
fwait
and
cwtl
insb
xchg
cs
adc
jbe
nop
bound
fidivrs
stos
mov
xor
xchg
fcmovu
cmp
hlt
in
cmp
insl
xor
mov
sub
iret
stc
push
mov
or
out
mov
cmp
cmpb
inc
push
jae
jo
xchg
cs
dec
mov
mov
iret
insb
xchg
sbb
sbb
int3
aad
xchg
and
push
push
lahf
leave
mov
ljmp
decb
sbb
js
jmp
adc
jge
jmp
mov
in
xlat
nop
test
sbb
fnsave
int
lock
out
pop
xor
lcall
xor
pop
or
pop
jle
mov
jbe
mov
ljmp
mov
or
inc
mov
dec
cmc
negl
stos
aad
fs
jle
aaa
mov
dec
mov
mov
and
xchg
insl
pushf
mov
xlat
incb
push
in
sbb
fsin
inc
mov
movsb
repz
lods
adc
inc
adc
aaa
insl
faddl
outsb
xchg
mov
mov
cmp
mov
cmp
idiv
leave
sbb
repz
mov
sub
andl
jg
fsin
imul
insl
or
xchg
addr16
ficoms
mov
mov
sub
sbb
cmp
cltd
sbb
cs
call
dec
mov
pop
push
aam
enter
mov
mov
mov
fs
xor
mov
xchg
jge
jge
pop
sub
idiv
mov
pop
jl
sbb
sub
cmp
cmpsb
dec
pop
imul
sbb
stc
call
in
test
xor
mov
lea
add
jne
rorl
sbb
push
stc
decb
jbe
mov
mov
push
inc
xchg
outsb
xchg
dec
push
mov
ffreep
xor
cli
es
cwtl
xor
repz
xor
push
pop
mov
sti
push
stc
incb
incb
imul
push
xor
repz
daa
clc
or
incb
int
popf
outsl
xchg
jmp
or
decb
cmc
js
jge
cmp
lock
aad
push
aad
jno
mov
xchg
sbb
mov
mov
imul
rorl
fmull
decb
sub
mov
push
xor
fists
xchg
fsts
shrl
xlat
lcall
or
decb
cmp
lahf
xchg
jge
cwtd
xchg
bound
nop
ret
dec
mov
jo
les
lahf
sbb
cmc
mov
push
sbb
adc
sub
adc
push
adcb
cli
lret
jg
pop
jmp
push
jecxz
mov
mov
jnp
ljmp
sub
cmp
inc
mov
lahf
incb
jge
push
mov
call
and
repnz
cmc
push
dec
outsb
xchg
cmpsl
and
decb
idiv
and
pop
scas
rcll
jnp
cwtl
shll
stc
aam
std
lods
lds
jmp
imul
enter
pop
pushf
out
or
fsin
daa
dec
orb
decb
cmc
xchg
inc
adc
sub
ljmp
mov
cmp
or
popa
sbb
decb
mov
outsb
xchg
addr16
inc
mov
decb
fwait
xlat
jp
xchg
jne
arpl
push
push
frstor
and
icebp
sbb
repz
adc
jnp
sbbl
lret
and
adc
add
fadds
mov
jl
adcb
adc
sbb
sbbb
mov
dec
mov
shr
dec
xor
hlt
movsl
pop
push
xchg
pop
mov
xchg
ficomps
add
addr16
push
mov
subb
ja
repz
cs
xchg
adc
in
loopne
mov
and
fmuls
xor
aad
xchg
je
cli
pop
cld
divb
push
aam
fst
sahf
mov
xor
cli
adc
out
stos
je
fiaddl
cmp
inc
mov
mov
cltd
mov
sti
mov
std
incb
sbb
mov
sbbl
adc
imul
dec
mov
js
push
ffreep
in
dec
lds
enter
decb
lock
pop
ficoml
ret
aaa
add
mov
and
in
call
mov
popf
jno
into
cmp
mov
nop
pop
sub
incb
in
std
mul
lods
dec
mov
es
movl
mov
repnz
stc
mov
mov
mov
das
mov
incb
mov
mov
arpl
mov
sbb
cmp
or
push
ret
movsl
pop
les
mov
out
dec
loop
sbb
js
rcrb
push
add
dec
mov
add
jns
adc
daa
cmpl
pop
dec
mov
enter
mov
lea
pop
iret
xchg
pop
insl
xchg
fsubl
incb
mov
adc
ljmp
jno
cli
clc
dec
mov
and
mov
inc
test
xchg
and
aaa
and
jo
inc
in
enter
sub
mov
lea
incb
clc
inc
mov
fisttpl
sub
mov
cmp
xor
sbb
addr16
nop
cmc
cmp
sbb
inc
jecxz
cwtd
ja
jbe,pt
add
cs
sub
testl
les
xor
aad
stos
inc
stos
in
inc
mov
xchg
lcall
notl
out
aad
sbb
inc
mov
pop
sub
lds
push
xchg
popa
adc
imul
insl
cwtl
aas
add
inc
sbb
sub
popf
incb
insl
mov
ret
or
jno
loop
mov
lcall
mov
stos
lds
movsl
fwait
cmp
js
cmpsl
push
xchg
mov
lcall
pop
push
push
ss
fcoml
xchg
mov
stc
xchg
cmp
push
mov
jecxz
sar
sub
incb
pop
cs
xorl
sbb
and
push
icebp
xor
inc
cwtl
pop
cmp
and
jo
cmpsb
mov
push
movsb
shr
jo
jb
cmc
xor
adc
decb
cltd
pop
das
scas
pusha
lahf
inc
pop
adc
sahf
fildl
dec
test
cmp
dec
mov
cli
xchg
das
sar
sbb
cmpxchg
enter
mov
add
daa
test
movsl
pop
cmpsb
ja
das
sbb
test
jmp
mov
cmp
cmp
sbb
gs
push
lahf
jle
pushf
cs
pop
xor
fsin
push
fsubl
or
cmp
js
jecxz
lahf
push
sub
pop
jecxz
enter
test
mov
add
sub
in
fsubr
mov
enter
les
ds
es
shlb
xlat
fcoml
pop
inc
mov
xchg
xor
lock
stc
sub
inc
mov
out
pop
jb
inc
mov
arpl
orb
incb
stos
add
incb
add
decb
decb
rcr
cmp
adc
xlat
cmp
in
sbb
push
mov
sub
decb
icebp
sub
pusha
lahf
test
bound
adc
push
lcall
cmpsb
push
lea
test
incb
stc
push
imul
scas
and
incb
xchg
in
sar
xchg
pop
int
xchg
cmp
pop
sbb
out
in
lret
mov
scas
cmp
jmp
inc
stc
pop
inc
mov
sub
mov
lret
jbe
cltd
mov
decb
insl
fstpl
popa
std
mov
xchg
aas
pusha
lahf
popf
sbb
cmc
decb
xor
rolb
jbe
ret
dec
leave
arpl
cmp
jp
adcb
and
jmp
xchg
xchg
int
cmc
iret
add
rclb
jp
push
push
in
ja
add
pusha
lahf
jecxz
into
aad
popa
or
decb
sub
fcmovu
movsb
ret
sub
jns
stos
push
movsl
push
xchg
pop
jnp
cli
lods
mov
addr16
xor
aam
cmc
popa
int
jns
into
pop
or
decb
enter
mov
ja
xlat
push
ret
xlat
mov
test
in
fisubrs
cmp
xor
mov
or
arpl
cmp
lods
add
cmpsb
int
sti
imul
mov
prefetcht1
fiadds
cwtl
scas
inc
hlt
sarb
pop
lahf
xor
cmp
pop
mov
enter
push
inc
or
cmp
jne
inc
mov
cmp
mov
xchg
ficoms
jp
cmp
cs
fdivp
rorl
inc
outsb
xchg
push
sbb
sub
sbb
or
adc
sti
push
xor
inc
mov
add
aad
hlt
fs
jl
inc
rcrl
xchg
repz
inc
pop
pop
scas
push
push
mov
inc
arpl
sti
mov
sub
lods
push
out
mov
imul
fsin
imul
aad
sahf
ret
mov
mov
push
icebp
mov
sub
mov
outsb
xchg
incb
inc
je
out
stc
incb
cltd
xor
mov
xchg
mov
jno
cmc
push
lret
xor
insl
les
adc
add
mov
adc
pop
repz
dec
test
mov
mov
sub
cmp
ss
mov
inc
fcomip
fs
xchg
lock
mov
cwtl
call
sar
movsl
adc
fidivl
mov
cmc
cmp
push
mov
jecxz
aaa
outsb
xchg
push
cmp
aaa
jge
nop
xchg
sub
popf
stc
jg
out
stos
arpl
sub
decb
stos
inc
jne
lret
repnz
in
or
mov
dec
gs
lock
decb
fbstp
jno
jne
sahf
std
jle
mov
dec
in
in
mov
sbb
xchg
lcall
mov
outsl
rcr
pop
lahf
inc
in
int
and
pop
repnz
inc
mov
js
sbb
mov
inc
add
in
cwtd
sbb
adc
xchg
out
push
shrl
repnz
arpl
ficompl
cltd
rcrl
ss
aam
add
cs
or
xchg
js
das
dec
in
int
dec
fs
incb
add
jge
std
repz
xor
imul
cltd
jecxz
pop
sbb
lds
or
insb
xchg
popa
jmp
inc
mov
into
xor
nop
sub
ss
test
dec
mov
and
scas
cwtl
rcll
decl
repz
lods
orl
aas
cmp
rolb
test
fsin
cmp
add
ja
fcomps
into
jbe
ljmp
adc
inc
mov
mov
sbbb
inc
ret
push
hlt
iret
jb
shlb
idivl
cmp
mov
icebp
fiaddl
decb
cwtd
decb
cmpsb
push
mov
les
cmpsb
or
cltd
outsb
xchg
mov
jl
daa
and
cwtl
dec
add
outsb
xchg
je
roll
aam
nop
inc
mov
sub
or
rorl
icebp
sbb
sub
decb
add
and
push
out
in
lcall
lods
mov
cld
aam
push
xchg
inc
adc
mov
jecxz
notl
push
add
aas
xor
jno
add
in
mov
pusha
lahf
mov
in
sbb
fsin
enter
xor
notl
jae
mov
test
xchg
out
adc
or
mov
sahf
call
mov
js
in
mov
stos
xor
sar
sub
sub
xor
jbe
sti
pop
dec
mov
outsl
mov
inc
mov
push
or
add
decb
or
inc
cltd
cmp
cltd
fwait
insb
xchg
testb
xchg
mov
stc
in
fisubrl
or
sti
repnz
xchg
dec
into
sqrtps
daa
jb
sar
arpl
pop
xchg
jae
lahf
ja
mov
sahf
inc
mov
mov
or
jge
and
cmpsl
jns
add
ja
jp
inc
aad
mov
dec
into
pop
repz
inc
mov
sbb
lods
into
or
test
inc
push
stos
mov
mov
dec
mov
and
es
xchg
icebp
scas
dec
xchg
mov
aaa
jmp
adc
hlt
cli
xchg
sbb
cs
xchg
cmp
xlat
dec
xchg
adc
mov
push
push
cmp
dec
push
ja
mov
out
mov
jmp
addr16
cmc
xchg
mov
fsin
lods
insb
xchg
and
push
pop
out
fwait
adc
push
stc
decb
cmc
imul
dec
jle
or
mov
cltd
sub
xor
mov
push
shll
inc
jo
scas
outsb
xchg
inc
xlat
mov
pop
lcall
pop
ljmp
lcall
cmp
pop
dec
mov
faddl
int3
inc
mov
test
call
sarl
dec
mov
jl
jo
enter
xor
scas
adc
inc
mov
jmp
inc
mov
shlb
cs
fadds
sbb
cmp
fdivrl
push
icebp
cli
add
or
in
adc
sub
out
movsb
and
jle
fstl
cmpsb
add
jmp
jecxz
scas
jne
adc
sbb
adc
cltd
faddp
movsl
clc
outsl
push
decb
cwtl
pop
add
daa
or
leave
fisttps
adcl
xchg
loop
cmc
es
dec
push
icebp
inc
je
mov
out
add
sar
mov
and
incb
mov
lods
imul
jle
leave
mov
outsb
xchg
addr16
xchg
incb
pop
pop
add
cld
xchg
adc
ds
mov
jmp
fmull
cmc
jno
hlt
inc
mov
sar
adc
xchg
or
xor
popf
decb
add
jp
dec
inc
cmc
sbb
xor
pushf
add
test
daa
cwtl
aad
push
mov
cmp
or
pop
repnz
sbb
jae
pop
push
rol
dec
xchg
les
stos
loop
scas
subl
mov
cmc
adc
xchg
mov
or
cmpsl
cs
dec
mov
roll
mov
cs
dec
mov
pop
cs
cmp
mov
dec
pop
ficoms
idiv
dec
mov
xchg
xchg
jno
jge
fs
popf
sub
jg
mov
or
mov
add
inc
adc
cltd
ficomps
loopne
imul
jg
pop
out
std
sub
jne
inc
mov
fiaddl
repz
clc
scas
dec
mov
sbb
jl
pop
xlat
mov
decb
cwtd
cmpsl
push
and
aas
insb
xchg
incb
cmp
shrl
push
jp
aam
popa
gs
gs
mov
mov
sub
decb
or
daa
ja
fstps
popf
ja
jecxz
popa
aas
pop
divb
es
int
in
mov
idiv
lds
adc
inc
mov
jns
xchg
imulb
fstpt
rcpps
xlat
pop
jmp
lods
and
repz
bound
dec
dec
sub
movsl
inc
mov
push
pop
insb
xchg
aaa
mov
mov
icebp
sti
mov
insl
aad
lret
jne
and
into
sbb
pop
mov
push
or
incb
addb
cli
loope
mov
stc
sub
cwtl
aaa
cmp
mov
icebp
cwtl
lret
fs
movsl
adc
sti
shlb
pop
repz
push
icebp
incb
stc
cwtd
jmp
popf
rol
jnp
sbbl
mov
xchg
mov
enter
add
mov
shlb
incb
std
and
loop
lret
pop
push
stc
ficompl
mov
mov
cmp
leave
test
inc
das
dec
mov
cs
js
out
cwtl
fildll
shr
cmc
ss
cmp
sar
add
dec
dec
mov
xor
jl
mov
and
stos
ret
adc
xor
mov
mov
aad
mov
xchg
push
push
mov
xchg
ja
icebp
lfs
pop
xor
fs
decb
inc
cmp
cmp
jmp
cmpsl
xor
cmpsb
mov
push
xchg
insb
xchg
mov
xlat
mov
adc
pop
cld
pop
insl
jg
mov
imul
adc
mov
push
frstor
bound
xchg
or
jno
push
into
int
mov
push
sahf
pushf
push
icebp
pop
shrb
pop
mov
jge
fmulp
testb
cmc
push
sub
bnd
icebp
jb
sti
movsb
cmpsl
repnz
add
mov
loopne
cmp
loop
xor
mov
xchg
mov
insl
push
fxtract
icebp
sahf
loop
mov
add
daa
jb
hlt
mov
add
pop
leave
xchg
sub
icebp
xor
incb
scas
sbb
xchg
inc
mov
lret
mov
adcb
arpl
push
loop
cld
divl
sub
dec
mov
jne
cli
repz
fsts
subb
add
xchg
icebp
dec
mov
fs
stos
push
adc
and
rcrl
pushf
cmc
jle
add
xchg
in
adc
mov
sub
decb
sub
mov
pop
dec
outsl
lcall
and
fisttpl
icebp
jle
sub
push
xor
in
push
lahf
push
cmp
outsb
xchg
ja
xor
sti
mov
sbb
das
test
es
dec
popa
mov
ss
pop
loop
popf
outsl
lahf
scas
insl
ss
add
repnz
jbe
testl
pop
adc
and
jbe
pop
push
repnz
iret
fidivl
xor
sub
dec
jp
addr16
push
dec
mov
ret
cmpb
stos
out
add
jno
push
icebp
xor
call
mov
mov
fistl
loopne
mov
out
jb
xchg
add
incb
jae
push
push
stc
decb
outsl
aam
sti
decb
mov
insl
clc
arpl
icebp
imul
jns
xchg
test
mov
aam
loop
push
in
imul
mov
int
sub
mov
les
mov
aad
pop
xchg
push
mov
pop
cmp
xor
mov
sar
daa
adc
push
imull
outsb
xchg
repz
mov
loopne
pop
jae
xchg
adc
add
mov
cltd
lods
iret
pop
sahf
imul
fcmovnbe
sbb
jmp
sub
es
mov
vcmpordsd
xlat
or
sbb
sar
decl
das
adc
pop
sbb
fwait
or
xorb
out
repz
pop
mov
xchg
ds
jp
mov
sbb
push
icebp
out
mov
adc
in
loope
sar
pop
adc
jge
popf
imulb
aad
push
movsb
outsb
xchg
and
fwait
jb
outsb
xchg
jbe
cmp
and
sub
movsl
push
add
lahf
and
nop
jg
aam
push
stc
push
add
jecxz
cmp
cmp
in
ljmp
jle
popa
push
pop
lods
xchg
imul
into
adc
lahf
or
jmp
pop
lea
stos
inc
mov
frstor
aad
jae
pop
lock
mov
test
jmp
pop
mov
push
stos
lock
call
xor
gs
jae
lahf
and
and
sub
incb
cmc
decb
roll
jnp
mov
add
cmp
xchg
sub
xor
shr
es
out
imul
in
xchg
push
lcall
test
push
icebp
cmp
stc
jecxz
push
add
out
jns
sub
cwtd
push
cltd
cmp
leave
idivb
sub
cmp
pop
int3
push
js
pushf
hlt
cmp
dec
lods
cmp
inc
mov
mov
mov
dec
imul
mov
dec
arpl
sbb
adc
aam
cwtl
xchg
es
int3
xor
push
mov
leave
cmp
mov
jbe
loopne
push
imul
cli
adc
cmpsb
cs
inc
mov
mov
mov
jl
jp
lea
insb
xchg
nop
cmc
decb
mov
lret
pushf
aas
xlat
mov
sti
rclb
stc
stos
leave
sub
scas
js
in
and
decb
pop
mov
rcl
jg
inc
mov
xlat
adc
sub
xchg
push
inc
clc
xchg
test
inc
mov
mov
sarl
pushf
or
xchg
and
idiv
push
hlt
push
hlt
cmp
or
loopne
cmp
stos
out
push
les
idivl
movsl
out
ss
sub
pop
lods
xor
loop
sbb
mov
mov
lea
push
push
cs
jmp
bound
stos
push
icebp
out
imul
testb
xchg
int3
push
dec
repz
cmp
popa
push
jmp
leave
fwait
mov
push
rcrb
pushf
sbb
jae
idiv
cmp
incb
pop
bound
adc
decb
mov
les
push
cltd
inc
mov
adc
fisubrl
fxch
add
cs
lds
es
repz
in
test
pop
xor
icebp
incb
rcrb
push
xchg
jecxz
insl
and
inc
cmp
jl
sub
push
inc
cmp
adc
je
mov
cmp
rorl
std
incb
outsl
fdivl
iret
mov
mov
cltd
cltd
js
scas
iret
xlat
lret
pop
add
push
stc
incb
push
mov
xchg
xor
rclb
in
sbb
test
jae
repz
sub
lret
jge
cld
fistl
xor
and
imul
inc
mov
xlat
xor
mov
mov
adc
std
sbb
mov
xchg
inc
mov
pop
mov
xchg
out
add
xchg
mov
jge
fstl
mov
jmp
dec
js
movsl
imull
add
sub
pop
enter
outsb
xchg
incb
inc
gs
cmovb
adc
pop
jo
xor
pop
jo
in
repnz
dec
mov
jmp
stc
cmc
sbb
mov
repnz
dec
mov
faddl
xchg
xor
pusha
lahf
out
icebp
pop
ljmp
js
sbb
inc
xchg
pusha
lahf
xor
loop
xchg
mov
les
das
mov
aas
popa
adc
push
call
pop
cmp
mov
fwait
outsb
xchg
mov
cmpsb
repnz
jb
dec
jecxz
pop
subb
inc
push
push
mov
cmpsb
adc
push
stc
pop
sub
incb
jo
xor
push
sahf
add
and
dec
pop
adcl
adc
repz
decb
repz
lea
push
repz
outsl
dec
fsts
adcl
pop
testl
decb
adc
movb
push
addr16
pop
out
leave
xor
cmpsb
cmpsb
paddd
mov
pop
pop
mov
cmp
std
pop
push
stc
arpl
mov
mov
cli
mov
inc
mov
jge
jecxz
imul
shr
nop
adc
std
out
out
push
icebp
adc
mov
dec
adc
push
sahf
xchg
cld
fistps
xchg
dec
or
dec
mov
add
decb
pop
pop
es
lret
in
add
mov
push
stc
xchg
mov
jo
lahf
incb
xchg
ja
mov
mov
out
dec
mov
clc
cwtl
fdivrs
adc
pusha
lahf
push
jo
rclb
les
sti
loop
call
xchg
outsb
xchg
fwait
jno
cmp
mov
scas
xchg
inc
repnz
xchg
mov
push
std
lock
sub
lock
inc
push
stos
pop
mov
addr16
sub
stc
mov
ljmp
das
push
call
icebp
jnp
fwait
out
dec
in
lcall
dec
jl
mov
pop
lcall
insb
xchg
mov
sub
adc
push
icebp
ljmp
imul
cmc
cld
imul
jl
cmp
cmp
mov
jmp
psrad
add
mov
ret
ret
mov
inc
psllq
leave
push
bound
and
decb
xchg
icebp
imul
jno
push
xchg
decb
xchg
mov
fsin
movsl
lcall
outsb
xchg
decb
icebp
jmp
addb
fwait
cmp
push
jmp
and
pop
jg
loop
pop
inc
aad
xchg
int3
orl
das
mov
icebp
shrl
insb
xchg
negl
mov
loope
insb
xchg
nop
call
rcll
sub
cmc
pop
push
in
cs
adc
mov
mov
mov
aaa
push
mov
stc
fwait
push
les
mov
sub
inc
stos
mov
orb
xor
das
loopne
add
imul
and
sti
push
adc
sahf
jecxz
cmc
inc
movsb
push
icebp
mov
and
ja
idiv
aaa
fs
out
push
and
mov
test
mov
out
loope
xchg
test
xlat
push
lods
xchg
pop
jle
add
incb
pop
cli
mov
daa
je
or
inc
mov
mov
insb
xchg
decb
jl
xlat
jne
mov
sbb
in
jle
in
jae
popf
push
mov
adc
mov
mov
sarb
xorl
pop
add
decb
sar
insl
rolb
cmpsl
pop
xor
cmc
mov
xor
jne
cwtl
adc
movsb
sub
dec
sub
decb
inc
mov
jb
xchg
and
pop
in
pop
push
mov
and
incb
decb
jnp
mov
out
int
pop
push
mov
xchg
mov
sub
pushf
xchg
push
gs
cld
hlt
mov
stc
dec
fsubrl
inc
inc
mov
push
int3
pop
out
out
out
cmpsb
lret
sbb
adc
jb
rcrb
sub
loope
stc
repz
dec
shrl
jmp
enter
cltd
decb
xchg
cmp
fsub
cmpsl
shlb
lret
push
rcll
xchg
sub
bound
mov
mov
pop
into
inc
push
pop
popa
xor
mov
cmp
loope
dec
mov
lds
pop
rcl
into
sbbl
icebp
xor
and
decb
sbb
cmp
jecxz
mov
out
int
pop
movsl
nop
js
push
adc
and
and
decb
mov
jb
fs
daa
jbe
mov
mov
push
icebp
dec
lret
aaa
inc
mov
loop
xlat
push
cmp
sbb
incb
daa
mov
hlt
sub
pop
hlt
mov
stc
mov
add
xchg
call
popa
lret
aaa
sbb
fistl
mov
and
lret
dec
repz
xor
ljmp
dec
inc
or
sbb
jns
jmp
in
hlt
sti
idivb
push
or
mov
pop
or
cmp
clc
lea
push
push
rolb
adc
dec
cmp
sbb
mov
enter
jg
cli
in
push
add
pop
inc
mov
pop
mov
test
icebp
jl
sbb
shrl
mov
fmuls
mov
xchg
jmp
inc
mov
in
cmp
idiv
xchg
sub
mov
sahf
dec
dec
jnp
sub
scas
testl
jmp
imul
mov
fwait
mov
repz
fwait
loop
xor
sbb
rclb
push
xchg
andb
add
fwait
cmp
ret
jecxz
negl
rcrb
add
pop
or
stos
sti
mov
or
sahf
mov
cmpsb
jmp
add
incb
pop
push
cmc
lds
movsb
push
out
mov
cli
mov
nop
cmp
and
mov
test
pop
push
int3
shlb
fsin
xor
mov
xor
std
pop
mov
mov
mov
sar
pop
mov
cmc
cmp
mov
mov
cmp
push
aad
add
push
imul
sub
or
decb
addl
es
inc
xchg
mov
pop
test
les
shll
pusha
lahf
dec
daa
fsubr
push
arpl
ficompl
adc
popf
xchg
dec
mov
decb
adc
repz
mov
xchg
pop
sbb
push
cmc
cs
jns
out
outsb
xchg
pushf
ljmp
frstor
fsin
add
gs
jl
sub
add
mov
xchg
out
xor
ret
in
push
mov
sub
xchg
jo
sub
enter
xlat
inc
xchg
mov
rcr
push
jmp
lods
dec
dec
mov
testl
sbb
loop
and
ficomps
bound
or
xor
bound
pop
sar
cwtl
jle
in
int
cmpsb
or
pop
nop
clc
inc
mov
and
lods
xchg
sbb
leave
andb
es
add
mov
cwtd
fidivl
mul
cmp
push
mov
inc
mov
scas
xor
shrl
lock
mov
and
mov
loop
aaa
pop
daa
push
std
pushf
bound
or
repz
cmp
sbb
cs
jge
stc
incb
decb
idiv
cli
add
push
fisttps
lahf
stos
nop
pop
nop
fsubs
mov
and
fistl
fimuls
mov
push
test
mov
iret
lcall
fldt
and
aam
ljmp
pop
shrl
adc
cmp
push
into
or
ficoms
repnz
sbb
dec
mov
decb
idiv
mov
lock
xor
jns
push
xchg
push
add
decb
cmc
repz
pop
adc
decl
xor
bound
aad
mov
inc
enter
sbb
mov
mov
pop
mov
incb
std
jmp
cs
cltd
ljmp
decb
icebp
js
cmpsb
out
sub
jno
or
cmc
lahf
jmp
ret
xchg
icebp
sub
fldt
mov
pop
inc
mov
fildl
fs
dec
mov
mov
call
clc
pop
inc
mov
movsb
adc
dec
rcl
stos
inc
push
es
jl
dec
cmpsb
mov
mov
loope
imul
stos
sub
mov
ljmp
daa
ret
mov
sti
xchg
jno
nop
cltd
imul
jl
xor
repz
sar
es
arpl
mov
out
or
mov
adc
cwtd
cmc
pop
fs
xor
mov
jmp
mov
push
dec
dec
mov
mov
incb
insb
xchg
mov
add
in
xchg
fadd
gs
lcall
ljmp
test
dec
andb
push
icebp
decb
dec
mov
or
lahf
fs
pop
cltd
mov
loopne
out
dec
pop
aad
push
cmp
test
push
stc
repz
cli
cmovg
sti
das
pop
jl
je
push
xor
insl
outsb
xchg
fmull
xor
and
inc
mov
test
mov
cmc
cmp
daa
cmp
xor
popa
bound
jecxz
jmp
push
dec
mov
outsl
inc
mov
sbb
jge
mov
stc
xchg
je
popf
incb
and
icebp
inc
int
idiv
dec
mov
cs
or
mov
or
dec
mov
jmp
mov
mov
cmpsl
or
xchg
lea
bound
sbb
cmp
dec
jae
cmp
fs
sub
mov
jge
sub
decb
cmc
sub
aad
xchg
popa
shrb
bound
lock
decb
fsubrp
mov
jmp
outsl
sub
ja
pop
insb
xchg
incb
lea
addr16
arpl
inc
mov
loopne
jbe
inc
mov
in
in
movsb
cmp
inc
mov
ljmp
xlat
jecxz
aam
sahf
div
inc
dec
mov
pusha
lahf
cmpsb
push
dec
add
sub
dec
mov
loopne
jnp
nop
inc
mov
daa
dec
mov
mov
outsl
jb
cmc
cmpsb
iret
dec
mov
cmc
xchg
jmp
sarb
dec
dec
mov
fisttpll
mov
ss
test
add
lods
sahf
cmpsb
decb
je
mov
jbe
out
sbb
pusha
lahf
inc
sti
lcall
lahf
push
arpl
lds
mov
mov
aad
out
andl
scas
inc
mov
inc
mov
incb
sbb
js
hlt
inc
sbb
cmp
sbb
std
adc
xchg
inc
adc
in
test
mov
sar
dec
jns
mov
and
adc
incb
stc
fcompl
fildl
xchg
ja
mov
mov
cs
mov
xchg
leave
insl
push
rclb
pop
dec
cwtl
mov
cmp
xchg
cltd
inc
mov
lods
aam
dec
or
mov
pop
enter
xchg
or
inc
mov
fisttpl
shlb
pop
push
scas
sti
sti
enter
xchg
xchg
pop
aaa
shll
mov
sub
clc
or
imul
jge
pop
andl
push
xor
jge
xor
add
notl
or
notl
bound
mov
lods
mov
xchg
sbb
cmp
mov
xor
mov
mov
lahf
xor
inc
ds
cltd
inc
jno
adc
dec
xchg
out
jg
lods
test
xor
mov
fistps
sbb
xlat
sbb
aad
jl
or
loop
pop
add
repnz
int
jae
xchg
mov
insb
xchg
movsb
negb
test
xlat
pop
fsincos
pop
sub
sbb
js
jb
movsl
sub
ljmp
push
in
dec
mov
je
inc
sbb
push
ja
jae
fstpl
xchg
test
sbbl
and
dec
jle
and
jle
sbb
call
mov
push
icebp
test
add
pop
sahf
jmp
and
decb
dec
divb
decb
push
stc
xchg
push
jno
shlb
aaa
ds
jecxz
enter
pop
or
movsl
cwtl
popl
leave
loopne
fsin
xchg
in
cmp
movsb
xchg
mov
stc
sub
test
stc
pop
xor
fmull
cmp
sahf
jne
sub
leave
in
and
mov
aad
bound
mov
aaa
add
mov
fs
decb
push
mov
jae
cmp
sahf
pop
xchg
pushf
mov
cmp
leave
pop
add
cwtd
incb
mov
and
sub
pushf
imull
mov
push
xlat
or
mov
dec
mov
xor
or
cld
sbb
push
in
dec
xlat
pop
mov
xor
mov
fimull
pop
mov
sti
xlat
sbb
sub
hlt
mov
mov
loopne
mov
cwtd
incb
rol
dec
mov
popa
adc
cmpsb
jmp
call
cld
or
sahf
adc
jnp
cltd
loopne
and
int3
movsb
inc
or
lret
or
xor
mov
mov
loop
jbe
insl
dec
and
cmp
and
sbb
adc
pop
testb
push
outsb
xchg
jmp
push
jno
mov
imul
ss
bound
xchg
xlat
cld
inc
mov
in
and
add
xor
rclb
cmp
sub
nop
or
sub
test
cmp
push
lahf
mov
scas
loopne
lret
xchg
mov
out
test
xchg
mov
push
or
cltd
pop
cmp
add
adc
mov
iret
das
lsl
lret
xchg
jne
jbe
mov
adcl
mov
and
test
adc
push
xchg
std
in
dec
xor
pop
sub
leave
adc
pop
cltd
aam
or
ljmp
lock
rcrl
dec
cmp
cltd
scas
ss
jo
mov
out
shll
addb
aad
jne
js
mov
lds
cmp
mov
ret
rorl
xchg
add
adc
adcb
ljmp
ljmp
jne
sbb
inc
mov
daa
sbb
addr16
push
stos
inc
mov
cmpb
adc
jns
pop
jae
mov
cmp
pop
dec
mov
ja
mov
xor
pop
adc
mov
ds
sbb
pop
push
xor
and
jg
xchg
decb
lret
mov
xor
loope
fldcw
pop
lret
xlat
dec
sbb
cmp
cltd
push
incb
add
incb
out
adc
lahf
insb
xchg
lods
stc
test
icebp
sub
into
or
jno
adc
xor
out
sub
incb
lea
dec
int3
lods
sub
lcall
inc
mov
fwait
decb
outsb
xchg
decb
fcmove
enter
in
lock
adc
adc
test
ds
mov
aad
cmp
mov
and
xor
sub
int
ficomps
xchg
jl
lret
sar
cltd
push
mov
fldenv
fsin
sar
lods
loop
jb
lods
inc
cmp
mov
or
pop
jnp
ret
idiv
xlat
inc
sbb
repz
pop
and
incb
ja
inc
mov
pop
adc
movsl
jae
lcall
fsin
addr16
cmc
repz
pop
out
lea
aam
fistl
sbb
xlat
inc
inc
mov
outsb
xchg
ffree
pop
push
movsb
repnz
movl
shrl
cwtd
out
lods
xlat
mov
or
push
xor
pop
mov
test
stc
mov
cld
stc
xchg
and
stos
sub
incb
insb
xchg
incb
bound
xlat
pop
push
icebp
incb
int
push
jle
mov
jb
inc
mov
insb
xchg
push
leave
xchg
jbe
adc
push
xchg
sbb
adc
cmp
adc
aas
lea
icebp
sbb
mov
add
decb
xor
cmp
mov
jbe
outsb
xchg
das
inc
mov
sar
out
repz
push
out
repz
pop
pop
out
fmull
sbb
in
jl
in
mov
repnz
movsl
daa
xor
sub
in
xchg
lcall
idiv
int3
push
jmp
rcll
sar
mov
dec
fdivl
int3
or
mov
movsb
bound
or
call
out
adc
pop
and
cmp
setp
jo
sbb
jp
cmpsl
push
cmp
ljmp
fcmovbe
mov
push
icebp
mov
ds
arpl
push
mov
popa
dec
mov
lahf
in
mov
stos
adc
ret
sar
loope
mov
lret
mov
inc
mov
jecxz
and
daa
pop
inc
mov
addr16
dec
adc
sahf
adc
xor
test
xchg
xor
popa
sub
bnd
mov
adc
push
fsubrs
lahf
push
bound
out
and
sbb
cmc
outsb
xchg
out
inc
mov
pop
pop
pushf
jb
loopne
imul
sbb
lea
sbb
mov
mov
jnp
push
jne
xchg
inc
mov
xor
mov
das
in
negl
jmp
aaa
outsl
xchg
cwtl
adc
adc
lock
in
movsb
sub
repz
loopne
push
in
aam
jmp
cmpb
ds
fsin
aad
jge
xor
mov
xor
incb
push
decb
popa
adc
fs
scas
in
xlat
xor
adc
cmp
inc
mov
add
cmp
aaa
push
sbb
lods
into
in
mov
mov
scas
neg
andl
sar
in
rcrl
das
in
shll
mov
testl
rolb
xchg
sbb
push
std
add
pop
fiaddl
icebp
cwtd
adc
aas
or
inc
mov
xlat
outsl
movsb
xchg
adc
jb
in
cmp
stc
pop
sbb
jo
jo
pushf
rcl
ljmp
cmp
jnp
stos
shl
into
or
incb
stc
aas
push
andb
rclb
incb
ljmp
dec
in
mov
in
cmp
idiv
repnz
and
insb
xchg
loop
cmp
sbb
hlt
xor
icebp
lcall
clc
xchg
add
cwtl
jg
cltd
decb
js
icebp
xchg
mov
push
outsb
xchg
ss
inc
mov
or
jge
mov
inc
mov
push
or
fwait
or
mov
imul
mov
cmp
fcmovnu
xor
sub
mov
mov
pop
fisttpl
lahf
inc
iret
cmp
mov
sbb
cmc
ret
xchg
stos
cs
out
movsb
das
cmp
cmpsb
pop
xor
mov
daa
mov
add
call
xor
aam
dec
mov
sbb
insl
adc
mov
cwtl
pusha
lahf
jae
add
mov
xrelease
icebp
fstpl
idiv
cmpb
fwait
pop
gs
dec
mov
and
decb
or
cmc
and
addr16
aas
mulb
adc
push
incb
xor
aaa
clc
push
loop
sar
xor
or
cmpsl
pop
push
imul
cmp
push
mov
push
dec
mov
aas
scas
and
clc
mov
rolb
loop
mov
jae
dec
mov
add
sbb
fxch
cmp
mov
mov
rcrb
and
js
push
mov
pusha
lahf
xchg
jb
pop
daa
mov
add
loopne
mov
jp
js
aam
mov
enter
xlat
mov
xor
add
dec
mov
push
mov
push
cmp
xor
ficomps
popa
icebp
xchg
push
movl
lods
aad
or
incb
add
ds
dec
xor
push
cld
push
push
sub
inc
fdivs
imul
and
xchg
mov
sbb
stos
cmp
daa
adc
out
sub
bound
sbb
cmc
aad
or
loopne
mov
xchg
xchg
mov
xor
cli
mov
sar
das
gs
jnp
shl
pop
in
aaa
nop
stc
sub
movsb
cld
neg
arpl
insl
push
icebp
pop
fldl
jno
xlat
je
cmp
insl
add
mov
pop
xchg
add
idiv
mov
xor
stc
sub
out
sub
incb
je
jae
or
cwtd
jp
sub
adc
sbb
inc
mov
icebp
and
dec
mov
push
test
add
decb
jl
inc
mov
sbb
into
add
push
icebp
decb
xor
les
gs
xor
xlat
incb
and
push
into
cmc
aas
dec
push
dec
nop
and
jle
xor
jl
fisubs
mov
jge
mov
adc
pop
pop
add
pusha
lahf
cmp
enter
mov
imul
inc
mov
std
orb
cmp
inc
mov
mov
xchg
decb
in
xorb
fcomps
mov
sti
mov
sahf
or
loope
shrl
das
les
push
mov
jae
test
xchg
pop
sub
xor
dec
mov
int
jae
sar
xchg
decb
pop
pop
cmp
pop
push
pushl
fld
lret
pop
mov
xor
cmc
idiv
pop
cmp
test
rorl
out
xchg
repz
aaa
in
rep
mov
mov
mov
mov
cmp
or
sbbb
cs
lods
testb
insb
xchg
decb
ja
xchg
cmpsl
jl
out
dec
mov
mov
out
add
jmp
sub
dec
jg
stc
cmp
mov
fnsave
cmp
cmp
push
mov
dec
mov
fwait
adc
push
icebp
incb
fcoms
and
jge
and
idiv
cmc
test
sub
incb
adc
nop
loop
pop
mov
inc
mov
popf
std
xchg
cmpsl
lret
clc
notl
xchg
jge
xchg
mov
stos
xchg
mov
scas
neg
fwait
push
frstor
fsin
mov
nop
jge
sub
pop
aam
push
lea
cmp
lods
fcmovnu
inc
jge
jp
sbb
cmp
sub
xor
xchg
pop
loop
ds
test
or
push
and
pop
xor
nop
push
lock
enter
jp
shrb
mov
js
adc
sbb
add
imul
cld
enter
dec
mov
mov
popf
mov
inc
mov
movl
scas
adc
imull
pop
stc
popl
adc
sar
dec
mov
arpl
nop
lods
hlt
jle
cmp
ja
pop
aaa
push
push
scas
outsl
dec
mov
and
inc
mov
adc
movl
mov
jno
ret
imul
mov
jbe
adc
xor
xchg
add
sub
fistps
sub
decb
decb
cmc
scas
insl
mov
mov
pop
je
vcvttsd2si
out
dec
mov
shrl
lods
and
pop
movsl
jb
sub
outsb
xchg
and
cmp
xor
incb
jne
mov
mov
fldl
mov
incl
ljmp
mov
lds
pop
ja
loopne
loop
pop
das
nop
aaa
push
addl
pop
jne
pop
cmp
mov
fwait
pop
adc
rolb
popa
jno
loopne
bound
aad
lret
inc
push
jne
xchg
mov
mov
leave
lock
sahf
xchg
or
cmp
in
mov
xor
out
xchg
dec
mov
mov
mov
aaa
rcr
xlat
addr16
inc
jmp
sub
es
push
stc
xor
pusha
lahf
decb
stc
dec
imul
je
sar
inc
mov
adc
sub
push
push
stc
sbb
xrelease
popa
cld
out
sbb
push
lods
das
sub
addr16
outsb
xchg
pushf
dec
mov
loop
mov
sbb
mov
jge
push
sub
int
jecxz
mov
mov
adc
or
dec
add
pop
mov
shl
fwait
jo
into
mov
inc
in
test
stc
dec
cs
int
pop
aam
icebp
and
adc
cmpsl
loope
movsl
jae
xlat
pop
dec
mov
push
cwtl
pop
xchg
aas
xchg
add
dec
lods
aaa
mov
jge
movsb
ja
xchg
mov
fcoml
xor
incb
imul
aam
fnstsw
mov
outsb
xchg
lods
push
jae
insl
add
xchg
pop
sbb
xchg
pop
xchg
in
sbb
xchg
xlat
sbb
mov
and
loopne
mov
mov
cmc
and
incb
lock
sar
out
xor
or
cmp
into
lods
mov
cmp
fidivrl
and
jne
mov
dec
xlat
cmp
test
and
pop
stos
mov
push
stc
jnp
dec
jo
ret
imul
in
sahf
and
cmp
int3
and
incb
std
adc
sub
das
out
popa
aad
cmpb
mov
mov
pop
sub
inc
scas
jae
and
gs
mov
lds
out
mov
cmp
inc
mov
shl
adc
aad
sub
inc
mov
sbb
pop
sbb
mov
xchg
lds
push
incb
loopne
cltd
cmp
mov
cwtl
cmp
xor
push
stc
inc
jge
das
int
or
xor
push
sbb
xor
aaa
inc
popa
xchg
inc
and
jbe
fs
cmp
cwtl
or
inc
mov
push
push
and
inc
repnz
icebp
enter
inc
rcr
mov
sub
sub
xchg
aad
mov
mov
mov
cmpsb
dec
mov
push
bound
mov
jl
cmc
pop
das
cld
loopne
sbb
in
and
jl
pop
and
stc
ret
rcll
pop
imul
cmp
test
addr16
sbb
xchg
mov
lock
xor
mov
mov
mov
icebp
ret
sbb
sbb
fsubrl
cmp
std
incl
and
jl
mov
insl
cmpsl
jmp
mov
adc
xchg
jmp
xor
sbb
mov
popf
or
movsl
pop
add
inc
push
cmpsb
in
js
lds
decb
sti
dec
push
push
outsb
xchg
sub
insl
shl
dec
pop
push
pop
rcr
mov
lods
cwtd
loopne
lahf
mov
out
in
fsubrp
imul
jb
adc
xor
xchg
scas
add
cmpsb
adc
jne
mov
mov
xchg
cmpsb
adc
adc
insb
xchg
pushl
sti
push
aam
xchg
into
repnz
cli
push
stc
incb
push
dec
mov
push
stos
and
gs
xor
xor
inc
pusha
lahf
ds
cmpsb
inc
mov
adc
dec
mov
push
and
decb
cmc
fistpl
xor
push
xchg
test
stc
sub
bound
imul
cltd
pop
mov
pop
lahf
fsubs
sti
sbb
mov
dec
mov
pop
leave
ret
lds
sbb
sar
cmc
cmp
sub
mov
jecxz
shl
add
aad
or
hlt
push
add
jne
movsl
mov
mov
clc
bnd
or
inc
cwtd
jmp
xlat
jle
mov
movsb
sbb
sar
xlat
jg
fsin
push
mov
inc
sti
xlat
adc
dec
pop
cwtd
mov
and
push
xor
xchg
mov
pushf
push
lahf
cltd
mov
lret
bound
rclb
std
fisttpl
loopne
inc
mov
cmp
adc
mov
sub
out
out
ret
push
icebp
gs
mov
sbbl
mov
aad
mov
cmpb
mov
fwait
pop
pop
lahf
decl
scas
cmp
scas
mov
aas
out
scas
mov
das
jge
fs
in
loop
or
incb
sbb
addr16
push
out
mov
test
lcall
push
mov
fs
incb
in
inc
mov
inc
push
mov
pop
dec
mov
cmpsb
aas
mov
jno
mov
fidivs
scas
mov
add
ficompl
mov
dec
mov
ret
clc
dec
mov
push
popf
mov
sbb
in
push
mov
jno
add
sti
out
mov
mov
jle
aam
pop
stc
inc
mov
dec
mov
inc
mov
xchg
xchg
ss
adcl
fisubrs
jge
shll
incb
cmp
dec
pop
xorl
sbb
cwtl
bound
ret
ljmp
xor
fcomps
xchg
jmp
ret
push
sbb
push
and
adc
xor
fnstcw
mov
ss
sub
decb
sbb
adc
xchg
pop
adcb
and
mov
xor
sbb
xchg
jno
icebp
les
nop
insb
xchg
dec
adc
insl
fs
dec
sbb
pop
mov
ret
lods
cmp
loope
jbe
pushf
inc
fs
inc
xor
dec
cwtl
adc
sub
jb
dec
jmp
dec
mov
nop
pop
cmp
and
fwait
mov
mov
xchg
dec
mov
aad
loop
sbb
stc
aam
and
int
mov
mov
scas
lret
filds
push
pop
mov
inc
sub
and
incb
in
pop
idivb
daa
dec
mov
pop
xchg
mov
push
cmp
xchg
xchg
jge
xor
out
jnp
icebp
lock
inc
hlt
sbb
dec
inc
bound
arpl
push
or
and
mov
cwtl
jecxz
add
xchg
pop
or
scas
mov
pop
cmp
ror
push
enter
sub
incb
dec
mov
pushf
pop
popa
mov
adc
shll
mov
xchg
mov
stc
cmp
imul
rep
inc
adc
insb
xchg
test
push
cwtl
iret
les
idiv
cwtl
sub
dec
jno
pop
out
cltd
inc
mov
fimull
jle
sbb
pop
out
and
pop
daa
dec
mov
and
fcoms
and
mov
repz
insl
mov
cmpsb
std
push
sbb
xorb
sti
inc
xor
jnp
xchg
push
cwtd
insl
imul
daa
xor
jg
movl
fwait
xchg
mulb
mov
int
push
stc
icebp
std
dec
mov
fists
dec
dec
fnstsw
int
ljmp
lods
mov
std
js
adc
mov
mov
xlat
shrl
sbb
mov
cwtd
incb
cmp
mov
mov
cmp
mov
ljmp
mov
adc
test
mov
insl
xor
xchg
dec
mov
cltd
pop
mov
lahf
xchg
call
jle
fcmovne
int
push
adc
ret
dec
and
pop
pusha
lahf
and
cwtd
pop
jp
loopne
xchg
adc
fwait
mov
pop
pop
adc
xchg
add
sbb
mov
mov
inc
mov
jno
cltd
negb
lahf
sbb
xor
sub
decb
aaa
test
dec
mov
cmp
mov
stc
movsb
aas
jnp
xchg
lds
orl
setns
mov
sbb
jne
stos
add
cmpsb
stos
scas
jg
mov
mov
test
adc
mov
lods
sbb
push
mov
and
ja
pop
or
cs
or
incb
rcll
xchg
je
and
sbb
decb
sti
roll
jns
int3
mov
test
xchg
adc
jg
add
push
out
mov
nop
pop
push
out
push
fs
xor
lcall
je
cmp
jbe
bound
dec
mov
aaa
imul
in
rcrl
int3
sub
jge
or
xor
mov
fs
scas
mov
xchg
shl
icebp
inc
mov
jae
cli
popf
shrl
aam
pop
pop
repnz
outsl
push
fdivr
shrb
pushf
shrl
adc
stos
lods
sti
inc
mov
inc
mov
push
bound
mov
bound
pop
xchg
xchg
cs
int3
xchg
mov
and
jmp
xor
roll
mov
lea
stc
loopne
pop
mov
push
jle
mov
add
incb
incb
or
imull
shll
push
out
push
cmp
mov
std
and
mov
pop
movsl
sub
incb
bound
cmc
testb
insb
xchg
imul
ror
cmp
shr
xchg
orb
scas
popa
sub
mov
jb
jne
sti
incb
jo
fistpll
pop
dec
mov
or
cmc
jne
adc
ret
outsb
xchg
stos
clc
push
lods
mov
jno
stc
decb
idiv
enter
stos
out
xchg
adcl
jnp
mov
aas
frstor
call
pop
jbe
sbb
out
adc
or
inc
inc
mov
xchg
mul
idivb
popa
aad
inc
inc
mov
into
mov
fidivl
frstor
xchg
fs
push
dec
fdivrp
mov
push
mov
bound
mov
cld
push
shr
or
decb
add
cmpsb
mov
incb
mov
add
pop
mov
cwtl
into
loopne
cli
jp
imul
bound
fwait
sbbb
sub
mov
sarb
and
push
hlt
sbb
adc
repz
je
enter
lret
mov
jecxz
cmp
out
add
loopne
stc
pop
or
incb
stc
xchg
out
mov
xor
arpl
dec
or
push
lds
dec
adc
mov
out
add
aas
out
and
mov
xchg
inc
mov
test
fnstsw
andl
loop
fwait
jmp
push
xor
fsubs
fsin
mov
mov
js
imul
or
or
int3
out
push
cmpl
inc
mov
gs
daa
push
icebp
shlb
push
jb
and
or
ds
cmc
cwtd
in
cmpsl
mov
popl
loopne
mov
push
aaa
mov
jne
test
scas
cltd
mov
repz
idivb
int
cmp
lahf
pusha
lahf
out
fldcw
aad
repz
cmp
shrl
repz
test
in
and
adc
popf
ljmp
push
stos
push
rcr
or
incb
rolb
fsub
push
inc
jnp
mov
mov
addr16
stc
std
ljmp
pushf
orl
iret
or
pop
outsl
push
dec
dec
mov
xchg
sub
movsl
fs
rorb
bound
add
bound
imul
imul
mov
jo
xlat
clc
sub
pop
push
ss
scas
jae
mov
mov
ficomps
lods
fisubrl
sar
clc
push
ffree
fstps
mov
jo
pusha
lahf
decb
mov
out
pop
pop
sub
sub
cli
inc
mov
mov
sti
ss
xor
cmp
sbb
stos
dec
mov
dec
lods
popa
hlt
push
cmpsl
dec
stos
popf
bound
jb
loop
sti
stos
mov
pop
cmovnp
sbb
xchg
mov
push
pop
push
add
mov
push
and
decb
decb
cmpb
mov
pushf
push
sub
jo
fs
cmp
icebp
rclb
pop
inc
lods
mov
mov
adc
stc
add
pop
cltd
add
push
xor
cmc
push
xchg
sbb
ljmp
lret
sbb
imul
shlb
mov
pop
and
dec
pop
mov
xchg
xor
lret
jg
push
decb
lods
iret
xor
add
adc
jo
dec
cmp
cmpsl
lahf
dec
outsl
test
xchg
lahf
inc
loop
push
int
pop
cmp
aam
and
out
jae
js
mov
mov
inc
mov
leave
ret
mov
loopne
lods
sub
jo
outsl
push
stc
and
xor
push
push
cs
ret
mov
je
mov
lret
hlt
jno
push
je
popf
aam
leave
adc
stc
mov
icebp
mov
xchg
cmp
jne
pusha
lahf
cmpsb
enter
xchg
push
xchg
xchg
pop
ss
js
test
es
addb
or
std
sbb
jmp
loopne
ss
xor
pop
pop
push
cs
mov
cmpsb
adcl
lcall
xchg
shr
in
jo
mov
aaa
dec
popf
jae
inc
adc
cwtd
notb
jge
daa
pop
pop
xchg
jle
gs
sahf
stos
lcall
repnz
dec
push
test
shlb
pop
cmpl
mov
jp
push
push
ljmp
test
push
add
cwtl
inc
add
cmp
jns
and
call
ljmp
sar
pop
addr16
xor
or
in
aam
cld
adc
xchg
movsl
cmpsl
pop
dec
mov
add
push
lods
add
incb
mov
icebp
sbb
ret
cmp
and
jo
xor
lahf
je
push
icebp
ss
lahf
mov
push
icebp
dec
pop
shll
inc
scas
jmp
xchg
aas
fstl
cli
mov
xchg
sub
into
push
decl
mov
xchg
out
mov
mov
stc
xchg
sar
inc
mov
das
pop
inc
mov
test
addr16
mov
incb
dec
mov
xchg
popa
jle
sahf
push
out
jbe
pop
icebp
incl
mov
cmpsl
pusha
lahf
cmp
jmp
in
add
inc
in
xchg
xor
sub
nop
mov
mov
push
pushf
cmp
in
arpl
inc
push
xchg
xor
test
mov
jnp
add
lahf
xchg
cli
push
inc
sbb
and
repz
or
gs
test
xor
into
add
pop
fwait
mov
repz
push
mul
flds
push
ljmp
scas
push
cmp
dec
mov
adc
cmpsl
xorl
ffree
and
fcmovnb
loope
lahf
dec
lods
xlat
mov
cltd
or
decb
test
fs
sbb
cmc
jge
push
mov
dec
rorl
inc
mov
fadds
pop
cltd
imul
mov
lds
xor
fmul
out
mov
cmp
shrb
fwait
jp
push
dec
or
repz
dec
mov
jge
jmp
mov
mov
push
add
cmpsl
mov
mov
adc
jl
negl
jne
dec
jb
fisttpl
lea
mov
xor
int
cwtd
push
cmp
mov
jle
js
fwait
aaa
rorb
idiv
shll
and
jne
shr
cld
aaa
das
je
mov
incb
cmpsb
sbb
negl
and
xchg
out
add
mov
sub
lods
push
sbb
inc
adc
mov
lods
lods
neg
inc
mov
pop
inc
mov
dec
mov
repnz
sub
jecxz
addr16
sbb
push
jnp
push
std
aam
bnd
movsl
sti
xchg
loope
jo
pop
mov
xchg
movsb
cmpsl
loopne
bound
mov
xor
sbb
xchg
jecxz
sbb
cmc
xchg
insb
xchg
decb
incb
idivl
pop
inc
push
or
incb
cld
dec
mov
fisttpl
pop
fists
xor
mov
testb
sbbl
movsb
add
push
enter
sbb
add
pop
movsb
imul
insl
int
mov
inc
mov
ss
dec
mov
ss
int
cmp
sbb
inc
mov
push
dec
mov
pop
imul
push
out
cld
imul
rcrl
scas
mov
into
sub
out
add
xor
dec
mov
mov
clc
push
stos
inc
xchg
movsl
scas
andl
fwait
dec
nop
mov
mov
jo
mov
cmpsb
inc
xor
ret
lcall
push
je
dec
mov
out
jbe
pop
aas
sbb
gs
lods
xor
xchg
jae
cmc
push
icebp
popf
int
sub
pop
popa
aas
push
mov
lret
push
jo
xor
mov
fwait
nop
inc
mov
adc
mov
mov
das
dec
jg
sub
popa
adc
stc
inc
bound
add
mov
inc
push
adc
gs
xchg
pop
lds
cmc
jge
ret
mov
mov
adc
notl
push
mov
addr16
lock
push
adc
mov
cltd
decb
icebp
outsb
xchg
sub
sbb
inc
mov
loopne
mov
inc
xor
jbe
ja
std
loope
dec
cs
cmp
pushf
std
pop
sbb
sub
dec
cmpb
cmpsl
insl
lds
xor
adc
dec
scas
ret
outsb
xchg
inc
jg
stc
sbb
jmp
or
jle
leave
fldt
addr16
mov
outsl
mov
cmp
std
jecxz
push
stc
mov
std
je
xchg
stc
fldcw
xor
pop
pop
aam
or
rorb
pop
lea
outsb
xchg
incb
push
addr16
mov
or
pop
jle
push
push
mov
mov
or
insl
push
push
imulb
rcr
push
icebp
stc
dec
mov
sub
cmc
ret
adc
outsl
add
cmp
cld
sub
sahf
xchg
test
cld
jl
jns
sti
pop
fs
adc
aad
cmpsb
pop
xor
cmc
xor
jle
lahf
sub
xchg
jo
mov
add
inc
fs
stc
jno
mov
adc
push
ror
lahf
or
pop
stc
std
or
add
movsl
pop
sub
sub
xchg
and
imul
pop
aas
cmp
or
pop
out
add
icebp
mov
adc
fldcw
outsb
xchg
cwtl
adc
stc
sub
cmpsl
inc
fistpll
pop
push
arpl
xchg
sub
sub
fwait
or
xchg
rorb
pop
pop
leave
jecxz
and
push
fcoml
loopne
lods
jp
lret
jo
dec
insb
xchg
rcll
out
out
ret
in
div
cmp
ss
xor
repz
lods
arpl
jae
repz
movsb
and
out
rolb
xchg
xchg
insb
xchg
imul
iret
pop
insl
out
mov
cmc
and
out
lret
addr16
gs
xchg
mov
subl
addr16
add
lahf
push
dec
mov
cli
in
add
jmp
and
pushf
or
mov
mov
jecxz
cmpsb
popf
mov
decb
hlt
jge
dec
add
icebp
jo
out
lea
dec
and
in
inc
mov
mov
int3
dec
mov
cs
xor
sbb
ffreep
sahf
push
sub
shll
ja
push
or
hlt
decl
mov
cmp
fsin
mov
push
movsb
jo
pop
mov
incb
icebp
stc
sarb
mov
jne
sbb
inc
mov
decb
mov
mov
enter
cltd
decb
inc
and
push
xor
idiv
xchg
sbb
xor
pop
mov
xor
dec
lcall
xchg
cmp
push
icebp
inc
inc
mov
negb
shlb
fsin
mov
out
and
sub
cs
icebp
push
icebp
dec
or
push
psadbw
mov
mov
std
lcall
push
xchg
add
sub
incb
out
lea
push
cwtl
fbld
or
sbb
xchg
cmp
test
jb
mov
ds
jp
pop
fildll
mov
mov
aam
jns
push
in
cld
and
mov
cmp
pop
stc
mov
call
mov
cmpb
std
movsb
jne
inc
mov
int
fisubl
shll
je
xchg
xchg
sub
push
or
std
fcmovbe
aam
mov
jmp
mov
sbbl
pop
inc
mov
ja
std
stos
mov
mov
jbe
rorl
insb
xchg
mov
mov
fdivrl
aaa
mov
icebp
pusha
lahf
push
cld
pop
jo
mov
mov
jl
mov
subl
fwait
jbe
repnz
fs
adc
rorb
and
and
int
xchg
clc
aad
shl
outsl
into
imul
mov
ljmp
jne
cld
scas
cmp
out
scas
and
decb
loop
out
in
xchg
xchg
jb
clc
daa
pushf
ret
fucomip
popf
iret
xor
or
inc
mov
dec
mov
mov
sub
push
add
imul
xor
pop
mov
mov
popf
mov
xor
test
jae
fimuls
cli
xchg
loopne
push
cmp
out
xchg
addl
std
imul
push
sar
dec
mov
sub
mov
aam
dec
mov
enter
adc
ret
push
mov
fisttpll
js
popf
incb
adc
adcl
lahf
decb
mov
jne
lock
jmp
pop
rcrb
xchg
jl
inc
mov
dec
and
sbb
jno
int
cmp
fisubrs
cwtd
decb
call
gs
ret
or
call
xchg
pop
orb
test
xchg
incb
ljmp
sbb
clc
and
adc
sar
cmpsb
mov
dec
mov
mov
fsin
fsts
loop
stos
pop
and
loope
jecxz
lahf
jnp
test
or
mov
mov
into
pop
fsubp
xor
mov
push
sub
imul
popf
sbb
mov
mov
ljmp
gs
mov
inc
repnz
xchg
xor
pop
push
and
fsubrp
iret
sub
pop
adc
leave
cmp
jmp
xor
adc
add
pusha
lahf
out
insl
test
push
es
sub
incb
and
jg
and
aaa
out
and
dec
push
sbb
push
aaa
mov
ljmp
rorb
xchg
push
stc
sub
sub
push
cmpsl
popf
or
inc
decb
js
repnz
repz
fmuls
xchg
es
pop
add
push
adc
dec
mov
mov
push
stos
rorb
fdivp
pop
pop
xor
loope
bound
lock
shl
loop
adc
mov
outsl
push
cld
cmp
push
pushf
pop
mov
sar
outsb
xchg
push
repz
loope
jns
cmp
out
lret
shlb
leave
popa
imulb
xchg
mov
enter
mov
in
lods
pop
sub
cmp
and
pop
mov
jbe
les
add
cmc
sub
push
cmp
incl
sbb
dec
iret
rcll
fsubs
fsin
sub
ja
sbb
sbbb
fs
cltd
mov
xor
idivb
mov
test
popf
mov
mov
mov
pop
mov
mov
add
nop
pusha
lahf
inc
xor
cmp
xor
cmpsl
sub
test
icebp
xor
daa
js
mov
jmp
idiv
insb
xchg
incb
and
decb
icebp
incb
cmp
mov
mov
mov
adc
lcall
add
xor
and
adc
xchg
imul
jmp
out
enter
icebp
add
mov
xlat
push
sbb
push
ret
jl
jb
inc
gs
mov
pusha
lahf
stc
xchg
adc
aam
pushf
push
sub
fisubrs
shrl
decb
ss
push
repz
sti
lods
insl
sahf
lret
in
fdivrl
cmp
cmp
das
xlat
push
stc
jb
push
cwtd
xor
dec
mov
fucomi
xor
push
pusha
lahf
mov
leave
jmp
push
push
incb
jo
cmp
jmp
shl
ja
or
insb
xchg
out
dec
mov
dec
push
stos
mov
pushf
daa
mov
cmpsl
imulb
idiv
add
cmpsb
cmp
std
arpl
enter
out
mov
rorb
icebp
jp
jle
and
xlat
sub
xor
arpl
fsin
cs
xchg
out
iret
or
mov
xchg
or
nop
out
stos
je
mov
loope
outsl
adc
add
decb
mov
clc
mov
repnz
or
mov
mov
xor
fisubrs
sub
dec
push
mov
enter
add
mov
scas
loope
push
decl
pop
icebp
ret
in
fidivrs
decb
adc
fs
decb
inc
outsb
xchg
das
cs
jns
mov
cs
imul
and
adc
xchg
mov
jle
and
mov
das
xchg
pop
mov
decb
sub
movsb
cmp
std
jae
aaa
nop
adc
je
sti
popf
ljmp
xchg
or
add
ds
mov
ret
push
xlat
jne
inc
mov
test
outsl
mov
dec
mov
stc
fisttpll
idiv
xchg
jb
sbb
movaps
shr
xor
sub
aas
popf
test
sar
rcl
xchg
inc
and
cltd
sbb
mov
ret
movsb
and
and
decb
cmp
repnz
fmuls
icebp
incb
pushf
xchg
decl
call
adc
ss
stc
stos
dec
add
inc
jmp
lea
mov
outsl
and
call
xor
xchg
cmc
testb
incl
sbb
and
mov
les
in
sbb
mov
and
pop
mov
lcall
and
imul
sbb
cmp
sahf
jmp
xchg
test
mov
xor
mov
adc
popa
xchg
ficoml
lds
xor
inc
jae
repnz
push
out
iret
mov
std
cmpsb
xor
mov
enter
xchg
ss
lds
enter
jno
sahf
jl
cmpsb
pop
pusha
lahf
decb
clc
dec
iret
mov
orb
jns
or
movsl
or
jns
add
xor
cmpsl
aas
add
and
mov
dec
jnp
lret
ret
loopne
mov
xor
jnp
mov
pop
add
push
mov
sub
and
push
push
jp
rclb
fdivrs
push
jge
mov
mov
andb
incb
push
adc
std
xchg
push
fbstp
xchg
lret
incb
xchg
push
sub
aad
jecxz
xor
push
xor
add
popa
cmp
aaa
popf
stc
test
sub
decb
jne
lret
dec
mov
ja
add
jg
int3
xchg
mov
fnstcw
or
std
cmpsl
add
aaa
lcall
push
mov
pop
cmp
or
mov
sbb
popl
fmull
or
sub
std
mov
push
mov
test
mov
cmpsb
inc
mov
aam
mov
iret
cs
stos
mov
stc
nop
mov
repz
mov
in
ficompl
decb
xlat
xor
icebp
decb
xor
adc
and
clc
xchg
adc
fmuls
icebp
dec
xchg
pop
int
sbb
lahf
dec
fbstp
xor
dec
xchg
xor
mov
das
enter
xor
mov
cmp
inc
mov
push
icebp
fldenv
push
lret
cltd
and
sbb
jo
aaa
notl
or
sbb
adc
ja
sub
cmc
aaa
jp
sar
cmp
or
aad
es
sbb
std
adc
pop
mov
fcompl
cmpl
or
xchg
mov
daa
add
or
outsb
xchg
xchg
add
insl
push
mov
dec
outsl
nop
mov
les
sti
lock
rorl
out
mov
inc
mov
push
icebp
es
jns
sbb
adc
icebp
mov
inc
test
cld
fwait
xchg
icebp
cmp
and
outsb
xchg
cltd
mov
jl
sbb
mov
mov
sbb
fimuls
mov
in
dec
outsb
xchg
insl
xchg
mov
jle
push
nop
pop
aad
fisubl
stc
fxch
das
ds
pusha
lahf
dec
testb
rcrb
lds
xor
xchg
sub
fsin
push
mov
cld
cmpsb
dec
xchg
js
pop
fisttpll
add
jne
ds
lret
out
add
fsin
bound
dec
mov
add
jle
lret
and
std
outsl
xor
imul
mov
fwait
ljmp
cmpsb
jmp
push
repnz
imul
mov
mov
imul
call
push
inc
nop
jle
rorb
incb
les
arpl
idivb
mov
aas
in
jb
xlat
andl
shl
cwtd
and
incb
scas
mov
dec
fsts
xchg
sti
xchg
mov
loopne
mov
push
cld
or
push
xchg
out
xchg
sarb
xor
popa
test
mov
pop
outsb
xchg
out
ficompl
add
xchg
out
bound
scas
loop
in
add
cmp
clc
inc
mov
and
outsb
xchg
decb
idiv
shlb
push
xlat
pop
jno
fs
incb
mov
xchg
or
gs
dec
mov
test
popf
cmc
aam
aas
pop
fistl
das
call
decb
icebp
jp
jmp
les
idiv
jo
sub
in
dec
mov
mov
jno
inc
orl
and
cmp
dec
lock
sub
adc
in
int
sar
pmulhw
sub
push
ja
mov
ficompl
pop
sti
fwait
mov
sbb
mov
les
or
lods
pushf
inc
test
sub
aas
mov
in
xor
stc
decb
cmpsb
dec
mov
cld
jo
jo
in
lea
cmpb
jg
idiv
int
mov
mov
gs
subb
in
push
outsb
xchg
decb
lahf
decb
incb
stc
sub
movsb
add
jp
test
decb
inc
mov
pop
inc
mov
in
xlat
test
shll
push
xchg
mov
fsin
pop
sbb
icebp
sub
jno
insb
xchg
inc
cmp
push
decb
jns
pop
loop
pop
sbb
decb
divb
dec
mov
enter
scas
fstps
xchg
dec
mov
dec
mov
mov
scas
xlat
mov
ljmp
mov
pop
add
sbb
mov
pop
jb
cs
test
push
popf
dec
out
aas
movsl
mov
cs
add
fdivr
insl
jg
xchg
iret
lahf
mov
mov
loopne
or
cmc
dec
sbb
jno
popf
hlt
test
std
sbb
mov
addr16
or
decb
or
rcrl
stos
jb
cli
xlat
sarb
aaa
push
cmp
test
pushf
scas
push
push
mov
mov
mov
mov
mov
cmp
out
inc
mov
outsb
xchg
dec
xchg
cwtl
add
decb
push
lret
outsl
stos
andnps
adc
aam
mov
test
fcoms
mov
pcmpgtb
mov
cli
imul
and
sub
incb
mov
repz
decb
daa
scas
out
decb
idiv
mov
imul
jg
test
sti
sbb
incb
jne
inc
mov
loop
push
cli
gs
fdiv
dec
add
sbb
and
decb
aad
ds
ljmp
aas
cwtl
xor
add
dec
sub
pusha
lahf
sub
xchg
add
incb
adc
mov
sbb
repz
hlt
loopne
loop
jecxz
rcr
push
push
ljmp
cwtl
mov
gs
cmpsb
or
mov
cmp
xchg
movsl
xor
jmp
adc
nop
insb
xchg
fimuls
icebp
jp
into
out
jg
inc
icebp
sbb
idiv
out
jmp
mov
xchg
xor
hlt
pop
imul
scas
sbb
in
cmc
inc
addb
dec
rclb
mov
pop
jae
shrl
fstl
jp
mov
outsb
xchg
das
call
outsl
cmp
add
mov
xor
adc
test
dec
aad
add
add
push
dec
mov
jp
xchg
aam
lods
push
xor
iret
prefetch
mov
sti
and
bound
outsl
sbbl
daa
test
stc
inc
mov
pop
rclb
dec
mov
xlat
xor
add
inc
mov
add
dec
cwtl
xchg
insl
mov
and
pop
mov
lea
in
add
js
iret
in
cwtl
push
stos
icebp
sub
decb
idivl
aaa
jecxz
xchg
push
adc
sahf
inc
mov
icebp
aad
and
jae
iret
xlat
rol
lods
jge
popa
addl
mov
and
push
mov
push
stc
cld
lret
xlat
fs
pop
jae
inc
pop
jecxz
fsin
aaa
arpl
inc
mov
add
andl
mov
adc
daa
pop
cs
mov
lock
pop
idivb
add
pop
cs
mov
push
int
xchg
sar
cmp
cltd
add
push
rcll
adc
inc
jle
mov
icebp
and
cmp
cmc
decb
sbb
rcl
push
sbb
mov
dec
fidivs
mov
jg
rorl
push
je
and
shr
loopne
mov
push
stc
pop
inc
mov
das
mov
xlat
jmp
fsub
mov
gs
xlat
incb
mov
testl
decb
mov
cltd
push
jl
inc
cmc
pop
mov
enter
push
fsqrt
jo
inc
mov
filds
fbstp
ljmp
bound
jl
ja
cmp
mov
daa
cwtl
outsl
sub
shlb
fsin
xchg
addr16
adc
xchg
loop
popf
jb
mov
int
sar
bnd
sbb
xor
dec
mov
arpl
stc
lcall
jge
push
jae
dec
mov
sbbl
ficompl
lods
sub
sub
lea
repnz
scas
dec
add
bound
mov
xchg
inc
insb
xchg
cwtl
aas
lcall
aad
push
adc
ss
ljmp
dec
jge
lods
push
sbb
jno
sub
and
xorb
fprem1
push
iret
mov
stc
icebp
jle
cwtd
popa
lahf
popf
pop
mov
sbb
xor
shrb
sub
inc
pop
add
cld
push
pop
test
xor
pushf
cmp
loop
xchg
daa
fs
sar
fstl
xlat
pop
addb
mov
xlat
jge
fsin
incl
xchg
ljmp
mov
scas
fwait
lcall
daa
adc
mov
push
aaa
add
stos
test
mov
cwtd
decb
popf
cltd
dec
mov
push
mov
xor
out
ss
rcrb
mov
lds
sbb
jbe
pop
inc
dec
fmul
inc
dec
mov
add
jae
push
bound
mov
pop
xchg
adc
decb
ljmp
leave
inc
sbb
or
and
mov
call
add
push
or
pusha
lahf
xor
xchg
sbb
xor
bnd
xchg
fisttpll
popl
jl
leave
outsb
xchg
mov
test
ljmp
test
mov
call
cmp
adc
cs
adc
loope
mov
push
icebp
incb
or
loope
aad
lret
in
and
jl
xchg
jae
add
roll
ret
stos
and
decb
mov
or
incb
fcompl
or
outsb
xchg
decb
test
push
icebp
jmp
push
cmp
xlat
mov
std
adc
and
cmp
mov
fcompl
pop
and
push
cltd
mov
dec
inc
aaa
cmp
push
rcrb
les
jl
and
cs
mov
stc
incb
sbb
sub
popf
push
jne
xor
scas
andl
sti
insb
xchg
mov
and
pop
pop
fnstsw
movsl
adc
cld
insb
xchg
jbe
add
arpl
jmp
fstp
movsb
mov
je
xlat
sbb
shrl
out
stos
xchg
imul
incb
jo
imul
pop
stc
jnp
adc
dec
in
insb
xchg
scas
xchg
int3
aaa
push
push
and
decb
decb
fnstsw
aam
icebp
insb
xchg
jp
add
in
lock
adc
pop
sbb
int
cmpsb
jg
and
cmp
jnp
je
or
popf
movsl
cmp
inc
mov
rolb
adc
mov
dec
movsb
int3
cmp
aas
imul
mov
cmp
or
stos
mov
fwait
fwait
xor
idiv
test
mov
fsin
push
shlb
xchg
sarb
leave
aad
cmp
jg
adc
shll
cmp
ror
stos
adc
pop
or
adc
imul
pop
push
rol
mov
ficomps
and
sub
mov
push
sbb
mul
or
sahf
adc
mov
lods
mov
xor
jl
mov
outsl
add
leave
int
cwtl
ljmp
lahf
jle
ja
inc
mov
jl
lods
pop
sbb
xor
loopne
lods
les
adc
icebp
mov
test
push
aas
xorb
in
bound
fwait
out
inc
mov
cmpb
ss
pop
mov
xor
ja
and
or
jl
sbb
fdivrs
mov
fistl
xchg
xchg
mov
movsb
xor
fidivl
std
incb
dec
mov
ljmp
lahf
imul
daa
icebp
xor
movsb
xchg
ret
cmp
in
mov
xchg
jge
add
inc
add
xchg
mov
movq
fbld
push
stc
dec
mov
imull
or
cmp
inc
mov
cmp
lods
jg
mov
adc
test
push
cmp
lock
out
stos
adcl
dec
mov
cs
add
decb
icebp
decb
sub
incb
std
xchg
jecxz
je
ret
mov
fs
pop
push
xchg
dec
mov
cmp
jno
addl
pop
push
testb
fisttpll
js
call
sbb
sub
lret
idivl
scas
fld
inc
jnp
sub
dec
push
jle
hlt
cmpsb
movsl
rcl
xchg
mov
jo
repnz
xor
jmp
xchg
mov
lcall
push
icebp
insl
push
sub
jne
inc
mov
xchg
rcl
adc
mov
int
icebp
sbb
frstor
les
adc
xchg
dec
pusha
lahf
inc
aaa
lcall
test
add
incb
imul
xchg
or
out
cld
js
cwtl
decl
decl
dec
mov
nop
push
add
mov
jmp
fs
jg
mov
adc
jns
and
stos
hlt
sbb
leave
iret
stc
insb
xchg
jo
lahf
std
cmp
stc
push
arpl
lahf
mov
mov
lret
xchg
sub
cmp
shll
mov
sahf
sbb
inc
push
jp
icebp
dec
xor
lods
les
xlat
mov
repnz
test
negb
sar
inc
mov
in
adc
xchg
sub
out
scas
push
xchg
in
mov
rcll
jno
aad
inc
mov
dec
mov
sbb
push
sbb
mov
cli
sub
inc
mov
and
pop
dec
shlb
mov
xor
rclb
cld
and
cli
pop
push
stc
cmp
cmc
ftst
cmp
dec
sbb
js
lret
fldt
decb
inc
and
incb
hlt
sub
outsl
mov
sahf
push
stc
or
popf
incb
xchg
incb
incb
std
decb
add
ret
es
fsts
loope
or
adc
sbb
adc
rol
out
out
adc
pop
arpl
sbb
daa
mov
lcall
push
int3
mov
add
jae,pt
adc
pushf
cmp
cwtl
and
decb
jg
push
in
in
enter
fstp
mov
fwait
mov
jb
andb
cmp
lcall
insb
xchg
lcall
int3
pop
mov
mov
fadd
push
sub
cmc
incb
pop
dec
jb
ror
sub
push
les
jns
pop
adc
cmp
movsb
sahf
xchg
dec
ss
jo
or
lahf
ficompl
jl
jecxz
push
sub
incb
jle
incb
dec
mov
scas
mov
adc
cmc
mov
push
pop
sub
pusha
lahf
xor
cmp
mov
or
mov
or
and
mov
dec
mov
sub
icebp
fstps
pop
sbb
mov
and
cli
xor
pop
daa
outsb
xchg
icebp
bound
jb
xchg
jo
ss
pusha
lahf
frstor
mov
cld
pushf
sbb
mov
out
push
rorb
loop
iret
or
sar
fwait
xor
sub
mov
in
subl
outsl
or
inc
sub
fdivs
sbb
and
xlat
sub
adc
lahf
jp
aad
mov
and
daa
jno
idiv
ret
int
xchg
out
mov
jb
loope
jge
es
push
icebp
incb
fisubrl
shr
push
test
popf
incb
call
pop
xchg
mov
int3
scas
packssdw
fsin
xlat
jg
sub
aas
pop
testb
pop
mov
pop
mov
mov
cmp
inc
or
aad
test
incb
xchg
xchg
jb
sbb
das
fidivrl
push
mov
mov
out
cld
insb
xchg
sub
mov
repz
idiv
mov
es
loop
repnz
dec
sub
inc
sbb
fs
push
fmul
jmp
jno
insl
add
decb
mov
mov
add
xchg
add
push
or
rorl
test
jne
lds
mov
loop
std
imul
lods
push
inc
mov
clc
adc
fstpl
movsl
add
repz
enter
xor
outsb
xchg
lods
rclb
dec
scas
lcall
xlat
and
inc
mov
stos
jle
push
mov
gs
testb
cmpsl
idivl
mov
push
cmpsl
gs
out
aam
jae
and
push
stc
mov
mov
pop
xchg
jno
xor
repz
in
aad
movsb
fisubs
es
mov
inc
mulb
push
repnz
ss
cmpsl
xchg
pop
in
mov
sahf
and
popa
pop
and
packsswb
sar
push
icebp
sbb
fwait
jne
mov
inc
mov
lds
stc
incb
stc
dec
cmpsb
addb
addr16
mov
in
lods
dec
mov
scas
push
xchg
add
jecxz
cmpsl
aas
push
orl
inc
mov
hlt
pop
fldt
aam
cltd
ret
hlt
xor
mov
sub
push
cmp
insl
stos
sbb
je
lret
push
ret
pop
xchg
stos
inc
mov
ds
movsb
push
js
inc
mov
outsb
xchg
decb
icebp
incb
cli
loope
icebp
decb
test
cmp
xlat
xor
mov
dec
mov
or
mov
sti
stos
jp
cmc
ficompl
shrb
ret
sahf
mov
stos
movsb
push
lods
mov
movsl
mulb
mov
xchg
xchg
movsb
xchg
jle
popf
decb
rclb
in
jecxz
mov
dec
mov
orb
pop
sbb
jno
sub
popf
incb
movsb
jp
scas
cwtd
lods
ret
out
test
push
inc
mov
lahf
addr16
pop
and
in
pop
lret
in
xor
sti
jmp
add
mov
and
push
xchg
rclb
das
out
cmpsl
mov
dec
lods
shl
push
xor
lret
es
and
outsb
xchg
fisubl
in
push
stc
adc
sub
add
std
fimuls
mov
sbbb
mov
pushf
jne
stos
cli
mov
in
or
decb
pop
add
outsl
sahf
lea
sar
xor
cld
mov
push
scas
out
mov
das
xor
push
incb
xlat
jae
inc
mov
into
adc
insb
xchg
gs
fstl
popa
cmp
movsb
aad
mov
pop
mov
mov
mov
inc
xor
fsin
and
adc
xor
aad
xchg
sti
mov
fsin
xlat
mov
add
outsb
xchg
out
das
mov
ljmp
stc
ljmp
aam
mov
pop
not
scas
push
stc
ljmp
add
and
mov
scas
xlat
pop
inc
mov
enter
insb
xchg
cmp
mov
jge
mov
shrb
cmpsl
test
sbbb
cld
mov
pushf
or
leave
sub
idiv
filds
stc
and
jecxz
inc
adc
dec
sub
sbb
jbe
pop
aaa
inc
aad
pop
hlt
xchg
movsl
notb
sahf
sbb
nop/reserved
push
ljmp
mov
out
push
bound
cmpl
gs
int3
xor
cmp
inc
pop
xor
loopnew
cld
mov
cwtl
lds
fsin
fildl
jbe
lahf
mov
push
or
lcall
scas
push
icebp
sbb
and
decb
fsubs
push
icebp
fs
bound
andb
sub
incb
fcmovnu
jle
lret
mov
lds
adc
pusha
lahf
decb
das
jmp
fnsave
or
push
add
les
fsin
sub
pop
lea
test
sar
dec
and
pop
rolb
pop
jmp
xor
repnz
in
cmpsb
mov
lret
adc
inc
mov
and
mov
xor
sti
aam
lcall
sub
jo
jne
shlb
repnz
sbb
pop
repnz
addr16
xchg
adc
cmp
loopne
mov
jno
out
mov
jge
icebp
decb
sub
incb
inc
mov
sahf
add
mov
lock
insl
mov
sbb
imul
call
incb
idiv
and
mov
mov
lret
mov
sub
fisubrl
addr16
xchg
aaa
hlt
mov
pop
jns
jne
repz
int3
les
addl
sahf
sbb
das
lods
mov
cs
mov
xor
fstpt
or
incb
sar
bound
add
cwtd
popf
es
call
addb
push
hlt
cmp
inc
mov
push
pop
push
rolb
adc
ljmp
dec
mov
icebp
jmp
outsb
xchg
cmp
sbb
sbbl
int3
mov
mov
push
push
ret
xchg
pop
push
push
repz
mov
mov
cmpsb
aaa
insb
xchg
imul
adc
lahf
push
lods
and
mov
int
dec
lret
insb
xchg
cwtd
decb
roll
bound
outsb
xchg
decb
cmp
add
incb
inc
mov
mov
cli
mov
clc
movsl
loopne
les
and
xor
test
xor
xor
pop
adcb
add
dec
mov
outsl
jne
not
add
insl
call
mov
push
mov
jp
movsl
mov
cmp
mov
mov
das
cli
outsl
mov
outsl
inc
mov
stc
cmpsb
add
adc
mov
outsb
xchg
incb
mov
insl
adc
pop
and
dec
mov
cmp
mov
stos
adc
xchg
push
mov
jo
mov
decb
and
incb
std
stc
lcall
repz
mov
push
pop
fsubr
dec
mov
xor
cwtd
fs
in
popa
sbb
mov
sub
cld
or
ss
int
adc
xor
pop
ds
pop
mov
add
incb
notb
add
lcall
test
idiv
test
cmp
or
inc
test
stos
addr16
lods
add
fstps
mov
cmp
out
add
ret
mov
xor
push
push
outsl
sub
sti
cmp
cmp
dec
fstl
mov
push
scas
les
push
jle
frstor
pop
mov
lods
rep
out
stos
shrl
xlat
jmp
arpl
mov
lahf
shll
cli
cmpps
dec
mov
jnp
push
decb
fs
mov
jle
mov
out
add
aad
sti
gs
outsb
xchg
cwtl
dec
mov
and
jns
ljmp
cmpsl
fcom
cmp
outsl
push
repnz
xchg
sarl
and
jo
pushf
jae
and
jno
shlb
push
icebp
xchg
insb
xchg
decb
push
lods
or
mov
adc
mov
and
inc
mov
clc
or
fsubrp
add
xor
adc
sbb
cmp
inc
cmp
faddl
mov
or
arpl
or
decb
decb
pusha
lahf
incb
movsb
inc
call
inc
mov
test
imul
jecxz
adc
in
sub
jg
xchg
in
jge
cwtd
out
mov
arpl
mov
lock
testb
pop
lret
adc
cmp
addl
adc
jle
mov
ret
pop
in
push
cmp
push
outsb
xchg
idivl
imul
dec
mov
imul
repz
sbb
push
icebp
incb
stos
fcompl
xchg
rol
je
lea
xor
xchg
jns
xor
pop
shrb
imul
lahf
aaa
xor
pop
bound
stc
out
in
addr16
fiaddl
mov
aad
xchg
inc
sbb
and
sub
xor
std
lahf
cmpl
stc
nop
out
pop
lcall
mov
sub
ja
xor
and
cltd
sahf
jmp
fcmovbe
or
int
push
stc
js
xchg
cwtd
aas
cs
sub
mov
jae
shlb
flds
add
add
imul
xchg
icebp
mov
inc
mov
and
jg
call
jae
movsl
lock
cld
push
jp
jnp
out
mov
outsl
push
inc
jae
aas
out
mov
out
stc
jns
jne
iret
lret
aam
cmp
stos
imul
mov
pop
xchg
mov
lahf
add
sbb
mov
dec
cmc
insl
cmp
aad
lea
outsl
js
jp
pop
adc
dec
xor
jmp
das
inc
popa
fucomip
aaa
fld
adc
sar
mov
test
add
rcll
mov
scas
aaa
push
in
add
out
mov
ljmp
stc
out
dec
int3
jecxz
adc
stc
or
mov
xchg
cmp
and
addr16
and
js
adc
incb
inc
mov
popa
dec
mov
jae
add
pushf
xchg
bound
pop
dec
cltd
adc
pop
sub
icebp
sub
sub
negb
ss
decb
jecxz
sar
sbb
sbb
mov
inc
mov
jo
fdivs
jno
xchg
rcll
sar
mov
orl
fnstenv
ret
dec
add
pusha
lahf
mov
cmp
bound
stc
sbb
scas
fidivrl
test
push
inc
ret
dec
cmp
xor
popf
movsb
mov
mulb
das
sahf
mov
icebp
lock
aaa
xchg
cmovbe
fs
mov
cmp
jno
sub
pop
into
sub
xlat
imull
cmp
sbb
mov
cmp
fldenv
sarb
sbb
dec
mov
test
ret
clc
xor
movsl
pop
mov
mov
push
push
out
dec
mov
cwtd
mov
cmc
insl
mov
mov
xchg
dec
aaa
pop
in
adcl
lcall
sbb
outsb
xchg
jg
pop
gs
push
icebp
incb
pusha
lahf
decb
xor
shll
sub
sub
idiv
rol
adc
inc
mov
cwtd
sub
xor
sahf
aam
and
mov
or
incb
stc
decb
idiv
loope
das
lods
rol
or
cmp
daa
leave
push
decb
jge
call
incb
sbbb
xchg
xchg
loope
out
mov
fstps
sti
mov
dec
fdivl
push
xchg
pop
xchg
dec
mov
ret
sub
sbb
incb
mov
inc
mov
ja
mov
test
shrl
push
fistps
mov
inc
mov
adc
std
cmpsl
fbstp
inc
pusha
lahf
xor
cmp
incb
lea
adc
cmpsl
pop
fldenv
mov
mov
pop
dec
in
mov
sar
fnsave
movsb
in
fs
adc
hlt
mov
sbb
in
push
push
in
mov
dec
mov
ds
pop
sub
cmpsb
je
jge
xchg
decb
imul
icebp
jns
dec
mov
dec
aaa
lret
popa
push
call
aad
cmp
sub
mov
aas
fwait
test
imul
shll
lret
sub
mov
jns
or
sbb
mov
inc
clc
addr16
cmc
pop
shrl
inc
mov
es
imul
lcall
test
enter
incb
cmpsb
cmc
jbe
aad
inc
pop
notb
pop
lods
mov
mov
xchg
adc
push
mov
pop
jmp
gs
stc
mov
pop
mov
dec
push
or
or
sbb
push
lods
fcom
or
aaa
cwtd
pop
mov
sbb
adc
jb
dec
mov
jge
xchg
pop
cli
and
jns
je
xchg
xchg
add
pop
add
pop
or
sub
push
int3
mov
into
xchg
clc
insl
mov
jge
or
pop
adc
xchg
loop
mov
rorl
jae
inc
dec
mov
dec
repnz
test
fwait
aam
cmp
and
cltd
xor
dec
add
cwtd
push
loop
and
insb
xchg
pop
xchg
dec
cwtl
int3
xchg
xchg
test
stc
xor
dec
mov
outsb
xchg
sbb
mov
lock
and
hlt
or
sarl
cld
jnp
push
loopne
jno
pop
dec
mov
dec
mov
popf
mov
jnp
push
jo
call
fwait
jg
sar
jl
xlat
dec
and
incb
xor
insb
xchg
inc
ss
cmc
cmp
inc
enter
decb
idiv
testl
ljmp
js
xchg
push
or
sarl
mov
inc
mov
and
push
leave
call
lahf
icebp
in
enter
pusha
lahf
mov
jae
std
jne
fsubrs
imul
ret
lds
add
incb
push
jns
fs
dec
push
mov
jne
cs
mov
arpl
mov
or
ror
pusha
lahf
inc
outsb
xchg
cld
ss
mov
cwtl
ret
icebp
int3
inc
cld
sarl
out
sbb
jne
out
mov
cmc
mov
aas
or
sub
decb
test
ficompl
hlt
add
jb
mov
in
push
daa
loope
sar
ret
iret
inc
mov
inc
mov
incb
decb
xchg
mov
cmpsl
mov
imul
adc
incb
stc
cmpsb
adc
sub
mov
fldcw
pusha
lahf
incb
sar
mov
ds
mov
scas
push
mov
adc
xor
stc
mov
ljmp
pop
aas
pusha
lahf
outsl
lret
gs
addl
xlat
pop
fs
lcall
xchg
inc
cwtl
pop
push
aaa
das
movsl
int3
dec
mov
outsb
xchg
popa
mov
adc
adc
adc
pop
loopne
icebp
incb
stc
incb
cmpsb
xchg
cmpsl
in
xchg
or
or
cltd
pop
adc
push
sub
adc
mov
and
out
jne
adc
mov
pushf
cmpsb
out
cs
repz
push
adc
shll
dec
mov
popf
dec
mov
xchg
add
pop
aam
movsl
push
inc
scas
mov
lahf
push
shlb
cmp
xchg
or
inc
xchg
jp
mov
fs
adc
outsl
mov
imul
xlat
aam
cmp
out
mov
jns
outsb
xchg
sub
mov
mov
jnp
in
leave
adc
sbb
jp
xchg
dec
js
pop
push
loopne
lahf
cmpsl
jmp
lds
or
pop
movsl
sbb
sub
adc
ds
mov
std
and
mov
and
push
shlb
incb
mov
xlat
das
hlt
inc
imul
and
mov
pop
addr16
jmp
pop
push
xor
ljmp
sar
dec
push
mov
add
out
or
adc
add
inc
cltd
pop
sub
mov
ss
xchg
xor
into
es
push
fmul
les
sbb
sar
jnp
inc
jp
repz
hlt
push
cmp
adc
xor
filds
mov
add
repz
xchg
outsb
xchg
cs
jg
xchg
mov
hlt
mov
into
pop
inc
mov
xor
cmpl
hlt
js
cltd
inc
addr16
decb
or
mov
adc
pop
jl
adc
sbb
add
pop
dec
mov
aad
mov
ljmp
movsl
mov
addr16
pop
push
out
movsl
mov
sub
fsin
ja
mov
mov
std
movb
scas
push
push
ja
pop
loopne
and
mov
rcr
sbb
ss
and
xchg
push
icebp
cli
dec
in
xor
out
sbb
mov
and
and
cwtd
repz
scas
shll
aas
fs
adc
and
sub
icebp
cld
outsb
xchg
decb
sti
jae
and
hlt
fiadds
jmp
int
jmp
mov
fists
push
and
incb
sub
mov
sti
pusha
lahf
decb
jecxz
sub
sbb
pusha
lahf
fiadds
sarl
jno
out
mov
jb
cmp
std
stc
and
stos
dec
dec
mov
xchg
mov
mov
jl
or
push
xor
adc
dec
pusha
lahf
decb
decb
icebp
fwait
out
lods
jnp
loopne
int
pop
or
jbe
lret
add
xchg
ljmp
inc
dec
push
roll
cmc
fsubrp
lock
xchg
pop
addr16
mov
jg
std
push
xlat
bound
and
in
or
add
stos
mov
daa
cmc
xor
cmpsl
in
mov
ret
push
cmpsb
cmp
pop
dec
mov
outsl
adc
out
iret
jge
inc
lds
jo
add
out
icebp
incb
cmc
ret
cmp
out
mov
in
mov
shll
repnz
cmc
icebp
mov
mov
xorl
xchg
cmpl
pop
test
mov
or
incb
jb
lds
int3
mov
mov
xchg
repz
hlt
mov
ljmp
and
jno
mov
inc
ret
imul
jne
push
in
and
test
stc
xchg
aam
mov
test
push
stos
fwait
hlt
xchg
mov
xchg
xchg
adc
pop
mov
lea
cmpsl
push
mov
sahf
int
call
jle
sub
dec
cmp
mov
cltd
outsl
clc
pop
lock
jne
pop
sub
insl
movsb
jge
push
mov
mov
add
cld
push
insb
xchg
pop
jecxz
mov
pop
out
add
dec
mov
pop
inc
mov
xchg
and
out
arpl
pop
leave
jae
push
fcmovne
fisubrl
jp
jmp
push
leave
in
mov
adc
in
fbld
rcrb
in
call
mov
add
xor
loope
pop
pop
pusha
lahf
cwtl
xchg
xor
mov
add
cmp
das
xor
aaa
test
in
bound
decb
scas
sbbb
jne
and
decb
int3
ja
sbb
mov
push
stc
dec
decl
mov
mov
jmp
orl
mov
xchg
daa
jo
cmp
jl
lret
adc
aam
fsin
fstp
mov
inc
mov
cltd
cld
sub
xchg
pop
adc
xchg
pop
sub
mov
dec
mov
inc
out
andb
les
bound
cmp
test
push
punpcklwd
sar
aaa
test
fstl
insb
xchg
dec
lahf
bound
and
test
movsl
repz
out
repz
fwait
sbb
mov
mov
outsb
xchg
gs
or
mov
test
cmpsl
mov
xor
out
fsubr
xor
fsin
xchg
addr16
int
in
pop
addr16
mov
xlat
cmp
mov
mov
push
stc
decb
add
sbb
jle
jmp
in
inc
mov
repz
pop
jge
pusha
lahf
and
pop
dec
mov
stc
ret
call
es
jl
sbbl
addb
inc
je
or
ja
add
cli
jl
push
adc
dec
mov
adc
aad
dec
mov
scas
pop
inc
mov
addl
decb
and
div
fcmove
and
out
aam
inc
mov
out
xchg
mov
cwtl
dec
mov
daa
cmp
mov
stos
xor
sbb
mov
xchg
incb
jg
pusha
lahf
cmp
aas
adc
xchg
cmc
adc
sarl
jo
jns
insl
mov
mov
imul
andb
fists
fsin
gs
sbbb
fwait
pop
sahf
sub
or
testb
incb
ja
int3
xor
outsb
xchg
lods
jbe
jmp
dec
sahf
imul
push
sahf
pop
add
fiadds
imul
repnz
jle
pop
jb
fidivs
outsb
xchg
jne
rcll
scas
imull
lret
int
aad
mov
dec
adc
lods
je
push
fwait
mov
add
decb
pusha
lahf
das
pop
sub
pop
pop
cmp
loopne
sbb
rclb
push
pop
in
xchg
scas
sub
inc
jmp
repnz
ror
mov
jbe
cs
inc
mov
mov
stos
addl
mov
adc
inc
mov
and
pop
test
push
sarl
push
inc
repz
pop
inc
mov
sahf
shl
adc
decb
jne
dec
mov
xchg
and
mov
add
lea
stc
dec
fsubs
cmc
inc
loope
int
out
add
mov
jae
call
movsl
pop
add
inc
mov
lea
stc
xor
iret
pop
std
aam
ss
xor
add
std
outsl
pop
push
push
xor
incb
push
dec
je
push
icebp
jp
sbb
mov
jge
out
hlt
inc
mov
jp
adc
andb
dec
mov
popf
jne
sbb
decb
xchg
sub
les
loop
test
mov
rclb
lods
cwtl
xchg
push
or
decb
shll
rolb
pop
push
mov
pop
adc
mov
lret
cmp
mov
or
in
mov
sahf
and
test
push
mov
add
mov
xchg
fsin
mov
push
jno
repz
add
mov
imul
cwtd
incb
pop
mov
or
xlat
dec
stc
rol
xor
cmc
popa
and
incb
idiv
cwtl
call
lds
mov
or
test
repnz
decb
adc
pop
mov
imul
mov
cmc
imul
out
adc
xchg
xchg
adc
and
jmp
cwtl
loopne
in
mov
or
incb
sar
cmp
popf
in
jp
push
lret
pop
out
popf
push
or
imul
cmp
fadds
stc
incb
sub
cmp
stos
roll
pusha
lahf
decb
jle
loope
push
icebp
jmp
cld
ja
dec
fcmovb
mov
subb
incb
cmp
cmp
sarl
mov
cwtl
mov
xor
push
daa
imul
mov
or
mov
in
sbb
mov
xorl
in
push
stos
sbb
decb
packsswb
imul
stos
or
idiv
rorb
dec
mov
les
clc
sub
lret
out
push
or
mov
loope
xor
fadds
sub
xchg
mov
shl
inc
mov
inc
mov
repz
cmp
loop
std
faddl
sbbb
inc
mov
hlt
or
cli
mov
stc
repnz
xor
int3
adc
mov
xchg
pop
inc
xchg
pop
xor
sub
mov
roll
cmpsl
mov
and
movsl
xor
call
mov
dec
repz
xchg
decb
jns
fwait
outsl
sbbb
xchg
lcall
cmp
std
mov
mov
mov
lods
push
fwait
aas
mov
stos
ret
fwait
inc
mov
gs
cmpxchg8b
lret
fldcw
mov
mov
jbe
sub
mov
jle
sbb
sti
mov
mov
jge
movsl
cmp
stc
es
xor
idiv
stos
or
out
jmp
inc
mov
sti
loop
mov
or
jecxz
stc
adc
add
test
inc
pop
das
cmp
fwait
clc
or
test
mov
aam
mov
imul
push
stc
inc
jno
stos
icebp
out
enter
inc
mov
insb
xchg
and
mov
jp
xor
lahf
cmpsl
pop
adc
cmpsb
cwtd
decb
pop
orb
mov
push
cltd
gs
inc
inc
mov
in
es
inc
loope
mov
xchg
lods
dec
lods
jge
push
mov
fwait
dec
imul
xchg
incb
lret
mov
cwtd
mov
pop
adc
out
xor
mov
repz
incb
jmp
xchg
roll
out
cwtd
incb
fadd
xor
mov
jmp
mov
mov
dec
dec
lods
icebp
std
clc
mov
test
repz
mov
cwtd
sbb
movsl
xchg
lret
bound
insb
xchg
pop
cli
fiadds
test
cmpsl
dec
adc
daa
jne
and
xor
or
xor
fwait
jbe
dec
mov
mov
add
lahf
add
out
inc
dec
mov
fcoms
add
popf
fbstp
dec
and
fldl
aad
inc
adc
mov
lret
or
cmp
push
lods
or
cwtd
mov
sub
and
pop
mov
ret
cmpsb
pop
dec
dec
and
sbb
stc
es
adc
xchg
into
mov
cmpsl
clc
pop
sbb
xchg
out
icebp
push
decb
imul
jae
xchg
jl
out
add
insb
xchg
nop
out
pop
popa
movsb
sbb
in
xorl
jb
mov
clc
movsb
sub
mov
fisttps
lret
in
insl
cs
mov
add
incb
pop
mov
dec
mov
xor
fidivrs
xchg
decb
rcr
push
stc
sbb
rolb
loop
pop
shll
cmp
add
popl
jbe
dec
mov
cwtd
push
mov
mov
xor
lahf
pop
xor
inc
xchg
jge
jg
cmpsl
add
clc
cmp
mov
mov
and
inc
cli
aaa
adc
add
cmc
adc
xor
adc
pusha
lahf
jg
mov
cltd
insb
xchg
mov
push
mov
pop
dec
mov
pop
in
adc
inc
icebp
xor
inc
mov
out
into
or
push
mov
test
decb
lods
pop
push
pop
or
in
mov
mov
inc
mov
daa
ja
and
mov
and
xchg
icebp
pop
jo
bound
and
test
lock
adc
cmp
xorl
xchg
in
loope
cld
js
out
cmp
imul
nop
scas
daa
mov
lods
adc
cmp
popa
xor
test
aad
cmpsb
movsb
pusha
lahf
je
or
jnp
roll
test
sti
incb
mov
decb
cmpsl
movsb
in
push
fwait
cli
xor
and
pop
sub
adc
dec
mov
hlt
mov
push
test
jle
inc
jg
mov
mov
pop
push
sbb
int
jmp
xor
mov
rorb
bound
mov
or
sub
jne
popa
rorl
jge
jl
mov
inc
and
dec
and
imul
mov
jp
in
mov
xor
into
out
roll
scas
out
or
cwtl
int
mov
cld
jle
les
cmp
cmp
sub
cwtl
int3
lds
dec
mov
push
push
dec
mov
scas
addr16
or
pop
bswap
dec
mov
add
incb
mov
push
fstpl
xchg
pop
bswap
sti
iret
sbb
mov
lods
push
add
decb
jle
sub
push
ja
dec
inc
sub
icebp
cmp
jecxz
jecxz
jnp
sti
sbb
xchg
jl
int
idiv
pop
mov
outsb
xchg
out
pop
sub
mov
jle
scas
dec
mov
mov
fdivs
adc
sub
mov
movl
cwtl
lds
test
adc
xlat
jo
inc
inc
mov
ficoml
xchg
mov
add
cld
je
icebp
push
jo
xchg
mov
rcr
or
cld
stos
pop
adc
in
jne
mov
xorl
jae
push
sbbb
sub
insb
xchg
incb
hlt
filds
ds
fs
cmp
clc
ss
arpl
fsubl
cltd
mov
fsts
lcall
cmp
int3
pop
push
jecxz
repnz
mov
push
nop
pop
das
mov
pop
bound
inc
fistpll
popf
pushf
mov
sahf
jnp
aaa
dec
mov
mov
fisttpl
mov
ss
in
sub
or
mov
jg
sti
filds
pusha
lahf
decb
adcb
mov
lods
jl
or
decb
icebp
pushf
cld
jne
add
lods
xor
and
incb
adc
les
cmp
push
and
loope
sbb
push
dec
mov
cwtl
pop
imul
rol
mov
shrl
je
xchg
leave
jbe
es
push
jbe
adc
pop
push
out
jne
icebp
and
mov
fistpl
popf
decb
xor
add
lock
jne
xchg
push
divl
rcll
lret
mov
sahf
xchg
ret
lea
in
mov
std
push
daa
inc
mov
cltd
adc
pop
arpl
xor
xchg
sub
xor
sti
inc
stos
or
pop
lcall
xchg
decb
hlt
ficompl
add
and
dec
dec
add
testl
and
stc
dec
aad
xor
aaa
pop
push
push
cmp
lea
mov
outsl
mov
adc
xchg
sub
xchg
dec
mov
dec
cmp
sarb
negl
cmp
jge
mov
int
and
decb
push
mov
adc
mov
dec
push
icebp
addr16
mov
sar
xchg
loopne
sar
ret
lods
mov
incb
scas
repnz
adc
xor
push
cmp
mov
cs
andb
loop
je
sub
fstps
mov
arpl
pop
jbe
jb
test
shl
sbb
push
mov
dec
inc
jl
sbb
mov
mov
sar
fistl
hlt
or
mov
lahf
dec
mov
or
sbb
popa
ret
push
stc
incb
ret
mov
inc
and
mov
movl
inc
mov
add
rorl
decb
icebp
incb
and
incb
js
idiv
fildl
push
jecxz
je
std
jg
lret
das
xor
repnz
push
push
mov
mov
sar
mov
xchg
scas
clc
cmpsl
cs
jb
pop
pop
adc
push
icebp
sub
and
adc
outsb
xchg
icebp
mov
push
stc
call
inc
push
icebp
decb
cmc
out
xor
mov
pop
test
push
sbb
add
dec
jo
leave
dec
mov
lret
aas
cmpsl
add
leave
xlat
in
ss
mov
fwait
loopne
mov
outsl
mov
in
inc
mov
testb
and
incb
decb
add
push
mov
adc
inc
repnz
sub
ja
repz
insb
xchg
mov
arpl
cmp
pusha
lahf
cmp
fwait
and
jb
cltd
decb
notl
test
mov
or
jecxz
push
icebp
xor
adc
adc
incb
xchg
xchg
stc
inc
inc
sub
stos
cmc
test
insl
add
popf
add
cwtd
jnp
stc
fucomp
fcomps
mov
mov
mov
mov
pop
rcll
stos
leave
pop
pop
sub
icebp
cmc
int
dec
xor
cli
sbbb
lret
js
lods
jbe
aad
inc
es
hlt
adc
mov
or
mov
mov
dec
sbb
adc
fldpi
push
mov
xorl
cwtd
decb
bound
lock
bswap
inc
mov
mov
arpl
enter
repz
inc
mov
lahf
xchg
lret
rclb
add
cld
sbb
push
lret
sahf
daa
cs
insl
mov
test
xchg
notl
cmp
fsubp
cltd
movsb
mov
inc
mov
nop
lret
lds
in
mov
lcall
xchg
pop
aaa
std
jno
mov
dec
rcll
pop
or
cwtd
mov
jne
xor
mov
ret
std
mov
or
and
imul
mov
arpl
std
incb
outsb
xchg
jb
and
idiv
mov
mov
ficomps
sti
push
push
cmc
ret
fbstp
xlat
fisttpl
sbb
pop
loope
lret
jecxz
xchg
inc
xchg
shlb
gs
loop
testl
test
mov
lods
push
stc
out
dec
mov
loopne
popf
in
ja
fmul
add
sahf
or
incb
aam
jp
outsl
nop
inc
mov
xchg
push
mov
mov
fwait
sbb
push
incb
movsb
push
rcrb
fisubrs
inc
jl
rol
xchg
decb
mov
test
cmp
and
sbb
push
sti
jne
gs
mov
push
xor
push
das
pop
push
mov
in
mov
rcrl
cmp
daa
enter
adc
jnp
mov
xchg
inc
mov
push
enter
out
lds
inc
mov
js
adc
fs
imul
in
cmc
push
and
decb
stos
xchg
add
movsb
add
cmp
mov
xlat
mov
popf
loopne
xor
int3
ja
lahf
mov
je
insl
sbbl
pop
xchg
sbb
out
cwtl
cltd
shll
scas
sti
aam
inc
mov
ret
leave
inc
mov
dec
repz
scas
pop
xchg
sbbl
sar
cmp
daa
ljmp
jg
mov
rcr
shrl
xor
je
hlt
jne
sub
cwtd
xchg
lods
andl
xchg
push
add
jne
sar
mov
xchg
pop
icebp
pop
xor
dec
sbb
mov
out
push
icebp
lahf
lea
rcrb
mov
shrb
sar
mov
js
push
xor
mov
shrb
pop
loope
sbb
mov
popf
adc
xlat
inc
or
xor
adc
test
jmp
jg
or
syscall
mov
mov
pop
lea
and
and
mov
shlb
or
fwait
mov
mov
sub
jp
incb
idiv
jp
loop
xchg
iret
lcall
das
subl
test
lods
cmp
pushf
lret
call
xchg
push
ljmp
jbe
sbb
and
std
push
incb
mov
sbb
fsubl
cld
psubusw
xor
inc
mov
push
nop
imul
aam
cmp
out
in
and
imul
push
cmp
cli
ret
mov
sbbb
scas
sub
and
cmp
fscale
push
dec
mov
divl
sbb
cld
bound
mov
pop
cmp
mov
repz
or
decb
or
cmp
in
add
pshufw
int
out
dec
mov
xor
and
ds
xor
xlat
sbb
movsl
nop
scas
lret
sub
decb
jp
mov
mov
lahf
sarl
loop
xchg
jle
adc
inc
cmp
ds
pop
mov
imul
es
pop
cmpl
mov
cmp
pusha
lahf
incb
xor
ret
sarl
mov
icebp
lahf
cmp
dec
popa
xchg
add
add
pop
sbb
cmpsl
mov
dec
cmp
mov
decb
xlat
fimull
mov
sbb
sub
sar
ds
mov
mov
pop
push
fs
in
dec
in
xchg
adc
repz
and
lods
adc
sbb
sti
dec
insb
xchg
decb
mov
sti
jb
test
mov
push
enter
xlat
jno
push
xchg
cmpsl
iret
ljmp
inc
ljmp
shl
xchg
cmp
push
icebp
push
pop
xchg
pop
jno
popa
dec
mov
add
aas
imul
iret
sub
loope
or
lcall
js
idiv
lret
testb
pop
pop
pop
in
jno
jg
fsin
pop
mov
test
call
dec
mov
sub
jge
dec
popf
mov
stos
mov
imul
je
mov
ja
sbb
les
xor
fiaddl
adc
push
aad
mov
scas
je
xchg
inc
jmp
ret
ds
xor
jb
sarl
push
pop
and
popf
fiaddl
cli
lret
call
mov
out
mov
xchg
xor
ret
pop
push
and
lods
sub
decb
lods
mov
cltd
test
pop
popf
out
into
pop
imul
pop
inc
dec
inc
call
lods
xor
mov
adc
jmp
std
pop
and
pop
repnz
cld
loopne
ds
aad
jb
fsin
addb
out
xchg
adc
aam
sub
incb
in
fsin
es
repnz
mov
popf
mov
sbb
subb
sbb
rcrb
idiv
stos
test
mov
lahf
mov
or
xchg
into
cltd
xor
xlat
incb
push
cmpsl
xchg
neg
xchg
lea
sbb
popl
mov
negl
jle
iret
push
cmp
hlt
jns
leave
jne
test
insb
xchg
xor
xor
repz
mov
dec
out
xchg
clc
insl
mov
inc
mov
sub
dec
fldcw
xchg
out
add
mov
push
gs
pop
lods
mov
ss
incb
xor
mov
jbe
dec
sub
adc
imul
dec
mov
mov
xchg
inc
stos
mov
pop
outsl
movsb
adc
push
out
inc
js
fdecstp
dec
arpl
icebp
xchg
xor
sbb
decb
xchg
cmpsl
rcll
fildll
jle
cwtd
incb
mov
xor
ds
mov
pop
gs
lea
xor
push
pop
cs
jecxz
mov
jmp
push
jg
push
stc
lods
test
cmp
xor
push
push
xorl
shl
int3
mov
mov
ja
andl
sbb
inc
cltd
dec
mov
mov
mov
out
or
nop
call
mull
ljmp
mov
jae
lds
jmp
cwtd
decb
testb
cwtd
in
stos
push
ja
jg
gs
and
jb
sbb
sbb
add
popf
xor
adc
out
icebp
dec
mov
sbb
stc
pop
jecxz
xchg
imul
xchg
nop
pop
or
pop
icebp
cld
shll
jl
out
lret
jae
pusha
lahf
mov
test
jnp
rclb
fwait
aad
loop
outsl
sub
nop
jge
fsin
test
add
stc
fisubrl
jmp
scas
cmp
dec
mov
stos
xor
cwtd
outsl
stos
das
xor
inc
mov
sub
decb
in
jmp
pop
cmp
fwait
gs
dec
mov
mov
cwtd
scas
xchg
mov
incb
xchg
sub
rclb
int
shr
xor
xchg
xchg
pusha
lahf
sti
loop
loope
mov
stos
dec
push
xor
mov
adc
lcall
cs
jle
cmp
inc
mov
les
arpl
cmp
dec
dec
mov
in
cmp
adc
aam
adc
iret
and
cmp
and
decb
decb
icebp
incb
arpl
test
jnp
push
mov
cmpsb
pop
sub
ja
sahf
lods
test
push
inc
adc
push
ljmp
jnp
js
lock
adc
jmp
test
sub
xor
jmp
loop
sar
cmp
jl
arpl
lret
push
stc
and
cmc
jno
jl
loope
cmp
adc
lcall
adc
mov
pushl
pop
iret
ret
sub
pop
xchg
jb
push
mov
mov
push
clc
mov
cwtl
inc
pop
fstl
xchg
dec
inc
mov
outsb
xchg
incb
mov
aaa
mov
std
incb
cmp
in
pop
fs
xchg
stos
inc
inc
add
and
inc
icebp
enter
loope
sar
and
addr16
sbb
aaa
inc
mov
je
cltd
sub
fs
cwtd
fisttps
icebp
and
outsl
mov
subl
mov
popf
test
int
cs
aam
mov
pop
pusha
lahf
mov
jge
sbb
enter
sub
sub
sub
mov
mov
popf
mov
sbb
mov
sbb
loope
mov
jmp
lock
adc
adc
inc
push
stc
incb
xlat
outsl
cwtl
jae
push
cs
xchg
hlt
rclb
std
pop
fnstenv
cmp
mov
xchg
or
movsb
inc
mov
adc
sti
adc
in
test
pusha
lahf
inc
sbb
decb
or
and
jbe
jecxz
push
scas
aam
xlat
xchg
sub
in
or
and
dec
mov
dec
test
mov
pop
insl
mov
outsb
xchg
mov
rcll
add
xchg
pushf
mov
add
mov
push
mov
sbb
out
mov
jne
popa
adc
repz
or
jno
fstpt
ret
mov
xor
mov
mov
jns
jl
xor
lret
es
in
out
add
jnp
mov
daa
jns
arpl
orl
pusha
lahf
decb
inc
mov
inc
mov
sti
sub
int3
jp
aas
pop
mov
fidivl
adc
pop
sar
or
std
add
cmpsl
int3
or
negb
or
mov
jp
cmp
lea
mov
les
lahf
daa
jmp
js
or
scas
or
xchg
frstpm(287
mov
cmp
std
cmp
fsin
adc
fmuls
frstor
xchg
decb
icebp
pushf
inc
sti
enter
push
jge
mov
filds
mov
pop
rclb
movlhps
sub
daa
mov
and
and
inc
addr16
xchg
bound
mov
mov
test
mov
push
xor
out
adc
int
hlt
sub
xchg
cwtl
hlt
dec
mov
dec
mov
fisttpl
inc
into
pop
add
jnp
jmp
mov
sbb
sbb
pop
pop
gs
sahf
and
adc
in
inc
jge
pop
es
cmpsb
lods
or
cmp
fisubs
mov
push
push
scas
rcr
dec
mov
shll
pop
jecxz
mov
cmp
mov
out
addl
adc
stos
mov
repz
adc
mov
inc
mov
mov
out
mov
loopne
jge
jne
fadds
mov
icebp
push
outsl
iret
pop
mov
push
cs
shlb
cmp
cltd
stos
aad
inc
sbb
movl
add
decb
dec
rcrb
cld
imul
stos
cs
push
adc
or
test
pop
shl
xorb
jp
out
or
pop
jbe
fnstcw
shll
xor
and
decb
inc
std
scas
dec
jg
xor
push
jle
inc
mov
into
jne
push
push
aas
adc
std
push
or
xor
pop
pop
ds
iret
sbb
fwait
incb
es
mov
mov
xchg
decb
push
xchg
nop
cmpsb
push
hlt
sbbl
or
loope
mov
mov
daa
sub
inc
mov
pusha
lahf
pop
pop
jecxz
popf
fisttps
dec
js
cmp
jle
in
jbe
xor
orb
loopne
push
sub
sub
aaa
cwtl
push
stc
decb
inc
out
scas
push
int
in
lret
pop
jge
sbb
xchg
in
jecxz
fs
imul
je
push
xor
cltd
outsl
push
decb
sti
loop
ja
stos
or
daa
loopne
xchg
gs
add
inc
int3
push
inc
or
incb
sbb
or
mov
jg
mov
clc
xor
std
sub
mov
ret
stos
arpl
popa
nop
jg
out
mov
jmp
sbb
fmul
mull
jmp
lock
pop
or
push
cltd
xchg
cmp
cwtd
pop
mov
cwtd
push
cltd
mov
daa
cmp
outsl
sbb
pop
fistpll
push
cmpb
pusha
lahf
decb
inc
mov
push
mov
sbb
and
sti
mov
pop
mov
fistpl
fwait
test
fsin
sbb
aam
adc
aad
and
out
mov
insl
cltd
push
cld
test
push
icebp
dec
push
repnz
xchg
push
stc
pop
cltd
add
dec
sti
lds
mov
aad
mov
insl
subb
aas
cmp
sbbl
ret
mov
pop
xchg
test
popf
push
mov
int3
lret
cmp
mov
leave
mov
or
push
mov
call
xor
pop
nop
sub
cld
loopne
sbb
mov
test
iret
pop
mov
adcb
dec
push
xor
mov
xor
push
icebp
mov
sarl
in
clc
pop
mov
cld
mov
std
cmpl
pop
outsl
adc
inc
add
xor
idiv
push
fisubrl
and
decb
imul
sar
das
push
icebp
fisubl
xchg
add
xor
ret
mov
jnp
xchg
in
ficoml
fnstcw
fs
neg
xchg
jne
fstp
push
jmp
jecxz
popa
inc
mov
inc
mov
mov
stc
pop
dec
mov
push
ficompl
cmc
bnd
lods
dec
ret
xchg
xor
fxch
dec
mov
fldenv
mov
icebp
mov
mov
sub
test
call
aad
mov
mov
fildll
int
aaa
or
cmp
div
jbe
cltd
cmpsl
sbb
cwtl
jp
sar
inc
mov
push
stc
cs
adc
fwait
popa
in
or
cmp
loope
dec
inc
push
cmpsl
add
decb
pop
sub
cmp
and
jno
test
outsb
xchg
jae
icebp
int
das
xchg
arpl
or
xlat
decb
mov
mov
fs
push
jnp
mov
xchg
mov
mov
shrb
sbb
rcrl
movsb
addr16
sbbb
sub
daa
stc
enter
dec
mov
mov
cltd
inc
push
out
mov
fdivrs
cs
jae
enter
ljmp
mov
aam
adcl
stos
sbbl
pop
pop
add
decb
scas
mov
insl
insb
xchg
decb
fwait
push
jnp
sti
lea
cmp
xor
mov
test
inc
pusha
lahf
decb
decb
mov
pusha
lahf
mov
ja
fnstenv
mov
mov
mov
xlat
decb
decb
jmp
idivb
sub
pop
in
fwait
aad
out
fxch
pop
movsb
mov
loope
lret
push
stc
decb
jmp
cwtd
out
inc
mov
imul
popf
adc
popf
and
call
movsb
or
fnstsw
fnstenv
aas
xor
sahf
mov
inc
mov
sbbl
jg
ja
add
subb
sub
jbe
popf
aad
jo
cmc
mov
push
ja
clc
ljmp
jg
lret
in
popa
fwait
mov
stos
mov
inc
mov
mov
mov
sahf
xor
or
pop
push
icebp
mov
xchg
xor
or
jmp
cmp
dec
movsl
xchg
rolb
push
jecxz
sti
inc
clc
daa
xchg
jbe
and
out
add
mov
sbbb
push
adc
sbb
fidivrl
mov
loop
idiv
and
xlat
ret
push
sti
sbb
pop
rol
push
push
divb
cwtl
mov
lahf
jo
mov
adc
sub
stc
inc
outsb
xchg
xchg
mov
repz
jmp
stc
cld
je
cs
cmp
incb
aam
cs
jecxz
inc
mov
ja
inc
cmpsb
add
xchg
mov
add
push
into
loopne
sub
out
and
out
and
cmp
push
ja
xchg
mov
inc
mov
sbb
pop
sbbl
push
roll
inc
inc
mov
pop
out
daa
jno
aad
nop
repz
mov
dec
jbe
inc
mov
incb
xor
or
outsb
xchg
imul
test
mov
aas
test
xchg
nop
in
or
mov
out
xchg
cmpsb
jns
std
dec
mov
subl
cwtd
mov
lret
push
dec
jno
mov
testl
iret
add
adc
cmpsl
cs
cwtd
pop
lock
enter
loope
dec
pop
inc
mov
jbe
sar
or
es
adc
jne
ss
out
imul
pop
lds
and
mov
mov
mov
inc
jo
aaa
outsl
call
idiv
inc
lods
shll
stc
sahf
dec
mov
xchg
dec
mov
or
mov
fisttpll
mov
jp
and
incb
lret
mov
jge
cltd
fsubl
fsin
xor
sar
aas
mov
cmp
je
inc
mov
fnstsw
rorb
icebp
decb
stos
shll
ja
shl
sbb
enter
and
incb
push
pop
in
add
dec
cmp
adc
dec
mov
ret
xor
enter
push
jno
mov
xchg
addb
and
sub
jb
imulb
jg
mov
mov
scas
les
cmp
stc
incb
pusha
lahf
movsl
ja
cmpsb
movsl
push
mov
mov
pop
push
popf
jnp
push
jnp
adc
push
stc
incb
inc
mov
jmp
push
and
push
ret
mov
inc
dec
dec
mov
test
dec
mov
addr16
pusha
lahf
mov
pop
dec
mov
xchg
xor
sar
mov
dec
mov
stos
addr16
test
mov
inc
pop
imul
add
dec
mov
push
push
icebp
mov
pop
xchg
lret
popa
adc
xor
icebp
addr16
dec
fdiv
sub
ljmp
xor
sbb
dec
mov
sub
cs
dec
fcmovb
test
inc
push
scas
leave
inc
mov
cmpb
inc
pop
or
sub
decb
or
xor
add
xor
and
decb
idiv
push
stc
scas
dec
mov
scas
dec
mov
stos
push
and
decb
push
mov
dec
sub
mov
sti
clc
cmc
inc
mov
jecxz
imul
jl
ss
ret
jno
movsb
fimuls
xlat
mov
dec
mov
dec
mov
nop
mov
ret
push
or
rol
ljmp
push
icebp
gs
jnp
sbb
lahf
push
aad
and
cltd
daa
xor
and
adc
repz
pusha
lahf
decb
mov
addr16
mov
test
mov
cwtl
or
xchg
insl
or
jmp
and
sbb
out
cmp
mov
cld
in
ret
add
jb
cs
dec
mov
and
incb
scas
rep
loopne
pusha
lahf
xchg
jg
pop
cmp
xor
inc
sti
es
mov
push
loope
idiv
inc
pop
push
cmp
repnz
fdivrs
test
mov
push
add
inc
dec
mov
add
test
mov
push
jnp
lock
addl
fistpll
pushf
int3
cli
adc
imul
dec
fistps
and
xlat
push
stc
in
lret
inc
dec
mov
insb
xchg
push
mov
mov
mov
rcl
cmpsb
dec
repnz
push
mov
sub
jge
mov
cli
sub
xchg
decb
or
mov
cmp
mov
addr16
decb
incb
mov
ljmp
stc
lahf
scas
clc
je
and
xlat
testl
push
icebp
movsl
push
stc
incb
xchg
je
adc
std
xchg
je
scas
jg
loopne
cmp
mov
incb
push
loopne
cmc
lret
dec
mov
pop
bound
cld
and
jge
out
test
and
sahf
bound
dec
add
mov
insl
lcall
xchg
sbb
pop
mov
push
cmp
pusha
lahf
clc
es
sbb
imul
fcomps
pop
mov
add
mov
repz
stc
aam
ror
outsb
xchg
xor
std
cmp
add
mov
aad
jno
cmc
inc
mov
cmc
dec
mov
xchg
sbb
pusha
lahf
mov
jbe
ja
xchg
cld
adcl
addb
xchg
das
jb
or
incb
sbb
jns
idiv
inc
xchg
testb
cwtd
and
incb
cltd
incb
outsl
das
jb
jae
jb
sbb
pop
adc
sbb
add
xchg
sbb
incb
enter
push
xchg
mov
jge
cmc
sahf
dec
inc
mov
loope
xchg
lock
cwtl
lret
mov
mov
aad
fsin
add
cmpsl
rclb
jp
ja
push
or
mov
cmp
aas
subl
call
popf
lods
pop
adc
insb
xchg
pushl
int
mov
idiv
aaa
aaa
xchg
inc
mov
cmp
jmp
cmp
mov
test
mov
inc
push
icebp
outsb
xchg
incb
jecxz
xchg
insb
xchg
movsl
jns
push
loope
xchg
gs
push
and
aas
insl
jb
adc
mov
fstl
das
flds
mov
mov
inc
fsub
sahf
roll
std
cwtd
adc
std
repnz
mov
incb
cmp
int
je
hlt
mov
shr
sbb
sbb
outsl
repnz
xor
in
jb
xor
aam
adcb
addr16
mov
and
push
push
icebp
mov
mov
fwait
incb
cli
scas
dec
mov
add
decb
aam
fsin
aas
adc
xchg
je
mov
in
fsubrs
jg
std
les
mov
mov
fstps
inc
pop
xchg
push
inc
gs
fisubrs
repz
std
sarl
shlb
movsb
inc
mov
jo
lret
scas
mov
insl
or
imul
inc
fnstsw
in
in
insl
iret
xlat
fistpl
adc
movsb
xor
push
sahf
fidivrs
jae
lahf
push
mov
mov
test
cmp
lods
inc
mov
or
push
mov
sar
mov
mov
sar
cmp
mov
inc
out
lods
inc
in
cld
push
push
das
popa
lret
xchg
std
pop
loope
cltd
cmpsb
sub
std
adc
std
lcall
fcomps
mov
lahf
mov
jns
mov
movsl
or
enter
push
push
jge
xchg
pop
cmp
loop
sub
mov
or
inc
mov
push
inc
mov
enter
sub
jmp
idiv
mov
mov
dec
mov
xchg
lods
ds
aam
and
xor
add
adc
bound
fsin
popf
pop
mov
loop
jnp
fists
dec
out
dec
mov
xor
fwait
or
push
testb
pop
or
pusha
lahf
out
loop
mov
cld
cmp
lret
movsb
das
mov
fidivl
mov
decb
icebp
cmp
mov
xlat
inc
mov
subss
ds
mov
mov
clc
scas
dec
mov
incb
cli
push
mov
addr16
into
jmp
ljmp
incb
fucomi
jnp
lds
mov
ret
adc
cwtl
in
ljmp
push
fnstcw
push
xchg
mov
dec
in
jle
mov
add
inc
add
jb
mov
lahf
dec
in
nop
cmpsb
daa
jne
adc
lods
push
jg
icebp
fwait
jnp
aad
out
mov
les
lahf
incb
outsb
xchg
decb
or
outsb
xchg
dec
jmp
stos
aaa
sub
add
decl
and
mov
loop
adc
sub
popf
cmp
jp
mov
push
push
stc
sbb
inc
jge
lds
icebp
cltd
cmp
incb
dec
and
std
imul
push
push
xchg
mov
fsin
or
and
xchg
or
scas
xor
sahf
lds
lcall
adc
decb
je
stc
inc
push
loopne
cs
pusha
lahf
mov
inc
mov
dec
mov
loopne
movsb
mov
imul
jmp
cli
cmp
mov
fadds
sar
xchg
fnstsw
add
adc
cmc
dec
lahf
aas
sbb
icebp
in
cmp
scas
andl
sahf
test
jg
mov
outsb
xchg
pop
ds
loope
hlt
aad
in
inc
mov
test
mov
nop
mov
ljmp
cli
push
stc
sbb
jg
mov
jmp
mov
int
xchg
pushf
inc
and
decb
pusha
lahf
jmp
dec
pop
sub
cmc
push
decb
decb
jge
dec
mov
mov
test
sbb
leave
lods
xor
daa
fs
adc
je
inc
xchg
xor
in
cmp
jne
xchg
jmp
jmp
adc
movsb
jmp
sub
fwait
ljmp
outsl
lea
mov
in
or
int
mov
sub
jp
mov
lods
adc
xchg
ss
or
mov
insl
repz
movl
fsin
lcall
test
adc
std
lcall
dec
lds
scas
imul
je
xorl
sarb
xchg
jmp
add
push
fnsave
nop
loope
pop
outsl
xchg
sbb
rclb
inc
mov
popa
pop
in
push
jecxz
fwait
inc
xchg
fcomps
push
imul
decb
daa
addr16
into
icebp
into
sub
int
inc
jnp
enter
fmuls
fs
jns
mov
lcall
pushf
fisubrs
xchg
inc
addr16
jnp
aas
imul
fsin
imul
push
in
jg
mov
pushl
out
enter
cmp
dec
mov
es
stc
je
pop
clc
aam
xchg
pop
inc
cmp
cmpsb
mov
aad
inc
mov
mov
test
fwait
cltd
or
cmpsl
pusha
lahf
sub
mov
xchg
fcomps
out
mov
repnz
pop
inc
mov
mov
daa
js
xor
ret
incb
cld
inc
xor
in
in
push
test
mov
mov
cvtpi2ps
mov
or
hlt
add
cltd
hlt
fcompl
xchg
jle
mov
xchg
test
xlat
cmp
sub
mov
mov
adc
incb
hlt
inc
mov
push
in
out
cmp
sub
movsl
and
cmp
das
cmp
mov
push
lahf
cmp
xor
cwtl
cltd
sbb
std
xchg
lcall
aad
insb
xchg
sbb
mov
push
or
std
and
popa
lret
mov
addb
pop
jb
inc
mov
pop
sub
sub
repz
decb
pusha
lahf
inc
sub
adc
out
mov
hlt
adc
sub
jge
pop
xor
mov
xor
aam
jmp
clc
jle
xchg
push
shl
es
imul
or
pop
sbb
aad
adc
fsin
push
mov
adc
xchg
cmpsb
inc
cltd
andb
adc
dec
mov
ret
les
sahf
pop
rcrb
xchg
or
out
jno
imul
bound
and
mov
or
stc
dec
mov
lds
sar
loop,pt
lahf
mov
push
inc
nop
mov
into
mov
cwtd
inc
mov
jecxz
jno
push
stc
mov
hlt
or
jo
movsb
xchg
add
mov
add
popf
shll
decb
icebp
es
dec
mov
test
lods
mov
xchg
dec
mov
pop
bound
mov
aas
sub
call
lea
add
imul
fidivrs
mov
mov
adc
shlb
push
aad
insb
xchg
lods
pop
adc
xlat
xchg
fldt
aad
imul
leave
dec
mov
jl
jnp
flds
jp
std
arpl
idiv
inc
lea
xchg
push
cmp
xchg
pop
mov
repz
jecxz
mov
mov
aam
mov
addr16
mov
and
imul
fimull
div
cwtd
jne
xchg
mov
adc
mov
inc
mov
push
xor
outsl
jae
hlt
or
repnz
pop
add
or
pop
ret
or
mov
rorb
icebp
pop
fwait
xorl
or
mov
fwait
outsb
xchg
push
rolb
cltd
push
sbb
xor
fsin
push
pushf
test
ds
stos
lea
std
outsb
xchg
aad
mov
int
adcl
fidivs
push
icebp
mov
sbb
xor
out
sub
mov
xor
dec
mov
movsl
pushf
pop
pusha
lahf
incb
sbb
in
lcall
jne
fs
sbb
dec
mov
mov
sbb
popf
cltd
outsb
xchg
test
xor
jg
inc
push
std
add
cwtd
sti
dec
js
jmp
lahf
rcrl
enter
fistpll
ja
mov
aad
js
ret
pop
bound
jg
jno
mov
faddl
lahf
mov
je
in
addr16
xor
push
icebp
imul
mov
ret
cmp
pop
out
jne
pop
xchg
aaa
je
dec
leave
xor
mov
push
sub
outsb
xchg
aam
lahf
inc
add
cmp
dec
mov
popf
dec
xor
mov
jno
lahf
pop
sub
sub
jns
loopne
add
fstl
cmp
jo
xorl
inc
mov
mov
mov
and
cmc
loopne
sub
mov
lret
inc
mov
push
pop
clc
gs
mov
lea
int3
sub
xlat
shrl
sub
cltd
mov
js
imul
sub
pop
or
cwtl
jecxz
mov
cmc
incb
imul
sahf
bound
testb
pop
push
lods
mov
jmp
add
incb
stc
and
sub
adc
push
jl
sar
ja
xor
push
icebp
shll
or
mov
subb
xor
sbb
mov
jp
cmp
aaa
adc
sub
mov
lds
popa
fs
ficomps
xchg
cs
lds
push
imul
in
mov
jnp
mov
cmp
xor
mov
mov
jge
lret
movsb
enter
cmp
stc
aaa
cwtl
add
jae
test
les
repz
push
movsl
jmp
loope
xor
and
push
outsl
notb
and
adc
mov
aam
mov
sub
decb
decb
ret
dec
mov
xor
stos
cmp
sub
xchg
xchg
xchg
jecxz
pop
push
and
push
repz
lods
add
out
inc
jno
mov
stos
cwtl
mov
cwtd
sub
arpl
fldcw
lahf
push
add
dec
ljmp
fsin
ret
xorb
fwait
cmc
cld
cmpsl
pop
out
dec
mov
lods
nopl
sbb
xchg
mov
lret
adc
js
xchg
out
addr16
stc
push
mov
pushf
xor
add
out
lock
in
icebp
fisubrs
aad
add
jns
xchg
jo
ljmp
lods
xchg
inc
jb
push
jno
mov
insl
in
lods
lock
sbb
push
hlt
aam
movsb
bound
mov
cmp
or
push
cs
dec
xchg
lds
cmc
pop
push
stc
decb
or
les
pushf
and
pop
dec
mov
or
incb
jl
nop
xor
add
push
stc
pop
jnp
mov
fsubs
jns
xchg
xor
push
lret
test
sbbl
in
imul
ja
mov
jmp
incb
stc
mov
xor
rol
pop
mov
repz
xchg
outsb
xchg
stos
add
incb
mov
sub
cs
addr16
and
dec
mov
mov
popa
les
cwtl
fistpll
negl
push
jmp
shll
int
jae
push
jp
add
je
aas
mov
add
incb
stc
sub
push
sub
pop
rcr
xor
out
movsl
jecxz
scas
jnp
and
stos
aaa
and
incb
stos
test
pop
inc
pushf
mov
add
addr16
or
cwtl
into
lcall
xor
sub
fidivs
out
mov
cwtd
decb
ficompl
adc
sub
sub
jge
sti
outsl
daa
and
xchg
xchg
dec
movsb
ret
jnp
mov
int
or
lret
cmp
and
dec
aad
les
and
pop
cs
xchg
sub
mov
jb
pop
cmp
push
mov
jg
stos
pop
mov
int3
add
dec
xchg
jl
lods
out
pop
negb
incb
je
push
aas
in
or
decb
fwait
inc
lcall
pop
mov
jp
loop
cs
add
ljmp
sti
sub
push
add
dec
mov
scas
cmp
jmp
push
stc
cmpsb
xorl
lret
jns
sub
insb
xchg
dec
neg
mov
cltd
dec
mov
jne
pusha
lahf
ljmp
dec
add
jb
push
sub
adc
xor
aam
xchg
fsubrl
aad
shlb
jbe
mov
pop
jbe
icebp
incb
push
in
fnstenv
xor
sub
lock
xor
inc
in
cmpsl
xor
rol
les
mov
sbb
sub
decb
xchg
inc
jae
push
mov
int3
inc
ret
sarl
adcl
sar
xchg
cmp
lods
es
xchg
fsub
scas
push
out
imul
mov
insb
xchg
cmp
cwtl
xor
cmp
lcall
push
cwtl
or
leave
sahf
xor
add
decb
icebp
and
and
inc
mov
bound
jno
cwtl
insb
xchg
stos
and
mov
fldl
and
in
sub
cmc
push
pop
mov
mov
mov
sbb
or
lcall
icebp
adc
into
repnz
std
std
sbb
ljmp
xchg
sarb
mov
mov
adc
lods
mov
inc
add
jmp
bound
aaa
sub
outsl
sarl
sub
stc
repz
call
inc
mov
push
stc
outsl
sub
jno
rcr
mov
jb
cmc
and
pusha
lahf
fdivrl
das
aaa
mov
add
jecxz
outsb
xchg
cmp
or
cs
cmpsb
test
push
jne
pusha
lahf
inc
pop
dec
enter
or
mulb
addr16
mov
popa
es
cli
push
adc
dec
mov
push
mov
xor
lcall
xor
lea
sti
and
dec
cmp
mov
jp
push
sbb
lcall
xlat
push
jmp
add
rcrl
scas
jns
inc
xor
arpl
ljmp
pop
daa
dec
jo
loopne
fsin
or
ror
or
mov
aad
out
jnp
dec
mov
fmuls
dec
mov
repz
movsb
mov
xlat
xlat
pop
cwtl
push
mov
push
mov
xchg
inc
xchg
sahf
add
adc
mull
pop
mov
stos
in
lds
dec
fisttpll
mov
adc
xchg
sub
inc
cwtl
cmp
dec
mov
and
mov
push
inc
cltd
daa
lock
push
xor
hlt
add
mov
or
hlt
roll
mov
push
orl
inc
mov
add
ds
mov
movsl
insl
iret
fldenv
push
cld
roll
std
decb
pop
mov
push
icebp
decb
pop
push
icebp
mov
jge
mov
cltd
xor
cmpsl
and
repz
fs
incb
fmuls
movsb
sbb
push
lock
std
das
sub
decb
mov
xchg
add
adc
jae
into
xchg
ffree
jmp
sahf
sub
and
dec
jmp
push
aad
push
xchg
dec
mov
fcmovne
cmp
gs
fcoml
mov
adc
roll
pop
scas
inc
mov
push
cli
pop
nop
push
out
out
js
cmp
sahf
roll
neg
sub
lcall
in
shrl
jmp
pop
adc
adc
into
loopne
test
pop
dec
xor
push
pop
into
and
lahf
xchg
mov
sub
out
xchg
aad
adc
or
movsl
inc
mov
push
icebp
mov
mov
imul
jmp
pop
aas
orl
inc
pop
push
ds
cmc
std
push
std
xchg
lods
subb
xor
cmp
mov
idiv
bound
push
jmp
clc
sbb
cwtd
out
dec
std
pop
ds
push
ja
insb
xchg
mov
icebp
cmp
mov
mov
adc
push
xchg
mov
lock
lock
dec
mov
cmp
loope
xor
pop
test
jne
cmp
add
xlat
xchg
or
call
dec
mov
xor
repnz
call
push
pop
bound
lahf
loopne
dec
cmc
dec
add
stos
negb
sub
cmc
adc
sub
je
mov
pop
outsl
imul
dec
mov
outsb
xchg
jecxz
gs
test
lret
jns
xchg
ss
lahf
and
movsb
push
fwait
sub
enter
pushf
lock
xchg
mov
dec
mov
cmp
lahf
incb
stc
pop
push
es
adc
mov
push
xchg
ja
lret
inc
jne
fstpt
inc
mov
mov
xorl
sbb
mov
mov
call
flds
fs
das
rol
ljmp
sbb
mov
popf
or
pop
mov
outsb
xchg
jge
outsb
xchg
incb
cwtd
mov
test
mov
cwtl
lret
xor
clc
nop
mov
ficomps
mov
pusha
lahf
and
icebp
adc
sbbb
dec
mov
inc
mov
je
mov
lods
fwait
push
xchg
cmc
push
decb
push
into
lods
cli
pop
and
decb
roll
inc
mov
xchg
stc
ds
sahf
cmp
lods
mov
push
je
adc
mov
pop
sub
xlat
push
clc
rcrb
xchg
test
shl
dec
mov
push
pop
jo
mov
stos
jmp
mov
cltd
popa
xor
pop
adc
push
sub
xchg
inc
dec
mov
out
xchg
push
mov
lahf
ja
inc
je
shlb
test
add
add
int
clc
pop
add
in
sbb
aad
lcall
out
popa
sbb
mov
lahf
mov
mov
mov
lahf
loop
xchg
sub
decb
cld
cmp
imulb
decb
cmp
jecxz
push
testl
repz
push
pop
vshufps
xchg
incb
and
je
outsl
adc
or
test
and
cmc
push
push
cmc
out
test
lret
inc
sti
jne
sbb
and
in
cmp
jno
push
icebp
fisttpll
sub
je
mov
fmull
idiv
jb
flds
movsl
sahf
fdivl
aad
pop
rcl
xchg
scas
push
cmp
aad
mov
loop
pusha
lahf
movsl
cmp
xor
nop
inc
clc
jecxz
rcl
inc
or
stos
aaa
mov
clc
jo
repz
sbb
out
or
and
and
xor
adc
cmp
mov
jae
or
xchg
cltd
sbb
add
incb
das
ja
and
sahf
lds
cmp
roll
cmpb
and
incb
pop
shl
adc
xchg
push
aas
mov
mov
xchg
dec
das
jmp
shlb
jp
pusha
lahf
mov
loopne
and
fistps
pop
or
decb
icebp
incb
xor
and
xorb
cwtd
repz
out
xchg
inc
mov
pusha
lahf
pop
mov
add
xor
mulb
fidivl
lods
fidivl
daa
icebp
fistpl
jp
jns
xchg
jge
lret
clc
push
and
xor
rorb
das
fdivrl
jle
out
mov
mov
stos
mov
sar
push
movsb
fbstp
sar
in
lret
jle
mov
orb
icebp
fwait
int3
loope
mov
mov
loope
mov
nop
cmp
sbb
lock
cmp
hlt
pop
sub
fisubrl
push
jge
ds
repz
iret
cmp
push
xchg
sti
or
jmp
ficoml
rolb
in
je
cwtd
lods
mov
jl
bound
inc
push
pop
pop
cmp
xchg
sbbb
and
mov
int3
dec
mov
dec
in
stc
mov
incb
xchg
pop
insb
xchg
pop
mov
cwtl
and
in
push
lods
stos
lret
or
fcos
in
cmc
pop
sahf
dec
mov
jmp
dec
mov
loope
jge
mov
xor
inc
mov
mov
sti
mov
and
int3
push
ja
gs
mov
cltd
cmp
scas
mov
and
bound
into
xchg
inc
icebp
mov
orb
cltd
fstps
push
icebp
adc
imulb
or
lds
scas
notl
push
repz
rcrb
lea
loopne
inc
mov
stos
insl
jo
push
stc
outsb
xchg
fstps
test
outsl
icebp
and
adc
jp
add
decb
icebp
pop
mov
aas
push
fsts
cwtd
decb
idiv
jne
lods
outsb
xchg
pop
mov
sbb
or
xchg
mov
cmpsl
loopne
stos
hlt
inc
mov
mov
or
test
mov
adc
fwait
add
and
mov
jmp
cmp
xchg
test
aad
cwtl
sbb
jg
test
adc
push
outsb
xchg
sbb
int
mov
lods
or
and
sti
stos
xor
lahf
jmp
mov
sub
sub
inc
mov
or
push
fistpll
push
icebp
sar
mov
sbbl
in
mov
aaa
xor
dec
mov
je
fbld
sbb
cmpsl
or
mov
inc
mov
ret
aas
and
ret
dec
cmp
sahf
xchg
push
mov
or
inc
and
jle
mov
int
sar
inc
mov
sbb
mov
je
mov
xchg
push
or
loope
lock
or
decb
out
dec
mov
ja
xchg
daa
ja
mov
lods
inc
mov
cld
sbb
outsl
loop
cmp
movsl
push
cmp
fidivl
mov
sub
ds
stos
sahf
lock
cmp
sbb
sbb
fwait
pop
or
jg
test
insl
cmp
negl
lods
dec
mov
iret
inc
mov
in
mov
xchg
sti
mov
mov
imul
and
decb
in
insl
lods
sti
fdivs
jb
mov
xchg
jecxz
idiv
push
mov
movsb
push
in
inc
mov
jle
mov
add
sahf
cmp
stc
div
or
jmp
je
xor
adc
adc
mov
addr16
repz
xor
and
sub
shr
xchg
dec
into
cltd
jmp
mov
sub
cmc
sub
jp
pop
test
mov
idivl
cld
xchg
std
cmpsl
push
xor
mov
mov
int3
add
in
sbb
jp
pop
xchg
mov
sti
testb
pop
jbe
jae
jmp
scas
fldenv
jno
mov
gs
add
nop
mov
push
mov
mov
xchg
or
les
lret
stos
out
mov
call
aas
pop
cwtd
mov
stc
sbb
adc
cmp
dec
mov
sbbb
mov
leave
xchg
mov
movsl
lods
testl
mov
shl
sar
dec
aam
mov
out
test
lret
lock
mov
ljmp
cwtl
fnsave
repz
cmp
jg
outsb
xchg
sub
popl
enter
sbb
mov
dec
push
icebp
sbb
jbe
lds
aas
or
and
fcom
outsb
xchg
mov
xlat
rclb
mov
mov
jg
out
cmp
rorb
ds
adc
dec
mov
push
sub
decb
xor
or
sbb
sti
in
mov
je
jecxz
rcrl
dec
mov
push
rclb
aad
lahf
mov
std
jbe
pushf
pop
imul
mov
sub
decb
pop
cmc
aad
push
icebp
jns
mov
loope
jb
insl
popf
fsubrs
cmp
icebp
inc
mov
or
arpl
mov
movsb
aam
adc
push
daa
in
xchg
jne
xchg
jge
jno
cs
and
dec
mov
pop
test
inc
movsldup
loop
mov
push
je
ret
in
pop
cmc
fmul
push
xor
aad
mov
add
pop
mov
out
test
sbb
adc
jae
mov
notb
stc
je
aaa
int3
mov
outsb
xchg
insb
xchg
inc
xchg
sar
insb
xchg
adc
loopne
add
decb
dec
mov
xchg
adc
pop
hlt
orl
jnp
gs
daa
es
cwtl
popf
dec
arpl
aam
std
push
sbb
repnz
jno
mov
xor
subl
xchg
push
lcall
dec
fwait
test
cmp
jp
ret
ljmp
adc
movsl
mov
pop
dec
cwtl
addr16
lahf
cld
mov
or
mov
decb
in
or
add
icebp
cmpsb
add
adc
xchg
loope
addr16
lcall
mov
jl
mov
mov
or
in
mov
mov
in
xlat
cld
je
cmp
in
push
filds
and
fwait
dec
addb
mov
leave
xchg
mov
fdivrs
cmpsl
scas
daa
outsl
or
push
mov
add
dec
mov
fiadds
push
icebp
push
jge
je
es
mov
ret
in
clc
sub
in
stos
lods
int
or
dec
mov
sar
test
dec
jp
es
mov
sar
xchg
xchg
xor
decb
test
jb
or
out
xchg
scas
pop
and
sub
cmpsb
lds
and
mov
je
inc
scas
lret
aad
adcl
fnstenv
xchg
decb
cwtd
decb
jns
push
pop
sbb
inc
mov
pop
mov
push
mov
xorb
adc
cltd
aam
mov
jbe
fwait
pop
mov
out
sub
andl
shl
push
into
lods
lds
mov
stc
jnp
ror
jne
imul
aad
popa
sub
sub
mov
shlb
dec
xor
or
xchg
cmpl
mov
daa
enter
fdivs
lcall
test
neg
sti
or
mov
sub
mov
xchg
xlat
cmp
ret
xlat
pop
cltd
insb
xchg
mov
cmp
cltd
mov
cmc
das
or
cli
insl
das
or
ror
xchg
jno
ja
sar
out
in
jnp
mov
pushl
add
out
jp
cltd
movsl
inc
mov
mov
xchg
push
mov
fsubrl
cmp
scas
bswap
pop
pop
insl
test
popa
jp
push
dec
push
xor
or
push
mov
inc
mov
sbb
pusha
lahf
jo
sar
pop
mov
pop
add
inc
or
jae
cwtl
fildll
sbb
jmp
inc
mov
and
jb
xchg
xchg
pop
shl
cmc
jnp
xchg
xor
arpl
xchg
andl
sti
enter
lock
mov
movsb
bound
pop
mov
and
xor
xchg
insb
xchg
push
aaa
cmp
jbe
test
push
xchg
cmpb
dec
push
fiaddl
inc
mov
decb
decb
mov
call
hlt
rcll
dec
mov
mov
mov
inc
sbb
out
add
push
fsubl
cmp
inc
mov
and
test
testl
incb
std
incb
flds
std
dec
nop
xchg
aad
into
es
aaa
cltd
dec
mov
xchg
inc
add
repz
incb
cwtd
incb
adc
push
xor
push
fwait
call
adc
jns
and
lahf
add
fstps
ss
xchg
mov
sar
lret
pop
pop
shl
bound
sbb
imul
arpl
xor
repz
inc
mov
adc
xor
lahf
cmc
dec
fs
loopne
rclb
mov
jge
sbb
mov
bound
out
aaa
pop
add
lds
dec
mov
sbb
sub
clc
jno
inc
cld
aas
call
and
popa
push
cmpsb
sbb
sar
les
sub
mov
andb
aas
xchg
faddl
push
imul
mov
arpl
fsubrl
aad
std
add
jmp
out
lcall
xchg
pop
xchg
inc
mov
fidivrl
or
insl
popf
jmp
inc
jnp
cltd
push
loopne
bound
xlat
fimuls
out
adc
xchg
movswl
pop
sbb
sub
cs
loop
movsl
add
aad
daa
flds
decb
cltd
cmpsl
mov
mov
test
and
or
jae
repz
incb
test
sub
sbb
push
or
call
inc
mov
xor
xchg
jge
xor
pop
fs
popa
cmc
es
mov
cmp
notb
cwtl
shl
push
push
icebp
incb
and
pop
sbb
btc
std
out
stc
fucomp
pop
fs
decb
cmp
fwait
cmp
movsb
mov
decb
cmc
shr
clc
jg
push
das
idivl
cmp
jl
into
add
aas
adc
mov
cmc
incb
cmp
mov
jnp
cmc
mov
ja
repz
mov
dec
mov
and
dec
mov
ja
and
mov
jo
or
nop
in
into
fdivrl
popl
cs
mov
xchg
insb
xchg
sbb
cmp
insb
xchg
dec
dec
xchg
jmp
pop
jno
mov
movsl
negl
mov
mov
in
dec
mov
sbb
in
daa
lods
mov
mov
cmpsl
xor
cmp
push
icebp
xor
out
push
cmc
push
pop
and
xor
or
xlat
cmp
push
fs
dec
fwait
shrb
mulb
sar
mov
push
out
repz
ja
shlb
nop
jmp
stos
sbb
fmuls
xchg
jns
cmp
push
stc
mov
dec
mov
repnz
dec
repz
rclb
inc
adc
sub
cmpsl
cs
mov
pop
ficoml
mov
adc
loop
jae
mov
fs
xor
add
cld
ficoms
jb
jno
mov
repnz
test
movsl
push
pop
add
decb
idiv
std
pop
inc
xchg
mov
sahf
pop
outsl
cmp
fistpll
lock
xor
sbb
bound
dec
sbb
hlt
fwait
cmp
cltd
lods
es
push
cmp
repz
mov
cmp
sahf
in
pop
aaa
lods
out
inc
mov
and
in
xchg
lret
xchg
or
loope
cld
add
xor
cmc
mov
out
dec
mov
dec
icebp
ljmp
incb
ret
inc
mov
and
xchg
std
inc
mov
xchg
clc
sbb
shlb
push
inc
push
icebp
incb
xor
ret
aaa
mov
and
shl
fstps
mov
jo
cmp
and
jg
push
and
in
cmp
pop
test
fwait
xchg
inc
xchg
movsl
and
cmpl
mov
pop
movsl
push
xchg
jne
mov
mov
divl
decb
cmc
push
xchg
cwtl
mov
mov
ds
out
pop
jle
inc
mov
jo
xor
sti
decb
icebp
xchg
jmp
pop
adc
dec
mov
cmp
dec
mov
mov
add
loope
mov
out
sub
decb
incb
add
pop
addr16
jbe
jo
xor
mov
pop
fstl
shlb
in
sbbb
mov
jo
fildll
xchg
sbb
dec
or
cmpsl
xchg
xor
push
testb
decb
test
or
decb
icebp
out
insb
xchg
sbb
pusha
lahf
outsb
xchg
decb
mov
sub
incb
stc
lock
test
dec
mov
test
sbb
dec
sbb
les
push
nop
cmpsb
xor
jmp
loop
mov
je
out
mov
stos
test
jb
push
stc
and
jg
test
loop
xor
sti
das
xlat
mov
mov
jb
pop
imulb
add
dec
mov
jle
jb
pop
mov
rolb
mov
test
adc
pop
cs
mov
rorb
mov
inc
adc
or
incb
stc
sub
sub
cmp
jp
pop
fists
das
aas
add
popf
mov
sbb
decb
sbb
mov
fidivrl
addr16
div
pusha
lahf
push
cltd
decb
jg
lds
pop
mov
jbe
sbb
fimull
scas
mov
or
decb
sti
pop
enter
mov
sar
xchg
jb
mov
jbe
cmp
loop
lock
sbb
test
andl
out
dec
dec
adcb
sahf
pop
aam
repz
fs
incb
sub
adc
sub
shlb
incb
sub
jb
push
lahf
adc
and
xlat
cmpsb
pop
and
sub
xlat
jo
pop
add
mov
cwtl
addr16
shl
or
sub
and
adc
fnstenv
xchg
lea
dec
push
cmp
cmc
fimuls
aaa
aaa
jp
or
cmp
inc
in
fadd
mov
pop
sahf
mov
fsubrs
mov
dec
mov
mov
dec
mov
cmp
inc
mov
xlat
in
xchg
jnp
in
pop
mov
inc
mov
pop
push
pop
mov
pop
out
or
mov
in
inc
sub
ja
leave
adc
pop
dec
out
repz
xchg
cmpsb
inc
jae
xchg
decb
pop
mov
mov
test
push
cmpsl
pop
xor
and
push
push
addr16
mov
outsb
xchg
jecxz
mov
repz
mov
cmpsb
fisttpll
out
mov
and
jb
cs
test
lods
mov
xchg
stos
insb
xchg
nop
leave
je
mov
jne
andl
cmp
and
xlat
cmc
dec
mov
in
jp
mov
out
pop
inc
cwtd
decb
adc
ds
cmc
dec
push
mov
fs
push
inc
sbb
adc
add
insb
xchg
sti
add
pop
fwait
je
sub
test
xchg
dec
popl
xor
xchg
or
cmp
mov
out
sbb
pop
insb
xchg
stc
stos
or
xchg
pop
loopne
pushf
add
xchg
mov
sarl
lcall
cmpsb
inc
mov
popa
lods
mov
add
cmp
fs
xchg
mov
adc
je
aad
adc
pop
repnz
addl
mov
push
fldenv
fwait
das
jl
hlt
mov
xchg
popf
incb
cwtl
or
incb
popf
xchg
decb
outsb
xchg
pop
xor
leave
sbb
in
fsin
scas
mov
cwtd
sti
inc
mov
imul
shl
repz
cmp
in
and
xchg
adc
jnp
sbb
xchg
xchg
decb
and
decb
cmp
push
test
cmp
mov
std
fs
pop
enter
pop
xor
adc
mov
stos
into
pop
adc
aad
xchg
pop
movsb
pop
mov
orl
es
inc
push
ss
mov
dec
stos
jmp
lds
sbb
arpl
xchg
sub
decb
shlb
xchg
push
ds
jne
mov
fwait
incb
cwtd
push
stc
inc
mov
push
sbb
add
decb
inc
mov
mov
jo
xor
bound
imul
sbb
cmp
push
icebp
xor
or
cs
jmp
pop
scas
les
jo
add
movsb
inc
adc
cs
scas
pop
fsubrl
es
inc
dec
out
adc
push
dec
insb
xchg
decb
mov
out
xchg
jecxz
fistpll
out
adc
jbe
and
pop
lods
fs
pusha
lahf
test
icebp
inc
mov
cwtd
rclb
sbb
jge
mov
mov
xlat
je
shlb
notl
gs
movsl
cs
jns
fcmovnu
lea
hlt
arpl
sbb
mov
loop
rol
sub
je
std
ds
lahf
sahf
movsl
push
pop
insl
add
bound
shrl
lahf
mov
pop
out
sahf
lods
mov
mov
repz
lods
xor
aad
js
lock
cmpsb
adc
imul
xchg
dec
mov
and
imul
decb
rcrl
xor
mov
pop
or
xchg
ljmp
xchg
ud1
and
incb
xchg
jmp
adc
inc
hlt
cmp
out
xor
inc
xchg
ds
stc
incb
dec
out
cmpsl
ss
add
mov
shll
and
mov
xorb
ds
fstpl
repz
adc
movb
or
cmp
cmc
jl
lret
xchg
test
aam
add
adc
cmp
xchg
push
jo
sbb
sub
decb
bound
cltd
push
aas
shr
jne
or
or
cmp
leave
jae
aad
insb
xchg
clc
test
ds
out
popf
xchg
xchg
adc
inc
popa
cmpb
andl
cmc
xchg
cmp
outsb
xchg
lock
push
mov
push
icebp
rcrb
lock
mov
xchg
add
sub
movsb
and
adc
pushf
rcrb
arpl
jno
daa
push
xor
lahf
mov
dec
mov
dec
enter
lock
lods
adc
inc
pop
mov
mov
cli
jno
adc
pop
int3
add
fwait
popa
jb
xor
in
mov
ljmp
xchg
xchg
arpl
test
mov
sub
popf
lahf
cwtd
dec
adc
sbb
jp
leave
jbe
je
mov
sub
decb
cmpsl
fucomi
xchg
sbb
xlat
pop
sub
and
cmp
jge
jmp
das
fs
push
push
pusha
lahf
movsl
fisttps
inc
fstps
cmp
sbb
xor
jnp
xchg
enter
fisubrl
mov
imul
push
or
sub
lods
xor
jo
std
adc
std
insb
xchg
mov
fucomi
in
inc
ss
jno
sub
sti
fidivrs
cmc
fld
jmp
cli
xlat
sub
xchg
aas
lods
pusha
lahf
decb
sbb
xchg
xlat
cs
inc
and
out
dec
or
dec
mov
push
adcl
or
aad
add
pop
sub
decb
and
sbb
bound
inc
int
lea
call
fsubs
cmc
dec
push
pushf
jg
inc
mov
cwtl
fbld
fsin
sub
std
int
lds
imul
popa
jnp
mov
mov
and
cmpsb
pushf
xchg
out
or
jne
notl
add
mov
cltd
ljmp
sbb
dec
pop
pop
out
or
stc
xchg
add
jno
mov
inc
mov
cmp
pop
xchg
jo
add
decb
pop
test
and
std
cmp
add
in
bound
jb
je
icebp
xor
cmp
icebp
jl
mov
push
cmp
mov
icebp
outsl
pop
adc
mov
outsb
xchg
mov
sar
mov
push
ss
popf
lahf
add
decb
inc
mov
xlat
ja
jg
xorl
push
cmp
or
jmp
insl
iret
mov
mov
cwtl
jne
subl
int
flds
in
sub
popf
inc
or
decb
repz
pop
mov
adc
jbe
xchg
lret
mov
fldl
es
test
xlat
out
inc
mov
pop
xchg
aad
lds
xor
and
xchg
aas
leave
ret
cmp
xlat
sbb
ds
push
shr
mov
sbb
gs
push
xchg
fists
loope
add
pop
loopne
xlat
xchg
icebp
notl
repz
hlt
clc
test
jp
popa
pop
fs
dec
roll
push
arpl
mov
sub
mov
cmpsb
das
cmpsl
pop
adc
mov
sti
fs
mov
add
inc
shl
enter
pop
push
ljmp
inc
mov
loop
mov
out
cltd
jg
xlat
incb
cwtl
sar
pop
lea
cmp
adc
inc
pop
pop
jge
and
in
dec
mov
mov
mov
xlat
cs
add
gs
divl
jp
mov
jnp
xchg
in
xor
cmp
sbb
mov
xchg
lock
icebp
push
outsl
cmp
pop
fxch
xchg
sbb
js
cmp
push
nop
mov
push
mov
mov
xchg
inc
cmp
xor
mov
lret
xchg
inc
mov
repz
faddl
std
sbb
jmp
cmp
jmp
popa
dec
lret
popa
cmp
xchg
pop
stos
cwtl
lock
jg
or
decb
push
inc
lahf
jge
inc
mov
mull
incb
pop
or
bswap
addr16
pusha
lahf
xchg
movsl
sbb
xchg
xchg
in
scas
lods
xlat
pop
stos
divb
aad
icebp
xor
xor
fwait
and
decb
pop
lea
mov
xchg
lock
test
adc
pop
out
adc
push
mov
out
cwtd
pusha
lahf
xor
sub
xchg
cs
adc
sbb
lds
push
int3
mov
dec
mov
dec
mov
pop
add
incb
aaa
insb
xchg
loop
sbb
inc
mov
xchg
decb
out
pop
add
decb
add
ficoml
xchg
add
mov
fwait
mov
jno
or
lahf
pusha
lahf
fucomip
mov
jb
cwtl
mov
fisubrl
push
xchg
sub
dec
bnd
push
popf
pop
inc
mov
das
mov
jmp
sar
aad
fsin
lds
mov
arpl
movsb
pop
lcall
mov
decb
lcall
and
push
icebp
mov
inc
mov
movsb
sub
decb
lock
aad
xlat
xor
insl
leave
jge
and
sbbb
leave
lahf
fldcw
mov
or
sub
in
orl
mov
pushf
mov
sub
ror
mov
push
pop
mov
test
jbe
sar
xor
mov
pop
int3
nop
mov
lods
cmpsl
mov
sbb
sbb
les
cmp
xchg
mov
dec
mov
xchg
adc
xor
pop
mov
lock
mov
sub
decb
fwait
test
xlat
mov
subb
cmp
mov
add
movsl
mov
stos
pop
jmp
inc
fcmove
sub
stos
inc
jl
std
jb
mov
lds
dec
cmp
or
incb
or
jo
scas
push
cmp
mov
and
incb
sti
inc
rorb
arpl
add
incb
aaa
cs
and
mov
mov
in
push
loopne
push
je
lods
jnp
stos
dec
mov
popf
push
sbb
xchg
incb
mov
lods
nop
stos
push
cmpsb
xchg
ret
mov
lods
movsb
add
sub
repnz
das
in
cli
fdivs
out
pop
cwtl
pop
lahf
insb
xchg
incb
inc
loope
dec
mov
scas
cs
hlt
ficoml
inc
mov
mov
sub
xor
daa
and
roll
dec
icebp
mov
lret
leave
cmpsl
xchg
or
decb
incb
shr
xor
xor
cmp
jl
jle
subb
mov
xor
mov
enter
out
inc
jmp
mov
cmc
xorb
popf
sbb
lret
std
cmpsl
cmc
pop
aad
popf
loop
sti
decb
cli
movsl
rclb
cld
pop
js
ds
jg
jo
and
decb
xlat
decb
stos
sub
mov
flds
sbb
repz
out
push
out
and
incb
repz
xor
sub
fadd
pop
cmp
aad
jbe
sbb
mov
stos
out
adc
xchg
push
mov
mov
decb
scas
aas
mov
orl
enter
les
addr16
add
inc
mov
cmp
incb
incb
roll
lret
mov
ja
mov
inc
mov
mov
and
lock
pop
sbb
xor
xchg
and
jae
pop
sub
mov
xor
jo
addr16
outsl
pop
xor
out
sbb
jp
xchg
in
fnstsw
js
inc
mov
inc
mov
mov
xchg
mov
and
mov
jg
or
mov
push
stc
lcall
or
fsub
loopne
sti
xchg
push
movsl
fmull
icebp
bound
das
aaa
mov
or
aas
mov
in
fdivs
sub
incb
std
popf
pusha
lahf
push
push
lods
fstps
or
mov
cwtd
sahf
rcll
dec
mov
imul
sti
push
pop
fnstsw
lcall
cmp
jb
push
stc
xchg
mov
sarb
incl
xchg
pop
orl
cmp
icebp
imul
inc
iret
push
cltd
cld
dec
mov
sbb
ret
xchg
mov
std
incb
mov
jg
or
sbb
pop
xchg
cltd
out
out
subl
push
and
rep
mov
xchg
cmp
xchg
pop
sets
cmpb
push
dec
mov
cmp
cmp
mul
jp
cmp
cmp
or
or
aad
ss
decb
mov
test
pop
jg
pusha
lahf
sub
decb
jg
pop
nop
mov
dec
mov
fwait
cmpsl
jg
dec
mov
pop
pusha
lahf
decb
into
and
pop
cwtd
push
xor
mov
sub
das
and
out
adc
xchg
rol
andl
inc
mov
xchg
or
add
stos
mov
xchg
bound
xchg
cmc
fstps
stos
mov
xchg
repz
test
shl
sbb
subl
cmpsb
popa
arpl
xchg
ss
pop
testl
mov
jp
iret
xchg
imul
push
push
test
xchg
movsl
push
fistl
dec
mov
dec
and
nop
mov
jge
arpl
pop
fadds
xor
xlat
sub
jle
pushf
mov
fsin
sub
incb
out
cs
jmp
xlat
fcmovb
sub
and
pop
sahf
push
test
inc
dec
mov
stos
xchg
scas
fidivrl
sbb
jle
fwait
sbb
dec
outsb
xchg
decb
xchg
pop
imul
cmpl
lret
add
mov
icebp
incb
scas
adc
pop
jp
pop
ljmp
ret
sub
decb
or
decb
enter
jge
dec
mov
xor
cwtd
and
decb
stos
inc
in
repz
cmc
in
repz
mov
adc
ja
mov
repnz
add
gs
adc
incb
repz
jbe
shrl
imul
cltd
pushf
imul
arpl
jnp
mov
sub
std
mov
add
decb
and
decb
sar
ror
lea
fsin
lret
and
out
sub
cmpsb
andb
sarb
xchg
icebp
popf
dec
mov
icebp
xor
icebp
dec
es
lahf
fistpl
xchg
xchg
xchg
popf
sti
cwtd
and
outsl
pusha
lahf
sub
cmc
gs
sbb
shl
addr16
mov
push
pop
jmp
cmpsl
jge
xchg
adc
cltd
jns
mov
lahf
xchg
jne
or
mov
jne
rcl
mov
daa
push
mov
out
rorb
leave
movsb
das
jp
push
xchg
hlt
outsl
lock
lahf
cmp
sbb
add
sbb
mov
inc
pusha
lahf
es
std
insl
add
insl
or
sar
pushf
xlat
stos
rcrb
xlat
cmc
fsubr
es
pop
loop
add
sbb
dec
testl
push
jmp
lret
mov
xchg
inc
mov
sub
jbe
lahf
adc
lcall
mov
mov
jb
aaa
jmp
mov
ja
or
incb
mov
sbb
clc
fsubrl
out
push
jle
bound
imul
shrl
adc
xchg
mov
or
test
push
dec
jg
test
dec
ja
inc
mov
lods
or
push
es
push
cmp
out
mov
jp
jmp
mov
add
jbe
mov
cld
push
aad
mov
les
aam
xlat
xchg
cmp
dec
mov
mov
xchg
pop
cmpsl
lea
mov
scas
ret
rorb
inc
mov
mov
lods
pushf
int3
arpl
sti
fs
aas
mov
sbb
shl
sub
push
pop
mov
adc
insl
or
and
inc
nop
pop
shll
jg
fwait
js
xor
mov
shlb
int
sbb
pop
and
dec
sahf
xor
lret
mov
movsb
ret
mov
decb
aam
xor
xchg
xchg
rcr
cmp
neg
xchg
and
fsin
lock
sti
lock
out
lods
jl
rclb
or
nop
leave
sub
dec
mov
pop
mov
loopne
jg
stc
or
scas
mov
and
mov
inc
mov
cmp
push
std
xchg
ja
shrb
cmp
mov
mov
cmpsb
cld
and
adc
push
pop
mov
xchg
mov
mov
sub
aas
or
push
and
in
push
inc
fidivrs
js
into
inc
mov
aad
mov
dec
mov
test
aad
jno
popa
jae
pop
out
mov
adc
loope
cld
bound
adc
mov
mov
mov
xchg
mov
pushf
sub
mov
movq
xchg
or
lods
pop
daa
dec
mov
arpl
mov
rcrl
popf
mov
mov
adc
dec
mov
dec
mov
jbe
lahf
fldl
mov
inc
xchg
or
mov
aaa
fsubs
testl
repnz
decb
cmp
cwtd
xor
push
stc
pop
arpl
divl
xchg
push
dec
mov
addb
mov
out
loopne
mov
fwait
cmp
jecxz
add
jge
xor
hlt
mov
daa
sub
idiv
jae
or
xchg
cwtl
lods
stc
fadd
xlat
push
imul
xor
push
icebp
jno
imul
ss
xor
pop
popf
lea
in
and
dec
mov
aad
xchg
push
fimuls
mov
sub
and
scas
mov
xchg
jle
ds
repz
sarl
push
fcos
clc
cltd
push
jecxz
arpl
std
leave
cmp
out
xor
lret
cwtd
decb
idiv
xor
enter
cmp
loope
mov
mov
mov
xchg
add
arpl
mov
mulb
xor
push
xchg
pop
and
incb
mov
mov
push
fs
inc
sbb
or
cltd
jbe
lcall
pop
pop
and
mov
sub
leave
aas
adc
dec
mov
call
xchg
decb
rclb
xchg
in
add
cwtl
loopne
popl
je
mov
scas
insl
xchg
shl
aam
mov
das
loop
sub
in
xor
enter
push
jg
insl
lods
ja
cld
decb
xchg
into
hlt
jo
inc
mov
sbb
mov
popf
and
es
cs
inc
imul
fcomps
mov
roll
incb
repnz
decb
in
pop
inc
imul
lea
loope
cmp
orl
xor
xlat
decb
xchg
xchg
dec
mov
sbb
stc
cmc
push
inc
mov
ds
cmp
jg
mov
imul
pop
add
insb
xchg
repnz
inc
mov
inc
mov
imulb
lea
pusha
lahf
repnz
fsubrp
push
xor
inc
mov
sahf
pop
lret
lods
push
adc
cld
daa
mov
shl
pop
cmpsb
sti
rcll
cld
inc
mov
jbe
fisubrl
mov
cwtl
dec
mov
add
leave
pushf
mov
cmp
mov
dec
dec
mov
outsl
push
push
sub
and
mov
sbb
lret
mov
scas
cs
dec
rcl
fisubrl
inc
pop
aas
jge
iret
fwait
imul
sbb
das
mov
dec
sub
fildl
decb
scas
adc
addr16
sahf
push
jne
outsb
xchg
incb
das
push
js
sti
loopne
xchg
mov
xchg
icebp
cmp
dec
mov
dec
mov
mov
mov
mov
pop
push
xor
ret
mov
xchg
pop
ret
sub
xchg
dec
mov
outsb
xchg
decb
ss
fildl
pushl
xchg
mov
mov
dec
mov
lock
popf
shrl
test
repz
incb
jle
mov
mov
cs
mov
js
jge
push
outsl
lret
incb
test
pop
aaa
insl
add
out
or
jge
jnp
sbb
in
or
iret
mov
jb
jb
arpl
add
xor
arpl
hlt
inc
and
inc
mov
stos
mov
sub
pop
inc
mov
stos
subl
xchg
lret
adcl
jns
enter
ljmp
incb
int
sub
mov
sar
les
pop
nop
adc
out
into
jae
pop
in
cmc
popf
mov
mov
stc
dec
add
ficompl
shll
test
cltd
decb
lahf
cmp
lcall
in
pusha
lahf
adc
in
out
mov
es
jmp
mov
sub
fsubl
push
cmp
lock
aas
jae
or
and
das
gs
mov
mov
mov
clc
mov
int3
mov
fnsave
out
in
clc
mov
sahf
xor
cmp
call
push
outsb
xchg
jo
jl
mov
adc
lds
cmp
xor
mov
lds
cltd
pop
push
incb
mov
pusha
lahf
imul
push
in
push
mov
jb
fisubl
decb
icebp
sub
incb
fsts
and
test
xchg
jnp
repnz
xor
add
bound
cmpsb
mov
mov
inc
mov
xlat
and
mov
jno
sub
mov
inc
cmp
sbb
cmpb
cltd
test
shrl
in
pminub
xchg
jne
into
push
test
stos
in
xchg
pop
pop
ret
jne
pop
out
ss
mov
loope
add
loop
jae
lods
add
incb
lahf
in
or
lods
sub
popf
jmp
mov
jbe
lock
daa
push
clc
xchg
dec
mov
lahf
hlt
adc
xor
sub
popf
xchg
push
test
inc
cs
cmp
cs
cs
mov
inc
mov
rol
or
mov
lcall
push
and
std
loopne
xchg
and
imul
mov
fs
incb
sub
pop
push
mov
xlat
incb
rclb
fdivr
outsb
xchg
decb
pop
out
cmp
rcrl
mov
fcoml
mov
jl
and
pop
xchg
cwtd
dec
adc
push
xor
push
ds
lahf
push
lea
sub
decb
cmpsl
lods
xorb
and
xchg
xor
push
pop
bound
sar
add
xor
fimuls
fsub
and
and
and
mov
mov
push
xchg
jb
xor
sbb
add
pusha
lahf
xchg
das
push
fcmovbe
inc
mov
inc
mov
es
jo
shrb
inc
mov
out
mov
pop
push
push
stc
cwtd
std
pop
incb
push
sub
pop
mov
mov
push
stc
incb
add
loopne
inc
jecxz
push
sub
cmc
out
xchg
push
cmp
lret
push
sbb
mov
fsts
sub
scas
bound
mov
push
add
cmpsb
cld
pusha
lahf
push
lds
push
mov
into
xchg
cmc
cmp
shl
xchg
lods
pushl
addr16
dec
mov
jbe
jb
sahf
std
mov
mov
adc
fsubr
dec
xor
xor
adc
xor
adc
fmuls
inc
mov
adc
push
repnz
xchg
incb
rcrl
pop
sbb
adc
into
dec
mov
mov
negb
add
decb
xchg
in
sarl
popa
xor
imul
or
inc
jns
sar
addr16
lahf
pop
jo
xlat
incb
test
add
incb
clc
pop
gs
fwait
sbb
mov
dec
mov
or
sti
pop
sub
push
xor
into
stc
and
xlat
lahf
arpl
ds
adc
fcmove
jne
mov
ss
xchg
rclb
push
mov
pop
sahf
icebp
aad
xor
and
es
jns
mov
nop
dec
mov
pop
cmp
xor
imul
mov
insb
xchg
jne
jmp
nop
aaa
ljmp
jo
dec
mov
sbb
jle
or
incb
mov
incb
xchg
es
fists
shrb
mov
xchg
imul
mov
std
xchg
push
stc
cs
in
mov
mov
mov
out
dec
stc
add
cmpsl
dec
mov
xchg
cli
mov
cmp
jg,pt
fldcw
or
decb
mov
xchg
lea
iret
je
mov
out
pop
rcll
clc
adc
pop
aas
push
push
icebp
pop
push
stc
sub
push
stc
decb
sbb
cmp
ss
lods
aaa
ja
dec
cmpsl
lods
imul
jmp
fcmovnbe
inc
mov
xlat
mov
stos
fwait
sub
scas
fildll
loope
fwait
fwait
pushf
icebp
sub
mov
xlat
fwait
add
mov
jo
jo
pop
ss
roll
fidivrs
adc
jns
mov
adc
mov
leave
leave
test
cmp
push
pop
mov
sub
sbb
sbb
imul
pop
or
es
xchg
push
idivl
jnp
lahf
das
push
test
movsb
dec
mov
iret
or
test
mov
lods
xchg
popf
fbld
rol
xchg
xchg
and
ja
xchg
or
decb
movsl
pop
adc
shll
mov
fsin
scas
push
sbb
push
push
stc
sbb
or
stos
leave
repz
ds
jbe
in
xor
arpl
std
lods
addl
cmp
pushf
enter
stos
faddl
pop
adc
inc
sti
xchg
jb
xchg
xor
in
dec
pop
mov
sbb
xor
or
jmp
sahf
lds
movsl
outsb
xchg
es
pop
pop
inc
mov
push
push
inc
mov
push
stc
push
sub
incb
inc
imulb
inc
mov
jo
lods
sbb
mov
aad
in
mov
cmp
sbb
mov
aad
xchg
cli
ret
popf
fisubrs
pop
aam
std
incb
in
fbstp
outsb
xchg
aas
cmp
roll
push
decb
idiv
jecxz
fsin
xchg
and
jl
in
ret
dec
movsb
mov
xlat
ds
fstpt
aam
add
push
mov
mov
dec
mov
fdivrs
jl
cmp
jl
xlat
addr16
pop
push
loopne
mov
mov
mov
shl
mov
cmp
push
mov
or
dec
mov
bound
mov
sub
dec
popf
divb
popf
in
jmp
shrl
shlb
sti
mov
xchg
sub
xor
mov
mov
call
push
popa
stos
cltd
adc
out
sbb
stc
cld
outsb
xchg
mov
sbb
fcoml
in
test
xchg
inc
mov
jne
movsl
adc
mov
push
jne
rol
pop
sub
stos
roll
test
push
xchg
aas
les
xor
cmp
idiv
mov
xchg
fcoml
scas
popl
insb
xchg
decb
cmc
decb
incb
std
mov
gs
pop
movl
or
mov
sub
xchg
add
inc
cwtl
inc
decl
mov
push
jnp
out
stos
mov
fwait
outsb
xchg
sti
hlt
push
lods
mov
arpl
incb
dec
xor
orb
push
fsts
popf
loope
inc
mov
insb
xchg
clc
into
push
out
jg
fisttpll
lret
ja
sbb
lahf
pop
push
jnp
xlat
dec
scas
pop
push
mov
int3
push
sbb
mov
aas
pop
rcll
inc
dec
adc
into
push
arpl
gs
jmp
mov
jns
jp
xor
fadd
outsb
xchg
cli
je
adc
popf
test
xor
cmp
pop
xchg
loop
dec
sbb
push
ss
mov
pop
push
out
test
and
pop
in
cmpsl
mov
stc
incb
test
scas
and
jl
push
pop
pop
insl
ss
out
jle
or
out
xchg
pusha
lahf
stos
and
sbb
pushf
push
std
stc
mov
push
adc
rcrb
xchg
push
adc
incb
call
mov
lea
decb
lods
rcrb
pop
xchg
sar
repz
xchg
clc
push
mov
cmp
cmp
add
icebp
sbb
aam
push
mov
push
in
xchg
fsubrp
add
test
or
repz
scas
arpl
pop
mov
int3
sub
adc
jmp
push
push
outsb
xchg
incb
xor
sar
in
sar
enter
es
stc
mov
mov
in
mov
aad
dec
mov
lret
int3
mov
mov
push
add
fadd
adc
call
cli
into
adc
cli
addr16
mov
pop
xor
dec
lret
jmp
lcall
mov
into
cmp
mov
int3
mov
mov
adc
sub
adc
mov
cltd
ljmp
pop
xor
pop
mov
mov
popf
fsubrs
incb
xchg
xorl
cmpsb
adcl
shll
mov
dec
loopne
inc
mov
jecxz
cmovle
push
pop
cmp
bound
xor
dec
rcrl
push
push
inc
mov
in
call
pushf
jmp
mov
jmp
sub
mov
add
lods
fimull
lahf
jnp
or
jno
xor
jb
aas
pop
xchg
es
or
decb
lods
mov
test
fistl
adc
test
aas
push
scas
rol
lock
mov
push
stc
stos
fsubp
out
stc
inc
mov
push
sub
add
jns
cli
mov
cmp
test
popf
mov
mov
push
sub
sub
dec
je
aaa
fwait
dec
popf
dec
mov
shl
pop
outsl
outsb
xchg
cmp
mov
popf
sahf
sahf
mov
decl
inc
mov
mov
es
pop
pushl
insl
mov
lods
sbb
mov
pop
loope
mov
inc
pop
nop
jbe
pop
test
imul
dec
sub
js
dec
loop
xchg
add
jnp
addr16
xor
inc
test
imul
jo
pop
in
xchg
inc
mov
mov
outsl
adc
out
imul
mov
cmp
dec
sbb
rorb
cmc
mov
and
movsl
fwait
sbb
and
rcll
test
dec
mov
push
sbb
pop
cltd
push
mov
lcall
fsin
add
addr16
push
stc
adc
jmp
mov
vpmulhw
lds
jns
fistps
cmp
mov
push
hlt
jb
dec
mov
xor
test
cmp
mov
fwait
xchg
cmp
stc
incb
add
cmpsl
jno
push
icebp
adc
push
sub
and
and
xchg
xchg
ja
fisubrs
pushf
aad
imul
lock
mov
leave
out
push
adc
aad
in
push
pop
jo
stos
and
out
and
mov
cmp
incb
mov
call
dec
mov
push
mov
xchg
xchg
sbb
pand
enter
or
sbb
ret
xchg
out
mov
iret
push
jp
mov
jg
sti
incb
push
cmp
fs
inc
stos
jl
fsubp
testl
jge
test
stos
insb
xchg
mov
mov
ret
lds
cmp
mov
stos
fs
sbb
bound
mov
add
mov
jp
iret
out
shr
sub
test
sbb
or
decb
mov
adc
dec
push
aam
jle
std
inc
push
gs
pop
jp
leave
and
mov
in
xchg
sarl
call
add
sbb
in
out
dec
mov
cmp
jle
adc
stos
pop
push
fs
cmp
mov
adc
add
lock
push
int
inc
mov
inc
mov
outsb
xchg
decb
pop
in
pop
lock
inc
mov
dec
mov
int
lcall
jne
roll
dec
lahf
jl
cmc
sbb
push
add
inc
mov
or
mov
push
aam
aam
xchg
dec
xchg
cltd
jmp
push
push
inc
in
aaa
push
xor
cmpb
decb
xor
mov
cwtl
movsl
lret
xchg
push
repnz
pushf
shrb
repnz
js
mov
push
sbb
sbb
sahf
dec
mov
and
ds
je
mov
sti
cmp
das
bound
rcrb
bound
repz
push
mov
pop
cltd
sti
sbb
out
dec
mov
mov
pushf
outsb
xchg
inc
negl
cmpl
xchg
xchg
bound
iret
insb
xchg
adc
fsin
jb
dec
mov
dec
mov
xchg
mov
push
cwtl
cmc
fbld
mov
popa
test
out
fbld
push
jnp
add
mov
shrl
xor
repnz
outsl
sub
xchg
mov
fnstsw
cmp
or
xlat
cs
mov
sbb
jnp
add
cmp
ret
outsb
xchg
xor
out
inc
push
aas
mov
mov
mov
mov
add
push
inc
scas
xchg
inc
mov
repz
loope
das
std
jmp
divb
add
pop
dec
adc
push
enter
mov
dec
mov
mov
mov
cwtl
sbb
outsl
orl
pop
shrb
pushf
lea
pop
push
lahf
repz
cmc
cmc
movsb
je
cwtl
andl
dec
push
bound
test
sub
adc
popf
test
ror
aad
cmp
mov
sub
pop
lret
push
dec
mov
loope
out
and
sbb
and
jmp
in
mov
mov
xchg
daa
fsubrl
incb
xchg
mov
repz
lahf
dec
addr16
mov
and
decb
adc
call
ds
loope
shlb
mov
lea
or
test
stos
sub
out
mov
pushl
sbb
cwtd
cs
sbb
movsb
pop
xchg
xor
and
pop
shrl
sub
aas
push
sahf
fmull
dec
inc
mov
pop
imul
cmp
popf
push
leave
adc
fistl
sti
and
mov
push
icebp
ljmp
stos
leave
pop
stos
rcr
adc
add
mov
ss
xchg
outsb
xchg
cmpsb
push
push
scas
adc
push
stc
decb
pop
es
xor
std
into
jne
push
std
mov
jne
call
stc
mov
idivl
xor
sub
std
push
nop
inc
mov
xchg
sti
inc
mov
fsin
mov
sub
and
sahf
push
sub
inc
push
xchg
mov
out
call
cmp
xor
pop
xor
sahf
lods
incl
or
std
mov
pop
cmp
push
mov
loopne
mov
fisttpl
stos
mov
popf
inc
negb
int3
and
sbb
out
or
ja
mov
imul
test
and
int
push
aaa
jne
xor
xor
jno
mov
fdivs
jbe
mov
jne
pop
aas
repnz
movsl
cmpsl
loope
cmc
ficompl
loop
mov
gs
add
pop
lahf
shlb
movsl
cmova
dec
or
cmp
mov
jnp
mov
cmc
xor
push
icebp
and
fwait
into
lcall
aad
pushf
cmp
mov
sbb
in
push
decl
icebp
jge
xchg
cs
inc
mov
das
es
sub
or
decb
push
jo
xchg
or
incb
fists
popf
cmp
add
out
sahf
leave
and
iret
dec
js
jle
push
push
jp
loope
xor
orl
cmc
daa
mov
or
incb
add
hlt
or
mov
adc
and
mov
or
loope
scas
icebp
adcb
sub
incb
decb
stos
mov
repz
ja
xchg
faddl
inc
add
hlt
pop
shlb
test
cmp
push
mov
mov
jo
mov
xchg
and
dec
inc
dec
push
inc
mov
call
dec
mov
inc
mov
mov
mov
and
sub
incb
repnz
jmp
mov
sti
cmp
pop
cmc
fcompl
cmp
push
cmp
lret
hlt
pop
adc
cmc
pop
jo
sahf
pop
push
cwtl
or
mov
mov
out
jnp
stc
rorl
mov
flds
xor
fs
insl
jg
push
mov
stc
fs
jb
stc
cmpsl
ret
idiv
dec
outsb
xchg
jg
xchg
icebp
jle
mov
fcompl
add
sar
out
adcb
fs
loop
aad
mov
xor
ss
mov
mov
pop
inc
aas
in
mov
shlb
out
push
xor
mov
mov
mov
pop
xor
and
decb
fidivrl
fiaddl
sbb
jg
cltd
mov
lret
push
adc
stos
push
out
cs
jb
fistpll
test
es
cwtl
push
das
dec
out
xor
adcl
fiaddl
incb
cmpsl
fildl
lds
cltd
in
mov
pop
pop
xor
xchg
push
icebp
mov
addb
inc
mov
pop
mov
lret
shl
lahf
pop
dec
mov
cmp
sub
mov
into
fwait
js
mov
push
jns
sbb
out
repnz
lcall
out
jns
jb
jge
das
seto
insl
jo
aad
sub
push
incb
jl
push
scas
cltd
fcom
push
loope
int
xchg
rcrl
add
inc
xchg
mov
sub
pop
push
ror
adc
aad
mov
xchg
in
out
jb
aaa
sbb
imul
popf
cmp
cltd
mov
leave
mov
enter
dec
mov
and
in
cmp
xchg
push
test
lret
mov
dec
mov
mov
lret
mov
mov
sbb
xchg
lea
and
push
movsl
cld
pop
push
and
stos
std
stos
jnp
push
adc
out
ljmp
pop
ret
stos
adc
fsin
adc
fsin
lret
stc
incb
jb
and
sar
jmp
sub
or
mov
mov
xchg
sbb
mov
xor
adc
push
mov
insb
xchg
pop
inc
push
movl
push
daa
out
fldl2e
lahf
mov
push
cwtd
dec
xor
test
inc
jmp
cmc
mov
stc
insb
xchg
idivl
pushf
or
pop
cmpsb
in
shlb
aam
mov
mov
pop
icebp
pop
mov
jo
pop
mov
mov
push
or
pop
sbb
mov
mov
pop
mov
inc
push
mov
lea
aad
fildl
jmp
hlt
mov
mov
test
jnp
and
push
aam
lret
mov
pop
mov
arpl
fisubrl
xlat
dec
pop
push
sub
incb
mov
loope
mov
call
push
cmp
dec
cvtps2pd
xor
cmp
mov
call
pushf
and
mov
fs
incb
call
xlat
cltd
out
inc
cld
mov
mov
push
or
mov
imul
mov
cmp
aam
out
divb
mov
lahf
cwtd
sbb
mov
pop
xor
cmp
test
jo
rcrl
movsb
cld
jle
adc
fisubrl
sahf
in
scas
jmp
arpl
push
gs
dec
cwtd
push
aam
mov
xchg
cltd
mov
push
mov
cmp
xlat
cwtd
decb
decb
idiv
adc
test
push
shrl
cmc
jmp
cmp
add
out
stos
mov
imul
test
or
decb
dec
cmp
sbb
mov
leave
movb
add
push
pop
cmc
sub
mov
adc
out
mov
dec
add
in
lret
dec
mov
and
negl
adc
fmul
enter
pushf
aam
push
icebp
cmp
pop
mov
xchg
cmp
jg
stc
incb
decb
jne
cmpsb
inc
or
mov
inc
mov
in
out
sbb
mov
pop
push
jo
cmc
decb
mov
pop
pop
aas
sub
mov
movsb
shl
shrl
cmc
repz
out
sub
decb
xchg
shll
pop
pop
andl
xchg
dec
sbb
mov
fs
pop
push
aad
sub
xchg
fidivl
push
fsub
shr
cmp
loopne
inc
xchg
inc
mov
stos
cmp
in
xchg
aad
rcrb
pop
adc
mov
enter
xchg
mov
mov
dec
mov
cld
inc
mov
jg
pop
adc
pop
mov
mov
jecxz
stos
ret
arpl
call
and
jg
sub
mov
mov
push
or
fwait
in
repz
cmpsl
and
push
mov
xchg
incb
mov
shlb
adc
xchg
clc
xchg
int3
mov
inc
mov
sarb
daa
clc
xchg
sbb
mov
or
mov
decb
xor
outsb
xchg
jnp
sbb
jmp
test
cmpsl
movsb
mov
push
pop
push
jg
lret
or
in
sbb
add
mov
mov
cmpsl
xor
std
xchg
aad
inc
pop
ret
adc
setae
sub
mov
scas
hlt
push
fistpl
sbb
mull
add
repz
sub
xlat
cmpsb
cld
xor
test
or
cmp
or
sub
fsin
pop
pop
sub
arpl
arpl
xchg
mov
push
pop
dec
mov
pop
cmpsl
out
std
cmp
aaa
dec
mov
and
xor
fwait
stos
mov
xlat
in
arpl
sbb
lods
sar
xchg
xchg
add
adc
iret
jle
push
adc
pop
insb
xchg
incb
inc
mov
pop
cwtl
orb
cwtl
lea
lea
xchg
adc
push
icebp
jae
push
push
outsb
xchg
dec
adc
xlat
mov
mov
rclb
test
push
cmpsb
fwait
gs
ficoms
jns
push
icebp
push
and
sbb
ficoml
mov
cmp
jo
xchg
scas
rcrb
icebp
cwtl
int3
les
pusha
lahf
incb
stc
mov
out
push
stc
jmp
sub
mov
jmp
cltd
cwtl
repnz
sbbb
mov
lods
jo
push
icebp
incb
inc
sub
cs
pop
fsubl
test
loopne
dec
in
in
push
lcall
mov
mov
shlb
outsb
xchg
sub
jmp
jg
jl
loope
push
aad
sbb
sar
into
into
push
fsubr
addr16
add
out
xor
addb
scas
imul
or
pop
xor
jno
in
cmp
incb
mov
repnz
aam
aad
lods
je
lahf
decb
sti
and
cmp
in
movsb
jae
fabs
sbb
adc
stc
jmp
cmpsl
idivl
jbe
stc
shrl
mov
push
or
sbb
adc
mov
stc
pop
inc
mov
cmpb
repnz
cli
hlt
or
xchg
push
pop
sbb
jns
pop
and
ficompl
cmp
loope
stc
cmc
nop
jp
adc
sbb
stc
in
mov
sbb
ror
ror
push
daa
fmul
icebp
hlt
inc
cmp
jl
pushf
lahf
adc
inc
dec
mov
idivb
scas
jge,pt
xor
dec
pop
xchg
mov
ss
mov
movsb
jle
sub
inc
popa
out
xchg
xchg
mov
test
mov
push
scas
xchg
xchg
leave
nop
jle
inc
mov
xlat
push
jmp
adc
out
push
das
push
lahf
lods
or
outsb
xchg
jmp
bnd
pop
push
icebp
popf
outsl
hlt
mov
std
lret
cmp
cmp
sbb
sub
decb
loope
negl
mov
fnstsw
jl
push
or
sahf
inc
jmp
loope
dec
fadds
pusha
lahf
mov
aas
or
decb
pop
mov
dec
jns
cmc
jnp
pop
lods
loopne
push
lret
notb
jmp
add
decb
idiv
and
dec
lahf
adc
jb
cmp
aam
jle
sbb
sub
cmp
mov
cltd
dec
mov
inc
mov
fdivl
adc
ja
cltd
sub
rcrb
icebp
in
push
fldl
decb
decb
pop
cmp
and
jl
add
mov
mov
test
and
xchg
xchg
push
icebp
outsl
inc
xchg
sbb
push
fisubl
test
int3
cmp
inc
outsl
jl
pop
test
movsl
and
incb
js
fstps
testb
jmp
cli
mov
push
pop
gs
fbstp
jp
jg
stc
mov
mov
into
sbb
jg
adcl
cmc
sub
loope
jge
repnz
leave
or
push
push
icebp
decb
xchg
sub
aad
mov
mov
shrl
fcompl
lret
mov
nop
push
xor
leave
sbb
daa
pop
hlt
es
stos
insl
enter
add
xor
bound
sar
jmp
jbe
test
aad
mov
incb
lcall
hlt
ljmp
loop
add
mov
fsubrp
add
cmc
pop
in
mov
mov
cmpsb
ret
add
sub
incb
scas
test
pop
push
fs
jge
dec
out
inc
pop
push
xor
fbld
jge
sub
cmp
ret
and
decb
negl
incb
xor
cltd
sub
popf
jecxz
xor
mov
fwait
test
call
mov
adc
adc
aaa
mov
popf
jg
lret
nop
xchg
add
mov
xchg
popf
add
ljmp
incb
lahf
sub
inc
ja
test
push
fsubrp
out
or
dec
and
mov
push
stc
pop
mov
lahf
fwait
sbb
pushf
mov
mov
insb
xchg
je
daa
or
adc
nop
cmp
lods
push
dec
mov
sti
pop
mov
scas
rcrl
aas
imul
mov
jecxz
push
int3
ret
lret
dec
xor
sbb
jmp
jno
mov
daa
cwtl
add
add
add
insl
imul
jge
call
aad
inc
popf
test
and
rorl
cmp
jge
out
sub
push
cmp
imul
or
mov
cmc
decb
push
fnstcw
push
pop
add
incb
fdivrs
inc
mov
repz
scas
stos
cmp
jmp
xchg
mov
mov
ss
mov
dec
call
sub
mov
adc
pop
cmp
fistps
fsin
sub
out
insl
inc
popa
push
jbe
cmp
mov
push
pop
mov
lcall
jne
pop
ret
sub
daa
jge
sub
incb
popf
pop
jmp
adc
push
cmp
cmp
popf
arpl
repz
mov
push
xor
xchg
fnstenv
out
cltd
sub
lock
decb
stos
mov
xchg
test
jns
ljmp
xorl
xor
push
add
scas
adc
imul
cwtd
bound
shr
fsin
cmpsb
lock
out
aam
lahf
sub
mov
stc
ja
lea
add
adc
lahf
repnz
imul
or
cs
leave
cli
movsb
pop
dec
add
loopne
adcl
mov
fdivrp
mov
rcr
pop
cli
into
jmp
mov
mov
repz
sahf
nop
or
xor
mov
test
inc
mov
or
test
cmp
sbbl
in
and
mov
addr16
push
mov
fcomps
icebp
mov
mov
pop
jge
mov
push
push
stc
mov
hlt
cmpsl
pop
mov
ss
lahf
ja
or
fmull
push
fisubl
in
mov
les
mov
xor
lret
dec
push
and
xor
push
pop
out
popl
in
fsubrl
sar
fiadds
std
pushf
push
test
and
std
sahf
cmc
lods
shl
loop
and
incb
es
call
pop
in
add
lahf
sub
icebp
adc
pop
xor
insb
xchg
faddl
inc
sub
ljmp
lcall
inc
mov
std
mov
in
mov
nop
adc
mov
movsb
and
mov
sub
xor
pop
in
sar
call
nop
pop
fsubp
mov
insl
pop
sub
mov
pop
adc
push
loope
sub
rcrl
push
stos
loopne
jb
cs
or
sbb
stos
leave
cmp
nop
pop
xchg
lret
xorb
mov
stc
decb
jb
into
rorl
daa
sbb
inc
xor
pop
and
push
stc
loopne
or
decb
mov
popf
fs
inc
sub
incb
out
out
sub
xchg
mov
mov
adc
xor
adc
sbb
orb
daa
sub
loope
sub
loope
cmp
cmp
jae
inc
mov
cltd
repz
push
mov
popa
ficoms
dec
dec
mov
scas
push
fsubrs
xchg
add
sub
jne
xchg
pop
add
mov
and
incb
fildl
xchg
aad
inc
mov
mov
movsb
pop
pop
jge
mov
fstpl
ja
rcll
ret
ljmp
in
sub
inc
mov
sub
jne
cmc
stos
jno
jmp
stc
jge
and
mov
notb
arpl
imulb
adc
cmp
sar
jp
jae
mov
loope
mov
popa
jl
fs
xchg
fs
stos
daa
pushf
xor
or
mov
pop
test
loop
xchg
pop
cmp
push
fdivrs
mov
dec
mov
fldt
shrb
aad
ret
mov
mov
sbb
xchg
or
pop
in
add
scas
xchg
and
jns
aas
inc
mov
dec
decl
cld
or
ds
mov
mov
xchg
cmp
aad
jae
rolb
add
incb
dec
mov
push
icebp
incb
incb
stc
decb
notb
int3
enter
leave
loope
mov
mov
adc
fnsave
pop
pop
pop
xor
pop
jle
ret
push
icebp
loop
jns
xor
xlat
dec
mov
incb
inc
mov
lods
push
testl
cwtl
shlb
inc
daa
imul
in
scas
cmpsl
lcall
cmp
es
push
repz
sahf
xchg
mov
or
dec
mov
dec
sub
out
cld
mov
js
sbb
sub
das
adc
cmc
test
or
sbb
jmp
popf
sub
mov
out
xor
xchg
adc
cmp
push
icebp
sbb
add
cmpsb
inc
mov
xchg
cmc
mov
cli
scas
dec
mov
mov
insl
or
outsl
jae
adc
mov
es
cwtl
xlat
or
fs
fcoms
adc
js
sti
mov
adc
push
loope
and
jp
lds
decb
cmc
decb
jne
add
xlat
decb
push
incl
xchg
movsl
jmp
mov
cmp
mov
mov
nop
daa
int
mov
cmp
pop
ljmp
cs
cli
sahf
icebp
pop
sub
push
add
sbb
lock
lea
pop
movsl
outsb
xchg
dec
stos
mov
jb
test
ja
or
push
icebp
inc
call
pop
add
inc
mov
pop
xchg
shl
jmp
push
rorb
sbb
hlt
sti
lret
fwait
leave
repz
pop
sbb
insb
xchg
js
decl
lcall
jg
notl
mov
xchg
aas
xor
outsl
pop
jb
cmp
bound
cli
adc
stc
push
arpl
adc
test
and
incb
jns
cmovb
push
mov
lock
push
je
ret
test
add
pushf
xchg
jle
mov
jae
lcall
dec
xchg
jmp
rorl
sar
lcall
sbb
cltd
mov
adc
add
jg
loope
idiv
dec
enter
or
insb
xchg
stos
arpl
idivl
mov
xchg
lds
jns
push
adc
test
and
daa
divl
outsb
xchg
incb
insl
jmp
xor
std
mov
bound
je
mov
pop
leave
bound
mov
cmp
dec
jecxz
xchg
ds
outsb
xchg
cmp
fs
decb
cmc
lods
or
sbb
xchg
aam
jns
sar
test
push
push
fsubr
in
rclb
inc
mov
pusha
lahf
xchg
and
incb
incb
sarb
in
cli
fwait
mov
push
xchg
mov
sbb
movsl
sbb
repz
cmp
jge
or
fnstenv
inc
mov
mov
stos
idivl
sub
decb
insb
xchg
decb
ffree
insl
sbb
inc
mov
dec
mov
jmp
dec
mov
pop
es
loopne
fdivrs
xchg
cmp
fsin
aaa
jl
mull
push
sarl
xchg
int
cmc
pusha
lahf
mov
jb
mov
xchg
push
stc
pop
sahf
cmp
mov
lods
cs
sub
xchg
je
jle
xchg
xor
mov
push
stos
mov
adc
sub
push
stc
incb
xlat
aaa
stos
mov
push
jge
and
movsl
ljmp
mov
stos
insb
xchg
cmp
jns
xor
mov
in
rcrb
push
gs
mov
dec
mov
mov
repnz
xor
insb
xchg
jl
mov
and
inc
mov
bnd
lret
fidivs
dec
mov
stos
jo
mov
mov
dec
xchg
and
xchg
mov
jl
decb
stc
mov
xor
pop
add
ljmp
imul
loopne
or
xlat
incb
mov
jo
mov
xchg
mov
aam
mov
sub
fstps
xchg
shlb
test
xchg
jmp
mov
out
cltd
xor
mov
mov
aam
push
out
cmp
daa
sub
loop
mov
jmp
mov
lods
in
inc
in
pusha
lahf
dec
stc
jg
sub
repnz
pop
xor
add
pop
sub
icebp
push
push
mov
rcrl
int
mov
int
aas
sub
icebp
decb
cmc
decb
adc
fsubs
push
sub
mov
ret
aad
or
sbb
xor
pop
dec
cmp
or
cmp
jle
adc
std
sub
inc
mov
jo
loop
dec
mov
repz
sub
lahf
mov
icebp
hlt
cmpsl
dec
mov
cmp
push
insl
add
incb
push
cmp
xor
stc
and
incb
mov
push
icebp
pusha
lahf
sub
push
cwtd
cwtd
inc
mov
mov
loop
stos
stos
push
stc
push
lock
pop
aam
pop
sbb
cltd
test
sti
decb
pusha
lahf
cmp
cmc
subl
js
sbb
sbb
cld
jmp
std
fldt
inc
mov
mov
push
cmp
repnz
test
mov
xchg
stos
mov
imul
hlt
ja
push
or
shll
sbb
push
stc
incb
inc
or
decb
cs
pop
pop
lret
shl
jecxz
sub
xchg
outsl
pusha
lahf
hlt
jae
rol
xlat
push
icebp
stc
add
test
sub
adc
inc
lret
mov
jae
jge
mov
les
aad
negb
sbbb
adc
push
inc
mov
jl
pop
jp
out
inc
mov
mov
mov
xor
push
scas
push
dec
loop
repnz
xchg
incb
mov
ret
lea
fwait
push
mov
jle
insl
stos
sub
negb
mov
xchg
mov
scas
clc
pop
pop
adc
aad
mov
sar
adc
aad
je
fsin
or
iret
iret
xchg
mov
ficoml
es
loop
push
dec
pop
add
decb
xchg
stos
pop
daa
jae
jae
mov
push
incb
stos
jb
pop
insl
mov
loopne
ja
lret
lahf
sbb
std
push
in
idivl
call
faddl
jb
sbb
mov
and
in
mov
dec
mov
cmc
iret
jae
pop
in
xchg
jbe
and
icebp
dec
mov
popf
frstor
outsb
xchg
imul
sar
mov
inc
mov
xchg
xchg
xor
aas
rclb
dec
mov
cmp
xchg
pop
stc
xor
pop
sbb
add
and
inc
out
mov
sub
inc
mov
push
push
add
and
dec
mov
shrl
mov
add
mov
std
decb
in
push
icebp
sbb
dec
cmp
xchg
cmp
pop
mov
lds
fildll
out
cmc
inc
pop
cmpsb
sub
cmpsl
jnp
mov
les
add
xchg
daa
adc
sbb
js
shr
mov
shr
mov
xchg
cli
cmpsb
mov
xor
movl
mov
mov
adc
out
es
popa
push
std
cwtl
xchg
jbe
adc
sbb
sahf
xchg
inc
outsl
mov
fisubrs
mov
das
cmp
adc
push
out
fisubs
and
scas
mov
cli
cmc
xlat
push
fs
bound
cmc
incb
addr16
mov
pop
jbe
lds
xchg
lods
rcrl
cmc
decb
nop
ret
push
jae
pop
xor
and
sbb
jmp
sti
incb
stc
push
decb
decl
icebp
inc
fldt
cmp
movsl
dec
mov
dec
xchg
xchg
test
mov
jno
lcall
sbb
rol
imul
mov
pop
out
loopne
icebp
mov
out
mov
in
jp
jnp
mov
imul
mov
fcmovbe
lret
out
push
lea
jns
repz
lret
mov
mov
lods
and
pusha
lahf
movsb
dec
loope
mov
sar
mov
xchg
push
push
lock
fs
sub
mov
inc
mov
loopne
push
adc
decb
imul
shl
cwtl
mov
sub
faddl
mov
sub
mov
xchg
push
stc
decb
mov
iret
enter
pushf
push
xor
lea
mov
std
and
mov
ror
fdivrs
push
xor
pop
push
mov
mov
cmp
stc
movb
mov
decb
xchg
mov
xlat
dec
hlt
icebp
dec
jae
dec
mov
cltd
sti
ljmp
outsb
xchg
popf
mov
push
jg
mov
and
test
mov
hlt
je
nop
cltd
aas
and
das
add
cmp
mov
decb
loop
outsb
xchg
dec
jle
imul
pop
stos
pushl
pop
adc
dec
mov
cli
push
sbb
jmp
or
xchg
mov
adc
xlat
push
or
decb
or
incb
jp
mov
xchg
sbb
sbb
popf
sub
imul
sub
stos
fcoml
scas
lock
ret
adc
xlat
scas
leave
and
decb
push
push
adc
mov
xlat
aaa
stos
stos
aam
out
adc
arpl
cmp
cmc
aad
cld
mov
mov
cmp
jnp
mov
pop
jp
call
jle
mov
dec
mov
pusha
lahf
je
insl
jb
scas
stc
addr16
in
inc
mov
sub
lea
shlb
lods
push
xor
fwait
cmp
fwait
jecxz
inc
push
pop
and
decb
cltd
push
cmp
arpl
xchg
add
pop
mov
mov
push
mov
jle
inc
mov
icebp
push
inc
mov
mov
loopne
stc
aad
repnz
mov
out
push
stc
jecxz
sbb
sbb
and
push
or
inc
pop
int
mov
mov
push
fdiv
in
int3
add
std
jae
je
xchg
add
cs
je
stos
adc
femms
icebp
xchg
flds
or
popf
sub
andb
pop
lods
dec
mov
add
loope
popf
adc
jns
cmp
fs
mov
mov
dec
stos
movsb
rorb
std
mov
xchg
pushf
scas
jp
xchg
sub
idiv
push
pop
popf
imull
xlat
dec
aam
cs
fists
mov
in
enter
dec
mov
xchg
push
gs
bound
jnp
mov
cmpsb
sub
incb
cmp
or
xchg
popa
fmuls
inc
mov
sub
jo
mov
mov
call
in
mov
loopne
push
sub
push
fidivl
insb
xchg
incb
loopne
mov
orb
lret
cmp
mov
rol
fst
ss
shrb
dec
mov
scas
jnp
pop
mov
xchg
dec
mov
sbb
xchg
xchg
repnz
stc
and
pop
outsb
xchg
decb
cmc
pop
call
mov
in
scas
cmp
insl
or
and
cmpsb
inc
mov
pop
cmc
lret
xchg
adc
fdivrs
and
pop
or
dec
mov
in
movsb
jg
repz
and
inc
add
mov
clc
mov
mov
hlt
rcrb
cli
lods
inc
mov
mul
mov
cmp
in
cmp
mov
hlt
int
xchg
dec
mov
jge,pt
add
movsb
dec
mov
mov
xchg
jle
jo
std
gs
xor
jmp
rcrl
xor
aad
shll
pop
lahf
jbe
mov
cmp
pop
imul
sub
jg
out
xchg
and
jmp
pop
pop
mov
adc
test
push
push
aaa
and
cwtl
or
cwtd
jns
movsb
mov
ret
sub
in
loope
or
dec
inc
ss
xor
inc
sub
mov
push
icebp
jo
aam
xchg
xor
fsin
add
pop
sbb
cmpsb
inc
sbb
pop
fnstcw
jg
xchg
lret
cmp
int
lret
sar
fs
icebp
jmp
or
xchg
fs
es
sbb
fs
cwtl
push
imul
add
xlat
aad
add
pop
push
jne
jns
icebp
add
stos
popl
lock
adc
insb
xchg
incb
jo
mov
mov
int3
shll
cmp
fwait
dec
xchg
sub
mov
and
mov
mov
je
decb
incb
jecxz
and
aad
in
arpl
xchg
mov
mov
adc
mov
lahf
insb
xchg
call
es
cs
gs
xor
shll
lea
jmp
in
cmp
lret
mov
mov
sahf
pop
imul
shrb
adc
sarl
pop
add
iret
pop
cmc
cmpsl
punpckhwd
movsl
decb
adc
icebp
pop
or
fmul
push
pop
mov
sbb
mov
mov
sti
nop
arpl
mov
fsubl
incb
popa
faddp
lock
sahf
ljmp
push
imul
pushf
or
push
mov
sbb
mov
dec
aaa
sub
es
leave
dec
out
sbb
dec
test
pop
sub
lret
aad
mov
mov
sub
lock
pop
dec
mov
and
mov
and
and
jae
loopne
dec
mov
lret
mov
cs
add
loop
sbb
loop
lret
sbb
push
mov
es
pop
je
adc
and
pop
mov
imul
js
mov
cld
inc
mov
es
ret
ror
sub
ja
mov
fistps
push
ja
xchg
inc
iret
stos
mov
mov
inc
cmp
roll
add
mov
pop
push
decb
sub
mov
cwtl
mov
cmp
xchg
dec
imul
in
xchg
dec
add
dec
jns
aam
outsb
xchg
fsts
mov
daa
sbb
subb
std
popa
push
jg
sarb
adc
and
out
fiadds
in
ret
mov
mov
mov
push
in
push
add
imul
push
sbb
dec
adcb
and
rol
in
push
xor
leave
xlat
and
enter
sti
xchg
mov
sar
leave
nop
lcall
adc
cmp
mov
test
dec
mov
dec
mov
cmp
imul
lahf
or
decb
xchg
mov
incb
xor
jo
mov
popa
imul
jle
mov
stos
enter
and
rorl
jo
out
xor
stos
sbb
std
loop
rcrb
scas
mov
cmc
mov
add
incb
std
incb
decb
inc
mov
adc
and
in
ret
xor
fcomip
adc
fcomi
std
jl
push
loop
fsubr
cmp
push
xchg
or
jl
popf
incb
lods
cmp
cmp
pop
push
jb
push
pop
push
push
xchg
push
insl
leave
push
icebp
incb
out
ret
mov
stc
decb
arpl
xor
ja
lcall
mov
xor
cmp
fsubrl
xchg
jmp
stc
outsl
lock
push
cmpsl
xor
dec
fs
incb
stos
pop
cli
sarb
imul
incb
decb
arpl
cs
push
int3
cmovb
cmp
fsin
mov
fmull
cmp
mov
fsubrl
sub
fstps
push
adc
jmp
mov
mov
shll
subb
push
pushf
test
push
pop
pop
in
cwtl
insb
xchg
incb
std
jo
xor
bound
scas
sbb
and
movsl
pop
imul
notl
jo
test
mov
popf
outsl
mov
inc
jg
xchg
and
incb
decb
mov
jp
xchg
mov
lock
xchg
push
mov
push
add
mov
ss
pop
inc
mov
jno
pop
cwtl
adc
sbb
icebp
mov
cld
fnstcw
xchg
mov
out
testl
pop
inc
or
scas
lahf
jmp
movsl
popf
sub
cmpsb
in
xor
xor
xlat
aaa
test
add
decb
idiv
mov
dec
jb
lea
dec
mov
cmp
xor
popf
iret
cs
ja
pop
out
pop
or
cwtl
js
std
decb
jl
jns
addb
shll
inc
mov
xchg
mov
jno
xchg
and
jb
mov
or
dec
cmp
add
decb
cmc
incb
dec
mov
inc
mov
cmp
in
xor
sti
incb
xchg
cld
jl
mov
and
inc
out
push
icebp
dec
iret
sbb
dec
mov
pop
test
decb
rcrl
cld
pop
adc
cmp
pusha
lahf
sbb
jmp
aas
test
js
adc
sbb
xchg
outsl
jp
mov
mov
aam
xchg
incb
push
sbb
sbb
orb
loop
ss
xchg
xchg
jge
mov
xor
std
dec
pushf
push
icebp
push
mov
incb
aaa
mov
pop
test
dec
mov
or
fldl
mov
cmc
and
iret
aaa
cmpsb
pop
stos
cltd
lods
xor
out
cmp
add
push
stos
cmp
ret
xchg
and
cmp
adc
or
sbb
fsin
cmp
cmpsl
mov
mov
shl
adc
test
pop
sti
mov
lds
popf
or
cmp
movsl
xchg
rcll
sar
lods
lahf
push
push
js
movaps
in
xor
mov
and
hlt
pop
mov
inc
imull
decb
push
inc
mov
fs
mov
inc
mov
es
iret
out
jecxz
js
cld
mov
sbbl
or
mov
fldenv
sar
mov
pop
mov
jo
inc
mov
pusha
lahf
jmp
imul
mov
std
jnp
icebp
int
mov
test
inc
mov
sbb
fistpl
and
jmp
rcr
inc
mov
mov
testl
repz
incb
std
xor
aad
dec
xlat
push
sub
pusha
lahf
cmp
jecxz
idiv
push
out
adc
inc
mov
js
pop
rclb
sub
mov
or
testb
jns
popa
cmpsb
jge
xchg
sarb
les
incl
mov
inc
mov
mov
jp
mov
into
cmc
fidivs
in
lock
lock
stc
cli
enter
sbb
sub
and
incb
addr16
pop
imul
cli
and
shlb
std
out
faddp
cld
xor
mov
iret
rolb
daa
lahf
jno
and
stc
outsb
xchg
incb
xchg
push
shl
jo
mov
mov
xor
cmp
lahf
scas
push
inc
inc
jge
popf
cmp
inc
mov
jne
sti
decl
mov
mov
fs
sahf
cli
scas
cmp
icebp
mov
mov
adc
sub
pop
mov
jo
cmp
push
push
icebp
rcl
js
aam
adc
in
subl
shll
sub
mov
cli
mov
xchg
fs
icebp
fcmove
fcomps
mov
sub
xchg
mov
mov
inc
mov
pop
dec
mov
pop
mov
push
xchg
mov
cmp
rcll
sti
sbb
cmc
cli
pop
xchg
iret
sahf
lret
out
cmp
sti
call
inc
pushf
icebp
pop
jmp
sbb
nop
in
loop
inc
mov
das
sub
decb
idiv
and
sub
push
dec
mov
out
int3
test
adc
inc
jne
cwtd
mov
pop
mov
repz
cmp
dec
sbb
inc
cs
xchg
stc
mov
adc
into
fimull
xor
int
push
mov
arpl
inc
mov
jo
icebp
xchg
addr16
mov
sbbl
and
call
and
aaa
lock
mov
dec
mov
and
inc
mov
test
xor
inc
mov
int
js
std
notb
sub
xor
jbe
inc
add
sbb
shll
lea
push
stc
test
ja
int3
jae
dec
xor
xchg
incb
popf
fdiv
pop
xchg
pop
jb
dec
mov
mov
adc
dec
add
incb
jbe
and
mov
shr
rolb
std
xchg
xlat
dec
mov
or
shlb
jmp
int
jo
adc
shl
xchg
scas
and
insl
sbb
lock
aad
imul
xor
loope
dec
mov
inc
mov
xorl
idiv
inc
mov
stos
dec
sub
cmpsl
popl
sahf
sub
gs
fcmovb
xor
cmp
pusha
lahf
decb
cmc
decl
add
movsl
cmp
das
insl
sub
xor
cmp
rcll
push
pop
pusha
lahf
decb
dec
mov
dec
mov
es
dec
mov
dec
call
std
push
sbb
lods
cmpsl
jge
mov
push
ret
in
das
pusha
lahf
jne
sbb
xor
cmpsb
and
incb
mov
icebp
loope
stos
shlb
and
xchg
cwtd
xchg
leave
std
pop
jg
ja
addr16
ds
xchg
cld
sub
in
mov
rol
mov
dec
fimull
push
icebp
dec
in
cmc
xlat
cmc
and
adc
fs
decb
add
ret
push
pusha
lahf
fstpl
adc
in
addb
cmpsb
mov
mov
shl
daa
icebp
aam
mov
out
icebp
inc
jg
jecxz
lret
mov
stc
ljmp
add
mov
mov
or
xor
add
pop
daa
out
xlat
mov
in
fsin
in
pop
mov
adc
fildll
push
incb
sbb
sar
in
shl
dec
mov
clc
jne
aaa
and
decb
jp
xchg
mov
mov
std
imul
mov
fwait
push
push
sbb
call
fstpl
cltd
incb
stc
jge
es
jg
mov
imulb
imul
cmp
fsin
mov
mov
mov
dec
iret
or
push
pop
loope
lock
int3
mov
fstpt
mov
fwait
push
mov
das
mov
mov
xchg
test
repz
mov
out
andb
mov
lock
push
icebp
inc
cs
jl
dec
jne
xchg
decb
and
mov
jecxz
sti
lods
ds
xchg
int
mov
repnz
ss
mov
and
sbb
sub
cmp
jmp
divb
jae
mov
xor
and
cmc
aad
add
and
pop
shr
aaa
inc
dec
mov
lods
ret
pop
loopne
insb
xchg
incb
xor
imul
dec
mov
imul
cwtl
xchg
cwtd
decb
icebp
incb
repz
addr16
popa
int3
mov
inc
mov
mov
lahf
shrb
es
andb
mov
xor
je
or
ss
outsl
mov
xchg
hlt
jp
mov
fdivl
mov
fs
push
dec
dec
and
subl
sbb
xlat
bound
sub
sub
or
or
jle
cs
dec
cmc
ja
pop
cwtl
addr16
ret
push
decb
xchg
notl
cld
inc
sahf
sahf
inc
mov
xchg
js
mov
dec
mov
loopne
xchg
das
xor
ss
stc
mov
idiv
ds
jns
sbb
add
decb
mov
cwtd
incb
mov
push
repz
in
mov
and
sti
scas
and
mov
adc
jo
hlt
test
lcall
pop
addl
fdivr
xchg
sti
jbe
jl
icebp
jmp
mov
lods
bound
mov
mov
std
add
insb
xchg
bound
or
jo
gs
outsb
xchg
jmp
and
ret
movb
int3
mov
int
gs
mov
out
mov
cwtd
sub
xor
inc
mov
jno
xchg
decb
push
stc
pop
sbb
sbb
push
icebp
out
mov
adc
push
stos
mov
fsin
pusha
lahf
sbb
inc
mov
or
call
andl
xchg
cli
push
incb
test
negb
cmpsb
jbe
fsts
or
lcall
and
daa
shl
jb
ret
out
lcall
fsubs
sahf
imulb
lea
test
cmc
pop
out
or
incb
mov
adc
jl
adc
inc
push
mov
in
out
pop
outsb
xchg
out
push
adc
rcr
loope
xchg
and
inc
mov
and
ljmp
or
pop
scas
lcall
in
mov
hlt
cs
pop
dec
jnp
adc
cld
add
mov
rolb
in
dec
sub
and
decb
cwtl
hlt
rcll
pop
xor
scas
cmp
outsb
xchg
movsb
ldmxcsr
jecxz
pop
repz
js
pop
cmp
das
pop
bnd
test
mov
addl
mov
mov
sub
mov
cmpsl
int3
rolb
adc
pop
movsl
scas
ffree
sar
inc
mov
dec
add
icebp
dec
mov
or
incb
js
jmp
icebp
inc
mov
cli
mov
cmpsl
loope
and
jns
push
and
push
out
out
adc
adc
dec
subl
cmpsl
inc
pop
xchg
adc
fsubrs
decb
or
decb
push
insb
xchg
xor
sub
and
mov
imul
sub
cwtl
out
adc
rcl
fcompp
fnstenv
jnp
int
inc
in
push
sub
jbe
mov
push
pop
push
pop
pop
sub
xor
aad
jns
and
push
stc
jecxz
fdivl
ret
sbb
mov
and
xchg
icebp
in
mov
aad
mov
icebp
xor
mov
cmp
adc
imul
lret
pop
mov
xchg
incb
jmp
fcoml
icebp
and
incb
jne
mov
jl
xlat
pop
arpl
xchg
dec
mov
fs
dec
cmp
decb
icebp
pop
and
notl
mov
xchg
bound
aas
insl
enter
cwtl
dec
mov
fs
pop
lahf
push
icebp
incb
stos
je
mov
das
in
mov
xchg
xchg
sub
xchg
shrb
xchg
inc
scas
std
xchg
push
mov
xor
jb
test
icebp
push
pop
push
fistpl
mov
pop
sbb
lds
inc
mov
jmp
add
sub
xchg
addr16
lahf
mov
push
dec
mov
mov
xchg
and
jl
cmp
pop
loop
mov
mov
adc
and
pop
push
xchg
dec
mov
in
push
or
dec
rcrb
xor
ud0
dec
mov
adc
xchg
and
cs
sahf
in
mov
shrb
xor
lds
inc
pop
mov
fwait
mov
aad
mov
sbb
repz
je
jns
not
loopne
repz
xchg
pop
je
sbb
xchg
fsubr
lock
mov
sar
xchg
sub
movsl
ret
xchg
lods
jnp
cmp
jmp
adc
mov
sub
push
icebp
mov
push
incb
and
ja
idivl
jne
cmp
adc
mov
dec
rclb
inc
int3
cwtl
mov
aam
popf
outsb
xchg
ljmp
xchg
pause
fcmovb
es
cld
aaa
pusha
lahf
mov
add
cmpsb
or
pop
inc
mov
pop
rolb
daa
and
icebp
scas
sbb
jp
jae
dec
mov
pop
or
incb
push
cmp
cmc
ret
jae
sub
xchg
cmp
sbb
sbbl
repnz
adc
adc
mov
sahf
and
cs
test
dec
mov
jbe
and
jle
cmc
dec
loope
inc
mov
sub
in
or
inc
lcall
popa
cltd
push
inc
inc
test
xchg
incb
negb
daa
das
nop
std
imul
add
jno
inc
mov
jge
lret
cmp
mov
pushf
movsl
loop
mov
test
xor
inc
dec
mov
cmp
dec
mov
push
dec
mov
cwtd
imul
xor
hlt
sbb
mov
mov
sbb
ljmp
stos
cld
repnz
xchg
jns
xor
lock
jp
mov
shlb
shll
mov
ret
ret
mov
pop
int3
mov
inc
mov
push
icebp
incb
idivl
jbe
idiv
cwtl
sbb
repnz
cltd
adc
push
aam
scas
add
mov
cmp
pop
jmp
cwtl
fnstsw
sbb
ss
jne
shr
scas
dec
icebp
fs
sub
decb
xorl
or
stos
sarl
sub
mov
mov
cld
mov
es
movsb
leave
ret
push
icebp
lods
rorl
jmp
mov
pop
dec
popf
popf
test
bsf
lock
nop
fcoms
and
xchg
cmpsl
mov
or
jecxz
sbb
cs
xor
bnd
inc
mov
cltd
shrl
roll
sti
rorl
shll
cmp
sub
adc
insl
cwtl
std
xor
mov
xlat
ljmp
dec
mov
pusha
lahf
incb
setns
leave
xor
mov
push
cmp
inc
mov
or
mov
push
inc
and
out
gs
test
pop
mov
mov
call
test
rorl
cmc
fldt
aad
in
movsb
push
in
cmp
pop
ret
cmpsl
add
xchg
mov
sti
ja
pop
or
movsl
mov
mov
lea
popl
add
xchg
into
lret
outsl
popf
test
icebp
aad
fwait
push
sbb
insb
xchg
mov
cltd
mov
loop,pt
jne
sub
decb
icebp
mov
in
sub
mov
hlt
je
aaa
aaa
les
xchg
insb
xchg
mov
jnp
adc
mov
or
lock
and
inc
mov
movsb
mov
inc
add
lret
je
push
mov
sbb
add
and
incb
sub
mov
lods
imul
xchg
mov
int
mov
dec
xlat
lock
loop
pop
dec
clc
scas
sarl
scas
push
xor
mov
jne
or
cwtl
cli
sti
lds
daa
sbb
xchg
scas
in
mov
jp
in
repz
popa
mov
mov
jns
xor
out
idiv
push
int
jo
mov
sbb
mov
test
adc
aad
inc
pusha
lahf
sbb
inc
jae
inc
idivb
mov
fldl
idivl
pop
pop
inc
mov
enter
scas
jne
pop
inc
mov
xchg
sbb
sbb
and
icebp
fwait
cwtl
pop
stos
jb
push
xor
mov
test
mov
dec
mov
pushf
jbe
jg
adc
pop
dec
mov
stc
or
xchg
dec
push
push
arpl
subb
jae
fwait
decb
xchg
insb
xchg
outsl
or
push
push
test
scas
arpl
shll
push
pop
outsl
adc
test
or
or
inc
mov
cmp
mov
leave
cs
loop
in
rclb
mov
hlt
xchg
in
xchg
incb
test
xchg
mov
mov
lods
jb
jmp
imul
jmp
cmp
xchg
scas
lcall
outsb
xchg
stos
cmp
out
mov
popa
xchg
push
stc
inc
xchg
sub
jnp
bound
lret
mov
mov
cli
es
mov
dec
xor
xlat
pop
testb
mov
push
test
frstor
jne
lea
adc
dec
lret
jae
mov
and
mov
sahf
mov
mov
in
int
mov
test
lds
xor
xor
pop
rol
mov
pop
lock
jne
xchg
lods
cmpsl
imul
decb
pusha
lahf
mov
enter
test
and
dec
mov
fs
dec
enter
movsb
sbb
ret
out
mov
mov
sahf
insb
xchg
cmpsb
mov
mov
adc
in
sbb
es
mov
arpl
mov
insl
fwait
sti
mov
or
mov
decb
icebp
popf
icebp
adc
inc
jge
push
stc
addr16
push
test
pop
xchg
sarb
mov
js
aaa
repz
fcoms
push
and
mov
ds
ret
jge
push
ja
lahf
sarb
ja
imul
stc
popf
ljmp
lahf
cmp
inc
shrb
sbb
mov
std
inc
mov
insb
xchg
roll
jecxz
lea
fnstsw
pushf
mov
insl
iret
inc
mov
popf
adc
ljmp
dec
jg
and
stos
and
incb
mov
inc
mov
idiv
or
bound
das
mov
insl
sbb
xor
cwtl
sar
cmp
adc
mov
mov
sbb
cmpb
clc
xchg
fstps
inc
pop
jno
notl
in
movsb
ja
push
orl
mov
push
sahf
or
ja
jno
xchg
add
lods
fucom
cmp
fmull
rcl
mov
or
sub
incb
std
pop
arpl
decb
cmc
test
xchg
mov
dec
mov
dec
mov
add
push
loop
jae
push
popf
jge
int
and
loop
rcl
daa
idivl
faddl
jb
outsl
leave
jbe
xor
dec
int3
subl
mov
cltd
inc
lcall
sub
and
mov
mov
mov
sbb
cmp
and
ss
mov
insb
xchg
incb
cli
das
outsb
xchg
imul
and
jo
xchg
push
aad
mov
mov
cld
test
out
push
stc
inc
cmp
xor
adc
dec
popa
test
repnz
idiv
aas
adc
jmp
stos
addr16
decb
xor
js
sti
pop
sbb
and
je
jmp
dec
xchg
arpl
inc
mov
sar
and
inc
mov
cmpsb
loopne
cwtd
cltd
lahf
mov
into
inc
mov
jl
and
xlat
dec
mov
sub
inc
or
mov
cs
fstl
insl
xchg
icebp
in
mov
pop
add
mov
jle
sbb
leave
cmpb
mov
pop
fs
jge
add
lcall
sub
sahf
ja
ss
imul
dec
mov
js
lods
ljmp
inc
mov
add
push
pop
inc
stc
andb
pop
test
push
loope
scas
push
sub
decb
out
mov
lods
mov
mov
xchg
pop
xchg
movsl
push
ret
lahf
xchg
jmp
gs
sbb
jl
jge
fwait
xchg
xchg
cmc
aad
rol
mov
rcrb
xchg
insl
mov
sub
idiv
mov
push
inc
mov
xor
fiaddl
lahf
adc
mov
mov
es
inc
mov
sti
call
test
xchg
fadds
pop
outsb
xchg
adc
adc
fiaddl
iret
jbe
mov
sarl
jecxz
xchg
adc
adc
mov
mov
rorl
cmc
incb
ljmp
out
and
or
incb
lods
repz
pop
and
mov
lds
ljmp
cs
arpl
xor
push
add
arpl
jmp
mov
push
pop
jg
xor
call
lcall
jb
cltd
decb
add
cmp
incb
ss
and
in
adc
pop
dec
insl
mov
push
ds
mov
dec
test
mov
iret
js
decb
mov
lock
jecxz
scas
sub
mov
pop
fld
jbe
add
stos
repz
repnz
daa
xor
ss
fistl
subl
add
mov
adc
leave
or
xlat
decb
cmc
sub
cmp
cmp
xchg
or
and
cmc
sbb
adc
iret
mov
jne
mov
push
or
sbb
cli
mov
pop
dec
mov
sub
incb
decb
aad
hlt
mov
rorl
std
or
xor
jne
inc
je
lds
cmc
mov
pop
aad
push
int
inc
fs
push
test
xchg
addr16
pop
fwait
sub
mov
imul
cltd
incb
shr
jns
jbe
cmp
call
aaa
imul
xchg
hlt
pop
add
mov
push
sarl
push
jo
push
and
popa
add
aaa
fldcw
sar
xchg
scas
jmp
out
push
sub
ficoml
jmp
fs
incb
stc
jle
outsb
xchg
push
enter
pop
negb
jnp
lret
and
decb
rcl
push
icebp
test
out
bound
cmp
inc
mov
int
push
pop
enter
dec
jp
in
jnp
mov
lret
mov
or
inc
mov
imul
adc
dec
mov
aam
adc
out
daa
or
mov
in
xchg
mov
into
pop
ss
pop
iret
and
hlt
push
stc
push
adc
mov
xor
xor
loop
shrb
fwait
mov
mov
push
stc
lods
bound
adc
and
incb
lock
cmp
into
inc
mov
into
in
popa
xor
mov
inc
mov
xor
or
popf
mov
lret
cmp
repz
pushf
sbb
aaa
mov
dec
push
cmc
notb
jge
ljmp
push
testl
cmpsb
mov
mov
and
jecxz
dec
push
cld
or
stos
sbb
stc
in
jp
enter
xchg
mov
inc
mov
sbb
daa
mov
out
mov
dec
inc
dec
mov
daa
push
xchg
repnz
sbb
and
outsl
xchg
push
icebp
push
mov
enter
inc
dec
mov
ja
aad
mov
ficomps
nop
rolb
fwait
dec
mov
aaa
sub
dec
cld
push
mov
arpl
aam
pop
insl
dec
xor
jae
dec
cmpsl
stc
push
or
lret
xchg
mov
in
sarl
mov
out
mov
dec
mov
std
xor
cmp
int
xor
fistpll
mov
mov
fadd
shll
jmp
mov
lock
aad
push
inc
fwait
hlt
cmp
push
icebp
loope
fstl
and
decb
lods
loop
push
shl
xchg
lahf
rorb
xchg
sub
decb
sub
frndint
push
mov
cltd
sbb
push
or
test
xchg
push
mov
testl
popf
decb
add
jns
push
sti
outsb
xchg
decb
mov
popa
daa
jge
push
mov
sub
jecxz
loop
xchg
jmp
xchg
int
nop
leave
scas
push
inc
lss
repnz
imul
push
xlat
pop
jnp,pt
cwtl
mov
mov
mov
jo
cwtd
push
test
fistps
test
es
imul
dec
mov
push
les
cmp
std
dec
mov
not
in
jl
add
int3
mov
xchg
testb
in
cwtd
mov
sbb
xor
incb
gs
adc
sbb
es
mov
jnp
dec
inc
mov
jmp
jge
cmpsl
and
out
xchg
and
repz
fcomp
in
sub
mov
imul
fdivrs
push
aam
mov
add
mov
or
inc
xor
stos
out
idiv
jg
mov
fldt
cwtl
inc
mov
rorb
stc
pop
cltd
subb
adc
stc
cmpsl
xchg
adc
pop
out
xor
xchg
xchg
xor
and
inc
mov
decb
decb
sbb
pushf
and
fnclex
inc
cld
cmpsb
jo
mov
jne
adc
gs
xchg
pop
lds
xchg
push
dec
mov
jle
test
push
inc
imul
mov
jne
xor
leave
dec
xor
or
mov
xlat
incb
stc
mov
xchg
jae
and
loop
dec
mov
mov
or
pusha
lahf
jbe
push
jecxz
xchg
in
outsl
xchg
mov
mov
adc
inc
xor
icebp
aaa
pusha
lahf
dec
mov
ret
mov
cwtl
add
mov
inc
shll
loope
push
popf
mov
xchg
lea
xchg
jle
xchg
ljmp
lods
sbb
in
fcmovnbe
fisttpl
sbb
ret
aam
fsin
xor
loopne
outsb
xchg
arpl
in
inc
lea
pop
cmp
xchg
lds
cltd
fwait
pusha
lahf
cs
mov
push
cwtl
push
inc
les
mov
stc
stos
add
mov
mov
sarb
xchg
movsb
sub
stos
pop
fists
leave
mov
aaa
xlat
popa
xor
xlat
rcrb
jg
stos
cli
in
pop
pop
loope
sbb
fsin
dec
mov
xor
mov
xchg
sbb
xor
xor
clc
repz
loopne
push
mov
cmp
fwait
push
xor
inc
nop
xor
test
mov
stc
daa
pop
bound
xor
sbbb
xor
sbb
xchg
mov
xchg
push
xchg
cwtd
sbb
stos
adc
xlat
in
sbb
pushf
roll
stc
xor
faddl
sti
sub
incb
cli
jg
mov
rolb
test
popa
mov
cmp
sbb
repnz
out
xor
xchg
fsts
pop
jecxz
xor
add
jle
or
sarl
adc
in
gs
dec
pop
xchg
pop
mov
daa
std
and
xchg
daa
aas
inc
es
xchg
mov
jne
das
cwtl
or
pop
inc
add
pusha
lahf
mov
xor
enter
addb
mov
inc
mov
sub
add
push
idivb
inc
mov
adc
lret
popf
sahf
mov
out
cmp
jl
sbb
pop
pop
push
push
dec
mov
pop
xchg
out
idiv
and
lods
lcall
pop
cmp
pop
or
sar
jb
lahf
cmp
in
pop
and
insb
xchg
hlt
rorb
sbb
popa
lcall
xchg
in
cmpb
mov
jbe
dec
mov
adc
mov
jno
int3
cmp
mov
shll
push
imul
mov
mov
add
and
scas
xchg
cltd
mov
mov
xchg
xchg
pop
xchg
jb
mov
mov
mov
add
lret
pop
jmp
push
es
test
jno
sub
fmulp
mov
fsin
jle
cmc
sahf
add
lret
adc
push
icebp
addr16
mov
pop
repz
sub
cmpsl
jno
sar
push
decb
decb
xor
dec
mov
push
jmp
cli
test
in
adc
sub
out
pop
jge
neg
and
pusha
lahf
pop
mov
stc
incb
incb
jno
out
ja
fdecstp
xchg
pop
fbstp
jnp
cmpl
jl
mov
and
stc
and
push
in
mov
fwait
aad
out
int
dec
out
mov
js
leave
pusha
lahf
decb
inc
mov
xchg
push
mov
adc
divl
sti
inc
mov
pop
push
fstl
cmp
hlt
xor
mull
mov
xchg
and
decb
lods
inc
mov
and
jge
shlb
jg
push
jns
out
mov
repz
fs
scas
push
stc
xlat
jecxz
or
adc
xchg
hlt
int3
mov
test
sbb
cmp
push
clc
les
pop
out
sub
stc
cwtl
test
scas
sub
decb
pop
icebp
inc
mov
fstl
adc
sar
xchg
pop
inc
mov
adcb
lods
adc
jns
add
lahf
testb
cmpsl
es
jmp
pop
call
lds
idivl
sub
repnz
movsl
rcrb
mov
mov
icebp
in
mov
mov
sbb
mov
push
icebp
bound
test
or
jge
pop
push
in
call
mov
bound
adc
in
aas
ret
outsl
sbb
sbb
mov
cmpsl
repz
and
insl
xor
decb
adc
add
repz
insl
push
inc
mov
mulb
sbb
jne
add
enter
xor
pop
das
inc
outsl
ss
pop
xchg
cmp
mov
jae
or
dec
dec
mov
xchg
lock
in
mov
cld
or
cli
sub
inc
add
iret
sub
jo
iret
inc
mov
cs
xchg
aad
clc
add
imul
jb,pt
or
inc
jg
dec
mov
xor
pusha
lahf
adc
cltd
xlat
roll
shl
mov
lock
xor
inc
mov
decb
iret
stos
mov
push
push
std
mov
std
das
adc
push
jle
stc
inc
push
and
and
shll
inc
mov
and
loop
mov
sbb
inc
mov
and
jno
mov
in
cmp
ljmp
divb
jmp
scas
sti
rcrb
pop
and
ljmp
sub
push
sbb
push
fcompl
insl
dec
mov
sbb
fsin
mov
cmc
push
push
inc
adc
mov
sar
pop
dec
lds
xlat
jmp
jg
lahf
mov
inc
mov
lahf
dec
dec
clc
ljmp
sbb
mov
xchg
xchg
fimull
nop
push
jp
pusha
lahf
aad
out
call
ds
fsin
add
xchg
roll
std
rol
sub
popa
fcmovu
cmp
andb
mov
xor
arpl
mov
das
cwtd
mov
mov
xor
sahf
or
xchg
out
sub
cli
stos
outsb
xchg
push
mov
pop
ja
leave
lock
cmp
fists
les
jnp
xchg
decb
sbb
cmpsb
pop
xchg
dec
mov
pop
mov
mov
inc
mov
sarb
xchg
cmp
adc
jp
xchg
and
sbb
xor
jb
xor
sbb
or
jae
add
loop
enter
push
xor
or
cwtd
testb
js
cltd
imul
and
jle
dec
mov
cmpsl
jno
stc
rcrl
rcl
dec
mov
inc
mov
pop
ffree
sti
add
je
cmc
fwait
adc
lret
shrb
ds
out
sti
and
cmp
xchg
mov
pop
fs
pop
in
mov
mov
lret
add
and
gs
imul
push
icebp
incb
xor
mov
mov
cmp
outsl
jne
imul
divb
xchg
jno
push
mov
mov
jle
adc
les
mov
push
and
test
pushf
nop
stos
jge
push
or
daa
daa
xchg
ret
cmp
sub
cmp
xchg
xor
xor
pop
sbb
shll
out
mov
mov
push
imul
fwait
incb
xor
lahf
test
popf
mov
mov
ds
dec
loope
mov
imul
lea
cmp
mov
scas
xchg
and
idivl
stc
xchg
xor
test
cmp
xchg
dec
outsb
xchg
dec
fisubl
fsin
shll
ret
sarb
sub
xchg
mov
arpl
mov
ja
mov
repnz
mov
fst
ljmp
mov
mov
sbb
sub
repz
scas
or
ds
stos
repz
je
lahf
mov
enter
movsb
clc
sbb
mov
aas
and
mov
mov
push
icebp
cmp
insb
xchg
sbb
cs
in
xor
movsl
and
arpl
and
adc
jno
pushf
out
bnd
arpl
in
hlt
shll
mov
lds
fs
icebp
mov
fsin
sarl
int
dec
out
fdivl
mov
pusha
lahf
pusha
lahf
lcall
cltd
loope
inc
mov
pop
cmp
leave
sbb
scas
bswap
lock
scas
imul
outsl
mov
stc
pop
addb
cli
gs
mov
mov
xor
pop
pop
push
jecxz
xor
or
pop
and
gs
aad
andb
shlb
mov
cmp
mov
mov
cmp
mov
jbe
adc
sti
std
daa
mov
inc
xor
lods
sahf
jo
cs
jb
icebp
les
pop
insb
xchg
sub
lds
fsin
mov
imul
mov
inc
mov
clc
ja
fsin
push
outsl
fsts
je
je
cwtl
fnstcw
sbb
jne
mov
push
push
lcall
idiv
push
add
incb
cmp
loopne
mov
mov
ljmp
jno
mov
inc
movsb
scas
negb
jae
jne
xorl
xor
test
movsl
xor
subb
push
sub
mov
xor
mov
sub
mov
in
test
mov
sub
test
lcall
sarl
mov
push
stos
and
divl
loope
sub
inc
inc
nop
bound
sbb
or
scas
push
cld
out
loope
sub
xor
into
adc
push
sbbb
scas
xor
add
stos
sbb
adc
fwait
push
mov
sar
mov
ds
mov
sbb
and
mov
add
idiv
ljmp
pop
pop
mov
mov
leave
jb
jne
and
out
icebp
decb
xchg
mov
int3
mov
aaa
stc
inc
fildll
jo
mov
lret
mov
mov
mov
inc
mov
xchg
decb
dec
mov
movsb
addr16
adc
xor
mov
mov
std
inc
aad
sub
pop
hlt
xchg
sbb
dec
add
sub
mov
mov
add
pop
cmp
dec
mov
pop
jb
fisubrs
push
lret
xlat
and
adc
adc
daa
sarb
jbe
or
in
orl
xchg
mov
mov
rorl
xor
jp
mov
icebp
xor
dec
mov
xchg
mov
stc
pop
pusha
lahf
in
add
insl
mov
xchg
push
ret
stc
mov
xor
bound
cld
xchg
jmp
mov
push
sbb
lret
out
divb
mov
jge
outsl
js
mov
dec
popa
stos
mov
or
aad
pop
sbb
rclb
push
dec
mov
adc
mov
sbb
or
pop
cmp
stc
jp
in
fwait
popa
mov
jb
out
add
push
mov
cmp
mov
incb
xchg
aad
xchg
insb
xchg
adc
xor
aam
hlt
sbb
xchg
shlb
mov
xchg
fcomps
mov
add
dec
mov
in
leave
.byte
